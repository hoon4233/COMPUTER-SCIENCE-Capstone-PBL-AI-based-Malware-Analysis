inc
xchg
add
add
add
add
add
add
add
add
add
push
je
add
mov
jb
add
add
add
add
add
add
sub
add
add
add
sub
or
jae
add
or
jae
add
or
jae
add
or
sub
add
xor
add
add
add
add
adc
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
xor
add
add
adc
add
adc
add
sub
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
add
adc
add
sub
adc
add
pop
add
add
add
adc
sub
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
push
add
pop
add
or
adc
add
sbb
add
or
add
jle
add
or
or
add
add
sbb
add
jle
add
or
push
add
pop
add
or
push
add
sbb
adc
pop
add
add
or
add
jb
add
jo
add
adc
or
ficom
adc
pop
sub
adc
outs
pop
add
or
punpcklwd
and
add
sub
add
or
and
add
adc
adc
pop
(bad)
adc
adc
adc
xor
sub
add
or
outs
pop
add
or
and
add
adc
sub
add
or
and
add
sub
push
add
add
pop
add
push
adc
jne
add
lea
add
add
adc
adc
jb
add
jo
adc
adc
adc
add
or
daa
add
or
add
add
adc
add
or
pop
add
push
adc
jne
add
lea
add
add
adc
adc
jb
add
jo
adc
adc
adc
add
or
daa
add
or
movaps
add
or
ficomp
fmul
or
adc
or
push
adc
pop
mov
adc
xchg
adc
or
or
mov
adc
pop
(bad)
adc
adc
adc
popa
adc
or
mov
or
adc
xchg
ficom
or
add
add
adc
pop
adc
adc
sub
add
push
mov
adc
pop
(bad)
adc
adc
adc
xor
mov
fisubr
add
add
pop
sub
push
jb
add
jo
sub
add
sub
add
or
add
sub
push
add
push
sub
add
xor
add
add
add
and
add
add
adc
add
add
add
add
adc
pop
(bad)
lea
add
add
jo
push
sub
add
or
add
add
sub
pop
or
or
add
or
adc
jmp
add
adc
add
sldt
adc
add
add
jb
add
jo
sub
add
sub
add
xor
add
add
adc
add
add
add
jo
add
add
adc
pop
add
add
stos
add
jo
sub
add
sub
add
or
lea
add
add
add
or
adc
or
jl
add
adc
add
sbb
adc
adc
push
jb
add
jo
adc
pop
sub
add
or
rol
add
adc
add
or
add
or
ficom
pop
adc
or
add
or
popa
sub
add
or
and
add
sub
add
or
add
add
adc
and
add
add
push
add
add
add
or
adc
lea
add
add
add
or
mov
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
sub
sbb
cmp
ss
or
add
add
add
add
add
add
add
add
popa
add
bound
inc
add
add
add
or
push
add
push
add
xor
add
adc
add
ja
dec
add
inc
add
dec
add
dec
add
add
add
js
dec
add
dec
add
inc
test
add
das
xor
sub
inc
sub
xor
inc
inc
sub
xor
cmp
inc
sub
aaa
sub
add
add
adc
add
aaa
sub
inc
sub
aaa
sub
cmp
inc
sub
xor
xor
aaa
sub
inc
sub
xor
inc
sub
inc
sub
xor
inc
sub
inc
sub
xor
inc
sub
ss
inc
sub
inc
sub
xor
inc
sub
xor
xor
inc
sub
inc
sub
xor
inc
sub
xor
inc
sub
ss
xor
inc
sub
ss
xor
inc
sub
xor
cmp
xor
xor
xor
sub
inc
sub
xor
xor
xor
cmp
inc
sub
inc
sub
inc
sub
xor
ss
sub
inc
sub
xor
xor
sub
inc
sub
xor
inc
xor
inc
sub
inc
sub
xor
ss
sub
xor
inc
inc
sub
aaa
sub
xor
xor
inc
sub
aaa
sub
inc
sub
aaa
sub
inc
sub
aaa
sub
xor
inc
sub
inc
sub
xor
inc
xor
aaa
xor
cmp
xor
xor
xor
inc
sub
inc
sub
xor
inc
xor
cmp
aaa
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
cmp
cmp
xor
xor
inc
xor
xor
sub
xor
cmp
xor
cmp
inc
sub
ss
xor
xor
sub
xor
inc
sub
inc
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
cmp
cmp
xor
xor
aaa
sub
inc
sub
inc
sub
xor
xor
inc
sub
xor
inc
inc
sub
cmp
inc
sub
xor
xor
cmp
inc
sub
xor
xor
inc
sub
xor
xor
xor
sub
xor
inc
sub
inc
sub
xor
xor
sub
xor
inc
aaa
sub
inc
sub
xor
inc
sub
xor
xor
cmp
inc
sub
xor
xor
xor
ss
inc
sub
inc
sub
inc
sub
cmp
xor
xor
inc
xor
inc
inc
sub
xor
xor
xor
sub
xor
aaa
sub
aaa
sub
inc
sub
xor
inc
sub
aaa
sub
inc
sub
xor
cmp
inc
inc
sub
inc
sub
inc
sub
xor
xor
cmp
xor
cmp
xor
inc
sub
xor
xor
inc
sub
xor
inc
sub
inc
sub
xor
inc
sub
xor
xor
inc
xor
xor
inc
cmp
ss
cmp
inc
sub
inc
sub
ss
xor
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
xor
inc
sub
ss
xor
inc
xor
ss
inc
sub
inc
sub
cmp
cmp
ss
xor
xor
sub
cmp
xor
inc
sub
xor
inc
xor
ss
inc
sub
aaa
sub
inc
sub
inc
sub
ss
cmp
inc
sub
inc
sub
xor
xor
xor
sub
cmp
ss
cmp
inc
sub
inc
sub
inc
sub
inc
sub
xor
ss
xor
sub
xor
cmp
xor
inc
xor
cmp
xor
xor
inc
sub
xor
inc
sub
cmp
inc
sub
aaa
sub
xor
xor
xor
xor
ss
xor
xor
xor
xor
sub
inc
sub
aaa
sub
cmp
inc
sub
xor
aaa
sub
inc
sub
aaa
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
inc
sub
inc
sub
inc
sub
xor
aaa
sub
cmp
ss
inc
sub
aaa
sub
inc
sub
inc
sub
xor
inc
inc
sub
inc
sub
xor
inc
inc
sub
inc
sub
inc
sub
ss
cmp
aaa
sub
xor
inc
inc
sub
aaa
sub
inc
sub
cmp
inc
sub
inc
sub
xor
inc
sub
xor
cmp
aaa
xor
xor
inc
sub
inc
sub
ss
xor
inc
cmp
aaa
sub
inc
sub
xor
inc
cmp
inc
sub
xor
xor
inc
xor
xor
ss
aaa
sub
xor
inc
sub
aaa
sub
aaa
sub
inc
sub
xor
inc
aaa
sub
xor
xor
xor
inc
sub
xor
xor
aaa
inc
sub
cmp
xor
aaa
sub
ss
ss
inc
sub
cmp
xor
xor
xor
sub
xor
inc
sub
inc
sub
xor
ss
aaa
sub
xor
aaa
cmp
inc
sub
xor
xor
sub
inc
sub
xor
aaa
xor
ss
inc
sub
inc
sub
inc
sub
xor
inc
sub
xor
inc
sub
inc
sub
xor
inc
inc
sub
aaa
sub
xor
xor
sub
xor
xor
inc
sub
xor
ss
xor
sub
xor
xor
xor
inc
aaa
sub
aaa
sub
xor
inc
sub
xor
cmp
xor
inc
sub
xor
inc
xor
inc
sub
xor
xor
cmp
xor
xor
sub
xor
xor
xor
inc
sub
ss
inc
sub
xor
inc
sub
xor
cmp
sub
xor
xor
sub
xor
inc
cmp
xor
xor
aaa
sub
cmp
xor
aaa
inc
sub
xor
inc
sub
cmp
inc
sub
cmp
cmp
xor
inc
inc
sub
ss
xor
cmp
cmp
ss
inc
sub
aaa
sub
inc
sub
cmp
xor
xor
xor
xor
aaa
sub
xor
ss
xor
inc
sub
cmp
inc
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
cmp
xor
xor
cmp
inc
sub
inc
sub
inc
sub
aaa
sub
cmp
xor
xor
inc
xor
inc
sub
inc
sub
inc
sub
xor
xor
aaa
sub
cmp
ss
ss
cmp
cmp
xor
xor
sub
inc
sub
xor
xor
xor
xor
sub
inc
sub
xor
xor
xor
xor
sub
xor
inc
sub
inc
sub
inc
sub
cmp
inc
sub
cmp
inc
sub
xor
xor
cmp
xor
sub
aaa
sub
ss
inc
sub
inc
sub
ss
xor
inc
sub
xor
cmp
sub
inc
sub
xor
inc
sub
inc
sub
inc
sub
ss
cmp
xor
inc
cmp
inc
sub
inc
sub
ss
xor
inc
cmp
xor
xor
sub
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
cmp
xor
cmp
inc
sub
inc
sub
xor
inc
sub
inc
sub
inc
sub
xor
inc
xor
ss
inc
sub
xor
xor
inc
sub
xor
inc
sub
xor
ss
cmp
xor
xor
aaa
sub
inc
sub
inc
sub
inc
sub
ss
inc
sub
inc
sub
inc
sub
cmp
cmp
xor
inc
sub
xor
xor
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
aaa
inc
sub
inc
sub
xor
cmp
inc
sub
xor
inc
inc
sub
ss
cmp
inc
sub
inc
sub
ss
xor
xor
ss
sub
xor
cmp
xor
xor
sub
inc
sub
ss
inc
sub
cmp
inc
sub
inc
sub
xor
inc
inc
sub
inc
sub
xor
inc
sub
inc
sub
aaa
sub
xor
inc
sub
xor
xor
sub
xor
xor
cmp
inc
xor
cmp
sub
aaa
sub
ss
inc
sub
aaa
sub
cmp
cmp
xor
inc
sub
cmp
inc
sub
inc
sub
aaa
sub
ss
inc
sub
xor
xor
xor
inc
sub
inc
sub
inc
sub
ss
inc
sub
cmp
xor
inc
ss
inc
sub
cmp
xor
inc
sub
aaa
sub
aaa
sub
aaa
sub
xor
inc
sub
inc
sub
xor
inc
sub
xor
cmp
inc
sub
xor
inc
sub
inc
sub
inc
sub
ss
xor
xor
xor
sub
inc
sub
xor
cmp
sub
xor
inc
inc
sub
inc
sub
xor
inc
inc
sub
inc
sub
xor
inc
inc
sub
aaa
sub
xor
inc
ss
xor
xor
xor
ss
cmp
xor
xor
sub
inc
sub
inc
sub
cmp
xor
xor
sub
xor
aaa
sub
inc
sub
xor
xor
aaa
sub
inc
sub
xor
xor
xor
sub
inc
sub
xor
ss
sub
aaa
sub
ss
ss
xor
inc
aaa
sub
xor
cmp
cmp
cmp
inc
sub
cmp
xor
xor
xor
sub
ss
xor
xor
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
inc
sub
xor
xor
inc
sub
cmp
xor
xor
xor
xor
xor
sub
aaa
sub
inc
sub
inc
sub
xor
xor
aaa
inc
sub
xor
inc
sub
aaa
sub
ss
ss
xor
inc
sub
xor
inc
sub
cmp
ss
xor
inc
sub
inc
sub
xor
aaa
sub
xor
ss
xor
cmp
sub
xor
xor
xor
aaa
sub
inc
sub
xor
xor
aaa
cmp
xor
xor
xor
inc
inc
sub
xor
xor
cmp
sub
xor
xor
sub
cmp
aaa
sub
inc
sub
xor
inc
sub
inc
sub
xor
xor
xor
sub
xor
xor
sub
inc
sub
cmp
inc
sub
xor
xor
sub
inc
sub
ss
inc
sub
inc
sub
xor
ss
sub
xor
inc
inc
sub
cmp
inc
sub
cmp
xor
cmp
xor
cmp
inc
cmp
ss
ss
inc
sub
inc
sub
cmp
inc
sub
xor
aaa
sub
cmp
inc
sub
inc
sub
xor
inc
inc
sub
inc
sub
xor
inc
sub
xor
inc
sub
inc
sub
xor
xor
sub
inc
sub
inc
sub
xor
inc
sub
inc
sub
xor
ss
sub
inc
sub
inc
sub
cmp
xor
xor
xor
inc
sub
xor
xor
xor
xor
inc
sub
cmp
ss
xor
inc
sub
inc
sub
xor
inc
sub
inc
sub
inc
sub
aaa
sub
xor
xor
inc
sub
inc
sub
cmp
inc
sub
xor
aaa
sub
xor
ss
sub
xor
inc
cmp
xor
inc
sub
inc
sub
inc
sub
inc
sub
cmp
xor
xor
xor
inc
sub
xor
xor
inc
sub
inc
sub
cmp
xor
xor
xor
aaa
xor
inc
sub
xor
ss
xor
aaa
xor
cmp
xor
inc
xor
inc
inc
sub
xor
inc
xor
xor
cmp
sub
aaa
sub
xor
inc
ss
ss
inc
sub
aaa
sub
inc
sub
cmp
xor
xor
cmp
sub
cmp
xor
xor
inc
sub
xor
ss
xor
cmp
cmp
xor
xor
sub
inc
sub
xor
xor
xor
inc
sub
xor
xor
xor
aaa
sub
ss
xor
xor
sub
xor
xor
inc
sub
inc
sub
ss
xor
cmp
ss
xor
xor
inc
aaa
sub
xor
inc
sub
xor
xor
sub
aaa
sub
cmp
xor
inc
xor
inc
aaa
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
ss
inc
sub
ss
xor
xor
xor
inc
sub
xor
cmp
inc
sub
xor
xor
inc
xor
xor
xor
inc
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
xor
inc
sub
aaa
sub
ss
inc
sub
xor
inc
sub
inc
sub
xor
inc
xor
ss
xor
inc
sub
xor
inc
sub
inc
sub
xor
cmp
ss
inc
sub
xor
inc
sub
xor
inc
xor
cmp
inc
xor
cmp
inc
sub
xor
inc
sub
xor
xor
cmp
inc
sub
cmp
cmp
inc
sub
cmp
aaa
sub
xor
xor
xor
xor
inc
sub
inc
sub
cmp
xor
xor
xor
inc
sub
xor
xor
xor
inc
inc
sub
inc
sub
xor
xor
inc
sub
cmp
inc
sub
xor
xor
inc
sub
inc
sub
xor
xor
xor
sub
inc
sub
inc
sub
inc
sub
xor
xor
cmp
inc
sub
xor
cmp
xor
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
inc
sub
ss
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
ss
cmp
inc
sub
cmp
xor
cmp
xor
cmp
xor
sub
aaa
sub
xor
ss
inc
sub
xor
inc
sub
ss
xor
cmp
cmp
xor
sub
xor
inc
sub
inc
sub
xor
xor
xor
xor
sub
xor
xor
cmp
xor
sub
inc
sub
inc
sub
ss
inc
sub
xor
inc
sub
inc
sub
inc
sub
xor
inc
sub
xor
cmp
xor
cmp
cmp
cmp
inc
sub
inc
sub
aaa
sub
cmp
xor
inc
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
xor
xor
xor
xor
inc
sub
xor
aaa
inc
sub
xor
xor
sub
ss
xor
cmp
aaa
sub
inc
sub
xor
cmp
xor
inc
xor
xor
inc
sub
xor
inc
inc
sub
inc
sub
cmp
xor
xor
sub
xor
cmp
cmp
inc
sub
xor
cmp
cmp
ss
xor
aaa
sub
cmp
inc
sub
xor
inc
sub
aaa
sub
cmp
xor
aaa
cmp
cmp
inc
sub
aaa
sub
cmp
cmp
inc
sub
inc
sub
inc
sub
xor
inc
xor
ss
cmp
ss
inc
sub
xor
inc
cmp
ss
ss
xor
aaa
inc
sub
xor
inc
sub
inc
sub
inc
sub
xor
xor
inc
sub
inc
sub
ss
inc
sub
xor
ss
xor
xor
inc
sub
xor
xor
inc
inc
sub
inc
sub
aaa
sub
inc
sub
inc
sub
aaa
sub
xor
xor
sub
xor
xor
cmp
ss
xor
inc
inc
sub
inc
sub
inc
sub
cmp
xor
inc
sub
inc
sub
xor
xor
xor
xor
xor
cmp
inc
sub
inc
sub
xor
aaa
sub
xor
inc
sub
inc
sub
cmp
xor
inc
sub
xor
inc
sub
ss
aaa
sub
inc
sub
xor
inc
ss
inc
sub
xor
xor
inc
sub
aaa
sub
inc
sub
inc
sub
xor
xor
xor
ss
inc
sub
inc
sub
xor
xor
sub
ss
xor
aaa
inc
sub
xor
cmp
inc
sub
inc
sub
cmp
cmp
inc
sub
xor
inc
sub
xor
cmp
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
xor
cmp
inc
inc
sub
inc
sub
cmp
ss
xor
inc
sub
xor
inc
sub
xor
ss
sub
xor
aaa
sub
aaa
sub
cmp
xor
inc
sub
ss
inc
sub
xor
ss
cmp
xor
cmp
inc
sub
xor
xor
xor
inc
sub
xor
xor
xor
xor
xor
xor
sub
aaa
sub
xor
xor
inc
sub
xor
cmp
aaa
sub
xor
xor
inc
inc
sub
cmp
cmp
inc
sub
ss
xor
inc
sub
xor
inc
xor
xor
sub
xor
inc
sub
inc
sub
xor
inc
sub
inc
sub
ss
cmp
xor
xor
inc
sub
aaa
sub
cmp
inc
sub
inc
sub
xor
inc
sub
aaa
sub
xor
inc
sub
inc
sub
xor
inc
aaa
sub
xor
xor
sub
cmp
ss
cmp
xor
cmp
aaa
sub
xor
inc
sub
inc
sub
xor
xor
inc
sub
inc
sub
xor
inc
xor
xor
aaa
inc
sub
xor
ss
xor
cmp
inc
sub
inc
sub
xor
ss
sub
inc
sub
xor
inc
inc
sub
inc
sub
xor
xor
xor
sub
inc
sub
xor
xor
aaa
xor
xor
xor
sub
inc
sub
xor
aaa
sub
inc
sub
inc
sub
ss
xor
xor
sub
xor
inc
sub
xor
xor
sub
inc
sub
cmp
inc
sub
inc
sub
inc
sub
aaa
sub
xor
inc
sub
xor
aaa
sub
xor
inc
sub
xor
cmp
inc
inc
sub
xor
inc
xor
xor
inc
aaa
sub
cmp
xor
inc
xor
ss
aaa
sub
inc
sub
inc
sub
xor
inc
sub
xor
cmp
xor
cmp
xor
cmp
inc
sub
xor
xor
xor
sub
aaa
sub
inc
sub
xor
inc
xor
cmp
xor
xor
xor
xor
xor
sub
inc
sub
inc
sub
inc
sub
inc
sub
ss
inc
sub
inc
sub
xor
inc
xor
ss
xor
inc
sub
inc
sub
xor
cmp
cmp
ss
inc
sub
xor
xor
xor
sub
xor
inc
sub
xor
inc
cmp
cmp
inc
sub
xor
inc
sub
inc
sub
cmp
cmp
cmp
xor
xor
inc
sub
xor
aaa
cmp
inc
sub
xor
inc
sub
ss
inc
sub
ss
aaa
sub
xor
inc
sub
inc
sub
inc
sub
cmp
ss
inc
sub
inc
sub
xor
cmp
inc
sub
inc
sub
inc
sub
inc
sub
ss
xor
cmp
inc
sub
inc
sub
aaa
sub
xor
ss
inc
sub
cmp
xor
inc
sub
xor
aaa
sub
inc
sub
inc
sub
ss
xor
inc
sub
inc
sub
inc
sub
cmp
cmp
inc
sub
inc
sub
xor
xor
sub
xor
inc
sub
inc
sub
inc
sub
cmp
cmp
xor
ss
cmp
xor
ss
xor
cmp
xor
inc
xor
xor
sub
ss
xor
inc
sub
inc
sub
ss
inc
sub
xor
inc
sub
inc
sub
inc
sub
xor
inc
cmp
inc
sub
aaa
sub
xor
xor
inc
sub
xor
inc
sub
xor
xor
sub
xor
inc
sub
xor
aaa
sub
aaa
sub
xor
inc
sub
inc
sub
inc
sub
xor
xor
ss
ss
xor
inc
sub
inc
sub
inc
sub
xor
inc
sub
ss
inc
sub
xor
inc
sub
ss
ss
inc
sub
inc
sub
inc
sub
xor
xor
inc
cmp
xor
xor
xor
inc
sub
xor
cmp
inc
xor
cmp
cmp
inc
sub
inc
sub
xor
xor
aaa
sub
inc
sub
inc
sub
inc
sub
xor
inc
sub
xor
xor
inc
cmp
xor
inc
sub
xor
inc
ss
cmp
xor
inc
aaa
sub
inc
sub
inc
sub
inc
sub
ss
inc
sub
xor
xor
sub
xor
xor
xor
inc
sub
aaa
sub
inc
sub
inc
sub
cmp
cmp
xor
inc
sub
inc
sub
cmp
aaa
sub
xor
inc
sub
inc
sub
inc
sub
cmp
inc
sub
xor
xor
inc
sub
xor
xor
xor
sub
aaa
sub
inc
sub
xor
inc
inc
sub
aaa
sub
ss
xor
inc
sub
inc
sub
xor
xor
inc
cmp
aaa
sub
xor
xor
ss
xor
xor
inc
xor
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
inc
sub
inc
sub
inc
sub
inc
sub
cmp
xor
xor
sub
cmp
inc
sub
xor
inc
sub
xor
xor
ss
inc
sub
cmp
inc
sub
ss
inc
sub
cmp
inc
sub
xor
xor
xor
cmp
aaa
sub
xor
inc
sub
ss
inc
sub
aaa
sub
xor
xor
inc
aaa
sub
xor
inc
xor
ss
sub
ss
ss
xor
xor
ss
sub
xor
xor
inc
sub
cmp
inc
sub
xor
aaa
sub
inc
sub
xor
xor
ss
inc
sub
inc
sub
cmp
inc
sub
xor
cmp
inc
sub
inc
sub
cmp
aaa
sub
inc
sub
inc
sub
inc
sub
xor
inc
inc
sub
inc
sub
ss
inc
sub
inc
sub
aaa
sub
inc
sub
inc
sub
xor
inc
cmp
xor
xor
sub
xor
xor
xor
xor
inc
xor
xor
cmp
sub
cmp
xor
aaa
inc
sub
inc
sub
aaa
sub
inc
sub
inc
sub
inc
sub
xor
xor
aaa
sub
cmp
xor
xor
cmp
cmp
cmp
inc
sub
xor
cmp
cmp
xor
xor
xor
sub
inc
sub
inc
sub
inc
sub
ss
xor
xor
aaa
inc
sub
ss
inc
sub
inc
sub
xor
xor
cmp
xor
xor
sub
cmp
cmp
xor
xor
xor
xor
ss
sub
xor
inc
sub
cmp
ss
cmp
xor
xor
inc
cmp
inc
sub
cmp
inc
sub
inc
sub
inc
sub
cmp
xor
ss
inc
sub
xor
xor
cmp
sub
inc
sub
xor
aaa
xor
inc
sub
xor
cmp
xor
sub
aaa
sub
inc
sub
xor
inc
sub
cmp
xor
xor
inc
aaa
sub
ss
inc
sub
inc
sub
aaa
sub
xor
aaa
sub
xor
xor
inc
cmp
inc
sub
inc
sub
ss
inc
sub
inc
sub
xor
cmp
cmp
xor
inc
xor
inc
cmp
cmp
inc
sub
xor
inc
ss
xor
cmp
inc
sub
xor
inc
inc
sub
xor
inc
xor
cmp
inc
xor
inc
sub
xor
inc
sub
inc
sub
xor
cmp
xor
cmp
sub
inc
sub
xor
cmp
aaa
sub
xor
xor
xor
xor
xor
sub
cmp
xor
xor
cmp
xor
inc
sub
inc
sub
inc
sub
xor
xor
xor
cmp
inc
sub
xor
cmp
cmp
inc
sub
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
aaa
xor
xor
xor
sub
xor
aaa
sub
inc
sub
inc
sub
ss
cmp
xor
xor
xor
inc
sub
inc
sub
inc
sub
xor
xor
inc
sub
inc
sub
cmp
inc
sub
inc
sub
inc
sub
xor
xor
inc
sub
aaa
sub
xor
aaa
aaa
sub
inc
sub
cmp
ss
cmp
inc
sub
xor
inc
sub
xor
inc
xor
xor
inc
sub
inc
sub
ss
xor
inc
sub
xor
xor
xor
sub
xor
xor
xor
cmp
xor
inc
sub
xor
inc
cmp
xor
inc
ss
cmp
xor
xor
inc
inc
sub
cmp
inc
sub
inc
sub
xor
cmp
inc
inc
sub
inc
sub
inc
sub
xor
cmp
sub
xor
aaa
sub
ss
inc
sub
ss
inc
sub
xor
xor
sub
inc
sub
xor
inc
ss
aaa
sub
cmp
aaa
sub
inc
sub
xor
aaa
sub
xor
xor
inc
sub
cmp
xor
inc
xor
cmp
inc
sub
xor
cmp
inc
sub
xor
inc
xor
cmp
xor
aaa
sub
inc
sub
xor
xor
xor
sub
inc
sub
ss
xor
aaa
sub
cmp
inc
sub
ss
inc
sub
xor
xor
xor
xor
ss
xor
inc
sub
xor
inc
sub
ss
ss
xor
inc
sub
xor
inc
xor
inc
sub
xor
inc
sub
xor
xor
sub
inc
sub
cmp
cmp
xor
cmp
inc
sub
inc
sub
inc
sub
inc
sub
cmp
ss
xor
ss
inc
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
xor
inc
xor
inc
sub
cmp
xor
xor
inc
sub
xor
xor
inc
sub
xor
inc
sub
cmp
inc
sub
cmp
xor
xor
xor
inc
sub
xor
inc
xor
ss
ss
ss
inc
sub
inc
sub
inc
sub
xor
xor
inc
sub
inc
sub
xor
xor
inc
sub
inc
sub
inc
sub
ss
xor
aaa
sub
inc
sub
xor
inc
sub
xor
xor
inc
sub
inc
sub
aaa
sub
inc
sub
xor
xor
inc
sub
inc
sub
xor
xor
xor
cmp
xor
inc
sub
inc
sub
xor
xor
xor
sub
inc
sub
ss
inc
sub
inc
sub
aaa
sub
xor
aaa
sub
aaa
sub
inc
sub
inc
sub
xor
xor
xor
sub
inc
sub
inc
sub
cmp
cmp
inc
sub
xor
xor
inc
sub
inc
sub
cmp
xor
xor
xor
inc
ss
inc
sub
xor
xor
cmp
sub
inc
sub
xor
xor
sub
xor
xor
inc
sub
xor
inc
xor
aaa
inc
sub
inc
sub
xor
xor
xor
aaa
inc
sub
ss
xor
xor
cmp
inc
xor
xor
xor
xor
sub
xor
xor
xor
inc
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
cmp
aaa
sub
aaa
sub
xor
cmp
xor
inc
sub
inc
sub
cmp
inc
sub
xor
inc
inc
sub
xor
inc
xor
xor
inc
aaa
sub
xor
inc
cmp
xor
inc
inc
sub
ss
xor
xor
aaa
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
inc
sub
inc
sub
xor
xor
cmp
xor
inc
sub
xor
inc
sub
inc
sub
cmp
cmp
inc
sub
inc
sub
inc
sub
xor
inc
inc
sub
xor
xor
inc
cmp
xor
xor
inc
sub
xor
inc
sub
ss
inc
sub
xor
inc
sub
xor
inc
sub
xor
inc
sub
aaa
sub
cmp
cmp
inc
sub
xor
xor
cmp
sub
xor
inc
sub
inc
sub
inc
sub
xor
ss
sub
inc
sub
xor
inc
inc
sub
xor
aaa
sub
inc
sub
cmp
inc
sub
cmp
xor
xor
xor
xor
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
cmp
xor
ss
inc
sub
ss
xor
aaa
sub
inc
sub
inc
sub
xor
inc
sub
xor
xor
xor
inc
xor
inc
sub
xor
cmp
sub
inc
sub
xor
inc
inc
sub
cmp
cmp
xor
inc
sub
inc
sub
inc
sub
xor
xor
inc
xor
xor
cmp
xor
xor
aaa
sub
xor
inc
xor
aaa
sub
xor
aaa
sub
xor
inc
cmp
xor
inc
sub
inc
sub
inc
sub
inc
sub
cmp
xor
xor
cmp
xor
xor
xor
inc
inc
sub
cmp
xor
inc
sub
inc
sub
xor
xor
inc
xor
xor
xor
cmp
xor
inc
sub
xor
xor
inc
sub
cmp
inc
sub
ss
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
sub
inc
sub
xor
cmp
sub
xor
inc
xor
cmp
cmp
inc
sub
inc
sub
xor
xor
sub
ss
xor
xor
sub
xor
inc
sub
xor
cmp
xor
cmp
inc
sub
xor
inc
aaa
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
sub
inc
sub
xor
xor
inc
sub
xor
inc
sub
xor
aaa
sub
xor
inc
xor
aaa
ss
xor
xor
xor
cmp
xor
cmp
xor
inc
xor
inc
cmp
cmp
ss
xor
cmp
cmp
cmp
inc
sub
xor
inc
sub
xor
ss
inc
sub
inc
sub
inc
sub
xor
inc
xor
inc
sub
aaa
sub
cmp
inc
sub
xor
ss
xor
ss
xor
inc
sub
cmp
cmp
cmp
ss
xor
inc
sub
xor
ss
xor
inc
xor
inc
cmp
xor
ss
xor
inc
sub
xor
aaa
sub
inc
sub
xor
inc
xor
inc
sub
inc
sub
inc
sub
xor
xor
ss
inc
sub
inc
sub
cmp
xor
ss
inc
sub
aaa
sub
inc
sub
inc
sub
aaa
sub
inc
sub
xor
inc
inc
sub
xor
xor
sub
aaa
sub
aaa
sub
xor
cmp
inc
sub
inc
sub
xor
inc
sub
xor
ss
xor
inc
sub
cmp
xor
inc
sub
inc
sub
cmp
xor
aaa
sub
cmp
ss
inc
sub
cmp
xor
xor
cmp
inc
sub
ss
inc
sub
inc
sub
xor
cmp
sub
inc
sub
inc
sub
xor
xor
xor
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
inc
xor
cmp
xor
inc
xor
inc
sub
cmp
xor
inc
sub
cmp
xor
xor
sub
xor
inc
sub
xor
ss
xor
xor
xor
inc
sub
aaa
sub
inc
sub
cmp
aaa
sub
aaa
sub
inc
sub
inc
sub
inc
sub
xor
xor
sub
cmp
xor
inc
sub
inc
sub
inc
sub
ss
xor
inc
sub
xor
inc
inc
sub
xor
xor
aaa
sub
inc
sub
inc
sub
ss
xor
cmp
xor
xor
sub
inc
sub
xor
ss
inc
sub
xor
cmp
sub
cmp
xor
cmp
cmp
inc
sub
inc
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
sub
xor
cmp
inc
sub
inc
sub
inc
sub
xor
xor
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
xor
ss
inc
sub
inc
sub
ss
xor
inc
xor
inc
ss
xor
aaa
cmp
ss
ss
ss
aaa
sub
xor
aaa
inc
sub
cmp
xor
xor
sub
inc
sub
xor
inc
sub
inc
sub
cmp
inc
sub
inc
sub
xor
aaa
sub
inc
sub
xor
inc
sub
xor
xor
sub
inc
sub
xor
xor
xor
xor
inc
sub
xor
xor
sub
xor
aaa
sub
inc
sub
cmp
ss
aaa
sub
xor
inc
sub
cmp
xor
inc
sub
inc
sub
xor
xor
inc
sub
cmp
xor
inc
sub
ss
xor
inc
sub
inc
sub
xor
cmp
inc
cmp
inc
sub
inc
sub
aaa
sub
xor
inc
sub
xor
inc
sub
cmp
inc
sub
aaa
sub
xor
inc
sub
ss
cmp
xor
cmp
xor
cmp
sub
inc
sub
xor
inc
sub
ss
xor
inc
sub
xor
cmp
inc
sub
xor
ss
inc
sub
aaa
sub
inc
sub
inc
sub
cmp
inc
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
inc
sub
xor
inc
sub
xor
xor
sub
xor
xor
inc
sub
ss
xor
xor
ss
sub
inc
sub
inc
sub
inc
sub
cmp
cmp
inc
sub
inc
sub
xor
inc
sub
inc
sub
xor
inc
sub
inc
sub
inc
sub
ss
xor
aaa
xor
xor
sub
inc
sub
inc
sub
aaa
sub
inc
sub
cmp
inc
sub
xor
xor
xor
sub
aaa
sub
cmp
ss
inc
sub
cmp
inc
sub
xor
inc
xor
aaa
xor
xor
xor
xor
sub
aaa
sub
cmp
aaa
sub
inc
sub
xor
aaa
inc
sub
aaa
sub
xor
inc
cmp
aaa
sub
inc
sub
inc
sub
xor
xor
inc
sub
inc
sub
inc
sub
xor
inc
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
sub
cmp
xor
xor
aaa
xor
ss
xor
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
cmp
inc
sub
xor
ss
cmp
inc
sub
ss
xor
xor
xor
ss
inc
sub
xor
xor
inc
xor
xor
sub
ss
cmp
cmp
inc
sub
inc
sub
ss
inc
sub
cmp
inc
sub
inc
sub
xor
xor
sub
xor
cmp
xor
inc
sub
inc
sub
xor
ss
xor
xor
xor
sub
xor
cmp
sub
inc
sub
xor
inc
sub
xor
xor
sub
xor
xor
ss
sub
inc
sub
xor
cmp
inc
ss
cmp
inc
sub
ss
inc
sub
inc
sub
xor
inc
xor
cmp
inc
sub
xor
xor
inc
cmp
inc
sub
cmp
cmp
ss
cmp
xor
inc
sub
ss
cmp
cmp
xor
inc
sub
inc
sub
xor
xor
ss
inc
cmp
cmp
inc
sub
cmp
aaa
sub
inc
sub
inc
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
cmp
xor
xor
sub
xor
xor
sub
inc
sub
xor
ss
xor
xor
sub
inc
sub
cmp
xor
xor
sub
xor
aaa
sub
inc
sub
xor
inc
sub
inc
sub
inc
sub
ss
inc
sub
cmp
aaa
sub
xor
inc
sub
xor
cmp
inc
inc
sub
cmp
xor
inc
sub
ss
inc
sub
xor
cmp
inc
xor
inc
sub
xor
xor
xor
sub
xor
cmp
sub
inc
sub
xor
xor
ss
xor
aaa
aaa
sub
xor
inc
xor
xor
xor
xor
sub
inc
sub
xor
inc
sub
aaa
sub
xor
xor
inc
xor
xor
inc
sub
inc
sub
xor
inc
cmp
inc
sub
xor
xor
xor
xor
sub
cmp
xor
cmp
xor
sub
xor
inc
cmp
xor
inc
sub
xor
inc
sub
ss
xor
aaa
sub
inc
sub
xor
xor
sub
xor
xor
inc
sub
xor
inc
sub
xor
ss
inc
sub
xor
inc
sub
xor
inc
sub
xor
aaa
sub
aaa
sub
aaa
sub
inc
sub
xor
xor
inc
sub
xor
inc
sub
inc
sub
xor
aaa
sub
cmp
xor
xor
inc
sub
cmp
aaa
sub
xor
xor
inc
sub
cmp
ss
xor
ss
xor
inc
xor
xor
aaa
sub
aaa
sub
inc
sub
xor
xor
xor
sub
inc
sub
inc
sub
xor
inc
inc
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
xor
inc
cmp
inc
sub
xor
xor
xor
inc
sub
cmp
inc
sub
xor
inc
sub
inc
sub
xor
inc
sub
xor
xor
xor
inc
sub
inc
sub
xor
aaa
cmp
inc
sub
inc
sub
inc
sub
inc
sub
cmp
xor
ss
cmp
aaa
sub
inc
sub
xor
inc
sub
inc
sub
aaa
sub
xor
cmp
inc
sub
inc
sub
cmp
xor
cmp
inc
sub
ss
inc
sub
xor
xor
inc
sub
inc
sub
xor
inc
sub
xor
inc
sub
xor
inc
sub
xor
inc
sub
xor
inc
inc
sub
inc
sub
xor
inc
sub
aaa
sub
xor
xor
inc
sub
cmp
inc
sub
ss
inc
sub
cmp
cmp
cmp
xor
xor
cmp
ss
inc
sub
xor
xor
sub
xor
xor
sub
inc
sub
inc
sub
cmp
xor
xor
sub
xor
inc
inc
sub
xor
xor
inc
sub
xor
inc
sub
cmp
cmp
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
sub
xor
inc
sub
inc
sub
xor
xor
inc
inc
sub
inc
sub
aaa
sub
inc
sub
cmp
xor
inc
inc
sub
cmp
cmp
aaa
sub
xor
inc
xor
inc
inc
sub
cmp
aaa
sub
xor
inc
sub
cmp
inc
sub
xor
inc
xor
inc
sub
inc
sub
xor
inc
sub
xor
inc
sub
aaa
sub
inc
sub
xor
inc
sub
inc
sub
xor
cmp
xor
inc
inc
sub
inc
sub
cmp
xor
xor
aaa
sub
aaa
sub
aaa
sub
aaa
sub
xor
xor
xor
sub
inc
sub
xor
xor
xor
ss
sub
xor
inc
xor
xor
cmp
xor
inc
xor
inc
sub
inc
sub
xor
xor
ss
sub
inc
sub
xor
inc
sub
xor
xor
sub
inc
sub
cmp
inc
sub
xor
inc
sub
inc
sub
inc
sub
aaa
sub
aaa
sub
xor
inc
ss
xor
cmp
sub
inc
sub
inc
sub
xor
cmp
xor
inc
sub
inc
sub
inc
sub
xor
xor
ss
xor
aaa
ss
inc
sub
xor
xor
ss
sub
xor
inc
sub
cmp
cmp
xor
inc
sub
inc
sub
cmp
inc
sub
cmp
cmp
inc
sub
xor
cmp
xor
inc
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
cmp
cmp
xor
inc
sub
xor
cmp
xor
xor
xor
inc
sub
inc
sub
inc
sub
xor
cmp
sub
inc
sub
xor
xor
inc
sub
xor
inc
sub
xor
xor
sub
cmp
ss
xor
ss
xor
inc
xor
ss
xor
xor
xor
inc
ss
xor
xor
xor
xor
inc
sub
xor
inc
sub
inc
sub
inc
sub
xor
xor
inc
cmp
xor
inc
xor
xor
inc
sub
inc
sub
inc
sub
xor
inc
xor
cmp
inc
sub
inc
sub
inc
sub
xor
cmp
sub
cmp
xor
xor
cmp
xor
xor
sub
xor
inc
ss
cmp
inc
sub
xor
aaa
cmp
aaa
sub
inc
sub
xor
inc
xor
inc
sub
xor
inc
sub
inc
sub
inc
sub
aaa
sub
xor
inc
sub
xor
xor
inc
cmp
cmp
xor
cmp
inc
sub
xor
inc
sub
xor
aaa
sub
inc
sub
inc
sub
cmp
xor
xor
cmp
xor
inc
sub
inc
sub
cmp
xor
xor
cmp
xor
xor
sub
inc
sub
cmp
xor
xor
inc
sub
xor
inc
inc
sub
inc
sub
inc
sub
xor
cmp
cmp
xor
inc
sub
xor
xor
inc
xor
xor
inc
sub
xor
inc
sub
xor
xor
xor
xor
sub
inc
sub
inc
sub
ss
aaa
sub
xor
cmp
ss
cmp
xor
inc
sub
inc
sub
cmp
cmp
xor
xor
sub
inc
sub
aaa
sub
xor
xor
xor
xor
sub
xor
cmp
xor
cmp
xor
xor
ss
inc
sub
cmp
aaa
sub
ss
inc
sub
inc
sub
inc
sub
xor
inc
sub
xor
ss
aaa
sub
inc
sub
xor
aaa
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
cmp
xor
inc
xor
inc
sub
inc
sub
inc
sub
aaa
sub
inc
sub
inc
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
cmp
inc
sub
xor
xor
xor
inc
sub
ss
ss
inc
sub
cmp
aaa
sub
inc
sub
cmp
cmp
cmp
inc
sub
aaa
sub
aaa
sub
inc
sub
inc
sub
cmp
xor
cmp
sub
xor
xor
xor
inc
sub
xor
xor
xor
cmp
cmp
xor
inc
ss
xor
xor
sub
inc
sub
cmp
xor
inc
sub
inc
sub
cmp
xor
cmp
sub
xor
xor
xor
inc
sub
xor
inc
inc
sub
xor
xor
xor
sub
xor
inc
sub
xor
cmp
inc
sub
xor
xor
aaa
aaa
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
ss
xor
inc
sub
cmp
inc
sub
cmp
xor
xor
inc
xor
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
ss
cmp
xor
aaa
sub
xor
inc
sub
xor
cmp
inc
sub
xor
inc
sub
inc
sub
cmp
inc
sub
xor
xor
inc
inc
sub
xor
xor
sub
aaa
sub
xor
cmp
inc
sub
aaa
sub
xor
xor
sub
xor
xor
cmp
xor
inc
sub
xor
inc
inc
sub
inc
sub
inc
sub
xor
aaa
sub
xor
xor
sub
xor
cmp
xor
xor
xor
cmp
sub
xor
xor
xor
sub
xor
xor
xor
sub
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
inc
sub
inc
sub
xor
xor
xor
xor
aaa
sub
ss
xor
inc
sub
inc
sub
xor
cmp
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
ss
aaa
sub
cmp
cmp
inc
sub
xor
xor
xor
xor
inc
xor
xor
sub
inc
sub
xor
inc
sub
inc
sub
xor
cmp
xor
ss
sub
cmp
inc
sub
inc
sub
ss
xor
inc
sub
cmp
inc
sub
inc
sub
xor
inc
sub
ss
xor
xor
inc
sub
cmp
xor
xor
ss
ss
cmp
xor
xor
xor
xor
inc
sub
aaa
sub
inc
sub
cmp
inc
sub
xor
cmp
xor
cmp
sub
ss
xor
inc
sub
xor
xor
inc
sub
aaa
sub
inc
sub
xor
inc
sub
xor
xor
xor
xor
inc
sub
xor
xor
inc
sub
xor
cmp
sub
xor
inc
sub
xor
xor
xor
sub
xor
xor
sub
xor
aaa
ss
cmp
aaa
sub
cmp
aaa
sub
inc
sub
inc
sub
xor
inc
sub
xor
xor
xor
xor
sub
xor
xor
sub
xor
inc
cmp
xor
xor
xor
xor
inc
cmp
xor
inc
sub
xor
xor
sub
ss
inc
sub
xor
xor
sub
xor
inc
sub
xor
inc
sub
xor
cmp
xor
inc
inc
sub
xor
inc
sub
inc
sub
ss
xor
xor
xor
xor
sub
cmp
inc
sub
xor
cmp
xor
inc
xor
inc
sub
inc
sub
xor
inc
sub
xor
xor
inc
sub
xor
xor
inc
sub
xor
xor
sub
inc
sub
cmp
inc
sub
inc
sub
inc
sub
cmp
xor
ss
xor
inc
sub
cmp
xor
xor
xor
xor
ss
inc
sub
xor
xor
sub
inc
sub
inc
sub
xor
inc
cmp
xor
inc
sub
xor
xor
inc
sub
xor
xor
ss
inc
sub
inc
sub
xor
inc
sub
inc
sub
cmp
inc
sub
xor
cmp
aaa
sub
inc
sub
inc
sub
inc
sub
inc
sub
cmp
xor
xor
inc
sub
cmp
xor
inc
sub
inc
sub
inc
sub
xor
cmp
cmp
xor
ss
inc
sub
aaa
sub
inc
sub
inc
sub
aaa
sub
aaa
sub
inc
sub
inc
sub
xor
inc
cmp
xor
xor
sub
inc
sub
inc
sub
cmp
inc
sub
inc
sub
cmp
cmp
xor
xor
xor
inc
cmp
inc
sub
xor
xor
cmp
xor
ss
inc
sub
xor
inc
sub
inc
sub
xor
xor
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
xor
sub
inc
sub
inc
sub
xor
inc
inc
sub
ss
inc
sub
aaa
sub
xor
inc
cmp
cmp
aaa
sub
xor
inc
sub
xor
xor
sub
xor
cmp
inc
sub
xor
cmp
inc
sub
xor
cmp
xor
sub
inc
sub
ss
xor
cmp
xor
xor
xor
ss
xor
ss
xor
xor
sub
cmp
inc
sub
inc
sub
inc
sub
xor
ss
inc
sub
aaa
sub
cmp
xor
xor
sub
xor
cmp
inc
sub
inc
sub
xor
xor
xor
inc
sub
inc
sub
xor
inc
sub
xor
xor
xor
xor
inc
sub
xor
xor
aaa
xor
inc
sub
ss
inc
sub
ss
inc
sub
inc
sub
xor
xor
xor
ss
cmp
inc
sub
cmp
xor
xor
inc
sub
inc
sub
xor
cmp
ss
inc
sub
inc
sub
cmp
cmp
inc
sub
xor
cmp
inc
sub
xor
inc
sub
xor
inc
sub
inc
sub
inc
sub
xor
xor
inc
inc
sub
inc
sub
xor
ss
sub
aaa
sub
xor
xor
inc
xor
ss
cmp
aaa
sub
cmp
inc
sub
xor
xor
sub
xor
ss
xor
xor
xor
sub
xor
xor
inc
ss
cmp
inc
sub
xor
cmp
inc
sub
inc
sub
inc
sub
inc
sub
xor
cmp
xor
inc
sub
inc
sub
aaa
sub
xor
xor
xor
sub
cmp
aaa
sub
inc
sub
xor
cmp
cmp
cmp
xor
xor
sub
inc
sub
inc
sub
cmp
xor
cmp
sub
inc
sub
xor
xor
sub
cmp
xor
inc
sub
xor
xor
inc
sub
inc
sub
xor
inc
inc
sub
xor
xor
xor
inc
xor
inc
inc
sub
xor
xor
xor
xor
sub
xor
inc
xor
inc
sub
inc
sub
xor
xor
sub
xor
xor
xor
inc
xor
xor
xor
cmp
xor
sub
cmp
inc
sub
xor
xor
cmp
inc
sub
xor
xor
cmp
inc
sub
xor
xor
xor
xor
cmp
cmp
inc
sub
inc
sub
cmp
xor
inc
sub
ss
xor
inc
sub
inc
sub
xor
inc
sub
inc
sub
cmp
xor
inc
sub
cmp
xor
inc
sub
inc
sub
xor
cmp
inc
sub
cmp
inc
sub
xor
xor
xor
inc
sub
cmp
inc
sub
aaa
sub
inc
sub
xor
inc
sub
aaa
sub
xor
cmp
ss
aaa
sub
aaa
sub
xor
aaa
sub
inc
sub
cmp
inc
sub
inc
sub
xor
xor
sub
inc
sub
xor
cmp
ss
cmp
inc
sub
inc
sub
xor
ss
inc
sub
xor
cmp
xor
xor
sub
xor
xor
xor
xor
sub
cmp
xor
xor
inc
aaa
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
xor
xor
sub
inc
sub
cmp
cmp
cmp
xor
xor
inc
inc
sub
cmp
xor
xor
aaa
sub
ss
cmp
xor
cmp
xor
inc
sub
inc
sub
cmp
xor
inc
sub
xor
xor
inc
sub
inc
sub
inc
sub
inc
sub
xor
cmp
inc
sub
xor
xor
xor
xor
ss
cmp
cmp
inc
sub
xor
xor
aaa
ss
xor
xor
inc
aaa
sub
inc
sub
xor
cmp
cmp
xor
ss
inc
sub
inc
sub
xor
cmp
sub
cmp
xor
cmp
xor
ss
xor
ss
cmp
inc
sub
xor
xor
sub
cmp
cmp
xor
inc
xor
inc
sub
inc
sub
xor
inc
inc
sub
cmp
xor
xor
inc
sub
inc
sub
cmp
xor
xor
ss
xor
xor
sub
cmp
xor
inc
inc
sub
xor
cmp
inc
sub
inc
sub
inc
sub
xor
inc
sub
aaa
sub
inc
sub
xor
xor
cmp
inc
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
aaa
sub
ss
xor
xor
inc
xor
cmp
xor
xor
aaa
cmp
inc
sub
inc
sub
xor
inc
sub
xor
cmp
inc
sub
aaa
sub
ss
inc
sub
inc
sub
ss
xor
xor
sub
xor
xor
sub
inc
sub
inc
sub
xor
ss
ss
cmp
inc
sub
inc
sub
inc
sub
aaa
sub
inc
sub
xor
cmp
inc
sub
xor
xor
ss
ss
inc
sub
inc
sub
xor
xor
cmp
sub
aaa
sub
ss
inc
sub
inc
sub
inc
sub
inc
sub
ss
xor
cmp
xor
inc
sub
inc
sub
inc
sub
cmp
cmp
inc
sub
xor
inc
sub
xor
inc
sub
xor
inc
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
cmp
inc
sub
cmp
inc
sub
inc
sub
xor
xor
aaa
cmp
xor
aaa
cmp
xor
inc
sub
xor
xor
aaa
xor
cmp
xor
xor
inc
xor
xor
sub
xor
xor
ss
sub
xor
xor
inc
inc
sub
inc
sub
inc
sub
xor
aaa
xor
xor
inc
sub
inc
sub
xor
cmp
sub
inc
sub
cmp
xor
xor
inc
sub
aaa
sub
xor
inc
sub
cmp
inc
sub
cmp
xor
inc
cmp
xor
inc
inc
sub
inc
sub
cmp
xor
cmp
inc
sub
xor
inc
sub
cmp
xor
inc
sub
inc
sub
ss
inc
sub
cmp
inc
sub
inc
sub
xor
xor
sub
inc
sub
cmp
ss
cmp
xor
xor
inc
sub
xor
ss
xor
xor
ss
sub
xor
xor
inc
sub
inc
sub
inc
sub
aaa
sub
ss
cmp
inc
sub
xor
xor
inc
sub
inc
sub
ss
inc
sub
inc
sub
xor
xor
inc
sub
xor
inc
sub
inc
sub
inc
sub
xor
xor
cmp
ss
inc
sub
inc
sub
ss
xor
xor
sub
inc
sub
xor
xor
sub
inc
sub
inc
sub
xor
xor
inc
sub
inc
sub
cmp
cmp
cmp
inc
sub
xor
xor
xor
sub
ss
inc
sub
inc
sub
xor
xor
xor
sub
xor
inc
sub
xor
aaa
sub
inc
sub
aaa
sub
ss
inc
sub
cmp
xor
xor
inc
inc
sub
inc
sub
aaa
sub
aaa
sub
inc
sub
xor
inc
inc
sub
aaa
sub
inc
sub
aaa
sub
xor
cmp
sub
cmp
ss
inc
sub
aaa
sub
inc
sub
inc
sub
inc
sub
xor
xor
xor
xor
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
ss
inc
sub
aaa
sub
inc
sub
xor
inc
sub
xor
inc
sub
aaa
sub
xor
ss
ss
cmp
inc
sub
xor
ss
xor
inc
aaa
sub
aaa
sub
inc
sub
inc
sub
ss
inc
sub
inc
sub
ss
ss
inc
sub
xor
xor
xor
cmp
xor
xor
sub
inc
sub
inc
sub
cmp
inc
sub
inc
sub
xor
inc
aaa
sub
inc
sub
xor
xor
aaa
sub
inc
sub
xor
inc
sub
cmp
xor
cmp
xor
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
xor
xor
xor
inc
sub
inc
sub
xor
xor
inc
inc
sub
xor
inc
sub
xor
aaa
inc
sub
cmp
cmp
xor
cmp
xor
inc
inc
sub
inc
sub
xor
inc
cmp
xor
xor
inc
sub
xor
inc
sub
inc
sub
xor
xor
sub
ss
inc
sub
aaa
sub
inc
sub
cmp
inc
sub
ss
inc
sub
inc
sub
cmp
xor
cmp
xor
xor
xor
sub
xor
xor
aaa
sub
xor
inc
sub
inc
sub
cmp
xor
inc
sub
inc
sub
xor
aaa
sub
aaa
sub
inc
sub
xor
inc
xor
cmp
sub
inc
sub
xor
cmp
inc
sub
aaa
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
xor
xor
inc
sub
aaa
sub
inc
sub
xor
inc
sub
inc
sub
inc
sub
ss
inc
sub
cmp
xor
xor
cmp
xor
ss
inc
sub
xor
aaa
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
aaa
sub
xor
xor
inc
sub
inc
sub
cmp
xor
inc
sub
inc
sub
inc
sub
xor
inc
xor
inc
sub
ss
xor
inc
sub
inc
sub
inc
sub
cmp
inc
sub
xor
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
sub
xor
cmp
cmp
inc
xor
xor
sub
inc
sub
xor
inc
sub
xor
inc
xor
xor
xor
sub
xor
inc
sub
xor
inc
sub
inc
sub
ss
inc
sub
xor
cmp
inc
cmp
inc
sub
xor
ss
inc
sub
xor
inc
sub
xor
inc
sub
aaa
sub
cmp
xor
xor
inc
cmp
inc
sub
xor
xor
aaa
sub
xor
inc
cmp
aaa
sub
xor
xor
xor
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
aaa
sub
inc
sub
xor
inc
sub
ss
inc
sub
xor
inc
sub
inc
sub
ss
xor
cmp
xor
cmp
xor
inc
sub
xor
ss
inc
sub
inc
sub
inc
sub
cmp
xor
inc
sub
ss
inc
sub
xor
xor
sub
xor
xor
sub
inc
sub
inc
sub
aaa
sub
inc
sub
inc
sub
ss
cmp
xor
inc
sub
inc
sub
xor
xor
aaa
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
xor
aaa
sub
aaa
sub
inc
sub
cmp
xor
cmp
xor
inc
inc
sub
cmp
inc
sub
cmp
inc
sub
cmp
inc
sub
inc
sub
cmp
xor
xor
cmp
xor
xor
xor
inc
inc
sub
xor
xor
inc
sub
inc
sub
xor
xor
sub
xor
inc
sub
cmp
inc
sub
inc
sub
inc
sub
xor
xor
inc
sub
xor
cmp
xor
xor
ss
cmp
cmp
xor
xor
inc
xor
aaa
sub
inc
sub
xor
inc
sub
xor
cmp
inc
cmp
xor
ss
inc
sub
inc
sub
inc
sub
cmp
xor
cmp
inc
sub
inc
sub
xor
cmp
cmp
aaa
sub
inc
sub
xor
xor
xor
cmp
xor
inc
xor
inc
sub
inc
sub
xor
inc
sub
xor
inc
aaa
sub
xor
xor
cmp
inc
sub
cmp
xor
xor
cmp
xor
cmp
inc
sub
ss
aaa
sub
cmp
cmp
xor
aaa
sub
inc
sub
xor
xor
cmp
xor
inc
inc
sub
cmp
inc
sub
cmp
inc
sub
inc
sub
ss
xor
inc
sub
inc
sub
xor
xor
inc
xor
xor
inc
sub
ss
xor
inc
sub
inc
sub
aaa
sub
ss
xor
aaa
inc
sub
ss
xor
aaa
sub
inc
sub
xor
inc
sub
xor
xor
inc
xor
xor
cmp
inc
sub
xor
xor
xor
xor
sub
xor
inc
xor
inc
sub
xor
xor
sub
xor
cmp
sub
xor
inc
sub
inc
sub
xor
inc
inc
sub
xor
xor
xor
inc
inc
sub
cmp
cmp
inc
sub
cmp
xor
xor
inc
sub
xor
inc
inc
sub
xor
xor
inc
sub
inc
sub
inc
sub
xor
inc
sub
ss
inc
sub
inc
sub
inc
sub
xor
cmp
inc
sub
aaa
sub
inc
sub
xor
xor
aaa
sub
inc
sub
xor
inc
inc
sub
xor
xor
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
inc
sub
inc
sub
ss
xor
inc
sub
xor
inc
sub
inc
sub
ss
xor
xor
cmp
xor
inc
sub
xor
cmp
inc
sub
xor
ss
xor
inc
inc
sub
inc
sub
aaa
sub
inc
sub
xor
aaa
sub
xor
xor
sub
inc
sub
ss
aaa
sub
inc
sub
xor
xor
inc
sub
cmp
xor
ss
aaa
sub
inc
sub
xor
inc
cmp
inc
sub
cmp
inc
sub
cmp
ss
cmp
xor
inc
sub
inc
sub
inc
sub
xor
xor
xor
sub
xor
cmp
inc
sub
xor
inc
xor
inc
sub
aaa
sub
xor
xor
xor
cmp
cmp
xor
inc
sub
inc
sub
xor
xor
xor
sub
xor
inc
sub
ss
inc
sub
inc
sub
cmp
cmp
xor
inc
sub
xor
inc
xor
aaa
sub
xor
cmp
inc
sub
xor
xor
xor
sub
inc
sub
inc
sub
inc
sub
cmp
aaa
sub
inc
sub
inc
sub
xor
xor
cmp
xor
sub
xor
cmp
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
inc
sub
inc
sub
cmp
xor
xor
sub
xor
inc
sub
inc
sub
xor
cmp
inc
xor
xor
inc
xor
cmp
inc
sub
xor
aaa
sub
aaa
sub
inc
sub
xor
cmp
inc
sub
cmp
inc
sub
inc
sub
inc
sub
inc
sub
xor
cmp
inc
sub
xor
inc
cmp
xor
cmp
xor
xor
xor
inc
sub
xor
inc
xor
xor
inc
inc
sub
xor
inc
sub
ss
inc
sub
xor
inc
sub
inc
sub
xor
aaa
sub
aaa
sub
inc
sub
xor
xor
xor
sub
xor
xor
inc
cmp
inc
sub
xor
inc
sub
cmp
inc
sub
xor
cmp
inc
xor
aaa
sub
inc
sub
aaa
sub
cmp
xor
xor
sub
cmp
xor
inc
sub
inc
sub
aaa
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
inc
sub
inc
sub
xor
cmp
ss
inc
sub
xor
xor
sub
xor
xor
inc
sub
cmp
inc
sub
inc
sub
inc
sub
aaa
sub
inc
sub
xor
cmp
xor
xor
sub
inc
sub
inc
sub
inc
sub
xor
xor
inc
sub
xor
cmp
xor
inc
xor
inc
sub
xor
xor
inc
xor
xor
xor
cmp
ss
inc
sub
xor
cmp
xor
xor
ss
aaa
sub
aaa
sub
inc
sub
cmp
xor
xor
sub
inc
sub
inc
sub
inc
sub
xor
inc
sub
xor
inc
sub
inc
sub
inc
sub
xor
xor
xor
inc
sub
xor
cmp
xor
xor
sub
xor
inc
xor
inc
sub
xor
ss
inc
sub
xor
xor
xor
cmp
inc
sub
xor
inc
inc
sub
cmp
cmp
inc
sub
cmp
ss
inc
sub
ss
ss
aaa
sub
inc
sub
inc
sub
xor
inc
inc
sub
xor
inc
sub
inc
sub
inc
sub
aaa
sub
xor
inc
inc
sub
inc
sub
inc
sub
xor
xor
inc
xor
inc
sub
inc
sub
inc
sub
ss
ss
xor
inc
sub
inc
sub
aaa
sub
cmp
xor
cmp
xor
cmp
xor
ss
xor
xor
cmp
sub
inc
sub
aaa
sub
xor
xor
inc
sub
inc
sub
inc
sub
ss
inc
sub
xor
cmp
xor
ss
inc
sub
inc
sub
cmp
inc
sub
aaa
sub
xor
cmp
xor
inc
inc
sub
inc
sub
xor
inc
xor
inc
inc
sub
cmp
inc
sub
xor
ss
inc
sub
xor
xor
xor
inc
inc
sub
cmp
inc
sub
xor
xor
xor
sub
inc
sub
inc
sub
inc
sub
cmp
cmp
cmp
ss
xor
inc
sub
xor
inc
sub
inc
sub
xor
xor
xor
inc
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
cmp
xor
cmp
ss
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
cmp
xor
aaa
inc
sub
inc
sub
inc
sub
xor
cmp
xor
xor
sub
cmp
xor
ss
inc
sub
inc
sub
cmp
inc
sub
aaa
sub
xor
cmp
xor
xor
xor
cmp
inc
ss
inc
sub
inc
sub
inc
sub
xor
inc
sub
ss
inc
sub
ss
xor
inc
xor
inc
inc
sub
xor
xor
sub
inc
sub
xor
xor
inc
ss
inc
sub
inc
sub
inc
sub
cmp
cmp
cmp
ss
xor
inc
sub
xor
inc
sub
inc
sub
xor
xor
xor
xor
xor
sub
ss
xor
inc
sub
xor
xor
sub
xor
cmp
ss
inc
sub
inc
sub
inc
sub
inc
sub
xor
inc
cmp
xor
ss
sub
inc
sub
inc
sub
xor
cmp
xor
xor
sub
cmp
xor
ss
inc
sub
inc
sub
cmp
inc
sub
aaa
sub
xor
cmp
xor
inc
inc
sub
inc
sub
xor
inc
xor
inc
inc
sub
cmp
inc
sub
xor
ss
inc
sub
xor
xor
inc
inc
sub
xor
xor
sub
inc
sub
xor
xor
xor
sub
inc
sub
inc
sub
inc
sub
cmp
cmp
cmp
ss
xor
inc
sub
xor
inc
sub
inc
sub
xor
xor
xor
inc
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
cmp
xor
inc
inc
sub
inc
sub
inc
sub
ss
xor
inc
xor
cmp
inc
sub
aaa
sub
cmp
inc
sub
inc
sub
cmp
inc
sub
cmp
cmp
xor
xor
xor
cmp
sub
inc
sub
cmp
xor
cmp
aaa
sub
xor
xor
aaa
sub
ss
xor
xor
xor
aaa
cmp
inc
sub
xor
aaa
inc
sub
inc
sub
inc
sub
inc
sub
xor
cmp
xor
inc
sub
cmp
inc
sub
xor
xor
inc
sub
cmp
xor
cmp
xor
xor
sub
ss
xor
aaa
sub
aaa
sub
inc
sub
cmp
xor
inc
sub
ss
xor
cmp
xor
inc
cmp
xor
inc
inc
sub
inc
sub
inc
sub
ss
xor
inc
xor
cmp
inc
sub
aaa
sub
cmp
inc
sub
inc
sub
cmp
inc
sub
cmp
cmp
xor
xor
inc
inc
sub
inc
sub
cmp
inc
sub
inc
sub
xor
xor
sub
cmp
xor
inc
sub
inc
sub
xor
inc
sub
xor
xor
xor
xor
sub
xor
inc
sub
xor
xor
cmp
inc
sub
xor
inc
cmp
inc
sub
xor
xor
inc
sub
cmp
xor
cmp
xor
xor
sub
ss
xor
aaa
sub
aaa
sub
inc
sub
cmp
xor
inc
sub
ss
xor
cmp
xor
xor
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
xor
xor
sub
cmp
inc
sub
aaa
sub
cmp
inc
sub
inc
sub
cmp
inc
sub
cmp
cmp
xor
xor
xor
xor
sub
inc
sub
cmp
xor
cmp
aaa
sub
xor
xor
aaa
sub
ss
xor
inc
inc
sub
cmp
inc
sub
xor
inc
inc
sub
inc
sub
inc
sub
inc
sub
xor
cmp
xor
inc
sub
cmp
inc
sub
xor
xor
inc
sub
cmp
xor
cmp
xor
inc
aaa
sub
ss
xor
aaa
sub
aaa
sub
inc
sub
cmp
xor
inc
sub
ss
xor
cmp
xor
xor
sub
xor
inc
inc
sub
inc
sub
inc
sub
ss
xor
xor
sub
cmp
inc
sub
aaa
sub
cmp
inc
sub
inc
sub
cmp
inc
sub
cmp
cmp
xor
xor
cmp
inc
xor
inc
sub
cmp
xor
cmp
aaa
sub
xor
xor
aaa
sub
ss
xor
xor
xor
sub
inc
sub
xor
xor
sub
xor
inc
sub
xor
xor
cmp
inc
sub
xor
inc
cmp
inc
sub
xor
xor
inc
sub
cmp
xor
cmp
xor
xor
sub
ss
xor
aaa
sub
aaa
sub
inc
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
mov
inc
or
add
or
add
add
or
add
add
sub
pop
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jmp
js
mov
gs
std
jae
popf
ds
fstp
popf
je
ret
nop
out
fisttp
iret
xor
xor
adc
dec
add
mov
xor
ficomp
aam
nop
call
stos
cmp
or
shl
mov
push
xlat
jmp
jnp
pop
imul
lods
push
cmp
jp
sti
inc
jl
outs
aas
iret
mov
mov
mov
enter
sbb
xor
jne
mov
pop
ss
neg
push
div
stc
mov
pop
pop
jmp
mov
jp
fidiv
fwait
xor
jnp
addr16
mov
mov
(bad)
lods
mov
jb
out
mov
xlat
(bad)
popf
cmp
push
idiv
cmp
(bad)
mov
mov
pop
mov
out
and
scas
mov
outs
lahf
jge
fidivr
or
pop
addr16
outs
mov
outs
(bad)
std
jmp
movs
push
idiv
ja
jmp
test
test
pop
push
test
pop
pop
test
jb
fnstsw
hlt
sar
out
jne
stos
jnp
pop
pop
not
xchg
(bad)
mov
inc
push
pop
pop
cmp
test
ja
shl
cwde
arpl
fidiv
ja
jge
icebp
(bad)
xlat
aas
jg
or
imul
cmp
xlat
jae
pushf
push
jmp
test
in
mov
out
aas
mov
std
int3
xor
lods
jg
lods
mov
jnp
jge
std
and
xlat
popf
jae
jge
mov
ja
cmp
fimul
cs
pop
mov
test
imul
test
scas
mov
jle
lds
xlat
pop
mov
mov
dec
jmp
retf
cs
fbstp
retf
jmp
sub
pop
mov
aad
pop
push
dec
scas
mov
imul
scas
mov
xlat
aad
xor
mov
aaa
aam
sbb
lahf
clc
cli
xlat
xlat
xchg
fnsave
cld
mov
ins
std
cmc
aaa
fistp
mov
jle
cli
cmc
cmc
stos
stos
aad
add
ss
outs
mov
lods
cmc
cld
ins
mov
idiv
sbb
faddp
lea
mov
jnp
(bad)
out
mov
jmp
out
lods
lahf
hlt
(bad)
aaa
(bad)
mov
ins
ficomp
scas
mov
pop
iret
mov
lods
outs
lods
aas
jl
(bad)
idiv
mov
neg
push
test
sub
jmp
cmp
push
div
jl
fstp
mov
out
mov
out
mov
jg
js
mov
inc
mov
sti
inc
inc
cmc
out
mov
jge
outs
sti
idiv
mov
fdivrp
(bad)
mov
mov
or
jge
out
jge
ret
jne
rol
fiadd
aad
(bad)
jl
out
cmp
sbb
hlt
mov
stos
jnp
stc
lahf
jne
jecxz
scas
daa
lahf
clc
inc
fnstsw
xchg
mov
mov
cmp
hlt
cmps
jmp
arpl
scas
jnp
stc
dec
std
fmul
jle
out
jge
jae
out
mov
jmp
jmp
jmp
clc
lds
xor
inc
inc
jmp
fcomp
sbb
scas
jnp
std
fbstp
leave
daa
jmp
xchg
mov
in
not
jle
out
jge
imul
jmp
scas
jnp
clc
inc
(bad)
lahf
jmp
idiv
lods
outs
aad
outs
jg
out
cmp
into
ja
leave
xor
aam
iret
ds
idiv
mov
jg
out
cmp
(bad)
stc
mov
sti
ror
fimul
jg
div
stos
pop
das
mov
jmp
xchg
pop
stos
jnp
cli
push
(bad)
icebp
(bad)
jmp
jle
xchg
mov
mov
jecxz
aas
scas
jnp
clc
inc
fnstsw
in
test
std
stos
ds
push
jmp
jge
ds
mov
ins
(bad)
fucomp
jmp
idiv
ficomp
(bad)
push
idiv
clc
(bad)
cli
mov
std
test
jne
das
jg
jnp
idiv
out
scas
jg
jnp
sti
pop
(bad)
sti
fucomip
fidivr
(bad)
push
div
out
loope
push
out
lods
js
sbb
cmp
(bad)
adc
add
out
loope
cld
pop
fidivr
jmp
jecxz
ret
mov
sahf
jp
lock
loope
ret
mov
push
fidivr
lock
loope
ret
mov
push
fidivr
lock
loope
ret
mov
push
fidivr
lock
loope
ret
jnp
fidivr
lock
loope
ret
mov
push
fidivr
lock
cmp
pxor
fidivr
lock
loope
ret
mov
out
push
mov
lock
lds
test
ficom
mov
sti
mov
sar
mov
push
fidivr
xchg
mov
sti
in
aas
add
jmp
mov
mov
cmp
lock
add
xor
inc
sar
arpl
xor
or
arpl
jg
loopne
add
push
fisttp
clc
shr
add
dec
add
mov
xor
out
sub
iret
add
xor
mov
mov
rcr
js
xadd
rcr
clc
cmps
or
inc
add
jnp
loopne
jne
rol
pop
loopne
adc
mov
cld
jge
mov
add
pop
adc
adc
jg
loopne
add
xlat
sbb
loopne
add
add
loopne
dec
(bad)
dec
or
cld
mov
add
cld
jmp
push
lock
shr
jl
clc
adc
sahf
or
add
push
lock
test
or
dec
shr
jge
clc
cmp
pop
add
sbb
and
mov
ficom
jns
(bad)
ds
inc
shl
sbb
jns
ds
rol
or
or
sar
aas
nop
sbb
adc
out
ficom
jns
test
jns
test
sbb
jns
xchg
or
cmc
add
jns
mov
loopne
or
inc
mov
lock
in
sbb
loop
daa
loopne
or
sub
fwait
or
adc
lahf
push
fild
iret
jecxz
or
sbb
push
fiadd
aaa
adc
and
inc
sar
add
(bad)
imul
fisttp
ds
add
ret
jnp
add
ins
add
mov
lock
mov
loopne
add
pop
(bad)
ins
add
dec
shl
aam
inc
rcl
add
mov
cmp
xor
rcr
cmps
mov
std
jl
sti
adc
loop
(bad)
idiv
pop
push
shl
loope
add
(bad)
cmp
idiv
or
mov
mov
cmp
adc
loop
test
or
cs
xor
adc
adc
fild
imul
mov
fiadd
dec
inc
lahf
(bad)
sti
xor
cmps
mov
mov
fisttp
cmps
mov
movs
mov
adc
pop
sub
xlat
push
shr
cmps
mov
and
jns
lock
ds
iret
adc
ins
add
inc
shl
lock
or
add
dec
shl
clc
adc
lahf
adc
pop
adc
mov
cli
jae
clc
push
lock
ret
ret
aas
xchg
jl
loopne
add
in
out
and
das
add
push
sar
add
inc
rol
jl
loopne
sbb
add
push
jl
or
aas
call
or
mov
clc
cs
loope
sub
or
xor
mov
pop
fild
or
jle
lock
mov
js
aas
or
sbb
pop
rcl
loopne
or
add
add
sub
das
es
add
sbb
and
sti
add
or
mov
out
imul
add
add
imul
mov
out
sub
cmp
sti
add
loopne
or
add
lahf
mov
loopne
lods
call
jl
inc
pop
adc
jge
pop
add
sub
cmp
pop
add
add
shr
sahf
mov
lock
add
xlat
mov
psubb
add
or
add
loopne
add
aaa
loopne
add
push
jl
clc
shr
clc
cmp
arpl
cli
mov
mov
out
imul
jl
lock
jg
loopne
lods
call
shl
jae
(bad)
sub
ds
retf
add
imul
jl
lock
xchg
add
jl
lock
sub
ds
jl
adc
stos
add
sub
cmp
arpl
out
fild
clc
retf
or
dec
lock
mov
add
cmp
arpl
inc
sbb
shr
adc
xor
jae
loopne
add
adc
pop
pop
add
(bad)
adc
xor
jae
scas
add
loopne
lods
call
cld
push
pushf
loopne
lods
call
pop
movs
mov
add
add
(bad)
mov
dec
inc
fild
clc
imul
imul
jl
loopne
and
repz
and
mov
dec
inc
pop
jecxz
sar
js
xor
sahf
(bad)
jnp
out
adc
sti
lock
add
imul
mov
ss
clc
cmp
pop
icebp
(bad)
and
cmp
jl
add
jnp
fidivr
push
out
int
(bad)
lock
jmp
ds
mul
mul
jge
dec
lock
shl
icebp
dec
fwait
test
ja
mov
das
jecxz
pop
out
lods
js
push
out
pop
lock
(bad)
adc
fst
mov
(bad)
not
sub
out
sbb
ins
js
lock
scas
daa
clc
cmp
jae
das
jecxz
(bad)
mov
add
out
ret
mov
js
add
cmp
or
rcr
not
pop
xor
mov
icebp
fiadd
pop
out
adc
jns
outs
sar
cmps
mov
fiadd
(bad)
js
icebp
fiadd
pop
add
(bad)
imul
iret
ret
mul
fisub
or
ds
lock
jecxz
xlat
adc
xor
inc
mov
ja
dec
lock
jge
mov
jl
add
(bad)
jnp
idiv
mov
adc
add
(bad)
jnp
fidiv
retf
add
das
fiadd
icebp
jle
sub
add
sub
or
and
push
xchg
lock
rcr
ds
ret
ret
lahf
add
or
add
jl
loopne
shl
ds
jl
lock
sub
cld
lds
clc
popa
rol
iret
call
lahf
add
shr
sbb
jle
loopne
add
sbb
and
sti
dec
clc
adc
repz
cld
dec
sar
test
add
clc
sbb
and
sti
add
or
das
mov
lahf
daa
loope
or
stc
add
cmp
sti
out
mov
inc
or
pop
pop
add
loop
fild
clc
adc
lahf
pop
jl
lock
jg
and
fisttp
adc
repz
mov
inc
shl
(bad)
jp
sti
adc
loopne
or
or
adc
loopne
add
push
sar
shl
add
sub
or
data16
(bad)
xor
sti
jp
xchg
pop
jl
lock
xchg
add
jl
sub
jl
push
jl
lock
jl
clc
mov
das
add
or
push
jbe
add
inc
sar
xchg
adc
xor
inc
shl
jle
or
cmp
sti
add
jp
sti
jp
xchg
pop
jl
clc
cmp
retf
sub
jl
lock
mov
or
xlat
add
loopne
or
sbb
cmp
out
pop
and
mov
ds
xor
add
add
loopne
add
ja
mov
mov
fxam
add
adc
and
sti
or
mov
div
retf
clc
sbb
cmp
mov
div
add
pop
jl
loopne
add
inc
sub
lock
fisttp
mov
mov
(bad)
idiv
mov
scas
push
jbe
cmp
sub
sti
and
into
xchg
popf
js
pop
rol
sbb
sbb
pop
adc
dec
icebp
(bad)
ss
(bad)
imul
mov
inc
fild
jmp
pop
push
out
jmp
clc
mov
std
mov
jnp
not
(bad)
jecxz
cmp
(bad)
sub
std
data16
xlat
adc
sub
dec
shl
shr
mov
or
scas
in
bnd
(bad)
mov
mov
loopne
mov
ficomp
wbinvd
clc
data16
es
mov
out
push
loopne
sbb
gs
out
mov
jge
ficom
mov
test
or
sbb
and
retf
js
and
dec
rol
psllw
mov
sub
das
(bad)
sti
cs
sahf
loop
pop
mov
js
mov
cli
adc
int
fild
(bad)
sti
jbe
gs
mov
sub
shl
jecxz
or
xlat
adc
sub
stos
add
scas
daa
clc
cmp
daa
lock
(bad)
jnp
out
fst
inc
or
inc
mov
add
inc
das
loopne
jno
addr16
pop
clc
pop
add
jmp
popf
or
fwait
sub
cld
rol
add
int3
sbb
push
hlt
test
scas
in
cs
cmps
push
jbe
dec
out
call
lock
retf
sbb
arpl
scas
pop
cld
sbb
pop
out
call
jl
mov
add
rol
gs
add
scas
add
add
ret
add
dec
rcr
cli
mov
mov
loopne
rcr
rol
es
add
add
jge
xchg
mov
and
out
lock
mov
clc
add
popf
add
or
test
mov
jl
clc
xor
sti
or
mov
pop
cmc
dec
dec
sar
jl
clc
lods
or
jl
shl
adc
add
jge
loopne
sub
mov
ds
push
ror
sar
cli
or
or
inc
pop
cmp
(bad)
jg
lock
add
adc
push
ror
mov
sub
mov
add
jp
pop
add
add
mov
add
or
fisttp
adc
ja
shl
mov
pop
add
push
add
pop
cmp
loopne
add
add
call
rcl
jg
loopne
ror
or
push
rcl
fistp
add
rol
dec
add
fs
and
test
es
rcr
clc
inc
(bad)
and
cmps
sbb
loopne
mov
add
fld
add
add
add
stos
cmp
dec
add
or
scas
call
inc
jge
xchg
xor
clc
xchg
sbb
test
xchg
mov
or
retf
loopne
test
mov
inc
fiadd
cmc
cs
js
(bad)
popa
mov
lock
loop
add
pop
scas
call
jg
out
sbb
jnp
mov
loopne
inc
shl
inc
js
es
mov
scas
in
in
lahf
adc
add
push
hlt
adc
push
mov
mov
push
out
popf
add
test
(bad)
jnp
ficomp
clc
sub
and
(bad)
sbb
jle
fsubrp
js
jecxz
mov
xchg
or
aaa
clc
or
adc
addr16
repnz
fbld
jmp
call
(bad)
mul
not
pop
adc
adc
add
sahf
jmp
jnp
cmp
movs
fidivr
test
sbb
pop
adc
xor
imul
add
xor
or
shr
call
sbb
add
sub
mov
out
mov
sub
mov
dec
into
(bad)
jnp
sar
sar
mov
sub
cli
inc
scas
call
lock
xchg
adc
dec
mov
pop
shl
jle
lock
and
or
ds
hlt
adc
add
aas
add
inc
pop
loope
shl
adc
inc
or
out
jmp
xlat
add
pop
clc
adc
repz
and
adc
setae
lea
or
frstor
push
mov
sub
jb
dec
add
cmp
fisttp
clc
(bad)
push
rcr
inc
ret
fcom
add
(bad)
ja
(bad)
adc
add
or
push
rcl
mov
daa
or
add
dec
add
jmp
sar
lock
or
add
hlt
repnz
add
pop
clc
adc
and
mov
push
shr
lock
adc
lahf
add
aas
add
mov
mov
cld
sbb
cmp
jg
loopne
cmps
mov
js
(bad)
and
push
add
outs
jb
adc
add
call
ds
lock
add
add
pop
clc
adc
pop
and
mov
pop
add
and
add
push
rcl
clc
data16
test
add
loopne
sub
shl
or
or
stos
add
jbe
sti
cli
or
add
loopne
add
sahf
cmp
lock
out
in
jg
add
adc
jl
clc
push
add
xlat
mov
and
stos
sub
loopne
sar
pmuludq
add
wbinvd
js
call
cld
cmps
add
push
pop
add
add
adc
or
adc
lock
fwait
cmp
mov
jl
mov
es
add
push
jl
lock
pop
pop
jl
daa
clc
or
sub
lahf
add
lock
shl
lahf
push
ror
adc
adc
shr
or
sub
push
ror
outs
jb
lock
loopne
add
loopne
sub
jb
adc
fsubrp
(bad)
js
test
add
mov
std
adc
pop
ret
jnp
ror
push
add
mov
out
outs
es
xor
cli
or
push
hlt
out
and
mov
or
sub
mov
adc
outs
bound
ds
shl
adc
sbb
and
add
out
std
daa
js
cmp
adc
mov
mov
mov
fisubr
popf
mov
dec
call
idiv
xchg
adc
sub
push
mov
hlt
or
rol
xor
adc
arpl
pop
out
add
(bad)
hlt
retf
cmp
xlat
loopne
sbb
clc
cmp
jmp
lahf
sar
popf
add
test
fst
outs
mov
fdivr
je
and
call
imul
loopne
(bad)
imul
pop
shl
fisub
outs
in
scas
add
mov
fisub
xor
int
leave
cs
jnp
test
nop
sub
shl
pop
shl
add
mov
inc
clc
cmp
dec
sub
loope
cld
cmp
add
sub
xchg
fisttp
clc
or
fild
clc
and
cmps
or
push
loopne
push
cld
xchg
push
hlt
jmp
sti
fidiv
loopne
and
shl
xchg
pop
or
xchg
pop
push
sub
adc
push
hlt
or
mov
inc
pop
lahf
nop
lock
add
jb
inc
lock
add
add
add
adc
sub
xchg
test
lock
and
repz
hlt
sbb
or
dec
or
data16
(bad)
inc
add
stos
ja
sbb
cmp
mov
mov
adc
test
hlt
fwait
add
imul
hlt
ins
add
loope
lahf
lods
pop
jbe
scas
fwait
cdq
or
lock
imul
loopne
add
add
jb
pop
pop
add
popf
and
dec
or
add
mov
fild
adc
iret
adc
xor
adc
lock
mov
add
sar
cli
(bad)
lock
cmp
int3
fwait
pop
inc
rcl
xor
jbe
sub
xchg
add
add
xchg
cmp
fld
es
add
call
clc
adc
iret
add
shr
mov
clc
pop
add
mov
lahf
adc
pop
and
add
mov
sub
mov
fisttp
data16
inc
(bad)
and
cmps
sbb
rol
gs
adc
dec
add
jno
retf
scas
push
clc
shl
mov
hlt
inc
rcl
outs
jb
shl
dec
cs
rcl
add
jecxz
mov
or
cmp
dec
retf
adc
mov
scas
loop
push
pop
(bad)
jnp
neg
retf
js
lock
sub
ds
or
test
loopne
adc
cmp
rcl
les
retf
into
daa
loopne
aad
pop
sbb
jb
pop
cdq
in
mov
or
out
xor
jae
outs
(bad)
jnp
imul
call
out
pop
jecxz
in
stos
mov
jle
(bad)
dec
shl
cmc
add
loope
dec
rcl
ror
fdiv
add
jecxz
xchg
fnstcw
or
mov
lock
pop
sti
(bad)
js
lock
ffreep
sti
aaa
hlt
add
bound
lds
or
(bad)
xchg
pop
lods
outs
lock
ror
push
fld
call
sub
xchg
clc
sbb
cmp
imul
pop
add
sbb
fild
mov
aas
mov
fidivr
stos
(bad)
lock
lds
je
dec
ror
xor
pop
jecxz
xchg
adc
das
loope
shl
js
(bad)
mov
inc
aas
adc
sbb
cli
adc
ja
fst
es
adc
mov
scas
jecxz
add
shl
ds
sbb
jle
fimul
shl
pop
ins
xchg
ins
jo
in
jbe
lock
dec
dec
clc
mov
stos
lea
lahf
add
je
inc
and
add
adc
jg
loopne
pop
lock
mov
fbld
loope
push
lock
adc
push
add
pop
jbe
push
hlt
pop
popf
mov
(bad)
loopne
add
push
clc
data16
add
shl
jl
inc
jg
jbe
dec
xchg
pop
movs
ja
sub
jg
clc
inc
(bad)
lock
lahf
push
shl
test
add
fwait
add
pop
fiadd
add
mov
lock
jmp
loopne
ins
mov
pop
(bad)
idiv
pop
out
cs
adc
jg
jl
adc
add
loopne
add
fld
daa
adc
cmps
jmp
and
adc
cli
lds
test
(bad)
mov
or
sti
or
pop
add
push
hlt
arpl
mov
cli
sub
mov
adc
pop
jl
lock
lea
add
inc
cmp
mov
clc
dec
adc
daa
adc
pop
push
jl
clc
jno
gs
add
stos
cmc
mov
jg
lock
clc
jle
jp
fld
or
mov
inc
fbld
mov
jg
loopne
inc
sar
pop
pop
cld
add
jbe
add
ror
or
je
lock
pop
add
pop
xor
pop
clc
inc
dec
xchg
pop
loopne
aad
popa
push
loope
lea
sbb
(bad)
int3
sbb
add
jg
push
fwait
ja
call
imul
(bad)
lock
mov
clc
es
mov
cs
inc
mov
icebp
ds
rcl
push
shl
js
das
fidivr
not
add
lods
pushf
loopne
mov
push
out
dec
add
cdq
add
dec
ror
mov
inc
lods
call
jnp
imul
xchg
popf
jl
mov
outs
jb
add
pop
mov
psraw
pop
mov
scas
call
push
mov
fld
es
mov
mov
add
lahf
and
cmp
mov
xchg
or
pop
mov
ror
test
es
test
std
popf
js
xchg
cmp
aas
push
or
outs
loope
pop
js
pop
xchg
sub
hlt
fbstp
mov
pop
lock
loop
or
popf
js
loope
(bad)
jnp
daa
js
stos
ins
and
arpl
retf
add
mov
arpl
dec
or
pop
adc
xor
icebp
fiadd
fwait
outs
movs
stos
push
fsubp
daa
lock
sar
daa
mov
ss
jnp
div
fidivr
clc
add
pop
call
and
sbb
das
push
cld
mov
dec
add
or
cld
mov
add
rcr
ret
clc
pop
add
fld
add
ins
stos
fisttp
clc
inc
rol
jnp
loopne
add
wbinvd
lahf
add
loopne
dec
ret
loope
call
jge
inc
pop
movs
mov
jmp
fild
pop
cwde
and
xchg
push
hlt
adc
pop
add
and
loope
daa
loope
loop
rol
and
xchg
test
setno
add
mov
sbb
cmp
xchg
or
cwde
sub
cli
fst
(bad)
fwait
mov
clc
cmp
lds
pop
add
jbe
shl
sub
lock
lahf
pop
jl
clc
fld
clc
adc
add
xor
or
add
mov
cmp
mov
lahf
add
fld
add
addr16
push
ror
loopne
sub
fwait
pushf
add
cmp
dec
ror
shr
rcl
sbb
cmp
daa
cmp
lock
cld
rol
(bad)
adc
aas
aam
cmp
clc
jno
fidiv
add
jl
cld
xchg
repz
call
clc
push
rcr
jbe
shl
ins
mov
psubb
loopne
shl
or
popf
fidiv
ror
pop
sahf
or
lods
imul
adc
fild
jl
add
pop
sar
rcr
jl
clc
mov
jmp
dec
cs
add
add
pop
rcr
add
fild
push
loopne
test
jb
xor
fwait
pop
adc
(bad)
cmps
mov
icebp
push
call
jge
out
(bad)
mov
mov
aaa
imul
outs
(bad)
jnp
mul
test
adc
pop
lock
std
inc
add
pop
cmps
mov
mov
imul
scas
call
icebp
(bad)
cmp
scas
ret
jnp
not
mov
and
stos
js
stos
ja
mov
icebp
sahf
loop
dec
inc
lahf
rol
not
sbb
in
sti
add
std
cmp
ja
cmp
mov
imul
lock
loopne
add
pop
sub
daa
cmp
fild
test
inc
rep
inc
call
mov
cmp
ja
jge
dec
lock
add
cdq
out
pushf
mov
(bad)
mov
outs
adc
repnz
dec
mov
arpl
loopne
jmp
jp
sbb
ss
stc
daa
push
jbe
leave
fucomp
jl
leave
cmp
clc
push
shl
dec
jbe
dec
into
dec
jbe
fisub
idiv
ror
xor
mov
pop
fs
call
std
sbb
ret
cld
sbb
and
jns
xlat
add
fs
(bad)
fwait
dec
ret
dec
or
cs
jbe
iret
aam
cmp
mov
fisttp
js
mov
or
loopne
std
sub
lahf
aad
mov
test
daa
loope
push
dec
dec
in
clc
cdq
jp
daa
adc
mov
cmp
adc
adc
add
mov
xlat
inc
ret
jle
loopne
std
sub
inc
ficom
or
mov
ins
sbb
fild
or
or
push
rcl
arpl
pop
push
pop
or
adc
jae
xchg
pop
add
adc
std
cmps
lods
ss
lock
jae
retf
dec
mov
leave
inc
mov
jmp
mov
repnz
cmp
dec
xchg
pop
cmova
out
aas
add
imul
stc
sbb
rcl
jmp
sbb
fwait
int3
aas
mov
pushf
cmps
fwait
dec
mov
mov
add
test
in
pop
ds
cs
popa
fidiv
pop
jl
cmp
cld
lods
add
cld
fwait
cdq
cmps
pop
arpl
hlt
add
push
sub
pop
loopne
adc
xor
imul
arpl
add
dec
xor
xchg
pop
mov
add
pop
add
inc
shl
cs
push
jae
(bad)
pushf
loopne
or
sbb
lahf
adc
das
add
push
lock
clc
cmp
lahf
and
mov
inc
inc
fild
outs
and
jge
xchg
retf
adc
mov
jge
xchg
adc
push
sub
xor
out
aam
dec
icebp
mov
test
inc
mov
sahf
adc
das
adc
shl
pop
loope
mov
add
cmp
xchg
jbe
in
lock
out
adc
mov
gs
shr
stc
cmps
lea
(bad)
dec
test
sahf
loopne
push
hlt
daa
push
(bad)
fmul
mov
ds
sahf
in
mov
pop
arpl
stc
daa
xchg
call
ret
jmp
or
add
xor
fidivr
ds
or
mov
fsubp
jl
sub
lahf
inc
shl
and
addr16
and
addr16
add
das
fimul
cmps
retf
into
cmc
fbld
pop
loope
retf
mov
jle
out
(bad)
jnp
cmp
xchg
adc
adc
jecxz
mov
adc
xor
mov
js
test
mov
add
fbld
cwde
(bad)
lock
mov
jp
sahf
in
jl
out
mov
clc
inc
mov
pop
jecxz
mov
mov
dec
clc
das
fwait
ds
or
jns
test
loope
scas
add
push
shl
pop
mov
call
add
cmp
add
cmps
ja
scas
cmp
add
movs
retf
cs
mov
xlat
int
sub
mov
sbb
and
out
and
xlat
cdq
test
lahf
add
mov
inc
sub
jl
inc
pop
add
aam
mov
scas
in
push
lods
call
retf
mov
lock
push
hlt
int
jle
loopne
add
loopne
add
add
imul
test
sub
pop
fxch
in
dec
ror
jl
sub
cmp
pop
shl
add
cwde
lahf
lock
aas
lea
adc
inc
jp
xchg
lahf
lock
clc
cwde
or
mov
add
retf
cld
test
cmc
or
mov
clc
outs
shl
pop
dec
enter
mov
mov
in
or
xchg
add
stos
loopne
jmp
add
(bad)
retf
in
stc
daa
mov
lock
cdq
jl
fstp
ror
ins
or
aas
loope
rcl
pop
jmp
cli
sti
or
sbb
je
cmp
scas
add
push
mov
(bad)
(bad)
(bad)
ja
fld
adc
xchg
lock
mov
inc
cmps
jmp
cli
outs
add
cmp
add
(bad)
pop
rol
stc
and
iret
add
pop
or
mov
clc
data16
adc
imul
inc
pop
jb
das
loope
or
ret
add
xor
sub
fild
cmc
retf
dec
inc
aas
ret
push
hlt
xor
clc
sbb
lahf
cwde
leave
pop
and
retf
jp
lahf
adc
not
lock
adc
cmps
loop
or
sbb
jg
fdivp
and
pop
aad
mov
out
ins
test
sub
mov
sub
xchg
push
call
out
(bad)
sti
inc
js
loope
(bad)
neg
ficom
xor
es
retf
js
ror
ror
aaa
mov
pop
ret
sub
dec
mov
cmp
aas
jmp
loopne
or
mov
sti
sbb
push
fild
inc
rol
shl
inc
lahf
cmp
dec
js
ret
aas
(bad)
out
mov
xchg
fnsave
outs
add
inc
sar
add
movs
mov
js
push
shl
ror
xchg
pop
jecxz
scas
dec
inc
fisttp
lock
adc
dec
jp
movaps
mov
jge
ficom
adc
iret
jecxz
xchg
or
retf
js
movs
mov
in
pop
add
pop
add
(bad)
jnp
sub
rcl
or
les
sub
retf
js
rol
xchg
cmp
sti
add
icebp
sahf
adc
pop
cld
mov
fstp
std
or
pop
mov
(bad)
sbb
xchg
lock
mov
mov
clc
and
push
pushf
push
aaa
jnp
lock
jbe
stc
bound
inc
clc
and
push
pushf
push
aaa
jnp
mov
mov
sbb
and
mul
loope
cli
or
sbb
push
shl
jle
lock
sub
dec
or
mov
jnp
fistp
lock
inc
dec
ror
mov
cmp
push
loopne
pop
fldenv
mov
add
jg
add
add
jp
daa
push
hlt
cmps
adc
std
cmp
pop
push
in
sbb
out
imul
mov
rcl
adc
pop
jl
clc
xchg
test
or
fld
xor
imul
mov
and
out
lock
push
hlt
adc
js
pop
jno
fnsave
push
clc
les
pop
add
sbb
std
adc
sub
cld
add
arpl
xchg
sub
aas
inc
scas
in
movs
mov
lock
pop
psubb
add
lods
add
inc
xor
mov
dec
shr
jl
mov
pop
out
call
sub
sar
xor
jne
adc
or
fild
clc
and
dec
add
mov
inc
add
add
scas
add
or
jle
daa
clc
retf
or
mov
in
mov
mov
mov
sub
ss
daa
push
rol
sbb
jmp
sub
push
dec
inc
das
pop
mov
rcl
clc
int
mov
pop
leave
inc
clc
(bad)
push
out
pop
sar
push
hlt
imul
or
cmp
push
loopne
mov
cmps
fwait
or
push
mov
stos
dec
icebp
mov
je
push
xor
js
push
out
cmps
push
shl
push
hlt
mov
sar
(bad)
mov
sar
cmps
jmp
int
mov
mov
inc
pop
call
in
inc
pushf
cs
sbb
adc
sub
jg
sbb
adc
or
clc
inc
mov
clc
ins
js
pop
mov
adc
aas
sar
ficom
(bad)
loopne
mov
pop
arpl
aaa
repnz
call
rcl
movs
rcl
xor
pushf
loopne
mov
adc
cmp
add
xor
xchg
adc
jb
js
jmp
hlt
pop
cmp
add
je
clc
ss
fcomp
xchg
popf
mov
inc
xor
les
out
xor
sub
jg
sbb
loope
add
mov
lea
dec
aaa
jg
sti
jns
(bad)
cmp
not
cmps
fwait
xor
cdq
(bad)
mov
jne
cmp
cli
xchg
stc
aaa
adc
ds
cmps
add
rcl
sbb
lahf
mov
jmp
call
lock
inc
int3
dec
clc
or
push
rcl
test
jmp
fnstcw
xchg
lea
cld
add
fucomip
mov
retf
add
mov
retf
jl
lock
jb
push
sub
sbb
or
adc
aaa
sub
or
add
adc
add
xor
jl
xchg
lahf
lock
ins
push
rol
sub
cmp
retf
jl
lock
add
add
jg
(bad)
jl
(bad)
sub
dec
jecxz
cs
jnp
jg
loopne
or
mov
shl
div
adc
and
stos
sbb
mov
or
add
lock
sub
adc
test
cli
or
xor
jne
push
shl
lahf
shl
mov
std
rol
add
cli
stc
cmps
lea
aam
aaa
repz
push
aaa
and
push
std
aaa
xchg
shr
cmp
sbb
mov
jle
loopne
xor
sbb
imul
shl
lods
add
out
arpl
leave
test
sbb
mov
lahf
lock
lahf
shr
cmp
lea
lahf
add
mov
es
or
pop
int
cmp
mov
add
loopne
push
shl
call
add
push
pop
add
pop
add
cmps
jmp
xor
arpl
and
dec
outs
in
pop
inc
(bad)
aas
cmp
iret
cwde
sub
clc
adc
mov
mov
mov
cmps
mov
and
xor
jmp
pop
movs
adc
repnz
mov
retf
adc
cwde
jg
int
lahf
xor
test
pop
jecxz
or
daa
adc
mov
jbe
into
sub
pop
popf
sub
fimul
movs
mov
pop
jbe
push
rcr
ja
int3
mov
adc
add
ret
js
adc
xor
js
xchg
fild
movs
mov
pop
fldenv
sahf
ret
sti
ss
daa
daa
adc
addr16
mov
gs
jecxz
scas
call
test
mov
add
stos
xchg
outs
and
pop
xor
inc
add
mov
sbb
adc
retf
js
sbb
fcomi
arpl
xor
and
pop
imul
out
fcomi
push
adc
shl
(bad)
jnp
fimul
add
test
sbb
pop
(bad)
sti
lds
ret
jnp
pop
mov
mov
lock
(bad)
jnp
sub
pop
fisub
imul
sbb
out
and
pop
xor
out
imul
in
add
outs
mov
stc
inc
push
(bad)
js
(bad)
jnp
out
mov
outs
lock
inc
mov
bound
std
(bad)
jbe
movs
or
sub
lock
pop
inc
ret
and
ss
add
lahf
add
jae
jl
test
add
loopne
add
stos
aas
loope
shl
sbb
popf
test
pop
lahf
add
aas
push
jg
addr16
out
call
clc
sub
mov
iret
push
shl
mov
inc
mov
shl
and
retf
push
hlt
mov
add
pop
ror
in
pop
adc
lahf
ror
pop
pop
xchg
lock
or
scas
in
(bad)
sbb
rcl
lahf
pop
jl
loopne
add
mov
xchg
fild
clc
jnp
jmp
movs
mov
mov
ja
mov
sub
sub
fisttp
xchg
sub
pop
scas
in
bound
ds
rol
invlpg
cld
loope
cld
sub
loopne
add
rcl
fisttp
pop
leave
dec
clc
sbb
fisttp
clc
xchg
push
hlt
fisttp
clc
in
add
push
lock
cli
jbe
in
push
adc
xor
es
in
sbb
mov
hlt
shr
push
pop
add
stos
xchg
das
mov
dec
scas
popf
mov
loopne
sub
cld
shr
cmp
mov
jle
push
loope
jne
test
daa
loopne
sub
mov
cld
ins
shl
aad
clc
push
shr
cmp
cmps
fwait
xchg
add
daa
js
ins
and
fild
sti
jp
pop
add
mov
sub
push
rol
invlpg
mov
sub
pop
(bad)
pop
add
inc
ror
jl
lock
rol
outs
add
add
pop
int
popf
jl
xchg
mov
xchg
add
call
dec
leave
or
int
add
mov
inc
pop
mov
ror
in
jle
js
mov
cmps
fwait
jecxz
shl
lea
clc
ins
sub
pop
sub
mov
lahf
push
clc
cs
js
addr16
inc
fsubp
mov
jle
loopne
add
bound
(bad)
mov
jmp
das
fidiv
mov
mov
std
cmp
cmp
aaa
and
daa
adc
sbb
je
(bad)
jnp
fisub
pop
dec
lock
or
cli
xor
jle
ficom
loopne
adc
jnp
(bad)
sbb
aas
push
dec
jmp
sbb
gs
(bad)
jnp
imul
outs
out
fisttp
loope
fisttp
inc
sub
fnstsw
mov
pop
sub
mov
(bad)
mov
in
cmp
pop
shl
arpl
sub
ror
cmp
pop
xor
xor
and
xlat
clc
or
push
hlt
repnz
xor
arpl
aaa
mov
fsubp
out
xchg
popf
mov
dec
ror
pop
ins
push
out
adc
sbb
addr16
sti
cmp
push
call
xlat
lock
cmp
retf
mov
fmul
test
in
dec
or
(bad)
mov
sub
and
imul
sbb
inc
js
sub
jge
or
pop
lock
pop
add
dec
xor
lock
fst
retf
dec
pop
popf
push
clc
mov
mov
add
cld
pop
xchg
push
hlt
addr16
push
hlt
fld
shr
dec
cmps
dec
mov
scas
xor
mov
sbb
neg
xchg
lock
add
repnz
scas
xor
sbb
fst
cmp
inc
mov
pop
mov
push
pop
jbe
cmp
sbb
div
xchg
das
fs
pop
jecxz
in
dec
xor
inc
ds
dec
adc
sbb
mov
sub
stc
aaa
repz
xor
inc
dec
xor
ret
retf
xor
push
retf
or
cli
push
scas
in
push
add
arpl
call
rcr
mov
adc
cmp
clc
or
pop
shl
or
test
add
in
mov
jle
(bad)
cmps
sub
jp
inc
das
ins
mov
xor
(bad)
xlat
sub
ja
std
adc
jle
add
dec
mov
repz
call
aaa
mov
lock
or
mov
xor
test
lock
add
cmp
jmp
scas
aaa
adc
sub
add
popa
mov
repz
clc
dec
dec
lock
jb
cli
mov
clc
out
add
aaa
pop
loope
adc
in
dec
out
call
pop
ror
mov
rcl
push
sar
mov
push
je
ds
out
mov
test
cmc
dec
scas
xor
and
and
jbe
and
jge
mov
sti
lea
mov
adc
mov
fadd
(bad)
ss
cmp
adc
std
adc
cli
fisttp
clc
test
inc
inc
jg
add
xor
ds
jge
retf
in
dec
jns
stos
push
rcl
int
mov
inc
mov
jge
(bad)
xor
retf
mov
out
sub
retf
or
inc
ins
mov
call
add
xchg
sbb
aas
ror
icebp
sahf
loop
popa
mov
ret
add
icebp
fimul
dec
adc
sbb
int
lock
mov
jge
add
fnstsw
sbb
aaa
adc
or
jg
faddp
icebp
mov
jnp
ror
push
lds
ins
lahf
lock
pop
(bad)
scas
fidiv
ficom
mov
sub
jnp
scas
call
adc
ffreep
sti
sar
sbb
push
cld
dec
hlt
mov
or
xor
sbb
outs
lock
iret
call
ds
inc
pop
add
add
sbb
add
pop
shl
add
mov
out
add
xlat
hlt
fisttp
std
and
and
xlat
dec
jl
xchg
jle
test
jmp
cmps
lock
cmps
lods
push
jbe
dec
clc
mov
ins
mov
add
xor
iret
and
push
or
jle
loopne
jp
xchg
cs
jne
inc
clc
sub
mov
retf
leave
pop
shl
sbb
xchg
das
movs
jmp
cmps
retf
dec
xchg
or
mov
sbb
outs
inc
add
add
mov
imul
into
je
cdq
jl
adc
sbb
(bad)
and
mov
cli
mov
(bad)
and
add
add
mov
pop
add
adc
gs
jl
push
lock
xor
and
daa
ret
push
push
hlt
xor
and
hlt
mov
ins
hlt
or
das
pop
cld
push
or
fld
inc
pop
sbb
add
mov
and
push
test
mov
adc
movs
lods
ss
add
lsl
pop
and
aaa
cmp
push
add
sub
call
and
loopne
add
ret
cmp
mov
jno
sti
cli
adc
fst
pop
xor
hlt
ds
fisub
push
lock
gs
loopne
cdq
inc
js
pop
add
dec
add
aam
mov
adc
sbb
xor
mov
mov
gs
mov
es
jno
sar
cmp
lods
fwait
imul
aaa
out
lock
shl
mov
jl
ins
lods
lahf
sbb
pop
jbe
loopne
jns
jl
mov
fs
arpl
inc
mov
mov
ret
mov
sub
dec
leave
test
mov
push
and
outs
shr
xchg
mov
mov
cli
jmp
loopne
push
out
outs
movs
mov
xor
shr
cmp
jae
mov
xchg
cdq
jl
mov
push
mov
(bad)
je
movs
pop
rcl
hlt
retf
outs
inc
scas
call
jne
shl
and
in
dec
js
cmp
jg
mov
xlat
cmc
adc
xchg
jb
ja
add
test
push
fwait
loopne
and
ss
add
loop
pop
out
outs
aam
ficom
pop
aaa
adc
mov
adc
icebp
sahf
rcl
push
xchg
sahf
loopne
fisttp
(bad)
jbe
mov
jbe
into
xlat
jg
loop
xor
gs
ins
add
mov
stos
and
imul
mov
cmp
movs
leave
scas
or
or
js
ins
and
mov
mov
sar
lock
sar
xor
add
inc
mov
inc
dec
enter
sbb
dec
leave
je
test
pop
(bad)
shl
call
jl
pop
fxch
test
and
sbb
daa
in
outs
xor
lahf
and
loop
xchg
sub
sbb
in
in
xchg
xchg
cs
sbb
inc
inc
(bad)
and
retf
or
cs
and
or
and
fbld
hlt
mov
and
gs
pop
arpl
xchg
lock
popf
popa
mov
add
jle
fisttp
sbb
div
ins
mov
mov
inc
adc
sub
mov
cli
dec
mov
jbe
jne
pop
jbe
or
inc
popf
cmp
mov
rcr
dec
xchg
pop
pop
loopne
daa
stc
sbb
aas
loope
cli
or
pop
aaa
stos
test
dec
shr
add
jbe
out
or
pop
add
clc
jno
stc
inc
xchg
push
or
mov
adc
add
push
lock
cld
outs
test
adc
repnz
jne
lahf
inc
ror
sbb
lock
cwde
leave
pop
mov
unpcklps
call
dec
mov
inc
lahf
adc
sti
add
sbb
cmps
cmp
lock
call
shr
mov
shl
mov
mov
inc
repz
lock
or
jle
out
xchg
stos
add
push
sar
add
sbb
mov
loopne
xlat
(bad)
lock
arpl
test
lock
inc
cmps
ror
int
cmps
jmp
xor
mov
lock
stc
inc
inc
pop
ins
xor
jbe
sbb
jnp
out
jae
sahf
push
sar
inc
inc
call
fwait
icebp
sahf
loopne
ss
adc
(bad)
push
repz
outs
xchg
xor
aas
mov
push
in
mov
shl
hlt
xor
pop
fnstenv
mov
retf
in
dec
(bad)
daa
fisttp
sub
(bad)
lock
stos
inc
inc
fild
xor
xchg
scas
fcmovb
ds
out
xlat
loopne
ins
add
gs
xor
mov
add
mov
dec
icebp
outs
mov
out
inc
jecxz
cmps
ror
adc
sub
div
daa
js
sbb
mov
xchg
xor
outs
or
mov
sbb
fisub
gs
arpl
retf
dec
mov
data16
xchg
loop
shr
stos
xchg
cmps
fwait
mov
jnp
xor
add
outs
jb
cmp
mov
mov
aas
mov
out
imul
leave
mov
cdq
jl
pop
fidiv
repnz
dec
cmps
shl
jecxz
or
xlat
loopne
movs
jmp
jecxz
loopne
icebp
sahf
rcr
xchg
movups
sbb
xchg
fst
add
sar
sbb
push
cld
pop
mov
cmps
xchg
sub
sbb
jge
xor
test
sahf
in
dec
cli
call
jg
lock
lea
pop
add
fwait
push
scas
xchg
and
and
mov
ret
aas
push
aas
retf
mov
add
imul
add
sub
jno
lahf
rol
jl
clc
push
shl
and
jge
out
aam
cmp
inc
aas
or
mov
inc
sub
sub
and
int3
mov
add
adc
ins
sub
cmc
or
lock
ret
(bad)
lock
(bad)
push
sbb
push
pop
cld
jl
stos
adc
je
enter
loopne
aam
mov
sbb
mov
jmp
xor
in
push
je
pop
fldcw
mov
test
shr
and
fmulp
aas
mov
fild
in
in
dec
lds
adc
push
sub
mov
cmps
mov
loopne
aaa
or
inc
in
mov
pop
sub
(bad)
mov
jmp
outs
xor
adc
add
xorps
push
ror
xor
cmc
sbb
push
loope
std
les
add
ins
sub
adc
xor
xchg
repnz
inc
inc
pop
in
xor
call
add
arpl
dec
pop
ins
dec
shl
adc
imul
stc
aaa
adc
jle
loopne
xor
pop
xchg
push
bound
pop
add
test
outs
sbb
and
mov
retf
xor
add
mov
jmp
scas
fiadd
std
inc
sub
jne
jmp
pop
cmps
push
pop
int
sbb
aam
mov
mov
js
pushf
adc
bsf
push
hlt
jecxz
test
mov
and
in
xchg
das
inc
ins
mov
shl
lods
ss
ja
ins
aad
daa
clc
lea
xor
test
pop
test
stc
cmp
mov
push
xchg
push
icebp
pop
xor
js
aaa
xor
lock
fisttp
push
out
pop
adc
jb
jg
cmp
out
cmps
loope
or
ds
jp
daa
push
aad
clc
mov
pop
out
xor
or
aam
mov
xchg
sbb
add
xor
clc
sub
out
or
push
scas
call
js
dec
xchg
inc
sar
sub
xor
call
stos
lods
push
rcl
dec
ror
cli
popa
add
dec
enter
sbb
outs
dec
lock
xchg
xchg
jne
adc
adc
adc
mov
(bad)
mov
push
dec
ss
inc
gs
add
fs
jb
ror
mov
inc
mov
(bad)
fsubr
into
inc
mov
xchg
lock
popf
mov
lock
cwde
lahf
lock
lock
aaa
jae
loopne
or
push
mov
pop
ins
or
xchg
test
(bad)
jb
ds
fsub
xor
shl
xchg
fs
ror
sbb
dec
xchg
fld
or
cmp
push
fwait
pop
jl
xchg
das
push
or
mov
pop
or
movs
ins
mov
lahf
add
cmp
pop
imul
stos
ins
dec
cmps
jle
lock
popf
pop
ror
mov
push
lar
arpl
mov
sar
mov
pop
(bad)
sahf
out
imul
add
outs
cmps
xor
xchg
mov
jb
sbb
mov
lock
jmp
cwde
ss
outs
popf
inc
fistp
adc
retf
xor
mov
adc
retf
scas
icebp
adc
cmp
cmp
(bad)
mov
call
shr
retf
add
mov
ror
jl
lock
fwait
or
add
adc
das
cwde
mov
leave
jge
stc
daa
aaa
or
in
inc
mov
xchg
xchg
leave
pop
xor
in
nop
mov
jle
ror
retf
mov
loopne
sbb
dec
scas
inc
rcl
pop
test
jb
cwde
fst
std
mov
push
fidiv
mov
add
int3
xchg
pop
test
arpl
in
pop
fst
or
mov
test
push
(bad)
cmps
fwait
mov
xchg
xchg
inc
clc
sbb
das
adc
mov
arpl
cmc
push
hlt
fwait
popf
fst
mov
dec
ror
in
mov
pop
fst
fnstsw
shr
inc
xchg
retf
mov
mov
mov
or
(bad)
int
xor
call
add
test
and
rcr
popa
mov
push
mov
ss
retf
test
nop
xchg
ss
mov
cld
daa
icebp
(bad)
sbb
iret
(bad)
aaa
mov
or
jecxz
(bad)
popa
jge
sbb
fst
jl
sar
out
add
adc
mov
xchg
sub
adc
cmp
mov
jg
pop
mov
das
jmp
ss
mov
or
jg
clc
add
adc
xor
loopne
stos
jmp
inc
dec
js
lods
lahf
test
lock
rol
sbb
dec
js
ins
xor
lock
clc
mov
js
out
add
xor
dec
call
push
dec
ds
push
add
pop
aaa
lea
add
xchg
popf
in
xchg
mov
mov
or
shr
cdq
dec
mov
je
popa
adc
retf
adc
scas
lahf
clc
or
mov
pop
mov
mov
cli
mov
add
ror
mov
dec
or
ds
inc
lahf
push
sar
ror
jl
clc
jbe
lock
xchg
popa
mov
mov
rcr
aam
xor
popf
(bad)
mov
xchg
cld
fwait
pop
add
imul
add
(bad)
sub
lock
(bad)
fwait
sbb
mov
lock
shr
inc
add
daa
clc
addr16
iret
(bad)
imul
sub
pop
add
pop
mul
jge
clc
mov
lock
outs
jb
or
add
inc
retf
dec
js
pop
cmp
clc
mov
js
stos
popf
or
adc
das
add
xlat
cmps
fwait
mov
or
imul
fsubp
mov
lock
xor
outs
jb
jle
mov
jle
addr16
outs
mov
pop
rcl
push
out
jno
in
cmp
lahf
ror
div
xchg
sub
lock
pop
test
pop
test
icebp
ds
out
jb
jg
in
xchg
xchg
sub
movs
dec
aaa
cmp
ds
mov
fisubr
push
cmps
sar
xor
and
in
sbb
adc
add
hlt
push
fisub
push
sbb
jae
sti
or
js
call
or
mov
mov
xor
push
mov
icebp
fsubp
js
sub
inc
into
adc
mov
sbb
push
dec
lock
js
push
push
scas
call
xor
movs
mov
call
loopne
outs
jb
jmp
jle
xchg
xor
out
test
ss
push
xchg
or
or
clc
sbb
jnp
in
nop
sub
daa
pop
jbe
adc
(bad)
pusha
mov
mov
xor
push
int3
inc
clc
stc
cli
adc
out
mov
adc
adc
pop
jno
(bad)
leave
out
iret
into
mov
sub
xor
inc
clc
adc
or
pop
(bad)
jnp
pop
shr
repnz
jg
sbb
xchg
lock
dec
dec
pop
lods
pop
fstp
(bad)
dec
inc
mov
out
lahf
pop
mov
shl
inc
clc
xlat
cdq
xchg
lock
cld
dec
rol
jmp
or
mov
and
mov
and
cmp
ins
and
aas
loope
retf
dec
test
lock
rep
inc
push
retf
ds
adc
add
xor
ret
inc
jg
or
loopne
shr
inc
loopne
and
das
pop
jl
ror
adc
inc
retf
sub
fstp
jmp
inc
out
add
lock
ror
int3
mov
lea
add
push
std
or
loopne
add
outs
ror
pop
jecxz
aam
dec
mov
scas
in
jl
aaa
mov
jns
xchg
cmc
adc
into
cli
mov
sbb
retf
cli
mov
adc
push
clc
add
ja
jle
jle
cmp
aas
add
mov
lock
cmp
lock
arpl
das
push
out
add
pop
cld
xor
sub
jbe
or
add
pop
sar
jp
das
aad
sub
pop
mov
lahf
sbb
inc
xchg
mov
jnp
es
shr
pop
fld
pop
cmps
ror
dec
js
clc
xchg
or
mov
fwait
imul
add
daa
cmp
lock
add
push
sub
outs
jb
add
(bad)
ficom
ja
mov
loope
cmp
lock
adc
xor
test
xchg
cmp
(bad)
jp
leave
dec
xchg
popf
xor
mov
mov
mov
in
sub
in
jl
xchg
or
add
(bad)
xor
loopne
push
hlt
sbb
pop
aas
and
push
push
rol
out
scas
ret
or
xchg
add
or
fisttp
mov
xchg
fstp
mov
push
pop
fxch
xchg
add
fbld
std
rol
xchg
cli
es
add
dec
sar
fisub
cmc
push
fsubp
pop
or
aaa
xor
jnp
loopne
sbb
aaa
jecxz
movs
(bad)
lock
jae
neg
add
stc
bound
or
fwait
lea
mul
jge
mov
leave
xor
lahf
pushf
adc
xor
pop
fwait
sub
stc
sbb
lods
ret
test
and
add
push
daa
clc
dec
jp
ja
push
cld
cmp
out
fwait
sub
sti
js
(bad)
std
push
mov
clc
sbb
jg
mov
or
pop
shl
mov
ror
(bad)
sbb
movs
jmp
ror
pavgw
pop
ins
inc
aaa
inc
retf
fwait
pop
fwait
out
xchg
xchg
in
adc
dec
mov
pushf
loopne
jmp
leave
scas
mov
(bad)
push
out
jle
add
imul
leave
dec
clc
add
fwait
mov
pop
je
push
pop
loopne
shl
dec
mov
push
cli
sub
enter
push
in
and
pop
mov
mov
dec
cmp
add
outs
xor
pop
add
and
retf
push
leave
adc
test
jmp
dec
inc
das
ja
inc
or
adc
add
arpl
dec
pop
in
jecxz
retf
ds
jl
jmp
dec
clc
add
(bad)
pop
cmp
xlat
add
dec
clc
nop
test
ret
lock
lock
xor
push
push
lock
xchg
push
aaa
repnz
dec
fsubp
push
add
add
lock
mov
jle
imul
ins
cmps
ds
jge
xchg
ror
mov
sub
push
add
pop
adc
ja
mov
jl
scas
test
loopne
add
add
stos
aas
loope
lahf
fcom
shr
push
out
and
xor
inc
cmps
mov
test
shl
mov
jns
xchg
imul
bound
add
and
inc
add
pop
aas
loope
mov
mov
mov
shr
jmp
xchg
xchg
outs
inc
pop
jne
mov
mov
aas
add
adc
movmskps
addr16
add
mov
sbb
(bad)
mov
jae
hlt
sbb
sbb
into
aad
pop
das
cwde
jg
xor
bound
add
sbb
xor
dec
xlat
dec
dec
push
in
push
cmps
stos
mov
clc
inc
add
jmp
adc
imul
test
dec
fwait
outs
fs
ins
adc
arpl
nop
fst
sub
cld
push
mov
pop
dec
mov
add
(bad)
jnp
dec
cmc
jmp
out
clc
sbb
pcmpeqw
mov
mov
(bad)
fadd
in
stc
or
shr
in
inc
clc
or
xchg
aaa
mov
add
dec
jecxz
imul
and
cs
hlt
hlt
adc
arpl
and
jb
ins
mov
ins
out
out
int3
push
mov
jecxz
mov
cmp
dec
js
loopne
(bad)
imul
mov
mov
and
xor
retf
dec
scas
call
mov
loope
xor
mov
pop
je
test
adc
adc
arpl
mov
es
pop
or
loopne
or
add
repz
or
mov
cdq
je
cwde
cmp
xchg
dec
mov
xor
shl
mov
mov
mov
lock
mov
stc
add
mov
pop
fsubp
cmp
or
das
movs
mov
ss
inc
or
sbb
inc
fsubp
inc
sub
movs
mov
fwait
sbb
push
hlt
mov
ret
sti
push
mov
fld
cmps
jmp
aam
lock
lods
call
aad
call
fisttp
push
pop
add
adc
or
push
rol
adc
arpl
loope
nop
lock
xlat
add
repz
inc
ret
das
push
ror
dec
js
jg
pop
adc
mov
inc
inc
jg
fnstenv
adc
mov
inc
mov
add
lods
lahf
push
fwait
int
xlat
dec
jecxz
pop
ss
fisubr
test
push
outs
or
pop
xor
nop
cmp
cld
fwait
xchg
add
and
js
jle
inc
ror
or
std
test
mov
sbb
push
rcr
jle
loopne
rol
mov
dec
adc
idiv
ret
dec
clc
mov
mov
es
movs
shr
cmp
call
jg
daa
pop
mov
test
xchg
cmp
jb
add
pusha
es
or
lea
test
lock
cmp
jmp
adc
xchg
jmp
add
xor
ror
call
jmp
fcomp
or
mov
std
add
add
mov
adc
ja
lock
arpl
inc
rcl
jmp
inc
mov
mov
jl
rcr
shr
add
addr16
jl
push
jbe
cmc
fisttp
xchg
lahf
add
add
cmps
add
ror
jl
sar
xor
jg
lock
aas
inc
ror
fiadd
jl
rcl
je
in
icebp
sahf
aad
xchg
das
loope
xor
and
fisttp
xchg
xchg
jge
jb
xlat
outs
fsubp
in
scas
bound
repz
pop
mov
(bad)
xor
mov
xor
leave
jns
mov
mov
push
dec
leave
push
int3
push
and
arpl
das
movs
mov
js
sbb
repnz
inc
push
dec
sahf
data16
int
fisub
add
sbb
jmp
aaa
mov
scas
test
into
mov
cmp
lahf
loopne
imul
cmp
data16
dec
scas
lods
mov
pop
lock
shl
cmp
test
xor
les
fidivr
jge
out
adc
jecxz
icebp
ins
inc
or
clc
jmp
push
iret
(bad)
jnp
pop
aaa
jecxz
mov
mov
xor
dec
mov
std
push
pop
mov
jmp
pop
xor
jns
pop
(bad)
sti
test
js
scas
in
repnz
cs
sbb
das
jmp
sub
inc
aas
pop
lock
inc
scas
in
adc
jne
pop
jl
lock
push
rcl
add
jbe
jns
lidtd
mov
repnz
xchg
push
aaa
aaa
cwde
loope
lea
cmps
cmp
jbe
loopne
sbb
loope
xor
and
pop
add
mov
pop
jmp
out
test
repnz
outs
mov
jb
xor
aad
dec
clc
xchg
cmp
mov
jne
mov
scas
dec
or
jne
fisttp
clc
pop
cmp
pop
inc
shl
jmp
inc
lock
or
push
mov
outs
aam
mov
rcl
lods
push
push
inc
sti
add
xor
cmp
leave
repz
lock
ret
add
int3
mov
lock
sahf
and
xlat
test
pop
add
loopne
js
jns
mov
add
dec
(bad)
mov
fwait
aaa
mov
jae
das
pop
aaa
repnz
ret
sub
dec
dec
out
call
cmp
popa
ror
jge
(bad)
xchg
cmp
lock
dec
loope
mov
cld
or
pop
in
cmp
in
fwait
test
outs
fs
les
add
adc
ret
adc
in
mov
aad
jmp
fwait
stc
cli
dec
out
imul
or
stc
add
add
xor
jg
loopne
add
jns
lea
sub
xchg
imul
adc
jg
or
clc
pushf
cs
xchg
cmp
scas
in
inc
ror
cmps
fwait
xchg
or
(bad)
jle
sbb
mov
and
jp
gs
sti
movs
cs
push
retf
cmps
push
jbe
ror
adc
in
xchg
xchg
sub
stos
sbb
push
hlt
repnz
loop
(bad)
mov
mov
pop
sub
addr16
mov
cli
jge
(bad)
(bad)
std
sbb
cdq
xor
mov
sti
test
fwait
xchg
fst
or
das
adc
repz
adc
xor
mov
mov
aaa
pop
ror
or
xlat
dec
shr
mov
hlt
lahf
pop
push
out
adc
push
retf
or
cli
inc
push
ins
arpl
les
add
sbb
dec
dec
fsubp
jp
ror
pop
loope
rol
or
fdivr
retf
xchg
jne
xchg
sub
dec
mov
out
jb
push
jge
pop
ror
xchg
fst
dec
dec
scas
in
in
dec
cmp
pop
sti
(bad)
popf
leave
pop
pop
pop
and
xor
xor
lods
sub
cld
cs
and
mov
mov
cmps
icebp
sahf
push
out
xor
dec
test
or
push
mov
push
shl
scas
call
ret
sti
ins
xor
dec
cmps
shr
jb
in
mov
cld
dec
pop
aaa
jae
loopne
nop
lock
push
out
jbe
aas
or
cmp
jg
jbe
lea
pop
jbe
adc
arpl
pop
sub
jl
clc
push
add
ja
iret
push
cld
jle
mov
inc
(bad)
cmp
scas
ins
mov
data16
aam
jb
push
sub
arpl
sub
mov
xlat
xchg
lock
jno
aas
pop
lock
mov
jle
loopne
xlat
cs
xchg
or
dec
ret
mov
test
clc
aad
hlt
xor
sub
sbb
aaa
adc
mov
out
adc
sbb
sub
sub
or
loopne
mov
pop
or
inc
out
imul
cmp
das
xor
data16
mov
lods
jbe
loopne
pop
clc
fild
jle
jbe
mov
aas
pop
lock
call
and
sbb
mov
loop
fild
jg
(bad)
jle
jle
mov
cli
xlat
push
sar
aas
(bad)
mov
arpl
shl
dec
push
ret
shr
inc
add
(bad)
dec
pop
cld
pop
fisttp
pop
lods
or
add
aas
loope
ror
add
add
int
sar
add
xchg
mov
dec
out
jo
dec
jbe
lock
clc
add
mov
(bad)
pusha
rcr
push
cld
ins
cmp
lock
(bad)
cmp
push
rcl
in
pop
lock
or
add
cwde
inc
lahf
rcl
push
ja
shr
(bad)
adc
jg
loopne
popf
pop
cdq
xlat
cmp
sbb
sub
cld
int
jl
xchg
fnstsw
fisttp
clc
cmps
test
outs
sar
arpl
sub
mov
popf
cld
fwait
dec
icebp
(bad)
jno
pop
cmps
stos
ss
mov
mov
xchg
popa
mov
adc
jcxz
add
dec
push
jge
inc
pop
lds
pop
fxch
or
(bad)
js
hlt
retf
(bad)
std
adc
hlt
retf
retf
in
retf
fisub
fst
imul
or
imul
add
sti
movs
xchg
xchg
std
push
fld
sub
inc
das
mov
and
xchg
push
rcr
outs
jb
and
scas
es
sar
jne
in
cmp
out
fwait
popa
mov
mov
pop
(bad)
push
or
add
lahf
and
pop
(bad)
sti
dec
mov
ja
std
adc
push
icebp
(bad)
mov
fisttp
pop
int
pop
imul
xchg
cmp
fldcw
mov
adc
mov
scas
fmul
lahf
shl
jp
pop
sub
arpl
clc
sbb
retf
xor
pop
aaa
and
stc
add
lahf
shr
cmp
gs
or
pop
cli
dec
scas
ins
push
jbe
lock
repnz
loopne
retf
inc
shr
adc
fisubr
jb
daa
add
jmp
loopne
daa
loope
es
sar
(bad)
fst
add
loope
mov
dec
sub
or
push
mov
retf
inc
cmp
jmp
cld
and
aaa
jmp
adc
add
ds
inc
clc
lahf
cmp
es
and
mov
clc
inc
adc
push
or
or
pop
lock
xor
sbb
or
fwait
inc
mov
mov
or
jne
and
addr16
push
leave
push
shl
push
cld
loopne
sub
clc
adc
mov
out
(bad)
adc
jl
clc
pop
add
sar
lock
aaa
mov
stos
or
ja
ds
add
dec
inc
pop
shl
cli
lahf
cmp
ins
add
mov
lock
retf
(bad)
fcomp
retf
mov
ja
rol
cmp
sbb
sbb
retf
sbb
jl
rcr
rcr
loope
add
mov
loopne
mov
xchg
sbb
add
shr
cmp
clc
sar
push
jbe
ror
mov
cli
or
iret
rol
xchg
sub
pop
dec
lock
mov
cmp
loopne
cwde
cmps
fwait
cmp
mov
jne
out
adc
cmp
inc
add
test
mov
fiadd
lods
daa
clc
mov
ror
popf
jp
loopne
sub
cmp
(bad)
cmp
pop
mov
ds
in
stos
pushf
loopne
cli
dec
dec
mov
add
pop
(bad)
jg
xor
das
mov
in
outs
nop
cmp
jne
sti
movs
dec
sub
pop
fimul
add
in
sar
cmc
mov
jbe
mov
out
ffreep
sti
popa
fisub
xor
scas
fisub
sar
inc
fimul
jo
fisttp
sbb
push
mov
jg
rcl
lds
int3
scas
hlt
cmc
and
outs
mov
mov
fist
lock
xchg
cmps
fwait
adc
jg
jnp
fwait
outs
and
gs
cmp
mov
daa
je
xchg
xor
cld
ror
cmp
retf
in
mov
aaa
push
add
cmp
retf
(bad)
pop
imul
out
ds
mov
fld
jmp
clc
jmp
call
icebp
jle
jbe
retf
pusha
mov
fadd
push
fsubp
pop
ret
jnp
fwait
outs
and
out
and
outs
(bad)
sti
or
js
sti
sub
jg
fisub
ror
ss
stos
add
shl
aaa
jb
fucomip
pushf
loopne
ror
and
pop
je
ret
inc
clc
adc
pop
test
in
cli
das
push
fsubp
mov
mov
dec
rol
xchg
jmp
loopne
add
rcl
sbb
(bad)
xor
mov
inc
sub
push
and
adc
cli
xlat
mov
outs
or
mov
loope
out
dec
(bad)
dec
mov
jle
shl
mov
fld
pop
imul
inc
clc
test
jbe
clc
(bad)
jle
stos
add
pop
cld
cmp
sti
out
fcomp
cli
mov
sbb
mov
loopne
rcr
cli
or
sub
push
rol
scas
mov
dec
fisubr
pop
in
dec
cs
lock
ds
cmps
push
retf
lock
or
iret
pop
jl
adc
add
add
repz
clc
aas
add
or
cmps
push
dec
xlat
dec
xchg
sub
sub
pop
and
aas
loope
dec
outs
lods
mov
dec
pop
mov
das
sbb
push
hlt
pop
std
or
add
push
daa
pop
enter
jle
iret
cmp
loope
mov
lahf
or
add
loope
cld
lahf
add
pop
rcl
das
adc
or
not
(bad)
jp
aas
push
dec
retf
xchg
sub
cmp
aaa
push
mov
mov
fst
sbb
cmps
ja
cmps
add
and
hlt
mov
es
addr16
mov
xor
clc
mov
xor
lock
mov
loope
jne
in
fs
dec
addr16
cmp
sbb
stc
aaa
sar
daa
xlat
push
js
cld
xchg
jmp
loopne
je
ins
daa
add
mov
cld
add
(bad)
cdq
fs
(bad)
das
sbb
int
ja
ror
xor
jl
fldenv
pop
loopne
(bad)
adc
adc
in
outs
cmps
repz
sbb
sbb
outs
jb
(bad)
jnp
mov
adc
pushf
mov
movs
mov
jmp
cdq
dec
loop
ss
dec
ret
sti
mov
jle
test
fisub
add
ds
(bad)
test
cmp
repnz
int
cmps
lea
vandnps
inc
js
or
mov
rcl
lock
das
sbb
pop
cmps
rcl
hlt
loop
loope
mov
or
iret
jmp
js
stos
jge
ficom
jge
daa
clc
push
add
mov
push
mov
dec
push
icebp
pop
xor
arpl
xchg
pop
lea
gs
push
jbe
add
fisttp
dec
inc
fst
dec
aaa
mov
sub
imul
xor
and
sub
push
sub
jae
in
dec
pop
sbb
cwde
inc
out
adc
loop
mov
jnp
shl
(bad)
dec
sbb
fnstsw
fisttp
ficomp
fbld
leave
stc
sub
imul
outs
mov
(bad)
retf
mov
sbb
mov
cdq
and
adc
pop
stos
sti
movs
fimul
push
sub
aaa
push
shr
call
pop
ins
inc
inc
pop
add
repz
int
addr16
mov
jl
addr16
pop
ror
xchg
pop
inc
ret
loope
mov
repz
test
loopne
rol
xchg
xchg
jg
push
rcl
lea
push
cmps
push
jnp
mov
push
xor
ror
and
or
daa
or
cdq
cmp
cld
cmp
adc
push
retf
mov
sbb
pop
lahf
push
lods
cmp
dec
inc
pop
add
mov
ins
sbb
xor
mov
add
add
or
add
inc
sar
loope
mov
stos
sub
cmp
adc
cli
mov
adc
repz
daa
add
pop
loopne
add
xor
jle
loopne
rcr
push
shl
(bad)
mov
adc
inc
repz
out
mov
dec
ror
aas
add
jge
repnz
or
das
in
ds
shl
scas
add
sar
daa
sbb
loopne
add
pop
or
aas
jmp
push
loope
push
hlt
inc
repz
mov
retf
mov
xchg
lock
adc
mov
mov
mov
dec
imul
pop
ins
mov
jp
mov
and
fs
mov
call
(bad)
mov
je
cdq
jmp
dec
xlat
int
ins
dec
enter
aaa
xor
jg
(bad)
adc
xor
cli
ror
ja
fucomi
movs
stos
ss
js
hlt
dec
dec
ds
mov
jle
push
ret
xchg
aaa
cmp
dec
cmp
xchg
pushf
movs
jmp
int
fisub
inc
cmps
mov
jp
ss
loop
sahf
adc
xor
arpl
xchg
mov
mov
mov
mov
sub
aas
mov
neg
add
xchg
add
popa
add
shr
mov
mov
sbb
cmp
mov
sar
mov
sub
loope
retf
outs
cmp
or
(bad)
cmps
sbb
aas
js
push
fwait
outs
dec
ret
sti
outs
icebp
(bad)
ja
(bad)
sbb
sbb
sub
inc
ffreep
sbb
lods
fiadd
outs
lock
std
inc
mov
cmc
retf
out
ja
std
push
mov
ins
or
repnz
and
data16
sub
inc
ret
mov
dec
clc
std
add
loopne
and
jge
aaa
jae
loopne
add
xchg
add
push
mov
mov
into
push
leave
push
ror
push
aaa
rol
fisttp
clc
pop
test
push
call
lock
loope
or
(bad)
cmps
mov
ror
fcomp
sub
arpl
xor
in
ins
wbinvd
jg
or
add
or
cli
jnp
clc
(bad)
daa
ins
hlt
rol
mov
pop
(bad)
add
adc
pop
cwde
leave
pop
fld
test
jge
add
jnp
mov
mov
dec
shr
cld
mov
cmps
shl
iret
out
call
inc
fild
ja
lock
(bad)
mov
cld
lea
retf
test
sbb
mov
clc
(bad)
imul
adc
(bad)
(bad)
fsub
mov
pop
scas
in
mov
loopne
ret
push
cmp
jnp
das
jmp
retf
sub
fild
gs
dec
mov
movs
mov
xor
add
push
pop
aaa
and
sub
call
add
ret
cmp
(bad)
(bad)
cmp
xchg
int
pushf
stos
or
xor
loope
std
inc
add
aas
add
inc
rcr
dec
push
hlt
or
aas
or
adc
aaa
jmp
jp
push
sub
dec
lock
sbb
mov
das
pop
mov
loopne
inc
je
loopne
sbb
mov
out
fwait
(bad)
lock
jg
js
daa
out
lock
mov
lock
rcr
push
loope
arpl
mov
aad
push
hlt
sub
mov
push
mov
je
jl
mul
pop
or
jmp
movs
retf
out
scas
dec
xchg
frstor
add
add
es
adc
repz
ror
or
or
jecxz
stos
adc
mov
sar
pushf
loopne
mov
icebp
jle
fiadd
retf
xchg
retf
mov
pop
int
cmp
out
ret
add
je
gs
ins
ret
sbb
mov
mov
ficomp
(bad)
sti
xor
(bad)
push
popf
inc
aas
out
dec
mov
ds
cli
add
mov
es
cmps
retf
cs
mov
dec
lock
mov
es
sbb
lods
fbld
jmp
iret
loopne
ds
mov
jnp
add
or
lahf
adc
mov
push
push
jbe
add
mov
mov
fiadd
(bad)
mov
ficomp
add
mov
std
xor
lock
jne
mov
loopne
js
call
add
iret
xchg
fisttp
into
ds
add
movs
ret
test
sbb
mov
xchg
cwde
or
xchg
cmp
ins
or
jp
push
jnp
loopne
add
ja
iret
rol
jno
sti
out
scas
cmp
(bad)
fsub
ds
std
push
sbb
loopne
inc
ret
lock
clc
addr16
jg
inc
loope
ds
lock
add
shr
clc
adc
daa
add
mov
and
ss
xchg
pop
jmp
mov
rcl
call
loopne
cmc
mov
cmp
pop
fld
das
sti
data16
not
loopne
jae
push
shr
cmp
sbb
jmp
mov
jmp
cmp
cdq
xlat
les
jle
jbe
cmc
cmp
jmp
mov
mov
pop
jbe
adc
jns
xchg
mov
add
xor
push
dec
data16
and
shl
retf
jle
sbb
and
sti
add
dec
in
add
psubb
(bad)
(bad)
addr16
outs
cmps
rcl
test
fwait
cmc
retf
or
clc
pushf
push
hlt
sti
call
dec
stc
aaa
shr
fisttp
mov
out
add
push
add
ror
or
dec
inc
mov
pop
inc
pop
popf
dec
shl
xchg
rcl
or
fistp
xor
mov
sub
movs
mov
dec
inc
pop
jns
dec
scas
add
pushf
push
stos
std
es
xor
cmps
add
shl
dec
out
scas
xor
fwait
pop
add
sub
gs
mov
mov
into
in
shl
mov
aaa
and
push
cmp
retf
push
hlt
test
xor
arpl
mov
mov
add
loopne
and
push
pop
out
scas
in
aam
push
xor
add
cmps
mov
mov
sar
mov
lock
push
hlt
psraw
jle
lahf
xor
or
adc
jecxz
std
inc
inc
rcl
mov
jge
or
fidiv
or
xchg
das
fs
pop
stos
mov
daa
js
mov
outs
xor
fmulp
and
cmp
jle
add
pop
jp
aas
outs
mov
mov
mov
call
sub
addr16
mov
or
iret
adc
mov
dec
hlt
dec
dec
(bad)
outs
sar
mov
mov
inc
mov
mul
ins
inc
test
lock
(bad)
cdq
outs
xor
dec
mov
pop
rol
pop
es
add
in
out
pop
mov
cld
pop
fmulp
(bad)
jg
inc
jmp
inc
rcr
mul
mul
les
fisub
dec
sub
cmp
sub
pop
out
je
retf
lea
xchg
mov
dec
lock
js
stos
dec
jbe
(bad)
sti
sti
lock
ficom
push
frstor
icebp
jle
fdivp
adc
jmp
call
arpl
mov
js
or
ds
gs
xlat
loope
scas
xchg
lock
add
ret
sub
lea
mov
cs
fisttp
lock
loopne
ins
ds
dec
ret
hlt
mov
cmp
jmp
retf
push
dec
sbb
inc
clc
dec
(bad)
not
int
loopne
mov
or
xchg
inc
js
mov
cdq
gs
loopne
arpl
dec
add
rol
(bad)
ror
cs
or
pop
jbe
push
dec
test
pop
in
xor
pop
add
ja
xchg
(bad)
adc
in
xchg
adc
add
or
cli
push
add
cmc
adc
loopne
or
mov
das
and
mov
dec
push
ret
ror
loopne
add
or
adc
push
add
loopne
cmc
dec
outs
or
loope
jp
mov
sbb
clc
xlat
add
sbb
iret
add
aaa
add
jo
test
jne
push
in
fs
xchg
adc
sahf
xor
lahf
add
dec
rol
stc
mov
pop
loope
rep
cmps
fisttp
clc
cwde
or
aas
mov
jg
mov
push
call
add
pop
adc
mov
out
fild
retf
mov
add
jns
iret
adc
mov
sub
dec
sbb
adc
jae
dec
or
mov
fisubr
add
lock
fcomi
add
push
jmp
xor
scas
or
fnstsw
mov
loopne
cmp
pop
(bad)
jg
add
pop
les
sbb
push
mov
call
mov
cmp
arpl
lahf
adc
xlat
jmp
mov
clc
dec
mov
add
jmp
add
(bad)
cmp
dec
cmps
mov
call
pop
push
out
iret
loope
add
loopne
cmps
loopne
sbb
xor
cmps
jmp
leave
sbb
jmp
mov
dec
js
add
not
jae
jle
ficom
loop
jnp
das
mov
jecxz
cmps
daa
clc
in
or
fldcw
es
or
lock
data16
out
xchg
frstor
push
fdivrp
ror
test
idiv
or
mov
cld
clc
adc
dec
or
clc
push
mov
sar
jg
cmp
or
jle
add
test
lock
mov
fisttp
ret
lock
call
xchg
sbb
fisttp
push
loopne
add
pop
add
cmp
mov
out
inc
or
mov
(bad)
push
sar
fidiv
jno
scas
xchg
lock
xor
add
mov
into
lock
mov
mov
out
add
imul
add
cmp
mov
jae
out
add
lock
cmps
jmp
cld
dec
and
loopne
xchg
cmp
and
stos
xchg
and
add
pop
dec
clc
cwde
test
lock
add
pop
and
clc
sbb
mov
mov
int3
mov
add
(bad)
sbb
sar
sar
mov
adc
cmps
add
pop
add
fwait
pushf
sub
clc
add
and
pop
ror
sbb
jae
dec
or
scas
add
pop
cmp
push
push
cld
(bad)
or
xchg
add
cmp
sti
data16
mov
add
daa
pop
enter
mov
aaa
push
jbe
jmp
add
test
lahf
add
jo
or
mov
loopne
mov
fsubp
stos
pop
fst
cmp
(bad)
out
shl
mov
dec
scas
inc
ror
loopne
or
shl
mov
(bad)
sub
loopne
mov
sub
std
push
pop
add
and
addr16
dec
cmp
loopne
shl
adc
inc
out
fwait
lea
call
xchg
pop
call
out
push
cld
mov
loopne
sar
fisttp
clc
shl
push
outs
push
loopne
add
adc
sbb
add
stos
cmc
or
mov
inc
(bad)
sbb
repnz
mov
add
(bad)
and
loope
loop
dec
pop
loope
js
loopne
cmps
sahf
loopne
loop
sbb
or
cs
jbe
cmc
mov
cmps
cli
xor
cs
sub
pop
xchg
dec
push
hlt
retf
xor
(bad)
cmps
jo
lahf
loop
add
shl
(bad)
lock
pop
ret
sti
stc
into
mov
adc
std
into
aas
mov
lock
js
dec
daa
pop
pushf
stos
pop
loope
sar
jp
pop
loope
out
jmp
sub
stos
adc
inc
repz
rcl
or
sbb
fst
shl
sub
jecxz
call
add
fimul
int
mov
inc
out
jmp
sbb
clc
push
repz
jmp
fs
lods
addr16
add
add
dec
scas
lds
xchg
dec
js
dec
inc
fild
leave
leave
mov
ins
hlt
sahf
jbe
add
neg
mov
dec
inc
mov
dec
aaa
lods
cmps
lea
mov
mov
repnz
out
cmp
fidivr
mov
cdq
jg
pop
stos
add
cdq
jg
lea
and
sahf
dec
clc
inc
hlt
adc
inc
clc
es
sar
and
loope
mov
pop
jl
loopne
add
mov
ret
aam
ds
lock
add
inc
add
add
in
shl
dec
ret
jl
ror
outs
rcr
ret
mov
push
loope
or
sbb
out
add
mov
(bad)
fmul
int3
mov
add
int
call
add
rcr
inc
lahf
add
inc
sar
ror
clc
in
or
mov
inc
sbb
stos
mov
pop
sub
xchg
or
js
gs
push
jbe
loopne
or
xor
retf
(bad)
pop
dec
aas
(bad)
mov
gs
add
mov
sti
adc
mov
inc
mov
cli
dec
out
inc
repz
shr
pop
add
jg
cmp
clc
sar
pop
ret
rol
div
xor
daa
inc
shl
test
sbb
mov
add
add
das
add
lock
add
mov
pop
(bad)
jb
mov
jae
in
stos
add
rol
stos
std
es
dec
sar
sbb
mov
cld
ds
hlt
xchg
call
das
adc
stos
add
sar
sti
push
hlt
repnz
retf
jns
xchg
jg
sbb
clc
iret
adc
jns
lahf
mov
loopne
add
cmp
(bad)
ds
aaa
xor
test
int
fimul
in
xor
call
add
loopne
xlat
scas
pop
jns
sbb
es
and
or
jmp
repnz
adc
dec
jmp
xor
(bad)
int
cli
dec
scas
in
cli
xor
pop
fstp
repz
ficom
jg
out
shl
arpl
pop
sbb
jae
stc
bound
jl
mov
mov
dec
push
ret
or
arpl
fs
adc
int
lock
cld
push
add
in
fs
je
(bad)
call
imul
jl
dec
jg
out
pop
sar
push
and
das
xchg
adc
mov
clc
mul
std
cmp
pop
(bad)
aas
js
cmps
pop
jbe
js
scas
pop
dec
aas
ret
pop
je
ret
ds
xor
enter
sbb
cmp
mov
jge
ficom
mov
(bad)
sti
add
push
mov
ins
hlt
push
mov
pop
out
int
dec
jne
push
test
jbe
and
in
mov
push
ins
inc
rcr
das
jmp
clc
jae
retf
js
add
pop
cmc
dec
outs
push
mov
dec
push
icebp
pop
xor
jb
mov
fldcw
and
inc
js
pop
leave
cli
mov
jmp
dec
dec
daa
loope
xchg
mov
xor
test
xchg
dec
lahf
test
mov
mov
sahf
es
test
dec
arpl
test
jl
or
cmp
mov
add
inc
mov
add
imul
pop
jl
inc
fstp
push
mov
fwait
dec
clc
mov
xchg
popf
psubb
xchg
pop
adc
ds
dec
clc
pop
daa
pop
xor
ror
(bad)
push
shl
jmp
cmps
add
push
add
ret
ret
loope
jl
lock
aas
add
inc
addr16
inc
or
outs
aam
hlt
xor
dec
fisubr
cmp
mov
cld
lds
add
push
sbb
push
add
es
pop
loope
mov
jl
sub
(bad)
lock
add
or
adc
mov
clc
add
pop
loopne
mov
cli
mov
lahf
add
lock
add
pop
rcr
sti
movs
mov
pop
jbe
dec
dec
test
pop
xor
lods
jl
aaa
jmp
jle
lock
inc
mov
fcmove
mov
cmp
iret
shl
cli
imul
add
add
das
sub
fild
clc
retf
test
sti
add
test
xor
dec
enter
loopne
out
fidiv
ja
rol
outs
jb
jmp
jns
dec
add
outs
push
dec
ss
sti
popf
add
push
aaa
pop
add
lahf
add
add
sbb
and
cmp
aas
mov
inc
jg
loopne
xor
clc
shr
std
xchg
jmp
xchg
stc
daa
out
outs
scas
call
test
inc
fsubp
add
add
mov
data16
pushf
push
hlt
cmps
jecxz
xor
fisttp
call
gs
test
mov
or
clc
rcl
mov
mov
xchg
lea
add
lahf
cmp
arpl
jecxz
or
sub
fstp
fwait
call
gs
pop
jbe
popa
mov
js
outs
xchg
inc
clc
(bad)
dec
clc
cdq
js
lock
out
lahf
in
fbld
ror
dec
js
sbb
sbb
shr
dec
js
fst
adc
aas
push
addr16
add
ds
mov
neg
pop
or
adc
and
loope
jo
mov
js
cmp
out
cs
stos
outs
mov
adc
mov
and
mov
neg
pop
lock
push
iret
les
not
or
dec
icebp
mov
inc
pop
leave
movs
fwait
xchg
cmp
(bad)
jnp
fidiv
lahf
dec
rol
jle
imul
rcl
jl
ja
mov
out
sahf
hlt
sar
xchg
sub
call
ja
pop
add
sti
movs
in
sub
daa
mov
cdq
test
inc
add
dec
jbe
dec
clc
mov
inc
aas
loop
hlt
push
rcl
adc
pop
stc
cli
sub
xchg
lock
movs
lods
push
push
retf
das
jge
xor
and
pop
int3
adc
pop
dec
pop
in
xchg
or
arpl
sahf
test
lock
jp
xchg
push
aaa
ds
add
dec
clc
adc
mov
loopne
jmp
pop
mov
stos
jge
or
push
dec
cdq
dec
cmp
add
aad
(bad)
fmul
xor
sbb
inc
add
sbb
and
or
arpl
sti
addr16
in
push
hlt
lods
add
lods
mov
add
das
add
push
jl
jbe
cmp
je
xchg
or
and
imul
sub
push
mov
clc
out
jmp
loopne
aam
push
mov
jge
rcl
mov
aaa
rol
movs
ret
sub
ins
hlt
cmp
push
jmp
mov
sar
cmp
cmps
shr
aas
pop
cld
cs
imul
adc
lahf
xlat
cmp
daa
add
pop
jbe
mov
loopne
aam
cmps
jmp
es
adc
stc
inc
ss
retf
sub
xor
jnp
pop
add
xchg
push
add
pop
adc
mov
jmp
mov
lock
cwde
pop
jbe
cmc
adc
mov
pop
sar
xlat
jecxz
leave
adc
mov
jl
sub
hlt
add
sub
mov
lods
cli
xor
inc
rcr
test
repz
pop
mov
pop
jge
xchg
(bad)
mov
jecxz
sbb
mov
add
jg
fidivr
retf
not
test
xchg
adc
push
add
add
mov
sub
fisubr
mov
out
jae
call
fisub
mov
xor
add
lods
fwait
xchg
std
push
aaa
call
clc
mov
clc
sbb
add
xor
sbb
pop
mov
mov
jmp
imul
jp
xor
outs
mov
adc
cmps
jecxz
mov
pop
or
lods
add
jl
pop
mov
retf
sub
add
mov
std
jb
(bad)
jp
iret
rol
cli
es
adc
jmp
mov
or
adc
ffreep
adc
fwait
hlt
add
loop
jg
fimul
sar
js
je
cmc
jmp
jle
add
retf
xchg
pop
xchg
cld
jmp
pop
out
pop
mov
push
sbb
mul
jge
add
hlt
push
push
shl
jmp
jge
fidivr
mov
add
mov
sub
sbb
in
adc
cmps
jecxz
push
fidivr
jle
add
or
jmp
xchg
push
mov
ins
mov
mov
out
test
sar
jp
push
sub
jb
pop
push
add
das
and
das
sti
data16
out
add
int3
mov
xchg
lock
and
mov
cmc
or
or
and
xor
push
mov
mov
ds
jmp
pop
ds
shl
lock
nop
lock
cmp
ret
mov
dec
clc
push
adc
mov
add
dec
dec
js
adc
daa
ret
push
add
fwait
lahf
lock
or
add
ret
push
cmp
cld
je
out
loopne
into
mov
dec
shl
pop
clc
mov
mov
cmp
jnp
dec
or
das
mov
lock
jae
dec
adc
retf
cs
jl
adc
add
or
cli
add
add
iret
adc
xor
scas
pop
(bad)
jge
loopne
cwde
xchg
lock
jle
loopne
into
dec
clc
mov
aam
jle
lock
add
(bad)
pop
int
sbb
pop
sub
adc
add
outs
dec
lock
loopne
xor
mov
(bad)
ja
mov
add
das
mov
lock
std
pop
cmp
pop
mov
xlat
add
inc
jge
xchg
cmp
pop
cdq
add
xor
pop
imul
(bad)
sub
xlat
add
aam
shl
mov
add
add
stos
sub
in
psubb
loopne
call
outs
pop
jl
lock
push
jnp
loopne
addr16
in
shl
xlat
add
test
aas
or
jnp
mov
popf
js
loop
pxor
mov
dec
push
out
cmp
daa
lock
aam
mov
or
(bad)
sub
daa
push
ror
mov
retf
xor
icebp
fiadd
outs
sar
cld
cs
ja
mov
(bad)
dec
aaa
mov
mov
out
sbb
in
cmp
ja
mov
imul
leave
in
cmps
ficom
ror
rol
lock
ins
mov
cmc
arpl
fnsave
(bad)
jbe
jge
add
fidivr
aaa
and
in
int
mov
ja
ds
ror
pop
add
(bad)
div
test
sub
pop
mov
jb
pop
stos
dec
aaa
mov
pop
cmps
shl
lea
call
shr
jno
ror
jg
fidiv
dec
inc
das
sbb
mov
stos
mov
leave
adc
mov
cmp
repz
rol
mov
xchg
or
and
and
dec
pushf
scas
fwait
xchg
test
pop
dec
enter
retf
and
loope
mov
lods
adc
xor
clc
push
addr16
add
fldcw
adc
shr
cmp
inc
fisttp
push
adc
ds
cli
or
das
cmc
pushf
(bad)
fwait
icebp
add
sub
or
jl
scas
in
jb
lods
jbe
xor
(bad)
sar
fwait
jns
loopne
retf
adc
ins
adc
inc
fnsave
xor
test
xor
pop
jg
loopne
jmp
mov
cmp
mov
pop
or
jmp
cli
add
repz
iret
adc
ror
inc
test
mov
scas
add
push
rol
outs
and
dec
sbb
fild
mov
in
pop
or
sub
add
push
shl
sub
xlat
inc
rcl
fild
lahf
psubb
lock
adc
add
add
aas
pop
cmps
push
dec
daa
loopne
sbb
loopne
xor
mov
in
fs
je
ror
jl
sbb
movs
mov
lock
addr16
cmovl
dec
add
mov
lahf
nop
xchg
lock
psubb
lock
fisttp
clc
and
mov
sbb
inc
aas
fwait
mov
lock
or
sbb
jl
loopne
hlt
lahf
pop
daa
add
mov
arpl
mov
xlat
add
mov
push
out
call
push
jbe
sub
sbb
xor
in
int3
sbb
shl
rcl
or
imul
int
add
daa
clc
xor
aas
dec
ror
call
xlat
dec
fdivr
push
(bad)
push
rcr
bound
loope
out
(bad)
scas
dec
rcl
mov
stos
ins
int3
scas
hlt
hlt
arpl
mov
int3
mov
pushf
sub
or
fidivr
(bad)
lea
pxor
aaa
mov
pop
and
mov
jge
cli
add
pop
jno
pmuludq
int3
mov
inc
fistp
out
xor
loop
dec
movs
push
hlt
fiadd
jae
iret
adc
add
dec
shl
xchg
popf
lods
lahf
mov
sub
ins
and
cs
das
jmp
in
(bad)
adc
loopne
lock
ret
jnp
out
push
jo
call
mov
pushf
jp
add
aaa
ror
or
pop
add
sbb
fisttp
mov
jnp
scas
in
sahf
sar
in
sub
sar
mov
outs
cwde
dec
aaa
mov
push
or
or
jmp
jmp
jg
sub
push
loope
mov
add
pop
jmp
or
dec
mov
inc
outs
jb
mov
xchg
in
adc
cmp
rol
sub
stos
adc
inc
sbb
xor
inc
inc
pop
popf
cmp
push
fld
cld
fwait
xchg
cmp
push
adc
lock
std
or
mov
call
fnstcw
loope
adc
cmps
inc
clc
cmp
inc
clc
adc
mov
dec
sub
sub
mov
or
add
lock
rcl
cmp
loope
or
fiadd
das
sti
dec
mov
xchg
xor
mov
aas
(bad)
outs
add
stc
adc
cmp
cmps
push
push
cmp
pop
dec
inc
out
push
ror
push
shl
aas
fwait
and
jle
jns
cmovns
popa
adc
or
cmp
ret
push
mov
aaa
add
and
not
lock
jg
lock
(bad)
mov
xor
inc
pop
add
shl
mov
mov
adc
and
aaa
xchg
jbe
pop
inc
shl
popf
(bad)
cmps
sbb
mov
rol
push
sub
int
sbb
xchg
leave
pop
stos
add
sub
retf
or
clc
dec
pop
loope
and
xor
push
daa
add
rcl
scas
xchg
das
mov
cmc
add
loopne
xor
outs
pop
loopne
cmps
jmp
cwde
inc
js
shl
in
sar
js
jl
or
into
jle
test
mov
dec
call
mov
ror
xor
pushf
add
cmp
fild
mov
xchg
mov
inc
shr
mov
sbb
pop
sub
retf
or
or
add
inc
clc
xchg
push
sbb
push
aaa
pop
cmp
add
xor
fwait
outs
push
and
mul
loopne
movs
daa
js
dec
cmp
sub
pop
shl
cmp
loopne
shr
inc
sar
rcr
test
mov
or
ja
cmp
daa
daa
dec
aaa
push
mov
pop
cmps
ror
jge
push
jbe
adc
xchg
cmp
in
fisttp
cld
stc
js
int
fdiv
add
sub
or
mov
leave
sub
pop
xor
mov
mov
shl
js
in
fisttp
push
xchg
xor
lock
cmp
dec
popa
cmp
not
int3
mov
imul
dec
aaa
repnz
cs
xchg
pop
retf
adc
push
shl
loopne
sbb
sar
iret
loope
pop
mov
in
faddp
or
jmp
out
ret
out
xchg
retf
fwait
adc
pop
add
xchg
cmp
std
cs
lds
sti
je
lds
out
clc
pop
mov
add
das
jne
pop
fstp
test
mov
sar
(bad)
and
mov
pop
push
daa
add
es
or
daa
mov
cmps
call
lock
add
xchg
call
dec
xchg
test
call
push
aaa
dec
add
inc
mov
mov
lahf
push
sar
cdq
test
sbb
pop
xlat
dec
dec
ret
cdq
sub
mov
int3
mov
mov
mov
xor
xor
inc
aas
push
clc
(bad)
xchg
lock
push
sar
mov
(bad)
fwait
sbb
loope
cmp
cdq
sub
pop
xor
data16
aaa
rep
(bad)
jnp
xchg
jge
or
jg
loopne
push
cld
int
cld
bound
rol
clc
out
add
adc
pop
add
push
add
(bad)
lock
ds
test
fucomi
xchg
adc
mov
clc
data16
cmp
jns
imul
mov
xchg
mov
mov
dec
rcl
(bad)
lock
pop
add
add
pop
sbb
inc
pop
int
jl
loopne
add
jp
pop
cmp
test
jmp
mov
adc
push
shl
cli
push
add
dec
mov
add
aaa
add
inc
shl
shl
fild
cli
add
cdq
dec
popf
pop
cld
ror
iret
add
or
outs
pop
aas
xchg
add
add
xlat
adc
mov
push
hlt
repnz
outs
scas
jns
xchg
adc
xchg
push
shr
shl
fnstenv
sub
adc
add
(bad)
imul
mov
retf
xchg
inc
add
test
push
ror
call
rcl
jmp
cmp
addr16
sub
xor
adc
not
lock
pop
add
lock
data16
cmp
addr16
fsubr
pop
pop
fisub
sub
jns
gs
xor
mov
cmp
mov
call
in
pop
test
test
jle
jbe
mov
push
daa
fnstsw
mov
mov
ret
push
jge
retf
jmp
cdq
xchg
or
mov
imul
inc
aas
inc
shr
sti
push
add
push
cmp
retf
js
push
out
ret
pop
ror
je
ins
ret
sti
dec
mov
aad
mov
loopne
pop
js
xlat
cs
aad
call
inc
sub
mov
ds
push
rol
outs
out
or
gs
mov
jo
imul
add
out
cld
xchg
js
fwait
push
cld
sub
gs
pop
arpl
add
ror
js
adc
and
pop
call
stos
adc
out
sbb
inc
mov
das
push
add
sub
xchg
jg
adc
sbb
dec
adc
adc
inc
xor
enter
mov
shl
sbb
inc
pop
add
ret
cdq
mov
fldcw
in
fs
popf
cld
test
add
pop
push
cld
add
das
ins
mov
push
hlt
sti
jmp
test
fst
jmp
retf
loope
fld
add
ins
add
sbb
iret
xlat
test
xchg
(bad)
mov
cli
outs
inc
(bad)
in
ins
sbb
add
lea
sbb
add
arpl
add
lock
ja
jle
rcl
mov
jmp
aaa
jb
push
sbb
mov
clc
push
addr16
mov
adc
sar
iret
add
add
and
ds
mov
nop
mov
scas
inc
shl
clc
cdq
mov
into
and
rdmsr
or
daa
pop
aaa
test
add
jne
test
es
mov
fstp
sbb
lock
inc
sar
rol
pop
pop
dec
leave
and
cli
mov
fimul
push
call
retf
add
(bad)
dec
js
jl
dec
aaa
xor
jmp
cs
and
int3
mov
add
lea
arpl
aas
push
push
cld
dec
ins
stos
mov
dec
aaa
and
clc
cdq
fiadd
add
call
mov
or
ins
push
cld
sbb
iret
aam
push
std
cmp
mov
test
jge
test
jmp
sub
mov
shr
inc
aas
(bad)
ror
out
int3
(bad)
aas
mov
jecxz
push
fisub
sbb
int
pop
mov
pop
icebp
(bad)
loop
mov
daa
js
lahf
sbb
das
aam
aam
jb
mov
retf
popf
je
mov
pop
dec
lock
add
neg
mov
mov
mov
pop
test
mov
ret
out
jcxz
push
mov
and
addr16
faddp
test
retf
sbb
inc
mov
retf
xor
cmp
cdq
cdq
adc
imul
adc
scas
fild
jne
loopne
or
pop
rcr
dec
inc
pop
call
and
add
adc
cli
test
inc
shl
jmp
or
sbb
push
mov
daa
push
les
inc
pop
aaa
push
hlt
adc
clc
push
add
pop
test
popf
dec
mov
das
aad
mul
mov
add
or
das
ret
outs
jb
cmp
movs
push
ss
mov
jmp
adc
xlat
jne
xchg
dec
cmps
xchg
adc
pop
cmp
out
fwait
ds
sub
mov
cmps
and
push
out
mov
xchg
cli
or
jmp
or
adc
das
ds
(bad)
xchg
lock
stc
bound
das
sbb
cmp
lock
hlt
xor
lock
movs
jmp
push
in
loope
add
loopne
sar
sbb
lea
and
ds
sar
cli
mov
mov
cld
outs
add
shl
jp
clc
jbe
jle
pop
fld
sub
add
cld
ror
je
adc
and
xlat
call
ror
dec
arpl
std
nop
dec
cmps
fsubp
dec
cmps
outs
add
shl
js
fisttp
pop
pop
ror
add
jbe
scas
in
lahf
adc
add
lahf
sar
repnz
dec
cs
fwait
cwde
or
lahf
call
pop
inc
rcr
or
iret
add
lock
push
fwait
imul
js
dec
sub
dec
aaa
mov
pop
dec
leave
and
mov
cmp
ins
jne
mov
xor
push
jbe
adc
lods
jp
imul
lock
out
rcl
pop
sti
dec
scas
mov
lods
je
xor
repnz
fistp
push
movs
mov
jge
(bad)
mov
inc
or
stos
push
push
dec
retf
icebp
or
or
pop
(bad)
in
fadd
add
and
sbb
in
retf
scas
test
daa
sub
xchg
lahf
rol
vmread
lahf
xor
mov
lea
jl
sbb
jns
dec
cwde
sub
mov
into
xor
sahf
rol
shl
push
add
add
cmp
mov
xor
sub
dec
aaa
repnz
mov
(bad)
sti
or
imul
rcl
mov
loopne
push
loope
lea
les
out
add
push
push
loope
dec
dec
dec
lock
cmp
fs
in
js
sar
out
pushf
pop
fst
ds
fucomi
movs
jmp
gs
dec
aas
(bad)
mul
std
add
push
das
dec
aaa
jb
inc
xor
in
fs
mov
fbld
daa
mov
adc
xor
jg
mov
inc
dec
rol
rcr
add
daa
add
jnp
mul
fmul
dec
icebp
ds
or
mov
fisub
dec
(bad)
das
jmp
dec
jmp
shl
jge
pop
ror
pop
test
push
mov
lea
in
das
aas
loope
aaa
ret
sub
daa
jl
sti
movs
sbb
cmc
adc
pushf
cmc
adc
mov
nop
ds
mov
fucomip
mov
fs
dec
sub
push
clc
push
sti
call
lock
out
xchg
sub
cli
or
mov
push
lock
dec
js
shl
clc
xchg
test
imul
loope
sub
dec
clc
aad
jl
test
dec
fadd
push
in
outs
aaa
loopne
adc
repz
add
loopne
out
int3
mov
(bad)
mov
jae
(bad)
push
add
cdq
loope
xor
cmp
cmp
add
outs
mov
mov
lods
jl
pop
psubb
es
cli
push
outs
cmps
push
ror
outs
push
jl
add
or
cmp
fild
clc
sbb
inc
shr
pop
jbe
out
mov
in
cdq
gs
add
xchg
int
or
ins
push
add
leave
jp
das
jmp
popf
inc
mov
stos
mov
sub
xchg
cmp
fild
clc
inc
add
adc
in
(bad)
adc
retf
repz
add
mov
mov
mov
daa
clc
xchg
test
xor
add
sub
sbb
push
hlt
inc
cmp
jnp
jmp
mov
inc
aas
retf
pushf
loopne
cmp
adc
daa
sbb
xchg
dec
mov
push
ror
imul
daa
clc
pop
int3
cli
mov
lock
add
pop
fldenv
mov
ror
xlat
add
sahf
adc
arpl
ins
inc
rcl
(bad)
mov
dec
retf
dec
inc
mov
xchg
fwait
mov
ja
lock
jmp
mov
lds
push
mov
call
xor
jmp
sbb
test
in
xchg
retf
push
ror
(bad)
sti
dec
js
xor
fisttp
lea
iret
pop
ror
inc
clc
cs
add
fild
sti
pop
add
or
aad
mov
pop
lds
mov
retf
sbb
dec
popaw
ins
inc
shl
xor
in
ss
dec
or
std
sub
outs
(bad)
sub
test
scas
in
ss
leave
pop
jb
aaa
mov
mov
lock
repnz
mov
sbb
mov
sub
out
rol
js
icebp
sahf
sbb
repnz
and
imul
xor
push
ror
loop
inc
pop
int
cld
xchg
imul
xchg
mov
xchg
sbb
push
in
fs
int3
mov
lds
push
add
push
push
add
les
ret
fs
data16
jmp
cld
push
mov
push
(bad)
getsec
mov
sbb
xor
ret
fsub
std
sub
mov
inc
adc
pop
mov
add
add
and
imul
(bad)
jb
popf
jp
adc
adc
mov
outs
ins
mov
push
lock
add
cmp
inc
out
jmp
cli
ror
sbb
cmps
cdq
(bad)
mov
lock
sbb
jg
push
mov
cld
nop
scas
lahf
js
adc
xor
push
sbb
out
inc
rol
lods
push
ror
(bad)
push
pop
sub
ins
mov
xor
mov
arpl
lea
lds
inc
lods
call
or
lock
bound
cli
sbb
jg
sbb
push
sar
jl
jmp
add
add
iret
add
xchg
std
push
shl
shl
inc
das
xchg
das
in
lods
lods
fwait
sbb
retf
mov
and
pop
mov
mov
jne
jnp
jle
pop
cmp
je
test
fwait
imul
in
fs
add
push
or
adc
adc
das
add
adc
gs
pop
jbe
loope
cmp
sub
or
shl
scas
add
retf
ror
popf
lods
lahf
pop
xor
adc
outs
push
inc
pop
leave
xchg
dec
pop
lds
dec
cmps
div
add
outs
jb
ficom
(bad)
push
rol
cmp
es
cs
add
test
hlt
adc
call
or
sahf
loopne
sbb
mov
out
pop
mov
std
(bad)
lock
jno
imul
mov
call
das
cmp
sub
xor
js
xor
enter
add
jbe
retf
test
jg
fidiv
std
mov
dec
mov
mov
std
inc
pop
aas
xor
test
adc
pop
mov
cmp
mov
js
xlat
or
fisttp
clc
push
cmp
xlat
je
std
fcom
inc
xlat
lock
xor
(bad)
sbb
push
hlt
mov
cmp
js
mov
loope
xchg
std
inc
xor
aam
mov
icebp
fisub
and
idiv
sub
cmp
hlt
or
sahf
(bad)
sti
inc
data16
inc
and
ds
push
fwait
add
pop
fnstcw
and
or
or
mov
lock
mov
aas
and
sub
lar
inc
addr16
dec
inc
pop
add
cld
push
shr
jbe
jmp
popf
mov
mov
lock
pop
in
sub
jle
mov
mov
sti
add
mov
add
mov
sub
(bad)
sub
adc
retf
test
jmp
sub
mov
push
leave
adc
cmp
das
jmp
sti
movs
mov
cmp
iret
add
adc
gs
and
pop
xor
out
imul
push
scas
movs
pop
in
adc
fisttp
clc
sbb
xchg
cs
jnp
daa
pop
js
xchg
test
popf
cli
dec
repz
pop
in
sub
(bad)
fadd
rcr
xchg
add
loopne
inc
hlt
dec
mov
out
add
jge
(bad)
mov
loopne
mov
mov
xchg
repz
(bad)
nop
repz
dec
push
loope
add
pop
clc
xor
xchg
ins
mov
rol
add
add
add
dec
rcr
sar
sub
(bad)
int
fmul
lock
rcl
ss
adc
inc
push
hlt
cmp
outs
add
adc
gs
loope
(bad)
add
mov
and
std
add
call
fisttp
clc
sbb
dec
sbb
jl
inc
fild
fnstsw
out
lock
loopne
lods
ja
mov
pop
out
call
std
aaa
and
loope
add
loopne
call
pop
adc
fld
test
lds
clc
add
sar
(bad)
and
jg
loopne
add
cdq
pop
fnstcw
jae
das
add
xlat
dec
mov
rol
stc
sbb
ret
push
add
adc
and
sar
add
jle
jl
adc
push
js
lock
mov
pushf
loopne
loope
(bad)
cdq
inc
pop
adc
push
add
js
icebp
ds
rol
lock
pop
out
cmp
add
mov
std
std
add
xor
adc
pop
and
jnp
mov
mov
jl
not
retf
cli
or
and
das
xchg
das
arpl
and
push
loope
icebp
jle
fisubr
hlt
cmps
cmp
xor
ret
mov
mov
fisubr
out
pop
(bad)
sti
pop
ficom
ds
in
repnz
aaa
mov
jg
add
stos
outs
jb
sar
pop
fisubr
and
scas
ffree
aaa
mov
mov
inc
scas
call
cmp
bswap
jo
lods
mov
xor
fimul
dec
call
addr16
mov
fnstsw
jecxz
mov
or
retf
ds
fwait
cmp
popa
mov
(bad)
cwde
dec
mov
scas
loope
push
mov
(bad)
xchg
rcl
repnz
out
into
mov
lds
hlt
pop
add
call
ja
xor
inc
ds
dec
xlat
dec
push
jg
pop
aas
adc
push
dec
stc
sbb
dec
dec
call
dec
call
fucomip
mov
mov
cmps
adc
pop
add
add
push
scas
in
fs
popf
je
dec
sbb
xchg
pop
stos
sbb
std
test
hlt
or
ret
push
mov
out
mov
in
jg
jae
lahf
cwde
in
mov
jg
stc
sbb
cmp
je
js
rcr
mov
jae
xor
cmps
(bad)
mov
jge
lea
cli
in
sbb
cmp
pop
pushf
loope
jnp
outs
data16
xor
lahf
fsub
into
test
jecxz
lahf
xor
sub
fnstsw
pop
jbe
lods
jbe
loope
repnz
scas
rol
ret
sub
shl
retf
cmp
push
out
ds
inc
pop
push
jl
dec
lock
retf
add
fnsave
retf
push
retf
jge
lock
rcl
loopne
jp
pop
loop
mov
xlat
lea
push
jbe
ss
xchg
pop
or
mov
push
outs
or
ror
inc
pop
ins
sub
fwait
jne
cld
add
cli
arpl
pop
sub
addr16
je
arpl
xor
aas
movs
sti
movs
inc
mov
adc
repnz
scas
or
pop
add
jnp
out
cmp
pushf
loopne
and
fst
pop
ret
mov
add
(bad)
sub
test
or
ror
std
jl
lock
loopne
jecxz
dec
mov
mov
pop
loope
lahf
pop
xchg
sub
lock
mov
aas
mov
out
mov
add
xchg
adc
sbb
adc
sbb
js
adc
repnz
cmps
jmp
push
loopne
sub
mov
push
in
mov
adc
ror
lock
cmp
scas
hlt
or
add
lahf
(bad)
jnp
inc
lahf
out
pop
and
pop
loopne
das
mov
mov
jne
mov
lock
jb
jg
jae
pop
and
mov
lahf
pushf
dec
mov
or
inc
aaa
inc
inc
add
aaa
fisub
push
lods
sti
in
mov
jl
mov
dec
shr
xlat
adc
jae
clc
or
mov
mov
and
xchg
cmp
daa
loopne
cdq
scas
pop
sub
xlat
jmp
xchg
cmp
std
sbb
cli
push
dec
lock
loope
(bad)
imul
cmp
clc
and
sbb
loope
shr
push
loopne
sub
adc
psubb
test
jmp
pop
test
xlat
add
loopne
add
ds
inc
aas
xchg
test
add
add
cs
mov
xlat
jno
div
xlat
jmp
push
in
mov
add
cmp
(bad)
and
out
call
clc
and
seto
out
inc
mov
jl
lock
lods
test
add
jns
dec
dec
data16
jle
shr
loope
inc
je
or
ds
outs
and
adc
aas
or
sti
jmp
lahf
shl
aad
cs
hlt
test
in
scas
or
mov
mov
loopne
add
xor
cmp
fnstenv
shr
clc
das
add
cmp
daa
cmp
lock
leave
pop
push
rcl
sbb
clc
sbb
not
lock
add
test
es
sti
movs
adc
das
add
mov
adc
dec
add
adc
fbld
call
or
mov
test
or
mov
pop
add
sti
or
adc
adc
mov
(bad)
fld
inc
add
fwait
popa
mov
rcl
retf
dec
scas
in
cmp
clc
fsqrt
es
ds
adc
or
xchg
add
and
ds
mov
lahf
push
clc
sbb
aas
(bad)
jl
or
add
add
xor
loope
jmp
jae
xchg
popf
ins
mov
mov
add
add
cmps
mov
scas
add
daa
clc
fild
jg
daa
clc
test
cld
jbe
lock
add
mov
jmp
mov
call
jmp
mov
or
loope
ret
outs
jb
jno
(bad)
icebp
fimul
outs
jb
stc
mov
cmp
sbb
xlat
or
jae
mov
int
js
loope
cmp
cmp
in
loopne
leave
dec
loopne
xor
mov
mov
push
cmps
daa
js
push
sub
in
adc
fwait
movs
stos
(bad)
shr
pusha
scas
call
mov
mov
xlat
arpl
pop
loope
add
ret
sti
jmp
jge
stc
and
arpl
movs
pop
rol
js
adc
jns
pop
cmp
mov
mov
fisub
psllw
xchg
das
fs
adc
mov
fldenv
push
loopne
pop
loope
(bad)
jge
xor
adc
xchg
fwait
cmps
fwait
adc
mov
stos
ins
loop
mov
into
or
es
mov
dec
js
enter
loope
mov
cmps
sahf
cmps
shr
aaa
jmp
cmp
aaa
or
pop
sar
dec
cmp
jg
out
mov
lahf
pushf
cmps
outs
lock
out
cld
push
add
and
mov
add
fdivrp
(bad)
adc
add
jmp
add
retf
mov
jg
lock
es
push
sar
movs
jmp
cmps
lock
cmps
movs
shr
repz
daa
push
add
dec
sar
clc
cmp
adc
mov
test
adc
retf
mov
xchg
test
call
mov
leave
mov
inc
mov
mov
scas
add
add
or
add
aaa
mov
fsubp
stos
sub
push
jbe
and
dec
ret
js
mov
outs
cmps
rcl
inc
cmps
push
(bad)
jmp
clc
add
pop
add
and
out
or
fucomip
(bad)
fdiv
sub
jl
lods
add
add
pop
daa
pop
fsubr
pop
in
mov
add
xchg
cmp
pop
add
push
out
call
add
loopne
sub
xor
(bad)
and
je
ror
shr
push
or
clc
test
push
sub
adc
jg
jbe
cmp
clc
sub
clc
adc
sbb
(bad)
push
cmc
dec
dec
inc
pop
jns
inc
fbld
sti
data16
in
inc
ror
adc
cli
mov
mov
pop
in
outs
add
sti
data16
add
inc
fld
cmps
rcl
push
scas
in
out
xor
das
aam
xor
jg
lock
call
lods
imul
pop
mov
jmp
hlt
mov
test
cmps
add
cmp
je
pop
add
or
mov
int
pop
cdq
inc
pop
add
leave
jle
stc
cli
es
daa
js
stos
cmc
add
mov
out
add
daa
loopne
pop
jl
clc
adc
js
adc
sub
inc
icebp
cs
jbe
or
ins
and
push
(bad)
int
ror
mov
sbb
jbe
lock
push
jbe
loope
js
mov
jge
ffreep
sti
movs
push
hlt
pop
mov
xchg
fld
std
daa
daa
pop
arpl
jne
in
push
loop
mov
scas
fmul
lahf
loopne
sbb
dec
adc
jae
mov
call
inc
shl
adc
or
clc
push
sbb
mov
hlt
or
gs
fidivr
imul
ficom
add
es
inc
mov
in
add
dec
enter
int
sub
pop
test
jb
adc
jmp
loopne
loop
or
inc
mov
fidivr
mov
das
xor
lock
stos
into
fwait
pushf
(bad)
test
mov
pop
mov
adc
(bad)
jle
(bad)
js
lock
aaa
mov
icebp
(bad)
test
fwait
sbb
mov
cs
jbe
mov
mov
inc
inc
aas
dec
fwait
outs
out
in
das
add
adc
jns
das
and
adc
(bad)
xor
sahf
shr
fwait
lock
ret
sti
ins
add
pop
js
icebp
and
mov
pop
movs
mov
push
nop
lock
xchg
test
or
shr
aam
pop
adc
imul
mov
dec
adc
imul
mov
xor
dec
ret
jne
mov
push
add
add
bound
(bad)
out
cmp
loopne
out
das
ins
hlt
adc
fild
clc
sti
jne
fsubr
js
mov
popa
mov
or
jae
pop
mov
sti
addr16
add
pop
aaa
repnz
outs
xchg
cmp
lock
adc
sti
add
add
xor
or
add
xchg
sbb
clc
xchg
cmp
loopne
in
rcr
mov
(bad)
aaa
cmp
retf
adc
add
loopne
stos
loopne
cmps
or
cmps
push
(bad)
(bad)
adc
dec
lods
call
jnp
jle
mov
xchg
xchg
sbb
fcomp
add
pop
or
mov
dec
inc
cld
cmps
add
or
xor
pop
clc
mov
jg
loopne
lods
loopne
cmps
or
add
add
mov
clc
stos
add
cs
loopne
stos
loopne
add
adc
jnp
out
cmp
out
dec
aad
cmps
icebp
jle
fdivp
(bad)
jnp
adc
mov
(bad)
imul
xlat
icebp
jle
jp
sar
js
scas
jle
dec
or
xchg
sub
rep
add
pop
fldln2
mov
xor
sti
lds
sar
icebp
mov
jecxz
js
cmp
mov
aam
pop
fidivr
(bad)
jp
add
aas
icebp
mov
lock
stos
sbb
adc
mov
or
hlt
repnz
push
xchg
or
cdq
add
mov
hlt
out
xor
sub
scas
es
jmp
ror
adc
daa
adc
repz
or
in
jl
pop
dec
dec
lock
fimul
loopne
sbb
repz
jle
(bad)
into
ror
mov
pusha
mov
cmp
xchg
rcr
pop
lock
or
cwde
scas
fwait
repz
push
dec
inc
pop
enter
cmp
imul
jmp
mov
adc
outs
fimul
clc
push
(bad)
lock
jge
adc
rol
pop
jbe
int
sub
aam
fisttp
inc
and
mov
loope
std
les
outs
inc
es
js
hlt
fld
jle
ret
lahf
lock
adc
ror
xchg
fld
clc
imul
cld
je
jl
add
(bad)
pop
push
cld
je
mov
add
pop
and
mov
cmp
(bad)
test
call
and
mov
mov
or
pop
push
rcl
or
movs
sbb
pop
add
sbb
adc
jecxz
test
std
inc
adc
jmp
pop
in
mov
mov
push
aaa
add
and
fisttp
add
add
adc
push
movs
mov
sbb
add
xlat
pop
jbe
adc
fstp
sub
mov
mov
aaa
mov
add
ret
shl
outs
je
push
test
sbb
hlt
in
cmp
cmps
add
in
cmp
push
jbe
add
add
xor
scas
push
shl
shl
in
scas
in
stos
pushf
loopne
daa
jl
xchg
popf
lods
test
cmps
mov
pushf
loopne
jae
xchg
jo
ja
loopne
add
or
adc
(bad)
jle
jle
lock
loopne
int
mov
pop
int
pushf
iret
or
lods
(bad)
sar
sub
inc
add
cwde
jl
jmp
or
mov
jmp
retf
jle
and
je
test
loopne
mov
cmp
lahf
fdivr
adc
push
mov
sbb
sbb
xor
jae
out
rol
icebp
mov
daa
clc
add
or
sahf
loopne
cmps
jo
scas
loope
xchg
out
xchg
xchg
sub
adc
sbb
pop
aaa
adc
push
scas
fwait
sub
std
inc
mov
scas
jmp
sahf
ret
jnp
mov
fdivrp
mov
jmp
xchg
clc
cwde
or
jge
ficom
or
sti
mov
mov
jge
fsub
call
ficom
push
shr
sbb
add
loop
push
fcomp
add
jmp
movs
lea
aaa
cmp
ins
and
rcl
dec
outs
fdivr
scas
fisubr
and
jge
ficomp
sti
ins
cmc
ds
fisub
pop
cmps
jmp
in
jle
repnz
shl
mov
adc
jg
add
adc
das
lds
out
or
(bad)
or
fdivp
xchg
aaa
clc
or
mov
cmp
pop
loope
mov
or
or
sbb
jns
xchg
jne
les
mov
jo
push
add
retf
cmp
loopne
add
fnstsw
adc
pop
add
mov
ins
adc
in
push
ror
mov
cmp
mov
test
das
sbb
ret
and
or
cdq
ins
and
lock
(bad)
sub
(bad)
push
sbb
clc
test
cld
push
and
psubb
xchg
lock
jmp
mov
sub
stos
jb
das
call
ja
jns
iret
push
jl
clc
add
dec
rcl
mov
clc
and
cld
aaa
add
and
aaa
xor
push
rcl
mov
jg
xlat
cwde
ss
(bad)
mov
data16
fwait
sbb
or
jmp
jmp
adc
xlat
add
add
dec
rcr
mov
(bad)
adc
mov
dec
add
retf
pop
add
(bad)
dec
ror
jmp
inc
call
loopne
or
and
push
mov
std
cmps
retf
cs
sub
inc
shl
lock
pop
ror
stos
fld
jmp
xlat
add
loopne
or
out
jle
shl
ret
push
je
ins
mov
dec
pop
ins
or
push
add
add
sub
dec
jg
addr16
inc
ror
shl
xor
loopne
sar
clc
int
fisttp
dec
or
popf
into
in
add
lods
sbb
lods
sbb
xor
repz
push
jl
mov
addr16
pop
fsubp
sub
lods
lahf
nop
sub
loopne
fwait
or
(bad)
xor
int
sar
clc
jmp
clc
push
dec
ror
inc
shl
jge
fisub
lods
mov
daa
add
push
inc
sbb
outs
in
jl
out
inc
shl
cmp
out
(bad)
sti
jb
jmp
xor
cdq
je
adc
pop
call
or
jmp
sti
jb
push
jmp
lock
lahf
push
shr
xor
push
jbe
push
mov
xor
stos
xchg
push
dec
ror
call
mov
adc
or
mov
rcr
inc
sar
push
(bad)
call
mul
pop
jecxz
ds
jge
or
or
xchg
das
inc
dec
inc
pop
jmp
popa
mov
add
mov
retf
icebp
pop
(bad)
sti
adc
test
jns
sbb
inc
icebp
cs
outs
in
dec
mov
mov
xor
std
cmp
es
fsubp
fcmovne
or
add
ins
es
js
cmc
mov
int
lock
and
dec
shl
repnz
jmp
mov
add
jle
into
scas
in
ret
jnp
ficomp
jo
in
cmps
mov
adc
test
hlt
mov
rcl
jb
pop
call
cmp
(bad)
js
pop
lock
and
push
add
dec
sub
cld
xchg
add
cmp
mov
mov
hlt
arpl
inc
shl
jmp
mov
call
jp
ins
jne
xor
dec
sub
cmp
jg
loopne
inc
inc
jg
push
hlt
sti
add
cmp
outs
xlat
mov
or
nop
xor
add
add
add
and
sar
call
add
dec
add
cmc
cmp
sub
(bad)
int
mov
mov
mov
into
xlat
std
push
movups
repnz
or
and
push
hlt
adc
mov
mov
lods
(bad)
and
and
scas
pop
cld
data16
jne
mov
lods
push
jbe
popf
sub
loopne
or
mov
test
cld
test
in
and
xor
daa
mov
xchg
mov
push
sar
push
loopne
arpl
jp
jle
add
mov
push
shr
mov
clc
or
add
or
imul
je
adc
xor
outs
call
loopne
lahf
pushf
ins
mov
daa
loopne
cmp
in
rcr
clc
mov
(bad)
sbb
mov
sbb
jmp
dec
loopne
adc
out
sar
push
jecxz
test
pop
xor
js
cmps
push
out
jo
push
ja
jle
std
sbb
into
inc
clc
cmc
sbb
mov
ja
(bad)
adc
scas
add
sbb
call
ds
imul
pop
into
inc
clc
or
aaa
loopne
mov
xlat
jecxz
mov
jne
xlat
mov
xor
loopne
mov
xchg
scas
jbe
pop
enter
das
and
jnp
lods
test
pop
loope
dec
fidiv
jae
outs
xlat
loope
inc
adc
daa
jno
jg
fidivr
jbe
or
jge
dec
scas
mov
mov
mov
mov
xor
mov
(bad)
je
jl
jmp
cli
test
in
sub
gs
hlt
sbb
stos
(bad)
lock
mov
dec
clc
sbb
adc
sti
icebp
jle
cdq
gs
dec
aaa
xor
outs
sbb
xor
pop
add
ficomp
and
(bad)
js
loope
movs
shl
cwde
pop
pop
ret
add
sahf
ret
jnp
fisub
(bad)
lock
cdq
inc
das
ret
test
popf
popa
mov
js
jmp
aas
mov
cli
ins
cmps
lods
jmp
push
jecxz
aam
hlt
loop
cmps
rol
jp
jg
fidiv
data16
or
mov
std
ins
sub
adc
mul
std
cmps
js
add
pop
rol
ficomp
sub
or
arpl
xchg
popf
test
rol
retf
jl
xchg
rcl
jmp
mov
add
and
arpl
sub
inc
clc
popf
and
scas
ret
sub
or
cld
dec
fnsave
xor
in
push
cli
push
jg
aaa
push
retf
popa
mov
add
mov
sub
lods
or
cli
add
cli
push
out
or
call
jmp
dec
inc
push
sar
jmp
cld
cmp
jge
gs
push
lock
mov
retf
fldenv
mov
add
mov
clc
add
fisttp
pop
add
add
xchg
dec
xor
out
test
clc
and
ss
lock
out
jg
add
ror
dec
add
sub
mov
lods
je
in
jo
int
loope
(bad)
cmp
and
lahf
ins
rol
rol
cmps
mov
fsub
iret
cwde
(bad)
mov
add
inc
sbb
cmp
pop
fprem1
add
lock
push
scas
xchg
mov
add
mov
sub
call
lock
cmps
lods
ss
mov
(bad)
and
xchg
jg
mov
mov
pop
add
sbb
std
sbb
mov
and
test
fwait
xchg
test
adc
imul
scas
sar
and
aaa
xor
fld
aaa
loopne
popf
jl
add
and
sti
add
add
lods
add
sti
cmp
lahf
or
or
pop
aaa
mov
loopne
adc
jne
outs
xlat
aaa
mov
adc
div
cmp
fidiv
ins
hlt
imul
int3
je
popf
pop
add
and
pop
jmp
mov
jl
xchg
push
aaa
iret
jmp
fwait
add
mov
ror
test
jle
jle
rcl
xor
int3
and
out
out
out
inc
repz
aam
mov
loope
rcl
mov
sti
mov
std
add
cmp
mov
je
xchg
mov
adc
out
pop
or
popf
js
popf
sbb
arpl
cli
jns
xchg
ss
inc
mov
shl
(bad)
int
adc
inc
push
rcr
mul
mov
js
ins
movlhps
push
adc
xor
in
pop
es
add
daa
clc
and
jle
fisubr
sar
clc
pop
icebp
(bad)
and
das
aad
cld
sub
je
push
icebp
out
pop
(bad)
hlt
or
js
mov
jbe
out
sub
lea
or
dec
sbb
push
hlt
xlat
jecxz
mov
cld
jg
std
adc
cmp
std
mov
jmp
outs
cli
call
test
jl
(bad)
lock
lahf
jo
ja
adc
mov
out
push
hlt
push
xchg
lock
xchg
lock
test
jae
test
pop
fld
scas
jae
int
mov
xchg
popf
pop
jbe
loopne
call
das
mov
out
ror
fld
add
and
out
push
jl
es
pop
add
cmp
dec
jmp
(bad)
aaa
cmp
push
pop
movs
mov
mov
bound
cli
add
cmp
jl
sti
xor
aas
pop
lock
call
add
sub
xlat
adc
repz
xchg
sbb
loopne
jmp
fsubp
and
stos
sub
jmp
sbb
push
mov
das
ret
push
lods
mov
test
sbb
sbb
daa
inc
clc
(bad)
out
xor
mov
jp
loopne
rcr
dec
(bad)
push
sar
clc
data16
inc
shr
mov
mov
add
pop
arpl
hlt
sahf
scas
lahf
sbb
std
push
add
push
jbe
repz
out
cld
dec
dec
cmc
fwait
push
aaa
adc
push
jl
add
push
jbe
pushf
sub
loopne
data16
cld
fwait
xchg
jg
std
add
test
retf
lock
or
mov
daa
mov
cmp
iret
fwait
or
das
call
imul
(bad)
mov
scas
mov
push
test
pop
aas
loopne
fwait
cmp
push
fucomi
dec
fcom
jg
mov
rcr
outs
jb
cmc
arpl
cmp
gs
test
mov
cli
and
pop
cmp
inc
(bad)
mov
pop
inc
pop
xor
jge
xor
cs
pop
mov
loopne
cmc
js
or
out
stos
lock
fidivr
not
mov
loopne
js
jmp
jmp
js
cmp
dec
shl
cmp
sub
mov
daa
clc
in
fwait
pop
lods
jmp
cli
icebp
jle
jae
daa
ficomp
call
dec
rol
adc
outs
xor
js
xor
pushf
loopne
jnp
fisubr
pushf
fs
jae
lea
out
pop
cwde
sbb
xchg
icebp
ds
into
or
mov
in
xchg
fucompp
ins
lahf
dec
or
int
jl
scas
in
and
cli
jns
hlt
adc
ss
jnp
out
and
or
out
sar
lock
add
mov
sti
sbb
out
mov
push
push
retf
xchg
sub
ja
and
sbb
and
retf
js
std
push
xchg
lock
clc
inc
add
add
das
adc
cmp
add
push
in
xchg
stos
push
shl
enter
pop
loope
js
dec
inc
aas
add
inc
inc
pop
inc
fidiv
shl
ror
mov
sub
mov
jl
inc
(bad)
pop
cmp
inc
clc
outs
jo
mov
add
int
pop
mov
lock
xor
into
out
outs
cwde
test
xor
test
test
sub
dec
sub
jl
clc
or
jge
and
push
add
or
pop
mov
loopne
out
out
jmp
fwait
add
popf
stc
sbb
xchg
lock
loop
shl
push
arpl
les
jmp
add
pop
cld
sub
jge
pop
jmp
call
test
sbb
sbb
stos
jle
xchg
push
aaa
mov
aas
push
clc
stc
jp
pop
cdq
ret
sbb
sysenter
mov
mov
dec
data16
(bad)
pop
sbb
xor
xor
dec
dec
shr
outs
and
jle
ror
mov
pop
inc
pop
jae
not
add
cmc
add
add
jge
clc
pop
or
mov
clc
adc
(bad)
cmps
sbb
sbb
xor
outs
inc
(bad)
movs
lods
mul
jbe
je
add
adc
sub
sti
popf
popa
mov
ror
pop
cmp
test
and
retf
add
cmp
lock
stc
and
jne
bnd
stc
aaa
adc
clc
gs
mov
pop
lock
xlat
clc
sbb
psubb
clc
adc
retf
add
gs
pop
dec
out
(bad)
fcomp
inc
div
es
sub
or
shl
dec
loopne
mov
dec
push
shr
lds
div
lods
call
push
out
arpl
icebp
pop
je
inc
retf
xor
and
mov
jnp
mov
lock
ss
hlt
aas
movs
mov
lock
ficom
mov
(bad)
icebp
jle
out
xchg
sbb
mov
icebp
pop
xor
sub
sti
cmp
retf
dec
ds
fst
imul
sahf
loopne
lahf
pop
test
aaa
xor
stos
pop
out
pop
cmp
cmp
mov
fstp
or
sbb
loope
pop
out
retf
popf
sub
inc
pop
lds
mov
mov
int3
mov
jne
fnsave
xchg
add
clc
adc
gs
or
ss
inc
pop
sbb
leave
pop
fwait
int
jl
cmp
sti
dec
out
ds
cli
mov
dec
cmp
out
inc
jecxz
push
ret
mov
lock
shl
jp
or
jnp
fwait
outs
es
hlt
mov
lds
popa
rol
lahf
add
retf
ins
stos
xlat
add
mov
jmp
mov
mov
jmp
das
pop
in
mov
sub
aas
add
inc
(bad)
lock
jbe
ins
xor
jbe
loopne
dec
clc
cwde
test
rcr
call
or
or
(bad)
xchg
lock
jne
push
dec
inc
aas
push
loope
or
jno
mov
dec
mov
xor
arpl
iret
and
add
jb
add
adc
jp
adc
call
lock
adc
int3
mov
aaa
mov
mov
lods
mov
push
retf
jnp
mov
mov
out
add
arpl
mov
lea
mov
in
mov
mov
xor
pop
(bad)
aaa
mov
sbb
clc
addr16
dec
outs
ins
or
ret
adc
sbb
fild
mov
cmp
lock
jg
adc
add
div
cmp
movs
mov
lock
rcl
cli
or
dec
out
out
sub
mov
(bad)
pop
pop
xlat
dec
pushf
or
mov
mov
cwde
mov
iret
add
pop
in
mov
mov
push
add
xor
add
loopne
loopne
jg
push
hlt
and
outs
sub
sub
mov
mov
pop
xchg
into
shl
das
shl
add
cmp
das
mov
cli
int
js
gs
and
arpl
ror
xchg
fnsave
stc
and
adc
xor
addr16
or
loopne
push
jl
pop
fld
adc
test
fs
xchg
adc
sbb
outs
sub
jg
jle
xchg
jne
mov
push
add
lock
js
enter
loop
sbb
xor
adc
ficom
pop
les
mov
cmp
inc
rcr
mul
in
out
sar
lock
sbb
jg
jp
sar
pop
xor
outs
in
das
xchg
outs
xchg
push
cwde
dec
aaa
fnstsw
(bad)
jnp
dec
aaa
repnz
loope
lahf
sbb
js
dec
sbb
test
jle
ficom
mov
ret
pushf
loopne
test
out
fwait
popa
mov
mov
xchg
sbb
dec
push
ins
arpl
pop
add
and
adc
je
mov
push
fiadd
cli
cwde
sbb
cmc
adc
pop
loope
(bad)
int
push
lods
in
xchg
adc
iret
loope
rol
sbb
jl
mov
fmul
jne
in
into
in
dec
(bad)
and
aaa
iret
loope
xor
add
push
fld
out
inc
cmp
pop
(bad)
sti
outs
cmc
cs
in
xchg
pop
(bad)
test
repz
or
(bad)
add
mov
push
add
push
mov
adc
les
ret
stos
mov
jg
mov
pop
cmps
ja
dec
cmp
outs
add
lock
int3
mov
push
mov
js
das
xchg
add
or
and
cld
or
outs
out
and
arpl
sbb
fbld
clc
sub
aas
loope
ja
ret
cld
mov
(bad)
aas
retf
sbb
or
add
test
(bad)
int3
inc
(bad)
pop
sub
add
add
outs
jae
aaa
add
mov
aas
push
js
ror
pop
xchg
sub
lahf
lock
lods
pop
in
sbb
adc
adc
aaa
jmp
call
rcl
cmps
cmp
push
shr
dec
add
loopne
jp
das
xchg
das
push
shr
hlt
add
lock
dec
add
sbb
daa
cmp
loopne
and
dec
dec
jge
lock
(bad)
push
rcr
js
aas
xor
sti
fiadd
adc
aad
out
call
add
push
add
and
mov
jle
loopne
add
ja
or
jg
scas
lahf
cwde
or
add
clc
adc
arpl
cmps
rcl
pop
push
lock
retf
xor
adc
call
mov
(bad)
mov
add
loopne
lods
(bad)
mov
pop
add
xor
ret
fisub
jmp
out
mov
leave
xchg
(bad)
inc
je
lock
or
das
adc
aas
ror
pop
add
or
popa
rol
outs
jl
jg
lock
out
add
ins
hlt
std
es
lea
gs
cwde
or
jno
aaa
cdq
sub
adc
pop
call
ss
das
and
mov
ret
push
icebp
jle
sbb
jmp
and
push
mov
data16
clc
jle
lock
popf
leave
pop
or
dec
les
cmp
ds
js
xchg
sub
loopne
test
jno
fidiv
fisubr
int
movs
sbb
shl
xchg
das
and
lea
cmp
call
jge
cdq
inc
das
ret
push
arpl
rol
repz
adc
xchg
aas
mov
cmp
(bad)
adc
leave
dec
ror
jp
or
adc
imul
cld
je
stc
and
add
mov
xchg
outs
xor
push
hlt
mov
cmps
out
(bad)
sti
inc
into
jo
icebp
(bad)
sbb
add
pop
sub
pop
lock
adc
mov
mov
(bad)
sti
jb
ins
inc
inc
(bad)
pushf
cmp
loopne
jnp
fisubr
xor
jbe
add
or
inc
add
pop
or
std
adc
pop
loop
mov
add
(bad)
mov
shl
pop
mov
add
pop
xchg
lock
cmp
fwait
(bad)
jb
lods
ss
push
dec
ret
jl
inc
fld
pop
clc
inc
adc
hlt
add
(bad)
mov
out
sub
jl
lock
xchg
lock
(bad)
jge
call
lock
(bad)
push
ret
mov
fst
leave
test
pop
aas
jno
or
mov
pop
inc
ret
adc
loopne
lods
pop
jbe
mov
call
pop
jne
test
sbb
call
xor
push
lea
sbb
ins
hlt
ret
cmp
cmps
or
jbe
cli
add
mov
ret
or
ss
add
lahf
movs
mov
scas
sti
movs
(bad)
mov
mov
clc
mov
jb
aaa
cmp
aas
pop
(bad)
scas
mov
inc
add
mov
aas
rcl
popa
mov
inc
imul
sbb
rdtsc
ins
hlt
and
out
and
xlat
cdq
cmp
or
dec
dec
test
stos
ss
xor
fild
(bad)
cmp
cmps
jmp
cdq
mov
shr
cld
fild
(bad)
mov
inc
sbb
aaa
mov
call
cmc
dec
out
sbb
jg
lock
add
mov
dec
dec
ss
push
ins
ds
fwait
jnp
mov
add
mov
or
(bad)
out
pop
inc
ror
lock
(bad)
into
add
push
sar
mov
sub
lock
ss
jbe
dec
cli
adc
sti
jp
das
adc
outs
inc
mov
ror
pop
push
retf
push
or
xchg
out
xchg
xchg
adc
jl
loopne
mov
xchg
lock
jmp
pop
inc
rcl
mov
movs
jmp
fs
mov
push
add
loope
int3
in
dec
jns
out
sar
sbb
(bad)
xor
movs
in
scas
xchg
and
(bad)
sub
and
sahf
xor
data16
stos
test
je
pop
mov
push
jg
jmp
sub
xchg
xchg
outs
xor
inc
scas
in
mov
fisub
mov
or
xchg
jle
add
ret
push
cmps
mov
pop
std
xor
out
fwait
loope
push
mov
pop
out
sbb
or
out
ins
lahf
test
lock
push
jbe
js
out
mov
add
inc
dec
lock
adc
mul
mov
movs
movs
stos
mul
je
mov
lock
fild
jg
cmp
in
fs
fcomp
cli
(bad)
std
outs
js
shr
cs
stos
add
rcr
sar
add
call
cli
mov
test
daa
loopne
pop
pop
daa
fisttp
push
lds
shl
lock
mov
push
and
outs
mov
xchg
(bad)
mov
sbb
inc
inc
jg
not
scas
add
jge
jg
test
xor
push
adc
mov
xlat
lea
addr16
leave
mov
add
push
jbe
jmp
out
call
jb
xlat
outs
pop
cmc
xchg
lock
daa
stc
sub
and
addr16
(bad)
jb
cmp
in
add
xor
loope
lods
mov
lock
cmp
sti
add
or
mov
mov
pop
cld
jb
gs
push
das
add
xchg
pop
or
mov
in
bound
pop
(bad)
dec
hlt
add
jae
xchg
aaa
cmp
pop
mov
aad
or
jg
lock
clc
daa
add
mov
stos
sub
aaa
cmp
dec
in
jo
dec
je
mov
clc
xchg
dec
pop
lods
dec
cmps
fiadd
call
mov
adc
int
arpl
cmp
test
dec
dec
lock
das
daa
clc
fld
cld
push
retf
sbb
or
(bad)
pop
scas
in
xor
jl
fucomi
and
mov
loopne
arpl
or
lahf
push
shl
or
fild
aas
push
cmps
push
fisttp
clc
xchg
sbb
mov
add
pop
aam
pop
fldcw
and
out
add
pop
sub
repz
scas
xor
jbe
xor
dec
pushf
loopne
add
popf
or
lock
out
int
fisttp
fnstenv
sub
jb
or
add
push
push
xchg
jne
in
push
cli
sar
(bad)
pushf
loopne
call
sub
icebp
pop
mov
pop
or
dec
inc
mov
mov
push
add
fmulp
ror
pop
xchg
std
add
mov
mov
out
es
add
mov
nop
hlt
hlt
dec
dec
data16
mov
iret
adc
sub
mov
ror
cli
psrad
popf
js
sbb
(bad)
rcl
data16
test
sub
das
outs
lock
into
scas
ins
pop
shr
and
add
mov
gs
daa
js
mov
sar
outs
inc
add
(bad)
xchg
lock
adc
retf
popf
scas
fiadd
xchg
cmp
js
pop
mov
cmp
mul
inc
jg
xorps
out
jo
ret
sub
and
call
outs
(bad)
out
xchg
sti
fild
in
xchg
dec
icebp
mov
sar
das
pop
mov
js
jmp
mov
jp
out
xor
mov
sahf
sub
jmp
sbb
psubb
into
mov
add
mov
fisttp
sbb
lahf
add
outs
sar
ds
xchg
cli
outs
cmps
or
mov
ret
jl
push
loope
add
mov
(bad)
jle
retf
dec
ss
retf
aas
cmp
in
add
cmps
lods
mov
lock
add
shl
hlt
pop
jae
ja
loopne
add
imul
cld
adc
or
or
mov
loope
adc
push
hlt
add
add
lock
fnstenv
lods
or
jge
lock
push
cld
mov
int
sub
dec
add
retf
mov
push
sbb
lahf
push
stos
xchg
inc
clc
add
pop
add
jl
mov
sbb
(bad)
ds
push
sub
add
es
dec
ror
loopne
cmp
sub
(bad)
cmp
arpl
push
shr
xlat
loope
jb
pop
adc
sbb
dec
mov
loopne
ror
dec
scas
movs
(bad)
lock
push
loopne
dec
inc
mov
dec
ror
xchg
cmp
or
cwde
sbb
in
add
adc
addr16
or
adc
pop
bnd
mov
pop
pop
call
push
or
mov
mov
dec
sbb
or
clc
shr
adc
int
pop
stc
daa
aaa
lods
ret
push
add
add
xchg
push
(bad)
mov
loopne
cmps
push
ror
jecxz
(bad)
sti
cmp
iret
(bad)
sub
mov
jle
fsubp
loopne
and
xlat
call
(bad)
jp
ds
js
in
(bad)
jns
(bad)
das
fidiv
inc
(bad)
jle
jmp
jns
std
and
mov
and
dec
mov
shl
cli
outs
cmp
add
mov
stc
jp
pop
test
mov
xchg
sub
sti
icebp
mov
stos
or
mov
ss
not
lock
cmp
in
add
fidivr
xor
push
hlt
or
iret
and
mov
lock
lock
outs
xor
hlt
mov
jnp
xor
clc
fidiv
out
sub
mov
call
push
shl
call
and
loop
pop
(bad)
jnp
rcl
dec
dec
fsubp
and
ds
mov
lods
ret
add
push
repnz
cmp
loope
add
ja
lock
pop
or
pop
cmp
das
and
aas
inc
shr
adc
call
or
mov
pop
inc
pop
xchg
mov
ds
or
sub
push
popf
inc
out
int
jl
loopne
or
(bad)
sbb
das
pop
in
mov
dec
ret
mov
lock
sbb
cmc
adc
lock
cli
mov
add
sar
fwait
imul
aaa
adc
xor
pop
sub
daa
adc
push
ror
cli
or
enter
mov
pusha
cmps
push
retf
jle
pop
add
retf
lods
lahf
call
pushf
sbb
sbb
adc
jbe
les
pushf
jmp
stos
aas
add
mov
cmc
adc
xlat
jg
or
push
push
jl
loopne
sbb
cmp
cli
or
aaa
shr
mov
or
test
push
out
call
sbb
fist
lock
adc
int
mov
add
shr
jl
cmp
ds
ds
pop
push
dec
jp
pop
pop
rcl
jl
fwait
outs
fs
inc
push
lock
fbld
repz
pop
jns
jl
lock
push
mov
or
and
adc
gs
jmp
loopne
add
push
shl
call
cld
push
cmp
adc
std
aaa
push
add
in
ds
shl
loopne
add
es
clc
add
sti
push
rcr
clc
fld
pop
daa
loopne
jmp
lea
(bad)
jge
cli
inc
dec
add
lea
sub
pop
add
and
mov
xchg
scas
fiadd
ficom
xor
push
dec
js
jge
push
rol
fidiv
pop
fxch
in
sub
rcl
jnp
inc
pop
popf
movs
ret
push
fisttp
pop
mov
sub
pop
and
pop
or
mov
mov
loopne
inc
inc
jg
fisttp
jnp
and
clc
mov
jle
fisubr
fstp
frstor
aaa
xchg
dec
lock
outs
cmps
mov
test
hlt
arpl
daa
pop
call
or
(bad)
les
pop
push
ret
loopne
cmp
dec
mov
fs
lods
mov
pop
ss
retf
inc
clc
add
pop
adc
add
das
jmp
xor
arpl
pop
fst
dec
fs
add
in
mov
out
addr16
call
gs
in
jne
mov
lea
leave
pop
add
(bad)
imul
mov
mov
jle
pop
mov
add
sbb
pavgb
fwait
add
dec
in
mov
add
pop
push
hlt
retf
test
add
xlat
inc
mov
pop
int
cmp
lock
xchg
add
inc
aas
(bad)
dec
pop
mov
ror
clc
lds
adc
stc
or
sbb
clc
or
xor
ret
mov
xor
loopne
shl
jle
pop
aas
adc
clc
xchg
add
inc
mov
ror
mov
add
aas
leave
cmp
jmp
clc
retf
add
add
mov
fucomi
inc
xor
jae
loope
cmps
lods
ss
clc
or
scas
daa
loopne
shl
jle
jae
das
or
es
sbb
add
sti
dec
mov
das
pop
arpl
add
mov
je
pop
sub
cld
jb
push
cs
pop
add
(bad)
mov
(bad)
fwait
mov
shl
mov
add
jmp
mov
hlt
lahf
fcom
cmps
lods
ss
mov
daa
cdq
div
mov
add
bound
retf
cs
or
xchg
and
adc
mov
sub
sub
out
push
cld
daa
add
add
outs
add
fdivr
add
ins
mov
loopne
rcl
xor
daa
jl
test
or
sar
cmp
adc
rcl
xchg
cmp
(bad)
inc
push
rcl
add
repz
loopne
xor
das
pop
loope
sar
scas
xchg
(bad)
mov
rcr
loope
add
pop
aaa
jecxz
pop
push
ret
call
mov
fs
(bad)
mov
rcl
adc
repnz
daa
clc
retf
mov
call
fsubp
and
dec
or
gs
outs
in
mov
(bad)
sub
jge
mov
xchg
mov
scas
xchg
dec
pushf
cmc
adc
cmps
add
sar
adc
int
inc
clc
pop
lock
rcl
daa
ficomp
loopne
inc
rol
stos
mov
test
mov
test
pop
mov
loopne
jno
imul
jl
ss
pop
mov
xor
sti
pop
mov
push
out
lahf
ret
mov
ficomp
clc
ret
cmc
retf
lea
ds
out
inc
add
stos
jle
mov
dec
shl
lock
scas
fidivr
mov
mov
enter
pop
stc
adc
(bad)
xor
cld
mov
push
jecxz
or
dec
inc
aas
data16
call
mov
xor
add
imul
call
mov
out
inc
js
sbb
mov
lahf
loop
add
mov
repnz
cmps
test
mov
add
jmp
fwait
adc
rol
fucomi
hlt
ror
ins
stos
fisttp
xchg
dec
shr
fst
and
mov
mov
leave
cmp
daa
add
add
add
xchg
test
jl
lock
adc
scas
push
jbe
adc
push
rcr
jbe
add
outs
adc
xor
jo
push
push
mov
adc
int
cli
outs
cmps
cdq
mov
add
push
add
inc
clc
xchg
and
cmp
mov
shl
lock
es
rcr
arpl
scas
adc
add
xchg
dec
or
stos
add
or
iret
movs
mov
inc
ror
(bad)
inc
ror
std
sub
out
add
ret
scas
add
std
or
int3
adc
and
inc
add
rcl
retf
dec
js
mov
sar
clc
or
rol
adc
mov
lds
cli
daa
popf
cmp
stos
in
jo
call
mov
inc
add
lea
dec
dec
inc
lahf
xlat
sub
loopne
dec
inc
mov
std
and
mov
xchg
sbb
mov
aaa
mov
or
aaa
imul
mov
leave
cmp
aas
mov
jmp
fsubrp
cld
xchg
fwait
add
popf
sbb
pop
in
lods
test
jl
loopne
popf
cmc
adc
aaa
ror
clc
push
shl
jle
loopne
add
sbb
jg
lock
pop
push
ret
js
or
adc
add
jne
ja
jle
mov
pop
jl
clc
jmp
add
adc
jg
mov
mov
xor
stos
stos
mov
shl
mov
jne
frstor
inc
fucomi
and
mov
push
cmp
pop
jecxz
aaa
add
es
test
or
outs
jb
pop
jmp
push
jnp
daa
clc
cmp
out
jmp
jmp
lock
fwait
jne
or
(bad)
or
aas
mov
cli
mov
test
jnp
arpl
int3
push
ss
dec
sbb
pop
icebp
jle
ficomp
hlt
shl
inc
add
iret
js
ret
push
mov
retf
jle
es
cwde
in
adc
mov
xor
enter
hlt
(bad)
loopne
fsubp
outs
(bad)
sti
mov
xor
sub
inc
(bad)
int
fidivr
mov
cmps
fwait
sub
mov
lahf
pushf
scas
jmp
sahf
aam
faddp
jnp
jmp
stos
(bad)
jae
(bad)
jmp
loopne
lahf
and
pop
and
mov
std
sub
mov
push
ret
add
idiv
loope
or
je
xor
push
add
call
dec
sbb
lock
push
jl
loopne
mov
ret
add
in
xchg
dec
add
and
out
pop
clc
xchg
test
cs
pop
add
inc
dec
clc
pop
xchg
lock
(bad)
jle
jmp
push
sbb
dec
or
inc
ret
gs
jmp
mov
add
fld
shl
fisttp
clc
repz
(bad)
loope
arpl
loopne
js
adc
push
loope
retf
test
lock
es
dec
xlat
dec
mov
aaa
xor
pop
jbe
jmp
jg
loopne
push
mov
lock
push
cld
rol
int3
in
xchg
xchg
sub
and
int
sub
pop
pop
xor
adc
(bad)
pop
stc
aaa
repz
repz
push
dec
push
shl
call
mov
pop
cmp
xor
fild
add
fwait
pop
pop
pop
loope
rcl
loopne
aam
jl
or
cld
push
add
outs
mov
loopne
inc
shr
loopne
push
hlt
jne
dec
add
mov
mov
loopne
or
pop
and
loop
mov
add
push
hlt
push
loopne
shr
mov
add
pop
xor
push
out
(bad)
aaa
and
cmp
jg
imul
sbb
js
xchg
or
into
pop
jl
inc
mov
add
lods
shr
cmp
out
fisub
loopne
aaa
add
push
hlt
sbb
daa
ins
hlt
cmp
jbe
(bad)
mov
fst
mov
aam
xchg
inc
pushf
or
arpl
fnstenvw
pop
loope
sub
sti
popf
sub
scas
loope
xor
xchg
adc
sbb
lods
arpl
rcl
sub
jge
ja
jge
cs
hlt
test
lahf
(bad)
mov
imul
pop
or
mov
out
aaa
jmp
leave
or
(bad)
jns
das
(bad)
sti
adc
push
adc
loop
ret
out
inc
mov
fcmovbe
cmps
fwait
psraw
ds
mov
outs
(bad)
sti
jnp
clc
sub
pusha
and
and
sbb
scas
(bad)
sti
das
or
sbb
or
inc
mov
adc
(bad)
cdq
or
lods
test
jmp
pop
cwde
aaa
clc
xchg
adc
or
mov
sahf
loopne
cmps
mov
adc
test
shr
sti
lock
sub
repz
add
push
mov
lock
movs
mov
mov
fld
push
shr
cld
push
cmp
repz
and
aaa
(bad)
jb
rcl
js
out
call
push
ror
lahf
cmps
ja
adc
setb
push
jmp
retf
sub
sar
and
mov
in
or
xchg
mov
sbb
push
js
sbb
pop
adc
jl
add
ror
jmp
test
add
outs
scas
in
and
cli
ret
test
test
hlt
adc
pop
pop
fld
push
pop
dec
rcl
stos
cs
cmp
lock
add
retf
lock
mov
cld
test
lahf
lock
cmps
inc
fld
jo
push
sbb
xchg
xor
sub
daa
mov
shr
cmp
shl
cmc
mov
pop
cwde
sub
lock
ficom
push
rol
gs
imul
add
mov
call
ror
cmps
push
jbe
inc
pop
push
shr
mov
sbb
ret
push
add
dec
rcl
fwait
pushf
push
hlt
lods
pushf
loopne
add
ja
or
adc
inc
call
mov
jl
dec
mov
fidiv
jmp
pushf
loopne
out
pop
sub
xchg
imul
sbb
or
scas
add
push
or
and
(bad)
aaa
add
inc
sbb
mov
push
es
add
or
mov
in
push
shr
jbe
loopne
add
or
jbe
and
adc
iret
add
rol
xor
loope
pop
pop
dec
mov
and
fisub
lock
mov
clc
adc
jnp
and
ins
add
adc
inc
mov
add
lock
(bad)
int
cli
mov
and
inc
lahf
adc
sbb
inc
push
hlt
ret
add
xor
jae
retf
mov
pushf
jbe
and
mov
mov
rcr
(bad)
dec
loope
outs
sbb
int
dec
out
and
daa
xchg
push
shl
rcl
jbe
neg
scas
adc
sub
sbb
data16
lock
(bad)
out
rcl
les
lods
mov
lock
adc
addr16
call
retf
into
(bad)
jnp
out
mov
push
test
std
popf
cmp
add
dec
rcl
mov
mov
les
fdivp
loop
lahf
rcl
fbstp
pop
push
ret
pop
sbb
pop
call
cdq
je
xor
mov
mov
ficomp
fisttp
std
jns
retf
xor
pop
fild
(bad)
sti
es
lahf
mov
scas
je
retf
pop
add
and
adc
and
dec
test
push
ret
push
js
and
jmp
cmp
out
lahf
pop
jl
lock
pop
out
call
repz
jl
test
dec
sti
call
loopne
add
adc
xlat
ss
xchg
(bad)
fwait
pop
cmp
sub
dec
cmp
call
jl
loopne
dec
clc
jbe
addr16
dec
inc
aas
inc
inc
fbld
out
add
popf
data16
xlat
dec
fs
popf
in
fwait
jmp
iret
adc
int
jl
sub
loopne
or
data16
retf
adc
add
jmp
xlat
add
loopne
pop
lods
pop
clc
mov
dec
add
add
add
lds
loopne
add
sbb
or
mov
inc
cmps
xor
mov
(bad)
pop
jns
adc
repnz
push
or
(bad)
fadd
lock
or
or
mov
mov
rcl
lock
es
scas
in
cli
or
cmp
out
fild
clc
popfw
gs
add
add
lahf
lock
test
je
loopne
sub
arpl
mov
mov
add
bound
rol
pop
or
jmp
gs
jmp
fwait
test
scas
daa
loopne
pusha
ss
out
aas
add
adc
mov
lock
jns
jmp
jl
ret
push
xchg
fld
loopne
xor
arpl
dec
dec
dec
lock
jns
test
repz
imul
adc
sub
sar
cld
outs
add
scas
lahf
cmp
lock
scas
add
and
jmp
loopne
cmps
jmp
(bad)
add
fsub
daa
shr
in
in
adc
lahf
jb
jmp
fiadd
mov
(bad)
mov
clc
add
sahf
aad
xor
cmp
xchg
aaa
mov
cmp
jge
scas
in
movs
jmp
dec
inc
das
dec
aaa
sub
fwait
cs
lock
cmp
loope
stos
jbe
cdq
jl
sti
in
mov
aam
clc
add
clc
lds
addr16
push
rcl
jecxz
fiadd
mov
cmp
daa
daa
dec
aaa
jns
push
or
(bad)
loop
sar
aaa
adc
stos
popf
popa
mov
add
mov
dec
js
retf
xchg
(bad)
mov
jge
fisubr
js
(bad)
test
xchg
hlt
mov
xor
arpl
js
mov
adc
scas
jo
(bad)
push
hlt
add
inc
inc
mov
sub
fwait
outs
in
jg
or
pop
mov
test
adc
fst
lahf
enter
sbb
sti
jbe
mov
jp
loop
test
jbe
inc
mov
pop
xor
sub
clc
xor
mov
jge
out
fcmovne
or
call
hlt
int
jl
out
int
fild
(bad)
in
mov
add
cmp
pop
add
add
(bad)
xchg
pop
dec
jg
not
fwait
test
or
nop
lock
cmp
adc
xchg
push
loope
and
mov
hlt
shl
loope
xor
das
add
mov
pop
in
outs
mov
loope
in
mov
ret
mov
call
jl
cmp
test
or
xchg
test
nop
and
das
pop
aaa
adc
cmp
clc
cwde
adc
push
pop
retf
rol
pop
rol
(bad)
ror
stos
jbe
test
rcr
ror
pop
or
mov
xlat
dec
add
or
in
into
sub
add
jae
xchg
lea
push
aad
(bad)
aas
mov
cmp
sahf
cmp
fisttp
pusha
inc
xor
ss
dec
fcmove
leave
inc
dec
push
aam
leave
fadd
pop
jns
adc
push
jns
dec
daa
cmp
sbb
lods
mov
add
mov
mov
pop
data16
iret
iret
cmc
pop
mov
push
ss
std
adc
add
shl
dec
inc
pop
add
add
pop
sub
add
ds
clc
lea
cld
data16
add
jge
rcl
add
cli
sbb
fild
icebp
add
jnp
das
call
mov
jbe
and
dec
sub
and
add
or
rcl
mov
sbb
add
out
inc
loopne
and
jge
cld
inc
sbb
lock
sub
cs
iret
mov
stos
add
fs
add
icebp
or
arpl
scas
jl
sub
jge
or
cmp
mov
or
mov
sub
scas
aas
mov
nop
mov
cmp
mov
add
add
out
add
scas
xchg
pop
fs
mov
fist
add
jle
loopne
cmp
mov
js
shl
out
aam
add
shl
jp
fist
cld
inc
cmp
add
add
mov
sbb
mov
ds
mov
fwait
mul
pop
loope
and
mov
mov
cmp
fwait
cdq
add
mov
ins
jno
lods
adc
dec
scas
push
pop
xor
pushf
stos
ficom
sbb
and
data16
ror
and
fimul
jl
(bad)
call
sbb
jmp
jle
add
loope
add
xor
out
and
leave
lock
popf
fadd
lock
cmp
cmp
leave
lods
jb
outs
cmp
pop
add
and
and
leave
ror
lods
lods
out
sti
mov
sbb
lods
adc
dec
inc
pop
inc
loopne
xor
cli
(bad)
retf
fisub
ret
mov
add
js
push
out
inc
cmp
and
call
fmul
dec
inc
aaa
and
mov
fisubr
push
mov
or
les
fimul
dec
or
inc
js
enter
pop
loop
aad
lock
fimul
imul
cmp
cmc
lock
dec
mov
sar
mov
push
cmp
in
jmp
jbe
das
loopne
add
inc
inc
outs
jno
loope
sub
lock
push
add
outs
sub
loopne
add
dec
mov
fldl2t
jmp
add
sub
push
dec
or
pop
nop
jb
add
pop
movs
mov
in
pop
call
jmp
inc
mov
dec
add
jae
ds
loope
push
clc
cmc
add
bound
daa
add
inc
sbb
out
mov
fwait
xchg
push
rol
mov
cld
push
(bad)
mov
pop
clc
adc
dec
push
clc
and
dec
cmps
mov
dec
or
or
xchg
add
push
shl
cld
inc
sbb
lock
xor
pop
std
xchg
push
pop
addr16
mov
cmps
fcomp
add
add
or
and
setl
mov
jg
or
in
push
jg
adc
sub
sbb
inc
lock
and
jg
xor
sub
cld
jp
jle
jae
cmps
add
aad
movs
mov
adc
ds
sbb
pop
in
mov
add
adc
pop
add
fist
lock
add
sub
ja
jl
shr
cli
test
mov
jl
rcl
inc
and
mov
fsub
jns
inc
add
and
iret
and
mov
inc
rcr
and
and
sbb
pop
jne
daa
hlt
or
loopne
xor
aas
adc
cmp
mov
loopne
cwde
rcr
shr
pop
push
daa
ja
jmp
daa
aaa
int
jb
in
stos
jbe
or
jl
shr
adc
inc
sub
xchg
fisttp
add
daa
add
inc
add
xor
pop
add
ror
gs
add
xor
inc
inc
or
outs
inc
loopne
fwait
sbb
push
js
or
inc
add
(bad)
scas
in
pop
dec
pop
fnstenv
sti
inc
add
xor
pop
imul
or
push
ficomp
mov
mov
mov
ja
sbb
dec
sar
fldl2t
call
popf
inc
js
fstp
out
ret
cmps
retf
pushf
outs
mov
push
loope
je
xchg
(bad)
pop
and
push
js
call
sub
or
scas
xor
push
(bad)
push
je
cmp
push
cmp
test
mov
aad
xchg
dec
jmp
imul
sar
mov
jle
mov
leave
in
xchg
hlt
fcmove
jmp
aaa
ret
js
repz
ficom
loopne
push
sbb
sub
stos
sub
fcmovu
jbe
out
sbb
ficomp
add
xchg
stc
lock
or
pop
ins
(bad)
lock
sahf
jno
loope
adc
mov
dec
js
add
gs
xor
sbb
cld
push
ja
cmps
mov
cld
sub
or
mov
(bad)
data16
cmc
xor
das
loopne
sub
ret
(bad)
sbb
mov
push
loopne
add
push
(bad)
mov
xor
std
sub
jbe
fcom
jns
pop
mov
lock
add
ret
clc
dec
add
rcr
shl
adc
xchg
lock
add
repnz
and
mov
xor
mov
cld
mov
xchg
repz
shr
rcl
call
mov
fiadd
pop
(bad)
mov
mov
pushf
cmp
shl
jmp
jle
mov
imul
sub
mov
push
loopne
add
sub
ins
out
pop
cmp
lock
add
dec
xor
or
xchg
pop
or
push
icebp
adc
in
adc
cld
pop
sub
mov
jg
sbb
call
fs
or
retf
add
add
rol
cmps
lods
outs
cs
pop
fstp
jmp
pop
pop
clc
cmp
out
add
je
fild
pop
xchg
das
mov
mov
fdivr
(bad)
into
add
data16
retf
retf
push
clc
pop
push
sbb
add
inc
(bad)
fisubr
mov
fdivr
xchg
test
cdq
or
pop
out
jno
retf
cmps
mov
mov
loop
mov
js
call
mov
jb
mov
aad
add
push
pop
aas
retf
fxch
stc
dec
cld
(bad)
fistp
fldenv
(bad)
xlat
add
or
mov
repnz
mov
add
push
(bad)
inc
pop
sar
aaa
lahf
jae
jb
stos
lods
cmp
lock
push
and
in
add
lahf
ins
ficom
out
sub
std
or
clc
xor
loopne
xchg
cmp
out
mov
inc
(bad)
js
jmp
cmp
(bad)
cmp
clc
xor
clc
imul
push
js
inc
loopne
loope
sahf
cmp
push
or
mov
mov
out
xor
clc
arpl
js
(bad)
out
inc
fild
out
dec
push
and
outs
push
out
mov
iret
inc
loopne
loopne
add
xor
cmp
jnp
js
or
rcl
clc
cmp
iret
mov
xor
ds
mov
jl
mov
mov
js
push
shl
shl
and
int
sahf
xor
cli
imul
dec
loope
push
mov
and
imul
je
in
cmp
clc
jmp
call
cmp
mov
jbe
std
test
ror
iret
inc
loopne
fwait
cmp
inc
add
repz
imul
xor
mov
pop
adc
xlat
ret
sti
jg
sti
xchg
lock
ret
sti
mov
mov
jp
push
push
and
push
mov
push
mov
mov
sbb
test
bswap
fucomi
add
clc
add
inc
ss
mov
test
push
clc
cmp
fisttp
lock
mov
loope
pop
ret
clc
add
inc
mov
mov
pop
in
or
mov
sub
xor
fwait
jmp
pop
inc
loope
xchg
push
clc
mov
jb
ss
add
ss
cmp
fild
cs
inc
fild
lock
cli
dec
sbb
push
mov
pop
mov
fmul
clc
add
data16
mov
sub
inc
mov
sub
adc
push
sub
cmc
mov
sbb
rcl
mov
and
pop
xor
retf
lock
clc
xor
mov
clc
inc
add
add
jl
lds
or
and
inc
es
or
call
sar
fwait
xor
pop
or
inc
add
and
popa
adc
pushf
pop
js
ret
jl
pop
pop
test
adc
dec
sbb
jle
sbb
pop
dec
cld
test
dec
sub
enter
ins
daa
push
inc
loopne
add
iret
rol
neg
sbb
xor
(bad)
out
add
sbb
jne
out
pop
mov
push
hlt
sbb
mov
xchg
vhaddpd
dec
lock
adc
lahf
push
lock
add
(bad)
int
rol
pop
dec
inc
out
(bad)
dec
or
xlat
add
stos
xor
cdq
aam
int
aam
int
cmp
xor
neg
ror
dec
add
rcl
pop
loopne
push
clc
sti
sub
push
loopne
daa
pop
push
lods
outs
cmp
js
fiadd
lahf
add
gs
arpl
xchg
fndisi(8087
jge
mov
push
hlt
dec
loope
dec
lock
gs
mov
out
sbb
inc
aas
or
(bad)
mov
scas
mov
pushf
scas
push
ins
inc
aas
adc
xor
mov
not
add
cmp
mov
loopne
xchg
sbb
adc
or
pop
loopne
ret
inc
hlt
stos
call
adc
xchg
into
js
ret
sti
shl
dec
jg
int3
push
add
cmp
cli
add
jo
jbe
cmp
dec
sbb
inc
stos
sbb
shr
adc
push
adc
add
out
out
xor
loopne
aas
int3
lods
jbe
add
inc
push
and
add
jns
leave
mov
not
ret
xchg
das
xor
js
sbb
pop
jne
stc
push
xor
fcomp
stc
bound
add
mov
push
stos
push
jle
add
pop
fimul
dec
in
retf
jae
(bad)
and
clc
xor
inc
or
inc
cmp
mov
int
into
enter
cmp
xchg
and
jl
imul
rcr
xchg
movs
int3
sub
arpl
cmp
lahf
add
jmp
arpl
inc
or
or
fistp
rcl
pop
movs
test
push
or
add
daa
lods
test
lock
fisttp
sbb
js
fstp
rcr
int
add
add
mov
das
cmp
mov
scas
jbe
lods
or
cld
sub
push
rcr
lock
xlat
add
mov
inc
loopne
jne
add
fwait
push
or
and
out
cmp
or
dec
out
xor
or
mov
sub
jmp
sub
adc
das
mov
pop
lahf
lock
mov
add
push
add
jge
shl
in
aas
add
cmps
sbb
fcmove
mov
jl
fxch
xor
mov
sub
mov
mov
(bad)
adc
push
add
aad
das
adc
sbb
pop
add
cmp
push
hlt
adc
mov
jl
mov
xor
rcr
test
rol
jl
test
fwait
add
push
clc
lods
(bad)
in
into
jne
lock
push
lods
cmp
mov
(bad)
mov
jle
add
or
xchg
cmps
fsubr
jmp
(bad)
sub
inc
push
clc
pop
cmp
rcr
sar
fisttp
push
arpl
loopne
ret
mov
inc
das
out
sub
dec
js
mov
or
inc
aas
sbb
pop
mov
clc
std
or
xchg
loope
or
out
mov
xchg
ret
sub
add
cli
push
xchg
cmp
dec
xchg
std
je
fild
rcl
fistp
xor
push
push
adc
aaa
(bad)
jg
mov
stos
pop
pop
fisub
clc
enter
loope
aad
jle
in
je
inc
loopne
loopne
pop
cmps
adc
(bad)
xor
sbb
fcmovbe
int3
test
retf
lods
div
js
movs
mov
xor
rsqrtps
iret
test
outs
mov
mov
push
lods
lods
jp
call
lock
popf
pushf
inc
hlt
jb
ror
adc
daa
movs
push
loope
lock
cmp
popf
shr
inc
hlt
mov
mov
rol
pop
jae
hlt
or
mul
shl
cmp
(bad)
into
mov
mov
mov
inc
out
cdq
ret
outs
out
cmp
lock
xchg
pop
(bad)
retf
into
pop
clc
imul
and
into
mov
mov
jp
fucomp
adc
jae
mov
sbb
dec
adc
mov
lock
lar
jnp
mov
inc
test
jae
lock
add
inc
or
mov
ds
hlt
xor
pop
push
clc
addr16
scas
add
add
int
inc
call
aas
pop
loopne
add
dec
fimul
ret
stc
fwait
icebp
add
sub
aad
out
sub
retf
movs
mov
add
pop
fnstsw
pop
add
lock
cdq
cmp
add
clc
sub
aas
sbb
push
shr
outs
add
pop
cmp
jl
sub
sub
data16
neg
pop
cmp
addr16
lahf
dec
scas
in
(bad)
add
push
(bad)
mov
adc
add
add
data16
sub
mov
jns
mov
inc
es
(bad)
arpl
aas
mov
jnp
(bad)
pop
mov
xor
add
mov
push
shr
mov
fwait
sbb
lahf
mov
cdq
push
sub
sar
je
push
add
adc
mov
mov
sar
sar
lock
xchg
add
imul
pop
sub
ror
data16
popf
add
loopne
sbb
add
inc
adc
arpl
clc
cs
ds
lock
push
adc
int
jl
in
in
cmp
jbe
jge
lock
jbe
add
js
leave
imul
jge
mov
loop
mov
fild
cmp
adc
xor
mov
aaa
fwait
int
xor
fbld
and
das
sar
dec
mov
js
fist
cmps
lds
stos
arpl
cmp
xchg
retf
pop
sahf
pop
scas
lds
outs
out
lock
cmp
imul
cmp
ja
shr
mov
mov
push
mov
(bad)
lods
lods
mov
and
stos
loopne
jo
loope
or
dec
inc
pop
xor
aaa
sar
das
mov
pop
call
adc
fwait
adc
es
ret
hlt
(bad)
and
pop
or
mov
sbb
dec
dec
mov
pop
or
mov
jbe
loope
mov
rcr
vucomiss
lock
mov
lock
and
popf
scas
push
loopne
mov
and
clc
lods
rol
jmp
push
push
jbe
xchg
imul
test
dec
adc
pop
or
out
inc
loopne
adc
adc
fild
js
(bad)
mov
loopne
pop
add
jl
or
sahf
gs
aaa
cli
push
js
in
enter
mov
xor
repnz
sar
pop
mov
cmp
retf
lods
mov
fsubr
add
and
mov
cdq
mov
cmp
or
rcr
mov
jle
rcl
add
sub
jge
pop
fld
mov
pop
ja
push
or
das
add
repz
fld
fild
mov
movs
in
call
inc
mov
ret
jl
push
jbe
add
retf
jl
lock
outs
or
jl
push
movs
lods
outs
(bad)
mov
rcr
jb
cmps
(bad)
fsub
mov
jle
pop
(bad)
aas
add
xchg
arpl
or
fild
or
call
loopne
add
pop
add
add
out
mov
test
ja
lock
int
data16
mov
std
xchg
add
mov
fist
ds
or
or
ins
shl
mov
sbb
sbb
jle
add
xor
cli
arpl
jmp
xor
clc
cs
shr
das
mov
mov
cmps
mov
dec
mov
outs
mov
mov
loope
add
call
dec
in
in
add
pop
cmp
pop
shr
clc
xchg
add
add
das
add
sub
mov
jle
jno
(bad)
inc
loopne
pop
bound
das
pop
mov
xor
adc
adc
aaa
add
xlat
adc
lock
mov
cmp
cli
test
icebp
mov
test
mul
lock
cli
fwait
cdq
add
cmps
add
rol
jg
shl
pop
shr
clc
xchg
add
or
aaa
push
shl
cmp
dec
lahf
sub
xlat
adc
aas
jmp
adc
jge
stc
xchg
fld
add
pop
pop
inc
mov
loope
jl
adc
mov
js
aad
fsubr
jne
stos
xor
frstor
aam
mov
xor
loope
push
js
add
cs
(bad)
sti
loope
je
and
lock
mov
pop
and
pop
or
mov
(bad)
inc
pop
fild
inc
js
pop
in
xor
rol
out
mov
sub
mov
lock
into
pop
int
fiadd
jg
add
loopne
sub
out
test
jecxz
clc
fbld
lock
js
ret
cdq
aad
outs
cmps
adc
lock
mov
ds
loopne
and
inc
js
ficom
or
pop
xor
cmp
sbb
scas
stos
ficomp
retf
jnp
js
scas
inc
loopne
lock
test
mov
push
jnp
sbb
adc
int
ins
dec
aaa
or
(bad)
(bad)
aad
lahf
pusha
mov
(bad)
shl
push
jbe
mov
or
pop
dec
aaa
cmp
jge
pushf
outs
stos
or
fist
xchg
push
add
sbb
out
xor
mov
push
loope
adc
pop
ins
inc
and
push
sahf
jecxz
hlt
add
aaa
add
adc
ret
mov
cdq
add
push
jae
popf
or
add
pop
inc
loope
mov
jb
aaa
adc
daa
fcom
add
fistp
das
cmps
int3
sub
clc
mov
scas
(bad)
pop
in
jge
loopne
outs
stos
add
iret
add
mov
test
arpl
push
mov
add
addr16
mov
add
pop
in
js
adc
daa
push
add
es
retf
dec
or
jno
outs
mov
fcom
jne
sub
and
push
in
and
mov
repz
dec
js
push
dec
mov
lock
push
adc
test
mov
dec
adc
jle
ror
or
aas
add
retf
(bad)
data16
sub
fwait
adc
pushf
or
jg
pushf
das
pop
adc
sbb
add
push
retf
xchg
rcl
lea
stos
lds
neg
sub
mov
fisttp
lock
mov
add
lea
xchg
(bad)
in
or
add
dec
adc
jge
loopne
sub
retf
aas
or
sbb
repz
cmp
in
jl
outs
jae
loope
push
stos
mov
dec
mov
mov
(bad)
fsub
add
clc
repz
inc
mov
xchg
mov
clc
mov
call
and
scas
add
das
push
(bad)
mov
push
clc
scas
fwait
ja
data16
adc
push
pushf
jl
int
cmps
and
mov
clc
shl
mov
cmp
pop
test
(bad)
jb
or
and
mov
call
add
clc
dec
add
dec
dec
xor
xchg
ror
outs
adc
mov
jns
pop
ins
jne
mov
jge
pop
mov
jl
push
hlt
inc
lock
mov
xor
lahf
call
js
fdivr
mov
ffreep
enter
call
pop
add
gs
sbb
das
mov
mov
pop
push
aas
add
movs
scas
push
push
hlt
in
or
xchg
jb
lahf
push
out
pop
push
hlt
lods
or
pop
js
ret
add
adc
pop
loope
(bad)
push
push
add
mov
push
mov
mov
fstp
std
je
jg
icebp
sahf
movs
sbb
mov
jge
retf
lods
xchg
ja
repnz
adc
jg
retf
cmp
loopne
cmp
cli
xchg
mov
jnp
add
add
bound
mov
je
jg
retf
ficom
icebp
scas
aam
(bad)
push
test
cld
inc
(bad)
lods
ss
mov
icebp
es
adc
xchg
pop
or
mov
arpl
sbb
les
cmp
xor
xchg
in
retf
mov
or
das
ja
jbe
cdq
push
retf
sbb
leave
mov
mov
fwait
dec
sbb
js
push
in
mov
xchg
call
(bad)
and
jg
xor
(bad)
scas
add
add
rcl
not
in
xor
mov
call
clc
retf
push
(bad)
jb
cmps
jle
loopne
add
clc
xor
out
inc
loope
xchg
jnp
loopne
add
add
ss
pop
data16
mov
and
stos
sbb
xor
outs
pop
js
loopne
jbe
and
xchg
sbb
lahf
inc
loopne
or
or
or
fild
repz
jle
mov
leave
or
sub
mov
test
ret
pop
fnstsw
rcr
fwait
cdq
gs
sbb
sar
mov
pop
data16
add
or
sub
mov
clc
sbb
mov
aas
cmp
loopne
in
dec
scas
adc
fwait
adc
imul
xchg
and
ds
add
jge
stc
push
cmps
add
dec
xchg
add
rol
into
call
cmp
xchg
inc
in
sub
fbld
push
adc
sbb
clc
mov
fisttp
xchg
pop
ins
cmp
mov
idiv
(bad)
push
mov
pop
test
add
jmp
push
sbb
push
rcl
sub
clc
push
sub
sbb
aas
dec
inc
jg
(bad)
in
hlt
daa
cmps
(bad)
fadd
loopne
add
addr16
jne
call
mov
push
cmp
loopne
(bad)
ror
jmp
call
out
(bad)
cli
or
pop
cmp
(bad)
jmp
pop
ins
cmp
(bad)
in
mov
clc
add
pop
push
mov
call
out
std
test
lahf
inc
loopne
lock
rol
dec
gs
sbb
cmp
jp
ret
mul
ficom
sub
adc
add
js
mov
ja
jnp
mov
sbb
std
dec
push
hlt
cli
xchg
stos
ret
jnp
fsubrp
ss
pop
pop
lahf
pop
pop
sub
mov
ins
inc
aas
(bad)
jbe
pop
xor
ret
push
mov
ins
and
ret
add
and
xlat
cmp
inc
js
test
retf
lods
mov
iret
mov
pop
mov
fisttp
imul
int
loopne
outs
hlt
popf
or
sub
sbb
hlt
mov
into
call
in
dec
clc
adc
inc
adc
xchg
std
lds
jge
or
js
dec
inc
lock
out
xor
jns
pop
pop
inc
loopne
lods
cmp
mov
inc
jbe
and
aaa
ret
lock
cmp
pop
ret
sti
or
push
adc
push
(bad)
pushf
pop
(bad)
push
repnz
ins
cmps
adc
ins
push
mov
jae
aas
(bad)
push
hlt
pop
sub
jmp
lods
add
mov
push
inc
(bad)
cwde
aad
jbe
mov
inc
aas
popf
mov
in
mov
retf
add
lods
push
mov
ins
adc
push
push
aaa
scas
ja
push
or
or
xchg
cmp
xchg
and
lahf
add
lahf
jo
pop
push
jbe
adc
pop
add
scas
outs
xor
cmp
loopne
xchg
fcmove
dec
mov
iret
jb
lock
stos
fwait
dec
sbb
mov
pop
add
inc
mov
push
mov
add
stos
sbb
cmp
loopne
sub
mov
cli
and
(bad)
clc
mov
clc
push
mov
int3
stc
bound
add
and
shr
pop
sub
adc
ret
clc
cmp
push
jle
loopne
dec
cmp
aas
and
(bad)
in
scas
add
push
test
retf
add
add
test
retf
retf
mov
pop
adc
retf
popf
and
add
pop
add
stos
add
pop
add
inc
add
clc
xor
jg
rcl
outs
push
aas
mov
xor
sub
push
hlt
cmp
mov
mov
sub
test
and
popf
add
or
jnp
daa
xlat
or
mov
cmc
or
(bad)
adc
adc
dec
mov
pushf
inc
inc
lahf
sbb
push
arpl
das
cmp
rcr
add
addr16
dec
js
fstp
lock
ja
inc
repz
mov
lods
lods
hlt
aaa
push
mov
mov
add
sub
dec
jne
add
mov
loopne
add
xchg
into
xchg
popf
(bad)
data16
push
aaa
xor
es
inc
loopne
mov
(bad)
lock
mov
add
add
dec
loopne
loopne
sub
nop
xchg
mov
inc
hlt
imul
stos
arpl
ret
push
das
jne
mov
push
xor
adc
clc
mov
and
sbb
cmp
js
lock
ficom
loope
push
add
test
pop
cmp
fnsave
fmul
mov
jbe
pop
xor
repz
sti
dec
js
arpl
xor
mov
in
(bad)
int3
test
mov
js
or
aad
push
pop
out
xor
jnp
push
sbb
sti
dec
js
sar
xor
sub
mov
das
mov
je
cvttps2pi
sub
clc
nop
cmp
mov
cld
fldcw
test
add
sti
push
shr
pop
push
clc
adc
jne
xchg
pop
fld
add
inc
or
loope
mov
jl
fst
xlat
push
clc
adc
call
jl
lock
sub
jg
or
fnsave
fistp
aas
ret
inc
jbe
(bad)
mov
fisttp
hlt
mov
aas
push
loopne
push
mov
loope
sub
out
xchg
xchg
pop
mov
mov
mov
bound
fld
jmp
cli
xor
sbb
and
mov
lea
pop
cmp
xchg
add
mov
pop
loope
pop
fcmovu
dec
cmps
popf
rcl
ins
fs
push
hlt
and
scas
stos
fwait
les
fcmovu
mov
in
sub
mov
mov
call
lock
paddsw
ss
loopne
cmp
adc
jl
shl
ja
jg
call
pop
xchg
retf
lock
add
push
retf
inc
lahf
inc
loopne
add
mov
mov
dec
jge
add
pop
add
and
mov
sbb
jp
loopne
adc
rol
jmp
cmps
or
and
sti
into
pop
ins
sbb
dec
in
add
outs
add
rcr
and
shl
enter
lock
push
hlt
adc
pop
add
mov
pop
or
stos
mov
dec
push
jg
shl
ja
clc
fbld
shl
pop
lock
xor
push
out
cli
fwait
mov
pop
mov
fucomip
sbb
enter
out
adc
inc
aas
fcomi
movs
je
out
hlt
push
mov
mov
aaa
adc
icebp
adc
mov
rol
xchg
sbb
js
out
fstp
jge
sub
retf
scas
xchg
scas
dec
mov
rcr
loope
lock
dec
pop
(bad)
lock
mov
js
cmps
mov
out
mov
cmp
cwde
ja
lea
cmps
mov
js
iret
cmp
pop
in
jbe
push
test
(bad)
das
cmp
(bad)
loopne
outs
hlt
dec
mov
mov
xor
movs
mov
xchg
mov
ins
sub
or
push
adc
(bad)
popf
cmp
test
xor
inc
scas
aas
cmp
xor
and
jae
in
jnp
or
add
pop
into
lahf
pushf
outs
xor
out
mov
lock
fisttp
test
das
outs
sub
int
mov
push
outs
inc
loope
repz
jns
add
inc
mov
add
push
sub
cdq
push
cmp
loopne
jno
in
ins
adc
mov
adc
adc
rcr
lock
add
inc
loope
add
pop
clc
outs
pop
clc
sub
inc
cld
or
dec
outs
aaa
test
add
cmps
cmp
aam
and
mov
pop
ins
repnz
add
icebp
push
hlt
pop
mov
rol
lock
cmps
int3
push
mov
add
jmp
hlt
xor
fwait
push
or
push
jge
adc
xchg
pop
push
loopne
add
inc
pop
js
lock
dec
or
jnp
(bad)
pop
mov
mov
ror
clc
mov
cld
cdq
sub
jg
inc
jbe
sti
fwait
or
xchg
das
and
das
aaa
cli
aaa
cmps
fsubr
or
clc
adc
push
and
sub
out
add
hlt
xor
xchg
into
call
and
scas
mov
aas
in
add
retf
push
shl
push
mov
sub
mov
cmp
inc
jbe
mov
adc
push
cmps
sbb
ins
push
hlt
xor
out
lock
mov
mov
jbe
mov
call
and
aad
inc
lahf
add
sub
mov
or
clc
adc
loopne
add
adc
inc
pop
out
pop
aad
cdq
mov
inc
je
js
popf
push
pop
jg
sahf
mov
xor
and
or
or
rcl
loopne
cmp
and
aas
mov
pop
fisubr
shr
bound
add
outs
add
not
movs
xchg
clc
mov
sbb
push
loope
addr16
mov
fld
into
mov
mov
enter
push
xor
push
outs
xor
xchg
stos
cmps
repnz
lock
movs
cmp
jae
scas
jl
cmp
xor
mov
xchg
sahf
mov
cld
pop
test
lock
call
xor
std
dec
mov
mov
call
sbb
jmp
inc
mov
repz
add
imul
push
sbb
(bad)
jnp
xchg
pop
aad
fldcw
adc
mov
fadd
retf
pop
(bad)
test
(bad)
pusha
or
clc
pop
movs
loop
and
int
outs
cmp
mov
arpl
add
add
adc
data16
xor
mov
add
push
pop
clc
jge
mov
sub
xor
xchg
retf
cwde
pop
in
dec
cmp
dec
js
hlt
jmp
daa
and
mov
outs
dec
jge
ja
jl
in
call
and
xor
in
pop
cmp
or
hlt
adc
call
add
or
mov
retf
clc
push
cmps
test
push
fcmovne
stc
mov
mov
mov
jge
mov
push
push
hlt
add
mov
pushf
data16
jb
rcl
jle
sub
(bad)
add
add
fnstcw
mov
test
scas
adc
adc
loopne
push
pop
inc
loopne
cmps
and
arpl
das
xor
mov
sbb
call
ds
add
or
cs
or
aas
jb
arpl
or
scas
add
ds
loopne
or
pop
add
adc
lock
(bad)
add
ja
jl
cmp
aas
cmp
sub
hlt
xchg
push
inc
hlt
xor
cli
add
arpl
pop
lock
cmps
add
sbb
jp
fstp
pop
dec
xor
mov
and
cld
or
enter
scas
sbb
and
add
xchg
xchg
adc
shr
outs
out
js
fmul
dec
inc
aaa
xor
clc
leave
or
jne
ds
add
retf
lock
(bad)
arpl
cld
stc
out
mov
out
add
fsubp
cmp
retf
adc
and
xchg
repz
xchg
cmp
or
mov
out
pop
(bad)
lock
mov
inc
jg
(bad)
in
xchg
sbb
fst
jne
lock
lock
pop
lock
mov
clc
enter
repz
push
pop
sahf
fmul
popf
repnz
jl
and
cmp
clc
adc
lahf
test
push
adc
mov
inc
pop
xor
add
sar
cmp
mov
fild
arpl
daa
imul
aad
loope
out
push
pop
pop
out
and
lods
in
repnz
sti
push
jg
mov
cmp
dec
pop
inc
inc
call
ins
xor
js
ror
sar
mov
in
enter
sar
hlt
leave
xchg
pop
push
fidivr
lahf
test
and
cli
cmp
jge
cmp
fild
jg
mov
or
sbb
cli
cmc
lock
pop
repz
hlt
xchg
fidiv
sub
add
dec
sbb
outs
inc
addr16
test
gs
jno
(bad)
xchg
pop
xchg
mov
pop
mov
ins
sub
sub
jle
shl
jns
pushf
das
mov
lahf
pop
js
retf
(bad)
es
xor
ins
add
clc
push
add
outs
add
pop
add
inc
jbe
mov
into
push
int3
retf
cs
cmp
pop
in
xor
jl
or
xchg
xchg
add
int3
mov
pop
in
inc
sbb
jne
mov
xlat
mov
scas
mov
pop
fild
clc
lahf
push
sar
test
das
aaa
ja
(bad)
rol
ja
ror
loopne
pop
inc
aas
or
mov
lock
cld
sub
mov
pop
popa
sub
mov
mov
sbb
leave
popf
mov
or
jp
jmp
mov
ret
mov
mov
imul
scas
xchg
fnsave
push
or
popf
push
mov
clc
push
add
cmp
sub
(bad)
push
fcmovne
leave
popf
pop
(bad)
push
daa
rol
outs
dec
pop
fxam
ins
or
inc
mul
div
cmp
push
out
aam
add
mov
mov
aas
mov
cmps
mov
adc
retf
je
pop
add
dec
add
pop
pop
lds
mov
cmps
mov
jle
loopne
sub
inc
push
jbe
sbb
lods
lods
call
je
iret
je
outs
pop
clc
ja
fmul
fdivr
jle
(bad)
aaa
adc
xchg
mov
pop
and
mov
add
or
add
shl
cld
cmp
jg
rcr
lock
add
sbb
movnti
lock
aas
outs
hlt
int
cld
and
xchg
sti
push
mov
test
add
clc
or
xlat
ret
js
mov
std
leave
jmp
add
cli
push
out
(bad)
ja
xlat
enter
fs
cmps
fwait
xor
aaa
inc
lock
test
data16
ret
std
adc
mov
std
lahf
adc
xor
call
mov
loopne
mov
fnsave
add
cmp
mov
scas
in
jl
pop
xor
fwait
int
repnz
mov
push
cld
test
jbe
xchg
in
in
ss
mov
ret
xchg
popf
jbe
jnp
pop
pop
xor
mov
retf
stc
ret
push
pop
out
cmp
mov
pop
ins
xchg
xor
jbe
mov
fwait
xchg
retf
pushf
outs
mov
lock
cmps
pushf
outs
into
dec
cmp
mov
aaa
ret
mov
pop
xor
mov
lock
fisub
ficomp
xchg
lock
pop
mov
clc
in
lock
fcmovnbe
(bad)
fisub
sbb
ja
and
(bad)
popf
mov
aaa
ret
sti
sub
popf
cmp
dec
in
pop
add
jb
mov
add
inc
cmp
loopne
sub
loope
(bad)
ret
lock
shl
mov
add
popa
mov
mov
das
out
aad
bound
mov
out
dec
cmp
loopne
xor
fwait
imul
xchg
sub
pop
add
pop
fld
and
pop
(bad)
test
lods
mov
jl
ficom
mov
push
jbe
mov
loopne
sbb
sbb
scas
sub
mov
push
clc
rol
imul
lahf
rcr
int3
dec
out
cmc
or
outs
and
stos
cmp
mov
mov
and
ror
cld
outs
add
shl
lock
sar
aas
(bad)
pop
inc
loopne
aas
mov
loopne
sbb
pop
add
aad
in
cmp
jbe
or
and
add
cld
pop
cmp
dec
add
jge
call
loopne
mov
aas
outs
(bad)
mov
test
mov
add
fsubr
jg
inc
add
aaa
cli
pushf
jge
xchg
add
pop
add
xor
fisttp
or
add
adc
mov
les
clc
dec
mov
pop
mov
cmp
add
ins
or
out
(bad)
lods
add
rcl
rol
jle
add
inc
add
data16
dec
inc
das
adc
(bad)
jl
retf
enter
adc
ds
inc
add
mov
mov
movs
(bad)
in
ins
fs
push
clc
fild
cld
xlat
add
ror
retf
add
add
jg
rcr
lock
outs
inc
loopne
test
in
call
jo
lock
call
ins
fs
out
dec
cmp
test
lock
mov
ja
sti
adc
(bad)
sbb
aas
(bad)
into
pop
ret
or
fisttp
adc
rcl
xlat
fisttp
cmp
out
out
test
xor
loopne
sar
lock
ret
sti
ss
ins
daa
cmps
test
add
ret
sbb
sti
out
jg
adc
jbe
daa
push
sar
xchg
or
sti
call
sti
loope
add
inc
js
xchg
(bad)
lock
loopne
aaa
xor
out
sbb
loopne
sar
js
jo
data16
das
sar
cmc
or
mov
ficomp
inc
aas
add
loope
sub
xor
pop
add
xor
hlt
adc
call
aad
mov
inc
aaa
dec
lock
inc
js
push
shl
and
sub
cmps
mov
mov
xchg
adc
inc
or
sti
loopne
pop
add
ret
sti
mov
adc
ja
sbb
lock
test
cmp
std
and
test
lahf
fsub
popf
mov
xor
fisub
and
gs
sub
fidivr
(bad)
push
sti
xchg
lock
imul
jge
mov
sar
mov
or
fs
jns
jbe
or
sub
push
in
dec
loope
add
(bad)
fild
ds
gs
lock
add
fild
dec
add
add
jbe
xchg
jns
mov
add
push
daa
and
mov
mov
shr
adc
loopne
test
pop
sbb
aad
and
xor
test
xlat
mov
fidiv
mov
or
cmp
(bad)
aas
add
xchg
push
rcl
outs
out
or
or
fst
mov
rcl
clc
mov
clc
xor
pop
inc
loopne
mov
dec
add
out
ret
into
pop
lods
push
arpl
adc
push
cmps
test
dec
cs
clc
inc
add
xchg
sub
mov
lock
add
inc
stos
call
add
mov
aas
ret
sub
sbb
mov
add
fstp
jge
loopne
mov
add
pop
pop
ret
cmps
clc
mov
outs
mov
cli
adc
fbld
lock
add
call
add
sbb
adc
adc
das
loopne
add
and
iret
sub
dec
add
xchg
add
add
fadd
lock
ja
jl
adc
ret
(bad)
pop
cmp
in
jnp
(bad)
mov
jne
xchg
add
loopne
adc
es
pop
lock
add
clc
dec
lods
mov
jl
pop
pop
fild
loopne
sub
(bad)
retf
outs
add
shr
or
lods
add
in
test
ds
xchg
popf
fmul
pop
aad
mov
cmp
pop
call
(bad)
lock
jne
jecxz
ror
fild
mov
sub
scas
sub
jns
mov
dec
js
loope
dec
aaa
cmp
jge
in
in
lods
xor
or
mov
mov
push
mov
dec
inc
das
mov
add
pop
sar
out
arpl
mov
push
shr
mov
jge
mov
sti
add
xchg
cmp
fdivrp
xchg
out
std
lods
lock
jle
test
mov
or
pusha
cmp
iret
mov
js
xchg
frstor
js
pop
inc
scas
sbb
mov
clc
mov
jnp
jns
xlat
enter
sub
neg
aam
(bad)
sti
sbb
xor
sar
jae
(bad)
adc
fisub
mov
xor
jmp
aas
cwde
cmp
call
test
or
cmp
loopne
sar
loopne
ret
sti
ficom
add
sbb
or
int
add
sub
push
push
add
hlt
mov
push
ds
inc
lahf
mov
call
leave
sbb
jbe
jnp
stos
test
add
pop
add
mov
mov
push
icebp
adc
mov
lock
mov
cdq
repz
and
add
movs
xchg
lock
mov
test
or
add
dec
sub
(bad)
out
xor
repz
loope
inc
loope
mov
inc
loope
fcmovbe
dec
adc
push
add
jae
push
inc
loope
cmps
mov
and
mov
jle
in
call
out
mov
pop
stc
push
pop
sub
aas
shl
or
out
mov
or
into
adc
mov
popf
loop
cmp
jmp
mov
fimul
mov
rol
lock
jmp
(bad)
dec
add
das
cmp
push
aaa
fild
inc
jbe
and
fsubr
sbb
add
mov
and
push
add
shl
mov
loopne
test
cmp
test
sbb
int
adc
clc
stc
add
adc
scas
mov
scas
add
push
add
(bad)
xor
jmp
imul
loopne
add
adc
jg
add
sbb
lahf
add
int
or
fst
mov
(bad)
data16
cli
adc
cli
shr
lock
nop
cld
mov
bound
or
(bad)
sub
pop
clc
and
push
mov
pop
pop
lahf
cmp
psrlw
pop
in
stos
mov
mov
outs
add
jns
ds
cld
nop
cmp
data16
cmps
mov
or
out
xor
retf
add
push
or
sti
pop
lock
jge
mov
loopne
pushf
mov
pop
fmul
push
or
hlt
sbb
leave
stc
and
pop
fldcw
aaa
ror
adc
push
sub
mov
div
mov
add
imul
lock
aas
add
repnz
xchg
sar
scas
xor
test
out
xor
popf
inc
clc
dec
js
rol
inc
sub
ss
lods
test
call
xor
sbb
xchg
loope
cmp
mov
inc
fimul
xor
sub
js
adc
ins
or
repnz
jbe
fwait
aaa
jae
dec
lock
xor
and
out
xor
outs
je
push
xor
and
scas
dec
js
pop
pushf
xchg
jb
cmp
cmp
call
call
jle
add
mov
or
mov
mov
xor
out
cmp
lock
mov
mov
repz
aaa
loop
xor
xchg
or
xor
jge
mov
cmc
lock
cmp
test
cdq
xchg
popf
adc
adc
retf
add
pop
mov
jg
loopne
add
xchg
fbstp
lods
ss
loope
add
ja
lock
fbld
xchg
sahf
mov
inc
push
aas
xchg
add
sub
cld
ins
cmp
fisttp
lock
xchg
ffree
add
data16
push
add
fild
fidiv
loopne
jne
add
sbb
add
lods
mov
stc
push
dec
inc
mov
push
add
dec
inc
das
loopne
or
pop
cld
and
xor
pop
clc
aaa
add
inc
sbb
jg
ds
lock
add
lock
call
mov
fdiv
rcr
clc
outs
push
sar
mov
add
out
push
loopne
sbb
jle
pop
sub
push
aaa
imul
inc
inc
mulps
add
pop
or
pop
sub
pop
add
or
add
inc
cmp
xor
out
cmp
push
add
(bad)
ret
adc
das
xchg
mov
fsub
fld
add
popf
mov
addr16
xor
add
daa
adc
ret
daa
sbb
sbb
lock
cmp
fbld
jb
add
fs
scas
aas
cmp
pop
sub
stos
lds
or
xchg
lock
jp
(bad)
outs
add
lods
xchg
sbb
stos
fwait
ja
ja
(bad)
in
inc
scas
xchg
fstp
adc
sub
push
sbb
mov
add
rcr
sbb
cmp
xchg
mov
jge
add
fdivp
movs
call
shr
outs
cmps
sbb
and
test
data16
into
js
xor
pop
loopne
fld
cli
dec
hlt
sbb
mov
sti
cmp
jmp
shl
adc
inc
dec
mov
pop
leave
(bad)
(bad)
ss
lea
or
stos
mov
loopne
push
out
gs
dec
inc
pop
xor
lock
imul
pop
out
dec
and
fistp
ss
test
mov
lock
mov
xor
in
fisttp
out
ret
lock
addr16
pop
sbb
mov
mov
data16
cmp
mov
or
push
fcmovne
fstp
mov
arpl
outs
xor
dec
loopne
xchg
fcmove
sub
pop
ja
lock
daa
xchg
inc
loopne
lock
jge
hlt
and
movs
call
cmp
xchg
adc
jne
scas
ret
jnp
add
add
mov
daa
cmps
popf
fcom
pop
pxor
mov
js
inc
loopne
je
lods
lock
out
adc
movs
adc
mov
lock
cmp
pop
inc
loopne
xor
psubsw
(bad)
mov
mov
pop
ins
sbb
pop
add
mov
inc
jg
lds
fisttp
jbe
add
sbb
jle
shr
mov
add
add
sbb
ret
outs
adc
addr16
xor
cmps
pop
xchg
cmp
push
sub
mov
add
lock
mov
scas
inc
loope
mov
std
mov
fild
stos
mov
dec
and
popf
scas
in
es
xchg
add
sbb
in
push
cld
adc
xlat
enter
lahf
add
push
add
pop
or
push
pop
add
add
add
fbld
jp
fldcw
fucomip
push
hlt
pop
mov
jp
loope
xchg
das
mov
pop
js
icebp
mov
arpl
adc
add
cmp
add
push
add
ins
add
adc
dec
add
add
pusha
add
inc
jbe
push
and
aas
fs
lock
out
std
test
int
push
or
stos
fwait
outs
(bad)
popf
cmp
mov
movs
into
push
jb
push
add
jmp
dec
clc
adc
sbb
gs
sbb
aaa
push
shl
mov
xor
fwait
test
jae
jg
xor
dec
test
jg
loopne
cmp
push
jp
cmp
or
pop
retf
in
out
push
ror
push
clc
mov
jae
adc
iret
movs
lods
lods
rcl
leave
xchg
pop
jb
sti
fwait
xchg
aad
fist
jbe
and
sahf
jg
cmp
add
hlt
dec
inc
inc
push
aaa
cmp
xchg
inc
ret
push
add
jmp
add
ja
cld
stos
add
xor
ja
shr
inc
loopne
add
add
mov
pop
out
aam
je
sbb
sbb
arpl
mov
mov
xchg
sub
inc
ficomp
out
das
ret
mov
test
dec
sar
xchg
sbb
ret
sti
jbe
imul
add
sbb
rol
add
outs
gs
or
das
ret
sti
add
(bad)
jns
inc
or
jg
xchg
fisttp
add
into
pop
leave
xchg
fld
mov
lods
add
mov
pop
push
jbe
js
int
call
jge
push
(bad)
aad
cld
sub
lea
inc
out
ret
lock
cmp
popf
push
hlt
cmp
pop
into
pop
repnz
mov
jge
fidivr
push
(bad)
lock
js
scas
mov
(bad)
in
adc
add
stos
jae
mov
cli
xchg
jnp
rol
jmp
scas
or
pop
and
dec
or
adc
sbb
fidiv
sti
repz
in
pusha
push
jbe
sbb
stos
and
aaa
cmps
scas
push
je
leave
lods
in
mov
pop
pop
sar
adc
push
add
jbe
daa
pop
pop
and
(bad)
(bad)
retf
or
jg
and
or
outs
ret
sti
(bad)
jmp
test
or
(bad)
dec
xchg
je
ret
jnp
add
push
mov
dec
mov
jp
jmp
mov
sub
fs
inc
pop
movs
mov
das
cmp
rcl
sbb
cmp
lods
push
ficom
mov
jae
setl
mov
push
clc
hlt
daa
cld
xchg
aam
in
(bad)
aam
in
aas
(bad)
icebp
sbb
(bad)
pop
sbb
jp
std
sbb
call
(bad)
pop
cmp
cmp
cmp
(bad)
pushw
add
popf
fdivr
test
test
retf
or
arpl
cmp
movs
cs
shr
add
inc
or
clc
mov
jle
rcr
lahf
(bad)
gs
ror
test
sbb
cmps
cwde
shr
loopne
inc
loopne
add
xchg
popf
add
jbe
iret
cmp
add
popf
ror
loopne
pop
mov
sbb
not
mov
(bad)
mov
std
test
sub
fisttp
lock
add
xchg
sub
outs
pop
sar
mov
xor
inc
loopne
test
pushf
shl
sub
out
test
clc
das
cmp
rol
jg
jne
fild
lock
jg
jb
rcl
dec
into
mov
add
lock
aas
mov
jg
in
scas
popf
fmul
push
cmp
sub
jmp
aas
cmp
out
xor
inc
add
dec
push
lock
xchg
ja
add
xchg
das
cmc
movs
aam
pushf
mov
dec
sbb
xor
add
inc
or
nop
add
xor
clc
dec
add
sub
cli
push
and
and
loope
inc
loopne
xor
cmp
cmc
mov
ins
out
aam
ja
data16
lahf
cmp
jmp
adc
xlat
cmp
fcmove
push
call
ins
jae
icebp
test
dec
jo
in
hlt
daa
test
test
(bad)
in
data16
(bad)
pop
inc
loopne
rcl
jne
scas
xchg
xor
aas
mov
ret
push
or
dec
js
pop
jne
dec
aaa
ds
cmp
aad
fistp
std
adc
fisttp
out
pop
sti
sbb
scas
adc
ss
cmps
pop
aad
sar
fneni(8087
fnsave
or
fist
jl
pushf
outs
scas
xor
movs
add
sbb
jae
jl
cmp
std
mul
std
cmp
lea
inc
loopne
xor
lock
imul
mov
daa
sbb
inc
out
ret
jnp
fidivr
push
jle
in
sub
sbb
iret
cmp
shl
push
shr
mov
(bad)
lock
pop
cmp
in
scas
xchg
ja
sbb
into
push
clc
xor
aaa
xor
sbb
add
ss
xor
inc
loope
add
add
stc
push
push
adc
test
add
mov
fnstsw
(bad)
xchg
jbe
push
push
clc
ds
sbb
xchg
cmp
jge
xor
movs
pop
xchg
aaa
jecxz
mov
cdq
aad
add
xchg
xor
jg
or
inc
lahf
inc
loope
push
clc
xor
adc
mov
(bad)
arpl
cld
fld
fisttp
lock
mov
call
lock
adc
add
pushf
das
outs
jne
loope
mov
dec
add
cld
les
add
ja
jle
add
ja
sbb
add
dec
mov
(bad)
cmp
call
aad
add
outs
mov
cmp
daa
add
sti
dec
or
sar
mov
pop
pop
aas
add
and
(bad)
aad
dec
aas
xlat
inc
jbe
sbb
mov
xchg
sbb
dec
add
dec
jmp
xchg
adc
(bad)
neg
arpl
outs
add
push
add
cmps
add
loopne
pop
stc
sub
sub
sub
in
jbe
sub
jb
mov
int
and
leave
popf
add
mov
ror
cmc
arpl
mov
sbb
jl
loopne
add
jg
clc
retf
add
add
adc
lods
jbe
inc
jbe
clc
sub
(bad)
in
test
cld
aas
add
das
(bad)
adc
pop
inc
loopne
arpl
sub
sbb
xchg
add
adc
hlt
leave
enter
leave
leave
jmp
jb
(bad)
lods
mov
lods
lods
jbe
sti
popf
lock
mov
cmp
push
mov
sbb
aad
retf
jmp
or
retf
(bad)
fidiv
imul
aas
or
js
adc
das
mov
pop
inc
loopne
add
outs
xchg
jnp
std
adc
mov
fisttp
scas
mov
push
rcl
loope
je
hlt
inc
push
mov
in
in
or
leave
mov
sbb
push
jp
fldcw
jg
add
xor
call
xor
mov
sbb
fisttp
out
sbb
call
or
addr16
or
fnstsw
std
imul
fnsave
add
fbld
xor
cmp
push
sar
jl
inc
mov
add
inc
add
jno
xor
or
and
frstor
dec
aad
stc
push
cmp
xchg
imul
pushf
int3
test
sbb
adc
pop
je
jge
lock
cmp
cmp
xor
(bad)
lock
(bad)
sub
pop
add
sbb
repnz
cmps
push
shr
mov
mov
lock
cmp
fs
fst
jle
or
inc
js
leave
xchg
call
xchg
repnz
gs
jbe
js
mov
icebp
mov
xor
xchg
sbb
ins
in
ret
push
aaa
mov
stos
sbb
mov
lds
xor
push
(bad)
mov
outs
in
ja
shl
mov
mov
pop
inc
loopne
(bad)
scas
inc
loopne
push
rcl
dec
jg
add
sbb
xchg
sbb
js
int3
sub
ja
(bad)
mov
ror
fild
lock
ins
fs
loopne
push
rol
das
cmc
pop
sbb
dec
add
clc
cmp
(bad)
push
cmp
xor
outs
pop
js
(bad)
in
sbb
clc
push
addr16
or
push
mov
add
jnp
hlt
push
cmp
loopne
jbe
call
call
in
in
add
sbb
mov
xor
jl
add
and
dec
pop
inc
loopne
in
cmp
mov
lds
xchg
mov
pushf
mov
add
lock
cmp
pop
fucom
add
jb
stos
cmp
sar
jg
mov
cmp
jg
sar
xor
push
add
adc
jp
outs
movs
mov
(bad)
data16
pop
dec
add
add
jl
loopne
or
(bad)
xor
mov
jle
sar
pop
aas
add
sbb
rcr
cmp
cmp
jp
dec
push
arpl
fild
gs
or
dec
loopne
add
fwait
stc
sbb
mov
clc
popa
sub
int3
push
add
add
cmp
xchg
push
js
xchg
mov
ja
movs
je
adc
jb
push
inc
mov
mov
jl
or
pop
scas
add
adc
adc
mov
push
cmp
fcmovb
retf
lods
ss
stos
pushf
clc
or
out
push
add
jo
in
push
rcr
jno
pop
jnp
stc
sub
mov
test
aas
sbb
scas
mov
fmul
ss
jmp
or
cld
jne
push
cmp
aas
or
cmps
call
mov
xchg
cmp
leave
gs
or
fndisi(8087
std
jge
gs
cmp
jmp
jl
add
cmps
fwait
cdq
lock
(bad)
mul
neg
mov
js
pusha
in
out
loopne
or
cmp
or
inc
jmp
jne
jae
xchg
or
jmp
into
push
add
ins
inc
jbe
test
loopne
dec
popf
inc
inc
sub
add
sub
mov
data16
pop
(bad)
mov
mov
stc
dec
sub
or
iret
pop
clc
add
(bad)
mov
fisttp
lock
stos
test
jge
loope
push
shr
outs
inc
push
jbe
sub
out
cmp
adc
mov
add
and
push
adc
add
push
cs
ret
pop
(bad)
jb
push
adc
mov
cmp
push
or
fs
das
loopne
sub
scas
add
sbb
jge
cmc
sbb
and
mov
xor
cld
ins
or
mov
mov
add
pushf
das
inc
adc
and
(bad)
cmp
retf
cs
jbe
jle
push
dec
retf
xchg
dec
adc
mov
jl
lock
pop
add
mov
shr
xor
pop
fldenv
pop
mov
fnstsw
pop
fld
sub
add
xor
clc
jbe
bswap
mov
outs
out
add
iret
and
mov
lock
cmp
inc
loopne
sbb
clc
and
mov
pushf
sub
cmp
inc
out
aam
je
sub
add
outs
push
jbe
cmps
outs
mov
pop
(bad)
mov
cmp
pop
repnz
push
bound
mov
clc
scas
movs
jbe
pop
push
hlt
jge
mov
cmp
fild
in
push
fld
jl
loopne
mov
pop
int
inc
mov
daa
adc
xor
dec
cs
loopne
cmp
adc
or
sbb
rol
pop
mov
jp
int
xor
sbb
dec
clc
enter
loopne
sub
mov
jae
cs
jbe
ret
jnp
rol
jl
sub
leave
push
pushf
popf
fdiv
xlat
xchg
pop
or
gs
xor
xor
loopne
js
xor
push
aas
xchg
dec
lds
mov
fwait
dec
jae
jmp
pushf
outs
xor
jl
and
and
inc
cmp
(bad)
or
pop
xor
push
hlt
shl
pop
icebp
adc
adc
mov
cmp
(bad)
shl
dec
mov
push
out
cli
xchg
ror
pop
lock
sbb
ret
(bad)
and
sbb
jle
in
in
xor
jge
cmp
mov
int
inc
jg
add
mov
ins
inc
jmp
js
repz
arpl
fmul
cli
ins
lock
popf
shr
lahf
xchg
(bad)
and
fbstp
jmp
cld
ret
loopne
push
sti
sbb
pop
into
push
lods
shl
out
xchg
jnp
clc
mov
mov
(bad)
sub
in
inc
cmp
inc
sub
sbb
nop
aam
lods
inc
jbe
repz
add
jae
and
fild
dec
sbb
add
out
enter
cmc
sub
add
jmp
xchg
popf
repnz
bound
mov
fidiv
mov
jmp
lock
add
sub
(bad)
pop
sub
mov
inc
jmp
iret
push
sar
add
aaa
ret
mov
mov
lock
js
aad
inc
loopne
(bad)
lods
push
ror
retf
loopne
sbb
outs
stos
jg
clc
std
or
inc
jg
loopne
pop
clc
retf
adc
pop
sub
adc
cli
test
stos
test
outs
add
jmp
add
adc
mov
adc
or
(bad)
sub
bound
inc
scas
mov
scas
in
xchg
add
mov
lahf
in
cmp
lock
push
clc
xchg
add
in
jl
loopne
dec
inc
push
shr
mov
mov
mov
xor
outs
inc
into
pop
shr
lods
push
out
cli
test
adc
jle
jns
mov
cmp
push
fstp
enter
clc
add
inc
loopne
sbb
mov
inc
loopne
shr
lods
or
xor
aaa
xor
sbb
clc
mov
(bad)
adc
cld
add
sbb
xor
pop
sar
inc
aas
inc
inc
(bad)
je
and
pop
aad
inc
loopne
out
push
and
mov
xlat
arpl
(bad)
cmp
aaa
jb
push
and
jmp
jge
adc
mov
shr
inc
jb
mov
jp
popf
cwde
jp
mov
in
in
loope
push
sti
fwait
icebp
adc
adc
retf
neg
sti
jle
aas
push
ficomp
and
pop
push
shr
sti
cmps
loopne
xchg
ins
mov
jl
mov
and
add
js
jae
push
mov
inc
loopne
lock
repz
popf
pop
pusha
cmp
in
in
or
and
clc
lods
adc
aas
add
repz
retf
xchg
aas
cmp
leave
retf
outs
dec
jmp
test
into
dec
sbb
ja
add
call
or
pop
sub
iret
mov
std
add
(bad)
mov
fisub
jle
mov
add
mov
add
ja
shl
inc
call
int
pop
fisttp
clc
pop
push
cmp
cmps
mov
mov
in
in
cmps
sub
jmp
cmp
cld
int
push
clc
inc
cmp
stos
popf
or
cmps
push
shr
clc
xlat
add
fild
lock
clc
pop
mov
pop
push
js
dec
mov
dec
js
loopne
adc
or
in
adc
and
lock
mov
in
outs
inc
adc
add
arpl
inc
inc
retf
lods
jbe
xchg
jb
mov
sub
stos
sbb
mov
or
add
dec
push
or
xchg
cmp
cmps
cmp
adc
sar
pop
dec
clc
cmp
js
aad
dec
inc
inc
adc
lods
mov
jae
call
inc
loopne
mov
fisubr
sahf
aad
cmp
cmp
or
lahf
in
ret
jl
ins
data16
cmp
pusha
retf
addr16
cmp
add
aaa
add
movs
xchg
aaa
adc
jl
loopne
or
mov
inc
out
add
adc
popf
ins
out
push
shr
pop
fnstcw
ror
lock
push
jbe
std
int
add
out
movs
mov
popf
aad
inc
jg
shr
mov
dec
ins
inc
loopne
daa
pop
push
loopne
pushf
xchg
popf
outs
jg
ins
arpl
retf
add
dec
jbe
jb
adc
pop
add
jmp
shr
call
es
loopne
ins
cmps
inc
clc
or
xchg
cmp
sbb
adc
lock
ds
mov
mov
inc
out
mov
push
jbe
cmps
out
inc
loopne
push
pop
or
outs
inc
loopne
add
or
lock
or
jl
fimul
and
addr16
daa
sar
mov
pop
sbb
sbb
mov
jae
movs
je
mov
xor
cmp
loopne
and
mov
jmp
lock
mov
sar
lock
jmp
cmp
scas
xor
sar
xor
js
ret
lock
(bad)
mov
je
xor
ret
mov
jl
out
out
jnp
fld
lahf
test
mov
daa
jns
gs
xlat
ret
sti
dec
lock
pop
js
ret
jnp
fidiv
shr
xchg
xchg
adc
jae
call
adc
fild
out
pop
inc
out
rol
retf
jmp
(bad)
push
mov
call
mov
fidivr
mov
pop
mov
xchg
jl
and
or
and
jg
mov
retf
xchg
mov
mov
push
addr16
scas
sbb
xor
lock
inc
loopne
add
adc
iret
ret
out
fneni(8087
fnsave
add
cmps
xchg
mov
add
xchg
adc
neg
sti
popf
adc
and
jl
lods
outs
out
lock
cmp
push
or
loope
mov
inc
adc
pop
lock
add
loope
jno
jbe
inc
inc
aaa
fxch
cs
jmp
ss
lock
or
jmp
scas
fwait
xchg
popf
out
sub
hlt
sub
ds
inc
adc
pop
lock
rol
push
test
js
lock
cmp
cmp
push
adc
xchg
add
cmp
push
jle
mov
not
and
pop
mov
jle
push
cmps
clc
or
out
jl
test
cmp
gs
adc
sbb
mov
or
fild
cld
pop
add
data16
add
sbb
retf
or
and
call
(bad)
cmp
arpl
(bad)
push
add
mov
inc
fisttp
pop
push
cld
test
aad
fwait
popf
ror
clc
aaa
add
mov
outs
ss
xor
jl
mov
fild
das
aaa
jp
mov
pop
xchg
xor
push
shl
add
xchg
add
add
pop
cmp
jmp
add
fisttp
add
pop
test
cmp
add
xor
out
push
clc
inc
push
add
mov
cld
dec
add
push
sub
call
jb
ret
aas
inc
inc
fist
call
loopne
ffree
add
sbb
sbb
xor
lahf
mov
jg
loopne
add
pop
int
cmps
add
daa
push
shl
push
fidiv
clc
add
and
jnp
outs
push
clc
sub
jl
ficomp
mov
loope
sbb
sar
ja
(bad)
in
jbe
mov
mov
scas
in
xor
sbb
daa
je
push
mov
jge
out
fld
and
jmp
add
ret
sti
mov
jns
imul
in
xchg
mov
mov
sti
inc
into
xchg
popf
into
call
pop
push
jnp
in
leave
stc
inc
data16
sar
(bad)
lods
push
cmp
test
out
jo
in
je
push
xor
js
mov
imul
or
gs
push
fidivr
mov
loopne
push
rcl
loope
retf
lock
adc
push
add
ja
loope
adc
push
addr16
das
imul
leave
leave
mov
retf
inc
jbe
ret
sti
cdq
lock
fidiv
pop
test
xlat
pop
(bad)
push
ins
adc
fwait
int3
retf
sub
cmp
cli
and
and
sub
mov
loopne
js
jle
mov
(bad)
adc
adc
js
in
xchg
call
cld
add
ror
cmp
xchg
sub
out
pop
js
add
div
lock
mov
rcr
mov
outs
mov
js
loopne
sbb
mov
cmp
add
mov
xchg
mov
jmp
fild
lock
in
push
out
daa
add
jle
lahf
or
fwait
aas
add
outs
sbb
retf
add
inc
loope
test
mov
push
hlt
sbb
jns
adc
pop
add
(bad)
in
out
inc
loope
inc
loope
pop
clc
mov
lock
add
dec
add
stos
add
shr
sbb
imul
add
cmp
add
adc
sub
clc
sbb
xlat
fcomp
mov
invlpg
jb
mov
movs
dec
clc
outs
out
inc
xchg
lock
xlat
test
cmp
mov
push
add
add
inc
loopne
or
jae
aad
inc
add
adc
(bad)
jl
loopne
add
add
pop
xchg
sbb
bound
or
mov
cld
movs
add
mov
add
xlat
test
pop
mov
lock
imul
ror
jb
mov
or
stc
push
rol
dec
out
or
dec
jmp
add
add
(bad)
mov
loope
scas
sub
std
leave
and
mov
gs
loopne
sbb
mov
cld
xor
or
xor
pop
das
mov
mov
push
sub
mov
jl
cmp
pop
adc
push
hlt
out
add
lahf
add
jmp
loopne
push
mov
sbb
sar
add
in
dec
or
(bad)
fsub
out
inc
loopne
adc
stc
add
inc
ret
mov
push
shl
add
jne
push
sub
add
sar
push
arpl
gs
jne
sbb
std
lea
aas
mov
pop
lock
sar
mov
pop
loope
outs
hlt
mov
cmp
gs
jne
mov
lock
xchg
sbb
out
inc
sar
aas
or
pop
sar
loopne
jle
ds
ins
push
hlt
jb
lock
pushf
pop
dec
aaa
sbb
cmp
scas
sub
pop
das
out
sbb
dec
or
iret
pop
mov
jnp
lea
out
push
dec
mov
fwait
jbe
push
inc
mov
xchg
das
aad
cmp
js
push
sti
dec
cld
les
movups
sub
call
xchg
vunpcklpd
cmp
in
xchg
and
std
cmc
ss
or
call
ficomp
sbb
sub
fld
fisubr
ja
sar
ja
jnp
or
clc
iret
movs
lods
lods
mov
jl
sub
mov
push
jg
and
clc
mov
jae
cld
push
js
and
mov
lock
fisubr
neg
lahf
xchg
and
lahf
mov
sub
hlt
inc
pop
mov
dec
pop
fnsave
jbe
sub
jl
loopne
add
adc
sti
in
jmp
(bad)
fldenv
xor
mov
pop
inc
or
xchg
push
(bad)
sub
fwait
shr
add
inc
clc
push
xchg
add
inc
sub
pop
outs
pusha
inc
pop
inc
loope
sub
ja
mov
mov
neg
jl
loopne
add
add
cwde
mov
cmp
hlt
add
xor
add
sub
or
jns
stos
mov
lock
cdq
repz
call
add
inc
loopne
in
mov
add
stos
call
pop
rol
aad
or
fwait
add
xor
rcl
in
mov
mov
loopne
add
retf
clc
dec
add
scas
add
ja
jl
shl
ins
daa
ja
shr
clc
cmp
jle
loopne
or
not
add
shr
loopne
adc
hlt
mov
push
mov
add
aad
clc
and
retf
jle
jmp
call
sbb
jns
hlt
cdq
aam
jle
xor
push
hlt
mov
pop
mov
stc
fwait
rcr
aas
sar
mov
mov
lock
fsub
(bad)
in
cmp
jp
sar
mov
lahf
inc
loopne
inc
out
add
pop
inc
loopne
jmp
hlt
cmp
(bad)
enter
cmp
lahf
xor
cli
mov
or
aaa
pop
pop
scas
aas
mov
shr
out
mov
retf
fisubr
inc
loopne
in
stos
push
sbb
sar
lock
adc
or
mov
mov
adc
iret
add
lock
out
jno
mov
pop
lock
fs
inc
loopne
loop
fld
adc
sbb
xchg
or
jge
mov
adc
push
xor
(bad)
in
call
cmp
mov
sbb
mov
xchg
jmp
mov
and
sbb
fidivr
out
pop
cmp
push
test
cmp
inc
js
(bad)
test
js
pop
sahf
pushf
inc
jbe
in
xor
jbe
js
fimul
lock
xor
push
imul
xchg
lock
pushf
inc
js
scas
cmp
or
aaa
retf
and
gs
add
pop
add
std
lock
cmps
mov
loope
inc
js
cmp
in
lock
cmp
clc
add
jo
data16
and
cli
lea
aas
add
scas
xor
js
xor
pop
(bad)
or
fcom
int
or
cmp
fcmovne
jns
scas
push
ds
cmp
mov
pop
aad
fwait
ja
lods
lods
into
inc
loopne
mov
repnz
jb
rcl
sbb
pushf
loop
mov
add
rcr
(bad)
arpl
jmp
das
ss
out
cmp
or
popf
aad
aaa
ror
push
icebp
adc
add
ret
into
push
xor
push
sub
(bad)
dec
loope
ja
push
dec
nop
aam
in
fwait
add
inc
sbb
dec
push
clc
xor
fisttp
lock
(bad)
mov
ds
js
pop
clc
div
adc
cld
add
mov
(bad)
jno
iret
cmp
sub
imul
into
enter
push
add
adc
out
and
and
inc
fild
xchg
sbb
ffree
enter
mov
push
jg
cmp
scas
in
xchg
fidiv
in
push
add
dec
clc
and
pop
add
xchg
add
pop
or
and
jae
push
lock
jmp
neg
ret
fxch
stc
es
sub
mov
pop
mov
outs
mov
pop
(bad)
in
and
adc
pop
add
adc
cmp
outs
cmp
mov
(bad)
fwait
mov
or
pop
add
dec
xchg
aas
add
add
and
stos
std
adc
jg
rcl
(bad)
pop
int3
(bad)
(bad)
push
cmp
loopne
add
pop
adc
in
mov
lock
aaa
add
sbb
jp
call
push
int
push
out
or
xor
call
(bad)
in
or
xchg
sbb
add
(bad)
or
gs
cdq
mov
sbb
or
pop
push
clc
scas
and
dec
lock
add
loope
aaa
adc
push
(bad)
push
inc
data16
and
push
int3
jmp
hlt
or
clc
ja
xchg
ffree
lods
sbb
sar
pusha
jne
aaa
jp
aad
loope
mov
(bad)
lock
cmp
dec
lahf
mov
pop
inc
aaa
xor
jmp
sbb
sbb
pop
or
jnp
repnz
and
pop
jnp
stc
push
mov
ja
ficom
xlat
sbb
xlat
sbb
mov
jp
int
pop
pop
sar
pop
stos
iret
repnz
mov
pop
test
sub
aaa
cdq
sbb
ror
pop
ret
or
sub
out
test
or
dec
xchg
mov
cli
push
js
jmp
xchg
pop
repnz
out
dec
movs
dec
jl
jmp
lods
aam
dec
(bad)
cmp
sti
xchg
push
sahf
pushf
pxor
in
retf
loopne
dec
pusha
lods
push
loope
lock
call
sbb
das
sbb
das
(bad)
xor
mov
sbb
scas
xor
ret
mov
clc
stos
loopne
mul
daa
cmps
sbb
dec
mov
sub
clc
stos
push
clc
mov
clc
sub
sbb
jg
or
jmp
arpl
xor
cli
lahf
cmp
pop
and
cmc
add
mov
push
jbe
dec
nop
lods
add
aaa
popf
clc
mov
rcl
pop
loopne
add
scas
push
and
adc
jge
stos
sub
jnp
jle
loopne
jbe
hlt
mov
pop
frstor
jb
imul
div
loope
or
mov
pop
into
xchg
pop
add
sub
aas
iret
ds
add
and
iret
add
lock
inc
hlt
mov
gs
int
test
ins
or
fstp
jge
xor
adc
sub
(bad)
mov
or
mov
add
xor
fwait
adc
fild
clc
ror
jbe
jnp
cmp
sub
int3
fimul
pop
push
lock
pop
outs
hlt
rcr
hlt
jmp
pop
in
rcl
cdq
push
mov
cld
adc
(bad)
int3
call
lock
mov
jge
adc
push
rol
ss
cmp
sbb
dec
add
fstp
cmp
dec
inc
je
dec
mov
sahf
repz
sub
rcl
dec
add
daa
fs
cmp
cmp
retf
adc
gs
xor
add
nop
cld
sahf
adc
push
mov
pushf
adc
xlat
mov
sub
das
loopne
jbe
xlat
and
jg
push
add
ins
into
arpl
jle
sar
loopne
das
xchg
and
xchg
add
shr
mov
pop
inc
mov
fisub
jl
addr16
cmp
pop
or
pop
loope
js
stos
in
test
or
lahf
mov
fsubr
cld
push
js
sar
aas
add
fiadd
add
push
out
cmp
scas
movs
mov
sar
lock
(bad)
in
cmp
mov
cmp
popf
dec
fmul
lahf
xor
xchg
das
jne
repz
fstp
dec
test
out
movs
mov
rcl
xchg
ja
sti
push
js
inc
loopne
pop
test
clc
(bad)
sahf
xor
sub
stos
cmp
rol
imul
xchg
jne
sahf
(bad)
call
add
mov
retf
add
mov
inc
dec
aaa
and
outs
cmps
mov
loopne
pop
out
popf
or
test
hlt
cmp
mov
sbb
cld
dec
js
and
popf
or
jb
mov
ret
cdq
aad
fimul
sbb
jmp
jge
add
jle
(bad)
push
js
dec
inc
das
sub
xchg
dec
int3
test
lock
xor
mov
cs
lds
adc
das
and
mov
jge
or
addr16
retf
sub
dec
adc
add
sbb
out
je
arpl
loope
push
clc
xchg
data16
pop
sub
dec
inc
(bad)
enter
mov
add
pop
sub
inc
add
scas
mov
push
cs
lock
sub
inc
push
cld
sbb
dec
push
bound
sub
adc
push
lock
xchg
add
lea
jl
test
add
xchg
and
mov
fcmovne
scas
sahf
mov
shl
lock
sub
inc
add
outs
addr16
adc
addr16
push
aas
add
sbb
call
add
aaa
add
test
ins
jns
pop
add
push
mov
clc
cs
lock
pop
add
add
cs
xchg
mov
popf
add
inc
add
iret
add
jb
inc
xor
imul
xor
mov
outs
add
cmp
ja
mov
or
pop
jle
(bad)
bound
mov
fst
popf
mov
(bad)
in
repnz
hlt
cmp
std
push
hlt
pop
pop
mov
fwait
lods
mov
add
lahf
add
and
out
mov
lock
add
ret
jl
adc
xchg
mov
mov
in
or
std
jb
out
pop
clc
or
mov
addr16
adc
xor
lahf
or
jle
ror
or
and
xor
fisttp
lock
adc
or
ja
cld
jb
xlat
lahf
pop
daa
rol
inc
pop
fisttp
sub
lock
call
out
pop
mov
pop
sbb
test
scas
clc
mov
sbb
push
jbe
add
adc
sbb
push
sub
push
sub
pop
clc
aas
add
adc
cld
ins
fcmovne
jmp
outs
jb
in
fsubp
mov
in
sbb
jge
(bad)
in
je
sbb
lock
cli
stos
loope
and
fild
out
lods
lock
mov
leave
and
stos
ficom
push
sar
retf
xchg
pop
ins
push
mov
sahf
pop
or
pop
js
xchg
popf
xchg
inc
lock
ret
jnp
pop
pop
test
sbb
stos
lock
jmp
rol
push
sbb
sti
and
int3
lea
push
jp
dec
fsubr
aad
dec
mov
fsub
ficomp
sbb
aas
xchg
stos
call
push
(bad)
movs
into
call
lock
add
data16
pop
ret
das
into
dec
cmp
ins
cmps
push
out
and
push
ins
or
xlat
ret
jnp
fild
out
pop
lock
jnp
arpl
fisub
xlat
push
lods
pushf
outs
cmp
pop
jno
add
fsubp
and
dec
xor
adc
sbb
cld
add
movaps
cmc
or
add
mov
fcmove
add
sti
mov
mov
clc
or
xchg
adc
or
repz
je
js
in
cmp
pavgb
loopne
xchg
imul
ror
jmp
jecxz
neg
fwait
inc
loope
push
clc
pop
(bad)
adc
mov
cmps
sbb
jne
stos
(bad)
pop
pop
fnsave
in
test
data16
pop
add
dec
or
push
cs
fimul
stos
mov
arpl
cmp
cs
aaa
adc
jl
or
imul
and
add
pop
push
clc
adc
xchg
push
add
adc
scas
push
clc
sub
fistp
jl
loopne
daa
xor
push
mov
stos
add
or
cmp
dec
out
and
in
jmp
inc
pop
add
lods
cdq
push
pop
cdq
mov
push
inc
pop
add
sub
pop
adc
push
and
cli
sbb
sub
imul
jne
into
pop
adc
lar
in
into
xchg
pop
rcr
repnz
or
ins
push
aaa
push
add
fistp
mov
pop
add
adc
lock
movs
mov
sbb
lock
cmp
leave
add
pop
in
dec
mov
pop
sub
loope
dec
sub
xchg
repz
lock
mov
loopne
mov
rcr
pop
add
and
loopne
ja
push
push
aaa
xchg
mov
mov
clc
data16
dec
jb
scas
inc
mov
(bad)
sbb
out
add
push
cmp
mov
fmul
pop
or
or
jne
xchg
lock
and
xor
add
jo
call
jl
lock
imul
stos
sbb
in
add
fisttp
pusha
data16
dec
mov
adc
or
fst
or
mov
cld
aad
pop
movs
mov
lods
mov
out
pop
sub
and
sar
push
dec
sub
mov
add
sbb
mov
mov
fisub
(bad)
push
daa
pop
retf
adc
push
sub
mov
inc
hlt
jnp
mov
paddsb
js
sar
leave
and
mov
sahf
xchg
and
jl
sub
fidivr
fiadd
jns
stos
sub
mov
loope
js
aas
pop
fdivp
or
idiv
pop
test
add
mov
dec
aam
fmul
mov
out
jb
das
sar
call
test
retf
loope
and
clc
retf
loopne
push
jnp
dec
dec
(bad)
push
cmps
sar
int3
lea
dec
lods
lods
outs
xor
loope
push
mov
cli
mov
mov
stos
sub
mov
jge
mov
sar
into
and
sar
lock
xor
cmc
xor
out
or
xchg
sbb
and
jnp
jbe
add
das
adc
div
mov
loopne
add
inc
adc
jb
(bad)
jp
mov
mov
aam
loope
sub
mov
jl
test
clc
dec
add
add
clc
test
lock
sub
push
shr
xlat
mov
iret
add
scas
xchg
(bad)
cmp
add
push
shr
inc
loope
add
aaa
adc
lock
pop
or
fisttp
or
pop
and
push
pop
cmp
xor
aad
js
sub
jb
test
clc
enter
rcl
pop
lahf
lock
aaa
add
push
fcmovne
sbb
cmp
pop
adc
pushf
add
sar
jl
add
out
jne
jbe
std
int
je
movs
and
fld
mov
cmps
adc
jne
add
mov
pop
loopne
xor
imul
xchg
pop
or
cmp
inc
loopne
and
std
mov
inc
pusha
xor
mov
hlt
call
popf
mul
out
fisttp
arpl
retf
lea
jle
rol
retf
lea
xchg
jmp
and
pop
pop
out
add
mov
add
adc
aaa
add
push
jnp
cmp
lods
xchg
popf
cmp
mov
jmp
and
stos
call
jae
scas
jl
cmp
add
fisubr
add
cmp
lock
jne
cld
pop
cmp
loopne
sub
invlpg
pop
lock
ffreep
enter
lock
std
leave
dec
loopne
aaa
repz
add
jecxz
fld
popf
out
cmps
test
shl
xchg
lock
aas
mov
out
dec
div
mov
inc
jbe
ror
xchg
das
xchg
movs
mov
adc
int
fiadd
and
fisttp
mov
out
pop
in
mov
push
enter
div
adc
jg
sub
in
retf
hlt
xor
and
mov
xchg
ja
pushf
outs
je
lahf
js
jbe
lock
std
in
out
push
xor
addr16
ficom
sahf
push
jle
add
dec
cmp
adc
or
lahf
(bad)
int
or
fisttp
mov
mov
in
jmp
xchg
sub
or
cli
sbb
mov
stos
mov
inc
hlt
sub
jne
xchg
cmps
mov
ins
mov
or
dec
adc
aad
lock
(bad)
mov
jbe
inc
or
mov
mov
push
(bad)
push
jno
pop
or
shld
and
out
aam
mov
mul
clc
xchg
(bad)
mov
out
inc
loopne
ret
jnp
shr
adc
pop
scas
push
pop
lahf
lock
mov
sbb
or
cld
push
adc
pop
pop
cld
test
arpl
pop
sbb
daa
jl
loopne
cmps
lods
outs
adc
and
(bad)
push
cmc
sbb
fs
stos
push
adc
pop
retf
push
xor
inc
loope
mov
fs
push
arpl
or
das
and
enter
loope
push
js
dec
js
lahf
in
dec
loope
push
clc
dec
add
mov
fidiv
call
es
call
rcl
clc
jnp
cmp
add
ror
pushf
test
das
pop
clc
sbb
push
add
add
fisttp
imul
loopne
xor
sbb
(bad)
cmp
mov
jle
shr
jle
pop
dec
rol
dec
iret
cwde
rol
scas
add
into
aam
scas
or
cmp
or
mov
xchg
in
in
fwait
aad
add
gs
sbb
jg
cmp
shr
xchg
shl
lock
sbb
pushf
mov
mov
js
hlt
jnp
jle
shl
scas
in
je
scas
mov
lds
call
inc
shl
adc
rol
xchg
pop
or
pop
add
mov
fs
adc
stos
popf
inc
cmp
dec
les
lahf
add
into
pop
sbb
in
pop
xor
jne
adc
dec
sbb
add
int
loope
sbb
aaa
pop
pop
mov
cmp
scas
inc
js
sub
jnp
sbb
adc
jl
sar
add
out
es
sbb
fld
int3
retf
scas
or
and
retf
scas
adc
xor
aas
loop
leave
test
sahf
xor
mov
or
daa
pop
mov
sbb
jge
mov
mov
push
ret
mov
push
mov
mov
popf
mov
lods
lods
je
xchg
add
sub
xor
rol
out
sub
jmp
(bad)
xor
cmp
fild
xor
inc
mov
add
ficom
fbld
stos
(bad)
js
dec
ja
xor
loopne
xchg
pop
pop
lods
ss
jp
aad
ja
ret
cmp
loope
js
mov
or
pop
adc
cmp
aas
cdq
cmp
std
push
sti
xchg
cmp
xor
sar
loop
retf
inc
(bad)
jb
mov
cdq
add
cmps
adc
fisttp
cmps
dec
scas
in
hlt
sbb
push
ficom
cmp
mov
rcl
push
xchg
cmp
add
idiv
out
add
(bad)
mov
inc
add
scas
push
fimul
jle
push
rol
rcl
lahf
cld
int
add
mov
pop
add
dec
repnz
retf
add
mov
and
adc
pop
sbb
jmp
and
lahf
cmps
mov
leave
add
cmc
sbb
push
pop
stos
call
shl
mov
icebp
adc
mov
mov
jp
mov
jb
call
clc
icebp
sub
ins
stos
mov
pop
fnstcw
dec
push
clc
dec
add
ss
jno
add
adc
fxch
fisubr
inc
loopne
add
addr16
cmp
pop
or
out
jne
arpl
push
push
rol
mov
and
pop
outs
push
jbe
adc
sar
or
or
jae
fnstcw
sub
inc
or
cmp
fld
lock
mov
rol
mov
gs
inc
loopne
add
int
movs
or
pop
inc
scas
dec
clc
and
fbld
stos
adc
lock
lock
adc
inc
jbe
or
jl
shr
cdq
aad
jl
cmp
add
jnp
das
mov
jns
out
mov
rol
lock
jmp
(bad)
loopne
adc
outs
inc
lahf
cmps
mov
fs
adc
pop
mov
mov
sahf
xchg
dec
or
or
aam
pop
(bad)
sub
mov
push
pop
ret
es
dec
xchg
dec
lock
jg
dec
loopne
ret
mov
repz
nop
mov
pxor
mov
js
in
je
cmps
(bad)
fsubr
sar
je
jne
scas
(bad)
jl
jecxz
mov
xor
fld
inc
loopne
and
dec
mov
in
imul
xor
aas
or
xchg
ret
mov
pop
add
and
mov
mov
(bad)
mov
pop
lods
test
sar
sbb
stc
mov
sub
out
sub
and
fldenv
mov
add
mov
aaa
push
shr
call
lock
out
repz
jg
and
icebp
cs
sbb
dec
inc
fild
out
sub
hlt
stos
push
out
xor
lahf
test
pop
jns
scas
inc
clc
and
fisttp
call
shr
pop
adc
in
ins
inc
out
mov
add
(bad)
es
pop
jbe
ret
loopne
add
rol
movs
lock
fild
das
pop
clc
sbb
push
pop
inc
das
ja
or
arpl
mov
clc
dec
sub
mov
pop
inc
or
dec
push
clc
sub
fild
mov
cli
xchg
add
add
jg
xchg
das
push
pusha
fs
loopne
lock
xlat
add
push
out
cs
mov
mov
fld
scas
inc
cmp
xor
movs
test
push
jle
sub
sbb
jmp
inc
sbb
aas
ror
pop
clc
leave
or
outs
add
jne
mov
clc
inc
cmp
lock
sub
add
imul
(bad)
lock
lock
gs
fxch
cs
jbe
sbb
mov
adc
fild
mov
fisttp
lock
add
fisttp
lock
sub
mov
sbb
or
mov
add
mov
jl
int3
sub
jl
jg
mov
mov
fucomp
xor
js
inc
sub
sbb
jns
in
add
sub
inc
loopne
das
mov
loopne
daa
inc
jb
loopne
pop
js
jbe
pop
ret
mov
ds
loopne
rcr
xchg
stos
call
jmp
dec
xor
retf
cmps
or
aaa
add
popf
pop
lds
add
mov
ds
mov
inc
clc
gs
cmp
or
cmp
in
inc
add
add
or
pop
sub
jmp
sahf
jne
call
arpl
dec
pop
ret
hlt
adc
inc
mov
fidiv
fisubr
test
outs
jae
mov
inc
clc
xchg
lock
cmp
mov
dec
aaa
add
ja
jb
lahf
cwde
or
xchg
adc
push
inc
loopne
push
sub
fs
xor
daa
and
add
pop
inc
loopne
(bad)
addr16
push
xlat
ret
js
mov
popf
pushf
das
push
mov
adc
add
xchg
rcr
mov
stos
lods
sar
(bad)
stc
and
in
loopne
sar
std
push
or
cmc
adc
mov
jmp
inc
scas
(bad)
pop
pop
aad
sbb
popf
adc
sbb
add
or
test
mov
cmps
sbb
popf
cmp
or
mov
jae
sub
mov
lahf
push
out
retf
int
jp
icebp
sahf
adc
sahf
repnz
scas
and
jns
out
push
clc
pop
fst
dec
clc
ror
pop
ret
fild
dec
inc
fisttp
or
jge
cmps
(bad)
aad
leave
xchg
lock
xchg
test
cs
clc
in
sbb
aaa
mov
mov
lock
das
ja
pop
addr16
add
pop
inc
loope
sbb
repz
jns
adc
mov
mov
sub
jl
inc
jbe
xchg
fst
add
loope
add
loope
add
mov
xchg
popf
sub
jl
push
aaa
sub
ds
outs
fdivr
ss
fwait
cmp
adc
scas
popf
pushf
(bad)
data16
cli
enter
push
jle
popf
fsubr
into
daa
jl
sub
lods
or
mov
stos
add
xchg
das
movs
xor
adc
out
jmp
ficom
or
pop
addr16
add
retf
add
loopne
add
cmp
(bad)
fsub
mov
cdq
sub
ds
lods
mov
pop
add
sub
jmp
cmc
aaa
and
imul
popf
aad
add
in
or
mov
mov
loopne
xchg
xor
sbb
stos
sar
inc
sbb
lods
dec
(bad)
in
mov
lahf
xor
addr16
ja
mov
aam
dec
ficom
ficom
sub
jge
xchg
sub
lahf
mov
pop
repnz
and
push
ins
daa
cmps
test
fst
js
ret
cld
aad
pop
test
sbb
aaa
and
pop
adc
sub
xchg
loopne
xchg
pop
mov
psraw
push
das
ret
fisubr
sub
call
ins
inc
pop
call
adc
mov
hlt
sbb
pop
imul
(bad)
adc
and
inc
shr
ins
push
das
imul
mov
out
jns
xlat
sbb
iret
xchg
mov
mov
cmp
data16
add
push
cld
test
lock
lock
fmul
in
in
mov
jnp
mov
ror
repz
test
pop
mov
loopne
bsf
pop
xchg
lock
sub
cmp
int
pop
test
int
xor
pushf
rcr
dec
loopne
(bad)
shl
aaa
push
js
inc
retf
sub
pop
inc
jbe
test
ror
ins
movs
xchg
popf
add
add
jg
jae
sbb
mov
movs
dec
call
repz
jb
pop
add
pop
dec
pop
pop
imul
mov
cld
push
sub
or
cli
or
mov
or
sub
jg
add
add
cdq
sub
pop
sub
shl
cmp
sbb
or
call
xor
mov
mov
jl
shl
xchg
mov
movs
push
shl
jg
pop
retf
enter
mov
xor
push
clc
mov
cld
std
mov
jmp
jle
or
addr16
aaa
int
jne
mov
sub
dec
xor
in
or
cld
push
cmp
clc
sbb
call
stc
fwait
or
pop
push
aaa
sub
(bad)
and
jbe
in
ror
adc
add
out
mov
ficomp
add
scas
outs
inc
sbb
jbe
add
clc
add
outs
add
or
sub
sbb
mov
sub
add
mov
into
push
sub
ficom
loopne
add
inc
cmp
std
into
daa
mov
iret
add
fs
xchg
mov
clc
in
mov
or
pop
add
cs
rcl
mov
clc
and
aaa
add
inc
sub
aas
push
ror
cmc
mov
mov
push
sbb
shl
ds
jnp
jle
shr
sub
cmp
jbe
scas
mov
sub
mov
and
aas
xchg
pop
pushf
clc
mov
loopne
adc
adc
fild
fild
xor
add
shr
cs
and
add
lods
add
clc
or
aas
pop
cmp
lods
scas
in
call
add
or
add
xchg
mov
add
mov
repnz
push
shr
aaa
cmp
rol
imul
js
push
xchg
test
or
movs
lock
fwait
mov
pop
out
add
add
sahf
pop
add
xor
cmp
scas
in
fs
(bad)
mov
cmp
idiv
jb
js
ins
and
leave
test
sahf
xor
mov
and
mov
aam
std
add
adc
xor
jle
sbb
jmp
xor
fld
sar
mov
outs
mov
jle
jmp
pop
cmp
mov
outs
hlt
push
rol
pop
into
push
pop
push
jbe
jnp
dec
lods
in
in
fldcw
mov
mov
inc
jb
and
std
leave
imul
and
idiv
jno
mov
fisubr
aaa
jb
push
cli
inc
rol
xadd
jl
xlat
and
stos
stos
fcmovb
fld
ja
pop
jbe
sahf
xchg
lock
sub
pop
cmps
xchg
lock
jne
movs
fadd
(bad)
sbb
sbb
lods
push
xor
sbb
out
mov
jp
push
xchg
mov
aad
push
arpl
xchg
lock
mov
sub
(bad)
retf
popf
cmp
call
lock
nop
mov
jnp
jl
mov
fwait
mov
xor
in
adc
clc
data16
add
aaa
mov
dec
adc
add
and
cli
(bad)
lock
pop
ins
add
lock
add
pop
loopne
inc
out
cmp
cli
test
outs
hlt
mov
test
sub
outs
and
sub
mov
jmp
loopne
addr16
xlat
mov
lahf
add
lods
mov
mov
adc
add
mov
adc
add
imul
add
mov
test
shl
cli
add
cmp
push
aaa
call
or
lock
sbb
loopne
ins
aad
data16
and
cmp
test
xor
loopne
pop
ret
pop
mov
leave
and
aas
add
fmul
dec
shl
mov
lods
add
and
inc
pop
pop
scas
(bad)
fmul
loopne
adc
stc
or
int
out
cmp
mov
lock
lock
jns
jle
shr
pop
cmps
fsubr
imul
(bad)
lock
das
push
ror
inc
mov
into
adc
inc
loopne
push
hlt
cmp
popf
pop
inc
aaa
and
pop
inc
loopne
dec
mov
repnz
and
dec
data16
cmp
adc
lock
jmp
adc
cmp
inc
loopne
sbb
mov
cmp
sbb
jmp
das
ret
sub
or
ror
push
sbb
jle
sbb
(bad)
jmp
or
neg
loopne
dec
or
sub
jp
in
bound
sub
pop
icebp
adc
fld
pop
inc
loopne
push
arpl
cmps
mov
push
or
rcr
inc
fmul
in
and
loopne
jl
mov
into
pop
int
jl
adc
add
stos
mov
xor
popf
xchg
pop
mov
outs
test
sub
xlat
dec
xor
int
sbb
mov
sbb
pop
outs
addr16
cli
mov
sbb
add
fild
fld
out
xchg
in
hlt
daa
daa
imul
dec
or
pop
movs
sbb
pop
sub
clc
and
aas
add
loope
pop
pop
mov
sbb
pop
add
clc
mov
clc
aas
add
dec
add
fs
fs
jge
std
int
out
cmps
inc
mov
(bad)
daa
ja
cli
fwait
leave
add
aad
hlt
sbb
sub
jg
and
jge
retf
mov
sub
ds
js
retf
clc
in
aas
mov
loopne
jne
(bad)
dec
call
cmp
fst
arpl
mov
outs
sbb
fst
movs
int
xchg
mov
fild
fidiv
outs
hlt
aaa
mov
and
jns
adc
aaa
and
fild
mov
xchg
sub
lock
add
clc
and
jb
pop
sub
(bad)
fwait
jmp
clc
in
jl
shr
jmp
mov
or
retf
popf
mov
mov
xor
aad
inc
mov
xchg
cmp
js
push
ficom
jge
loopne
ins
inc
pop
and
sbb
das
inc
loopne
inc
loopne
push
clc
leave
or
mov
xor
or
adc
outs
pop
js
into
call
rol
fs
lock
or
cmp
in
add
aaa
push
lock
push
shr
out
test
aaa
mov
mov
pop
test
leave
sub
js
mov
loope
jne
xchg
(bad)
xchg
pop
in
xor
jle
mov
popf
cmp
xor
or
int
gs
cmp
dec
push
clc
sub
fild
mov
in
ins
in
dec
or
arpl
jp
dec
leave
lea
fxch
dec
loopne
lock
sub
cmp
jns
in
clc
enter
mov
dec
dec
pop
jbe
dec
scas
or
fbstp
and
push
cmp
adc
ins
js
ficom
ja
data16
data16
jle
add
mov
loopne
push
out
and
daa
out
lock
mov
sbb
push
js
add
sbb
aas
bound
cmp
adc
mov
mov
or
clc
sbb
add
sbb
mov
or
scas
popf
fcom
iret
fcom
lea
mov
and
sti
pop
sti
xchg
imul
or
or
cli
es
es
stc
mov
cmp
(bad)
sti
adc
xlat
mov
inc
pop
mov
mov
push
pop
jg
sbb
clc
jle
jmp
js
add
jne
out
lahf
pop
add
adc
adc
pop
ficom
jle
mov
xchg
jnp
mov
sub
sti
addr16
fcomi
jle
mov
fidivr
ficomp
shr
jge
loopne
loopne
ret
(bad)
bound
into
call
cmp
leave
push
dec
out
jae
push
aaa
cli
fwait
pop
dec
inc
call
pop
retf
pop
push
clc
cmp
fisttp
lock
jle
adc
and
sub
icebp
adc
shl
jbe
push
shr
clc
cmp
das
add
outs
and
rcr
lock
js
loope
push
clc
enter
(bad)
push
scas
les
int
mov
shr
call
mov
add
dec
add
jg
clc
sub
lds
pop
inc
loope
add
xchg
push
clc
daa
push
clc
jmp
js
retf
jge
mov
sbb
jge
mov
sub
lock
sub
mov
inc
cmp
and
std
int
xchg
ja
sbb
fsubr
add
data16
inc
mov
test
arpl
jns
cdq
push
push
(bad)
shr
clc
stc
mov
jmp
xchg
dec
add
dec
add
or
fucomip
add
bound
(bad)
xchg
pop
(bad)
xchg
lock
fisttp
lock
shl
jg
mul
clc
mov
imul
shr
cmps
mov
cs
lock
mov
or
in
xchg
pushf
aas
mov
loopne
dec
popf
rol
add
clc
sti
sbb
ficom
sub
cli
shr
jp
pop
pop
pop
lock
mul
pop
cdq
repz
sbb
imul
inc
pop
add
or
or
mov
(bad)
jl
je
xchg
cmp
add
fistp
lea
(bad)
popa
addr16
scas
popf
pushf
adc
add
add
cmp
sbb
xchg
add
scas
add
sti
out
std
lods
xchg
cmp
cmp
sbb
in
dec
(bad)
in
scas
mov
cdq
mov
sti
jnp
iret
sar
xlat
test
ja
or
and
jge
cmp
lds
sbb
mov
adc
or
mov
and
(bad)
jmp
int
or
push
add
mov
leave
jne
jnp
repnz
push
hlt
mov
jbe
mov
mov
daa
pop
and
xor
call
cmp
mov
lock
xor
daa
ja
repz
addr16
jmp
jge
jne
adc
sti
push
add
mov
js
xor
in
loopne
or
jge
sahf
cmp
mov
es
jmp
adc
mov
stos
ss
sbb
sbb
ins
inc
or
(bad)
sbb
cli
xchg
push
inc
fisttp
out
jae
cmp
das
and
xor
mov
pop
or
jnp
clc
push
add
mov
pop
aas
push
lock
clc
add
jbe
lahf
inc
loopne
jnp
fisubr
inc
ret
cmps
sbb
leave
xchg
adc
f2xm1
push
sbb
imul
push
jbe
scas
push
inc
mov
jp
ret
and
adc
jl
jge
sbb
mov
mov
test
loopne
add
lock
push
rol
push
hlt
xor
pop
pop
pop
test
mov
add
sub
mov
fdiv
adc
sbb
and
lahf
or
cmp
das
cmp
jne
sub
inc
inc
(bad)
add
ja
dec
or
call
jg
adc
add
sub
cmps
(bad)
xchg
popf
sub
loope
add
jge
ja
ds
jl
mov
mov
fwait
add
push
test
pop
add
outs
into
pop
add
pop
add
adc
daa
out
es
lock
arpl
call
xchg
clc
enter
sbb
clc
es
clc
cmp
fild
mov
mov
add
cmp
mov
push
in
cmp
and
pop
(bad)
jle
mov
popf
jbe
adc
push
sub
add
scas
pop
clc
sub
dec
dec
inc
aaa
popf
neg
mov
scas
push
mov
push
aaa
fisttp
cld
mov
add
xchg
test
aaa
pop
(bad)
in
sbb
jle
ror
int
in
and
clc
test
fisttp
adc
pop
or
rol
jle
popf
aad
mov
mov
add
jns
out
add
int
mov
cld
scas
aam
dec
pop
jbe
fstp
mov
or
xlat
gs
mov
add
clc
sbb
mov
hlt
adc
ja
sbb
inc
cmp
stos
cmp
daa
(bad)
mov
mov
mov
retf
clc
in
inc
pop
add
pop
test
pop
pop
scas
dec
mov
adc
ja
aad
xchg
test
fwait
in
retf
push
aaa
jecxz
fisttp
mov
cmp
fimul
hlt
jb
into
cmp
imul
daa
add
es
mov
push
sub
push
out
cmp
dec
dec
push
mov
in
in
loopne
loop
and
adc
jle
mov
xor
fisub
lock
test
out
jo
data16
mov
cmc
or
jnp
clc
leave
lock
inc
loopne
mov
pop
adc
push
loope
dec
js
push
ror
sti
jp
lahf
add
jno
dec
cs
inc
hlt
sbb
dec
dec
(bad)
lock
es
pop
add
or
jle
pop
fnstcw
jl
shl
lock
sar
mov
lock
ss
mov
ret
ret
jnp
(bad)
or
inc
ret
push
sbb
ret
sti
not
enter
cmp
xchg
mov
and
mov
clc
push
js
mov
dec
ss
retf
out
retf
and
shl
or
retf
adc
sbb
push
ret
jnp
data16
test
push
xchg
cmp
and
push
popf
lock
fisub
ret
jnp
sub
rol
xchg
loope
push
lock
(bad)
jp
cmp
addr16
pop
or
(bad)
lods
outs
hlt
or
ret
enter
out
cmps
mov
add
out
sub
pop
cmp
mov
iret
pop
clc
leave
add
clc
fwait
push
or
xchg
mov
(bad)
pushw
jg
popf
aad
jmp
aas
sbb
xlat
xchg
add
lock
mov
fild
mov
lock
jg
mov
out
bound
or
aaa
and
mov
stos
loop
loope
add
fstp
cmp
test
lahf
jae
mov
fucomip
and
xchg
fbld
mov
push
jnp
push
cmp
loopne
add
xor
mov
inc
loopne
and
add
mov
lock
jbe
pushf
clc
or
or
adc
or
test
mov
xchg
add
jg
fcmove
jge
xor
xchg
sbb
pop
add
pushf
push
arpl
add
push
out
hlt
xchg
adc
inc
add
lahf
and
and
push
or
imul
add
jmp
cld
adc
pop
imul
dec
mov
jl
movs
dec
inc
scas
aas
mov
inc
loopne
shr
fxch
dec
pop
jbe
push
push
jbe
sbb
(bad)
cmps
data16
adc
retf
sar
rcl
and
mov
cdq
out
les
inc
repnz
inc
mov
in
popf
xor
fnsave
jl
loopne
lock
sbb
iret
push
rcl
jge
sbb
add
mov
mov
sbb
pop
sar
mov
ret
jnp
ficomp
loopne
cmps
mov
or
lock
loope
jno
inc
mov
je
cmps
mov
ret
add
lea
xchg
sbb
imul
xor
aam
add
mov
xlat
popf
mov
push
ror
loopne
test
mov
inc
pop
xchg
jle
out
xor
ficom
lahf
cmps
mov
adc
cmp
das
mov
js
(bad)
dec
dec
data16
lock
mov
xor
push
inc
hlt
or
jle
mov
xlat
arpl
call
pxor
adc
mov
cmp
fs
mov
mov
div
js
sbb
sti
loope
pxor
loopne
or
jne
mov
jbe
loope
or
das
imul
dec
outs
xor
neg
js
xor
or
push
add
fs
jns
mov
leave
gs
mov
cld
popf
lock
test
movs
mov
cmps
repnz
or
mov
loopne
test
mov
enter
pushf
in
call
rcr
xlat
daa
jl
loopne
sub
int3
sub
xor
cmp
pop
mov
clc
mov
cmps
lahf
mov
or
or
in
retf
jne
scas
cmp
fisttp
movs
add
xchg
pop
push
loopne
jbe
daa
das
mov
add
shl
pop
ins
push
test
mov
cmc
or
fbld
mov
call
inc
mov
(bad)
jae
pop
lods
inc
jbe
mov
pop
ins
(bad)
add
jns
in
pop
push
jbe
add
add
jg
rcl
call
shr
stos
out
mov
fcmove
leave
lods
ss
gs
mov
aas
shl
lock
aad
xor
mov
or
(bad)
jge
fild
lock
jl
loopne
dec
mov
add
push
sti
fwait
pop
or
out
pop
ins
push
loopne
jbe
fwait
sub
mov
lock
retf
add
shr
xor
(bad)
and
or
add
mov
loope
in
in
add
add
inc
inc
jmp
cs
lock
lahf
add
or
retf
dec
add
gs
mov
fwait
jle
out
add
ss
bound
cmp
lock
add
shl
jle
rcl
test
dec
adc
adc
jmp
dec
stc
push
cli
test
push
inc
hlt
stc
or
push
cmp
sub
sub
push
hlt
jp
push
inc
mov
hlt
inc
repz
or
retf
sub
out
mov
add
cmp
sub
push
hlt
pop
mov
xor
fwait
push
add
adc
aas
popf
mov
loopne
add
iret
push
shl
jle
shl
jb
add
cmp
xchg
mov
shl
loopne
add
add
xchg
adc
pop
mov
rcr
int3
and
xchg
mov
xor
pop
xor
std
leave
std
enter
sar
mov
pop
ret
out
sub
xchg
loopne
sbb
in
test
mov
push
mov
add
jb
cli
dec
js
ret
test
retf
retf
outs
mov
push
gs
adc
push
mov
mov
outs
xchg
shl
ret
jnp
ficom
jno
add
mov
xor
in
test
adc
(bad)
test
add
call
xchg
sbb
ja
and
aas
jae
movs
and
push
js
or
jge
mov
sahf
pop
cdq
popf
fdiv
mov
test
out
clc
sub
push
mov
mov
jb
cmp
add
jae
es
dec
mov
mov
adc
(bad)
pop
cmp
dec
adc
jae
clc
inc
lock
xor
jnp
imul
jge
mov
mov
or
jne
scas
cmp
adc
pop
lock
in
loopne
lock
dec
or
pop
loope
add
cmp
push
mov
lock
mov
clc
jbe
fild
dec
mov
pop
add
sub
jle
push
sar
mov
sbb
das
add
and
jmp
mov
sar
dec
inc
hlt
bound
or
lahf
push
lock
mov
sub
out
push
clc
movs
add
ret
xchg
jb
shr
cmps
aad
lock
add
add
mov
gs
mov
pop
rcl
add
jmp
jle
shl
mov
push
jmp
cmp
bound
add
and
dec
loope
add
push
scas
fst
fnsave
scas
mov
clc
cmp
call
in
sbb
retf
cs
out
push
sub
pop
adc
pop
lds
add
jmp
jle
shr
popf
pushf
into
push
sbb
add
shl
aaa
repz
outs
inc
icebp
adc
add
outs
sbb
sub
sub
aas
rol
loopne
ins
jg
jb
push
or
pop
loopne
add
cmps
xchg
mov
push
clc
repz
les
push
pop
add
stos
in
xor
add
adc
cmps
or
in
jbe
push
pop
cmp
sub
mov
pushf
int3
sub
scas
sub
cld
xor
dec
in
add
addr16
and
jl
rcr
push
mov
push
ror
jmp
fisttp
pop
inc
loopne
push
cmp
lock
adc
jge
jns
push
in
xor
mov
jl
pushf
das
adc
jecxz
fsubr
(bad)
cld
jl
jg
add
call
add
mov
sub
adc
(bad)
jp
mov
fidiv
loopne
add
or
cmp
ret
js
dec
loopne
lock
jnp
add
aaa
das
mov
jge
mov
call
int3
in
mov
sti
sti
loope
add
add
fwait
loope
pop
ficom
das
test
push
js
and
dec
push
rcr
out
out
xor
lock
inc
loopne
js
ret
sti
addr16
das
fcmovnbe
int
js
push
shl
clc
cs
cdq
ror
div
mov
stc
inc
jns
jne
pop
clc
jp
lods
lods
cli
test
test
sahf
xchg
mov
xchg
repz
push
out
std
lock
out
(bad)
jle
mov
int
cmps
or
jne
loopne
push
fisttp
out
cmp
das
inc
loopne
inc
lahf
mov
clc
sbb
jge
add
mov
and
cmp
daa
sar
mov
mov
push
(bad)
jnp
mov
imul
mov
movs
sub
xor
das
inc
loopne
loope
pop
das
xor
add
mov
jmp
mov
jno
in
push
sub
or
pop
mov
std
and
cli
cs
xor
jecxz
xor
addr16
enter
xchg
lock
pop
add
gs
or
aas
adc
stos
lock
mov
add
adc
aas
call
out
xor
cmp
pop
in
mov
cld
or
jg
rcl
clc
adc
mov
dec
add
or
outs
xor
fst
push
clc
mov
cld
xor
mov
mov
les
call
ret
loope
mov
jne
mov
out
pop
ficom
mov
add
pop
mov
and
adc
aaa
stos
call
mov
inc
loope
inc
loope
add
(bad)
das
inc
loope
sbb
or
iret
cmp
(bad)
dec
loope
add
inc
inc
pop
mov
(bad)
hlt
push
or
fistp
xlat
(bad)
rol
xlat
popf
xchg
popf
lods
outs
aam
out
mov
(bad)
dec
loopne
pop
fld
lds
mov
mov
loop
cli
add
retf
jb
mov
leave
fwait
shr
mov
loopne
add
iret
inc
loopne
add
stc
add
jns
dec
into
push
add
jl
cmp
clc
sub
lahf
push
lock
sub
mov
loopne
add
(bad)
cmps
mov
push
add
add
rcr
cmps
add
or
mov
mov
lock
daa
jl
sub
jle
out
add
cmp
pop
ja
push
inc
fisttp
lock
add
mov
mov
xchg
push
mov
add
add
fisttp
mov
push
cld
stc
or
push
jae
enter
sub
clc
adc
jmp
ss
inc
out
ds
dec
add
rcl
dec
add
or
cmps
add
lahf
(bad)
lods
jbe
sub
cli
cs
js
(bad)
retf
(bad)
mov
mov
add
push
adc
rol
jle
loopne
adc
cmp
xlat
add
(bad)
sbb
dec
add
call
xlat
arpl
mov
cmp
loopne
movs
repnz
dec
xchg
pop
mov
cmp
fcmove
jmp
js
ret
inc
mov
mov
mov
std
leave
leave
mov
or
ds
mov
cmp
xor
out
xor
outs
or
jl
add
xchg
pop
bound
jg
sbb
sub
pop
adc
loope
dec
add
inc
aaa
jp
sub
lods
in
xlat
or
stos
call
out
stos
loopne
mov
pop
add
stos
lock
xchg
adc
xchg
pop
add
neg
xchg
pop
adc
cmc
sbb
jns
pand
dec
popf
add
and
out
mov
iret
push
add
idiv
mov
jge
mov
out
pop
or
scas
and
fist
ror
pop
xchg
lock
xchg
lock
mov
dec
neg
fwait
xchg
ds
ret
sti
adc
(bad)
pop
or
dec
adc
jae
jge
mov
adc
or
pop
mov
lahf
add
inc
sbb
dec
loopne
lock
ja
hlt
adc
pop
xchg
ds
(bad)
bound
ret
push
mov
lock
xor
cli
dec
js
cli
inc
cmp
sbb
shl
(bad)
jge
add
fiadd
js
loopne
add
fldcw
js
call
mov
add
rcl
mov
jl
pop
js
test
jge
push
hlt
in
add
jmp
cmp
movs
add
shr
cmps
mov
jno
call
mov
sbb
inc
sbb
fnstenv
imul
mov
loopne
add
fucomi
adc
hlt
mov
xlat
daa
cld
and
sub
jl
and
cs
sub
mov
in
add
add
or
jbe
push
cld
test
cli
imul
dec
add
add
adc
lock
cmp
lds
inc
loopne
adc
aad
add
(bad)
mov
jg
sar
push
hlt
mov
pop
ins
and
clc
(bad)
daa
mov
lock
es
call
stos
pop
add
mov
mov
or
fwait
cmp
or
jl
loopne
in
cld
leave
jmp
mov
mov
fldcw
aam
movs
pushf
das
scas
add
push
dec
or
xor
jle
or
mov
test
jl
jne
mov
xchg
xchg
pop
mov
pop
xchg
sti
test
add
imul
push
cmp
add
xor
mov
shl
cld
mov
mov
cmp
cmp
jmp
scas
add
push
cmp
aaa
push
add
add
(bad)
lock
xchg
popf
fsubr
mov
out
je
in
xchg
popf
pop
repnz
xlat
out
in
adc
mov
mov
clc
pop
add
cmps
mov
xchg
lock
in
in
push
ror
jbe
lods
out
jl
or
sahf
add
add
jo
xor
pop
test
in
lock
sbb
add
out
pop
(bad)
push
adc
(bad)
fisubr
fisttp
out
mov
xchg
fisttp
jb
jle
mov
pxor
cdq
lock
pop
js
add
aas
add
dec
lock
stos
not
or
dec
lock
mov
mov
ds
cmps
sar
lock
inc
loopne
or
xchg
dec
loopne
ret
sti
cmp
xor
jne
test
mov
clc
or
outs
xor
sbb
pop
fidivr
pop
add
lods
lock
mov
call
pop
fidivr
std
adc
jle
add
neg
adc
dec
test
aaa
sbb
cmp
xor
fimul
push
pop
outs
hlt
jns
das
sbb
jne
adc
sti
lds
jl
mov
mov
lahf
sbb
cmc
(bad)
cld
xor
ret
jnp
mov
aas
add
out
and
scas
in
mov
mov
pushf
outs
push
cdq
repz
pop
mov
das
xchg
movs
lock
xor
add
and
jb
sub
cli
fwait
je
sbb
std
xor
add
dec
loope
jno
lock
push
retf
xchg
mov
jg
int
jae
fbld
clc
adc
(bad)
push
sbb
sub
outs
mov
loope
mov
pop
retf
lahf
push
lock
add
hlt
push
rcl
clc
mov
cld
xor
mov
mov
and
jne
mov
movs
cmps
lock
(bad)
enter
jp
in
je
mov
test
mov
mov
mov
ret
ds
dec
mov
sbb
mov
add
rcr
dec
xor
sub
add
add
push
mov
jp
test
(bad)
push
jl
pop
fldl2t
xor
jl
loopne
into
arpl
mov
clc
cmp
int3
xor
mov
push
scas
pop
loopne
add
hlt
mov
outs
add
pop
push
lock
lock
inc
das
stos
fwait
cmp
jmp
or
fcmovne
jge
sbb
cld
add
pop
add
dec
adc
push
sbb
pop
in
outs
cmps
pop
loopne
add
mov
jg
or
sub
add
pop
pusha
add
and
jns
loopne
adc
(bad)
popf
mov
(bad)
bound
add
adc
cld
adc
leave
sub
aaa
push
aaa
loopne
add
add
adc
shl
adc
in
and
add
shl
push
mov
clc
ds
shl
ds
cmp
push
int
outs
sub
das
add
xor
jg
loopne
add
gs
fld
lock
jl
int
cmc
aaa
rol
mov
cmp
enter
loopne
add
shr
adc
jmp
pop
pop
clc
cmp
jge
loopne
add
push
popf
xchg
popf
(bad)
in
mov
imul
mov
fabs
pop
fst
std
fs
mov
daa
push
loope
jo
lods
inc
js
mov
inc
aaa
aas
dec
push
hlt
xor
mov
movs
scas
xor
dec
sahf
pop
add
xchg
daa
xchg
pop
fnsave
jnp
fsubrp
xor
lods
or
mov
loope
sar
clc
pop
ret
mov
popf
shr
sub
hlt
add
jns
das
ret
jecxz
push
test
push
into
dec
scas
add
push
js
add
jge
mov
mov
js
and
jp
xchg
sbb
dec
sub
jge
rcl
std
popa
add
xchg
lahf
and
mov
cmp
xchg
rcl
cs
lods
mov
out
gs
pop
mov
test
out
daa
mov
mov
pop
or
push
add
outs
out
cmps
pusha
(bad)
mov
(bad)
shl
arpl
sti
adc
xor
test
inc
lock
mov
pop
adc
add
ins
push
sbb
rol
fst
sbb
add
loopne
ret
fisub
ret
sub
aad
loope
shl
movs
(bad)
jge
mov
lock
inc
mov
test
(bad)
mov
mov
sub
ins
sub
push
lock
lods
push
push
aaa
jge
jl
pop
js
test
push
mov
in
add
int
lods
fs
mov
lock
test
xchg
sub
lock
pop
lods
mov
out
xor
mov
ret
(bad)
mov
popf
scas
outs
jbe
jl
loopne
ins
inc
fild
aaa
mov
sbb
jbe
push
jae
pop
or
mov
pop
ficom
clc
jbe
fwait
ror
push
aaa
in
es
div
mov
mov
cld
push
adc
mov
(bad)
cs
and
aaa
jae
clc
ss
fwait
sub
jl
jns
std
sbb
jne
daa
repz
push
hlt
xlat
and
(bad)
cmp
or
pop
ins
and
clc
(bad)
mov
add
mov
cmp
popf
imul
test
clc
imul
aaa
dec
or
add
addr16
cdq
push
jl
sub
adc
pop
ret
clc
mov
(bad)
in
add
mov
add
shr
pop
lock
jle
or
retf
push
hlt
dec
cmp
cmp
cld
pop
add
int
clc
add
fisttp
lock
push
xor
lock
and
mov
sbb
xchg
fwait
add
inc
loopne
add
pop
add
cs
mov
mov
mov
adc
retf
out
(bad)
fisttp
or
aas
or
mov
mov
inc
out
mov
cwde
repz
add
xor
or
mov
lock
pop
loopne
add
loopne
pushf
mov
retf
outs
mov
retf
retf
dec
add
ja
cmp
xchg
movs
and
xchg
das
xor
scas
push
mov
pop
test
in
lock
fwait
rcl
jge
mov
add
fwait
sbb
mov
mov
clc
add
das
inc
loopne
sar
inc
jbe
xchg
push
js
rol
pop
push
out
pop
loope
lahf
loopne
add
fwait
loopne
sub
jmp
add
pop
xor
adc
not
clc
aaa
sar
lock
mov
xor
or
jl
jg
rol
jnp
sahf
inc
loopne
lock
fisttp
out
jne
mov
or
or
sahf
(bad)
call
out
cmp
jbe
loopne
aad
data16
ss
pop
(bad)
cmc
sbb
pxor
das
inc
loopne
lock
mov
ds
pop
fisttp
out
daa
ret
(bad)
neg
daa
sar
(bad)
rol
mov
jb
jmp
jle
add
pop
pop
mov
scas
mov
(bad)
aam
scas
pop
fdivp
or
xor
and
jne
and
jl
sbb
or
mov
lds
mov
cmp
loope
sti
bound
sub
leave
adc
iret
ret
js
fwait
pop
in
jb
clc
pop
sar
loope
sub
ds
mov
pop
out
cmp
xchg
add
mov
inc
lahf
add
push
adc
or
daa
add
test
ds
stos
call
cli
imul
ins
inc
das
cmp
cmp
pop
mov
test
lock
mov
and
inc
mov
or
ret
push
or
jbe
stos
pop
test
test
add
pop
xor
cmp
mov
call
inc
jbe
adc
cmp
jg
lock
add
mov
(bad)
mov
pop
push
aaa
cmp
clc
rcl
cld
ins
imul
aaa
inc
or
repnz
adc
cmps
push
pop
push
jbe
xor
add
pop
loopne
add
clc
and
sub
call
out
add
xchg
and
imul
shl
add
xchg
lock
ret
clc
rep
mov
adc
jb
add
mov
in
fwait
repz
mov
lock
add
or
ins
mov
add
mov
cld
sbb
lock
or
add
shr
adc
push
hlt
cmp
cmp
push
ja
loope
jnp
pop
xchg
das
add
in
add
mov
mov
bound
cld
inc
jb
sbb
jl
rcr
cs
inc
mov
daa
cmps
inc
mov
inc
loopne
add
jl
loopne
add
jb
call
sar
jl
outs
mov
mov
mov
and
mov
ins
aad
lock
and
cmps
add
adc
(bad)
and
jne
scas
fist
xchg
aaa
add
mov
pop
mov
pop
jmp
fld
push
daa
xor
lock
test
jns
sbb
js
xchg
fnsave
es
stos
mov
repnz
add
push
cmp
push
add
mov
in
call
mov
leave
pop
push
out
popf
lock
movs
mov
sub
mov
mov
mov
ss
sar
in
je
ins
adc
loope
xchg
mov
sub
jnp
cmp
fs
xor
lock
inc
js
pop
inc
hlt
dec
call
sub
sti
ret
mul
not
ds
das
cmp
dec
(bad)
lods
ss
lahf
movs
add
or
ja
mov
js
and
fistp
in
daa
mov
mov
pop
mov
push
loope
outs
js
in
call
mov
mov
mov
lock
pop
xchg
daa
adc
xlat
ret
lock
mov
mov
add
add
ins
lock
mov
mov
inc
jbe
shr
stos
(bad)
ffree
dec
loopne
and
and
pop
loope
and
mov
mov
fimul
scas
ins
aaa
imul
addr16
inc
adc
sbb
mov
push
add
push
stos
call
push
fld
mov
lock
adc
addr16
add
push
fidivr
jbe
push
shl
inc
sbb
lock
add
or
sar
mov
push
in
ret
inc
fild
lock
mov
sub
(bad)
jb
or
push
(bad)
jp
fst
mov
stc
bound
shl
lock
ds
into
push
sbb
test
clc
cs
xchg
adc
jbe
clc
jbe
mov
inc
jg
add
ror
test
or
scas
mov
fucomp
mov
sub
fldenv
clc
ss
mov
in
mov
sti
imul
cmps
mov
sbb
push
cmps
mov
add
mov
xchg
inc
loopne
or
out
xchg
pop
in
pop
sub
pushf
sub
dec
adc
xor
add
outs
pushf
xor
int
adc
sbb
jg
add
(bad)
fldcw
xchg
fstp
xor
mov
sub
add
repz
clc
imul
push
stos
adc
xor
jle
or
dec
cmp
cmp
int
adc
or
int
xchg
sti
xchg
das
push
add
imul
push
(bad)
jmp
mov
popf
rcr
xchg
sbb
jecxz
pop
xor
sbb
sub
jl
loopne
popf
aas
cmp
xchg
aad
inc
inc
pop
inc
loopne
cmps
adc
sub
test
fist
js
sbb
into
ror
or
or
jmp
gs
out
retf
lock
add
adc
jg
pop
aad
(bad)
sar
jmp
rol
test
(bad)
test
push
and
cmp
mov
lock
xor
xor
or
dec
bound
pop
sti
arpl
add
in
sub
fimul
out
or
arpl
sar
stos
xchg
(bad)
pushf
xchg
pop
add
adc
inc
test
jg
mov
daa
daa
mov
add
jnp
jge
fidivr
in
loopne
js
lahf
fmul
mov
jge
ficomp
dec
std
leave
leave
mov
repnz
sub
(bad)
jp
pop
inc
loopne
aaa
out
add
add
loopne
xor
cli
or
scas
add
aad
out
in
in
rcl
mov
jle
fidivr
stc
push
fcmovb
xchg
mov
or
adc
cmp
ds
mov
sub
xor
cli
sbb
jg
inc
out
cmp
adc
neg
pop
xor
jb
mov
inc
lock
xor
cmp
mov
cmp
and
mov
pop
inc
das
stos
fwait
adc
inc
adc
and
ror
loope
add
(bad)
into
enter
ror
pop
add
and
sub
test
add
mov
shr
add
mov
adc
adc
xchg
aaa
repz
ja
data16
fisttp
lock
jmp
in
add
mov
jbe
sbb
or
and
rol
mov
mov
pop
(bad)
fild
mov
jbe
arpl
test
dec
adc
scas
dec
clc
mov
rdmsr
mov
mov
mov
sub
mov
or
or
and
call
cmps
test
add
push
adc
cmp
jl
lock
mov
xor
aas
add
and
ror
jbe
and
add
adc
jle
cmp
add
xchg
iret
cmp
mov
stos
and
mov
push
(bad)
stc
inc
sbb
jecxz
scas
dec
clc
or
mov
or
fistp
inc
loopne
cmp
jge
push
scas
xchg
mov
jmp
dec
aam
cs
push
inc
scas
add
or
aas
pavgb
add
leave
adc
add
addr16
jbe
add
inc
add
int3
push
add
loopne
sbb
pop
sub
call
lock
jle
loopne
dec
add
sub
sub
mov
pop
mov
cld
shr
aaa
jp
(bad)
es
jmp
out
sti
and
jbe
mov
mov
daa
push
dec
pop
(bad)
push
ror
adc
mov
popf
loop
adc
jmp
add
sahf
or
fist
sub
arpl
fmul
out
and
dec
sbb
imul
ins
loopne
fldcw
xor
mov
xchg
adc
lock
xor
je
jno
hlt
adc
adc
cdq
xor
(bad)
push
or
clc
inc
js
data16
outs
xor
and
or
or
fisubr
adc
daa
push
ror
ret
dec
inc
pop
call
(bad)
adc
push
js
sbb
(bad)
adc
std
mov
(bad)
int
lock
sar
lahf
inc
pop
aas
dec
inc
call
pop
(bad)
push
sbb
loope
fild
and
mov
sub
sub
and
jle
or
lock
imul
dec
clc
out
or
add
lock
test
cwde
ret
cld
or
inc
ret
xchg
popf
add
fs
pop
test
add
pop
pushf
mov
stos
call
ja
dec
jmp
inc
xchg
ret
sub
jp
call
mov
popf
mov
adc
add
stos
jge
sub
xchg
dec
mov
xor
dec
mov
lods
mov
pop
add
and
mov
jp
push
daa
add
clc
adc
or
clc
sbb
or
sub
sar
lock
rol
sbb
add
out
movs
mov
lahf
repnz
pop
ins
xchg
sbb
imul
add
cmps
and
pop
cld
adc
xchg
pop
add
adc
cld
and
pop
dec
jns
sub
push
(bad)
push
daa
cmp
or
sub
out
cmp
std
sbb
call
gs
cmp
mov
lods
movs
ds
sub
mov
rol
lock
sub
bound
add
dec
add
jg
sub
bound
in
ss
add
test
pop
push
jbe
dec
cs
jbe
mov
xchg
jno
push
scas
mov
out
mov
xchg
mov
cmps
mov
in
stos
push
addr16
adc
xor
xor
mov
cld
cmp
pop
inc
loopne
fcmovne
jmp
ror
xchg
das
cmc
xchg
lds
jp
in
daa
aaa
add
sbb
xor
(bad)
lock
cmp
mov
lock
inc
lahf
jno
arpl
jl
ret
sti
aas
and
xor
jnp
mov
call
pushf
outs
xchg
test
les
jge
xchg
pop
call
lahf
in
mov
jl
mov
gs
out
and
sahf
test
lds
cmp
push
ds
push
mov
mov
ds
xchg
cmp
aas
cmps
int3
test
mov
adc
adc
mov
pop
outs
xor
jmp
xchg
jle
int3
test
or
jge
inc
out
sar
pop
dec
(bad)
call
push
ds
shr
dec
cmps
mov
jbe
dec
mov
pop
ins
into
dec
mov
jmp
fwait
rcl
add
or
or
mov
test
test
cld
test
mov
clc
or
mov
aaa
cmp
xchg
sbb
sub
add
add
mov
scas
push
jle
(bad)
data16
ja
clc
ror
dec
pop
clc
jns
lock
add
jne
mov
pop
frstor
aaa
test
mov
add
or
test
fwait
test
sub
aad
stos
mov
fisubr
imul
dec
or
aaa
mov
das
stos
fwait
in
ficom
jl
repz
xchg
inc
ret
lock
loopne
popf
xchg
popf
add
xor
push
push
cmp
loopne
cmp
shr
loopne
dec
sbb
cmps
scas
add
sbb
jle
sbb
xchg
fld
push
icebp
adc
clc
adc
mov
lock
sbb
add
mov
xchg
popf
mov
jno
pop
mov
pop
in
in
sbb
scas
in
push
shl
add
or
(bad)
mov
add
das
ja
pop
aad
outs
cmps
add
inc
loopne
add
pop
pop
sar
arpl
retf
fs
stos
add
mov
pop
cdq
push
hlt
jp
test
push
hlt
sbb
and
fild
mov
das
das
cmp
repnz
cmp
gs
xor
div
imul
daa
das
cmp
sbb
fisubr
jmp
adc
mov
cmp
dec
(bad)
je
lahf
xor
into
call
mov
test
in
in
sub
sbb
xor
nop
push
mov
xchg
daa
pop
(bad)
mov
repnz
cmp
out
jge
fidivr
push
add
xchg
adc
and
adc
jns
jp
xchg
mov
(bad)
sbb
sub
and
(bad)
call
dec
into
call
jl
add
pop
pop
pop
pop
and
add
mov
lock
mov
xchg
pop
ins
(bad)
leave
xchg
xchg
pop
in
or
aas
leave
stc
xchg
or
adc
jecxz
leave
sub
loop
aad
inc
loopne
jmp
mov
sahf
pop
add
adc
lahf
xor
push
pop
mov
jp
cmp
inc
loopne
push
fmul
aas
jae
test
push
test
sub
div
push
aas
loope
aad
(bad)
push
mov
inc
loope
pushf
sbb
lock
(bad)
int3
call
mov
mov
jne
jecxz
mov
add
ds
dec
sub
iret
sbb
mov
fs
popf
inc
jbe
mov
xchg
call
and
mov
nop
mov
clc
mov
add
and
xchg
xchg
pop
data16
dec
jbe
arpl
gs
mov
bound
das
add
das
mov
mov
(bad)
push
repz
sub
lahf
mov
fisubr
add
sub
jle
loopne
cmps
or
clc
cwde
xchg
fst
int3
mov
cmp
int3
call
push
pop
scas
test
inc
lahf
push
hlt
inc
mov
pop
fbld
aas
ins
mov
outs
inc
fild
std
mov
inc
pop
and
pop
mov
sub
or
pop
lock
fwait
(bad)
jmp
cmp
mov
scas
add
jl
lock
call
push
mov
aam
push
stc
push
adc
pop
adc
hlt
cdq
xor
cli
jns
rcr
inc
pop
lahf
scas
call
lock
fsubp
pop
sbb
jnp
fxch
and
test
xor
dec
dec
xchg
lock
inc
dec
add
lods
mov
pop
or
push
shl
mov
sub
out
inc
jg
stos
mov
repnz
dec
jns
push
sbb
iret
xor
pop
fld
out
and
cld
xor
out
fistp
add
jecxz
ret
stos
loop
int
mov
fsubr
loope
sub
sub
call
mov
mov
mov
idiv
mov
pushf
outs
hlt
mov
xor
cli
jmp
pop
fcomp
into
ror
inc
loopne
jp
loopne
js
cmp
adc
jmp
int
push
aaa
xchg
jno
arpl
lods
outs
fs
aas
iret
into
push
cmps
sub
inc
addr16
loope
push
jb
jnp
repz
and
imul
pop
clc
or
scas
add
pop
pop
or
mov
fild
(bad)
or
dec
push
clc
inc
pop
retf
mov
push
ds
mov
lock
jmp
dec
nop
aam
jl
ret
inc
lahf
mov
scas
sbb
fisubr
adc
pop
jne
loopne
rol
lock
push
or
stos
test
(bad)
popa
add
arpl
out
imul
cld
int3
add
mov
or
lea
mov
xchg
cmp
lock
adc
neg
lock
xor
out
cld
and
cli
jecxz
mov
pop
dec
out
aam
dec
and
pop
cdq
aad
xor
or
xchg
gs
xor
cmp
push
xor
in
dec
cdq
push
push
sbb
dec
loopne
xor
test
jecxz
in
mov
jle
and
aas
push
out
adc
jmp
imul
pop
sahf
pop
(bad)
jbe
dec
sahf
pop
lds
lahf
ret
enter
lahf
jecxz
fldl2t
mov
mov
cdq
aas
rol
pop
dec
mov
aad
ds
out
cmp
cmp
pop
cmp
ficomp
cwde
mov
aas
xchg
loop
sbb
out
or
iret
sbb
clc
sbb
inc
jno
jg
inc
loopne
aaa
or
cmp
jle
sbb
add
pop
in
jmp
xor
xor
nop
clc
movs
mov
aad
mov
xchg
lods
mov
pop
data16
mov
push
rcl
test
fldcw
cli
xlat
mov
lock
in
xor
bound
movs
mov
cld
imul
ds
mov
sahf
rcr
xor
mov
and
iret
mov
test
sub
ins
cmps
sub
add
in
xchg
mov
jp
push
push
pushf
aas
cmp
int
mov
jle
sbb
(bad)
push
aas
xchg
add
lock
cmp
xchg
dec
mov
sar
loope
cmp
mov
jno
clc
in
out
push
pop
das
out
dec
jne
xor
je
iret
sub
push
(bad)
loopne
arpl
adc
loope
aas
push
mov
sub
inc
loopne
ins
nop
test
aas
xchg
mov
ds
add
mov
jns
or
ror
push
ror
mov
jno
outs
inc
jg
adc
sti
sbb
xor
sbb
(bad)
mov
aas
inc
pop
(bad)
jp
mov
movs
mov
jne
adc
lds
push
pop
sbb
sar
jne
and
sahf
scas
outs
jp
shl
push
aaa
mov
sbb
mov
fstp
xchg
cmp
call
jmp
sbb
jp
shr
retf
(bad)
fisttp
jbe
and
pop
retf
scas
add
leave
push
out
or
cmp
sbb
sub
sub
jg
add
stos
test
sti
jmp
lock
sbb
loopne
pop
mov
stos
call
addr16
cdq
xor
push
adc
dec
xchg
aad
jmp
out
dec
and
dec
sbb
lahf
ret
mov
mov
jge
inc
pop
push
shl
push
mov
aas
aaa
add
sbb
add
or
cmp
or
xor
sbb
int
retf
mov
mov
daa
data16
mov
fcmovu
je
sbb
mov
je
mov
aaa
pop
cld
ins
or
jae
jae
push
cmps
mov
sbb
call
pop
xor
clc
in
data16
lahf
sbb
pushf
and
and
and
(bad)
push
inc
jbe
cdq
aad
jmp
sahf
pop
pop
dec
loopne
sub
push
mov
dec
popf
pop
fld
hlt
sbb
loopne
mov
jae
lock
sbb
inc
lahf
mov
mov
jbe
mov
mov
add
test
xchg
ror
adc
fcmovnb
adc
cwde
popf
fsubr
in
mov
sar
popa
or
aas
pop
inc
loopne
ins
inc
loopne
rol
out
jmp
sub
fisttp
out
sbb
mov
pop
hlt
out
pop
jg
sbb
out
movs
pop
clc
adc
ja
jg
mov
mov
sbb
(bad)
mov
retf
adc
dec
and
cld
cmp
imul
xor
push
fidivr
pop
cmp
lods
test
in
js
aaa
mov
dec
pop
fstp
inc
jg
inc
data16
out
shl
mov
sbb
mov
call
mov
test
addr16
retf
loopne
pushf
aad
jbe
fwait
or
mov
call
mov
sub
fs
(bad)
out
push
adc
aas
iret
data16
out
push
inc
loopne
int3
call
inc
jbe
cmp
add
movs
mov
pop
fadd
lock
mov
outs
mov
pop
imul
in
push
(bad)
push
rcr
pusha
inc
fistp
adc
cli
neg
jbe
test
aam
ficomp
ja
inc
pop
inc
loopne
push
cmp
mov
cmp
mov
clc
sub
rol
pop
fsub
out
daa
fisttp
ret
movups
sbb
aas
add
sbb
mov
leave
push
in
stos
ss
pop
je
mov
imul
lahf
ins
sbb
mov
mov
inc
aaa
mov
dec
adc
and
fidiv
retf
pushf
mov
mov
(bad)
test
mov
imul
xchg
ins
fs
cmp
pop
pop
and
daa
pushf
stos
sbb
es
mov
sbb
jnp
sbb
pop
ret
enter
aaa
adc
dec
sbb
adc
dec
(bad)
adc
iret
xor
lock
movlps
(bad)
push
or
jg
pop
clc
movs
mov
stos
mov
push
hlt
or
jge
mov
xchg
pop
cmp
mov
and
adc
xchg
lea
jl
shl
dec
outs
adc
inc
loopne
aas
mov
outs
cmp
or
xchg
(bad)
push
sar
adc
daa
push
ins
mov
mov
xchg
popf
outs
inc
aaa
and
cwde
and
mov
xchg
repz
or
scas
push
adc
outs
out
or
data16
in
dec
fmul
scas
cmp
call
adc
sub
in
fs
lods
sbb
loopne
or
ret
sti
(bad)
fcomp
mov
clc
mov
leave
and
fsubp
(bad)
(bad)
lock
loopne
js
mov
dec
mov
inc
jg
cmp
cmp
add
and
js
call
inc
ficom
sar
dec
or
cmp
pop
cmp
push
pop
clc
jg
adc
inc
loope
in
or
cmp
lahf
add
add
add
fsub
inc
push
xor
aas
cwde
adc
(bad)
sub
arpl
jmp
cmp
aad
(bad)
mov
neg
jnp
jmp
jmp
leave
and
sbb
mov
push
jbe
lahf
fmul
add
rol
lahf
pop
ins
mov
cli
int3
inc
(bad)
in
jecxz
rcr
or
sbb
xchg
mov
fldenv
aas
mov
pop
fcmovnb
mov
mov
dec
clc
cmp
aam
cs
cwde
push
(bad)
ds
xchg
pop
les
jge
dec
mov
lahf
pop
jb
mov
sti
push
xchg
lock
ror
mov
mov
scas
inc
js
call
jmp
adc
or
cli
jne
mov
xor
mov
fwait
mov
out
push
cmp
dec
outs
pop
mov
xor
pop
fld
in
in
out
arpl
adc
jne
scas
dec
clc
adc
call
addr16
out
lock
and
jnp
adc
(bad)
mov
xor
pop
aad
pushf
sar
retf
(bad)
(bad)
in
or
mov
inc
lahf
pushf
sar
shl
xchg
in
stos
test
pop
aad
inc
xor
out
cmp
inc
loopne
test
pushf
sar
shl
adc
enter
pop
mov
repnz
je
cmps
push
mov
mov
ds
inc
cmp
pop
sub
or
adc
enter
sbb
lds
inc
mov
sub
and
sbb
(bad)
jmp
aas
iret
inc
jbe
(bad)
xor
sbb
cmp
mov
pushf
clc
mov
pop
add
jg
sub
test
add
cmp
aad
ret
adc
xor
pop
ins
scas
sub
push
cs
push
aaa
das
mov
retf
sbb
jmp
stos
test
arpl
movs
cmp
jg
jno
push
add
data16
xchg
jno
movs
and
mov
lock
ja
daa
xchg
dec
clc
cwde
and
leave
adc
bound
in
and
mov
fistp
and
add
xchg
arpl
leave
jmp
jg
or
leave
or
jg
add
addr16
xchg
push
bound
mov
or
adc
pop
push
aaa
jb
lock
sub
lahf
cmp
enter
cs
fs
ror
js
loope
inc
loopne
cmp
mov
jl
adc
push
clc
mov
pop
and
adc
mov
jb
mov
in
jl
add
cmp
out
pop
push
jbe
add
loopne
aaa
mov
pop
aas
push
out
and
movs
cmp
(bad)
loopne
(bad)
into
pop
or
xlat
push
es
xlat
push
test
jbe
(bad)
xadd
xchg
jns
addr16
clc
or
loopne
js
test
adc
push
mov
(bad)
lock
imul
push
ror
(bad)
fdiv
jbe
mov
das
imul
call
pop
int
mov
sahf
loope
es
imul
inc
loopne
adc
test
iret
ss
sti
cmpps
scas
xor
fisub
js
cwde
shl
jg
inc
ficom
ss
sbb
jp
sbb
das
stos
sbb
jmp
add
stos
fwait
cmp
ret
sbb
add
call
lock
outs
adc
cld
out
add
lock
mov
popf
fsub
mov
test
xchg
dec
cmp
push
or
inc
mov
test
int3
pop
(bad)
jb
sar
add
add
pop
jecxz
cld
leave
out
mov
shl
or
pop
cmp
xor
lock
add
mov
add
pop
add
jg
inc
loopne
sbb
pop
sbb
clc
sbb
xchg
mov
fsub
lock
outs
ds
lahf
jge
or
outs
sbb
std
dec
xchg
sti
xchg
(bad)
loope
ins
or
bnd
cmp
fldenv
out
dec
inc
call
or
xchg
imul
pop
sti
loop
jns
push
idiv
mov
out
lds
jg
adc
adc
jne
jae
cdq
push
jle
add
inc
push
mov
sub
retf
jl
jno
sahf
add
fucomi
sub
arpl
gs
jb
nop
sbb
push
shr
lods
(bad)
arpl
aaa
mov
add
mov
mov
inc
loopne
test
jmp
loopne
mov
mov
std
xlat
dec
push
rcl
lods
call
aad
add
mov
aaa
xor
cld
or
mov
div
mov
fimul
lds
dec
mov
fldenv
fldl2t
dec
dec
mov
add
cmc
jno
jle
inc
cmp
jg
add
retf
mov
mov
(bad)
jno
jle
add
lea
js
pop
ins
rol
jg
pushf
push
inc
push
or
jae
mov
call
or
jg
adc
mov
mov
fldenv
jg
add
or
cli
push
add
lock
xchg
lea
loopne
push
mov
inc
(bad)
in
jno
(bad)
repz
mov
cmp
ja
add
or
shl
cld
sub
xor
ret
and
mov
fistp
mov
dec
loopne
jl
or
jl
ret
and
rcr
xor
mov
cdq
rol
int3
call
test
push
pushf
jl
cmp
cmc
mov
ds
into
daa
mov
pop
xor
mov
cdq
inc
loopne
mov
cld
xlat
sbb
jmp
js
cld
ins
xchg
lock
daa
idiv
ds
loop
ss
retf
loope
cmp
and
dec
mov
inc
repz
xchg
aad
sti
or
cwde
sar
loopne
imul
fidiv
sbb
cmp
mov
(bad)
mov
jns
loope
js
outs
xor
xchg
sti
mov
lock
add
retf
retf
call
jg
pusha
inc
mov
cmp
in
pop
jmp
pop
out
in
push
jb
mov
and
div
mov
(bad)
mov
aas
cmp
sar
or
or
(bad)
popa
add
cmp
aas
shl
lock
outs
adc
add
cmp
imul
out
cs
stos
mov
and
or
loopne
or
pop
in
ds
jbe
cmp
aas
cmp
jb
loopne
imul
lahf
push
es
cmp
add
lahf
sbb
pop
clc
aas
aaa
or
pop
or
pop
jecxz
cld
xchg
or
enter
mov
pop
or
dec
fidivr
push
out
iret
aaa
enter
xchg
neg
ret
sti
retf
or
ficom
add
push
loopne
imul
or
sbb
pop
mov
mov
leave
push
int3
lea
fld
(bad)
add
fcmovb
(bad)
cld
pop
ja
test
lock
pop
ret
rol
out
loope
pop
stc
test
clc
pop
xchg
cld
scas
jno
outs
mov
cld
mov
adc
fucom
add
push
lock
ret
daa
ja
add
add
inc
add
add
out
outs
adc
xchg
in
jmp
dec
(bad)
push
hlt
fst
mov
push
and
repz
ret
add
xchg
jecxz
aas
adc
in
sbb
lock
add
rcl
clc
inc
in
in
push
jg
pushf
mov
xchg
es
leave
std
stos
add
frstor
fldcw
mov
sub
leave
enter
js
jns
ficom
js
pop
(bad)
jmp
arpl
call
cmp
ins
add
jge
cmp
adc
pop
fld
out
(bad)
xor
jnp
gs
sub
jbe
sub
cwde
mov
xlat
xor
jns
adc
cmps
ss
mov
in
push
cmp
adc
jnp
stos
fistp
lock
ss
outs
(bad)
clc
fisttp
adc
(bad)
sbb
pop
sub
in
and
mov
mov
push
bound
(bad)
mov
loope
ja
push
(bad)
sbb
push
jbe
aaa
add
mov
push
aas
enter
inc
jbe
inc
mov
jle
adc
iret
aas
or
leave
dec
out
prefetch
scas
popf
fcomp
(bad)
daa
aaa
iret
pushf
das
adc
out
pop
push
jmp
cmp
push
out
aam
adc
pop
pop
ret
loopne
xchg
jns
loop
mov
jg
nop
mul
cmps
xor
lock
lock
mov
iret
xchg
sti
lahf
(bad)
loope
jge
repnz
xchg
push
jns
inc
jbe
sbb
sar
mov
ficom
or
adc
sbb
fstp
leave
sub
dec
lahf
lock
mov
jge
push
ds
xchg
fst
xchg
jae
daa
pop
mov
pop
add
call
mov
stc
div
and
pop
or
je
or
mov
jge
dec
std
rol
cmp
add
ficom
xchg
dec
and
stos
(bad)
jae
fwait
sbb
push
(bad)
pop
arpl
sub
sbb
and
xchg
cli
fwait
or
ds
(bad)
rcr
loop
mov
sar
jge
das
cmc
dec
stos
test
xchg
add
cmp
lahf
dec
out
cmp
push
(bad)
data16
je
push
mov
ins
sub
xor
popa
dec
cmp
out
inc
push
cmp
clc
mov
(bad)
mov
fld
aaa
cli
out
jo
(bad)
adc
iret
and
pop
cmp
jo
out
(bad)
loope
inc
popa
mov
sbb
pop
sub
(bad)
xor
in
mov
leave
out
jmp
cmp
push
and
pop
jae
mov
fidiv
adc
test
retf
das
jne
in
mov
int3
stc
and
repz
gs
call
(bad)
pop
iret
repnz
loopne
in
lods
lods
xor
je
out
retf
addr16
retf
lods
lods
hlt
daa
daa
out
retf
fst
xchg
retf
call
add
daa
xlat
or
and
cld
(bad)
aam
pop
or
sbb
mov
clc
mov
hlt
mov
and
loop
or
es
mov
cs
fwait
(bad)
fcmove
jecxz
es
je
(bad)
(bad)
in
movs
(bad)
in
cmp
jg
sub
cwde
push
push
pop
ret
mov
xchg
sbb
call
test
lahf
xor
jl
and
xchg
aaa
xor
pop
pop
and
or
(bad)
jb
shr
pushw
sub
cmp
mov
outs
stos
out
pusha
jne
mov
mov
outs
stos
or
sub
mov
test
mov
pop
xchg
sbb
add
xchg
jp
repz
lahf
lock
cld
test
lock
lea
int
xor
inc
sub
dec
add
inc
pop
ret
mov
mov
pop
data16
lock
mov
call
mov
idiv
jbe
sbb
leave
retf
scas
bound
xor
mov
add
imul
add
xchg
add
lea
cs
cmp
add
or
pop
jae
(bad)
lock
add
dec
mov
xor
inc
or
das
cmp
clc
cmp
add
jns
mov
dec
stc
push
arpl
aas
bound
test
aas
xchg
cwde
aad
adc
pop
inc
loopne
pop
frstor
mov
xchg
or
ds
out
cmps
pop
aad
in
stos
ss
mov
sub
jae
mov
mov
scas
push
ins
adc
inc
je
or
xchg
dec
mov
iret
sar
(bad)
es
fwait
pushf
test
and
push
fsubp
sbb
dec
dec
sahf
pushf
repnz
les
xchg
retf
pop
fmul
xchg
xor
rol
aaa
ret
adc
cld
cmp
mov
shl
scas
dec
clc
jns
and
loopne
jnp
jne
loope
add
push
cmp
fs
es
in
mov
push
fmul
sub
or
jecxz
loope
js
sahf
fsub
lock
mov
mov
sub
lock
sub
loopne
lock
push
xchg
sbb
sub
dec
sub
clc
mov
sbb
cs
movs
fs
fwait
push
js
adc
cmp
jmp
xchg
and
add
sar
and
or
jl
lock
adc
mov
or
in
pop
adc
pop
push
and
dec
mov
xchg
jl
rcr
shr
jbe
adc
jno
loopne
jl
and
into
adc
cmp
sbb
jne
lock
and
mov
retf
jmp
lods
outs
adc
fild
or
(bad)
adc
and
(bad)
loopne
es
ds
stc
inc
xchg
lock
fs
adc
xchg
outs
cld
inc
xor
xchg
clc
mov
xor
rcl
cmp
cli
and
stos
mov
es
push
loop
or
pop
retf
xchg
jmp
xchg
das
aad
and
xchg
or
mov
add
xchg
test
xchg
dec
clc
and
jbe
jl
(bad)
fisubr
and
mov
dec
mov
mov
ss
in
adc
ret
sahf
into
xchg
dec
int3
push
daa
xchg
add
jmp
sub
adc
inc
fisttp
das
cmps
sbb
cli
test
mov
call
dec
xchg
aaa
xor
jmp
test
cmp
and
mov
sub
fsubr
cli
icebp
repnz
movs
repnz
xchg
aaa
xor
das
mov
and
and
pop
mov
xor
retf
hlt
sub
pavgb
adc
cmp
dec
inc
hlt
pop
stc
push
dec
and
arpl
dec
pop
clc
test
mov
xor
mov
xchg
pop
ins
xchg
aaa
push
push
add
dec
push
sbb
inc
pop
mov
push
clc
les
int3
push
add
cmp
or
xor
jb
aaa
cli
(bad)
(bad)
call
fsubr
pop
loopne
inc
jbe
ror
xchg
popf
xchg
inc
je
adc
pop
fldenv
lock
cld
les
mov
or
adc
ds
or
jg
add
scas
call
aas
data16
pop
add
mov
jmp
sbb
dec
pop
inc
loopne
jbe
cmps
cdq
xchg
popf
repnz
and
adc
dec
clc
arpl
adc
ret
push
(bad)
fdiv
jp
in
mov
push
and
scas
cmps
push
fiadd
and
cmp
cmp
ss
daa
(bad)
push
mov
mov
fwait
xchg
popf
loop
cmp
jle
imul
sub
pop
jne
cmp
or
call
xor
cli
retf
std
fld
call
sbb
or
ficom
or
adc
aaa
xor
enter
outs
and
jns
jns
(bad)
sahf
sahf
jp
popf
ins
and
pavgb
ret
and
scas
xor
dec
xor
push
mov
push
mov
out
sub
xor
jg
sub
pusha
fs
xchg
xchg
pop
add
push
add
xchg
sbb
mov
pop
add
push
sbb
test
inc
scas
mov
and
test
mov
mov
mov
fyl2xp1
out
mov
push
adc
push
pop
js
push
fxch
jge
push
pop
add
mov
push
or
rol
ja
lock
add
xchg
jecxz
push
jo
push
mov
mov
loope
xchg
push
or
push
jbe
adc
cmp
loop
adc
enter
xlat
enter
outs
hlt
add
pop
or
fild
sub
mov
(bad)
es
scas
arpl
loopne
out
or
fwait
sbb
and
adc
lods
lods
stos
or
mov
loopne
xchg
lock
mov
mov
sbb
in
in
add
clc
addr16
mov
pop
push
jbe
addr16
outs
jne
mov
(bad)
push
not
sti
out
push
pusha
inc
aas
mov
and
add
add
xor
mov
jle
adc
mov
popa
fs
mov
shr
in
in
int3
call
sub
push
je
ja
icebp
adc
int3
popf
cli
push
addr16
push
add
xor
call
mov
lods
into
dec
scas
inc
pop
aas
adc
xor
mov
dec
outs
mov
fbstp
add
jg
mov
inc
stos
call
sar
loopne
sub
xchg
xor
(bad)
in
in
and
(bad)
pusha
jne
popf
and
mov
inc
pop
arpl
adc
fldlg2
in
gs
and
pop
sbb
aas
mov
movmskps
jg
adc
jns
sub
sar
mov
xor
cld
sub
fiadd
out
pop
ret
inc
dec
inc
hlt
cmp
sar
push
cmp
xor
js
or
pop
jae
push
jbe
stos
std
xor
lock
mov
xor
je
popf
cld
leave
popf
add
mov
out
pop
test
jg
out
iret
ret
sti
pop
js
sar
lock
jg
sbb
ficomp
sti
repz
jge
ficomp
out
pop
loopne
sbb
aas
push
ficomp
jl
mov
mov
sar
mov
jge
(bad)
xor
push
fsubrp
xor
loopne
cs
adc
jg
and
loopne
addr16
hlt
cmp
sti
and
jge
pop
jbe
xor
js
pxor
test
jle
jg
ficomp
xor
ret
lock
or
(bad)
imul
sub
and
std
pop
js
xchg
std
lock
push
add
pop
mov
(bad)
sar
sbb
pop
iret
mov
mov
loope
aas
mov
test
push
js
add
xchg
std
gs
xor
pop
sti
iret
loopne
sbb
out
inc
loopne
adc
fbld
lock
jg
mov
imul
push
js
or
xlat
ret
jnp
fisubr
lock
div
sti
sub
jle
mov
sbb
or
xchg
cmp
lock
xchg
mov
inc
add
dec
js
adc
std
pop
jbe
imul
push
out
xchg
sar
repnz
cmps
cmp
(bad)
mov
mov
add
pmaxub
out
pop
loopne
int
ds
dec
dec
outs
pop
mov
xchg
sar
addr16
jbe
jb
add
and
adc
mul
repnz
mov
loopne
add
fwait
pop
retf
mov
add
xor
mov
cld
or
mov
mov
test
pop
add
dec
sbb
lea
mov
or
sti
add
iret
add
ja
jbe
sbb
std
add
outs
popa
or
mov
or
cld
sub
outs
pusha
fs
sbb
fld
mov
add
sar
pop
add
add
out
jle
adc
add
popa
cmp
iret
add
rol
pop
pop
clc
int
mov
clc
fild
cld
adc
jmp
fisttp
lock
add
js
scas
add
pop
add
jp
call
cmp
pop
fimul
fwait
add
or
ja
cld
xor
mov
cld
add
add
adc
add
sub
add
cmp
mov
add
dec
add
jle
aas
adc
xlat
add
or
mov
clc
out
inc
shr
js
mov
jae
jmp
pop
add
jle
scas
add
sti
add
or
add
or
out
add
sbb
mov
(bad)
popa
cmp
jmp
jg
ror
push
loopne
add
mov
scas
add
push
sbb
cmp
dec
add
cmp
jg
loopne
add
mov
iret
add
jp
jg
loopne
pop
clc
ja
cld
add
add
or
cmp
jmp
xchg
add
sar
loopne
add
rcl
adc
jg
lock
mov
loopne
add
shr
xchg
add
clc
sub
dec
out
add
add
mov
cld
sub
pop
add
sbb
pop
add
mov
aas
add
pop
loopne
add
cmp
push
clc
std
add
imul
fild
lock
jle
sar
lahf
add
xchg
add
add
or
jmp
jle
ror
cld
mov
call
pop
or
mov
jg
lock
sbb
jg
clc
std
add
adc
pop
add
mov
(bad)
sbb
add
rcr
lock
sbb
jae
inc
lods
add
sar
cmps
add
or
aas
adc
inc
add
test
add
sti
add
(bad)
call
scas
add
inc
js
pop
out
mov
mov
test
sar
lock
sahf
xchg
xchg
loopne
adc
sti
loope
stos
lock
and
(bad)
sti
adc
jg
fsubrp
lock
mov
lock
mov
loopne
das
mov
sar
lock
xchg
(bad)
loope
or
inc
sar
js
ret
sti
xchg
pop
inc
aaa
loop
jp
fild
out
das
ret
sti
push
repz
fadd
out
jne
jg
fisubr
std
imul
neg
sti
dec
lock
aas
xor
lock
mov
loope
pop
lock
js
xor
pop
sti
(bad)
ds
das
sar
loopne
inc
js
ja
mov
sti
sub
fsubrp
test
push
js
sar
loopne
sbb
das
mov
js
and
std
imul
test
js
push
fmulp
test
xchg
loope
or
sar
pop
xchg
popa
js
and
dec
sar
lock
mov
(bad)
and
(bad)
sar
lock
mov
lock
pop
sti
cmp
adc
fild
cs
js
ret
sti
push
out
xor
or
jmp
pop
xor
js
pop
out
mov
jg
fidivr
out
mov
jg
ficomp
std
jns
(bad)
mov
mov
neg
js
test
jg
sti
push
js
ret
sti
jno
mov
sti
inc
js
add
iret
sar
loopne
jno
pop
inc
loopne
lock
add
jle
ror
cld
dec
add
loopne
add
cmp
jmp
call
sub
sub
pop
clc
xchg
add
sar
lock
add
sar
sar
(bad)
cld
out
mov
mov
clc
mov
add
shr
clc
jnp
jle
sar
lock
(bad)
and
jne
jmp
dec
add
xor
jmp
adc
add
test
or
xchg
(bad)
pop
cmp
shr
clc
fild
cld
mov
jg
loopne
add
xor
(bad)
jge
jg
loopne
xor
mov
(bad)
and
add
cmp
add
dec
cmp
ror
cld
jae
jg
add
aaa
sbb
clc
add
jg
shr
clc
dec
sbb
invlpg
lahf
add
pop
cld
add
add
jne
jg
loopne
add
fild
jle
shr
clc
ja
cld
sub
(bad)
cld
add
cld
inc
jl
loopne
add
outs
add
pop
cmp
sbb
out
pop
clc
sbb
mov
cld
ds
sar
xlat
add
mov
jg
sar
ret
add
or
lahf
cmp
xchg
inc
mov
(bad)
push
sbb
iret
add
aas
or
dec
add
aaa
add
cmp
pop
lock
jle
rcr
lock
jg
loopne
add
xchg
add
add
loopne
add
jne
mov
lock
(bad)
outs
add
add
das
add
push
sub
and
call
loopne
add
or
stos
add
loopne
add
xchg
add
cmp
out
add
std
add
xor
(bad)
popa
cmp
rcr
add
shr
jne
lock
add
fwait
dec
loopne
add
ds
sar
lock
inc
xchg
add
add
add
clc
aas
add
inc
sbb
clc
mov
(bad)
ds
lock
and
jne
jg
loopne
add
jne
push
fild
lock
add
cmc
add
clc
xchg
add
lock
add
cmp
aas
pop
lock
push
sbb
push
lock
add
popa
cmp
rcl
cmp
out
mov
(bad)
push
cmp
mov
cld
xor
out
add
add
jg
idiv
ds
xadd
sbb
jge
fidivr
out
jmp
std
jns
out
inc
loopne
ret
sti
mov
push
xlat
loope
div
(bad)
and
jg
fmulp
xor
lock
arpl
adc
xlat
ret
lock
mov
loope
pop
out
jne
(bad)
ds
ins
adc
xchg
dec
ret
sti
cmc
lock
fidivr
ficomp
xor
lock
fmulp
test
jne
jle
fidivr
std
xchg
(bad)
sub
lahf
or
sti
loope
cmp
pop
out
mov
iret
ret
loope
aas
mov
loope
cmps
lock
test
pop
adc
aas
sbb
jnp
test
sar
loopne
pop
lock
and
add
out
test
std
lock
inc
loopne
sar
js
xchg
addr16
sbb
cs
ret
sti
scas
loope
sbb
std
lock
fidiv
sar
js
and
fild
jae
pop
xchg
cmp
lahf
test
jle
aas
add
outs
test
jle
jg
fdivrp
or
mov
pmaxub
neg
loope
daa
lock
xchg
sti
loopne
sbb
pop
pop
out
das
ret
loope
jae
mov
not
sar
mov
sti
xchg
lock
jg
fiadd
clc
mov
sti
and
xlat
loope
gs
xchg
ds
push
out
das
sar
lock
out
pop
loope
inc
js
ja
clc
mov
call
(bad)
sar
js
ret
mov
ret
sti
ds
add
shr
xor
loope
add
inc
mov
js
or
(bad)
lock
std
pop
lock
push
shr
push
sub
pop
sar
std
add
sub
scas
inc
loope
(bad)
jne
lahf
or
(bad)
mov
fild
mov
mov
cld
and
out
add
cmp
(bad)
cmp
add
and
call
loopne
add
and
fnstsw
lock
push
clc
cmps
add
jp
jg
loopne
add
cmp
mov
jmp
cmp
lahf
pop
js
(bad)
scas
add
jnp
clc
jge
call
cmp
add
add
lahf
aaa
test
lock
inc
sar
lock
cmp
ret
add
daa
adc
inc
cmp
outs
pop
clc
push
sbb
lock
jle
loopne
push
clc
pop
add
xchg
mov
jl
loopne
push
lock
pop
or
add
jg
loopne
add
sub
add
sbb
fbld
call
add
pop
cmp
xchg
(bad)
push
sbb
lock
sar
sar
add
cld
fld
fild
aas
add
jne
jg
push
hlt
jge
cld
je
scas
add
rol
aas
or
dec
add
cmp
jle
ror
cld
push
add
xor
mov
clc
push
cmp
cmps
add
add
add
test
call
cmp
sbb
loopne
or
jne
(bad)
ja
mov
clc
cmp
call
loopne
add
pop
add
clc
jmp
mov
clc
int
pop
pop
clc
test
add
xlat
add
or
jg
shr
js
ret
cld
cmp
loopne
add
inc
pop
or
mov
(bad)
cmp
dec
push
lock
push
clc
cmp
jg
cmp
aas
add
xlat
add
rcl
jle
ror
cld
add
or
das
add
dec
add
add
fbld
inc
cmp
sbb
arpl
aas
push
jmp
shr
inc
sbb
popa
cmp
das
add
or
cld
sub
out
xor
mov
std
(bad)
jmp
xor
mov
(bad)
jmp
inc
cmp
mov
movs
test
dec
adc
push
and
push
dec
sub
arpl
mov
pop
dec
xchg
test
sbb
stc
mov
jnp
(bad)
jne
xlat
jnp
jle
(bad)
mov
cmc
jp
sahf
iret
sbb
test
add
loopne
add
ds
clc
sub
push
cmp
clc
ins
rcl
jle
loopne
sbb
clc
and
retf
add
lock
mov
out
xor
(bad)
sti
jbe
jle
fisub
fild
add
xchg
loope
mov
ret
js
loop
sub
or
fiadd
je
pop
sar
js
(bad)
add
icebp
pop
test
(bad)
lock
out
pop
js
(bad)
mov
out
retf
lock
dec
rol
outs
es
add
adc
lahf
lods
or
jnp
fimul
loop
(bad)
neg
pop
(bad)
jnp
out
scas
loop
pop
out
adc
sub
xchg
inc
add
xor
mov
out
xlat
loop
and
ret
fisub
js
movs
sub
dec
lock
sahf
xor
lock
ret
sti
das
js
mov
cmpleps
ds
pop
mov
out
add
sbb
xor
fidivr
pop
inc
rcr
not
or
cmp
out
xor
js
fimul
sahf
mov
pop
mov
js
stos
mov
sbb
sbb
dec
les
add
dec
faddp
loope
add
and
mov
out
pop
sub
push
loop
pop
out
sbb
jnp
out
jmp
mov
scas
(bad)
jnp
fiadd
loopne
mov
inc
js
loop
mov
xlat
loop
mov
sub
lahf
sar
movs
js
(bad)
jnp
ficom
loopne
mov
cmps
icebp
out
(bad)
jnp
fisubr
push
sar
jmp
mov
cmp
loopne
add
add
retf
add
add
dec
sbb
clc
ins
shr
cld
and
scas
add
pop
inc
ret
mov
(bad)
loope
sbb
clc
movs
or
jle
loopne
je
outs
add
mov
pop
jle
loopne
add
add
aaa
arpl
jp
fisttp
add
xor
xchg
pop
inc
ret
cld
sub
pop
xchg
lock
cmp
iret
push
jl
loopne
add
(bad)
xchg
lock
add
addr16
dec
shl
add
aas
loopne
add
push
clc
fild
pop
add
push
pop
fldcw
imul
retf
clc
test
adc
je
xchg
add
add
mov
jl
lock
lock
sbb
ret
(bad)
arpl
scas
and
and
add
and
imul
add
fld
rol
pop
add
mov
mov
das
add
pop
and
test
or
sub
out
jle
loopne
cmp
add
xor
test
cmp
rcr
add
div
push
jl
rol
lahf
or
cmp
out
lock
xchg
add
xchg
sub
das
loopne
add
loopne
sbb
add
ds
push
or
mov
lahf
mov
mov
add
jl
lock
jmp
mov
xor
inc
sub
or
out
loopne
push
inc
pop
add
sbb
xchg
add
add
sti
add
jle
ds
xor
mov
mov
sbb
inc
add
xor
add
pop
add
add
or
dec
add
(bad)
lds
add
or
xchg
mov
test
add
pop
lock
pop
add
mov
cld
sbb
mov
push
shl
jmp
push
inc
pop
add
jp
mov
rcl
add
icebp
push
sar
pop
(bad)
jecxz
stos
scas
in
pop
lds
out
mov
out
(bad)
mul
das
(bad)
sti
pop
js
sar
pop
fxam
jecxz
(bad)
not
js
xchg
cmp
(bad)
jno
xchg
mov
mov
push
hlt
cmp
loopne
or
ret
fisubr
fimul
out
adc
clc
fist
or
push
ret
sti
test
pop
ret
out
lahf
jecxz
xchg
pop
lock
scas
inc
push
jbe
mov
mov
fimul
icebp
jle
fisub
inc
push
hlt
stc
js
or
popa
mov
je
pop
ret
mov
js
sar
lahf
das
out
aad
iret
daa
loopne
loop
and
jmp
sahf
mov
vmptrst
sbb
mov
mov
mov
xchg
loopne
xchg
faddp
js
mov
inc
js
call
lock
push
inc
rol
mov
push
jbe
push
rol
lock
and
jmp
ficomp
out
adc
(bad)
loope
dec
mov
not
mov
or
std
pop
mov
out
ret
or
(bad)
push
and
ret
mov
adc
pop
adc
gs
mov
div
pop
mov
mov
out
adc
push
(bad)
sti
ins
mov
fimul
pop
mov
or
inc
lock
pop
js
loop
fild
push
fsubrp
icebp
push
and
and
inc
sar
and
rcl
jle
push
loope
add
add
adc
pop
add
loopne
add
push
lock
adc
loopne
dec
clc
cmp
iret
add
push
shr
or
sbb
jg
loopne
xor
ror
jl
lock
add
cmp
cmp
pop
jl
lock
add
daa
add
loopne
add
pop
add
xor
xchg
add
adc
popa
ror
cld
(bad)
shl
ds
clc
cdq
cmp
xlat
call
in
pop
jl
rcl
ficom
mov
adc
jle
not
fsub
mov
das
and
add
out
call
clc
addr16
clc
int
das
push
inc
mov
add
rcl
or
fwait
add
xlat
sbb
mov
jl
lock
mov
pop
push
loopne
sbb
rcl
shl
add
daa
add
pop
lock
pop
pop
cld
dec
shl
add
dec
adc
iret
and
or
add
test
push
rcr
or
sbb
xchg
jg
loopne
sub
push
clc
xchg
add
cmp
jae
pop
pop
clc
pop
shl
jle
loopne
test
sub
pop
pop
clc
push
xlat
add
jl
jmp
mov
lahf
add
pop
mov
rol
add
cmp
outs
add
push
loopne
add
and
add
ret
add
and
and
mov
add
pop
jl
lock
sbb
adc
cmc
sbb
shr
jl
lock
cld
or
sti
add
clc
in
mov
out
pop
mov
pop
or
sub
call
loopne
sbb
clc
xor
jg
jl
loopne
add
scas
add
inc
shl
adc
pop
lock
push
hlt
add
out
add
in
or
or
dec
add
add
ret
add
add
arpl
add
inc
outs
jb
add
add
ds
cs
mov
and
lock
pop
add
loope
(bad)
loop
aaa
fimul
icebp
pop
mov
add
adc
jbe
aas
test
sahf
js
loopne
or
std
js
sar
inc
loop
daa
fiadd
xor
inc
cmp
js
pop
lock
in
dec
into
scas
in
out
xchg
ja
mov
or
cmp
mul
fidiv
shr
mov
addr16
ret
push
hlt
ja
lock
not
mov
mov
ficomp
in
add
pop
call
cmpps
ret
js
inc
fidiv
fisttp
adc
pop
out
outs
loope
scas
call
ficom
lock
xor
retf
or
fimul
jecxz
inc
push
hlt
retf
icebp
push
and
xlat
jecxz
dec
rcl
jge
fisubr
fiadd
add
pop
adc
jmp
push
sar
aaa
loop
mov
push
sar
pop
jnp
out
daa
in
and
scas
sar
mov
fdivrp
test
push
mov
add
idiv
js
adc
das
loope
mov
out
icebp
push
les
fimul
pusha
mov
or
sti
inc
mov
test
out
inc
mov
mov
cli
or
arpl
cwde
or
cmp
jmp
xor
lock
mov
sbb
mov
cmp
mov
mov
clc
jle
pop
jle
loopne
sub
sub
aas
pop
push
jbe
cmc
sub
clc
sbb
jbe
fimul
clc
sub
sub
arpl
addr16
lock
dec
clc
inc
ds
lock
sbb
loopne
add
and
retf
add
mov
pop
inc
pop
(bad)
mov
add
aas
adc
or
jmp
jg
loopne
push
hlt
pop
add
or
add
arpl
or
mov
test
fimul
clc
mov
sub
inc
loopne
add
adc
push
and
sub
rcr
clc
adc
ds
mov
ds
sbb
lock
add
or
add
add
and
shl
jg
lock
retf
add
add
mov
pop
add
cmp
lock
or
loopne
add
pop
lock
dec
add
pop
jle
loopne
or
add
loopne
sbb
scas
push
sar
add
and
arpl
rol
clc
stc
or
fwait
je
fldenv
ds
ja
stos
or
jne
test
clc
ins
or
test
jnp
mov
mov
call
lock
lar
or
jmp
mov
clc
add
lock
lahf
cmp
lock
outs
rcr
jne
mov
pop
aam
fcom
scas
add
or
pop
add
dec
or
lock
add
clc
ret
or
jl
loopne
add
clc
jns
(bad)
lock
sub
jl
lock
stos
jmp
add
inc
clc
sub
repz
js
loopne
add
fild
shl
inc
daa
clc
cmp
scas
xlat
or
loopne
or
je
pop
add
retf
add
dec
outs
jb
add
pop
cmp
add
cmp
mov
pop
jle
loopne
sbb
aas
loopne
add
pop
lock
aaa
add
adc
xor
icebp
sahf
mov
sub
mov
clc
xor
xchg
cmp
jnp
sub
add
lods
js
loopne
mov
in
push
shr
ret
out
fist
lock
mov
xor
dec
adc
inc
add
test
mov
fwait
sub
dec
fimul
out
(bad)
jnp
fidiv
cmp
fidiv
jecxz
xchg
inc
pop
lock
out
(bad)
sti
push
mov
jp
sbb
sar
mov
mov
mov
jp
fisttp
outs
ret
jnp
out
dec
lock
ret
sti
ss
fst
lock
(bad)
mov
jge
fiadd
mov
test
sbb
pop
loopne
pop
out
in
psraw
cmp
rcr
popf
dec
mov
fsubrp
icebp
mov
jmp
or
mov
push
les
out
sbb
loop
fiadd
js
sar
sub
adc
push
sub
sti
jmp
mov
fldln2
(bad)
mov
std
popa
mov
fisub
outs
or
xor
and
aaa
sar
jbe
js
aam
pop
add
(bad)
jne
mov
mov
loopne
and
ret
js
(bad)
sti
and
push
mov
or
add
jmp
clc
sub
xlat
loopne
add
xchg
lock
mov
push
js
imul
or
arpl
add
mov
test
xor
imul
push
loope
add
add
aaa
sub
jl
loopne
aam
mov
lock
pop
add
push
sub
adc
std
sub
add
pop
add
mov
out
pop
jl
loopne
add
or
pop
xor
mov
mov
mov
jl
(bad)
jb
shr
cld
outs
and
lea
or
jl
lock
adc
imul
loopne
dec
clc
inc
stos
call
clc
mov
iret
adc
rol
loopne
add
pop
lock
das
rcl
jle
ds
data16
jg
lock
shl
jl
loopne
add
or
outs
jne
das
push
cld
and
sbb
pop
dec
rol
sub
mov
rol
pop
lock
(bad)
(bad)
adc
lds
rol
gs
add
adc
adc
clc
sub
outs
add
hlt
mov
push
jbe
add
and
popa
shl
add
mov
lock
rcl
jle
add
clc
push
add
call
sub
pop
add
inc
shl
inc
ins
mov
stos
lods
neg
loopne
sbb
and
pop
push
cld
dec
mov
push
adc
jmp
add
and
loopne
adc
jle
push
adc
mov
adc
mov
cld
add
xchg
pop
or
aas
loopne
add
mov
scas
in
sub
(bad)
test
aas
push
js
add
clc
adc
jle
loopne
add
or
adc
aas
or
add
fild
xchg
lahf
push
js
out
call
lock
add
sbb
sub
scas
pop
jl
add
ds
and
ins
sbb
jle
pop
add
pop
sub
add
mov
repz
mov
lahf
add
iret
add
clc
sbb
add
not
sahf
stos
sub
movs
mov
das
ret
jnp
out
sti
icebp
sahf
mov
pop
mov
mov
out
stc
js
loop
and
add
add
lahf
loopne
(bad)
test
cmp
test
push
push
hlt
push
mov
fimul
push
(bad)
sti
outs
mov
movs
aaa
mov
lock
sar
mov
pop
inc
mov
ficom
fisttp
(bad)
mov
test
cmp
mov
clc
add
pop
(bad)
jnp
out
adc
push
(bad)
sti
or
sar
xor
popa
mov
or
retf
out
jmp
clc
sbb
ffreep
sti
iret
js
loope
xchg
sbb
imul
fidivr
loopne
icebp
pop
mov
xor
jbe
loope
ins
add
fiadd
aas
xor
js
sar
fninit
cmp
out
(bad)
jnp
add
xlat
or
scas
in
mov
fisttp
dec
out
cmp
push
push
ror
push
mov
jnp
ds
sub
jg
jnp
dec
lock
inc
add
icebp
pop
mov
dec
js
loope
ficom
or
sti
jecxz
pxor
lock
lahf
sar
pop
(bad)
sti
add
ds
int
cmp
aaa
mov
or
or
aas
push
outs
jb
lock
and
mov
push
mov
add
daa
add
push
inc
mov
pop
add
dec
jmp
mov
mov
mov
mov
adc
lods
inc
clc
add
xlat
add
or
jle
loopne
add
pop
jl
loopne
add
or
retf
add
pop
cld
jb
invlpg
push
mov
lock
cmp
fist
shl
cld
das
sub
cmp
cs
ds
outs
mov
xchg
pop
add
or
sbb
mov
and
(bad)
inc
aas
dec
pop
jbe
add
pop
cld
xchg
sub
and
and
sub
and
ds
and
ds
clc
and
mov
pop
push
jl
jne
ins
add
addr16
into
fisubr
retf
fistp
iret
add
fwait
add
pop
cld
sbb
cmp
inc
lock
pop
add
pop
jl
mov
sbb
dec
clc
cwde
(bad)
jae
gs
clc
push
shr
clc
dec
add
lock
add
add
ds
adc
pop
add
scas
mov
fisttp
clc
jl
scas
add
jbe
jp
jmp
clc
and
imul
add
mov
sti
add
(bad)
push
rol
loopne
add
xlat
sub
or
out
add
xchg
je
jmp
loopne
add
ds
adc
xchg
add
loopne
add
inc
ja
ret
add
add
cmp
data16
add
add
outs
loopne
add
pop
push
cld
xchg
add
jg
movhlps
sub
aas
loopne
add
push
lock
add
fwait
pop
xor
adc
fisttp
clc
lds
loopne
push
rcl
test
jecxz
aas
add
push
rcr
lock
add
add
add
xlat
test
in
or
mov
or
movs
cmps
sbb
clc
xor
fxch
daa
loopne
je
pop
movs
cmps
fwait
mov
mov
pop
add
scas
aad
pop
or
fcmovnbe
push
imul
lock
xchg
push
hlt
fst
inc
mov
clc
or
js
sbb
mov
neg
jb
mov
out
retf
scas
sbb
adc
mov
es
test
cmp
fimul
in
das
sar
mov
push
sar
aad
lds
scas
in
jb
(bad)
mov
lock
loope
xchg
ja
pop
mov
sub
push
fiadd
js
xor
mov
js
test
pop
aad
xchg
mov
ss
mov
pop
add
fimul
icebp
pop
xor
xlat
or
push
pop
fstp
push
jecxz
sbb
jge
imul
test
sub
test
dec
icebp
fimul
out
popa
add
lock
js
sar
adc
mov
pop
mov
js
sar
cmp
imul
add
mov
dec
push
jbe
loopne
(bad)
idiv
arpl
lods
sbb
shr
add
adc
mov
jge
add
and
cmps
add
adc
js
xor
ss
add
pop
pop
in
test
outs
add
push
ret
ds
pop
aaa
pop
or
lahf
push
clc
xor
ja
ds
outs
dec
clc
pop
rcl
or
push
jl
lock
cmp
lock
outs
mov
clc
sbb
xlat
add
or
dec
add
hlt
or
xor
iret
shl
cld
outs
shl
sub
ds
clc
or
out
call
sbb
mov
mov
outs
and
xchg
add
add
aad
mov
push
xlat
dec
push
or
push
lock
sub
dec
jne
mov
mov
cld
dec
sub
ds
popa
or
retf
cs
lock
add
adc
mov
leave
pop
sbb
add
clc
jns
lsl
pop
lock
add
clc
inc
add
or
push
add
add
daa
add
push
jl
add
add
cld
dec
sar
rcl
ds
pop
jbe
aam
aaa
sbb
or
sub
mov
mov
jnp
pop
movs
mov
jmp
dec
scas
adc
ret
add
xchg
out
call
dec
sub
(bad)
shr
pop
ins
adc
push
clc
lahf
aam
addr16
sub
call
clc
add
add
pop
push
cld
es
push
add
lahf
scas
cs
push
jmp
push
adc
mov
mov
aam
popf
loopne
sbb
clc
and
xlat
push
shr
push
cld
jl
(bad)
das
sbb
pop
psubb
and
inc
add
add
lock
add
popf
add
add
cmp
ds
lock
aad
(bad)
cmp
psubb
popa
dec
lock
(bad)
lock
sub
aas
add
daa
loopne
arpl
iret
add
psubsw
jle
out
call
jne
outs
add
daa
add
add
cdq
sbb
ficom
add
sub
mov
adc
aas
xchg
sbb
mov
mov
add
fisubr
ror
mov
jmp
mov
icebp
mov
mov
out
or
sahf
xchg
add
jle
fiadd
cmp
pop
xor
mov
sti
daa
pop
ret
sti
push
mov
sti
xlat
pushf
loopne
loopne
loopne
xor
ficom
jecxz
dec
shr
jnp
fiadd
std
and
ja
sti
popa
xor
es
addr16
pop
pop
fnstenv
pop
aam
pop
stos
jg
adc
(bad)
sub
push
adc
and
mov
add
or
das
xor
sahf
xchg
xchg
js
adc
aad
iret
(bad)
add
jecxz
push
fidivr
js
movs
jg
fnstsw
cmp
das
sar
or
jge
ds
into
ret
fdivp
icebp
ds
dec
aaa
pop
loopne
mov
push
cli
or
and
sub
clc
lea
loopne
adc
add
les
daa
test
into
add
fisub
iret
es
icebp
mov
out
push
mov
xchg
adc
sub
pop
test
mov
xlat
jecxz
or
repz
jl
fdivrp
repnz
mov
inc
js
loopne
pop
mov
fimul
lock
test
dec
add
xor
sbb
lods
mov
std
mov
shl
mov
(bad)
frstor
mov
mov
add
mov
outs
ja
mov
push
adc
add
push
rol
push
jmp
(bad)
cwde
mov
popf
ds
fisttp
(bad)
jle
loopne
dec
clc
pop
shl
xchg
out
call
std
fwait
mov
ds
sub
mov
dec
clc
xor
push
jne
mov
das
aam
fnsave
inc
add
inc
mov
loopne
add
or
call
lock
cmp
pop
and
test
cmp
clc
cmp
scas
and
fidivr
or
imul
sbb
loopne
add
add
and
aas
add
fisttp
clc
pop
rol
clc
jl
inc
or
popa
or
fmul
pop
add
stc
ret
xlat
dec
add
jmp
clc
test
int
add
ds
fimul
mov
test
pop
add
dec
ja
pop
add
add
mov
lahf
or
in
call
inc
call
aad
push
jl
loopne
add
rcl
dec
jmp
adc
mov
jl
lock
or
add
lock
or
mov
std
xchg
retf
add
or
jl
loopne
add
jbe
jle
loopne
jmp
rol
jmp
std
js
rcr
fnsetpm(287
or
popf
add
(bad)
jle
loopne
call
inc
ins
hlt
and
or
jl
loopne
or
xor
pop
sti
sbb
lods
mov
xchg
pop
push
cld
push
fst
jmp
ret
add
fld
shl
jle
loopne
add
clc
jle
pop
jle
loopne
sbb
pop
sti
sbb
add
push
clc
xor
scas
push
jl
loopne
or
jl
lock
add
add
xchg
sub
jl
loopne
or
or
sbb
aaa
add
inc
push
hlt
mov
imul
ficom
jmp
(bad)
jmp
dec
add
ret
sti
out
add
aas
in
or
and
sbb
clc
jle
dec
sbb
fwait
cmp
imul
fsubp
in
add
and
sub
loopne
outs
ficom
cmp
pop
dec
rol
cmp
add
add
sar
and
and
push
jecxz
adc
push
repnz
outs
jb
icebp
push
(bad)
sti
aas
lock
xchg
sbb
psraw
xchg
jnp
fbld
icebp
push
ret
jnp
fidivr
retf
out
adc
sbb
xor
dec
movs
cmp
out
jle
mov
js
loop
mov
outs
jmp
pop
mov
je
(bad)
jge
mov
mov
loope
add
popa
mov
shr
or
pop
mov
jecxz
cld
jbe
pop
icebp
mov
add
or
scas
es
lock
scas
ss
or
push
sar
add
mov
adc
fbld
xchg
mov
mov
xchg
call
jnp
mov
mov
mov
out
jmp
pop
jne
fild
lods
push
inc
pop
push
inc
fist
out
jne
jl
fisubr
lock
aam
pop
add
pop
ret
sti
jno
hlt
and
loopne
js
adc
js
dec
ins
ins
mov
rcl
mov
loope
add
push
loope
test
(bad)
sub
pop
jle
or
add
adc
cli
sub
hlt
inc
and
add
jle
loopne
dec
clc
push
rcr
ret
call
add
add
jle
loopne
dec
clc
push
rcr
jl
lock
add
mov
imul
inc
adc
aas
or
(bad)
cli
aaa
arpl
jns
fild
pop
jmp
dec
xor
cmp
push
cli
sbb
push
loope
jmp
lahf
or
shr
pop
scas
ss
dec
add
clc
push
jne
fnstcw
scas
aaa
mov
sar
adc
loopne
add
or
mov
push
rol
jp
pop
add
inc
push
mov
xor
mov
fisub
lahf
psubb
lock
sub
inc
sub
clc
mov
clc
sbb
xlat
add
dec
aas
loope
add
add
mov
mov
and
movs
scas
fwait
inc
sbb
outs
push
jbe
add
fisubr
cld
cmp
cmps
or
push
rol
clc
add
repz
sbb
pop
and
add
pop
jle
(bad)
xlat
add
add
or
clc
sub
xlat
add
sbb
xchg
fistp
loope
add
inc
rcr
js
daa
xchg
add
dec
aaa
jmp
lock
popf
loopne
push
inc
pop
or
ins
sub
pop
jl
lock
je
addr16
ins
repnz
cdq
fsubp
sub
aas
sahf
or
mov
and
or
sti
or
pop
add
inc
pop
or
dec
dec
mov
mov
stc
sbb
cmc
sub
mov
jnp
rcl
jle
add
clc
sub
push
mov
xchg
sbb
mov
ficomp
loope
cmp
clc
sbb
inc
add
ds
dec
push
ror
outs
push
enter
aas
xor
add
dec
mov
loopne
(bad)
mul
repnz
pop
arpl
lahf
pushf
jne
lods
sub
bound
pop
test
jle
fidivr
jge
fisub
test
(bad)
sbb
mov
cli
popa
cli
or
fiadd
gs
sar
mov
out
pop
add
cmp
xchg
fwait
sub
dec
loope
xchg
sbb
sub
sbb
sub
xchg
mov
loopne
js
mov
sub
mov
cmp
std
or
pop
ret
scas
call
jnp
cmp
mul
add
imul
mov
dec
fwait
pop
ins
and
xor
or
ds
fisubr
xor
mov
jmp
(bad)
loop
add
movs
js
ret
js
mov
mov
loopne
sar
add
loopne
adc
add
inc
add
outs
cli
loope
dec
ror
lock
mov
sbb
out
lock
jge
fiadd
or
pop
mov
out
das
jb
mov
fcmovbe
jp
aas
xor
mov
jmp
in
xor
ds
mov
aas
fisub
push
rcl
push
add
fidiv
out
cmp
inc
shl
jnp
ds
jnp
jmp
imul
int
mov
js
cmps
outs
xor
icebp
mov
out
retf
add
adc
add
add
inc
inc
mov
pop
or
sub
or
lock
pop
pop
in
mov
mov
pop
jbe
add
outs
ja
(bad)
push
pop
test
pop
cld
or
pop
inc
ret
clc
sbb
daa
add
push
clc
sbb
in
pop
add
adc
fst
scas
ror
push
addr16
aad
add
loopne
sub
clc
cmp
aas
add
(bad)
shr
jl
loopne
and
ret
and
push
loopne
sbb
pop
add
pop
jge
sbb
clc
or
xlat
add
mov
loope
and
lahf
lods
lahf
lock
call
loopne
cmp
clc
cmp
mov
add
add
ja
lock
jp
das
add
dec
mov
jge
mov
add
clc
icebp
or
pop
cmp
or
sub
or
loope
ins
hlt
mov
sub
lock
or
pushw
push
rol
sbb
pop
dec
ror
jle
and
mov
jmp
pop
pop
clc
and
adc
loopne
add
loopne
jne
das
and
xor
aas
add
add
mov
mov
clc
or
sti
add
cli
je
fwait
test
pop
aam
lock
pop
movs
aaa
cmp
daa
ja
lock
pop
fldenv
adc
loopne
add
inc
or
jle
pop
add
clc
sbb
je
ins
hlt
pop
cmp
cmp
ins
add
mov
retf
scas
inc
dec
aaa
int
mov
add
aam
lahf
add
sub
retf
add
add
shr
add
inc
rcl
jle
add
clc
sbb
lahf
aad
mov
loopne
add
leave
add
lock
push
add
or
lahf
or
and
imul
sbb
xor
out
jns
pop
mov
pop
loopne
push
out
std
jne
aas
test
ds
cmp
shr
sar
sti
lock
and
mov
pop
loopne
pop
out
cmc
cmp
pop
inc
fist
jb
retf
cs
push
mov
sar
pop
push
shr
in
push
mov
js
(bad)
scas
in
or
fimul
in
ret
xor
dec
lock
shl
inc
lock
push
loope
ret
mov
out
stos
sub
clc
lahf
adc
es
js
inc
xchg
das
ss
push
add
mov
push
js
sar
cmp
or
std
cmp
mov
pop
mov
sbb
(bad)
and
ret
js
mov
and
inc
js
les
fidiv
push
(bad)
sti
pop
mov
pop
fidivr
fild
ins
ror
cmp
push
ret
fdivrp
adc
jne
lahf
stos
aaa
clc
imul
in
pop
lods
mov
cmp
stos
mov
cli
ss
mov
jg
cli
and
dec
lock
fisub
sub
push
jecxz
pxor
clc
adc
mov
rcr
cld
add
aad
jecxz
scas
call
fstp
aad
cmp
push
and
lea
(bad)
ja
lock
or
add
pop
pop
in
or
pop
test
call
or
xor
(bad)
push
in
jne
aas
and
adc
iret
nop
lock
push
lock
call
rol
mov
test
jle
loopne
add
aam
clc
mov
seto
ss
ret
mov
pop
dec
ret
mov
mov
add
ret
add
jmp
pop
test
fisttp
xchg
lahf
movs
mov
loopne
cmp
xchg
add
xchg
mov
add
or
das
rol
xchg
sub
jl
loopne
add
or
iret
push
rcr
mov
adc
adc
xor
lock
shr
(bad)
push
psrld
fmul
add
adc
xor
jne
add
add
jg
jl
adc
daa
add
or
mov
inc
aas
sbb
adc
jae
lock
cld
push
rcl
rcr
sbb
lahf
scas
cmp
and
sar
add
fist
test
add
mov
mov
lods
lahf
pop
add
and
mov
aas
dec
adc
add
or
ja
clc
sbb
lsl
psubb
loopne
daa
loopne
sub
add
clc
push
sub
adc
(bad)
cmp
add
pop
rcr
add
clc
dec
sub
or
or
sbb
add
mov
fwait
test
mov
sub
jg
mov
add
std
fild
or
jle
loopne
or
lock
gs
or
or
push
add
sbb
sub
scas
pop
jl
loopne
jne
not
clc
jl
stos
jmp
ror
loopne
or
pop
hlt
adc
pop
lock
mov
pop
test
aas
dec
pop
jbe
add
jne
pop
inc
shl
retf
into
push
push
je
das
sar
aad
jae
out
pop
lock
daa
loopne
xor
imul
pop
icebp
pop
xor
aad
jae
daa
clc
jno
jg
mov
(bad)
adc
and
data16
sahf
(bad)
imul
outs
dec
aaa
fnstcw
(bad)
gs
out
inc
mov
jnp
mov
pop
fdivr
sbb
mov
sbb
jnp
jmp
stos
icebp
ds
daa
clc
or
jg
out
push
aad
mov
out
mov
(bad)
pop
mov
sti
sbb
sub
mov
adc
jbe
fisubr
faddp
jmp
outs
cmps
add
mov
scas
add
xchg
scas
in
dec
cmp
das
push
shr
rcl
inc
adc
lods
jbe
add
xchg
mov
sbb
lahf
loope
mov
xchg
(bad)
fucomi
imul
cmps
jecxz
mov
sub
push
cmp
jg
loopne
js
loopne
pop
faddp
adc
arpl
adc
mov
adc
inc
jmp
push
jmp
jnp
add
test
outs
sub
enter
adc
cmp
pop
cmps
fst
idiv
aas
fimul
clc
sar
push
in
and
or
pop
push
clc
clc
sbb
cmp
mov
das
shr
mov
clc
int
or
mov
fldenv
aas
add
add
sub
jle
imul
loope
add
popf
test
add
loopne
add
clc
xor
loope
test
mov
inc
aas
push
push
jbe
add
push
pop
mov
jl
loopne
mov
dec
clc
test
xchg
add
add
das
jmp
add
fisttp
clc
scas
add
inc
aas
pop
pop
jbe
add
daa
loope
add
lock
jg
ror
add
or
test
pop
es
(bad)
cmp
pop
test
jl
xchg
fiadd
lea
data16
cmp
mov
mov
lock
shl
scas
jmp
sbb
clc
xchg
call
add
pop
lock
pop
add
adc
aad
ret
sub
mov
out
add
jae
lock
retf
into
push
loope
xchg
popf
lea
cmc
dec
out
adc
pop
pop
jl
lock
sub
mov
(bad)
jle
loopne
or
dec
rol
push
hlt
sbb
pop
psubb
jp
cmp
dec
rol
xor
push
add
fdivr
(bad)
(bad)
adc
pop
add
mov
outs
xchg
das
mov
adc
mov
sti
hlt
or
jmp
cmp
loopne
sub
retf
cmp
clc
ins
rcl
lock
jg
ja
lds
xor
inc
add
add
inc
pop
or
mov
cmc
sub
test
sti
or
add
add
adc
xchg
call
pop
aad
pop
push
clc
icebp
push
jmp
add
mov
test
fisubr
rcr
fsub
rcr
sub
xor
xlat
sub
cmp
inc
add
es
sbb
mul
shr
mov
outs
es
out
mov
fld
jp
jle
dec
xchg
loope
lahf
or
sti
dec
mov
out
inc
lock
je
pop
xor
dec
rcr
aam
loop
push
ins
hlt
xor
movs
mov
jno
iret
push
inc
jg
ficom
push
iret
and
repz
or
xchg
not
call
fisubr
fidiv
push
sar
ret
js
cmps
cmp
pop
test
ficomp
and
mov
sahf
mov
daa
icebp
pop
xchg
pop
mov
dec
adc
add
in
fbld
lahf
mov
sar
call
out
inc
mov
add
add
jge
leave
pop
xor
stos
or
dec
mov
mov
push
or
jp
mov
icebp
push
and
mul
mov
push
mov
mov
out
pop
lock
xor
add
add
mov
sar
adc
dec
inc
fist
out
push
dec
mov
sbb
pop
push
jbe
adc
sbb
push
(bad)
jp
cmp
dec
shr
mov
not
push
(bad)
mov
push
pop
mov
js
loop
or
cmp
mov
in
sar
adc
sub
pop
xchg
pop
lock
sbb
rol
out
cmps
mov
outs
push
not
daa
loope
add
cli
xor
outs
rol
fsubr
add
jg
clc
push
daa
loope
jmp
jle
(bad)
sbb
add
push
mov
out
lock
and
dec
loopne
xchg
(bad)
cmps
jmp
test
jp
sbb
jbe
sbb
and
push
add
add
and
daa
or
pushf
test
add
cmp
xor
addr16
mov
lock
cmp
or
cld
jno
fistp
jmp
(bad)
aas
rol
lods
lods
ss
push
shr
jbe
mov
push
cld
and
mov
or
push
mov
fisubr
or
sbb
push
rcl
add
shl
clc
pop
add
adc
sbb
mov
jg
rcr
push
mov
sbb
add
add
inc
jle
add
clc
jbe
or
mov
pop
movs
inc
clc
in
xor
mov
mov
je
stos
popf
lods
push
aaa
ss
mov
or
cld
ds
out
sar
fmul
loopne
xlat
aas
mov
sbb
add
sbb
jg
adc
or
sub
(bad)
test
dec
jge
jge
(bad)
lock
sti
adc
mov
mov
add
mov
cmp
(bad)
dec
pushf
movs
jg
pop
hlt
outs
cmps
push
lock
leave
jmp
lea
lods
cmp
mov
add
adc
push
(bad)
adc
inc
or
dec
hlt
xor
jle
ror
rol
mov
mov
add
je
cld
shr
mov
mov
lea
inc
pop
xor
out
(bad)
aad
jnp
add
hlt
jns
pop
pop
xchg
add
push
cs
data16
add
scas
sar
in
cmc
outs
popw
fimul
or
sub
push
loope
sar
in
sar
fcomi
sahf
mov
icebp
js
and
dec
loopne
sbb
imul
dec
adc
sub
out
(bad)
sti
pop
dec
lock
std
icebp
push
and
(bad)
loopne
push
mov
push
push
shl
sti
xchg
sbb
add
jns
fild
es
inc
js
push
sar
xor
addr16
pop
adc
pop
mov
jbe
imul
add
call
out
loopne
sar
mov
or
mov
gs
shr
xor
bound
add
mul
mov
cld
xor
xor
das
xchg
lds
das
and
inc
js
adc
lds
adc
popa
mov
js
test
iret
(bad)
sti
pop
jge
mov
cmp
dec
jge
add
dec
cs
mov
test
loop
lea
sbb
rol
pop
or
or
addr16
and
xchg
mov
aaa
mov
mov
sub
jnp
sbb
imul
add
add
jmp
sbb
or
ds
jge
clc
inc
(bad)
jno
push
add
add
(bad)
mov
sbb
adc
cmp
pop
jbe
xor
loopne
sbb
pop
(bad)
scas
and
dec
jecxz
and
xchg
mov
mov
gs
jl
ds
ficom
adc
xchg
arpl
dec
jmp
jl
loopne
add
pop
test
sbb
loope
mov
inc
pop
es
add
ret
inc
loopne
xor
in
or
or
mov
jg
ret
lods
(bad)
jle
dec
add
daa
mov
cmp
mov
pop
lea
(bad)
test
or
lock
mov
jl
sbb
add
stos
add
scas
daa
loopne
add
inc
pop
add
aam
sbb
das
rcl
mov
lock
push
push
shl
fidivr
int
cli
or
pop
jbe
sar
lock
add
loopne
cmc
xor
test
adc
gs
aaa
push
add
jle
mov
xchg
sbb
cmp
inc
ds
aas
loope
add
pop
std
fldcw
mov
outs
(bad)
ds
(bad)
mov
call
fst
mov
loopne
add
lods
lods
lods
(bad)
add
jle
inc
add
push
pop
in
pop
add
add
add
sbb
pop
push
cld
data16
dec
adc
and
sub
clc
jb
addr16
xor
pop
push
sar
push
clc
inc
add
or
mov
mov
jmp
mov
pop
shl
leave
push
stos
retf
outs
pavgb
aas
add
div
(bad)
ror
jl
lock
jp
cmp
out
(bad)
jbe
(bad)
jge
pop
cmc
or
data16
retf
shl
fwait
mov
sbb
mov
fmul
pop
cmc
adc
dec
lock
or
push
cld
shl
fld
stos
cmp
mov
pop
movs
call
outs
mov
mov
fwait
icebp
push
sar
mov
jne
aad
lock
adc
out
jnp
clc
lea
xor
in
mov
or
aad
ja
push
loope
arpl
xor
test
pop
outs
jb
icebp
fimul
lahf
fsub
mov
lock
xor
(bad)
pop
aas
add
daa
ins
sbb
fsubrp
icebp
inc
aas
cmp
stos
int
mov
xchg
repnz
sti
in
or
sbb
int
add
or
pop
mov
sbb
adc
mov
(bad)
fcomp
lock
and
pop
out
aad
cli
mov
sub
mul
mov
pavgw
fimul
xor
bound
div
stos
movs
js
loop
(bad)
or
daa
ja
sub
ja
or
movs
(bad)
jmp
fidivr
or
jae
(bad)
adc
pop
test
adc
mov
dec
daa
clc
ins
js
rcl
push
fdivp
icebp
jle
sti
movs
mov
pop
cmp
or
popf
hlt
das
not
rcl
loopne
inc
inc
pop
mov
pop
xchg
popf
ins
lahf
fmul
push
aas
mov
sub
push
jecxz
push
dec
aaa
dec
je
pop
outs
sti
in
mov
add
push
rol
dec
cmps
sahf
stos
imul
(bad)
pop
fsqrt
mov
push
pop
cmps
cmp
(bad)
shr
in
jecxz
clc
pop
add
ds
cmp
jle
loopne
sbb
clc
popf
sub
jl
adc
dec
cmps
mov
mov
sbb
add
sub
jmp
imul
mov
ds
outs
xor
scas
xchg
mov
pop
lock
iret
add
inc
xor
mov
clc
xor
jmp
cld
jno
out
mov
lea
lods
neg
leave
in
push
sbb
lock
lahf
inc
rcr
jl
ds
ds
and
push
jge
mov
pop
xchg
js
mov
xchg
or
fdivr
cli
and
out
lock
mov
add
xlat
adc
imul
inc
shl
jle
out
call
es
xchg
adc
sbb
shr
cld
mov
fdivr
lock
das
shr
and
and
por
mov
mov
or
jne
push
jl
sub
fild
pop
add
xchg
outs
inc
js
call
shl
push
rol
ja
ds
push
jbe
inc
pop
add
cdq
dec
lds
add
loopne
aam
push
add
loopne
push
hlt
test
lahf
movs
aaa
mov
je
dec
shl
lock
out
inc
rol
cmps
imul
mov
int
add
xor
test
pop
aaa
adc
adc
sbb
lahf
push
sbb
push
retf
lea
mov
mov
adc
call
mov
(bad)
jnp
ds
clc
push
fstp
sbb
loopne
arpl
pop
add
or
cld
xor
cmp
aaa
xchg
mov
jmp
lea
aas
push
clc
sub
mov
pop
rol
mov
mov
jb
adc
xor
jmp
outs
aad
fsub
cli
sbb
sbb
rcr
dec
imul
xchg
push
jp
jg
out
cmp
or
mov
clc
pop
std
fwait
mov
cli
push
int
mov
pop
sbb
gs
hlt
fisubr
mov
(bad)
popf
mov
push
ret
push
loopne
mov
std
js
jecxz
pop
mov
inc
add
dec
dec
mov
imul
lock
mov
sar
bound
xlat
adc
stc
js
test
or
aaa
test
aaa
jmp
out
test
xlat
jecxz
xor
aas
inc
xchg
das
in
or
lock
mov
add
push
mov
aas
test
js
mov
push
js
mov
jl
aas
fidivr
push
lods
jns
leave
pop
mul
xchg
inc
sar
pop
jmp
mov
std
daa
jns
and
jae
xor
pop
add
jns
cmps
fwait
je
sar
cmp
int
jnp
cmp
std
js
jecxz
inc
add
aaa
inc
in
xchg
cmps
adc
pop
push
mov
mov
fiadd
add
test
or
pop
(bad)
sti
jno
stos
fld
loope
add
xchg
dec
xchg
fstp
mov
or
jge
mov
arpl
add
in
push
cmp
jne
mov
imul
add
jle
das
pop
jl
or
add
push
or
ss
add
lock
and
nop
pushf
dec
ret
mov
mov
add
add
jge
repz
dec
ret
sbb
add
lods
jg
sti
add
dec
aas
loope
or
std
push
pop
add
mov
loopne
xchg
lock
jmp
push
cmp
push
add
mov
sar
or
jge
test
scas
sub
pop
and
ss
test
test
add
shr
inc
mov
or
je
ds
sbb
add
pop
add
in
dec
outs
das
loopne
jmp
cdq
cli
or
or
push
add
sbb
sti
add
lock
clc
jp
aaa
push
pop
in
xchg
sbb
fwait
pushf
lods
lahf
mov
jle
loopne
add
dec
shr
cld
or
pop
or
bound
xlat
cmp
daa
xchg
add
dec
inc
pop
pop
clc
adc
pop
sbb
dec
inc
clc
mov
xchg
pop
push
rcr
dec
clc
jp
lock
add
add
addr16
push
pop
jmp
push
push
shl
push
dec
xor
test
sti
sbb
fistp
lock
shr
add
xlat
sub
in
dec
cs
ins
mov
add
inc
cmp
rcl
das
adc
add
es
aam
mov
pop
clc
or
jne
pop
popf
aaa
mov
nop
cld
dec
outs
jb
stos
retf
into
scas
fst
dec
shl
add
inc
sbb
cld
fwait
pop
add
adc
sub
and
mov
das
ins
xchg
pop
stos
ds
xchg
call
shr
sar
movs
add
pop
je
pop
add
sar
xchg
cmp
iret
rol
fsub
add
popa
jne
(bad)
adc
in
xor
not
lock
clc
jp
(bad)
mov
add
mov
aam
sbb
sbb
mov
fst
rcr
jp
daa
aaa
pop
sti
in
arpl
sbb
fstp
add
daa
neg
(bad)
jmp
jnp
fisubr
ret
mov
dec
aaa
lahf
push
shl
mov
jl
out
jae
inc
jg
out
inc
mov
scas
call
int3
outs
mov
add
sub
push
mov
loop
adc
cmp
outs
(bad)
jnp
add
lods
aad
pop
jnp
or
fist
xchg
push
push
push
sti
movs
in
fisttp
pop
aaa
rcr
out
popa
mov
push
sar
cld
xchg
mov
hlt
cld
test
loop
mov
mov
pop
mov
popa
js
imul
sub
or
clc
sub
inc
imul
mov
scas
daa
loopne
loopne
mov
push
add
dec
rcl
jge
ficomp
lock
out
sub
clc
xor
scas
and
sbb
jle
mov
scas
aad
mov
sti
in
icebp
pop
mov
or
xor
out
cdq
js
ret
xor
fistp
mov
jge
scas
call
pop
jmp
mov
or
or
pop
inc
ret
cld
or
push
add
pop
lock
ror
je
cmp
out
mov
lahf
pop
js
mov
xor
loop
lods
mov
pop
mov
sbb
add
xchg
lock
ds
xchg
cli
sbb
pop
and
mov
iret
and
and
hlt
or
clc
lahf
add
pop
cld
mov
retf
lahf
lock
add
mov
ds
jg
xchg
(bad)
sbb
ret
fmul
fldenv
lods
imul
fld
add
lock
rcl
lock
es
or
dec
hlt
outs
(bad)
push
loope
push
(bad)
(bad)
lock
ret
ins
hlt
icebp
(bad)
jb
add
add
sub
outs
add
lods
lahf
clc
or
xchg
or
push
aaa
push
push
hlt
mov
shr
push
shr
mov
outs
add
or
push
ror
sti
add
mov
rol
or
dec
pop
arpl
add
add
add
clc
jle
sbb
loopne
cmp
das
add
mov
lahf
(bad)
test
xchg
lahf
fcom
(bad)
dec
rol
pop
push
clc
inc
sbb
inc
ja
cmp
clc
sbb
pop
push
clc
adc
sub
lahf
scas
pop
jbe
or
pop
jmp
add
sbb
outs
call
pop
or
or
fsubp
fisubr
lds
dec
mov
mov
add
dec
shr
pop
sbb
pop
call
push
pushf
cs
sbb
cdq
sub
jg
cld
sub
je
pop
add
clc
add
and
outs
daa
loopne
add
add
stc
pop
aaa
arpl
fsubp
in
adc
dec
pop
jbe
adc
fisttp
clc
sub
fbld
popf
call
ss
les
push
loope
loop
and
and
movs
sub
in
call
xchg
mov
mov
lock
sar
xor
ret
ins
repnz
xchg
call
mov
lahf
(bad)
mul
(bad)
ds
bound
lahf
cmps
sbb
and
iret
and
xor
add
push
fisubr
cmc
or
inc
or
adc
push
mov
gs
jecxz
adc
cmp
iret
sar
int
ret
adc
out
ss
cs
xchg
outs
mov
xor
std
or
ficomp
jl
fidiv
add
mov
lds
loopne
dec
outs
jb
adc
mov
push
jbe
jecxz
adc
xchg
lock
mov
ds
ficomp
ss
out
jge
inc
pop
fld
fdivr
js
loopne
add
adc
aas
dec
daa
clc
pop
xor
bnd
jle
fisubr
sahf
scas
sub
cs
mov
(bad)
aaa
xchg
cmps
adc
jne
pop
xchg
and
push
loope
xchg
mov
ficom
(bad)
into
sar
loope
add
adc
add
outs
(bad)
test
pop
ret
test
mov
or
and
ja
lock
fnstsw
ret
sti
add
pop
mov
int
imul
or
dec
and
pop
or
dec
mov
retf
aam
pop
and
ss
outs
mov
jp
push
fisttp
lock
imul
push
ret
fwait
xlat
add
dec
mov
outs
add
sub
mov
clc
je
dec
push
xchg
lock
add
aam
js
mov
hlt
outs
cmps
mov
loope
mov
(bad)
pop
adc
sbb
invlpg
add
(bad)
sub
and
push
shr
sub
aaa
arpl
pushw
add
push
inc
aaa
call
lahf
add
dec
adc
fsubp
xchg
dec
outs
mov
clc
sbb
lahf
cmps
cmc
adc
push
shl
push
aad
adc
mov
jb
aam
push
add
sub
inc
add
jl
ds
jle
loopne
call
jae
clc
pop
mov
bound
pop
pop
jne
sbb
sub
test
loope
mov
(bad)
gs
lock
mov
pop
inc
mov
lock
add
add
in
fwait
pop
test
mov
jl
int
or
in
push
rol
dec
outs
jb
add
std
push
clc
sub
stos
mov
push
lahf
add
or
cmp
pop
mov
jmp
ins
inc
hlt
jnp
aas
add
inc
cmp
lea
sti
inc
outs
jb
add
pop
jl
add
pop
ja
add
clc
or
aas
dec
adc
push
adc
cmp
addr16
push
pop
push
cld
adc
(bad)
aaa
mov
xor
add
add
jb
add
scas
mov
jg
sbb
adc
out
cmps
mov
int
ins
push
clc
xor
outs
pop
cld
push
shl
or
sbb
inc
ror
loopne
add
mov
mov
fidivr
lods
push
ret
dec
pop
cmps
cmps
sbb
jne
push
jbe
stos
jmp
xor
mul
add
imul
js
ret
add
dec
fidiv
add
loopne
mov
es
scas
sub
std
ss
sbb
adc
movs
push
call
xchg
dec
outs
xchg
jle
fimul
retf
into
ss
xchg
stos
(bad)
(bad)
jbe
ds
pop
push
fldenv
addr16
lea
out
pop
lock
inc
rcl
mov
xchg
fidiv
aaa
test
add
cmp
mov
dec
loopne
stos
add
dec
lock
xor
retf
push
and
std
js
and
daa
push
ds
fcomip
mov
icebp
pop
mov
xchg
jmp
sahf
inc
rcl
cmp
and
repz
aaa
pop
pop
jbe
adc
inc
sub
imul
leave
push
mov
mov
das
add
cmp
aaa
js
je
add
or
js
dec
cmp
aam
fisttp
out
adc
sbb
lea
ret
jnp
fisubr
clc
idiv
loope
test
ret
pop
xor
pop
mov
dec
out
or
rcl
aam
jecxz
clc
adc
pop
add
hlt
xchg
(bad)
push
xchg
frstor
or
mov
mov
loopne
cmp
clc
not
jne
sti
data16
(bad)
jle
ss
(bad)
pop
loopne
mov
lods
shl
cld
push
rcl
cmp
cmp
pop
jp
sub
dec
clc
bound
jle
adc
loopne
sub
or
pop
rol
xor
or
jl
loopne
add
rcl
ds
xchg
lock
mov
dec
clc
inc
or
cli
imul
dec
jecxz
or
jae
retf
(bad)
ja
out
cmps
fst
xor
stos
push
mov
bound
mov
mov
loope
imul
pop
fst
int
cmps
popa
mov
cmp
out
(bad)
mov
mov
(bad)
shl
fcomp
sbb
sub
add
aas
or
cmp
mov
call
into
push
inc
xchg
jg
scas
in
sahf
and
and
ja
mov
mov
cld
and
out
jle
shl
jl
loopne
jmp
aad
push
cld
add
mov
add
sbb
xchg
sbb
push
addr16
rcl
ficom
dec
(bad)
or
cmp
or
push
or
loopne
add
and
fldcw
imul
imul
out
and
push
jl
rol
je
aas
push
loopne
(bad)
push
psubb
sbb
popf
mov
push
ins
mov
cmp
pop
pop
mov
clc
or
xor
aam
leave
aad
jl
loopne
add
jmp
pop
fiadd
fidivr
add
dec
cs
imul
push
call
cld
inc
rcl
lock
cmc
dec
out
test
mov
scas
add
in
jbe
sub
xchg
jp
or
jge
(bad)
dec
in
(bad)
jnp
(bad)
test
jg
pop
mov
or
dec
mov
sti
mov
call
std
fwait
sbb
push
lods
mov
push
fisub
jle
add
pop
dec
shl
mov
sbb
dec
aaa
test
ds
push
push
int3
and
inc
xor
ds
dec
js
loope
mov
jge
fdivp
lock
(bad)
neg
into
ds
cli
add
push
cmp
out
xchg
add
push
scas
ficom
stos
sub
sti
scas
cmp
cmps
push
shr
ror
push
mov
push
xchg
lea
sub
jge
add
or
popa
mov
out
and
daa
mov
(bad)
ins
jbe
push
or
fsubrp
lock
sbb
neg
push
outs
sar
mov
or
loopne
scas
leave
pop
mov
xor
out
retf
lock
(bad)
sti
push
mov
test
stos
rcl
mov
test
push
in
sub
rcr
push
sbb
lea
xor
retf
icebp
pop
xor
push
jmp
push
shr
jnp
dec
lock
pop
xchg
cmp
dec
daa
loopne
mov
jb
fmulp
lock
add
fisttp
cli
sbb
out
pop
mov
rcl
push
jl
ds
(bad)
mov
and
dec
call
xchg
pop
test
cli
popf
pop
aas
push
lds
mov
jle
sub
bound
mov
mov
mov
ja
jl
lock
arpl
or
add
lock
sbb
iret
add
cmp
not
cli
adc
out
push
inc
outs
jmp
add
test
test
or
ret
or
cmp
outs
mov
(bad)
addr16
jle
push
shl
mov
jl
loopne
add
pop
or
cmp
pop
add
add
ds
sbb
sti
or
sub
test
fist
sub
lahf
stos
or
loopne
add
add
dec
fst
sbb
sbb
in
add
psubb
rcr
or
xlat
pop
or
jbe
lock
psubb
sub
cs
inc
jmp
push
cmp
scas
movs
mov
rcl
mov
scas
add
ss
xchg
fild
js
sbb
and
sti
add
or
pop
cmp
in
(bad)
sub
fstp
pop
test
(bad)
jle
fwait
inc
pop
add
popa
shl
dec
sub
mov
lock
jle
loopne
cmp
clc
sbb
pop
lock
test
imul
or
pop
add
aaa
cmp
xchg
psubb
or
add
(bad)
inc
add
fld
pop
fist
ins
jmp
jle
jl
add
data16
loopne
or
push
rol
int
mov
cmc
es
inc
rcr
(bad)
lock
push
pop
or
nop
sub
jg
jle
add
leave
pop
fild
fidivr
sbb
scas
dec
rol
leave
jge
call
lock
cmp
or
loopne
or
jb
push
stos
retf
scas
aas
add
repnz
fnsave
jle
fdivp
loop
inc
jmp
jbe
mov
js
jo
lahf
xor
sbb
cmp
dec
ins
hlt
pop
adc
mov
jns
ret
jge
(bad)
mov
mov
lea
repz
add
push
test
xlat
jecxz
outs
int
cmp
neg
fimul
push
retf
push
inc
push
fiadd
mov
lahf
pop
and
mov
icebp
pop
inc
rol
add
or
jne
lahf
mov
(bad)
loope
pop
adc
icebp
(bad)
cmp
call
xchg
fsubp
jae
push
lds
push
(bad)
cmps
sub
dec
loopne
push
out
test
loopne
and
cmp
out
mov
outs
mov
mov
jne
xchg
loopne
pxor
sahf
xor
icebp
pop
mov
stos
or
push
inc
lock
mov
hlt
inc
sti
cmp
cli
jb
iret
and
aaa
loop
add
or
leave
js
xlat
fwait
pushf
in
xchg
fild
jne
cmp
int
clc
sub
test
push
hlt
inc
popf
es
adc
xor
test
xchg
or
hlt
(bad)
fs
lock
loop
or
push
or
sub
loopne
cmc
adc
ins
lea
out
add
mov
fidiv
xchg
sti
or
(bad)
test
shr
and
popf
sub
sub
cmps
add
dec
clc
sub
pop
add
nop
mov
cmp
test
cmps
jno
movaps
mov
push
outs
mov
dec
in
and
xor
loop
fst
xchg
add
psubb
dec
clc
pop
add
arpl
add
scas
fst
add
push
sti
data16
aam
mov
fstp
je
imul
ror
jnp
cmp
clc
adc
xchg
add
loopne
sbb
shl
fild
arpl
in
mov
and
fwait
scas
in
stos
or
mov
jle
rcr
dec
sbb
xchg
das
ror
clc
ins
mov
rol
adc
add
adc
adc
out
jle
push
ret
movs
sbb
out
mov
mov
push
clc
je
loope
mov
jle
shr
test
dec
jne
ja
lock
scas
adc
sbb
push
xor
inc
sub
and
in
add
mov
sbb
push
lock
add
scas
add
popf
loopne
cmp
add
sub
(bad)
in
fldenv
ds
adc
inc
outs
shr
imul
pop
mov
mov
cdq
pop
aas
icebp
mov
xchg
or
(bad)
daa
shl
fs
adc
ss
or
jne
sbb
and
jmp
(bad)
(bad)
dec
in
std
les
jge
mov
jg
lock
ins
sbb
sbb
adc
retf
or
fnstsw
ror
ret
sbb
adc
pop
add
daa
clc
pop
rcr
mov
lock
clc
pop
or
pop
pop
fldcw
test
jnp
outs
rcl
or
es
add
out
data16
jmp
jl
ss
scas
ret
js
adc
xchg
js
sar
mov
cmp
fimul
imul
mov
inc
outs
fisubr
icebp
pop
and
cdq
mov
test
js
add
mov
adc
imul
sub
data16
movs
mov
stos
jmp
jecxz
adc
inc
js
jge
pop
js
(bad)
dec
mov
cmps
rcl
not
lock
loopne
and
loopne
jne
fild
loop
pop
(bad)
loop
adc
mov
jge
ss
push
loopne
or
jle
fidiv
lods
jbe
add
(bad)
sti
pop
js
stos
stos
jbe
add
fiadd
mov
cmp
or
outs
in
and
jae
ins
cmps
or
and
mov
leave
cmc
sar
mov
xchg
movs
jmp
jle
fist
or
xor
mov
js
test
jb
push
mov
test
jle
push
hlt
stos
in
sbb
sbb
mov
push
mov
cmp
fimul
das
push
push
in
sbb
mov
out
fcmovnbe
push
imul
stos
icebp
ds
aas
add
add
pop
mov
ds
sti
in
imul
xlat
or
ja
lock
inc
jg
lock
(bad)
sar
fst
lock
push
loope
add
push
lods
add
xor
pmovmskb
fcomp
pop
add
or
pop
add
sbb
adc
adc
mov
jl
loopne
mov
sbb
call
add
adc
cld
push
shr
push
push
jbe
or
jle
ds
fisubr
mov
aad
aas
push
or
push
fild
clc
sbb
lahf
inc
ret
movs
std
push
cdq
and
dec
stos
call
popf
jmp
rcr
stos
dec
rcl
mov
push
pop
fst
scas
mov
aaa
aaa
add
add
push
xor
xchg
fld
sbb
scas
fisubr
stos
mov
add
(bad)
mov
jb
iret
ror
sbb
dec
outs
jb
test
xchg
add
dec
rcl
fisttp
push
add
push
xlat
dec
or
mov
aas
movs
mov
sti
sub
clc
add
mov
xor
jp
dec
add
or
pop
cmc
or
sub
mov
pop
mov
pop
xchg
push
hlt
in
das
rcl
stc
push
xchg
das
dec
cmp
inc
dec
mov
mov
add
inc
mov
pop
and
pop
jle
add
pop
lock
add
clc
xor
mov
imul
inc
popf
loopne
cmp
aas
mov
push
lods
lahf
mov
pop
ss
fisub
xor
jecxz
hlt
repz
xor
arpl
adc
pop
add
enter
ret
push
cmp
test
shl
lock
fild
std
push
shl
retf
cs
pop
arpl
imul
push
sar
jb
or
inc
cmp
das
outs
jb
push
hlt
jecxz
out
daa
loopne
or
or
pop
pop
mov
add
inc
ret
push
or
sbb
test
mov
in
adc
ss
outs
pop
jl
inc
pop
cmc
push
inc
outs
shr
in
mov
ds
jle
mov
loopne
sar
mov
cmp
mov
pop
sbb
pop
xor
xor
fld
pop
outs
jb
loopne
xor
xor
js
lods
cmps
sbb
push
imul
mov
xor
add
add
xor
movs
fwait
inc
mov
add
ret
mov
adc
cmps
jmp
fidivr
mov
mov
cli
arpl
arpl
int
pop
xor
dec
outs
jb
pushf
loope
stos
or
add
outs
(bad)
imul
add
aad
jl
fidiv
adc
and
add
cmps
sbb
ret
loopne
lock
(bad)
idiv
loop
sbb
pop
loope
mov
push
test
xor
popa
mov
outs
js
sar
mov
add
retf
or
jnp
fidiv
mov
lahf
mov
or
pop
cmp
loope
je
mov
mov
adc
call
cmps
std
push
jne
jl
mov
fdiv
add
fisubr
jne
jmp
add
xor
cli
ss
(bad)
not
fidivr
popa
or
(bad)
movs
mov
jle
aas
add
push
mov
mov
mov
add
loope
nop
lock
je
aas
push
mov
add
imul
aas
add
mov
add
jg
retf
dec
js
loopne
add
pop
jmp
push
js
push
imul
repnz
js
jne
pop
adc
lods
jg
jne
fild
inc
fbld
gs
sbb
addr16
outs
add
xor
fimul
clc
ret
and
adc
jmp
mov
test
popa
mov
xor
mov
(bad)
out
sbb
outs
add
sub
shr
sbb
test
or
push
or
(bad)
test
fstp
mov
jmp
test
or
dec
shl
jl
sbb
xchg
lock
aam
outs
(bad)
lock
aad
imul
lods
mov
rol
add
mov
xchg
outs
xor
sub
sbb
mov
outs
or
or
and
fwait
sub
std
outs
add
mov
ins
add
add
retf
add
adc
or
mov
sbb
add
pop
add
inc
fstp
(bad)
fadd
jmp
arpl
inc
rcl
add
ret
cmp
lock
aaa
adc
fdivrp
int
add
mov
mov
shl
xchg
(bad)
lea
lock
rol
jmp
shl
mov
lock
aaa
add
jecxz
inc
pop
psubb
loopne
add
push
pop
loope
loopne
sbb
cli
div
push
clc
mov
or
clc
jl
addr16
fisttp
clc
inc
push
hlt
pop
add
rcl
mov
dec
mov
dec
je
mov
mov
hlt
outs
out
ror
inc
dec
mov
(bad)
jecxz
xor
js
ret
jnp
fsubrp
test
in
(bad)
aas
cmc
es
shr
retf
lock
mov
loope
mov
movs
rcl
js
push
ror
adc
cli
int
mov
jle
outs
mov
cli
jg
jge
fiadd
js
(bad)
idiv
scas
ret
sti
pop
add
test
inc
call
mov
lods
scas
pop
imul
jle
cmps
rcr
pop
fisubr
ja
test
or
mov
outs
lods
mov
jge
(bad)
daa
cli
sub
daa
jecxz
test
mov
cli
ss
cli
cmp
xchg
jecxz
mov
hlt
imul
adc
and
movs
cmp
(bad)
lods
mov
call
and
js
sar
call
xchg
test
scas
jno
(bad)
mov
or
fist
sar
add
mov
clc
dec
fidivr
mov
fimul
ds
jmp
scas
aaa
mov
out
movs
jmp
jle
fimul
clc
and
std
retf
sbb
cmps
dec
xchg
loopne
stos
ss
sbb
call
xor
sub
xchg
jmp
jl
add
or
inc
mov
pop
(bad)
in
dec
jnp
dec
shl
outs
icebp
out
sbb
clc
aad
ret
aas
pop
sti
movs
push
sub
imul
adc
or
(bad)
loopne
add
dec
clc
cmp
into
shl
inc
mov
daa
cld
adc
out
add
add
or
push
stos
call
mov
fistp
sbb
pop
or
jle
push
loope
dec
clc
sbb
and
dec
rol
lods
or
jl
or
jecxz
setae
fld
and
je
xchg
or
sbb
lahf
stos
(bad)
mov
call
cld
data16
lock
or
cld
xlat
push
hlt
or
mov
je
(bad)
mov
jle
loopne
add
clc
test
xchg
dec
add
mov
std
outs
add
fsubp
inc
add
sbb
jl
lock
add
and
inc
call
add
cmps
shr
jbe
lock
es
lock
pop
add
add
add
adc
mov
lock
cmc
xor
out
call
lods
push
loope
add
mov
mov
hlt
push
pop
sub
call
test
or
inc
add
clc
adc
add
mov
clc
jp
das
and
repz
mov
lock
or
cwde
dec
lods
add
das
rol
clc
sbb
fild
xchg
jle
adc
push
push
add
inc
pop
arpl
push
leave
ins
add
or
sbb
cli
xor
fisttp
clc
popf
sbb
out
pop
clc
jp
jle
loopne
cmp
fimul
clc
bound
dec
add
add
dec
or
add
mov
lahf
or
cmp
jle
loopne
(bad)
sbb
aas
adc
popa
shr
cdq
fisttp
js
rcl
sbb
movs
sbb
scas
ror
jle
daa
clc
sub
(bad)
stos
call
sbb
and
not
inc
clc
or
call
(bad)
loop
pop
fidivr
push
sar
idiv
pop
inc
inc
pop
mov
daa
addr16
xchg
sti
or
fld
fadd
mov
test
cld
jbe
rcr
in
sbb
out
xor
fisubr
cmps
loope
xor
std
add
push
mov
jns
(bad)
mov
push
cmp
jecxz
dec
(bad)
lock
aaa
sbb
push
mov
(bad)
call
shl
add
add
jg
shr
jnp
call
fidiv
loop
mov
jl
scas
and
imul
mov
dec
cmp
leave
sti
outs
mov
lods
imul
call
jnp
ficom
(bad)
fwait
outs
dec
add
repz
or
xlat
loope
mov
fld
cs
lahf
fdiv
repz
cmp
lock
mov
or
mov
add
jg
mov
lahf
lock
out
outs
sti
in
push
mov
cmp
adc
xchg
popf
in
xchg
mov
aaa
sub
loopne
sbb
push
loopne
push
out
dec
lock
stos
jg
jbe
call
stc
mov
sahf
mov
pavgw
test
stos
lods
js
adc
xchg
jle
adc
sbb
pop
push
sti
sbb
add
mov
imul
imul
add
add
adc
or
add
sub
clc
push
shr
dec
aas
loope
and
push
aaa
das
imul
add
inc
pop
fldcw
xor
mov
lahf
stos
popa
mov
xor
or
pop
add
hlt
ss
outs
out
rcl
mov
lock
jle
loopne
sbb
test
or
add
cwde
test
add
outs
sub
ja
ds
ret
mov
cld
pop
sar
test
clc
adc
mov
aad
add
pop
test
inc
inc
jg
lock
jnp
pop
mov
ds
dec
add
fsubp
outs
rol
leave
xor
fnstsw
clc
push
mov
scas
push
inc
mov
arpl
fistp
hlt
xchg
add
movs
ss
adc
pop
jmp
mov
add
neg
std
sub
cmp
pcmpeqb
fistp
js
lock
sbb
lock
mov
or
adc
xchg
adc
or
xchg
data16
frstor
in
xchg
fisubr
rol
popf
jp
add
test
add
sbb
dec
add
in
add
sub
mov
mov
leave
in
lock
outs
add
fcmovb
pop
fwait
inc
outs
aas
loope
jmp
daa
push
pop
clc
sbb
xlat
add
add
jmp
ds
lock
add
jle
out
movs
mov
add
scas
lea
mov
pop
jl
sub
div
(bad)
sub
retf
add
std
dec
rcr
jne
mov
adc
xor
pop
push
cld
push
ror
push
loopne
lea
or
add
jg
clc
push
push
hlt
ss
pop
lock
or
sbb
jae
ds
pop
mov
push
shr
ret
sti
inc
mov
sub
jle
dec
lock
lock
adc
mov
aaa
push
sub
or
inc
icebp
jle
out
xor
sub
sbb
inc
pop
in
and
sti
imul
pop
sar
pop
movs
jg
xor
sahf
mov
cmp
lock
xor
out
xor
hlt
mov
cs
out
lods
(bad)
fsubp
in
lahf
pop
add
jmp
ds
jle
xchg
stos
jmp
push
ror
movs
fwait
inc
add
push
fisubr
mov
je
fisttp
jmp
out
(bad)
jnp
fdivp
aam
pop
ret
cmp
fild
pop
mov
jle
push
dec
cs
xor
fiadd
aas
rol
fadd
das
daa
loopne
jmp
test
push
xchg
das
push
sar
or
js
outs
xchg
das
call
div
pop
push
ror
jnp
fidiv
jnp
fidivr
lock
mov
pop
or
ins
js
mov
push
iret
loope
call
aaa
cmp
daa
fiadd
pop
ins
add
pop
sar
mov
js
call
das
(bad)
sti
jo
sar
test
pop
lock
xchg
push
or
(bad)
lock
mov
out
pop
popf
jne
in
pop
scas
leave
pop
ins
adc
mov
mov
sub
loopne
test
xlat
pop
lock
xor
or
add
mov
add
div
mov
lock
jle
xchg
push
sti
imul
sbb
mov
mov
pop
or
add
xchg
sub
loope
add
and
call
hlt
xor
imul
outs
pop
jbe
ror
sti
xor
or
addr16
lahf
jmp
mov
ss
pop
inc
ret
mov
pop
push
cld
retf
or
(bad)
pop
lods
mov
or
jge
fild
push
jnp
lock
pop
psubb
jl
loopne
or
sub
jae
lock
pop
stos
xor
inc
mov
or
sub
jle
sub
mov
fidivr
jl
add
or
add
fist
sar
clc
lods
call
clc
adc
addr16
mov
stos
or
ret
call
jle
loopne
add
or
lds
jno
lock
add
xchg
or
sub
cmps
add
add
jnp
or
sbb
dec
fsub
cld
pop
lock
jb
mov
mov
lock
clc
sub
out
mov
clc
xor
mov
gs
mov
jmp
push
lock
jle
shr
add
push
rcl
mov
arpl
mov
jns
pop
mov
fisttp
lock
das
add
jg
lock
xchg
add
loopne
add
add
addr16
loope
mov
rcl
jle
loopne
cmp
xlat
call
(bad)
xor
or
aas
push
(bad)
lock
add
scas
int3
rol
push
iret
push
xchg
pop
cmp
jbe
dec
jl
js
loopne
jmp
in
add
mov
jle
push
dec
mov
jnp
fsubrp
lock
jle
fidiv
xor
jle
fimul
jne
punpckhwd
je
arpl
push
shl
loopne
pop
or
loope
dec
fldcw
add
xchg
adc
xor
push
jecxz
push
push
hlt
retf
jne
mov
pushf
loopne
lock
aas
cmps
sub
neg
jle
fidiv
adc
inc
mov
outs
jb
or
(bad)
icebp
push
sar
int
xor
data16
stos
jbe
fidiv
clc
dec
or
or
fwait
mov
fisttp
xor
js
imul
mov
cli
daa
imul
clc
aad
pop
mov
jmp
not
fimul
pop
cmps
sub
loopne
imul
add
sar
fwait
gs
movs
into
shr
outs
icebp
sahf
mov
sbb
repnz
loopne
add
vmovsd
std
mov
sub
fisttp
pop
mov
or
xor
inc
fidiv
es
(bad)
test
jg
xchg
fstp
pop
(bad)
jnp
fidiv
std
xchg
mov
push
mov
push
ret
xor
fwait
pop
cmp
inc
loopne
fst
lahf
lock
xor
mov
add
cs
cmp
loopne
mov
mov
add
shr
inc
mov
mov
cmc
sub
pop
movs
mov
rcr
stos
mov
cmp
fwait
gs
dec
inc
clc
dec
jne
dec
das
retf
ins
cmp
jl
iret
push
cld
je
pop
add
pop
rol
and
test
mov
sub
or
adc
xlat
add
loopne
add
clc
and
cmp
cs
xor
outs
mov
(bad)
push
loope
push
(bad)
mov
push
loope
je
outs
sub
imul
hlt
push
sub
and
dec
clc
jp
dec
pop
cld
sbb
test
jl
outs
jb
sub
dec
sar
push
jbe
addr16
adc
pop
or
or
xchg
inc
jp
sti
add
and
(bad)
gs
adc
pop
push
hlt
out
cld
adc
push
add
pop
movs
inc
js
dec
sbb
mov
pop
or
xor
and
adc
inc
fidiv
arpl
adc
mov
jbe
push
add
cmp
das
(bad)
and
jno
mov
mov
daa
jl
loopne
cmp
sub
jle
and
pop
add
xchg
(bad)
(bad)
fcom
pop
sub
clc
pop
jge
lods
push
mov
rcr
add
pop
jl
daa
clc
ins
add
imul
sbb
jb
iret
add
add
mov
pop
add
fisttp
lock
jmp
leave
add
invlpg
rcr
mov
loopne
add
psubb
pop
xlat
add
adc
push
shl
dec
mov
cmp
popa
rcl
loopne
rcr
outs
xchg
das
ins
arpl
cmp
pop
add
push
mov
outs
push
push
ins
sub
inc
add
cmp
xlat
jmp
popf
sbb
xor
pop
fstp
mov
mov
fisub
or
pop
enter
adc
imul
xor
jmp
fwait
pop
mov
inc
lahf
lods
lea
mov
icebp
(bad)
ja
xchg
adc
xchg
adc
sahf
xchg
inc
js
loop
sbb
or
imul
aam
clc
pop
repnz
ret
xchg
sbb
add
mov
icebp
pop
(bad)
not
clc
cmp
adc
or
mov
cli
xchg
mov
jp
test
push
inc
aas
pop
fisubr
jmp
gs
out
pop
stos
stos
jbe
fidiv
imul
sub
sti
sbb
das
(bad)
sti
jge
stos
popf
xchg
inc
cli
ss
or
mov
mov
mov
jl
mov
out
sti
lock
ret
fsubp
xor
jle
push
jbe
mov
sbb
sbb
hlt
and
shl
outs
pop
loope
rcr
mov
outs
xor
js
sar
stos
lds
add
xor
repz
cmp
jb
mov
jmp
push
das
and
lahf
ret
mov
cmp
in
loop
mov
inc
clc
push
mov
je
shl
lea
jbe
mov
sbb
add
aas
scas
jmp
pop
jmp
sbb
mov
lock
clc
pop
shr
clc
lds
cmp
stos
jb
pop
add
test
pop
xlat
lea
mov
pop
aad
ds
clc
dec
mov
scas
inc
shr
mov
add
or
or
lahf
and
or
imul
cs
dec
inc
aas
dec
mov
fimul
loopne
hlt
or
mov
sbb
add
fbld
test
aad
pop
jnp
lahf
cmps
mov
add
std
cmp
aaa
ss
into
push
loope
arpl
jmp
sub
hlt
fst
add
inc
shl
jl
lock
add
pop
jl
loopne
imul
add
cmps
push
fistp
or
dec
pop
(bad)
add
pop
sar
or
aaa
rol
jmp
fidivr
retf
gs
test
fdivr
cmp
fild
clc
icebp
pop
sub
loopne
add
clc
add
call
push
mov
mov
xor
lock
fimul
aaa
xchg
dec
inc
call
loopne
add
retf
loopne
add
xchg
sub
bound
cli
(bad)
cli
sbb
loope
mov
mov
test
cmps
sbb
mov
jne
sti
movs
dec
clc
xor
jg
loopne
push
sar
cmps
rcl
xor
arpl
in
mov
loopne
xor
xchg
fisttp
dec
add
or
lock
scas
push
ror
loopne
add
lahf
inc
inc
aas
or
aad
iret
and
iret
push
pop
in
jno
rcl
stos
retf
scas
push
lock
imul
mov
and
imul
hlt
jnp
xor
xor
adc
jge
jp
add
pop
jl
lock
or
adc
ja
lock
rcr
xchg
pop
sbb
mov
out
add
cmp
and
ja
cmp
add
or
imul
mov
aad
mov
xchg
ret
add
push
fisub
loop
call
test
std
fwait
pop
stos
popa
mov
rcl
sub
mov
mov
(bad)
sti
sbb
mov
cmp
mov
mov
sub
clc
jp
addr16
pxor
hlt
es
push
hlt
push
js
sar
popf
js
adc
mov
dec
ret
add
ins
xchg
fisttp
jl
fidiv
(bad)
aam
fdiv
push
hlt
push
lock
adc
lods
xchg
mul
mov
sbb
(bad)
es
fadd
mov
call
sub
dec
lock
xchg
in
hlt
(bad)
cmp
mov
es
mov
lahf
lock
stos
test
mov
mov
jge
pavgb
clc
sbb
xchg
sub
std
js
rol
fmul
dec
or
jle
jg
sbb
outs
xor
psraw
dec
add
xchg
scas
call
sub
jecxz
movs
outs
push
sbb
lock
xchg
pop
inc
xor
add
xchg
imul
mov
mov
aaa
cmp
in
imul
sub
cld
jns
jl
lock
imul
cld
pop
add
lock
sub
push
pop
in
and
adc
sub
rol
pop
psubb
xchg
mov
add
aad
iret
add
mov
push
loopne
cmp
adc
test
clc
cmp
(bad)
test
cli
xor
pop
push
fnstenv
pop
pop
clc
lds
add
psubb
lahf
mov
jle
fisubr
pop
jl
lock
dec
rcl
imul
add
lock
call
imul
push
imul
test
mov
lock
gs
arpl
ins
adc
jnp
loopne
inc
hlt
push
add
scas
daa
loopne
add
clc
sbb
mov
jmp
sub
jne
adc
or
jp
mov
inc
rol
jg
lock
adc
mul
(bad)
dec
clc
fcom
shl
dec
outs
sbb
and
and
push
loopne
add
sbb
in
adc
sub
push
sbb
cld
rcl
mov
adc
mov
push
loopne
stos
lods
(bad)
mov
pop
ins
mov
add
shl
jle
inc
clc
cmp
mov
call
jl
shr
loopne
or
dec
mov
mov
sbb
add
arpl
mov
jl
pavgb
add
sahf
or
ds
ins
hlt
pop
add
clc
push
(bad)
daa
loopne
mov
xor
inc
pop
ret
xchg
pop
adc
ins
and
adc
cwde
es
or
mov
clc
jne
lar
ds
clc
jp
psrlq
scas
add
pop
and
pop
jl
call
add
push
loopne
add
loopne
xor
push
lock
dec
outs
mov
js
inc
outs
(bad)
lock
add
push
ret
jg
or
mov
in
adc
push
loope
stos
mov
call
dec
scas
sbb
mov
lahf
pop
or
push
enter
aad
adc
xor
inc
pop
xor
push
test
xor
push
(bad)
js
push
rcr
ds
push
mov
(bad)
icebp
js
sub
pop
in
xchg
xor
sub
js
sbb
data16
(bad)
mov
shl
mov
call
sbb
add
xchg
pop
xchg
jl
cld
out
add
or
arpl
jle
mov
pop
mov
(bad)
cmp
arpl
xor
and
(bad)
nop
add
outs
or
ret
sti
push
xchg
stos
ret
(bad)
icebp
pop
inc
shr
sti
es
mov
mov
jmp
fldcw
sbb
jg
out
popf
lock
sti
in
(bad)
mov
pop
and
std
and
es
jmp
outs
xor
mov
mov
mov
sar
mov
ror
xchg
call
aad
mov
xor
jno
daa
aaa
or
ss
cmp
push
dec
aaa
aas
loopne
adc
push
add
sbb
inc
jmp
sbb
in
adc
dec
scas
xchg
xchg
sar
mov
mov
call
out
out
inc
js
(bad)
sbb
stos
lock
or
jle
mov
mov
scas
fadd
clc
ins
and
test
retf
mov
mov
ds
clc
ins
rcl
mov
add
pop
push
jbe
cmc
xor
gs
out
add
shl
lock
or
int
jnp
lock
mov
hlt
outs
(bad)
ds
outs
shl
movs
(bad)
jb
add
cmp
das
xor
cmps
add
or
or
inc
cmp
outs
scas
lahf
lock
test
fisttp
clc
pop
rcr
jl
loopne
jmp
pop
mov
mov
cld
or
fwait
inc
rcr
mov
sbb
mov
clc
dec
jmp
adc
add
data16
(bad)
ficom
retf
clc
int
das
add
inc
add
scas
add
mov
mov
jl
loopne
add
add
cmp
sbb
add
xlat
sbb
push
adc
mov
ss
loope
call
lock
rcl
psrld
retf
pop
cdq
lods
cmc
adc
pop
add
cmp
dec
cld
push
sub
add
es
hlt
ss
add
push
loopne
add
rol
add
pop
rcl
inc
cmp
xlat
add
xchg
and
mov
pop
and
(bad)
adc
mov
and
jmp
shr
add
hlt
dec
add
cli
aaa
mov
lock
out
mov
add
adc
jmp
rcr
cld
or
shr
aaa
mov
shr
cmps
add
add
xor
(bad)
mov
adc
mov
xor
jle
push
loopne
add
pop
arpl
or
gs
pop
mov
fild
aaa
add
add
xor
shr
adc
push
add
push
or
push
mov
out
sub
fldenv
pop
cmps
ds
inc
clc
or
jg
out
das
sub
mov
pop
jbe
icebp
(bad)
cwde
cmps
push
das
es
loopne
add
rsm
lea
pop
out
adc
inc
icebp
pop
mov
sahf
movs
fst
mov
push
out
pop
imul
nop
sub
idiv
mov
sbb
hlt
(bad)
mov
ins
or
iret
adc
inc
mov
add
mov
neg
pop
cmp
movs
xor
clc
cmp
push
ins
sub
test
inc
inc
push
sti
ja
(bad)
(bad)
sbb
sbb
ret
js
pop
fidivr
ds
fidiv
retf
stos
lock
cmp
imul
jnp
fiadd
adc
cmc
js
mov
pop
add
sahf
xchg
pop
js
ret
sti
sbb
leave
lods
push
ror
fisub
ds
xor
sbb
sbb
cmp
xor
fdivrp
test
mov
cld
inc
mov
add
xchg
mov
add
sti
or
pop
je
push
movs
adc
pop
loope
imul
xchg
aad
lahf
movs
aaa
clc
sub
xlat
test
data16
mov
cmp
or
(bad)
and
jge
(bad)
test
test
aaa
sbb
xchg
loope
mov
cmp
pop
sti
adc
stos
icebp
sahf
movs
sbb
jg
sbb
out
mov
sbb
sbb
pop
(bad)
lock
cmp
fstp
jnp
pop
cmps
jg
xchg
lahf
push
clc
push
adc
dec
lods
add
popa
rol
clc
lahf
add
push
push
jbe
cmc
push
into
inc
(bad)
xlat
mov
add
loopne
in
scas
inc
mov
lahf
test
sti
add
add
aam
mov
(bad)
mov
dec
clc
sub
push
add
add
or
outs
and
mov
dec
clc
dec
lods
mov
loope
jmp
cmps
(bad)
dec
ins
push
sbb
pop
adc
mov
xor
pop
add
cmp
out
(bad)
bound
fimul
clc
xlat
add
(bad)
sub
xchg
imul
cdq
sub
std
or
jl
cmp
fsubp
push
add
pop
mov
mov
mov
cld
iret
push
lods
add
lahf
pop
clc
dec
rol
pop
rcl
std
add
dec
pop
arpl
jle
scas
in
mov
pop
sub
jge
push
ror
or
push
xchg
pop
sbb
pop
adc
xchg
or
dec
ins
pop
aaa
test
mov
fs
jecxz
test
test
clc
jmp
clc
push
out
and
dec
aaa
add
mov
int
add
inc
inc
clc
xor
arpl
push
js
jl
pop
mov
rol
pop
stos
lahf
lock
shl
(bad)
adc
xor
and
pop
rcr
sub
add
loopne
imul
lock
loopne
cmc
es
psubb
clc
sbb
inc
daa
loopne
imul
add
sub
hlt
jbe
lahf
mov
outs
adc
add
hlt
adc
cmp
lahf
test
lahf
add
adc
retf
(bad)
lock
add
mov
lahf
stos
cmp
rol
jne
push
jb
aaa
lock
(bad)
lock
mov
mov
mov
mov
add
lods
lahf
clc
push
out
pop
or
inc
mov
jmp
sti
test
inc
shl
retf
cs
cmps
lock
mov
jl
pop
mov
lods
mov
xchg
das
ins
fisttp
aad
(bad)
test
call
out
add
push
les
dec
xchg
push
rcl
loop
mov
adc
std
push
mov
or
ds
adc
cmps
mov
scas
mov
hlt
push
loop
push
out
mov
sahf
xchg
cmp
pop
inc
pop
test
sub
clc
daa
icebp
pop
test
popf
repnz
clc
push
call
out
pop
lock
(bad)
div
pop
mov
daa
out
sti
xchg
js
(bad)
jnp
fimul
add
jle
mov
pop
jmp
int
pop
sub
fnstsw
cmp
leave
test
clc
movs
js
pop
pop
arpl
sub
cmp
dec
sbb
mov
or
dec
mov
js
rcl
push
out
mov
sub
dec
aaa
and
clc
dec
js
and
daa
sub
jae
push
movs
mov
or
mov
out
sub
xlat
in
retf
lock
ss
jb
xor
ret
sti
jae
dec
mov
iret
push
push
in
push
mov
sub
aaa
js
mov
imul
mov
out
jg
loopne
lock
or
jle
loopne
or
jl
lock
nop
test
xlat
mov
in
mov
sbb
or
sub
aas
or
test
or
add
movs
mov
jbe
jle
data16
add
dec
rcl
aaa
test
ss
push
jbe
or
pop
js
inc
js
loopne
xor
fiadd
sti
add
sbb
lar
xor
jnp
lock
add
(bad)
ror
call
loopne
add
cmc
sbb
test
or
aad
jg
mov
sbb
call
std
stos
fisubr
jne
loopne
xchg
lock
xchg
lock
jg
loopne
add
mov
cld
push
cmp
jp
loopne
adc
pop
add
cld
or
inc
or
scas
sbb
clc
mov
lahf
dec
shr
call
lock
cld
daa
cmp
lods
sub
dec
in
adc
(bad)
xor
aas
or
pop
or
sub
mov
inc
cmps
add
loopne
add
loopne
repnz
mov
lock
imul
jmp
pop
add
inc
rcr
and
inc
add
loopne
add
pop
push
hlt
xlat
call
mov
push
add
mov
pop
add
sbb
sar
js
loopne
add
ja
mov
outs
or
stos
xor
loop
rcr
dec
pop
aas
xor
jns
jl
loopne
mov
jg
cld
xor
jge
dec
add
pop
js
add
and
dec
add
pop
clc
jno
hlt
pop
stos
jmp
mov
out
mov
inc
jge
cmc
adc
ds
out
shl
add
pop
clc
xchg
call
(bad)
fld
lahf
pop
js
add
add
jle
jg
js
loopne
add
sub
and
jge
out
inc
rcr
clc
mov
xchg
aas
or
arpl
out
add
pop
clc
fild
jg
daa
clc
and
sti
add
sti
or
loopne
add
loopne
add
add
jle
daa
sbb
mov
mov
sub
test
and
adc
jg
fidivr
mul
fld
out
(bad)
jnp
fidivr
dec
jg
jmp
mov
sti
cmp
sti
pop
js
loope
xchg
fidivr
mov
sti
or
fidivr
mov
(bad)
fs
leave
mov
out
pop
cmps
(bad)
lock
loope
adc
int
sahf
mov
fidivr
mov
lock
fidivr
outs
mov
add
ret
jnp
fidivr
neg
and
retf
or
fidivr
mov
sahf
test
add
ret
sti
pop
lock
mov
fidivr
iret
sar
hlt
js
loope
daa
ficomp
fcmovnb
pop
mov
icebp
out
ret
mov
out
lds
fidivr
mul
std
cmp
sti
lock
ret
mov
cmp
ja
ficomp
ds
out
ds
xchg
ficomp
les
sti
lock
out
ds
sti
and
pxor
js
loope
xchg
fsubp
jl
mov
mov
ja
(bad)
loopne
xchg
fidivr
outs
(bad)
ja
fidivr
mul
cmp
mov
mov
js
fidivr
mul
cmp
sti
lock
ret
jnp
mov
loopne
js
fs
jbe
mul
fld
push
out
ds
(bad)
into
xchg
xchg
js
add
dec
js
loope
xchg
fidivr
sar
lahf
add
add
dec
loopne
add
mov
sub
aas
or
rcr
push
lahf
add
loopne
add
adc
inc
loopne
adc
retf
dec
js
lahf
and
das
or
in
test
add
pop
clc
adc
sti
xor
(bad)
rcr
pop
loopne
add
pop
sar
jg
loopne
or
jge
fild
js
loopne
pop
clc
adc
aas
or
loopne
add
inc
loopne
add
sti
add
pop
loopne
jmp
or
add
int
(bad)
sbb
daa
add
dec
shl
mov
mov
aas
adc
dec
sub
pop
loopne
push
jl
loopne
add
adc
push
add
xchg
jmp
sub
jmp
xchg
add
aaa
pop
clc
out
lahf
add
pop
or
mov
ficom
dec
es
or
lahf
inc
shl
adc
mov
dec
add
add
pop
adc
fiadd
clc
sbb
daa
add
cmp
xchg
add
cld
jno
daa
add
inc
loopne
add
sub
pop
loopne
add
xor
fild
mov
clc
rcr
jl
loopne
or
xchg
add
dec
loopne
add
or
daa
add
(bad)
mov
push
lock
jl
loopne
add
sbb
int
fimul
leave
sbb
or
repz
inc
shl
ds
loopne
add
retf
add
mov
xor
iret
and
xchg
add
pop
loopne
mov
mov
xor
pop
ds
int
jle
loopne
add
xor
xchg
add
lahf
or
jecxz
dec
add
push
add
sbb
mov
sub
or
and
aaa
pop
clc
push
sub
jecxz
dec
add
add
dec
jns
jl
add
ficom
jle
ficomp
adc
addr16
mov
jnp
mov
jecxz
sub
sbb
jge
ficom
xchg
mov
out
dec
js
cs
mov
jg
out
(bad)
lock
and
scas
loopne
adc
(bad)
jecxz
mov
mov
bound
xchg
icebp
ficom
aas
lds
mov
jecxz
imul
adc
sub
sbb
jge
ficom
(bad)
cmp
sbb
jge
ficom
mov
mov
ficom
retf
bnd
out
(bad)
lock
(bad)
ja
or
ficomp
out
or
cmp
mov
mov
ficomp
jecxz
pop
add
sbb
int
std
lahf
js
mov
not
sbb
(bad)
icebp
mov
jecxz
xor
pavgw
ficomp
aaa
xchg
div
lock
out
loope
mov
std
sbb
sub
std
or
fwait
cmp
ins
xchg
popf
jns
xor
mov
push
add
add
inc
fisubr
jnp
ficom
sahf
in
xchg
add
add
mov
dec
add
pop
add
add
add
fist
lock
pop
pop
fild
lock
lock
or
lods
xchg
shr
add
xchg
add
or
push
loopne
add
pavgb
xchg
sbb
add
adc
or
aas
adc
dec
add
add
lods
or
adc
or
mov
mov
lock
add
jl
loopne
add
jl
add
push
clc
not
add
fistp
sub
iret
add
cmps
popf
adc
mov
mov
or
xchg
sub
jl
cld
je
aaa
daa
loopne
loopne
add
mov
pop
mov
add
aas
push
lock
or
add
fwait
or
xor
cmps
add
loopne
pushf
cmp
and
pop
lock
lahf
push
clc
jle
outs
in
add
xchg
or
popa
sub
not
(bad)
lock
loopne
add
loopne
add
add
loopne
add
add
loopne
jae
aaa
push
shl
xor
pop
push
jl
add
push
(bad)
adc
lahf
cmps
std
push
lea
fistp
adc
dec
add
cdq
daa
add
out
jle
loopne
repz
xor
mov
cld
jno
loopne
sub
or
jg
lock
fwait
sub
pop
add
pop
aas
leave
jnp
mov
mov
out
dec
loop
and
jae
cld
dec
mov
ins
mov
xor
xor
push
hlt
icebp
xor
loopne
xchg
adc
lods
aam
test
mov
rcr
adc
jmp
int
lock
jnp
fisub
jnp
add
(bad)
sti
sub
outs
scas
cmp
jmp
xor
dec
ficomp
mov
cmp
ficomp
std
clc
dec
fidivr
sar
pop
aas
sub
stos
icebp
fimul
out
(bad)
dec
or
inc
js
(bad)
mul
or
xchg
or
pop
icebp
ficomp
out
arpl
sahf
dec
shl
imul
mov
(bad)
into
or
pop
rcl
mov
lock
jecxz
sbb
rcr
popf
or
adc
or
sahf
test
shl
std
outs
mov
mov
or
cmps
lock
fsubrp
icebp
fimul
dec
mov
lock
(bad)
sub
stos
lock
fstp
push
add
mov
add
jg
or
push
or
sbb
fld
dec
sbb
mov
ret
clc
xor
push
loopne
add
mov
loope
or
scas
sub
push
add
push
lock
xchg
lock
fild
lock
nop
lock
add
push
loopne
add
jl
sub
out
call
loopne
movs
mov
mov
jg
loopne
in
jg
push
sar
pop
clc
xor
aas
sbb
cmp
std
daa
cmp
and
ins
mov
outs
mov
into
je
aaa
push
rcr
or
push
add
sar
adc
ins
add
pop
mov
mov
push
jl
sub
mov
std
add
sbb
sub
pop
std
test
add
jmp
outs
or
cmp
mov
loopne
add
mov
fisttp
lock
fstp
cld
pop
shl
jbe
(bad)
outs
or
jl
loopne
cmp
push
xchg
pop
pop
pop
mov
add
add
scas
call
(bad)
loopne
cmp
push
lock
add
loopne
je
lock
add
sub
pop
push
jl
rcl
ds
sbb
or
sbb
dec
push
clc
stos
add
add
or
lahf
in
mov
mov
add
adc
jg
adc
cmps
add
rcr
add
jae
sub
or
inc
lock
jg
jae
mov
mov
dec
lock
add
loopne
es
sbb
shl
push
aas
ror
sti
lds
mov
add
pop
mov
cmp
(bad)
sub
adc
pop
xchg
data16
jae
lock
fwait
loope
int
call
mov
cmps
mov
and
int
call
ficomp
rcr
test
jl
popf
loopne
(bad)
sti
aad
lahf
test
rol
cli
ss
push
out
or
gs
div
(bad)
adc
mov
mov
leave
add
jecxz
sbb
rcr
stos
icebp
sahf
(bad)
mul
jl
jae
mov
mov
out
pop
icebp
jle
ficomp
neg
fwait
loope
int
ds
mov
cmp
adc
outs
sar
pop
ror
sti
inc
mov
add
arpl
cli
mov
clc
sub
outs
(bad)
jnp
mov
loopne
ret
sti
jo
mov
cmp
push
ficomp
icebp
ds
xchg
lock
ins
adc
cmp
mov
clc
loope
imul
div
xlat
push
daa
js
gs
ficomp
lock
cmp
(bad)
mov
xchg
add
add
ins
dec
clc
adc
fld
adc
ret
adc
loopne
push
outs
stos
test
add
xchg
cmp
ins
add
push
or
or
adc
dec
jo
pop
leave
adc
sahf
lock
add
shl
loope
add
add
cmps
push
clc
imul
aaa
loopne
xlat
xchg
pop
jae
loope
add
fld
add
idiv
push
jbe
and
je
fild
clc
jecxz
push
hlt
mov
pop
jmp
cld
cmp
xchg
pop
mov
or
loopne
add
cmp
mul
imul
jmp
loopne
push
rol
in
sub
aas
add
lock
add
sub
sti
test
add
push
sar
rcr
cmps
pop
loopne
cmp
das
add
sti
add
add
(bad)
add
loopne
add
(bad)
lea
test
xor
icebp
and
dec
mul
jge
retf
rcl
lock
jmp
ds
shl
retf
sub
mov
mov
add
inc
sar
rol
out
cmp
mov
out
call
ror
ds
xor
cmp
call
jp
gs
lea
aaa
rcr
lods
je
fild
clc
mov
cmp
das
add
inc
ja
cmps
jmp
jge
ja
ds
pop
add
push
shr
push
je
fild
clc
xor
daa
add
aas
pop
lock
mov
cli
ss
imul
lock
std
dec
shl
mov
ror
fisub
out
lods
je
jg
fidivr
loop
(bad)
test
outs
jb
je
mov
js
scas
call
pop
pop
fnstenv
fwait
pushf
dec
push
hlt
lods
je
neg
fidivr
cmp
clc
das
je
out
mov
mov
jge
fidivr
jecxz
cmps
mov
or
jge
push
hlt
ds
outs
jb
jo
out
loop
leave
jge
ja
add
push
adc
leave
mov
xchg
fstp
js
mov
add
add
loope
and
test
cmp
shl
in
rcr
mov
push
jp
imul
lea
cmp
fidivr
inc
out
ds
inc
adc
jb
mov
pop
fidivr
test
mov
pushf
hlt
xlat
or
ds
mov
test
in
call
loopne
loope
or
lods
hlt
xlat
xchg
sub
pop
js
loope
pop
popf
loopne
cmp
dec
scas
xchg
or
fcomi
(bad)
icebp
inc
fadd
jp
repz
shl
jecxz
inc
pop
or
cmp
xchg
lock
test
sahf
pop
clc
and
aas
cmp
clc
cmp
(bad)
add
fild
jb
add
out
or
sar
mov
shl
or
or
addr16
pop
and
scas
or
lahf
or
repz
out
dec
cmp
aas
fild
cld
jge
jmp
lock
clc
sti
add
jbe
lock
jg
pop
clc
xor
aas
aas
add
mov
fst
fistp
aaa
add
and
jle
shr
mov
adc
scas
add
iret
add
jg
mov
mov
push
lock
(bad)
jns
mov
cmp
aas
sub
inc
sbb
outs
cmp
(bad)
jb
mov
clc
aad
mov
js
sar
clc
sub
push
loopne
or
cli
push
cmp
mov
push
loopne
adc
(bad)
aas
ret
cld
add
cld
dec
shl
(bad)
push
cmp
gs
clc
adc
or
fs
loope
pop
clc
mov
daa
icebp
or
pop
fsubrp
add
shl
mov
enter
dec
cmp
sti
cmc
js
cmp
push
jmp
out
gs
sub
imul
aas
ret
loopne
jns
jg
fimul
lock
pop
test
ss
lock
outs
retf
jns
xchg
ja
add
pop
mov
test
(bad)
daa
lock
js
das
out
jbe
outs
lock
pop
mov
ret
sti
jl
das
dec
loopne
and
scas
cmc
lock
and
jbe
jg
jecxz
and
cld
cmp
outs
mov
lea
(bad)
or
push
mov
dec
shl
shr
nop
ja
dec
ins
dec
aaa
imul
add
xlat
cmp
push
adc
leave
add
and
fst
loopne
(bad)
push
add
xchg
mov
in
lock
psubb
in
dec
out
iret
push
clc
aad
jl
sub
mov
pop
jbe
hlt
or
out
mov
or
aas
cmp
push
add
cdq
test
inc
loopne
cmc
or
inc
(bad)
lock
xlat
add
add
loopne
jmp
shl
outs
add
and
sti
xchg
lock
add
pop
pop
cld
dec
cmp
jmp
mov
pushf
test
and
sub
adc
mov
call
loopne
adc
mov
inc
lahf
sub
icebp
scas
sbb
outs
add
inc
sbb
mov
dec
mov
jge
call
add
inc
ja
fistp
ja
mov
and
jecxz
aaa
ins
add
adc
sub
jbe
jne
push
ja
leave
daa
push
hlt
add
xchg
adc
sub
shl
jl
pop
aaa
int
or
inc
add
inc
sar
jge
lahf
les
(bad)
in
pop
or
scas
adc
ins
gs
lock
ds
hlt
xor
cld
sbb
je
and
or
cmps
mov
add
add
psubb
lock
add
(bad)
mov
loopne
stos
call
in
adc
pop
shl
daa
loopne
jno
(bad)
mov
retf
add
fisttp
dec
add
push
pop
mov
add
push
dec
aaa
out
sahf
adc
mov
cli
push
pop
(bad)
xchg
fnstsw
ror
or
pop
adc
jg
div
or
ds
ss
js
pop
psubb
in
test
ror
mov
js
out
lock
enter
jg
add
neg
idiv
fisttp
repnz
and
dec
js
in
(bad)
xchg
popa
push
fidivr
idiv
sti
mov
jl
loopne
(bad)
sti
xor
loopne
pop
jbe
enter
sahf
test
push
dec
xchg
fstp
js
out
sar
and
test
inc
inc
pop
idiv
cmp
ins
sti
inc
cld
add
out
mov
inc
ficomp
mov
jle
sti
xor
cld
adc
(bad)
scas
mov
jge
pop
out
(bad)
ja
std
and
adc
cmp
or
jge
jecxz
or
adc
std
pop
or
push
dec
push
in
cdq
js
int
push
out
stos
std
inc
fisubr
jno
outs
inc
xchg
pop
fdivr
mov
test
sbb
mov
loopne
ins
mov
lock
add
add
mov
mov
loope
cmp
test
(bad)
mov
loopne
add
fisttp
(bad)
cmc
add
push
add
sub
mov
cmp
mov
ds
lock
out
pop
cld
in
jl
add
push
ficom
pop
xchg
pop
mov
jne
emms
sar
sub
pop
sbb
pop
dec
sar
jle
lock
or
add
loopne
js
loope
adc
test
adc
aas
or
inc
add
js
aaa
xor
jecxz
mov
jl
mov
cmp
jg
clc
and
xchg
fld
cmp
jbe
add
push
jbe
lock
cld
popf
push
add
stos
rcl
add
jbe
sub
sar
sub
lahf
loopne
or
lock
or
outs
pop
cld
jecxz
mov
sub
imul
mov
mov
ret
ins
mov
add
cli
push
js
(bad)
jecxz
mov
fisub
stos
mov
mov
mov
test
push
fdivrp
jmp
sbb
(bad)
inc
outs
pop
mov
adc
dec
js
cmps
jecxz
add
mov
push
fsubrp
retf
cli
js
mov
fiadd
std
pop
add
fbld
stos
ss
rcr
xchg
jnp
out
sub
shr
push
sar
js
scas
fidivr
scas
jecxz
test
mov
nop
mov
fimul
sub
ins
mov
mov
adc
inc
cmp
pop
jo
outs
les
(bad)
mov
pop
sbb
(bad)
sbb
cli
inc
repnz
fwait
mov
loopne
add
repnz
bswap
sti
cs
jg
hlt
jbe
pop
pop
call
hlt
mov
ret
test
pop
ins
sbb
add
hlt
inc
add
pop
mov
out
repz
mov
(bad)
inc
outs
ja
jno
test
or
mov
add
inc
add
out
add
ds
loope
jo
xlat
mov
cli
jecxz
pop
jle
clc
js
xchg
jg
add
clc
jmp
push
clc
push
(bad)
aaa
loop
scas
inc
loopne
add
adc
jle
call
loopne
ja
mov
mov
xchg
sbb
mov
xor
pop
cmp
pop
test
fiadd
or
sub
mov
clc
pop
add
add
lahf
pushf
mov
cmps
add
pop
jmp
lock
add
lock
leave
pop
fstp
pop
lock
lock
jb
clc
jno
jg
add
lahf
push
clc
fs
fwait
jno
jg
clc
pop
cmp
(bad)
push
lock
or
jl
loopne
lock
lock
js
jl
ror
in
fisttp
xchg
shl
jle
pop
clc
cmp
mov
add
push
fist
lock
cli
aaa
jecxz
fild
scas
call
gs
test
(bad)
fs
lods
lock
mov
test
mov
mov
pop
dec
shl
js
jg
(bad)
js
retf
js
(bad)
or
or
rol
mov
xor
cmp
clc
mov
hlt
lock
push
sbb
inc
mov
sbb
std
lock
adc
xchg
or
imul
dec
rcr
icebp
lock
mov
and
fbld
jg
div
push
ficomp
test
mov
pxor
aaa
pop
fidivr
jecxz
and
out
dec
hlt
ins
out
add
xchg
std
and
out
sub
pop
call
mov
test
jl
jmp
dec
add
loopne
repnz
adc
dec
sbb
add
out
sub
fwait
mov
lock
ss
mul
add
add
clc
xor
daa
icebp
or
inc
add
pop
push
pop
cld
retf
shl
jne
push
add
and
fild
lock
cmp
clc
jae
push
dec
loop
outs
pop
add
ja
(bad)
popa
(bad)
jmp
add
stc
cmp
jl
shl
dec
cs
add
pop
add
mov
clc
(bad)
or
xchg
add
dec
pop
cld
and
loopne
pop
clc
imul
(bad)
js
outs
and
das
and
aas
or
aas
inc
loopne
dec
add
jle
aas
jmp
add
and
aas
jmp
and
mov
clc
dec
add
outs
add
ja
jle
pop
clc
dec
sbb
aas
(bad)
and
mov
mov
xchg
scas
repnz
imul
cwde
xchg
outs
repnz
jg
mov
push
fidivr
mov
push
fidivr
sti
mov
fidivr
jecxz
jno
cmp
fidivr
mov
mov
jg
sar
js
fadd
jnp
jns
and
fadd
sti
pop
in
cmps
add
lods
lea
xchg
jae
std
mov
jge
icebp
cmps
fwait
js
jg
mov
mov
fld
in
or
out
out
inc
outs
or
sbb
add
add
int
pop
out
add
inc
cmp
ror
pop
dec
add
and
(bad)
jnp
mov
add
add
mov
sbb
pop
es
clc
daa
cmp
pop
cs
dec
(bad)
push
or
outs
add
xchg
push
loopne
adc
mov
add
xchg
push
loopne
or
aaa
repnz
(bad)
dec
lock
outs
add
push
imul
mov
cmp
pop
and
mov
mov
cmp
cld
aad
jg
loopne
jns
hlt
imul
sub
lock
or
pop
sub
shr
cld
push
push
loopne
adc
imul
inc
dec
loopne
js
cld
pop
add
jns
hlt
aas
add
pop
clc
aas
or
aaa
repnz
jnp
jle
pop
clc
ror
mov
inc
outs
mov
mov
jnp
(bad)
adc
cmc
js
in
std
push
jns
(bad)
test
lahf
in
std
push
jns
jecxz
xchg
(bad)
or
es
mov
jg
imul
fmulp
jecxz
outs
ret
push
jns
pop
and
xor
enter
push
fdivp
cmp
setne
je
enter
add
repz
fbld
out
aaa
loope
xchg
(bad)
or
cmp
mov
cmp
lock
ss
ret
sti
in
bnd
add
xchg
loope
loopne
jge
mov
pop
in
xchg
cmp
call
push
lock
fdivrp
jns
idiv
xchg
pop
sbb
daa
jnp
iret
adc
sti
adc
cmp
(bad)
and
push
daa
jnp
mov
add
imul
test
xchg
sar
add
jg
sar
add
test
cmp
clc
xor
aas
add
jg
cld
rcr
loopne
or
mov
loopne
add
pop
clc
sti
add
test
scas
add
adc
cmp
jle
loopne
js
jg
loopne
dec
add
or
dec
icebp
add
movs
in
add
cmp
js
aaa
xor
add
sbb
lock
aad
cld
inc
add
add
lahf
sub
or
sbb
clc
test
clc
movlps
cmp
(bad)
push
cmp
add
mov
clc
mov
call
sbb
aas
es
dec
mov
js
daa
out
dec
frstor
ds
jge
mov
lahf
js
(bad)
ret
sti
adc
mov
lock
lods
xchg
daa
in
jne
out
push
sar
jmp
std
sub
fwait
sar
dec
nop
div
or
fisub
retf
or
jnp
mov
xor
cmps
jns
bswap
sti
outs
or
out
xchg
in
push
add
mov
jge
xchg
cmps
in
fnstsw
cld
jmp
and
inc
fldcw
mov
cwde
add
inc
ror
aas
push
loopne
es
or
iret
jns
jg
loopne
and
jg
loopne
repz
lods
rcl
out
ror
jmp
push
loopne
or
lock
add
mov
sahf
lea
adc
out
add
add
(bad)
or
call
inc
loopne
add
fsub
mov
loopne
test
push
clc
(bad)
push
adc
loopne
(bad)
sub
std
ins
cmp
jl
rcr
hlt
mov
inc
mov
push
hlt
sbb
inc
fild
lock
lahf
loope
(bad)
push
sub
aas
ret
clc
sbb
loopne
or
mov
push
dec
into
lock
call
adc
lock
mov
(bad)
push
adc
lock
fptan
jle
dec
pop
ror
mov
inc
fisubr
(bad)
jnp
(bad)
mov
or
lea
std
inc
pxor
std
dec
mov
dec
mov
mov
add
das
jns
lahf
daa
out
xlat
loope
mov
or
push
mov
sub
ret
push
call
ficomp
lock
mov
jmp
cld
dec
push
fsubp
retf
sti
dec
or
pushf
jl
push
and
jg
loopne
add
pop
div
dec
sti
adc
fld
sti
mov
mov
retf
push
(bad)
xchg
ja
aas
adc
cmp
lea
inc
or
add
add
loopne
cmp
arpl
or
and
mov
jg
add
sub
dec
jle
add
jecxz
outs
sbb
ret
sub
add
add
cmp
pop
icebp
add
mov
pop
adc
cmp
das
adc
test
cld
dec
(bad)
lahf
or
hlt
add
out
add
dec
(bad)
test
aas
and
clc
mov
aas
rol
cld
add
cld
scas
call
mov
aam
dec
mov
cmp
cld
dec
cld
pushf
add
outs
add
stos
push
loopne
or
mov
cld
stos
push
loopne
and
scas
add
stos
push
loopne
adc
add
(bad)
push
(bad)
pop
or
mov
cld
sub
lock
or
daa
or
fdivrp
and
lahf
daa
lock
mov
mov
cmps
fwait
repnz
out
jge
(bad)
call
or
add
mov
ficomp
lock
lock
js
retf
add
fneni(8087
std
jne
out
imul
xchg
dec
loopne
scas
js
ffree
sti
dec
jns
lahf
sar
js
ffree
sti
mov
(bad)
jae
out
(bad)
std
jne
out
stos
in
dec
add
adc
mov
fnstsw
cld
push
fucomip
in
cmps
aad
or
fstp
loopne
pop
clc
cmp
cdq
fstp
loopne
or
add
pop
js
mov
or
add
pop
clc
mov
jg
add
mov
clc
pop
add
sti
or
mov
dec
add
loopne
js
dec
jmp
xor
cld
jp
(bad)
and
jg
loopne
lock
ffreep
jecxz
fisubr
cli
aaa
cmp
outs
adc
sub
shr
add
sbb
loopne
push
clc
out
pop
imul
ror
add
mov
int
lahf
jmp
jle
rcr
std
mov
pop
sub
std
sbb
iret
cmc
add
pop
adc
outs
jp
fild
lock
inc
inc
aas
add
outs
jp
fbld
dec
cmp
cli
icebp
cmp
cld
scas
add
in
js
cld
jmp
std
dec
pxor
in
dec
xor
(bad)
sti
fwait
push
fidivr
ja
daa
xlat
(bad)
inc
mov
mov
es
daa
clc
test
jge
mov
(bad)
adc
jb
iret
repz
mov
push
out
repz
xchg
fisttp
clc
mov
(bad)
xchg
xchg
(bad)
jle
ficomp
loopne
sub
outs
pop
jbe
lock
jecxz
out
inc
mov
scas
mov
pop
(bad)
repnz
jmp
ins
cmp
add
popf
lock
mov
idiv
bnd
add
ret
lock
mov
test
idiv
std
ins
neg
nop
rcr
add
iret
test
dec
add
das
sbb
pop
xchg
fnstsw
adc
cmp
std
or
jg
clc
stc
push
loopne
or
cwde
add
imul
fild
cld
jno
jg
add
mov
pop
loopne
inc
sbb
pop
js
das
adc
daa
adc
push
loopne
add
sti
mov
es
lods
jmp
jmp
cld
cmp
loopne
add
lods
mov
test
aas
lahf
add
sub
mov
loopne
dec
add
loopne
icebp
add
lock
cmp
loopne
cmc
add
lock
cmp
out
jp
scas
adc
jns
sar
ja
rcl
jl
add
or
jl
shr
add
push
sar
pop
xchg
sar
js
iret
ret
jnp
ficom
daa
lock
js
leave
sti
or
mov
std
inc
xor
dec
std
pop
mov
test
fs
scas
adc
pop
out
or
aaa
shl
in
mov
push
ficomp
jecxz
cdq
pop
jbe
adc
add
out
jnp
outs
xor
mov
dec
(bad)
div
sahf
mov
fs
pop
adc
add
jl
or
sti
inc
mov
sbb
xchg
imul
lock
leave
mov
outs
dec
loopne
push
mov
or
sbb
outs
ss
ret
out
jle
pop
clc
rol
lahf
dec
ret
add
shr
add
add
leave
mov
sbb
aas
lock
adc
leave
and
rol
add
pop
push
loopne
add
add
lahf
push
cld
pop
push
loopne
add
(bad)
dec
pushf
dec
add
imul
loopne
mov
ret
add
clc
(bad)
rcr
stos
adc
cmp
mov
cli
mov
add
inc
add
pop
clc
xor
call
add
dec
or
fild
outs
daa
lock
add
add
(bad)
rcr
lds
(bad)
rcr
loop
sar
or
(bad)
shl
loop
shl
add
inc
push
loopne
or
cmps
js
hlt
xlat
add
and
lock
push
cmp
cli
cmp
jg
add
jl
inc
inc
call
lahf
sub
fld
outs
sbb
xor
xchg
div
sahf
loop
shl
(bad)
push
fidivr
dec
icebp
cmp
fisttp
ja
div
icebp
sahf
loop
cmp
pop
jnp
out
es
pop
jecxz
(bad)
cs
(bad)
cmp
retf
lock
loop
cmp
out
mov
sub
sahf
loop
sbb
test
sti
push
js
in
adc
call
pxor
cmps
js
loopne
(bad)
sti
loop
ins
hlt
push
lock
jnp
(bad)
or
rol
add
xchg
add
ins
and
call
or
(bad)
sub
xchg
dec
call
js
mov
clc
fistp
out
inc
mov
add
push
pop
arpl
adc
movs
loope
ins
sbb
es
push
add
pop
in
xor
(bad)
sahf
leave
mov
dec
sub
outs
(bad)
lock
cs
lahf
lock
mov
push
arpl
cmp
fcom
mov
(bad)
fdivr
add
arpl
push
cmps
mov
mov
sbb
retf
mov
(bad)
pop
sbb
add
fnsave
clc
push
addr16
in
cmp
or
cdq
mov
rol
fistp
fwait
jmp
sbb
pop
aas
mov
lock
jl
xor
rol
fcom
dec
loope
jl
shl
clc
push
ror
daa
cld
fs
mul
gs
xchg
cmps
add
push
jle
ja
daa
jl
shl
cmps
sar
into
dec
clc
mov
test
lock
xor
xchg
sbb
xchg
loope
in
clc
or
aam
inc
inc
loopne
add
popf
imul
jl
mov
rcl
in
jle
jl
add
mov
mov
mov
ins
pop
clc
cmps
sub
xchg
int
or
mov
pop
in
add
xchg
sub
jbe
sbb
mov
fst
out
xchg
jbe
cmp
jle
aaa
in
jl
jge
sbb
outs
iret
dec
clc
cmps
cld
test
pop
jbe
add
lods
mov
shr
je
ja
add
or
dec
add
pop
ret
push
popa
xchg
pop
daa
cmps
push
mov
jl
shl
fisubr
adc
dec
add
push
mov
rol
mov
aad
popa
mov
xor
push
xor
xor
add
mov
repnz
sbb
shl
cmp
pop
add
mov
jmp
pop
fs
pop
scas
call
jl
or
mov
or
lea
lock
jbe
add
test
xlat
xchg
popa
mov
xor
test
pop
lods
fwait
imul
inc
sbb
es
les
pop
mov
retf
mov
pop
stc
and
mov
sahf
jmp
js
(bad)
mul
pop
icebp
fiadd
test
fidivr
fwait
cmp
pop
les
mov
adc
pop
lock
xchg
div
out
pop
or
neg
dec
fstp
lods
mov
sbb
mov
ficom
test
(bad)
adc
dec
icebp
ficom
push
loop
mov
mov
mov
cs
mov
aaa
arpl
call
jmp
xchg
jecxz
or
fninit
mov
jbe
push
mov
or
ins
mov
clc
test
jbe
jl
addr16
les
ja
ret
(bad)
sti
mov
xor
fwait
jmp
outs
das
out
lods
mov
bound
fidivr
mov
inc
(bad)
cmp
das
aad
dec
or
push
sbb
leave
jnp
fidivr
fisubr
gs
mov
leave
jnp
mov
xchg
mov
mov
clc
jo
pop
js
(bad)
imul
lods
mov
add
adc
div
mov
clc
pop
xor
mov
shl
add
addr16
add
loopne
add
scas
in
call
loopne
add
mov
clc
leave
sub
lea
add
pop
lock
add
cld
inc
mov
mov
loopne
add
je
jge
out
add
mov
add
dec
pop
shl
push
clc
invlpga
adc
in
add
adc
lods
add
add
mov
jl
shl
push
loopne
loopne
(bad)
cmp
inc
lock
add
adc
lods
add
add
in
add
aam
sub
and
jnp
mov
dec
jl
clc
sahf
sub
icebp
add
cmps
add
mov
out
mov
lock
adc
scas
adc
lods
add
add
mov
mov
clc
test
pop
loopne
add
jle
clc
xor
test
stos
dec
jae
jle
loopne
add
xchg
or
jle
loopne
add
mov
pop
dec
popf
cmp
clc
sub
mov
clc
and
mov
lock
jle
loopne
add
dec
shr
sbb
shl
add
loopne
dec
cs
xor
lock
mov
push
sti
or
iret
pop
jl
jmp
xchg
add
ins
rcr
and
repnz
add
iret
add
add
lock
add
add
dec
jne
dec
pop
loopne
lock
jg
pop
clc
ret
cmp
jbe
outs
sbb
add
add
pop
add
pop
out
pop
loope
(bad)
cld
imul
sti
and
jle
add
jle
ficom
std
xor
fisub
fld
fdivr
loopne
lahf
pop
or
arpl
xchg
mov
cmps
mov
js
lea
add
fs
mov
outs
ret
jnp
lods
fwait
dec
mov
push
js
xor
js
dec
ror
in
cmp
add
push
mov
push
fiadd
loopne
cs
mov
add
test
xchg
js
mov
leave
ins
mov
mov
ds
xchg
cmp
das
ret
mov
add
push
jge
stc
or
add
jle
ficomp
jmp
push
sar
test
outs
dec
ror
cmp
fs
outs
(bad)
mov
js
mov
leave
dec
mov
lock
ficomp
jge
add
sbb
sti
add
cld
push
add
sbb
idiv
pop
dec
inc
aas
cdq
cmp
out
add
jle
add
xchg
sbb
or
daa
clc
shl
ds
ja
mov
jge
push
jbe
lock
ja
lock
js
mov
and
jmp
out
add
sahf
(bad)
not
fiadd
loop
pop
out
sub
fiadd
loop
pop
out
sub
jge
fiadd
std
inc
mov
mov
ret
sti
inc
cmp
invlpg
mov
loopne
add
push
hlt
addr16
out
and
ins
mov
out
pop
jl
push
hlt
icebp
jge
mov
jle
loopne
mov
int3
jge
pop
or
jl
mov
test
or
pop
jl
fisttp
sbb
clc
jl
mov
(bad)
dec
jl
clc
add
test
xor
clc
xchg
into
cli
mov
pop
or
and
dec
addr16
inc
sbb
add
aas
test
cmp
lahf
or
dec
or
or
jge
out
ja
cli
clc
cli
mov
xor
jle
loopne
cmp
and
push
mov
fist
push
sbb
adc
sbb
sub
xchg
add
pop
rcr
and
jle
loopne
add
cmp
pop
add
call
lock
add
shl
xlat
add
mov
mov
call
loopne
add
jl
add
loopne
add
pop
or
dec
clc
jmp
inc
mov
add
jp
mov
(bad)
xlat
add
or
cmps
cmp
movs
outs
add
cmc
sub
dec
push
loopne
ja
ds
scas
ja
cli
clc
jle
pop
jg
loopne
add
int3
or
mov
push
loopne
or
inc
mov
mov
std
push
stos
add
loopne
or
fcom
aaa
add
pop
add
ins
or
dec
out
outs
sbb
add
retf
outs
add
lahf
add
loopne
add
add
cdq
rcl
add
rcr
sbb
inc
aas
cdq
xchg
lock
ins
repnz
sub
shld
or
jg
cld
fld
push
hlt
xchg
mov
rol
aas
xchg
sub
add
lods
popa
mov
or
leave
ins
mov
aas
sbb
lods
(bad)
jg
loopne
jecxz
xor
pop
loopne
adc
lahf
int3
dec
clc
(bad)
lock
add
fimul
out
ss
jge
fiadd
loopne
adc
xchg
mov
xor
add
lods
lock
pop
arpl
sar
popa
mov
or
leave
ins
mov
mov
fimul
out
inc
cmp
dec
data16
sbb
add
fimul
out
inc
cmp
dec
data16
pop
js
or
pop
loopne
adc
lahf
int3
(bad)
fsubr
icebp
(bad)
pop
mov
repnz
push
jbe
icebp
fiadd
out
xor
ds
adc
push
add
ficomp
(bad)
sti
pop
lock
add
mov
out
(bad)
jno
inc
ins
mov
pop
lock
mov
data16
jle
cmps
lock
fisub
dec
jne
dec
int
sti
dec
js
loope
aad
das
cmc
or
outs
ret
out
test
hlt
lods
lock
faddp
jecxz
xor
cmps
loopne
push
mov
js
inc
add
sar
add
or
mov
jecxz
outs
xchg
or
or
xor
js
mov
pop
sti
addr16
or
dec
sub
retf
icebp
ds
jnp
clc
mov
clc
and
fisttp
daa
loop
int
or
sbb
xor
lock
movs
cmp
mov
add
add
ins
and
not
dec
stos
call
loopne
add
sub
stos
mov
lock
lahf
add
outs
daa
push
hlt
jge
fild
lock
add
ins
pop
cld
int
mov
(bad)
ins
addr16
hlt
adc
fisttp
clc
out
clc
mov
std
push
repz
loopne
add
add
loopne
add
(bad)
scas
pop
cld
popf
xor
inc
rcr
sbb
jecxz
jge
lock
mov
or
push
lock
(bad)
cmp
lahf
in
and
sbb
cli
(bad)
call
aas
add
cmp
out
jg
loopne
add
fld
adc
nop
cmp
mov
cmp
loopne
add
mov
inc
fisttp
lock
add
add
loopne
add
push
lock
push
shr
push
cld
mov
pop
shl
test
adc
ins
push
shl
cld
sub
inc
ja
jl
pop
(bad)
pop
psubb
sub
mov
clc
jg
mov
retf
ror
add
fstp
aas
add
inc
adc
pop
clc
xchg
add
add
ins
push
ror
cld
jge
jg
lock
call
push
hlt
sbb
jge
loopne
add
sub
ja
jl
push
hlt
pop
add
jle
inc
clc
push
sub
mov
lock
ffreep
add
mov
fild
inc
cmp
adc
ins
add
ins
sar
clc
push
sub
clc
ss
aaa
sar
clc
or
fist
lock
add
pop
lock
(bad)
sbb
ja
jl
sbb
sbb
sbb
or
sbb
lsl
movs
push
adc
mov
mov
daa
add
sbb
pop
add
cld
push
ror
add
sbb
js
xor
js
and
mov
inc
js
mov
ss
psrad
call
psrad
mov
ret
sti
cmp
test
addr16
or
jnp
mov
xchg
or
arpl
jle
fidivr
loope
lea
xor
out
jp
ja
jnp
popf
loopne
jecxz
or
outs
ret
jnp
add
mov
mov
inc
shl
jg
daa
clc
dec
js
mov
jg
out
stc
js
test
ss
psraw
cmp
fild
pavgw
and
mov
or
inc
pop
in
std
inc
mov
jns
xor
add
leave
icebp
ds
out
mov
daa
(bad)
sti
push
mov
out
cdq
mov
push
mov
icebp
sahf
jmp
pavgw
sbb
addr16
daa
loop
popa
mov
jecxz
dec
mov
loop
shl
pop
mov
xchg
ds
cdq
mov
aas
loopne
adc
sti
aas
icebp
dec
ficomp
mov
std
xor
aas
(bad)
sti
and
or
iret
icebp
dec
ficomp
jnp
jecxz
aas
js
add
scas
adc
cdq
mov
sub
aas
add
xlat
add
lock
(bad)
xor
cmps
add
push
ror
jl
add
loopne
add
cmp
pop
add
mov
dec
pop
mov
push
loopne
sbb
sub
or
lahf
jmp
arpl
outs
aas
loope
sbb
or
jg
rol
mov
clc
and
xor
xor
inc
clc
dec
pop
cld
cmc
cmp
lahf
jmp
mov
pop
cld
repz
aad
iret
je
pop
pop
in
arpl
add
add
pop
add
xor
pop
cld
jecxz
mov
xchg
popf
sbb
cmp
dec
add
cld
adc
aas
push
clc
mov
or
mov
sbb
mov
push
clc
adc
add
fld
jg
loopne
add
pop
sub
pavgb
add
pop
addr16
jl
loopne
add
push
shl
add
loopne
add
ror
in
sbb
rcl
add
loopne
add
shl
mov
add
fld
jg
loopne
add
push
sub
cmp
sub
ja
ror
cld
adc
call
lock
add
loopne
cmp
dec
add
xchg
ficom
fstp
add
loopne
add
sub
pop
lock
add
loopne
cmp
fild
cld
xchg
cmp
lock
sbb
and
aas
add
(bad)
dec
add
loopne
cmp
sti
add
sub
jg
clc
into
push
clc
inc
add
adc
mov
mov
mov
js
in
js
test
cmps
lock
ret
jnp
(bad)
jnp
ficomp
jne
mov
or
dec
(bad)
sti
add
(bad)
mov
mov
xor
dec
push
ror
(bad)
sti
xchg
xor
mov
(bad)
mov
(bad)
jnp
fisub
loopne
adc
mov
lahf
mov
outs
js
loop
jmp
fisub
loop
sbb
mov
sti
inc
mov
cmp
outs
(bad)
sti
inc
mov
(bad)
sti
fnstsw
mov
outs
js
loop
mov
mov
lock
fidivr
jge
fmulp
sar
sti
dec
mov
js
loop
lahf
mov
dec
js
or
pop
sbb
fwait
icebp
ds
aaa
jecxz
mov
std
xor
out
std
push
mov
xor
mov
mov
ins
mov
mov
sar
out
lds
daa
loopne
loopne
pxor
mov
jg
out
pop
sbb
aaa
jecxz
xor
icebp
faddp
icebp
(bad)
and
add
jge
pop
sbb
scas
jecxz
inc
shr
jnp
(bad)
sti
adc
mov
mov
push
clc
leave
cmp
shl
out
jle
loopne
add
ror
out
sub
sbb
clc
leave
sub
loope
cmp
pop
add
imul
add
loopne
push
cld
cdq
and
push
pop
cld
xor
aas
or
jmp
out
add
scas
push
clc
jge
jg
lock
fisttp
lock
add
loopne
cmp
dec
clc
sub
sbb
add
push
pop
cld
jp
dec
add
std
sub
xor
pop
lock
sbb
adc
stos
add
push
ror
repz
sub
cld
push
sar
jg
clc
test
pop
sbb
add
push
pop
jl
lea
cmp
pop
add
xor
push
clc
dec
add
or
aaa
add
retf
clc
int
out
jmp
(bad)
push
shl
pop
or
add
clc
scas
push
js
push
sti
sub
and
mov
fnsave
and
sbb
ja
shl
cld
xor
test
sbb
int
jmp
loopne
add
jb
ja
sar
imul
dec
pop
cld
pop
add
int
jg
loopne
add
loopne
cmp
mov
add
cld
adc
dec
pop
cld
repz
cmp
clc
jmp
fstp
pop
add
sbb
out
mov
loopne
add
mov
mov
lock
call
jg
jl
pop
cld
scas
cmp
aas
add
lock
cmp
xlat
jecxz
fwait
jecxz
push
mov
lock
icebp
pop
xor
icebp
pop
xchg
outs
mov
psllw
cmp
retf
lock
icebp
fiadd
(bad)
imul
ja
das
cmc
adc
ja
aas
xor
lock
out
fstp
add
out
mov
inc
js
add
std
icebp
(bad)
icebp
ficom
adc
inc
loopne
push
fisubr
jnp
(bad)
sti
sbb
xor
icebp
mov
ds
fstp
and
pop
sar
sti
pop
icebp
(bad)
and
(bad)
loope
mov
mov
out
inc
sti
mov
or
fstp
adc
out
loop
mov
mov
(bad)
icebp
ds
xchg
das
ds
jnp
(bad)
sti
pop
js
or
(bad)
mov
ficomp
sti
ss
(bad)
sti
retf
js
mov
out
mov
mov
adc
sti
retf
js
(bad)
jnp
(bad)
sti
cmp
div
aaa
sar
jg
fidivr
fisubr
je
fisubr
dec
rdseed
aas
lock
(bad)
not
js
popa
pop
mov
mov
loopne
add
push
lock
ds
inc
clc
push
push
clc
pop
shl
mov
add
adc
sysret
cld
adc
mov
ffreep
add
jg
loopne
cmp
jg
cld
sub
push
clc
sbb
loope
mov
aas
push
lock
aas
adc
add
div
jg
clc
cdq
mov
das
add
dec
ror
jl
pop
cld
pop
add
sub
aas
pop
jl
pop
cld
mov
fild
mov
lock
add
loopne
cmp
mov
(bad)
push
shr
sysret
cld
sbb
sub
sub
clc
pop
sbb
clc
push
push
clc
inc
add
or
mov
lock
add
loopne
add
jp
iret
add
outs
or
xlat
add
clc
push
push
clc
imul
sbb
stos
add
ret
add
or
scas
add
lock
cmp
xor
div
xchg
add
xor
sahf
push
clc
jae
(bad)
cmp
jnp
mov
loopne
pop
cld
xchg
sub
cmp
scas
add
push
mov
loopne
pop
cld
fild
(bad)
add
push
lock
push
div
add
fld
sbb
cld
je
div
or
fld
sbb
push
cld
sbb
or
jae
outs
mov
pop
add
or
sahf
push
clc
and
fistp
fcmovnbe
add
lock
mov
lock
inc
loopne
add
loopne
add
pop
shl
ror
cld
sbb
daa
loopne
sar
js
(bad)
jnp
(bad)
jnp
(bad)
sar
(bad)
icebp
sahf
test
mov
pop
mov
pop
or
mov
das
(bad)
sti
inc
mov
mov
(bad)
sti
pop
mov
(bad)
jnp
mov
lock
icebp
ds
outs
loop
iret
js
in
jg
out
outs
loop
ss
ret
sti
fwait
js
pop
out
mov
pushw
fsubrp
daa
loopne
cmp
shl
ds
jecxz
xchg
jecxz
dec
mov
js
in
lahf
xchg
jns
mov
mov
jns
mov
push
mov
(bad)
push
fsubp
loop
xchg
jecxz
das
js
or
lahf
loopne
xchg
jecxz
sbb
ffreep
sti
dec
mov
(bad)
sti
pop
js
push
out
mov
mov
out
in
mov
jge
fidivr
ficomp
(bad)
sti
fstp
xchg
pop
mov
daa
icebp
(bad)
fimul
jge
(bad)
(bad)
jnp
fidivr
fisubr
aam
js
ret
jnp
(bad)
jnp
std
mov
sti
cmp
xor
lahf
jecxz
lahf
(bad)
idiv
js
xor
sbb
mov
mov
(bad)
cmp
clc
(bad)
sub
cld
xor
aas
sbb
add
jae
lock
pop
add
fild
jg
add
loopne
cmp
out
(bad)
sbb
mov
cld
mov
jg
loopne
add
je
lahf
jecxz
jg
lock
add
loopne
jno
jg
clc
ja
inc
loopne
jno
out
pop
cld
cmp
sbb
mov
cli
sbb
cmp
clc
push
mov
aas
mov
add
mov
add
loopne
jno
outs
pop
cld
mov
out
loopne
add
jnp
fisttp
clc
jae
lock
cmp
add
daa
fiadd
cld
imul
(bad)
xor
div
pop
add
jnp
outs
or
scas
sbb
out
sub
cmp
sbb
mov
cld
add
test
mov
jge
(bad)
add
clc
add
mov
(bad)
jge
fild
clc
fimul
clc
dec
add
ds
add
cld
repz
and
clc
fimul
clc
out
add
ds
pop
jl
pop
jl
lock
add
or
div
pop
add
test
push
clc
mov
add
dec
sub
out
in
cmp
clc
test
push
clc
out
cmp
lock
add
pop
lock
add
addr16
sar
adc
pop
add
add
ja
mov
inc
das
add
add
div
call
in
add
fild
dec
pop
add
lock
mov
out
jecxz
pop
add
inc
or
pop
(bad)
sti
jg
mov
out
jecxz
mov
std
je
div
aas
mov
psllw
or
jge
out
test
daa
xlat
pop
out
jge
out
inc
lock
and
sti
jecxz
(bad)
jecxz
sub
aas
ret
icebp
faddp
icebp
ds
pop
loope
sub
sti
cmp
jcxz
and
out
aas
jecxz
and
sti
imul
faddp
icebp
ds
pop
jecxz
and
dec
sar
js
adc
(bad)
inc
push
ficom
loopne
(bad)
jecxz
push
out
pop
jecxz
adc
jge
out
pop
loope
xor
mov
sti
sbb
div
jg
test
ds
jge
pop
mov
cmp
out
mov
dec
lock
out
jge
out
ret
lock
fmulp
lock
icebp
sahf
(bad)
test
sar
mov
cmp
outs
jb
push
ins
icebp
ficomp
out
sub
rcr
jmp
pushf
iret
pop
and
or
ds
mov
fbld
mov
out
es
mov
pushf
gs
icebp
jle
aaa
clc
or
outs
or
sahf
mov
jg
outs
lock
dec
into
or
jecxz
and
jmp
mov
jl
shl
jg
jl
jge
jae
(bad)
into
push
mov
fisttp
lock
jns
dec
mov
retf
jl
(bad)
lea
jl
(bad)
lock
adc
dec
sub
jb
js
out
jmp
nop
pushf
lods
inc
clc
pop
rcr
add
loope
add
pushf
or
mov
add
(bad)
lock
je
xor
dec
fld
in
lods
ss
jge
call
jmp
clc
adc
cmps
imul
lahf
mov
jb
push
loope
add
pop
sub
clc
adc
cmps
jmp
lahf
cmps
cmp
mov
jb
loopne
adc
popf
add
add
loope
mov
into
fsubp
into
rol
pop
pop
ins
mov
adc
add
clc
mov
stos
mov
dec
rol
jae
mov
and
das
loopne
push
cld
arpl
jns
push
loope
add
and
ins
jmp
add
aas
add
loopne
repz
sub
out
test
add
sbb
xor
aas
fwait
mov
mov
dec
sub
fidiv
(bad)
cli
add
pop
sub
addr16
cdq
cs
cld
arpl
sbb
test
ror
cld
dec
shl
pop
lock
add
and
in
xlat
add
mov
mov
jb
loopne
add
add
add
(bad)
sahf
push
clc
sub
lock
fist
and
xchg
jmp
clc
and
or
mov
(bad)
or
add
or
sbb
jg
loopne
cmp
iret
push
clc
test
outs
or
or
nop
jl
lock
cs
fiadd
iret
xchg
test
xchg
outs
mov
lock
sahf
test
or
inc
fmulp
aas
test
jnp
sahf
mov
jno
sahf
and
psrad
cld
push
js
ret
jnp
faddp
leave
jnp
mov
dec
loope
mov
loope
leave
jnp
mov
dec
loope
adc
cdq
js
xchg
and
addr16
aas
ffreep
sti
ins
jns
add
cdq
js
xchg
and
addr16
aas
ffreep
sti
ins
mov
outs
lock
sahf
inc
sbb
mov
lahf
ret
fidiv
icebp
ds
fidiv
in
ja
lahf
jg
out
lods
icebp
ficomp
out
jg
mov
or
outs
mov
or
mov
std
scas
js
mov
or
mov
fsubp
or
loope
sbb
es
ds
js
inc
pop
loope
mov
out
push
jecxz
xlat
push
lock
add
jmp
daa
rcr
(bad)
outs
mov
fbld
lahf
or
or
outs
or
dec
inc
lock
gs
loope
add
adc
lock
jne
cmp
jg
mov
aas
loope
icebp
dec
clc
cmp
nop
push
loope
sub
fisttp
jl
loopne
icebp
add
or
dec
jmp
arpl
mov
clc
cdq
sub
lods
jne
mov
jl
shl
fsubp
cs
jl
daa
loopne
or
pop
out
jle
add
mov
xor
inc
inc
jg
loopne
repz
daa
fcmovbe
push
fisttp
lock
inc
cmp
mov
clc
retf
cmp
iret
push
shl
fwait
pop
sbb
cmp
cmp
jmp
sar
clc
retf
dec
add
sub
scas
dec
shl
mov
jg
fsubp
fiadd
jl
rcr
or
adc
ret
xor
mov
pop
jbe
xor
lock
ret
jmp
loopne
lock
push
add
sub
mov
push
test
iret
adc
outs
add
pop
js
mov
or
or
adc
lahf
and
or
lock
out
add
ja
loopne
add
add
xor
div
add
pop
pop
jbe
add
jns
les
pxor
lock
dec
mov
ret
jnp
mov
loopne
dec
pxor
or
add
sbb
call
lock
aad
outs
fidivr
sti
xchg
or
fisubr
cli
dec
js
loope
or
ds
ins
jns
sbb
lahf
test
pop
or
mov
adc
push
jp
lahf
sub
push
jecxz
sub
std
(bad)
clc
xor
scas
cmp
shl
push
(bad)
sti
fptan
out
shl
test
loopne
add
aas
lock
jge
out
xchg
div
ficom
addr16
sub
ds
ficomp
ret
js
js
out
iret
retf
add
mov
xor
out
div
ds
cmp
outs
jmp
outs
das
out
sbb
imul
daa
jns
das
out
mov
adc
jg
shl
or
fisttp
cld
cmp
jmp
shl
fild
jl
shl
lea
js
adc
mov
or
(bad)
sbb
pop
xchg
add
stos
add
clc
imul
inc
outs
or
loopne
cmp
ins
aam
(bad)
and
imul
pushf
add
add
add
imul
add
xor
push
add
rol
in
sub
dec
add
mov
mov
mov
loopne
ror
call
fcmovnb
pop
pop
or
loopne
repz
or
ja
mov
push
loopne
or
jmp
xor
jmp
cld
jne
inc
shl
sti
add
sub
(bad)
jbe
(bad)
jl
mov
cmc
cmps
test
lahf
push
jl
cmps
mov
add
cli
push
push
hlt
outs
adc
fstp
jg
clc
sbb
sar
lahf
push
loope
add
push
loopne
add
mov
shl
cli
mov
call
loopne
popf
add
jle
ja
sub
mov
jg
fdivrp
js
out
popa
cmp
mov
jle
fdivrp
js
out
addr16
pop
fimul
cmp
sti
jg
inc
push
push
hlt
test
(bad)
leave
jnp
jns
pop
out
jg
inc
inc
aas
pop
(bad)
lock
inc
lahf
sub
test
or
push
js
inc
shl
loopne
cmp
clc
aas
lahf
ret
js
mov
cli
repnz
dec
cmp
(bad)
or
mov
jg
ficomp
jg
ror
lock
add
neg
js
mov
adc
mov
sar
adc
std
jmp
out
mov
icebp
jle
sub
cli
jl
test
jnp
add
in
daa
clc
in
js
mov
gs
xor
cli
jae
std
push
mov
inc
inc
pop
dec
shl
loopne
mov
jg
mov
daa
jnp
icebp
push
outs
cmps
scas
in
in
mov
jecxz
fisttp
or
add
mov
lock
cld
aaa
cmp
jl
rcr
jl
cmps
mov
inc
jb
jne
iret
adc
ret
cmp
mov
test
adc
jl
mov
add
sub
or
fld
pop
test
push
outs
jb
lock
or
lock
add
sbb
or
rcl
les
sar
adc
dec
add
test
jg
ds
pop
ja
push
cld
retf
es
aas
ret
lock
add
out
adc
(bad)
or
mov
pop
cmps
add
jle
daa
js
jg
rcr
jb
rcl
sbb
cli
fild
fistp
pop
or
jae
mov
pop
sub
scas
add
into
jmp
mov
push
cmp
jg
js
xchg
repz
test
pop
lock
fild
or
cmp
shr
add
mov
push
cld
pop
push
add
idiv
mov
in
icebp
ficomp
xchg
retf
js
sti
adc
jge
fdivrp
loopne
adc
fwait
push
rcr
out
out
jecxz
out
jmp
aas
and
out
ds
inc
lahf
mov
ds
rol
sub
sub
std
daa
mov
hlt
push
enter
fistp
out
and
inc
mov
sub
std
daa
mov
jle
fdivrp
rcl
sub
std
into
xchg
(bad)
div
ficomp
jbe
retf
out
setl
sti
das
js
pop
out
xchg
loopne
or
jge
lahf
jl
or
loopne
mov
pusha
jns
pop
out
xchg
dec
loope
xor
jl
add
pop
jns
aad
mov
adc
jecxz
into
inc
fisub
in
cmp
lahf
ds
inc
aas
pxor
loope
xlat
sbb
dec
cmp
sar
lock
dec
loopne
add
cli
jg
lahf
sub
sar
add
ins
cmp
add
jp
lahf
out
iret
push
clc
lahf
add
mov
clc
imul
ret
clc
ins
out
into
(bad)
dec
ds
rcr
stos
repz
and
mov
push
clc
arpl
xor
fldenv
mov
out
add
aaa
push
cld
xchg
add
ins
aam
stc
add
pop
out
cs
loopne
stos
(bad)
fiadd
shl
inc
shl
inc
frstor
lds
call
loope
popf
and
mov
xor
lods
cmp
ins
xor
clc
sub
pop
sbb
outs
adc
stos
or
out
add
fistp
lock
or
pop
add
fsubr
scas
in
scas
add
xchg
imul
or
out
rcr
dec
mov
lahf
repz
push
out
out
stc
jmp
add
mov
ja
cld
repz
or
inc
add
loopne
add
stc
add
hlt
in
mov
pop
loopne
hlt
xor
push
jns
push
out
iret
(bad)
push
test
push
ret
frstor
jg
rcl
aad
into
xchg
popf
lods
test
jg
adc
jge
adc
pop
test
mov
stc
adc
jge
fisubr
sar
sub
xor
cli
mov
jg
adc
jg
fisubr
push
sbb
es
clc
cwde
jl
ret
push
adc
(bad)
sbb
sbb
js
es
push
loop
call
call
sti
xchg
in
add
adc
popf
sub
push
mov
loopne
cmp
jg
fisubr
je
jle
mov
push
js
mov
or
push
add
sub
cmp
call
out
xor
jge
fisubr
les
(bad)
outs
cwde
mov
stos
inc
sbb
or
outs
push
jbe
add
dec
loopne
add
stos
push
loopne
dec
add
rcr
stos
cmps
dec
clc
and
jg
or
add
cmc
add
jb
lock
cmp
shr
outs
sar
cmp
cld
dec
cmp
inc
clc
mov
ret
clc
rol
lahf
and
test
lock
cld
lds
xor
lock
clc
fld
inc
lds
add
cs
adc
repz
loopne
add
or
ja
(bad)
lock
add
loopne
push
cld
pop
add
imul
lds
push
cld
pop
add
xor
cli
mov
aaa
dec
add
push
rcr
iret
or
ror
clc
jnp
(bad)
xor
iret
std
pop
sub
sti
add
outs
or
add
cmps
mov
call
adc
js
daa
clc
sti
add
hlt
add
popf
push
loope
add
adc
ds
loope
pop
js
sbb
cmps
pop
clc
cmp
loopne
cmp
test
cdq
sar
mov
aaa
mov
mov
mov
sti
and
jbe
retf
sti
pop
icebp
ds
inc
shl
loopne
and
das
and
cmp
xchg
les
push
fsubp
and
mov
loope
adc
pushf
cmp
sti
xor
in
loop
aas
fisubr
sar
mov
ficomp
add
sti
and
aas
pop
fidivr
(bad)
sti
pop
or
ds
not
scas
push
ror
xor
(bad)
sti
pop
cmps
push
xchg
loop
push
mov
mov
cli
in
add
jge
scas
call
mov
xor
(bad)
sbb
fisttp
rcr
jo
jg
std
push
mov
xor
inc
add
jbe
cmp
std
push
mov
nop
mov
or
mov
fisubr
(bad)
sub
pop
jb
call
pop
inc
outs
shr
sbb
lock
out
add
xchg
mov
or
or
add
test
pop
cld
movs
dec
inc
push
iret
dec
add
mov
xchg
test
js
pop
stc
push
leave
mov
cli
push
dec
sbb
add
or
rol
dec
push
push
lock
cld
lea
add
pop
dec
inc
jg
adc
mov
test
dec
add
add
xchg
add
dec
aas
(bad)
cmp
sti
cmp
jg
fwait
pop
adc
aas
add
retf
add
loopne
jo
pop
sub
ds
sar
aaa
add
out
cmp
add
(bad)
daa
call
jl
imul
loopne
adc
icebp
or
out
add
add
lds
add
clc
xchg
mov
fcomip
xlat
add
xchg
add
jb
pop
jl
add
dec
xor
(bad)
jnp
call
sbb
jg
loopne
add
jle
sar
jmp
(bad)
je
test
pop
cld
or
or
lea
cld
adc
or
ds
ds
sar
jl
rcr
sub
dec
or
sar
mov
jge
or
dec
int
ins
inc
ror
loope
call
jnp
loop
jne
idiv
lahf
cdq
leave
or
and
fld
and
and
adc
inc
fst
adc
or
and
xor
add
or
sub
push
push
pop
mov
mov
lods
fcmovu
jmp
(bad)
cs
ret
or
out
mov
out
(bad)
nop
iret
mov
idiv
repz
and
out
pop
xlat
sti
jp
fild
aas
inc
pop
lahf
psubb
add
xor
fisub
loopne
xor
lahf
ret
ficomp
(bad)
sti
xlat
lock
fimul
aam
sub
retf
fisub
(bad)
stos
jge
movs
fwait
jl
mov
mov
retf
mov
mul
clc
fidivr
push
out
push
xor
mov
cmp
sar
mov
icebp
jle
(bad)
jecxz
push
pop
arpl
es
xchg
loop
push
out
(bad)
jmp
xlat
data16
movs
js
fimul
das
(bad)
jnp
std
push
mov
or
push
cmp
dec
jp
cmp
aas
pop
add
bsr
xor
fisubr
out
mov
or
jg
not
cli
pop
not
sti
cmp
push
lock
stc
hlt
(bad)
xchg
mov
mov
pop
in
jle
mov
outs
enter
cmp
mov
loopne
sbb
and
lahf
in
(bad)
cmps
sbb
jle
loopne
retf
adc
in
cmp
ja
or
out
sbb
fistp
add
bound
ins
stos
ss
out
pop
sbb
scas
loop
mov
mov
xchg
cmp
add
add
and
mov
sar
out
leave
cmp
xchg
sti
and
pop
dec
shl
lock
adc
mov
jne
xchg
jb
clc
sbb
aas
in
cmp
push
add
add
adc
jge
cmp
xchg
std
inc
add
cmps
sub
jl
add
sar
imul
test
outs
leave
jb
xlat
inc
rcl
fst
call
dec
or
pop
mov
leave
std
mov
adc
jge
clc
(bad)
jnp
add
adc
sbb
inc
sar
retf
enter
jle
cmps
xor
pop
dec
rcr
loope
into
or
mov
jle
add
xchg
xor
movs
mov
out
or
fwait
jns
(bad)
sub
jg
arpl
out
sbb
inc
inc
push
mov
aas
xchg
sub
sti
adc
iret
enter
clc
lahf
pop
inc
out
jo
into
jnp
rcl
data16
mov
cmps
mov
fisttp
cld
mov
lock
retf
xor
es
jmp
out
test
scas
sub
cli
in
jl
or
lods
pop
clc
xor
aaa
jae
adc
ja
clc
mov
cld
aas
test
out
into
xor
shl
add
aas
or
and
pop
stos
jge
inc
shr
pop
dec
inc
push
sub
jmp
shl
movs
mov
scas
loop
lods
ret
lds
aaa
arpl
sbb
aas
push
clc
mov
shr
mov
fidivr
mov
add
mov
mov
pop
add
pop
lock
adc
stos
mov
(bad)
out
leave
fstp
inc
add
loopne
adc
int
add
pop
arpl
mov
test
addr16
sar
sbb
fistp
add
push
stos
mov
jb
push
hlt
cmps
add
loopne
push
shl
movs
mov
push
jno
(bad)
loope
lods
fst
sbb
fstp
cmp
aaa
push
dec
pop
jg
loopne
test
hlt
out
out
mov
dec
cmp
sub
inc
inc
pop
inc
inc
mov
loop
lods
ret
lds
daa
push
dec
pop
jg
loopne
add
int
add
sahf
or
mov
pop
arpl
sahf
pop
and
call
test
(bad)
adc
stos
hlt
pop
lods
sub
pop
scas
jnp
jge
call
fcmovb
cmp
jnp
add
das
mov
push
jnp
push
out
jecxz
jle
fisubr
repnz
pop
push
loope
lock
fdivrp
cmps
xchg
fucom
bnd
fsubrp
jmp
dec
out
retf
jge
mov
jg
sbb
hlt
pop
out
ret
mov
mov
pop
js
fbld
mov
xchg
and
fidivr
cmp
and
dec
rcr
and
ficomp
sbb
dec
into
xchg
outs
out
retf
xor
icebp
jle
fmulp
lock
ror
shl
mul
pop
inc
hlt
pop
loop
ss
ret
jnp
add
or
lahf
cmp
clc
mov
aas
pop
lock
jmp
adc
or
repz
jmp
out
(bad)
mov
lods
das
mov
cdq
in
out
inc
ror
cld
mov
fst
and
sbb
xchg
add
loopne
aad
mov
xchg
lock
ret
in
inc
add
loopne
add
inc
pop
ret
lea
pop
adc
fld
jnp
inc
das
rcl
nop
rcr
mov
ret
lock
adc
cmc
bound
arpl
pop
add
adc
xlat
add
dec
mov
cmp
adc
push
lock
mov
sbb
push
rcr
enter
out
push
shl
cld
(bad)
mul
add
test
fld
cs
inc
mov
sar
xchg
jmp
clc
aam
pop
dec
adc
cmp
mov
lock
ds
jle
loopne
add
data16
mov
inc
or
fld
fistp
lock
rcl
mov
inc
sahf
xchg
pop
add
das
push
jl
add
sbb
enter
mov
pop
inc
xor
mov
in
(bad)
fadd
das
pop
movs
mov
inc
or
ror
and
inc
call
iret
pop
mov
xor
fs
sar
js
(bad)
test
(bad)
retf
enter
mov
pop
add
fistp
daa
enter
movs
xor
add
jae
ds
in
hlt
xchg
jnp
enter
(bad)
or
inc
add
or
jl
jbe
push
sbb
jg
jnp
fidivr
mov
jbe
addr16
push
mul
loopne
and
retf
or
and
loope
inc
hlt
add
jle
add
xchg
sbb
rol
mov
cmp
out
or
pop
dec
ror
jnp
loop
sub
jbe
adc
repz
data16
psubq
out
gs
jge
jmp
mov
fisubr
vhaddps
std
icebp
add
es
gs
scas
div
lock
out
push
loope
sbb
push
or
dec
fsubrp
mov
js
(bad)
idiv
cmp
pop
(bad)
jg
mov
and
out
lock
push
xchg
add
or
or
iret
pop
cld
ret
add
and
js
outs
(bad)
data16
push
ficomp
stos
popf
psubb
cmp
xor
and
jl
outs
add
jg
push
lock
hlt
mov
add
in
dec
retf
mov
add
adc
pop
pop
rcl
mov
add
rcr
pop
adc
sbb
ja
jg
loopne
add
add
push
lock
xor
loopne
sub
jmp
sub
jg
test
ret
add
int
mov
retf
test
or
add
lods
(bad)
sahf
mov
pop
rcl
rol
fisttp
lock
ds
in
jl
xchg
cs
clc
push
into
add
mov
pop
dec
inc
outs
dec
aaa
add
gs
arpl
pop
dec
ror
loopne
or
pop
aam
das
fld
js
xchg
sub
jne
jl
loopne
or
and
rcr
clc
cmp
mov
mov
add
push
add
loopne
add
cmp
outs
cmc
add
jg
loopne
add
leave
jge
pop
fimul
fimul
sub
ja
mov
adc
aam
js
vcvtsd2ss
fld
out
movs
add
psllw
mul
add
movs
js
lea
repnz
or
inc
icebp
pop
xchg
cmps
jne
xlat
fadd
out
movs
add
or
ret
sti
sar
outs
pop
bsf
mov
xchg
sub
jnp
add
jg
ficomp
cmp
out
jne
jg
das
fld
jmp
dec
aaa
sub
inc
pop
xor
xor
fstp
outs
xchg
mov
adc
sti
add
xadd
test
neg
sbb
jle
jle
out
int
jnp
fimul
loope
add
retf
pop
rcr
cmp
mov
(bad)
and
lods
pop
loopne
adc
mov
xadd
and
pop
jmp
hlt
test
mov
or
loopne
jns
lahf
fld
lock
jmp
shr
cld
add
push
sbb
jl
clc
scas
push
cmp
mov
aas
pop
mul
into
jmp
in
sub
out
cld
pop
cmp
outs
sub
aaa
sub
iret
out
add
test
mov
into
rcl
push
hlt
out
xchg
fnsave
add
fisttp
lock
cmc
aam
ja
add
sub
imul
hlt
add
pop
push
sar
mov
fsubr
mov
mov
rol
stos
push
js
dec
adc
stos
jp
mov
fild
out
lds
inc
adc
pop
hlt
sar
cmp
add
inc
cmp
loopne
fild
out
lds
fidivr
enter
add
mov
rol
jmp
call
dec
ret
lock
adc
(bad)
jle
shl
pop
or
aam
inc
shl
out
mov
push
add
mov
or
sub
loope
jmp
rol
or
xlat
adc
std
or
loope
daa
ja
xadd
enter
ficomp
or
lock
cmc
adc
stos
add
das
add
inc
jg
rcl
js
loop
push
xor
cmps
sub
imul
cmp
push
add
jmp
or
data16
daa
loopne
call
jg
sbb
shl
fs
xadd
adc
call
add
cs
pxor
out
mov
mov
fmul
cmp
mov
jl
add
mov
out
js
cmp
add
cmp
pop
jp
jge
add
cs
mov
mov
sahf
fadd
mov
mov
mov
or
lock
sub
pop
push
sar
dec
pop
pop
dec
inc
call
mov
xor
fucomp
loopne
push
ror
push
pop
jg
bsf
aas
push
out
lds
adc
push
sar
cmp
std
pop
hlt
repnz
mov
loopne
push
ror
xlat
mov
outs
adc
in
mov
loopne
lods
idiv
sbb
push
pop
clc
or
sbb
(bad)
push
add
adc
pop
cld
popf
cmp
sbb
xchg
js
(bad)
add
push
rcr
push
(bad)
sahf
push
add
push
hlt
addr16
shr
mov
jle
sub
outs
imul
add
adc
fild
clc
or
lock
jmp
loopne
add
rcr
add
mov
outs
outs
fnstcw
lock
test
lods
rcr
clc
outs
add
fnstcw
sar
clc
outs
add
sbb
ja
sbb
xchg
sub
adc
jns
int
jl
retf
cmp
xchg
xor
lock
mov
inc
clc
add
push
loopne
jb
dec
inc
clc
or
in
fmulp
ja
clc
push
add
loopne
adc
(bad)
sub
cmp
jmpw
mov
cld
sub
mov
mov
dec
sub
out
int
add
push
add
xor
pop
rol
aas
stos
xor
or
cdq
pushf
fstp
sar
lock
mov
push
loope
dec
jae
pop
ret
mov
mov
fnstsw
mov
ds
push
(bad)
push
jns
jecxz
out
xchg
xor
lock
fisttp
(bad)
arpl
jge
inc
clc
inc
rcr
pop
test
lock
lock
loop
inc
outs
push
ds
stos
cmp
or
cmovns
clc
(bad)
in
xor
cmp
or
push
icebp
jle
add
cwde
xor
addr16
movs
cmp
retf
cs
outs
jecxz
sbb
mov
pop
retf
mov
call
in
fisubr
jl
movs
fwait
and
scas
sar
jb
xchg
test
int
pop
inc
xchg
sbb
pop
jno
jmp
jp
bnd
mov
enter
leave
std
sub
cdq
pop
inc
(bad)
push
mov
cmp
xor
in
adc
aas
jmp
hlt
js
mov
lock
dec
clc
fisttp
mov
or
sbb
ret
loope
cmc
and
iret
sar
call
add
movs
cmp
retf
clc
daa
rol
or
xchg
add
ror
cld
push
add
or
lahf
dec
add
add
movs
cmp
mov
loopne
dec
add
sub
mov
into
in
add
adc
sbb
dec
add
pop
clc
movs
cmp
add
mov
pop
or
out
sub
retf
pop
iret
add
loopne
sbb
clc
fisttp
cld
push
sar
push
jl
pop
mov
add
sbb
clc
push
sar
add
push
loope
push
push
loope
xor
sar
or
out
leave
fld
(bad)
sbb
or
sbb
adc
call
xchg
add
data16
cld
repz
clc
pop
rol
loopne
add
xor
fild
clc
and
add
or
xchg
imul
(bad)
fadd
inc
lock
add
(bad)
rol
sbb
add
inc
sar
cld
push
add
lar
loopne
dec
add
mov
pop
add
aas
xchg
cmp
rcr
pop
rol
loopne
cmp
loopne
add
lar
jae
mov
cmp
jge
ficomp
mul
icebp
(bad)
xchg
xor
xlat
leave
sti
jmp
ja
pop
dec
inc
(bad)
fcomip
mov
jecxz
popf
mov
fidivr
mul
rcr
in
aas
xor
imul
js
loopne
retf
out
in
adc
imul
(bad)
push
loope
lahf
cmp
dec
aaa
jbe
outs
fsubrp
sar
aas
(bad)
mul
mov
adc
out
not
popa
mov
push
ss
mov
dec
outs
push
mov
jnp
(bad)
sti
repnz
mov
mov
xor
jnp
lock
loopne
push
sar
int
fst
or
mov
jge
fdivrp
cs
std
icebp
(bad)
stos
(bad)
mov
fwait
div
adc
add
cs
jle
ds
in
bound
jnp
dec
cli
mov
ficomp
stos
jge
or
fld
mov
lock
inc
mov
(bad)
aad
jnp
idiv
jne
loopne
js
mov
fwait
aam
cli
pop
or
cld
out
ins
(bad)
arpl
loopne
add
or
fwait
add
call
clc
push
rcl
or
xor
mov
mov
(bad)
xchg
pop
jmp
mov
sub
push
shl
cld
add
jle
add
cdq
push
xor
aam
add
clc
popa
cmp
fwait
or
push
xor
add
out
jmp
lea
loopne
add
idiv
cmp
(bad)
sbb
jle
add
clc
push
rol
test
jle
add
dec
sar
ret
add
lock
mov
pop
jbe
sbb
jns
fidivr
xchg
retf
mov
xchg
cli
sbb
cs
jle
movzx
in
mov
fiadd
mov
xor
jle
rcr
mov
mov
icebp
mov
(bad)
sahf
mov
int
push
imul
add
(bad)
ds
push
mov
jl
cli
idiv
gs
fadd
adc
ret
or
mul
fstp
jg
inc
rcr
xor
adc
lods
add
sbb
xchg
std
add
mov
sbb
and
rcl
(bad)
ret
ror
not
mov
maskmovq
div
not
lea
in
dec
shr
pop
retf
add
stos
imul
(bad)
aad
adc
ffreep
sti
xor
lock
cli
or
(bad)
or
(bad)
push
cld
add
ds
sar
jmp
loopne
int
lock
push
shr
daa
loopne
(bad)
sti
xor
ret
and
mul
cwde
lock
es
adc
jle
sar
lahf
sub
retf
dec
clc
imul
or
jnp
pop
cmc
xchg
lock
sbb
xor
in
mov
popa
add
pop
sub
adc
fbld
loopne
adc
ja
jle
loopne
adc
dec
add
xor
mov
call
dec
fnstsw
adc
clc
xlat
mov
cld
push
add
jb
(bad)
xlat
or
scas
add
pop
add
xor
mov
call
add
xchg
ror
pop
retf
adc
add
ds
sar
add
sub
imul
fiadd
jl
retf
sbb
xor
ins
imul
cmp
out
loopne
enter
add
imul
cmp
ds
shr
pop
icebp
push
fs
fsubrp
int
mov
shl
clc
cmp
pop
pop
jg
cmp
sbb
loopne
lock
fs
neg
(bad)
mov
add
std
jge
jl
fiadd
sar
push
int3
mov
lahf
sub
or
push
int3
mov
imul
ins
stos
(bad)
sbb
pop
sub
or
push
fs
add
pop
xchg
cmp
and
jle
add
mul
pop
mov
xchg
(bad)
add
pop
mov
add
lahf
dec
jnp
(bad)
popa
(bad)
ds
ret
dec
clc
and
pop
cmp
dec
ret
loope
and
jle
cld
jo
mov
in
sahf
and
pop
repz
lock
aaa
xchg
test
nop
(bad)
sub
fstp
xchg
lock
dec
clc
adc
sub
loope
and
(bad)
xchg
lock
dec
clc
add
inc
rcl
cdq
pop
clc
xor
mov
aas
call
cld
dec
add
mov
sub
imul
add
lock
clc
or
xor
cmc
sub
adc
dec
mul
cmp
and
add
lock
outs
jae
cmp
jb
or
or
not
lock
sar
add
fcmovnb
das
and
movups
dec
add
xchg
xor
xchg
adc
ret
test
mov
add
inc
fidiv
fst
xchg
imul
mov
aas
pop
dec
imul
add
out
add
rcr
xstore-rng
cmps
xor
call
retf
mov
dec
ror
sub
out
add
rcr
pop
dec
pop
aas
push
ficom
add
add
push
cld
add
add
add
pushf
push
inc
jns
adc
fwait
mov
cld
stc
add
jmp
cld
jo
clc
push
bnd
add
mov
xor
inc
sti
dec
clc
fist
inc
or
cmp
jle
xchg
test
test
popf
test
or
pop
loopne
xchg
lock
jge
cld
call
mov
dec
adc
jg
ror
pushf
and
dec
daa
loopne
push
ror
fld
(bad)
into
xor
inc
sti
or
aaa
adc
mov
loopne
daa
loopne
or
in
or
rol
outs
scas
shr
adc
mov
sbb
jge
add
and
sub
mov
adc
ins
add
pop
or
add
fld
aas
mov
add
sbb
jo
add
add
inc
shl
sbb
ror
jne
add
mov
or
jno
pop
inc
sar
lock
add
add
or
jle
mov
sti
or
xor
cmp
add
fisub
adc
scas
or
inc
mov
sbb
setb
arpl
clc
xlat
jge
cld
inc
cmp
cld
inc
ds
inc
hlt
and
clc
and
call
das
and
(bad)
dec
adc
jp
(bad)
jne
or
xor
test
inc
aas
add
xlat
mov
cld
xchg
and
mov
loope
or
(bad)
jp
adc
or
clc
inc
jge
cld
test
(bad)
push
cmp
dec
sar
sub
fwait
or
adc
add
jne
add
mov
jg
iret
or
unpckhps
sub
clc
xlat
mov
jl
add
and
adc
or
push
add
jne
add
mov
jg
iret
cmp
sbb
pop
jg
rcr
sar
lock
add
add
or
or
fld
pop
cdq
arpl
pop
jmp
loopne
rol
pop
sub
iret
adc
scas
addr16
jae
clc
test
outs
inc
rol
pop
and
pop
not
lock
out
lock
sti
or
fist
inc
retf
sti
push
add
cmc
sub
cld
add
and
clc
mov
cld
add
sar
push
cld
sar
add
and
outs
fs
cmp
jmp
xchg
adc
outs
clc
or
sub
or
push
or
lds
call
dec
adc
popa
and
sbb
jle
or
and
jmp
dec
and
fcomip
xchg
lock
in
lock
clc
dec
clc
popf
dec
clc
adc
pop
adc
lea
fild
(bad)
or
addr16
ror
loopne
lock
push
jae
clc
test
add
rcr
fstp
pop
add
add
inc
sar
outs
add
push
loopne
adc
outs
clc
or
test
lahf
add
shr
ror
ss
lea
call
add
inc
shl
loopne
daa
loopne
add
or
mov
adc
rol
mov
fmulp
adc
gs
pop
add
xchg
sbb
sbb
outs
clc
or
call
pop
dec
shr
rcr
aaa
jbe
mov
cmp
rcr
inc
adc
sti
adc
not
lea
mov
out
lock
cld
or
inc
dec
jns
packsswb
enter
and
sbb
adc
mov
inc
add
xchg
cmp
addr16
lock
rol
lahf
sub
jmp
loopne
enter
and
cmp
clc
push
ins
leave
outs
jg
jle
shr
loope
lock
iret
leave
xor
out
dec
clc
adc
pop
clc
cmp
dec
sub
xchg
test
and
jg
out
daa
out
jl
or
setb
out
inc
outs
pop
dec
ficomp
addr16
sti
adc
jae
mov
and
iret
and
iret
and
lahf
and
neg
int3
push
pop
add
daa
mov
rol
iret
adc
mov
xchg
sub
pop
and
das
and
mul
loopne
or
ror
xor
out
or
push
ds
pop
aas
(bad)
jae
mov
cdq
cmp
repz
jge
jmp
adc
adc
outs
into
lock
xlat
add
push
lock
ins
aad
xchg
idiv
icebp
mov
sbb
pop
addr16
out
pop
std
das
gs
dec
fisub
cld
mov
add
add
idiv
daa
out
iret
adc
pop
rol
test
call
idiv
sbb
out
inc
sti
push
pop
pop
dec
fadd
addr16
jb
ds
out
retf
lock
std
or
jle
xchg
jbe
mul
push
ins
aad
nop
test
mov
jg
out
jno
outs
nop
not
(bad)
jo
into
(bad)
call
pushf
lods
fimul
ds
cmp
rcr
cdq
inc
fcom
adc
xchg
add
add
mov
ret
fadd
aad
pusha
stos
(bad)
popa
stos
jbe
fdivp
icebp
mov
dec
fnstcw
fcom
icebp
mov
sti
mov
jg
mov
in
fdivr
mov
jnp
adc
lods
mov
xchg
or
dec
adc
int
or
mul
mov
pop
inc
ret
cld
and
jg
sti
push
outs
add
mov
imul
and
retf
into
(bad)
push
add
jg
inc
aas
xchg
mov
rcl
sar
loopne
cmp
fidiv
add
data16
mov
or
add
dec
fld
lahf
jmp
or
retf
into
(bad)
push
(bad)
push
test
or
dec
sar
dec
add
outs
add
inc
sar
push
add
int
sub
add
cmp
sbb
or
xor
call
daa
lock
shr
rcr
aam
(bad)
call
inc
lahf
add
jbe
lock
(bad)
cmp
jmp
sbb
lock
sar
or
(bad)
mov
fistp
jbe
mov
mov
jge
mov
call
lock
sahf
(bad)
sti
outs
mov
repnz
xor
xchg
imul
sub
shr
jns
cld
pop
pop
add
push
stos
dec
adc
xchg
leave
jnp
mov
pop
mov
mov
dec
fiadd
std
sub
arpl
aaa
stc
or
mov
cmp
mov
retf
xchg
lock
mov
add
retf
test
pop
mov
clc
push
add
xchg
(bad)
and
mov
stc
sub
add
lods
sub
cmps
add
bound
scas
add
pop
sub
inc
xor
ror
clc
jb
push
add
es
add
lods
sub
iret
add
pop
add
movs
push
hlt
push
add
sub
inc
xor
sbb
clc
dec
test
add
ja
jle
cs
sahf
and
mul
lahf
jmp
sbb
popf
loope
fs
xchg
xchg
pop
and
(bad)
push
inc
jbe
gs
in
popa
xlat
leave
enter
test
rcr
clc
je
arpl
cmp
jbe
push
rcl
in
dec
sbb
std
xchg
mov
lods
sub
mov
test
(bad)
mov
dec
retf
inc
jbe
stc
sbb
jne
cmp
sti
xor
mov
(bad)
sti
fistp
jbe
or
adc
in
add
das
cmc
jbe
mov
mov
mov
add
cmp
sub
(bad)
jbe
jmp
loope
and
clc
xchg
sti
sbb
gs
jle
ds
out
cli
fnstenv
dec
in
push
retf
mov
dec
pop
inc
jb
ins
in
or
adc
mov
mov
xor
xchg
mov
cli
mov
add
pop
cmps
jbe
fucomi
push
sub
ficom
test
cmp
addr16
sar
rol
das
mov
jb
cmc
(bad)
fld
mov
clc
adc
ds
dec
jge
out
jge
hlt
fist
clc
adc
inc
shr
loopne
sbb
popf
mov
lock
sub
mov
add
sbb
jbe
push
(bad)
pop
pop
clc
xor
lahf
add
out
loopne
mov
mov
mov
out
fadd
lahf
jecxz
test
mov
inc
loopne
and
fisttp
lock
pop
jg
sbb
jmp
adc
sbb
pop
dec
pop
lahf
or
adc
jmp
adc
sbb
mov
aad
cmps
jle
jg
mov
jp
lods
(bad)
add
call
aas
inc
loopne
mov
enter
lock
scas
pop
cld
push
rcr
outs
pop
retf
or
mov
cli
jae
mov
jecxz
scas
(bad)
sti
cmp
(bad)
adc
clc
and
inc
jg
mov
in
fisubr
lock
cs
push
ds
sbb
mov
inc
aas
or
sub
ds
sbb
lahf
das
out
and
ja
lea
faddp
jmp
fwait
or
jge
(bad)
icebp
loope
ret
pop
call
scas
(bad)
sti
test
ds
out
out
fs
jle
ficom
jge
push
cmps
(bad)
scas
mov
fadd
imul
xor
mov
das
loope
push
hlt
pop
or
xor
cli
ja
mov
inc
enter
mov
cld
lds
pop
psubb
mov
cs
jno
ja
iret
xchg
fst
hlt
xchg
mov
cs
clc
ss
ja
mov
and
mov
cld
sbb
add
loopne
add
cmp
inc
lock
lock
jbe
push
adc
aas
adc
imul
dec
push
lock
ja
(bad)
cmp
iret
add
ror
out
mov
cmp
retf
jl
lock
ja
xchg
jns
jbe
fs
out
mov
jbe
cmp
mov
clc
rcl
in
mov
and
in
std
or
jg
addr16
int
xor
iret
ret
icebp
pop
mov
pop
retf
ds
sub
fbld
push
retf
fidiv
out
addr16
inc
jns
dec
fiadd
loope
stos
(bad)
xchg
fst
cmp
mov
xchg
push
mov
adc
into
loopne
rol
outs
int
es
add
or
pop
in
xor
mov
icebp
outs
pop
dec
fcmovbe
push
dec
adc
adc
add
push
scas
push
addr16
(bad)
push
out
xchg
cmp
mov
fstp
or
mov
jle
mov
in
aad
out
cmp
imul
sub
(bad)
jl
loopne
dec
clc
jmp
rol
addr16
push
out
cli
jge
in
in
jg
jnp
retf
cs
mov
sub
adc
jl
pop
clc
mov
loope
aad
pop
das
lock
loope
sbb
sbb
sub
jp
mov
outs
mov
or
sbb
lahf
or
jge
rcr
clc
lods
pop
sub
push
sub
mov
call
cmc
add
adc
cld
cdq
mov
addr16
call
add
lods
ds
jmp
in
loopne
neg
rcl
scas
pop
clc
out
clc
lods
pop
cmp
sti
test
iret
push
pop
aas
xchg
xchg
fisttp
lock
jge
lock
in
loopne
sti
in
loopne
sub
xlat
retf
sti
xchg
(bad)
sub
std
xchg
push
shl
mov
push
shr
xor
push
and
cmp
mov
fucomp
jae
out
das
gs
rcr
mov
into
loopne
gs
mov
rcr
mov
out
(bad)
iret
sar
jns
shl
pop
push
out
aaa
loopne
sbb
scas
nop
neg
in
or
jg
out
out
jge
mov
icebp
mov
loop
sbb
scas
nop
neg
in
and
arpl
inc
mov
jge
rcr
fwait
sbb
sub
inc
call
ret
lock
jle
push
lock
call
(bad)
sahf
sbb
ss
loopne
leave
adc
sub
clc
xchg
add
sub
mov
add
dec
jge
lock
add
xchg
xchg
(bad)
je
xor
ins
enter
loopne
test
loopne
or
fwait
mov
(bad)
sar
mov
and
cli
xchg
int3
call
sbb
stos
call
outs
lock
shr
add
dec
cmp
or
sub
inc
clc
out
add
sti
add
push
xor
mov
mov
dec
pop
retf
sbb
inc
mov
pop
adc
xchg
retf
sti
iret
in
sahf
mov
out
mov
mov
dec
lahf
adc
mov
shr
push
shr
cmps
mov
sbb
ja
jnp
adc
cld
sbb
out
rcr
cmp
jecxz
(bad)
sahf
sbb
clc
jnp
jbe
cmps
push
ror
jns
mov
mov
jmp
aas
xchg
cmp
clc
jnp
fstp
scas
fsubr
jecxz
(bad)
mov
retf
loopne
icebp
jle
in
jge
jmp
test
cmp
ret
ret
lock
not
shl
stc
inc
mov
or
aaa
and
idiv
imul
aaa
sti
jae
jg
xchg
ja
mov
cmp
cmps
inc
clc
pop
jae
test
out
cld
xor
(bad)
mov
retf
and
aaa
cmp
add
sub
push
push
lock
push
loope
int3
icebp
adc
inc
lahf
xchg
in
test
loopne
adc
(bad)
rcr
sbb
add
sbb
out
ror
pop
push
xchg
cmp
inc
jl
lock
cli
cmp
clc
inc
add
adc
std
sti
push
hlt
out
rcr
and
cmp
dec
mov
test
mov
addr16
enter
hlt
cmp
shr
dec
cmps
loope
xchg
cmp
inc
jge
lock
int
pop
jbe
sub
ja
sub
xchg
push
shr
outs
int3
sti
scas
in
sub
ja
sub
pop
iret
mov
jg
addr16
(bad)
mov
mov
xchg
cmp
or
adc
hlt
mov
mov
xchg
cmp
dec
cli
lods
call
movs
shr
call
inc
inc
(bad)
mov
(bad)
pop
sub
sbb
leave
mov
jg
addr16
pop
dec
rcr
inc
dec
xchg
movs
mov
ds
add
sti
test
call
(bad)
jnp
adc
add
in
das
lock
adc
cmp
hlt
out
lea
shl
repz
add
mov
icebp
dec
sahf
mov
je
out
lahf
adc
aas
add
add
and
call
lahf
mov
adc
pop
adc
dec
test
ja
test
aas
lahf
mov
loopne
rol
mov
fucomip
mov
mov
add
add
add
cli
pop
in
aas
add
xchg
mov
jl
cli
xlat
push
sar
dec
fiadd
jge
(bad)
lahf
enter
gs
pop
mov
adc
pop
push
sar
lock
call
mov
daa
loopne
cmps
(bad)
lods
ficom
neg
iret
and
push
mov
adc
cmp
call
and
das
retf
mov
mov
add
js
xchg
dec
call
retf
ds
and
cld
retf
add
movs
mov
add
add
pop
add
cli
mov
sub
mov
add
add
or
popf
pop
sub
xlat
test
das
mov
aas
xor
jg
cld
dec
push
hlt
cmp
rcr
inc
fbld
fimul
das
xlat
jg
test
lods
call
aaa
push
shl
cmps
mov
push
shr
int3
push
rcr
inc
inc
jg
adc
add
cs
retf
cmc
arpl
in
xchg
sbb
cli
sub
adc
push
cmp
sub
jge
adc
ja
mov
xor
cmp
sub
and
iret
mov
xchg
jo
mov
jecxz
fnstsw
leave
pop
dec
inc
jg
mov
js
aaa
mov
(bad)
std
inc
mov
leave
jnp
(bad)
cmc
loope
in
sbb
mov
in
ins
iret
vzeroupper
mov
iret
(bad)
sti
inc
js
dec
fidiv
mov
mov
std
ds
mov
jge
jnp
and
in
sahf
xor
aam
pushf
leave
cmp
mov
std
pop
pop
das
pop
fdiv
neg
jge
(bad)
test
into
hlt
cmp
dec
lahf
imul
lock
hlt
out
cmp
cmp
mov
ja
sbb
in
into
icebp
push
outs
mov
mov
mov
sub
loopne
int
imul
in
loop
out
xor
out
psubb
add
clc
mov
clc
retf
hlt
aam
outs
cmp
cmp
push
jle
iret
push
(bad)
lahf
push
hlt
pop
push
shr
push
clc
xchg
ret
test
cs
mov
cmps
add
sbb
clc
(bad)
jbe
jnp
call
inc
cmp
sbb
out
rol
lar
pop
or
fwait
je
jmp
mov
data16
stos
mov
data16
clc
and
sti
outs
(bad)
(bad)
call
fwait
movs
cmp
lock
imul
jb
gs
into
sti
in
inc
xor
and
ficomp
clc
mov
add
add
sub
(bad)
cmp
clc
out
rol
pop
mov
and
(bad)
neg
cmp
mov
jge
lock
push
adc
jnp
add
and
loopne
cmps
sbb
pop
mov
sbb
gs
cs
outs
outs
mov
jnp
fnstcw
adc
push
push
hlt
jnp
or
or
std
imul
pop
inc
or
dec
pop
ret
mov
outs
dec
jnp
cmp
xchg
popf
std
das
xchg
lods
test
mov
rcl
lea
mov
movs
mov
jnp
hlt
dec
jmp
cmp
(bad)
aad
(bad)
push
(bad)
sub
pop
cmp
pop
ds
js
mov
lock
jbe
out
into
hlt
(bad)
mov
push
dec
inc
aas
mov
fiadd
retf
call
hlt
(bad)
call
mov
cmps
xor
pop
mov
loopne
mov
(bad)
mov
imul
mov
hlt
mov
mov
or
inc
push
hlt
jmp
sti
and
mov
adc
jle
sbb
and
mov
dec
inc
jg
adc
push
ficomp
mov
cmp
add
les
fidivr
retf
mov
dec
addr16
lahf
and
inc
adc
lahf
jns
call
fimul
sti
sub
cli
das
adc
mov
dec
out
stos
sbb
leave
jge
mov
mov
mov
sub
out
retf
aas
inc
inc
jg
add
pop
sub
mov
call
fstp
div
aas
cmp
dec
jbe
inc
outs
dec
fcos
push
push
lock
gs
ja
rcr
sub
in
aas
cmp
ror
repz
(bad)
ds
retf
in
pushf
jge
out
sub
mul
or
fidivr
push
stos
pop
lods
mov
inc
push
rcr
xchg
aam
or
stc
cwde
rcr
xchg
sbb
xchg
or
clc
push
out
push
add
push
sar
xor
sub
cli
add
inc
jl
jno
adc
hlt
inc
rol
clc
nop
(bad)
pmulhw
daa
loopne
xor
or
dec
rcr
mov
add
jl
mov
add
sahf
pop
xchg
in
add
repnz
mov
push
loopne
xor
mov
cmp
xchg
pop
clc
adc
aaa
adc
out
gs
pop
in
jns
es
and
fistp
test
les
sub
(bad)
jl
sbb
push
loopne
cdq
ds
retf
jb
xchg
xchg
push
xchg
mov
push
fbstp
push
fiadd
fwait
jns
cmp
inc
jg
adc
shl
push
movs
mov
out
iret
gs
ficomp
aas
mov
xor
mov
in
jns
mov
mov
jg
loopne
retf
push
shl
clc
lods
repnz
sub
pop
sub
sar
xor
out
and
cdq
mov
neg
xchg
aam
ficomp
fistp
cmp
inc
fild
retf
lock
jecxz
or
mov
neg
imul
dec
lock
stos
mov
add
shr
xor
jl
ror
outs
pop
xchg
add
outs
inc
fild
loopne
jge
cmp
iret
movs
mov
aas
sahf
mov
adc
cmps
test
fucomip
arpl
pop
loopne
sar
or
xor
fstp
(bad)
test
mov
pop
loopne
test
call
stos
(bad)
inc
rol
out
daa
lock
shr
xor
addr16
add
add
cmc
add
and
movups
push
mov
jbe
test
cdq
mov
hlt
xchg
push
rol
test
cmp
cli
je
xor
add
pop
xchg
add
das
pop
xchg
push
ror
out
neg
out
sub
std
outs
sub
mov
hlt
add
in
mov
fnstsw
sub
and
out
mov
pop
and
cmp
xchg
(bad)
jbe
in
and
jle
xchg
mov
add
jge
jle
add
call
shr
not
(bad)
fadd
addr16
jge
test
add
push
mov
or
push
xchg
outs
mov
and
rcl
and
std
dec
or
fnstsw
or
adc
push
hlt
and
mov
jecxz
mov
ja
lock
mov
repz
jmp
and
idiv
test
inc
in
ror
push
ror
lock
or
ja
(bad)
sti
and
xor
clc
popa
and
push
pop
adc
pop
jmp
mov
movs
ror
clc
add
and
fst
cld
mov
cld
push
pop
add
arpl
push
cli
or
mov
fstp
push
or
xor
jle
xchg
sbb
pop
mov
jp
jle
pop
sub
cld
movs
or
xor
sub
movs
add
sahf
sub
mov
cmp
jle
mov
mov
and
in
(bad)
pop
jmp
std
push
jl
iret
sub
jle
add
inc
rcr
aas
movs
sub
cmp
jae
clc
dec
lahf
add
push
add
add
jp
xchg
sbb
and
das
and
outs
xlat
enter
mov
and
in
ret
pop
jmp
std
push
mov
jl
add
push
add
add
(bad)
pop
pop
jg
add
es
inc
sar
sbb
rcr
out
dec
adc
jnp
add
cwde
aam
ja
dec
out
jbe
push
inc
xor
cmp
addr16
dec
clc
xor
adc
add
add
clc
(bad)
xchg
lock
mov
(bad)
stc
dec
clc
dec
and
push
out
and
mul
jnp
inc
add
or
daa
lock
xor
jb
clc
jno
add
pop
or
jno
pop
inc
sar
lock
and
mov
lock
lock
idiv
cld
mov
iret
cmp
pop
int
pushf
std
sbb
inc
adc
out
addr16
rol
movs
add
pop
jne
mul
cmp
inc
rcr
mov
fisubr
aas
into
shr
int
cmp
dec
shl
lock
adc
mov
jns
inc
sar
pop
sbb
stc
in
loopne
(bad)
fsubr
aam
ds
shl
rcr
mov
lock
adc
out
addr16
jmp
clc
dec
mov
aaa
xchg
xor
or
idiv
mov
rcr
xor
inc
test
push
adc
out
addr16
xchg
or
dec
or
icebp
add
push
mov
inc
rcr
mov
mov
hlt
sbb
xor
fisubr
loopne
iret
adc
neg
inc
adc
xor
(bad)
sub
das
or
jle
mov
inc
pop
stos
mov
add
add
and
mov
outs
rol
enter
shl
xchg
add
mov
cmc
and
add
fnstsw
xchg
frstor
fnstcw
mov
xchg
push
jl
sub
data16
cdq
pop
clc
dec
(bad)
aad
mov
lock
loopne
movs
test
dec
loopne
test
(bad)
lds
mov
(bad)
pop
add
fnstsw
cld
push
cmp
pop
cmc
arpl
lock
jle
int
mov
jb
std
adc
loopne
aam
mov
es
adc
pop
fs
or
jmp
push
(bad)
into
in
add
sub
push
int3
call
pop
dec
aaa
mul
sbb
sti
add
not
lock
test
ficom
jecxz
sub
(bad)
div
lahf
mov
add
jle
mov
ds
push
xchg
mov
lahf
mov
add
and
aas
enter
mov
jns
push
add
fidivr
lock
jbe
mov
daa
sti
hlt
ds
fisub
retf
sti
cmp
lock
std
inc
add
mov
cmps
lods
fcmove
sti
sub
xor
das
xor
call
nop
sbb
sub
ja
sar
lods
mov
imul
rcr
test
add
dec
imul
jmp
and
push
xlat
push
push
rcr
dec
inc
push
jg
mov
sub
mov
aad
into
pop
in
pop
lods
aad
inc
loopne
dec
ret
jecxz
in
icebp
sti
test
xor
das
jne
ds
clc
aam
movs
mov
mov
sub
lss
pop
les
cld
in
ret
mov
adc
inc
pop
clc
(bad)
lods
aad
in
or
repz
adc
push
jns
jg
in
(bad)
aaa
sbb
pop
scas
cmps
outs
push
fs
pop
and
xchg
(bad)
push
jb
test
sub
jg
add
lock
or
btr
jg
and
in
ret
push
inc
clc
sub
hlt
mov
imul
addr16
dec
xchg
push
psraw
and
shld
clc
btr
xchg
add
adc
cld
or
sub
push
jl
mov
jp
inc
sub
pop
and
scas
and
pop
adc
xchg
cli
and
cmp
data16
inc
pop
add
inc
addr16
gs
stos
jge
cld
sub
pop
add
popa
xchg
cmp
pop
scas
adc
std
sub
inc
add
inc
(bad)
call
dec
jge
ja
loope
outs
shl
adc
pop
dec
ret
ror
clc
dec
dec
clc
btr
sbb
adc
jne
pop
inc
pop
inc
mov
(bad)
retf
pop
test
sub
ret
addr16
dec
into
adc
sti
or
btr
sbb
inc
or
xchg
add
xchg
cli
jecxz
call
cdq
mov
das
add
mov
cld
aas
or
add
popf
add
xchg
hlt
pop
rol
call
hlt
xor
pop
psubb
add
dec
push
hlt
mov
clc
adc
jg
add
mov
cmp
daa
clc
dec
sub
inc
jg
ror
cld
inc
pop
sar
cmp
lahf
sub
jecxz
call
pop
rcr
mov
bnd
fidivr
retf
sbb
push
loop
cmp
lahf
sub
shl
(bad)
xchg
pxor
out
std
inc
lahf
(bad)
out
dec
xchg
idiv
jmp
mul
scas
hlt
jl
jae
mov
ds
mov
fidivr
dec
sub
mov
mov
pop
in
inc
pop
or
out
push
rcr
inc
aas
push
scas
rcr
std
and
add
ins
stos
(bad)
sub
ja
mov
cld
sub
adc
sbb
cli
pop
add
sub
std
jecxz
hlt
push
push
rcl
push
outs
mov
pop
dec
inc
call
test
lods
(bad)
mov
cmp
mov
mov
pop
sub
iret
test
scas
movs
mov
mov
std
push
hlt
pop
stc
test
in
dec
clc
pop
(bad)
push
dec
js
imul
rcr
xchg
lock
lock
push
sar
movs
mov
sub
cli
and
iret
adc
aas
repnz
ror
retf
mov
lahf
out
mov
cmp
inc
add
push
xchg
mov
sub
icebp
cmp
test
shr
enter
loopne
mov
xor
adc
pop
gs
push
js
(bad)
div
js
das
loope
mov
cli
or
add
lahf
add
enter
jle
xchg
cmp
mov
cmp
push
cld
add
jle
add
loopne
or
std
or
stos
or
push
add
add
loopne
cli
or
lds
push
cld
bound
outs
or
mov
sbb
and
pop
dec
rcr
cli
outs
loope
mov
std
sub
pop
pop
or
in
sbb
(bad)
fstp
adc
push
jge
std
ins
sbb
lock
and
scas
es
nop
lock
push
shl
or
ret
popa
ret
cld
push
lahf
add
add
rcr
out
int
lock
adc
push
adc
xor
pop
es
adc
jnp
add
jae
add
in
xor
arpl
push
add
sub
aaa
adc
jnp
add
add
jg
add
add
xchg
sub
jnp
clc
mov
mov
add
outs
xchg
xor
mov
loopne
add
scas
pop
fwait
jge
cld
das
or
xor
add
fidivr
test
sbb
enter
mov
lock
add
jae
add
in
xor
in
or
add
loopne
or
pop
or
imul
out
lock
outs
pop
ret
and
fwait
jae
clc
data16
add
pop
add
sbb
cmp
dec
shr
loopne
and
dec
movs
or
rol
fadd
mov
sbb
sub
out
int
push
ret
clc
cmp
mov
lock
addr16
clc
mov
mov
cld
pop
jp
mov
loopne
nop
lock
sti
dec
clc
xchg
sbb
mov
mov
cdq
and
(bad)
pop
adc
test
pop
rcl
sbb
loopne
jb
clc
ss
add
cdq
pop
fwait
shl
pop
addr16
cmp
clc
imul
cmc
add
push
add
lock
addr16
std
mov
arpl
add
sbb
push
fist
iret
mov
das
aam
mov
mov
xchg
mov
das
pop
stos
mov
loopne
add
int
add
sbb
int
stc
fsubr
xor
loopne
into
mov
jnp
pop
mov
mov
fwait
les
out
in
repnz
(bad)
movs
repz
jmp
pop
mov
lahf
pop
mov
or
mov
lock
jns
mov
ins
sub
xchg
mov
hlt
xor
out
data16
jl
(bad)
out
inc
ja
fstp
test
add
mov
ds
lods
sbb
shl
outs
add
jecxz
pop
mov
mov
jnp
pop
mov
jecxz
sub
jecxz
cmp
(bad)
push
ins
xor
lods
fisub
pop
ins
shl
mov
in
ss
popf
jmp
stos
std
mov
mov
(bad)
mov
mov
dec
lahf
imul
jl
xor
in
push
lods
jbe
adc
push
loopne
movs
mov
in
mov
push
clc
pop
stos
popf
dec
ror
sar
gs
scas
sub
mov
dec
inc
dec
cmp
lods
hlt
mov
mov
dec
xor
sahf
xor
push
hlt
pop
add
inc
inc
dec
jb
xchg
cmp
out
pushf
sti
and
std
daa
pop
add
and
rcr
lahf
clc
or
mov
or
mov
push
mov
std
pop
repnz
dec
ror
loopne
inc
sar
rol
clc
mov
std
jle
(bad)
xchg
sub
std
popa
push
hlt
aas
mov
jbe
leave
mov
jnp
lods
fidiv
repnz
or
mov
std
add
add
aas
mov
mov
jge
add
mov
into
leave
mov
aas
(bad)
addr16
outs
pop
ret
lahf
and
cmp
clc
dec
mov
hlt
sbb
clc
pop
adc
xchg
enter
std
or
cli
je
xor
mov
fdivrp
pop
sub
xchg
fnstsw
or
lock
push
hlt
lahf
test
mov
std
pop
mov
cpuid
mov
out
fcomp
jbe
cli
sbb
fld
(bad)
in
out
pop
sbb
gs
test
aas
add
pop
rcr
push
pop
and
popf
jmp
fs
add
xchg
cmp
loopne
and
aas
int
mov
enter
and
push
rcr
call
pop
xchg
jecxz
outs
xchg
iret
xchg
fstp
jle
add
rcr
fs
and
mov
stos
add
lea
mov
push
stc
sbb
cmp
loopne
or
dec
mov
idiv
in
xor
inc
inc
jg
mov
aam
enter
inc
jbe
clc
sbb
lea
aaa
call
add
imul
sbb
sti
push
inc
jbe
cli
sbb
pop
xchg
jecxz
out
and
cmp
aas
int
lock
adc
aas
es
push
inc
call
jg
cmp
(bad)
enter
push
cld
idiv
mov
jmp
add
imul
inc
and
in
and
fst
nop
lock
imul
sub
pop
dec
clc
dec
mov
hlt
aas
mov
inc
mov
push
lock
push
scas
pop
xchg
arpl
(bad)
addr16
pop
dec
ret
shr
(bad)
mov
adc
aas
cmps
mov
shr
xchg
add
xor
pop
add
js
outs
out
pop
loopne
leave
adc
and
clc
mov
mov
(bad)
mov
loopne
add
or
sbb
lock
adc
outs
out
pop
loopne
int
cld
movs
ds
lock
call
cmp
or
jbe
fild
clc
add
cdq
rcr
xor
inc
lock
sbb
inc
aas
mov
add
pop
xchg
mov
ss
push
hlt
jecxz
loopne
leave
sti
inc
js
int3
(bad)
mov
mov
std
xchg
push
hlt
jecxz
call
sub
iret
mov
hlt
scas
push
rcr
inc
inc
jg
faddp
loope
popf
mov
cmps
mov
mov
cli
jne
or
xchg
adc
jecxz
call
adc
lahf
gs
xchg
fisttp
aas
mov
jne
(bad)
sub
cli
jne
push
hlt
jmp
push
hlt
mov
call
xchg
mul
call
jb
push
sar
jne
hlt
jecxz
call
test
shr
out
mov
pop
lock
push
sar
movs
mov
inc
sub
icebp
jp
loop
cmp
pop
adc
hlt
push
clc
lods
call
push
rcr
add
jns
mov
not
push
rcr
pop
shl
test
scas
adc
xor
cli
iret
jge
hlt
push
in
rcr
mov
aas
xchg
sbb
rcr
ret
or
iret
mov
jl
add
add
add
mov
and
aas
not
lock
out
lock
cli
or
dec
or
jno
cld
xchg
add
add
jns
cmp
cmp
xchg
clc
sub
fadd
pop
cdq
arpl
pop
jmp
rcr
mul
out
add
sub
(bad)
es
inc
add
aas
(bad)
jle
and
scas
int3
xor
scas
hlt
sbb
mov
ror
xchg
repnz
aas
(bad)
jle
and
fild
stos
cmps
lods
scas
xchg
ja
xor
jae
add
mov
jg
iret
xor
pop
sub
jmp
clc
iret
mov
jl
add
out
int3
xchg
bnd
add
jns
cmp
std
int
imul
retf
daa
xchg
int
popa
js
sbb
xchg
loope
jg
pop
sub
neg
cld
das
push
rcr
jb
shl
sub
push
or
aad
cmp
(bad)
push
push
loopne
add
int
call
aaa
xlat
or
mov
mov
xlat
sti
add
pushf
sub
cmc
add
clc
das
div
out
data16
adc
or
das
jl
mov
stc
add
dec
adc
adc
pop
add
sbb
mov
jle
sub
fwait
add
lock
jae
mov
cli
scas
push
rcr
mov
inc
mov
adc
stc
push
hlt
jecxz
call
cmps
mov
jg
mov
cli
mov
hlt
sti
push
rcr
and
sbb
test
mov
sub
dec
in
out
push
iret
not
mov
sti
cmp
pop
jb
mov
int
or
icebp
mov
outs
xchg
div
adc
pop
fs
mov
sub
sti
js
clc
pop
in
into
or
xor
sbb
fdivrp
out
bt
out
adc
test
repz
jne
dec
outs
(bad)
and
sqrtps
jg
gs
add
mov
jne
pop
outs
(bad)
sub
iret
add
mov
sbb
xchg
imul
aaa
xchg
lock
fnstcw
sub
add
out
daa
add
retf
outs
pop
retf
mov
inc
jmp
or
ss
loopne
add
js
fbld
lock
pop
retf
clc
jecxz
loopne
rol
fild
lock
add
movs
(bad)
push
dec
jl
lock
loopne
jae
ja
ror
pop
(bad)
cmp
repz
add
loopne
hlt
rol
outs
int3
mov
fucomip
mov
fild
out
repz
jg
movs
cmp
push
jle
sbb
movs
sbb
out
dec
icebp
(bad)
gs
out
mov
mov
ds
xchg
fld
out
sar
ds
cmps
ficomp
mov
sub
(bad)
bnd
fidivr
mov
cmp
sar
ds
out
retf
out
cs
pop
jbe
or
icebp
je
ja
sti
mov
hlt
pop
fnstenvw
or
out
test
addr16
dec
out
mov
jl
hlt
idiv
fdiv
js
hlt
test
pop
fnstenvw
daa
ins
fst
fmulp
das
add
xor
div
pop
jbe
sti
fdiv
js
hlt
ud2
cld
or
out
jecxz
mov
add
(bad)
mov
shl
jnp
(bad)
xor
pop
dec
inc
aas
sahf
sbb
arpl
mov
sub
cld
mov
test
enter
inc
mov
jle
jecxz
(bad)
outs
fst
add
stos
sub
jbe
mov
not
jge
push
leave
enter
aas
mov
(bad)
sub
pop
jbe
in
test
push
adc
aas
mov
jle
ficomp
call
call
adc
call
das
jns
add
dec
test
stos
call
push
hlt
pop
stc
js
cli
jmp
neg
fcomi
adc
lahf
inc
sar
loopne
adc
aas
cmc
cld
ds
mov
mov
lock
stc
or
cmps
jae
clc
cmps
jge
jl
add
and
lahf
xchg
not
add
push
add
cmps
sahf
packsswb
cld
push
push
lock
imul
cmp
icebp
inc
ja
jmp
lahf
neg
dec
or
xchg
and
push
pop
adc
push
adc
cmps
and
imul
push
adc
sub
imul
jb
js
clc
dec
ds
pop
cmps
mov
fbld
not
lock
gs
inc
add
ins
add
inc
shl
sar
pop
loopne
daa
loopne
repnz
jmp
jmp
add
mov
call
call
sub
jg
(bad)
aad
sub
jmp
loopne
repnz
jmp
jmp
jmp
retf
aas
and
outs
and
xchg
or
out
(bad)
adc
(bad)
sub
add
(bad)
sbb
dec
cmp
xchg
fstp
cmp
add
adc
(bad)
ins
inc
hlt
jns
cld
mov
mov
test
mov
jbe
sub
test
neg
rcr
(bad)
mov
ins
mov
dec
fimul
out
inc
js
sbb
lahf
in
fidivr
mov
jmp
sar
inc
mov
enter
mov
sti
in
js
pop
add
sbb
fnstsw
mov
push
jl
mov
in
ret
repnz
iret
(bad)
js
push
add
adc
ja
lods
pop
xlat
popf
cli
inc
hlt
fbstp
push
loopne
add
inc
push
hlt
jg
clc
dec
add
popf
add
sbb
aas
add
jge
jg
inc
lock
stc
add
add
es
shl
(bad)
ds
pop
cld
int
(bad)
mov
cld
in
pop
add
sub
(bad)
jl
loopne
add
mov
mov
adc
mov
cld
xchg
push
hlt
(bad)
clc
push
out
push
sub
lea
add
fwait
add
adc
(bad)
lods
sbb
cli
mov
push
hlt
fbld
std
pop
add
pop
pop
retf
inc
push
test
loopne
push
shl
test
(bad)
mov
jg
addr16
pop
cmps
mov
sbb
mov
and
push
inc
jbe
xor
push
hlt
push
adc
mov
jbe
mov
iret
mov
int
mov
jg
adc
out
retf
cmp
bound
in
cld
jmp
das
jne
cld
stc
iret
(bad)
retf
das
ja
lea
fild
mov
faddp
push
sar
push
hlt
sbb
pop
sar
(bad)
test
add
mov
shl
fld
sub
scas
sub
out
jbe
cmc
jmp
pop
mov
jle
mov
add
xor
xor
xor
xor
ja
xchg
fstp
iret
or
fcompp
and
repz
js
test
call
dec
push
aam
jbe
daa
sahf
fdivr
or
movs
jnp
out
or
push
adc
and
add
(bad)
pop
lods
mov
in
ds
lock
lock
sub
aas
adc
ss
and
add
stc
dec
mov
out
mov
jne
stos
push
jne
jo
out
idiv
(bad)
addr16
vfrczsd
fnstcw
lock
lock
or
clc
(bad)
idiv
jbe
lock
dec
mov
retf
aas
repnz
mov
loopne
adc
aad
mov
stc
retf
outs
out
pop
mov
jbe
jp
mov
popf
inc
push
jmp
sbb
inc
mov
dec
cmp
in
cmp
fs
pop
call
in
cmp
push
ja
(bad)
push
iret
xor
aas
neg
lock
loopne
pop
clc
or
pop
js
(bad)
xlat
scas
outs
out
idiv
sub
in
jmp
add
inc
add
das
or
add
repz
adc
add
mov
hlt
cdq
add
jl
push
or
cmp
pop
retf
rcl
ds
jmp
xor
mov
rol
into
test
(bad)
les
out
lock
sbb
clc
ja
lock
or
dec
js
js
or
jae
mov
in
mov
imul
fndisi(8087
dec
clc
dec
das
pop
adc
cmp
cdq
(bad)
xchg
sub
jnp
xchg
out
data16
cmp
in
addr16
loop
jnp
xchg
jmp
cdq
fdiv
pop
mov
cmp
scas
mov
mov
mov
into
mov
fisttp
xchg
adc
lock
(bad)
xchg
lock
lock
add
mov
mov
out
xor
inc
clc
fidivr
jecxz
push
ficomp
cmps
xor
fidivr
jecxz
retf
sbb
push
add
icebp
and
mov
inc
aas
jmp
icebp
(bad)
mov
mov
shr
loopne
or
mov
sbb
clc
or
dec
fnstcw
repnz
enter
mov
pop
xor
iret
mov
aaa
xchg
jmp
aas
fucomp
cmp
dec
idiv
retf
out
ins
add
clc
outs
mov
nop
and
sbb
clc
iret
adc
std
icebp
sahf
(bad)
arpl
add
outs
out
jbe
fnsave
out
push
ds
fild
cld
and
pop
mov
iret
cmps
test
dec
loopne
xor
cmps
aam
fild
fistp
mov
sub
pop
mov
cld
sbb
dec
fisub
pop
or
movhps
pop
retf
js
loopne
or
lock
ret
js
clc
inc
xchg
sbb
fisttp
jg
rcr
enter
pop
rol
add
pusha
xor
xor
shl
dec
mov
push
lock
daa
add
movs
fwait
and
shr
mov
and
dec
mov
test
clc
retf
add
clc
test
ret
add
add
mul
or
mov
add
jbe
mov
mov
add
pop
aas
cmp
clc
push
add
data16
jg
loopne
add
sbb
pop
add
ror
jns
mov
(bad)
rcl
(bad)
jl
lock
stos
mov
sub
(bad)
or
jae
sar
mov
int
sahf
cmps
lods
(bad)
or
dec
rol
add
inc
mov
lods
(bad)
sar
adc
outs
rcr
test
sti
test
pop
loop
sar
inc
mov
adc
and
sar
push
add
adc
cmp
and
fistp
mov
xchg
popf
ret
ror
xor
xchg
jge
out
leave
mov
jle
add
sub
add
inc
ror
loopne
rol
cmp
or
mov
rcr
mov
gs
idiv
aad
popa
stos
(bad)
sar
xchg
sahf
xchg
pop
inc
add
and
push
ficomp
loopne
addr16
loop
clc
mov
call
mov
push
add
lar
add
loopne
and
add
clc
and
push
dec
rol
lock
adc
inc
or
xor
or
frstor
loopne
js
jmp
pop
in
push
out
lds
lods
sar
ins
aad
loope
sar
js
jmp
add
push
or
add
jcxz
xchg
sbb
mov
shl
sub
add
mov
fnsave
sar
add
lock
ficomp
add
clc
add
fst
jle
loopne
movs
test
fcmovne
add
push
loopne
lods
jmp
test
sub
mov
test
mov
out
add
add
push
or
pop
sub
add
dec
and
mov
clc
and
sbb
pop
jecxz
inc
xor
xor
fiadd
cld
or
pop
mov
push
test
out
cs
jg
lock
out
push
sar
int3
call
clc
fiadd
pop
adc
xchg
xor
add
push
hlt
outs
rol
ror
clc
nop
shr
cld
fdiv
xlat
add
pop
jl
loopne
add
sbb
jg
cld
pop
psubb
pushf
pop
jl
loopne
add
pop
mov
clc
xor
lock
xor
clc
add
inc
jp
pop
add
dec
add
and
(bad)
cld
mov
cld
dec
sbb
push
cld
mov
pop
adc
xor
aas
rol
sub
jmp
aas
rol
and
ja
jle
pop
jl
rcr
xor
cmp
mov
clc
add
add
icebp
push
lock
cmp
loopne
add
in
jp
out
cld
ja
aas
xor
xor
rol
ds
pop
add
adc
out
jns
fnstcw
out
stc
repnz
dec
pop
fldpi
aam
test
or
out
test
pop
xor
sar
sar
imul
mov
mov
sti
rcr
add
adc
adc
jg
out
jecxz
js
pop
out
jecxz
js
add
pmaddwd
enter
cmovnp
cmp
mov
xor
mov
icebp
(bad)
push
mov
ja
std
jo
not
inc
js
out
sti
add
ret
pop
fimul
out
add
pop
xchg
es
sar
imul
inc
cmps
icebp
mov
icebp
(bad)
addr16
push
mov
jmp
pop
xchg
push
cld
push
rcr
push
cld
arpl
aas
add
nop
xor
ja
(bad)
adc
xchg
push
rcl
test
xlat
add
sub
js
fs
lock
movs
dec
clc
cmc
cmp
dec
ret
cld
push
imul
imul
imul
repnz
inc
jbe
add
cwde
xor
add
dec
or
pop
cmp
loopne
cmp
(bad)
cmc
or
cld
dec
cmp
loopne
in
aaa
loopne
push
cld
mov
pop
leave
enter
jg
lock
or
pop
push
rcr
arpl
pop
movs
mov
and
dec
push
jl
sub
add
leave
push
lock
add
jnp
xchg
out
jle
pop
jl
add
sbb
dec
push
jl
and
pop
cld
ror
(bad)
jae
dec
push
jl
push
mov
add
leave
push
lock
add
dec
loopne
cmp
push
push
xor
sar
ds
sub
xchg
int3
call
lock
add
mov
add
scas
movs
test
pop
loopne
sbb
mov
call
loopne
stos
call
clc
jecxz
sbb
clc
jecxz
pop
dec
test
pop
call
ds
inc
pop
jmp
cld
jno
mov
lock
dec
test
cmp
hlt
push
hlt
psrad
cmp
or
cmps
enter
pop
push
ror
sti
adc
rol
lock
mov
push
dec
dec
adc
xlat
loopne
mov
push
xor
js
mov
and
lahf
xor
push
out
inc
push
hlt
sub
push
push
inc
jg
fisub
jnp
out
loopne
sar
mov
dec
js
pushf
cmps
mov
in
cmp
mov
sahf
or
loopne
loop
imul
leave
mov
pop
sar
out
inc
mov
or
pop
repz
jmp
add
mov
jecxz
adc
lock
add
movs
cmps
mov
ret
jnp
dec
jbe
jns
(bad)
mul
rol
push
jnp
fimul
out
(bad)
movs
icebp
out
cmp
clc
jecxz
cmp
mov
movs
push
jle
loopne
push
ret
aas
or
jecxz
sbb
clc
sub
iret
add
xchg
xor
jge
lock
rcl
add
call
ret
ret
out
jle
rcl
ja
clc
mov
ret
ret
cld
icebp
push
lock
mov
loope
aam
pop
cld
or
lock
push
cmps
add
test
jg
loopne
dec
rol
pop
add
loopne
sub
cmps
imul
dec
or
clc
stos
xor
daa
add
sbb
imul
xchg
cmps
mov
rcl
add
add
sbb
clc
mov
stos
xor
mov
add
push
inc
outs
outs
(bad)
or
mov
cmp
cli
jnp
aas
aad
ds
loopne
add
call
cmps
mov
pop
lock
push
hlt
jae
pop
in
test
or
jmp
dec
add
pop
sub
(bad)
jnp
push
jnp
ds
loopne
add
jl
add
jae
push
jnp
cli
add
cdq
fdiv
clc
inc
jne
adc
aas
int
sar
lahf
xchg
cmps
mov
cmp
dec
lock
xchg
cmps
sub
retf
lock
jecxz
call
(bad)
jnp
(bad)
jnp
sub
sub
pop
and
xchg
imul
call
js
aam
cmp
rcl
jecxz
dec
call
test
or
pop
jne
out
mov
call
cmp
loope
sahf
cmps
push
(bad)
push
iret
lock
push
rcr
neg
push
out
add
ds
jecxz
mov
dec
(bad)
mul
ds
add
jg
out
xor
push
dec
sbb
std
or
xor
push
ror
cs
(bad)
out
lahf
mov
mov
cld
mov
lahf
mov
mov
(bad)
fisub
icebp
(bad)
xor
mov
inc
mov
ins
fs
loopne
cmp
push
hlt
mov
shr
jl
sbb
stc
cmp
int
mov
sbb
aas
les
ds
fst
sbb
add
push
ret
lock
add
adc
adc
aam
jp
loope
ins
stos
mov
cmp
dec
or
ins
adc
inc
psubb
retf
pop
add
lods
xor
sti
add
sbb
jecxz
aas
cmp
dec
xor
cmps
cdq
sar
or
fstp
lock
rol
add
jle
call
loopne
sbb
int
cld
sbb
inc
lahf
daa
lock
sbb
push
movs
add
inc
ror
or
loopne
add
daa
loopne
movs
fwait
jg
jle
call
add
loopne
cmps
or
adc
aas
aaa
dec
ror
cld
fdiv
pop
add
call
add
call
je
jae
add
mov
out
jle
sbb
imul
aaa
or
outs
call
sbb
lahf
mov
mov
js
fwait
(bad)
jnp
out
repz
xchg
fnstsw
das
(bad)
test
outs
and
loope
sahf
daa
loopne
in
or
lock
or
adc
ds
(bad)
div
js
fwait
(bad)
sti
mov
fwait
(bad)
sti
jl
iret
dec
jecxz
add
out
sub
pop
sti
cmp
ja
mov
cmp
repz
lahf
mov
jns
mov
or
jb
sar
push
out
repz
repz
fwait
mov
jns
out
stc
sbb
scas
sar
(bad)
test
jae
je
jmp
ds
(bad)
not
icebp
ds
(bad)
idiv
js
fwait
es
loop
pop
call
or
xor
out
mov
push
ror
rol
scas
dec
add
push
ret
aas
iret
add
dec
or
adc
mov
inc
jbe
dec
clc
jns
lock
int
ins
fs
pop
push
ret
loope
or
jbe
adc
add
jmp
clc
stc
sahf
lods
sbb
mov
pop
mov
leave
int
cld
jl
pop
xor
or
stc
or
mov
push
movs
mov
jl
iret
pop
jl
in
out
push
ror
jl
xchg
outs
or
loopne
jnp
jbe
sub
jmp
mov
ins
fs
leave
cmp
psubsb
call
pop
js
pop
in
mov
loopne
fs
add
fadd
or
dec
cs
jle
loopne
jmp
mov
fs
sbb
repz
addr16
aaa
outs
shr
cld
jl
pop
xor
or
dec
out
jl
iret
pop
jl
in
dec
ror
jl
in
dec
ror
je
mov
cmp
fisttp
add
lahf
pop
cld
jl
pop
out
scas
aad
add
and
ss
adc
push
loopne
rol
mov
mov
cmp
repz
sbb
ds
(bad)
mov
lods
or
push
jb
out
test
ja
push
jmp
push
pop
pop
push
shr
outs
aad
fisubr
(bad)
cmp
ins
inc
das
lock
imul
and
in
sar
xchg
pop
jmp
aaa
ja
stos
call
xchg
popf
and
fisub
popf
mov
mov
ficomp
retf
data16
adc
inc
jbe
mov
lock
fnsave
ja
adc
fsubrp
in
push
loope
push
(bad)
js
xlat
jnp
xchg
stos
sar
fistp
jl
cmp
pop
scas
sub
loopne
mov
sbb
retf
into
mov
lock
js
in
fnstcw
sbb
cmp
lock
dec
sbb
daa
icebp
mov
fstp
test
add
dec
shr
rcr
fst
cld
sar
movs
xor
out
push
lods
jecxz
stos
xor
jmp
inc
hlt
fisubr
sub
hlt
ret
sti
add
mov
push
pop
out
js
call
add
jbe
pop
js
sar
inc
(bad)
mov
faddp
mov
scas
div
clc
jp
or
push
jl
add
rcr
pop
mov
push
js
mov
ret
in
sub
push
adc
add
adc
lock
faddp
mov
clc
inc
stos
call
neg
pop
jns
hlt
mov
in
lods
aad
push
data16
dec
sub
inc
push
hlt
outs
sar
inc
rcr
pop
dec
loopne
pop
cld
and
jbe
out
fcomp
add
jne
test
mov
sbb
lds
sahf
push
cld
and
xchg
xor
cmp
mov
push
das
(bad)
pop
sar
out
or
cdq
pop
aas
shr
loopne
sub
mov
clc
lds
jle
add
es
fnstcw
adc
cdq
mov
sahf
leave
cmp
and
add
addr16
or
and
ja
outs
outs
and
pop
push
mov
(bad)
adc
dec
or
add
cmp
js
not
adc
or
fsub
adc
ds
mov
mov
cmp
jge
add
sahf
leave
fisttp
das
and
add
mov
or
arpl
call
repz
mov
into
daa
loopne
dec
pop
pop
push
sar
outs
push
addr16
xchg
(bad)
lock
neg
outs
cmps
jmp
test
js
xor
add
aam
sbb
dec
jae
push
ficomp
cmp
mov
jnp
call
call
jae
dec
fiadd
fxch
add
ror
aaa
dec
shl
call
xor
jp
mov
fwait
mov
clc
movs
imul
and
jg
clc
imul
cmp
(bad)
int
adc
pushf
data16
loopne
imul
xor
xor
cli
xchg
or
fnstenv
xor
jb
test
jbe
test
in
mov
and
sub
fstp
clc
push
dec
or
loopne
rcr
pop
rsm
mov
dec
or
rcr
js
clc
cmp
hlt
arpl
(bad)
imul
or
xchg
xor
mov
xor
xor
jb
add
xchg
lods
jbe
loopne
shr
call
xor
arpl
(bad)
add
into
call
add
popf
ror
jl
sub
mov
outs
dec
add
loopne
ror
or
dec
xor
psubb
pop
shr
lds
call
(bad)
mov
ficom
mov
fnstenv
xor
(bad)
loop
(bad)
in
loopne
loop
and
outs
dec
mov
cmp
out
sub
sbb
(bad)
jnp
cmp
mov
outs
dec
jecxz
sub
pop
sar
mov
push
(bad)
not
outs
icebp
js
rcl
int
mov
push
out
sub
loop
in
lock
sahf
shl
mov
cmc
out
scas
shl
test
cmc
out
outs
aad
loop
icebp
xor
adc
loopne
mov
adc
xor
push
sar
lods
fwait
push
lock
push
jge
js
adc
adc
scas
xor
test
push
lock
enter
mov
pop
mov
retf
cs
push
lock
enter
fcmovnb
fstp
adc
xor
push
lock
mov
ja
cs
fisttp
pop
loopne
adc
sar
xlat
mov
add
mov
sbb
fisttp
xor
aam
iret
in
fnsave
inc
(bad)
mov
ja
int
dec
jns
(bad)
push
or
pop
xchg
jmp
ret
jbe
dec
clc
dec
adc
data16
xor
push
hlt
out
pop
ins
dec
add
mov
ja
hlt
test
call
xor
test
cmps
push
hlt
and
cmc
adc
cmps
xor
out
imul
or
push
mov
fidivr
jmp
out
aas
push
sar
inc
(bad)
out
repnz
test
cmc
aam
jnp
mov
fdivrp
push
jl
cmp
test
lock
mov
cmc
sahf
sub
fst
jge
out
jbe
ss
pmulhw
push
sub
jnp
cmps
cmps
sub
mov
(bad)
aas
or
lahf
sub
xor
cdq
add
mov
addr16
dec
sbb
cmps
push
ds
shl
std
jbe
jle
fidivr
xchg
xor
mov
push
mov
add
ror
ds
inc
out
pop
test
sahf
test
dec
in
loopne
mov
mov
push
inc
hlt
cdq
cmp
dec
add
test
ja
int
stos
and
dec
add
ds
dec
aaa
jmp
mov
ja
xor
fcomp
std
pop
add
out
sbb
mov
cli
dec
add
out
add
ds
aad
lock
inc
jbe
add
adc
dec
add
push
ret
lock
sbb
inc
out
ds
or
movs
sub
mov
(bad)
in
cld
push
hlt
out
retf
pop
jmp
in
jp
es
loopne
sub
out
mov
iret
adc
jle
addr16
stc
sub
ja
in
(bad)
push
add
or
mov
in
icebp
dec
imul
call
xor
dec
adc
mul
jl
iret
in
mov
cdq
sub
test
dec
sub
cmp
xor
sti
sbb
fnsave
dec
adc
sti
add
jge
xchg
ficom
retf
mov
repz
sar
cmp
popf
leave
gs
mov
pop
mov
xchg
lock
stos
call
int
dec
sbb
cs
inc
(bad)
jg
loopne
or
popf
leave
std
outs
sbb
std
mov
mov
outs
pop
out
ficomp
cmps
xchg
fnstsw
ja
(bad)
cmps
cs
mov
shl
addr16
or
addr16
mov
cld
sahf
sar
inc
hlt
cmp
mov
mov
js
mov
xor
dec
loopne
push
retf
pop
js
add
mov
idiv
rcl
cdq
mov
xor
cmp
shl
test
fbstp
popf
cmp
test
into
scas
ja
xchg
jle
jp
sbb
cmp
xchg
jmp
sbb
cmp
in
sahf
push
mov
mov
loopne
jp
xor
ja
ret
xlat
pop
out
into
mov
gs
fcmovb
mov
rcl
cld
fwait
mov
fmul
mul
mov
lods
sbb
in
aam
mov
shr
fwait
dec
imul
pop
jbe
sbb
iret
shl
test
mov
dec
sbb
(bad)
out
sub
mov
jnp
aaa
jae
call
push
call
cs
int
jns
ret
enter
mov
call
addr16
sahf
jnp
out
and
in
repnz
xor
leave
fst
mov
cmps
outs
dec
cmp
jne
push
mul
out
out
fdiv
daa
ja
outs
push
push
addr16
in
inc
das
pop
jl
mul
mov
rcr
std
sbb
add
cli
dec
outs
adc
arpl
mov
in
add
in
je
mul
loope
cld
das
push
lods
jmp
mov
ds
jnp
add
leave
int
(bad)
pop
mov
or
aaa
jae
(bad)
push
xchg
fucom
jno
sar
movs
pop
mov
cmp
jae
mov
sar
or
add
pop
sbb
pop
jbe
pop
mov
sbb
cmp
jmpw
or
loope
jl
popa
pop
loope
movs
fwait
xor
ret
or
pop
pop
loope
in
pop
cmp
hlt
mov
add
das
xor
jno
rol
mov
in
fcom
push
icebp
ror
mov
jmp
jl
loopne
mov
aad
ror
pop
out
dec
aaa
in
stos
sbb
cmc
ror
fst
mov
idiv
inc
xchg
xchg
outs
inc
movs
cld
daa
push
sub
and
mov
mov
add
inc
das
pop
in
scas
(bad)
and
dec
push
test
daa
(bad)
call
xchg
jae
daa
ja
jle
mov
rol
xchg
jbe
fidivr
mov
ror
pop
inc
jmp
movs
sbb
jle
inc
retf
imul
icebp
retf
cli
loop
jge
icebp
mov
dec
js
jmp
in
call
jne
mov
js
lock
jmp
cli
bound
xchg
(bad)
test
jnp
jle
jle
pop
movs
pop
and
xlat
jecxz
and
aam
sub
aaa
arpl
dec
mov
jb
ins
fld
push
outs
test
xchg
imul
xor
or
(bad)
or
cmps
push
int3
fist
ds
sbb
call
mov
adc
mov
repnz
test
jg
and
aam
cmp
pop
add
or
add
jbe
fidivr
nop
pushf
das
lock
mov
(bad)
rcl
pop
or
adc
pop
add
inc
loopne
hlt
mov
jl
aaa
inc
dec
(bad)
pop
clc
mov
(bad)
out
or
pop
clc
push
outs
test
ins
jp
data16
scas
shl
xchg
pop
or
and
ds
jns
ror
mov
nop
sbb
(bad)
imul
sbb
adc
pop
mov
jl
jmp
movs
jl
ja
ror
cmc
sbb
int3
or
aas
sub
and
mov
loopne
mov
adc
add
cmp
loopne
push
out
daa
add
fwait
jno
iret
xlat
pop
xchg
push
or
and
clc
lahf
or
sub
xchg
add
sti
lods
sar
iret
jecxz
in
rol
mov
fwait
mov
mov
loopne
(bad)
rcl
loop
(bad)
mov
leave
bnd
fdivp
mov
dec
xchg
test
std
data16
add
repz
mov
pop
clc
dec
out
adc
mov
aas
mov
clc
ja
jge
fiadd
cld
sbb
idiv
cmps
mov
jg
jnp
cmp
outs
xchg
not
iret
daa
loopne
enter
fisubr
fdivp
or
(bad)
cmc
and
out
stc
add
lea
sahf
dec
rol
jge
fidiv
add
sub
pop
pop
jbe
icebp
sahf
dec
shl
cmp
retf
js
daa
loopne
lock
loopne
mov
jp
cmp
repz
and
repz
mov
lock
iret
inc
clc
or
or
stc
add
jo
pop
js
jle
mov
cs
jnp
pop
mov
or
dec
lock
out
jns
ret
and
call
fdivp
cmp
cmp
jnp
add
adc
add
cmp
cmc
push
fdivp
mov
aas
sbb
inc
mov
add
add
loopne
stos
fwait
mov
repz
xchg
sbb
pop
mov
add
(bad)
sub
pop
mov
add
add
add
fimul
or
sub
ds
das
fst
es
jo
pop
jo
mov
test
or
add
(bad)
and
and
push
lock
adc
cmp
pop
jo
jle
dec
ret
lock
dec
fld
jle
or
inc
shr
fisttp
add
rcl
ds
repz
clc
rol
pop
and
aas
adc
add
loope
add
loopne
mov
or
dec
clc
adc
int
xor
retf
clc
add
aas
or
add
lahf
add
push
add
enter
call
(bad)
mov
int
clc
inc
jl
loopne
add
lock
add
jl
mov
pop
lock
out
add
rcr
fild
pop
loopne
fdiv
sub
pop
js
cmps
push
lock
ds
mov
mov
lods
rcl
ds
lds
fisttp
loopne
add
mov
fld
out
mov
lock
nop
mov
jne
inc
shr
xchg
add
or
scas
add
ds
inc
pop
or
and
dec
add
out
add
outs
es
sub
or
xchg
fisttp
or
pop
and
xchg
mov
pop
push
clc
add
aas
add
add
adc
add
test
sub
lock
pop
jl
loopne
add
in
imul
loopne
add
pop
pop
js
and
add
clc
cmp
pop
or
aas
or
push
add
or
xchg
hlt
and
sub
test
xor
cmp
pop
add
push
lock
clc
jle
jne
div
rcl
(bad)
pop
sub
add
add
or
mov
(bad)
xlat
sub
cld
sti
add
push
inc
jg
sar
add
adc
mov
call
lock
fs
dec
rcl
jne
mov
jg
lock
add
sbb
test
ret
mov
data16
mov
inc
mov
call
pop
mov
mov
movhlps
lahf
jecxz
adc
xor
(bad)
sti
sbb
outs
dec
loope
jg
pop
icebp
mov
fst
pop
icebp
fiadd
xor
add
cmp
jnp
sbb
and
xlat
loopne
enter
mov
mov
out
sbb
jo
mov
fimul
jnp
out
imul
mov
adc
pop
icebp
jle
sub
fwait
icebp
pop
test
push
pop
cmp
dec
mov
fiadd
and
aaa
retf
sti
inc
js
ret
sahf
mov
add
cmps
mov
out
aaa
stos
mov
fimul
jnp
jecxz
or
mov
jle
mov
xor
ret
jnp
out
scas
sub
daa
loop
fcom
lock
loopne
rcl
mul
js
push
rcr
xor
fimul
adc
and
add
jge
rsqrtps
sqrtps
ja
mov
pop
mov
mov
push
and
inc
retf
repnz
dec
jg
add
fimul
ins
gs
dec
mov
clc
(bad)
rcl
loope
push
ret
ret
lock
add
movs
test
loopne
push
jl
loopne
es
sahf
test
pop
jl
loopne
add
aaa
sub
lahf
add
scas
adc
jmp
(bad)
outs
sub
cld
imul
add
(bad)
shr
clc
push
add
or
in
stos
sub
pop
add
sub
dec
push
ret
clc
and
add
and
xor
jnp
jle
or
aaa
xchg
lock
ror
das
rcr
clc
and
dec
loopne
sbb
jl
xorps
aas
lods
mov
or
jl
fisttp
clc
and
ins
adc
xor
pop
add
push
sbb
lock
outs
push
inc
lahf
add
scas
push
shr
or
loopne
add
jle
jg
loopne
add
js
js
call
loopne
add
jno
fbld
lock
add
mov
add
clc
and
mov
jg
clc
and
pop
jl
sar
lock
push
rcr
clc
rcl
clc
(bad)
fisubr
jp
pop
sub
mov
cmc
jl
sbb
loopne
add
sbb
inc
cmp
clc
adc
xchg
sub
sar
loopne
adc
sbb
pop
add
adc
fistp
lock
pop
and
pop
add
inc
rcr
clc
fiadd
add
inc
sar
clc
fiadd
or
xchg
or
(bad)
and
test
adc
xchg
or
adc
inc
shl
ds
pop
rol
add
ja
clc
or
clc
adc
mov
lock
pop
jmp
rcl
daa
sub
out
add
push
clc
inc
rol
mov
pop
add
(bad)
push
rcl
cmp
sar
mov
aad
pop
lods
mov
in
loopne
js
icebp
arpl
shr
sbb
mov
pop
out
and
pop
stos
push
(bad)
xor
jbe
jmp
mov
scas
aad
out
and
mov
mov
cmp
mul
and
clc
addr16
lahf
(bad)
not
sbb
mov
inc
icebp
push
mov
movups
mov
mov
sbb
push
(bad)
jle
xchg
loop
push
push
sbb
mov
outs
loopne
in
clc
fnstsw
mov
loopne
push
sar
test
push
mov
pxor
lock
loopne
inc
rcr
into
cmp
aas
loop
adc
bswap
jnp
add
out
js
(bad)
mov
inc
jbe
jecxz
adc
or
push
and
aas
aad
out
adc
inc
add
in
movups
pop
loope
aaa
fimul
lock
dec
lds
sbb
xchg
call
ficomp
push
inc
aas
pop
fsubrp
test
inc
je
xchg
js
xor
sub
sbb
push
sar
or
inc
aaa
stos
mov
js
loop
inc
shl
lock
fcmove
sbb
dec
clc
push
add
inc
jp
ss
inc
pop
add
pop
loopne
sbb
cmp
lock
inc
xor
pop
add
cmp
std
fs
hlt
fild
pop
shr
stos
mov
push
push
hlt
lahf
add
inc
jbe
sub
clc
aad
pop
push
inc
mov
inc
call
loopne
and
xlat
xchg
lock
inc
test
push
rol
dec
shl
mov
lock
sar
lock
call
xor
mov
mov
lsl
imul
add
add
add
jns
mul
loopne
adc
and
fisubr
ds
(bad)
xor
dec
clc
cmp
cmp
pop
mov
cmp
jg
loopne
mov
pop
add
clc
sti
add
mov
mov
outs
loopne
push
jl
push
jle
loopne
jp
(bad)
mov
invlpg
loopne
jp
outs
adc
sub
test
clc
mov
jmp
loopne
add
sbb
jge
call
mov
jne
idiv
cmc
mov
mov
or
sbb
cmp
sub
fist
lock
clc
adc
outs
add
aas
sub
outs
pop
push
div
je
ss
rol
aas
or
mov
in
inc
push
hlt
iret
add
xchg
frstor
rol
pop
lock
or
cmp
and
inc
cmp
sti
or
inc
push
hlt
test
adc
push
jl
loopne
(bad)
enter
xchg
clc
push
sub
cld
pop
add
jne
faddp
push
add
mov
loopne
add
clc
jg
lock
mov
sbb
lock
add
add
push
rcl
and
int
add
ret
sti
push
jns
xor
mul
mov
test
xor
cmps
xor
inc
mov
(bad)
in
outs
(bad)
mov
inc
jbe
jnp
pop
sar
pop
mov
and
in
xor
xchg
div
div
mov
add
out
in
out
mov
cmp
(bad)
push
jns
mov
jb
xadd
fmulp
icebp
sahf
(bad)
mov
push
mov
(bad)
call
imul
das
(bad)
sti
ror
js
outs
and
and
pop
mov
adc
clc
sbb
(bad)
sti
xor
clc
cmp
in
js
(bad)
sti
lds
call
cmp
out
in
scas
ror
jg
div
pop
xor
or
jmp
std
es
mov
js
(bad)
sti
js
out
rcr
sub
jnp
push
stos
mov
loope
push
ror
pop
iret
call
adc
jg
jnp
fimul
and
ret
lock
xchg
das
icebp
pop
mov
arpl
clc
cmp
cli
dec
icebp
push
and
lods
mov
out
jns
jl
fdivp
or
dec
js
sar
(bad)
in
ds
inc
aas
or
std
lock
fdivp
or
shr
ffreep
jnp
ficomp
pop
mov
sub
xchg
imul
shl
add
repz
sbb
in
dec
clc
fild
loope
add
loope
push
(bad)
xor
test
dec
clc
and
das
add
aas
sub
pop
clc
jne
out
pop
clc
loope
fnstenv
fild
jle
aas
or
inc
cmp
fscale
push
lock
or
lock
(bad)
scas
sub
clc
loope
clc
sti
xchg
lock
add
iret
and
aaa
test
fstp
or
mov
stos
sub
mov
lahf
pop
clc
dec
add
clc
mov
lahf
inc
ret
dec
clc
inc
jl
loopne
add
or
cld
add
or
loopne
imul
(bad)
data16
ret
add
pop
add
pop
push
hlt
push
add
clc
lahf
add
(bad)
push
mov
loopne
or
pop
add
lock
ror
jl
loopne
adc
psubb
shl
ds
inc
mov
scas
add
fld
jmp
fisttp
lock
out
pop
clc
cmps
add
ins
loope
add
or
adc
push
or
add
aas
or
cmp
(bad)
jl
out
(bad)
cmps
sub
jp
loopne
cmp
or
jg
sar
lock
repz
push
loopne
add
pop
pushf
leave
jge
clc
or
out
adc
retf
add
lahf
call
jl
add
loopne
add
clc
inc
fs
add
pop
(bad)
aad
add
data16
mul
adc
stc
add
jge
iret
and
out
mov
lahf
psubb
inc
loopne
add
push
shl
inc
out
into
in
add
pop
lock
add
pop
sbb
lock
add
lahf
push
mov
xor
jmp
repz
dec
into
mov
inc
sbb
pop
push
(bad)
cmp
mov
popf
leave
cmc
ret
sti
add
cmp
add
add
mov
js
mov
add
pop
lds
(bad)
sti
dec
mov
js
xor
lock
inc
inc
jg
cmp
push
icebp
sahf
(bad)
idiv
js
sar
js
(bad)
sti
ss
mov
add
arpl
or
arpl
lahf
(bad)
test
cmp
test
sbb
and
pop
ror
leave
js
mov
pop
xor
das
(bad)
jnp
(bad)
xor
ss
(bad)
sti
je
pinsrw
js
sar
mov
loopne
and
das
sar
retf
icebp
sahf
(bad)
not
icebp
ds
pop
jecxz
add
xchg
icebp
sahf
(bad)
test
add
cmp
repz
inc
mov
(bad)
call
fiadd
loop
add
cmp
out
add
jle
fimul
lock
addr16
je
jcxz
and
pop
lock
inc
rcl
cmp
movs
push
loop
es
in
cmp
call
add
cwde
or
lock
aas
mov
fdivrp
xchg
sbb
xor
jne
(bad)
jecxz
and
pop
lock
inc
pop
aas
sbb
stc
js
and
pop
loop
add
mov
sahf
dec
rcr
lock
jle
fimul
lock
mov
jl
cmp
aaa
add
sar
add
add
cld
fwait
sbb
clc
or
pop
add
jb
out
(bad)
je
(bad)
cld
jbe
pop
nop
lock
ret
push
loope
ror
into
pop
clc
jl
cli
or
lar
jo
call
cld
jo
psrld
test
adc
loopne
add
pop
add
jl
aas
inc
ret
mov
cli
imul
ds
mov
push
adc
xor
leave
dec
clc
aas
xchg
lock
clc
inc
and
(bad)
das
jne
loopne
test
xor
mov
out
scas
xchg
fnsave
leave
jge
lock
sbb
aas
cwde
sbb
inc
shl
enter
jbe
add
clc
popa
push
pop
ror
outs
or
aas
dec
sub
cmp
lods
fwait
sub
aas
pop
dec
fdivr
push
std
jne
jg
push
loope
add
(bad)
enter
push
add
loopne
add
add
push
mov
sbb
outs
jbe
ds
lock
dec
shl
cld
add
pop
imul
jb
ror
es
push
inc
aas
test
pop
aam
fsub
out
add
push
cld
ret
or
ror
push
cld
mov
xchg
jnp
lock
hlt
jecxz
sar
lahf
psubb
xor
jae
outs
jbe
ds
lock
mov
add
pop
lock
out
(bad)
xlat
cdq
fadd
ret
jne
aaa
sbb
mov
jbe
add
loopne
add
lods
xor
jbe
ds
lock
je
out
fnstsw
cld
jo
cld
aaa
add
clc
push
add
add
and
out
ror
lock
ror
push
shl
mov
mov
in
mov
clc
add
lahf
loope
pmaxub
loopne
movs
fwait
pop
js
(bad)
sti
popa
or
lds
xchg
sti
lock
out
xchg
cmp
lock
sar
gs
pop
js
outs
out
inc
mov
fwait
cmc
js
lds
fimul
cmp
mov
loopne
jecxz
shl
add
jns
lock
lods
(bad)
jnp
adc
sahf
xor
cmp
clc
push
add
mov
mov
mov
mov
xor
xchg
mov
cmp
aaa
out
xchg
fnsave
das
lock
fdiv
push
fisub
dec
int
fnstenv
jnp
retf
jge
jecxz
std
xchg
xchg
sub
imul
dec
and
xlat
adc
test
sub
outs
daa
loopne
and
xlat
loopne
adc
cmc
pop
mov
js
xor
mov
sti
adc
adc
scas
sar
out
sar
loopne
je
ja
fimul
or
leave
into
std
dec
into
mov
xchg
popf
sti
lahf
fdiv
mov
push
inc
test
es
or
add
fiadd
sub
aas
pop
loopne
add
test
mov
lock
and
mov
clc
outs
add
mov
int
retf
pop
das
add
xor
add
dec
clc
movs
mov
pop
add
loopne
imul
mov
xchg
mov
xchg
popf
jnp
addr16
mov
lock
dec
clc
data16
push
jle
or
push
loopne
dec
clc
data16
push
loope
xor
jnp
sbb
jnp
lock
mov
pop
psubb
add
es
aad
outs
movs
pop
clc
or
fisttp
fwait
add
aam
lock
add
push
hlt
jnp
(bad)
sub
pop
psubb
cld
(bad)
add
add
add
adc
int
cld
rcr
mov
add
ror
cld
popa
or
cld
push
add
mov
xchg
sub
jge
loope
inc
shl
lock
repz
int
cld
scas
add
xchg
sub
sar
fisttp
sbb
mov
mov
or
mov
rcl
jle
loopne
add
or
daa
adc
dec
adc
in
mov
push
pop
out
add
add
adc
add
rol
loopne
cmps
mov
push
ror
push
jl
sbb
outs
add
loopne
add
rcr
cmp
cmp
lods
(bad)
add
imul
push
sar
mov
or
inc
iret
push
ins
lea
dec
sar
addr16
aaa
test
iret
pop
jl
pop
mov
lock
lock
jl
ficom
push
inc
pop
cwde
loop
(bad)
call
adc
fidiv
adc
jecxz
add
xlat
loopne
xor
push
ins
xchg
mov
add
mov
pop
movs
sbb
pop
loope
(bad)
xchg
outs
ds
in
out
icebp
pop
test
and
loopne
add
inc
js
push
sar
rol
call
add
mov
hlt
das
push
rol
test
dec
and
lds
cmp
fiadd
js
sar
mov
outs
aas
inc
pop
lock
jl
mov
shr
sub
dec
mov
add
mov
fisttp
mov
loopne
loop
xor
mov
fnstcw
add
outs
lods
shl
xchg
popf
inc
sar
add
iret
sar
pop
imul
adc
pop
mov
add
sbb
jge
clc
(bad)
iret
sbb
stos
lock
out
(bad)
retf
ret
jnp
out
fbld
pop
sbb
js
mov
ds
xchg
in
dec
sub
cmp
idiv
js
xchg
in
(bad)
push
(bad)
sti
sbb
lock
ins
mov
daa
sub
xor
out
xor
jns
mov
push
out
inc
js
mov
xor
cmps
add
rcr
psubb
loopne
mov
adc
and
pop
add
loopne
add
loopne
sbb
sub
clc
mov
and
sbb
pop
movs
test
mov
dec
inc
aas
call
ret
ret
clc
icebp
and
sbb
pop
movs
test
test
xchg
lock
add
ret
loope
and
and
sub
loope
xchg
lock
xchg
lock
adc
pop
rcl
std
pop
adc
add
in
data16
and
and
cli
and
pop
aam
dec
pop
sub
and
add
add
xchg
dec
pop
clc
and
pop
lock
or
fld
nop
cmp
lock
clc
and
nop
sbb
sub
sar
pop
or
mov
clc
ds
or
or
pop
imul
pop
jl
loopne
push
hlt
add
inc
or
lock
sub
clc
mov
pop
add
mov
arpl
push
clc
imul
add
xchg
add
dec
cmp
sbb
(bad)
add
sbb
xchg
add
mov
in
push
clc
rol
dec
out
out
sbb
clc
dec
add
test
in
push
clc
rol
cmp
pop
cld
add
dec
adc
sbb
loopne
add
shl
jl
add
cmp
xchg
xchg
outs
add
cld
add
dec
adc
nop
into
in
add
add
dec
adc
aas
jmp
pop
or
dec
add
add
fild
lock
cld
pusha
ror
iret
add
pop
lock
cld
pusha
ror
push
add
push
add
(bad)
mov
test
add
adc
pop
and
adc
add
fild
jl
loopne
push
add
in
sub
in
add
push
add
std
push
rcl
js
in
jbe
mov
mov
mov
mov
mov
push
mov
add
inc
jbe
lock
xor
lock
xor
sar
out
sar
hlt
mov
mov
(bad)
cmp
sub
jle
inc
hlt
inc
icebp
pop
mov
imul
and
ja
mov
jnp
fsubrp
fimul
or
lahf
les
inc
hlt
mov
mov
out
and
adc
mov
ror
addr16
lock
sbb
sub
ds
addr16
lock
xor
add
add
mov
out
and
or
push
mov
mov
cmp
sbb
adc
mov
mov
ficomp
pop
mov
out
dec
push
outs
dec
lock
mov
dec
add
mov
push
sar
jle
cmp
lea
cdq
test
push
mov
push
sub
dec
shr
int
sub
(bad)
js
(bad)
push
inc
mov
ret
fsubrp
imul
movs
fwait
adc
dec
adc
add
and
sti
sub
or
pop
ret
fiadd
inc
mov
cld
push
mov
cmp
sbb
dec
aaa
std
add
push
(bad)
pop
fidivr
lods
push
jle
loopne
add
inc
or
mov
rcr
mov
fwait
shr
add
std
add
or
dec
dec
clc
xor
fstp
rcl
add
sbb
xchg
jbe
xlat
push
clc
or
in
ret
push
add
inc
aas
push
loopne
add
mov
cld
jns
outs
or
cmp
cld
movs
add
push
lock
push
hlt
cs
imul
test
out
int
clc
or
lahf
dec
or
cmp
jle
sar
sbb
push
adc
mov
ds
mov
push
add
call
sbb
sar
lock
(bad)
lock
adc
adc
add
or
add
unpckhps
loope
add
xchg
sub
cld
push
xor
loopne
and
or
pop
or
push
rcr
dec
add
jmp
add
cli
push
lock
add
(bad)
sbb
test
sub
mov
sub
clc
xlat
add
mov
shr
cld
push
cmp
push
clc
add
cmp
add
enter
sar
sbb
(bad)
gs
call
loopne
pop
jl
ror
or
jnp
das
add
js
mov
rcl
mov
and
out
add
das
movs
mov
add
pop
lock
pop
rol
mov
add
hlt
inc
in
or
xor
fbld
out
mul
jge
add
fimul
icebp
ds
fsubrp
sahf
pop
adc
out
sar
sti
push
js
inc
sar
test
lahf
sar
sub
icebp
pop
mov
daa
lock
dec
pop
mov
jnp
ficomp
(bad)
mov
fcmovnbe
dec
and
cmp
loopne
(bad)
mov
fidiv
sub
daa
loop
pop
add
punpckhwd
scas
pmaxub
adc
mov
imul
lods
inc
jbe
fisttp
aaa
sub
daa
loop
pop
fsubrp
add
and
idiv
clc
and
clc
out
imul
or
mov
jns
test
jle
pop
test
and
scas
push
ror
sbb
js
pop
loope
sti
add
sub
inc
aad
das
mov
xchg
icebp
ficomp
out
aad
das
ret
or
inc
js
inc
rcl
mov
jnp
add
pop
out
xor
test
and
ficomp
out
dec
js
mov
mov
fiadd
mov
or
push
js
mov
pop
inc
rcl
lock
loop
or
lahf
sub
pop
adc
std
or
or
pop
inc
shr
outs
and
sti
sub
mov
add
and
lods
sub
cld
inc
sbb
jg
loopne
add
mov
aas
rcr
clc
and
add
std
dec
clc
cmp
pop
inc
ret
jl
adc
sub
cld
push
sbb
pop
add
rcr
aas
add
and
jg
lock
dec
nop
lock
sbb
clc
push
pop
clc
and
add
clc
(bad)
dec
push
rcl
mov
loope
test
sub
inc
sub
fild
clc
and
jg
lock
loopne
add
loopne
add
jge
mov
loopne
add
pop
mov
cmp
mov
data16
pop
rcr
lea
add
clc
iret
add
add
aaa
sub
pop
add
jle
pop
add
and
jg
loopne
or
push
pop
add
ror
jg
push
add
aad
cdq
fdivr
pop
or
(bad)
ror
clc
xor
fwait
add
clc
lea
clc
jl
outs
add
aas
adc
aas
add
das
push
jl
rcr
lea
dec
sub
mov
shl
mov
push
lock
das
add
xor
inc
pop
stos
cmp
jg
add
clc
unpcklps
jg
jl
loopne
and
push
loopne
add
add
loopne
shl
mov
push
lock
fistp
lds
sbb
clc
sub
out
out
add
mov
cld
pop
add
clc
sub
inc
add
add
retf
scas
pop
loopne
sub
mov
add
(bad)
test
inc
sbb
pop
add
test
pop
push
clc
adc
lahf
or
and
test
add
loopne
test
aas
rcl
xchg
pop
mov
mov
clc
lea
adc
dec
js
test
mov
xchg
sti
test
test
mov
pop
and
pop
loop
pop
(bad)
mov
jbe
pinsrw
js
test
mov
fisttp
mov
scas
loop
and
icebp
ds
and
pop
fiadd
jle
mov
ins
fstp
xchg
neg
lahf
xor
inc
jbe
inc
outs
aas
inc
test
loope
adc
and
das
movs
mov
push
hlt
mov
xchg
push
shr
inc
loope
aaa
fimul
cmpps
mov
icebp
pop
retf
or
jecxz
or
mov
js
(bad)
jnp
mov
or
movs
add
adc
jnp
jge
(bad)
call
mul
mov
pop
pop
ret
fidivr
xor
ret
adc
mul
in
adc
pop
mov
pop
out
not
jp
pushf
mov
sbb
not
mov
lock
xchg
push
js
sar
jne
imul
test
push
js
sar
add
sub
loop
sbb
and
jle
fimul
adc
hlt
aad
das
sar
scas
es
add
and
add
andnps
scas
add
sub
aas
(bad)
push
rcr
clc
jb
lahf
add
xor
add
clc
movs
sbb
test
push
sbb
imul
loopne
add
sbb
(bad)
cmp
retf
add
clc
mov
ja
cli
dec
add
clc
adc
aas
push
lock
or
loopne
add
out
push
hlt
mov
mov
aas
(bad)
push
rcr
or
jb
fild
mov
push
(bad)
jno
xchg
add
jno
(bad)
cmc
push
hlt
cmps
add
jle
loopne
or
xor
push
adc
fwait
add
(bad)
push
rcr
push
adc
push
loopne
add
sub
add
stos
add
cmp
jmp
push
add
add
(bad)
repz
hlt
in
sub
add
push
add
add
add
push
lock
or
loopne
or
fwait
add
into
push
rcr
clc
or
aas
dec
ror
xor
mov
adc
pop
lock
mov
loopne
add
ror
jl
loopne
add
js
inc
jmp
rcl
sub
mov
outs
out
add
not
add
jle
cmps
cmp
adc
jecxz
adc
add
data16
ins
fst
lock
loopne
bnd
jnp
rcl
and
mov
loopne
add
inc
sahf
push
mov
sbb
cmp
adc
in
loopne
or
inc
dec
cmp
lock
(bad)
rcr
jmp
aas
push
clc
cmp
clc
int
aas
enter
push
addr16
loopne
add
sbb
mul
loopne
add
add
outs
pop
outs
mul
cli
adc
daa
loopne
add
fst
inc
push
mov
sar
add
fidiv
jecxz
aas
fisubr
icebp
ds
std
push
add
mov
fiadd
sub
mov
sar
(bad)
test
jge
(bad)
sti
add
xor
lock
std
fucomi
loopne
(bad)
sti
inc
(bad)
div
hlt
fwait
icebp
ds
jge
inc
jbe
fimul
idiv
dec
and
icebp
jle
inc
jbe
loopne
pusha
(bad)
imul
pop
xor
out
out
enter
pop
test
cmp
lock
(bad)
sti
iret
icebp
pop
inc
sar
test
mov
sti
xchg
repnz
sbb
out
mov
ficomp
not
lock
jecxz
xor
dec
push
out
pop
in
adc
out
xchg
neg
std
xor
sbb
xchg
cmp
jnp
sbb
test
adc
jnp
jmp
cmps
mov
loopne
inc
hlt
push
lock
in
add
pop
xor
fst
cld
push
rcr
data16
loopne
icebp
cmp
loopne
add
jno
pop
loop
jmp
aas
les
(bad)
jno
mul
loope
rcr
add
pop
sub
adc
jg
pop
cld
sbb
cmp
aas
add
add
add
cmp
ror
clc
inc
cmp
outs
loopne
repz
add
xor
clc
fild
jns
aas
or
add
add
sub
mov
outs
add
popa
push
lock
test
jg
lock
fild
clc
add
data16
or
jnp
aas
or
lock
push
lock
loopne
test
jg
loopne
aad
mov
pop
cld
add
cli
push
data16
and
xchg
adc
pop
dec
rcl
pop
add
and
jle
loopne
add
jl
xor
xor
sbb
push
lock
add
dec
rcr
clc
push
mov
lock
add
dec
ror
out
into
call
sub
inc
jbe
add
cmps
or
mov
clc
and
pop
dec
pop
pop
retf
fcmovnb
scas
add
xchg
sbb
out
call
jl
sub
adc
add
dec
ror
pop
ror
clc
push
hlt
imul
loopne
add
mov
jp
adc
loopne
add
mov
jp
adc
add
push
sbb
mov
pop
lods
mov
loopne
add
sub
push
cmps
push
hlt
push
(bad)
sub
dec
adc
adc
dec
or
jg
loopne
push
sar
es
inc
adc
dec
sar
(bad)
rcl
mov
neg
mov
call
out
pop
call
pop
mov
outs
sbb
mov
cmp
dec
icebp
sahf
dec
pop
pop
loopne
out
add
mov
inc
adc
mov
out
dec
rol
xchg
mov
pop
movs
xor
rol
(bad)
dec
aaa
pop
loopne
adc
inc
test
add
sub
not
(bad)
aam
(bad)
ror
pop
loopne
adc
adc
pop
xor
mov
push
push
shl
loope
out
pusha
ins
aad
sar
daa
push
rol
sbb
pop
stos
xor
fcmove
scas
int
shl
cld
adc
xchg
loop
js
clc
add
mov
enter
sub
pushf
leave
dec
xlat
dec
aaa
push
lock
mov
pop
add
inc
ror
sub
jmp
ins
data16
dec
mov
aas
add
xchg
push
ds
pop
aas
add
fdiv
(bad)
scas
int
loop
xor
loop
pmaxub
test
jl
add
cmp
imul
movs
fwait
imul
sbb
(bad)
jl
je
push
out
in
jmp
jnp
(bad)
call
retf
icebp
jle
scas
int
(bad)
jnp
sbb
inc
clc
mov
das
(bad)
sti
xor
rcl
aaa
div
lds
xchg
add
inc
jp
bound
and
pop
rcl
(bad)
jmp
pushf
in
rol
test
pop
sub
dec
clc
jb
cli
mov
lock
push
fcom
sub
cld
jge
psrld
scas
add
das
add
add
mov
jle
clc
and
add
inc
rol
fldcw
loope
push
jl
lock
push
jp
bound
sbb
xor
call
cmp
in
or
and
xlat
xchg
lock
jg
lock
sub
mov
jl
or
pop
jp
push
loopne
dec
clc
cmps
add
add
pop
rcl
sbb
scas
and
lahf
aad
push
imul
jns
test
clc
jb
fist
inc
into
in
push
mul
mov
xor
sbb
jb
call
aaa
stos
xor
in
pop
je
out
xor
lock
jg
mov
push
scas
sbb
lock
fistp
repnz
xchg
add
sbb
jl
int
in
es
pop
rcl
fadd
clc
inc
sbb
jnp
dec
pop
lods
add
push
mov
in
(bad)
ror
pop
(bad)
in
in
es
lock
call
mov
mov
ror
push
xchg
adc
fnstsw
test
clc
jb
loope
lods
(bad)
outs
ret
jl
inc
jbe
shr
mov
add
clc
inc
pop
mov
clc
jb
pop
add
add
mov
loopne
jmp
in
pop
rcl
fdiv
pop
rol
mov
mov
pop
jl
cs
scas
add
add
imul
paddq
cld
pop
rcl
and
xlat
add
and
imul
clc
std
add
and
pop
lock
pop
bound
push
loopne
(bad)
fisubr
(bad)
mov
add
push
shl
cld
rol
aas
inc
xchg
imul
xor
std
icebp
jle
xchg
outs
pop
out
inc
jmp
sti
adc
(bad)
call
lahf
dec
rol
icebp
jle
push
loope
loopne
aas
fidivr
cld
pop
jns
push
out
and
aad
xchg
imul
jl
push
fisub
mov
ds
das
pop
lods
xchg
ja
(bad)
inc
clc
aad
jle
fiadd
pop
sub
and
pop
out
jae
push
jmp
lahf
(bad)
not
ret
pop
jmp
out
and
or
not
sbb
mov
call
dec
pop
loope
retf
jnp
fiadd
shr
pop
(bad)
div
jbe
call
xor
add
test
xor
push
mov
jns
mov
mov
mov
cmp
fstp
mov
stos
mov
pop
xchg
push
ficomp
aas
push
dec
jbe
xlat
arpl
add
sbb
add
fnstcw
jnp
inc
push
jbe
fimul
or
movs
js
(bad)
sti
movs
js
and
jg
test
pushf
out
push
sti
adc
arpl
data16
es
stos
add
xchg
jne
ja
fidiv
test
mov
in
add
test
clc
jmp
sub
fidiv
pminsw
(bad)
lds
data16
lds
rcr
jnp
mov
fcomp
push
daa
jmp
clc
movs
jp
stos
or
xlat
add
mov
mov
inc
or
ret
mov
in
es
or
sbb
add
das
adc
loopne
add
pop
int
mov
lahf
dec
ret
cld
dec
call
mov
loope
call
clc
sbb
clc
pop
add
push
call
jmp
mov
out
or
push
cld
cdq
sub
inc
outs
pop
in
add
pop
sub
clc
pop
fistp
cld
mov
lock
fnstenv
mov
lock
fnstsw
clc
adc
jle
loopne
or
xchg
xor
jnp
lock
sti
adc
iret
imul
jnp
mov
lock
xchg
fwait
or
mov
clc
mov
sti
add
add
add
xchg
(bad)
das
and
push
add
int3
jp
xchg
rol
fild
clc
xor
sbb
fwait
adc
sbb
packssdw
out
inc
ror
loopne
adc
inc
or
add
cld
sub
int
push
add
sbb
add
push
sbb
enter
jle
sub
lock
(bad)
pop
mov
sub
dec
adc
in
mov
rol
jg
lahf
and
ss
lock
aas
pop
loopne
adc
mov
pop
stos
jnp
jae
push
jnp
pop
cmps
sahf
scas
(bad)
push
scas
lods
fisub
fstp
stos
cmc
cmp
push
fstp
inc
mov
xor
mov
cmp
push
fistp
or
xchg
outs
fnstcw
pop
mov
call
into
rcr
std
pop
mov
xchg
ja
imul
jecxz
sbb
clc
in
cmp
xor
jg
fidiv
arpl
mov
mov
arpl
mov
pop
mov
loopne
xchg
push
loope
mov
pop
loopne
aaa
fimul
(bad)
test
mov
jp
ficomp
stos
in
out
jns
(bad)
cmp
cmps
mov
jnp
mov
add
jge
fcmovnu
repz
fnstsw
cmps
mov
hlt
mov
push
js
(bad)
sti
sar
jns
(bad)
xor
mov
jl
or
jmp
mov
test
(bad)
sti
inc
mov
das
fstp
test
movs
fwait
test
cs
mov
cmp
fnsave
outs
(bad)
aad
loop
and
mov
retf
into
rcl
push
xchg
loop
and
mov
inc
out
loopne
mov
pop
sti
jbe
fnstsw
mov
das
(bad)
sti
jbe
sbb
adc
(bad)
out
test
push
ficom
push
shr
mov
mov
xor
and
clc
and
fistp
lock
sti
add
pop
add
inc
pop
arpl
daa
add
pop
lock
jecxz
jle
loopne
add
push
loope
pop
xchg
mov
movs
dec
cmps
mov
inc
loopne
xchg
lock
imul
or
es
std
sbb
fistp
mov
pop
inc
inc
aas
or
adc
aaa
add
shl
and
ja
pop
dec
inc
aas
push
lock
test
or
cmc
and
jge
rcr
mov
aas
or
std
dec
js
test
mov
lock
dec
js
loopne
add
std
jbe
aad
pop
dec
jle
clc
jp
clc
in
sahf
inc
js
pop
push
clc
test
pop
cld
inc
sbb
jl
loopne
add
mov
pop
lock
add
sbb
popf
sbb
cld
movs
sbb
cld
sbb
sar
lock
mov
sbb
in
cmp
sbb
in
pop
mov
cld
inc
rcr
add
jle
das
add
pop
jns
aas
psubb
fisttp
clc
inc
sbb
movs
sbb
jl
loopne
push
cld
jbe
leave
cmp
data16
dec
push
jl
rcl
lock
sub
mov
pop
inc
inc
out
cmp
sbb
inc
je
cs
sub
mov
pop
inc
inc
out
cmp
sbb
inc
sbb
mov
adc
call
loopne
push
rcr
ror
cmps
add
pop
sbb
sar
sbb
clc
inc
add
or
mov
repnz
mov
aas
cwde
xor
clc
es
clc
and
or
loopne
add
loopne
adc
dec
cmp
jg
mul
mov
(bad)
mov
test
mov
and
sub
push
add
xchg
idiv
js
and
push
add
push
rcr
sub
stc
jle
pop
or
bound
scas
sub
sar
out
lods
or
sti
std
or
fimul
js
(bad)
in
or
push
add
push
rcl
(bad)
loopne
sub
or
xchg
jge
mov
int
jmp
mov
fwait
mov
in
sbb
cli
mov
jmp
add
lock
shr
adc
jl
sahf
mov
test
daa
or
test
out
adc
mov
aaa
mov
jecxz
rol
lock
pop
in
jo
ds
aaa
xor
aad
scas
fbld
xor
mov
sti
inc
push
add
inc
dec
fstp
fucomi
adc
test
aam
mov
jecxz
idiv
test
cmc
cmp
mov
in
mov
mov
pop
add
cmp
xchg
lock
mov
and
jle
test
lahf
mov
not
inc
and
jns
mov
out
ins
stos
mov
or
pop
outs
pop
sbb
add
mov
es
mov
arpl
and
repz
aas
adc
rcr
push
(bad)
jmp
mov
arpl
or
push
stos
lods
(bad)
mov
sub
lea
dec
add
lock
jp
bound
jl
mul
add
sar
mov
fmulp
ins
or
fmulp
fcom
adc
call
adc
stos
cs
das
adc
mov
inc
jg
or
jbe
call
add
aad
hlt
fisttp
pop
ror
loopne
hlt
mov
inc
or
xor
std
inc
mov
(bad)
cmc
mov
push
or
test
loope
lock
sub
xchg
adc
addr16
jmp
mov
add
dec
add
rcr
dec
movs
cmp
pop
and
cmps
cmp
pop
and
cmps
cmp
scas
neg
in
mov
sti
stc
sub
in
dec
into
fidiv
jge
popa
(bad)
jl
(bad)
bnd
mov
pop
in
lea
out
fisttp
(bad)
nop
mov
sar
movs
js
dec
fisubr
xchg
imul
sti
xor
(bad)
sbb
fisubr
add
sbb
fisub
inc
dec
std
dec
mov
enter
movhlps
imul
mov
adc
std
xchg
(bad)
call
stc
mov
push
neg
jmp
mov
push
(bad)
aad
stos
mov
mov
cli
pop
add
mov
cmp
iret
jmp
pop
pop
stos
cmp
inc
hlt
(bad)
mov
inc
mul
push
imul
jmp
mov
out
(bad)
sti
dec
cli
jge
adc
mov
jnp
xchg
jmp
mul
(bad)
cdq
ja
sbb
test
fwait
cs
mov
call
xor
cs
mov
jp
(bad)
push
scas
mov
mov
dec
clc
aaa
hlt
std
(bad)
cmc
mov
jg
dec
(bad)
(bad)
ins
sbb
mov
push
mov
sub
push
stos
test
scas
inc
mov
push
or
mov
xchg
dec
clc
pop
jp
(bad)
cmps
mov
(bad)
jge
push
jnp
into
in
push
ret
out
jg
clc
and
mov
add
movs
mov
es
pop
add
cdq
into
in
push
jl
mov
add
or
ja
into
in
sub
mov
add
movs
mov
add
mov
jb
adc
mov
adc
lock
popf
cli
and
pop
imul
fisttp
(bad)
aad
ror
xor
popa
or
ror
adc
(bad)
sahf
mov
dec
inc
outs
(bad)
aad
add
add
mov
aad
mov
out
scas
sbb
push
loopne
call
jl
xchg
outs
mov
lock
rcr
aaa
mov
ja
loopne
rol
fisttp
clc
(bad)
push
hlt
mov
add
pop
lock
je
mul
push
sar
clc
jl
clc
scas
jmp
stos
or
jne
aas
xor
mov
mov
sbb
outs
ret
fs
loopne
rol
dec
lock
add
sbb
add
mov
clc
cmps
add
cwde
sbb
jg
loopne
rol
fistp
std
adc
or
aam
pop
call
call
add
inc
addr16
aam
mov
aas
add
inc
cmc
xchg
popf
inc
pop
outs
scas
push
pop
cmp
add
sbb
mov
sbb
adc
push
sar
xchg
push
loope
add
loope
sub
push
out
add
pop
jmp
jle
fisub
lock
call
lock
loop
xchg
jge
mov
(bad)
jnp
mov
addr16
popa
inc
lahf
cmps
mov
push
fiadd
sbb
pop
je
mov
lock
js
loopne
mov
ret
sti
or
jbe
repnz
dec
aaa
idiv
jne
mov
mov
repz
repnz
js
rol
pop
jmp
rcl
sub
sbb
pop
retf
sti
mov
inc
fisubr
lock
iret
fs
pop
mov
mov
adc
imul
inc
retf
jge
std
inc
mov
dec
into
mov
repnz
adc
imul
xchg
xor
jp
mov
lock
sbb
sbb
lahf
into
loopne
ret
iret
call
sub
pop
jmp
rol
inc
das
pop
in
scas
xor
in
js
inc
pop
pop
push
inc
pop
lods
cmps
in
inc
sub
dec
sar
mov
bnd
inc
jbe
loopne
sub
pushf
and
mov
cli
outs
loope
add
fcomp
pop
xchg
mov
add
xchg
mov
mov
sbb
cmp
outs
and
out
and
jnp
test
and
sub
push
out
adc
popf
add
cmp
scas
loop
fidivr
mov
xor
push
in
dec
js
sub
pop
jl
mov
imul
push
sar
mov
fnstcw
push
pop
aam
xchg
sbb
fimul
call
into
adc
fs
test
lock
loopne
add
and
add
sbb
cmp
xor
fst
mov
add
into
call
adc
ja
out
call
mov
pop
xchg
inc
sub
cdq
pop
mov
rcl
loopne
retf
into
add
ror
pop
mov
cli
(bad)
cmc
xchg
fnstsw
rcl
push
loope
add
mov
pushf
xchg
mov
rcl
mov
jp
and
jp
mov
fnstcw
xor
gs
call
hlt
repnz
and
xchg
pmovmskb
pop
and
fcmovnbe
push
push
loopne
ror
pop
ret
push
ror
retf
pop
mov
inc
jl
pop
adc
jo
jl
aas
inc
cmp
or
jo
hlt
jecxz
lock
cmc
repnz
aas
push
add
mov
cld
and
aas
push
das
pop
sbb
stc
xor
inc
jbe
or
mov
rcr
xchg
das
mov
inc
push
rcr
lods
xchg
fst
loopne
xchg
mul
sbb
daa
retf
sti
push
jmp
(bad)
in
in
aas
cmp
jle
sub
outs
push
mov
fsubrp
aas
cmp
out
ds
jne
cmp
pushf
fcmove
in
sub
outs
push
inc
jg
inc
jbe
mov
inc
fidiv
call
cdq
mov
sbb
idiv
jae
je
add
ja
jge
sub
adc
and
pop
rcl
int
mov
dec
aaa
das
loop
xor
outs
fisubr
jl
xor
jle
mov
std
sub
inc
or
add
lahf
in
mov
ret
jnp
ficom
sub
and
clc
xor
fisttp
xor
cmp
jl
out
dec
cli
outs
es
inc
pop
and
mov
jge
ficomp
pop
arpl
es
xor
jbe
pop
es
lock
mov
inc
shl
push
(bad)
jnp
push
cmps
outs
ret
faddp
pushf
leave
and
pop
loopne
xchg
adc
faddp
cmp
or
or
fcomi
mov
out
dec
js
aam
push
adc
loopne
js
and
daa
loope
mov
inc
rol
sar
pop
ret
jnp
xor
and
jecxz
hlt
xor
out
adc
cmp
cli
cs
call
das
pusha
inc
pop
add
xchg
add
dec
or
inc
cmp
pop
pop
jl
sbb
lock
test
add
lock
mov
ds
ret
lahf
(bad)
mov
push
clc
sbb
fild
clc
inc
data16
lods
sub
xchg
or
gs
pop
add
shl
mov
rcl
mov
data16
or
daa
mov
sbb
leave
mov
dec
ret
call
ret
mov
ror
jl
sbb
test
jl
lock
or
or
lsl
ror
and
add
add
inc
shl
pop
mov
or
lock
shl
pusha
retf
cs
cmp
fild
or
shl
dec
rcr
cs
cdq
pop
xchg
shr
jl
lock
push
hlt
adc
in
jg
and
jb
shl
leave
es
rol
push
hlt
or
fisttp
mov
lods
xor
shl
mov
(bad)
test
inc
adc
add
or
test
mov
inc
pop
pop
jl
mov
clc
cmp
add
popa
sub
mov
add
pop
sbb
lea
lock
shl
in
pop
ds
sti
outs
cmps
sbb
jne
dec
add
daa
push
rcl
or
dec
pop
clc
movs
ds
lods
add
adc
cdq
pushf
(bad)
in
add
loopne
or
adc
pop
pop
clc
sbb
fwait
add
loopne
or
add
add
dec
rol
pop
push
jl
loopne
add
or
jbe
inc
add
push
clc
cs
hlt
jne
pop
mov
ds
and
jmp
fild
jne
aaa
(bad)
jno
mov
loopne
sub
jl
loopne
add
push
rcr
sub
mov
ror
jl
lock
inc
add
add
sti
pop
stos
add
lea
rcr
lock
sar
outs
(bad)
sti
and
xlat
leave
jnp
fidivr
icebp
push
(bad)
jnp
out
dec
mov
fsubp
loope
mov
or
mov
add
sbb
sbb
ins
(bad)
(bad)
fs
jnp
fisub
aas
adc
or
fisub
ret
adc
pop
cmp
mov
mov
jnp
out
dec
mov
test
xlat
mov
dec
js
xor
ficom
daa
sbb
(bad)
sar
lods
js
lock
xchg
loopne
js
loop
mov
jbe
cld
ins
mov
jl
fsubp
js
ret
ficom
push
out
popa
mov
out
adc
por
cmp
arpl
and
int
pavgw
mov
mul
ret
js
(bad)
sti
and
xlat
adc
popa
jns
les
out
adc
dec
js
(bad)
jnp
sub
jnp
ficom
adc
loop
add
retf
icebp
fisub
and
ret
jnp
xor
cmp
sar
sar
and
ret
jnp
out
mov
push
ret
jnp
add
mov
in
in
retf
fcomi
push
(bad)
jnp
ficomp
ja
or
push
loopne
dec
clc
mov
loope
add
lock
xchg
outs
adc
add
add
daa
add
sbb
pop
pop
jl
lock
(bad)
xchg
lock
scas
add
ins
dec
js
fld
fild
clc
sbb
lods
mov
ror
mov
cmp
mov
repz
ins
sbb
pop
mov
fisttp
clc
or
fild
clc
data16
cmp
ja
lock
daa
add
push
jl
loopne
add
scas
add
push
adc
add
add
add
push
jl
add
push
jl
add
pop
lock
add
loopne
sub
xchg
xor
add
sbb
dec
sbb
(bad)
jmp
mov
clc
and
ret
sub
and
fistp
add
(bad)
push
xchg
fisttp
clc
xor
mov
mov
pop
add
sbb
js
mov
loopne
add
add
loopne
push
ror
es
cmp
scas
push
shl
call
popa
rol
push
inc
pop
pop
clc
test
scas
jmp
push
hlt
jne
out
add
push
jl
loopne
add
shl
aas
or
jne
(bad)
lock
sub
loopne
jl
lock
mov
push
lock
rol
lock
aad
add
in
or
add
clc
xor
jecxz
pop
add
and
loopne
or
jle
loopne
add
push
clc
or
fwait
add
or
and
and
or
push
rcl
adc
ins
sub
xor
mov
loopne
test
aaa
sub
pop
adc
popa
shl
mov
pop
pop
pop
clc
and
jecxz
lsl
loopne
push
jl
lock
daa
add
push
jl
lock
ror
push
loop
or
popa
mov
test
(bad)
lock
sar
ret
js
ret
jnp
ficom
stos
call
jle
ficomp
or
outs
add
mov
pop
xchg
push
mov
lahf
mov
sub
fild
push
sar
lods
stos
call
jnp
fidivr
icebp
fisubr
and
cmp
fiadd
ror
clc
xchg
js
ret
out
sbb
xor
fisub
dec
shl
mov
lock
push
fsubp
js
xchg
fstp
sbb
dec
ret
jnp
out
dec
js
push
aaa
add
popf
js
loopne
cdq
xor
(bad)
neg
fisub
aas
sbb
push
(bad)
neg
fisub
inc
or
sub
ret
add
sbb
jbe
outs
add
pop
(bad)
jnp
faddp
js
test
pop
ficom
sub
pop
out
xchg
lock
(bad)
div
ficom
lock
mov
popa
mov
js
and
sbb
clc
cmp
aas
sbb
xor
dec
loopne
xor
jnp
out
or
and
jecxz
clc
es
jnp
out
pop
js
push
shl
mov
clc
inc
mov
pop
faddp
add
popf
leave
and
es
sbb
sti
leave
add
sbb
mov
jle
loopne
add
adc
or
and
out
mov
cli
mov
jl
test
jl
lock
fild
clc
inc
rol
pop
ror
jl
loopne
sub
sub
ret
and
cmp
ret
or
sbb
push
shl
jg
adc
or
shr
jl
lock
retf
cld
or
xchg
pop
add
add
or
xor
jecxz
lock
push
hlt
ss
add
ror
mov
sbb
(bad)
shl
inc
ret
fild
dec
shl
push
pop
pop
clc
shl
rol
dec
sbb
sbb
mov
setb
and
cmp
sbb
loopne
add
and
cmp
ret
ds
(bad)
clc
sub
sbb
clc
push
rol
aad
add
daa
adc
movs
push
ds
add
arpl
sub
sbb
or
or
mov
retf
add
or
ss
add
adc
pop
push
jl
loopne
add
loopne
sub
sbb
ret
sub
xchg
or
add
inc
sub
add
pop
jl
loopne
or
or
push
push
hlt
dec
shl
jle
loopne
add
and
mov
sbb
fwait
or
dec
shl
pop
clc
cmp
arpl
add
fisttp
dec
shl
adc
add
imul
jl
ror
jl
loopne
push
rcr
jmp
push
ds
adc
clc
sub
fild
pop
push
js
call
or
ds
jmp
scas
add
arpl
clc
jbe
ds
sub
xchg
add
and
shl
shr
add
outs
loopne
inc
outs
adc
shl
fisttp
js
lods
ss
test
lods
or
cmp
mov
dec
adc
jae
clc
inc
mov
pop
mov
imul
ja
cmp
clc
sub
xchg
js
xchg
cmp
arpl
ret
out
or
mov
scas
and
mov
xor
fimul
jmp
mov
push
mov
daa
lock
les
out
pop
js
dec
sbb
mov
push
and
fwait
lock
(bad)
jnp
out
or
sar
xchg
lock
inc
jbe
mov
scas
adc
pop
mov
cmp
ja
jge
fimul
jnp
out
pop
js
adc
or
ds
and
pop
loope
xchg
sub
cmps
mov
icebp
fimul
pop
out
xor
push
es
js
test
inc
mov
and
jnp
mov
xlat
loope
dec
rol
push
sar
outs
push
inc
pop
(bad)
neg
fisub
popf
(bad)
call
div
jns
stos
sbb
aaa
loop
or
(bad)
add
mov
js
imul
jno
(bad)
lock
aad
daa
in
xor
sti
sbb
hlt
ss
sbb
push
sub
jnp
add
sar
mov
js
loope
mov
adc
loope
xor
add
mov
inc
add
jo
in
data16
xchg
sbb
or
dec
or
ds
inc
lahf
add
push
shl
xchg
test
mov
inc
inc
fild
clc
push
adc
loopne
add
mov
daa
add
movs
sbb
or
es
jmp
add
mov
outs
es
rcr
add
cmps
inc
clc
xchg
add
sub
(bad)
ret
ds
ret
aas
sbb
add
cli
push
(bad)
aam
ja
fs
add
shl
mov
loopne
or
outs
push
inc
pop
or
add
rol
or
sub
pop
push
jl
and
mov
ror
and
adc
pop
xchg
mov
arpl
xor
ins
inc
pop
daa
lock
rcl
dec
add
push
clc
or
xchg
add
xchg
lahf
shl
jl
shl
dec
add
cs
add
or
call
dec
outs
sbb
ret
add
sbb
ret
or
mov
mov
ins
inc
pop
push
jl
loopne
or
std
or
hlt
ss
add
ins
or
mov
pop
push
jl
lock
xor
mov
outs
cmp
in
dec
scas
push
lock
sbb
jmp
xchg
add
pop
xor
sub
pop
add
jb
or
adc
jno
ds
sbb
cmp
add
in
test
jne
or
clc
inc
rol
or
mov
in
add
rol
fbld
lock
shl
lock
jne
ss
jmp
jl
rcr
aaa
xor
rcr
psubb
shl
popa
rcl
rol
add
add
or
lock
outs
push
sar
pop
add
dec
rol
add
add
jbe
sub
loopne
lock
(bad)
sti
dec
mov
jnp
inc
hlt
popa
push
hlt
cmc
js
jmp
(bad)
icebp
fimul
pop
test
cmp
jecxz
outs
les
ficomp
adc
dec
add
jns
(bad)
jnp
out
push
mov
xchg
mov
mov
and
sbb
mov
jl
fimul
add
mov
test
push
add
(bad)
lock
sub
add
popa
mov
icebp
outs
sbb
out
adc
lods
js
or
push
mov
ficomp
lock
or
in
js
and
and
adc
jae
fisubr
out
mov
jns
loop
add
adc
jae
fimul
fild
test
(bad)
loope
popf
sbb
push
rcr
(bad)
mul
in
or
cmp
and
rol
mov
or
push
faddp
js
cmp
adc
lods
sbb
das
and
ret
js
daa
loopne
js
mov
jmp
push
ret
jnp
ficom
mov
out
neg
cmps
jecxz
and
pop
out
repz
out
shl
cmp
dec
adc
xor
cmp
push
inc
pop
(bad)
xchg
pop
xor
xchg
push
loope
add
loopne
or
dec
push
ret
add
jl
loopne
add
push
inc
outs
imul
cmp
pop
sub
clc
cwde
data16
jbe
cmps
xchg
popa
rcl
test
jl
loopne
mov
mul
(bad)
in
mov
ret
fild
clc
xor
jmp
clc
shl
lahf
push
ret
fiadd
xchg
lock
sub
ret
lahf
adc
stos
call
clc
data16
outs
pop
aaa
jbe
xchg
push
inc
mov
loopne
push
jmp
pop
push
jl
lock
sub
ins
inc
outs
and
mov
jb
or
fwait
push
loope
push
shl
add
add
mov
or
adc
sub
ds
mov
hlt
or
add
neg
mov
and
fild
pop
(bad)
mov
add
push
clc
gs
mov
pop
pop
clc
xor
xchg
add
and
aaa
push
shl
popa
popf
leave
jns
mov
outs
pop
aaa
rol
add
add
push
lock
out
mov
push
shl
add
jl
data16
popa
shl
lahf
add
fisttp
clc
jbe
in
fidivr
mov
lahf
add
add
in
dec
clc
data16
ds
xchg
pop
add
or
push
js
call
clc
movs
push
loope
add
push
jl
lock
mov
fwait
cmp
ds
clc
rcr
xor
and
outs
loopne
add
sub
or
or
push
rcl
mov
add
movs
push
ds
data16
fdivr
or
jle
loopne
sbb
int
jl
lock
clc
and
cmps
add
mov
ds
ror
jl
cmp
loopne
or
cmp
sub
movs
fwait
sbb
fldenv
cmp
ret
js
aam
pushf
jns
xor
cmp
mov
sbb
sbb
or
lock
ror
js
and
out
cmp
fisttp
loope
add
add
out
mov
rol
icebp
sahf
rol
cmp
fidivr
je
pop
(bad)
jnp
add
lock
js
ret
jnp
adc
mov
sub
ret
js
loop
add
mov
hlt
dec
inc
inc
push
and
mov
mov
jbe
lahf
xchg
ss
not
mov
jnp
mov
cmps
imul
xchg
cmp
es
js
push
rol
push
pop
aad
int
mov
rol
push
ror
jg
scas
neg
js
(bad)
sti
imul
fwait
push
jns
adc
or
or
lods
or
int3
rcr
fidivr
icebp
push
(bad)
jnp
out
popa
mov
mul
fs
loopne
adc
xor
cmp
sbb
adc
sbb
iret
push
ror
daa
fisub
js
push
inc
pop
mov
sub
mov
mov
(bad)
out
jge
into
in
push
inc
fild
(bad)
lock
xchg
js
fisttp
loopne
mov
arpl
push
ds
ss
and
cmp
xor
clc
mov
test
add
ins
retf
into
push
loope
mov
clc
sbb
mov
adc
sub
push
add
in
loope
sub
daa
add
and
mov
rol
push
loopne
dec
clc
movs
adc
push
in
xor
mov
rol
clc
push
cli
dec
int
jecxz
xchg
mov
ds
inc
mov
ins
xchg
cmp
jl
lock
iret
aam
fsubr
and
add
(bad)
call
lock
imul
ds
cmp
push
das
pop
jl
loopne
sahf
xchg
fld
mov
lea
addr16
aas
adc
push
sub
lods
jbe
data16
lea
jmp
xor
xor
add
mov
mov
clc
cmp
lahf
ror
outs
pop
jne
addr16
add
inc
clc
shl
mov
inc
jbe
add
test
mov
add
dec
rol
rcr
jl
lock
test
and
loopne
add
test
xor
xor
aad
rcr
ins
dec
xchg
sub
pop
push
jl
lock
add
add
fild
js
daa
addr16
arpl
sub
sbb
ret
stos
call
xchg
dec
shl
mov
mov
mov
clc
test
loope
xor
pop
mov
or
pop
out
mov
pop
jbe
add
xchg
cmps
xchg
cmp
out
adc
sbb
iret
les
add
js
stos
dec
adc
popa
(bad)
call
idiv
dec
mov
out
jbe
out
fs
push
inc
jg
mov
imul
add
aas
pop
out
popf
js
ret
jnp
fsubp
loop
scas
mov
fimul
clc
push
mov
sbb
cmps
mov
les
add
or
loop
push
addr16
or
sbb
iret
les
and
call
or
sbb
fiadd
ins
repnz
loopne
push
dec
aaa
dec
mov
push
into
loopne
dec
scas
push
and
pop
out
lods
sahf
cmp
mov
movs
mov
pop
adc
add
ds
inc
mov
jbe
add
pop
add
movs
xchg
pop
add
or
cli
jp
jle
xchg
outs
lods
sub
fwait
xor
ficom
adc
dec
mov
add
adc
push
ficom
call
int
cld
pop
mov
sub
sub
or
leave
adc
push
or
inc
mov
mov
addr16
mov
mov
adc
ins
leave
cs
inc
rcl
jge
fdivrp
pop
shl
mov
adc
jl
adc
aad
aaa
imul
cmp
cs
ret
shl
imul
ja
mov
pop
inc
out
mov
pop
cmp
addr16
das
xlat
and
cld
sbb
aaa
add
lahf
mov
lahf
or
lea
lock
cmp
iret
add
push
js
call
push
jl
test
jl
pop
js
jle
mov
and
fld
push
cmp
jl
lock
clc
xor
mov
jae
mov
xlat
inc
inc
lahf
add
je
inc
or
dec
shl
add
jno
ficom
sbb
mov
add
cmp
pop
imul
add
shl
ds
inc
shl
sbb
fwait
stos
sub
(bad)
int
shr
cld
imul
leave
mov
jmp
shl
fsubrp
leave
and
xchg
outs
stos
test
xor
imul
inc
mov
lock
imul
js
daa
xchg
mov
fisttp
aaa
add
je
and
aaa
xor
ja
jmp
mov
clc
inc
ins
fstp
mov
hlt
ins
sbb
aad
mov
daa
add
push
jl
loopne
imul
inc
add
dec
rol
or
mov
xlat
inc
rcl
sub
adc
lock
rcr
lea
clc
cmp
std
pop
shl
push
push
hlt
ror
clc
xchg
sub
xchg
popf
ins
aad
or
or
pop
pop
mov
lahf
mov
ds
xchg
or
or
add
add
mov
cld
dec
rcr
ds
test
mov
ds
sbb
fwait
sbb
xor
repnz
(bad)
sti
je
inc
xor
hlt
mov
lahf
xchg
cdq
stos
call
fnsave
stos
xchg
popf
ins
aad
imul
push
inc
jbe
js
cmps
mov
pop
mov
je
sar
ins
aad
lock
add
loopne
push
ficomp
or
cmp
adc
outs
das
pop
mov
lock
jns
sar
push
hlt
fisubr
ror
fcmove
ins
ins
(bad)
ror
jb
(bad)
or
mov
rcr
push
ror
xchg
mul
xchg
jecxz
xchg
mov
jnp
add
stos
sbb
mov
(bad)
mov
or
jbe
cmps
cmp
and
fwait
or
mov
jge
fisub
aas
push
fisubr
out
mov
jecxz
shl
int
xor
addr16
out
mov
push
ret
jnp
mov
add
mov
sub
fild
out
(bad)
ror
or
push
in
dec
mov
add
xchg
mov
(bad)
in
icebp
fimul
mov
push
(bad)
call
test
or
push
iret
(bad)
dec
jae
inc
mov
lock
inc
add
and
mov
outs
call
lods
sbb
push
rol
push
cmp
push
pop
jbe
ret
outs
dec
(bad)
push
ret
sbb
pop
arpl
js
rcr
jmp
retf
add
or
sub
fild
shr
push
movs
ins
fst
ds
js
call
pop
stos
mov
xchg
mov
or
mov
pop
lock
mov
ins
rol
fild
or
call
and
scas
mov
jnp
(bad)
(bad)
push
fidivr
shl
mov
jno
mov
xlat
test
shl
add
pop
clc
inc
sub
test
call
dec
adc
pop
stos
lea
ds
jmp
int
pop
mov
jnp
retf
(bad)
ret
mov
js
mov
xor
pop
stos
lea
lock
int
in
dec
into
sahf
mov
sbb
jg
into
in
add
jmp
mov
mov
clc
dec
lods
shr
pop
mov
mov
rcr
and
(bad)
push
mov
data16
jbe
out
ds
shl
add
jne
xor
pop
shl
clc
in
or
sbb
dec
sbb
cmp
push
lock
fiadd
daa
imul
test
aas
dec
sbb
(bad)
rcl
sbb
jnp
bound
outs
push
pop
outs
xor
sbb
jbe
lea
sub
or
mov
pop
cmp
push
in
fimul
jne
push
ds
test
lock
inc
fstp
add
ret
pop
mov
push
mov
xlat
inc
shl
xchg
out
dec
(bad)
call
pop
out
xor
mov
jns
adc
out
or
rcr
enter
jae
fnsave
or
mov
sbb
stos
mov
pop
pop
mul
sbb
fimul
test
dec
rol
call
xor
test
add
xchg
repnz
xor
clc
cdq
pop
mov
sub
pop
and
fcmove
inc
jbe
or
and
sbb
jb
add
xor
je
shl
movs
mov
mov
push
lock
ins
xor
add
or
outs
sbb
pop
shr
rcl
js
loopne
dec
add
fsubrp
ret
pop
out
xchg
pop
adc
lahf
sar
outs
pop
mov
js
xor
jmp
sub
pop
(bad)
jnp
inc
hlt
sbb
repnz
mov
pop
fwait
mov
fwait
in
outs
movs
xor
cmc
js
rol
into
xchg
in
adc
push
jbe
add
hlt
or
daa
loopne
test
fisttp
jns
ja
js
aaa
arpl
sub
loopne
cmc
xchg
(bad)
sahf
inc
clc
and
ret
fidiv
push
aaa
popf
xor
rcl
or
test
sbb
dec
shl
mov
add
popa
cmp
adc
xchg
sub
xor
pop
in
fs
mov
ds
or
cwde
sub
js
sub
popf
test
repz
ror
cs
ret
xor
mov
xchg
sub
jecxz
sub
push
shl
retf
xor
fcmovnbe
int
cmp
addr16
add
push
hlt
jbe
cmps
add
rol
fisttp
clc
and
ins
fs
inc
inc
mov
loope
test
sbb
mov
lods
(bad)
cs
into
shl
mov
js
mov
fild
pop
(bad)
lds
popf
mov
mov
rcr
cmp
inc
jbe
outs
es
sub
xchg
mov
sbb
(bad)
add
ins
fldenv
clc
rcl
sbb
int
(bad)
adc
jbe
es
daa
addr16
aad
cmp
hlt
sub
outs
sbb
xlat
inc
shl
pop
adc
psubb
add
adc
or
call
add
xor
imul
daa
loopne
cli
and
enter
mov
lods
cmps
jmp
and
mov
shr
dec
pushf
xor
imul
push
loope
loopne
adc
lock
fisttp
clc
sub
(bad)
sbb
aad
sahf
pushf
fcmovnb
mov
ds
mov
rcr
jmp
or
dec
add
lods
call
fsubrp
imul
fistp
js
aad
lods
add
mov
outs
and
and
push
outs
xchg
jbe
into
xchg
outs
sbb
push
push
shl
jle
cs
es
in
retf
outs
cmp
mov
add
daa
jecxz
mov
addr16
loope
or
cmp
and
(bad)
sti
je
mov
faddp
jnp
inc
jbe
repnz
fisub
stos
mov
jge
add
cs
sar
arpl
icebp
fisub
mov
out
hlt
popf
js
rcr
jl
out
push
lock
imul
push
inc
jbe
in
(bad)
loopne
push
add
out
popf
add
pop
fisubr
call
inc
hlt
adc
push
mov
sbb
jnp
pop
mov
shl
push
mov
add
icebp
push
push
shr
loopne
js
push
hlt
dec
or
push
jns
mov
cmp
adc
dec
popf
leave
inc
mov
fild
ins
stos
jbe
ficom
sub
iret
sar
stos
(bad)
cmp
daa
push
(bad)
idiv
dec
sub
sbb
ins
adc
sbb
mov
std
xor
cli
xor
dec
ins
frstor
gs
push
es
lock
scas
add
daa
imul
add
clc
ss
shr
sub
arpl
outs
pop
jbe
mov
repz
pop
add
fwait
test
arpl
jmp
or
mov
jae
xor
out
int
inc
fild
iret
neg
fwait
pop
scas
inc
mov
add
or
and
fild
clc
test
mov
stos
mov
test
retf
mov
mov
or
push
adc
(bad)
push
push
imul
jl
xor
aaa
rol
clc
push
leave
fldenv
cld
jmp
pop
or
test
jbe
add
inc
addr16
jne
pop
arpl
dec
into
(bad)
push
(bad)
fiadd
mov
scas
sar
mov
jl
(bad)
push
loopne
sub
imul
or
fstp
inc
fild
jne
outs
imul
fld
arpl
outs
pop
aaa
mov
sbb
xchg
(bad)
aad
fdiv
test
push
iret
add
jge
xor
loope
bound
popa
sbb
jnp
bound
in
add
ds
shl
call
movs
mov
popf
inc
rcr
fnsave
cmp
out
adc
sub
lahf
and
or
rcr
add
pop
add
add
dec
call
in
lods
(bad)
rcr
pop
mov
into
outs
ret
mov
ror
mov
mov
adc
sub
fnstenv
xor
sub
jae
outs
out
lea
xchg
es
retf
into
(bad)
call
xchg
mov
out
dec
mov
xchg
test
push
fiadd
mov
add
push
mov
arpl
cs
fidivr
fcmovb
fcomp
popf
jns
pop
and
gs
hlt
or
cmp
fwait
mov
in
sbb
mov
xlat
xor
cwde
mov
dec
xlat
and
mov
dec
xlat
and
mov
pop
mov
loopne
sahf
lods
pop
pop
out
shl
inc
hlt
sub
mov
(bad)
adc
sub
repz
sbb
cmp
mov
popf
popf
shl
lock
push
xlat
inc
clc
adc
test
rcr
mov
(bad)
imul
imul
mov
xor
lock
arpl
loop
push
pop
mov
add
test
popf
leave
mov
mov
mov
sbb
cmp
fisubr
leave
sub
mov
shl
xor
pop
xlat
cdq
pushf
cmp
js
stos
sub
out
loopne
xchg
or
cmp
iret
sar
ror
or
rcr
push
in
xor
mov
jb
es
rcl
xchg
das
int3
mov
outs
xlat
data16
fimul
pop
pop
aaa
push
fisubr
cli
mov
push
inc
outs
loopne
add
fild
clc
mov
hlt
pop
fisub
std
sbb
ret
fbld
fiadd
add
push
xor
mul
es
xor
ja
lock
arpl
pop
ins
sub
ret
fisub
push
lahf
inc
inc
outs
or
arpl
lods
mov
dec
imul
jl
and
lock
sub
fisttp
imul
dec
adc
lock
ja
(bad)
mov
mov
lock
add
fld
mov
cmp
fnstenv
cmps
jnp
jae
fbld
fisubr
daa
je
fisub
popa
shl
fild
clc
jmp
jbe
jbe
loopne
mov
aas
dec
aaa
loope
sbb
mov
push
loope
jp
(bad)
mov
in
sahf
pop
adc
or
test
ds
push
mov
test
es
sbb
leave
(bad)
or
daa
out
rcr
cdq
pushf
cmp
pop
add
fnsave
mov
pop
pop
outs
xchg
jbe
mov
mul
lods
xor
dec
into
pop
rol
adc
(bad)
rol
pop
add
(bad)
cmp
loopne
add
sbb
in
add
arpl
pop
mov
mov
jmp
jl
aad
pop
mov
ins
jmp
push
ror
clc
adc
stc
bound
jge
out
int
cdq
pushf
pop
test
aas
ret
mov
push
mov
call
xchg
adc
dec
add
add
lea
stos
mov
add
arpl
mov
fimul
fidivr
pop
push
imul
pushw
add
std
dec
ins
fstp
aaa
jnp
leave
fincstp
adc
js
loopne
icebp
push
shl
mov
cli
ss
mov
ds
xchg
dec
mov
mov
inc
js
stos
mov
clc
sbb
xchg
pop
or
fstp
push
rol
ds
xchg
div
inc
adc
mov
sbb
jnp
pop
jbe
in
mov
fisttp
fisubr
repz
adc
jnp
fsubrp
dec
scas
dec
fisubr
scas
adc
dec
repnz
mov
xchg
aas
popf
sub
jl
mul
mov
add
fidivr
and
pop
sub
rcr
std
das
aad
idiv
sbb
aaa
imul
fnstsw
fwait
push
pop
mov
scas
aad
lea
loop
inc
imul
icebp
fimul
mov
jge
mov
call
mul
in
push
add
push
stos
mov
mov
mov
leave
scas
pop
sbb
mov
in
push
add
mov
adc
push
mov
retf
inc
jne
addr16
jbe
es
cmps
mov
jbe
(bad)
outs
ret
mov
hlt
loopne
or
pop
stos
xchg
test
mov
and
push
xchg
lock
mov
mov
mov
mov
stos
call
inc
cmp
loope
mov
aam
pop
shr
mov
pop
or
mov
add
fbld
into
fidiv
dec
ret
(bad)
adc
push
jl
dec
fstp
pop
lods
mov
mov
xor
mov
mov
add
mov
out
int
rcr
mov
adc
jbe
(bad)
push
loopne
sub
or
jmp
sub
sbb
pop
aam
dec
add
and
ds
shl
fisttp
clc
inc
shl
or
sub
and
fwait
add
or
out
(bad)
dec
mov
jnp
mov
pop
daa
lock
mov
mul
in
jnp
sub
shl
test
retf
pop
out
(bad)
lea
aad
(bad)
push
fstp
mov
cmc
aam
inc
rcl
pop
mov
add
and
add
dec
shr
mov
mov
movs
fwait
aam
jb
jne
mov
jl
loopne
xchg
pop
jmp
stos
jnp
jbe
mov
or
rcr
ins
adc
arpl
xor
ret
jmp
xchg
adc
ja
mov
add
cmps
sbb
or
call
loopne
add
add
aad
(bad)
jnp
ds
clc
mov
fwait
mov
sub
mov
ficomp
mov
lock
int3
call
call
clc
es
push
imul
mov
pop
movs
cmps
outs
in
imul
retf
pop
or
xchg
imul
and
jmp
mov
call
jb
fidivr
mov
outs
pop
arpl
imul
fsubrp
int
stos
mov
dec
pop
cdq
ja
stc
mov
ins
fisub
xlat
call
cli
xor
pop
xchg
cs
retf
pop
in
mov
inc
cmp
lock
fisub
out
jbe
into
mov
ins
stos
mov
pop
mov
mov
cmp
ss
mov
push
jne
jbe
(bad)
out
leave
xor
or
add
fidivr
cmp
pop
fcomp
retf
icebp
fimul
(bad)
sub
ret
sbb
iret
ret
mov
scas
int
sbb
ficomp
cmp
cli
xor
addr16
jbe
lock
addr16
or
or
ja
outs
xlat
data16
movs
fwait
push
pop
fwait
mov
pop
lds
add
fmulp
rcl
mov
jbe
addr16
aad
scas
rcl
stos
ss
jmp
cmp
in
xor
(bad)
xchg
popf
popf
rcr
aaa
lods
adc
jbe
data16
sbb
sahf
rcl
rcr
jbe
clc
dec
add
jnp
(bad)
into
in
je
cmps
push
das
(bad)
mov
fstp
rcl
not
adc
pop
js
inc
jb
addr16
(bad)
in
pop
or
lock
mov
jmp
push
shl
add
(bad)
push
push
(bad)
push
in
mov
jnp
ficomp
or
aaa
xchg
lock
mov
ret
fist
rol
dec
xlat
call
ror
loope
xchg
lock
add
jo
dec
and
cmps
add
or
dec
(bad)
push
into
sar
push
rol
aas
or
mov
aas
dec
sub
shl
jl
out
cmp
in
fmulp
adc
dec
clc
sbb
push
aaa
push
loopne
add
aaa
(bad)
ret
clc
and
jg
and
mov
jnp
ss
push
mov
sbb
fiadd
mov
mov
pop
sti
outs
(bad)
pop
stos
pop
mov
inc
add
add
pop
mov
out
or
sub
inc
clc
rcr
inc
jg
inc
jbe
add
jb
fwait
mov
fwait
ss
jg
mov
ret
int
add
loope
mov
iret
in
jne
mov
lock
add
lods
mov
pop
js
stc
ret
mov
mov
(bad)
jo
pop
imul
fiadd
cld
jnp
dec
mov
fbld
loopne
add
mov
add
ror
mov
and
pop
and
fild
cld
outs
add
sbb
aas
mov
add
sbb
aas
inc
rcr
clc
test
mov
lock
add
rcr
mov
adc
ins
add
or
loopne
add
push
outs
movs
cmp
push
add
cmp
(bad)
adc
pop
or
out
push
rcr
inc
inc
inc
loopne
dec
sar
lock
or
cmp
jmp
mov
add
cmp
mov
push
sbb
mov
add
push
inc
shl
mov
sbb
shl
mov
jge
out
sub
xchg
mov
mov
lahf
fsubr
js
add
mov
sti
cmp
mov
out
(bad)
loope
xor
(bad)
pop
mov
mov
ins
js
fwait
cmp
dec
cli
repz
int
cld
popf
js
inc
dec
mov
(bad)
jle
outs
(bad)
js
call
jle
add
fidivr
ja
and
or
lahf
jecxz
sub
pop
loopne
sbb
(bad)
push
add
fisubr
sti
das
adc
cmps
lods
pop
lock
fldcw
mov
pop
mov
mov
xchg
pop
pop
ficom
jmp
or
mov
lahf
mov
dec
sbb
fcmovne
into
fisubr
sbb
daa
lock
rcr
out
mov
sar
cmp
fiadd
adc
in
jp
ror
in
jp
mov
mov
jbe
lock
mov
stos
and
aas
dec
(bad)
aad
jecxz
push
dec
aaa
push
jne
or
hlt
jbe
fild
mov
clc
adc
in
in
mov
cdq
add
mov
in
mov
jnp
ret
(bad)
xchg
jbe
outs
pop
loope
sahf
fadd
jne
mov
outs
push
fcmovbe
push
out
(bad)
into
pop
mov
(bad)
ja
into
sar
fisttp
les
fild
jno
call
cmp
xchg
sbb
outs
adc
sbb
inc
cmc
xchg
pop
xchg
sahf
mov
call
shl
push
or
inc
adc
(bad)
pop
jbe
mov
int
pop
mov
xchg
rcr
jnp
addr16
aad
dec
clc
dec
cmp
cmp
retf
jbe
(bad)
pop
mov
retf
into
push
in
add
and
(bad)
sbb
ins
lea
mov
iret
es
sub
pop
imul
jne
outs
das
pop
fcomp
mov
jl
sub
sub
rcr
push
idiv
jne
sub
ins
sub
mov
mov
in
ins
sub
(bad)
into
in
add
movs
mov
add
pop
je
fsubrp
int
add
loope
aad
mov
mov
mov
push
inc
out
(bad)
sbb
movs
sbb
mov
push
hlt
jbe
outs
mov
sbb
in
icebp
dec
pop
stos
mov
jp
jmp
add
jg
sti
mov
enter
out
or
cwde
or
xor
sbb
mov
mov
es
cmp
and
pushf
xchg
outs
fmul
push
push
dec
xor
dec
push
mov
arpl
sbb
mov
mov
idiv
add
aad
in
mov
push
stos
vxorps
jmp
int3
sti
or
adc
lds
pop
ds
popf
jne
aaa
imul
cld
daa
add
mov
aam
arpl
sub
fs
fild
fisubr
mov
jbe
inc
outs
push
jbe
(bad)
ror
out
fbld
(bad)
imul
cmp
sar
lock
sub
stos
inc
fnstsw
jne
jge
mul
addr16
aas
call
(bad)
es
pop
rcr
fnsave
outs
loopne
jne
mov
jbe
(bad)
inc
(bad)
popf
cmps
push
fist
retf
call
push
ins
mov
js
loopne
sub
or
mov
test
pop
jmp
jg
push
sti
inc
push
mov
jp
mov
cli
pop
cmc
daa
test
out
dec
fisttp
cmp
loop
add
xor
test
(bad)
(bad)
test
fucomip
mov
cli
data16
(bad)
sbb
lea
(bad)
fucomi
dec
mov
loope
push
gs
js
mov
xor
xor
lock
hlt
inc
outs
jg
(bad)
daa
xlat
test
mov
jne
mov
fwait
(bad)
call
outs
inc
aaa
ss
scas
add
mov
pop
mov
ss
fwait
test
imul
xchg
repz
add
mov
gs
sbb
cmp
jns
pop
pop
mov
out
call
jmp
popa
mov
jmp
scas
lock
adc
dec
or
fisubr
aas
push
and
jbe
mov
mov
ds
add
add
(bad)
mov
loopne
push
mov
fld
pop
loop
sbb
aas
sar
mov
adc
out
xor
loopne
imul
sub
fwait
icebp
pop
iret
cmp
push
stos
push
jbe
mov
mov
pop
mov
aad
(bad)
cmp
lea
addr16
ds
sub
ret
jle
lock
dec
icebp
sub
add
pop
jl
test
and
aaa
add
inc
aas
or
outs
rcl
test
out
inc
mov
aam
aaa
arpl
retf
xchg
lock
pop
mov
int
daa
mov
jno
scas
daa
loope
xchg
lock
dec
js
mov
sub
fild
jle
sub
sbb
cmc
int
test
fldcw
dec
xchg
aad
and
icebp
mov
jmp
inc
jmp
or
mov
push
add
das
loopne
jne
aas
add
and
pop
and
sbb
std
xor
xchg
sbb
stos
add
cmp
out
pop
and
pop
pop
add
or
ins
mov
add
mov
lock
add
out
mov
data16
leave
jne
cld
sbb
rcl
mov
mov
inc
push
aaa
outs
hlt
fs
ins
cmp
push
cmp
mov
fwait
idiv
pop
cmp
lock
test
into
xchg
fcmovb
fsubr
sub
fwait
or
pop
cmp
ret
fsub
or
iret
add
jbe
cmp
xor
sbb
xor
sbb
leave
fnstenv
popa
gs
mul
retf
pop
cld
sbb
jmp
mov
pop
fwait
dec
ins
ret
sub
(bad)
call
lods
mov
(bad)
retf
pop
cmc
leave
std
test
mov
mov
leave
pop
dec
or
push
sar
ja
lahf
add
push
jmp
(bad)
scas
or
or
cmp
sar
loopne
add
test
loopne
add
sbb
push
loopne
shl
rol
add
add
add
mov
aas
fnstsw
fcmovnbe
aaa
arpl
ss
into
rcr
add
cmp
lahf
(bad)
jnp
out
xchg
loop
(bad)
test
(bad)
fimul
js
jecxz
mov
adc
div
ds
adc
daa
lock
(bad)
sti
jg
ja
or
pop
xchg
das
rol
adc
aas
into
mov
sar
fidiv
lock
ret
fidiv
add
inc
or
jnp
pop
adc
sbb
sbb
cmps
js
and
stos
add
add
test
icebp
mov
mov
stc
das
icebp
(bad)
cmp
shl
adc
dec
add
and
cmps
or
sub
mov
jge
dec
out
and
sbb
adc
aas
and
out
mov
ret
sti
cmp
add
jecxz
pxor
(bad)
loop
pop
out
dec
mov
out
and
(bad)
mul
(bad)
lock
(bad)
icebp
mov
pop
(bad)
jnp
out
or
enter
adc
adc
(bad)
lock
sar
pop
jp
add
sti
sub
jg
neg
mov
lock
ja
out
or
das
aaa
clc
popa
mov
adc
mov
push
lock
cmp
jg
ror
mov
loopne
js
(bad)
mov
out
pop
sar
faddp
adc
in
clc
gs
out
mov
lds
out
xor
jo
iret
loop
sbb
adc
jle
add
out
or
adc
inc
mov
fisttp
rcr
push
adc
test
stos
lods
test
retf
std
test
daa
jne
aas
and
mov
adc
aaa
shl
jl
rcr
popf
dec
cmps
jle
(bad)
fsub
jge
fld
pop
sub
mov
in
out
cmp
xor
outs
add
clc
and
scas
add
or
adc
cmps
add
js
lock
rcr
mov
lahf
add
psubb
lahf
add
call
punpckhwd
dec
or
cs
ret
mov
stos
ins
xlat
sbb
xor
iret
shr
lock
rcr
rol
add
loopne
add
xchg
lock
(bad)
push
lock
das
add
lods
xchg
lock
call
fimul
clc
cmp
add
inc
shl
mov
or
loopne
add
add
and
add
pop
jl
lock
adc
fwait
add
or
retf
or
xchg
add
add
fild
clc
sbb
jecxz
aas
add
sub
lock
out
add
sbb
lock
shl
mov
ltr
push
cmc
or
cli
add
retf
or
pop
lock
add
loopne
add
clc
xor
ja
lahf
add
out
add
add
add
cmp
pop
add
and
jnp
inc
pop
add
sub
and
pop
aas
or
lock
mov
loopne
add
cld
ds
add
cld
or
out
add
xchg
fst
loopne
cmp
add
jge
lock
iret
add
lock
shl
jg
clc
xor
retf
cmp
cmp
sbb
cld
xor
stos
or
jle
lock
jge
push
loopne
cmp
lahf
add
pop
clc
sbb
ret
cmp
add
jle
cmps
add
add
inc
rol
push
clc
or
mov
pop
ret
fiadd
cmps
inc
clc
add
adc
loopne
lock
imul
fimul
mov
push
outs
lock
loopne
pop
out
daa
js
out
out
loopne
test
sub
clc
and
jnp
jle
jne
inc
mov
(bad)
icebp
push
(bad)
mov
push
(bad)
jnp
sbb
mov
sbb
outs
lock
(bad)
sti
adc
xchg
sahf
(bad)
sti
or
iret
lock
lds
mov
jnp
out
add
adc
imul
sbb
jnp
out
jecxz
aas
ret
or
mov
or
test
div
jl
sbb
sti
fidiv
psrad
sbb
sbb
jns
jle
out
add
lock
sar
add
ficom
mov
(bad)
(bad)
outs
loopne
xchg
xor
ja
mul
ffree
sti
sub
xchg
lock
(bad)
sti
push
fisubr
das
lock
sti
ret
out
add
ret
jnp
out
imul
cmp
iret
adc
push
mov
out
dec
mov
out
push
ficom
js
jecxz
(bad)
neg
mov
sti
push
fmulp
icebp
out
loopne
xor
std
push
sti
in
js
les
or
cmp
push
icebp
fiadd
lock
cmps
lock
test
sar
fidiv
jge
or
pop
rcl
mov
mov
dec
mov
aam
daa
loopne
add
add
mov
mov
aaa
sbb
jl
lock
iret
add
ds
add
or
rol
lahf
pop
cld
sub
arpl
sub
mov
add
or
cmp
cmp
loopne
cmp
cld
or
xchg
and
aaa
loopne
add
cld
or
and
lock
ja
(bad)
test
dec
fld
in
loope
add
aaa
add
sub
aaa
add
clc
add
mov
pop
add
push
clc
gs
jg
clc
xor
or
jge
inc
rcr
jge
lock
loopne
add
aaa
cli
aas
push
cld
ds
sub
jl
adc
lock
cmp
sbb
cld
xor
sbb
or
add
clc
mov
cmps
push
jae
pop
add
add
mov
sub
jle
lock
cmp
sar
inc
adc
stos
cmp
jl
lock
lahf
add
adc
mov
psubsw
mov
pop
add
add
add
cmp
rcr
add
push
clc
adc
test
lock
sbb
add
clc
pop
rol
add
push
push
sar
jecxz
aas
or
popa
shl
add
or
add
inc
cmp
add
out
add
aas
scas
dec
clc
pop
shr
(bad)
adc
inc
clc
ins
rcl
add
jl
lock
adc
adc
pop
add
add
es
ror
add
inc
rcr
dec
jb
aad
sti
mov
lock
pop
jbe
add
inc
outs
jge
mul
das
ds
xchg
jnp
push
call
push
dec
pop
rcr
pop
(bad)
fidiv
mov
jo
dec
adc
jno
cmps
icebp
ds
adc
cmp
mov
out
push
mov
sbb
push
ja
std
or
sahf
in
mov
test
mov
(bad)
xlat
movs
stos
pop
mov
outs
ret
push
lahf
pop
sub
or
ret
sbb
daa
xlat
mov
into
test
sbb
xlat
icebp
mov
pop
icebp
ds
fiadd
mov
fld
lock
out
loopne
sbb
xlat
add
sahf
sbb
lock
hlt
(bad)
frstor
fnsave
cmc
sbb
sub
lods
stos
(bad)
cli
in
js
(bad)
jnp
add
cmps
icebp
pop
(bad)
sti
add
(bad)
imul
lahf
loop
(bad)
not
mov
test
sub
(bad)
icebp
mov
fidiv
icebp
jle
not
test
or
xor
xor
mov
test
loope
mov
arpl
push
mov
cmc
pop
lahf
ret
sti
sub
sar
and
lock
(bad)
sti
and
ret
fisub
js
loopne
mov
outs
mov
test
(bad)
sti
xchg
cli
in
cmp
mov
mov
add
ror
lahf
aam
fimul
clc
xor
ret
sbb
sbb
or
lock
stos
lods
add
lock
shl
or
cmp
pop
cmp
out
add
pop
clc
xor
ret
sbb
cld
add
pop
add
clc
and
test
or
push
shr
mov
outs
add
add
sbb
lahf
xchg
lock
lock
das
call
xchg
scas
add
adc
pop
rcl
add
pop
rcr
mov
lock
ja
clc
xor
(bad)
xchg
lock
rol
aas
add
add
add
adc
sti
add
sub
popf
scas
lock
ror
jle
lock
add
lock
push
loopne
jne
invlpg
push
clc
inc
shr
lock
loopne
xor
lock
clc
sbb
aas
loopne
or
adc
das
add
daa
loopne
xor
lock
cli
xchg
stos
adc
dec
or
lock
jecxz
pop
add
or
cmps
add
mov
dec
or
ror
lock
rcr
shr
jle
lock
aas
add
mov
jle
lock
into
cmps
sar
outs
cmps
push
lock
add
xor
sahf
in
ins
mov
add
call
and
loopne
add
push
clc
or
(bad)
outs
sbb
cld
or
or
lock
or
cmps
add
add
push
shl
dec
shl
aam
adc
rol
add
push
jl
loopne
sbb
cld
add
dec
sbb
cld
sbb
push
or
loopne
add
add
add
jae
lsl
add
and
imul
ins
push
lock
sbb
cld
adc
retf
sbb
cmp
xchg
add
or
jnp
lahf
add
sub
dec
adc
aaa
sbb
jl
lock
scas
add
or
loopne
push
gs
add
add
xor
fild
clc
cmp
mov
adc
add
mov
adc
jecxz
xor
mov
imul
das
test
sbb
mul
jge
add
idiv
cmps
lock
adc
out
and
sar
pop
mov
sbb
rcr
frstor
addr16
daa
loopne
js
ret
sti
sub
push
js
ret
sti
adc
sub
sar
fisubr
xlat
in
or
stos
js
loope
push
out
xchg
js
loop
add
stos
call
aaa
or
or
pop
lock
fidivr
outs
sbb
out
das
loop
pop
pop
jp
mov
pop
or
inc
mov
mov
aas
xchg
ret
sti
add
mov
(bad)
fidiv
add
or
xlat
js
jno
pop
(bad)
sti
sub
push
js
lds
fimul
js
(bad)
sti
sub
repz
ret
ficom
pop
sar
ss
addr16
ds
sar
sahf
ret
out
and
loopne
pop
out
std
js
loope
or
stos
js
xchg
lock
js
lds
out
pop
js
lds
fsubp
js
loopne
add
imul
pop
(bad)
sti
xor
ja
sahf
and
aaa
jne
dec
loope
add
imul
clc
add
jecxz
scas
loopne
add
cmps
js
adc
daa
js
(bad)
jnp
out
jle
sti
lock
ret
fisub
div
dec
mov
adc
push
loopne
or
rcr
fiadd
jl
loopne
add
add
add
dec
ret
jle
lock
cmps
test
test
push
cld
and
cli
or
das
add
rcl
push
rcr
shr
jle
lock
lock
loopne
cmp
jl
lock
or
mov
mov
mov
or
lock
jnp
jg
js
shl
add
lock
lock
pop
sbb
and
ret
lock
outs
hlt
mov
mov
or
pop
popf
call
cld
add
adc
pop
shl
scas
pop
jbe
test
lahf
add
and
mov
lahf
add
add
add
inc
shl
ds
shr
shr
inc
rol
or
ja
clc
xor
jnp
jg
clc
pop
ror
(bad)
pop
push
clc
or
daa
cmc
fs
clc
out
das
stos
in
push
sbb
cld
sbb
mov
lahf
add
add
dec
rcr
imul
add
clc
imul
add
add
cmp
or
add
cld
ss
add
loopne
cmp
or
add
push
clc
jnp
(bad)
adc
xchg
or
sbb
arpl
lock
cmps
add
fild
dec
lock
daa
add
add
and
xchg
add
clc
push
cmc
int
add
add
push
add
push
clc
sub
xchg
add
add
and
pop
add
pop
clc
push
shl
jg
clc
inc
shl
shl
mov
out
mov
leave
xchg
add
clc
gs
clc
sub
loopne
or
add
add
sub
das
add
add
or
add
ja
mov
push
add
dec
clc
and
sti
add
add
jnp
jle
lock
das
add
aaa
clc
sbb
xchg
ds
sub
cmp
pavgw
mul
cmp
pop
push
push
fwait
(bad)
sti
fidiv
dec
icebp
push
(bad)
jnp
out
repz
les
pop
(bad)
jnp
cmp
sti
sub
sar
fisubr
pop
add
aad
cmp
pop
sar
or
xor
loopne
push
out
sti
js
sub
loopne
add
daa
js
jecxz
or
jecxz
add
push
js
lock
test
xchg
sbb
sti
lahf
loop
sbb
cmp
adc
in
mov
mov
mov
(bad)
or
sahf
in
mov
mov
aas
test
xor
fist
lock
cmp
mov
push
mov
rcr
cmp
iret
icebp
push
(bad)
jnp
out
addr16
xchg
stos
loopne
xor
sahf
in
or
sar
and
dec
rcl
mov
mov
test
imul
sbb
add
xor
aas
cmps
daa
mov
fiadd
lock
daa
mov
cmp
adc
loop
adc
cmp
loopne
sbb
adc
jmp
push
icebp
push
ror
js
jecxz
inc
shr
std
adc
jns
mul
mov
add
cmps
hlt
fs
add
sub
clc
inc
shl
add
popa
dec
stos
jne
lahf
add
push
or
clc
arpl
jmp
loopne
or
pop
lock
fimul
clc
jg
clc
ins
shl
add
or
add
lock
mov
clc
or
outs
add
or
sbb
xlat
dec
clc
add
push
add
add
xor
lock
loope
sbb
cmp
rol
push
loopne
or
cmp
ds
test
mov
dec
add
psubb
dec
rol
add
daa
add
lods
daa
mov
jg
adc
lock
fiadd
jl
lock
xchg
add
add
sbb
cld
sub
xchg
sbb
add
add
pop
fisttp
aad
aam
jmp
loopne
add
jbe
shr
inc
out
add
sbb
and
push
add
add
sbb
add
add
test
add
dec
sub
cld
cwde
scas
lock
sbb
jl
lock
lahf
add
push
pushf
call
add
cli
imul
clc
or
out
aas
inc
ror
or
inc
add
pop
js
add
or
imul
add
ds
and
pop
fisubr
popa
sar
lahf
add
and
mov
aas
loopne
jne
lahf
push
cld
sbb
cmc
int
add
push
add
pop
cld
cmp
stos
or
sbb
add
aas
loopne
sbb
cld
ss
sbb
adc
fisttp
add
test
scas
add
inc
or
sbb
push
add
clc
adc
das
add
dec
aaa
clc
nop
dec
hlt
adc
adc
lock
cmp
push
fwait
cmp
jl
add
dec
loopne
adc
jns
pop
loopne
lahf
or
or
inc
mov
mov
js
loop
(bad)
not
mov
mov
idiv
mov
jge
out
gs
out
inc
mov
js
loope
add
aaa
js
jecxz
sbb
mov
js
fimul
sub
fwait
ret
faddp
js
jecxz
xchg
and
mov
jecxz
adc
pop
mov
add
jb
js
loopne
mov
fsubrp
icebp
jle
imul
jno
das
loop
test
or
aas
test
cmp
sub
mov
clc
ins
mov
idiv
pop
rol
push
sar
addr16
les
out
daa
js
ret
or
frstor
mov
addr16
push
(bad)
sti
scas
retf
icebp
ds
xor
sti
push
inc
lahf
(bad)
jnp
out
pop
js
adc
add
add
xor
ds
div
pop
push
mov
jmp
aas
lods
daa
mov
mov
mov
(bad)
fidiv
add
push
fimul
icebp
fimul
icebp
jle
ja
fwait
leave
jecxz
adc
push
fs
lock
ret
jnp
add
pop
icebp
ds
adc
mov
mov
cmp
dec
loop
xor
fidivr
je
(bad)
sti
and
iret
lock
ret
add
call
clc
adc
add
popa
shr
fiadd
jl
lock
(bad)
leave
into
add
jge
push
aaa
sub
jle
lock
shl
add
scas
add
jl
loopne
cmc
inc
jg
clc
pop
rcl
aas
or
imul
add
add
sub
call
or
push
loopne
add
or
sti
xchg
fwait
and
and
xchg
or
or
add
lock
or
jle
lock
and
sbb
adc
ror
lock
rcr
push
push
lock
cmp
xchg
add
dec
ret
ds
clc
imul
add
loope
sbb
stos
aaa
cli
adc
dec
lahf
lock
(bad)
cmc
fs
cld
push
jne
jg
cld
inc
in
fwait
imul
jle
dec
clc
ss
mov
clc
mov
ds
daa
mov
jle
ja
and
shr
or
and
iret
add
jg
clc
sbb
cmps
hlt
fs
js
loopne
shl
pop
pop
jl
lock
cld
mov
aas
or
in
adc
add
je
iret
add
lock
lock
das
add
sbb
xor
adc
dec
add
lock
pop
add
cmp
scas
adc
daa
cli
pop
shl
jle
lock
clc
dec
shl
mov
addr16
dec
ror
jb
loopne
or
ds
ds
rol
mov
(bad)
adc
pop
cmp
daa
add
clc
or
pop
or
add
jae
pop
pop
jl
lock
and
or
(bad)
push
gs
add
inc
shl
rcl
stos
push
cmp
daa
push
push
jnp
clc
adc
rol
loopne
add
sbb
mov
sbb
xor
add
clc
popa
add
pop
mov
addr16
test
push
icebp
pop
(bad)
sti
scas
ds
js
lds
out
inc
mov
div
ficom
clc
cwde
push
dec
push
lock
idiv
mov
jns
lock
push
lock
fdivp
js
ret
sti
and
mov
ror
mov
not
pop
imul
out
lds
out
sti
js
loope
xor
mov
shr
cmp
jle
imul
pop
icebp
mov
ret
fadd
fidiv
js
sar
cmps
rcr
or
add
push
out
add
out
out
sbb
push
fisubr
in
mov
or
ror
inc
outs
jge
jae
pop
cdq
and
(bad)
mul
add
(bad)
fsubrp
inc
aas
mov
jle
mov
iret
adc
push
fisub
push
or
dec
add
dec
rcr
cld
push
ficom
sti
push
fisubr
add
pop
jg
xchg
js
sar
cmp
lds
out
ret
js
ret
imul
mul
sti
xor
jne
fild
fisub
xchg
push
shl
lock
sub
icebp
pop
sar
ficom
pop
sar
fisubr
pop
(bad)
jnp
out
mov
push
out
add
adc
push
push
lods
mov
fstp
fwait
and
ret
js
xor
inc
(bad)
icebp
mov
lock
pop
add
add
jns
push
add
or
dec
cmp
pop
cmp
pop
call
xchg
jg
ret
mov
or
loopne
sbb
cmp
or
clc
xor
std
sbb
jl
lock
or
pop
add
ret
mov
popf
call
cld
push
loopne
or
pop
lock
or
lock
test
repz
jl
sbb
pop
jl
lock
loopne
add
jbe
ror
shr
jno
add
test
in
jmp
add
xchg
das
sbb
daa
add
pop
jl
lock
pushf
call
jl
loopne
add
aas
dec
shr
fiadd
cld
mov
out
add
das
add
push
lock
ror
arpl
xchg
clc
push
add
or
and
adc
cmp
out
jmp
xor
jg
clc
and
daa
push
jne
add
xor
iret
add
dec
rcr
stos
add
invlpg
xchg
or
cmp
adc
cmp
das
jo
lahf
add
lar
lock
ror
dec
lock
shr
lock
jl
xor
or
sub
aas
or
lock
ds
clc
sub
mov
inc
outs
hlt
xchg
gs
shr
xor
add
jno
xchg
add
add
jns
mov
das
add
sti
add
cld
and
cli
xor
add
add
or
gs
fisttp
clc
xor
call
loopne
add
hlt
(bad)
daa
push
add
adc
mov
cmp
add
sbb
jns
iret
add
inc
dec
jbe
sbb
or
mov
das
add
pop
xor
cmp
clc
ins
ror
inc
cmp
call
lock
add
pop
rcr
fiadd
cld
cs
clc
sbb
add
sar
fidiv
cld
sbb
(bad)
pop
sar
mov
mov
test
fsubrp
adc
sbb
jnp
cmp
mov
out
and
xor
jle
test
ja
out
ret
js
push
arpl
cmps
js
es
mov
jnp
out
add
and
dec
js
(bad)
sti
sub
call
aas
ret
sbb
sar
sar
out
(bad)
jo
push
mov
jns
push
sub
mov
or
and
dec
mov
imul
mov
test
sti
mov
pop
les
out
xchg
js
adc
pop
adc
(bad)
test
push
out
xchg
dec
loop
xor
mov
(bad)
loopne
icebp
out
loopne
xor
mov
mov
push
js
ret
sti
xor
xchg
js
(bad)
lahf
pushf
or
gs
(bad)
lock
out
sbb
ds
sbb
jnp
out
mov
sar
imul
jnp
out
ja
mov
mov
clc
imul
sbb
jge
out
cmp
gs
out
and
mov
dec
call
push
js
loopne
sbb
cmp
mov
lahf
test
add
stos
cmp
cmp
call
lock
scas
nop
lock
rcr
loopne
add
cld
sbb
fild
clc
and
xchg
add
clc
mov
or
std
or
inc
cli
or
daa
add
vmread
mov
shl
mov
stos
outs
adc
clc
cmp
cmps
add
pop
clc
arpl
add
lock
jae
iret
add
or
push
sar
dec
test
mov
out
add
dec
ret
mov
shr
or
dec
shr
mov
test
loopne
or
pop
lock
das
jmp
iret
add
add
and
mov
rcr
pop
in
add
add
add
or
sub
iret
add
clc
or
add
lock
cmp
jl
lock
inc
push
jbe
fs
clc
add
xlat
add
sub
jg
clc
adc
iret
add
add
add
loopne
adc
push
clc
or
mov
fisttp
clc
xor
mov
pop
cmc
fs
mov
inc
rcr
lock
mov
add
sbb
jl
lock
add
aas
mov
test
into
add
jno
cmps
or
sub
xchg
add
clc
xor
cmps
add
dec
shr
retf
clc
cmp
jle
lock
or
inc
hlt
mul
clc
and
mov
push
lock
sbb
push
cld
push
loopne
cmp
push
add
add
cwde
fsubrp
ltr
add
fld
sbb
sti
or
adc
mov
das
add
lock
add
sbb
mov
pop
add
mov
mov
jle
lock
or
inc
ror
jle
lock
lock
xchg
add
pop
cli
xchg
or
(bad)
push
mov
pop
jl
lock
sbb
aas
ret
jnp
cli
data16
cmp
lahf
loopne
mov
dec
mov
neg
(bad)
lock
push
ror
dec
outs
or
push
call
xchg
or
and
iret
push
push
fwait
(bad)
stos
push
js
jns
fs
dec
clc
and
aas
mov
inc
mov
inc
mov
mov
call
out
(bad)
daa
neg
jecxz
lahf
jmp
outs
jecxz
mov
xor
pop
mov
inc
ror
mov
fild
test
gs
out
imul
call
clc
cmp
pop
push
je
xor
fisubr
lock
shl
sub
sti
cmp
es
js
and
iret
hlt
daa
out
loopne
xor
mov
mul
cmp
(bad)
lock
lds
(bad)
cld
fs
rcr
icebp
pop
es
js
jecxz
push
out
stos
js
sar
ffreep
sti
sbb
pop
js
jmp
fwait
js
ret
mov
jge
out
adc
xor
fidiv
icebp
fisub
(bad)
push
out
dec
mov
dec
hlt
jge
out
shl
lock
sar
fisub
js
adc
out
clc
cmp
cmp
jnp
out
jge
fbld
loopne
js
sar
add
push
inc
jbe
add
adc
inc
mov
push
lock
jl
lock
xchg
or
loopne
add
ret
aas
or
cwde
ror
jle
lock
xchg
fisttp
clc
and
mov
mov
add
lock
out
add
out
gs
rcl
popf
call
cmps
fsubr
ds
lods
mov
outs
push
add
add
adc
lock
lock
shr
lock
outs
test
mov
ret
fild
clc
lods
scas
lock
fsubrp
ins
aam
sbb
mov
pop
push
aad
cmp
iret
push
jne
or
sub
repz
jle
lock
add
loopne
add
aas
pop
clc
nop
sbb
sbb
xlat
sbb
add
jl
loopne
push
jne
mov
iret
add
js
test
sub
lock
jle
lock
xor
add
dec
rcl
cmp
(bad)
aad
push
add
adc
(bad)
hlt
daa
ja
clc
imul
ds
clc
and
jg
mov
add
cmps
dec
js
mov
add
xor
xchg
cmp
jl
lock
add
or
sbb
inc
ror
dec
into
rcr
xor
inc
shl
add
add
pop
add
add
add
sub
pop
ds
daa
loopne
or
add
stos
add
mov
arpl
dec
cs
cmp
jg
clc
jge
scas
lods
add
add
pop
sar
loopne
add
pop
add
add
test
push
clc
sub
test
(bad)
lock
inc
(bad)
sti
call
mov
stos
stos
int
jle
lock
call
mov
lea
dec
lock
dec
add
add
inc
shr
jle
lock
lock
mov
jle
dec
jbe
sar
mov
addr16
mov
outs
push
push
pop
(bad)
sti
cmp
mov
or
addr16
jecxz
mov
rcr
dec
sbb
push
mov
sti
mov
dec
adc
inc
js
aaa
js
push
ror
lock
aas
cmp
jle
ja
mov
loopne
lock
and
cmps
aad
arpl
xchg
ret
jnp
sub
jnp
push
ret
jge
out
jge
hlt
leave
movs
icebp
jle
imul
push
lock
push
icebp
jle
test
mov
neg
add
or
pop
mov
ja
adc
loopne
js
les
daa
lock
cmp
mov
ins
cmps
mov
add
das
icebp
out
loopne
xor
lahf
lds
sahf
in
lods
ins
add
retf
stos
stos
mov
sbb
fisub
sahf
vmovsd
outs
cmp
cmps
lock
mov
(bad)
test
test
and
xchg
jb
mov
mov
ret
fdivp
sbb
(bad)
div
sti
or
sub
sub
(bad)
sti
sbb
push
icebp
jle
not
jecxz
mov
adc
addr16
arpl
add
adc
sub
ret
fdivp
sbb
iret
lock
and
pop
lock
push
xchg
fnsave
fiadd
test
push
xchg
test
add
add
pop
rcr
mov
scas
add
lock
add
rol
clc
xor
inc
shl
(bad)
push
jecxz
pop
nop
lock
sbb
cmps
jge
out
add
(bad)
ins
sub
loopne
add
pop
add
sbb
in
mov
ret
clc
xor
add
xor
mov
jbe
inc
out
pop
cld
or
in
lea
dec
ret
lock
or
or
add
(bad)
cmp
add
sbb
pop
out
add
inc
sub
mov
add
lock
leave
jne
mov
fild
ds
clc
or
inc
or
add
invlpg
or
cli
xchg
mov
mov
pop
add
shl
jg
clc
imul
add
std
sub
dec
into
sahf
in
mov
mov
test
pop
jle
daa
cli
xor
outs
add
push
lock
shl
ds
add
pop
lock
mov
mov
rol
lock
sub
lods
test
add
push
js
add
lock
or
or
or
pushf
call
add
add
gs
pop
cmp
mov
inc
adc
sbb
add
add
clc
sub
in
adc
inc
sub
fisubr
pop
es
je
mov
fcomp
cmps
xor
push
add
daa
mov
js
lock
ds
sbb
outs
(bad)
imul
push
sar
fwait
sbb
jl
lock
add
add
xor
ror
fimul
clc
xor
jg
clc
adc
ds
rcl
loopne
stos
stos
mov
aaa
sti
cmp
sub
xchg
outs
or
cmp
rcl
jg
clc
inc
add
add
add
jnp
aaa
jae
div
cmps
lock
ret
outs
lock
(bad)
push
out
imul
mov
ds
xchg
sahf
in
push
icebp
pop
sar
das
lock
sar
ja
aaa
jae
(bad)
fmul
(bad)
mov
rcr
ds
ins
mov
xor
add
xchg
xor
aas
test
push
add
xor
and
stos
mov
adc
mov
leave
stc
lock
js
ror
push
dec
loop
pop
out
popa
mov
sti
mov
or
adc
xchg
add
xor
lahf
and
psllw
mov
mov
and
out
push
out
or
dec
loope
add
sbb
xor
aaa
in
cmps
inc
clc
or
lahf
push
arpl
movs
stos
push
js
sar
sbb
and
sbb
cld
push
and
add
std
js
loope
add
out
aam
aas
(bad)
idiv
mov
jnp
lea
jnp
out
mov
loop
sar
stos
push
js
inc
clc
cmp
pop
inc
fimul
ret
js
jecxz
or
or
leave
sub
inc
mov
ret
(bad)
sti
push
fidiv
mov
js
(bad)
sti
sbb
sub
(bad)
icebp
sahf
ret
sti
sbb
and
jge
pminub
pop
lock
(bad)
dec
clc
sbb
daa
push
inc
lahf
add
stos
sub
lock
jge
iret
xchg
lock
or
adc
lock
jl
lock
pop
int3
xchg
lock
outs
adc
sbb
dec
stos
mov
movs
(bad)
fsubr
fst
clc
or
pop
mov
rcr
mov
jg
clc
adc
pop
add
clc
pop
ror
jle
test
add
lock
mov
add
scas
add
pop
clc
jae
cmps
dec
clc
push
rcr
fiadd
cld
adc
out
lahf
add
sbb
daa
add
cld
and
jg
js
lock
mov
cmp
daa
mov
jle
popf
lock
sbb
sbb
push
add
popf
lock
inc
aas
push
clc
pop
shl
push
lock
dec
hlt
xor
outs
adc
push
shr
(bad)
push
lea
adc
pop
add
adc
imul
jle
lea
or
cs
jae
ds
add
out
xor
mov
scas
lock
fmulp
push
leave
cs
sar
dec
add
scas
dec
clc
push
shl
mov
lock
or
inc
sbb
inc
jg
mov
jl
popf
lock
xor
add
dec
shl
mov
leave
fldenv
cld
cmp
cmps
add
hlt
jbe
fist
xor
pop
or
and
mov
pop
les
or
imul
dec
add
lock
sub
lock
outs
add
lock
fisub
pop
and
pop
pop
jl
popf
lock
test
cmps
or
rcr
add
xor
sbb
daa
loopne
sbb
jl
or
mov
or
xor
add
push
clc
jnp
pop
add
jmp
sub
test
jle
lock
test
ror
adc
and
mov
iret
add
iret
loop
xor
mov
ficom
lahf
sar
iret
loope
push
out
fnstsw
xlat
xchg
frstor
jle
inc
clc
push
xor
add
retf
test
jl
out
add
jle
out
mul
mul
sahf
in
jb
mov
cdq
cmp
in
(bad)
icebp
sahf
(bad)
sti
push
add
mov
or
outs
icebp
push
push
push
in
out
cmp
fidiv
sbb
xor
fmulp
lock
xor
push
fldcw
jb
js
loope
xor
mov
sbb
cmp
stos
js
sar
mov
and
adc
xchg
icebp
pop
push
and
jg
idiv
in
sub
ret
sti
adc
or
sar
add
jnp
out
pop
mov
aas
js
and
sti
sub
push
icebp
outs
inc
aaa
inc
push
int
jge
sbb
or
mov
jge
out
inc
js
loopne
mov
fisub
sub
jge
out
rcr
push
pop
(bad)
sti
and
jg
mov
movs
add
out
sub
loop
test
push
mov
push
in
cmp
xor
ds
sbb
cmps
icebp
push
les
enter
and
ja
ds
fsubrp
hlt
bound
imul
push
hlt
jecxz
dec
loope
add
(bad)
js
loop
add
cli
(bad)
out
add
fldcw
fisub
mov
cmp
shl
add
sub
mov
das
add
cmps
(bad)
fadd
sbb
jle
sar
cmp
cld
sahf
sahf
in
cs
clc
sbb
psubb
ret
jle
outs
hlt
jecxz
fild
sub
test
add
add
rcr
(bad)
ficomp
in
push
push
imul
mov
out
aas
add
sbb
xchg
add
clc
pop
ror
sbb
push
push
imul
jle
lock
mov
cmp
cmp
push
dec
jbe
or
clc
jg
clc
and
xchg
or
(bad)
adc
ret
add
push
lock
sbb
sbb
call
loopne
xor
(bad)
cmp
call
cmp
out
add
jg
jl
loopne
mov
retf
xor
push
push
pop
add
adc
xlat
imul
lock
cmp
loopne
push
std
daa
sar
pop
lock
pop
and
in
ins
pop
in
inc
add
out
inc
lahf
add
addr16
cmp
cmp
add
rol
and
mov
add
fwait
add
or
iret
sti
movs
cmp
out
and
jg
clc
jg
clc
jg
clc
jg
loope
mov
fisub
dec
mov
fiadd
test
mov
pop
mov
jl
cmps
push
ja
mov
add
push
pushf
call
cld
or
inc
adc
add
aaa
ss
adc
push
ror
add
imul
xor
lock
sub
daa
cli
add
pop
cmp
xchg
out
add
or
sub
jle
lock
xchg
mov
inc
pushf
call
cld
sbb
inc
add
cld
cmp
and
mov
lock
sub
jle
lock
call
out
mov
(bad)
lahf
fcom
add
ds
jnp
ficom
lock
loope
lock
mov
out
lock
idiv
bnd
mul
fiadd
jb
or
mov
sbb
sub
xchg
pop
add
xor
mov
jnp
sbb
add
cmps
js
imul
push
inc
aas
test
pop
add
xor
fidivr
add
out
mov
aad
ret
sbb
jmp
mov
add
movs
popa
mov
mov
test
fwait
imul
mov
rcr
mov
scas
stos
stos
ss
sbb
ret
fisub
lock
aad
fiadd
fisubr
icebp
jle
leave
pop
pop
js
sar
xor
ins
cmc
mov
cmp
test
add
mov
or
(bad)
icebp
mov
cmp
sub
sti
or
jns
pop
icebp
mov
xchg
or
add
add
out
ja
mov
js
ret
jnp
out
sar
rcr
ins
xchg
pop
adc
xor
jle
out
mov
sti
add
cmp
ds
sbb
ret
sti
mov
sbb
cmp
shr
mov
and
test
daa
cli
pop
sar
dec
add
scas
test
daa
loope
push
gs
ret
mov
aas
or
pop
lock
mov
dec
adc
jmp
ds
cmp
cld
cmp
push
or
add
lock
pop
dec
clc
sub
add
inc
xchg
das
in
push
outs
inc
daa
cli
or
xchg
add
or
mov
in
add
add
add
and
out
aas
add
dec
clc
inc
shl
mov
dec
add
leave
pop
pop
sar
pop
add
aaa
xor
pop
shr
pop
jecxz
dec
adc
add
std
and
ret
add
cmp
add
(bad)
xor
and
stos
add
lock
pop
loope
sub
daa
mov
cld
lods
xchg
add
xor
cmps
leave
pop
push
jne
or
push
shl
pop
shl
mov
xchg
aas
stos
mov
push
xchg
pop
or
cmps
or
jle
lock
clc
dec
add
add
inc
lahf
lock
sbb
xchg
or
cmps
push
add
and
add
push
clc
sub
pop
add
or
test
xchg
add
cs
mov
add
sbb
lahf
add
sub
inc
add
and
xor
or
sbb
jecxz
aas
push
clc
test
sub
xchg
cmp
jae
clc
xor
ja
or
xchg
das
mov
aad
aas
add
push
cmp
push
shl
jl
sbb
cld
and
jmp
iret
add
ds
stos
stos
popf
add
cs
sub
hlt
daa
mov
clc
or
cmps
add
or
adc
cmps
add
and
push
sbb
or
jae
aas
add
ds
sbb
mov
fldln2
jecxz
test
jg
sti
cmp
or
adc
inc
stos
mov
jecxz
xchg
or
inc
icebp
ds
mov
cmps
icebp
jle
shl
daa
xchg
sar
push
lock
ja
aas
popa
push
mov
js
lds
cmp
sti
xor
cli
adc
xchg
clc
add
stos
mov
icebp
fimul
lock
les
out
ret
js
jg
xor
mov
or
rol
or
fstp
jmp
into
stos
push
js
(bad)
add
fisubr
js
ret
jnp
aaa
clc
ds
push
push
hlt
fs
hlt
sub
add
cmp
aaa
lock
pop
lock
fsubrp
leave
into
outs
lock
gs
and
out
lock
test
ret
sti
adc
sub
push
and
xchg
adc
sub
mov
sbb
cli
xor
loope
add
add
sti
icebp
mov
dec
or
adc
adc
jnp
int3
scas
cld
push
mov
inc
add
cli
imul
dec
mov
lock
cmp
imul
ins
or
mov
mov
jecxz
xchg
xor
jge
loopne
lock
shl
icebp
pop
sar
push
ficomp
mov
int
loop
mov
ins
stos
or
in
or
add
sbb
jbe
dec
add
add
jmp
mov
cld
sbb
sub
push
adc
iret
ret
push
xor
outs
(bad)
sahf
in
add
out
pop
push
cld
xor
das
add
loope
add
add
cmp
pop
add
gs
jle
test
add
lock
mov
cli
test
retf
gs
clc
mov
inc
mov
ins
repnz
adc
inc
rol
addr16
aaa
aaa
call
(bad)
lods
(bad)
adc
lock
jp
dec
sub
(bad)
ret
mov
daa
add
clc
jge
out
mov
pop
add
xor
jbe
jmp
mov
lea
stos
stos
fwait
jle
ret
jle
lock
loopne
aam
xchg
add
add
rcr
adc
scas
add
clc
dec
shr
ds
cmc
inc
pop
and
inc
xor
jae
dec
add
push
lock
scas
lock
ret
sbb
mov
ds
js
lock
add
inc
outs
hlt
pop
jne
pop
adc
add
mov
pop
(bad)
call
mov
add
or
cmp
cld
adc
inc
hlt
inc
pop
push
cld
mov
push
pop
in
xor
ja
lahf
add
add
leave
cs
clc
inc
rcl
cli
call
pop
rcl
mov
(bad)
mov
lahf
in
xor
lock
call
mov
add
sar
add
jle
pop
mov
mov
lock
push
fwait
add
add
cli
push
rcl
pop
rcr
fnsave
loopne
xor
ds
shl
add
mov
lock
push
jnp
ror
aaa
sbb
lahf
add
out
gs
mov
es
ds
sbb
loopne
hlt
inc
pop
ret
fimul
fsub
inc
or
imul
lock
loope
mov
cs
mov
sbb
loopne
js
(bad)
sti
sub
lahf
(bad)
sti
sub
loopne
xor
loop
add
cmp
push
inc
js
push
ror
out
or
mov
cmp
add
in
xchg
arpl
push
push
fwait
nop
mul
xchg
sahf
and
das
xor
out
jecxz
push
xchg
outs
mov
cli
and
xchg
icebp
ds
cli
sbb
dec
mov
jg
xchg
(bad)
jnp
out
mov
retf
out
daa
js
adc
xlat
sub
mov
iret
cmp
or
pop
add
adc
sub
add
(bad)
sahf
(bad)
fidivr
fnstsw
ret
jnp
out
add
and
stos
stos
mov
inc
clc
pop
dec
mov
fsubp
sbb
(bad)
lock
sub
loop
adc
inc
mov
sub
jge
out
inc
sbb
xor
dec
mov
call
xchg
das
jp
mov
sti
and
retf
cli
xchg
jmp
jnp
sbb
lock
sar
mov
jnp
das
jbe
sbb
repz
adc
xor
scas
xchg
lock
jle
lock
pushf
call
cld
add
out
add
pop
add
psubb
mov
clc
arpl
out
jg
clc
xor
sub
inc
aas
movs
rcl
inc
ror
dec
push
sub
das
xchg
or
mov
add
loope
xchg
das
mov
lods
(bad)
data16
mov
stc
mov
scas
xchg
lock
push
clc
aas
add
mov
or
dec
add
push
dec
js
jl
push
aaa
mul
clc
push
int
sbb
loope
xor
test
push
movs
sbb
ss
jle
add
daa
or
cmp
cmps
add
add
imul
jne
inc
lock
ror
mov
pop
add
push
rcl
clc
add
inc
rcr
inc
lock
push
cld
push
loopne
push
mov
sbb
stos
sub
adc
(bad)
pop
shr
clc
sub
lahf
add
or
jae
clc
sbb
push
loopne
add
scas
dec
clc
pushf
cli
data16
jle
sbb
cmp
or
iret
or
cmp
pop
add
mov
int
add
or
sbb
mov
xor
lods
xor
sub
dec
outs
pop
lock
xchg
or
lidtd
cld
push
loopne
or
or
cmps
aam
push
add
fstp
jne
add
adc
lahf
add
xor
xchg
out
add
jp
jl
daa
jp
aas
adc
loopne
or
loopne
add
ret
pop
aas
shr
scas
imul
fisub
out
lahf
add
mov
in
jb
pop
add
push
loopne
cmp
add
adc
addr16
sbb
mov
pop
jecxz
pop
add
inc
outs
hlt
(bad)
sbb
clc
mov
pop
or
push
mov
pop
lock
popf
cmc
int
add
inc
aaa
fild
(bad)
scas
add
or
add
cli
sbb
pop
adc
sbb
shr
adc
mov
xor
mov
cmp
mov
js
jecxz
xchg
add
mov
inc
call
add
ins
xchg
vcvtsi2sd
cli
cmp
fimul
inc
mov
hlt
idiv
ret
sti
and
pop
and
daa
mov
mov
cdq
push
ror
xor
not
sbb
jns
lea
out
imul
lock
les
out
sbb
loop
mov
fisubr
jnp
(bad)
or
sub
pop
fldlg2
retf
lock
ja
dec
outs
or
fstp
dec
mov
aas
js
stos
xor
cmp
sub
mov
(bad)
push
lds
inc
push
fld
sti
lods
inc
pop
(bad)
push
inc
fild
pop
lea
sti
pop
adc
jno
out
fisubr
scas
loop
mov
sbb
add
mov
lahf
adc
push
faddp
or
cmp
(bad)
sti
cmp
aaa
lock
(bad)
jnp
out
inc
sub
js
es
mov
pop
sar
fisubr
xchg
fucom
aas
mov
out
vmread
sti
xor
xor
es
icebp
inc
lods
sub
arpl
or
and
loope
add
fst
pop
jmp
and
add
pop
cli
xchg
or
jle
mov
inc
in
xchg
mov
clc
and
or
mov
daa
jp
loopne
add
or
adc
outs
xchg
das
jp
idiv
test
clc
jge
das
add
or
sbb
or
sbb
or
dec
or
pop
lock
cld
xor
dec
hlt
fs
leave
pop
jns
(bad)
add
outs
add
retf
call
addr16
pop
push
xchg
popf
int
mov
push
jp
mov
sbb
loopne
add
push
lock
lock
mov
sub
jle
invlpg
psubb
mov
lock
pop
add
pop
loope
shl
jmp
or
inc
ror
jle
lock
loopne
add
outs
add
out
rcr
mov
sub
std
pop
rcr
sub
loopne
add
stos
inc
shr
clc
(bad)
sbb
jp
sbb
mov
sbb
mov
add
es
or
xor
adc
or
rol
pop
cmc
int
mov
mov
jle
gs
inc
fisttp
clc
xor
jle
lock
(bad)
push
jge
push
lock
add
lods
add
sbb
dec
call
out
add
rol
lock
add
xchg
hlt
add
or
or
ret
sbb
(bad)
lock
sbb
shl
imul
pop
cld
or
sbb
ds
scas
xor
sbb
add
push
shr
add
adc
inc
ror
sar
pop
push
jl
lock
(bad)
into
add
lock
or
hlt
jnp
cld
adc
lahf
add
daa
stos
sbb
sti
cmps
inc
pop
in
push
movs
lea
leave
pop
jmp
mov
loopne
aam
xchg
and
outs
cmc
inc
out
and
retf
js
(bad)
sti
cmp
lahf
ret
ficom
(bad)
mov
std
or
sar
inc
(bad)
jno
pop
shl
mov
sbb
sar
xlat
push
das
loop
xchg
xor
jne
cmps
lock
pop
loop
xchg
and
dec
xor
(bad)
repnz
or
dec
rcr
not
out
pop
push
das
loope
pop
out
jae
call
jnp
out
test
push
aam
daa
push
out
mov
(bad)
aas
loope
inc
pop
cli
push
mov
cmp
(bad)
call
lods
fucom
xlat
icebp
pop
shl
dec
mov
stos
stos
fiadd
mov
cmp
sbb
dec
lock
sar
lock
ret
sti
cmp
cmps
lock
and
scas
xor
add
push
cmc
leave
fld
sbb
xlat
jo
jmp
cmp
push
add
xor
outs
push
mov
mov
add
imul
loopne
lock
vcvtsd2si
mov
(bad)
loopne
adc
sub
mov
js
shr
retf
ret
push
sub
int
fisubr
pop
pop
ins
sbb
adc
mov
add
adc
retf
pushf
call
jl
lock
test
jle
mov
loopne
fidiv
arpl
mov
inc
lock
add
or
sub
test
loopne
xor
rol
rcr
int3
and
xchg
pushf
call
(bad)
fmul
fist
lock
lods
adc
pop
add
aas
pop
clc
and
aas
or
sub
add
test
shr
rcr
inc
lock
shr
lods
ss
nop
cmp
mov
lahf
add
sbb
cld
and
dec
sbb
adc
xchg
and
push
loopne
hlt
inc
aas
dec
ror
ficom
retf
jle
lock
out
sar
je
lock
cmp
imul
cmp
sbb
lock
add
xor
sub
push
jbe
shr
lock
xor
movs
std
push
stos
pushf
call
add
dec
ror
push
clc
mov
outs
jge
jecxz
mov
loopne
add
lock
fbstp
mov
loopne
add
add
fist
cmp
add
lock
push
cld
push
loopne
ror
jle
lock
push
lock
sbb
add
sub
mov
mov
jbe
shr
jle
lock
lsl
push
lock
add
sbb
sub
pop
adc
jnp
mov
leave
pop
test
frstor
pop
add
test
fild
and
pop
add
aaa
cmp
je
fwait
inc
aas
or
pop
rol
jg
mov
add
data16
pop
call
add
pushf
mov
pushf
call
clc
xchg
fsubrp
inc
add
(bad)
aad
pop
es
add
jl
sbb
xor
ins
add
dec
lea
sar
mov
mov
mov
ficomp
rcr
mov
sbb
sti
es
add
sub
aaa
lock
push
(bad)
and
ret
sti
or
sub
stos
adc
(bad)
dec
fcom
std
cmps
test
fisttp
mov
push
fdivp
lock
xchg
idiv
hlt
imul
fimul
ffreep
sti
push
fisubr
ja
dec
jge
test
(bad)
ja
fidiv
xor
test
cmp
bnd
idiv
mov
popf
call
call
or
mov
adc
mov
mov
xor
das
jne
not
cli
xor
adc
add
pxor
xchg
cmp
outs
dec
jbe
inc
rol
loopne
cmps
aas
mov
mov
(bad)
ds
cmp
sahf
in
push
cli
sub
lahf
fcom
(bad)
or
or
div
jle
stos
(bad)
mov
add
fcom
fidiv
or
std
fsub
jnp
je
test
dec
dec
mov
fwait
inc
lahf
and
paddq
jnp
imul
(bad)
ficomp
mov
(bad)
sti
and
inc
mov
ins
sti
inc
add
ret
sbb
sub
mov
mov
div
xchg
out
cmp
adc
lods
xor
ss
pop
ret
adc
lock
dec
clc
cmp
inc
mov
(bad)
cli
data16
sbb
pop
add
jnp
fisttp
clc
xor
jnp
js
sar
mov
mov
dec
cmps
push
add
xor
mov
push
or
xor
pop
add
loope
jg
js
loopne
or
jle
lock
clc
xor
fisttp
mov
xchg
jne
(bad)
mov
add
jg
call
call
loopne
or
and
add
loopne
hlt
fs
add
adc
movs
push
aaa
(bad)
aaa
arpl
movs
mov
aam
adc
jl
lock
call
cld
movs
test
das
add
add
mov
aas
add
sti
or
inc
out
add
lock
loopne
xor
cmp
js
loopne
cmp
cld
lea
fld
fsub
addr16
jge
pop
jno
dec
stos
mov
or
add
daa
loopne
xor
sub
lsl
fisub
pop
xor
xor
adc
sbb
jl
inc
pop
fld
leave
and
pop
jecxz
mov
xchg
shr
(bad)
out
add
pop
jl
lock
sbb
add
push
fisttp
adc
adc
push
sub
lods
dec
out
push
lock
add
fldenv
push
dec
hlt
and
into
sahf
in
inc
fsub
jnp
lahf
push
and
scas
dec
js
mov
add
add
out
add
call
or
adc
xlat
add
clc
adc
mov
loopne
cmp
cmps
add
test
aam
ror
xor
js
xchg
cmp
sti
call
int
lahf
fadd
mov
outs
push
xchg
sbb
ror
test
mov
data16
sbb
fcomp
fmulp
js
adc
add
fsub
addr16
outs
or
push
mov
rcr
xchg
sub
sti
sub
jmp
pop
sar
mov
sti
sub
ret
test
jecxz
test
or
cli
add
jge
jg
or
mov
(bad)
test
mov
mov
mov
in
cmp
sti
cmp
inc
loope
test
fisub
js
loop
xchg
add
or
retf
js
shl
push
xlat
dec
js
mov
mov
mov
xor
cmp
dec
mov
and
mov
and
xlat
icebp
pop
sar
fsubrp
lock
imul
add
add
daa
cli
add
xchg
lock
lds
add
test
std
mov
test
std
icebp
add
sub
jge
pop
sar
cmp
xchg
jae
cmp
jge
out
imul
xchg
js
daa
loopne
xor
js
inc
outs
dec
hlt
jno
pop
adc
push
and
retf
inc
pop
mov
push
pop
sbb
scas
cmc
sub
and
add
clc
sub
div
stos
ss
cli
add
add
xor
std
sbb
lea
xor
xchg
push
mov
nop
mov
jb
or
ds
or
pop
dec
clc
ds
mov
retf
or
adc
test
sbb
pop
pushf
call
clc
xor
arpl
sub
add
mov
aas
add
adc
inc
shr
ds
ret
jle
lock
lock
xor
outs
pop
sbb
and
cmp
xlat
cmc
or
cmp
call
ds
cmp
cld
add
stos
call
das
or
rcr
mov
or
xor
sub
out
jg
js
test
add
mov
outs
xchg
sub
pop
push
cld
cmp
push
pop
adc
arpl
lock
pop
add
jle
lock
shr
and
fild
mov
iret
or
jg
loope
mov
dec
pop
adc
js
add
cld
cs
pushf
call
jl
lock
push
add
cmps
adc
add
add
sub
clc
adc
xchg
add
clc
cmp
out
add
jmp
pop
push
arpl
mov
fidiv
(bad)
test
mov
pop
xlat
sub
dec
shr
add
jg
clc
xor
(bad)
xor
rcl
aas
add
jl
lock
clc
fbstp
test
sbb
jl
lock
add
or
jae
cld
mov
fwait
mov
cld
cmp
cwde
(bad)
int
add
hlt
outs
shl
pop
shl
mov
xlat
adc
lahf
add
adc
outs
sar
loopne
xor
lock
inc
fild
clc
ja
out
add
jb
or
jbe
jg
jl
loopne
or
fnstenvw
std
pop
mov
xor
push
out
lahf
lock
adc
outs
lea
add
or
fwait
or
daa
js
loopne
xor
mov
fidivr
pop
aaa
js
mov
and
pop
lock
sar
add
xchg
sahf
in
push
(bad)
mov
mov
inc
loopne
push
out
sbb
mov
mov
xchg
or
out
std
or
mov
loope
add
cmp
ds
or
ds
mov
out
push
je
aaa
clc
sub
cmps
mov
retf
es
push
and
stos
js
sar
sahf
call
call
mov
(bad)
sti
xor
repz
fnsetpm(287
or
daa
addr16
clc
sbb
jnp
shr
xor
(bad)
test
dec
jbe
mov
cmps
rcr
mov
sbb
iret
lock
idiv
inc
out
push
mov
test
jb
mov
jg
std
js
ret
jnp
out
mov
rcr
xchg
popf
pop
out
push
mov
rcl
add
mov
ret
test
test
aad
ror
xor
fisttp
fisubr
clc
or
daa
icebp
out
(bad)
jnp
cmp
jo
pop
out
pop
js
jmp
mov
pop
cs
mov
aam
int
mov
mov
jle
lock
xchg
push
arpl
add
mov
and
add
sbb
cld
xchg
scas
lock
and
or
add
adc
imul
cld
jg
cld
cmp
sbb
xlat
lock
aas
or
mov
jg
clc
sub
fisub
pop
pop
jl
lock
sbb
pop
ins
sbb
and
test
aad
jl
lock
clc
loope
or
mov
push
push
sub
lock
scas
aas
mov
fiadd
jl
lock
pop
pop
in
xor
cli
xor
dec
daa
cli
cmp
into
dec
hlt
daa
call
(bad)
lock
fnstsw
(bad)
or
or
lods
xor
movs
daa
cmp
js
jl
mov
pop
jl
lock
jnp
repz
add
ss
sbb
ret
push
dec
rcr
mov
jle
lock
in
fwait
cdq
add
xchg
xor
mov
or
mov
cmps
std
push
rol
stos
dec
clc
cmp
pop
adc
lock
fiadd
(bad)
push
gs
rol
movs
dec
clc
cmp
mov
loopne
push
push
pop
push
xchg
popf
cmp
lahf
ds
pop
rcr
jmp
fsubr
cli
in
xor
jle
fldcw
pop
ins
inc
add
lock
mov
jbe
or
sbb
xchg
clc
cmp
bound
lock
test
(bad)
sbb
lods
stos
neg
arpl
xor
jnp
pop
es
cmp
mov
out
pop
jl
lock
sbb
xchg
fnstsw
loopne
add
cld
sub
xor
(bad)
mov
mov
cld
sbb
or
push
adc
mov
mov
cmp
sbb
inc
add
adc
fcmovnu
loopne
lock
ret
(bad)
aam
inc
out
ret
lea
jle
rcr
jl
push
mov
fisub
out
loopne
push
push
imul
jp
mov
dec
(bad)
or
push
mov
dec
push
mov
add
out
mov
inc
lahf
lock
(bad)
lock
popa
mov
fucom
and
mov
mov
jle
push
mov
(bad)
idiv
xor
lahf
ret
ficom
jle
dec
aaa
pop
dec
mov
mov
pop
retf
pop
arpl
mov
aas
push
lahf
pushf
or
jl
out
jnp
jl
out
inc
mov
fisub
xor
sub
mov
jge
dec
mov
ja
out
addr16
push
lahf
pop
pop
pop
cli
cmp
ret
cmp
mov
jg
imul
pop
mov
ret
ins
fisttp
adc
mov
adc
scas
ds
push
ret
sti
fist
lock
mov
push
dec
push
or
sbb
enter
sbb
adc
pop
lea
out
jecxz
test
jbe
fucom
ins
jbe
mov
clc
adc
mov
fwait
xor
xchg
mov
into
cli
data16
xor
lock
mov
jle
lock
or
mov
es
ret
fisttp
pop
lock
mov
retf
nop
mov
jb
adc
sbb
sbb
(bad)
fsub
test
push
cmp
clc
fild
jle
lock
sub
add
pushf
call
ret
fdivr
loopne
sub
shl
jg
pop
jbe
shr
stos
adc
lods
aaa
jp
xchg
mov
jle
lock
aas
add
add
pop
add
stos
push
aaa
mov
out
(bad)
sbb
add
imul
cmp
inc
mov
loopne
add
shr
pop
hlt
fs
add
mov
loope
pop
lods
dec
mov
or
or
ret
add
pop
popf
lock
add
movs
mov
jp
pop
and
add
cmp
jnp
inc
clc
adc
cmp
in
dec
cs
clc
dec
add
lock
gs
es
cmps
mov
xchg
add
or
aas
push
clc
sub
adc
sbb
cwde
cmp
dec
sbb
cld
sbb
jae
call
add
mov
pop
jg
cs
out
add
add
sub
jg
lock
outs
pop
lock
daa
or
xor
(bad)
push
lock
iret
stos
lods
mov
mov
call
clc
sbb
(bad)
push
shr
mov
ss
test
adc
es
xor
fiadd
and
cld
lea
fldcw
dec
add
pop
js
jl
add
cmp
push
aad
add
or
test
shr
jle
lock
mov
xchg
lock
mov
fbld
loopne
push
fst
ins
inc
or
dec
out
sti
js
jecxz
dec
ret
push
lock
out
push
aad
mov
std
inc
sbb
jb
mov
mov
lock
rcl
push
push
ins
push
out
push
pop
and
loopne
inc
jg
adc
push
fisubr
or
dec
lock
dec
push
std
pushf
mov
inc
jg
ja
mov
sar
mul
cmp
mov
cld
mov
pop
and
dec
outs
dec
mov
scas
or
cmp
sbb
jge
lea
cmp
jle
out
inc
mov
push
mov
mov
xchg
das
ins
pop
lods
cmp
mov
add
outs
or
aam
jmp
jge
out
sti
add
or
mov
pop
loope
pop
(bad)
sti
fisubr
aad
mov
and
scas
lock
test
loopne
js
aam
test
(bad)
sub
sti
icebp
sahf
ret
sti
sub
arpl
adc
ret
js
shl
fist
ins
dec
hlt
rcr
jecxz
push
imul
outs
lock
ret
push
hlt
mov
jp
out
sub
inc
mov
sbb
sar
fimul
jge
sbb
gs
dec
ror
mov
out
pop
push
lock
and
ins
and
xor
shl
int
add
test
mov
pop
or
mov
jl
push
jbe
push
mov
pop
add
adc
sbb
popa
ror
retf
in
ins
mov
in
push
outs
pop
lock
hlt
or
mov
out
outs
push
jbe
daa
pop
fdiv
lods
lahf
lock
add
cmp
aas
add
cmp
pop
aad
dec
xchg
das
or
aas
add
sub
dec
dec
clc
cmp
cmps
cmc
or
xchg
lock
jbe
test
out
push
ror
xor
scas
mov
xor
test
loopne
rcr
cwde
or
push
sub
ins
arpl
aaa
jae
aas
cmp
pop
cmp
clc
sbb
cmps
add
jge
sti
data16
or
pop
rol
add
std
adc
mov
lahf
add
inc
dec
jbe
or
jle
cmp
jl
lock
sub
add
fnstsw
fist
in
add
out
pop
aad
mov
fsubrp
add
lock
fwait
leave
add
or
ds
clc
jle
lahf
mov
push
mul
data16
rcr
mov
(bad)
in
add
clc
push
std
leave
sub
cld
add
push
lock
sti
add
mov
pop
or
gs
add
cmp
or
inc
shl
lock
sub
mov
ret
jns
push
add
outs
into
add
sbb
add
sbb
mov
jl
lock
xor
sub
pop
add
or
dec
shl
mov
outs
rcl
daa
mov
mov
aas
add
add
sub
scas
inc
dec
jbe
sar
jl
loopne
add
or
dec
add
call
std
les
sub
fild
aaa
loopne
icebp
dec
mov
inc
aas
adc
mov
sub
ins
xchg
popf
pxor
in
xchg
call
sti
sub
cmp
(bad)
lahf
pushf
cmc
leave
fnstenv
push
outs
lock
(bad)
adc
std
ficom
pop
xchg
out
call
dec
hlt
or
mov
jg
mov
or
sbb
dec
cmp
xlat
jecxz
pop
add
jecxz
sbb
(bad)
push
out
das
icebp
(bad)
xchg
cmp
mov
pop
adc
outs
lock
mov
jp
(bad)
fisub
xchg
icebp
sahf
and
pop
icebp
mov
push
ret
mov
adc
sub
mov
sub
jne
pavgw
push
jbe
js
push
out
or
mov
jg
neg
mov
add
jnp
aaa
loopne
mov
or
out
icebp
(bad)
xchg
cmp
aaa
js
xor
daa
mov
shl
std
and
or
or
lahf
sub
jmp
(bad)
cmp
mov
jg
neg
mov
pop
loopne
push
out
mov
(bad)
cdq
(bad)
in
lock
cmp
mov
sti
or
neg
mov
(bad)
sti
js
sar
xchg
rcl
loope
jnp
mov
inc
aas
ret
jnp
ficomp
lock
(bad)
jge
xlat
enter
mov
jmp
sar
not
cld
idiv
imul
add
cmps
sub
add
adc
xlat
repz
pop
add
mov
pop
jl
loopne
add
sub
jnp
mov
out
dec
clc
push
sar
xchg
sub
add
test
jne
call
sbb
sub
jg
mov
add
adc
das
add
or
dec
add
adc
cmc
sub
sar
cli
cmp
jg
clc
push
rcl
(bad)
pop
or
das
add
inc
sub
jmp
(bad)
cmp
xchg
clc
jp
mov
xlat
sub
jmp
(bad)
cmp
pop
clc
outs
dec
clc
push
cmp
lock
add
clc
scas
add
add
outs
add
sbb
cmc
jp
stos
add
test
jg
mov
scas
add
dec
shl
(bad)
cmp
add
push
sar
push
shl
add
jmp
out
add
outs
xor
into
add
jno
mov
add
sub
sbb
mov
jp
mov
loopne
add
loopne
pop
and
cld
adc
(bad)
aad
mov
mov
adc
cmps
add
in
add
pop
jl
jg
daa
add
push
jg
ds
add
outs
test
outs
push
lock
adc
jp
pop
imul
xchg
xor
add
jae
pop
shl
mov
cmp
loopne
xor
sbb
imul
psubb
jle
dec
jbe
jmp
punpckhwd
dec
mov
sub
dec
xor
js
pop
cdq
add
add
(bad)
aam
jg
clc
adc
das
loopne
fsub
das
add
scas
leave
pop
xor
pop
add
out
add
or
sub
jge
lahf
add
hlt
adc
sbb
daa
push
xor
(bad)
mov
loopne
cmp
inc
mov
pop
add
out
cmp
pop
push
je
cmps
daa
cli
jge
lar
pop
clc
add
scas
push
arpl
adc
jnp
out
mov
ret
ss
outs
or
push
ficom
js
imul
adc
jge
jg
jnp
push
ret
jle
lea
out
mov
push
aam
jmp
cmp
mov
(bad)
sti
adc
sbb
add
add
lods
xor
imul
sbb
sti
and
pop
jp
pop
sar
sub
int
ficomp
inc
lods
lahf
fadd
sti
fisubr
js
ret
jnp
out
sub
addr16
(bad)
fisubr
jp
repz
movs
inc
clc
cmp
sar
cmp
loope
sahf
sbb
ret
js
lock
sar
and
ins
std
test
out
idiv
(bad)
fisubr
aam
ficom
mov
retf
clc
icebp
out
shl
mov
push
fldenv
leave
add
out
(bad)
sti
cmp
inc
clc
cmp
in
push
aas
movs
std
push
xlat
fidivr
icebp
outs
or
sbb
sbb
xchg
pop
(bad)
fisub
jle
rcl
ds
jne
leave
fnstenv
jmp
mov
pop
(bad)
or
mov
xchg
sbb
cmp
std
pop
mov
mov
mov
pop
(bad)
cmp
lea
xchg
dec
mov
ja
adc
ds
rcr
fnstsw
ficom
pop
lahf
mov
mov
hlt
cs
inc
lock
retf
lods
adc
push
lea
(bad)
outs
add
mov
stos
dec
xchg
lock
iret
test
jg
pop
jbe
test
mov
and
and
das
xor
lock
setb
fstp
imul
mov
pop
add
add
std
xor
mov
cmps
mov
mov
jle
push
jbe
or
mov
lock
addr16
imul
xchg
add
cmps
std
push
popa
ror
or
or
pop
xchg
lock
retf
push
lock
mov
mov
fs
add
xor
lods
xor
lock
or
pop
lods
std
leave
and
test
rcr
mov
test
lock
call
mov
jae
dec
add
mov
and
mov
pop
aas
xchg
add
inc
mov
pop
add
add
inc
mov
retf
out
add
lock
pop
push
sti
or
xor
ss
sahf
sub
sbb
inc
mov
jae
nop
or
lock
mov
jl
loopne
add
jl
loopne
xor
fimul
iret
add
inc
cmp
lea
ss
or
or
pop
je
mov
sbb
sbb
cld
mov
retf
lock
cmp
test
aaa
ss
(bad)
in
adc
inc
mov
sub
mov
scas
daa
mov
shr
lock
lea
aaa
arpl
addr16
mov
out
push
arpl
ds
cmc
inc
fild
xlat
add
push
xor
mov
jl
loopne
sub
push
clc
ss
(bad)
push
cli
xchg
retf
add
daa
cli
jnp
jle
lock
leave
fnstcw
or
jge
inc
add
loopne
push
jne
push
sar
fisubr
ret
js
loope
mov
out
jns
stos
mov
mov
sub
inc
add
out
popa
mov
dec
xchg
das
ins
std
les
xor
loope
inc
shl
jle
ror
adc
sbb
fld
daa
fidivr
fcomi
dec
adc
fcomi
fisub
mov
(bad)
mov
push
(bad)
xchg
fst
lods
sub
mov
bound
in
dec
outs
adc
mov
into
test
ficomp
das
or
jbe
ja
std
add
sbb
fisubr
cli
mov
sti
or
sub
mov
std
pop
loope
(bad)
mul
aad
icebp
fimul
shl
std
push
js
and
aas
loopne
add
outs
mov
jmp
xchg
icebp
mov
out
aad
mov
add
push
out
aaa
js
sar
cmp
aad
test
clc
or
out
lods
mov
rol
mov
mov
js
jecxz
add
cmp
jle
ror
cmp
not
lock
ficom
(bad)
pop
lahf
fsubr
fisubr
imul
dec
into
mov
ins
and
push
mov
js
ret
out
arpl
(bad)
mov
js
(bad)
sbb
ins
js
xor
dec
ret
xor
cmps
push
pop
ret
clc
fild
jle
sub
mov
mov
ins
sbb
cld
lods
push
ret
mov
loopne
sub
push
leave
push
shl
mov
sbb
mov
bound
lock
jge
fild
(bad)
sahf
test
lods
jmp
hlt
ret
pop
aas
xchg
add
lock
neg
jnp
out
add
inc
sar
fimul
xchg
lock
fwait
scas
lock
fimul
add
outs
add
out
adc
mov
jne
fld
add
add
sbb
pop
mov
xor
scas
mov
jno
add
or
push
cmp
cwde
adc
xchg
jae
fild
jl
lock
lar
or
mov
push
(bad)
(bad)
adc
mov
mov
loopne
add
add
add
and
arpl
ror
mov
xlat
jle
stos
stos
outs
lods
retf
inc
fstp
pop
sar
cmp
pop
cld
and
lahf
push
cld
cmp
out
jge
jle
push
lock
ret
cmp
loopne
sbb
rcr
jle
add
and
aam
lahf
add
jb
outs
adc
loopne
add
mov
add
push
lock
xchg
cmp
jl
push
ret
aas
add
adc
(bad)
lahf
pop
mov
(bad)
in
add
das
rcr
arpl
or
jge
pop
(bad)
das
add
daa
sbb
pop
cmc
leave
pop
shl
mov
jge
fld
lock
add
push
sbb
jl
loopne
add
add
jecxz
call
daa
and
sbb
jl
lock
lock
sbb
mov
ins
mov
mov
mov
pop
out
xchg
sub
aad
ja
test
loopne
icebp
out
loopne
les
cmp
mov
jle
mov
(bad)
test
cdq
push
mov
test
pop
pushf
jecxz
inc
jmp
(bad)
or
xor
(bad)
(bad)
dec
dec
loope
adc
push
push
jnp
div
lods
test
loop
inc
sub
stos
call
fidiv
cmc
fs
xor
mov
daa
cmp
mov
test
out
inc
mov
sbb
pop
push
fcmovne
cmp
stos
inc
clc
add
pop
(bad)
jnp
out
cmp
jge
gs
jg
rcl
mov
out
inc
mov
mov
out
push
in
xchg
jp
sti
cmp
cli
outs
lods
test
jnp
add
xor
mov
sbb
pop
add
gs
sub
daa
loopne
mov
push
aas
fiadd
lock
shl
adc
jecxz
dec
jecxz
xchg
sbb
lahf
jno
pop
rcr
xor
pop
js
pop
icebp
jle
inc
js
ds
test
out
out
mov
scas
adc
mov
push
out
xor
(bad)
dec
clc
ds
leave
pop
mov
add
ds
mov
loope
xor
mov
jle
lock
shl
add
add
imul
adc
add
or
(bad)
jne
lahf
add
cdq
cmp
aaa
add
add
outs
popf
lock
shl
inc
or
or
cmp
arpl
lahf
lock
out
js
jne
popf
lock
add
and
arpl
xchg
jmp
imul
jmp
jl
or
clc
push
lods
test
rcr
lods
jne
jmp
cmp
int
add
clc
pop
add
push
jl
loopne
pushf
call
lock
add
test
mov
pop
es
repnz
loopne
or
movs
push
inc
dec
add
pop
adc
dec
rcr
push
sbb
mov
lock
shl
loopne
add
ins
popf
lock
sbb
rcr
arpl
add
inc
add
cld
xor
mov
sbb
mov
cmp
cmp
pop
mov
adc
mov
fwait
gs
clc
sub
(bad)
cmp
outs
cmc
daa
pop
add
adc
out
add
xlat
daa
mov
jle
lock
cmp
das
cmps
adc
add
out
scas
add
lock
push
gs
or
sbb
sbb
push
add
jl
lock
out
push
ret
push
cmp
mov
push
popf
and
ja
lahf
add
sbb
jb
sbb
jl
lock
inc
outs
dec
jbe
add
lock
or
xor
aaa
add
add
dec
in
mov
mov
mov
(bad)
push
lock
lahf
add
push
loopne
add
clc
pop
ins
mov
jge
xchg
jmp
add
add
xchg
cmp
cld
cmp
pop
hlt
add
sub
jg
sub
out
push
fidiv
lock
scas
sbb
jnp
lahf
lock
or
xor
mov
in
cli
lock
sbb
in
outs
sbb
js
adc
std
jp
mov
js
clc
jno
ret
out
(bad)
sti
xor
adc
and
push
sbb
icebp
jle
test
outs
push
arpl
test
out
daa
ficom
ins
sti
movs
outs
lock
jp
daa
mov
mov
jle
rcr
and
js
sar
add
xor
aam
dec
mov
cld
out
adc
mov
loopne
icebp
jle
sub
cmp
test
loopne
lahf
or
std
add
push
je
push
jbe
mov
xor
cmc
pop
lahf
sar
fisubr
or
sub
mov
and
ins
lahf
pop
(bad)
(bad)
loopne
js
ret
jnp
or
mov
out
and
mov
sti
cmps
(bad)
loopne
loop
add
lahf
or
(bad)
js
adc
outs
mov
and
fbld
fnstsw
and
cmp
inc
add
xor
mov
js
es
icebp
fiadd
add
scas
icebp
fisub
out
(bad)
jnp
aaa
clc
push
js
xchg
aas
sar
test
imul
hlt
sbb
lods
aas
cmp
cmp
lea
sub
ror
aas
lods
jno
pop
in
fwait
mov
ror
rcr
lock
into
cmps
push
aaa
cs
dec
and
pavgb
add
jge
or
jl
mov
mov
or
test
sbb
pop
jne
sti
sbb
pop
clc
dec
or
out
cwde
sub
lahf
lock
mov
mov
repnz
lea
cmp
sub
sbb
call
loopne
add
clc
aaa
cmp
jp
xlat
add
sub
pop
psubb
dec
hlt
scas
add
push
lock
or
pop
cmp
xlat
add
call
lock
xchg
pushf
call
loopne
add
test
cmp
(bad)
test
cmp
mov
xlat
add
pop
iret
mov
inc
lock
add
add
scas
add
clc
push
sar
adc
add
sub
xlat
adc
xor
jp
ret
mov
add
mov
lock
sbb
in
inc
mov
out
out
add
pop
or
add
add
fisttp
pop
adc
inc
shr
inc
outs
sti
movs
retf
ror
mov
add
and
aaa
mov
jbe
lock
sbb
or
ss
div
pop
aam
mov
(bad)
fimul
mov
(bad)
adc
adc
pop
(bad)
mov
ss
fisubr
or
mov
push
pop
add
or
daa
or
sub
pop
add
add
xchg
fsubrp
xchg
add
rcr
mov
fisttp
imul
ret
push
retf
lahf
lock
cli
xchg
mov
mov
cmp
sbb
adc
dec
dec
jbe
rol
clc
jle
shl
clc
or
xchg
add
add
xchg
push
arpl
or
pop
mov
aad
popf
xor
(bad)
div
mov
in
outs
or
adc
sbb
outs
stos
call
xor
pop
mov
js
push
jge
lea
loopne
lock
mov
shl
mov
sar
and
outs
adc
push
mov
sbb
icebp
mov
mov
scas
mov
jbe
mov
(bad)
div
addr16
mov
ja
ins
xchg
sar
sbb
in
inc
mov
dec
into
sahf
call
dec
into
push
xchg
mov
jnp
add
mov
add
jge
out
loope
mov
add
fidivr
das
loope
push
xchg
das
sar
jno
(bad)
loopne
iret
or
sbb
js
sub
dec
lock
stos
push
ret
sahf
aam
stos
xor
mov
cmp
push
push
rcr
jge
or
outs
lahf
jo
das
test
js
cmp
pop
loopne
sbb
ins
and
fs
test
fmulp
lock
(bad)
mov
lock
jecxz
push
out
cs
lahf
pop
push
out
stos
js
shl
mov
(bad)
add
mov
int3
add
sbb
aaa
sbb
loope
hlt
sub
mov
(bad)
or
loopne
es
add
push
clc
data16
jnp
mov
mov
outs
pop
cld
das
xor
fcom
ja
cld
cmp
push
sub
cld
scas
xchg
jle
cmp
lahf
pop
jl
lock
pop
ret
sub
lods
sbb
outs
loopne
outs
push
ret
sub
iret
mov
imul
rcr
fcom
cld
lods
dec
hlt
mov
call
ret
and
fcomip
mov
daa
mov
jl
or
retf
push
sbb
or
lods
mov
push
clc
mov
arpl
fidiv
push
loope
aas
or
ds
pop
xor
int
add
push
jge
cmps
cmp
loopne
cmp
loopne
add
lock
ficomp
in
mov
jb
sbb
je
sbb
cmps
xor
pop
ror
retf
loope
add
dec
rcr
pop
or
call
pop
add
add
add
add
mov
loope
out
fild
clc
ss
push
add
outs
out
dec
xlat
add
push
xor
push
lock
push
lock
mov
imul
cld
or
sbb
fild
cld
mov
and
or
dec
shr
add
scas
push
pavgb
jnp
loope
pop
add
add
or
sbb
lods
int
or
fmulp
push
add
clc
pop
add
sub
lods
retf
lock
stos
mov
inc
shl
mov
mov
outs
pop
cld
das
xor
ins
aam
das
loopne
sbb
mov
add
scas
inc
clc
pop
xor
push
arpl
out
lock
sbb
pop
xor
(bad)
in
pop
faddp
(bad)
imul
or
jnp
sahf
aam
push
inc
outs
add
addr16
mov
out
jle
neg
xchg
icebp
ds
ret
sti
iret
icebp
fimul
call
out
sub
xor
fisttp
mov
add
outs
sub
outs
mov
stos
mov
sub
das
icebp
(bad)
pop
add
out
gs
out
(bad)
sbb
pop
ror
sbb
ins
repnz
ficom
sbb
sti
add
(bad)
mov
jp
out
mov
mov
ins
(bad)
push
push
loopne
adc
push
mov
es
xchg
pop
xchg
sub
mov
imul
inc
mov
sub
std
sbb
ja
ja
jmp
mov
jecxz
mov
xor
pop
lock
mov
out
push
ret
stos
mov
jge
ins
xor
fstp
push
out
std
js
adc
inc
js
stos
fisub
push
or
sbb
movs
push
ficom
ins
dec
jbe
mov
sbb
fcomi
or
out
std
(bad)
outs
lock
bound
add
shl
mov
dec
jbe
sar
jb
pop
jmp
loop
pxor
inc
aad
lahf
(bad)
sti
mov
fisub
pop
in
pop
sar
jb
js
jecxz
xor
add
outs
jge
rcr
mov
(bad)
pushf
test
imul
hlt
xchg
lock
cmp
mov
cmc
adc
and
retf
cli
xchg
cmp
int
loopne
push
jne
add
fimul
add
sub
fiadd
js
shl
adc
dec
hlt
pop
jne
outs
add
cmp
mov
fisubr
jne
push
clc
aas
add
cmp
lahf
pop
cld
and
pop
jne
pop
add
xchg
das
push
add
xor
inc
ret
lock
js
loopne
fidiv
jae
daa
mov
or
clc
xor
ret
cmp
ja
mov
mov
xlat
je
add
push
das
jmp
(bad)
call
loopne
sbb
or
jle
lock
not
lock
(bad)
dec
fsub
or
adc
shr
jne
cmps
inc
cmp
clc
outs
rol
add
add
out
add
jle
lock
pop
jle
adc
lock
daa
add
jl
sbb
push
push
jmp
mov
xor
add
ins
xor
adc
mov
or
les
sub
pop
loopne
add
add
add
dec
gs
add
adc
fiadd
cld
xor
dec
cmp
add
push
clc
sub
fild
add
clc
jle
xchg
add
add
push
daa
cli
or
add
ins
xchg
add
sub
test
aad
jle
lock
iret
add
adc
and
add
inc
aaa
inc
rol
clc
mov
int
xor
jbe
je
mov
mov
add
lock
cmps
add
loopne
je
out
ror
std
leave
std
xor
scas
add
pop
add
inc
push
mov
jle
push
lock
jmp
pop
pop
jl
lock
out
add
mov
div
daa
cli
pop
mov
in
mov
clc
jne
cmps
icebp
jle
neg
mov
out
imul
mov
hlt
push
fidivr
test
fiadd
icebp
pop
out
fisttp
arpl
(bad)
jnp
out
cmps
js
lds
out
adc
cs
lods
lahf
enter
out
addr16
fwait
shr
sub
xchg
or
imul
push
mov
sti
sub
cli
imul
jg
div
mov
std
inc
mov
stos
fidivr
add
xor
mov
js
(bad)
idiv
dec
hlt
outs
mov
out
sbb
cmp
(bad)
sbb
fnstsw
and
lock
and
cmp
pop
add
div
mov
aaa
loope
mov
fidivr
addr16
jecxz
adc
dec
js
sar
aas
loop
xor
mov
xchg
jle
inc
lock
and
inc
add
pop
ins
xor
add
push
or
cmc
inc
pop
ret
out
mov
retf
push
jne
out
rol
call
pop
js
adc
xchg
pop
ret
fidivr
xor
mov
pop
sar
push
(bad)
ficom
std
xor
jg
imul
loope
pop
out
mov
out
pop
icebp
out
es
lock
(bad)
neg
outs
mov
or
pop
loopne
and
sbb
jecxz
jg
cld
and
das
mov
ss
and
pop
add
add
nop
test
xor
dec
das
ins
std
les
or
aaa
mov
bound
pop
pushf
call
mov
cmp
sbb
cld
cwde
dec
hlt
popa
dec
hlt
popa
sub
push
loopne
and
sub
addr16
pop
pop
cld
sahf
test
add
cld
inc
sar
push
ja
lock
shl
stos
mov
loopne
xor
pop
cmp
push
shl
mov
sar
mov
pop
xchg
call
lahf
add
cmp
ins
xchg
pop
or
inc
or
dec
out
or
jmp
fisubr
outs
(bad)
lods
mov
fcom
rcl
ror
jle
mov
mov
jle
push
aaa
aaa
cmp
(bad)
mov
aas
or
cmp
mov
rcr
jle
outs
hlt
lahf
aaa
(bad)
push
xor
bound
repz
jl
shr
es
fadd
mov
rcr
jle
jge
push
je
push
xchg
popf
pop
push
clc
jle
fist
sub
jl
inc
aaa
cmp
cmp
sub
jle
xchg
das
in
lea
outs
hlt
mov
jp
lock
test
clc
jbe
dec
js
loopne
push
jl
loopne
add
push
jl
loopne
movs
mov
sbb
or
add
outs
add
out
dec
pop
add
sub
mov
pop
add
and
repz
inc
inc
add
and
retf
sbb
add
xchg
inc
pop
pop
sbb
lock
xchg
add
shr
ds
sub
or
cmp
daa
add
mov
ds
imul
xchg
adc
cmp
verw
add
sbb
jle
inc
rol
lahf
add
ss
xor
daa
lods
retf
out
cmps
js
loope
inc
dec
hlt
push
fisub
cld
mov
data16
dec
outs
add
mov
fsubr
add
pop
or
and
scas
lock
cmp
ja
or
int
jle
(bad)
ja
rcr
mov
retf
into
xchg
scas
call
or
inc
out
pop
mov
imul
mov
mov
shl
(bad)
in
icebp
out
sar
cmp
pop
sar
psrad
not
lock
pop
aas
mov
not
cmps
or
xor
jg
ret
add
mov
std
push
ret
test
div
js
inc
rcl
std
and
cmc
js
sar
(bad)
mov
mov
icebp
dec
mov
out
outs
cmc
inc
pop
inc
rcr
mov
mov
fcom
std
push
add
adc
mov
cli
cmp
or
(bad)
adc
push
out
xor
clc
jp
mov
and
imul
dec
shl
mov
(bad)
xor
outs
or
pop
push
test
cli
push
js
test
lock
icebp
pop
xor
add
out
loope
add
push
js
xor
js
inc
rcl
mov
not
jnp
add
dec
hlt
or
mov
xlat
add
or
dec
or
sub
dec
rcl
(bad)
movs
pop
aad
inc
xor
cmp
mov
loopne
add
mov
dec
hlt
outs
add
clc
cmps
sub
add
add
scas
dec
clc
sbb
mov
dec
lock
add
add
cmc
sub
mov
clc
imul
lock
pop
add
push
clc
add
and
dec
lock
fnstcw
fidiv
arpl
push
shl
mov
lods
lahf
test
cld
push
adc
xor
dec
add
adc
xor
mov
xlat
test
sbb
clc
out
scas
add
or
sbb
mov
fild
ins
cmp
xor
psubb
cmp
lock
add
clc
push
add
sub
aas
add
sub
sbb
call
scas
add
adc
das
cmp
xlat
add
sub
jmp
rcl
add
adc
dec
popf
lock
cmp
xlat
sub
mov
cld
jae
xlat
add
lock
add
clc
pop
sahf
in
sahf
add
call
iret
aad
pop
iret
mov
sub
pop
add
jg
clc
scas
or
out
scas
add
in
pop
cld
dec
add
shl
(bad)
xor
mov
rcl
lock
(bad)
in
add
inc
outs
loopne
jmp
jg
clc
scas
add
pop
jg
or
out
add
adc
xor
push
std
leave
aad
(bad)
sbb
sbb
sbb
jb
add
adc
xor
xlat
adc
mov
jg
mov
and
outs
mov
add
add
call
push
lock
jg
clc
xchg
sub
add
xor
or
or
iret
jne
scas
pop
cld
push
add
xor
psubb
cmp
lock
add
clc
push
sar
or
sbb
mov
pop
or
xor
mov
jl
loopne
jecxz
push
daa
cli
jp
jg
neg
mov
out
cmc
js
mov
xlat
js
sar
inc
pop
loope
mov
adc
sbb
pop
adc
scas
lock
outs
icebp
(bad)
sbb
xor
push
mov
mov
js
(bad)
jnp
ficomp
std
and
test
jp
(bad)
test
clc
jp
aas
sar
js
mov
sbb
mov
mov
fisub
cld
xor
(bad)
sub
xor
mul
js
scas
adc
out
mov
(bad)
xchg
fcmovb
fdiv
add
out
and
dec
pop
out
retf
(bad)
inc
outs
or
js
(bad)
sti
mov
int
loope
sbb
imul
xor
outs
std
leave
cmp
lods
js
(bad)
sti
daa
mov
fidivr
sub
fnstsw
fisttp
(bad)
jnp
fidivr
jns
outs
loope
adc
add
lock
mov
test
lock
mov
std
push
fstp
test
mov
daa
cli
or
aas
mov
push
pop
sar
(bad)
sti
push
fidiv
popa
mov
fsubp
icebp
outs
mov
(bad)
xor
mov
call
in
js
jmp
ror
aas
mov
dec
clc
xor
push
js
loopne
sub
loope
push
jne
push
js
stos
sub
lock
mov
mov
shr
jle
lock
rcr
inc
dec
sub
std
stos
mov
loopne
add
pop
clc
pop
shl
jge
and
or
iret
add
push
clc
inc
shl
(bad)
cmp
pop
add
dec
push
jbe
sub
cld
daa
xor
adc
pop
add
rcl
rcr
sbb
add
push
lock
and
and
repz
cld
push
or
outs
add
and
mov
pop
daa
loopne
xor
test
ins
aam
or
or
and
lock
rcr
call
add
(bad)
adc
push
loopne
add
or
loopne
or
ds
cmp
mov
mov
mov
and
xchg
or
jle
lock
lock
clc
jne
fild
std
cmp
mov
into
add
push
mov
fild
clc
jbe
aaa
add
or
fwait
or
data16
or
push
dec
add
sti
push
std
cmp
jle
lock
loopne
or
repz
lock
xor
mov
fiadd
pop
pop
lods
lea
clc
push
sub
add
adc
add
pop
lock
jle
lock
das
adc
xor
pop
add
xor
add
rol
lock
xchg
(bad)
les
ds
mov
jle
or
jl
pop
add
pop
add
sbb
ins
inc
mov
cmps
push
add
lods
adc
lock
cmp
add
push
out
inc
or
sbb
sub
ins
sbb
loopne
mov
js
popf
ficom
pop
sbb
inc
je
lock
mov
and
sbb
sbb
repnz
std
js
daa
loopne
js
ret
out
pop
add
inc
sti
movs
in
inc
outs
or
icebp
fiadd
loopne
cmc
mov
xchg
and
popa
mov
fisub
js
and
xchg
xor
call
leave
pop
cs
leave
fst
std
sbb
push
js
(bad)
push
(bad)
icebp
fimul
nop
retf
js
shl
js
rcl
add
pop
icebp
out
and
ss
rcr
jge
xchg
outs
lods
retf
dec
hlt
push
js
dec
aaa
push
mov
gs
fwait
stos
stos
lods
loop
pop
sti
movs
ins
sbb
and
mov
fiadd
jne
mov
adc
or
xor
out
sbb
loope
pop
xchg
outs
ins
(bad)
or
jg
ja
es
js
mov
test
adc
imul
(bad)
push
mov
pop
shl
mov
nop
mov
iret
icebp
ds
fsubrp
mov
es
jmp
jg
test
mov
pop
jp
mov
loope
lea
out
pop
js
lock
test
adc
xchg
call
aas
les
out
xor
push
mov
lods
aas
mov
(bad)
fidiv
or
xlat
cmps
fcomp
loopne
js
or
mov
daa
ins
pop
in
mov
or
add
hlt
push
gs
lock
(bad)
mov
and
aas
or
add
imul
ja
ret
inc
outs
lahf
jb
gs
clc
mov
fwait
add
ins
mov
stos
mov
fst
and
add
jns
iret
add
imul
lea
jle
or
mov
scas
xor
inc
aas
or
mov
sbb
into
xchg
out
pop
and
aaa
aam
jae
clc
jno
mov
out
fild
clc
and
inc
add
or
mov
mov
retf
xor
add
lock
lock
push
imul
xchg
clc
inc
rcl
aas
or
aad
adc
jle
adc
out
and
call
lock
push
add
clc
xor
pop
add
add
add
lods
push
aaa
jg
clc
pop
add
or
sbb
dec
jmp
xchg
pop
push
aad
sbb
adc
iret
stos
adc
retf
add
cld
sub
or
sbb
lock
jl
ret
sub
add
and
xor
aaa
shr
aaa
add
mov
(bad)
or
clc
icebp
inc
popf
lock
sbb
or
mov
(bad)
adc
xlat
or
jle
lock
or
lock
pop
and
daa
add
aaa
jg
clc
pop
shl
out
and
cmps
xor
loop
add
sbb
iret
add
xor
add
mov
mov
cld
xor
mov
mov
lea
add
add
push
sar
add
shl
mov
jmp
ja
(bad)
cmp
add
dec
lock
aaa
cli
sar
inc
hlt
push
sar
lock
sub
fisub
shl
add
clc
data16
ja
lock
loope
dec
sar
inc
pop
mov
ss
mov
stos
call
dec
mov
ficomp
outs
mov
out
lods
pushf
call
out
dec
lock
ret
jnp
ficomp
lods
js
and
mov
out
mov
outs
ret
ficomp
fimul
and
fwait
lock
mov
div
mov
out
ins
js
xchg
sub
das
lock
(bad)
mov
(bad)
js
and
mov
pop
sbb
aas
adc
lea
idiv
adc
int
call
out
pop
add
sbb
fwait
lock
sar
(bad)
fcomi
fiadd
lock
(bad)
jnp
call
jge
add
mov
push
push
hlt
ins
js
scas
stos
fidiv
mov
std
inc
mov
ja
ficomp
fimul
lock
out
call
out
pop
js
ret
jnp
add
sar
fisttp
clc
ss
(bad)
jnp
(bad)
in
ins
cmps
adc
push
mov
mov
neg
ficomp
mov
fcomi
fiadd
lock
adc
iret
lock
(bad)
jnp
(bad)
add
jnp
aaa
jmp
push
mov
js
lds
fidivr
adc
ficomp
mov
test
das
add
add
shl
(bad)
push
xor
sbb
call
iret
add
xor
fild
pavgb
fisttp
mov
(bad)
sbb
fld
lock
push
inc
outs
loopne
cmp
xor
push
lea
mov
call
lock
cmc
int
or
shl
mov
clc
(bad)
and
inc
jmp
pop
add
cmps
dec
js
sbb
add
loopne
dec
clc
sar
mov
mov
call
cmp
ja
mov
test
pop
jl
loopne
add
or
add
push
lock
clc
jg
sub
sbb
out
add
lock
cmp
xchg
ss
outs
dec
hlt
push
mov
(bad)
dec
aam
mov
jg
clc
pop
sar
push
cld
pop
jne
fild
popa
rol
fldenvw
aas
inc
shr
lea
lock
aaa
jecxz
cld
add
sub
cmp
pop
fisubr
sub
pop
jp
mov
fwait
pop
in
fwait
mov
jle
daa
cli
xor
sbb
or
ds
popa
sar
pop
and
xchg
add
cld
call
clc
mov
daa
add
pop
jl
lahf
lock
mov
add
pop
add
and
adc
pushf
or
jle
or
lock
rcr
or
xor
psubb
mov
(bad)
into
add
cmps
cs
arpl
sub
sub
mov
int
add
add
jbe
mov
lock
cld
sbb
xchg
add
and
xor
out
add
es
fmul
or
sbb
mov
lock
je
push
jbe
xor
fiadd
(bad)
add
dec
rcl
add
push
loopne
sbb
test
lar
mov
icebp
(bad)
fdiv
fdivrp
lock
in
xor
mov
cmp
cdq
cmps
push
(bad)
cmp
arpl
and
dec
push
pop
sar
mov
pop
or
mov
cmp
xor
cmps
mov
jp
out
inc
mov
push
dec
jecxz
push
lahf
lock
jle
out
xor
adc
xor
mov
lahf
sar
test
lock
out
sub
xor
mov
xlat
jecxz
adc
aas
loop
lea
ins
cmc
push
out
popf
js
loopne
add
cmc
js
test
(bad)
js
jecxz
sub
push
out
cs
js
call
out
jl
xlat
xor
add
and
imul
aaa
sub
in
leave
into
xor
add
clc
cs
ret
mov
mov
or
cmp
dec
out
ins
js
and
mov
fcomi
fisubr
add
sti
xor
stc
mov
(bad)
jnp
(bad)
xor
ret
ja
ins
cmps
xchg
sub
sub
fist
lock
and
jg
push
lea
sar
mov
dec
js
ret
jnp
add
daa
cli
push
mov
mov
js
inc
shl
loopne
cmc
pop
call
lea
ret
jnp
(bad)
js
mov
mov
sar
sbb
cli
sar
push
shl
mov
imul
cs
std
or
lahf
add
xchg
test
clc
xchg
and
or
out
add
or
or
add
mov
jg
ret
mov
ja
fiadd
aas
rcl
add
push
jl
loopne
add
xor
add
sub
aas
add
add
jecxz
cld
adc
aaa
add
ja
mov
call
lock
push
adc
adc
pop
cmp
xor
pop
add
imul
add
ret
inc
inc
or
aaa
xor
jmp
or
inc
ret
clc
dec
push
fnstsw
aaa
loopne
or
data16
jmp
js
sbb
mov
es
pop
mov
sub
jl
es
fcomp
in
outs
add
pop
lea
or
jp
jg
cld
inc
sar
jbe
mov
mov
jl
dec
hlt
(bad)
sub
movs
xchg
xor
jle
loopne
add
add
add
or
sbb
cmps
add
clc
and
add
jbe
shl
jle
lock
test
(bad)
fdivp
dec
cmp
lahf
add
out
add
daa
loopne
add
add
add
add
push
sar
jnp
out
(bad)
sub
pop
aas
mov
pop
jbe
rcr
jle
lock
sbb
or
jno
cmps
ds
add
lahf
add
and
out
lock
lock
dec
jmp
pop
or
jle
lock
lock
or
das
add
cli
sub
xor
pop
loopne
std
test
mov
outs
sub
inc
add
or
ss
bound
lock
call
pushf
call
xor
popf
call
sti
movs
pop
cli
xchg
sti
inc
sar
test
loopne
or
aaa
jmp
sbb
fild
mov
mov
mov
jne
ret
(bad)
out
jecxz
lods
jge
xor
jmp
fiadd
sbb
sti
mov
std
push
mov
jae
and
xchg
pop
mov
out
mov
jb
out
push
add
(bad)
neg
mov
add
ret
out
pop
mov
neg
xchg
and
div
fnstsw
add
lea
ret
fidivr
std
pop
add
sbb
sar
mov
fidivr
lock
repz
lods
aas
mov
jge
mov
ret
mov
daa
lock
(bad)
jnp
out
jno
(bad)
ret
mov
(bad)
ret
fisub
clc
add
mov
add
jns
loopne
add
mov
out
(bad)
sti
sbb
loopne
icebp
out
sar
jns
push
ficomp
fdivr
mul
mov
div
sar
dec
outs
add
inc
mov
push
push
out
ret
push
hlt
outs
mov
not
js
les
mov
aas
ret
mov
mov
ja
ins
out
(bad)
add
inc
jg
(bad)
mov
(bad)
jae
mov
mov
out
sar
call
mov
sti
push
mov
sar
fwait
cmp
ja
fucom
(bad)
adc
mov
add
sub
add
call
lock
and
sbb
iret
add
push
cld
pop
or
push
cld
dec
pop
loope
add
lods
test
js
loopne
sub
mov
pop
add
push
jl
loopne
add
or
dec
cmp
inc
int
jb
push
out
cmp
call
inc
(bad)
and
pop
push
clc
test
add
sbb
sbb
aaa
or
push
js
loopne
cmp
jnp
mov
cld
pop
sar
les
mov
outs
lahf
lock
push
and
and
sbb
fbld
sub
push
jge
aaa
add
cmp
ins
aam
jnp
cmps
test
add
das
add
or
add
mov
rcr
mov
add
pop
sar
out
xor
push
push
fnsave
shl
pop
add
push
sar
cld
or
mov
mov
clc
xchg
sub
cld
pop
add
sbb
shr
or
lahf
test
dec
(bad)
adc
push
shl
rcr
std
jnp
mov
jg
clc
jbe
aaa
add
or
and
cmp
pop
cmp
mov
cld
pop
sar
jnp
sbb
dec
aaa
clc
push
outs
lock
fimul
adc
out
ror
add
fild
call
lock
or
out
gs
popf
xor
mov
outs
add
fild
(bad)
call
pop
add
loopne
add
fwait
imul
js
loopne
push
js
loopne
cmp
xlat
jmp
fimul
call
sahf
in
pop
adc
iret
add
es
add
inc
sar
lock
or
sbb
sbb
cli
cmps
inc
dec
jbe
daa
addr16
scas
lock
iret
jecxz
add
push
mov
not
fisubr
icebp
push
ret
loopne
or
jge
addr16
xchg
lock
bound
lock
scas
imul
push
(bad)
xchg
dec
mov
or
adc
pop
adc
sub
xchg
pop
shl
mov
fucom
sub
leave
pop
jle
(bad)
jg
hlt
or
ret
jnp
out
cs
mov
out
and
push
sbb
sbb
jg
mul
fidivr
outs
cmps
xor
xor
dec
jecxz
mov
sub
jle
mov
outs
lock
ja
fidiv
add
and
jnp
pop
ror
icebp
push
ret
pop
cli
xor
aaa
icebp
ds
or
push
das
jecxz
add
xchg
arpl
or
xor
pop
dec
imul
mov
out
ret
mov
hlt
cmps
js
loopne
sbb
jecxz
dec
adc
inc
js
(bad)
jnp
out
out
jl
(bad)
outs
or
xor
(bad)
call
fisubr
stos
(bad)
loopne
or
cwde
test
retf
xchg
icebp
mov
ret
sbb
lahf
ret
sti
sub
(bad)
sti
sub
cli
add
repz
sbb
jnp
jge
pop
js
in
adc
aas
(bad)
jnp
out
jle
sar
aas
(bad)
sti
adc
out
dec
add
pop
clc
or
push
add
dec
ret
fiadd
push
add
fist
pop
jl
lea
jle
lock
ja
lahf
add
dec
add
sbb
xchg
cmp
call
fiadd
cmp
loopne
or
mov
loope
shl
pop
pop
cld
add
add
xchg
pop
aad
lods
test
add
test
pop
add
or
shl
and
sti
xor
jmp
lock
call
retf
fdivp
int
add
rol
pop
fwait
dec
ins
sti
movs
inc
add
cld
test
loope
loopne
js
push
daa
cli
adc
mov
sub
jle
lock
aaa
xchg
add
mov
adc
popa
shl
or
ja
outs
mov
stos
adc
add
shl
rcl
arpl
add
lock
pop
add
sub
(bad)
push
gs
sub
push
clc
nop
test
add
dec
jge
cmp
pop
add
lock
or
add
ins
xchg
add
add
mov
iret
add
lock
test
arpl
mov
lods
not
lock
rcr
test
ds
fstp
add
das
add
or
sub
daa
je
mov
shl
retf
out
pop
add
aaa
clc
add
pop
add
add
pop
call
mov
lahf
pop
pop
mov
add
sub
lidtd
cld
adc
xchg
(bad)
psubb
scas
mov
adc
mov
in
retf
cmps
add
aad
fstp
add
mov
pop
add
pop
rcr
lock
and
jnp
jg
(bad)
fcomp
dec
add
cld
adc
ret
push
add
add
inc
mov
ins
inc
mov
lahf
sub
fmulp
call
mov
loopne
mov
leave
and
adc
loopne
cli
inc
icebp
jle
imul
adc
xlat
(bad)
pop
imul
div
xchg
js
loopne
push
out
jge
clc
ja
out
aam
fdivrp
in
hlt
inc
fild
dec
jmp
int
rcr
xchg
or
hlt
adc
cmps
leave
pop
push
mov
or
or
ret
js
sar
repz
shl
push
mov
sbb
jnp
mov
jmp
lahf
lock
cmps
sbb
cmp
test
adc
(bad)
loope
push
add
ret
add
ja
std
cmp
outs
sar
(bad)
mov
js
aam
pop
mov
pop
aad
mov
lock
cli
xchg
mov
mov
lock
daa
loopne
lock
ret
mov
test
fild
daa
xlat
xchg
xchg
js
aam
pop
sti
xchg
jae
lock
loop
push
out
jbe
jg
shl
fld
in
cli
xchg
jnp
test
cmps
(bad)
int
or
loop
fild
loopne
dec
jmp
pop
lock
mov
cld
jnp
ja
sti
jnp
fisttp
cmp
pop
icebp
fiadd
or
jp
jg
sti
inc
mov
mov
ficomp
and
pop
lock
jb
lods
mov
outs
push
jl
loopne
repnz
or
push
shl
dec
clc
es
shr
loopne
add
or
aas
aad
pop
sub
fisttp
clc
ja
outs
and
fwait
add
or
mov
test
jne
mov
cmp
fisttp
clc
shl
jecxz
inc
cmp
add
inc
jge
pop
mov
inc
clc
add
ins
std
les
loopne
xor
ins
std
inc
dec
popf
lock
jne
aad
mov
cld
mov
ret
mov
or
aas
shr
hlt
push
loopne
or
lock
cmps
add
js
pop
cdq
add
cmp
das
add
lock
mov
and
inc
add
js
lock
aas
and
pop
add
pop
mov
aam
add
jae
dec
add
sbb
inc
add
lock
out
test
into
xchg
(bad)
or
xchg
retf
add
lock
test
jl
jge
inc
sbb
lahf
pop
cld
xor
xlat
or
xor
add
mov
popf
cli
repz
std
cmp
lahf
pop
sbb
jnp
gs
push
cld
sub
arpl
pop
jl
lock
repnz
jns
pop
mov
retf
dec
add
dec
shl
mov
ds
imul
(bad)
xor
xchg
push
ror
jle
daa
cli
pop
rcr
shr
outs
cwde
sbb
add
xor
pop
adc
adc
add
add
lock
mov
add
inc
fild
clc
inc
add
pop
add
add
and
xchg
add
call
fnstcw
add
ds
mov
and
clc
and
mov
mov
jge
daa
jp
and
ret
mov
lahf
mov
cmp
ja
clc
jnp
pop
add
push
jmp
xchg
add
inc
sar
mov
call
std
dec
jmp
push
or
pop
mov
std
push
jns
mul
jge
lea
lahf
pushf
sub
jle
out
sub
repz
push
push
mov
mov
aad
ror
xchg
sub
js
jecxz
add
cmp
jno
dec
imul
ficom
lea
fisub
addr16
mov
mov
js
and
xchg
or
dec
mov
test
cmp
int
cmp
mov
out
add
imul
jge
sbb
push
lods
lods
fwait
pop
(bad)
sti
push
fidiv
aas
(bad)
ja
or
scas
add
fisubr
or
push
js
loop
or
inc
js
call
mov
cmp
or
out
or
hlt
jno
pop
or
adc
adc
daa
pop
aaa
mov
div
jge
sub
mov
or
adc
jecxz
ja
mov
std
add
imul
lahf
pop
dec
ret
push
or
jge
cmp
loopne
mov
adc
xchg
mov
fidiv
lock
adc
or
outs
adc
lea
xor
aas
loope
push
out
push
mov
mov
push
out
popf
js
loopne
add
pop
mov
stos
fst
add
push
clc
inc
shl
dec
loopne
cmp
jg
jl
adc
lds
and
inc
jge
iret
add
(bad)
test
test
loopne
dec
clc
push
sar
cli
or
fild
mov
test
add
test
inc
mov
mov
sar
mov
clc
sar
add
sub
movs
shl
outs
sbb
add
cld
ss
add
imul
add
sbb
mov
fiadd
jecxz
ja
pop
add
sub
loope
add
add
or
add
rcl
clc
inc
shl
mov
jle
lock
(bad)
fsubrp
mov
jg
xchg
lock
or
inc
lock
pop
gs
add
adc
sub
es
rol
fisttp
clc
mov
push
jne
dec
add
push
clc
stos
xchg
xor
jnp
lahf
add
cmp
ds
clc
jge
jnp
pop
push
cld
adc
(bad)
xor
and
clc
and
add
fwait
jl
or
adc
test
loopne
or
pop
shl
push
push
ret
sub
aad
add
iret
add
mov
cli
push
lock
rcl
jg
clc
popa
rcr
stos
adc
pop
add
or
push
fwait
add
jo
xor
jne
scas
jmp
iret
add
inc
add
lods
ins
mov
cmp
push
rcr
xchg
dec
add
lock
out
add
or
fisub
fiadd
xor
add
add
xor
(bad)
cmp
xchg
add
jecxz
aas
add
or
outs
shr
lock
inc
sbb
jl
sbb
or
jle
lock
add
dec
rcr
stos
cwde
push
dec
data16
add
ins
xor
adc
imul
or
add
mov
lahf
stos
dec
scas
mov
jne
ds
(bad)
lock
jnp
lahf
loopne
xchg
jnp
pop
adc
xor
jg
or
sar
fbld
loopne
icebp
sahf
sar
fisub
sbb
push
mov
pop
(bad)
jnp
sbb
sbb
(bad)
sti
cmp
outs
or
fwait
cdq
ret
sti
sub
retf
sbb
enter
div
mov
rol
jle
pop
jbe
dec
mov
pop
out
popa
or
mov
push
push
fisttp
add
js
sar
xor
(bad)
sti
xchg
loopne
lods
test
loopne
dec
lock
out
adc
sar
cmp
jnp
inc
aaa
ss
cmp
add
sub
add
mov
jge
out
mov
ret
cmp
jl
sbb
sahf
in
ins
fisttp
iret
loop
xchg
cmp
mov
jnp
out
mov
(bad)
fisttp
pop
lods
add
mov
jnp
ret
test
(bad)
fisubr
sti
or
or
test
ds
ror
jle
leave
pop
ss
sahf
in
(bad)
aad
xchg
and
jecxz
jl
mov
and
ins
repnz
das
fimul
mov
and
lahf
ret
jnp
outs
lock
js
mov
pop
sar
aas
shr
mov
cmps
add
ret
jmp
iret
add
stos
outs
add
dec
sbb
jl
lock
lahf
jno
iret
add
or
or
fsubr
sbb
out
add
cld
adc
inc
dec
clc
and
out
add
psubb
loopne
add
ror
cld
push
loopne
je
pop
pop
jl
sub
iret
mov
fiadd
fiadd
mov
lea
loopne
xor
fiadd
clc
cmp
dec
cmp
imul
adc
mov
mov
xchg
lock
loop
rol
fcomp
int
loopne
xor
sbb
(bad)
cmp
scas
dec
clc
jae
aas
add
gs
cmp
jle
lock
pushf
call
jle
fistp
jmp
jle
lock
or
xchg
lock
in
or
or
out
clc
mov
push
lahf
add
lock
and
and
aaa
jne
das
add
lock
sub
add
lahf
add
movs
cli
data16
or
jle
sub
add
inc
add
test
inc
sar
or
add
cmps
sahf
in
out
add
invd
clc
sbb
xor
data16
add
jg
clc
dec
rcr
or
dec
mov
or
ins
and
sbb
or
pop
add
push
add
cld
call
mov
jle
lock
retf
outs
add
data16
lock
ja
clc
sbb
adc
test
add
push
clc
xor
fild
mov
retf
aad
add
mov
stc
ret
out
clc
adc
dec
add
nop
ss
fild
jle
sub
mov
mov
sbb
jl
lock
sbb
push
jbe
add
or
ins
mov
pop
cmp
jg
ror
cdq
cmps
inc
gs
sub
sbb
mov
fisttp
js
xor
mov
out
les
fidivr
mov
out
fucomip
dec
scas
adc
pop
js
les
stos
in
sbb
fimul
loope
daa
js
xor
js
dec
shl
add
and
cmp
fwait
ss
fidivr
or
pop
cmc
daa
xlat
inc
sar
sar
outs
push
jbe
mov
(bad)
lock
das
icebp
fimul
aaa
stos
retf
out
outs
mov
xchg
rcr
pop
or
dec
inc
jg
cs
sub
pop
out
in
js
sar
js
and
fcomi
dec
ja
mov
js
jecxz
push
out
push
sbb
imul
ss
daa
cmp
xor
sub
fcomi
fimul
inc
outs
jg
sbb
cmp
js
adc
test
sbb
dec
lock
push
gs
int
mov
div
jg
sti
dec
lock
adc
in
js
xor
js
sar
daa
cmp
mov
inc
push
lods
fwait
cdq
xlat
lahf
pop
mov
ss
out
sar
clc
add
pop
(bad)
mov
jecxz
dec
jecxz
or
fucomp
mov
push
arpl
pop
sar
mov
in
ins
std
test
lock
add
inc
ret
mov
cmp
cmp
(bad)
adc
add
adc
jg
clc
push
shl
dec
dec
jbe
or
adc
dec
shl
add
xor
fsubrp
call
loopne
add
push
jl
test
mov
clc
sar
mov
cli
outs
add
add
data16
lock
xchg
sar
add
outs
add
cmp
ja
fiadd
js
loopne
sbb
stos
test
or
add
jno
outs
imul
and
push
lock
sbb
je
adc
pop
add
cld
and
adc
aas
loopne
sub
xor
cmp
ins
js
sub
arpl
mov
fistp
mov
jl
adc
sbb
pop
mov
jle
lock
cli
test
loopne
cmp
cs
fs
loopne
mov
cld
xor
ror
add
mov
and
call
ret
pop
add
cmp
nop
sub
jle
lock
pop
hlt
or
vmread
jne
add
ds
cmp
or
outs
hlt
outs
add
or
sar
add
clc
sub
outs
add
dec
shl
aaa
test
xor
call
test
loopne
sbb
cld
ds
std
les
daa
cli
or
add
clc
dec
fucom
ins
mov
sub
add
jbe
or
test
lock
pop
push
jl
or
jle
lock
lock
pop
jns
clc
cmp
mov
push
loopne
add
cld
cmps
test
pop
stos
pop
gs
add
dec
or
ds
jle
fbld
loopne
add
mov
add
xchg
xchg
pop
arpl
jno
mov
lock
rol
loopne
mov
add
dec
outs
add
popa
mov
mov
hlt
rcl
(bad)
(bad)
pop
pop
out
jno
pop
loop
mov
(bad)
daa
addr16
jbe
sbb
xor
ficom
aas
(bad)
sti
push
fimul
daa
aaa
mov
out
stos
adc
js
loopne
adc
jge
iret
loopne
test
hlt
dec
mov
out
push
ficom
js
jecxz
lods
loope
arpl
call
pop
and
out
mov
ds
mov
out
adc
xor
sbb
gs
jp
sbb
sti
mov
loopne
cmp
imul
inc
mov
pop
lock
dec
jmp
out
pop
int
ins
(bad)
mov
(bad)
test
aad
fisttp
sar
sub
cs
mov
sbb
imul
lods
mov
add
mov
xchg
fld
mov
mov
jbe
jg
sti
mov
xchg
ficomp
mov
lahf
pop
sub
call
mov
push
push
sti
push
out
ins
jp
retf
loopne
inc
mov
jnp
aaa
mov
not
ficomp
jnp
out
or
(bad)
jnp
xor
jge
out
jns
xchg
ds
and
(bad)
icebp
mov
call
inc
hlt
add
jae
jl
xor
mov
jg
inc
dec
stos
mov
mov
mov
add
add
add
mov
das
xor
push
push
jne
sub
clc
sub
pop
add
add
jg
ret
mov
mov
clc
xor
mov
outs
add
add
sar
xchg
pop
pop
loopne
add
(bad)
test
inc
adc
add
adc
sub
push
lock
xor
mov
(bad)
mov
add
inc
xor
adc
sbb
pop
test
scas
cdq
test
add
fld
loopne
sub
jl
(bad)
in
add
push
xchg
popf
in
fwait
jns
clc
dec
cmp
lock
add
sbb
xor
pop
add
mov
cmp
out
add
outs
sub
loopne
add
adc
iret
add
cld
push
loopne
cmp
fisub
pop
fadd
fdivr
mov
add
jecxz
outs
push
clc
rcr
mov
pop
test
and
test
pop
or
mov
pop
scas
lock
add
inc
rcl
ret
cmp
xor
(bad)
push
sub
aas
pop
clc
sbb
xchg
mov
sub
(bad)
fadd
rol
adc
push
lock
clc
jae
rcr
int
loopne
or
xchg
add
or
lea
(bad)
adc
and
rol
lock
sbb
jl
lock
cmp
cld
sub
or
fiadd
clc
outs
xor
daa
dec
hlt
fist
lock
pop
loopne
add
sub
fist
imul
xor
dec
hlt
push
inc
ffreep
mov
fcmove
retf
inc
fbld
out
shr
imul
sti
add
add
adc
push
or
dec
add
add
aam
mov
packssdw
inc
das
loopne
add
cmp
add
js
es
icebp
pop
ret
test
out
retf
js
loope
scas
xor
sub
jg
imul
ds
ficom
lods
dec
out
add
cs
out
push
push
in
scas
lock
sar
js
les
fidivr
mov
xchg
fisttp
mov
fidivr
in
adc
in
js
add
push
mov
push
out
sub
fild
loop
sub
mov
fwait
imul
add
aad
test
mov
out
dec
js
jecxz
adc
aas
and
imul
cmps
stos
pop
rep
push
mov
(bad)
(bad)
loopne
ror
add
xchg
test
aaa
stos
xor
dec
push
out
aaa
js
std
push
imul
xchg
das
retf
es
mov
shl
out
sti
sbb
ins
and
fidivr
sub
pop
mov
std
rcr
fidiv
outs
lds
sar
sti
jns
in
cmp
mov
int
xchg
and
(bad)
icebp
ds
fidiv
sub
daa
or
ds
sti
cmp
mov
mov
test
js
rcl
xor
jno
jle
ret
push
or
jne
(bad)
rol
mov
js
and
mov
out
fisttp
clc
adc
pop
outs
mov
iret
add
lock
(bad)
push
sbb
leave
out
adc
mov
into
(bad)
ror
retf
clc
inc
rcl
fisttp
sar
aas
cmps
rcl
xchg
aad
mov
cmp
cmp
fild
add
xchg
cmp
pop
add
not
push
dec
jmp
stc
push
adc
lock
sbb
xor
jmp
mov
push
das
add
jge
mov
jb
lock
adc
ss
pop
xchg
popf
popf
call
daa
jl
loopne
add
pop
add
dec
mov
xor
test
rcr
(bad)
xchg
cmp
and
xchg
ins
and
xor
add
sbb
mov
inc
dec
sub
lock
add
jmp
add
lock
shl
lock
das
add
or
sub
add
mov
outs
add
add
push
or
or
gs
ds
adc
push
rol
lock
shl
inc
rcr
inc
lock
adc
cmp
or
pop
add
adc
repz
mov
or
fsubrp
inc
add
pop
jl
lock
iret
add
add
jle
jle
or
ins
arpl
call
loopne
cmp
iret
add
mov
repnz
cmp
pop
adc
pop
cmp
shr
fiadd
jl
lock
add
add
jno
(bad)
mov
(bad)
data16
xor
pop
rcl
add
or
xor
fst
add
clc
and
pop
xor
jle
mov
push
js
js
ins
jne
sar
pop
add
mov
in
add
sbb
aaa
add
out
inc
push
jbe
add
lock
add
mov
mov
mov
push
lahf
fsub
retf
jle
or
add
push
js
loop
xchg
dec
cmp
outs
mov
ja
rcl
ror
mov
test
ror
pxor
mov
mov
loopne
lock
push
cmp
mov
scas
lock
add
iret
loope
int3
or
dec
js
loop
adc
adc
(bad)
in
or
mov
ficomp
loope
push
outs
xchg
outs
ins
pop
in
sub
jnp
das
loop
or
jae
scas
loopne
adc
pop
mov
cmp
js
lds
out
ret
js
push
ffreep
sti
cmp
jae
pop
shl
icebp
outs
mov
and
push
lock
daa
loopne
lock
div
(bad)
or
sub
pop
out
sub
cli
mov
loope
js
loope
push
out
imul
push
push
ins
or
cmp
jle
out
xlat
sbb
gs
inc
js
loope
test
pop
out
jecxz
mov
xchg
sbb
pop
lock
shr
mov
icebp
ds
out
idiv
jecxz
dec
loopne
icebp
sahf
ret
fiadd
hlt
fs
jge
out
add
adc
xchg
js
and
pop
icebp
out
loopne
push
out
jae
jl
out
cmp
cdq
sbb
addr16
push
fwait
add
cmp
daa
dec
clc
stos
jmp
imul
or
pop
jl
or
jl
popf
lock
adc
jbe
lahf
add
sbb
sub
out
add
push
push
clc
popa
rcr
ds
ret
inc
inc
pop
add
cmp
jnp
jg
sub
mov
jg
clc
jnp
fild
jle
lock
lock
lock
cmp
dec
xchg
lock
clc
and
or
adc
mov
in
leave
outs
add
cmp
out
xchg
lock
adc
or
add
sbb
xor
push
sub
adc
pop
cld
sub
jnp
lahf
add
lods
xor
add
add
mov
jle
gs
pop
sar
jg
js
loopne
stos
mov
mov
loopne
fisubr
adc
mov
xchg
sbb
cld
cmp
jp
mov
or
inc
loopne
or
clc
jns
jg
clc
inc
shl
dec
sar
push
daa
mov
adc
push
loopne
add
add
sbb
mov
dec
add
push
lock
rcl
push
lock
rol
sbb
dec
or
jle
lahf
lock
fucom
inc
add
daa
jp
fisttp
clc
or
test
lock
lahf
aad
cld
and
pop
pop
jl
lock
outs
jmp
fiadd
sub
lahf
push
mov
outs
out
sbb
mov
jle
lock
rcr
dec
cmp
rcr
add
lock
sbb
ds
arpl
cmp
lock
ins
mov
fist
js
clc
sub
or
mov
sbb
loopne
cmp
cli
mov
retf
cs
clc
cmp
lods
outs
data16
adc
add
add
lock
mov
xor
add
inc
pop
lock
div
pop
lock
idiv
ret
fidiv
(bad)
out
jmp
out
mov
hlt
push
mov
add
loop
pop
aaa
clc
sub
mov
stos
ss
mul
mov
(bad)
hlt
or
mov
gs
mul
inc
hlt
fiadd
mov
dec
push
je
dec
rol
sti
icebp
sahf
push
sbb
js
aaa
mov
not
mov
not
mov
or
pop
mov
sbb
mov
aam
cmp
mov
outs
mov
fadd
fmulp
lock
loopne
xor
and
mov
add
xchg
lock
addr16
mov
sbb
stos
js
sar
push
(bad)
scas
jecxz
dec
pop
cli
push
mov
loopne
dec
ror
mov
pop
lock
sar
fisubr
outs
(bad)
lock
js
rcl
jne
(bad)
jecxz
sbb
mov
cli
dec
dec
jbe
sbb
mov
std
add
add
and
(bad)
or
and
repz
ret
jnp
out
cmp
lods
lea
mov
js
lock
sar
adc
test
aaa
cli
xchg
jmp
loopne
icebp
fiadd
ja
mov
fwait
ins
in
jl
loopne
pop
lock
add
mov
jmp
push
clc
data16
aas
add
or
jg
cld
dec
mov
(bad)
dec
ret
mov
aas
shl
push
jne
stos
inc
cmp
push
cmp
jge
clc
jge
cmps
add
clc
or
cmps
add
or
cmp
repz
jecxz
stos
mov
adc
sbb
mov
pop
jmp
jle
lock
ja
gs
add
or
imul
sar
or
or
and
push
lock
pop
aas
icebp
adc
pop
sub
dec
mov
cmp
imul
mov
inc
shl
retf
sbb
loopne
or
dec
hlt
jnp
lahf
add
or
inc
push
(bad)
push
mov
mov
add
vmread
add
add
or
jo
add
jbe
add
sub
push
cmp
jl
push
aaa
cmp
pushf
cmp
ins
mov
jmp
mov
aas
test
mov
mov
inc
rol
aaa
arpl
jnp
xchg
pop
pop
cld
xor
retf
sbb
aam
fwait
push
rcl
jae
dec
add
outs
or
add
sbb
fdivrp
in
jne
dec
jmp
outs
cdq
sub
cmp
pavgb
sub
pavgb
cmp
or
(bad)
pop
inc
aaa
sub
xchg
retf
add
mov
sahf
cmp
cld
and
adc
xchg
mov
inc
iret
add
lock
mov
imul
rcr
add
lock
jne
xchg
das
jp
push
into
add
jno
loopne
je
dec
add
push
lock
(bad)
push
xchg
das
sub
mov
add
adc
das
add
in
std
les
mov
clc
sar
sbb
cmp
aaa
ror
clc
sar
cmp
(bad)
push
push
mov
push
jg
push
aaa
push
xor
sbb
jnp
push
imul
sar
ret
sti
or
lahf
push
lahf
pop
or
adc
pop
push
fld
jle
mul
add
mov
sbb
ds
cmp
sub
pop
js
aad
test
mov
imul
jo
mov
mov
loope
fisub
js
jo
outs
sar
(bad)
mov
mov
je
aaa
js
aaa
xor
outs
loop
sbb
sub
clc
test
and
or
adc
mov
sub
aaa
repnz
out
lock
ret
jnp
out
jecxz
xchg
dec
loop
adc
mov
xchg
push
mov
test
loopne
push
or
cmp
mov
xor
cmc
imul
fs
out
fisubr
ret
push
js
repz
test
cmp
pop
add
out
adc
stos
ins
out
aaa
clc
and
aas
(bad)
test
mov
jae
out
inc
jb
out
gs
out
pop
js
and
repz
cmp
mov
js
adc
imul
push
dec
fsubp
std
or
mov
pop
or
aam
push
or
lods
outs
out
lock
jp
lock
sub
loope
or
dec
loopne
pop
sub
add
ret
sbb
and
push
fst
or
ins
and
or
add
mov
pop
cmp
push
clc
sbb
cmp
dec
clc
cmp
(bad)
jg
cld
jg
ret
inc
add
test
sbb
pop
cld
ja
aaa
xchg
add
jmp
mov
dec
out
retf
stos
sbb
clc
iret
ret
sub
push
inc
inc
das
cmp
cld
iret
add
into
mov
idiv
pop
lock
mul
stos
push
lea
sub
mul
addr16
sub
adc
test
call
push
aaa
in
sub
fst
mov
xor
xchg
jae
mov
mov
rol
clc
push
add
sub
aaa
adc
popf
push
mov
adc
daa
addr16
test
clc
jo
lock
std
leave
std
loop
mov
cmp
add
or
sbb
jnp
mov
lock
xor
ret
xor
(bad)
adc
jp
loopne
xor
sbb
mov
push
shl
lock
add
sub
pop
add
push
clc
neg
lock
xor
add
dec
lock
cmp
xor
neg
sbb
pop
pop
clc
add
inc
call
lock
jne
inc
aaa
test
lock
sbb
inc
shl
outs
push
je
or
jbe
mov
fimul
add
es
mov
mov
ja
sub
mov
clc
jbe
aas
add
mov
shl
daa
loopne
add
push
lock
push
jne
lock
sub
jmp
jmp
stos
add
out
mov
pop
lods
sbb
mov
cmp
out
(bad)
daa
jl
fisubr
js
inc
fnstsw
pop
pop
fdivrp
iret
js
scas
icebp
outs
sti
movs
adc
jecxz
lahf
jecxz
loope
lahf
sar
(bad)
cmp
loopne
mov
out
or
xor
out
push
ficom
js
jecxz
pop
loope
inc
or
js
adc
pop
call
outs
lock
hlt
fs
mov
retf
imul
(bad)
push
mov
push
dec
(bad)
mov
lock
loopne
mov
stos
push
fisubr
in
lock
hlt
push
add
cld
dec
jp
out
or
ds
jg
out
push
ficom
mov
add
jecxz
call
std
jg
inc
out
adc
or
or
clc
(bad)
or
out
loopne
xor
loopne
sar
jno
xchg
cli
mov
loopne
sti
(bad)
call
daa
adc
jecxz
(bad)
loopne
ins
mov
dec
loopne
mov
call
ficomp
(bad)
sti
(bad)
cld
inc
xchg
fnstsw
sar
jl
out
jno
mov
mov
cmp
out
push
inc
lahf
loopne
outs
sbb
loopne
and
fdivrp
jae
cmp
loopne
mov
push
js
in
adc
mov
retf
aad
adc
push
or
(bad)
aas
add
lahf
test
or
push
js
lock
jno
jmp
sar
pop
stc
push
lock
dec
dec
clc
push
shl
jne
call
ins
add
jno
dec
push
loopne
or
jne
pop
add
or
add
inc
ret
pop
add
inc
sbb
jl
test
push
and
or
retf
cmp
cld
and
retf
sbb
loope
xor
ins
cmp
setl
sbb
call
lock
add
ret
cmps
sbb
loopne
mov
loopne
pop
adc
jbe
sbb
mov
out
adc
cmp
mov
jl
lock
push
lock
mov
fwait
sbb
je
adc
cmps
add
or
loop
inc
cmp
xchg
fwait
push
fisttp
sub
clc
add
jecxz
call
stos
fwait
and
out
sub
inc
lock
jnp
shl
dec
or
add
das
add
outs
es
rol
js
push
fwait
pop
cld
mov
push
or
xor
jnp
fs
ja
or
mov
rol
dec
fwait
dec
popf
push
fisttp
pop
jle
lock
aaa
jae
clc
add
pop
add
ss
or
and
xchg
or
sub
pop
add
imul
daa
mov
sbb
aas
or
pop
dec
hlt
pop
rcr
pop
out
add
xlat
xor
dec
mov
add
xor
xchg
add
or
ins
cmc
push
lock
clc
pop
cmp
aaa
add
sub
add
or
push
mov
inc
mov
pop
sub
add
shl
inc
ror
ror
and
adc
pop
mov
pop
cld
mov
dec
add
jg
popa
mov
sbb
sbb
xchg
or
mov
xlat
icebp
sahf
ret
sti
xor
out
lock
loopne
mov
mov
lock
xchg
push
add
cmps
or
pop
mov
inc
shl
lock
js
jmp
ja
ror
sbb
add
(bad)
jnp
out
and
lds
out
fstp
imul
fidivr
sti
add
mov
jge
(bad)
lock
ret
jnp
aaa
clc
jne
nop
sbb
dec
clc
stos
mov
sahf
call
js
lds
std
sbb
jg
jnp
add
push
out
iret
xor
mul
push
sti
js
loop
cmps
mov
add
out
ret
jnp
out
sar
jecxz
mov
sbb
xchg
mov
jmp
loopne
adc
adc
add
inc
mov
retf
invlpg
dec
aaa
add
and
mov
ffreep
sti
xor
xchg
js
(bad)
jnp
out
push
mov
sub
push
(bad)
mul
scas
mov
cli
out
lock
cmp
add
or
jg
push
jbe
js
ret
sti
adc
push
js
sar
xchg
js
lds
inc
aaa
fidivr
inc
or
ds
sti
adc
pop
(bad)
sti
push
fisubr
push
je
ins
xor
sbb
(bad)
sti
ds
ficom
jge
loope
idiv
loopne
mov
imul
cmp
ret
jle
test
add
lock
sub
(bad)
hlt
neg
aas
add
stos
in
ins
and
adc
inc
out
add
cmps
dec
clc
sbb
add
cli
test
cld
adc
in
lea
mov
sti
dec
clc
sbb
ins
mov
ret
push
and
lods
lahf
fcom
in
cmp
(bad)
dec
clc
or
add
lock
cmp
push
lock
ja
xor
pop
ret
ds
ret
(bad)
cmp
add
xchg
imul
jg
popa
mov
sub
pop
add
sub
or
push
loopne
lea
inc
jbe
or
ds
sti
sub
xor
xchg
sbb
cld
adc
or
adc
dec
or
jl
lock
lock
lock
add
stos
sbb
aam
add
dec
sbb
sbb
pop
add
add
or
fild
(bad)
sbb
jg
loopne
add
xchg
cmp
push
add
cmps
jmp
mov
aas
or
pop
shl
mov
fild
(bad)
sbb
or
push
clc
add
cmps
or
jle
(bad)
ds
jo
das
add
dec
rcr
js
sbb
cmps
sbb
jl
lock
sbb
jl
cmp
loopne
add
ja
or
jmp
dec
lahf
and
out
sti
into
das
stos
mov
xchg
ror
or
push
mov
mov
add
enter
cdq
mov
lea
out
add
xor
cwde
sahf
sahf
jmp
and
jge
not
movs
and
and
(bad)
or
outs
clc
adc
shr
outs
les
or
cld
mov
push
jl
dec
add
xchg
cmp
mov
cmp
(bad)
jmp
jge
loopne
cmp
inc
add
add
add
lahf
push
cld
lods
stos
in
loop
das
gs
jbe
shl
mov
ds
sub
cli
or
mov
into
stos
push
stos
mov
mov
push
push
in
add
pop
add
sbb
lahf
and
fild
inc
ror
jle
lock
ja
inc
outs
sbb
js
push
sti
push
loopne
and
pop
imul
out
lgs
movs
cmp
lock
(bad)
jnp
fdivp
icebp
sahf
and
mov
adc
mov
sbb
mov
rcl
pop
aaa
rol
mov
adc
out
sbb
dec
ror
dec
ficom
lock
sti
in
js
ret
mov
out
cmp
(bad)
jno
pavgb
or
push
mov
sar
fisubr
mov
loopne
add
mov
jg
sar
push
push
mov
fucom
lods
call
push
and
jecxz
pavgw
inc
aaa
add
xchg
das
mov
mov
ret
add
xchg
(bad)
int
push
push
jne
out
sbb
sbb
mov
dec
loopne
adc
ss
mov
mov
mov
sbb
fidiv
lea
ja
std
pop
loopne
and
pop
jecxz
xchg
icebp
(bad)
adc
ds
movs
daa
mov
je
repnz
out
inc
inc
aaa
jle
pop
xchg
pop
or
sti
js
sar
popf
js
ret
jnp
add
fisub
lock
(bad)
sti
xchg
sahf
call
mov
cmp
mov
mov
pop
imul
fimul
icebp
sahf
sar
adc
mov
mov
fwait
or
div
fimul
ins
mov
xchg
fild
cld
arpl
aas
add
retf
sbb
sti
movs
push
add
daa
lock
push
lock
push
lock
loopne
sub
mov
retf
jle
lock
punpckhwd
push
fstp
cmps
pushf
xor
add
daa
dec
clc
adc
cmp
jg
mov
jne
ret
pop
add
lahf
add
add
fbld
pop
pop
cld
mov
lahf
push
cld
sub
addr16
neg
add
and
aas
push
cld
and
jnp
call
lock
movs
popa
mov
shr
or
ss
scas
add
inc
shl
lar
or
or
dec
jno
iret
add
gs
add
and
arpl
loopne
sub
cld
push
loopne
or
(bad)
(bad)
scas
lock
add
jge
sbb
scas
push
out
cld
and
repz
adc
add
dec
dec
add
daa
cli
(bad)
mov
mov
stos
outs
and
loopne
add
cmp
das
add
sti
sbb
sub
sbb
add
imul
dec
mov
cmp
ja
stc
ret
invlpg
lock
cld
cmp
or
inc
fisttp
rol
lock
cmp
or
stc
and
clc
sub
pop
loopne
or
loopne
or
(bad)
call
lock
out
add
add
push
sar
loopne
add
fsubrp
xchg
inc
outs
daa
cli
jle
shl
xor
leave
jne
mov
add
sbb
cmp
and
mov
js
rcr
mov
add
jns
(bad)
mov
pop
clc
inc
shr
push
clc
adc
fwait
or
aas
add
jmp
aas
scas
leave
pop
test
pop
cmp
(bad)
xor
cmp
out
rol
fadd
ror
fiadd
jle
aaa
js
test
ins
mov
repz
(bad)
sti
xor
ins
jecxz
dec
dec
jbe
js
sar
mov
sbb
jge
aaa
js
pop
cmp
mov
out
imul
(bad)
loope
inc
xchg
das
sub
cmp
clc
inc
mov
jb
fisub
aaa
test
ss
ret
js
dec
sar
mov
mov
test
icebp
mov
mov
(bad)
stos
mov
sar
les
add
xchg
mov
int
aas
mov
mov
call
(bad)
div
fisttp
stos
dec
outs
pop
out
aaa
js
out
mov
fisub
pop
vmovaps
scas
lock
sar
sbb
add
jle
shr
mov
cmp
inc
js
jb
jg
ja
ficomp
aaa
adc
or
mov
imul
fwait
lock
shl
adc
or
and
xchg
push
mov
xchg
imul
sbb
fwait
js
shl
outs
(bad)
lock
inc
ror
or
xor
hlt
ret
js
(bad)
add
daa
lock
shl
cmp
lahf
push
(bad)
nop
cmp
inc
js
adc
psllw
ret
mov
and
push
cmp
fwait
jmp
lods
lods
test
sti
or
(bad)
adc
push
or
popf
pop
lock
lock
and
adc
jae
rcr
pushf
sub
jg
clc
sub
fwait
dec
clc
shl
aas
movs
mov
add
xchg
dec
clc
push
rol
aas
or
sub
addr16
fs
xor
and
into
mov
or
adc
rsm
push
out
fild
add
or
pop
sar
daa
mov
cmp
in
cmp
inc
add
aas
inc
ret
ficom
fisttp
jbe
aas
loope
pop
add
xor
(bad)
scas
stos
fwait
adc
ja
aas
stos
popa
mov
rcr
(bad)
(bad)
das
add
ret
lods
leave
pop
sub
test
add
or
sub
sbb
arpl
add
cmps
dec
clc
es
fstp
mov
(bad)
xor
aas
aam
dec
xchg
retf
cmp
cld
sub
xchg
fisubr
jne
clc
xor
pop
add
add
iret
add
dec
sub
or
add
mov
sbb
dec
ror
mov
pop
add
jg
jl
loopne
sbb
jl
loopne
mov
mov
gs
lods
jbe
adc
lock
mov
mov
repnz
loopne
push
push
imul
jmp
into
or
xchg
aaa
jecxz
mov
dec
lock
lock
jg
clc
popa
rcr
mov
loopne
xor
add
movs
or
push
arpl
add
sbb
add
pop
aam
jnp
clc
and
cmps
or
imul
add
mov
pop
jle
lock
or
lock
add
cmc
int
lahf
fadd
aas
push
cld
and
jnp
call
lock
pavgb
sahf
es
fcom
add
inc
shr
jle
lock
pop
add
ret
push
add
sub
jl
lock
xor
sbb
and
xchg
ss
(bad)
dec
imul
jp
mov
jge
out
cmp
mov
fidiv
push
dec
jbe
push
jne
std
pop
mov
mov
leave
jns
(bad)
adc
ds
inc
rcr
add
stos
pop
ret
sti
cwde
sahf
call
test
not
jg
div
mov
fwait
cmp
loopne
js
xlat
in
dec
(bad)
xchg
sar
ficom
mov
add
pop
add
pop
dec
jbe
js
loop
push
gs
ss
into
fisub
lock
(bad)
sti
and
pop
xor
imul
out
jnp
outs
aad
std
mov
std
arpl
xchg
repnz
and
jge
ja
xor
push
push
jecxz
dec
sbb
ins
mov
(bad)
mov
das
loope
xchg
or
std
push
ins
xor
outs
push
pop
shl
inc
shr
sbb
push
mov
idiv
test
or
aas
mov
(bad)
in
add
mov
ds
daa
cmp
dec
popf
push
lahf
fdivr
ficomp
ins
sti
les
aas
loop
out
(bad)
adc
cmp
push
pop
lock
and
daa
lock
(bad)
jnp
out
ins
add
fimul
aaa
mov
push
mov
mov
xor
dec
add
and
ss
add
add
and
test
in
add
clc
sub
aas
add
xor
in
and
out
pop
add
add
add
(bad)
fsubr
add
and
pop
stos
push
into
(bad)
dec
cmp
mov
cmp
xchg
stos
mov
add
push
shl
pop
cld
sub
mov
pop
add
sbb
jl
loopne
sbb
add
sbb
scas
add
clc
sub
fild
clc
sar
lahf
add
cs
add
shl
clc
jns
scas
test
mov
pop
ficom
iret
add
push
lock
pop
sbb
cld
sub
fwait
add
lock
sar
outs
add
xor
dec
daa
push
add
pop
js
xchg
push
inc
outs
push
aaa
sbb
(bad)
sbb
in
add
push
lock
sbb
aas
add
sbb
out
fbld
mov
fstp
ins
xchg
add
push
xor
rcr
arpl
add
fwait
add
mov
push
imul
clc
push
shl
jg
clc
sub
mov
shl
inc
shl
xor
lock
pop
stc
sbb
(bad)
cmp
cmp
sysexit
jmp
fwait
gs
sub
and
adc
ds
add
push
cld
push
add
stos
mov
jmp
mov
fisubr
add
pop
lahf
fdivr
aas
lods
aaa
cli
push
dec
hlt
sbb
push
ror
lods
cmps
shl
mov
jl
lock
jge
iret
add
cmps
pop
jbe
cmp
lods
mov
test
lods
dec
mov
out
add
xor
pop
add
or
mov
adc
lea
add
pop
js
gs
jbe
or
pop
lock
lock
xor
dec
jg
sbb
push
lock
xchg
jmp
mov
fisttp
clc
dec
shl
clc
sub
pop
add
mov
bound
xlat
add
fnstsw
jge
mov
scas
sbb
jnp
mov
(bad)
fadd
inc
cli
xchg
jnp
ja
add
shl
test
sub
cmp
fild
inc
jno
das
test
(bad)
stos
in
(bad)
or
xor
fidivr
popa
mov
js
(bad)
sti
and
sar
xchg
mov
lock
scas
dec
(bad)
lock
pop
lds
push
jbe
and
mov
or
mov
out
jno
jg
out
(bad)
icebp
dec
out
pop
mov
out
cs
test
dec
mov
mov
aaa
loop
xchg
imul
dec
ror
mov
sbb
out
jg
mul
std
rcr
jge
sbb
mov
cmp
stos
sub
jmp
pop
jns
test
loope
cmp
(bad)
fisttp
daa
icebp
fisubr
mov
inc
call
ficomp
jecxz
adc
mov
frstor
not
mov
fidiv
xor
mov
jl
out
in
js
ret
out
and
(bad)
ds
loopne
pop
ins
scas
xchg
push
icebp
mov
sti
adc
jp
out
xchg
push
out
mov
adc
int
and
ret
sub
iret
add
sbb
mov
lock
push
lock
and
mov
outs
mov
(bad)
xor
pop
add
or
xchg
das
in
ret
clc
pop
rcr
and
jecxz
aas
jno
loope
in
sbb
jl
lock
inc
lock
add
mov
loope
repnz
sbb
popf
or
or
pop
cli
test
cld
push
loopne
pushf
call
clc
xchg
fsubrp
daa
add
add
mov
cmp
add
jl
clc
inc
and
pop
lock
jecxz
out
add
mov
fild
clc
dec
add
pop
clc
xor
mov
iret
push
pop
push
cld
sbb
sbb
outs
gs
mov
outs
shl
mov
fcmove
call
gs
add
cld
adc
rol
or
pop
lahf
add
arpl
sbb
aas
pop
xor
into
sbb
jp
inc
(bad)
jge
mov
cld
and
jnp
call
movs
pop
jbe
sub
cld
and
lods
ins
mov
jle
sub
pop
in
mov
arpl
pop
loopne
xchg
pop
mov
into
mov
sub
ins
adc
sti
inc
jg
mov
lahf
add
mov
jle
psubb
push
clc
sbb
(bad)
adc
jns
outs
add
lock
add
mov
es
outs
(bad)
data16
lock
add
xor
dec
lock
sar
mov
or
lods
xor
sbb
jecxz
mov
loopne
add
xor
pop
add
mov
in
add
add
aas
psubb
lfs
add
push
sub
lods
cli
in
mov
shl
pop
dec
add
or
and
mov
out
in
ins
cmp
loopne
aam
addr16
lock
mov
lock
dec
lock
sar
mov
fld
icebp
mov
lods
call
mov
out
add
jecxz
dec
call
imul
mov
test
test
jg
idiv
dec
jmp
bnd
ret
mov
js
xchg
idiv
dec
shr
std
sbb
jns
iret
loopne
pop
lahf
lock
out
and
pop
jecxz
adc
mov
aam
std
leave
movs
or
xchg
neg
scas
jecxz
dec
shl
jge
out
sub
in
icebp
mov
pop
in
loop
mov
xchg
ret
ficom
pop
outs
ins
xor
js
and
jecxz
outs
and
div
pop
mov
dec
out
adc
jecxz
iret
loop
or
xlat
push
out
sar
fimul
mov
push
dec
ss
lahf
rcr
mov
test
scas
push
ret
out
rcr
out
jmp
sub
ins
pop
lods
xor
add
test
out
jae
jl
out
and
xchg
imul
(bad)
ret
(bad)
sti
xchg
mov
std
dec
(bad)
lock
js
rcl
mov
pop
(bad)
fidiv
cld
sub
dec
icebp
sahf
loop
out
(bad)
sti
sub
pop
fild
(bad)
adc
cli
(bad)
mov
out
loopne
cmp
pop
loopne
pop
aas
xchg
add
std
pop
adc
test
cdq
jmp
or
pop
mov
fisub
add
pop
stos
outs
mov
stos
push
outs
stos
call
jae
mov
mov
adc
stos
or
add
push
rcr
fst
loopne
add
or
add
dec
clc
mov
loope
jne
jg
ret
addr16
call
dec
clc
dec
adc
push
clc
imul
vmread
mov
fidiv
shl
js
das
shr
lock
fadd
loopne
sub
(bad)
stos
outs
in
lea
add
sbb
xchg
aas
cmps
aaa
jp
sub
add
jg
clc
dec
shl
add
rol
jp
lock
shr
add
push
cld
inc
dec
hlt
pop
dec
lock
sar
mov
popf
lock
neg
lods
lods
adc
adc
mov
(bad)
push
outs
hlt
jge
pop
add
push
push
jbe
cmp
sub
sub
ja
clc
xor
fisttp
clc
cs
cmps
rcr
adc
sbb
(bad)
hlt
daa
pop
add
ja
daa
ja
mov
lock
fild
mov
cmp
lahf
test
xor
int
mov
clc
mov
call
lock
ror
clc
xchg
(bad)
sar
js
test
pop
cld
add
and
clc
jno
call
clc
sub
aas
add
push
popf
call
add
data16
leave
fld
mov
jl
mov
cs
xor
clc
or
jbe
aas
add
push
aas
and
lods
adc
lock
gs
movs
cli
add
adc
sub
mov
lahf
add
or
add
mov
adc
ss
ss
cmps
cmp
pop
mov
(bad)
push
retf
jle
lock
int
stos
dec
scas
(bad)
and
aaa
scas
cmc
adc
fisubr
out
fstp
push
mov
inc
shr
cmp
mov
imul
mov
ja
pop
cdq
and
sti
lock
jmp
ins
xchg
popf
lods
lahf
mov
mov
lock
(bad)
mov
ror
outs
stos
mov
xor
pop
loope
mov
xchg
loope
push
aam
mov
neg
add
xor
mov
sti
sbb
pop
or
sub
std
add
sub
mov
pop
test
dec
shl
cli
dec
xchg
das
push
icebp
mov
add
sar
mov
js
rcr
js
pop
js
ret
out
mov
dec
sbb
out
sahf
push
shr
leave
outs
add
(bad)
js
add
xchg
cmp
xor
lea
ficomp
jle
out
mov
outs
and
fwait
in
add
inc
js
aas
clc
mov
popf
js
loopne
add
mov
div
fldcw
sbb
ficomp
mov
sub
jg
daa
cli
cs
outs
lock
iret
loope
push
mov
and
aam
jmp
push
jbe
adc
push
mov
sar
lock
rcr
jl
fiadd
mov
or
dec
out
jno
pop
push
in
adc
inc
and
js
ret
sti
cwde
fnstsw
ins
cmp
cmp
lods
jmp
lahf
sub
fld
xchg
add
daa
loope
add
test
das
xchg
lock
ror
and
sbb
and
lea
lods
mov
rol
pop
loopne
and
push
lock
sar
lahf
lock
clc
or
daa
add
push
scas
add
(bad)
adc
int
mov
test
pop
cld
adc
jmp
jle
shr
lea
lock
mov
stos
outs
pop
scas
lahf
mov
mov
push
out
or
xlat
sub
ds
and
cli
mov
pop
pop
mov
push
sar
clc
pop
sar
pop
rcl
fimul
js
loopne
xor
mov
cld
jnp
scas
add
add
sar
pop
add
inc
rcl
lock
or
call
loopne
add
js
loopne
xor
fiadd
add
arpl
jg
lock
or
xchg
cli
pushw
inc
lock
jb
jg
js
add
push
mov
mov
mov
aaa
xor
clc
and
xchg
sahf
in
push
hlt
inc
lahf
loop
pop
add
rol
pushf
push
ret
mov
cmp
mov
jbe
sbb
mov
lock
jl
loopne
jmp
lock
or
or
and
ds
cmp
dec
add
retf
pop
ins
pop
loopne
or
out
add
add
mov
mov
pop
es
add
or
sub
mov
addr16
sbb
scas
add
add
inc
add
xor
pop
(bad)
dec
pop
shl
mov
add
adc
pop
pop
daa
loopne
repnz
loopne
jp
or
loopne
hlt
daa
addr16
das
push
add
and
add
add
mov
add
sub
dec
adc
push
shl
add
sbb
fisubr
jne
neg
out
clc
xor
fistp
ret
jnp
inc
pop
jne
retf
div
add
es
sub
fnstsw
std
inc
sti
movs
lods
xor
or
pop
js
jne
(bad)
aaa
mov
jne
push
push
mov
loope
mov
cmp
sbb
fisubr
lock
fcmovb
fsub
mov
sbb
(bad)
loopne
pushf
sub
push
out
cmps
js
push
arpl
sub
sti
in
xchg
mov
xchg
stos
sar
inc
sar
dec
cmc
inc
pop
mov
sahf
mov
dec
cmp
aas
sar
mov
push
mov
(bad)
sti
cmp
xchg
outs
jg
lea
mov
in
fidiv
ffreep
jnp
fisub
js
aas
mov
clc
jae
(bad)
or
arpl
jecxz
adc
inc
repnz
aad
retf
out
or
cmp
mov
or
dec
mov
mov
push
int
fisub
pop
sar
shl
es
js
(bad)
sti
push
ficom
xlat
lock
es
icebp
jle
out
and
cld
pop
lahf
pushf
dec
mov
or
or
xchg
mov
mov
mov
mov
inc
ins
mov
cld
add
outs
dec
js
loopne
mov
jbe
adc
or
test
(bad)
fadd
test
shl
and
sub
rcr
jp
inc
frstor
in
fwait
mov
mov
jl
loopne
sbb
or
mov
adc
cmp
inc
loopne
xchg
popf
xor
int
add
lock
shr
inc
gs
jmp
mov
ds
and
xor
cmp
scas
add
add
xor
fisttp
clc
or
out
jmp
jmp
loopne
add
jp
loopne
xor
fiadd
ins
std
les
jle
lock
jle
or
ret
aad
ds
rcr
jnp
outs
add
std
and
inc
add
pop
add
shr
add
mov
dec
add
shr
outs
hlt
jno
jle
lock
aad
jo
fild
jl
cmp
mov
or
mov
pop
sar
pop
sub
dec
hlt
push
sar
jle
clc
xchg
dec
jbe
pushf
call
hlt
fs
shl
std
test
pop
push
lods
sub
fstp
loopne
add
mov
mov
mov
fild
lea
mov
jbe
sbb
in
adc
add
cmp
xchg
mov
ds
cmp
push
shl
xor
jle
lock
mov
imul
add
inc
or
fisub
pop
ins
adc
std
add
adc
adc
lock
mov
adc
imul
mov
mov
shr
adc
pop
shr
lock
shr
ins
and
jnp
daa
cli
sub
ja
fiadd
push
inc
outs
sub
pcmpeqw
js
es
xor
lea
jecxz
xchg
aam
call
fimul
icebp
ds
rcr
stos
cmp
jb
cld
adc
das
aad
imul
loop
jmp
scas
sar
push
mov
dec
hlt
ss
cs
rcr
fmulp
mov
scas
loop
mov
stos
stos
dec
loop
pop
push
jbe
fisubr
das
outs
mov
pop
xlat
dec
clc
add
psllw
outs
loopne
call
or
movs
inc
js
loop
iret
xor
sub
sbb
fild
cmp
out
loopne
xor
mov
jge
fidivr
push
mov
dec
hlt
sbb
fimul
lock
(bad)
lock
or
mov
add
out
inc
js
aad
cdq
nop
sahf
in
or
sub
xchg
pop
pushf
sbb
stos
sbb
sbb
faddp
cmp
lahf
push
test
sbb
out
mov
(bad)
jnp
sbb
cmp
adc
push
add
inc
sar
xlat
jno
scas
and
mov
push
mov
xchg
cmp
out
jne
scas
and
mov
inc
sar
repnz
jg
mov
or
js
xor
aas
or
jne
jmp
pop
add
scas
std
push
mov
pop
add
add
sti
add
add
cmp
dec
push
gs
clc
ror
ds
clc
add
dec
add
aad
leave
and
outs
adc
aaa
sbb
fild
jl
lock
mov
mov
test
jle
lock
jp
imul
push
loopne
sbb
mov
or
add
add
cs
aas
mov
dec
daa
cli
test
fwait
test
ja
fiadd
js
pop
aad
inc
imul
add
jne
pop
pop
ins
xchg
sbb
mov
imul
rcr
outs
ret
push
push
cs
shr
sbb
popa
shl
jle
lock
out
sub
arpl
sub
cmp
es
add
ins
mov
add
lahf
lock
mov
ds
xor
in
fisttp
clc
adc
arpl
add
and
clc
push
shl
popf
add
dec
sub
pop
mov
outs
push
lock
lahf
jmp
dec
add
sbb
clc
and
cld
cmp
imul
dec
add
add
xor
or
xor
push
clc
and
add
add
or
fiadd
fld
mov
test
addr16
inc
cmp
js
xchg
sti
inc
shr
add
retf
mov
pushf
call
sub
shr
fwait
or
imul
xchg
(bad)
in
add
out
add
cmps
cmp
lock
int
fiadd
js
rol
aas
or
jns
daa
add
add
jge
leave
pop
add
adc
lock
sbb
rcr
cmc
add
lock
shl
lock
sub
jge
out
popa
popf
call
arpl
mov
int
in
dec
repz
sbb
mov
out
mov
mov
dec
mov
or
jbe
lods
lahf
js
out
xor
outs
mov
adc
mov
out
inc
add
lahf
ss
push
loopne
xchg
mov
add
xor
ds
pop
fucom
aaa
icebp
mov
fist
pop
push
out
and
(bad)
jnp
out
arpl
and
outs
mov
bound
sahf
in
jp
clc
xor
daa
lock
(bad)
sti
mov
outs
sbb
ds
push
push
jmp
jg
div
lock
xor
fld
pop
out
cs
lods
rcl
mov
out
imul
loopne
js
and
(bad)
jnp
fidivr
or
and
xlat
icebp
ds
rcr
call
into
stos
push
mov
outs
sbb
cmp
fldenv
loopne
adc
sbb
sub
push
sbb
jnp
out
cmp
lock
mov
sbb
hlt
pop
mov
loopne
call
scas
jmp
imul
mov
faddp
sub
push
mov
out
lock
out
mov
cmps
mov
cmp
test
(bad)
adc
jmp
clc
sbb
scas
add
shr
push
in
loopne
xor
ret
inc
add
jg
fst
cmp
inc
and
or
add
add
inc
fst
add
and
inc
add
add
and
add
cmp
mov
xchg
fild
cld
adc
repz
movs
dec
hlt
adc
rol
add
jbe
add
xor
stos
outs
ret
mov
cmp
pop
retf
in
or
jno
(bad)
push
push
fild
mov
push
jne
add
xchg
cmc
or
mov
adc
sub
fild
jl
lock
or
pop
lock
(bad)
adc
popf
sbb
mov
add
push
shl
pop
daa
cli
dec
shl
jne
cmp
pop
or
pop
sub
xor
add
loopne
and
pop
and
clc
pop
lea
lock
or
jle
lock
sub
jle
cmp
jl
lock
ins
adc
addr16
je
or
sub
aaa
push
jne
loopne
add
mov
mov
add
clc
add
addr16
pop
jl
adc
lock
xor
ins
mov
aad
mov
lock
add
or
sub
sbb
cld
sub
or
xchg
cmps
push
das
adc
xor
mov
stos
pop
add
adc
repz
or
jge
(bad)
adc
std
sbb
pop
shr
fdivrp
data16
mov
fwait
add
or
mov
add
add
add
jnp
clc
push
in
xchg
mov
mov
jle
lock
mov
mov
sbb
clc
ja
pop
add
loopne
add
pop
lock
aad
or
jno
pop
lock
ret
jnp
fiadd
fdiv
imul
jge
adc
out
jnp
mov
call
mov
push
xchg
shl
mov
out
adc
jbe
(bad)
or
cmp
dec
loopne
xor
mov
test
xchg
das
sar
sar
inc
push
out
pop
add
lods
sbb
ret
sti
or
(bad)
imul
push
lods
sbb
sahf
mov
fild
sub
idiv
rol
push
loop
aas
inc
shl
mov
not
or
mov
pop
js
loope
cwde
sbb
ins
std
inc
nop
or
or
push
out
inc
cli
or
add
int
(bad)
jecxz
sbb
(bad)
fidivr
xor
icebp
fisubr
pop
sub
adc
(bad)
fdiv
stos
in
(bad)
sti
xor
jg
div
hlt
cmp
sbb
out
ss
ficomp
loope
js
ret
fidiv
pop
les
cli
bound
jg
cmp
mov
jnp
out
ret
out
call
out
cmps
cli
xchg
mov
lahf
(bad)
sti
sub
addr16
sahf
and
sti
push
je
ret
sti
movs
cli
bound
js
sar
fisubr
fiadd
push
loopne
dec
inc
aaa
dec
pop
aaa
ror
mov
add
imul
jb
sbb
loope
call
rcr
push
dec
mov
in
sub
add
add
push
mov
outs
hlt
or
scas
add
lock
rcr
sbb
add
jmp
sub
xlat
add
cmp
lock
loope
add
clc
cwde
xchg
fiadd
xor
scas
add
ret
adc
shr
adc
lock
popf
pop
loope
lods
jbe
lock
and
clc
pop
xor
fld
push
pop
clc
sbb
jnp
js
loopne
xor
mov
call
aas
add
add
loopne
sub
loopne
cli
test
outs
dec
jbe
shr
jle
lock
pop
jle
lock
aas
add
jp
pop
push
aad
pop
loope
jmp
cld
xor
and
cmps
push
test
ja
or
lock
sub
daa
mov
lock
xor
(bad)
dec
pop
daa
jl
lock
sbb
jl
lock
push
add
xchg
add
lock
mov
stos
or
xor
mov
lahf
mov
fdiv
ret
inc
imul
out
push
mov
scas
cmp
cld
sub
lods
dec
clc
lods
lahf
or
mov
cld
and
mov
inc
or
jbe
cmc
int
test
out
jmp
push
shr
xor
or
cmp
sbb
push
add
adc
jae
pop
pop
add
inc
xor
adc
or
xor
mov
sbb
sar
jl
add
add
add
movs
inc
clc
cmp
daa
add
add
add
addr16
xor
inc
rcr
jge
out
jge
(bad)
loopne
sbb
mov
test
sub
pop
js
es
call
addr16
ds
shr
fst
int
jecxz
sbb
pop
mov
jmp
(bad)
lock
fmul
mov
lock
(bad)
sti
lods
retf
xor
ret
fnstenv
iret
lock
xor
fstp
fld
sti
lock
push
out
and
loopne
movs
cmc
adc
mov
out
adc
inc
out
push
gs
(bad)
sti
or
(bad)
icebp
pop
cmp
cs
mov
ror
jge
out
add
xor
out
(bad)
ficom
popf
push
and
sbb
ret
js
ret
(bad)
js
and
daa
lock
les
fisubr
dec
add
int
outs
les
(bad)
(bad)
cmp
inc
lock
div
cmp
pop
push
mov
mov
out
mul
sbb
add
mov
jl
fisubr
mov
cmp
fcmovnb
sti
sbb
in
leave
out
sbb
add
inc
push
aad
adc
iret
lock
add
ja
(bad)
js
loopne
movs
fst
mov
fisub
pop
mov
cmp
aaa
imul
hlt
fs
shl
xchg
or
add
das
icebp
push
(bad)
add
mov
rol
aas
clc
push
mov
push
outs
hlt
mov
or
mov
cmp
loope
push
outs
or
int
cld
or
scas
lea
loope
sub
out
add
mov
or
push
rcl
lock
add
mov
mov
inc
ret
inc
lahf
add
sub
jg
clc
add
inc
or
cmps
cmp
inc
rcr
and
inc
add
aas
push
clc
or
pop
add
add
aas
shl
cmp
add
ss
fidivr
dec
ret
adc
xor
call
sti
sbb
add
pop
aas
xor
jmp
add
and
in
dec
outs
sbb
repz
jge
dec
imul
sub
or
push
cli
xchg
fwait
add
fiadd
clc
addr16
ja
pop
add
loopne
add
pop
lock
rcr
pop
pavgb
add
push
data16
pop
clc
es
add
xor
(bad)
mov
mov
mov
cld
sbb
scas
cmc
fs
xor
fwait
or
call
bound
gs
sti
add
and
mov
das
mov
clc
sub
fisttp
clc
inc
shl
or
push
add
xor
cmps
out
add
or
add
sub
aas
add
jno
addr16
pop
rcr
jge
lock
rcr
sub
add
ja
xor
or
add
cdq
pop
jbe
rcr
fnstsw
jle
lock
fmulp
call
loopne
add
clc
mov
mov
clc
xor
popa
shl
jle
lock
rcl
(bad)
sbb
imul
add
loopne
add
pop
lock
fucom
jnp
mov
shl
mov
mov
clc
rol
sbb
call
int
adc
sbb
push
iret
lock
ret
sti
xchg
test
cdq
adc
mov
cmps
icebp
jle
idiv
mov
xor
xor
div
mov
(bad)
lock
ret
ror
fidivr
push
mov
jnp
daa
cli
sub
cld
push
fisubr
lods
pop
out
(bad)
push
imul
outs
jecxz
add
jno
imul
jge
out
imul
ins
dec
jbe
js
sar
sbb
retf
js
push
lahf
(bad)
jnp
fmulp
push
push
cmp
cmp
sbb
jb
jne
sub
jle
add
pop
icebp
ds
sar
pop
mov
addr16
fisubr
out
lds
frstor
jg
imul
mov
(bad)
sahf
adc
xor
lea
ficomp
sub
sbb
inc
out
pop
mov
mov
icebp
(bad)
sub
mov
gs
mov
inc
ins
xor
out
mov
inc
or
popa
mov
mov
add
ret
push
ror
jbe
lods
mov
dec
loop
lahf
sub
sbb
mov
out
sbb
ins
mov
pop
pop
lahf
pushf
lea
and
add
inc
add
push
push
fldenv
fidivr
push
mov
ret
verw
mov
loope
add
in
outs
dec
clc
imul
jp
aas
inc
ret
fwait
nop
sbb
aam
xchg
aad
add
pop
mov
lahf
add
rcr
push
fstp
fstp
jno
invlpg
xchg
pop
adc
mov
ficomp
in
and
ds
add
ret
jle
dec
jbe
shr
mov
dec
add
or
mov
inc
daa
xor
add
fcomp
loopne
push
push
imul
pop
add
cmps
mov
push
xchg
rol
add
clc
rol
add
or
cs
dec
add
clc
cmp
out
adc
pop
add
add
sbb
xchg
cmp
cld
mov
sub
xor
lahf
push
cld
adc
pop
aam
fisttp
clc
pop
add
or
and
aas
add
and
dec
ror
dec
add
and
ins
mov
ins
mov
(bad)
daa
sbb
push
je
dec
shr
lock
add
adc
jnp
lahf
aad
retf
(bad)
(bad)
add
sbb
pop
add
mov
dec
jg
mov
call
clc
sbb
jnp
sar
out
and
sbb
std
ss
or
xor
mov
loopne
aad
xchg
and
lahf
add
jbe
shr
mov
hlt
sub
ss
out
sbb
push
je
shr
sub
push
add
push
lock
add
dec
lock
inc
mov
out
outs
sub
repz
xor
outs
add
jl
lock
sbb
jl
lock
cld
mov
in
sbb
arpl
pop
push
mov
sbb
mov
aad
pop
(bad)
sti
es
lock
mov
jecxz
(bad)
mul
mov
jg
sub
add
xor
dec
aad
std
sbb
mov
jnp
out
(bad)
mov
cmps
mov
fwait
pop
loopne
jmp
mov
xlat
mov
adc
daa
js
ficomp
jl
xchg
pop
or
xchg
js
ret
jnp
out
pop
js
rol
leave
or
mov
ficom
sahf
ret
sti
add
fnstsw
std
or
pop
pushf
call
jnp
stos
push
dec
into
push
hlt
arpl
loop
sbb
shr
mov
add
daa
lock
shl
jge
out
mov
outs
and
and
div
mov
je
lea
sahf
call
mul
div
ds
rcl
jge
mov
and
pop
shl
mov
pop
and
daa
or
xor
scas
lock
icebp
outs
mov
cmp
out
xlat
test
(bad)
or
dec
mov
call
or
mov
lods
test
sar
adc
xchg
mov
mov
adc
dec
or
rcr
sbb
xlat
xor
mul
cmp
(bad)
adc
push
inc
jg
rol
mov
add
inc
rol
fild
mov
pop
add
adc
das
add
dec
cmc
inc
fisttp
clc
cmp
pop
aam
mov
lock
not
add
inc
ret
std
inc
sub
pop
add
loopne
xor
fisub
sti
add
add
xor
outs
adc
add
push
ret
fild
aam
xor
clc
pop
shl
mov
pop
fisttp
or
jl
dec
hlt
push
push
imul
scas
add
fiadd
out
fbld
xchg
lock
or
mov
(bad)
lock
sbb
mov
add
or
add
out
add
add
retf
ins
sbb
fsubrp
mov
loopne
sbb
pop
loope
xor
out
add
sbb
fisttp
out
adc
dec
add
adc
or
lahf
add
cmp
out
clc
or
mov
lock
add
inc
sar
cli
mov
sar
es
pushf
call
or
rol
jne
ret
fbld
loop
sbb
sahf
sub
jl
inc
pop
sub
mov
clc
adc
mov
aas
or
loopne
pushf
call
dec
mov
lock
popf
call
xchg
das
ins
mov
or
das
mov
mov
iret
add
sbb
add
and
lahf
add
mov
dec
gs
daa
ja
clc
dec
rcr
jge
pop
add
das
xor
bound
lock
lock
mov
sub
add
dec
add
pop
add
scas
retf
adc
lock
clc
and
cli
ds
mov
jle
lock
stos
stos
or
jno
lahf
add
lock
lock
ins
jne
clc
popa
int
stos
add
inc
rcl
fimul
js
loopne
xor
add
pop
ror
jle
out
adc
add
std
js
imul
js
sar
fisub
js
xlat
xor
or
xlat
lock
add
fiadd
push
mov
test
inc
out
fistp
and
pop
mov
sbb
cmps
sub
fdivp
js
push
sar
pop
mov
pop
loop
mov
stc
ret
dec
shl
mov
mov
mov
jl
fisubr
xlat
push
inc
mov
cmps
mov
mov
aam
(bad)
not
faddp
js
loop
outs
mov
sbb
mov
out
sar
loopne
add
ins
daa
loopne
lock
sti
movs
inc
xor
(bad)
push
dec
push
jmp
out
push
out
das
sbb
mov
sbb
pop
loop
shr
(bad)
loopne
icebp
(bad)
pop
shr
mov
test
outs
shr
sbb
(bad)
sti
sbb
outs
lock
mov
sbb
jmp
xor
add
test
ds
and
inc
xor
cli
and
xchg
mov
add
mov
test
ds
mov
rcr
repnz
mov
(bad)
in
jge
lock
push
fld
rcr
inc
cmp
mov
mov
jp
pop
rol
pop
dec
clc
add
add
test
pop
or
sbb
jnp
js
loopne
xor
add
cmp
push
add
aaa
xchg
lock
push
imul
jl
or
inc
and
adc
call
loopne
add
fstp
xchg
(bad)
loopne
mov
pop
test
pop
add
or
mov
and
repz
sti
movs
outs
add
clc
pop
shl
jg
js
test
add
lock
test
xlat
add
or
dec
hlt
cs
hlt
push
shl
jg
xchg
lock
das
add
outs
hlt
push
lock
or
jle
lock
sbb
add
inc
shl
add
add
lahf
lock
out
add
test
call
add
or
mov
call
clc
xor
jg
clc
arpl
cmps
add
add
sub
fwait
imul
pushf
call
rcr
jge
loopne
mov
stos
push
lock
add
aaa
add
js
daa
jp
loopne
xor
shl
dec
add
lock
or
hlt
cmps
add
and
rol
fsubrp
aaa
add
add
sub
cmps
add
movs
aaa
cli
cmp
fist
add
xor
ds
inc
shl
lock
ror
ds
mov
cli
and
clc
or
jg
clc
ss
sbb
jge
cld
wbinvd
clc
ja
icebp
inc
pop
ror
sbb
cmp
jg
shl
stc
ret
xchg
jg
clc
jno
inc
lock
lock
sub
sbb
sti
add
adc
and
cmc
inc
outs
dec
jbe
sbb
mov
loopne
or
sub
fwait
xor
jle
lock
rcr
jmp
clc
popa
test
(bad)
add
(bad)
xor
rcr
(bad)
in
cdq
gs
rcr
mov
xchg
pop
loop
lds
sahf
call
mov
hlt
popa
add
xor
cmp
inc
mov
xor
fwait
(bad)
jnp
fisub
mov
ror
mov
mov
inc
inc
aaa
pop
or
dec
mov
cmp
sbb
and
inc
mov
xor
leave
into
ss
pavgw
cmps
push
jecxz
(bad)
test
mov
push
mov
test
xor
mov
mov
add
jno
out
jmp
mov
fwait
or
and
std
xchg
sbb
imul
fwait
pop
jmp
das
addr16
es
fiadd
popa
mov
sub
mov
(bad)
arpl
arpl
nop
inc
(bad)
dec
clc
sub
mov
fst
jge
out
imul
mov
fimul
or
pop
adc
int
(bad)
loope
or
push
js
jecxz
mov
pop
fidivr
sar
outs
mov
repnz
(bad)
bound
push
mov
sbb
cmps
add
clc
adc
fwait
sub
mov
jbe
and
or
cli
and
clc
ins
shr
jge
aaa
add
retf
adc
stos
or
fild
jl
xchg
jbe
std
test
mov
jmp
aas
add
sbb
pop
jmp
pop
pop
clc
sbb
fcomi
dec
aaa
loopne
inc
ret
sub
xor
mov
pop
ror
add
cli
test
das
add
push
clc
xor
lahf
add
inc
ret
fild
fild
sbb
pop
ins
pop
ret
push
loopne
call
call
cld
adc
out
out
lahf
and
aaa
mov
call
std
push
mov
stos
push
ret
retf
leave
stc
add
inc
sar
pop
inc
rcr
dec
aaa
loopne
inc
ret
sub
mov
ds
sub
ja
lock
sub
lock
shl
aaa
xchg
call
mov
adc
fwait
or
loopne
mov
loopne
or
or
gs
push
sbb
mov
jle
lock
mov
xor
add
lea
mov
jmp
loopne
add
xor
(bad)
in
retf
xchg
add
call
loopne
add
sub
dec
mov
add
or
cmp
mov
scas
dec
add
push
sbb
cld
sbb
ret
cmp
cld
mov
dec
lods
add
jge
(bad)
sbb
lock
sub
retf
das
adc
push
rcr
dec
jbe
sar
lock
add
xchg
outs
add
push
xor
shl
dec
dec
add
or
mov
lahf
and
out
fild
add
xchg
fild
mov
fwait
pop
jns
dec
clc
xor
aas
lods
popa
mov
push
outs
xchg
sbb
xchg
push
data16
or
cmp
aas
lea
jne
sti
movs
ins
inc
hlt
xor
mov
add
ret
add
pop
fmulp
lock
(bad)
sti
add
mov
xor
rcl
std
fst
fld
pop
lock
sar
ficomp
pushf
cmp
cmp
or
popf
call
fisub
push
sar
fisub
jbe
and
repnz
push
jbe
inc
pop
xchg
ja
daa
addr16
push
lock
pop
imul
mov
hlt
cmp
js
xor
scas
lds
(bad)
ret
jnp
push
mov
sar
loopne
icebp
(bad)
push
fisubr
sar
out
(bad)
mov
sub
sar
sar
test
or
xor
(bad)
icebp
push
ret
jnp
outs
lock
mov
clc
pop
mov
popa
lods
lods
test
jl
(bad)
loopne
lock
test
jl
sti
in
lock
mov
push
cmp
popf
or
pushf
sbb
ret
sahf
call
jbe
or
clc
add
or
push
fisub
lock
ret
fiadd
or
sub
out
arpl
(bad)
mov
xor
inc
shl
js
sub
out
xchg
lock
int
fiadd
js
cli
data16
add
ja
xlat
sub
mov
mov
adc
lock
pop
or
dec
ret
xchg
pop
and
mov
cli
test
ds
ret
jle
lock
ja
jle
lock
(bad)
adc
ret
or
(bad)
adc
mov
cs
clc
dec
shr
fidivr
in
add
mov
pop
jmp
pop
add
mov
out
rcr
jge
gs
fistp
lock
mov
xor
add
push
sti
pushw
add
(bad)
mov
call
lods
(bad)
shr
mov
push
xchg
clc
inc
std
leave
lds
adc
retf
pop
loope
or
or
xor
pop
push
inc
add
fild
js
loopne
ficomp
imul
mov
lock
lahf
add
xor
sbb
daa
ja
clc
jne
inc
cmp
sti
add
sub
loopne
sub
and
mov
std
cmps
(bad)
in
xchg
fst
(bad)
dec
les
fild
ja
sbb
lock
rcr
(bad)
loopne
je
pop
add
or
inc
jne
inc
add
add
add
loopne
add
cmp
rcr
dec
cmps
outs
push
xchg
pop
or
inc
rcr
sbb
jl
sbb
add
in
sbb
or
add
in
cli
or
sub
mov
pop
loopne
add
mov
fild
mov
call
movs
add
clc
xor
lods
retf
lock
aaa
push
push
sahf
sbb
xlat
add
lahf
add
cmp
sub
fiadd
clc
cmps
cmp
sbb
out
sar
mov
in
shr
xchg
cmp
jnp
sti
movs
ins
mov
or
push
mov
fs
jne
sub
mov
repnz
mov
div
lods
popa
mov
popf
call
push
gs
popa
std
leave
sbb
into
icebp
mov
(bad)
not
(bad)
neg
(bad)
loope
xor
sub
jbe
mov
cmp
xchg
ror
and
xor
add
mov
add
cli
add
loop
mov
jge
out
repz
sub
ins
(bad)
cmp
pop
adc
add
mov
mov
out
shl
lock
shl
fimul
iret
loope
inc
shr
xchg
(bad)
rcl
js
loopne
sbb
push
out
popf
js
rcr
jl
pop
cli
sbb
sbb
ds
lock
push
xchg
fnstsw
arpl
test
fmulp
call
not
inc
lock
rol
mov
aad
loope
pop
or
lock
ficom
push
jmp
mov
adc
sar
(bad)
mov
int
icebp
fiadd
jb
mul
mov
fisttp
xor
mov
div
xchg
retf
inc
jg
mov
jmp
mov
fisubr
jl
or
add
cmp
daa
add
arpl
push
or
rcr
in
add
cli
push
dec
hlt
pop
scas
lock
cmp
lahf
push
mov
dec
js
das
xor
rcl
(bad)
imul
loopne
std
test
lock
sar
push
sar
or
loopne
xor
sub
(bad)
mov
mov
scas
lock
ds
cmc
adc
dec
add
sbb
cmp
pop
lock
pop
loope
sub
and
push
or
pop
and
xchg
test
clc
cmp
xor
mov
aaa
arpl
arpl
sbb
xchg
popf
mov
pop
add
or
in
mov
jg
js
add
clc
jbe
fistp
jge
lock
std
or
inc
add
mov
fisttp
clc
add
inc
add
loop
fild
mov
lods
mov
push
aaa
push
dec
hlt
ds
(bad)
jmp
scas
add
add
cmp
ins
js
in
fwait
mov
push
mov
outs
or
test
loopne
add
add
sub
fwait
add
data16
loop
lock
lock
or
mov
mov
aaa
pop
or
mov
shr
stos
mov
lock
stos
cmp
and
cmp
ins
(bad)
mov
jbe
lock
mov
add
jmp
lea
sbb
jl
loopne
add
mov
sub
loopne
ficom
mov
pop
add
mov
or
lods
adc
jg
xor
pop
loopne
pop
aas
xor
clc
cmp
daa
add
or
adc
jg
clc
or
inc
add
shl
push
pop
push
arpl
lea
cmp
retf
lods
xor
scas
sti
sbb
addr16
clc
adc
outs
add
or
rcr
mov
neg
jl
out
add
(bad)
jnp
sbb
and
mov
mul
out
jnp
mov
lods
retf
mul
lea
push
gs
not
mov
mul
fbld
loopne
lock
ret
ficom
outs
jg
jge
out
ror
imul
xor
sbb
das
or
sbb
ja
fst
(bad)
fidivr
loope
icebp
mov
fimul
(bad)
jecxz
xor
mov
adc
retf
jnp
sbb
(bad)
lock
test
cmp
outs
adc
fisttp
js
xchg
mov
aam
jmp
aad
jecxz
add
ss
bound
out
dec
push
mul
jge
shr
dec
adc
loop
adc
lods
(bad)
sahf
call
jb
dec
into
inc
pop
mov
cmp
js
aad
stos
jae
aad
loop
dec
aaa
clc
push
mov
les
mov
out
ss
push
lock
fisubr
out
lds
frstor
out
mov
fcomi
jle
imul
fidiv
ds
jge
xor
loope
pop
and
sbb
sahf
and
cmp
fiadd
mov
icebp
mov
fwait
ss
scas
test
jae
lahf
xchg
lock
lock
aas
push
jl
dec
jbe
and
call
clc
or
inc
sub
push
lock
adc
dec
xor
outs
sar
sar
cli
test
in
add
mov
lahf
out
aas
scas
popa
mov
aaa
jae
clc
sbb
cmps
add
nop
ins
add
xchg
retf
add
inc
ret
aas
dec
ret
xor
imul
rol
clc
pop
shl
adc
push
shr
jle
jg
mov
pop
jg
lea
or
cli
sbb
outs
xchg
lock
retf
dec
add
or
mov
test
adc
ins
sub
sub
or
xor
out
mov
shr
ds
arpl
mov
ja
fimul
clc
adc
test
loopne
add
push
mov
push
jg
mov
push
lock
or
inc
adc
sbb
pop
push
clc
or
mov
mov
or
and
and
xor
ss
mov
stos
xchg
xor
(bad)
cmp
or
loopne
xor
push
sbb
loopne
add
clc
xor
(bad)
sub
sti
or
cmp
out
inc
jb
or
mov
fdivrp
in
or
and
or
inc
pop
pop
cld
cmp
aas
stos
or
dec
xchg
das
loop
movhlps
sub
add
mov
add
xchg
sub
dec
add
aad
jge
loopne
pushf
call
clc
xchg
add
and
mov
add
pop
mov
ins
aad
clc
jle
out
aas
scas
pop
jbe
fisubr
pop
ds
sar
lahf
aam
cdq
push
rol
add
(bad)
or
fxam
add
shl
ror
gs
dec
rcr
jle
push
mov
inc
rcr
(bad)
(bad)
mov
push
(bad)
test
leave
pop
mov
retf
hlt
loope
(bad)
int
loope
sbb
xor
or
idiv
ror
(bad)
adc
and
loopne
add
(bad)
call
xor
movs
or
lea
dec
mov
fiadd
sbb
jle
xchg
mov
jb
add
sbb
or
loope
pop
xor
ret
ficom
mov
jnp
icebp
fs
outs
inc
icebp
mov
je
ret
inc
ror
fistp
xor
xor
mov
pop
push
and
pop
js
xlat
add
adc
sbb
mov
test
mov
mov
icebp
push
push
xchg
pop
or
arpl
sar
fisub
xor
push
js
loopne
inc
xchg
das
adc
daa
loopne
aam
imul
sti
es
cli
dec
cmc
(bad)
sbb
dec
popf
ret
sti
xor
mov
fstp
faddp
js
ret
sti
mov
mov
std
dec
xchg
das
push
out
ret
sti
aaa
pop
jno
mov
push
or
xor
dec
add
pusha
inc
jbe
aaa
shr
imul
ja
ffreep
mov
mov
shr
xchg
or
call
(bad)
cmps
fadd
cli
jne
ds
adc
iret
nop
lock
jl
adc
push
retf
mov
daa
jne
aas
(bad)
jle
dec
js
loopne
jns
ret
out
pop
jl
or
in
or
cld
or
and
jae
mov
ret
jle
lock
lock
lock
jle
lock
inc
or
addr16
or
dec
ror
add
dec
rol
lahf
adc
inc
stos
mov
pop
cld
add
or
fist
pushf
(bad)
sar
xor
add
loopne
dec
into
stos
outs
cli
add
clc
or
test
inc
pop
xor
fild
leave
and
daa
add
clc
inc
add
pop
aas
add
inc
imul
pop
loopne
sub
sbb
mov
loope
xor
ds
dec
shl
ds
and
lds
mov
ds
cwde
cmp
in
push
add
inc
pop
(bad)
dec
shl
movs
mov
xor
fimul
push
int
jle
lock
mov
sbb
jl
lock
cs
add
clc
shl
jns
pop
or
jle
fild
fimul
clc
ins
xor
inc
rcr
(bad)
aas
push
rol
gs
stos
xor
mov
sbb
clc
shl
mov
ja
lock
test
add
add
cmps
push
fcmovnb
fsubr
es
fsub
cld
add
xor
add
daa
mov
mov
(bad)
or
ins
add
xchg
das
jbe
clc
pop
lea
cmps
push
call
loopne
call
ret
xor
sbb
psllw
dec
rol
ds
add
out
xlat
push
jge
dec
adc
inc
push
ja
sbb
xlat
adc
pop
mov
mov
cmp
cmps
ds
sti
add
hlt
mov
retf
fcom
jge
daa
cli
cs
mov
mov
not
imul
mov
neg
call
out
push
mov
arpl
mov
adc
jnp
inc
aas
mov
ins
in
xchg
call
pop
(bad)
sti
mov
js
out
shl
pop
fsubrp
lock
xor
fnstsw
call
imul
pushf
add
fisubr
cmp
push
or
xor
ja
clc
inc
mov
cmc
jae
movs
in
leave
outs
sbb
jecxz
(bad)
loopne
or
sbb
mov
pop
sar
fidiv
jnp
cmps
rcr
adc
fdivp
js
loop
cwde
or
cmp
cmp
mov
cli
cs
mov
stos
push
out
pop
push
hlt
outs
mov
mov
icebp
ds
sub
movs
or
loope
pop
(bad)
sti
add
push
mov
not
out
jecxz
lds
mov
div
scas
mov
mov
outs
lea
or
adc
ds
imul
clc
add
fwait
adc
inc
lock
fwait
test
lahf
add
fimul
stos
mov
sbb
jl
test
cld
sub
in
adc
iret
stos
mov
or
popa
ror
add
jns
test
je
nop
retf
jmp
adc
mov
sub
sbb
mov
sbb
add
pop
push
push
fild
xchg
fild
clc
xor
popa
shl
jle
daa
jp
loopne
adc
out
add
lock
sar
ror
add
cmp
mov
lock
mov
jle
lock
test
mov
add
inc
cmp
shl
adc
jbe
mov
std
sbb
cmps
add
mov
fisubr
add
outs
rcr
ds
shl
jne
pop
push
mov
outs
es
push
lea
add
jb
call
pop
xor
sbb
or
loope
add
sbb
pop
out
fbld
inc
push
je
add
cmc
leave
cmc
add
or
adc
sub
outs
add
xchg
xor
push
lea
loopne
xor
add
outs
lock
out
(bad)
adc
mov
lahf
add
push
loopne
add
cmp
lahf
add
pop
jge
in
cmp
jnp
dec
xor
sub
mov
mov
test
pop
or
psubb
ds
js
mov
adc
outs
sbb
ss
add
sbb
aaa
push
pop
xchg
frstor
aas
jp
xchg
pop
push
lock
sub
jl
or
jbe
rcr
mov
jl
lock
add
add
jecxz
aas
xchg
ret
jnp
add
mov
mov
dec
loop
lock
das
push
pushf
call
popa
mov
js
push
xchg
popf
or
cdq
adc
cmp
jge
out
dec
pop
aas
adc
jnp
jmp
jl
jg
neg
xlat
push
sahf
mov
aas
(bad)
sti
cmp
add
xor
in
add
add
and
ds
sbb
ja
fmulp
xor
test
call
jb
sbb
and
div
mov
(bad)
icebp
ds
fisubr
lock
stos
rcl
lods
(bad)
sahf
in
jbe
shl
aaa
sbb
jle
out
dec
jp
mov
cdq
dec
add
inc
pop
test
js
fwait
jmp
sti
ds
js
loope
ss
daa
lock
addr16
retf
in
push
gs
call
ja
mov
xor
mov
sbb
ret
js
ret
push
dec
dec
adc
sub
retf
sti
xor
lahf
ror
cmc
lds
imul
add
lods
adc
mov
add
out
clc
adc
sbb
ficomp
outs
add
js
jecxz
or
or
std
pop
or
mov
lock
pop
jl
sub
arpl
loopne
sbb
clc
add
sbb
pop
pop
jl
loopne
xor
push
sar
push
ror
mov
lock
xchg
test
lock
fidiv
iret
add
or
sub
mov
adc
in
pop
push
lock
or
adc
or
dec
rcr
in
leave
outs
dec
sub
aaa
add
shr
xchg
lock
and
lods
xchg
outs
add
add
inc
ror
ds
ret
mov
add
mov
loope
dec
js
loopne
xor
fisub
scas
mov
dec
sub
inc
jne
mov
aam
xor
and
xchg
add
and
fisttp
add
mov
clc
gs
fxam
add
pop
cld
add
out
add
fild
lock
add
or
xor
scas
add
aas
push
clc
xor
aas
test
dec
add
lock
jl
sbb
mov
cmp
cmp
mov
mov
pop
xor
movs
cmc
int
aad
add
es
add
(bad)
pop
fwait
gs
add
bound
sbb
ss
inc
mov
lahf
push
cld
test
push
lock
cmp
pop
jle
lea
cld
sub
out
imul
jne
dec
add
push
clc
and
xchg
outs
ret
sub
add
add
ins
mov
sar
cld
adc
mov
mov
dec
add
clc
pop
lods
test
or
es
mov
into
push
fcmovb
fcomp
aaa
clc
or
inc
inc
sub
fisub
std
leave
fst
push
shl
aas
inc
rcr
int3
sbb
cli
jae
rcr
jp
mov
lock
add
sbb
push
add
add
push
lock
add
stos
add
cmps
cmp
adc
(bad)
jle
div
pop
lock
pop
les
out
push
js
sar
jae
lahf
xlat
sub
fistp
mov
mov
sbb
ret
jle
neg
pop
xor
mov
mov
dec
ror
adc
daa
js
loop
xor
add
js
(bad)
aaa
clc
xor
and
jg
div
pop
xor
fnstsw
loopne
movs
daa
cli
cmp
pop
icebp
ds
not
pop
icebp
ds
rol
fimul
add
dec
sti
in
inc
mov
(bad)
jge
add
xchg
push
hlt
push
push
imul
lea
cmp
aas
mov
sbb
jbe
js
loopne
pop
ret
sti
xor
sti
cmp
pop
lock
ret
out
popa
lea
pop
out
ret
js
jecxz
sbb
push
out
ds
pop
js
pxor
lea
ficomp
mov
out
xor
mov
pop
mov
(bad)
bound
mov
out
stos
js
rcl
std
xor
fist
ins
push
xchg
outs
dec
push
inc
lahf
shr
retf
ds
neg
sti
cmc
inc
outs
aaa
clc
inc
mov
mov
imul
pop
xor
repnz
out
add
push
push
in
add
sti
xor
in
jle
clc
out
add
fimul
xchg
lock
ja
mov
lahf
add
test
mov
aaa
add
lock
add
es
lock
mov
call
sbb
lock
push
mov
add
js
inc
pop
daa
loope
add
or
xor
(bad)
lea
or
cld
movs
data16
add
add
lfs
push
lock
sar
outs
hlt
ss
test
add
or
add
or
sub
jle
sbb
add
dec
ret
clc
jae
jle
or
addr16
sub
aas
or
sbb
aaa
add
daa
mov
sub
lock
mov
xor
add
sbb
ins
cmp
loope
loopne
add
and
add
shl
lock
int
sti
add
cli
pop
rcl
fimul
js
loopne
xor
ds
clc
add
outs
mov
add
add
pop
add
lock
out
add
add
dec
ror
lock
call
shr
ds
mov
dec
add
lock
jmp
rcr
lock
rol
mov
out
shl
(bad)
adc
(bad)
or
cmps
mov
movs
cmc
adc
mov
mov
jle
js
sub
fld
jle
sbb
out
adc
stos
jmp
ret
dec
into
xchg
fidiv
sar
loopne
add
mov
or
push
mov
ds
and
adc
cdq
dec
shl
and
daa
lock
ja
lock
sub
test
pop
loopne
ror
adc
ror
add
mov
mov
test
lock
sbb
jnp
faddp
js
jecxz
inc
mov
(bad)
test
mov
outs
add
inc
clc
push
mov
not
dec
adc
jns
ret
repnz
xchg
pop
rol
leave
jae
mov
stos
stos
dec
loopne
xchg
sub
pop
sub
mov
imul
and
hlt
inc
outs
sbb
clc
push
mov
out
repz
pop
fisubr
lea
loopne
push
gs
ss
js
daa
cmp
add
xchg
js
loopne
aas
xor
inc
outs
push
mov
js
push
xchg
popf
fucom
in
inc
pop
mov
add
fild
mov
add
add
mov
xor
sbb
les
fdivp
icebp
fimul
cmp
aaa
loope
test
sbb
add
sti
js
loop
sbb
mov
iret
loopne
lahf
sub
push
out
daa
js
rcl
daa
icebp
sahf
(bad)
sti
and
push
or
xor
fcomi
ds
(bad)
lock
pop
lock
sar
mov
lock
ds
adc
das
loopne
sbb
push
mov
mov
js
loop
lea
ficomp
ja
cmp
jle
out
mov
out
and
ins
pop
ins
push
out
(bad)
out
xchg
jge
test
pop
cld
adc
mov
cld
xor
daa
dec
clc
sub
(bad)
xchg
test
xlat
cmp
dec
js
ds
adc
lock
addr16
adc
sbb
or
fild
mov
cli
arpl
outs
add
(bad)
dec
pushf
add
lock
add
ins
lods
mov
add
pop
jmp
loopne
pushf
call
add
lock
or
adc
pop
cmp
dec
add
lock
ror
ds
ret
call
test
outs
add
sub
dec
add
ret
pop
pop
cld
and
dec
push
gs
ror
adc
mov
cmp
or
push
sbb
jl
lock
push
loopne
xor
sbb
cld
adc
sbb
pop
sub
and
add
inc
sar
lahf
and
xor
aaa
shr
sti
add
jmp
or
das
sub
iret
add
mov
popa
add
add
xor
mov
fisttp
clc
cmp
test
loopne
add
add
add
verw
pop
mov
cmp
xchg
aad
add
psubb
das
add
add
sbb
xchg
sti
ror
sub
lods
cmp
adc
xor
pop
or
ins
shl
add
jns
(bad)
lock
mov
rcr
dec
jmp
push
add
sub
jne
mov
cli
cmp
pop
add
add
and
lea
mov
push
lock
xchg
sub
mov
pop
mov
jne
add
(bad)
inc
xor
outs
sar
add
stos
stos
ss
rcr
outs
mov
test
or
cmp
add
jge
add
lods
stos
xor
data16
cld
and
addr16
(bad)
sbb
mov
sub
fsubrp
dec
outs
or
outs
dec
jbe
call
out
sbb
loopne
cmp
jnp
out
fstp
rcr
add
aas
jnp
lahf
pop
push
out
(bad)
daa
ja
div
add
les
out
xlat
stos
stos
lea
outs
cmps
icebp
mov
jg
or
mov
out
test
jge
push
gs
jnp
out
sbb
dec
xchg
outs
push
lock
sar
aaa
pop
std
leave
sbb
push
cmp
inc
mov
or
inc
out
pop
call
sti
mov
loop
sbb
cmp
daa
icebp
ds
aam
mov
neg
mov
dec
mov
imul
jle
out
jns
nop
pop
push
shl
stc
loop
out
call
in
js
jmp
and
icebp
ds
rol
adc
sti
lock
inc
ret
test
mov
(bad)
sti
sbb
cmc
mov
push
push
fs
imul
ds
shl
sub
loopne
add
cmp
cli
imul
adc
(bad)
loopne
xchg
cmp
outs
or
add
stos
call
(bad)
fiadd
add
xchg
add
inc
ret
jne
stos
sub
lock
adc
lock
cld
dec
lock
int
mov
xor
mov
adc
pop
add
xor
shr
jle
lock
rcr
jle
lock
(bad)
add
or
and
add
cmp
jl
push
js
rcl
hlt
sub
js
loopne
dec
clc
(bad)
call
xlat
add
or
loopne
xor
icebp
mov
jle
push
aaa
xor
mov
iret
add
add
mov
add
addr16
fisubr
xor
or
mov
sbb
lods
dec
clc
or
mov
jg
clc
cmp
add
ja
std
push
ss
scas
pop
daa
cli
sub
aas
dec
rcr
add
pop
add
ja
data16
clc
inc
scas
cwde
gs
or
out
scas
add
add
push
mov
mov
jmp
ja
outs
mov
data16
stos
xor
pop
add
cmp
mov
pop
and
pop
add
ds
mov
lock
pop
and
arpl
out
xlat
mov
mov
aad
xchg
frstor
loopne
add
add
sbb
mov
mov
jg
clc
and
aas
add
inc
rol
mov
fisub
pop
jbe
sub
popf
ins
mov
lock
jl
lock
add
fisttp
add
push
clc
(bad)
mov
fdivp
xor
cmp
or
sub
dec
test
test
call
clc
pop
ins
mov
mov
jne
or
and
cmps
add
movs
imul
cld
sahf
push
es
push
cmp
das
loop
dec
shr
sbb
out
add
imul
ficom
add
mov
loope
repnz
loopne
leave
into
(bad)
in
xor
retf
mov
fst
jnp
out
sbb
mov
js
push
ror
push
fiadd
data16
outs
push
xchg
outs
pop
or
pop
mov
sti
xchg
aaa
icebp
pop
xor
jp
fidivr
(bad)
lahf
loopne
pop
jg
and
jbe
add
sahf
adc
adc
fisttp
or
adc
mov
ret
fimul
js
adc
inc
mov
dec
jg
push
lock
outs
(bad)
jnp
out
in
js
jecxz
push
out
inc
mov
stos
popa
mov
mov
xchg
das
ins
pop
in
and
xchg
js
and
mov
mov
sti
and
fistp
mov
pop
or
mov
and
outs
mov
jl
add
mov
lock
pop
imul
lods
test
add
jb
mov
dec
out
jle
scas
mov
(bad)
ins
fisttp
pop
sar
jnp
sahf
(bad)
sti
add
(bad)
mov
scas
loope
(bad)
loopne
sbb
jge
call
out
das
lock
arpl
pop
sar
push
dec
add
or
es
ds
clc
jno
aad
add
dec
js
shr
or
pop
add
ret
mov
sbb
loope
or
mov
lahf
shl
mov
clc
adc
ja
jg
ret
clc
xor
fcom
sti
cmp
fild
(bad)
cwde
test
inc
aas
enter
adc
add
xlat
add
js
daa
jp
loopne
xor
pop
adc
ret
cmp
jl
test
outs
add
push
cmp
clc
shl
add
or
sub
or
fdivr
loopne
add
shl
retf
rcr
lock
pop
sub
push
clc
add
xchg
mov
xchg
sbb
in
mov
out
rcr
cld
adc
lahf
adc
add
dec
add
push
dec
sar
scas
add
fimul
call
aas
leave
mov
add
sub
add
cmp
mov
xor
add
imul
daa
mov
xchg
frstor
add
or
je
ja
cmps
leave
pop
pop
or
dec
into
mov
repnz
pop
xor
fiadd
outs
shr
ins
pop
in
adc
or
or
inc
or
mov
in
xchg
popf
xor
adc
xor
or
rol
add
sub
retf
jle
lock
ja
lock
xchg
pushf
call
add
add
add
xor
mov
std
xor
ret
add
aaa
loopne
add
loopne
add
mov
mov
and
ins
and
adc
sbb
cld
and
or
inc
int
hlt
add
inc
rcl
bound
mov
outs
(bad)
cmps
rcr
in
push
xor
push
and
add
addr16
ins
sbb
lods
sub
add
xchg
js
adc
and
sub
push
icebp
fiadd
mov
pop
mov
test
push
aaa
clc
pop
add
mov
ret
ficom
add
push
fiadd
stos
and
std
inc
mov
ja
(bad)
pushf
call
retf
(bad)
loope
sbb
add
(bad)
sti
lods
ds
xor
cmp
(bad)
pop
aaa
xchg
(bad)
sti
mov
pop
(bad)
mov
lahf
push
jge
sbb
jnp
out
mul
movs
ins
repnz
leave
popf
loop
movs
std
push
pop
js
aad
jp
mov
sbb
daa
cmp
out
sbb
adc
inc
int
je
fld
test
xor
inc
sar
or
cli
inc
add
fild
mov
jl
out
or
ss
add
sbb
xchg
mov
sub
loopne
add
pop
out
cmp
mov
mov
fs
daa
cli
pop
add
adc
jns
lahf
jecxz
pop
dec
hlt
xchg
js
loopne
inc
rcr
inc
outs
dec
hlt
mov
push
out
push
sub
dec
xor
lea
ficomp
ja
dec
scas
xchg
sub
jnp
out
xlat
add
sahf
fisub
lock
sbb
cld
or
fwait
add
sbb
pop
push
xchg
fnstsw
loopne
dec
clc
arpl
psubb
shl
js
or
jecxz
lahf
add
cmp
lock
int
add
lock
rcr
push
ror
push
add
mov
dec
loopne
jge
in
or
ins
aam
pop
loopne
xor
test
dec
hlt
xchg
sub
or
inc
ret
pop
(bad)
imul
or
dec
or
dec
loopne
and
mov
lods
xchg
aad
add
mov
retf
(bad)
adc
jg
js
pop
cdq
and
ins
and
xor
jmp
mov
jnp
out
push
mov
cmc
int
adc
jle
loope
mov
(bad)
add
xlat
mov
sub
lahf
add
add
add
ss
imul
mov
ja
leave
into
ss
es
or
xor
lea
lock
lock
add
in
xchg
mov
mov
add
or
xchg
fnstsw
mov
loopne
aad
out
cld
adc
jg
lock
ja
fiadd
mov
sar
pop
sar
mov
lock
sar
inc
sub
aad
loopne
sbb
cld
xchg
sahf
in
es
or
sub
sbb
clc
or
test
clc
xor
(bad)
ins
shr
js
cmps
rcr
test
rol
fisttp
clc
push
shl
add
scas
mov
jb
sbb
loopne
sbb
adc
cmp
pop
add
cmp
jecxz
fild
cld
or
pop
push
arpl
jbe
push
into
(bad)
in
sbb
or
gs
add
push
loopne
add
scas
mov
add
jno
ret
clc
daa
cmp
sbb
cmp
xor
dec
xor
outs
mov
cli
mov
add
ret
mov
lock
(bad)
sti
or
pop
ret
sti
xchg
sahf
in
lods
mov
cli
data16
sahf
and
push
lock
lea
loopne
lahf
fsub
fisub
js
fsubp
js
ret
sti
cmp
lahf
and
xlat
or
arpl
scas
(bad)
in
retf
mov
jle
test
mov
cmp
inc
or
jne
cmps
icebp
ds
mov
sti
es
icebp
push
es
lock
aaa
or
es
(bad)
loopne
js
daa
loopne
lock
js
shl
jnp
cmp
mov
mov
neg
push
mov
fs
ds
ds
jnp
pop
cli
adc
pop
and
adc
ds
shl
les
fisubr
inc
add
(bad)
mul
mov
adc
jle
int
or
push
cmp
shl
clc
add
ja
ds
shl
(bad)
div
lahf
cmp
pop
add
sar
shl
ffree
sbb
call
mov
fld
in
fimul
push
jecxz
(bad)
imul
call
sub
arpl
jge
add
mov
pop
and
das
add
test
lock
rcr
aas
aad
cmp
popa
mov
adc
sahf
in
scas
add
jmp
add
sti
cmp
loope
jp
cmp
xchg
fst
ficomp
arpl
cwde
ins
xchg
add
cmp
std
or
dec
gs
or
add
mov
mov
aam
dec
mov
xor
jg
popa
mov
retf
outs
dec
loopne
dec
clc
and
or
inc
rol
mov
shl
inc
jg
mov
lock
dec
mov
push
lock
sbb
cld
sub
push
aad
(bad)
dec
or
ja
rcr
fwait
aam
mov
fisttp
aaa
test
mov
xlat
xor
or
ja
inc
mov
leave
xor
lock
xchg
mov
daa
cli
popa
push
fstp
mov
or
dec
ror
ds
(bad)
(bad)
push
ret
sub
xor
std
xor
push
xchg
aad
(bad)
fsub
cmp
lea
mov
add
add
cmp
das
add
scas
lea
mov
cmp
cmp
cli
imul
add
clc
adc
xlat
aam
out
and
outs
je
outs
add
aas
aam
fidivr
clc
inc
shl
or
or
add
or
aas
lods
xor
push
rcr
retf
retf
push
jmp
inc
inc
pop
and
imul
add
mov
add
pop
add
fisttp
clc
xor
pop
mov
mov
data16
add
jg
sub
stos
cmps
adc
and
pop
pop
cld
or
jnp
clc
add
mov
jg
js
sbb
xchg
xor
iret
jecxz
sbb
jae
(bad)
adc
fstp
aam
std
xchg
outs
lock
push
jmp
sti
adc
call
fld
mov
jnp
ficom
icebp
sahf
(bad)
sti
and
mov
mov
inc
or
add
dec
hlt
mov
lahf
and
sbb
rcr
lock
mov
addr16
test
mov
pop
xlat
xor
imul
mov
aad
fimul
fisub
pop
outs
mov
ret
jp
pop
ret
out
sti
pushf
call
ret
sti
adc
mov
fidivr
cs
mul
(bad)
sbb
add
les
out
pop
js
adc
jns
pop
loope
sbb
push
add
inc
jmp
add
aas
add
lock
js
loope
mov
ds
mov
or
jl
sub
int
out
sar
pop
sbb
jae
outs
xlat
ret
mov
dec
aaa
mov
ja
lock
test
mov
fisub
inc
jecxz
pop
cmp
jno
rcl
add
out
pop
sbb
dec
shl
pop
or
pop
add
out
retf
sub
sub
add
or
bswap
jnp
out
mov
shl
lods
add
f2xm1
dec
sti
test
pushf
or
call
mov
out
add
adc
aas
add
mov
push
sar
pushf
xchg
ret
aam
or
ss
rcr
das
add
add
es
add
sub
inc
add
aas
or
inc
sar
lahf
add
xor
(bad)
mov
cmp
xchg
mov
add
add
and
outs
jmp
push
add
inc
ret
fistp
imul
adc
loopne
xor
dec
loopne
add
mov
add
add
add
in
cli
add
(bad)
test
jnp
mov
adc
cld
cmp
outs
add
or
rcl
jg
clc
cmp
mov
add
rol
loopne
xor
pop
test
cdq
inc
shl
mov
sub
jl
shr
test
or
cli
or
push
jl
add
lods
stos
sbb
add
adc
jmp
daa
cli
sbb
jnp
out
out
out
add
jle
sub
ror
cmp
jl
lock
test
jnp
clc
cmp
cli
cmp
or
inc
in
call
cmps
add
sub
push
shl
rcr
pop
loopne
add
dec
add
push
add
in
mov
rcl
fmulp
push
adc
fsubrp
(bad)
mov
(bad)
push
loopne
fsub
jge
dec
lock
jno
scas
add
add
shl
mov
std
push
daa
jp
fwait
mov
mov
jne
add
and
add
rcr
add
lock
mov
xchg
imul
jl
lock
sub
dec
add
add
jg
rcr
push
js
daa
cli
pop
shl
fild
clc
and
outs
add
dec
ror
(bad)
aas
add
(bad)
sbb
cmp
lock
jno
jg
clc
sbb
xchg
add
xor
cmp
hlt
mov
inc
fbld
pop
aas
mov
mov
ja
cmp
(bad)
loopne
xchg
adc
fidivr
sahf
ret
jnp
aaa
clc
outs
mov
mov
mov
cli
or
sbb
scas
(bad)
add
xchg
push
mov
stos
mov
cmc
adc
pop
jecxz
adc
cmp
push
mov
fisubr
rcl
loopne
dec
sar
ds
je
movs
aas
cmp
add
xor
(bad)
sti
lods
xchg
loopne
push
out
dec
mov
mov
sar
push
sbb
(bad)
jnp
rol
leave
add
pop
ret
out
sbb
pop
cmps
stos
in
ins
cmp
cs
dec
or
mov
fsubp
bnd
mov
out
mov
scas
ds
clc
and
xchg
retf
loop
sbb
cmps
js
loop
cwde
sub
or
jmp
mov
jge
out
inc
cli
xchg
sti
aaa
js
cld
iret
or
mov
sahf
call
iret
cmp
dec
shr
xchg
pop
mov
shr
cmp
mov
jecxz
pop
jg
(bad)
xor
jne
test
pop
dec
push
sub
sub
jle
lock
das
call
ds
ret
jle
lock
push
mov
xchg
aas
or
or
inc
ret
ds
shl
ins
adc
mov
lock
pop
stos
jmp
test
ficomp
imul
into
add
(bad)
mov
mov
inc
dec
jbe
jmp
sbb
jnp
out
push
mov
xchg
mov
fiadd
rcr
test
lock
jp
pop
push
sbb
mov
lock
test
xor
sbb
addr16
mov
mov
xor
(bad)
sbb
jle
out
aas
add
ss
loope
add
daa
add
push
clc
sbb
sti
add
pop
jg
popa
mov
cmp
lock
and
imul
and
xchg
rcr
(bad)
adc
mov
iret
test
sub
aaa
add
jnp
mov
dec
clc
xor
pop
push
arpl
aas
add
pop
sbb
mov
sbb
ja
clc
jle
fild
mov
mov
fstp
mov
lahf
and
stos
ds
lock
mov
lock
push
clc
pop
adc
pop
push
xlat
add
or
add
add
mov
fisttp
clc
or
push
add
ror
hlt
sub
xchg
sbb
loopne
pushf
call
add
clc
mov
fild
jno
pop
rcr
fwait
sub
mov
fild
add
cdq
mov
add
or
pop
push
aad
adc
mov
call
das
xor
and
clc
push
ror
leave
scas
xchg
cmp
lock
push
cmp
adc
stos
stos
lea
lock
data16
push
(bad)
fidiv
adc
or
lahf
and
ja
rol
icebp
sahf
(bad)
jnp
fiadd
cld
sub
pop
add
xor
jle
idiv
cmp
ds
pop
mov
out
jns
mov
fimul
icebp
jle
neg
mov
js
xor
dec
xor
(bad)
fisubr
out
lds
frstor
jg
test
push
out
sti
js
lds
shr
ins
xchg
pop
push
out
ins
call
(bad)
outs
or
icebp
mov
cmp
sti
mov
je
add
das
inc
call
mov
(bad)
mov
clc
pop
or
aas
xor
fwait
js
imul
shl
lock
mov
sar
faddp
add
or
mov
in
lock
psraw
xchg
mov
jge
out
cmp
sbb
add
loope
adc
fnstsw
jecxz
or
rol
unpcklps
daa
scas
js
mov
sahf
in
jp
fimul
xor
lock
les
out
inc
call
call
mov
ins
das
fimul
bound
sar
ficom
cli
bound
adc
mov
xchg
mov
loop
lock
and
pop
add
ret
mov
pop
add
daa
mov
cld
mov
or
jg
clc
cwde
dec
hlt
mov
xor
clc
jae
outs
xchg
lock
sbb
add
jno
ds
add
daa
cli
push
ror
push
fstp
cmp
ins
adc
clc
mov
mov
add
movs
popa
mov
and
call
push
ret
loope
arpl
adc
jecxz
pop
add
mov
fiadd
(bad)
sub
mov
add
lock
or
add
repz
add
arpl
jle
lock
push
fld
cld
cs
add
xor
sbb
pop
add
cmp
fwait
adc
or
dec
clc
nop
cmp
adc
pop
loopne
add
add
cmp
jmp
fbld
movups
int
jl
sub
fistp
lock
add
xor
jle
lock
or
or
jnp
dec
add
add
add
dec
add
jge
push
rcr
inc
or
mov
clc
arpl
mov
shl
dec
rcr
jge
lock
mov
lock
fild
fild
clc
push
rol
lea
lock
pop
xlat
or
shr
or
sub
mov
mov
loopne
or
jno
jle
lock
movups
out
mov
daa
loopne
or
cmp
fild
hlt
dec
or
mov
lock
lahf
add
xchg
rcr
add
shl
into
cli
data16
add
add
adc
aaa
add
clc
push
rcr
sub
mov
in
cmps
adc
ss
out
sub
mov
inc
js
pop
sbb
jnp
out
push
push
fisttp
add
jecxz
mov
loopne
or
and
aas
inc
ror
lock
sahf
in
sbb
(bad)
sti
cmps
mov
sbb
jb
push
jnp
ja
aas
ror
popf
loop
mov
add
ins
aas
fimul
icebp
push
shl
inc
clc
arpl
jns
lods
sbb
lahf
adc
das
lock
xor
fnstsw
jo
ja
and
fidiv
js
lds
shr
add
imul
or
fild
or
ss
sbb
lods
js
push
mov
js
push
and
pop
sar
imul
out
pop
sub
sbb
and
xchg
pop
(bad)
in
dec
pop
fisubr
(bad)
adc
pop
jnp
movs
sbb
xchg
sbb
sti
or
xor
(bad)
sti
sub
pop
out
xchg
jmp
and
mov
or
clc
add
lods
aas
mov
sub
js
(bad)
sti
xor
push
add
cmp
div
sahf
sar
add
cli
mov
ins
xor
adc
jg
ja
sub
add
lods
sub
loope
sub
jmp
scas
add
add
rcl
jae
daa
push
gs
or
add
daa
jns
imul
mov
clc
sbb
aam
or
dec
ret
fs
sub
push
loopne
je
mov
aam
cmp
(bad)
dec
hlt
add
add
pop
gs
imul
adc
ret
sub
fild
js
pop
cmp
clc
or
call
loopne
xor
add
loopne
xor
(bad)
cmp
cmp
das
loopne
add
pop
lock
fldenv
push
add
inc
rcr
dec
adc
sub
mov
aas
sar
fwait
dec
jge
rcl
outs
sti
movs
pop
add
ficomp
jmp
cld
or
movs
mov
dec
ror
ds
test
cmp
rcr
clc
mov
lahf
push
sbb
add
outs
add
or
inc
std
leave
inc
add
scas
or
outs
pushw
lock
pop
imul
fwait
or
jle
add
inc
add
aas
push
clc
sub
cmps
add
push
hlt
daa
div
loopne
jge
lahf
pop
add
inc
sbb
xor
sbb
sbb
or
fisttp
push
imul
jl
loopne
or
jle
gs
push
jge
das
push
lock
adc
ds
aas
mov
jg
clc
and
xchg
clc
dec
dec
hlt
ss
mov
add
push
clc
and
shl
std
leave
jge
xchg
fnstsw
clc
xchg
dec
jae
outs
add
cmp
loopne
add
fild
clc
lods
es
pop
ror
mov
aas
add
sbb
push
clc
push
cmp
leave
movs
hlt
inc
mov
std
js
ret
jnp
out
and
sar
adc
daa
xchg
sar
ss
push
lock
ret
out
jno
jle
out
int
sar
mov
std
mov
dec
jbe
mov
neg
dec
hlt
push
js
popa
mov
js
rcl
std
fisub
mov
jp
jge
lods
not
out
dec
js
adc
aaa
clc
pop
mov
dec
js
inc
lahf
shr
ins
sub
push
faddp
pop
aaa
ror
dec
jbe
js
jecxz
sbb
test
jbe
out
sub
cli
add
sbb
(bad)
pop
xor
faddp
js
and
mov
div
fisub
outs
les
out
jge
or
jg
shl
ret
bnd
out
jg
imul
lock
jecxz
test
gs
or
inc
or
adc
or
(bad)
add
inc
sti
movs
sbb
mov
arpl
cli
sub
inc
xor
(bad)
retf
icebp
ds
xchg
lock
lock
adc
dec
pop
aaa
adc
loopne
mov
jmp
icebp
dec
mov
js
mov
inc
adc
sti
pushf
call
retf
add
sub
out
add
lock
shr
adc
pop
ror
and
adc
xchg
adc
push
and
adc
sti
xor
(bad)
ds
push
mov
test
loopne
xor
lods
mov
psubsb
ds
daa
mov
add
in
pop
es
mov
or
add
repz
sub
xor
and
stos
push
aaa
jno
test
add
lock
dec
stos
push
into
test
push
jl
lock
and
or
sub
add
or
xchg
xor
add
xor
fild
jl
add
add
add
add
push
cld
sub
xchg
outs
mov
add
add
clc
or
daa
xor
jge
cmp
loopne
or
mov
jmp
scas
add
pop
clc
add
ins
inc
mov
call
xchg
pop
jecxz
aas
or
xor
sub
lahf
adc
fisubr
mov
rol
add
dec
shr
push
gs
lea
add
xchg
sti
data16
jmp
int3
and
mov
mov
sbb
ja
clc
ins
add
or
dec
jne
daa
or
dec
add
shr
inc
jmp
fist
frstor
loopne
xor
sbb
jl
lock
and
sti
add
arpl
fisttp
test
cmp
in
add
and
lahf
add
aaa
loopne
xor
jle
mov
add
arpl
(bad)
imul
ja
fiadd
js
ss
add
dec
rcr
ds
or
scas
test
lds
or
jnp
das
adc
fst
rol
push
fucom
sbb
std
sub
clc
jns
scas
jno
dec
add
lock
dec
hlt
push
fiadd
in
add
or
rcr
rcr
or
mov
imul
cmp
out
ret
sti
(bad)
js
cmp
imul
lds
hlt
cs
lock
xor
aas
ret
jnp
fidivr
xor
fstp
inc
mov
adc
das
mov
fdivp
dec
pop
jecxz
push
out
jae
mov
xchg
rol
outs
xchg
das
data16
push
out
std
js
loope
adc
cmps
sbb
sti
in
lock
fldenv
inc
outs
lahf
lock
sbb
mov
leave
xor
xchg
push
js
loope
adc
push
js
loop
sbb
pop
js
loopne
xchg
add
jbe
js
ror
popf
int
fwait
push
shl
jmp
push
icebp
push
lds
out
popf
call
inc
lock
(bad)
icebp
out
jp
ror
out
jne
arpl
sahf
sar
das
or
sbb
iret
icebp
ds
rol
out
jle
div
in
xchg
mov
push
test
xor
and
(bad)
fisub
out
mov
into
sahf
call
inc
fxch
adc
stos
sbb
fisttp
or
push
push
out
sub
fcomp
sbb
xlat
ds
ja
jge
addr16
or
add
push
rcr
cmps
or
mov
jle
call
out
push
aad
(bad)
pop
add
pop
clc
sbb
jnp
js
loopne
xor
xchg
pop
loope
add
or
mov
jbe
call
mov
jbe
fstp
in
push
dec
hlt
jmp
(bad)
or
and
or
sbb
stos
stos
fwait
sbb
cli
dec
ins
mov
pop
nop
lock
das
add
lock
sar
xor
add
pop
add
push
mov
rcr
mov
iret
add
cs
add
retf
mov
or
call
jl
lock
pop
aas
xchg
add
push
add
data16
repnz
adc
sub
pop
jmp
xor
das
push
data16
leave
into
shl
jmp
stos
retf
inc
fcomi
retf
shr
sbb
loopne
cmp
daa
add
or
imul
shr
(bad)
add
jmp
test
add
or
shl
retf
aad
add
or
pop
ror
or
sbb
xchg
gs
add
or
jae
dec
adc
or
gs
test
add
or
fwait
jg
clc
adc
inc
hlt
fs
or
xor
ja
fisttp
clc
add
pop
and
sub
mov
push
lea
inc
rcr
add
ds
shr
inc
mov
add
cs
and
jge
cld
addr16
ja
clc
pop
add
pop
lock
xchg
aad
add
add
std
xor
rol
jg
mov
or
add
pop
fild
clc
mov
aaa
(bad)
cli
xchg
mov
jbe
sbb
adc
push
push
jbe
sbb
aaa
repz
mov
xchg
fneni(8087
inc
jg
clc
sbb
pop
add
mov
loopne
sub
cmp
retf
mov
pop
jge
sar
inc
js
xor
fnstsw
loopne
test
add
(bad)
or
adc
jnp
cld
cwde
(bad)
dec
xor
lock
add
sbb
jae
out
daa
loopne
js
(bad)
sti
adc
jecxz
(bad)
dec
js
sbb
mov
out
push
add
test
dec
add
out
mov
movs
popa
mov
add
push
out
sbb
loop
pop
push
fisttp
adc
fimul
mov
lods
add
repz
sar
lock
push
fisttp
inc
push
out
xlat
js
and
lods
stos
jbe
dec
jbe
mov
aaa
clc
cmp
(bad)
imul
mov
xchg
or
jge
out
ss
into
xor
mul
pop
mov
outs
push
jge
dec
add
out
or
repz
es
mov
and
and
dec
(bad)
lock
jb
jg
ja
add
(bad)
mov
cmp
push
(bad)
fidiv
icebp
push
(bad)
sti
sub
mov
jo
(bad)
aaa
dec
ror
mov
out
xchg
js
aas
mov
jbe
pop
xchg
outs
(bad)
out
push
and
loope
add
mov
in
xchg
add
cmp
not
or
div
cmps
lock
leave
pop
imul
fdivrp
icebp
sahf
sar
mov
test
lock
add
sbb
pop
lock
sar
pop
loopne
or
sbb
lods
mov
clc
adc
test
add
lock
in
fwait
imul
jl
lock
and
cmp
xchg
sbb
jl
loopne
sbb
sub
pop
or
call
cld
mov
and
outs
nop
lock
aaa
arpl
lods
add
outs
add
fisttp
clc
or
cmps
add
retf
call
or
add
verw
add
sar
add
and
add
mov
mov
pop
loopne
lahf
add
out
lahf
add
retf
cdq
popa
shl
lahf
add
retf
test
xor
add
add
push
gs
xor
loopne
add
cld
movs
fldenvw
aaa
das
sbb
mov
cmp
jl
lock
fwait
inc
call
loopne
push
clc
pop
pop
xor
shl
std
inc
sub
ja
clc
sub
sbb
shr
ds
rcr
dec
lea
jl
lock
jle
sub
pop
xor
cs
clc
jne
dec
add
add
cmp
cli
dec
shr
push
clc
dec
add
rcr
std
leave
xor
lock
jl
jge
mov
fbld
mov
sbb
add
jmp
mov
js
add
sbb
mov
not
lock
sar
push
arpl
pop
pop
cld
or
xchg
sub
loopne
mov
scas
inc
outs
hlt
or
aaa
jmp
fild
pop
push
mov
cmp
int
retf
arpl
iret
add
clc
data16
aas
or
imul
add
dec
lock
sbb
inc
jg
adc
sbb
cld
mov
in
cmp
lock
loopne
xor
add
sahf
call
or
aas
add
or
iret
add
(bad)
adc
repz
aaa
arpl
mov
test
sti
and
add
ret
push
mov
jb
pop
or
jbe
js
sar
jne
outs
adc
aaa
js
daa
loopne
or
sub
iret
lock
stos
pop
fist
ins
sub
ret
js
sar
fimul
push
mov
aaa
xor
das
in
sti
addr16
sbb
mov
daa
jp
ficomp
or
ret
sti
addr16
jge
ja
(bad)
js
loopne
movs
dec
js
fidivr
and
aas
ret
sti
add
pop
out
cs
leave
movs
icebp
fimul
jge
xchg
outs
mov
shl
test
sbb
out
mov
mov
(bad)
in
hlt
daa
addr16
outs
call
je
pop
sar
(bad)
or
inc
shl
and
sti
lock
idiv
sub
dec
ins
jge
mov
sub
cmc
daa
xlat
sub
sar
fidiv
xor
cs
rol
arpl
add
(bad)
test
scas
jge
xchg
loop
dec
shr
pmaxub
push
(bad)
cld
js
ror
cs
sbb
xor
or
(bad)
jnp
outs
lock
pop
aad
js
ds
(bad)
lock
lahf
(bad)
rol
iret
lock
mov
scas
test
or
cli
or
mov
shl
call
lea
jecxz
or
or
inc
shl
fiadd
fmul
cmp
jg
clc
rcr
sahf
dec
hlt
(bad)
sbb
inc
aas
pop
js
mov
xchg
mov
cmp
sub
fiadd
or
mov
ss
(bad)
add
adc
(bad)
pop
sar
adc
js
xchg
sub
pop
ret
sub
or
jp
stos
outs
ins
js
ins
nop
mov
inc
aas
add
sub
aaa
or
or
xor
mov
fist
lock
out
xlat
lock
imul
in
add
clc
and
scas
add
clc
and
add
or
fild
fist
pop
sub
fild
cld
sub
or
xor
jg
mov
add
xor
call
cmps
outs
add
add
pop
lock
or
inc
jge
ss
fisubr
psubb
pop
push
outs
(bad)
dec
js
mov
mov
add
cs
jp
fcmovnbe
lock
pop
push
inc
mov
rol
inc
outs
loopne
cmp
mov
push
add
mov
data16
clc
push
rcr
jle
push
jbe
cmp
add
dec
shr
fst
push
mov
push
imul
push
loopne
or
and
fwait
or
or
or
das
push
ins
shr
lea
lea
loopne
xor
lock
je
add
and
psubb
loopne
add
mov
jge
lock
sub
stos
stos
mov
mov
rcr
mov
inc
js
loop
sbb
sar
loopne
mov
adc
adc
fwait
js
(bad)
jnp
ficomp
ret
jge
(bad)
adc
mov
pop
imul
add
mov
hlt
push
mov
lock
mov
pop
js
loop
dec
sar
shr
pop
fidivr
sar
and
adc
cs
call
imul
ds
ror
sti
cmp
inc
hlt
inc
outs
ins
xor
inc
outs
(bad)
lock
sbb
or
sbb
sti
xchg
ss
mov
lock
sti
or
mov
ret
int3
jnp
sub
and
add
daa
je
outs
rol
push
hlt
inc
js
sar
jbe
fisubr
iret
jecxz
or
popa
sub
ins
repnz
ret
call
das
xor
stos
frstor
loopne
add
sbb
cli
inc
dec
mov
sahf
in
jbe
clc
add
xor
in
dec
lock
ficomp
mov
ficom
inc
js
push
test
xchg
cmp
jnp
out
lods
add
add
adc
int
dec
loop
retf
stos
ss
ds
mov
xor
add
repz
ret
inc
pop
lea
ds
ret
inc
popf
and
xor
pop
add
in
dec
clc
jle
add
or
mov
add
add
call
mov
fimul
and
add
daa
aam
jnp
clc
aas
es
dec
js
xchg
fwait
push
cld
sub
adc
or
cmp
jae
cld
cmp
mov
aaa
cli
cmp
loope
xor
jb
test
jl
lock
outs
shr
shr
mov
lock
push
repz
jne
sti
add
or
mov
mov
jnp
out
sub
sar
sar
sbb
mov
and
fst
pushf
call
loopne
add
pop
and
and
lods
push
scas
sbb
xor
ja
lock
rcr
popf
call
add
dec
stos
mov
add
or
adc
inc
fstp
add
shl
cmps
loope
fild
sbb
push
test
add
popa
mov
or
ds
adc
mov
aaa
adc
int
mov
mov
daa
cli
popa
shl
inc
mov
rcl
adc
pop
pop
cld
sub
ins
xchg
xlat
daa
jl
loopne
sub
cld
xor
and
xlat
jne
invlpg
test
push
jmp
aas
shr
push
rol
push
outs
adc
rol
push
xchg
pop
add
int
outs
rol
xor
pop
fisttp
xchg
das
push
add
pop
jl
loopne
or
mov
dec
mov
lock
add
add
in
sub
add
mov
not
rcl
inc
loopne
xor
inc
sar
add
inc
sbb
js
jne
lods
push
aaa
imul
jle
sub
mov
adc
lods
mov
out
sbb
mov
lahf
lock
aas
ror
sar
fisub
ficomp
cmp
jbe
dec
sti
in
or
add
aas
mov
and
loope
mov
pop
jl
ja
ficomp
mov
js
xor
pop
xor
ret
push
lock
cmp
sti
or
pop
mov
mov
dec
hlt
pop
js
loope
add
or
outs
mov
daa
mov
imul
sbb
sahf
(bad)
jnp
ficomp
lock
(bad)
jnp
fimul
clc
sub
mov
leave
adc
stos
add
add
pop
es
or
or
ds
jno
pop
loopne
dec
rcr
adc
es
fs
fiadd
loope
sbb
stos
fidivr
adc
loopne
lock
sar
fisubr
icebp
pop
sar
fiadd
jnp
out
mov
(bad)
es
mov
aam
fiadd
xor
mov
std
xor
adc
inc
xor
pop
push
sbb
sbb
ins
and
aad
mov
div
dec
ror
cmp
out
jecxz
push
out
or
jl
mov
inc
lds
sub
fbld
pop
mov
jl
test
and
xchg
aas
mov
ss
fld1
mov
aas
pop
cld
mov
mov
lahf
pop
jl
jge
std
push
mov
push
xlat
pop
loope
add
add
imul
add
es
xor
ds
cmp
mov
test
lock
mov
ds
add
push
clc
popa
shr
pop
ins
aaa
loopne
xor
mov
cld
lods
pop
dec
nop
lock
test
(bad)
cmp
fbld
loope
add
or
loopne
xor
ins
add
pop
add
jge
ss
into
retf
push
inc
outs
gs
sbb
xchg
fst
loopne
je
mov
lock
loopne
aad
jg
mov
lock
dec
add
shr
cld
push
push
clc
sub
addr16
sub
xchg
sbb
cld
sub
jae
fstp
inc
mov
loopne
add
lods
xor
sbb
clc
pop
dec
hlt
iret
add
or
verw
add
sar
add
jp
clc
movs
push
ret
outs
inc
aaa
mov
stos
inc
daa
cli
adc
lods
adc
dec
shl
(bad)
pop
jmp
pop
xor
ds
ror
ds
imul
stos
mov
add
inc
ror
ds
add
or
adc
les
aas
xor
clc
lods
dec
hlt
(bad)
sbb
aaa
clc
inc
xchg
shr
ds
jl
loopne
add
fwait
cmp
jge
ss
jp
lock
ins
mov
clc
or
iret
add
jae
test
mov
or
and
and
or
mov
psubb
addr16
retf
cmps
add
arpl
jmp
jl
add
test
aas
add
xor
pop
jae
pop
das
sub
add
loopne
cli
in
jp
pop
loopne
call
mov
rcr
push
aad
loop
stos
push
or
dec
dec
cmps
outs
es
icebp
push
and
dec
icebp
mov
fnstsw
mov
mov
ficom
dec
aaa
add
dec
ret
test
imul
xchg
inc
rcr
std
adc
mov
push
fnstcw
aas
sar
xor
sbb
arpl
(bad)
sbb
in
(bad)
or
xor
cli
imul
imul
xor
jbe
js
and
and
and
ja
test
(bad)
sbb
dec
shl
test
inc
add
xchg
pop
int
mov
jp
jl
mov
ret
js
ret
sti
lods
push
fimul
fist
popf
sar
ficomp
jecxz
imul
mov
mov
test
jle
sub
add
mov
mov
js
in
pop
lds
fidivr
outs
push
jbe
add
hlt
add
imul
pop
imul
jmp
jae
lahf
ret
sti
add
pop
sar
inc
mov
test
cld
add
in
movd
push
lock
mov
dec
mov
dec
mov
in
jecxz
jmp
cld
add
sub
mov
mov
lock
invlpga
scas
aaa
jp
xchg
mov
xchg
dec
clc
or
aam
and
or
jecxz
fist
fsub
loopne
xchg
lock
in
nop
lock
(bad)
nop
adc
loopne
or
ds
ficom
(bad)
scas
lock
xor
sahf
ror
fld
clc
out
ja
lock
add
add
push
aam
addr16
das
lods
lods
(bad)
xchg
add
adc
lock
push
ret
jl
inc
ret
outs
aam
cmc
int
daa
mov
xor
fsubrp
sub
shl
mov
push
xchg
fnstsw
loopne
pop
adc
lods
mov
adc
cli
jge
mov
push
cld
xor
outs
lea
ds
clc
dec
shl
mov
clc
cmp
jg
sbb
lock
cmp
cld
sub
xlat
mov
inc
add
lock
sbb
sbb
(bad)
pop
fs
cmp
xlat
add
stos
cmp
rcr
jbe
lock
sbb
mov
sub
push
jl
add
clc
cmp
sysenter
mov
add
adc
jecxz
mov
pop
dec
add
mov
aas
pop
mov
js
loopne
xor
fisub
addr16
inc
outs
xchg
das
push
add
mov
inc
adc
cmp
clc
xor
daa
je
test
loopne
or
mov
arpl
sub
xor
add
add
test
(bad)
retf
add
mov
add
push
lock
sbb
sbb
jge
outs
push
mov
cld
jae
scas
jl
js
loopne
xor
fisub
mov
or
jne
int
inc
mov
addr16
or
xor
xchg
ror
lock
js
inc
int
mov
fwait
push
mov
scas
mov
cmps
daa
cli
jae
inc
icebp
ds
mov
std
leave
fldcw
push
outs
lock
mov
rcr
arpl
and
mov
fisub
jg
test
mul
fisttp
jnp
out
ret
mov
loopne
adc
mov
aas
(bad)
sti
or
pop
sar
fimul
jbe
js
jecxz
test
inc
mov
test
stos
jbe
out
fisub
ins
xor
js
loopne
dec
ror
dec
add
add
addr16
loopne
outs
jg
and
xchg
pop
sar
fisubr
lock
das
xor
es
aad
and
mov
dec
mov
pop
pop
mov
mov
sbb
cmps
js
ficomp
loopne
mov
fidivr
scas
xchg
cmp
out
cs
xor
not
lock
inc
shl
and
aam
faddp
icebp
push
(bad)
sti
xor
cli
adc
mov
jge
out
dec
(bad)
js
xchg
js
xchg
idiv
jmp
pop
pop
xchg
popf
test
mov
fimul
hlt
fs
test
ror
sbb
xchg
jne
fdivrp
in
icebp
mov
mov
mul
jge
or
pop
shl
shl
aas
or
mov
mov
cmp
fild
dec
pop
adc
shl
push
add
inc
shl
inc
pop
add
call
clc
xor
into
test
sub
or
jae
dec
add
das
lea
fisubr
push
or
dec
add
push
loopne
jl
jle
add
inc
or
ds
clc
push
ror
pop
cld
add
jae
(bad)
in
sub
inc
sbb
loope
sub
adc
xor
(bad)
aam
jae
clc
jns
js
lock
mov
test
mov
add
ins
inc
mov
(bad)
dec
adc
inc
or
mov
and
or
imul
or
dec
sar
pop
or
dec
add
or
verw
add
pop
lock
ins
movs
jge
jbe
mov
hlt
jg
clc
jns
pop
push
gs
mov
scas
add
sbb
fiadd
jg
clc
or
cmps
add
add
or
fwait
add
scas
mov
push
sti
movs
loop
pop
add
repz
add
adc
sbb
mov
jg
clc
and
sub
pop
add
or
cmp
iret
add
dec
add
sbb
jle
pop
sar
pop
sar
loopne
xor
add
loopne
fidiv
shl
sti
add
ds
adc
add
loopne
mov
or
adc
iret
add
aas
or
sub
scas
add
test
push
lods
mov
lock
pop
test
scas
sbb
stos
add
sbb
mov
fisub
pop
ins
adc
push
shr
jle
lock
shl
jle
lock
mov
pop
sub
fsubr
stos
mov
call
jb
pushf
call
daa
cli
dec
add
or
jbe
fxam
aam
imul
add
data16
add
clc
jg
clc
popa
add
aam
pop
(bad)
sti
add
das
lock
gs
pop
call
fisub
pop
pop
loop
or
xor
das
aad
mov
dec
sti
movs
push
lock
call
in
in
mov
dec
loope
sbb
push
js
xchg
lock
mov
push
arpl
xor
repz
push
arpl
out
es
or
sbb
aas
test
mov
adc
mov
js
jge
test
dec
hlt
arpl
ins
adc
out
rol
mov
sar
and
jnp
outs
sub
pop
icebp
push
ret
out
test
mov
js
xchg
add
cmp
xor
fnstsw
loopne
movs
cmc
adc
mov
add
fidiv
pop
sar
push
(bad)
sahf
jecxz
dec
mov
mov
mov
std
aas
loope
dec
ins
xor
jl
(bad)
lock
add
add
xchg
daa
ficom
ss
js
ret
fidiv
imul
inc
outs
aaa
js
add
mov
cld
sbb
dec
sub
dec
icebp
inc
out
(bad)
out
lds
mov
push
js
(bad)
sti
or
mov
aas
(bad)
jnp
fisub
lock
rol
xchg
inc
add
mov
adc
dec
jecxz
inc
sti
movs
push
icebp
ds
mov
cld
movs
inc
fnstsw
xor
inc
lock
sub
xchg
popf
jge
int
mov
mov
jl
lock
pop
jne
fild
into
add
aas
mov
mov
call
sar
push
mov
rol
pop
mov
mov
rcr
fdivr
loopne
sub
loope
add
cld
and
mov
ds
ret
test
add
out
shr
sbb
add
sbb
iret
xchg
lock
aas
xchg
add
push
cmp
cmp
cld
and
xchg
sub
clc
or
jnp
mov
loopne
and
ror
cmp
fmulp
call
or
imul
js
jne
daa
cli
and
rol
daa
add
int
ds
rcr
mov
sub
cld
sbb
arpl
loopne
or
mov
iret
add
xchg
test
lods
imul
(bad)
pop
popf
lock
shr
dec
mov
pop
clc
sub
aaa
or
xchg
lea
sar
cld
add
jnp
out
push
mov
pop
daa
jl
loopne
add
loope
sub
push
add
push
add
std
cmp
ds
or
mov
push
fild
dec
pop
loopne
cmp
(bad)
fdiv
xlat
add
fisttp
ja
ds
js
shl
daa
cli
gs
fstp
lock
push
imul
or
pop
add
xchg
frstor
push
jbe
std
leave
pop
add
push
lock
sbb
jl
loopne
stos
mov
add
clc
push
int
mov
adc
out
mov
out
mov
fisub
lock
pop
add
sub
ins
arpl
push
lock
lahf
loope
cwde
adc
(bad)
(bad)
in
lock
(bad)
sti
add
iret
lock
shr
retf
mov
add
mov
adc
jae
lahf
lds
mov
lods
call
icebp
ds
outs
(bad)
jnp
out
jnp
test
adc
jae
aas
lds
or
lock
es
icebp
mov
fisubr
mov
cmp
in
(bad)
icebp
push
(bad)
sti
xor
jnp
push
shl
imul
mov
out
dec
mov
outs
jae
(bad)
xor
pop
mov
or
pop
js
loop
lea
ficomp
clc
xor
ins
sbb
cmp
cli
sub
ins
cmp
dec
js
push
lahf
fmul
fidivr
icebp
sahf
(bad)
sti
or
daa
icebp
push
aad
cdq
inc
cmc
leave
fst
std
sub
arpl
and
dec
ins
lahf
cmp
jnp
out
daa
js
les
mov
(bad)
sti
or
pop
icebp
sahf
(bad)
jnp
inc
pop
fnstenv
jb
iret
imul
(bad)
fiadd
aad
std
add
(bad)
out
lds
fst
lea
out
stos
call
push
mov
adc
add
xchg
das
ret
sar
push
out
jecxz
mov
faddp
mov
repnz
ins
xor
daa
pop
sar
fisubr
adc
xchg
hlt
daa
or
lods
mov
adc
or
mov
and
pop
add
lock
mov
int
test
sti
xchg
mov
mov
mov
inc
lahf
jb
ror
jle
lock
not
add
test
rcl
nop
lock
mov
je
pop
adc
lock
add
lock
mov
clc
cmp
mov
ds
clc
jns
jle
lock
mov
lock
gs
or
and
add
arpl
mov
test
xlat
cmp
or
test
jcxz
lods
xor
lock
out
add
in
(bad)
or
sub
or
dec
cmc
int
jmp
sub
lock
cld
sbb
jae
cld
push
loopne
cmc
daa
xchg
add
aas
psubb
loopne
add
or
psubb
fld
fisttp
add
xchg
xchg
sbb
jbe
mov
ror
std
leave
mov
cli
xchg
retf
add
lods
(bad)
cmp
cmps
hlt
daa
pop
in
aas
or
sbb
pop
jg
adc
mov
mov
aad
stos
outs
es
inc
shl
dec
psubb
add
lock
shr
pop
lock
clc
sub
or
mov
(bad)
cli
data16
mov
lods
mov
lock
lea
lock
cld
or
jg
js
loopne
xor
fisub
iret
add
inc
rcr
mov
adc
jno
scas
add
lock
shr
(bad)
sbb
add
lahf
or
lds
dec
jbe
int
imul
sbb
out
jl
loopne
add
cs
ja
pop
ins
icebp
(bad)
pop
fwait
dec
ins
jmp
mov
xlat
or
daa
out
mov
imul
mov
mov
dec
lock
jp
das
enter
call
das
in
sti
and
outs
shr
push
pop
rcr
loopne
xchg
shl
mov
add
out
repz
pop
dec
mov
sub
(bad)
icebp
pop
shr
push
mov
not
test
add
not
js
sbb
pop
loopne
mov
fidivr
push
mov
mov
pushf
xchg
pop
and
xchg
or
leave
out
xchg
or
shl
mov
inc
mov
js
xor
xor
dec
pop
jp
sbb
pop
je
(bad)
mov
call
sbb
in
js
lds
out
sub
(bad)
or
js
push
(bad)
fmul
fmulp
icebp
out
daa
loopne
js
sar
(bad)
js
(bad)
sti
add
mov
lahf
push
rol
arpl
test
push
in
xchg
pop
ret
ss
jg
cmp
(bad)
sub
(bad)
cmp
jg
mul
js
outs
or
inc
js
add
ffreep
sti
mov
or
iret
lock
adc
fbld
loopne
lock
sbb
iret
or
outs
loopne
adc
(bad)
xor
lahf
loop
sbb
inc
(bad)
lock
(bad)
ja
add
adc
lahf
loopne
push
out
pop
jecxz
adc
lahf
fistp
mov
pop
jge
lock
jg
ret
cld
aaa
add
or
pop
imul
xor
aas
add
and
xlat
xchg
lock
cld
daa
push
sti
push
loopne
add
sub
mov
aas
daa
loope
add
sbb
stos
jge
clc
cmps
cmp
daa
cmp
mov
aas
add
or
adc
jg
clc
jp
jg
inc
mov
sub
iret
add
or
fild
jl
daa
cli
dec
add
add
jmp
jmp
fnstsw
inc
aas
movs
dec
clc
push
adc
dec
ret
push
sbb
mov
imul
add
js
das
aad
js
push
fwait
add
outs
add
or
fiadd
clc
mov
mov
hlt
cmc
cmp
daa
cli
dec
add
cwde
cmp
cmp
aas
add
jge
jg
clc
dec
add
sub
call
fild
jl
loopne
adc
iret
add
add
lods
cmp
jl
lock
sbb
fwait
mov
push
jae
mov
add
mov
es
jns
call
fnstenv
(bad)
dec
loopne
pop
cld
inc
sub
das
lock
shl
or
and
hlt
and
pop
add
pop
jl
daa
cli
push
rcr
jl
lock
or
stos
sbb
push
clc
jle
mov
push
loopne
add
and
pop
pop
clc
idiv
sar
inc
lock
jg
sar
iret
add
clc
out
jl
add
or
jmp
fs
add
or
sti
add
clc
sub
scas
adc
jns
iret
add
ds
push
sar
push
fiadd
add
psubb
pop
xor
(bad)
cmp
jmp
clc
xor
sbb
cmp
inc
lock
pushf
call
lock
add
add
mov
xor
sti
add
add
mov
test
aas
add
jae
xlat
add
add
outs
add
adc
lahf
add
adc
lahf
add
scas
add
xor
sti
add
pop
pop
pop
clc
out
add
cmp
lock
inc
sar
sti
div
(bad)
cs
hlt
cmc
js
test
addr16
xlat
daa
jl
out
pop
js
daa
loopne
js
mov
ins
(bad)
push
dec
fidiv
jmp
mov
xchg
retf
js
sar
int
xchg
mov
pop
cmp
push
lahf
lock
scas
inc
lahf
lock
loopne
push
out
cmc
js
pop
ins
mov
mul
jg
idiv
mov
add
cmp
adc
iret
lock
xchg
inc
js
mov
mov
std
add
pop
add
sbb
inc
dec
hlt
jne
scas
(bad)
sti
out
jb
inc
ficomp
mov
jg
imul
imul
mov
dec
pop
js
add
jg
loope
pop
loopne
push
out
cmc
js
pop
mov
icebp
(bad)
fidivr
(bad)
mov
out
jne
mov
(bad)
lock
mov
out
jns
aaa
jecxz
dec
xchg
outs
push
lock
cmp
pop
lock
int
mov
xor
cli
xor
pop
add
lods
fwait
jno
mov
js
xchg
cmp
sub
push
mov
js
xor
mov
mov
js
(bad)
sti
xor
pop
adc
cmc
js
ret
mov
mov
jg
ja
(bad)
(bad)
sti
or
mov
daa
neg
add
add
lahf
loopne
push
out
ds
fsubrp
push
call
dec
lock
clc
adc
pop
pop
vmread
loopne
pop
mov
inc
mov
cmp
cmc
sub
mov
add
jp
xlat
fnstenv
out
mov
fwait
cmp
aas
add
sti
cmp
lock
add
lahf
xchg
lock
add
xor
out
add
pop
cmp
pop
pop
vmread
loopne
add
adc
mov
js
loopne
pop
cld
or
xlat
add
mov
cld
jae
xlat
xchg
lock
add
ds
push
cld
pop
pop
dec
ret
cld
adc
jg
clc
inc
cmp
lock
add
fild
loopne
add
pop
clc
test
sub
cmp
daa
cmp
lock
stos
inc
sub
add
or
mov
(bad)
arpl
aas
add
inc
clc
inc
sub
or
dec
add
sbb
outs
adc
cmc
sub
ds
add
mov
lock
add
pushf
sub
jg
clc
pop
add
cmp
cmp
lock
jg
add
clc
addr16
(bad)
jge
mov
jmp
mov
push
clc
out
scas
add
adc
mov
jmp
sar
jl
add
sbb
fild
cld
xor
sti
add
sub
jmp
out
add
push
sar
mov
pop
psubb
(bad)
sbb
jge
jg
daa
cli
jp
xlat
add
add
mov
call
iret
add
clc
daa
cmp
call
lock
add
mov
dec
dec
add
jge
mov
pop
psubb
jp
(bad)
sbb
jge
jg
cmp
jp
mov
(bad)
cmp
lahf
adc
jne
jg
clc
test
add
pop
sar
inc
jmp
loopne
add
sub
lock
add
jl
rcr
std
sti
jp
scas
daa
loopne
adc
outs
add
cmp
lahf
add
clc
test
pop
lock
add
or
(bad)
test
daa
cmp
addr16
loopne
push
jl
sar
cli
mov
add
add
cmc
sub
jae
jg
clc
out
jl
loopne
add
jge
jg
clc
pop
add
or
pop
lea
js
xchg
out
(bad)
adc
lahf
loopne
ins
add
ja
(bad)
(bad)
sti
or
lock
div
icebp
inc
out
pop
loopne
add
call
out
jne
jg
out
cmc
js
(bad)
sti
xor
pop
loopne
push
out
jne
aaa
repz
jne
jg
out
das
lock
fidivr
sar
pop
adc
mov
(bad)
ds
je
aaa
out
out
loop
add
cmps
js
xchg
cmp
jg
out
pop
jecxz
sti
js
movs
adc
adc
mov
mov
std
add
cmps
lea
adc
xchg
cli
gs
or
jg
ss
loop
push
ficomp
call
jbe
imul
xor
out
push
mov
or
jg
idiv
fld
dec
ficomp
call
jg
idiv
je
inc
sar
fisubr
daa
test
mov
(bad)
ja
je
jmp
mov
jnp
ja
std
ins
mov
mov
out
aaa
adc
mov
jg
sti
movs
mov
cmc
inc
dec
cmp
ficomp
mov
cld
cmp
sar
jnp
(bad)
in
xchg
imul
fld
(bad)
pop
or
outs
jecxz
xor
lods
push
jbe
mov
mov
outs
out
add
mov
ins
push
fnstsw
add
pop
add
pop
push
jnp
js
ret
ins
stos
mov
arpl
cmp
pop
pop
js
loopne
test
cmp
loopne
scas
dec
clc
cmp
xchg
xor
imul
or
mov
scas
pop
clc
cmp
pop
aad
not
imul
dec
jge
loopne
mov
jg
xchg
lock
push
clc
cmp
sbb
or
dec
clc
out
stos
jmp
or
add
mov
ja
(bad)
sti
and
add
aad
das
cmc
sub
stos
jge
push
aaa
(bad)
sub
add
and
cmp
inc
(bad)
mov
xor
pop
add
sbb
push
imul
sbb
pop
loopne
push
pop
ins
mov
dec
mov
lahf
or
push
int
sti
xor
int
xor
add
loopne
dec
into
sbb
sbb
jmp
add
inc
clc
mov
ds
jg
clc
outs
add
push
loopne
sbb
jae
aas
add
dec
std
pushf
fsubrp
out
add
mov
clc
push
xchg
add
mov
loopne
add
ds
adc
outs
add
ds
or
aas
pop
clc
push
xchg
add
mov
cld
jge
(bad)
ds
adc
outs
add
ds
or
sub
add
add
pop
cmp
aad
mov
fild
cld
scas
add
ds
cli
mov
jg
lock
xor
add
add
or
sbb
and
stos
or
cmp
push
cld
pop
rcl
add
cmp
jge
aas
and
out
jmp
jg
lock
jl
loopne
or
dec
rcl
and
cmp
pop
add
mov
or
pop
add
or
mov
das
add
or
dec
rcr
jl
add
clc
adc
fimul
clc
pop
add
jl
loopne
adc
and
and
xchg
add
jl
fimul
pop
mov
or
std
push
add
ja
fdivrp
js
out
pop
mov
fdivrp
js
es
loope
call
out
aam
fidivr
xchg
loope
sbb
and
stos
lock
xchg
xor
mov
call
test
xor
and
pop
xor
imul
mov
ja
(bad)
mov
lahf
jecxz
mov
fidivr
rcr
jnp
add
not
add
dec
js
dec
rcl
test
jge
ficomp
jnp
fisubr
xchg
adc
xchg
add
xchg
xor
pop
ins
add
cs
sub
popf
cmp
js
outs
lock
jmp
das
mov
mov
leave
cmp
icebp
out
(bad)
sti
dec
xchg
test
pop
fimul
clc
dec
mov
icebp
pop
(bad)
not
mov
js
mov
mov
rcl
icebp
pop
mov
dec
outs
lock
pop
dec
rcl
icebp
(bad)
push
add
pop
sub
(bad)
sti
pop
mov
out
outs
loop
adc
gs
adc
xchg
add
and
xor
loopne
icebp
pop
dec
rcl
pop
xchg
imul
mov
test
fimul
pop
test
dec
mov
fsubrp
push
jge
fisubr
lock
mov
xor
daa
fisubr
xor
inc
and
or
cmp
add
add
push
add
mov
cld
pop
sar
pop
add
clc
dec
rcr
ret
mov
scas
add
and
or
add
das
shl
retf
cmp
pop
add
and
adc
or
fild
add
clc
aaa
add
lock
das
add
popf
or
(bad)
ds
xchg
lock
add
aaa
add
lock
call
loopne
add
clc
adc
cmp
pop
add
popf
or
dec
sbb
add
pop
push
jl
loopne
add
clc
sub
xchg
add
mov
loopne
add
clc
cmp
js
stos
lods
add
cdq
sbb
add
rcl
sub
or
pop
rcl
add
sub
fild
jl
cmp
dec
add
clc
aaa
add
es
push
jne
or
adc
push
add
out
add
dec
add
clc
jnp
js
out
add
jge
jmp
loopne
add
clc
push
xchg
add
mov
call
clc
dec
dec
hlt
dec
xor
out
add
mov
clc
push
das
in
pop
push
clc
push
xchg
add
jmp
pop
or
add
pop
cld
dec
cmp
sbb
push
rcl
cmp
xchg
cmp
sub
add
clc
aaa
or
xor
push
add
call
rcr
rcr
jl
loopne
add
fwait
cmp
div
inc
jg
lock
sub
fwait
inc
loopne
inc
jg
lock
scas
(bad)
daa
mov
cld
imul
push
add
scas
add
jge
pop
add
rcl
add
stos
add
clc
xor
push
add
scas
add
out
or
sub
add
das
adc
add
test
std
sahf
cli
in
loopne
adc
add
pop
xchg
(bad)
in
jp
xor
add
dec
ins
mov
cmp
and
stos
jne
mov
fild
repnz
(bad)
lock
mov
js
sub
push
jns
push
fsubrp
loope
sbb
and
jge
ds
loopne
scas
add
scas
(bad)
sti
imul
jnp
fisubr
sub
pop
sar
loop
dec
dec
jbe
jmp
fidivr
out
ja
pop
(bad)
not
mov
out
ja
pop
(bad)
not
mov
add
adc
ficomp
pop
mov
out
in
rcr
lds
add
out
xchg
js
les
fisubr
push
leave
mov
dec
into
mov
out
xchg
js
and
int
cmp
and
jge
pop
lock
cmp
stos
sub
rcl
and
push
js
loop
xchg
cmp
(bad)
cmp
ds
out
gs
ret
jnp
xchg
xor
retf
adc
ss
add
ret
jnp
push
hlt
movs
js
and
scas
loopne
or
aad
jl
ficomp
div
add
mov
div
mov
mov
add
pop
loopne
or
aad
ds
add
add
pop
add
scas
dec
hlt
and
fwait
cmp
sub
xchg
xor
push
sub
adc
cmp
pop
add
sub
pop
push
clc
push
call
cld
pop
pop
cmps
pop
jbe
and
adc
aas
cs
clc
(bad)
lock
mov
loope
add
clc
aaa
add
es
add
out
adc
cld
mov
fisub
adc
add
pop
mov
call
clc
add
aas
psubb
rcl
fimul
add
dec
js
fimul
clc
add
mov
clc
xor
push
add
scas
ror
or
adc
mov
rol
jg
je
ja
lock
loopne
jge
inc
out
and
add
adc
sub
pshufw
lock
mov
push
add
mov
das
push
rcr
loopne
jl
loopne
je
scas
add
cmp
pop
push
clc
sub
xchg
add
pop
sub
add
ja
fisubr
(bad)
cs
xor
pop
push
js
clc
adc
mov
das
pop
cld
jmp
ja
dec
loopne
add
and
add
lock
add
add
or
add
push
clc
mov
mov
mov
xchg
add
test
lock
scas
push
jl
loopne
add
in
pop
add
hlt
ja
rcl
xor
add
dec
rol
clc
aaa
add
lock
(bad)
sbb
div
add
fwait
xor
add
mov
or
add
out
add
loopne
cmp
rcl
in
jae
pop
add
dec
or
jnp
rcl
add
cmps
sub
dec
or
xchg
loopne
sub
adc
and
adc
add
call
daa
add
(bad)
jnp
out
gs
(bad)
or
stos
push
lock
lods
xor
xor
mov
aaa
js
push
dec
(bad)
scas
js
ret
jnp
outs
lock
dec
hlt
add
pop
dec
rcl
xchg
adc
cmp
fsubrp
test
push
js
loop
xor
les
ror
mov
xor
xchg
js
and
ffreep
sti
cmp
mov
scas
les
ficomp
jnp
fimul
pop
movs
adc
fisubr
or
sti
js
sar
out
jge
push
push
loopne
push
pop
xchg
push
mov
(bad)
ds
lock
lods
xor
push
gs
cmp
push
jecxz
add
and
adc
jg
rcr
cmp
xor
div
fs
xor
fucom
sbb
inc
ficomp
mov
mov
(bad)
xchg
lock
es
jecxz
add
push
add
jns
in
adc
cmp
out
push
loopne
xor
aaa
loopne
outs
loope
sub
ffreep
jnp
sahf
in
dec
or
aaa
icebp
(bad)
adc
add
ffreep
sti
cmp
out
les
fidivr
out
xchg
js
xchg
push
xchg
enter
mov
mov
lock
add
dec
rcr
jl
loopne
dec
clc
push
sar
sub
cli
or
dec
rcl
std
or
pop
adc
lock
hlt
jno
(bad)
sahf
inc
fstp
adc
add
pop
jl
lock
fs
add
jb
fild
mov
dec
clc
push
sar
pop
add
hlt
add
push
add
or
add
stos
dec
clc
xlat
hlt
or
pop
add
sti
xor
lock
(bad)
ds
pop
mov
jbe
aaa
lock
add
jge
sti
add
pop
cld
frstor
lock
dec
ret
or
sub
sbb
mov
loopne
test
jg
cmp
cmp
sub
clc
das
add
cs
or
adc
sub
add
push
loopne
adc
xchg
add
sub
call
mov
jl
loopne
add
clc
sti
sub
outs
add
ds
add
add
jmp
pop
add
mov
mov
loopne
mov
loop
sahf
in
sub
jmp
push
add
jne
xchg
add
mov
ret
popf
mov
sar
xchg
add
sar
add
clc
mov
pop
(bad)
outs
add
or
push
sar
add
pop
cld
pushf
fsubrp
jmp
jg
lock
ret
retf
inc
mov
daa
jp
loopne
add
mov
sar
add
ins
sar
mov
inc
jg
outs
hlt
das
outs
lock
ficomp
fwait
cmp
push
fscale
jge
mov
in
add
(bad)
jnp
fisub
pop
cld
fisttp
clc
call
data16
add
clc
dec
or
pushf
sbb
push
in
or
movhlps
cmc
pushf
call
(bad)
sbb
jg
lock
cmp
call
lock
xor
push
add
sub
pop
add
dec
jg
clc
pop
add
mov
js
sbb
xor
adc
cmps
pushf
call
sti
jnp
aas
(bad)
sti
ffreep
sti
das
loop
or
aas
(bad)
ja
fidivr
push
jbe
(bad)
add
xchg
or
add
adc
and
xor
js
mov
arpl
call
fdivrp
sub
jg
out
fild
or
aas
lds
out
and
lahf
loopne
fwait
add
aas
fidivr
out
pop
js
jmp
das
(bad)
sti
dec
cmp
call
out
mov
jg
sub
js
out
lock
xchg
js
adc
mov
mov
icebp
ds
or
popa
mov
push
fsubrp
icebp
ds
pxor
adc
cli
jg
xor
(bad)
fcomip
inc
ins
ror
aas
(bad)
sti
aas
(bad)
sti
ffreep
sti
das
adc
(bad)
jle
div
push
loopne
pxor
pop
mov
inc
sti
jge
jmp
ficomp
mov
sar
push
mov
icebp
(bad)
sbb
jmp
fsubrp
loop
push
ficomp
std
js
mov
jnp
ja
fisttp
or
in
mov
and
xor
xchg
ja
inc
out
les
mov
mov
push
add
fidivr
scas
(bad)
jnp
fimul
js
ficomp
lock
ret
jnp
add
push
ficomp
out
loopne
adc
scas
loope
int
daa
cmp
xchg
jae
fstp
loope
icebp
pop
cmps
push
jbe
js
ret
fisubr
lock
out
aad
das
sar
ja
jmp
mov
clc
jle
(bad)
jle
iret
add
or
dec
clc
das
add
or
push
sar
lock
cmp
mov
jl
loopne
or
sub
cmp
fild
clc
or
rol
inc
or
daa
mov
fimul
clc
push
shl
push
ret
and
sti
sub
aaa
loopne
hlt
inc
outs
ret
sub
lods
out
jmp
or
push
jmp
test
jge
loopne
add
lock
xchg
stos
add
call
and
out
add
add
outs
add
scas
jmp
cli
retf
std
sbb
popf
lock
adc
call
loope
add
daa
cmp
sbb
(bad)
test
rcl
jp
mov
iret
add
leave
scas
push
dec
jbe
xor
fild
clc
pop
add
push
loopne
add
clc
adc
add
clc
push
xchg
add
test
call
sbb
loopne
inc
jmp
add
es
test
and
push
shl
or
in
call
loopne
sub
pop
pop
add
add
lock
rol
fisttp
clc
sub
cmp
ffreep
mov
add
stos
mov
scas
add
pop
loopne
add
scas
cmp
or
loopne
sub
fild
mov
dec
add
fild
call
loopne
add
clc
adc
(bad)
ds
cmp
iret
or
outs
adc
scas
jge
mov
jle
call
lahf
add
retf
add
add
pop
lock
xor
add
retf
jp
mov
mov
cli
or
sub
add
sbb
iret
add
and
and
add
sub
push
add
or
add
pop
test
or
mov
std
retf
cli
xchg
sub
jnp
sahf
call
call
repnz
repnz
into
dec
hlt
xchg
js
dec
lahf
lock
js
loop
scas
cmc
adc
fisttp
jecxz
sbb
div
inc
mul
leave
fst
jecxz
mov
mov
jp
fisubr
outs
loopne
test
pop
inc
rcl
retf
js
xlat
lahf
pushf
add
sub
stos
lock
dec
rcl
adc
dec
add
(bad)
neg
outs
fisubr
icebp
jle
out
div
adc
aas
lds
fisubr
adc
(bad)
pop
je
inc
xchg
jecxz
jne
mov
inc
pop
xor
push
add
out
or
loopne
or
dec
jns
xor
add
jl
outs
lock
js
lods
enter
mov
pop
jne
inc
dec
add
cmp
stos
sub
xchg
mov
cdq
pop
rcr
cld
fbld
loopne
icebp
(bad)
jae
pop
cli
sub
push
js
ret
out
push
sbb
sub
out
les
fisubr
sub
scas
and
sub
clc
dec
mov
pushf
sub
sti
sbb
clc
push
mov
sbb
fild
repnz
les
(bad)
in
mov
or
add
lods
ins
out
adc
rcl
mov
add
or
test
lock
das
add
pop
mov
push
xor
sahf
in
retf
scas
test
out
add
scas
add
jl
loopne
add
hlt
sub
jp
mov
jl
fsubrp
dec
add
clc
or
mov
mov
hlt
in
mov
mov
dec
loopne
add
dec
js
mov
loopne
hlt
or
sar
lock
loopne
or
or
xchg
jmp
clc
jnp
mov
lock
jne
repnz
fiadd
clc
cmp
or
add
jge
jg
cmp
fimul
mov
into
dec
hlt
jbe
scas
aam
fdivr
cs
adc
dec
sar
adc
add
fsubrp
sub
inc
loopne
jle
push
adc
in
cld
sbb
loope
add
clc
dec
dec
hlt
ja
jne
add
sub
call
add
clc
or
push
adc
push
cmp
add
pop
or
or
push
add
sahf
in
or
pop
add
adc
fstp
xchg
pop
sub
out
add
fs
lock
jg
lock
sub
add
adc
add
cmp
jbe
sub
or
or
fucom
popf
or
(bad)
push
add
adc
xlat
add
clc
mov
std
das
add
test
das
and
dec
rcl
sar
loopne
mov
ja
clc
jnp
mov
daa
cmp
xchg
mov
pop
test
outs
out
jb
das
pop
jl
(bad)
in
adc
das
adc
add
mov
mov
clc
xor
cmp
pop
mov
add
sar
call
loopne
add
hlt
xor
xchg
add
jl
loopne
stos
call
adc
gs
adc
in
call
loop
push
add
cmps
outs
lock
inc
ficomp
push
adc
gs
sar
sub
inc
out
(bad)
hlt
inc
(bad)
mov
ja
cli
data16
jge
(bad)
icebp
out
sar
mov
push
ds
push
aas
sar
clc
daa
jp
sti
inc
push
jbe
push
imul
fcmovne
xor
fwait
jp
ret
adc
aas
sar
pop
jmp
inc
sbb
(bad)
jne
mov
ja
xchg
pop
add
mov
(bad)
cmp
mov
cli
xchg
sti
xor
add
push
loop
add
aad
mov
(bad)
ja
fdivrp
dec
inc
aaa
add
mov
sub
std
scas
mov
inc
pop
sar
sar
clc
or
jl
ficomp
adc
jmp
fisubr
icebp
pop
movs
mov
loop
adc
gs
(bad)
jnp
fisubr
lahf
pushf
jns
(bad)
sti
sbb
(bad)
sti
sub
cmp
and
cmp
pop
xchg
dec
mov
js
adc
pop
mov
out
mul
addr16
(bad)
ss
xor
jg
out
xchg
jp
sub
mov
rcl
aas
fidivr
div
sub
or
jp
loopne
or
dec
lock
inc
movs
sub
jl
ds
push
lahf
jb
gs
add
add
jmp
loopne
add
mov
mov
pop
add
push
jno
ja
dec
loopne
hlt
inc
pop
pop
jne
dec
ret
mov
or
ret
jl
loopne
add
cmp
retf
dec
clc
xor
xchg
pop
movs
ds
add
clc
dec
sar
jbe
psubb
add
and
ins
mov
pop
jne
add
or
push
jmp
clc
or
cmp
call
loopne
add
lock
ja
sub
sahf
in
lods
outs
(bad)
sahf
in
ficom
dec
add
cli
arpl
xchg
add
lock
lahf
in
retf
hlt
adc
int
add
rcr
loopne
add
lock
add
(bad)
xor
(bad)
mov
sub
daa
add
sbb
stos
add
clc
das
jmp
fisubr
add
js
add
js
add
push
sbb
hlt
dec
add
xchg
mov
out
adc
aad
jmp
loopne
cmp
fild
cld
push
or
jmp
cmp
pop
dec
rcl
push
jg
test
add
push
adc
xchg
add
clc
dec
rcl
ja
pop
inc
rcl
or
xchg
sub
lock
add
clc
jb
fnstcw
push
inc
outs
add
add
adc
movs
sub
out
jno
das
pop
jl
loopne
or
sub
push
add
add
test
cmp
rcr
cld
xor
mov
mov
cli
aas
shl
mov
fimul
pop
and
pop
rcr
mov
lock
sub
xchg
mov
(bad)
sub
add
out
or
mov
scas
add
and
mov
add
sahf
stos
push
adc
or
iret
hlt
or
pop
push
clc
jb
ffreep
jnp
mov
mov
js
(bad)
jnp
fsubrp
mov
mov
rcl
sti
fwait
inc
jg
sar
ret
jnp
fsubrp
adc
sahf
call
xchg
popf
ins
mov
jnp
fiadd
js
(bad)
sti
pop
std
leave
mov
sti
pop
mov
scas
xchg
lock
jle
lahf
lock
ja
std
cs
adc
jle
jg
dec
mov
sub
in
scas
sub
mov
fst
std
mov
mov
sub
sti
xchg
mov
jp
mov
sbb
test
fisubr
push
gs
bnd
dec
jbe
je
repnz
jmp
adc
test
pop
add
pop
cmp
xchg
jecxz
out
pop
lds
push
gs
and
les
stos
in
in
inc
jg
sbb
jg
dec
hlt
out
push
fisubr
jbe
std
out
loopne
sbb
jmp
fisttp
fwait
div
(bad)
loop
out
(bad)
sti
pop
js
loop
pop
cli
xchg
mov
jl
fimul
push
push
push
sti
push
add
jmp
fsubrp
dec
out
stos
mov
ja
std
stos
js
aas
mov
mov
push
fs
mov
push
lahf
jb
aad
fst
test
stos
ds
add
mov
or
sub
push
lahf
jb
mov
mov
das
das
stos
mov
ror
mov
xchg
add
cmp
das
add
pop
add
ret
sub
lock
cmp
fist
or
test
(bad)
push
or
jb
shr
(bad)
jne
call
stos
outs
sub
fsubrp
or
adc
cmp
rcl
fnstcw
jl
lock
push
mov
loopne
cmp
add
rcl
hlt
or
lods
push
fstp
fisttp
add
and
sbb
movs
jp
stos
add
out
test
test
clc
adc
pop
daa
jl
daa
cli
fild
jl
add
jg
mov
cld
mov
lock
jne
movs
sub
lock
cmp
mov
push
add
rcl
gs
test
xchg
jno
mov
mov
jl
add
clc
xor
dec
lahf
lock
sub
jl
daa
cli
xor
sar
clc
pop
jmp
pop
push
clc
sub
cmp
scas
add
hlt
push
push
imul
cmp
std
mov
fucom
lods
call
aad
mov
rcr
mov
(bad)
gs
mov
sar
lock
cmp
loopne
cmc
daa
push
movs
aaa
cli
pop
add
clc
push
cmp
adc
mov
push
xchg
pop
xor
pop
cli
mov
push
loopne
mov
mov
test
(bad)
cmp
pop
and
das
daa
loopne
mov
mov
mov
sub
cli
xor
dec
fisubr
pop
(bad)
mov
push
gs
sbb
jmp
fwait
mov
scas
push
rcr
mov
pop
test
mov
jecxz
scas
retf
push
fscale
ins
fucom
sub
add
jmp
mov
mov
js
ficomp
mov
(bad)
sahf
in
in
push
pop
mov
(bad)
fld
mov
lock
adc
mov
mov
inc
sar
out
and
add
xchg
mov
mov
dec
sar
fidivr
call
retf
out
repnz
jae
int3
out
ficomp
jmp
in
cmp
ins
ja
add
repz
popa
mov
add
in
push
addr16
stc
inc
mov
imul
adc
dec
and
adc
in
mov
adc
pusha
test
fmul
call
scas
ja
rol
stos
mov
out
cmp
dec
out
out
ds
repz
adc
pop
add
adc
or
out
pop
mov
ror
loope
lock
je
das
mov
pop
mov
jbe
lahf
and
loop
test
adc
das
jp
cs
inc
add
mov
fidiv
push
mov
mov
xadd
shl
mov
jl
out
aaa
mov
cmps
loopne
out
dec
clc
iret
jns
mov
out
ja
mov
mov
inc
aas
or
sub
loope
push
out
ja
cmp
out
jne
out
sar
loopne
dec
aaa
xor
pop
hlt
sbb
cmps
loopne
dec
aaa
retf
pushf
fnstsw
imul
pop
mov
pop
outs
jb
fcom
inc
scas
sbb
adc
ret
pop
ja
push
pavgb
fst
add
mov
add
cmc
sub
loopne
add
add
add
loopne
add
mov
jge
test
cld
ret
add
push
rcl
jne
fild
clc
add
adc
xchg
sub
add
adc
sub
pop
add
or
aas
inc
inc
jg
sub
addr16
scas
mov
xchg
ret
mov
jnp
xlat
lock
out
add
(bad)
mov
push
pop
cld
or
jmp
arpl
scas
xor
add
or
shl
add
add
add
dec
or
call
ds
es
shl
add
pop
add
or
xor
add
shl
inc
inc
lahf
and
sbb
or
lock
or
lock
dec
rol
lahf
mov
ins
test
xchg
adc
push
rcl
mov
(bad)
(bad)
(bad)
xchg
xlat
call
(bad)
lea
call
mov
ror
loopne
add
loope
add
xor
add
push
lock
add
add
sbb
das
add
xor
inc
loopne
or
clc
add
sbb
sbb
xor
loopne
add
add
push
lock
add
sbb
ss
cmp
hlt
(bad)
mov
inc
dec
aaa
sti
sahf
ror
add
aaa
lsl
and
pop
add
inc
sub
outs
jb
sbb
clc
adc
inc
add
add
push
rcl
mov
(bad)
stos
mov
pop
jbe
loopne
mov
or
add
and
mov
sar
sbb
int
jmp
cmp
call
mov
add
aas
add
xor
inc
inc
pop
xor
fimul
jnp
shl
sar
mov
adc
ret
jnp
fidiv
js
loopne
xor
ficomp
addr16
sar
dec
daa
inc
addr16
sar
dec
js
adc
or
xor
loopne
mov
xor
fidiv
js
adc
imul
int
repz
pop
or
add
stos
sar
add
pop
inc
loopne
cmp
push
inc
mov
outs
xor
cli
or
xor
movs
mov
add
add
or
sbb
sbb
xor
loopne
xor
mov
out
sbb
test
add
pop
pop
(bad)
push
cs
mov
mov
add
test
and
cmps
fwait
xor
hlt
jp
aas
or
or
xchg
lock
jae
or
daa
loopne
or
sbb
lahf
sar
lahf
sar
xor
clc
or
xor
adc
es
or
sbb
or
xor
cli
or
mov
ret
mov
loopne
mov
mov
xor
cmp
mov
inc
scas
adc
scas
inc
clc
sub
cmp
jnp
add
sbb
push
dec
sub
mov
fistp
mov
mov
sbb
int
sahf
rol
mov
xchg
pop
or
cmp
lea
sub
jmp
ss
sbb
(bad)
fmul
add
ins
mov
pop
jge
stos
push
jle
imul
pop
(bad)
lock
ror
dec
sub
inc
mov
or
push
in
gs
add
xor
lahf
add
pop
sub
and
cld
or
pop
jl
loopne
add
and
mov
retf
scas
push
push
or
(bad)
call
ds
mov
sbb
fild
pop
mov
mov
dec
scas
add
sub
pop
add
and
sbb
lahf
add
sub
pop
jl
loopne
add
jbe
mov
or
rcr
mov
lock
or
scas
mov
pop
jnp
cmps
ret
fcom
shr
cmp
xchg
pop
sbb
dec
js
(bad)
dec
loopne
sbb
popa
ins
adc
shl
popa
add
mov
daa
or
jl
loopne
repnz
push
in
pop
(bad)
mov
inc
call
lock
jbe
dec
aaa
sub
in
adc
leave
mov
(bad)
imul
aas
test
sbb
inc
outs
jb
fwait
imul
pop
pop
clc
ss
loopne
add
or
cmps
mov
add
cs
outs
add
push
jle
push
inc
fild
lahf
repnz
lods
xchg
outs
bound
mov
sahf
packsswb
pop
add
int
dec
dec
and
sub
pop
cmc
mov
pop
and
fsub
mov
arpl
scas
and
pop
das
fstp
div
test
pop
inc
loopne
lock
cmc
fwait
pushf
inc
hlt
jp
xlat
sbb
xor
gs
rol
add
dec
scas
(bad)
fdiv
mov
js
sar
lahf
lock
mov
loope
lock
(bad)
and
ret
lock
xor
adc
and
popa
add
push
out
sub
outs
test
xor
fild
push
shl
scas
and
sbb
imul
xor
add
aas
pxor
scas
lods
pop
jne
or
les
mov
sbb
pop
repnz
sbb
fidiv
sbb
mov
push
and
inc
ja
and
mov
sub
lock
stos
cmp
ja
loop
add
ret
lock
icebp
mov
test
ja
add
pop
test
adc
and
and
cld
xor
and
and
ds
push
dec
ja
or
xor
push
pop
rol
ds
and
pop
xor
mov
js
inc
loopne
pusha
lea
fiadd
mov
pop
int
push
loope
sbb
mov
(bad)
pop
sub
lock
mov
hlt
sub
clc
sbb
cmc
or
inc
add
cmps
mov
inc
loope
push
clc
fcomp
mov
mov
loop
hlt
or
pmulhw
out
sbb
pop
outs
loope
aas
adc
jl
lock
rcr
jge
out
fcomp
(bad)
push
xor
add
scas
stc
push
out
sbb
loope
push
(bad)
pop
or
(bad)
int
mov
dec
jbe
rcr
int3
or
(bad)
js
inc
xor
in
push
or
mov
push
sar
jbe
scas
aam
in
nop
inc
jbe
adc
arpl
dec
pop
or
xchg
lock
loop
mov
sub
ror
cld
nop
pop
js
ret
pop
neg
sbb
pop
jno
xchg
data16
adc
adc
in
add
scas
inc
clc
and
(bad)
and
jne
outs
add
mov
jg
imul
add
clc
popa
mov
mov
xor
xlat
add
mov
jl
loopne
js
scas
sub
jmp
int
fild
jg
js
scas
cli
adc
(bad)
jp
aaa
jmp
pop
xor
ret
sbb
aaa
jae
loopne
or
cli
sub
push
or
in
ret
pop
ins
fnstenv
inc
mov
pop
mov
(bad)
cmp
(bad)
jp
es
loopne
mov
vmwrite
cs
or
dec
push
shl
mov
shl
jl
clc
outs
cmps
loopne
js
ret
jle
loopne
mov
ror
add
jl
inc
aas
call
lods
fisubr
rcl
lock
mov
lahf
fdivr
bound
loopne
adc
and
sbb
sbb
loope
inc
inc
aas
add
mov
ins
pop
fimul
jnp
mov
pop
xor
repz
stos
dec
cmp
jmp
jnp
fiadd
jge
xchg
mov
rcl
dec
sbb
mov
cmp
pop
push
jl
mov
mov
lock
scas
and
ret
lock
xor
mov
xchg
call
outs
jmp
in
lock
inc
loopne
loope
out
clc
jmp
ds
int
mov
inc
sbb
mov
push
pop
ret
sbb
mul
scas
rol
mov
std
cmp
jae
adc
call
jl
xchg
lock
sbb
(bad)
cmp
out
sar
lods
fidiv
outs
aad
pop
jbe
fldenv
jb
js
sbb
lock
cmp
adc
ret
or
ja
fnstsw
jne
adc
sti
dec
jle
sub
sti
push
mov
loopne
dec
aaa
add
pop
icebp
pop
in
and
outs
xor
jmp
pop
loopne
or
stos
adc
shr
gs
hlt
inc
add
aad
pop
adc
outs
mov
ret
jbe
out
retf
jl
push
inc
loope
add
push
clc
xor
ins
fldl2t
push
dec
xchg
popf
out
push
jge
adc
pop
push
clc
popa
outs
fldcw
push
lock
or
in
ror
aam
add
loopne
add
add
pop
sbb
iret
cli
push
outs
add
add
aaa
push
clc
imul
pop
add
pop
sbb
aas
pop
lock
push
hlt
addr16
clc
sbb
add
loopne
jge
xor
das
das
cmp
adc
add
in
jge
or
add
push
or
inc
add
add
jmp
sar
mov
pop
add
movs
and
pop
mov
dec
inc
inc
jg
adc
pop
add
(bad)
push
rcr
clc
fild
das
add
push
cmp
add
inc
loopne
add
cmp
das
add
adc
iret
add
adc
das
add
or
iret
add
iret
add
or
lahf
inc
loopne
add
aas
add
sbb
aaa
cmp
adc
fwait
add
add
mov
hlt
adc
iret
add
adc
iret
add
add
aas
add
cdq
popf
das
fs
movs
mov
sub
mov
loopne
mov
or
cmps
test
inc
add
xor
sar
xor
jg
rol
jmp
out
jecxz
jg
pop
jbe
add
lock
test
mov
(bad)
pop
or
push
shr
and
jno
mov
mov
adc
sbb
int3
add
ja
(bad)
popf
or
push
rcr
pop
mov
in
shr
shr
add
scas
mov
dec
add
loopne
add
data16
add
sbb
outs
fcmove
outs
pop
sbb
pop
push
js
pop
in
add
and
fcomip
xchg
popf
mov
jnp
add
mov
lock
add
dec
sbb
ja
jle
(bad)
loopne
or
imul
loopne
pop
data16
lock
mov
pusha
push
jnp
lods
outs
in
lods
adc
cs
sbb
outs
out
retf
fild
or
in
adc
inc
inc
fild
out
test
jne
fild
ja
jge
fidiv
pop
or
xchg
lock
out
sbb
aas
push
out
sbb
fbld
push
sahf
fdivr
mov
mov
lock
imul
sti
push
mov
sar
mov
js
fucom
aam
inc
loopne
loope
jno
pop
loope
aaa
in
pop
jns
fsubrp
inc
loopne
adc
jg
shr
fsubrp
adc
adc
jg
add
add
mov
lahf
inc
loopne
test
or
cli
or
pop
fisub
mov
js
repz
jp
push
inc
jmp
jmp
add
push
js
test
daa
lock
lock
in
mov
inc
lock
sar
mov
mov
sar
or
das
ret
out
mov
jle
fisub
or
mov
ds
xchg
inc
(bad)
in
into
jp
aas
pxor
sub
shr
mov
out
addr16
add
ficom
addr16
push
sbb
pop
mov
fsubp
outs
xor
js
xchg
frstor
mov
dec
imul
mov
pop
or
ret
pop
jbe
adc
or
rcr
mov
add
and
scas
mov
pop
cmp
sti
inc
cmp
lock
sbb
push
in
cmp
retf
mov
adc
stos
adc
shl
jne
mov
mov
outs
sub
(bad)
test
adc
push
cmp
sub
adc
(bad)
jl
pop
add
aad
retf
dec
imul
mov
add
and
pop
add
push
aaa
adc
push
add
add
ja
stos
fidiv
loopne
push
stos
mov
movs
mov
sub
hlt
sbb
stos
xlat
push
inc
pop
mov
popf
mov
dec
(bad)
xor
mov
add
lock
add
xchg
xchg
jns
push
in
shr
(bad)
rol
jg
loopne
add
outs
inc
(bad)
push
cmp
lock
pop
or
pop
jo
jmp
hlt
stos
jle
mov
clc
or
jmp
ds
iret
add
dec
adc
(bad)
scas
add
call
cli
xchg
add
sbb
hlt
gs
call
cmps
jmp
hlt
mov
fbld
lock
add
shr
pop
jne
outs
jnp
pop
mov
test
clc
mov
add
ficom
daa
loopne
sub
mov
sub
add
iret
fcomp
dec
pop
jbe
sub
out
mov
loope
shr
adc
jb
mov
shl
cld
imul
cld
xor
das
stc
dec
outs
or
daa
add
aas
or
mov
aas
pop
lock
inc
ret
pop
sbb
(bad)
mov
cld
adc
dec
add
push
add
loopne
add
sub
jg
fisub
push
loopne
adc
daa
loope
adc
daa
add
sub
cmp
enter
stos
or
push
inc
das
stos
fwait
inc
pusha
jne
jmp
pop
outs
jb
xor
fs
out
jns
popf
xchg
sub
xor
fisub
call
ficom
iret
sar
mov
loope
mov
dec
ret
sti
adc
aaa
loope
or
outs
and
sub
mov
sti
add
scas
and
repz
hlt
push
lock
fisub
addr16
ins
push
rcl
loopne
pop
stc
adc
loopne
adc
jo
pop
xchg
xchg
sub
or
cld
loopne
loope
mov
mov
fsubp
push
js
popf
pushf
push
arpl
div
pminub
outs
aad
push
cmp
mov
hlt
enter
cmp
or
cli
inc
js
ret
lock
aas
out
dec
mov
aas
or
jae
ds
mov
test
jle
aas
mov
iret
sar
cmc
es
ficom
mov
sbb
jl
cmp
dec
cs
sbb
dec
add
sub
iret
add
add
iret
add
add
aas
or
mov
add
jbe
mov
mov
add
aaa
add
mov
das
das
mov
lock
sub
adc
das
add
or
lahf
add
xchg
iret
add
iret
add
sbb
aas
or
adc
cmps
add
adc
adc
out
jle
loopne
add
lods
xlat
push
add
test
push
inc
lahf
pop
loope
aaa
and
ret
mov
loopne
jl
sbb
imul
jle
loopne
popf
sbb
or
add
pop
sbb
sbb
and
add
inc
add
or
mov
lahf
add
or
dec
add
pop
inc
loopne
add
or
iret
add
sub
aas
dec
inc
aas
(bad)
push
push
hlt
adc
mov
cld
mov
cmp
mov
xor
das
add
pushf
lods
outs
add
cs
add
loopne
add
sbb
add
xor
add
(bad)
rol
fild
add
sub
int
add
add
pop
sbb
push
clc
add
add
jns
ror
cli
adc
xor
adc
and
xlat
add
or
cld
pop
add
mov
jg
loopne
sbb
mov
and
xchg
clc
inc
lock
sar
sar
pop
push
clc
fild
pop
inc
loopne
(bad)
sar
aas
(bad)
xlat
test
jg
movs
fwait
or
and
adc
lahf
push
clc
jns
cli
sub
xchg
mov
mov
loopne
adc
inc
sub
sbb
ror
cld
pop
sbb
and
xor
jg
sbb
sbb
jnp
jbe
loopne
add
loopne
and
adc
mov
aas
or
xor
loopne
adc
test
loopne
sahf
ror
(bad)
pop
add
imul
sar
dec
sar
jmp
shr
push
xchg
lock
cmp
clc
mov
dec
add
sbb
mov
loopne
pop
cmp
lock
js
(bad)
stc
xor
lock
loope
ror
or
mov
hlt
or
ds
movs
mov
loope
inc
loopne
and
dec
js
mov
cmc
or
loope
push
fisub
push
ins
jne
add
mov
ds
shl
jge
fisub
jge
js
pop
test
inc
or
cmp
inc
push
sar
fidivr
fidivr
or
fild
sti
adc
jmp
scas
add
aas
test
out
sar
loopne
(bad)
loope
cmp
(bad)
sbb
jg
fidivr
ficomp
test
outs
and
call
fidivr
or
jg
out
inc
fdivrp
ins
rol
retf
mov
and
mov
jle
fisub
loope
fidivr
iret
sar
fisttp
mov
js
ret
mov
out
jae
fiadd
test
out
adc
inc
js
test
gs
ss
xor
cld
adc
dec
sar
add
call
mov
pop
xor
loopne
push
lock
cmp
pmaxub
ret
mov
add
mov
imul
(bad)
cmp
call
jg
(bad)
add
push
loope
cmp
mov
in
pop
cdq
aad
dec
out
jg
sti
dec
adc
lahf
ret
popf
das
and
or
pop
loopne
jbe
shr
push
out
mov
pop
mov
lds
inc
das
cmp
dec
pusha
inc
inc
push
jmp
outs
xor
cmp
pand
ds
ror
dec
xchg
out
inc
add
clc
and
scas
fimul
xchg
xchg
cmp
xor
and
scas
push
out
arpl
nop
ret
clc
or
push
loopne
add
loopne
push
clc
jae
fild
sub
ror
cld
sub
aaa
test
adc
gs
scas
xchg
pop
adc
addr16
clc
jns
lahf
push
clc
add
add
das
add
xchg
adc
ffree
das
add
and
das
add
xor
das
js
daa
cmp
retf
aaa
and
jg
cmp
add
dec
adc
lar
test
pop
add
pop
add
inc
add
dec
add
jnp
inc
call
loopne
pop
loopne
add
mov
cmp
sar
mov
outs
jb
mov
imul
daa
add
loopne
adc
add
fwait
add
sbb
push
loopne
add
(bad)
shr
cld
sbb
das
add
push
loopne
add
loopne
add
loopne
add
loopne
add
sbb
into
add
adc
dec
add
mov
jbe
clc
xor
imul
xchg
adc
jae
cld
cmp
xchg
add
or
sbb
dec
and
dec
sbb
add
add
imul
lock
sbb
add
and
aaa
add
loopne
add
loopne
add
loopne
add
movs
add
jae
aas
xchg
fwait
push
add
cwde
out
in
cld
imul
dec
add
xor
lahf
add
aas
or
adc
jg
sbb
aas
xor
lock
sbb
mov
aaa
add
sub
dec
add
sbb
iret
mov
daa
add
loopne
add
loopne
add
pop
add
mov
test
jmp
jl
cmp
rcl
pop
dec
aaa
adc
mov
xor
dec
ret
sti
add
aas
add
ret
sti
sbb
aas
or
shl
ds
pop
fild
loope
push
sbb
mov
dec
ret
sti
sbb
scas
and
push
lock
idiv
pop
xor
or
mov
mov
mov
addr16
clc
inc
add
jb
jg
fsubp
gs
pusha
das
cmp
or
cmp
push
inc
hlt
sbb
cmps
jge
cmp
out
push
lock
mov
js
ret
mov
js
or
dec
add
fidivr
es
mov
add
imul
or
imul
aas
mov
dec
pop
loopne
loope
sbb
adc
sbb
ds
pop
imul
js
mov
jge
out
mov
call
(bad)
call
fidiv
lock
fwait
cdq
ja
das
fidiv
jae
ds
xor
das
cwde
test
mov
mov
mov
push
loopne
push
fisub
lock
ds
cs
retf
mov
pop
xor
mov
fucomi
inc
dec
jbe
lock
fisubr
mov
std
xor
movs
xchg
daa
cmps
push
ds
jge
lock
clc
enter
pop
retf
js
shl
das
add
outs
add
stos
pop
in
cmp
inc
pop
pop
clc
shr
push
in
add
push
clc
mov
adc
mov
loopne
fld
push
jbe
cmps
add
lock
sbb
clc
add
out
xchg
idiv
outs
out
xlat
call
in
call
mov
add
xchg
ret
mov
fucomi
adc
xlat
in
dec
mov
jl
loopne
push
jl
mov
int
xchg
data16
fxam
pop
jbe
add
and
sub
pop
mov
rcl
add
add
sub
fxch
retf
dec
xchg
lock
fidivr
push
add
sbb
or
repz
loopne
sbb
xchg
add
xor
out
add
popf
pusha
lea
call
clc
mov
ror
retf
dec
pop
jbe
add
or
pop
cld
cmp
pop
push
clc
retf
add
cld
inc
sbb
fadd
shr
push
and
jb
(bad)
enter
out
ficomp
mov
stos
cmp
loopne
adc
aaa
and
mov
cmp
ror
mov
loopne
inc
loopne
xor
sbb
imul
call
inc
loopne
push
lock
add
loopne
add
popf
add
clc
jne
jle
test
mov
jg
sub
ret
outs
inc
jno
aaa
cmp
imul
ja
sbb
clc
sbb
outs
mov
in
int
xchg
mov
jl
aaa
mov
ffree
out
stos
mov
mov
in
hlt
jp
scas
push
pop
jbe
mov
push
(bad)
in
xor
jg
loopne
add
cs
xor
mov
faddp
adc
or
fild
push
mov
cs
lock
dec
outs
sbb
das
ret
mov
pop
loopne
sbb
xlat
loopne
xor
jge
fisubr
and
mov
cld
es
add
loope
pop
fidiv
mov
call
lock
shr
dec
outs
or
jne
mov
jno
pop
mov
js
xor
lock
lock
sti
or
mov
cld
gs
xchg
pop
js
inc
loopne
xchg
mov
fisttp
fsubp
(bad)
adc
sub
scas
ret
sti
(bad)
jle
mov
xor
push
pop
scas
cmp
dec
scas
or
jmp
rcr
loopne
ds
mov
jbe
mov
sub
ret
jnp
fidiv
ins
dec
jge
inc
jbe
mov
sub
into
data16
mov
movs
xchg
outs
outs
xor
(bad)
lock
mov
mov
outs
into
pop
loopne
lock
or
(bad)
mov
fimul
mov
xchg
fnsave
js
sar
fwait
call
(bad)
(bad)
push
xor
out
(bad)
adc
xor
pop
mov
dec
or
sub
jl
jo
xchg
repz
add
test
jns
inc
div
in
repnz
or
call
clc
add
mov
add
arpl
gs
adc
retf
jge
aaa
(bad)
ins
jne
fs
fwait
and
out
xchg
ins
pop
pop
mov
inc
in
inc
mov
sbb
sub
mov
aaa
aaa
fmul
scas
loop
pop
(bad)
pop
inc
loope
sub
nop
packsswb
sub
stos
xchg
xchg
popf
int3
push
and
pop
lods
mov
lods
outs
xor
xchg
aad
pushf
das
inc
add
jg
loopne
pop
(bad)
(bad)
add
loopne
mov
add
jecxz
pop
push
clc
mov
add
int
jae
mov
xchg
sub
cld
sbb
jae
or
int
add
xor
iret
das
loope
add
loopne
or
dec
(bad)
push
cmp
loopne
test
mov
xchg
add
adc
(bad)
jbe
nop
xchg
pop
or
pop
add
sbb
adc
xor
mov
xchg
pushf
das
and
dec
loopne
not
rcl
mov
lock
add
mov
(bad)
repnz
aam
jmp
mov
push
stos
mov
(bad)
in
mov
add
mov
das
loope
add
mov
(bad)
loopne
outs
or
das
add
adc
not
clc
jne
mov
hlt
outs
xor
mov
loopne
add
mov
jle
loopne
add
ins
sbb
loopne
add
loopne
adc
or
mov
cld
jbe
adc
dec
pop
dec
pop
jbe
in
or
fwait
add
loopne
add
loopne
adc
sbb
mov
cld
shr
outs
cmp
jbe
loopne
or
and
(bad)
jge
aaa
out
mov
ja
mov
mul
jl
dec
fld
cmc
or
fcomip
popf
pop
lds
jp
dec
test
outs
or
div
mov
neg
dec
fimul
jecxz
hlt
ja
sti
push
add
lock
or
pop
mov
not
outs
sar
add
push
out
retf
or
cmp
cld
push
add
lock
pop
loopne
jns
jns
in
push
add
shr
sti
xchg
adc
loope
add
loopne
sbb
(bad)
loope
add
mul
jge
sbb
mov
std
add
fild
out
fwait
pop
mov
add
adc
xlat
loope
lahf
cmp
jp
or
cmp
mov
fadd
add
add
addr16
fisubr
outs
fadd
push
out
out
sbb
mov
pop
inc
loopne
loope
pmaxub
loopne
add
mov
clc
sti
adc
fucom
or
and
aaa
and
test
(bad)
pop
add
adc
pop
loope
adc
pop
jge
aaa
or
xor
or
(bad)
jno
xchg
repz
or
pop
jge
pop
xchg
rcl
ficom
add
fdivp
inc
js
scas
inc
clc
ss
mov
test
fwait
mov
or
and
inc
js
dec
enter
scas
push
inc
fild
aas
fs
sbb
jmp
daa
push
clc
shl
add
and
pop
mov
dec
or
sub
pop
or
movs
push
sbb
clc
inc
or
sar
mov
push
dec
push
aaa
and
pop
fnstcw
in
jmp
lock
push
clc
push
rcl
pop
(bad)
test
pushf
das
push
add
push
add
clc
fwait
add
test
and
mov
add
mov
loopne
add
rol
stos
xchg
jns
sbb
aas
push
mov
shr
pop
dec
pop
jbe
mov
loopne
add
cmp
stos
aad
cld
stos
add
jbe
fs
adc
push
add
sbb
xchg
add
outs
lods
not
pop
mov
fucomp
imul
add
push
ds
mov
jle
in
cli
push
jnp
mov
lock
stos
lods
jns
ss
scas
mov
dec
ins
ins
aad
clc
inc
add
or
movs
fs
movs
aaa
cmp
int
fdivr
and
loop
call
jl
repz
or
addr16
and
dec
or
outs
hlt
jae
scas
dec
clc
xlat
add
out
jle
ja
or
xor
cld
imul
push
lock
xchg
dec
or
xor
jne
retf
mov
adc
jmp
stos
mov
ds
(bad)
(bad)
call
add
lock
jl
movs
sbb
call
out
aam
rol
aas
add
movs
ror
dec
in
mov
fisubr
add
ficomp
aaa
add
cmp
mov
in
add
push
lock
add
retf
push
hlt
(bad)
mov
loop
mov
fistp
mov
js
push
js
aad
inc
das
imul
xchg
imul
scas
cmp
or
in
xchg
fdivr
sbb
push
ret
jnp
out
(bad)
adc
int
inc
push
imul
loopne
or
and
data16
ins
ins
adc
aaa
mov
adc
imul
xor
js
sar
fwait
mov
out
inc
pop
mov
sub
scas
mov
iret
xchg
xchg
mov
mov
mov
sbb
lock
ret
jnp
xor
jne
dec
sub
and
icebp
scas
test
push
retf
retf
dec
pop
jbe
stos
adc
iret
iret
les
fidivr
sub
pop
mov
xchg
out
in
inc
ret
push
ja
push
loopne
push
(bad)
xor
std
jns
push
pop
fild
mov
jnp
fidiv
mov
out
mov
fld
cdq
jnp
mov
clc
pop
push
leave
xchg
rcl
shl
bnd
popf
int
not
mov
ficom
js
je
int3
adc
pop
adc
pop
rcr
mov
in
int
xchg
add
add
add
retf
clc
popa
pop
retf
push
jns
jb
outs
mov
retf
fidiv
add
dec
ja
add
lock
mov
mov
rcr
fmulp
add
sub
add
dec
or
scas
add
mov
fcomp
pop
mov
loopne
imul
push
rcr
das
jp
pop
adc
icebp
adc
lock
hlt
fwait
pop
outs
inc
das
outs
stos
push
or
and
fild
clc
stos
ss
or
repz
mov
(bad)
into
fwait
xchg
shl
outs
add
adc
int
outs
out
add
or
sub
(bad)
jne
mov
or
aas
cmps
mov
xchg
in
add
cmp
push
sar
xchg
sbb
out
cmp
dec
mov
mov
(bad)
jecxz
pop
jb
dec
add
jb
outs
push
sar
loopne
shr
arpl
arpl
add
push
lock
pop
jb
je
add
push
sar
loopne
out
loopne
mov
sbb
cmp
adc
mov
mov
les
dec
jne
clc
jecxz
lahf
add
xchg
das
and
lahf
jbe
pop
adc
leave
aad
clc
push
sar
stos
add
cmp
push
stc
push
sbb
cmps
add
mov
xchg
pop
ins
or
aas
jmp
test
xchg
retf
adc
dec
inc
scas
push
ds
xchg
add
popf
pushf
mov
mov
ja
clc
adc
xor
call
pop
cmp
lock
adc
and
repnz
fsub
cmp
clc
aam
jp
retf
push
stc
push
stc
popf
pushf
cmp
dec
imul
js
pop
in
das
ja
inc
loopne
mov
out
in
mov
xchg
mov
xchg
adc
popa
in
xchg
lock
ret
jnp
js
sahf
mul
jl
sub
inc
jmp
clc
add
and
cs
(bad)
loop
into
mov
pop
dec
aaa
loop
sub
leave
and
fs
xchg
rep
and
mov
cmp
out
inc
call
mov
inc
hlt
sub
pop
in
jecxz
add
js
inc
scas
adc
hlt
fidiv
test
jae
aad
pushf
mov
jle
pop
jbe
js
xor
add
inc
loopne
mov
lods
mov
xchg
ror
or
gs
std
sbb
pop
mov
xchg
repnz
jns
inc
loopne
add
pop
xor
mov
add
jg
fimul
scas
ins
rol
jg
cmp
ss
les
pop
adc
fiadd
cmp
dec
fstp
cmp
push
(bad)
xchg
add
in
pop
cmp
xchg
lock
clc
sbb
adc
shl
jle
xchg
call
jns
dec
loopne
xchg
pop
retf
mov
shl
jl
loopne
add
cmp
les
in
pop
add
test
add
les
scas
sbb
jg
mov
loopne
jl
cmp
inc
inc
(bad)
jp
fldcw
adc
hlt
xor
enter
ins
add
fstp
add
in
ds
or
push
das
cmc
mov
lods
ss
push
or
xor
sbb
push
rcr
inc
aas
mov
aaa
add
cmp
and
mov
lock
add
and
inc
jbe
push
bound
pop
repnz
lods
repnz
push
xchg
or
jp
dec
mov
inc
scas
xchg
popf
add
xchg
movs
out
add
hlt
or
stos
add
adc
dec
jl
push
lock
pop
or
jg
shl
sub
bound
(bad)
push
pop
adc
sub
(bad)
jbe
push
mov
add
inc
loopne
and
push
or
add
jle
retf
jl
add
aam
jl
call
add
pop
scas
aaa
mov
add
or
push
shr
and
and
or
icebp
adc
retf
dec
mov
sbb
cld
sub
jl
lock
mov
out
loopne
add
or
cmps
sbb
mov
add
fucom
out
aam
(bad)
push
ss
ins
add
pop
mov
mov
dec
adc
aam
lock
(bad)
and
dec
test
les
xchg
mov
mov
sar
ja
hlt
aad
jle
inc
loopne
mov
jge
stos
xchg
xchg
popf
loop
or
sahf
(bad)
inc
add
mov
jns
jmp
out
sar
sti
cmp
push
mov
out
jb
cmp
push
xchg
push
add
popa
fwait
push
jmp
inc
outs
hlt
sbb
retf
pushf
pop
pop
jbe
mov
je
dec
mov
push
jnp
push
rol
(bad)
or
dec
jl
outs
hlt
adc
fcomp
out
or
dec
out
cmp
jmp
pop
inc
je
inc
scas
adc
out
dec
nop
das
cmc
push
aas
jecxz
pop
jns
jp
jmp
sti
arpl
loopne
and
repz
jmp
test
mov
hlt
mov
js
shr
mov
inc
fbstp
stos
out
dec
aaa
loop
or
xor
psraw
imul
dec
jbe
and
pop
jmp
and
xor
mov
pop
ins
pop
loopne
or
and
mov
(bad)
pop
push
adc
fnstcw
call
mov
add
adc
push
push
or
js
dec
jle
push
mov
or
push
lock
(bad)
in
xchg
sbb
out
and
scas
dec
js
ret
aam
test
hlt
sbb
loope
div
or
inc
loope
inc
loope
daa
dec
retf
add
iret
push
ror
cmp
rol
rcr
adc
sbb
jbe
dec
ficom
(bad)
sub
add
lock
adc
inc
daa
mov
mov
lods
inc
add
loope
das
movs
dec
clc
and
(bad)
ficomp
inc
cmp
and
jne
cli
push
add
jge
pop
(bad)
lock
nop
das
cmc
inc
or
add
pop
mov
out
data16
lahf
push
data16
cmps
push
inc
je
jns
stos
call
add
mov
sar
sub
xchg
sbb
clc
adc
dec
inc
and
clc
fmul
mov
mov
dec
cs
and
das
fnsave
test
adc
shl
ror
lock
out
dec
mov
rep
(bad)
ins
ins
adc
aaa
pop
add
fadd
aaa
adc
int
inc
xor
aas
push
sbb
daa
out
retf
(bad)
adc
(bad)
out
aam
cmp
add
mov
xchg
imul
sbb
pop
add
jne
mov
nop
sbb
clc
or
ins
aad
dec
dec
(bad)
lock
sahf
ret
out
jb
nop
cmp
or
fadd
ja
or
aaa
xchg
push
rol
lock
cmp
mov
jno
or
cs
loopne
lock
push
pop
call
cmp
aad
push
fucomi
inc
data16
js
arpl
rol
retf
lea
jnp
clc
or
add
pop
xchg
push
adc
ret
sub
mov
push
mov
enter
out
retf
jb
clc
cmp
shl
lock
xchg
scas
mov
push
ror
fmul
cmp
pop
sar
jecxz
push
or
(bad)
lock
js
xlat
test
imul
jmp
add
sub
hlt
repnz
ficomp
sti
stos
cli
add
or
mov
loopne
gs
inc
inc
pop
inc
loopne
js
loope
mov
popf
pushf
outs
in
rol
es
clc
cs
or
inc
nop
and
rcr
je
jge
jno
stc
sbb
out
clc
adc
dec
push
fldcw
scas
push
out
jae
sahf
push
rol
adc
pop
mov
inc
je
ficomp
out
movs
and
mov
jnp
mov
test
push
movs
mov
push
hlt
mov
cs
jp
ret
clc
add
and
mov
rcl
retf
add
cmp
movs
inc
and
repnz
bound
ficom
mov
add
in
sub
nop
xlat
push
or
and
data16
jb
xchg
aad
int3
push
add
add
add
dec
push
clc
push
(bad)
dec
push
clc
cdq
mov
out
add
(bad)
fld
jg
jg
and
fist
xlat
mov
retf
add
and
push
or
repnz
sbb
out
add
push
icebp
adc
stos
jl
pop
fisttp
test
mov
push
adc
fadd
lock
aaa
adc
and
pop
add
jne
movs
inc
jbe
popf
das
push
rcl
add
add
cmp
pop
xor
fild
retf
fucomp
stos
push
hlt
push
out
test
loop
call
add
sbb
loopne
loopne
and
loopne
add
in
es
mov
call
dec
jle
stos
xor
add
pop
add
sbb
mov
clc
cmp
das
das
cmp
jne
out
and
(bad)
jl
loopne
push
hlt
xchg
lods
outs
fimul
cld
sbb
sub
ds
enter
out
add
adc
das
stos
sbb
in
lock
inc
loopne
pop
cdq
add
mov
mov
(bad)
aas
pop
cmps
push
fldl2t
adc
call
das
jle
or
cmp
pop
add
cmp
fild
clc
or
rcl
or
mov
or
out
push
clc
mov
out
add
jnp
pop
and
lock
push
pop
jg
rol
xchg
push
fmul
fbld
cmp
sub
dec
aaa
retf
xchg
popf
add
xor
cmp
xlat
sbb
jg
add
call
pop
inc
loopne
pop
mov
xchg
pop
leave
ja
inc
jnp
cmps
mov
mov
shl
pop
test
in
push
jl
fmulp
ret
sti
nop
popf
outs
push
adc
shl
stos
pop
loope
mov
into
div
fidiv
jmp
inc
(bad)
push
ins
js
and
scas
or
pop
mov
jge
clc
mov
mov
add
jl
imul
jmp
daa
loope
inc
inc
lahf
or
add
mov
cmp
mov
pop
mov
ret
pop
jno
pop
js
xor
lahf
push
mov
jb
or
cmp
add
rcl
ja
std
xor
or
sub
gs
cli
inc
mov
daa
jbe
out
ret
sbb
pop
mov
in
scas
ret
in
and
xchg
popf
repnz
dec
test
scas
idiv
or
loope
ror
clc
das
pop
loope
add
movs
inc
and
push
rcl
mov
imul
out
mov
ins
add
mov
mov
rcl
add
mov
aas
in
inc
mov
jne
mov
rcl
mov
xchg
sbb
sar
push
mov
add
aaa
push
push
clc
addr16
push
loope
add
aad
adc
add
and
fcmove
dec
outs
jb
enter
pop
nop
xchg
das
xor
and
(bad)
or
inc
loopne
jmp
jb
sub
out
or
jo
lahf
pop
dec
xchg
mov
xchg
pop
loop
test
lock
fbstp
jl
or
pop
imul
fwait
mov
mov
add
or
mov
pop
fld
clc
and
fiadd
mov
repz
inc
mov
out
add
xlat
add
jb
fldcw
inc
jb
loopne
ins
pop
sbb
cld
pop
ds
scas
xchg
pop
pop
loopne
in
mov
inc
nop
das
mov
lock
sub
jns
jmp
pop
icebp
adc
lock
hlt
or
jge
loopne
add
test
sub
daa
out
ja
lock
out
inc
jmp
pop
adc
inc
js
pop
in
sbb
jo
fbstp
lods
mov
out
jl
add
and
cmp
loop
mov
push
add
or
loope
xchg
les
cmp
(bad)
loope
icebp
and
inc
ins
dec
popf
aas
ret
das
adc
mov
fxam
outs
jb
mov
mov
ror
cmp
outs
les
jle
push
ds
xchg
jmp
pushf
sbb
jmp
adc
dec
cs
sbb
or
fisub
lock
xor
clc
add
scas
adc
or
mov
pop
xor
clc
push
mov
cmp
sbb
mov
jmp
push
dec
aaa
jne
mov
ret
fisub
scas
add
add
call
aaa
xchg
and
jb
nop
ror
xchg
rol
out
das
out
lock
scas
pop
out
mov
outs
jb
mov
iret
ds
inc
scas
movs
fwait
les
sahf
sar
hlt
mov
mov
pop
push
dec
mul
std
push
(bad)
in
repnz
mov
shl
add
adc
ss
dec
jbe
cmp
ja
push
shr
test
jl
loopne
add
push
clc
dec
jns
xchg
add
aaa
xor
jg
loopne
adc
imul
aad
imul
mov
jmp
lahf
push
clc
adc
xor
jmp
jl
xchg
frstor
xchg
add
jl
loopne
pop
mov
xchg
fisttp
lock
das
xchg
and
add
cmp
add
sub
dec
or
cmp
loope
or
xchg
jns
pop
clc
mov
mov
lock
lock
in
sub
sub
pop
jnp
inc
(bad)
lock
clc
fdiv
or
lock
sbb
outs
add
test
xor
xchg
add
cmps
xchg
pop
or
jecxz
xchg
mov
js
int
fadd
xlat
adc
ss
mov
inc
ret
jne
mov
xchg
and
imul
sbb
pop
pop
clc
mov
loopne
or
add
xchg
push
xchg
aaa
and
add
lock
add
push
add
mov
adc
outs
jb
add
mov
movs
fsubr
shr
cs
or
loopne
add
adc
cmps
or
jp
pop
lock
lock
adc
cmp
aad
loopne
mov
add
data16
pop
(bad)
ss
xchg
pop
pavgb
jecxz
push
scas
xchg
ror
adc
ficomp
loopne
add
sbb
(bad)
les
jl
mov
mov
lock
sub
push
dec
pop
mov
stos
or
hlt
psubq
xor
ret
into
xchg
push
stc
inc
outs
jb
xchg
push
inc
lahf
pop
dec
push
cld
es
jecxz
ds
add
jmp
fiadd
push
out
cli
or
loope
inc
loopne
(bad)
fwait
cdq
xor
scas
mov
pop
mov
lock
sub
icebp
and
push
pop
addr16
mov
ror
movs
fwait
xchg
and
clc
or
idiv
add
inc
push
clc
jl
cmps
jl
in
lea
lock
in
dec
clc
dec
(bad)
dec
pmaxub
mov
xchg
pop
ins
pmaxub
outs
ficomp
push
nop
push
inc
fild
stc
push
xor
or
mov
sub
lock
arpl
leave
aad
clc
push
add
inc
out
xor
xchg
dec
ins
push
fild
mov
push
pusha
lods
loop
rol
daa
adc
cwde
cmp
pusha
ins
pmaxub
clc
push
sbb
or
mov
ss
icebp
ror
add
lds
ins
daa
inc
sub
inc
loopne
dec
in
jp
(bad)
je
les
jmp
aad
dec
cs
rcl
adc
add
sub
retf
lods
mov
cmps
lock
add
aam
xchg
jp
xchg
pop
mov
scas
imul
dec
loope
ret
fcom
pop
add
jne
out
add
xlat
add
cmps
mov
add
outs
add
mov
clc
out
mov
retf
ds
loope
mov
xchg
pop
ins
rcl
and
cmp
mov
sbb
loopne
mov
iret
jns
cmps
(bad)
fdiv
pop
in
jae
loope
xchg
jmp
and
pop
pop
clc
add
jno
add
cmc
enter
add
clc
outs
add
mov
push
jne
inc
loopne
out
mov
inc
push
shl
lahf
fcmove
scas
sub
sub
dec
(bad)
add
or
inc
inc
add
inc
outs
loope
into
xchg
xchg
cmp
and
pop
mov
mov
aaa
mov
clc
add
or
gs
(bad)
push
adc
add
cmps
add
ja
shr
jl
or
mov
add
pop
add
adc
add
scas
movs
fwait
daa
adc
xor
lahf
pop
retf
push
xor
fild
clc
daa
sti
cmp
clc
popa
scas
aad
add
aaa
cli
xchg
mov
hlt
cmps
xchg
popf
fsubp
xchg
adc
mov
js
push
jmp
ds
jge
inc
ret
loop
(bad)
ret
add
mov
xchg
ja
retf
or
or
imul
loopne
mov
jl
cmp
mov
icebp
xchg
fld
mov
test
mov
ror
scas
movs
fwait
jbe
je
mov
push
call
ret
sti
cdq
loopne
ds
xchg
ror
out
adc
xchg
cmp
(bad)
adc
in
lock
rcr
out
gs
aad
pop
shl
mov
clc
mov
adc
mov
loopne
sub
sub
dec
aaa
dec
mov
sbb
(bad)
daa
jge
lock
or
xor
lahf
fmul
add
jecxz
mov
xlat
(bad)
mov
inc
pop
or
add
aas
or
xor
std
xor
cli
cmp
dec
aaa
aas
outs
inc
jg
inc
mov
out
add
jl
or
jg
out
scas
xor
jle
xlat
fsubr
(bad)
xchg
inc
hlt
sub
imul
pop
fimul
mov
scas
aaa
mov
fisubr
mov
sar
sub
retf
or
pop
adc
or
test
aas
call
push
mov
scas
mov
idiv
mov
(bad)
jb
test
dec
or
lahf
jb
scas
(bad)
fmul
pop
jbe
and
add
mov
ret
ja
jae
lock
cmp
lock
lea
jns
cmp
sbb
arpl
push
clc
mov
test
push
ror
lods
ss
clc
add
jmp
cld
add
fild
lock
add
inc
sub
dec
scas
out
(bad)
cmp
cli
mov
loope
add
fwait
jns
sub
push
and
sub
shr
xchg
and
jne
out
cmp
add
pop
into
pop
call
scas
out
popf
fsubr
adc
outs
imul
sbb
lock
scas
xchg
ja
(bad)
adc
mov
add
imul
add
add
fwait
cmp
stos
add
jge
shl
in
hlt
or
lock
cmps
add
fidivr
nop
das
movs
xor
outs
loope
add
lock
add
inc
aas
ret
fbstp
inc
pop
lahf
(bad)
popf
repnz
pushf
add
ja
pop
add
aaa
add
aaa
mov
cmps
mov
lock
adc
or
mov
ds
loopne
es
mov
ins
xor
sbb
cmps
sbb
or
lock
mov
scas
sbb
retf
(bad)
lock
mov
fbstp
call
(bad)
mov
mov
std
jge
cld
add
aas
ins
loopne
ss
dec
add
in
jmp
(bad)
inc
add
mov
loopne
or
or
mov
pushw
loopne
mov
sar
lock
dec
fbld
cld
add
lahf
movs
mov
js
ret
mov
pop
sbb
stc
adc
push
loope
call
and
test
mov
in
or
fisub
dec
jl
ja
sar
mov
pop
pop
xchg
loope
push
out
sub
out
pop
sti
mov
ja
(bad)
mov
clc
push
js
and
ins
js
cmc
xchg
pop
sbb
inc
sti
inc
hlt
pop
mov
pop
rol
xlat
loopne
push
out
cmp
aas
xor
and
jmp
xor
and
mov
sbb
jg
xchg
out
pop
out
jmp
stos
push
clc
pop
aam
imul
lock
je
enter
mov
jge
mov
lock
adc
sub
inc
ficomp
inc
loop
fadd
js
sub
inc
js
ret
sub
jl
mov
jge
ret
add
jmp
xchg
adc
add
mov
(bad)
dec
js
ja
lock
(bad)
in
or
jl
(bad)
jb
mov
add
jns
scas
add
jg
rcl
adc
data16
retf
mov
push
ds
js
in
fs
aas
add
adc
adc
push
lock
add
add
pop
sti
outs
cmps
push
lock
add
and
pop
inc
loope
jle
push
inc
pop
mov
in
nop
and
ret
xchg
popf
adc
push
aaa
xor
lock
add
ret
lahf
and
das
inc
cmp
add
das
clc
push
scas
add
outs
movs
mov
push
inc
push
nop
push
and
add
repnz
mov
ret
inc
and
out
data16
xor
lock
gs
test
dec
adc
push
add
loopne
pop
mov
push
fldcw
repnz
jbe
sti
dec
mov
push
loope
lock
scas
push
sar
push
shr
shr
clc
aaa
add
add
cld
add
jg
push
aaa
xchg
add
sbb
loopne
add
push
cmp
ins
cmp
add
pop
dec
aaa
fidiv
ja
xchg
and
jae
mov
sub
xor
xor
lahf
std
xchg
(bad)
fsub
sbb
jl
or
lahf
and
sbb
jl
xchg
fxch
scas
imul
mov
das
mov
fmul
jge
pop
jbe
cmps
cs
add
(bad)
and
sbb
(bad)
popf
sbb
jmp
scas
add
add
fild
scas
jns
mov
and
fisttp
mov
mov
into
pop
dec
mov
jecxz
(bad)
loope
push
faddp
sbb
call
ficomp
call
pop
in
jb
mov
js
xchg
xchg
pop
rol
add
xor
rcr
aaa
cmp
xor
cmp
pop
sar
xchg
pop
add
xor
js
push
fimul
lods
and
imul
outs
lock
psraw
jbe
hlt
add
sar
pusha
out
repz
(bad)
call
jns
pop
mov
mov
shr
and
jmp
mov
rcr
inc
inc
mov
or
(bad)
(bad)
adc
jg
add
imul
ds
lea
jge
add
sbb
mov
mov
push
retf
lea
adc
ror
repnz
and
mov
jmp
and
in
sbb
sahf
(bad)
inc
lock
mov
in
test
fisub
ja
leave
sub
jmp
add
in
inc
push
push
rol
mov
sub
xchg
push
cld
inc
fs
mov
lock
jmp
sub
xchg
mov
inc
push
hlt
mov
in
xlat
lahf
das
xchg
jnp
imul
adc
fldcw
push
pop
jbe
lahf
nop
pop
ins
jle
daa
out
sub
stos
int
sub
jne
scas
inc
cmp
pop
(bad)
sub
jmp
test
lock
popa
lods
loop
aam
inc
inc
mov
aas
and
mov
dec
inc
inc
cld
test
arpl
pop
ret
dec
xor
dec
leave
lods
push
and
jmp
iret
fucomp
gs
cmc
add
call
out
aam
fist
js
lock
adc
in
sub
pop
sub
fwait
ror
sbb
jmp
push
fmul
pop
js
ret
ds
mov
dec
clc
and
jg
inc
repnz
xchg
ja
mov
ret
xor
mov
aas
loope
xchg
adc
aad
add
sbb
outs
and
std
mov
mov
mov
mov
mul
std
or
push
dec
sar
or
rep
cs
ror
out
jbe
jg
and
xchg
lods
lock
mov
add
test
dec
sub
sbb
mov
mov
test
int
inc
xor
imul
mov
js
in
inc
test
push
sar
and
adc
loopne
and
pop
lahf
shl
xchg
ja
adc
mov
hlt
cmp
stos
pop
mov
outs
cmp
jp
xchg
sub
pop
mov
mov
out
aam
rcr
adc
cmp
xor
loopne
mov
pop
push
or
mov
shr
pop
adc
iret
fdivr
loop
add
adc
jl
das
jne
push
pop
icebp
adc
xchg
(bad)
cli
sub
mov
popa
loopne
sub
ss
int
mov
xor
jge
std
mov
lock
push
inc
pop
jo
lahf
sbb
int3
shl
jae
xor
mov
fistp
addr16
std
sub
daa
adc
pop
xor
sbb
clc
dec
pop
retf
js
dec
inc
div
stos
mul
daa
sbb
js
hlt
pop
mov
pop
loopne
popf
daa
daa
das
cmp
pop
hlt
or
jmp
dec
adc
mov
inc
pop
xor
sub
jge
mov
dec
stos
mov
fwait
neg
aaa
int3
mov
xchg
cmp
dec
jecxz
cmp
jns
pop
ror
stos
call
test
in
mov
retf
lods
push
add
jne
mov
add
dec
jnp
mov
or
dec
cs
add
mov
in
scas
or
ins
repz
mov
repz
js
sar
mov
call
cwde
not
fwait
div
inc
fbld
xlat
int3
mov
das
call
pop
xor
cmp
fbld
out
aaa
out
jnp
add
dec
jbe
inc
mov
mov
cmp
loopne
or
jge
jle
shr
xor
push
or
xchg
push
jle
shr
xlat
sti
pop
clc
or
jae
jmp
gs
or
call
loope
xor
jmp
cmps
mov
add
loopne
pop
shr
clc
jnp
cld
mov
gs
sub
out
xor
jmp
jle
shr
clc
or
clc
lods
ds
or
mov
mov
int3
sub
ret
sub
aaa
mov
sbb
test
mov
scas
fucomi
out
pop
clc
mov
clc
dec
add
shl
cld
popf
push
jle
ror
pop
sub
or
in
sbb
jle
shl
fadd
addr16
jle
shl
in
pop
push
cld
(bad)
leave
sbb
loopne
out
idiv
cli
enter
shr
ds
rcr
(bad)
in
(bad)
fistp
fld
or
lahf
std
add
call
bound
cli
mov
(bad)
out
clc
mov
mov
jb
xor
mov
inc
cmp
jmp
clc
pop
clc
es
sbb
call
mov
mov
rcl
cmp
add
loopne
nop
and
pop
cmp
add
loopne
nop
and
pop
cmp
add
loopne
nop
and
das
adc
xchg
inc
xor
add
add
dec
inc
scas
inc
pusha
or
inc
cwde
xor
mov
cmp
and
push
xchg
jns
cwde
test
mov
call
outs
out
push
pusha
lahf
ds
int3
inc
jge
pop
lea
add
lock
mov
ret
push
add
dec
cmp
cmp
fcomip
scas
rcl
sbb
push
ss
lock
push
jo
mov
sar
adc
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
pop
add
and
jb
outs
addr16
add
add
push
add
sbb
add
and
add
adc
add
add
add
inc
push
dec
inc
add
add
adc
add
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
or
mov
arpl
or
mov
add
add
add
add
add
add
add
add
cmc
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
syscall
arpl
push
add
add
dec
add
arpl
jp
cmc
add
add
add
mov
add
add
cli
add
push
push
cmc
add
add
push
in
add
add
in
add
add
add
add
add
add
int
add
add
push
add
add
push
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
push
sbb
add
add
add
add
add
adc
add
pop
add
add
adc
or
sbb
add
movs
and
add
add
or
add
add
add
adc
pop
add
and
add
add
or
inc
add
add
and
add
add
mov
add
and
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
and
add
add
add
add
add
and
add
add
add
add
and
add
add
sbb
add
add
mov
add
add
add
sbb
mov
add
mov
add
add
push
sbb
add
add
mov
add
sbb
add
add
shl
add
add
add
add
add
add
push
add
add
add
add
push
add
add
push
add
add
push
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
push
add
add
add
add
add
add
enter
and
enter
sub
enter
xor
enter
cmp
enter
and
sbb
mov
sub
sbb
mov
xor
sbb
mov
cmp
sbb
mov
popa
add
add
add
enter
jno
enter
jns
sbb
add
add
add
add
sub
cmp
je
sbb
fild
jno
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
sbb
cs
push
add
pop
add
jb
inc
add
add
add
loope
add
add
add
add
add
add
add
add
rol
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
enter
inc
add
add
dec
add
add
push
add
add
pop
add
add
popa
add
add
imul
jno
enter
sub
add
add
add
add
cs
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
rol
add
add
add
sbb
iret
add
add
add
sbb
iret
add
adc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
out
inc
add
add
add
adc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
mov
iret
add
add
push
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
mov
in
add
add
add
add
add
add
sbb
push
add
pop
add
add
add
loope
push
pop
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
or
sti
add
add
add
add
add
add
add
add
add
add
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
add
inc
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
popa
push
gs
bound
dec
imul
outs
outs
jae
ins
gs
jo
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
jo
imul
inc
popa
jae
add
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
bound
jb
imul
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
popa
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
je
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
pop
popa
jae
add
jae
xor
dec
popa
imul
ins
popa
je
outs
jne
add
je
add
jae
inc
jns
add
je
je
imul
add
popa
jae
add
add
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
dec
jns
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jb
outs
add
je
dec
outs
addr16
add
je
inc
push
push
je
imul
jb
add
outs
jbe
jb
imul
outs
arpl
add
jbe
jb
outs
ins
outs
je
addr16
push
jns
je
ins
inc
imul
jns
push
jns
je
ins
cs
dec
add
ins
add
popa
fs
ins
ins
inc
jns
gs
dec
outs
popa
add
ja
popa
je
inc
imul
dec
popa
je
inc
gs
inc
jb
popa
jns
push
gs
jp
add
je
add
ins
jo
jb
dec
gs
outs
add
ins
imul
jb
add
jns
add
outs
imul
jae
inc
imul
outs
jbe
imul
ins
bound
add
je
js
arpl
imul
ins
bound
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
inc
push
push
inc
je
jb
bound
add
dec
jns
push
gs
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
gs
imul
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
gs
popa
jns
imul
imul
jo
add
ins
gs
add
add
jae
add
pop
add
popa
add
pusha
add
jl
push
add
data16
add
jl
pusha
add
jnp
and
inc
add
pop
add
dec
add
outs
add
push
js
pusha
add
add
jns
cmp
add
add
add
add
add
add
jl
ins
add
jge
arpl
data16
and
imul
add
add
inc
add
je
push
add
add
outs
add
add
ja
dec
add
inc
add
dec
add
dec
add
or
dec
add
inc
add
add
inc
add
add
add
sub
add
inc
add
inc
add
add
or
add
dec
add
add
add
jo
ja
data16
sub
add
ins
add
jno
pusha
add
jo
sub
add
ins
add
jno
pusha
add
dec
add
ins
add
add
jno
add
add
retf
adc
xchg
mov
xor
or
xor
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
or
adc
or
adc
add
add
adc
add
adc
and
add
and
or
add
adc
add
add
adc
add
add
add
xor
add
adc
add
adc
add
add
add
push
adc
add
add
add
push
adc
or
add
sbb
add
adc
add
adc
add
and
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
add
adc
or
adc
or
adc
adc
adc
adc
pop
add
or
pop
add
or
add
adc
add
adc
and
add
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
add
push
dec
jns
inc
jo
ins
imul
add
adc
add
dec
jns
inc
outs
ins
jo
je
jb
add
add
add
add
add
add
push
add
adc
add
adc
add
add
add
add
add
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
add
add
add
or
add
or
add
add
push
add
add
add
push
push
add
adc
pop
sbb
adc
push
sbb
add
add
sbb
adc
add
adc
or
add
push
sbb
adc
sbb
add
add
or
add
or
add
adc
add
add
add
sbb
and
adc
sbb
adc
sbb
sbb
pop
add
add
adc
push
add
add
adc
pop
or
push
or
add
or
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
adc
sti
cld
add
fs
cmp
dec
cmp
mov
jno
out
scas
(bad)
sbb
and
in
cmp
dec
mov
jmp
pop
mov
jmp
push
sbb
adc
int3
mov
(bad)
mov
out
or
xchg
add
sub
push
(bad)
sbb
aaa
xchg
aam
mov
(bad)
jns
mov
or
cmps
or
or
in
and
test
(bad)
retf
pop
add
stc
mov
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
es
cmp
gs
pop
inc
imul
inc
gs
je
jo
dec
imul
cs
imul
adc
add
push
and
jne
imul
add
push
imul
ins
add
sub
add
jb
addr16
mov
aaa
sub
and
ins
ins
push
and
jne
imul
add
push
imul
ins
and
jae
gs
and
outs
imul
cmp
add
add
add
dec
xchg
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
