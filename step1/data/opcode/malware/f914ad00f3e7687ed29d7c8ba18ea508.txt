test
mov
fdiv
ins
cdq
jno
arpl
xor
fistp
inc
outs
cdq
jno
scas
retf
out
push
jmp
repz
xchg
ins
mov
sti
or
sti
ins
cdq
jno
in
jno
ins
cdq
cli
mov
adc
imul
mov
add
jbe
out
cli
neg
adc
imul
in
jmp
add
sub
mov
cdq
jno
out
pop
jge
xor
mov
in
and
push
cdq
sbb
fnstenv
sbb
jno
xor
sub
les
js
xchg
and
pusha
adc
iret
adc
ins
imul
sti
ins
cdq
jle
rcr
mov
mov
mov
cs
cld
mov
out
jge
pop
xchg
repnz
ins
cdq
jno
pusha
out
repnz
popf
jno
adc
and
pop
mov
mov
ins
cmp
cs
cli
scas
adc
pop
pop
pop
xor
out
jne
push
pop
xor
cmp
and
cdq
jno
loope
dec
cmp
cdq
cli
into
pop
pop
xor
lahf
cmp
(bad)
push
pop
xor
in
inc
cmp
cdq
sub
les
jo
xchg
js
sbb
jns
test
mov
loope
popa
lods
aas
jno
add
fs
(bad)
out
(bad)
jo
xchg
mov
fs
(bad)
out
(bad)
adc
data16
adc
jmp
data16
stc
mov
out
pop
jge
ins
pop
je
lods
(bad)
ins
cdq
jno
addr16
dec
ins
cdq
repnz
fs
mov
dec
repz
imul
jns
lods
sub
sti
out
pop
jns
lods
in
jbe
ins
cdq
jno
xchg
pop
stos
xchg
lods
popa
cmp
cdq
cdq
pop
fstp
mov
jl
xor
test
(bad)
sti
ins
sbb
sti
ins
les
movs
aaa
adc
xlat
lods
(bad)
sbb
jno
test
pop
cmp
cdq
sbb
xchg
jns
inc
ins
cdq
jno
xchg
pop
ins
cdq
jno
cmp
xchg
xchg
xchg
icebp
ins
cmp
cdq
sbb
fnstenv
or
push
sti
ins
cdq
jno
or
adc
dec
fisttp
sbb
ins
call
push
cdq
sbb
add
mov
ins
icebp
push
cmp
cdq
sbb
lods
(bad)
icebp
sub
pop
cmp
cdq
mov
dec
pop
xor
xchg
lods
push
cmp
cdq
clc
fidivr
xor
test
mov
pop
push
clc
mov
leave
cdq
push
fcomp
sar
ins
cdq
jno
ins
int3
clc
push
out
jne
test
into
cli
mov
mov
pop
inc
clc
cmp
cdq
repnz
cwde
cdq
repnz
xchg
cdq
call
jb
shr
(bad)
clc
pop
xor
pop
call
cli
xchg
adc
arpl
jne
arpl
lds
add
xchg
fmul
add
sbb
ins
in
mov
sub
jmp
fadd
mov
sub
shl
jo
in
ss
sbb
cli
ins
in
mov
stos
jmp
add
popa
cli
mov
movs
xor
cwde
jno
xchg
mov
leave
add
cdq
jno
push
and
cdq
jno
xor
mov
inc
jl
jo
test
(bad)
ins
retf
out
jge
xor
pop
rcl
int3
out
lea
data16
cmp
clc
outs
nop
pop
pushf
in
cs
cli
mov
movs
xor
cwde
jno
xchg
mov
hlt
cli
ins
mov
xchg
clc
or
mov
add
cli
scas
adc
in
je
ins
data16
sbb
add
data16
jle
pop
data16
pop
data16
jle
pop
sbb
mov
loope
jo
xchg
call
add
adc
aaa
push
mov
in
and
xor
adc
sbb
jae
jno
pop
outs
call
adc
(bad)
dec
cmp
jl
clc
cmp
pop
mov
inc
push
clc
sub
clc
stc
out
pop
fisttp
adc
shl
jno
or
mov
out
jns
push
ret
cmp
xchg
js
xchg
and
stos
fmul
inc
idiv
lea
popa
clc
mov
dec
jno
dec
ins
cdq
cli
xchg
mov
mov
jb
outs
fwait
cmp
mov
jb
sar
out
pop
adc
scas
aaa
ret
cmps
jo
gs
cmp
clc
scas
nop
data16
lods
(bad)
sub
leave
test
gs
mov
xor
sub
scas
int3
clc
push
cmp
adc
out
gs
les
fcom
ins
data16
lods
(bad)
fwait
jb
jo
xchg
jle
push
imul
pusha
xchg
iret
out
jge
mov
mov
mov
xchg
inc
stos
div
fwait
cld
lea
popa
clc
mov
xor
mov
stos
cmp
daa
lods
out
jns
add
push
cld
in
outs
daa
mov
clc
pop
xor
xchg
in
jge
into
imul
cmp
push
xchg
data16
mov
das
retf
sahf
(bad)
test
cli
cmps
nop
fisub
lods
test
add
sbb
add
adc
cmp
adc
pusha
es
mov
jno
xchg
in
jns
in
ss
in
sbb
push
cdq
sbb
cdq
jno
cmp
repz
cdq
sbb
test
mov
xchg
adc
jb
(bad)
das
mov
mov
daa
lods
out
jns
mov
outs
arpl
lods
pop
xor
ins
in
jp
lods
pop
xor
cmp
imul
popw
jmp
or
jo
inc
jo
data16
test
(bad)
ins
(bad)
das
mov
mov
popf
fistp
iret
es
xchg
into
jne
dec
push
jb
cwde
mov
sbb
in
inc
add
pop
repnz
push
sbb
or
and
or
cdq
jno
scas
adc
retf
stos
hlt
lock
clc
mov
xor
sbb
sahf
(bad)
push
imul
sti
in
inc
cmp
jle
lods
adc
gs
add
in
repnz
sbb
sahf
(bad)
push
inc
jo
data16
ins
cdq
jno
in
leave
push
pop
cdq
jno
mov
xor
in
inc
cmp
jle
lods
adc
gs
add
pop
pop
xor
jns
xchg
popf
ins
cdq
xchg
iret
cdq
or
data16
aaa
push
mov
in
leave
retf
ins
cwde
jno
jno
jno
aas
iret
es
cmps
(bad)
sbb
in
push
mov
lods
(bad)
sub
jno
out
jge
rcr
sti
in
pop
and
pop
repnz
lods
pop
xor
ins
in
imul
adc
cmp
xor
ins
adc
xchg
xchg
data16
loope
nop
add
and
xchg
cdq
add
ins
icebp
inc
or
cdq
cld
jle
pop
jno
add
movs
mov
cdq
add
out
mov
jno
jle
jno
in
inc
and
pop
cld
mov
adc
(bad)
cmp
dec
add
test
mov
ins
xchg
cmc
adc
cdq
jno
adc
hlt
jmp
sbb
ins
sbb
xchg
ins
jno
push
ins
cdq
sub
mov
jb
push
jo
popa
clc
mov
cmp
add
out
jne
jb
and
ins
cdq
sbb
jns
adc
es
fmul
jb
inc
mov
adc
mov
cdq
sbb
lahf
(bad)
sub
jo
data16
ins
cdq
jno
in
(bad)
repnz
in
inc
jb
outs
xchg
jb
dec
mov
jmp
leave
sar
lods
(bad)
out
mov
jno
in
(bad)
repnz
in
jp
sub
pop
movs
clc
and
clc
cmp
movs
mov
cs
jno
cmp
cdq
and
data16
repz
fmul
mov
xchg
data16
pop
mov
ins
cdq
clc
and
pop
push
mov
in
and
push
xchg
or
ins
cdq
clc
add
adc
xchg
push
icebp
jno
ins
(bad)
push
ins
cdq
clc
cmp
push
cdq
daa
adc
xor
out
jge
lods
sbb
cli
ins
in
mov
repz
cmp
test
in
jge
test
sahf
nop
bound
xor
cmp
jae
pop
imul
cmp
push
ins
cdq
daa
adc
jno
xor
sub
scas
int3
clc
push
aam
jno
ins
jno
push
ins
cdq
and
(bad)
fdiv
adc
pop
hlt
push
xchg
addr16
add
cmp
cdq
clc
jle
pop
sbb
add
and
mov
nop
mov
call
adc
xchg
ins
jno
push
ins
cdq
cdq
rol
cdq
jno
jmp
leave
cld
jle
pop
jno
push
xchg
data16
pusha
sbb
js
pop
mov
ins
cdq
add
sti
ins
outs
xchg
jb
sub
mov
jmp
leave
sar
lods
(bad)
out
mov
pop
add
in
xchg
in
rol
clc
cmp
sbb
add
and
out
xchg
add
and
data16
ins
cdq
jno
in
(bad)
repnz
xchg
hlt
sbb
mov
xchg
jb
xor
mov
mov
mov
jmp
leave
sar
lods
(bad)
out
mov
pop
jle
retf
lahf
jno
add
out
mov
xchg
mov
or
add
pop
jns
stos
fdivrp
inc
xchg
pop
sbb
add
data16
(bad)
xchg
hlt
inc
xchg
mov
mov
ins
leave
cli
ret
xchg
into
or
cmp
sub
ins
cdq
pop
js
daa
mov
pop
cwde
jno
in
and
add
data16
call
repz
into
imul
loope
mov
and
imul
jb
(bad)
clc
inc
(bad)
pop
pop
jle
jmp
movs
mov
cdq
jle
mov
jno
arpl
hlt
push
xchg
mov
hlt
push
xchg
mov
out
mov
ins
cdq
repnz
pusha
xchg
(bad)
jle
pop
popf
je
repz
or
push
xchg
addr16
ins
sbb
xchg
ins
xchg
(bad)
jle
pop
popf
je
lods
(bad)
add
out
mov
xchg
data16
pusha
movs
mov
cdq
add
add
and
test
mov
sbb
and
clc
cmp
hlt
push
xchg
mov
cmp
jge
movs
pop
xor
out
push
mov
sbb
dec
enter
ins
pop
clc
or
adc
push
xchg
mov
fild
data16
jmp
sbb
movs
pop
xor
ins
xchg
hlt
xchg
xchg
data16
mov
into
(bad)
outs
mov
pop
jns
scas
loop
sti
ins
pop
hlt
push
xchg
addr16
test
mov
or
test
jb
adc
and
sbb
add
and
cmps
in
(bad)
repnz
xchg
hlt
punpckhbw
or
ins
adc
inc
xchg
mov
test
jo
data16
fmul
aas
push
dec
mov
dec
cdq
jno
(bad)
adc
push
xchg
mov
sbb
sub
and
add
data16
loop
jno
ins
sbb
popf
stos
sbb
add
data16
stos
sbb
add
data16
ins
cdq
cld
jle
pop
adc
arpl
sbb
add
and
data16
out
jb
out
ins
cdq
cld
jle
pop
icebp
movs
or
cdq
cli
jle
pop
adc
js
jno
ins
cdq
clc
mov
jmp
adc
sub
sbb
add
and
data16
ins
cdq
jno
sub
sub
or
adc
jg
mov
sbb
ins
xchg
hlt
or
jno
jmp
leave
cli
jle
pop
adc
cmp
mov
jmp
and
cmps
ins
cdq
xchg
in
icebp
add
data16
cmp
pop
adc
daa
xchg
mov
mov
inc
pop
and
pop
xacquire
call
ins
cdq
cld
jle
pop
adc
adc
mov
xor
gs
jle
aas
call
in
aad
xchg
data16
cmp
cmp
add
data16
fldenv
add
sub
pop
jno
push
ins
cdq
repnz
pusha
sbb
pop
xchg
addr16
test
sti
ins
repz
leave
xor
in
xchg
in
or
cmp
data16
jle
pop
icebp
ins
or
cdq
cld
jle
pop
jno
push
ins
cdq
repnz
js
test
popf
stos
sbb
add
data16
out
popf
add
data16
jle
pop
sbb
add
and
sbb
jmp
jle
jmp
or
adc
jnp
mov
mov
sbb
popf
jno
ins
push
jo
jno
add
xchg
into
pop
jb
gs
and
pop
cdq
jle
and
in
add
data16
mov
test
addr16
mov
cmp
mov
mov
push
cdq
jno
ins
adc
gs
jle
popa
fwait
jno
in
pop
and
pop
cld
jle
pop
adc
addr16
mov
mov
pop
jle
mov
cmp
add
data16
aad
jno
push
cdq
cdq
pop
les
jo
in
pop
cmp
stc
mov
mov
test
pop
xchg
mov
icebp
mov
xchg
mov
adc
repnz
jl
xchg
inc
push
cmp
dec
or
pop
jne
jb
and
ins
cdq
sbb
in
add
data16
data16
in
(bad)
repnz
xchg
hlt
mov
cdq
jno
leave
in
mov
ins
inc
clc
cmp
sbb
add
and
out
add
and
data16
ins
cdq
jno
in
(bad)
repnz
xchg
hlt
add
js
in
mov
sbb
add
and
xchg
mov
in
mov
xchg
into
push
jb
gs
and
pop
cdq
jle
aam
jno
or
int3
stos
xchg
addr16
arpl
sti
ins
cdq
repnz
xor
pop
xchg
cmc
data16
cdq
jno
jmp
leave
mov
pop
xchg
repz
ss
ror
mov
rcl
mov
xchg
cdq
add
add
data16
ins
cdq
mov
pop
sbb
add
and
loope
mov
and
mov
pop
popa
jp
aad
sti
ins
adc
push
xchg
mov
xor
cwde
jno
xchg
adc
add
ror
mov
mov
xchg
data16
jg
mov
retf
cdq
jno
test
lock
and
add
data16
ins
sbb
jo
jmp
cli
retf
xchg
iret
jns
jmp
adc
arpl
cmp
into
xchg
data16
add
cli
retf
xchg
iret
jns
lahf
cmp
ins
adc
outs
xchg
mov
mov
xchg
mov
jge
add
xchg
addr16
out
lea
sbb
or
sahf
mov
xchg
pop
adc
jo
jno
add
xchg
iret
jns
ror
add
out
mov
jo
data16
repz
pop
push
in
ins
cdq
repnz
mov
in
jge
jmp
leave
cli
retf
xchg
iret
jns
jmp
leave
cli
retf
xchg
iret
jns
jmp
leave
cli
retf
xchg
iret
jns
scas
push
imul
adc
sbb
test
push
add
push
mov
in
sbb
inc
mov
ins
icebp
jmp
sub
adc
sti
cmp
clc
fisubr
sti
out
jne
test
into
clc
sahf
test
pop
ja
repnz
in
hlt
xchg
dec
xor
jno
ins
cdq
lock
icebp
sub
ins
cdq
cdq
sub
test
cdq
and
jge
add
adc
in
xchg
js
pop
mov
ins
cdq
add
xchg
mov
jb
cmp
jns
sti
ins
cdq
cli
mov
test
daa
jl
stc
std
out
lods
jb
outs
xchg
jb
inc
cli
xchg
mov
nop
data16
(bad)
das
mov
or
jno
ins
cdq
loopne
scas
popf
jno
in
and
push
imul
xchg
outs
xchg
jb
gs
cmp
in
jns
mov
pop
aam
ins
data16
add
(bad)
mov
ins
cdq
repnz
jl
mov
cs
sbb
push
cdq
sbb
ins
repz
and
jno
in
clc
add
adc
sti
ins
(bad)
das
xor
into
into
mov
in
push
jb
sbb
(bad)
sbb
ror
(bad)
sub
call
cdq
repnz
cdq
add
in
repnz
repz
sbb
jno
test
clc
add
clc
cmp
cwde
jno
ins
(bad)
das
cmps
scas
int3
clc
push
cmp
adc
shl
sub
inc
and
in
lea
data16
lods
(bad)
xchg
data16
xchg
in
jns
icebp
cmp
in
mov
sti
ins
outs
xchg
jb
popa
clc
cmp
pop
call
adc
aam
jo
xchg
sti
call
jmp
cwde
jp
inc
inc
sti
ins
adc
scas
jl
xor
std
out
popa
cmp
inc
imul
mov
aaa
push
mov
in
leave
aas
outs
cwde
jno
jne
jno
aas
iret
es
jns
add
ins
cdq
mov
clc
pop
xor
in
push
test
or
jb
repnz
cdq
mov
clc
pop
xor
in
jb
lods
ins
cdq
repnz
mov
adc
lahf
nop
mov
jl
mov
ins
cdq
sbb
xchg
in
sub
xchg
data16
cmp
fdivr
jmp
sbb
aas
xchg
addr16
aam
and
jb
int
add
imul
test
sar
ins
adc
and
xchg
cmc
jae
cdq
jno
cdq
push
test
cmp
cdq
jno
jmp
nop
mov
je
les
xchg
mov
jge
jno
in
inc
and
pop
inc
cmp
adc
sub
stc
lea
ins
repz
sub
add
dec
mov
xchg
pushf
in
cs
js
sbb
pop
dec
out
sti
ins
adc
retf
fs
ins
cdq
clc
and
clc
cmp
fadd
pop
in
jo
in
repnz
jb
or
hlt
xor
cdq
sbb
xchg
in
test
or
xor
gs
add
add
cwd
test
cdq
jno
jmp
jo
std
ins
cdq
lock
pushf
in
cs
clc
and
clc
cmp
sbb
add
data16
sti
in
lea
xchg
cli
sti
in
aad
xchg
data16
sbb
add
jmp
leave
sbb
xchg
sub
add
data16
pop
in
mov
pop
mov
xchg
mov
js
sbb
cli
jle
pop
cdq
clc
mov
mov
mov
sti
in
mov
dec
movs
pop
or
add
data16
mov
out
clc
mov
sbb
cli
sti
in
mov
mov
mov
popa
cwde
imul
xor
out
clc
mov
jle
jno
lods
movs
cli
sti
in
loope
xchg
data16
jle
pop
cmp
jno
jmp
leave
sbb
xchg
in
test
or
add
inc
jo
in
repnz
shl
add
adc
jbe
cmp
jle
pop
repz
fld
in
xchg
mov
popa
mov
pop
and
add
adc
nop
mov
push
adc
addr16
mov
adc
in
xchg
in
and
xchg
data16
cmp
fmul
sti
in
mov
dec
lock
xchg
or
add
data16
mov
adc
mov
pushf
in
cs
cli
mov
sub
and
pop
sbb
jle
pop
sbb
add
and
xchg
mov
lods
add
and
xchg
or
pop
xchg
data16
mov
xchg
addr16
in
xchg
in
cmp
cmp
sbb
add
data16
sti
in
lea
cwde
test
cmps
sbb
jle
pop
sbb
add
jmp
leave
sbb
xchg
sub
add
data16
pop
pop
mov
xchg
mov
outs
cdq
jno
push
adc
inc
xchg
mov
adc
in
jo
in
repnz
jb
push
mov
xchg
mov
stc
push
mov
test
pop
and
sbb
sbb
pop
xchg
data16
cmp
fadd
pop
in
pop
cs
jno
jmp
repz
jmp
leave
cld
jle
pop
repz
sbb
outs
call
fmul
sti
in
lea
cwde
test
cmps
sbb
jle
pop
cdq
cld
jle
pop
adc
push
xchg
mov
lods
add
and
xchg
or
pop
xchg
data16
mov
out
clc
mov
dec
cdq
jno
lods
(bad)
sti
in
or
sti
loope
adc
jbe
jne
add
pushf
pop
les
mov
xor
jle
pop
repz
sbb
outs
adc
add
fmul
mov
ins
cdq
sbb
loope
jmp
adc
rcr
outs
xchg
jb
ror
xchg
ins
cwde
jno
push
cdq
cld
jle
pop
jno
fs
cdq
sbb
ins
cdq
jno
ins
adc
push
xchg
mov
out
sti
ins
adc
adc
cli
sti
in
lea
add
sti
ins
repz
xchg
cdq
jno
loope
jmp
xchg
xchg
data16
test
mov
adc
(bad)
nop
mov
popf
cli
sti
in
lea
ins
cdq
cld
jle
pop
repz
gs
mov
data16
ins
cdq
cld
jle
pop
cmp
mov
add
add
les
xchg
mov
add
add
jo
stc
ins
cdq
sbb
add
cmp
mov
fwait
add
sbb
sti
ins
xchg
cmc
mov
ins
icebp
xchg
or
cdq
cld
inc
hlt
pop
jno
adc
movs
mov
cdq
jle
dec
fwait
jno
out
popf
add
data16
test
jle
js
jno
in
out
sti
arpl
icebp
test
jle
ins
fwait
jno
push
cdq
sbb
cdq
jno
jmp
leave
mov
pop
sub
add
cwd
jno
data16
cs
cld
jle
pop
cmp
ficom
xchg
data16
dec
movs
mov
cdq
jle
cdq
cdq
jno
push
fwait
sbb
popf
(bad)
jmp
leave
cdq
jne
data16
xchg
dec
add
cdq
jno
jb
jae
mov
xor
loope
fld
sbb
pop
jge
call
data16
mov
test
das
xchg
mov
jmp
cwde
jno
ins
sbb
mov
xchg
pop
and
mov
sbb
pop
or
pop
xchg
data16
scas
mov
outs
imul
js
(bad)
outs
lods
adc
mov
jmp
adc
or
jbe
inc
sub
add
sub
cmp
jno
loope
test
and
xor
cs
(bad)
sbb
jno
test
cli
mov
nop
mov
sbb
cli
ins
in
mov
movs
lea
ins
adc
test
sti
ins
data16
das
xchg
mov
and
ins
repz
mov
xor
loope
fld
loope
mov
pop
jge
xchg
data16
sbb
cmp
mov
cdq
add
sbb
push
xchg
addr16
out
cmp
pop
xchg
data16
dec
adc
mov
rcr
mov
hlt
mov
call
pop
add
fisttp
or
jbe
inc
sub
add
push
cld
jle
pop
adc
push
xchg
mov
cmp
popa
in
sti
ins
sbb
shr
fs
mov
lods
sbb
cli
ins
in
mov
(bad)
std
ins
adc
in
inc
and
pop
mov
pop
or
sti
ins
data16
lods
(bad)
and
add
inc
jo
in
cli
mov
movs
xor
cwde
jno
xchg
adc
xchg
sub
add
cwd
cmp
mov
xchg
jb
fisttp
mov
scas
adc
das
xchg
mov
mov
jp
popf
jb
ins
iret
es
xchg
into
push
(bad)
jb
cwde
mov
data16
lods
(bad)
fwait
cmp
ins
xchg
(bad)
mov
out
pop
jns
loope
lea
xchg
and
xchg
add
in
jbe
sub
sub
lea
cdq
cld
jle
mov
icebp
mov
jle
mov
jno
ins
cdq
mov
clc
pop
xor
arpl
aaa
(bad)
cmp
(bad)
mov
fs
cld
jle
mov
jno
pusha
ins
cdq
clc
add
clc
cmp
cs
jmp
mov
loope
lea
xchg
and
mov
xchg
leave
sbb
popf
(bad)
jmp
leave
cdq
inc
neg
cld
jbe
mov
push
mov
sbb
cmp
in
lea
xchg
popw
cmp
addr16
xchg
clc
cmp
lea
cs
cli
imul
sti
out
je
xchg
data16
mov
add
addr16
sub
dec
stc
mov
mov
sahf
loopne
cdq
jno
fistp
(bad)
nop
pop
xor
xchg
pushf
mov
cs
inc
cmp
jge
xchg
test
jb
data16
lods
(bad)
xor
rep
int3
clc
push
out
jne
test
into
cli
cmps
fs
mov
or
xchg
pushf
in
cs
leave
sub
jno
mov
xor
in
sbb
fs
jno
sub
imul
sar
aam
jno
outs
cdq
sbb
(bad)
xor
jno
in
lock
add
cmp
cdq
jno
sub
ficom
push
pop
lods
(bad)
aam
sub
ins
outs
xchg
jb
ins
clc
cmp
inc
fnstenv
xchg
cdq
jno
push
cdq
sbb
xchg
int3
lea
test
adc
jno
cs
sti
call
shr
dec
pop
lods
(bad)
and
aam
jno
jns
jno
in
xchg
stos
cmp
movs
aaa
push
mov
in
repnz
pop
retf
out
gs
in
gs
xchg
ja
aam
and
ins
outs
xchg
jb
jge
cmp
cdq
sbb
push
cdq
sbb
push
cdq
sbb
add
jno
lods
data16
test
xor
in
inc
and
pop
sbb
xchg
in
adc
in
mov
mov
jg
data16
ins
leave
sbb
test
out
ins
adc
jb
test
jb
repz
sub
add
popa
daa
add
imul
mov
and
jno
gs
jno
out
jge
lods
sbb
cli
ins
in
mov
(bad)
clc
scas
mov
je
lods
(bad)
mov
xchg
jb
dec
cli
mov
sub
sti
ins
cdq
mov
mov
es
jns
(bad)
push
add
out
xchg
cmp
lahf
adc
sti
ins
xchg
(bad)
mov
out
test
mov
mov
xchg
data16
jl
mov
arpl
test
jo
jns
jmp
call
lahf
jl
lods
fwait
clc
mov
mov
mov
sub
mov
push
fcom
outs
lods
(bad)
mov
test
mov
pusha
adc
outs
fmul
and
test
jle
sub
mov
outs
fmul
add
gs
and
clc
cmp
fmul
jmp
mov
jle
xor
arpl
and
loope
data16
out
popa
jae
mov
add
in
inc
and
pop
mov
js
xor
arpl
fwait
add
clc
pop
xor
push
cdq
cld
mov
nop
adc
ins
imul
leave
cli
cdq
jno
test
xor
imul
cmp
adc
data16
xor
ins
data16
lods
(bad)
xchg
test
jb
adc
pop
cmp
dec
sti
arpl
jge
sbb
jno
xchg
cdq
jno
xchg
in
gs
ins
repz
sbb
push
ins
ins
cdq
mov
ins
cdq
leave
mov
mov
xor
in
xor
jne
lods
shl
jnp
adc
mov
adc
in
mov
clc
pop
xor
in
inc
add
pop
cld
mov
ins
xchg
jno
ins
data16
xchg
in
jns
jne
jno
xchg
in
gs
cmp
sti
xchg
in
popa
add
gs
cmc
sti
cdq
jno
mov
jno
fwait
jle
mov
sbb
sbb
cdq
jno
sub
not
cmp
jb
jne
cmp
push
mov
in
lock
and
jno
aas
iret
es
pop
lds
sti
ins
outs
xchg
jb
jne
cmp
cmp
mov
xchg
mov
jb
repz
jbe
imul
sti
ins
repz
imul
sti
loope
sub
push
mov
ins
xchg
cmc
push
outs
cdq
jno
xchg
cwde
mov
adc
daa
cmp
cdq
(bad)
cdq
jno
sub
mov
ins
cdq
jle
in
cdq
jno
out
cdq
shr
jns
push
cdq
jno
pop
repz
test
mov
lea
clc
mov
pusha
adc
or
cdq
in
stc
cdq
jno
adc
mov
sbb
sbb
xor
sub
adc
jae
test
sti
ins
adc
jno
dec
dec
clc
push
jb
adc
ret
jno
add
jno
ins
repz
ins
fwait
jno
cmp
outs
ins
cdq
sbb
ins
cwde
jno
ins
icebp
jae
ins
cdq
daa
adc
or
sti
xchg
pushf
in
cs
cli
mov
push
or
ins
in
jl
sub
mov
ins
cdq
add
shr
inc
dec
mov
jmp
adc
inc
fcom
sti
arpl
cli
ins
cdq
cli
mov
push
fbstp
ins
xchg
in
out
jns
jb
inc
lock
(bad)
jno
in
movs
xchg
imul
jno
stos
sbb
ins
in
xor
clc
cdq
jno
stos
adc
jb
dec
sbb
cmp
outs
ins
cdq
clc
cmp
xchg
bound
cdq
clc
cmp
out
mov
jp
add
sti
ins
jb
cmp
(bad)
jae
test
sti
ins
adc
jno
dec
dec
repnz
jb
adc
lds
push
xchg
cld
mov
test
jno
in
in
mov
ins
cdq
icebp
xchg
cwde
jno
cmp
push
arpl
clc
add
clc
cmp
cdq
jo
ins
adc
inc
xchg
data16
ins
cdq
cld
mov
sbb
jno
loope
mov
xchg
in
movs
adc
in
sti
sbb
clc
add
mov
in
repnz
xchg
lods
xchg
xchg
in
movs
jo
jno
mov
mov
and
inc
pop
and
jns
scas
movs
retf
pop
mov
ins
cdq
and
and
sbb
(bad)
ins
jno
outs
ins
cdq
clc
mov
ins
cdq
xchg
data16
cmp
mov
jb
pop
sbb
cmp
inc
add
and
jno
sbb
icebp
clc
cdq
jno
ins
repz
pushf
cdq
jno
cmp
push
sbb
sbb
ins
cdq
jno
sbb
jno
xchg
test
jb
repz
ins
icebp
cmp
cdq
daa
adc
or
push
cdq
daa
adc
or
xchg
in
popa
add
imul
imul
sti
xor
sub
scas
mov
rcl
mov
adc
mov
ins
icebp
xor
mov
(bad)
cmp
sti
add
jno
in
jno
add
mov
cmp
cdq
sbb
popf
(bad)
ins
cdq
jno
test
add
data16
lods
(bad)
sub
sti
add
cmp
ins
cdq
icebp
adc
bound
mov
popf
(bad)
lea
sti
add
cmp
sbb
js
fldcw
cmp
adc
(bad)
lock
test
or
adc
in
cdq
mov
xchg
test
jb
icebp
cmps
aam
cdq
sbb
ins
inc
or
(bad)
jge
jno
xor
scas
in
repnz
pusha
retf
out
gs
in
gs
mov
popa
inc
add
pop
mov
push
popf
cld
mov
xchg
leave
cdq
(bad)
call
lock
(bad)
xchg
pushf
jne
cs
mov
call
sti
arpl
xor
out
jno
jae
outs
mov
xchg
cdq
lock
fdiv
stos
fmul
out
in
jg
add
cdq
mov
adc
dec
sub
jno
sub
cmp
lods
jno
xchg
pushf
jne
cs
sbb
push
xchg
cld
mov
fs
test
sti
ins
sbb
retf
das
mov
mov
push
clc
ins
cdq
cdq
dec
loope
jno
cmp
cli
xchg
add
xlat
mov
(bad)
add
call
sub
ins
repz
std
or
xor
mov
in
jb
popf
ins
cdq
repnz
nop
mov
sub
bound
pop
data16
pop
xchg
data16
or
add
repnz
nop
mov
sub
bound
pop
data16
pop
xchg
data16
or
add
mov
push
inc
pop
and
pop
repnz
cwde
mov
sbb
seto
mov
cwde
mov
sbb
pop
xchg
data16
inc
stc
popa
lea
sbb
seto
mov
cwde
mov
sbb
pop
xchg
data16
dec
stc
popa
lea
sbb
add
inc
xchg
in
xchg
pop
xchg
data16
cmp
and
push
xchg
xor
xchg
data16
popa
mov
adc
outs
nop
mov
and
push
xchg
xor
xchg
data16
popa
mov
adc
outs
nop
mov
pushf
jne
cs
clc
and
clc
cmp
cmp
pop
xchg
data16
jmp
std
jno
ins
sbb
jbe
jno
add
leave
cld
jle
mov
adc
add
sbb
add
outs
jno
jo
cdq
cld
jle
mov
cmp
cdq
sbb
cdq
jno
lods
xchg
cmc
push
ins
cdq
jno
stc
popa
mov
retf
adc
pop
jle
cmc
cdq
jno
push
cdq
sbb
cdq
jno
jmp
leave
daa
adc
jno
in
add
xchg
in
bound
sbb
retf
sar
ins
cdq
mov
push
and
pop
xchg
data16
jg
cdq
pop
out
jno
mov
test
adc
cwde
jno
out
add
imul
(bad)
push
cdq
and
jo
add
test
jno
out
popa
mov
out
jno
xor
jle
pop
mov
hlt
pop
xchg
data16
ins
cdq
js
arpl
cld
outs
xchg
mov
iret
cdq
icebp
out
jno
lods
xchg
cmc
pop
ins
cdq
jno
ins
icebp
mov
cdq
cld
jle
pop
into
cdq
mov
cdq
jno
jmp
sbb
adc
jno
aam
xor
ins
outs
xchg
jb
jns
add
lods
jo
sti
ins
cdq
repnz
pushf
mov
in
push
mov
in
jno
scas
retf
ja
ins
test
adc
cdq
jno
xchg
pushf
jne
cs
cli
jle
mov
sbb
mov
in
inc
and
pop
sbb
xchg
sub
pop
xchg
data16
jle
pop
iret
cdq
jmp
xchg
data16
cmp
jb
cdq
lock
pop
call
and
ins
nop
mov
dec
data16
lods
(bad)
pop
pushf
jno
fwait
jp
jle
pop
adc
pop
pop
xor
push
sbb
jbe
ins
lea
leave
adc
jno
gs
add
jb
cdq
clc
and
clc
cmp
xor
jns
call
xchg
clc
and
pop
push
mov
in
repnz
js
es
xchg
into
(bad)
push
xchg
xor
stc
or
ins
data16
lods
(bad)
adc
jne
push
sbb
ins
in
bound
mov
xor
xchg
out
jne
cmp
mov
sti
push
xchg
sbb
(bad)
sbb
jno
adc
jno
fwait
jle
mov
lods
jb
add
popf
mov
ins
and
ins
cdq
xchg
data16
lods
(bad)
sub
jp
jg
sti
ins
adc
in
xchg
sub
inc
lds
clc
mov
push
loope
jbe
arpl
adc
jno
out
pop
jge
sub
stc
mov
in
mov
sub
add
popf
cdq
cmp
cdq
jno
cmp
sti
ins
test
movs
xor
scas
in
es
xor
popa
pop
add
pop
mov
push
das
xor
cmp
add
test
mov
pop
pop
call
cdq
clc
add
clc
cmp
les
test
into
cli
mov
stos
or
jno
xchg
pushf
jne
cs
icebp
test
call
sub
cdq
or
cdq
jno
sub
(bad)
push
pop
add
xchg
pushf
jne
cs
clc
add
clc
cmp
cwde
daa
adc
data16
pop
jns
stos
repz
sti
ins
test
mov
nop
adc
mul
cdq
cli
sti
in
or
pop
xchg
(bad)
movs
sub
(bad)
sub
xchg
(bad)
and
daa
mov
arpl
mov
xor
mov
sub
(bad)
or
test
ins
data16
lods
(bad)
fcmovb
push
hlt
fcmove
pop
hlt
fisttp
sbb
popf
in
or
cmp
(bad)
sub
scas
int3
clc
push
cmp
in
jns
iret
std
adc
ins
cdq
mov
push
jno
add
data16
outs
jno
jl
cdq
clc
jge
cdq
jno
or
jg
cdq
jno
ins
sbb
hlt
fcmovnu
or
sti
ins
adc
sti
ins
cdq
cli
mov
ins
cdq
jno
imul
jno
jl
cmp
cmp
(bad)
jnp
cdq
jno
mov
pop
add
cmp
cdq
clc
add
adc
xchg
xchg
data16
xchg
clc
add
clc
cmp
pop
xor
jne
je
lods
(bad)
stos
inc
pop
sti
ins
repz
test
mov
sbb
movs
aaa
push
mov
in
lock
je
jno
aas
iret
es
xchg
into
(bad)
push
jp
sti
ins
pop
hlt
or
popa
xchg
data16
cmp
pushf
jne
cs
repnz
nop
mov
ins
sbb
js
pop
fld
in
out
lea
nop
mov
out
jne
clc
add
add
data16
cwde
mov
imul
jno
jmp
leave
sbb
push
cdq
cld
jle
mov
cmp
jo
or
pushf
jne
cs
lock
out
jno
loope
lea
sbb
jno
lods
in
push
ins
repz
jmp
leave
mov
ins
cdq
lock
scas
jno
xchg
xor
in
inc
add
pop
mov
push
cwde
jno
ins
pop
aaa
(bad)
ins
cdq
jno
arpl
hlt
or
and
ins
cdq
xchg
data16
cmp
(bad)
sub
scas
int3
clc
push
aam
popa
sti
ins
jno
jge
cdq
and
stos
fmul
jp
popa
mov
ins
cdq
icebp
sub
cmp
cdq
and
mov
pop
stc
test
adc
in
pop
cmp
int3
mov
xchg
sbb
test
pop
xor
ins
retf
xchg
data16
scas
adc
daa
out
in
call
jle
mov
scas
adc
push
cdq
sbb
cdq
jno
jmp
leave
mov
ins
cdq
inc
cmp
ds
ins
cdq
cld
xchg
jno
imul
xor
aam
jl
ins
outs
adc
in
lods
jb
popa
and
das
mov
aas
jno
add
in
xor
xchg
adc
mov
ins
retf
xchg
data16
mov
cmp
retf
pop
fdiv
ja
retf
cdq
jno
sbb
xor
xchg
data16
fs
adc
pushf
jne
cs
cli
mov
scas
adc
out
xor
push
out
ins
xchg
fs
nop
data16
xchg
inc
cmp
adc
in
inc
cmp
int3
mov
(bad)
xor
mov
clc
xchg
xchg
aas
jno
push
xchg
data16
adc
mov
sbb
xor
ins
xacquire
fadd
cmp
gs
ins
cdq
call
data16
gs
cmp
int
mov
sub
mov
sub
mov
cdq
jno
test
mov
adc
adc
mov
pop
jns
scas
adc
mov
cdq
repnz
out
movs
dec
sub
jo
push
xchg
(bad)
mov
movs
pop
and
mov
daa
lods
out
jns
test
iret
xchg
jbe
int3
ins
cdq
mov
push
cmps
jno
imul
sbb
popa
jo
in
repnz
add
adc
sbb
out
out
sti
sbb
ds
cdq
repnz
add
adc
popa
pop
add
pop
repnz
in
cdq
jno
ins
in
jp
ficomp
jno
ins
jno
js
cdq
mov
push
push
pop
pop
call
outs
xchg
jb
gs
cmp
(bad)
mov
stos
cmp
daa
lods
out
jns
xchg
lea
in
jo
in
adc
data16
lods
(bad)
pushf
test
jb
push
sti
outs
cdq
jle
sub
and
xchg
sbb
in
pop
jb
pop
jno
ins
adc
and
stc
sti
ins
cdq
clc
or
clc
cmp
cs
sbb
in
je
ins
cdq
jno
xchg
out
jns
std
sbb
gs
add
xchg
push
add
adc
ins
mov
pop
popa
retf
cwde
cmp
jb
test
jb
repz
sbb
jno
lods
in
inc
add
popf
mov
ins
adc
hlt
fcmovnu
or
xchg
xor
cdq
mov
test
leave
and
cdq
jno
mov
xor
in
inc
cmp
push
jp
xor
je
lods
(bad)
fcmovnu
or
xchg
ss
cdq
jmp
data16
mov
sti
ins
adc
pop
cmp
mov
clc
cdq
jno
cmp
push
repz
sti
ins
adc
imul
popa
mov
pushf
adc
mov
cli
cdq
jno
cmp
jle
ins
cdq
clc
cmp
stos
test
cs
mov
xchg
data16
jl
mov
adc
add
pop
movs
aaa
push
mov
in
repnz
pusha
retf
shl
dec
sbb
adc
sti
fwait
jle
mov
sbb
mov
data16
lods
(bad)
stos
les
ins
iret
cdq
add
xchg
clc
cmp
int3
mov
fnstenv
sbb
cmp
addr16
cdq
and
fadd
shr
pop
push
push
cdq
sbb
add
cmp
ins
iret
cdq
push
xchg
data16
ins
in
dec
add
popf
mov
ins
adc
lods
test
add
sar
mov
(bad)
jnp
cdq
jno
test
test
sbb
adc
ret
xor
ins
outs
xchg
jb
ins
clc
cmp
bound
inc
iret
cdq
and
pop
add
xchg
out
jne
sbb
mov
pop
jge
sbb
jno
xchg
mov
jb
iret
cdq
fcom
pop
call
cdq
movs
aaa
push
mov
ins
int3
clc
push
out
jne
test
into
into
stos
ss
mov
data16
lods
(bad)
dec
ins
les
push
cwde
sbb
test
jne
cs
pop
cmp
jne
sti
in
inc
add
pop
sbb
test
icebp
sti
ins
adc
arpl
je
lods
(bad)
test
mov
in
lahf
xchg
jl
xor
cmp
inc
call
(bad)
pop
sbb
push
pushf
mov
push
sbb
mov
je
je
lods
(bad)
in
xchg
test
mov
ins
data16
lods
(bad)
xchg
outs
xchg
jb
jge
cmp
pushf
jns
cs
jo
xchg
test
jb
push
adc
mov
ins
cdq
jno
push
pushf
jne
sub
jno
arpl
mov
xchg
movs
jno
ins
cdq
or
dec
cs
jno
pusha
sbb
(bad)
test
jno
ins
adc
cmp
jno
sti
ins
cdq
cld
mov
sub
cmp
cdq
jno
loope
je
mov
lods
jne
cs
cdq
mov
cdq
jno
stos
sbb
js
add
pushf
jne
cs
jle
sub
cmp
cdq
jno
in
je
mov
fmul
sti
ins
adc
pop
dec
xor
arpl
xor
add
cdq
cld
out
imul
je
mov
addr16
mov
ins
jno
js
cdq
clc
cmp
popa
inc
add
pop
and
aad
jno
test
das
mov
cmp
xchg
js
xchg
daa
lods
out
jns
in
jns
inc
ret
and
outs
xchg
jb
popa
clc
cmp
pushf
jne
cs
lock
mov
sti
or
xor
or
fnstsw
cs
mov
fs
xor
ins
repz
ins
cmp
mov
jle
cdq
repnz
pusha
data16
lods
(bad)
xor
pop
cmp
jno
ins
icebp
jge
sub
sbb
push
cdq
cdq
fucomp
cdq
jno
stos
adc
lods
test
je
lods
(bad)
xchg
mov
jb
repz
mov
jno
xor
(bad)
sbb
(bad)
push
popa
xchg
xchg
(bad)
(bad)
fs
xor
xor
mov
js
and
inc
cld
mov
frstpm(287
push
jo
in
mov
clc
pop
xor
in
repnz
sti
ins
sbb
js
or
repnz
push
xor
ins
sbb
fdiv
stos
pushf
or
cdq
jne
ins
cdq
leave
mov
jno
lea
xor
in
mov
mov
xor
push
imul
jge
cdq
jle
imul
jae
ins
movs
mov
ins
cdq
jle
adc
hlt
fld
or
cwde
xchg
outs
cdq
jno
imul
jle
lods
shl
sbb
clc
mov
repz
and
jno
in
xchg
in
sub
mov
jno
call
(bad)
popa
cmp
jo
cdq
jo
enter
xchg
xor
in
push
cwde
jmp
out
mov
ins
cdq
mov
clc
pop
xor
call
(bad)
imul
sti
in
push
icebp
idiv
push
xor
jl
jno
sub
fdiv
pop
data16
pushf
in
sub
test
adc
jno
in
jo
in
icebp
idiv
push
xor
push
xchg
clc
push
xor
fs
jbe
lods
jo
stc
ins
cdq
clc
xor
clc
cmp
xchg
in
sub
pop
xor
into
xor
mov
xchg
xchg
clc
push
xor
ins
in
jbe
lods
jo
stc
ins
cdq
clc
xor
clc
cmp
xchg
in
sub
loope
mov
ins
jo
add
clc
push
xor
outs
in
jbe
lods
jo
stc
ins
cdq
clc
xor
clc
cmp
xchg
in
sub
inc
idiv
ins
sbb
adc
mov
xchg
pushf
in
cs
mov
enter
in
jo
stos
ins
cdq
icebp
idiv
push
xor
sub
jnp
ins
cdq
rol
imul
xchg
in
xor
fdiv
test
sti
ins
cmp
jo
cdq
repnz
je
repz
mov
inc
idiv
adc
jno
test
jno
int
cli
mov
repz
fcomp
in
cs
repnz
push
xor
outs
jo
sti
ins
cdq
lock
xor
pushf
aad
sub
cdq
jno
pop
pop
cwde
and
cdq
jno
popa
or
lock
imul
pop
cs
jle
imul
mov
sbb
fucomip
mov
icebp
sti
ins
cdq
or
sti
ins
out
add
sbb
cmp
cdq
icebp
idiv
push
xor
sub
dec
add
or
inc
pop
adc
xor
ins
pushf
aad
sub
pushf
aad
sub
cdq
jno
lea
xor
in
icebp
idiv
push
xor
sub
jl
lods
jo
cli
ins
cdq
lock
jno
xchg
pushf
in
cs
xchg
clc
push
xor
sub
cmc
aas
ins
cdq
jno
pushf
(bad)
sti
into
pop
sar
movs
adc
pop
cs
push
cmp
jae
outs
jle
imul
cld
in
xchg
fcmovu
xchg
lods
cdq
jno
arpl
icebp
xchg
pushf
xchg
xchg
in
jno
arpl
xor
push
sbb
ins
in
jp
mov
xor
ins
pushf
xchg
xchg
pop
xor
outs
in
fs
outs
jno
sbb
imul
mov
sbb
xor
in
adc
jb
(bad)
sti
into
in
cli
mov
sbb
xor
out
jns
jae
outs
icebp
xchg
in
sti
sbb
xor
push
cdq
jno
dec
jno
mov
in
aaa
jo
jno
mov
push
cdq
mov
test
xor
int
or
ins
mov
jno
mov
mov
pmulhw
fiadd
imul
in
sti
out
stc
(bad)
jns
leave
mov
adc
jno
enter
push
pushf
cdq
xchg
pushf
in
cs
clc
or
sar
sbb
jno
lods
fstp
xor
pop
das
mov
mov
daa
lods
sar
push
mov
xor
mov
ins
icebp
call
xchg
adc
sar
adc
and
sahf
ins
jl
jno
aam
xor
cmp
xchg
imul
jno
mov
jno
xchg
jnp
fdiv
mov
xor
cmp
xchg
pop
repz
xchg
outs
xchg
jb
gs
cmp
ja
mov
adc
xor
xor
mov
jp
sbb
ins
retf
xlat
xchg
cmp
imul
xor
in
mov
clc
pop
xor
add
mov
ins
adc
push
cmp
fs
int3
(bad)
sub
sti
ins
cdq
clc
and
adc
jbe
xor
mov
sub
jno
aam
adc
ins
outs
xchg
jb
or
cmp
cld
mov
out
cld
(bad)
sti
xchg
pushf
in
cs
repnz
mov
inc
clc
cmp
cld
movs
sti
stos
fsubr
cmp
inc
jo
ins
cdq
lock
fidiv
loope
jne
cs
clc
mov
lods
(bad)
sub
jae
ins
cdq
clc
and
adc
sti
ins
cdq
repnz
aam
clc
and
adc
mov
sbb
cdq
stos
add
jno
ins
adc
pop
cmp
fs
fdiv
shr
jno
fwait
jp
mov
sub
xor
cmp
jno
ins
repz
push
add
test
xor
cmp
add
loope
shr
cdq
jno
imul
sbb
push
cdq
sbb
push
lahf
mov
ins
cdq
lock
fdiv
xchg
in
xchg
adc
pushf
in
cs
cld
mov
fcom
pop
cmp
fs
fdiv
sub
not
inc
add
ins
outs
xchg
jb
sbb
cmp
(bad)
sub
scas
int3
clc
push
out
jne
cmp
gs
mov
mov
dec
sti
ins
adc
in
xor
sbb
ins
test
jb
jne
mov
ins
repz
sub
jbe
jno
add
popa
sbb
loope
test
fs
repz
sub
jmp
sub
mov
in
lods
jb
gs
lods
shl
mov
xchg
adc
mov
push
mov
cld
push
xor
in
jbe
mov
cdq
cmps
scas
int3
clc
push
out
jne
test
into
cli
mov
not
cdq
inc
add
das
jne
push
data16
ins
in
inc
hlt
fcmovu
inc
cli
push
data16
ins
in
pop
hlt
fcmovu
inc
stc
push
data16
ins
in
ins
hlt
fcmovu
inc
clc
push
data16
ins
in
popa
hlt
fcmovu
inc
call
jno
ins
xchg
cmc
icebp
outs
cdq
jno
sub
sti
out
push
adc
stos
fmul
add
das
jne
sahf
push
xor
arpl
lds
jle
sti
cdq
jno
in
cmp
fimul
hlt
jae
cdq
jno
xchg
sbb
in
push
pop
add
in
repnz
(bad)
out
jp
mov
add
mov
popf
jle
push
cdq
jno
xor
mov
loope
je
movs
(bad)
test
or
ins
xchg
(bad)
scas
xchg
repnz
cdq
movs
(bad)
cmp
xor
xchg
sbb
jbe
mov
sbb
mov
in
test
mov
mov
out
jno
jo
ins
clc
out
imul
mov
imul
add
cli
test
je
lods
(bad)
push
cmps
jne
cmp
mov
sbb
clc
add
jno
jnp
lahf
jne
sub
mov
call
in
repnz
(bad)
jmp
sbb
ins
cdq
add
adc
dec
std
dec
in
addr16
call
out
jae
js
sahf
clc
(bad)
jns
jno
ins
sbb
outs
in
adc
xchg
shl
(bad)
push
add
in
repnz
dec
std
outs
in
and
sbb
stc
sbb
clc
add
jno
hlt
ficomp
jno
sbb
jno
inc
sbb
jbe
mov
sbb
and
jno
jb
popa
cli
mov
imul
gs
ins
cdq
jno
in
movs
dec
cli
sbb
clc
add
dec
std
ins
in
cmp
sbb
cli
sbb
jb
push
lahf
jo
pop
adc
dec
push
xchg
dec
add
imul
test
push
sti
ins
adc
loope
(bad)
(bad)
ins
arpl
adc
jne
ins
cdq
jno
sub
mov
push
mov
(bad)
das
mov
mov
popf
idiv
iret
es
or
add
xchg
icebp
(bad)
push
cdq
add
sub
mov
outs
cdq
jno
popf
sbb
mov
cli
mov
ins
cdq
dec
cmp
ins
cdq
jno
stos
xchg
mov
clc
pop
xor
arpl
and
lods
jnp
jo
mov
and
popa
jo
cmp
sub
imul
cdq
sti
ins
cdq
add
sti
ins
in
push
js
gs
bound
test
out
imul
std
xchg
fmul
sti
push
fmul
jno
xchg
push
xor
jb
popa
clc
or
pop
sub
arpl
ins
dec
clc
mov
ins
adc
in
jb
ins
out
xor
out
bound
sbb
and
clc
add
jo
out
jno
jb
popa
mov
pop
jo
mov
xchg
adc
imul
cld
scas
jb
jo
out
jno
jb
popa
mov
test
jne
ins
cdq
jno
aas
iret
jle
cmp
inc
out
test
sti
test
lea
sbb
xor
lds
jno
mov
lods
cmp
add
inc
mov
jno
lea
sti
ins
cdq
icebp
mov
hlt
sbb
sbb
adc
data16
imul
mov
sbb
sahf
add
sbb
pushf
push
xor
ins
in
imul
scas
add
cdq
add
or
pushf
xor
outs
jb
hlt
fimul
adc
data16
outs
les
add
push
jle
pusha
xchg
mov
adc
out
jno
out
fldenv
stc
jns
mov
lahf
jbe
add
push
outs
jbe
xchg
pop
xor
cdq
and
mov
mov
lods
fs
fdiv
mov
or
and
jns
or
ins
sbb
or
das
hlt
or
xchg
(bad)
imul
jle
and
add
sbb
adc
data16
fimul
adc
data16
outs
sbb
pushf
in
sti
ins
xchg
cmc
popa
push
or
adc
data16
outs
adc
mov
xor
in
movs
and
mov
clc
pop
xor
in
and
and
data16
call
jno
add
inc
mov
pushf
in
cs
cli
outs
mov
dec
mov
jp
xchg
in
in
je
ins
fnstenv
jmp
test
adc
jno
ins
cdq
and
int
jno
in
repnz
in
int3
add
pop
jno
ins
cdq
dec
cbw
jbe
add
dec
cld
jle
inc
mov
jno
mov
(bad)
clc
pop
xor
out
cmp
adc
data16
loopne
jno
add
mov
ins
les
and
fld
add
jno
add
adc
gs
add
and
icebp
sbb
retf
stos
cmp
call
mov
sahf
add
in
js
in
data16
ins
cdq
add
in
mov
ins
cdq
add
in
je
jl
jno
jmp
jb
jp
cdq
popa
sti
ins
sbb
(bad)
fisub
pop
test
lock
jbe
add
cdq
jo
out
std
and
xchg
cdq
jno
jmp
xchg
mul
imul
mov
dec
in
jno
test
jb
ins
xchg
(bad)
outs
lahf
jbe
add
jnp
jo
mov
outs
cwde
jbe
add
cmp
adc
data16
stc
ins
sahf
add
pop
xchg
stc
in
mov
outs
pop
nop
stc
outs
aam
jo
mov
ja
jno
add
adc
jae
fwait
clc
and
fwait
jb
nop
cwde
mov
jle
jbe
add
and
adc
data16
ins
cdq
add
in
cs
icebp
inc
pop
add
in
sub
test
add
ins
adc
pop
mov
mov
call
in
in
and
adc
jae
jmp
adc
pop
mov
mov
add
out
fwait
clc
jle
inc
mov
sbb
and
clc
inc
mov
fwait
clc
jle
inc
mov
data16
jle
inc
mov
sbb
loope
leave
and
and
inc
scas
add
jno
(bad)
ins
cdq
cli
jle
inc
mov
data16
out
mov
xchg
data16
jle
inc
mov
data16
inc
pop
add
in
mov
ins
cdq
ja
push
cdq
cli
outs
fadd
add
jae
test
xchg
data16
pusha
retf
sbb
ins
cwde
jno
stc
xor
jmp
xchg
(bad)
outs
lahf
jbe
add
jnp
jo
inc
scas
add
mov
das
mov
mov
mov
dec
stc
push
add
pop
xchg
stc
out
or
fdiv
stc
ins
sahf
add
icebp
jno
ins
cdq
and
pop
jmp
xchg
data16
arpl
cli
ins
cdq
icebp
xchg
jg
cwde
jno
out
test
data16
ins
movs
cwde
sti
ins
cdq
add
cli
arpl
cwde
loopne
cdq
jno
jmp
adc
ins
cdq
jno
out
jae
jbe
fwait
jne
jmp
pop
hlt
pop
mov
mov
out
xor
and
data16
fnstcw
add
adc
mov
js
fwait
icebp
ret
ins
in
outs
jb
sbb
mov
cmp
in
jnp
pushf
sbb
(bad)
xlat
call
cdq
jle
stc
cmp
stc
in
fs
mov
mov
cmp
dec
push
cwde
sti
ins
cdq
add
out
inc
cli
ins
cdq
jno
test
mov
mov
add
sbb
or
xchg
cli
jle
jbe
add
popa
pop
or
mov
jmp
mov
mov
mov
mov
arpl
in
mov
mov
mov
stos
add
pop
jbe
in
movs
dec
cli
ins
cdq
jno
sbb
jno
ins
cdq
add
in
movs
dec
clc
ins
cdq
jno
sbb
jno
ins
cdq
add
in
movs
dec
(bad)
ins
cdq
jno
sbb
(bad)
jle
inc
mov
in
cli
sbb
sahf
add
leave
mov
inc
mov
sub
and
cwd
mov
xchg
icebp
inc
pop
add
in
xor
ins
sahf
add
cdq
cli
outs
cwde
jbe
add
jnp
jb
pop
cwde
stc
lods
js
clc
and
jg
jno
add
adc
xchg
sbb
adc
lock
cwde
jbe
add
popf
jno
push
dec
mov
clc
pop
xor
test
hlt
or
das
hlt
or
xchg
(bad)
imul
jle
inc
bound
xor
leave
es
xchg
pop
jb
xchg
into
xor
or
sti
ins
data16
lods
(bad)
fcmovnu
jns
lods
lea
mov
ins
cdq
clc
mov
fs
out
mov
jno
xchg
pushf
in
cs
jle
sub
dec
(bad)
js
xor
ins
in
imul
lods
(bad)
repnz
pop
mov
fwait
jle
mov
movs
pop
and
mov
and
fdivr
jmp
sti
ins
outs
xchg
jb
popa
clc
cmp
pushf
in
cs
jle
sub
inc
(bad)
js
xor
test
sbb
ins
adc
xchg
pushf
in
cs
jle
sub
dec
(bad)
jl
xor
ins
in
gs
fcmovnu
jns
lods
lea
mov
ins
jb
hlt
fcmovnu
jns
lods
(bad)
repnz
pop
mov
ins
popa
clc
cmp
push
mov
in
repnz
pusha
into
cli
mov
fs
loop
clc
add
adc
mov
cmps
(bad)
sbb
jno
sbb
mov
xchg
adc
popf
iret
jne
mov
int3
(bad)
in
jo
in
sbb
imul
lea
cdq
jno
test
cld
mov
push
cdq
sbb
cmp
jno
ins
repz
push
call
leave
mov
ins
cdq
xchg
repz
cdq
jmp
sti
xor
(bad)
sbb
(bad)
clc
pop
xor
arpl
je
int3
(bad)
movs
pop
and
mov
popf
jecxz
into
iret
mov
shl
stos
(bad)
push
sti
ins
data16
lods
(bad)
xchg
jo
sti
ins
cdq
leave
out
ins
cdq
jno
mov
xor
out
movs
je
sbb
jno
sbb
pop
mov
xchg
pushf
in
cs
clc
or
adc
sti
fwait
jle
mov
jl
xor
test
gs
ins
cdq
xchg
pushf
lea
cdq
jno
js
jno
fwait
jle
mov
js
xor
ins
adc
inc
js
jno
fwait
jle
mov
jl
xor
ins
fdivp
add
xchg
xrelease
sahf
jno
push
cdq
sbb
sbb
jno
or
jno
out
pop
jge
call
jmp
bnd
out
mov
jno
call
add
or
xchg
ins
cdq
mov
je
xor
test
je
lods
(bad)
xor
scas
in
repnz
dec
retf
rcl
adc
cli
xchg
adc
sti
ins
data16
lods
(bad)
push
jo
outs
jno
nop
ins
cdq
sar
cmps
(bad)
xchg
test
jb
push
hlt
fistp
adc
bnd
in
pop
jb
ja
sahf
pushf
cdq
lock
mov
cld
mov
push
xchg
sbb
ins
icebp
mov
ins
cdq
mov
push
rcr
ins
adc
gs
add
pop
cs
jae
sub
sti
fwait
jle
mov
or
add
ja
sti
ins
pop
je
int3
(bad)
stos
fcomp
jp
add
data16
lods
(bad)
sub
jbe
jne
add
popf
mov
xchg
ins
cdq
clc
cmp
mov
mov
xchg
cdq
jno
dec
xchg
(bad)
mov
out
movs
je
sbb
jno
sbb
pop
mov
in
jbe
lods
ins
cdq
pop
add
addr16
sub
add
in
add
or
xacquire
jno
xchg
ins
cdq
clc
add
adc
mov
in
je
sbb
jno
mov
jle
mov
out
(bad)
hlt
fisttp
sub
clc
(bad)
jns
pop
mov
lods
(bad)
sub
xchg
ins
xchg
(bad)
mov
loope
je
sbb
jno
add
sub
ins
jno
xchg
ins
cdq
and
cmc
cmc
jno
test
sahf
cmp
cdq
jno
xor
mov
js
in
and
shl
xchg
xor
mov
dec
cdq
jno
imul
cld
mov
sbb
jno
test
leave
sub
jno
mov
xor
in
mov
les
xor
loope
jmp
movs
xor
cwde
jno
xchg
leave
cld
scas
test
icebp
add
mov
repz
into
imul
loope
jmp
test
retf
sbb
add
cdq
jno
and
jl
cdq
jno
adc
jo
scas
imul
stos
test
mov
push
inc
add
out
bound
sbb
sti
ins
adc
imul
xor
ins
jb
hlt
fcmovnu
(bad)
jbe
xor
jge
gs
or
add
out
popa
xchg
cdq
jno
ins
icebp
mov
cs
daa
adc
pop
jge
scas
(bad)
clc
scas
xchg
jb
popf
stos
fmul
hlt
fcmovnu
(bad)
jbe
xor
jge
gs
or
add
out
popa
xchg
adc
or
cdq
daa
adc
and
jb
(bad)
clc
scas
xchg
xchg
(bad)
mov
inc
in
jne
xchg
aam
add
or
jo
mov
xor
cmp
inc
xchg
data16
pusha
adc
hlt
fcmovnu
pop
xchg
data16
sbb
js
cbw
jo
cdq
jno
and
mov
ins
xchg
(bad)
mov
ins
cdq
add
arpl
fld
cmp
mov
ins
cdq
sub
or
add
adc
(bad)
jae
jne
sub
and
lea
js
xchg
jle
sub
mov
push
clc
add
clc
cmp
pushf
in
cs
daa
adc
jno
in
clc
add
clc
cmp
inc
add
aam
mov
jb
jb
mov
jb
data16
lods
(bad)
das
xchg
cli
sti
out
movs
aaa
push
mov
in
leave
xchg
push
lock
aas
iret
es
jo
mov
in
xchg
in
rol
xchg
data16
cmp
cdq
clc
and
clc
cmp
pop
hlt
or
adc
addr16
arpl
dec
xchg
bound
mov
ins
cdq
sbb
hlt
or
ins
pop
hlt
aas
xchg
mov
mov
test
pop
xchg
gs
out
jns
and
mov
popa
mov
ins
and
ins
cdq
xchg
in
jmp
cmp
sbb
add
and
out
jns
pop
jno
pushf
ins
cdq
mov
clc
pop
xor
push
cdq
cdq
test
cdq
jno
push
cdq
sbb
cdq
jno
jmp
leave
cli
mov
add
sbb
add
cwd
cmp
cdq
jno
jmp
sbb
add
cmp
fs
(bad)
mov
xchg
data16
add
jno
mov
test
add
sbb
cli
ins
cdq
cli
jle
bound
sti
ins
in
jg
and
dec
mov
jns
xor
arpl
xor
cmp
repnz
jno
xchg
ins
cdq
mov
clc
pop
xor
out
jns
adc
jo
jmp
sbb
jmp
in
sub
xor
add
sbb
ins
in
mov
popa
mov
ins
cdq
xchg
in
loope
xchg
data16
jle
bound
dec
xchg
pop
sbb
add
data16
add
cli
jle
pop
sbb
mov
test
jne
ins
push
inc
sahf
data16
xchg
cmc
pop
ins
cdq
jno
loope
mov
xchg
sbb
cli
ins
in
mov
popa
mov
mov
mov
fldenv
add
xchg
mov
xchg
and
adc
pop
jge
jmp
pop
cmc
(bad)
xchg
pop
push
adc
(bad)
mov
stc
popa
mov
cwde
lea
or
mov
fcmovnu
(bad)
hlt
fisttp
add
dec
sub
dec
lock
mov
sti
arpl
hlt
or
popa
mov
jmp
jo
clc
ins
cdq
mov
clc
pop
xor
test
or
in
pop
mov
outs
xchg
arpl
jb
sbb
hlt
out
mov
xor
arpl
xor
cmp
push
or
data16
ins
cdq
clc
and
clc
cmp
jno
pushf
ins
cdq
cli
xchg
repz
hlt
or
lods
xchg
inc
cdq
jno
stos
fmul
hlt
fcmovnu
(bad)
jno
pushf
mov
data16
outs
imul
mov
xchg
mov
mov
arpl
(bad)
sti
ins
jb
hlt
fcmovnu
(bad)
jno
pushf
test
data16
outs
imul
mov
xchg
xchg
(bad)
outs
call
and
pop
xor
ins
cdq
call
cs
xchg
mov
cwde
mov
add
data16
xchg
xchg
(bad)
mov
xchg
mov
(bad)
jle
pop
sbb
add
data16
jle
pop
sbb
add
pop
hlt
or
ins
adc
add
pushf
mov
data16
ins
icebp
leave
or
cdq
cld
jle
pop
jno
dec
xchg
data16
pusha
movs
mov
cdq
add
add
data16
imul
(bad)
clc
pop
xor
stos
sbb
add
data16
ficomp
add
and
loope
mov
and
mov
add
pop
jge
xchg
data16
arpl
jle
jmp
leave
sbb
jno
jmp
leave
cdq
inc
fldenv
js
xchg
dec
add
cdq
jno
pop
(bad)
cli
jle
pop
adc
sub
dec
stc
outs
mov
mov
pop
or
mov
fcmovnu
(bad)
hlt
fisttp
add
data16
xchg
pop
cs
or
jmp
(bad)
clc
jle
pop
and
ins
cdq
xchg
in
in
xchg
data16
cmp
sbb
add
data16
push
data16
pushf
in
cs
mov
lahf
pop
adc
out
loope
cli
sbb
mov
xchg
nop
mov
imul
xchg
addr16
out
add
stc
jle
bound
or
xor
hlt
add
mov
lds
sbb
jb
addr16
add
jno
(bad)
adc
outs
xchg
arpl
mov
ins
cdq
jle
sahf
cdq
jno
arpl
hlt
or
icebp
fisttp
cs
cld
jle
pop
jno
dec
xchg
data16
pusha
adc
add
data16
cs
setae
(bad)
xchg
data16
sbb
add
adc
setae
hlt
fistp
jg
data16
sub
ja
data16
sub
dec
cli
ins
in
mov
sbb
xchg
pop
xchg
mov
mov
and
mov
sbb
and
pop
jle
jmp
xchg
(bad)
outs
cwde
pop
cs
inc
push
cld
mov
jmp
xchg
(bad)
jle
pop
sbb
add
add
cs
setae
cmp
xchg
data16
push
add
inc
cdq
jno
(bad)
adc
imul
mov
inc
ret
bound
inc
xchg
data16
cs
cld
jle
pop
jno
dec
xchg
data16
pusha
adc
add
data16
pushf
jno
arpl
hlt
setae
(bad)
xchg
data16
sbb
mov
xchg
pop
adc
add
mov
xor
cwde
jno
xchg
adc
add
or
hlt
add
adc
add
mov
fadd
xchg
and
ins
icebp
jno
push
cwde
sbb
jno
jmp
leave
cdq
(bad)
mov
cmp
add
ins
outs
xchg
jb
adc
mov
fcmovnu
pop
xchg
data16
sbb
lock
(bad)
jle
sub
outs
imul
add
data16
arpl
xor
out
mov
xor
mov
icebp
loope
cs
cld
jle
pop
jno
dec
xchg
data16
pusha
adc
jb
test
jb
xchg
(bad)
mov
ins
cdq
add
iret
sahf
(bad)
fcmovnu
(bad)
jbe
pushf
mov
and
leave
sub
jb
sbb
setae
jb
outs
xchg
jb
adc
adc
(bad)
mov
cwde
pop
or
mov
pushf
mov
popw
add
addr16
sub
outs
xchg
pop
mov
jo
out
xor
loope
mov
and
sub
mov
pop
jge
stos
(bad)
clc
xchg
cdq
xchg
in
stc
add
cs
push
mov
ins
in
adc
ins
icebp
inc
or
cdq
jle
sub
jg
data16
fisub
js
xchg
clc
cmp
pop
jae
in
test
data16
movs
jno
xchg
jle
stc
ins
mov
mov
pop
or
mov
fcmovnu
(bad)
jo
popa
mov
adc
jbe
pop
push
mov
sbb
jle
pop
pushf
in
cs
sbb
loope
mov
and
push
mov
xchg
leave
cdq
lds
cdq
jno
test
clc
and
bound
add
sbb
add
data16
ins
icebp
ror
cs
cld
jle
pop
jno
dec
xchg
data16
pusha
movs
mov
cdq
add
pop
sahf
(bad)
jmp
leave
cdq
mov
test
mov
imul
cli
add
cmp
test
mov
push
mov
ins
in
jnp
jmp
cwde
jno
ins
les
xchg
mov
pop
mov
xchg
leave
cld
jle
bound
add
mov
jns
je
mov
pop
gs
jno
pop
xchg
sbb
add
jno
pop
xchg
data16
add
jo
ins
adc
add
mov
jns
xchg
sahf
jno
out
pop
jge
lahf
int3
xor
ins
sbb
adc
mov
outs
ins
cdq
jno
jmp
leave
mov
ins
cdq
repnz
pusha
adc
arpl
xor
cmp
repnz
jno
fwait
ins
cdq
clc
and
clc
cmp
cdq
repnz
and
ins
xchg
hlt
jg
cdq
jno
ins
adc
daa
xchg
mov
xchg
and
cmp
pop
jge
jmp
adc
jnp
arpl
daa
xchg
mov
xor
cwde
jno
xchg
adc
add
addr16
fldenv
add
push
in
dec
xchg
data16
es
bound
add
cwd
cdq
or
cld
jbe
bound
mov
sbb
cmp
pop
jo
shl
add
mov
mov
loope
mov
xchg
sbb
cli
ins
in
mov
data16
xchg
addr16
stos
iret
cld
inc
movs
lea
icebp
or
cs
cld
inc
mov
mov
jno
lahf
ins
cdq
repnz
jl
je
lods
(bad)
push
jo
outs
jno
movs
ins
cdq
cli
xchg
jmp
inc
pop
and
pop
pop
cmp
inc
mov
xchg
fwait
jno
fistp
adc
les
in
pop
jb
inc
mov
xchg
adc
adc
inc
mov
xchg
repz
jbe
inc
mov
xchg
leave
cli
mov
test
sub
ins
adc
add
popa
mov
add
jo
ins
adc
add
mov
jns
or
jge
xchg
je
lods
(bad)
sub
and
gs
add
pop
jne
ins
jno
movs
ins
cdq
clc
and
bound
add
and
add
data16
xor
je
lods
(bad)
mov
test
es
bound
jnp
cwde
jno
xchg
repz
loope
lods
add
xchg
mov
cdq
clc
jle
bound
add
jno
cmps
ins
cdq
dec
enter
mov
adc
sti
out
pop
jne
ret
pop
xchg
arpl
mov
lahf
sub
sbb
push
cdq
cdq
in
or
mov
int3
pop
xchg
gs
arpl
mov
clc
pop
xor
in
pop
and
pop
cld
jbe
bound
mov
sbb
sti
cmp
int3
dec
xchg
bound
add
jno
cmps
ins
cdq
clc
jle
bound
add
xchg
test
jno
mov
dec
cdq
jno
jmp
repz
sti
out
pop
jne
retf
sbb
xchg
ins
les
xchg
mov
data16
fs
test
sub
push
xchg
bound
mov
arpl
setae
pop
aaa
cdq
jno
pop
mov
fisttp
xchg
sbb
ins
rcr
scas
int3
clc
push
aam
jno
ins
jno
cmps
ins
cdq
and
dec
shl
arpl
jno
xchg
pushf
in
cs
clc
and
clc
cmp
cmp
add
data16
leave
ins
mov
xchg
cdq
repnz
xchg
lea
sbb
popf
stos
sbb
add
data16
stos
fmul
jbe
and
out
jns
sbb
cdq
push
aaa
cdq
jno
jmp
cdq
mov
clc
pop
xor
push
cdq
cdq
push
or
cdq
sbb
cdq
jno
jmp
leave
cli
mov
test
xor
test
sti
ins
adc
pop
xchg
nop
mov
inc
mov
mov
xchg
in
ins
jo
xchg
jle
sub
and
xor
xor
shl
push
cdq
cdq
push
xor
mov
ins
sbb
ins
in
jns
sub
pop
jo
xchg
jle
sub
and
inc
je
add
adc
out
shl
push
cdq
cdq
test
cdq
jno
xchg
into
jno
fwait
jp
jle
lea
data16
in
addr16
ins
cdq
add
fsubr
imul
addr16
fsubr
jle
data16
fdivr
fcmovnu
jge
test
add
shl
pushf
lea
in
jge
sub
lea
or
jno
jno
jno
in
push
shr
dec
jmp
nop
mov
loop
jno
ins
test
adc
cmc
(bad)
xchg
data16
sbb
mov
adc
pop
xchg
bound
adc
cmc
(bad)
xchg
lea
sbb
mov
fs
stos
in
retf
imul
sbb
add
data16
add
sti
jg
jo
add
data16
mov
jle
jmp
call
stos
sbb
add
data16
in
push
sti
ins
cdq
cli
mov
xchg
data16
data16
lods
(bad)
shr
pop
xchg
cdq
add
push
cwde
sbb
jmp
leave
cdq
jno
data16
xchg
dec
add
cdq
jno
imul
cli
add
cmp
test
fiadd
adc
sti
fwait
jp
jle
lea
jmp
xchg
mov
xchg
sbb
add
data16
data16
sbb
dec
add
cdq
jno
and
mov
cmp
mov
xchg
adc
out
xchg
data16
sbb
mov
fs
sub
cmp
inc
jle
jmp
call
xchg
mov
les
in
push
shr
and
clc
cmp
mov
cld
jle
pop
jno
movs
ins
cdq
mov
xchg
mov
das
sti
ins
data16
lods
(bad)
ins
icebp
sbb
cs
cld
jle
pop
jno
push
xchg
data16
je
mov
cdq
add
in
xchg
in
lods
add
data16
cmp
cdq
mov
xchg
mov
pop
jno
mov
mov
add
popa
mov
ins
cdq
dec
enter
mov
adc
sti
xor
xchg
jle
sub
and
fidiv
add
repz
gs
jno
push
cwde
sbb
jmp
leave
cdq
ffree
data16
xchg
clc
cmp
pop
push
xchg
data16
sbb
jno
movs
mov
dec
retf
adc
rcl
or
jmp
xchg
addr16
pop
in
(bad)
push
out
adc
dec
mov
lods
mov
data16
mov
test
(bad)
xchg
pop
jno
movs
ins
cdq
clc
jle
lea
cwde
sbb
jno
jmp
leave
cdq
push
lds
jb
sbb
xchg
ins
icebp
add
cs
cld
jle
data16
jno
push
xchg
data16
jo
hlt
pop
xchg
mov
mov
ins
in
imul
adc
inc
arpl
out
jno
jb
popa
mov
xchg
jb
jo
popa
mov
xchg
adc
inc
or
add
data16
out
jno
jb
popa
mov
xchg
data16
lods
(bad)
jns
test
sbb
adc
ins
sbb
add
sbb
xchg
in
lea
mov
cli
mov
(bad)
sti
in
cdq
add
repnz
iret
jno
push
stos
push
sti
ins
in
jnp
or
cmps
ins
cdq
sub
movs
adc
ins
sbb
add
cwd
xor
cmp
je
lods
(bad)
lock
sti
ins
outs
xchg
jb
inc
mov
xchg
adc
cmp
adc
pusha
adc
or
xor
sar
mov
adc
mov
ins
push
xchg
mov
leave
adc
cdq
daa
adc
les
out
pop
jns
xchg
test
jb
push
xchg
mov
jg
cs
daa
adc
pop
jns
popf
sbb
cli
ins
in
mov
xor
daa
sti
ins
sbb
movs
xor
sub
cmp
xchg
jp
lea
ins
retf
rol
lahf
or
lahf
push
cmp
mov
ins
xor
ins
adc
sbb
(bad)
pushf
outs
xchg
jb
jne
add
adc
sti
(bad)
dec
cmp
jl
clc
cmp
pop
mov
inc
push
clc
sub
fdivr
add
or
add
ins
imul
cli
xchg
jno
(bad)
mov
aam
jmp
adc
cld
lods
pusha
outs
shl
pop
repnz
mov
in
fmul
(bad)
fs
mov
add
cdq
cdq
xor
outs
mov
sbb
mov
pop
hlt
std
xchg
mov
in
jo
in
cld
jle
mov
cmp
xchg
dec
cs
sbb
sbb
jbe
bound
xor
jno
outs
repz
ins
icebp
jno
ins
frndint
jle
mov
jno
mov
cwde
mov
in
jns
lods
inc
xor
cmp
pop
cmps
ins
cdq
clc
or
clc
cmp
pushf
mov
icebp
jo
ins
cdq
sbb
cmps
(bad)
fldcw
add
jno
mov
cwde
mov
pop
es
ins
data16
lods
(bad)
add
lahf
mov
xchg
data16
ins
sbb
jbe
bound
sbb
jbe
pop
leave
sbb
ins
cdq
icebp
adc
cdq
jno
xchg
pushf
in
cs
sbb
(bad)
fnstenv
sti
loope
mov
ins
cdq
jno
test
or
add
lahf
mov
cs
sbb
ins
cdq
icebp
adc
sti
out
pop
and
cmp
adc
cmp
add
rol
les
jno
imul
mov
or
jbe
popa
and
and
arpl
sbb
xchg
in
jge
sbb
jno
xchg
cwde
mov
adc
jnp
cwde
jno
xchg
adc
xchg
in
mov
xchg
in
popa
add
gs
mov
cdq
jno
xchg
outs
xchg
jb
ins
cli
mov
sbb
in
ss
jno
xor
mov
stos
cmp
daa
lods
out
jns
mov
xlat
aam
add
ins
outs
xchg
jb
gs
cmp
stos
aaa
sti
ins
outs
xchg
jb
popa
clc
cmp
data16
ins
iret
sbb
test
daa
sti
ins
adc
jnp
cwde
jno
xchg
adc
lds
in
jbe
sub
ds
cwde
push
push
xor
sub
scas
int3
clc
push
cmp
xchg
pusha
jmp
sbb
jb
test
jb
repz
in
cdq
jno
push
popf
sbb
push
cdq
sbb
ins
cdq
mov
sbb
jno
stos
sbb
cmp
popa
clc
cmp
fwait
sbb
push
cdq
daa
adc
into
jno
push
cdq
cld
mov
jl
add
cmp
lods
ins
cdq
daa
adc
pop
xor
adc
add
pop
movs
movs
pop
and
mov
popf
jmp
iret
es
sub
cmp
in
pop
add
pop
sbb
add
jno
ins
repz
ins
repz
ins
cdq
jno
xchg
in
jns
lods
iret
jno
in
repnz
adc
xor
out
mov
jno
fwait
jle
mov
lods
jb
xchg
ins
iret
cdq
test
scas
sbb
adc
fmul
jb
ins
clc
cmp
cdq
xacquire
add
jb
imul
mov
cdq
popf
cmp
add
ins
iret
cdq
mov
sub
std
in
jo
in
movs
aaa
push
mov
in
and
jbe
out
in
inc
add
pop
leave
pop
cmp
adc
in
sbb
add
jno
ins
repz
ins
repz
ins
cdq
jno
xchg
in
jns
imul
repnz
lods
jb
xchg
outs
repz
ins
iret
cdq
sar
cdq
jno
xchg
test
jb
adc
in
repnz
cdq
add
in
sbb
loope
lea
cmp
lods
ins
cdq
sbb
loope
lea
sahf
(bad)
test
daa
sti
ins
iret
cdq
pop
cmp
push
sti
ins
and
ins
cdq
movs
aaa
push
mov
in
repnz
pop
retf
xlat
int3
sub
xor
mov
dec
cdq
jno
stos
fcom
pop
ins
sbb
ins
sbb
ins
adc
or
lods
inc
sbb
ins
cdq
jno
leave
sbb
jnp
mov
push
mov
mov
jle
sub
stc
mov
mov
test
mov
imul
pop
in
in
stc
sbb
clc
and
clc
cmp
hlt
mov
in
in
sti
sbb
mov
outs
adc
add
jno
arpl
xor
arpl
xor
in
fcomp
mov
sbb
outs
adc
jnp
addr16
adc
mov
cs
cmp
mov
sti
ins
xchg
(bad)
scas
mov
xchg
inc
loopne
jno
fwait
jp
mov
and
xor
popf
hlt
fcmovnbe
xchg
or
adc
ins
fcom
dec
sub
cli
scas
fs
(bad)
test
fcmovne
xchg
hlt
ret
pop
jo
mov
xor
arpl
xor
out
jns
fcmovne
jns
mov
inc
xchg
in
movs
jb
adc
xchg
clc
mov
xor
mov
js
fldenv
lods
cmp
sub
stos
fmul
jp
popa
out
ins
cdq
mov
xchg
cwde
cld
xchg
(bad)
jge
jno
lahf
cmp
mov
scas
adc
loope
movs
jbe
(bad)
xchg
mov
ins
cdq
sbb
mov
mov
ins
cdq
sbb
mov
push
inc
das
sbb
ins
adc
in
mov
sahf
movs
adc
in
mov
jp
jb
fcmove
xchg
sub
add
jb
jnp
outs
jo
adc
mov
out
jno
stos
fadd
sti
ins
adc
fcmove
xchg
sub
sti
ins
sbb
ins
and
sahf
xchg
adc
in
mov
fcmovu
jo
lods
cdq
jno
adc
jle
das
cwde
push
cmp
js
fld
in
fmul
cli
in
repnz
mov
sbb
js
xchg
(bad)
in
fmul
loope
cdq
jno
fcmovu
jo
das
cwde
mov
pusha
sbb
mov
xor
outs
xchg
(bad)
mov
ins
cdq
dec
jnp
cdq
jno
push
xchg
xbegin
ins
in
jnp
das
cwde
dec
mov
xor
push
mov
sti
in
fadd
hlt
arpl
cmp
data16
cdq
cdq
call
ins
dec
mov
in
fmul
mov
cdq
sahf
add
aam
or
ins
outs
adc
in
mov
dec
outs
movs
repnz
ins
cdq
add
in
fmul
add
(bad)
sub
scas
stc
loope
cld
or
inc
ins
mov
sti
cld
and
inc
imul
imul
loope
inc
or
imul
jns
cld
or
mov
cld
fabs
imul
loope
cld
or
imul
loope
cld
or
ret
loope
cld
in
stos
imul
loope
ins
pop
xor
cld
and
cs
loope
bound
mov
cld
or
(bad)
jo
loope
cld
test
imul
loope
lods
popf
loope
cld
mov
loope
or
imul
loope
cld
or
pushf
test
add
pop
adc
or
imul
jno
ins
cdq
sub
or
imul
mov
push
fnstenv
out
loope
cld
or
mov
or
imul
jns
cld
or
cld
or
imul
jne
cld
or
cld
or
imul
loope
cld
or
cmp
loope
out
mov
add
cld
or
imul
push
adc
push
xor
mov
mov
(bad)
ins
pop
xor
js
xor
bound
loope
cld
or
inc
ins
mov
sti
cld
repz
cld
or
movs
cld
or
imul
mov
cld
or
(bad)
ds
imul
mov
jb
or
imul
mov
cld
or
retf
loope
cld
leave
loope
cld
or
jb
or
imul
xchg
or
push
or
imul
loope
cld
or
inc
imul
imul
loope
xchg
or
imul
sub
loope
ins
pop
xor
cld
sbb
(bad)
ds
imul
or
cdq
loope
mov
loope
cld
mov
imul
loope
mov
leave
loope
cld
or
jb
or
imul
xchg
or
push
or
imul
loope
cld
or
inc
bound
inc
imul
loope
xchg
or
imul
sub
loope
cld
or
imul
cwde
rcr
clc
push
out
jne
test
into
cli
mov
pusha
and
and
clc
cmp
adc
mov
mov
jns
pushf
leave
cdq
(bad)
nop
data16
xchg
adc
pop
in
icebp
xchg
fmul
test
cdq
jno
sub
add
cdq
jno
imul
add
pusha
pop
sub
outs
mov
adc
cmc
outs
mov
adc
push
mov
sbb
cmp
cmps
adc
sub
dec
sbb
mov
xor
ins
imul
dec
and
xor
mov
and
clc
cmp
xchg
sbb
cdq
jno
sub
adc
das
xor
cmp
xor
ins
imul
dec
cmp
sub
mov
ins
cdq
sbb
loope
xchg
pushf
leave
cdq
dec
ds
jno
test
clc
and
adc
add
ins
jle
sub
repz
mov
js
test
out
sbb
clc
or
clc
cmp
ins
and
pop
and
outs
fwait
cli
cmps
pop
mov
lods
pusha
outs
shl
pop
stc
scas
sbb
mov
jno
push
sbb
add
pop
pop
cwde
cmps
outs
cdq
jno
xor
sti
ins
adc
sbb
add
test
mov
sbb
cmp
dec
stc
ins
cdq
jle
adc
sbb
adc
add
sti
inc
lea
(bad)
mov
and
sbb
stos
into
jle
adc
sbb
inc
mov
sti
in
jb
call
jno
stos
ins
cdq
sbb
push
cdq
clc
and
cmc
sbb
test
cdq
and
adc
jb
gs
cdq
clc
and
lea
or
js
gs
in
xor
outs
pushf
std
sbb
nop
jmp
pop
clc
jg
sti
in
mov
jnp
test
out
lock
sti
pop
mov
adc
out
fmul
mov
mov
jno
sub
and
xor
test
and
ins
adc
arpl
mov
xchg
(bad)
sub
adc
(bad)
or
jno
in
movs
adc
enter
in
hlt
(bad)
cmp
mov
sub
movs
in
sbb
pop
imul
or
je
mov
jno
test
mov
int
xchg
mov
xchg
jno
in
jb
cwde
adc
(bad)
jl
xor
push
cdq
jb
loopne
xor
push
fadd
sbb
pushf
jb
jb
call
cs
inc
jmp
imul
or
in
cs
jb
hlt
jg
sti
push
fadd
clc
push
sbb
(bad)
scas
or
js
rcr
cld
jg
sti
in
dec
inc
aad
jno
fwait
jg
mov
mov
dec
jg
(bad)
fcmove
sahf
sub
jg
sti
out
in
sbb
push
sbb
ins
in
jne
add
hlt
fcmovnu
cdq
stos
in
jb
call
jno
pop
xchg
data16
adc
xchg
ins
repz
outs
repz
ins
icebp
jno
ins
(bad)
mov
cdq
clc
mov
xor
xor
cmp
add
aas
data16
test
sti
ins
data16
test
sti
ins
sbb
test
and
mov
xor
sub
scas
int3
clc
push
cmp
shr
jp
gs
ins
sbb
(bad)
sbb
clc
add
clc
cmp
fdivr
mov
(bad)
ins
repz
sbb
jno
iret
xchg
leave
mov
xchg
adc
xchg
ins
icebp
mov
or
repz
adc
jno
cmp
cli
mov
cdq
xor
into
into
js
gs
jb
mov
jb
sbb
(bad)
arpl
mov
mov
pop
cmp
ins
push
adc
xchg
pop
cdq
jno
fcmovnu
(bad)
xchg
lods
mov
fs
jno
push
fwait
jno
je
(bad)
mov
ins
cdq
jno
jns
leave
mov
test
cmp
ins
xchg
(bad)
mov
ins
cdq
jno
jns
leave
mov
push
cs
add
cdq
cli
out
and
sti
xchg
in
popa
inc
mov
xchg
sbb
into
and
sti
test
cmp
ins
sbb
js
xchg
leave
mov
scas
int3
clc
push
cmp
xchg
push
jb
test
jb
sbb
(bad)
sbb
popf
stos
fmul
hlt
fcmovnu
(bad)
xchg
lods
mov
fs
jno
push
fwait
jno
push
(bad)
mov
xchg
fmul
js
stos
or
sbb
fmul
add
pop
and
mov
and
pusha
daa
inc
cmps
and
clc
or
adc
adc
xlat
jno
out
pop
jns
adc
mov
xchg
cdq
jno
jp
(bad)
mov
inc
in
jns
fcmovnu
(bad)
cmp
xchg
fmul
sti
ins
xchg
(bad)
cmps
xchg
mov
xchg
cmp
(bad)
mov
movs
jbe
sbb
es
cmp
xor
cmp
mov
cdq
repnz
pusha
jb
popf
stos
fmul
hlt
fcmovnu
(bad)
jnp
sahf
sub
mov
inc
dec
pop
daa
cdq
jno
fcmovnb
pop
scas
in
jb
test
jb
xchg
(bad)
mov
imul
add
ins
(bad)
das
mov
mov
into
sub
stos
mov
sti
ins
sbb
(bad)
sbb
inc
adc
mov
jno
sbb
jno
test
lock
fnsave
add
jo
ins
jno
mov
cdq
clc
add
clc
cmp
les
pop
dec
retf
rcl
push
inc
sbb
cmp
jne
sti
ins
cdq
lock
mov
mov
add
clc
cmp
(bad)
ins
repz
pop
xchg
leave
mov
ins
cdq
sbb
push
cwde
sbb
test
sti
ins
cmp
sahf
cwde
cdq
leave
je
cdq
jno
mov
xor
in
pop
cmp
imul
lods
leave
cdq
jns
cdq
jno
scas
(bad)
clc
scas
sahf
repz
jbe
imul
mov
ins
cdq
lock
xchg
jno
push
stos
mov
mov
in
sti
ins
repz
xchg
ins
adc
or
into
mov
cdq
repnz
je
mov
xchg
adc
jbe
imul
mov
ins
cdq
clc
cmp
ins
cdq
repnz
ins
cdq
jno
aad
mov
in
sub
sti
ins
adc
(bad)
pop
fwait
clc
add
clc
cmp
fcomp
cmp
sti
outs
pushf
jns
cs
and
push
cdq
sbb
test
cdq
mov
and
sti
add
cdq
cli
out
and
sti
loope
popa
out
jno
mov
cdq
repnz
fs
lods
test
xor
ins
repz
xchg
ins
adc
or
data16
cdq
repnz
pusha
adc
sbb
pop
cwde
stos
xchg
data16
adc
ins
retf
sar
push
in
sbb
jo
xchg
repnz
cld
jle
mov
cmp
jbe
ins
cdq
repnz
adc
cmp
jb
(bad)
mov
xchg
mov
inc
in
jge
fcmovu
mov
xchg
pop
jnp
data16
jmp
leave
cdq
xchg
and
in
mov
stos
in
xchg
push
cdq
cld
jle
mov
cmp
mov
xchg
data16
cmp
xchg
data16
cs
cld
jle
mov
cmp
fisubr
data16
cmp
xchg
data16
leave
gs
ins
xchg
(bad)
jle
mov
stos
sbb
mov
arpl
hlt
add
pushf
mov
xchg
test
jb
adc
add
data16
cmp
jno
loope
mov
stc
pop
adc
jmp
leave
cdq
adc
cdq
jno
scas
adc
add
cwde
mov
adc
add
mov
fisttp
add
jl
and
test
pop
pop
jb
adc
add
and
add
fldenv
add
xchg
(bad)
or
fwait
xchg
(bad)
cmp
(bad)
sub
scas
int3
clc
push
in
jne
cli
ins
cdq
and
cs
cmp
stos
jno
aam
sbb
jb
popa
pop
adc
ret
inc
in
dec
xchg
ins
adc
pop
xchg
data16
cmp
jns
xchg
data16
pusha
and
sbb
sbb
add
loope
lea
inc
shl
stos
sbb
mov
xchg
lea
sub
cdq
xor
xchg
cld
jle
mov
cmp
xor
cs
cld
jle
mov
cmp
es
cdq
repnz
jo
mov
xchg
adc
add
leave
cdq
cmp
cdq
jno
stos
adc
add
bound
dec
call
mov
aas
jno
mov
add
jno
ins
repz
ins
repz
ins
cdq
jno
loope
lea
mov
pop
clc
add
clc
cmp
mov
dec
adc
sub
sbb
sbb
jo
xchg
mov
test
xor
ins
adc
adc
adc
xchg
ins
iret
cdq
test
add
lahf
mov
xchg
data16
ins
sbb
add
pop
cld
jle
mov
cmp
dec
mov
cmp
int3
pop
xchg
data16
jno
mov
and
jno
xor
sub
scas
int3
clc
push
in
jne
stc
ins
cdq
daa
lods
shr
sub
adc
cli
xchg
adc
ret
inc
in
inc
xchg
ins
adc
pop
xchg
data16
cmp
aad
xchg
data16
pusha
sbb
jbe
pop
leave
cdq
sub
cdq
jno
call
data16
push
repz
jmp
leave
cli
mov
cmp
add
xchg
data16
xchg
data16
ins
adc
pop
xchg
data16
ins
sbb
loopne
cdq
sbb
loope
lea
or
pop
add
add
dec
ja
sti
loope
mov
xchg
and
movs
shl
out
pop
jge
xchg
cwde
mov
adc
add
leave
aaa
sti
ins
repz
loope
mov
xchg
data16
jo
xchg
mov
test
xor
ins
jb
xchg
push
ja
sti
test
jno
add
lahf
mov
xchg
scas
cdq
(bad)
cdq
jno
sbb
sti
ins
(bad)
das
xor
jne
cli
ins
cdq
daa
lods
sar
xor
sbb
mov
adc
setb
jb
repz
jmp
leave
cli
mov
cmp
rol
xchg
data16
add
clc
cmp
in
jge
jmp
leave
sbb
jmp
leave
cdq
frstor
jno
test
cld
jle
mov
cmp
out
ins
cdq
clc
jle
mov
in
repnz
sbb
mov
pop
xchg
data16
ins
sbb
add
lods
cld
jle
mov
cmp
mov
ins
cdq
js
sbb
sbb
sbb
adc
fdiv
push
cdq
and
out
jns
pop
jno
mov
inc
popa
clc
cmp
iret
cld
jle
mov
cmp
sbb
sbb
jno
push
fdiv
push
cdq
and
out
jns
pop
jno
mov
ins
popa
clc
cmp
mov
jno
jns
jno
push
cdq
and
out
jns
pop
jno
mov
inc
into
jno
xor
mov
jp
lea
ins
retf
ror
cs
pushf
adc
xchg
ins
adc
setb
stos
out
jns
lods
test
adc
popa
mov
sbb
add
xchg
in
jge
jmp
leave
sbb
jmp
leave
cdq
std
sub
cld
jle
mov
cmp
push
mov
in
repnz
mov
sbb
mov
setb
test
ins
repz
in
cdq
jno
push
fwait
sbb
push
call
jmp
leave
cdq
jno
cdq
jno
sub
add
ja
sti
test
xor
stos
add
lahf
mov
xchg
stos
cdq
shr
adc
cdq
jno
aam
pusha
sti
ins
outs
xchg
jb
jne
add
adc
sti
test
jno
add
lahf
mov
xchg
stos
cdq
icebp
sub
jno
ins
sbb
push
cdq
cdq
sbb
cdq
jno
scas
repz
ins
sbb
aas
adc
xchg
jmp
jno
in
leave
inc
xor
hlt
pop
xchg
data16
nop
mov
sbb
cld
mov
xchg
in
lea
(bad)
sti
xchg
cli
mov
test
lahf
sub
call
sti
ins
repz
add
pushf
mov
xchg
scas
cdq
jne
cdq
jno
test
xor
ins
data16
test
xchg
cdq
jno
xor
mov
jp
lea
ins
retf
out
jns
or
mov
in
pop
add
pop
inc
add
pop
cli
mov
sbb
test
sub
xchg
sbb
in
ins
cdq
cld
jle
mov
cmp
outs
mov
imul
lds
cwde
cld
jle
mov
cmp
test
adc
outs
mov
sbb
add
xchg
in
jge
jmp
leave
sbb
jmp
leave
cdq
lds
cdq
jno
test
sbb
add
jno
ins
repz
ins
repz
ins
cdq
jno
loope
test
sbb
mov
data16
add
lahf
mov
ins
cdq
sbb
cmp
popa
adc
test
dec
sti
ins
and
in
cdq
xchg
data16
cmp
cmp
jo
cs
cdq
sub
leave
sbb
sbb
add
jno
lds
add
clc
cmp
cdq
icebp
sti
ins
repz
sub
jno
in
sbb
loope
lea
ins
iret
mov
ins
cdq
clc
add
mov
in
xacquire
cdq
mov
push
cdq
clc
add
clc
cmp
pop
mov
ins
cdq
sbb
(bad)
push
cdq
and
xchg
stos
cdq
stc
push
cdq
jno
xchg
outs
xchg
jb
jne
add
adc
sti
ins
data16
test
das
mov
mov
loope
ins
cdq
cdq
inc
push
cdq
jno
cmp
retf
cld
xor
xor
jp
jle
pop
mov
or
into
aam
xor
aad
jno
ins
push
jp
lea
ins
icebp
cdq
push
cs
cdq
jne
cdq
jno
ins
leave
sbb
sbb
mov
test
jo
jmp
leave
cli
mov
cmp
push
push
xchg
data16
pusha
sbb
js
xchg
jno
jno
hlt
adc
pushf
mov
xchg
mov
xor
ins
sbb
mov
hlt
adc
lahf
mov
xchg
mov
xor
ins
sbb
xchg
ins
cdq
xacquire
add
add
pushf
mov
ins
cdq
sbb
cmp
movs
push
cs
cli
xchg
inc
jbe
jmp
cdq
cld
jle
mov
cmp
hlt
adc
dec
sti
ins
adc
push
xchg
mov
xchg
jno
call
sbb
sti
ins
cdq
cld
jle
mov
cmp
hlt
aas
xchg
data16
ins
sbb
jbe
jne
add
leave
jle
jmp
leave
jle
jmp
leave
jle
jmp
leave
jle
shr
pop
pop
xchg
stc
loope
dec
adc
xchg
add
lods
mov
out
jle
retf
mov
arpl
mov
xchg
addr16
out
pop
pop
lods
add
pushf
mov
xchg
mov
xor
ins
sbb
and
pop
cld
jle
pop
cmp
push
mov
cmp
int3
dec
xchg
mov
jns
sbb
jno
jmp
leave
mov
pop
test
dec
sti
ins
nop
mov
call
sbb
jbe
sub
jle
mov
cmp
cmp
ins
cdq
cld
jle
mov
cmp
(bad)
jle
mov
cmp
(bad)
jle
mov
cmp
(bad)
jle
mov
cmp
mov
mov
movs
or
fnstcw
add
adc
cmp
mov
out
popaw
hlt
clc
pop
clc
outs
sbb
pop
and
push
xchg
inc
js
mov
xchg
stc
je
sti
loope
rol
fdiv
out
pop
push
jp
or
ins
adc
dec
xchg
mov
dec
sti
ins
repz
loope
rol
xchg
mov
cdq
cwde
iret
xchg
data16
xor
ret
cdq
clc
and
clc
cmp
fdivr
sbb
cdq
inc
push
cdq
jno
call
sti
ins
repz
add
pushf
mov
xchg
scas
cdq
in
push
cdq
jno
xor
mov
jp
lea
ins
retf
out
jns
xor
js
pop
xor
jle
jle
mov
in
leave
pop
adc
adc
or
repz
jmp
leave
clc
or
pop
ins
stos
test
add
mov
in
mov
jno
ins
sbb
cli
inc
xchg
hlt
jbe
cdq
jno
pop
fwait
jno
jmp
adc
add
or
mov
adc
jo
ins
sbb
jb
sbb
lds
cmp
adc
sub
xchg
mov
mov
xchg
adc
cmp
xchg
data16
ins
adc
jbe
arpl
add
xchg
cwde
imul
sti
ins
dec
mov
fldcw
jno
in
mov
or
ins
in
pop
jb
fldenv
xchg
movs
push
mov
or
pop
jge
mov
jno
fwait
jle
jle
mov
in
call
test
xchg
movs
push
mov
pop
fnstenv
out
pop
jge
stos
inc
cmp
ins
jb
test
sbb
add
jecxz
xor
loope
mov
jge
jno
out
pop
popa
jb
test
jb
adc
add
in
sti
ins
sbb
sti
in
repnz
cld
jle
mov
cmp
dec
or
adc
retf
call
push
mov
in
repnz
js
daa
lods
out
jns
xor
loope
in
jo
in
sbb
push
cwde
sbb
test
dec
sti
ins
adc
(bad)
in
pop
cmps
std
ins
cdq
sbb
push
cdq
cld
mov
push
cdq
jno
test
pop
cmp
imul
in
jle
sub
jno
in
pop
jb
imul
out
pop
jge
test
sti
ins
adc
push
mov
mov
push
cdq
repnz
xchg
jno
pusha
data16
cmp
add
sbb
ins
in
jge
sbb
mov
pop
jns
stos
psubq
or
outs
in
push
add
mov
adc
jns
jne
popa
adc
push
cdq
jno
ins
leave
sbb
sbb
add
jno
ret
ins
cdq
mov
ins
cdq
clc
add
adc
cmp
adc
ins
retf
out
jns
pop
jmp
ins
cdq
clc
add
clc
cmp
clc
inc
sti
ins
outs
xchg
jb
ins
mov
adc
sti
test
dec
sti
ins
repz
add
pushf
mov
sub
sbb
push
cdq
lea
leave
mov
test
mov
xchg
mov
jb
nop
xchg
sbb
mov
mov
adc
pop
xchg
data16
test
jb
mov
adc
or
repz
jmp
leave
cld
jle
bound
(bad)
ins
cdq
sbb
add
pushf
mov
nop
data16
xchg
sbb
sti
ins
in
outs
xchg
ins
icebp
or
cs
cld
jle
mov
jno
jb
data16
pusha
pop
cmc
(bad)
ins
mov
sbb
xchg
ins
icebp
pop
push
cs
cld
jle
mov
jno
jae
data16
pusha
movs
mov
cdq
add
lea
cdq
lea
leave
cdq
and
test
mov
imul
mov
int3
and
outs
cdq
jno
aaa
movs
xor
fwait
jno
adc
jl
call
xchg
std
je
cdq
jno
and
xor
jmp
test
jno
cmp
and
ins
cdq
push
jmp
fnsave
sub
jno
push
popf
jno
push
retf
sub
jno
ds
jno
push
leave
ds
inc
movs
and
int
jno
adc
and
call
jo
jmp
stos
sub
popf
jb
ins
jo
jmp
mov
retf
call
out
(bad)
fsub
scas
arpl
cwde
add
cdq
jno
aas
shl
arpl
cwde
adc
cdq
jno
imul
cld
jle
mov
jno
jl
data16
pusha
movs
mov
cdq
add
pop
cdq
lea
retf
cdq
sub
data16
xchg
dec
add
cdq
jno
and
pop
xchg
data16
xchg
and
sbb
mov
or
sti
ins
adc
pop
xchg
data16
pusha
leave
cdq
jge
cdq
jno
test
sbb
jns
jno
push
cdq
and
xchg
stos
cdq
cmc
pop
cdq
jno
adc
lahf
mov
ins
cdq
sbb
cmp
popa
adc
test
sti
ins
adc
adc
call
arpl
icebp
inc
imul
jnp
lahf
lea
cmc
add
loope
jno
xchg
and
fldenv
xchg
add
(bad)
jno
stos
sbb
add
cdq
call
data16
cmp
pop
jne
clc
mov
xchg
data16
outs
imul
mov
jge
add
mov
mov
nop
mov
sbb
and
lahf
bound
adc
hlt
sti
nop
data16
pushf
and
xchg
data16
xchg
clc
add
clc
cmp
das
jae
ins
sbb
imul
jbe
cdq
lea
sbb
test
das
mov
sbb
out
cdq
cwde
imul
jnp
xchg
jno
jns
hlt
sti
nop
data16
pushf
and
xchg
data16
xchg
clc
add
clc
cmp
repz
ins
adc
sti
nop
data16
popf
and
xchg
sbb
mov
jo
sbb
jmp
leave
cdq
fst
jno
test
lock
mov
lea
xchg
and
lds
and
mov
retf
mov
test
inc
sti
ins
jo
stc
ins
cdq
sbb
sbb
adc
mov
and
xchg
stos
cdq
jns
cdq
jno
lahf
cwde
jno
in
and
pop
xchg
data16
dec
adc
sti
nop
data16
pushf
and
xchg
sbb
sti
ins
outs
xchg
jb
jno
add
adc
sti
add
lahf
mov
ins
cdq
sbb
cmp
popa
adc
test
aam
ins
cdq
icebp
inc
push
in
outs
jbe
cdq
lea
sbb
jns
data16
xchg
lock
(bad)
jno
test
jo
ins
icebp
dec
adc
pop
cdq
jno
ins
leave
sbb
sbb
add
jno
enter
fwait
ins
cdq
jno
xchg
mov
jb
icebp
aas
push
cs
cdq
sub
jno
ins
leave
sbb
pop
jno
enter
adc
xchg
jno
test
xor
cs
cdq
push
pop
cdq
jno
ins
leave
sbb
pop
jno
enter
adc
retf
test
popa
adc
pop
cdq
jno
ins
leave
sbb
sbb
add
jno
enter
movlps
hlt
adc
jo
sti
ins
cdq
clc
and
pop
ins
stos
add
lahf
mov
xchg
data16
ins
sbb
sti
ins
outs
xchg
jb
jge
add
adc
add
leave
cdq
leave
pop
cdq
jno
ins
leave
cld
outs
nop
arpl
adc
jno
test
jno
ins
icebp
pop
push
cs
cdq
jmp
ins
leave
sbb
sbb
jp
ins
cdq
lock
cmps
jno
xchg
cld
jle
mov
pop
jne
aas
jno
adc
data16
sbb
adc
sbb
std
nop
data16
sbb
jno
push
cdq
and
xchg
stos
cdq
cmp
jne
arpl
cs
cdq
dec
pop
cdq
jno
ins
leave
sbb
sbb
fcmove
ins
cdq
lock
sti
jno
xchg
jno
std
scas
jno
push
cdq
and
xchg
stos
cdq
jno
cdq
jno
xchg
test
jb
jo
add
push
mov
in
and
jmp
sti
ins
outs
xchg
jb
gs
cmp
in
jns
ins
repz
add
pop
clc
add
adc
retf
imul
cdq
jno
scas
iret
cdq
lods
pop
cdq
jno
mov
ja
xchg
cwde
mov
(bad)
das
mov
mov
popf
fwait
outs
cdq
jno
cmp
into
mov
imul
ins
sti
ins
adc
in
inc
add
pop
pop
cmp
dec
pop
cdq
jno
xchg
outs
xchg
jb
cmp
stos
xchg
jne
ins
icebp
xchg
cs
cdq
push
pop
cdq
jno
jmp
icebp
scas
pop
cs
and
xchg
stos
jno
in
lock
cld
jno
add
popf
mov
xchg
data16
mov
mov
cmp
pop
pop
jno
enter
jle
mov
gs
add
pop
pop
cwde
aas
ins
cdq
jno
fwait
sbb
sti
ins
repz
outs
data16
add
pop
hlt
and
cdq
jno
ret
sti
xchg
in
jns
add
inc
add
pop
inc
and
nop
stos
(bad)
jne
hlt
and
sub
add
mov
pop
add
xchg
cld
jle
mov
cmp
les
xchg
data16
push
pop
nop
mov
push
adc
retf
mov
mov
loope
lea
fnstcw
add
xchg
(bad)
jle
mov
cmp
sbb
jno
test
inc
sti
ins
sbb
add
pop
call
cwd
std
pop
cdq
jno
xchg
test
jb
les
xchg
data16
cdq
stos
jno
arpl
hlt
sub
xor
mov
inc
pusha
sbb
test
inc
sti
ins
retf
out
jns
push
mov
in
in
inc
or
pop
inc
and
outs
not
cdq
sbb
test
inc
sti
ins
shl
(bad)
sti
out
cmps
jno
call
adc
pop
cmp
push
inc
mov
sbb
outs
cwde
jno
sbb
pop
sti
ins
jo
sti
ins
cdq
clc
or
clc
cmp
nop
leave
sbb
push
cdq
sbb
xchg
out
jge
or
jle
repnz
jno
out
in
sti
sbb
lea
push
cdq
mov
cdq
clc
or
clc
cmp
arpl
inc
and
repz
sub
xchg
ins
fnstenv
loope
lea
in
jp
sub
mov
nop
cli
mov
adc
add
popa
push
add
jno
enter
or
out
add
pop
cld
jle
mov
adc
pop
adc
stos
test
sti
ins
repz
sbb
jle
mov
inc
adc
mov
sti
in
jo
in
inc
and
in
jle
pop
jno
aam
cdq
call
cdq
cwde
adc
ret
push
sbb
jo
xchg
cli
cmps
jl
push
leave
mov
popa
clc
cmp
jno
enter
and
pushf
inc
cmp
dec
jno
xchg
mov
xchg
adc
add
xchg
daa
adc
jno
out
pop
jns
mov
pop
clc
scas
nop
adc
in
outs
inc
repz
jno
fwait
jle
mov
sub
movs
aaa
push
mov
in
lock
pusha
popf
jno
aas
iret
es
xchg
into
loop
and
jb
mov
jb
sbb
lods
test
sti
ins
sar
or
ins
iret
cdq
stc
imul
xchg
dec
cdq
jno
jmp
leave
sbb
cmp
push
imul
sti
push
cdq
cdq
xor
jno
test
sti
ins
adc
xchg
ins
icebp
jno
ins
cdq
cld
jle
mov
inc
adc
mov
sti
in
lea
xchg
repnz
in
dec
add
jno
aad
cdq
sbb
loope
lea
xchg
and
cs
mov
ins
cdq
leave
(bad)
pop
cdq
jno
mov
hlt
add
iret
cdq
sub
cwde
bound
jno
jmp
pop
cmc
(bad)
ins
mov
adc
add
icebp
loope
cs
cld
jle
mov
jno
iret
ins
cdq
repnz
fs
mov
pop
icebp
jno
ins
cdq
sbb
ins
adc
add
sar
ins
popa
clc
cmp
jno
retf
sbb
cmp
mov
test
sti
ins
jo
cli
ins
cdq
clc
add
clc
cmp
lahf
sbb
(bad)
jmp
leave
cdq
test
data16
xchg
js
arpl
sti
ins
cdq
cld
outs
ins
mov
jno
retf
repnz
push
ins
cdq
jno
leave
mov
cdq
clc
add
clc
cmp
sbb
add
jne
sti
loope
jno
xchg
repnz
cdq
add
test
repnz
nop
bound
xchg
sbb
sti
test
inc
sti
ins
repz
add
popf
mov
or
movs
ins
cdq
cwde
pop
ins
cdq
jno
adc
sti
ins
les
xchg
data16
mov
nop
mov
bound
movs
sbb
jb
ins
mov
jb
jbe
retf
popf
mov
xchg
data16
ins
mov
les
xchg
data16
loope
jno
xchg
and
add
pop
popa
jbe
cdq
lea
leave
cdq
or
ins
leave
cld
outs
ins
mov
inc
adc
test
add
clc
cmp
sbb
pop
xchg
and
mov
cdq
cld
outs
nop
bound
outs
ins
mov
popw
repz
xchg
push
cdq
jno
imul
xor
sub
scas
popf
jno
in
repnz
push
retf
sar
xor
dec
and
sbb
fcom
jb
icebp
mov
sti
add
idiv
ins
cdq
repnz
pusha
and
lods
ins
cdq
xchg
repz
ins
repz
sbb
pop
repnz
pushf
cdq
clc
add
clc
cmp
cs
cmp
jbe
ins
cdq
clc
cmp
adc
outs
cdq
sbb
loope
popf
stos
aas
jno
shr
cmp
(bad)
and
fnstenv
xchg
test
adc
cdq
jno
push
pushf
and
popf
mov
sti
in
jo
in
mov
nop
mov
ins
adc
daa
in
cld
mov
or
adc
pop
repnz
nop
cdq
leave
out
ins
cdq
jno
or
mov
jl
xor
ins
in
js
sub
xchg
in
icebp
sbb
jno
xchg
clc
add
adc
sti
fwait
cld
lea
dec
clc
iret
imul
xor
in
cld
mov
aam
jno
ins
outs
adc
in
mov
jge
cdq
and
push
cdq
sbb
test
cdq
imul
xchg
jb
push
clc
cmp
enter
(bad)
das
mov
cmp
xchg
stos
cmp
into
scas
outs
dec
pop
jp
rcr
ins
adc
pop
cmp
jno
sbb
jno
ins
repz
sub
jno
(bad)
ins
cdq
leave
inc
pop
cdq
jno
mov
xor
in
xor
jne
test
into
cli
mov
out
in
lock
fidiv
in
pop
add
pop
lock
int3
jno
stos
fadd
imul
cmp
and
ins
cdq
repnz
fcomp
shr
imul
lea
jno
xchg
mov
jb
repz
sub
and
sbb
push
cmp
sub
ins
cdq
sbb
loope
shr
imul
mov
sub
jno
sub
jno
out
pop
jge
stos
mov
xor
sub
fnstenv
popa
cli
mov
in
xchg
adc
in
test
jno
cli
ins
cdq
pop
cmp
jne
sti
loope
in
loope
int
push
cdq
sbb
push
mov
sbb
out
movs
xor
adc
mov
(bad)
push
ins
lds
cdq
cdq
sbb
lods
in
ja
sub
sahf
test
cdq
jno
sbb
cdq
int
cdq
jno
sbb
cdq
aad
cdq
jno
sub
sti
ins
data16
test
add
test
ud0
retf
js
sub
mov
scas
int3
clc
push
cmp
xchg
into
push
xor
mov
jb
popw
repz
sti
ins
popw
test
pop
sti
ins
sbb
xchg
ins
popw
inc
pop
inc
gs
ins
iret
cdq
inc
inc
cdq
jno
test
clc
add
adc
scas
in
es
dec
cmps
mov
in
jo
in
mov
ins
cdq
sbb
cmp
add
xchg
in
popa
add
xchg
mov
ins
cdq
repnz
je
sub
cmp
xchg
lods
rcl
cmp
adc
xchg
push
lea
add
mov
repz
mov
xor
mov
in
repnz
pusha
into
into
dec
add
jb
mov
jb
sbb
jbe
popa
and
and
outs
cdq
sbb
push
cdq
sbb
xchg
in
jge
sbb
jno
lods
in
jne
lods
jb
add
or
mov
pop
test
pop
sti
ins
nop
mov
pusha
data16
test
mov
jnp
out
ins
cdq
xchg
data16
test
mov
xor
scas
in
repnz
js
es
(bad)
cli
mov
je
(bad)
lock
mov
inc
add
pop
mov
ins
adc
or
pop
cld
mov
ins
fwait
jno
ins
data16
xchg
in
jns
lea
call
call
repz
ins
data16
xchg
in
lea
mov
pop
add
adc
mov
sti
pop
pop
call
mov
sti
in
xchg
xchg
(bad)
mov
scas
int3
clc
push
cmp
add
sbb
js
jno
mov
test
pop
sti
ins
leave
cdq
cmp
jno
sub
add
clc
cmp
jno
mov
sbb
jp
mov
sti
ins
repz
stos
cdq
jno
push
cdq
sbb
push
cdq
sbb
sbb
adc
mov
sti
iret
jno
mov
xchg
adc
retf
ins
add
jno
mov
ins
cdq
clc
mov
ins
cdq
xchg
adc
xor
mov
jmp
jno
sub
popf
mov
scas
int3
clc
push
aas
iret
es
xchg
iret
mov
pushf
mov
jb
adc
xchg
icebp
(bad)
push
xchg
add
in
pop
or
pop
cli
mov
scas
retf
clc
and
and
mov
js
xchg
lock
in
pop
mov
stos
popf
jae
in
pop
dec
cmps
ins
cdq
clc
add
pop
jae
push
fdivp
(bad)
push
cdq
add
out
in
sti
sbb
add
in
cmp
call
stos
cdq
jno
call
imul
inc
jb
call
ins
cdq
clc
cmp
outs
mov
sbb
jge
xchg
in
popa
adc
fdivr
xchg
jb
jb
mov
jb
test
movs
xor
sub
cmp
xchg
js
mov
sub
stos
fadd
inc
jp
jno
fwait
cld
xor
retf
inc
cdq
jno
sub
mov
in
xchg
or
jno
mov
out
mov
mov
mov
cmp
xor
sub
test
call
js
call
jle
push
adc
sub
lock
mov
xchg
cdq
jno
and
mov
adc
sti
cmc
outs
mov
sbb
inc
jbe
jno
(bad)
(bad)
popf
aas
and
cmp
adc
jo
ins
es
inc
jne
sti
cmp
xlat
ins
cdq
repnz
js
mov
xchg
mov
cli
mov
movs
pop
and
mov
dec
sti
outs
cdq
cdq
dec
dec
cdq
jno
cmp
iret
enter
jb
cwde
xor
addr16
out
cmp
add
data16
pushf
outs
xchg
jb
jns
push
xchg
adc
add
pusha
jno
sub
adc
retf
cmps
clc
ins
cdq
repnz
nop
pop
in
jl
test
pop
sti
ins
test
adc
in
adc
mov
sti
in
lods
add
leavew
loop
cdq
jno
leave
mov
xchg
mov
inc
mov
xchg
repnz
daa
xchg
fs
out
test
inc
push
cdq
jne
ins
into
sbb
ins
adc
add
xchg
jno
fwait
jg
jle
data16
icebp
jne
ins
cdq
cdq
test
stos
inc
or
ins
adc
in
mov
cmp
push
mov
sbb
cmp
xchg
cli
outs
mov
arpl
adc
mov
pop
jns
dec
jne
sti
xchg
in
jns
and
jns
sbb
mov
cs
sbb
fldenv
add
ins
cdq
repnz
js
loope
cs
mov
xchg
mov
call
cdq
jno
test
xacquire
jg
cwde
jno
stos
sbb
add
data16
ins
cdq
cwde
sbb
jp
ror
sti
ins
pop
hlt
sti
ins
mov
out
cmp
add
data16
sbb
hlt
aaa
xchg
fs
jmp
mov
mov
aaa
cdq
jno
rcl
push
xchg
call
fisub
imul
cdq
call
call
jno
(bad)
(bad)
popf
aas
and
cmp
data16
into
cld
inc
ins
cdq
mov
icebp
pop
pop
cs
cld
inc
ins
cdq
mov
jno
shr
aas
js
hlt
xor
push
mov
xchg
sbb
ins
xchg
repz
data16
loope
jno
xchg
and
popa
mov
xchg
jno
test
mov
aam
je
ins
outs
xchg
jb
pop
mov
xchg
adc
push
xchg
sbb
ins
data16
setae
jo
mov
xchg
fs
out
xchg
mov
adc
pop
xchg
mov
push
cwde
jno
out
ins
jb
mov
inc
cdq
jno
outs
cwde
jno
in
and
sti
xchg
data16
call
sbb
jo
test
cdq
jno
jmp
xchg
repnz
ins
cdq
jno
jmp
adc
pop
xchg
mov
xor
jnp
cwde
add
ins
in
pop
add
lea
mov
jmp
leave
cdq
popf
inc
cdq
jno
test
lock
loope
add
fyl2x
(bad)
ins
cdq
add
in
pop
jb
jae
push
xchg
adc
sti
ins
data16
xchg
mov
pushf
add
mov
lods
hlt
ins
cdq
cld
jle
data16
jno
pop
xchg
data16
push
mov
jg
hlt
sti
ins
data16
xchg
sar
pushf
pop
sub
add
data16
xchg
mov
popa
mov
xchg
jno
test
sti
ins
sbb
or
pop
mov
pop
rcl
hlt
setae
jbe
cdq
jno
xchg
leave
mov
pop
jno
add
adc
pop
xchg
addr16
lods
xchg
hlt
and
jae
sti
xchg
sub
add
cwd
push
inc
cdq
jno
test
clc
or
clc
cmp
push
fwait
sbb
push
cdq
sbb
ins
cdq
xor
xchg
cdq
ror
jb
jge
push
xchg
les
xchg
mov
cdq
mov
cld
inc
cwde
pop
leave
mov
pop
sub
add
cwd
xor
pushf
mov
jb
les
xchg
mov
cdq
mov
mov
cwd
dec
dec
cdq
jno
pushf
cwde
xor
cdq
jno
jmp
jb
jp
les
sti
ins
(bad)
das
mov
mov
popf
rep
cdq
jno
rol
in
adc
cmp
sub
mov
adc
add
xchg
(bad)
mov
xchg
jno
jmp
leave
cdq
cmp
ins
icebp
clc
adc
cdq
cld
jle
mov
cmp
jo
ins
sbb
js
test
or
div
in
fmul
(bad)
imul
dec
adc
cdq
sbb
ins
cdq
jno
test
add
icebp
xor
es
jno
xor
add
jno
in
jno
or
data16
dec
sbb
movs
movs
pop
and
mov
popf
outs
cdq
jno
cmp
into
cmp
cmp
jb
mov
jb
sbb
addr16
mov
in
inc
add
pop
cli
mov
arpl
clc
jle
mov
fdivr
push
cdq
clc
jle
mov
shl
sti
ins
outs
xchg
jb
in
add
adc
repz
repnz
dec
cdq
jno
cmp
xor
cmp
mov
hlt
adc
cdq
lea
jno
jmp
les
data16
or
jns
loope
mov
adc
icebp
imul
add
jno
fild
jle
mov
sub
push
xchg
cwd
int
cdq
jno
jmp
les
data16
dec
mov
jns
loope
mov
adc
icebp
imul
mov
xchg
jo
cmp
stc
push
xchg
data16
test
add
xchg
mov
ins
cdq
clc
jle
mov
pop
sbb
push
cdq
cld
jle
mov
jno
(bad)
aad
cdq
jno
test
jne
ins
cdq
cld
jle
mov
icebp
(bad)
adc
cdq
sbb
(bad)
outs
cdq
jno
test
mov
gs
add
cmp
fldcw
cmp
adc
adc
popf
jo
ins
adc
pop
xchg
data16
xchg
and
movs
mov
in
xchg
data16
mov
sub
push
xchg
data16
mov
sub
push
xchg
data16
mov
adc
dec
xchg
data16
xchg
sbb
push
xchg
data16
sbb
jno
in
inc
add
pop
inc
cmp
icebp
(bad)
adc
cdq
cld
jle
mov
cmp
jmp
popa
clc
cmp
sbb
push
xchg
and
pop
leave
cdq
jns
cdq
jno
mov
add
sbb
push
xchg
data16
mov
push
fstp
sti
loope
leave
add
popa
mov
ins
jp
ja
sti
ins
pop
hlt
inc
xchg
data16
jmp
cwde
jno
ins
push
add
cdq
lock
mov
out
and
push
xchg
data16
jo
mov
test
add
cdq
clc
add
clc
cmp
sbb
add
outs
mov
data16
xchg
and
dec
repz
ins
repz
jmp
leave
sbb
test
mov
call
les
data16
adc
mov
xchg
jb
std
mov
adc
add
icebp
mov
cs
sbb
(bad)
jmp
leave
cdq
jge
cdq
jno
test
mov
pop
mov
jb
jp
lds
ins
adc
pop
xchg
data16
ins
jno
fldcw
cmp
add
add
jb
ins
jno
fisubr
jle
mov
mov
imul
adc
test
push
sti
ins
sbb
js
or
add
cmp
ins
cdq
sbb
ins
cdq
jno
jmp
leave
and
mov
cwde
sbb
jmp
leave
cdq
icebp
add
js
xchg
dec
add
cdq
jno
inc
sbb
addr16
mov
in
jo
in
call
data16
xchg
cwde
mov
jb
js
add
lock
icebp
jno
loope
lds
xchg
and
sbb
xor
ins
cdq
clc
add
clc
cmp
cdq
mov
mov
push
push
sti
ins
les
data16
xor
sbb
push
xchg
call
add
pop
movs
aaa
push
mov
ins
int3
clc
push
out
jne
test
into
cli
cmps
js
arpl
mov
jle
mov
xchg
adc
or
jb
(bad)
clc
scas
xchg
data16
test
sti
ins
adc
add
mov
jb
(bad)
clc
scas
call
pop
in
and
lods
mov
pop
jb
ins
jle
sub
dec
cmp
sub
and
ins
dec
jle
cmp
mov
ins
jno
in
cdq
clc
cmp
jo
jle
lods
adc
in
lock
mov
sti
push
popf
cld
mov
sub
cdq
gs
cdq
jno
test
mov
lods
pushf
and
sbb
add
pop
mov
xchg
adc
std
imul
jno
xchg
in
popa
hlt
fcmovnu
(bad)
jbe
lahf
je
fcmovne
lea
mov
test
ins
sti
ins
retf
sub
mov
cmp
sub
and
loope
popa
clc
cmp
push
out
cdq
cld
mov
cmp
pop
pop
sub
sbb
push
cdq
cdq
loope
cdq
jno
stos
adc
xchg
xchg
iret
cdq
cmp
jno
sub
lods
test
sti
ins
iret
cdq
cmc
jb
jno
xchg
cwde
mov
adc
xor
sub
scas
int3
clc
push
aam
outs
sti
ins
jno
out
cdq
and
shr
push
xchg
adc
cmp
and
outs
sti
ins
adc
inc
mov
jb
adc
inc
mov
stos
loope
mov
xchg
and
test
sti
ins
adc
imul
jb
retf
test
mov
cmc
push
sti
ins
sbb
loop
sub
sbb
jno
out
cdq
inc
cmp
pop
jp
xchg
adc
ins
pop
hlt
inc
mov
mov
fwait
and
ins
adc
inc
mov
stos
loope
mov
xchg
and
ins
nop
mov
inc
retf
test
mov
adc
gs
add
xchg
sub
sbb
jno
out
cdq
clc
add
clc
cmp
pop
xor
pusha
jb
retf
ja
add
sti
ins
(bad)
das
mov
mov
jge
ins
cdq
cdq
cmp
cmp
cli
mov
lods
test
popa
clc
cmp
popa
clc
cmp
icebp
jne
ins
cdq
cdq
std
jno
jno
pop
xor
jle
jle
inc
mov
push
mov
sbb
cmp
xchg
clc
or
and
mov
pop
jns
dec
jne
sti
cmp
fisubr
aas
fs
xchg
in
popa
xchg
test
xor
add
cdq
mov
mov
stos
test
sti
ins
sbb
add
pop
sbb
push
cdq
sbb
push
cdq
sbb
add
jno
sub
cdq
lea
jno
scas
sbb
jbe
cdq
xchg
add
leave
cdq
aad
cdq
jno
ins
adc
pop
mov
mov
mov
lods
aas
jno
in
cdq
and
push
test
in
jbe
stos
ins
cdq
leave
cli
ins
cdq
jno
jle
mov
adc
btr
jo
ins
scas
add
adc
cmp
adc
ins
retf
shr
xchg
cdq
jno
leave
add
clc
add
clc
cmp
outs
cli
cmps
sbb
test
and
adc
loope
jae
in
in
xchg
data16
add
clc
cmp
gs
ins
leave
cdq
icebp
dec
cdq
jno
call
sti
ins
outs
xchg
jb
sbb
mov
cmp
test
hlt
pop
xchg
data16
cwde
mov
repz
xchg
ins
adc
pop
xchg
data16
ins
icebp
jne
ins
cdq
cld
jle
mov
icebp
(bad)
adc
cdq
sbb
(bad)
outs
cdq
jno
test
add
pop
jle
lods
fwait
jno
add
jo
ins
adc
pop
xchg
data16
xchg
and
sbb
popa
pop
add
pop
mov
mov
adc
dec
xchg
data16
xchg
sbb
jg
fwait
jno
add
cwde
mov
xchg
data16
ins
sbb
jbe
sub
cld
jle
mov
cmp
es
cdq
cdq
inc
pushf
data16
add
add
jno
jmp
leave
cdq
sbb
jno
test
clc
add
clc
cmp
sbb
add
ins
cdq
mov
mov
add
cdq
jno
out
and
push
xchg
data16
dec
push
add
cdq
leave
les
jno
mov
hlt
jnp
data16
adc
inc
xchg
data16
xchg
sar
enter
cmp
hlt
inc
xchg
data16
push
mov
sbb
loope
lea
ins
jno
loopne
cdq
js
arpl
mov
mov
int
sti
ins
adc
add
cmp
cs
sbb
(bad)
jmp
leave
cdq
xchg
jb
jno
test
mov
out
bound
jp
ss
ins
adc
pop
xchg
data16
ins
jno
out
cdq
clc
cmp
add
jb
ins
jno
loopne
cdq
icebp
jle
bound
js
mov
imul
cmc
hlt
ins
cdq
jno
ins
imul
ins
icebp
jne
ins
cdq
cld
jle
mov
iret
cdq
xor
stos
ret
ins
repz
sbb
sbb
pop
xchg
and
xchg
icebp
mov
pop
jge
xchg
data16
arpl
cld
jle
bound
ins
xchg
data16
xchg
js
arpl
sbb
xchg
sub
push
xchg
data16
jle
bound
loop
cdq
cld
jle
mov
les
data16
adc
add
pop
clc
add
clc
cmp
sub
push
xchg
cwd
mov
cdq
jno
mov
test
ins
leave
sbb
test
jno
test
ins
sti
ins
sbb
rol
cdq
mov
ins
cdq
cli
data16
jb
test
pop
jo
aas
les
data16
fstp
add
pop
jge
jae
hlt
addr16
data16
stos
and
xchg
cwd
ins
scas
data16
xchg
clc
add
clc
cmp
jno
loop
cdq
clc
add
clc
cmp
sbb
push
xchg
data16
ins
cdq
cld
jle
mov
jno
loope
cdq
clc
add
clc
cmp
cdq
mov
mov
mov
mov
xchg
adc
add
jno
jecxz
cdq
cli
jle
mov
(bad)
sub
scas
popf
jno
in
repnz
js
daa
lods
out
jns
rcl
inc
add
pop
xchg
retf
jbe
jno
sub
mov
dec
loope
cdq
cli
scas
cwde
adc
stc
jl
sbb
ins
adc
in
ins
cdq
and
dec
xor
in
jge
cmp
data16
ins
adc
test
jmp
xor
cmp
jno
add
(bad)
mov
ins
jno
loope
cdq
clc
cmp
aad
jno
aam
push
sti
ins
outs
xchg
jb
imul
stos
cmp
in
ins
cdq
daa
adc
fmul
iret
ins
cdq
xchg
(bad)
das
mov
mov
and
jg
xor
out
sti
ins
adc
out
popa
jo
inc
sbb
add
add
mov
xchg
in
jns
movs
xor
popa
xchg
jb
xchg
ins
jno
loope
cdq
call
data16
ins
movs
jno
ins
sbb
rol
cdq
mov
ins
cdq
sbb
(bad)
test
data16
ins
adc
in
pop
add
pop
cdq
adc
ins
leave
mov
cs
sbb
(bad)
retf
in
mov
pop
jns
jae
add
xchg
in
popa
add
xchg
mov
ins
cdq
call
outs
xchg
jb
popa
clc
cmp
(bad)
sub
scas
mov
in
and
fs
or
jno
in
lock
xchg
jno
cmp
jecxz
cdq
cld
scas
push
clc
scas
nop
retf
aaa
mov
out
pop
jns
lods
in
fs
ins
retf
je
jno
ins
jno
out
ins
cdq
lock
mov
sub
scas
popf
jno
in
repnz
dec
into
into
fld
arpl
jp
mov
sti
ins
adc
iret
jge
mov
ins
cdq
call
stc
push
mov
cdq
xchg
adc
pop
cmp
es
cdq
sbb
push
cdq
sbb
loope
xchg
stos
test
mov
mov
pop
loop
ins
cdq
xor
jl
xchg
ja
jno
inc
mov
aas
iret
es
cmp
ficom
in
lock
in
pop
sub
sahf
cli
jno
aam
jae
ins
outs
xchg
jb
cmp
js
or
mov
sti
xchg
pushf
in
cs
lock
test
addr16
ins
leave
cdq
lods
jbe
jno
neg
add
and
hlt
pop
fwait
data16
test
push
repz
and
or
data16
imul
sti
test
icebp
jo
cdq
cld
jle
outs
mov
jno
out
ins
cdq
leave
mov
cdq
jno
mov
hlt
addr16
data16
adc
or
xor
cwde
jno
xchg
adc
jg
imul
push
test
jno
cld
adc
sti
loope
or
push
xor
test
xchg
sbb
(bad)
data16
shl
xchg
jnp
jno
div
sti
add
ret
mov
cs
cld
jle
popa
mov
jno
loop
cdq
clc
or
clc
cmp
nop
popa
mov
jno
inc
xchg
data16
je
hlt
or
cmc
stc
push
sbb
adc
and
pop
xchg
data16
call
sbb
pop
nop
mov
arpl
sti
ins
cdq
sbb
add
cmp
data16
xchg
sbb
jb
add
neg
jno
fistp
setae
add
cdq
jno
call
xchg
(bad)
jle
ins
mov
sbb
mov
loope
loope
sub
fyl2x
(bad)
ins
cdq
add
in
repnz
into
sbb
add
cld
mov
nop
data16
sbb
hlt
call
dec
add
cs
popa
cwde
data16
pushf
lea
xchg
and
add
test
stos
jns
sti
ins
adc
pusha
mov
stos
loope
jno
xchg
and
push
mov
xchg
icebp
inc
nop
mov
xchg
hlt
mov
shl
add
mov
jno
stos
sbb
pop
xchg
data16
adc
adc
add
cdq
mov
nop
data16
ins
sbb
add
jno
jecxz
cdq
retf
cmp
adc
in
xchg
lods
arpl
xchg
xchg
in
sub
fimul
xchg
popa
mov
push
psubw
cmp
out
movs
xor
icebp
jno
ins
cdq
cld
jle
popa
mov
jno
call
inc
cdq
jno
mov
hlt
arpl
adc
pop
xchg
data16
ins
adc
pop
xchg
data16
ins
icebp
lock
cdq
cld
jle
popa
mov
jno
in
ins
cdq
repnz
js
xor
loope
lea
xchg
and
mov
imul
nop
popa
mov
icebp
add
cs
cld
jle
mov
cmp
cli
in
ins
cdq
sbb
jmp
leave
cdq
gs
jno
test
cld
jle
mov
cmp
pop
out
ins
cdq
leave
jl
cdq
jno
mov
hlt
arpl
adc
pop
nop
data16
popf
and
mov
leave
sbb
jmp
leave
cdq
sar
js
mov
sti
loope
lea
xchg
and
ror
loop
cdq
sbb
add
cdq
mov
nop
data16
xchg
sbb
jle
cwde
jno
loope
lea
xchg
repnz
cdq
pop
jp
jno
in
mov
xchg
repnz
div
imul
xor
xchg
pushf
in
cs
mov
popa
mov
jns
mov
cs
cld
jle
popa
mov
jno
in
ins
cdq
repnz
jl
xchg
dec
cdq
jno
pushf
sub
sti
loope
lea
and
sbb
add
inc
lea
in
jmp
fucom
sbb
setae
inc
imul
jmp
sbb
setae
jg
pop
cdq
call
repnz
hlt
ins
mov
out
mov
add
adc
pop
xchg
data16
ins
adc
pop
xchg
data16
ins
sbb
or
pop
cld
jle
popa
mov
jno
call
clc
ins
mov
and
add
fisttp
in
xchg
data16
xchg
es
sub
cli
jmp
cwde
popa
mov
cdq
cld
jle
popa
mov
les
xchg
data16
std
mov
loope
lea
xchg
and
sbb
lea
shr
add
adc
cld
ins
into
cdq
xchg
jl
jno
jmp
leave
sbb
xchg
sub
add
fnstenv
ins
repz
xor
jno
jmp
clc
cmp
xchg
and
xchg
cwd
inc
mov
js
xchg
clc
cmp
jle
jo
mov
sub
add
cdq
jno
stos
sbb
(bad)
das
mov
cmp
xchg
stos
cmp
xchg
dec
lds
out
pushf
in
cs
jns
dec
or
je
lods
(bad)
xor
sti
ins
adc
pop
cmp
jno
ins
icebp
scas
push
sub
sbb
push
cdq
cdq
sub
test
sti
ins
(bad)
mov
jb
sbb
lods
cmp
push
cmps
adc
leave
les
jno
mov
hlt
xor
cwde
mov
icebp
jne
ins
cdq
cld
jle
mov
cmp
inc
pop
adc
jno
loope
jno
in
pop
add
pop
sbb
add
jno
ins
repz
ins
repz
ins
adc
aaa
xchg
data16
ins
adc
xchg
ins
repz
test
popa
sti
ins
adc
or
xor
cmp
jmp
cdq
jno
mov
hlt
aas
xchg
data16
adc
sbb
xor
cmp
cli
hlt
ins
cdq
daa
adc
mov
loope
mov
sti
ins
and
sbb
sbb
add
push
cwde
cld
mov
mov
cdq
jae
data16
xchg
clc
cmp
cs
or
aam
pop
sti
ins
outs
xchg
jb
and
mov
push
icebp
jno
cs
sbb
test
jno
jbe
xor
add
jno
in
jno
pop
xchg
data16
add
clc
cmp
dec
sar
cs
sbb
popf
(bad)
ins
cdq
jno
test
mov
xor
mov
jb
sbb
test
into
into
pop
daa
clc
sbb
cwde
mov
outs
xchg
jb
ins
pop
adc
sti
push
fstp
jb
sbb
xchg
jp
xor
add
ret
mov
cs
cld
jle
mov
cmp
(bad)
call
clc
pop
xor
fs
push
outs
lods
(bad)
imul
mov
gs
loope
sti
arpl
xor
cmp
jno
outs
cdq
daa
jbe
popa
pop
leave
cdq
sti
adc
mov
xor
ins
in
pop
lods
test
xor
arpl
xor
cmp
jno
outs
cdq
daa
jbe
popa
pop
leave
cdq
das
adc
mov
(bad)
clc
add
clc
cmp
jno
hlt
ins
cdq
repnz
clc
pop
xor
fs
push
outs
lods
(bad)
imul
and
add
cdq
mov
ins
sbb
js
lea
sbb
clc
add
mov
in
sbb
xchg
in
lea
add
cld
mov
sub
mov
cmp
and
data16
je
mov
lods
in
push
lods
add
cdq
mov
cs
sbb
ins
cdq
icebp
adc
add
pop
popa
jb
outs
xchg
jb
jne
add
adc
mov
clc
pop
xor
xchg
pushf
in
cs
lock
(bad)
jno
xor
sub
scas
int3
clc
push
aam
pusha
sti
ins
jno
imul
lods
shr
jle
sbb
js
or
mov
sti
xchg
pushf
in
cs
lock
stos
sbb
adc
ins
cdq
clc
or
clc
cmp
sbb
jno
or
jns
lods
xchg
cmc
jb
cdq
jno
stos
repnz
sti
ins
icebp
jno
sub
outs
mov
jno
imul
(bad)
or
pop
mov
stos
cdq
jno
pushf
mov
jb
adc
pop
call
sti
ins
adc
jbe
movs
lahf
add
leave
cdq
sbb
jno
jmp
leave
cdq
xchg
arpl
lahf
add
xchg
mov
mov
xchg
mov
mov
xchg
mov
mov
adc
mov
adc
sub
pop
mov
imul
add
and
jbe
cdq
jle
push
xor
jle
push
xor
aas
sbb
jo
mov
int
xchg
outs
mov
adc
adc
lds
ins
adc
fild
icebp
xchg
dec
cs
sbb
jmp
leave
cdq
sar
jbe
pop
leave
cdq
xor
jno
pusha
adc
(bad)
nop
mov
cmp
cmps
xchg
lock
jno
loope
cdq
adc
jmp
leave
cdq
arpl
data16
ins
jno
sti
add
cdq
mov
call
add
add
pop
sbb
jno
add
sbb
jbe
pop
leave
cdq
jno
cdq
jno
shl
add
cdq
add
cmp
cdq
lock
pop
pop
xor
arpl
push
inc
lods
(bad)
in
jo
in
inc
cmp
(bad)
mov
jp
xchg
jae
ins
into
into
jmp
xchg
outs
xchg
jb
ins
mov
adc
sti
add
ret
mov
cs
cld
jle
mov
cmp
push
jmp
cdq
cld
jle
mov
cmp
or
data16
cmp
cmp
push
mov
ins
int3
clc
push
cmp
mov
jp
sti
jne
ins
adc
pop
cmp
jno
ins
icebp
call
cdq
cdq
sub
test
sti
ins
(bad)
mov
jb
enter
xchg
scas
in
pop
add
pop
repnz
clc
pop
xor
fs
push
outs
lods
(bad)
imul
sbb
mov
mov
lods
or
cdq
jno
stos
ds
ins
icebp
xor
sbb
lods
mov
sti
xchg
lods
or
cdq
jno
sub
xchg
ins
repz
mov
xor
push
cdq
sbb
test
jl
ins
leave
cdq
popf
addr16
jno
xchg
cwde
mov
icebp
jne
ins
cdq
mov
pushf
sub
sti
test
sti
ins
(bad)
mov
jp
cmp
daa
lods
xlat
(bad)
adc
adc
test
jp
mov
je
lods
(bad)
mov
cdq
mov
clc
pop
xor
add
jo
ins
adc
setb
stos
push
cdq
cdq
or
jno
mov
test
jbe
std
pop
leave
cld
jle
mov
cmp
mov
ins
cdq
clc
mov
arpl
sbb
xchg
in
mov
icebp
xchg
jno
push
cdq
sbb
in
repnz
mov
ins
cdq
clc
and
clc
cmp
cdq
cld
jle
mov
cmp
je
jmp
leave
mov
ins
cdq
icebp
inc
xchg
mov
inc
in
push
ins
cwd
jno
mov
test
stc
ins
cdq
lock
cmc
jno
out
test
nop
repz
sbb
int
cdq
jno
ins
repz
scas
mov
pop
ds
test
add
push
fstp
jb
adc
or
pop
jo
ins
repz
jmp
leave
cli
mov
cmp
mov
ins
cdq
inc
or
push
xchg
repnz
popf
inc
js
lock
call
cli
mov
push
pop
add
cs
jns
dec
or
je
lods
(bad)
xchg
sbb
cli
ins
in
mov
sbb
sti
sbb
jno
mov
pop
jge
mov
xchg
jb
stc
pop
adc
fwait
xchg
data16
adc
js
xor
cwde
jno
xchg
adc
cld
ins
adc
js
xor
cwde
jno
xchg
adc
lods
add
cli
mov
ins
cdq
repnz
pusha
adc
js
xor
cwde
jno
xchg
adc
cld
ins
sbb
jbe
sbb
cli
ins
in
mov
sbb
or
(bad)
xor
jbe
sbb
cli
ins
in
mov
sahf
jo
add
pop
pop
jb
xor
js
xor
cwde
jno
xchg
adc
cld
ins
sbb
adc
xchg
jno
in
pop
jb
xor
jle
movs
xor
cwde
jno
xchg
adc
cld
ins
adc
js
xor
cwde
jno
xchg
adc
lods
add
cld
mov
ins
cdq
repnz
pusha
adc
cmps
xchg
data16
lds
jbe
sbb
cli
ins
in
mov
sahf
jo
arpl
mov
cli
ins
in
mov
sbb
sti
fcmovu
jno
lds
jge
arpl
mov
cli
ins
in
mov
sahf
jo
arpl
mov
cli
ins
in
mov
sbb
sub
(bad)
adc
pop
jge
scas
je
sti
ins
adc
js
xor
cwde
jno
xchg
adc
cld
ins
into
cdq
mov
test
rcr
(bad)
mov
test
js
xor
cwde
jno
xchg
adc
cld
ins
into
cdq
in
cdq
jno
test
ror
(bad)
arpl
mov
cli
ins
in
mov
sahf
jo
scas
test
sti
ins
into
cdq
add
jno
test
ror
(bad)
fldcw
add
jno
rep
cdq
lock
sti
xchg
in
mov
cdq
sahf
jno
out
pushf
in
cs
jns
dec
or
je
lods
(bad)
xor
mov
jp
jne
sti
ins
retf
sar
movs
push
adc
adc
jne
sti
ins
sbb
adc
jno
add
mov
ins
repz
ins
cdq
outs
sti
test
hlt
sub
in
inc
adc
imul
cmp
ins
les
xchg
data16
sbb
cdq
test
jno
pushf
outs
xchg
jb
mov
mov
push
jns
mov
ins
cdq
clc
or
clc
cmp
ins
leave
cdq
jge
cdq
jno
push
sbb
push
xchg
and
jge
mov
ins
cdq
sbb
add
ret
mov
xchg
data16
xchg
sbb
jg
cwde
jno
out
pushf
in
cs
jns
movs
cdq
jno
fwait
mov
clc
jle
bound
mov
lods
(bad)
pushf
outs
xchg
jb
mov
mov
xchg
xchg
jno
(bad)
dec
cmp
jl
mov
xchg
cld
lods
pusha
outs
shl
fdivr
add
add
pop
xchg
data16
or
bound
jle
mov
xchg
jno
arpl
int3
les
aam
jmp
pop
xchg
lods
arpl
xchg
xchg
in
repnz
mov
sbb
pop
xchg
data16
jmp
movs
jns
stos
pop
hlt
int3
nop
mov
test
jnp
ins
adc
cmc
stos
sbb
pop
xchg
inc
cmp
xchg
stos
clc
or
clc
cmp
xchg
and
add
xchg
mov
xchg
data16
ins
repz
jmp
leave
cld
jle
mov
jno
std
ins
cdq
cld
jle
bound
dec
xchg
data16
or
bound
jle
mov
jno
push
xchg
data16
je
jno
jmp
leave
cdq
popa
imul
jb
lea
xchg
ins
jno
jmp
sbb
(bad)
test
sti
add
out
mov
ins
cdq
lock
loope
xchg
sbb
cdq
clc
mov
sub
adc
xchg
(bad)
fnstenv
sub
or
clc
cmp
ins
repz
mov
jno
in
cmp
popa
jno
sub
sti
ins
cdq
clc
or
clc
cmp
ins
cdq
jno
or
js
jge
jp
movs
dec
sti
ins
adc
and
mov
(bad)
clc
pop
xor
dec
call
cs
sbb
xchg
lods
xchg
xchg
cdq
sbb
push
cwde
sbb
ins
cdq
icebp
xchg
ins
cdq
jno
add
jno
ins
icebp
xchg
sbb
cdq
sbb
mov
jno
ins
jno
rep
cdq
ror
(bad)
jno
hlt
pop
xor
push
cdq
sbb
test
ja
ins
adc
(bad)
nop
data16
adc
mov
add
jae
ins
jno
stc
ins
cdq
sbb
(bad)
ins
in
xor
test
or
adc
sti
add
cli
mov
ins
cdq
sbb
sub
sti
test
jb
ins
icebp
sub
cdq
sbb
fdiv
in
call
in
sbb
ins
das
xor
test
jb
ins
icebp
pusha
sbb
cdq
sbb
int3
(bad)
xor
xchg
jno
cdq
in
ins
cdq
clc
or
clc
cmp
ins
jno
jmp
or
fdiv
hlt
push
xor
test
sbb
ins
cdq
clc
cmp
adc
(bad)
stos
cmp
sti
ins
jno
rep
cdq
clc
cmp
adc
(bad)
ins
cwde
jno
loope
test
xchg
call
mov
ins
sbb
js
mov
sbb
loope
test
adc
mov
cdq
cld
jle
mov
cmp
loope
sub
(bad)
cld
adc
sti
test
loope
sub
(bad)
xchg
jg
sti
add
jno
in
jno
and
jb
jbe
inc
pop
leave
sbb
fdiv
loope
jno
arpl
je
lods
(bad)
test
add
xchg
(bad)
inc
pop
xor
cmp
xchg
jp
lock
jno
test
add
icebp
jmp
(bad)
retf
sti
loope
test
adc
sahf
jno
in
pop
or
pop
cld
jle
mov
cmp
ds
ins
cdq
sbb
push
cdq
sbb
push
cdq
cdq
rcr
xor
add
push
sti
ins
icebp
jne
ins
cdq
mov
pushf
sub
sti
test
xchg
pusha
cdq
jno
sbb
pop
push
repnz
icebp
pop
mov
into
pushf
sub
sti
test
je
ins
adc
xchg
ins
repz
ins
repz
jb
mov
lods
lds
cs
cdq
icebp
(bad)
jp
adc
sti
ins
inc
dec
lods
(bad)
or
out
pop
push
movs
xor
mov
outs
fidiv
cld
cdq
jno
ins
push
pop
outs
fidiv
cld
cdq
jno
ins
push
pop
outs
fidiv
cld
cdq
jno
ins
push
push
outs
fidiv
cld
cdq
jno
ins
push
push
outs
fidiv
cld
cdq
jno
ins
push
dec
outs
fidiv
cld
cdq
jno
ins
push
dec
outs
fidiv
cld
cdq
jno
ins
push
inc
outs
fidiv
cld
cdq
jno
ins
push
inc
outs
fidiv
cld
cdq
jno
ins
push
cmp
jno
cld
cdq
jno
ins
push
aas
outs
fidiv
cld
cdq
jno
ins
push
xor
jno
cld
cdq
jno
ins
push
aaa
outs
fidiv
cld
cdq
jno
ins
push
sub
jno
cld
cdq
jno
ins
push
das
outs
fidiv
cld
cdq
jno
ins
push
and
jno
cld
cdq
jno
ins
push
daa
outs
fidiv
cld
cdq
jno
ins
push
adc
jno
cld
cdq
jno
ins
push
pop
outs
fidiv
cld
cdq
jno
ins
push
or
jno
cld
cdq
jno
ins
push
movq
jno
cld
cdq
jno
ins
push
add
jno
cld
cdq
jno
ins
push
jmp
jno
cld
cdq
jno
ins
push
jmp
fidiv
cld
cdq
jno
ins
push
out
push
cdq
jno
ins
push
jecxz
fidiv
cld
cdq
jno
ins
int3
clc
push
cmp
cdq
jno
stos
sbb
sbb
xor
ins
sbb
repnz
in
pop
jb
ficomp
fistp
arpl
cld
gs
add
mov
daa
jbe
lods
in
je
xchg
mov
cdq
lds
jno
ins
into
sbb
cmp
sbb
xchg
data16
mov
inc
cdq
popa
sti
ins
sbb
fist
popa
sti
ins
jmp
xchg
js
sti
ins
adc
inc
xchg
data16
arpl
mov
adc
xchg
sbb
cmps
jo
mov
jno
ins
push
fild
jno
cld
cdq
jno
ins
push
shr
jno
cld
cdq
jno
ins
push
xlat
push
cdq
jno
ins
push
retf
push
cdq
jno
ins
push
iret
push
cdq
jno
ins
push
ret
push
cdq
jno
ins
push
(bad)
push
cdq
jno
ins
push
mov
cld
cdq
jno
ins
push
mov
cld
cdq
jno
ins
push
mov
fidiv
cld
cdq
jno
ins
push
mov
fidiv
cld
cdq
jno
ins
push
stos
push
cdq
jno
ins
push
scas
push
cdq
jno
ins
push
mov
cld
cdq
jno
ins
push
cmps
push
cdq
jno
ins
push
fwait
push
cdq
jno
ins
push
lahf
push
cdq
jno
ins
push
xchg
push
cdq
jno
ins
push
xchg
push
cdq
jno
ins
push
mov
jno
cld
cdq
jno
ins
push
(bad)
imul
jno
ins
push
sub
imul
jno
ins
push
xchg
jno
cld
cdq
jno
ins
push
jnp
fidiv
cld
cdq
jno
ins
push
jg
fidiv
cld
cdq
jno
ins
push
jae
fidiv
cld
cdq
jno
ins
push
ja
fidiv
cld
cdq
jno
ins
push
imul
imul
jno
ins
push
outs
push
cdq
jno
ins
push
arpl
jno
cld
cdq
jno
ins
push
addr16
cdq
jno
ins
push
pop
push
cdq
jno
ins
push
pop
push
cdq
jno
ins
push
push
push
cdq
jno
ins
push
push
push
cdq
jno
ins
push
dec
push
cdq
jno
ins
push
dec
push
cdq
jno
ins
push
inc
push
cdq
jno
ins
push
inc
push
cdq
jno
ins
push
cmp
jno
cld
cdq
jno
ins
push
aas
push
cdq
jno
ins
push
xor
jno
cld
cdq
jno
ins
push
aaa
push
cdq
jno
ins
push
sub
jno
cld
cdq
jno
ins
push
das
push
cdq
jno
ins
push
and
jno
cld
cdq
jno
ins
push
daa
push
cdq
jno
ins
push
sbb
jno
cld
cdq
jno
ins
push
pop
push
cdq
jno
ins
push
adc
jno
cld
cdq
jno
ins
push
pop
push
cdq
jno
ins
push
or
jno
cld
cdq
jno
ins
push
punpckhbw
jno
cld
cdq
jno
ins
push
add
jno
cld
cdq
jno
ins
push
pop
push
cdq
jno
ins
push
sti
imul
jno
ins
push
jmp
jno
cld
cdq
jno
ins
push
repz
jno
ins
push
imul
jno
cld
cdq
jno
ins
push
jmp
fidiv
cld
cdq
jno
ins
push
out
imul
jno
ins
push
jecxz
fidiv
cld
cdq
jno
ins
push
out
fidiv
cld
cdq
jno
ins
push
shr
jno
cld
cdq
jno
ins
push
xlat
imul
jno
ins
push
retf
imul
jno
ins
push
iret
imul
jno
ins
push
ret
imul
jno
ins
push
(bad)
imul
jno
ins
push
mov
cld
cdq
jno
ins
push
mov
cld
cdq
jno
ins
push
mov
fidiv
cld
cdq
jno
ins
push
mov
fidiv
cld
cdq
jno
ins
push
stos
imul
jno
ins
push
scas
imul
jno
ins
push
mov
cld
cdq
jno
ins
push
cmps
imul
jno
ins
push
fwait
imul
jno
ins
push
lahf
imul
jno
ins
push
xchg
imul
jno
ins
push
xchg
imul
jno
ins
push
mov
jno
cld
cdq
jno
ins
push
(bad)
imul
jno
ins
push
sub
imul
jno
ins
push
xchg
jno
cld
cdq
jno
ins
push
jnp
fidiv
cld
cdq
jno
ins
push
jg
fidiv
cld
cdq
jno
ins
push
jae
fidiv
cld
cdq
jno
ins
push
outs
imul
jno
ins
push
arpl
jno
cld
cdq
jno
ins
push
pop
imul
jno
ins
push
push
imul
jno
ins
push
push
imul
jno
ins
push
dec
imul
jno
ins
push
dec
imul
jno
ins
push
inc
imul
jno
ins
push
inc
imul
jno
ins
push
cmp
jno
cld
cdq
jno
ins
push
aaa
imul
jno
ins
push
sub
jno
cld
cdq
jno
ins
push
das
imul
jno
ins
push
and
jno
cld
cdq
jno
ins
push
daa
imul
jno
ins
push
sbb
jno
cld
cdq
jno
ins
push
pop
imul
jno
ins
push
adc
jno
cld
cdq
jno
ins
push
pop
imul
jno
ins
push
or
jno
cld
cdq
jno
ins
push
punpckhwd
jno
cld
cdq
jno
ins
push
add
jno
cld
cdq
jno
ins
push
pop
imul
jno
ins
push
sti
push
jno
cld
cdq
jno
ins
push
jmp
jno
cld
cdq
jno
ins
push
repz
jno
cld
cdq
jno
ins
push
imul
jno
cld
cdq
jno
ins
push
jmp
fidiv
cld
cdq
jno
ins
