sub
push
sahf
pop
data16
sbb
xchg
es
xchg
ss
pusha
mov
stos
dec
xor
loop
inc
or
jo
jb
or
sbb
sbb
loopne
bound
imul
jmp
push
jmp
ds
outs
js
pop
ins
jmp
ds
xchg
sub
jmp
in
test
in
pop
imul
outs
inc
aaa
inc
mov
dec
ds
or
add
or
sbb
mov
sbb
ss
cmp
cmp
xchg
ds
jmp
adc
xchg
rcr
xchg
jg
fstp
in
sub
sbb
ins
lahf
aad
bound
loopne
call
mov
out
pop
xchg
xchg
and
loop
outs
xchg
adc
loope
xchg
adc
bound
out
bound
dec
aaa
xchg
add
jmp
xchg
imul
pusha
mov
loop
mov
and
aas
dec
xor
in
pop
stos
sub
jmp
sbb
stos
and
loopne
push
stos
sub
cmp
in
xchg
ins
inc
cmp
xor
imul
xor
cs
push
xor
cmps
push
in
jb
cmp
mov
fisub
outs
ins
loop
in
xchg
sub
popf
dec
out
jmp
ins
loop
in
repz
popf
in
fimul
or
in
repnz
in
in
fisubr
imul
bound
imul
xor
sbb
fisub
mov
(bad)
pop
imul
push
push
bound
jmp
mov
cmp
dec
xchg
das
jb
sub
mov
adc
adc
sbb
cdq
cmps
push
rcr
bound
imul
inc
stos
cdq
pop
fstp
sbb
(bad)
cmp
cmp
or
mov
cmp
xchg
jb
stos
sub
or
or
sbb
test
xor
pop
repnz
pop
setnp
imul
cmps
push
add
or
add
rcr
jb
stos
sub
or
fstp
bnd
bound
xchg
das
dec
stos
sub
popf
das
dec
stos
and
xchg
das
inc
stos
sub
jmp
jge
and
sbb
add
jmp
xchg
dec
mov
adc
(bad)
stos
jle
sbb
(bad)
fldcw
jmp
ror
sbb
sbb
dec
movs
cld
adc
dec
jmp
pop
loop
fld
sbb
sbb
sbb
sbb
sbb
sbb
loop
dec
mov
sbb
xchg
mov
push
pop
fimul
std
loopne
xchg
test
add
out
lahf
popf
test
push
push
test
mov
push
sbb
cmp
xchg
jo
jb
mov
pop
loop
in
dec
mov
push
push
pop
in
sbb
ins
sub
xor
mov
popf
xchg
scas
cdq
movs
or
xchg
test
pop
fidivr
dec
loopne
loope
gs
xor
push
loopne
out
pop
xchg
dec
out
pop
xchg
dec
or
add
bound
jo
in
push
popf
outs
popa
repnz
arpl
jmp
call
sbb
sbb
pop
popf
outs
jno
pop
push
xchg
outs
jle
imul
sahf
repnz
arpl
loopne
popf
outs
xchg
repnz
in
sbb
add
addr16
sbb
sbb
imul
test
pop
fisub
inc
aaa
shl
dec
movs
and
or
cmc
or
jnp
imul
sbb
adc
xchg
scas
adc
pop
in
add
push
or
xchg
outs
jb
sbb
mov
sbb
scas
in
out
push
sbb
imul
mov
pop
sbb
pop
loop
fnsave
inc
stos
fnstcw
xchg
ds
pop
push
ror
mov
in
outs
(bad)
pop
imul
or
mov
mov
outs
fstp
sub
loop
loop
dec
push
xlat
push
pusha
adc
mov
out
jmp
rcr
sbb
pop
pop
xchg
outs
jb
sub
jmp
out
sbb
jmp
xchg
mov
adc
mov
sbb
nop
and
loop
pop
push
test
stos
in
call
sub
adc
imul
xchg
mov
mov
sbb
dec
jmp
or
in
sbb
jmp
in
fsub
loopne
sahf
in
in
pop
sbb
pop
push
test
stos
in
call
scas
ins
imul
sbb
xchg
sbb
or
loop
jmp
jmp
pop
pop
lds
in
in
fmul
loopne
sahf
in
in
ret
movs
sahf
ins
sbb
xchg
sbb
lahf
push
inc
cmp
stos
dec
jmp
cmp
dec
loop
outs
movs
jecxz
add
cld
loopne
sahf
xchg
scas
sub
imul
mov
or
xor
xchg
sbb
test
mov
fadd
xchg
jge
and
mov
mov
sub
movs
push
jno
cmp
dec
loopne
xor
dec
xor
pop
xchg
adc
pop
mov
xchg
jg
xchg
daa
loop
pop
sahf
sub
ins
bound
loop
push
mov
xchg
mov
sbb
mov
fsub
fmul
xchg
jbe
das
and
fstp
xchg
sub
movs
push
jno
jmp
xor
inc
cmp
stos
dec
jmp
cmp
dec
loop
jb
xor
movs
pop
xchg
sub
jecxz
fwait
daa
out
xor
xchg
pop
push
scas
sub
jmp
add
pop
popa
adc
cwde
xor
movs
jbe
push
retf
pop
fisub
icebp
js
pop
lds
xchg
mov
out
fidivr
dec
loopne
xor
pop
adc
shl
aas
xchg
call
outs
(bad)
pop
imul
sbb
mov
sub
jmp
jb
sti
and
aas
repnz
xchg
in
xchg
adc
and
in
in
fimul
cmp
stos
dec
jmp
cmp
xor
fstp
xchg
xor
adc
xchg
movs
jo
jo
jb
add
popf
outs
popa
jo
jo
bnd
imul
jmp
scas
push
push
sbb
jmp
loopne
xor
dec
xor
enter
mov
sahf
std
jmp
xchg
xchg
movs
cdq
push
xchg
pop
imul
rcr
jmp
xchg
das
push
popf
ins
ins
xchg
jp
cmp
fidiv
mov
jmp
add
imul
inc
cmp
stos
dec
jmp
jmp
outs
popa
movs
jmp
push
bound
jmp
jo
repnz
pop
cdq
dec
or
mov
repnz
bound
loopne
fimul
sub
xchg
daa
mul
fst
pusha
shr
xchg
daa
repnz
ficom
dec
aas
jb
sti
sub
or
add
out
pop
cdq
dec
mov
sub
(bad)
pop
xchg
test
cdq
mov
sti
sub
jmp
or
sbb
stos
fwait
lea
sbb
test
(bad)
pop
mov
mov
pop
adc
in
fwait
xchg
data16
bound
test
fnstenv
xchg
mov
mov
sbb
bound
dec
fldcw
dec
xchg
mov
mov
data16
in
sbb
outs
cdq
inc
(bad)
fstp
sbb
(bad)
(bad)
pop
imul
movs
sbb
jmp
scas
sub
jmp
sahf
stc
jmp
mov
pushf
in
fabs
daa
cmc
mov
jp
cmc
mov
push
in
adc
ret
jmp
jmp
jb
in
sbb
lahf
and
in
in
push
mov
sbb
bound
jb
cli
sub
out
lahf
mov
pushf
in
repnz
xchg
in
fisub
popf
in
sbb
push
jmp
repz
ret
loopne
jecxz
xchg
bound
in
xchg
dec
loop
push
sub
xor
loopne
sahf
cdq
adc
bound
imul
bound
push
data16
pop
imul
dec
fwait
stos
dec
imul
in
data16
xchg
sub
pop
pop
adc
sbb
and
imul
mov
jo
repnz
outs
imul
mov
pop
mov
bound
cmp
out
outs
mov
fistp
imul
pop
adc
gs
loop
popf
dec
dec
xchg
daa
out
icebp
icebp
xor
sbb
or
test
pop
xchg
dec
loop
popf
push
push
sbb
imul
pop
imul
pushf
in
mov
xor
imul
imul
shld
adc
in
sbb
pop
outs
and
(bad)
popf
in
outs
daa
mov
sahf
stc
jmp
mov
fabs
daa
cmc
mov
imul
aas
adc
out
push
pop
call
cdq
inc
xchg
pop
bound
loopne
xchg
stc
loopne
mov
xchg
in
fnstenv
inc
cmp
stos
dec
jmp
jmp
inc
pop
pop
sbb
xchg
call
cdq
or
bound
pop
push
ins
lahf
jecxz
bound
pusha
rcl
scas
pop
sahf
sbb
bound
xchg
xchg
movs
icebp
sbb
xchg
xor
outs
add
push
pop
cs
push
loope
xchg
sbb
pop
popa
xchg
sbb
or
cmp
sbb
fisubr
sahf
adc
addr16
add
mov
out
xchg
call
out
outs
cmp
sar
(bad)
in
mov
loope
xchg
sbb
add
rcr
mov
loop
push
ins
sub
push
push
pop
sub
loope
xchg
sbb
loop
loop
(bad)
xchg
daa
adc
es
sbb
pop
in
in
jg
sbb
addr16
sbb
adc
pop
and
adc
push
xchg
xchg
sbb
jo
jo
jo
jo
jb
sbb
add
cld
pop
imul
jmp
xchg
jo
jo
jo
dec
sub
adc
fndisi(8087
rcl
sbb
jecxz
fmul
sbb
push
xchg
dec
cmp
pop
adc
jne
sbb
sbb
pop
popf
dec
or
add
sbb
pop
loop
mov
lea
inc
sbb
sbb
mov
pop
sbb
aaa
inc
stos
fnstcw
xchg
cmp
dec
rol
sti
and
bound
stos
fsub
out
in
sbb
inc
jbe
sbb
lahf
popf
in
in
lahf
cmps
in
in
bnd
adc
sbb
mov
jo
repnz
lods
push
sbb
in
(bad)
popf
in
xchg
mov
in
(bad)
popf
in
xchg
out
xchg
in
dec
sbb
cmps
push
jmp
outs
mov
sbb
in
cli
popf
in
dec
ret
xchg
pop
bound
and
out
ficom
mov
icebp
dec
push
imul
pushf
in
jb
sti
sub
jmp
in
xchg
pop
in
daa
bound
imul
mov
sbb
mov
xchg
in
ficomp
xchg
pop
bound
and
out
fisubr
outs
adc
add
pop
imul
popf
bnd
popf
in
fisubr
scas
pop
jmp
xchg
in
in
lahf
scas
in
in
dec
leave
pop
bound
imul
rcr
jmp
xchg
sub
imul
lahf
fistp
aam
popf
in
sbb
cld
sbb
jmp
in
adc
imul
sbb
lahf
lahf
in
in
bnd
popf
in
fisubr
scas
jl
cmps
frstpm(287
pushf
in
push
or
imul
popf
in
xchg
mov
in
in
in
sbb
in
sub
sbb
aad
frstpm(287
pushf
in
dec
out
lahf
xchg
in
in
jb
mov
sbb
bound
in
test
in
fsub
cmp
(bad)
scas
xchg
in
sbb
daa
push
scas
sub
bound
imul
mov
sub
or
pop
(bad)
stc
in
popf
in
fisubr
xchg
in
sbb
aam
pop
imul
xchg
in
cdq
cmps
push
push
in
sbb
push
in
sbb
imul
sbb
dec
ret
repnz
xchg
in
fisub
popf
in
sbb
cmp
mov
xchg
aam
popf
in
dec
mov
lahf
in
cdq
lods
push
pop
in
sbb
arpl
out
xchg
in
sbb
bound
jb
cli
sub
or
pop
(bad)
in
fisubr
xchg
in
sbb
mov
(bad)
xchg
in
dec
xor
cmps
push
push
in
sbb
push
in
sbb
imul
sbb
dec
ret
repnz
xchg
in
fisub
popf
in
sbb
cmp
mov
xchg
aam
popf
in
dec
mov
lods
push
pop
in
sbb
arpl
out
xchg
in
sbb
bound
jb
cli
sub
or
pop
(bad)
loope
popf
in
fisubr
xchg
in
sbb
in
in
sbb
ror
adc
push
sbb
dec
leave
pop
(bad)
in
fisubr
xchg
in
sbb
in
in
sbb
add
or
pop
bound
mov
xchg
in
cdq
cmps
push
push
in
sbb
es
jb
cli
sub
out
cmps
xchg
in
in
bnd
xchg
in
fisub
popf
in
sbb
pop
add
or
pop
bound
xchg
dec
mov
popf
in
cdq
lods
push
pop
in
sbb
arpl
out
xchg
in
sbb
bound
xchg
sbb
or
pop
adc
in
out
in
dec
mov
xchg
in
inc
or
pop
sbb
ss
fstp
fwait
stos
movs
push
sbb
out
xchg
in
sbb
xchg
mov
scas
xchg
in
xchg
stos
xchg
out
xchg
in
dec
loop
mov
xchg
push
in
inc
loopne
sahf
adc
sbb
in
mov
jmp
in
xchg
pop
in
cmp
pop
xchg
xchg
mov
cdq
adc
bound
imul
arpl
loopne
loope
mov
cdq
fbld
xchg
les
imul
bound
paddusw
mov
imul
popf
sbb
bound
xchg
dec
out
lahf
leave
in
in
xchg
out
xchg
in
dec
loop
popf
dec
jne
mov
xor
into
popf
in
dec
or
in
sbb
xchg
push
pop
sbb
bound
data16
pop
push
imul
pushf
in
xchg
out
xchg
in
dec
loop
popf
lea
pop
sahf
fwait
stos
jg
sbb
mov
sbb
out
xchg
in
dec
loop
mov
xchg
in
xchg
push
in
and
pop
sahf
adc
sbb
in
mov
xchg
in
xchg
in
(bad)
popf
in
dec
jmp
xchg
sub
jmp
push
addr16
sbb
mov
imul
bound
in
xchg
xchg
in
xchg
in
repnz
in
dec
jmp
xchg
sub
imul
lahf
or
imul
bound
jmp
in
loop
in
jb
mov
xchg
in
in
repnz
jbe
sbb
fisub
(bad)
not
or
imul
sbb
enter
in
adc
fdiv
popf
in
xchg
out
xchg
in
dec
add
pop
imul
push
sbb
cmps
push
paddusw
mov
xchg
out
xchg
in
xchg
in
sbb
xchg
in
dec
in
repnz
in
idiv
test
call
in
div
mov
xchg
mov
xchg
in
xchg
push
in
ss
sahf
xchg
mov
mov
out
adc
bound
xchg
sbb
lahf
(bad)
in
jb
sti
sub
jmp
in
xchg
pop
in
daa
bound
imul
mov
adc
sbb
in
mov
in
dec
jmp
in
xchg
pop
in
jbe
pop
xchg
xchg
mov
cdq
adc
bound
imul
arpl
imul
sbb
fwait
mov
sbb
scas
lahf
adc
xchg
in
sbb
lahf
shl
xchg
in
lahf
adc
pushf
in
lahf
out
xchg
in
xchg
fsubr
in
cdq
mov
loopne
fistp
imul
xlat
push
in
cdq
test
jmp
rcr
bound
imul
popf
in
dec
jmp
xchg
sub
jmp
pop
ret
jmp
sbb
loope
loope
pushf
in
xchg
out
xchg
in
dec
add
pop
imul
popf
push
push
sbb
imul
bound
jmp
adc
imul
popf
scas
popf
in
in
lahf
jmp
in
cmp
pop
sahf
xchg
mov
mov
out
adc
bound
add
xchg
in
adc
imul
movs
sbb
out
lahf
or
lahf
in
in
jb
in
repnz
jmp
push
scas
pop
jmp
xor
ret
loopne
cmp
xchg
in
fldl2t
cmps
add
xchg
in
adc
imul
popf
sbb
bound
in
stos
xchg
in
xchg
in
out
in
dec
or
pop
bound
xchg
dec
mov
lods
push
jmp
push
xchg
lahf
in
in
rcl
sbb
jecxz
lahf
call
in
in
lahf
add
xchg
in
xchg
in
loop
in
xchg
out
xchg
in
in
repnz
jae
sbb
fisub
xchg
in
out
in
dec
or
pop
bound
xchg
dec
mov
sbb
lods
or
ret
jmp
jmp
outs
imul
ds
in
(bad)
lahf
out
xchg
in
xchg
pop
in
adc
in
lahf
shl
in
lahf
shl
xchg
in
cwde
fs
in
lahf
into
in
in
xchg
pop
in
adc
lahf
(bad)
in
in
xchg
pop
in
adc
jmp
popf
lahf
test
pushf
in
lahf
xchg
xchg
in
lahf
test
pushf
in
cwde
mov
cmps
cdq
in
in
outs
gs
out
in
sbb
lahf
and
push
in
adc
cmps
mov
outs
outs
xchg
in
retf
xchg
dec
jmp
mov
sahf
stc
jmp
fxam
pushf
in
fabs
cmps
mov
outs
outs
xchg
in
into
popf
in
dec
jmp
xchg
in
ret
xchg
dec
jmp
xchg
in
(bad)
popf
in
dec
jmp
fwait
stos
dec
jbe
imul
popf
dec
popa
repz
in
xchg
in
inc
xor
mov
in
sahf
(bad)
pop
imul
mov
cmp
aas
imul
jbe
aas
dec
jmp
sbb
jbe
loop
xchg
sbb
movs
pop
xchg
sbb
imul
js
sbb
lods
push
ficom
sbb
or
jmp
mov
xchg
adc
popf
in
daa
loop
sub
bound
icebp
dec
(bad)
popf
in
in
aas
scas
pop
sbb
sbb
sub
mov
pop
mov
jge
add
dec
bound
xor
in
inc
cmp
clc
xchg
daa
jmp
repz
lock
xchg
call
scas
and
add
or
add
inc
pop
imul
jg
sbb
fnstsw
repnz
jle
sbb
cdq
test
xor
push
call
ss
add
imul
jmp
xchg
pop
push
scas
sub
jmp
jmp
fwait
test
jae
imul
pop
test
sbb
dec
adc
pop
imul
and
ins
sbb
loopne
arpl
loopne
movs
pop
sub
sbb
loopne
and
imul
sti
pop
imul
pusha
sbb
popf
sbb
ins
xchg
sbb
bound
xchg
ds
fstp
call
mov
sbb
ins
outs
(bad)
pop
imul
ins
vphsubbw
ins
pop
jmp
popf
sbb
neg
repz
sbb
jmp
sbb
in
outs
and
inc
sbb
lahf
pop
and
fs
arpl
push
test
sbb
test
sbb
ror
loopne
mov
imul
in
and
pop
imul
popf
pop
sbb
pop
jp
sub
jb
outs
sub
sbb
repz
cmp
loop
jno
and
jns
and
stc
pop
(bad)
in
pop
jp
sub
data16
outs
sub
sbb
mov
adc
pop
jp
sub
repz
in
pop
jp
sub
push
outs
sub
sbb
fstp
pop
jno
and
popa
mov
rcr
(bad)
mov
popf
in
pop
jp
sub
arpl
sub
sbb
ror
loopne
loop
jno
and
push
pop
bound
imul
popf
in
pop
jp
sub
pusha
outs
outs
sub
sbb
jmp
cmp
sbb
pop
jno
and
imul
pop
lock
bound
imul
popf
in
pop
push
scas
sub
popf
pop
push
test
sbb
repz
pop
jno
and
sub
arpl
imul
bound
ins
and
pop
imul
std
pop
imul
mov
jmp
pop
imul
ret
pop
lock
bound
ins
adc
pop
imul
ret
div
pop
bound
ins
and
pop
imul
popf
pop
sbb
pop
pop
test
sbb
neg
bound
loopne
push
shl
fndisi(8087
pop
push
test
sbb
out
sbb
push
fiadd
call
call
sbb
jmp
and
data16
addr16
leave
pop
bound
test
adc
mov
pop
bound
jmp
pop
pop
aad
sbb
push
in
lahf
test
pop
jp
sub
and
push
in
outs
fstp
icebp
pop
mov
arpl
push
test
sbb
test
sbb
fistp
sbb
pop
jno
and
sub
jb
test
sbb
rcr
xchg
mov
pop
imul
bound
sahf
mov
jmp
and
loopne
push
shl
fld
ins
push
pop
imul
jmp
mov
gs
sub
ins
lods
sub
pop
fisubr
bound
imul
repnz
imul
ins
lods
sub
pop
call
sub
arpl
popa
mov
sbb
daa
sub
pusha
outs
jl
pop
in
imul
outs
das
cdq
addr16
pop
bound
and
addr16
push
pop
ds
sbb
xchg
mov
xchg
xchg
pop
jecxz
sar
pop
bound
sub
loope
outs
xchg
daa
in
jmp
pop
loop
sahf
sbb
sbb
sub
cwd
dec
push
repnz
imul
and
jl
repnz
imul
popf
pop
mov
sbb
adc
pop
imul
bound
fwait
xchg
retf
bound
imul
and
jl
repnz
imul
popf
pop
mov
sbb
and
pop
imul
bound
in
outs
fstp
xchg
cdq
xor
sbb
and
mov
xchg
sti
loopne
xchg
xchg
test
cmp
stos
dec
jmp
cmp
xor
rcl
in
dec
aaa
imul
and
add
fcomp
repnz
imul
fcomp
dec
mov
sbb
xor
loop
std
loopne
sahf
xchg
scas
jb
mov
rol
retf
pop
imul
repnz
bound
retf
pop
imul
repnz
bound
retf
pop
imul
repnz
sbb
inc
ret
xchg
call
shl
test
xor
shr
push
or
mov
in
outs
(bad)
pop
imul
pop
ror
xor
pop
mov
imul
mov
imul
daa
mov
pop
xchg
(bad)
and
imul
jecxz
sbb
bound
jmp
scas
sub
loope
mov
pop
bound
jmp
sbb
(bad)
(bad)
arpl
imul
and
loopne
and
outs
(bad)
pop
imul
bound
loopne
push
ret
movs
pop
fstp
bound
imul
mov
ins
sbb
call
sbb
bound
jl
call
xchg
mov
xchg
sub
xor
xchg
daa
mov
imul
inc
xchg
daa
mov
in
ror
sbb
in
outs
(bad)
pop
imul
sbb
sbb
push
add
jnp
sbb
icebp
inc
outs
bound
xchg
outs
xchg
sub
bound
xchg
pop
push
scas
sub
out
pop
or
(bad)
cmp
ja
hlt
pop
bound
shl
adc
stos
dec
jmp
jmp
ds
xchg
mov
out
pop
outs
xchg
sub
jmp
loop
jg
sbb
jmp
test
or
add
out
pop
xchg
dec
out
pop
or
xchg
sub
xor
in
adc
sbb
pop
popf
icebp
push
fadd
jmp
xchg
shl
movs
jbe
pop
adc
loop
loop
fstp
sbb
in
or
pop
bound
fnstenv
xchg
mov
xor
inc
gs
outs
fstp
sub
daa
popf
sbb
pop
data16
es
imul
es
imul
es
imul
es
imul
bound
loop
jb
sub
and
push
push
fsub
in
adc
aam
ins
js
pop
imul
bound
imul
ins
lahf
loope
bound
loopne
loope
imul
outs
adc
ins
lods
jge
pop
fcomp
jmp
jmp
daa
sbb
ins
lods
sub
or
xchg
popw
add
fld
sbb
cmp
or
jge
jbe
mov
dec
mov
loop
rcl
dec
jno
push
xor
repnz
xchg
daa
out
loop
jb
sub
cdq
mov
loop
xchg
xchg
jge
arpl
imul
daa
in
fidiv
push
pop
mov
sub
bound
call
xchg
in
pop
sbb
es
push
sbb
jmp
and
sub
jmp
pop
jmp
jmp
outs
pop
xchg
call
sbb
jb
or
imul
call
ds
or
ret
jns
and
push
jmp
sbb
loop
push
sbb
jg
loop
call
call
sbb
dec
loopne
loope
push
pop
sbb
outs
and
xchg
cdq
mov
data16
data16
repnz
imul
sbb
aaa
or
dec
jno
push
xor
push
loopne
call
pop
arpl
jmp
push
ins
sbb
imul
loop
outs
sbb
push
loopne
loope
imul
xchg
xchg
cdq
mov
jmp
sub
loop
repnz
fs
outs
ins
daa
xchg
sbb
sbb
sbb
jno
imul
xchg
or
cdq
sbb
push
jl
bound
imul
sbb
aad
xchg
in
inc
xor
mov
mul
xor
xchg
pop
push
scas
sub
jmp
sub
and
outs
pusha
pop
jecxz
sbb
jecxz
sbb
and
sub
dec
repnz
bound
scas
ins
mov
sbb
fsubr
ins
outs
(bad)
pop
imul
ja
clc
pop
bound
mov
call
in
inc
xchg
pop
push
scas
sub
ins
lods
ins
add
bound
daa
mov
imul
sahf
sbb
pop
sahf
nop
jge
jmp
push
repnz
imul
mov
ins
add
pop
jbe
jmp
xchg
fwait
sbb
sbb
out
out
pop
ja
jmp
sbb
pop
imul
nop
sbb
sbb
push
loopne
call
add
xchg
cmp
jmp
xchg
pop
push
scas
sub
loope
xchg
xor
sbb
pop
call
sbb
imul
fisttp
inc
ficomp
repnz
out
in
fisub
cmp
mov
mov
mov
sbb
aas
dec
mov
in
fsubr
stc
mov
add
sbb
imul
movs
lahf
mov
popf
in
fsub
jmp
jmp
call
pop
or
out
xchg
popf
call
arpl
call
sbb
jmp
pop
pop
or
pusha
icebp
aaa
adc
popf
in
(bad)
in
shl
outs
pop
push
cmps
and
cmp
imul
les
dec
lock
bound
xchg
in
shl
outs
pop
mov
and
cmp
sbb
pop
les
dec
sti
pop
imul
jmp
in
push
ja
clc
pop
bound
xchg
sbb
in
jmp
mov
(bad)
rcr
sbb
das
in
in
lahf
call
(bad)
call
cdq
push
cmovb
in
and
adc
popf
in
clc
pusha
xchg
jge
xor
mov
pop
push
scas
sub
loop
mov
popf
in
adc
(bad)
or
popf
in
lahf
mov
pop
sbb
(bad)
mov
xchg
in
leave
test
je
mov
ret
bound
xchg
out
xchg
popf
sub
or
cmp
ins
inc
imul
arpl
(bad)
sbb
scas
aam
(bad)
in
pop
jecxz
imul
xchg
cmc
xchg
in
int
lahf
out
xchg
in
repnz
bound
xchg
pop
push
scas
sub
loope
test
popf
in
repz
sbb
or
xchg
sbb
fdiv
(bad)
in
in
ret
popf
repnz
loopne
in
fisubr
sub
imul
js
mov
imul
popf
xchg
mov
mov
test
pusha
sbb
jmp
push
push
scas
(bad)
xchg
popf
outs
pusha
pop
jecxz
imul
jecxz
xchg
sbb
sbb
jb
imul
mov
fwait
xchg
sbb
in
out
add
lahf
mov
xchg
in
sbb
jmp
in
in
sbb
out
xchg
popf
adc
xchg
in
outs
fstp
in
ret
xchg
repnz
dec
imul
bound
xchg
in
clc
imul
sbb
(bad)
xchg
cmc
xchg
in
mov
imul
jmp
test
pusha
fisttp
xchg
outs
or
xchg
ja
mov
popf
xchg
cld
out
(bad)
in
fild
repz
sbb
sahf
sbb
lahf
xchg
cmc
xchg
in
cmps
popf
cmc
popf
in
push
bound
sbb
and
jmp
in
outs
xor
cmps
sub
mov
sbb
in
mov
mov
sbb
jmp
cmc
les
sbb
out
mov
popf
xchg
in
mov
test
loopne
test
in
lahf
leave
les
les
lahf
repnz
lds
lds
lds
lahf
rol
popf
in
in
(bad)
mov
popf
repnz
dec
bound
loop
mov
xchg
in
lahf
aad
popf
in
pop
jmp
in
lahf
(bad)
lds
lds
lds
jb
sbb
or
loop
(bad)
lds
dec
jmp
in
lock
dec
add
bound
imul
popf
icebp
repnz
outs
fstp
adc
xchg
in
clc
imul
xor
into
mov
mulps
imul
xchg
popf
fisttp
cmp
pop
imul
bound
cmp
std
dec
imul
popf
in
fisubr
or
bound
jmp
sahf
pop
sbb
jmp
in
lods
bound
sbb
sbb
sbb
push
sbb
add
sbb
out
xchg
popf
xchg
jge
arpl
imul
sbb
out
mov
popf
fsubr
mov
loope
(bad)
lds
(bad)
mov
popf
xchg
cdq
push
loop
imul
sbb
and
ja
xchg
cdq
sbb
jbe
cdq
cdq
mov
jmp
xchg
xchg
cdq
sbb
imul
pop
sbb
lods
idiv
mov
jmp
jl
mov
mov
data16
fs
sbb
sbb
jmp
sbb
mov
in
push
push
loopne
xchg
xchg
in
cwde
loopne
mov
xchg
in
loop
jmp
aam
mov
call
ins
lods
cld
mov
sbb
cmps
ja
mov
popf
fsubr
loop
push
sbb
imul
pop
sbb
bound
sbb
loop
push
sbb
imul
pop
push
imul
loop
push
pop
bound
imul
stos
adc
xchg
in
ficom
mov
push
push
data16
out
xchg
popf
dec
xchg
scas
mov
scas
mov
ins
fwait
in
cdq
cmps
push
jmp
in
outs
sub
popf
sbb
(bad)
xchg
cmc
xchg
in
clc
imul
sti
imul
out
sahf
ja
mov
popf
xchg
ins
or
in
cmps
xchg
cmc
xchg
in
push
imul
push
scas
sub
mov
jmp
ins
lods
in
jmp
mov
(bad)
rcr
sbb
dec
loope
in
inc
xor
mov
not
xor
loop
push
sub
movs
push
mov
adc
imul
pop
(bad)
in
push
cmps
sub
fisttp
imul
psrad
bound
in
mov
pop
lahf
fistp
mov
xchg
mov
pop
mov
pop
imul
add
pop
xchg
xchg
sbb
daa
in
fsub
in
imul
aam
sahf
and
jge
in
icebp
arpl
pop
in
js
xchg
sahf
jg
xchg
sub
jmp
xchg
fsub
in
imul
call
in
push
pop
ja
data16
in
sbb
loop
xchg
sbb
sub
pop
fisubr
bound
xchg
daa
loop
fsub
loopne
call
sbb
jmp
in
adc
mov
loopne
outs
push
adc
loop
ins
call
push
outs
outs
cdq
mov
call
fistp
aas
test
call
sub
xchg
sub
jmp
inc
fsubr
dec
xchg
adc
bound
imul
outs
ins
call
push
adc
popf
fsubr
(bad)
adc
sub
call
sub
arpl
lea
arpl
loopne
call
sbb
ins
call
xchg
inc
cmp
mov
dec
xor
dec
jmp
inc
ret
xor
dec
or
(bad)
in
mov
or
imul
mov
sbb
cwde
cdq
stos
in
call
scas
icebp
ins
call
es
es
popf
sbb
imul
ret
jmp
xchg
xchg
mov
fnstcw
xchg
and
movs
or
fiadd
call
sbb
xor
(bad)
in
mov
popf
xchg
scas
xchg
pop
push
aas
in
adc
lahf
(bad)
cli
xchg
in
repnz
in
(bad)
cli
xchg
in
repnz
jmp
xor
shl
movs
fwait
imul
call
sbb
sbb
sbb
repnz
dec
bound
ss
mov
idiv
xor
(bad)
mov
movs
jg
sbb
imul
sbb
sbb
sbb
sbb
jmp
push
sbb
movs
cdq
xchg
in
add
outs
sbb
cdq
inc
sbb
mov
loop
std
loopne
xchg
xchg
scas
jo
dec
add
cdq
test
bnd
imul
mov
imul
xchg
xchg
scas
jo
cdq
adc
bound
xchg
daa
push
loopne
xchg
icebp
outs
xchg
daa
loop
pop
xchg
in
jmp
jl
bound
aas
repnz
dec
imul
fs
xchg
or
imul
xchg
mov
xor
pop
loopne
push
loop
fisttp
sbb
call
imul
ficom
dec
bound
loopne
loope
xchg
outs
sub
pop
bound
sahf
std
jmp
xchg
xchg
movs
jo
jo
jo
dec
mov
cmp
bound
jmp
sbb
jmp
add
out
dec
xchg
dec
xor
sbb
xor
js
bound
add
out
pop
xchg
dec
or
add
sbb
mov
cmp
bound
xor
imul
xchg
xchg
scas
mov
cmp
dec
loopne
xor
dec
(bad)
sub
jb
sbb
add
or
add
or
imul
mov
sbb
scas
cdq
pushf
in
push
push
fiadd
std
jmp
xchg
xchg
movs
jo
jo
jo
dec
mov
cmp
bound
xchg
daa
out
in
or
sahf
xor
imul
test
loop
loop
fnstsw
xchg
mov
dec
ds
pop
adc
pop
dec
fwait
sub
fistp
imul
mov
push
push
push
out
loop
sahf
xchg
stos
sbb
in
push
or
pop
(bad)
sbb
and
dec
imul
mov
push
ja
or
mov
repnz
dec
bound
jmp
sub
bound
data16
dec
pop
push
outs
cwd
xchg
daa
out
fsub
loopne
sahf
dec
add
sbb
add
sbb
fisub
cmp
mov
dec
xor
aas
adc
outs
outs
(bad)
mov
jecxz
xchg
mov
pop
cli
sub
mov
sbb
pop
in
or
and
jb
cli
sub
mov
cmp
bound
sahf
push
and
or
jmp
xor
inc
cmp
stos
dec
jmp
jmp
xchg
adc
jo
mov
mov
pop
mov
bound
or
bound
adc
out
das
repnz
and
rcr
bound
imul
mov
or
fs
pop
add
xchg
daa
adc
and
loope
popf
icebp
inc
mov
xchg
stc
loopne
mov
pop
xchg
adc
loope
ja
daa
imul
addr16
sbb
loope
test
jecxz
xor
jmp
addr16
sbb
jmp
pop
imul
fldenv
lods
daa
in
lods
es
cwde
cdq
mov
call
pslld
pmulhuw
pop
in
outs
mov
mov
mov
push
lods
bound
jnp
mov
test
adc
int
push
bnd
inc
pop
mov
mov
xchg
sub
dec
popa
adc
mov
fimul
adc
lea
bound
sub
jmp
dec
popa
xor
pop
lea
inc
mov
mov
mov
sbb
imul
push
out
mov
(bad)
mov
mov
mov
stc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
mov
sar
repnz
sbb
pop
imul
jno
pop
mov
(bad)
mov
mov
mov
stc
mov
mov
fisub
stc
mov
stc
mov
mov
repnz
mov
mov
mov
mov
repz
xchg
in
jp
mov
mov
jge
sbb
bound
mov
mov
pop
call
and
stc
xchg
jp
stc
mov
xchg
and
repnz
xchg
xor
stc
mov
sub
repnz
cdq
mov
and
data16
test
cdq
pop
sbb
mov
outs
mov
jnp
mov
mov
jge
test
jb
imul
out
sbb
pop
imul
jno
pop
fld
mov
mov
mov
sbb
imul
repnz
mov
loop
mov
mov
mov
dec
out
bound
stc
mov
stc
mov
mov
repnz
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
out
mov
stc
mov
mov
repnz
mov
mov
sbb
pop
imul
repnz
mov
retf
bound
stc
mov
stc
mov
mov
repnz
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
pop
mov
stc
mov
mov
repnz
mov
mov
mov
mov
mov
in
fnstenv
xchg
mov
xor
pop
gs
pop
frstor
out
ins
arpl
pop
sahf
xchg
sub
jmp
sub
xchg
loopne
adc
xchg
daa
ret
sahf
jl
pop
xchg
sbb
xchg
imul
(bad)
in
or
jmp
mov
ret
cmp
or
xchg
in
xchg
stos
xchg
aaa
loope
addr16
sbb
movs
pop
xchg
sbb
sbb
daa
retf
sbb
sbb
ins
lods
cmp
jmp
inc
retf
sti
in
nop
xchg
mov
in
nop
xchg
mov
push
ja
adc
es
sbb
adc
test
jns
aam
ja
sbb
sbb
or
ret
sub
das
loopne
shr
or
pop
sahf
xchg
stos
sub
adc
mov
imul
ins
lods
sub
xor
in
nop
adc
mov
sbb
outs
xchg
daa
call
cdq
dec
mov
lods
fiadd
sbb
or
jmp
movs
xchg
daa
out
fsub
pop
xchg
adc
push
fsubr
addr16
in
inc
cmp
stos
dec
jmp
jmp
movs
or
xchg
cdq
sub
push
imul
mov
lock
fistp
retf
mov
daa
lods
cmps
and
imul
sbb
out
pop
mov
outs
popa
repnz
loop
in
fisub
mov
pop
imul
adc
mov
jmp
pop
imul
and
loopne
sub
adc
mov
popf
cs
mov
pop
imul
mov
and
bound
jo
xchg
mov
addr16
pop
bound
sub
xor
adc
jmp
sbb
pop
sahf
icebp
jle
movs
daa
and
bound
loop
mov
sub
push
or
pop
sahf
push
enter
imul
bound
sub
adc
enter
imul
call
sub
sub
mov
and
push
mov
pop
xchg
push
bound
loopne
mov
sbb
addr16
fsub
mov
mov
imul
daa
mov
sub
mov
ret
and
bound
xchg
xchg
mov
clc
jns
mov
push
(bad)
fistp
fwait
mov
sub
cmps
sub
jmp
push
mov
bnd
bound
jmp
sbb
pop
xchg
icebp
jle
movs
mov
bound
loop
mov
sub
push
or
pop
xchg
push
enter
imul
bound
sub
adc
enter
imul
jmp
loopne
popa
pop
cdq
xchg
ja
aam
bound
jns
daa
jmp
popa
pop
mov
and
push
pop
xchg
push
push
(bad)
pop
imul
and
cmps
and
loopne
pop
xchg
mov
pop
(bad)
pop
bound
mov
and
loop
mov
push
push
call
add
jp
cdq
in
test
lods
daa
repnz
fistp
dec
mov
lods
adc
sbb
sbb
sbb
sbb
sbb
sbb
sub
pop
adc
xchg
daa
inc
sbb
pop
or
outs
(bad)
repnz
imul
jmp
mov
dec
dec
and
mov
shr
idiv
imul
adc
pop
jmp
sahf
cld
jmp
test
popf
in
fsub
pop
sbb
sbb
in
popf
lds
sbb
mov
sbb
(bad)
xchg
out
xchg
in
xchg
scas
repnz
push
imul
jb
loopne
xchg
lock
fist
retf
scas
cdq
movs
pop
loopne
jmp
in
inc
and
xchg
sbb
sbb
aam
xchg
mov
xor
xchg
sbb
test
mov
fadd
xchg
std
daa
popf
in
in
pop
xchg
sbb
pop
xchg
es
mov
in
sbb
xchg
mov
adc
lahf
addr16
in
fsubr
sbb
in
sub
lahf
xchg
in
in
jb
mov
mov
bound
xchg
dec
mov
bound
scas
jo
jo
jo
jo
jo
jb
sbb
in
cdq
out
in
repnz
push
bound
loopne
xchg
out
in
jmp
push
loope
and
cmp
push
push
imul
xchg
out
in
jb
add
add
fistp
in
out
xchg
in
repnz
bound
xchg
scas
xchg
out
in
in
das
sbb
ins
outs
(bad)
pop
imul
xchg
in
in
in
dec
mov
and
bound
imul
mov
in
in
dec
add
bound
jmp
sbb
sbb
fnstcw
lds
sbb
lahf
xchg
in
in
jb
sbb
mov
imul
mov
lds
sbb
sbb
loop
popa
sbb
jmp
fnstcw
xchg
dec
xor
loop
jbe
dec
push
les
loopne
push
loop
fstp
sbb
(bad)
imul
out
pop
xchg
dec
out
pop
xchg
dec
or
add
bound
jo
in
push
popf
outs
popa
repnz
jmp
rcr
sbb
jmp
xchg
xchg
call
loop
jo
jo
in
or
push
imul
and
sbb
dec
loopne
xor
addr16
arpl
loopne
popf
outs
jge
xor
sbb
sbb
in
push
xchg
outs
jb
sbb
popf
outs
popa
repnz
sbb
loope
jno
aas
fnstcw
xchg
cmc
sub
sbb
movs
jo
jo
xchg
sub
xor
sbb
popf
outs
gs
adc
cdq
cmps
add
inc
mov
dec
movs
xor
mov
pop
call
sbb
sbb
sbb
imul
push
xchg
outs
push
int3
push
bound
pusha
ficom
push
pop
fimul
in
push
popf
outs
jne
(bad)
in
or
push
imul
popf
outs
xchg
repnz
imul
jecxz
jmp
outs
sahf
repnz
bound
pop
fisub
inc
mov
cdq
mov
aas
dec
jmp
add
xchg
daa
add
in
daa
pusha
or
bound
sahf
std
jmp
cdq
xchg
movs
fsubr
out
pop
xchg
dec
or
imul
pop
push
xchg
outs
push
push
push
bound
pusha
ficom
push
pop
fimul
dec
aas
jo
jo
in
or
push
bound
pusha
ficom
push
xchg
outs
sahf
repnz
push
bound
pop
fimul
sbb
test
xchg
outs
sahf
repnz
sbb
daa
add
inc
stos
fnstcw
xchg
dec
xor
pop
loopne
dec
loop
fucom
daa
xchg
iret
and
imul
sbb
repnz
jmp
xchg
mov
pop
pop
xchg
outs
dec
xchg
xchg
sbb
pop
and
sbb
frstor
imul
jb
lds
sbb
mov
imul
push
push
fiadd
loop
fst
sbb
xchg
sub
cmp
je
sar
mov
xchg
es
xchg
ja
mov
bound
loopne
xor
dec
xor
inc
frstor
out
test
sahf
xchg
stos
xor
lds
pop
pop
xor
loop
ret
xchg
sbb
repnz
sbb
fisub
call
push
pusha
sbb
pop
sahf
movs
and
bound
sub
push
and
outs
lods
adc
and
outs
inc
xchg
xchg
push
loop
outs
adc
add
pop
jb
imul
(bad)
in
or
jmp
xchg
xchg
daa
out
ret
push
xchg
xchg
sbb
sbb
scas
fwait
(bad)
and
push
pop
loopne
arpl
cmp
pop
or
xchg
daa
out
fcom
loopne
sahf
xchg
mov
call
fwait
daa
out
jo
sbb
inc
cmp
stos
dec
jmp
jmp
inc
popa
movs
mov
jmp
icebp
pop
imul
movs
retf
mov
and
test
bound
loopne
xchg
fwait
xchg
sbb
xchg
icebp
jg
aam
pop
cdq
xchg
imul
adc
sub
jmp
sbb
adc
paddusw
in
sbb
in
lods
pop
and
loop
add
bound
jmp
add
bound
sahf
clc
mov
jmp
jmp
inc
mov
bound
cmps
and
imul
daa
in
pop
call
inc
cmp
stos
dec
jmp
rcl
sbb
fstp
sbb
dec
movs
sbb
ds
fsubr
sbb
mov
bound
xchg
sbb
jmp
call
push
mov
lods
adc
fldenv
pop
sbb
bound
bound
xchg
sbb
pop
cmp
test
sbb
cmp
push
adc
popf
mov
sahf
mov
jmp
mov
cmps
mov
cmps
mov
lahf
in
xchg
test
aad
bound
imul
icebp
pop
imul
pushf
in
jns
sbb
test
xchg
xchg
movs
in
adc
push
push
pop
bound
loopne
arpl
loopne
jmp
(bad)
xchg
out
xchg
test
stos
in
call
scas
jo
xchg
cld
(bad)
popf
out
sbb
in
cdq
cmps
adc
dec
mov
adc
cdq
cmps
adc
push
mov
out
in
repnz
bound
jmp
sbb
adc
imul
xchg
cli
sub
popf
scas
xchg
in
in
xchg
daa
sbb
cmps
adc
mov
sti
in
nop
cdq
cwde
pop
adc
mov
sbb
or
bound
lock
fwait
dec
loop
sahf
in
in
jb
lds
sbb
repnz
pop
imul
jl
imul
stos
in
in
fadd
mov
sti
in
nop
cdq
cwde
pop
adc
or
mov
in
out
in
repnz
pop
imul
push
lds
sbb
in
or
sbb
cmps
adc
mov
sti
in
nop
cdq
cwde
pop
adc
or
mov
in
out
in
repnz
sbb
fisub
xchg
in
(bad)
xchg
out
xchg
out
xchg
scas
repnz
pop
imul
bound
ins
addr16
repnz
bound
sar
sbb
xchg
jecxz
xchg
(bad)
xchg
in
dec
add
pushf
sub
or
lds
sbb
lahf
xchg
in
in
jb
lds
sbb
repnz
sbb
fidiv
and
sbb
adc
imul
xchg
cli
sub
popf
scas
xchg
in
in
jb
sbb
cmps
adc
adc
out
in
repnz
bound
jmp
xchg
scas
repnz
sbb
sahf
jecxz
loopne
addr16
cdq
cli
and
xchg
scas
sahf
in
in
xor
adc
sbb
out
in
bnd
imul
mov
imul
bound
ins
addr16
repnz
bound
sar
sbb
xchg
jecxz
xchg
(bad)
xchg
in
dec
add
movs
sub
bound
je
bound
add
sti
in
nop
dec
or
mov
bound
xchg
dec
mov
les
outs
jns
out
xchg
in
dec
add
mov
pusha
sub
bound
sub
bound
lock
fwait
cdq
xchg
pop
pop
cmp
mov
sti
in
nop
dec
jmp
in
jb
lds
sbb
sbb
fidiv
dec
pop
bound
rcl
bound
imul
xchg
cli
sub
popf
scas
xchg
in
in
pop
and
imul
mov
sub
bound
lock
fwait
cdq
xchg
pop
pop
or
sar
xchg
in
bnd
bound
jmp
sbb
adc
imul
xchg
cli
sub
popf
scas
xchg
in
in
out
and
imul
pop
push
loop
sahf
in
in
jb
les
sbb
repnz
sbb
fidivr
icebp
pop
imul
bound
ins
addr16
mov
scas
sahf
in
in
test
sbb
lods
adc
mov
(bad)
xchg
out
xchg
out
xchg
scas
repnz
adc
bound
ins
addr16
cdq
cli
and
xchg
scas
sahf
in
in
sub
bound
sub
bound
lock
fwait
cdq
xchg
pop
pop
cmp
mov
sti
in
nop
dec
jmp
in
jb
lds
sbb
sbb
fidiv
adc
bound
imul
arpl
imul
popf
sbb
hlt
cmp
loope
shl
lahf
in
icebp
adc
in
cmps
popf
out
sbb
mov
in
loop
in
imul
out
sbb
mov
fbld
pop
xchg
xchg
mov
sti
in
nop
cdq
mov
mov
rcl
fisub
in
sbb
sbb
(bad)
fucom
lahf
in
int
fisttp
dec
out
cmps
imul
cmp
sub
out
cmps
imul
in
pop
imul
xchg
xor
mov
fbld
imul
popf
in
in
out
xchg
in
in
add
lahf
imul
out
xchg
in
dec
add
pop
imul
cdq
lods
add
mov
lock
fwait
cdq
xchg
pop
pop
or
inc
mov
out
in
repnz
bound
jmp
xchg
scas
repnz
pop
imul
bound
ins
addr16
mov
scas
sahf
in
in
cmp
sbb
lods
adc
mov
lock
fwait
cdq
xchg
pop
pop
or
jmp
xchg
in
repnz
pop
bound
jmp
out
call
xchg
in
xchg
in
loop
in
and
cmps
xchg
out
adc
xchg
xchg
out
xchg
out
xchg
cdq
sbb
sbb
jmp
loop
in
repz
bound
jmp
in
adc
imul
sbb
and
loop
in
adc
bound
xchg
xchg
out
xchg
out
in
push
or
pop
bound
xchg
dec
mov
bound
popf
in
in
rcr
sbb
jmp
setae
movs
xchg
out
fwait
scas
adc
sbb
out
imul
out
xchg
out
xchg
in
pop
xchg
in
in
repnz
bound
in
xchg
in
in
repnz
in
fisub
in
jmp
xchg
in
in
add
in
lahf
sahf
in
in
jb
les
sbb
repnz
fidiv
xchg
sbb
in
in
lahf
shl
lahf
in
fmul
mov
lock
fwait
cdq
xchg
pop
pop
or
inc
mov
out
in
repnz
and
push
call
adc
imul
test
scas
xchg
in
in
mov
cmps
adc
mov
sti
in
nop
cdq
cwde
pop
adc
or
mov
in
out
in
repnz
popa
in
jmp
bound
call
sbb
in
lahf
bound
xchg
in
in
loop
in
dec
mov
sahf
in
cdq
lods
push
jmp
xchg
in
in
fisubr
in
in
in
and
xchg
in
repnz
and
push
and
rcl
bound
imul
aas
les
sbb
in
adc
imul
push
in
nop
cdq
cwde
pop
adc
or
mov
(bad)
in
out
in
repnz
xchg
xchg
xor
and
sbb
adc
imul
xchg
cli
sub
popf
scas
xchg
in
in
mov
cmps
adc
sub
xchg
in
repnz
and
sbb
fisubr
or
sbb
adc
imul
sub
jns
sbb
sahf
jecxz
xchg
aam
popf
in
dec
or
pop
bound
push
pop
sbb
cmps
or
mov
sti
in
nop
cdq
cwde
pop
adc
or
pop
(bad)
in
out
in
repnz
sbb
fisub
mov
sbb
push
adc
imul
test
scas
xchg
in
in
cmp
cdq
cmps
adc
mov
sti
in
nop
cdq
cwde
pop
adc
or
mov
in
out
in
repnz
daa
imul
aad
imul
bound
ins
addr16
repnz
daa
bound
sar
sbb
xchg
jecxz
xchg
(bad)
xchg
in
dec
add
mov
lods
or
xor
out
in
repnz
imul
xchg
in
(bad)
xchg
out
xchg
out
xchg
scas
repnz
imul
bound
ins
addr16
cdq
cli
and
xchg
scas
sahf
in
in
cwde
push
sbb
lods
adc
push
mov
(bad)
in
out
in
repnz
fisub
dec
daa
imul
bound
ins
addr16
cdq
cli
and
xchg
scas
sahf
in
in
push
push
sbb
lods
adc
add
out
in
repnz
daa
imul
xchg
xor
bound
rcl
bound
imul
xchg
cli
sub
popf
scas
xchg
in
in
push
pop
sbb
cmps
adc
lahf
mov
xchg
in
out
in
dec
or
mov
bound
(bad)
pop
sbb
cmps
or
mov
sti
in
nop
cdq
cwde
pop
adc
or
mov
in
out
in
repnz
fisub
xchg
xor
les
sbb
in
test
sbb
lods
adc
mov
lock
fwait
cdq
xchg
pop
pop
or
jmp
xchg
in
repnz
bound
jmp
sbb
repnz
sbb
xchg
jecxz
int
fnstsw
bound
ds
(bad)
xchg
in
dec
add
mov
and
sbb
lods
or
mov
lock
fwait
cdq
xchg
pop
pop
or
jmp
xchg
in
repnz
bound
jmp
sbb
in
xor
bound
inc
jmp
imul
cwde
pop
adc
or
mov
in
out
in
repnz
and
loope
popa
repnz
imul
bound
ins
addr16
repnz
sbb
jns
sbb
xchg
jecxz
xchg
(bad)
xchg
in
dec
add
mov
lods
or
retf
(bad)
in
out
in
repnz
imul
bound
jo
jo
jo
jb
sbb
xchg
outs
push
pop
and
loopne
mov
xchg
in
fadd
scas
sahf
in
in
lods
push
sbb
imul
xlat
out
in
in
repnz
out
repnz
and
popf
scas
and
push
sbb
xlat
out
in
repnz
jmp
xchg
in
fdivr
repnz
test
lahf
in
inc
cmp
stos
dec
jmp
call
sbb
jb
loop
loop
frstor
call
sbb
sub
xor
(bad)
and
in
popf
in
in
repnz
bound
add
or
in
in
dec
or
imul
popf
in
fidivr
sub
arpl
sbb
pop
imul
sbb
loop
aad
popf
in
int3
mov
(bad)
sub
or
mov
bound
sbb
sub
cmp
loop
loop
fnstsw
(bad)
call
sbb
dec
movs
jecxz
inc
and
pop
js
(bad)
in
mov
popf
xchg
scas
cdq
mov
push
sbb
test
lahf
repnz
in
pop
popa
xchg
popw
push
lahf
out
out
in
loop
loop
fstp
jmp
cdq
scas
pop
xor
sbb
push
cmp
pop
out
in
repnz
bound
loopne
sbb
xchg
in
scas
leave
out
in
push
push
sbb
aaa
adc
xchg
sbb
xchg
in
dec
arpl
out
dec
imul
xchg
cld
sbb
xchg
xchg
movs
dec
xor
out
xchg
in
in
mov
jne
imul
popf
in
scas
cli
out
in
sbb
sbb
cmp
jmp
in
dec
push
out
in
dec
arpl
out
dec
imul
xchg
cld
xchg
lahf
in
jb
int3
sub
mov
pop
sbb
in
mov
jo
xchg
out
xchg
in
dec
sub
call
das
bound
cmp
or
imul
bound
xchg
dec
or
ffree
and
add
bound
jmp
in
fimul
mov
enter
sub
sbb
jb
sbb
in
sahf
in
in
xchg
in
scas
lahf
in
dec
mov
mov
mov
lahf
in
in
xchg
xchg
in
in
sbb
xchg
in
dec
in
(bad)
out
in
repnz
call
inc
xchg
in
xchg
outs
fs
mov
sbb
test
sbb
mov
in
out
in
dec
mov
push
sbb
xchg
sub
scas
xchg
in
dec
in
sahf
in
in
repnz
bound
or
out
xchg
in
fwait
scas
sbb
jo
xchg
out
xchg
in
dec
and
cmps
push
scas
lahf
(bad)
xchg
in
sbb
fidiv
sbb
mov
popf
xchg
scas
fucom
(bad)
xchg
in
sbb
bound
mov
xchg
in
sbb
cmps
out
xchg
in
outs
jne
movs
lahf
and
jecxz
push
jb
sbb
lahf
(bad)
xchg
in
repnz
popf
in
xchg
out
xchg
in
dec
in
(bad)
xchg
in
jo
jo
jo
jo
jo
jo
xchg
in
out
in
dec
or
or
mov
sbb
xlat
mov
in
repnz
cmc
sti
add
popf
scas
std
out
in
or
(bad)
sub
out
lahf
xchg
in
in
repnz
sub
jns
out
xchg
in
sbb
loop
fucom
lahf
sahf
in
in
jb
(bad)
and
sbb
adc
sbb
adc
popf
sbb
lahf
or
xchg
in
pop
sbb
imul
jo
sbb
sbb
add
bound
jmp
outs
arpl
jmp
bound
sahf
std
jmp
or
fisttp
push
push
out
in
dec
xor
lods
bound
add
or
pop
bound
xchg
dec
mov
in
cdq
lods
push
pop
in
sbb
dec
cdq
mov
loopne
mov
mov
bound
imul
lahf
in
sbb
lahf
fucom
popf
in
repnz
imul
bound
aas
repnz
imul
(bad)
out
in
rcr
in
mov
fldcw
imul
popf
in
sbb
loop
loop
fnsave
inc
cmp
stos
push
bound
jmp
idiv
xor
loop
jbe
dec
sbb
add
loop
std
loopne
xchg
xchg
scas
sub
adc
xchg
mov
in
push
mov
pop
sbb
stos
jl
dec
xchg
in
or
xchg
mov
dec
sbb
mov
fwait
xchg
aad
xchg
adc
mov
fimul
sbb
xchg
or
or
or
movs
sub
adc
mov
xchg
xchg
movs
jo
xchg
daa
add
xchg
xchg
pop
cmp
mov
imul
pop
adc
jmp
pop
sbb
sbb
ins
lods
sub
out
pop
outs
pop
and
pop
push
sbb
pop
or
daa
in
pop
fs
lods
aaa
out
pop
jb
cmp
inc
sub
jmp
push
adc
es
adc
mov
fimul
xchg
sub
push
push
sbb
daa
loop
jo
dec
add
bound
bnd
imul
push
loop
fisttp
in
repnz
imul
xor
and
bound
aas
repnz
imul
cmp
mov
mov
mov
aas
dec
jmp
adc
push
lahf
fdivrp
xchg
in
add
(bad)
bound
in
fdivrp
xchg
in
xchg
in
fiadd
jl
pop
(bad)
sbb
fsubr
data16
sti
sbb
jmp
pop
loop
fnstsw
in
fimul
bound
jmp
in
rol
push
or
inc
imul
(bad)
xchg
in
fstp
and
aaa
fucom
cmps
mov
popf
pop
jbe
bound
xchg
dec
out
lahf
test
dec
mov
outs
pop
fwait
sahf
add
imul
in
dec
push
sbb
cmps
adc
pop
add
xchg
in
outs
gs
xor
sahf
std
jmp
sar
popf
in
fst
sub
data16
int
mov
fnstcw
xchg
xor
push
sub
cmp
fsubr
sbb
test
xchg
xchg
movs
xor
push
arpl
imul
jmp
jmp
sbb
jmp
add
jmp
push
cmps
popf
in
fisubr
cmp
and
cmp
xor
fisub
and
sbb
lds
lds
jmp
mov
sbb
push
push
sbb
cmps
adc
mov
sti
in
nop
cdq
cwde
pop
adc
or
mov
xchg
in
sbb
sbb
bound
fs
and
sti
in
nop
cdq
cwde
pop
adc
mov
sbb
lock
fwait
dec
in
(bad)
cli
xchg
in
jb
(bad)
and
in
(bad)
cli
xchg
in
repnz
sub
jmp
sbb
adc
imul
xchg
cli
sub
out
lahf
imul
stc
sub
loope
popa
jb
lds
sbb
lahf
imul
in
imul
xchg
in
(bad)
xchg
out
mov
popf
xchg
scas
repnz
sub
fist
imul
loope
ins
addr16
cdq
cli
and
in
(bad)
cli
xchg
in
repnz
bound
jmp
sbb
adc
imul
popf
sub
fstp
sbb
sahf
jecxz
xchg
aam
and
dec
or
pop
bound
xchg
dec
mov
pop
sbb
lods
or
lds
sbb
lahf
imul
inc
lds
sbb
lahf
imul
mov
imul
shr
imul
bound
ins
addr16
cdq
cli
and
in
(bad)
cli
xchg
in
repnz
fisubr
arpl
and
in
(bad)
cli
xchg
in
repnz
bound
jmp
sbb
adc
imul
bound
ins
addr16
cdq
cli
and
in
(bad)
cli
xchg
in
repnz
sub
jmp
sbb
lahf
(bad)
cli
xchg
in
repnz
bound
jmp
sbb
adc
imul
inc
sub
fstp
sbb
sahf
jecxz
xchg
aam
and
dec
or
pop
bound
xchg
dec
mov
sbb
lods
or
xor
sbb
xor
sbb
lods
adc
mov
lock
fwait
cdq
xchg
pop
pop
push
add
sbb
out
mov
popf
dec
adc
cmps
adc
jmp
mov
bound
xchg
dec
mov
pop
sbb
lods
adc
mov
lock
fwait
cdq
xchg
pop
pop
push
add
sbb
out
mov
popf
dec
adc
cmps
adc
add
mov
popf
dec
sub
push
sbb
push
in
nop
cdq
cwde
pop
adc
or
mov
xchg
in
sbb
xchg
pop
sbb
lods
adc
hlt
inc
push
bound
xchg
outs
outs
xchg
in
sbb
xor
pop
bound
xchg
dec
mov
bound
pop
sbb
arpl
bound
lock
fwait
cdq
xchg
pop
pop
push
add
sbb
out
mov
popf
dec
sbb
adc
sbb
mov
popf
dec
sub
cmps
adc
ret
imul
mov
repnz
bound
rcl
bound
imul
xchg
cli
sub
out
lahf
imul
cdq
sub
loope
popa
repnz
imul
bound
call
sbb
in
dec
or
sbb
mov
lods
or
mov
lock
fwait
cdq
xchg
pop
pop
push
add
sbb
out
mov
popf
dec
cmp
mov
sbb
mov
imul
mov
bound
lock
fwait
cdq
xchg
pop
pop
push
add
sbb
out
mov
popf
dec
cmp
adc
mov
sti
in
nop
cdq
cwde
pop
adc
mov
sbb
or
bound
lock
fwait
dec
in
(bad)
cli
xchg
in
jb
(bad)
and
in
(bad)
cli
xchg
in
repnz
sub
jmp
sbb
lahf
(bad)
cli
xchg
in
bnd
bound
jmp
jo
jo
jo
jb
sbb
xor
clc
bound
loopne
sahf
lds
pusha
bound
in
(bad)
cli
xchg
in
bnd
bound
add
out
cmps
xchg
lds
cmps
imul
xlat
out
in
repnz
bound
xchg
scas
sahf
lds
sbb
test
jmp
xchg
in
fdiv
inc
cmp
stos
dec
jmp
call
sbb
dec
movs
sub
pop
jmp
inc
loop
fucomp
mov
bound
lahf
fwait
xchg
xchg
bound
shl
sbb
dec
push
cmp
mov
sbb
xchg
std
loopne
out
xchg
in
fld
dec
mov
inc
sbb
jl
popf
in
sbb
imul
popf
in
or
sbb
lahf
(bad)
out
in
repnz
xor
sbb
push
arpl
imul
mov
(bad)
sub
or
imul
popf
in
fiadd
test
sbb
ins
sbb
in
sahf
in
in
xchg
in
scas
lahf
in
dec
mov
bound
sahf
std
jmp
jmp
fstp
in
xchg
out
xchg
in
dec
or
cmps
push
pusha
fisubr
adc
bound
add
out
xchg
in
dec
xor
popf
dec
in
sahf
in
in
repnz
sbb
xchg
out
xchg
in
xchg
xchg
xor
jo
xchg
out
xchg
in
dec
add
cmps
push
loopne
dec
loop
frstor
in
sbb
scas
lahf
xchg
xchg
in
sbb
loope
icebp
out
in
outs
jle
scas
lahf
mov
xchg
in
sbb
loop
loop
fucomp
lahf
shl
popf
in
repnz
xchg
in
xchg
in
mov
out
lahf
shl
popf
in
jo
jo
jo
jo
jo
jo
xchg
out
xchg
in
dec
add
mov
inc
sbb
test
sbb
fdiv
mov
jno
sbb
mov
popf
xchg
scas
in
mov
jnp
and
add
pop
imul
dec
sbb
cmps
or
in
icebp
inc
fwait
movs
pop
push
sbb
in
out
in
dec
or
pop
(bad)
sbb
fsubr
sbb
or
push
(bad)
sbb
lahf
sbb
nop
in
gs
in
es
in
adc
(bad)
jmp
bound
sbb
in
repnz
in
dec
adc
call
jb
(bad)
sub
out
lahf
stc
out
in
repnz
xchg
in
fisub
popf
in
sbb
movs
sbb
in
out
loope
in
dec
or
ins
sahf
fstp
bound
add
popf
scas
std
out
in
lahf
out
loope
in
repnz
bound
in
(bad)
out
in
in
mov
int3
xchg
in
fsubr
in
(bad)
sbb
in
pop
dec
sbb
imul
inc
sbb
add
mov
call
lods
push
imul
xor
adc
xor
loop
(bad)
out
in
icebp
push
dec
jmp
push
mov
int
in
fisub
inc
xchg
in
xchg
sub
dec
popf
scas
std
out
in
int3
mov
xchg
cdq
cmps
push
loopne
xchg
std
loopne
push
loope
in
fnstsw
repnz
xor
movs
lahf
cmc
out
in
sbb
in
(bad)
out
in
repnz
bound
add
popf
scas
int
popf
in
and
imul
lahf
in
bnd
imul
popf
in
inc
cmp
stos
push
bound
jmp
idiv
xor
loop
push
dec
es
std
loopne
call
sbb
sub
popf
outs
repnz
imul
sbb
or
outs
dec
sbb
movs
dec
aas
bnd
imul
(bad)
in
mov
xor
jo
bound
xchg
outs
outs
xchg
cmp
sbb
imul
xchg
sub
xor
dec
or
pop
bound
jo
repnz
xor
loopne
jmp
pop
loop
fld
in
repnz
bound
in
sahf
dec
aas
repnz
cmp
add
sahf
icebp
outs
xchg
call
inc
stos
fnstcw
xchg
adc
dec
dec
ror
xchg
in
out
in
xchg
movs
jo
in
adc
xchg
movs
xchg
xchg
sbb
outs
ins
sub
adc
push
dec
mov
inc
sbb
push
lahf
arpl
xchg
in
repnz
outs
daa
xchg
in
sbb
or
fstp
inc
bound
add
xor
lock
loopne
mov
cmp
xchg
ins
xor
call
sbb
xor
push
lods
daa
in
jb
(bad)
sub
out
pop
popf
dec
mov
out
xor
jb
sbb
popf
das
jmp
push
dec
sbb
aad
xchg
cdq
mov
shr
out
pop
popf
dec
mov
lods
add
pop
popf
dec
or
add
sbb
push
neg
repnz
bound
call
sbb
sub
loope
fs
inc
mov
fdiv
jo
call
jo
jo
jo
jo
jo
jo
jo
jo
jb
sbb
or
add
or
or
xchg
scas
jo
dec
add
popf
das
in
mov
dec
sbb
xchg
mov
sbb
push
das
mov
inc
sbb
push
das
loop
sub
mov
bound
dec
or
xchg
das
dec
test
sbb
jo
dec
or
xchg
das
jle
sub
mov
bound
scas
jo
dec
add
popf
das
inc
test
sbb
jo
dec
add
popf
das
dec
test
sbb
jo
dec
add
popf
das
stc
mov
dec
sbb
arpl
popf
das
sbb
sbb
imul
or
xchg
das
push
sub
mov
dec
sbb
push
das
xchg
xchg
sbb
jo
dec
or
xchg
das
idiv
dec
sbb
push
das
cli
mov
dec
sbb
xchg
sbb
fnstcw
xchg
movs
test
push
jmp
sahf
std
jmp
xchg
xchg
movs
jo
in
repnz
pop
(bad)
sbb
cmp
pop
imul
out
das
mov
dec
sbb
xchg
in
call
bound
retf
pop
imul
out
das
loop
sub
mov
sbb
xchg
sub
in
ss
pop
imul
sar
pop
bound
pushf
and
add
popf
das
inc
test
sbb
jo
in
push
neg
repnz
sbb
pop
bound
pushf
and
add
popf
das
jne
and
sbb
sahf
in
xor
pop
imul
shl
bound
pushf
and
add
popf
das
inc
test
sbb
jo
in
cmp
pop
imul
shl
pop
bound
pushf
and
add
popf
das
dec
test
sbb
xchg
call
in
sahf
enter
xor
sbb
push
std
pop
imul
out
das
out
sub
mov
bound
fnstenv
xchg
mov
(bad)
xor
jne
imul
outs
popa
repnz
in
fadd
idiv
lahf
xchg
in
cdq
lods
or
adc
pop
bound
imul
sbb
daa
jmp
bound
scas
jo
in
cs
pop
imul
xor
xor
cdq
dec
or
add
or
imul
mov
sbb
mov
sbb
sub
sbb
sbb
sbb
jo
xchg
daa
loop
pop
xchg
cdq
cmp
jb
sbb
dec
add
mov
shr
or
and
test
sbb
sbb
sbb
sbb
sbb
mov
bound
cdq
cdq
mov
jo
jo
jb
sbb
dec
or
mov
bound
shl
add
mov
or
or
add
or
add
or
add
or
add
or
imul
repnz
aas
bound
loopne
jecxz
mov
sbb
pop
in
push
neg
repnz
bound
add
popf
das
pop
test
sbb
sbb
sbb
or
sub
sbb
or
sbb
add
pop
imul
sbb
mov
or
xchg
das
push
test
sbb
sbb
sbb
or
cmp
imul
sbb
or
mov
bound
shl
add
mov
dec
sbb
leave
mov
popf
das
pop
test
sbb
sbb
sbb
or
retf
push
sbb
add
or
imul
and
add
mov
repnz
bound
retf
pop
imul
push
neg
jo
in
pop
leave
pop
bound
jb
sbb
or
jb
sbb
or
shl
add
mov
jge
and
add
popf
das
pop
test
sbb
sbb
sbb
jle
jle
mov
sbb
jbe
push
loop
add
mov
shr
or
cmp
xchg
sbb
pusha
mov
bound
jb
sbb
xor
inc
bound
add
pop
imul
sbb
sbb
jo
in
neg
jo
in
jp
pop
bound
sbb
add
or
adc
sbb
dec
or
mov
bound
shl
add
mov
dec
sbb
jmp
loop
loop
fisttp
sbb
sbb
sbb
sbb
ss
jb
sbb
or
sbb
dec
add
mov
shr
or
sbb
dec
test
sbb
jo
in
neg
jo
in
pop
leave
pop
bound
jo
jb
sbb
add
sbb
bound
imul
jb
shl
add
mov
stc
mov
xchg
cmp
or
xchg
das
push
test
sbb
sbb
sbb
or
fwait
bound
imul
push
push
sbb
add
pop
imul
sbb
mov
or
xchg
das
push
test
sbb
sbb
sbb
or
jge
add
bound
sbb
add
bound
cmp
shr
or
mov
bound
repnz
shr
pop
bound
in
neg
jo
in
pop
leave
pop
bound
jb
sbb
or
push
jb
sbb
or
mov
bound
shl
add
mov
dec
sbb
cdq
xchg
sbb
loop
loop
fisttp
sbb
sbb
sbb
sbb
or
dec
or
sbb
leave
sbb
add
bound
cmp
shr
or
mov
bound
repnz
cmp
ror
in
neg
jo
in
jp
pop
bound
jb
sbb
or
jge
bound
jmp
pop
bound
shl
add
pusha
sbb
xor
imul
bound
in
neg
jo
in
jp
pop
bound
jb
sbb
or
imul
bound
jmp
pop
bound
shl
add
pusha
sbb
jne
imul
bound
scas
jo
in
cs
pop
imul
pop
imul
sbb
or
add
bound
sub
or
mov
bound
sbb
add
dec
test
sbb
sbb
sbb
sbb
sbb
add
jle
out
imul
bound
jmp
pop
bound
shl
add
pusha
sbb
std
cmp
sar
pop
bound
in
neg
jo
in
pop
leave
pop
bound
jb
sbb
or
ja
bound
jmp
pop
bound
ret
and
add
mov
bound
xor
cmp
sbb
xchg
scas
repnz
xchg
in
inc
mov
cdq
mov
aas
dec
(bad)
dec
fimul
fwait
xchg
sbb
xchg
shr
popf
outs
popa
repnz
in
xchg
in
fadd
idiv
setle
popf
cdq
lods
or
adc
pop
bound
scas
jo
in
adc
pop
imul
out
pop
cdq
dec
xor
test
mov
imul
push
test
sbb
sbb
xchg
daa
out
pop
xchg
dec
loop
call
jo
jb
sbb
dec
add
mov
shr
or
imul
repnz
bound
retf
pop
imul
pop
imul
pop
xchg
xor
jmp
or
add
bound
sub
or
mov
bound
repnz
imul
bound
imul
pop
imul
pop
imul
pop
xchg
xor
jmp
or
add
bound
sub
or
mov
bound
repnz
cmp
sar
bound
jo
jo
jo
jo
jo
jo
jo
jo
jb
sbb
or
add
or
add
mov
scas
jo
dec
add
popf
das
ins
test
sbb
jo
in
cs
pop
imul
pop
imul
jo
jb
sbb
dec
or
mov
bound
shl
add
mov
jbe
bound
loopne
push
loop
fisttp
pusha
mov
bound
jb
sbb
popf
das
add
pop
shr
or
add
sbb
push
repnz
pop
(bad)
adc
repnz
jg
bound
jb
sbb
popf
das
add
jbe
imul
sbb
sbb
jo
in
neg
jo
in
jp
pop
bound
sbb
add
or
add
sbb
xor
lds
sbb
lahf
mov
repnz
add
ret
pop
imul
push
neg
jo
in
jp
pop
bound
sbb
add
or
add
sbb
dec
or
mov
bound
shl
add
mov
ja
bound
xor
in
cs
pop
imul
pop
imul
sbb
je
push
push
sbb
add
pop
imul
sbb
mov
jmp
pop
loop
fld
sbb
sbb
sbb
sbb
or
jge
popf
bound
imul
sbb
xor
shl
add
mov
repnz
bound
retf
pop
imul
pop
imul
pop
imul
sbb
mov
push
jb
sbb
add
mov
shr
or
sbb
xchg
sbb
sbb
sbb
sbb
sbb
or
dec
or
leave
sbb
add
bound
cmp
shr
or
mov
bound
repnz
pop
bound
in
neg
jo
in
pop
leave
pop
bound
jb
sbb
or
imul
bound
imul
jb
shl
add
mov
je
bound
add
popf
das
pop
test
sbb
sbb
sbb
or
out
sbb
xchg
sbb
add
sbb
xor
ret
and
add
mov
repnz
bound
retf
pop
imul
pop
imul
pop
imul
sbb
aaa
or
add
bound
sub
or
mov
bound
sbb
cmp
vphsubdq
xchg
push
bound
add
popf
das
pop
test
sbb
sbb
sbb
add
xor
pop
or
add
bound
sub
or
mov
bound
sbb
cmp
dec
test
sbb
sbb
sbb
sbb
sbb
add
jle
inc
add
or
imul
mov
sbb
mov
jne
bound
add
popf
das
pop
test
sbb
sbb
sbb
or
bound
sbb
add
sbb
xor
ret
and
add
mov
repnz
bound
retf
pop
imul
jmp
inc
loop
fld
inc
cmp
stos
dec
jmp
jmp
clc
sbb
add
imul
sbb
sbb
sbb
sbb
sbb
loop
sbb
mov
cdq
pushf
in
sahf
neg
imul
jmp
fchs
loop
loop
fnsave
enter
jmp
push
imul
xor
sub
xor
sbb
or
fstp
jb
sbb
cmp
add
sahf
imul
or
pop
bound
ret
and
xchg
outs
outs
in
adc
cdq
lods
add
pop
xchg
adc
jo
xchg
daa
loop
in
or
daa
(bad)
pop
imul
mov
in
cdq
lods
add
cdq
push
sbb
mov
cmp
dec
loopne
jecxz
popa
sbb
cmp
jbe
jl
scas
mov
sbb
shr
in
in
repnz
imul
jmp
xor
ins
sbb
sti
in
nop
xchg
mov
xor
loop
xchg
sbb
or
cmps
rcr
xchg
out
xchg
in
dec
cmp
pop
in
outs
jae
mov
and
in
(bad)
in
in
repnz
jmp
or
out
fstp
xchg
in
sbb
in
jle
bound
imul
and
in
(bad)
in
in
repnz
bound
jmp
or
sub
pop
bound
xchg
dec
mov
jle
bound
js
sub
imul
leave
or
xchg
sbb
rcr
xchg
out
xchg
in
dec
or
out
xchg
in
xchg
scas
call
jmp
in
in
repnz
popf
adc
or
in
sbb
inc
jle
bound
js
mov
lahf
imul
and
xchg
adc
or
sbb
pop
imul
jne
imul
outs
outs
js
inc
test
sbb
lahf
imul
ins
or
xchg
pop
pop
or
and
pop
imul
je
imul
and
in
(bad)
in
in
repnz
sbb
sbb
sbb
pop
mov
ret
sub
out
lahf
imul
bound
in
jb
ret
and
add
test
sbb
jb
cmp
js
imul
call
ss
in
inc
cmp
stos
push
bound
push
dec
ds
pop
adc
mov
call
dec
mov
sbb
xor
repnz
xchg
in
fisub
mov
dec
adc
inc
xor
data16
xchg
imul
add
xchg
xchg
sub
ins
bound
sahf
cld
jmp
(bad)
in
popf
in
fmul
push
in
not
or
sbb
fadd
bound
rcl
xchg
jecxz
(bad)
xchg
loop
in
cmps
call
jb
test
sbb
lahf
(bad)
in
xchg
in
repnz
sbb
cmps
xchg
loop
in
outs
js
movs
test
sbb
lahf
test
popf
in
repnz
punpckhwd
jmp
inc
jmp
xchg
in
outs
js
test
test
popf
in
repnz
imul
popf
in
outs
jae
push
lahf
(bad)
in
xchg
in
repnz
punpckldq
jmp
in
outs
js
jnp
sub
out
lahf
test
popf
in
repnz
imul
bound
jmp
in
outs
js
push
test
test
popf
in
repnz
imul
popf
in
outs
jae
es
(bad)
in
xchg
in
repnz
bound
jmp
in
outs
js
push
test
test
popf
in
repnz
punpckhwd
jmp
push
cmps
xchg
loop
in
outs
js
jmp
lahf
test
popf
in
repnz
sbb
cmps
call
jb
test
(bad)
in
xchg
in
repnz
bound
jmp
in
outs
js
stos
test
test
popf
in
repnz
imul
jmp
mov
popf
in
fsub
cmps
call
jb
test
(bad)
in
xchg
in
repnz
bound
jmp
in
outs
js
popa
scas
sub
out
lahf
test
popf
in
repnz
push
imul
popf
in
outs
jae
dec
scas
and
in
(bad)
in
xchg
in
repnz
bound
add
pop
imul
(bad)
in
xchg
xchg
in
(bad)
xchg
out
sahf
in
xchg
scas
jb
mov
fistp
repnz
in
fidiv
in
repnz
in
call
sbb
in
popf
in
adc
bound
scas
fwait
movs
jg
sbb
mov
bound
mov
mov
adc
lahf
mov
xchg
in
fisub
mov
push
push
bound
xchg
sbb
movs
sbb
jmp
in
adc
imul
dec
sbb
movs
lahf
xchg
out
in
xchg
out
xchg
in
dec
add
mov
out
in
dec
adc
inc
sbb
test
xchg
xchg
movs
cdq
aam
call
and
imul
mov
xchg
sbb
test
mov
and
loop
in
adc
imul
or
inc
ret
and
in
sahf
in
in
repnz
call
sbb
mov
pop
bound
ret
and
in
sahf
loop
in
repnz
or
jp
and
push
imul
popf
in
bnd
imul
jmp
mov
fsubr
lahf
xchg
loop
in
jb
ret
sub
out
lahf
xchg
in
in
repnz
imul
bound
xchg
dec
mov
jle
bound
xchg
in
in
repnz
punpckhwd
out
lahf
xchg
out
in
fisub
in
sahf
loop
in
jb
ret
in
sahf
loop
in
repnz
bound
jmp
out
in
dec
cmp
and
in
sahf
out
in
repnz
popf
in
fisubr
test
sbb
in
out
in
cdq
mov
or
sbb
xchg
in
loop
in
mov
xchg
cld
loopne
mov
xchg
in
fsubr
cmps
call
sub
xlat
loop
in
jb
mov
mov
out
in
dec
and
cmps
or
xchg
rcr
xchg
out
xchg
in
dec
xor
out
xchg
in
dec
xor
out
sahf
in
icebp
dec
xchg
out
sahf
in
call
dec
outs
jns
out
sahf
in
fsubr
pop
sahf
in
in
icebp
in
ret
popf
cdq
aam
xchg
in
sbb
adc
popf
scas
xchg
loop
in
lahf
sahf
in
in
jb
ret
in
sahf
in
in
repnz
bound
jmp
in
dec
mov
jp
bound
xchg
xchg
(bad)
xchg
in
dec
sub
popf
xchg
adc
pop
mov
jnp
bound
xchg
mov
xchg
cld
loopne
scas
in
xchg
in
fsub
lahf
sahf
loop
in
in
out
call
sbb
lahf
xchg
loop
in
repnz
imul
popf
in
xchg
fucomip
xchg
in
xchg
adc
push
jae
imul
popf
scas
popf
loop
in
movs
adc
jo
jo
repnz
repnz
lahf
sahf
out
in
dec
xchg
scas
mov
xchg
in
mov
lods
push
jmp
pusha
fisubr
outs
out
in
scas
mov
xchg
in
dec
jnp
bound
imul
xor
inc
xor
mov
xchg
xchg
sub
mov
sbb
std
stos
and
add
or
imul
(bad)
hlt
xchg
in
ficomp
or
add
mov
jge
bound
ret
loopne
jmp
test
sbb
sbb
sbb
call
sbb
dec
hlt
pop
(bad)
sbb
in
sbb
repnz
js
(bad)
pop
or
cmp
jns
imul
jmp
add
arpl
imul
push
mov
sbb
mov
pop
bound
xchg
dec
mov
repnz
cdq
lods
or
xchg
sbb
in
add
sbb
outs
fstp
adc
sbb
sbb
fnstcw
imul
bound
cmp
cwde
sbb
mov
fucom
(bad)
xchg
cwde
xchg
cld
mov
out
test
popf
sbb
sbb
fbld
fmul
and
jb
loopne
xchg
lock
fist
retf
scas
cdq
movs
jnp
call
(bad)
in
call
jecxz
aad
xchg
in
adc
(bad)
icebp
sub
bound
scas
lahf
int
xchg
in
repnz
push
bound
loopne
xchg
fsubr
ins
fsubr
mov
in
sub
pop
xchg
out
test
popf
dec
add
scas
ret
out
lahf
retf
in
repnz
imul
shl
in
xchg
in
stos
mov
xchg
dec
mov
sbb
in
mov
mov
in
fwait
call
mov
sbb
out
lahf
retf
in
repnz
or
jmp
push
sbb
jb
ret
add
movs
ret
or
pop
(bad)
sbb
ret
loopne
out
cmps
or
popf
in
das
data16
sub
fstp
imul
or
stc
mov
mov
mov
jp
bound
xchg
xchg
push
pop
mov
sbb
call
sbb
mov
pop
imul
cmp
pop
(bad)
sbb
ret
loopne
out
cmps
mov
popf
in
das
loop
sub
fstp
imul
or
stc
mov
mov
test
sbb
cdq
lods
pop
out
cmps
xlat
neg
int3
sub
fist
imul
mov
jo
jo
jo
jo
jo
jb
sbb
or
neg
repnz
bound
loopne
(bad)
jo
jo
jo
dec
mov
sub
popf
adc
ror
lahf
fdiv
popf
in
repnz
xchg
fdiv
popf
in
rcr
sbb
or
in
fimul
fild
xchg
outs
(bad)
repnz
sbb
pop
ror
sbb
jmp
and
bound
in
fimul
lahf
xlat
cmc
xchg
in
repnz
bound
in
xlat
cmc
xchg
in
rcl
sbb
jecxz
sbb
outs
ror
aam
(bad)
in
dec
popf
outs
(bad)
sbb
sbb
pop
fimul
sbb
jmp
mov
sbb
lods
jne
sbb
neg
not
outs
(bad)
repnz
pop
bound
in
add
sbb
pop
mov
mov
sbb
pop
scas
xchg
ins
jmp
pop
imul
(bad)
fcom
mov
mov
mov
imul
ins
sbb
daa
retf
mov
jo
repnz
imul
repnz
shl
xchg
in
lahf
fincstp
popf
in
fldenv
sbb
daa
fisubr
bound
scas
pop
stos
sbb
bound
stos
xchg
daa
cmps
cmp
adc
xchg
das
push
test
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
bound
shl
add
mov
repnz
std
pop
imul
and
add
or
add
(bad)
jae
popf
in
fisub
and
bound
push
sbb
jmp
ret
sub
sbb
sub
xor
push
lahf
into
not
push
outs
sbb
arpl
(bad)
into
not
hlt
popf
in
sbb
loopne
dec
ret
out
lahf
shl
popf
in
xchg
out
xchg
popf
dec
add
pop
imul
dec
fstp
jb
sbb
adc
sbb
sub
(bad)
(bad)
pop
imul
inc
mov
in
jmp
in
retf
in
jo
jo
jb
push
sbb
sbb
sbb
dec
mov
sbb
in
mov
in
dec
or
add
or
sbb
jo
jo
repnz
repnz
imul
arpl
imul
pop
imul
mov
in
xchg
mov
xchg
mov
xchg
sub
xor
clc
adc
sbb
sbb
sbb
sbb
pop
lea
xor
sbb
test
inc
stos
fdivr
aaa
xchg
mov
bound
dec
fstp
ins
retf
xor
sbb
xchg
movs
xchg
sub
loope
jns
out
push
cdq
call
sbb
daa
js
bound
data16
pop
sbb
pop
or
bound
daa
jae
imul
bound
push
and
imul
bound
jmp
adc
imul
das
add
xchg
xchg
xchg
out
xchg
in
xchg
xchg
sbb
shr
popf
scas
and
xchg
xchg
cdq
cmps
or
lahf
xchg
xchg
in
lahf
mov
in
(bad)
xchg
in
repnz
bound
pusha
fisubr
in
sbb
in
cmps
out
in
in
pop
ret
repnz
ficomp
out
in
lahf
mov
xchg
in
repnz
xchg
not
xchg
in
xor
ficomp
outs
jbe
out
xchg
in
xor
ret
xchg
cdq
mov
loop
mov
xchg
in
(bad)
mov
retf
add
jmp
in
lahf
mov
xchg
in
(bad)
lahf
in
xor
into
xchg
in
dec
add
or
xchg
das
es
sbb
xchg
xor
jle
pop
bound
data16
lock
fstp
mov
loopne
push
loop
fucom
aas
or
call
sbb
popf
das
add
mov
xchg
inc
loop
sbb
out
outs
sbb
pop
jb
pop
imul
cmp
and
dec
loop
ffree
sbb
pop
bound
sub
ins
lahf
pop
sbb
mov
sbb
inc
sbb
std
pop
imul
popf
outs
popa
repnz
sahf
std
jmp
and
mov
outs
sbb
sub
jmp
popf
in
in
frstor
xor
pop
pop
stc
mov
pop
pop
sbb
es
pop
pop
and
sbb
xchg
sbb
mov
pop
pop
adc
push
pop
pop
leave
mov
pop
pop
test
sbb
test
sbb
enter
or
xchg
outs
jb
fcom
bound
loop
xchg
in
in
pop
adc
or
leave
mov
pop
pop
pop
and
sbb
or
sbb
mov
xchg
in
sbb
push
bound
call
sbb
mov
imul
mov
repnz
bound
loopne
xchg
xchg
in
daa
outs
sbb
xchg
sub
sbb
out
lahf
xchg
in
in
in
repnz
pop
(bad)
sbb
cmps
lahf
in
in
outs
dec
jo
jo
jb
ret
or
and
push
repnz
pop
(bad)
sbb
nop
out
xchg
in
xchg
in
jmp
in
fsub
call
jmp
sbb
in
and
jb
sbb
out
lahf
xchg
in
in
in
sahf
enter
add
bound
in
lahf
in
in
rcl
sbb
jecxz
loop
push
aaa
sti
and
in
lahf
in
in
repnz
mov
daa
xchg
in
sbb
or
add
or
mov
bound
repnz
imul
and
add
pop
imul
(bad)
in
mov
popf
xchg
scas
xchg
out
xchg
in
dec
in
xchg
out
in
jb
ret
in
xchg
out
in
repnz
bound
jmp
sbb
lahf
lahf
in
in
in
push
neg
repnz
imul
popf
in
outs
inc
jo
jo
jb
ret
add
mov
sbb
pop
push
neg
repnz
imul
bound
xchg
cdq
stos
in
call
xchg
or
cmp
sbb
sbb
std
mov
imul
sbb
sbb
repz
push
bound
scas
lahf
sahf
in
in
icebp
push
adc
popf
in
sahf
addr16
in
es
data16
fs
jo
jo
jb
int
sbb
sbb
in
push
neg
repnz
push
sbb
in
out
in
sbb
lahf
xchg
in
in
or
mov
imul
popf
in
xchg
out
xchg
in
dec
add
mov
jmp
in
dec
and
or
in
sbb
out
xchg
in
dec
xchg
das
loop
sub
mov
popa
sbb
aam
pushf
in
sbb
cmp
sbb
sbb
fnsave
repnz
bound
xchg
das
loop
sub
mov
popa
sbb
sahf
sbb
in
lahf
in
in
xchg
in
jmp
in
dec
or
mov
bound
xchg
dec
mov
bound
bound
imul
pushf
in
dec
popf
das
inc
test
sbb
call
sbb
or
add
or
imul
popf
das
inc
test
sbb
repz
imul
bound
in
lahf
in
in
xchg
in
jmp
in
dec
or
in
jmp
in
dec
mov
lods
or
in
sbb
in
out
in
dec
popf
das
inc
test
sbb
call
sbb
or
add
or
pop
bound
repnz
imul
and
sub
dec
sbb
out
xchg
xchg
in
in
rcr
sbb
loope
push
inc
jo
jo
jb
int
sbb
sbb
in
xor
pop
imul
mov
imul
fsubr
loope
in
sbb
loope
in
nop
in
pop
lahf
in
in
sub
cmp
sbb
sbb
ss
bnd
imul
and
sbb
fistp
imul
popf
in
nop
out
xchg
in
es
fistp
imul
xchg
out
in
jb
ret
in
xchg
out
in
repnz
adc
jmp
sbb
lahf
lahf
in
in
in
cmp
pop
imul
loop
xchg
in
in
outs
inc
jo
jo
jb
int
sbb
sbb
in
cmp
pop
imul
mov
sbb
in
loopne
in
sbb
loopne
in
nop
in
pop
lahf
in
in
sub
cmp
sbb
sbb
hlt
mov
repnz
dec
test
sbb
repz
imul
popf
in
xchg
out
out
in
cdq
mov
sbb
nop
adc
popf
in
fcom
mov
cmc
adc
imul
popf
in
xchg
out
xchg
in
dec
add
mov
jmp
in
dec
and
cmps
or
repnz
imul
lahf
in
xchg
out
xchg
in
xchg
scas
jo
jo
jo
jo
jo
jb
sbb
add
pop
imul
jmp
cdq
in
in
sbb
sbb
sbb
in
mov
imul
out
pop
pop
and
jmp
sbb
jmp
add
out
pop
dec
or
lock
(bad)
in
jmp
imul
mov
xchg
in
jo
jb
cli
sub
popf
scas
cdq
in
in
mov
sbb
out
jmp
in
cdq
mov
sbb
nop
jo
xchg
cld
neg
xchg
hlt
jmp
in
dec
popf
scas
cdq
in
in
call
in
neg
sbb
jmp
xchg
in
repnz
bound
xchg
scas
xchg
in
in
in
sbb
pop
pop
ret
repnz
sbb
sbb
sbb
sbb
push
add
or
add
bound
sub
mov
sbb
xchg
in
jmp
xchg
xchg
movs
jo
jo
jo
in
jmp
bound
in
repnz
xchg
pop
loop
push
(bad)
sbb
(bad)
mov
xchg
in
dec
add
xlat
jmp
bound
add
out
lahf
test
popf
in
jo
jb
int3
and
xchg
scas
xchg
in
in
enter
xchg
xchg
sub
jmp
bound
scas
pop
push
scas
sub
arpl
imul
or
pop
bound
ret
add
pop
imul
mov
lods
add
pop
xchg
das
push
sub
mov
ins
sbb
xchg
sub
in
push
popf
outs
jns
pop
push
xchg
outs
push
mov
bound
ss
cmp
stos
or
loopne
loope
gs
xor
loop
push
lods
ja
dec
loopne
arpl
loopne
jmp
sbb
ins
lahf
mov
addr16
data16
movs
sbb
pop
das
in
mov
popf
das
add
movs
loope
sbb
pop
repnz
outs
imul
imul
pop
das
jmp
adc
sbb
and
neg
outs
(bad)
in
push
cld
pop
(bad)
or
bound
push
das
jle
sub
pop
adc
sbb
xchg
xchg
in
test
push
das
dec
test
sbb
adc
sbb
and
pop
imul
pop
imul
mov
ins
sbb
pop
cmp
pop
imul
pop
imul
out
sub
mov
push
(bad)
push
imul
xchg
xchg
scas
sub
pop
imul
pop
imul
bound
xchg
jg
neg
xchg
xchg
xor
neg
outs
outs
xchg
jg
neg
and
pop
imul
pop
imul
bound
xchg
jg
enter
pop
cmp
pop
imul
pop
imul
bound
xchg
jg
neg
adc
push
popf
outs
jns
pop
push
aas
dec
mov
(bad)
xor
inc
stos
fdivr
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
movs
imul
pop
cmp
or
loopne
and
dec
sbb
cmps
adc
pop
sahf
adc
pop
mov
cs
cs
push
pop
jmp
pop
data16
adc
cmp
jmp
imul
or
cmp
and
xchg
in
shr
or
inc
sbb
imul
mov
lods
lahf
ds
sti
bound
imul
popf
in
loopne
mov
ret
out
push
xchg
xchg
es
mov
dec
push
xchg
mov
sub
sbb
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
imul
bound
.byte
