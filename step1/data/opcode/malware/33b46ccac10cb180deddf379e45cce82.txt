mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
add
inc
outs
jae
inc
fnsave
jb
inc
xor
add
add
aas
fild
or
outs
jb
dec
outs
je
xlat
retw
mov
xor
jg
test
ins
(bad)
ins
jmp
fbld
cmp
mov
gs
int3
fdiv
mov
push
mov
dec
shr
push
int3
fs
call
sti
adc
push
outs
imul
mov
pop
fs
add
adc
into
mov
out
ss
add
add
fmul
ins
test
inc
jns
sub
add
dec
popa
je
jbe
dec
jae
pop
movs
imul
aaa
or
ficom
addr16
pop
fdiv
inc
js
outs
fs
mov
neg
jne
add
les
add
pop
(bad)
imul
pop
inc
outs
ins
jo
in
repz
xchg
jb
mov
add
clc
add
std
pop
push
je
fdivr
or
inc
or
rcr
sbb
cmp
and
push
imul
das
dec
cmp
or
(bad)
cmp
lds
sub
out
fiadd
ins
pop
aaa
pop
test
inc
ds
push
cmp
daa
cmp
cwde
pop
pop
addr16
(bad)
xor
push
sbb
or
push
ins
lds
lock
mov
daa
adc
es
push
popf
loopne
sub
pop
or
fild
dec
mov
adc
push
inc
ins
popa
jae
and
icebp
pop
fisttp
cmp
ss
push
inc
push
push
dec
push
mov
push
cs
add
adc
add
push
fnstsw
inc
xor
and
pop
int3
sbb
sbb
push
xor
add
sbb
xchg
ja
jg
or
fild
outs
jo
inc
jno
imul
jns
mov
adc
add
gs
pop
add
out
imul
ins
ja
addr16
retf
enter
add
sar
xor
movmskps
out
neg
jb
popa
arpl
adc
inc
sub
inc
or
sbb
push
aaa
sbb
add
inc
xor
sahf
lea
add
dec
es
in
dec
sbb
xor
push
push
push
popa
mov
pushf
adc
adc
sub
dec
data16
jo
push
in
mov
and
inc
and
outs
adc
clc
sub
shl
les
iret
popf
xor
xchg
push
aad
or
inc
mov
(bad)
fstp
jae
add
adc
cld
push
out
pop
xor
fs
shl
rol
test
jmp
add
sbb
dec
imul
push
xchg
cmova
(bad)
clc
push
pop
enter
outs
ins
push
dec
jb
pop
ror
jnp
cmp
scas
pusha
es
adc
xchg
fld
pop
jecxz
ret
push
push
add
push
sbb
sahf
out
xchg
jnp
dec
push
pushf
jge
mov
lahf
out
mov
cmp
and
push
jbe
add
inc
outs
iret
jae
push
(bad)
cmp
sbb
pop
sete
call
ja
sahf
pushf
(bad)
or
dec
scas
mov
xchg
pop
or
add
inc
(bad)
imul
daa
movs
(bad)
cmc
mov
mov
jmp
inc
stc
push
pop
out
or
cli
outs
push
psubq
pusha
cld
call
dec
add
dec
pop
dec
dec
and
pop
in
call
arpl
cmovle
clc
inc
push
inc
aas
test
jmp
push
gs
data16
and
xchg
mov
add
inc
sub
dec
movs
cli
pop
test
imul
adc
nop
cwde
or
hlt
push
cdq
xor
jae
outs
mov
push
data16
(bad)
push
push
push
jmp
cs
push
loop
pop
jnp
add
cmovae
out
add
mov
jo
and
push
repz
sub
dec
popa
ins
fcom
ror
and
adc
add
clc
ins
xor
or
push
imul
dec
jno
dec
or
push
popa
jo
das
pusha
je
fdiv
mov
das
fisub
push
sub
sbb
jl
add
push
imul
sbb
cmp
js
push
ror
jae
outs
ins
jae
mov
add
add
punpckhbw
ja
add
and
addr16
fs
adc
adc
inc
fimul
adc
in
je
push
xor
arpl
jg
inc
xchg
test
fsub
dec
inc
pop
gs
mov
popa
or
cmp
inc
icebp
pop
out
imul
add
adc
pop
add
inc
outs
ins
jns
or
int3
add
int3
inc
mov
or
out
fmul
mov
in
shr
and
outs
(bad)
mov
clc
mov
pusha
ret
cmp
mov
jmp
add
imul
jp
jmp
jl
push
xchg
sub
shl
frstor
arpl
addr16
push
clc
or
push
mov
and
sbb
out
push
xchg
dec
xor
push
mov
pop
mov
inc
bound
clc
xchg
and
mov
pop
adc
gs
pop
mov
pop
fiadd
push
jo
imul
mov
or
inc
(bad)
push
pop
sbb
pop
push
pop
and
data16
pop
or
jne
mov
jmp
fsubr
jge
push
adc
sbb
inc
loopne
mov
js
jl
je
push
dec
(bad)
js
dec
jne
push
test
inc
aas
ds
mov
jecxz
(bad)
xor
scas
outs
fs
mov
cmp
sub
or
ja
inc
adc
scas
ret
pusha
pop
cmps
mov
out
cmp
test
add
into
pop
(bad)
or
fwait
enter
or
mov
mov
add
popa
push
aas
add
push
inc
neg
(bad)
mov
fisubr
inc
je
bound
mov
ror
mov
inc
and
pop
pop
das
inc
sub
dec
jp
(bad)
fisttp
jle
push
gs
imul
pop
and
int
xor
das
sub
mov
hlt
pop
das
fisubr
shl
adc
ins
aam
shl
sub
cmp
and
add
jb
mov
or
pop
adc
mov
outs
jne
jb
fild
and
add
imul
sar
mov
mov
add
int3
add
(bad)
inc
jmp
adc
mov
mov
add
mov
addr16
and
call
fisttp
mov
add
add
xchg
fdecstp
push
and
push
pop
and
pop
cmc
or
push
cwde
dec
or
adc
or
lock
add
sub
cli
call
movs
cmp
scas
sbb
jmp
pusha
xor
jmp
jmp
pop
mov
push
add
in
or
and
nop
jmp
je
jg
mov
ret
sti
cmps
add
or
bound
ret
jne
fnstcw
daa
sbb
add
push
nop
push
dec
or
das
inc
sbb
js
in
test
or
int
add
xor
xchg
sbb
mov
inc
ins
pop
mov
mov
mov
loope
mov
cmp
or
sub
scas
or
adc
shl
xchg
xchg
fst
pusha
lods
pop
scas
pop
outs
popf
imul
pop
lds
mov
mov
(bad)
xor
in
adc
jb
aad
loop
in
dec
aaa
shl
aaa
ins
fcomp
push
add
fild
adc
ficomp
cwde
and
pop
(bad)
pusha
nop
fadd
(bad)
sub
enter
xor
push
pop
jnp
aad
shl
das
or
(bad)
int3
pop
mov
in
sub
cdq
sbb
dec
fsubr
sbb
push
fsub
xor
xchg
gs
or
push
push
inc
cmp
fstp
fucompp
std
sub
or
sub
inc
pusha
adc
push
inc
mov
jb
adc
test
xor
xlat
mov
nop
out
or
out
pop
call
daa
add
jne
mov
add
sbb
ss
ja
daa
or
add
mov
add
sbb
das
cld
xlat
retf
add
js
adc
sub
daa
daa
movs
jle
xchg
push
shl
add
push
lods
popf
ret
gs
imul
sub
sub
push
cmps
push
push
out
push
push
push
mov
(bad)
jge
push
mov
or
inc
bound
dec
into
pusha
xor
not
repnz
lods
cmps
or
sbb
inc
xchg
pusha
fdivr
outs
cwde
ror
lock
adc
das
rcr
js
add
push
add
mov
shl
inc
mov
rcl
hlt
inc
ins
popa
addr16
aas
or
and
mov
loopne
sub
jge
ror
and
push
ja
pop
outs
(bad)
mov
jb
mov
push
cmp
pop
and
(bad)
int3
lahf
fucom
xchg
scas
pop
fcomp
sub
mov
daa
stc
sub
pop
mov
push
out
mov
scas
jae
jbe
xor
rcr
pop
sub
sbb
jo
add
shl
push
mov
add
pop
push
dec
adc
mov
scas
and
pushf
jae
mov
sub
ins
stos
repz
and
jno
sub
cmp
fist
push
inc
cwde
or
sbb
push
add
jne
pusha
add
outs
add
lods
push
pop
pop
dec
jge
(bad)
syscall
ins
sbb
add
fsubr
stos
add
or
movs
inc
mov
push
lock
or
enter
and
aam
or
arpl
pop
ja
xchg
adc
sbb
push
mov
outs
fs
cwde
push
sub
adc
and
pusha
and
fild
sub
call
jecxz
sub
mov
sbb
ss
ficom
je
stos
adc
push
add
or
jb
sbb
sbb
outs
jmp
outs
add
fdivr
aam
sbb
jnp
inc
pop
neg
mov
mov
dec
dec
push
in
sti
jo
enter
in
or
out
xor
dec
dec
xchg
loope
ss
adc
scas
jp
and
adc
cmp
dec
dec
sub
xchg
sub
cmp
add
add
daa
mov
fsub
cmps
inc
xor
cmps
and
cmp
mov
add
lds
push
mov
mov
hlt
mov
xchg
nop
pop
fistp
dec
ja
cmp
xchg
pop
cmps
lds
or
xor
or
push
dec
push
or
clc
sub
daa
jg
sbb
push
push
sbb
mov
sub
mov
inc
cli
push
clc
popf
mov
mov
leave
fld
outs
or
push
hlt
jo
(bad)
call
jne
out
add
in
add
jne
in
sub
cmp
xchg
inc
dec
or
xlat
or
ret
arpl
inc
and
xchg
push
mov
mov
jge
dec
cs
mov
cld
sub
and
pop
xchg
imul
rcl
das
jmp
enter
xchg
jmp
das
xchg
xchg
fidiv
out
mov
cwde
mov
inc
pushf
mov
fiadd
xor
push
mov
loopne
test
mov
xchg
xchg
xor
fwait
std
fs
enter
and
in
dec
ss
or
sbb
xor
xchg
dec
inc
sahf
pushf
neg
fisub
daa
and
cmp
xchg
xchg
xchg
daa
dec
cmp
enter
int3
adc
pop
pushf
jmp
fisttp
xchg
iret
or
leave
pop
sahf
fisubr
inc
repnz
data16
sbb
mov
inc
jns
inc
sahf
mov
inc
call
dec
or
jmp
push
mov
outs
push
dec
ss
or
pop
mov
shl
push
(bad)
inc
fbld
in
mov
sub
xor
ficom
xchg
or
pop
mov
sub
xchg
dec
xor
pushf
loopne
xor
loope
fdiv
inc
inc
and
xlat
pop
(bad)
jmp
gs
pop
add
or
ins
outs
arpl
shr
dec
mov
mov
sbb
adc
jl
out
dec
(bad)
or
dec
retf
xor
sub
rol
ror
or
stos
xchg
xor
jae
lods
add
pop
je
add
js
int
pop
mov
(bad)
std
pop
jae
inc
(bad)
jo
adc
rol
arpl
outs
test
lock
or
ror
xchg
frstor
jmp
ret
and
ret
fisttp
mov
push
mov
ffreep
clc
xchg
cs
xchg
or
fisttp
push
fld
and
xchg
xchg
mov
loopne
xchg
xchg
cmp
sbb
and
inc
loopne
xchg
mov
cmp
mov
push
sub
fcmovne
pop
inc
jge
xor
dec
cmp
mov
xor
ss
(bad)
test
xor
push
rcl
lahf
test
xor
push
sbb
inc
push
push
cmp
test
adc
or
mov
inc
stc
xchg
push
mov
sub
movs
cwde
ret
mov
or
push
xor
movs
sub
imul
adc
inc
sbb
dec
jns
inc
aaa
fiadd
mov
and
mov
lds
mov
push
mov
push
add
call
adc
add
outs
jbe
and
jg
add
imul
xor
inc
imul
sbb
add
and
outs
outs
push
shr
outs
xchg
inc
in
int
add
(bad)
popa
gs
outs
call
mov
int3
icebp
inc
fs
jno
push
xor
or
je
sub
xchg
in
sar
push
add
pusha
mov
jnp
inc
ret
sbb
or
fs
addr16
adc
sbb
adc
sbb
adc
push
add
pop
ret
inc
push
sbb
inc
sub
in
adc
dec
xchg
mov
add
je
cmp
pop
(bad)
and
loop
add
sub
jp
push
lea
and
mov
sbb
adc
test
pop
and
mov
mov
adc
inc
inc
sahf
scas
pop
add
sub
jge
sub
jge
test
outs
pop
daa
mov
aam
push
jo
outs
das
push
dec
popa
js
imul
add
mov
adc
push
dec
je
fwait
mov
cmp
call
aaa
or
iret
scas
bswap
dec
addr16
pop
mov
dec
outs
arpl
dec
retf
js
xchg
sub
pop
retf
sub
jne
mov
out
sub
xor
outs
int
into
rol
in
(bad)
sbb
add
push
imul
pop
add
jbe
(bad)
jo
add
add
sbb
and
ror
mov
sbb
sbb
or
fisttp
lock
or
ins
aas
push
popa
into
cld
(bad)
(bad)
jg
call
mov
cli
jne
fstp
or
in
data16
loopne
cmp
adc
arpl
cmp
clc
inc
pop
dec
or
adc
mov
push
fadd
mov
adc
jge
add
cmp
test
cdq
sbb
fcmovnb
es
repnz
iret
dec
cdq
sub
ins
or
mov
adc
push
jns
ja
lea
fild
or
mov
mov
jmp
(bad)
rep
mov
stos
in
or
fadd
xor
and
mov
xor
sbb
adc
mov
fs
inc
cmp
adc
outs
pop
movs
cmp
gs
inc
cmp
sbb
xchg
retf
out
cmovle
sbb
and
mov
mov
ins
cmp
test
mov
ins
xchg
ds
adc
adc
adc
or
ss
leave
cmp
bnd
jb
imul
retf
ins
dec
push
arpl
lds
jnp
aas
mov
jle
dec
imul
mov
lods
stc
add
cmp
jle
sbb
clc
push
xchg
xor
clc
out
cmp
add
gs
jo
xor
mov
maskmovq
div
das
sbb
aas
adc
sub
cmps
sub
outs
loopne
push
repz
icebp
mov
fs
push
or
shl
jl
iret
adc
or
aaa
jnp
scas
and
fild
add
fild
sub
adc
imul
push
int3
xchg
add
scas
sti
jo
sub
cmp
mov
scas
ins
pop
test
push
outs
pop
or
(bad)
inc
test
xchg
cmp
or
or
push
outs
jae
imul
push
or
add
out
or
dec
pop
or
sub
dec
xchg
push
dec
cmp
add
add
add
popa
dec
sbb
push
outs
outs
cwde
(bad)
sbb
pop
add
pop
arpl
xor
or
adc
pop
in
fbstp
pop
inc
aas
pop
adc
jne
ins
fs
jo
add
add
imul
outs
push
push
or
test
jmp
test
shl
sbb
sub
or
inc
call
mov
cmp
test
mov
pop
xor
jb
sub
lds
mov
xchg
push
ins
in
jae
and
or
push
xor
sti
sub
xor
jnp
stos
loope
mov
lea
xor
inc
push
ins
mov
ins
bound
push
popa
sbb
push
imul
stc
adc
in
fadd
add
scas
aas
or
sub
push
mov
add
js
mov
push
aam
daa
daa
daa
ror
enter
daa
daa
sar
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmp
daa
daa
daa
je
ins
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
add
add
mov
xchg
xchg
stos
hlt
lock
sub
dec
dec
outs
movaps
call
pop
in
loopne
aas
push
or
jg
repz
je
pop
xchg
ret
jmp
call
outs
aas
dec
lea
mov
add
mov
dec
(bad)
dec
inc
or
data16
inc
and
add
neg
dec
mov
and
mov
inc
inc
pop
ret
addr16
adc
xor
inc
outs
and
ficomp
aam
mov
jns
ins
gs
mov
call
popa
jae
outs
arpl
jb
fs
sub
rcr
and
or
xor
arpl
cmp
ror
add
popaw
ror
leave
imul
test
bound
test
clc
mov
fsub
lock
push
outs
imul
ja
xor
daa
sub
data16
sbb
int3
daa
int
mov
ficom
mov
dec
dec
addr16
in
add
inc
push
dec
add
inc
or
and
sub
imul
adc
or
adc
sbb
adc
cmps
jge
push
sbb
sub
push
xor
sub
and
jp
add
jp
cmp
cmp
lods
add
inc
sub
jp
nop
inc
int
(bad)
adc
dec
xor
cmp
in
inc
or
cmp
xor
arpl
mov
cmp
inc
imul
(bad)
mov
add
add
neg
jns
fild
fnstenv
div
add
js
and
mov
xchg
cdq
pop
add
dec
or
mov
mov
nop
call
cmp
mov
mov
pushw
sub
retf
add
mov
out
pop
loop
mov
and
pop
mov
push
mov
js
ret
sub
mov
sti
lea
call
sbb
and
add
xchg
ficom
add
retf
push
add
daa
test
xchg
shl
or
in
sahf
fnstcw
cmp
(bad)
in
outs
mov
cld
add
or
adc
std
sub
lea
mov
push
add
cmp
scas
into
jle
dec
pop
mov
cld
sub
and
lock
jnp
xor
mov
jnp
push
mov
inc
shr
inc
push
dec
adc
push
aas
pushf
test
je
pop
pusha
mov
or
jb
mov
jno
mov
sar
loopne
push
mov
sub
mov
sub
mov
mov
mov
jp
jmp
out
add
shl
cmp
fisttp
into
je
jmp
adc
cmp
and
lods
pop
lock
mov
add
inc
xchg
test
sbb
fsubr
xor
lds
adc
xchg
sbb
aaa
nop
dec
add
and
sub
mov
(bad)
(bad)
sub
or
ja
sub
mov
pop
add
fsubr
or
ss
add
mov
pop
pop
push
mov
adc
mov
div
enter
push
or
ret
sbb
sub
std
minps
movs
jle
xor
jmp
or
cmp
adc
std
frstpm(287
lock
push
lea
push
push
inc
mov
das
sbb
add
and
cmp
jbe
sub
add
adc
iret
test
jne
mov
fimul
js
in
mov
mov
sub
mov
(bad)
loopne
repnz
sub
rcl
jle
pusha
add
pushf
fiadd
fld
jp
mov
outs
add
sar
(bad)
jbe
jmp
lds
loopne
add
call
jbe
or
cmp
jne
and
sar
adc
shl
std
mov
push
repnz
dec
and
jae
xor
imul
rcr
mov
lds
das
push
cwde
pop
push
xchg
jo
rol
pop
or
mov
or
lds
dec
xor
cmp
jbe
ss
jge
sbb
xchg
xchg
dec
inc
aam
sti
or
int3
fcom
jmp
repz
add
call
and
out
push
jle
mov
inc
inc
sbb
push
and
lea
pop
add
add
or
rol
test
lds
cmp
loope
xchg
inc
adc
movs
add
and
fs
cmp
(bad)
fidiv
xor
jmp
cmp
dec
sbb
mov
add
sar
adc
jbe
mov
imul
ja
dec
aas
dec
clc
pop
or
or
push
pushf
jno
loopne
and
pop
xor
cmp
pause
or
es
fwait
push
sub
lods
inc
jmp
scas
push
sbb
inc
and
xchg
ins
mov
out
or
ret
or
mov
clc
fwait
add
mov
or
lea
adc
push
pop
push
add
cmp
sar
mov
and
jne
btr
push
cmp
jmp
loop
rcr
jb
mov
dec
jnp
sub
lea
iret
pop
fsub
push
dec
pusha
jmp
and
iret
jb
mov
xchg
fisttp
div
enter
iret
sub
sub
cmp
fucomi
and
inc
push
mov
enter
(bad)
push
sbb
fs
cld
test
loop
das
mov
mov
mov
inc
(bad)
mov
imul
jnp
addr16
(bad)
lock
cld
out
dec
mov
(bad)
enter
mov
jle
mov
lea
lock
dec
xchg
lea
push
cmp
loop
fild
loopne
arpl
loopne
pusha
mov
clc
ror
jmp
dec
inc
cmp
pop
int
popf
(bad)
xor
dec
push
adc
mov
shl
push
xor
sbb
fadd
sub
cld
or
cld
jmp
mov
dec
loope
sbb
jno
adc
xchg
inc
mov
cmp
in
xor
dec
xchg
adc
test
push
pop
xor
adc
and
setno
(bad)
outs
pop
inc
xchg
mov
fisttp
push
test
daa
cli
nop
and
ss
rol
loop
xor
add
mov
jne
sub
in
xchg
es
inc
inc
jmp
pop
data16
mov
fisttp
mov
cmp
retf
leave
push
bound
cmps
loop
push
ret
inc
or
cmp
xchg
mov
ins
push
mov
lds
int
xchg
scas
scas
jmp
push
mov
pop
leave
outs
push
sub
mov
jne
adc
inc
aaa
and
add
inc
mov
mov
push
jb
scas
test
fisttp
or
adc
inc
cld
or
cmp
cli
je
lea
and
dec
mov
popa
mov
xlat
mov
pop
jl
ret
je
add
cmp
sbb
inc
and
mov
into
sub
sahf
into
xor
sub
ret
aad
push
lahf
mov
mov
cmp
sbb
add
pop
fimul
cmp
add
lock
out
sub
sub
sbb
mov
out
push
or
rol
in
or
in
pop
or
shl
sbb
or
retf
jb
jns
jb
lock
jl
inc
dec
mov
ret
jg
lahf
push
int3
test
lea
push
mov
sub
mov
sar
and
add
hlt
mov
ins
lock
clc
iret
mov
jl
push
sbb
sub
cs
xchg
xchg
ror
mov
cmp
jecxz
cmp
xor
setae
cmp
dec
pop
loope
jb
and
cli
sub
loopne
jle
jae
push
int3
push
mov
pop
mov
lea
add
sub
sbb
inc
cmp
jnp
jecxz
jno
jge
inc
or
in
xchg
ret
cs
pop
cld
or
mov
push
mov
add
or
stos
jg
ins
adc
pop
data16
mov
rol
xlat
sub
add
clc
add
ds
add
mov
(bad)
cmp
pop
fdivr
dec
out
lea
dec
mov
test
mov
xchg
loopne
scas
loope
lock
cmp
dec
fistp
iret
add
mov
iret
add
sub
ror
sar
xlat
xlat
je
iret
ja
cmp
xchg
(bad)
pop
mov
lds
(bad)
(bad)
call
jmp
rol
add
and
push
ret
and
or
push
jle
push
lea
or
xor
push
movs
add
mov
outs
jae
jle
(bad)
dec
iret
adc
or
sar
or
push
push
jge
aam
in
or
not
pop
lock
push
lea
jecxz
(bad)
(bad)
out
stos
mov
or
jae
neg
fldz
fst
add
rol
or
rcr
mov
sbb
adc
add
mov
pop
sbb
and
test
jne
xor
scas
mov
cmp
jb
rol
inc
fistp
and
rcl
sbb
lods
pop
mov
jg
(bad)
fstp
adc
inc
sbb
mov
pop
adc
sbb
jmp
cmps
es
fidiv
mov
sahf
sbb
jnp
inc
adc
add
mov
mov
push
dec
test
test
xor
div
nop
arpl
das
fimul
add
push
sub
inc
mov
add
mov
jmp
(bad)
mov
test
jne
mov
xor
jle
test
loopne
lea
adc
push
icebp
mov
pusha
fxch
xchg
mov
test
iret
sub
mov
push
adc
mov
ds
enter
push
lea
(bad)
add
xor
sbb
nop
push
mov
ins
add
out
jbe
cli
fist
cld
dec
jne
mov
push
in
cmp
ja
mov
add
clc
sti
fbstp
xor
leave
mov
push
adc
out
fcmovne
xchg
add
push
adc
(bad)
jge
jne
push
test
je
adc
ins
add
xor
aaa
mov
pop
mov
pop
pop
dec
or
mov
mov
and
call
mov
gs
push
cmp
test
dec
pop
int3
sub
and
aas
sbb
push
daa
test
(bad)
imul
dec
or
adc
popa
mov
add
stc
push
ret
sbb
pusha
cdq
cmp
(bad)
pushf
xor
pop
inc
in
sbb
mov
push
sbb
sbb
sbb
in
xchg
mov
mov
jne
cli
adc
mov
adc
push
cmps
lea
xor
gs
mov
sub
aas
inc
sbb
loop
adc
mov
jns
sub
sub
test
sub
mov
mov
push
fwait
mov
jl
sub
pop
mov
(bad)
je
add
stos
add
mov
sti
jbe
xchg
or
and
or
jne
mov
sbb
fadd
daa
and
bound
add
call
cmp
add
xlat
cmc
mov
add
dec
inc
in
dec
je
test
rcl
loopne
imul
add
or
rcr
push
and
sar
push
inc
or
cmp
je
aaa
cmp
test
clc
test
cmp
push
and
dec
jo
fwait
out
inc
hlt
adc
inc
add
jge
ret
rcr
add
or
mov
fadd
adc
mov
test
inc
out
jae
dec
es
fld
aas
ror
test
ret
fstp
adc
cmp
stos
and
cmp
lods
xor
add
mov
and
mov
fdiv
cmp
or
sbb
jb
call
and
call
stc
mov
cdq
fild
xchg
aas
push
inc
das
mov
into
cmp
je
mov
or
add
movq
popa
sub
(bad)
inc
fisubr
sbb
mov
add
add
fmul
xchg
test
jbe
mov
pop
jecxz
les
push
dec
jne
xchg
lds
mov
loopne
mov
pop
icebp
mov
mov
test
pop
(bad)
xchg
and
push
push
aad
mov
dec
(bad)
xor
mov
sbb
mov
adc
pusha
movs
xor
add
push
xor
(bad)
pop
jne
push
or
dec
lock
or
rcl
jmp
mov
lea
jge
and
add
mov
nop
cdq
push
fldenv
inc
sub
(bad)
fld
mov
jmp
push
dec
pushf
loop
mov
inc
lds
clc
jb
mov
xchg
xlat
xchg
jmp
inc
xchg
mov
es
in
xchg
pop
aad
test
pop
je
mov
ds
mov
sub
sbb
jnp
test
lea
push
fcmovu
mov
adc
jle
mov
xchg
loop
mov
sub
test
imul
and
push
mov
ds
cmp
(bad)
retf
fadd
xchg
cmp
xchg
adc
sub
pop
adc
mov
mov
fdivr
pop
add
sbb
or
jnp
add
mov
inc
pop
in
fdivp
dec
mov
add
cs
mov
add
xor
jne
in
mov
add
mov
jb
je
dec
je
jmp
ss
sub
jmp
mov
sbb
fbstp
sub
xor
call
lods
sbb
cmp
xchg
dec
mov
add
push
sahf
pop
(bad)
stos
icebp
push
sbb
cmp
xor
cmp
icebp
in
test
jne
sbb
icebp
or
sub
xchg
cmp
shr
mov
sbb
pop
push
mov
xchg
prefetch
imul
mov
mov
jb
inc
xor
push
sti
les
inc
lods
adc
or
ja
inc
and
add
jne
mov
mov
sbb
push
mov
mov
sbb
ror
mov
movs
fiadd
les
idiv
xor
add
hlt
cmp
out
add
into
add
add
clc
jbe
mov
cmc
cmp
inc
add
cmp
jne
mov
sbb
cmp
push
cmp
test
in
inc
inc
or
sub
mov
stc
cs
sar
mov
jae
mov
or
call
jbe
(bad)
aaa
sub
xor
mov
shl
add
test
dec
data16
call
cmp
loope
inc
mov
dec
sub
xor
les
mov
les
shl
mov
push
pop
int
loopne
imul
mov
adc
sub
icebp
mov
stos
dec
(bad)
sub
std
pop
pop
xor
add
das
sbb
pop
mov
jge
mov
mov
ret
repz
or
gs
push
pop
adc
adc
push
push
mov
jle
jmp
mov
(bad)
jp
lock
push
retf
mov
cmp
jne
mov
fwait
mov
sbb
sub
or
inc
(bad)
mov
jo
adc
and
stos
mov
mov
xchg
mov
repz
sbb
loopne
xchg
push
or
loop
jmp
and
adc
adc
test
mov
mov
mov
loope
lock
cmp
mov
das
test
add
lahf
arpl
push
sub
je
scas
daa
mov
movs
pop
mov
out
push
pop
mov
jbe
lahf
loopne
push
repz
mov
push
pop
xor
add
sbb
dec
aam
cmp
pop
loop
push
xor
pop
adc
addr16
inc
fnstenv
rcl
pusha
aaa
jne
sti
call
lahf
mov
test
je
test
je
push
mov
inc
fs
out
pop
mov
adc
add
adc
jae
repz
jne
test
clc
shl
arpl
outs
adc
cmp
into
xchg
sbb
adc
xor
aas
add
loopne
cmpps
ror
push
and
ins
int3
mov
loope
cmps
cli
ret
mov
into
repnz
ja
pop
and
out
jns
mov
jge
test
sti
inc
mov
sbb
or
mov
add
lahf
frstor
je
adc
pop
fadd
mov
push
loope
(bad)
push
mov
push
add
or
ret
xor
pop
cs
outs
jo
movs
lea
pop
pop
jne
cmp
gs
mov
mov
xchg
sbb
cmp
pop
ins
ja
push
mov
nop
sbb
(bad)
inc
scas
cmp
je
cmp
ja
sub
jg
jmp
sub
int3
inc
ins
mov
aaa
xor
jle
push
push
adc
xor
xchg
repz
(bad)
(bad)
bound
outs
iret
repz
jl
mov
imul
lea
lea
adc
fld
loopne
push
xor
cmp
jle
femms
mov
sub
or
adc
add
std
rol
pop
inc
cmc
pop
dec
mov
or
mov
mov
adc
and
jnp
int3
adc
adc
pop
cmp
push
sbb
dec
add
ret
push
push
cmc
pop
(bad)
cmps
jnp
add
data16
call
cmp
and
js
or
adc
loopne
bound
sub
std
and
pop
jmp
inc
imul
ss
cmp
pop
rol
mov
cli
cdq
cmp
xor
jmp
sub
pop
es
xchg
cmp
inc
xchg
jmp
cmp
ins
call
add
jg
xchg
(bad)
in
mov
add
cmp
out
sbb
or
aas
mov
cs
or
in
adc
test
pop
lds
div
fadd
dec
jmp
mov
and
(bad)
clc
pop
or
or
mov
xor
cli
xchg
aas
adc
andps
imul
mul
jo
pop
loopne
push
loopne
out
div
mov
sub
rcr
cmp
pop
push
push
add
test
ins
or
ss
sub
fnstcw
fwait
or
jbe
sbb
frndint
fldcw
inc
add
adc
fcmovne
sahf
jmp
(bad)
lock
faddp
fscale
fstp
pop
fstp
aas
in
cs
fwait
and
or
pop
in
add
mov
fwait
pop
pop
xchg
push
iret
cmp
rol
cmp
jb
push
retf
mov
push
test
pusha
add
or
lea
push
push
cld
inc
adc
add
outs
rol
cmp
push
push
cmp
pop
jbe
inc
mov
jae
xchg
cmps
mov
test
jp
jns
stos
cmps
push
or
dec
ins
xor
cmp
xchg
jecxz
rol
mov
js
pusha
js
gs
add
pop
add
xor
xchg
cs
cmp
xor
(bad)
mov
inc
sub
dec
je
or
or
daa
in
jbe
pop
fadd
add
jmp
cmp
mov
jmp
inc
mov
mov
adc
dec
and
stos
(bad)
mov
movs
xor
adc
jne
add
adc
inc
or
std
xlat
push
out
and
cmp
sti
and
add
xor
mov
mov
cmc
or
cmp
or
adc
outs
mov
and
test
xor
jne
xchg
adc
nop
pop
add
scas
rol
mov
test
mov
or
nop
sub
aaa
push
add
xchg
inc
push
out
mov
nop
push
(bad)
xor
sub
sbb
mov
push
xor
adc
ds
jo
cwde
scas
sbb
test
sbb
inc
pusha
mov
gs
ret
add
ror
pop
and
and
xchg
test
je
or
mov
dec
cmp
(bad)
pop
mov
outs
cmp
jne
push
(bad)
sbb
pop
push
(bad)
sub
leave
or
ss
outs
adc
dec
inc
push
or
in
leave
mov
inc
xor
retf
ds
fstp
add
adc
jmp
inc
scas
jnp
repnz
push
fwait
in
shl
leave
mov
je
popf
push
cdq
paddsw
(bad)
jmp
add
or
add
sbb
or
inc
enter
mov
and
lea
inc
js
mov
mov
inc
mov
ret
dec
lods
sub
or
add
mov
call
xchg
sbb
jecxz
(bad)
xor
jmp
cmp
cmp
fwait
and
add
cmps
add
mov
sbb
lods
ja
jo
jo
cmps
or
aas
jb
add
sar
ret
je
cld
and
out
and
call
rcl
ins
jo
imul
add
adc
or
cld
mov
cmp
je
arpl
sub
inc
push
sbb
xor
pop
mov
pop
or
in
mov
dec
cmp
ja
gs
fs
sub
add
mov
mov
or
sub
pop
adc
adc
adc
retf
loope
and
loopne
sbb
push
ins
(bad)
mov
push
or
xor
cli
and
or
dec
jmp
push
(bad)
add
adc
fst
mov
and
mov
add
neg
sub
sub
jl
jp
sub
bound
mov
and
inc
lea
cmp
fcos
loop
xchg
sbb
sbb
push
cmp
mov
push
adc
pop
push
test
or
dec
inc
push
add
sar
or
mov
pusha
in
sub
jecxz
ds
jl
rol
mov
mov
xor
mov
push
add
jmp
adc
add
xchg
in
push
pop
test
sahf
shl
mov
and
pop
loopne
pusha
and
je
cld
add
adc
shr
mov
dec
and
je
mov
jne
je
mov
je
sbb
stc
push
cmp
sub
div
cmc
out
xor
test
add
imul
pop
lds
mov
fidivr
ins
test
dec
fadd
(bad)
scas
stc
and
pop
mov
push
outs
mov
push
mov
shl
mov
push
add
aas
clc
or
je
mov
sti
sub
je
jle
jle
and
je
je
pop
je
xor
hlt
hlt
rol
arpl
push
push
data16
push
and
xor
or
cmp
ja
cmps
xor
dec
fadd
rol
gs
mov
jo
dec
cli
or
data16
pop
sahf
std
inc
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
pop
packuswb
popa
jb
mov
lds
and
adc
div
ret
or
mov
retf
inc
ret
scas
mov
shr
mov
aas
add
out
(bad)
inc
fxch
stos
sub
inc
mov
rol
shr
cmp
jae
or
jmp
inc
dec
mov
and
ins
jb
nop
inc
xor
cmp
cmp
jne
dec
fsubr
scas
shl
cmp
cmp
push
repz
sbb
int3
(bad)
aaa
mov
sub
sub
leave
jne
push
jg
retf
in
fld
mov
sub
movs
mov
sub
push
add
sub
pop
nop
nop
push
jl
sbb
jl
sbb
sar
pop
adc
(bad)
ret
nop
pop
add
fidiv
xchg
fld
(bad)
pushf
(bad)
pcmpeqb
out
push
lods
fmul
shl
xchg
push
fcom
jge
mov
xor
jg
mov
jmp
fstp
fld
fsubr
out
and
add
fisubr
ret
push
pushf
pop
enter
add
adc
enter
jo
add
sahf
cmp
je
cmp
lods
adc
jnp
(bad)
idiv
imul
jl
pop
xor
fs
fucomi
mov
(bad)
push
mov
xor
pop
retf
mov
nop
hlt
push
enter
cmps
(bad)
(bad)
fistp
rcl
jp
push
mov
lea
or
mov
mov
cdq
test
cmp
xchg
movs
push
cmp
fbstp
adc
push
mov
cs
fnstcw
fmul
pop
pop
loopne
rcr
adc
mov
ret
add
clc
push
jl
jmp
dec
xor
inc
rcr
pop
(bad)
and
push
or
rcr
mov
movs
fild
in
pop
hlt
out
ror
mov
rol
outs
lock
stos
jo
pop
cmc
push
fistp
cwde
xor
repnz
pop
pop
pop
mov
mov
call
(bad)
jg
ret
pop
sbb
stos
mov
loop
jo
dec
rep
pop
and
movs
test
loop
lods
cmp
push
mov
sbb
or
dec
jmp
cmp
je
mov
mov
ret
sbb
into
push
mov
mov
loope
mov
push
sbb
cmp
addr16
or
jmp
mov
jbe
sub
mov
jmp
push
nop
xchg
fwait
(bad)
test
jae
paddd
movsx
jb
and
loope
stos
add
adc
adc
mov
ret
mov
or
(bad)
xor
mov
mov
mov
out
scas
or
fadd
sub
ret
xor
mov
adc
clc
mov
add
inc
add
popa
sti
add
sub
dec
mov
ins
imul
pmuludq
jne
jmp
test
lock
fisubr
out
or
arpl
out
call
dec
dec
enter
je
push
sub
push
push
inc
and
lock
fsub
cmp
aam
cmp
inc
fisttp
push
or
jb
pop
adc
call
lds
pop
xchg
call
mov
rol
adc
inc
mov
add
lea
cmp
push
int3
std
daa
cmp
inc
push
push
mov
mov
sti
sub
mov
int3
mov
int3
rol
cmp
jg
mov
mov
js
(bad)
dec
ja
pop
push
dec
sub
or
fisttp
cs
or
pop
mov
dec
sub
push
pop
les
dec
fsub
mov
test
ret
push
xchg
jmp
sbb
jp
pushf
or
add
repnz
jecxz
scas
lods
pop
mov
movs
cli
shr
pop
ret
pop
add
sub
cld
adc
push
xchg
ja
adc
adc
pop
stos
add
out
xor
pop
fdiv
aaa
jb
test
ret
xchg
dec
arpl
mov
pop
int3
and
popa
push
inc
stos
out
lahf
pop
(bad)
mov
dec
or
shl
push
rol
add
enter
pop
test
lock
push
inc
ret
push
dec
cld
push
push
dec
call
push
inc
out
push
cwde
imul
inc
(bad)
fmul
add
push
cmp
jmp
or
rcl
sbb
sbb
jo
mov
mov
aaa
rcl
mov
add
push
add
dec
jne
ds
sahf
sbb
jmp
pop
jmp
push
lea
ins
in
(bad)
mov
pop
je
jmp
mov
mov
test
jne
xor
stos
cmps
mov
jecxz
jne
cmp
mov
shr
loope
dec
jg
adc
aam
int3
jl
test
retf
outs
pop
fwait
scas
push
or
rcr
fcmovnu
push
pop
xor
ret
xchg
adc
push
add
add
loopne
lahf
mov
lea
inc
lock
lods
mov
lock
pop
add
outs
cmps
sub
sub
jbe
adc
in
lahf
inc
jo
xor
jmp
pop
and
sub
xor
call
out
shr
xchg
jecxz
iret
push
pop
add
xchg
push
add
(bad)
iret
outs
push
push
imul
(bad)
hlt
xor
lea
mov
mov
mov
mov
inc
or
or
sub
stos
adc
jp
(bad)
and
inc
push
loopne
aad
je
call
mov
inc
or
mov
adc
push
clc
(bad)
adc
pushf
xor
call
rcl
xchg
test
inc
push
loopne
out
adc
popf
push
jo
call
dec
jg
or
shr
ja
or
es
push
rcl
les
jg
cmp
out
add
sbb
or
out
ret
sar
cmp
jne
cmps
mov
aas
lods
jmp
cs
sbb
cs
or
scas
enter
mov
push
inc
cmp
jge
mov
es
(bad)
lock
add
cli
in
push
mov
pop
lock
cmp
adc
pop
xor
or
stos
xacquire
sbb
das
sbb
add
pause
dec
push
jg
add
rol
ss
push
fst
pusha
jae
jge
add
mov
fsubr
mul
jne
dec
aaa
add
xchg
pop
xchg
mov
lea
in
not
cmp
and
cmp
add
add
mov
jg
jmp
loope
addr16
enter
clc
push
dec
ja
pop
mov
call
push
add
pop
outs
(bad)
(bad)
inc
inc
gs
outs
imul
arpl
jae
jb
outs
data16
je
cli
lahf
call
imul
add
or
add
add
pop
loope
adc
adc
add
cmp
add
lds
jne
mov
ror
pop
(bad)
xchg
add
aad
xor
add
or
jno
in
adc
sbb
jle
adc
popf
sbb
mov
gs
mov
or
jne
sbb
pop
jo
mov
mov
sbb
and
clc
or
mov
and
or
scas
scas
inc
out
ficom
lock
stos
inc
add
and
push
add
shl
sar
and
das
jbe
xchg
jae
cmp
ret
xchg
push
(bad)
fwait
int3
sub
and
push
mov
sahf
in
fcom
inc
adc
std
inc
clc
add
or
pop
adc
dec
dec
push
mov
push
sub
lds
mov
dec
ss
mov
push
out
mov
outs
adc
shr
push
call
lea
enter
cmps
or
ret
aaa
or
dec
aas
shr
cmp
push
push
das
into
add
jmp
mov
sti
xor
jnp
out
cmp
daa
pop
pand
pushf
mov
inc
add
pop
in
or
imul
movs
and
add
cmp
push
lds
call
into
push
cmp
and
push
ret
shl
push
mov
mov
ret
ficomp
call
je
or
sete
lds
pop
mov
xchg
sub
shl
ret
inc
sbb
shr
sub
or
xlat
out
mov
ja
add
push
ds
add
jl
inc
ins
lea
and
(bad)
test
push
pop
ror
(bad)
and
cmc
aaa
arpl
dec
cmp
xor
pop
cmp
icebp
test
adc
mov
loope
xor
loop
dec
pusha
(bad)
adc
sbb
adc
xor
ficom
addr16
adc
mov
xchg
jne
fucomip
push
ror
mov
(bad)
call
sub
mov
lods
cmp
fwait
jmp
jge
sti
mov
rol
push
add
or
test
pop
push
pop
or
mov
pop
rcr
lock
dec
pop
mov
shl
jae
mov
ret
mov
push
mov
jno
mov
ins
jb
sbb
mov
int
push
(bad)
cmp
and
cwde
xchg
aaa
or
cmp
test
adc
pop
dec
sbb
inc
xchg
pop
push
test
imul
test
jo
je
jecxz
jno
loope
adc
test
movs
sbb
mov
imul
ss
es
mov
stos
add
push
cmp
jne
in
outs
cmps
clc
inc
jmp
push
ins
dec
cld
cmp
jne
(bad)
sbb
sbb
rcl
jo
add
mov
outs
sbb
xchg
mov
inc
add
jne
(bad)
mov
push
push
cmps
mov
sbb
dec
lea
fcom
sub
(bad)
fucomip
loop
push
mov
icebp
inc
xchg
mov
pop
dec
mov
or
fimul
push
js
es
lea
jg
in
fadd
outs
ror
mov
retf
sti
cmp
mov
jae
jno
push
mov
xlat
pop
xor
ret
or
ins
in
or
in
rol
or
mov
inc
(bad)
outs
inc
test
mov
cmp
xor
push
push
hlt
test
cmp
pop
push
rol
cmp
push
add
loop
sub
pop
(bad)
(bad)
in
push
call
mov
push
push
push
push
fs
add
addr16
mov
xchg
loopne
scas
or
jae
mov
pop
fs
lahf
es
push
push
and
cs
dec
xor
mov
cmp
je
or
mov
or
mov
rol
ret
sbb
jecxz
test
loope
scas
dec
jno
aaa
sbb
push
aas
loop
mov
xchg
cld
cmp
(bad)
jecxz
shl
test
inc
add
fwait
mov
adc
mov
dec
adc
jne
ret
mov
pop
test
mov
(bad)
xlat
add
dec
call
(bad)
out
push
and
loopne
mov
into
cli
out
push
je
dec
push
fisub
popa
xchg
jae
sub
sbb
xor
add
or
xor
jne
push
jne
push
clc
pop
into
adc
fidiv
(bad)
cli
jo
dec
add
ss
mov
push
and
jo
cmp
sub
adc
test
and
jl
push
out
aam
mov
fisub
mov
mov
cs
ret
jle
movs
jmp
and
std
dec
adc
sbb
cmp
xor
add
pcmpeqb
dec
adc
mov
fadd
add
or
dec
(bad)
mov
jno
mov
mov
pop
inc
mov
repnz
jle
mov
push
int3
cmp
jne
push
(bad)
fbld
mov
xor
mov
cmp
jne
inc
inc
mov
jg
cmp
jne
add
dec
jne
mov
xor
outs
inc
or
pop
rcr
dec
daa
add
adc
mov
sbb
adc
sbb
mov
stos
add
mov
add
adc
jmp
dec
cmps
inc
nop
jmp
cmp
test
adc
inc
xor
sbb
pop
xchg
and
adc
add
fimul
loop
fdivr
sar
xchg
xor
pusha
adc
in
daa
js
pop
push
dec
test
in
loopne
pop
ficomp
adc
out
mov
sbb
pushf
push
test
retf
jno
(bad)
lds
pusha
ss
inc
das
je
jg
adc
ja
jbe
aas
out
and
dec
xchg
outs
enter
imul
jg
enter
jnp
mov
call
jmp
(bad)
mov
push
or
pop
lea
pop
jmp
xchg
clc
mov
out
push
dec
xchg
push
push
push
adc
loopne
movs
test
push
shl
jo
jo
add
or
sbb
data16
push
dec
push
pusha
jp
ror
sti
mov
push
jns
mov
cs
and
sub
loope
(bad)
push
(bad)
jg
push
and
mov
or
pusha
add
pop
je
js
or
cmp
fdiv
adc
adc
adc
js
fadd
pop
out
sub
repz
pop
and
or
adc
rcr
bound
mov
add
xor
stos
jo
test
push
add
and
pop
cmp
push
sub
stos
mov
sub
dec
je
jmp
add
idiv
aas
sub
jb
je
jmp
cmp
sub
xor
add
jmp
sub
call
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
push
mov
jmp
mov
or
fsubr
push
mov
jmp
mov
jmp
mov
shr
aam
dec
mov
push
mov
sbb
pop
fisttp
test
jno
xlat
sbb
mov
loopne
adc
or
xor
bound
fisubr
pop
js
jno
push
push
or
popf
inc
(bad)
jp
mov
dec
(bad)
pop
nop
mov
mov
xchg
inc
mov
cmp
movmskps
pop
xchg
inc
lock
or
mov
push
and
add
xchg
inc
inc
sbb
cmp
jmp
out
or
cmp
jne
in
jle
ror
add
out
mov
push
mov
test
mov
(bad)
je
xchg
movs
sahf
std
or
dec
mov
je
add
mov
ds
inc
(bad)
xor
add
divps
adc
jp
mov
mov
pop
inc
(bad)
rcl
cmp
fild
vmwrite
lock
cmp
jle
ins
sub
fadd
xlat
ss
popf
sbb
add
pusha
and
jmp
cmp
mov
sti
ja
mov
sbb
loopne
add
nop
sub
push
xchg
mov
xchg
dec
addr16
loopne
aaa
jo
out
(bad)
lock
imul
sub
cmps
fisttp
cmp
test
cwde
mov
out
mov
loopne
clc
pop
pop
das
xor
mov
cmp
lea
inc
(bad)
clc
add
push
add
mov
test
dec
je
add
clc
ins
add
int3
pop
add
cwde
jmp
data16
loopne
call
jne
pop
pushf
stc
(bad)
mov
mov
inc
or
cs
mov
mov
xor
scas
ss
push
sti
mov
mov
adc
lods
aad
test
outs
pop
clc
mov
call
xor
rcr
icebp
jge
mov
push
inc
mov
mov
pop
xor
mov
aas
jnp
jmp
pop
and
and
(bad)
dec
jge
aaa
add
mov
mov
cs
data16
push
push
or
push
push
test
in
mov
mov
outs
adc
ja
add
mov
lock
rep
ss
sbb
aas
movs
jbe
neg
sbb
inc
leave
xchg
nop
push
or
push
pop
cs
imul
add
xchg
cmp
or
lds
mov
or
jno
xchg
push
push
pand
mov
push
fsubr
pop
ret
retf
jne
mov
jbe
pop
jmp
inc
xchg
fdivr
cmp
fcmovbe
call
adc
inc
or
outs
out
mov
sub
out
hlt
sbb
xor
xor
cmp
dec
sbb
dec
xor
test
jle
sbb
out
sbb
mov
(bad)
cli
mov
xor
dec
add
jbe
cs
push
pusha
mov
ja
mov
mov
jmp
push
iret
test
jne
fld
dec
cs
mov
ja
and
repnz
enter
cwde
mov
push
adc
outs
add
or
arpl
ja
cmps
inc
dec
dec
jno
add
push
and
cli
adc
adc
jne
sub
sub
cmp
adc
add
push
cmp
mov
das
cmp
test
sbb
pop
mov
mov
or
sbb
pop
inc
dec
das
fs
xchg
out
dec
cmp
dec
add
cmp
xor
arpl
mov
sub
inc
jb
mov
sub
cli
add
imul
mov
push
scas
mov
into
xchg
or
ret
cmp
call
xor
cld
or
daa
out
mov
rcl
icebp
jmp
jge
(bad)
fadd
xchg
mov
repnz
sbb
jb
aaa
test
adc
fmul
sub
jnp
mov
adc
sbb
or
push
push
mov
sbb
mov
int
pusha
mov
push
add
jle
sbb
add
enter
pop
dec
cmp
ret
enter
retf
ds
push
clc
cmp
shl
jo
jecxz
or
int
fucomip
mov
data16
and
or
adc
mov
mov
lods
stos
data16
imul
jle
push
ja
cmp
push
adc
add
retf
xchg
imul
add
cwde
cmp
or
sub
adc
jae
dec
and
sub
jo
jmp
mov
sbb
xchg
cs
clc
dec
jl
lock
hlt
and
inc
inc
ficom
xchg
push
sbb
mov
mov
cmp
mov
push
or
stos
dec
jne
xchg
and
cmp
mov
jno
test
inc
rol
ss
pusha
(bad)
push
clc
inc
jle
mov
clc
js
xor
dec
cld
shr
shl
pop
inc
rcr
aaa
xor
dec
sub
dec
push
test
sbb
xor
(bad)
iret
dec
mov
iret
rcl
push
in
and
ss
jo
in
je
dec
scas
cmp
push
(bad)
mov
mov
xchg
sti
stos
lock
mov
int3
or
loope
pop
test
mov
and
cmp
pusha
rcl
push
popa
pop
pop
and
add
xor
outs
int3
mov
mov
movzx
xchg
retf
push
outs
add
ss
fadd
jg
inc
mov
lea
ins
clc
inc
add
das
xor
test
out
add
cld
mov
cmps
out
(bad)
fimul
xor
mov
sub
sub
imul
rcr
cwde
adc
add
addr16
or
push
scas
inc
and
mov
mov
daa
inc
pop
jb
xchg
xchg
add
and
add
outs
aaa
mov
lock
push
cmp
and
loopne
inc
cmp
push
data16
pop
xor
add
push
loopne
mov
fnstcw
cs
xor
xor
adc
jle
dec
sub
pop
sub
cli
sbb
or
icebp
icebp
rcl
ds
add
jmp
mov
pop
push
dec
fcom
pop
sahf
lods
pop
pop
jmp
inc
clc
xchg
adc
addr16
add
pop
push
addr16
cmp
je
cmp
jmp
stos
test
jp
push
xor
xchg
pop
push
xor
sub
push
lods
push
xchg
adc
sub
mov
add
retf
cld
jg
or
add
cmp
add
in
add
in
iret
or
cmp
sub
loope
push
aas
retf
xor
adc
inc
mov
xchg
push
(bad)
in
pop
adc
or
inc
mov
pop
mov
iret
cmp
inc
fisttp
xor
ud0
ret
(bad)
mov
xor
xor
mov
clc
pop
cld
dec
shl
add
push
shr
clc
push
mov
cmp
jne
dec
bound
pop
add
aaa
sub
mov
or
loop
push
adc
add
and
je
mov
cmp
jne
outs
call
add
dec
add
adc
add
jne
add
in
jg
shr
pop
cmp
cmp
jne
shr
shr
sbb
mov
pop
push
mov
shr
or
sbb
inc
dec
loopne
pop
loope
add
repz
shl
pop
in
pop
and
outs
xor
dec
xor
mov
dec
and
sbb
add
adc
xchg
inc
call
sbb
cmp
jbe
jle
or
sbb
xor
popa
gs
or
or
je
or
cmp
jg
inc
inc
test
jl
cmp
jg
add
mov
inc
rep
jmp
sbb
in
leave
jmp
sti
popf
add
mov
call
nop
push
mov
push
mov
lahf
lods
mov
pop
ret
push
mov
dec
nop
movs
and
je
jbe
adc
or
lods
shr
add
rcr
cli
imul
or
out
pop
and
pusha
pop
or
push
cmp
jnp
sti
outs
or
in
add
jo
mov
dec
mov
inc
mov
aaa
mov
scas
cs
pop
add
pop
pop
pop
cmp
out
adc
push
push
sbb
cld
repnz
xchg
fldcw
mov
int3
lahf
inc
push
cmp
pop
int3
sub
lea
into
mov
in
and
cli
jo
push
je
mov
popa
add
inc
ss
xor
clc
xor
xor
jmp
hlt
imul
mov
cmp
clc
mov
stos
nop
aam
nop
sub
mov
add
jo
call
rcl
sbb
jb
push
(bad)
mov
mov
ss
ror
add
cmp
(bad)
rcr
add
dec
sbb
pop
(bad)
retf
or
mov
add
and
or
xor
xchg
sbb
(bad)
mov
or
jno
mov
or
addr16
std
add
mov
dec
jmp
ins
cmp
add
gs
outs
push
jo
inc
sub
pop
js
data16
lock
mov
mov
cmc
adc
mov
add
dec
jmp
push
pusha
(bad)
sbb
(bad)
sub
and
pushf
sbb
repnz
cmp
push
test
xchg
jmp
jo
push
adc
(bad)
jmp
pop
stos
pop
pop
lea
push
je
loopne
cmp
sahf
push
sub
cmps
xchg
fistp
pop
push
lea
lea
neg
out
test
adc
sti
or
mov
adc
pushf
rcr
arpl
ret
int3
cmp
ret
cmp
or
push
push
or
xor
ja
xchg
add
add
rcl
inc
sbb
(bad)
xchg
fs
pop
push
and
out
mov
jmp
stos
call
sbb
xor
jmp
dec
cmp
jge
shl
sbb
add
sub
cmp
and
mov
xor
inc
xor
fwait
sub
mov
jo
mov
xchg
inc
mov
jecxz
ror
inc
and
lea
test
push
xor
dec
jl
jge
inc
outs
jb
es
xor
iret
sub
add
lea
hlt
fwait
ret
push
mov
je
dec
hlt
mov
sub
iret
dec
popa
dec
cmp
push
adc
nop
cmp
mov
cmp
sub
adc
pop
or
mov
int3
mov
mov
mov
mov
cmp
jge
icebp
sahf
pop
mov
sub
icebp
mov
stc
push
push
popa
sbb
pop
push
aaa
pusha
test
xor
sbb
sbb
ds
cld
jp
cmc
(bad)
out
sub
int3
lock
and
or
mov
adc
(bad)
sub
aam
adc
mov
or
adc
push
mov
test
into
push
mov
shl
push
jbe
mov
adc
call
ret
pusha
sub
jb
test
lods
fmul
add
mov
and
and
pop
xor
add
pop
xlat
adc
not
sahf
dec
jb
push
inc
push
mov
xchg
mov
aas
inc
fwait
cmp
pop
add
out
jle
js
and
or
sbb
adc
adc
cmps
adc
cmp
xchg
push
daa
stos
imul
jmp
inc
pop
mov
add
mov
xchg
retf
sti
shl
mov
call
inc
ret
loopne
push
imul
mov
clc
outs
movs
jle
dec
mov
sub
sub
clc
data16
mov
in
jmp
or
mov
pop
call
or
mov
sub
pop
cs
fist
mov
cmp
push
mov
pop
push
add
push
adc
jnp
push
clc
cmp
fild
dec
cmp
(bad)
into
fstp
adc
add
or
inc
mov
aaa
sub
add
and
mov
gs
dec
jne
mov
sbb
dec
xor
lock
and
fmul
push
sub
adc
lock
xlat
enter
movs
sar
fwait
xlat
push
add
xchg
fild
addpd
add
mov
bound
or
sbb
mov
stos
shl
mov
fdiv
or
mov
enter
xchg
cwde
mov
test
add
jmp
push
cmp
ins
je
ja
lods
das
mov
or
scas
xor
and
sub
dec
loope
add
cmp
sbb
ret
repnz
add
inc
cmp
les
mov
pop
push
mov
mov
push
adc
lds
mov
ltr
mov
push
psrlw
sub
cmp
js
add
sub
es
test
pop
cmp
enter
cmp
jecxz
add
xchg
pop
jo
push
adc
push
cs
and
add
out
push
fsubr
sbb
mov
ss
adc
out
popf
mov
adc
icebp
lahf
pop
xor
mov
xlat
add
inc
cld
add
nop
adc
mov
adc
gs
mov
loop
or
push
and
movs
or
in
cdq
and
adc
dec
fadd
shl
or
int3
add
loop
mov
in
push
cmc
adc
or
shl
sbb
xchg
loopne
or
or
xchg
push
jno
out
xor
nop
dec
cmp
add
add
add
mov
push
fst
sbb
cmp
jne
rol
fisttp
pop
stos
mov
sahf
(bad)
(bad)
fisttp
dec
lds
add
mov
mov
ss
xor
xor
(bad)
fmul
hlt
ss
jl
jle
dec
cwde
sub
pusha
icebp
shr
xlat
mov
sub
push
lea
shl
inc
push
adc
cmc
push
pop
rol
cmc
mov
inc
mov
mov
xchg
mov
leave
scas
inc
sub
jle
clc
jbe
sub
cmp
push
dec
cmp
push
popa
imul
repz
push
sbb
dec
neg
sbb
add
ins
jnp
sbb
sbb
push
and
pop
push
sub
retf
mov
rol
sub
fcmovb
fcomp
sub
data16
jmp
pop
and
in
or
and
cli
mov
push
dec
jl
push
push
xor
inc
inc
sub
cmp
mov
sub
fidivr
cmp
add
scas
(bad)
pop
push
(bad)
add
outs
or
fsub
neg
jns
add
mov
je
outs
sub
mov
data16
adc
in
pop
lods
mov
cmp
je
dec
inc
shl
add
add
xchg
shl
or
mov
stos
sbb
cmp
rcr
fstp
(bad)
jge
push
pop
xor
and
jne
jl
mov
add
ja
sahf
jns
lods
ins
add
mov
xchg
pusha
aad
popa
mov
pop
cld
bound
mov
dec
and
mov
pop
or
push
jecxz
mov
jnp
inc
in
cmp
popaw
sbb
fadd
jne
sub
jecxz
dec
or
sub
dec
cld
je
or
jne
mov
and
jb
pop
data16
cld
jge
mov
sbb
or
loop
jne
adc
das
xor
mov
and
add
sahf
sahf
shr
mov
sahf
ins
push
jns
sub
inc
jo
mov
add
xsaves
or
push
xchg
lock
xor
pop
cmc
mov
xor
mov
adc
enter
xor
sahf
mov
mov
and
cmp
add
js
pop
or
push
out
add
add
xor
jmp
mov
aad
xchg
rol
sti
add
test
adc
add
jle
inc
push
adc
cwde
jl
or
mov
jge
mov
add
aas
push
(bad)
(bad)
xor
xchg
movs
mov
(bad)
xor
add
mov
test
sbb
inc
jge
jmp
rcr
lock
adc
push
xchg
or
pop
movs
xchg
and
add
mov
jo
or
mov
or
xor
pop
xor
mov
mov
pop
lea
jl
push
fdiv
ins
inc
add
mov
add
call
and
out
popf
or
push
mov
retf
mov
call
add
or
or
sub
(bad)
(bad)
cmp
je
cmp
je
cmp
je
cmp
je
cmp
test
add
add
xor
or
mov
pop
push
mov
mov
dec
test
or
adc
add
mov
mov
mov
les
pop
add
cmps
in
fimul
pop
cmp
pop
jmp
cmp
add
push
shl
lock
in
mov
loopne
repnz
cmp
popa
pop
call
pop
or
nop
ss
add
test
repz
pop
mov
out
inc
jb
movs
xor
xor
push
mov
xor
add
jg
fstp
sub
mov
and
(bad)
xchg
dec
scas
cmp
pop
and
je
outs
xchg
sbb
cdq
adc
pop
add
sar
cmp
jmp
test
enter
jbe
test
and
pop
mov
jae
sbb
pusha
imul
or
into
adc
xchg
mov
mov
fs
mov
sahf
(bad)
out
rcr
retf
mov
jmp
jae
xchg
inc
jo
xchg
cmp
sbb
sbb
and
push
xorps
pop
pop
mov
in
or
sbb
sbb
adc
mov
push
std
dec
xchg
xor
mov
jbe
pop
outs
cld
push
push
bound
jb
clc
jo
or
ja
push
ficom
add
sar
lock
jno
mov
jecxz
push
mov
xor
mov
xor
or
push
or
cmp
and
and
ret
jge
or
jg
fsub
in
pop
cmp
xor
mov
cld
sub
mov
jnp
(bad)
daa
jb
in
in
hlt
jmp
dec
push
outs
push
jle
les
jbe
jo
rcl
push
pop
dec
loop
inc
mov
mov
jmp
aas
add
sar
cwde
lea
xor
mov
mov
ds
mov
add
cmps
dec
jne
inc
test
or
cmp
inc
mov
mov
mov
mov
sbb
dec
ret
test
jl
push
faddp
inc
xchg
pop
jo
adc
adc
adc
loope
mov
fs
out
dec
jne
sub
xor
je
sbb
sub
xchg
imul
les
dec
mov
cmp
cmps
or
fsubp
mov
push
inc
add
add
inc
call
repnz
inc
add
jbe
mov
mov
cmp
jmp
iret
push
int3
lock
adc
popa
pop
sub
cwde
pusha
xor
lea
ja
sub
and
mov
pop
mov
test
lahf
ror
adc
(bad)
jle
or
jbe
push
sbb
inc
stos
xchg
pop
xchg
mov
cmps
mov
inc
repnz
push
xchg
xchg
push
pop
push
jp
jmp
push
adc
sar
pusha
into
pop
ret
aas
mov
int3
mov
iret
ret
push
inc
adc
and
mov
mul
add
jg
adc
retf
retf
jge
add
dec
(bad)
sti
call
or
or
(bad)
pop
xor
xor
sub
sbb
sar
ja
(bad)
jg
xor
xor
sub
sbb
jne
cmp
jb
mov
xchg
stos
sbb
outs
add
retf
sub
mov
jl
jmp
adc
jmp
mov
jmp
(bad)
push
mov
imul
(bad)
cmp
loopne
xchg
sub
enter
rol
mov
cwde
mov
stc
fild
or
dec
sbb
or
xchg
das
or
je
mov
mov
fild
xor
xor
shl
rcl
rcl
rcl
cmp
jb
adc
fidiv
sub
in
and
lock
inc
loop
ret
jae
(bad)
pop
jge
mov
or
(bad)
xchg
add
ret
mov
fincstp
fild
iret
sbb
cld
push
mov
mov
pop
test
sbb
clc
repnz
add
sub
mov
lahf
and
out
jl
pusha
fisttp
xchg
shld
loopne
sbb
vshufps
shr
cs
(bad)
aad
in
mov
in
addr16
push
(bad)
sbb
(bad)
push
push
clc
icebp
scas
je
or
push
wrmsr
mov
adc
outs
(bad)
and
mov
push
idiv
jle
add
pop
sbb
jne
mov
jle
xor
(bad)
addr16
paddw
jmp
xor
je
jb
outs
push
pop
je
xor
sub
or
punpckhbw
xor
cmp
adc
pop
js
test
or
push
js
cli
inc
mov
dec
adc
es
stc
push
jb
test
adc
sub
fsub
popf
iret
dec
inc
add
mov
ins
mov
or
jb
sub
inc
cmp
fmul
sub
jbe
jmp
jg
mov
sub
(bad)
cdq
(bad)
nop
mov
shl
add
mov
lock
or
xor
ins
stos
fmulp
adc
inc
mov
push
push
mov
xor
rol
ficom
dec
test
jnp
pop
sbb
in
dec
inc
int3
add
and
sub
jg
repnz
inc
xor
adc
adc
sub
pop
pop
mov
and
jl
sbb
out
sbb
sbb
xchg
pusha
add
pushf
sar
jg
clc
shl
repz
or
pop
rol
(bad)
mov
outs
or
adc
ss
or
icebp
or
fsubrp
dec
xchg
loop
push
repz
ss
or
sub
and
mov
sahf
ja
in
inc
adc
add
sub
sbb
and
mov
movs
dec
push
call
xchg
adc
adc
into
xchg
enter
and
sbb
push
(bad)
fcomp
jmp
aaa
and
push
cmc
movs
mov
xchg
pop
add
sbb
pop
in
cmp
sti
jns
pop
cdq
add
movs
mov
int
loop
sub
sahf
sbb
fstp
ds
es
loopne
mov
call
push
clc
mov
add
in
inc
fimul
sbb
jge
mov
into
mov
adc
cmp
enter
nop
cmp
sub
(bad)
test
clc
movzx
push
clc
adc
dec
push
cmps
in
or
sbb
std
push
mov
add
imul
(bad)
cdq
idiv
cmp
xor
in
ss
out
mov
cmp
jne
push
jo
push
imul
sbb
cmp
nop
ret
mov
sub
xor
dec
js
outs
loopne
lea
adc
stos
ror
nop
jmp
retf
pop
fsubr
cmp
jnp
xor
(bad)
into
or
les
mov
dec
mov
dec
jo
test
push
and
into
je
push
ja
pop
add
ss
or
mov
sub
mov
sub
jmp
jg
or
out
lock
push
into
pop
sar
lock
shl
add
cwde
call
jg
mov
or
adc
and
adc
xor
push
fmul
lock
dec
jne
push
mov
add
ins
ins
jg
xchg
ja
adc
cmp
dec
pusha
push
push
sbb
mov
dec
adc
bound
jmp
pop
add
push
jne
aam
ret
mov
lock
js
stc
jne
or
mov
add
mov
push
fist
je
ficomp
call
rcl
push
jle
fidivr
rcl
jle
lock
jp
adc
bound
cmp
xor
xchg
push
outs
and
imul
dec
push
mov
dec
lds
push
add
enter
xor
ds
pop
push
xchg
mov
push
push
or
movs
(bad)
xor
push
ins
mov
(bad)
sbb
push
mov
or
int3
xor
cmp
mov
adc
jns
add
lock
aaa
dec
jne
push
mov
aas
push
dec
or
mov
fisub
xchg
popf
sbb
pop
hlt
push
hlt
pop
out
ss
sar
bound
jl
inc
clc
adc
in
sub
jnp
adc
dec
cwde
push
push
push
mov
loop
retf
std
pop
pop
dec
ficom
rcr
mov
jbe
add
loopne
sub
clc
fild
pop
push
jb
dec
lds
mov
jle
in
je
into
push
cmp
test
aam
sahf
mul
jg
or
add
inc
cmp
dec
pusha
loope
jle
mov
adc
sbb
dec
pop
fimul
add
or
adc
pop
jmp
mov
xchg
loope
add
cmp
je
jo
and
push
mov
mov
push
dec
daa
rol
xor
cwde
icebp
scas
ror
movs
dec
mov
jge
sti
sub
mov
lock
call
out
or
mov
call
pop
pop
or
add
aas
xlat
shl
mov
mov
mov
nop
(bad)
or
shr
lods
push
ds
mov
scas
inc
dec
jne
xor
int
das
pop
in
sbb
call
aas
and
add
jne
pop
jnp
add
scas
inc
sbb
xchg
sbb
idiv
mov
inc
sub
(bad)
rcr
jne
push
and
dec
lods
cdq
lock
ja
mov
adc
and
mov
stos
add
sbb
xchg
xor
inc
sbb
jbe
dec
cmp
mov
xor
stos
add
cld
jo
dec
or
mov
hlt
div
(bad)
movs
sti
sti
sub
pop
int3
push
or
outs
je
mov
gs
inc
push
pop
je
popa
outs
ins
pop
outs
bound
std
mov
jmp
push
outs
cmp
sub
sub
push
ins
or
mov
sub
push
push
xchg
sbb
(bad)
ins
mov
inc
push
push
push
jno
es
add
popa
imul
sub
dec
pop
popa
sub
popa
addr16
dec
es
mov
jae
ins
loopne
ins
in
outs
jae
pop
pop
sti
cs
das
pop
fs
inc
inc
sub
sub
push
loopne
mov
outs
outs
in
sub
mov
jg
je
ins
sbb
adc
inc
dec
(bad)
sub
jb
dec
imul
inc
mul
in
or
or
ins
push
or
gs
dec
int3
xchg
xchg
in
xor
ja
pop
push
pop
mov
cmp
push
aaa
pusha
xchg
xor
fistp
or
aaa
outs
aaa
cmps
cwde
loopne
mov
sbb
sub
push
data16
aaa
xchg
rcr
fisub
aaa
dec
dec
inc
das
out
std
dec
out
pop
push
cmp
movs
push
jg
sti
dec
loope
add
setae
or
dec
push
adc
(bad)
mov
fwait
push
xor
xor
or
xchg
adc
mov
mov
push
push
or
jb
push
dec
pop
mov
jne
addr16
xchg
cmp
or
jae
xor
xor
adc
test
push
ja
rol
push
mov
(bad)
add
popa
lock
jne
in
push
jmp
ja
hlt
call
push
movzx
mov
data16
adc
add
mov
jg
dec
or
add
and
sar
mov
add
or
enter
mov
sbb
adc
inc
in
(bad)
sub
jmp
in
jmp
aaa
inc
shl
aaa
pop
je
mov
pop
pop
pop
outs
add
in
lods
pop
add
loope
sar
js
add
js
fdivr
adc
ror
jmp
mov
adc
mov
stos
add
or
push
add
mov
ja
sub
mov
rol
mov
test
sbb
mov
adc
mov
(bad)
movs
mov
or
jmp
mov
test
add
and
push
mov
shr
(bad)
xor
mov
sub
or
jmp
retf
jmp
jae
push
xor
adc
ja
mov
sub
std
xor
add
shr
cmp
fst
cld
inc
mov
jnp
dec
jmp
sbb
cmp
cdq
add
xor
stos
mov
out
psllw
les
cmp
jne
inc
and
or
pop
test
in
cmp
dec
mov
pop
fidiv
ds
movs
fs
and
mov
rcr
xchg
push
mov
dec
rol
mov
push
inc
ret
fild
push
add
mov
sbb
std
pop
imul
mov
inc
test
add
dec
loopne
jmp
mov
fsubr
jne
ret
and
in
push
js
mov
out
push
mov
ds
cmp
push
push
and
and
add
inc
pushf
sbb
dec
cmp
popa
inc
das
sbb
lods
mov
and
inc
and
loop
je
and
xor
rol
inc
lock
es
mov
leave
movzx
sbb
shr
and
inc
and
dec
inc
in
ror
imul
sbb
lea
ret
mov
cmp
push
and
(bad)
cmp
lock
popf
dec
fwait
outs
cmp
sahf
adc
add
and
and
adc
push
pop
std
or
pop
pop
and
mov
add
in
cmp
sbb
dec
mov
adc
mov
retf
push
lods
push
gs
inc
push
ret
sbb
out
xor
cli
or
jns
mov
sbb
mov
xchg
mov
call
arpl
sub
ret
je
mov
cmp
fadd
sbb
mov
frstor
ds
clc
(bad)
and
cmps
out
sbb
sub
dec
xchg
sub
mov
push
sbb
dec
mov
push
and
(bad)
rcr
test
inc
fsubr
sub
push
and
rcl
pushf
xor
push
in
or
(bad)
pop
jne
jb
mov
mov
sti
pop
adc
iret
or
mov
push
push
and
ret
sub
outs
loopne
(bad)
enter
hlt
mov
call
dec
push
lea
add
add
mov
cmc
jnp
cmp
cmp
cmc
mov
mov
sub
outs
and
push
out
jmp
mov
mov
sub
sar
jns
adc
add
outs
jo
add
daa
rcr
xor
xchg
push
or
(bad)
sar
outs
rol
add
inc
fist
jmp
add
jmp
rol
and
add
inc
mov
lea
inc
rcl
cmp
push
in
test
and
cmp
dec
ins
cmp
lea
nop
sar
test
js
(bad)
jno
int
dec
arpl
dec
add
dec
sub
dec
ror
inc
add
idiv
test
mov
stos
adc
push
pop
push
out
scas
dec
mov
push
popa
je
dec
popa
ins
gs
daa
(bad)
rcl
fimul
or
sub
in
adc
xchg
jle
into
dec
ds
jmp
popa
jo
nop
sbb
test
push
mov
and
and
mov
push
jo
push
xor
sti
xchg
inc
je
rcr
pusha
cmp
call
ja
rol
xor
xor
inc
adc
pushf
or
mov
xor
cmps
inc
pop
jg
inc
frstor
push
inc
push
xchg
clc
pop
push
in
popf
and
xor
cwde
or
dec
mov
push
jno
and
pop
jmp
xor
sbb
loope
or
js
std
jmp
mov
outs
add
add
popa
(bad)
(bad)
jge
in
call
arpl
loop
pop
xor
pop
inc
cs
or
sbb
cwde
(bad)
and
push
mov
imul
mov
inc
and
ds
shl
add
arpl
sub
sahf
push
ins
inc
jo
add
aaa
outs
cmp
scas
mov
inc
xchg
adc
adc
cmp
loope
push
repz
fwait
mov
push
lahf
je
mov
jne
addr16
cli
dec
jmp
in
cmp
mov
cmp
iret
sbb
pop
in
push
dec
jp
push
test
jbe
(bad)
aas
inc
js
pusha
cdq
jge
cmp
setne
test
je
pop
enter
lea
push
data16
sub
das
hlt
and
mov
jecxz
(bad)
mov
jmp
cmp
fwait
xchg
mov
adc
mov
jmp
enter
cmp
jg
push
ja
jg
sbb
sub
call
mov
sub
sub
fcom
dec
mov
mov
adc
test
fcomp
ds
jle
leave
xchg
add
mov
fisttp
mov
in
add
mov
add
xor
aad
sar
sub
xor
mov
mov
cdq
and
jmp
or
jge
cwde
pusha
push
sbb
inc
cmp
pop
dec
xor
lds
sbb
pop
in
pop
push
inc
nop
inc
pop
xchg
pop
or
adc
jbe
retf
mov
mov
add
sub
(bad)
mov
pop
je
retf
lahf
sbb
xchg
scas
aaa
cmp
jl
push
cs
push
(bad)
jp
retf
icebp
jmp
dec
cmp
fcmovne
dec
push
pfrcp
and
pusha
(bad)
xor
or
dec
jp
mov
popa
xor
jne
pusha
test
and
jne
dec
test
mov
or
sbb
into
aas
sbb
scas
sub
lds
cs
loop
in
inc
xchg
dec
dec
call
xor
clc
xchg
cli
imul
or
shr
addr16
adc
scas
aam
inc
xor
dec
mov
dec
clc
pop
scas
pop
sbb
sbb
cdq
mov
add
js
or
ror
ja
xlat
cmp
mov
mov
loopne
ja
xor
(bad)
cmp
adc
lods
adc
add
adc
loopne
es
test
shl
inc
push
mov
out
dec
jmp
(bad)
and
adc
push
mov
test
mov
mov
inc
mov
mov
sbb
(bad)
clc
nop
pop
xchg
adc
mov
sbb
mov
mov
pop
nop
jo
and
jmp
cmp
cmp
nop
cmp
or
inc
(bad)
imul
mov
ins
fist
xor
mov
fdiv
mov
adc
inc
mov
adc
fnsave
cmp
(bad)
lahf
or
mov
pop
mov
lds
adc
(bad)
cwde
lock
inc
push
sbb
cwde
fstp
ret
out
push
sbb
mov
loopne
pop
out
fimul
sub
nop
add
add
or
and
jne
pop
add
or
pop
call
push
mov
cmp
xchg
pushf
mov
daa
jo
add
mov
rcr
add
sbb
xchg
add
test
outs
scas
and
fistp
retf
xadd
add
ret
imul
sub
(bad)
ror
xor
shl
pop
cld
or
push
xor
add
and
bound
mov
add
adc
or
cmp
mov
xchg
shr
xchg
cmp
fcomp
adc
call
loop
lods
push
add
ss
adc
or
pop
xor
pop
dec
shl
pop
add
loop
call
call
push
jle
movs
mov
lock
sbb
push
jo
fs
sub
lods
les
pushf
inc
clc
sbb
mov
ss
adc
daa
and
sbb
ret
ja
jge
push
xor
xor
push
mov
push
fsubr
popa
cmps
idiv
sbb
push
and
lock
addr16
mov
pop
not
and
jp
mov
loopne
and
jmp
mov
jbe
cmp
ja
(bad)
push
jne
sub
jl
call
dec
and
jmp
dec
bnd
rcr
outs
fbld
jg
pop
test
adc
mov
push
loop
cmp
xor
pop
fild
sub
jmp
ret
stos
fs
idiv
add
push
jbe
adc
cmp
cmp
push
cld
shl
lock
xor
ins
ins
inc
(bad)
fs
and
das
push
and
cmp
mov
ja
dec
push
mov
pop
nop
pop
test
inc
(bad)
test
pop
stos
xchg
push
fdiv
add
cdq
mov
in
add
xchg
iret
lea
in
sbb
mov
mov
adc
push
cmp
mov
sar
push
lea
pop
adc
jo
js
ja
adc
or
outs
hlt
adc
xor
clc
(bad)
add
or
pusha
outs
jns
and
test
mov
cli
loop
xor
xchg
mov
pop
lock
cmp
lea
mov
or
sbb
daa
ds
add
ss
into
xlat
push
fnsave
push
pop
into
add
and
inc
not
xchg
add
fdivp
mov
cmp
xchg
push
sar
sbb
xchg
icebp
push
out
add
sbb
movs
out
mov
pop
jmp
xlat
dec
stc
push
repnz
adc
cmp
or
sbb
dec
push
dec
adc
mov
pop
mov
add
dec
ret
ror
add
stos
sbb
push
das
pop
sbb
and
sub
xchg
cmp
(bad)
or
ja
rol
sub
add
mov
cmp
pop
stos
call
adc
or
out
ret
(bad)
std
lock
mov
aam
mov
sub
push
mov
add
dec
jne
mov
xchg
dec
aam
hlt
cmp
xor
pop
add
jae
dec
retf
cmp
jno
add
mov
mov
sar
mov
call
push
or
adc
push
push
push
xor
imul
cmp
push
fmul
cwde
lods
stos
sub
push
and
or
adc
ror
aas
add
and
and
dec
shr
cmp
jne
enter
adc
or
jbe
mov
xor
lods
ja
or
or
mov
cmp
jne
add
or
inc
or
inc
or
cmp
add
ret
mov
ret
ss
not
ins
dec
movs
mov
mov
add
mov
mov
sub
pop
adc
dec
je
mov
add
dec
sbb
pop
pop
xchg
rcl
jmp
test
add
sti
shr
jecxz
mov
iret
dec
jg
mov
jmp
mov
jnp
mov
cmp
jg
and
push
idiv
in
or
mov
daa
loopne
push
pop
adc
arpl
scas
(bad)
xchg
shr
mov
dec
clc
pushaw
(bad)
ror
mov
sub
xchg
cmp
jmp
or
mov
xor
add
inc
bound
loopne
add
je
push
or
int3
jle
inc
and
dec
jmp
lahf
xor
push
ret
fstp
mov
inc
(bad)
push
lods
pusha
sahf
xchg
repz
leave
pop
pop
rcr
push
cmp
inc
std
xor
cmp
mov
inc
xor
and
dec
dec
cli
or
pop
pop
mov
or
xchg
xchg
ja
add
jmp
add
leave
leave
enter
hlt
lock
leave
leave
leave
in
call
push
fdivr
inc
jl
call
jo
push
outs
mov
loopne
shr
dec
push
mov
jg
xchg
jl
or
fmul
push
dec
jmp
mov
add
scas
clc
mov
test
jne
mov
mov
cmp
inc
sbb
mov
mov
inc
lods
sbb
mov
jnp
mov
shr
mov
mov
sub
dec
or
sar
adc
lea
cld
aas
fidivr
scas
test
lods
fmul
mov
retf
pusha
dec
rep
pop
push
inc
and
in
ja
add
pop
fcomp
sbb
or
add
mov
sub
repnz
or
jnp
mov
push
adc
sbb
dec
adc
mov
dec
sbb
in
sbb
mov
call
ror
ficom
mov
sar
mov
in
add
mov
loope
dec
lea
mov
je
scas
inc
push
push
ss
add
shl
add
inc
data16
pusha
and
sbb
inc
test
rol
clc
add
out
shl
add
sbb
push
inc
add
loopne
cs
pop
loopne
or
pop
pop
pusha
and
jmp
mov
and
ret
xor
retf
gs
rcl
call
inc
repz
adc
test
xor
add
pop
idiv
pop
sbb
enter
shl
add
outs
pop
rol
inc
hlt
into
or
push
sbb
and
fstp
(bad)
fisttp
ins
and
fidivr
adc
push
fstp
xor
push
outs
add
and
lock
cli
add
jnp
lock
cmp
jmp
test
aas
lahf
and
pop
sbb
dec
test
inc
dec
nop
add
pop
lods
adc
loope
call
cmp
ret
cmp
loop
jb
push
or
jp
push
mov
cmp
movs
mov
dec
hlt
rol
jne
btc
jmp
mov
mov
std
loopne
inc
or
std
inc
and
jmp
add
nop
pop
std
jg
sub
or
sbb
jp
paddsb
mov
mov
sbb
in
dec
nop
add
and
mov
sbb
xchg
fsubr
jle
cmc
ret
sbb
and
push
push
jecxz
push
push
shl
imul
push
add
inc
(bad)
mov
(bad)
(bad)
xlat
jge
mov
mov
cmp
mov
xor
mov
inc
or
imul
out
push
add
retf
dec
sbb
call
data16
add
push
in
sbb
push
jb
in
not
retf
mov
(bad)
fdiv
push
(bad)
mov
ret
pop
adc
call
sub
jbe
sbb
mov
push
loopne
add
les
jl
sub
in
pop
xchg
pop
mov
or
adc
fsubr
aaa
cmp
lock
test
cmp
sbb
cmp
jne
push
push
or
loope
xor
jne
or
ret
sti
mov
mov
mov
sbb
cmp
push
push
xchg
shr
ins
dec
push
sbb
xor
push
shr
dec
push
jnp
cld
(bad)
and
pop
jb
ret
inc
dec
sahf
jp
cs
sub
dec
xchg
sub
xchg
dec
out
sbb
sub
inc
dec
je
mov
cmp
je
movzx
jo
fnstenv
push
push
xchg
jbe
mov
loop
add
out
jne
mov
sub
xchg
scas
mov
mov
mov
mov
loop
push
jg
xchg
jg
dec
or
mov
jb
or
jne
cmp
jne
sbb
push
inc
outs
je
hlt
rcr
add
scas
adc
(bad)
fistp
es
jmp
dec
outs
je
addr16
jns
inc
jb
popa
jns
add
add
add
adc
mov
push
jns
inc
ins
cs
jns
gs
add
mov
add
mov
jb
imul
add
pop
and
jbe
push
push
outs
neg
or
outs
cmps
add
push
int3
outs
mov
into
test
inc
cld
out
ins
fisubr
inc
sbb
jo
out
xor
jmp
mov
cmp
add
push
mov
and
jo
push
fisttp
ja
xchg
and
push
mov
scas
cmp
mov
adc
adc
and
and
out
punpcklbw
or
mov
jmp
pop
and
divps
ins
shl
jne
jae
mov
and
dec
repnz
pop
outs
inc
outs
jne
pop
call
and
push
inc
outs
outs
ins
popa
outs
cmp
sbb
adc
jo
addr16
push
je
pop
fcom
push
add
enter
pcmpeqw
icebp
ss
and
outs
adc
fs
xor
outs
emms
das
clc
xor
and
add
into
jne
ins
imul
cmp
sbb
sahf
mov
outs
call
arpl
je
inc
jmp
es
arpl
lods
imul
mov
push
or
inc
fs
inc
mov
outs
inc
pop
pop
(bad)
out
sbb
fs
push
push
add
adc
pop
mov
arpl
sbb
stos
imul
inc
repnz
jle
not
adc
xchg
add
hlt
cld
adc
fnsave
sbb
add
adc
or
outs
cli
ja
or
outs
jo
inc
jno
test
je
push
retf
xlat
cmp
xchg
add
adc
outs
popa
push
test
or
xlat
outs
mov
xchg
mov
popa
rcpps
jb
push
sub
cld
int
add
dec
add
add
and
sub
inc
pop
jnp
dec
movs
xchg
inc
add
inc
push
dec
jae
pop
add
pop
gs
lahf
imul
mov
out
jle
fiadd
sbb
daa
sub
push
fild
pop
cmp
or
add
lds
add
sbb
sbb
in
loop
xchg
dec
ror
adc
add
mov
inc
xchg
movs
adc
mov
xor
and
addr16
vorps
sub
add
inc
aad
test
mov
push
push
and
push
cmp
push
icebp
jno
stos
bound
inc
push
js
mov
mov
outs
xchg
sbb
adc
jg
mov
jg
popa
jg
pop
stos
movs
addr16
dec
ins
add
into
popa
cmc
add
add
mov
dec
inc
js
pop
push
cmps
cmp
daa
fiadd
imul
in
and
pop
sub
int3
gs
sbb
jl
jb
push
push
popa
retf
add
sbb
imul
push
sbb
push
gs
outs
push
push
adc
or
jge
or
data16
xchg
add
call
jnp
push
push
loope
mov
add
dec
and
xor
jge
imul
and
retf
cmp
push
add
jo
or
std
idiv
push
jae
dec
gs
or
imul
or
or
inc
outs
je
outs
ins
pop
fsubr
popf
loopne
adc
xchg
in
adc
add
adc
cmp
ds
(bad)
add
xor
inc
add
add
jmp
ins
xchg
fld
les
and
shl
fwait
adc
mov
xor
fiadd
sbb
xor
and
test
xchg
add
je
jne
mov
sbb
dec
lds
ror
outs
rol
adc
adc
xchg
and
or
fimul
mov
jb
add
inc
outs
hlt
jae
push
or
push
pop
aas
mov
sub
adc
and
ds
add
xor
cmp
pop
xor
popa
xor
loopne
jnp
inc
adc
xor
or
popf
es
sub
pop
aaa
pop
push
arpl
jl
cmps
push
adc
jo
cmp
push
push
loope
into
jae
jge
mov
inc
fild
aas
push
adc
and
inc
inc
dec
loop
xor
pop
or
add
push
or
adc
mov
mov
push
outs
test
xchg
dec
mov
ret
xlat
rol
push
jecxz
shl
sbb
shr
sub
pushf
outs
data16
sti
push
bound
cmp
sub
adc
(bad)
jl
adc
sbb
sti
shl
or
adc
outs
fdiv
cmp
dec
adc
add
imul
outs
add
loopne
inc
add
jae
push
pop
pop
popa
jb
xor
ja
(bad)
addr16
gs
imul
adc
popa
outs
lods
sub
push
push
dec
pop
or
dec
sahf
add
or
xchg
(bad)
add
xchg
ja
cmp
inc
test
pop
push
out
push
inc
push
or
or
in
int
arpl
sub
mov
inc
sbb
push
cmp
mov
cmp
jl
cmp
jge
dec
cwde
push
jl
push
push
inc
jl
inc
outs
test
sahf
jmp
cmp
test
rcl
(bad)
cmp
daa
jle
pop
add
add
mov
data16
outs
test
push
mov
sub
(bad)
jmp
retf
push
and
sub
or
xor
jmp
xchg
mov
add
adc
sub
jmp
adc
inc
add
imul
pusha
pop
push
fdivr
fisubr
rep
pop
scas
cmps
inc
push
pop
jmp
mov
in
add
jmp
jle
add
dec
or
fidivr
pop
mov
add
mov
xor
lock
mov
jmp
cmp
push
jae
adc
push
sbb
(bad)
movs
je
inc
or
push
mov
(bad)
mov
push
or
fcomp
pop
out
jbe
imul
sub
std
pop
aad
ja
add
mov
sar
sbb
lea
add
add
push
scas
sar
mov
xor
sub
mov
aaa
xor
pop
sub
shl
stc
push
rcl
(bad)
aad
xor
cmps
xor
cmps
mov
dec
aam
cmps
add
ss
fmul
mov
dec
or
ja
inc
xchg
mov
and
sbb
mov
fadd
call
mov
ret
into
add
fst
ror
cmp
jle
xor
int3
call
loopne
add
inc
(bad)
pop
mov
ficomp
pop
js
mov
pop
shr
movs
hlt
xor
test
jne
push
xor
mov
adc
out
add
shr
add
lods
inc
sbb
add
inc
test
jle
push
pop
fild
enter
push
add
call
sub
adc
add
enter
jp
jne
push
repz
std
jg
xchg
dec
stos
pushf
cs
dec
arpl
dec
jne
push
loopne
in
bound
dec
xchg
retf
loop
or
dec
aam
push
adc
gs
jo
arpl
ja
icebp
push
dec
std
add
or
jae
jnp
add
push
mov
push
ja
je
jno
jmp
mov
jae
pop
jae
sbb
aaa
fs
jmp
(bad)
cmps
cmps
std
push
mov
inc
push
jae
enter
push
mov
adc
push
gs
push
dec
add
test
and
add
inc
aam
shl
cwde
movs
push
(bad)
ds
push
cmp
fucomi
arpl
cmp
or
inc
gs
pop
mov
(bad)
sub
adc
imul
cwde
mov
mov
js
lahf
fwait
cmp
fwait
jno
xor
fwait
test
jb
adc
push
jb
int3
ins
inc
shr
inc
jno
outs
inc
ins
shr
jle
and
or
mov
iret
adc
dec
jmp
ins
adc
cmps
loop
sbb
xor
and
jae
and
mov
dec
push
mov
mov
jle
outs
xchg
push
test
cli
mov
imul
and
add
scas
sbb
loopne
int
xor
ins
shr
pop
jnp
add
inc
xchg
je
push
dec
popa
das
jl
mov
cmovb
or
push
retf
(bad)
int3
outs
jle
xor
inc
xor
pusha
pop
enter
out
dec
cmp
ror
jb
xchg
or
int
inc
inc
arpl
inc
lahf
dec
outs
jne
std
sbb
je
or
bound
or
or
xchg
push
cmp
(bad)
fs
adc
and
jbe
dec
mov
mov
pusha
cmp
es
adc
push
movs
or
inc
or
and
ret
add
and
or
mov
scas
push
jmp
add
jg
adc
aaa
mov
mov
(bad)
rcr
inc
call
add
cmp
jbe
addr16
pop
or
leave
je
or
mov
inc
mov
outs
adc
arpl
cmp
loopne
inc
outs
mov
jae
inc
cdq
(bad)
call
push
call
jle
lock
imul
push
or
in
ja
xchg
retf
pop
dec
or
pop
mov
cmp
popf
add
push
sub
or
jnp
fwait
les
push
lahf
mov
mov
push
into
push
arpl
adc
stos
ss
ins
inc
jnp
push
adc
or
push
add
xor
pop
nop
adc
outs
es
jo
push
adc
out
daa
adc
es
adc
fsubr
push
loopne
add
daa
or
add
dec
fild
inc
aas
(bad)
add
push
adc
or
sti
sub
dec
aaa
hlt
das
push
ins
sub
adc
ret
sbb
ins
jo
cmp
push
ror
push
add
dec
(bad)
cmp
js
jo
imul
dec
adc
outs
loop
inc
xor
jae
(bad)
retf
into
or
dec
movs
into
jb
addr16
add
adc
jg
add
mov
pushf
js
push
push
push
push
lock
dec
dec
inc
pop
mov
push
push
pop
dec
inc
push
inc
inc
add
sti
pop
dec
dec
push
inc
or
ja
or
push
xchg
add
pop
lods
xchg
or
push
leave
(bad)
xchg
or
cmps
sub
fs
xor
or
mov
daa
mov
push
xor
xor
jns
push
das
sub
push
or
push
fucomip
dec
push
push
pop
inc
in
push
pop
popa
or
imul
cmp
add
and
mov
inc
and
mov
push
push
push
dec
inc
pop
cwde
icebp
ror
push
fidivr
movs
sti
leave
mov
sbb
bound
loope
rol
pop
inc
pop
inc
push
inc
jae
push
dec
inc
inc
adc
inc
inc
pop
inc
inc
inc
push
inc
and
test
lods
add
cld
and
dec
push
pop
jmp
xor
lock
mov
mov
xchg
or
test
rcl
adc
pusha
jo
push
(bad)
and
imul
cmp
push
ret
add
outs
jle
outs
or
aaa
inc
sub
fnsave
sub
ins
mov
or
xor
lldt
adc
adc
ret
loopne
and
or
or
mov
or
adc
sbb
mov
add
adc
jo
xor
inc
shl
and
mov
xchg
or
shl
test
add
add
fwait
or
rcl
pushf
inc
pop
xchg
add
ds
push
dec
inc
mov
mov
das
add
dec
xor
jg
js
push
dec
inc
inc
inc
inc
dec
xor
loopne
dec
inc
hlt
dec
inc
push
xor
push
scas
mov
das
add
inc
sub
mov
xor
push
out
das
mov
xor
add
dec
xor
pop
sub
push
fadd
push
shl
dec
int3
or
push
data16
push
sub
cmps
cmp
push
outs
and
jl
push
mov
sub
inc
cmps
or
pop
xor
push
or
dec
lock
mov
inc
or
jmp
imul
push
(bad)
mov
outs
dec
ret
in
dec
and
adc
mov
dec
jae
imul
inc
push
bound
xchg
test
and
popf
gs
cmp
out
or
dec
out
dec
sub
cmc
mov
rcr
or
inc
and
in
xchg
and
retf
xor
xor
cmps
outs
mov
pop
inc
dec
stos
sti
and
dec
add
pushf
mov
dec
jo
and
or
jns
push
gs
sub
and
sbb
mov
dec
inc
(bad)
fld
or
pop
nop
les
jbe
sbb
ss
enter
push
or
dec
or
or
and
push
pop
imul
sub
add
mov
ds
in
pop
lods
inc
add
aad
add
mov
sbb
ja
push
or
mov
mov
xchg
mov
rol
fwait
retf
push
das
(bad)
pop
push
inc
xor
enter
mov
or
(bad)
xor
lahf
or
and
retf
scas
test
bound
test
xchg
add
movs
or
pop
outs
add
daa
cdq
dec
inc
mov
xchg
mov
push
push
ins
rcl
daa
adc
scas
inc
fnstsw
push
ins
imul
sub
or
fbstp
push
push
inc
inc
sbb
adc
xchg
bound
mov
cmp
xchg
enter
es
or
jp
and
inc
and
and
jbe
bound
jecxz
inc
hlt
inc
push
sub
push
(bad)
jmp
sbb
dec
scas
loope
cdq
pop
imul
pop
pop
mov
sub
add
rol
cld
add
inc
pushf
jae
xchg
mov
neg
xchg
pop
push
add
sbb
mov
in
mov
xor
rcr
jb
push
out
sub
sub
jb
mov
rol
dec
cmp
jle
push
push
clc
ficomp
and
or
or
ja
popa
add
sbb
mov
into
and
icebp
sbb
and
pop
sub
lahf
movlps
loope
dec
add
bound
shl
add
add
sbb
icebp
dec
inc
or
adc
jg
loopne
gs
imul
add
xchg
cmp
lock
int3
inc
sbb
in
sbb
adc
pop
imul
xchg
and
imul
add
dec
sub
inc
mov
or
setl
xor
mov
dec
push
inc
outs
add
inc
add
and
jge
pop
ret
add
pop
sub
cmp
aad
push
or
jae
and
ins
and
das
shl
adc
test
push
scas
xor
lds
jge
and
mov
inc
shr
ins
jle
or
loopne
gs
(bad)
(bad)
dec
shl
push
outs
arpl
or
test
adc
adc
inc
jo
shl
adc
imul
ror
repnz
arpl
sahf
imul
sbb
mov
pop
xor
(bad)
sbb
inc
outs
js
fs
fimul
nop
push
imul
lahf
aam
dec
dec
sub
sub
aam
clc
lds
jns
or
dec
inc
pop
or
out
inc
inc
push
cwde
jo
loop
push
push
in
call
bound
dec
inc
in
fadd
div
jmp
and
mov
js
pushf
xor
mov
mov
cmps
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
sahf
pushf
pushf
add
cld
mov
fidivr
loopne
cmp
je
pop
xchg
ret
cs
cmp
mov
lock
call
in
(bad)
cmp
cmp
aam
int3
enter
cmp
sar
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
ins
push
fs
pop
das
add
push
push
push
clc
pop
(bad)
mov
mov
xor
out
sbb
mov
mov
call
or
or
add
fsubr
and
hlt
cld
mov
mov
mov
xchg
push
out
outs
mov
push
inc
jle
pop
pop
jb
push
rcr
cmp
jl
jmp
pushf
jno
jbe
push
cmovs
push
push
push
add
fstp
nop
pop
inc
dec
inc
(bad)
jb
in
cmp
pop
inc
jbe
push
sbb
jbe
pop
sbb
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
and
add
mov
hlt
daa
daa
daa
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sar
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmp
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
pop
das
daa
daa
dec
dec
push
mov
out
hlt
add
sbb
inc
outs
cmp
cmp
xor
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
scas
clc
leave
leave
leave
leave
hlt
lock
call
in
(bad)
leave
leave
leave
leave
aam
int3
enter
leave
(bad)
sar
mov
test
leave
leave
leave
movs
mov
leave
leave
xchg
nop
mov
test
nop
push
pop
lock
daa
mov
je
jo
ins
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
scas
clc
xchg
xchg
xchg
xchg
hlt
lock
call
loopne
aam
inc
daa
mov
lds
enter
daa
daa
sar
mov
lods
test
daa
daa
daa
movs
mov
daa
daa
xchg
nop
mov
test
bound
je
jo
ins
leave
leave
leave
leave
push
pushf
pop
enter
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
cld
lods
dec
dec
dec
inc
clc
hlt
lock
dec
dec
dec
dec
call
dec
dec
dec
fcom
ror
dec
dec
dec
dec
enter
dec
dec
dec
dec
mov
dec
dec
dec
test
mov
dec
cwde
xchg
nop
mov
dec
dec
mov
dec
js
jo
inc
cld
xchg
push
daa
mov
ror
fs
fs
pusha
subps
jb
and
daa
daa
pop
jb
inc
inc
cmp
daa
daa
daa
cmp
xor
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
cld
xchg
xchg
xchg
xchg
lods
clc
hlt
lock
xchg
xchg
in
call
in
in
(bad)
aam
in
in
int3
enter
in
in
mov
jb
in
pop
sbb
mov
lods
push
pop
movs
pushf
pushf
pushf
fmul
mov
pushf
pushf
pushf
nop
mov
pushf
cmp
pushf
pushf
pushf
jo
push
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
jb
sbb
sub
or
jb
and
push
data16
fisttp
in
xor
fsubr
sbb
sti
xlat
jle
dec
add
adc
mov
push
nop
loop
in
les
pop
sbb
in
in
sti
mov
push
mov
mov
mov
lock
sub
inc
or
or
iret
repz
adc
sbb
std
(bad)
iret
repz
cld
push
push
js
mov
outs
mov
jae
mov
pop
dec
and
(bad)
in
outs
scas
mov
mov
mov
mov
loopne
pusha
or
mov
push
mov
mov
push
push
push
arpl
pop
cmp
je
test
je
push
add
dec
fstp
sbb
or
pop
inc
xor
mov
cmp
out
add
inc
pusha
movs
(bad)
cmovb
ror
popa
add
add
outs
out
test
fwait
mov
push
add
dec
add
fadd
pusha
(bad)
outs
add
jae
pop
pop
inc
pop
add
dec
int
jmp
push
add
inc
aas
cmp
inc
call
add
push
arpl
push
or
or
out
data16
dec
add
sub
mov
adc
adc
inc
aad
psubsb
sbb
fsub
aas
in
sbb
loopne
mov
add
(bad)
loop
out
shr
test
je
mov
mov
jb
ja
adc
ror
les
sti
out
jmp
ret
xchg
push
mov
das
test
fst
clc
sbb
pop
push
add
adc
je
jp
mov
sqrtps
mov
call
push
icebp
repnz
xchg
xchg
xchg
hlt
cmc
div
xchg
xchg
xchg
xchg
clc
stc
cli
sti
enter
cld
std
clc
pmulhuw
fs
pavgb
loop
in
in
in
out
in
in
call
in
jmp
in
out
in
in
out
rcl
shl
in
in
aam
(bad)
in
in
xlat
fcomp
(bad)
in
in
(bad)
fisub
xor
in
ror
ret
daa
daa
ret
(bad)
(bad)
daa
daa
daa
(bad)
enter
daa
daa
daa
retf
int3
int
daa
daa
daa
daa
iret
mov
mov
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmps
test
stos
daa
daa
daa
daa
stos
lods
lods
scas
cdq
cdq
es
scas
dec
setno
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
cmp
cmp
jbe
js
cmp
cmp
jp
jl
cmp
cmp
jle
pusha
popa
cmp
cmp
bound
cmp
cmp
addr16
cmp
cmp
ins
ins
cmp
cmp
outs
outs
push
push
cmp
cmp
push
push
push
push
cmp
cmp
push
push
pop
pop
cmp
cmp
pop
pop
pop
pop
cmp
cmp
pop
pop
inc
inc
cmp
cmp
inc
inc
inc
inc
cmp
cmp
inc
inc
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
xor
cmp
cmp
xor
xor
cmp
cmp
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
and
cmp
cmp
and
and
cmp
cmp
es
sub
cmp
cmp
sub
sub
fnstcw
(bad)
mov
ret
sbb
adc
cwde
sbb
aaa
dec
cmp
add
add
or
or
(bad)
(bad)
dec
adc
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
dec
sbb
sub
adc
xor
add
xor
xor
xor
cmp
nop
xchg
push
ins
add
cmp
jmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sti
add
push
push
sbb
mov
push
sbb
or
push
pop
pop
pop
and
fadd
pop
sbb
pop
add
dec
mov
pop
pop
dec
rcl
add
pop
add
bound
add
or
add
adc
add
adc
fadd
mov
(bad)
fild
jo
add
add
add
(bad)
add
iret
mov
data16
and
mov
inc
add
(bad)
aaa
mov
pop
add
jo
add
add
neg
inc
rol
loopne
lock
add
add
add
into
pop
ja
jae
jae
sub
push
movsx
jle
add
jo
add
outs
mov
rol
int3
(bad)
out
jmp
add
add
add
add
add
push
xor
inc
add
pusha
add
add
idiv
jo
add
add
mov
xor
mov
add
or
add
add
add
add
add
(bad)
jg
inc
add
push
add
add
add
add
add
add
add
add
sub
imul
out
inc
add
pop
xor
retf
jo
add
nop
add
ror
add
add
adc
and
xor
inc
push
push
push
pusha
push
pop
jo
add
push
mov
jg
push
push
rcr
loopne
lock
mov
(bad)
stc
and
xor
inc
push
pop
pusha
pop
jo
push
add
pop
mov
sub
mov
idiv
out
mov
or
or
or
or
pop
push
or
jo
or
clc
xchg
or
or
or
(bad)
jnp
jnp
or
or
or
or
or
push
or
and
rcr
or
or
nop
or
push
push
or
dec
add
test
xadd
rcl
push
lock
add
adc
or
add
push
xor
inc
arpl
cmp
pusha
or
push
mov
aaa
mov
ror
push
or
or
or
and
mov
or
add
lods
sbb
or
in
push
sub
sahf
or
outs
cmp
or
pop
ror
or
fwait
lock
call
or
or
imul
add
or
mov
cmp
mov
mov
nop
or
mov
es
popf
imul
add
ja
pop
pop
adc
ds
add
or
or
mov
jo
or
ror
or
add
adc
and
xor
inc
push
push
push
pusha
push
jo
or
nop
push
mov
push
ror
sbb
(bad)
loopne
lock
add
fld
lar
wrmsr
cmovo
out
mov
punpcklbw
jo
or
add
jnp
push
add
imul
ror
retf
cmp
push
ret
arpl
hlt
pop
adc
sbb
imul
sti
inc
cmovge
sbb
lahf
out
and
pusha
adc
adc
mov
mov
or
push
arpl
inc
inc
add
loopne
lock
cmp
add
push
adc
dec
and
outs
add
push
repz
cdq
scas
adc
aaa
push
adc
mov
jo
add
add
jnp
xchg
add
mov
sub
sbb
aas
add
inc
xchg
jmp
sbb
call
and
xor
lsl
and
fisttp
scas
out
mov
jae
dec
push
or
cmp
jo
or
and
outs
add
int3
sub
outs
aas
aas
add
or
jmp
sbb
jl
pop
nop
jp
adc
mov
imul
adc
adc
adc
jle
adc
adc
adc
ja
or
pusha
or
jo
adc
adc
fld
mov
sub
es
ror
cli
pop
or
or
loopne
lock
adc
jbe
jnp
(bad)
and
adc
adc
push
add
mov
(bad)
ret
dec
sbb
loope
add
dec
mov
add
sub
push
addr16
cdq
mov
or
imul
mov
inc
adc
adc
adc
push
xor
pop
mov
pop
pop
fimul
pop
(bad)
mov
inc
jnp
adc
adc
push
adc
or
jge
ja
mov
adc
retf
fistp
adc
adc
mov
add
imul
daa
jmp
test
cmps
adc
xchg
add
push
jbe
inc
ja
add
out
rcr
push
mov
push
aas
add
retf
mov
add
add
ror
pop
add
in
cmp
lock
pop
jp
(bad)
pop
es
xor
aas
push
in
cmp
mov
pusha
aas
or
pop
pop
add
add
mov
cmp
jecxz
loope
xor
bound
pop
or
aas
outs
rol
push
add
pop
mov
js
and
sti
pop
nop
pop
mov
rcl
adc
xor
aas
push
mov
arpl
loopne
cli
lock
mov
add
adc
and
xor
inc
sbb
and
std
in
mov
xor
jo
or
sbb
pop
ficom
or
shl
(bad)
sbb
sbb
sbb
sbb
inc
add
sbb
sbb
sbb
pop
adc
fs
pop
cld
ss
xor
add
add
movs
inc
mov
(bad)
or
push
sbb
jo
sbb
push
ss
rol
sbb
shr
aaa
mov
xchg
jg
nop
iret
popa
mov
outs
add
pop
push
shr
aam
sub
aas
mov
loopne
ins
add
arpl
lock
add
adc
adc
or
mov
sbb
or
add
adc
pop
fs
fdivr
inc
sbb
sbb
add
sbb
pcmpgtd
adc
adc
popa
ret
mov
mov
adc
or
add
and
pop
fsub
sbb
pop
push
adc
adc
pop
inc
pop
add
or
add
mov
sub
pop
cmp
pop
inc
add
sub
sbb
add
or
out
data16
and
dec
push
add
push
ficom
or
dec
or
mov
sub
sub
dec
or
xor
or
aaa
sbb
or
inc
push
add
or
gs
xor
add
add
push
mov
add
retf
sahf
cmp
add
or
add
call
into
add
ror
mov
and
jge
or
xor
add
aaa
sbb
dec
pop
add
add
sahf
sub
shl
jg
fadd
cs
cld
cmp
sbb
and
jg
jnp
xchg
lea
ficom
ss
push
add
sbb
push
xor
add
add
pop
push
ss
or
(bad)
mov
pop
or
sbb
xor
inc
mov
shl
mov
sahf
sbb
push
movs
popa
jg
movs
loope
sar
adc
push
pop
pusha
imul
cmp
add
cmp
add
pop
push
popf
ins
arpl
jb
gs
psubusw
add
jl
daa
add
pop
not
lahf
inc
pop
add
adc
push
lods
xchg
ss
and
dec
add
push
sub
push
push
ret
xor
fisub
dec
jg
or
mov
xor
add
jo
cs
mov
pop
test
mov
int3
gs
add
sbb
push
test
ss
outs
mov
in
pop
adc
sbb
aad
lahf
jbe
cmp
lahf
cmp
add
pop
push
xchg
fld
cmp
rcr
dec
mov
add
mov
ins
in
rcl
add
adc
cs
and
sbb
mov
inc
rol
and
push
shl
sbb
jg
arpl
mov
out
mov
inc
add
add
add
jae
retf
push
outs
arpl
loopne
add
rol
addr16
push
add
add
adc
mov
aad
std
xchg
arpl
das
sbb
test
fstp
pop
add
aad
add
ret
or
imul
neg
and
(bad)
(bad)
cmp
adc
sbb
and
adc
(bad)
and
pop
pop
add
dec
add
add
jbe
dec
inc
and
adc
add
mov
psubusw
mov
popa
xchg
push
imul
add
into
mov
mov
loope
adc
add
call
add
cdq
sbb
outs
add
add
sbb
pop
push
nop
pop
mov
out
mov
add
push
mov
aaa
and
adc
cmp
mov
rcr
dec
cdq
add
loope
or
in
in
pusha
adc
and
or
push
add
lods
mov
pop
push
mov
adc
and
or
ds
add
and
fcomp
add
inc
aaa
add
mov
add
dec
pop
lock
pop
call
pop
sub
mov
neg
add
fwait
jg
add
mov
ins
adc
sbb
(bad)
add
div
or
sbb
pop
cwde
sbb
or
add
mov
pop
add
or
imul
xchg
xchg
add
add
adc
adc
iret
retf
push
jp
add
sbb
fadd
cmp
adc
cmp
adc
or
clc
add
psubusw
xor
add
add
push
data16
push
pop
pop
add
pusha
or
add
ins
ret
ss
inc
or
and
add
loope
or
ror
add
syscall
and
inc
pmaxsw
pop
dec
test
into
sbb
dec
add
sbb
cmp
ins
sbb
add
or
mov
jbe
pop
stos
or
(bad)
add
xchg
bound
ss
xchg
mov
adc
pusha
int3
add
sbb
ins
sub
xchg
dec
inc
mov
pop
xor
daa
jge
fstp
cmp
in
frstor
and
dec
pop
popa
ins
adc
or
add
mov
pusha
or
dec
pop
add
add
add
add
cs
mov
cmp
add
pop
jmp
and
(bad)
add
add
jg
and
out
retf
or
pop
mov
mov
add
cmps
mov
loope
sub
adc
test
pop
add
jmp
pop
adc
jbe
shl
or
std
adc
jbe
push
pop
xor
mov
add
push
ins
inc
pop
mov
or
push
jecxz
test
sbb
pop
sub
ss
add
cmp
cmps
jo
xor
xor
ret
pusha
add
xchg
mov
fsub
add
xchg
mov
jecxz
push
jbe
pop
call
or
retf
or
lea
inc
push
popa
sub
inc
dec
add
add
(bad)
sub
pop
sbb
pop
fmul
push
mov
pop
add
jae
and
aaa
js
fidivr
pop
fbld
xchg
cmp
pop
pusha
aaa
sar
xchg
(bad)
adc
mov
arpl
sub
cmp
push
xor
adc
and
adc
jge
adc
mov
sbb
sbb
movs
adc
ins
mov
mov
xchg
mov
or
adc
jns
shr
add
add
je
xchg
xlat
mov
xchg
xor
xor
mov
adc
jns
fcomp
sahf
sub
in
test
shl
hlt
adc
cli
sbb
sbb
cmp
mov
iret
test
sub
mov
cmp
popf
add
rcr
xor
neg
sahf
push
xor
adc
sbb
pop
add
jnp
adc
add
outs
mov
sub
jae
aaa
ins
in
scas
add
mov
pop
pop
(bad)
jp
mov
pop
data16
(bad)
sub
or
xor
lock
xor
ret
leave
add
outs
cmp
mov
scas
pop
add
not
daa
lmsw
add
mov
test
and
or
js
(bad)
sti
mov
lods
add
xchg
daa
inc
mov
fdivr
mov
retf
mov
cmp
mov
xchg
mov
stc
adc
push
das
inc
adc
cdq
or
cmp
cs
push
add
ins
in
xor
adc
add
cmp
or
or
add
xchg
neg
sub
(bad)
pop
inc
xor
adc
fisttp
pop
and
and
inc
add
sub
stos
push
add
add
ret
cdq
add
call
sub
add
add
push
pop
or
or
call
add
les
adc
adc
adc
jmp
mov
add
add
dec
sbb
inc
sbb
std
mov
sbb
sbb
div
pop
add
and
and
es
or
xor
sub
and
push
sub
add
rol
add
ror
or
inc
pop
rol
and
sub
add
or
add
xor
add
dec
fwait
pop
bound
pop
inc
sbb
fisub
add
sbb
or
add
sub
add
dec
or
mov
push
mov
rcr
and
or
add
add
push
xchg
bound
mov
lock
add
arpl
pop
fadd
and
xor
ds
add
xchg
push
add
push
add
add
addr16
cmp
adc
loopne
and
inc
out
fcmovu
mov
adc
adc
imul
pop
mov
xchg
stos
add
add
push
in
pop
add
jo
add
adc
popa
mov
adc
pop
loopne
mov
ss
lock
add
ja
ss
add
xor
xor
inc
add
pusha
add
add
cmp
xchg
fadd
jle
inc
add
in
das
dec
pop
mov
rol
add
arpl
sub
in
lock
adc
xor
or
adc
dec
dec
dec
sbb
and
jl
aas
pand
rcl
jg
shl
cmovae
imul
repz
dec
cmpxchg
fsubr
ror
scas
lahf
mov
add
nop
push
xor
and
ror
outs
outs
pop
cmovo
or
jg
ins
and
das
jg
push
push
popa
mov
add
mov
pop
xchg
fucomi
ss
(bad)
das
or
adc
sbb
and
pop
psraw
ret
jg
daa
daa
daa
mov
(bad)
inc
dec
dec
es
mov
adc
push
sbb
ret
pop
pop
movd
pop
push
xor
xor
xor
mov
push
adc
add
or
das
movhps
dec
prefetcht2
ret
sar
aas
lds
aas
call
mov
out
push
push
aad
pop
push
dec
or
in
leave
psubusw
cld
(bad)
fistp
jmp
and
lds
mov
stos
jmp
fmul
in
mov
out
jb
cmps
push
outs
es
push
test
mov
retf
or
mov
pop
call
sub
outs
mov
clc
das
add
adc
jmp
jb
sub
sub
jo
test
pop
pop
jmp
aas
test
adc
mov
mov
add
push
or
scas
lahf
inc
ins
shl
cvtps2pi
sub
das
movzx
mov
outs
scas
inc
sub
lea
pop
and
or
mov
push
or
mov
add
aaa
cmp
daa
daa
daa
cmp
cmp
(bad)
aas
movzx
leave
enter
inc
pop
movzx
das
sldt
pcmpeqd
out
(bad)
inc
outs
fcmovnu
sldt
sldt
mov
add
comiss
(bad)
mov
inc
mov
push
rcl
iret
jbe
lea
and
movq
add
shl
jbe
inc
fs
or
test
fisttp
and
mov
pop
scas
cmovg
addr16
mov
pop
mov
ror
jbe
(bad)
dec
fstp
jecxz
fcmovnu
sti
mov
leave
cs
pop
pop
icebp
aas
sbb
stc
cmc
pop
cmova
xchg
jg
or
js
or
cwde
dec
fistp
vmovsldup
lds
add
fisttp
aas
cmove
das
inc
mov
mov
test
(bad)
movups
bound
aas
scas
enter
aas
push
das
pop
inc
lds
js
jp
scas
rol
inc
aam
add
(bad)
loop
mov
fistp
add
rol
punpcklbw
ss
(bad)
aas
cvtps2pi
ret
push
outs
lfs
pusha
add
mov
ins
movq
mov
pop
jg
pop
push
lahf
lahf
bndstx
movq
adc
movq
or
ins
mov
dec
lahf
sqrtps
sub
ret
jg
movs
xchg
or
lahf
add
enter
outs
ins
add
inc
(bad)
outs
sbb
adc
mov
aas
pop
mov
bound
lahf
les
test
sub
invd
inc
push
adc
pop
sub
mov
adc
or
outs
add
xor
das
pop
scas
mov
sub
pop
add
iret
punpckldq
cvtpi2ps
mov
rcl
pop
fild
inc
mov
lds
sub
push
sbb
movnti
push
mov
pop
dec
mov
mov
adc
or
ja
adc
adc
sub
or
adc
jg
(bad)
mov
mov
push
push
mov
mov
mov
cmp
rol
pop
and
mov
cmp
test
std
ret
shr
mov
add
loopne
mov
shr
and
add
sub
xor
add
and
mov
jno
jnp
sti
inc
sub
jae
mov
jmp
xor
pop
call
sbb
mov
imul
ins
ja
dec
and
sbb
mov
or
push
clc
popa
jb
or
add
add
and
cmp
lea
je
pusha
lods
sti
mov
add
(bad)
call
xor
sub
push
push
jg
mov
push
pop
cmp
sete
dec
cmp
jb
adc
pop
sub
jbe
push
mov
xor
jmp
jle
pop
cmp
pop
or
call
fistp
xor
mov
pop
pop
inc
push
pusha
sbb
je
lahf
jg
inc
aaa
add
mov
mov
mov
test
je
xor
adc
fidivr
mov
add
ret
inc
test
lods
loopne
jns
out
mov
mov
mov
(bad)
out
jg
or
dec
mov
adc
push
push
mov
push
mov
test
clc
or
jle
mov
ins
add
into
xchg
sub
movs
jl
cmp
mov
sub
or
jmp
add
fnstsw
daa
mov
lods
sbb
lea
sbb
mov
inc
jle
in
test
shr
pop
ins
ror
add
push
mov
inc
pop
add
rol
test
jl
psubusb
inc
adc
or
rol
push
pop
mov
push
inc
dec
push
mov
mov
sbb
sub
and
ret
sbb
outs
push
js
ds
mov
in
clc
es
popf
xchg
dec
ja
pop
fmul
sbb
addr16
push
in
int3
lods
sbb
lahf
xchg
iret
enter
mov
jnp
and
lea
pushf
push
sbb
push
test
mov
mov
push
or
cmp
je
and
mov
das
fs
and
mov
inc
dec
push
inc
inc
push
jnp
addr16
and
push
jl
icebp
mov
mov
push
and
push
les
into
cmp
and
mov
in
repnz
sbb
(bad)
rcr
mov
repnz
pop
or
mov
fld
das
mov
mov
ja
push
das
hlt
push
mov
and
mov
pop
pop
dec
sahf
pop
ja
(bad)
mov
loopne
fdiv
mov
fmul
aam
out
js
pusha
mov
mov
cwde
push
push
push
fs
aas
cli
mov
inc
mov
push
mov
pop
pop
xor
push
jmp
jmp
pop
inc
call
push
jns
inc
push
cld
jb
gs
xor
adc
push
inc
call
sbb
imul
es
or
outs
or
cmc
addr16
arpl
pushf
add
sub
fucomp
imul
inc
(bad)
clc
mov
xor
dec
inc
dec
inc
ins
stos
inc
ret
in
inc
js
pop
jge
or
arpl
cmp
add
sub
data16
fisubr
pop
popf
jne
imul
jnp
dec
pushf
jge
mov
iret
repz
mov
ds
jle
lahf
inc
cmps
jnp
add
mov
cmp
and
or
sbb
inc
icebp
jae
or
ss
push
nop
push
(bad)
fld
push
sbb
mov
ror
or
push
in
in
retf
adc
fucom
in
sbb
rcl
or
jne
addr16
inc
pop
push
mov
push
inc
jb
popa
je
cmc
inc
dec
or
fidiv
dec
daa
loopne
mov
pop
je
outs
jns
aas
fs
cmp
cld
dec
sbb
int
movs
mov
ins
in
push
mov
sahf
jo
xchg
sbb
bound
dec
outs
fs
pop
pushf
add
shr
pop
test
not
int
push
shl
(bad)
fild
pop
xor
imul
push
sbb
dec
or
or
adc
mov
xor
push
adc
jne
ins
adc
retf
inc
jle
push
fwait
mov
push
xor
add
sbb
aaa
inc
jge
jns
jne
mov
or
mov
adc
cmp
adc
and
adc
stos
push
mov
test
push
pop
inc
imul
pop
popa
punpckldq
ins
cs
je
jae
add
aad
dec
scas
add
add
ins
add
repz
(bad)
cmp
push
adc
cs
ret
lds
es
jnp
cmp
add
adc
jg
mov
inc
sbb
or
add
mov
sub
ret
push
jg
pop
ds
je
pusha
add
mov
scas
jge
mov
push
test
mov
sbb
cmp
loopne
test
sahf
loopne
cmp
fdivr
push
inc
sbb
push
add
shl
xor
cmps
and
inc
dec
scas
jae
das
mov
mov
dec
cmp
sub
jo
inc
mov
lods
jo
pop
or
hlt
cmovbe
jb
cmp
gs
cmp
in
adc
mov
push
je
arpl
outs
jno
adc
push
inc
inc
lock
jne
movs
outs
add
add
mov
les
dec
pushf
jmp
inc
movs
cdq
repnz
cmps
jne
cmp
mov
(bad)
mov
idiv
dec
or
mov
call
or
lock
or
jb
fadd
(bad)
dec
cmp
call
or
lds
rol
shr
loopne
cmp
inc
sub
add
jb
add
fist
push
xchg
repz
in
add
xchg
xor
movs
jne
outs
rol
imul
sub
inc
dec
jb
or
mov
in
or
jnp
add
push
add
and
rol
xchg
adc
lahf
ins
nop
mov
xor
xchg
lahf
pop
fwait
inc
test
jge
inc
jns
imul
test
sub
sub
inc
stos
pop
enter
mov
adc
jno
push
dec
pop
rcl
xchg
mov
sar
lds
rol
daa
mov
adc
mov
movups
inc
popa
jae
iret
pop
add
dec
pop
add
or
imul
mov
dec
(bad)
fst
push
popa
imul
adc
add
sub
inc
pop
or
or
push
inc
or
sub
cwde
lock
or
enter
jo
or
enter
adc
and
inc
or
arpl
inc
dec
sbb
stos
cwde
or
fwait
push
cmp
xchg
ss
push
add
std
inc
push
mov
pop
pop
inc
sub
rol
push
add
aad
jb
push
ror
gs
fisttp
pusha
inc
mov
pop
add
pushf
fld
pop
dec
rsqrtps
mov
or
shr
push
cwde
adc
jne
mov
adc
sbb
xlat
pop
xor
or
mov
inc
cld
outs
sub
pop
add
or
gs
je
hlt
push
sbb
in
dec
test
out
out
out
inc
add
or
xchg
(bad)
add
pop
mov
psrld
jp
inc
push
fsubr
outs
dec
es
mov
xor
sub
loopne
outs
adc
(bad)
lahf
stos
ja
inc
dec
outs
je
jne
jo
jb
fs
pop
cmp
pop
cmp
aaa
add
fwait
jo
dec
cmovle
sub
push
sbb
int3
arpl
add
mov
jmp
pop
inc
dec
xchg
outs
adc
mov
lods
(bad)
xor
adc
push
(bad)
cs
retf
aas
ss
ins
loope
push
cmp
or
enter
mov
push
shr
(bad)
jg
pop
lock
inc
dec
imul
push
add
and
in
push
sbb
adc
mov
ins
popa
jae
outs
add
add
fmul
xchg
jg
mov
aaa
jmp
sbb
add
scas
aas
pushf
loopne
fstp
xor
dec
das
pop
push
and
add
aas
or
sbb
leave
out
ja
call
ins
ins
outs
ja
movs
je
sbb
sbb
(bad)
sahf
push
inc
dec
gs
jo
fadd
or
dec
outs
jp
outs
cs
cmp
sub
cwde
cmp
and
xor
mov
pop
sbb
pushf
(bad)
(bad)
call
xchg
inc
daa
inc
adc
sbb
fdiv
add
mov
xor
movs
push
mov
dec
or
push
fsub
cmc
inc
push
sub
das
sti
dec
dec
and
cmp
icebp
mov
outs
fs
cmps
add
dec
add
inc
and
mov
add
push
pushf
add
fsubr
push
mov
push
arpl
ins
dec
unpckhps
xchg
and
int3
mov
outs
popa
ins
pop
inc
pop
shl
add
add
punpckhdq
and
(bad)
sub
outs
or
push
daa
ror
jno
aaa
add
pop
sbb
and
sbb
push
cwde
sub
mov
fild
mov
add
mov
shufps
inc
xchg
popa
mov
test
inc
jns
xchg
add
fisub
pop
sub
push
pusha
fld
sbb
sub
mov
inc
clc
test
addr16
push
pusha
nop
jbe
and
and
mov
sub
adc
add
pushf
push
dec
cwde
cmps
inc
ret
or
dec
jbe
data16
shl
mov
pusha
mov
pop
mov
movsx
mov
mov
mov
pop
inc
ret
adc
inc
pop
pop
add
loopne
outs
pop
pusha
pcmpgtd
xchg
stos
xchg
dec
js
mov
imul
cwde
and
pop
int3
das
dec
add
xchg
sbb
cpuid
push
add
retf
dec
pop
jo
gs
pop
add
and
jo
pop
add
les
mov
mov
add
inc
dec
or
cs
add
mov
xchg
push
add
loopne
outs
adc
cvtps2pd
rcl
push
pop
es
and
pop
push
hlt
dec
ja
inc
mov
add
cmp
emms
adc
and
push
outs
imul
pop
pop
sub
add
add
pop
push
int
mov
lss
adc
adc
inc
popa
or
xor
cmp
aaa
and
push
in
addr16
outs
ret
add
cvtps2pd
popf
stos
dec
or
(bad)
fst
pop
mov
inc
adc
xchg
jo
test
stos
add
arpl
imul
sub
sbb
adc
add
pop
mov
mov
cmps
add
pop
nop
push
jb
mov
gs
(bad)
mov
xchg
sub
sbb
dec
add
outs
adc
push
mov
divps
stos
loopne
push
inc
inc
ret
iret
scas
mov
pop
pop
jae
dec
enter
pop
or
push
shr
pop
or
add
push
xchg
ins
inc
mov
adc
inc
cwde
into
in
jbe
pop
lods
lss
push
popa
shl
sbb
jb
scas
and
xor
je
push
add
pop
push
lods
dec
cmps
cmp
inc
popa
and
hlt
mov
fs
scas
sub
sbb
pop
or
in
ss
or
push
pop
mov
inc
bound
ss
pop
ins
push
jo
sub
jbe
or
pop
mov
sub
pop
sub
rol
sub
pop
pop
pusha
rcr
mov
push
test
mov
xchg
add
mov
pop
or
push
sub
xor
test
ins
and
sbb
ja
pop
and
add
pushf
sub
adc
xchg
dec
mov
int3
jg
xor
pop
xlat
jle
add
daa
imul
mov
fmul
loop
add
sbb
loopne
ret
xor
mov
and
push
inc
je
aas
pushf
pop
loopne
pushf
fstp
aas
jl
lock
dec
outs
arpl
adc
pop
xor
sub
mov
or
xor
ja
pop
cmp
outs
(bad)
ja
adc
inc
sub
aaa
out
inc
rcl
inc
xchg
clc
(bad)
jecxz
mov
sbb
pop
clts
cld
or
dec
ins
jo
cmps
adc
push
mov
int3
mov
sub
call
add
fcmovne
pop
mov
mov
xor
add
mov
mov
sbb
pop
sub
sbb
lds
and
cmc
(bad)
popa
jns
dec
cs
dec
xor
mov
mov
(bad)
jg
fld
clts
push
adc
sbb
xor
adc
push
gs
push
pusha
xor
jp
lock
or
out
dec
xchg
add
sbb
pop
dec
dec
popa
call
mov
add
loopne
xor
data16
xor
adc
daa
fcomip
sub
jp
and
loopne
mov
push
es
outs
or
rol
adc
adc
xor
cmp
loopne
push
jmp
pusha
cld
push
adc
sub
add
pop
push
push
push
repnz
leave
xor
adc
gs
inc
fisttp
sti
push
pop
test
daa
out
jle
(bad)
jo
jnp
int3
jbe
iret
add
fwait
je
and
mov
or
getsec
xadd
fidivr
div
and
test
push
jge
out
mov
push
add
fsub
js
sbb
add
inc
jne
push
arpl
push
xor
mov
push
or
xor
add
add
mov
lods
cmp
or
jo
pop
cdq
cdq
lock
outs
xor
or
xchg
mov
pop
or
mov
inc
sbb
lahf
add
add
xor
adc
inc
dec
fwait
imul
push
mov
xchg
cmp
cmp
mov
add
imul
push
add
or
sbb
or
or
add
mov
rcr
push
shl
mov
jne
(bad)
fs
ret
sub
mov
sbb
push
or
fild
je
gs
ss
or
adc
scas
(bad)
adc
sub
inc
dec
gs
add
out
out
arpl
adc
and
inc
out
mov
dec
mov
add
push
or
ins
ja
sub
adc
dec
sbb
mov
or
sub
push
popa
sbb
mov
mov
add
or
or
cmps
in
or
dec
adc
push
jne
popf
or
add
mov
and
add
arpl
pop
daa
push
or
ss
xlat
ret
retf
retf
sbb
in
lock
dec
push
xor
out
jns
(bad)
aas
fsubr
and
xor
adc
sbb
push
loopne
sbb
cdq
test
mov
push
test
pop
mov
or
aad
and
call
push
fimul
push
das
call
bound
cmp
add
gs
mov
shr
arpl
popa
inc
aaa
daa
ja
jg
push
inc
arpl
jbe
dec
lods
stos
push
loope
push
ds
clc
add
adc
jle
mov
mov
push
dec
paddq
push
daa
into
das
hlt
mov
dec
test
mov
pushf
jecxz
adc
mov
xor
dec
popa
jae
push
popa
(bad)
ffree
jmp
adc
das
push
or
hlt
jmp
cdq
inc
adc
aaa
imul
mov
pop
and
outs
jns
shr
add
push
xor
sub
dec
add
jo
xor
add
gs
lds
ror
pushw
mov
shr
jle
sbb
in
add
sbb
imul
push
add
and
dec
(bad)
pop
mov
int3
add
jmp
out
outs
inc
into
jnp
movs
add
add
sub
jo
sub
jns
out
inc
or
or
dec
fnstsw
clc
sbb
add
jno
xchg
hlt
iret
daa
cmps
into
fmul
cmp
inc
add
addr16
push
aaa
sbb
push
push
and
shr
enter
lea
add
or
es
cmps
aas
lock
inc
icebp
ss
or
adc
jmp
jecxz
jns
jg
popa
clc
jns
cmps
in
add
repz
add
pop
sub
mov
test
xor
add
fimul
rcr
pop
iret
out
pop
jb
sub
push
adc
xor
sar
sbb
scas
rcr
daa
push
mov
outs
lea
sbb
cmp
dec
jne
int3
lods
cmp
gs
ins
jne
cwde
mov
add
push
jp
es
cmp
out
lock
pop
push
xor
cmp
mov
or
addr16
xor
jo
loopne
setp
sub
lock
or
jae
adc
xlat
ins
test
or
inc
(bad)
cmps
pop
xor
dec
and
inc
shl
lds
mov
imul
loopne
add
or
lea
les
clc
loop
loopne
imul
push
sbb
das
or
jle
ror
movs
aaa
pop
fdivr
jnp
clc
inc
ja
xchg
and
stos
mov
inc
outs
jmp
cmps
in
addr16
and
js
popa
jo
arpl
loopne
or
add
and
leave
leave
leave
lods
cmp
mov
addr16
aam
mul
prefetcht1
dec
xor
and
push
mov
leave
shl
xlat
pop
repnz
in
leave
(bad)
xor
sbb
xor
push
fldenv
cmp
cmp
inc
sahf
pushf
pushf
mov
das
(bad)
dec
dec
dec
mov
aas
fadd
(bad)
or
dec
leave
enter
xlat
sbb
pop
fs
leave
mov
jb
repnz
sub
iret
ins
jnp
loope
psubsb
test
loop
jne
push
jmp
in
xchg
inc
jne
ja
mov
mov
jo
cdq
cmp
adc
dec
enter
and
fs
jno
or
push
popa
xchg
pop
dec
test
and
popf
adc
jns
popa
mov
ins
adc
or
push
stos
sbb
vpmacssdqh
and
adc
mov
and
daa
add
sub
xlat
sub
inc
jo
xor
(bad)
push
outs
sub
scas
add
outs
imul
mov
sub
ret
mov
imul
mov
imul
xchg
imul
sub
inc
pop
sbb
imul
sub
push
jno
cmp
push
int
rcl
xor
and
sub
imul
push
imul
inc
dec
inc
es
inc
bound
pop
fistp
xchg
or
data16
sub
loop
shr
fiadd
inc
movs
xchg
fisttp
jmp
xor
xor
add
inc
inc
fcom
sti
cs
push
imul
inc
jb
and
adc
and
sbb
xchg
cmp
push
leave
mov
jno
or
inc
jo
cmc
jns
add
add
jns
outs
dec
sbb
mov
inc
jmp
mov
push
or
arpl
xor
loopne
sub
stc
in
xchg
xor
push
inc
outs
jae
gs
inc
fdiv
add
add
jae
or
jne
jb
pop
mov
or
or
jl
loopne
and
mov
rol
xchg
mov
xchg
jns
adc
xchg
mov
or
fsubr
ret
mov
pusha
mov
test
sub
test
xchg
bswap
or
rol
push
pop
xchg
lds
test
out
xchg
xchg
fimul
pop
xchg
pop
push
xchg
mov
add
ja
arpl
imul
mov
js
sub
or
jae
or
cmp
iret
aad
gs
outs
jbe
add
sub
mov
cmp
add
pop
pop
or
arpl
clc
pop
dec
ins
fs
and
dec
gs
push
popa
add
dec
xchg
retf
or
test
nop
sbb
add
adc
daa
mov
pop
xchg
outs
mov
sbb
xlat
ins
fild
or
inc
jo
movs
fmul
fcomp
pop
add
pop
mov
fidiv
pop
js
fbstp
rol
mov
sub
or
js
imul
push
mov
shr
add
pop
mov
dec
arpl
loope
or
add
imul
pop
add
cmp
cmp
sbb
movs
in
scas
ins
mov
jno
add
imul
adc
loopne
icebp
inc
push
mov
ins
call
xor
aad
pushf
fistp
nop
sti
xchg
outs
shl
jb
outs
jb
or
xor
iret
nop
push
wrmsr
add
fistp
dec
outs
jne
fcomp
push
pusha
xchg
fldenv
sbb
into
add
dec
rcl
inc
and
push
jge
add
daa
xchg
ins
jae
cmp
push
mov
adc
imul
es
das
repz
sti
lods
inc
xchg
pop
out
fsubr
data16
adc
lods
das
pusha
loope
add
sbb
fist
inc
dec
jae
ins
or
dec
sbb
sub
sub
call
aad
xor
stos
push
add
out
inc
push
mov
inc
sahf
fmul
out
ja
add
sub
add
fs
or
leave
leave
in
mov
inc
jo
in
jmp
mov
in
jns
jb
push
xchg
xlat
aas
in
pushf
mov
cmps
es
movs
jecxz
dec
inc
sahf
pop
out
cdq
aam
lock
daa
daa
and
enter
jmp
or
dec
retf
mov
ret
xlat
lock
wbinvd
(bad)
or
mov
or
push
jnp
cmp
(bad)
cmp
inc
ror
add
je
jnp
dec
inc
inc
jbe
shr
dec
sbb
imul
retf
push
mov
jmp
add
push
retf
xor
mov
retf
mov
push
and
test
mov
pop
add
adc
push
adc
cmp
sub
jb
gs
xor
jmp
imul
adc
pop
adc
mov
sbb
lea
fld
ins
inc
add
(bad)
adc
pop
fadd
data16
inc
ss
xchg
cmp
jo
mov
and
mov
or
fmul
cmp
cmp
nop
push
popa
dec
lods
adc
push
bound
fmul
cmps
jne
pop
lds
mov
jne
add
test
fsub
aam
pop
sbb
or
aaa
test
loop
dec
add
sub
je
loopne
stc
pop
jmp
inc
xor
pop
ds
and
adc
push
and
jmp
mov
adc
add
cmp
sub
sub
pop
jmp
pop
push
sbb
pop
xchg
push
inc
arpl
push
rcl
adc
pop
mov
mov
push
sub
jg
mov
test
pop
sbb
lahf
sub
mov
call
xor
inc
cmp
fsubr
sbb
or
retf
mov
int
shl
mov
mov
and
(bad)
add
jns
adc
push
arpl
inc
mov
adc
lahf
jbe
add
or
jne
jne
push
dec
add
xor
mov
or
or
xchg
jl
enter
mov
aaa
dec
xchg
scas
push
cmp
pop
push
or
dec
pop
outs
and
dec
test
gs
add
movs
or
add
push
push
xlat
or
sbb
push
xchg
pop
sbb
mov
into
iret
or
iret
out
fs
leave
movs
loop
movs
sbb
cmp
int
mov
hlt
inc
retf
cmp
das
add
xor
cld
outs
repz
xchg
jo
ficomp
xlat
sbb
push
icebp
push
cmps
rcl
popa
ins
gs
mov
xchg
push
loop
test
sub
arpl
and
inc
jmp
xor
shl
dec
stos
adc
int3
push
pop
ins
add
inc
push
out
push
rol
or
pop
mov
test
lock
push
inc
adc
sbb
sub
jbe
xor
test
pop
add
bnd
sbb
or
pop
mov
cmp
(bad)
adc
add
mov
xchg
push
or
cmp
and
push
mov
mov
movs
dec
or
push
lods
dec
(bad)
or
add
sti
inc
cmp
push
test
test
jmp
scas
loope
adc
pusha
neg
in
mov
in
pop
sbb
nop
rol
or
sub
aaa
pop
fadd
mov
outs
push
cmovbe
int3
in
ffree
xor
inc
xor
jbe
test
add
ins
retf
add
mov
paddusw
mov
and
push
or
or
add
push
lods
es
push
inc
mov
mov
xor
dec
sbb
dec
mov
mov
add
test
sub
push
and
lds
mov
mov
inc
xchg
or
sub
cs
addr16
addr16
xor
xlat
pusha
or
addr16
dec
adc
push
jg
outs
sub
xor
fist
cmp
mov
add
pop
ror
hlt
ss
das
and
punpckhbw
add
push
movs
jmp
sbb
jge
xor
imul
sub
dec
mov
enter
push
inc
aaa
cmp
xor
clc
out
or
or
rcl
pop
stc
push
adc
or
rol
push
mov
inc
lods
mov
nop
outs
vpcmpgtd
les
repnz
(bad)
pusha
add
scas
jo
(bad)
mov
ror
push
aam
js
mov
sti
(bad)
es
or
dec
jle
push
sbb
jp
(bad)
cmp
xchg
lahf
or
lahf
call
pusha
inc
lahf
pop
popa
mov
sbb
inc
lahf
sbb
cdq
jnp
fsub
(bad)
jb
xor
adc
add
out
cmp
pop
les
repnz
call
mov
iret
repz
ror
hlt
mov
mov
(bad)
js
outs
fs
sub
dec
sub
stos
(bad)
nop
paddb
paddd
push
push
or
enter
fisttp
into
adc
add
xchg
add
nop
fmul
add
pop
add
mov
and
pop
sbb
das
add
jnp
add
xor
push
movs
cwde
fild
push
call
int
les
fimul
inc
sub
fmul
dec
cmp
lds
hlt
into
ror
out
sbb
iret
sbb
addr16
sub
rol
popa
outs
stos
xchg
mov
push
jae
adc
xor
rcl
pop
nop
ret
cmc
pop
or
jle
les
pop
push
add
ja
mov
cs
inc
imul
gs
cmp
leave
sar
push
pop
clc
adc
fmul
xor
sbb
jb
cmp
mov
mov
add
sbb
push
push
leave
sub
je
ret
neg
int3
das
add
dec
bound
push
adc
cmp
mov
pop
xchg
pop
xor
add
adc
sbb
and
sub
call
lods
jmp
in
add
mov
add
add
sub
out
inc
push
push
jo
sar
push
aad
jo
out
mov
mov
in
or
push
pop
pusha
je
in
fdiv
add
sbb
push
xchg
enter
ja
add
push
pop
or
adc
loope
outs
add
sbb
mov
imul
and
mov
shl
add
mov
add
sahf
jo
xchg
ins
pop
repnz
(bad)
rol
or
push
pushw
(bad)
imul
push
sub
jb
ret
inc
ja
lahf
in
push
dec
pop
push
clc
push
lds
shl
pop
sub
adc
shl
pusha
inc
adc
iret
pop
test
push
or
jl
xor
pop
jle
or
sbb
cmp
(bad)
adc
mov
lock
and
(bad)
xchg
xchg
mov
sbb
add
cs
push
cmp
iret
cdq
pusha
popa
pop
or
repz
dec
pop
pop
fisub
inc
or
mov
mov
inc
outs
jae
lahf
cmp
adc
add
push
sbb
ins
mov
xchg
pop
(bad)
push
add
loopne
cmp
cmp
ins
sbb
das
add
jne
ret
push
pop
jno
cmp
jne
dec
jno
or
daa
or
xchg
mov
int
jo
mov
inc
or
ja
mov
dec
or
dec
ins
fs
fsub
ja
mov
dec
gs
scas
rol
imul
or
xchg
inc
andnps
popa
gs
fs
pop
cmp
push
adc
mov
sub
imul
push
out
jne
add
pop
cmp
pop
add
adc
push
inc
jb
popa
jns
movs
mov
stos
retf
dec
ds
add
push
push
jno
cld
into
xor
push
jne
pop
sub
(bad)
mov
inc
mov
nop
push
mov
push
mov
mov
shr
div
mov
mov
add
pop
pop
ret
(bad)
push
nop
push
mov
mov
mov
mov
repz
or
jle
pop
gs
addr16
push
push
push
mov
mov
cmp
aas
clc
outs
int
in
pop
pop
inc
mov
push
es
push
iret
add
mov
mov
mov
mov
lea
mov
leave
idiv
mov
pop
pop
outs
dec
mov
add
sub
jb
adc
pop
call
push
jmp
sub
dec
sub
fdivr
or
leave
js
xor
sbb
sbb
lahf
ins
movzx
sub
add
push
add
into
and
and
ins
ret
addr16
vfmaddsubps
fisubr
mov
dec
cld
test
je
sub
mov
cmp
je
mov
jmp
sub
cmp
jle
jnp
xchg
rol
sub
out
psubb
xchg
movs
(bad)
add
xor
push
mov
rol
ins
outs
push
loopne
mov
inc
cmp
jne
inc
adc
sub
sub
add
pop
inc
push
cwde
test
push
jae
inc
adc
fcom
dec
jne
inc
add
pop
(bad)
out
shl
push
ret
inc
mov
inc
xor
sub
aam
out
jmp
fisub
(bad)
mov
cmp
shl
(bad)
test
pop
add
adc
sbb
adc
inc
iret
push
jns
or
sbb
and
in
sub
sub
xor
or
cmp
sahf
cmps
repnz
inc
push
dec
dec
inc
xlat
repz
(bad)
push
call
push
int
ror
into
dec
add
stos
sbb
cmp
les
jnp
cs
test
test
and
adc
xchg
sbb
call
sbb
or
or
inc
or
add
ret
ja
call
mov
mov
mov
cld
adc
pop
or
pop
hlt
call
pusha
out
mov
call
movs
ja
mov
pop
adc
sub
mov
in
outs
ror
add
not
leave
loopne
cmp
ja
sub
add
pop
rol
xchg
xchg
ret
or
loop
mov
cmps
test
jle
mov
sbb
cs
lahf
pop
out
sbb
lock
(bad)
clc
in
rol
dec
test
jne
jg
add
mov
sti
cmp
je
test
push
pop
or
or
add
enter
ret
jmp
sbb
cld
xor
sub
push
adc
and
sub
shl
sub
mov
xor
enter
repz
or
fcmovnb
jmp
loopne
cdq
std
add
add
jns
je
push
adc
sub
pop
pop
jmp
xor
push
fld
push
mov
sub
out
fild
add
add
xor
add
ins
add
or
inc
sahf
outs
push
push
movs
and
sub
jg
sub
jnp
(bad)
lds
pop
adc
pop
sub
inc
cmp
rol
aaa
daa
xor
mov
jg
push
and
sbb
stc
pop
jg
push
pop
pop
cmp
jne
mov
lock
jg
inc
sbb
or
pop
push
and
push
mov
add
sub
sbb
and
mov
out
aaa
aad
add
fnstenv
push
fimul
fdiv
or
sub
jnp
and
ss
jl
out
mov
xor
jp
add
and
cmps
sub
and
fdiv
outs
adc
or
jae
jp
shr
jle
push
jmp
jno
cmp
pop
pop
pop
pop
jnp
hlt
cmp
jne
add
lock
js
pop
jnp
jecxz
fimul
cmp
mov
fiadd
jb
mov
add
in
jp
mov
mov
lock
(bad)
mov
(bad)
(bad)
fmul
jmp
scas
ret
push
retf
adc
pushf
test
jle
adc
ja
sar
imul
mov
mov
icebp
mov
mov
mov
not
mov
adc
pop
jo
adc
pushf
push
add
cld
jle
jb
sti
inc
call
xchg
mov
adc
sahf
rol
inc
(bad)
push
outs
imul
adc
adc
xor
cmp
jle
and
ret
dec
fisttp
xor
and
sbb
jp
jbe
sbb
jbe
shr
jmp
inc
cmp
jl
pop
in
and
icebp
push
scas
jge
xor
scas
jns
mov
sbb
sub
sub
inc
arpl
dec
add
mov
xor
pop
(bad)
fwait
add
adc
lods
daa
test
push
mov
mov
stos
ret
stc
je
mov
loope
ror
cmps
push
push
xor
xor
rcr
cmp
jg
fdiv
adc
sub
sub
jne
lea
push
data16
push
mov
sub
lock
mov
pusha
sbb
cwde
jmp
sbb
call
sbb
ins
mov
jle
inc
cli
cmp
fild
inc
(bad)
xor
mov
sahf
cmc
push
or
(bad)
sar
jns
imul
rcr
xlat
rcr
push
sbb
test
add
push
jp
sbb
(bad)
mov
sti
sub
ret
cdq
push
push
aaa
fsub
pop
pop
push
adc
push
mov
mov
ss
jmp
mov
pop
pop
ss
pop
push
adc
lds
mov
je
cmp
jle
cmp
test
sti
bswap
idiv
mov
sub
inc
mov
jmp
sub
jne
adc
add
jl
xchg
xchg
xchg
rol
or
ds
mov
mov
cmp
jle
aad
push
or
sbb
dec
add
xor
fld
into
xor
add
push
add
ret
ds
sbb
imul
cmp
nop
push
mov
xchg
aad
das
sbb
not
mov
or
popf
add
push
ds
js
and
ds
test
test
dec
cmp
jbe
mov
sbb
lea
out
add
sub
call
jmp
adc
or
data16
sbb
or
add
inc
sub
out
inc
lea
cmp
or
aad
push
mov
or
push
xor
xchg
mov
in
pop
pop
mov
nop
jmp
out
sbb
cmp
add
pop
cmps
mov
sub
add
push
push
inc
or
add
push
sahf
and
sbb
and
mov
shr
and
mov
and
xchg
(bad)
add
or
sbb
loopne
ins
push
lea
mov
fadd
add
je
shr
dec
xor
shr
cmp
push
pusha
ins
scas
clc
sub
jl
je
(bad)
lods
cmps
inc
jo
stos
or
push
jns
add
test
or
fcmovu
mov
mov
inc
dec
jne
jmp
lods
inc
sahf
test
or
std
mov
push
xchg
push
shl
push
inc
jmp
call
clc
cmp
dec
push
inc
inc
ucomiss
(bad)
cld
add
cmc
add
cmp
xchg
rcl
out
cmps
fucomi
dec
and
xchg
cwde
cwde
and
(bad)
xor
mov
jmp
cmp
jnp
sbb
enter
cld
or
jmp
movzx
sbb
popa
inc
pop
enter
pusha
(bad)
out
movs
lods
mov
cmp
jle
jle
sbb
shr
fs
call
aaa
fnstsw
cli
sub
add
je
(bad)
add
add
mov
fist
pop
jg
or
cmp
retf
pushf
add
xor
test
inc
movs
jge
mov
jae
cmp
sub
pop
xchg
sub
mov
cs
jmp
add
lock
cmc
outs
dec
adc
sbb
jb
repz
xchg
(bad)
or
lock
adc
and
xchg
cld
in
lock
outs
jb
and
cmps
jb
div
dec
inc
(bad)
mov
mov
mov
mov
sbb
inc
mov
(bad)
aas
mov
xchg
ret
or
ret
test
jle
mov
out
addr16
por
pop
das
adc
sbb
jnp
or
es
mov
sub
or
pop
adc
fbld
call
jo
pop
and
sub
adc
enter
pop
push
cmc
mov
mov
push
lock
js
xor
mov
ins
xchg
sbb
outs
adc
or
jne
inc
xor
push
aas
xor
loope
hlt
ds
pushf
and
pop
jmp
pop
pop
pop
mov
adc
data16
push
or
or
inc
test
and
push
in
add
or
clc
jnp
hlt
xor
cmps
fsubr
jb
neg
push
ins
ja
dec
loopne
mov
mov
mov
imul
pop
xchg
enter
rcr
es
aas
pushf
(bad)
sub
fdivr
mov
cmps
fsubr
ror
xor
push
cmps
jl
fmul
jmp
xor
xchg
mov
jbe
xchg
dec
fadd
in
fld
jae
pusha
ja
or
xor
repnz
and
dec
js
test
and
jge
enter
mov
add
pop
push
loop
pop
jp
xchg
sbb
lahf
or
jae
clc
jge
jle
or
sbb
neg
(bad)
mov
fisub
jmp
push
push
add
ror
pusha
cdq
sbb
and
xlat
scas
retf
push
pop
not
pop
mov
mov
push
(bad)
lock
sub
mov
sysret
shrd
rol
jmp
sbb
into
cli
std
fbstp
jp
loopne
fidivr
push
lea
mov
outs
aas
fcomp
ss
fiadd
(bad)
sub
dec
test
jl
inc
mov
in
sbb
push
push
inc
dec
jne
jbe
add
mov
test
mov
add
add
fadd
cmp
mov
sub
pop
adc
pop
sbb
xor
push
sub
add
outs
dec
adc
ins
add
shr
push
test
out
popf
push
mov
dec
mov
sbb
add
adc
mov
inc
mov
in
clc
adc
jo
sahf
shl
jp
xchg
call
popa
das
mov
and
jmp
fisttp
jmp
pop
push
lahf
int
(bad)
aad
or
hlt
inc
hlt
jb
push
xchg
lock
je
mov
mov
adc
or
or
mov
data16
imul
ins
cmps
xor
cmps
sar
pop
pop
outs
xor
mov
and
in
inc
stos
add
sahf
dec
sub
int3
add
cmc
or
or
daa
les
dec
les
out
jmp
scas
jo
lds
jmp
(bad)
cld
mov
xor
cdq
mov
bound
cs
sti
add
mov
xor
das
lods
jl
add
ins
inc
js
jnp
xchg
push
mov
loop
rol
push
inc
push
mov
ficomp
mov
dec
ins
fsubr
and
mov
add
add
add
mov
cmps
add
das
sbb
mov
popa
add
(bad)
mov
add
lock
in
add
aam
mov
adc
(bad)
push
test
inc
mov
js
sahf
dec
or
mov
je
lock
in
add
push
rcl
pusha
test
sbb
(bad)
outs
je
add
xor
rol
idiv
inc
fld
fcompp
fstsw
sahf
setne
jmp
xor
rol
rcr
jle
dec
and
jb
add
popf
add
and
test
retf
popa
or
cmovg
ret
xchg
dec
cmp
push
cmp
rcl
adc
adc
cs
mov
or
por
and
and
push
pop
add
add
in
daa
inc
scas
test
(bad)
mov
shl
repz
ja
mov
jge
clc
cmp
ja
push
sbb
add
mov
rol
nop
jl
mov
add
or
ud1
cvtps2pi
add
fistp
lods
or
mov
jbe
sub
mov
mov
mov
cmp
scas
outs
pop
jae
mov
out
mov
jnp
inc
ret
ja
xchg
nop
loope
rol
push
push
and
pop
xor
add
(bad)
push
outs
and
push
add
push
jb
xor
daa
rcl
xlat
pop
push
das
iret
sahf
lods
jge
push
add
push
shr
pop
test
test
ins
out
(bad)
xchg
or
imul
scas
fwait
mov
cs
push
sbb
scas
mov
add
xchg
mov
iret
test
add
lea
xchg
mov
jnp
or
adc
cmp
add
sar
jecxz
daa
push
addr16
scas
stos
push
dec
mul
je
rcr
ja
loopne
imul
add
inc
xlat
sub
enter
pop
cmp
cmp
xlat
cs
aam
into
je
daa
sub
dec
sti
add
or
or
mov
inc
push
sub
sub
enter
mov
mov
pop
(bad)
xchg
std
aam
dec
test
jne
push
add
pop
add
pop
dec
add
imul
cs
add
pop
inc
inc
imul
addr16
jae
or
add
sub
xor
xor
push
add
test
sbb
mov
invd
xor
shr
bound
(bad)
scas
leave
jecxz
add
ins
push
add
out
add
stos
mov
cmp
imul
add
mov
sub
hlt
and
xchg
aad
cmp
xchg
mov
add
outs
jle
push
int3
mov
cmp
xchg
sub
jbe
xor
mov
stos
sbb
cmp
pop
push
mov
dec
push
in
inc
js
test
adc
pusha
or
dec
push
int3
sbb
add
retf
jge
sub
jb
call
fnstsw
ret
add
(bad)
cmc
push
pop
mov
add
fucomi
jmp
jmp
sbb
adc
call
push
pop
add
out
cmps
js
mov
push
push
dec
and
cmp
fdivr
sbb
fbstp
js
add
jb
ud0
ja
xchg
mov
push
pop
adc
dec
adc
adc
repz
mov
xor
sbb
cmc
sub
or
test
cmps
push
mov
mov
test
test
jb
mov
stos
sbb
popa
pop
xchg
bound
les
inc
inc
fnsave
adc
(bad)
jge
mov
xor
ret
pop
lods
jno
pusha
add
aas
ret
mov
or
jl
mov
pop
or
sub
xor
push
pusha
test
mov
inc
xchg
fmul
loop
adc
out
nop
push
mov
data16
sbb
add
push
inc
les
out
mov
add
rcl
push
sbb
pop
adc
jnp
cld
call
and
push
out
retf
dec
inc
adc
pushf
and
dec
add
ss
cmps
out
sbb
cwde
stos
pop
cdq
fsubr
or
xchg
pop
movs
out
sbb
(bad)
xchg
sub
(bad)
and
sub
ret
test
xchg
pop
adc
and
(bad)
hlt
mov
or
clc
push
xchg
add
adc
(bad)
cmp
pop
loopne
stos
cmp
je
ins
xor
xchg
push
xchg
ds
push
push
imul
cmp
jle
shl
mov
push
out
mov
outs
push
je
jge
xor
push
xchg
iret
clc
cld
push
and
and
in
mov
test
dec
add
mov
jg
mov
inc
xor
dec
ret
sbb
aad
nop
xchg
push
pop
shr
dec
sub
rol
pop
jmp
push
add
mov
or
or
ret
aaa
push
mov
add
mov
pop
jbe
add
test
movzx
aaa
mov
fnsave
sbb
mov
push
add
stc
add
call
and
sub
xchg
jmp
loop
xor
movs
cmp
add
jmp
add
popa
shl
jae
int3
push
pop
sbb
and
jb
iret
pop
mov
aad
imul
inc
retf
ret
cld
dec
push
and
int3
int3
sbb
cmp
sbb
add
cmp
movs
retf
or
stc
add
sub
jmp
add
jmp
pushf
push
add
add
mov
fadd
jg
xor
cmp
jae
mov
mov
xchg
into
div
mov
ret
lock
inc
push
jb
sbb
rcl
test
jae
or
bound
sbb
push
mov
jmp
adc
add
jmp
das
adc
das
adc
call
lods
cmp
in
(bad)
rol
inc
cmps
jb
in
outs
ret
mov
push
test
out
loop
or
je
ficom
jne
cs
adc
push
hlt
sbb
neg
adc
mov
sbb
inc
xchg
xor
or
mov
jle
mov
mov
xor
mov
not
dec
je
mov
mov
fbld
sub
jbe
push
lea
mov
lods
and
mov
test
dec
push
mov
repz
pop
mov
jne
lea
jmp
jbe
pop
jb
or
push
test
and
cmp
sub
aaa
xchg
sub
test
jl
inc
xor
adc
sbb
sbb
mov
add
or
mov
cs
dec
jne
mov
or
push
xchg
push
inc
int
xchg
cmps
add
add
pushf
adc
push
ins
push
mov
test
mov
shr
cmp
sbb
add
mov
popa
lea
(bad)
fucomi
gs
lock
adc
add
fmul
ja
sub
adc
fbstp
cmps
push
sti
pop
jbe
mov
jp
push
xor
and
mov
jle
mov
or
mov
inc
scas
adc
mov
inc
or
and
dec
mov
popf
sahf
dec
jmp
hlt
iret
pop
mov
push
or
push
push
neg
aas
cs
popa
scas
repz
jg
iret
mov
scas
lock
aam
inc
outs
fdiv
rcl
and
xchg
enter
sar
mov
inc
int3
jo
cmp
sar
xor
mov
adc
xchg
xlat
xor
adc
xchg
adc
shl
iret
cmc
push
mov
sahf
stc
sbb
dec
mov
add
js
xchg
xor
pop
inc
cld
or
mov
lock
adc
sub
pusha
mov
jb
mov
dec
out
stc
cmp
add
and
sbb
or
test
fistp
test
adc
push
lods
adc
dec
cmp
jg
jmp
pusha
xor
(bad)
xchg
fwait
mov
xlat
and
add
scas
push
aam
xchg
jle
mov
out
jle
cmps
sub
pusha
lea
out
push
icebp
test
pop
ret
or
inc
cld
mov
push
add
push
je
ret
mov
sbb
call
je
adc
add
fidivr
pop
add
sub
hlt
cmp
sub
mov
stos
lock
mov
jmp
in
cs
in
ret
fucomp
mov
add
push
cs
in
add
xchg
push
popa
jno
mov
cmp
stos
mov
sti
lock
clc
je
sbb
cwde
movs
jp
hlt
das
jmp
pop
hlt
div
popa
adc
mov
cli
(bad)
loope
xchg
retf
push
push
jg
push
pop
cwde
sub
js
push
sub
outs
lods
mov
lock
jmp
mov
js
js
cmp
sbb
jo
shr
inc
fisttp
test
push
add
sub
gs
call
sbb
int3
mov
mov
adc
and
je
pop
shl
adc
push
add
xor
xor
cld
sub
jl
inc
xchg
xchg
xor
jp
and
xor
xor
dec
test
jl
setb
jo
bound
call
jge
adc
mov
sar
ds
xor
or
xchg
push
push
js
adc
push
and
fnsave
in
mov
inc
lea
add
clc
movs
add
in
sub
add
sbb
mov
mov
adc
ss
(bad)
es
pop
xor
(bad)
sbb
repnz
adc
imul
pop
fidiv
or
adc
in
or
out
call
sub
data16
das
pop
fcom
push
inc
shl
jge
push
daa
lods
das
mov
rol
inc
fs
and
pop
fadd
sbb
jae
or
mov
pop
pushf
inc
jne
and
repz
dec
and
(bad)
mov
mov
daa
inc
rcl
aam
push
sbb
hlt
mov
mov
cld
pop
call
ss
xor
xchg
loope
iret
in
add
inc
inc
add
add
fwait
or
xor
je
jne
push
retf
sub
sar
int3
rcl
in
jp
ror
push
and
pop
and
mov
pusha
mov
push
pop
mov
adc
les
jae
test
adc
jmp
jae
scas
adc
cmps
mov
adc
or
inc
jmp
sbb
hlt
or
jmp
adc
and
out
jl
mov
push
adc
add
(bad)
mov
jg
pop
pop
sub
push
jns
cld
imul
add
adc
dec
mov
push
xor
xor
xchg
mov
or
addr16
inc
cli
pop
sbb
and
sbb
adc
pop
cmp
jl
stos
mov
mov
push
jl
add
jo
jne
xor
and
scas
loop
or
outs
or
neg
inc
jmp
adc
and
enter
pop
bound
cld
movs
pop
test
push
pop
adc
mov
cmp
retf
(bad)
inc
mov
pop
lock
xchg
jmp
xor
fwait
iret
rol
sub
adc
dec
xor
fsubr
das
aaa
sbb
nop
push
stos
mul
inc
xor
das
call
stos
pop
je
add
xchg
dec
rcl
jg
or
add
cmp
push
int3
add
or
je
(bad)
adc
sbb
in
mov
aas
xor
ins
jmp
lea
(bad)
sub
and
sbb
inc
in
fisttp
or
retf
sbb
pop
out
inc
mov
push
jne
cmp
jne
lea
outs
daa
adc
pop
int3
jmp
sbb
xchg
xchg
lock
and
test
in
mov
ret
scas
stos
(bad)
aad
nop
or
call
jbe
add
dec
sar
sbb
inc
dec
xchg
sbb
add
shr
mov
js
div
ja
lds
call
xchg
fild
sub
cld
mov
dec
add
sub
sbb
sub
push
dec
or
or
jmp
push
push
dec
push
push
fiadd
adc
xor
pop
push
fnsave
inc
inc
push
pop
mov
or
mov
inc
mov
pop
inc
adc
fcom
mov
lea
push
pop
pop
popa
out
add
out
pop
out
cdq
sub
je
jae
out
aas
add
jl
outs
jp
movs
add
out
mov
adc
and
add
nop
mov
mov
adc
shl
dec
mov
pushf
mov
rcr
shl
and
mov
inc
ret
mov
add
sub
scas
loop
add
inc
adc
test
push
jmp
adc
push
je
sub
std
pop
fwait
xchg
arpl
jecxz
push
scas
pop
inc
adc
inc
mov
push
pop
pushf
push
pushf
out
out
xlat
bound
jns
pushf
mov
pop
test
jl
call
pop
adc
shl
aam
dec
inc
adc
push
mov
mov
or
mov
and
ret
daa
mov
jmp
mul
pop
lea
shl
inc
aam
cmc
pop
retf
push
xor
stos
adc
add
shr
call
jge
mov
neg
jmp
or
outs
inc
push
(bad)
mov
inc
xchg
push
push
mov
sub
push
dec
div
xchg
xchg
add
mov
inc
dec
or
jne
or
jg
or
jmp
pop
std
cmp
jne
pop
fimul
xor
cmp
pop
or
loop
inc
clc
jo
mov
add
mov
and
ror
mov
repnz
or
add
out
adc
or
fistp
lods
pop
adc
mov
jecxz
adc
push
cld
jge
jo
push
mov
adc
jb
cmp
dec
(bad)
or
data16
call
jg
(bad)
sub
jae
mov
sub
dec
jbe
cmp
or
mov
jmp
mov
pop
es
test
(bad)
sti
add
or
mov
jbe
mov
sbb
bound
add
cmp
sbb
call
mov
sub
inc
dec
shr
xchg
inc
call
dec
xor
inc
push
lock
jl
or
xor
ret
dec
fadd
push
mov
stos
cld
sbb
(bad)
push
ins
into
dec
(bad)
add
dec
adc
cmp
jl
repnz
xor
repnz
add
push
stos
jmp
ins
aaa
frstor
inc
movs
je
sahf
and
cmc
adc
test
stos
sbb
addr16
mov
jmp
fisttp
jle
scas
jmp
dec
and
div
cld
push
add
add
leave
mov
mov
mov
cmp
and
(bad)
push
daa
call
adc
rol
jb
mov
mov
retf
or
enter
cmp
jecxz
mov
je
dec
jne
fsubr
or
adc
in
int
cmp
and
and
jecxz
lea
fist
dec
jne
ret
stos
out
js
sub
out
dec
ja
pop
out
mov
add
cmp
dec
mov
(bad)
ror
icebp
pushf
fwait
cmp
mov
cmp
je
push
push
cmp
adc
adc
stos
hlt
push
sub
jmp
or
dec
pop
pop
inc
loop
ret
push
mov
dec
push
mov
cld
(bad)
scas
and
inc
add
and
and
mov
sub
sub
sub
xor
xor
es
es
sbb
xor
sbb
sbb
push
adc
into
into
or
mov
sub
in
stos
sub
mov
or
jb
sub
movs
jmp
adc
fistp
jnp
je
mov
rcl
pop
hlt
jmp
inc
or
and
jmp
ja
dec
or
shr
or
mov
xor
aaa
std
pop
push
push
cmp
mov
mov
dec
inc
fbld
fstp
aam
cmp
dec
je
into
jne
je
fbld
push
jle
jno
cmp
mov
dec
inc
cmp
push
ins
sub
push
cs
inc
xlat
push
cmp
aas
sar
jne
je
cli
or
in
sbb
or
sub
cmps
push
je
or
fcomp
mov
push
push
adc
jp
loop
add
adc
adc
or
les
and
ret
mov
mov
(bad)
(bad)
pop
es
push
mov
in
cmp
mov
push
iret
add
(bad)
and
dec
add
xchg
cs
call
idiv
or
xor
inc
dec
gs
pop
imul
jmp
inc
jmp
cmp
jge
mov
inc
cmp
mov
jge
add
push
shl
jmp
mov
jmp
push
adc
sbb
mov
xchg
addr16
pop
jmp
xor
mov
sub
shl
inc
repz
(bad)
clc
imul
jle
add
add
in
sub
lods
stos
push
mov
pop
fcom
cdq
fs
pop
les
sar
stc
stos
and
adc
aam
jg
data16
push
mov
repnz
jb
dec
push
mov
xor
call
mov
sbb
jne
icebp
xchg
retf
xor
lock
in
out
mov
icebp
xor
retf
xor
test
mov
lds
jmp
cmp
out
sub
push
xlat
mov
add
xor
stos
push
test
xor
mov
jno
push
lock
mov
pop
cmc
lods
sbb
cmps
dec
mov
mov
(bad)
call
dec
mov
inc
movs
xor
bound
adc
mov
cli
and
jge
nop
sbb
sub
(bad)
repnz
jne
ds
fwait
mov
call
mov
jmp
sbb
mul
add
adc
sub
mov
hlt
and
cmp
pusha
adc
xor
push
push
adc
data16
in
or
inc
push
call
pusha
mov
xor
fld
sub
rcl
or
clc
adc
jmp
aaa
ret
dec
pop
add
pop
frndint
mov
fld
fstsw
fwait
mov
test
je
neg
mov
fidiv
jne
lea
mov
(bad)
call
mov
shr
and
add
jmp
mov
add
jns
mov
aaa
adc
cli
das
pop
cmp
cli
or
cmp
jb
ja
in
and
dec
js
dec
and
(bad)
outs
push
ja
pusha
xor
jmp
mov
push
push
loope
call
fbstp
mov
jmp
ret
xor
or
push
mov
or
scas
dec
dec
cmc
or
or
je
push
neg
neg
sbb
cmp
or
mov
pop
mov
push
inc
push
jl
sbb
jae
dec
xchg
inc
jns
dec
sbb
inc
inc
push
mov
lods
fild
cli
mov
cmp
lock
fidiv
setnp
leave
adc
inc
sbb
push
sub
mov
and
jne
dec
jne
adc
push
inc
cmp
aas
and
hlt
mov
inc
jmp
mov
xor
sub
jbe
pop
jmp
rcl
mov
sbb
mov
xlat
push
(bad)
mov
mov
xor
mov
xchg
js
pop
push
fnclex
fldcw
js
(bad)
popf
sub
push
fs
sti
push
add
icebp
xor
bswap
dec
push
add
xchg
in
fdivp
and
pop
sub
xchg
mov
push
aaa
xor
ret
mov
rcr
(bad)
mov
pop
sub
ret
loope
inc
test
add
aas
jmp
fstp
fstsw
test
inc
xchg
or
mov
add
fdivr
aas
ins
dec
jmp
mov
jge
(bad)
pop
repz
repnz
mov
pminub
arpl
in
mov
sbb
jns
stc
popa
imul
fild
lock
pop
cmp
dec
add
add
xchg
inc
mov
or
adc
add
sub
scas
test
aas
mov
or
push
add
(bad)
sbb
push
or
ins
mov
sbb
das
loopne
sbb
fcomp
xor
addr16
mov
push
add
sbb
cmp
or
lock
xor
outs
in
mov
(bad)
cld
nop
adc
xchg
fs
(bad)
cmp
inc
xchg
fneni(8087
pusha
jle
mov
sbb
push
push
loopne
lahf
imul
ins
mov
shl
aam
xchg
cmp
pop
in
lods
into
mov
jge
js
mov
mov
push
adc
or
sbb
xchg
les
and
adc
add
pop
nop
outs
jge
add
repz
retf
icebp
or
or
je
mov
test
(bad)
ins
lock
mov
fbstp
ret
nop
imul
pop
mov
test
je
fcmovu
sub
psubw
adc
and
(bad)
fidiv
ror
sub
push
fwait
mov
or
jae
fstp
(bad)
jae
arpl
mov
hlt
add
clc
aas
in
shr
data16
leave
(bad)
jle
ror
cmp
adc
sbb
cwde
or
fist
push
adc
pop
push
(bad)
fld
dec
jle
outs
sub
fistp
fwait
pop
pop
iret
mov
movs
push
adc
mov
xor
push
adc
lock
mov
mov
rcl
rcr
or
push
cmp
or
adc
or
push
add
add
sbb
push
xor
sbb
sbb
xor
sbb
cmp
sub
jo
mov
ins
or
jne
mov
mov
sbb
aaa
pop
test
mov
adc
or
xor
add
dec
idiv
js
sub
jmp
add
pop
pop
fimul
add
adc
mov
les
hlt
or
pusha
test
pop
(bad)
and
push
or
mov
out
xchg
fist
xchg
ror
mov
add
cmp
hlt
push
xchg
inc
idiv
xchg
xchg
cmp
jae
or
cmp
push
cwde
or
aaa
or
dec
cmp
jae
mov
rol
adc
imul
ss
and
nop
add
add
std
or
ss
sbb
rol
call
out
add
xchg
mov
iret
xor
stos
xchg
push
sub
ret
inc
and
fdiv
hlt
int3
shl
jne
push
je
xor
add
pusha
jmp
ret
push
cmp
push
add
cmp
and
rcr
xor
and
adc
pop
xchg
and
fldenv
mov
mov
outs
ret
mov
nop
xchg
sbb
int3
fisub
mov
or
or
push
(bad)
in
aaa
lods
movs
jg
add
lea
mov
sub
(bad)
ja
out
outs
and
js
or
jb
push
arpl
sti
mov
je
cmp
ja
adc
jle
rol
pop
dec
inc
jne
sub
dec
mov
aas
test
jl
cdq
idiv
imul
cs
ret
mov
add
cli
add
repnz
shl
add
push
xlat
cmps
lods
pusha
ret
or
stos
and
or
mov
pop
jns
aaa
call
pop
pop
loopne
int3
icebp
pop
xchg
call
or
push
daa
ret
call
dec
in
test
jg
ret
mov
paddd
sbb
cwde
or
and
cmps
lock
inc
pop
cmc
add
mov
stc
mov
add
add
je
data16
and
or
jl
xchg
lods
mov
test
add
dec
cmp
ffree
sar
ins
push
push
sub
cmp
pop
pop
sbb
add
add
xor
cmp
mov
xor
pop
(bad)
mov
sbb
cmps
inc
jbe
dec
mov
ins
(bad)
dec
cmp
mov
push
jb
adc
sbb
fistp
sbb
clc
mov
rol
shl
adc
adc
ret
sbb
or
jbe
mov
and
je
pop
stos
cmp
pop
cmp
out
clc
cmp
pop
in
mov
adc
ret
push
and
and
nop
add
adc
push
cmp
ss
push
pop
adc
adc
jnp
inc
add
fwait
nop
pop
sbb
pop
loopne
pop
push
or
fiadd
fstp
cdq
add
mov
fcom
sbb
fst
inc
push
xchg
and
in
sbb
add
push
enter
cmp
dec
adc
(bad)
std
or
rcpps
je
ins
cs
je
ins
jae
inc
call
scas
mov
scas
mov
(bad)
push
or
cmp
cmp
jge
add
repz
cld
in
js
sbb
test
add
fmul
lock
mov
sbb
aam
movs
mov
xor
dec
add
xchg
lea
adc
in
and
or
pop
xchg
add
das
push
retf
inc
jo
add
mov
aas
jmp
test
jle
dec
add
lea
sahf
fadd
cwde
cmp
sbb
jmp
ret
mov
mov
add
lahf
xchg
and
pop
adc
fsubr
ror
shl
add
mov
into
mov
sbb
retf
inc
xor
add
fcom
push
adc
mov
inc
or
jp
mov
jmp
clc
mov
add
test
data16
ins
aaa
stos
or
or
add
ret
test
lea
cmp
jbe
loope
data16
cmp
adc
inc
jecxz
outs
loop
leave
push
xor
push
in
sbb
mul
pushf
out
jl
addr16
inc
hlt
xor
mov
stc
and
mov
loopne
dec
mov
sti
hlt
inc
ret
adc
fisttp
pop
and
pusha
mov
lock
pop
mov
ret
test
in
adc
aas
inc
in
mov
outs
add
add
mov
xchg
push
mov
dec
test
jne
pop
jmp
mov
and
mov
mov
or
sbb
fwait
sub
cmp
pop
push
popa
(bad)
mov
adc
out
ss
mov
jg
js
pusha
cmp
inc
pop
daa
pop
lock
out
and
rol
test
sar
sbb
adc
pop
jecxz
aam
add
sbb
sbb
movs
lock
psubusw
imul
adc
mov
out
cmp
adc
test
imul
mov
push
cmp
jg
hlt
mov
jo
hlt
jmp
sbb
inc
adc
jne
push
lods
loope
pop
cmp
jne
mov
sbb
sbb
xor
xor
stos
out
cmc
ret
test
add
daa
mov
daa
das
pop
or
shr
test
cmp
addr16
push
ins
fs
push
test
inc
fdiv
xor
xor
inc
test
jl
push
inc
ret
push
fbld
jmp
add
jb
push
(bad)
fbstp
mov
add
jo
add
inc
int3
jl
sub
test
jns
in
gs
xor
shl
xchg
ret
in
add
jmp
sbb
mov
sti
dec
sahf
jbe
dec
jne
xor
dec
in
loopne
inc
fiadd
adc
dec
into
movzx
and
adc
push
push
js
outs
jnp
sbb
add
or
test
xchg
add
pop
jp
add
pusha
js
and
jl
iret
jnp
lods
push
fiadd
push
js
push
xor
cmps
fldenv
xchg
enter
loopne
mov
rcl
push
inc
push
lods
push
ret
push
lock
mov
enter
les
or
call
cmps
ins
icebp
mov
cmp
pop
adc
inc
mov
push
adc
dec
push
lea
in
sbb
cmp
pop
shl
mov
rcr
dec
and
add
sbb
jmp
push
jae
sub
mov
push
fild
mov
xor
je
dec
je
addr16
pop
dec
push
xor
sub
pop
mov
sti
push
inc
dec
jnp
dec
cmp
aad
xor
lods
pusha
sbb
push
add
add
aas
fsubr
jb
xor
mov
push
fmulp
in
xor
hlt
hlt
aad
pop
(bad)
ficom
popa
(bad)
inc
test
jle
je
loope
mov
adc
and
add
fstp
je
jmp
or
je
call
cmp
jle
shr
mov
pop
sbb
mov
test
cmp
jmp
mov
in
int
pushf
add
push
mov
xor
mov
add
lods
mov
imul
test
fcom
sub
or
shl
je
(bad)
fidiv
fmul
jmp
sbb
ins
test
fcmovne
lods
jle
xor
mov
xor
xor
mov
mov
add
inc
sbb
jge
push
fimul
jge
add
(bad)
mov
repnz
enter
add
sub
jne
dec
clc
js
scas
shl
push
or
jae
adc
ror
std
xchg
and
jns
xchg
imul
inc
mov
jns
les
(bad)
repnz
push
in
sbb
cwde
cmp
jae
cwde
cs
lahf
cmps
lahf
inc
mov
xor
stos
lahf
cmc
xchg
lea
and
mov
pop
add
and
mov
cwde
sbb
adc
mov
repnz
fcomp
loopne
jl
mov
mov
shl
lock
je
test
add
leave
xor
test
mov
xor
cli
mov
fmul
ja
fmul
jo
add
add
clc
mov
fild
outs
jne
fst
sub
mov
mov
adc
pop
bound
iret
mov
test
js
loop
push
cmc
neg
jo
push
push
jecxz
test
je
push
adc
test
jae
aas
call
dec
add
add
pop
adc
pop
add
les
push
(bad)
fcomp
sbb
scas
(bad)
mov
cld
adc
lea
push
mov
loop
pop
xlat
loop
and
add
nop
cvtdq2ps
in
cs
mov
sbb
mov
dec
pusha
mov
(bad)
fs
in
pop
xchg
into
popf
xchg
push
lea
push
enter
clc
inc
inc
fldenv
or
call
cmp
test
adc
mov
test
mov
lds
std
or
xchg
call
hlt
jmp
loopne
sub
or
pop
fmul
xchg
mov
pop
xor
loope
ss
outs
dec
add
nop
and
mov
dec
mov
cmp
add
xchg
scas
mov
cmp
sub
cdq
sub
dec
lods
(bad)
cs
xor
popf
jb
sbb
mov
mov
retf
xor
aaa
pop
mov
push
pop
jmp
inc
pop
lea
jmp
cmp
je
mov
mov
out
dec
clc
mov
call
(bad)
xor
mov
sbb
ror
jp
not
call
add
nop
xor
data16
nop
jmp
mov
xchg
pusha
xor
loop
das
adc
(bad)
jae
shl
repnz
jle
or
inc
jl
adc
fs
mov
or
pushf
mov
int3
push
dec
lods
arpl
in
neg
cmp
fcom
pop
pop
hlt
ss
loopne
lea
pop
fild
je
xchg
mov
lods
dec
loopne
dec
add
lea
push
push
dec
pop
add
jp
cs
lock
lds
je
add
mov
mov
and
lock
mov
ja
inc
and
and
mov
jno
or
(bad)
or
loopne
ins
sub
call
pop
scas
je
lds
xor
hlt
fs
jle
adc
fistp
cmp
je
dec
je
std
lds
push
call
adc
hlt
in
push
adc
push
add
mov
mov
jle
jmp
mov
mov
add
push
add
in
(bad)
adc
xor
popa
mov
adc
push
mov
sar
fs
out
mov
cmp
pop
and
idiv
arpl
jle
cld
cli
mov
mov
sub
add
ror
mov
shl
js
cs
adc
pop
cld
cli
pop
jp
jmp
dec
fs
sbb
mov
cmps
sub
int3
add
fidiv
push
cli
rol
enter
loop
push
sub
jmp
lock
sub
and
inc
jmp
push
in
jne
test
jb
push
pop
lock
dec
jo
lds
lea
call
adc
data16
push
mov
mov
mov
js
mov
fmul
pop
add
mov
imul
mov
push
aam
rcr
pop
loopne
sbb
or
test
or
dec
in
and
and
pop
fsubp
or
add
enter
icebp
cmps
mov
jmp
fmul
jmp
jl
in
fisttp
inc
push
out
push
out
out
sti
loopne
cmp
sub
dec
gs
sahf
cmps
cmp
call
push
es
ret
mov
dec
rcr
jno
xor
jo
jge
add
push
inc
add
mov
sub
aas
pop
data16
retf
aaa
add
fsubrp
mov
jle
and
fs
jne
mov
add
add
or
and
test
adc
cmp
dec
mov
cmps
fsub
mov
inc
mov
popa
inc
sbb
fild
cmp
inc
push
dec
cmp
cmp
pop
imul
inc
(bad)
and
int
int3
sar
mov
cs
dec
sti
jmp
xchg
aad
fsubr
aad
sub
push
dec
dec
int3
ret
jo
and
push
push
jbe
les
jmp
call
or
xchg
mov
xchg
mov
ror
je
cmc
sbb
gs
ret
aaa
add
loopne
inc
mov
inc
xchg
adc
sti
push
iret
push
loopne
dec
mov
inc
dec
pop
scas
arpl
mov
adc
je
add
xchg
out
(bad)
jmp
push
sbb
je
in
out
add
(bad)
jl
dec
pop
icebp
xor
clc
pop
popf
cmp
mov
ja
test
bnd
int3
ds
(bad)
cs
enter
jae
idiv
pusha
add
add
hlt
iret
mov
adc
enter
adc
pusha
clc
pusha
mov
fsub
sbb
in
pop
lock
cmp
aaa
or
sbb
add
sbb
pushf
adc
mov
out
mul
mov
or
pop
jb
sti
out
fisttp
addr16
(bad)
iret
push
sub
xor
and
sub
pop
in
daa
lock
mov
pop
xor
lea
push
jb
add
dec
mov
cmp
inc
mov
setl
mov
sbb
sub
push
push
enter
enter
push
push
push
jb
test
lock
mov
shl
imul
add
sub
rol
or
sub
out
dec
and
stos
pop
cmp
ins
in
fisttp
push
or
ja
movs
jae
jle
or
fisttp
push
pusha
xchg
fdivr
std
mov
dec
jge
call
sbb
mov
je
enter
lahf
push
ds
test
sahf
dec
cs
sub
in
aaa
sbb
fucomi
fmul
popa
jo
stos
sti
pop
test
jne
popf
push
fild
dec
jo
xchg
and
jecxz
out
test
je
sub
ret
sub
test
ins
and
cmp
push
pusha
sbb
cmp
and
or
cdq
xchg
push
or
or
xor
push
mov
jmp
dec
fldz
fsubr
or
sub
pop
int3
and
pop
xor
fs
or
add
sbb
push
mov
push
stos
lahf
mov
ret
shr
and
add
push
repnz
add
(bad)
push
or
push
or
mov
inc
cmp
dec
clc
or
out
mov
(bad)
mov
mov
cwde
jno
push
(bad)
mov
les
inc
mov
cmp
dec
add
out
sub
push
push
call
jle
ss
sti
and
test
lea
mov
push
imul
jae
outs
(bad)
enter
sub
or
push
mov
sbb
fmul
test
push
adc
push
push
sbb
test
inc
mov
xor
(bad)
fsub
dec
jne
(bad)
push
push
add
adc
pop
ret
sub
xor
lea
loopne
arpl
mov
sar
pop
mov
rcr
pop
xor
push
push
popa
out
scas
adc
and
loop
and
cmp
xor
pop
sar
sbb
dec
clc
or
ins
sbb
xor
sub
jp
data16
ror
aas
push
daa
sar
add
sub
imul
sbb
jmp
fwait
sub
je
push
push
jo
movs
mov
aaa
arpl
push
pop
cwde
loopne
inc
push
call
adc
dec
test
dec
add
dec
xor
adc
cmp
sub
in
adc
shr
and
push
fiadd
and
sub
int3
adc
aas
pop
sbb
and
sub
bound
test
rcl
and
sbb
addr16
and
aas
sbb
add
mov
ret
hlt
mov
jo
mov
idiv
push
pop
pusha
push
jl
sbb
add
fdiv
cmps
popa
test
pusha
xchg
adc
and
retf
xchg
sbb
mov
push
xor
pop
push
pop
clc
ins
shl
scas
push
fs
scas
sub
dec
xchg
cdq
ss
inc
push
adc
or
pop
sub
inc
daa
jo
out
mov
or
pushf
push
and
inc
sub
add
sub
das
sub
xor
sbb
daa
ja
jae
pop
daa
or
add
jge
fild
ins
push
push
cmp
clc
ja
push
jl
jmp
pop
inc
cmc
sbb
pop
lea
mov
mov
jmp
jo
clc
aaa
dec
cmc
mov
or
clc
adc
push
pop
jo
mov
retf
aaa
sub
push
nop
xchg
add
mov
mov
cld
add
adc
cli
pop
ins
add
push
sub
mov
test
jne
sbb
jb
add
addr16
pusha
hlt
mov
ins
retf
sbb
xor
add
add
movs
and
cli
push
push
push
sub
popf
push
into
dec
lea
mov
bound
call
xor
add
add
jne
fldcw
cli
(bad)
mov
xor
push
or
push
fild
inc
sbb
cld
mov
push
or
lock
adc
sub
inc
xchg
push
mov
inc
dec
xor
jne
inc
adc
out
test
loopne
adc
cmp
je
jb
popa
ins
inc
jb
inc
hlt
std
mov
arpl
fs
sbb
lds
out
fcomip
into
test
push
ins
cs
je
ins
jae
test
jbe
sub
push
push
lea
daa
cmp
(bad)
pop
idiv
or
popa
pushf
adc
add
push
inc
outs
jne
jo
sbb
pop
jg
push
fs
jge
pop
clc
jp
jno
outs
jg
cmp
idiv
cmp
je
mov
jo
js
mov
add
ret
jg
push
mov
rol
push
add
mov
lea
dec
or
fucomip
xor
ret
push
cwde
or
mov
sbb
mov
mov
adc
sub
nop
inc
dec
sub
jo
push
clc
mov
cmc
cmp
dec
pop
sbb
ret
mov
fdiv
ficomp
iret
lods
(bad)
lods
jbe
xchg
push
or
test
lea
dec
add
adc
add
mov
shl
std
xchg
(bad)
mov
and
fdivr
or
das
add
inc
popa
jb
jo
pusha
mov
fistp
jbe
or
jae
rcr
dec
inc
xor
js
xor
movs
xchg
movs
adc
mov
inc
sbb
jle
jmp
push
mov
std
out
jae
push
push
or
jnp
mov
sub
sbb
xor
pusha
mov
jo
sub
or
lea
jmp
add
cmp
mov
popa
mov
pusha
imul
mov
mov
cmc
mov
sahf
jmp
call
adc
inc
jl
dec
loop
test
data16
mov
fistp
or
pop
mov
mov
fild
arpl
adc
adc
push
dec
add
jle
dec
mov
enter
mov
add
mov
sub
or
stos
mov
cmp
adc
add
push
ds
dec
not
mov
push
(bad)
neg
push
ja
mov
test
jae
test
cmp
dec
sahf
lods
jne
xor
inc
idiv
(bad)
cmp
popa
ja
and
xor
pop
cdq
or
xor
sub
(bad)
enter
xchg
inc
aam
add
cmp
shr
and
and
cmp
pop
cmp
nop
xchg
into
loopne
js
sbb
or
jbe
loope
out
or
push
xor
and
dec
xchg
adc
jne
or
movzx
cmp
jne
adc
xor
cmp
movs
inc
add
or
xlat
mov
mov
loopne
inc
push
jge
push
jne
dec
js
and
sbb
adc
push
mov
pop
jmp
jo
mov
fidiv
movs
cmp
rcl
ins
call
fdiv
pop
jge
adc
jmp
arpl
mov
out
mov
sbb
and
mov
xchg
int3
jmp
pop
add
sahf
jle
jmp
sub
or
or
shr
or
(bad)
stc
(bad)
cmp
jg
pop
ins
fs
sar
or
jne
sar
sar
dec
or
loope
daa
mov
adc
push
int
fwait
(bad)
dec
mov
inc
dec
xchg
loopne
adc
xchg
and
push
adc
xor
and
mov
jmp
lods
fcom
js
cdq
paddsb
xchg
sbb
inc
pop
je
dec
loopne
xchg
dec
or
jmp
loop
fmul
and
pop
(bad)
and
rol
push
jne
mov
and
out
mov
gs
pop
aam
and
add
jg
gs
xor
cmp
and
mov
jae
test
daa
sub
add
ins
jmp
add
scas
push
into
and
daa
dec
pop
and
movs
inc
mov
mov
mov
enter
retf
in
mov
xlat
push
clc
dec
enter
sub
pusha
add
aas
inc
cmp
cs
add
stos
dec
movq
mov
pop
je
shl
sahf
pop
gs
cmps
add
dec
js
popf
dec
or
clc
or
or
add
dec
call
add
popf
jmp
and
out
xchg
push
lea
add
cmp
sbb
add
jae
sti
cmp
add
and
lea
jmp
test
gs
pop
mov
xor
mov
stos
add
out
lods
push
mov
push
sub
push
scas
rcr
mov
mov
(bad)
ins
mov
pop
cmp
mov
into
or
mov
cs
sbb
inc
mov
and
sub
or
or
push
pop
lods
imul
and
movs
adc
and
inc
jne
test
or
mov
mov
scas
loope
mov
add
cmp
mov
xchg
push
adc
lea
xchg
add
or
adc
pop
jo
sbb
addr16
or
add
jmp
xor
fild
push
adc
cmp
cmp
dec
mov
push
mov
sbb
jb
loope
xor
test
test
pop
popa
or
mov
push
mov
dec
jo
inc
aas
dec
cwde
sbb
mov
mov
cmp
mov
sub
mov
arpl
jnp
mov
loopne
pop
sub
sbb
sub
push
data16
cwde
test
inc
mov
push
gs
cmps
xchg
mov
push
add
inc
push
or
jmp
aam
cmps
pop
add
push
push
mov
ror
mov
push
out
dec
jecxz
pop
fist
cmp
ja
scas
out
dec
into
test
out
jmp
lea
iret
or
pusha
push
fs
mov
jl
sbb
push
ins
jle
mov
and
test
je
and
outs
lock
ret
(bad)
adc
inc
jp
mov
inc
cli
jo
fs
sahf
call
sub
popa
inc
xor
inc
call
push
ins
call
jl
(bad)
dec
or
mov
pushf
pusha
push
sbb
or
lea
int3
test
jbe
sub
adc
push
add
inc
add
xchg
xchg
outs
jb
adc
pop
pop
adc
or
movs
pushf
neg
add
inc
or
or
xchg
dec
aaa
fadd
nop
aaa
lock
push
and
loopne
or
adc
adc
outs
fst
cld
and
pop
pop
add
adc
xchg
ret
or
sbb
ret
add
push
inc
inc
mov
xchg
push
enter
fs
test
cdq
pop
fisubr
mov
mov
xor
lock
adc
xor
lock
or
pop
arpl
pop
inc
pop
pushf
mov
cmps
mov
call
(bad)
ss
sbb
ss
adc
or
fidivr
fadd
mov
mov
(bad)
fdivrp
dec
(bad)
pop
or
js
xchg
scas
mov
xlat
jg
mov
fdiv
fld
pop
mov
inc
cmp
jg
repz
or
xor
or
ja
jne
sbb
mov
add
enter
jmp
mov
mov
push
dec
(bad)
cld
push
sbb
lock
clc
mov
pop
pop
out
sub
dec
je
push
adc
pop
or
sub
jb
jmp
cld
and
cmp
call
xor
mov
or
shr
mov
outs
and
add
mov
pusha
pop
retf
jmp
adc
push
mov
mov
ret
int3
adc
cmp
iret
dec
fisttp
cmp
call
(bad)
jp
add
pop
call
xor
jne
or
jge
cld
call
push
in
lods
and
sbb
or
in
clc
mov
sbb
mov
jbe
lea
(bad)
sub
dec
cld
movs
inc
test
retf
fild
fbld
test
mov
add
into
ja
fdivrp
jg
je
cmp
push
sub
xchg
call
cmp
je
jmp
add
xor
sub
std
je
jmp
cmp
xor
adc
(bad)
lods
sti
push
jmp
sub
cmp
mov
ret
stos
cmps
imul
cmps
imul
loop
and
test
adc
xchg
(bad)
and
mov
pop
inc
add
ins
cdq
sub
repnz
xor
push
mov
add
sbb
jb
or
or
je
jmp
adc
int3
es
mov
enter
sbb
pop
lods
jo
or
cmps
add
and
push
add
cmp
adc
scas
je
int3
mov
test
test
loop
sbb
cmps
ror
imul
sbb
mov
mov
mov
pop
lahf
lea
cwde
pusha
pusha
pop
or
mov
out
pop
adc
and
pop
test
or
push
(bad)
enter
sbb
or
scas
add
jo
mov
xor
mov
mov
jge
aaa
nop
mov
and
jnp
mov
push
jae
ret
xchg
inc
mov
pop
sbb
(bad)
jns
bound
loope
cmp
inc
cmps
sbb
adc
out
pop
aam
pop
mov
inc
inc
xchg
push
sub
push
lock
jne
inc
enter
and
sub
jb
je
dec
xchg
cmp
or
rcl
xor
shr
add
clc
ins
or
push
adc
pop
push
mov
pop
nop
inc
clc
(bad)
inc
cmc
push
and
cmp
mov
adc
nop
pop
ret
loopne
js
xlat
int3
mov
ins
push
jns
sbb
mov
xor
or
and
add
pop
push
sbb
pop
retf
inc
bound
imul
mov
test
mov
push
cmp
shr
pop
ret
jns
mov
push
inc
inc
test
ins
jge
hlt
pop
loop
jae
adc
push
mov
jle
rol
fs
sbb
mov
test
in
pop
rol
clc
inc
jo
mov
mov
mov
sbb
cmp
pop
cmp
mov
pop
adc
push
fadd
cmp
aaa
inc
and
retf
inc
mov
inc
adc
or
and
sbb
push
iret
loopne
inc
adc
adc
pushf
shl
adc
call
add
mov
scas
add
ret
test
mov
mov
lock
cmp
jne
inc
mov
mov
test
sbb
call
mov
mov
sbb
shl
adc
or
push
mov
lock
jo
mov
push
or
fisub
jnp
cli
mov
retf
loop
jle
jmp
add
add
sar
jne
test
jne
cmp
jmp
inc
jl
(bad)
mov
das
cli
sti
cmp
jne
mov
inc
cld
ret
jl
dec
jne
push
loope
or
lods
add
and
(bad)
outs
ins
mov
jae
jmp
sbb
clc
enter
movs
outs
scas
push
mov
mov
inc
out
fmul
pop
ret
out
jo
retf
fld
pushf
jmp
cmp
xor
or
push
iret
cs
cmp
sbb
dec
adc
ss
and
cmp
test
jl
mov
cmp
or
movs
fstp
cmp
(bad)
cmps
iret
push
jmp
out
push
inc
inc
mov
cmp
mov
sti
lods
fstp
fwait
adc
gs
fld
fnstcw
test
dec
add
cmp
cmp
fisttp
call
aas
in
jne
or
push
xlat
(bad)
in
sbb
sbb
xchg
sbb
sbb
cs
daa
loope
mov
les
fisttp
dec
sub
iret
or
fsubr
mov
rcr
fadd
pop
adc
fcom
sbb
add
retf
mov
mov
add
(bad)
call
pop
pop
add
mov
cwde
adc
fnstenv
test
out
add
retf
jnp
hlt
push
or
xchg
xchg
pop
data16
sbb
dec
mov
jge
push
aas
xlat
es
xchg
ret
(bad)
cmc
jnp
(bad)
movs
fimul
sbb
jmp
ja
push
or
or
jnp
mov
pop
repz
mov
xchg
aas
xrelease
fwait
jnp
(bad)
repz
fisub
sti
xor
push
mov
sar
adc
push
jne
shr
mov
inc
lock
pop
inc
sbb
in
push
sub
jo
sub
data16
pop
sub
in
loopne
jne
gs
addr16
jle
add
scas
shr
test
repnz
push
test
adc
test
add
mov
(bad)
fnsave
adc
or
inc
ja
(bad)
adc
cmp
mov
cmp
ror
jecxz
mov
imul
jg
fwait
jo
cmp
clc
pop
jo
sbb
test
lods
test
iret
sar
inc
js
adc
mov
je
push
stos
sub
mov
cdq
push
lock
or
popf
into
fisttp
(bad)
push
dec
cmp
inc
or
test
sbb
inc
mov
jmp
mov
sub
std
add
pop
dec
add
into
test
jmpw
mov
setge
jmp
leave
test
xor
dec
push
push
mov
stc
leave
cmp
xor
iret
mov
pop
pop
cmp
rcl
or
in
or
addr16
add
push
jle
jo
add
cmp
or
jns
mov
jl
dec
inc
arpl
retf
and
jle
fimul
shl
rcr
add
test
xchg
inc
mov
lock
pop
push
ja
in
jg
adc
push
outs
or
out
or
jmp
xor
adc
ins
pop
or
jbe
jge
lods
jbe
or
into
mov
rcr
loope
das
cmps
imul
and
push
jg
ror
inc
cs
mov
loope
das
push
retf
or
div
dec
dec
(bad)
adc
cmp
jl
or
sbb
push
inc
xor
jno
cmp
mov
mov
adc
shl
jb
jg
sbb
fild
and
pop
push
lea
add
dec
sti
dec
cmp
and
jle
shr
ret
jg
cmp
loopne
in
add
sub
int3
xor
ret
bound
cmp
retf
jmp
jo
pop
pop
adc
and
adc
dec
mov
sbb
or
rcl
pop
adc
xor
shl
xchg
xchg
sar
or
and
(bad)
sbb
jmp
mov
jb
jbe
ret
mov
xchg
jb
adc
add
rol
movs
add
lods
je
ret
popa
test
jae
rcl
pop
rcr
mov
rol
ret
jl
js
int3
dec
and
dec
and
push
add
in
push
adc
cli
or
in
xchg
add
out
xchg
cmp
mov
add
jge
or
retf
xchg
and
cs
jns
dec
pop
fcomp
das
push
test
push
test
mov
add
in
div
mov
cmp
cmp
imul
jg
adc
imul
or
lock
sbb
(bad)
sub
ret
fisttp
adc
sbb
mov
daa
mov
mov
ret
mov
or
outs
mov
das
pop
add
or
jnp
add
cld
jno
aaa
cli
mov
repz
sbb
mov
xor
lds
lahf
loopne
sbb
movsx
fcom
sti
(bad)
rol
inc
mov
(bad)
jecxz
addr16
outs
sbb
cld
jo
sbb
or
jle
mov
in
push
arpl
enter
sub
aaa
push
or
sub
inc
mov
sub
or
stos
add
test
sti
jg
retf
jne
add
cmp
jge
pop
or
pop
jne
sbb
mov
lods
xchg
mov
add
test
dec
jo
or
fwait
xor
add
cmps
or
mov
add
fistp
ror
shr
mov
add
push
jmp
mov
sub
das
fs
inc
or
fidivr
pop
shl
es
clc
pop
out
mov
jne
push
lock
out
mov
icebp
xchg
mov
mov
jl
addr16
push
pop
mov
and
or
xchg
adc
jbe
(bad)
jp
test
adc
push
sbb
(bad)
mov
popa
jmp
cs
and
or
sti
xchg
or
je
nop
out
add
cmp
inc
in
adc
jmp
mov
fisubr
xor
push
ret
inc
sub
outs
xchg
pop
cdq
push
jle
mov
jno
cmp
clc
je
cmps
or
xor
hlt
add
dec
hlt
push
(bad)
xor
les
out
(bad)
add
mov
mov
loopne
push
push
loopne
sbb
pop
test
ins
adc
push
or
or
jle
add
mov
mov
inc
rcr
js
imul
xor
gs
mov
and
cmp
fmul
sub
dec
inc
jl
test
pop
pop
mov
fmul
push
pop
popa
arpl
mov
test
dec
inc
in
jge
add
pushf
cmp
fst
fild
dec
push
in
ds
lds
dec
cld
xor
and
mov
or
hlt
ja
xor
pop
add
adc
push
push
outs
imul
je
jns
es
jecxz
sar
push
push
aaa
sbb
add
hlt
fnstsw
cwde
inc
add
add
gs
pop
ins
push
add
lahf
sub
jbe
xchg
dec
ins
push
fdiv
add
dec
imul
sub
adc
out
scas
ror
mov
popa
ins
es
ffreep
adc
fsub
or
jae
ins
ins
inc
sti
sahf
mov
gs
adc
inc
je
pop
jnp
sbb
xchg
or
imul
dec
outs
outs
iret
sbb
pushf
sub
pop
or
ins
imul
cwde
inc
add
popa
jns
xor
fild
cmp
es
and
cs
jne
(bad)
jmp
pop
jge
(bad)
cli
push
out
push
add
jp
xor
adc
retf
xor
xchg
mov
adc
ret
je
cmp
mov
add
dec
sbb
sbb
mov
push
sti
xchg
push
xor
push
mov
dec
std
outs
jbe
dec
push
jl
inc
ss
shr
or
mov
or
push
xor
inc
dec
jne
mov
xchg
xchg
sub
or
es
or
(bad)
jmp
push
mov
xor
push
rol
mov
test
jne
call
rcl
or
or
add
inc
jmp
jmp
pop
pop
ret
pop
push
fiadd
jo
jbe
jle
sbb
pop
cmp
push
adc
pop
mov
retf
in
cmps
push
pushw
cmp
loope
adc
cdq
inc
(bad)
test
loope
xor
dec
clc
or
sbb
jp
push
sbb
add
mov
retf
push
mov
cmp
or
sub
dec
js
dec
call
inc
jg
cmp
movs
bound
mov
dec
test
jl
dec
in
(bad)
jle
xor
lea
inc
cmp
jo
cmp
jle
add
xor
pop
sub
dec
sub
aas
pushf
jle
fs
push
test
test
test
icebp
mov
push
(bad)
(bad)
nop
jo
cli
cmp
jne
pop
add
cmps
cdq
add
mov
ss
div
mov
jne
sbb
push
test
or
and
mov
jl
sbb
and
or
jno
loopne
lahf
and
mov
ret
jge
mov
ret
ror
xchg
leave
mov
mov
xchg
out
pop
xor
scas
mov
jle
add
mov
daa
jne
mov
retf
js
or
rcl
jmp
int
xchg
shr
add
sub
pop
mov
iret
sbb
mov
sub
pop
push
inc
rol
sbb
add
xor
pop
mov
mov
sub
mov
cwde
test
div
add
shl
mov
push
test
lock
inc
ret
adc
inc
push
push
jo
aas
pop
repz
nop
push
and
cmp
mov
lods
js
and
imul
add
outs
or
xor
xlat
and
adc
add
je
std
int
sti
inc
add
jae
inc
push
add
jo
popa
add
adc
lock
or
daa
pop
mov
lock
jo
into
cs
mov
adc
std
pop
ins
stos
xor
int
icebp
inc
cmp
jne
movzx
call
loop
push
push
or
inc
in
aam
sbb
adc
lods
(bad)
clc
data16
add
inc
jmp
aas
out
xchg
call
mov
mov
push
dec
dec
sbb
imul
cli
xor
stc
cmp
jne
sbb
dec
ins
jo
aaa
mov
sbb
pop
mov
pop
mov
rcl
lock
adc
dec
mov
das
into
mov
dec
push
or
in
mov
aas
outs
add
rcr
and
ins
js
or
adc
push
mov
loopne
adc
push
fisttp
or
mov
xchg
sahf
xor
mov
outs
leave
inc
(bad)
cmp
add
adc
xchg
jno
sbb
or
sub
pop
rcl
test
jae
inc
add
adc
push
add
sti
movnti
mov
pop
pushf
mov
int
jae
call
ficomp
aas
pop
retf
vlddqu
ror
retf
mov
xchg
inc
hlt
pop
jp
jge
test
rol
jnp
push
ins
mov
sub
add
mov
or
xchg
ret
push
pop
cmps
inc
or
rol
sbb
cmp
mov
cmp
xor
mov
cmp
mov
enter
mov
stos
sub
cmp
sete
inc
xchg
jg
loopne
push
push
push
and
dec
cmp
into
push
push
mov
sub
push
mov
aaa
push
push
push
jnp
pop
cmps
mov
cli
es
leave
inc
add
add
cmp
inc
and
inc
pop
jne
adc
inc
pop
mov
add
pop
stos
loopne
cdq
idiv
cmp
push
push
fisub
(bad)
movs
movs
sbb
dec
or
nop
dec
inc
std
mov
pop
repz
xor
xchg
dec
shl
and
pop
pop
or
jmp
test
adc
ret
sar
cdq
idiv
and
or
mov
mov
and
cmp
das
push
cs
je
jl
push
push
push
test
enter
pusha
imul
adc
mov
pop
push
sbb
enter
daa
imul
sbb
mov
add
sub
pop
cmp
imul
hlt
sbb
shr
ror
xchg
in
and
outs
sbb
repz
xchg
push
shr
or
pushf
push
fist
jp
dec
inc
or
data16
xor
mov
aam
sub
sbb
xor
mov
call
add
sub
fcom
xchg
lahf
loopne
and
pop
dec
jl
cwde
iret
stos
or
lods
and
or
push
call
add
out
lea
iret
lea
test
mov
icebp
fs
jge
loopne
in
mov
es
mov
add
xchg
mov
push
xor
hlt
sbb
sbb
and
std
dec
ins
fsubr
mov
lea
shr
cld
mov
adc
(bad)
push
sub
jecxz
js
in
ret
jnp
adc
js
ret
and
bound
call
ins
or
mov
inc
(bad)
mov
and
mov
xor
xor
ret
pop
fwait
rcl
cmps
mov
jl
cmp
push
inc
aam
inc
shl
xchg
sub
push
fisub
(bad)
cmp
aam
hlt
or
inc
cmp
push
scas
push
test
es
jne
pop
sub
test
out
call
cmp
push
push
aad
shr
xor
scas
rcl
push
pop
scas
mov
xlat
add
js
push
mov
add
mov
loopne
sbb
mov
sbb
ins
push
fs
add
js
pop
inc
dec
jne
or
(bad)
dec
cwde
(bad)
adc
xor
das
bound
call
cmp
pop
nop
pushf
dec
loopne
pop
push
(bad)
push
mov
scas
adc
mov
cmp
mov
(bad)
clc
or
sbb
jmp
fnclex
fldcw
push
pop
add
fdiv
xor
sbb
or
push
shl
and
and
call
sub
shl
add
mov
aaa
mov
outs
mov
cmp
ror
cdq
cmp
and
clc
ror
inc
or
cmp
push
or
shl
(bad)
adc
push
lock
add
adc
retf
mov
leave
es
test
outs
call
or
data16
stos
or
stc
xlat
and
mov
pop
or
out
mov
add
mov
push
cld
xor
mov
xchg
pop
push
mov
addr16
jg
push
test
push
mov
sbb
sbb
cmp
adc
inc
mov
(bad)
out
adc
xchg
push
or
lock
adc
mul
add
punpcklwd
jge
mov
les
dec
in
test
and
cmp
dec
push
adc
out
push
mov
push
inc
sar
movzx
jns
sbb
sbb
add
push
push
or
daa
mov
cmp
jge
adc
mov
or
push
lea
adc
call
and
scas
push
or
shl
cs
lds
mov
jle
adc
pop
pop
push
shrd
shr
stos
stos
into
inc
enter
and
test
sub
popf
jl
pop
push
scas
push
aad
gs
dec
jnp
mov
out
fcmovbe
scas
cmps
cdq
js
adc
sub
add
pop
pavgb
xchg
push
cs
fsub
dec
ret
lds
inc
scas
div
sub
xor
jecxz
mov
dec
jns
test
push
mov
in
scas
lock
in
xor
cmp
pop
inc
xor
add
xor
mov
or
xlat
inc
loopne
xchg
push
dec
and
and
shl
fst
shl
push
cmp
jb
mov
pop
pop
inc
inc
dec
ss
addr16
mov
xor
out
pop
adc
or
imul
pop
or
adc
ins
pop
out
inc
cli
inc
or
mov
cmp
and
inc
ja
data16
sbb
fdivr
add
jmp
xor
sub
or
xchg
dec
add
sbb
das
out
movs
das
xchg
cmp
push
fstp
out
mov
cs
bt
cs
lods
in
adc
add
cmp
adc
aas
add
ds
add
cmp
jne
inc
mov
fbld
movs
call
ror
(bad)
push
iret
es
daa
push
jp
sbb
pop
sbb
jmp
sub
xor
nop
xor
inc
push
xchg
push
sub
in
lods
mov
lea
adc
adc
mov
mov
shr
mov
inc
push
int3
dec
adc
push
sbb
add
adc
adc
scas
adc
lock
xor
retf
mov
jae
out
pop
jle
or
ret
cdq
cmp
dec
add
retf
pop
xor
cmpxchg
psubb
lea
pop
ins
pusha
push
jo
mov
or
mov
xor
les
cmp
outs
jmp
adc
and
loop
sbb
add
ret
out
lock
pushf
and
test
mov
xor
push
adc
jge
pop
sub
push
push
adc
push
cmp
sahf
sbb
adc
pop
mov
xor
mov
jb
mov
cmp
or
jle
das
push
(bad)
hlt
dec
and
aaa
add
fmul
mov
push
inc
xor
pop
mov
dec
mov
(bad)
sbb
cmp
ror
dec
jne
ins
jge
or
add
inc
inc
mov
call
call
push
push
lock
jne
mov
shr
sbb
test
sub
add
sub
(bad)
push
rcl
sub
add
test
les
fisub
push
lea
cmps
dec
add
jg
mov
retf
jns
add
stos
out
inc
fwait
pop
push
pushf
sbb
adc
lock
ds
out
clc
fistp
das
cmp
jbe
pop
jo
or
(bad)
sbb
sar
cmp
jl
push
out
push
imul
jge
icebp
inc
jmp
dec
jno
je
xor
into
sub
inc
pop
into
or
pop
inc
jle
jle
dec
adc
or
out
adc
mov
sbb
jle
mov
sbb
push
out
iret
or
lahf
xor
pusha
push
mov
and
lock
ficom
cwde
sbb
inc
jmp
lea
add
mov
(bad)
dec
add
mov
push
push
(bad)
or
ja
xchg
mov
cmp
jo
adc
stc
out
jg
pop
mov
fstp
cwde
sbb
xor
call
mov
outs
cmp
or
lea
and
fucomp
cmp
pusha
add
ds
test
mul
mov
sub
lock
jmp
sub
pop
pop
pusha
mov
and
outs
movs
test
pop
outs
add
fistp
add
fxch
add
outs
jle
mov
or
out
addr16
mov
inc
lea
daa
jo
rol
sbb
scas
pop
dec
and
inc
mov
or
outs
(bad)
cld
mov
fs
pop
test
and
cdq
fwait
int3
fmul
and
xchg
pushf
mov
andnps
idiv
fild
pcmpeqd
mov
mov
and
pop
rcl
mov
pop
dec
adc
mov
sbb
and
(bad)
xor
in
xor
jmp
fwait
nop
add
addr16
and
jne
out
fidiv
cld
mov
jg
sar
mov
push
(bad)
sbb
sbb
ror
jmp
inc
inc
dec
jne
in
sar
cs
xor
jnp
out
fisttp
(bad)
enter
sar
sbb
mov
add
arpl
xchg
jne
mov
xor
cs
cmps
pusha
lea
or
push
sbb
jbe
inc
in
loopne
jge
lock
retf
adc
and
mov
adc
cli
dec
lock
sub
adc
test
shl
lds
call
fmul
fmul
nop
(bad)
mov
adc
add
mov
or
inc
cmps
xor
popf
lods
mov
fsubr
add
aam
shr
adc
or
(bad)
lods
outs
xchg
outs
int
or
call
ret
or
or
and
push
adc
rol
sbb
sbb
jecxz
cmp
lock
xchg
imul
jecxz
sbb
jl
test
jbe
cwde
scas
and
xor
ins
xlat
stos
in
outs
pop
lods
or
scas
ins
cmp
xlat
pop
xor
ds
xor
pop
mov
mov
pusha
mov
aaa
(bad)
arpl
sub
cmp
std
clc
jg
inc
pop
cld
lea
mov
mov
call
loopne
mov
(bad)
out
xchg
mov
loopne
and
push
(bad)
pop
test
xchg
cmps
sbb
jge
bound
clc
shl
hlt
fwait
dec
aas
jae
rol
add
lods
call
cmp
lods
ins
sub
adc
scas
and
outs
call
or
bound
fcomp
pop
test
sbb
and
mov
xchg
mov
test
pusha
or
inc
xor
stc
dec
mov
ds
and
sub
xchg
pop
js
inc
or
out
scas
jl
cmp
mov
jno
inc
or
push
ins
cld
push
lds
ret
jecxz
adc
(bad)
add
dec
cmp
cmp
clc
test
call
add
daa
xlat
cmps
(bad)
adc
xor
stos
mov
pop
call
mov
(bad)
jns
pop
loop
fst
ins
mov
cmp
jg
jge
adc
xor
xor
adc
adc
adc
and
adc
inc
inc
sub
mov
inc
ins
inc
sbb
hlt
hlt
ja
push
xor
and
mov
dec
mov
jmp
sbb
xor
aad
add
(bad)
mov
mov
push
or
lods
cli
mov
or
mov
dec
cmp
sub
je
adc
stc
pop
mov
jmp
xchg
inc
mov
xchg
xchg
(bad)
sbb
jo
stos
sbb
je
mov
cli
je
xlat
adc
sbb
(bad)
fisubr
in
enter
mov
pop
cwde
mov
call
jne
rcl
mov
stos
ror
xchg
xchg
repz
or
imul
mov
adc
inc
stos
loopne
enter
xlat
adc
mov
xor
add
xor
or
xor
and
sar
ins
inc
sbb
push
(bad)
call
xchg
adc
adc
addr16
pop
pusha
cs
xor
add
sub
mov
je
push
xor
adc
mov
adc
and
shl
mov
inc
add
cmp
push
xor
out
movs
or
dec
(bad)
into
pop
add
push
(bad)
clc
mov
xchg
xchg
call
xchg
cmp
mov
pop
and
popa
sub
mov
add
test
cmp
retf
mov
jnp
out
cmp
jbe
and
add
push
test
inc
in
popf
pop
sub
jno
mov
push
stos
push
pop
inc
inc
jl
call
and
ret
fdiv
out
push
jge
jo
std
mov
inc
adc
xchg
imul
dec
out
pop
or
or
jge
mov
xlat
xor
les
xor
outs
xor
addr16
add
add
repz
and
je
and
sbb
add
sbb
pop
and
retf
cld
inc
imul
adc
ror
push
add
inc
nop
mov
dec
je
sub
cmp
stos
fimul
push
push
mov
aas
shl
inc
add
lods
jnp
sbb
xor
mov
(bad)
jmp
push
nop
mov
ins
gs
or
pushf
pop
(bad)
aaa
xor
push
jmp
mov
push
xchg
cmp
mov
mov
pop
jle
or
call
sbb
in
pop
mov
retf
mov
mov
imul
push
sahf
mov
test
push
cmp
mov
jo
cs
std
(bad)
push
paddd
add
dec
mov
or
sub
mov
scas
out
fidivr
or
stos
mov
push
pop
in
push
mov
ret
scas
leave
push
ja
cmp
mov
xchg
pop
mov
pop
jmp
mov
or
test
fsub
mov
add
adc
div
push
push
add
sar
jns
adc
sub
retf
or
or
stc
test
mov
mov
fwait
shr
sahf
imul
movhps
add
add
add
sub
add
imul
arpl
sub
inc
mov
fild
test
and
mov
shl
loopne
(bad)
fnstcw
or
(bad)
fs
sti
call
dec
sbb
mov
shr
mov
inc
movzx
and
adc
ret
jne
sar
add
jne
mov
push
sub
mov
or
ss
(bad)
data16
mov
out
or
mov
xchg
and
mov
fbstp
test
add
and
scas
fnstcw
sub
popa
push
adc
add
sbb
popa
or
or
xchg
out
test
inc
mov
sbb
sbb
adc
ror
push
or
mov
out
shl
push
fidivr
or
imul
sbb
or
adc
fdiv
lea
movs
add
mov
repnz
mov
push
rol
mov
enter
push
or
adc
mov
out
in
sbb
arpl
xchg
div
sar
(bad)
sti
loope
jle
mov
or
xor
cmp
(bad)
xor
fdivr
mov
cmp
jge
cmp
ret
or
je
push
mov
pop
pmullw
inc
dec
jnp
add
(bad)
cmp
(bad)
jne
sub
das
lea
push
lea
sysret
lahf
jne
das
gs
cwde
add
mov
ret
int
pusha
popa
(bad)
xor
push
dec
dec
or
or
ret
push
les
je
add
jo
call
pop
aaa
jle
and
aas
push
test
jle
xor
fdiv
pop
dec
mov
push
mov
dec
cld
jl
inc
xor
ret
ret
leave
in
fisttp
out
push
call
inc
dec
jne
jmp
sub
sbb
xlat
inc
cmp
jne
jle
pop
outs
sbb
add
and
mov
or
xchg
lock
xchg
and
data16
add
sti
fist
cmp
jne
mov
cmp
adc
adc
push
or
cmp
push
pusha
mov
pop
shl
inc
jo
push
or
ja
mov
pop
mov
add
dec
out
retf
iret
pop
mov
inc
sbb
and
jo
cmps
mov
test
lods
std
jge
push
inc
shr
je
sti
add
dec
(bad)
addr16
jb
fs
adc
imul
fidiv
int3
push
add
out
mov
mov
mov
outs
call
ror
and
into
add
out
jbe
lea
loopne
xor
loopne
gs
inc
test
add
mov
jnp
mov
je
mov
push
xchg
ins
scas
add
sbb
inc
daa
lock
rol
movs
addr16
xor
nop
cmp
lgs
adc
jbe
inc
fadd
loope
inc
pop
and
sub
and
push
mov
ror
or
iret
enter
adc
shl
pop
sub
cwde
aaa
and
xchg
push
or
add
leave
mov
or
xchg
add
push
clc
mov
xor
add
jne
enter
pop
das
clc
push
ins
sbb
dec
jne
cmp
add
aaa
js
loopne
int3
es
push
mov
fstp
push
push
pop
loopne
hlt
push
fmul
out
push
out
fcom
xor
out
imul
js
dec
rcl
js
int3
push
inc
cs
inc
pop
add
push
pop
aaa
(bad)
lock
out
not
sbb
rol
push
cld
jne
mov
push
movs
int3
add
pusha
aaa
mov
cwde
add
push
lods
mov
mov
movs
pop
sbb
(bad)
int3
pop
mov
test
mov
lock
xchg
push
and
nop
push
in
mov
push
fs
mov
enter
or
adc
pop
jl
fstp
in
push
sub
js
in
mov
mov
shl
sbb
dec
push
inc
out
hlt
leave
and
add
js
jne
dec
push
cmp
lock
dec
(bad)
cmp
sbb
xchg
or
mov
mov
outs
adc
outs
cmp
in
push
or
fdivr
sti
add
push
sbb
cld
mov
repnz
dec
push
loopne
adc
inc
and
adc
lods
fldcw
test
push
push
ret
test
and
inc
add
xor
mov
or
inc
push
outs
jb
cmp
ins
ins
gs
add
idiv
push
dec
gs
popa
adc
or
idiv
adc
add
dec
jae
pop
jo
sbb
jns
dec
add
push
push
popa
jb
ins
and
fstp
adc
and
jne
je
sbb
mov
dec
outs
daa
push
in
sbb
dec
imul
pop
push
das
or
jg
or
or
jg
or
pop
sub
jg
or
jg
and
daa
jg
jle
jbe
retf
daa
jg
aam
inc
push
push
or
arpl
push
dec
dec
gs
sub
out
sbb
ret
or
adc
inc
push
add
lock
push
push
outs
jne
gs
adc
pusha
sbb
or
cld
push
inc
popa
je
jecxz
and
adc
xor
fidivr
push
sbb
cdq
mov
jo
dec
add
cmp
xchg
movs
inc
ins
test
out
das
adc
lea
cmp
xor
outs
jecxz
cmps
mov
pop
mov
push
push
loope
push
add
adc
jl
in
fst
xchg
dec
lea
and
mov
add
add
jmp
mov
jo
sbb
mov
daa
pop
or
(bad)
sub
mov
push
call
push
dec
das
pop
pop
pop
lock
and
dec
push
test
repz
ins
es
jge
mov
mov
lahf
out
jp
fdivr
push
inc
sbb
std
imul
xor
adc
inc
inc
jb
not
in
push
inc
add
call
mov
inc
push
popa
gs
cmp
jns
push
add
ss
dec
sbb
gs
xchg
add
add
mov
ins
xchg
mov
or
ror
adc
xchg
div
in
adc
lods
cmps
mov
mov
jns
into
ins
cs
js
je
jae
out
adc
cli
cmp
cmp
adc
dec
adc
inc
mov
shl
fsubr
or
lahf
rcl
mov
adc
mov
jne
fs
xlat
pop
xor
sub
lahf
dec
mov
pop
add
mov
inc
ja
scas
add
push
inc
rcr
xlat
ja
sub
ja
jmp
sar
cwde
ror
cwde
xchg
jb
shl
prefetchnta
outs
mov
add
jmp
push
movzx
inc
or
outs
push
push
or
mov
xor
and
xor
sti
jne
mov
cmp
lea
rcr
out
scas
pop
rcl
sub
xchg
lock
lods
jp
stc
icebp
mov
(bad)
fist
add
les
test
ja
in
lea
imul
nop
clc
es
sbb
nop
fbstp
into
mov
xchg
stos
dec
outs
nop
fisttp
test
and
jb
in
dec
iret
inc
mov
dec
nop
fbld
popf
inc
test
add
push
(bad)
fiadd
stc
fimul
lock
sbb
sub
xchg
push
adc
stc
int3
loop
ins
or
stc
jg
push
xchg
pop
mov
inc
fwait
xchg
cmp
cmp
or
idiv
jne
add
clc
cld
mov
mov
sbb
es
mov
fucomi
dec
adc
inc
test
mov
enter
mov
push
mov
loope
rcr
pop
cmp
call
mov
in
pushf
out
jp
mov
mov
sub
or
test
daa
daa
daa
jl
je
loopne
sub
je
pop
add
pop
jae
or
push
mov
sub
call
shr
xchg
add
loopne
sahf
add
and
ret
add
and
cmp
mov
adc
pop
xor
jo
imul
mov
test
or
hlt
inc
add
sbb
pop
clc
add
movs
and
aam
mov
inc
js
ror
loopne
adc
retf
or
shl
or
push
cmp
add
pusha
adc
ins
dec
jb
pop
pop
(bad)
push
jle
ja
pop
out
or
pop
ror
push
lock
pusha
shl
cmp
aas
mov
je
jo
inc
cmp
add
imul
cmps
jne
cmp
pop
push
adc
(bad)
push
push
push
jo
call
mov
and
mov
xor
sub
loop
pop
sub
retf
dec
fs
adc
cdq
fs
ins
lock
cdq
fs
dec
jl
test
dec
es
mov
jg
and
sbb
add
and
dec
xor
movs
or
in
leave
lods
adc
mov
dec
in
adc
mov
in
int3
sbb
push
rcl
mov
in
xchg
push
cs
and
cld
sub
jbe
cs
xor
or
sub
sbb
dec
push
mov
sub
xor
cmp
clc
call
add
xchg
add
retw
sub
and
add
pop
mov
outs
je
outs
addr16
jns
gs
fs
std
es
gs
dec
outs
cmovno
pop
jle
jb
jne
dec
jne
push
inc
imul
out
adc
outs
dec
inc
outs
cmovg
in
ja
sbb
pop
outs
adc
inc
ins
jo
xor
jb
ins
push
je
and
dec
pop
push
push
cmp
pop
adc
and
bound
inc
outs
outs
ins
inc
jae
xor
aas
pop
(bad)
pop
mov
add
add
scas
rcr
push
mov
mov
scas
xchg
xor
xor
arpl
push
push
pop
pop
adc
jno
popa
ins
or
mov
aaa
or
jmp
jae
int3
and
cmc
jbe
ins
cmp
and
mov
repz
lods
mov
push
les
add
or
fdiv
and
xlat
push
fsub
add
out
mov
(bad)
es
add
fdiv
in
daa
xlat
test
push
inc
pushf
jecxz
cbw
push
inc
call
call
enter
nop
into
mov
xchg
rcl
outs
push
pop
nop
popf
idiv
sbb
push
xchg
jp
or
test
jnp
add
es
jl
shl
call
mov
push
inc
(bad)
pop
add
jmp
(bad)
add
xchg
mov
add
mov
in
push
push
push
add
add
push
inc
jne
mov
sbb
lods
or
push
fucomp
loopne
mov
push
mov
or
jnp
outs
fs
mov
mov
push
test
cli
adc
fs
lods
jecxz
push
inc
cs
test
push
cmps
pop
dec
jae
ins
shl
lds
fsubr
sub
add
add
popa
mov
cdq
fdiv
stos
add
add
loop
outs
fwait
jns
push
push
outs
jne
arpl
loopne
mov
push
outs
xchg
and
or
xchg
xchg
xor
jno
loope
and
stos
dec
sub
mov
add
js
jo
sbb
or
test
jo
sub
push
adc
dec
imul
aam
push
mov
push
jns
jo
out
cmps
jne
or
add
mov
pop
not
or
and
add
lods
dec
inc
pop
push
stos
ins
mov
inc
aas
(bad)
or
ret
rol
(bad)
pop
iret
shl
fmul
xchg
dec
aas
pop
dec
inc
mov
aas
pop
ja
xor
pop
mov
add
stos
stos
ins
test
outs
push
xor
push
pop
adc
ja
pop
adc
xor
in
jge
retf
(bad)
jmp
je
add
or
data16
jecxz
push
or
push
leave
jecxz
das
inc
jns
dec
jbe
push
dec
cs
loopne
mov
hlt
(bad)
cld
mov
push
adc
call
retf
mov
jg
push
mov
or
scas
shl
jo
enter
inc
xchg
ret
sbb
sub
pop
cmp
sbb
mov
mov
test
rep
or
pop
jmp
mov
fld
clc
jmp
jbe
push
add
pop
les
add
push
mov
sub
adc
push
aaa
adc
in
lods
push
js
out
call
inc
mov
sahf
fisub
gs
cmp
cmp
adc
push
pushw
adc
push
(bad)
mov
fs
or
jne
fdiv
cmp
xchg
add
je
fisttp
mov
(bad)
(bad)
xor
dec
popa
ins
and
pusha
sub
mov
jne
outs
scas
pop
add
and
(bad)
push
jb
push
dec
dec
scas
fs
jmp
imul
add
inc
gs
adc
pusha
push
xchg
sub
leave
add
or
adc
mov
mov
mov
movs
add
in
pop
xor
mov
jae
inc
jle
shr
adc
inc
jmp
data16
int
push
idiv
mov
lea
push
lahf
push
cmc
or
xchg
xchg
dec
jne
sub
mov
xchg
add
fnsave
pop
dec
rsqrtps
mov
aaa
into
push
inc
out
ja
jp
fimul
imul
nop
pusha
push
push
cmp
rol
sub
loopne
outs
pop
or
adc
push
and
add
rcr
xlat
sahf
xor
sub
rol
adc
daa
and
push
enter
dec
jbe
lock
ds
outs
ja
call
mov
sub
bnd
test
test
mov
cwde
stos
loopne
pop
xor
mov
aam
fild
cmp
cmp
ins
and
pop
inc
cmovp
jecxz
adc
popa
xchg
bound
jo
jg
jg
enter
cmp
sar
add
or
mov
push
inc
inc
je
adc
ja
shl
sub
ret
add
or
in
ror
ja
add
xlat
shl
fild
cmp
mov
movs
pop
mov
jbe
inc
imul
adc
lods
sub
ins
inc
dec
cmp
pusha
pop
inc
(bad)
push
adc
inc
pop
adc
into
dec
ins
jo
ja
pop
push
pusha
xor
sub
mov
xor
sbb
pop
clc
das
(bad)
push
ret
add
outs
mov
jne
inc
and
add
dec
push
xor
and
mov
mov
pop
add
pop
mov
cmp
outs
sub
dec
jmp
shl
cmp
jmp
add
fcomp
mov
mov
cwde
pop
push
js
xchg
push
test
pop
jle
push
fdivr
fld
mov
jo
arpl
(bad)
and
sub
out
sub
je
push
jae
jmp
ins
and
add
call
cmp
fnstcw
in
pusha
mov
and
and
ins
xlat
pusha
lds
ss
inc
adc
and
xchg
dec
pop
lods
fbld
push
imul
inc
outs
fsub
mov
cmp
add
shl
test
addr16
inc
outs
jae
ins
ror
push
jb
arpl
add
loopne
mov
je
(bad)
ins
mov
retf
jns
inc
aas
cld
or
sbb
inc
lahf
add
cmps
add
add
xchg
or
cdq
add
in
enter
push
sbb
retw
in
jg
mov
in
push
xor
mov
add
imul
repnz
jmp
add
mov
and
inc
dec
inc
shl
mov
daa
push
clc
es
jb
outs
aaa
xor
push
xor
mov
mov
test
ret
mov
scas
jge
inc
clc
repz
loop
fidivr
ret
out
add
and
test
ficom
xor
cdq
add
stos
lea
xchg
xchg
aam
cmps
push
xor
jno
cmps
dec
jl
push
test
loopne
push
ffreep
adc
loope
push
fiadd
and
(bad)
mov
mov
aad
dec
jne
jge
nop
xor
jg
je
test
sub
pop
cmps
push
aas
sub
pop
int3
pop
fiadd
fldcw
xchg
sub
dec
je
sbb
push
cmp
push
push
adc
fsub
dec
adc
sahf
mov
adc
sub
push
and
test
in
fisttp
ins
mov
sbb
xor
mov
push
pop
clc
retf
pop
js
sbb
dec
hlt
mov
movs
ffree
rcl
les
dec
lock
pusha
jmp
enter
loopne
test
nop
fisttp
mov
dec
jmp
int
dec
inc
push
hlt
inc
and
jmp
inc
loopne
es
shl
pop
es
ja
aaa
mov
enter
mov
jmp
or
pop
add
int
imul
xor
fdiv
enter
cmp
shl
in
jno
mov
data16
add
loopne
ins
and
dec
pop
or
inc
lods
inc
fmul
lock
scas
out
push
sbb
sub
inc
sbb
je
jmp
mov
mov
inc
fimul
mov
addr16
ret
nop
cli
in
fsubp
aas
mov
pop
mov
ins
mov
into
mov
sbb
push
fild
sub
repnz
mov
dec
jmp
inc
pushw
and
mov
loopne
push
pushf
mov
sbb
out
mov
push
in
xlat
lock
dec
jo
sbb
sbb
shl
mov
and
jmp
enter
dec
rcr
clc
jecxz
push
push
inc
and
test
movs
sub
push
or
dec
sub
inc
shr
loope
and
pop
cld
dec
mov
mov
test
jne
mov
sbb
sbb
jg
mov
xchg
and
cmp
jne
test
lock
cs
or
or
add
fbld
pop
mov
mov
loopne
pop
cld
stos
jbe
jb
push
jmp
jl
inc
mov
loopne
outs
xor
inc
dec
jne
jne
mov
add
cld
sbb
test
jle
fist
shl
mov
std
pop
pop
inc
push
outs
lods
mov
sahf
xor
(bad)
adc
or
outs
cmp
add
jne
push
jns
adc
les
jmp
sub
sbb
dec
add
ins
call
inc
dec
jmp
test
je
(bad)
loopne
(bad)
push
clc
test
sub
cmp
push
pop
dec
mov
call
enter
out
or
mov
push
jle
mov
mov
ficomp
or
pop
nop
pop
not
stc
mov
and
test
inc
fild
xchg
ja
adc
inc
hlt
jmp
cs
mov
and
cmps
fdiv
rol
cmp
je
pop
pop
jo
cmps
or
add
push
inc
sub
(bad)
cdq
push
sbb
cmp
xor
es
push
push
sbb
push
scas
and
in
adc
daa
adc
or
retf
mov
mov
sbb
cmp
call
inc
fcmove
xor
add
hlt
out
nop
shl
mov
in
lahf
add
pop
jne
clc
ror
or
scas
cmp
test
mov
adc
jb
push
fsubr
scas
ss
push
mov
mov
sahf
jo
das
sbb
retf
popa
(bad)
xor
aaa
cwde
mov
aam
lahf
cmp
ja
inc
cmp
cmps
mov
sbb
test
hlt
mov
mov
jecxz
mov
push
test
lock
rol
mov
and
jl
movs
data16
mov
mov
mov
inc
inc
(bad)
in
xor
sub
cmp
cmp
push
mov
dec
aas
jbe
add
ret
arpl
sub
mov
clc
jge
and
cmp
jne
push
dec
jne
add
or
xor
fstp
lea
les
add
cld
mov
fmul
dec
mov
sub
jle
dec
jne
push
xchg
push
pop
mov
mov
rol
push
inc
rcr
ret
cmp
adc
cmp
pushf
aad
lock
and
cmp
ss
sub
push
or
aad
hlt
add
mov
or
add
mov
mov
cs
mul
push
mov
or
aad
out
inc
out
xor
dec
ja
or
hlt
cmp
test
std
pop
and
add
or
or
add
movups
adc
or
bound
adc
adc
push
push
cmc
repz
shl
jl
mov
mov
iret
fucomi
add
cmp
(bad)
neg
push
sbb
push
push
idiv
jge
les
push
inc
fdivr
ins
mov
push
cmp
push
iret
sbb
mov
push
add
les
push
or
movs
cmc
ret
jbe
(bad)
push
mov
xor
cmp
cmc
sbb
shl
int3
dec
cmp
sub
call
mov
xor
pop
sbb
adc
scas
aaa
enter
push
adc
push
adc
jo
sbb
aad
fdiv
push
inc
fcmove
push
cmp
xor
mov
mov
int
mov
dec
add
fisub
pop
mov
xchg
fsub
jne
xchg
push
loopne
sar
add
push
stos
fmul
add
and
push
jb
mov
call
jmp
add
pop
cmc
inc
dec
test
sti
(bad)
inc
fist
mov
sahf
or
mov
loopne
rol
ror
es
dec
test
je
pop
or
pop
sahf
jge
mov
pop
fisub
jge
mov
xor
add
std
popf
ins
jnp
mov
add
xchg
jg
sti
jmp
pop
js
add
shr
pop
mov
adc
inc
lock
out
pop
xchg
outs
add
cmp
ss
(bad)
clc
adc
outs
pop
movs
test
push
test
and
add
lock
div
sti
data16
sbb
lock
mov
dec
test
jl
inc
xor
lea
clc
popf
cmp
push
or
inc
ret
mov
jno
mov
jb
xor
aad
xchg
in
jg
rol
push
pop
mov
inc
add
dec
jne
je
ja
out
ins
stc
push
push
jno
mov
in
jl
(bad)
adc
loope
lahf
add
fimul
adc
xor
sbb
xlat
inc
test
popa
lea
mov
rol
or
out
pop
imul
pop
sub
loope
pop
xlat
sbb
imul
cmp
imul
call
pop
mov
xchg
jmp
pop
sub
push
(bad)
movs
imul
sbb
cld
adc
(bad)
xchg
xchg
push
cli
test
cmp
inc
pop
loope
jb
mov
and
jle
adc
adc
and
rcl
jmp
push
and
add
mov
sub
scas
add
mov
or
fbstp
dec
mov
jmp
lods
ds
inc
je
or
inc
cmp
cmp
inc
cwde
retf
mov
mov
push
and
dec
dec
inc
inc
fisub
jbe
or
stc
inc
mov
data16
(bad)
pop
(bad)
push
or
mov
or
jno
xchg
sti
loopne
test
repz
jecxz
push
or
lock
pushf
mov
popf
lea
mov
push
pop
test
cwde
xor
xor
aam
hlt
je
cmp
pop
in
lock
fnstcw
sub
dec
rcr
ds
in
je
mov
inc
scas
sub
retf
retf
fmul
inc
(bad)
cwde
mov
add
aas
std
rcl
dec
sbb
mov
std
cli
adc
jmp
dec
pop
iret
repz
adc
pop
outs
jbe
idiv
sub
cdq
push
push
push
pop
mov
pop
pop
pop
mov
mov
test
fcom
or
push
or
inc
push
or
cmp
in
arpl
daa
mov
and
dec
fst
ds
fisttp
xchg
inc
fild
mov
add
test
sub
xor
inc
fcomip
adc
sbb
pusha
fmul
push
arpl
adc
es
jae
jnp
jle
mov
and
add
xchg
pop
pop
and
in
popf
test
jmp
and
cmp
jmp
ror
lock
jmp
arpl
push
test
mov
sbb
je
mov
cwde
add
jns
in
push
mov
add
add
test
jge
push
cmp
imul
xchg
sbb
or
mov
std
js
icebp
sub
jno
sbb
mov
lock
mov
cdq
and
je
xchg
(bad)
xor
push
iret
movs
xchg
ror
inc
mov
fstp
sub
sar
push
pushf
push
(bad)
ds
cwde
loop
data16
and
in
or
packuswb
jb
inc
ds
ror
test
push
lods
das
movs
in
mov
xchg
pop
enter
xchg
push
cmp
jb
inc
inc
and
jo
or
das
test
adc
push
xchg
test
ret
icebp
dec
fisubr
cmp
aad
jb
clc
(bad)
and
push
loopne
or
push
mov
outs
pop
mov
shl
mov
cmp
mov
ins
and
jae
pop
push
push
sbb
(bad)
adc
mov
dec
add
(bad)
std
sub
iret
push
push
neg
(bad)
jmp
xor
call
dec
dec
inc
or
xlat
in
es
mov
scas
lds
aaa
enter
or
out
lods
in
out
shr
pop
sbb
cmp
sub
js
cmp
adc
pop
cld
dec
nop
in
bnd
cmps
std
dec
(bad)
loope
inc
add
add
fs
jge
out
call
jb
fisub
push
mov
shld
sahf
out
sahf
and
mov
cmp
sbb
psadbw
mov
imul
loopne
mov
mov
mov
jmp
inc
sub
cmp
lods
mov
cli
add
xor
fwait
pop
fucom
pop
mov
(bad)
fnsave
mov
push
stc
pushf
sbb
loopne
into
sbb
adc
xor
(bad)
call
lock
and
in
stc
pop
or
imul
imul
sub
mov
sbb
in
sub
mov
jmp
retf
add
sbb
jle
stc
and
not
cmp
pop
das
out
adc
inc
adc
sub
or
je
add
jmp
jg
mov
pop
adc
xor
adc
sub
fdiv
iret
xor
push
add
(bad)
lds
mov
adc
xor
add
sbb
mov
cmp
not
mov
sub
(bad)
std
jg
dec
jmp
mov
mov
cwde
pushf
xor
les
inc
xor
cld
shl
lock
or
mov
test
mov
ins
sub
add
jecxz
int3
push
call
movs
jecxz
pop
pop
inc
jb
dec
sbb
push
cmp
lods
dec
push
adc
nop
retf
iret
retf
mov
or
psubsw
push
or
shl
cs
pusha
xchg
sub
test
jecxz
jbe
pop
outs
pusha
das
xchg
scas
push
push
call
mov
or
test
je
or
jmp
push
lea
jg
cs
call
adc
mov
mov
inc
dec
fisubr
add
inc
xor
xor
and
stos
or
sbb
cmp
jnp
out
push
inc
add
stc
cmp
repz
pop
jnp
cmps
int3
fsubr
mov
sahf
cmps
aaa
inc
push
fs
mov
clc
fdivr
es
adc
(bad)
fimul
inc
or
test
fldcw
clc
pop
cmp
ficomp
rol
cli
add
inc
fld
mov
xor
cmp
mov
jo
dec
in
adc
sbb
test
(bad)
loopne
mov
xor
cmp
sub
mov
repz
pop
je
and
sti
dec
je
or
jmp
dec
mov
or
push
hlt
adc
mov
shl
jl
enter
retf
out
mov
stos
push
mov
sbb
sub
pop
push
repz
cmp
jnp
pop
outs
push
jg
nop
mov
repz
call
add
mov
repnz
adc
fld
sbb
push
add
push
test
add
mov
pusha
test
jmp
jae
pop
inc
jae
add
(bad)
sbb
jmp
push
ins
int3
xor
push
jmp
jo
je
xor
jmp
adc
push
xchg
jp
(bad)
ds
inc
fistp
jg
jno
lods
add
cmp
rcr
rol
cdq
cmc
aaa
popa
sub
jb
xor
or
retf
add
je
sub
fucomi
test
adc
mov
pop
or
pusha
fsubr
pop
adc
out
pop
bound
adc
popa
mov
rol
cmp
in
mov
sbb
and
sbb
or
or
jae
ins
ret
imul
sub
addr16
jbe
rol
push
adc
sbb
addr16
or
push
add
pop
push
mov
push
dec
xor
scas
add
xchg
cmp
outs
jecxz
ja
loopne
inc
cmc
or
add
int
push
add
adc
sbb
jns
out
cmp
push
in
jle
sti
test
add
xchg
adc
loopne
inc
lock
xlat
push
xchg
cwde
sbb
mov
adc
and
add
out
adc
and
loop
jmp
in
or
iret
repz
push
and
xor
movs
in
not
leave
mov
and
shr
mov
sub
push
adc
mov
cmps
rcr
fdivr
neg
push
push
sub
push
or
adc
sbb
stos
std
ins
iret
sahf
push
pop
jb
imul
dec
adc
pushf
xchg
in
pop
xchg
les
or
mov
sbb
xchg
pop
fisttp
or
mov
adc
pop
je
and
sub
push
adc
(bad)
jno
ja
pop
test
aaa
cmp
fcomp
sbb
pop
rol
aaa
sbb
jp
adc
sub
sub
inc
fmul
xor
lahf
mov
outs
adc
xor
in
or
imul
sbb
mov
and
idiv
xchg
mov
fdivr
jne
int3
push
(bad)
cs
fadd
enter
jnp
test
pop
adc
inc
adc
pop
or
movs
mov
fcom
dec
addr16
std
push
out
call
out
rol
xchg
pop
les
fadd
dec
xor
or
xor
shl
jb
lea
outs
popa
jo
and
scas
add
jmp
scas
xor
iret
mov
xor
jo
mov
loop
retf
xor
push
mov
rcr
aam
mov
xchg
adc
mov
push
ins
xchg
int
mov
or
mov
jno
arpl
sahf
sbb
inc
jecxz
adc
out
jmp
adc
es
stos
iret
repz
outs
and
cs
adc
or
pop
pop
xchg
cmps
push
mov
iret
loop
adc
push
jne
repnz
cmps
pop
ret
pusha
mov
cmps
push
pop
cs
test
(bad)
bound
add
addr16
sbb
xlat
adc
test
aaa
arpl
(bad)
mul
pop
mov
enter
retf
inc
push
or
mov
mov
adc
daa
jnp
or
arpl
fstp
add
cmp
nop
dec
mov
call
sbb
push
and
cs
lahf
mov
cmps
rcl
cli
push
movlps
out
jno
inc
pushf
push
daa
cmp
or
mov
out
bound
test
cmp
daa
cdq
xor
iret
das
and
jno
push
sbb
imul
and
sub
jbe
xchg
dec
nop
sbb
mov
jb
loop
add
adc
call
mov
and
jmp
(bad)
mov
push
mov
add
es
daa
xchg
icebp
pop
pop
xor
jne
sbb
ret
sbb
sub
ss
sbb
fwait
(bad)
xor
(bad)
ds
xor
push
inc
jbe
add
nop
add
jle
rcl
call
inc
add
push
pop
push
push
or
retf
push
or
sub
gs
(bad)
and
sub
inc
maxps
inc
mov
pusha
out
pop
cmp
cwde
jne
sbb
in
dec
sbb
adc
daa
add
cwde
in
test
push
cmc
push
in
or
cmp
xor
gs
push
adc
cmp
sbb
inc
sbb
call
hlt
aaa
hlt
mov
je
sti
sub
jne
xor
or
mov
cwde
lock
cwde
lock
mov
xchg
push
push
mov
ins
sub
or
push
rcr
and
push
loope
pop
out
outs
js
mov
scas
outs
out
or
fmul
push
and
pusha
push
imul
call
adc
leave
or
sub
pop
loope
mov
jb
sub
pop
out
cld
inc
sbb
iret
repz
fwait
lods
shr
or
popa
sbb
loop
push
neg
jbe
pop
pop
repnz
or
in
repz
(bad)
jb
or
jp
or
cwde
jne
imul
or
xchg
sbb
dec
neg
sbb
out
fcomp
fstsw
sahf
and
mov
jg
fild
fcompp
dec
jnp
fisttp
sbb
add
test
ficom
or
jne
and
rol
pop
popa
pop
sbb
sbb
jns
or
xchg
arpl
in
dec
sbb
and
out
jo
sbb
sbb
sub
push
push
dec
popa
out
sahf
pop
jb
pushf
inc
out
or
push
pop
mov
sbb
repz
out
add
mov
jbe
push
sbb
xchg
adc
ret
lea
mov
xchg
jbe
add
and
jno
loopne
dec
pop
sbb
aad
mov
and
mov
inc
daa
xor
jmp
sub
jle
cmp
or
test
xor
mov
pop
imul
fcomp
shl
pop
sub
adc
fcom
pop
leave
xchg
in
or
add
mov
shl
ds
ror
push
jge
push
add
xor
mov
in
add
fld
fstp
fwait
jmp
jp
mov
iret
inc
push
sbb
and
pusha
ror
push
sbb
cmp
ror
ret
or
outs
cdq
nop
or
mov
movs
inc
jbe
fst
pop
sbb
xchg
cmp
jb
or
clc
fwait
jno
inc
shl
pusha
clc
in
xor
cmps
pop
add
not
jb
inc
sbb
popf
ds
repz
repnz
mov
push
sub
cli
cmp
pop
out
sahf
outs
pop
dec
bound
sub
cmps
dec
movs
add
add
mov
inc
fbld
mov
push
inc
int3
push
call
mov
loopne
out
mov
push
xlat
or
movsx
in
ds
push
sub
mov
jmp
ds
cli
movs
cli
fild
sbb
pusha
inc
dec
mov
or
inc
xor
mov
add
add
bound
imul
cmp
fsub
or
pop
or
or
and
movs
mov
pusha
pop
push
fbld
pop
mov
sahf
out
aam
test
push
aas
dec
mov
je
rcr
pop
inc
pop
cmp
repz
xchg
cmp
inc
ror
add
daa
ds
dec
std
push
lods
add
inc
call
sub
mov
adc
jnp
add
jnp
mov
inc
movs
cmc
loop
fadd
jmp
loopne
add
or
jp
mov
mov
sub
(bad)
adc
loopne
test
pop
fdivp
rcl
fwait
cwde
fld
or
mov
pminsw
sahf
out
adc
push
mov
fiadd
mov
push
into
repz
xor
xchg
jae
scas
out
lea
adc
sbb
sbb
fild
fs
add
pop
add
mov
mov
(bad)
add
add
lds
mov
mov
sub
test
loope
retf
in
add
jb
sub
xor
mov
(bad)
push
cmp
lock
mov
sub
jge
inc
xor
xor
inc
or
adc
aaa
mov
and
push
or
(bad)
xchg
aaa
loopne
jb
rol
cmp
add
pop
sbb
ins
pusha
in
test
cmp
or
test
shl
xchg
adc
mov
in
and
push
xor
pusha
or
push
push
pop
sbb
cmp
and
adc
aaa
je
sbb
rol
adc
out
int3
mov
push
jecxz
push
jo
inc
pop
mov
push
loopne
cmp
jmp
or
xchg
dec
jb
test
and
inc
mov
dec
or
test
cld
bound
mov
dec
out
in
in
ins
and
idiv
iret
and
push
xor
daa
fdivr
inc
push
or
pop
cmp
jnp
pop
push
es
jg
scas
scas
xlat
test
into
pop
sbb
xor
jo
mov
dec
inc
jno
mov
pop
mov
fist
pop
popa
enter
inc
adc
inc
pop
cs
sub
pop
outs
je
sub
sub
or
xor
sti
ret
push
fwait
push
pop
pop
push
cmp
adc
adc
adc
dec
repnz
out
jne
adc
push
rcl
pop
adc
subps
pop
lods
mov
mov
pop
dec
pop
call
into
xor
add
adc
inc
cmp
sbb
jns
or
dec
es
jge
pushf
out
xchg
mov
mov
fstp
pop
push
inc
rcl
mov
mov
mov
sub
adc
adc
mov
sbb
mov
pop
jmp
jne
sbb
mov
jmp
ret
test
lock
dec
sbb
cmp
push
cmps
in
in
mov
add
in
and
inc
add
jmp
pusha
cmp
int3
cmp
inc
pop
js
cmp
push
inc
and
pop
outs
xor
or
xchg
sub
mov
aam
push
or
aas
sbb
icebp
aas
mov
pop
ins
mov
aad
aas
xchg
cmp
sbb
leave
pop
and
adc
fistp
mov
aaa
sbb
aas
arpl
push
jge
mov
in
repnz
sub
iret
leave
pop
into
push
cmp
ins
fdivr
test
push
pop
cmp
xchg
es
int
or
pop
add
neg
int3
aas
add
aas
xchg
add
or
int3
and
adc
sar
sbb
push
and
sbb
add
rcl
adc
or
sbb
sbb
mov
sbb
mov
aam
adc
mov
das
and
ins
das
mov
adc
mov
pop
jp
enter
mov
rol
inc
enter
dec
jae
xor
pop
inc
cs
push
in
cmp
mov
fidivr
fadd
retf
es
push
inc
push
sar
add
inc
sub
ins
(bad)
jmp
mov
call
mov
sub
jo
cmp
ins
inc
pop
ins
cmp
cmp
inc
dec
sbb
cmp
daa
add
daa
jns
and
pop
daa
jae
cmp
in
and
sbb
xor
es
cmp
or
inc
inc
dec
fidivr
push
add
mov
cli
add
mov
fnstenv
cvttps2pi
pop
dec
movq
dec
or
lds
(bad)
push
mov
leave
push
add
mov
mov
cmp
and
and
popf
push
mov
and
add
push
add
jb
je
dec
je
jmp
loope
fmul
ror
loope
or
sbb
cli
sub
mov
dec
rcr
inc
lock
or
rol
jp
inc
outs
xor
xor
(bad)
jecxz
and
adc
and
push
cli
shr
push
iret
mov
adc
in
mov
lahf
(bad)
xchg
nop
into
add
mov
sub
lock
fwait
inc
cdq
sub
or
add
and
cwde
or
mov
jp
push
setnp
in
fs
cmp
cmp
inc
or
and
gs
sub
sub
mov
lock
(bad)
mov
mov
sbb
sub
(bad)
in
int
and
xchg
adc
stos
or
les
hlt
sti
add
add
popa
inc
loop
retf
(bad)
in
mov
clc
push
sbb
push
mov
adc
mov
pop
pop
mov
jne
in
cmp
dec
adc
rcr
(bad)
cmp
sub
jns
out
mov
ss
repz
je
xor
push
sahf
idiv
fiadd
(bad)
push
push
cmp
mov
cmp
dec
adc
sub
pop
cwde
xlat
inc
mov
shl
dec
in
mov
lods
and
push
rol
lods
dec
aas
test
xor
pop
and
lock
fstp
fwait
rcl
test
add
dec
mov
cwde
fnsave
mov
shl
movs
mov
fcom
add
fs
clc
test
cmc
inc
push
jae
and
pop
mov
add
mov
inc
cpuid
shl
pushf
push
xchg
in
xchg
jl
push
dec
gs
outs
push
push
cwde
cmps
test
push
aas
xchg
push
daa
xchg
ds
fst
nop
mov
aas
xor
dec
sti
jb
sub
fimul
inc
fld
inc
xor
add
or
inc
sar
das
rol
pop
inc
sbb
lods
and
mov
test
imul
xchg
inc
fs
pushf
inc
or
out
int
mov
js
call
xchg
in
test
inc
and
icebp
movs
test
test
test
cmp
in
or
or
popf
out
push
jbe
retf
rcl
in
push
jle
jg
xchg
xor
adc
xchg
or
leave
jmp
inc
pusha
test
push
sub
div
adc
push
js
mov
xchg
push
jo
hlt
test
ret
dec
inc
fld
add
les
mov
and
imul
push
mov
imul
push
cmp
sub
adc
push
ret
push
push
movs
xchg
adc
sub
cmc
fs
mov
dec
or
dec
pusha
sbb
inc
and
nop
xchg
push
dec
pop
mov
neg
fcmovbe
dec
pop
out
dec
and
daa
lds
push
or
xlat
in
mov
xor
push
adc
scas
dec
out
adc
dec
imul
push
xchg
shr
dec
aas
jmp
mov
mov
inc
in
cmp
scas
mov
movaps
inc
and
push
ret
fisttp
push
add
dec
ins
cmp
test
rep
pop
gs
iret
push
add
test
gs
push
xor
test
shr
cmp
sbb
pop
cmc
xchg
cmps
out
add
or
test
shl
stos
mov
cmc
xchg
adc
sub
or
pop
sti
and
cmp
rol
mov
and
and
(bad)
cmp
and
lea
cmp
mov
sub
iret
cmp
xor
push
cmp
arpl
movs
daa
fisttp
cmp
and
nop
mov
add
and
cmp
mov
lock
mov
jno
mov
test
mov
ins
jg
push
ret
sbb
mov
or
ret
mov
cmps
in
bound
mov
pop
scas
mov
mov
loopne
cmp
(bad)
jl
xchg
mov
ds
push
mov
mov
pop
jecxz
inc
sbb
xor
dec
out
push
push
outs
mov
xor
xor
popa
xor
pusha
mov
push
fidiv
lahf
pop
movs
lods
sbb
movs
inc
mov
mov
dec
dec
and
adc
jno
pushf
push
inc
movs
sbb
inc
mov
dec
mov
sbb
jle
ror
je
adc
mov
push
rol
in
and
and
pop
sbb
mov
add
pop
inc
push
loopne
punpckldq
adc
add
and
and
lahf
inc
cwde
mov
movs
sub
pop
mov
das
dec
test
movs
call
in
stos
mov
xor
add
inc
pop
mov
imul
sub
jle
les
in
idiv
in
pop
sar
xchg
cdq
or
rol
in
pop
add
cmp
or
inc
adc
adc
in
mov
and
bound
cmp
(bad)
push
and
dec
pop
iret
adc
mov
pop
pop
push
fs
mov
mov
mov
mov
cmovns
and
mov
test
and
popf
in
or
xchg
and
cmp
fnstenv
adc
fld
jg
xchg
loope
sub
sbb
adc
leave
dec
test
or
mov
cmp
xchg
fsubr
pushw
xchg
rol
jmp
les
inc
or
jns
outs
ret
and
adc
daa
cmp
pop
ret
xor
push
cmp
pop
dec
sbb
adc
aas
ins
and
bound
pop
jae
sbb
pushf
xchg
jae
arpl
mov
sbb
ret
test
pop
test
fist
sbb
or
add
movs
fbld
dec
sti
add
and
xchg
jmp
inc
push
dec
jbe
stos
fstp
inc
add
push
cmp
fstp
repz
and
and
mov
cmp
cmp
xchg
cmp
and
js
and
and
and
fcom
pop
and
imul
inc
call
mov
xor
mov
jmp
add
fcomp
dec
fsubr
or
add
bound
nop
inc
cmp
cmp
and
test
pop
inc
mov
daa
pushf
movs
es
sub
mov
adc
fbld
nop
cs
cmp
dec
adc
scas
or
lock
mov
sbb
lahf
xor
ins
sub
jo
inc
test
inc
fldenv
fild
pop
jmp
popf
int
dec
loope
fist
dec
xor
pop
inc
adc
jns
xchg
sub
test
or
jp
sbb
jb
add
and
mov
ins
inc
test
fld
inc
ins
add
or
push
and
popa
dec
jo
xlat
dec
fadd
mov
and
inc
cwde
lock
movs
lds
test
inc
xor
or
(bad)
dec
add
popf
nop
or
add
xor
mov
loope
popa
or
fisttp
dec
sbb
dec
imul
push
add
add
mov
push
xor
add
rcl
jmp
sbb
xor
jo
sbb
call
fdivr
cwde
mov
dec
in
sub
dec
adc
and
and
mov
add
add
cdq
push
mov
adc
xchg
pop
(bad)
fcmovnu
ret
push
jmp
daa
loope
loopne
xlat
call
xor
cmp
sub
or
ret
adc
ja
dec
and
aaa
jge
mov
or
fadd
jb
scas
out
sbb
je
jmp
sub
or
or
inc
clc
xchg
add
ss
xor
sub
add
cmp
pop
or
addr16
push
aas
sbb
mov
dec
add
sub
xor
lds
je
ja
fbld
cld
mov
mov
and
imul
mov
retf
ret
pop
loop
pusha
ss
xchg
add
or
xor
mov
add
pusha
lock
outs
mov
push
mov
jbe
or
leave
dec
icebp
outs
sub
adc
dec
jo
inc
pusha
mov
add
clc
jg
inc
push
push
mov
fdivr
test
je
mov
jmp
adc
cmp
xor
std
push
inc
loopne
mov
jmp
mov
mov
pop
call
adc
jo
pop
fsub
cmp
aas
fbld
xchg
mov
push
sbb
mov
adc
or
dec
and
or
add
or
ret
and
inc
fadd
pop
xlat
adc
add
push
dec
bound
dec
xor
dec
or
push
in
test
mov
adc
or
daa
aaa
movs
loopne
or
cmp
cmc
sbb
repnz
dec
sub
adc
fstp
fwait
push
scas
pop
inc
add
add
cmc
mov
or
and
retw
aas
mov
and
int3
fistp
push
or
xchg
pop
mov
jg
add
lea
mov
imul
popa
imul
das
or
jmp
mov
cmp
lock
mov
cmp
cmp
dec
clc
push
js
push
cmp
xchg
jl
rol
outs
add
hlt
lock
xchg
int3
cdq
in
inc
gs
inc
repnz
ret
add
inc
scas
xor
jp
xchg
mov
mov
push
jb
pop
add
xchg
push
xchg
dec
sub
jo
call
pop
jecxz
mov
js
push
or
dec
and
or
int3
and
dec
pop
push
add
loop
push
inc
pop
mov
pop
add
ins
test
xchg
cmp
jne
pop
push
mov
mov
mov
add
jmp
lahf
test
test
mov
add
call
xor
pop
lods
(bad)
cmp
and
sub
movs
mov
mov
je
xor
push
test
jnp
add
mov
fucomip
cmp
add
and
push
loopne
gs
xor
jl
jno
cmp
jge
jne
enter
ret
jmp
outs
stc
inc
dec
jmp
inc
push
or
dec
imul
or
sbb
cld
and
push
cld
es
push
jmp
mov
and
cmp
jae
xor
and
leave
and
lahf
femms
mov
mov
jno
pop
cmp
fs
sbb
xor
outs
sub
arpl
cmp
push
add
stos
sub
cmp
(bad)
pop
jne
push
call
fidiv
lods
adc
cli
push
outs
and
inc
sbb
sub
and
jmp
mov
jno
and
lock
test
mov
or
jmp
jbe
sub
cmp
pop
sbb
xlat
inc
call
adc
adc
pop
adc
mov
mov
lock
stos
add
inc
stc
rol
fcom
hlt
mov
pop
mov
ret
add
jecxz
sbb
push
mov
xchg
or
cdq
inc
in
inc
push
mov
push
fs
ds
loop
ins
sti
push
push
cmp
pop
dec
fmul
into
or
xor
scas
dec
(bad)
js
mov
into
lock
out
loopne
pop
(bad)
jecxz
popa
and
sub
fmul
pop
xor
loopne
push
or
jmp
out
test
push
push
sti
dec
mov
or
mov
leave
arpl
push
cmps
loopne
cwde
cmc
pop
push
fadd
dec
push
and
jnp
sbb
cs
ret
cmp
mov
lock
cmp
push
sub
sbb
pushf
xor
mov
dec
cmp
ds
mov
cmp
pop
das
retf
sub
or
cmp
call
aaa
(bad)
push
sub
jo
fcom
push
jb
add
or
adc
inc
lds
int3
xchg
(bad)
mov
je
inc
mov
cmp
mov
mov
js
xchg
cmp
push
mov
dec
cmp
jbe
jmp
cmc
sbb
sti
and
or
push
xor
test
or
ficomp
stc
loope
cmp
dec
or
xor
xor
cmp
shl
sub
dec
addps
xor
ins
sub
and
in
ss
push
sub
inc
adc
or
or
adc
and
out
add
je
dec
cmp
(bad)
sub
xor
fadd
jmp
cmp
pop
dec
adc
xchg
pusha
push
je
fnstenv
ficom
xchg
fcom
mov
daa
pop
sbb
adc
je
jmp
loopne
sbb
out
pop
and
and
daa
hlt
sbb
mov
mov
and
adc
mov
dec
push
add
enter
int
push
xchg
cmps
mov
repz
loop
repnz
lahf
mov
add
seto
inc
and
pusha
imul
mov
adc
jmp
out
sbb
mov
lods
cmp
push
jmp
sbb
gs
and
ins
sbb
push
or
sbb
repz
scas
inc
hlt
jo
je
adc
jmp
mov
xor
cld
loope
add
sar
aaa
loopne
pop
(bad)
fcmovbe
xor
xchg
sbb
and
adc
adc
loopne
xchg
push
jg
dec
repz
arpl
repz
xchg
lods
rcl
inc
xlat
call
cwde
popf
push
cli
dec
js
je
dec
je
push
div
cmp
lods
fiadd
into
adc
jmp
daa
sub
pop
jo
sbb
jno
or
or
cmps
fdiv
aas
std
adc
std
movs
dec
jmp
push
mov
add
loop
xor
mov
pop
add
fdiv
pop
ret
push
and
lods
or
out
test
lods
aaa
test
enter
enter
in
rcr
das
adc
push
cmp
lahf
retf
movs
stc
daa
or
sbb
or
movs
xor
test
je
bound
xchg
mov
sub
add
je
rol
sar
fild
push
and
pop
or
pop
or
mov
fld
mov
add
fucomip
inc
js
mov
cmp
repz
je
cmp
repz
cmp
push
out
dec
loope
jmp
inc
and
out
push
fadd
out
cmp
fsubr
push
lods
aaa
test
sub
out
adc
stc
sub
dec
je
sub
dec
(bad)
cmp
jne
or
add
pop
pop
call
test
cld
or
xor
jae
lahf
add
push
or
jbe
jne
dec
int3
mov
sbb
fmul
push
jne
mov
aas
add
push
xor
add
popa
pop
xor
and
clc
or
add
jmp
jp
vlddqu
xor
into
lock
cld
mov
mov
cmp
jle
jmp
fs
popa
and
mov
aaa
dec
fadd
loope
mov
lea
or
adc
sub
aas
clc
mov
jb
mov
ins
fistp
nop
outs
sti
cmp
rcr
fwait
aas
leave
int
inc
es
jge
add
adc
aaa
push
cmp
jne
popa
leave
fdiv
pop
dec
push
lods
icebp
fmul
adc
push
ds
adc
div
lock
jmp
jno
loope
sub
fstp
fwait
mov
mov
mov
mov
sub
icebp
pusha
add
cmp
dec
sbb
pop
gs
sbb
ins
jo
add
(bad)
rcl
jl
sar
push
push
mov
mov
push
push
jle
pop
xor
movzx
jnp
push
cmps
and
pop
ror
adc
xchg
jmp
sbb
pusha
fisubr
push
cdq
out
cmp
mov
into
sar
jmp
arpl
add
or
(bad)
push
(bad)
mov
std
jb
scas
test
in
dec
sub
aam
std
add
cmps
or
sub
adc
dec
add
sub
inc
or
sub
dec
ins
test
jne
daa
and
fwait
xor
or
push
in
mov
or
xor
push
sub
xchg
adc
cdq
ss
jmp
int3
aaa
cmp
int
add
cmp
aas
(bad)
je
dec
rcl
test
or
sti
or
cmp
jno
scas
loopne
sbb
push
jmp
aad
mov
pop
cwde
push
xor
arpl
dec
cmp
xor
jmp
sahf
cmp
pop
pop
hlt
and
jmp
test
or
dec
(bad)
popa
xor
mov
je
jmp
pop
cmp
push
lds
cmp
sub
mov
loop
stos
xor
not
add
sub
pop
out
fs
cs
or
leave
mov
or
ret
sub
outs
push
or
ja
js
pop
pop
mov
int
add
fldcw
mov
pusha
sbb
mul
push
cmp
cwde
sub
inc
scas
cmp
push
fsubr
sub
cli
or
into
outs
ret
mov
call
mov
mov
rol
dec
je
test
dec
adc
adc
mov
lods
push
sub
or
retf
sub
jl
neg
test
inc
sbb
dec
ror
add
pop
sbb
retf
jg
cmp
imul
adc
ins
xchg
jmp
mov
pop
jge
and
test
lock
inc
mov
pmulhuw
adc
sub
xor
dec
pop
das
inc
in
dec
sbb
fucomi
call
jecxz
mov
loope
pop
fistp
sar
loop
rol
cld
or
adc
enter
pushf
out
inc
js
cmp
jne
cmp
jae
xor
dec
in
sar
sbb
jbe
outs
in
data16
pop
ret
sahf
ja
push
dec
daa
jbe
xchg
idiv
in
fnstsw
fcomp
fstsw
sahf
pop
adc
push
pop
jbe
mov
or
fnstcw
pop
adc
inc
mov
and
jg
stc
add
arpl
xadd
xor
xchg
xor
pop
and
inc
add
std
jp
and
add
inc
test
inc
xchg
neg
(bad)
fucomi
or
pop
daa
repz
out
mov
test
pop
mov
push
push
outs
pop
push
pop
add
cmp
das
sahf
cli
pop
or
jmp
aaa
lock
and
hlt
mov
push
ret
out
xor
and
push
adc
jae
mov
es
add
adc
adc
jbe
movs
aaa
or
addr16
mov
or
dec
adc
add
mov
sbb
inc
ja
fstp
sbb
jmp
jmp
adc
xor
xchg
adc
and
adc
js
cmp
sub
push
inc
aas
add
fdivr
pop
xor
loop
add
int3
mov
bound
sbb
test
jne
add
into
sbb
jo
pushf
xor
out
xor
pop
dec
cmp
mov
and
les
xlat
js
test
cwde
fidiv
ror
call
out
inc
lods
fwait
inc
or
hlt
je
fild
nop
in
push
jb
ficomp
jne
gs
pop
fcomip
or
mov
xchg
xor
mov
rol
les
push
in
jmp
or
sbb
or
adc
mov
dec
xlat
or
cmps
and
sub
pop
sbb
adc
inc
imul
mov
adc
mov
xchg
stos
enter
adc
aad
imul
ins
inc
cli
jns
pop
jb
mov
imul
loopne
pop
sub
jae
add
mov
dec
xor
clc
pusha
(bad)
test
sub
pop
ss
jae
imul
sub
outs
iret
sbb
and
mov
pusha
mov
scas
ffree
mov
test
sub
adc
or
icebp
arpl
adc
imul
mov
jmp
or
pusha
sub
xchg
clc
pop
pop
jmp
jne
das
sub
cmp
mov
or
pop
cmp
cmp
jb
push
xor
or
mov
add
add
fcmovb
sbb
inc
xor
add
(bad)
cmp
mov
add
je
jns
add
dec
add
ins
add
das
push
push
pop
popa
fistp
fdivr
xor
outs
outs
aas
pop
push
dec
sub
jnp
fiadd
addr16
jb
push
ja
xor
sbb
bound
int3
dec
loope
out
xor
int
jp
push
push
jbe
add
and
das
cmps
dec
fwait
xchg
cwde
sbb
data16
push
add
cmps
push
popa
das
jecxz
xchg
fnstenv
add
or
aaa
push
es
scas
xor
adc
adc
push
jbe
outs
sub
call
pop
and
and
xor
inc
daa
push
xor
movs
pop
pop
xor
fisttp
sbb
pop
add
pop
inc
jge
push
push
imul
sub
dec
cs
aas
(bad)
sahf
cmp
retf
add
jno
or
cmps
xor
jb
adc
xchg
mov
call
ja
mov
sti
ret
outs
jb
inc
call
xlat
mov
cld
fimul
pop
mov
cmp
lock
(bad)
mov
jl
and
and
inc
cmp
les
fcom
or
or
aaa
xchg
push
test
cmp
dec
push
loop
mov
fwait
jbe
cmp
scas
lea
std
add
cmp
xor
adc
aaa
ror
test
pushf
shl
inc
into
add
mov
dec
ret
ror
shl
xor
add
or
pop
mov
and
xchg
scas
inc
pop
dec
aas
inc
es
xor
pop
scas
es
cs
scas
aaa
aaa
push
mov
mov
inc
or
add
popa
aam
lea
cmp
jmp
js
xchg
shl
jp
xor
out
sbb
add
add
ret
xor
mov
es
es
scas
popa
fsubrp
or
or
push
and
push
jno
neg
lea
or
xor
ds
adc
int3
adc
push
dec
dec
pop
imul
sar
pushf
adc
pop
je
sbb
xor
pop
nop
call
push
add
bound
push
or
push
clc
or
or
je
push
pusha
push
rcr
ret
sbb
ret
in
pop
into
ret
lea
lahf
sbb
cmp
dec
xor
icebp
and
cdq
sbb
out
lods
add
pushf
xor
dec
push
inc
and
and
sbb
call
cwde
mov
into
popf
int3
sbb
enter
pop
test
mov
dec
movs
xchg
retf
adc
sub
mov
mov
pop
ja
scas
sbb
cwde
adc
and
xchg
fs
mov
mov
and
sbb
adc
and
(bad)
nop
jg
cmp
and
inc
es
cld
push
or
sbb
jmp
mov
xor
add
sub
mov
jmp
pop
xor
loopne
mov
jo
jo
dec
fdivr
add
inc
or
or
add
jge
out
mov
xor
add
mov
cdq
add
mov
pop
mov
sub
ror
and
xchg
ret
data16
out
adc
out
out
dec
popa
pop
fmul
not
or
or
add
jg
jbe
jo
(bad)
test
sti
test
data16
sub
or
pop
(bad)
mov
fdiv
(bad)
jns
out
jg
fiadd
pop
clc
dec
test
jl
inc
lea
pop
mov
mov
mov
jo
sub
inc
mov
sbb
add
dec
jne
lea
adc
shl
js
mov
test
cmp
add
push
xor
add
mov
inc
shl
pusha
ret
xchg
xor
rcl
movsx
sub
fistp
pop
mov
dec
lea
dec
into
push
cmp
clc
or
adc
rcl
sbb
in
shl
cmp
enter
inc
aas
icebp
lods
and
dec
(bad)
hlt
pusha
outs
fcmovnbe
cmp
cmp
mov
xlat
sub
addr16
pop
test
loopne
jo
add
jbe
vmovddup
stos
and
aad
jp
mov
xchg
jmp
inc
dec
and
xlat
jg
and
cmp
jne
dec
call
out
mov
test
jbe
sub
jecxz
popf
push
out
ror
xchg
in
lea
lea
inc
or
xor
imul
sub
inc
adc
adc
push
in
inc
push
xor
dec
js
nop
cmp
test
or
rol
lods
ret
inc
adc
or
hlt
(bad)
sbb
mov
adc
pop
push
pop
adc
sub
cwde
xchg
mov
or
dec
fidiv
idiv
pop
inc
popf
xchg
push
mov
inc
jle
push
dec
jns
push
sahf
loopne
aaa
pushf
or
test
xchg
sub
jne
fist
mov
out
out
loopne
xlat
sbb
daa
inc
out
dec
sbb
sub
mov
punpckhdq
sub
or
cmp
mov
jg
jg
fld
push
(bad)
fcomp
call
arpl
imul
or
jb
lock
sar
rol
cmp
mov
push
mov
daa
and
add
or
pusha
fist
add
jbe
push
xor
(bad)
repz
out
(bad)
int3
mov
and
push
mov
pop
or
xchg
int
je
add
call
adc
je
outs
jne
fs
jb
popa
jns
test
aaa
add
push
jns
je
ins
cs
pop
in
outs
push
jae
add
das
(bad)
mov
adc
leave
je
jmp
add
leave
or
rcl
(bad)
out
or
ds
dec
cmp
sub
mov
push
mov
sub
dec
jmp
mov
cli
(bad)
fdivr
jle
mov
out
push
pop
push
xor
daa
(bad)
jmp
mov
mov
mov
push
jbe
outs
fdivr
mov
das
loopne
xor
mov
and
push
pop
lock
inc
cmp
rol
dec
clc
outs
adc
push
mov
mov
es
mov
push
movs
xlat
add
cmp
jl
iret
push
pop
jl
mov
cmp
jne
add
add
push
push
icebp
ror
jp
jo
outs
ja
rcl
dec
je
add
or
je
rcr
imul
or
adc
test
or
jno
add
enter
addr16
jne
push
xchg
sbb
mov
add
jo
(bad)
fwait
pop
jg
icebp
pop
jnp
lods
mov
inc
sbb
test
cmc
adc
xchg
aam
xchg
out
jne
mov
add
aam
xor
call
inc
ficomp
aam
cmps
lds
int3
add
iret
shr
add
sbb
mov
push
lock
jp
ss
or
stos
popa
or
push
inc
pop
add
call
fdivr
xchg
mov
cs
mov
jne
or
inc
pusha
lock
xor
mov
jmp
mov
xchg
(bad)
dec
mov
and
push
shl
cld
cdq
push
int3
add
rol
inc
sub
or
(bad)
jle
shr
fidivr
fs
cmp
jg
sbb
pop
sbb
adc
jge
ficomp
pop
xchg
push
mov
neg
ss
inc
adc
lods
fst
jle
sub
and
imul
dec
or
dec
imul
ss
lgs
or
jmp
adc
jg
adc
mov
(bad)
loopne
mov
push
inc
test
inc
mov
jb
mov
loopne
ds
fisttp
mov
adc
mov
push
ficomp
les
std
push
neg
sbb
push
ins
ins
add
into
jbe
in
mov
sub
mov
xor
jmp
sbb
movs
ss
pusha
mov
sbb
in
sbb
add
je
mov
push
add
sub
cmp
fs
cmp
jmp
xlat
inc
jmp
push
shr
pop
ds
js
cmp
adc
push
loope
sbb
call
xchg
xor
push
push
jne
enter
xchg
(bad)
ss
mov
movs
cmp
cmp
cmp
ror
pop
movs
adc
mov
mov
mov
pop
add
pop
shr
cmp
xor
push
adc
mov
dec
daa
pop
xlat
scas
test
aas
cmp
push
mov
inc
dec
sub
scas
inc
dec
pop
push
mov
pop
loopne
loop
xor
popa
xchg
adc
cld
sub
inc
xor
dec
bound
xor
lea
cwde
mov
out
mov
js
sub
inc
xor
adc
inc
dec
jne
adc
retf
aam
add
cld
into
add
movs
xchg
daa
pop
dec
in
add
rcl
push
mov
ret
sbb
sbb
xchg
push
(bad)
add
daa
fst
popf
adc
mov
mov
mov
mov
xchg
push
xchg
retf
or
xchg
add
push
sbb
adc
repz
pop
add
scas
dec
call
shr
sub
mov
push
fmul
push
xlat
int3
pop
es
pop
cmps
adc
sbb
sbb
push
jae
repz
dec
das
push
mov
sub
xor
(bad)
pop
loope
lahf
mov
or
fdiv
pop
pop
imul
dec
fs
pop
push
rcr
push
pop
fmul
hlt
mov
sbb
push
not
sbb
fistp
jge
inc
cmp
xchg
cmp
mul
cmp
dec
stc
pop
or
les
jno
pop
nop
imul
add
gs
pop
jle
cmps
sbb
jmp
pop
mov
push
in
add
xor
and
xchg
pop
mov
jne
stos
ret
pop
xor
or
pop
ror
xchg
aad
cmp
sub
sub
test
push
test
jmp
data16
push
sub
sbb
push
movs
pop
xchg
fidiv
in
aad
shl
lods
dec
fistp
retf
pop
sbb
stos
jae
ins
adc
sti
adc
fmul
sti
loopne
pop
pop
jo
iret
push
sub
cmp
jbe
mov
jne
sbb
pop
pop
(bad)
mov
sbb
out
sbb
jmp
jne
xchg
out
xchg
mov
dec
sub
push
jnp
xor
inc
xor
inc
movzx
jae
or
add
cmc
push
loopne
dec
jo
fs
cmp
pop
ret
xlat
mov
jl
mov
add
fsub
aaa
sub
aaa
lods
mov
clc
mov
ins
sub
xchg
sbb
rcl
push
xor
mov
int
dec
mov
and
leave
dec
sub
sahf
clc
fistp
cmps
out
inc
mov
mov
inc
imul
hlt
mov
push
test
ins
sbb
fistp
in
add
add
es
mov
add
cmp
jg
retf
pop
add
(bad)
mov
mov
shl
sub
pop
jle
mov
fcomp
cli
mov
daa
adc
push
mov
mov
xlat
(bad)
ror
ret
mov
or
xor
inc
dec
jne
inc
fldcw
cmps
test
adc
fsub
leave
jmp
fstp
mov
add
enter
rol
sub
and
ss
cmps
ins
sub
pop
jle
aam
fcom
mov
mov
cs
mov
xor
jne
clc
lds
cs
xchg
xor
mov
cmp
sbb
outs
sbb
mov
sub
cmps
jge
std
sbb
jle
rol
fidiv
leave
sbb
push
dec
int
xchg
mov
inc
add
je
(bad)
dec
movs
fbld
bswap
mov
mov
sub
in
push
jo
ins
imul
rol
fwait
jo
jle
dec
mov
repnz
jo
push
sub
inc
pop
push
xchg
add
ins
aam
push
sub
test
sbb
xor
mov
dec
push
ror
lods
pop
scas
sbb
push
sbb
inc
daa
mov
adc
dec
sbb
jnp
je
jmp
xchg
mov
fadd
inc
inc
push
ss
adc
iret
in
jle
cmp
addr16
cmc
outs
adc
lea
add
dec
or
cli
push
test
adc
call
jmp
and
es
fisub
cmps
xchg
mov
mov
mov
mov
cmps
data16
push
push
pop
rol
or
pop
xchg
push
(bad)
fnstsw
mov
add
scas
cmp
jbe
pusha
pushw
mov
adc
cmp
fdivr
pop
retf
jno
setne
pop
mov
es
fsub
test
enter
pop
imul
or
and
imul
jl
add
jl
loopne
es
or
lock
jo
pop
cmps
and
daa
add
cmp
add
fbstp
mov
push
ror
pop
hlt
mov
or
or
mov
lock
(bad)
icebp
add
mov
inc
mov
mov
or
inc
add
fisttp
idiv
lea
push
test
rol
not
cli
pop
xchg
push
hlt
mov
inc
push
xor
push
push
mov
icebp
push
into
sbb
mov
or
sub
add
add
sbb
or
dec
ret
lea
fstp
mov
sub
add
enter
je
push
push
sub
xchg
mov
aad
test
mov
fstp
and
bound
and
push
sub
mov
cmp
daa
mov
pop
pusha
setg
inc
fmul
add
imul
leave
call
out
jne
stos
cmp
mov
dec
inc
xchg
loopne
or
sbb
cmp
push
out
xchg
add
sti
inc
retf
(bad)
bound
or
xchg
test
xchg
je
inc
pop
mov
dec
mov
or
bound
sbb
jne
add
and
outs
or
je
mov
mov
popf
test
add
mov
xor
test
jnp
sub
je
jmp
ret
or
jne
std
sub
(bad)
xchg
push
adc
inc
dec
mov
add
movs
mov
xchg
mov
fdiv
add
dec
shl
mov
mov
ror
mov
mov
pop
inc
cvttps2pi
push
xchg
or
pop
or
pop
jbe
std
add
cmp
test
xchg
dec
fistp
mov
push
pop
pop
jo
retf
jo
das
jl
int3
cmp
setg
fdivr
nop
mov
cmp
or
inc
pop
fistp
mov
imul
scas
cdq
xchg
ror
mov
mov
dec
and
ret
scas
add
or
adc
push
(bad)
mov
pop
into
add
xor
add
mov
cs
cmp
in
push
cwde
neg
cmp
jo
push
push
push
push
push
js
mov
add
ror
rol
sti
js
xchg
shl
inc
xor
pop
or
mov
lock
lock
ror
and
dec
sar
cmp
sbb
cmc
lock
xchg
loope
push
and
loopne
push
pop
shl
cwde
ret
nop
mov
out
add
cmp
xchg
popa
pop
ret
inc
inc
push
adc
mov
(bad)
inc
inc
jae
nop
sbb
push
push
mov
inc
sub
xchg
fcmovnbe
add
pop
in
jmp
mov
push
or
push
push
inc
push
push
inc
dec
add
push
sar
jmp
add
jo
arpl
popa
ins
add
data16
fs
jns
and
outs
push
inc
and
imul
mov
push
and
and
arpl
popa
in
ja
lods
sub
pop
addr16
dec
outs
fs
dec
adc
imul
jo
outs
jb
gs
fcmovnb
fnsave
imul
pop
sub
dec
inc
imul
test
loopne
test
sar
dec
push
gs
outs
or
ins
ins
inc
jg
push
add
cmp
sbb
into
adc
ja
push
push
imul
jo
cs
add
cdq
mul
xchg
jae
mov
jb
fld
ror
(bad)
mov
push
inc
js
gs
outs
outs
movs
push
mov
push
inc
dec
addr16
fwait
loopne
gs
test
inc
imul
jne
fiadd
in
add
pop
sbb
je
addr16
lock
sbb
or
inc
pop
inc
inc
push
dec
dec
inc
dec
mov
pop
sub
or
sbb
add
into
inc
(bad)
or
int3
mov
add
fcomp
ficomp
push
test
or
pop
adc
push
outs
jne
bound
out
mov
pop
loopne
push
jae
jb
jo
outs
outs
xor
(bad)
adc
test
out
mov
sub
(bad)
outs
out
js
xor
adc
jo
out
(bad)
clc
pop
jo
adc
outs
sbb
push
cmp
or
inc
fnstsw
jne
nop
jmp
push
loopne
cmp
cmp
fcom
sar
cmp
cmp
enter
cmp
cmp
push
test
or
test
xchg
dec
pushf
jo
add
sbb
fisttp
(bad)
sub
clc
pop
dec
mov
mov
inc
mov
enter
pop
arpl
cmc
pop
add
(bad)
add
adc
test
nop
push
bound
add
push
and
inc
cli
dec
sar
(bad)
mov
pop
cmp
cdq
cmp
xchg
movs
mov
aaa
add
jl
movzx
mov
add
jb
xor
pop
(bad)
add
mov
push
mov
mov
xor
adc
jmp
sub
mov
in
xor
and
out
sahf
mov
mov
ins
mov
add
jp
inc
inc
dec
jne
cmp
add
dec
add
dec
ins
mov
or
in
dec
aam
sbb
xchg
add
into
sub
sar
add
add
out
jne
xor
out
rcr
fcomp
inc
pop
rcr
or
jl
mov
(bad)
cmp
mov
sub
add
xchg
mov
iret
pusha
fild
lock
inc
fidivr
es
add
outs
fstp
pusha
mov
inc
popa
inc
cmp
std
(bad)
fild
outs
add
sub
sub
(bad)
sti
repnz
cmp
jge
fimul
(bad)
pop
jnp
rol
mov
int
mov
xlat
sub
sar
dec
shl
xchg
adc
sub
mov
outs
daa
inc
mov
and
adc
dec
clc
dec
jmp
cli
sbb
clc
inc
cmp
jg
test
cmp
popa
and
pop
retf
aaa
mov
ja
or
mov
xlat
jns
outs
jne
fwait
test
adc
cmps
add
(bad)
aaa
rcl
adc
pop
loop
fmul
adc
hlt
sub
jp
xchg
outs
mov
jne
xlat
cmc
xchg
cli
test
add
or
jmp
in
mov
pop
sti
cs
in
in
push
shl
mov
movs
push
out
stos
(bad)
popf
test
adc
popa
bound
retf
or
in
adc
add
loopne
ins
add
stos
and
int3
loope
push
repnz
and
sub
mov
or
dec
cld
push
dec
mov
and
push
cmps
xchg
loop
ja
mov
dec
push
push
push
je
(bad)
mov
mov
je
sbb
mov
shl
rcl
test
or
sub
out
xor
sbb
ror
je
fscale
jg
cld
sub
and
jmp
pop
pop
pop
into
hlt
push
xor
jo
outs
or
jle
aam
pop
ins
inc
and
cmp
test
dec
dec
dec
hlt
cmp
je
dec
sub
inc
mov
xor
sub
push
pop
icebp
outs
inc
sub
sub
retf
add
sbb
test
xchg
mov
js
mov
add
jns
jb
push
adc
jg
rcr
sub
loop
xor
ret
xor
test
stos
mov
ret
sub
push
out
or
mov
fadd
sar
push
push
mov
mov
adc
shr
fstp
leave
and
xchg
lea
add
neg
je
mov
xor
fdivr
fdiv
push
sub
add
aaa
std
popa
jl
cmp
jg
call
or
sbb
add
jne
pop
cmp
je
int3
or
scas
adc
pop
pop
test
js
sbb
mov
add
out
dec
jmp
outs
add
xor
ds
imul
mov
and
push
cli
cmp
xchg
sbb
mov
mov
pop
push
pop
cmp
jno
test
(bad)
sbb
or
fwait
mov
cmp
repnz
sub
test
ret
mov
mov
or
and
adc
mov
or
les
fwait
enter
cmp
and
cmp
mov
add
mov
xchg
or
mov
cmp
into
and
mov
sbb
out
in
cmps
mov
icebp
pop
sub
daa
inc
dec
jo
sahf
rcr
mov
sbb
mov
push
retf
push
js
sub
inc
xchg
out
or
jecxz
sbb
push
inc
cli
fisubr
loopne
dec
xor
mov
outs
mov
mov
jmp
sub
ror
adc
or
jl
in
or
rol
push
mov
fnstsw
jle
aad
push
lock
or
cmp
sub
dec
add
xor
sub
cmp
push
add
leave
ficom
push
xchg
clc
leave
cmp
(bad)
add
in
jle
pop
test
add
xor
mov
ror
sti
pop
movs
inc
cwde
shl
push
je
inc
mov
or
leave
jne
dec
ret
ret
jmp
cmp
je
inc
jp
and
xchg
ret
ret
data16
pusha
xlat
iret
push
push
adc
inc
mov
push
xor
std
fdivr
sbb
ror
cs
mov
pop
sub
jbe
ja
outs
mov
mov
lods
push
jne
mov
push
mov
repz
pop
adc
lea
dec
ins
pop
(bad)
pop
lock
jp
jmp
(bad)
push
pop
add
cmp
mov
cmp
retf
lds
mov
rcl
test
sub
test
mov
push
adc
push
jmp
add
daa
aaa
adc
inc
inc
fadd
or
sub
cmp
jbe
and
mov
xor
xor
ror
or
clc
mov
xlat
jecxz
add
inc
bound
cdq
xchg
mov
inc
mov
mov
(bad)
cmp
dec
mov
cmp
mov
or
add
xchg
sub
push
mov
dec
mov
jmp
mov
dec
call
adc
stc
mov
lds
mov
inc
add
out
sbb
xor
int3
aam
add
mov
cmp
or
push
or
int
xlat
mov
push
daa
dec
ds
mov
into
mov
inc
sbb
out
pushf
push
xchg
test
inc
dec
add
add
sbb
or
push
add
in
fnstsw
fwait
loopne
sti
call
fxch
fistp
fld1
fchs
push
fscale
inc
fstp
pop
fstp
fwait
hlt
pop
js
push
pop
lea
or
sbb
mov
adc
add
dec
retf
cli
add
push
mov
test
adc
add
add
out
add
sar
add
adc
or
test
cdq
pushf
shl
adc
ror
aas
lahf
mov
or
ja
jo
pop
mov
ret
push
fs
xor
or
cld
cmp
cmp
lahf
fmul
or
sbb
sbb
mov
pop
pop
aad
mov
xor
add
pop
das
add
adc
jnp
dec
pushf
jge
ds
repz
mov
jmp
imul
push
imul
xor
imul
ins
jo
ins
mov
les
iret
pop
cmp
sbb
outs
adc
or
imul
scas
add
jne
je
mov
fnstsw
pop
or
adc
movs
push
xchg
dec
cmp
outs
pop
sbb
jecxz
inc
es
je
mov
sub
jb
daa
data16
pop
pop
dec
jo
imul
fs
ins
ds
push
cli
popa
inc
gs
data16
xor
pop
pop
jge
movs
cmp
js
frstor
xlat
mov
fld
xlat
loopne
adc
mov
test
fdiv
mov
aaa
pop
jge
adc
mov
fld
push
mov
outs
mov
pop
pop
das
jp
fistp
sbb
add
pop
mov
xchg
xchg
ficom
(bad)
add
push
or
pop
push
in
mov
inc
xchg
sbb
dec
scas
or
or
test
xchg
dec
imul
mov
or
push
imul
pop
ret
inc
jno
mov
int3
xchg
and
jae
adc
add
ret
rcl
out
stos
ret
mov
mov
mov
sti
imul
sbb
jmp
fild
mov
fistp
mov
mov
dec
cmps
or
sbb
cmps
int3
add
ret
jle
(bad)
les
xchg
ret
sbb
lock
xchg
clc
mov
sbb
adc
push
hlt
add
jnp
enter
adc
int3
movs
jns
out
outs
jno
jnp
pop
xchg
push
popf
out
fs
test
pusha
arpl
rol
mov
sbb
ss
pushf
cs
dec
ret
out
jmp
add
imul
jb
les
pop
mov
push
push
inc
jne
push
inc
jmp
inc
adc
mov
shl
aaa
fnsave
jl
mov
mov
xor
movs
das
pop
and
test
(bad)
mov
sub
pop
mov
and
mov
rol
out
dec
mul
movs
or
(bad)
mov
inc
pop
fcomp
push
or
mov
ret
retf
and
push
mov
or
mov
ret
movsx
imul
push
mov
imul
jle
push
mov
push
jge
xor
ins
mov
ret
ins
dec
mov
mov
movzx
mov
push
xor
mov
clc
pop
movs
pop
mov
jb
mov
dec
jmp
iret
imul
push
imul
fucomp
iret
cmp
mov
xchg
sub
or
mov
or
sti
test
int3
cmps
iret
mov
fiadd
sub
jb
push
or
pop
jns
daa
and
pusha
ja
cld
sbb
cmp
jne
cmp
pushf
push
xchg
xchg
pop
adc
or
stos
cmps
pop
push
sub
dec
pop
jae
fidivr
cld
jmp
xchg
xchg
les
jbe
jle
test
push
fbstp
sbb
cmp
outs
(bad)
mov
sbb
jae
dec
push
add
test
jne
cmp
pop
jae
jmp
or
shl
or
iret
fld
fcomp
pop
sahf
out
aad
pusha
imul
mov
sbb
fstp
fwait
aam
adc
add
out
fld
fcompp
pop
push
adc
cmp
std
fabs
fstp
inc
cmp
push
xor
(bad)
sbb
imul
and
cld
fdiv
and
nop
mov
push
pop
pop
inc
and
ins
ss
fist
push
arpl
add
fld
fcomp
aas
int
inc
fcom
sbb
push
push
cmps
pusha
ins
jmp
sub
ins
jbe
add
or
or
fsubr
into
mov
fild
add
jbe
pop
shl
xchg
rol
scas
push
mov
(bad)
pop
jns
lahf
das
add
ds
mov
nop
pop
jge
out
sahf
movs
mov
retf
jne
loopne
dec
or
iret
cmp
into
fs
mov
push
in
repz
fs
add
cmps
fs
jl
ror
mov
leave
jle
mov
add
sub
test
in
dec
inc
inc
and
in
popf
pop
xchg
xchg
pushf
loope
push
rcr
ret
add
adc
ficomp
add
ret
or
js
push
jmp
add
add
out
push
xchg
lock
and
ds
add
lds
ret
or
lods
loop
adc
clc
std
ror
daa
mov
call
cmp
dec
das
push
cmp
fucomi
pop
mov
pop
mov
sbb
imul
repz
aas
clc
idiv
add
ins
imul
xchg
jne
inc
retf
movs
pminub
mov
ja
pusha
xchg
cmp
je
or
xchg
adc
push
sar
retf
or
and
xor
aas
push
movs
lds
mov
out
das
mov
pop
icebp
(bad)
test
push
cmp
jb
mov
mov
inc
inc
repz
int
movs
mov
lea
lea
mov
push
neg
(bad)
push
and
sub
test
jp
mov
jnp
outs
mov
add
sub
scas
and
add
in
or
sub
xor
mov
pop
adc
push
or
gs
jl
or
xchg
mov
sbb
jnp
in
cmps
addr16
inc
pusha
or
and
xchg
or
add
fbstp
fsub
sub
push
jg
sbb
sub
inc
push
lea
lds
mov
jmp
dec
je
add
fcom
rcr
sub
jl
jbe
in
bnd
sub
inc
or
cmp
mov
mov
ror
neg
or
jg
fld
and
sub
pop
push
fwait
dec
adc
scas
cmp
mov
adc
imul
sbb
or
or
hlt
int3
xor
or
jne
dec
ret
popw
ror
lock
and
jg
cmovle
and
push
mov
sub
or
fadd
add
ja
add
outs
out
lock
pop
dec
xchg
and
pop
xchg
je
or
leave
push
add
cmps
scas
dec
xchg
push
push
mov
jne
push
xchg
jle
mov
ror
mov
int3
add
xor
bound
ins
jmp
dec
pop
add
xor
mov
out
scas
aam
je
dec
je
push
xor
or
xlat
sahf
mov
in
inc
sbb
add
arpl
sahf
or
sbb
mul
pop
rcpps
jp
jmp
sbb
adc
jp
cmp
inc
add
push
push
xchg
adc
cmp
or
sbb
add
loope
lds
pushf
inc
sbb
jg
or
test
push
ret
add
idiv
enter
sbb
mov
js
loopne
inc
push
neg
add
add
mov
imul
jmp
loopne
or
dec
fcmovne
and
mov
adc
dec
enter
adc
in
loope
adc
cmp
out
or
add
jo
cmps
push
push
xor
mov
sbb
sahf
pop
and
loopne
mov
or
add
and
sbb
scas
adc
dec
push
out
xchg
add
stc
ja
add
imul
add
add
cwde
jge
lea
mov
test
sbb
xlat
call
sbb
je
lock
pushf
call
je
or
lds
jmp
adc
dec
pop
pop
pop
push
mov
dec
lods
or
add
dec
or
add
dec
mov
cmps
das
add
ins
into
jne
mov
je
fcom
setae
(bad)
js
jmp
jo
sbb
js
test
xor
repz
dec
cmp
jle
cmp
xor
and
sbb
add
xor
scas
sbb
arpl
jns
lods
mov
outs
inc
imul
mov
dec
adc
jne
aaa
push
xchg
xchg
sahf
jecxz
push
loopne
xor
xor
sub
and
jns
mov
mov
xor
push
int3
retf
jo
ins
jno
cmovle
adc
pop
lock
mov
mov
cmp
aaa
call
aad
je
pop
in
lea
retf
repnz
add
fiadd
loopne
cs
xor
xor
jne
mov
neg
loope
mov
add
cmp
jle
call
or
add
sti
or
or
pop
xor
es
out
cmp
out
sbb
div
sbb
sub
sub
sbb
mov
sbb
jbe
sub
xor
mov
(bad)
jbe
dec
xchg
xor
adc
xchg
retf
or
ja
fild
pusha
push
ror
push
(bad)
push
int3
adc
sbb
std
mov
cmp
iret
repz
outs
jp
test
ds
repz
and
add
lock
sub
cmps
push
mov
and
push
add
push
lods
and
add
pop
xor
pop
jb
add
adc
shr
sub
push
or
int3
sub
push
cld
fadd
sub
sbb
add
loop
mov
jg
shl
add
ror
int3
pop
add
add
imul
cmp
pop
pushf
inc
in
push
pop
xchg
pop
pop
jb
jae
sub
pop
or
repnz
mov
out
out
clc
icebp
ja
(bad)
imul
sahf
push
or
push
cmc
push
jmp
out
enter
ret
cmps
and
sbb
or
add
adc
xor
addr16
push
and
adc
fs
mov
pop
and
addr16
pop
adc
pop
scas
pop
push
ins
pop
cwde
pop
pop
push
mov
and
out
out
adc
(bad)
sub
adc
sub
jbe
pop
adc
or
adc
cmps
adc
shl
sbb
pop
and
imul
call
mov
imul
add
xor
push
shl
je
or
ret
add
push
inc
cmps
hlt
adc
pop
sbb
ror
ins
gs
inc
mov
or
arpl
call
or
fnstsw
fs
fidiv
ins
outs
jbe
or
je
popa
outs
push
dec
pop
dec
inc
sbb
cdq
jle
adc
sub
push
imul
into
cmps
or
or
ja
dec
gs
adc
add
je
out
into
(bad)
jb
adc
popa
jb
jo
jae
imul
add
add
jns
fst
mov
push
sbb
mov
or
test
inc
fdivr
int
imul
inc
sbb
add
adc
and
push
loope
jne
pop
imul
aam
iret
pop
sub
jl
pop
rol
or
fsubr
push
aas
add
pop
movs
rsm
cmp
stos
loopne
adc
jbe
xor
not
inc
jb
outs
jb
pop
sub
sbb
mov
ins
ins
pop
push
orps
clc
mov
outs
push
jne
ins
mov
gs
mov
ja
iret
pop
sub
inc
push
(bad)
ds
dec
push
add
popa
sub
add
jne
adc
imul
push
or
imul
add
push
and
jg
or
xor
pusha
pop
mov
je
add
inc
jnp
or
sub
jae
sbb
movs
fld
fsub
int3
push
in
imul
in
cmps
fwait
add
push
sub
jmp
inc
ins
popa
jae
fs
push
fwait
or
leave
in
in
inc
pop
daa
leave
mov
xor
sbb
mov
fsubp
add
pushf
in
and
les
sub
int3
add
pop
and
(bad)
sbb
shl
jne
and
mov
push
bound
sub
ret
std
and
dec
gs
outs
enter
data16
cli
test
jb
cmps
xchg
mov
add
dec
sub
cs
dec
jp
add
outs
jo
dec
dec
js
xchg
imul
and
sub
in
ret
popf
dec
test
nop
imul
dec
enter
cmp
dec
in
bound
sbb
adc
or
inc
enter
xchg
pop
and
dec
test
and
mov
add
xor
inc
enter
fmul
sar
or
ins
ja
inc
pop
ins
and
imul
dec
adc
sub
xchg
hlt
pop
sub
xor
stos
lods
jns
inc
outs
std
push
inc
pop
hlt
sbb
jno
jo
jo
jns
xlat
dec
jnp
or
push
jae
or
or
or
jl
or
dec
jmp
sub
test
or
nop
jge
add
outs
arpl
data16
and
push
pop
in
jp
cmp
pop
push
dec
ja
lods
sub
pop
or
pop
shr
push
aas
in
or
das
jmp
or
push
jb
mov
or
inc
mov
xor
loope
add
test
jnp
lock
add
and
inc
pop
jbe
push
inc
movs
jb
dec
xchg
cmp
fwait
sub
jle
test
sbb
cli
and
lock
comiss
outs
dec
add
or
loope
xchg
pusha
in
jg
pop
sbb
fidiv
mov
aaa
and
mov
cvttps2pi
jmp
popaw
dec
jl
ins
shl
shl
pusha
push
je
outs
and
sbb
jo
sbb
mov
stos
inc
rcr
scas
cmp
mov
(bad)
ror
cld
sub
push
xchg
cmp
inc
in
ins
jo
xor
(bad)
mov
imul
push
push
pop
push
adc
lfence
xchg
or
popa
imul
add
inc
dec
push
sbb
mov
not
push
add
xorps
pop
xlat
ja
push
xor
pop
xor
or
xchg
push
imul
popa
ja
xchg
pop
xchg
dec
enter
adc
push
iret
aad
stc
arpl
adc
into
loopne
mov
pop
inc
xor
push
nop
xchg
or
jne
mov
aam
pop
fcom
retf
mov
push
out
push
jns
das
(bad)
push
push
test
ret
popa
pop
pop
pushf
out
int3
pusha
pop
push
pop
adc
inc
es
push
ja
test
push
push
mov
adc
sbb
rol
add
dec
ret
pop
rol
inc
dec
shl
(bad)
inc
xchg
icebp
push
imul
cmp
push
call
outs
sbb
push
fiadd
cld
dec
mov
mov
ficom
inc
cmp
add
pusha
test
jl
add
les
ret
push
ds
add
adc
cdq
pop
inc
ror
cmp
je
jns
add
ins
push
add
jecxz
add
ins
mov
popa
dec
(bad)
or
call
lods
mov
pop
inc
sub
add
fisubr
adc
pop
jecxz
mov
sbb
xor
push
add
push
and
mov
or
cmp
loope
add
xchg
inc
ins
inc
pusha
mov
push
xor
sbb
icebp
mov
pop
cmp
retf
scas
push
out
jmp
push
pop
cmp
ds
loop
sbb
fsubr
cli
loope
mov
popa
hlt
fs
dec
xor
pop
sub
or
mov
mov
loopne
loope
xchg
inc
(bad)
mov
div
xchg
or
data16
or
adc
pop
dec
das
ret
mov
sub
push
sbb
or
or
call
repz
add
dec
pop
in
push
xor
mov
push
out
push
sub
mov
push
pushf
call
ja
xlat
push
cld
es
adc
aam
jbe
cld
adc
loop
push
xchg
mul
outs
rcl
psrld
in
shl
add
add
into
scas
(bad)
stc
jb
add
add
jg
mov
add
fxrstor
str
inc
(bad)
movups
adc
js
xor
iret
cmp
cmovge
mov
jp
dec
sub
xor
scas
jno
dec
jb
data16
test
xor
aaa
inc
cmp
push
shr
push
push
stos
xor
xchg
dec
lods
add
stos
push
cwde
push
jb
dec
adc
cwde
or
aas
cwde
ret
add
sti
adc
fwait
mov
sbb
in
ins
or
jno
mov
or
xchg
addr16
sub
jns
add
outs
sbb
inc
mov
dec
popa
clc
xor
or
push
pusha
pop
fcmovbe
cmc
cmp
or
jae
sbb
or
sbb
add
sbb
cmp
sbb
push
push
mov
dec
lods
cs
jns
imul
adc
dec
shl
add
(bad)
ja
add
pop
movs
in
pop
xchg
or
ins
jno
add
mov
push
sar
sbb
sbb
pop
and
in
adc
xor
sbb
clc
add
fsubr
mov
add
xchg
fs
pop
or
sub
and
lock
add
movs
push
or
jae
dec
sub
scas
out
xor
cmp
mov
mov
or
cwde
(bad)
movs
jbe
inc
mov
mov
call
popa
jae
xchg
add
inc
mov
inc
adc
sub
xlat
cmp
cmp
or
xchg
mov
xchg
nop
pusha
and
add
dec
cmps
xchg
test
push
add
je
xor
push
mov
mov
fcmovb
add
and
bound
push
mov
xor
shl
add
and
sub
cmp
iret
xchg
cwde
loopne
adc
add
and
jo
or
retf
ja
sbb
in
push
xor
xchg
inc
inc
and
pop
jmp
cmp
mov
fidivr
and
imul
push
aam
in
ss
jl
pop
punpckldq
push
or
loope
sub
add
push
and
arpl
movs
add
add
push
pop
xor
nop
inc
sub
aad
into
or
lock
push
out
jbe
or
push
movs
xchg
shl
adc
jno
js
sbb
jo
add
push
mov
pop
dec
xchg
xchg
sysret
add
mul
add
popa
and
shr
dec
push
or
inc
cmp
in
mov
cmps
or
push
xor
push
mov
jne
out
enter
ins
mov
mov
cmp
xor
and
dec
lea
xchg
daa
popa
add
movs
fst
aam
cmp
add
je
lahf
inc
pop
pop
mov
xchg
add
dec
data16
lods
mov
adc
pop
clc
lods
test
(bad)
dec
xchg
push
adc
ja
stos
popa
sbb
aad
pop
jns
ja
add
xchg
add
ret
jb
psubb
xchg
mov
ret
add
inc
fcomp
scas
cmp
add
and
(bad)
cmp
cwde
push
and
push
inc
mov
mov
inc
jo
add
data16
sti
lods
xor
fmul
and
dec
add
cs
loop
clc
rcl
pop
adc
in
jmp
das
jno
dec
and
jns
cmp
push
dec
jp
sub
pop
pop
(bad)
enter
popa
js
les
push
aad
pop
inc
movs
jo
push
ins
call
jmp
mov
std
add
loopne
cmp
adc
sbb
xor
mov
adc
bt
pop
or
sysret
mov
inc
mov
test
or
pusha
sub
mov
xchg
or
fs
js
add
fisttp
fisttp
fnstsw
pop
inc
mov
add
fneni(8087
and
bound
test
mov
lea
bound
call
and
fs
bound
dec
fdiv
(bad)
push
ficom
mov
sbb
mov
push
sbb
iret
dec
inc
iret
mov
mov
pop
into
ss
out
dec
push
pusha
push
je
sub
hlt
inc
add
push
cmp
out
dec
cmp
mov
add
inc
adc
xor
scas
add
sbb
ins
popa
scas
xor
push
cmps
pop
popf
std
mov
inc
add
fisubr
out
or
rol
mov
add
out
sub
lods
(bad)
add
aas
and
popaw
mov
inc
add
sub
fsub
sbb
ror
mov
sbb
ss
cmp
pop
in
repnz
icebp
and
push
ja
iret
fistp
add
push
addr16
lahf
mov
pop
adc
nop
lods
xchg
or
pop
xor
xchg
sbb
mov
das
repnz
cmp
pop
or
inc
pop
add
arpl
pop
mov
or
xchg
mov
call
popa
je
push
jle
add
mov
mov
aas
mov
cmps
push
lds
adc
jp
adc
jae
add
xor
adc
push
and
outs
sbb
jl
xchg
neg
and
mov
fsubr
shr
ins
in
adc
mov
pop
enter
add
push
pop
cs
outs
adc
loopne
outs
ja
outs
or
fiadd
add
xor
arpl
adc
adc
inc
ret
sub
and
mov
scas
and
outs
xor
xchg
sub
xor
or
ret
add
into
sub
jno
ret
adc
int3
jo
inc
pop
pop
imul
gs
add
and
jge
add
out
shl
fs
push
xor
jbe
inc
pop
and
and
int3
xchg
inc
clc
out
cmc
adc
scas
add
bound
add
out
xor
jg
inc
lea
fs
outs
mov
jbe
jb
(bad)
loope
clc
add
xchg
sub
jb
fistp
stos
or
(bad)
or
push
xor
sbb
sub
add
dec
outs
jbe
inc
push
push
xor
pop
jae
cmp
xor
imul
jo
mov
cmp
dec
jo
(bad)
and
or
mov
je
rcr
inc
pop
sbb
loope
push
repnz
sbb
add
cmp
or
push
push
add
xchg
xlat
sbb
xchg
outs
sar
outs
arpl
add
pop
shr
inc
pop
mov
adc
or
jns
push
and
jae
mov
sahf
jmp
dec
or
inc
clc
test
mov
add
inc
icebp
add
xchg
arpl
loopne
sbb
cmp
jae
xchg
dec
xchg
stos
dec
stos
rcr
sbb
ja
lahf
or
push
cmc
movs
cmp
rcr
ins
aaa
push
adc
in
pop
dec
out
cmp
fwait
jge
or
das
cs
jl
jo
cmps
jl
xchg
xchg
cmp
add
scas
adc
je
add
loope
outs
jo
inc
sbb
cdq
add
pop
push
stos
add
dec
sub
clc
nop
mov
loopne
or
or
cmc
add
inc
pop
xlat
mov
aaa
cmps
movs
cli
mov
fbld
(bad)
sub
mov
(bad)
sbb
imul
push
loop
and
gs
sub
xor
push
sub
ss
call
fidiv
out
cmovbe
or
jbe
imul
jmp
xchg
ror
inc
or
add
sbb
push
rol
lock
add
icebp
add
xor
push
dec
or
adc
jp
mov
push
rcr
adc
or
mov
adc
cwde
out
pop
(bad)
aam
je
dec
icebp
or
push
or
pop
xor
sbb
imul
adc
mov
xchg
or
pop
pop
add
cld
ror
out
and
push
inc
push
inc
mov
iret
push
hlt
inc
sub
sbb
inc
lea
repnz
add
pop
sbb
mov
jb
mov
or
hlt
inc
dec
retf
imul
fisttp
or
into
push
out
sbb
xchg
es
and
push
scas
pop
ins
xchg
xchg
mov
pop
ret
aam
aad
adc
mov
rol
adc
dec
or
fs
push
daa
shl
bound
fsub
shr
push
adc
cs
fadd
jp
int3
iret
ror
lock
push
idiv
ds
jl
out
push
or
push
(bad)
sbb
add
loop
test
pop
jmp
sbb
mov
push
pop
iret
leave
ja
retf
lods
and
xor
ret
push
sbb
push
sbb
or
cmp
pop
and
dec
lods
pop
add
or
stc
movs
pop
pop
push
push
out
imul
hlt
and
sub
or
mov
sti
mov
adc
xor
xchg
mov
or
xlat
xchg
imul
loopne
sbb
push
ror
inc
or
outs
sbb
movs
inc
sub
xor
push
cmp
pcmpgtw
mov
mov
push
loope
(bad)
shl
fiadd
or
push
data16
inc
cs
jnp
cs
inc
inc
retf
in
inc
mov
inc
stos
loopne
push
and
xchg
push
xor
add
in
pop
jmp
bound
or
push
scas
enter
push
(bad)
por
dec
cmp
fcomp
push
push
dec
mov
outs
jb
push
cwde
xor
movs
push
addr16
loope
push
ror
inc
in
enter
dec
loop
dec
sub
jbe
lods
in
cld
or
imul
test
xor
loope
sar
push
push
pop
sbb
xadd
sbb
not
pop
out
das
and
and
pmuludq
jge
sub
sub
enter
push
add
sub
adc
arpl
inc
hlt
gs
xor
cmp
lea
cmps
add
(bad)
shl
test
stos
repz
dec
rcl
mov
xor
pushf
and
pop
push
push
xchg
mov
add
push
mov
aas
pop
out
push
test
push
xchg
leave
pop
xor
jnp
ins
sub
das
xor
adc
cmp
pop
test
ror
or
mov
mov
dec
mov
mov
mov
mov
nop
pop
mov
or
pop
dec
mov
add
xchg
clc
dec
lods
add
xor
sub
mov
in
fsub
sbb
sbb
push
and
jno
icebp
enter
and
sti
call
es
xor
mov
ss
inc
aaa
(bad)
scas
or
in
cmp
add
imul
inc
mov
sbb
add
xor
imul
cmp
loop
inc
push
inc
aaa
push
push
inc
cmp
or
mov
cmc
inc
sub
inc
jmp
ret
into
nop
sub
leave
mov
pop
cmp
mov
mov
addr16
or
push
aaa
movs
retf
or
xor
xor
cmp
mov
fiadd
js
stos
mov
mov
test
icebp
or
cmps
addr16
push
and
or
inc
adc
jecxz
imul
ror
sub
cmp
dec
arpl
jo
xchg
arpl
adc
ret
movs
sbb
xor
jg
lea
popa
sub
pop
outs
and
mov
cmps
xchg
cld
repz
cmp
adc
xchg
sbb
cmp
test
mov
outs
test
cmp
xlat
ffreep
adc
and
pop
add
push
bound
or
fs
sbb
loopne
dec
push
in
inc
jl
xor
pop
cmp
mov
inc
fdivr
cdq
dec
push
outs
add
mov
or
cli
dec
int
mov
ins
je
inc
xor
mov
mov
push
sahf
push
xlat
das
in
ret
lods
pop
iret
mov
add
loope
pop
iret
sbb
mul
fmul
dec
xchg
cld
push
retf
push
(bad)
popa
xchg
lea
lods
and
cmp
mov
test
imul
push
outs
adc
inc
xchg
aad
mov
pushf
int
adc
movs
pop
(bad)
sti
cwde
push
pop
dec
(bad)
cmp
pop
lods
ret
and
mov
jno
fs
je
sbb
fisttp
add
sbb
lock
inc
enter
push
pop
dec
cmp
test
pop
inc
neg
mov
je
pop
add
pop
or
add
pop
sub
jno
xchg
jo
not
fnstsw
enter
add
or
and
dec
jb
sbb
mov
pop
sub
or
ins
sbb
clc
sbb
push
les
mov
sub
call
pop
cwde
or
(bad)
add
inc
dec
popa
js
ins
xchg
int3
sub
cmp
dec
stc
xlat
xor
leave
add
into
ss
dec
mov
push
out
lock
xor
xchg
sbb
ror
sub
call
repnz
test
pop
or
inc
adc
sbb
cmp
add
popa
xor
inc
pop
sti
push
je
xor
push
clc
jg
outs
sub
hlt
mov
and
add
rcr
call
es
arpl
adc
(bad)
lock
retf
jbe
dec
push
cmp
push
adc
xchg
sbb
or
xor
imul
and
or
pusha
mov
popa
add
addr16
cmp
jo
mov
push
aaa
sbb
xchg
iret
mov
(bad)
les
aas
lds
ret
lods
(bad)
in
add
or
loop
xlat
pop
inc
dec
cwde
repnz
in
dec
jmp
dec
clc
inc
xchg
push
test
ins
jbe
(bad)
ins
std
pop
mov
jo
jp
rol
add
test
ret
xor
xor
lock
mov
setns
js
mov
xchg
inc
or
adc
push
or
cmp
or
int
push
lock
jg
xor
leave
aaa
shr
push
(bad)
cld
loopne
mov
loope
mov
inc
mov
(bad)
pop
and
pop
ins
das
add
mov
cmps
stos
mov
stos
pop
js
(bad)
shl
mov
push
pop
out
fisubr
push
sbb
dec
jno
push
stc
fs
add
and
test
xchg
inc
(bad)
(bad)
pusha
scas
aas
(bad)
push
and
inc
fistp
pop
add
inc
adc
adc
clc
das
dec
(bad)
jb
pusha
jp
dec
jg
and
scas
cwde
retf
or
pop
sub
popf
sbb
push
bound
scas
add
adc
popa
or
mov
ror
inc
lea
mov
add
pop
les
inc
xchg
add
cld
popa
push
pusha
lock
clc
aas
sbb
jns
outs
jne
gs
retf
ror
cdq
jbe
inc
dec
ins
imul
and
mov
sub
bound
popf
je
mov
or
inc
ror
push
hlt
jb
jns
or
add
les
lods
lss
popa
sbb
aad
(bad)
iret
lods
xchg
xchg
add
adc
loopne
inc
cmp
and
mov
div
aaa
cwde
xchg
nop
adc
daa
xchg
jecxz
daa
or
cmc
cs
push
scas
add
fnstsw
arpl
and
or
ss
push
push
or
inc
enter
int3
lock
ret
mov
enter
sub
cmp
sbb
inc
add
pop
push
cs
and
lods
adc
push
sbb
inc
dec
inc
popa
nop
xchg
scas
sub
adc
jp
add
and
mov
mov
stos
inc
pusha
add
fild
inc
das
mov
das
adc
icebp
add
and
push
pop
xor
test
or
aas
dec
mov
rol
or
popa
mov
aas
jl
pusha
or
jno
pcmpgtd
push
leave
popa
cmp
aas
mov
xor
outs
jb
mov
ror
ret
pop
jo
xchg
ins
mov
sub
pop
popa
inc
js
add
or
add
xchg
add
dec
jb
lahf
push
mov
js
push
movs
hlt
(bad)
aas
cmp
jb
popa
xchg
cmp
loopne
loopne
cmp
je
add
ror
push
cmp
push
or
add
(bad)
ss
popf
pop
scas
in
ret
sub
push
or
jnp
add
or
jo
into
mov
push
js
(bad)
out
adc
ins
push
lods
repz
(bad)
fnstenv
lods
pop
add
add
jl
icebp
popf
cld
sub
fs
jno
mov
pop
inc
cmovp
mov
inc
outs
popa
ins
imul
push
pop
xor
mov
push
mov
adc
mov
add
or
xor
mov
dec
addps
or
xchg
dec
push
dec
jbe
div
inc
jne
outs
push
popa
jb
sahf
inc
push
sbb
movs
jae
cmp
push
or
clc
das
push
add
out
push
push
and
ror
addr16
xchg
mov
sbb
outs
test
fnstcw
push
cs
cdq
sub
add
popa
iret
mov
popf
sbb
xchg
loop
adc
xor
rcl
or
pushf
add
nop
inc
xchg
daa
jo
test
or
cmp
je
cmp
retf
xor
xchg
retf
mov
aam
inc
sub
maxps
js
pop
push
pop
pop
add
imul
ja
or
adc
push
xor
mov
push
ror
or
jp
mov
mov
or
retf
cmc
syscall
mov
push
popa
mov
adc
sub
add
popa
mov
pop
sbb
sbb
(bad)
sti
sbb
inc
shl
cmp
adc
aaa
mov
inc
sub
into
test
gs
shl
mov
inc
push
jne
enter
imul
icebp
nop
push
out
pop
test
call
jbe
or
inc
jo
sub
mov
aad
mov
inc
and
and
cmps
push
(bad)
ins
dec
jle
js
sahf
and
adc
sbb
cmp
sbb
add
push
inc
(bad)
shr
pop
sub
or
add
mov
add
and
dec
inc
gs
and
xor
inc
ret
int3
xor
sbb
cmp
push
mov
or
and
outs
or
and
jmp
inc
or
inc
iret
sub
or
fsub
jge
loop
jae
or
outs
mov
nop
mov
in
(bad)
inc
or
sub
ret
fld
cmp
mov
test
lods
mov
push
daa
fsubr
repnz
adc
aad
inc
mov
add
pop
clc
out
aad
mov
out
or
add
inc
xchg
inc
jmp
push
push
out
add
call
loope
add
shr
test
dec
xor
adc
push
pusha
or
sub
ret
ss
inc
int
sbb
repz
adc
scas
sar
xchg
stos
or
jns
or
sbb
and
imul
cmp
inc
scas
in
dec
addr16
imul
imul
or
and
aam
nop
sub
mov
or
add
jns
aas
or
sbb
cmp
add
or
xlat
fucomp
loope
mov
push
push
push
add
push
mov
mov
push
adc
mov
xor
jbe
clc
or
aas
add
push
or
jnp
jo
and
aas
cmp
xor
adc
and
xor
lods
sbb
cmps
cmp
and
add
(bad)
out
pushf
adc
push
push
xchg
mov
sbb
dec
inc
push
jne
mov
adc
mov
mov
out
or
fs
retf
hlt
popa
or
jno
sbb
pushf
sahf
mov
push
fimul
popa
rcl
mov
inc
adc
dec
add
call
add
cmp
mov
rcl
mov
xchg
adc
sbb
or
push
popa
push
or
add
xor
mov
mov
ins
and
add
add
add
stos
sbb
scas
or
call
pusha
xchg
test
push
dec
and
or
les
out
cwde
mov
inc
mov
mov
add
pop
adc
push
stc
cmp
push
inc
jne
imul
push
outs
ins
ret
ds
add
mov
data16
mov
iret
(bad)
std
sbb
sub
arpl
mov
rol
ins
jae
nop
addr16
mov
scas
or
push
inc
fld
and
pusha
add
cmp
test
fcom
test
sbb
xchg
or
sbb
pusha
sub
je
(bad)
rcr
adc
mov
shr
mul
xchg
sbb
adc
and
outs
arpl
mov
xlat
xchg
or
pop
jae
nop
lock
sbb
rcr
jns
mov
pusha
jae
push
vmwrite
add
push
jle
aaa
add
pushf
add
aas
sub
(bad)
push
adc
mov
sbb
add
pop
mov
in
repnz
mov
sbb
out
or
add
sub
rcl
push
mov
mov
test
inc
adc
mov
ror
dec
push
xchg
nop
pusha
inc
cmp
push
pop
cmps
add
(bad)
jg
int
div
mov
inc
dec
mov
jae
inc
outs
ins
data16
inc
mov
(bad)
rcr
xchg
add
pop
es
sbb
int
or
xor
pop
dec
das
push
shl
iret
les
and
out
sbb
(bad)
lock
mov
xchg
retf
test
imul
and
rol
sub
sub
pop
ret
in
sub
push
mov
xor
pop
aaa
pop
xor
in
call
outs
cdq
dec
sub
test
aaa
mov
dec
inc
sub
pop
scas
lea
push
cmp
adc
cmp
push
retf
push
adc
adc
sbb
xor
pop
mov
mov
ss
arpl
add
out
rcl
popaw
jne
je
add
push
adc
or
movs
ret
jne
xor
add
movs
cs
mov
add
add
jp
jno
inc
shl
out
pop
pop
push
imul
cmp
fwait
mov
fld
fidiv
out
jae
pushf
clc
inc
jecxz
push
scas
sbb
push
pop
sbb
adc
adc
push
out
dec
mov
and
xchg
xchg
jo
add
cmp
call
or
sbb
in
adc
add
pusha
push
aaa
inc
adc
movs
les
cli
inc
das
add
ins
daa
and
popf
(bad)
and
add
mov
jnp
sbb
int
fcomip
push
lods
shl
add
cmp
jp
(bad)
rcl
cmp
scas
push
aaa
fiadd
jmp
add
xchg
(bad)
mov
lock
add
dec
add
jnp
dec
xchg
or
sub
mov
or
push
inc
xor
jns
adc
les
mov
das
cld
test
pop
mov
add
das
add
add
sub
test
fnstsw
fld
inc
push
push
add
mov
sub
bound
xchg
inc
mov
fcomp
mov
push
movs
jle
adc
xor
dec
xor
add
add
rol
aaa
or
inc
xor
sub
push
cmp
pop
pop
inc
loop
push
mov
iret
dec
ss
mov
adc
xchg
jbe
sub
pop
add
push
movs
int
out
xchg
push
jno
(bad)
and
in
imul
and
mov
add
int3
add
js
ret
(bad)
push
inc
push
sets
sbb
popa
mov
or
dec
pop
test
imul
mov
cwde
std
mov
add
fsubr
dec
sub
out
sbb
test
and
sub
cli
test
jae
fild
xchg
or
xor
je
push
sbb
shr
loopne
dec
inc
sahf
sbb
pusha
stos
clc
daa
daa
and
es
aam
xchg
xchg
daa
and
push
mov
loope
sub
leave
stc
sub
dec
jae
repnz
stos
loopne
sub
jb
jb
mov
xor
aas
(bad)
into
ins
(bad)
mov
pop
mov
cmps
pop
pop
test
push
arpl
mov
ss
sub
push
(bad)
imul
cmp
add
dec
xor
push
pop
or
or
cs
daa
add
xor
mov
icebp
sbb
add
ret
mov
loopne
pop
addr16
lods
mov
inc
push
popa
jg
pop
xor
inc
jg
pusha
dec
data16
xor
mov
inc
sub
dec
push
mov
add
mov
ficom
fldenv
sbb
mov
push
fldcw
add
icebp
cmp
or
add
jbe
outs
cdq
ja
sbb
bound
ja
test
test
ror
inc
or
and
sub
out
out
pushf
jb
ins
xchg
xchg
mov
push
add
push
jnp
or
dec
xchg
sbb
das
leave
sub
fwait
test
add
lea
adc
xor
cmp
sub
aam
dec
jae
loope
aad
imul
repnz
ror
imul
xchg
jno
jno
aad
mov
or
mov
mov
fcmovu
push
ret
mov
in
aad
cmp
push
inc
mov
bound
jo
int
inc
inc
inc
js
jo
sbb
pusha
or
xchg
adc
xchg
jecxz
ja
pop
shr
jb
mov
sbb
add
loop
xchg
scas
adc
scas
dec
or
sar
rcr
adc
ror
loopne
or
dec
gs
add
pop
dec
pop
mov
jg
add
mov
popa
pop
and
bound
popa
pop
lds
or
es
stos
cmp
dec
cmp
jae
cmps
dec
inc
xchg
popa
imul
je
stos
ss
cmp
add
push
loope
popw
dec
imul
stos
into
imul
add
or
daa
jns
retf
sbb
sbb
js
outs
fild
bound
add
pop
ins
test
shl
dec
pusha
or
adc
test
mov
pop
xchg
mov
xchg
dec
cmps
jmp
mov
push
jb
ins
mov
bound
add
mov
mov
pusha
dec
sub
pop
mov
in
dec
cmp
arpl
pop
and
mov
int
loope
or
push
push
loop
push
pop
mov
scas
cdq
pop
mov
fimul
add
das
sub
ror
add
inc
add
popa
mov
mov
jne
enter
popa
mov
arpl
jns
add
clc
inc
adc
dec
inc
int
and
mov
retf
jo
cdq
inc
cdq
or
sbb
sbb
or
jo
sbb
enter
in
adc
or
push
inc
pop
fcom
cmp
adc
xchg
dec
push
sub
push
inc
test
cmp
inc
ds
and
add
repnz
leave
xchg
dec
(bad)
and
jbe
lea
pop
sub
outs
add
push
shl
push
inc
jnp
mov
inc
dec
or
dec
movs
cmc
cmp
arpl
enter
add
pop
inc
mov
mov
fiadd
arpl
xchg
fiadd
adc
add
sbb
aaa
scas
and
or
lahf
sbb
ror
push
xlat
movs
push
mov
xchg
add
int
in
inc
icebp
mov
xor
xchg
inc
push
pop
sub
pop
loopne
add
jno
mov
push
pop
fisttp
(bad)
sbb
sub
in
rcl
adc
sbb
jo
xor
jge
shl
dec
fcom
loopne
inc
sub
inc
add
movs
inc
add
mov
ffreep
(bad)
add
cmp
xor
rcr
cmp
sbb
test
mov
mov
jae
fsub
dec
xchg
sti
push
daa
(bad)
sub
(bad)
(bad)
xor
pop
sbb
mov
cmps
sti
aas
inc
and
mov
inc
jno
ins
mov
jo
pop
sti
add
or
mov
or
call
adc
sbb
or
and
rol
ror
xor
and
add
add
add
test
popf
add
push
mov
aad
push
add
fisttp
mov
pusha
add
jns
and
rcl
push
push
popa
jo
adc
out
cmp
es
xchg
in
shr
adc
inc
ss
push
add
fucomi
das
cli
push
(bad)
paddusb
adc
test
jo
rol
lods
inc
cmp
pop
xchg
add
mov
pop
enter
xchg
stos
sbb
cmp
adc
push
fcomp
inc
xor
inc
pop
scas
jnp
adc
jo
mov
shl
out
push
cmps
push
movs
add
mov
add
(bad)
xchg
fsub
cmps
add
xor
popa
push
xchg
mov
or
xchg
push
adc
dec
inc
sub
pop
das
dec
adc
mov
ret
sub
cmp
jl
push
mov
add
in
es
mov
and
aaa
mov
clc
mov
into
mov
dec
xor
clc
or
inc
pop
sub
or
dec
and
adc
rol
dec
push
test
test
sbb
mov
add
push
jno
and
(bad)
aad
dec
or
inc
jmp
or
lock
sub
pop
lods
sub
jg
pop
das
sbb
lea
cwde
ss
shl
mov
push
je
fidivr
fbld
fstp
mov
mov
mov
das
xor
mov
clc
fistp
fcomp
mov
push
and
add
clc
iret
cmp
sbb
movs
adc
inc
fidivr
(bad)
stos
scas
sub
js
xchg
jmp
pop
xchg
xchg
ret
mov
pop
movs
and
xchg
and
sbb
add
loope
inc
push
cmp
adc
mov
pop
jmp
inc
push
adc
or
ins
jbe
cmp
push
(bad)
out
and
and
adc
cmp
inc
push
lea
push
test
pop
movs
push
add
retf
fnstcw
movs
mov
add
xchg
(bad)
add
sbb
ds
fsubr
lock
and
ds
int3
mov
test
adc
(bad)
mov
std
stc
cmp
rol
loope
push
inc
shl
dec
cdq
push
cmps
aad
out
cwde
cmp
hlt
xor
cmp
cwde
dec
test
sbb
sub
aaa
pop
gs
add
xchg
jle
pushf
aas
pop
cwde
inc
cmp
outs
dec
mov
aad
jmp
sbb
mov
cmp
push
pop
jbe
les
rcl
pusha
ret
aaa
xor
imul
inc
add
or
add
xlat
cmp
xchg
xor
pop
scas
nop
add
shl
jp
or
jg
pop
mov
imul
adc
out
fst
rol
pop
out
neg
add
shr
push
inc
push
fcom
ds
popa
adc
popf
dec
mov
jno
xor
and
xlat
pop
push
sbb
mov
mov
inc
mov
or
inc
les
inc
adc
retf
push
or
test
loope
sub
test
inc
test
dec
inc
retf
mov
jne
aas
inc
dec
mov
pusha
cmp
add
push
fcomp
mov
mov
push
shl
das
sbb
int
jbe
inc
ss
jmp
scas
adc
lock
add
fstp
mov
push
test
inc
sbb
or
dec
scas
push
(bad)
sbb
xor
jmp
inc
in
jns
or
lds
pusha
mov
fstp
add
in
cs
sbb
xor
jle
ja
push
mov
sub
xor
push
(bad)
push
xor
hlt
fist
fnstenv
push
push
adc
push
push
fwait
mov
stos
shl
mov
popa
(bad)
push
add
or
sbb
pop
push
popa
mov
call
daa
in
inc
jnp
popa
sti
jb
ja
push
fs
pop
sbb
fisub
dec
outs
les
cs
in
leave
pop
movs
bound
arpl
lods
xor
sbb
mov
inc
and
test
sbb
adc
and
inc
inc
mov
ja
jae
xlat
shrd
push
xchg
xchg
fld
adc
inc
mov
enter
xlat
push
dec
lds
into
leave
lahf
(bad)
jo
ror
fimul
rcl
mov
sbb
sbb
mov
out
in
add
fmul
xchg
out
mov
mov
adc
pushf
dec
jno
add
test
push
xchg
sub
out
or
lds
dec
adc
adc
or
add
ins
mov
mov
test
dec
add
add
loope
or
test
or
loopne
gs
mov
add
pop
adc
cmp
jl
cs
inc
jb
call
push
repz
clc
add
push
adc
cwde
je
adc
xor
mov
in
retf
je
push
inc
lods
pop
or
pop
fld
sti
and
adc
sub
or
ret
daa
imul
xchg
out
test
cmp
and
pop
mov
mov
adc
outs
xchg
or
adc
add
add
sbb
pop
out
popa
or
or
imul
add
ret
or
lds
inc
std
mov
push
sub
or
add
pop
or
xor
add
imul
sbb
inc
pusha
adc
fst
add
aaa
and
loopne
mov
cmps
jbe
rcl
aas
add
fadd
push
aam
push
mov
psubw
inc
inc
adc
inc
cwde
or
adc
jae
dec
or
jne
dec
jle
adc
push
and
adc
jnp
movs
jnp
adc
es
or
imul
or
jge
call
das
push
mov
and
psadbw
shr
outs
movs
adc
push
jnp
adc
add
pop
xor
inc
daa
mov
ja
and
dec
cmp
add
sbb
adc
mov
pusha
and
inc
leave
jb
rcr
ja
lds
push
ror
inc
fucom
xchg
mov
mov
mov
je
pop
xchg
sbb
push
mov
(bad)
(bad)
mov
cmps
cmp
and
push
mov
cmp
xor
movs
sbb
adc
daa
ror
adc
jne
lds
jge
add
mov
mov
adc
jb
pop
push
sbb
adc
add
lahf
sub
into
add
adc
push
dec
imul
mov
je
push
mov
outs
jmp
dec
and
pusha
sbb
mov
mov
ror
add
imul
or
inc
jo
es
push
sbb
inc
jo
jg
(bad)
add
repz
jecxz
add
push
cmps
hlt
call
inc
sub
out
adc
mov
adc
imul
or
add
outs
jp
xchg
add
addr16
mov
aas
adc
add
adc
cwde
rcl
mov
std
iret
or
ins
cmp
dec
cmps
and
inc
jmp
add
add
lock
ss
push
or
sbb
imul
les
retf
scas
add
or
call
scas
sub
add
push
pop
call
cmps
retf
das
push
push
mov
sbb
loop
push
inc
adc
jns
sbb
adc
adc
jge
jmp
push
aaa
add
fucomp
mov
push
and
dec
das
gs
sahf
pop
mov
aam
addr16
inc
add
movs
das
mov
jl
mov
push
sbb
cdq
mov
mov
inc
loope
sub
xchg
scas
xor
ret
loopne
push
(bad)
in
das
fsub
sub
cs
or
pop
aas
not
test
test
mov
jne
jmp
fs
es
push
ja
mov
add
push
mov
add
adc
(bad)
fistp
push
xor
cmps
mov
sbb
je
xor
jl
sbb
out
push
call
jno
adc
mov
push
fiadd
sbb
adc
jns
and
dec
inc
sub
add
dec
test
xchg
fistp
(bad)
or
push
dec
inc
jp
(bad)
pop
push
out
dec
push
ret
add
fmul
mov
daa
and
mov
xchg
daa
daa
daa
mov
xor
enter
imul
in
adc
in
fs
jb
repnz
into
ins
jnp
rcr
bound
push
(bad)
mov
pop
dec
inc
xor
pop
push
push
mov
xchg
and
jle
fld
xor
stos
push
mov
aam
daa
dec
push
mov
push
or
daa
and
push
xchg
cmps
jnp
or
jae
jns
shr
jg
xor
mov
add
dec
retf
mov
cmovns
adc
dec
jae
call
inc
push
ds
inc
jg
pusha
dec
mov
lahf
inc
xor
and
cmc
jp
sub
dec
mov
mov
or
adc
retf
push
sub
test
adc
outs
sub
lock
lea
xor
add
test
nop
nop
out
mov
add
mov
daa
out
or
xchg
add
xor
fmul
dec
xchg
call
das
leave
pop
inc
and
fwait
gs
popa
das
jge
add
lea
adc
or
outs
cs
pop
dec
jae
imul
fwait
dec
imul
mov
mov
add
add
data16
adc
lea
add
je
xor
imul
xchg
retf
jae
inc
frstor
or
lock
sbb
mov
gs
dec
add
lock
dec
cdq
or
push
push
xchg
xor
in
xor
cs
xor
or
push
lock
add
xor
(bad)
and
and
sub
xchg
syscall
cmp
xchg
dec
es
jo
mov
cmp
adc
ja
pop
adc
adc
dec
mov
mov
inc
loopne
dec
or
daa
mov
int3
sahf
adc
sbb
xor
inc
sbb
xchg
popf
adc
pusha
inc
sti
mov
or
rol
fs
pop
gs
dec
jb
dec
or
test
repz
and
xor
xchg
or
xchg
push
and
lds
sbb
leave
dec
fld
cmps
push
leave
sub
imul
repnz
fmul
loopne
mov
xchg
or
mov
lea
add
scas
xor
jp
shl
mov
fs
sub
inc
imul
add
ja
and
add
push
and
iret
xchg
sbb
add
(bad)
mov
rcr
stos
std
loop
outs
sub
out
inc
ret
cmp
fsub
in
add
clc
test
das
xor
bound
push
out
push
push
push
outs
cmps
mov
movs
mov
aas
adc
dec
ja
or
sub
sar
xor
bnd
inc
adc
pop
ins
cmp
sbb
gs
ret
add
inc
sbb
add
or
xchg
push
xor
fucomp
inc
add
push
pop
sub
mov
adc
mov
imul
imul
cmps
dec
ret
or
xor
lahf
test
es
jo
movs
mov
xchg
js
mov
xor
les
add
jo
lock
fadd
cmp
inc
dec
sbb
jno
adc
add
sbb
dec
xor
add
mov
jo
jbe
adc
es
mov
sbb
pop
sbb
aas
or
pop
push
push
mov
dec
push
cmp
push
dec
jg
aam
pop
xor
jge
outs
retf
inc
push
gs
imul
push
jg
or
mov
addr16
pop
pop
jecxz
sub
imul
lea
mov
pop
xor
call
push
jmp
test
and
mov
mov
idiv
out
pop
or
shl
shl
mov
xor
sbb
ret
out
fidivr
add
mov
je
add
and
push
(bad)
xor
fs
or
cs
push
push
push
imul
fbld
clc
mov
test
je
push
and
add
sahf
add
out
add
mov
and
mov
scas
jo
fstp
adc
jo
pop
pop
pop
ret
lea
mov
mov
push
push
mov
sti
ret
sub
xchg
or
fcomi
fadd
dec
add
hlt
mov
mov
psubq
dec
mov
lahf
push
push
push
mov
and
jmp
out
lock
test
add
mov
mov
test
popa
push
xor
lods
sti
push
push
mov
xor
pop
pop
sub
dec
and
mov
xor
jl
sbb
push
rcr
rol
sbb
push
add
mov
add
adc
das
fsub
add
jle
jmp
inc
ds
fbld
adc
leave
sub
jo
ins
pop
jno
idiv
mov
in
jae
pop
mov
adc
sub
imul
into
repz
add
aam
sub
stos
iret
jmp
ins
push
sbb
and
add
fst
adc
and
(bad)
push
inc
call
and
shr
pop
dec
ja
cmc
sahf
push
push
arpl
lods
aad
or
aad
push
in
test
ins
test
movs
jae
xor
pusha
xor
inc
scas
sbb
sbb
xor
pop
shl
dec
and
out
jbe
ja
inc
mov
jl
inc
xor
mov
mov
mov
inc
dec
jne
lahf
and
js
jne
cld
cli
pop
sbb
rcr
or
add
ins
and
je
sub
pushf
cmp
push
lea
mov
aaa
jge
jns
mov
cwde
add
and
jae
jne
jmp
shr
add
push
inc
mov
cmp
inc
jge
cli
mov
dec
push
and
call
fnstsw
push
or
pop
lods
ins
pop
mov
jle
ret
xor
add
lds
fdiv
add
pop
add
imul
jo
mov
and
add
rcr
outs
push
mov
or
pop
ret
or
push
xchg
mov
inc
jae
mov
ss
pushf
test
jne
adc
mov
mov
cmp
clc
or
adc
mov
mov
ret
loop
jg
imul
xlat
and
push
jmp
add
xor
pop
jb
cmp
lahf
shr
pop
mov
jae
loopne
mov
or
pop
pop
xchg
test
enter
out
jmp
pusha
add
out
clc
adc
scas
jge
cs
les
push
xchg
pop
mov
fstp
push
push
pop
and
pop
mov
sahf
cmps
bound
pop
sbb
cmp
(bad)
xor
push
cmps
add
push
or
daa
fs
rcl
or
pusha
or
popa
inc
add
ds
sbb
push
call
fmul
std
imul
or
mov
pop
or
adc
add
fadd
mov
sbb
or
or
shl
xchg
or
mov
mov
mov
mov
outs
xor
push
ror
add
das
fadd
jmp
mov
pushf
and
ins
bound
or
je
add
xor
push
pop
sub
push
push
inc
cs
ror
aas
push
push
sub
je
sub
je
dec
mov
in
push
dec
neg
push
sub
or
sti
icebp
in
add
push
add
test
ja
inc
sub
sub
dec
inc
sbb
adc
xchg
sbb
in
idiv
and
push
mov
stc
push
xchg
fwait
or
mov
push
push
inc
jb
push
mov
adc
or
adc
into
jb
lea
loopne
add
push
push
or
jnp
cmp
fsub
bound
ds
add
pop
or
shl
imul
push
add
push
pop
adc
sbb
mov
mov
xlat
rol
jg
pushf
shr
xchg
cdq
mov
push
or
(bad)
jbe
movs
cmp
cmp
mov
xor
jmp
arpl
mov
and
in
test
mov
in
push
adc
sbb
(bad)
pop
pop
pop
repnz
jbe
mov
fimul
mov
ret
add
lock
lock
cmp
int
add
push
add
mov
mov
adc
mov
dec
and
or
retf
call
xchg
cli
add
cld
ret
daa
inc
outs
out
aas
addr16
shr
out
pusha
mov
scas
push
mov
test
xchg
popf
ja
scas
cs
xchg
cwde
pop
jae
loopne
add
adc
scas
mov
pushf
push
add
push
xchg
das
jns
ins
ja
inc
or
sub
add
out
mov
jo
push
sub
fcom
fdivp
neg
je
cdq
(bad)
daa
mov
das
mov
(bad)
aam
pop
fisub
xchg
push
in
outs
or
pmaxsw
mov
add
or
lock
inc
or
inc
inc
jne
xchg
inc
add
xchg
pop
pop
nop
and
enter
mov
mov
enter
push
ins
mov
outs
test
sub
je
push
je
jo
gs
mov
or
mov
sub
lods
dec
or
mov
ins
push
call
add
push
popa
sbb
and
lea
add
mov
js
add
mov
outs
icebp
mov
jnp
cmp
add
outs
arpl
outs
mov
fmul
adc
sub
pop
pop
rol
dec
jg
daa
(bad)
sbb
push
call
scas
outs
test
or
dec
or
shr
data16
push
dec
pop
(bad)
call
mov
into
in
movs
(bad)
fisttp
jmp
into
out
pop
push
pop
test
cmp
and
pop
sub
pop
enter
mov
test
mov
cmps
pushf
clc
or
lea
popf
test
lahf
popf
mov
xchg
icebp
mov
mov
dec
mov
mov
fwait
div
cwde
pusha
xor
arpl
shr
sbb
adc
data16
icebp
cmps
js
push
xlat
xor
fst
mov
rcl
inc
adc
xor
xor
or
cmps
adc
cmp
jns
sbb
push
aaa
(bad)
adc
lods
jge
mov
or
test
dec
jmp
or
inc
aas
sbb
or
cli
mov
les
fsub
adc
(bad)
not
lea
inc
enter
jg
add
retw
and
jmp
(bad)
push
mov
mov
pop
je
scas
and
psubusw
in
cs
and
sub
sete
jmp
jmp
sub
je
sbb
adc
inc
inc
test
les
ja
mov
push
cmp
aam
out
xchg
lods
sub
mov
sbb
bound
add
jp
jbe
mov
or
pop
sub
lds
cmp
ja
jns
(bad)
adc
or
add
add
add
fidiv
arpl
jp
cmp
out
jns
or
adc
sbb
ffreep
cmp
jmp
sbb
sbb
fadd
shufps
or
neg
xor
inc
(bad)
mov
enter
sbb
jns
call
into
gs
pop
pminub
ret
pop
icebp
dec
sub
inc
sbb
ret
out
or
daa
pop
push
sub
rcl
leave
adc
icebp
fstp
dec
enter
mov
and
mov
mov
jg
mov
dec
test
out
clc
je
sub
jg
pop
test
cmp
xor
jae
push
xor
mov
stos
cmps
hlt
aaa
aad
jne
enter
aas
mov
cdq
es
mov
pushf
jns
ins
add
adc
inc
cs
adc
adc
inc
xor
add
cmp
clc
in
pop
lods
inc
cmp
xor
add
mov
pop
sbb
stos
pop
sbb
repz
mov
std
mov
mov
mov
dec
call
stos
dec
retf
(bad)
mov
xor
xchg
aad
and
xor
jno
pop
stos
mov
add
cmpxchg
xchg
ffreep
jne
dec
stos
sbb
aad
fs
imul
adc
and
fisub
lods
dec
pop
ja
xor
imul
fxsave
xchg
jmp
mov
ins
es
adc
add
mov
call
add
je
dec
ins
add
jmp
add
lock
jle
loopne
test
stc
ins
fadd
cmps
jbe
add
pop
or
inc
arpl
(bad)
outs
lock
jne
shl
push
je
sbb
ins
mov
je
jecxz
lea
jmp
jnp
push
xchg
push
lahf
lods
(bad)
aas
iret
repz
inc
or
add
mov
es
fs
(bad)
sbb
movsx
or
dec
repnz
movzx
mov
fcomp
push
movs
sub
or
dec
in
push
scas
fwait
xchg
ret
add
xchg
inc
arpl
pop
mov
fbld
aas
inc
mov
cmp
cmp
xor
rol
jne
aad
daa
js
adc
call
mov
or
sbb
mov
(bad)
sysenter
sbb
sub
dec
cdq
cmp
jo
fdivr
je
mov
pop
addr16
outs
mov
adc
test
adc
jmp
jle
sbb
cmove
sub
sbb
aad
fild
fwait
jmp
fst
and
mov
inc
dec
fld
nop
ret
loope
les
push
inc
sbb
setae
mov
sbb
and
jp
jg
sub
shl
jnp
xor
jl
ins
lods
mov
dec
nop
xlat
jne
and
mov
fadd
inc
arpl
dec
dec
jne
push
push
sbb
cli
jle
cmp
dec
inc
jb
rcl
cdq
sub
inc
mov
and
jl
sbb
in
out
xchg
pop
mov
jmp
ins
cmp
adc
jbe
and
jo
sbb
cld
pop
ret
in
or
pop
dec
cld
mov
mov
mov
mov
outs
push
cld
mov
lea
adc
pop
cmc
popf
mov
pop
or
je
push
jle
push
mov
dec
add
push
adc
out
jbe
cli
or
push
rol
retf
pop
pop
test
jge
add
fcom
loopne
sti
pop
and
jle
je
fisttp
mov
lock
pop
(bad)
jmp
adc
dec
idiv
js
add
sti
int
adc
add
mov
mov
pop
in
mov
aam
add
bnd
ret
shl
adc
push
push
lea
icebp
xor
ror
int
inc
xchg
aaa
(bad)
pop
imul
out
add
ins
xor
xchg
imul
and
dec
jo
xor
int
loopne
je
mov
addr16
or
sub
rcr
or
sbb
(bad)
adc
adc
add
inc
or
adc
(bad)
mov
mov
dec
mov
lock
cmp
movs
maskmovq
neg
lods
cmp
(bad)
mov
sbb
repz
pushf
add
repz
jmp
not
jns
nop
or
loopne
movs
mov
and
add
jecxz
mov
xchg
stos
inc
inc
mov
iret
dec
rcr
cmp
and
sbb
in
xor
stos
and
inc
lock
data16
jo
sub
jbe
js
cwde
xchg
push
call
js
out
iret
repz
mov
rcl
jg
imul
clc
(bad)
cmp
fild
fstp
fwait
push
xchg
fadd
loopne
push
dec
imul
pop
dec
fstp
mov
push
rcr
mov
dec
movs
sbb
pushf
cmp
fmul
repnz
push
fist
test
cmp
mov
test
out
dec
inc
push
nop
lea
enterw
ins
mov
inc
mov
test
imul
sbb
mov
inc
ret
add
inc
sahf
push
sub
sbb
addr16
bound
push
pop
mov
lods
inc
loopne
lea
scas
je
add
imul
rol
add
call
test
arpl
push
xchg
jmp
xlat
or
imul
je
sahf
out
test
push
ret
out
sbb
inc
push
inc
cwde
inc
pusha
rcl
sbb
dec
dec
ja
aaa
dec
cmp
lods
loopne
mov
(bad)
call
test
in
mov
call
(bad)
cmp
jmp
add
pop
call
shr
push
pop
test
add
jecxz
test
mov
adc
cdq
sbb
imul
cmp
(bad)
test
add
xlat
bnd
mov
ffree
jge
sub
sub
and
repnz
push
sub
mov
into
sbb
or
enter
mov
rol
mov
pop
mov
push
lds
or
xchg
mov
mov
test
movs
fisubr
es
push
mov
mov
xchg
cmp
loop
(bad)
outs
mov
push
call
pusha
sub
dec
xor
int3
or
adc
(bad)
lods
popf
sbb
int3
sbb
lds
xchg
sub
addr16
lods
mov
addr16
sbb
addr16
adc
pop
mov
lea
dec
test
ret
sbb
pop
test
aaa
mov
adc
ins
xchg
mov
push
cmp
add
cmp
mov
jl
outs
inc
sub
cmp
je
cmp
cmp
inc
test
xor
daa
jmp
cld
push
shl
lahf
repz
or
jp
sub
xor
mov
je
aaa
sub
push
push
xor
aaa
jmp
jne
(bad)
cmp
dec
test
or
data16
xchg
jmp
shl
clc
sbb
or
xchg
clc
mov
fwait
dec
sete
sub
mov
cmp
imul
enter
add
outs
sub
jp
ins
movs
inc
aas
xor
pop
mov
mov
mov
cmp
movs
push
cmps
dec
mov
mov
adc
add
loopne
or
add
or
loopne
sbb
pop
retf
mov
add
lahf
adc
pop
arpl
int
dec
mov
in
mov
or
xchg
sbb
ins
cld
dec
add
inc
leave
pop
dec
or
loopne
mov
aad
mov
shl
idiv
aaa
mov
dec
push
add
mov
pop
mov
ret
pop
iret
repz
jo
push
jns
call
adc
jae
push
adc
je
jp
jg
retf
aad
ds
fstp
int3
xor
push
int3
in
mov
push
rol
dec
pop
enter
test
push
xchg
nop
dec
fmul
mov
mov
faddp
shl
xchg
pop
shr
inc
xchg
jns
cli
sub
(bad)
mov
aam
push
test
repz
cmp
or
test
or
sbb
push
mov
xor
mov
sbb
ins
daa
ret
test
pop
(bad)
adc
add
test
bound
xor
aaa
jnp
jo
pop
pop
ss
mov
lock
iret
mov
push
fld
js
shl
lock
aaa
adc
ret
data16
or
mov
or
jb
push
adc
jae
mov
adc
mov
shl
scas
in
mov
in
bound
jae
mov
push
jae
jo
addr16
add
es
scas
dec
iret
jnp
faddp
push
mul
(bad)
nop
sbb
jno
jo
outs
xor
pop
or
ja
pop
pop
adc
out
mov
pop
push
adc
popa
stos
sub
adc
push
scas
aaa
adc
aad
popa
ss
and
or
ss
setge
imul
js
sbb
cmp
ret
xor
std
aaa
xchg
addr16
mov
addr16
adc
inc
dec
enter
dec
adc
mov
push
leave
cmc
mov
(bad)
out
mov
pop
adc
fadd
adc
and
mov
or
mov
add
push
lods
mov
pop
mov
cmp
les
xor
push
aam
mov
add
hlt
mov
cmp
pusha
lods
jge
add
stos
xchg
loop
inc
add
xlat
or
loope
arpl
jo
fcomp
jmp
and
jl
daa
inc
and
rcr
in
mov
add
call
push
cmp
or
lock
loope
adc
add
jnp
ja
cs
xchg
xchg
(bad)
icebp
or
fst
push
push
cld
dec
xchg
mov
push
loope
jne
dec
add
ss
movnti
add
lock
add
test
pop
data16
fst
stos
adc
inc
dec
pop
ja
ins
imul
clc
mov
push
cmps
fs
movs
and
mov
pop
into
push
mov
fcmovu
mov
hlt
pop
add
in
xor
jae
mov
cmp
add
add
push
pop
bound
hlt
jge
mov
or
test
push
rcr
xor
pop
sbb
and
pop
shl
cmc
hlt
inc
xchg
sbb
cmp
pop
bound
loopne
bound
xor
bound
xchg
push
ins
xor
adc
pop
mov
scas
(bad)
adc
loopne
cld
xor
je
rcl
outs
xor
jno
mov
jno
xchg
xor
stos
rol
mov
ja
add
adc
hlt
push
sbb
test
or
jmp
mov
icebp
daa
(bad)
mov
sub
icebp
data16
mov
inc
mov
jo
lea
xchg
push
in
sbb
jo
ss
xor
xor
sub
add
imul
push
add
xchg
ret
jnp
mov
lods
mov
pop
data16
lahf
sti
cmp
push
inc
outs
daa
push
jl
adc
push
test
bound
lock
aas
mov
int
push
rol
push
cmp
out
or
fild
or
pop
jae
adc
inc
inc
mov
push
enter
shr
cs
sub
iret
sar
xchg
sbb
call
movsx
xlat
ds
mov
mov
(bad)
push
and
mov
mov
inc
mov
sti
adc
sti
adc
ret
into
cmp
fmulp
test
cwde
into
repz
xor
sar
clc
sti
inc
push
mov
pusha
xor
scas
xor
jno
sub
sub
jno
shl
mov
lods
pop
out
nop
adc
(bad)
xchg
leave
test
jg
cdq
xchg
pextrw
int
sbb
fstp
jnp
jae
stos
rcl
(bad)
jae
push
add
push
rcl
ins
add
mov
imul
adc
cwde
mov
jmp
mov
xor
and
mov
mov
mov
inc
mov
loope
or
mov
lds
fdivr
stos
mov
out
sub
xchg
mov
das
sub
sbb
pushf
not
stos
xor
call
xor
add
cld
push
ins
push
in
enter
pop
cld
aas
pop
or
fadd
les
les
ins
jnp
bound
pop
movs
test
and
inc
pusha
adc
mov
test
xchg
add
adc
add
test
sahf
cmp
out
xchg
fmul
fcmovnb
aaa
pop
xchg
call
rcl
xor
sbb
mov
pusha
lock
loope
sar
push
mov
jbe
repz
adc
iret
popa
enter
mov
xor
adc
popa
daa
adc
cmp
cmps
(bad)
es
xor
or
mov
jg
rol
adc
ficomp
or
mov
pop
cmc
popa
retf
xor
scas
or
and
sbb
add
ds
loopne
or
int
jmp
and
int3
pushf
sub
je
call
icebp
xchg
inc
cmp
jne
push
enter
cmp
jle
jle
mov
cmp
jne
cmp
pop
jmp
jg
and
ror
dec
jae
jge
(bad)
pop
ror
in
cmp
push
adc
rol
arpl
add
dec
fist
push
inc
or
jle
cmp
jne
or
add
and
fistp
jl
inc
out
inc
add
mov
jmp
mov
aad
sub
xor
in
jae
nop
ins
(bad)
sbb
(bad)
sub
or
cmp
aas
or
je
lea
and
xlat
xchg
loope
popa
les
popa
not
ds
int3
sbb
add
lock
push
je
sub
sbb
add
or
cmp
and
mov
add
ret
ins
movzx
or
inc
rcl
push
adc
or
cmp
pop
outs
jg
repz
repz
mov
fdiv
mov
mov
adc
mov
sub
adc
jno
imul
test
mov
adc
xor
cmp
in
imul
add
dec
push
loopne
mov
cmp
xchg
inc
clc
add
shl
jbe
in
sub
sbb
mov
mov
and
test
lock
lods
movs
jns
shr
cld
and
cmps
in
and
or
daa
push
or
shr
push
out
and
sti
push
push
and
neg
pop
sbb
xor
and
mov
jmp
ja
mov
pop
dec
push
push
fisub
clc
adc
jmp
xor
clc
inc
pop
jmp
nop
sub
xor
int3
sub
adc
(bad)
and
mov
stc
xchg
pop
sbb
popa
cmp
inc
adc
inc
xchg
adc
loop
(bad)
jmp
jb
dec
mov
inc
test
int3
outs
aad
dec
xchg
sub
pop
push
dec
jo
mov
mov
movs
adc
push
call
adc
mov
mov
call
push
adc
lods
cvtpi2ps
daa
outs
jnp
test
pop
ret
aaa
mov
sbb
retf
outs
dec
test
and
push
std
fst
test
inc
jmp
scas
mov
cmp
in
jmp
mov
jb
mov
xor
cmc
into
dec
outs
mov
out
mov
push
xchg
xor
sbb
adc
xor
js
sub
cmps
not
(bad)
pusha
sub
pop
and
aas
sbb
or
adc
clc
jmp
xchg
cld
push
add
ins
int3
xor
hlt
dec
and
lock
push
xor
mov
(bad)
fdivr
sub
dec
or
jno
lea
xor
and
adc
test
int3
les
add
enter
aaa
jo
fmul
enter
jmp
mov
push
loopne
test
dec
pusha
(bad)
cmps
jne
daa
push
dec
pusha
pop
pop
cwde
dec
and
(bad)
jg
xor
pop
call
mov
neg
mov
mov
pop
add
add
mov
test
xor
sbb
add
je
add
je
push
jne
mov
adc
jmp
lods
sub
push
cmp
sbb
je
pop
jl
retf
dec
and
shl
push
or
imul
lea
cmp
or
stos
xlat
inc
jl
out
movs
xor
jnp
clc
xchg
(bad)
out
add
jo
icebp
mov
gs
adc
dec
xchg
sbb
add
push
bound
out
leave
push
scas
adc
push
sub
lods
fsub
mov
clc
sub
add
xor
jmp
adc
mov
or
jae
gs
cs
push
or
out
je
imul
or
push
ins
cmps
jns
cmps
dec
push
adc
push
push
inc
loopne
push
or
inc
push
cld
(bad)
jmp
mov
add
xor
inc
lods
call
ret
cld
movs
add
mov
iret
pusha
dec
mov
into
test
jnp
mov
les
enter
jmp
movs
movs
pop
add
sbb
sbb
cmp
xchg
fmul
add
pop
xadd
xor
add
adc
stos
pop
sar
retf
mov
mov
and
mov
adc
sbb
inc
jo
add
mov
push
mov
shr
icebp
push
xor
int
call
push
pushf
jge
ds
repz
mov
ins
ss
imul
loope
(bad)
jecxz
jbe
fst
push
ins
cs
push
push
and
or
jns
gs
outs
outs
pop
sahf
adc
sbb
jle
or
cdq
pop
call
fisubr
sub
pop
int
cmp
mov
cmp
std
cmp
adc
and
pop
syscall
add
loopne
push
dec
or
push
gs
ins
push
popa
arpl
addr16
daa
pop
inc
gs
aas
add
jb
jns
or
add
cwde
pop
and
inc
push
gs
data16
add
dec
dec
mov
sti
or
je
jae
cld
dec
ds
add
mov
dec
inc
sub
dec
fwait
sti
push
stos
or
outs
fs
add
push
loope
gs
sbb
push
inc
push
jne
dec
lock
gs
fistp
push
and
or
adc
in
test
pop
cmp
pop
cmp
pop
push
mov
push
cmp
jnp
bound
aam
push
push
or
xchg
ins
cmps
add
call
jnp
or
ucomiss
psubusw
mov
or
push
dec
jb
push
call
xor
add
jle
cmp
lock
pop
fcmovb
sbb
int3
sbb
dec
inc
xchg
and
inc
jae
ds
bound
aas
mov
or
mov
push
and
push
pop
sub
pop
mov
inc
dec
add
daa
pop
loopne
push
in
repz
(bad)
push
sub
adc
push
call
inc
mov
pusha
pop
add
cmp
nop
add
and
inc
dec
in
rcr
push
dec
imul
nop
test
(bad)
xor
or
mov
push
gs
mov
or
dec
jmp
idiv
ret
ret
push
cld
rdpmc
test
xor
pushf
mov
call
jl
stos
jne
ror
fcom
pop
dec
push
push
mov
pop
jno
jmpw
xchg
mov
lock
dec
add
mov
int
shr
and
jae
xchg
adc
inc
inc
ins
popa
jae
fstp
ins
ja
mov
add
ss
ret
stc
or
mov
rol
adc
or
jmp
and
frstpm(287
and
push
cmp
pop
cld
xchg
sub
cmp
out
pop
pop
ins
ret
mov
push
outs
sub
sbb
sub
addr16
pop
data16
fnstsw
xchg
and
lahf
add
dec
gs
aaa
ror
or
add
fs
fcmovu
popa
mov
pop
sub
outs
add
lock
loope
addr16
and
jno
adc
jb
popa
jns
and
add
scas
push
neg
xchg
cli
dec
push
aas
ss
out
enter
add
pop
inc
in
in
ins
(bad)
cmp
je
fsubr
rol
fiadd
inc
outs
jne
sahf
je
inc
xor
shr
pop
mov
and
sub
outs
jbe
dec
gs
dec
rcr
rol
dec
in
imul
add
lahf
pop
in
push
pop
shl
xchg
stos
imul
cs
aam
arpl
add
loopne
or
mov
jnp
inc
jp
add
dec
jno
inc
jne
xor
jne
ret
popa
add
mov
lock
push
pusha
cmp
inc
add
sub
cld
push
sub
sbb
pop
test
push
rcl
cmp
daa
shl
cmp
and
popaw
test
outs
pop
fcmovbe
xsaveopt
jge
push
outs
add
jge
xchg
pop
dec
inc
sub
ja
mov
call
jo
cdq
pop
mov
cmp
inc
ins
push
cmp
popa
jb
ror
xlat
add
inc
dec
sbb
scas
pushf
adc
fst
fimul
call
in
fs
lods
retf
movs
retf
daa
xlat
pop
xlat
and
adc
repz
pop
mov
fstp
out
pusha
mov
data16
jl
sub
jno
je
inc
ins
jo
pop
ficomp
cmp
ds
cmp
shr
lock
and
push
adc
enter
push
cdq
pop
mov
add
or
inc
and
fldenv
sbb
dec
bound
add
or
popf
pop
mov
cmp
and
xchg
loopne
add
jmp
cs
fwait
mov
add
scas
pop
test
scas
or
mov
cdq
ins
adc
mov
aaa
add
scas
jae
addr16
out
mov
and
and
sub
pop
movs
add
push
sbb
add
fucom
push
not
bound
mov
xor
ins
jbe
mov
fs
or
jne
push
inc
or
ja
push
adc
sub
xchg
iret
push
sbb
add
pop
push
out
mov
stc
daa
mov
movs
xor
ret
(bad)
ror
movs
out
cmp
movs
pop
cmp
adc
dec
inc
loop
or
sub
movs
pop
lods
lock
add
pop
gs
mov
add
mov
in
es
cmp
xor
adc
and
jbe
sbb
add
ror
fcomp
jo
daa
sub
iret
push
inc
xlat
or
add
jo
sub
jbe
sbb
add
adc
rcl
xor
add
sbb
xchg
shl
or
sub
ins
or
inc
inc
add
jmp
mov
mov
xchg
test
gs
ins
xchg
mov
pusha
jp
pop
mov
pusha
ja
icebp
aam
add
push
clc
ror
fsub
add
out
add
or
nop
fisttp
add
(bad)
loop
dec
(bad)
fild
xlat
mov
push
and
add
mov
mov
imul
cmp
test
fidiv
fild
pop
push
test
loopne
mov
and
jmp
sbb
xor
dec
inc
mov
inc
ret
sbb
outs
inc
jge
shr
(bad)
in
loope
inc
mov
sbb
inc
add
cmp
inc
xchg
jae
hlt
mov
out
jne
sldt
daa
mov
ficomp
daa
cwde
cs
lods
push
add
mov
push
mov
daa
inc
add
xchg
and
call
lock
pop
pop
xlat
xchg
sub
je
jns
cmp
jp
pop
pop
ret
add
jo
jmp
mov
scas
or
pop
fnstenv
mov
and
das
add
cmc
mov
cli
out
sub
lock
out
mov
fcom
mov
mov
call
(bad)
xor
pop
mov
out
push
or
loope
retf
shr
xor
add
lods
in
rol
cmp
push
loopne
and
push
cmp
cmp
daa
mov
cmp
dec
adc
cmc
mov
es
das
arpl
aaa
or
adc
mov
jbe
fs
call
out
push
ja
call
inc
xlat
dec
add
cmp
cmp
push
add
sub
xor
dec
xor
je
or
mov
sub
jg
pop
mov
std
fnsave
cmp
mov
xor
aaa
adc
rcr
push
or
push
icebp
das
pop
and
push
jp
nop
push
fistp
sub
sub
adc
inc
push
and
mov
loopne
lahf
daa
in
xor
xchg
pop
ret
xor
test
mov
sbb
and
cmp
or
mov
push
inc
inc
jb
ja
push
fs
inc
xor
out
pop
sbb
or
dec
outs
mov
sahf
in
xor
outs
and
lods
or
stos
cmps
pop
pop
mov
stos
frstor
inc
adc
enter
add
push
inc
cld
sysexit
ret
push
call
or
imul
push
xchg
outs
pop
in
jb
repnz
xor
mov
aaa
(bad)
ja
push
pop
ret
movs
or
aad
inc
jno
inc
xor
cmp
push
(bad)
out
or
inc
inc
popa
adc
add
and
out
or
pop
pop
mov
or
lea
jecxz
add
outs
aam
xchg
ret
fcomp
or
enter
sub
pop
xor
add
add
mov
mov
fwait
add
add
inc
fs
sub
retf
mov
mov
push
push
js
add
or
or
add
inc
jb
out
jo
or
push
loope
cwde
push
ret
sbb
and
inc
add
cmp
add
sub
or
pusha
inc
rcl
arpl
push
cwde
rcr
mov
xchg
sub
rcl
mov
sti
and
jl
ret
and
dec
loope
xchg
dec
jb
push
out
dec
popa
lock
call
outs
jae
pop
mov
sub
inc
cmp
outs
int
push
jb
test
sbb
xor
add
sub
add
push
pusha
loopne
or
loope
xor
mov
ret
sub
in
xor
loope
pop
stos
jge
inc
mov
add
rol
pop
sbb
sbb
and
test
enter
iret
or
mov
enter
add
nop
add
pusha
or
retf
mov
add
call
and
into
aas
add
rol
into
jae
dec
cmp
push
repz
inc
inc
and
adc
outs
inc
dec
or
das
es
push
ins
lahf
loope
pushaw
cmps
add
sbb
aam
pushf
pusha
ja
cmps
loopne
add
outs
cmps
imul
and
pusha
int3
xchg
add
cmp
cmp
enter
inc
retf
das
adc
push
xor
add
pushf
cmps
mov
sub
cld
xor
or
push
pop
jnp
add
cmps
in
mov
xchg
ret
push
popa
out
loopne
ins
shr
int
sub
add
cmp
pop
adc
fwait
popf
xor
pop
inc
das
bound
pop
ret
or
push
fdiv
mov
mul
ror
add
std
push
cmps
or
test
cmp
in
mov
and
cmps
je
int
push
loopne
push
xor
sbb
xchg
mov
add
ja
add
pop
add
sub
fild
add
shl
data16
shl
ja
dec
add
lods
sbb
add
nop
and
pop
repz
cmps
lods
cmps
jno
fidivr
out
or
in
mov
add
(bad)
es
das
mov
adc
in
imul
cmp
xor
fdiv
out
or
ret
jmp
dec
xchg
sbb
xor
loopne
xchg
rcl
or
rcl
pop
je
jns
add
sub
adc
das
fs
add
adc
sbb
add
cmps
sbb
sub
push
rol
lds
push
pop
push
mov
(bad)
cmc
stc
ffreep
pop
int3
or
mov
iret
adc
scas
lds
iret
repnz
inc
ret
add
xor
fild
loope
push
mov
je
fnstenv
shl
sub
sbb
xor
adc
sbb
mov
out
retf
and
jno
xor
mov
jo
loope
inc
xlat
dec
sbb
inc
sbb
inc
sbb
push
and
xor
jne
push
das
imul
outs
xchg
pop
jnp
sbb
in
and
add
mov
push
jmp
or
xchg
add
add
sub
cmp
push
and
in
scas
sub
dec
sub
sub
or
jns
jg
inc
add
pop
add
bound
jae
add
outs
xchg
call
shl
cmps
(bad)
mov
inc
aad
es
das
pop
jo
xor
ja
loopne
pop
sbb
comiss
xlat
loop
movs
fcom
fisttp
xlat
sbb
add
jo
pusha
mov
movs
mov
inc
retf
shl
xor
je
loope
add
xor
jnp
cmp
popa
pop
out
inc
or
jne
retf
mov
cmp
cmp
icebp
cmp
dec
xor
push
es
mov
push
aaa
pusha
mul
outs
test
dec
inc
outs
mov
pop
push
jne
mov
sbb
stos
popa
sub
loopne
sbb
xor
nop
pop
mov
cmp
push
or
xor
inc
pop
mov
pop
test
popf
fstp
out
fsubr
xor
push
cmp
push
push
adc
sbb
loop
inc
in
fbstp
ss
xor
push
or
mov
inc
cmp
icebp
ret
jo
mov
mov
add
js
add
inc
lock
inc
ins
adc
pop
or
call
push
inc
and
(bad)
jb
xor
fild
mov
push
push
xchg
xchg
pextrw
pushf
pushf
mov
fsubr
sahf
pushf
out
fstp
rcr
jbe
pop
mov
rol
inc
cmps
test
sti
cmp
push
lea
mov
add
es
mov
test
adc
cmp
shl
pop
xchg
cmp
add
lds
mov
or
daa
adc
fwait
js
dec
(bad)
les
adc
pusha
test
out
repz
xor
adc
repz
and
inc
inc
pusha
xor
adc
inc
dec
xor
mov
or
movs
pushf
aaa
inc
push
and
lds
dec
inc
inc
xchg
shl
and
mov
add
inc
lea
mov
adc
rcr
sbb
mov
inc
mov
sub
xor
inc
dec
add
sub
push
or
addr16
es
or
cmps
aaa
inc
test
add
inc
adc
xor
out
call
or
inc
sub
pop
pop
rol
sbb
add
add
in
add
cmp
aaa
stc
aaa
and
adc
mov
test
je
add
call
mov
out
dec
dec
enter
add
or
(bad)
in
lods
popf
loope
fs
or
pop
pop
ret
nop
jbe
push
ja
push
push
xor
mov
mov
call
out
inc
mov
dec
test
jl
inc
xor
xor
dec
jne
mov
imul
cld
and
xchg
adc
adc
jo
pop
pop
pop
mov
movlps
jo
lock
push
jb
xor
je
and
bound
add
add
and
mov
aam
ss
push
sbb
dec
jge
das
cmp
dec
or
imul
(bad)
rcr
gs
add
cmp
(bad)
gs
jne
je
mov
push
inc
dec
xor
imul
aas
aam
int3
add
push
mov
xchg
ret
add
jmp
push
pushf
out
cld
jo
and
cmp
inc
fadd
push
in
add
sbb
jbe
push
push
push
add
loop
lahf
ja
pop
aam
repnz
adc
and
add
push
or
mov
push
das
sahf
fist
and
sahf
(bad)
dec
nop
retf
mov
imul
je
daa
scas
adc
dec
jecxz
cmp
sub
add
or
or
retf
arpl
or
(bad)
outs
(bad)
mov
lods
push
clts
repz
jp
push
adc
aas
mov
add
mov
inc
push
imul
adc
dec
and
sbb
popa
sbb
xor
pop
fiadd
imul
jecxz
cmp
inc
sub
mov
loopne
push
cs
sbb
xchg
cmp
fcomp
pusha
push
add
pop
das
or
jno
add
push
pop
add
mov
push
gs
xchg
rol
sar
inc
test
mov
add
hlt
cli
mov
xor
mov
mov
jo
sar
jl
inc
xor
sbb
dec
cmp
mov
sbb
cld
cwde
mov
(bad)
dec
cmp
je
jne
cmp
dec
add
add
hlt
sbb
ja
mov
or
lahf
push
dec
cmps
and
push
jnp
scas
jne
xor
and
ror
lock
cmp
jne
mov
push
lea
cld
push
xor
call
ins
out
lods
mov
push
or
adc
and
cmp
add
in
ret
nop
push
mov
mov
cmp
jbe
data16
test
pop
ret
adc
mov
sbb
sti
into
or
call
hlt
stos
sbb
mov
pop
out
push
enter
into
das
adc
push
(bad)
push
lock
fnstsw
dec
push
jmp
pusha
mov
jbe
int
sbb
jae
mov
push
mov
and
mov
or
pusha
pusha
not
jno
js
jne
adc
add
xor
or
jg
mov
out
sbb
cld
test
je
cmp
adc
test
data16
stos
in
inc
add
inc
or
adc
(bad)
cmp
sbb
ins
inc
jne
xchg
inc
pushf
mov
sbb
xchg
mov
shl
pop
xchg
daa
or
lds
aam
pop
mov
cmp
in
fmul
jl
inc
xor
loopne
push
mov
mov
add
jmp
jle
mov
mov
mov
or
test
or
dec
call
jge
mov
sub
xchg
pop
jo
mov
popa
xchg
push
mov
push
xor
cwde
retf
pop
fcom
push
jmp
jl
jmp
cmp
jno
call
cmove
in
mov
inc
add
(bad)
mov
popa
add
or
dec
add
data16
loope
out
add
ins
and
xchg
push
jnp
push
adc
fcmovbe
or
adc
out
or
cmp
je
push
add
sbb
lock
pop
push
out
pop
mov
popa
adc
dec
add
arpl
pop
inc
pop
data16
adc
pop
push
or
or
mov
jo
sti
int
xchg
xor
(bad)
jmp
retf
lea
sar
jns
shl
pop
dec
sbb
mov
fidiv
ret
paddsb
mov
sub
dec
jg
addr16
jle
cmp
sub
aas
pop
or
inc
nop
or
mov
and
push
jne
adc
mov
dec
push
mov
fcomp
out
xlat
push
fadd
pop
ret
mov
xor
pop
(bad)
mov
mov
lea
push
les
xchg
stos
add
xchg
mov
pop
ret
(bad)
hlt
lods
retf
inc
xor
jg
inc
xchg
test
je
shr
adc
into
mov
sahf
jne
adc
daa
add
(bad)
cmps
movs
add
cmps
adc
imul
adc
(bad)
mov
jne
inc
into
xchg
cmp
jg
jmp
or
outs
ins
push
cmp
imul
add
add
sub
mov
cdq
movs
ins
add
dec
outs
pop
mov
jle
hlt
adc
mov
add
outs
mov
mov
mov
mov
cmp
mov
ins
stos
out
iret
js
daa
mov
call
dec
loopne
pop
test
cmp
lock
or
cs
lock
push
out
cwde
inc
rcr
dec
pushf
dec
or
adc
push
dec
push
dec
dec
sub
inc
and
mov
and
and
jo
clc
sbb
arpl
out
mov
in
frstor
mov
add
jmp
inc
pusha
adc
push
mov
add
lock
inc
xchg
ja
mov
mov
sbb
clc
jne
inc
in
mov
sbb
ins
and
sub
or
add
add
ret
jge
push
loop
xchg
jbe
fs
sti
fadd
enter
push
mov
outs
(bad)
mov
mov
inc
add
add
mov
mov
pop
clc
nop
jp
pop
jne
rcr
fmul
push
add
ins
lock
in
pop
test
add
inc
cld
adc
sub
jb
mov
mov
jne
xchg
add
jle
jne
sahf
loopne
mov
outs
enter
mov
sbb
lock
rol
dec
jo
or
add
adc
adc
mov
mov
dec
test
jl
xlat
or
add
mov
call
es
sub
or
loopne
enter
(bad)
ja
add
or
or
add
cs
add
add
sar
out
es
imul
int
push
mov
cmps
mov
nop
sub
dec
inc
add
cmp
pop
rol
das
mov
ror
ja
pop
jnp
pop
add
sub
inc
sti
jo
push
adc
ret
dec
mov
int
push
loop
(bad)
jno
jmp
gs
nop
popa
movs
sub
add
fsub
es
outs
jnp
xchg
lea
ins
imul
mov
lea
mov
mov
sub
loopne
mov
mov
nop
inc
add
dec
(bad)
enter
dec
ficomp
dec
pop
lds
push
add
jno
in
push
outs
mov
shl
cmp
pop
shl
(bad)
jl
pop
rol
ret
mov
push
adc
cwde
pop
pop
mov
dec
stos
adc
xor
or
xchg
inc
xchg
sub
mov
cs
push
inc
dec
xadd
aam
loopne
pop
mov
cli
mov
and
mov
test
pushf
ror
in
mov
scas
mov
xlat
and
or
dec
ret
mov
pop
jns
lods
push
stc
cmps
lock
aas
adc
aaa
ins
icebp
add
mov
call
lods
lds
std
xor
fimul
js
pop
mov
cmp
jne
(bad)
jmp
inc
mov
popa
pop
cld
scas
mov
fdivr
mov
xor
inc
mov
cdq
popa
xchg
adc
mov
xor
xor
js
xor
jo
mov
jae
cmp
inc
int
pop
pop
or
(bad)
enter
push
fsub
inc
add
adc
repnz
mov
sbb
mov
movs
add
adc
fdivp
cmp
sub
loopne
add
in
mov
add
inc
into
fimul
fcom
add
inc
mov
add
mov
(bad)
loope
push
or
or
sbb
inc
int3
cdq
call
iret
ins
in
mov
add
(bad)
fmul
aam
ja
xor
add
adc
and
dec
xor
dec
ins
call
xor
push
add
add
inc
scas
lods
popa
shr
mov
sbb
jo
adc
mov
sahf
pop
das
pusha
add
mov
cli
cmp
lock
add
jl
mov
cdq
jmp
mov
add
cs
sbb
and
inc
jbe
ror
pop
ins
xchg
loope
rol
cld
jle
je
mov
loope
das
lods
cmp
loope
adc
mov
mov
cdq
pop
mov
adc
xor
jnp
dec
(bad)
jg
cmp
push
dec
popa
imul
outs
jae
jb
or
aam
cmp
xchg
add
xchg
ins
jbe
add
add
adc
push
xchg
inc
or
fisub
fsub
and
stc
jne
das
mov
push
outs
ins
inc
es
bound
sub
clc
push
push
sbb
xor
pop
movs
add
ins
xor
and
sbb
popa
sar
(bad)
test
loopne
(bad)
sub
or
lock
adc
and
cmp
mov
adc
pop
inc
das
bound
cmp
bound
cld
ja
mov
fiadd
popa
or
push
mov
bound
push
jecxz
movups
loopne
(bad)
popf
sub
stos
cmp
pop
xor
adc
cmp
mov
rcr
inc
sub
add
pop
add
xchg
pop
int3
(bad)
std
inc
and
daa
push
dec
imul
cs
push
outs
push
or
pushf
add
shr
mov
mov
pop
xor
ffree
fdivr
sub
jo
sahf
jmp
add
shl
adc
and
les
inc
loopne
ret
dec
bound
or
test
mov
push
add
lock
ror
adc
xor
push
retf
mov
adc
add
shl
mov
xor
push
scas
mov
adc
dec
stc
pop
dec
das
data16
add
mov
or
jbe
into
push
(bad)
xor
push
pop
dec
popa
outs
in
cmp
stc
add
mov
jle
add
enter
daa
xor
lahf
rol
cmps
jg
adc
or
ins
dec
push
and
mov
out
and
int
int
aaa
pusha
ss
int
shr
push
popf
cmc
push
imul
pop
or
adc
std
mov
retf
scas
add
inc
add
repnz
pop
jae
jmp
and
daa
push
dec
dec
adc
mov
push
pop
fnsave
paddb
je
inc
mov
inc
inc
imul
adc
xor
out
lock
arpl
call
add
out
inc
in
lock
push
add
pusha
or
adc
inc
sub
inc
popa
cmps
cmp
inc
pop
ret
pop
dec
movs
fcom
adc
xor
ret
adc
loop
add
cmp
or
seto
push
or
push
inc
ins
and
pop
sub
adc
mov
test
and
inc
mov
push
in
add
push
fs
fistp
movs
push
std
push
jge
add
dec
and
fisttp
inc
jno
addr16
aas
in
ds
sbb
push
js
push
fwait
sub
pop
or
push
enter
inc
pop
and
xor
mov
mov
in
imul
jmp
and
scas
sub
sub
aaa
or
add
add
daa
mov
push
test
sbb
sqrtps
mov
repnz
xor
add
and
leave
lods
fs
adc
repnz
fs
mov
jb
xor
int3
sbb
cmp
cmp
dec
cwde
into
sbb
pushf
pushf
mov
shl
dec
dec
inc
sahf
sbb
and
stc
xor
pop
jle
popa
daa
daa
mov
aas
pop
je
mov
pop
jecxz
push
test
push
push
xchg
add
lds
push
scas
leave
sub
jg
cmp
dec
test
dec
sub
add
inc
inc
cmp
jno
sbb
imul
dec
pop
xor
push
adc
cmps
gs
dec
cmovns
adc
and
jle
dec
jae
enter
add
sbb
lods
push
popa
jg
jg
mov
jg
mov
add
or
mov
jnp
push
popa
ins
jne
add
or
jmp
sub
and
ins
lock
(bad)
or
loopne
cmp
mov
adc
or
dec
enter
jo
add
sub
cmp
enter
sbb
xchg
mov
dec
or
push
adc
or
dec
ret
test
rcl
xchg
fwait
daa
loope
and
fwait
add
test
pop
xor
adc
dec
jae
push
popf
out
imul
fild
iret
dec
imul
outs
jno
push
fucom
mov
mov
in
inc
imul
add
fisubr
mov
stos
and
xor
or
scas
lds
icebp
push
inc
mov
fwait
adc
add
or
movs
cmp
inc
add
mov
retf
mov
add
fstp
arpl
ficom
xchg
pop
xor
fld
pop
adc
or
ja
mov
add
mov
dec
popa
inc
ret
fist
mov
es
jo
xor
cmp
addr16
mov
popa
imul
and
pop
mov
mov
shl
or
dec
or
adc
push
and
int3
sahf
adc
inc
ret
sub
arpl
push
outs
xchg
adc
sub
sti
(bad)
aaa
xor
adc
dec
ins
mov
ss
jns
or
or
push
in
sub
xchg
push
xor
mov
test
or
icebp
jmp
gs
ret
xchg
xor
ror
xor
push
add
sub
add
bound
mov
outs
(bad)
push
fcomp
test
and
fwait
pop
retf
cmp
jno
mov
or
and
cmps
(bad)
pop
pop
and
sub
add
fistp
cmp
adc
add
sbb
aaa
add
sbb
pop
push
xor
dec
arpl
jns
sbb
mov
add
dec
inc
mov
or
inc
imul
xor
inc
ret
sti
int3
lock
sbb
pop
je
inc
and
call
ss
sub
push
jo
imul
push
jge
popf
jmp
mov
pusha
jmp
mov
outs
adc
push
cwde
add
nop
push
ds
cmp
cs
add
and
je
inc
movs
scas
add
enter
mov
(bad)
in
mov
(bad)
in
xchg
or
or
ins
mov
add
out
out
mov
add
ja
inc
adc
xor
xor
cmp
mov
add
(bad)
inc
lahf
scas
pop
xchg
rol
add
mov
inc
mov
push
jne
mov
inc
pop
fwait
xor
cld
daa
fadd
and
in
jge
cdq
sbb
jg
mov
adc
add
(bad)
cmp
jne
lea
ror
cwde
and
add
rcl
ficom
in
jle
and
mov
jne
and
loop
mov
or
mov
push
and
neg
test
adc
cmp
data16
xlat
in
or
adc
add
cdq
ret
xor
inc
lahf
sub
and
mov
sub
sahf
cmp
dec
loopne
push
sbb
adc
xchg
out
cmp
mov
push
aaa
jp
mov
inc
xchg
inc
rcl
mov
adc
outs
cmp
ror
xchg
sbb
mov
inc
(bad)
mov
movzx
add
cmp
or
dec
cmp
(bad)
cmp
pusha
pop
cmp
sub
fcomp
clc
sub
in
xor
shr
xchg
push
or
lock
mov
and
in
mov
xor
out
mov
pop
cmp
adc
sub
mov
push
push
aad
xor
fiadd
xchg
pop
and
mov
mov
xor
and
or
pop
push
aas
js
out
test
jle
stos
jo
pop
xchg
femms
outs
adc
inc
add
(bad)
mov
and
lock
bnd
mov
push
inc
sbb
lock
mov
or
repnz
out
clc
sub
lds
into
adc
cmpps
je
dec
inc
in
clc
mov
or
add
dec
cmp
or
and
mov
or
or
cld
mov
dec
mov
sub
jno
cmp
(bad)
adc
fsubr
mov
pop
jnp
xchg
mov
lea
ret
mov
cmp
push
test
ret
inc
inc
cdq
(bad)
es
or
dec
or
leave
je
ret
add
retf
sbb
mov
aam
or
jge
ror
ins
dec
pop
cmps
fiadd
add
cmp
mov
sbb
cmp
arpl
sbb
in
(bad)
xchg
vmread
jbe
in
ja
add
mov
cld
pop
cwde
push
xor
or
and
xor
jo
sti
add
sub
aas
cmp
stos
ss
pop
push
shl
mov
inc
test
js
ins
or
push
push
push
xchg
clc
ins
inc
adc
fs
or
or
xchg
push
call
iret
jle
xor
or
push
adc
stos
into
call
(bad)
cwde
das
les
stos
out
imul
push
bnd
int
inc
fbld
sbb
jnp
and
add
and
call
sbb
iret
mov
clc
inc
sub
sbb
(bad)
jmp
adc
test
cs
adc
(bad)
pop
in
cmp
jne
mov
jmp
es
test
jmp
(bad)
xchg
call
ds
sti
js
sete
ret
sbb
mov
fadd
push
and
clc
jl
inc
rcl
add
repnz
test
ds
dec
add
and
loop
popf
and
and
xchg
rol
fbstp
not
inc
mov
sub
icebp
adc
push
xor
repnz
scas
mov
in
mov
movs
cmp
pop
sub
adc
jo
mov
mov
or
cld
fs
sub
and
dec
iret
push
xor
jg
inc
sbb
lods
repz
or
or
and
push
adc
inc
pop
adc
xor
scas
test
fild
xchg
cmp
pop
and
and
jne
arpl
pop
dec
mov
push
mov
pop
cmp
test
pop
xchg
out
stos
rcl
aad
dec
jg
inc
adc
xchg
and
ja
adc
add
ret
and
ja
push
push
add
fcomp
fdiv
add
mov
ss
dec
lock
pop
pop
mov
call
call
div
jmp
ret
(bad)
call
clc
repz
imul
xlat
out
inc
or
sbb
sbb
ror
repz
out
je
(bad)
mov
mov
call
cdq
or
lock
add
dec
daa
mov
push
cs
push
sub
aaa
and
test
gs
inc
xchg
gs
mov
out
je
mov
adc
sbb
push
nop
inc
or
mov
adc
adc
popa
es
xor
sub
andnps
fisub
cwde
jnp
jne
add
pop
cmp
shr
inc
in
(bad)
mov
and
push
inc
jo
add
mov
in
sub
sub
and
add
inc
(bad)
pop
data16
lea
cmp
ds
lods
mov
enter
out
in
sbb
xchg
sub
inc
sbb
adc
add
aaa
xor
out
repz
shl
out
test
and
mov
rcr
push
adc
or
enter
ss
xor
sub
std
(bad)
(bad)
fiadd
mov
pop
or
jl
and
adc
(bad)
daa
movzx
ds
icebp
xchg
xchg
mov
pop
mov
mov
or
into
pushf
mov
sbb
dec
cmp
push
or
ds
sbb
fdiv
adc
jle
sbb
cmp
mov
push
(bad)
mov
push
jle
push
jecxz
cmp
loope
push
push
xor
xor
dec
(bad)
js
mov
aam
xor
int
mov
sbb
push
jge
add
xchg
rol
push
test
pop
ret
add
mov
xor
sub
ss
sbb
or
gs
loopne
ins
fs
out
add
inc
mov
push
and
aaa
add
addr16
jb
jo
into
and
mov
out
(bad)
out
push
outs
and
mov
xchg
mov
gs
outs
pop
sub
fs
movs
cmp
and
mov
cmps
and
mov
rcr
mov
out
mov
add
sbb
popf
out
cmp
mov
sub
call
jb
lods
int3
es
pop
pop
jmp
mov
mov
cmp
enter
push
mov
loop
es
adc
js
mov
neg
sbb
ds
jl
push
or
push
js
loopne
addr16
movs
and
add
dec
and
add
cwde
gs
int3
adc
inc
push
popa
imul
xchg
and
or
mov
outs
push
jns
ret
xchg
inc
push
popa
ds
ror
dec
mov
sub
mov
adc
arpl
inc
ins
popa
jae
imul
pop
fidiv
jae
popf
mov
add
pop
nop
loopne
dec
sbb
dec
add
gs
bound
mov
scas
jp
push
lods
ja
clc
mov
or
clc
inc
add
fld
dec
xor
dec
ins
gs
inc
fdiv
dec
push
int3
mov
outs
loopne
ins
cs
dec
add
xchg
ins
jno
mov
ficom
es
adc
mov
nop
mov
push
cld
outs
es
sbb
jo
sbb
movs
rcr
xchg
cmp
xchg
add
sbb
gs
int3
inc
loopne
jo
xchg
or
outs
arpl
loope
xchg
ror
or
loopne
push
mov
push
pop
xor
pop
push
test
ins
stc
jmp
cmps
or
iret
loopne
push
imul
push
dec
clc
iret
inc
cwde
and
into
sahf
or
aad
hlt
movzx
add
pop
call
lods
mov
cmp
je
mov
mov
(bad)
jo
or
fisttp
movzx
push
lea
xlat
in
in
or
in
xlat
cmp
push
dec
cmp
adc
pop
or
aaa
mov
xor
dec
test
jl
inc
mov
or
je
adc
or
gs
int3
sbb
and
hlt
mov
fsubrp
add
call
jne
xchg
add
xchg
int
jg
adc
sub
mov
jo
out
sti
das
cld
xor
mov
inc
je
inc
inc
lock
out
in
push
ins
leave
test
and
or
jle
test
inc
stos
mov
pusha
mov
push
push
cli
mov
cmp
fmul
mov
push
push
loop
mov
aam
je
popa
shl
les
mov
(bad)
(bad)
fistp
repnz
push
mov
pop
mov
jl
mov
mov
pop
sar
sbb
mov
pop
jb
or
mov
pop
xchg
or
add
pop
mov
stc
cmp
test
pop
xor
inc
mov
in
jle
imul
shr
xor
push
ja
or
in
test
cwde
cmp
loop
cs
bound
cmp
ins
mov
test
fs
or
inc
imul
inc
and
mov
pop
cmp
je
cmp
lea
loopne
mov
or
add
pop
mov
std
(bad)
je
mov
dec
or
add
mov
mov
or
loopne
push
or
inc
sbb
stos
push
nop
bswap
or
push
loopne
jle
idiv
xor
popf
aaa
(bad)
stos
cmp
pusha
(bad)
or
ja
shr
pusha
pushf
aaa
inc
add
dec
jne
xor
or
in
dec
in
push
(bad)
bound
je
leave
sahf
leave
and
daa
cmps
and
jne
repnz
pop
mov
sub
xor
and
adc
fild
sbb
push
ret
cld
mov
pusha
fistp
enter
and
mov
in
push
mov
xor
sub
mov
cmp
sbb
sbb
imul
xor
and
scas
inc
or
mov
jnp
push
mov
jmp
xor
mov
pop
push
test
ret
mov
push
imul
pusha
and
fwait
xor
pop
push
scas
inc
or
lods
fisub
dec
mov
lods
push
sub
ret
mov
es
mov
add
push
clc
or
fdivr
enter
mov
sbb
loopne
xor
and
xchg
cmp
dec
and
jbe
xchg
inc
sbb
pop
mov
add
cmp
jne
aaa
into
pop
push
int3
or
add
mov
cmc
push
bound
daa
loopne
sbb
(bad)
repz
jl
pusha
sub
push
iret
repz
cmp
cwde
cld
popa
inc
or
ins
xor
push
mov
jo
inc
(bad)
lahf
mov
or
ret
cmp
subps
add
cmp
enter
add
jo
jp
outs
and
movs
outs
xor
sbb
cmp
je
xchg
pop
lea
jo
sub
pop
jno
and
mov
sbb
add
or
ins
sbb
rol
mov
pop
jge
or
push
mov
inc
mov
stc
sbb
add
jl
cmp
test
fisttp
pop
(bad)
pushf
sbb
inc
add
jmp
movs
cmps
stos
movzx
cmp
ins
mov
out
jbe
scas
pop
(bad)
mov
je
sbb
aas
rcr
cmp
sub
jb
je
add
mov
dec
mov
jmp
mov
jmp
mov
jmp
push
adc
xor
je
sbb
je
jg
stos
mov
sbb
mov
jmp
mov
jmp
daa
shl
pusha
pop
add
movs
pop
test
dec
out
(bad)
retf
push
out
addr16
pop
and
addr16
inc
add
movs
out
jge
mov
push
imul
outs
xor
out
sub
sbb
xchg
ja
pop
adc
aas
sub
sub
aaa
mov
loopne
sub
stc
xchg
push
adc
ror
imul
pop
mov
ret
inc
dec
cmp
jne
sbb
ret
(bad)
(bad)
push
cwde
jmp
test
add
test
mov
out
je
jne
idiv
and
xor
mov
loope
or
cmp
inc
es
rcl
mov
add
jmp
adc
adc
inc
(bad)
les
adc
mov
cdq
fld
dec
fadd
je
mov
mov
pop
das
xlat
mov
jno
adc
cmp
push
movzx
xor
or
mov
cmp
or
icebp
add
jo
les
pop
mov
imul
sub
xor
sub
or
fld
shr
add
inc
movs
cwde
sbb
mov
jne
fiadd
ret
daa
mov
fst
clc
and
dec
mov
mov
stc
mov
add
xor
sub
std
push
and
jmp
and
and
aas
in
xchg
sub
(bad)
and
rcr
cmp
arpl
mov
int
cmp
shr
rol
sub
sub
dec
aam
xor
sbb
dec
xor
adc
enter
stc
fld
push
aad
mov
xor
pop
fisubr
sbb
test
add
xor
es
pop
mov
ror
fist
and
adc
test
push
cmp
and
mov
js
ret
cmc
je
and
and
dec
or
pusha
sbb
mov
addr16
mov
iret
add
jecxz
popw
sub
xor
mov
xor
dec
inc
add
mov
adc
cli
cmp
std
pop
dec
push
pusha
push
je
sub
data16
xchg
add
cmp
push
dec
fisttp
mov
fiadd
pop
inc
sbb
or
ins
fdiv
xchg
js
pushf
jae
shl
xor
(bad)
mov
xor
sbb
in
ss
das
leave
popa
mov
or
add
and
pop
jmp
inc
js
pop
cmp
push
sbb
je
sbb
or
add
add
xor
cmovbe
dec
jbe
pop
mov
or
cmc
mov
jo
dec
cwde
adc
jnp
push
les
and
jo
add
adc
lods
ror
cmp
add
sti
in
sbb
or
inc
mov
xchg
imul
out
hlt
add
hlt
nop
aam
lock
mov
je
dec
cmp
pop
push
push
push
bound
iret
xor
or
adc
pop
shl
xor
out
and
ret
xor
add
aam
das
sar
in
pop
add
clc
sub
mov
in
daa
mov
cs
sahf
je
or
add
or
cmps
cmp
ror
sub
dec
adc
into
movs
xchg
and
push
add
dec
repnz
jo
rcr
sub
and
clc
dec
cmp
jnp
rcr
sub
sub
inc
jmp
fmul
fstp
inc
mov
xor
jno
mov
shl
sub
or
adc
mov
fldcw
mov
dec
jne
adc
or
push
pusha
rol
jae
pop
sub
mov
outs
or
in
pop
bound
cmp
and
mov
pusha
sub
aaa
stos
mul
test
jne
mov
movs
inc
jmp
inc
dec
jne
xor
jnp
pop
dec
or
mov
(bad)
or
sbb
jns
lods
fdiv
push
mov
out
mov
xchg
test
adc
pop
push
cmp
das
lock
lahf
icebp
data16
mov
sub
pop
ror
mov
sub
fisub
sub
loope
inc
mov
cmp
mov
add
(bad)
mov
cmp
test
test
pop
push
mov
pop
adc
leave
das
xchg
push
and
mov
lock
ins
or
test
rcl
ret
imul
ins
iret
inc
sbb
icebp
cmps
add
push
jbe
or
add
jecxz
mov
lea
or
xchg
call
lods
mov
xor
cmps
sub
in
lock
dec
push
jbe
and
out
ficomp
inc
add
and
aam
add
pop
out
fidivr
imul
cs
xor
sbb
mov
mov
outs
push
cmps
inc
jne
mov
inc
shl
jl
aad
push
xchg
pop
retf
adc
iret
ins
and
sbb
mov
add
into
popa
mov
dec
retf
mov
dec
adc
inc
cmp
ins
xchg
scas
push
push
call
cmp
push
loop
push
mov
push
in
retf
mov
dec
int
cwde
repz
js
shl
sbb
cld
add
jecxz
test
je
push
add
add
mov
mov
adc
out
jns
add
add
and
push
bound
sub
sub
aas
adc
and
aas
adc
add
inc
mov
enter
das
sub
jns
adc
aas
xchg
and
xchg
cmp
ds
je
or
jecxz
push
sub
loopne
call
imul
inc
xor
push
add
movs
dec
xor
aas
cmp
loop
fcom
jbe
cmp
pop
popa
push
jle
add
cmp
or
jmp
imul
imul
scas
mov
(bad)
imul
sbb
push
xor
mov
mov
or
sub
push
xchg
cld
sbb
out
jmp
sub
pop
and
hlt
adc
xchg
add
push
xchg
pop
push
push
mov
enter
sub
iret
adc
push
lahf
or
mov
lock
adc
out
sahf
or
inc
jle
mov
out
mov
lahf
lahf
inc
jl
inc
dec
jmp
mov
dec
leave
mov
cmp
mov
inc
xchg
inc
aaa
mov
sbb
xor
mov
push
(bad)
mov
sahf
mov
xor
jnp
push
add
imul
in
xor
scas
shl
or
aas
jge
sbb
sbb
in
inc
test
push
add
or
sub
mov
leave
inc
test
add
add
test
cmp
cmps
std
dec
sub
adc
pop
push
ss
(bad)
pop
cmp
(bad)
aas
pop
push
add
ja
lock
mov
es
mov
cmp
or
or
push
xchg
imul
cli
pop
cmps
jno
popa
push
push
repnz
shl
fldz
fstp
cmp
inc
lods
movs
jbe
ss
ficom
add
pop
push
ja
lock
and
jmp
(bad)
jne
movd
add
mov
fistp
sub
xor
add
jge
dec
pop
jno
(bad)
pop
imul
push
pop
adc
clc
push
dec
mov
sub
add
push
stos
adc
sub
dec
mov
sahf
jle
add
movs
daa
and
test
jecxz
add
fild
inc
in
inc
xchg
sar
cmp
add
popa
scas
rol
xor
pop
mov
pop
std
les
mov
add
push
adc
pshufw
loop
mov
xor
adc
add
idiv
sbb
mov
fsub
push
mov
lods
push
adc
jge
xor
lahf
(bad)
xchg
fadd
xor
adc
sti
sbb
push
and
adc
push
or
pop
or
adc
xor
xchg
xor
lds
out
xchg
adc
cmp
test
add
pop
aad
hlt
dec
add
add
mov
add
pop
jo
idiv
push
jae
(bad)
sub
sti
call
mov
sar
in
mov
pop
mov
xor
jnp
jmp
(bad)
jge
add
outs
or
je
jns
and
pop
fsub
aas
jge
and
dec
cmp
cmc
jg
jne
pop
xchg
shr
push
and
inc
std
or
push
sar
arpl
dec
clc
(bad)
(bad)
xchg
xor
mov
aad
push
xchg
inc
rol
push
icebp
cmp
add
push
aas
aad
clc
lea
ja
pop
and
add
loopne
outs
push
ret
bound
outs
daa
movzx
loope
in
add
lahf
cmp
mov
and
add
popf
cmps
mov
and
and
cmps
jbe
add
lods
dec
lahf
push
mov
add
in
loopne
mov
iret
or
xchg
push
test
leave
cmp
leave
mov
xor
push
inc
mov
push
or
mov
dec
shl
or
pop
iret
dec
or
xor
dec
cld
dec
fild
push
leave
add
xor
(bad)
dec
pop
push
xchg
or
sbb
cs
ret
cmps
xchg
add
pop
inc
or
not
out
jle
outs
xchg
fsubr
jg
loope
or
outs
out
push
repnz
add
or
(bad)
jge
or
cmp
jne
int
push
rcr
iret
cmovl
rol
push
cmp
loopne
adc
mov
cli
cmp
out
push
loop
push
or
aas
xadd
cmp
(bad)
js
add
loope
add
xchg
add
xchg
test
jge
mov
ins
mul
add
pushf
das
stos
push
jo
pusha
sbb
push
xchg
adc
je
adc
stc
push
fsubr
rol
pop
xor
outs
jne
gs
je
jb
add
xor
cs
jg
aaa
mov
inc
inc
in
dec
outs
jbe
dec
gs
(bad)
adc
xchg
or
sub
rcl
push
gs
outs
pop
pop
lods
(bad)
pusha
add
dec
shr
sti
inc
outs
xor
jae
inc
outs
ins
ins
arpl
outs
jae
cmp
ret
rcr
or
pop
div
or
lahf
xor
inc
jne
and
fsubr
bound
das
dec
push
xchg
xchg
push
mov
and
loopne
mov
push
dec
push
pop
adc
cmps
cmps
bound
call
and
pop
xor
or
movs
lods
pop
movs
xor
cmp
sub
je
pop
push
jae
pop
out
pop
xor
pop
push
outs
inc
adc
pop
dec
add
sub
add
aaa
pop
adc
jge
mov
pop
adc
push
dec
imul
stos
cs
pop
outs
push
data16
sbb
add
cmp
and
xor
jo
call
and
and
(bad)
out
and
push
popaw
jne
je
inc
mov
mov
fidiv
push
cmc
dec
outs
or
inc
adc
ss
pop
xor
inc
or
fsubr
mov
mov
bound
or
push
or
jge
push
inc
cmps
pop
mov
cmps
into
push
fcmovnbe
mov
fistp
xor
sub
neg
mov
in
popw
jbe
add
lock
push
push
or
pop
lahf
js
jne
cmps
aam
mov
adc
imul
push
add
sub
push
sub
dec
popa
outs
popa
addr16
addr16
in
mov
sbb
jo
add
jo
jne
iret
mov
fisttp
jo
mov
add
inc
test
rcr
pop
and
xchg
(bad)
in
pusha
ss
int
mov
cli
mov
and
or
inc
imul
add
mov
lods
scas
add
or
(bad)
adc
mov
outs
shl
push
cwde
sahf
sub
ret
dec
pop
lahf
lea
sahf
sub
pop
adc
push
inc
ret
int
add
fdiv
sbb
push
push
in
push
add
pop
and
xchg
nop
fisttp
inc
out
int3
dec
inc
add
push
add
ins
add
adc
jae
inc
cmps
pop
mov
popa
dec
dec
mov
inc
dec
xchg
cmc
xchg
stos
xchg
jecxz
xchg
lock
sbb
sbb
pusha
scas
mov
ins
or
adc
or
inc
lar
add
ins
inc
add
push
ds
pop
pop
push
jno
xchg
pop
and
mov
adc
adc
(bad)
pop
add
adc
mov
sbb
and
inc
js
push
outs
imul
fcmovne
dec
call
clc
cwde
push
add
push
push
fwait
mov
mov
sub
add
xor
(bad)
nop
ret
adc
stc
imul
outs
sub
mov
dec
ss
aad
pop
sub
add
inc
and
test
add
shl
repnz
arpl
pop
cmp
enter
xchg
movs
push
fstp
xlat
or
cs
mov
pop
bswap
xchg
xchg
xchg
dec
mov
or
leave
leave
leave
push
mov
in
fs
jle
(bad)
jns
xor
dec
pop
or
pop
cmp
cmp
pop
and
icebp
sub
stos
dec
inc
sahf
pushf
in
pusha
xor
and
mov
popa
ss
loope
(bad)
fsubr
xchg
push
xchg
fiadd
dec
mov
push
fwait
pop
dec
xsavec
inc
adc
xor
xor
xor
jbe
dec
or
shl
inc
add
cmp
shr
jno
or
push
xchg
cmps
arpl
pop
mov
shr
xor
mov
sbb
mov
mov
dec
enter
add
addr16
int
int3
push
adc
or
inc
push
popa
jg
jl
or
jg
pusha
dec
and
cmp
add
fs
mov
mov
arpl
inc
mov
or
hlt
das
adc
sbb
push
stc
ins
rcr
cmp
outs
pop
or
jp
int3
mov
int
add
ja
add
mov
pusha
loopne
mov
inc
jae
or
ror
out
in
mov
movs
out
xchg
int
add
push
or
dec
sbb
mov
das
push
fwait
or
out
and
add
popa
arpl
test
in
sub
inc
or
aam
dec
jae
ret
adc
test
in
or
imul
jb
mov
add
sbb
mov
ror
imul
add
fimul
inc
add
ror
stos
and
imul
xchg
enter
mov
inc
inc
js
jo
inc
add
retf
mov
cmp
imul
add
adc
push
xor
in
dec
pop
xor
mov
or
and
cmp
ja
and
cmp
push
inc
jae
fcmovnb
ins
lds
dec
popa
inc
xchg
inc
dec
jecxz
popa
inc
popa
add
sbb
nop
add
jo
sar
push
fs
ins
mov
imul
mov
pushw
cmp
test
dec
or
rol
daa
jns
adc
test
sahf
adc
xor
or
jge
mov
(bad)
and
hlt
sbb
inc
call
dec
or
adc
movs
add
and
popa
pop
xchg
or
pop
sub
clc
hlt
fild
mov
push
jb
ins
test
jecxz
cmp
cmp
or
or
cmps
out
adc
aaa
arpl
add
adc
pop
pop
and
ss
cmp
push
or
imul
lea
adc
xchg
pop
imul
jecxz
cmps
add
lea
mov
or
or
mov
test
mov
movs
push
jmp
lods
test
pop
popa
dec
arpl
loope
dec
mov
inc
leave
mov
push
aas
ret
aam
cmps
(bad)
pop
ret
push
fstp
call
mov
outs
mov
add
pop
je
cmp
cmps
xchg
pushf
into
sbb
add
pop
xor
push
dec
sbb
add
shl
jae
add
pusha
push
pop
movs
retf
cmp
fs
add
mov
add
or
fwait
pop
mov
ror
jg
jmp
ror
out
inc
ja
test
jo
cmps
stc
mov
stc
daa
mov
jae
push
popf
inc
test
aad
dec
imul
shl
shl
sub
or
add
push
nop
gs
jge
adc
pop
push
fsubr
pop
push
(bad)
mov
add
sar
inc
movs
sar
and
(bad)
xchg
sub
loopne
cwde
mov
das
iret
sub
(bad)
shl
mov
dec
push
add
add
and
add
jo
add
add
mov
das
ror
test
stc
mov
loopne
pop
xchg
fisttp
xchg
mov
add
push
add
adc
bound
lea
add
or
add
and
and
and
xchg
mov
xor
add
sbb
push
add
test
loopne
cmps
push
add
pop
pop
jnp
mov
inc
inc
push
je
cmp
outs
scas
push
movs
es
das
in
(bad)
adc
inc
inc
push
outs
out
push
inc
cs
add
push
add
int3
ja
test
and
sub
push
lds
pop
mov
xor
jo
adc
shl
(bad)
mov
adc
ins
inc
shl
(bad)
adc
(bad)
adc
scas
adc
retf
add
ss
test
dec
ja
cmps
loop
ins
addr16
push
shl
sti
jmp
es
outs
ja
fisttp
inc
loope
addr16
in
dec
push
push
add
pop
dec
hlt
or
push
ja
push
jns
mov
ja
add
push
adc
imul
adc
push
mov
cmp
bsr
pop
add
pop
cmc
mov
sahf
push
adc
leave
dec
mov
sahf
cmove
les
jno
stos
jb
repnz
add
test
sbb
mov
pushf
mov
iret
pop
je
pusha
sahf
pushf
pushf
pushf
test
dec
dec
inc
gs
(bad)
jmp
push
lock
pop
dec
mov
mov
out
fimul
push
xchg
push
add
push
jae
scas
leave
sub
cmp
push
out
or
jae
shl
cld
or
sbb
pop
inc
and
and
or
inc
add
repz
mov
adc
mov
jnp
cmp
bound
jo
jmp
mov
pop
rol
ja
add
adc
and
addr16
add
mov
push
loopne
rcl
jb
or
or
jae
adc
cmp
leave
fwait
push
add
mov
push
or
xchg
or
or
iret
sub
jno
add
and
jae
mov
repnz
push
jae
add
jae
xchg
add
sbb
add
jae
jo
and
ins
add
cmp
add
jae
fcmovnb
add
add
pusha
jae
call
xchg
add
push
add
add
inc
mov
lods
sub
mov
inc
adc
xor
jae
dec
sub
add
add
add
jae
add
adc
rcl
shl
add
dec
dec
jae
mov
or
cmp
dec
dec
sub
fld
sub
inc
(bad)
push
mov
fmul
sbb
push
add
xchg
imul
ret
(bad)
or
xchg
and
(bad)
sbb
push
fstp
xchg
pop
outs
lahf
push
mov
adc
push
add
mov
jae
daa
lea
mov
add
or
movs
fnstenv
jns
mov
mov
sub
cmp
das
pop
add
mov
and
inc
imul
mov
add
pop
movs
mov
mov
and
push
mov
popf
sbb
jp
xor
pop
push
ja
push
ja
pop
xlat
shr
mov
loopne
fadd
dec
or
loope
js
add
daa
lahf
gs
xor
xor
pop
xor
pop
fistp
xchg
sub
jb
fwait
dec
inc
sub
mov
adc
sub
test
mov
push
icebp
mov
push
add
and
clc
cmp
push
mov
mov
pop
(bad)
sbb
push
jl
add
pop
mov
mov
sbb
inc
pop
rol
push
mov
mov
fild
add
mov
in
pop
fs
or
xlat
sub
mov
pop
invlpg
rdmsr
and
jne
and
mov
and
or
dec
adc
or
addr16
add
or
ins
inc
std
sbb
mov
adc
arpl
inc
jg
and
adc
and
test
push
push
stos
or
sbb
in
mov
sbb
push
push
es
xchg
push
mov
cmps
int3
into
(bad)
dec
and
pop
ins
push
add
mov
lea
fadd
sahf
jo
add
push
lods
add
pop
stos
sbb
jne
xor
sbb
push
(bad)
xor
or
push
lock
pusha
ins
add
pop
pop
loop
push
sub
mov
ret
test
loope
sub
mov
add
adc
add
push
xchg
push
add
or
pop
pop
dec
or
pop
mov
pop
out
push
push
xor
push
pop
mov
dec
mov
mov
add
dec
xor
mov
inc
add
jae
mov
sub
fs
jo
sahf
add
cmc
mov
test
jnp
mov
mov
xchg
inc
sahf
pushf
mov
xchg
and
dec
stos
fild
mov
daa
daa
daa
stos
loope
mov
xchg
xchg
xchg
jbe
jecxz
mov
leave
leave
leave
sub
mov
or
inc
ins
xchg
pushf
fcomi
in
adc
mov
nop
leave
pop
test
inc
pop
rcl
stc
dec
sbb
pop
es
mov
ja
cmp
xor
dec
or
push
add
add
out
mov
jno
or
mov
daa
push
out
and
add
or
int
or
jb
or
mov
imul
aam
pushf
sahf
bound
add
jo
fldcw
cwde
fsub
or
add
ja
shr
ja
movs
add
jae
mov
jns
sbb
sbb
dec
xchg
or
inc
add
mov
leave
fwait
or
xor
dec
adc
pusha
add
adc
mov
dec
ins
movs
sub
and
jno
add
dec
mov
add
dec
shl
or
sub
or
dec
add
push
add
xchg
inc
or
inc
adc
lods
fistp
add
inc
ins
inc
add
pop
dec
cmp
mov
or
rcr
dec
adc
dec
xor
or
ret
mov
dec
xor
dec
jge
and
inc
adc
or
dec
xor
add
add
dec
xchg
push
add
sub
(bad)
mov
cmp
pusha
mov
test
add
ins
lea
mov
sub
and
dec
lock
imul
push
add
(bad)
sbb
or
dec
enter
out
call
mov
dec
pop
sub
dec
movs
mov
test
add
push
scas
sub
mov
les
push
sbb
or
enter
es
adc
ds
nop
push
mov
push
sub
pandn
dec
add
ror
push
push
jb
or
push
cmc
arpl
addr16
mov
cmp
or
outs
imul
jge
and
xor
xchg
and
push
xchg
push
call
push
in
inc
sub
and
xlat
fbld
xor
jne
outs
push
jns
cmp
rol
shl
sub
sbb
shr
dec
fs
xchg
mov
ret
or
mov
mov
repz
or
xor
ins
inc
ins
sub
inc
call
push
push
ins
mov
add
dec
dec
mov
aas
js
aam
inc
pusha
mov
xchg
push
or
fnstsw
xchg
add
out
push
scas
push
fild
and
pusha
xor
stos
leave
xor
pop
adc
imul
rcl
idiv
mov
add
push
push
push
test
je
adc
call
mov
mov
div
mov
or
mov
xor
mov
ss
mov
inc
jne
adc
inc
jmp
sbb
(bad)
fwait
sbb
mov
push
test
jle
mov
sbb
push
mov
pusha
movzx
dec
jne
inc
cmp
pavgb
dec
cli
jo
fs
xchg
add
or
pop
pop
pop
pop
(bad)
fild
enter
mov
pop
rcr
or
maxps
leave
push
add
fimul
add
xchg
(bad)
push
mov
pop
clc
mov
and
xchg
jbe
adc
push
adc
lea
inc
add
mov
mov
add
add
jle
inc
mov
hlt
xor
dec
adc
shl
xor
jbe
add
mov
mov
call
mov
lods
cdq
es
out
mov
jnp
lock
mov
dec
jne
and
aas
fcom
aam
add
mov
shr
aaa
cld
add
dec
mov
push
je
push
push
ja
(bad)
leave
push
je
je
add
call
push
bound
enter
mov
jae
xor
ss
ret
jge
mov
jmp
xchg
mov
pop
ret
inc
mov
add
adc
cli
cmp
cmp
sti
aas
mov
cmp
lock
int
and
and
cs
mov
(bad)
stos
push
push
mov
pop
jnp
fmul
push
dec
inc
push
push
xor
repz
movs
push
mov
cmp
add
mov
not
aaa
pusha
jl
inc
xor
push
mov
data16
mov
repnz
stos
mov
xor
inc
add
fsubr
inc
(bad)
pop
pop
mov
nop
fbstp
or
fisttp
jo
jp
push
jne
lahf
push
data16
mov
mov
neg
test
push
dec
inc
(bad)
mov
cld
ins
adc
mov
ins
mov
shr
jo
inc
adc
out
in
rol
push
mov
into
and
outs
add
xor
and
add
(bad)
pusha
scas
lea
out
jg
cmp
mov
mov
push
data16
pop
jg
add
jg
inc
xchg
scas
sar
punpckhdq
dec
ss
mov
or
fmul
or
xchg
ds
cwde
jo
stc
cmp
and
jo
sub
push
sub
adc
jb
leave
add
pop
sub
loopne
(bad)
pushf
fld
les
fstp
dec
sub
cmp
test
push
xchg
lock
inc
(bad)
retf
mov
cmp
xchg
lock
popa
imul
loope
pop
arpl
xchg
cmp
out
in
push
js
loop
jo
nop
das
sahf
push
xchg
fmul
cmps
out
lods
int3
ror
dec
cwde
fild
pushf
out
or
add
or
and
jl
or
sahf
jbe
cmp
pop
ins
clc
fwait
pop
neg
adc
add
sbb
pop
adc
push
dec
test
add
lldt
cmp
pop
js
cmp
test
test
adc
add
icebp
or
adc
pop
and
popf
xor
and
loopne
mov
cwde
sub
or
popa
mov
fadd
(bad)
movs
fild
add
out
stc
in
xor
add
push
mov
je
or
inc
xchg
and
adc
ret
sbb
loop
sar
jae
mov
jbe
add
mov
out
sbb
mov
aaa
cs
sub
push
adc
sub
jb
push
je
mov
pop
loopne
shl
sub
xchg
shl
mov
push
dec
cld
dec
jb
rcr
cld
lea
push
mov
pop
mov
pop
pop
pusha
inc
sar
loopne
mov
stos
mov
imul
call
or
push
adc
mov
adc
pop
pop
add
add
sbb
rol
int3
or
test
fdiv
loope
and
push
nop
fadd
mov
call
jmp
inc
lods
sahf
sti
push
fcmovnb
xchg
pop
dec
and
cs
mov
(bad)
fincstp
add
fs
popa
jb
nop
enter
jo
test
pop
arpl
std
jo
lea
cmp
xchg
sub
mov
inc
push
enter
pushf
inc
in
adc
sahf
mov
adc
cmp
sbb
inc
in
or
ret
push
inc
cdq
popa
mov
dec
test
jl
inc
mov
ja
fneni(8087
mov
imul
adc
mov
(bad)
data16
mov
add
add
dec
jne
sub
rcl
sbb
aas
jnp
push
shl
push
idiv
inc
or
cli
movaps
jae
mov
jmp
add
add
icebp
cmp
add
add
popa
les
push
jl
inc
xor
ret
cs
call
out
ins
(bad)
icebp
inc
or
out
inc
add
cmps
sbb
sub
jb
je
dec
je
pop
jmp
push
xor
or
(bad)
int3
jnp
adc
add
push
adc
add
push
lea
mov
cmp
add
std
push
or
fild
dec
(bad)
in
add
ins
int3
or
jp
lahf
clc
dec
popa
xor
add
xchg
mov
gs
cwde
jp
inc
out
xor
cmp
das
push
push
lock
jg
xor
loope
iret
jl
fsubr
push
mov
test
push
push
add
dec
lock
ins
xor
push
cmp
nop
add
jo
cmp
sub
add
fmul
and
push
ret
dec
inc
jecxz
bound
jecxz
test
jl
inc
xor
dec
push
test
(bad)
dec
mov
imul
sub
mov
inc
dec
jne
dec
push
xor
popa
inc
sbb
inc
jb
and
jbe
or
jae
or
sbb
add
add
outs
in
es
push
test
outs
xor
loope
ins
fimul
cmp
into
mov
mov
jns
cwde
push
adc
inc
sbb
in
pop
(bad)
mov
lahf
cmps
inc
jbe
cmp
adc
hlt
test
cmp
or
enter
iret
pop
ret
jno
mov
cs
js
jns
in
sbb
xor
jno
or
out
adc
imul
outs
loop
mov
movs
loopne
ja
test
mov
or
pop
in
(bad)
mov
mov
mov
fcom
iret
rol
inc
mov
sub
mov
inc
and
mov
mov
es
xor
aad
ja
test
fisub
mov
aaa
adc
and
nop
cmp
out
push
mov
adc
(bad)
sbb
adc
mov
inc
and
xchg
shr
pop
loopne
and
ins
jo
xchg
arpl
xor
adc
push
jl
pop
dec
xchg
dec
getsec
inc
jo
xlat
xchg
adc
in
sbb
jb
jne
ins
loop
pop
adc
adc
hlt
add
push
jne
adc
movs
hlt
mov
and
jmp
push
aas
cld
je
and
xor
les
mov
add
lea
outs
mov
or
add
arpl
addr16
or
lock
sbb
pop
retf
add
xchg
pushf
sub
mov
xor
jecxz
js
jp
or
and
out
in
retf
add
clc
push
js
xor
jns
and
dec
leave
outs
inc
hlt
push
jbe
popf
lods
xor
or
and
cmp
push
jo
add
arpl
gs
pop
push
push
add
xor
outs
dec
je
imul
or
mov
jbe
and
movs
cmps
arpl
inc
jo
stos
and
(bad)
iret
cwde
mov
adc
out
or
mov
(bad)
popa
mov
mov
xchg
clc
cmp
push
xor
popf
add
sbb
mov
adc
inc
push
iret
or
mov
pusha
movs
sti
mov
inc
cmc
fbld
sub
mov
adc
pop
es
(bad)
mov
push
das
adc
fisubr
mov
ret
das
je
arpl
mov
push
add
jle
sbb
sub
into
fmul
lea
jg
ds
out
sahf
mov
dec
adc
xor
inc
xchg
pop
nop
mov
ret
add
pushf
mov
neg
dec
inc
movs
shr
dec
cmp
ja
lahf
cmp
fwait
push
mov
push
pop
mov
mov
ret
cmp
xor
in
jecxz
test
push
scas
mov
jecxz
mov
inc
mov
inc
pop
and
fadd
inc
inc
sub
push
inc
repz
sub
pop
aas
leave
xor
je
pop
sbb
add
enter
mov
pusha
es
jno
rcl
jne
call
mov
(bad)
dec
in
pop
cmp
adc
pusha
cmp
fnstsw
adc
shl
inc
mov
push
out
jae
xchg
loope
or
adc
cmp
xlat
mov
add
mov
leave
adc
popa
in
adc
cli
or
cmp
or
mov
xchg
jl
pop
mov
inc
test
popa
inc
and
repz
cmp
push
mov
push
es
jne
xchg
add
adc
jl
xchg
add
dec
or
jmp
mov
aaa
mov
inc
dec
aas
lea
cmp
mov
mov
jl
inc
and
pop
fidivr
adc
sub
fmul
dec
lea
or
push
sbb
cs
cwde
sbb
std
ins
jmp
pop
stos
mov
cmp
(bad)
shl
fild
xor
movs
xchg
push
and
xor
inc
mov
push
mov
mov
in
xchg
test
add
adc
inc
xor
ret
inc
push
add
retf
add
xor
or
and
call
cmp
and
add
and
and
stos
stos
(bad)
aas
inc
test
add
and
sub
adc
pop
aas
aam
push
jmp
ja
xor
js
lods
cmps
dec
fist
jg
sub
je
push
or
and
push
jmp
mov
mov
mov
jmp
sbb
or
int
stos
jae
xor
cwde
stos
sbb
cs
jae
or
or
add
xchg
or
les
xor
add
test
add
inc
inc
inc
inc
push
mov
js
push
lods
das
add
push
pusha
loope
pop
jle
pop
or
push
xchg
adc
pop
popf
js
loopne
test
ja
pop
mov
jl
test
(bad)
scas
add
sbb
in
icebp
call
mov
pop
xor
int3
sub
mov
inc
add
pushf
pop
xor
inc
and
dec
cmp
add
add
mov
fist
call
xchg
inc
outs
jne
gs
cmps
add
popa
je
jb
mov
inc
neg
dec
popa
outs
popa
addr16
sub
cmp
inc
cmp
loope
hlt
dec
outs
jbe
dec
gs
aad
rol
addr16
adc
pop
in
jg
(bad)
aaa
sbb
outs
jb
arpl
inc
outs
ins
ins
arpl
cmp
mov
push
retf
adc
outs
add
or
add
or
add
in
daa
add
jb
je
js
jo
(bad)
sub
push
cmp
push
lds
mov
add
leave
xchg
lock
adc
push
cmps
sbb
ja
and
lods
adc
loopne
pop
inc
gs
jb
jns
sbb
inc
ret
call
sub
jb
jle
pop
push
jae
pop
call
inc
rol
inc
sbb
movs
in
out
pusha
das
int3
dec
inc
sub
push
jbe
aas
outs
ins
add
xchg
std
xor
sub
push
dec
imul
mov
popa
imul
into
adc
lods
ret
aas
rcr
sub
mov
xor
jo
dec
xlat
and
sub
mov
ss
fisttp
shl
ins
je
pop
iret
add
xor
push
std
dec
outs
or
inc
cmp
ins
fdiv
push
cld
outs
fs
ja
mov
dec
bound
or
pop
push
push
add
inc
mov
iret
lock
inc
and
push
sti
pop
out
ins
in
mov
xor
mov
xor
sub
inc
mov
scas
sbb
inc
xor
ins
test
(bad)
push
inc
jmp
adc
repz
imul
adc
jp
or
inc
out
pop
push
adc
shr
pop
sbb
add
adc
xlat
mov
ss
add
add
inc
mov
dec
sbb
cmps
dec
add
and
mov
retf
adc
jnp
sbb
int
cwde
mov
sbb
cmc
or
or
fsubr
ins
imul
mov
dec
scas
add
push
sbb
xor
nop
mov
cmp
jmp
add
xor
in
das
pop
sub
je
inc
fisub
or
popf
mov
pop
cmp
popf
(bad)
lods
xlat
cs
(bad)
in
push
or
aam
fscale
inc
dec
cmove
add
lock
adc
inc
sub
inc
popa
scas
push
clc
inc
jns
cmp
pop
dec
push
cld
inc
pushf
push
push
add
sbb
xor
in
mov
xchg
xor
inc
jb
sbb
(bad)
jl
lea
sbb
outs
or
or
inc
pop
add
add
push
retf
ins
inc
cmp
retf
or
xchg
js
shl
rcl
cmp
rol
xor
xchg
out
add
test
std
das
push
mov
loope
and
test
mov
ins
call
push
push
push
mov
xchg
in
jecxz
call
adc
adc
mov
mov
and
fisub
mov
stos
retf
and
sub
and
cs
or
sbb
add
add
dec
sahf
(bad)
add
inc
cmp
mov
les
xor
xchg
mov
dec
inc
fimul
and
daa
and
mov
xchg
xchg
daa
sbb
leave
enter
mov
in
jmp
repnz
in
(bad)
sar
xor
loopne
sar
cmp
cmp
icebp
sub
cmp
pop
imul
fimul
push
mov
add
mov
pop
xchg
xchg
inc
xchg
inc
cmp
loopne
out
xor
dec
or
or
inc
dec
(bad)
or
add
add
outs
mov
or
mov
daa
gs
aaa
pop
add
ror
sahf
shl
cmovns
mov
outs
mov
dec
push
add
addr16
adc
or
sub
inc
jg
dec
and
add
xor
inc
es
add
fs
mov
mov
jne
arpl
sub
mov
adc
sub
cdq
jo
sub
add
pop
mov
outs
or
lds
stos
shl
test
ja
inc
xchg
movs
mov
sub
cmp
enter
add
out
out
or
xchg
add
ins
xchg
or
pusha
shr
inc
xchg
das
leave
fwait
(bad)
cmp
sbb
fwait
add
popa
arpl
cmp
inc
or
add
jae
mov
push
push
mov
iret
dec
imul
jp
mov
mov
mov
ror
imul
add
fcmovu
bound
push
lea
dec
add
pop
ror
xor
imul
xchg
push
xlat
fist
js
jo
or
or
xchg
mov
or
jae
dec
cdq
or
lods
or
arpl
xchg
xor
imul
jo
mov
fbstp
jl
and
dec
gs
and
xchg
fld
mul
xchg
inc
inc
or
sub
add
add
jo
and
aad
sar
dec
aaa
inc
jl
imul
lods
or
mov
mov
inc
mov
inc
inc
ror
and
or
sub
adc
xor
or
lea
dec
or
(bad)
push
mov
dec
ins
or
ret
fcmovne
jb
dec
or
arpl
and
sbb
xchg
stos
popa
pop
xchg
or
ror
xor
mov
or
ins
test
(bad)
shl
cmp
or
push
sbb
mov
fldcw
lods
mov
xchg
retf
scas
pop
sbb
pop
and
ss
mov
imul
test
or
pop
sub
cmp
(bad)
mov
mov
stos
mov
jp
gs
mov
or
aaa
mov
sub
sub
test
sbb
inc
cli
pop
push
jp
aad
sti
popaw
push
arpl
jns
imul
outs
outs
and
xor
retf
sbb
scas
in
inc
ret
ja
mov
in
pop
call
ror
jne
nop
jmp
mov
jmp
mov
std
cmps
jo
mov
les
stos
test
cmps
test
push
add
or
push
cld
dec
jnp
in
mov
mov
mov
sbb
or
(bad)
fistp
jmp
fstp
or
add
sbb
inc
and
lock
repnz
add
arpl
pop
pop
pop
ret
aas
daa
xor
xorps
xor
adc
inc
les
xchg
cwde
inc
inc
xor
lea
mov
push
les
out
push
push
adc
cld
mov
outs
jmp
dec
pop
or
aaa
loopne
bound
clc
inc
dec
jne
lds
jg
daa
adc
or
(bad)
jg
and
clc
dec
sub
jb
out
add
cmp
loopne
shl
rcl
pop
xor
or
cmp
or
add
inc
lea
out
fist
pop
jb
jmp
sbb
xor
rcl
sub
rcl
push
adc
xor
sub
xor
and
es
clc
scas
adc
sub
mov
and
out
adc
int3
fmul
sar
push
xor
ror
aas
add
int3
sar
push
loope
lock
lods
enter
ss
enter
(bad)
mov
das
shr
fs
push
xor
rol
sti
cmp
push
popa
sub
mov
test
pusha
fistp
test
jne
mov
mov
jg
sti
add
sub
push
jnp
aad
(bad)
ds
sti
xor
fdiv
scas
cmp
into
or
add
mov
sub
je
add
sub
jae
jne
test
mov
mov
loope
lods
and
or
mov
aaa
retf
jmp
sub
int3
loopne
xchg
push
jmp
(bad)
mov
add
sub
xor
scas
inc
ins
mov
cmp
rol
or
aaa
dec
or
sub
inc
xor
lea
inc
mov
push
and
xor
mov
pop
test
sete
int3
call
push
or
test
das
lock
outs
pusha
pop
lock
mov
test
jb
xchg
es
adc
lea
js
clc
sub
mov
cmp
jge
lock
mov
push
jmp
rol
jmp
movs
je
scas
enter
(bad)
(bad)
inc
jno
jo
in
mov
sbb
xor
xor
or
sub
shr
mov
lea
out
loop
push
fiadd
inc
sbb
push
push
mov
and
imul
call
pop
jle
adc
dec
inc
outs
ret
adc
mov
pusha
xchg
rcr
sbb
mov
out
ffreep
fst
les
add
shl
popf
popf
repz
in
lods
dec
push
loopne
stc
add
aas
enter
push
adc
mov
jecxz
jmp
(bad)
jnp
loop
not
sub
adc
pusha
adc
cs
test
xchg
repnz
ret
mov
lods
jns
xor
sbb
push
cmp
add
dec
push
(bad)
xlat
popa
add
xor
add
mov
xor
add
adc
(bad)
idiv
shl
das
test
setne
jne
loopne
mov
jne
dec
mov
mov
sar
(bad)
jmp
add
mov
fcomp
inc
mov
jne
inc
and
mov
adc
retf
mov
mov
push
jne
xbegin
js
ret
stc
ret
jmp
push
jp
sub
loope
pop
pop
mov
mov
fimul
and
mov
and
add
adc
sar
js
pusha
sbb
rcr
and
in
xchg
popa
inc
or
je
arpl
pop
int3
daa
inc
add
or
aam
dec
pop
hlt
sbb
pop
inc
push
jecxz
push
cmp
dec
xor
out
xor
adc
sbb
push
xor
shl
jmp
push
or
imul
out
int3
rol
fld
(bad)
out
or
add
push
in
std
das
shl
outs
add
je
imul
dec
shr
ja
push
jo
jb
ds
push
or
out
push
push
inc
add
fwait
pop
mov
jne
push
xchg
fisubr
ror
mov
shr
xor
mov
jne
ins
mov
sbb
ret
mov
lahf
mov
mov
cli
pop
and
cmp
xchg
popf
out
das
push
push
call
(bad)
rol
xchg
cwde
mov
iret
in
mov
push
aad
test
add
adc
and
or
js
cwde
test
outs
pop
adc
xor
pushf
ss
sub
and
push
mov
clc
imul
inc
xor
mov
(bad)
adc
adc
cwde
xor
enter
jl
inc
xor
test
dec
test
fld
add
mov
cwde
inc
sbb
cs
dec
jne
xor
mov
cwde
test
int3
cs
jno
ror
mov
push
aad
ret
fdivr
cdq
mov
and
(bad)
(bad)
adc
add
popa
add
xchg
popa
and
addr16
int3
pop
mov
add
xchg
sbb
or
ss
xor
xor
xor
jg
adc
pusha
data16
or
mov
mov
pop
sbb
(bad)
movs
or
aas
add
jbe
add
cmp
inc
cmps
imul
mov
cmp
mov
push
sub
push
loop
cs
or
test
xor
sbb
sbb
lock
cmp
dec
cmps
into
ret
inc
adc
out
mov
daa
fsubp
enter
fsub
shl
pop
test
(bad)
push
cwde
fistp
mov
mov
add
jmp
fbld
sbb
test
inc
xchg
inc
test
je
jbe
addr16
clc
sbb
je
add
shl
ficomp
jne
fwait
mov
ret
sahf
inc
push
ret
popf
scas
mov
test
adc
pop
jo
inc
dec
sbb
add
int
sbb
dec
lods
xor
xchg
cmp
sub
out
sbb
enter
fsub
hlt
(bad)
jo
sub
jmp
(bad)
cmp
movaps
pop
pushf
add
jo
fs
enter
nop
or
cld
lods
loopne
mov
inc
ret
push
and
mov
aas
rol
adc
inc
or
cmp
es
and
xlat
pop
loope
mov
movs
adc
fs
or
mov
sub
ja
inc
mov
push
lds
push
cmp
jo
pop
mov
inc
in
jo
jl
mov
stos
mov
mov
jo
clc
rcr
ds
sub
lea
mov
jbe
in
ins
in
mov
adc
add
pusha
ja
call
movs
rol
outs
das
shl
div
leave
push
add
add
inc
sub
mov
push
jne
add
xor
(bad)
jge
setl
push
iret
adc
and
push
add
loop
in
mov
stos
shl
push
xor
test
sbb
adc
dec
cwde
push
xchg
push
adc
jmp
and
js
ins
mov
pop
xor
cmps
push
sti
sbb
(bad)
mov
push
mov
mov
mov
push
data16
pop
aas
mul
adc
add
dec
movzx
adc
shl
sub
push
(bad)
lods
jno
cmps
push
mov
(bad)
sbb
popaw
pop
loopne
fist
and
jle
clc
popf
mov
push
ins
iret
push
aad
mov
mov
dec
sub
ja
push
ja
lods
jbe
pop
xchg
dec
adc
int3
push
inc
mov
sbb
pop
inc
sbb
nop
sbb
jp
push
pushf
mov
add
cmp
ret
gs
push
cld
or
inc
add
sbb
lods
pusha
adc
retf
aas
mov
ss
mov
cdq
hlt
xor
xor
or
fisub
push
loop
inc
cmc
sahf
js
cli
outs
aam
mov
push
outs
adc
cmp
(bad)
fild
mov
enter
test
dec
(bad)
add
add
inc
dec
popa
ins
loopne
arpl
and
inc
inc
ins
ja
push
ret
mov
data16
fdivr
push
jns
dec
add
out
fistp
dec
outs
je
dec
gs
cmp
rcr
pop
aaa
out
xor
pop
or
lods
popf
mov
sbb
test
push
cmp
push
add
fucomp
push
loop
lock
adc
call
dec
lods
xchg
das
shl
push
das
cmp
out
push
mov
ins
push
je
repz
nop
test
or
sub
js
xchg
daa
loopne
push
jo
xchg
xchg
add
mov
gs
jle
popa
imul
or
mov
mov
sub
and
jb
(bad)
add
retf
or
ror
ins
cs
ins
sbb
rcr
test
xchg
outs
cmp
and
sub
adc
repz
outs
popa
adc
inc
imul
not
pop
cdq
loope
jmp
pop
in
dec
pusha
jns
or
inc
adc
loopne
add
sbb
add
dec
(bad)
ins
gs
adc
sbb
adc
dec
lahf
(bad)
fsub
cli
add
mov
lock
add
test
pop
ret
movzx
lea
jno
xchg
jne
mov
sub
outs
push
cmp
ja
sbb
mov
mov
xor
dec
jge
push
mov
add
adc
fadd
xor
aad
sbb
scas
sbb
call
sub
dec
jne
xor
pop
test
xor
cmp
pop
and
jnp
loopne
push
xor
xor
icebp
pop
in
adc
xchg
mov
pop
leave
mov
sbb
pop
dec
popa
sub
mov
pop
test
sbb
sub
pop
xchg
cmp
dec
mov
pop
xlat
add
sub
push
cs
inc
addr16
push
out
mov
bound
and
mov
and
dec
adc
lahf
mov
lea
movs
add
xlat
into
mov
enter
jge
push
xor
leave
scas
mov
aad
and
mov
out
ja
jecxz
inc
sub
fsubrp
ror
cmp
sbb
rol
add
hlt
mov
inc
xor
adc
inc
(bad)
adc
lock
adc
inc
lock
push
into
stc
mov
into
sub
pusha
mov
mov
ins
sub
mov
add
(bad)
inc
add
mov
cmp
sbb
cmp
pop
retf
es
inc
inc
jl
hlt
mov
mov
pop
rcl
push
mov
out
add
inc
push
aad
cmp
jne
mov
xor
add
push
cmp
jecxz
sbb
ins
xchg
in
add
push
sub
js
(bad)
or
or
or
and
ficom
push
sbb
inc
aaa
sbb
sbb
add
mov
mov
push
and
mov
fsubr
cmp
inc
sub
mov
inc
int3
addr16
mov
fmul
add
pop
repnz
push
mov
mov
dec
dec
pop
jge
mov
and
xchg
cmp
inc
jbe
xchg
pop
push
repz
lea
cmp
je
fisttp
inc
lock
inc
mov
outs
fsubr
xor
adc
sbb
aam
int3
loop
outs
pop
add
or
or
jl
sbb
mov
cs
pop
lods
js
or
aam
jmp
js
stos
mov
ja
push
xchg
test
ret
js
scas
mov
retf
outs
add
add
jnp
add
push
sub
sahf
add
pop
sahf
sti
jne
and
movs
sti
dec
or
adc
pop
pop
and
add
(bad)
mov
jmp
pop
push
mov
cmp
mov
mov
sbb
xor
movs
ss
imul
cmps
add
mov
jle
add
pop
jg
test
sbb
or
mov
add
sbb
sub
jo
or
fstp
scas
push
push
jl
xor
mov
(bad)
or
fucomp
dec
out
push
mov
dec
mov
xor
or
ss
add
add
adc
arpl
imul
sub
or
and
fdivr
dec
push
add
out
dec
add
inc
inc
adc
xor
adc
mov
pop
mov
sbb
push
or
jmp
call
cmp
ffree
or
and
icebp
xor
push
inc
or
setp
push
cmc
aam
jle
add
push
push
adc
(bad)
data16
sbb
cdq
cmc
push
bound
and
push
adc
out
(bad)
sbb
sub
and
pop
xor
pop
lahf
pop
xlat
or
jo
scas
xor
push
daa
cwde
pop
je
xchg
fwait
shr
das
sbb
jle
pusha
sbb
jbe
or
and
jge
enter
ds
shr
pop
shr
mov
or
inc
movs
add
enter
retf
and
mov
jg
jmp
jns
mov
leave
xor
sub
shr
lds
push
or
sbb
push
bound
std
int3
sbb
loopne
icebp
add
or
push
pushf
test
jne
js
sbb
adc
ret
aaa
add
and
mov
xor
data16
test
xchg
xor
aaa
pop
repnz
inc
add
cmp
and
mov
sbb
mov
int3
push
jl
add
mov
cmp
das
push
and
sbb
and
call
rcl
fimul
scas
rcl
lock
(bad)
dec
xchg
xchg
mov
repnz
nop
xor
sub
sbb
popf
add
mov
arpl
xchg
push
(bad)
mov
in
fadd
adc
push
or
jl
inc
les
mov
mov
lea
jp
fdiv
mov
pop
and
cmc
lock
es
cmp
adc
retf
mov
dec
(bad)
in
test
xchg
xor
arpl
clc
cmp
mov
test
mov
sbb
mov
xchg
xchg
push
mov
cmp
sub
lods
rcr
and
adc
xchg
jl
(bad)
pop
sbb
sub
test
popf
std
xchg
out
sti
add
inc
cmc
xchg
cmp
mov
cmp
nop
aam
test
mov
inc
rcr
sahf
pop
add
dec
pusha
dec
mov
push
jbe
push
mov
cli
std
daa
fmul
push
js
and
daa
add
daa
inc
(bad)
sub
pusha
inc
dec
jne
cmp
xor
ins
dec
pop
out
inc
pop
jmp
(bad)
jns
jmp
ret
sbb
mov
add
xor
and
fsubr
aad
cmps
add
jno
lock
and
mov
sub
push
mov
in
add
(bad)
add
or
inc
out
xchg
mov
outs
(bad)
test
fldcw
lods
aam
(bad)
mov
out
xlat
or
mov
inc
add
test
pop
xchg
addr16
adc
mov
add
push
mov
call
adc
inc
cs
lea
inc
inc
jmp
sbb
jmp
jno
xor
rcl
stos
add
push
fimul
add
stos
loopne
(bad)
pop
sbb
loop
loop
(bad)
pop
nop
(bad)
cmp
mov
sbb
js
push
mov
es
mov
pushf
add
xor
mov
push
xor
stos
inc
cmp
(bad)
sbb
cmp
adc
mov
xor
js
and
push
lea
or
mov
add
pop
mov
xor
adc
add
sbb
inc
or
xor
jo
shl
push
lahf
(bad)
out
cmp
mov
ja
pop
call
cwde
fsubr
push
out
push
pop
fucomp
fstp
pop
push
xchg
daa
jo
jle
mov
idiv
rol
aad
cmps
ja
das
jne
jmp
pop
pop
mov
cld
push
jg
fwait
jl
add
push
or
xlat
cmp
or
out
jo
call
ja
iret
repz
dec
push
push
push
pop
gs
mov
fiadd
sbb
cmp
out
daa
mov
pop
leave
pop
xchg
(bad)
push
mov
neg
push
test
lock
fist
cwde
(bad)
and
fadd
cdq
dec
cmps
sbb
jbe
jle
cmp
mov
push
jecxz
mov
jge
mov
fldenv
add
(bad)
pop
jae
neg
jmp
xchg
jo
jnp
push
rol
pop
mov
jmp
mov
(bad)
jne
es
sub
cmp
add
add
add
mov
fcmovu
pmuludq
pusha
es
je
add
add
push
loopne
jmp
ret
jmp
(bad)
or
jmp
inc
inc
ins
jno
add
or
or
sub
or
ss
xor
(bad)
enter
inc
add
mov
sub
xor
and
repnz
into
cmp
lods
and
dec
dec
xchg
shr
adc
arpl
cmp
or
mov
dec
jo
jmp
add
loope
pop
push
and
sete
dec
call
jnp
in
or
push
adc
(bad)
sub
mov
push
or
sub
pop
test
(bad)
nop
cmp
jl
dec
fs
sub
loop
cmp
xor
inc
jp
repnz
pusha
cmp
or
inc
xchg
(bad)
adc
add
push
and
pop
xor
add
pop
dec
pop
cld
or
jle
out
fld
(bad)
pop
mov
jp
ins
push
(bad)
mov
push
pop
push
mov
stos
add
push
or
or
frstor
popf
add
jle
pop
js
sbb
dec
loope
pop
jl
mov
test
adc
jne
xchg
(bad)
cmp
test
sub
sub
sub
rol
sete
ret
movs
add
(bad)
adc
inc
scas
inc
jo
and
and
or
mov
inc
sbb
or
ds
mov
jl
sbb
sub
xor
mov
mov
test
jl
not
mov
mov
push
cmp
ret
fld
dec
inc
ds
mov
hlt
sub
pop
mov
jl
not
cmp
or
sbb
loop
add
cmp
stos
adc
sbb
popa
fmul
outs
mov
std
or
adc
cmp
iret
cmp
xchg
in
mov
aas
push
sub
shr
test
ret
or
dec
mov
in
pop
popa
in
pop
pop
jo
jmp
jnp
xlat
or
xor
js
mov
fld
dec
je
add
add
es
jne
add
repnz
or
(bad)
sub
shl
dec
add
pushf
xchg
inc
(bad)
push
retf
sub
test
and
les
or
test
jecxz
pop
int
or
mov
and
push
jns
cwde
lock
push
and
push
push
push
sub
mov
ret
icebp
aaa
jl
add
in
pop
pop
mov
xchg
xchg
sbb
add
movsx
inc
jne
nop
jmp
push
or
or
or
sub
mov
push
fld
add
sub
movs
mov
adc
popa
and
jo
add
xlat
push
clc
repnz
and
das
mov
or
push
inc
jp
pushf
sub
or
mov
lods
loope
push
inc
sub
push
sub
and
adc
jbe
add
(bad)
adc
or
ja
or
jo
daa
xor
mov
aam
dec
aaa
mov
add
xchg
and
clc
(bad)
cmp
push
arpl
push
imul
or
lahf
out
push
outs
imul
push
or
dec
call
inc
jb
popa
ds
add
or
mov
and
or
pop
retf
pop
or
inc
inc
popa
jo
arpl
jns
stos
nop
fistp
or
inc
int3
cwde
outs
ins
call
dec
xor
mov
xor
xor
add
fstp
xor
sbb
gs
ins
fisttp
mov
shr
sahf
jae
(bad)
xchg
imul
pop
add
scas
pop
aam
pushf
repnz
mov
cmps
ret
cmp
pop
mov
(bad)
lods
or
mov
add
add
(bad)
sbb
adc
jmp
(bad)
js
pop
dec
xor
or
bound
pop
and
rcl
jle
inc
or
cmp
jge
add
cmp
add
clc
inc
jg
pusha
mov
sub
or
and
dec
cmp
xor
jbe
mov
cmp
bnd
mov
inc
scas
and
clc
fistp
push
inc
lock
outs
fcom
leave
push
rcl
pop
jmp
add
fdiv
jmp
sbb
add
add
xlat
shl
loopne
(bad)
cmp
or
inc
add
or
sbb
push
out
out
cs
out
jl
dec
mov
jle
mov
mov
xchg
cmc
jecxz
add
push
or
fsub
push
pop
and
jle
mov
inc
shl
(bad)
sbb
pop
gs
and
xor
and
and
cmps
clc
or
add
mov
ffree
lods
data16
push
or
rol
int3
push
lock
out
add
mov
leave
sub
jo
leave
out
shr
pushf
out
ffree
test
aaa
add
mov
push
je
xlat
fnsave
add
inc
ret
xchg
push
loopne
and
mov
pop
add
sbb
mov
and
push
je
add
mov
dec
xor
rol
add
inc
mov
push
ret
push
xor
dec
and
dec
adc
imul
nop
es
and
hlt
jne
and
sbb
ins
aaa
push
cs
mov
hlt
sub
and
call
sbb
push
jmp
hlt
lods
test
sub
add
jmp
mov
dec
adc
pop
jmp
or
lods
sub
inc
and
std
cli
add
xor
test
or
push
lea
js
(bad)
pop
clc
ds
xchg
adc
inc
ds
cmps
adc
or
es
mov
push
cmp
(bad)
xchg
mov
adc
sar
jle
sbb
stos
sub
call
xor
adc
(bad)
add
ds
loopne
or
mov
clc
mov
fdivr
retf
(bad)
sub
add
pop
movs
push
das
sbb
add
or
jbe
test
or
daa
cdq
pop
scas
push
dec
cmp
and
push
or
add
in
push
mov
push
or
mov
inc
dec
jne
mov
sub
jl
xchg
jp
rol
rol
jo
cmc
out
add
mov
pop
and
dec
test
jnp
adc
and
cwde
pop
frstor
(bad)
nop
or
xchg
or
sub
cmp
or
sbb
inc
push
xchg
fcom
sub
cmp
sbb
dec
and
mov
mov
sbb
inc
sub
add
ja
outs
add
lods
ds
jbe
dec
sub
sub
pop
cs
add
dec
cmps
test
inc
adc
out
or
cs
push
push
aas
rol
jo
or
loopne
jge
xchg
mov
lea
add
in
rcpps
fiadd
or
push
outs
adc
mov
sub
mov
push
adc
mov
xor
jle
mov
(bad)
push
ins
mov
iret
adc
(bad)
scas
in
addr16
inc
stos
xor
clc
clc
inc
sbb
xchg
popa
sbb
xor
mov
push
aaa
pusha
adc
ret
add
adc
xchg
adc
ret
xchg
shl
rcr
cld
adc
xor
jle
cmp
pop
out
fdivp
dec
test
fsub
or
sar
add
test
das
adc
adc
sti
je
cdq
mov
dec
mov
adc
inc
mov
push
mov
push
jbe
inc
push
add
adc
inc
add
or
popa
sbb
xchg
gs
add
daa
mov
outs
aad
lods
cmp
dec
xor
sub
inc
sbb
dec
repnz
or
mov
sbb
mov
push
test
setne
iret
sub
int3
lahf
das
fisttp
aam
pop
sbb
xadd
vminpd
or
ins
inc
or
and
loop
inc
jmp
mov
test
je
inc
dec
mov
add
add
ret
mov
cmps
retf
or
mov
mov
mov
cmp
dec
and
mov
add
xchg
lock
lds
add
test
jo
imul
cmp
cmp
inc
xor
stos
jmp
mov
jge
adc
jne
xchg
test
ds
fsubr
adc
(bad)
fldenv
add
lods
lock
and
jne
jle
add
xor
out
arpl
fs
xchg
pushf
or
mov
leave
add
out
out
dec
or
xchg
xor
inc
cmps
sub
xchg
and
mov
push
add
sub
push
in
mov
sub
add
fucomip
stos
pop
xor
push
inc
arpl
arpl
xchg
fldenv
mov
mov
inc
dec
add
lds
dec
add
xor
mov
sub
mov
out
or
pop
jo
out
adc
gs
je
jns
lods
sbb
pop
pop
dec
idiv
sub
inc
pop
js
out
addr16
cmp
(bad)
mov
mov
or
loopne
call
or
push
mov
cmp
mov
enter
or
cwde
leave
clc
push
jl
mov
xchg
or
call
(bad)
jne
inc
lock
cmps
call
lods
and
mov
dec
cmp
adc
ja
sub
je
push
icebp
movs
mov
push
sub
add
aam
push
cld
jno
mov
mov
sub
xchg
mov
jo
dec
xchg
jne
inc
add
xchg
push
or
icebp
add
pop
aas
pop
pop
outs
cmp
(bad)
ja
into
add
icebp
hlt
push
lea
leave
cwde
sbb
ja
jo
leave
sbb
and
add
pop
mov
mov
addr16
test
push
jle
xchg
lock
fadd
push
jge
mov
sub
add
mov
daa
hlt
loopne
in
out
(bad)
fild
or
adc
lods
loopne
push
cld
or
mov
mov
dec
push
xor
inc
ror
or
inc
cli
or
sub
dec
fucomip
lsl
adc
add
cmp
jg
and
push
add
loopne
sbb
add
cdq
fcom
mov
cmp
or
push
adc
pop
inc
sbb
add
inc
add
mov
push
push
ins
repnz
ja
cmp
repz
dec
inc
push
loop
les
fwait
(bad)
pop
adc
rcl
jmp
je
jmp
loop
pop
pop
fcom
test
test
xor
mov
inc
xchg
int3
or
mov
je
inc
shl
adc
and
xchg
dec
or
xchg
ret
jecxz
inc
(bad)
bound
and
pop
or
test
push
add
(bad)
cmp
or
(bad)
lock
jmp
push
jae
cmp
mov
jno
sbb
hlt
mov
and
in
jnp
push
test
in
cmp
xchg
(bad)
(bad)
ror
(bad)
jmp
mov
add
add
ins
inc
push
add
push
stos
add
cmp
call
push
adc
pop
inc
mov
addr16
and
repnz
adc
cmp
adc
clc
add
cmp
xor
push
inc
mov
test
mov
inc
loopne
mov
xor
dec
in
inc
jae
or
xor
adc
push
sbb
jecxz
dec
(bad)
clc
push
dec
pop
enter
push
clc
inc
sbb
test
in
sub
sub
pop
jle
mov
(bad)
das
jo
loopne
jge
test
js
inc
aas
js
pop
jnp
push
js
push
ins
test
and
mov
mov
mov
push
mov
fs
adc
clc
mov
adc
stos
inc
push
in
sub
dec
aam
inc
dec
add
inc
lds
test
out
adc
mov
inc
fistp
(bad)
push
inc
dec
jne
add
adc
mov
and
pop
test
rcr
adc
cwde
mov
aam
shl
mov
jle
dec
jmp
or
inc
or
fmul
push
mov
or
mov
or
sahf
and
or
mov
adc
loope
add
jmp
jle
or
fnstsw
rcr
stos
imul
daa
gs
push
xchg
add
jne
lds
mov
mov
sub
or
add
xor
or
setg
xor
mov
lahf
ret
adc
js
shl
push
adc
in
and
sub
clc
dec
shl
(bad)
cmp
or
mov
xchg
scas
jp
jnp
and
fadd
xchg
cmps
cmp
add
test
xchg
dec
dec
xor
adc
in
and
push
clc
cmps
push
pop
push
add
(bad)
inc
(bad)
mov
fsubp
push
and
pop
mov
cmp
test
fnstsw
mov
mov
aam
add
push
sub
fistp
aas
add
stc
push
ret
mov
sar
add
or
mov
sub
add
mov
jne
cmc
mov
adc
add
jne
cmp
mov
mov
pop
fld
and
mov
push
push
popa
fndisi(8087
xchg
and
dec
aad
mov
(bad)
add
aas
jp
push
jp
mov
inc
jb
out
add
(bad)
push
inc
and
call
add
mov
or
mov
dec
or
pop
xor
sti
je
aad
jl
sbb
in
leave
aad
in
xchg
leave
out
adc
add
ds
cmp
mov
push
test
inc
scas
xchg
shl
push
ror
jp
pop
aam
adc
mov
jae
call
and
fcom
adc
push
xchg
dec
jne
jb
shr
inc
push
and
sbb
pushf
mov
push
cmps
or
cmps
(bad)
push
out
sbb
push
adc
pop
sbb
test
ds
lahf
ds
sub
adc
movs
(bad)
test
push
sar
inc
lock
cli
test
ror
add
div
xor
adc
xchg
or
fs
adc
nop
in
mov
jle
mov
mov
dec
xor
cmp
adc
push
imul
les
push
hlt
xchg
adc
push
stos
or
out
fsub
(bad)
xchg
xor
pusha
add
mov
femms
rcl
dec
push
xchg
data16
into
pop
shr
xchg
test
or
cmp
adc
adc
xchg
and
inc
in
add
mov
mov
cli
jb
test
jae
pop
loopne
fsubr
fdiv
jp
int
jae
add
and
in
cmp
fisub
inc
nop
or
cmp
jle
sbb
(bad)
lock
lock
jmp
mov
test
jne
ins
jnp
cmps
lea
jnp
or
adc
mov
mov
mov
push
pop
mov
sub
pop
add
or
adc
mov
cld
add
and
mov
not
ret
movs
xchg
dec
or
mov
xor
setns
hlt
popf
(bad)
pop
and
sbb
fsubp
push
add
mov
add
retf
sbb
aam
dec
push
xchg
nop
das
and
xlat
jmp
daa
faddp
sub
xor
inc
dec
lea
jo
push
pop
mov
fnsave
ficomp
xor
cmp
xchg
ffreep
adc
aaa
dec
push
daa
xchg
(bad)
pusha
inc
sub
push
sub
adc
and
ds
jmp
in
fiadd
jl
or
push
popf
cli
jbe
sti
push
inc
mov
fcomp
and
loopne
fidivr
push
in
sub
in
push
xchg
mov
mul
(bad)
iret
mov
mov
pop
add
cmps
cmps
popf
push
gs
or
or
sbb
cmp
aam
xor
sbb
inc
test
ror
mov
dec
arpl
add
mov
mov
mov
in
xrelease
add
movs
call
les
sub
in
sbb
(bad)
dec
test
or
dec
inc
popa
push
js
mov
xchg
jo
sub
or
sub
mov
fstp
(bad)
sbb
setge
sbb
add
mov
mov
inc
cmp
ret
xor
out
mov
and
fsubr
sub
ds
push
sbb
add
add
mov
add
ds
mov
jb
inc
add
inc
sub
sub
xor
not
mov
sub
bound
or
cwde
sub
add
ret
das
cmc
ss
adc
pusha
or
add
mov
and
jmp
mov
fs
mov
xchg
sahf
jge
or
fs
and
sbb
aaa
jno
adc
ret
jno
add
aam
adc
mov
push
popa
add
mov
pop
pop
div
sbb
jp
test
rcl
je
xor
das
push
jp
mov
cld
sub
xadd
sub
jbe
les
and
mov
sbb
out
jle
loopne
nop
or
add
add
lock
mov
or
sbb
(bad)
out
add
add
dec
ror
pop
mov
dec
enter
cmp
(bad)
mov
inc
inc
jb
(bad)
cmp
cmp
test
int
adc
add
sub
mov
and
retf
mov
arpl
in
xchg
shl
das
test
stos
pcmpgtw
adc
jg
packuswb
pop
cmps
movups
(bad)
mov
cmove
add
add
cli
inc
add
and
mov
pop
inc
mov
pop
or
pusha
jnp
fimul
mov
or
and
cmp
ins
pusha
push
nop
push
mov
push
dec
sub
pop
hlt
lds
ja
pop
push
xor
repnz
test
das
ja
lea
ds
test
ja
or
into
int
pop
arpl
or
jg
mov
pop
cmps
add
push
cdq
sub
mov
addr16
loope
add
shr
or
jo
cmp
xchg
sub
mov
add
push
mov
out
dec
add
mov
adc
push
adc
dec
call
rol
xor
imul
dec
xlat
mov
out
push
adc
mov
in
mov
cmc
and
xor
outs
stos
add
movs
inc
or
xor
dec
push
add
add
sub
test
add
cmps
adc
clc
call
dec
inc
xor
jb
in
in
pop
pop
das
add
mov
pop
neg
lds
pop
push
add
or
ficomp
push
or
pop
je
mov
jmp
(bad)
loope
int
lods
out
scas
push
add
jmp
sbb
pop
icebp
sbb
arpl
fcom
or
or
stos
push
mov
mov
push
les
or
push
mov
pusha
imul
pop
push
imul
out
out
adc
sbb
mov
sub
fldcw
lods
iret
hlt
pop
jg
js
jle
repnz
sti
add
xlat
shr
mov
jle
in
and
or
inc
sbb
jl
(bad)
ins
lock
inc
xchg
xor
add
sbb
cmp
clc
inc
jmp
xor
clc
mov
xchg
sbb
mov
inc
(bad)
mov
adc
sbb
adc
pop
push
xchg
push
es
xchg
jl
xchg
pop
push
scas
and
push
and
or
je
sub
xor
(bad)
dec
dec
js
daa
lock
mov
or
pop
inc
pop
push
cmp
pushf
adc
ins
and
mov
sbb
adc
mov
dec
mov
sub
fldcw
in
add
mov
out
jb
shr
adc
fld
sbb
dec
outs
fcomp
or
outs
push
outs
or
test
push
or
and
dec
mov
nop
mov
inc
enter
imul
pop
and
mov
fcomp
arpl
ja
xchg
sbb
add
int3
ins
cmp
lods
fadd
aaa
sub
and
call
cmp
adc
add
loopne
or
es
imul
hlt
pop
aas
in
rol
push
or
push
pop
or
nop
sub
push
xor
adc
mov
mov
icebp
scas
je
jo
xchg
data16
mov
mov
mov
adc
test
inc
test
and
(bad)
sbb
lea
(bad)
mov
and
scas
sbb
js
sbb
mov
or
fmul
pop
movs
or
or
(bad)
pop
and
and
icebp
sub
mov
out
outs
pop
(bad)
in
sbb
or
das
test
adc
and
loopne
sbb
xchg
push
pushf
pushw
mov
pop
leave
sub
add
cmp
sub
inc
pop
outs
and
adc
loopne
test
pop
es
mov
aam
and
test
mov
mov
or
pop
pop
fsub
aad
mov
xor
test
rol
push
nop
mov
jbe
loopne
scas
shl
mov
dec
loopne
aam
inc
mov
pop
mov
sahf
pushf
icebp
mov
sub
or
xor
xor
add
(bad)
sbb
aaa
mov
adc
xchg
into
inc
sbb
and
(bad)
jmp
adc
inc
mov
cmps
jae
sub
xor
cmp
add
xor
add
add
adc
cmp
sub
mov
sbb
lods
cmps
iret
adc
sub
xor
adc
pop
and
ret
push
pop
lea
imul
and
nop
and
pop
leave
sbb
pop
out
leave
punpcklbw
sar
push
scas
rcl
pop
jge
popf
inc
inc
mov
test
adc
adc
pop
sub
jmp
sbb
pop
test
aas
add
xor
test
mov
add
push
adc
sub
xchg
stos
or
push
sbb
or
push
adc
adc
movs
out
inc
xchg
rol
mov
into
test
xlat
sbb
add
cli
sub
add
cmp
ja
in
js
enter
sub
stc
or
pop
aaa
je
inc
(bad)
pop
daa
sbb
xor
push
push
loopne
add
jae
mov
jae
add
cmp
adc
jecxz
adc
pusha
call
ja
cmp
adc
ja
mov
jne
pop
mov
js
push
pop
les
pusha
call
sub
mul
push
sub
jne
wbinvd
xchg
mov
imul
das
mov
test
dec
jno
ror
push
cmp
je
push
push
hlt
aas
nop
sub
repnz
das
inc
imul
jno
or
xchg
xchg
out
lods
and
pop
sub
pop
jmp
mov
jg
xlat
imul
pusha
enter
test
add
add
add
sbb
jnp
popa
movs
(bad)
sbb
xchg
je
lods
or
add
dec
pop
mov
xor
in
xor
mov
or
retf
in
xor
add
(bad)
mov
stc
pop
push
mov
or
shl
fcom
or
cmp
add
cmps
sbb
pcmpgtw
pop
xor
cmp
mov
daa
push
mov
(bad)
fs
xor
cmp
cpuid
push
sbb
jge
dec
lar
push
add
sub
xor
mov
imul
imul
adc
or
and
mov
adc
prefetchwt1
mov
push
(bad)
bswap
and
push
es
and
mov
jo
and
or
cmp
cvtpi2ps
test
adc
and
mov
fwait
or
xlat
push
unpckhps
sbb
mov
sbb
setb
mov
arpl
pxor
xchg
lods
dec
(bad)
cmp
pop
cmp
popf
ret
pop
loope
push
loop
inc
sub
mov
jmp
ret
and
cmp
clc
add
fsubr
xlat
mov
mov
mov
or
sub
sub
push
and
pushf
(bad)
sub
mov
(bad)
mov
cmp
push
jno
adc
lock
sub
mov
neg
mov
push
inc
das
push
sub
inc
mov
push
mov
cmps
cmp
rcl
sub
nop
add
sub
adc
ins
clts
adc
call
test
mov
mov
push
or
push
ret
pop
lods
jp
inc
sub
push
jle
pop
pop
fist
cmp
adc
jg
inc
movups
add
into
xchg
enter
inc
mov
xor
int
mov
push
push
js
add
mov
push
movs
pop
mov
fldcw
and
ror
cmp
les
pop
ror
sub
retf
data16
sbb
pop
xrelease
push
mov
fs
sub
int
dec
mov
jae
jge
sub
adc
imul
ret
adc
lahf
and
cld
cmp
jle
adc
push
push
cld
or
jge
sub
daa
xor
mov
test
add
dec
add
lock
lea
in
fild
fucomip
lsl
adc
scas
loopne
and
cmp
cld
arpl
xor
xchg
adc
push
adc
mov
xchg
adc
fst
es
xchg
mov
mov
adc
arpl
cwde
mov
jg
loope
(bad)
adc
and
sbb
aas
adc
pusha
lock
adc
add
in
adc
cs
(bad)
sbb
aaa
inc
and
add
xchg
mov
inc
out
xor
lock
cmps
(bad)
hlt
sub
jno
lock
sbb
scas
dec
aam
(bad)
mov
add
inc
or
out
push
in
mov
lea
inc
push
or
dec
adc
in
out
ret
adc
jmp
test
int3
addr16
pop
inc
push
pop
xor
inc
sbb
or
mov
fdiv
sbb
and
rol
inc
xor
push
jp
xor
cmp
push
clc
add
cmp
dec
sub
pop
mov
cwde
ins
scas
pop
and
test
js
cmp
and
movs
arpl
fwait
or
clc
add
push
add
mov
dec
int3
loope
pop
inc
sbb
add
cld
sub
jle
adc
add
mov
aas
push
loopne
fs
inc
push
js
push
ins
pop
imul
fdiv
loope
xor
(bad)
push
mov
jmp
or
test
push
in
add
add
xor
lods
cmp
in
sub
pop
pushf
push
push
cmp
sbb
test
cmp
dec
call
lods
adc
test
outs
push
inc
lock
pushf
es
or
jle
dec
out
sbb
iret
mov
mov
dec
data16
call
loopne
pop
fdivr
push
jo
or
xor
lock
mov
xor
das
rol
movs
cwde
xor
add
adc
ret
inc
les
int3
fisub
setg
loopne
sub
movzx
jae
popf
jmp
jp
test
dec
fidivr
adc
jne
push
out
aaa
dec
repnz
jnp
jns
shl
jp
jg
jp
(bad)
dec
test
push
inc
jle
mov
call
sub
ins
add
inc
dec
jne
mov
sub
xor
pop
xor
das
xor
addps
rcr
and
pusha
aaa
loopne
loopne
pop
popa
inc
push
in
call
cli
cmp
fwait
pop
or
adc
cmc
call
jbe
dec
xchg
and
sbb
loopne
scas
js
(bad)
jle
inc
mov
cmp
inc
test
aaa
lods
enter
pop
js
xor
fcom
pop
cmp
mov
dec
pop
adc
loope
and
cmp
xchg
mov
xchg
xor
xchg
pop
xchg
pushf
in
mov
mov
cmp
cld
mov
push
cmps
pop
cmp
xchg
ins
mov
and
adc
and
or
dec
test
pop
in
(bad)
in
cmps
cmc
pop
js
push
and
and
lods
inc
jmp
pop
lods
inc
and
dec
pop
xor
in
dec
call
add
dec
jbe
adc
retf
xor
xor
fidiv
cld
jle
cmp
test
ror
jle
mov
int3
jne
inc
add
pop
shr
cmp
lea
addr16
or
addr16
mov
add
sub
or
adc
jo
sub
lods
push
or
push
lods
sbb
cmp
ins
mov
push
or
pop
cld
enter
jne
fimul
rol
sub
inc
add
dec
lock
inc
cld
mov
xor
inc
(bad)
add
mov
fadd
push
inc
pop
fsub
(bad)
add
jo
inc
or
add
add
sub
(bad)
loope
dec
pop
lods
or
xor
stos
ret
ret
leave
aaa
and
xor
stos
cmp
xchg
pop
xlat
loopne
fild
mov
cmps
add
adc
add
cmps
clc
imul
xchg
iret
pusha
dec
sub
iret
pusha
stos
ret
das
iret
inc
push
sub
push
ds
push
loope
iret
inc
dec
pop
addr16
sub
ds
fsub
jo
repnz
dec
mov
xchg
push
add
xchg
dec
js
add
dec
sub
mov
test
cmp
inc
lods
test
fcom
push
repnz
iret
mov
test
xchg
sub
adc
push
iret
xchg
movs
inc
xchg
mov
and
popa
lods
iret
cmp
das
aas
xor
and
adc
sub
dec
dec
add
sub
mov
loope
lods
iret
sbb
iret
or
pop
aas
and
or
stos
in
fs
pop
xlat
inc
movs
or
shr
inc
sahf
pop
xor
push
or
iret
in
clc
loope
and
push
imul
and
js
push
sbb
dec
add
sbb
daa
out
sbb
push
iret
dec
xor
sub
inc
mov
xchg
jnp
pop
inc
jo
add
and
cld
cmovs
iret
dec
jl
push
or
loope
test
push
sub
iret
inc
aam
fist
stos
adc
pop
leave
jbe
xor
jo
adc
movs
or
stos
push
inc
and
inc
or
iret
adc
jno
and
test
iret
inc
push
and
aas
iret
and
pop
js
pop
loope
push
sub
sbb
inc
xchg
pop
inc
pop
ins
test
add
iret
lock
push
popa
and
push
repnz
iret
dec
in
sub
dec
mov
mov
mov
dec
and
sbb
dec
(bad)
push
popa
lods
adc
and
xor
iret
dec
cmp
or
pcmpgtd
push
push
loope
fcmovne
pop
aaa
sub
inc
jb
inc
dec
mov
cmp
dec
pop
push
inc
test
iret
mov
and
pop
loopne
inc
add
ror
dec
rol
push
mov
push
test
pop
pusha
nop
add
xor
lea
movs
inc
adc
and
and
sub
iret
dec
pop
inc
or
inc
dec
add
sbb
jo
stos
xchg
shr
sbb
mov
inc
stos
and
mov
mov
dec
pop
lods
cmc
or
push
xor
push
cmps
and
cwde
fisttp
or
mov
or
mov
js
aas
dec
pop
inc
ret
adc
repz
jg
push
es
(bad)
push
push
add
sub
sbb
stos
adc
adc
adc
fimul
push
out
xchg
out
nop
in
sub
out
data16
mov
dec
test
jp
aad
ins
xor
(bad)
pop
inc
xchg
(bad)
cmp
loop
add
inc
dec
jne
mov
add
cmp
push
jmp
xor
mov
ja
add
ins
and
add
test
je
les
sbb
mov
add
add
not
mov
pop
xor
add
pop
xchg
add
or
mov
daa
push
fadd
arpl
xchg
lock
test
cmp
pop
jb
mov
cmp
je
cmp
push
or
cld
leave
jo
add
mov
dec
or
es
or
loop
ror
fwait
inc
dec
add
mov
mov
jg
or
add
lea
push
adc
or
lea
pop
pop
test
mov
in
movs
cwde
(bad)
sbb
push
adc
push
or
lods
dec
rol
jp
xor
or
adc
ds
mov
mov
push
and
rcl
cmp
pop
inc
xchg
fld
stos
scas
or
or
mov
dec
rol
add
xlat
pusha
sub
adc
pop
fisttp
pop
and
lock
movs
retf
adc
pop
or
call
pop
xlat
test
or
or
mov
enter
xchg
adc
lds
mov
pop
dec
imul
inc
xlat
push
movs
and
mov
adc
les
repnz
xlat
add
and
add
fld
sub
xor
cmc
sbb
and
push
in
cmp
mov
ret
outs
dec
(bad)
lock
ins
icebp
ds
add
add
enter
cmp
or
test
and
neg
fsubr
inc
sub
push
arpl
mov
cwde
or
or
jne
push
push
push
fadd
fist
add
add
push
iret
leave
inc
xor
js
cld
mov
sub
mov
daa
adc
and
push
push
dec
push
loope
dec
clc
mov
add
add
jns
inc
dec
mov
movs
inc
jb
cld
pop
adc
add
push
ja
lahf
inc
adc
loopne
loopne
ja
in
adc
lahf
mov
aaa
dec
cmp
lahf
pop
cwde
or
add
in
cmp
outs
inc
inc
aaa
push
and
xor
sbb
and
lahf
lods
ja
add
stos
in
inc
ja
mov
xchg
je
adc
inc
push
ja
pusha
add
add
push
sub
xor
and
pop
dec
mov
push
les
dec
mov
lock
bound
add
out
mov
sub
bound
leave
and
bound
add
out
push
pop
loopne
paddsb
inc
mov
pop
out
or
repz
mov
out
in
cmp
je
inc
aaa
xor
xchg
movs
xor
sbb
and
out
out
mov
add
arpl
pushf
or
push
sti
jbe
inc
inc
in
xchg
add
nop
push
xor
cmp
or
or
sub
retf
sbb
adc
les
cld
mov
call
jmp
lea
imul
push
dec
jge
xchg
cwde
dec
pop
test
stos
mov
push
adc
mov
inc
dec
loop
movs
push
sub
ret
out
shr
(bad)
clc
js
dec
lea
jne
jl
jmp
imul
jl
imul
dec
add
test
cs
pop
add
add
adc
retf
add
and
xor
jnp
mov
jnp
or
and
iret
mov
add
jb
mov
jbe
and
and
shl
adc
and
movs
jns
pushf
and
jl
adc
adc
stc
cmp
daa
fsub
cmps
pop
aad
or
add
add
or
rol
adc
loope
pop
cdq
(bad)
add
or
mov
loop
add
or
add
dec
dec
repnz
sub
(bad)
in
pop
ins
pusha
ins
js
mov
push
mov
movs
les
xor
icebp
mov
lea
or
fadd
call
dec
xor
jb
mov
sub
xchg
hlt
jle
cmp
lods
in
enter
fmul
outs
adc
dec
fcom
sti
push
retf
adc
mov
xchg
jg
add
(bad)
dec
inc
sbb
inc
sbb
sub
paddusb
int
add
adc
push
adc
std
xchg
push
outs
cmp
mov
pop
lea
add
rol
sbb
pop
test
aad
das
adc
data16
les
cmp
push
addr16
das
sbb
das
pop
add
mov
xchg
sti
stos
pop
xchg
loop
pushf
pop
lods
test
or
loopne
pop
sub
idiv
push
push
in
add
mov
and
sub
adc
(bad)
stos
sub
test
dec
jnp
inc
sbb
jb
daa
adc
add
cmp
mov
add
and
mov
jae
push
nop
pushf
push
aaa
lock
push
sbb
aaa
jbe
add
inc
mov
adc
js
xchg
add
push
clc
test
ins
dec
rol
cmp
sbb
jo
ret
pop
dec
pop
leave
and
pop
push
xor
mov
movs
inc
stc
add
add
lds
sbb
stos
push
scas
cmp
or
mov
push
lds
pop
loopne
push
lods
out
mov
iret
pop
test
adc
nop
rcl
je
test
cmp
js
pop
pop
push
js
mov
inc
(bad)
daa
js
in
or
out
cmp
xor
jns
inc
test
js
jns
adc
js
out
sbb
inc
adc
in
enter
loopne
pop
jle
mov
add
pop
jo
and
clc
ror
add
mov
pop
push
add
adc
ds
and
inc
sbb
movs
inc
and
xor
jmp
pop
fcom
and
sbb
sbb
pop
jns
push
arpl
and
push
jb
pop
pop
pusha
add
js
adc
cmp
aam
cmp
movs
rcr
mov
pop
push
(bad)
mov
pop
stos
icebp
rol
mov
mov
movs
add
sar
int3
test
jno
add
lds
ins
and
adc
cmp
pop
inc
call
stos
jl
mov
shr
cld
shl
add
or
adc
inc
push
sub
(bad)
dec
sub
test
sub
cs
cmc
das
jnp
test
jmp
xor
add
scas
mov
mov
mov
push
ins
mov
dec
cmp
cmps
fistp
jge
cmp
jle
or
inc
dec
add
xor
mov
cmp
mov
aam
add
or
push
adc
pop
push
(bad)
mov
ror
adc
nop
in
lods
push
scas
inc
mov
scas
adc
fmul
add
aas
cmp
ror
mov
dec
pushw
int
and
dec
pop
loopne
fmul
test
adc
sbb
js
cmps
lahf
rcr
or
aaa
cmp
push
add
mov
adc
nop
xlat
inc
ror
mov
aaa
mov
dec
cs
xor
adc
inc
dec
fsub
mov
pop
adc
stos
pop
scas
mov
add
cdq
enter
pop
(bad)
out
in
aaa
inc
adc
sub
cld
leave
daa
sbb
test
xor
sub
mov
gs
adc
and
jmp
clc
and
fs
jg
ror
cmp
xchg
and
inc
stos
push
adc
(bad)
push
movs
mov
xchg
aas
add
test
mov
dec
aaa
adc
sub
aaa
adc
aaa
adc
xor
inc
adc
mov
(bad)
jmp
mov
cmp
ins
jo
jb
jae
outs
cmp
jns
je
ins
in
lods
std
jmp
push
je
imul
push
ins
and
outs
je
es
ret
inc
sub
popa
ins
dec
outs
arpl
lock
mov
sbb
arpl
out
cmps
jmp
inc
gs
jne
je
test
inc
inc
int3
add
push
sbb
add
mov
inc
hlt
aas
in
bound
sub
push
jo
sbb
add
adc
add
scas
add
mov
out
push
inc
enter
add
pushf
pop
int3
push
sahf
loope
daa
jmp
xor
out
push
dec
pushf
jge
add
or
idiv
push
and
cmp
je
outs
out
out
push
xlat
add
and
push
setnp
ins
sub
xchg
out
sbb
punpckldq
test
dec
into
inc
popa
pusha
ror
pop
sti
add
gs
data16
les
add
ss
das
sub
or
outs
retf
arpl
adc
or
sub
sub
pop
loope
mov
clc
mov
loopne
dec
lock
mov
movs
loop
mov
ds
jo
mov
sbb
sbb
mov
push
sar
and
mov
sbb
ins
lahf
fldcw
adc
cmps
add
pop
adc
lods
das
retf
pusha
sbb
mov
mov
mov
scas
nop
clc
les
fisubr
pushf
clc
mov
adc
add
jmp
add
ds
outs
and
inc
jb
jns
popa
outs
popa
(bad)
out
addr16
xchg
add
add
push
inc
mov
and
and
mov
dec
outs
fs
fadd
push
outs
and
or
jne
and
cwde
pop
cmp
mov
shl
aaa
cld
popa
push
mov
inc
imul
xchg
or
lods
mov
or
pop
std
out
arpl
pop
sbb
test
mov
out
(bad)
pop
fst
adc
rcl
push
dec
test
or
sbb
jnp
cmp
sub
jo
or
in
loopne
pop
add
mov
mov
outs
push
jb
inc
cwde
sbb
bound
ds
call
imul
push
int
aas
mov
aas
mov
mov
(bad)
inc
dec
dec
mov
out
add
inc
pop
sub
xor
or
xor
jns
mov
rcr
sbb
sbb
scas
je
xor
cmps
inc
in
cmp
sub
add
pop
aas
xchg
bound
movs
mov
xchg
mov
mov
pop
mov
out
pop
loopne
add
push
push
scas
sbb
push
pop
lock
or
rol
cmp
pop
jle
xlat
lock
jo
push
mov
push
push
pop
pusha
push
jle
push
jns
add
cwde
sbb
outs
xchg
mov
(bad)
(bad)
adc
push
add
jnp
pusha
inc
sbb
add
cmc
adc
add
sbb
loope
add
sbb
dec
inc
outs
jne
xor
add
push
jmp
push
add
fisttp
sbb
pop
je
inc
and
inc
sbb
adc
les
out
push
cmps
push
pusha
mov
or
dec
ja
push
and
das
outs
sub
and
je
add
test
cmps
ret
in
adc
inc
out
mov
jo
xor
and
jo
out
(bad)
hlt
jmp
or
push
and
lods
push
test
(bad)
and
sub
sbb
and
sub
das
push
out
xchg
mov
add
add
push
dec
ror
pushf
and
pop
add
ins
jle
push
inc
shl
pop
cmp
mov
aam
xor
xchg
add
clc
fcmovbe
jmp
cmc
cmps
sub
add
add
pop
inc
jne
aaa
adc
push
test
pusha
push
imul
sub
jp
jmp
es
stos
push
and
mov
push
fadd
cli
out
jo
data16
sar
push
fsubr
push
test
push
ret
sub
test
add
shl
in
mov
sub
mov
ret
cmp
dec
inc
dec
push
aaa
sub
fwait
add
mov
or
pop
pop
sub
jb
xor
sbb
dec
sbb
push
dec
adc
push
ficomp
fld
cvtsi2sd
mov
daa
daa
and
lock
scas
pop
cmps
fnsetpm(287
leave
leave
enter
mov
in
dec
jg
shl
repnz
xor
jns
in
adc
cmp
mov
mov
xchg
popf
push
xchg
push
fimul
push
push
xor
(bad)
add
test
push
and
mov
add
dec
arpl
cmp
or
inc
mov
add
push
jno
and
adc
jae
popf
out
adc
jns
push
or
ss
add
movq
sub
dec
jae
lods
pusha
mov
or
adc
or
inc
push
popa
jg
sbb
inc
jg
dec
jg
hlt
not
add
inc
inc
fs
outs
mov
mov
popa
ins
dec
out
or
jne
arpl
jns
push
sub
xor
push
jns
lods
lods
pop
ins
add
mov
or
or
cdq
ja
add
shr
or
fild
or
loopne
cmc
enter
or
test
xlat
or
popf
mov
jnp
xor
or
mov
xchg
and
das
leave
fwait
cmps
out
sub
fwait
add
push
push
fsub
lea
inc
loope
inc
inc
or
pop
dec
jae
push
cmps
jns
imul
aaa
add
mov
push
mov
jno
xlat
inc
str
mov
add
fcmovbe
push
ret
mov
sbb
or
push
inc
icebp
pop
lods
sbb
jmp
inc
inc
inc
js
jo
mov
lea
push
ja
pop
inc
cs
xchg
rol
mov
sbb
mov
or
rol
mov
and
xor
cs
test
dec
gs
lock
add
mov
(bad)
dec
dec
jg
mov
mov
popa
pop
and
mov
rcl
pop
es
call
aaa
xor
fs
je
imul
mov
and
dec
popw
push
rcr
dec
imul
sbb
sbb
popa
cmps
or
or
mov
jns
retf
sub
shl
(bad)
push
outs
fild
sbb
jge
(bad)
inc
push
cli
pop
(bad)
std
push
dec
ins
or
jb
jns
rcl
xchg
or
adc
and
mov
pop
xchg
mov
xchg
dec
test
dec
mov
push
jb
ins
mov
jae
xor
xor
sub
sub
inc
sub
inc
xchg
outs
out
jbe
not
mov
mov
sub
mov
dec
mov
push
or
aaa
inc
push
mov
adc
test
in
imul
in
add
and
aaa
mov
sub
out
mov
dec
cmp
fcmovnbe
sub
arpl
jns
call
jmp
add
jae
add
xor
xor
int
pop
ret
cmp
mov
cmp
push
add
xor
loopne
sbb
add
jo
xchg
in
(bad)
inc
add
jge
add
inc
mov
mov
dec
mov
int
mov
add
mov
pop
das
jbe
(bad)
pop
aad
xlat
xchg
mov
jmp
jnp
sti
psubb
xlat
sbb
leave
test
or
sub
int3
pop
inc
mov
int
and
cmp
or
pop
pop
fisttp
add
(bad)
sbb
mov
outs
push
rcl
stos
add
pop
mov
push
dec
das
gs
dec
mov
sbb
xor
bound
popf
push
push
add
xor
xchg
stos
xchg
stos
mov
popf
push
and
or
mov
dec
in
jb
sbb
sbb
bound
sbb
inc
xor
call
pop
pop
pop
mov
inc
ss
adc
mov
fadd
pop
jo
ret
addr16
fld
outs
fcomp
pop
add
push
xor
out
dec
popf
jge
push
mov
mov
push
aas
inc
outs
adc
push
cwde
loopne
jne
test
push
xlat
dec
loopne
mov
push
mov
push
pop
xor
imul
in
ss
mov
popf
xlat
pop
xlat
outs
cmp
or
mov
jne
cmp
pop
(bad)
or
(bad)
ror
add
mov
packssdw
xchg
xchg
mov
leave
leave
leave
leave
xor
out
in
in
shl
jb
xor
xor
jp
ret
cmp
jns
call
pushf
mov
enter
dec
int3
xchg
lds
push
test
test
mov
add
test
punpckhdq
(bad)
es
or
cmp
dec
sub
dec
mov
sub
cmps
xor
xchg
sbb
inc
in
add
xor
gs
add
inc
inc
or
sub
jns
sbb
pop
pop
rol
ja
cmps
inc
mov
ja
xor
pusha
mov
cmc
pop
pop
shr
test
mov
leave
inc
xor
lea
push
sbb
push
or
add
iret
add
addr16
inc
pop
and
adc
sub
test
cmps
jb
and
add
sub
sub
add
push
jo
pusha
inc
xchg
xchg
push
je
rol
enter
xchg
push
mov
je
lods
(bad)
jo
sar
inc
sub
cmps
push
sbb
and
out
dec
sub
cmps
add
dec
mov
sub
and
jae
push
xor
xor
add
ret
sub
add
call
sub
inc
or
movs
loopne
or
outs
sbb
mov
sub
jno
sbb
sub
dec
fucom
bound
mov
(bad)
push
fcomp
inc
cmps
sub
adc
pop
ret
add
rcr
dec
adc
dec
sub
rol
fnstcw
or
sub
add
push
test
ror
lea
lea
jmp
xor
mov
or
shr
daa
pop
xchg
dec
mov
(bad)
inc
ret
add
leave
inc
pop
aas
push
sub
cmp
and
(bad)
icebp
sub
loope
enter
mov
pop
dec
das
pushw
test
lea
fdivp
psadbw
fbld
sbb
inc
pop
add
bound
dec
sub
sub
rol
icebp
std
loop
push
sub
add
pop
rcl
pop
int
jmp
ss
sbb
pop
xor
inc
je
sub
sub
retf
out
out
neg
or
push
cmp
arpl
jns
sahf
lea
jmp
je
jge
mov
outs
jl
add
pusha
fsub
je
mov
(bad)
push
mov
sub
xor
cmps
cmp
mov
or
cmp
push
pop
or
aaa
pop
pop
stos
ror
mov
cmp
xor
movs
dec
jo
inc
push
rcr
movs
push
int
jge
aas
mov
add
into
dec
shl
cmps
push
inc
addr16
ss
aam
cmps
mov
push
dec
push
xlat
ret
jmp
or
fsubr
xchg
xor
cmps
lods
push
mov
shl
xor
iret
sqrtps
cmps
into
mov
push
dec
ins
mov
xor
and
leave
leave
pushf
fcom
pop
xor
in
mov
sbb
jb
int3
sbb
dec
mov
cmp
sahf
pushf
pushf
pushf
stos
shl
sbb
dec
dec
dec
inc
aas
jbe
stc
daa
daa
and
(bad)
pop
jle
cmp
xlat
je
dec
mov
jecxz
sbb
dec
sbb
jecxz
push
push
pop
xchg
push
call
mov
hlt
push
mov
dec
or
in
or
popa
call
sti
daa
and
popf
cmp
xor
and
or
loope
inc
jno
popa
and
sbb
adc
jnp
cmp
dec
test
pop
es
push
mov
sub
ja
test
popa
int3
cmp
sub
cmc
push
push
jo
pusha
out
jo
and
xchg
or
and
inc
xchg
das
adc
rol
sbb
mov
shr
mov
popa
ins
loop
call
dec
adc
pushf
cmp
pusha
js
popa
jo
rol
popa
xor
or
add
popa
jae
push
stos
sbb
inc
xchg
xchg
test
xchg
les
fist
sub
push
inc
push
add
cs
cmp
rcl
loop
fld
imul
ins
lds
mov
popa
cdq
xor
or
popa
jge
xchg
cmp
push
daa
(bad)
popa
sbb
inc
jns
dec
rcl
popa
xchg
xchg
cmp
or
xchg
xor
xor
popa
mov
adc
lds
bound
pop
ins
lea
sbb
adc
xchg
popa
dec
cmp
popa
push
mov
xchg
and
push
pop
and
mov
inc
jo
pushf
mov
or
push
fnstcw
jno
je
mov
imul
mov
test
in
loopne
ss
push
xor
stos
es
or
je
pop
mov
sbb
data16
and
leave
push
lahf
push
sbb
outs
shl
pop
dec
push
sub
push
add
jg
shl
mov
add
inc
and
hlt
jmp
adc
lock
fnsave
out
icebp
shl
jo
add
cs
outs
rcr
dec
push
fmul
ds
cmp
stos
push
adc
and
cmps
xchg
add
mov
push
mov
xchg
mov
fnstsw
fxrstor
push
ss
jne
xor
mov
add
mov
mov
and
push
xchg
add
or
dec
test
sahf
or
addr16
call
pusha
pop
aaa
fiadd
sbb
sub
mov
push
jnp
pushf
pop
mov
add
ds
js
sbb
addr16
ret
popa
mov
dec
and
pop
xchg
addps
ja
in
push
xchg
add
fstp
fs
or
cwde
hlt
dec
in
nop
push
out
repz
lahf
or
xor
pusha
scas
out
inc
neg
mov
and
jl
punpckldq
push
xor
push
add
shl
aaa
sbb
fcomp
add
pusha
push
mov
pop
add
retf
xchg
pop
int
in
mov
and
test
adc
mov
outs
outs
lea
mov
push
xchg
adc
ins
fidivr
jnp
jge
add
add
cs
inc
mov
cdq
xor
add
cmp
pop
in
loopne
xor
xor
xchg
push
popa
fstp
cmp
jns
movs
cs
adc
sub
lods
js
xor
mov
(bad)
dec
lods
or
mov
(bad)
rol
inc
or
push
cmove
sub
pusha
adc
(bad)
loopne
push
mov
shl
int
mov
sub
or
sbb
push
xchg
pop
jb
push
mov
clc
sub
aad
lea
or
pushf
add
pop
aas
sbb
popa
pop
jmp
mov
mov
add
dec
mov
sub
inc
aad
fstp
pop
push
scas
sbb
mov
cmp
pop
xchg
das
mov
xchg
lock
sti
mov
(bad)
loopne
out
and
inc
or
sub
pop
push
push
sbb
xchg
inc
mov
and
test
sbb
pusha
add
jnp
aad
pop
and
push
jnp
mov
out
or
or
sbb
push
mov
rep
xor
dec
push
add
dec
dec
inc
in
clc
push
or
xor
daa
loopne
das
dec
push
out
or
mov
mov
loopne
outs
hlt
push
add
stos
adc
into
int3
repnz
xchg
fmul
retf
push
or
inc
sbb
cld
es
dec
sbb
hlt
fnstcw
sbb
xchg
and
sub
mov
or
ins
or
mov
pop
dec
push
sbb
cmp
repnz
or
ficom
and
pop
adc
lock
mov
or
push
shr
mov
push
xchg
push
add
call
nop
scas
dec
loopne
adc
mov
cmp
push
hlt
push
push
es
daa
sub
add
adc
or
add
imul
xor
add
das
cmp
sub
mov
pushf
xchg
xchg
es
add
sub
dec
push
lea
call
daa
daa
daa
mov
es
enter
je
int
in
in
leave
leave
dec
or
out
repnz
fs
mul
out
jb
jb
push
jnp
fdivr
cmp
jns
lock
xchg
mov
loopne
icebp
pusha
mov
out
sbb
pop
sub
in
test
push
shl
mov
add
popf
imul
ss
push
cmp
xchg
outs
dec
loopne
cmp
or
push
ror
ror
sbb
daa
popf
imul
sub
pushf
inc
mov
or
push
sub
inc
lods
pop
mov
out
sbb
les
imul
add
sub
imul
inc
xor
dec
ja
or
xor
imul
pusha
jae
pop
push
jo
pop
out
dec
loopne
rcl
pop
or
je
fwait
or
add
xchg
loopne
push
imul
les
xor
call
iret
rcl
shr
add
and
imul
shl
push
xor
pushf
inc
or
push
inc
jmp
add
sbb
xchg
push
nop
loop
jb
outs
pop
rcl
loopne
daa
cmp
mov
sbb
mov
xchg
sbb
or
mov
xchg
xchg
cmp
xchg
pusha
daa
xchg
push
dec
nop
(bad)
out
or
sbb
pop
add
jae
ret
cmp
push
adc
ret
sbb
ret
imul
adc
popf
shr
rcr
or
ret
cmp
add
or
inc
pop
add
cmp
jns
xor
add
ret
push
push
mov
xchg
dec
xor
add
jno
xlat
ret
or
inc
sub
daa
jo
ret
mov
mov
xchg
mov
push
cmps
jo
ret
inc
xor
adc
mov
or
fst
stos
adc
ss
shl
ins
xchg
imul
xchg
mov
lods
retf
push
loopne
bound
fs
jl
imul
stc
add
bound
aaa
push
int
xor
sub
hlt
cmp
sub
add
add
fadd
inc
and
pop
loopne
or
hlt
sub
and
mov
(bad)
cmc
and
cwde
neg
adc
fst
mov
mov
ror
cmp
jmp
or
daa
icebp
sar
pusha
push
mov
sbb
mov
imul
(bad)
mov
int
and
and
pop
add
cmps
pop
int
ror
data16
mov
and
jg
test
jge
cmp
sub
std
add
out
jmp
push
or
xor
dec
push
push
les
(bad)
or
add
pop
in
call
fsub
stos
push
loop
push
stos
mov
sbb
inc
mov
xchg
sbb
ins
or
mov
aam
mov
or
aaa
pop
pop
sbb
xchg
jbe
lds
mov
(bad)
xchg
mov
sti
push
fidiv
mov
das
mov
sti
push
push
add
addr16
xor
out
test
fnstsw
mov
clc
push
ja
xchg
add
or
push
pop
and
ja
mov
mov
or
adc
ja
cmp
ret
test
jmp
mov
pop
jbe
push
jmp
jne
jbe
push
jbe
std
daa
daa
mov
xor
xchg
xchg
daa
sub
jae
leave
leave
leave
enter
push
leave
jmp
imul
enter
mov
in
leave
leave
inc
jge
add
in
in
sub
iret
aas
in
pop
addr16
push
jbe
pop
sub
jmp
(bad)
das
mov
jno
dec
mov
rol
test
and
add
mov
mov
daa
mov
jmp
xor
inc
push
mov
xor
inc
mov
adc
(bad)
cmp
xor
push
push
icebp
ins
dec
adc
mov
pop
rol
ja
mov
mov
ja
xor
pusha
mov
cmc
mov
out
xchg
inc
lods
xchg
xor
xchg
das
leave
inc
xor
lea
imul
xor
ret
xor
mov
xor
jno
xchg
add
xor
and
mov
pusha
adc
add
push
inc
lea
pop
lods
push
or
jae
rol
or
xchg
sub
dec
call
lods
fild
repz
sub
dec
pop
int
dec
fnstsw
dec
add
fist
imul
cmp
jae
ins
lds
adc
add
fnstsw
adc
cmp
test
fld
cmps
add
dec
adc
shr
test
sbb
bound
xor
cmp
pushf
mov
(bad)
fisttp
mov
mov
loopne
sub
adc
cmps
fsub
test
xor
sbb
lods
mov
mov
lahf
test
sbb
or
scas
dec
mov
cwde
push
xor
inc
cmps
test
inc
jo
aaa
sahf
ror
shr
xor
and
mov
iret
dec
popf
mov
inc
leave
or
cmps
in
pusha
enter
addr16
mov
or
or
mov
or
iret
pavgb
mov
xlat
or
fcom
push
push
xor
adc
push
fimul
mov
jp
bound
adc
or
scas
inc
sub
add
pop
aas
xchg
fadd
push
addr16
popa
xchg
mov
jns
mov
fld
cli
xor
add
les
add
sbb
jmp
mov
pop
pushf
das
mov
mov
add
mov
push
pushf
mov
femms
dec
inc
pop
stos
sbb
out
jmp
adc
sub
jne
inc
push
int
add
fmul
lds
push
out
push
mov
lods
out
or
mov
mov
shl
or
dec
out
shl
out
ja
or
xchg
cmp
push
push
and
cmc
push
pop
pusha
leave
cmps
fs
dec
out
jo
scas
push
add
push
mov
loop
sbb
sahf
fadd
ror
jp
jmp
push
and
cld
fnstenv
loopne
ins
or
pusha
test
push
ins
add
add
jbe
pop
push
adc
retf
add
lods
nop
cmp
in
sbb
inc
pop
cmc
xchg
and
push
out
adc
fsubr
sub
jno
mov
cdq
das
out
femms
xchg
in
jmp
push
inc
out
dec
mov
push
outs
fst
mov
pushf
push
test
xchg
jne
dec
cmp
add
mov
outs
test
shr
das
mov
adc
push
jg
fistp
adc
xchg
jo
jb
je
or
cmp
cmp
push
xchg
loopne
adc
mov
dec
dec
inc
push
mov
pop
adc
outs
mov
das
xchg
xchg
xchg
xchg
push
pop
sub
push
pop
arpl
(bad)
call
pop
out
(bad)
out
xchg
and
imul
push
mov
push
inc
push
fld
or
fcom
div
cmp
test
or
add
pop
add
inc
fnstenv
cmps
dec
popf
xor
jae
popf
mov
inc
mov
xor
je
dec
push
retf
pop
pop
aaa
push
(bad)
mov
sbb
out
outs
lods
dec
cmp
cmc
push
loope
ins
push
jns
imul
pop
call
loopne
push
push
sbb
int
mov
mov
or
icebp
adc
xchg
das
mov
ror
fwait
gs
add
(bad)
(bad)
add
fnstenv
iret
fst
xchg
add
inc
add
and
fld
pusha
fdivr
fldenv
xchg
jecxz
sbb
adc
pop
pop
shr
adc
mov
pop
mov
scas
or
inc
add
rcr
add
add
add
lock
inc
dec
jg
das
movs
fiadd
nop
out
sbb
ins
inc
add
pop
push
jae
add
cmp
adc
add
sbb
xor
adc
add
xor
and
push
cdq
xor
pop
or
xor
xor
or
or
inc
pop
add
or
xor
add
and
add
add
mov
xor
xor
or
inc
sub
aam
add
dec
xor
test
xor
jbe
mov
or
add
add
mov
add
inc
or
inc
fs
xchg
xchg
or
pop
add
mov
mov
loopne
(bad)
or
mov
jge
mov
inc
stc
add
push
add
mov
ret
add
mov
mov
add
sbb
pushw
sub
mov
sub
loope
fisttp
ins
push
lahf
and
jbe
hlt
es
clc
pop
outs
jae
lahf
add
and
out
popa
mov
das
pop
inc
(bad)
cld
fiadd
push
sub
push
add
ror
inc
das
mov
cmp
inc
xor
in
imul
sar
imul
sbb
and
dec
sub
fsub
lds
or
pop
dec
gs
fcmovbe
sar
push
imul
cmp
sbb
aam
mov
pop
bound
shl
outs
xchg
lods
test
adc
jmp
xor
jne
adc
lea
neg
mov
add
push
mov
add
inc
and
lock
mov
hlt
jmp
adc
adc
push
sbb
and
fwait
je
xor
arpl
neg
popa
test
les
pop
add
jns
shl
push
adc
and
add
inc
xlat
jae
rcr
inc
add
ss
and
imul
xor
mov
outs
daa
cwde
popa
js
cmp
sub
test
icebp
xchg
addr16
ret
jmp
inc
or
call
sti
sar
and
sbb
xchg
pop
int
sbb
pop
pop
dec
and
adc
out
ins
pop
push
jmp
js
xchg
push
sbb
div
xlat
cli
push
pop
sub
test
aam
add
fsub
ror
mov
mov
push
shr
mov
mov
or
lods
jnp
xchg
arpl
add
adc
pop
and
push
add
inc
jnp
jnp
or
popa
jnp
adc
pusha
std
jnp
sbb
outs
add
ret
enter
fsubr
jno
mov
jge
(bad)
push
xchg
loope
cmp
(bad)
cmp
add
xor
mov
jp
mov
sub
xchg
imul
fdivr
out
loopne
push
mov
push
ja
xor
mov
mov
ins
push
inc
cld
and
pushf
add
int
and
pop
sbb
add
push
(bad)
sub
mov
jle
xchg
adc
jo
psubusw
popa
iret
gs
arpl
call
mov
add
enter
add
or
push
xchg
inc
mov
fiadd
mov
mov
or
pusha
xor
ret
xchg
add
fcom
jl
(bad)
cli
push
(bad)
mov
mov
(bad)
js
sar
push
rol
daa
and
lock
into
(bad)
sub
sub
push
icebp
mov
mov
retf
pusha
inc
enter
mov
add
or
retf
and
retf
gs
pusha
inc
and
mov
(bad)
adc
or
push
pusha
retf
les
pusha
mov
loope
xor
push
jge
cmps
xor
cmps
xchg
and
mov
xchg
dec
gs
outs
fs
out
loopne
bound
jmp
leave
iret
hlt
adc
iret
cmp
sub
mov
add
mov
or
jle
sbb
mov
xchg
pusha
inc
ret
xor
aaa
sbb
popa
retf
sub
addr16
rol
retf
push
add
push
retf
test
mov
retf
sbb
sbb
add
xchg
xchg
or
pop
dec
lds
sbb
xor
push
add
fsubr
les
pop
cmp
pop
push
mov
push
addr16
rol
ins
jnp
mov
outs
test
bound
addr16
xchg
loopne
add
sbb
jne
shl
pusha
mov
add
sbb
cmp
std
mov
or
mov
inc
xchg
push
xor
das
xor
mov
(bad)
sub
mov
jns
adc
xor
sbb
mov
or
push
mov
shl
push
mov
out
add
cmp
inc
and
mov
cs
jbe
loop
jnp
fcomp
pusha
push
add
or
pavgb
dec
mov
pop
fcom
setp
scas
(bad)
and
xor
or
xor
nop
jo
mov
mov
push
and
mov
mov
push
sub
les
cmp
mov
cmp
lods
add
sbb
popa
adc
xor
and
dec
lds
pop
cwde
das
inc
enter
push
mov
jge
mov
fmul
mov
loopne
ds
mov
xor
(bad)
pop
push
cmp
cmp
stos
mov
popa
aam
or
jmp
xor
mov
mov
and
mov
push
add
push
std
mov
mov
int
push
in
xchg
and
(bad)
shl
jl
adc
popa
add
nop
loope
ja
push
add
xor
xor
and
fs
rol
out
pop
lea
xchg
push
mov
push
mov
cs
popa
xlat
sbb
mov
mov
cmp
add
mov
add
cmp
jp
mov
jmp
ins
xor
sub
inc
add
lds
nop
lea
loopne
lds
js
sbb
sbb
lds
lds
push
jnp
mov
xlat
lds
rcr
call
xor
bound
aad
fmul
add
addr16
xor
mov
div
dec
in
push
movs
sar
xlat
push
mov
mov
pop
pop
xor
sbb
push
add
mov
cwde
mov
push
mov
nop
movs
in
adc
add
int
add
sbb
and
dec
ins
in
or
add
cmp
pop
fld
lock
rol
xchg
pusha
stos
sbb
add
lods
add
or
sbb
iret
shl
push
inc
lds
outs
push
dec
pop
and
jb
in
dec
bound
mov
pop
xor
aas
sub
add
and
adc
cs
or
mov
push
pop
push
add
pop
fsub
mov
push
aas
aas
cmp
pushf
fisttp
das
jno
mov
rol
add
ja
adc
mov
pop
adc
inc
addr16
sbb
lock
js
mov
mov
dec
adc
xchg
jl
push
shl
xchg
scas
loop
adc
test
add
cli
push
scas
mov
fisubr
das
mov
jns
jl
inc
cmp
js
adc
into
scas
dec
sbb
stc
addr16
push
loopne
out
cmps
push
adc
adc
pop
mov
int
inc
add
stos
or
movs
or
stos
out
out
mov
adc
mov
movs
sti
mov
add
mov
sub
push
rol
adc
xor
loop
repz
mov
js
stos
jne
out
in
into
bndstx
sbb
jo
add
aas
dec
xor
push
push
popa
inc
icebp
push
(bad)
aas
ins
cs
mov
push
mov
push
jl
add
aas
pop
cld
pop
rol
aas
xor
jae
sar
xsave
or
push
push
mov
movs
adc
dec
adc
mov
pop
adc
inc
addr16
pop
dec
jmp
test
hlt
sub
lock
sub
call
lds
sub
in
cwde
inc
aaa
(bad)
dec
add
inc
pop
movs
das
ret
push
or
cmp
cmp
ret
sbb
cs
jo
(bad)
in
mov
(bad)
mov
and
add
fwait
cmp
test
pop
push
ins
shl
cmp
add
cmp
cmp
cmp
add
dec
cmp
push
and
adc
xchg
(bad)
push
sbb
add
int3
mov
add
test
sub
inc
fimul
push
xchg
imul
add
stos
push
mov
inc
aas
mov
push
sub
xor
push
aad
repz
dec
fcomi
push
fcom
and
xchg
add
inc
pop
and
add
adc
dec
gs
cmp
fild
ret
test
gs
cmp
xor
add
popa
bound
loopne
bound
or
popa
push
popa
test
in
loope
cmp
push
add
loope
push
add
xor
add
es
mov
add
fsubr
cli
push
mov
in
pop
out
loope
add
ror
add
inc
mov
enter
pop
pop
into
aas
cwde
sbb
cs
lods
and
mov
or
pop
aam
jae
rol
stos
push
mov
pop
push
cmp
add
or
add
enter
mov
aas
loope
fimul
push
test
sbb
cmp
dec
xchg
jns
cwde
outs
cs
adc
test
xchg
ja
push
icebp
push
sti
push
cmps
mov
in
not
ss
loop
div
and
add
ja
sbb
daa
mov
mov
xor
out
xchg
jle
movs
xor
loopne
cmp
cmp
mov
cmp
loopne
cmp
add
les
cmc
adc
mov
add
and
mov
out
mov
xchg
add
out
das
mov
add
cwde
pop
pop
fsub
mov
or
jmp
ja
stc
addr16
add
cwde
sub
inc
cmps
dec
retf
pusha
mov
push
mov
int
pop
sub
retf
and
retf
movs
retf
inc
add
test
push
mov
jecxz
jmp
push
mov
push
and
mov
sub
xchg
mov
and
push
ror
or
dec
dec
loopne
scas
loopne
dec
push
and
sub
jne
cmp
dec
push
hlt
mov
out
push
call
push
pop
enter
outs
daa
out
dec
or
fdivr
jo
ds
test
inc
add
and
xor
pushf
sahf
xor
mov
or
arpl
les
add
mov
mov
or
add
stos
sbb
add
(bad)
or
inc
or
push
add
push
pop
sub
mov
ins
mov
pop
loopne
mov
mov
fmul
pop
mov
mov
or
mov
add
and
mov
push
and
jge
adc
add
push
and
sub
nop
stos
jge
jge
add
xchg
std
jge
bound
scas
pop
aad
add
xor
and
lock
sub
inc
mov
mov
add
push
mov
sbb
or
lds
fisubr
ja
and
mov
cmps
clc
mov
repnz
push
pushf
add
push
pop
sbb
or
cmp
cmps
cmp
xchg
test
int
mov
dec
xor
adc
and
xchg
dec
sbb
inc
add
nop
lea
or
sbb
sub
push
or
push
loopne
adc
les
rol
jecxz
add
cmp
pop
add
pop
les
push
icebp
add
loop
xchg
or
div
add
pop
into
sbb
jmp
and
mov
or
sar
gs
push
jno
push
add
bound
jno
xor
rcl
dec
jno
sub
xchg
pop
adc
inc
or
dec
ja
add
cmps
in
inc
xchg
adc
sub
movs
add
pop
pushf
out
cmp
pop
push
daa
push
xor
add
add
pop
cmp
pop
popa
not
dec
push
add
jo
fxtract
pop
pop
int3
daa
jmp
das
sahf
dec
popa
pop
xchg
pop
cmp
or
add
add
movs
mov
adc
dec
adc
pusha
xor
popa
test
mov
or
sbb
fist
lds
adc
pop
out
pop
fsubr
je
out
das
jmp
cmp
push
out
(bad)
pop
pop
loopne
adc
add
sahf
(bad)
lds
(bad)
sar
stc
addr16
addr16
test
pusha
jo
fwait
adc
addr16
add
addr16
test
addr16
test
std
push
and
adc
push
adc
xor
arpl
cmp
add
pop
loopne
add
push
adc
call
out
mov
inc
push
(bad)
fucomi
adc
and
and
jmp
cmp
loope
adc
pop
cs
std
fsin
call
xchg
add
pop
mov
lea
push
lahf
push
cmc
or
xchg
or
jmp
fild
push
sbb
cmp
push
add
pusha
pop
call
push
(bad)
aas
cmovno
push
sbb
push
cmps
call
call
mov
test
push
nop
push
mov
xchg
rcl
out
jns
jmp
mov
fsub
sbb
mov
push
pop
dec
cmp
push
aaa
fistp
xchg
push
ds
adc
push
xchg
add
hlt
jne
mov
jmp
shl
sbb
ja
int
loop
jle
push
data16
je
(bad)
mov
(bad)
mov
sahf
clc
adc
sub
into
add
sbb
inc
pop
icebp
ret
dec
add
popa
ins
gs
aaa
push
adc
mov
cmp
fiadd
jne
fild
push
sub
fs
daa
mov
rol
push
xchg
inc
adc
mov
add
push
dec
jb
popa
jnp
fistp
cld
lods
outs
je
inc
jns
push
push
push
hlt
out
push
push
outs
push
pop
rcpps
pop
mov
(bad)
mov
inc
ins
outs
popa
jge
jp
sbb
or
jp
xchg
jp
pop
adc
jle
jbe
or
inc
js
push
push
adc
call
mov
mov
mov
xchg
nop
push
add
pusha
mov
add
xlat
dec
mov
or
shr
clc
or
cmp
dec
cld
mov
push
pop
arpl
retf
loopne
ins
sub
sbb
ficom
iret
or
fs
push
fs
push
adc
add
xor
arpl
ins
rcr
push
inc
mov
or
push
mov
cmp
aaa
adc
popa
jae
ins
mov
mov
fidiv
adc
adc
js
dec
dec
jo
adc
jbe
retf
mov
cmp
popa
gs
push
pop
lods
or
sub
mov
hlt
mov
inc
jae
cs
ins
cmp
pusha
pop
mov
lock
or
xlat
add
push
inc
or
fs
sbb
adc
mov
dec
jne
push
xor
(bad)
xlat
pusha
arpl
push
mov
jae
leave
xor
jmp
mov
add
push
dec
je
add
or
clc
or
dec
in
inc
jne
mov
mov
jb
popa
loopne
pop
(bad)
arpl
ja
push
cmps
dec
sar
in
push
inc
and
ss
mov
jbe
inc
in
cwde
mov
leave
cmp
es
push
push
gs
imul
arpl
clc
in
int3
fadd
mov
mov
push
lock
and
mov
int3
lods
sub
enter
add
fcmovu
pop
inc
inc
or
es
inc
jno
(bad)
cmp
push
add
adc
loope
jmp
fs
fild
cmp
jle
cmp
mov
cwde
push
outs
push
mov
nop
pop
pop
and
test
sub
into
or
hlt
adc
outs
sar
xchg
inc
xor
lds
rcl
ror
js
inc
pop
ins
xor
int
xor
or
inc
(bad)
push
fcom
arpl
fidiv
push
or
ret
imul
arpl
adc
adc
ins
add
je
inc
aad
push
stos
test
pushf
das
adc
ins
je
sti
ss
xor
jb
xor
mov
mov
push
scas
inc
mov
jbe
mov
scas
(bad)
scas
adc
das
xor
inc
or
push
aam
or
or
cs
sub
das
(bad)
sub
xor
lock
es
add
add
dec
sub
cld
popa
pop
int3
cmp
mov
add
pop
sub
push
cmp
jmp
imul
mov
daa
add
iret
sbb
add
xor
fdivr
lock
outs
or
cmp
scas
cmp
or
lods
inc
or
mov
cmp
adc
jnp
xor
pop
xlat
pusha
fs
add
dec
data16
dec
retf
or
cmp
add
sbb
sub
xchg
sahf
retf
and
cmp
addr16
out
stos
xlat
loopne
xor
push
mov
test
pusha
aaa
push
imul
and
add
inc
sub
or
sbb
cmps
add
xor
out
add
and
jo
sbb
and
push
xchg
sub
pop
sub
aas
call
outs
in
loope
mov
xor
or
sub
jne
(bad)
fisttp
pop
(bad)
fistp
(bad)
xchg
outs
enter
cmp
ffree
xor
sbb
or
and
or
mov
in
mov
dec
cwde
inc
lock
(bad)
jecxz
mov
das
adc
(bad)
mov
jae
jbe
cmp
icebp
movsx
inc
inc
fstp
or
mov
mov
xchg
cmp
jo
push
sahf
mov
ror
dec
ret
nop
(bad)
lock
mov
adc
clc
jnp
fadd
aas
lahf
ret
cmp
imul
sahf
ds
cdq
xor
sub
imul
je
or
lahf
lds
mov
cmp
push
pop
sbb
ins
clc
loopne
dec
or
shr
inc
hlt
push
add
push
jb
je
inc
push
mov
mov
sbb
inc
sbb
ror
cmp
pusha
mov
and
jb
aad
call
inc
mov
cwde
enter
sub
test
jbe
and
jecxz
add
or
jns
nop
cmp
add
in
ins
push
or
imul
out
pop
sub
inc
xor
aas
xor
mov
jno
xchg
inc
mov
mov
adc
push
ins
shr
daa
adc
aaa
leave
scas
jno
inc
push
int
add
xchg
pusha
xlat
adc
js
cwde
jp
cmc
sub
ja
push
mov
mov
xor
pop
cmp
or
and
sub
mov
inc
popa
jo
(bad)
smsw
push
xchg
sbb
mov
jb
inc
xchg
lock
es
or
cmp
add
and
jb
mov
movs
ret
jge
push
and
jmp
jle
ret
inc
imul
cmp
es
jo
mov
in
stos
out
arpl
popa
mov
mov
mov
mov
mov
out
sbb
imul
and
xor
fadd
nop
adc
and
cmp
ror
mov
pop
sbb
mov
xchg
inc
or
pop
and
and
js
xor
es
js
or
inc
stos
(bad)
push
mov
or
jp
lahf
pop
out
mov
in
(bad)
pop
xchg
and
test
adc
jns
mov
fnstenv
or
push
je
ret
or
and
lock
imul
cmps
or
mov
dec
sbb
or
rol
movs
or
pop
jnp
jge
pop
shl
add
add
pop
sub
inc
mov
fild
cmp
aam
cmps
xor
add
adc
outs
sar
or
push
fmul
xor
xor
adc
sub
add
xor
xchg
jmp
jb
pop
sbb
xchg
dec
xor
or
jns
int
pop
push
adc
pop
and
xchg
ficomp
or
(bad)
loop
jbe
cmp
mov
mov
sbb
sar
xlat
xor
or
push
in
sahf
push
or
mov
add
sbb
and
int3
or
rol
in
(bad)
lock
xor
push
or
adc
nop
aaa
xchg
sbb
xchg
jnp
add
xor
test
fmul
test
into
dec
cdq
xor
shl
add
pop
push
or
add
fist
inc
push
cwde
retf
jne
push
inc
jle
xlat
shl
aaa
push
xchg
xchg
adc
sub
imul
push
test
push
mov
test
push
dec
test
and
jge
jge
lods
inc
fldcw
arpl
jbe
and
loopne
and
sub
and
mov
sub
sbb
scas
cmp
sbb
add
sub
nop
shl
mov
pop
test
adc
leave
pushf
je
fsubr
mov
js
and
mov
push
and
cmps
das
mul
xchg
or
push
lahf
inc
add
popa
sbb
cmps
pusha
jne
add
pop
push
mov
add
jnp
adc
xchg
fdivr
push
inc
sbb
add
mov
jno
fdiv
mov
sub
pop
lods
cmps
into
jne
cwde
push
push
adc
add
pop
push
add
push
pop
loopne
sbb
adc
dec
mov
aas
xlat
pop
xor
sub
add
ins
test
inc
add
pop
add
dec
push
add
jne
imul
push
push
push
push
push
add
mov
call
push
test
je
or
push
call
lock
inc
lea
add
adc
fucomp
out
aam
(bad)
push
mov
jp
pop
pop
pop
pop
ret
lea
add
inc
mov
push
mov
in
push
pop
pop
das
add
xor
cdq
sbb
or
dec
inc
repnz
mov
inc
mov
inc
or
jg
dec
mov
adc
aaa
cmp
dec
and
mov
xchg
addr16
das
rol
adc
adc
aaa
mov
outs
fisttp
dec
or
add
iret
sbb
mov
pop
add
cmp
addr16
mov
mov
(bad)
xor
push
push
mov
mov
mov
pop
stos
add
push
or
cmps
popf
push
adc
xor
and
bound
sub
mov
sar
(bad)
cwde
jp
mov
fucomip
scas
add
imul
ficom
ret
les
mov
push
push
fstp
push
inc
or
(bad)
add
pop
push
ror
pop
aaa
adc
push
push
mov
jne
cld
pop
aad
push
xchg
js
dec
into
fidivr
or
rcl
jl
push
pop
or
and
add
cli
push
clc
adc
xchg
inc
jmp
cdq
jge
test
jp
xchg
dec
and
cmp
pop
mov
mov
(bad)
sub
pop
cmp
xor
pop
imul
movs
push
sub
(bad)
mov
cdq
loopne
sti
in
cmp
jmp
jge
add
dec
cmp
fiadd
test
js
cmp
add
jmp
jb
mov
adc
loop
pop
in
ins
jne
lahf
pop
ds
ror
nop
leave
shl
push
jns
(bad)
sbb
cdq
or
lea
xor
mov
in
gs
xor
iret
int3
xchg
xor
ds
xchg
inc
in
push
imul
mov
cmp
mov
sub
adc
inc
cmp
fucomi
dec
daa
pushf
mov
mov
cmp
xor
inc
xchg
adc
fadd
inc
fadd
inc
loopne
mov
fcom
call
in
sbb
pop
pop
adc
jge
jb
sub
push
fcom
push
in
sbb
lds
je
je
sbb
jmp
add
pop
push
pop
xchg
popf
stc
cli
push
ret
cli
push
iret
mov
outs
sub
dec
repz
inc
inc
mov
dec
cld
sub
jae
jle
mul
and
mov
clc
mov
jmp
(bad)
mov
das
add
and
push
adc
xchg
aaa
sahf
cmp
jb
jmp
jl
daa
or
jbe
and
ss
call
scas
or
lock
cld
xchg
or
nop
popf
and
and
pop
aas
sbb
je
clc
jb
push
add
ror
cli
push
dec
push
outs
sbb
xor
add
push
scas
mov
add
xor
mov
in
lods
or
inc
fs
add
sub
ins
xchg
xchg
xchg
mov
popf
(bad)
outs
(bad)
jmp
xchg
enter
mov
jmp
pop
push
or
daa
xchg
sbb
add
adc
es
push
js
jne
or
or
inc
mov
dec
daa
aaa
jno
adc
into
daa
add
and
pop
sti
push
push
jle
rol
push
cmp
scas
adc
cs
aam
aaa
pop
aaa
iret
mov
jne
dec
push
and
nop
scas
jge
loopne
data16
cdq
mov
aad
or
ins
test
mov
pushf
inc
fistp
cmp
and
test
or
dec
shl
add
jne
mov
call
(bad)
clc
not
cmp
add
sbb
sub
sub
mov
mov
mov
pop
fadd
shr
test
ja
outs
jne
xchg
cmps
cmp
jne
cmps
add
mov
adc
sbb
dec
cmp
cmp
(bad)
leave
in
in
cmp
fwait
cmp
fld
aaa
push
mov
call
xor
jo
in
sbb
ins
inc
pop
outs
and
mov
xchg
add
je
push
push
or
or
(bad)
cmp
inc
scas
push
xchg
ins
cwde
or
add
sti
mov
pushf
mov
push
ds
adc
out
add
jns
and
and
mov
xor
xlat
mov
jbe
push
push
mov
sbb
mov
add
in
loopne
stos
lock
or
ret
push
js
sar
shl
xlat
imul
add
dec
lds
nop
xor
mov
lea
ret
cmps
mov
add
cmp
lahf
adc
add
sbb
and
out
cli
rcr
push
xlat
ret
sbb
pcmpeqb
inc
inc
push
fs
lock
mov
adc
movs
xor
cmp
je
inc
xchg
add
pop
test
pop
cld
test
cmp
add
lock
cmp
mov
add
test
leave
jbe
mov
enter
pop
adc
mov
add
add
test
cmp
push
cmp
push
add
pop
add
popa
test
clc
je
mov
jle
cmp
js
jge
ja
adc
test
setne
xchg
push
xchg
mov
mov
aam
pop
cmp
aaa
rcr
aam
sub
mov
jbe
outs
fwait
sub
jmp
push
mov
sti
js
jp
icebp
pop
push
rol
and
mov
push
cmps
out
adc
jmp
lea
fidiv
or
cs
(bad)
lock
ins
cmp
bswap
test
loope
retf
inc
ror
xor
les
cwde
adc
daa
sub
adc
inc
ins
fisubr
inc
ins
imul
mov
movs
adc
imul
iret
in
dec
add
outs
jne
pop
pop
data16
retf
mov
or
imul
inc
call
out
xor
lahf
pop
jns
xchg
add
and
aas
push
sub
add
fst
pop
sar
retf
cmp
push
pop
adc
es
push
inc
or
pusha
icebp
in
aaa
setae
fsubr
mov
out
repz
mov
and
xor
(bad)
call
inc
cmp
jne
mov
data16
push
sub
bound
call
movs
push
cld
shr
jbe
pusha
imul
inc
inc
mov
sub
sbb
push
cmp
xor
cmp
and
fcomp
je
inc
fcmovu
adc
mov
lock
xchg
shl
jne
cmp
mov
in
je
(bad)
(bad)
out
adc
inc
push
lea
inc
add
inc
adc
inc
imul
mov
shr
sbb
mov
jmp
sbb
movs
mov
pusha
aad
xor
int
mov
push
je
mov
push
inc
add
xchg
inc
add
adc
xor
dec
shr
aaa
cmp
sbb
cmp
test
sub
cmps
xchg
adc
mov
dec
xor
inc
mov
or
xchg
inc
or
or
jne
or
add
mov
clc
push
fiadd
lea
pop
mov
dec
stos
std
mov
adc
add
sbb
add
cmp
add
lods
std
pop
pop
(bad)
adc
(bad)
test
je
xor
mov
lahf
pusha
cmp
jnp
mov
mov
cmp
jne
idiv
pop
adc
in
mov
xor
sbb
movups
fbstp
dec
jne
jmp
mov
push
mov
pop
ja
mov
and
loopne
inc
sahf
xor
cmp
jle
mov
js
out
or
mov
pop
js
push
and
rol
frstor
mov
inc
mov
jo
call
int
xor
lahf
push
test
add
sbb
ins
add
or
cld
iret
mov
out
inc
jne
sbb
pushf
jecxz
fadd
adc
ja
xor
xor
scas
aad
adc
and
pushf
andps
or
fidivr
mov
push
push
test
jle
mov
and
xor
mov
sbb
mov
or
mov
push
or
stos
push
or
pop
pop
mov
test
push
test
dec
xor
cmp
je
mov
dec
push
sbb
jne
scas
xor
inc
push
dec
add
scas
movs
and
in
dec
jno
cmps
sbb
loop
mov
push
xor
fwait
cld
cmps
loop
xchg
(bad)
jne
jmp
dec
adc
or
and
rol
add
test
xchg
mov
sbb
test
push
gs
push
jp
mov
inc
push
and
or
stos
mov
repz
push
movs
ss
sti
sbb
pop
sbb
sbb
mov
retf
dec
or
bndstx
jmp
cmp
lds
or
shl
pop
cmp
mov
(bad)
dec
ja
movsx
add
call
ret
call
ret
js
bound
add
mov
idiv
xchg
xchg
add
cmp
into
repz
cmp
sbb
sbb
jb
ret
push
or
add
pop
daa
add
pop
and
das
fdiv
and
xor
sahf
popf
sub
inc
sbb
push
cmp
dec
rol
pop
sti
xor
inc
jbe
xchg
jp
cs
sub
jg
adc
out
adc
and
xor
xor
cmp
mov
push
cmp
sub
push
push
loopne
idiv
inc
cs
mov
int3
pop
mov
cmp
jne
adc
aad
jmp
fmul
add
or
je
inc
add
ret
cli
cmp
je
inc
cli
sub
sbb
add
add
gs
popf
enter
clc
adc
inc
in
sbb
push
hlt
mov
jp
ret
sbb
mov
xor
dec
cld
or
cdq
in
push
fisttp
mov
nop
push
loopne
jl
ins
cmp
fucomi
jns
mov
push
mov
call
inc
int3
mov
push
lea
add
outs
in
js
xlat
sahf
mov
loopne
loopne
fdiv
xor
aam
or
and
mov
push
call
push
sbb
jle
sbb
jge
stos
add
mov
lds
and
ja
mov
inc
adc
mov
dec
es
pusha
les
clc
mov
sbb
clc
cmp
sbb
das
loop
daa
adc
mov
jno
jl
dec
aaa
loopne
inc
xor
push
aaa
shl
mov
scas
dec
syscall
add
ins
push
jns
inc
inc
cmp
add
or
popa
or
pop
shl
xchg
dec
repnz
adc
hlt
jmp
or
jl
dec
rcl
mov
mov
hlt
xor
fchs
shl
scas
adc
mov
add
mov
push
add
add
mov
js
ret
or
(bad)
jle
cmp
out
popa
jo
mov
inc
add
daa
adc
lods
fs
in
outs
(bad)
push
(bad)
into
sub
ds
lock
mov
lea
retf
xchg
rol
push
xchg
xchg
mov
xchg
mov
mov
lods
mov
nop
xchg
cwde
pushf
adc
push
dec
(bad)
mov
sar
jle
cmp
in
rol
in
dec
pop
sti
and
inc
mov
mov
fst
or
sub
mov
xchg
jmp
cld
or
add
dec
rcr
jl
movs
movs
out
shr
movs
fwait
neg
mov
sub
inc
xor
inc
shr
pop
mov
jo
cmp
pusha
mov
ret
inc
mov
pop
push
sbb
jo
call
mov
rol
cs
call
iret
fisttp
outs
add
mov
enter
shl
cmp
inc
mov
mov
push
jo
lods
cmp
inc
or
jmp
jae
mov
push
ss
jmp
inc
push
xor
vmovlps
arpl
test
push
or
sbb
sbb
pusha
cmp
popa
mov
dec
cmp
sbb
mov
fsub
add
and
fadd
ins
iret
movs
cwde
xchg
push
adc
inc
sub
cdq
mov
pop
push
dec
loopne
mov
sbb
mov
xor
jg
ret
push
cmp
(bad)
mov
cmp
je
out
add
mov
jp
and
ja
jmp
call
jge
jg
jmp
daa
add
mov
cmp
jb
mov
add
lods
sar
es
or
adc
test
and
jle
sbb
inc
sbb
dec
mov
mov
mov
in
ds
out
in
mov
mov
cmp
mov
mov
cmp
(bad)
jg
(bad)
ja
jb
xor
xor
push
add
out
out
cmp
es
or
jo
sti
mov
add
enter
adc
inc
pop
cwde
je
jmp
outs
adc
pop
out
dec
pop
push
jbe
mov
adc
cmp
ja
int3
lods
xchg
push
aad
ja
aad
(bad)
fsub
inc
pop
and
mov
push
jge
and
xchg
pop
and
aaa
adc
loope
les
dec
bound
fsubrp
cmp
jmp
xor
loope
xor
push
sub
adc
xor
ret
es
ins
add
and
inc
pop
nop
sbb
add
sub
mov
icebp
jae
fwait
daa
jo
mov
test
jge
mov
xor
mov
loopne
mov
push
pop
pop
popf
add
call
ficom
js
lock
xchg
cmc
cmp
test
out
dec
test
loopne
jmp
mov
dec
ror
sub
sti
push
pop
arpl
loope
call
mov
addr16
add
sbb
test
ins
push
cmp
ja
bt
jae
xlat
ja
aad
ds
cdq
mov
add
and
cli
mov
cmp
jne
cmp
mov
rcr
ss
test
mov
call
jno
jne
std
addr16
pop
(bad)
sub
pop
pop
pop
inc
pop
bswap
cmc
add
xchg
clc
add
add
pop
pushw
adc
adc
and
loope
push
jne
mov
mov
push
outs
pop
mov
repz
je
lods
push
outs
or
rol
inc
dec
cmps
lock
mov
jnp
xchg
pop
and
ret
cdq
xor
test
je
xchg
or
mov
mov
jmp
cmp
pop
pop
test
pop
mov
mov
jo
cmp
lock
(bad)
mov
add
push
stos
ficom
xor
mov
sbb
retf
out
loope
mov
pop
test
dec
pop
adc
rcr
shl
in
inc
cmp
and
xchg
sahf
(bad)
ins
push
add
aad
jns
xor
push
sbb
or
js
cli
scas
xchg
mov
lea
mov
pop
out
cld
pop
mov
xchg
inc
add
add
sbb
in
add
jg
adc
jg
ret
mov
or
xor
adc
mov
inc
cmp
pop
push
ret
call
or
call
jb
push
into
das
mov
lods
cmp
jb
in
inc
mov
stos
mov
rep
dec
pop
mov
inc
rcl
lea
jmp
push
aam
and
sub
arpl
jae
das
in
into
mov
mov
aas
ror
mov
outs
sbb
mov
icebp
outs
icebp
pop
aas
push
sbb
cmc
mov
repz
nop
and
out
clc
inc
loop
mov
jge
mov
test
shr
and
pushf
lods
jmp
ja
sbb
mov
sub
loopne
pop
jno
add
pop
imul
fwait
or
dec
ds
shr
les
lods
sub
and
pop
scas
fwait
jnp
or
addr16
mov
fs
dec
push
or
cwde
jl
and
dec
(bad)
adc
and
out
popa
fwait
dec
add
push
or
sahf
jo
push
xor
inc
popf
pop
add
pop
cld
pusha
xor
popa
jmp
movs
xor
movs
cs
jmp
push
or
mov
shl
mov
dec
loopne
jl
push
or
pop
inc
call
pusha
inc
dec
in
test
push
mov
add
icebp
dec
outs
pushf
imul
push
inc
pop
call
fmul
mov
add
aas
out
or
xchg
movs
movzx
fiadd
iret
dec
cmps
adc
sbb
add
leave
mov
scas
xchg
cmps
ins
sbb
add
data16
and
jns
adc
mov
add
jb
mov
sbb
adc
cmc
adc
loopne
sar
and
sbb
int
inc
push
pop
cld
cmp
popf
adc
cmp
adc
sbb
adc
lea
pop
adc
cmp
cmp
mov
sbb
fidivr
sahf
pop
(bad)
mov
xor
rdmsr
retf
jo
ret
adc
sbb
or
add
aaa
test
mov
inc
or
add
dec
je
adc
jmp
aaa
inc
ror
push
je
adc
mov
or
outs
xchg
inc
(bad)
mov
mov
xchg
sbb
push
or
dec
je
adc
jne
xchg
mov
mov
(bad)
cmps
sbb
mov
adc
mov
sets
movs
or
fldenv
pop
das
ucomiss
shl
rol
subps
jmp
push
xchg
mov
(bad)
adc
aas
inc
hlt
push
cmpps
retf
sbb
mov
lahf
dec
mov
add
sbb
outs
mov
mov
out
mov
and
out
out
fisubr
inc
xchg
push
push
imul
movs
icebp
inc
movs
mov
jmp
daa
lods
movs
movs
das
xchg
xchg
dec
ss
test
pop
cs
cmps
int3
sub
test
mov
(bad)
xor
aam
push
add
imul
fld
cld
mov
inc
sbb
xlat
lock
add
adc
jns
jnp
add
xchg
sbb
xor
sbb
rcr
cmp
repz
adc
jae
fstp
clc
add
cmc
sub
cmp
inc
adc
(bad)
lods
cs
or
outs
fistp
jle
inc
retf
cmps
pop
jmp
cmp
or
(bad)
out
jo
in
jecxz
jmp
pop
test
icebp
or
lock
shr
xchg
lea
nop
mov
data16
scas
mov
add
xor
das
mov
jle
push
repz
mov
inc
jnp
dec
pushf
jge
mov
stc
cmp
mov
cmp
test
add
int
pop
cmps
(bad)
pop
push
push
jb
jo
gs
mov
push
or
outs
addr16
data16
pop
inc
xor
pusha
and
add
in
mov
outs
lds
add
ins
pushfw
or
pop
sub
add
push
outs
arpl
sbb
inc
jae
or
icebp
inc
jae
add
loopne
mov
cld
stos
fsubr
adc
add
or
je
pop
popf
jns
mov
add
int
add
mov
or
cs
out
inc
fstp
fmul
fbld
nop
ret
lock
push
imul
aaa
and
fdiv
enter
or
dec
cmp
sbb
mov
cwde
jae
popa
sbb
add
add
aaa
inc
ret
or
jbe
and
out
push
push
add
dec
ins
gs
add
or
or
pop
dec
and
enter
mov
sbb
nop
or
aaa
xlat
push
popa
xlat
popa
fild
das
loope
push
xor
push
ret
(bad)
(bad)
jge
xlat
inc
outs
jne
xchg
sbb
inc
inc
xlat
mov
fs
push
sbb
ror
aaa
loopne
and
mov
xlat
jo
add
push
add
xchg
(bad)
loope
push
jmp
stos
sbb
push
inc
js
outs
mov
loope
push
fisub
and
dec
xor
adc
xchg
pusha
inc
or
aas
pop
lea
xchg
add
push
popa
mov
push
jne
and
fisttp
iret
push
ret
xchg
push
inc
outs
ins
jo
xchg
sbb
ret
rol
rol
dec
push
pop
mov
xchg
nop
and
xlat
aaa
push
xchg
pop
test
retf
dec
enter
and
pop
das
aaa
inc
ret
or
jbe
mov
scas
inc
jne
jb
xchg
(bad)
in
xlat
sbb
loopne
mov
or
sbb
jb
scas
lea
push
push
scas
jecxz
(bad)
das
pop
add
jle
fild
sbb
adc
ror
and
sti
cmp
add
adc
mov
cmp
cmc
lea
sar
add
xor
fld
outs
ins
imul
pusha
mov
mov
add
pop
and
or
push
add
pusha
rcr
cdq
test
enter
pop
mov
mov
ja
ret
jne
(bad)
call
push
push
shl
or
add
ret
imul
inc
adc
into
mov
mov
fisttp
test
pop
xchg
xchg
test
leave
push
push
rcr
mov
lock
and
push
call
add
dec
or
fisttp
in
xor
dec
mov
ret
pop
and
or
mov
mov
add
fcmovnu
std
ret
stc
or
xchg
rol
ja
neg
add
(bad)
mov
add
lock
pusha
jmp
push
out
dec
(bad)
sar
pop
clc
mov
lahf
adc
repz
mov
in
pop
jg
mov
cmp
(bad)
and
push
xor
sbb
rcr
sub
pushf
stos
not
sar
popf
inc
jne
mov
test
pop
sub
adc
movs
dec
mov
loopne
ror
cmp
mov
ss
sub
or
xchg
pop
and
push
xchg
jbe
xchg
movntq
mov
mov
mov
cmc
mov
and
dec
jae
pop
mov
cmc
cmp
test
mov
mov
movs
mov
test
stos
mov
or
out
or
cli
popa
ins
imul
add
push
mov
jp
and
push
in
outs
add
mov
das
ficom
aaa
inc
lds
outs
cmp
mov
(bad)
pop
leave
pop
mov
pop
je
inc
sub
dec
bound
arpl
push
popf
pop
add
sbb
and
test
test
dec
dec
xor
idiv
ins
and
enter
add
inc
fild
sub
cdq
jg
test
retf
mov
add
ret
inc
movs
sub
push
bound
sbb
or
mov
add
sub
retf
in
pop
popa
push
and
lods
push
pop
mov
loope
push
sbb
inc
cld
call
mov
adc
sbb
jmp
fsubr
jns
(bad)
adc
pop
mov
xchg
pusha
test
jnp
shr
or
or
add
push
add
pop
test
lods
lods
fnstenv
cmp
pop
xor
lock
add
xor
nop
inc
mov
and
fistp
(bad)
cmc
adc
data16
jmp
imul
ret
jle
mov
push
and
pop
das
push
fstp
jae
cmp
xor
jno
or
inc
add
mov
or
and
adc
mov
movs
lock
icebp
adc
or
add
sbb
int3
add
push
es
cmp
or
or
xchg
adc
inc
es
or
and
rol
add
push
dec
and
or
sbb
jle
sbb
sbb
add
pushw
or
cmp
cwde
pusha
outs
push
jl
xchg
loopne
adc
or
cmp
mov
inc
or
or
push
aaa
sub
mov
jmp
sub
add
adc
push
and
push
pop
add
ret
or
je
arpl
xchg
fbld
jo
dec
xchg
inc
sub
and
loopne
or
pop
adc
and
mov
loope
or
push
cwde
into
clc
dec
add
push
push
gs
imul
jbe
xor
jae
inc
sub
pop
leave
sbb
push
adc
outs
fs
fidivr
in
ins
popa
jae
gs
in
or
(bad)
out
fsubr
outs
ins
dec
xchg
loopne
or
data16
jne
pop
imul
data16
sbb
push
sar
test
popa
ins
xor
fisub
push
pop
or
inc
imul
fs
fstp
std
cs
outs
xchg
sbb
sbb
add
sub
dec
outs
mov
sub
(bad)
push
gs
fs
dec
outs
ins
jl
mov
out
adc
sahf
arpl
test
pop
fadd
int3
xor
jo
adc
outs
ins
adc
jae
mov
mov
lahf
or
cmp
pop
ss
push
loopne
out
ins
je
or
jb
or
ss
sar
ja
push
dec
imul
in
pop
jo
add
push
mov
ins
popa
mov
push
sbb
add
add
cmp
push
in
inc
cmp
add
pop
xor
xor
or
or
dec
gs
jo
jp
out
call
dec
add
aam
or
aas
ds
scas
mov
or
gs
out
fs
out
add
jnp
inc
mov
mov
je
jmp
mov
ret
ss
push
add
push
movs
sbb
out
jp
aaa
cmps
dec
xchg
jbe
jae
add
dec
sub
xor
out
frstor
adc
pop
cld
das
add
sbb
test
inc
pop
test
inc
add
fcmovu
jnp
push
inc
sbb
xchg
or
daa
xor
push
fimul
nop
ins
xor
pop
and
lock
and
mov
add
mov
xchg
mov
xchg
dec
jecxz
movs
push
xor
xchg
adc
imul
dec
gs
inc
and
pop
icebp
sub
or
cdq
scas
hlt
sbb
add
add
inc
int
adc
mov
arpl
mov
or
or
int
pusha
mov
mov
out
sbb
lods
lss
inc
mov
ja
inc
rcl
or
dec
pusha
nop
pop
pop
and
mov
dec
ins
pop
test
cvtps2pd
mov
mov
lods
mov
and
inc
test
pop
dec
aam
mov
das
add
scas
loopne
pop
sub
shl
(bad)
push
popa
xor
and
or
das
add
outs
rsm
dec
xchg
dec
mov
adc
add
rcr
and
fwait
or
inc
sahf
ret
pop
push
add
push
dec
mov
cmps
xchg
rcl
sahf
and
adc
adc
pop
hlt
das
js
and
dec
push
inc
icebp
mov
adc
outs
fs
pop
sub
pop
pop
push
fsubr
push
aas
add
push
push
loopne
js
add
sbb
and
or
(bad)
out
fwait
or
pop
dec
rsqrtps
sub
arpl
pop
mov
and
pop
dec
(bad)
loopne
jnp
dec
adc
pop
hlt
das
cli
adc
enter
fcom
dec
imul
cmps
out
sub
push
dec
pushf
aas
add
pop
movs
call
pshufw
xor
outs
outs
xchg
sbb
sub
adc
faddp
pop
jl
fld
pop
push
cvtps2pd
shr
pop
add
pop
or
hlt
add
push
pop
dec
jne
dec
inc
adc
cmp
iret
pop
sub
sbb
cld
xchg
mov
(bad)
mov
adc
outs
jbe
ins
imul
jne
imul
pop
outs
adc
push
outs
mov
xchg
ins
xchg
jg
or
mov
jmp
cmp
jno
jo
outs
adc
pop
ja
js
scas
popa
jb
test
stos
pushf
dec
(bad)
out
in
push
add
sbb
push
inc
xlat
sar
jg
arpl
add
ins
jo
or
cmp
xlat
cs
in
aaa
jnp
xor
add
pop
scas
jo
add
or
in
or
adc
fimul
or
jg
push
pushf
push
outs
imul
sahf
je
shr
mov
mov
leave
push
daa
imul
adc
aaa
mov
vmlaunch
mov
in
inc
jbe
gs
sbb
or
add
out
dec
fadd
and
or
mov
push
inc
jne
in
ror
cwde
add
lods
fwait
sbb
jo
daa
lds
rol
add
dec
ss
leave
lods
inc
jo
call
inc
shl
sub
nop
pusha
out
gs
aam
dec
push
mov
in
jle
jno
push
rcr
fs
neg
mov
or
call
retf
mov
mov
xchg
retf
mov
push
das
xor
clc
lock
scas
fld
not
daa
test
or
daa
popa
xor
xor
in
nop
and
or
arpl
jns
push
ja
jo
add
push
(bad)
out
int
mov
pop
int3
pop
dec
push
dec
(bad)
mov
(bad)
jo
inc
int3
das
adc
setae
mov
enter
mov
in
in
cmc
cmp
xor
in
adc
or
iret
and
cld
add
cmps
emms
pop
xchg
jb
jns
shl
sub
sub
mov
dec
add
fs
pop
xor
lds
repz
inc
mov
popf
popa
and
jb
push
xor
stos
loop
dec
push
clc
dec
jae
add
mov
xchg
dec
add
mov
push
(bad)
outs
pop
movs
mov
add
adc
lods
push
mov
dec
xchg
dec
in
(bad)
cdq
pop
arpl
outs
ins
add
mov
pop
nop
add
mov
int3
popa
pop
push
push
mov
nop
ja
push
xor
xchg
ret
or
inc
stc
dec
imul
sub
push
fucom
xor
in
inc
or
ins
in
dec
add
xchg
nop
xchg
xor
es
mov
mov
dec
or
jns
pop
mov
movs
sub
(bad)
jg
data16
or
scas
pusha
movs
push
push
adc
test
adc
jb
icebp
adc
push
in
stos
or
xchg
or
add
popa
sub
cmp
push
add
leave
inc
cwde
add
or
dec
jle
mov
or
ja
xor
push
add
iret
repnz
pop
push
sbb
add
repnz
pop
je
adc
lea
imul
adc
add
push
inc
inc
pop
push
rol
pop
push
jo
mov
adc
xchg
mov
push
add
fst
sub
push
jae
popa
icebp
adc
ins
sbb
lock
cld
stos
mov
test
in
je
je
xlat
inc
inc
lods
xor
aam
add
int
xchg
and
lods
bswap
add
mov
mov
pop
pusha
ret
adc
enter
mov
mov
mov
popa
mov
dec
out
jmp
xor
ret
inc
shl
inc
fadd
repz
add
inc
jg
dec
and
mov
add
push
or
mov
stc
sub
pop
loope
xor
push
movs
outs
cld
sub
xor
inc
inc
jne
ins
mov
rol
neg
dec
push
mov
rcr
push
inc
add
jnp
shl
xor
push
jle
outs
jb
mov
cmps
push
push
push
cli
mul
out
xor
mov
loop
ss
fs
shr
xor
cli
jge
adc
jg
(bad)
cdq
jl
jge
retf
mov
or
sbb
sbb
push
dec
xchg
sub
mov
add
outs
ins
push
aas
inc
inc
ss
push
lahf
pop
pusha
repnz
mov
mov
popa
pop
outs
sub
and
inc
outs
or
jmp
dec
sbb
shr
bound
lds
mov
pop
pop
and
jmp
gs
add
dec
mov
or
movs
jae
inc
imul
daa
inc
js
sub
jo
mov
mov
ss
test
add
out
pusha
aad
add
(bad)
push
daa
xchg
das
mov
jo
adc
adc
push
and
sub
imul
imul
movups
lods
sbb
mov
pusha
call
mov
in
mov
loop
push
sub
or
inc
in
sub
add
push
sbb
or
mov
lahf
pop
jne
jo
dec
jno
scas
jbe
idiv
and
int3
add
jbe
cmp
jmp
paddsw
das
xor
shl
cmp
cmp
js
pop
daa
mov
aaa
(bad)
repnz
cwde
and
daa
pxor
jo
lock
mov
outs
scas
repnz
add
adc
push
jo
popa
xlat
mov
repz
fxch
loope
jmp
iret
stc
add
or
adc
and
cmp
repz
cmp
inc
cmp
rcl
pushf
rcr
jmp
popf
push
push
call
imul
jo
push
aam
add
outs
jge
out
mov
daa
(bad)
sbb
mov
nop
in
pop
jbe
popa
pop
and
pop
add
lahf
dec
push
clc
bound
ror
xor
add
test
pop
push
xchg
pop
mov
jmp
leave
leave
enter
jnp
in
in
cld
sub
xor
in
push
fadd
shl
jae
adc
cvttps2pi
and
jae
aad
in
dec
jmp
pop
jecxz
dec
sub
out
mov
dec
cmp
dec
and
pusha
stos
inc
aaa
ret
dec
and
add
adc
dec
add
and
add
std
mov
mov
dec
jns
fstp
movs
pushf
(bad)
(bad)
adc
pop
or
dec
ins
ror
fiadd
adc
xor
jmp
push
xchg
jne
inc
sub
sbb
fwait
mov
mov
or
mov
add
test
push
xor
lock
jno
adc
dec
dec
add
retw
mov
and
add
jl
pop
scas
arpl
xor
mov
lds
or
outs
in
add
icebp
jo
cmp
adc
sbb
cmp
mov
aam
jns
mov
test
pop
jecxz
inc
fadd
test
imul
bound
mov
cmp
test
in
jl
cs
cmp
inc
call
add
ja
ja
fistp
sub
push
push
inc
mov
mov
xchg
outs
add
dec
mov
imul
shl
js
cmp
xor
mov
popa
not
push
xor
add
sub
and
dec
lock
fld
es
inc
push
pusha
mov
std
sbb
cmps
das
mov
in
fst
lds
mov
cmp
add
imul
test
ins
jne
or
jb
add
push
test
fisttp
push
xchg
add
stos
and
lock
call
pop
int
adc
pop
add
mov
push
or
push
push
ins
xchg
push
loopne
fsub
sahf
sbb
jae
push
dec
movs
mov
push
add
inc
fisttp
or
sub
or
jae
push
cmp
mov
jno
mov
cmp
or
dec
mov
cmp
sbb
push
jmp
das
(bad)
push
je
jne
or
nop
jmp
xchg
sub
jg
adc
fimul
test
mov
mov
pusha
or
outs
neg
mov
fdivr
js
add
mov
sbb
add
or
add
lods
push
xor
add
mov
push
into
push
icebp
daa
pop
push
push
or
or
cmps
arpl
outs
add
jb
jns
and
ja
dec
ja
out
xchg
and
sbb
psubw
add
(bad)
ror
int
sbb
aas
and
cmp
mov
out
add
pop
dec
adc
or
dec
inc
sbb
les
dec
bound
xor
adc
test
je
lds
js
xor
pop
sub
jecxz
jecxz
mov
xor
add
mov
scas
push
mov
cmp
jmp
dec
or
rcr
or
mov
adc
add
and
push
(bad)
mov
xlat
ss
ins
ins
movs
cmp
and
jo
fnstenv
inc
arpl
sbb
push
clc
push
cs
jmp
push
sub
cdq
jl
push
push
or
in
jnp
aam
andps
push
sbb
imul
call
push
(bad)
mov
xchg
jne
lds
push
xchg
bound
les
loopne
dec
mov
cmp
push
mov
add
loopne
mov
mov
(bad)
fisub
stc
mov
and
pusha
rol
or
(bad)
std
lods
pop
ret
add
mov
shr
cmps
add
cmp
xor
imul
(bad)
push
aas
inc
inc
ror
jo
jns
and
xchg
(bad)
adc
pop
add
loopne
jne
fld
daa
adc
add
lods
loopne
ror
cmovbe
(bad)
cmp
stos
jo
inc
inc
imul
mov
stos
jns
and
inc
icebp
sbb
mov
inc
repz
in
in
movs
sar
stos
jge
pop
sub
xlat
dec
ja
adc
js
push
movs
(bad)
sub
pop
xchg
out
test
xor
pop
xor
in
or
adc
fidiv
mov
mov
ds
repz
movs
push
fidiv
leave
sub
test
and
push
and
lahf
out
sub
push
or
add
or
nop
sub
into
inc
cmp
or
lods
loope
jno
add
dec
jecxz
sub
ret
in
or
push
jo
js
fsub
leave
fld
inc
xlat
test
popa
pop
inc
(bad)
or
inc
jo
sbb
shr
pop
sbb
mov
aaa
add
push
pop
addr16
loop
paddb
das
sub
cmovne
mov
pop
rol
out
movs
psrlw
pop
outs
push
mov
push
sbb
or
std
(bad)
cld
(bad)
sti
and
sbb
push
xor
out
cld
xor
stc
cmp
lea
cmp
imul
or
lods
pop
fistp
pop
imul
pop
es
mov
add
lds
inc
fistp
xor
lea
nop
loop
cmp
sbb
inc
imul
push
push
(bad)
bound
iret
xor
xor
ins
and
or
fs
(bad)
mov
mov
sbb
or
add
add
lds
or
in
add
mov
in
data16
xchg
aam
pop
cdq
imul
inc
aad
xor
push
imul
or
and
push
int
pop
lea
dec
(bad)
or
cli
and
dec
rol
dec
lock
in
push
sbb
sbb
les
call
push
scas
out
xchg
mov
push
in
dec
add
cld
add
adc
mov
cmp
pusha
shl
cmp
mov
loopne
dec
cmp
cmp
xor
push
mov
inc
popf
sub
mov
mov
dec
outs
xor
xlat
sub
push
or
sub
adc
fld
pop
mov
mov
outs
pop
fwait
add
(bad)
cmovns
cmps
addr16
fist
sub
mov
das
pushf
jae
les
clc
push
rcl
sahf
cmps
sbb
loopne
fcomi
xchg
add
add
cmp
xor
cld
cli
jge
add
or
add
loop
lods
stos
add
push
push
jne
xor
ins
adc
and
mov
iret
dec
jmp
push
imul
cwde
rol
adc
add
ret
push
addr16
data16
in
jp
(bad)
sub
call
or
jno
mov
call
xor
gs
sbb
fdivr
sbb
or
inc
xchg
inc
shl
jg
(bad)
mov
dec
add
adc
cmp
fsubr
jp
cmp
int
xchg
add
cmp
std
pop
or
or
ja
les
inc
adc
lods
and
sbb
pop
lahf
and
and
sbb
cmp
add
jo
cwde
pop
add
ja
(bad)
sub
data16
repnz
adc
shr
fwait
ins
stos
mov
adc
js
fsubr
scas
cmp
adc
push
int3
pop
cs
pop
test
push
sub
cmp
mov
popf
sar
sub
ds
rol
fcmove
addr16
push
adc
pop
outs
js
jns
cmp
das
or
jbe
nop
idiv
pop
mov
rol
js
cmp
in
into
fucomip
jmp
sar
sub
or
inc
fdiv
fsubp
arpl
out
pop
je
shl
ja
xlat
es
lock
sub
jne
mov
dec
pushf
popa
mov
sbb
or
mov
out
fadd
fs
push
test
fadd
sub
sbb
inc
mov
inc
stos
pop
jg
stc
adc
stos
pop
ss
inc
mov
jno
and
and
jbe
mov
(bad)
sbb
aaa
imul
mov
dec
dec
sub
test
mov
mov
jne
push
and
hlt
jmp
(bad)
xor
mov
push
xor
xlat
xchg
test
pop
cmc
packssdw
test
retf
cmp
adc
imul
dec
jbe
inc
into
pop
sti
adc
push
xlat
mov
sub
movhps
lea
pop
sub
pop
push
bound
sbb
mov
add
stc
push
fld
pop
add
cmp
cli
mov
pop
(bad)
sbb
mov
mov
add
cmp
sti
cmova
jg
pop
out
add
push
sub
clc
wbinvd
add
mov
inc
cld
das
or
adc
sbb
stos
adc
push
pop
add
xchg
jne
and
lods
xlat
jne
mov
add
daa
bound
dec
or
adc
pop
mov
push
pop
inc
mov
or
dec
mov
addr16
cld
sub
or
inc
popa
mov
popa
inc
jo
or
imul
xor
ins
ret
mov
jmp
sbb
leave
stos
cmps
ficom
in
add
dec
fld
or
dec
in
stos
jno
das
xchg
ss
rcl
adc
sbb
or
add
cmp
push
arpl
adc
push
dec
dec
sti
bound
in
rcl
pop
xlat
lahf
jmp
push
push
push
inc
jno
out
bound
push
cdq
sbb
add
inc
push
ds
inc
or
movs
sub
push
push
sub
sub
cmp
jl
mov
or
mov
and
adc
dec
push
pop
and
cmp
inc
sahf
xor
push
add
cdq
xor
rol
ds
dec
mov
pusha
popa
ret
js
add
push
cmp
push
mov
push
test
lock
push
sbb
stc
sbb
or
mov
jmp
cld
or
outs
popa
fs
or
imul
add
push
lods
xor
jnp
shr
add
adc
enter
cdq
inc
popa
push
retf
push
pop
call
(bad)
cwde
sub
or
sbb
sub
ds
jnp
push
and
sbb
add
xchg
mov
pop
ins
xor
or
fucomi
or
test
dec
gs
loop
xor
or
mov
dec
push
ja
fs
adc
bound
inc
or
xor
xor
mov
movs
and
jmp
jnp
loope
add
(bad)
or
sub
jb
ins
mov
jne
in
(bad)
mov
outs
out
outs
push
fadd
pop
push
sub
clc
sbb
dec
(bad)
fstp
jnp
sub
or
arpl
iret
jo
pop
push
arpl
dec
hlt
outs
test
sub
inc
stos
inc
xchg
sub
or
push
je
int
adc
sub
or
outs
or
sbb
ins
adc
dec
sbb
push
or
xor
or
gs
or
xchg
adc
xchg
test
add
adc
cmp
mov
fldcw
js
add
or
sti
lahf
pop
sub
or
pushf
inc
push
pop
mov
retf
pop
fisttp
xchg
xchg
xchg
xchg
jno
mov
add
xor
sub
and
mov
or
outs
sbb
aas
inc
cwde
push
aas
add
add
mov
ins
sbb
mov
add
sub
inc
inc
mov
les
add
mov
les
pop
ins
mov
or
ins
popa
out
adc
ror
shl
dec
adc
cwde
int3
aas
emms
mov
shl
push
mov
lds
pop
push
loopne
ret
xchg
sub
xchg
or
or
xchg
(bad)
cld
jne
aas
shl
cmp
sbb
jne
popa
inc
jo
mov
adc
pop
pop
push
or
mov
movs
xor
dec
pop
rdtsc
sbb
cmp
or
push
pushf
inc
push
frstor
push
mov
nop
ds
shl
jae
retf
inc
adc
mov
int3
enter
xchg
into
pop
xlat
mov
pop
cmc
fsubr
sbb
add
sbb
pop
push
adc
sub
push
mov
into
and
fs
aad
adc
mov
cmps
enter
setno
ja
adc
je
push
ins
je
and
stos
cmp
ss
jmp
add
arpl
arpl
adc
gs
add
dec
jb
push
test
das
add
pop
mov
retf
sub
or
mov
call
in
into
ins
xor
les
xor
cwde
xor
hlt
push
push
fst
or
push
push
xor
sub
sub
mov
inc
das
iret
adc
add
nop
push
iret
lock
or
faddp
jnp
in
xor
and
xor
fnstsw
(bad)
fistp
mov
add
(bad)
shr
inc
or
xchg
mov
cmp
sub
or
inc
push
hlt
dec
(bad)
cmp
and
or
jne
xchg
arpl
jnp
(bad)
push
cmp
jl
shl
sub
mov
mov
pushf
arpl
mov
sub
mov
ret
out
(bad)
loope
mov
push
mov
and
cmp
jbe
push
shr
fmul
add
jae
movlps
adc
call
orps
push
movhps
push
push
pop
mov
sbb
jmp
xchg
cmp
push
sub
jmp
shr
dec
adc
add
dec
aad
or
fmulp
lea
mov
daa
jmp
inc
test
mov
cs
mov
xchg
and
and
dec
test
xchg
ss
dec
add
mov
out
sahf
sbb
sbb
gs
sub
xchg
daa
bound
movs
ins
daa
out
or
call
enter
add
mov
movs
stos
xor
inc
or
or
imul
scas
add
or
mov
and
jb
dec
adc
dec
xor
int
inc
jne
sbb
(bad)
adc
push
push
push
pop
or
jne
test
xchg
sbb
mov
and
enter
push
movs
pop
ins
leave
or
fst
retf
pop
add
ja
and
pop
add
xchg
call
adc
cmp
mov
or
cmp
xor
xor
es
adc
pop
and
adc
fcmovnbe
jmp
dec
int3
pop
dec
daa
fsubr
adc
fmul
add
add
jp
or
fcomip
jns
(bad)
je
mov
inc
clc
cmp
dec
push
mov
xor
jg
(bad)
loopne
adc
retf
add
ja
add
push
add
add
push
movq
sahf
pushf
(bad)
or
and
les
adc
xchg
xchg
daa
daa
ret
inc
leave
enter
rol
aas
fs
leave
xchg
repnz
test
jb
cmp
cmp
cmp
pushf
mov
push
pop
inc
and
dec
(bad)
dec
xchg
daa
daa
daa
xchg
retf
enter
dec
xchg
int3
adc
in
leave
leave
dec
xchg
into
push
sbb
in
fs
xchg
rcr
sbb
jb
xor
rcr
sbb
push
fwait
aam
push
ss
mov
push
add
mov
adc
das
imul
daa
sti
push
and
fistp
fs
cmc
xor
cmp
and
aam
cmp
jns
and
lods
jmp
jne
add
dec
dec
dec
inc
dec
mov
push
daa
daa
daa
daa
and
out
sub
xchg
xchg
xchg
sub
or
leave
addr16
cmp
xor
in
jge
adc
fs
out
jne
retf
and
punpckhbw
aam
mov
push
call
sar
add
adc
dec
ins
or
xor
es
inc
jne
data16
pop
sub
add
or
lea
push
ficomp
xchg
or
ins
test
rol
das
test
dec
sbb
gs
rol
f2xm1
movs
push
imul
add
adc
pusha
dec
mov
pop
enter
mov
fidivr
je
lea
in
lea
mov
cmp
lea
lea
inc
or
adc
outs
pop
nop
or
std
xor
or
push
std
pop
rcl
or
std
outs
std
push
pop
nop
or
outs
pop
nop
or
std
mov
nop
or
push
std
or
pop
outs
std
int3
rcl
pop
nop
outs
std
bound
call
and
std
clc
leave
and
bound
adc
adc
add
std
ins
mov
leave
xor
std
mov
leave
adc
std
mov
adc
outs
std
pushf
add
std
test
mov
outs
repz
addr16
lea
test
jno
aam
movs
call
or
xor
(bad)
xchg
inc
adc
xchg
jno
and
inc
pop
pop
add
mov
and
add
sub
adc
inc
vmcall
mov
and
adc
adc
inc
adc
pop
mov
sbb
rol
mov
sbb
add
or
sbb
jno
add
or
and
pusha
rol
add
mov
ins
push
pusha
mov
loopne
push
jno
xchg
pusha
test
add
add
pop
popa
and
or
or
add
or
push
add
lods
or
ret
pop
sub
add
mov
dec
cs
push
or
jo
jno
push
adc
or
or
adc
add
mov
xchg
or
add
dec
or
mov
imul
sbb
and
xchg
xchg
movs
or
sub
mov
lahf
xchg
loope
ds
xchg
js
mov
add
sbb
fbstp
xchg
dec
nop
and
mov
(bad)
xchg
imul
call
mov
imul
mov
mov
jns
add
dec
jnp
xor
push
or
or
mov
and
add
mov
adc
mov
rol
and
adc
mov
in
sbb
out
adc
stc
adc
add
or
les
adc
jns
jnp
and
pop
adc
test
inc
adc
jno
or
adc
mov
xchg
adc
mov
push
adc
mov
push
lds
rcl
(bad)
add
rcl
adc
mov
or
mov
jbe
and
fild
mov
xchg
and
adc
add
xchg
sti
jo
mov
sbb
aaa
xchg
xchg
cmp
push
jo
inc
iret
dec
adc
jb
ins
daa
or
mov
sbb
arpl
inc
lea
add
cmp
outs
outs
gs
fwait
cmp
ins
mov
sub
pop
shr
outs
fwait
add
adc
or
push
sbb
sbb
add
retf
push
retf
sub
adc
jbe
add
mov
pop
inc
dec
popa
ins
and
cmps
push
push
inc
push
sub
or
or
lds
ds
movs
inc
sbb
outs
outs
arpl
or
movs
adc
push
add
outs
mov
push
adc
push
das
jmp
cmp
ins
jg
mov
inc
imul
xchg
pusha
das
shr
mov
inc
push
pop
lods
mov
xlat
mov
dec
js
and
or
mov
and
test
push
push
jns
gs
fidivr
ins
popa
jae
jae
pop
aam
or
pop
mov
inc
dec
iret
in
mov
xor
lock
add
dec
push
outs
jae
jge
sar
imul
int3
outs
fild
adc
call
(bad)
adc
out
and
scas
mov
es
sbb
ins
adc
add
dec
pusha
mov
and
test
jo
xlat
pop
mov
add
das
inc
cmp
das
and
jns
scas
cmp
dec
push
pushf
jge
mov
jge
out
mov
push
repz
iret
je
pusha
lods
cmp
rol
iret
push
fmul
out
pusha
inc
jbe
add
pop
mov
dec
ins
fs
ret
add
hlt
inc
add
xlat
pop
test
jmp
pop
or
loop
sbb
add
cwde
punpcklbw
ins
push
jg
aaa
mov
loopne
inc
push
lock
movs
jecxz
pop
fcomp
or
cmp
mov
inc
icebp
add
add
xchg
push
sbb
iret
movs
push
push
test
pusha
xchg
ror
sbb
mov
add
and
pusha
or
sub
cmps
popa
jne
sub
aam
jp
push
sub
and
push
mov
mov
fnsave
xor
cmps
xchg
fwait
add
push
popf
nop
push
fstp
xchg
mov
fdiv
push
(bad)
push
jecxz
add
xor
pop
loopne
or
cmp
mov
xchg
ret
push
add
and
clc
cli
mov
stos
add
rcr
push
bts
xor
or
jle
fdiv
outs
aam
mov
mov
inc
shl
in
mov
outs
test
ret
(bad)
out
jge
add
lea
xor
or
lea
add
mov
lods
push
cmp
mov
sbb
loop
sbb
jns
adc
mov
pop
pop
scas
pop
ja
in
inc
jmp
xor
inc
test
jnp
dec
or
sbb
add
sub
imul
scas
(bad)
shl
je
mov
int3
dec
jnp
scas
sub
mov
out
test
in
push
pusha
or
xchg
rol
add
outs
jb
jle
and
fild
fild
add
pop
add
enter
scas
add
add
jbe
or
leave
pcmpeqb
fisttp
or
adc
mov
ins
(bad)
fwait
nop
add
rol
sbb
nop
adc
add
test
inc
xor
or
mov
popa
inc
cmp
cmp
or
popa
jbe
push
outs
fnstenv
xchg
arpl
push
enter
ror
in
cmp
jmp
mov
add
loope
inc
cmp
pop
ja
gs
or
push
inc
xor
ja
aaa
push
jo
lea
retf
push
sbb
call
ja
ds
outs
add
push
ja
aas
(bad)
ja
push
add
jg
fsub
cli
inc
popa
jo
arpl
add
ins
mov
add
pop
and
leave
arpl
sub
loop
mov
or
add
scas
fwait
mov
and
fimul
popa
pop
std
or
dec
dec
ds
push
dec
outs
push
cmp
adc
pop
cmp
jne
xor
or
xchg
cmp
jo
aaa
cmp
bound
cwde
jno
xchg
loope
xchg
jmp
je
pusha
jno
mov
sub
test
(bad)
mov
stos
les
adc
js
sub
out
cs
adc
xor
adc
mov
cmp
sub
mov
ds
das
pushw
add
sbb
mov
add
out
jmp
mov
and
push
inc
inc
jns
dec
sbb
sub
fdivr
or
sub
cwde
xor
popf
jg
xchg
lods
add
add
pop
pop
xchg
sub
ins
cmp
cmp
out
jmp
pusha
cmp
imul
push
mov
ret
xchg
adc
push
and
fidivr
and
add
ja
loopne
hlt
inc
adc
inc
outs
arpl
imul
mov
ja
jae
fdivr
or
or
push
cmp
inc
(bad)
dec
inc
sahf
pushf
mov
cmp
pop
scas
jmp
leave
mov
cwde
loope
pop
mov
pop
adc
test
pusha
xlat
je
mov
dec
fld
fild
inc
mov
ins
dec
inc
(bad)
inc
and
xchg
es
fstp
fisttp
movs
js
inc
sbb
inc
popf
adc
retf
fimul
ror
xor
add
popa
addr16
rcl
ret
shl
xor
lods
add
cs
or
push
jg
xchg
sbb
adc
add
cmp
mov
dec
fs
push
xchg
or
or
push
test
data16
fnstsw
or
dec
stos
pop
lods
adc
fadd
loope
push
aad
in
ds
jns
cmps
mov
and
jo
fld
dec
es
movs
push
jnp
jmp
(bad)
dec
cmc
mov
or
jg
push
call
cmps
jb
and
dec
into
sti
sbb
pop
lock
cmp
dec
inc
ins
outs
bound
cmc
add
xor
ins
icebp
pop
loope
sub
cmp
inc
pop
les
andps
retf
pop
add
loopne
cmp
sub
in
push
lods
push
dec
add
mov
dec
mov
xchg
(bad)
call
and
arpl
pop
and
and
pop
dec
inc
mov
inc
add
cmp
jo
sbb
mov
loope
pop
push
jne
add
jne
and
adc
cmps
pop
pop
pop
push
lock
jae
aam
mov
push
fidivr
aaa
out
call
cmp
movs
cmp
xor
dec
fs
inc
cmps
mov
add
mov
mov
inc
push
mov
pusha
or
or
push
in
push
adc
sbb
push
in
and
mov
sbb
repz
leave
sub
push
jo
inc
rcl
out
push
pop
sub
lods
call
repz
leave
xlat
in
add
pop
enter
push
sbb
pop
out
lods
ror
xchg
inc
cmps
ret
scas
push
push
inc
push
pushf
add
mov
add
push
out
or
fucom
push
movs
xchg
out
add
sub
mov
fst
and
out
adc
dec
dec
push
in
jge
iret
mov
sbb
adc
cmp
repz
cmp
mov
ins
xor
and
hlt
popa
pop
inc
ror
loop
xlat
and
sbb
lods
push
sub
outs
fs
jmp
inc
bound
lea
pmuludq
push
pusha
pcmpeqd
cvtpi2ps
(bad)
cmp
mov
pop
add
and
jbe
jl
out
adc
repz
fs
jo
jb
add
sbb
or
pushf
pop
xor
mov
mov
sub
push
fwait
xchg
inc
jb
add
xlat
mov
cmp
mov
pop
mov
cs
jbe
add
sub
arpl
mov
pop
popf
mov
fadd
jo
jnp
push
sub
pop
mov
lods
fwait
or
inc
and
je
out
es
lahf
pop
lahf
or
outs
daa
ins
sahf
or
bound
jbe
jo
test
jne
inc
jno
mov
add
pop
add
add
jnp
lds
add
or
push
jl
and
call
jae
hlt
jae
leave
inc
mov
pop
jl
dec
or
sbb
in
(bad)
push
jne
add
das
pop
mov
stc
shl
movs
ret
es
jl
cwde
std
add
ja
addr16
dec
inc
sti
aam
add
sbb
mov
es
dec
std
jnp
std
cmps
add
or
imul
and
sub
popa
or
add
pop
jnp
jle
mov
xchg
mov
outs
push
cmps
add
cdq
inc
popa
push
je
jae
call
(bad)
inc
push
je
sbb
push
js
into
shr
xor
or
ror
shr
dec
or
xchg
nop
xchg
pop
add
pusha
push
jnp
dec
and
fstp
adc
test
and
pop
adc
inc
inc
inc
and
dec
maxps
lock
lods
or
push
inc
js
jbe
sbb
or
adc
push
inc
cmp
loopne
lods
xor
or
jbe
out
push
and
sar
add
pop
addr16
and
push
daa
std
das
and
inc
add
outs
pop
das
adc
add
ret
sbb
jmp
aas
inc
cmp
jmp
add
cmp
sub
ja
stos
push
adc
jnp
push
pop
inc
shl
add
push
fdiv
retf
jl
or
movs
int
sti
(bad)
lock
dec
outs
arpl
inc
arpl
add
or
sub
out
sbb
dec
or
dec
(bad)
les
lahf
mov
xor
jnp
or
mov
adc
pop
ja
xor
mov
or
(bad)
sbb
pop
jl
adc
das
out
shl
dec
sbb
scas
dec
or
pop
pop
cmc
retf
scas
mov
ins
out
lock
test
or
xor
push
cmp
dec
xor
jbe
dec
jne
ins
or
mov
or
je
pop
or
xor
arpl
inc
js
mov
test
jae
aaa
(bad)
push
inc
mov
cmp
push
jb
ds
cmp
jns
not
or
ins
or
push
sub
gs
xchg
ja
lahf
popf
xor
mov
jns
ins
imul
xor
mov
inc
cmp
jb
mov
jb
loopne
xchg
add
sbb
cmp
xor
mov
or
pushf
push
mov
inc
jmp
aad
add
mov
idiv
add
add
clc
xor
sahf
push
sbb
sub
gs
dec
push
and
test
ss
xchg
sahf
pop
sbb
int3
in
ins
outs
xor
xchg
pop
pop
scas
xchg
xchg
sbb
add
dec
mov
cmp
nop
xor
fsub
(bad)
jg
and
pop
sbb
inc
(bad)
int
dec
add
xor
in
pop
shr
dec
dec
out
pop
push
call
sub
xlat
jns
dec
das
pop
push
sub
sbb
mov
push
fsubr
sbb
int3
fiadd
push
and
add
xor
mov
ret
inc
and
adc
or
ds
lahf
mov
xor
mov
inc
or
call
inc
push
outs
outs
into
and
dec
and
mov
mov
and
add
test
in
xor
pop
retf
push
into
cmovbe
outs
and
loopne
ja
pop
(bad)
xor
sar
pop
cmps
push
pop
int
retf
pop
mov
aas
mov
inc
mov
mov
rcl
adc
inc
xor
in
fld
nop
shl
add
inc
add
sbb
in
jp
pop
push
dec
pop
fcomp
mov
and
data16
xor
sbb
repnz
xchg
ret
jbe
cmp
out
call
js
adc
adc
adc
jne
pop
(bad)
out
and
sub
stos
cs
jne
push
mov
add
pop
and
jnp
mov
pop
loopne
sub
jno
mov
mov
inc
push
pop
add
iret
ret
stos
jecxz
icebp
mov
inc
dec
or
pop
inc
inc
push
xlat
pop
das
adc
sub
cmp
andps
fwait
adc
ss
adc
sub
gs
outs
fs
jbe
mov
add
jnp
push
sub
add
inc
fs
xor
out
add
add
mov
inc
test
xchg
add
fadd
xchg
add
dec
jg
pop
imul
(bad)
jecxz
test
ret
pop
sbb
lods
mul
test
inc
pusha
dec
loopne
imul
or
out
std
add
jo
loopne
mov
adc
inc
pop
inc
aaa
dec
jae
or
and
rcl
inc
add
push
push
adc
nop
dec
inc
push
fld
add
mov
imul
loopne
aad
iret
mov
push
or
and
imul
push
push
adc
sbb
outs
lahf
adc
push
push
lahf
mov
mov
div
push
xchg
mov
enter
xchg
xchg
sub
xchg
and
test
xor
enter
add
test
pop
add
pop
and
add
rcr
xchg
mov
sbb
pop
sti
cdq
mov
pop
adc
xchg
fcom
js
push
sbb
sbb
add
push
ret
add
inc
push
sar
mov
sbb
adc
mov
sbb
fmul
jmp
jo
ja
fisubr
jo
sbb
add
retf
iret
mov
adc
cvtdq2ps
xor
add
adc
daa
inc
setge
adc
(bad)
sbb
sub
push
sbb
(bad)
adc
adc
(bad)
jl
nop
or
(bad)
or
dec
test
add
test
and
fst
mov
or
jecxz
test
push
and
cmps
adc
inc
push
das
out
pop
push
xchg
lock
pop
pop
ror
loopne
cmp
call
ins
shr
in
outs
pusha
sti
push
push
push
adc
dec
push
mov
and
push
hlt
lods
test
sub
cld
sbb
popf
bound
pusha
pop
inc
push
popa
out
dec
push
or
cmp
xor
mov
dec
add
or
(bad)
cmp
jmp
lea
mov
adc
sbb
xchg
xchg
sbb
mov
dec
sub
or
adc
push
ss
loopne
iret
mov
mov
cmp
and
mov
stos
loope
push
mov
or
rol
mov
outs
add
inc
jne
js
popa
add
sbb
add
or
dec
push
mul
std
sbb
dec
and
mov
inc
inc
jb
jg
daa
aad
js
jo
jge
add
outs
mov
pop
gs
jne
xchg
test
add
in
cwde
pextrw
mov
pop
pop
dec
jnp
cmp
pop
lods
repz
dec
inc
sahf
cmp
lds
pop
daa
daa
daa
and
frstor
xchg
xchg
xchg
xchg
pop
imul
je
in
in
not
jl
xor
in
sar
and
pop
js
jb
sub
or
bsf
fs
test
pushf
pushf
mov
aaa
scas
out
xchg
daa
daa
lahf
addr16
xor
sub
cmovb
xchg
jne
cmp
mov
test
jmp
test
mov
mov
repnz
cmp
mov
int
push
dec
push
and
add
out
pop
js
add
add
dec
push
dec
data16
fsubr
ret
aam
add
add
sbb
dec
fist
sub
push
sub
pusha
jns
pop
je
xor
gs
mov
loopne
inc
add
fadd
out
inc
xchg
jno
mov
and
push
add
test
inc
push
sbb
and
inc
add
sub
dec
movs
test
add
ret
add
outs
sub
mov
push
and
or
add
add
int3
add
imul
hlt
mov
enter
sbb
mov
lock
add
mov
out
push
ret
sbb
mov
xchg
inc
or
push
add
iret
loopne
push
outs
inc
push
mov
jne
xor
push
imul
inc
add
fsub
fist
clc
or
push
sub
or
popf
adc
pop
add
pop
cmp
sbb
and
jmp
push
test
inc
adc
imul
sub
aam
mov
outs
sbb
push
aaa
je
stos
lar
jns
push
sbb
and
aad
pop
push
or
sti
add
scas
bound
wbinvd
movs
sub
jge
jo
mov
push
xchg
cld
or
dec
jp
mov
push
push
shl
inc
add
addr16
loopne
call
mov
pop
int
mov
fst
enter
cmp
pop
out
push
sub
loope
les
ins
pop
rcr
add
rcl
jae
push
dec
jmp
sbb
js
mov
rcr
sub
and
je
add
adc
adc
cmp
add
or
dec
lds
and
outs
sub
mov
add
pop
sbb
mov
inc
sub
xor
rcr
xor
mov
inc
and
jns
pusha
add
inc
xchg
push
stos
imul
inc
mov
push
sub
mov
jns
add
fisttp
and
pusha
xor
lea
add
imul
jno
inc
ins
xor
dec
sar
jns
fnstcw
push
push
or
retf
push
data16
retf
xchg
xchg
xchg
mov
mov
aam
inc
cmp
rol
and
(bad)
fcomp
pop
aas
push
inc
daa
sbb
js
popa
xchg
cwde
and
mov
cmps
add
pop
pop
dec
movs
mov
and
rol
fdivr
pop
inc
or
call
dec
adc
pop
pop
pop
cdq
xchg
inc
dec
loope
les
mov
call
psrlw
fcomp
inc
push
out
call
inc
es
pop
adc
pop
inc
stos
fwait
dec
adc
inc
adc
jo
or
pop
xor
and
add
push
dec
test
sbb
push
scas
inc
or
xor
push
push
xchg
inc
out
push
push
pop
adc
cmps
dec
add
mov
mov
pop
repz
mov
xchg
add
or
jne
cwde
or
fist
pusha
adc
mov
js
sbb
loopne
mov
jno
and
pop
addr16
data16
add
mov
adc
fs
shr
pop
(bad)
mov
xchg
lock
xchg
push
pusha
push
mov
or
and
push
les
xlat
sbb
mov
nop
add
adc
jge
aad
(bad)
push
outs
enter
lods
jne
ret
push
xchg
aad
adc
xor
lea
mov
(bad)
jg
xchg
pop
xlat
sbb
(bad)
jmp
neg
retf
xor
adc
jae
push
jne
ins
imul
cmp
add
outs
mov
pop
lahf
inc
add
(bad)
jmp
in
movs
dec
add
push
ins
inc
pop
(bad)
in
in
repnz
(bad)
jb
xor
push
outs
push
pushf
jecxz
cmp
jns
jo
mov
out
cmovbe
aam
jb
repnz
dec
mov
cmp
sbb
jae
mov
data16
(bad)
cmp
xor
in
lods
out
jne
jns
jb
jl
std
sub
cmp
sbb
xlat
adc
dec
clts
(bad)
fbld
cmp
and
(bad)
jb
div
les
mov
test
imul
not
imul
inc
push
push
add
lahf
dec
cdq
cmp
push
or
leave
push
add
xchg
xchg
push
sub
stc
lahf
push
ins
xchg
sub
hlt
cdq
cmps
mov
inc
ins
or
xchg
mov
mov
mov
mov
mov
mov
test
mov
lds
in
ja
lea
lds
daa
test
lea
push
sbb
movs
xchg
pop
les
test
push
adc
cld
mov
dec
call
mov
sbb
dec
adc
add
xchg
push
cmp
inc
add
fwait
xchg
adc
jns
adc
cmp
pusha
cld
sar
or
cmp
add
cmps
fimul
and
xor
pop
arpl
xchg
adc
jnp
jae
push
imul
mov
sub
mov
(bad)
lahf
inc
add
adc
adc
test
cld
jo
pop
add
sub
stos
cmps
xor
aas
mov
nop
jae
shl
fisub
pop
ja
mov
jbe
inc
sub
jmp
inc
fisubr
mov
sbb
push
pop
in
push
jmp
inc
jno
mov
add
dec
add
sub
mov
je
movs
jb
adc
pop
stc
push
mov
shl
add
test
bound
push
and
rcr
repz
sbb
xor
das
inc
and
cli
or
aam
push
ret
add
and
jnp
add
pusha
mov
mov
cs
pop
aaa
cmp
sahf
pop
ffreep
add
ret
lock
cmc
pushf
ret
and
sub
push
inc
cmp
scas
xchg
push
arpl
ret
jae
and
and
pop
mov
jnp
adc
mov
enter
in
pop
add
pushf
jp
pop
pop
jne
fiadd
push
cwde
pop
add
out
push
les
cmp
mov
movs
push
xchg
les
cdq
jnp
test
dec
mov
or
push
fldcw
push
or
sub
xchg
jp
push
cmc
jle
shl
les
add
pop
int3
psrld
es
test
inc
fdivr
ds
inc
sbb
add
sub
in
push
push
mov
cmps
push
sbb
pop
fldcw
fsubr
adc
or
mov
aas
add
sub
sbb
adc
mov
data16
adc
pusha
pop
ins
iret
cmp
mov
xchg
(bad)
push
jns
loopne
ds
push
jo
push
je
loop
gs
int
outs
or
outs
ja
pop
adc
dec
pop
ins
mov
cmc
or
adc
push
pop
ret
(bad)
inc
push
adc
inc
cwde
imul
sub
in
mov
sbb
cs
inc
in
fisub
(bad)
adc
imul
push
mov
sbb
xor
sbb
clc
push
and
test
xchg
or
ins
push
out
and
jmp
ret
push
push
and
ja
sub
mov
inc
js
jo
rcl
cs
xor
and
add
into
shl
sbb
cld
aaa
aas
jo
adc
sub
daa
aad
dec
sti
aam
daa
pop
dec
and
or
and
sub
push
dec
cmp
inc
scas
fdivr
pop
jnp
fs
dec
cmp
fidivr
push
jbe
mov
das
mov
aad
push
mov
ret
cli
and
mov
cs
push
enter
in
fsubr
(bad)
call
and
mov
or
dec
inc
cs
iret
pusha
loopne
les
fcom
or
add
js
or
mov
test
pop
jmp
xchg
push
jne
jo
aaa
in
or
push
ins
(bad)
gs
xor
rcl
pop
imul
aaa
adc
jae
adc
imul
xor
mov
inc
js
cmp
sti
cwde
mov
nop
cwde
cs
cmp
inc
add
mov
inc
ins
cmp
cmp
dec
popa
push
fsubr
xchg
nop
xchg
in
pop
mov
sub
dec
setp
jle
or
les
outs
imul
stc
jmp
jae
repnz
adc
bound
or
jmp
or
inc
jo
hlt
xor
je
fisubr
xchg
xchg
xchg
xchg
cmp
popf
je
xchg
jmp
cli
orps
xor
add
call
adc
push
pop
dec
lock
stc
out
dec
mov
dec
mov
setge
push
imul
pop
pop
sbb
cmp
adc
in
mov
jns
outs
mov
pop
adc
add
push
or
loop
pop
test
xor
inc
pushw
mov
jo
jne
xlat
cmp
mov
jl
dec
mov
jo
push
push
and
adc
dec
mov
rcl
movs
mov
sbb
or
sahf
int3
or
add
cmps
jp
stos
pop
xchg
dec
and
ins
je
imul
pop
inc
das
call
loopne
rcr
jmp
pop
fld
inc
mov
sbb
xchg
jmp
add
xor
adc
inc
jno
enter
xchg
loopne
cmp
fs
or
add
push
aam
or
dec
push
pop
jge
jge
mov
jb
adc
mov
or
lods
popa
test
scas
cld
or
sub
sbb
test
popa
push
fadd
int
inc
adc
imul
into
shl
adc
push
add
xchg
or
scas
sbb
bound
test
rcr
sbb
fs
(bad)
test
or
add
rol
jbe
sahf
lahf
inc
loopne
aas
add
push
jo
(bad)
call
xlat
mov
or
rcl
push
sbb
cld
outs
retf
gs
inc
add
pop
cwde
shr
pop
imul
int
push
inc
cmp
push
xchg
cs
ds
xor
adc
xchg
fstp
inc
push
push
push
jae
addr16
bound
cld
bound
inc
shrd
push
add
push
jbe
sub
xor
test
xchg
aas
cmp
adc
jo
adc
mov
das
or
push
mov
adc
xchg
xchg
xchg
test
in
adc
xor
clc
sahf
call
stc
rcl
test
mov
call
nop
mov
lea
push
xchg
sub
pop
call
outs
fild
int
or
loop
xchg
imul
jmp
mov
scas
xchg
adc
and
mov
inc
inc
cmp
es
add
add
das
add
inc
stos
adc
mov
enter
je
add
adc
push
inc
dec
je
and
ds
sti
and
inc
scas
(bad)
cmp
push
push
test
push
jno
loop
pmaxub
adc
inc
outs
enter
loope
pushf
mov
or
push
leave
sub
xchg
push
rol
add
or
push
mov
lock
jnp
dec
jo
push
stc
dec
sahf
dec
js
sbb
leave
stc
inc
dec
outs
pop
pusha
jb
adc
jns
mov
out
sti
add
add
dec
or
or
push
mov
or
xor
outs
jo
add
add
jnp
xor
dec
jg
cmp
(bad)
xor
arpl
outs
fs
ss
ins
and
pop
adc
cwde
idiv
adc
xchg
pop
or
or
pop
pop
adc
jo
and
or
sti
je
pop
js
jo
adc
ret
sub
add
ss
ins
ror
sahf
adc
add
setg
sub
call
cmp
(bad)
xor
add
ins
popa
aas
xchg
and
mov
jbe
imul
and
lahf
xchg
push
add
imul
popf
(bad)
mov
iret
cmp
and
test
or
jge
jge
pusha
sub
sbb
lds
arpl
xchg
scas
retf
pushf
inc
and
fmul
movs
hlt
lock
xchg
or
push
pop
push
and
ja
jnp
cwde
sub
add
or
inc
push
es
or
pop
aam
cmp
fistp
push
dec
shr
fdiv
dec
bound
outs
loopne
into
xchg
or
add
pop
call
xor
dec
fsub
(bad)
jp
sahf
fdiv
cmp
cmps
sub
push
idiv
xchg
pop
mov
adc
mov
mov
enter
std
mov
add
out
mov
jns
inc
jno
cmps
jecxz
adc
mov
mov
sbb
ja
add
push
daa
jp
add
pop
mov
push
dec
mov
adc
xchg
add
lock
push
mov
xor
push
inc
je
lea
lods
push
add
sub
ret
adc
loopne
dec
xchg
rol
add
adc
and
xchg
pop
out
inc
test
push
cmp
fist
or
pop
pusha
jb
(bad)
jmp
or
push
xor
mov
jecxz
fwait
xchg
in
rcl
add
lds
adc
aaa
lods
mov
mov
add
pop
cmp
stos
push
adc
inc
xchg
movs
pop
sub
add
xchg
(bad)
dec
inc
shl
imul
add
jl
dec
fwait
add
pushf
(bad)
fisub
prefetcht0
cs
shl
jb
or
or
add
adc
loope
adc
sti
cmps
test
lock
push
mov
fstp
push
xchg
das
repz
xor
(bad)
sub
pusha
push
call
xor
push
mov
xchg
mov
ins
push
xor
push
(bad)
out
or
int3
pusha
push
mov
retf
add
and
xchg
outs
add
pop
pop
or
xchg
push
pop
daa
aam
cmp
xor
out
cmp
xor
xlat
pop
jae
push
push
(bad)
pmuludq
mul
mov
and
movs
xor
or
inc
ror
sub
cmp
inc
movhps
pop
sub
stos
nop
or
mov
les
add
clc
lock
sub
cwde
(bad)
rol
or
dec
mov
test
mov
mov
add
lea
sub
sub
test
cmovae
adc
dec
jae
inc
stos
loope
iret
lods
xchg
or
and
push
jb
jae
lock
std
adc
mov
and
lahf
dec
add
xchg
cmp
xchg
dec
jne
je
xchg
mov
or
cmps
mov
adc
das
shl
adc
or
xchg
adc
push
lods
fwait
and
pop
fwait
mov
inc
pop
or
outs
add
popa
out
dec
maskmovq
imul
outs
add
pop
test
scas
imul
inc
jmp
or
inc
shl
(bad)
fcomip
mov
(bad)
inc
ret
enter
jmp
add
(bad)
mov
mov
pusha
xor
das
dec
adc
enter
inc
les
cmp
imul
int3
add
xchg
neg
push
sub
xor
out
into
repz
dec
cmc
pop
sbb
inc
(bad)
int
dec
cmp
adc
fld
mov
push
fnsave
movs
adc
push
push
jl
js
mov
xchg
ins
(bad)
sub
mov
push
cmps
outs
sbb
push
mov
push
add
shl
fsubr
fistp
fs
dec
or
xchg
add
test
push
imul
outs
xor
adc
push
add
mov
or
or
sar
fcom
xor
ret
mov
fisub
inc
dec
ja
and
push
sub
and
add
shl
popa
addr16
mov
ret
push
mov
pop
push
xchg
mov
fadd
aaa
lods
or
jb
outs
adc
dec
(bad)
imul
outs
sub
enter
(bad)
or
in
sbb
add
push
inc
dec
cmp
xor
and
cmps
inc
outs
pusha
nop
(bad)
loopne
xchg
cwde
mov
ror
xor
aaa
lock
xor
inc
push
aam
pop
add
jb
add
add
pop
call
push
xchg
in
dec
not
jo
(bad)
aas
push
bound
fs
iret
call
adc
in
mov
jmp
ja
(bad)
jmp
dec
xor
adc
mov
mov
mov
(bad)
sti
or
cmps
xor
sub
std
(bad)
cld
mov
outs
or
jmp
push
push
push
repz
cmp
rol
movs
xchg
lods
push
mov
repz
cld
push
int3
push
aam
sti
js
iret
in
call
arpl
je
mov
mov
xor
aad
mov
imul
inc
rcl
test
jecxz
mov
sub
cmp
or
mov
gs
mov
push
push
scas
or
sub
add
ret
or
push
and
loopne
cmp
sub
or
rol
adc
xchg
mov
retf
cmp
vmread
sub
jns
pop
and
xor
mov
or
lds
mov
sub
pusha
mov
inc
push
pop
mov
sub
xchg
xchg
movs
sahf
cwde
lods
mov
add
pop
push
ficom
inc
inc
pop
sahf
pop
sbb
std
mov
push
popa
add
sbb
push
arpl
xchg
pusha
and
push
push
push
push
jnp
inc
cmps
add
mov
or
std
push
mov
adc
sbb
ss
mov
test
pop
xchg
test
test
pop
mov
cmpxchg
xchg
sbb
test
aam
xchg
test
dec
add
add
adc
data16
retf
mov
ins
nop
cmp
addr16
push
adc
or
dec
imul
je
inc
ss
sub
cdq
es
jge
mov
ins
mov
jae
xchg
adc
mov
test
push
ins
dec
data16
mov
sub
dec
jae
add
mov
inc
adc
fisub
or
jns
jns
push
jb
mov
mov
mov
pushf
inc
icebp
leave
add
loopne
or
xchg
fdivrp
jne
mov
push
mov
xor
sub
xlat
and
mov
add
dec
xor
shr
mov
loopne
hlt
or
pop
dec
imul
xchg
retf
and
dec
jb
das
jnp
xchg
mov
add
add
inc
push
test
movs
xchg
cmp
in
add
dec
sbb
mov
sbb
xchg
inc
in
sahf
into
rcl
les
push
and
pop
push
xchg
pop
rol
cmp
inc
dec
cdq
push
mov
jmp
mov
or
and
inc
dec
int3
pop
aas
or
xchg
fadd
or
repz
push
ret
push
cmp
xlat
dec
mov
das
mov
sbb
dec
repz
(bad)
push
or
ins
inc
jo
fnstcw
push
js
add
cs
add
or
push
inc
jl
push
sub
call
cmp
leave
sub
pop
mov
daa
push
cwde
bound
pop
xchg
retf
mov
imul
pop
js
das
mov
add
rcl
or
loopne
pop
cmp
ss
adc
sbb
xchg
scas
push
push
mov
mov
es
xchg
add
pop
push
pop
jae
xor
pop
mov
pop
test
jnp
int
or
push
lods
xchg
(bad)
push
fs
loop
add
das
adc
test
or
sbb
pop
add
scas
lahf
pusha
or
gs
ror
adc
sub
add
pop
add
pushf
rol
add
mov
dec
loopne
(bad)
mov
(bad)
pop
and
push
push
sbb
jae
nop
(bad)
rol
sub
jge
pop
shl
inc
mov
xor
mov
nop
inc
out
fs
sub
js
(bad)
jo
and
repz
push
push
mov
shl
add
inc
aaa
dec
push
adc
inc
and
fisttp
je
adc
mov
jmp
cmp
sub
les
fst
stos
sub
popa
fld
add
out
sub
pop
pop
jmp
push
lahf
call
adc
unpckhps
fistp
dec
push
add
push
push
shl
adc
jmp
inc
cmp
push
dec
cmp
test
and
adc
or
stos
test
stos
adc
push
mov
cs
push
cmp
sub
jae
popa
jb
sbb
inc
imul
jns
pusha
sub
cs
ja
ret
and
jmp
pop
les
jns
push
adc
loopne
inc
mov
ds
inc
imul
jb
pop
retf
fimul
xor
popa
ins
jne
sbb
movs
pop
jp
push
adc
and
pop
sub
xor
out
pmulhuw
outs
or
push
movs
or
pop
mov
aaa
sub
pop
sbb
arpl
or
aaa
inc
ja
mov
or
enter
repz
pop
hlt
es
(bad)
push
scas
ins
cs
ror
jo
js
push
loopne
inc
test
and
das
outs
in
xlat
mov
test
add
xor
dec
push
imul
sub
data16
jo
popa
aam
imul
mov
mov
or
sub
pop
add
dec
jb
repnz
or
dec
cli
pop
jo
scas
pop
push
mov
cli
(bad)
fbld
out
pop
std
call
and
push
cs
inc
nop
popa
dec
outs
fs
pop
mov
rcr
dec
iret
cmp
call
imul
push
ins
add
jno
jno
inc
xor
ins
push
xchg
test
mov
loop
ror
dec
pop
jb
push
aam
popa
adc
add
mov
or
adc
pop
in
inc
mov
adc
mov
dec
and
bound
push
dec
and
adc
outs
lock
mov
add
pop
or
sbb
out
mov
aaa
push
inc
mov
or
inc
inc
cdq
xchg
cwde
dec
lds
and
mov
sbb
jb
jns
or
cwde
pusha
sub
inc
add
jl
fs
clts
inc
pop
ins
test
frstor
pop
je
sub
xor
movs
xlat
enter
fsubr
pusha
mov
xchg
ficomp
push
push
push
add
ds
dec
xchg
mov
mov
pop
js
int3
(bad)
and
sbb
dec
pop
popf
not
push
mov
jno
loopne
(bad)
imul
test
loope
fincstp
and
inc
aaa
sub
xor
inc
jne
mov
popw
jo
pop
test
(bad)
push
addr16
push
cmp
cmp
cmp
shl
xchg
mov
aaa
jo
ja
push
adc
stos
push
and
ret
rcl
ins
dec
test
add
dec
jnp
(bad)
out
pop
xor
cmp
dec
fsub
dec
ret
dec
mov
aas
loope
and
(bad)
in
adc
inc
aas
add
jg
adc
push
dec
sbb
mov
push
fistp
or
jbe
dec
shl
or
fwait
shl
mov
xor
sbb
out
pop
fimul
mov
jbe
call
leave
xchg
push
sub
leave
sti
xchg
or
test
push
push
test
jecxz
pop
mov
cld
fwait
and
sbb
xchg
mov
addr16
shl
imul
mov
stos
push
mov
daa
das
mov
mov
add
sti
adc
lods
punpckldq
add
jl
dec
popa
outs
popa
addr16
push
add
add
mov
adc
add
adc
mov
dec
sub
adc
xchg
mov
or
and
inc
mov
mov
jnp
fistp
xor
sbb
int
rcl
mov
jge
sbb
push
or
or
push
lods
gs
mov
xchg
scas
add
repnz
push
std
cmps
pop
cmps
nop
push
cmps
inc
or
jnp
push
xlat
mov
mov
sub
je
inc
xchg
arpl
popf
je
sub
push
ret
pop
scas
ja
in
inc
scas
sub
das
mov
push
push
adc
scas
mov
add
pushf
inc
fiadd
add
pop
add
xchg
lods
mov
adc
pusha
adc
sbb
jo
js
dec
(bad)
fadd
push
add
and
dec
ror
(bad)
pop
xor
mov
and
sub
(bad)
call
add
sbb
or
call
jno
das
repz
js
or
xchg
pusha
ret
push
mov
mov
cwde
sub
cdq
push
cmp
fisubr
out
mov
dec
jle
in
adc
fs
call
inc
pop
ret
xchg
pushf
push
jg
ret
sub
lea
pop
adc
test
and
push
jo
fsub
test
aad
jnp
je
xor
sub
push
or
imul
sub
out
or
in
mov
mov
or
push
inc
cs
push
jb
xor
xor
mov
jp
mov
(bad)
push
xchg
xchg
xchg
xchg
mov
js
leave
leave
enter
mov
scas
in
in
out
inc
mov
xor
pop
mov
jns
jb
out
cmp
cmp
adc
mov
shufps
pop
push
dec
fcmovbe
and
sbb
jo
adc
dec
cmps
lds
dec
dec
jno
clc
dec
into
dec
and
push
or
fadd
test
or
in
je
sub
jno
or
cmp
rcl
daa
dec
ja
shl
sbb
fimul
xchg
gs
cmp
js
xor
jae
mov
in
or
push
or
jg
pusha
dec
fs
loopne
xor
aam
add
inc
sub
sbb
jo
pop
cmp
xor
sub
cdq
pusha
dec
popf
pop
ins
(bad)
ret
add
or
push
sub
mov
cdq
ja
test
cmps
shl
xor
not
inc
jae
push
pusha
jo
enter
xor
add
out
push
or
xchg
or
or
push
rol
lea
xchg
leave
fwait
jmp
and
add
mov
sub
inc
lock
pop
dec
jae
or
lods
(bad)
imul
jo
dec
imul
bound
jno
jne
das
add
imul
add
inc
push
sbb
lea
mov
or
iret
pop
loopne
sub
sbb
pop
add
push
jo
mov
lea
in
pop
pop
rol
sbb
add
mov
stos
popa
sbb
pop
mov
lods
inc
xchg
dec
pusha
push
loopne
and
and
push
lock
(bad)
or
xor
sub
dec
or
xor
or
out
pop
pusha
push
mov
jg
pusha
addr16
aaa
das
out
dec
popa
pop
and
movs
add
call
lds
xor
rcl
dec
cmp
aaa
pushf
movs
mov
imul
sbb
xchg
les
cmp
xchg
pusha
loope
movs
imul
popf
xchg
ins
into
imul
push
popa
push
cmps
or
mov
lea
push
sub
dec
shl
(bad)
push
outs
fbstp
pop
xchg
inc
jge
sti
add
push
sbb
outs
mov
inc
xchg
jb
or
adc
adc
xor
bound
mov
mov
pop
or
xchg
dec
idiv
hlt
fild
mov
push
jb
ins
mov
jae
xor
or
or
rol
xchg
dec
cdq
icebp
inc
test
in
imul
repnz
in
rol
pop
arpl
stos
rcl
loop
or
inc
loope
and
adc
sub
out
test
inc
fmul
mov
xchg
and
test
or
test
mov
sub
inc
push
pop
jno
add
inc
popa
push
arpl
jns
sbb
mov
add
jo
leave
xchg
cwde
fwait
sbb
xor
out
mov
xchg
sub
fisubr
dec
sbb
mov
fstp
push
es
das
xchg
adc
push
xor
call
fs
aas
and
and
(bad)
test
hlt
jp
and
imul
adc
or
jo
mov
sub
mov
mov
(bad)
and
cmovns
daa
daa
daa
jno
lock
push
push
push
push
sbb
shl
push
cmp
xchg
and
pop
ins
xor
mov
mov
sbb
push
inc
push
push
dec
push
add
sub
sub
popa
fld
data16
or
mov
push
fisttp
cdq
mov
enter
add
das
xchg
inc
adc
outs
sub
push
sub
ins
or
(bad)
loopne
outs
ins
push
xchg
push
sub
mov
pop
xor
sub
enter
jne
mov
(bad)
cmp
and
pop
mov
push
mov
adc
push
add
add
jb
cmps
outs
add
mov
sar
sub
xor
inc
xor
popf
loopne
adc
jae
sbb
or
lods
xor
pop
addr16
mov
or
or
cmp
ret
into
and
fnstenv
cmp
push
xchg
xchg
sbb
mov
dec
push
pop
fiadd
xchg
add
movs
pop
arpl
xlat
add
add
scas
and
sbb
cmps
arpl
pushf
dec
dec
sbb
mov
lods
inc
dec
or
movs
ret
xlat
aas
outs
mov
shr
or
enter
add
push
test
mov
dec
xor
add
add
xor
push
adc
lea
pop
xlat
or
shl
xchg
(bad)
or
lea
adc
loope
or
adc
ror
sqrtps
adc
or
add
lds
inc
out
add
lods
add
sbb
(bad)
pop
mov
adc
mov
js
js
pop
sub
inc
ja
or
adc
add
adc
and
pusha
int
sbb
and
and
add
push
scas
pop
aad
fbld
xchg
mov
inc
sub
add
add
cld
cmps
xor
and
daa
cmps
das
add
enter
push
enter
mov
push
ss
outs
pop
add
cmp
(bad)
sub
xor
cmp
bound
gs
add
xor
inc
test
into
test
sar
cwde
movs
popf
add
push
inc
pusha
sbb
push
arpl
ins
xchg
in
sbb
daa
int
push
icebp
add
and
hlt
dec
add
or
add
mov
scas
stos
push
sbb
das
outs
int3
push
add
or
dec
out
loopne
ins
mov
les
xor
add
xchg
sub
or
fmul
ror
adc
or
dec
lods
(bad)
loopne
test
mov
push
loop
int
push
push
(bad)
cmp
push
(bad)
aad
fwait
pop
daa
daa
daa
mov
(bad)
jnp
sti
xchg
xchg
xchg
daa
inc
iret
xchg
loope
leave
leave
enter
outs
mov
lock
jno
jb
xor
push
ror
xchg
sbb
jb
loop
ror
cmp
cmp
pushf
pushf
mov
std
daa
aad
jmp
and
xchg
and
punpckhdq
(bad)
add
sbb
ret
je
dec
xchg
inc
cmp
dec
adc
jno
sbb
or
jae
call
lahf
xor
sbb
dec
and
cdq
sbb
sub
sbb
inc
mov
xchg
rcr
dec
loopne
ret
ins
sbb
imul
add
lea
int
ja
test
jae
add
shr
sub
mov
xchg
rcr
(bad)
js
das
leave
fwait
add
inc
and
or
mov
and
or
xor
sub
les
sbb
sub
jno
add
mov
inc
add
test
xchg
in
add
add
cmps
sub
ss
sbb
add
dec
mov
add
push
and
or
or
or
shr
dec
sub
inc
and
adc
mov
mov
(bad)
pop
inc
inc
test
xlat
inc
bound
sub
call
xchg
and
push
cmp
mov
imul
xor
xor
sar
les
sar
mov
cmp
rol
and
das
add
xchg
or
and
retf
inc
or
dec
xchg
sbb
dec
jmp
sub
pop
ins
(bad)
retf
pushf
inc
add
push
mov
xchg
stos
inc
loopne
shr
stos
add
pop
xor
(bad)
jp
or
ja
shl
or
and
and
loope
add
add
sbb
inc
fwait
push
or
(bad)
xchg
sbb
add
arpl
leave
test
add
xor
jge
jo
or
adc
xchg
test
test
(bad)
mov
fild
jecxz
test
sbb
dec
sbb
add
adc
aaa
add
xchg
push
lods
or
push
call
stos
popa
jg
popa
sbb
fstp
sbb
jo
aam
repnz
push
ror
stos
dec
mov
scas
call
push
bound
or
push
jg
jecxz
inc
sbb
jo
push
mov
mov
dec
mov
cs
push
je
jne
xor
fwait
or
mov
inc
sub
adc
jne
das
inc
loope
or
das
push
fistp
push
mov
xchg
pop
xchg
rcr
jmp
mov
sbb
test
lods
jmp
es
dec
pusha
xor
popa
add
iret
call
jbe
(bad)
add
sbb
sub
iret
cwde
ins
add
fstp
movs
das
ret
add
sub
cs
cmp
fadd
loopne
add
stc
mov
scas
or
cmp
sbb
adc
add
mov
scas
or
or
and
scas
std
test
and
pop
pop
mov
mov
or
jo
bndstx
stos
add
adc
xchg
mov
push
adc
es
das
mov
push
js
push
xchg
lahf
clc
mov
cmp
mov
stos
add
fsub
and
ror
cmc
and
test
xor
jno
push
mov
std
adc
mov
imul
add
sbb
pop
lea
jmp
mov
hlt
xor
mov
cdq
xor
add
jae
loopne
(bad)
rcr
push
mov
push
mov
aas
imul
fs
push
aam
ins
push
add
(bad)
push
pmulhuw
push
mov
xor
popa
or
or
shrd
sub
pop
jae
mov
or
scas
jo
outs
(bad)
cmps
enter
or
push
push
or
cmp
mov
das
in
sahf
pushf
mov
or
pop
dec
dec
dec
dec
jge
out
out
daa
daa
and
jmp
xchg
out
(bad)
jmp
leave
leave
enter
pop
xchg
in
in
(bad)
adc
dec
jne
mul
in
rcr
jmp
lahf
fcom
pop
dec
pop
rcl
(bad)
xor
push
adc
and
test
xlat
in
sbb
push
add
inc
mov
mov
loop
icebp
out
rcr
or
push
loop
dec
jae
inc
das
mov
pusha
xor
jne
adc
outs
out
rol
adc
arpl
adc
or
pop
or
add
ins
push
sbb
out
add
test
add
adc
push
pusha
xor
out
jmp
cmc
jecxz
xor
push
jns
push
loopne
rcl
pop
or
je
fwait
or
add
out
lea
or
lds
sub
add
inc
inc
bound
pop
adc
add
add
xor
inc
sub
(bad)
add
clc
xor
scas
push
sbb
gs
mov
add
dec
or
pusha
pop
add
jae
mov
and
adc
add
add
pusha
add
xchg
lods
xadd
add
sub
add
xor
dec
add
mov
cmp
rcl
(bad)
out
fisttp
inc
add
ins
dec
inc
mov
bound
push
adc
xor
add
add
and
inc
adc
add
and
add
inc
or
loopne
out
or
sbb
xor
jns
mov
ins
dec
jns
push
movs
int3
adc
test
stos
arpl
hlt
xor
sub
inc
add
push
adc
pop
and
add
jbe
aam
add
int3
add
(bad)
inc
jg
stc
mov
mov
push
pop
add
add
pop
inc
add
loop
push
iret
xor
inc
cmp
sbb
push
and
add
cmp
sbb
adc
iret
or
movs
loope
mov
xchg
in
rol
mov
xchg
in
cmp
lea
mov
jl
sbb
es
addr16
adc
or
add
shr
arpl
pusha
js
in
add
add
scas
inc
mov
push
sub
add
add
sub
pop
pop
xor
ret
(bad)
jp
xchg
clc
xchg
mov
push
xchg
cmc
push
mov
stc
adc
out
sub
daa
movs
xor
sub
aad
push
push
in
aam
pop
xor
push
scas
stos
cmp
int3
push
in
dec
inc
sub
aaa
pop
add
mov
test
sub
sub
push
mov
pop
push
add
in
(bad)
(bad)
push
or
mov
ins
mov
js
add
xor
pop
ins
push
add
sbb
or
add
mov
xor
or
sbb
inc
mov
cmps
add
pop
icebp
paddsb
adc
frstor
push
loopne
or
xchg
or
(bad)
outs
pop
add
pop
or
mov
repz
mov
adc
add
cmps
pop
add
popf
int3
sub
add
aaa
and
shl
inc
popf
retf
popf
and
pop
movs
cmps
pop
int
adc
push
and
or
mov
scas
mov
dec
push
add
add
xor
pop
fnstsw
hlt
out
sub
push
pop
xchg
jo
mov
mov
adc
or
dec
cs
add
pop
clc
and
ja
fwait
test
retf
dec
pusha
aad
or
sub
popf
cmp
push
(bad)
adc
or
test
or
add
push
arpl
sbb
adc
pop
mov
out
adc
(bad)
mov
xchg
mov
jnp
outs
sub
push
mov
adc
add
test
mov
adc
pop
call
pop
test
sbb
push
loopne
pop
pop
test
pop
jo
sub
add
xor
imul
dec
pop
or
call
add
sbb
cmp
ret
(bad)
mov
fmul
jecxz
aas
add
stc
pop
push
xor
in
mov
sbb
jb
int3
sbb
push
mov
test
pushf
pushf
mov
clc
inc
std
dec
dec
dec
inc
(bad)
aad
push
(bad)
daa
daa
daa
and
mov
daa
and
pop
test
inc
xchg
xchg
test
xchg
or
and
in
aas
(bad)
shl
pop
and
or
clc
sub
pushf
mov
inc
pop
lock
call
pop
inc
bound
cmp
mov
or
jae
pop
sub
xor
mov
sbb
jo
sbb
or
cmp
ror
sbb
fld
mov
rol
ja
or
inc
add
rcr
xor
sbb
xchg
or
sub
mov
cmp
das
leave
fwait
cmp
jo
add
dec
or
sbb
xchg
fsub
sbb
cmp
pusha
push
pop
add
inc
add
pop
adc
push
sbb
call
sub
sbb
add
adc
mov
push
jae
push
add
push
sbb
push
xchg
sbb
xchg
lods
(bad)
xor
add
sbb
mov
sbb
push
sbb
aad
sbb
fstp
mov
test
pop
mov
adc
ret
mov
sbb
add
lds
sbb
adc
sbb
jns
pop
xor
push
mov
dec
jno
movs
loopne
or
rol
aas
jno
push
test
bound
mov
fcomp
xor
sub
not
xchg
inc
add
jno
dec
mov
or
xchg
(bad)
pop
and
dec
sbb
sub
xor
jnp
add
add
or
shl
sub
add
push
sub
loopne
leave
pop
jo
mov
adc
sub
jmp
cmp
xor
aaa
xor
pop
or
and
dec
das
jb
xor
ds
loopne
fisubr
addr16
es
sbb
add
push
aaa
and
sbb
out
pop
jnp
loope
add
add
lock
in
mov
push
inc
popa
add
inc
or
inc
adc
jae
lock
in
pop
cwde
unpckhps
popf
clc
add
mov
jnp
cmp
xchg
stos
or
and
enter
mov
icebp
scas
pop
std
push
sub
xor
add
push
xor
shl
popw
jbe
add
or
adc
push
daa
pop
pop
xchg
out
pop
imul
push
push
add
fsubr
push
aaa
push
push
outs
mov
xor
call
neg
stos
inc
sub
ror
jno
cmp
mov
xchg
dec
inc
sub
ret
or
call
or
mov
call
scas
add
pop
inc
inc
jo
aas
push
inc
ds
into
fld
and
pushf
ror
jns
add
or
mov
add
or
push
(bad)
pushf
iret
daa
aas
pop
push
je
cmp
movs
adc
sub
or
or
or
(bad)
sbb
loopne
jbe
or
and
jno
inc
mov
sub
jns
add
mov
test
or
mov
test
xor
es
dec
add
sub
jo
rol
add
out
jmp
pop
and
outs
push
stos
xor
pop
xor
sar
jge
add
(bad)
push
dec
mov
mov
mov
test
add
inc
or
pop
dec
invd
inc
xor
cld
rcr
jbe
xchg
sbb
push
movs
or
rol
pop
das
mov
jmp
push
add
xor
sub
(bad)
int
or
jo
push
cmp
pop
js
sub
push
and
or
cs
fcmovb
mov
shl
(bad)
(bad)
addr16
(bad)
movs
add
mov
add
(bad)
pop
cmp
add
inc
pop
push
jae
adc
or
mov
cmps
pop
loopne
add
add
test
das
dec
add
jo
sub
mul
mov
pop
ja
push
call
das
push
adc
popa
hlt
pop
in
lock
mov
push
push
add
jl
outs
or
adc
or
sub
inc
and
mov
pavgb
(bad)
mov
test
add
cwde
test
xchg
loope
or
int
or
inc
push
sbb
je
in
jns
and
xor
mov
cmp
inc
jle
mov
rcr
imul
(bad)
xlat
push
in
pop
add
push
in
or
inc
mov
movs
not
dec
and
lock
push
mov
push
and
pushf
inc
out
add
xlat
loop
out
push
sub
dec
neg
push
lds
adc
test
je
icebp
pusha
xor
stos
push
push
gs
stos
dec
test
or
stos
mul
mov
inc
shl
jne
xchg
lock
push
and
push
call
push
push
or
xor
loopne
outs
adc
pop
pop
punpckhdq
adc
push
(bad)
pop
xchg
movs
and
jne
jne
mov
ret
or
jo
xor
addr16
mov
sub
and
into
pop
add
frstor
jbe
add
test
(bad)
dec
cmp
push
xchg
loopne
pop
dec
mov
xor
inc
stos
jmp
mov
inc
push
xor
sbb
and
js
dec
xlat
xor
mov
add
rcr
pop
shl
shl
xor
sub
movs
or
aas
outs
ins
adc
push
cmp
push
cmp
xor
xor
adc
or
jo
imul
sub
lahf
ins
add
inc
push
add
cmps
sub
cdq
push
(bad)
retf
add
mov
pusha
jo
mov
mov
stos
ficomp
ins
xor
jns
adc
pop
imul
dec
stos
scas
mov
hlt
pop
jo
mov
add
call
out
test
pop
es
das
jg
cmps
push
or
jno
popa
adc
add
pop
jmp
retf
or
xor
jno
add
call
stos
mov
dec
je
mov
push
fyl2xp1
or
fcos
fldenv
or
nop
stos
ret
mul
inc
sbb
addr16
hlt
addr16
xchg
pop
test
stos
add
xlat
dec
sbb
sbb
ins
es
das
mov
xchg
jmp
in
ficomp
addr16
outs
in
jo
add
std
call
mov
xchg
rol
aam
gs
test
mov
ins
jne
push
fs
inc
pop
sbb
xchg
arpl
add
sub
test
in
cmc
das
mov
call
pusha
ffreep
fwait
mov
div
sub
push
dec
sbb
repz
jmp
xor
movs
data16
inc
test
sub
push
adc
in
push
add
push
push
fwait
sub
(bad)
or
adc
push
cdq
add
xor
cmp
fdiv
and
mov
aas
push
inc
inc
jb
ja
push
fistp
sub
pop
sbb
or
dec
push
jmp
mov
sub
cmp
inc
add
xor
xor
sub
adc
in
rcr
test
pop
pop
seta
sbb
inc
ja
xchg
push
scas
ror
add
xchg
xchg
xchg
xchg
inc
imul
and
mov
pop
clc
push
and
aaa
jge
sub
push
mov
push
dec
xor
sbb
dec
mov
jo
rcl
shl
mov
and
outs
aam
inc
fadd
jecxz
or
add
or
or
and
fwait
lea
xchg
sub
jae
mov
pop
icebp
clc
cdq
fisub
add
mov
add
shl
xchg
inc
loope
add
dec
into
imul
add
(bad)
and
push
push
cwde
xor
loopne
fadd
inc
int3
dec
loopne
mov
sbb
xor
sar
lods
cmp
addr16
xor
int
movs
sbb
pushf
or
and
ret
inc
rcl
pop
and
pop
ds
inc
stc
or
pop
cmps
adc
xchg
out
xchg
loope
or
or
cmp
dec
pop
sub
inc
inc
mov
add
inc
and
add
add
xor
sbb
jnp
add
sub
popa
test
push
lds
adc
int3
xor
jo
sub
lea
and
out
inc
inc
mov
add
add
pop
sub
daa
xor
int3
cmp
add
cmp
mov
stc
adc
adc
xor
daa
out
adc
push
cmp
fidivr
add
jae
pop
in
add
cmp
dec
test
inc
inc
or
inc
inc
loopne
test
int3
pusha
(bad)
cmc
mov
daa
daa
push
inc
push
aam
das
shr
jb
imul
xor
adc
sahf
dec
cmp
sub
ins
and
add
pop
je
sub
sub
and
xchg
jns
clc
push
nop
jae
add
outs
in
pusha
inc
pop
add
aaa
mov
addr16
mov
sbb
mov
ret
mov
and
fld
adc
mov
add
or
out
cmp
push
lahf
rol
mov
sti
ret
sbb
(bad)
pushf
ss
xchg
pop
xchg
rcl
pop
inc
adc
daa
mov
cwde
gs
aam
out
aad
lods
adc
pop
xchg
mov
enter
xor
xchg
dec
inc
sub
ret
or
add
jne
jg
out
daa
add
cld
mov
add
mov
adc
mov
outs
shl
ins
adc
cdq
fs
sbb
shl
cdq
pusha
cwde
ret
mov
ins
adc
mov
add
cmp
push
rol
and
jmp
es
add
push
and
inc
in
shr
in
add
sub
push
daa
dec
mov
test
jbe
out
adc
(bad)
xor
(bad)
or
inc
dec
popa
outs
popa
inc
or
rol
iret
sbb
add
lock
jo
fld
les
loopne
adc
cwde
push
mov
leave
and
jge
adc
int
jnp
sbb
int
mov
jmp
in
cmc
ins
das
js
push
or
popa
ins
imul
mov
or
pop
fld
ret
pop
aas
xor
dec
xchg
loopne
addr16
xor
cmps
xor
push
add
jmp
call
fdiv
fiadd
fsubr
sahf
jnp
xchg
or
sub
add
inc
dec
push
sbb
adc
daa
daa
jge
std
movs
jne
add
jmp
(bad)
ret
inc
mov
sbb
sbb
jp
push
pop
inc
xor
mov
repnz
mov
pop
out
push
or
pop
inc
sbb
clc
push
rep
icebp
popa
adc
das
or
xlat
(bad)
xor
jo
pop
add
cwde
xchg
sbb
pop
add
mov
rol
push
ss
stos
sub
dec
and
add
jb
xchg
jno
cmp
pushf
push
or
and
xor
pusha
movs
sbb
add
inc
mov
inc
repz
iret
sub
xchg
xlat
in
sub
lods
or
push
pop
sub
shr
push
clc
rdtsc
imul
sbb
dec
push
inc
cs
fwait
jecxz
das
mov
cmp
jns
hlt
cmp
adc
pushf
mov
xor
lods
dec
inc
sahf
pushf
clc
sub
and
sti
inc
xor
daa
aam
pop
xor
xchg
xchg
xchg
push
mov
adc
cmp
fidivr
(bad)
fs
xchg
pop
push
ins
xchg
mov
punpckhdq
cmp
es
xchg
xchg
imul
ss
push
pop
cmp
sub
pop
dec
push
movs
cmp
or
xor
mov
mov
cmps
pop
mov
imul
push
shr
mov
dec
cmp
lea
add
popf
xchg
gs
cmovns
adc
dec
jae
fcom
add
push
push
jg
jg
addr16
lods
les
xor
jmp
mov
or
add
pop
or
add
push
mov
std
outs
cmp
outs
or
retf
int
add
adc
js
sbb
pop
sub
add
stos
je
jnp
xchg
in
lods
adc
scas
rcr
or
dec
ret
test
rcl
xchg
fwait
ret
and
fwait
add
popa
arpl
sub
mov
inc
or
fcomp
xor
pop
cmp
xor
dec
iret
inc
inc
mov
out
das
mov
mov
mov
add
in
dec
inc
imul
add
or
sub
iret
add
push
adc
(bad)
cmp
xchg
add
push
dec
in
(bad)
add
adc
add
pop
bound
inc
stos
sbb
push
add
xchg
xor
pop
xor
cmp
sbb
xor
or
ja
and
rol
lds
loop
dec
popa
inc
xchg
sub
add
mov
es
jo
xchg
dec
aaa
inc
clc
mov
loope
pop
adc
data16
and
or
adc
push
or
push
cwde
int3
sahf
adc
xor
pusha
sbb
inc
jge
or
jb
add
inc
inc
fs
jmp
dec
xor
sub
and
sub
or
xchg
add
and
lahf
mov
mov
sbb
jmp
bound
arpl
sar
fdiv
xchg
adc
add
retf
adc
arpl
add
dec
xchg
dec
pop
xchg
pop
xor
mov
push
jmp
fiadd
ret
lods
shl
push
cmp
and
add
sub
fadd
hlt
push
int3
sub
outs
xor
add
and
inc
or
lea
sub
(bad)
mov
out
(bad)
bound
pop
ret
sbb
ret
(bad)
adc
call
pop
pop
add
add
cmp
inc
sar
imul
outs
push
pusha
mov
mov
add
jo
adc
xor
outs
bound
jp
push
and
mov
aaa
mov
xchg
xor
fdiv
sub
fs
jmp
adc
mov
push
push
push
lods
mov
mov
cmp
pop
add
dec
xchg
cmp
and
outs
addr16
fsub
push
add
jbe
movs
cmps
test
gs
das
jmp
push
dec
iret
mov
inc
repnz
or
mov
ret
push
xor
push
inc
fadd
mov
popa
dec
scas
xor
mov
fs
dec
add
push
inc
cmp
add
dec
pop
mov
out
fs
inc
outs
out
sub
ret
mov
push
pop
stc
push
retf
shl
test
in
and
mov
call
js
or
movs
das
jmp
ret
mov
inc
sub
ins
lock
push
mov
jne
dec
cmp
in
call
add
or
pop
inc
outs
or
fcom
cdq
cdq
cmp
not
jbe
add
(bad)
es
mov
cmp
ror
addr16
push
mov
shl
pop
jae
xchg
nop
sub
call
lds
sub
xor
push
and
dec
mov
sbb
add
or
out
cmps
imul
jns
jbe
fwait
sar
in
add
pop
das
and
mov
jbe
pusha
xchg
(bad)
popf
pushf
mov
ds
adc
test
pop
test
loope
push
sub
pushf
rcr
ss
adc
jle
stos
jmp
mov
or
aas
scas
dec
aam
add
cwde
push
push
outs
retf
test
(bad)
mov
dec
sub
inc
xor
pop
mov
sahf
inc
sub
or
hlt
xor
xor
jge
fisttp
fadd
xor
xor
adc
aas
sub
jns
mov
js
jo
add
add
push
sbb
js
sub
in
mov
pop
vmovdqa
and
mov
mov
mov
ret
push
push
mov
push
addr16
dec
mov
mov
mov
mov
pop
pop
ret
push
push
dec
in
std
mov
mov
mov
xor
es
mov
mov
call
(bad)
(bad)
in
aam
pop
dec
cmp
jne
cmp
inc
xor
ret
mov
ret
(bad)
in
sbb
fadd
cmp
cmp
mov
outs
dec
movzx
add
cmp
ja
mov
jbe
outs
out
jnp
push
add
je
push
jmp
pop
les
xchg
cmp
aad
fisttp
test
ret
(bad)
enter
outs
(bad)
daa
sub
mov
movs
and
inc
push
(bad)
push
xchg
cmps
push
add
xchg
ret
or
int
and
sub
shl
mov
inc
push
sbb
or
jne
mov
ret
pop
sub
jo
sbb
cwde
ss
fadd
test
push
je
inc
daa
daa
mov
xchg
ret
pushf
int3
adc
inc
ror
stc
or
push
(bad)
push
mov
divps
sub
clc
mov
adc
inc
jp
cwde
hlt
or
jno
daa
rol
pop
lds
fidivr
add
mov
push
inc
stos
aaa
test
push
ins
cwde
jp
inc
jp
hlt
pop
ficomp
xor
inc
hlt
call
dec
es
and
or
outs
cmp
nop
outs
push
retf
mov
or
outs
mov
and
call
sti
or
sbb
push
push
pop
jmp
inc
in
jo
lock
jp
outs
aaa
add
push
dec
outs
inc
add
push
cmp
dec
xchg
inc
or
pop
adc
adc
inc
xor
and
jne
add
sbb
mov
cmp
aas
adc
dec
inc
xchg
sbb
lock
jge
push
or
sti
outs
fs
gs
add
xor
aam
push
lea
pop
sub
pop
in
adc
jecxz
mov
imul
jae
cmp
bound
inc
out
add
gs
into
push
daa
arpl
loope
ret
cmpps
iret
pop
xchg
cmps
add
(bad)
push
pop
scas
pop
iret
inc
jno
or
push
imul
jne
add
add
fdiv
inc
cmp
leave
lods
aad
in
(bad)
icebp
in
fs
inc
jp
(bad)
xor
sub
data16
jo
fmul
loop
xor
es
cmps
shr
xlat
cmp
xchg
cmps
lds
xchg
or
mov
inc
and
ss
jno
lea
outs
pusha
sti
xchg
adc
add
xchg
mov
int3
inc
pop
rcl
rol
ja
dec
and
je
rol
and
in
add
jno
neg
pop
jno
or
fwait
inc
cmp
jg
sbb
leave
fsubr
push
enter
pop
mov
sbb
fnstenv
loopne
dec
pop
sbb
xchg
pop
pop
jns
jb
push
je
jb
add
add
mov
dec
mov
mov
pop
stos
add
jmp
mov
pop
imul
cdq
xchg
dec
loopne
test
pop
cmp
xchg
or
int
dec
std
scas
movs
xchg
and
push
popa
imul
mov
push
add
outs
inc
fnsave
pushf
add
mov
add
add
int3
in
sbb
add
sub
mov
jp
js
arpl
loopne
push
aaa
add
add
(bad)
mov
dec
inc
adc
rcl
mov
xchg
xor
sbb
pcmpgtd
adc
add
jbe
lods
pop
and
cs
mov
pop
outs
jg
add
loop
cwde
ret
add
sub
or
dec
pop
inc
popa
jb
mov
mul
shr
xor
and
shl
pop
inc
in
ret
cmc
add
or
cmp
int
in
inc
push
pop
add
mov
hlt
jbe
sub
ret
and
push
add
cmps
mov
dec
push
aas
jnp
adc
test
xchg
mov
stc
sub
sub
mov
mov
add
scas
xchg
pop
xor
sub
push
mov
out
inc
sub
add
bsr
(bad)
add
sar
push
inc
push
inc
cmp
add
mov
and
add
jb
daa
mov
stos
in
add
pop
lods
xor
mul
add
jae
mov
int3
adc
mov
xor
jecxz
clc
mov
dec
add
mov
sub
fild
xchg
rcl
add
in
xor
mov
push
(bad)
mov
and
sub
push
mov
pusha
lock
add
and
add
outs
fidiv
scas
sbb
mov
push
mov
push
std
mov
push
push
outs
retf
scas
call
aam
push
add
pop
sub
dec
or
sub
sub
push
and
mov
out
add
jp
push
or
adc
or
cmp
jmp
or
adc
pushf
mov
jns
lock
cmp
pop
arpl
sub
cld
pop
xor
inc
adc
repnz
inc
or
js
push
neg
push
pop
cmps
mov
call
ret
inc
push
lds
out
pop
not
push
mov
push
and
add
pop
mov
or
gs
mov
xchg
dec
sub
test
mul
loop
shl
cwde
xchg
icebp
add
sar
shr
aam
inc
sub
adc
jmp
arpl
sbb
add
dec
jl
sub
push
pop
add
and
xor
jo
stos
imul
pop
out
xlat
loopne
add
pop
and
fdivr
call
push
idiv
pop
mov
and
mov
jae
push
nop
push
int3
cwde
or
addr16
mov
aad
sub
jno
sub
sub
mov
or
sbb
xor
adc
xchg
push
push
lahf
imul
mov
inc
add
stos
push
scas
xlat
push
inc
mov
movs
inc
or
mov
mov
rcr
push
mov
xor
fmul
pop
shl
loop
jecxz
fadd
dec
pop
jge
dec
inc
sub
inc
jg
xchg
add
retf
jg
jl
add
pop
fsubr
mov
add
pop
push
int3
es
das
adc
adc
daa
mov
sub
retf
scas
pusha
mov
xor
add
add
aad
mov
aad
pop
call
cmp
daa
mov
(bad)
ret
(bad)
fadd
mov
je
in
jl
in
jns
rol
pusha
mov
sub
push
mov
adc
dec
pop
sub
push
or
fistp
pop
(bad)
es
das
adc
add
jge
fdiv
inc
cmp
push
add
lds
mov
aad
jmp
bound
dec
ret
mov
adc
cld
fdivr
mov
push
push
fsubrp
je
stc
sbb
push
repz
xchg
stos
fisttp
mov
ret
and
outs
sbb
rol
mov
jo
xor
sub
jnp
adc
push
cmp
loop
add
pop
push
xor
scas
dec
push
outs
rcl
sub
call
or
jg
push
push
mov
xchg
and
xor
ins
scas
inc
mov
jmp
and
dec
push
push
dec
outs
std
jmp
or
xor
cmp
mov
or
sti
(bad)
sbb
push
jmp
xchg
or
xchg
pop
xor
pop
mov
out
xor
in
jnp
cwde
jle
push
inc
push
push
push
and
lods
adc
xchg
sbb
and
push
xor
mov
cmp
imul
loope
jo
loopne
inc
or
pop
pop
ja
push
inc
pop
pusha
adc
pop
push
push
mul
fsubp
or
dec
outs
outs
das
jnp
push
and
and
iret
xor
sub
sbb
jge
cs
xor
sub
adc
fsub
xor
pushf
mov
pusha
cmp
popa
mov
push
mov
and
outs
push
jecxz
bound
daa
daa
daa
daa
jns
cli
ss
sti
and
push
pop
xchg
push
adc
dec
call
xor
add
inc
push
cmp
(bad)
push
or
popa
and
je
jo
cmp
mov
jno
jae
push
xchg
add
outs
aam
fiadd
jecxz
ret
scas
or
cmp
and
mov
inc
jae
or
jae
dec
pop
add
daa
and
pusha
test
pop
cwde
sbb
add
loope
sub
mov
push
bound
add
or
sbb
gs
pushf
cmp
les
add
add
add
inc
xchg
les
fistp
(bad)
lock
push
cmp
mov
pop
push
js
cmp
inc
mov
iret
or
push
inc
rcl
arpl
push
mov
adc
jns
jne
sub
xor
and
push
loope
arpl
mov
pop
xchg
out
sbb
inc
loopne
cwde
adc
and
outs
jae
pop
dec
xor
pop
mov
add
mov
outs
xchg
jae
sub
jb
xor
rol
imul
push
sub
add
bound
lds
ret
movs
pop
pop
retf
inc
mov
push
xor
xchg
lods
sub
pop
scas
pop
adc
sbb
and
dec
fidiv
aam
retf
ja
pop
mov
gs
adc
adc
rcl
shl
xor
push
cmps
jbe
sub
jae
push
fadd
xor
cmp
cwde
fwait
or
inc
inc
or
and
sub
pop
dec
add
mov
test
lock
push
dec
mov
(bad)
xor
aam
outs
push
mov
ret
inc
mov
loopne
mov
(bad)
into
cvtpi2ps
fdiv
push
mov
and
add
or
inc
cmp
iret
inc
gs
jne
je
ret
bound
adc
jl
cmps
add
pop
adc
cmps
push
xchg
je
push
push
aas
mov
aad
retf
psadbw
jle
cwde
(bad)
xor
adc
leave
addr16
add
fdiv
rol
adc
or
imul
test
push
inc
scas
pop
bound
or
adc
leave
inc
pusha
push
frstor
or
inc
jnp
sbb
in
or
shl
(bad)
ja
push
(bad)
pop
or
in
jp
mov
or
add
retf
scas
pop
fadd
mov
push
push
mov
fnstsw
push
mov
js
cvttps2pi
and
dec
fld
inc
int3
cmps
xor
sub
pop
je
inc
jmp
mov
mov
rcl
daa
jo
push
cwde
jne
fsubr
es
das
(bad)
push
inc
sub
mov
xchg
dec
mov
ror
mov
rcr
jbe
add
sbb
mov
(bad)
cld
jb
push
ret
pusha
adc
aaa
push
loop
xor
ins
cmps
cmp
sbb
or
push
or
fisub
rcl
inc
retf
inc
pop
das
xlat
push
jbe
push
sbb
daa
sbb
imul
push
fdiv
lods
mov
and
pop
add
in
test
in
push
and
scas
pop
mov
inc
pop
cdq
ror
add
xor
mov
add
iret
sub
sub
test
enter
inc
(bad)
fdivr
outs
add
add
push
nop
bswap
xor
sbb
fidiv
dec
push
inc
cs
push
mov
adc
adc
(bad)
mov
repnz
sbb
mov
sbb
fimul
jno
nop
pushf
mov
lds
jb
xchg
dec
inc
sahf
pushf
(bad)
jae
ins
dec
dec
dec
dec
xchg
mov
and
daa
daa
daa
and
shl
xchg
xchg
xchg
daa
sub
(bad)
or
pop
pop
inc
adc
punpckhdq
mov
es
push
mov
dec
lahf
dec
cmp
ins
test
aad
dec
push
dec
or
mov
in
sub
jno
adc
push
idiv
inc
mov
dec
pop
xchg
(bad)
loope
jb
cmovns
(bad)
out
mov
push
adc
adc
push
popa
jg
jg
sub
add
dec
xor
cdq
push
je
idiv
mov
dec
xor
pusha
xor
add
out
adc
outs
mov
add
outs
push
or
bound
aad
ja
test
cmp
xchg
movs
nop
jae
adc
sbb
cmc
enter
push
lea
dec
sub
cmp
xchg
adc
mov
fdivr
inc
gs
aam
add
popa
arpl
bound
loop
inc
loope
inc
lds
enter
jae
je
jns
imul
or
fld
test
aam
add
data16
adc
add
ficom
cmp
lea
push
push
sub
aam
imul
pop
cli
out
xchg
add
add
xchg
and
imul
dec
cdq
or
lods
or
or
xchg
xchg
xor
imul
jo
mov
fbstp
jl
and
dec
gs
and
xchg
fld
jle
and
dec
popa
inc
nop
nop
fsub
dec
adc
mov
clc
sbb
dec
aaa
inc
adc
call
mov
and
mov
mov
rcr
lock
or
daa
or
int3
sahf
adc
xor
xor
sbb
adc
or
mov
cli
addr16
jmp
and
repz
in
retf
pop
clc
stos
popa
xor
or
xchg
and
push
push
dec
xchg
lds
or
cwde
test
pushaw
mov
imul
sub
cmp
arpl
mov
sub
loopne
dec
shl
xor
mov
sub
imul
add
and
stos
sbb
mov
sub
xor
sti
mov
mov
and
add
sub
or
cwde
push
add
add
icebp
add
scas
xor
dec
inc
sub
out
sbb
(bad)
stc
inc
ret
pop
jmp
adc
lahf
dec
mov
addr16
xchg
jnp
jne
ds
add
add
xchg
bound
out
fwait
out
add
pop
test
xchg
imul
xchg
dec
repz
in
mov
or
dec
rcr
pop
movs
int
xchg
(bad)
int3
inc
jns
fsubp
nop
jecxz
inc
add
or
neg
sbb
cmp
push
jg
push
stos
mov
out
inc
push
pusha
(bad)
cmps
jl
push
rcl
popf
stc
and
sbb
stc
push
mov
daa
mov
dec
xlat
sbb
push
jae
pop
mov
je
loopne
add
test
ja
sub
aaa
xor
dec
test
popf
or
lods
pop
in
arpl
scas
out
add
mov
sub
stos
mov
push
add
retf
leave
mov
inc
push
push
jnp
and
mov
outs
adc
mov
cmps
test
add
cmps
xor
vpcmpeqd
fs
dec
bound
or
arpl
popf
pop
mov
jo
inc
or
xlat
outs
lds
daa
add
ins
mov
pop
mov
push
scas
pop
shr
mov
push
jle
int3
das
jmp
xchg
jge
loopne
mov
jbe
daa
test
cmp
sbb
or
adc
add
jns
pop
loopne
pop
jns
jns
add
adc
xchg
sub
jns
pop
int
xchg
inc
or
jnp
sbb
ja
mov
and
(bad)
mov
add
test
pop
popf
mov
aad
mov
pop
jmp
scas
push
shl
das
add
jle
std
inc
inc
push
test
fs
dec
add
jl
push
add
call
pop
ja
(bad)
bound
frstor
pop
rcr
shr
(bad)
mov
ins
or
inc
pop
stos
ret
push
pusha
xor
sub
add
fist
xlat
or
or
sbb
js
icebp
ins
and
push
ret
in
add
das
fimul
inc
and
addr16
mov
pusha
lea
fsubr
push
nop
push
push
test
(bad)
das
in
xor
popa
add
or
add
imul
lods
sub
push
mov
cmc
sbb
xor
das
cmp
test
add
cs
cs
in
in
(bad)
test
jb
repnz
sub
jns
jmp
xchg
pushf
mov
(bad)
and
sahf
pushf
in
xor
pop
jge
dec
dec
dec
mov
daa
daa
daa
and
xchg
xchg
xchg
mov
xchg
jmp
aas
push
pop
ins
mov
mov
in
fimul
push
xchg
add
cs
in
imul
or
clc
dec
sbb
dec
out
inc
out
add
add
bound
adc
lea
or
mov
jne
xor
mov
and
mov
sub
inc
inc
inc
sbb
mov
les
mov
popa
nop
xchg
push
icebp
ins
(bad)
mov
retf
(bad)
mov
adc
mov
xchg
loopne
and
inc
pusha
dec
xor
cmc
adc
out
xchg
mov
js
and
push
dec
pop
and
aam
cmp
das
leave
fwait
or
and
sbb
dec
jmp
adc
push
and
or
dec
jne
pop
and
adc
movs
(bad)
iret
add
jno
test
shr
ror
mov
call
shl
and
add
jo
and
adc
rol
sbb
and
xchg
mov
pop
mov
jae
mov
vmlaunch
pop
add
and
mov
or
and
pusha
and
fcmovnb
xlat
xchg
xchg
fs
mov
inc
sti
xchg
in
sbb
and
and
adc
nop
and
inc
and
je
dec
outs
fist
pop
mov
xor
imul
fisubr
push
pusha
inc
mov
jl
les
and
je
imul
ror
jge
xchg
cmp
adc
jo
(bad)
and
sub
cs
jns
push
pusha
inc
(bad)
and
sbb
dec
inc
xchg
add
mov
or
arpl
popa
adc
loop
sbb
and
mov
mov
jmp
mov
sub
(bad)
adc
xor
retf
inc
mov
xor
and
pop
and
pusha
ror
mov
push
adc
add
add
adc
add
rol
sbb
adc
inc
rol
mov
dec
(bad)
fist
fiadd
mov
cwde
(bad)
push
push
cmp
mul
je
xchg
push
sub
or
(bad)
push
add
fcom
add
stos
dec
sbb
adc
stc
(bad)
push
bound
add
hlt
cmovae
bswap
and
dec
push
cmp
fwait
call
ss
(bad)
jnp
or
inc
sti
add
bound
sbb
push
xor
movs
mov
add
push
pop
sub
das
adc
mov
adc
push
arpl
imul
stos
mov
fdivr
pop
pop
or
mov
mov
jbe
ret
lea
push
push
push
add
mov
jmp
add
add
xor
mov
cmp
jo
dec
test
jl
inc
xor
and
fwait
std
(bad)
bound
fmul
sbb
ins
je
shl
je
dec
sti
or
and
mov
inc
dec
jne
mov
pop
pop
pop
pop
pop
pop
ret
nop
push
mov
push
(bad)
mov
mov
mov
test
pop
test
mov
sub
mov
scas
lock
xor
cmp
push
sub
sub
std
outs
iret
fcomp
cli
jne
test
jne
xor
jmp
xor
sbb
pop
pop
adc
jmp
push
(bad)
(bad)
add
rcr
ret
fild
je
lods
lock
outs
hlt
stc
mov
(bad)
sar
xor
dec
push
mov
mov
fmul
lock
(bad)
mov
and
jge
je
dec
jo
fs
mov
cdq
test
ret
rol
xor
mov
push
cld
and
push
mov
cmp
je
mov
sti
test
jle
inc
jo
adc
mov
or
retf
add
js
mov
mov
in
ins
mov
into
into
cmp
cmp
add
cmp
(bad)
sub
xchg
int
loope
cs
pop
xchg
jmp
(bad)
and
mov
pop
or
jl
inc
into
jo
pushf
js
mov
call
sbb
dec
jne
pop
add
mov
adc
xchg
hlt
xchg
xor
adc
adc
mov
xor
lea
sub
loope
push
imul
mov
xor
jmp
sub
rol
je
sub
int3
sub
pop
imul
mov
arpl
(bad)
loop
push
ins
test
sub
lock
and
clc
adc
out
mov
jl
and
rol
clc
sar
shr
xchg
add
pop
not
push
je
mov
ret
jmp
fs
jecxz
adc
loop
div
loopne
mov
je
dec
xor
enter
add
out
mov
cwde
sbb
clc
mov
mov
add
je
in
dec
in
adc
imul
push
loopne
push
jg
neg
push
add
and
cmp
adc
clc
dec
mov
xchg
sbb
cmp
fidiv
hlt
mov
(bad)
push
cmp
pop
cmp
jb
or
jb
dec
adc
cmp
dec
cmp
add
jne
pusha
mov
xor
xchg
ror
cmp
in
in
jo
sub
addr16
loop
sbb
in
push
xchg
jmp
test
xor
jb
loopne
cwde
imul
jne
mov
dec
inc
push
jae
stos
mov
sub
xor
jo
aas
sub
cli
inc
mov
call
cmp
push
cwde
in
push
rcr
adc
push
fmul
mov
stos
or
xor
cmps
push
adc
or
sub
mov
or
add
cdq
loopne
adc
movs
adc
es
shl
sbb
or
mov
mov
jmp
dec
dec
cmp
popa
jns
sti
add
sbb
in
inc
mov
dec
loope
mov
outs
scas
not
adc
dec
inc
or
push
je
add
mov
jl
cmps
out
sub
and
sbb
mov
cmp
dec
cmc
jg
pop
cmp
mov
inc
dec
jne
mov
and
inc
clc
cmp
add
loopne
loopne
add
jp
cmp
in
xchg
add
sub
call
test
cmp
adc
inc
or
(bad)
jo
mov
fldenv
xor
xor
stc
pop
add
adc
xor
inc
les
call
jl
rol
scas
cmp
mov
sub
mov
sbb
fimul
mov
xor
aaa
das
adc
rol
dec
mov
mov
shl
in
push
inc
push
aam
lds
lock
nop
fwait
jle
lock
in
xor
add
xchg
xchg
adc
shl
push
inc
add
dec
add
add
inc
clc
xchg
cld
clc
mov
jp
cmp
mov
into
mov
lock
cmp
cmps
jl
ins
ja
mov
xor
push
sti
jmp
pop
rcl
xor
sbb
add
add
cdq
daa
rol
aaa
cmp
mov
mov
in
out
call
sbb
sbb
mov
js
dec
mov
sahf
sbb
push
dec
sbb
mov
add
pop
mov
cmp
jmp
call
fistp
in
sar
fsubr
xchg
loope
push
inc
jne
cmp
aam
push
sub
stos
and
sbb
jmp
(bad)
jmp
mov
pop
scas
pushf
aad
jo
jnp
jnp
push
add
enter
and
mov
add
add
sub
xor
fdivr
inc
dec
fmul
test
(bad)
(bad)
jmp
ret
mov
shl
push
mov
sub
inc
sahf
adc
mov
adc
test
les
out
popa
test
and
sar
pushf
stos
sbb
jecxz
movs
idiv
adc
or
push
ds
test
lahf
cmp
adc
lods
adc
aad
and
or
or
jg
pop
in
push
loop
jne
push
inc
aad
mov
mov
sar
inc
pop
loope
inc
xor
retf
inc
add
int3
and
push
(bad)
(bad)
cmp
sub
aas
fwait
in
xor
lods
jo
loopne
inc
ss
(bad)
pushf
sbb
add
loopne
icebp
dec
iret
js
out
cmp
inc
or
rol
pop
nop
mov
jb
adc
shl
push
or
inc
pusha
jnp
mov
test
out
dec
(bad)
pushf
ret
adc
sbb
les
pop
and
rdseed
in
add
xchg
or
pushf
dec
mov
repz
sub
pop
mov
int3
js
mov
clc
adc
ds
jbe
mov
and
movs
sbb
fcomp
mov
xchg
or
mov
enter
sbb
or
or
add
hlt
sbb
fsubr
add
lods
mov
inc
enter
pusha
xchg
in
jno
and
out
and
movs
in
movs
pop
pushf
(bad)
mov
movd
mov
fcomp
cmp
sub
lock
or
in
jl
xchg
mov
sbb
inc
mov
ror
add
add
arpl
int
cmp
lods
test
push
xor
dec
mov
in
and
lahf
xchg
mov
movs
jb
push
cmp
test
push
shl
mov
push
shr
jns
adc
push
pop
xor
add
lahf
out
mov
(bad)
or
xchg
push
adc
sub
out
(bad)
inc
add
add
retw
les
adc
je
arpl
aam
call
mov
in
adc
or
mov
sbb
test
sub
xor
lock
fwait
or
scas
add
mov
data16
sub
dec
add
add
(bad)
pusha
mov
(bad)
sti
mov
or
stc
add
pop
pop
das
lods
neg
push
inc
cmp
out
mov
popf
sbb
cmp
and
pop
sub
pushf
into
sub
jmp
push
adc
mov
mov
cmp
loope
das
out
jg
test
nop
sbb
or
add
add
xor
push
cmp
arpl
mov
pop
sub
dec
gs
add
mov
xor
pusha
dec
sbb
xor
add
xchg
aas
sub
push
xchg
stos
and
add
movs
fadd
dec
aas
pop
or
out
xor
xor
dec
fld
sbb
ss
push
add
xor
mov
xchg
or
push
in
add
xor
rcl
mov
inc
pop
jo
ret
popf
sub
rcl
push
out
xor
sti
jno
rol
add
or
inc
sub
inc
sub
ss
gs
add
xchg
cmps
das
add
sub
stos
cs
pop
outs
push
int
push
movs
sub
and
(bad)
mov
and
and
sub
sbb
push
popaw
jne
je
cmp
xor
xor
int3
dec
aas
pop
inc
add
fnstcw
pushf
inc
xchg
shr
pop
or
jge
and
test
mov
retf
ss
rol
mov
lahf
into
add
xor
adc
fst
pop
adc
data16
cmps
movs
pop
movs
cmps
pop
and
sub
xchg
mov
mov
adc
(bad)
add
or
add
daa
bound
loopne
or
outs
popa
clc
pop
outs
loopne
cwde
addr16
aas
adc
add
adc
iret
adc
pop
and
add
inc
jb
adc
or
and
das
inc
rol
int
sbb
sbb
int
rcl
mov
jge
sbb
add
or
ins
imul
std
retf
xor
dec
shr
dec
cmps
pop
int
xlat
cmps
sub
xor
push
mov
mov
pop
jo
add
inc
adc
push
ret
lods
jae
and
ror
out
in
adc
add
push
aas
das
push
push
adc
js
add
sbb
dec
add
add
cmp
jmp
sub
aam
aas
repnz
fmul
lds
dec
sbb
mov
pop
adc
add
xchg
loopne
ins
or
push
adc
push
dec
push
mov
inc
add
or
aaa
pop
pop
push
jno
xchg
pop
and
test
push
popa
arpl
push
add
push
inc
mov
das
scas
stos
xchg
mov
fidivr
ins
loop
xchg
push
adc
dec
push
mov
test
or
mov
daa
out
xor
mov
push
mov
fwait
push
lods
repz
dec
fisttp
inc
cs
ins
scas
jp
or
lods
(bad)
loopne
add
test
cmc
ucomiss
mov
push
fs
mov
push
jp
push
inc
shrd
leave
leave
jns
icebp
xor
fs
sbb
jb
test
cmp
sbb
clc
inc
mov
pushf
pushf
mov
dec
inc
sahf
sbb
push
mov
daa
daa
and
mov
pop
xchg
cmp
mov
popa
popf
loope
pop
xchg
pop
ror
fimul
and
punpckhdq
xchg
add
mov
jg
cmp
fsub
pusha
cmps
aam
out
or
add
cmp
test
push
dec
add
adc
add
pop
push
shr
pop
xor
icebp
(bad)
ror
xchg
push
dec
sub
mov
cmovns
adc
lock
clc
icebp
add
addr16
les
setp
push
popa
jg
jg
pusha
mov
cmps
nop
dec
xor
lock
inc
fs
and
sub
add
call
fdivp
bound
sbb
hlt
repnz
pop
or
adc
ins
retf
cmp
popf
push
shr
mov
rcl
adc
pop
cwde
inc
inc
call
add
add
leave
inc
and
loopne
cld
out
lods
ror
push
add
in
xchg
or
scas
ror
xchg
inc
xchg
test
das
leave
cmp
sbb
fwait
gs
cmp
popa
arpl
pop
xor
push
or
xor
(bad)
pop
dec
jae
imul
test
sub
jo
inc
pop
ins
adc
shr
imul
push
sbb
(bad)
(bad)
cmp
inc
add
cwde
push
or
rcl
mov
lds
stos
jmp
inc
inc
js
jo
inc
add
retf
mov
cmp
imul
add
adc
push
xor
in
dec
pop
xor
mov
or
and
cmp
ja
and
cmp
push
inc
jae
fcmovnb
ins
lds
dec
popa
inc
xchg
inc
dec
jecxz
popa
inc
popa
add
sbb
nop
add
jo
sar
push
fs
mov
jl
jmp
call
mov
mov
add
dec
mov
push
popa
push
rol
dec
or
or
mov
adc
xor
pusha
sbb
inc
jge
or
sbb
add
mov
ss
jns
or
or
push
in
cmp
stos
popa
pop
xchg
push
xor
mov
test
or
icebp
jmp
gs
ret
xchg
xor
ror
xor
sbb
sub
add
pop
mov
push
(bad)
push
fdiv
add
and
inc
retf
cmp
test
mov
inc
imul
lods
lock
add
mov
sti
fsub
push
retf
sbb
sbb
aaa
sbb
xor
scas
test
fsub
pop
popa
dec
arpl
jns
(bad)
test
pusha
inc
rcl
sbb
xlat
and
movs
stos
mov
(bad)
pop
ret
std
addr16
ss
cwde
cmp
sar
pop
fldcw
pop
mov
pop
sub
jmp
and
pop
pop
sar
outs
arpl
add
dec
std
add
inc
inc
jne
ins
mov
mov
inc
clc
fisubr
outs
iret
mov
scas
ret
psubsb
or
inc
(bad)
push
adc
ins
xchg
fs
call
jmp
mov
sbb
xor
mov
dec
xor
xor
xchg
add
stos
rol
pop
(bad)
bound
stos
jbe
stos
or
add
out
sub
js
xor
aaa
fwait
icebp
mov
dec
(bad)
xor
or
jno
and
adc
ins
push
xchg
add
aaa
or
xlat
sbb
and
xor
inc
call
or
arpl
or
test
jo
adc
mov
or
test
or
or
sub
pop
ret
mov
cmp
cmps
push
retf
ds
or
add
shl
add
cmp
dec
adc
arpl
rcl
adc
xchg
xchg
lock
mov
and
mov
js
jne
mov
sub
xchg
fild
sbb
mov
enter
int
sbb
mov
xchg
fcomp
dec
and
inc
es
lock
loope
pop
lock
test
jl
inc
(bad)
mov
jns
pop
cmp
jne
mov
jmp
test
je
test
push
mov
adc
push
scas
mov
loope
add
js
sete
push
or
mov
mov
fild
jmp
add
dec
jne
pop
xchg
jo
test
out
idiv
fistp
jne
idiv
mov
cmp
jne
mov
out
fild
loope
mov
mov
add
dec
jne
sub
shl
fmul
mov
pop
mov
dec
xor
pop
sub
daa
pop
mov
inc
fs
mov
cwde
add
in
sbb
mov
xlat
enter
sahf
add
pop
sub
into
ins
add
adc
sbb
sbb
add
bound
add
add
fwait
ins
(bad)
and
aas
arpl
mov
sti
jne
xchg
shl
bound
sbb
xor
ins
jbe
mov
push
scas
mov
je
sbb
cmp
xchg
ror
loope
mov
xchg
icebp
adc
mov
sbb
ins
int
add
jo
mov
jge
pop
xor
loope
jno
cmp
loopne
mov
dec
inc
sub
dec
(bad)
jge
or
mov
(bad)
adc
mov
or
inc
add
fld
stos
xor
or
ss
(bad)
fisttp
push
xor
jo
or
and
xlat
xor
sub
in
add
or
add
push
add
add
jb
push
stos
or
jo
xor
shr
xchg
push
test
(bad)
or
aad
push
mov
pop
rcl
(bad)
xor
xor
add
sub
push
test
adc
or
adc
mov
adc
push
int
loopne
xor
add
adc
xchg
sub
add
repz
jae
cmps
into
wrmsr
das
xor
inc
adc
scas
xor
adc
dec
inc
pushf
les
shl
das
add
jo
cmps
movs
les
lock
add
je
aad
or
push
cmp
sbb
push
and
fnsave
pop
aam
add
mov
push
or
add
cwde
scas
lds
out
mov
inc
push
push
ins
or
inc
xchg
aaa
or
out
inc
fdiv
pop
arpl
(bad)
sbb
pop
arpl
addr16
adc
jae
sbb
cld
not
mov
push
mov
cwde
push
add
xchg
or
shl
and
xchg
loopne
push
ins
sub
xor
sahf
test
les
std
xor
enter
xchg
or
fimul
in
fs
cmps
leave
cmovs
add
dec
pushf
jmp
inc
js
pushf
mov
stc
inc
int3
jp
dec
dec
inc
sahf
bswap
push
jl
and
dec
(bad)
into
pop
xchg
daa
daa
daa
movs
fild
iret
enter
sub
push
sar
shl
push
mov
lds
push
stos
movs
xchg
es
es
scas
pop
cmp
jmp
push
jecxz
sbb
jno
or
adc
test
jae
jno
mov
xor
xor
popf
aam
dec
adc
(bad)
popf
jp
and
inc
or
push
aam
popf
lock
pusha
ins
push
jns
xchg
popf
cdq
xchg
mov
or
adc
pop
and
adc
jns
push
sub
popf
xchg
cmp
add
leave
fwait
add
jno
test
sbb
push
or
mov
enter
sbb
cwde
adc
xor
popf
mov
push
sbb
jae
dec
inc
or
ret
sub
add
fldcw
test
sbb
sbb
xchg
lods
(bad)
inc
pusha
mov
add
and
inc
inc
mov
popf
(bad)
dec
ss
push
rol
popf
inc
adc
jae
push
cdq
xchg
xor
inc
or
rol
adc
(bad)
popf
add
add
sbb
push
or
xchg
dec
mov
or
pusha
mov
dec
lods
jnp
aam
sub
ins
lea
loop
cdq
push
or
popf
sub
inc
test
xchg
popf
add
push
imul
lahf
pop
cmp
jp
add
mov
and
mov
mov
mov
(bad)
cmc
jmp
push
or
mov
adc
rcl
push
mov
dec
mov
mov
push
jb
mov
push
add
fsub
cmp
adc
(bad)
push
rcl
lea
or
and
or
(bad)
cmp
nop
jno
inc
jle
ror
xor
jle
ffreep
cmp
pop
arpl
fdivr
ror
mov
call
mov
push
out
shl
pop
in
nop
daa
mov
sti
or
sub
retw
lods
sub
dec
push
mov
xchg
push
pop
dec
push
(bad)
fild
movs
push
push
push
add
rcl
and
sti
test
dec
repnz
je
inc
add
and
push
push
mov
mov
or
xor
cmp
and
fidivr
mov
adc
add
adc
call
cmps
and
and
mov
imul
or
fild
call
nop
push
mov
xchg
add
xor
push
or
push
sbb
xchg
sbb
aad
stos
stos
shr
fst
add
inc
ins
jbe
js
aad
push
push
inc
xor
sahf
push
fbld
scas
or
nop
push
mov
jmp
xchg
cs
das
push
lods
xor
sub
sub
rcr
push
mov
inc
fs
sub
pushf
loope
adc
sub
pusha
or
xchg
inc
sub
or
or
mov
mov
(bad)
ficom
dec
test
stos
in
test
ins
or
inc
pop
shr
inc
stos
and
popa
nop
push
or
shl
or
pop
pushf
mov
or
and
and
push
xadd
shl
mov
fsub
inc
shl
add
loopne
nop
jne
(bad)
sub
inc
push
stos
adc
inc
inc
prefetch
or
mov
in
bswap
addr16
jo
(bad)
sub
or
cmp
daa
ror
or
pop
or
test
add
or
daa
and
ins
std
daa
mov
pop
lods
xlat
pop
std
test
push
jg
sub
or
(bad)
add
test
dec
adc
test
mov
fisttp
loopne
mov
push
(bad)
mov
pop
bound
fist
dec
push
push
stos
adc
mov
shr
jmp
cld
and
or
pusha
js
dec
dec
xor
add
dec
pusha
jo
aaa
test
ja
pop
or
and
push
add
ins
test
test
or
sbb
mov
loop
fimul
add
mov
cwde
push
sub
jl
into
mov
das
ja
pop
and
adc
(bad)
test
out
movs
push
lods
test
push
js
xchg
(bad)
or
aam
or
call
pop
imul
mov
or
pop
mov
xchg
mov
nop
push
jo
out
adc
push
leave
ins
mov
adc
in
leave
mov
jb
repnz
pop
in
pusha
sbb
jb
loope
in
mov
cmp
sahf
pushf
pushf
pushf
cdq
mov
dec
dec
inc
aas
jne
cld
daa
daa
and
call
pushf
xchg
daa
and
dec
add
mov
pop
lods
jmp
fimul
mov
push
inc
(bad)
rcl
adc
cmp
dec
int
dec
mov
cmp
cmps
jbe
or
mov
or
daa
mov
icebp
xor
test
mov
mov
dec
add
adc
mov
sbb
les
ins
push
mov
push
fisttp
add
es
rcr
ja
add
xor
jae
jno
pusha
cmc
sub
cmp
adc
cmp
push
add
ror
add
mov
or
loopne
test
cmp
cmp
add
add
ja
add
add
add
cmp
add
add
push
and
cmp
add
xchg
cmp
inc
mov
sub
or
or
sar
mov
sbb
lods
fild
cs
and
xor
inc
cmp
and
cmp
xchg
fstp
mov
imul
mov
jae
add
pop
xor
cdq
pusha
xor
add
jge
pop
bound
sti
or
or
and
and
and
dec
cmp
mov
or
test
ss
pop
sub
or
in
(bad)
or
mov
test
xchg
cmp
and
push
imul
add
cmp
pop
mov
pop
push
imul
das
push
enter
or
sbb
sbb
sbb
imul
xor
imul
(bad)
sar
loopne
mov
rcl
mov
or
in
and
in
mov
and
rol
nop
sbb
xchg
lods
push
mov
adc
dec
mov
jo
(bad)
push
push
popa
mov
pop
or
jl
inc
xor
mov
mov
int3
ds
adc
push
or
dec
jne
pop
push
pop
sbb
mov
sti
fwait
std
cwde
pushf
mov
(bad)
mov
push
or
xchg
add
ss
jne
aaa
xor
mov
loopne
shr
rcl
loopne
shr
push
cmps
push
push
pop
or
xor
cmp
mov
cmp
je
push
rcl
jnp
push
fdivr
pop
mov
inc
loopne
lea
and
mov
mov
rcr
pop
lea
pop
aaa
mov
xchg
lods
int3
or
out
ret
sbb
adc
loopne
jo
in
add
mov
lock
dec
jle
lods
lods
mov
lock
je
sub
and
ins
idiv
movzx
and
cwde
or
cmp
sete
fst
test
fisttp
imul
rcl
mov
push
div
in
dec
mov
outs
test
cwde
jbe
push
imul
push
in
mov
cmp
aas
mov
cmp
fisttp
mov
mov
jl
call
add
push
xor
dec
xor
mov
nop
mov
or
mov
or
rol
ins
es
loopne
cmovne
imul
cmps
adc
fdivr
inc
or
jl
ror
retf
jmp
faddp
cld
sbb
pop
das
shr
sbb
in
xor
push
sub
or
shl
dec
clc
(bad)
fstp
xor
lock
dec
cmps
fld
push
bound
adc
ret
idiv
popf
and
cmp
jne
cmp
pop
pop
jne
cmp
push
jbe
cmp
sbb
in
rcr
(bad)
stos
jmp
mov
dec
(bad)
in
div
add
adc
(bad)
in
pusha
push
aas
cmp
push
ret
lds
leave
inc
or
cmps
wrmsr
loopne
ret
cmps
jo
(bad)
ds
push
push
push
jg
test
jle
jg
inc
inc
sbb
pushf
sub
bnd
adc
push
inc
add
ja
xchg
cmp
inc
test
je
lods
cmp
or
leave
pop
and
call
mov
sbb
loop
pushf
idiv
in
sub
add
mov
mov
int
mov
mov
enter
pop
lock
sub
enter
lea
or
inc
ror
add
mov
fs
xchg
add
lock
inc
vmovmskpd
call
inc
test
push
hlt
repnz
fimul
mov
lods
inc
add
pusha
jle
imul
mov
jnp
mov
push
xlat
push
xchg
add
sbb
loopne
in
inc
mov
mov
(bad)
in
push
out
cmp
push
push
push
(bad)
into
fadd
shl
xchg
enter
jb
mov
idiv
dec
cmps
or
cli
inc
jle
mov
test
jns
add
sar
jmp
and
std
or
add
ja
add
mov
add
push
pop
and
jl
inc
xor
cmp
je
jo
inc
dec
jne
or
loop
jg
jle
test
pop
inc
ret
loopne
sbb
lea
leave
aaa
jl
ror
cs
hlt
jmp
es
lds
jmp
mov
push
ins
retf
lds
add
xor
mov
or
add
fst
push
sahf
jge
fadd
jle
stos
inc
xchg
cld
sbb
fs
loop
or
(bad)
xchg
fild
out
cmp
lock
in
je
mov
bound
jmp
push
mov
push
add
mov
test
xlat
xor
loope
mov
fbld
aas
xchg
jge
adc
sub
push
(bad)
cld
mov
ins
cmp
cld
mov
push
push
add
push
cmp
jge
mov
je
xchg
imul
jle
mov
cmp
adc
sub
add
loopne
fs
scas
gs
aas
mov
dec
ins
sub
jg
sahf
add
ror
mov
cmc
jg
or
sbb
add
loopne
add
sub
pop
pop
cwde
push
aaa
shr
lock
pop
scas
ss
and
mov
inc
aam
or
jmp
pop
hlt
cmp
push
nop
jne
test
jle
dec
(bad)
and
sub
call
clc
push
adc
dec
push
jo
xchg
jbe
fisttp
jmp
sub
jl
push
je
cmp
add
adc
cmps
mov
push
mov
inc
dec
cmp
cmp
jle
push
pop
xor
jecxz
mov
gs
clc
cmp
jl
cmp
sub
mov
or
jmp
xchg
lea
cmp
jo
(bad)
cwde
cs
or
call
xor
xor
and
outs
je
adc
push
lea
jle
mov
int3
add
mov
lods
adc
leave
sub
sti
nop
inc
push
jo
mov
and
mov
mov
fsubr
fild
ins
push
push
jmp
fmul
add
mov
ror
push
dec
or
xchg
or
aaa
push
add
fiadd
or
mov
jecxz
cmp
mov
pop
shl
adc
das
sar
arpl
pop
aaa
push
sbb
sub
or
add
popf
lods
ds
or
xor
or
push
or
xchg
sbb
pop
push
div
test
pushw
fdivr
adc
aad
shr
je
sub
enter
or
inc
jp
pop
or
add
cwde
sub
pop
mov
and
inc
sahf
adc
cvtpi2ps
pop
mov
cmp
pop
push
cs
xchg
ret
js
dec
xchg
clc
(bad)
inc
dec
sub
or
fs
mov
movzx
jns
pop
outs
fiadd
jmp
push
dec
repz
sahf
mov
mov
loop
push
ds
dec
jbe
hlt
xor
test
cmp
xor
fisttp
out
adc
jecxz
out
dec
pop
pusha
pop
or
pop
sbb
inc
and
jnp
gs
inc
jne
sub
dec
inc
sub
jne
outs
or
repz
mov
and
shr
sbb
mov
add
rol
add
add
jl
mov
sar
pop
mov
pop
inc
pop
jbe
cmp
mov
nop
pop
leave
lods
out
push
stc
cmps
rol
sbb
ret
or
dec
add
add
cmp
das
(bad)
shl
mov
jo
jg
mov
test
les
inc
lock
mov
sbb
dec
pusha
clts
dec
pusha
test
inc
popa
aad
inc
pusha
ins
jg
mov
cld
xor
mov
dec
fs
xor
enter
nop
js
clc
push
jl
inc
in
jo
mov
and
jecxz
xor
out
xor
into
or
and
push
xor
jns
test
or
cmp
in
jge
sti
test
jo
fs
pop
stos
jp
push
mov
jmp
inc
adc
movs
mov
(bad)
pop
lods
jmp
dec
add
xchg
popf
lock
cmp
retf
add
mov
add
inc
mov
cmps
ucomiss
pop
inc
or
fwait
mov
arpl
xchg
aad
andps
les
cmp
(bad)
jb
test
out
mov
jbe
or
jae
push
pop
pop
retf
mov
dec
arpl
in
nop
sti
retf
out
(bad)
cmp
jl
ret
xchg
inc
mov
fstp
sbb
jne
jg
icebp
(bad)
enter
mov
mov
add
dec
test
mov
mov
push
dec
movs
fsubrp
rol
xchg
dec
mov
lea
add
mov
(bad)
sub
std
mov
inc
lea
bound
jmp
movs
xor
sub
into
in
xchg
sbb
repz
retf
aam
xchg
stos
cld
inc
jo
retf
adc
pop
adc
enter
push
xchg
mov
or
adc
mov
cdq
cdq
mov
jmp
cs
dec
loope
push
nop
in
add
paddw
lods
lock
sbb
leave
(bad)
out
push
cmp
inc
pop
pop
add
add
aam
dec
pop
std
pop
inc
push
mov
add
pop
lea
je
je
mov
lds
call
mov
or
je
call
arpl
inc
fisttp
rol
sbb
jb
push
aaa
lds
loopne
mov
das
sub
and
and
mov
cmp
lahf
xor
xor
sbb
rol
pop
or
ret
pop
(bad)
jp
out
mov
push
jecxz
pusha
sbb
mov
mov
and
mov
adc
inc
std
arpl
ud2
das
sar
fsubr
in
cmp
fistp
sbb
scas
loope
pop
call
or
xor
fs
(bad)
dec
sbb
cmps
mov
dec
shl
jmp
inc
and
jp
hlt
push
int3
mov
dec
mov
mov
fsubp
mov
ret
out
or
call
pop
add
retf
(bad)
mov
sbb
pop
cmps
nop
cmp
lock
ja
lock
or
add
lods
add
push
or
mov
jge
(bad)
jle
jl
inc
adc
or
mov
add
or
aaa
test
test
ret
and
stos
xor
lods
leave
nop
adc
cmps
push
add
push
cdq
ins
sbb
and
xchg
sbb
xor
fadd
inc
in
jbe
mov
pop
(bad)
dec
mov
or
in
cld
jb
xchg
xchg
mov
in
ret
scas
clc
add
fcmove
cmp
jge
ror
cli
add
push
push
xchg
add
test
xor
mov
test
lock
clc
add
(bad)
and
dec
or
inc
add
(bad)
fwait
mul
dec
test
cmp
cli
add
inc
div
sub
enter
mov
int3
mov
pop
fwait
add
mov
add
add
out
je
xchg
or
push
mov
push
stc
pop
fmul
and
sti
call
cmp
xlat
mov
das
fsubr
mov
dec
stos
aad
pop
hlt
push
mov
out
test
cmp
jae
jp
fdivr
mov
adc
btr
cmp
jecxz
push
(bad)
call
pop
pop
pop
jmp
xchg
or
loop
xor
aaa
adc
inc
and
mov
adc
mov
cmp
je
sbb
je
sbb
mov
ja
and
bt
jb
dec
shl
and
cmc
outs
mov
add
ret
adc
push
inc
cmp
jne
inc
add
or
jne
ret
add
pusha
mov
outs
cmp
in
mov
sbb
ret
cld
adc
push
je
movs
xchg
mov
sbb
sbb
call
inc
add
jbe
dec
aad
je
frstor
std
jge
push
mov
jmp
push
mov
push
or
in
mov
inc
call
add
nop
inc
hlt
es
lock
data16
push
mov
sbb
xlat
add
test
add
push
call
xor
psubsb
xlat
mov
iret
rol
add
into
outs
enter
push
aam
jl
nop
xchg
xor
shr
jg
mov
mov
mov
ins
inc
mov
call
call
cmps
cmps
pop
push
cld
push
push
push
mov
test
aaa
test
out
call
repnz
out
push
and
dec
es
rol
mov
pop
mov
inc
pop
and
sar
enter
dec
add
dec
rol
ror
dec
int3
cmp
jle
cmp
push
jmp
enter
fcmovb
nop
cmps
aas
or
mov
dec
adc
inc
xor
rol
push
fld
dec
mov
(bad)
push
scas
pop
pusha
dec
pop
daa
push
push
in
out
(bad)
or
sbb
mov
adc
test
lock
inc
sbb
je
addr16
push
inc
mov
xor
sub
test
loope
in
adc
loope
sbb
test
add
call
rcl
stos
mov
(bad)
sbb
ds
adc
js
push
js
(bad)
add
jno
imul
bound
test
and
mov
or
jmp
jb
ins
push
movs
lea
repnz
enter
jb
add
jle
out
push
xchg
mov
pop
retf
aaa
scas
mov
rcl
xchg
pop
jl
or
xor
cmp
test
mov
push
and
or
ja
scas
lods
mov
add
jl
cmp
adc
(bad)
jmp
sar
pop
sub
mov
call
pop
ror
cs
rol
test
sbb
and
cs
les
push
ret
fwait
rcl
dec
cmp
push
(bad)
and
add
xchg
mov
inc
in
cmp
ins
fwait
clc
movs
fcomp
or
jnp
ret
mov
jl
or
sbb
pop
cmp
jne
test
sub
mov
mov
or
jnp
push
mov
xchg
sbb
push
cmp
je
jp
call
ds
mul
fild
sbb
test
pop
bsr
jo
outs
pop
cmp
add
mov
je
cmp
pop
sahf
jg
and
add
sub
sub
repz
pop
aaa
fsubr
jmp
cmovno
inc
or
es
sub
sti
fs
(bad)
(bad)
cmp
push
xchg
and
inc
imul
retf
ins
rcl
or
clc
sbb
aam
sub
sbb
push
lods
adc
cmp
lods
sbb
pop
js
int
or
nop
dec
test
sub
cmp
inc
xlat
fild
jg
mov
push
push
and
call
ds
sub
or
cwde
pusha
inc
cli
test
cmp
dec
jne
retf
dec
mov
sub
mov
rol
jg
inc
or
js
pop
mov
jl
dec
adc
push
jle
pop
sbb
jno
push
mov
je
inc
imul
jg
pop
into
sub
scas
add
add
add
xor
adc
add
jge
pusha
cmp
cmp
push
int3
out
pop
loop
add
push
add
addr16
test
loope
jg
scas
nop
mov
ret
or
daa
call
mov
pop
pusha
xchg
adc
push
lea
mov
adc
cmps
je
jmp
test
cmp
jmp
jl
mov
(bad)
push
mov
jae
push
push
jp
rol
mov
dec
and
in
pop
mov
jecxz
ffreep
jp
mov
jmp
mov
add
and
xchg
sar
mov
mov
ins
pop
jb
int
fld
mov
iretw
adc
out
or
xchg
movs
data16
and
cdq
xor
test
fsubr
adc
jp
pop
jae
dec
inc
add
adc
inc
fadd
add
aaa
or
add
sbb
(bad)
cwde
pop
sub
dec
jne
inc
sar
test
cld
call
std
sbb
dec
ret
pop
hlt
jne
loope
and
push
sub
inc
add
inc
mov
adc
add
inc
push
push
add
rcl
mov
arpl
fisubr
mov
pop
js
push
mov
adc
rcl
adc
xchg
inc
pop
stc
push
aad
jge
fstp
iret
xchg
cmp
jne
xor
dec
mov
(bad)
out
rcr
or
mov
jecxz
fistp
mov
pusha
jp
add
sbb
popf
jae
inc
pop
push
sti
pop
cmc
call
mov
sub
jb
dec
je
adc
mov
dec
pop
xor
mov
adc
hlt
test
dec
or
stc
in
mov
sub
sbb
and
or
xchg
test
cs
ins
rol
mov
sbb
(bad)
cs
jbe
ja
div
icebp
adc
xchg
add
inc
idiv
je
movs
add
int
data16
ror
sbb
dec
xor
mov
adc
add
fld
aaa
mov
aaa
sub
mov
sbb
mov
sbb
fs
scas
loope
loope
pop
stc
inc
ret
iret
inc
rol
xchg
xor
cmps
push
dec
loopne
mov
mov
lods
xor
xchg
mov
adc
or
push
sub
sahf
dec
lahf
loop
lock
lea
add
pop
sub
push
push
scas
sub
pop
push
mov
mov
cmps
cmps
inc
cmps
(bad)
push
push
pushf
mov
cmps
adc
outs
mov
mov
daa
loope
outs
or
add
inc
lock
aaa
pop
shr
cmp
xchg
imul
and
push
inc
inc
sbb
mov
bswap
sub
or
fs
repz
out
mov
sbb
mov
adc
adc
mov
xlat
movs
mov
test
sub
imul
dec
adc
cmp
push
and
hlt
nop
stc
icebp
add
pushf
iret
push
hlt
and
jne
pusha
push
aad
or
mov
sbb
jo
inc
xor
daa
mov
stc
je
clc
mov
(bad)
sbb
xor
jmp
or
in
lahf
jecxz
loopne
cmps
ret
pop
pop
push
or
(bad)
push
out
and
push
fisub
push
sub
icebp
test
push
mov
mov
push
add
mov
outs
add
pop
dec
and
sbb
xor
dec
(bad)
stos
popf
cmps
test
in
aad
ret
sub
mul
and
fdiv
pusha
ficom
arpl
lock
or
and
out
push
in
mov
fwait
dec
jne
rcl
mov
mov
(bad)
into
(bad)
repz
pusha
add
dec
call
(bad)
and
adc
ret
dec
jp
sahf
xor
cmps
inc
and
push
push
call
adc
xchg
les
je
sbb
sbb
test
add
inc
fisttp
push
pop
push
jns
(bad)
jne
das
adc
add
or
sbb
sbb
jnp
cwde
xor
ss
mov
popa
mov
xchg
sub
outs
sub
jbe
xor
test
sbb
xchg
in
sub
mov
aaa
cmp
fstp
inc
mov
pop
or
cwde
dec
mov
ret
push
aaa
rol
sbb
(bad)
ror
test
mov
ds
ror
cdq
cmp
sub
ror
mov
test
sti
dec
mov
fcomip
jmp
inc
fild
test
mov
adc
jmp
mul
sub
sbb
add
dec
push
cmps
jecxz
adc
push
pop
adc
pop
in
mov
jge
pushf
adc
pop
lock
call
push
or
setno
jl
ins
lea
pop
les
enter
xor
adc
jne
in
ret
jg
cli
cmp
push
xchg
sbb
ins
jne
outs
xchg
or
jne
test
and
cld
vcvtdq2ps
ret
cmp
sub
sub
imul
adc
scas
in
cmps
aas
clc
je
push
mov
mov
movs
pop
lea
in
jge
mov
pop
addr16
and
repnz
xor
and
mov
std
push
mov
cmc
imul
mov
mov
not
sbb
jl
in
mov
adc
cmps
push
pushf
pop
push
loopne
daa
addr16
pop
or
jo
sar
jnp
xor
inc
add
inc
ja
adc
or
lods
dec
mov
cmp
and
inc
and
xchg
sbb
cwde
xchg
fldenv
sti
mov
xchg
pusha
fnstcw
mov
add
test
adc
xor
pusha
pop
or
sbb
loop
dec
ja
icebp
sub
ja
xor
lock
test
cmp
lds
test
adc
pop
(bad)
jmp
repz
ins
mov
add
adc
xor
bound
ja
add
or
lahf
dec
sbb
cs
dec
cmp
fsub
ret
cdq
add
inc
mov
add
sbb
shl
add
mov
into
xchg
int3
jb
out
aaa
scas
mov
mov
jbe
and
sbb
push
add
test
mov
add
movs
out
fmul
(bad)
push
mov
movs
xchg
arpl
enter
dec
xchg
cmp
call
cmp
sub
jne
push
cmp
adc
je
in
adc
fsubr
mov
(bad)
jo
test
sub
xor
ins
lods
push
add
add
ins
icebp
mov
out
in
dec
jne
jecxz
call
out
add
loopne
ins
fcmovbe
pop
sbb
sub
inc
(bad)
retf
add
inc
ins
jo
add
int
ret
add
add
call
movups
mov
jecxz
sbb
xor
dec
out
(bad)
loope
daa
cmp
imul
inc
fdiv
les
sbb
fist
cmp
loopne
lahf
push
add
inc
lahf
xchg
jnp
and
mov
pop
sbb
mov
outs
outs
adc
sbb
adc
fdivr
sub
mov
clc
mov
cs
sbb
sbb
sbb
shl
outs
or
sub
sbb
adc
not
add
adc
sahf
xchg
dec
sub
sbb
pop
rol
inc
mov
adc
and
loopne
rcl
add
arpl
push
mov
retf
add
mul
mov
dec
into
dec
mov
scas
push
and
(bad)
movsx
sbb
div
jne
les
push
mov
aas
jecxz
cs
xchg
das
xchg
add
sbb
mov
je
inc
add
pop
inc
dec
jne
or
(bad)
loope
or
jne
inc
mov
push
mov
dec
cmp
ror
pop
and
aas
or
xchg
push
push
push
push
retf
xor
xor
xor
test
fs
xchg
mov
sbb
pop
mov
adc
addr16
scas
loopne
xchg
or
adc
lods
jbe
shr
in
or
mov
or
jmp
push
and
pop
call
movs
pop
and
sub
sub
add
and
sub
push
fild
(bad)
cmp
adc
mov
mov
inc
jo
pop
sbb
inc
sub
sahf
jb
test
sub
icebp
cmps
leave
loope
push
into
out
ss
push
enter
push
lods
sbb
xchg
cmps
(bad)
jno
xor
adc
(bad)
inc
sub
jno
xchg
push
pop
ins
xchg
push
fstp
inc
xor
fcom
sub
mov
adc
cmp
je
adc
mov
xor
lock
add
inc
jo
pop
cmps
cmps
xchg
stos
adc
jb
mov
or
mov
jnp
pushw
lds
mov
push
test
push
jns
cmp
xchg
icebp
ins
mov
out
cmp
call
push
lahf
push
jp
fwait
ror
or
ja
and
and
dec
popf
fmul
shl
(bad)
int
add
dec
outs
iret
cmp
dec
cdq
xchg
test
lea
cmps
adc
or
push
xor
xchg
inc
mov
jae
lea
xadd
ds
test
push
xor
sahf
adc
xor
mov
add
(bad)
cmp
lock
loop
test
add
add
addr16
or
sahf
xchg
adc
daa
adc
push
inc
mov
daa
shl
ins
pop
xor
dec
shl
or
add
mov
and
aaa
arpl
jne
stos
jmp
xor
ja
push
adc
mov
sbb
cmp
lahf
inc
cmp
inc
mul
cmp
lea
(bad)
xchg
enter
lods
ret
fisttp
shl
mov
mov
aad
and
adc
movs
push
mov
dec
jecxz
cmps
jnp
lahf
sahf
push
jo
and
shr
sub
pushf
push
push
(bad)
fadd
dec
clc
dec
out
sbb
cmp
or
js
push
jmp
mov
and
add
mov
mov
or
test
add
mov
sub
sar
test
inc
das
or
lds
test
cmp
or
arpl
pop
add
jmp
hlt
in
wrmsr
mov
ins
pop
jmp
loopne
push
jp
add
lods
or
push
test
jnp
sbb
jne
or
mov
pop
adc
fdivr
and
sbb
mov
(bad)
ja
iret
mov
dec
sub
mov
or
xlat
and
add
aad
je
aaa
sub
adc
rcl
inc
icebp
add
pop
sbb
or
imul
xchg
inc
sahf
mov
fild
xchg
int3
push
cmp
sub
test
cmp
pop
jecxz
or
or
test
adc
pusha
xchg
pop
add
cli
jno
and
sbb
adc
popf
pop
and
mov
push
mov
add
shr
add
mov
or
outs
cmp
enter
lea
add
push
xchg
add
push
inc
fwait
pop
push
mov
dec
fimul
test
adc
and
sub
xchg
ds
hlt
xor
mov
dec
js
jb
cld
test
sub
push
sahf
adc
add
sbb
rcl
aaa
add
or
sub
xor
jno
js
cmps
add
cmp
ja
and
add
sbb
adc
jns
add
adc
mov
les
popf
aaa
sbb
mov
mov
dec
fnstenv
repnz
xor
loop
inc
and
cmp
dec
aaa
popf
out
push
push
mov
xchg
add
outs
mov
test
jne
stc
cld
sbb
rol
iret
aad
clc
sar
sub
xor
add
sub
sub
xchg
imul
lods
and
sbb
sar
clc
adc
loopne
inc
movzx
and
mov
push
xor
jb
bound
mov
mov
test
jle
sbb
inc
or
jle
inc
imul
xchg
mov
or
adc
inc
add
fs
cs
add
loope
xor
xor
cmp
loopne
out
push
push
rcr
neg
or
jo
sbb
sbb
daa
add
aas
push
cmp
jmp
pop
or
sbb
nop
mov
mov
je
xchg
cld
lock
scas
cmp
mov
out
sbb
pop
inc
sahf
into
dec
mov
inc
data16
mov
or
pop
js
stos
aaa
sub
iret
jp
push
xchg
jl
pop
outs
push
jp
add
mov
inc
xchg
pop
enter
add
dec
(bad)
es
mov
fisttp
and
adc
repz
mov
sub
add
cmp
cli
stos
mov
mov
cmp
mov
push
push
in
xor
mov
test
xchg
cld
adc
inc
sub
inc
fsub
push
add
ss
xchg
loop
or
or
rcl
push
and
imul
mov
out
cwde
fdiv
icebp
aad
aaa
inc
loopne
pusha
aas
pop
push
and
ror
cmp
xchg
inc
pop
push
mov
inc
xchg
pushf
push
and
cli
nop
cmp
mov
xor
xchg
jmp
mov
dec
sbb
call
lock
jmp
sub
jb
dec
je
jmp
adc
test
xchg
add
push
daa
into
or
cld
stos
bound
xor
and
jb
add
sti
push
add
out
mov
cmp
mov
push
cmp
add
xor
mov
ja
adc
add
mov
inc
inc
ja
dec
xor
aaa
cld
aaa
dec
inc
nop
adc
ja
dec
js
cmp
sub
jnp
loopne
leave
mov
xchg
cwde
adc
or
test
stos
lock
inc
xchg
sub
dec
test
stos
inc
sbb
gs
enter
dec
mov
ja
loope
(bad)
clc
mov
dec
lock
push
(bad)
mov
icebp
adc
xor
repz
and
cli
xor
mov
bound
sbb
jle
cdq
jp
add
call
(bad)
imul
mov
idiv
lock
sub
enter
dec
adc
fcmovu
aaa
(bad)
add
xchg
adc
rol
jge
or
sbb
sbb
or
mov
xchg
pusha
mov
mov
mov
mov
shr
fsubr
cmp
and
cmp
mov
mov
mov
mov
(bad)
inc
dec
aam
add
pop
add
add
push
xor
ret
xchg
and
inc
and
int3
fild
xchg
add
sahf
adc
cmp
dec
mov
add
push
shr
addr16
and
inc
sub
push
cmp
cmp
add
div
jmp
cld
imul
push
cmp
mov
xchg
jle
mov
mov
nop
xor
adc
pop
pop
dec
push
add
jb
push
adc
bnd
hlt
pop
mov
mov
inc
xor
imul
push
xor
cli
inc
jle
mov
test
dec
rol
cmp
and
jmp
call
mov
inc
rol
pop
loop
jo
dec
pop
popf
mov
je
sbb
jmp
pop
(bad)
sub
popf
dec
mov
rcl
aaa
adc
and
mov
or
xchg
loop
loopne
test
push
mov
bound
test
cmp
add
cmovs
jecxz
xor
sbb
and
test
addr16
ja
or
(bad)
push
ss
shl
shl
push
or
or
sbb
call
xor
das
push
fimul
push
pop
mov
lahf
ins
ja
sbb
pop
test
and
neg
sub
jne
cs
mov
inc
hlt
shr
into
jmp
inc
daa
add
or
and
mov
and
cmp
test
cdq
shr
xchg
mov
mov
pop
lock
mov
adc
jne
adc
data16
dec
inc
jge
sbb
call
pop
pop
jp
and
in
pusha
hlt
jl
stos
xchg
pop
inc
je
push
jge
adc
data16
es
sbb
cwde
mov
xchg
jne
pop
pop
mov
ss
push
loopne
test
cmp
fist
(bad)
xchg
movs
pop
mov
test
les
ss
sub
das
push
movs
xor
(bad)
pop
retf
or
and
outs
inc
and
pop
mov
add
das
aad
add
xor
test
and
xor
inc
pusha
mov
cld
dec
mov
add
cmp
sub
adc
or
push
ror
scas
jbe
(bad)
or
push
lods
loop
or
out
fisttp
cs
pop
and
mov
cmp
mov
adc
and
mov
adc
mov
retf
add
xor
push
and
push
or
inc
cmc
add
pop
adc
icebp
push
mov
sbb
jne
add
adc
pop
add
adc
rol
js
add
sub
rol
(bad)
jl
ins
(bad)
mov
(bad)
ror
cs
nop
ror
or
test
sub
cmp
add
js
retf
sbb
and
and
pop
mov
loopne
jle
mov
ret
push
inc
jle
lods
push
imul
nop
push
fwait
inc
xor
movs
cmp
inc
in
imul
call
mov
jge
push
and
inc
and
mov
ret
xchg
mov
outs
out
push
add
cdq
cmps
data16
out
in
lea
mov
mov
call
adc
fcomip
xchg
xor
inc
add
add
movs
inc
mov
jp
and
add
fcomp
push
add
les
xor
cdq
push
push
(bad)
movs
xchg
adc
rcl
stos
push
rdtsc
push
fwait
movs
rcl
pop
shr
sbb
jp
shl
mov
xchg
inc
sbb
sbb
out
pop
retf
adc
(bad)
lock
mov
das
loopne
movs
xor
xor
scas
add
test
add
and
push
lea
out
mov
jl
leave
nop
push
push
jl
shl
or
xor
(bad)
shr
mov
in
xor
mov
sub
sti
(bad)
adc
mov
or
fs
shr
xchg
adc
jge
mov
sub
outs
hlt
add
xor
push
fild
jg
jae
add
jp
ret
test
mov
aam
daa
cmps
stc
pop
data16
iret
push
sub
loopne
and
sti
jle
loopne
js
push
sub
add
mov
sti
jg
in
in
or
not
test
push
not
or
pop
add
in
js
sub
sbb
and
and
xchg
mov
outs
and
ret
push
jg
jecxz
or
mov
push
fs
bound
or
ja
jg
and
sbb
jmp
or
mov
adc
retf
mov
or
cmp
leave
add
lock
add
lahf
enter
jmp
xchg
mov
dec
jmp
inc
jmp
in
cdq
cmp
push
call
jge
fidivr
daa
cmp
mov
jmp
add
jbe
lahf
mov
or
cdq
sub
data16
shl
sbb
or
inc
sub
sbb
cmp
push
cmps
imul
les
xor
enter
(bad)
adc
or
mov
add
xchg
ja
(bad)
addr16
ins
mov
movs
or
iret
xchg
sbb
xchg
dec
adc
and
cmp
mov
(bad)
cmp
add
(bad)
scas
rsm
and
xor
fimul
ds
or
jne
xor
cmp
ret
pop
pop
pop
mov
jg
clc
jnp
(bad)
push
push
or
pop
rcr
jo
leave
iret
push
das
push
xor
xchg
dec
enter
loop
inc
inc
adc
mov
retf
mov
mov
(bad)
or
mov
add
ins
mov
push
pushf
fnsave
xchg
xchg
into
jl
inc
xchg
int
mov
mov
stc
pop
fisttp
sub
inc
cmp
inc
(bad)
adc
mov
add
call
push
mov
push
jmp
not
js
sar
idiv
mov
and
cmp
jl
and
sub
add
mov
dec
mov
enter
sbb
sbb
jnp
dec
test
adc
inc
test
adc
int3
xlat
push
rol
xor
sub
inc
sub
sub
jp
movs
add
mov
dec
mov
fsubr
arpl
xchg
or
shl
xchg
jb
rcr
mov
cwde
pusha
loop
xor
hlt
icebp
sub
add
fimul
(bad)
(bad)
jg
data16
loopne
pop
add
pusha
or
ret
retf
(bad)
pop
je
push
cmp
add
adc
xchg
je
mov
and
jbe
sub
adc
jo
sub
jo
inc
xchg
push
mov
push
mov
or
lods
clc
aaa
sbb
or
and
leave
jl
hlt
mov
test
xchg
(bad)
adc
into
outs
pop
test
jae
sahf
(bad)
adc
das
sahf
mov
or
inc
adc
in
cmp
shr
data16
lock
cmp
mov
mov
fs
out
sbb
aaa
pushf
xchg
(bad)
sub
sbb
sti
mov
pop
data16
jb
je
dec
je
mov
fadd
call
or
adc
push
sub
test
push
ins
popa
mov
xchg
xchg
xchg
mov
popa
sbb
mov
pop
sahf
imul
pop
sbb
aaa
out
sub
or
jo
add
pop
adc
push
ret
pop
dec
dec
push
push
test
push
enter
pop
outs
xor
adc
iret
cmp
movs
xchg
push
xor
aam
test
rol
fdivr
rcl
mov
and
inc
adc
dec
and
imul
jge
movs
sbb
push
cmp
sub
test
adc
push
add
or
ret
out
jno
mov
loop
loopne
mov
mov
call
ins
push
adc
ss
jp
mov
add
push
ss
cmps
jo
or
fcomp
pop
push
les
pop
or
cmp
in
or
adc
pusha
(bad)
enter
out
pop
es
add
jg
(bad)
xor
mov
cmp
jle
or
jle
fild
xchg
cmps
mov
in
add
xchg
(bad)
xchg
push
in
(bad)
repnz
pop
mov
cmp
mov
enter
inc
ret
inc
mov
mov
push
add
mov
or
push
test
or
add
sbb
int
jmp
bound
(bad)
adc
xchg
mov
adc
scas
inc
ins
or
imul
cmp
je
ret
pop
adc
sbb
inc
sbb
xchg
cmp
or
aaa
hlt
jecxz
push
jns
pushf
sti
inc
les
add
or
jmp
mov
mov
mov
add
jne
mov
jmp
mov
push
adc
iret
sub
xchg
ror
xor
jmp
out
add
pushf
push
mov
jb
jl
sahf
scas
add
jp
cmps
inc
xor
add
test
add
add
scas
or
shr
sbb
jmp
add
aaa
mov
mov
stos
mov
push
cmps
or
bound
sub
mov
cmp
cmp
add
xor
adc
jmp
jne
fdivp
xchg
loope
test
dec
cmp
jmp
add
dec
cld
mov
push
push
xchg
cwde
test
test
rcl
hlt
push
ds
jmp
into
loopne
imul
ret
cmp
daa
lock
add
mov
movaps
es
call
pusha
and
aas
mov
sar
inc
into
add
pusha
xchg
mov
test
xor
sub
or
ins
les
in
pop
cmp
dec
add
(bad)
add
fild
add
mov
or
push
xchg
inc
sbb
push
mov
xor
jo
iret
lock
or
xchg
sub
push
xchg
push
push
lea
mov
aas
mov
ret
sub
or
mov
push
loopne
push
dec
push
mov
mov
mov
xchg
push
dec
pushf
jge
iret
repz
mov
mov
stc
sbb
cmp
outs
push
add
cmpps
and
jnp
and
adc
add
mov
(bad)
pop
ret
or
outs
jae
popa
outs
arpl
add
jle
dec
dec
je
pushf
jae
test
test
jb
jo
outs
sub
sub
popa
ins
test
add
sub
or
in
inc
add
jmp
loope
fiadd
xchg
aad
ret
lahf
into
inc
jne
add
jb
inc
jb
popa
je
add
sbb
fcom
add
gs
cbw
or
xchg
sub
or
or
or
push
xchg
pop
xor
inc
and
pop
or
mov
add
add
add
adc
push
dec
lock
inc
ins
outs
bound
push
gs
and
push
add
add
adc
outs
push
jae
ins
jbe
pop
add
lods
loopne
or
in
dec
imul
test
out
pop
comiss
pop
push
add
push
jns
gs
cs
sbb
popa
jae
(bad)
test
ja
outs
mov
add
pop
ins
(bad)
sub
xchg
ja
inc
push
ja
adc
lock
inc
push
xor
cmp
call
int3
add
shl
push
pop
lods
lahf
jg
inc
nop
push
out
dec
adc
push
inc
jb
popa
mov
cmp
cs
cmps
mov
or
add
push
cmp
mov
xchg
ins
dec
inc
ja
pop
test
mov
jmp
pop
xchg
push
fsubr
arpl
xchg
cmp
push
inc
outs
jne
pop
je
jb
not
arpl
add
dec
in
dec
outs
mov
dec
gs
fcmovne
xchg
add
pop
pop
lods
lds
adc
sbb
add
pop
shl
push
arpl
js
arpl
push
arpl
imul
inc
cs
inc
ror
xchg
pop
inc
jne
xor
sbb
dec
pop
in
das
or
and
or
jo
add
js
scas
pushf
push
popa
xor
xchg
push
add
ja
and
movs
or
inc
sub
cmp
or
pop
movs
sub
sub
or
out
cmp
rcl
xor
dec
ja
rol
pop
in
inc
sub
add
lahf
aaa
pop
loope
sub
scas
shl
inc
pop
and
dec
push
or
push
dec
imul
sub
inc
shl
das
leave
cdq
ins
mov
(bad)
(bad)
dec
xor
jo
dec
cs
and
jae
sbb
cld
mov
(bad)
push
popaw
jne
je
inc
cmp
mul
or
mov
dec
outs
or
inc
adc
fst
push
jne
or
bound
xor
jle
or
push
mov
adc
sar
or
add
aad
mov
pushf
fld
xor
pop
or
popf
push
scas
fucomi
shr
dec
pop
clc
das
sub
seta
mov
aas
mov
adc
or
(bad)
xor
mov
mov
sbb
outs
popa
cmp
ins
ja
xor
mov
adc
js
sbb
ins
adc
add
mov
inc
mov
dec
mov
ins
dec
adc
or
inc
inc
inc
pusha
and
add
sbb
fnstsw
sbb
hlt
ins
das
ror
shl
(bad)
lods
cmc
push
or
adc
imul
pop
and
retf
scas
add
and
mov
mov
es
add
aaa
push
mov
mov
sub
sub
xor
pop
sbb
push
lods
jae
jbe
inc
shl
into
add
push
in
es
push
add
loopne
dec
adc
js
cmp
add
mov
sbb
cmp
les
popa
dec
pop
(bad)
lock
mov
push
in
sub
adc
push
pusha
(bad)
rol
jmp
cdq
xchg
pusha
xor
add
push
adc
push
push
cmp
pop
pop
test
add
out
adc
xchg
lods
adc
push
ins
cmp
mov
imul
push
fidiv
test
push
xor
dec
cmp
cli
outs
out
mov
cmp
push
lods
push
push
or
not
or
js
push
sbb
ret
ret
shl
clc
(bad)
repz
sub
jecxz
in
mov
adc
push
or
in
mov
or
or
shr
jno
push
sub
push
push
cmp
cmp
adc
pushf
pushf
mov
sbb
dec
dec
dec
inc
push
xchg
pop
pop
daa
daa
daa
and
aad
xchg
xchg
xchg
xchg
pop
mov
sar
xor
fs
leave
mov
adc
cmp
repnz
outs
mov
out
test
xchg
inc
inc
adc
and
mov
dec
in
imul
cmp
ror
cmp
data16
dec
or
or
inc
push
add
shl
shr
jae
je
test
pop
daa
mov
mov
fst
push
dec
cmovns
jecxz
pcmpeqb
dec
jae
int3
push
adc
xchg
adc
push
popa
jg
jg
sub
add
dec
xor
in
add
add
fs
mov
mov
mov
ja
bound
hlt
sub
adc
push
stc
ins
out
hlt
add
add
or
mov
push
cdq
ja
aad
push
adc
test
inc
movs
movs
js
xor
dec
enter
add
add
adc
xchg
add
fs
or
dec
xchg
and
das
leave
fild
ror
ficom
not
arpl
pop
xor
xchg
or
aam
cmps
pop
loope
dec
jae
imul
xchg
and
or
aaa
cli
bound
in
ror
imul
mov
mov
mov
lea
ins
xor
enter
mov
inc
mov
les
jmp
seta
inc
js
jo
shl
or
sub
add
or
dec
cdq
or
or
lods
or
sbb
pop
xor
mov
fbstp
jl
dec
gs
and
mov
and
and
outs
sub
dec
popa
inc
xchg
inc
dec
popa
cs
or
add
push
jae
or
cli
jo
sar
dec
adc
inc
ins
push
push
icebp
jno
imul
aam
aam
dec
data16
imul
inc
ror
and
or
test
int3
sahf
adc
xor
and
inc
jge
sub
sti
(bad)
and
std
push
es
dec
ins
or
call
dec
or
sbb
sub
adc
stos
rcl
fwait
stos
popa
pop
xchg
or
inc
or
ds
aaa
adc
mov
push
jb
ins
test
cmp
push
cmp
ret
or
pusha
mov
dec
popf
pusha
mov
bound
sub
das
mov
(bad)
fdiv
jle
pop
and
inc
retf
mov
imul
test
and
and
in
mov
add
xchg
and
mov
mov
test
sub
test
pop
or
push
jmp
pop
push
xor
imul
add
mov
cwde
fwait
adc
xor
ret
cmps
(bad)
cmps
(bad)
pop
ret
imul
je
mov
add
(bad)
fstp
sti
push
shr
sub
push
mov
sub
xor
pop
adc
pop
pop
cmp
imul
or
fsubr
sbb
sbb
and
dec
push
xchg
(bad)
out
fisubr
scas
mov
adc
xchg
adc
push
push
ror
push
scas
adc
mov
call
dec
xor
retf
cld
stos
add
and
pop
jecxz
cmp
pop
stos
jbe
adc
jo
jle
addr16
out
loop
ins
dec
xor
aaa
and
or
lods
adc
xor
int3
mov
sub
outs
ins
push
and
sub
xchg
push
xlat
mov
inc
daa
push
imul
cwde
fcomp
inc
add
or
cwde
or
dec
add
add
dec
add
inc
adc
push
inc
adc
or
inc
adc
adc
hlt
adc
xchg
loope
adc
mov
dec
(bad)
xor
dec
and
pop
mov
and
jle
xor
mov
inc
shl
dec
lock
movzx
test
je
sub
jne
or
fcomi
pop
adc
mov
sub
sar
scas
adc
retf
lea
lahf
rcl
(bad)
push
pushf
push
inc
sbb
jg
fwait
enter
clc
mov
mov
pop
fs
nop
mov
mov
inc
inc
cmp
pop
sbb
or
dec
dec
enter
je
mov
mov
cdq
inc
mov
add
push
aaa
in
push
or
mov
shl
clc
mov
popa
xchg
inc
add
pushf
push
and
xchg
data16
pop
or
stc
lock
sbb
femms
mov
xor
(bad)
adc
jno
and
mov
je
or
push
push
jo
fmul
sti
ds
pop
or
cmp
cmp
add
div
xchg
push
sub
sar
xor
in
mov
int3
rcl
es
sub
cld
fistp
mov
jmp
lods
cld
or
fldenv
sub
jmp
mov
ins
(bad)
push
sti
js
sete
cmp
mov
aas
loopne
and
or
sub
add
test
hlt
xchg
nop
xor
xor
js
and
pop
inc
clc
dec
mov
sub
mov
in
icebp
add
dec
dec
add
fnsave
fsubr
add
das
inc
push
xchg
pusha
push
out
sub
cli
and
sbb
or
and
xchg
and
jl
inc
cmps
xor
mov
outs
cmp
je
xchg
mov
inc
cs
push
or
aas
or
xchg
and
mov
js
(bad)
or
adc
or
fadd
shl
pusha
fwait
cmp
xor
gs
xlat
cmp
mov
mov
mov
mov
pop
ret
movs
test
cld
dec
retf
jecxz
das
xchg
xor
dec
push
fild
(bad)
mov
inc
pushf
xor
adc
mov
push
hlt
fdivp
test
inc
out
jecxz
sub
pop
test
jne
sub
xchg
cmp
push
bound
fcmovnu
(bad)
add
mov
call
jmp
cmps
imul
jmp
sbb
(bad)
call
shl
jmp
push
cmp
(bad)
mov
ja
jl
push
aaa
movs
jecxz
in
push
or
idiv
rol
sub
mov
rcl
or
mov
adc
ins
mov
das
push
and
jne
mov
push
mov
cmp
fild
push
cmp
dec
and
inc
sbb
adc
push
sbb
push
sub
cmp
mov
sub
mov
adc
mov
mov
shl
leave
push
lods
and
movs
cmp
imul
sbb
jecxz
aad
out
inc
or
xchg
jne
test
jne
mov
sub
adc
sub
cmp
adc
adc
dec
jmp
push
push
popa
xorps
adc
call
xchg
cmps
inc
add
jmp
dec
shl
cmps
push
mov
jo
mov
push
mov
mov
bound
and
rcl
adc
adc
jno
movhps
retf
pushf
inc
rol
push
dec
jle
pop
and
lock
mov
push
je
cli
xchg
(bad)
in
idiv
mov
mov
push
push
or
in
push
fstp
push
pop
outs
push
test
mov
pop
jae
or
mov
(bad)
lock
push
clc
inc
jo
fcom
sub
cdq
push
push
add
mov
mov
sahf
cld
and
or
test
jle
xchg
jo
jle
ja
adc
je
dec
jo
daa
in
jge
mov
lea
push
pushf
xchg
cwde
inc
or
repz
push
pusha
add
lds
das
xchg
adc
jle
add
jo
outs
push
adc
push
mov
mov
dec
push
scas
shr
je
mov
xlat
adc
fsub
js
arpl
dec
loope
std
push
mov
mov
ja
cmc
shr
xor
push
fisttp
ret
mov
push
and
fdiv
xor
clc
dec
and
scas
sbb
xlat
push
xchg
adc
push
xlat
mov
lds
adc
sbb
stos
mov
dec
adc
push
(bad)
loopne
loope
add
mov
push
inc
retf
jmp
pusha
movzx
xor
mov
scas
(bad)
mov
inc
jne
pusha
jnp
jg
adc
shr
mov
fdiv
in
js
mov
cmp
xchg
inc
not
push
fcmovnu
and
rol
sahf
inc
jmp
(bad)
and
xor
fidivr
outs
adc
sbb
or
lods
cmp
jp
es
cmp
jae
ins
(bad)
test
pusha
ror
push
mov
mov
sbb
push
lea
or
into
ret
mov
data16
test
cmp
pop
add
or
lods
xchg
jg
pop
add
pop
mov
push
sub
adc
push
add
mov
stos
in
loope
jne
mov
stos
cmp
pop
sbb
sar
ds
mov
pop
ins
dec
fadd
fiadd
add
cmp
push
cmp
dec
xor
sbb
or
rcr
mov
jno
push
add
cmp
mov
and
mov
vmovupd
ja
clc
int3
ret
ret
jp
adc
push
push
outs
mov
xor
push
js
outs
pop
mov
aas
mov
push
je
sub
mov
cdq
call
sbb
aaa
adc
or
lock
mov
pop
mov
les
shl
adc
out
ja
pop
push
bound
sbb
dec
and
loopne
add
cmp
or
leave
(bad)
stos
jmp
mov
dec
mov
push
inc
xor
mov
idiv
loopne
mov
inc
dec
jne
and
push
cmp
fbstp
enter
jb
cmp
jmp
mov
push
test
dec
pop
cmp
ret
shr
inc
(bad)
in
push
sar
daa
mov
push
xchg
mov
sbb
add
ret
xor
loopne
pop
xor
nop
cmp
mov
mov
jo
inc
or
clc
jmp
aam
popa
ja
sbb
xor
sub
sub
sub
iret
(bad)
jnp
pop
scas
test
ficomp
cld
sub
sti
ret
mov
cwde
pop
push
push
mov
mov
mov
in
test
jle
mov
shr
enter
sub
fistp
aam
ins
fisttp
add
retf
sbb
test
pop
add
sub
je
lds
pop
push
loopne
pop
push
adc
mov
inc
mov
dec
xchg
sub
movs
fiadd
nop
in
sbb
lea
or
mov
jnp
shr
pop
clc
in
mov
fsubr
mov
adc
mov
sub
sbb
in
and
jmp
das
inc
imul
aam
inc
or
(bad)
ret
fisttp
cmp
shl
jge
fisttp
pop
in
mov
add
push
and
mov
mov
sub
sub
je
ret
add
mov
inc
or
out
pusha
test
sub
ret
fs
adc
rcl
and
in
mov
into
push
dec
in
xchg
sbb
push
test
jle
add
sbb
lods
cmp
in
cmp
mov
jg
cmp
clc
sub
jae
cmp
and
xchg
ja
and
jns
pusha
adc
(bad)
jp
je
dec
inc
jo
cmp
movzx
adc
jne
stos
mov
mov
movs
sub
nop
mov
loopne
cmp
loop
pop
test
dec
lods
or
fs
sbb
loopne
mov
(bad)
sub
je
imul
test
ins
mov
(bad)
xor
std
adc
in
cmp
and
pop
out
out
inc
or
pop
and
pop
lock
pop
loope
hlt
or
push
push
movs
gs
cmp
jle
shl
dec
add
(bad)
shl
adc
xor
add
fdiv
adc
movs
push
jbe
adc
adc
rol
dec
pop
cmp
sub
push
push
pop
lock
fisttp
sti
mov
test
je
fistp
scas
sub
jge
fsubrp
aas
inc
push
sub
sar
mov
dec
in
in
mov
fdiv
ds
inc
cdq
mov
inc
dec
fwait
loopne
(bad)
jne
xchg
mov
data16
dec
sub
ss
or
dec
push
int
cwde
cmps
mov
or
or
call
jb
imul
shl
outs
cs
push
inc
jmp
sub
mov
inc
test
push
mov
jmp
pop
cmp
or
aam
pop
jmp
pop
sub
bound
sub
cwde
xchg
jge
pop
(bad)
cmp
jae
adc
sub
(bad)
sub
mov
pop
inc
ins
jmp
push
push
in
add
or
push
xor
push
dec
mov
inc
jb
sbb
clc
in
es
std
in
pop
add
or
mov
call
xor
popa
stos
cli
jno
call
dec
sub
into
mov
sbb
loopne
mov
adc
xor
inc
or
adc
shr
pop
add
pop
idiv
(bad)
jg
arpl
cwde
fimul
mov
inc
nop
and
mov
mov
or
pop
mov
sub
loop
mov
fs
inc
sbb
dec
jmp
inc
pop
clc
push
xor
(bad)
adc
ins
push
or
jne
mov
loop
test
inc
aas
sub
sbb
push
mov
and
adc
xor
in
icebp
lock
shl
push
(bad)
adc
sbb
inc
sub
retf
mov
inc
adc
stos
adc
fimul
loopne
cld
data16
or
lea
xor
sub
jbe
outs
ins
ja
xor
int3
xor
je
adc
xchg
jecxz
lods
dec
xchg
xor
jmp
inc
xor
fs
jmp
scas
mov
add
je
imul
dec
lea
out
push
cmp
mov
ds
pop
jle
cld
pop
lahf
jne
adc
push
or
fsub
js
ss
int3
sbb
clc
push
sbb
xchg
std
sbb
mov
std
push
aaa
in
push
adc
loop
mov
out
cmp
ja
sbb
fisttp
jne
dec
cmp
xor
mov
add
and
dec
dec
jmp
xor
mov
mov
xlat
sbb
inc
mov
nop
mov
out
pop
aad
or
out
mov
or
inc
in
fcom
clc
jbe
adc
cmovl
adc
add
adc
xor
ror
shr
xor
test
out
dec
pusha
mov
mov
inc
and
inc
xor
out
or
add
adc
js
movs
sbb
dec
arpl
sub
inc
inc
iret
out
or
test
out
bswap
inc
add
mov
pop
repnz
sub
lock
nop
adc
out
dec
sti
or
fwait
fwait
aaa
fs
ja
mov
in
aaa
cmp
imul
jge
pusha
cmp
fsubr
out
mov
in
push
cdq
int
xor
cli
adc
pusha
aam
(bad)
outs
es
pop
test
push
aam
or
iret
mov
pop
xchg
jmp
in
pop
imul
fld
pop
inc
lea
push
retf
sub
outs
adc
js
sbb
inc
mov
fild
mov
xchg
mov
mov
dec
xchg
add
fld
call
lea
sti
(bad)
daa
add
push
cmp
mov
xor
adc
adc
or
xchg
ffreep
fistp
mov
arpl
or
mov
mov
or
sbb
push
dec
imul
pusha
add
cmp
cmp
lds
add
xlat
and
cmp
ja
add
xchg
shr
inc
loopne
aas
ds
jnp
daa
and
dec
jo
sub
add
clc
jns
lea
icebp
dec
inc
pushf
test
ss
in
add
xor
test
pusha
test
test
ss
mov
push
outs
clc
push
pop
or
add
fist
jo
cmp
sbb
xchg
cmp
and
adc
xor
push
jge
sbb
arpl
add
stos
lahf
inc
add
ins
add
add
push
frstor
in
push
ret
das
push
outs
add
mov
fcomp
dec
push
sub
(bad)
xchg
jmp
je
dec
je
push
ss
push
xchg
mov
sub
adc
imul
test
lds
jne
in
lea
adc
daa
sbb
fcomp
test
adc
rcl
pop
adc
outs
pop
loope
jecxz
popf
stc
mov
test
mov
mov
fs
lea
test
mov
pop
or
cmp
es
enter
mov
loope
mov
or
fst
arpl
dec
cdq
xor
mov
pushf
dec
pop
jmp
aad
imul
loopne
mov
nop
push
adc
sbb
adc
call
inc
scas
inc
hlt
add
adc
stos
fcom
add
jecxz
adc
lea
mov
pop
adc
inc
loopne
dec
jge
mov
or
xchg
loopne
loopne
ins
jo
leave
out
jmp
out
mov
fdivr
ds
and
dec
add
xchg
jns
xor
mov
add
fdivr
nop
xchg
or
std
push
fsubr
add
repz
stos
add
ins
loopne
and
ds
add
pop
loopne
movs
push
data16
pusha
out
jl
cmp
adc
adc
add
add
pusha
push
stos
mov
dec
popa
jno
(bad)
cmp
jbe
and
and
call
cmp
call
inc
test
jo
loop
pop
dec
add
cmp
inc
(bad)
(bad)
push
iret
sub
or
sbb
mov
in
inc
sub
mov
xchg
aad
out
inc
adc
xor
outs
cmps
sub
jno
jmp
jnp
sbb
and
push
sbb
pusha
sub
pop
dec
push
jae
pop
jnp
cmp
mov
push
jb
outs
cmp
jno
sbb
(bad)
and
shl
push
setae
rol
call
jmp
test
cld
or
mov
(bad)
call
mov
test
and
add
mov
mov
rol
push
push
es
adc
dec
aam
inc
push
sbb
icebp
pop
fwait
mov
loope
mov
push
add
pop
xor
out
js
or
sub
sub
pop
cmp
fstp
push
aaa
jmp
nop
outs
test
(bad)
ds
jne
sbb
sub
aad
xchg
mov
add
add
jge
adc
mov
lods
sub
inc
inc
push
cld
dec
cwde
xor
inc
push
sub
mov
(bad)
rcl
mov
repz
mov
add
mov
push
xchg
push
and
sub
ret
add
lods
add
add
dec
adc
je
sahf
push
or
(bad)
adc
dec
xor
fld
cld
jne
mov
sbb
mov
cmp
packssdw
sahf
fdiv
loopne
sahf
out
ffreep
push
add
push
pop
pop
jns
pop
out
jns
pop
ds
daa
xchg
push
mov
push
addr16
fld
pop
mov
xchg
dec
push
mov
mov
xor
les
je
scas
sbb
imul
xor
and
cmp
movs
imul
adc
retf
fdiv
es
push
fdiv
jns
sar
mov
cmp
add
int
cmp
lock
data16
jge
mov
inc
xor
je
and
call
push
inc
sbb
fisttp
cli
or
pusha
movs
pushw
pop
rcl
and
adc
jnp
ins
ret
loop
pop
fild
fwait
stos
dec
or
add
ja
movs
fwait
outs
mov
mov
nop
mov
xchg
mov
inc
xor
jge
pop
aaa
jbe
imul
add
in
les
push
outs
ins
dec
and
cld
sti
rcl
pop
dec
add
add
cmps
pop
je
jmp
ret
ror
in
clc
call
dec
test
inc
push
jge
(bad)
cwde
adc
jno
or
pop
lock
call
jl
add
mov
pop
in
and
sahf
pop
or
ror
dec
shl
fcomp
inc
xchg
push
aad
in
nop
mov
jns
dec
hlt
pop
outs
dec
jae
pop
dec
outs
sbb
scas
inc
aam
pop
jge
jno
xchg
adc
movs
sub
mov
add
and
xor
push
push
or
jne
ficom
xor
xchg
jne
outs
sbb
cmps
or
sub
mov
mov
lar
inc
rol
jne
mov
mov
lds
xor
jmp
in
mov
push
enter
or
movaps
mov
outs
or
rcr
push
loope
dec
rcr
jns
push
cmp
xor
adc
cmp
mov
fs
sbb
mov
dec
adc
aas
pop
leave
adc
add
xor
adc
mov
and
inc
mov
pusha
sub
or
xchg
aaa
cmp
dec
jne
push
mov
add
aad
cs
pop
iret
sbb
fisttp
push
adc
jmp
test
push
push
jecxz
adc
jp
ins
cmp
sbb
pop
arpl
push
push
int
xor
or
mov
add
imul
in
out
cmp
pusha
shl
loopne
ret
(bad)
fiadd
dec
inc
dec
add
xchg
pusha
ins
and
and
cmp
in
adc
cmpps
xor
int
jmp
inc
cmp
pop
mov
pop
ja
bts
jmp
jecxz
mov
sbb
movs
sbb
adc
mov
push
out
call
loopne
mov
push
loopne
jmp
add
cmp
rcl
je
mov
ja
pusha
adc
popfw
sub
or
fwait
jmp
push
jmp
inc
call
adc
mov
xchg
cmp
cmps
jmp
mov
pop
inc
sub
je
je
inc
xchg
mov
je
sbb
dec
jl
cs
add
jo
inc
std
test
rol
or
push
mov
or
xor
into
add
fldcw
movs
fwait
shl
cmp
cmps
xchg
adc
jge
leave
xchg
pushf
or
dec
sbb
cmp
retf
xchg
sbb
repnz
inc
or
arpl
mov
in
push
fst
rcr
dec
or
ret
or
xor
dec
push
and
daa
sbb
add
outs
aam
add
mov
outs
jne
mov
rcr
sbb
mov
mov
add
popa
add
pop
mov
jb
mov
add
sub
adc
imul
dec
sub
movs
rcl
out
(bad)
std
jg
dec
nop
dec
sbb
mov
sub
add
mov
xchg
mov
jl
cdq
jne
ret
(bad)
dec
lods
mov
ja
lea
dec
xor
repnz
rol
inc
push
fs
outs
out
jne
aas
pop
cwde
push
test
out
jns
test
test
mov
sub
jl
nop
loopne
xchg
les
rcl
out
dec
(bad)
and
or
dec
and
and
pop
inc
test
jge
rcr
in
rol
xor
adc
sahf
cli
pusha
retf
jmp
mov
fwait
nop
inc
cmp
sbb
ror
loope
sbb
lock
lea
(bad)
or
or
je
xchg
mov
inc
mov
in
push
adc
adc
cld
mov
jnp
push
sub
dec
dec
rol
jge
xchg
jp
ret
cmp
adc
or
out
jmp
mov
cmp
mov
pop
add
cmp
add
or
loopne
scas
lahf
jbe
fisttp
sbb
pop
jmp
cmp
jmp
cmp
shl
test
je
aad
sar
sar
test
jnp
add
rol
mov
xchg
inc
pop
mov
pop
cmp
or
adc
int3
mov
pop
xor
inc
push
and
pop
test
rcl
push
pop
inc
jns
push
not
cmp
pop
xor
into
cmp
add
mov
mov
cmp
adc
add
les
adc
fwait
adc
inc
sbb
inc
sbb
inc
ja
and
sbb
jp
or
nop
imul
ins
scas
push
pop
pushf
mov
or
out
lock
or
(bad)
adc
test
and
sbb
push
out
out
pop
test
jle
cmp
or
ds
test
data16
ja
fwait
bound
cmp
adc
add
sub
or
stc
in
xchg
dec
pop
sub
jl
mov
lods
test
add
inc
enter
and
jo
sub
lock
addr16
pop
nop
mov
dec
call
aam
jnp
hlt
adc
xor
pusha
add
or
shl
dec
ror
and
ins
dec
adc
lock
in
cli
push
cdq
add
sbb
mov
enter
mov
add
mov
add
mov
movzx
mov
add
sbb
push
adc
stos
(bad)
clc
popf
pop
loope
adc
iret
cmp
nop
(bad)
fisubr
add
hlt
das
pop
cld
dec
call
or
inc
pop
sub
aas
sbb
xor
pop
mov
push
popa
sbb
mov
pop
pop
jo
call
dec
xchg
dec
cmps
push
loope
inc
fnstsw
push
clc
adc
je
das
mov
pop
mov
push
dec
xchg
fcomi
cmp
mov
(bad)
shr
je
xchg
cmp
add
xor
loopne
scas
ror
mov
retf
rol
cmp
xor
lds
sub
dec
mov
dec
inc
inc
cmps
out
daa
nop
mov
and
mov
out
xchg
or
xlat
jl
xor
xchg
lock
js
ins
jmp
and
daa
imul
and
sete
lea
jmp
push
mov
mov
sub
jmp
adc
popf
push
cmp
or
xchg
in
mov
jecxz
scas
iret
jne
in
jo
out
dec
loopne
adc
mov
cld
and
xor
test
adc
push
push
inc
inc
dec
(bad)
mov
fadd
inc
dec
dec
scas
punpcklbw
fisub
test
je
call
aas
(bad)
pop
xor
mov
dec
or
push
or
ret
fst
adc
jne
sub
jbe
ret
mov
ds
adc
out
and
add
or
pusha
call
cmp
movs
push
mov
movs
mov
cmp
fmulp
adc
add
mov
add
sbb
pop
push
add
adc
outs
or
rol
mov
scas
lods
(bad)
clc
sbb
cmp
jg
dec
add
cmp
jle
ret
in
sbb
fstp
mov
jae
xchg
push
xor
sub
aas
mov
push
push
mov
loope
scas
pop
xchg
in
test
jle
mov
sub
test
jne
sub
push
jg
mov
mov
add
out
(bad)
test
retf
inc
pop
test
push
add
sub
ins
jg
pop
pop
add
(bad)
gs
pop
clc
adc
nop
scas
push
arpl
cwde
mov
int
enter
cdq
jo
addr16
adc
or
jo
sbb
jno
jno
pop
push
inc
ss
mov
pop
pop
outs
pop
cmp
(bad)
clc
inc
inc
sbb
ins
lea
mov
pop
iret
push
push
popf
dec
cmp
mov
mov
or
stos
idiv
pushf
shl
lea
dec
inc
cmp
jle
sub
ret
pop
dec
sub
inc
ins
sub
mov
(bad)
jmp
push
fiadd
out
jb
dec
xor
arpl
jne
sub
test
jg
imul
in
loopne
loopne
adc
loopne
(bad)
jge
inc
and
mov
or
and
add
pop
add
dec
add
add
mov
cmps
cmp
or
pop
nop
fldcw
fsub
fcomp
(bad)
sub
or
or
pop
sar
mov
loop
sar
jne
jle
push
mov
mov
enter
sbb
outs
xor
add
(bad)
test
ror
adc
in
adc
dec
jg
fmul
pop
jmp
in
ret
or
in
nop
push
sub
out
shr
cmp
push
mov
bound
adc
or
pop
int
mov
prefetcht2
mov
popf
and
das
inc
mov
push
push
mov
out
push
ficom
inc
test
sahf
jp
adc
fwait
xchg
push
add
adc
mov
lock
mov
sub
imul
cld
inc
rol
imul
jne
pop
xor
sub
in
push
fdiv
out
xor
hlt
aas
mov
nop
adc
sbb
lea
cs
xchg
cmp
fidiv
mov
ins
out
shr
push
sub
push
jmp
inc
mov
into
add
js
mov
xchg
shl
cdq
pop
xor
(bad)
mov
pop
stos
and
movs
test
or
popf
aas
mov
adc
jo
sbb
adc
mov
push
clc
push
push
inc
xor
ds
test
cmps
rcl
ins
pop
popa
pop
push
hlt
sti
inc
dec
jne
cmps
cmp
adc
add
hlt
loop
loope
dec
pop
call
data16
cmp
and
add
sub
cmp
fsub
in
out
shr
mov
xor
call
push
fadd
or
push
retf
cs
add
pusha
sbb
mov
ja
add
xchg
push
mov
pop
shl
sub
rol
xchg
push
inc
imul
enter
sbb
push
mov
stos
jle
or
inc
inc
retf
imul
adc
dec
popa
call
or
lock
bswap
sub
push
add
cmp
inc
fild
jle
dec
jbe
add
push
mov
pushf
sbb
adc
mov
pop
and
scas
jecxz
or
adc
or
adc
add
push
outs
fsubr
or
pop
xor
lock
js
popa
or
jge
inc
sbb
push
xor
shl
add
sub
cmp
jne
dec
cmp
push
sar
push
add
mov
cmp
inc
bound
in
push
xchg
stos
cmp
jne
push
or
ret
sub
mov
call
shl
les
xchg
jae
xor
push
and
pop
adc
stos
dec
stos
shr
pop
push
xchg
dec
jge
sub
push
adc
mov
jo
arpl
ds
lds
add
add
push
jl
adc
xlat
or
ret
in
pop
fld
sbb
add
test
mov
and
cmc
fs
xor
push
or
inc
ror
pop
or
pop
mov
or
std
ror
pop
loop
ins
inc
aas
or
add
sbb
cwde
pop
rol
mov
sbb
push
outs
jo
pop
xchg
lock
mov
shl
sbb
(bad)
adc
sti
test
xlat
adc
ins
cmps
loope
jne
and
sbb
div
mov
sbb
xchg
jne
cmp
daa
fiadd
fdivr
pop
cs
xchg
mov
inc
les
cmp
add
pop
mov
push
pcmpgtd
xchg
adc
or
out
nop
or
arpl
daa
cmova
and
inc
push
and
sbb
mov
push
add
mov
imul
int
imul
enter
or
adc
push
imul
sti
lods
mov
add
les
sbb
mov
fcomp
imul
mov
daa
sahf
add
jp
mov
in
or
and
jnp
push
out
push
mov
jnp
xchg
cwde
xor
xlat
scas
jle
inc
jg
ins
ficom
jle
dec
js
dec
push
fs
cwde
lods
(bad)
jp
loopne
dec
jns
mov
mov
lods
jmp
inc
add
and
xor
das
aam
loopne
rcl
sub
sbb
adc
add
outs
hlt
sub
popf
cli
(bad)
and
mov
data16
jecxz
jl
or
sbb
cmc
mov
mov
and
in
fstp
and
(bad)
jg
jg
mov
push
sub
xor
push
push
jmp
mov
xor
rcl
lods
adc
loope
inc
push
sbb
cmp
add
mov
and
jg
adc
std
popf
and
call
mov
sbb
mov
mov
daa
inc
nop
retf
in
push
lahf
jne
cmps
icebp
mov
lahf
movs
add
jae
or
mov
lea
or
ret
pandn
dec
cmp
or
jo
outs
aam
add
int3
aas
arpl
adc
mov
xchg
mov
add
add
pop
fsubr
rol
xchg
push
sub
inc
inc
add
xchg
pop
stos
mov
pop
jp
hlt
fsubr
xor
iret
test
ficomp
int
xor
mov
mov
jmp
test
mov
fadd
rol
lea
dec
sbb
lods
jmp
jmp
inc
rcl
test
pushf
or
and
pop
shl
sub
xor
jl
jo
aam
mov
and
cmp
inc
adc
push
sbb
ins
js
sbb
lods
add
or
or
scas
or
inc
push
and
cmps
ror
repz
jno
or
push
sub
ss
sbb
pop
or
movzx
pushf
add
iret
sti
sbb
jbe
mov
lea
cmp
push
xor
iret
sahf
out
xor
pop
xor
push
ja
jbe
fisub
add
sbb
ret
icebp
pop
inc
or
mov
lea
hlt
mov
cmp
pop
push
pop
scas
shufps
mov
fcom
dec
arpl
test
or
xchg
or
(bad)
(bad)
sbb
mov
dec
cmp
push
ror
push
ret
dec
push
mov
lea
jo
std
and
clc
cmp
fist
mov
xchg
push
or
add
(bad)
jmp
or
add
retf
test
cmp
mov
pushf
sbb
dec
(bad)
jp
mov
cmp
mov
jno
xchg
repnz
lahf
jb
mov
add
out
mov
xchg
cmp
jne
adc
pop
ret
mov
push
adc
xchg
or
aam
add
ins
lock
or
mov
mov
mov
fsubr
jg
sub
inc
adc
bound
fs
push
out
imul
ds
xchg
mov
out
push
fcomp
(bad)
inc
push
bound
lods
lea
cmp
movs
sub
test
push
mov
arpl
sahf
mov
adc
xor
pop
out
sbb
stos
adc
(bad)
leave
into
cs
les
sbb
iret
adc
fdivr
push
lea
or
cld
or
jmp
in
sbb
add
(bad)
mov
or
in
in
in
or
(bad)
jo
sbb
push
mov
push
lods
xchg
xor
jge
dec
pop
sub
add
daa
leave
lds
push
and
repz
sbb
xchg
pop
and
rcl
nop
stos
fld
xor
cmp
mov
sub
rol
ins
inc
jmp
sub
div
xchg
pushf
pop
cmp
and
arpl
sbb
aad
loopne
mov
dec
fadd
dec
push
je
add
dec
xchg
inc
fidiv
adc
ret
cmp
pop
mov
xchg
adc
xor
retf
cwde
in
ret
ret
enter
daa
push
retf
adc
(bad)
sbb
jge
fwait
iret
pop
lods
add
loopne
fstp
ret
jmp
xchg
stos
inc
or
sub
loopne
add
call
lods
xlat
xchg
es
sar
js
js
ror
add
or
xchg
(bad)
in
in
int
fld1
fs
(bad)
call
add
or
inc
es
fistp
cmp
movs
sbb
dec
fldcw
pusha
(bad)
xchg
xor
dec
add
pushf
push
jle
cmp
jecxz
and
dec
adc
stc
or
or
out
iret
or
loopne
out
jbe
out
rol
jmp
and
mov
or
cmps
jmp
cmp
fwait
dec
out
pop
mov
inc
push
leave
addr16
pop
jno
leave
push
aam
sbb
inc
or
aas
js
cmp
pop
xor
leave
push
jns
mov
into
rol
lods
or
imul
mov
dec
mov
repz
or
movs
add
cmp
inc
push
jmp
sbb
mov
test
clc
pop
mov
mov
cld
mov
or
jecxz
aad
or
xchg
jle
addr16
xchg
pop
arpl
ficom
imul
or
push
iret
cmp
cmp
mov
push
daa
dec
cli
pop
jae
adc
xchg
(bad)
jne
xchg
cmp
jle
push
loopne
jl
inc
mov
out
mov
ds
and
and
dec
imul
aad
rcr
nop
xchg
gs
pop
push
sub
(bad)
hlt
hlt
scas
aas
pop
cli
jmp
bound
mov
xchg
dec
xor
test
jne
mov
scas
adc
mov
cmp
lods
push
add
rcr
or
rcl
sti
adc
ss
or
pop
sbb
inc
(bad)
int
dec
add
mov
fwait
shl
inc
sub
and
mov
or
repnz
adc
repnz
dec
xor
jp
ret
mov
lock
ret
xchg
inc
fistp
mov
sbb
fadd
ja
pusha
rol
out
mov
inc
xor
ror
adc
adc
test
inc
lods
(bad)
inc
pop
cmp
lea
push
in
mov
icebp
sbb
cmp
adc
jae
cwde
push
or
les
dec
out
les
mov
push
jl
jp
addr16
pop
add
pop
ss
mov
cmp
lock
mov
xor
clc
inc
sahf
lea
lahf
xchg
sar
loop
or
fld
addr16
pop
or
inc
push
sbb
adc
sar
ror
punpcklbw
fsubr
cwde
mov
and
and
or
bound
and
mov
sahf
mov
add
movs
adc
adc
inc
test
pop
loopne
mov
pusha
add
adc
loope
jo
mov
or
aaa
mov
adc
mov
mov
adc
and
mov
inc
neg
fimul
mov
fiadd
cmp
jne
in
imul
xlat
fiadd
ins
push
cmp
sub
clc
adc
xchg
mov
push
sbb
outs
pop
stos
or
add
add
add
or
add
out
scas
sbb
iret
xor
push
in
cmp
adc
sbb
cdq
gs
and
or
dec
adc
retf
pushf
adc
cmp
movs
sub
pop
movs
mov
adc
sbb
lahf
ins
ds
sbb
cmc
xor
add
adc
adc
cmp
jb
jmp
movs
lock
mov
jne
and
cmps
lods
xchg
jp
inc
sub
gs
sub
int
mov
or
ds
sub
std
arpl
mov
mov
sub
sahf
pop
ja
or
push
clc
bt
jae
pop
sar
repnz
add
clc
inc
cmp
jne
and
fcom
cwde
and
and
lods
es
das
jmp
cmp
and
cmp
test
pop
xor
call
clc
shr
or
inc
sbb
in
push
jb
dec
fist
lahf
inc
imul
jbe
sti
and
sub
mov
jno
jmp
aaa
(bad)
mov
shl
neg
dec
jbe
jbe
dec
push
sbb
loopne
mov
inc
pusha
jg
or
xchg
es
adc
(bad)
add
sub
test
push
mov
in
push
repnz
pop
in
aad
cmp
loope
pop
fdivr
lock
mov
dec
hlt
xchg
and
cmp
fistp
jle
adc
push
mov
clc
inc
fwait
sti
and
pop
jae
and
out
sub
in
mov
loopne
arpl
mov
mov
push
push
add
adc
out
cmp
mov
pop
jg
iret
fidiv
push
xor
dec
and
jle
xchg
and
out
(bad)
fisubr
mov
mov
mov
pop
out
adc
je
ret
or
mov
(bad)
mov
repnz
rol
inc
add
cmc
adc
movs
cmp
mov
dec
xchg
pop
mov
inc
add
inc
movs
sbb
(bad)
mov
xchg
(bad)
mov
inc
cmp
jne
sub
fild
je
cmp
cmp
pop
sbb
gs
or
ror
mov
lea
inc
cmps
add
dec
nop
push
(bad)
adc
mov
jo
push
pop
aaa
push
mov
push
push
rcl
call
out
sbb
push
cmp
mov
pop
es
add
or
mov
sbb
aaa
out
pop
sbb
jae
push
cwde
pop
aas
in
push
mov
mov
lea
dec
lods
adc
xchg
and
push
adc
mov
sbb
lds
bound
test
adc
mov
push
mov
mov
(bad)
mov
mov
push
test
iret
in
lock
add
adc
add
ja
sub
mov
dec
and
and
imul
inc
jbe
cmp
scas
in
mov
xor
sbb
or
sub
loope
cmp
das
xlat
hlt
mov
or
aam
pop
cmps
xor
inc
sbb
sbb
and
mov
sbb
and
jecxz
add
push
dec
xor
or
add
ficomp
jo
sbb
cmp
lds
mov
xchg
lods
jecxz
(bad)
jne
icebp
xor
mov
and
sbb
js
and
and
add
mov
sub
retf
push
push
stos
(bad)
fchs
or
outs
pop
sbb
rcr
sahf
outs
mov
or
dec
inc
pop
adc
push
sbb
pop
fs
sbb
push
adc
scas
pusha
pop
out
popa
or
sbb
inc
iret
pusha
dec
add
sbb
cmp
fild
jb
fwait
daa
test
lods
les
xor
fstp
mov
out
mov
sub
sahf
out
pop
leave
xor
leave
mov
xor
imul
cmp
add
adc
xchg
loop
inc
(bad)
int
dec
add
mov
push
or
dec
jl
rol
pushf
clc
dec
pop
rcr
inc
mov
out
or
push
jecxz
in
push
adc
inc
mov
repz
push
test
repz
mov
mov
movs
cmp
cmp
lods
sub
lods
xor
test
and
pop
mov
or
inc
jo
pop
stos
mov
sub
mov
mov
mov
add
movs
dec
shl
jl
add
iret
hlt
ret
mov
sbb
add
hlt
pop
mov
ret
mov
in
rol
push
mov
mov
out
add
dec
or
hlt
pop
jg
scas
and
rcl
adc
push
or
cld
inc
mov
jmp
es
movsx
push
cmp
jge
adc
je
or
jl
inc
out
in
sub
scas
mov
imul
sub
jmp
je
cmp
aaa
mov
sub
lods
mov
ret
sub
sbb
dec
or
scas
mov
dec
sbb
pop
fild
and
sub
in
call
pop
int3
fwait
push
aaa
nop
clc
lahf
adc
inc
fstp
mov
aam
adc
nop
fbstp
xchg
sbb
fsincos
pusha
outs
fstp
cmps
enter
and
in
or
push
or
sbb
addr16
test
rcr
add
jnp
stos
and
push
or
ds
or
test
cmp
or
inc
jbe
imul
lock
shr
test
xor
push
mov
ss
mov
outs
dec
in
sub
imul
test
mov
shl
dec
mov
mov
inc
mov
inc
cmp
cdq
imul
test
adc
loopne
pop
xchg
bound
test
and
(bad)
push
lock
jecxz
sub
and
mov
add
ins
xor
shl
and
mov
rcr
mov
xor
sti
push
dec
lea
jg
lahf
cmps
mov
mov
xor
sar
push
(bad)
shr
mov
rol
into
mov
mov
clc
call
inc
pop
sub
aas
sbb
xor
cmp
push
ret
into
mov
add
push
es
call
xchg
pop
fist
dec
xchg
jo
mov
or
pusha
clc
cwde
mov
mov
(bad)
push
xchg
call
adc
pop
cdq
call
cmp
jge
(bad)
xor
inc
(bad)
shl
push
mov
lock
js
clc
cmp
jbe
jb
push
jmp
jne
rcr
cld
pop
jb
mov
sub
mov
movs
sbb
ret
outs
cmp
gs
gs
xor
stos
cdq
jmp
rol
jnp
shl
mov
jns
adc
xchg
dec
cmp
add
mov
adc
add
prefetchw
or
push
and
or
or
ror
vmovups
ror
fcom
and
push
ret
push
ss
pop
sahf
jecxz
pop
push
mov
sbb
je
ins
jle
adc
mov
sub
lock
jl
xor
movzx
shr
mov
sti
or
pop
or
ja
data16
and
or
cmps
adc
cmps
sub
add
inc
dec
jne
jb
shl
test
jle
inc
push
add
data16
lahf
jbe
jb
adc
push
jb
out
inc
pop
cmp
cmp
cmp
add
out
fadd
shl
mov
add
sbb
(bad)
adc
inc
add
dec
(bad)
jg
mov
sub
add
mov
jb
jns
push
jns
je
ins
cs
ins
popa
jae
gs
xchg
gs
imul
sub
loopne
push
push
adc
outs
add
mov
sub
pop
enter
mov
dec
add
push
dec
sahf
out
ds
jge
mov
mov
mov
jp
je
outs
fcmovnu
inc
inc
push
add
xchg
hlt
jmp
daa
push
pop
or
inc
outs
jne
cmp
outs
jb
sub
pop
aaa
(bad)
in
int3
mov
out
dec
outs
jbe
dec
gs
call
pop
pop
or
or
cmp
call
add
lods
fnstenv
pop
sub
dec
inc
sub
imul
inc
outs
ins
ins
arpl
outs
jae
add
neg
add
loope
jle
sahf
pop
inc
jne
scas
fsubr
ret
add
xchg
pop
or
sub
sbb
loope
in
mov
mov
sbb
add
push
xchg
scas
ret
pop
mov
xchg
cmps
push
add
adc
cmps
bound
sbb
cmps
pop
inc
sub
jb
xor
fmul
sub
aam
or
mov
pop
xor
pop
push
outs
in
xchg
inc
mov
add
xchg
dec
inc
sub
bound
pop
gs
test
mov
add
out
cmps
(bad)
xchg
cmp
sub
stos
or
cmp
popa
pop
outs
push
aaa
leave
neg
cmps
inc
popa
pushf
(bad)
(bad)
dec
xor
pop
call
and
jae
or
bound
sbb
push
popaw
jne
idiv
ret
je
inc
or
cld
mov
push
outs
or
inc
adc
adc
adc
(bad)
pop
sbb
push
or
pop
or
or
pop
inc
movs
pop
mov
lock
xlat
sar
add
ss
add
inc
mov
fdivr
pop
adc
mov
mov
cmp
sub
bound
lahf
loope
xlat
xchg
cmps
shl
adc
lsl
into
push
add
sub
fsub
sub
dec
popa
outs
popa
addr16
addr16
in
nop
retf
sbb
pushf
popa
add
jo
jne
sar
lock
mov
or
cwde
shr
popa
ins
dec
sbb
or
and
push
adc
add
aaa
pusha
ss
int
mov
cli
mov
and
or
inc
imul
and
add
retf
or
inc
lods
scas
add
or
(bad)
adc
mov
lahf
fiadd
int3
(bad)
daa
dec
inc
dec
test
rcl
nop
jmp
das
push
add
je
inc
retf
mov
shr
rcr
fwait
mov
mov
sbb
inc
push
xor
(bad)
pop
push
add
push
inc
dec
mov
add
cmp
fiadd
or
shr
test
sub
xchg
inc
pop
mov
add
sub
shl
aam
mov
in
jge
or
or
add
mov
adc
ins
inc
add
ins
add
pop
pop
push
icebp
add
ret
and
into
shl
push
popa
sbb
xor
pop
add
push
dec
cmps
repnz
popa
iret
push
(bad)
into
das
mov
push
and
clc
outs
mov
mov
mov
push
mov
shl
xor
xor
inc
cwde
jmp
fadd
sbb
ret
xor
push
mov
imul
lods
pop
push
xor
dec
ins
ja
push
sub
pop
add
lods
(bad)
loopne
add
test
dec
cmp
or
or
fcomp
out
push
jle
push
inc
cs
mov
in
leave
leave
cmp
in
mov
and
jb
jle
push
jg
add
dec
sahf
pushf
pushf
pushf
xchg
mov
add
dec
dec
dec
inc
es
xchg
loopne
daa
and
fadd
pushf
cmp
(bad)
imul
pop
retf
ficom
test
fwait
pop
dec
xsavec
test
sbb
in
xor
xor
xor
js
dec
or
shl
inc
add
shr
jno
or
push
xchg
cmps
arpl
pop
add
shr
xor
or
and
outs
mov
mov
dec
enter
add
lods
pusha
mov
into
push
adc
or
inc
push
popa
jg
pop
xor
inc
jg
pusha
dec
cdq
in
iret
dec
xor
add
fs
std
inc
or
popa
ins
jne
dec
hlt
sahf
shl
or
clc
gs
imul
push
or
rcr
ins
call
cld
rcl
popf
shr
test
mov
adc
add
add
dec
mov
jae
cmc
or
ror
out
jns
pusha
add
enter
mov
xchg
fdiv
or
jo
adc
and
call
fdivr
and
add
popa
arpl
pop
inc
inc
push
xor
test
dec
jae
imul
xchg
add
imul
mov
mov
and
call
or
mov
push
inc
add
sbb
fsub
push
lea
aad
jns
retf
mov
push
inc
ret
jmp
ss
pop
inc
js
adc
mov
or
pop
mov
imul
add
dec
cdq
or
xchg
sar
xchg
pop
xor
std
xchg
arpl
(bad)
loopne
and
dec
gs
arpl
inc
inc
jae
push
in
inc
mov
inc
push
push
push
fcom
dec
adc
mov
push
cli
jo
sbb
dec
aaa
inc
jecxz
sub
push
imul
sub
fiadd
and
mov
mov
push
test
and
or
or
ja
daa
jae
int3
sahf
inc
ret
sub
movs
xor
adc
xchg
sbb
jge
sti
xor
adc
xor
int3
ss
inc
stos
jb
dec
or
xchg
mov
adc
dec
push
and
fcomp
inc
xchg
mov
push
push
dec
test
jmp
push
jb
ins
test
cmp
(bad)
shl
or
inc
movs
push
sbb
jmp
cmp
arpl
add
pop
and
inc
retf
cmp
and
ja
or
jno
or
mov
sub
pop
imul
scas
add
(bad)
mov
inc
in
or
sub
sub
sub
test
aad
(bad)
xor
xchg
jp
popa
push
arpl
jns
add
sbb
fdivr
bound
sbb
adc
outs
push
js
inc
ret
rol
(bad)
or
movs
cmp
fidivr
mov
mov
adc
clc
cli
ss
jge
ja
cs
push
enter
cli
into
add
jle
hlt
call
push
push
jl
(bad)
jmp
xor
hlt
add
pop
jne
rol
jns
xor
push
jg
add
push
jmp
loope
adc
add
add
mov
mov
mov
add
or
xor
ret
jg
mov
test
je
inc
jo
fs
or
les
js
bound
adc
and
or
es
and
pop
adc
je
(bad)
mov
and
jnp
cmp
or
inc
and
arpl
inc
movs
inc
push
or
(bad)
jo
repz
pop
movs
push
movs
or
leave
fwait
pop
ins
push
movs
add
push
mov
add
dec
fidiv
fsubr
sbb
pop
push
das
outs
push
ja
lahf
add
xchg
sbb
xchg
add
fiadd
daa
lahf
or
inc
cmp
push
xchg
push
add
jne
in
aaa
rol
sbb
pop
xor
fadd
mov
ss
cmp
inc
sub
das
push
sub
int
add
jmp
mov
sbb
scas
adc
dec
mov
outs
mov
add
mov
bound
movs
fabs
add
loopne
test
sub
add
rcl
inc
push
mov
(bad)
mov
mov
push
inc
daa
mov
loope
enter
frstor
dec
das
pushw
out
scas
and
mov
xor
punpckhbw
or
or
mov
pusha
add
push
dec
les
or
cmp
adc
loop
pop
add
or
and
dec
std
pop
test
dec
lahf
pop
push
push
or
lds
adc
and
mov
inc
mov
dec
push
jne
jo
sub
adc
in
rcr
cmp
in
xor
pop
das
jne
adc
add
jle
(bad)
add
aas
je
dec
add
aam
icebp
cmp
pop
xor
aam
adc
test
jnp
mov
int
jo
sar
pop
or
das
enter
sbb
ins
cmp
inc
or
and
mov
xor
pusha
mov
jne
or
sub
pmaxub
in
push
pop
sahf
push
out
sbb
push
jne
retf
out
lock
inc
jno
pop
js
out
mov
pop
or
inc
push
mov
daa
sub
jo
jno
push
adc
push
cwde
daa
xor
cwde
xor
adc
sub
daa
pop
dec
adc
jmp
test
psubsb
dec
adc
pop
cmp
push
es
add
jmp
jnp
inc
sahf
pushf
fmul
xchg
iret
or
dec
and
dec
cdq
out
jmp
xchg
daa
daa
daa
mov
paddsb
xchg
xchg
xchg
inc
pop
adc
leave
leave
leave
leave
pop
mov
fs
out
ss
mov
lock
push
jne
sbb
lods
cmc
aas
lock
add
jbe
cmp
pop
fimul
call
adc
es
xchg
lods
or
cmps
shl
aam
pusha
cmps
aam
fimul
pop
add
rol
jno
rcr
jae
push
loop
daa
push
fbld
loopne
mov
mov
add
fsubr
(bad)
pop
mov
imul
push
bound
pop
ins
push
xor
das
adc
ins
pop
add
sbb
and
cmps
ja
or
int
ja
mov
cmc
adc
pop
or
mov
or
adc
push
fwait
add
gs
and
add
pop
adc
push
or
mov
iret
inc
dec
xor
pop
jno
and
lods
pop
add
push
adc
inc
fadd
stc
add
cmp
jae
rol
inc
ret
sub
add
or
push
pop
jae
test
cmp
adc
sbb
sbb
lods
(bad)
or
pop
inc
mov
adc
es
pop
cmp
mov
pop
pop
(bad)
pusha
mov
rol
pop
dec
inc
mov
and
push
jae
rcl
rcr
or
and
xor
pop
jge
cwde
add
sti
xor
daa
and
pop
add
or
jns
es
inc
lea
add
movs
pusha
xchg
dec
jecxz
dec
rcr
xor
sub
mov
push
bound
stos
mov
fsubr
nop
imul
add
imul
push
dec
pop
xor
pop
and
or
jno
add
push
rcr
repnz
xor
pop
es
cs
sub
pop
cmp
mov
pop
inc
test
or
and
jne
pusha
xor
daa
icebp
adc
das
aaa
repz
adc
mov
push
mov
and
not
repz
push
and
imul
test
inc
inc
jne
ins
sahf
sti
(bad)
mov
mov
pop
clc
(bad)
or
(bad)
test
cmps
(bad)
dec
mov
push
mov
dec
xchg
mov
es
jecxz
xlat
mov
mov
lods
jo
push
or
dec
xor
gs
pop
mov
sub
js
mov
or
jo
xchg
fisttp
adc
pop
xor
das
fwait
les
adc
outs
cwde
outs
mov
cmps
sbb
inc
lock
outs
ins
push
xchg
adc
(bad)
sub
outs
dec
sbb
enter
call
jecxz
inc
repz
call
add
popf
std
push
mov
add
push
and
mov
sti
and
add
ret
mov
mov
pop
mov
mov
clc
cs
mov
push
push
push
push
xor
lock
in
mov
cmp
adc
pop
lock
stos
lock
xor
push
push
push
mov
mov
dec
test
jl
(bad)
jge
adc
(bad)
mov
inc
lods
movs
scas
inc
dec
jne
mov
pop
outs
jg
mov
pop
or
ret
jmp
in
jg
(bad)
jnp
push
pop
pop
pop
pop
pop
ret
adc
add
mov
sbb
fcomp
push
pop
add
test
jne
out
pop
ja
jl
cwde
dec
pushf
ret
pop
add
bound
cdq
push
add
or
inc
(bad)
ror
jle
xor
imul
jmp
out
mov
add
sub
push
dec
mov
clc
pusha
cmp
ins
js
inc
push
fs
xchg
stos
jle
mov
jmp
jmp
aas
or
adc
jge
xor
cmp
enter
clc
xor
popf
call
hlt
sub
bound
pop
pushf
hlt
mov
fbstp
sub
mov
add
mov
push
test
int3
ja
in
pusha
ja
rcl
loopne
and
and
icebp
xchg
mov
clc
mov
cmp
or
loopne
not
jmp
sbb
or
mov
(bad)
jl
push
lds
cmp
cmp
cmp
add
pushf
mov
adc
inc
adc
sbb
xchg
jp
mov
add
jo
push
jg
iret
or
js
or
dec
bound
push
xor
daa
pop
cmp
(bad)
xor
jmp
lds
cmps
inc
mov
push
pop
hlt
popa
jg
pop
sub
fbld
mov
lock
xor
mov
fimul
sbb
dec
rcl
xchg
sbb
mov
sub
or
or
push
xchg
cmp
lods
loop
out
mov
or
xchg
adc
cmp
out
scas
loope
dec
inc
scas
addr16
or
out
xor
pop
sahf
adc
fwait
adc
mov
fld
xchg
sbb
stos
inc
xor
div
pop
fisttp
add
push
mov
mov
mov
inc
cmp
in
xchg
out
enter
cmp
or
int3
push
push
jne
push
push
lea
push
mov
std
jmp
lock
test
jne
repnz
push
fwait
adc
clc
aam
push
inc
dec
sub
cwde
clc
adc
xchg
mov
jmp
cdq
mov
mov
push
clc
or
sbb
mov
dec
adc
sub
or
out
clc
and
sub
cmp
mov
adc
or
or
lock
(bad)
push
and
js
out
es
je
pop
mov
or
mov
clc
pop
jl
push
pop
mov
and
stc
push
outs
add
cmp
and
jo
les
inc
std
shl
xlat
call
loope
jge
in
or
ret
push
mov
sub
cmp
jle
ja
leave
mov
nop
pop
jp
dec
popa
adc
pop
clc
je
call
leave
in
lock
clc
or
pop
xchg
jo
(bad)
push
or
sbb
cmp
mov
inc
jge
mov
pusha
test
lock
xchg
mov
int
or
stos
call
or
sti
int3
add
inc
sbb
loop
or
mov
xchg
mov
push
mov
mov
mov
cmp
xchg
jo
dec
test
int3
sub
and
pop
div
stos
add
stos
ret
cmpxchg
xor
mov
mov
and
push
or
push
enter
mov
push
(bad)
aas
fadd
aas
or
je
cmp
or
cmp
inc
inc
add
or
mov
cmp
je
pushf
cld
mov
loopne
enter
dec
cld
outs
daa
inc
and
call
jo
mov
cli
mov
mov
clc
xor
xor
pusha
jbe
mov
in
lock
(bad)
jg
xchg
ret
mov
push
mov
pop
push
cmp
jne
or
rol
pop
jne
outs
push
(bad)
out
cmps
jbe
dec
adc
test
lahf
pop
mov
sbb
inc
popa
out
push
adc
or
xlat
shr
inc
inc
xchg
sti
mov
or
js
cmp
sub
add
jo
cmp
out
sti
cs
xor
sub
push
push
and
dec
cmp
or
fcomp
out
push
add
icebp
gs
jo
push
pop
cmp
cwde
adc
sub
or
repnz
or
lock
sub
jo
push
data16
inc
aaa
fsubr
mov
mov
push
loope
sub
ret
outs
in
retf
daa
inc
(bad)
lock
adc
dec
dec
shl
js
out
ins
mov
rcl
mov
dec
mov
leave
push
adc
cmp
cmp
or
inc
mov
cmp
daa
jne
mov
sub
out
mov
jl
jo
adc
jle
cmp
cmp
xchg
ins
xlat
mov
inc
or
pusha
inc
or
sub
inc
xor
movd
enter
ss
mov
mov
pusha
pop
pop
ret
push
stos
and
(bad)
enter
and
and
call
push
mov
mov
dec
cmp
mov
mov
loopne
inc
jnp
jne
test
je
pusha
(bad)
sbb
cmp
jne
cmp
movs
and
shr
call
sbb
(bad)
aas
ret
add
je
sbb
pop
jle
add
js
pop
pop
xchg
jbe
fsub
lock
dec
clc
sti
inc
sbb
mov
inc
sti
xchg
pop
call
enter
cmp
mov
setge
gs
out
lea
or
(bad)
jg
or
daa
in
mov
test
dec
jne
imul
hlt
pop
mov
mov
sub
dec
xor
add
jl
lock
xchg
frstor
push
push
je
inc
and
clc
mov
xor
lea
push
je
add
push
adc
mov
and
or
push
call
push
sub
dec
pop
sbb
jne
fimul
mov
test
jne
jmp
push
movs
add
adc
add
jae
and
pop
popa
mov
push
clc
mov
loop
adc
mov
add
dec
add
jl
les
inc
(bad)
mov
scas
pop
(bad)
into
mov
cmp
adc
dec
mov
and
gs
pop
test
fstp
out
push
mov
lods
adc
mov
mov
pop
dec
pop
mov
cld
add
out
loopne
data16
dec
lods
icebp
add
in
xor
jl
mov
in
add
push
loop
jecxz
xchg
fs
or
fcom
jo
mov
sub
jno
addr16
push
jecxz
out
add
and
mov
mov
add
inc
xor
mov
xlat
in
cmc
jbe
jmp
in
fs
test
repz
mov
adc
inc
add
sti
neg
loop
loope
and
call
int3
inc
jg
cmp
ins
nop
loopne
lods
push
dec
push
in
cmp
outs
mov
or
or
mov
jp
call
add
adc
push
cmp
ins
rol
push
adc
inc
dec
ins
adc
jp
hlt
jge
or
pop
aas
mov
jbe
ss
sbb
mov
cmovge
cmc
or
cwde
retf
mov
pusha
inc
jmp
sbb
sar
dec
loopne
shl
sbb
cmps
vpaddd
adc
(bad)
in
sbb
push
add
pop
aad
rcl
mul
cmp
jne
adc
mov
mov
jb
or
sub
push
push
mov
sbb
daa
jns
mul
movzx
addr16
mov
sbb
xchg
add
mov
aas
mov
fidivr
xor
push
or
js
loop
(bad)
rcr
(bad)
push
push
nop
mov
data16
sbb
mov
pop
add
push
(bad)
lds
clc
(bad)
mov
call
nop
push
xor
jo
mov
mov
sbb
(bad)
jne
add
xor
adc
fxch
test
add
mov
clc
pop
pop
pop
popf
fist
hlt
aaa
pushf
fisttp
fild
scas
enter
or
pusha
clc
dec
and
or
push
inc
in
mov
retf
add
and
ror
pusha
jp
push
(bad)
addr16
lds
sbb
cs
cwde
pop
sbb
cmp
test
pop
sbb
and
sbb
push
adc
sbb
or
push
mov
sub
aaa
mov
mov
push
fcomp
dec
hlt
mov
call
adc
mov
aam
outs
add
inc
xor
mov
sub
lock
jne
jmp
cs
js
adc
cmp
xchg
stos
icebp
je
push
into
jmp
mov
mov
push
pop
fist
je
xchg
sub
add
dec
push
inc
sub
push
inc
xor
mov
cmp
in
jns
shr
adc
or
sub
adc
mov
or
ds
and
dec
ds
call
jne
fcom
jl
pop
lea
fdiv
out
je
ror
cmp
dec
or
mov
sub
test
pop
stc
sub
jnp
dec
xor
dec
sub
push
adc
cmp
cmp
inc
jl
push
push
jge
cmc
or
pushf
xchg
pop
out
add
test
and
int3
push
mov
dec
pop
or
sub
lods
xchg
sar
imul
add
jo
nop
inc
(bad)
icebp
adc
push
mov
cwde
fiadd
mov
add
and
mov
add
lock
imul
clc
das
mov
dec
adc
add
sbb
out
fild
pop
int3
mov
aas
xchg
ret
aaa
not
ret
mov
inc
scas
pop
das
cmps
pop
jb
sbb
dec
movs
dec
add
bound
adc
xor
adc
pop
cmp
mov
pop
es
jne
mov
jmp
in
iret
push
and
inc
push
fild
sti
js
pop
mov
xor
add
test
jbe
dec
sar
and
cs
jo
xchg
jmp
mov
into
fcom
pop
mov
dec
inc
lds
gs
push
mov
fs
rol
sbb
in
ret
inc
pusha
xor
cmp
pop
pop
adc
data16
dec
loopne
fmul
push
sbb
outs
je
jo
jg
add
cmp
and
and
and
jmp
add
test
pushf
add
or
jae
add
xor
aad
mov
mov
inc
gs
jne
je
fdiv
leave
lock
add
and
xchg
ret
cmp
add
sub
push
repz
xchg
push
fwait
push
movs
test
pusha
sub
mov
lahf
xchg
pop
add
out
dec
add
add
es
mov
or
inc
add
loopne
cmp
push
or
add
ja
jo
loop
pop
and
fs
fsubr
fdivr
jle
sub
paddw
xor
and
jmp
dec
add
(bad)
daa
pushf
gs
add
cwde
mov
mov
jo
lgs
loope
cld
push
and
addr16
mov
inc
or
dec
pusha
dec
(bad)
pop
jo
fld
ret
push
mov
call
ds
sbb
mov
push
jo
lahf
pop
aad
sbb
pop
adc
imul
div
dec
add
push
fnstsw
loopne
or
cmp
(bad)
push
sbb
int3
outs
sbb
pop
cmp
push
cmp
in
xor
add
sbb
sbb
mov
push
out
sub
pop
push
idiv
mov
pushf
mov
ins
push
cmp
dec
(bad)
arpl
adc
dec
pop
dec
xor
dec
cmp
call
pop
lods
sub
pop
xchg
inc
aad
xor
pusha
jg
push
mov
jns
gs
jg
out
add
cs
xchg
cld
push
cmp
sbb
movhps
add
inc
push
mov
loopne
mov
push
gs
xor
xor
mov
shl
cmp
inc
or
or
(bad)
push
sub
nop
jbe
icebp
sbb
pop
ret
pop
mov
pop
mov
pop
ret
jo
inc
fcomp
xchg
es
das
les
(bad)
and
enter
jl
xor
(bad)
cmp
jne
mov
cdq
pushf
daa
dec
je
int3
mov
cmp
clc
cwde
ins
cmps
test
fbld
push
mov
mov
or
and
cmp
ins
shl
(bad)
js
dec
cmp
jl
lea
shr
and
mov
push
inc
xor
call
cmps
mov
test
jge
lea
jmp
mov
dec
push
lock
das
xchg
jle
mov
jmp
test
pop
xor
test
adc
lea
ss
lea
lock
cmp
xchg
dec
pushf
or
(bad)
loopne
inc
mov
dec
rol
fwait
dec
je
xor
(bad)
call
pushf
repnz
add
test
jne
mov
(bad)
enter
ret
mov
add
xchg
xbegin
(bad)
jmp
sbb
test
jg
add
pop
arpl
lea
mov
sbb
fs
sbb
or
xor
les
adc
mov
mov
inc
shl
jp
or
nop
or
or
or
lods
cwde
add
mov
cmc
into
mov
loopne
adc
and
xlat
push
adc
cmp
push
inc
adc
ss
test
jl
mov
out
mov
lea
mov
push
dec
cmp
inc
xlat
or
mov
cmovnp
adc
iret
mov
scas
pop
push
and
div
test
jbe
cs
add
clc
xor
xchg
inc
and
jo
xor
scas
mov
or
(bad)
adc
jmp
out
adc
adc
shr
out
in
dec
pop
and
dec
adc
rol
adc
add
inc
rol
int
jns
ffree
out
stc
add
out
bound
jo
fild
adc
jo
sbb
add
ss
jmp
aaa
add
push
int3
xor
mov
adc
daa
in
push
sbb
adc
lahf
mov
cld
cmp
or
mov
icebp
xchg
pusha
aad
pop
dec
pop
pop
push
jno
adc
pop
jmp
retf
stos
sbb
add
inc
je
inc
sub
sbb
cs
xchg
dec
mov
sub
adc
push
je
cmp
fcomp
lods
(bad)
mov
jmp
add
add
push
mov
ins
fs
outs
mov
call
and
inc
(bad)
pop
mov
pop
sub
and
cmp
sub
ja
add
mov
mov
(bad)
mov
xor
or
sbb
rol
or
jmp
or
sbb
push
je
lahf
xchg
mov
add
in
jl
inc
loope
test
hlt
fisttp
adc
jmp
lods
sbb
(bad)
push
(bad)
call
mov
add
nop
add
pusha
jmp
and
into
ret
cmp
dec
(bad)
sbb
sbb
jmp
mov
rcr
push
ja
sahf
add
mov
xor
sbb
add
and
pusha
xor
data16
pop
icebp
mov
jbe
push
lock
add
and
dec
cmp
fnstenv
add
in
xor
imul
xchg
js
adc
bound
fadd
pusha
out
or
lea
push
push
sub
shl
jge
out
ror
loopne
add
inc
and
rol
test
ins
ins
nop
or
add
dec
or
cs
push
add
pop
or
jp
adc
add
jmp
push
test
pusha
and
test
out
leave
jne
mov
into
sar
push
add
aas
add
dec
jg
test
push
dec
adc
xchg
cmp
shl
fadd
dec
or
push
xchg
bound
ja
pusha
call
xchg
push
push
push
sub
xor
out
mov
or
mov
mov
fisttp
je
add
int3
mov
adc
xlat
(bad)
xlat
push
dec
push
mov
fbld
adc
pop
pusha
js
(bad)
daa
rcl
adc
xchg
out
repnz
dec
sub
cmp
jmp
mov
inc
inc
sub
adc
xor
mov
adc
inc
repz
pop
add
dec
lods
sar
scas
mov
pusha
sbb
push
pop
gs
jmp
inc
add
lea
shl
push
jae
xor
add
pop
add
ret
ror
pusha
xor
xchg
pop
push
inc
fld
lock
lock
mul
js
cmp
cmp
cs
mov
push
adc
push
sub
cmp
dec
addr16
aaa
pop
cmp
pop
lahf
xor
cmp
jbe
mov
inc
or
push
je
dec
pusha
les
jmp
xchg
sbb
in
xchg
shr
add
cmp
adc
mov
sub
pop
sbb
daa
dec
das
jl
fcomp
dec
out
dec
loop
inc
and
cmp
ret
mov
mov
inc
outs
fcomp
aas
retf
push
mov
adc
bound
lods
add
inc
jmp
inc
inc
scas
rol
popa
xchg
inc
bnd
repz
lds
movzx
mov
fidiv
and
jle
int3
pop
mov
push
pop
aad
adc
cwde
or
into
cmp
push
sbb
xor
in
jne
or
add
mov
fbstp
add
and
dec
push
or
jge
int3
jo
add
outs
adc
add
jno
jp
mov
fmul
push
pusha
daa
inc
adc
and
adc
push
test
iret
cwde
aad
int
xor
xchg
sbb
mov
mov
outs
and
fsubp
shl
js
or
adc
or
loop
xchg
sub
aam
jl
test
adc
sbb
dec
cld
mov
mov
and
add
call
pop
cmc
sbb
add
push
fsubp
pop
and
je
cli
fisttp
cmps
push
adc
push
adc
cmp
or
fcom
add
or
jmp
push
fmul
jbe
enter
pop
cmp
mov
int
or
or
fcomp
push
adc
jge
push
ins
dec
cmp
or
hlt
sbb
add
push
rcl
sub
(bad)
or
jle
retf
jne
arpl
jg
fdivr
sub
or
mov
add
sbb
cmp
inc
mov
lock
scas
bound
xchg
xchg
push
(bad)
mov
or
or
aad
pop
mov
jmp
adc
es
rcl
test
or
stos
mov
dec
ins
add
mov
sbb
pop
loopne
and
int
lds
fdivr
fdivr
cmp
dec
(bad)
sub
retf
push
cmp
aam
repnz
(bad)
push
jp
outs
sbb
xchg
push
ja
in
call
ror
(bad)
ficomp
push
das
ds
sbb
loopne
loopne
cmp
sub
std
(bad)
int
mov
or
or
mov
ret
push
rcr
push
pop
xlat
jmp
mov
out
pushf
pop
jmp
xor
cmp
xchg
fwait
xchg
popa
ret
cmp
je
or
rcr
mov
or
inc
aam
rcl
inc
push
mov
push
push
dec
es
dec
stos
leave
adc
and
dec
add
ror
cld
cmps
pop
mov
sub
inc
or
add
aad
push
and
ins
mov
add
int3
out
test
mov
dec
jne
aaa
sub
loope
mov
add
mov
inc
jmp
pop
adc
xor
test
data16
push
ret
call
adc
mov
jl
dec
and
mov
mov
xlat
inc
sub
inc
or
or
jp
push
ss
call
push
movs
jo
push
adc
push
push
sub
mov
aaa
gs
les
lea
imul
scas
or
outs
cmps
adc
cmp
mov
xchg
and
into
loopne
call
retf
ret
out
mov
fdiv
pusha
push
xchg
cmp
xor
sbb
ins
rcpps
(bad)
mov
std
mov
jge
dec
mov
add
les
outs
mov
jecxz
add
lahf
and
cmp
test
fs
add
and
adc
movs
inc
mov
clc
fcmovne
loope
pop
push
(bad)
iret
or
cmp
addr16
xor
inc
(bad)
xchg
sub
in
jne
popa
rcl
in
nop
(bad)
and
mov
rol
jnp
ins
sub
fcomi
dec
push
and
movs
xchg
xchg
xchg
add
jnp
push
jo
push
xor
push
push
fs
inc
(bad)
mov
loopne
mov
aas
push
ret
sub
imul
movs
cmp
xlat
mov
mov
and
mov
push
jmp
push
popa
(bad)
mov
inc
int3
jp
adc
inc
inc
inc
inc
and
inc
setne
mov
dec
dec
pop
mov
jbe
sbb
sub
inc
push
sbb
and
add
inc
popa
movs
(bad)
or
cs
hlt
xchg
mov
inc
or
add
loopne
or
pop
clc
push
push
lahf
dec
cmps
adc
mov
mov
or
xor
cmp
dec
jo
or
xor
and
cmp
les
adc
mov
push
cmp
loop
lock
xchg
push
cmp
inc
add
push
out
outs
add
loope
jnp
jp
outs
ds
add
cmp
and
pop
jle
pop
xor
bound
or
neg
push
dec
fs
add
imul
outs
std
pop
jmp
jne
stc
mov
jo
sbb
jle
inc
in
popf
adc
jecxz
mov
test
xor
outs
inc
icebp
and
dec
clc
jne
in
dec
lea
jp
xor
or
shr
or
icebp
add
adc
std
imul
inc
iret
mov
ins
daa
lahf
daa
ret
xchg
dec
inc
(bad)
mov
xchg
mov
xchg
pop
dec
ret
cmovae
inc
ds
push
sub
lock
loop
inc
add
adc
xor
add
sub
cld
outs
push
mov
nop
lahf
mov
inc
mov
add
adc
icebp
sti
hlt
mov
mov
lea
dec
mov
mov
out
outs
pop
test
xchg
ins
lea
fistp
sbb
push
xchg
or
add
dec
in
mov
test
or
or
div
(bad)
cmp
fisttp
pop
mov
call
push
and
or
adc
xor
add
jg
pop
adc
or
mov
jmp
cmp
or
into
test
xchg
in
push
cmp
mov
dec
jne
push
mov
push
xor
cmps
and
or
xchg
loope
or
(bad)
jne
inc
jmp
dec
cmp
repnz
add
ins
lods
loopne
pop
neg
dec
retf
dec
mov
push
sar
cmp
sub
xor
dec
jecxz
fs
push
ja
cmp
aam
sub
inc
popf
clc
ds
mov
mov
sub
push
mov
out
popa
adc
push
mov
mov
(bad)
call
or
push
rcr
(bad)
dec
or
clc
add
sar
mov
cmp
je
sbb
ja
das
retf
inc
pop
push
or
pop
call
inc
add
call
add
call
pop
inc
test
popa
or
push
lods
test
mov
test
dec
popa
or
(bad)
in
pop
add
adc
mov
ss
and
cmp
arpl
cmp
stos
mov
mul
dec
add
sti
ret
loopne
and
xchg
push
push
out
loope
sub
orps
gs
xlat
jmp
ins
mov
out
sub
daa
xchg
add
js
mov
or
push
cmp
lea
je
push
push
push
ror
aam
retf
inc
mov
or
xchg
dec
jp
lea
jl
or
addr16
lea
lahf
push
inc
jbe
mov
pop
popf
jecxz
out
jnp
mov
fstp
push
fstp
je
idiv
jle
adc
jne
cmp
add
or
or
xchg
jp
cli
pop
(bad)
(bad)
push
jmp
adc
cmp
js
push
dec
sete
xor
into
push
adc
inc
cmp
fwait
dec
mov
outs
out
inc
or
jmp
jnp
test
stos
xchg
or
pop
dec
fwait
stos
jmp
sub
sbb
je
sbb
push
inc
repz
js
push
test
sbb
add
mov
push
int3
push
cld
daa
and
pop
or
in
mov
pop
lock
popa
or
xor
call
or
popf
dec
mov
sbb
and
mov
pusha
mov
outs
jne
(bad)
and
or
jne
push
shr
mov
shl
jmp
cmps
leave
cmp
leave
adc
sbb
mov
push
mov
or
repz
add
add
pop
cmp
inc
(bad)
shl
push
jle
or
dec
add
or
test
push
push
mov
aas
xor
cs
loope
and
enter
add
mov
pop
mov
xchg
pusha
ret
mov
mov
dec
test
add
jge
adc
adc
jp
cmp
mov
adc
or
xlat
adc
int3
pusha
je
mov
mov
sub
enter
je
cmp
jbe
setae
test
jle
dec
ror
xchg
imul
fmul
shl
mov
cmp
or
cs
(bad)
mov
in
ret
in
pop
push
pop
ins
aaa
test
push
mov
add
movs
in
and
jnp
mov
jne
jmp
inc
jmp
and
js
loope
fcom
aaa
pop
fst
push
push
clc
vmovlps
(bad)
cmp
es
out
cmp
fcmovbe
outs
mov
add
in
push
jae
cmp
sub
pusha
xchg
in
dec
and
ret
lahf
sbb
xchg
push
fcom
mov
ja
dec
(bad)
(bad)
(bad)
push
xchg
in
rcl
pop
cmp
stos
push
adc
sub
add
call
mov
add
push
push
(bad)
lea
fimul
ins
and
jmp
loopne
jp
pusha
movs
ficomp
cmp
ret
rcl
sbb
por
imul
or
shl
push
push
cwde
inc
or
lds
jg
fldenv
sbb
push
sbb
sbb
jle
pop
jo
lods
sbb
adc
and
(bad)
ficomp
loopne
push
mov
mov
mov
inc
mov
xchg
mov
test
setg
js
mov
shl
add
xchg
sub
mov
pop
add
push
fwait
pushf
loopne
push
(bad)
mov
jns
mov
mov
mov
cdq
xchg
xrelease
xchg
push
push
jo
xor
sub
ret
jne
or
aaa
fnsave
adc
xchg
mov
fdiv
sbb
outs
cmp
inc
jnp
cmp
mov
test
jmp
mov
loop
sbb
call
jo
mov
push
mov
jmp
push
rol
mul
push
mov
jnp
and
cmp
mov
cmp
add
sub
hlt
rcr
push
xor
out
jo
shr
push
adc
shr
pop
mov
push
push
cmps
xchg
xchg
xor
mov
ss
scas
shl
in
outs
inc
js
mov
mov
mov
mov
push
jno
ins
outs
mov
mov
aas
add
pop
jb
push
aas
lock
and
or
add
inc
or
sub
or
int3
and
mov
pop
popa
cmp
out
and
xor
test
dec
dec
jne
mov
cs
xor
dec
sbb
loopne
lods
and
push
inc
mov
arpl
add
add
cmp
adc
push
data16
rcr
mov
push
cld
mov
jmp
cmp
pop
cmps
ret
nop
sbb
hlt
push
scas
leave
lods
xchg
daa
xchg
aam
add
fistp
mov
or
call
sbb
pop
pop
inc
pusha
lock
or
xchg
arpl
push
ja
inc
inc
sbb
inc
or
mov
jp
jno
loopne
mov
adc
addr16
add
call
or
jmp
lahf
mov
loope
mov
lahf
xchg
es
push
push
cmps
test
gs
das
lock
jge
jns
test
stc
cld
sub
arpl
(bad)
ss
sub
mov
or
lea
rol
add
lods
and
xchg
loopne
add
into
addr16
sub
repz
bound
cmc
mov
sbb
inc
test
or
add
loopne
jmp
inc
cli
fucomi
sahf
dec
mov
loopne
leave
inc
pop
imul
inc
cmp
lea
pop
sbb
fnstcw
add
dec
add
rcr
loopne
add
pop
in
loopne
(bad)
loopne
rcr
enter
push
mov
inc
fsub
adc
outs
cmc
nop
sub
add
or
xchg
sub
cld
daa
sub
jno
inc
js
add
test
fs
push
loope
or
ror
cmp
sub
ret
aad
xchg
jecxz
cmp
add
lahf
in
call
(bad)
push
and
das
adc
pop
push
icebp
cli
sub
jmp
or
cld
jne
add
std
xor
in
pop
jp
enter
mov
mov
outs
movs
in
or
addr16
mov
adc
adc
nop
sbb
mov
daa
xor
int3
popa
mov
paddusb
es
fldenv
cmp
fmul
xor
div
ror
pop
sar
outs
mov
imul
or
lock
aas
aad
push
cmps
pop
mov
test
or
mov
inc
dec
mov
daa
popa
inc
add
jb
sub
mov
mov
mov
inc
sbb
pop
lock
sbb
or
pop
jns
xor
xchg
loopne
inc
pop
pop
nop
push
push
push
loopne
outs
xor
pusha
mov
jbe
or
loope
pop
push
mov
or
outs
jg
and
arpl
lock
leave
mov
adc
loopne
push
cmp
ror
sahf
sub
(bad)
or
jmp
or
add
mov
fcomp
or
push
fild
sbb
jmp
or
adc
xor
scas
ret
mov
fsubr
or
cli
cmp
js
push
sbb
dec
xor
xchg
add
mov
push
pushf
outs
(bad)
cwde
mov
add
das
xchg
loope
add
sub
jae
jge
sub
shl
sub
push
lea
out
jo
shr
jb
jns
sbb
sub
mov
inc
and
test
mov
cmp
jle
cmp
mov
fist
sub
daa
xor
in
pop
add
inc
stc
movs
jl
or
or
push
push
loopne
stos
mov
pop
push
lods
cli
daa
popa
adc
mov
aaa
push
fucomip
lsl
adc
add
cmp
cmp
icebp
jbe
pop
test
add
(bad)
aas
mov
sub
mov
icebp
sbb
lods
xor
xchg
xor
xor
dec
in
outs
je
mov
pusha
mov
aas
lea
imul
or
(bad)
cmp
dec
cld
inc
sbb
jnp
mov
push
jbe
add
mov
loopne
xchg
dec
push
push
dec
push
add
cmps
mov
dec
push
or
push
loopne
pushf
hlt
pushf
adc
and
add
punpcklwd
or
in
call
adc
add
sbb
imul
and
mov
retf
movs
sbb
mov
mov
outs
and
inc
mov
mov
iret
out
addr16
bound
push
and
cs
ds
cmc
aam
pop
jo
or
inc
pop
aaa
push
ret
add
lock
jg
jne
inc
loopne
loopne
sbb
cmp
movs
xor
nop
mov
pop
mov
cmps
xchg
cmp
mov
sbb
call
inc
mov
mov
shl
pop
cwde
jo
xchg
cmp
retf
dec
mov
mov
dec
inc
push
adc
cmp
mov
mov
jmp
test
mov
je
(bad)
(bad)
cmc
stc
test
in
enter
jmp
sub
pop
cmc
out
and
or
out
jle
xor
test
or
in
fidivr
sbb
or
pop
or
out
(bad)
(bad)
call
xchg
mov
push
mov
cwde
sahf
in
push
clc
scas
retf
or
mov
mov
loopne
mov
add
test
fsubr
loope
fwait
inc
movs
cmp
pop
cmp
loop
adc
add
cmp
add
or
add
lock
sbb
inc
and
sbb
sub
(bad)
in
jnp
lock
jmp
xchg
inc
cld
adc
xor
sub
std
pop
in
push
mov
dec
or
loopne
jge
test
js
inc
aas
and
into
push
js
or
jns
add
xor
pop
or
mov
adc
out
(bad)
in
dec
nop
add
adc
loop
sub
outs
push
sub
sbb
xchg
je
lock
int3
adc
mov
in
inc
call
or
sbb
adc
add
jmp
xchg
loope
or
push
add
mov
and
mov
jmp
ror
cmp
fild
mov
jle
cdq
add
inc
inc
adc
add
mov
push
enter
ins
pop
ret
jmp
inc
dec
jne
or
jae
rcr
push
push
mov
jns
xlat
test
jne
pop
int3
mov
sub
jmp
in
jle
loopne
sub
cmp
pop
jle
cli
push
add
inc
xchg
ret
fidiv
pop
addr16
xor
or
sub
stos
xchg
fs
add
pop
lahf
add
bound
icebp
fs
sub
inc
pop
mov
xchg
fsub
xchg
sbb
push
add
test
and
imul
mov
bound
loope
jbe
add
mov
hlt
into
mov
inc
jecxz
and
clc
or
adc
or
mov
mov
adc
push
mov
or
push
int3
or
add
inc
and
les
setg
pop
xchg
pop
pop
xchg
push
mov
sub
aaa
rcr
test
iret
cdq
xlat
mov
mov
cmp
enter
and
retf
xchg
clc
inc
adc
or
lea
test
loope
iret
data16
sbb
ja
jmp
pop
pop
and
dec
jb
dec
mov
dec
(bad)
pop
dec
add
push
in
or
cmp
xchg
mov
jno
jmp
push
ret
(bad)
cld
(bad)
cmp
rol
pusha
stos
adc
adc
adc
pop
loop
cmp
nop
dec
pusha
jg
inc
jnp
pop
mov
je
lea
push
push
mov
or
ins
inc
sub
inc
push
pusha
inc
sub
push
sbb
adc
outs
add
push
(bad)
pusha
mov
push
pop
cs
mov
xor
mov
loopne
daa
sbb
js
xor
in
loope
out
cmp
and
aaa
push
inc
and
repnz
ss
daa
dec
out
sub
inc
adc
icebp
xor
bound
adc
cmp
push
and
mov
sbb
pop
cmp
pop
popf
popf
mov
ficomp
adc
sub
adc
cmp
call
inc
ret
dec
pop
push
leave
mov
cmp
push
xchg
mov
sub
call
repnz
pop
adc
or
in
adc
in
mov
jecxz
fld
jo
sub
mov
xlat
pop
popa
cmp
xor
imul
inc
out
scas
mov
add
test
mov
cli
inc
(bad)
mov
dec
(bad)
cwde
inc
jae
ror
xor
and
sbb
ror
mov
lahf
add
adc
test
enter
daa
add
inc
loope
jnp
inc
inc
scas
cmp
lock
mov
scas
dec
dec
test
and
clc
push
rcl
inc
sahf
push
ds
jmp
scas
mov
rcr
scas
dec
dec
jb
mov
and
ds
ds
pusha
pop
lods
inc
and
and
pusha
add
xchg
and
add
pop
out
inc
test
push
pop
(bad)
dec
inc
or
sbb
sbb
push
or
or
jmp
push
cmp
adc
add
repz
add
and
sbb
adc
jns
loop
or
aas
push
sbb
push
fdiv
mov
lods
call
or
sbb
adc
mov
xchg
add
test
dec
imul
adc
mov
xchg
jns
mov
not
mov
lods
test
iret
jbe
call
and
or
jl
or
or
push
in
sub
(bad)
test
jne
pop
loop
pop
in
or
xlat
ds
ja
cmp
add
dec
mov
pop
dec
inc
sub
inc
pop
cmp
nop
mov
sbb
cmp
ins
pop
das
ja
dec
pop
mov
arpl
cmp
sbb
dec
push
mov
cmp
pop
ja
fadd
inc
xchg
inc
adc
call
cwde
sub
or
ja
pop
and
dec
in
adc
mov
dec
push
test
mov
xor
cmc
pusha
nop
mov
or
mov
add
mov
mov
inc
lods
or
inc
and
movs
push
ror
cmps
xlat
mov
xlat
adc
push
sub
ret
cmp
mov
outs
inc
call
outs
pop
pop
mov
clc
lods
stos
adc
sbb
sbb
push
mov
push
mov
push
jo
sbb
push
test
push
jmp
out
clc
mov
or
dec
xchg
(bad)
mov
pop
test
test
lahf
cld
repz
adc
lahf
mov
and
lahf
dec
pop
loopne
mov
mov
data16
mov
dec
or
dec
pop
mov
add
xor
inc
cmp
loopne
dec
jl
sbb
pop
shl
jmp
lea
or
and
adc
clc
out
pop
push
push
fsub
or
cmp
jl
ja
test
mov
inc
or
jno
cmp
dec
push
pop
mov
ret
daa
or
adc
push
in
dec
inc
lock
pusha
cmps
in
adc
mov
loope
cmp
loope
mov
in
das
es
jp
jmp
adc
rcl
xchg
and
stc
fild
sub
fmul
dec
xchg
cmp
mov
out
sub
jae
dec
lahf
add
(bad)
fbld
popa
mov
jne
in
push
(bad)
test
in
jg
cmp
jle
add
or
mov
sub
push
(bad)
mov
sub
mov
popf
jmp
dec
cmp
stos
mov
jno
(bad)
je
pusha
loopne
sub
in
sbb
pusha
mov
push
mov
push
add
mov
jmp
inc
pop
or
jge
je
mov
aaa
inc
dec
jne
out
add
rcr
cmp
push
or
sti
shr
add
(bad)
mov
pop
xchg
lock
add
xlat
sbb
mov
outs
(bad)
lods
loopne
fiadd
(bad)
aad
lock
sbb
fsub
aad
add
xchg
pop
adc
push
cmp
das
cmps
add
add
data16
jl
add
add
outs
inc
(bad)
call
adc
add
pop
or
out
add
pop
mov
cmp
cmp
sub
loop
push
stos
cmp
scas
lock
shr
inc
push
cmp
cmp
inc
jne
push
or
mov
or
sbb
jl
adc
adc
adc
inc
ret
jmp
out
aad
sub
sbb
xlat
mov
jbe
adc
or
loope
aas
inc
push
cmps
(bad)
add
imul
mov
jbe
ss
sbb
sub
mov
push
lea
fadd
xchg
enter
jecxz
push
mov
dec
sahf
cwde
int3
outs
pop
push
xor
or
fcomp
push
fdiv
fcom
adc
jp
sub
call
aas
loopne
mov
or
push
mov
scas
inc
es
lahf
jo
or
push
call
sar
pusha
xor
loope
sti
ins
imul
movs
call
mov
adc
and
pop
call
rol
sub
sbb
pushf
jae
or
sub
jae
sub
adc
adc
pop
mov
int3
hlt
cmp
push
jle
loop
out
ins
sbb
and
jmp
mov
mov
jne
or
and
dec
adc
push
or
fcom
ss
and
dec
add
mov
(bad)
adc
mov
mov
imul
push
or
sbb
xchg
push
sbb
sbb
sub
repnz
inc
xor
lds
push
je
les
push
dec
pop
jecxz
cmp
dec
test
push
jnp
adc
or
mov
loop
bound
jmp
cwde
pop
leave
push
aaa
xchg
(bad)
loopne
sub
push
sub
mov
pop
(bad)
out
dec
mov
adc
pushf
sbb
scas
push
hlt
mov
dec
fcom
cmp
xchg
in
int
dec
mov
repnz
or
cmp
(bad)
or
mov
xchg
cmc
pushw
fadd
sbb
rol
adc
mov
pop
and
imul
enter
cmp
mov
sbb
mov
(bad)
in
js
xchg
int3
pop
mov
sub
pop
add
cdq
dec
add
fwait
add
rol
je
mov
jb
xchg
sbb
jns
or
pop
(bad)
inc
inc
jne
xchg
ret
push
es
out
jo
add
xchg
push
scas
int3
inc
or
push
mov
pusha
xor
adc
fnsave
std
outs
push
popf
inc
inc
push
fmul
rcl
enter
push
mov
xor
(bad)
mov
cmp
cmps
das
dec
inc
ja
cmp
adc
cwde
test
push
aad
push
cmp
pop
adc
inc
bound
aaa
cwde
xchg
xor
adc
push
and
inc
es
test
or
sub
inc
dec
sbb
js
mov
lock
and
or
mov
arpl
ins
les
cwde
or
test
cwde
mov
add
sahf
loop
cmp
mov
and
or
xlat
mov
out
xchg
mov
arpl
lods
adc
cmp
test
ret
nop
hlt
jnp
shr
fbstp
sub
mov
jmp
cwde
(bad)
jae
(bad)
cmp
dec
shl
mov
fild
or
sub
xor
pop
jle
jp
add
mov
es
imul
pop
nop
dec
sbb
ins
dec
in
shl
add
nop
or
rcr
xchg
dec
loopne
and
sbb
outs
fcomp
jmp
scas
add
dec
retf
out
add
inc
stos
ret
mov
out
add
scas
mov
pop
in
cli
fadd
(bad)
mov
fistp
xchg
std
movs
mov
xor
(bad)
popa
xor
or
rcl
mov
daa
xor
test
mov
jmp
rol
cdq
inc
sub
mov
sbb
and
inc
mov
pop
lock
jbe
cmp
mov
xchg
inc
sub
xchg
adc
pop
test
out
ja
add
movs
ret
in
add
leave
cmp
loope
mov
pop
sbb
pop
cmc
dec
les
mov
sub
je
cmc
test
out
cmp
jle
dec
ja
inc
pop
shr
sbb
jmp
and
adc
(bad)
out
(bad)
test
pop
inc
xlat
leave
mov
fcom
mov
out
mov
add
dec
das
push
mov
jmp
aas
dec
pop
ins
mov
push
add
aas
ja
mov
imul
cmp
add
test
addr16
jb
adc
pusha
add
adc
loop
cmps
fs
popa
mov
jbe
sub
outs
add
xor
xor
push
fld
shl
cmp
cmps
cmp
adc
push
loopne
adc
clc
and
enter
addr16
dec
and
push
mul
sbb
and
or
cld
out
shl
gs
out
ret
or
inc
pusha
or
mov
out
fdiv
bound
jg
push
inc
add
add
adc
jo
inc
xchg
xor
add
out
add
and
mov
inc
or
shr
out
lock
mov
cwde
cmps
nop
lods
cmp
fdiv
push
inc
sbb
inc
(bad)
mov
test
jmp
sbb
xor
push
xchg
cmp
enter
or
in
add
cld
test
push
das
shl
and
and
lods
dec
scas
and
adc
das
push
dec
add
or
xor
shl
inc
add
adc
ror
add
pop
cmp
push
inc
das
or
js
ror
xchg
leave
or
out
aaa
(bad)
pop
add
adc
mov
add
retf
mov
(bad)
adc
aam
scas
mov
sub
adc
dec
xor
dec
iret
nop
push
push
add
push
add
adc
das
or
imul
add
ins
daa
jmp
test
inc
in
das
add
fsub
aad
pusha
dec
push
das
test
nop
xchg
add
mov
pop
or
mov
or
adc
loop
add
dec
push
add
imul
je
or
push
push
es
mov
imul
nop
add
push
and
jg
or
fsub
xor
or
sub
icebp
add
sbb
ins
xor
add
jg
mov
add
pop
rol
sub
sar
push
add
cmps
jge
add
fwait
mov
jecxz
iret
and
iret
push
mov
adc
iret
scas
es
or
pxor
sub
mov
xchg
cmp
popf
hlt
jno
popf
ret
sub
cli
add
cmp
cmp
fisub
js
jle
test
into
enter
daa
adc
aad
add
inc
xor
pop
pmullw
imul
fcom
fadd
ret
shl
mov
pop
sbb
ret
ret
or
mov
add
or
cmp
add
inc
or
xlat
ins
pop
aas
mov
lods
xlat
movs
pop
sub
cmp
pop
outs
dec
mov
dec
xor
call
push
mov
pushf
dec
movs
mov
push
xor
fwait
push
inc
ja
outs
jo
adc
aas
cwde
push
lds
push
inc
das
cmp
push
cmp
fadd
and
and
enter
fs
outs
mov
inc
je
inc
mov
or
inc
fs
xchg
sub
jbe
jae
cmp
imul
loopne
adc
xchg
sub
aas
jno
inc
daa
dec
push
icebp
aas
ins
push
std
loopne
push
shl
aas
clc
sub
rol
das
cli
xchg
or
inc
(bad)
ds
cmps
inc
adc
add
adc
mov
jb
test
push
out
aam
adc
xchg
inc
xor
in
jae
pop
gs
pop
mov
xchg
pop
adc
jl
jae
sub
inc
sub
cwde
jne
sar
sub
in
rol
pusha
test
and
out
test
out
ins
xchg
and
mov
dec
test
cmp
(bad)
lods
xor
push
mov
test
jg
cmc
push
mov
push
mov
xor
icebp
lea
mov
or
dec
jg
and
mov
and
mov
inc
sbb
loopne
cmp
add
cmp
or
mov
and
cmp
cmp
cmp
xchg
cmps
jle
sbb
or
icebp
or
test
inc
shl
inc
cmp
rcl
adc
adc
push
mov
jnp
xor
inc
inc
cmp
adc
call
out
cmp
push
mov
jle
int
add
cmp
rcl
jnp
bound
fdiv
sbb
(bad)
sub
inc
add
lea
rcr
arpl
test
pusha
and
mov
in
jo
mov
scas
xchg
(bad)
mov
loopne
fist
xchg
mov
into
fldenv
and
mov
pop
shr
ja
jecxz
enter
(bad)
mov
lods
add
add
add
cwde
pusha
das
mov
test
ret
add
push
jp
add
dec
jle
jp
dec
adc
sbb
jo
or
(bad)
loopne
das
js
popf
sbb
jg
mov
nop
lahf
push
jnp
jae
jno
aaa
aam
sub
fwait
or
add
cmovg
dec
dec
bnd
in
jp
movs
or
jg
test
sub
dec
scas
push
aam
and
dec
dec
add
push
aam
xor
sar
cmp
pop
mov
(bad)
push
inc
pop
xchg
push
jb
jbe
in
push
mov
inc
pop
mov
fdivr
inc
icebp
bound
and
pop
jp
jl
mov
push
and
cmp
jmp
xlat
ret
push
xchg
pushf
sub
repnz
dec
fsub
test
sbb
add
loopne
add
jg
cwde
and
mov
and
or
adc
xchg
fabs
retf
lods
cdq
mov
cmp
or
sti
add
add
sub
pop
push
add
(bad)
jl
pop
and
fdiv
(bad)
jl
lahf
cmp
pop
add
push
lock
adc
add
sub
dec
xchg
mov
jbe
inc
push
out
cwde
add
lock
test
jo
or
arpl
push
cmp
xor
and
jno
adc
or
daa
and
jns
or
sahf
xlat
cmp
(bad)
push
inc
mov
mul
lock
sbb
je
cmp
add
clc
rol
aam
jne
js
fldcw
inc
dec
add
das
xchg
inc
add
or
hlt
mov
lea
cmp
jmp
test
xchg
and
es
mov
jo
ins
sar
or
mov
jl
mov
ss
push
lahf
jg
fmul
jbe
or
jae
inc
pop
and
xchg
jne
add
loope
addr16
fbld
aas
and
in
or
fcom
fild
xchg
jecxz
jno
push
xor
or
dec
jb
sbb
test
shl
test
push
fisttp
out
cld
xor
cmp
sahf
adc
dec
add
loope
add
adc
adc
shl
add
and
mov
sub
pop
(bad)
mov
xchg
xchg
pop
or
mov
xchg
pop
mov
xor
and
pop
xchg
sub
and
inc
pop
inc
sub
movs
inc
or
mov
test
cld
mov
inc
mov
and
and
sbb
lods
mov
mov
shl
lds
ror
repz
retf
pop
outs
ins
das
mov
inc
adc
jg
adc
cmp
les
push
pushf
das
in
push
test
cmp
push
mov
add
pop
retf
jg
and
cmp
add
xchg
aam
jg
push
and
mov
push
xchg
rcl
add
add
ror
xchg
mov
adc
inc
call
or
xor
cmps
cmc
sub
and
xchg
enter
sub
adc
icebp
xchg
leave
mov
mov
xchg
add
mov
sahf
imul
mov
pop
lahf
mov
jns
test
out
mov
sub
adc
cmp
lods
out
out
inc
pop
inc
push
mov
cmp
dec
clc
popa
imul
nop
fimul
test
out
mov
xor
adc
out
sbb
xchg
inc
pop
data16
aam
out
test
aas
in
xor
out
nop
dec
push
nop
pushf
aam
xchg
dec
and
leave
xchg
pusha
xchg
or
cwde
hlt
ret
nop
js
int3
data16
es
(bad)
out
cwde
jg
test
fdivr
mov
mov
cmps
les
test
inc
out
push
fsub
movs
inc
icebp
popa
xchg
pusha
ret
das
and
out
pusha
xchg
or
xchg
dec
pushf
or
adc
ret
push
xchg
xchg
lods
pop
dec
fsub
cmps
sbb
inc
jbe
test
bound
je
shl
inc
xor
mov
dec
adc
and
je
fs
mov
inc
xor
sbb
and
sahf
push
jg
popa
mov
inc
stos
fwait
adc
mov
mov
adc
jns
pop
mov
xor
jg
stos
out
add
adc
sub
mov
adc
sahf
or
cld
cmp
add
icebp
cmp
bound
sar
inc
movs
jmp
inc
lods
fwait
nop
test
das
pop
add
and
pop
pushf
dec
and
sbb
pop
mov
inc
pushf
dec
pop
pushf
pushf
lds
adc
leave
dec
push
pushf
push
pushf
ins
mov
dec
cld
pop
add
in
lea
mov
or
mov
jl
cmp
iret
mov
and
and
repnz
push
xor
outs
sbb
push
mov
adc
adc
addr16
lds
pop
test
ret
addr16
scas
stos
in
add
retf
inc
sbb
addr16
sbb
and
inc
add
xor
add
scas
(bad)
movs
adc
loope
dec
imul
xchg
pop
jg
(bad)
mov
test
outs
cmp
div
mov
adc
shl
lock
cwde
div
bnd
xor
enter
arpl
pop
(bad)
xchg
pushf
add
mul
xchg
enter
and
xor
(bad)
mul
test
test
lods
cmps
add
mov
xchg
mov
jb
jbe
jno
cmps
cmps
and
push
mov
test
arpl
mov
xor
cmps
mov
inc
xor
pusha
ret
das
and
cmps
mov
nop
pop
and
inc
and
push
daa
sbb
push
lods
cmps
sbb
cmps
and
or
mov
fcomp
test
test
mov
mov
adc
outs
scas
pop
outs
or
shr
test
stc
lds
xchg
jae
movs
mov
pusha
in
push
sub
mov
push
test
mov
retf
sub
and
in
int3
scas
in
adc
or
dec
shl
push
cmp
outs
(bad)
jmp
mov
cld
mov
inc
sbb
ja
ja
loop
in
add
data16
mov
push
mov
pop
add
inc
lods
push
jo
xor
cmp
xchg
test
cmp
adc
or
mov
lock
pop
adc
mov
in
push
and
scas
rol
out
sub
push
sbb
pop
xor
leave
push
mov
and
pop
pop
movs
and
adc
or
pop
nop
pop
xchg
mov
jb
adc
dec
mov
add
jnp
xor
loope
lods
dec
sbb
dec
jo
sub
movs
aam
repz
retf
push
mov
inc
je
scas
pinsrw
shl
call
mov
pusha
cmp
xchg
sbb
xor
adc
loope
mov
cs
data16
xchg
and
or
adc
push
xor
test
leave
add
pop
adc
test
rcr
ret
outs
(bad)
mov
push
push
inc
rol
not
bound
leave
inc
or
pop
ror
aaa
mov
inc
pop
sub
and
outs
idiv
jecxz
push
(bad)
jne
loopne
fbstp
jle
test
jg
lea
dec
cmp
jg
sbb
push
cmps
mov
cmp
jle
push
add
dec
adc
jno
in
pop
shl
mov
sub
xchg
pop
adc
mov
mov
push
xchg
inc
jb
adc
sub
mov
lock
aaa
or
mov
or
or
test
sub
loopne
add
mov
push
cmp
movs
retf
adc
push
xchg
sbb
les
pop
mov
push
call
cmp
or
adc
mov
lods
xchg
push
cmp
adc
add
jg
add
cmp
and
fdivr
dec
pop
push
rcr
scas
mov
imul
xor
call
or
ficomp
(bad)
or
test
aaa
fist
retf
or
xor
inc
sbb
mov
fistp
fist
add
dec
pop
sub
xchg
sti
inc
retf
push
ret
adc
ret
xchg
lods
xor
rcr
rcl
retf
xchg
push
push
in
dec
xchg
mov
or
sub
inc
jo
mov
pop
pop
ins
imul
inc
xchg
aaa
js
rol
xchg
mov
xchg
add
and
addr16
jnp
pusha
daa
adc
daa
push
adc
xchg
mov
push
adc
cli
out
inc
daa
jns
mov
mov
lods
and
aaa
shl
cmp
mov
sbb
pusha
and
cld
pop
mov
cld
xchg
jl
jmp
xchg
int
rol
push
pop
mov
mov
test
ret
pop
or
push
repnz
pusha
test
aam
adc
pop
cmp
adc
stc
jno
xchg
loopne
lods
pop
push
lods
add
sbb
scas
sub
stos
mov
and
xchg
xchg
add
stos
or
push
out
dec
inc
and
loopne
dec
fisttp
je
cmp
sub
push
xchg
and
push
ror
dec
mov
outs
cmp
jmp
pushf
in
or
movs
add
les
sbb
mov
jp
outs
adc
ror
cmp
cmp
rcl
mov
inc
unpcklps
mov
ret
cmp
and
arpl
pusha
movsx
sbb
add
lods
mov
pextrw
inc
add
jnp
(bad)
arpl
add
nop
add
pusha
test
lea
add
pop
push
add
daa
aaa
push
jb
nop
(bad)
cld
mov
lods
daa
sbb
daa
daa
clc
cdq
cmp
sub
cmp
xor
adc
xchg
sbb
ret
adc
push
shl
push
and
retf
mov
fiadd
inc
inc
fstp
cmps
inc
and
push
xor
(bad)
adc
mov
inc
rol
loopne
gs
push
and
inc
lods
inc
push
xlat
out
jmp
inc
test
jne
str
dec
push
enter
rcl
enter
sahf
pop
inc
add
das
and
enter
lds
push
adc
fst
pushf
mov
jp
adc
enter
or
push
shr
dec
fisub
inc
shr
mov
inc
and
inc
test
pop
inc
repnz
fcom
data16
inc
push
enter
loop
cmp
daa
or
inc
xchg
dec
jno
add
into
test
sbb
pop
das
pop
fst
push
dec
mov
lods
and
gs
das
cmp
test
lods
das
int3
jnp
inc
sbb
int
daa
adc
das
adc
and
inc
outs
or
and
adc
aas
mov
fdiv
mov
xchg
shr
inc
or
add
adc
jg
add
add
inc
and
sub
inc
jne
and
push
aaa
je
aas
mov
push
dec
mov
cmp
jp
sbb
scas
inc
retf
arpl
sub
mov
xchg
sbb
loope
fcomp
jp
shr
add
push
mov
test
jbe
sahf
jmp
inc
mov
adc
mov
(bad)
jmp
add
cmp
jl
push
je
cmp
lea
ror
add
or
cmp
cmp
jle
or
cmp
xor
cmp
ds
xor
push
cld
or
mov
gs
xchg
pop
adc
movs
sbb
cmps
and
ror
mov
lock
xlat
pop
imul
jecxz
sub
nop
enter
and
dec
(bad)
push
sub
push
pop
jmp
inc
xor
(bad)
xchg
mov
adc
(bad)
inc
nop
out
add
push
push
inc
outs
ins
jo
jb
jae
outs
cmp
jns
je
ins
cs
adc
push
push
or
popaw
arpl
and
repnz
mov
mov
outs
dec
imul
jne
je
mov
rol
add
add
push
add
xchg
ret
ins
and
hlt
cs
sub
jl
pop
jb
jo
icebp
push
sti
push
add
xlat
in
inc
add
ss
add
push
add
xor
jbe
add
daa
fcmovb
mov
push
add
jbe
push
dec
sahf
out
jl
jge
add
or
loopne
mov
and
cmp
je
outs
jnp
(bad)
fst
add
fstp
add
dec
xor
rol
push
pusha
sbb
scas
xor
push
ret
push
pop
pop
mov
cdq
shl
sbb
add
gs
data16
fistp
nop
add
adc
hlt
ins
ja
or
outs
xchg
jb
arpl
or
lds
(bad)
or
sub
pop
aaa
jp
mov
pushf
xor
mov
or
mov
ds
or
push
imul
sbb
mov
xchg
dec
add
xchg
out
les
fnstenv
in
mov
pop
add
jmp
out
push
outs
adc
pop
sub
xchg
cmovae
pushf
push
enter
lds
jmp
ud0
into
push
or
and
dec
outs
jbe
inc
jb
popa
neg
popa
outs
popa
addr16
jo
inc
push
icebp
jbe
or
push
popa
lock
jne
push
inc
xchg
mov
rcl
inc
jb
mov
and
dec
pop
push
outs
and
add
call
ins
outs
shr
mov
add
cmc
push
push
pusha
ins
mov
add
imul
mov
xor
scas
add
inc
lahf
pop
lds
call
add
outs
shr
gs
imul
pushf
lods
push
jmp
adc
push
push
push
dec
or
shr
cmp
xchg
xor
xor
mov
dec
inc
ins
popa
jae
gs
add
ja
or
addr16
cs
or
cs
xchg
scas
es
push
dec
sub
push
xchg
adc
outs
mov
out
push
fs
add
in
pop
in
add
xor
push
xchg
ds
push
jbe
montmul
cmps
xchg
cmp
xor
in
push
sbb
mov
ror
xor
mov
outs
xor
loopne
in
dec
sub
add
mov
or
pop
frstor
mov
mov
add
lock
lods
das
retf
mov
scas
enter
or
shl
fs
cld
mov
mov
fimul
mov
aaa
inc
xor
rol
adc
jno
or
movs
ror
xor
ror
mov
and
shr
add
push
std
ror
pop
fld
push
in
xchg
inc
inc
(bad)
jmp
add
adc
or
dec
mov
and
adc
and
cdq
fist
sbb
sbb
or
push
dec
bound
(bad)
cmp
loopne
mov
mov
ja
loopne
aam
popa
xlat
push
mov
pusha
repnz
in
add
scas
mov
fs
ja
pushf
jle
into
movaps
pop
fcom
mov
inc
movnti
add
xor
dec
fild
inc
bound
loope
fist
(bad)
mov
pop
or
cmp
sub
inc
xchg
sbb
pop
mov
in
in
push
popa
or
mov
repnz
pop
or
sub
mov
jo
test
aam
(bad)
push
loopne
ror
mov
push
pop
jo
mov
loope
outs
or
addr16
adc
push
rol
lahf
popa
or
aad
sbb
jno
lahf
dec
or
std
or
add
test
xchg
pop
mov
aaa
add
adc
test
pusha
inc
fimul
addr16
shl
xchg
arpl
fucomi
inc
hlt
enter
clc
pop
aam
es
ss
icebp
and
pop
hlt
cs
push
jl
pop
test
sub
push
movs
add
mul
into
dec
and
mul
sbb
pop
fnstcw
adc
and
mov
movs
int
push
stos
mov
and
pop
inc
movs
std
movs
mov
lds
scas
pop
aad
mov
repz
cmp
dec
loope
or
jge
cmp
jecxz
jecxz
iret
push
outs
and
lahf
mov
sbb
(bad)
aaa
push
sub
das
add
popa
mov
xor
and
bound
push
outs
loope
or
dec
dec
adc
mov
mov
adc
daa
inc
mov
cmp
outs
or
inc
pop
mov
add
je
add
inc
adc
pop
lds
nop
xor
js
pop
pop
scas
popa
pop
add
sar
add
jo
rol
push
xor
jae
loopne
sub
inc
or
scas
mov
mov
add
clc
add
or
das
test
jmp
push
or
das
(bad)
adc
xor
jbe
out
out
ret
nop/reserved
into
push
mov
cmc
cs
push
push
ins
add
nop
js
adc
mov
inc
adc
and
or
in
js
jns
test
cmc
add
or
or
jns
pop
sbb
lds
idiv
(bad)
push
dec
dec
inc
outs
jne
dec
xlat
add
fsub
inc
or
jp
add
cwde
js
or
out
push
pop
push
inc
pusha
push
ret
add
mov
rcl
sbb
(bad)
mov
cmp
add
add
mov
add
fnstenv
retf
outs
nop
push
add
cld
cmp
or
jnp
mov
pop
dec
in
mov
inc
mov
and
and
or
jecxz
outs
jb
push
(bad)
adc
cmp
inc
jb
sbb
add
jl
mov
enter
popa
add
inc
adc
push
xchg
pop
add
ins
add
pop
outs
xchg
test
ins
pop
mov
mov
cld
add
jnp
dec
or
imul
add
pop
cmc
inc
inc
jne
xor
fidiv
cwde
push
push
cmp
push
and
das
ja
push
and
mov
addps
out
mov
mov
push
push
fwait
sub
jp
bound
lock
arpl
js
cmp
jae
ins
xlat
loopne
xchg
imul
jecxz
js
mov
sub
sub
mov
sub
or
add
add
test
out
and
jnp
inc
pop
dec
inc
or
stos
into
ror
add
pushf
fmul
imul
dec
inc
jno
or
daa
daa
data16
out
add
xchg
xchg
or
mov
pushf
pushf
int3
cmovs
inc
sahf
adc
cmp
daa
and
hlt
or
mov
daa
daa
mov
aas
or
jg
outs
fistp
call
test
sahf
call
dec
push
(bad)
pop
fs
xlat
fs
aam
aad
pusha
stos
aam
clc
dec
mov
mov
jecxz
pop
or
inc
push
add
mov
cmp
jno
push
mov
pushf
mov
daa
pop
sub
outs
jns
dec
xor
xor
add
in
push
cmovns
mov
sahf
add
addr16
push
adc
adc
push
popa
jg
jg
sub
add
dec
xor
enter
or
inc
fs
adc
jp
push
popa
ins
jne
arpl
jmp
bound
inc
sub
push
mov
add
outs
or
add
sbb
call
adc
xor
movs
sbb
adc
jae
cmc
enter
push
(bad)
and
mov
call
add
mov
mov
or
shl
adc
and
inc
mov
gs
test
arpl
pop
xor
xor
call
out
imul
inc
mov
rol
into
imul
add
jno
mov
rcl
shl
xor
lea
mov
push
or
(bad)
stos
xchg
bound
inc
and
push
jo
gs
shr
push
ja
adc
and
rol
sbb
add
shl
xchg
scas
mov
shl
arpl
scas
arpl
in
dec
rol
(bad)
or
adc
or
cs
dec
or
ja
(bad)
push
lock
pop
adc
sub
jecxz
add
das
out
dec
popa
pop
and
lds
popa
pop
lds
sbb
es
es
or
jae
sub
dec
aaa
jae
cmps
fwait
adc
popa
imul
je
stos
ss
cmp
add
push
loope
popw
dec
imul
stos
into
imul
add
or
daa
jns
retf
sbb
sbb
js
outs
fild
pop
and
pop
xchg
push
push
push
ins
xchg
push
ins
or
loop
jns
pusha
or
adc
mov
mov
pop
xchg
mov
xchg
dec
test
jmp
sub
ins
mov
jae
sbb
add
push
leave
jmp
push
and
adc
sub
xor
fld
aaa
ins
outs
mov
sbb
jne
in
cwde
(bad)
mov
and
xor
sbb
loope
or
adc
inc
sbb
add
jl
fild
mov
hlt
or
inc
fs
mov
or
or
mov
test
push
sub
push
sti
cmp
popa
mov
imul
call
and
add
adc
aas
inc
je
cwde
fwait
sbb
inc
ret
and
or
add
or
add
aaa
call
iret
lods
inc
sbb
or
cmp
xchg
int
sbb
pop
mov
(bad)
pop
push
fmul
adc
jp
psubb
or
dec
test
add
jae
rcl
dec
pop
xor
jmp
(bad)
std
sbb
pusha
dec
pop
and
xchg
mov
lods
outs
ins
cmps
bndstx
lods
das
mov
and
pop
push
lods
add
adc
popf
mov
es
das
lods
add
jle
push
outs
in
or
lahf
sbb
scas
push
add
push
mov
aam
pop
(bad)
iret
(bad)
dec
sub
add
mov
and
pop
sub
jno
push
movs
pop
sub
sbb
or
pop
jo
dec
or
mov
mov
dec
pop
xor
mov
out
cmp
mov
mov
adc
cmc
test
adc
jl
cs
popf
das
repz
neg
or
pop
into
out
xor
push
mov
sub
xchg
push
push
push
sbb
not
pushf
mov
cmps
ret
imul
inc
cmps
add
or
mul
add
or
test
das
punpckhbw
test
test
dec
push
dec
dec
outs
cmp
out
sub
xchg
daa
daa
and
pop
sbb
jns
jecxz
leave
leave
enter
scas
in
in
in
sbb
out
jb
repnz
push
lea
sbb
ret
adc
cmp
xchg
int3
adc
in
push
out
test
cli
push
hlt
test
jmp
jno
and
cld
pop
xchg
push
call
sbb
dec
dec
shr
or
(bad)
jno
push
movs
adc
or
daa
inc
push
shr
(bad)
xor
dec
xcrypt-ofb
cmps
outs
mov
(bad)
mov
inc
pushf
sbb
sub
shr
ins
imul
or
aam
pop
ja
aam
push
adc
data16
xchg
jae
adc
out
cmp
adc
or
xchg
das
mov
ror
fwait
gs
dec
or
pushf
dec
(bad)
or
mov
sbb
add
inc
out
rcl
(bad)
jno
pushf
or
jne
enter
inc
mov
iret
jno
rcl
pop
test
xchg
dec
or
add
rcl
cmp
or
inc
pushf
arpl
xchg
arpl
arpl
arpl
lea
dec
inc
bound
dec
sub
loop
aaa
cmp
and
test
loop
aaa
imul
push
aaa
jae
pushf
sbb
aaa
sbb
rcr
bound
sar
mov
sbb
aaa
push
sub
jns
rcl
sbb
xchg
adc
cmp
aaa
xchg
xor
xchg
xor
jb
(bad)
loopne
or
jno
aaa
add
mov
push
int3
aaa
retf
cmp
and
mov
mov
jbe
adc
xor
mov
and
fisttp
add
pop
movs
mov
movs
shl
sub
test
add
je
shr
push
sub
iret
fisttp
popa
push
scas
movntps
test
pop
mov
fild
test
adc
add
out
sub
pop
mov
mov
mov
retf
dec
(bad)
push
and
paddd
dec
leave
cmp
loopne
sbb
sbb
outs
adc
adc
add
int
and
and
push
add
scas
pop
aad
test
mov
mov
aaa
mov
push
jbe
das
iret
jmp
pushf
and
neg
mov
js
push
movs
es
das
in
inc
adc
xchg
out
adc
cmps
cmp
pop
xlat
outs
movs
mov
push
cld
mov
dec
push
add
popf
pop
ror
sbb
jecxz
mov
(bad)
ffree
sub
push
lea
xchg
sbb
popf
sbb
rcl
lods
fbstp
xor
pop
in
add
ins
es
lock
jg
push
sbb
dec
push
push
cld
test
jg
cmps
mov
test
push
dec
clc
mov
sbb
scas
mov
cmp
or
ret
scas
sub
popf
adc
es
push
pop
pushf
mov
scas
jo
push
dec
outs
cmp
or
cmps
out
push
imul
push
scas
inc
fidivr
mov
fwait
loop
sbb
push
and
dec
xchg
(bad)
and
outs
xchg
daa
daa
daa
mov
xchg
xchg
xchg
dec
xchg
retf
push
sub
push
scas
idiv
cs
in
outs
sahf
ret
jmp
and
push
mov
jns
xor
pop
test
jmp
pusha
(bad)
mov
into
punpckhdq
add
mov
imul
int
inc
ss
dec
add
int
xchg
dec
sub
js
addr16
add
push
inc
gs
je
xor
ret
aaa
push
pushf
or
push
dec
adc
dec
lea
inc
mov
pusha
and
sub
int
pusha
mov
push
ja
mov
jno
pop
or
cmc
loopne
rcr
mov
mov
das
sbb
inc
(bad)
leave
fwait
add
int
adc
int
stos
push
pop
adc
or
rcl
add
and
test
push
mov
push
or
fwait
loop
inc
dec
pop
shr
lea
sbb
adc
cmp
add
mov
lods
xchg
scas
adc
fidiv
push
pop
add
ss
dec
mov
outs
xor
shl
push
retf
pop
pop
or
jae
and
or
and
jae
add
lods
and
mov
xor
and
mov
sti
or
adc
and
add
mov
nop
sbb
je
xor
xor
xor
mov
mov
and
pop
stos
mov
stos
dec
and
sub
or
pop
cmp
pop
cmp
fimul
inc
mov
fwait
jb
push
mov
int3
ficom
mov
les
mov
push
nop
adc
mov
push
fcomp
mov
xchg
jb
inc
lods
push
pop
movs
mov
push
jbe
push
and
push
push
pusha
xchg
(bad)
inc
retf
stos
or
aam
imul
(bad)
int3
add
push
mov
add
inc
clc
nop
arpl
and
hlt
jmp
adc
xchg
sub
fwait
push
movs
test
or
cs
pusha
and
sar
jb
add
lods
iret
jmp
inc
add
adc
and
fucomp
push
dec
add
les
mov
and
dec
ds
fstp
je
inc
mov
ficom
pop
sub
push
shr
jne
jl
cmp
aaa
test
cmp
jne
sub
xchg
sub
fs
addr16
mov
dec
xor
xor
(bad)
clc
mov
pop
push
push
mov
jp
dec
dec
stos
sahf
fsubrp
mov
ds
sbb
dec
std
push
imul
jo
bound
js
xor
cmp
xchg
cwde
aaa
pop
or
(bad)
or
inc
mov
aas
aam
push
enter
fisubr
jo
lock
mov
ror
mov
into
push
into
xor
(bad)
(bad)
push
add
pop
adc
xchg
jae
lods
enter
fisttp
xor
fcmovne
mov
and
xchg
jno
or
mov
adc
in
mov
js
sbb
mov
lods
add
push
mov
push
loopne
adc
add
cmp
outs
repnz
ins
push
addr16
or
mov
xlat
sbb
sub
addr16
into
mov
inc
sbb
jecxz
ds
sar
lods
dec
cmp
lea
sbb
dec
add
sub
(bad)
adc
inc
mov
add
test
and
mov
add
enter
fwait
test
pop
popa
pop
daa
rcl
or
inc
add
dec
mov
sub
inc
rol
add
xor
jo
fld
cmp
pop
push
or
and
mov
mov
mov
popa
imul
and
pop
push
jecxz
call
(bad)
fild
push
repnz
data16
add
cmps
and
test
shl
mov
and
iret
ror
je
pop
push
xlat
dec
pusha
inc
inc
or
add
mov
addr16
stos
adc
add
mov
aad
ds
fdivr
push
fsub
pop
push
adc
push
cmps
ror
cmp
scas
xchg
fnsave
pop
jne
pop
rol
dec
outs
je
jo
rcr
test
or
sbb
xor
dec
mov
pop
inc
aam
fbstp
daa
pusha
addr16
push
daa
mov
inc
xchg
pop
mov
test
(bad)
ds
mov
gs
mov
add
and
loopne
pop
outs
fcomp
lock
(bad)
cld
or
add
xor
iret
inc
pop
pop
dec
data16
pop
jo
in
fld
fcomp
jo
sar
mov
adc
mov
inc
jb
adc
mov
xor
mov
sbb
pop
call
lock
sbb
jae
fwait
jecxz
vmwrite
push
fimul
push
sbb
sar
pop
push
xor
in
inc
cmp
retf
lahf
call
mov
hlt
inc
inc
jne
leave
enter
dec
pop
mov
jmp
xor
in
xchg
retf
dec
jns
jb
xchg
cmp
sbb
fcomp
push
idiv
xor
cmp
aaa
inc
push
js
adc
push
jmp
(bad)
loopne
add
movs
div
add
dec
add
pop
push
xchg
dec
or
les
adc
mov
push
mov
mov
shr
xor
or
(bad)
sbb
mov
sbb
pusha
jns
push
cmp
push
ins
push
stc
popa
push
or
ins
push
dec
rol
mov
test
ja
inc
or
push
jae
int3
cmp
cmc
(bad)
add
out
xchg
inc
or
add
push
mov
leave
inc
xor
lea
pusha
push
lea
adc
rcl
sbb
adc
inc
mov
and
add
arpl
rcl
push
enter
call
and
inc
xor
and
aas
outs
xor
sbb
mov
(bad)
loopne
inc
sar
xchg
or
dec
add
pusha
jg
add
nop
push
push
test
mov
push
mov
pop
int
dec
push
mov
les
lea
stos
and
push
jae
inc
sbb
push
cdq
xor
add
push
jge
and
push
push
inc
and
lods
xor
push
adc
adc
adc
rol
rcl
push
or
or
xchg
loopne
push
adc
push
adc
push
ins
inc
push
mov
mov
cmps
adc
rcl
sub
or
rol
add
sub
or
lea
push
push
test
mov
enter
or
mov
bound
push
shl
mov
or
sub
mov
mov
popa
push
lahf
sbb
mov
add
popa
dec
imul
push
lahf
and
shl
jbe
mov
push
nop
add
pop
adc
sub
push
lahf
jo
(bad)
pop
jle
mov
rol
jne
sub
push
add
lahf
jno
mov
push
add
dec
sub
sbb
add
xchg
cmp
in
mov
push
lahf
or
test
loopne
ja
cmp
sbb
loopne
mov
adc
or
int3
pop
jmp
push
test
add
fsub
xlat
pop
pushf
not
jg
loopne
push
lods
(bad)
lock
add
into
or
add
sbb
mul
aaa
sbb
movs
adc
test
jo
mul
nop
jno
or
and
std
not
add
lahf
or
adc
in
adc
jge
add
cmp
aaa
jle
mov
xor
xchg
and
xor
and
xor
ss
fcmovnbe
and
or
rol
fcomip
call
or
or
loopne
xlat
adc
dec
push
ds
add
into
repz
popa
inc
xlat
sbb
xchg
int3
sahf
clc
sti
add
out
push
jl
add
adc
add
jmp
sbb
mov
add
fdiv
jle
ret
add
inc
mov
inc
and
scas
push
out
mov
pop
mov
or
icebp
xor
(bad)
jg
or
push
mov
cmps
inc
jg
jg
ficomp
nop
leave
add
dec
and
orps
je
mov
or
xor
and
loope
out
pop
push
jmp
cmc
aad
cmp
mov
jnp
ret
out
jne
mov
adc
add
loope
daa
scas
push
call
pushf
out
sahf
jo
out
add
cmovl
and
daa
jmp
and
cwde
pusha
(bad)
xor
add
call
ins
(bad)
icebp
addr16
fsub
ret
je
icebp
push
fadd
inc
adc
nop
aas
mov
adc
sbb
je
adc
xchg
pop
int
adc
or
int
test
add
pop
pop
dec
or
test
push
cmp
(bad)
inc
push
ins
outs
sub
mov
shufps
clc
test
sub
mov
out
or
pop
test
add
shl
add
(bad)
xor
rcl
arpl
std
sub
scas
pop
popa
pop
aad
dec
jle
add
xor
jge
arpl
mov
mov
sbb
adc
ret
push
or
dec
mov
and
mov
inc
pop
test
push
loopne
push
pushf
xor
mov
mov
push
add
fsubr
hlt
pop
pop
lock
push
push
mov
xor
fs
mov
gs
or
jge
add
xor
arpl
mov
add
popa
movhps
or
mov
xor
popa
xchg
mov
int
mov
pushf
pop
push
add
pop
pop
test
jl
(bad)
(bad)
push
mov
cmp
push
loopne
fsubp
add
repnz
mov
add
mov
sbb
scas
mov
or
repz
jne
int
rol
stos
push
mov
push
std
mov
scas
mov
aad
mov
sar
mov
rcr
aas
cmp
cmp
and
inc
ins
outs
ror
(bad)
dec
dec
adc
push
xor
xlat
jo
ja
lods
cs
shl
int3
xlat
add
in
mov
or
add
mov
add
xlat
out
test
mov
inc
add
add
dec
or
jp
popa
jge
add
push
jns
mov
add
sub
add
pop
add
xor
pop
or
in
push
push
mov
mov
cmp
sbb
sub
in
add
mul
add
fsubr
shl
dec
push
push
faddp
inc
enter
call
add
add
call
add
ss
push
or
lds
cmp
push
mov
nop
and
push
mov
adc
push
sbb
add
sbb
mov
cmp
push
push
or
inc
gs
mov
stc
dec
or
mov
arpl
arpl
nop
sub
mov
dec
addr16
sub
test
push
push
and
cdq
sub
add
add
adc
xchg
cwde
mov
scas
shr
pop
xlat
into
and
push
test
outs
jbe
add
pop
sub
add
rcr
xchg
mov
add
xchg
invd
mov
xor
mov
xor
enter
add
stos
inc
adc
mov
pop
adc
addr16
call
adc
push
leave
add
xchg
stos
ror
fbld
add
lds
sub
sbb
out
sub
aam
out
das
jb
push
inc
mov
push
adc
loopne
pushf
push
mov
xchg
mov
std
femms
js
imul
sbb
loopne
or
cwde
cmp
imul
rol
or
push
sbb
sub
and
pop
pop
and
shr
pop
sub
pop
cmp
push
rcr
push
lds
lea
rol
mov
ret
mov
pop
mov
add
mov
out
mov
xor
aam
or
cmp
mov
pop
sbb
fdiv
dec
sbb
add
outs
pop
pusha
add
sti
rcr
mov
sbb
add
mov
hlt
aad
xor
fs
rol
xor
sub
mov
push
cs
sub
cs
push
push
sub
ret
push
inc
mov
inc
repz
add
add
add
adc
and
outs
add
in
add
ds
add
dec
and
add
loope
out
test
mov
fadd
imul
scas
pop
mov
rcl
pop
add
inc
or
movs
fst
push
and
add
cs
test
loopne
gs
add
scas
pop
aad
js
lock
add
addr16
or
add
sub
fwait
loope
adc
jo
or
rol
gs
or
lods
add
(bad)
xlat
cs
add
fld
sub
add
and
sub
pop
or
fild
add
cwde
enter
frstor
dec
div
jae
shl
out
loopne
push
sahf
js
mov
mov
and
mov
sub
sbb
cmps
ins
xor
addr16
push
pop
add
loopne
add
jp
push
(bad)
push
cs
aam
mov
sbb
adc
push
add
lahf
pop
aad
add
pop
sub
test
sbb
nop
inc
ds
das
scas
push
fidivr
push
and
dec
push
js
test
ja
jne
mov
sbb
or
addr16
adc
and
imul
adc
loope
loope
aad
pop
and
jo
loope
mov
rol
adc
aad
pushf
retf
add
pop
shl
jl
adc
imul
add
push
bound
in
add
cmp
ja
addr16
rol
push
out
push
rcl
xchg
push
fwait
push
movs
out
push
jns
fbstp
add
rcr
sub
jl
fwait
sbb
jns
inc
add
push
xor
push
fild
push
into
mov
cli
fbld
in
xchg
or
rol
or
add
pop
xlat
lea
loopne
sub
js
sbb
push
push
xlat
ror
mov
sbb
push
mov
pop
movs
or
xchg
pop
int
mov
or
iret
in
aas
add
js
sbb
das
push
jp
ffreep
inc
enter
shr
push
adc
mov
inc
mov
andnps
adc
sub
sbb
cs
mov
stos
(bad)
or
cmp
xor
add
add
or
int
push
mov
pop
push
inc
pop
(bad)
std
inc
or
add
cmps
in
xchg
and
sub
mov
xor
dec
lds
loope
add
mov
scas
cdq
adc
sbb
scas
(bad)
clc
or
cmp
popa
imul
push
fwait
mov
jb
arpl
add
pop
iret
sub
adc
sub
rcr
pop
xor
mov
sbb
jle
push
inc
push
add
jle
les
loop
pop
mov
fcom
rsm
inc
adc
pop
dec
cmp
mov
loopne
push
shl
mov
(bad)
add
pop
jl
pop
adc
pop
lock
adc
pop
sbb
pop
shl
or
mov
mov
mov
jg
add
mov
pop
aam
repnz
mov
or
cmp
cmp
bound
push
push
test
dec
xor
add
sub
sbb
das
mov
jmp
stos
add
push
ins
rol
mov
push
pop
bswap
pop
add
bswap
pop
cmp
add
push
mov
std
push
and
adc
(bad)
in
xchg
and
std
jae
push
js
adc
mov
sub
iret
add
scas
inc
add
push
movhps
dec
mov
adc
iret
push
scas
mov
scas
ins
push
ja
pop
into
repz
and
jo
scas
call
out
xchg
test
sbb
add
adc
scas
push
jle
cmp
into
scas
push
xchg
sbb
push
xor
lods
pop
or
pop
inc
dec
inc
lea
loopne
sub
mov
or
call
push
inc
add
mov
sub
cmp
ret
inc
loopne
and
xchg
mov
sub
mov
ins
jbe
xchg
les
loop
inc
cmp
inc
adc
shl
int3
ret
and
fild
add
mov
mov
fisub
mov
push
loopne
ja
push
push
and
stos
gs
add
cs
and
int
and
ja
add
xchg
sub
sub
ja
mul
test
mov
add
scas
adc
xor
ins
add
cmps
or
dec
or
jo
lds
and
xor
sub
and
xor
jo
add
cdq
sbb
ja
mov
xor
cmp
(bad)
aaa
cmp
pop
mov
enter
mov
dec
cs
push
push
push
pop
inc
ror
mov
push
sub
fnstenv
call
xor
ins
jne
mov
(bad)
rol
mov
mov
jne
dec
mov
mov
loopne
aam
sbb
call
pop
fisttp
push
pop
mov
xchg
mov
sub
mov
pushf
mov
adc
loopne
das
cs
xchg
and
lock
push
push
xchg
sub
mov
paddusb
xor
fld
xor
addr16
rcr
mov
add
bound
rol
sbb
mov
das
inc
xor
mov
pop
outs
(bad)
push
or
inc
and
out
or
(bad)
into
xchg
add
jmp
in
test
(bad)
rol
dec
or
mov
data16
and
push
cmovns
lds
and
addr16
push
das
dec
rol
sub
mov
imul
mov
push
pop
cmp
pop
push
push
ss
pop
hlt
push
js
add
nop
pop
clc
daa
mov
(bad)
pop
gs
jo
pop
dec
xchg
pandn
inc
ret
mov
cmp
mov
stos
sub
stos
mov
outs
push
loopne
stos
push
call
and
mov
lods
add
mov
stos
adc
pop
push
shl
cld
in
in
mov
out
add
and
add
cmp
push
icebp
add
sub
fs
jge
loope
loopne
out
in
and
sbb
adc
push
push
push
mov
pop
adc
sbb
or
jmp
movs
push
cmp
cmp
arpl
jae
pop
sub
fucomip
repz
push
mov
cmp
ficom
xor
sub
or
sub
xor
pop
mov
push
mov
dec
xchg
push
adc
pop
mov
add
jns
arpl
popa
je
push
push
fistp
inc
ret
add
adc
dec
push
dec
inc
pop
dec
inc
dec
dec
inc
inc
push
add
mov
mov
add
arpl
pop
mov
inc
and
push
adc
aaa
add
inc
and
or
inc
and
and
cmp
xchg
add
jne
fisubr
arpl
dec
jae
aas
jo
xor
call
push
or
and
push
imul
sbb
add
fs
adc
xor
int3
jae
jne
push
pop
aaa
and
outs
push
and
adc
cwde
add
jne
ins
gs
dec
daa
(bad)
or
jmp
fstp
je
movs
sub
shr
and
fs
sbb
(bad)
mov
(bad)
outs
lods
push
and
xor
retf
dec
imul
dec
cmps
clc
jmp
in
add
push
pop
mov
xchg
add
inc
and
pop
add
mov
ins
mov
jl
mov
in
bound
lea
jl
mov
ja
mov
add
pop
test
scas
in
push
inc
push
add
mov
mov
leave
jl
fdivr
push
inc
sbb
stos
inc
stos
in
dec
inc
inc
iret
inc
in
shl
jb
pop
and
test
push
cmp
fst
mov
push
cdq
jne
cmp
loope
ret
adc
or
pop
xchg
mov
jbe
ret
adc
adc
movlps
jno
jb
pop
push
ins
jo
jns
pop
pop
adc
shl
jno
jl
adc
mov
rcl
jb
or
jmp
adc
arpl
clc
sbb
push
ret
sub
mov
cdq
inc
fdivr
pop
pop
add
mov
(bad)
adc
dec
add
mov
repz
cs
in
mov
int
ds
xor
cwde
xor
sub
cmp
hlt
fdivr
push
push
push
push
rcl
sub
imul
push
pop
outs
inc
das
push
add
out
mov
push
nop
push
cmp
push
push
in
ds
ins
ds
or
cmps
and
shl
mov
push
in
and
cmps
or
in
xor
adc
(bad)
xor
ds
cmp
loopne
adc
call
dec
pop
xchg
data16
sub
adc
je
ins
push
push
add
or
sets
xchg
mov
popa
xor
mov
mov
add
cmp
add
ss
xchg
cmp
gs
jae
sar
or
inc
cmps
jp
and
or
cmp
pop
lods
sbb
xchg
pop
adc
rol
mov
dec
jecxz
cmp
jg
jl
fwait
aam
cwde
sahf
push
dec
into
pushf
ficom
(bad)
div
in
lahf
jg
xor
push
dec
ins
add
jg
mov
inc
ret
jbe
jl
ins
fild
js
push
fadd
es
xor
adc
push
add
(bad)
push
add
push
adc
imul
sahf
or
or
movs
jbe
adc
fsub
iret
jnp
mov
mov
retf
mov
fst
es
push
je
add
clc
out
adc
leave
push
mov
rol
push
aam
xor
into
mov
jo
pusha
(bad)
pop
fdivr
cmp
add
xchg
jmp
ret
xlat
push
ret
adc
inc
vcmpsd
std
mov
or
jb
(bad)
cmc
inc
push
popa
jbe
outs
popa
bound
mov
imul
dec
data16
(bad)
adc
adc
push
or
cmp
fisub
aas
pop
push
mov
push
push
jo
mov
ret
jmp
shl
es
es
inc
mov
jo
fdivr
dec
inc
sbb
cmp
or
or
jns
fdiv
mov
sub
das
push
jns
or
pusha
cdq
dec
add
rcl
mov
push
mov
fld
mov
ret
sbb
sub
or
popa
mov
shl
mov
ins
cmp
pop
pop
add
xchg
xchg
out
pop
cmp
data16
hlt
push
add
test
xor
inc
dec
outs
aas
pop
add
call
push
dec
adc
push
push
add
inc
lock
out
mov
push
or
add
xor
jnp
push
out
jmp
bound
xor
and
push
nop
lods
stos
adc
int3
pusha
dec
clc
mov
ss
dec
pop
cld
push
inc
jb
jmp
test
mov
lods
xchg
js
inc
dec
ja
stos
daa
ins
xchg
outs
jns
add
sub
add
adc
adc
push
fisub
lock
dec
add
adc
arpl
loopne
pop
or
jae
mov
pop
push
cmp
sbb
add
push
sbb
cmps
pop
inc
pop
xlat
pop
mov
xchg
rcl
ins
xlat
sub
jne
inc
cli
cmp
add
mov
test
or
shr
xchg
mov
adc
xchg
dec
scas
xor
mov
cwde
jle
sbb
jae
pop
add
or
sub
xchg
mov
loopne
mov
mov
sbb
add
test
sub
dec
adc
mov
push
cmp
add
pop
fmul
fwait
int3
(bad)
mov
mov
ds
xor
jmp
dec
or
push
mov
dec
add
add
inc
or
out
cmp
dec
inc
sub
mov
add
push
xchg
push
or
jne
push
adc
add
pop
xchg
inc
dec
mov
push
sub
or
add
add
test
in
push
test
inc
add
faddp
hlt
adc
out
cmp
popf
neg
pop
push
mov
data16
aas
cmp
jo
push
dec
out
rcr
stc
inc
jmp
push
push
sbb
adc
or
sbb
sbb
add
pop
loopne
out
jbe
pushf
push
cmp
aam
iret
sar
sbb
nop
cmp
jge
es
js
add
scas
and
xor
cmp
repz
pusha
jo
nop
iret
repz
mov
fdivr
repz
loopne
call
repz
clc
cld
add
test
adc
les
in
xor
iret
pop
xor
jnp
inc
leave
add
add
popa
dec
sub
cmp
popa
jae
jb
ins
or
sbb
pop
adc
ins
sbb
push
push
xchg
mov
mov
xor
add
test
out
nop
lea
ins
ret
cmp
add
push
inc
icebp
adc
and
daa
mov
jno
js
push
dec
fadd
push
push
lods
mov
jmp
jne
mov
adc
add
inc
adc
lods
addr16
ss
int
or
add
push
lods
cs
jne
xchg
dec
mov
lods
or
sti
or
pop
lds
loopne
mov
add
jo
dec
into
mov
clc
cwde
inc
add
outs
test
les
sbb
sbb
mov
dec
cmp
add
push
and
loope
add
nop
pop
inc
outs
outs
movs
popa
stos
ds
ror
mov
popa
mov
out
add
adc
inc
mov
adc
push
gs
and
jno
add
outs
imul
dec
cmps
pop
and
xchg
iret
stos
mov
pop
dec
iret
scas
sbb
cld
ror
xchg
iret
mov
push
sahf
iret
jbe
iret
fiadd
push
pushf
shl
push
add
sar
mov
and
adc
cwde
inc
push
and
push
cmp
repz
inc
js
arpl
sub
jmp
jo
out
jecxz
stos
and
cmps
adc
dec
push
dec
daa
lods
sahf
add
mov
test
out
jg
push
add
dec
(bad)
fisubr
mov
add
xchg
test
movlps
clc
jmp
inc
mov
jle
shl
call
dec
mov
push
aaa
mov
adc
ja
mov
ins
xchg
ins
clc
fiadd
cmp
sbb
fcomp
test
add
pop
add
adc
imul
fs
scas
in
sbb
fadd
jne
nop
mov
inc
shl
push
adc
dec
mov
push
neg
pusha
gs
inc
nop
loop
cmp
or
pop
push
(bad)
neg
ror
retf
inc
jns
adc
add
jnp
gs
sub
stos
gs
adc
sbb
add
outs
arpl
gs
jne
aaa
shl
xchg
or
mov
add
mov
inc
jo
sar
push
push
or
or
js
imul
arpl
loopne
mov
add
sbb
jp
xor
push
xchg
add
jmp
lds
mov
pop
(bad)
add
jle
or
loopne
add
jl
and
sbb
mov
sub
inc
(bad)
xchg
jmp
add
mov
push
test
adc
push
add
add
fmul
inc
shr
ds
and
ret
adc
stos
jno
hlt
cmp
fsubr
mov
call
push
pop
push
jo
daa
cwde
mov
jnp
push
jbe
clc
test
mov
loopne
aaa
(bad)
dec
xor
les
xor
sbb
push
fdivr
mov
sbb
pop
add
jo
fnstenv
push
lahf
mov
dec
or
out
dec
out
add
pusha
test
push
xchg
push
mov
or
or
jo
xor
mov
mov
add
mov
sub
dec
xor
dec
loopne
xchg
push
iretw
dec
inc
sub
inc
sub
add
jne
ret
retf
jg
cmps
(bad)
adc
scas
pop
das
shl
cmp
add
push
outs
shl
adc
cdq
jl
cvtpi2ps
push
push
add
inc
sbb
jne
sbb
mov
aaa
xchg
stc
shr
push
pop
inc
gs
dec
jb
dec
bound
bound
jl
or
icebp
inc
push
shl
aaa
jo
or
aas
stc
jmp
mov
jmp
jne
xchg
add
xor
out
sahf
push
or
push
in
xchg
sar
push
addr16
pop
push
(bad)
dec
jb
scas
push
out
div
push
mov
adc
and
into
push
(bad)
cmp
bound
leave
ja
xor
or
scas
nop
and
pop
je
lods
adc
inc
jecxz
pusha
and
mov
int
int
add
sub
scas
or
push
mov
push
jns
(bad)
fnstsw
ret
jmp
add
(bad)
cvttps2pi
pusha
mov
pop
out
dec
cdq
cmp
dec
mov
xor
inc
add
add
mov
mov
adc
dec
lock
sbb
inc
das
pop
push
inc
dec
push
cmp
sub
daa
inc
xchg
fucomp
add
xchg
push
add
lds
add
mov
mov
pusha
js
jnp
ror
xor
daa
sbb
mov
(bad)
sbb
in
movs
movs
adc
or
pusha
inc
sbb
push
gs
icebp
inc
pop
das
cmp
or
mov
test
hlt
fcom
aaa
aam
add
push
pop
mov
cmp
jo
push
ins
mov
ret
mov
push
jl
adc
add
jne
xlat
enter
xor
loope
(bad)
dec
pop
imul
sub
push
loop
add
dec
test
push
xor
or
imul
mov
push
mov
repnz
bound
add
add
test
inc
pushf
xchg
fst
mov
dec
adc
push
mov
jmp
leave
sub
shl
in
in
mov
jb
repnz
cmp
jns
mov
pushf
mov
mov
inc
sahf
pushf
in
adc
dec
dec
movs
icebp
sub
daa
jbe
idiv
outs
xchg
cmp
scas
pop
fild
loopne
femms
push
cmp
push
mov
es
shl
dec
lahf
dec
mov
loopne
pop
mov
jecxz
dec
or
or
inc
jnp
cmp
jno
xor
adc
inc
daa
mov
xor
fmul
sbb
add
xchg
cmp
xchg
add
stos
add
outs
push
adc
xor
lods
loopne
inc
push
popa
jg
jg
dec
and
add
xor
ins
inc
inc
fs
movs
add
cmp
fist
sahf
dec
bound
sub
dec
ins
repnz
pop
pusha
das
and
or
retf
mov
outs
cdq
ja
push
mov
rol
popa
push
adc
dec
jp
and
jmp
cmc
jg
(bad)
movs
and
push
out
inc
(bad)
dec
xchg
jns
rol
lea
xchg
leave
fwait
std
ja
xor
and
add
popa
arpl
jbe
test
mov
push
clc
dec
jae
imul
iret
and
and
or
jno
jno
aad
mov
or
mov
xchg
push
xor
mov
fidiv
inc
add
push
les
and
int3
add
js
adc
add
xor
add
imul
add
dec
cdq
or
movs
loopne
mov
pop
stos
xchg
neg
xor
pop
xchg
and
or
clc
sbb
and
jae
sbb
push
mov
add
popa
inc
xchg
inc
push
add
inc
shl
push
cli
jo
nop
loope
into
dec
cmp
inc
stos
clc
mov
loope
sub
loopne
lods
or
dec
mov
pop
push
mov
ror
add
jae
sub
pop
int3
sahf
adc
xor
adc
cwde
inc
jge
inc
daa
test
sti
(bad)
shr
xor
ins
or
inc
or
inc
movs
add
sbb
adc
int3
popf
and
mov
inc
cwde
xchg
or
inc
dec
ror
(bad)
cmp
mov
push
jb
ins
test
cmp
or
dec
push
shr
add
aam
jo
sub
jne
mov
sar
mov
and
movs
sbb
xchg
inc
retf
add
or
imul
and
test
cmps
lea
js
pop
xor
jmp
mov
mov
lods
sar
push
sar
sub
sub
test
or
and
add
add
sbb
je
push
sbb
mov
add
push
inc
sub
adc
shl
aaa
inc
ret
sbb
aas
jmp
push
push
push
push
mov
mov
mov
adc
push
adc
lock
test
(bad)
jg
idiv
xor
mov
and
call
cmp
jne
mov
jmp
inc
dec
jne
mov
aaa
rcr
pop
pop
pop
pop
pop
ret
lea
test
je
add
call
(bad)
in
in
lock
js
ror
cwde
mov
mov
cmp
mov
pop
jo
fs
mov
add
sub
xor
mov
je
mov
and
xor
out
adc
sti
jg
mov
mov
xor
mov
push
push
mov
and
std
ins
addr16
fdiv
inc
pop
lahf
push
mov
outs
pop
fbld
dec
hlt
aaa
es
out
push
push
xor
mov
in
cld
xchg
mov
sub
mov
push
sti
int3
fsubrp
adc
mov
adc
jo
ins
(bad)
push
je
or
js
jae
mov
or
jl
jl
xchg
in
loope
fsubr
xchg
adc
rcr
int3
cmp
xchg
mov
in
push
push
cwde
adc
mov
fisubr
std
adc
dec
jmp
xor
int
pop
retf
adc
imul
fcom
or
inc
or
jbe
add
sub
inc
mov
or
pushf
call
mov
dec
ret
jmp
jmp
test
jne
mov
(bad)
mov
mov
mov
lea
push
lea
mov
into
mov
mov
mov
mov
push
es
jmp
lds
(bad)
or
pusha
sbb
pop
fistp
pop
or
push
mov
jmp
push
(bad)
jmp
mov
test
rcr
add
aam
jo
lods
cmp
push
lock
xor
mov
xchg
hlt
int3
pop
ret
or
ret
nop
fdivp
sub
mov
mov
mov
jl
mov
das
mov
push
or
cmp
jg
inc
mov
cmp
je
mov
jae
mov
inc
inc
inc
retf
mov
leave
mov
ret
clc
int3
cmp
mov
scas
lods
test
jne
xchg
adc
ja
lods
(bad)
shr
cli
fbstp
mov
inc
pop
sub
fs
add
mov
and
mov
or
xlat
pop
lock
xor
gs
cmp
je
cmps
jnp
movs
xor
cmp
mov
push
mov
dec
cmp
pusha
lock
je
lea
test
cdq
add
add
jmp
stos
jmp
call
inc
mov
mov
aaa
xor
or
(bad)
jl
inc
dec
cmp
jae
loopne
cli
adc
das
cdq
std
and
in
retf
dec
jne
mov
jmp
das
mov
adc
adc
ins
adc
lds
pop
and
push
xchg
mov
aad
jmp
cli
pop
or
adc
mov
iret
jne
mov
cmp
sbb
jbe
push
je
retf
hlt
adc
in
mov
les
adc
cmp
ret
popf
addr16
cmps
fisub
cmps
dec
and
test
sub
push
mov
mov
xor
jo
adc
inc
leave
xor
or
jecxz
sbb
shl
xchg
or
fsub
push
js
jp
and
ffree
mov
sar
sub
adc
sbb
pop
add
je
jbe
dec
cld
cmp
xor
mov
cmp
xchg
jns
sub
jo
add
add
out
adc
cmc
mov
ret
idiv
jno
arpl
adc
cwde
push
pusha
cmp
add
adc
jb
xchg
jne
mov
ja
clc
adc
jno
fdivr
imul
push
inc
jo
add
test
setg
and
je
xor
xchg
xor
or
ret
cld
mov
in
xchg
push
(bad)
push
jmp
(bad)
or
ins
or
dec
sub
data16
mov
inc
and
push
shl
inc
pusha
scas
mov
call
dec
test
pushf
cmps
into
or
push
mov
lds
jl
push
enter
pop
test
je
in
lds
or
adc
enter
xor
in
add
xchg
jo
sub
sbb
outs
or
or
xchg
sub
inc
sbb
fadd
inc
mov
cmp
retf
mov
ss
aam
les
pop
jp
or
fwait
add
lahf
dec
mov
paddq
cs
fimul
pop
and
fcomi
push
adc
jg
fdivr
mov
mov
ret
cmp
pop
jle
add
pop
inc
pop
iret
add
sahf
cs
sbb
mov
je
or
sub
dec
and
(bad)
shl
mov
shl
xor
pop
retf
ss
aas
aaa
or
or
int3
idiv
(bad)
fmul
inc
inc
mov
test
xor
clc
cmp
clc
(bad)
out
mov
dec
cs
mov
cmp
jg
lea
jno
inc
int3
adc
or
sbb
cmp
pushf
adc
arpl
fcomp
rcr
(bad)
xor
or
sbb
mov
arpl
and
sub
cmp
lock
ret
dec
repnz
inc
out
leave
push
xor
jl
ins
aaa
pop
mov
pop
mov
bound
dec
jmp
add
jle
inc
pop
push
inc
add
imul
add
aaa
push
and
out
jo
inc
pop
pop
cmp
jp
dec
inc
or
hlt
rcr
inc
dec
call
sub
inc
lock
adc
inc
out
add
adc
jne
pusha
jo
dec
fisub
push
sub
push
add
hlt
clc
hlt
push
pop
ror
inc
sub
lea
dec
xchg
xchg
xor
xor
test
push
sub
data16
adc
xor
leave
add
sub
ror
leave
add
sub
cmps
add
pop
movs
outs
xchg
inc
outs
add
sbb
(bad)
pushf
scas
pop
call
int3
push
out
jo
sub
push
inc
or
adc
sub
call
adc
in
mov
retf
shr
sahf
sbb
aam
nop
retf
push
rol
xor
in
cmp
and
in
cmp
lock
or
xchg
call
mov
test
jl
inc
push
shr
xor
in
loopne
loope
call
or
push
or
jne
jb
in
mov
mov
addr16
aas
ret
mov
sub
push
add
add
fnstenv
cmp
mul
loopne
push
imul
mov
inc
stos
test
sbb
sbb
push
pop
mov
mov
fs
mov
fs
je
popf
int3
pop
fs
adc
adc
ins
nop
or
xor
test
add
xchg
mov
mov
inc
call
aaa
push
js
cmp
je
inc
add
test
lock
clc
and
inc
pusha
mov
aam
cld
mov
loop
js
(bad)
mov
je
sub
jg
cmp
mov
sub
jb
dec
push
mov
cmp
jne
dec
clc
mov
les
(bad)
pop
jmp
popa
and
clc
push
loop
in
cmps
icebp
rol
jnp
aad
sar
je
mov
fcomp
shr
loop
xchg
cmp
out
inc
cmp
inc
aas
out
lock
loop
jmp
push
ja
mov
ror
sub
mov
pop
inc
xor
test
sub
add
mov
shr
push
xlat
adc
ss
pop
or
inc
call
loope
add
inc
fadd
adc
shl
outs
sub
shl
add
loopne
sub
shr
int3
jmp
(bad)
hlt
fwait
add
iret
ins
sbb
push
leave
jo
fcom
xor
(bad)
data16
inc
test
jno
out
dec
sub
add
jmp
js
fmul
xchg
pop
sti
sub
cmp
test
mov
lahf
arpl
movs
add
jge
loopne
push
sti
(bad)
dec
push
lea
mov
sbb
inc
test
movs
lock
xchg
inc
add
mov
enter
inc
and
jmp
loopne
mov
(bad)
mov
(bad)
lock
sbb
or
jge
jg
sti
test
mov
sar
push
or
je
mov
popf
stc
nop
daa
mov
dec
lea
mov
sbb
jne
fucomip
lsl
adc
jbe
hlt
cmp
mov
and
cld
sub
mov
mov
(bad)
jmp
data16
ret
or
jmp
adc
add
or
dec
pusha
je
or
je
push
xor
add
push
ins
dec
mov
retf
dec
add
xor
push
je
or
lock
out
sub
push
push
push
xor
adc
push
push
or
xor
aad
sbb
sbb
sbb
loopne
inc
adc
ret
xchg
dec
adc
pop
ja
and
out
xor
lea
fcomp
dec
dec
cld
mov
mov
push
mov
loope
enter
or
sbb
out
push
icebp
or
lock
(bad)
ds
aam
push
(bad)
cwde
loopne
jmp
sbb
mov
adc
ds
add
inc
ffree
sbb
inc
push
js
loopne
xor
sbb
out
sbb
test
push
fxch
mov
clc
sar
mov
(bad)
jo
loopne
cmp
lods
popa
cmp
pusha
sub
cmp
inc
inc
jle
cmp
cmp
les
inc
jg
(bad)
jmp
add
add
pop
cmp
call
cmp
jl
add
ins
cmps
call
add
ins
outs
jle
icebp
fisub
or
xchg
je
inc
aam
aam
pop
jl
inc
enter
add
dec
and
and
(bad)
call
mov
dec
push
cdq
mov
clc
sub
and
adc
movs
loopne
inc
adc
cmps
inc
sbb
int3
pushf
lock
push
hlt
jge
pop
or
call
fisttp
or
(bad)
push
aas
shl
dec
mov
pop
xchg
cmp
mov
add
cmp
jg
adc
add
inc
add
pop
je
cmp
pushf
int
loop
aad
dec
and
mov
popa
mov
push
push
jmp
push
dec
sub
test
cmp
in
imul
mov
mov
jle
sbb
dec
hlt
add
mov
push
js
inc
aas
push
inc
push
js
push
lods
cmp
mov
test
fadd
ja
pop
inc
idiv
test
push
inc
add
jo
add
cmp
adc
int3
push
in
sub
xor
or
sbb
or
mov
ja
inc
dec
jne
lds
jo
arpl
es
aam
dec
mov
or
pushf
mov
(bad)
retf
sbb
and
inc
out
cmp
sub
push
sub
push
pop
lock
cmp
pop
inc
dec
jne
mov
div
push
jne
or
popa
vcvttsd2si
adc
stos
sbb
xor
cdq
adc
pop
or
cli
(bad)
mov
loopne
or
inc
dec
nop
mov
push
xor
mov
gs
mov
mov
mov
push
xor
or
sub
inc
out
inc
cwde
fisub
mov
cmps
push
and
push
call
mov
movs
cmp
sbb
test
sbb
ja
mov
(bad)
lea
dec
or
leave
add
pop
adc
add
dec
pop
test
ret
xchg
mov
adc
(bad)
pop
jmp
push
inc
rol
inc
dec
bound
add
je
ds
or
(bad)
aas
adc
cvttps2pi
jae
outs
sbb
push
or
and
mov
cwde
add
sbb
inc
gs
jne
je
mov
pop
mov
shl
add
xchg
ret
cmp
xchg
leave
sub
push
jo
test
pushf
out
pop
cdq
jns
jo
retf
aad
movs
sbb
mov
scas
test
xor
push
mov
add
pop
out
inc
mov
xor
add
or
or
jp
dec
cmp
pushf
jge
add
or
fistp
js
push
mov
and
cmp
push
fsubr
imul
push
xlat
add
jge
inc
add
jmp
sub
jns
dec
inc
cmp
xor
sbb
test
inc
outs
cwde
test
inc
xlat
dec
sub
add
les
test
fld
jne
lds
dec
or
dec
or
(bad)
add
jo
retf
push
jp
fadd
lahf
adc
or
add
ds
or
sti
push
imul
fucom
mov
or
dec
and
shl
xchg
lock
jnp
pop
pop
add
in
ret
loope
out
scas
push
jg
sub
sbb
cmp
xchg
loopne
push
in
add
dec
mov
mov
fsubr
(bad)
fild
into
push
add
xor
jbe
inc
jb
popa
jns
popa
mov
popa
shl
outs
xchg
add
xor
aad
retf
scas
rcr
aaa
lods
call
jb
dec
outs
fs
push
adc
inc
xchg
pop
push
outs
and
add
mov
fdiv
jnp
int
fcomip
push
int3
mov
sbb
xor
lods
cmc
push
jno
inc
add
mov
call
std
mov
retf
scas
add
lds
mov
shr
dec
nop
mov
sbb
std
push
iret
outs
ret
int
into
adc
mov
push
dec
pusha
je
cmp
cmp
js
add
adc
shr
inc
inc
imul
jo
jbe
arpl
add
out
mov
fistp
repnz
dec
mov
inc
sti
xchg
xorps
jo
cs
xor
xchg
arpl
in
fwait
movs
or
mov
jnp
push
je
pop
xchg
mov
push
push
push
repz
and
pmaxub
frstor
fiadd
xchg
or
jmp
cmp
add
jbe
mov
push
inc
arpl
mov
and
inc
nop
popa
arpl
addr16
cld
cmp
add
or
inc
jae
cld
out
jo
dec
sbb
pop
dec
jb
sbb
rcr
out
mov
inc
add
loopne
movs
push
xchg
loope
das
inc
sbb
mov
or
inc
fs
cwde
cmp
adc
add
or
lock
cs
inc
sub
gs
sti
pop
jbe
sub
jne
je
movs
push
pop
out
push
or
jae
stos
movq
mov
add
inc
scas
fadd
xlat
push
mov
sub
mov
sbb
into
dec
add
sub
push
push
popa
pop
pop
cmp
pop
ret
bound
add
and
inc
add
fld
adc
push
add
loope
sbb
rcr
jb
fmul
mov
aas
dec
outs
aas
xor
loop
imul
outs
jo
xchg
call
pop
add
mov
ss
pop
pusha
pop
cmp
addr16
addr16
packuswb
cmp
ins
fild
jno
ins
fadd
jne
add
addr16
outs
imul
clc
aad
cmp
push
test
jb
jnp
mov
add
jecxz
bound
adc
adc
or
out
arpl
push
stos
mov
pusha
popa
mov
sub
push
xchg
sbb
jle
dec
ins
jo
arpl
dec
mov
and
fmul
js
mov
(bad)
push
fimul
add
loopne
add
inc
mov
mov
jl
jne
add
mov
mov
pop
cmp
push
cmp
push
push
push
mov
cld
mov
test
or
dec
int
ds
ret
and
fild
fld
mov
sbb
fld
pop
pop
push
out
leave
fild
or
lods
(bad)
push
hlt
fstp
bound
jmp
jmp
xlat
add
loope
xor
adc
cmps
in
and
and
int
add
xchg
xchg
mov
add
or
sbb
in
test
(bad)
mov
xchg
mov
fild
fmul
fstp
fldz
fcomp
fbld
ja
fld
fadd
or
push
adc
push
adc
mov
jbe
push
nop
sub
std
jge
clc
pop
adc
xchg
movs
sbb
mov
cmps
fcom
fcom
daa
imul
lds
cmps
test
iret
or
mov
ret
test
cwde
call
ins
test
sbb
pop
pop
mov
xor
cmc
push
out
inc
retf
cld
bound
adc
cmp
stc
sub
loopne
add
mov
imul
adc
neg
xor
or
mov
in
iret
in
ss
dec
add
(bad)
sbb
ja
test
inc
in
mov
fdivr
push
inc
sbb
add
adc
outs
arpl
retf
push
push
inc
jbe
fs
pop
sub
sbb
mov
inc
les
ins
aaa
in
int
add
or
pop
in
das
repnz
add
adc
aaa
push
scas
stos
js
gs
xlat
pop
xor
daa
jno
jbe
push
ret
dec
aas
adc
jo
inc
stos
add
jge
inc
cmp
ins
je
push
je
add
pop
shl
push
sub
xchg
or
inc
ins
bound
or
mov
pop
aad
out
aaa
mov
repnz
or
bound
xor
test
lahf
aaa
mov
pop
add
add
in
xchg
dec
mov
fs
repnz
sub
outs
(bad)
or
outs
jo
cmovs
pop
xchg
gs
jmp
loopne
gs
arpl
data16
cmp
sbb
and
or
mov
and
or
sbb
out
sub
sub
add
push
outs
push
outs
imul
pushf
movs
sbb
push
cwde
addr16
or
pop
push
leave
mov
add
sub
mov
push
imul
xor
inc
jg
or
repnz
bound
cmp
gs
sbb
je
jge
(bad)
ror
(bad)
es
xor
adc
push
dec
jae
cs
cwde
sbb
mov
inc
mov
add
lods
das
test
daa
or
bndstx
mov
add
iret
lods
test
test
imul
inc
mov
or
push
pop
sbb
or
leave
jge
pop
dec
(bad)
adc
add
push
les
cmp
add
add
push
xor
outs
dec
sub
push
and
sub
cmp
loope
add
cmp
jne
mov
aaa
lods
(bad)
call
enter
jmp
mov
and
lea
mov
icebp
add
adc
movzx
add
push
(bad)
mov
pop
clc
out
dec
cli
mov
inc
mov
lea
jl
xor
xchg
mov
loope
inc
(bad)
push
inc
out
add
inc
add
pop
les
rsqrtps
inc
push
out
and
cmp
cdq
or
and
mov
inc
inc
or
es
mov
mov
cdq
add
adc
call
test
ss
(bad)
test
add
fcmovu
or
in
jo
sbb
jle
mov
pop
sub
or
mov
je
add
int
pop
xchg
add
or
mov
push
sbb
mov
pop
push
imul
xchg
div
inc
callw
(bad)
sub
ss
call
add
faddp
pop
mov
outs
lods
inc
in
add
cmp
mov
jmp
jle
mov
push
or
inc
lds
or
push
adc
iret
add
call
and
dec
loope
adc
ds
jmp
pop
pop
scas
ins
pop
push
mov
add
pusha
test
sbb
call
ret
cmp
pop
adc
scas
shl
push
adc
out
pop
cwde
aas
in
popf
ror
fld
fmul
and
ins
sbb
or
sub
adc
xor
rcr
fiadd
sub
and
adc
rcl
ins
adc
adc
repz
gs
fsubrp
aaa
or
sti
cld
cmp
or
lock
js
outs
out
int3
mov
mov
call
rol
jne
cmp
sete
xor
or
(bad)
int3
loopne
cmp
cmp
fwait
add
lock
fcompp
dec
inc
add
wrmsr
sub
xchg
and
or
push
dec
xchg
cmp
and
idiv
push
cmp
aam
in
cmps
or
jmp
addr16
mov
ja
outs
or
fwait
push
adc
and
or
mov
test
sbb
xor
ds
cmp
add
add
mov
call
add
gs
mov
adc
aas
adc
inc
jnp
xor
in
lods
add
sti
call
outs
clc
jno
nop
push
pop
inc
jne
(bad)
mov
nop
inc
pop
sbb
push
jb
or
jmp
pop
push
push
add
xchg
push
mov
or
jmp
add
push
sti
jns
xor
adc
cmp
aaa
push
push
sbb
mov
mov
call
xor
mov
int
sub
xor
int3
sub
dec
fsub
dec
fcom
pop
jns
mov
ror
mov
xor
int3
cs
lock
or
or
nop
out
push
les
test
dec
xor
xlat
and
int3
mov
jne
fndisi(8087
xchg
ret
mov
loope
push
pop
mov
mov
xor
call
adc
call
inc
add
xchg
hlt
mov
jbe
or
ins
or
push
xchg
pop
jmp
ret
add
add
test
jo
add
inc
cld
cmp
push
sbb
and
xor
add
pop
out
fnstsw
sub
dec
ins
mov
or
fwait
sub
inc
push
push
add
or
add
in
inc
outs
fs
jge
loopne
cli
add
ins
and
and
push
xchg
std
push
imul
jbe
test
in
or
daa
add
mov
cs
pop
lods
ret
lds
pop
addr16
pop
inc
adc
ret
ss
movs
mul
pop
mov
out
test
aaa
push
add
or
xor
dec
push
test
mov
lock
movs
and
inc
sub
ret
pop
adc
mul
inc
je
push
js
push
loope
or
cwde
jmp
clc
jmp
pop
and
xchg
pushf
add
pop
gs
mov
rol
and
les
dec
out
mov
(bad)
add
or
mov
fwait
jno
add
lods
movs
pop
add
dec
lods
adc
or
fmul
mov
mov
aaa
call
push
popa
imul
sub
outs
(bad)
rol
test
test
gs
inc
or
xor
mov
inc
loopne
and
add
ds
jbe
add
or
inc
popa
add
push
ss
push
adc
push
mov
cmp
xchg
sub
adc
pop
mov
ins
das
jp
(bad)
xchg
out
sbb
adc
xchg
or
stos
mov
pop
push
outs
jne
or
add
adc
mov
mov
mov
push
mov
pop
pop
push
mov
ss
test
add
push
xor
push
pop
mov
inc
jne
mov
push
fld
add
add
and
ds
addr16
jne
scas
test
loopne
pop
sahf
xchg
mov
lds
ja
push
dec
push
adc
sub
loopne
ss
aaa
jp
(bad)
retf
test
pop
pop
sub
test
mov
cmp
dec
add
mov
ret
or
dec
xchg
aad
add
xchg
aas
xor
push
dec
push
inc
ds
pop
or
test
or
add
out
add
add
rol
dec
popa
jae
add
add
add
out
mov
js
out
xor
fs
add
adc
add
dec
cmp
sbb
aas
pop
loopne
ins
push
jle
push
dec
fild
jo
dec
lock
pusha
pop
and
and
iret
add
pop
sbb
ins
je
xchg
push
mov
retf
in
and
outs
or
inc
sar
sub
push
sahf
outs
or
jb
dec
bound
add
add
sti
adc
cmp
jns
xchg
pop
(bad)
arpl
loopne
sbb
pushf
ffree
jge
mov
out
add
fdiv
push
mov
sbb
dec
inc
mov
dec
adc
xchg
or
cmc
loopne
and
dec
sbb
ins
outs
xchg
add
pop
add
sbb
inc
mov
je
and
cs
fadd
push
addr16
xchg
shl
sbb
add
cld
sub
adc
fnstenv
bound
pop
lea
shl
or
push
in
xchg
lds
dec
out
test
or
cmovs
pushw
std
shl
pusha
fadd
scas
xlat
push
imul
cmps
push
adc
pop
ror
dec
loope
psrld
clts
sbb
add
adc
pop
dec
shl
xor
shl
cmp
dec
inc
sub
add
das
test
dec
dec
jnp
sbb
add
lods
mov
neg
popa
add
das
sti
push
or
loopne
retf
out
mov
lods
push
add
xor
add
and
inc
(bad)
sub
xchg
push
inc
dec
jl
or
sar
push
or
add
cdq
push
dec
pusha
sub
sbb
cmp
inc
jmp
add
arpl
jae
adc
call
mov
adc
pop
pop
adc
cmps
pop
or
mov
outs
fistp
push
cmp
nop
cmp
mov
mov
or
sbb
es
das
adc
push
into
call
imul
jge
in
add
mov
clc
das
scas
rcr
push
and
add
cmp
ror
pop
imul
cmp
sbb
push
push
adc
je
pusha
(bad)
lock
lahf
adc
push
std
pop
std
pop
or
ror
xchg
add
cmp
enter
xchg
xchg
jo
retf
xchg
sbb
add
pop
adc
or
inc
sbb
inc
inc
cmp
jns
add
gs
mov
or
ins
in
pop
je
adc
ret
mov
add
or
pusha
pushf
inc
add
add
dec
in
cmp
or
nop
pop
stos
push
add
sub
mov
mov
nop
das
(bad)
sub
loope
xlat
mov
aad
or
cmp
mov
push
aad
add
lea
test
pop
daa
iret
jne
mov
cmc
jbe
dec
sbb
arpl
sbb
cmps
ja
retf
pop
mov
dec
inc
sub
and
or
mov
scas
fimul
adc
adc
nop
rcl
xlat
push
mov
shl
sub
pop
push
add
add
xchg
or
loope
mov
or
int3
je
xchg
imul
pop
fwait
adc
mov
cmp
mov
mov
je
push
pop
push
pop
jns
lds
add
dec
mov
dec
ds
adc
adc
movs
pop
add
in
sub
adc
aad
repz
adc
sub
cmp
(bad)
lods
mov
(bad)
fwait
or
dec
clc
daa
nop
jmp
push
jmp
mov
mov
ret
call
push
ja
pop
xlat
mov
dec
scas
push
shl
fwait
push
mov
add
dec
dec
mov
scas
loopne
pop
cmps
sub
adc
repz
add
jnp
adc
movs
mov
retf
fiadd
add
push
cld
lods
pop
aaa
sti
es
xlat
or
adc
xlat
in
xchg
jp
clc
xlat
fwait
call
scas
(bad)
push
xlat
push
stos
push
mov
shr
cmp
add
aad
lods
scas
fwait
inc
je
jns
or
mov
pop
pusha
adc
rcl
and
mov
(bad)
ret
fwait
sbb
xor
ss
stc
das
xchg
sbb
cmp
hlt
das
pop
scas
adc
xchg
cmp
cmp
(bad)
push
add
push
les
aaa
push
ret
popa
xchg
inc
fmul
dec
sbb
cmp
xor
dec
(bad)
sbb
imul
add
fdivr
lea
inc
inc
jb
ja
push
fs
xor
test
dec
outs
loopne
mov
xchg
lea
imul
(bad)
rcr
xchg
xor
push
das
xor
xor
jmp
inc
popa
test
int3
cmp
sbb
sqrtps
xlat
and
or
out
bsr
and
rcr
pop
sbb
push
test
popa
rol
mov
and
out
sub
push
call
mov
or
inc
inc
popa
cwde
xchg
add
jno
cmp
add
mov
scas
or
sub
jno
fisubr
xchg
ret
add
dec
cmp
xor
adc
outs
or
add
add
or
jae
dec
pop
add
daa
cmp
fwait
add
add
dec
add
or
mov
inc
loope
add
or
jnp
xor
movs
or
xor
sbb
push
mov
or
or
xchg
shl
imul
jge
push
loope
imul
xor
inc
mov
fidiv
bound
(bad)
arpl
push
rcr
and
push
jns
xlat
sbb
and
jl
ret
inc
sub
dec
loope
push
dec
jb
xchg
out
and
rcl
test
and
jae
pop
dec
xor
adc
shl
or
out
jb
xor
shr
push
cmp
sub
loopne
sbb
lds
pop
pop
in
std
mov
push
pop
xchg
addr16
sbb
add
and
or
ror
in
jo
mov
out
add
or
push
push
aaa
pop
add
mov
or
sar
mov
cmps
jbe
fs
out
add
jae
push
fadd
outs
js
push
and
cwde
fwait
or
pop
inc
or
and
inc
dec
js
or
or
imul
mov
jl
push
lock
test
(bad)
sub
jl
lods
push
add
xlat
icebp
and
jo
sub
adc
inc
dec
ja
lea
imul
shr
jmp
push
add
cmc
add
and
mov
inc
js
daa
lds
sbb
push
pusha
adc
pop
loope
adc
or
pusha
and
adc
cdq
xor
or
cs
scas
add
and
test
mov
push
jecxz
(bad)
inc
lock
mov
mov
xor
mov
sbb
push
sar
push
mov
fmul
(bad)
cwde
jo
inc
add
leave
mov
or
outs
add
dec
js
(bad)
jo
fs
imul
push
jo
mov
ret
in
fnsave
les
fcom
lea
(bad)
mov
in
add
mov
jne
rep
push
rol
clc
mov
mov
sahf
mov
pushf
mov
mov
add
push
sub
or
inc
cmp
and
add
pop
jg
outs
pusha
sar
adc
outs
mov
and
add
jle
adc
jo
outs
mov
ins
and
iret
aaa
xchg
cmp
in
push
and
or
mov
mov
lock
add
fild
mov
(bad)
adc
fsubr
mov
call
cmp
or
sete
and
je
(bad)
mov
pushf
clc
pusha
jmp
pop
sub
pop
ret
pop
mov
cli
adc
xchg
sub
neg
push
mov
pop
test
mov
sbb
sbb
inc
add
std
(bad)
retf
push
or
or
loope
pop
ret
inc
les
and
hlt
ret
cmp
sahf
or
jae
sub
cld
xor
mov
lods
xor
push
push
lock
push
mov
callw
cmp
or
movzx
dec
cmp
mov
hlt
imul
sub
mov
jmp
lea
stc
pop
push
fimul
fidiv
jae
inc
fsubr
fcomp
inc
sub
or
pop
(bad)
adc
pusha
or
sbb
push
mov
jle
jne
ret
jmp
in
clc
loop
in
ret
inc
sti
push
pandn
mov
sbb
leave
ds
pop
jne
cmp
or
in
jp
push
add
xchg
adc
mov
mov
cmps
mov
pushf
add
mov
pop
clc
fwait
xchg
cld
add
fidiv
enter
jae
and
out
scas
fdivr
add
rcl
ret
add
ret
add
sub
push
inc
or
or
fwait
xor
hlt
shr
xor
jbe
ret
out
imul
sahf
add
call
jae
inc
adc
pop
imul
lods
mov
and
jmp
jmp
out
or
mov
fdiv
mov
xor
jb
fnsave
fadd
cmp
loopne
out
jge
pop
dec
mov
cld
dec
sub
jmp
sar
dec
xchg
(bad)
mov
ds
inc
jbe
jg
adc
js
xchg
mov
cmp
jg
adc
mov
aas
jne
mov
and
adc
mov
and
jge
shr
mov
out
pop
or
nop
fs
scas
mov
inc
sub
sub
mov
push
(bad)
mov
mov
test
bound
mov
mov
push
push
push
dec
sbb
cmps
aaa
adc
fidiv
clc
fstp
fwait
cs
inc
stos
lock
out
ja
pop
adc
sahf
js
(bad)
movs
adc
mov
xchg
inc
call
or
imul
cdq
mov
mov
mov
cmp
test
and
and
mov
std
lea
lea
test
sbb
dec
mov
add
bound
sahf
jo
jo
xchg
xlat
add
hlt
setge
popa
mov
in
jp
outs
push
or
add
sbb
pushf
movs
sub
mov
xor
jmp
mov
cdq
(bad)
iret
pushf
aad
fstp
xor
mov
adc
inc
push
outs
mov
retf
pop
xor
add
clc
mov
sub
mov
or
(bad)
pop
loop
imul
mov
clc
push
mov
cld
scas
add
push
and
fdivr
sub
pop
mov
test
add
pop
jbe
das
sbb
xchg
mov
cld
pop
cmp
fadd
jg
shl
ficom
in
mov
aad
aad
adc
pop
aad
and
(bad)
int3
jmp
mov
popa
push
jge
(bad)
adc
mov
cmp
xor
pusha
jne
adc
adc
cmp
mov
test
shl
inc
out
lea
lea
push
mov
call
sub
sub
xlat
sub
fistp
mov
movzx
sub
int
add
jne
mov
xor
rcl
aam
inc
xor
or
xor
sbb
call
mov
xlat
mov
jg
and
add
loope
mov
push
ret
nop
jmp
cmp
sbb
mov
aas
sbb
inc
ja
push
les
ret
adc
loope
sar
push
loopne
(bad)
mov
call
cmp
add
aaa
push
mov
popa
or
push
cmp
lods
int3
adc
mov
ds
lods
adc
in
add
add
jae
shl
pop
mov
shr
adc
jbe
add
or
les
iret
data16
retf
push
movs
xor
dec
add
mov
call
adc
inc
sub
xor
loop
ins
hlt
cli
inc
mov
jge
cmc
xor
(bad)
adc
mov
jnp
push
das
test
imul
jae
fdivr
mov
jmp
or
mov
std
sub
test
jle
out
push
mov
adc
adc
int
in
mov
push
aam
mov
sub
or
jg
sbb
xchg
push
enter
push
jmp
scas
pop
mov
inc
mov
mov
jl
jb
or
fs
bound
sbb
add
inc
ja
test
pop
mov
and
fs
adc
test
int
ja
aaa
aam
call
fcmovbe
push
inc
push
fst
int3
sbb
fist
jo
fist
test
aam
fdiv
adc
mov
data16
push
or
outs
test
je
leave
add
mov
push
mov
sbb
xchg
adc
movs
hlt
sar
inc
call
arpl
adc
(bad)
test
pop
mov
jne
(bad)
inc
and
mov
fild
pop
and
inc
sbb
(bad)
in
out
not
xor
or
inc
add
and
push
push
das
sbb
mov
(bad)
xor
push
dec
pop
add
lods
stos
xchg
xchg
pop
retf
cmp
pop
push
(bad)
pop
mov
push
push
clc
mov
inc
mov
ins
in
fmul
dec
mov
sbb
sahf
jmp
mov
sub
mov
sbb
int3
cmps
sbb
add
icebp
jg
mov
cmp
mov
or
cmp
push
sub
xchg
or
sahf
jo
or
inc
or
stos
mov
rol
or
pop
pusha
push
or
das
fdiv
add
(bad)
cmp
es
inc
sbb
adc
retf
adc
pusha
push
or
push
inc
xor
data16
push
and
xor
call
adc
inc
xchg
movs
cmp
add
add
cld
call
addr16
push
clc
mov
clc
gs
imul
xchg
pop
add
inc
stos
add
push
cld
mov
jl
mov
mov
xchg
popa
lock
fldcw
mov
add
clc
in
cmp
inc
or
or
and
pop
dec
pusha
mov
jecxz
je
aad
test
xor
mov
icebp
inc
pusha
daa
(bad)
in
ret
daa
and
xchg
pop
hlt
inc
hlt
xchg
test
push
inc
pop
xor
pop
or
or
push
xor
xor
cmp
das
push
call
sbb
mov
jmp
jo
and
ins
jb
mov
add
cmp
jge
push
call
(bad)
in
call
inc
shr
and
inc
sbb
cmp
push
jmp
or
fadd
inc
jp
out
div
sbb
xor
push
mov
pusha
sub
add
stc
xchg
add
xor
loop
test
inc
cdq
(bad)
dec
into
retf
rcr
movups
jmp
xor
sub
xlat
mov
clc
jg
jne
loope
mov
jg
add
inc
inc
mov
xor
or
cmp
push
mov
es
or
xor
retf
int
popa
ins
popa
in
stc
add
adc
popa
and
dec
inc
or
push
pop
pop
inc
stos
(bad)
mov
cmp
(bad)
jg
xor
xchg
fdiv
dec
push
pop
lds
mov
data16
sbb
loopne
xor
mov
loopne
add
push
les
xchg
lahf
gs
xor
dec
aam
mov
shl
hlt
jp
mov
call
ret
pusha
pusha
push
push
aam
inc
push
sbb
in
loop
shr
call
and
xchg
mov
and
les
push
int3
lea
mov
loop
jmp
call
popa
adc
daa
sub
movs
fistp
rcl
leave
je
test
jne
(bad)
jmp
mov
and
cdq
xor
sub
cmp
ret
subps
aaa
adc
imul
cmp
lock
jle
dec
gs
pop
mov
imul
cmp
inc
adc
mov
fild
dec
mov
push
ret
fmul
(bad)
push
mov
aas
test
dec
int3
xor
push
or
dec
xchg
push
leave
pop
or
call
add
out
scas
add
adc
add
and
sub
pop
shl
adc
loop
cwde
shl
push
push
mov
test
push
mov
loopne
daa
jbe
push
ss
add
loopne
jmp
icebp
mov
xchg
int3
into
adc
pop
lods
inc
add
in
cmps
ss
lock
ror
jle
inc
loop
lock
call
jg
popf
nop
cmps
in
jl
sbb
adc
add
jmp
lea
add
loopne
out
xor
add
xchg
dec
(bad)
fcmove
sub
cmps
mov
mov
out
or
dec
scas
and
int3
fisub
into
cmp
dec
ins
sub
push
sub
xor
loopne
(bad)
or
push
or
push
push
in
out
in
xor
push
ret
(bad)
retf
loopne
xchg
push
inc
in
jbe
hlt
sub
mov
clc
mov
loope
movs
jecxz
call
add
mov
mov
push
je
pop
dec
jo
adc
les
aaa
add
xchg
retf
add
neg
mov
cmp
dec
aad
ret
imul
ins
cmps
sbb
ret
loopne
loopne
adc
js
mov
ds
and
je
aam
cmp
ret
movs
aad
sbb
loopne
sbb
call
jbe
sbb
adc
sub
scas
jmp
or
adc
pop
lods
jp
pusha
rol
mov
jne
cld
push
add
jbe
test
xchg
or
xor
in
push
cwde
(bad)
aad
pop
add
fsub
xor
test
jecxz
cmp
enter
das
addr16
and
mov
adc
(bad)
and
fist
cmp
and
cmp
add
bound
cmp
into
mov
pop
xchg
sub
mul
inc
push
(bad)
jle
add
movd
jge
mov
test
inc
dec
test
mov
push
lock
lds
or
ret
mov
jle
add
or
mov
aaa
xchg
enter
push
mov
cli
add
stos
xor
popa
lds
add
stos
std
adc
(bad)
inc
cmps
test
jge
pusha
and
in
movs
sbb
push
cmps
add
mov
and
mov
cmps
pop
push
jo
pusha
(bad)
adc
dec
lea
hlt
mov
push
inc
dec
jne
out
add
retf
add
jb
out
add
(bad)
push
inc
xor
daa
inc
mov
add
sbb
fdivr
je
imul
push
fcom
add
cmp
call
retf
loopne
(bad)
(bad)
push
mov
loopne
cwde
out
in
sbb
add
ret
js
adc
mov
ret
xchg
adc
rcl
add
jecxz
test
xor
dec
and
pop
je
ins
mov
mov
adc
cmp
mov
sub
cmp
je
das
and
sub
xor
or
inc
fild
not
jmp
cwde
cmp
sbb
lods
mov
or
inc
int3
cmp
push
or
mov
jmp
adc
outs
adc
mov
mov
fucomi
xchg
aas
cmp
jg
dec
jmp
movs
daa
add
stos
inc
sbb
(bad)
mov
pop
cmp
inc
js
adc
or
dec
in
xlat
(bad)
call
pop
fwait
push
nop
fcmovnbe
(bad)
cmp
lea
mov
jne
xor
adc
jne
push
je
enter
shl
adc
loopne
inc
pop
lea
jl
mov
out
ja
jge
cmp
adc
and
inc
push
inc
adc
xchg
cs
or
mov
push
or
pusha
mov
cs
push
cmp
or
or
sbb
das
dec
mov
and
or
push
retf
icebp
shl
jp
cmc
imul
adc
push
xor
mov
in
cmp
mov
adc
cmp
js
jo
retf
mov
ja
scas
mov
pushf
out
(bad)
xor
cli
lods
enter
dec
loopne
add
(bad)
fisttp
mov
xor
xor
js
out
and
push
dec
add
sbb
mov
fsub
mov
popa
outs
mov
mov
inc
adc
les
adc
cld
mov
sbb
das
jp
push
jo
mov
push
cli
push
mov
not
mov
pop
sub
and
add
push
mov
jmp
cmp
repnz
sahf
movs
into
js
outs
pusha
inc
or
mov
test
loope
iret
push
ss
push
or
dec
and
inc
cmp
sahf
mov
mov
xor
or
xor
jne
xor
shl
imul
sbb
mov
jmp
outs
xor
xchg
cmp
popf
ret
mov
push
test
inc
retf
jmp
push
sbb
add
loope
into
mov
mov
sub
add
out
dec
adc
in
xor
mov
xor
sub
sub
shr
adc
mov
sub
inc
sbb
sub
adc
cld
out
push
imul
mov
inc
cmp
pop
das
push
mov
daa
sub
adc
sub
adc
xor
add
pop
(bad)
and
adc
add
mov
add
inc
add
mov
mov
and
pop
inc
and
jno
loopne
hlt
sbb
popa
mov
push
add
add
ins
jb
data16
or
in
inc
inc
pop
psadbw
push
sub
stos
sub
not
fs
xchg
and
cmp
ja
mov
cmp
ins
jp
add
push
or
mov
add
cmp
jl
jne
dec
fwait
cmp
movs
dec
sbb
jne
sbb
inc
nop
packsswb
sub
mov
add
xchg
call
nop
mov
and
xchg
fistp
add
dec
cmp
(bad)
push
in
push
mov
punpcklbw
jp
mov
sbb
pop
cs
scas
inc
popf
mov
xchg
add
or
ja
pop
dec
xor
sbb
inc
or
pop
adc
cmp
sub
inc
nop
inc
(bad)
scas
mov
das
cmovae
(bad)
psubusb
cmovne
xchg
rdmsr
in
mov
icebp
jo
mov
addps
push
jb
sub
nop
cli
adc
arpl
xor
mov
sbb
lock
cs
outs
pop
or
mov
pop
push
dec
mov
or
imul
and
daa
ds
leave
xor
push
push
mov
jge
popf
dec
xor
xchg
imul
jne
test
xor
xor
je
mov
inc
adc
cs
pop
inc
pop
shr
inc
add
push
mov
xchg
stos
inc
or
dec
add
cmc
mov
xchg
mov
loopne
test
sbb
outs
and
loope
jo
test
cmp
je
and
dec
jo
push
dec
mov
js
inc
leave
cld
dec
push
cmp
(bad)
dec
or
cmp
or
mov
add
or
xchg
sbb
cmp
jge
pop
inc
hlt
cmp
adc
loopne
je
fld
pop
outs
pop
sbb
pop
mov
xchg
mov
std
inc
(bad)
jge
mov
sub
test
xchg
in
fld
cld
inc
or
mov
or
sbb
nop
or
nop
jge
xor
jne
fucomip
lsl
adc
shl
push
jb
adc
dec
or
cmp
sahf
adc
cmp
cmp
or
cld
inc
adc
push
adc
call
push
inc
popf
icebp
xlat
dec
and
xchg
pop
inc
nop
inc
adc
shl
jo
push
inc
adc
lea
and
repnz
jo
test
jo
dec
icebp
(bad)
sbb
mov
lea
test
in
inc
pop
inc
stc
cs
inc
push
mov
leave
add
adc
sub
iret
lock
sar
inc
hlt
(bad)
lock
sbb
mov
add
aam
sbb
(bad)
dec
push
or
add
movs
sbb
mov
jp
xchg
jmp
bnd
push
inc
out
jmp
push
mov
mov
dec
pop
sbb
nop
shl
int3
adc
stos
mov
loop
or
push
dec
jg
and
loop
int3
pop
add
cmp
cmp
jg
adc
sbb
or
pop
sbb
movs
mov
enter
jge
adc
xor
and
push
sbb
cmp
dec
cmp
mov
inc
sbb
ror
cld
push
and
add
jge
shl
xchg
xor
push
ins
sub
je
inc
fmul
das
lods
xor
loope
(bad)
push
mov
addr16
or
shl
inc
adc
in
sub
sbb
xor
cmp
or
sub
adc
mov
push
(bad)
icebp
dec
call
lods
std
and
sbb
jmp
mov
test
data16
mov
dec
jmp
sbb
in
ss
cmp
shl
cli
pop
push
push
scas
dec
jne
xchg
lock
fadd
(bad)
mov
cmp
and
or
mov
push
and
cmp
daa
and
xor
gs
add
sahf
or
sub
add
add
ret
gs
inc
and
lahf
push
xabort
invd
sub
out
jb
jge
pop
sub
movs
cmp
xchg
or
add
add
pop
outs
cmp
xchg
lods
mov
mov
add
lahf
cld
test
cmps
add
push
pusha
ficomp
scas
push
int3
adc
lahf
add
in
dec
lock
mov
mov
ret
add
pushf
push
add
leave
mov
add
stc
add
lods
lahf
inc
or
dec
adc
rcr
cdq
cmp
inc
inc
cmp
inc
sub
add
mov
or
push
and
mov
int
div
push
inc
xor
mov
mov
sub
xor
cmps
rol
js
mov
pop
fs
inc
mov
pop
les
loopne
(bad)
stc
inc
mov
push
idiv
pop
inc
pushf
das
inc
cld
add
dec
out
add
sbb
enter
inc
sbb
xor
and
stos
adc
nop
bndldx
sbb
cld
out
das
jns
jb
add
or
add
sbb
push
stos
scas
in
or
mov
inc
(bad)
sub
inc
mov
out
inc
repnz
shr
pop
inc
fdivr
les
cwde
mov
cmp
push
pushf
je
out
or
outs
clc
mov
loopne
ret
add
or
sub
push
or
or
setns
out
inc
mov
stos
push
je
call
sbb
inc
sub
call
push
inc
adc
inc
mov
push
cmps
mov
setnp
std
dec
add
xor
mov
push
xchg
inc
push
or
adc
mov
or
leave
add
pop
adc
test
dec
test
pop
frstor
cs
adc
push
push
add
dec
dec
mov
pop
cmp
xor
gs
pop
stos
pusha
aam
dec
addr16
and
dec
out
out
inc
push
adc
push
aas
or
sbb
and
aaa
ret
push
test
daa
jecxz
bound
push
add
inc
nop
cmp
fild
js
adc
dec
imul
je
push
jns
gs
cs
popa
or
imul
jb
call
jb
sub
dec
outs
arpl
push
imul
sti
push
popa
jb
jns
push
jae
ds
jns
push
jmp
in
xchg
pop
xchg
sbb
inc
gs
imul
arpl
ins
loope
xchg
adc
minps
ins
jo
add
cwde
mov
and
jg
cmp
inc
gs
jne
pop
pop
add
je
lods
js
lods
cs
fimul
push
arpl
or
inc
jbe
add
add
or
push
mov
sbb
(bad)
push
dec
bound
adc
add
push
or
add
cdq
jmp
add
pop
ds
movs
pop
cmp
add
xor
sub
inc
daa
inc
push
sbb
sbb
push
push
ja
pop
cmp
push
push
aaa
test
pushf
inc
jnp
dec
repz
mov
jns
iret
repz
je
ss
repnz
dec
mov
adc
pop
test
pop
mov
(bad)
xor
mov
pop
dec
loop
in
or
sbb
sub
cld
dec
outs
ror
add
add
add
inc
mov
add
ins
data16
jo
adc
sub
call
or
mov
test
inc
pusha
adc
and
xor
add
add
fistp
xor
sbb
int
ror
inc
int
and
pusha
ins
mov
xchg
std
mov
retf
scas
add
inc
pop
pop
cmp
add
jbe
and
pop
dec
mov
or
inc
outs
jne
xor
inc
sub
add
mov
xlat
iret
adc
pcmpgtb
push
inc
ins
jo
jns
sbb
xor
push
or
pop
adc
mov
inc
add
mov
mov
push
adc
aas
das
push
push
push
dec
jbe
sub
push
or
dec
mov
mov
and
mov
inc
pop
fwait
inc
fimul
mov
lock
inc
adc
xchg
gs
ds
xor
inc
jb
jp
ret
add
or
sbb
or
add
add
or
call
add
cmps
pop
or
or
(bad)
popf
retf
push
loope
sti
cmp
add
sub
add
lock
cmp
mov
pop
xor
xchg
jne
sub
inc
adc
push
and
jno
(bad)
pop
push
int
and
push
sar
fisttp
ror
push
fadd
xor
or
mov
push
fwait
sub
test
jecxz
popa
adc
inc
cwde
sbb
cld
xor
or
add
xchg
aaa
ficom
out
fsubr
and
sub
xchg
sub
sub
shl
add
sub
mov
jge
sbb
jb
push
add
push
dec
inc
jge
inc
cs
imul
daa
arpl
jecxz
data16
dec
inc
sahf
pushf
in
and
mov
fsub
push
xchg
daa
add
loop
jl
pushf
pushf
pushf
stos
shl
sub
inc
arpl
daa
daa
and
ds
xchg
ins
cmp
ins
pop
call
(bad)
fisttp
push
stos
mov
test
adc
adc
cmp
iret
arpl
cmp
dec
or
or
cmp
xor
test
shl
and
inc
dec
je
outs
jns
add
lea
add
dec
retf
ret
dec
enter
int
mov
addr16
adc
or
inc
popa
stc
mov
jg
pusha
dec
es
jnp
xor
mov
add
fs
fwait
daa
push
inc
mov
ficom
mov
arpl
test
sbb
sub
test
ins
pop
add
push
sub
cdq
inc
mov
shl
or
pop
test
test
movs
xor
fiadd
pop
jae
jae
ret
cmc
enter
or
in
xlat
or
popf
mov
push
jnp
xor
or
mov
xchg
and
das
leave
fwait
stos
out
sub
fwait
add
push
push
fsub
lea
inc
fwait
adc
or
(bad)
aam
dec
push
popf
data16
imul
sbb
or
sbb
mov
movs
or
jno
push
sahf
in
or
fcmovb
or
add
push
or
lea
add
in
xor
imul
icebp
pop
jmp
sbb
or
pop
add
lea
ins
sub
sbb
aas
add
sbb
pop
scas
mov
dec
or
sbb
arpl
push
mov
(bad)
popa
mov
xor
mov
or
ja
xor
add
es
inc
dec
jg
jg
cwde
dec
ror
dec
popa
pop
and
or
mov
inc
inc
mov
pop
es
xchg
loope
into
sub
dec
aaa
jae
into
mov
(bad)
(bad)
call
ss
cmp
popw
imul
sbb
push
(bad)
cmps
or
or
and
ds
mov
(bad)
popa
mov
loopne
outs
fild
je
xchg
jge
pop
adc
pop
dec
enter
ins
or
mov
xchg
pusha
or
push
mov
mov
mov
push
mov
cmp
test
(bad)
cmps
push
ins
mov
jae
ret
leave
sbb
or
or
sub
push
retf
dec
mov
add
lock
loopne
or
ss
outs
repnz
in
cmp
pop
mov
xor
arpl
movs
cmp
loope
mov
fwait
push
or
pop
pop
test
adc
adc
pushf
test
sbb
and
or
sbb
and
test
add
inc
push
test
mov
out
aam
imul
add
adc
inc
bound
cmp
aas
adc
and
sbb
(bad)
js
push
jae
ret
push
add
popa
xor
adc
ja
mov
cld
add
push
mov
pop
aas
pop
sub
movhps
scas
ret
stos
sbb
(bad)
call
or
out
stos
outs
push
popf
mov
mov
push
jg
push
jmp
inc
lods
sbb
mov
leave
fadd
pop
(bad)
repnz
std
inc
lods
inc
int3
ror
add
fmul
std
pop
or
leave
add
sbb
pop
mov
cmc
icebp
or
sub
out
sbb
lods
xchg
stos
aas
fwait
mov
push
push
ja
jg
pop
and
cmp
jb
call
ins
jnp
dec
das
jo
rol
xchg
mov
sub
dec
mov
loop
push
mov
and
out
xchg
push
xchg
fnstsw
bound
xchg
add
push
or
ins
jns
push
add
xchg
or
push
jae
or
add
sar
fmul
imul
pop
add
push
sub
loop
push
je
cmps
jne
push
fsub
call
pop
sbb
dec
push
lods
dec
enter
dec
mov
loopne
pop
pop
inc
dec
mov
pop
and
push
pop
xor
imul
xor
pop
or
mov
pop
mov
jp
loopne
sbb
(bad)
sbb
push
push
mov
cmp
cli
push
push
sub
pcmpgtb
leave
mov
cmp
in
in
push
cld
cvtpi2ps
cmp
cmp
sahf
pushf
pushf
xchg
jecxz
jnp
dec
dec
dec
dec
cwde
mov
daa
daa
and
je
sti
xchg
xchg
xchg
daa
and
jge
into
enter
jle
push
ins
lahf
mov
push
mul
cmpps
push
push
jnp
cld
xchg
push
call
std
shl
xor
pop
mov
gs
dec
or
jns
imul
dec
sbb
xchg
arpl
mov
hlt
outs
cmp
push
cmps
outs
mov
ds
or
pop
rol
jns
je
and
jns
pusha
bound
cdq
sub
or
sbb
adc
inc
mov
ins
add
add
push
add
jns
push
add
ror
and
test
adc
push
cmp
test
add
mov
inc
cmp
push
js
xor
loop
or
xchg
gs
popa
adc
add
push
cmp
jno
adc
xor
or
cmp
push
dec
and
cmp
in
lods
(bad)
aaa
inc
push
mov
push
jae
and
dec
and
xchg
fisttp
fimul
adc
jae
inc
pop
jno
and
and
and
mov
test
dec
cmp
and
inc
test
dec
je
xchg
sbb
jmp
mov
dec
jno
pop
adc
imul
nop
bound
and
inc
loopne
and
cmp
sub
or
lods
or
or
(bad)
dec
xchg
js
pop
or
movs
outs
mov
ficom
xchg
test
loope
xchg
mov
sub
lock
shr
adc
push
arpl
sub
mov
mov
sbb
mov
add
dec
dec
aas
or
out
(bad)
(bad)
not
sub
lds
xchg
add
pop
ins
das
out
stos
dec
fisttp
cmps
fsubp
cmps
push
das
sub
aam
pop
jmp
push
add
(bad)
adc
mov
adc
inc
les
pop
and
sar
pop
iret
pop
cmc
jne
pop
shr
add
(bad)
sub
popf
xchg
jecxz
out
jne
faddp
inc
ja
adc
popf
cwde
call
mov
jmp
cmps
adc
out
pop
fld
lahf
and
sub
mov
aam
xchg
daa
cmp
ror
add
ret
sbb
xchg
or
inc
cwde
mov
mov
les
mov
je
ins
ins
sub
or
sbb
inc
mov
call
imul
ss
lods
adc
adc
sbb
test
lods
sbb
nop
pop
add
mov
xchg
jg
scas
or
lods
(bad)
ja
pusha
push
push
dec
push
loopne
jne
dec
push
cwde
push
scas
sbb
(bad)
mov
sub
xchg
push
scas
mov
push
pop
xor
adc
pop
pop
fwait
scas
mov
in
(bad)
test
fisttp
adc
dec
fnsave
push
scas
mov
int3
idiv
(bad)
mov
pop
inc
sahf
pushf
pushf
fwait
xlat
sbb
dec
mov
mov
daa
(bad)
fist
(bad)
enter
pop
xchg
fisub
mov
leave
leave
leave
outs
xchg
mov
in
fs
(bad)
cmp
jb
repnz
sbb
sbb
rcr
cmp
sahf
fmul
loope
mov
cmps
push
lods
xchg
cmp
xlat
movs
out
test
ror
pop
push
ds
or
sub
xchg
xor
ror
sbb
xchg
push
mov
adc
push
mov
mov
sahf
nop
or
les
cmc
ins
adc
gs
ins
cmc
mov
adc
fnsave
mov
rol
ja
add
inc
cmc
jae
push
jecxz
cmc
jmp
lods
cmc
xchg
or
xchg
cmc
xchg
lea
imul
fwait
gs
or
cmc
(bad)
cmc
cs
fadd
cmc
ins
pop
mov
iret
cmc
jno
add
add
xor
add
and
jae
inc
or
add
cmc
imul
and
adc
xchg
pusha
and
add
mov
lea
(bad)
add
int
bound
inc
les
fld
bound
mov
add
cmc
adc
add
xchg
or
cmc
adc
test
sti
(bad)
cmc
bound
pop
mov
sbb
dec
cmc
xor
lds
cmp
mov
cdq
jno
jb
cmc
add
push
sub
cmc
or
fdivr
sbb
xchg
add
sbb
imul
dec
cmc
mov
or
inc
pop
push
dec
xor
rol
in
imul
ja
sbb
mov
loopne
or
or
xchg
inc
cmp
mov
push
cmp
rol
imul
sbb
unpcklps
cmp
maxps
pop
mov
nop
cmp
xchg
jmp
cmps
mov
pusha
sub
xor
mov
add
add
push
mov
add
inc
and
loopne
mov
hlt
jmp
adc
in
loopne
out
mov
push
stc
(bad)
add
inc
(bad)
xchg
jmp
pop
push
nop
push
frstor
fst
add
xchg
pop
xchg
daa
mov
shr
pop
enter
mov
push
jmp
push
pop
fnsave
sahf
test
into
cmp
ss
inc
adc
push
ffree
stos
push
nop
xchg
sub
pusha
lock
rcl
addr16
sub
aaa
or
sub
shl
ret
mov
mov
sbb
test
mov
lock
mov
clc
div
xchg
scas
sahf
or
sbb
imul
in
pop
inc
inc
fs
cmc
dec
and
je
shl
mov
mov
cwde
pop
les
loop
(bad)
or
mov
dec
ss
in
adc
(bad)
pop
dec
xchg
scas
loope
xchg
add
xor
scas
gs
ins
inc
xor
xor
add
and
add
pop
jno
jne
add
test
jmp
adc
jmp
dec
add
std
and
add
xchg
or
and
ins
adc
inc
loopne
add
cdq
inc
jnp
jge
mov
cs
xchg
xor
sub
adc
push
push
test
inc
jo
jno
out
pop
inc
outs
popf
(bad)
cmps
push
mov
or
loope
mov
mov
mov
es
mov
pop
dec
add
mov
adc
cmp
fmul
sti
outs
push
sub
xor
cmp
sub
adc
loope
add
xchg
push
loope
call
addr16
loopne
inc
and
inc
pop
loope
and
or
sbb
loope
pop
pop
sbb
add
xlat
push
push
pop
jno
loopne
add
in
mov
or
out
loope
pop
mov
test
inc
sbb
or
dec
push
or
pusha
cdq
addr16
ror
shl
xor
add
adc
int
or
pop
stos
add
std
pop
or
add
add
sbb
pop
mov
add
iret
cmp
add
leave
cmp
shr
or
adc
cmc
sbb
(bad)
rcr
pusha
add
push
repz
push
xor
pop
jo
ja
int
xlat
push
loope
fiadd
cs
jbe
mov
and
mov
cwde
mov
outs
jl
add
rcr
dec
push
scas
cmovle
pop
pop
jo
cmp
xchg
xor
add
push
sbb
and
movs
dec
pop
xor
lock
movs
xchg
imul
movs
cmp
pop
add
sub
std
gs
sub
mov
rcr
pop
fs
or
or
inc
test
mov
adc
push
push
mov
les
wrmsr
loop
shr
xor
or
xor
cld
shr
pusha
push
add
sub
xor
loopne
and
push
(bad)
xor
adc
adc
std
mov
cld
jne
loopne
sub
adc
adc
mov
mov
jo
mov
push
ret
imul
mov
mov
or
ja
jae
popa
pop
add
push
add
xchg
shl
(bad)
das
push
mov
push
add
aas
inc
ret
nop
push
mov
push
push
mov
xor
push
push
push
mov
xor
mov
sti
out
call
xchg
pop
or
jne
lea
sbb
push
and
enter
or
add
jbe
pop
jmp
xchg
pushf
pop
pop
pop
nop
adc
jg
fidiv
mov
and
lock
pop
pop
pop
xchg
mov
out
dec
inc
out
(bad)
lahf
clc
enter
xchg
mov
add
je
push
xor
sbb
(bad)
into
push
sete
es
inc
jbe
push
mov
mov
mov
repnz
mov
mov
cwde
or
push
sbb
sub
dec
add
push
cmp
xor
pop
jbe
mov
in
test
aas
pusha
xchg
iret
push
xchg
add
(bad)
jo
sub
push
mov
ins
and
pop
int
ins
in
xor
xchg
add
lods
ret
test
je
test
jne
mov
and
or
push
mov
(bad)
js
daa
clc
xlat
loope
cmp
push
inc
add
arpl
outs
rcr
retf
fiadd
mov
test
lods
push
push
push
push
inc
test
xchg
cmp
dec
test
or
sbb
inc
and
mov
mov
cmp
jg
sub
pop
cs
mov
std
pop
mov
pop
push
clc
dec
add
clc
or
sbb
sbb
jg
pop
jbe
lock
jp
xor
adc
inc
icebp
jecxz
fiadd
or
cld
add
lock
sub
cmp
je
or
je
add
mov
cmp
push
inc
mov
out
xor
dec
test
jge
push
push
div
mov
pop
mov
jns
cmovle
test
inc
adc
adc
mov
inc
xlat
cmp
xchg
les
shl
adc
(bad)
mov
pop
or
adc
ja
sub
push
call
call
ret
bound
mov
push
mov
add
push
jbe
and
add
fisub
mov
test
ficom
in
mov
mov
mov
cmp
or
add
jno
and
sti
gs
pop
jmp
or
pop
fndisi(8087
cmp
mov
movs
mov
or
mov
or
stos
das
jbe
push
jge
je
jnp
or
push
and
pop
adc
vcomisd
mov
lock
or
mov
sub
add
aad
ret
dec
add
sbb
or
add
sti
stos
add
inc
add
hlt
lock
vmread
hlt
cmps
adc
add
loopne
loope
jle
scas
add
mov
popa
sbb
mov
or
test
mov
pop
push
push
fdiv
push
mov
pop
not
imul
inc
(bad)
retf
mov
outs
add
enter
push
add
(bad)
mov
mov
lods
inc
add
in
dec
ins
and
pusha
cmps
cli
cmp
sar
cmp
pushf
fbld
stos
outs
inc
sub
mov
jecxz
inc
push
jge
sub
div
mov
sar
hlt
ins
mov
popf
xlat
mov
(bad)
ret
add
dec
iret
sbb
mov
or
cmps
mov
xchg
add
or
je
pop
jmp
int3
fistp
mov
inc
(bad)
data16
sti
cmps
pop
fsubr
mov
cmp
adc
or
fs
int3
push
jle
call
fwait
retf
sbb
loopne
out
sub
inc
dec
inc
int3
xor
adc
stc
push
jb
hlt
fild
and
in
scas
das
mov
xchg
pop
call
cmp
jbe
mov
cmp
in
ins
inc
push
inc
and
in
and
cmp
push
sbb
pop
pop
jnp
push
adc
fsubrp
mov
pop
sbb
or
das
sbb
fild
outs
mov
inc
dec
xchg
jne
add
in
cwde
loop
lea
mov
adc
pop
jbe
daa
jne
mov
dec
adc
popa
iret
das
cdq
movs
ins
inc
push
jp
add
cld
and
cmp
movzx
(bad)
push
fdivr
jmp
cmp
add
jnp
int
jmp
cmp
jge
pusha
sbb
pop
jne
ss
adc
mov
cmp
ja
mov
and
fcom
hlt
pop
loopne
jge
fwait
sbb
ficomp
sti
jne
bound
cmps
movs
mov
hlt
test
add
shl
inc
and
pushf
(bad)
push
mov
call
xchg
mov
jecxz
mov
bnd
imul
sbb
adc
repz
pushf
adc
add
(bad)
in
pusha
aas
iret
in
jne
cwde
jo
fild
push
inc
dec
lock
(bad)
pop
out
jecxz
loop
jo
(bad)
lock
sahf
ret
sbb
(bad)
pusha
mov
push
cmc
js
aam
imul
push
ja
ret
cmps
cmp
push
cmp
cmp
jle
sub
shr
add
cs
ret
enter
mov
xchg
push
push
je
mov
inc
mov
retf
sbb
sbb
cmp
sub
dec
int3
xor
je
and
push
cmp
mov
and
jae
and
add
push
and
jns
mov
mov
xor
je
shr
cmc
hlt
loope
outs
stos
mov
out
xchg
fdivr
out
mov
sti
pop
push
sub
jecxz
(bad)
call
jbe
xor
cmp
add
sub
xchg
cmp
rol
push
and
dec
xlat
inc
push
mov
adc
movs
mov
(bad)
fs
into
jl
push
mov
je
fadd
mov
and
mul
stos
sbb
pop
inc
rol
mov
or
in
shl
fcomp
add
inc
push
ins
sbb
rcr
xor
sbb
sbb
adc
xchg
scas
adc
dec
pop
sub
cmp
jmp
rol
mov
rcr
pop
jg
sbb
loop
je
sbb
inc
jb
or
cvttps2pi
shr
mov
inc
shr
pop
add
fiadd
pop
jo
lea
movs
hlt
mov
addr16
(bad)
cmp
sub
jb
je
dec
je
jmp
mov
arpl
mov
sub
dec
clc
jo
pop
push
push
push
mov
movs
pop
or
or
sbb
ret
std
jo
inc
inc
fnstsw
mov
fst
or
rcl
je
jbe
push
push
popa
aaa
lds
inc
popa
cwde
sub
push
and
and
mov
aam
(bad)
cmp
lock
sbb
out
ret
adc
inc
lods
pop
mov
aam
sub
jb
jge
sbb
ret
jae
and
cmp
jmp
inc
jmp
or
mov
test
cmp
leave
or
dec
mov
xchg
mov
ins
mov
stc
mov
ins
pusha
lock
mov
je
mov
daa
mov
cmps
add
cwde
rol
cmps
test
popf
nop
pop
xor
mov
rol
daa
add
clc
je
stc
pop
(bad)
add
data16
mov
mov
dec
aad
inc
sbb
dec
jb
or
xor
stc
sar
jns
xlat
add
stc
clc
sub
sub
jbe
mov
dec
jmp
jo
add
lea
add
add
xchg
rcr
cmp
jge
cmp
inc
or
or
shr
mov
xor
sbb
test
add
add
or
or
dec
lock
mov
aam
jmp
in
(bad)
mov
or
inc
ja
cmp
bt
push
inc
loopne
dec
test
pop
lock
mov
out
push
pop
push
cmps
push
aas
test
push
sub
ror
mov
stos
xor
ja
jmp
sub
jb
xchg
inc
neg
add
inc
push
cmp
js
jno
sbb
sahf
add
mov
push
in
sub
sub
push
xchg
and
int3
les
fidivr
aam
cmp
adc
push
cmp
daa
adc
fist
jae
xor
sub
push
xchg
shl
mov
hlt
ret
fsubr
shl
add
jle
sub
inc
mov
fucomip
inc
inc
mov
add
ja
xor
(bad)
pop
out
cmp
xor
mov
fwait
clc
mov
repz
mov
mov
test
add
jnp
xchg
mov
sbb
add
addr16
jb
inc
js
gs
xlat
int
pop
lods
pop
xor
add
gs
lahf
pop
jne
imul
ja
add
mov
xor
jns
outs
outs
push
(bad)
out
lods
sti
add
push
jp
add
dec
jne
push
jne
sti
das
cmp
jae
sub
add
xchg
or
dec
gs
cs
pop
push
popa
ins
jne
pop
mov
mov
pop
sub
mov
pop
and
xor
or
pusha
lods
add
gs
dec
popf
inc
dec
add
loopne
ja
push
jns
test
in
dec
jb
push
outs
imul
outs
or
push
ret
push
add
frstor
sbb
outs
sbb
add
push
(bad)
inc
inc
shl
or
fild
mov
and
xlat
sub
cmp
or
add
add
or
push
pop
(bad)
push
push
add
hlt
dec
xchg
add
cmps
add
mov
push
fimul
xor
das
idiv
xchg
inc
and
in
lock
dec
jnp
enter
shl
push
cwde
sub
inc
inc
jne
loopne
mov
sub
mov
daa
jo
fcomp
or
or
popa
jp
push
pop
sub
mov
or
push
mov
aaa
in
lods
or
gs
clc
xor
stc
inc
inc
push
jnp
cli
xor
mov
inc
mov
sub
fsubr
add
adc
in
add
inc
bswap
leave
enter
mov
fs
mov
xor
in
das
mov
jns
aad
shl
mov
jmp
sar
inc
sahf
pushf
out
and
and
xlat
pop
ret
lds
les
leave
enter
lds
in
in
test
fucom
sbb
packuswb
or
leave
es
leave
sub
inc
cmps
jecxz
adc
pushf
mov
mov
or
add
shl
and
dec
ret
mov
(bad)
in
pop
inc
loope
imul
adc
outs
jns
clc
js
and
mov
or
jp
ss
inc
shl
push
in
add
dec
inc
pop
or
adc
cmp
mov
push
outs
mov
add
add
popa
inc
popa
jno
inc
ins
es
in
dec
scas
mov
jns
rol
cs
retf
js
faddp
shl
sub
or
cmp
xor
mov
sbb
fisub
mov
hlt
cdq
pop
add
sub
int
cwde
shl
jnp
jnp
jp
and
pop
and
les
or
xlat
inc
or
(bad)
jns
add
movs
js
cmp
ror
mov
jo
jae
rcl
or
std
inc
jb
pop
and
aaa
or
and
retf
sub
dec
jle
pop
mov
add
push
inc
inc
js
sbb
dec
rcl
push
hlt
fbstp
inc
imul
outs
popa
fs
add
sbb
or
pop
mov
mov
cmc
adc
dec
ins
outs
xchg
pop
dec
gs
(bad)
xor
sbb
retf
sub
dec
into
outs
cmp
fwait
popaw
outs
ins
lea
rcl
jle
int3
pusha
jge
pop
fmul
ins
das
cmp
or
adc
loopne
push
mov
jae
xchg
out
fstp
aaa
das
ins
and
or
inc
jne
data16
data16
pop
push
cmp
mov
pusha
ins
add
and
rcr
js
daa
imul
xor
aaa
push
jae
ins
(bad)
je
mov
push
add
jae
ins
pop
mov
jno
cmp
inc
add
mov
fadd
outs
fistp
add
jmp
shr
push
test
inc
leave
inc
outs
outs
outs
or
add
sti
inc
pop
push
dec
inc
jg
jecxz
adc
sti
add
adc
jae
and
pop
jbe
or
popa
arpl
lea
sub
push
inc
mov
jo
push
cmps
xor
xor
std
push
popa
add
pop
jno
sbb
add
push
outs
(bad)
in
or
and
pop
shr
fldenv
mov
fisttp
add
add
jne
in
push
in
ins
scas
pop
imul
add
push
xlat
push
xchg
inc
mov
or
push
and
inc
add
popa
mov
movs
or
movs
sub
xchg
in
inc
not
push
add
lea
or
mov
push
iret
aas
dec
add
mov
push
not
(bad)
dec
and
add
sbb
push
xor
mov
xor
jl
add
jnp
ror
jl
pop
xor
cmps
sbb
or
push
out
enter
fucomi
inc
outs
in
pop
lods
add
pop
(bad)
dec
lea
test
nop
dec
jl
jae
add
push
loope
pop
xchg
push
test
or
aas
in
push
pop
xchg
inc
popa
arpl
fcomp
cwde
iret
fisttp
int3
lea
jmp
inc
scas
xchg
push
pop
and
inc
xchg
or
mov
loopne
ins
inc
or
aaa
xchg
mov
pop
pop
loopne
add
retf
push
jo
fmul
adc
push
or
das
movmskps
bound
mov
pop
jb
shl
mov
cmp
jle
bound
inc
aas
out
add
outs
adc
adc
sbb
jnp
daa
ret
mov
push
dec
add
arpl
mov
add
aas
in
add
adc
add
jmp
clc
adc
out
lods
mov
xlat
test
je
inc
xor
cs
add
pop
loopne
(bad)
pop
mov
out
mov
aas
and
test
(bad)
add
inc
or
ss
xlat
pushf
cmovp
mov
sub
shl
mov
mov
or
add
out
ja
adc
sahf
add
inc
sub
or
nop
mov
and
aaa
push
or
mov
push
pop
adc
push
sbb
ror
add
add
fdiv
push
test
and
lock
or
cli
shl
mov
mov
adc
inc
adc
mov
mov
adc
test
or
lock
fs
repz
in
int3
(bad)
push
mov
jae
test
gs
sbb
call
stc
pop
sub
add
xlat
pop
mov
das
mov
aaa
or
leave
je
out
xchg
mov
push
cmp
movs
sbb
xor
cld
mov
test
lds
xchg
xlat
ror
or
adc
mov
sbb
fwait
je
inc
hlt
cmp
push
sub
(bad)
mov
mov
adc
popa
xchg
cmp
add
gs
or
cld
add
cdq
add
sbb
dec
xor
loopne
stc
jae
fcmovu
add
jae
cli
xor
cmp
fdiv
jbe
push
cld
xor
(bad)
lods
add
jbe
push
hlt
jno
sub
loopne
rol
lahf
shl
or
cli
test
cmps
add
xor
rcr
clc
jo
addr16
loop
leave
mov
arpl
je
add
cld
mov
and
or
ret
inc
gs
fnstcw
or
mov
sbb
inc
mov
and
or
gs
push
and
in
enter
pop
(bad)
add
pusha
lds
push
retf
loop
add
ja
xor
push
iret
pop
push
mov
leave
mov
sub
adc
hlt
nop
inc
or
inc
push
out
push
or
ret
inc
fld
mov
add
fisubr
push
mov
fstp
push
add
add
mov
xchg
pop
pop
(bad)
out
aam
xchg
or
inc
mov
mov
or
dec
adc
push
dec
lea
(bad)
mov
and
ret
dec
cmps
pop
pushf
mov
dec
test
jl
inc
xor
push
or
push
push
inc
cld
xor
inc
sub
sbb
adc
enter
lock
push
lods
mov
cwde
xor
aam
or
push
cmp
dec
jne
pusha
enter
(bad)
adc
adc
vpsubsb
dec
push
or
test
je
adc
fidiv
nop
sbb
sbb
iret
adc
dec
add
inc
lock
out
int3
into
jo
add
add
push
push
push
add
mov
das
pop
push
inc
add
pushf
fnstenv
sbb
pop
int3
int3
push
xor
mov
cdq
or
push
push
nop
push
push
ss
jbe
nop
popa
into
cmp
or
pusha
push
or
push
cdq
cdq
mov
inc
inc
mov
and
scas
cs
push
cs
push
or
xor
jg
mov
adc
add
add
jge
cmp
cli
jae
cmp
inc
xor
mov
pushf
adc
and
xor
dec
sub
mov
mov
inc
and
and
and
mov
test
stos
std
stos
and
mov
push
sub
imul
in
push
lock
sar
push
jmp
sbb
pop
pop
xchg
xchg
mov
mov
gs
mov
out
sbb
xor
add
add
pusha
imul
loope
sub
xchg
retf
sar
lods
rcr
add
pop
push
jl
mov
xchg
popf
mov
add
or
cmp
lea
xlat
xchg
push
sbb
xor
mov
pop
test
pop
ret
call
bound
jmp
or
rcl
sahf
or
mov
mov
(bad)
test
sti
or
push
and
mov
push
scas
nop
pop
add
out
dec
int
pop
nop
or
push
repnz
inc
loope
sbb
nop
jne
call
jb
sar
loopne
sbb
add
int3
ret
cmp
mov
pusha
push
pop
or
(bad)
clc
dec
arpl
jb
add
jne
ins
sub
pop
int
cdq
call
outs
add
aaa
test
xor
aaa
stos
mov
inc
repnz
mov
ins
aaa
pop
data16
cmp
add
jp
pop
push
adc
dec
mov
inc
xchg
movs
xchg
test
xchg
nop
cwde
add
push
or
mov
fidivr
push
cs
dec
add
add
fadd
inc
jle
addr16
ss
add
xor
or
aas
mov
data16
or
enter
adc
imul
(bad)
data16
add
add
test
aas
mov
sub
mov
int3
repnz
jb
call
jle
(bad)
mov
ja
outs
add
int3
or
mov
mov
sub
aas
(bad)
mov
mov
aas
add
mov
std
dec
stos
or
pop
stos
movs
test
jb
pop
call
(bad)
call
cwde
rol
cmps
add
dec
ins
bound
cmp
add
inc
jae
aaa
dec
push
sub
rcl
pop
cs
scas
ret
push
out
pop
add
setae
mov
push
cs
aaa
sbb
int3
or
ss
inc
mov
pop
inc
aas
movs
cmps
mov
xor
cmps
dec
add
jae
outs
ss
cmps
sub
and
ja
es
mov
ja
push
push
cmps
cs
xor
push
aam
data16
jno
xor
or
aaa
mov
outs
inc
or
dec
mov
pop
sub
or
pop
xor
or
add
inc
dec
sub
pop
sub
mov
cmp
push
fstp
leave
adc
or
rcr
ret
pop
cwde
lods
ss
xorps
sahf
dec
sub
jecxz
push
add
jo
cli
mov
or
jae
punpcklbw
and
int3
dec
mov
xchg
sub
fidiv
sbb
or
dec
es
add
addr16
popa
push
cs
fisttp
in
mov
out
pop
test
and
jbe
pop
pop
aas
cmp
cmp
mov
inc
iret
jae
or
sbb
or
jg
cmc
adc
sbb
or
mov
inc
aaa
inc
or
and
out
push
pop
fld
cs
aas
mov
adc
inc
(bad)
aaa
adc
test
pop
push
cmp
inc
out
ss
mov
(bad)
outs
rol
push
xchg
inc
push
or
aas
lahf
out
stos
jo
daa
dec
sbb
dec
cs
add
or
push
sar
iret
aas
dec
add
push
pushf
adc
or
push
test
xor
pop
aaa
out
cmp
inc
xor
bound
outs
sbb
xor
sub
xchg
scas
or
adc
dec
jecxz
mov
pop
popa
scas
push
mov
sub
aas
add
add
loope
add
out
push
mov
mov
xlat
pop
(bad)
push
mov
lock
sbb
adc
nop
fnstsw
mov
or
js
xlat
push
jo
pusha
sub
ficomp
bound
in
mov
jg
dec
sbb
data16
push
dec
inc
in
shr
nop
push
sbb
pop
aaa
or
rol
rol
xchg
dec
jp
add
xchg
call
mov
push
aas
cmp
pop
sub
or
aas
pop
aas
or
pushf
and
push
push
add
shr
sub
out
out
movs
or
dec
aaa
xchg
jo
(bad)
jg
test
xchg
add
pusha
and
(bad)
inc
imul
pop
adc
retf
xchg
movs
and
dec
jecxz
or
lock
dec
pop
jg
cdq
add
push
ja
or
sbb
jg
mov
or
inc
js
imul
inc
pop
ins
mov
jo
pop
daa
addr16
inc
in
add
dec
inc
or
bound
(bad)
cmps
add
cmova
(bad)
mov
inc
and
push
push
dec
sti
dec
fwait
js
mov
inc
cmps
bound
sbb
push
push
push
out
or
pusha
or
jmp
daa
stos
mov
aas
mov
or
lahf
push
or
push
rcl
adc
pop
fistp
xchg
retf
inc
jnp
mov
fs
push
pop
xchg
dec
out
pop
stos
sbb
xchg
or
sub
dec
movs
mov
ror
xlat
add
sbb
iret
add
jmp
adc
aas
out
fwait
inc
add
pop
sbb
and
mov
or
pop
ret
sbb
addps
add
adc
inc
ffreep
sub
test
dec
push
or
jg
inc
push
ror
xchg
pop
xlat
xor
pop
rcl
jae
push
test
pusha
cs
cmp
inc
das
lds
jae
add
inc
sbb
dec
mov
shr
jmp
sbb
dec
call
pusha
add
inc
sub
(bad)
dec
ret
add
aas
ins
inc
and
jle
iret
jmp
div
clc
rcr
ret
imul
inc
nop
mov
ficomp
call
sub
dec
jle
leave
add
ds
aas
add
adc
dec
inc
sub
or
inc
inc
mov
mov
pop
or
xor
or
add
repz
add
fwait
mov
push
and
mov
add
push
loope
jmp
(bad)
jg
cmp
add
xchg
(bad)
mov
or
addr16
lahf
cmovg
adc
or
or
dec
or
push
adc
dec
pop
pop
mov
inc
fsub
pop
pusha
mov
mov
addr16
pop
pop
push
imul
push
sbb
enter
aaa
push
xchg
pusha
dec
push
inc
je
out
dec
cmps
aas
lahf
add
add
or
dec
sub
or
or
(bad)
into
out
add
mov
das
rcl
pop
xlat
dec
adc
aaa
push
ret
mov
retf
push
aam
pop
sub
jmp
lods
xor
pop
adc
test
sub
pop
into
test
add
mov
addr16
xor
mov
xchg
shl
or
xchg
stos
pandn
ins
add
xchg
mov
dec
js
pushf
inc
adc
adc
aaa
outs
or
call
push
mov
push
inc
fmul
aaa
ror
push
(bad)
push
into
cmps
inc
add
adc
nop
fwait
scas
or
xchg
push
aas
xchg
jnp
jo
cmps
ror
cmp
add
iret
(bad)
aas
adc
(bad)
xlat
pop
fdiv
and
push
ret
imul
imul
mov
pop
out
xchg
stos
inc
out
pop
adc
lock
sub
pop
retf
rcl
add
xchg
mov
dec
fisubr
rcl
shl
aaa
mov
shr
not
pop
fistp
add
adc
xchg
inc
lods
push
fsub
aas
inc
add
mov
cmp
sbb
push
stos
in
cmps
sub
push
push
push
(bad)
nop
fidiv
xor
in
outs
push
das
adc
push
(bad)
aas
push
cmp
xchg
test
inc
and
fistp
adc
dec
movzx
push
fdivr
xor
or
dec
inc
pop
addr16
dec
sub
movs
fimul
sub
mov
iret
dec
stos
xchg
add
or
dec
adc
push
xchg
push
inc
or
mov
pop
pop
sbb
xchg
pop
mov
cmpxchg
scas
inc
xchg
movs
pusha
fstp
ds
xlat
mov
(bad)
push
push
aas
addr16
adc
pop
cli
ins
adc
push
push
idiv
sub
sbb
mov
aas
push
retf
cmp
setbe
aas
aas
sbb
(bad)
std
push
dec
pusha
dec
mov
mov
xor
push
(bad)
fcomip
inc
push
mov
xor
push
push
push
mov
lea
mov
call
mov
adc
dec
jne
xor
shl
cld
jp
inc
xor
movzx
cmp
jmp
(bad)
std
jne
mov
jmp
adc
xchg
rol
add
imul
push
cdq
fmul
adc
lock
fiadd
lock
adc
out
clc
sbb
jl
sbb
mov
or
mov
jmp
mov
ins
pop
pop
pop
pusha
adc
jl
mov
fcmove
add
ret
and
mov
or
jecxz
ret
pop
mov
pop
ret
pop
pusha
ja
into
sbb
add
daa
or
int
inc
es
add
xchg
push
push
push
mov
mov
ja
sub
and
cmp
int3
adc
ror
jne
sub
or
sub
aas
call
imul
mov
xchg
lock
inc
ret
pop
pop
pop
pop
push
and
adc
lds
mov
adc
add
jle
popa
inc
or
mov
cmp
inc
jmp
ins
dec
push
retf
ficom
mov
adc
push
mov
xor
jnp
add
lea
xchg
mov
retf
aaa
into
clc
push
(bad)
mov
and
jl
outs
xchg
xchg
vmovupd
pusha
pusha
cs
out
in
loopne
mov
mul
into
jo
sbb
js
cmp
lock
nop
push
pop
cmp
call
das
adc
dec
dec
adc
adc
dec
dec
dec
adc
dec
dec
dec
sbb
sbb
dec
dec
dec
sbb
xor
mov
add
add
jb
add
push
pop
jb
jb
or
or
jb
jb
or
push
(bad)
cmp
jns
(bad)
icebp
repnz
cmp
hlt
cmc
div
cmp
cmp
clc
stc
cli
sti
cmp
cmp
cld
std
(bad)
(bad)
cmp
cmp
loopne
loop
cmp
cmp
in
out
cmp
cmp
call
cmp
cmp
in
out
out
cmp
cmp
rcl
rcl
cmp
cmp
aam
(bad)
xlat
cmp
cmp
fcomp
fcmovu
cmp
cmp
(bad)
(bad)
cmp
cmp
rol
ret
cmp
cmp
(bad)
(bad)
cmp
cmp
enter
cmp
cmp
int3
int
iret
hlt
cmp
cmp
jae
or
pop
test
scas
(bad)
sti
cmps
iret
sbb
mov
add
test
inc
add
push
mov
mov
in
mov
cmp
jnp
push
inc
sbb
add
in
call
cmovne
jbe
ins
imul
arpl
pop
sub
sbb
arpl
adc
xchg
dec
sti
push
js
test
cvtps2pd
mov
sbb
dec
jo
adc
outs
fild
mov
pusha
les
(bad)
fiadd
mov
push
gs
bound
sub
or
add
jo
adc
add
dec
popa
outs
xlat
scas
fsubr
fs
bound
or
je
jae
pusha
pop
nop
sub
nop
rol
fld
lahf
mov
pushf
adc
push
pop
push
add
dec
jb
mov
cmp
data16
pop
popa
sbb
add
push
mov
push
je
xchg
sbb
sub
sti
jg
add
inc
push
xchg
xchg
inc
es
das
iret
sti
add
popa
ins
inc
mov
mov
cld
add
mov
aad
pushf
cs
jo
jle
fadd
push
outs
jp
push
sahf
jae
add
imul
retf
sbb
or
push
inc
jl
mov
imul
push
out
gs
cmps
idiv
lods
out
or
push
sbb
mov
inc
ins
je
pop
or
sub
jmp
sub
add
cmp
push
dec
outs
js
jnp
pop
cmp
mov
inc
ins
popa
arpl
push
pop
push
jl
xor
ins
dec
outs
jo
je
ins
inc
ins
jae
rcl
jns
sbb
(bad)
ins
dec
(bad)
addr16
pusha
cmp
inc
imul
fistp
xor
int3
fnstsw
mov
or
or
std
mov
jb
pop
adc
call
adc
add
xor
cmc
push
lock
add
cmc
add
push
push
je
les
lods
dec
loope
out
cmps
dec
loope
inc
or
jne
pop
loop
jl
pop
dec
xor
bound
push
mov
dec
mov
jp
loopne
outs
pop
xchg
arpl
inc
inc
imul
cs
inc
outs
jb
jae
es
pop
dec
rcl
push
or
sbb
add
add
dec
dec
push
add
mov
inc
xchg
ins
mov
ja
mov
sbb
or
xchg
aad
dec
popa
dec
(bad)
push
call
or
jbe
out
(bad)
outs
jne
arpl
sbb
push
xor
add
dec
ss
push
gs
sub
pop
cdq
mov
jne
es
das
jne
dec
das
imul
dec
sub
clc
or
add
pop
pop
imul
mov
xor
sbb
arpl
or
or
in
mov
add
cmps
(bad)
sbb
add
out
neg
add
shr
fimul
push
or
add
fild
cs
add
add
ins
fisttp
pop
(bad)
xor
nop
and
jp
(bad)
inc
dec
outs
bound
sbb
shl
mov
mov
test
mov
or
or
sbb
dec
outs
or
lock
xchg
(bad)
inc
add
dec
bound
sti
push
arpl
ins
ja
(bad)
loop
stos
jb
jmp
cld
imul
xor
ins
push
pop
lea
mov
ja
push
inc
dec
inc
push
pop
jo
xchg
inc
dec
add
out
(bad)
dec
pop
add
mov
add
mov
rol
add
call
sbb
mov
pop
or
mov
push
(bad)
dec
sbb
imul
add
add
jmp
and
adc
cmp
push
shl
cmp
mov
pusha
add
add
mov
ror
and
push
iret
sub
int3
cmps
loopne
push
fdiv
push
cmps
rcl
push
add
sub
rcl
jmp
adc
inc
test
imul
inc
es
outs
mov
je
sbb
cmp
sbb
pop
enter
or
sbb
ss
xor
cmps
add
mov
dec
(bad)
pop
mov
scas
loop
ret
daa
jno
inc
stos
sbb
cmps
jns
cmps
cdq
ret
sub
outs
dec
clc
add
or
fadd
or
dec
sar
add
xchg
mov
or
push
dec
sbb
fstp
pop
rcl
xchg
cld
arpl
fdiv
cwde
data16
or
(bad)
jns
inc
aam
push
cmp
addr16
xchg
pop
and
jg
cli
in
cmp
jnp
pop
adc
sub
lods
pusha
pop
add
sar
(bad)
cmp
jp
push
push
enter
add
in
jge
add
mov
retf
jge
sbb
add
xchg
xchg
ja
add
and
or
and
xchg
jo
mov
push
ins
mov
push
xor
or
and
fs
jo
fadd
les
push
rol
inc
or
xlat
push
ins
jb
mov
cmc
das
adc
xor
js
add
push
push
cmps
adc
or
add
rol
ds
mov
gs
jg
push
je
shl
pushf
dec
sub
mov
dec
shl
jl
jge
test
das
add
xchg
cmp
sbb
cmp
imul
jo
scas
push
outs
(bad)
cmp
(bad)
fsubr
sub
sbb
xchg
call
dec
outs
or
sub
pop
fmul
xchg
jecxz
inc
sbb
add
popf
mov
push
or
(bad)
push
aaa
adc
jo
into
add
mov
in
shr
loopne
add
fcomi
das
push
push
cmp
sbb
leave
sub
mov
xor
cmc
cmp
cmc
icebp
mov
scas
bound
cmc
push
jns
mov
loopne
cwde
daa
movs
or
push
loope
mov
idiv
push
test
call
sbb
pop
and
out
mov
test
push
stos
mov
dec
sti
jl
jno
push
loopne
add
mov
loopne
pop
or
or
(bad)
ds
mov
and
mov
or
adc
jle
or
cld
push
mov
xor
neg
push
inc
imul
scas
xor
data16
call
adc
xor
sub
mov
or
jbe
pop
idiv
cmp
push
loop
cdq
movs
ss
data16
push
sahf
or
ins
cwde
out
fs
or
or
call
or
mov
mov
jmp
daa
pop
inc
outs
dec
gs
outs
push
out
int3
fnstcw
fnstsw
sbb
loopne
jb
or
popf
pop
push
je
or
je
jno
or
out
arpl
popa
fcomp
out
es
in
ss
push
loopne
dec
mov
lock
popa
lods
in
fsubr
push
sbb
push
mov
xor
jae
sbb
push
rol
ins
and
outs
addr16
and
inc
loopne
jmp
adc
mov
ror
inc
cmp
push
add
add
imul
je
sbb
imul
call
sbb
fs
jo
or
fimul
and
out
imul
jbe
xchg
mov
push
addr16
sub
inc
aas
dec
outs
add
or
ins
jns
cmps
jo
scas
inc
fadd
cld
ins
jo
adc
push
adc
or
sbb
or
sbb
jno
sbb
es
or
cmp
push
cmp
(bad)
rcl
pop
cmp
outs
xchg
pop
test
mov
push
das
pop
sbb
gs
cmps
inc
fdiv
pop
sub
adc
mov
inc
add
xchg
lods
mov
jb
add
and
loope
inc
push
add
add
cmp
prefetch
xchg
push
cwde
stc
xlat
xchg
mov
ins
lock
cmp
pop
adc
cdq
adc
adc
ja
pop
mov
push
adc
add
ja
outs
rcl
adc
push
push
dec
pop
lds
mov
sbb
bndldx
push
lock
pcmpeqd
ja
cld
push
add
adc
ret
mov
jmp
push
das
test
(bad)
mov
std
and
ss
das
outs
push
push
and
mov
sub
add
mov
cmp
add
test
sbb
mov
push
int3
scas
xor
shl
adc
or
scas
xchg
in
add
pop
dec
adc
inc
pop
pop
mov
ins
adc
cs
mov
data16
cs
mov
pop
xor
sbb
add
inc
test
in
or
jbe
inc
and
push
maxps
or
dec
iret
xor
push
push
inc
mov
mov
add
sahf
sub
mov
fwait
ins
daa
fisub
ja
gs
data16
cmp
jmp
inc
push
in
or
in
adc
repz
pushf
mov
int3
push
mov
push
or
xchg
pop
and
aam
ret
add
rcl
sbb
dec
or
mov
pop
dec
add
add
enter
push
xchg
pop
popa
jo
lods
fcom
mov
pop
dec
jo
arpl
cmp
push
inc
ret
sbb
xchg
leave
jp
inc
les
cs
jne
pop
pop
pusha
or
movs
jg
rcr
loopne
jno
jno
shr
add
and
ss
test
sbb
jne
xor
or
shr
in
retf
dec
mov
data16
std
shl
adc
adc
cmp
pop
sub
in
add
mov
add
add
lods
test
mov
add
adc
outs
jbe
ror
xor
pop
stos
pop
push
lock
mov
push
js
or
pusha
dec
mov
cmp
or
xchg
inc
ins
mov
outs
pop
mov
gs
imul
or
sbb
sub
jne
ret
add
jno
sbb
aaa
fisttp
daa
mov
sub
add
jnp
nop
jmp
push
call
sub
sub
aam
ins
int3
and
sbb
pop
sbb
xor
rcr
add
fldenv
in
mov
pushf
inc
mov
or
stos
dec
gs
jae
bound
mov
add
ins
fsub
lods
nop
int3
in
rcl
fdiv
lds
sbb
pop
adc
test
xchg
test
add
mov
dec
jne
cs
mov
push
ja
data16
push
xchg
adc
add
into
xchg
rcl
fnsave
pushf
adc
push
scas
pop
and
or
sbb
or
inc
out
mov
or
in
addr16
rcr
jb
jne
push
shr
mov
push
push
outs
test
rcl
sar
inc
cmp
inc
data16
lds
dec
jnp
lea
pop
add
jnp
es
inc
sbb
jne
sbb
or
pop
rol
pop
sbb
mov
jo
sbb
sbb
and
js
inc
push
out
push
imul
pop
outs
pop
pop
pop
mov
add
add
popa
scas
xchg
sub
or
fcomp
call
add
or
aaa
inc
bound
inc
push
outs
jae
out
jb
inc
pop
loope
add
sbb
fcom
fwait
inc
inc
pop
jl
ror
mov
in
in
imul
outs
sbb
ins
sbb
cmp
movs
xor
pop
jae
push
nop
jge
push
mov
add
jnp
into
repz
in
sub
cs
adc
loopne
je
lahf
cmps
pop
ins
push
js
jns
(bad)
clc
inc
jp
jl
push
lock
int3
or
cmps
xchg
popf
cmps
push
ins
les
pop
push
jl
jns
js
cld
add
push
push
clc
jg
clc
call
jle
adc
push
mov
mov
rol
mov
imul
movs
and
out
and
jl
inc
push
add
or
and
push
aaa
lock
push
push
inc
push
sub
test
push
into
dec
lods
lods
xchg
sar
or
jo
loope
cmp
add
or
lods
sti
cld
fwait
push
cld
ret
or
ja
mov
add
push
add
shrd
pfrcpit1
mov
and
or
adc
sub
dec
pop
(bad)
jb
add
mov
popf
sub
movhps
push
and
add
retf
fdivp
nop
das
and
add
sbb
jmp
sbb
shl
add
mov
(bad)
lods
and
loopne
es
scas
leave
paddsb
and
add
push
cwde
cs
rol
mov
mov
push
lock
add
mov
jno
xchg
jno
mov
movs
push
test
jno
push
xchg
sahf
cs
jno
or
(bad)
xchg
push
mov
jno
or
fsubr
in
sub
adc
and
cwde
jno
sbb
scas
mov
push
loop
or
cs
jecxz
pop
mov
out
cmp
dec
adc
in
add
add
gs
jp
xchg
adc
push
imul
push
xor
sbb
pusha
push
imul
push
xchg
cmp
ss
mov
pop
push
or
popa
mov
mov
dec
inc
add
test
pop
mov
test
jno
mov
daa
inc
sahf
add
add
xor
in
ret
jmp
or
xchg
xor
add
leave
ja
mov
add
add
jno
and
or
mov
leave
or
ins
out
dec
dec
jb
leave
outs
add
cmp
leave
xor
popa
shl
cmp
mov
pop
adc
dec
rcl
sbb
daa
push
pop
cmp
movs
shr
inc
jns
inc
inc
dec
dec
pop
dec
rol
mov
mov
movs
mov
inc
mov
mov
shr
test
or
pusha
test
arpl
pusha
test
les
int3
test
push
push
call
add
aam
xor
jmp
int3
pop
aaa
jecxz
sbb
pop
xor
addr16
mov
push
push
mov
test
(bad)
xor
jmp
pop
cmp
fadd
scas
add
inc
jecxz
pop
cmp
mov
popf
sbb
fadd
lea
loopne
or
sub
ret
outs
addr16
addr16
xlat
sbb
or
test
or
outs
adc
sbb
pop
xchg
cdq
pop
or
inc
jbe
push
push
es
shl
mov
bound
pusha
pop
int3
mov
jp
jae
mov
pusha
inc
add
inc
jns
jg
and
dec
outs
ja
inc
outs
cwde
jecxz
jl
data16
push
add
jae
push
push
xchg
xor
mov
popa
icebp
ror
ins
not
cmp
sub
loopne
adc
mov
cmp
cmps
sti
push
imul
int3
mov
rcr
mov
mov
xchg
ret
sbb
and
fmul
or
jmp
sbb
repz
pop
adc
sahf
out
ins
add
or
ja
push
sti
(bad)
out
jo
mov
es
sbb
ror
fld
and
sbb
in
sti
sbb
add
push
test
add
push
dec
sbb
idiv
sub
push
loope
add
cmp
or
loop
and
test
pop
or
cwde
xchg
ja
jnp
or
es
loopne
jnp
mov
call
push
sub
call
push
or
mov
push
pop
test
mov
push
add
pop
adc
pushf
push
clc
fst
and
inc
push
ja
mov
xchg
das
and
inc
push
popa
xor
jo
js
inc
push
dec
pop
xchg
or
(bad)
mov
push
add
sub
sub
mov
add
sbb
mul
sbb
(bad)
jge
or
clc
loop
sbb
std
(bad)
cmp
xor
es
aad
mov
shl
jg
push
inc
jno
cmp
dec
pop
aam
push
cmp
jae
add
inc
movs
or
outs
popa
fs
sub
push
add
xor
adc
call
sbb
push
popa
neg
fadd
ja
push
repz
cwde
lea
xor
cwde
gs
or
repz
mov
jnp
repz
pop
pusha
in
pop
popa
repz
jb
push
sbb
cmp
mov
jbe
cmp
inc
jns
outs
or
hlt
nop
or
inc
inc
sbb
cs
mov
xor
or
rcr
rcl
dec
enter
fsubr
pop
sahf
push
imul
add
or
imul
in
repz
div
jmp
loop
pop
(bad)
push
or
xor
xchg
xchg
xchg
xchg
jl
shr
xchg
xchg
retf
adc
xor
outs
movs
jb
add
pusha
lock
jo
jns
pop
(bad)
repnz
add
jne
inc
xor
or
aas
mov
jle
xchg
ja
xchg
(bad)
mov
pop
inc
push
mov
push
sbb
pop
int3
cmp
bound
pop
sub
lock
sbb
loop
add
rol
add
arpl
push
sbb
test
pusha
jnp
fdiv
push
sbb
jo
mov
lock
cwde
in
cmp
add
adc
jo
iret
loope
pop
add
jmp
psubsb
add
ds
cs
idiv
jb
adc
fstp
loop
sar
test
scas
mov
adc
add
mov
jo
test
xor
jae
mov
add
add
(bad)
ins
out
add
cmps
cmps
push
shr
test
test
mov
pop
and
xor
or
out
or
push
loopne
test
xor
or
outs
mov
push
lock
pusha
rcr
push
in
mov
add
xlat
push
push
xor
sahf
out
leave
push
mov
outs
dec
jo
xchg
jno
adc
jo
std
(bad)
cld
or
lock
push
jb
jne
add
test
push
add
jle
shr
or
pop
pusha
inc
cmp
inc
bound
aam
sbb
inc
cmp
push
push
pusha
inc
xchg
rol
inc
int
push
push
add
mov
movs
xor
rcl
sbb
mov
inc
into
hlt
imul
and
or
jne
pop
and
cmp
push
sub
push
push
gs
mov
and
inc
in
test
outs
pop
daa
or
add
cmp
push
pusha
jne
sub
mov
add
rcl
dec
test
loope
dec
out
int
sub
mov
push
dec
inc
lods
mov
ror
mov
cdq
add
jnp
or
movs
xchg
and
add
xchg
or
add
sub
or
(bad)
outs
xlat
push
cwde
jo
xlat
or
push
jb
xor
ror
xor
xor
mov
clc
add
cmps
push
mov
clc
pop
xor
jo
dec
jnp
mov
adc
ret
push
sub
cmp
inc
fs
mov
sub
cmps
xlat
fiadd
or
dec
cmp
adc
xlat
sahf
sbb
ds
arpl
cmp
fdiv
dec
or
popa
dec
lds
adc
dec
adc
nop
cwde
jnp
push
inc
outs
pop
neg
add
ja
push
push
das
pop
push
js
push
push
adc
aas
iret
cs
or
sar
push
(bad)
fwait
retf
push
push
sbb
add
in
xor
and
mov
push
jb
xor
push
mov
or
pop
jae
cld
jl
sbb
cmp
sbb
adc
add
push
es
add
out
les
jle
mov
mov
bound
inc
push
sbb
xor
pop
push
add
add
(bad)
mov
mov
dec
adc
sbb
adc
push
mov
in
scas
lock
sub
outs
add
push
push
dec
inc
inc
push
gs
jo
cmp
mov
enter
sbb
push
mov
int
int
adc
int
pop
jns
xchg
(bad)
pop
sar
add
out
es
cmp
lea
out
mov
es
pop
mov
jmp
out
lods
push
je
jmp
mov
out
mov
mov
mov
or
and
nop
mov
push
in
mov
paddusw
out
mov
mov
lods
popf
ja
clc
push
shl
ret
popa
nop
add
add
stos
inc
outs
loop
dec
enter
inc
xchg
mov
mov
(bad)
mov
cmp
cmp
jbe
push
add
mov
push
cmp
add
jo
push
add
pop
sbb
ret
test
pop
sub
cmp
dec
and
pop
add
mov
dec
movhps
ds
mov
mov
pop
xchg
add
mov
mov
iret
shl
dec
mov
sub
imul
or
cmp
cmp
dec
or
int
and
jmp
mov
sub
in
or
gs
xor
bound
push
jb
inc
inc
inc
push
xor
inc
leave
sub
push
pop
(bad)
xchg
mov
aad
pop
retf
push
push
xchg
retf
(bad)
or
in
jno
xchg
jnp
mov
scas
jmp
mov
or
add
sahf
(bad)
fs
jns
or
out
scas
xor
add
pop
dec
inc
mov
and
rcl
push
or
and
xor
dec
ins
adc
dec
dec
dec
jae
add
lods
inc
or
mov
jl
jnp
bound
retf
push
imul
loopne
aas
cdq
add
sbb
mov
fmul
js
or
(bad)
or
pushw
add
mov
jo
out
or
xchg
mov
adc
clc
ror
cli
or
dec
inc
push
adc
sub
add
push
je
rcl
pushf
pop
ins
mov
shl
jo
or
shl
push
std
sbb
xor
inc
ds
and
icebp
cmp
and
jo
pop
aad
or
imul
jno
xor
fimul
add
xlat
jge
dec
mov
or
mov
bound
or
add
fwait
mov
imul
mov
or
push
addr16
mov
gs
adc
(bad)
enter
lahf
sbb
(bad)
xor
and
jp
jne
shr
imul
in
out
inc
ins
and
out
pop
push
scas
pop
aaa
clc
xor
inc
dec
mov
rcl
add
pop
fucomi
movlps
ins
jne
inc
jo
out
ror
test
push
(bad)
mov
rcr
adc
dec
inc
jne
pop
or
(bad)
lahf
(bad)
test
call
adc
or
add
outs
mov
adc
es
ret
mov
adc
push
push
pop
clc
pop
clc
mov
cwde
sar
mov
push
ds
fmul
xchg
add
fwait
out
mov
push
push
test
mov
add
not
mov
hlt
fisttp
mov
lock
push
in
(bad)
hlt
ret
pop
(bad)
and
pop
mov
add
push
dec
add
xor
out
jae
xor
int
ss
xor
or
xor
cwde
sub
add
push
adc
(bad)
add
test
sbb
add
xor
cmc
mov
cmp
or
loop
jmp
cmpxchg
cmp
pop
inc
cdq
dec
popf
fmul
jno
cwde
je
popf
int3
pop
ja
(bad)
aas
sbb
xor
jae
mov
and
enter
inc
cmp
fisub
sbb
es
aas
jge
ss
(bad)
test
pop
inc
pop
int3
movs
dec
stc
es
imul
add
push
xchg
xchg
adc
(bad)
ss
mov
(bad)
ss
xchg
pusha
mov
add
pop
sub
push
fisub
sbb
push
daa
jno
mov
pop
imul
mov
mov
xchg
sbb
or
fld
push
mov
jae
xchg
cmp
dec
les
inc
and
pusha
sbb
adc
sbb
adc
cs
pop
push
pop
xor
pop
pop
pop
push
xchg
mov
loopne
mov
imul
fcomp
leave
add
adc
clc
cmp
fbstp
sub
bound
xchg
jns
push
jl
stos
jns
sub
enter
dec
and
xchg
test
xor
xor
jnp
pop
js
lods
push
adc
mov
dec
inc
test
xchg
pop
imul
or
loop
outs
and
and
inc
in
(bad)
jae
and
jmp
push
lods
cmp
sbb
or
pop
xchg
call
xor
mov
xchg
and
mov
or
and
and
arpl
clc
and
add
sahf
dec
dec
out
cmc
add
and
add
cmps
les
adc
call
loop
in
adc
add
mov
xor
inc
dec
or
pop
(bad)
clc
cdq
mov
movs
imul
jbe
cwde
arpl
gs
dec
dec
and
in
fs
in
call
mov
or
jne
and
(bad)
push
pushf
daa
inc
and
seta
sub
mov
mov
dec
fstp
xor
add
push
pusha
push
movs
das
add
push
xor
nop
test
or
mov
stos
or
dec
gs
in
jns
jg
pop
add
add
pop
fldpi
arpl
jbe
push
mov
push
and
int
sbb
push
mov
jno
bound
lods
xor
stos
add
ret
sub
fcom
outs
not
dec
das
jle
rol
icebp
pop
and
xchg
in
(bad)
dec
push
ja
out
dec
(bad)
test
(bad)
in
push
loop
loop
sbb
push
fsub
jge
movs
ss
push
cwde
push
or
loopne
loop
(bad)
int3
lock
pushf
repz
jnp
dec
fadd
in
je
pusha
test
and
ret
jmp
push
inc
outs
clc
mov
jno
jle
fs
add
or
(bad)
stos
push
out
jno
cmp
dec
(bad)
cmp
push
push
ins
pop
sbb
aad
pop
add
dec
das
xchg
mov
movs
prefetchnta
loope
call
sub
add
sub
xchg
jae
lods
loop
fimul
jo
(bad)
push
or
(bad)
ret
jae
cmp
imul
mov
outs
outs
add
imul
aas
xor
pop
cmp
ins
js
sub
aas
sbb
aas
cmps
push
mov
dec
imul
test
push
pop
add
lds
or
fwait
sbb
adc
call
dec
add
add
adc
push
ins
test
add
mov
or
add
loopne
in
fmul
hlt
mov
mov
sub
add
push
ficom
inc
test
push
push
sub
out
(bad)
cmp
ja
inc
ins
jo
push
outs
addr16
dec
jo
addr16
inc
add
push
add
or
push
dec
push
push
sbb
fsub
or
call
push
push
push
push
outs
push
sub
jns
push
das
push
xor
scas
push
jnp
cmp
add
pop
cli
test
mov
cmp
push
(bad)
mov
dec
push
push
lods
push
push
or
or
(bad)
cld
xor
or
push
mov
es
pop
enter
dec
in
jecxz
fld
mov
js
or
adc
dec
dec
test
pop
adc
sahf
mov
movs
fcomp
mov
add
nop
arpl
cmp
loope
pop
jnp
jne
adc
cmp
shl
inc
add
sbb
cld
jb
ja
push
mov
dec
or
inc
and
dec
leave
pop
add
xor
xor
(bad)
push
cs
add
push
jecxz
xor
add
fmul
sbb
ret
outs
fild
pop
pop
xlat
enter
fild
ss
push
pusha
mov
fisttp
test
jo
ds
aas
popa
sbb
jnp
mov
sub
ja
jne
jecxz
inc
add
push
add
jo
das
int
push
push
add
aaa
lods
inc
and
cmps
mov
mov
push
data16
or
retf
mov
xor
xor
scas
mov
mov
call
mov
in
dec
sar
or
shl
push
test
xor
mov
push
call
ret
jmp
jmp
push
cs
das
cmc
push
mov
outs
sbb
rol
scas
adc
hlt
ret
add
adc
mov
mov
xor
das
mov
arpl
loope
add
sbb
inc
(bad)
push
ret
dec
push
push
add
cmp
inc
push
or
pushf
cmps
dec
aaa
cmp
setne
movs
leave
mov
sbb
or
xor
pop
daa
and
loopne
or
or
inc
and
sub
sbb
loop
out
dec
or
call
rcr
adc
jnp
pop
out
sub
or
shl
and
push
xchg
jg
cmp
and
jg
jne
into
or
dec
bound
arpl
add
jb
shr
add
mov
stos
(bad)
pop
cmp
pop
and
add
xchg
inc
push
push
outs
sahf
test
xchg
bound
pop
fbld
and
pushf
dec
mov
push
add
into
in
ss
pop
je
jp
adc
push
les
inc
pop
jg
mov
outs
adc
push
inc
jb
jae
xor
pop
and
mov
imul
rol
xor
inc
dec
jne
ret
(bad)
(bad)
mov
push
test
je
add
mov
fimul
and
call
add
mov
pop
lahf
push
sub
ja
cwde
imul
pop
jle
ds
inc
dec
out
mov
fistp
in
mov
inc
cld
mov
mov
and
adc
push
sub
or
add
(bad)
call
rcl
cmp
push
mov
and
jmp
fucomi
mov
js
dec
mov
push
clc
jmp
adc
mov
adc
jg
fsubr
sbb
js
jne
push
cmp
jne
ret
add
call
cli
in
mov
mov
dec
cmp
xor
pop
fmul
push
mov
push
rcl
or
ss
data16
mov
adc
mov
or
or
jmp
rcl
xor
pop
pop
pop
dec
adc
pusha
outs
mov
lock
add
jmp
out
sbb
js
pop
push
mov
pop
addr16
call
mov
mov
inc
sbb
fnstcw
test
or
leave
fdivr
shr
xor
and
sbb
jle
and
inc
test
mov
test
cmp
add
jl
lock
jnp
mov
cmp
jne
mov
mov
pop
bnd
inc
mov
test
add
div
repz
or
adc
jns
push
or
push
mov
or
push
rcl
xor
xor
xchg
pop
push
lock
cmp
out
jnp
div
jecxz
xchg
adc
push
mov
xor
inc
mov
mov
je
mov
push
(bad)
jo
mov
xlat
icebp
mov
je
pop
test
jge
loopne
adc
mov
inc
and
call
inc
or
(bad)
adc
daa
js
adc
or
sbb
dec
sbb
cmp
or
push
cmp
pop
lea
mov
mov
ret
mov
add
adc
lods
mov
xchg
pop
ret
and
add
addr16
(bad)
push
fcom
pop
add
and
repz
push
aad
inc
or
pop
mov
mov
ds
mov
loopne
(bad)
ins
addr16
pop
clc
adc
pop
(bad)
aam
inc
push
dec
push
std
or
ror
push
in
push
sub
jno
sti
data16
mov
xlat
mov
pop
mov
in
mov
mov
jl
inc
xor
cmp
das
mov
cmps
dec
bound
jne
or
dec
jne
pop
int
jl
push
mov
jmp
jmp
ret
push
data16
enter
jge
and
inc
or
push
or
push
add
dec
pop
gs
(bad)
je
add
xor
es
add
push
push
add
pop
add
cmps
cmp
imul
pcmpgtd
not
inc
sub
push
(bad)
cmp
add
pop
test
inc
fs
push
xor
or
dec
ss
dec
data16
and
pusha
es
int
inc
cli
cs
push
sbb
loopne
inc
push
aaa
stos
inc
outs
pop
push
pop
pop
push
or
shl
mov
inc
xor
xor
or
adc
cmp
add
ss
outs
push
or
xor
inc
ror
dec
dec
mov
xor
cwde
push
cmps
xor
dec
cmp
dec
xor
xor
jo
lods
(bad)
scas
push
push
push
xor
or
scas
sbb
call
lock
xor
mov
push
mov
pop
push
pop
jbe
inc
into
push
aaa
pop
adc
es
xor
mov
push
xor
lods
(bad)
aam
(bad)
dec
push
mov
stos
xor
xor
or
pop
stos
movs
scas
xor
dec
pop
fldcw
call
mov
std
fcomip
sti
mov
and
rep
pop
test
je
movs
push
push
cmps
sub
jb
test
push
popf
xchg
loopne
mov
cmp
xor
inc
dec
or
add
add
ins
jge
adc
movzx
mov
lea
mov
hlt
cmp
movs
or
cmc
out
sti
fxch
jl
lea
mov
push
mov
je
and
dec
out
xlat
int
push
jne
(bad)
ds
or
add
add
and
mov
cmp
mov
int
mov
in
loop
mov
fdiv
push
test
mov
jmp
cmp
inc
adc
inc
sbb
pop
jge
and
es
cmps
mov
sbb
xchg
and
iret
or
lds
pop
dec
mov
xor
add
xchg
icebp
add
clc
push
loope
adc
cdq
sar
mov
sub
pop
mov
addr16
test
in
xchg
xor
mov
adc
inc
sbb
inc
sbb
adc
mov
aaa
sub
(bad)
lock
movs
mov
neg
shl
(bad)
fadd
pop
adc
nop
add
jg
adc
xlat
jo
test
sbb
inc
mov
or
cmp
pop
in
test
xchg
clc
jmp
mul
aaa
sar
push
sbb
pop
pop
cmp
into
cwde
or
add
push
fucomi
adc
(bad)
or
pop
je
arpl
loopne
out
add
test
fsub
add
(bad)
js
inc
sbb
and
sub
jno
mov
ins
xchg
aaa
ror
js
adc
push
imul
pop
pop
sbb
sbb
mov
mov
sbb
nop
add
push
test
jnp
std
add
inc
cwde
(bad)
adc
jb
std
setne
mov
sbb
rcr
sahf
stos
inc
and
adc
cmp
cmp
mov
call
cmp
test
js
loope
lods
retf
fsubrp
cmp
clc
cmc
inc
into
add
mov
add
test
and
shl
dec
(bad)
fsubr
dec
inc
dec
mov
cld
mov
sbb
repz
out
ins
sub
push
or
add
sbb
cmp
mov
test
mov
push
mov
xchg
cmp
add
push
or
or
js
jae
cld
or
adc
mov
inc
mov
add
mov
or
pop
sbb
in
xchg
jg
in
pop
out
sbb
dec
sub
outs
push
sbb
clc
mov
jecxz
sar
ds
or
(bad)
pop
inc
data16
and
inc
repnz
mov
or
adc
jno
mov
add
mov
pop
nop
jo
pop
in
mov
and
ja
mov
in
daa
xchg
dec
cmp
ror
scas
daa
clc
jae
xchg
shl
ss
push
pusha
addr16
aad
pusha
cmp
inc
fs
cmp
jo
pop
ds
test
je
ins
aas
add
inc
and
loop
jge
gs
lea
sub
xor
dec
ins
outs
or
xor
jo
iret
das
push
cmp
clc
pop
dec
pusha
into
gs
outs
jecxz
inc
shr
cmp
fiadd
dec
xor
scas
adc
ret
and
sbb
ins
data16
sbb
jmp
and
sbb
je
lea
dec
sub
and
sbb
and
adc
add
mov
jo
cs
pop
fidivr
fcom
dec
nop
mov
outs
ret
xchg
cmp
sbb
pushf
and
dec
cwde
pusha
xor
ss
gs
cwde
test
movs
xchg
xchg
cmp
lea
mov
(bad)
loope
cmp
rcr
jo
(bad)
mov
jne
movs
add
fisttp
test
dec
push
push
push
shl
mov
mov
cmp
jne
data16
jle
and
sbb
mov
mov
sbb
inc
hlt
cmp
ror
push
pop
jp
mov
jl
jle
mov
cmp
rol
cld
jno
imul
cld
push
push
mov
or
loop
xchg
mov
push
lock
inc
or
and
xchg
dec
sub
movs
xchg
out
jbe
sub
sbb
push
rol
or
fcom
and
push
cmp
sbb
adc
test
jae
push
popa
ror
xlat
je
push
adc
es
xor
fiadd
adc
pusha
js
xlat
stc
dec
test
fldenv
aam
ss
mov
pop
cmp
mov
and
add
inc
or
mov
and
lahf
enter
pusha
test
test
pop
js
and
pop
inc
adc
jmp
mul
and
mov
cmp
ret
out
movzx
inc
mov
mov
pop
or
sbb
adc
push
je
in
hlt
mov
push
pop
lea
retf
xchg
popf
xor
mov
jmp
inc
push
scas
sub
sbb
xchg
sbb
in
mov
rcl
test
jl
and
push
scas
adc
pop
xlat
aaa
pushf
neg
jbe
jns
je
call
or
je
add
sub
jb
je
(bad)
js
outs
or
je
jmp
jo
aaa
xchg
jecxz
jmp
xor
add
mov
push
call
in
and
retf
loopne
jmp
mov
mov
adc
lods
push
je
stos
test
pop
sub
stos
imul
in
mov
je
icebp
dec
fwait
mov
shr
mov
movs
pop
icebp
pop
jns
aam
mov
inc
inc
add
dec
je
stos
inc
push
cmp
stos
repnz
imul
pop
ins
jo
dec
cmps
push
fstp
cmp
cld
jmp
pushf
xchg
jmp
cmp
inc
jle
cmp
mov
sbb
popa
sbb
or
adc
movzx
add
mov
cmp
shr
out
cmp
(bad)
cmp
test
jae
xor
dec
push
retf
push
pop
shr
pop
xor
jo
lock
mov
mov
jp
cmp
jo
jmp
adc
mov
and
add
or
jle
int3
mov
sbb
push
adc
dec
push
jbe
arpl
cs
icebp
cs
ret
mov
das
lds
xchg
mov
cmp
add
adc
js
mov
inc
xchg
repnz
and
jp
or
repnz
retf
or
lods
mov
mov
dec
xor
push
mov
test
jbe
push
inc
xor
jmp
push
adc
cmc
loopne
out
in
int3
test
sub
cmp
adc
pop
in
or
mov
(bad)
fld
or
fs
jb
xor
add
mov
cwde
mov
loopne
jmp
ret
test
aaa
jmp
dec
push
pop
sub
add
mov
ss
push
int3
or
jg
mov
mov
mov
ret
inc
cwde
adc
inc
push
pop
sub
inc
cmps
inc
mov
pop
clc
loopne
dec
shr
xchg
inc
push
and
int3
fidiv
mov
mov
cmp
cmp
push
(bad)
jmp
mov
(bad)
outs
xor
add
mov
movs
push
inc
dec
lea
dec
arpl
or
inc
xor
lea
je
xlat
or
loop
call
adc
push
or
adc
data16
cmp
cmp
outs
and
add
sbb
scas
enter
fs
xor
adc
inc
out
xor
repnz
xchg
mov
mov
pop
fadd
sub
pop
adc
daa
mov
or
xchg
sbb
add
fistp
inc
pop
ja
mov
sub
pop
pusha
les
arpl
jecxz
cmp
inc
or
push
lods
sbb
add
jnp
cmp
sub
popf
xchg
or
cmp
mov
sub
fdiv
ins
mov
fsubr
add
adc
js
loopne
push
mov
or
test
push
or
ja
mov
and
xor
mov
add
pop
jo
inc
ja
enter
mov
fsub
adc
add
jo
aam
xor
clc
and
push
pop
add
call
hlt
jbe
push
pop
pop
mov
push
xor
jbe
push
data16
push
into
cdq
pop
inc
push
xchg
mov
fdiv
push
adc
test
xor
sbb
push
adc
push
int3
repnz
bound
int
or
pop
cmp
ins
movs
and
push
lahf
sbb
call
mov
mov
inc
adc
add
cmp
jecxz
bound
fnstsw
push
bound
add
jge
inc
or
pop
xor
jmp
pushf
push
(bad)
sbb
loopne
sub
aaa
push
ficom
xlat
scas
call
push
mov
push
add
enter
sti
adc
adc
cmp
xor
push
jbe
call
ror
push
ds
sbb
sub
add
(bad)
xchg
or
or
cli
mov
cmp
out
pop
mov
arpl
dec
jo
dec
inc
jg
add
repz
dec
sbb
xchg
imul
xchg
sub
fbld
fbld
movs
and
add
aas
jnp
sbb
iret
test
es
(bad)
jmp
lea
loopne
xor
push
shl
and
imul
add
sbb
adc
jns
clc
xchg
shl
ja
push
inc
xchg
sub
hlt
popa
or
inc
fdiv
inc
pop
push
(bad)
dec
pop
cmp
out
and
div
sar
cmc
out
js
sbb
in
jo
add
jb
fwait
and
enter
sbb
sbb
add
add
add
adc
jge
push
out
ficom
pusha
push
loop
inc
push
out
test
add
aad
xchg
jbe
push
std
out
test
cld
inc
jnp
jns
sbb
mov
pop
ja
add
jb
mov
pusha
dec
leave
ins
(bad)
clc
jge
imul
dec
ja
xchg
mov
inc
aas
push
ja
jno
mov
pop
push
jge
scas
mov
xchg
xlat
adc
mov
mov
ret
xchg
aaa
lock
daa
adc
xor
test
je
ficom
fld
(bad)
mov
or
cmp
add
add
xchg
adc
lock
mov
pusha
jle
cld
sbb
call
xlat
popa
lock
add
cld
or
test
mov
mov
fdiv
js
inc
call
mov
loopne
loopne
data16
push
inc
out
arpl
push
cmp
add
add
push
xor
and
cmp
pusha
add
xor
cmp
repnz
ror
or
jg
or
push
cdq
adc
test
jns
or
cmp
add
xor
or
stos
and
sahf
in
lea
or
cmp
sub
ss
add
mov
out
pop
cld
psadbw
sbb
lea
mov
or
pop
jae
data16
rcl
clc
pop
sub
or
movs
xor
inc
add
add
xor
jo
jbe
js
and
mov
loopne
sbb
ret
fisttp
add
cmc
push
mov
xchg
ins
or
or
je
daa
or
xor
out
push
sbb
jo
sbb
test
not
mov
dec
pop
inc
out
lock
dec
sbb
add
int3
stos
and
fistp
push
not
sbb
movs
sbb
ficomp
in
pop
xor
add
sahf
aam
pop
inc
test
outs
mov
or
pop
mov
inc
ret
xchg
inc
jns
xchg
loope
add
je
cmps
cmp
push
push
xor
mov
add
ins
cwde
sbb
push
fs
sbb
loope
out
loopne
add
xor
jp
out
sub
dec
test
mov
rol
das
xchg
mov
sbb
ja
pop
pusha
shl
push
rcl
xchg
jmp
dec
pop
add
jmp
ror
shl
inc
cmp
cmp
shl
jmp
shl
mov
add
xor
jnp
rcr
mov
sub
fcom
aas
sub
ret
pusha
test
ret
je
pop
adc
mov
pop
call
and
and
or
xchg
fimul
or
lea
push
sbb
sti
fwait
daa
xor
in
cmp
shl
sbb
test
out
cmp
je
test
(bad)
inc
jmp
and
add
jle
add
repnz
mov
sbb
and
add
xchg
nop
or
or
in
lahf
and
push
push
xor
mov
xor
or
inc
and
pop
xchg
fcomp
cmps
es
loopne
cmp
ins
sbb
sub
ret
sbb
test
test
and
(bad)
push
adc
lds
ss
loopne
lods
sub
out
cmp
adc
cmp
adc
std
mov
popf
and
inc
aas
sti
sub
aas
not
(bad)
jp
aas
mov
dec
cli
dec
add
movs
retf
mov
das
dec
mov
test
dec
push
jae
(bad)
mov
adc
and
ds
jle
call
fild
into
loopne
dec
cld
jecxz
out
mov
jo
add
aas
cmps
push
xor
inc
add
mov
shl
add
fcomp
push
mov
cmp
lea
mov
adc
cmp
cld
dec
add
(bad)
cmp
pop
ficomp
rol
mov
xor
add
sbb
in
scas
loopne
or
outs
push
jne
adc
int3
mov
mov
fldenv
popa
and
call
xchg
inc
int3
push
push
push
add
mov
cmp
fidiv
add
jecxz
std
push
pop
bound
jge
mov
je
(bad)
cmc
fwait
std
cmp
add
movs
pop
jno
lock
lock
and
inc
dec
fadd
push
je
sub
sbb
add
add
out
push
sbb
or
cmps
cmc
aam
jbe
gs
adc
fucomp
pop
push
push
cwde
loope
pop
xor
or
call
(bad)
adc
inc
add
loope
repz
push
(bad)
mov
popw
lock
dec
je
sub
je
or
retf
dec
ret
dec
div
shl
and
jmp
clc
add
arpl
adc
fsubr
clc
mov
push
sbb
inc
div
mov
dec
cmp
jne
jle
cmp
adc
push
mov
add
or
clc
or
test
inc
jbe
push
stc
pushf
xchg
add
out
push
sbb
and
pushf
cmps
(bad)
movs
js
fst
cmp
push
mov
or
mov
aam
rcl
mov
adc
add
fisub
call
push
cmp
push
call
pop
xchg
gs
adc
jmp
jne
jmp
xchg
test
push
sbb
or
inc
sbb
sbb
cmp
and
add
retf
pop
inc
pop
paddusw
sub
push
push
add
sti
mov
push
stos
dec
and
repz
fmul
sbb
jmp
lds
add
psrlw
adc
mov
sbb
sub
or
(bad)
mov
add
cmps
bound
lea
add
dec
pop
add
xor
mov
or
add
mov
mov
and
ret
test
jne
mov
ja
or
push
mov
adc
adc
dec
test
jle
mov
outs
mov
mov
xchg
adc
mov
jne
add
cmp
std
jge
adc
adc
adc
mov
push
loopne
sbb
add
xor
enter
(bad)
lock
or
mov
clc
xor
clc
cmps
les
dec
js
sbb
add
(bad)
in
out
dec
mov
enter
mov
dec
jns
jmp
push
xor
and
(bad)
mov
adc
or
jmp
ins
xbegin
sldt
adc
adc
adc
mov
and
pop
test
cld
aad
mov
loopne
sbb
push
sti
adc
sub
aam
mov
sub
or
sbb
rol
and
add
ds
ds
out
fucomip
inc
pop
and
mov
lea
in
icebp
pop
sub
fdivr
push
cs
ss
xor
jmp
addr16
data16
sbb
gs
sub
mov
xlat
cmps
icebp
push
loopne
loop
add
sub
xlat
clc
dec
sbb
mov
and
cmp
sbb
mov
xchg
or
add
dec
in
test
mov
lea
icebp
inc
das
les
inc
add
or
add
mov
dec
pusha
push
dec
andps
and
push
sub
fnstcw
adc
ror
rol
push
push
data16
outs
push
push
adc
loopne
imul
mov
add
add
mov
or
sub
iret
sbb
outs
fimul
mov
add
add
imul
sub
sub
adc
fiadd
add
jmp
mov
xchg
nop
mov
pop
jno
aam
add
pop
xor
jecxz
push
sub
push
push
or
sub
mov
inc
cmp
jge
inc
push
lahf
jae
loopne
sbb
(bad)
fidivr
xor
dec
cmp
mov
push
push
sbb
lock
and
cli
(bad)
xor
cmp
inc
inc
push
das
pushf
test
mov
push
mov
leave
ror
xor
add
add
mov
inc
ja
stos
pop
js
ja
add
fdivp
aad
ret
cld
lea
push
or
xor
cmp
add
add
push
jmp
test
(bad)
jno
add
mov
xchg
inc
pop
(bad)
rcr
and
rcr
mov
adc
add
push
pop
cld
xor
loopne
cmp
mov
rol
mov
inc
popa
pop
jo
mov
addr16
jb
cmp
push
and
int3
mov
sbb
stos
loop
add
leave
jne
jbe
dec
or
xor
sbb
jnp
pop
sub
jmp
xor
sub
sub
add
(bad)
adc
add
or
add
pop
add
pop
push
out
or
inc
push
test
test
xchg
or
jle
dec
mov
dec
ror
rol
push
call
cbw
dec
cwde
inc
and
dec
jo
or
(bad)
cmp
sbb
sub
loope
lahf
inc
ds
cmp
jg
test
jle
cmp
jg
mov
mov
enter
sub
mov
(bad)
movs
mov
ror
arpl
not
loopne
pop
pop
movs
cmp
xchg
(bad)
pop
retf
push
fs
jmp
mov
jne
push
mov
dec
mov
add
or
inc
je
xchg
shl
cmp
inc
in
xchg
xchg
dec
and
sub
fadd
dec
xchg
add
xchg
sbb
pop
ror
scas
ds
or
mov
ret
jg
test
test
aad
int3
shl
movs
add
idiv
ins
mov
jge
push
mov
ret
jo
xor
jg
or
jl
out
loope
push
lea
pushf
adc
inc
xchg
lock
jle
pop
test
test
mov
dec
inc
dec
jne
cmp
add
xor
adc
jle
inc
and
or
inc
or
cmp
cmp
xor
cmp
cmp
rcl
pop
retf
pop
jecxz
mov
push
ins
in
add
sub
xchg
sub
aaa
out
or
clc
pop
aam
pop
lods
hlt
sbb
and
int3
stos
jge
bsr
sub
leave
mov
push
mov
pop
cwde
sbb
fbld
mov
ins
mov
push
mov
add
fadd
loop
popf
movs
jb
or
shl
stos
pop
mov
add
push
mov
ss
les
mov
cmps
fst
sbb
inc
mov
adc
cdq
xor
sahf
or
push
mov
adc
xor
pop
push
push
scas
idiv
pusha
push
push
and
and
loopne
fcom
aas
rcr
imul
jmp
mov
shl
pop
xor
cmp
adc
add
push
push
or
inc
xchg
into
repz
nop
adc
adc
ret
clc
pop
test
(bad)
fcmovu
push
and
push
push
or
jp
retf
into
and
loope
aas
mov
sbb
jb
push
jl
(bad)
(bad)
sti
lea
mov
pop
jmp
ret
xor
mov
pop
mov
mov
mov
inc
stos
xabort
lods
std
sub
je
dec
or
jle
lock
jmp
mov
ret
in
sub
and
mov
jae
jmp
adc
pusha
data16
imul
sub
push
add
inc
and
add
and
push
lods
loope
jnp
int3
and
sub
icebp
gs
push
lods
mov
or
xor
mov
mov
fsub
into
retf
enter
jmp
out
add
imul
add
add
sbb
push
call
data16
mov
jmp
ret
or
mov
cmp
jbe
mov
test
hlt
pop
fldenv
rcl
xchg
cmp
fist
and
pop
jno
xchg
xor
push
jb
inc
test
pop
test
adc
cwde
imul
dec
setne
cmp
xchg
imul
mov
(bad)
jge
ins
pop
xor
pop
rcr
in
lods
push
xchg
out
and
mov
mov
cs
test
add
jo
psubsb
je
push
sahf
push
and
loopne
pop
lock
leave
retf
push
imul
hlt
clc
pop
dec
call
add
or
sub
shl
cmp
adc
loopne
mov
jl
dec
mov
popf
jne
repnz
mov
out
cmp
stos
loop
jo
cmp
cmp
js
sar
div
sbb
inc
fadd
call
xor
mov
fwait
xor
add
call
lods
or
lods
ret
popa
not
scas
mov
mov
mov
in
jb
lods
mov
push
mov
jge
push
add
pop
cmps
lods
push
jl
sbb
pushf
inc
adc
outs
sbb
adc
xor
xor
sbb
pop
pop
cmp
adc
pop
adc
or
add
(bad)
out
pop
int3
adc
dec
out
xchg
sahf
adc
shl
mov
fimul
js
lock
push
dec
and
in
unpcklps
pop
call
or
test
mov
sar
mov
dec
sbb
inc
adc
das
push
gs
xchg
fmul
and
adc
or
add
ins
mov
test
sbb
std
push
push
das
test
enter
xor
inc
clc
push
push
and
adc
sbb
aam
dec
push
push
(bad)
xchg
mov
dec
cwde
jmp
or
mov
add
mov
fbstp
dec
jo
add
push
add
cmps
aad
cmps
adc
movsx
pop
mov
xchg
cmps
push
mov
xor
sete
pushf
pusha
xor
outs
out
jmp
sub
jo
xor
push
mov
inc
or
mov
cmp
loopne
shl
xchg
xor
push
push
mov
sub
dec
mov
sbb
loop
push
lea
cmp
add
sbb
fs
pop
jne
cmp
add
(bad)
xor
cs
in
arpl
cmp
je
xlat
push
dec
shr
cmp
mov
xor
add
leave
pop
(bad)
lock
add
cwde
push
xor
addr16
pop
or
xor
shl
ja
ret
xor
pop
mov
repnz
in
dec
rcr
out
or
repnz
out
jp
adc
outs
adc
sbb
pop
adc
or
dec
add
and
lods
sbb
cmp
adc
movs
jb
js
pop
punpckhbw
xor
test
enter
dec
(bad)
leave
(bad)
rcl
adc
jl
and
xor
ret
pop
sbb
inc
pop
cmp
cmp
test
push
and
jmp
fld
in
fwait
retf
push
inc
imul
je
enter
(bad)
enter
(bad)
fstp
push
sbb
or
popa
idiv
inc
jb
jo
imul
pop
pop
add
inc
js
outs
jae
(bad)
mov
sub
or
arpl
jo
sub
(bad)
push
sub
sub
add
pusha
cmp
add
sahf
pop
or
inc
adc
retf
inc
jnp
dec
push
pushf
jge
sahf
out
xchg
mov
mov
repz
cmp
data16
lock
int3
imul
outs
xlat
ins
push
nop
out
adc
add
add
sti
(bad)
mov
push
dec
stos
movs
push
inc
push
add
xor
jbe
pop
cld
scas
mov
dec
imul
push
inc
jb
loopne
mov
and
bound
add
sbb
shl
pop
jnp
push
gs
mov
pop
jg
bound
out
jb
jns
pop
add
inc
fs
mov
inc
sbb
inc
lods
sbb
jbe
add
sbb
xchg
jo
xor
mov
sbb
pop
mov
dec
add
cdq
fld
shr
outs
fs
inc
popa
in
and
cmp
mov
add
and
ins
retf
xor
aaa
or
loope
ret
mov
mov
jbe
jae
lea
cmp
mov
(bad)
ficom
jb
outs
add
jae
adc
add
add
or
pop
ror
or
sub
js
and
push
mov
xlat
pop
out
push
rcr
loopne
enter
arpl
jae
arpl
xor
push
add
adc
jnp
sbb
adc
jle
cmp
push
nop
jl
imul
adc
dec
loopne
mov
rol
repnz
dec
hlt
mov
or
jae
xchg
push
lock
sbb
inc
lock
(bad)
in
mov
inc
call
data16
call
add
ja
mov
inc
es
sub
je
or
ret
adc
mov
mov
daa
gs
xor
add
daa
mov
mov
dec
push
push
loopne
mov
daa
bound
xchg
pop
repnz
outs
fistp
lock
clc
mov
dec
test
jl
inc
xor
mov
cs
ror
(bad)
adc
inc
cmps
push
inc
dec
jne
mov
and
xor
sub
pop
int
movs
jle
adc
loopne
push
lahf
mov
hlt
xor
jmp
loope
cmp
popf
mov
loope
sbb
add
jo
sahf
add
(bad)
xor
fcomp
bound
or
inc
fdiv
jl
sbb
dec
jmp
dec
xor
in
sub
test
and
leave
pop
mov
or
data16
pop
or
add
fiadd
jecxz
mov
ss
add
js
data16
xchg
dec
push
ss
mov
add
cmc
jo
popa
add
or
cmps
lds
aad
push
js
stos
lock
ins
je
push
sub
ret
ret
mul
dec
fbld
xchg
sbb
pop
add
mov
push
test
test
inc
dec
movs
cmps
cli
fcmovb
push
fisttp
ss
daa
xchg
es
pop
mov
mov
xchg
push
xchg
push
inc
sbb
movs
sbb
(bad)
push
adc
xor
fdivrp
bound
jb
and
sar
loopne
push
imul
dec
mov
imul
add
int3
xor
inc
into
push
or
loopne
or
jle
les
or
repnz
mov
mov
pop
mov
push
test
sub
lea
add
mov
(bad)
sub
mov
clc
and
mov
mov
push
xchg
pushf
and
cwde
cdq
add
ja
and
lahf
das
pop
add
push
or
leave
or
lock
push
sub
xchg
sti
sub
mov
jo
cdq
jle
shl
jne
add
mov
dec
adc
out
jp
sbb
sbb
mov
add
fisttp
mov
fld
adc
nop
cmp
mov
cmp
push
mov
push
outs
ss
(bad)
mov
test
xlat
int3
dec
adc
push
ja
cwde
cld
mov
ror
clc
cmp
adc
imul
or
ds
xchg
pop
idiv
les
mov
out
sbb
push
iret
push
xchg
or
sub
adc
scas
das
jno
test
fs
sbb
in
mov
mov
(bad)
pop
or
xor
cmp
mov
or
push
push
ins
jae
gs
add
push
inc
or
popa
pop
add
mov
pop
pop
shl
std
(bad)
cmp
pusha
and
and
and
call
outs
fs
mov
mov
(bad)
in
xchg
dec
mov
imul
repnz
in
mov
sbb
push
push
or
mov
mov
clc
jno
push
inc
mov
mov
jo
mov
call
out
push
mov
xchg
test
into
lods
mov
rol
sbb
xchg
das
sbb
adc
mov
mov
add
dec
mov
ror
loopne
pop
test
jnp
inc
push
pop
sub
add
fst
aaa
sub
shr
cmp
xlat
mov
mov
xlat
push
scas
cmp
and
mov
cs
aaa
cmp
stos
nop
out
dec
hlt
sub
mov
out
mov
arpl
inc
and
jo
xchg
xor
ins
mov
ins
clc
ror
xchg
pop
out
cmps
je
sub
jae
pop
fmul
xor
cmp
add
inc
movs
cmp
sbb
cmp
(bad)
lock
ins
or
and
xchg
or
aas
call
adc
mov
nop
adc
push
jmp
pop
add
and
xor
jmp
icebp
dec
test
sub
mov
sub
add
dec
jmp
push
sub
pop
jg
mov
int3
add
cmp
push
jbe
mov
add
ror
or
jo
sub
xchg
ss
in
sub
test
sbb
xor
or
(bad)
(bad)
lahf
mov
in
cmp
xor
lods
mov
mov
sub
call
cmp
ret
and
mov
lods
sub
les
shl
daa
lock
sbb
cmovp
fistp
stos
mov
mov
or
dec
ret
jo
js
dec
fwait
mov
adc
add
imul
(bad)
mov
test
loopne
test
add
outs
fst
sbb
add
loop
cmps
sbb
dec
mov
bnd
ja
pop
imul
pusha
push
dec
xor
sub
fdivrp
inc
or
loopne
push
sbb
and
jo
sbb
imul
rol
ins
mov
or
push
ror
and
sar
(bad)
stos
(bad)
xchg
push
sbb
jb
dec
or
sub
stos
xor
add
push
je
shr
popa
mov
out
das
mov
pop
mov
add
xchg
sbb
and
inc
clc
ror
mov
inc
mov
xchg
sub
push
loopne
add
and
and
(bad)
mov
pop
sub
inc
cmp
and
inc
jmp
inc
imul
adc
jmp
data16
or
loope
mov
jmp
push
enter
sub
dec
or
in
lock
sub
clc
fisubr
and
es
pushf
push
cdq
and
hlt
nop
xlat
push
call
mov
push
sub
inc
nop
or
push
push
add
in
call
sbb
scas
into
jl
or
dec
loopne
in
add
adc
add
mov
or
pop
and
xchg
adc
mov
imul
sub
mov
mov
mov
xor
cdq
xchg
imul
push
js
inc
sub
jnp
pop
or
(bad)
push
fadd
mov
jb
ins
(bad)
xor
pusha
dec
shr
in
sbb
add
mov
icebp
retf
sub
lea
ret
mov
or
fwait
enter
nop
aam
adc
push
retf
mov
test
dec
inc
or
ins
sbb
xor
xchg
or
rcl
xchg
mov
sbb
dec
mov
ss
mov
push
push
sti
movs
imul
fild
mov
dec
jmp
push
in
or
pop
test
sub
ins
neg
cmp
movzx
xchg
(bad)
loope
test
das
test
and
call
in
ret
inc
push
inc
imul
push
(bad)
push
sub
lock
and
add
nop
inc
mov
je
add
je
add
add
les
add
mov
inc
adc
bound
icebp
push
add
neg
dec
enter
dec
ret
ss
js
or
sub
cmps
test
scas
gs
cmps
add
(bad)
iret
mov
jmp
(bad)
sbb
stos
call
pop
sub
aaa
mov
cwde
mov
std
jmp
call
add
inc
int3
imul
out
push
push
sti
aam
fsubr
loope
cli
or
cmp
jg
mov
or
daa
cmp
mov
push
loopne
and
inc
sub
sub
jecxz
cwde
clc
dec
jge
push
nop
mov
es
jge
and
inc
je
in
int
ins
mov
shr
xor
cwde
sub
fcom
dec
sbb
ds
mov
mov
add
mov
dec
shr
sub
cdq
or
(bad)
hlt
out
jnp
call
test
aaa
call
sbb
test
inc
mov
lods
outs
cwde
mov
adc
fsub
mov
mov
mov
pusha
adc
aam
call
or
fidivr
scas
loopne
(bad)
(bad)
int
call
inc
cmp
xadd
jecxz
clc
push
pop
and
adc
aad
aad
mov
loop
mov
or
dec
inc
mov
ror
push
in
mov
sub
push
sbb
pusha
lock
fdivrp
mov
mov
in
ret
iret
rol
cmp
out
lea
clc
inc
ror
add
aam
int3
iret
sbb
nop
sahf
ja
pop
sbb
adc
xchg
add
inc
fsub
or
mov
xchg
or
inc
ins
cmps
(bad)
daa
push
aaa
or
jmp
add
adc
and
mov
add
fsubr
cdq
mov
dec
mov
ins
and
inc
sti
das
ja
xor
bound
add
fld
fist
xchg
rol
das
mov
ins
cmc
ficomp
je
out
mov
rcl
ins
xor
mov
(bad)
cs
push
sti
mov
das
out
cmp
sub
lock
aaa
inc
cmp
arpl
or
popa
add
cs
ins
scas
cmp
je
cmp
pop
loop
ins
jmp
add
pop
sub
and
pop
retf
adc
mov
adc
or
or
shr
sbb
push
sub
push
adc
jo
fidiv
or
sub
sbb
or
adc
xor
stos
jle
sub
bound
and
dec
xor
aaa
shl
test
cmp
and
aas
pop
push
fadd
pop
sub
push
pop
fs
in
mov
jg
jmp
add
dec
inc
aaa
mov
and
addr16
sub
je
add
push
push
xchg
sbb
adc
ja
mov
xor
jnp
jbe
cmc
inc
sbb
ja
test
dec
sbb
push
adc
pop
mov
scas
push
push
jmp
nop
lea
clc
cmp
jle
add
add
jmp
mov
sbb
sbb
mov
jg
enter
jne
cmp
xchg
fstp
loopne
add
cli
or
adc
fs
inc
mov
pop
push
scas
mov
pop
add
jl
jns
pop
adc
add
shr
outs
xchg
dec
pushf
dec
daa
inc
adc
or
cdq
and
xchg
xor
in
jmp
lods
je
int3
add
pusha
sub
mov
or
xor
jnp
xchg
sub
dec
scas
push
mov
ins
xor
push
and
cmp
data16
movs
or
mov
dec
mov
and
push
nop
dec
add
add
mov
mov
add
fmul
sbb
fld
push
jge
and
loopne
cmps
repz
fld
fmul
sbb
adc
je
ret
sbb
xor
mov
pop
sub
and
dec
ret
or
fiadd
or
int3
lock
jns
add
push
inc
pop
or
rcl
xchg
or
sub
adc
xchg
push
bnd
or
shl
mov
loopne
push
sub
push
sbb
add
mov
mov
pop
aas
xor
jle
xchg
sbb
test
cmp
pushf
pop
sbb
bound
sahf
mov
sub
adc
ds
add
imul
imul
xchg
ret
push
test
ror
fsub
sub
jae
mov
jae
test
or
adc
xchg
mov
mov
into
add
adc
cmp
mov
xchg
add
stos
enter
adc
xchg
inc
out
fidiv
pop
jo
retf
out
pop
data16
data16
stos
scas
jg
or
fisttp
sbb
push
add
xor
xor
add
(bad)
jnp
mov
jo
push
mov
push
(bad)
push
xchg
sub
lock
(bad)
jl
jecxz
or
push
xchg
add
sub
add
ja
out
cwde
in
jno
push
sub
cs
dec
jmp
xchg
je
push
(bad)
or
cs
(bad)
clc
or
jl
jp
int3
or
cmps
fnstcw
ss
les
push
cmp
out
jns
js
cld
add
push
push
clc
jg
sbb
rol
fs
ins
add
inc
fdivr
add
(bad)
scas
sbb
pop
inc
inc
imul
inc
add
(bad)
(bad)
and
inc
dec
ins
sub
pop
cmp
or
or
push
popa
ins
gs
out
push
push
(bad)
pop
or
ss
push
iret
push
mov
ins
inc
popa
outs
inc
daa
push
lock
jae
bound
or
or
or
sbb
popa
data16
fbld
pusha
mov
outs
dec
lods
test
add
in
or
lods
adc
add
jne
std
imul
mov
push
push
dec
cmp
pop
dec
mov
icebp
adc
loopne
cs
push
bound
push
mov
push
xor
xor
sbb
mov
cmc
lock
jge
xchg
stos
dec
dec
mov
jo
out
jne
rol
dec
pcmpeqd
push
outs
xchg
push
jp
clc
mov
pop
add
pop
jge
es
adc
aam
jge
push
pop
cld
adc
add
dec
or
(bad)
cmp
sbb
or
mov
or
fist
bound
push
mov
sbb
imul
add
pop
je
jmp
dec
cmp
popf
or
popa
test
ror
mov
or
push
dec
inc
pop
mov
pop
mov
cmp
mov
pop
pusha
sub
push
xor
pop
pop
cmp
out
cmc
aaa
data16
jno
push
fisttp
add
adc
mov
popf
push
pop
push
test
push
adc
xchg
loop
mov
ds
pop
rcl
mov
and
mov
add
leave
push
adc
add
and
loopne
adc
add
fmul
or
or
ss
push
dec
test
loop
pop
push
inc
pop
jmp
(bad)
pop
test
scas
dec
adc
jbe
sbb
div
pusha
pop
test
imul
or
mov
inc
adc
push
loop
inc
mov
jle
dec
cmp
or
add
into
clc
aas
push
retf
jo
cmp
inc
adc
adc
push
ret
add
sbb
adc
retf
inc
inc
fs
clc
lea
adc
adc
add
adc
mov
and
pop
or
adc
xchg
dec
mov
adc
nop
mov
xor
stc
jmp
mov
or
and
push
loopne
sti
dec
fcomp
sahf
cmp
ja
aas
sbb
pop
stos
mov
push
sbb
cmp
jp
mov
shr
mov
or
push
jae
mov
test
in
xchg
sub
dec
cmp
jnp
cmp
xlat
idiv
je
inc
in
pop
cld
and
cmp
mov
es
adc
mov
mov
pop
dec
pop
jo
sbb
jne
call
fs
stos
out
push
mov
clc
jns
sub
je
adc
cmp
dec
sbb
sbb
enter
inc
cmp
sbb
nop
add
sbb
pop
jae
pop
call
(bad)
sbb
jg
movs
js
jno
mov
ins
call
mov
jne
ret
xchg
mov
mov
leave
das
push
sbb
jmp
jae
adc
or
xor
or
mov
add
sbb
add
sbb
outs
loop
add
lods
lock
push
mov
push
cwde
push
idiv
fistp
mov
dec
ss
xchg
fadd
and
cwde
js
jge
add
adc
add
icebp
pop
ins
sub
sub
push
lahf
add
sub
scas
push
dec
mov
shl
out
push
fmul
mov
movs
adc
add
call
jmp
(bad)
fiadd
int3
sub
mov
cmp
js
ins
add
rol
add
retf
hlt
dec
int3
loopne
cmps
mov
xor
jo
cmp
pusha
cmps
aad
in
addr16
nop
add
mov
push
push
xchg
dec
add
jl
cmp
fisub
icebp
(bad)
pushf
push
aaa
ins
cdq
xor
clc
sbb
add
outs
cmp
xchg
push
daa
pusha
pop
imul
and
push
adc
mov
pop
or
ja
sbb
inc
mov
test
mov
xor
mov
inc
nop
int3
pop
aam
xchg
clc
jo
inc
push
daa
sbb
test
or
inc
cmp
jne
xchg
or
xchg
sti
push
add
test
clc
jg
or
mov
cmp
xchg
jl
adc
test
mov
add
inc
lds
pop
sbb
not
jg
fcom
dec
movs
sbb
mov
dec
shl
retf
movs
shr
sbb
cmp
jb
jmp
sub
(bad)
or
jbe
nop
es
adc
cmps
ret
lock
popa
and
or
mov
mov
pusha
inc
jge
sar
(bad)
inc
add
push
xor
pop
or
movs
inc
dec
dec
outs
dec
xchg
adc
ret
fwait
bound
imul
xor
xor
fwait
or
loopne
pop
popa
das
adc
or
add
pop
pusha
sub
add
xor
clc
int3
push
mov
jnp
add
add
add
call
mov
shl
(bad)
cmp
xor
sbb
jno
cmp
mov
push
jecxz
mov
imul
cmc
inc
mov
sbb
fcom
scas
mov
loopne
fdivr
cmp
add
or
(bad)
jg
iret
push
xor
shl
retf
cmps
addr16
inc
loopne
(bad)
clc
in
jle
adc
push
push
push
mov
push
xor
call
xlat
add
and
mov
test
cmp
pop
xchg
mov
push
les
xor
adc
dec
in
or
xor
or
das
jmp
cmp
pop
out
es
sbb
pop
dec
(bad)
jo
setge
push
sub
xor
retf
xor
or
bswap
and
loopne
mov
lods
cmp
push
mov
vmread
call
jne
push
jle
jb
addr16
inc
dec
xchg
mov
ror
imul
mov
inc
out
jb
cmp
or
mov
inc
sbb
push
cmovb
test
fstp
test
sti
sub
pusha
jbe
adc
test
lock
sti
imul
cmp
xor
aam
test
out
cdq
sub
cwde
inc
mov
in
arpl
(bad)
popa
popa
push
cmp
xchg
ror
mov
lea
aaa
mov
jmp
push
lods
mov
in
std
xlat
aas
push
xchg
xor
and
inc
cmp
mov
sbb
rol
jge
xor
data16
jmp
add
seto
jb
ret
fwait
(bad)
xor
pop
leave
inc
popf
push
sub
test
ret
mov
scas
adc
cld
sahf
pop
mov
adc
fist
fdiv
scas
push
jo
repnz
mov
sub
sub
jo
repz
xchg
cmps
in
pop
and
and
mov
inc
or
and
lds
iret
test
or
fs
cmp
and
mov
mov
fld
push
test
es
push
inc
icebp
int3
cwde
arpl
push
inc
bound
pop
jno
sbb
out
pop
sbb
retf
fst
lods
and
sub
jmp
adc
and
pop
dec
movs
xchg
hlt
mov
cld
rep
pop
inc
aad
loope
into
xchg
adc
test
movs
popa
adc
push
cmp
pusha
add
jne
mov
mov
mov
fsubr
xchg
dec
or
enter
sub
loopne
mov
lods
jmp
ror
add
sbb
and
pop
cmp
movs
ins
mov
push
dec
les
sub
or
or
shr
mov
mov
inc
xchg
test
dec
loope
cmp
gs
mov
or
je
push
mov
ret
getsec
push
pop
sub
and
push
lea
jmp
cmc
rcl
or
lahf
out
hlt
inc
retf
xchg
scas
loopne
call
pop
adc
pop
cld
sbb
or
sub
js
sbb
mov
xchg
into
cmp
add
push
call
cmp
jg
movzx
push
push
cs
dec
in
scas
sar
ret
(bad)
lea
mov
fs
fs
or
lock
pop
jl
dec
push
fsubr
sbb
mov
enter
sbb
imul
sub
loop
jo
leave
retf
stos
mov
popa
add
dec
dec
stos
add
cmp
or
popf
hlt
xchg
mov
scas
inc
mov
or
mov
mov
sub
and
sub
ins
pop
sbb
loope
sbb
inc
dec
push
lock
rcl
movs
dec
sbb
pop
es
lods
add
outs
mov
out
lods
cmp
lock
jo
mov
mov
loope
jmp
add
jne
loope
loope
and
pop
inc
pop
xor
test
jmp
and
add
cmp
xor
xor
mov
cmp
sub
inc
mov
loopne
cmp
pmaxsw
push
push
push
aam
sub
aas
mov
(bad)
add
shl
es
adc
jle
and
dec
mov
adc
inc
or
inc
leave
aam
add
inc
ja
push
cmp
ja
lock
ret
dec
aaa
enter
adc
xor
mov
adc
enter
cmp
popf
and
and
pop
(bad)
jae
lods
ins
sbb
lods
inc
stos
pop
inc
mov
or
sub
pop
into
and
jne
lods
mov
dec
jne
or
cmp
inc
shr
xor
jbe
clc
sbb
mov
add
and
cli
inc
and
add
pop
push
and
mov
adc
and
ret
or
push
cmp
out
adc
adc
mov
inc
je
cmp
jne
sbb
or
add
or
push
adc
or
add
test
inc
inc
sbb
jb
pop
lahf
mov
mov
add
or
add
or
add
pop
call
lods
add
lock
lds
jmp
fucomi
addr16
lea
lea
or
mov
stc
adc
je
dec
je
sub
je
jmp
mov
jmp
or
les
or
cmp
push
xor
add
xor
sub
jb
push
(bad)
cli
mov
jmp
mov
jmp
cmp
xor
jmp
mov
or
sbb
mov
test
add
pop
or
(bad)
xor
outs
loopne
mov
xor
jl
mov
push
mov
fmul
sar
cli
sub
jle
sub
dec
mov
loopne
mov
and
sub
sar
push
xor
push
and
jo
xchg
dec
sub
jb
push
push
out
jne
es
(bad)
mov
sbb
adc
pop
(bad)
lea
pop
(bad)
dec
cmp
and
xchg
or
push
push
add
dec
mov
daa
push
add
add
sbb
js
mov
sub
jae
add
mov
push
sub
inc
inc
cmp
ja
and
jg
movs
loopne
lahf
addr16
cmp
adc
add
or
jae
sbb
adc
or
dec
jns
inc
add
daa
rcr
sbb
test
inc
sub
jg
mov
cmp
je
add
popa
shr
in
rol
cmp
loope
dec
add
sbb
add
test
sub
push
mov
(bad)
mov
lods
adc
inc
xor
pop
cmp
dec
je
or
pop
shr
pop
loopne
fidiv
mov
inc
jnp
xchg
test
outs
add
ins
sbb
pop
cli
int3
je
(bad)
push
or
pop
dec
data16
xchg
sbb
sub
retf
mov
sbb
rcl
add
rcr
dec
add
dec
cld
dec
sbb
aas
stos
push
enter
dec
adc
fisubr
les
data16
ja
jae
sbb
and
lods
call
sub
push
push
or
adc
xor
les
loopne
add
push
jne
js
pop
cmp
imul
inc
ins
in
jle
mov
xchg
adc
adc
fcmovnu
sbb
mov
in
aas
cmp
xchg
dec
ins
adc
fst
sbb
sub
les
and
mov
mov
cmp
fdivr
outs
test
xor
sti
mov
fimul
mov
retf
mov
outs
jmp
and
fsub
out
add
add
push
loope
stc
test
rol
jbe
xor
dec
or
sbb
mov
or
push
loopne
dec
sbb
stos
lds
dec
mov
inc
xor
call
and
jg
movs
mov
jge
adc
stos
popa
inc
mov
or
frstor
add
loopne
out
push
mov
adc
jl
outs
jne
stos
xchg
enter
sub
test
outs
daa
push
adc
cdq
adc
nop
inc
push
scas
les
jmp
mov
pop
popa
adc
jmp
mov
pusha
add
inc
xor
ret
mov
cmp
mov
movs
add
or
fdiv
inc
hlt
adc
test
lods
push
cmp
cmps
adc
add
pushf
(bad)
call
mov
xchg
jbe
adc
push
inc
sub
sbb
mov
sbb
cld
or
loopne
sub
popa
shl
cmp
inc
inc
sub
inc
xchg
int3
rcl
xchg
dec
dec
and
clc
mov
or
add
jo
hlt
nop
xor
lea
mov
mov
push
or
push
jno
ret
cmps
push
sub
adc
mov
adc
aaa
ins
xor
ins
add
dec
xchg
into
jecxz
sbb
test
adc
and
mov
mov
add
push
lods
outs
pop
or
dec
inc
or
(bad)
(bad)
xlat
push
push
add
xchg
cmp
push
outs
or
(bad)
xlat
add
call
loopne
pop
push
in
in
outs
or
lea
xchg
xchg
add
or
xchg
adc
mov
mov
in
loopne
ror
(bad)
push
fdivr
loop
dec
mov
out
stos
mov
les
fld
sbb
in
sbb
jne
add
mov
push
outs
std
ins
add
push
ret
sub
jbe
ret
add
iret
pop
call
dec
or
cdq
xor
push
mov
cmp
add
cld
lahf
push
lods
aam
ret
pop
add
jne
lea
outs
mov
and
call
in
sbb
or
mov
loope
add
adc
mov
daa
(bad)
adc
jbe
(bad)
and
xor
neg
mov
dec
or
imul
call
mov
or
je
push
sub
popf
rol
sbb
not
add
mov
inc
repz
call
pop
inc
cmp
in
mov
xor
inc
fsub
mov
or
xchg
or
or
xor
sbb
or
xchg
jo
lods
mov
jno
mov
or
idiv
je
sub
mov
or
mov
inc
rol
add
test
jbe
inc
(bad)
out
jno
add
in
jns
xlat
hlt
add
jmp
inc
add
inc
add
mov
dec
fcmovnb
inc
jbe
out
in
jno
loope
in
js
inc
pusha
in
jmp
jg
sub
cmp
aam
cmp
loopne
pusha
jmp
xor
adc
xchg
push
push
jns
jo
outs
dec
mov
dec
addr16
sub
inc
add
mov
cli
sbb
jp
push
adc
pop
test
adc
mov
ss
out
xchg
mov
(bad)
outs
shl
cmp
add
dec
sbb
jbe
scas
pop
scas
push
sbb
xor
mov
mov
movs
out
bswap
and
push
cmp
test
shl
leave
stc
add
outs
add
fadd
fst
movs
sti
inc
pop
sub
sbb
and
fmul
sbb
or
mov
sub
fidiv
shl
xor
and
push
push
imul
add
js
popf
add
push
lahf
pop
xchg
adc
ret
sub
pop
pop
adc
pusha
adc
add
movs
push
call
mov
adc
mov
mov
mov
adc
cmp
test
sbb
retf
cmp
cmp
xchg
cmps
popa
sbb
add
add
mov
std
adc
push
mov
and
shr
nop
aam
and
adc
pop
push
cmp
jle
add
into
push
je
push
int
adc
rol
fs
test
cmp
add
mov
popf
add
xor
test
xchg
aaa
push
cmp
xchg
cmp
or
lgs
jmp
sbb
ror
ret
clc
in
dec
pusha
xor
or
cmp
inc
sub
adc
mov
xchg
cld
sbb
clc
lds
fmul
cmp
mov
in
and
ret
sti
pop
pusha
ja
inc
or
mov
adc
lea
pop
adc
inc
adc
movs
cmp
or
cmp
fimul
jp
mov
enter
push
and
push
clc
push
fsubr
(bad)
dec
sub
adc
push
jno
push
sar
mov
jmp
mov
outs
push
xor
leave
pusha
inc
rol
mov
jmp
xchg
ret
mov
mov
loopne
adc
or
or
jecxz
and
test
enter
jmp
push
pop
or
push
jg
pop
dec
xchg
repnz
ds
mov
inc
ins
aaa
or
or
stos
add
mov
add
je
mov
aad
mov
lea
fisubr
and
add
sbb
je
sub
push
pop
mov
adc
push
ret
or
adc
nop
push
push
loope
es
pop
aas
lds
cmp
push
xchg
add
xchg
pop
es
jecxz
cld
js
sbb
mov
sbb
dec
xor
xchg
cli
or
mov
or
adc
sbb
xor
adc
cmc
inc
lea
sub
pop
mov
mov
mov
jnp
je
xor
clc
fild
jg
sub
push
sub
je
jmp
(bad)
xor
lods
fadd
mov
adc
inc
add
pop
jo
inc
pop
jge
mov
xchg
clc
mov
inc
mov
mov
or
test
rol
push
mov
sbb
add
adc
cld
inc
clc
and
call
jmp
movs
clc
jmp
and
lea
ins
cmps
ror
add
jmp
scas
enter
in
(bad)
(bad)
nop
add
or
push
lahf
or
fdivr
mov
mov
test
pusha
push
and
in
or
aaa
adc
add
mov
pop
sti
add
xor
movs
dec
jmp
push
out
push
xor
inc
cmp
ins
jae
sub
cmp
cwde
or
mov
inc
inc
sub
shr
sbb
test
add
out
(bad)
cmp
je
test
jne
mov
jmp
adc
shl
xchg
inc
and
cmp
mov
dec
fldcw
sbb
loopne
(bad)
aam
(bad)
dec
daa
(bad)
movs
dec
and
push
(bad)
rol
lds
pusha
aaa
scas
loopne
adc
cmp
pop
ins
xchg
mov
push
fdivr
mov
jecxz
jle
test
les
xchg
push
xchg
dec
push
push
push
lea
lea
inc
test
mov
and
or
xchg
or
ja
enter
daa
cmp
push
add
ret
sbb
pushf
inc
cmc
mov
add
call
lahf
mov
xchg
sub
(bad)
lods
out
push
push
add
ror
imul
fnstenv
dec
push
xor
or
adc
add
imul
jne
pop
popf
and
or
out
jae
lods
mov
aam
cmp
adc
rol
add
or
leave
bound
cmp
shr
mov
sahf
mov
out
daa
and
xchg
bnd
or
or
or
push
(bad)
pop
jns
and
and
cmp
mov
push
sbb
inc
and
mov
ror
movs
jae
or
or
jle
or
inc
and
jmp
inc
push
inc
xlat
xor
test
je
pop
and
imul
jns
jno
mov
ret
nop
ret
sbb
fiadd
push
adc
sbb
ret
add
and
push
adc
push
loopne
pop
dec
inc
retf
mov
push
sub
sub
jbe
popa
sub
dec
cs
outs
push
adc
add
inc
adc
aam
pop
mov
xor
iret
loop
mov
adc
mov
in
add
mov
or
xchg
push
or
sbb
xchg
sub
adc
adc
pop
sub
rcl
push
stc
pop
xor
jmp
xor
jne
cmp
je
mov
addr16
je
and
or
repz
sbb
pop
dec
dec
jmp
cmp
idiv
ds
jo
(bad)
jle
lds
fwait
push
cld
and
mov
add
scas
cmp
jle
inc
inc
inc
add
xchg
push
jae
cmp
movs
mov
adc
push
push
mov
jg
outs
mov
pop
cld
dec
test
jl
inc
and
sar
idiv
mov
je
sbb
or
dec
jne
and
ja
mov
adc
adc
retf
add
loopne
sbb
es
aas
inc
xor
inc
hlt
pop
mov
call
mov
adc
outs
test
dec
xlat
test
enter
adc
out
out
pop
movs
lods
int
popa
jg
xchg
add
adc
add
fdivr
addr16
sbb
push
jne
dec
icebp
add
adc
mov
or
mov
fadd
or
mov
ins
jmp
mov
cmp
loopne
dec
inc
jl
(bad)
ins
mov
inc
adc
jae
movs
js
xchg
inc
xchg
push
and
adc
shl
(bad)
mov
add
test
test
ret
addr16
pop
pusha
fst
mov
pop
inc
mov
clc
xor
xchg
ss
lock
(bad)
or
push
add
xor
arpl
push
loope
adc
jne
test
cmp
mov
inc
add
jae
popf
adc
sbb
cmp
mov
inc
data16
add
dec
jne
dec
and
shr
adc
push
mov
test
dec
sbb
js
mov
dec
sahf
mov
call
(bad)
call
xchg
or
or
pusha
sti
cmps
test
sbb
dec
shl
outs
ds
punpcklbw
xchg
and
inc
outs
mov
pop
or
cs
fcmovb
mov
jo
pop
push
out
retf
sub
xor
enter
test
xor
xchg
pop
mov
jnp
aas
sub
adc
jnp
xor
sbb
jnp
outs
adc
or
and
mov
js
add
enter
adc
cmp
icebp
sbb
cmp
enter
inc
xor
daa
cmp
cmps
and
sub
or
shl
das
pop
mov
dec
test
aad
add
push
sbb
jne
ret
fiadd
ds
push
fmul
dec
add
dec
aaa
push
loope
push
cwde
mov
or
push
ds
mov
pusha
jo
cmps
stos
sbb
ror
cmp
jnp
sub
nop
mov
and
stos
xor
jg
add
or
sub
and
fsubr
cli
push
lea
mov
push
inc
dec
and
inc
inc
mov
jg
cmp
in
fmul
jae
add
add
hlt
mov
add
xlat
or
sbb
pop
and
cmp
jg
inc
adc
mov
cmp
not
add
je
push
pop
dec
push
imul
test
cli
adc
add
inc
add
rol
jecxz
pusha
push
rol
sub
push
pop
addr16
cmp
cmp
lock
mov
mov
ror
rol
addr16
cmp
push
sbb
stos
pop
lock
enter
xchg
sbb
jno
fldenv
xor
test
adc
call
and
outs
xchg
loop
mov
and
xor
cmp
jns
xor
pop
sub
ja
or
pop
mov
mov
adc
jle
push
enter
je
pop
mov
pop
retf
loopne
cmc
add
inc
and
mov
inc
mov
mov
ss
add
mov
ja
outs
into
xchg
push
xchg
add
mov
dec
sar
add
xor
mov
and
jmp
cli
mov
push
sub
dec
xor
cmp
lahf
ja
cmps
inc
mov
push
add
in
sbb
or
out
mov
jp
add
adc
and
gs
das
ins
xchg
push
push
out
xor
std
dec
repz
sbb
mov
sar
enter
jnp
imul
xor
push
adc
cmp
pushf
sbb
in
(bad)
test
lock
pop
or
fs
sub
mov
xor
clc
fisttp
or
sub
jnp
push
jp
pop
outs
ins
jb
push
add
and
loope
ret
jae
xchg
rcl
enter
pop
into
cmp
cs
repz
(bad)
jle
rol
xor
jbe
xlat
add
arpl
add
dec
dec
jmp
or
or
ror
popf
or
cmp
xchg
mov
loop
dec
loopne
loop
fadd
xor
icebp
je
f2xm1
in
popa
rol
cmps
mov
inc
enter
aaa
out
pop
jl
dec
lock
inc
fist
add
vmwrite
clc
mov
or
push
mov
mov
add
pop
in
lea
nop
mov
ret
pusha
retf
and
jae
jecxz
or
inc
inc
push
push
and
cmc
ret
xchg
push
pop
test
mov
nop
adc
lds
push
sbb
inc
jne
inc
mov
and
pop
jecxz
inc
clc
dec
lods
adc
inc
dec
ins
popa
gs
in
(bad)
mov
push
mov
les
arpl
jb
jo
imul
and
aaa
sbb
popf
inc
ins
cli
jge
inc
ss
dec
cli
inc
ja
inc
dec
add
jne
mov
mov
ret
sub
in
inc
jmp
mov
ror
adc
xlat
fs
fs
adc
rcl
pop
ret
fdiv
mov
push
fucomip
push
pop
popa
xor
cld
mov
sbb
add
sbb
sar
and
(bad)
sbb
push
sub
xor
jl
jb
into
mov
xor
xor
pusha
or
xor
stos
add
jo
jne
test
or
inc
jae
out
pusha
lea
gs
jnp
adc
xor
in
adc
loope
and
push
push
cmp
addr16
pop
jmp
lods
jmp
mov
push
mov
inc
add
mov
jne
mov
call
mov
mov
add
or
sbb
or
dec
dec
mov
inc
and
call
into
loopne
pop
dec
cli
mov
int3
scas
add
mov
adc
adc
cmp
xchg
cld
pop
loopne
ret
mov
add
hlt
sbb
xor
adc
cdq
push
xor
inc
add
(bad)
mov
inc
or
scas
lock
or
cmc
push
mov
pop
pop
and
pop
lahf
jmp
add
(bad)
adc
push
rol
jle
inc
scas
or
ror
jmp
add
push
push
jno
fcomp
mov
out
sbb
xchg
sahf
jmp
xchg
add
and
jmp
add
out
loopne
add
or
in
push
inc
ins
test
mov
dec
mov
sub
sub
or
xchg
pop
sub
adc
jo
adc
aaa
mov
idiv
xor
cs
and
mov
inc
sbb
push
cmp
sbb
sar
adc
sub
pusha
xchg
cmp
movhps
aaa
je
sbb
imul
push
popa
xor
jo
ret
xchg
call
fild
sbb
jae
out
sbb
fsub
adc
xor
jo
and
or
sbb
jge
jbe
inc
mov
pop
adc
cs
bound
mov
call
xor
sub
cmp
mov
or
sbb
mov
adc
popa
inc
addr16
arpl
jg
icebp
test
in
das
test
fisttp
inc
aad
push
xchg
adc
rol
fs
adc
daa
mov
sbb
and
(bad)
mov
fnstcw
stos
inc
loopne
xor
mov
add
lock
lea
push
loopne
adc
inc
je
dec
(bad)
sar
cmp
jmp
mov
jmp
mov
and
add
inc
mov
xor
repnz
enter
sbb
add
add
and
cmps
inc
rol
and
std
mov
sbb
add
jmp
iret
repz
repz
out
or
dec
add
sub
adc
push
push
call
inc
or
and
dec
and
add
int
fwait
and
mov
dec
pop
push
add
fsubr
dec
or
popf
iret
mov
mov
icebp
out
jecxz
inc
lods
mov
scas
mov
pop
add
pop
xor
mov
rcl
add
call
sahf
push
xchg
add
data16
test
pop
sbb
mov
aad
add
iret
ficomp
add
add
sub
jmp
push
push
rcl
sub
jnp
je
mov
inc
hlt
sub
outs
pop
sub
add
mov
mov
les
or
adc
push
shr
shl
inc
mov
hlt
mov
pop
test
ret
mov
cmp
aad
in
cmc
or
out
rcl
cmp
jmp
cmp
mov
aad
ficom
adc
movs
mov
stos
mov
(bad)
loope
cmp
enter
add
loop
sub
push
bound
stos
std
or
outs
ror
shl
add
ss
or
xchg
ins
cmps
in
mov
pop
sbb
(bad)
mov
hlt
and
push
mov
int
div
adc
out
neg
pop
pop
adc
cld
jae
mov
and
push
mov
sbb
jle
add
lock
(bad)
jmp
dec
pop
add
mov
cmp
dec
shl
nop
adc
cmp
jne
sbb
jo
(bad)
repz
jne
or
cmp
lds
test
mov
add
movs
or
movs
sbb
dec
sbb
mov
pop
sub
sbb
daa
shr
(bad)
lock
nop
inc
and
push
push
jge
cmp
lea
add
int3
jl
mov
les
call
mov
sti
call
hlt
push
add
push
push
ja
xchg
push
clc
inc
inc
out
jge
call
inc
add
inc
add
imul
jae
dec
shr
add
cmp
outs
in
push
data16
into
bound
mov
xlat
out
inc
add
add
dec
push
push
push
cmp
dec
push
cmp
in
call
push
push
push
and
or
dec
sbb
jo
add
mov
dec
scas
push
dec
cmp
jl
mov
inc
or
xor
xchg
adc
push
outs
mov
je
gs
push
sbb
or
or
fnstsw
test
add
popf
pusha
sti
add
gs
push
or
das
add
inc
imul
and
dec
or
or
inc
fist
enter
outs
jb
sub
sub
retf
jbe
and
add
push
test
push
pushf
pop
push
daa
inc
das
ja
and
jl
imul
push
dec
pushf
jge
out
cmp
mov
mov
jo
lahf
cmp
cmps
enter
push
outs
dec
add
imul
popa
lock
inc
dec
outs
arpl
pushf
xchg
ret
imul
push
sti
js
jne
push
mov
sbb
dec
(bad)
push
push
xor
rol
outs
sbb
jp
adc
or
ins
mov
arpl
add
aam
or
add
rol
or
or
cmp
and
aas
push
es
fs
inc
jb
xchg
rcl
shr
mov
add
sbb
pop
inc
gs
jb
jns
sub
add
xor
cwde
xor
pop
ret
xor
push
xor
push
xor
cmp
push
push
outs
sbb
fcom
dec
pop
dec
add
ins
adc
add
inc
mov
adc
ror
cmp
or
and
xchg
push
inc
out
xor
mov
cmp
cwde
cli
add
sub
mov
add
pop
popf
cmp
inc
pop
add
or
clc
sub
jmp
push
mov
clc
jmp
cmp
fnstsw
adc
cmp
jne
pshufw
int
loopne
jg
pop
ror
adc
mov
pop
push
add
ja
cmp
(bad)
out
dec
cmp
nop
xchg
addr16
call
mov
or
outs
add
sub
inc
sbb
mov
mov
daa
or
sbb
sbb
call
pop
dec
lea
adc
cdq
(bad)
sbb
push
in
ja
loope
sahf
push
xor
xor
loop
je
jns
xchg
ins
sti
dec
or
inc
xchg
retf
cmp
jne
(bad)
fild
cmp
push
and
sti
or
push
loope
in
inc
cmp
shl
pusha
pmaxsw
sbb
jo
mov
adc
xlat
je
pusha
mov
adc
push
or
xchg
loopne
fcom
dec
pop
cmp
dec
jo
or
pop
movs
mov
out
pop
lods
mov
(bad)
jmp
cmp
jo
arpl
dec
nop
out
mov
mov
sbb
inc
add
repnz
loopne
addr16
push
jmp
or
stc
pop
ja
and
bt
jae
or
inc
mov
sbb
mov
and
dec
mov
out
adc
pop
pop
ret
test
adc
inc
jl
push
push
push
cld
mov
mov
mov
ret
cmp
add
in
pop
cmp
cmp
les
(bad)
jne
add
and
or
mov
popf
pop
jl
or
and
mov
inc
sbb
or
push
add
outs
add
jae
dec
mov
inc
or
push
out
(bad)
push
xor
or
ds
fadd
es
or
push
mov
dec
fld
and
neg
push
dec
and
inc
sti
sbb
push
aaa
add
loopne
and
iretw
into
and
daa
retf
in
fstp
es
daa
or
push
push
shl
or
pop
mov
loope
or
dec
or
jnp
or
and
jecxz
sub
or
daa
push
mov
pop
js
inc
and
jge
(bad)
ds
inc
xchg
sbb
add
cld
xchg
shr
mov
mov
inc
push
test
mov
js
jecxz
push
mov
sbb
sbb
add
xor
pop
loopne
fwait
jge
rol
nop
es
push
push
loope
or
mov
data16
loopne
push
add
sub
inc
sbb
inc
inc
xchg
or
clc
test
jbe
push
mov
fcom
ret
cmp
push
daa
sub
cmovg
or
das
sub
dec
jb
gs
fs
add
dec
mov
cmc
pop
sbb
aaa
cmc
dec
and
mov
inc
outs
jne
je
pushf
fldcw
inc
jae
dec
aaa
pop
inc
je
in
adc
popf
pushf
xchg
dec
add
rcr
repnz
inc
xchg
ins
xor
dec
add
push
jne
push
data16
add
and
pop
push
xchg
ins
gs
add
jo
test
and
stos
gs
loope
add
imul
push
push
jns
fsubr
or
outs
jb
mov
jg
and
or
jno
(bad)
jae
aas
mov
add
adc
aas
push
pop
ja
push
push
push
je
arpl
mov
or
pop
adc
mov
mov
rol
clc
mov
fmul
or
mov
mov
test
inc
cmps
adc
outs
fsub
test
jbe
adc
cmp
ror
mov
mov
mov
shr
daa
fimul
add
or
fbld
out
cwde
sbb
icebp
(bad)
jg
push
adc
dec
inc
dec
inc
dec
dec
inc
pop
inc
push
push
dec
dec
iret
ret
loopne
add
int
pop
int3
fdiv
cld
or
jne
je
dec
inc
sub
adc
xor
jo
jp
push
lds
pop
hlt
aaa
push
push
cmp
inc
imul
test
mov
jmp
cmp
dec
inc
sub
add
cmp
das
je
push
adc
and
rol
xor
xor
cs
or
dec
add
nop
sbb
pop
inc
inc
add
pop
push
test
add
inc
and
ficomp
mov
rcl
call
adc
loop
add
loopne
fcomp
rol
push
pushf
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
pushf
pushf
pushf
pushf
inc
cmp
xor
pushf
pushf
pushf
xor
and
pushf
pushf
pushf
and
adc
pushf
pushf
pushf
adc
add
inc
sahf
pushf
add
mov
popa
imul
xchg
add
je
push
push
push
inc
or
sub
jne
add
sbb
jno
push
out
ret
mov
dec
adc
push
mov
pop
xchg
sub
sub
cmps
ret
imul
jmp
and
pusha
je
fldenv
push
xchg
xlat
mov
push
fcomp
outs
in
cmp
push
push
add
cld
sgdtd
scas
mov
push
jg
fcomip
sbb
arpl
outs
dec
bound
arpl
pop
inc
arpl
adc
jno
imul
cmp
and
pop
push
sbb
xor
adc
dec
cmp
dec
mov
popa
imul
dec
dec
jg
push
inc
push
imul
push
enter
adc
dec
inc
lock
and
add
add
ss
pop
jmp
cmp
adc
push
dec
popa
outs
mov
popa
jns
test
add
lods
pop
inc
add
lock
mov
mov
es
push
das
push
adc
test
xor
push
lahf
mov
push
add
int3
adc
cmp
jg
inc
pop
add
mov
add
inc
dec
stos
inc
pop
into
jo
je
ss
sbb
pop
icebp
or
dec
inc
dec
dec
lahf
pop
test
ret
js
jl
push
pop
sbb
jl
push
das
adc
push
pop
or
das
or
or
sub
pop
dec
push
std
or
or
sbb
lock
(bad)
ja
sub
push
jecxz
jecxz
jne
xchg
ret
push
cwde
cwde
or
in
movq
ins
je
jo
jg
pop
or
mov
int
and
or
jae
push
mov
lea
inc
mov
sbb
add
adc
outs
popa
data16
ret
jbe
inc
mov
jae
jge
fild
dec
outs
adc
pop
and
dec
or
dec
xchg
fsubr
je
adc
out
fwait
add
sbb
dec
lods
add
sahf
loope
adc
rol
(bad)
sub
sbb
cmp
add
sbb
cwde
das
mov
(bad)
out
mov
aaa
jmp
add
cmps
push
mov
jnp
sbb
jbe
je
sbb
push
scas
sbb
loopne
aad
jnp
pusha
js
add
popa
inc
je
ret
jbe
bound
xchg
mov
sub
dec
or
outs
adc
cwde
adc
fs
or
lds
dec
popa
mov
mov
adc
cwde
cmp
xchg
or
mov
popa
iret
jo
dec
jb
inc
or
and
sub
test
mov
dec
or
add
xchg
or
outs
and
sbb
jmp
mov
into
push
cmp
scas
sbb
push
cmp
dec
outs
jne
sbb
mov
xchg
shl
rcr
inc
bound
push
ja
adc
(bad)
fild
cmc
xchg
sub
out
movd
in
loop
jmp
lds
pusha
arpl
xlat
nop
sub
sbb
bound
movs
inc
movs
add
rcl
mov
pusha
mov
xchg
dec
shl
dec
fsub
mov
ror
push
jb
inc
xor
inc
pop
push
lea
sbb
inc
mov
push
ror
pop
inc
test
(bad)
pop
test
sub
adc
cmp
sahf
or
clc
inc
outs
outs
mov
pushf
fild
mov
(bad)
add
jae
popa
les
push
xchg
jle
ds
push
rcl
cmp
mov
cs
shl
jle
inc
jne
mov
lods
dec
clc
add
pop
jmp
ss
mov
sbb
fsub
mov
xchg
xchg
push
ror
adc
clc
cmp
jne
aaa
sbb
mov
mov
push
(bad)
adc
mov
out
xchg
sub
(bad)
add
outs
loopne
sub
add
adc
ror
sub
sar
ins
inc
push
push
or
adc
adc
add
or
cmp
jne
push
pushf
rcl
lds
rol
or
sbb
outs
adc
sub
mov
xchg
shr
push
xor
and
(bad)
outs
into
mov
add
fcom
sbb
push
sbb
sub
shl
jle
or
(bad)
fidiv
sub
mov
jmp
sub
ret
std
out
pusha
push
jo
(bad)
jo
sbb
out
push
push
and
enter
push
ffree
add
mov
outs
and
mov
sbb
into
jne
adc
loope
jo
dec
cmp
pop
add
mov
add
push
inc
push
adc
add
jo
sbb
inc
xor
and
xchg
retf
sbb
add
jnp
shl
addr16
(bad)
inc
and
mov
cmp
mov
push
sbb
fdiv
daa
xor
adc
push
sar
mov
and
fld
call
cmp
inc
lea
or
inc
call
in
push
mov
mov
sub
loope
(bad)
jg
or
jmp
mov
jmp
mov
jmp
mov
retf
jo
cmp
mov
jmp
push
push
push
mov
push
jg
aad
push
je
sub
or
jmp
mov
jmp
xchg
jle
add
sbb
dec
ret
movs
setle
pusha
xor
push
push
shl
xor
lods
mov
or
push
sbb
add
(bad)
push
adc
add
mov
add
in
push
movs
pop
push
xchg
imul
stos
in
jmp
push
cwde
or
fbstp
leave
int3
pavgb
aaa
add
pushf
test
add
add
jmp
mov
inc
test
cmp
popa
cmc
or
xor
mov
nop
adc
xor
mov
pop
pop
pop
xchg
daa
add
adc
push
dec
mov
test
mov
pop
hlt
adc
and
inc
loopne
fwait
pop
pushf
push
xchg
jae
aad
or
jo
xor
lea
mov
movlps
enter
add
fmul
lea
inc
shr
loopne
frndint
inc
out
ror
sub
in
adc
std
cli
and
mov
out
add
test
push
ror
add
ror
fsubrp
sbb
lock
lahf
ret
cmps
or
mov
(bad)
lds
and
mov
or
out
lock
cmp
je
test
inc
xor
push
push
dec
sbb
mov
jmp
cmp
push
adc
jbe
shl
popf
or
sbb
stos
add
add
xchg
cmp
loopne
shl
pop
mov
mov
mov
loopne
push
add
fdiv
and
xchg
sbb
cmp
je
cmp
jne
adc
addr16
shr
jne
or
sub
jns
adc
je
push
add
pusha
adc
call
(bad)
es
fwait
push
jb
fisttp
mov
test
inc
scas
pushf
pop
xor
in
addr16
es
dec
lock
ror
mov
and
repnz
inc
mov
sub
sti
dec
fdivp
fdiv
inc
sbb
sub
mov
lock
jb
fild
xlat
pop
sub
inc
test
jmp
mov
push
mov
sub
jo
mov
and
in
fcom
jge
imul
js
push
mov
push
and
dec
iret
push
cmp
fmul
clc
push
neg
push
xchg
adc
fdivr
lock
push
inc
push
push
jle
pop
and
jmp
adc
jge
sbb
adc
imul
or
push
retf
add
mov
pop
add
call
rcl
enter
jmp
pusha
int3
adc
jo
out
pop
aam
int3
nop
(bad)
out
rcl
hlt
push
and
pop
cmp
movs
in
pop
push
imul
or
cmp
jp
jmp
push
xlat
mov
cmp
inc
bound
mov
scas
push
inc
jmp
ficom
add
add
into
ins
aad
inc
pop
add
add
ret
loop
cwde
add
or
inc
push
inc
dec
dec
push
add
js
mov
jmp
or
dec
gs
imul
cmp
imul
inc
mov
outs
jo
gs
sub
mov
push
sub
outs
push
ins
xor
adc
int3
loopne
mov
je
pop
xchg
ret
push
push
push
push
add
dec
movhps
jbe
cdq
sbb
sbb
das
and
aaa
nop
sub
das
and
inc
data16
sbb
and
cdq
mov
sbb
sbb
xor
sbb
adc
or
adc
das
ds
sbb
or
cs
mov
popf
jle
call
call
test
jle
dec
fcomp
je
pop
jae
xchg
jnp
mov
mov
mov
fsub
in
mov
fwait
lea
add
xor
xor
or
adc
xor
xor
sbb
and
xor
xor
sub
xor
xor
xor
cmp
inc
xor
xor
dec
dec
push
push
xor
xor
pop
pop
pusha
xor
xor
push
xor
xor
add
nop
loopne
sub
xchg
sub
push
add
cld
add
test
mov
js
dec
add
ds
or
inc
jmp
cmp
mov
sbb
inc
pop
das
(bad)
cmp
sti
add
test
add
xchg
add
ror
sub
push
fs
loop
and
push
sub
push
in
adc
push
out
fsubr
and
(bad)
and
(bad)
das
and
add
and
mov
shl
cmp
mov
shl
mov
call
push
int
xor
and
push
cmp
and
push
lods
and
les
push
stos
xor
int3
cli
and
xor
add
loop
mov
pusha
sbb
push
sbb
aad
sbb
jmp
and
mov
add
push
adc
and
push
pusha
and
push
cmp
and
dec
cmp
int3
and
in
adc
push
fld
push
push
cmp
popa
adc
or
and
push
ins
mov
push
push
add
popa
shl
ja
mov
ins
push
xchg
push
cmps
mov
jo
rol
dec
dec
call
push
test
inc
fs
xchg
pop
xor
add
push
data16
push
dec
aaa
inc
scas
push
push
jbe
ror
jae
cmp
add
push
jb
loop
cwde
pop
adc
(bad)
xor
pusha
push
pusha
sub
adc
dec
xor
popw
add
push
cmp
or
test
in
sbb
or
test
push
inc
mov
push
sahf
not
inc
adc
pop
xchg
pusha
mov
sub
dec
das
inc
adc
dec
ja
xor
stos
push
mov
inc
dec
fbld
sbb
pop
xor
dec
int
dec
mov
xor
or
bound
data16
sahf
sbb
mov
test
cmp
fdiv
ss
and
shl
pop
xchg
int3
ret
mov
cmps
or
add
add
pop
mov
aas
push
(bad)
or
scas
mov
add
pop
jb
cmps
cmp
jb
xchg
pushf
add
inc
fidiv
daa
arpl
dec
push
mov
aaa
push
push
xor
aaa
inc
push
outs
dec
ds
sub
inc
push
sub
pop
push
mov
or
add
push
pop
inc
adc
dec
outs
push
xor
pusha
addr16
and
int3
inc
dec
cs
cmps
into
sbb
push
sub
or
xor
push
push
xchg
pusha
test
movs
and
aas
add
and
adc
inc
jbe
xor
dec
pop
inc
jg
call
and
add
or
push
jae
xlat
and
cmp
(bad)
xor
ret
pop
stos
push
push
sub
cmp
add
pop
add
xchg
adc
push
push
sub
retf
jae
push
push
out
xor
sub
hlt
mov
and
adc
xchg
pusha
or
pop
mov
cmp
inc
xlat
cmc
jbe
lds
push
clc
je
call
sti
ja
das
sub
add
dec
pop
call
xchg
es
or
pushf
lock
sbb
sbb
repz
sub
mov
js
mov
dec
dec
dec
dec
push
dec
push
jne
scas
jne
ins
add
jmp
sar
imul
loopne
pop
sbb
and
pop
jb
pop
dec
das
sbb
fadd
das
inc
sbb
inc
add
cmp
push
xor
das
cmp
das
or
cs
cmp
push
mov
jmp
or
push
jl
int3
movs
jle
fmul
push
(bad)
in
push
dec
ins
add
(bad)
inc
(bad)
call
add
or
xchg
add
mov
imul
or
sub
xor
sbb
ss
adc
adc
adc
or
or
stc
(bad)
push
mov
iret
(bad)
inc
push
pushf
ror
loopne
xchg
inc
aas
push
shr
data16
dec
ins
popa
addr16
push
imul
nop
mov
in
pop
aaa
rol
out
ss
mov
add
cli
mov
push
je
add
push
inc
jne
call
mov
ss
test
stc
xchg
mov
inc
mov
inc
dec
ja
gs
xor
(bad)
xchg
ins
add
add
test
pusha
dec
dec
jae
push
mov
adc
(bad)
add
shl
inc
daa
pop
adc
pop
jne
stos
mov
jge
push
arpl
sub
outs
cmp
fs
(bad)
pop
and
mov
push
push
ins
cmp
or
pop
loop
mov
push
sbb
mov
inc
pop
fcom
jl
or
ins
inc
jo
cmp
jge
es
js
add
sahf
and
xor
cmp
repz
pusha
jo
nop
iret
repz
mov
fdivr
repz
loopne
call
repz
clc
cld
add
loopne
ret
fild
and
or
or
dec
mov
mov
add
mov
pop
add
push
xor
pop
movs
xchg
aas
dec
cmp
dec
cmps
sub
inc
mov
cs
ds
shl
call
xor
ins
out
rol
cwde
xor
sub
cmp
hlt
push
imul
push
inc
cs
outs
rcl
sub
fcomi
out
(bad)
sub
inc
das
push
add
fdivr
out
mov
push
cmp
push
push
in
add
imul
cmps
and
shl
push
sar
in
and
or
in
xor
ins
shl
fisub
(bad)
xor
stos
push
into
adc
or
cli
add
add
sbb
inc
fs
test
ins
jbe
push
aaa
std
enter
add
bound
test
loop
inc
mov
cdq
add
sahf
neg
mov
sar
rol
stc
add
add
neg
lods
cs
dec
pop
add
shl
jbe
sub
les
fstp
outs
fcom
jge
imul
mov
mov
mov
movs
inc
mov
mov
sahf
repz
push
enter
mov
mov
fistp
jle
push
aam
xor
outs
add
and
push
mov
out
scas
and
cmc
push
sbb
adc
cld
iret
into
mov
iret
ins
push
push
add
call
mov
add
cld
sbb
add
out
add
sub
push
add
ja
mov
dec
loope
inc
js
arpl
add
jge
mov
xchg
loopne
pop
push
push
jo
pop
dec
and
outs
jg
xor
push
sub
outs
cdq
add
fisub
or
cmp
sbb
out
add
aam
adc
adc
aaa
pusha
loope
or
xchg
jecxz
mov
mov
call
or
test
(bad)
jmp
sbb
je
mov
mov
mov
jnp
neg
ins
mov
loopne
je
mov
mov
inc
cmp
adc
fadd
mov
mov
push
cmp
dec
mov
mov
or
inc
imul
pop
and
or
mov
and
and
(bad)
out
(bad)
rcr
inc
call
jne
push
xchg
shl
inc
push
push
push
sub
test
mov
and
dec
push
mov
test
iret
cli
push
std
cmp
movzx
(bad)
sbb
test
dec
icebp
clc
test
call
test
jl
inc
xor
ret
in
in
mov
daa
adc
xchg
pop
xchg
cmp
jnp
les
mov
or
pop
inc
je
(bad)
loopne
push
pusha
mov
jmp
inc
dec
jne
movzx
pop
ret
sbb
cli
clc
jg
push
pop
retf
fs
add
cmp
inc
mov
call
push
mov
mov
jg
or
into
or
hlt
inc
mov
adc
scas
dec
and
mov
repz
inc
sub
adc
leave
sbb
pop
clc
enter
push
and
call
jmp
test
mov
dec
imul
xor
push
jl
push
mov
mov
das
mov
xchg
mov
cwde
mov
jnp
push
push
xor
lock
pop
mov
imul
or
and
cwde
adc
push
mov
push
jo
repnz
loopne
fwait
ins
sbb
sahf
sahf
mov
ins
inc
(bad)
retf
jp
adc
and
mov
inc
mov
and
out
jge
add
and
or
es
mov
cmp
mov
adc
dec
je
(bad)
cmp
mov
mov
adc
xor
pusha
mov
cmps
mov
test
push
push
imul
mov
push
or
nop
or
cmp
fisub
in
aas
sahf
add
add
push
in
in
out
fsubr
inc
cwde
in
jmp
jnp
retf
hlt
aas
sete
sbb
mov
mov
loope
iret
sbb
xor
iret
jo
(bad)
push
das
sbb
push
mov
jl
push
sub
push
and
pusha
dec
jnp
pusha
pop
ret
add
pop
mov
add
movs
jg
hlt
aaa
aaa
fdivr
test
out
mov
pop
and
mov
fstcw
fwait
data16
das
push
rcr
ins
cld
fistp
data16
enter
loop
xor
adc
xor
xor
cmp
mov
ja
push
adc
or
push
mov
push
push
je
jo
data16
sub
and
cmp
pop
mov
inc
cmp
mov
push
jge
mov
(bad)
movs
add
cmc
jo
fcom
push
cmp
(bad)
cli
or
or
pop
aaa
add
push
(bad)
jne
(bad)
mov
push
sbb
add
cmp
jp
cwde
mov
push
add
sub
add
and
jo
out
mov
or
sbb
push
mov
neg
in
pop
fdivr
jmp
cmp
jle
jmp
mov
jl
or
jg
jge
or
inc
or
jg
pop
mov
jl
or
or
sbb
add
add
jp
push
stos
hlt
cmp
outs
mov
push
or
inc
sub
push
and
pusha
push
cld
mov
add
xor
mov
(bad)
mov
rcr
sub
push
xor
inc
repnz
push
dec
push
rcr
mov
xor
dec
div
ss
push
mov
ror
cmp
fst
inc
dec
sub
sub
aaa
sbb
scas
push
inc
cld
enter
sbb
fild
mov
and
loop
test
add
sbb
inc
jnp
mov
ss
cmps
je
inc
sbb
loop
(bad)
mov
add
cwde
mov
inc
sbb
test
pop
icebp
jmp
adc
ret
push
ret
adc
and
or
and
push
call
mov
mov
jmp
add
and
lock
cmp
or
and
jle
arpl
push
and
dec
cmp
xchg
clc
xor
add
test
jnp
sub
aam
sti
(bad)
push
lods
push
aaa
adc
push
or
push
pop
loope
xor
inc
xor
(bad)
int3
dec
cmp
jb
inc
mov
inc
or
cld
dec
mov
dec
js
push
int3
frstor
xor
push
pop
fmul
mov
inc
sub
mov
cmp
push
xchg
jo
cli
mov
mov
fmul
inc
out
fdivr
dec
xchg
pop
jmp
dec
ins
sub
cs
inc
dec
loopne
dec
add
ud0
shl
push
ins
(bad)
adc
lods
dec
cs
dec
dec
sbb
dec
(bad)
mov
fisttp
and
cmp
adc
sub
adc
pop
ins
adc
xchg
sub
je
cli
add
call
add
fs
add
in
or
mov
sar
push
push
adc
call
and
sub
int
pop
ret
or
icebp
cmps
icebp
cmp
push
pop
cld
add
jmp
sti
or
cmps
jmp
or
scas
retf
adc
sub
and
adc
retf
push
sub
cmps
mov
jge
neg
mov
mov
mov
jno
inc
add
add
test
push
mov
jo
sahf
mov
push
pop
inc
add
add
pop
push
inc
mov
inc
mov
in
mov
clc
sbb
inc
push
or
push
lock
js
jnp
adc
add
mov
cmp
pop
push
sbb
sbb
int3
dec
sbb
and
jb
faddp
jne
push
stos
jle
cs
pop
clc
sbb
push
pop
inc
push
nop
mov
aaa
mov
jge
fs
dec
pop
mov
cmp
cs
push
ja
scas
dec
mov
(bad)
cmp
jge
test
into
pop
add
ret
jnp
out
xor
inc
adc
or
xor
ins
pop
mov
inc
loopne
rcr
(bad)
cld
ins
add
jne
xchg
xchg
jmp
push
sbb
pop
pop
sbb
sbb
xor
xchg
mov
add
fld
add
jl
sbb
jg
nop
das
or
loop
push
mov
push
push
jno
mov
mov
push
adc
mov
jb
icebp
scas
scas
cmp
pop
je
push
push
aam
push
sar
sti
mov
adc
or
sahf
xchg
je
popf
sar
mov
pop
movzx
test
in
sbb
mov
out
retf
sbb
stc
mov
imul
das
fmul
mov
and
ret
scas
bound
or
outs
jmp
push
or
shr
shr
add
add
add
out
mov
adc
push
and
mov
push
mov
mov
add
je
dec
out
push
(bad)
jmp
inc
ins
(bad)
mov
inc
pop
cwde
leave
in
dec
mov
lock
sbb
sub
fstp
push
add
add
mov
or
cmp
jle
mov
inc
and
sub
push
dec
ins
cwde
nop
add
dec
ret
sbb
add
jp
pcmpeqb
mov
add
jmp
call
add
mov
cs
je
mov
sbb
mov
inc
inc
pop
mov
push
mov
std
xor
add
xchg
inc
or
shl
dec
xchg
and
jl
ja
iret
dec
hlt
lods
xchg
pop
dec
inc
adc
fdiv
pop
clc
(bad)
mul
je
cmps
inc
adc
push
or
cmp
mov
(bad)
test
or
sub
pop
adc
pop
adc
pop
out
mov
mov
std
dec
push
adc
push
in
adc
shrd
jg
(bad)
fisubr
inc
mov
or
je
cmp
js
pop
pop
jle
jne
cmp
jne
inc
inc
mov
inc
pusha
shl
adc
test
ret
sub
cmp
ror
pslld
adc
push
repnz
call
repz
pop
je
dec
adc
mov
and
ret
inc
add
popa
cmps
inc
sub
cmp
or
add
call
call
adc
add
shr
inc
jnp
or
mov
pop
mov
cmp
pusha
bound
test
add
pushf
es
and
ss
dec
add
and
repz
and
iret
and
aas
movs
adc
push
or
mov
in
(bad)
push
add
add
xor
and
and
fwait
das
adc
xchg
add
or
cmps
xor
sub
xor
or
mov
and
outs
add
adc
push
cwde
jmp
cmp
adc
lea
ret
and
inc
xor
or
loope
mov
(bad)
test
add
fld
sbb
popa
cmp
jmp
push
inc
icebp
xchg
test
cmps
mov
or
jbe
std
retf
xchg
je
or
push
mov
scas
js
div
pop
mov
enter
pand
loopne
mov
xor
arpl
rol
dec
or
mov
data16
call
(bad)
push
jmp
sub
push
or
inc
mov
sbb
xor
jbe
or
push
clc
push
xor
dec
clc
cmp
cld
test
mov
inc
or
sub
dec
or
popa
pop
adc
mov
ins
adc
xor
clc
mov
in
and
xlat
jge
jne
mov
sub
fwait
pop
adc
xor
ror
aad
push
sbb
inc
test
(bad)
dec
hlt
ret
cmp
ficomp
jne
xor
xor
ja
jo
inc
hlt
mov
js
inc
mov
mov
inc
lock
sub
movs
js
dec
sbb
mov
ror
mov
pop
and
loop
jge
xchg
xchg
loope
shl
or
rol
hlt
and
in
mov
adc
scas
loopne
mov
jnp
jb
sar
xor
mov
aaa
and
cmc
mov
call
call
lahf
loope
mov
out
lahf
addr16
pusha
or
xchg
add
mov
jne
divps
rol
pushf
jbe
inc
mov
mov
or
dec
mov
ins
mov
scas
and
nop
mov
mov
mov
(bad)
adc
out
out
aam
test
sbb
pop
xor
add
shl
mov
jmp
and
adc
cmc
inc
mov
add
sub
push
lock
loopne
mov
ror
xchg
cld
sub
shl
fadd
inc
jno
outs
rol
mov
push
stc
lods
aad
sbb
jne
push
(bad)
push
pusha
lods
dec
stos
(bad)
jmp
sub
push
icebp
jmp
mov
mov
xchg
pop
push
jno
inc
call
xor
in
in
cmp
pusha
push
in
adc
push
iret
xor
sbb
xor
xor
jne
scas
stos
lock
push
pop
jmp
push
dec
int
mov
push
adc
cmps
cmp
xchg
dec
xor
hlt
pusha
rcl
push
push
rol
add
fcom
ret
jg
movs
cmp
loope
xor
xchg
pushf
sbb
mov
fsub
leave
aad
or
shr
daa
adc
test
jno
jbe
(bad)
es
es
lea
loopne
sbb
mov
jle
rol
frstor
sub
mov
out
add
inc
jb
cmp
je
xor
mov
or
and
push
pop
cwde
nop
lds
(bad)
jno
jno
je
por
inc
test
imul
cmp
inc
out
inc
sub
cmp
test
and
push
sub
std
in
xchg
sbb
pop
aas
push
daa
push
and
xor
ins
add
push
push
repnz
cmp
xlat
psrlq
adc
inc
sbb
mov
outs
sub
jmp
mov
ror
add
outs
sub
cld
clc
outs
push
retf
push
pop
adc
or
inc
xor
scas
dec
out
daa
mov
fsubr
or
xchg
out
inc
dec
inc
mov
cdq
sub
push
cs
(bad)
mov
sub
rcr
add
lea
call
inc
mov
in
adc
lea
add
add
test
sbb
and
nop
xchg
or
mov
cmp
xor
sbb
cmp
jae
add
fld
or
dec
sub
(bad)
push
push
push
inc
gs
sbb
push
xlat
jmp
inc
stos
fidiv
pop
xchg
in
adc
push
ins
arpl
push
adc
pop
or
and
lods
mov
add
ds
cmp
ret
test
add
pop
xchg
jo
test
mov
repz
cli
mov
test
leave
pop
or
into
cmp
ud1
jl
mov
xor
ficom
add
retf
dec
add
pusha
sahf
jg
mov
mov
ficom
loopne
cmp
ins
add
int
dec
clc
xchg
sub
out
stos
dec
imul
js
jae
dec
sbb
dec
mov
sub
jno
ficomp
hlt
sub
lock
jge
fsubrp
fild
cmp
dec
ins
add
mov
dec
out
or
in
mov
or
inc
js
mov
cdq
mov
mov
cs
push
sub
jo
inc
sti
sti
push
or
sbb
cmp
jne
xor
sbb
icebp
sahf
not
mov
cmp
adc
outs
fwait
push
data16
inc
inc
sbb
cmp
jne
sysexit
daa
daa
daa
daa
sub
clc
daa
daa
or
jb
push
call
fstp
mov
and
ret
cmp
jge
lock
pop
jo
icebp
cmp
add
xchg
mov
std
or
cmp
jbe
in
sbb
inc
xor
rol
pop
leave
mov
mov
inc
icebp
pop
aas
sbb
rol
pusha
jae
aad
in
sbb
je
ins
xchg
dec
add
push
jne
sbb
cmps
fstp
add
push
mov
lods
(bad)
sub
adc
(bad)
cmp
ja
push
xor
(bad)
hlt
es
inc
xlat
push
out
jae
add
sub
ror
pop
mov
mov
sbb
pop
inc
or
sub
mov
mov
dec
and
pushf
shl
dec
inc
or
add
loopne
cmp
lods
lds
dec
dec
mov
mov
cmp
mov
dec
cmp
jb
outs
cdq
and
jp
mov
test
add
jmp
mov
ja
pop
outs
mov
add
popa
adc
adc
jne
sub
inc
push
fld
push
pop
sub
shl
jl
pop
sub
xchg
jae
cmp
jbe
cli
sub
cmp
sbb
push
adc
pop
sbb
dec
lea
(bad)
mov
sub
mov
inc
adc
xor
or
or
ja
mov
rcr
call
cmp
(bad)
lock
add
ins
add
jle
mov
loopne
mov
les
out
add
test
sbb
xor
cmp
ja
loopne
sbb
or
inc
mov
adc
pop
push
test
add
add
xchg
test
sub
and
not
adc
add
mov
cmp
xlat
stos
test
sub
fdiv
ret
lods
sbb
ins
push
or
jp
or
ret
or
rol
sbb
adc
xor
movs
scas
fdivp
pushf
js
leave
pusha
loope
mov
fcomp
push
jmp
sbb
(bad)
jge
dec
mov
add
bound
fwait
add
cmps
bound
adc
stos
cmp
and
mov
cmps
push
shl
xor
xchg
sub
inc
add
cmp
enter
and
sub
retf
and
sbb
stos
adc
xor
pop
pop
and
call
sub
ja
push
or
ss
pusha
aam
cli
daa
cmp
sub
adc
mov
neg
mov
adc
sub
mov
call
inc
adc
and
or
xchg
ret
jle
inc
add
sbb
movs
ss
adc
sar
mov
adc
ret
and
mov
dec
cmp
fiadd
call
sub
ja
and
and
inc
loope
mov
stc
xor
clc
xor
push
xchg
sub
sub
mov
dec
sub
mov
mov
jo
jge
dec
xchg
sbb
mov
sbb
jmp
div
or
inc
jns
or
push
xchg
push
cmp
xor
xlat
lea
sbb
sbb
aad
inc
xchg
adc
xchg
jp
inc
cmps
sbb
add
leave
or
call
popa
mov
pop
push
retf
loopne
sub
push
dec
cmp
lock
xchg
sbb
cmps
outs
imul
mov
fild
sbb
js
jo
fist
inc
jecxz
push
inc
js
cmps
inc
mov
movs
aaa
aam
jbe
add
or
sub
mov
test
xlat
cmp
mov
clc
cld
pop
nop
repnz
adc
or
gs
into
daa
out
movs
jmp
shr
sub
or
pop
lea
mov
cmp
push
sub
dec
cmp
sbb
mov
sbb
rol
cs
mov
inc
sub
retf
add
lock
adc
enter
push
adc
cmps
je
jns
inc
mov
icebp
push
inc
sbb
inc
push
push
push
inc
xchg
mov
fld
dec
or
mov
inc
cmp
pop
dec
mov
dec
cmp
dec
push
and
sub
inc
push
(bad)
jo
addr16
xchg
xchg
mov
xchg
push
inc
je
cmp
jne
sub
mov
adc
pop
fist
dec
mov
cmp
jne
setae
and
imul
add
mov
retf
pusha
sub
sub
and
sub
call
call
in
push
pop
es
sti
mov
and
add
adc
adc
or
inc
add
ret
mov
in
cmp
sbb
in
out
shl
add
push
popf
lea
cmps
shr
or
jne
pusha
rcl
mov
mov
mov
add
or
or
aad
cmp
push
sete
inc
outs
test
lea
shl
push
sub
fild
sbb
in
scas
jge
sbb
dec
adc
or
sbb
add
test
adc
out
out
das
retf
mov
and
dec
sub
lea
cmp
adc
dec
cmp
mov
rcr
not
les
popa
(bad)
loope
movntq
dec
sub
sub
xchg
add
pop
or
enter
xlat
pop
js
je
jg
mov
fadd
neg
rol
adc
inc
cmp
mov
rcl
pusha
(bad)
or
paddb
call
mov
or
mov
cmp
je
mov
jb
movs
mov
dec
xor
cld
mov
mov
(bad)
mov
nop
pop
mov
cmc
aaa
add
adc
pushf
or
and
mov
es
aaa
mov
cli
mov
int3
retf
outs
(bad)
jl
jne
adc
inc
outs
inc
and
ret
mov
cmp
dec
dec
and
and
inc
push
rol
ins
loop
clc
add
lock
jae
lds
and
loope
push
js
xor
clc
or
inc
fild
into
sbb
pop
or
lods
(bad)
pop
dec
cmps
push
or
cmp
or
pop
mov
inc
imul
ds
por
cwde
sar
mov
cmp
cli
adc
and
sti
push
mov
stc
and
sbb
out
and
cmp
add
(bad)
shl
add
add
cmp
iret
pop
dec
and
push
ds
push
sbb
add
sbb
push
xchg
adc
adc
shl
test
push
ret
add
aas
jns
fisttp
shl
pop
loop
inc
cmp
pop
leave
loope
and
lock
or
inc
cdq
js
pop
or
ja
cmp
dec
jmp
ret
jnp
cmp
cmc
or
ds
call
mov
pop
sub
add
or
retf
sub
sbb
(bad)
xor
sbb
ins
outs
fwait
cdq
test
shl
mov
add
cwde
sub
push
inc
(bad)
mov
or
push
cmp
ss
je
and
or
pusha
test
adc
cmp
jo
retf
aam
cmp
jl
mov
cmp
rol
add
ins
add
dec
(bad)
push
clc
push
cmp
scas
fimul
mov
inc
lock
imul
ss
sbb
cmp
aad
or
push
adc
and
and
out
mul
push
outs
rcr
jo
jno
ds
call
mov
je
int
repz
pop
jne
jbe
js
out
jl
jns
pop
jnp
lds
ds
jge
add
push
jg
loopne
dec
pop
push
and
test
(bad)
adc
icebp
add
add
int
jp
dec
mov
jmp
pop
mov
sbb
(bad)
cmp
fdivp
inc
or
je
jno
or
pop
mov
inc
pop
dec
mov
mov
lea
mov
test
loopne
mov
clc
mov
push
push
sbb
fmul
cmp
mov
jp
adc
mov
pop
fadd
call
add
or
ret
iret
shr
shl
push
add
add
fisub
in
cmc
sbb
sahf
sbb
sub
loope
out
aas
inc
mov
ins
lock
out
add
and
ret
fsubr
mov
fmul
fcomp
mov
mov
jp
sbb
pop
mov
fmul
adc
cmp
adc
mov
test
pop
mov
mov
mov
out
fstp
add
adc
cli
push
sbb
sti
cmp
pop
jb
outs
inc
inc
push
adc
xor
mov
lea
add
lods
or
or
inc
push
push
mov
bound
mov
jmp
leave
pusha
add
daa
cwde
cmp
inc
push
and
inc
loopne
mov
pop
sub
jecxz
loop
mov
fnstenv
out
mov
lea
data16
sbb
shr
jae
or
mov
mov
cld
xor
push
fbld
vpunpcklbw
sbb
mov
outs
loopne
push
out
dec
stos
inc
aad
pusha
inc
push
jbe
pusha
adc
mov
ins
add
outs
or
jns
fxrstor
adc
lock
mov
push
sub
adc
js
das
add
call
cmp
lea
add
fiadd
dec
scas
push
jp
mov
pusha
je
aaa
adc
out
repnz
shr
mul
sbb
int3
mov
sub
jmp
xor
mov
adc
hlt
js
and
inc
fadd
adc
iret
gs
ss
ins
sub
loopne
add
adc
in
jl
lock
stos
movs
jne
scas
inc
push
movs
pop
push
push
xor
into
push
retf
ins
sbb
adc
sbb
pushw
es
shl
sbb
cmp
cwde
lock
and
fmul
or
mov
cmp
or
lds
arpl
push
push
adc
test
inc
movs
push
push
sub
je
into
inc
ja
rcl
or
xlat
and
retf
cmp
cmp
or
or
cmp
rol
cmp
adc
add
sub
and
or
sbb
xor
loopne
and
sub
cmp
(bad)
popa
mov
clc
or
push
add
test
sbb
add
pop
add
out
pop
add
pusha
mov
jne
sub
or
call
pop
out
loopne
sub
or
cld
loop
add
add
fidiv
shl
add
adc
xor
push
clc
adc
popa
jbe
movs
inc
pop
cld
scas
add
mov
dec
add
jae
xchg
push
jo
sub
add
mov
adc
push
iret
jnp
lock
and
shr
movd
sub
pop
sbb
add
or
add
dec
push
or
add
mov
enter
add
je
dec
je
inc
(bad)
add
jmp
cmps
pushf
lock
jo
(bad)
movs
pop
js
sbb
pcmpeqw
add
jnp
sub
sub
fisubr
jmp
xor
or
rcl
in
movs
outs
inc
dec
sbb
mov
mov
or
aam
add
pop
pop
movs
cmp
in
call
adc
jne
mov
add
ror
lods
mov
or
lds
loopne
dec
les
push
push
loope
adc
xchg
cmp
mov
dec
fs
aaa
bound
mov
cmp
push
xor
sub
sbb
(bad)
push
out
adc
dec
jo
or
iret
sbb
iret
push
adc
add
mov
add
loopne
push
inc
and
add
sub
ja
loopne
mov
es
add
jmp
push
test
mov
and
and
movs
or
data16
ins
adc
add
jo
pop
mov
repnz
out
add
push
scas
jmp
(bad)
sbb
inc
inc
mov
outs
loopne
mov
or
or
dec
lea
mov
shr
push
push
lea
adc
jp
lods
sbb
add
cmp
and
cld
(bad)
or
push
ror
push
dec
mov
sbb
dec
push
test
xchg
inc
loope
lock
xlat
call
jmp
shl
pop
push
sar
and
xor
xor
xlat
dec
repnz
call
dec
push
cmp
jne
jmp
stos
inc
call
loope
rol
icebp
jb
and
push
or
daa
icebp
add
or
and
daa
mov
mov
xchg
ror
ret
call
ds
add
adc
ret
add
or
ffree
mov
popf
jmp
and
pop
sub
cmps
mov
fisubr
add
add
ret
lahf
xchg
jecxz
xor
jmp
jmp
jns
push
sbb
into
push
loopne
fs
clc
pop
inc
je
cmp
cli
mov
sbb
cmp
cmp
adc
add
lea
mov
fild
xor
in
xor
push
mov
dec
sbb
fstp
xor
mov
inc
pop
nop
pop
push
jne
aam
fidivr
or
add
push
push
movs
add
jnp
dec
pushf
movs
cdq
xchg
sub
lods
cli
bound
adc
lock
ins
sbb
adc
jge
es
rol
cmp
push
mov
sub
push
or
cwde
cld
std
rol
adc
or
pop
adc
cmps
push
js
push
loope
mov
fs
push
test
movs
or
and
sbb
ret
and
ret
cwde
ins
adc
lods
ret
sbb
retw
cmp
outs
ret
loopne
jle
inc
loopne
jo
mov
xor
push
cmp
jl
add
not
ja
mov
mov
add
enter
dec
int
push
xlat
int3
jne
test
(bad)
xor
xlat
add
adc
mov
cmps
dec
add
push
push
lea
xchg
fnstsw
add
test
das
xchg
adc
xchg
das
mov
pop
inc
rcr
nop
push
lds
and
pusha
cmp
movs
xor
dec
mov
add
xor
ins
rcl
dec
hlt
dec
add
xor
jno
js
jae
xor
add
adc
sbb
call
lods
gs
xchg
enter
push
jb
shl
push
pushf
push
or
inc
and
ss
inc
xchg
ins
dec
add
sbb
into
lds
jb
adc
inc
rcl
lods
xor
push
dec
(bad)
add
sbb
or
jne
movs
mov
sbb
adc
pusha
(bad)
(bad)
push
in
inc
cmp
adc
dec
jbe
pop
sub
das
xor
mov
or
sahf
jno
xlat
mov
xor
push
jae
sub
mov
in
jbe
shl
push
rsm
cmp
loope
dec
jmp
push
xchg
mov
rcr
dec
xor
movs
pop
enter
ins
rcr
or
clc
jmp
mov
aaa
cwde
loopne
cdq
in
sbb
mov
pop
hlt
inc
mov
inc
call
sbb
xacquire
sbb
aad
add
adc
add
rol
sbb
sbb
pop
and
test
xor
bound
and
jmp
pop
jmp
jmp
sbb
fild
cmc
and
loope
xchg
mov
pop
ins
inc
shl
inc
in
push
inc
push
add
pop
push
out
je
mov
dec
repz
pop
jb
adc
mov
mov
lds
loopne
clc
pop
pop
sbb
mov
add
add
adc
inc
lods
iret
push
push
jo
xor
fdivr
add
xor
mov
jp
repnz
or
inc
ret
call
je
es
push
pusha
add
or
je
outs
cdq
sub
stos
adc
out
pop
pop
pushf
mov
push
sub
pop
add
or
pop
mov
sub
in
add
xchg
add
add
mov
(bad)
push
in
sub
dec
mov
test
mov
or
mov
aaa
call
and
inc
and
ret
dec
xchg
add
jne
mov
push
leave
add
inc
loopne
call
lock
pop
dec
inc
or
push
mov
in
push
sub
in
mov
push
stc
jne
aam
push
sti
mov
adc
mov
xchg
push
sbb
shl
loop
xor
pop
or
push
xchg
push
xor
dec
shl
push
popa
jno
aam
rol
and
adc
push
jge
inc
loopne
push
adc
pop
cwde
inc
sub
das
cmp
jle
dec
add
push
adc
mov
(bad)
mov
jnp
add
in
sub
inc
fidiv
push
out
add
movs
js
call
pop
and
out
push
movs
cmp
movs
sub
jne
adc
jle
fs
out
and
ret
jno
jnp
sub
add
xor
and
or
and
add
or
test
pop
push
add
loop
xchg
jp
sub
sub
inc
mov
scas
add
xor
add
mov
add
adc
pop
(bad)
and
mov
inc
inc
cmp
jbe
xchg
(bad)
pop
or
retf
jno
rcr
or
dec
ins
clc
xor
aas
pop
jae
push
test
jne
cmp
jae
inc
mov
cmp
(bad)
cmp
inc
adc
mov
cmp
pop
sub
test
jmp
mov
inc
mov
inc
shr
imul
jl
jmp
push
jle
shr
pop
mov
call
sub
add
add
push
sub
and
cmp
pop
daa
clc
in
mov
or
loope
pop
mov
mov
jl
leave
inc
xchg
cmp
in
cmp
shr
ss
add
ret
mov
xor
adc
adc
jle
ss
push
jbe
and
add
mov
add
mov
stos
div
add
call
sbb
xchg
loop
adc
dec
jb
push
jg
cmp
ret
pusha
inc
fist
(bad)
fistp
push
sbb
std
not
cmp
ja
lea
ja
sub
adc
push
std
add
sar
shl
inc
add
imul
cmp
call
xor
imul
ins
inc
movs
pop
add
and
(bad)
test
or
push
jp
sbb
adc
xlat
mov
lods
lock
push
add
(bad)
inc
and
and
xchg
loopne
nop
mov
sub
inc
mov
sub
dec
out
sbb
mov
test
push
imul
ds
add
loopne
pop
mov
jmp
lock
dec
mov
jmp
mov
sub
sub
pop
lock
iret
test
jl
sub
cmp
adc
mov
daa
or
cmp
cmp
adc
pop
mov
mov
pop
mov
dec
pop
and
addr16
push
shr
shr
jle
inc
fadd
or
mov
fisub
dec
enter
jg
(bad)
or
rol
fisttp
shr
sub
sbb
clc
(bad)
mov
mov
mov
mov
xor
adc
sub
ret
jg
cmp
adc
ror
fsub
in
add
sub
push
xor
(bad)
xor
sub
das
xchg
pusha
add
push
pop
adc
adc
pushf
mov
repnz
jae
cmp
(bad)
sub
mov
xchg
jbe
lock
mov
xor
sub
add
jns
fmul
test
or
retf
sub
(bad)
(bad)
in
out
jb
jae
lods
mov
mov
dec
jne
mov
sub
jmp
xlat
pop
(bad)
(bad)
jbe
inc
test
dec
in
push
mov
sbb
xchg
mov
jge
xor
xchg
ja
adc
cmp
mov
xchg
or
sbb
sub
ss
adc
pop
idiv
(bad)
in
push
add
xchg
adc
xchg
enter
mov
dec
push
inc
jne
xor
call
adc
mov
dec
xor
cmp
cmps
dec
popa
mov
jmp
jge
jge
lock
daa
dec
and
mov
cmc
xchg
cmp
mov
clc
int3
jae
cmp
or
inc
in
jb
shr
pop
int
inc
push
mov
push
sbb
outs
mov
sub
aam
and
mov
jle
jns
mov
lea
ds
pop
out
mov
scas
add
jmp
jo
shl
sub
sbb
ds
int3
jae
in
sub
add
inc
jmp
sub
mov
and
lods
xchg
rcl
pop
cmp
sbb
cmp
add
xor
xor
lahf
jno
or
mov
rol
add
sbb
aaa
add
add
jae
sub
sub
call
out
inc
push
movs
and
mov
add
mov
mov
xor
add
pop
add
or
(bad)
hlt
jne
(bad)
xor
push
aad
(bad)
inc
(bad)
lods
ror
cmp
sbb
jo
pop
sbb
dec
ds
pop
jnp
jle
pop
clc
sbb
fimul
cmp
cmp
sub
lahf
add
push
hlt
jb
loop
jae
push
imul
add
ins
test
test
jge
enter
test
or
loope
jle
arpl
jp
inc
push
mov
lea
xchg
or
or
mov
or
adc
dec
cmp
mov
call
test
loope
mov
sbb
ins
sbb
inc
jl
mov
sub
jb
je
jmp
outs
sbb
mov
push
push
cmp
les
mov
ss
mov
enter
pop
addr16
mov
add
call
inc
fld
inc
xor
out
mov
sub
outs
fsub
cmc
es
dec
mov
push
add
cmp
mov
add
jle
jbe
fcomip
in
sar
movs
sbb
adc
mov
sub
mov
mov
mov
or
sbb
mov
cmp
mov
mov
pop
int3
dec
or
xor
fcmovnbe
cdq
dec
dec
pusha
or
in
mov
mov
loopne
fcom
stos
clc
cli
adc
add
int3
add
or
adc
call
jbe
jae
add
jmp
pop
in
stc
mov
cmps
add
retf
dec
and
sbb
add
iret
inc
push
add
dec
jno
sub
mov
cmp
and
scas
jmp
(bad)
fstp
in
mov
cmp
xor
imul
in
sub
dec
xchg
pop
adc
lock
shl
add
sbb
jl
or
pop
pop
movs
sub
test
inc
or
mov
lock
add
sbb
ret
call
jle
ja
sbb
shr
jl
imul
push
test
test
nop
fmul
mov
adc
shr
pop
cdq
add
pop
lock
mov
sbb
sub
lock
sar
jne
retf
popf
cmp
aas
loopne
jne
pop
icebp
mov
add
icebp
push
inc
pushf
add
or
jae
shl
mov
outs
jl
hlt
mov
or
pop
add
lea
mov
mov
push
sub
and
fsubr
or
sub
lock
mov
or
call
add
push
out
(bad)
cmc
enter
xor
push
push
sbb
pop
outs
(bad)
loopne
pop
xor
fadd
pop
add
das
cmc
data16
cwde
das
cmp
jl
sub
sub
sbb
mov
cdq
lods
aam
test
rcr
pop
hlt
push
sbb
and
xchg
nop
pop
call
and
test
add
lea
push
in
hlt
and
adc
out
mov
(bad)
pop
cmp
mov
sbb
mov
sbb
jb
das
imul
jne
mov
cmp
add
das
pushf
clc
gs
ja
sbb
mov
jne
adc
pop
call
imul
cwde
rcl
or
jge
inc
jle
mov
mov
xchg
pusha
or
aam
repnz
pusha
shl
add
push
push
fiadd
push
inc
mov
dec
inc
dec
or
xor
jl
sub
jl
add
loop
add
in
push
popa
xchg
jg
push
fsubr
lods
pop
cmp
test
cld
and
xor
(bad)
call
inc
shl
cmp
sbb
or
mov
or
sar
mov
(bad)
jmp
sbb
jg
mov
outs
xchg
mov
jne
mov
jl
icebp
sub
push
xor
and
xor
pusha
jne
mov
in
jle
add
imul
mov
mov
clc
mov
add
dec
mov
add
sub
push
dec
sub
rcr
sub
pop
call
add
or
std
jmp
dec
idiv
mov
cmp
imul
sub
cmp
into
inc
ds
sub
and
mov
mov
jo
push
inc
das
div
add
and
cmp
sub
js
xchg
mov
aam
cmp
xchg
push
mov
fisttp
xchg
adc
je
adc
xchg
test
add
pusha
lock
mov
mov
mov
inc
fdivr
shl
fnstsw
adc
push
loop
adc
or
add
add
popa
test
inc
cmp
mov
add
jge
jg
retf
sub
and
push
stos
jne
dec
ror
cdq
xor
adc
inc
inc
add
jle
push
mov
(bad)
mov
mov
mov
enter
adc
xchg
jnp
dec
or
pop
lock
dec
out
add
ret
gs
imul
cmp
cld
inc
cmps
adc
push
jmp
hlt
mov
loop
pop
(bad)
push
add
scas
arpl
push
in
fs
inc
xchg
ror
jmp
call
jg
pop
add
pop
jae
mov
lods
cli
shl
mov
push
mov
jnp
inc
or
sub
add
ja
add
and
mov
and
dec
(bad)
push
add
sbb
push
inc
mov
cmp
or
push
mov
mov
cmc
in
pusha
out
or
add
adc
outs
push
sub
test
pop
adc
loopne
and
sbb
pop
ja
retf
add
mov
pop
pop
es
mov
mov
jmp
xor
xchg
fisttp
outs
hlt
mov
cmpxchg
mov
adc
push
cmc
adc
adc
mov
into
or
add
lea
push
mov
imul
mov
pop
sub
adc
sbb
lock
dec
inc
mov
scas
call
add
dec
cmp
cwde
test
jne
adc
xlat
pop
pop
dec
add
mov
push
add
push
adc
not
push
sbb
jo
adc
mov
scas
fwait
in
add
or
jne
pop
test
or
push
add
sbb
mov
mov
ins
add
out
out
adc
cmp
jg
sbb
mov
(bad)
enter
les
push
outs
pusha
in
push
jmp
fsub
aam
add
sub
mov
push
pop
xchg
add
inc
push
sbb
loope
movs
or
xchg
and
mov
sub
loopne
aaa
or
loopne
dec
jmp
test
dec
mov
retf
jle
cmp
jne
inc
or
or
sub
sar
nop
jle
mov
mov
cmp
jg
inc
jae
xor
mov
sub
scas
pop
loope
or
inc
adc
js
xor
add
push
pop
mov
mov
sub
xor
stc
or
ret
(bad)
outs
fs
mov
dec
(bad)
neg
out
shl
xor
and
mov
mov
inc
sub
loopne
xlat
or
inc
inc
test
mov
call
in
mov
xchg
call
call
or
inc
ja
loopne
ja
andnps
fiadd
fisub
or
loopne
fdivr
in
fisttp
add
daa
adc
fdiv
and
add
gs
dec
fcmovnbe
pop
and
std
fadd
fld
std
cmp
jecxz
cmps
xchg
sahf
dec
jge
add
cmp
sbb
int3
rol
aam
push
pop
lods
loope
(bad)
mov
sub
add
jge
pop
sub
mov
(bad)
int3
inc
ret
add
leave
pop
int3
(bad)
xchg
sbb
sbb
int3
sbb
clc
lock
mov
xchg
push
xor
mov
aad
push
adc
pop
inc
scas
mov
in
fnstsw
and
mov
into
or
mov
cmc
in
or
rol
cmc
add
inc
scas
ror
aam
push
movs
jne
aad
repnz
outs
mov
add
adc
pop
mov
stc
(bad)
dec
inc
stos
lock
lea
mov
sub
add
sub
lea
mov
jnp
aam
cld
fisttp
xor
adc
mov
mov
and
mov
cmp
dec
dec
dec
cmp
jge
lea
adc
xchg
inc
loopne
cmp
mov
vmptrst
mov
cmp
fnsave
add
clc
cmp
repnz
in
mov
push
in
mov
xchg
xor
in
xchg
cs
sar
in
cmc
or
xchg
cmp
jmp
call
repz
mov
inc
dec
ins
xor
add
adc
aas
rol
movs
add
outs
(bad)
mov
jmp
inc
xor
xor
mov
adc
lea
pop
or
ins
jge
test
or
and
jmp
movs
mov
fstp
jbe
jmp
movzx
ror
mov
call
inc
cdq
mov
out
test
add
dec
scas
test
cmp
lock
aad
imul
cmp
in
mov
out
mov
inc
mov
xor
jb
int
push
xchg
pop
call
loopne
mov
push
xor
call
adc
sub
push
xchg
(bad)
mov
outs
mov
sahf
and
cli
movs
retf
push
jecxz
(bad)
cmp
inc
push
shl
sbb
sar
in
test
dec
test
iret
pop
ret
push
mov
enter
cld
call
mov
pop
mov
cmp
jne
lods
cdq
and
into
jb
pop
mov
mov
rol
ror
pushf
mov
stc
lea
jo
adc
push
jge
mov
or
call
or
cmp
jb
mov
jmp
lea
lea
jp
dec
cmp
jb
cmp
je
adc
mov
mov
sub
mov
bnd
test
ins
mov
adc
add
push
push
add
cmp
adc
rcl
sbb
cmp
outs
int
data16
ss
clc
push
clc
aam
xchg
mov
lods
push
test
sub
xchg
add
lock
inc
push
retf
inc
push
or
loopne
ret
xchg
adc
push
loop
jecxz
xor
cmp
pop
jne
repnz
inc
mov
and
into
stos
xor
mov
add
xlat
fdivr
or
cwde
or
shl
jl
jne
(bad)
mov
jmp
inc
rcr
pop
adc
mov
lock
jl
cwde
ud0
mov
lock
jmp
sub
cmps
loopne
mov
dec
nop
or
out
push
push
mov
lds
sub
shl
add
push
push
or
or
cmp
jle
ss
push
add
sbb
sahf
sbb
nop
aaa
add
pop
mov
mov
shl
test
fcomi
stos
pop
jmp
mov
std
jno
jo
push
lods
mov
dec
mov
sahf
cwde
imul
sbb
mov
loopne
jl
and
xor
and
aas
repnz
add
lock
pop
or
inc
cmps
jnp
sbb
pmuludq
out
shl
loope
inc
mov
popf
jbe
leave
cmp
in
adc
lock
pusha
(bad)
call
cmc
jo
mov
je
mov
rol
dec
cmp
inc
sub
shr
xchg
and
lods
(bad)
adc
add
cmps
(bad)
mov
or
add
and
xchg
clts
mov
and
setne
or
push
stos
push
or
sub
fadd
xor
mov
cmp
add
imul
fild
rcpps
jg
call
out
mov
add
xchg
rol
or
add
pop
and
pop
jle
sub
fadd
jne
mov
in
push
(bad)
mov
inc
pusha
xor
scas
fnstsw
sbb
xor
jl
mov
inc
add
loope
shr
or
or
add
js
loopne
cli
sub
jg
shr
aas
inc
or
loopne
jne
mov
dec
int3
popa
ins
ret
pop
mov
adc
mov
iret
lahf
sbb
sar
mov
icebp
popf
(bad)
mov
push
(bad)
pop
xchg
shr
mov
or
in
add
pushf
pop
adc
mov
push
jne
mov
jg
cmp
pop
je
mov
dec
adc
(bad)
adc
push
mov
mov
ds
mov
daa
push
popa
cmp
inc
or
sar
pop
mov
pop
std
int3
mov
not
pop
and
push
add
not
push
jae
mov
or
jmp
xor
neg
inc
mov
(bad)
push
call
aaa
xor
std
sti
shr
and
scas
js
or
adc
jne
js
push
add
hlt
icebp
jae
ja
and
sub
call
out
rsm
mov
loopne
or
cs
lods
jbe
aas
or
jae
jmp
or
outs
mov
add
inc
jo
add
not
in
cmps
mov
mov
mov
add
pop
ss
mov
inc
xchg
dec
add
fst
and
and
dec
adc
add
xor
pop
or
or
enter
or
push
jae
test
add
scas
push
ja
push
xchg
xor
add
stos
dec
mov
stos
adc
sub
inc
scas
fcom
scas
mov
shl
scas
xor
scas
xor
mov
outs
xor
xor
ins
sub
pop
mov
xchg
cwde
xchg
push
pop
pop
xchg
push
shl
dec
adc
xchg
fcmovnb
aam
xchg
jne
adc
or
inc
or
daa
xchg
in
std
sahf
jge
add
stos
fdivr
mov
adc
out
and
clc
pop
add
mov
scas
mov
cmp
enter
or
call
xor
jmp
mov
mov
dec
add
add
stc
out
cmp
bound
(bad)
ins
mov
pusha
out
data16
out
paddsb
mov
mov
fwait
popf
mov
mov
sbb
jne
dec
sbb
sbb
sbb
sub
ret
pop
enter
mov
lods
popa
js
add
retf
pop
in
mov
int3
cmp
mov
mov
fnsave
inc
add
fisttp
or
xor
sbb
mov
sbb
sbb
push
ret
xchg
push
dec
inc
inc
dec
jne
fimul
jne
xchg
jg
pop
adc
rcr
xor
lock
and
jmp
test
je
test
jne
cmp
pop
or
mov
outs
mov
pop
add
or
or
out
mov
or
mov
add
sbb
cmp
mov
xor
mov
push
or
add
es
add
dec
mov
jbe
add
mov
and
add
jne
dec
jae
mov
xchg
mov
jo
in
and
add
add
mov
loopne
push
pop
mov
adc
or
sbb
cwde
mov
int3
mov
inc
xor
cs
mov
out
sub
in
or
into
sub
shl
mov
xchg
sbb
add
test
xchg
sub
fnsave
sub
arpl
cmps
mov
enter
jmp
leave
add
sub
js
das
xor
loope
add
mov
daa
or
leave
test
je
test
je
xor
shr
add
shl
shl
shl
sub
cdq
dec
(bad)
jp
fmul
mov
sbb
mov
inc
add
cmp
lods
push
ret
add
and
add
loop
or
pop
loope
push
inc
or
and
(bad)
fstp
mov
mov
add
inc
add
stc
loopne
(bad)
repz
sub
cmp
loopne
add
jge
push
push
sub
xchg
and
scas
sar
xor
cmp
jne
cmp
retf
inc
sub
clc
popf
and
jbe
int3
adc
clc
pop
je
mov
inc
jmp
push
scas
adc
cmps
fidiv
xor
add
icebp
mov
repnz
jo
mov
rcr
outs
jmp
call
pop
jmp
jmp
inc
jmp
rol
mov
sub
rol
inc
jmp
jmp
or
or
or
xchg
pop
cwde
lea
and
and
pop
push
jmp
xor
jecxz
outs
fmul
add
call
sub
inc
xor
mov
push
xor
enter
shr
xor
mov
dec
div
aam
in
inc
and
ret
(bad)
loope
add
push
dec
nop
(bad)
adc
jge
xchg
mov
add
push
(bad)
ins
rol
loop
in
sbb
loopne
push
jg
or
mov
pushf
push
and
sub
rcr
call
outs
rol
mov
or
inc
out
outs
repnz
bswap
mov
clc
daa
ss
mov
push
push
fdiv
or
aam
jge
mov
push
call
jle
ret
inc
push
pop
or
popf
jl
mov
mov
mov
jbe
add
sub
cs
mov
test
inc
add
test
inc
add
out
push
mov
cmp
jnp
push
inc
sbb
add
in
sar
gs
jb
outs
jb
pop
sbb
(bad)
call
jns
je
ins
cs
imul
bound
neg
mov
add
inc
push
jmp
push
and
mov
push
and
cmp
xor
add
cmp
add
(bad)
call
call
or
or
pop
shl
inc
jb
popa
je
aaa
push
(bad)
jl
add
fs
aaa
mov
gs
pushaw
add
adc
scas
sbb
popa
addr16
retf
or
lds
and
or
jo
outs
xchg
js
jo
xor
or
loope
cmp
pusha
cmp
pop
dec
add
mov
jg
int
jmp
repz
and
fwait
xchg
push
inc
push
jb
mov
push
sub
xchg
and
xchg
mov
sub
cvtdq2ps
xor
ret
popa
push
inc
inc
push
outs
jne
arpl
inc
or
xor
add
mov
aaa
fdivr
prefetch
imul
or
adc
adc
push
mov
adc
push
or
or
jb
and
pop
sub
sub
push
data16
push
mov
inc
addr16
mov
inc
pop
push
inc
imul
popf
hlt
mov
jmp
pop
add
mov
mov
mov
cmp
sbb
imul
sbb
jae
jo
paddq
mov
push
mov
xor
rcr
je
adc
shl
cmp
stos
cmp
mov
mov
adc
mov
adc
adc
push
sar
pop
sbb
jge
add
pop
hlt
xor
(bad)
test
loopne
mov
aas
adc
push
add
cmp
add
inc
fcomp
pop
pop
pop
xchg
adc
inc
arpl
outs
add
call
lea
and
mov
sbb
push
sbb
mov
sub
rcr
dec
cli
push
inc
cmp
mov
xor
test
ret
mov
(bad)
jbe
mov
je
mov
push
add
cwde
mov
jbe
jae
xchg
dec
inc
and
dec
(bad)
sbb
inc
sbb
sub
xor
lahf
pusha
rcl
jmp
inc
mov
xor
inc
mov
sbb
dec
push
adc
cmp
int
lods
cwde
clc
mov
xor
lock
rcr
shr
stos
js
ds
inc
mov
add
adc
and
adc
movs
xor
rcl
cli
jns
sar
push
and
jbe
test
into
movzx
cmp
cmp
or
ret
in
loope
adc
ins
add
outs
mov
add
test
je
movq
mov
mov
sbb
stos
xor
mov
xchg
rcl
mov
cld
add
(bad)
fcmovb
push
add
add
push
and
int
ret
aaa
and
mov
into
loopne
mov
xchg
ret
imul
mov
dec
in
adc
sbb
and
add
mov
test
xchg
popa
mov
xor
je
shl
jno
adc
or
sub
jo
pop
xor
inc
popw
or
icebp
xabort
inc
adc
rol
or
dec
lock
and
cmps
cmp
inc
sbb
js
adc
add
popa
push
les
jo
add
enter
xor
and
(bad)
rcr
xchg
push
clc
cs
pop
xor
leave
mov
mov
xchg
jl
scas
stos
dec
nop
outs
ret
add
sar
jo
cs
mov
push
shl
enter
mov
cbw
lods
add
sub
sub
int3
push
out
add
rcr
ret
and
mov
fst
mov
lahf
popf
sbb
add
adc
sub
inc
es
leave
addr16
lock
mov
pop
pop
fs
sbb
mov
inc
scas
pop
test
enter
mov
mov
push
jo
call
shr
ret
cs
xor
and
jo
sbb
xchg
leave
dec
mov
push
test
test
add
call
loopne
adc
xor
inc
in
lock
and
mov
out
or
pop
adc
in
mov
aas
and
xor
adc
repz
add
jmp
inc
mov
add
nop/reserved
add
sub
inc
pusha
add
add
imul
cmp
xor
xor
enter
and
sbb
scas
les
adc
fcom
xlat
movs
inc
xlat
ret
or
xlat
sbb
ret
sbb
dec
xlat
or
fsubr
xchg
fcomp
rcr
repnz
shr
push
xchg
add
sahf
mov
mov
push
push
scas
ja
stos
sahf
push
add
add
and
xor
mov
push
add
jno
fisttp
pusha
push
and
adc
pop
fdiv
loopne
adc
loopne
push
cmp
cmp
pop
push
and
out
push
into
gs
add
add
xor
add
imul
push
add
add
outs
(bad)
push
inc
adc
push
arpl
inc
add
into
cmp
dec
aaa
imul
call
add
cs
imul
stos
jbe
setnp
shl
push
dec
sbb
or
sbb
adc
bound
ror
sub
xor
jo
pop
push
pop
and
dec
mov
or
dec
jne
push
push
jno
(bad)
mov
js
pop
fdiv
test
cmp
fistp
xor
xor
push
and
and
retf
mov
js
sbb
sti
jb
and
sub
shufps
cwde
pushf
sub
mov
lds
and
aas
push
pop
adc
dec
cmp
ret
mov
loopne
or
fmul
frstor
lock
mov
in
scas
push
mov
push
xor
or
mov
(bad)
std
xor
fimul
loope
pop
scas
adc
xor
outs
add
es
inc
cld
mov
cmp
jo
adc
mov
fst
lea
jmp
jno
(bad)
mov
imul
cmc
or
xchg
lea
adc
jecxz
adc
add
test
jbe
mov
test
jmp
adc
jbe
inc
add
enter
xlat
inc
retf
inc
shl
add
jmp
xor
mov
test
push
or
mov
cmp
mov
sub
jne
mov
jnp
jne
or
mov
ins
jmp
add
je
and
sbb
sbb
shr
sub
push
push
push
and
xchg
xor
sbb
push
mov
pop
fsubr
mov
loopne
test
sub
jbe
lds
xor
(bad)
pop
push
jnp
sub
and
sbb
out
or
into
cmc
nop
fsub
push
pop
shl
outs
mov
or
aaa
mov
dec
or
add
xchg
adc
cmp
xor
inc
into
sub
movntps
pfmul
inc
jnp
loopne
in
add
mov
dec
adc
pop
add
push
rcl
retf
dec
call
aaa
mov
push
in
mov
mov
pop
mov
call
inc
xor
sbb
loope
or
cmp
adc
mov
je
int3
mov
lea
jae
dec
sbb
jmp
push
loopne
sub
mov
push
call
or
inc
lea
inc
sbb
xchg
in
loop
mov
mov
cmp
jb
cmp
pop
aam
jne
push
icebp
push
fcomp
xchg
lods
in
pop
pusha
mov
jl
and
push
test
shl
loopne
iret
and
test
movs
call
or
pop
popa
icebp
add
retf
push
and
dec
cld
inc
loopne
sub
adc
not
jne
inc
inc
jbe
bound
mov
cld
cli
or
inc
or
jmp
adc
in
push
sbb
or
and
cmps
into
mov
sub
test
inc
xor
lea
es
sbb
pop
movs
loope
xchg
jo
jo
ret
aas
mov
jns
daa
sahf
jnp
(bad)
and
jle
stc
sub
ja
inc
cmp
inc
sbb
std
xor
shr
shl
(bad)
into
sbb
nop
push
js
test
hlt
or
sub
shr
adc
mov
xor
add
hlt
rol
cmp
sbb
out
fisttp
dec
sub
loope
mov
xchg
or
arpl
or
add
mov
mov
sar
clc
lsl
mov
call
sbb
and
sbb
jo
leave
adc
test
lock
out
jp
add
adc
jmp
aaa
pop
and
pop
pop
push
pushw
jo
(bad)
iret
mov
stos
mov
xor
mov
rol
add
iret
repz
repnz
push
mov
cwde
mov
mov
dec
mov
add
push
fld
mov
jecxz
mov
xor
call
dec
mov
push
out
sbb
mov
out
sar
or
xchg
shl
push
sahf
out
fmulp
push
rcr
fucom
aaa
mov
inc
inc
out
pop
pop
repnz
out
mul
std
push
or
adc
sbb
aad
les
mov
jbe
mov
stc
fst
jmp
fisttp
ins
fild
adc
xchg
cmp
jmp
movsx
mov
shl
push
add
adc
jmp
ds
adc
nop
cmp
add
add
adc
std
call
in
push
popf
dec
xor
cs
mov
jb
jnp
pushf
and
icebp
sbb
cmp
cmp
jne
test
add
stos
ins
add
add
lock
cmp
add
adc
xor
ja
adc
lahf
inc
and
push
push
cld
loop
inc
mov
fs
mov
mov
sub
adc
into
add
mov
jp
cmp
pop
push
dec
push
jb
cmp
imul
jne
gs
ins
popa
addr16
idiv
sbb
sub
addr16
imul
test
adc
fs
arpl
jb
sti
pop
jecxz
ins
jae
sbb
cmps
lods
(bad)
jge
jae
cdq
dec
test
adc
fistp
xchg
imul
or
popa
lock
lods
fld
or
je
push
adc
inc
or
push
sbb
jbe
popa
jo
cmp
jae
push
stos
mov
adc
mov
in
loopne
push
rcl
inc
add
sbb
push
and
and
in
dec
sbb
outs
push
push
clc
ins
cmps
popa
push
jg
dec
outs
jb
jp
popa
ins
sbb
push
fucom
push
(bad)
pop
arpl
xor
neg
in
sbb
or
or
push
mov
adc
call
shl
fisttp
jns
out
test
dec
push
cmp
test
je
outs
ja
hlt
push
cmp
adc
repnz
or
outs
retf
mov
and
ss
sub
add
dec
mov
ins
xchg
js
or
jbe
rol
xor
or
fstp
add
fs
fiadd
lock
or
xor
add
inc
add
rcl
and
hlt
stos
jmp
gs
push
sub
mov
push
gs
pop
xor
rcr
imul
je
or
xor
push
cmp
or
add
test
shl
push
sar
push
push
inc
ins
push
sbb
push
push
div
scas
dec
or
or
outs
jo
or
cmp
pop
sub
je
or
call
push
mov
adc
or
int
mul
(bad)
(bad)
push
sub
sub
das
push
push
inc
test
ds
js
test
pushf
cmps
into
xor
mov
and
iret
je
(bad)
mov
dec
xchg
mov
push
lods
js
lock
push
fsubr
mov
int3
push
aam
or
loope
mov
clc
mov
jns
push
xchg
or
addr16
ins
and
inc
dec
inc
inc
jb
gs
push
mov
cmps
mov
lds
pop
dec
xor
adc
inc
push
or
js
lds
jb
mov
loop
adc
push
sub
pop
in
mov
jo
fs
push
jl
mov
stc
or
dec
mov
inc
xor
pop
das
jmp
jno
lds
pop
xchg
adc
shl
js
arpl
ret
pop
push
js
out
loopne
dec
hlt
stos
cmpps
shr
les
or
xor
les
psubw
(bad)
cli
dec
mov
push
ret
popa
push
sub
mov
push
jmp
fs
rcr
adc
sbb
cs
pop
pop
xchg
je
popa
mov
ins
sub
sub
call
add
jnp
xchg
mov
xchg
add
mov
or
int
dec
jo
dec
test
ins
push
hlt
adc
dec
add
pop
out
inc
ret
fld
fisttp
adc
retf
inc
adc
push
xor
mov
inc
mov
inc
and
daa
jne
add
sbb
xlat
inc
mov
shl
mov
mov
data16
xor
mov
cwde
pop
(bad)
call
and
outs
or
imul
push
es
dec
xchg
pop
push
xchg
xor
ja
pop
dec
pop
adc
xor
cmps
jno
inc
(bad)
ffree
cmps
dec
lea
or
inc
mov
imul
or
ja
inc
fndisi(8087
dec
pop
std
inc
loopne
xor
adc
fstp
adc
add
push
cmp
pop
das
push
sbb
mov
hlt
minps
out
or
cs
push
shrd
push
add
arpl
add
xor
xor
test
pop
xlat
jno
out
mov
push
push
inc
popa
and
jbe
fcmovb
push
addr16
and
pushf
loopne
in
mov
(bad)
jmp
hlt
xchg
and
or
xchg
or
cmp
inc
outs
xchg
cmp
ds
pop
adc
xor
jge
jo
test
(bad)
loope
pop
add
mov
add
outs
mov
pop
fsubr
repnz
aas
mov
cmps
aas
adc
push
xor
cmp
aas
pusha
push
or
aas
push
add
and
pop
add
shl
cmps
jge
jo
rcl
add
add
lods
mul
pop
in
addr16
push
dec
iret
imul
lock
add
sbb
shl
sub
mov
stos
popa
xor
push
mov
into
sub
adc
js
rcr
sbb
shl
pop
and
jnp
sbb
and
pushf
ja
inc
(bad)
shr
lock
jl
push
add
lock
jl
xchg
pushf
stos
mov
sbb
mov
mov
fmul
push
push
push
mov
xchg
add
cwde
or
adc
mov
push
jae
sub
xor
or
outs
jbe
dec
sbb
cmc
sbb
push
les
sub
ret
ja
lea
mov
ins
out
add
xchg
bound
js
jmp
ins
outs
jbe
add
ret
mov
dec
retf
add
add
add
cmc
test
adc
cmc
stos
cmc
ds
fstp
pop
or
mov
in
jns
jno
add
add
inc
bound
mov
inc
xchg
inc
sub
imul
add
cmp
inc
imul
in
loopne
ins
xor
pusha
lock
jl
fwait
add
(bad)
aas
or
ret
pop
movs
shr
fiadd
rol
dec
pop
call
xor
pop
dec
jmp
inc
push
stc
add
inc
dec
cmp
jmp
push
push
jbe
dec
test
mov
mov
or
repnz
cdq
lock
xor
cwde
ins
repnz
push
and
pop
enter
add
into
pop
and
cmps
xchg
pop
pop
inc
xchg
add
retf
add
mov
xchg
jae
nop
fiadd
pop
xchg
add
adc
mov
dec
jecxz
loop
fwait
add
push
scas
mov
out
push
mov
mov
jo
popf
jp
add
add
shr
jge
sub
push
jo
mov
out
test
push
sub
cs
adc
ds
push
js
jns
xor
cmps
(bad)
clc
inc
jp
int3
in
cmp
loopne
jnp
push
ins
les
idiv
rol
cmp
mov
add
jge
pusha
mov
inc
push
sbb
fs
push
sbb
mov
sbb
pop
mov
push
jmp
sbb
add
xor
mov
sbb
rol
icebp
or
add
das
xchg
enter
push
inc
lods
jne
push
idiv
sbb
adc
mov
jbe
push
lds
jo
pop
dec
pusha
stos
fldenv
push
movs
gs
sub
bound
pop
lahf
push
andnps
cwde
mov
or
pop
mov
pop
mov
pop
daa
inc
call
daa
push
jnp
mov
sbb
call
out
inc
and
repz
cld
aad
repz
aam
push
pushf
push
mov
mov
push
and
cmp
lahf
ins
pop
mov
loop
sbb
aam
mov
push
mov
js
or
lock
add
loop
mov
out
mov
pusha
push
mov
push
mov
fisubr
cld
push
fmul
and
iret
jnp
jge
sub
mov
dec
es
clc
fdivr
jnp
ins
push
add
mov
sub
cs
push
ins
pop
add
jb
call
xchg
mov
push
sbb
xchg
dec
jl
aaa
in
xor
add
js
dec
push
imul
mov
or
push
mov
int3
lock
add
or
add
gs
js
push
adc
pusha
fild
popa
adc
sbb
sbb
dec
dec
(bad)
add
and
loope
push
inc
js
jae
adc
test
or
call
and
sbb
xchg
inc
(bad)
push
fidivr
mov
xchg
pop
or
(bad)
loopne
or
arpl
into
call
jb
std
xor
push
mov
pop
adc
js
xchg
or
push
scas
jae
cmp
xor
shr
frstor
jo
sub
clc
push
inc
or
fdiv
and
adc
pop
cmp
or
shl
adc
sub
popa
jno
ret
add
bound
gs
xor
js
sbb
in
in
rol
dec
outs
fst
or
aaa
jo
cmp
nop
adc
fs
iret
dec
ins
adc
cmp
mov
pop
inc
mov
push
dec
outs
jb
jns
mov
imul
or
jne
jae
add
imul
js
inc
(bad)
imul
cmp
repz
int
add
push
dec
mov
jae
jno
jo
mov
nop
push
enter
imul
mov
adc
loop
data16
outs
nop
push
lds
enter
mov
in
adc
jb
sub
push
mov
fcomp
inc
lock
popw
sub
in
or
or
pop
or
or
mov
test
sbb
or
dec
call
pop
push
jl
clc
sbb
push
xor
aas
scas
test
or
fcom
pop
and
aam
pop
lock
add
inc
fcom
cmc
and
inc
adc
inc
mov
mov
pusha
mov
test
add
add
rcl
pop
fstp
rol
xor
imul
adc
sbb
fnstenv
add
add
sub
(bad)
xchg
repnz
lahf
sub
mov
add
les
push
sbb
shr
(bad)
xchg
int3
dec
jo
xor
push
adc
outs
and
adc
jae
push
sub
jecxz
shl
fsin
sub
and
jbe
addr16
lahf
and
ret
loopne
fcomp
pop
and
sbb
fimul
sbb
add
add
(bad)
fiadd
push
or
and
sbb
xchg
inc
xchg
fdivr
adc
xor
inc
lods
jl
pop
adc
mov
addr16
rcr
xor
add
sbb
push
xchg
or
mov
sbb
pop
add
push
jecxz
les
cmps
mov
icebp
test
das
or
cmps
in
and
(bad)
mov
adc
push
test
enter
push
sub
mov
add
jmp
add
int
and
add
es
cs
cmp
loopne
mov
inc
pop
inc
cdq
adc
adc
hlt
dec
push
jle
cmpxchg
mov
pop
test
ret
loopne
push
test
add
add
int3
adc
add
popa
dec
push
sub
out
fstp
rol
sbb
add
iret
mov
test
retf
push
cmp
enter
push
add
push
dec
imul
ret
or
sub
xchg
jb
cs
xchg
gs
sbb
push
or
add
push
test
lock
dec
into
pop
(bad)
in
jo
sub
pop
cmp
(bad)
push
add
jnp
pop
into
lea
icebp
cmp
data16
ins
(bad)
xchg
aas
aaa
pop
push
lahf
call
push
or
dec
pop
inc
inc
inc
jno
ret
ins
fs
int3
or
call
movs
mov
mov
retf
or
retf
dec
popf
adc
xchg
jnp
ins
nop
dec
fmul
dec
adc
(bad)
in
mov
sub
dec
or
mov
jne
or
js
sub
fild
dec
aaa
inc
adc
dec
or
push
dec
push
loopne
or
cmp
inc
lock
in
ss
jo
pop
punpckldq
shl
jno
and
push
mov
push
popa
fs
fucomi
popf
inc
out
sbb
dec
xchg
iret
add
add
enter
add
add
push
add
pop
jle
enter
cmp
scas
push
mov
bound
push
jg
inc
sub
test
inc
mov
ss
adc
or
rcr
add
inc
add
or
and
add
dec
outs
pusha
loop
ins
or
rol
cmp
and
loope
inc
add
xor
mov
jmp
push
push
jnp
mov
dec
xchg
sbb
retf
xor
pop
daa
or
retf
push
rol
cmps
or
call
add
scas
pop
adc
test
not
or
cmps
add
pop
fs
nop
or
add
gs
or
loop
push
outs
mov
out
fdiv
jnp
in
or
pusha
fwait
push
ins
(bad)
dec
and
and
outs
inc
lock
cmps
enter
packsswb
aam
dec
shr
mov
les
push
and
jae
jbe
ss
xor
(bad)
add
div
out
and
cld
mov
imul
dec
call
das
(bad)
xor
data16
mov
and
adc
or
dec
stos
or
inc
inc
push
push
ins
add
xor
sbb
loopne
mov
dec
gs
jg
repz
xchg
jns
push
ds
add
push
jns
gs
jne
xor
addr16
adc
test
adc
imul
jbe
hlt
scas
out
jno
(bad)
jg
mov
adc
push
outs
imul
mov
gs
adc
ins
outs
inc
fidiv
mov
adc
(bad)
repnz
pop
push
xrstors
mov
aam
adc
and
ss
in
popa
jns
mov
inc
cmc
jmp
iret
mov
adc
jns
test
mov
jns
shr
sar
inc
xchg
jbe
mov
enter
cmps
mov
loop
js
and
sahf
neg
daa
rcr
or
mov
mov
jnp
push
add
outs
push
pop
loopne
stos
pop
add
sbb
inc
xor
nop
and
shl
ins
xchg
pop
inc
sti
inc
sub
xchg
fld
lods
mov
div
xchg
xchg
xchg
stos
shl
adc
test
jne
xor
dec
inc
(bad)
js
or
(bad)
and
enter
jge
inc
sub
js
and
or
push
jmp
xchg
and
(bad)
das
cmp
cmps
inc
dec
pop
xchg
mov
test
xor
inc
or
loopne
dec
xor
out
cwde
pop
movs
xchg
or
pushf
in
adc
and
enter
xlat
ret
adc
dec
adc
sar
adc
jmp
jae
mov
inc
pusha
xchg
lods
inc
add
std
pop
sub
xlat
push
js
pop
push
jmp
xchg
nop
xlat
in
push
dec
ins
cmp
push
xlat
sbb
xlat
or
div
mov
push
xlat
lock
test
push
add
sub
ins
xchg
xor
scas
push
mov
scas
pop
xchg
or
or
rol
push
fcom
ins
jne
adc
adc
add
xor
jb
loop
mov
unpckhps
adc
push
jle
add
cli
push
nop
bndldx
out
sbb
inc
sti
sbb
nop
push
imul
ds
push
stos
or
movups
ret
adc
pop
(bad)
mov
pushw
scas
add
xor
inc
fs
aas
jle
xlat
add
imul
add
add
adc
mov
aaa
call
mov
fmul
(bad)
aaa
cmp
pop
aad
rol
add
jg
add
movs
adc
out
jbe
push
and
ror
jl
pusha
les
inc
xchg
pavgb
fisttp
xchg
push
addr16
push
mov
add
adc
loop
jbe
dec
lea
and
int
xchg
mov
push
dec
lea
data16
cmp
pop
xor
mov
movs
jecxz
or
push
outs
mov
pop
add
lds
test
or
retf
shl
pop
jp
push
es
dec
cmp
je
cmps
inc
dec
rcr
xchg
ss
adc
inc
mov
cwde
fwait
push
push
dec
lahf
pusha
adc
pop
push
adc
mov
jg
add
or
mov
mov
movs
xor
or
into
test
mov
mov
mov
into
add
inc
das
int3
fadd
sbb
sbb
or
shl
aas
push
and
(bad)
sbb
sbb
add
bound
sub
rcr
out
jae
shr
mov
je
loop
mov
pop
pushf
das
mov
out
add
cmps
xchg
in
push
pop
xlat
pop
mov
jle
fidivr
or
int3
push
pop
(bad)
retf
inc
or
add
mov
push
cmp
jns
(bad)
cmp
push
std
mov
(bad)
cmp
dec
outs
je
data16
push
js
mov
lods
mov
sbb
out
pop
dec
mov
or
cvtdq2ps
push
jne
jo
in
fs
pop
cs
cmp
ret
and
pop
sub
cs
jb
mov
or
pop
add
push
lods
inc
sbb
pop
lock
push
and
pop
push
rol
pop
jnp
add
pop
es
add
scas
push
xlat
lock
jmp
inc
mov
pop
add
add
pusha
loopne
sbb
sbb
cmp
xor
and
push
jmp
xlat
xor
ror
inc
jns
mov
lahf
dec
mov
adc
lods
in
sti
dec
sbb
cmc
loop
add
add
inc
fistp
dec
jp
xor
mov
(bad)
push
cmc
cmc
inc
sbb
adc
mov
inc
cmp
cmp
popf
ins
add
test
push
cwde
inc
retf
mov
pusha
(bad)
call
dec
dec
shld
sub
mov
push
mov
sub
jo
jae
das
out
add
push
hlt
cld
out
push
and
rol
jno
dec
lahf
jmp
inc
test
adc
and
aas
xchg
jns
jbe
test
cmp
push
push
sbb
rcl
test
sub
fadd
cmp
lea
movs
push
add
pop
pop
loopne
loopne
sbb
in
icebp
lea
jno
test
stos
rol
add
sbb
cwde
lds
inc
test
call
test
out
fsubr
bound
add
test
in
pop
sub
jmp
pop
lock
fwait
dec
inc
pop
pop
pop
push
xlat
mov
adc
jae
movs
in
(bad)
pop
inc
pop
sbb
loopne
push
stos
push
call
fadd
or
mov
dec
add
dec
js
jno
pop
jnp
or
mov
call
jecxz
add
mov
push
pusha
popa
lahf
push
jg
sbb
push
iret
ror
and
add
jnp
arpl
adc
dec
arpl
ret
arpl
arpl
sbb
popa
mov
pop
xor
add
test
mov
adc
fsub
ins
push
out
xor
adc
and
sahf
mov
or
inc
outs
jo
ins
imul
add
inc
or
pop
push
mov
mov
out
mov
cmp
or
bound
pushf
adc
add
and
jae
sti
xchg
gs
jne
or
sbb
imul
cmp
pop
pop
les
adc
dec
mov
inc
add
mov
div
inc
or
add
out
jnp
mov
aad
ret
int3
pop
sbb
adc
mov
dec
lock
or
xor
add
pop
add
adc
lods
push
push
pop
adc
cmp
adc
cmp
mov
aas
pop
cmp
dec
mov
adc
push
push
or
sbb
sbb
sbb
pusha
fld
fmul
adc
addr16
or
fdiv
and
or
nop
inc
lods
xor
or
mov
mov
or
rcl
xchg
xchg
jae
dec
pop
inc
dec
add
push
daa
or
xor
or
fwait
ret
test
aas
dec
fwait
mov
fistp
aas
(bad)
jbe
fld
dec
mov
mov
mov
push
push
xor
mov
xor
add
jmp
xor
cs
bound
ins
pusha
cmp
pop
mov
ins
add
cli
pop
test
inc
inc
and
repz
jle
or
push
outs
jo
add
jnp
or
or
xchg
rcl
mov
rol
jb
cmp
or
xor
mov
sub
mov
jmp
or
jg
sbb
nop
es
jmp
sbb
ins
sbb
jbe
sbb
inc
sbb
ret
sub
dec
outs
arpl
mov
pop
inc
cwde
fimul
loope
enter
push
dec
cmps
add
je
dec
cmps
add
cwde
add
sbb
lods
pusha
loope
pop
loopne
shl
sbb
cld
into
or
push
outs
jns
loop
ret
push
mov
or
ja
mov
push
imul
ins
outs
ja
aam
sbb
push
pop
cmps
(bad)
sbb
xor
sbb
ins
mov
sub
xchg
ins
inc
lds
lds
cmp
lahf
aas
psraw
or
push
and
push
imul
jb
jno
jbe
jo
mov
ins
jne
(bad)
and
scas
add
je
push
or
or
push
outs
jae
sub
pop
inc
rcr
into
jp
xchg
in
repz
mov
push
outs
or
nop
or
(bad)
fmul
mov
or
xor
xchg
stc
retf
div
adc
and
imul
add
push
or
mov
add
imul
in
push
xchg
mov
add
movs
ins
arpl
pop
lds
rol
mov
sub
jg
jle
inc
jo
rol
jg
pop
dec
mov
popa
js
dec
xor
sbb
pop
sbb
xchg
pusha
inc
dec
mov
fcmovnb
mov
inc
repz
mov
lods
clc
xlat
adc
and
lahf
push
push
add
popa
inc
add
and
lods
dec
mov
fs
push
mov
shl
adc
and
pop
mov
pusha
fdiv
jo
sub
push
cmp
adc
pusha
mov
and
jmp
adc
gs
mov
jo
iret
test
dec
inc
out
adc
daa
add
test
sub
in
adc
ja
mov
dec
outs
dec
outs
cmp
dec
outs
adc
cmp
ins
cs
les
jbe
sbb
jo
mov
push
(bad)
les
mov
push
cmp
shr
fs
xchg
movs
push
or
push
adc
mov
aam
push
shr
inc
dec
aam
and
fmul
es
pop
pop
sti
dec
fmul
push
aam
movs
retf
es
nop
ret
fist
mov
mov
lods
mov
xor
test
push
pop
test
push
add
jnp
rcl
inc
mov
in
sbb
mov
jmp
push
je
imul
mov
jo
push
or
xchg
ret
sub
push
jmp
or
xchg
add
add
pop
aas
pop
or
loopne
cmp
and
inc
mov
popa
ja
mov
sub
mov
inc
and
gs
jne
int
loop
push
mov
xlat
test
loop
dec
add
dec
call
imul
or
fs
push
ror
imul
dec
(bad)
(bad)
imul
imul
cmps
shl
pop
dec
and
jge
loopne
mov
lods
sub
push
rol
ins
mov
pushfw
call
and
adc
sar
push
mov
xchg
outs
sub
ror
cs
out
jo
jge
dec
inc
dec
jae
sub
jno
mov
imul
or
cmp
inc
outs
dec
jno
shl
scas
pop
add
es
jge
in
js
and
dec
push
and
fdivr
lock
sub
lahf
adc
fnop
jmp
adc
or
cs
dec
lods
mov
daa
fdivr
es
inc
jne
shr
in
jge
mov
iret
sub
dec
pop
je
rcr
dec
xor
dec
or
(bad)
mov
xchg
jnp
stos
mov
call
push
loope
xor
xlat
sub
sub
sub
xor
or
mov
jne
ins
sub
frstor
or
aas
jp
movs
xor
arpl
rcl
js
xor
jne
sbb
add
(bad)
cmp
xchg
mov
enter
das
shl
jnp
cwde
sti
popa
dec
push
leave
popa
mov
inc
das
loope
jmp
popa
cld
cld
mov
add
aaa
mov
mov
xor
das
(bad)
jne
xor
popa
les
outs
inc
or
inc
jns
and
cs
sub
jmp
scas
fdivr
jp
loopne
cmp
jmp
or
and
loop
ret
push
sub
lods
lock
je
pop
mov
aaa
rcr
sub
call
es
hlt
ret
cs
jnp
xchg
cs
sub
in
push
mov
sub
loope
sub
or
pop
pop
cmps
jnp
daa
sub
dec
cmp
xchg
xor
test
push
xor
push
or
hlt
cmp
cmc
fist
movs
push
fwait
inc
ss
dec
gs
add
sub
lds
add
xor
test
adc
xor
les
fisttp
sub
mov
cmp
pusha
jo
push
push
scas
or
sub
inc
jo
(bad)
popa
add
jo
jns
sub
out
movs
pushf
jp
adc
cs
in
test
jmp
fiadd
rol
pusha
push
and
sub
jns
and
test
loopne
int3
mov
jb
and
test
push
sar
adc
int
mov
lock
je
sbb
adc
das
xchg
jb
add
pushf
pop
scas
addr16
add
mov
inc
js
neg
test
test
scas
test
das
mov
sbb
arpl
out
mov
inc
cwde
loop
or
inc
bound
in
xor
mov
out
add
add
push
test
push
push
mov
mov
loopne
lock
sub
outs
neg
add
call
pop
cmp
mov
mov
femms
and
in
retf
fucomip
ds
push
icebp
jmp
fcom
fdivp
push
dec
loop
and
repnz
fucomp
ds
aas
mov
jae
xor
outs
sub
push
and
mov
pop
mov
shr
sub
mov
mov
sti
emms
mov
sub
pusha
push
ds
xchg
ja
aaa
imul
out
das
repnz
sub
cld
jmp
xchg
pop
ja
pop
mov
fnsave
pop
mov
sub
fwait
or
pop
inc
add
add
add
add
sub
add
std
or
or
pop
add
push
mov
mov
mov
mov
mov
mov
mov
jg
(bad)
push
adc
sbb
cmp
cmp
mov
loopne
cmp
loope
(bad)
(bad)
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
call
add
fimul
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
test
icebp
sbb
call
call
dec
es
outs
inc
test
dec
push
add
sub
or
(bad)
repnz
pusha
xlat
add
rcr
fld
idiv
and
in
inc
movs
push
test
iret
repz
test
fild
push
push
daa
ds
push
in
cld
ja
lods
les
retf
xchg
jbe
cmps
push
icebp
cmp
mov
pop
push
test
out
mov
cmp
push
sbb
movs
inc
adc
mov
push
in
stos
cld
ror
aad
ins
(bad)
mov
(bad)
mov
test
mov
clc
push
pop
les
rcr
mov
jo
(bad)
call
adc
xor
sub
inc
xor
sbb
cmp
out
cmp
or
pop
je
sub
jnp
in
ss
ret
xor
iret
shl
scas
jbe
push
ficomp
jecxz
inc
ds
rol
jo
adc
cs
ss
ror
pop
mov
dec
ret
mov
adc
clc
push
inc
dec
ja
rcr
mov
and
scas
(bad)
ins
add
mov
and
fadd
jo
add
loopne
add
ror
ins
jle
imul
adc
ins
in
add
mov
or
adc
and
mov
addr16
inc
repnz
stos
sbb
cmp
pop
push
arpl
inc
and
or
xchg
jae
xor
sbb
jmp
or
call
inc
mov
or
(bad)
outs
aaa
ss
or
inc
add
push
mov
dec
add
pop
xor
push
(bad)
or
in
push
fcmovne
or
inc
ret
add
cld
cmp
cmp
mov
push
jb
dec
daa
dec
sbb
test
mov
(bad)
jbe
push
fbstp
cmp
adc
out
int
fbstp
mov
cmp
cmp
add
and
mov
call
in
mov
ins
ja
sub
or
sub
test
mov
jg
outs
push
jmp
xor
adc
add
jbe
sbb
mov
data16
(bad)
movs
ins
jo
arpl
arpl
(bad)
aas
pop
sub
or
jae
fsub
mov
sahf
add
imul
cs
cmp
outs
add
das
pop
mov
pop
or
jne
push
jne
fs
test
sub
jmp
das
sbb
xchg
pop
dec
stos
xor
push
sub
cwde
or
and
cmp
aad
cs
ror
xor
dec
inc
mov
push
add
pop
inc
or
lea
mov
cmp
and
leave
rcl
int3
add
stos
push
or
lods
xchg
shr
daa
mov
xchg
out
cmp
mov
and
mov
pusha
jnp
push
push
outs
jb
jb
adc
iret
clc
mov
jae
jo
xor
das
sbb
(bad)
popa
ins
push
fadd
pop
cmp
adc
and
add
data16
and
mov
jo
dec
cdq
out
rcl
test
adc
push
add
jbe
inc
inc
gs
(bad)
adc
mov
arpl
jae
add
aad
aam
enter
jmp
push
mov
retf
aam
xchg
push
dec
pop
mov
or
or
inc
mov
popf
cmps
sub
inc
adc
jl
xchg
xchg
jge
dec
or
adc
inc
inc
pusha
push
inc
push
inc
pusha
sub
(bad)
mov
aas
call
int3
push
or
daa
or
push
xor
sub
jne
jl
pusha
push
sbb
dec
dec
push
rol
pop
aaa
(bad)
adc
mov
in
or
aaa
adc
push
dec
add
mov
add
add
rol
imul
cmp
push
jl
nop
pusha
ins
fmul
push
xchg
sub
aaa
shl
jne
je
jp
cmp
ins
add
and
loopne
jne
push
jno
hlt
dec
pop
and
inc
add
mov
inc
jb
xchg
jp
push
rcl
pusha
or
sbb
rcr
int3
scas
cmps
cmp
pop
mov
cmp
scas
or
cmp
popw
rol
or
cmc
mov
mov
xor
js
int3
xor
jmp
hlt
icebp
into
cmp
rol
xchg
leave
enter
and
out
xchg
scas
rcl
fild
cmp
dec
cmp
add
outs
cmp
cmps
les
mov
add
cmp
ins
(bad)
aas
int3
dec
and
aas
push
test
pop
adc
aam
call
sub
mov
dec
jno
pop
push
movs
inc
or
in
xchg
xchg
jne
outs
inc
jg
or
jo
in
mov
call
mov
pop
cli
pop
je
or
or
xchg
mov
jb
xchg
dec
or
add
push
mov
xor
pop
stmxcsr
push
xchg
and
popf
sub
adc
fdivr
or
add
adc
xchg
idiv
mov
dec
femms
xor
das
mov
fcom
repnz
add
inc
inc
mov
ja
cs
inc
inc
mov
inc
inc
inc
inc
pop
jle
int3
inc
cs
inc
neg
inc
inc
inc
xchg
mov
push
xor
inc
cs
jle
cs
inc
inc
(bad)
xor
lea
inc
push
jnp
out
fs
or
sub
dec
outs
fs
mov
repz
sbb
add
pusha
adc
sub
(bad)
xor
xlat
(bad)
dec
mov
and
adc
clc
mov
movs
test
inc
push
push
inc
hlt
dec
shl
inc
stos
dec
adc
mov
sbb
sub
fs
retf
les
xor
add
mov
xlat
push
ins
call
dec
cwde
or
mov
or
cmp
inc
dec
stos
pop
icebp
test
jbe
sub
push
add
sahf
push
enter
mov
dec
xchg
dec
pop
push
loop
jbe
ret
sahf
push
dec
in
es
add
push
xchg
fisttp
shl
rcl
call
xor
dec
inc
pusha
push
inc
mov
outs
inc
das
cmp
sbb
mov
inc
mov
int3
pop
dec
pop
mov
pop
dec
pcmpgtw
xchg
out
retf
mov
mov
out
or
xchg
push
dec
add
add
dec
sbb
push
dec
push
inc
stos
push
add
fimul
or
or
(bad)
adc
or
pop
adc
or
es
pop
mov
pop
jae
and
je
aas
(bad)
add
rcl
mov
xchg
mov
push
arpl
push
push
out
sbb
xchg
dec
add
add
js
(bad)
shr
or
or
xor
or
mov
push
xchg
icebp
jae
xor
aaa
popf
inc
(bad)
sbb
mov
bound
dec
sub
mov
add
in
and
jae
add
xchg
loopne
add
or
add
iret
test
aam
jmp
add
cwde
test
inc
mov
push
inc
mov
or
aam
xor
sub
push
mov
out
cs
js
add
dec
push
mov
cmp
push
clc
mov
push
nop
mov
push
lods
push
ror
push
cld
push
fsubr
jge
push
and
push
add
(bad)
adc
push
ja
out
dec
es
xchg
ins
push
add
mov
xor
js
mov
ins
scas
inc
inc
jbe
add
frstor
adc
lock
push
sar
movs
inc
adc
sti
xor
aas
pop
aaa
dec
or
inc
loope
lods
adc
popf
test
loop
into
or
inc
(bad)
lahf
jnp
or
or
inc
inc
ins
fwait
add
cmp
adc
fs
push
dec
jo
ficom
inc
repnz
inc
ins
jo
add
fnstsw
push
shl
cmp
and
or
(bad)
xor
mov
addr16
ins
or
shl
aaa
movs
or
daa
dec
popa
push
push
mov
shr
push
imul
jo
out
inc
jo
pop
adc
or
jle
lds
lods
push
pusha
push
or
mov
outs
adc
ror
mov
aas
js
fs
call
out
pushf
xchg
sbb
add
fwait
outs
je
and
push
or
pop
stos
inc
es
loopne
out
ss
cmc
sub
clc
(bad)
mov
jb
and
jg
nop
ds
ret
add
gs
inc
jne
push
call
cs
bound
cmp
or
or
gs
push
popa
xor
shl
push
ret
lahf
shl
inc
fs
cs
xchg
mov
add
or
xchg
test
int
and
rcr
popf
mul
jae
mov
mov
mov
bound
or
jb
push
jge
push
outs
loop
push
je
jo
mov
mov
xor
xor
(bad)
dec
ins
cli
fisttp
push
jns
sbb
stos
pusha
xor
pusha
scas
add
jo
mov
icebp
xor
pop
iret
adc
stos
(bad)
je
jo
into
sub
push
add
outs
sub
dec
arpl
loopne
call
cmp
sbb
pop
or
aas
out
sbb
add
pop
dec
cmp
add
(bad)
into
cmps
xor
sti
mov
xor
bound
adc
jbe
push
dec
push
les
sub
push
add
shl
add
rol
mov
je
add
and
into
or
popa
pop
arpl
(bad)
cmp
adc
and
pop
fnstenv
inc
(bad)
clc
xchg
dec
cmp
cmps
push
and
add
test
sbb
sub
mov
jae
outs
and
ja
jo
movs
addr16
addr16
pop
pop
sub
xor
sub
ja
mov
push
push
(bad)
aas
pop
inc
les
mov
push
jl
stc
cmp
addr16
push
dec
ins
add
mov
mov
outs
push
int
clc
mov
or
xchg
add
add
add
sub
adc
sbb
mov
mov
push
mov
fcom
push
push
adc
(bad)
rcl
mov
ss
push
hlt
inc
mov
push
test
aam
enter
xor
scas
rcl
js
cmp
test
add
imul
adc
mov
cmp
dec
inc
inc
inc
push
ins
inc
dec
push
pop
out
ins
popf
inc
and
cli
xchg
or
rol
in
pusha
mov
test
aam
xchg
push
mov
pop
out
xchg
shr
push
je
xchg
in
jge
mov
pop
inc
push
fsubr
cld
sahf
jmp
movs
mov
cmp
loopne
daa
pop
pop
jl
lock
mov
ja
add
cdq
add
mov
cmp
xchg
pushf
cmp
out
pop
mov
test
sub
mov
add
bnd
sub
in
mov
or
sub
int3
jnp
push
xchg
sub
das
or
sbb
lock
dec
or
jp
xor
cwde
xor
loopne
iret
push
es
push
jb
jae
(bad)
aam
push
push
xor
cmp
pop
sub
das
imul
test
test
jno
pop
xchg
out
int3
push
inc
mov
or
adc
loope
pop
push
popa
bound
clc
in
daa
sub
dec
lock
sub
leave
movs
jmp
hlt
sub
xlat
retf
clc
pop
test
or
sbb
xchg
je
dec
mov
dec
push
test
mov
add
sub
ins
xor
dec
scas
retf
jo
sbb
daa
push
push
pcmpeqw
daa
xor
fmul
cli
or
imul
inc
(bad)
add
fidivr
inc
or
sbb
sbb
or
cld
pop
les
or
jo
push
dec
outs
jmp
mov
dec
dec
adc
inc
pop
mov
sub
sbb
inc
outs
daa
sub
pop
daa
js
pushf
clc
add
adc
adc
and
add
or
xor
fmul
and
daa
jb
sbb
mov
push
fld
push
nop
push
iret
pop
sbb
push
fld
(bad)
xor
add
inc
es
cmp
sbb
(bad)
mov
and
add
cmp
add
xchg
iret
es
jg
loope
pop
add
mov
pop
adc
xor
adc
outs
xor
xor
xor
xchg
jae
outs
mov
add
push
dec
dec
cmp
popa
je
test
ja
in
add
jl
or
push
fadd
ss
sahf
jecxz
into
xor
mov
xor
movs
and
add
add
dec
shl
stc
push
push
add
dec
add
xchg
add
pop
push
inc
push
jmp
inc
idiv
cmp
push
inc
push
pop
ja
ror
cmp
mov
ss
pop
jbe
sti
sbb
sahf
repz
add
xor
fisubr
dec
mov
lods
pop
xlat
nop
mov
pop
retf
dec
mov
cmp
leave
mov
or
mov
inc
pop
je
mov
fcmove
sub
push
setns
scas
(bad)
fstp
sbb
cmovae
outs
mov
pop
sub
push
cmps
pxor
sub
push
dec
jg
jbe
outs
(bad)
call
cvttps2pi
jecxz
xor
inc
into
xor
push
ins
cmovp
push
push
xadd
xor
adc
cmp
sub
add
inc
xchg
hlt
mov
movs
fiadd
add
add
add
adc
cs
add
outs
add
pusha
clc
adc
sbb
sbb
(bad)
jmp
jnp
add
add
add
mov
mov
mov
mov
mov
mov
mov
add
(bad)
(bad)
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
mov
and
mov
mov
add
push
mov
cmp
(bad)
(bad)
(bad)
dec
adc
pop
mov
mov
mov
mov
mov
mov
(bad)
out
(bad)
in
inc
inc
inc
(bad)
(bad)
(bad)
(bad)
inc
inc
inc
(bad)
mov
(bad)
mov
(bad)
mov
push
push
icebp
clc
dec
(bad)
mov
push
sub
push
adc
cmp
pop
push
pushf
and
adc
cmp
test
out
push
movs
les
test
in
daa
scas
push
push
movs
cmp
stc
pop
sub
push
cmps
or
cmp
push
push
jo
nop
inc
ja
cmps
mov
mov
push
ins
mov
cwde
push
push
mov
rol
and
inc
cmp
sahf
neg
jbe
jo
test
xchg
or
xor
fwait
iret
repz
push
mov
int3
popa
iret
shr
cmp
adc
add
mov
je
out
sbb
lock
out
scas
push
jnp
mov
mov
cld
push
cmp
dec
push
mov
mov
push
adc
sbb
ds
aas
test
inc
pop
mov
inc
lods
push
push
mov
fadd
pushf
adc
hlt
jbe
mov
js
mov
int3
xor
push
sub
xchg
es
adc
imul
sahf
push
fsubr
(bad)
and
out
call
std
je
push
ss
mov
outs
lods
das
push
sub
xor
add
loope
mov
inc
push
mov
xchg
xchg
adc
jbe
dec
cs
cmp
dec
inc
push
hlt
ds
xlat
xor
add
xor
add
mov
rcl
or
push
inc
dec
ja
mov
cmps
out
push
imul
sub
add
loope
or
mov
or
and
adc
mov
xchg
test
add
xchg
daa
or
pop
sar
(bad)
lds
adc
mov
inc
inc
popa
arpl
popa
adc
ret
ret
sub
inc
outs
arpl
push
and
call
push
or
mov
adc
and
push
add
loope
aam
adc
and
xor
in
and
dec
inc
jns
dec
cwde
inc
inc
add
outs
or
inc
ins
ins
and
mov
push
out
xchg
sub
inc
add
ds
lea
xchg
or
xchg
inc
ret
inc
sub
data16
cmp
mov
inc
or
add
lds
daa
cld
jnp
inc
cwde
fimul
push
push
outs
jne
sbb
idiv
and
fwait
sub
or
mov
dec
icebp
inc
jmp
mov
fisttp
sub
retf
add
lods
adc
and
jp
daa
xchg
or
shl
in
popa
shl
dec
iret
adc
xchg
sbb
pop
xor
xor
imul
ja
(bad)
leave
adc
cmp
dec
xchg
leave
nop
mov
lock
sub
pop
ds
outs
outs
clc
pop
std
push
sbb
inc
adc
cmp
mov
xor
arpl
mov
jl
add
addr16
jns
inc
cmp
xchg
or
add
dec
jmp
sbb
dec
gs
or
lods
cmp
xor
mov
pop
xor
iret
or
inc
mov
shr
and
jl
popa
mov
ror
sub
pop
in
push
outs
add
cmp
dec
adc
xor
inc
inc
dec
dec
enter
inc
xchg
or
ss
adc
shl
add
scas
ds
adc
popa
pop
mov
jmp
adc
add
call
jns
add
ins
outs
shr
adc
fidiv
jl
xlat
dec
les
dec
loopne
jo
dec
xchg
and
push
ss
push
sub
mov
add
jmp
jmp
shr
push
popa
sub
xchg
dec
pop
sahf
or
add
xchg
or
add
xchg
dec
pop
dec
sbb
cmp
adc
add
xchg
cmp
inc
dec
icebp
cs
idiv
adc
sub
idiv
push
ror
xor
aam
xor
inc
xor
movs
inc
ror
push
jo
ror
push
dec
adc
lods
arpl
sub
stos
xor
sbb
pushf
dec
push
sbb
cmp
lahf
jmp
sbb
imul
sub
push
dec
mov
inc
inc
inc
leave
repnz
inc
inc
inc
inc
jae
mov
inc
std
sub
push
jne
inc
inc
inc
cwde
mov
ficomp
sbb
xor
or
add
cmp
add
adc
outs
pop
add
stos
fs
pop
push
mov
sbb
fwait
xchg
inc
cdq
or
cmp
xchg
lock
push
mov
push
push
inc
cs
push
scas
lods
jbe
dec
mov
sbb
adc
cmps
push
shl
dec
pop
sub
xor
and
xor
inc
or
push
mov
call
(bad)
int3
xchg
inc
cmp
sbb
movs
lds
push
xchg
cmovb
daa
(bad)
push
sub
mov
xor
adc
cld
mov
clc
adc
add
or
movs
xchg
aam
or
sub
add
pop
bound
cmovle
push
lds
cmp
jo
mov
add
cmp
mov
and
mov
loope
sbb
pop
cmp
and
in
aam
cmp
into
add
shr
add
fdivr
add
push
fmul
mov
les
fsub
cmps
push
or
or
mov
add
aam
or
jno
pop
shl
pop
cmp
push
sub
shl
pushf
add
je
pop
mov
dec
lods
jp
sub
arpl
pop
loope
xor
rol
test
aam
mov
push
jmp
push
add
andps
popa
jo
cmp
(bad)
xchg
test
pushf
jo
add
xchg
mov
push
or
and
clc
add
stc
sub
repz
jo
push
jle
dec
popa
imul
aam
xlat
pop
mov
jbe
sbb
sbb
test
or
ins
ja
sbb
mov
nop
nop
ja
mov
ja
push
ja
mov
and
push
inc
mov
jne
shl
xor
jne
outs
jmp
jnp
xor
adc
pop
out
adc
jne
sbb
or
push
ja
push
lods
ds
fistp
test
mov
or
shr
ja
pusha
add
pop
push
ja
fidivr
push
(bad)
push
ja
ins
mov
outs
fsub
push
mov
outs
(bad)
mov
inc
jbe
enter
mov
sub
lods
scas
pop
pusha
push
ja
sub
or
or
sub
call
pop
add
and
push
push
mov
push
mov
fild
popf
cmove
rol
cmp
out
push
push
inc
add
and
imul
pop
add
jecxz
xor
push
int3
sub
sbb
push
dec
sub
inc
push
mov
cmp
xor
or
xchg
ja
and
adc
xchg
or
or
inc
arpl
jae
or
daa
nop
cmps
mov
jl
or
cs
es
jne
fs
add
mov
dec
push
jne
sub
shl
sub
pop
jae
pop
pop
pop
sbb
pop
adc
popa
pop
and
sar
xor
sbb
sbb
mov
addr16
in
cli
pop
or
ins
arpl
scas
or
ins
and
scas
jae
mov
cli
or
js
mov
sbb
mov
ret
jmp
retf
retf
sub
test
enter
add
push
mov
mov
movs
fs
inc
pop
not
mov
or
inc
imul
ins
scas
cmps
stos
lock
or
add
pushf
lock
imul
mov
or
sbb
daa
add
add
in
dec
test
add
and
inc
je
or
mov
inc
pop
and
add
outs
mul
daa
pop
das
jne
movs
push
scas
pop
push
add
mov
clc
ret
data16
rol
(bad)
call
adc
inc
out
push
push
mov
mov
jbe
inc
ins
add
mov
not
data16
push
hlt
push
add
add
sub
add
jb
addr16
jne
jae
out
out
ret
mov
sub
cmp
addr16
inc
mov
outs
test
in
test
sahf
jp
adc
sub
push
push
or
sbb
jmp
loope
sub
fisttp
jns
jne
dec
cmp
ror
daa
pop
xlat
cmp
sbb
mov
daa
fucom
jbe
add
pop
sbb
emms
adc
push
loope
cmp
add
icebp
test
and
pop
gs
xor
movs
add
sub
sub
push
sub
call
pushf
or
dec
les
(bad)
int3
shl
test
fild
xchg
jbe
and
add
mov
cmp
sub
jp
pusha
(bad)
retf
outs
cmp
add
pusha
pop
sar
imul
adc
cmp
jecxz
inc
(bad)
call
leave
xor
stos
pavgb
repz
jo
sub
movs
mov
and
jmp
ret
pusha
pop
sbb
push
dec
jmp
ret
xor
and
or
push
or
mov
pop
arpl
movs
dec
xchg
push
xor
push
push
addr16
in
push
push
and
in
pop
outs
adc
xor
in
mov
and
xor
ss
xchg
fild
fwait
ss
dec
jnp
imul
adc
repnz
cmp
or
push
or
pop
fucomip
mov
aaa
xchg
xor
push
rcr
xor
xor
push
out
jo
or
pusha
mov
pop
sbb
add
push
push
or
(bad)
test
jp
js
inc
nop
leave
push
cmp
add
inc
imul
inc
mov
ja
pop
inc
cmp
pop
cmp
jnp
test
jbe
mov
xchg
mov
and
pop
sti
jo
push
push
dec
or
sar
push
push
clc
(bad)
push
je
sub
ficomp
fsub
psrad
int
cld
add
popa
arpl
dec
mov
adc
adc
push
push
in
pusha
out
fisubr
or
(bad)
ja
jbe
push
jns
gs
push
adc
mov
jae
gs
mov
inc
cmp
mov
mov
push
cmp
adc
or
clc
fnstenv
inc
dec
jo
mov
or
add
and
mov
and
push
mov
and
and
inc
imul
shl
inc
hlt
cmp
add
jl
in
xor
es
das
ror
test
xor
out
push
out
inc
jbe
rol
out
push
add
imul
or
push
mov
dec
shl
clc
or
mov
loop
adc
or
dec
cmp
test
add
push
push
and
xor
ficomp
cs
jb
fdiv
ja
bound
lea
aaa
sub
lea
aas
mov
add
mov
or
ins
ins
cmp
fld
test
jno
mov
jp
pop
retf
jge
pop
push
hlt
(bad)
dec
xor
bound
jo
cmp
cmp
test
and
test
dec
xchg
ds
and
jno
or
xchg
inc
add
push
add
test
pop
test
lods
inc
js
push
pop
xor
or
pop
ror
xor
sub
imul
jnp
test
out
sbb
mov
push
sub
icebp
mov
add
jp
jae
ins
xor
mov
sbb
xor
jmp
movs
or
pop
es
jnp
lds
leave
dec
iret
mov
dec
inc
pop
sbb
and
ins
ja
adc
cmp
and
xchg
mov
or
je
and
and
loop
xchg
gs
sub
or
mov
inc
jne
ins
popa
fs
cwde
cmps
or
xchg
jo
add
xchg
push
test
inc
fidiv
fnstcw
add
rcr
pop
xor
cmp
cmp
aas
and
adc
or
and
pop
push
and
pusha
fnstsw
inc
adc
inc
rol
cmps
out
mov
dec
fs
inc
mov
pop
jg
add
jmp
(bad)
aas
inc
outs
movaps
push
mov
mov
xchg
ret
add
and
sbb
dec
and
add
and
repnz
outs
xor
les
adc
leave
sub
jecxz
sbb
jo
int3
les
fdivr
iret
repz
push
pop
popa
out
sahf
es
jnp
xchg
mov
scas
mov
xchg
pusha
js
fdiv
push
mov
inc
add
or
data16
add
out
imul
push
mov
daa
into
push
test
sub
or
fild
fstp
fbld
push
fidivr
mov
lahf
push
lahf
adc
clc
mov
push
lahf
push
cmps
push
enter
push
cmp
sbb
push
push
cdq
cmps
test
xchg
push
dec
icebp
jmp
inc
mov
and
scas
clc
add
inc
outs
adc
adc
push
rol
fld
and
and
sub
pop
pop
inc
bound
psubq
lods
xchg
cs
push
das
jae
outs
add
jge
push
lock
pop
mov
sbb
or
xor
lods
cmp
push
outs
test
call
cmp
mov
gs
stc
mov
add
es
or
not
pop
sbb
cdq
lock
iret
gs
cmp
daa
or
sbb
xchg
sbb
xchg
and
and
sub
jo
aas
push
ins
sub
fs
loop
sti
ja
clc
pop
push
pop
ins
sub
sub
imul
adc
test
or
xor
add
jbe
imul
add
cmp
aaa
push
dec
add
add
popa
sbb
adc
mov
pusha
sti
sbb
adc
retf
or
add
sub
cli
mov
pusha
mov
into
dec
call
ret
out
hlt
mov
mov
scas
add
dec
aaa
inc
inc
add
inc
add
pop
adc
push
enter
and
sbb
cmp
outs
inc
fistp
cmps
push
add
add
imul
loopne
xor
pop
inc
adc
popa
xchg
fsubr
pop
shl
cmp
dec
jae
adc
jb
lods
adc
or
mov
push
jmp
rol
inc
push
inc
ds
sub
inc
lds
xor
cmp
movs
sub
cmc
cmovg
das
inc
inc
xchg
mov
das
fsubr
sub
int3
js
inc
test
mov
add
add
sbb
hlt
fild
test
or
adc
test
sysenter
call
mov
and
mov
into
xor
cmps
push
jo
mov
enter
sub
mov
ins
gs
sub
add
stos
mov
push
push
sbb
cmp
addr16
inc
repz
pusha
bound
or
or
lock
dec
push
push
jo
outs
pop
jg
push
sbb
(bad)
push
arpl
ins
sub
add
aam
fld
mov
jae
mov
sub
into
or
pushf
add
add
xor
or
pop
or
fcomp
enter
rcl
fs
adc
das
jno
inc
jo
mov
add
inc
sbb
xlat
pusha
xor
jecxz
mov
jae
push
push
scas
push
push
in
sets
adc
cli
cld
adc
and
add
dec
in
dec
cwde
push
inc
xlat
aas
stos
mov
outs
cmp
or
(bad)
rol
pop
add
loopne
cmp
mov
jge
es
push
or
mov
(bad)
inc
xchg
pxor
test
add
cdq
inc
or
mov
xor
int
jb
xor
and
dec
rol
mov
cmp
stos
cmc
adc
jne
lods
cmp
rcr
add
lock
or
shl
inc
inc
outs
sbb
inc
or
adc
add
fdiv
and
pusha
pop
inc
dec
sub
cwde
and
mov
and
cmp
sub
push
fdivrp
pop
or
mov
dec
inc
adc
dec
adc
lahf
mov
push
(bad)
stos
lods
or
dec
inc
dec
push
cmps
adc
xlat
sub
sbb
std
add
push
inc
popa
mov
pop
test
in
pop
mov
bound
or
pop
sub
mov
dec
sbb
jb
xchg
fild
sub
fdiv
mov
push
in
mov
cmp
test
add
push
push
or
push
fidivr
and
mov
fcmovnbe
mov
in
and
add
sti
xchg
lds
and
inc
popf
jnp
scas
jp
xchg
or
jo
bound
jns
push
inc
mov
je
popf
addr16
dec
ds
imul
push
and
add
ins
add
loopne
(bad)
jb
shl
push
or
jb
inc
xor
jnp
push
sbb
fs
push
outs
loopne
mov
int
cmp
jge
adc
and
cmps
sub
lea
push
push
inc
jne
ins
mov
pusha
push
sub
or
or
in
cmp
jne
inc
xlat
push
adc
or
adc
push
mov
add
jp
jno
inc
add
loope
mov
add
sub
test
sub
or
inc
imul
je
or
int
and
cmp
pop
ficom
pop
push
jbe
jecxz
test
jns
icebp
push
adc
arpl
or
stos
dec
sbb
pop
(bad)
add
push
and
ja
jle
data16
aas
push
push
add
and
clc
cli
popw
clc
fimul
mov
ss
mov
test
inc
mov
cmp
jmp
jne
add
mov
xchg
mov
dec
jb
shl
xchg
pop
add
pop
and
dec
or
jo
ret
dec
jge
push
mov
jae
jns
dec
mov
loopne
dec
and
popa
je
push
and
mov
ror
xchg
repnz
ins
inc
sbb
cmp
fcom
pop
mov
push
loopne
or
cwde
adc
fwait
add
xor
mov
add
je
(bad)
stc
adc
dec
mov
and
adc
clc
sbb
fsubr
xor
les
jmp
push
rol
cmp
bound
out
pop
inc
js
stos
lds
pop
push
dec
mov
jno
mov
xchg
(bad)
call
adc
outs
pop
in
lea
sbb
fsub
push
cld
ror
mov
das
pushf
push
sbb
jno
jg
cmp
or
pop
or
xor
push
int
jecxz
mov
test
into
push
push
syscall
shl
sub
or
cmps
mov
cmps
sbb
xchg
adc
pop
inc
ror
arpl
inc
jae
and
or
cmps
mov
and
push
and
retf
lock
leave
xor
sub
gs
lods
outs
in
adc
pop
cmp
dec
add
mov
dec
nop
dec
inc
inc
data16
mov
sbb
push
fadd
cmps
nop
lea
loope
push
das
mov
in
mov
ins
mov
cmps
cmp
loop
test
or
push
pop
jb
fwait
imul
jb
sar
cmp
add
dec
sub
ret
movs
or
mov
or
gs
sub
(bad)
vmwrite
mov
xlat
ins
cmc
lds
dec
aaa
add
sbb
inc
jbe
mov
inc
adc
ds
lods
mov
mov
or
jae
add
mov
shr
aaa
or
inc
mov
jg
je
xor
jle
mov
add
jge
movs
xchg
add
iret
stos
mov
or
pop
pop
pushf
int3
inc
sti
adc
sbb
or
jo
push
push
and
add
add
push
test
ins
call
push
pop
inc
inc
cmovns
push
and
add
hlt
adc
xor
pop
aas
dec
push
inc
xor
sbb
push
or
js
jle
aaa
pop
ins
idiv
cs
add
outs
(bad)
popa
push
adc
repz
ret
xchg
add
inc
dec
mov
mov
mov
mov
retf
jmp
inc
xlat
retf
sar
mov
call
and
mov
or
mov
mov
idiv
dec
test
mov
das
idiv
mov
movzx
sub
jb
je
inc
stos
call
push
inc
push
mov
push
push
lea
mov
out
psubb
xchg
mov
push
ror
cld
test
je
xor
cmp
cld
xor
adc
mov
mov
hlt
and
pop
sbb
ins
jmp
xchg
push
sti
loopne
enter
ret
js
or
nop
aaa
sub
xchg
adc
inc
mov
adc
pop
pop
ret
jmp
mov
jo
mov
push
push
jae
push
adc
xchg
push
push
cmp
jne
push
mov
mov
jmp
xor
pop
pop
pop
ret
nop
fdiv
test
outs
mov
cmp
xor
fsubr
add
mov
add
xchg
mov
imul
test
loopne
in
addr16
ficom
daa
jo
cmps
pxor
mov
sbb
cmp
mov
mov
std
sbb
jg
sbb
sbb
lock
test
arpl
ja
dec
push
or
xor
push
push
pusha
out
(bad)
fisttp
and
mov
pop
mov
es
hlt
jmp
inc
retf
dec
mov
aaa
cmp
fwait
sbb
add
mov
into
xor
sub
aas
push
add
(bad)
clc
mov
sbb
ficom
mov
add
(bad)
ret
cmps
mov
push
imul
mov
mov
dec
mov
ss
into
mov
clc
fist
data16
or
xor
push
push
(bad)
push
sahf
push
mov
lea
rol
push
inc
clc
dec
movs
stc
jge
hlt
dec
movhps
inc
int
dec
jno
push
dec
push
xor
ins
in
test
sti
outs
aas
cmp
pop
adc
jo
jmp
nop
ret
sbb
test
jl
aam
aas
jo
outs
outs
out
fst
mov
pop
hlt
pop
icebp
mov
sbb
or
(bad)
out
ja
jbe
adc
inc
jne
mov
inc
scas
jne
int3
stos
mov
mov
mov
dec
aam
or
ins
mov
jno
enter
sbb
scas
adc
jl
fmul
jg
inc
lods
cmp
rol
dec
test
dec
das
outs
push
adc
retf
fstp
out
dec
add
lock
fs
add
ss
test
push
test
mov
scas
pmuludq
out
inc
rcr
ins
inc
or
pop
or
adc
sahf
fsubr
pop
inc
fs
rol
inc
aas
arpl
popa
or
xchg
inc
adc
adc
(bad)
ds
jp
push
cmp
xchg
pop
gs
sub
in
adc
test
add
cmps
push
mov
xor
std
mov
lods
loope
mov
adc
pop
mov
pushf
inc
dec
add
loopne
cmps
scas
mov
popa
fsub
in
rcr
das
je
mov
adc
cmp
sub
jmp
mov
ins
or
sar
push
test
or
pop
mov
cmp
jl
movs
pop
cdq
loop
inc
sub
mov
push
xlat
jecxz
retf
mov
sub
ret
lods
xchg
test
xchg
pop
mov
out
xchg
(bad)
aaa
clc
sar
lock
scas
pop
bound
and
aaa
std
jecxz
add
je
pop
mov
lea
push
test
jo
xor
add
cmp
lahf
mov
mov
jo
scas
or
dec
add
or
cwde
retf
push
loope
retf
jbe
outs
adc
mov
outs
outs
inc
pop
or
pop
scas
das
sub
adc
pusha
scas
mov
hlt
inc
dec
jne
pop
fisttp
push
call
dec
dec
jne
inc
xchg
ror
cmp
inc
add
push
lods
es
sahf
jge
cmp
push
add
mov
or
cmp
hlt
dec
test
jne
test
dec
sti
out
jne
(bad)
pop
retf
cmp
mov
or
dec
cmps
imul
or
clc
dec
xor
shl
sub
shl
xor
imul
fadd
pusha
jb
sub
out
into
or
ficomp
retf
add
xor
imul
(bad)
(bad)
pop
or
add
mov
call
or
jl
adc
out
icebp
pop
fbstp
mov
cmp
je
sub
call
add
add
adc
sub
out
test
lea
mov
sahf
jl
movsx
call
adc
push
pusha
sbb
and
clc
lea
mov
adc
sbb
mov
jmp
inc
(bad)
mov
(bad)
adc
add
js
inc
xchg
dec
inc
cmp
jne
mov
in
add
or
adc
fdiv
adc
sbb
or
mov
inc
jmp
and
inc
sub
jp
cld
loopne
push
dec
or
int3
cmp
pop
jl
(bad)
sbb
jo
jg
jb
fcomi
pop
rol
shl
mov
push
pop
xchg
popa
repz
jmp
in
mov
mov
or
add
or
sub
mov
sub
adc
cmp
sahf
test
adc
or
xabort
retf
je
add
mov
adc
xchg
lock
fs
mov
xor
mov
jne
lods
shr
fmul
shl
mov
jmp
test
stos
mov
mov
loope
sub
xchg
mov
xlat
popa
gs
xor
stos
call
fadd
inc
movs
cdq
push
cwde
inc
loopne
inc
or
iret
xor
mov
push
and
test
das
enter
inc
inc
inc
movzx
xchg
xchg
jle
mov
call
fisttp
ds
sbb
data16
inc
xchg
mov
jg
pop
pop
mov
sbb
adc
mov
inc
inc
cmp
mov
mov
push
pop
call
movhps
mov
xor
js
shr
fld
popf
(bad)
das
cwde
or
dec
inc
xor
ja
adc
fstp
adc
push
dec
test
js
lods
fdiv
mov
movzx
mov
push
pusha
mov
sbb
fidivr
push
lea
lea
movs
add
fs
pop
es
cli
or
inc
nop
sbb
xchg
sbb
pop
inc
sub
xchg
mov
adc
cli
pop
out
std
or
mov
data16
mov
cdq
xor
sub
xor
out
pop
ret
adc
lock
es
test
jl
cmp
stc
or
adc
cmp
jl
cmp
divps
dec
push
sub
push
push
mov
ds
and
dec
or
loopne
and
adc
clc
xchg
sahf
add
enter
neg
lea
adc
mov
loopne
(bad)
cmp
and
pushf
push
jne
pop
daa
or
(bad)
cwde
cmps
test
(bad)
pop
mov
jg
inc
or
add
push
imul
jmp
cmp
movs
(bad)
cmp
mov
or
mov
es
fbld
push
or
adc
jmp
cmp
jne
or
loopne
scas
jo
cmp
jmp
adc
dec
mov
inc
inc
loop
loope
add
ret
push
mov
push
clc
push
test
adc
add
xchg
dec
jo
mov
je
mov
idiv
in
cmp
test
cmp
fiadd
mov
call
mov
cmp
mov
xchg
sahf
in
sub
mov
sub
pushf
fistp
or
pusha
push
cld
or
je
hlt
inc
in
push
push
pusha
cmps
pop
cld
or
dec
dec
add
loop
aam
mov
adc
or
push
lea
xchg
jo
push
or
jno
fwait
cwde
sub
adc
daa
xchg
ret
jbe
test
sbb
mov
inc
cmp
je
mov
popa
pusha
and
cli
mov
push
or
sub
cs
adc
loop
sub
sbb
lock
cmp
sbb
inc
inc
or
das
sub
mov
(bad)
retf
jo
clc
push
xor
rcr
xchg
add
push
je
test
push
sub
test
push
iret
xor
ins
pop
inc
cli
or
or
outs
mov
jl
rcl
dec
xlat
sub
shr
mov
adc
push
cmp
(bad)
je
xor
push
pop
lock
or
stos
icebp
jge
pop
nop
push
mov
loope
pop
movs
retf
out
test
push
sbb
adc
inc
call
mov
or
or
inc
in
ins
scas
je
inc
dec
jne
push
std
and
cmp
pop
clc
pushw
adc
adc
or
pop
clc
xor
sbb
push
loop
ficom
or
pop
jo
ds
out
push
mov
sub
fimul
pop
and
mov
call
loope
dec
call
sbb
scas
sbb
cld
pop
add
push
xor
hlt
or
lock
cld
addr16
add
xchg
ror
and
push
cmp
mov
xchg
or
leave
add
sbb
xor
push
je
sbb
ja
mov
test
jne
fdiv
inc
xor
jmp
jp
and
outs
loopne
and
push
push
push
inc
or
push
lea
jle
adc
xchg
test
sub
cs
jb
ret
jmp
aad
dec
mov
ja
lock
mov
mov
jno
sbb
adc
push
mov
and
inc
pop
mov
push
mov
imul
or
mov
mov
add
sub
cld
push
cld
rcr
cmp
aam
mov
ins
out
pop
jo
bound
dec
jne
push
xchg
and
pop
dec
std
lods
push
pop
fimul
push
and
and
add
hlt
int
dec
xlat
xchg
test
jmp
push
lock
repz
push
aad
inc
mov
sub
fwait
lock
sub
mov
sbb
mov
inc
add
es
shr
or
sub
ret
or
pop
in
mov
cld
test
je
jne
fsub
xchg
add
push
js
xlat
mov
xor
mov
push
add
mov
clc
btr
sbb
add
cmp
je
loopne
fxch
push
sub
mov
xor
adc
mov
mov
ret
ds
ficom
ror
xlat
mov
ins
(bad)
jp
push
pop
jo
sar
jbe
lea
jnp
add
inc
inc
adc
movs
mov
in
push
sbb
push
sbb
dec
push
mov
bound
cmovae
call
fistp
or
js
adc
inc
popa
and
cmp
cmp
jl
arpl
sahf
xor
or
xchg
inc
movs
mov
jle
xor
gs
jmp
pop
jnp
mov
pushf
xor
hlt
sbb
pop
stos
add
test
fadd
into
mov
gs
add
call
xor
mov
and
xor
sub
inc
pop
ss
mov
loope
push
or
sti
adc
sbb
mov
push
sub
in
cmp
pop
test
les
cmp
dec
sbb
xor
sbb
mov
js
dec
vmread
push
xchg
push
push
and
les
(bad)
push
pop
push
adc
pop
cmp
cmp
adc
out
push
inc
ins
sbb
xor
clc
imul
sub
mov
call
cmp
lea
js
or
stc
test
jle
mov
push
inc
dec
jmp
add
pushf
(bad)
movs
(bad)
fstp
fwait
jmp
xor
mov
sub
inc
data16
call
sub
test
jle
mov
mov
sub
popa
mov
shl
inc
mov
xor
mov
add
adc
push
dec
scas
sub
add
sbb
or
pop
sub
inc
add
(bad)
mov
int3
sub
loopne
or
pop
xor
jno
jo
push
repnz
pop
jae
sub
push
mov
xor
push
push
or
loopne
mov
mov
nop
or
jp
fwait
cmp
in
mov
inc
pop
mov
add
cdq
cmp
(bad)
call
fcmovnu
retf
add
icebp
ins
popf
pusha
add
cmps
sbb
xchg
in
or
loopne
lea
mov
mov
cmp
dec
push
mov
inc
sbb
sub
pop
and
mov
jne
imul
jbe
jne
lds
add
ss
hlt
pop
cmp
fmul
push
jmp
or
adc
int3
or
cmp
dec
inc
add
retf
or
jno
mov
mov
int3
in
or
push
aam
fcom
or
sti
ds
add
xchg
or
movs
leave
add
and
cmp
loope
push
out
xchg
loopne
or
or
or
loopne
adc
dec
pop
mov
push
jp
ins
scas
push
sbb
adc
lods
jecxz
add
aam
aas
mov
loop
sub
sbb
enter
push
add
xor
out
into
jl
push
mov
xor
test
sbb
push
sub
jmp
inc
adc
mov
xchg
sub
cmp
aaa
das
mov
push
mov
mov
dec
add
jo
and
cmp
cmp
loope
add
ror
cmps
arpl
loopne
fisub
adc
sub
sub
or
jmp
push
jecxz
outs
and
mov
div
push
cmp
adc
adc
mov
push
imul
mov
add
fidiv
inc
sbb
je
pop
mov
bound
(bad)
jl
adc
pop
(bad)
loope
nop
mov
cmp
jne
inc
sbb
pop
dec
in
jp
push
mov
cmp
push
jg
mov
or
jecxz
push
clc
jmp
mov
pop
mov
or
cmp
mov
pop
cmp
or
sbb
jne
mov
and
push
or
pusha
cwde
jb
adc
sar
sub
nop
push
xchg
sub
mov
push
adc
jnp
pop
into
mov
push
rol
jnp
jl
jmp
dec
ret
push
jecxz
repnz
push
out
int3
sbb
inc
mov
sub
xor
not
pop
lock
push
push
dec
in
adc
mov
sbb
inc
push
add
xchg
jmp
push
ret
daa
in
adc
sbb
es
or
aad
add
fwait
sub
and
jle
call
inc
popf
sbb
ror
outs
xchg
dec
sbb
and
pop
push
sub
sub
pop
jb
imul
loop
sub
dec
jp
imul
xchg
ds
cmps
imul
adc
fmul
add
(bad)
fild
adc
inc
and
pusha
add
fwait
leave
test
(bad)
fdiv
add
cs
out
dec
mov
jb
(bad)
loopne
adc
mov
cdq
mov
(bad)
sbb
jl
bound
fadd
cmp
xor
pop
int3
mov
loopne
pushf
cli
lds
(bad)
adc
sbb
jns
(bad)
jge
ret
inc
test
lock
aam
cmp
adc
pop
das
popf
cmp
dec
ret
xchg
hlt
mov
cld
mov
loopne
icebp
call
in
bound
bound
jnp
xor
mov
dec
jg
or
inc
pop
or
jnp
in
dec
jne
scas
lock
mov
lahf
outs
jo
mov
cmp
(bad)
mov
xchg
and
jle
fld
mov
or
or
(bad)
jno
add
xor
xor
inc
and
mov
lock
cld
cmp
stos
dec
in
aad
adc
out
and
sbb
pop
icebp
or
or
test
adc
shl
add
mov
mov
sub
pop
loope
push
adc
int3
inc
pop
or
push
push
mov
idiv
test
pushf
add
fmul
cmps
sbb
call
mov
addr16
iretw
int3
jl
adc
cmp
pop
push
push
adc
cmp
out
sbb
inc
fild
mov
xor
mov
or
pop
inc
inc
pusha
ror
aam
and
inc
movs
sbb
cmp
push
(bad)
jo
push
jge
mov
inc
(bad)
fcom
xchg
cli
inc
inc
dec
sbb
arpl
jg
rcr
add
and
pop
in
call
das
and
push
adc
or
arpl
adc
or
and
ins
inc
or
sti
or
pop
cmc
pusha
pop
sub
jb
outs
push
add
jbe
je
add
jmp
cmp
je
cld
test
jbe
pop
add
add
jae
sbb
int3
pushf
shl
adc
jae
mov
xor
test
jbe
cmp
aaa
test
add
mov
es
mov
sub
mov
add
sbb
loopne
sbb
in
sub
dec
dec
leave
int3
sub
adc
add
add
adc
sub
cmp
mov
or
cmp
add
aas
or
dec
mov
or
mov
shl
adc
mov
rcr
mul
and
ss
loopne
clc
mov
xchg
loop
mov
sbb
push
imul
mov
das
loopne
sti
fdiv
shr
mov
cvtpi2ps
cmp
(bad)
mul
add
add
pop
shl
add
movaps
in
push
cmp
in
or
out
xor
or
sbb
sbb
sbb
sbb
out
push
mov
push
ins
aam
dec
je
ja
cmp
adc
sub
popa
ret
xchg
pusha
and
jle
rcl
sbb
jno
sub
cwde
inc
mov
push
sahf
jl
sub
xchg
test
inc
mov
xchg
or
pop
push
mov
mov
xchg
and
fs
(bad)
sbb
fist
push
stos
inc
imul
or
out
xor
imul
push
mov
cmp
bound
push
pop
push
dec
(bad)
mov
test
or
or
adc
mov
xlat
and
adc
xchg
jge
xchg
rol
xchg
mov
out
ficom
or
or
xchg
ds
jne
enter
ret
and
pop
and
(bad)
js
or
daa
rol
aam
je
jl
fneni(8087
ds
jne
xor
mov
scas
xchg
cmp
pop
cmp
mov
cmp
adc
aas
mov
aas
or
in
shr
xchg
lds
xor
xor
dec
repnz
mov
pop
adc
xor
loopne
ret
int3
hlt
add
pop
into
xor
xor
or
fild
sti
mov
add
jae
retf
dec
call
pop
dec
mov
push
sbb
cmp
outs
sbb
retf
clc
jmp
test
aas
pop
jmp
cmps
jge
ds
inc
imul
pop
(bad)
fisubr
call
mov
jmp
loopne
inc
or
fucomp
inc
add
sub
or
mov
popa
add
adc
cmp
sbb
cs
push
push
mov
lock
mov
push
stos
mov
test
pop
je
add
dec
fcomp
jl
arpl
clc
imul
cmp
xchg
mov
xchg
dec
cwde
add
and
test
jbe
sbb
add
or
adc
mov
pop
inc
adc
retf
retf
xor
fnstsw
or
xor
add
sbb
push
ror
pop
push
lea
gs
pop
push
xchg
cmp
daa
pushf
push
sbb
cmps
test
xor
adc
sub
mov
and
pushf
adc
pop
dec
lock
jmp
jmp
iret
dec
inc
or
pushf
xor
dec
adc
or
loop
call
pop
dec
jl
cmp
sbb
jmp
push
pop
cmp
push
sbb
jbe
inc
inc
push
add
push
cmovo
adc
sldt
hlt
test
cmp
ins
shl
dec
or
pop
lock
pop
xor
mov
fcomp
rcl
push
les
test
xchg
cdq
push
push
mov
mov
adc
push
popf
rcr
loope
xor
mov
shl
jmp
mov
inc
jae
aas
jle
lods
sbb
and
jne
in
mov
add
pop
adc
xchg
cmp
jne
adc
push
jne
lods
test
jne
pop
dec
xchg
in
adc
pop
mov
and
xchg
loop
adc
(bad)
mov
sbb
sub
test
scas
inc
js
xchg
pop
adc
jmp
or
inc
out
jnp
ret
loope
fimul
push
mov
push
idiv
or
push
je
cmp
test
in
add
sbb
out
add
shl
fadd
ja
mov
or
popa
loopne
mov
jg
je
dec
je
push
cmp
inc
xchg
cmp
pop
sub
or
sbb
mov
mov
je
or
bound
cmp
lock
(bad)
test
jne
add
fs
ins
or
dec
cld
jbe
cmp
call
mov
shl
in
js
scas
sub
sbb
loop
cld
mov
cmp
adc
in
sbb
pushf
xor
clc
or
adc
arpl
cmps
lea
mov
movs
dec
scas
fwait
mov
or
out
jbe
jo
inc
repnz
dec
pop
or
jb
pop
and
and
jge
and
cmp
lock
add
push
shl
mov
pop
popa
cmp
idiv
lahf
test
jmp
xor
mov
inc
mov
cwde
mov
xchg
cmp
movs
xchg
and
add
adc
rol
sar
js
dec
ret
add
mov
call
mov
(bad)
ins
cmp
dec
mov
mov
add
imul
fld
or
dec
sub
adc
jle
add
setb
push
add
mov
adc
cmp
jne
xor
sub
je
ret
adc
sbb
fcomp
inc
pop
push
dec
push
mov
je
push
add
mov
jne
xchg
retf
enter
(bad)
xchg
sbb
test
pop
pop
or
sub
xchg
mov
push
shl
push
lea
lea
ds
sbb
enter
cmp
adc
stos
jle
and
add
dec
add
jecxz
fs
jns
mov
push
imul
inc
mov
mov
popf
inc
or
frndint
ja
adc
aas
mov
inc
adc
cmp
adc
(bad)
jae
adc
inc
xchg
and
iret
inc
test
add
push
je
fstp
ret
mov
xchg
pop
sar
mov
(bad)
lock
cmp
adc
add
jp
enter
sbb
push
call
xor
sar
jns
adc
xor
push
(bad)
mov
bound
lds
mov
push
adc
clc
add
fistp
femms
fcomp
je
lahf
push
or
add
dec
mov
inc
inc
jo
add
sub
mov
xor
or
add
test
in
sbb
nop
dec
adc
xor
or
adc
mov
sbb
shl
in
std
ja
push
mov
dec
push
mov
adc
push
dec
data16
ret
inc
or
mov
pusha
ret
xchg
mov
jge
iret
mov
nop
mov
fisub
dec
add
fldcw
fs
cdq
add
mov
fcmovnbe
neg
adc
sub
sbb
add
sbb
call
call
rol
gs
and
or
inc
cmp
and
and
mov
and
sbb
pop
cmp
push
(bad)
and
inc
lock
mov
fldenv
test
fsubr
mov
sti
mov
cmp
je
mov
inc
jb
loopne
mov
das
sbb
lds
repz
in
pushf
and
nop
sub
sbb
or
ror
push
lahf
sbb
leave
or
inc
pusha
es
rcr
jb
add
xlat
stc
or
mov
lds
les
pop
add
mov
popf
sbb
adc
cmp
jne
or
(bad)
adc
hlt
jmp
inc
lods
pop
(bad)
xor
push
push
dec
mov
mov
retf
pop
or
std
add
aam
mov
fwait
adc
mov
aad
inc
dec
or
loop
add
add
fisttp
sbb
sub
pop
add
xchg
(bad)
and
xor
sub
or
inc
out
dec
pop
aad
add
or
xor
xchg
lea
inc
and
sbb
and
push
adc
cli
mov
js
and
inc
mov
in
xor
push
push
cmps
mov
int
or
mov
lock
mov
jg
retf
pop
pop
ins
hlt
sbb
leave
mov
imul
add
or
retf
in
dec
rcl
push
hlt
mov
loopne
outs
out
and
(bad)
movs
(bad)
pop
add
es
and
and
add
jno
mov
or
sar
sub
adc
jg
rcl
stos
mov
add
cmp
pop
pusha
add
add
adc
pop
test
call
add
jbe
push
push
and
ror
add
push
or
fisttp
xor
sub
cwde
cmp
out
mov
or
adc
mov
mov
or
jne
adc
or
add
and
mov
sbb
adc
movs
ret
pop
cs
add
inc
dec
sub
pop
or
retf
fcom
test
dec
sbb
pop
inc
rcl
lock
and
ret
mov
or
inc
inc
mov
dec
cmc
loopne
add
add
fadd
test
fist
mov
add
cmp
js
loopne
sub
jle
retf
mov
sub
lds
ret
mov
or
aaa
ds
ret
mov
and
out
je
clc
test
or
mov
outs
jecxz
test
(bad)
test
adc
push
inc
hlt
cmp
es
cmp
push
cmp
je
push
popf
add
sbb
pop
fwait
sar
mov
xchg
pop
jb
push
pop
add
mov
pop
jmp
sub
pop
idiv
je
test
jne
fst
and
xlat
mov
sub
xchg
xchg
cmp
mov
arpl
dec
test
dec
loopne
test
mov
adc
add
mov
fisttp
(bad)
adc
inc
lds
or
mov
inc
and
test
cmp
retf
fld
pop
je
push
push
mov
aaa
cli
add
sbb
sbb
pop
adc
mov
add
push
in
cmp
je
mov
dec
or
cmp
imul
inc
arpl
rcr
fcom
jo
clc
mov
das
push
js
aas
add
test
je
push
jne
add
fwait
cmc
add
pushf
adc
push
push
mov
push
shl
movs
loope
lock
push
add
jmp
mov
push
shr
into
add
ins
sbb
jno
es
loopne
adc
xchg
fwait
sahf
xchg
cmp
mov
cwde
xor
lock
pop
cmc
in
mov
les
adc
pop
call
sbb
sbb
aas
inc
in
cmp
mov
cdq
push
(bad)
mov
sbb
sbb
ds
jo
fadd
clc
pop
inc
adc
cmp
pushf
call
or
imul
stos
int
mov
push
add
lds
sbb
xor
push
xor
dec
add
ss
mov
nop
pop
push
push
pop
push
mov
xor
nop
mov
ret
nop
test
es
call
je
nop
loopne
or
(bad)
daa
mov
push
mov
pop
or
and
pop
sbb
pop
test
adc
nop
retf
add
shl
das
mov
adc
movs
adc
dec
mov
jnp
sub
add
xchg
push
shr
inc
add
jo
addr16
cdq
pop
add
fsubr
iret
push
js
or
inc
push
jo
inc
or
out
add
cmp
les
jo
mov
mov
sbb
(bad)
jno
adc
cmp
neg
add
lods
test
inc
cmps
inc
ret
cmp
inc
je
or
aaa
das
mov
aaa
mov
xor
inc
cli
or
cmp
ins
jbe
push
or
(bad)
mov
shr
mov
nop
imul
sbb
inc
lock
jmp
imul
sbb
and
out
addr16
sub
setnp
cmp
push
seto
setl
je
push
maskmovq
idiv
push
jl
inc
mov
scas
mov
and
xchg
cwde
cmp
js
push
je
sbb
xor
add
mov
ins
ins
ins
adc
scas
push
jb
jb
ss
add
nop
mov
fst
xor
movq
cld
or
fsub
aas
sub
lods
jge
lds
jmp
adc
loop
sub
push
mov
push
sub
dec
leave
jns
xor
and
jmp
stos
test
dec
add
daa
push
retf
cmp
outs
cli
xor
cmp
jg
repnz
cmp
je
mov
dec
xor
inc
and
cwde
loope
push
je
mov
scas
lock
jne
adc
rcr
dec
test
je
and
rol
add
or
je
push
or
mov
mov
rcr
xor
adc
mov
mov
pop
mov
and
ror
adc
dec
inc
cs
stos
push
lock
scas
hlt
(bad)
(bad)
call
or
sub
fs
pop
rol
mov
push
push
adc
and
mov
adc
push
sub
shl
sbb
loope
jo
add
(bad)
movs
inc
add
push
push
inc
retf
mov
push
test
les
dec
dec
push
pop
or
jo
loopne
fadd
inc
inc
aad
pusha
and
js
sbb
mov
push
lock
in
and
xor
rcr
mov
or
mov
push
and
psubsb
dec
jmp
sub
mov
sbb
pop
dec
jb
or
or
jne
adc
jne
pop
ret
and
sahf
jbe
cmp
or
xchg
xor
cmp
pop
aas
push
inc
jne
sahf
inc
push
pop
dec
xor
adc
add
ret
aaa
mov
jl
or
ins
jmp
imul
cmp
std
add
pop
lock
in
daa
movzx
push
push
push
adc
std
push
retf
cmp
add
or
std
push
ret
inc
mov
push
push
jl
leave
hlt
xchg
jmp
cmp
mov
aam
adc
jne
jmp
cmp
sub
push
or
aaa
mov
add
inc
push
mov
lock
push
lahf
test
fcomip
(bad)
rcl
push
jnp
adc
or
add
push
or
dec
mov
dec
jl
xchg
dec
xchg
imul
add
mov
das
and
and
adc
je
psubusb
push
test
inc
icebp
ror
and
pop
sub
sti
adc
test
cmps
ror
inc
pop
mov
and
and
sbb
retf
add
fsub
enter
shl
pop
push
push
lods
scas
pop
xchg
dec
pop
mov
enter
cmp
cwde
dec
(bad)
aam
ret
xchg
pop
out
jecxz
fst
test
shl
inc
sub
add
test
mov
jae
or
add
ficomp
iret
movs
mov
dec
mov
dec
pop
push
call
addr16
cmp
movs
(bad)
fcomp
loopne
jno
push
aas
and
mov
sub
jge
cmp
into
je
mov
xchg
mov
and
sbb
xor
aaa
cmp
sub
add
aaa
push
push
scas
pop
and
loop
and
ret
(bad)
sub
push
and
push
mov
add
xchg
cmp
stos
adc
push
daa
adc
cmp
xchg
inc
test
xchg
push
sti
repnz
ret
push
push
and
add
xor
call
and
je
scas
leave
mov
mov
push
mov
imul
dec
push
aam
call
or
push
adc
adc
add
cmps
out
cwde
les
adc
push
aaa
mov
mov
xlat
sbb
jge
ins
retf
xlat
fiadd
xchg
sbb
cmp
mov
mov
adc
(bad)
dec
mov
(bad)
fmul
fsubrp
fstp
fwait
es
icebp
or
adc
fwait
lea
(bad)
pop
cld
lds
sahf
pop
test
push
(bad)
adc
stos
mov
add
mov
lea
imul
jmp
clc
shld
adc
sub
mov
fcomp
push
mov
or
call
push
and
dec
seto
or
fsub
cmc
jecxz
or
adc
jne
mov
mov
mov
int3
cli
adc
fld
mov
(bad)
push
inc
cmp
ret
pop
inc
ror
call
aam
rol
cmp
fs
or
mov
or
mov
adc
out
jg
nop
pop
jmp
into
bound
scas
lea
into
icebp
mov
pop
xor
gs
push
idiv
push
sub
pop
repz
jge
pop
push
or
add
(bad)
pop
std
test
setl
mov
sub
mov
mov
pop
je
call
sub
fdivr
lea
stos
in
mov
stos
mov
adc
fisub
mov
(bad)
adc
repz
lahf
inc
and
clc
daa
lea
cwde
xchg
cmp
or
bound
mov
push
xchg
pop
bound
sahf
test
mov
lock
pop
fwait
pop
or
adc
cmp
sar
paddb
push
iret
(bad)
mov
mov
fs
push
jns
xchg
jge
and
out
push
loope
(bad)
fs
(bad)
pop
jmp
sbb
scas
and
push
pushf
push
add
not
and
dec
mov
(bad)
mov
or
sub
jmp
mov
pop
lock
mov
lds
mov
ret
cmp
(bad)
mov
imul
dec
dec
inc
sbb
sub
cmp
(bad)
aaa
retf
fsub
in
inc
mov
mov
(bad)
jg
xor
movs
rol
aaa
sbb
pusha
sub
fnsave
enter
jns
jge
mov
das
mov
xchg
adc
or
add
adc
les
pop
jecxz
cmp
pop
loopne
lahf
cld
ss
(bad)
mov
jge
mov
jle
add
add
dec
mov
mov
push
inc
xor
mov
xchg
cmp
adc
adc
test
fcomp
or
ret
inc
jns
fisub
pop
jmp
xor
in
add
cdq
xchg
mov
xor
retf
mov
xchg
les
push
imul
push
or
rcl
jne
xor
adc
jnp
sub
add
push
adc
add
xor
stos
movs
fsubr
add
push
add
dec
jmp
xchg
push
pop
(bad)
mov
jae
repnz
push
push
mov
adc
ds
push
mov
les
adc
arpl
jbe
inc
outs
in
push
les
push
mov
mov
mov
ror
inc
dec
adc
adc
mov
push
loope
fcomp
test
cmps
cmps
leave
adc
inc
pusha
push
retf
xor
scas
outs
cmp
xor
push
mov
and
push
out
mov
ins
les
sbb
mov
push
enter
dec
cmc
data16
push
lea
add
stos
scas
or
add
xor
add
mov
jne
jo
int
xchg
in
cmp
pop
cmp
push
sub
or
call
imul
xor
out
ror
movs
test
gs
stos
or
push
lea
add
sti
out
mov
add
clc
mov
cmp
pop
mov
stos
lahf
add
push
icebp
inc
jnp
xchg
not
inc
(bad)
je
push
bound
mov
add
rol
fcomp
add
fucomp
adc
and
and
ja
dec
movs
pop
push
add
ret
push
xchg
mov
call
inc
inc
push
lock
dec
or
aad
dec
outs
mov
add
fiadd
fdivr
or
push
push
push
inc
jg
sub
mov
or
add
or
sbb
jo
clc
dec
push
jo
mov
and
popa
pusha
lahf
push
mov
or
dec
sar
jb
adc
xor
sub
popa
not
xchg
and
cdq
int3
enter
pushf
xchg
sbb
mov
lods
pusha
add
sahf
mov
mov
scas
push
jnp
mov
mov
mov
push
call
jae
enter
push
jbe
sbb
aaa
daa
xchg
add
inc
adc
jbe
mov
and
call
fmul
iret
adc
jb
jmp
cs
int
cmp
xor
xchg
xor
sbb
sbb
cld
or
sti
mov
sbb
jle
mov
cmp
xchg
pop
jmp
sub
mov
xor
jge
jecxz
push
or
adc
add
jle
or
dec
sbb
xor
jge
and
rcr
sbb
fistp
cmp
xchg
xchg
dec
and
clc
sahf
jbe
or
sub
dec
adc
mov
xchg
mov
jne
cmps
push
cli
mov
mov
call
add
jb
push
sbb
add
inc
fcom
dec
jbe
or
ins
pushf
imul
pop
mov
inc
lock
xor
popf
push
and
sti
inc
cmp
add
or
inc
and
push
and
inc
fwait
sbb
jecxz
ins
pop
push
mov
and
inc
cs
or
sub
add
or
and
xchg
fld
int3
data16
loopne
jo
add
aad
jecxz
adc
adc
shl
and
rol
push
sbb
and
retf
sbb
cmp
push
sub
add
test
add
jb
cmp
jnp
ja
scas
(bad)
je
cmp
hlt
jns
cs
loop
push
das
mov
add
cmp
dec
cs
xor
or
mov
sub
xchg
jne
cmp
or
add
pop
push
push
popf
out
adc
push
add
push
dec
shr
pop
xor
cmp
and
sub
inc
adc
int3
push
inc
clc
push
ins
mov
rol
inc
pushf
adc
push
in
nop
sub
arpl
ja
js
xlat
and
sbb
popa
add
test
add
push
mov
cwde
mov
push
jnp
adc
loopne
inc
rol
adc
jle
xchg
sbb
ins
out
sub
je
or
sbb
inc
sbb
ja
clc
xchg
shl
dec
push
mov
and
lods
dec
adc
cmp
or
mov
or
cmp
div
fs
jmp
cmp
jb
sbb
addr16
scas
movs
sbb
cmp
jne
lea
fsubr
pop
or
or
xchg
std
js
sbb
mov
mov
neg
adc
xchg
mov
outs
and
pop
push
push
or
dec
call
sbb
in
test
mov
and
nop
add
loopne
or
pop
dec
sbb
add
jmp
sub
push
pop
sub
pop
fmul
stos
mov
dec
hlt
mov
scas
push
and
ins
sub
jmp
popa
add
add
cmp
fld
inc
sub
sbb
aad
mov
sbb
mov
or
jmp
adc
xor
pop
mov
inc
or
push
jo
movs
jo
sub
jmp
add
in
pusha
adc
mov
cmp
xlat
mov
jo
xchg
sar
clc
das
add
sbb
push
dec
sub
jb
call
enter
adc
jae
fs
icebp
lahf
pop
fistp
and
cmp
adc
pushf
jne
mov
mov
jae
add
popf
mov
xor
push
cdq
inc
push
pop
jecxz
mov
pop
fcom
test
mov
dec
shr
fsubrp
cdq
mov
mov
lods
pop
mov
jne
in
or
in
cdq
inc
pop
dec
pop
call
pop
cwde
mov
or
out
repnz
out
adc
enter
lods
outs
ret
adc
xor
jbe
into
xor
stos
pop
mov
push
push
cmp
mov
pop
mov
mov
mov
adc
cmp
outs
push
(bad)
or
sbb
clc
cmp
leave
jmp
mov
mov
bound
xor
and
dec
outs
test
pop
jb
add
movs
inc
add
es
rcl
add
adc
pop
imul
mov
push
dec
add
inc
add
outs
jle
jl
fiadd
jb
ins
aas
or
inc
add
jo
imul
add
pushw
add
out
dec
xchg
push
xchg
push
inc
outs
push
push
or
pop
jnp
push
fnstenv
addr16
out
xchg
or
mov
je
repz
push
das
aad
pop
sbb
mov
push
cmp
xor
fbld
or
cs
call
dec
repnz
jnp
pop
jl
mov
lods
sbb
sbb
push
mov
aaa
adc
cmp
xor
cmp
or
sti
add
xlat
pop
dec
rcr
and
loope
sub
xor
ror
out
(bad)
jno
mov
cld
jmp
test
clc
and
cmp
adc
or
fimul
jo
test
mov
add
or
adc
ins
add
outs
sbb
mov
nop
cwde
lods
(bad)
cmc
dec
aam
movsx
or
arpl
pop
pop
adc
popa
dec
addr16
movs
inc
add
lock
sub
inc
pusha
add
(bad)
xor
add
dec
fs
add
stos
shl
(bad)
dec
cmp
xor
and
xchg
call
cmp
inc
push
ins
xlat
ror
(bad)
jmp
sbb
xlat
(bad)
or
loop
sbb
pop
neg
xor
mov
inc
and
inc
in
scas
addr16
shl
aam
jo
fimul
xchg
inc
arpl
jle
cmp
outs
dec
add
dec
or
dec
stos
dec
in
xor
je
dec
call
(bad)
mov
or
lods
mov
jo
inc
pusha
or
test
adc
call
xchg
adc
popf
dec
int
not
add
push
in
stos
scas
ins
push
scas
and
fidivr
scas
push
ror
dec
mov
xchg
adc
mov
add
icebp
jbe
out
and
push
test
cmp
pop
enter
push
pop
cs
pop
and
daa
stos
push
inc
mov
push
or
sbb
dec
push
aas
loop
dec
push
dec
push
aas
in
loopne
sub
push
fmul
mov
popf
xchg
add
repnz
out
and
push
in
mov
dec
inc
idiv
js
js
inc
and
(bad)
fist
add
dec
adc
add
mov
jge
shl
aam
nop
ss
and
dec
fldenv
retf
cmp
test
rol
addr16
dec
aad
inc
cmp
aas
add
movs
movs
idiv
dec
lock
xchg
clc
jne
adc
mov
xchg
sub
adc
stos
cmp
popa
mov
(bad)
call
lock
add
jmp
fisttp
dec
sub
mov
(bad)
cmps
outs
lods
add
fistp
sbb
adc
adc
cmp
test
jbe
ins
imul
cmp
adc
mov
adc
imul
es
adc
or
je
xor
or
pop
push
test
cmps
adc
call
pop
movs
sub
jne
test
jne
or
sar
or
dec
andps
mov
inc
ret
push
cld
adc
inc
xor
pop
pushf
add
bound
outs
cmps
int
lods
sub
inc
jle
cld
cmp
je
xchg
xor
push
ins
jecxz
cmp
inc
pop
pushf
or
mov
jmp
cmp
or
test
adc
or
adc
cmp
fisub
push
inc
jl
sbb
add
cmp
add
jno
xchg
nop
sub
xor
lock
push
hlt
jge
sub
mov
loop
dec
push
adc
jecxz
sub
adc
or
and
mov
push
shl
xchg
loopne
mov
mov
shr
out
add
push
pusha
mov
ins
adc
ins
cld
and
or
cmps
pop
jmp
retf
enter
dec
mov
repz
lea
inc
and
cmp
pop
ret
and
jo
or
repnz
call
js
mov
pop
sbb
cmp
mov
mov
cld
rcr
inc
movs
inc
test
cmp
movs
std
(bad)
ins
cmp
ins
stos
pop
mov
test
imul
cs
fdivr
mov
inc
sbb
or
loop
test
jmp
imul
push
cmp
add
dec
lock
mov
pop
cmp
popa
add
cmp
inc
jle
test
call
dec
mov
push
stc
xchg
add
fstp
aad
or
sub
stos
jl
(bad)
adc
in
leave
inc
inc
inc
push
add
inc
lds
pop
cmp
sbb
(bad)
js
xchg
retf
or
mov
push
pusha
mov
inc
or
pop
jnp
mov
inc
lock
xchg
jo
xor
(bad)
cmp
adc
cmp
je
sbb
mov
cmp
jo
add
shl
lahf
push
adc
mov
jbe
sub
sbb
add
add
das
popa
mov
cld
push
mov
mov
jg
xchg
call
inc
out
movs
fild
mov
lea
adc
ja
sbb
or
sahf
pop
mov
jmp
dec
xor
adc
mov
push
pop
sub
push
lea
sub
sbb
(bad)
fs
xor
sub
mov
sub
push
push
add
push
and
add
sub
push
mov
adc
fs
mov
or
out
xor
inc
dec
or
pusha
out
bound
sbb
fcom
dec
mov
daa
inc
inc
xor
pop
add
sub
push
(bad)
mov
sbb
mov
enter
test
xor
ror
cmps
jbe
daa
popf
jp
inc
dec
nop
enter
xor
mov
cmc
mov
fwait
dec
inc
push
ins
sub
int
push
add
xchg
pop
xchg
test
add
test
adc
std
jge
mov
cmp
cmp
xchg
mov
pusha
outs
fs
ror
imul
mov
push
mov
or
adc
mov
pushf
push
mov
mov
scas
or
mov
cmp
clc
jne
add
aad
inc
mov
push
cld
mov
mov
add
mov
jae
or
inc
add
xchg
pop
and
sub
push
leave
inc
jb
dec
mov
test
or
push
and
xchg
push
adc
std
xor
call
lock
dec
rol
in
adc
inc
es
push
push
sbb
loopne
sbb
cs
call
movntq
pop
adc
mov
push
inc
(bad)
cmp
sub
adc
mov
pusha
mov
or
stos
adc
fs
cmp
push
ss
icebp
or
retf
jle
mov
or
out
push
sub
add
sbb
fstsw
sahf
jae
mov
inc
es
jne
mov
jae
cmps
mov
and
jo
js
fild
jg
mov
es
cmp
jg
fild
clc
add
add
jns
test
push
add
ins
cmp
push
add
gs
sub
loop
lock
fstp
jns
xor
sbb
ins
and
icebp
jns
sahf
xor
and
xor
fwait
inc
xchg
cmp
mov
or
in
test
or
bnd
in
aam
int3
adc
and
xor
sbb
loop
cmp
pop
loope
sub
das
xchg
cmp
mov
test
inc
pop
push
inc
pop
push
mov
push
jo
cmps
adc
pop
inc
xchg
lods
mov
inc
mov
(bad)
lock
xchg
and
clc
add
and
jmp
mov
mov
retf
xor
les
add
inc
or
(bad)
mov
sbb
(bad)
jp
and
adc
rcl
sub
call
jne
push
cmp
and
jl
xchg
mov
fs
adc
bswap
mov
test
mov
sbb
(bad)
mov
fisttp
inc
adc
mov
loop
les
push
sbb
call
ins
(bad)
into
xor
mov
je
adc
xchg
push
push
or
aaa
adc
aam
movs
adc
sbb
dec
sub
data16
jno
inc
dec
data16
inc
push
ret
mov
mov
jbe
lea
adc
lock
xlat
std
jl
cmp
outs
add
mov
lock
push
cmp
or
or
pushf
add
int3
mov
dec
dec
dec
popa
ret
fidiv
sbb
adc
push
arpl
xchg
adc
sub
sub
fnstsw
pop
je
push
fld
pop
or
mov
or
push
ds
xor
or
mov
mov
pop
call
pop
or
fs
or
jmp
jbe
or
out
adc
jle
sub
mov
cmp
lock
mov
into
loopne
pop
add
mov
push
es
js
jle
mov
mov
adc
cmp
sbb
xchg
jmp
xor
add
in
int3
dec
ss
xor
int3
pusha
es
aad
push
sbb
and
call
out
pushf
retfw
mov
sbb
cmp
jg
lea
lods
sar
addr16
rcr
push
je
xchg
sub
push
cmp
test
loopne
pop
push
push
retf
sar
or
cli
mov
loopne
pop
xor
jle
loope
setb
inc
bound
mov
adc
cmp
mov
dec
pusha
dec
hlt
jbe
adc
jmp
and
sub
ss
add
gs
jne
or
cwde
mov
sub
cmp
pop
adc
pop
adc
mov
jae
das
rol
pop
or
out
mov
push
add
packsswb
or
sahf
sbb
mov
cmp
mov
fldcw
out
add
adc
adc
loopne
inc
and
adc
fld
cmp
inc
xchg
sub
les
xchg
pop
mov
fimul
push
pusha
outs
lock
lahf
dec
and
mov
pushf
adc
or
lsl
push
mov
mov
dec
and
sbb
pop
shl
mov
and
push
jl
push
pop
cmp
sbb
or
add
dec
enter
jl
fcom
add
mov
lea
jmp
push
or
and
inc
sbb
mov
jbe
sbb
push
add
in
mov
adc
mov
into
jbe
sti
fadd
or
call
adc
pop
int3
sub
pop
sbb
inc
sbb
push
or
mov
jno
xor
push
je
sub
push
movaps
dec
fs
xchg
xchg
adc
stc
nop
mov
stc
seta
outs
leave
add
(bad)
inc
xor
mov
pop
cmp
and
jl
mov
adc
les
out
or
test
sahf
xor
jg
lea
ffreep
pop
enter
(bad)
mov
xor
mov
cmp
(bad)
pusha
imul
das
xchg
pop
mov
cmp
xor
cmp
jecxz
lds
adc
xor
mov
hlt
into
inc
imul
add
push
jne
cmp
js
xor
pop
cmp
loopne
mov
aaa
leave
jo
aas
push
ss
arpl
nop
into
mov
push
or
sbb
div
push
mov
(bad)
sti
ldmxcsr
in
push
repnz
pop
js
cld
and
jecxz
lock
jle
ds
jo
jl
lods
dec
xor
adc
sbb
je
push
or
leave
jbe
add
inc
hlt
sar
aam
xor
and
add
rcr
outs
push
adc
push
sahf
dec
test
jl
xchg
nop
div
inc
xor
dec
jbe
loopne
mov
test
addr16
and
jne
outs
sbb
pusha
pusha
dec
in
xor
fs
cmp
out
fist
inc
jmp
and
repnz
scas
fild
repnz
fsubr
in
or
and
mov
clc
das
call
mov
inc
retf
pop
fdivrp
mov
adc
mov
sbb
add
paddd
cmp
or
aas
mov
add
xchg
(bad)
sub
push
sub
movs
mov
sbb
lea
cmps
or
xchg
outs
jge
adc
scas
stos
pop
sbb
rol
add
ja
cmp
cs
jmp
or
sbb
adc
sbb
in
ret
(bad)
clc
mov
pop
sbb
fsubr
ror
je
or
out
outs
jb
and
mov
or
(bad)
into
jbe
in
jmp
sub
jmp
pop
jne
xchg
xor
pushf
cdq
adc
ja
lods
add
sar
jns
adc
push
or
arpl
inc
xchg
mov
aad
imul
arpl
out
jne
mov
mov
scas
or
or
hlt
sbb
inc
nop
repz
xchg
adc
inc
xchg
mov
cmc
or
cwde
xor
xchg
push
push
dec
sbb
mov
mov
jb
inc
and
xlat
loope
sub
call
ret
add
sub
jb
sub
(bad)
ins
push
dec
pop
or
inc
add
pop
in
sub
push
imul
push
popa
hlt
iret
sub
fist
clc
push
ja
jmp
push
and
push
out
idiv
cmp
add
imul
jmp
sub
out
inc
mul
jmp
or
xchg
fsubr
xor
ret
or
call
fcom
dec
xor
jae
adc
sbb
xlat
cmp
inc
shl
sub
push
sti
add
test
add
mov
aad
test
in
push
pop
and
mov
push
mov
lock
lods
loopne
sub
jge
add
jmp
sar
sbb
popw
jmp
xor
or
xor
leave
loope
popa
inc
lock
adc
jo
cmp
lgdtd
mov
adc
cmp
outs
inc
outs
outs
je
outs
ins
cmp
add
xchg
out
jbe
pushf
adc
or
arpl
sbb
sbb
and
xchg
jb
cmp
call
mov
pusha
clc
mov
mov
adc
je
and
jmp
hlt
xor
add
xor
es
sbb
push
lds
or
push
mov
fisub
cmp
ja
push
sti
cmp
mov
sbb
jnp
add
lods
push
add
xor
add
pop
call
pop
xor
pushf
rol
mov
add
xor
rol
neg
push
lock
setge
inc
pop
cs
bound
adc
outs
cmc
fimul
ins
out
pop
out
jmp
mul
in
add
sub
inc
jmp
xchg
pop
push
jg
mov
(bad)
shr
xchg
push
lahf
shl
xchg
shl
xor
add
shl
aaa
xor
fisttp
popa
mov
call
xor
cmp
inc
mov
add
mov
lock
mov
and
add
stos
pop
cmp
jne
adc
add
fbstp
icebp
in
repnz
cld
mov
mov
(bad)
lock
jno
gs
and
cmp
(bad)
jbe
ins
jne
jg
push
mov
inc
imul
cmp
je
mov
or
pop
inc
adc
pop
mov
cmp
scas
cmp
mov
imul
add
cmp
jge
mov
js
cmps
sbb
or
pop
in
pop
jl
cmp
add
cmp
push
and
lock
push
cld
xor
inc
cmps
inc
push
sub
xor
pop
in
mov
int
jno
das
cmp
ror
movntss
pop
cmps
jne
push
mov
pop
or
adc
loopne
jge
(bad)
cld
mov
pop
sbb
in
push
test
cmp
jl
sbb
inc
push
mov
sbb
sti
xchg
jne
push
push
push
inc
popa
fs
fisubr
xchg
ss
movs
daa
cli
mov
dec
dec
push
clc
jle
jge
push
mov
push
inc
inc
call
aam
out
aam
lods
stc
lock
dec
pop
sbb
in
loope
sub
push
cmp
jmp
sub
and
in
push
repnz
adc
(bad)
rcl
sub
(bad)
jmp
out
cmp
jge
fstp
cwde
ror
adc
and
xor
fldlg2
xchg
xlat
xor
cmp
cmps
test
nop
jno
loop
or
stc
xlat
or
add
adc
xor
mov
mov
out
pop
or
ret
je
mov
sub
sbb
mov
mov
nop
sbb
popf
mov
inc
and
outs
push
popa
add
cmp
dec
mov
mov
mov
das
leave
ins
mov
test
mov
imul
sahf
jge
add
call
adc
jl
push
and
jmp
mov
jp
pop
pop
add
add
hlt
mov
in
add
aam
or
imul
add
jmp
push
fnstcw
or
inc
sub
ret
ficomp
sub
pop
dec
adc
push
jnp
mov
sbb
and
mov
ror
mov
sbb
push
out
je
cmp
out
jmp
aad
loopne
cvttps2pi
fs
shl
add
je
shl
xchg
mov
mov
jb
(bad)
jne
sbb
mov
mov
dec
int
fild
add
sbb
mov
ja
or
jns
in
push
mov
in
pop
nop
inc
push
imul
cmps
push
out
push
mov
and
lds
in
mov
les
xor
sbb
jnp
popa
and
pop
mov
cwde
out
cmp
inc
sbb
pop
sub
aas
rcl
jmp
cmp
or
mov
aas
ffree
js
xchg
push
pop
fsubrp
pop
jg
mov
push
je
movs
add
mov
ret
outs
cdq
or
jmp
sub
call
mov
mov
xor
pusha
lea
adc
ret
adc
or
pusha
fs
mov
jmp
ffreep
push
mov
sbb
std
jne
and
(bad)
xchg
sbb
out
push
dec
adc
in
js
mov
push
xchg
in
push
adc
mov
mov
addr16
adc
pop
in
inc
daa
inc
inc
xor
out
adc
ret
add
sub
rol
jle
sub
retf
pop
add
inc
or
xor
jmp
or
inc
sub
xor
xchg
or
mov
test
aas
arpl
dec
mov
pop
lods
xchg
pop
add
push
pop
mov
cmp
mov
cdq
sbb
inc
adc
sbb
std
cmp
iret
add
sti
clc
dec
test
test
add
xor
jae
daa
cmc
mov
pushf
inc
dec
sub
jmp
in
gs
and
mov
mov
imul
or
or
sbb
fbld
jg
sbb
sbb
faddp
sti
pop
mov
xor
ins
xor
sbb
xor
sbb
or
js
shr
aas
or
cmp
jne
push
adc
add
mov
push
sbb
jl
or
or
retf
or
push
mov
add
jg
pop
cmp
pusha
fstp
stos
push
mov
or
dec
lock
aas
xchg
push
ss
mov
jne
test
les
push
(bad)
mov
cmps
xchg
test
and
mov
loopne
push
push
mov
dec
ds
inc
cmps
pop
xchg
add
sub
test
pushf
fcomp
mov
mov
out
movs
inc
sub
test
and
jno
pop
or
pop
jb
cmp
pop
pop
add
fsub
movs
lahf
inc
and
shr
dec
adc
aaa
xlat
adc
and
jge
cmp
ss
mov
je
sub
fistp
ret
lds
xor
test
aam
sbb
or
inc
lods
mov
lods
fdivr
out
lock
arpl
jnp
lods
mul
jo
and
pop
nop
sbb
cmp
pop
add
pop
xor
mov
add
scas
aad
jmp
jp
idiv
inc
push
pop
in
ror
cwde
adc
jnp
jp
dec
xchg
mov
je
add
lods
fnstenv
sbb
sbb
mov
jo
pop
inc
outs
mov
add
shl
cmp
mov
sar
rcl
cmp
or
aaa
jo
mov
scas
out
lods
add
cmp
ins
xor
sti
add
fsub
mov
xchg
mov
mov
ja
or
or
aam
push
inc
adc
inc
jg
pop
mov
pop
push
pop
mov
lea
push
push
mov
or
add
xor
sbb
sub
int3
mov
push
movs
pop
push
cli
outs
ss
mov
inc
mov
(bad)
inc
xor
and
pop
mov
xchg
daa
push
or
jo
in
mov
and
jmp
or
pop
sub
mov
adc
dec
push
pusha
sub
jmp
loop
and
dec
call
mov
xchg
add
mov
clc
push
pop
repz
test
or
add
inc
push
adc
dec
push
sbb
or
pop
dec
sbb
gs
inc
(bad)
loop
adc
scas
inc
sub
pop
or
or
add
jle
push
or
and
xchg
push
fdivr
xchg
jg
mov
inc
cmp
sbb
movs
iret
mov
xor
add
inc
sub
pop
fadd
imul
adc
into
ror
adc
es
sar
mov
add
ja
js
rol
jge
sar
(bad)
jge
cmp
test
adc
ins
mov
cmp
add
sub
or
pop
cmp
mov
test
ss
add
lea
fwait
add
lods
pop
sti
in
lea
adc
test
sub
jbe
add
scas
sub
push
cmp
push
or
xchg
xchg
sub
inc
add
add
adc
or
and
jl
inc
(bad)
sbb
xchg
sahf
xor
xor
cmp
pop
les
test
push
in
jo
ja
fs
hlt
mov
adc
sub
addr16
out
test
out
sbb
or
pop
ins
inc
je
push
fsubr
mov
jg
or
cmp
inc
fadd
fmul
xor
icebp
dec
sub
dec
fucomp
xchg
ror
mov
mov
jne
popf
add
lea
and
out
or
jle
push
push
xor
jo
push
add
xchg
rcr
xchg
cmp
popa
add
sbb
jmp
aaa
mov
sub
mov
push
scas
push
adc
cmp
sub
enter
jmp
fisubr
pop
mov
and
add
(bad)
push
or
inc
movs
gs
repz
inc
mov
push
int
sbb
sahf
jmp
loop
adc
(bad)
out
adc
sbb
adc
sbb
dec
adc
add
mov
pop
out
mov
or
or
and
mov
fs
push
pop
pusha
mov
retf
ret
xor
mov
mov
jnp
sub
xchg
test
sbb
inc
push
sub
cmp
xchg
test
les
push
jge
loopne
mov
aaa
push
mov
(bad)
(bad)
aaa
pop
and
push
lea
or
clc
js
test
das
mov
out
int3
sbb
out
mov
clc
(bad)
into
or
jl
sub
inc
jae
dec
cmp
data16
and
sbb
and
je
inc
mov
clc
push
sbb
xor
mov
jp
push
adc
or
cmp
adc
div
clc
mov
mov
outs
sub
mov
add
ss
add
jae
imul
(bad)
push
push
jp
add
cmp
ss
fst
test
out
sar
jge
mov
sbb
xor
rcr
jmp
lea
push
rcl
stos
add
mov
jle
test
or
xor
lods
jmp
pop
sub
pop
jecxz
cld
or
inc
ficomp
hlt
fs
mov
or
mov
mov
movs
push
jns
pop
std
jnp
outs
adc
dec
out
and
cmp
xchg
add
inc
mov
pop
ins
pop
push
mov
jmp
push
inc
in
mov
xor
cmp
adc
add
(bad)
repz
movzx
and
sub
test
inc
cmps
and
jbe
and
add
cli
mov
mov
ror
push
lock
into
adc
inc
pop
and
fucomip
adc
sub
shr
pop
sub
call
fsubr
pop
push
call
push
pop
loopne
cld
cmps
lock
mov
ins
mov
inc
add
push
inc
pusha
(bad)
dec
loope
mov
or
loopne
fdivr
ret
pop
pop
inc
ins
pop
sub
inc
xchg
or
jo
cli
push
sub
mov
jne
mov
inc
clc
into
mov
sub
or
sbb
mov
sbb
or
(bad)
fdivrp
movs
je
(bad)
xchg
xor
xchg
and
jmp
and
xbegin
out
ins
push
inc
and
xchg
ret
(bad)
mov
push
int3
mov
fcomp
push
xlat
push
jns
nop
adc
cs
sbb
lock
xchg
lea
mov
mov
in
das
or
push
add
or
inc
push
sub
dec
mov
inc
and
outs
sub
sbb
and
add
ja
inc
pusha
xchg
lods
outs
outs
dec
sti
add
dec
inc
inc
fidiv
cmps
add
enter
or
fwait
cdq
or
and
add
ds
add
jmp
mov
sahf
or
adc
popa
jo
mov
xchg
sub
adc
jnp
dec
js
std
pusha
mov
sub
jbe
aam
mov
push
sti
mov
inc
mov
or
das
mov
popa
mov
mov
mov
xchg
inc
imul
fcomp
push
and
pop
mov
xor
push
cld
mov
push
push
(bad)
fcomip
out
loopne
mov
jmp
mov
cmp
jne
mov
je
cmc
fimul
stos
pop
rcr
mov
aaa
or
pop
dec
jg
xor
jae
and
push
adc
xchg
inc
rcr
mov
pop
lds
rol
dec
repz
cmp
nop
or
hlt
in
jo
jb
adc
add
sbb
xchg
mov
mov
jae
call
xchg
adc
mov
call
dec
push
mov
cli
and
sar
pusha
push
loopne
cmp
adc
adc
add
outs
in
daa
addr16
movs
ds
cmps
xchg
adc
test
fld
push
and
pop
(bad)
lods
hlt
fsubr
leave
call
push
dec
mov
jmp
pushf
test
sbb
sbb
sub
lahf
jl
pusha
mov
add
inc
xchg
lock
adc
add
push
mov
push
and
push
mov
loop
mov
loopne
lea
pop
call
ret
or
imul
fiadd
pusha
mov
retf
add
jmp
pop
je
mov
pop
jns
retf
mov
int3
ins
data16
mov
loopne
adc
and
je
and
aas
push
hlt
shl
or
push
sbb
daa
scas
mov
dec
(bad)
xchg
or
and
add
xor
mov
pop
in
aas
add
test
pop
jl
in
outs
or
mov
cmp
js
test
adc
dec
ds
add
pop
add
dec
adc
dec
add
lahf
mov
rol
fmul
add
into
mov
jne
xor
mov
dec
and
push
ins
cmp
loop
pop
leave
and
and
xchg
fwait
aaa
jl
mov
cmp
add
clc
jne
cmp
mov
xor
mov
jmp
xor
jmp
lea
xchg
div
les
movsx
adc
addr16
adc
adc
push
and
sahf
mov
leave
pusha
sub
inc
pop
pop
mov
or
test
in
add
or
add
mov
sub
jl
cmp
mov
enter
sub
xchg
dec
jge
fldenv
jg
ret
or
sub
cmp
inc
aaa
cmp
or
mov
cs
adc
adc
adc
jne
push
dec
mov
sub
cld
mov
js
repz
xor
and
inc
push
bound
jl
xor
sub
sbb
cmc
dec
xlat
sub
and
cmp
add
add
es
or
jmp
add
xor
push
and
or
push
(bad)
call
sbb
add
adc
cmp
(bad)
or
lea
or
aam
js
adc
or
loopne
lock
int
sbb
lds
loope
scas
mov
pop
lods
adc
fisttp
adc
idiv
jne
add
gs
xor
bound
jne
enter
aam
sub
outs
mov
(bad)
shr
or
cmp
mov
and
test
fisttp
adc
jo
test
adc
jne
push
pop
adc
(bad)
adc
test
hlt
push
dec
xor
or
sub
mov
pop
cmp
cmp
dec
jnp
ds
mov
sub
mov
arpl
jbe
fwait
jmp
xor
push
or
sbb
cmp
and
retf
mov
inc
pushf
js
sbb
mov
or
and
mov
dec
mov
xor
jecxz
push
jns
cmp
test
xor
dec
pushf
cmp
sub
adc
inc
adc
cli
dec
or
or
gs
cmp
push
adc
or
ja
add
cmp
pop
push
lods
fs
and
test
cld
xchg
and
mov
xor
cmp
fistp
sbb
mov
push
inc
movs
or
xlat
inc
(bad)
jmp
rol
jnp
les
out
es
adc
xchg
xchg
xchg
sbb
or
movs
cmp
sub
mov
and
push
imul
sbb
adc
jmp
pop
mov
push
jb
xor
push
cwde
sbb
stos
shl
add
xor
loopne
add
push
loopne
xor
rcr
sbb
les
adc
in
es
fadd
loopne
lock
rol
cmps
repnz
mov
jo
or
xor
mov
add
push
or
sub
pop
cmp
into
xchg
adc
(bad)
pusha
fmul
sar
add
and
sub
sub
add
arpl
and
pop
pop
or
pop
jle
or
mov
pusha
add
mov
out
inc
fcom
adc
dec
xchg
or
jecxz
sti
adc
lds
push
imul
test
fwait
test
and
mov
inc
cmp
int3
test
jl
jecxz
int3
ret
pusha
mov
push
sbb
jno
mov
test
(bad)
cmp
movs
fcom
or
sub
or
addr16
cld
jge
loopne
xchg
mov
inc
mov
inc
sub
icebp
ret
or
bound
inc
ret
fisub
mov
sbb
in
cmp
test
inc
pop
xor
pusha
jnp
imul
dec
dec
sbb
dec
xchg
test
test
inc
out
inc
pusha
enter
jmp
cmp
add
adc
xchg
inc
call
adc
push
and
ja
cmp
in
bnd
cmp
cmp
jno
jb
mov
dec
add
inc
jg
jg
inc
dec
call
in
and
push
mov
add
into
jmp
jb
add
pop
ins
jo
in
mov
mov
add
inc
rol
adc
jmp
nop
je
(bad)
dec
adc
sbb
or
push
aad
mov
ja
repnz
sub
jg
mov
in
or
scas
(bad)
cs
cmp
dec
jne
mov
and
add
loopne
fs
or
shr
or
cmp
lock
push
movs
shl
jo
cld
and
add
out
mov
repnz
es
clc
inc
pop
push
add
push
or
rol
push
push
cmp
loop
imul
and
into
ror
add
push
adc
ror
and
and
arpl
mov
pop
adc
shr
push
enter
pop
pusha
enter
sub
es
dec
cmp
daa
movs
gs
sbb
dec
pop
daa
pop
adc
aaa
dec
xor
sub
pusha
inc
je
mov
add
push
mov
or
push
push
push
mov
je
aam
dec
je
adc
sub
test
jmp
scas
jmp
arpl
or
mov
lods
add
adc
jbe
pop
or
dec
or
push
add
xchg
rol
or
vxorps
or
ja
xor
inc
inc
or
loop
mov
jb
out
jg
pop
push
add
push
fcomp
pop
mov
shl
rcl
cmp
mov
data16
ret
pop
inc
jmp
add
push
test
fsubr
arpl
pop
xchg
mov
and
jle
retf
pop
mov
cmp
stos
out
mov
call
push
imul
push
mov
jmp
push
xlat
ficomp
push
pushf
pop
mov
loopne
mov
jmp
xor
inc
or
mov
and
(bad)
ss
mov
push
pop
push
into
popa
dec
mov
or
mov
and
jnp
cmp
sub
jecxz
dec
lock
clc
mov
(bad)
or
cmps
(bad)
pop
pop
ret
add
sbb
cdq
cmp
or
mov
cli
cmps
cs
pop
ret
push
pop
cmp
mov
dec
lds
push
jo
add
and
xchg
clc
sahf
test
adc
adc
cmc
push
push
mov
push
push
scas
ret
lods
xchg
adc
add
adc
loop
lock
add
xchg
xchg
pop
sub
nop
(bad)
sbb
push
add
push
push
dec
jbe
shl
or
push
addr16
adc
fcomp
mov
inc
mov
mov
push
dec
and
xor
ins
sub
pop
mov
shl
mov
xor
and
jae
mov
shr
sbb
adc
ret
xchg
loop
xchg
lods
and
aam
sub
test
push
push
or
mov
cs
or
mov
mov
push
pusha
or
jl
enter
sti
xchg
jl
fdivr
adc
dec
or
data16
pop
(bad)
jge
or
xor
xor
cs
sbb
lahf
push
es
les
je
mov
or
inc
or
pop
push
clc
inc
mov
nop
loopne
jne
jmp
dec
push
jo
retf
dec
imul
pop
inc
jne
add
mov
add
mov
mov
and
cmp
adc
test
and
in
sbb
sub
fs
xor
repnz
add
test
or
add
jmp
ins
dec
or
push
adc
xor
movs
call
leave
and
or
sub
seto
xor
xchg
push
mov
push
scas
push
test
loope
inc
(bad)
loopne
cmp
xlat
stos
xor
and
fimul
je
scas
dec
in
imul
retf
scas
test
in
push
mov
push
cmp
add
sbb
mov
add
repnz
xor
adc
test
push
lock
ins
test
or
sbb
shl
xor
fdivr
inc
jo
push
pop
rol
and
jge
ret
bound
test
movhps
dec
ja
in
je
push
cmps
mov
xchg
clc
and
mov
xchg
pop
inc
jne
sahf
in
cs
sbb
jecxz
aaa
(bad)
mov
or
lods
mov
dec
das
and
push
in
aas
or
xchg
mov
jge
out
xor
shl
mov
mov
paddsb
or
add
sbb
loop
sbb
adc
enter
xor
test
and
sub
mov
sub
push
jmp
fist
xor
cwde
aam
sub
dec
push
push
rcl
push
pusha
retf
rcl
jo
push
push
popa
xchg
dec
push
inc
mov
cmp
shr
fdiv
add
cmp
or
dec
loopne
inc
lock
cmp
or
das
enter
pop
jae
aas
mov
fld
jmp
xchg
sbb
test
add
and
ja
dec
and
pop
daa
daa
add
aam
fs
push
jae
mov
rol
dec
lods
js
repnz
jo
inc
ds
dec
bsr
mov
ds
and
je
add
adc
lahf
call
add
cmp
lea
in
pop
inc
add
mov
add
sub
push
xor
or
in
add
pop
test
(bad)
push
push
mov
sahf
rol
ja
dec
cmp
or
cmp
jg
add
inc
or
mov
ror
xchg
inc
pusha
mov
loope
add
es
and
loop
adc
pop
jne
cmp
outs
inc
pusha
adc
cmp
shr
push
test
fistp
test
mov
adc
aaa
mov
sbb
rcr
cmp
pop
add
movzx
push
je
jge
xchg
fisttp
fcomp
cmp
aad
and
cmc
retf
clc
push
pop
fld
push
mov
popa
pop
shl
pop
(bad)
retf
gs
or
pusha
sub
adc
fs
bndldx
shl
mov
lock
lea
pop
in
and
stos
enter
or
mov
xchg
add
add
add
jbe
jo
push
das
ret
cmp
rcl
mov
fld
push
arpl
js
sbb
cmps
sar
es
fisttp
cmps
add
xor
sbb
iret
cmp
sbb
lahf
adc
cmp
shl
arpl
mov
xchg
pusha
xchg
rcr
test
adc
jmp
repz
xlat
fiadd
adc
ret
js
test
jne
push
sbb
cmp
dec
and
data16
sbb
inc
mov
cwde
adc
adc
mov
not
push
mov
jmp
jl
sbb
dec
mov
mov
sub
inc
pop
or
ret
jmp
cmp
cmp
xchg
add
dec
scas
sbb
int
das
pusha
or
cmp
cwde
mov
pop
pop
mov
sbb
sbb
add
mov
mov
xor
cmp
cmp
in
lock
mov
jecxz
cmp
and
jo
xchg
jp
mov
in
push
in
or
dec
or
push
js
push
mov
ret
addr16
add
outs
and
and
jle
push
and
sbb
add
sti
adc
imul
ret
add
inc
cmp
xchg
sbb
sbb
test
push
cmp
cdq
shl
jo
xlat
push
test
push
mov
lahf
enter
sub
rcl
scas
sbb
cld
cmp
lea
inc
addr16
sub
mov
loopne
sub
lock
cmp
repz
dec
mov
cmp
mov
xor
test
xor
jl
cmp
xor
mul
push
retf
xor
jl
xchg
xchg
push
pushf
or
push
pop
pop
repz
mov
add
clc
xchg
adc
outs
fcmove
je
cmp
je
retf
xor
add
adc
movs
inc
dec
and
push
sub
cmp
rol
cmp
xor
or
jb
das
xchg
ror
xcrypt-cbc
cmps
xchg
xchg
push
das
adc
mov
sar
sbb
xchg
and
outs
sub
retf
sub
pop
xchg
push
mov
add
or
into
mov
mov
mov
mov
cmp
mul
in
fiadd
je
(bad)
mov
in
sbb
sbb
mov
adc
or
fisub
xor
sbb
sbb
or
push
clc
push
dec
add
(bad)
(bad)
fcom
adc
and
adc
inc
or
mov
in
adc
cmp
repnz
push
aaa
dec
mov
and
js
femms
pop
push
add
push
cdq
iret
add
div
or
xchg
jo
inc
or
cmp
jmp
inc
aaa
cwde
pop
sbb
ror
jg
icebp
jmp
clc
push
int3
add
pop
dec
mov
pop
lods
test
test
mov
loopne
and
ss
ror
imul
std
aam
clc
push
jne
lea
movs
movs
mov
addr16
(bad)
push
cmp
jl
mov
out
or
xor
popa
or
sbb
sbb
out
repnz
or
and
dec
pop
jo
mov
jg
jle
mov
dec
sub
sbb
xchg
inc
and
jne
dec
xor
jne
les
(bad)
stc
in
xchg
push
add
inc
aas
xchg
adc
push
mov
mov
push
lock
jp
sub
loope
enter
loop
or
(bad)
mov
add
mov
or
cmc
shr
shl
movs
fucomip
ja
loopne
jg
mov
cmp
je
test
pusha
or
mov
and
add
std
pusha
xlat
aas
fcmovb
inc
mov
mov
lahf
push
or
cmc
mov
test
out
stos
lock
data16
test
lock
inc
lock
jecxz
push
sbb
shr
and
inc
push
mov
mov
les
xor
mov
cs
fwait
call
jg
mov
or
loopne
cmp
push
dec
sub
call
mov
aam
(bad)
push
sbb
jo
jo
jno
inc
data16
mov
push
inc
or
jp
lock
(bad)
mov
fcomip
sub
ss
pop
icebp
pop
pop
push
pusha
push
ss
pop
loopne
add
push
push
adc
call
add
mov
xchg
ret
cmp
add
xor
mov
das
push
ss
add
lock
not
icebp
cmps
or
mov
iret
mov
popa
xor
xor
inc
scas
dec
push
or
mov
imul
add
inc
or
int3
or
imul
(bad)
push
pop
or
ja
ja
call
and
adc
push
data16
add
push
mov
cmp
mov
xlat
add
mov
mov
pop
pop
dec
sbb
sub
test
dec
enter
jp
push
ror
pop
outs
and
sub
loopne
xor
pop
call
cmp
pushf
cmp
lds
jl
mov
dec
test
sub
add
lock
push
pop
or
mov
jb
fbstp
add
lock
xor
cmp
add
push
sub
xlat
and
cmp
dec
push
rcr
add
nop
mov
fst
dec
rcl
mov
jb
dec
dec
or
adc
mov
leave
add
or
jle
popa
js
nop
sub
inc
adc
inc
test
inc
inc
or
adc
mov
sbb
sbb
jo
xor
cmp
jg
movs
loopne
add
test
mov
dec
sub
cld
or
je
pop
repnz
test
jl
inc
xor
add
lock
daa
icebp
hlt
(bad)
imul
push
push
mov
and
mov
adc
add
adc
or
cmp
mov
and
aam
in
mov
sbb
out
dec
es
pop
mov
push
in
add
dec
jne
pusha
sti
inc
xor
adc
pop
push
pop
fisttp
into
add
lock
push
xor
js
and
cld
mov
dec
(bad)
and
or
lock
or
xor
mov
je
shl
mov
mov
pop
add
push
jp
ins
adc
es
fisttp
sbb
jne
xchg
scas
mov
and
int
xor
je
outs
push
or
adc
(bad)
aas
mov
sub
cmp
loop
inc
out
pop
fnstsw
cld
cmps
adc
jge
mov
add
aam
add
inc
adc
and
cli
stos
ins
jae
and
aad
push
ret
adc
push
test
xor
add
jnp
or
push
adc
js
or
sbb
hlt
push
hlt
and
xor
icebp
or
std
mov
fmulp
push
add
mov
push
push
mov
pop
pop
pushf
inc
adc
or
adc
clc
call
clc
dec
add
and
and
push
or
pop
push
shr
fadd
fld
test
out
dec
fs
push
mov
loopne
push
scas
inc
inc
nop
pusha
jle
loop
loope
and
adc
mov
aad
mov
add
mov
push
fst
xor
mov
ret
and
rcr
ss
dec
or
jmp
aam
imul
jnp
(bad)
push
mov
pop
add
lods
ror
dec
mov
(bad)
sar
dec
call
out
daa
push
push
stos
xor
mov
(bad)
or
adc
test
loopne
sbb
nop
and
nop
xor
pop
jns
(bad)
adc
adc
xchg
pusha
cwde
adc
add
push
jp
mov
lods
jne
cdq
sub
jbe
jne
push
neg
sbb
mov
jp
movs
iret
push
rcl
pop
pop
pop
movs
add
mov
outs
dec
call
shl
sub
pop
push
xor
mov
xchg
xor
xor
push
xor
push
leave
sub
jg
pop
sti
mov
pop
inc
mov
daa
pusha
push
inc
mov
ret
pop
pop
das
(bad)
lock
leave
imul
push
xor
sub
xor
mov
repnz
out
add
dec
and
rcl
adc
push
push
pusha
movs
jle
(bad)
xor
pushf
adc
ja
or
or
jmp
pop
or
(bad)
pop
cmps
fisub
popf
jno
ss
je
dec
ror
push
es
neg
push
jmp
or
pop
lahf
shr
cmp
rcl
jnp
les
sub
jb
dec
je
jmp
adc
movs
jg
sub
mov
jb
mov
jmp
jno
mov
stc
or
add
hlt
imul
or
add
daa
and
iret
adc
inc
and
aas
fsubr
inc
jmp
add
inc
lock
(bad)
jne
aaa
call
out
cmp
sub
add
sub
or
mov
push
add
in
mov
mov
jecxz
and
sbb
movs
sbb
lock
push
mov
jo
add
repz
lods
rol
mov
push
push
mov
test
add
mov
pop
test
adc
dec
add
cs
jg
lock
ja
call
add
clc
sbb
je
adc
sub
pop
or
je
xchg
std
sub
pop
jmp
add
adc
push
mov
adc
adc
jmp
push
cmp
cmp
in
jne
jnp
inc
sub
daa
clc
jne
out
push
pop
sbb
imul
mov
dec
in
movs
xor
sbb
jmp
and
ret
mov
ins
mov
add
mov
push
in
jge
and
lahf
xchg
xor
mov
sbb
jne
mov
js
push
and
inc
xor
mov
les
scas
cmp
jne
cmp
clc
test
jle
repnz
or
inc
pop
jne
add
sub
push
pop
je
xor
sub
xchg
sbb
pusha
xor
push
push
pusha
cmp
lods
pop
pop
jmp
mov
pop
dec
or
in
std
mov
xchg
cmp
mov
or
cmps
dec
jmp
les
pusha
push
lea
lea
loopne
dec
in
inc
pop
dec
or
inc
pushf
call
sub
push
je
jne
add
adc
jo
pop
fmul
add
ret
das
sbb
xchg
inc
lods
xchg
rcl
fimul
mov
dec
jne
xchg
adc
fwait
jae
mov
sbb
jbe
push
push
push
(bad)
dec
mov
pop
inc
xor
sar
jbe
xor
mov
adc
cmp
push
or
inc
cmp
pop
mov
out
and
push
nop
inc
lods
jge
test
mov
push
test
cmp
sub
test
mov
add
sbb
xor
in
push
ret
movs
imul
std
mov
inc
imul
lahf
jnp
daa
jo
xchg
or
arpl
pop
data16
cmp
sbb
sbb
loope
sahf
fs
or
shr
push
hlt
xor
in
jno
mov
or
cmp
cli
fnstsw
push
jmp
retf
jne
bound
ds
push
pop
push
push
pop
push
add
push
loop
and
jne
retf
(bad)
shr
js
or
push
inc
mov
xchg
lods
ret
mov
pop
ins
shl
mov
call
sub
hlt
xchg
in
pop
retf
adc
jl
push
inc
aas
clc
out
clc
sub
idiv
xor
cmp
jg
les
(bad)
je
out
add
mov
dec
mov
add
jnp
mov
pop
mov
jmp
dec
test
outs
pop
outs
into
dec
cmp
mov
mov
lea
in
pop
outs
(bad)
(bad)
dec
jo
jl
adc
jle
ret
and
add
jbe
nop
inc
xchg
jg
inc
lock
sub
rol
adc
lds
inc
jno
xor
or
jbe
loope
cli
test
xor
mov
mov
sbb
add
ret
mov
adc
add
scas
or
sbb
or
test
in
jle
mov
bound
fistp
or
aaa
cmc
inc
int
pop
nop
or
mov
cmp
add
fisub
xor
fild
cmp
shl
retf
aas
or
sub
adc
mov
rcr
aas
arpl
xchg
push
(bad)
jo
pop
(bad)
pop
cmp
and
or
cmp
int
fwait
xor
sbb
daa
inc
(bad)
in
out
sub
sub
sbb
dec
jne
addr16
lahf
mov
push
push
out
push
dec
pop
sar
aam
mov
sub
ucomiss
xor
cwde
push
sub
cmp
mov
pop
rol
rol
mov
inc
lea
push
lods
inc
sbb
inc
cs
cs
sbb
pop
lahf
jp
test
add
xor
in
sbb
movs
sbb
jmp
pop
mov
or
push
fs
mov
cmp
xlat
cmp
jne
shl
pushf
pushf
cld
add
mov
sub
outs
scas
repnz
pop
fdiv
mov
add
or
jmp
les
jl
jmp
xor
shr
mov
jg
adc
test
cmp
rol
add
adc
push
jge
and
jge
inc
inc
add
adc
mov
mov
or
enter
call
and
das
mov
dec
cmp
cdq
or
ret
mov
jg
or
and
popa
ror
(bad)
ins
mov
out
in
add
inc
add
sbb
pop
xor
imul
popf
or
or
das
sub
mov
pop
imul
enter
pop
cmp
sbb
jmp
pop
je
mov
dec
cmp
push
cli
inc
cmp
scas
prefetch
or
xor
adc
xchg
outs
mov
jbe
push
inc
popa
sub
(bad)
push
jne
jne
add
adc
xor
pusha
adc
cmp
xchg
adc
fadd
cmp
or
add
in
mov
test
arpl
data16
fdiv
into
cmp
ins
repnz
adc
cmp
js
pop
std
rcl
jno
push
pop
retf
mov
scas
cs
ja
sbb
ret
cmp
fimul
pop
sbb
cmp
femms
pop
bound
int
add
scas
test
test
pcmpgtb
mov
ret
and
push
ins
or
push
out
inc
jmp
inc
or
dec
loopne
dec
fst
jb
das
mov
inc
dec
test
je
add
pop
add
cmp
dec
xchg
stos
or
cmp
call
xor
and
push
std
pop
jbe
xchg
adc
cmp
cmp
cmp
movs
sbb
dec
push
lods
sbb
clc
(bad)
mov
push
or
push
dec
cs
push
mov
and
pushf
cmp
sbb
inc
and
int3
push
mov
test
and
pop
or
jbe
adc
js
or
test
jp
test
dec
jmp
inc
mov
inc
push
sub
xor
sub
xor
rcr
adc
lock
and
or
push
sbb
pop
jo
cwde
fisttp
cmp
sbb
sbb
fistp
mov
push
adc
xor
mov
jecxz
outs
xchg
inc
scas
add
ror
aas
adc
fmul
add
inc
hlt
stos
inc
ret
xor
in
lahf
or
push
es
mov
add
adc
mov
sbb
mov
fist
fldcw
jge
push
mov
fsubr
or
jmp
mov
mov
xor
jne
xor
pop
mov
fucomi
or
jne
push
ds
or
sbb
or
push
aaa
or
or
mov
in
xchg
loopne
mov
cmp
jge
and
mov
add
mov
jle
xchg
inc
js
movs
mov
enter
hlt
or
push
sub
push
xor
push
fstp
out
ret
sub
loope
pop
mov
cmp
add
jge
mov
add
dec
jne
mov
or
mov
mov
icebp
(bad)
test
dec
sbb
pop
sbb
and
sub
push
mov
mov
mov
(bad)
jg
sbb
movs
push
push
adc
shl
lock
popa
pop
jmp
or
pop
push
push
jbe
and
lahf
sub
scas
mov
or
outs
sub
push
sub
sub
or
aas
jl
test
je
adc
in
jnp
jg
or
inc
adc
add
add
or
add
or
fldenv
inc
mov
cmp
and
add
and
setle
add
sub
mov
aam
adc
dec
jl
xchg
add
pop
cmps
xor
mov
test
hlt
jl
rcr
fxch
(bad)
ins
sbb
(bad)
test
js
test
pusha
adc
sbb
push
mov
nop
inc
imul
inc
imul
dec
test
sub
ret
mov
xor
inc
in
sub
or
add
inc
cs
dec
mov
and
hlt
sub
mov
test
pop
or
dec
addr16
ret
or
leave
push
shl
movs
push
jmp
push
push
sub
or
aam
jbe
xchg
inc
jne
cs
in
mov
in
aas
loope
loop
inc
inc
aas
cmp
mov
mov
mov
(bad)
pop
call
sub
jb
sub
jb
push
(bad)
jle
es
mov
jmp
or
jmp
cmp
add
or
cmp
jne
inc
hlt
shl
add
push
aas
jnp
xor
fcom
or
inc
mov
add
push
mov
or
dec
jo
add
nop
push
add
or
or
push
xchg
cmp
xchg
fs
sub
mov
mov
pop
add
or
jl
in
push
xlat
and
add
sar
pop
or
jmp
mov
str
mov
inc
(bad)
mov
js
xor
jo
enter
add
and
out
or
adc
cwde
mov
paddusb
loopne
add
out
ret
loopne
mov
lock
and
xor
mov
sbb
(bad)
(bad)
sub
enter
shr
daa
repnz
std
(bad)
push
add
pop
movs
sbb
call
add
and
cmp
and
and
in
aad
shl
int3
fmul
sub
fadd
clc
cmp
pop
out
mov
xchg
xor
repz
mov
aad
sub
cmp
and
or
pop
and
jae
add
cmp
test
dec
add
add
pop
pop
or
add
sbb
xchg
pushf
and
xlat
dec
rol
add
in
rol
add
adc
pop
and
mov
lock
push
js
mov
xor
pusha
add
jmp
jbe
pop
xchg
jge
loopne
sti
pop
js
xlat
ds
mov
xchg
or
xor
and
js
add
out
adc
xor
aam
das
add
add
ret
adc
xor
ror
dec
push
add
sub
xor
popf
jg
sbb
arpl
jle
adc
test
jle
xor
inc
jne
cmp
add
hlt
ss
aaa
jmp
js
add
sub
jae
mov
js
cmps
call
rcl
or
add
xchg
push
in
in
add
sbb
sbb
(bad)
fdiv
mov
lods
jmp
inc
(bad)
lea
rol
xor
xchg
jmp
mov
add
push
jae
cwde
aam
mov
jle
dec
cld
add
or
(bad)
les
ror
mov
cmp
adc
fs
mov
jle
fcomp
push
mov
jg
jle
dec
hlt
movs
dec
hlt
push
repz
ret
nop
cmp
cld
xlat
jmp
mov
je
mov
sub
cmp
adc
js
addr16
nop
push
dec
push
jno
cmp
sbb
arpl
mov
test
xor
cmp
push
jnp
inc
cmp
aas
sbb
pushf
pop
jns
lock
or
push
hlt
cmp
inc
add
ret
xchg
push
cmp
mov
xchg
stos
add
and
movsx
and
je
add
adc
add
inc
add
dec
add
rcl
xor
add
or
mov
dec
cmp
add
xchg
sbb
or
dec
(bad)
push
pop
lods
fcmove
xor
rcr
cld
inc
push
cwde
adc
and
imul
daa
xor
dec
push
mov
mov
fdiv
es
fiadd
mov
inc
lock
in
push
call
mov
aam
jge
xchg
sub
sar
outs
cwde
cmp
aam
fsub
test
ins
lods
cmps
add
cld
les
sub
shr
sahf
push
adc
or
and
sub
or
mov
and
adc
pop
loop
push
mov
sub
fcomp
test
sbb
mov
xor
xchg
fs
jbe
movs
shl
xor
cdq
add
xchg
pop
or
js
dec
retf
or
out
loope
jb
or
sbb
add
sbb
push
bound
fild
xor
dec
jno
or
shl
add
mov
mov
fstp
js
cld
or
add
push
fdiv
push
sub
rcl
popf
clc
mov
add
pop
aam
enter
inc
pusha
in
inc
aam
add
(bad)
call
mov
aam
add
xchg
ret
fimul
stos
pop
ins
fdiv
or
fstp
imul
push
shl
outs
ss
jl
sbb
push
in
or
imul
pushf
or
mov
mov
loope
push
inc
sub
push
sbb
cmp
push
add
adc
add
and
xlat
inc
push
retf
ret
jnp
jp
je
shl
aaa
add
mov
lods
lock
adc
fcomp
inc
inc
xchg
fsubr
(bad)
or
dec
and
xchg
(bad)
mov
dec
cmp
test
xchg
out
movs
mul
push
sbb
add
in
mov
xchg
sbb
loop
or
push
ror
push
and
scas
or
or
jne
add
mov
dec
pusha
xor
jmp
je
add
mov
ret
in
adc
mov
add
mov
push
imul
inc
add
mov
and
aam
mov
xchg
ror
test
hlt
out
and
pop
rep
fld
je
adc
adc
das
or
cli
dec
fiadd
(bad)
adc
dec
mov
outs
mov
popa
pusha
test
push
fcom
sar
jno
in
jne
adc
sbb
in
jae
jns
cmp
(bad)
int3
mov
push
pusha
retf
dec
outs
cvtps2pi
xchg
add
mov
test
out
sub
push
stos
cmc
or
pushf
cmp
push
inc
or
adc
(bad)
push
inc
nop
cmp
jo
gs
sbb
ds
into
pop
sub
pusha
sete
xchg
add
push
lock
popa
xor
loopne
push
and
or
iret
fiadd
cwde
add
mov
sub
cmp
cmp
add
popa
add
cwde
popa
jmp
inc
adc
xor
adc
je
jbe
mov
push
retf
std
aas
sub
ja
adc
shl
ret
mov
inc
mov
or
pop
and
xchg
or
jp
and
or
lea
mov
push
loopne
ror
or
ins
mov
loopne
js
add
jl
jne
pop
ja
pop
dec
and
pop
pop
or
rol
push
inc
pop
and
and
add
inc
pop
dec
sbb
lods
jmp
movs
pop
stos
jmp
mov
push
jo
adc
mov
hlt
add
or
rol
cmp
shr
push
fisub
mov
or
pop
push
fimul
add
aam
int3
or
or
movs
call
adc
cmovnp
add
adc
int3
out
pop
movs
imul
rcl
int3
out
mov
aas
push
push
mov
lock
test
test
fisttp
fdiv
js
xchg
idiv
or
sub
mov
fstp
fwait
je
mov
or
test
push
push
test
dec
jo
dec
je
movs
or
push
mov
sub
sbb
frstor
fstp
cmp
xchg
push
xor
dec
add
pop
std
lea
xlat
sbb
(bad)
jg
cs
test
inc
sahf
fimul
leave
add
add
add
mov
(bad)
push
imul
outs
ins
cmp
dec
ja
data16
inc
add
arpl
punpcklbw
ja
call
inc
cmp
pusha
add
push
pop
add
into
arpl
jns
jmp
and
add
adc
sub
test
int3
push
shl
rcr
jmp
mov
dec
inc
fwait
jle
and
aaa
mov
add
sahf
add
jnp
or
sbb
mov
push
ins
cdq
inc
mov
or
pusha
add
push
cmp
mov
sahf
shr
js
pop
dec
mov
in
dec
cmps
push
(bad)
push
out
js
call
jmp
cld
and
out
test
je
push
stos
out
inc
pop
aam
shl
dec
inc
in
jmp
add
jae
adc
out
cmp
and
inc
mov
mov
cmp
jne
rcl
add
push
nop
cmp
daa
imul
and
mov
fisub
and
ret
and
mov
sbb
fwait
inc
and
mov
(bad)
pop
rcl
mov
(bad)
mov
lds
retf
daa
dec
jno
rcr
cmp
sahf
loope
inc
xor
sub
adc
fcmovnu
dec
out
shl
mov
popa
(bad)
jae
ins
adc
inc
(bad)
jb
push
push
jae
mov
fdivr
sub
xchg
fild
xor
cs
push
mov
xor
jae
add
sub
cmp
stos
mov
fiadd
push
mov
jmp
adc
jle
adc
js
mov
jbe
jno
mov
sub
test
cli
sbb
inc
adc
adc
or
and
movs
adc
add
or
add
pushf
rcl
lods
test
pushf
stos
mov
or
jne
mov
mov
mov
aaa
add
ins
sti
emms
mov
or
(bad)
(bad)
jg
bt
jae
mov
not
and
inc
add
cmp
jne
sbb
shl
ret
test
out
jg
cmp
je
cs
xchg
mov
mov
adc
and
mov
fimul
clc
pop
psraw
leave
shr
add
mov
mov
jmp
rcl
mov
leave
jne
mov
adc
push
faddp
mov
dec
lahf
movs
jo
ss
pop
ret
adc
add
add
dec
and
rol
mov
cmp
push
push
sbb
and
jg
aam
add
add
or
in
js
or
jno
sbb
inc
or
call
pop
or
gs
ffreep
jg
pop
jle
dec
push
and
add
xor
sbb
sub
retf
dec
adc
inc
dec
jne
sub
ror
lods
(bad)
add
bswap
mov
mov
add
mov
(bad)
or
xchg
add
push
pop
ret
add
pop
add
xor
ja
(bad)
mov
push
repz
inc
mov
push
int
sbb
iret
gs
nop
sbb
cmps
ins
push
adc
xchg
cmps
and
or
pusha
addr16
lods
pop
push
adc
xor
lock
push
test
mov
in
inc
cmp
jne
sub
fistp
repnz
jl
or
add
push
jmp
test
sbb
push
adc
js
jge
push
or
jmp
loopne
inc
mov
iret
leave
sahf
mov
or
or
sbb
sbb
push
or
push
adc
push
aam
add
mov
adc
push
add
adc
test
push
pop
psubb
dec
outs
test
gs
je
dec
jmp
data16
pop
inc
es
shl
test
imul
adc
push
fstp
jge
pushf
adc
mov
push
lock
sbb
mov
fcomp
pop
pusha
and
xor
fwait
or
adc
sbb
mov
dec
fs
xor
mov
ret
cli
inc
popf
inc
jle
cwde
push
mov
lock
shl
xchg
das
hlt
xor
(bad)
jle
inc
adc
(bad)
ss
cli
inc
cmp
test
xor
mov
xchg
push
popa
test
ret
xor
imul
les
and
loopne
and
sbb
inc
out
js
dec
inc
mov
daa
push
mov
out
or
setg
sub
cmp
mov
and
sub
je
nop
adc
rol
ins
scas
and
xor
(bad)
scas
out
ret
mov
inc
push
add
shl
mov
cmps
jae
mov
add
lods
xor
stos
sbb
cmp
or
mov
hlt
adc
jp
mov
mov
fldenv
shl
ror
xchg
dec
ins
dec
sub
(bad)
xor
xchg
test
inc
push
arpl
xchg
inc
jnp
xor
sbb
cmpxchg
cs
xor
out
fwait
push
fs
inc
mov
outs
lea
fild
ret
lock
mov
sbb
pop
sbb
sbb
push
mov
sub
loopne
jge
fcomp
mov
mov
in
cwde
mov
test
jle
cmp
setge
(bad)
push
or
xor
in
sbb
pop
or
sbb
mov
mov
cmp
xchg
hlt
inc
mov
add
add
gs
pop
mov
pop
pop
int3
and
push
cwde
fisttp
pop
adc
or
xchg
jge
mov
adc
add
repnz
sub
loope
sbb
mov
or
add
xor
hlt
jmp
aaa
adc
push
dec
xlat
xor
cmp
push
pop
jne
inc
loopne
or
cmp
push
in
cmp
sbb
mov
push
push
pop
adc
movs
xor
out
xor
test
push
cmp
adc
(bad)
inc
or
jmp
jge
pop
ret
push
or
or
cwde
les
xor
mov
lock
je
add
pop
add
cmp
dec
dec
mov
cmp
push
add
jmp
add
adc
pop
sub
mov
je
jb
(bad)
fdiv
add
pop
movs
push
push
or
cmp
jl
in
imul
sub
nop
addr16
mov
push
mov
push
outs
xchg
scas
or
ja
cwde
mov
add
mov
mov
sbb
rol
les
or
arpl
inc
out
sbb
xchg
clc
inc
cmp
pop
aam
xor
sbb
clc
sbb
je
add
pushf
jmp
das
hlt
or
sar
add
and
aas
mov
or
not
stos
adc
inc
jl
add
sbb
inc
dec
add
in
mov
xor
cmp
fwait
call
sbb
in
(bad)
cmp
jge
sbb
cmp
shr
aas
cmp
sub
pop
int
in
xor
repz
pop
add
cmp
jge
sbb
mov
cmp
sub
fsubr
and
loopne
rol
cmp
in
inc
js
xor
pop
and
mov
and
sub
push
add
cmp
mov
cmps
inc
imul
mov
into
dec
pop
sbb
mov
lods
add
jmp
lds
pushf
loop
cli
push
jbe
push
clc
mov
clc
setl
jo
mov
hlt
jle
jo
aaa
add
push
adc
nop
cld
cmp
pop
sbb
sub
add
add
sbb
mov
mov
add
in
data16
es
xor
or
rol
push
sub
mov
hlt
stos
add
jecxz
sub
xlat
push
popf
xchg
jb
xor
dec
pop
jne
or
mov
jb
pop
div
mov
or
test
dec
outs
add
rol
add
fsubr
retf
bound
and
pop
not
and
fdivr
jecxz
push
inc
pusha
inc
or
fistp
retf
add
inc
mov
push
pop
(bad)
in
call
ud2
loop
jne
sahf
sub
(bad)
push
mov
stos
inc
jmp
xor
push
fiadd
push
ret
or
sub
jb
push
inc
cmp
adc
(bad)
push
adc
out
sbb
push
cmp
retf
jo
test
leave
popf
adc
inc
push
sbb
movs
outs
call
pop
sub
bound
or
jmp
sbb
mov
sbb
fdivr
mov
stos
jg
popf
loope
inc
sbb
iret
arpl
aas
jle
dec
not
inc
mov
call
std
xor
xchg
adc
(bad)
dec
jo
push
add
and
lar
or
das
ins
jg
cmp
je
push
xchg
mov
cmp
add
ds
adc
mov
in
sub
cwde
das
sbb
test
xchg
push
sub
les
inc
daa
popa
sub
cli
mov
fist
pop
cmp
pop
adc
jnp
xchg
out
jge
cmp
jo
je
pop
pop
add
movs
repnz
jns
mov
or
fld
pop
and
push
push
xor
add
jp
or
or
in
inc
cmp
add
mov
gs
mov
or
sbb
pop
test
fwait
movs
inc
cwde
ficom
rcl
outs
and
sti
or
cs
jo
or
bound
or
cmps
in
sbb
push
mov
(bad)
dec
sti
(bad)
xlat
mov
mov
rol
pop
fimul
pop
or
popa
dec
js
xor
add
xor
mov
je
or
ret
mov
xor
lock
fprem1
(bad)
cmps
mov
aaa
outs
fild
lds
xlat
(bad)
int
push
fdivr
(bad)
stos
or
adc
adc
inc
js
push
push
ror
in
lea
ja
aaa
test
pop
cmp
lock
xor
aaa
or
inc
push
dec
jo
in
cmp
cmp
icebp
or
jnp
push
loop
cmps
pop
cwde
jmp
mov
test
or
add
jbe
(bad)
mov
test
cmps
jge
jp
cmp
adc
sbb
inc
fs
js
sbb
add
xor
xchg
sbb
in
pop
mov
mov
adc
mov
mov
inc
or
push
jne
ret
imul
pop
add
outs
inc
cs
outs
and
inc
sahf
lock
sub
adc
add
movzx
aam
hlt
imul
inc
je
pusha
loopne
test
xchg
xor
jno
jbe
div
mov
or
pop
test
shl
mov
dec
adc
add
jne
call
push
stc
add
outs
push
jmp
xor
es
mov
add
add
imul
inc
or
aaa
in
xor
mov
cmp
jne
cmp
lods
out
inc
bound
ins
inc
cs
mov
mov
jmp
adc
xor
retf
sbb
xchg
(bad)
mov
enter
pop
push
mov
sbb
cmp
por
mov
adc
sbb
fwait
inc
jo
js
rol
jo
ret
daa
std
cmp
jne
push
je
cmps
addr16
dec
jne
ins
ins
cmp
out
sti
fnstsw
cmp
or
push
add
push
adc
sub
cdq
out
jno
mov
dec
mov
or
push
pop
sub
fistp
sub
jmp
dec
stos
push
cmp
push
sub
out
or
fnstenv
mov
int3
cmp
xchg
xor
movs
js
mov
and
and
dec
mov
inc
pop
loopne
das
push
pop
pop
mov
cdq
idiv
test
sub
mov
fs
xor
sbb
mov
in
clc
push
pop
add
add
or
mov
push
sub
sub
sub
sahf
push
sub
mov
sbb
fild
or
push
or
mov
dec
out
add
inc
xlat
xchg
mov
push
mov
in
mov
add
mov
loopne
mov
jmp
and
js
mov
in
mov
daa
lock
sar
fmul
dec
cmp
adc
dec
ja
push
shr
cmp
inc
pusha
lods
aad
dec
scas
jo
ficom
rcr
rcl
(bad)
aad
push
jmp
nop
out
jecxz
das
sbb
bound
popa
jno
cwde
sbb
push
pop
or
push
push
test
adc
and
jp
into
ds
inc
mov
(bad)
movs
push
adc
movs
mov
sbb
sbb
pop
bound
rol
adc
loope
int3
push
outs
push
sbb
pop
or
adc
pusha
xchg
push
jne
push
cmc
add
sub
jmp
sub
push
adc
add
div
push
push
js
fistp
xlat
xor
add
fsub
aaa
and
add
lea
push
mov
dec
cmp
pushf
adc
in
aam
addr16
and
adc
lock
xchg
mov
cmp
mov
in
dec
call
mov
and
adc
or
lock
xlat
mov
mul
push
ror
pop
jo
or
pusha
jge
je
xchg
popa
mov
test
paddb
cmp
push
sbb
out
jge
ss
ins
dec
push
and
and
jl
daa
jnp
mov
es
adc
push
push
mov
test
jo
ins
mov
ret
mov
push
es
movs
in
daa
(bad)
pop
sbb
and
add
hlt
mov
xor
inc
dec
pop
pop
push
adc
test
push
jbe
adc
ds
dec
add
repz
add
in
add
js
loop
sbb
sahf
push
pusha
iret
icebp
fimul
clc
lods
sub
test
iret
pop
dec
push
pop
loopne
sbb
push
lods
ss
ror
cli
test
jbe
pop
js
in
and
lea
pop
popa
popa
jg
dec
imul
xor
jl
inc
xor
test
mov
push
and
icebp
xchg
shl
rcr
inc
dec
jne
push
sbb
sbb
sahf
scas
jo
mov
sub
add
add
mov
mov
dec
dec
or
jge
data16
push
dec
jmp
sub
xchg
cs
sti
xor
jle
push
sub
les
push
xor
xor
push
inc
sbb
push
fs
retf
dec
and
jg
adc
xlat
ins
dec
sub
jae
add
ret
sub
pop
fadd
or
dec
ins
cmp
push
mov
ins
sahf
cs
xor
out
inc
cmp
push
jb
clc
sbb
clc
add
ret
mov
cmp
aaa
ja
popa
mov
aaa
xor
sbb
clc
mov
jbe
or
nop
fs
mov
mov
dec
mov
add
push
inc
or
aam
or
imul
mov
rol
(bad)
or
adc
xor
pop
shr
dec
icebp
and
cmp
mov
sbb
cmps
inc
mov
ins
mov
cmps
xchg
and
mov
movs
cmp
mov
jg
mov
mov
pop
les
iret
(bad)
xlat
add
cmp
mov
lock
dec
call
pop
js
cmp
xchg
mov
sbb
or
ja
mov
es
jp
test
or
inc
imul
jge
fsubr
inc
aam
loope
adc
mov
test
push
adc
test
pop
in
lods
test
mov
fcomi
xor
inc
ror
push
add
ins
inc
sar
shl
or
fld
push
add
jno
pop
retf
aas
push
sbb
cmp
push
pop
fiadd
sbb
call
and
adc
adc
sub
(bad)
fiadd
adc
mov
loopne
call
fnsave
xor
mov
adc
rol
mov
xor
pusha
mov
mov
aaa
xchg
jo
push
dec
jl
call
dec
or
(bad)
jmp
sub
shr
pusha
sub
add
ss
popa
cdq
pusha
lds
adc
loope
outs
ins
mov
pop
lea
daa
out
adc
idiv
and
fild
xchg
fist
out
adc
(bad)
jmp
xor
push
cmp
jae
(bad)
and
fs
xor
lods
push
lds
xor
mov
les
push
cmps
scas
mov
mov
scas
call
ja
push
rol
mov
push
loopne
ins
rcl
inc
xor
push
or
or
and
ret
shl
fs
xor
in
rcl
ins
fstp
sbb
xor
cld
and
gs
jns
adc
enter
dec
inc
and
dec
mov
in
inc
and
adc
mov
or
push
fiadd
repnz
sbb
sbb
add
push
call
pop
sbb
pushf
add
test
add
cwde
push
dec
pop
cmp
push
mov
cdq
mov
push
sub
sub
jmp
movs
int3
jne
leave
daa
sbb
dec
fdivp
(bad)
or
lods
pop
jno
add
aad
(bad)
mov
cs
je
add
out
cmp
inc
or
and
mov
add
cmp
or
push
add
sub
push
sub
sub
test
add
cmp
in
ror
push
popa
es
repnz
and
ds
fmul
cld
push
div
je
sbb
cmp
jg
ret
or
(bad)
and
(bad)
lods
push
mov
cmp
adc
adc
add
mov
push
add
sub
cmp
jge
or
add
jmp
daa
fsubr
adc
jl
or
xlat
(bad)
out
jbe
add
ret
idiv
stos
add
lock
scas
sbb
push
push
sub
ret
es
sub
mov
ret
push
mov
inc
(bad)
sar
inc
jl
retf
rcr
cmp
add
adc
sbb
movs
das
hlt
jg
adc
sub
mov
sub
mov
push
and
fadd
push
les
sbb
data16
dec
jl
add
push
ror
(bad)
jne
adc
add
movs
jb
xchg
lahf
xor
arpl
test
sub
lahf
add
cmp
das
and
xor
je
sub
xchg
adc
inc
sahf
jge
lock
xchg
add
add
ficom
mov
xor
sub
sbb
or
into
sbb
shl
push
inc
sub
push
or
js
sbb
pop
adc
test
ja
or
xchg
or
and
dec
mov
pusha
and
dec
daa
pop
in
cmp
adc
fsub
sbb
cmp
test
jl
lods
je
mov
inc
(bad)
mov
jmp
push
mov
call
or
(bad)
daa
rcl
pop
pushf
loope
sahf
(bad)
retf
sub
dec
jb
mov
inc
clc
and
call
pusha
mov
or
je
hlt
add
push
clc
push
xor
rol
mov
movs
scas
(bad)
adc
mov
pusha
cmp
pusha
push
jge
push
sub
sbb
add
sar
push
mov
cmps
popa
js
sbb
or
repz
dec
or
cmps
leave
mov
psrad
ret
scas
mov
cmps
xchg
dec
aam
sbb
lea
arpl
jbe
je
xor
sbb
inc
fbld
jno
pop
jnp
mov
sub
cmc
xchg
xchg
js
jp
jne
hlt
(bad)
outs
clc
ficom
jmp
jo
call
pop
hlt
hlt
lea
sbb
add
ds
xor
jl
sub
xor
int3
adc
retf
or
lods
sbb
add
fist
mov
xchg
push
or
lahf
nop
dec
pop
pusha
fist
mov
(bad)
cwde
pop
jp
push
push
mov
aas
popa
adc
pop
jno
lea
inc
stos
aam
sbb
or
sbb
call
push
stos
and
dec
aam
mov
mov
je
push
je
idiv
in
cmps
fisubr
sub
hlt
or
inc
push
mov
jge
cmp
test
cmp
ss
mov
popf
sbb
lea
xchg
std
popa
mov
out
push
std
dec
imul
mov
mov
or
jl
adc
fmul
pusha
push
loope
data16
ds
test
fist
mov
pop
pop
fs
cmp
jne
cmp
aaa
imul
jmp
mov
arpl
sbb
jmp
sti
mov
cmc
pop
jge
pop
add
sbb
jle
pop
add
push
test
jle
mov
jl
aaa
sbb
jl
jmp
and
inc
mov
mov
lods
repz
icebp
popa
xor
or
retf
rol
mov
shr
aas
enter
adc
xchg
aad
jmp
cmps
jns
in
cmc
or
xor
add
sub
arpl
add
add
add
sub
popf
xor
cmp
rol
xchg
ss
rcr
dec
sub
mov
sahf
rcl
add
cli
push
or
jmp
cld
repnz
add
pop
or
add
pop
ss
or
adc
inc
mov
sbb
retf
fimul
and
adc
pop
div
outs
in
jae
test
test
or
dec
and
or
or
imul
pop
jne
push
mov
imul
lds
jp
sar
sbb
imul
pop
into
dec
out
out
and
adc
xchg
jae
mov
inc
push
add
mov
inc
lock
(bad)
in
dec
push
sub
add
div
mov
sub
or
ror
fscale
clc
(bad)
mov
ins
jle
pop
in
pop
xchg
inc
outs
mov
inc
push
sbb
ror
mov
pop
inc
or
and
mov
add
inc
sbb
xor
call
sub
dec
dec
enter
add
mov
add
popf
xchg
js
and
add
dec
dec
mov
dec
or
pop
imul
sub
stc
add
mov
call
xchg
sbb
adc
push
movups
inc
and
das
add
push
das
inc
inc
xor
push
or
enter
dec
adc
lods
cmp
jne
out
xchg
mov
adc
pause
push
mov
add
ds
scas
loopne
stos
fwait
mov
fist
add
movs
or
out
cmp
adc
dec
mov
ins
or
add
pop
jl
pop
fst
and
jo
mov
clc
call
call
push
lea
cmp
sbb
lea
push
lea
dec
jmp
in
jns
pop
call
push
dec
mov
sbb
sar
cmp
mov
rol
push
sub
xchg
js
ins
ror
jb
or
sub
jbe
clc
inc
add
jle
push
mov
push
add
inc
jl
inc
pop
cmp
pop
fsubp
mov
(bad)
fimul
ret
xor
es
jns
adc
js
mov
cmp
loop
loop
push
jne
add
jmp
hlt
add
jo
test
cmp
jmp
push
js
inc
inc
js
cdq
aaa
jl
(bad)
mov
in
dec
add
sub
or
loopne
movs
repz
call
scas
ficom
lahf
imul
outs
push
push
xchg
jmp
pushf
loopne
mov
pop
sbb
cmp
sbb
push
cmp
jne
bound
inc
fs
cmc
pop
push
iret
cmps
daa
cmp
jne
jo
xor
fs
xchg
call
inc
rdpmc
leave
push
add
lds
shl
cmp
pop
sbb
fiadd
(bad)
loopne
lock
pop
xor
dec
clc
adc
movs
pop
arpl
enter
mov
xchg
xchg
addr16
add
cli
scas
or
inc
add
test
mov
(bad)
mov
add
clc
cmp
hlt
movs
fwait
xor
rcl
jne
cmp
push
test
mov
push
mov
out
and
mov
fadd
add
jo
push
jae
add
xchg
(bad)
fsubr
fisub
rol
or
icebp
adc
(bad)
int3
nop
lea
test
test
xor
scas
jp
push
aad
js
xor
es
pusha
outs
xchg
or
dec
daa
push
adc
jnp
push
add
adc
jne
sbb
xchg
inc
jo
sbb
add
outs
lock
mov
sub
cwde
push
add
jmp
fwait
or
sub
adc
and
sub
nop
(bad)
push
adc
data16
mov
test
jnp
push
arpl
icebp
dec
add
int3
sbb
mov
pop
pusha
mov
fisttp
push
call
add
sbb
ficom
call
cmp
ficom
cmp
lds
mov
and
cwde
je
jo
sbb
jo
sub
pop
xor
inc
or
lea
dec
add
sbb
jmp
test
cs
sbb
popa
je
je
and
pop
jmp
push
adc
retf
and
cmp
fwait
xchg
xor
adc
mov
jle
sub
fscale
dec
cld
inc
push
sub
cmp
push
js
pusha
rol
cmp
jo
cmp
xchg
cwde
aam
or
ins
data16
sub
add
inc
ficomp
cli
mov
(bad)
imul
sbb
inc
cmp
jne
mov
out
loope
shl
fild
fmul
add
outs
mov
test
mov
lds
sub
adc
arpl
lock
cld
jb
gs
mov
adc
mov
inc
je
ffreep
or
arpl
outs
outs
je
outs
ins
jae
add
scas
mov
xor
ins
fsub
mov
adc
xor
jno
dec
rcl
mov
and
sub
cli
clc
mov
and
xor
sub
loopne
xchg
cmp
xchg
lahf
icebp
ret
cmp
lock
adc
dec
mov
pop
sbb
jp
cdq
test
add
(bad)
jne
ins
sub
jmp
(bad)
cld
sbb
sub
xchg
adc
xor
sub
rol
scas
xor
inc
outs
pop
xchg
sbb
mov
xchg
iret
cs
and
cli
loop
sub
int3
cmp
push
jnp
xchg
cs
adc
sub
xor
or
push
(bad)
xor
inc
lock
daa
leave
xchg
in
cs
movntps
in
jae
sbb
jp
jl
mov
call
mov
or
addr16
test
cmp
fs
dec
xchg
or
rcr
dec
ss
cwde
add
mov
xlat
xor
add
jp
xor
pop
and
cmp
jle
sub
mov
fdivr
test
lock
pop
dec
jne
dec
adc
pusha
in
inc
mov
pop
in
scas
es
fsub
push
mul
sbb
stc
xchg
loop
xchg
fsub
test
inc
pop
mov
lock
and
daa
jecxz
test
test
xchg
pop
mov
call
mov
cmps
in
push
popa
dec
test
sbb
pusha
daa
mov
or
pop
pop
shl
(bad)
test
sub
pop
not
jl
mov
dec
stc
mov
ret
inc
sub
sub
mov
cmp
jne
(bad)
in
outs
inc
add
inc
add
add
jmp
mov
xor
pop
mov
mov
int
retf
sar
add
and
sub
bound
push
pop
mov
xor
or
ins
mov
fstp
test
inc
push
mov
mov
push
shl
into
je
add
in
aad
add
mov
mov
pop
ins
icebp
lea
movs
movs
mov
push
pusha
pop
aaa
adc
test
cmp
mov
call
je
pop
push
cmp
ins
sub
add
lea
das
mov
imul
je
pop
cmp
adc
push
adc
jp
cwde
rol
mov
es
mov
push
dec
jmp
out
lods
add
push
inc
ja
and
repnz
add
pusha
push
xlat
adc
rol
stos
pop
dec
push
fs
arpl
or
xor
or
push
in
add
cmps
xor
sub
fadd
jae
test
je
or
std
inc
adc
add
retf
dec
nop
sbb
sub
arpl
inc
adc
pusha
add
mov
rol
jmp
add
push
hlt
xchg
push
xlat
push
fcomp
xor
icebp
cdq
sti
test
jo
pusha
push
outs
push
pusha
add
mov
mov
mov
pop
push
dec
into
mov
and
adc
sub
push
push
dec
dec
enter
adc
(bad)
scas
cmp
test
cmp
je
stos
mov
dec
unpcklps
inc
adc
add
push
inc
jbe
sbb
clc
jle
add
or
das
aaa
cmps
int3
dec
outs
je
inc
repz
ins
cmps
lock
push
jmp
add
xchg
nop
xlat
or
mov
lods
test
xchg
adc
dec
loopne
test
or
mov
push
push
adc
add
adc
rcl
sbb
scas
loopne
in
mov
and
inc
and
shl
sub
sub
in
jge
jl
rcr
jl
mov
jmp
into
mov
loopne
daa
aaa
inc
or
in
push
fistp
fimul
sub
test
loopne
mov
mov
jg
jmp
and
push
and
imul
add
inc
push
inc
sbb
in
test
mov
sbb
adc
sti
mov
xchg
fwait
add
push
imul
push
call
popf
mov
jo
mov
sti
add
fscale
nop
ins
fdiv
pushf
(bad)
cmp
cmp
add
sbb
ins
xchg
clc
cmp
add
add
ins
setbe
or
push
clc
rcr
aad
inc
lods
movs
pop
pop
push
popa
adc
and
mov
popf
pop
push
or
test
add
scas
hlt
adc
push
in
mov
xchg
mov
mov
mov
mov
imul
retf
mov
xor
xchg
dec
add
pop
add
push
cmp
fld
push
pusha
xchg
push
xchg
push
add
mov
shl
mov
xor
or
add
aas
inc
cmp
and
js
pop
sbb
lea
cmp
sub
or
js
add
add
ret
test
mov
push
aaa
push
jmp
pop
fmul
add
jg
sti
push
cmp
daa
xchg
cmp
out
imul
adc
je
lock
imul
mov
add
and
les
out
xchg
jbe
mov
aaa
pusha
jb
stos
jnp
(bad)
scas
and
mov
jne
add
test
mov
jmp
fcom
mov
or
in
fstp
in
movzx
cs
in
shr
call
aas
sbb
push
test
das
sbb
or
adc
fstp
mov
mov
mov
inc
sbb
lahf
dec
push
cmps
cs
cmp
jbe
cmc
out
add
mov
data16
lods
in
inc
pop
or
cmp
inc
pop
lods
fdiv
test
sti
bound
sbb
jb
push
jl
pusha
add
pushf
mov
outs
test
mov
pop
inc
test
or
mov
dec
push
ja
daa
rol
call
out
aaa
or
cmp
sbb
push
cmp
sysenter
jle
mov
imul
inc
push
cs
push
mov
and
cwde
fdiv
xor
pop
or
pop
fmulp
and
inc
sbb
sub
dec
jne
aam
enter
sti
pop
cmp
fmul
aaa
idiv
adc
pop
imul
jne
lahf
mov
or
dec
fcomi
outs
pop
mov
sub
add
sub
inc
add
push
pushf
add
sub
pop
pop
sub
and
or
push
pop
cmp
rcr
mov
sub
xlat
les
push
cld
or
mov
mov
test
sbb
push
sbb
les
retf
or
adc
jge
push
lock
fsubrp
fsub
aam
cs
pop
outs
pop
aam
push
xor
jo
cmp
sti
and
mov
xchg
rcr
pushf
in
push
popf
(bad)
cdq
retf
push
xchg
mov
cmc
mov
mov
leave
jne
push
push
outs
mov
ror
(bad)
and
out
sbb
sbb
ds
mov
cmp
mov
loopne
adc
or
popa
mov
mov
ds
push
add
sub
add
inc
ins
es
pop
jl
or
xchg
xor
push
adc
adc
mov
enter
push
pop
xor
fmul
xor
xor
ret
popf
xchg
xchg
push
push
push
jg
test
push
pusha
push
pmuludq
fld
adc
push
inc
add
js
pop
das
ret
sbb
scas
pop
enter
and
out
mov
int3
dec
sub
adc
ret
ja
push
cli
xchg
adc
xor
add
movs
xchg
pop
push
xchg
outs
pop
jno
lds
push
xor
cld
adc
sub
dec
outs
adc
or
icebp
push
dec
sbb
jmp
(bad)
push
test
pop
and
mov
cmps
or
outs
fcom
add
ror
xchg
pop
xor
cmp
stc
test
pop
sub
dec
enter
push
xor
push
jle
imul
inc
cdq
add
cmp
mov
ret
popf
or
adc
push
xchg
cmc
jo
scas
sub
mov
mov
sub
push
inc
push
mov
jnp
and
and
push
inc
jbe
xchg
cmp
test
push
out
add
push
push
repnz
and
pop
mov
add
movs
arpl
add
mov
movs
rol
cmp
aas
mov
push
(bad)
fiadd
mov
jbe
mov
mov
adc
pop
mov
adc
mov
adc
jge
adc
mov
fild
or
or
bsf
(bad)
jo
fs
mov
enter
es
cwde
cmp
out
mov
or
fwait
call
mov
call
mov
dec
xchg
push
movs
mov
cld
and
jle
enter
jo
cs
inc
pop
jmp
xchg
push
or
pop
jg
add
clc
cli
or
hlt
inc
std
add
cmp
xchg
nop
mov
rcl
mov
bound
scas
xor
dec
jp
mov
pop
je
cs
mov
dec
rol
fild
rol
xchg
push
dec
pop
push
jg
push
xor
inc
mov
or
fmul
inc
adc
push
ss
popw
push
mov
sub
dec
adc
push
and
xor
test
dec
add
sbb
xor
pop
test
adc
lods
or
cmp
je
xor
dec
lock
ja
int3
jmp
mov
inc
adc
inc
add
shl
push
in
sbb
(bad)
rol
sub
add
adc
leave
mov
or
das
(bad)
jmp
and
stc
call
or
jmp
adc
mov
ins
sub
and
pusha
xor
adc
and
test
pop
test
jo
mov
mov
push
push
outs
sbb
add
in
stos
sti
outs
adc
cmp
clc
es
enter
mov
add
mov
add
pop
imul
imul
xor
cs
sub
popa
mov
push
push
and
in
or
pop
push
fadd
neg
and
pushf
push
push
fld
sbb
das
(bad)
sub
push
retf
dec
ror
push
movups
add
aaa
push
mov
je
call
inc
mov
push
test
jmp
cmps
imul
movs
add
cmp
and
ficom
out
inc
iret
pushf
xor
stos
sbb
in
pusha
or
mov
add
pop
je
ret
add
dec
pop
push
in
mov
loop
or
daa
sub
push
adc
enter
and
mov
add
aad
ret
fsub
push
mov
in
push
rep
ins
xor
pop
pop
pop
adc
je
dec
mov
cmp
mov
xchg
mov
loope
or
jne
cmp
lahf
shl
out
pop
jae
push
arpl
in
push
in
sub
pop
sbb
mov
shl
add
dec
xor
rcl
mov
xchg
inc
or
push
aaa
pop
mov
inc
std
sub
sub
scas
stc
mov
pop
adc
pop
lock
pusha
(bad)
jbe
addr16
into
ds
sbb
xor
mov
jnp
pusha
lock
mov
push
pop
adc
int
nop
and
call
push
in
call
mov
mov
frstor
xlat
push
les
fld
add
rol
or
xor
or
fwait
nop
sub
jns
adc
sahf
mov
xchg
adc
retf
mov
xchg
pop
or
call
aas
popf
pop
adc
pop
mov
sub
js
jl
lods
add
ins
icebp
adc
sbb
hlt
sbb
xor
pop
add
test
scas
jne
mov
aam
das
js
jo
es
pusha
ins
bound
add
mov
push
call
in
setg
mov
push
mov
inc
or
mov
cmps
jo
shl
(bad)
cmp
pop
sub
push
inc
add
outs
ins
enter
add
push
dec
add
jae
data16
add
xchg
push
add
pop
add
data16
bound
adc
dec
xchg
call
push
popa
push
add
pushf
xlat
sub
retf
add
in
call
inc
push
push
push
loope
xchg
movs
push
and
stc
outs
push
dec
xor
ss
mov
aad
ins
rcl
(bad)
clc
(bad)
pop
add
rol
retf
das
imul
jmp
and
xor
mov
or
xor
rol
ds
or
pop
or
pusha
push
push
cmp
or
sbb
push
sbb
inc
or
fsubr
gs
or
or
mov
sub
je
dec
je
add
mov
dec
or
jae
in
je
mov
ret
ret
sbb
and
sbb
dec
pusha
jbe
push
sbb
sbb
rol
and
sbb
xchg
mov
cli
imul
ss
retf
aam
jge
aas
jmp
add
push
or
xor
mov
jo
(bad)
lock
cmp
cmp
mov
sbb
inc
inc
xor
popf
adc
cwde
sub
push
and
and
or
(bad)
add
adc
shl
add
adc
inc
sub
pop
xor
loopne
xor
sbb
pusha
xor
je
pop
add
or
repnz
or
fcom
(bad)
fs
dec
cmp
ja
xchg
mov
xchg
ret
and
ds
mov
(bad)
test
lock
ret
jbe
mov
push
sub
movs
inc
adc
sbb
push
or
push
rcr
push
inc
pop
add
mov
arpl
pop
lods
pushf
dec
outs
or
arpl
push
jnp
cmp
sbb
(bad)
or
push
jmp
pop
(bad)
out
lods
(bad)
lods
inc
xchg
jmp
sbb
call
sbb
xchg
(bad)
sbb
sbb
faddp
push
cwde
sbb
shl
dec
es
push
cwde
push
xor
or
jbe
adc
adc
adc
jo
das
adc
mov
cmp
mov
adc
bound
push
popa
and
lahf
data16
mov
in
xor
repz
mov
or
les
into
loop
push
cmp
dec
push
loopne
or
push
adc
adc
jg
pcmpgtb
or
(bad)
push
call
push
lahf
dec
push
mov
shl
retf
jecxz
sbb
pop
mov
inc
pop
(bad)
repnz
sbb
inc
outs
jb
pop
mov
movs
(bad)
jl
sahf
enter
add
push
dec
or
or
inc
pop
fnstsw
ret
addr16
sub
inc
stos
cmp
shl
add
cmp
ja
inc
push
setl
mov
loope
bound
or
pop
cwde
adc
movs
enter
adc
inc
cli
test
jmp
push
fiadd
or
adc
add
xchg
mov
xchg
test
dec
rol
(bad)
cmc
dec
dec
cdq
inc
(bad)
jo
imul
cmp
adc
inc
xchg
push
add
test
jo
adc
popf
scas
push
pop
or
or
cmp
test
test
lock
ja
inc
mov
loop
cmc
bound
inc
and
outs
loopne
xchg
sbb
cmp
mov
(bad)
std
jecxz
mov
lock
shl
(bad)
(bad)
repnz
lods
sub
scas
aas
daa
mov
(bad)
sbb
fcmovbe
and
inc
mov
lahf
addr16
ror
sbb
sub
lock
repnz
add
inc
cmp
xchg
jp
nop
cwde
jns
cmp
jle
jbe
cmps
ds
fs
test
sahf
inc
into
sub
sbb
sbb
pop
lahf
sahf
cmp
ins
xor
mov
rol
add
cmp
dec
mov
test
jne
add
mov
push
in
mov
repnz
mov
mov
inc
push
sub
push
pop
hlt
adc
pop
fs
mov
inc
movs
lahf
add
pop
test
jp
sbb
mov
push
mov
lock
shl
shl
outs
sub
fs
mov
nop
mov
loope
imul
push
repnz
retf
or
mov
dec
jne
push
jns
add
fbld
push
cld
xor
push
add
push
pusha
sbb
loopne
fidivr
dec
dec
pop
mov
loop
fsubr
xor
add
dec
movs
lock
movs
aam
mov
popa
adc
xchg
jmp
inc
adc
clc
fs
data16
mov
jno
xor
push
ret
popa
mov
pop
sub
sub
test
sar
cmp
sbb
movs
aas
bound
shl
and
add
or
aam
push
mov
(bad)
call
loopne
sbb
add
jo
push
mov
ins
or
dec
push
int3
enter
pushf
pop
mov
cdq
(bad)
mov
call
imul
aam
popf
sbb
les
and
push
jmp
cmp
ret
test
add
jecxz
fimul
or
add
push
in
leave
mov
add
in
and
push
push
jecxz
mov
cmp
jl
mov
out
neg
jne
nop
popf
ss
xchg
sbb
push
sub
push
jl
sub
xchg
push
hlt
pop
lea
je
add
lods
cmp
test
pop
call
adc
mov
mov
push
add
fdivr
in
or
inc
dec
jb
mov
dec
ins
aaa
jmp
(bad)
sub
sbb
mov
jbe
or
fmul
pushf
rol
push
pop
test
fsubp
xchg
lods
stos
fcmovnb
adc
mov
loopne
je
jmp
pusha
add
mov
jl
lds
inc
cli
sub
or
outs
test
movs
push
push
mov
lea
(bad)
push
ins
sbb
jo
js
sub
les
test
pusha
es
adc
movs
mov
cmovb
push
mov
lods
sbb
lods
pop
add
sub
jnp
and
es
movs
popf
pop
or
add
and
call
je
or
fsub
dec
or
pusha
sbb
lods
call
add
jle
jge
loopne
stc
mov
sub
ss
(bad)
xor
movups
rcr
jae
mov
adc
jae
into
mov
lods
jge
ds
dec
je
push
inc
sub
test
dec
mov
jle
das
inc
pop
push
clc
sti
and
rcl
movzx
and
adc
(bad)
push
or
cmps
inc
in
jmp
aam
mov
aas
pop
or
fstp
jbe
cld
(bad)
sub
mov
sbb
or
sbb
add
ss
mov
adc
js
cli
adc
sti
add
cs
and
jo
mov
push
stos
xor
mov
lock
repnz
retf
sbb
rol
rol
and
mov
loope
push
cmp
dec
cmp
jne
sbb
mov
rcl
dec
frstor
pop
outs
and
mov
mov
(bad)
int3
ficomp
ret
pop
pop
and
jp
ds
mov
loopne
add
or
mov
call
cwde
test
jl
dec
loopne
loopne
out
add
scas
add
rcl
xchg
adc
sub
mov
int3
clc
test
pop
inc
les
ror
ins
sbb
mov
and
and
test
add
and
aam
call
cmps
and
push
and
mov
add
enter
out
movs
js
jp
enter
(bad)
or
mov
xor
sub
xor
jge
fmul
mov
pop
xor
mov
jecxz
mov
fs
outs
shl
xchg
fnsave
mov
jbe
arpl
xchg
outs
in
cmp
jle
movs
ret
push
call
js
je
pop
mov
add
add
xchg
or
test
push
retf
rol
adc
pop
fimul
add
ins
stos
push
sbb
pushf
mov
mov
test
test
and
mov
dec
push
add
pop
add
push
xor
xchg
xor
jecxz
jge
inc
pusha
jbe
dec
outs
test
adc
dec
stc
sbb
xchg
rcl
ss
jmp
pop
inc
jno
cmp
xchg
inc
inc
xchg
jne
lahf
add
pop
loopne
mov
in
(bad)
adc
scas
add
jle
adc
push
in
cld
pusha
push
jmp
ret
loope
push
or
pop
std
fdivr
jge
xor
ror
mov
jb
adc
add
shr
sets
add
sbb
xor
js
fiadd
push
sbb
movups
ins
xor
(bad)
in
push
bound
or
xchg
and
dec
pop
ins
push
jg
inc
add
jnp
jo
fcomp
sbb
icebp
jmp
add
mov
or
loopne
scas
mov
nop
push
ret
push
in
mov
aas
push
cmp
cmp
fst
das
mov
lea
mov
or
sbb
mov
and
inc
mov
loop
mov
xchg
cdq
inc
mov
cli
into
or
push
std
movzx
mov
inc
adc
xor
leave
jle
adc
push
std
mul
fs
sbb
mov
xor
movzx
data16
dec
mov
pop
xchg
(bad)
repnz
cmp
je
mov
mov
xor
into
mov
add
adc
push
add
fistp
push
inc
div
sub
enter
xor
mov
sahf
sbb
fdivp
pop
out
sub
and
add
mov
loope
enter
daa
dec
daa
mov
push
pop
enter
mov
clc
cmp
je
sub
cmp
sub
mov
add
push
ret
jno
fisub
je
sub
sbb
lods
shl
test
popa
jo
movs
cld
test
cmp
adc
fcmovu
cmp
shl
mov
test
adc
jo
dec
inc
jl
emms
icebp
pop
inc
xor
or
and
loopne
push
push
cmp
mov
sbb
dec
jne
pop
cmp
je
call
(bad)
mov
mov
sbb
push
test
jne
outs
push
or
mov
pop
ss
jmp
add
mov
and
cmp
push
leave
es
push
pop
pop
or
dec
das
stos
movs
push
fcomp
cmp
int3
int3
adc
bound
or
sbb
inc
sbb
out
inc
add
xor
or
loope
sub
or
enter
loopne
sub
mov
stc
str
popf
js
out
mov
cmp
aad
inc
sbb
or
js
dec
scas
or
je
ret
cmp
add
je
push
outs
jb
inc
outs
je
jb
inc
outs
je
outs
ins
or
xor
call
ins
cs
je
inc
je
ins
jae
ret
push
inc
ins
ins
imul
imul
outs
outs
fadd
push
gs
and
push
or
popa
je
push
or
jbe
outs
sbb
push
outs
jb
rol
mov
or
dec
inc
jb
ja
fld
rol
pop
inc
inc
add
add
push
jae
imul
adc
sbb
arpl
or
or
inc
ins
popa
addr16
int
test
inc
popa
ins
add
ins
mov
ret
push
clc
adc
mov
fld
lods
cmp
aaa
out
push
adc
pop
outs
mov
jbe
dec
jnp
adc
pop
lea
sbb
cmps
fnstenv
push
cwde
retf
cmps
shl
lock
pop
xor
dec
es
jnp
dec
push
pushf
jge
cmps
stc
jle
push
dec
add
sar
sbb
ins
jmp
add
pop
push
or
push
adc
push
xchg
add
mov
and
push
lods
push
or
push
sub
ins
fwait
out
outs
xor
adc
push
add
push
adc
push
mov
sti
sahf
or
mov
push
fmul
ss
frstor
push
movs
retf
(bad)
loopne
ret
hlt
cmps
sti
call
lods
mov
push
pop
fld
test
xchg
push
inc
mov
push
shl
into
push
fldcw
push
sub
fs
je
cwde
mov
mov
jo
lock
ss
dec
push
add
sbb
dec
pusha
clc
or
jne
inc
and
ror
pop
outs
ins
outs
loopne
inc
sub
or
pop
xchg
adc
loop
mov
lds
or
outs
push
imul
mov
or
xchg
push
xchg
pushf
xor
rol
outs
ja
aam
ja
hlt
sub
inc
ret
stos
aad
(bad)
(bad)
fcomp
mov
(bad)
push
inc
push
push
gs
mov
push
xor
cmovbe
mov
jo
cmp
xchg
scas
fcom
pop
sub
xor
inc
cmc
outs
xor
call
fnstenv
dec
movs
add
cld
(bad)
mov
mov
mov
mov
mov
(bad)
mov
inc
sub
movs
jp
push
xor
mov
dec
push
cmp
stos
push
inc
xor
push
push
jo
pusha
bound
add
xchg
call
add
sbb
aam
mov
mov
ja
fs
pop
sti
loope
out
pop
xchg
call
mov
push
add
ret
das
xor
add
jo
or
mov
(bad)
mov
inc
ficom
push
push
xchg
push
ret
sub
nop
inc
or
dec
add
pusha
outs
ficomp
mov
mov
popa
jae
jmp
inc
test
dec
sbb
fwait
cmp
pop
fmul
fisub
push
je
nop
and
bound
push
push
jne
daa
pop
sub
ins
sbb
mov
adc
rcr
inc
stos
nop
rcl
pusha
xlat
in
scas
int
jmp
pop
adc
out
sti
inc
and
cmp
fnstsw
inc
and
inc
outs
arpl
xor
cmp
gs
or
cs
mov
shl
ds
xor
outs
inc
sbb
test
imul
out
sbb
popa
into
mov
adc
inc
or
ret
push
jl
adc
addr16
jb
jmp
add
cmp
mov
xchg
push
mov
popa
imul
pop
hlt
mov
fcomp
add
das
and
xchg
lods
add
add
xor
pop
jo
mov
dec
dec
nop
fs
in
cs
and
inc
jmp
sbb
retf
jo
mov
sbb
add
mov
test
je
sbb
sti
gs
inc
outs
inc
push
sbb
(bad)
ins
adc
pusha
cmp
cdq
sbb
lock
hlt
pop
add
je
or
cwde
int3
inc
xlat
rcr
xor
xchg
push
adc
jb
mov
test
add
arpl
or
icebp
adc
adc
push
and
push
or
dec
imul
xchg
sub
dec
call
or
dec
jl
add
xor
enter
not
pop
and
ror
div
jo
push
jne
jbe
(bad)
(bad)
or
pop
(bad)
add
js
cdq
xchg
pusha
call
jecxz
fldenv
xor
sub
push
sbb
test
pop
es
outs
jne
push
cwde
jmp
test
xchg
add
aas
daa
add
jne
movs
cmp
jmp
into
ja
xchg
lods
imul
sub
pop
imul
sub
mov
inc
dec
call
inc
jo
dec
test
push
imul
jo
inc
push
ret
pop
push
sbb
in
je
test
gs
imul
mov
mov
or
sub
dec
outs
inc
sub
imul
fdivr
pop
leave
mov
adc
pop
enter
xor
lds
push
cs
inc
sbb
add
fidivr
cwde
dec
call
push
xchg
and
cli
inc
pop
repz
sbb
gs
or
inc
mov
xor
dec
outs
inc
push
imul
jae
inc
sbb
pop
inc
xor
mov
push
push
xchg
imul
gs
push
gs
add
sahf
add
ds
inc
xor
push
jb
mov
fisub
jo
out
andnps
(bad)
out
shr
pop
mov
push
xor
outs
test
and
jae
dec
fadd
dec
ss
pop
daa
mov
les
clc
lock
xor
jmp
aaa
sub
inc
cmp
inc
ja
sbb
inc
pop
pusha
pop
xor
dec
cmp
loop
in
loope
push
adc
stos
dec
cmp
sbb
outs
jle
stos
pushf
leave
rcr
xchg
inc
pop
dec
cmp
add
inc
inc
inc
or
xchg
mov
(bad)
and
inc
inc
inc
inc
inc
imul
inc
mov
fisttp
sub
mov
cli
mov
ins
xchg
pop
mov
and
mov
mov
loop
aam
push
inc
pop
sub
dec
ret
imul
test
push
push
push
fld
mov
dec
idiv
int3
push
xchg
shl
adc
mov
fcom
push
fistp
icebp
jmp
out
push
int3
pop
dec
in
and
pop
push
not
into
or
loop
dec
jle
xchg
mov
in
sub
dec
fsubr
test
push
hlt
inc
test
enter
push
push
imul
test
dec
inc
fcmovnbe
ins
pop
inc
inc
push
ins
inc
dec
push
pop
out
mov
ins
push
cld
or
pop
xchg
pop
popa
push
xchg
or
push
dec
or
ss
shl
es
je
xchg
mov
or
mov
push
test
(bad)
push
cld
jge
out
loopne
push
push
je
mov
sbb
mov
ins
push
inc
inc
js
push
repz
mov
faddp
sub
adc
mov
js
(bad)
dec
movs
outs
addr16
sbb
or
inc
cmp
test
cmp
add
dec
aaa
out
jg
ror
or
jae
lods
ins
stos
cli
dec
pushf
push
or
sub
test
jns
adc
mov
sahf
popf
xchg
or
gs
imul
jg
push
inc
dec
imul
mov
in
pusha
dec
inc
dec
jl
mov
add
mov
rol
sub
cdq
hlt
les
mov
in
imul
push
inc
dec
and
jne
data16
push
fidiv
nop
inc
call
add
ins
push
xchg
rcr
jo
pop
mov
add
fs
xor
jne
arpl
mov
bound
sar
fnstsw
dec
jne
(bad)
retf
mov
out
clc
outs
sub
sar
sbb
mov
fimul
push
dec
add
inc
jmpw
ins
push
cmps
aam
cld
call
fisttp
(bad)
repnz
inc
das
jns
popf
(bad)
mov
sub
dec
add
push
call
(bad)
adc
push
in
outs
cli
or
adc
add
jmp
mov
mov
or
neg
sbb
inc
push
movs
ss
push
fs
aam
mov
push
mov
or
aad
sub
aas
loop
pusha
call
pop
push
cmp
and
jb
mov
and
mov
ja
ins
sbb
test
pop
das
cmc
(bad)
cmp
btr
outs
add
outs
push
fmul
cmp
add
pop
aas
fwait
push
inc
gs
add
push
lds
aam
fs
int
mov
cmp
pop
pop
call
jecxz
xor
adc
popf
and
inc
and
jg
aad
ins
mov
pop
ret
jmp
dec
mov
add
cmp
push
fcmovb
in
or
add
and
or
clc
add
add
xlat
ret
adc
pop
fmul
cmp
ins
ret
push
cmp
dec
fisttp
pop
fld
add
imul
jge
push
retf
push
dec
or
push
loopne
dec
and
sub
pop
fwait
cmc
mov
mov
movs
add
test
inc
mov
sbb
test
movd
(bad)
or
dec
cld
or
or
xchg
mov
cld
loopne
in
pop
fiadd
add
add
stos
loope
rcl
push
mov
and
push
aas
sub
push
xor
outs
leave
xor
mov
push
jno
fld
or
popf
inc
in
mov
rol
adc
or
out
ss
scas
jnp
lds
inc
pushf
mov
sbb
or
sysret
mov
stos
ror
sgdtd
inc
bound
shl
pushf
in
jmp
pop
push
in
ror
ltr
nop
add
pop
aam
pushf
fild
or
xor
shr
retf
retf
test
push
adc
stos
inc
dec
sar
gs
dec
setns
aam
adc
popa
scas
adc
outs
inc
mov
jo
movlps
xchg
dec
fs
adc
repnz
cmp
push
sub
pusha
mov
inc
adc
mov
addr16
ss
mov
in
mov
outs
push
inc
xchg
ror
xchg
jp
outs
or
scas
dec
int3
xchg
xchg
pop
sbb
dec
sub
fstp
js
nop
imul
sbb
(bad)
call
or
popf
lea
xchg
pop
or
xchg
mov
pop
int
adc
sbb
push
sar
push
shr
cwde
push
sbb
sub
inc
pop
mov
inc
aas
sub
ss
and
jne
mov
inc
push
out
pop
dec
sub
mov
adc
and
pop
cs
inc
and
ins
mov
pop
mov
mov
loopne
mov
xor
pop
mov
ror
and
sbb
pop
pop
jno
fsubr
inc
dec
popa
push
ja
jo
or
add
pop
(bad)
jmp
xchg
push
push
or
dec
push
pop
pop
or
sub
jb
xchg
dec
mov
outs
xchg
pop
sub
sub
mov
out
hlt
popf
test
dec
dec
or
xor
mov
das
clc
dec
pop
fnsave
push
pop
pop
enter
adc
mov
or
(bad)
fdivr
lods
inc
cmps
xor
jmp
and
inc
xor
jb
retf
lods
inc
inc
mov
push
fadd
sub
push
dec
adc
mov
dec
(bad)
mov
inc
mov
and
xor
js
add
scas
(bad)
cmp
sub
es
cmp
and
fist
sbb
xor
mov
and
xor
sub
cmp
ds
inc
stos
add
in
jl
cmps
or
and
cmp
cdq
inc
add
sub
js
cmp
ja
fwait
sub
pop
inc
inc
add
jb
add
js
je
inc
jae
xor
test
add
pop
ror
mov
dec
gs
les
inc
ds
inc
dec
out
out
cmp
outs
xchg
dec
inc
pop
or
pusha
dec
dec
pop
dec
push
jo
inc
sbb
dec
pop
add
inc
jmp
and
nop
or
sbb
mov
mov
dec
mov
sub
rol
add
stos
add
push
(bad)
(bad)
sbb
add
inc
inc
add
or
cs
inc
loop
loope
push
inc
inc
inc
inc
jne
mov
inc
push
loop
dec
ins
inc
inc
inc
inc
xchg
mov
inc
inc
and
mov
inc
inc
lods
shl
sbb
inc
inc
inc
cs
imul
in
in
pop
inc
inc
inc
inc
jl
ret
inc
cs
add
es
push
nop
mov
inc
cs
and
dec
ins
xchg
inc
inc
inc
inc
mov
clc
adc
fistp
add
xchg
sub
or
add
pusha
or
mov
and
rol
outs
cmp
lods
or
sbb
out
cmps
inc
iret
repz
push
xchg
test
popf
mov
or
scas
pusha
nop
sbb
daa
rcr
cmp
sar
(bad)
mov
sbb
mov
minps
std
push
enter
call
imul
fisubr
push
arpl
inc
cs
push
int
or
pusha
push
jnp
sub
push
or
popa
lock
gs
xor
fistp
cmps
pop
sub
iret
mov
add
in
sbb
call
add
xchg
add
repz
xor
and
cmp
(bad)
adc
ins
outs
ss
or
mov
shl
pop
inc
pusha
jecxz
sub
pop
inc
sbb
add
out
(bad)
jmp
mov
push
or
mov
ins
and
lock
(bad)
sub
push
add
and
mov
mov
add
mov
dec
lock
cmp
cmps
inc
cmps
jae
das
cwde
xor
pop
and
add
and
cmp
imul
addr16
cs
stos
in
xlat
adc
mov
movs
imul
lea
sbb
or
sbb
dec
ret
add
loop
test
pop
lea
in
fs
xchg
pop
and
nop
and
test
dec
or
and
add
and
xchg
ror
push
movs
test
push
and
sub
xor
xchg
push
xor
sub
push
pop
enter
xchg
das
xor
cmp
dec
outs
push
call
inc
mov
xchg
mov
std
inc
pop
add
stc
xor
inc
cli
inc
(bad)
adc
test
sbb
scas
push
inc
jmp
mov
loope
pop
adc
push
gs
dec
or
shl
stos
inc
xchg
or
add
dec
mov
cmp
in
mov
jmp
test
or
inc
push
rol
stos
xchg
push
dec
shr
inc
enter
inc
ror
add
adc
push
dec
mov
mov
or
mov
ret
cmp
dec
inc
adc
sub
shl
pop
xchg
shl
add
enter
into
mov
in
repz
cmp
enter
test
enter
xor
enter
(bad)
jmp
enter
je
enter
mov
enter
push
and
cmp
enter
mov
enter
cs
jns
enter
mov
enter
push
jp
enter
shl
clc
sub
enter
jo
ror
in
out
stc
xor
inc
fist
retf
jle
add
sti
popf
cmps
mov
xchg
lea
xor
xor
xchg
push
xchg
ja
mov
xchg
push
pusha
out
or
mov
jnp
mov
push
js
add
mov
mov
test
push
push
clc
jmp
dec
dec
push
nop
mov
push
rol
daa
mov
mov
and
push
add
mov
fdivr
movs
push
dec
dec
es
xchg
ins
push
xlat
mov
mov
mov
inc
fnstcw
add
add
inc
loopne
add
adc
inc
out
sbb
scas
jg
das
and
push
inc
jne
je
outs
add
lea
imul
das
inc
loop
fild
dec
or
mov
call
in
push
je
pushf
push
aam
pop
sbb
or
dec
mov
ror
outs
xor
adc
out
add
popa
cmps
mov
xchg
mov
mov
jae
test
inc
add
pusha
loop
xchg
scas
mul
push
dec
aam
jb
and
sub
add
lahf
stos
jae
imul
xor
jne
sbb
stos
inc
inc
push
mov
adc
out
(bad)
(bad)
add
mov
int3
push
push
in
nop
or
ror
movs
or
adc
lds
test
outs
das
cmp
es
andps
inc
mov
ins
popa
add
jmp
and
xor
push
imul
or
mov
push
outs
jo
or
int3
ins
adc
ins
xor
bound
mov
(bad)
push
xchg
mov
xchg
or
and
fbld
dec
jnp
add
fs
push
jbe
mov
push
pop
sbb
mov
and
push
and
or
inc
xchg
adc
mov
sbb
and
and
lea
call
push
ret
dec
popa
jb
ds
push
sbb
push
adc
jae
push
vandpd
retf
push
mov
xchg
push
push
outs
jne
arpl
nop
pop
pop
xchg
gs
(bad)
mov
sbb
call
jnp
add
test
cmp
xchg
lea
cmp
syscall
push
cs
dec
aas
mov
add
xchg
ins
mov
arpl
ss
inc
fisub
(bad)
sbb
out
push
div
stos
ja
pop
sub
lock
sbb
fsub
jbe
add
xchg
jl
es
das
pop
aad
adc
in
inc
sbb
cld
daa
adc
loopne
ds
sub
adc
push
leave
pop
pop
xor
pop
mov
jae
mov
sbb
shr
or
adc
push
or
jae
or
mov
rcr
push
jo
sub
aaa
cdq
add
push
outs
mov
push
or
ret
push
push
icebp
pop
push
scas
stc
xor
pop
iret
add
add
pop
stos
add
push
iret
stos
jmp
sbb
les
iret
mov
jle
call
pop
sar
sub
outs
or
(bad)
bound
add
cdq
inc
sahf
adc
ins
adc
adc
xor
sub
test
jne
ins
cwde
inc
inc
jle
jne
daa
and
add
mov
stos
aaa
and
gs
loopne
inc
push
cdq
add
cmp
movs
out
not
and
xchg
lods
push
adc
aas
adc
sahf
jo
gs
imul
mov
push
inc
dec
cwde
mov
mov
push
cmovbe
daa
cmp
outs
and
lods
pop
mov
je
or
mov
mov
fwait
imul
cmp
out
sbb
xchg
les
xor
and
sbb
add
bound
xor
mov
xor
jae
and
xchg
fimul
pusha
xor
fwait
xchg
xchg
jae
shr
fsub
add
mov
jp
cmp
stc
push
cmp
test
inc
mov
jbe
and
ret
cmp
loopne
push
mov
jecxz
pop
cmp
es
inc
fsubr
push
outs
mov
lds
cmp
outs
clc
(bad)
inc
add
mov
push
(bad)
lock
rol
ds
push
dec
sbb
sbb
es
clc
mov
mov
mov
ss
das
cld
in
push
int
push
mov
and
jl
les
sub
push
cli
(bad)
xor
inc
jne
outs
cld
jae
mov
ins
inc
and
rcl
inc
and
adc
mov
ins
int
neg
or
sbb
mov
sbb
or
push
sbb
sbb
jge
(bad)
mul
mov
cmc
mov
dec
fwait
inc
xchg
int3
jmp
scas
or
mov
pop
push
ins
push
ins
inc
psubusw
inc
mov
stos
out
(bad)
mov
test
or
call
dec
pusha
or
daa
imul
add
jmp
dec
pusha
call
dec
aad
(bad)
clc
jnp
push
mov
inc
jnp
mov
inc
jp
pop
jecxz
test
pop
jbe
mov
or
mov
(bad)
in
fisttp
ret
jne
int3
fstp
pop
jmp
clc
scas
ja
dec
jl
adc
xchg
(bad)
js
adc
scas
jmp
ror
ror
mov
xchg
(bad)
cld
jge
adc
cmp
add
fadd
inc
add
dec
fld
add
or
push
pop
cmp
inc
adc
add
or
xchg
mov
fadd
sbb
add
mov
add
lods
add
movs
rcr
jb
adc
push
add
das
or
pusha
enter
sub
add
fcomp
loopne
or
mov
js
call
push
sbb
dec
and
pop
enter
ffree
arpl
adc
and
outs
pop
xchg
push
jb
add
add
push
aaa
loopne
xchg
sbb
pop
adc
jb
xchg
sbb
dec
xchg
push
(bad)
and
sub
leave
push
cmp
and
test
push
sbb
cmp
or
push
xlat
cmp
xlat
and
and
mov
or
loopne
dec
dec
sbb
shl
jo
sbb
dec
scas
add
sbb
pop
ffree
sub
jb
jb
sub
sbb
inc
dec
lods
sub
shl
lods
sub
adc
dec
jecxz
test
cs
and
repz
repz
pop
adc
xor
or
xor
mov
imul
stos
sbb
xor
xchg
ss
pop
and
cmp
add
push
add
(bad)
call
loopne
cmp
xchg
jb
or
add
aaa
loopne
sub
add
adc
mov
pusha
test
les
mov
jge
enter
push
push
dec
sub
aaa
pusha
and
sub
in
sub
add
or
push
enter
jns
mov
in
push
das
push
jle
enter
int3
out
adc
enter
cmp
cmps
enter
into
neg
inc
enter
mov
in
adc
push
and
enter
lock
adc
enter
arpl
enter
adc
enter
(bad)
mov
enter
stc
sbb
arpl
enter
scas
aad
retf
enter
adc
add
add
pop
push
push
push
inc
push
sub
call
jmp
bound
cmp
or
adc
inc
sar
lea
mov
add
ja
dec
test
and
push
adc
cmp
jb
mov
pop
cmps
dec
xlat
popa
out
adc
mov
push
inc
and
mov
stos
outs
fdivr
clc
ficom
leave
and
pusha
mov
sbb
pop
xor
adc
or
or
or
ins
ficom
sub
call
int
push
mov
and
push
stos
add
mov
leave
inc
sub
inc
jae
mov
dec
outs
rcl
fisub
push
mul
movs
faddp
sub
les
cmovne
push
xchg
fist
push
sbb
xor
adc
push
loopne
gs
jae
or
xchg
loopne
mov
or
add
add
cmp
adc
outs
nop
or
mov
lea
dec
movs
mov
push
loope
cld
sbb
inc
mov
mov
out
push
cmps
lods
mov
cmps
test
cmp
dec
adc
sub
test
es
adc
cmps
enter
enter
add
and
dec
jecxz
mov
ror
lds
fisub
sbb
lods
inc
inc
sbb
or
add
fadd
inc
les
mov
jl
rol
mov
add
dec
lods
push
call
scas
cmp
or
xchg
add
adc
neg
mov
pop
ds
and
aaa
sbb
xchg
pop
and
xor
daa
xchg
dec
scas
or
ror
ins
push
adc
push
and
push
ror
inc
mov
ds
and
popa
and
enter
es
inc
cs
daa
cdq
scas
dec
out
nop
sub
pusha
mov
or
and
stos
inc
outs
adc
inc
push
cmp
sub
lods
es
cs
inc
push
sub
dec
das
xor
mov
sub
jmp
cdq
dec
xor
cs
mov
in
cdq
dec
aaa
cmp
cmp
cmp
add
mov
cmp
inc
aas
add
repnz
and
inc
or
popa
test
enter
xor
enter
jp
ret
call
or
cs
outs
in
enter
in
pop
enter
cmp
test
in
enter
and
enter
push
jp
(bad)
in
jmp
enter
mov
in
and
push
jl
enter
leave
in
adc
icebp
inc
into
or
clc
and
es
out
ds
ss
data16
ror
out
loop
sbb
in
ss
in
enter
add
pop
push
aas
js
je
call
mov
push
inc
jmp
push
jae
je
mov
mov
push
mov
push
pop
add
push
scas
push
test
mov
dec
clc
push
sbb
ror
or
push
popa
imul
mov
add
xchg
pop
adc
xor
pop
pop
std
mov
js
aad
or
test
test
push
aas
and
ror
adc
mov
adc
push
add
addr16
leave
push
mov
sbb
sbb
adc
mov
les
adc
lods
daa
mov
push
pop
fs
add
and
and
enter
ror
and
adc
dec
daa
push
xor
or
inc
leave
sub
cmp
rcl
sbb
dec
sub
dec
pop
push
js
dec
or
jmp
and
pop
adc
(bad)
fst
into
xchg
adc
mov
jp
xor
cdq
dec
cs
in
cmp
nop
add
mov
loope
cmp
cmp
mov
fdivr
movs
sbb
ffreep
enter
and
or
repz
dec
enter
jo
mov
enter
stc
sbb
aas
pop
enter
mov
enter
xor
and
enter
std
es
enter
ins
nop
mov
in
enter
sub
enter
(bad)
mov
enter
std
and
fs
mov
enter
inc
ins
xchg
not
retf
enter
fs
adc
mov
push
arpl
inc
mov
call
push
(bad)
mov
sub
mov
call
or
jae
dec
int3
addr16
pop
and
add
push
add
pushf
mov
leave
mov
test
mov
inc
jbe
scas
lods
lods
and
arpl
mov
xor
xor
sub
stos
test
fcom
push
addr16
aam
stos
sbb
xchg
pushf
mov
dec
pop
xor
xor
push
int
sahf
mov
xchg
mov
or
or
adc
add
jge
or
pusha
jno
mov
or
std
mov
imul
fxch
xchg
fwait
dec
pop
pushf
popa
js
imul
imul
nop
test
push
push
dec
inc
popa
nop
outs
test
xlat
repz
inc
push
ins
popa
cli
push
push
pop
outs
das
stos
dec
lock
es
ja
mov
sub
mov
sub
fidiv
and
test
inc
std
(bad)
cmp
or
enter
mov
adc
lods
jmp
mov
jl
push
mov
mov
cwde
push
or
push
xchg
add
std
sub
mov
pop
ret
jle
je
fldlg2
inc
xor
jae
or
jno
mov
(bad)
aam
inc
mov
pop
sbb
data16
sub
pop
cmp
mov
add
sub
add
inc
sbb
(bad)
jb
lea
enter
add
sbb
push
inc
adc
data16
leave
adc
stos
add
mov
sbb
mov
push
dec
mov
cmp
bndldx
outs
call
mov
dec
or
add
loopne
fstp
fwait
retf
push
or
les
push
test
pushf
xchg
cmp
inc
jmp
and
xor
jb
and
jns
mov
adc
add
fisttp
mov
mov
fidiv
pop
inc
scas
push
and
adc
aam
and
jmp
out
shr
(bad)
sbb
stos
out
xor
in
stos
xchg
out
test
inc
inc
scas
test
gs
add
mov
ins
inc
push
pusha
push
sbb
push
scas
xchg
or
sub
sub
xchg
xor
jo
push
leave
xor
popa
shl
ins
shl
inc
dec
aaa
popa
jnp
pop
(bad)
jb
add
sbb
cmp
or
mov
sub
lods
adc
jle
dec
or
enter
std
enter
and
enter
in
or
cs
jge
enter
aad
sbb
aas
enter
mov
enter
inc
gs
mov
enter
cmp
mov
icebp
pop
cmp
mov
test
cmp
cmp
mov
xchg
cmp
int3
cmp
adc
and
xor
cmps
out
loop
add
inc
pushf
out
cdq
xchg
bound
add
out
push
mov
aam
xchg
aas
popa
lock
jmp
clc
push
ret
mov
add
les
dec
outs
outs
imul
out
or
enter
sub
loop
or
mov
pushf
test
and
arpl
repz
inc
and
sub
push
push
cmp
mov
leave
nop
lods
(bad)
jecxz
xchg
leave
add
pop
mov
lea
add
sti
add
test
pop
in
call
ss
mov
inc
dec
or
inc
or
dec
int3
fnsave
arpl
pop
inc
or
lods
in
cwde
lods
in
fwait
jmp
mul
xchg
ds
stos
push
push
fadd
test
xlat
call
xchg
push
(bad)
mov
inc
(bad)
mov
(bad)
push
call
push
mov
mov
push
mov
(bad)
sub
and
(bad)
repz
push
push
inc
nop
add
mov
add
or
sub
cmps
xor
push
push
mov
or
fdivr
adc
jns
mul
dec
push
jo
cs
push
test
xor
xchg
sub
dec
xor
pop
add
dec
pop
xor
xchg
and
pushw
dec
sar
adc
adc
aam
test
xor
mov
or
call
jno
add
fwait
jl
cmp
xor
push
cmp
push
push
mov
loopne
xor
sub
inc
push
or
mov
adc
push
mov
mov
add
sub
aaa
or
jecxz
lea
push
add
xchg
inc
sub
ret
push
mov
jno
push
add
jecxz
pop
pop
cmc
mov
inc
pop
(bad)
cmp
jo
mov
inc
out
push
mov
enter
jb
mov
std
sbb
outs
aam
pop
xchg
mov
clc
mov
mov
sbb
jnp
xchg
adc
out
mov
pop
push
mov
push
mov
lahf
or
push
or
push
inc
imul
lods
les
lods
add
pop
popf
jl
loopne
pop
push
add
mov
add
pop
mov
adc
loop
push
cmc
pop
push
mov
cvtdq2ps
push
pushf
repnz
test
shl
ins
(bad)
dec
ds
cmp
push
mov
push
fs
ja
push
ja
jo
pop
jns
ror
ins
outs
lods
mov
add
inc
out
jbe
xor
and
aaa
push
clc
out
ja
mov
add
inc
push
shl
xor
push
out
jnp
iret
fsubrp
adc
add
push
push
xchg
mov
jbe
clc
push
sub
js
add
xor
das
add
dec
call
adc
ins
fs
dec
repz
(bad)
mov
mov
sub
sbb
or
cmps
daa
mov
add
sub
mov
add
outs
xchg
sub
sub
sub
dec
add
scas
mov
sbb
fadd
add
adc
int3
mov
enter
and
ret
fisub
push
mov
sub
adc
adc
xor
ror
inc
fwait
dec
add
push
sbb
mov
(bad)
cmp
repz
push
ret
lds
retf
into
(bad)
mov
iret
push
sbb
jl
(bad)
push
(bad)
pop
pop
add
(bad)
push
sbb
sti
ss
push
sbb
jnp
xchg
icebp
sub
rol
cmp
or
jnp
cld
push
sub
adc
or
imul
xchg
rcr
xor
ffree
popa
mov
dec
pop
mov
mov
push
int3
add
movlhps
cld
mov
fild
ret
or
lock
cmps
call
adc
ret
popa
xchg
popa
fs
popa
iret
pop
enter
movs
and
pusha
gs
aaa
add
lea
jo
lock
inc
push
shl
xor
lock
fstp
mov
dec
outs
add
push
popa
mov
adc
adc
neg
mul
sbb
inc
imul
and
mov
mov
cmc
xor
mov
data16
pushf
pop
jmp
repz
push
pop
adc
pop
jbe
sbb
add
fcom
imul
out
ss
out
nop
in
add
or
cmps
mov
xchg
fst
jl
xor
push
in
into
add
fdivr
sub
push
sbb
psubusb
into
inc
adc
pop
add
movlps
push
sbb
or
jb
outs
addr16
mov
sbb
and
lds
(bad)
loop
inc
add
add
inc
gs
dec
add
xchg
add
add
sbb
je
dec
and
imul
push
jl
add
ja
or
push
sbb
std
jb
(bad)
push
push
test
je
add
call
mov
mov
xor
mov
sbb
pop
fsub
pusha
mov
fst
lahf
add
xchg
push
movs
cmp
and
add
mov
call
test
je
jnp
out
or
xor
shl
jp
or
mov
inc
shl
mov
or
(bad)
pop
mov
adc
sub
ret
loopne
(bad)
jnp
add
mov
mov
mov
mov
outs
jns
mov
int3
fcom
rol
in
fild
in
xchg
int3
xor
cmp
icebp
pop
loopne
cmp
sti
or
push
xor
mov
jecxz
mov
dec
inc
dec
cmp
mov
add
mov
sbb
adc
js
int3
in
ins
clc
push
push
or
push
lea
mov
add
fneni(8087
jg
add
movs
fisttp
sbb
fisubr
int3
sub
das
clc
adc
hlt
es
pop
ret
cmp
sar
icebp
mov
mov
test
add
sbb
(bad)
push
xor
push
or
pop
popf
in
call
in
xor
mov
rcr
cld
add
jl
xor
xor
xchg
test
push
mov
(bad)
aam
adc
call
ss
cmp
jne
iret
sub
add
add
cmp
cmp
jne
stos
dec
and
call
or
in
shr
mov
mov
fdivr
je
js
popa
loopne
cwde
in
mov
loopne
jnp
cwde
dec
fmul
ret
scas
sub
or
aaa
sbb
push
or
jb
lods
mov
out
imul
or
imul
xor
in
xor
jae
clc
jge
hlt
into
lock
movs
add
xor
jecxz
or
inc
in
mov
push
out
in
(bad)
out
xchg
xchg
xor
ror
push
pushf
int3
cmp
or
test
push
icebp
sbb
add
clc
jle
in
adc
js
setg
ret
and
push
mov
sbb
and
and
xlat
and
iret
pusha
cmp
enter
add
loopne
mov
lock
fwait
and
pop
pop
in
call
jle
mov
cmp
jecxz
ss
and
mov
rol
mov
pop
push
sahf
cmp
dec
mov
cmc
jmp
adc
xor
xchg
nop
sbb
inc
or
or
adc
ror
pop
sbb
push
pusha
out
(bad)
mov
ret
dec
pop
jne
jge
jl
jmp
lods
and
add
mov
push
pop
mov
add
mov
sub
scas
inc
or
dec
inc
call
mov
dec
call
stos
mov
push
call
or
movhps
clc
mov
das
mov
inc
dec
cmp
add
push
ins
out
out
dec
(bad)
fsubr
mov
push
jno
neg
je
jmp
nop
inc
pop
dec
cs
lahf
push
push
lock
aam
push
jmp
xchg
enter
mov
push
mov
pop
movs
aam
popa
and
push
fiadd
aaa
jne
pop
(bad)
push
jmp
adc
push
fcomp
fst
cmp
inc
pop
out
cmp
mov
inc
push
jp
iret
inc
and
inc
push
cmp
or
xor
cmps
aam
mov
mov
je
add
jl
adc
pop
mov
dec
iret
lea
sbb
mov
jmp
sub
pop
sub
mov
sub
clc
mov
or
pop
and
stc
jns
adc
xor
iret
cmp
add
(bad)
and
jns
lds
xchg
lods
mov
add
inc
sbb
test
cmp
mov
push
in
inc
icebp
jo
imul
loop
dec
aas
add
test
pusha
and
xor
mov
or
push
outs
loop
loop
xchg
ins
stos
mov
iret
cmps
loope
aam
pop
js
fistp
mov
popf
(bad)
jmp
cmp
fisubr
cmp
add
test
pusha
inc
pop
sub
add
out
pop
in
jb
jnp
dec
push
arpl
js
loopne
lods
ret
shl
mov
adc
movs
test
loope
pop
addr16
and
sti
pusha
dec
jo
jecxz
push
cmp
mov
mov
pop
(bad)
fsub
xchg
shl
mov
rol
je
xchg
or
ror
xchg
add
mov
pextrw
pushf
rol
dec
(bad)
mov
or
mov
fdiv
or
and
add
out
aaa
pop
add
popa
test
xlat
mov
call
call
pop
cld
outs
jno
sar
xchg
lds
jnp
adc
adc
mov
mov
fnstcw
retf
sub
inc
call
bound
lock
test
lods
mov
push
mov
adc
sahf
or
xchg
inc
pusha
pop
adc
fs
xor
or
and
or
mov
mov
out
int3
dec
ja
clc
ret
push
leave
mov
xor
and
mov
test
add
dec
push
popa
xor
inc
or
dec
mov
cdq
mov
sbb
std
enter
push
out
sub
adc
jle
fs
push
pop
mov
(bad)
push
in
mov
and
fcom
mov
mov
pusha
imul
ret
fwait
sbb
adc
mov
js
or
jmp
and
add
or
data16
inc
cld
pop
les
add
sbb
js
push
or
neg
mov
pop
fidivr
sbb
mov
adc
jl
stos
adc
arpl
mov
ror
ror
sahf
or
sub
outs
or
and
mov
push
out
add
xor
xchg
shl
nop
in
in
sub
loopne
fmulp
movs
jl
inc
push
mov
add
adc
mov
push
sub
mov
push
push
adc
je
sbb
test
nop
aas
and
push
mov
pop
jno
adc
adc
mov
add
loopne
idiv
jae
test
sub
(bad)
fsub
cmp
adc
pavgw
cmc
inc
out
fwait
xchg
mov
test
cmps
pop
dec
je
scas
jle
and
inc
sbb
mov
(bad)
rol
mov
nop
sahf
sbb
out
dec
loopne
mov
je
mov
ror
xchg
aam
test
aaa
imul
std
lock
sbb
lock
fsub
loope
ja
js
ror
mov
xchg
dec
pushf
data16
test
in
ins
sub
xchg
ret
push
push
ror
mov
popa
(bad)
lock
xchg
imul
je
mov
mov
push
cdq
pcmpgtb
rol
dec
push
ins
jmp
dec
and
or
cmp
mov
sbb
adc
gs
pusha
je
push
scas
cmp
loopne
jb
retf
sbb
inc
jb
sub
or
fcomp
jge
push
jecxz
inc
and
pop
sbb
add
add
pop
xlat
ret
bound
not
mov
imul
mov
mov
xchg
sub
cwde
pop
call
movs
add
mov
jne
retf
or
(bad)
mov
(bad)
sub
push
js
adc
sbb
or
jl
out
jmp
ror
mov
push
jle
aaa
fidivr
mov
scas
xchg
sahf
rol
addr16
adc
pop
nop
dec
xor
mov
mov
pop
lods
mov
and
pop
inc
out
shr
ja
call
xor
mov
xchg
std
aas
xchg
push
push
add
mov
cwde
jbe
inc
ja
rol
sub
pop
push
and
aaa
or
xor
pop
dec
ret
movs
adc
and
and
push
inc
lock
(bad)
mov
jmp
pushf
test
je
push
add
or
cmp
sub
in
push
push
jecxz
(bad)
xor
add
mov
xchg
pop
cdq
inc
or
shl
xor
jbe
mov
lock
(bad)
dec
(bad)
adc
sbb
mov
mul
pop
mov
and
inc
adc
cmp
shl
(bad)
mov
test
je
(bad)
daa
sbb
cmps
fbld
ror
(bad)
and
loopne
and
inc
in
jge
imul
mov
sub
inc
add
rcr
push
daa
pop
mov
std
ja
xchg
inc
lea
ror
push
mov
push
mul
mov
inc
inc
dec
jne
push
xchg
mov
mov
add
das
cld
mov
and
pop
inc
xor
sahf
les
jb
cmp
push
or
cs
scas
jae
mov
or
or
(bad)
call
inc
push
mov
cmp
jg
je
sub
je
jmp
add
call
xchg
(bad)
push
mov
xchg
adc
and
sar
loopne
mov
push
sub
add
and
mov
or
mov
jnp
imul
push
mov
mov
xor
mov
mov
xchg
mov
ficomp
xor
shl
shl
xor
sahf
mov
mul
test
adc
pop
ja
sub
mov
jmp
scas
enter
jle
in
or
adc
rcl
and
add
enter
adc
pop
push
jae
rcl
push
xor
pop
pusha
cmp
push
mov
ret
push
add
add
jbe
and
jae
loopne
loopne
outs
ins
inc
cs
bound
jbe
inc
fs
cmp
and
outs
je
and
fmul
add
rol
sub
fld
int3
fdiv
in
ror
dec
jo
sahf
adc
leave
sub
fimul
cmp
cmp
push
fst
sbb
xor
out
sbb
loopne
call
jge
ret
add
pop
rcl
mov
and
jns
sbb
pop
fild
imul
fbld
fsub
push
fidiv
push
add
add
cmp
lock
arpl
arpl
outs
add
pop
push
mov
jmp
lods
mov
sbb
and
jl
iret
and
push
cli
cmp
out
fdivr
mov
aam
push
jns
sar
add
scas
enter
jae
dec
jne
daa
mov
sbb
not
xor
add
icebp
mov
add
xchg
enter
xlat
add
xchg
ds
es
jp
ja
jo
and
xor
(bad)
mov
inc
cld
mov
inc
sbb
jne
movzx
mov
xchg
sbb
call
sub
or
jl
dec
fwait
add
aad
inc
ja
data16
int
ret
movsx
cs
mov
mov
push
call
jbe
nop
sub
add
add
sub
mov
ins
mov
mov
or
mov
inc
or
and
mov
xchg
ret
jg
inc
outs
out
mov
pop
jb
ins
sbb
dec
mov
sbb
repnz
pop
mov
(bad)
(bad)
mov
daa
and
popa
jp
pop
adc
inc
loopne
aaa
push
jg
or
pop
ds
add
add
inc
mov
xor
out
mov
(bad)
jnp
js
je
mov
add
inc
add
es
std
outs
cld
mov
add
pop
(bad)
in
mul
xchg
xor
jbe
push
in
adc
popa
int
jmp
inc
fimul
jo
ror
stc
jg
push
fadd
loopne
aas
mov
ja
andps
adc
sar
or
test
pop
nop
mov
adc
adc
jo
push
dec
and
shl
cmp
cmp
sub
ja
sbb
or
sbb
xlat
adc
inc
pop
leave
mov
cmp
je
push
(bad)
mov
les
sbb
xor
and
jno
xor
push
outs
jb
scas
pop
sbb
ret
jg
mov
fadd
outs
jbe
or
push
loopne
retf
jo
mov
sbb
push
pop
es
mov
and
or
pop
cld
jne
outs
adc
push
pusha
stos
push
arpl
inc
fwait
aad
jno
add
push
xor
lods
xlat
popa
sub
mov
sbb
xor
dec
in
dec
mov
mov
std
mov
mov
or
fsubr
and
scas
fwait
ror
cmp
jle
fsubr
add
add
add
sar
add
and
hlt
lock
add
shr
lahf
lock
jge
scas
adc
movs
sti
adc
adc
xchg
test
cld
div
fimul
pop
je
sub
outs
add
out
cmp
jae
loopne
fwait
sbb
mov
dec
sub
sbb
push
jnp
sub
in
add
adc
pop
dec
mov
xchg
xchg
js
or
ins
push
adc
push
fadd
dec
jno
jge
sahf
or
xor
outs
pop
lock
jno
int
clc
jle
add
push
in
add
in
fidiv
js
push
movups
dec
or
xor
push
sbb
out
dec
cs
arpl
mov
mov
dec
sub
iret
stos
aam
rol
jo
popa
jbe
stos
adc
pusha
movs
push
mov
or
pop
sub
jne
and
cli
xchg
imul
mov
xchg
xchg
adc
(bad)
mov
cld
add
jp
add
cmp
xor
mov
xchg
bound
inc
jb
nop
out
xor
jp
imul
pop
xchg
sub
inc
pop
sub
push
hlt
mov
inc
mov
xor
adc
adc
mov
fsubr
packuswb
pop
and
cwde
ds
mov
popf
push
pop
div
jle
xchg
cmc
pop
(bad)
out
jg
push
fdiv
or
ds
and
lahf
add
xor
mov
cwde
push
jmp
add
nop
xchg
stos
cs
dec
or
scas
push
push
js
add
ror
xor
fwait
hlt
in
or
or
or
mov
push
add
or
mov
in
ja
add
adc
add
les
out
add
std
sbb
dec
and
mov
xchg
xchg
sub
push
ds
or
mov
sbb
movzx
or
mov
cmp
push
mov
sbb
ret
sahf
jo
bound
xchg
xchg
aaa
push
or
mov
jmp
mov
stc
dec
push
xor
add
stos
adc
test
sub
ins
jno
mov
retf
mov
lock
pop
lock
mov
cmp
mov
ds
dec
inc
loop
fisttp
movs
mov
push
dec
jne
test
xor
inc
loopne
dec
stc
dec
(bad)
test
pushf
les
push
(bad)
xor
test
cmp
outs
out
mov
pop
nop
or
movs
sub
idiv
out
push
loopne
cmp
(bad)
sar
inc
ins
ss
sub
inc
es
ja
cmp
ret
hlt
or
test
jl
xor
sbb
test
jl
call
mov
les
bound
pop
ins
add
les
jns
cs
add
fld
arpl
or
cmp
jnp
dec
jo
sbb
mov
mov
(bad)
mov
mov
adc
ret
(bad)
add
loop
sti
push
in
or
daa
arpl
adc
aas
push
lods
dec
adc
cmp
sub
pushf
jge
xchg
lds
inc
jno
(bad)
push
cdq
pop
fwait
ror
add
test
or
and
cmp
add
or
mov
aas
xor
push
push
add
mov
add
adc
lds
sbb
add
int3
retf
test
adc
clc
aas
(bad)
add
ret
imul
ins
sub
or
mov
imul
cmp
test
test
cmp
je
sbb
fs
and
adc
mov
stos
add
ins
cmp
and
into
ret
jl
clc
adc
movs
mov
add
loopne
(bad)
mov
js
adc
xor
mov
or
xchg
add
(bad)
push
xlat
(bad)
pop
push
mov
inc
adc
mov
xor
jg
sbb
cmp
jl
cmp
(bad)
int
add
dec
mov
aaa
fwait
or
test
mov
dec
add
and
pusha
adc
adc
call
dec
test
out
xchg
or
push
push
push
inc
add
clc
inc
xor
cwde
jmp
mov
cwde
inc
xchg
paddb
sbb
xor
fdivr
sbb
adc
test
test
je
fcmove
aaa
xor
jb
add
loop
add
test
push
dec
push
sub
shr
les
neg
hlt
push
sbb
not
and
or
xchg
je
mov
out
jo
shl
mov
inc
outs
mov
out
inc
or
adc
(bad)
repz
sbb
mov
out
iret
pop
push
and
mov
push
or
or
xor
mov
sbb
out
cmps
push
cmp
cmp
adc
movs
adc
inc
nop
and
add
jnp
add
pop
lods
stos
(bad)
nop
iret
imul
leave
add
je
adc
adc
scas
or
sysexit
push
and
ror
pushf
add
and
aas
cdq
xor
jmp
jb
je
jmp
bound
push
add
pusha
sub
mov
pop
add
add
add
into
jmp
inc
adc
shl
mov
pop
add
(bad)
cmp
cmp
sub
pushf
repz
daa
pavgb
fstp
cmp
push
or
addr16
pop
and
data16
and
fs
push
add
ret
mov
shr
daa
xchg
ret
mov
pop
jg
inc
cmps
cmp
fdivr
in
cmp
ins
loopne
inc
sub
or
sub
or
adc
mov
dec
fild
push
adc
inc
jo
push
dec
mov
daa
mov
jne
out
movs
fldcw
mov
pop
inc
sub
in
add
push
fldenv
push
jno
xchg
out
cmp
imul
movs
shl
mov
inc
and
mov
inc
mov
adc
mov
adc
pusha
test
popa
mov
nop
and
mov
push
sub
or
xchg
lahf
dec
mov
sbb
cmps
mov
xlat
mov
add
sbb
shl
test
js
ror
adc
or
jo
xchg
or
rcr
std
addr16
sub
call
sub
test
jmp
add
jb
mov
jle
cmc
jne
mov
sbb
push
je
jmp
ror
or
shl
add
imul
hlt
mov
jo
xor
xor
add
and
jmp
(bad)
nop
dec
xor
push
or
add
mov
xchg
pusha
push
push
dec
xchg
div
push
push
jbe
(bad)
dec
dec
out
cmp
and
pop
dec
repz
jbe
add
adc
pushf
pushf
jmp
bt
jo
mov
and
mov
push
mov
push
mov
or
or
or
sbb
hlt
nop
push
adc
xchg
xchg
mov
out
fisubr
call
sub
push
dec
je
add
jmp
mov
(bad)
aaa
cmp
je
mov
jg
sbb
sbb
lods
add
sbb
sbb
cmp
sbb
sbb
mov
dec
push
pop
pop
mov
adc
popa
cmovns
and
dec
jg
test
popa
adc
xchg
dec
and
lods
(bad)
sbb
cmp
adc
jl
mov
stos
pop
lds
jo
vpshuflw
jg
cmp
and
lahf
cmp
sbb
push
test
sbb
jp
fisttp
sub
mov
div
sbb
add
loopne
retf
and
and
push
imul
aam
fmul
and
mov
lahf
xor
inc
add
sub
rol
xor
or
jg
jne
mov
iret
pusha
dec
xchg
ss
jnp
(bad)
daa
mov
(bad)
rol
in
cmps
push
jmp
push
jp
mov
inc
sub
sub
scas
fadd
mov
or
cli
je
mov
push
cmc
sbb
cmp
pusha
pop
jbe
sbb
ss
call
leave
and
pop
push
je
mov
std
mov
cmp
dec
mov
or
shl
mov
sbb
inc
push
mov
sbb
sbb
je
push
lods
push
ret
xchg
jmp
pusha
mov
push
stos
add
and
xor
ret
inc
aas
aaa
pop
jmp
mov
add
lea
shl
ja
ins
or
gs
sub
outs
mov
pop
pop
pop
lds
test
je
cmp
jp
mov
call
push
mov
imul
lea
push
lea
fld
mov
ficom
adc
push
out
xchg
enter
ins
lods
bound
ja
out
mov
cmp
cwde
shr
cmp
pop
shr
aam
cld
js
je
mov
rcr
push
jl
nop
xchg
out
enter
push
jmp
and
test
or
cmp
xchg
push
or
inc
dec
push
push
push
pusha
jne
daa
cmp
push
stos
add
push
and
out
mov
out
xchg
ror
aaa
mov
add
sub
push
ror
sbb
aam
push
js
mov
mov
out
xchg
cmps
mov
loope
je
mov
cmp
push
and
ret
cmp
pop
add
(bad)
or
push
push
xchg
xchg
or
call
xchg
push
pop
rol
push
cmp
jbe
jne
cmps
xchg
mov
out
mov
jle
je
mov
push
jl
dec
jge
out
add
sbb
push
fimul
dec
pop
cmps
(bad)
ret
xchg
xchg
adc
xchg
jae
sbb
push
sbb
jp
xchg
sahf
popa
xchg
cmps
xor
fld
push
outs
xchg
stos
mov
dec
lods
loope
pop
mov
(bad)
mov
mov
mov
inc
inc
or
inc
jne
add
stos
jmp
ret
out
pusha
lahf
and
push
enter
ror
adc
loopne
push
cmp
jmp
hlt
cmp
lea
xor
inc
mov
test
fdivr
inc
add
aam
ret
lods
call
push
lock
or
adc
and
test
xchg
bound
repnz
add
test
in
xchg
mov
jno
and
cmp
pop
inc
xchg
mov
shl
xor
push
lock
cli
sub
ret
mov
add
inc
xchg
ficom
pop
sbb
(bad)
push
das
cmc
ja
dec
add
xchg
cmp
je
test
xor
inc
sbb
je
mov
push
inc
ins
out
pop
add
add
xor
sub
sub
adc
pushf
sub
xor
xor
adc
gs
mov
stos
xor
or
inc
mov
inc
sti
cmp
shr
loopne
mov
push
fs
cmp
mov
sbb
retf
rol
cmp
jle
cmp
inc
fistp
pop
scas
cmp
push
sub
fmul
jo
mov
sub
xchg
inc
and
not
and
test
imul
ret
cmp
push
or
pop
arpl
ret
addr16
icebp
sbb
arpl
mov
jmp
(bad)
dec
test
add
push
add
ret
mov
loopne
repnz
cmp
shl
fsubr
push
cdq
inc
sbb
cs
js
or
pop
mov
loopne
and
or
(bad)
cmc
or
call
jecxz
xchg
inc
movs
and
mov
add
xchg
adc
ss
stc
pop
dec
push
or
jbe
rcr
scas
cmp
add
cdq
xor
retf
aas
mov
mov
sub
and
fwait
push
mov
outs
xchg
movs
int
push
xchg
outs
int3
pop
nop
sbb
icebp
or
movs
(bad)
ror
dec
pop
fadd
in
inc
(bad)
enter
jmp
xor
call
jnp
or
dec
mov
fsubr
jl
cmp
sub
mov
jne
shr
out
ror
adc
add
daa
jns
das
scas
lahf
push
int3
shl
pop
or
sar
rcr
add
jne
setp
pop
sbb
cdq
out
aaa
xchg
sub
sbb
push
mov
inc
xor
cmp
jne
mov
scas
mov
pop
fwait
sub
mov
stc
mov
add
retf
stos
test
adc
mov
cwde
or
jne
mov
mov
xor
pop
sbb
dec
xlat
mov
ret
or
shl
or
into
ret
pushf
jmp
cwde
je
daa
sub
dec
xlat
pop
inc
popa
push
sbb
pop
cmp
mov
dec
or
ror
xor
cmps
adc
lods
dec
sbb
inc
cmp
jne
ds
jne
pop
loop
aas
in
call
repz
lea
jp
adc
adc
mov
mov
push
es
lea
sub
mov
jmp
push
sbb
imul
imul
inc
mov
popa
int3
mov
adc
fisttp
pop
fcom
fmul
sub
pusha
mov
dec
adc
xor
cld
inc
lods
pop
(bad)
sub
inc
cmp
stos
mov
das
movs
mov
mov
mov
ret
jg
mov
loopne
inc
cmps
imul
or
dec
mov
and
mov
sub
test
idiv
rcr
add
or
sbb
imul
xchg
arpl
sahf
adc
and
pop
inc
sahf
cmp
in
aas
adc
sub
popa
out
adc
sbb
cmps
xor
dec
addr16
add
addr16
std
sahf
ins
out
mov
sub
ret
inc
xor
mov
mov
ret
jne
sub
mov
sbb
lods
inc
dec
xor
repnz
cli
fadd
mov
fwait
in
sub
call
cli
jb
xor
ret
push
add
jp
sti
(bad)
(bad)
mov
inc
jne
je
ins
inc
push
outs
js
dec
bound
jb
add
clc
in
jg
fs
cmp
and
dec
outs
je
and
xor
dec
push
arpl
je
inc
je
ins
jae
cld
xor
add
mov
repnz
ja
sbb
out
in
xchg
or
and
leave
add
adc
lods
fldenv
push
pop
mov
add
daa
cmp
mov
sbb
pop
jnp
sar
dec
pushf
jge
add
or
(bad)
fidivr
cmp
je
inc
in
inc
add
sbb
ins
pop
xor
add
arpl
cmp
pop
pop
jae
shr
and
xchg
in
lods
jle
xchg
push
inc
or
ja
das
xchg
popa
xor
retf
jecxz
xchg
jmp
cmps
test
and
push
into
aad
sti
aas
add
push
add
mov
dec
jne
daa
ror
or
fcomp
cld
cmp
and
jo
mov
and
xor
pop
jmp
mov
je
ins
mov
mov
mov
lahf
lock
sbb
xor
mov
mov
pusha
in
dec
test
add
jl
dec
fwait
add
aad
inc
(bad)
mov
add
pop
int
fiadd
add
fistp
mov
xchg
stos
and
pop
imul
mov
mov
mov
sub
jb
fwait
sbb
inc
sub
mov
pusha
clc
or
mov
fst
jp
jmp
xor
mov
add
xchg
or
and
mov
push
push
adc
push
and
pop
mov
fmul
jmp
add
push
cmp
add
cmovb
pop
enter
sub
inc
push
cmp
paddw
xor
jge
loopne
cmp
push
push
pop
inc
das
pop
adc
or
or
push
mov
inc
push
sub
mov
mov
aaa
fidiv
mov
add
adc
or
or
mov
addr16
enter
lea
push
call
sbb
or
inc
arpl
dec
cmp
adc
inc
not
inc
cmp
inc
xor
stos
mov
aad
fwait
loop
adc
ja
loopne
sub
mov
hlt
add
mov
mov
push
movs
test
xchg
in
push
mov
or
adc
or
add
pusha
jo
out
adc
cs
mov
scas
jl
jo
mov
sbb
loop
cmp
jno
(bad)
jg
dec
lea
addr16
lea
and
add
pop
ja
add
cmps
mov
xor
inc
cmps
(bad)
ins
fimul
test
inc
ror
ror
idiv
(bad)
js
cwde
cmp
icebp
cmp
loopne
or
outs
cmp
je
shl
test
sti
fst
inc
or
xor
fistp
sub
shl
sbb
or
das
scas
xchg
adc
xchg
fimul
adc
mov
ret
lea
cmp
and
sub
cwde
or
inc
test
inc
or
xor
sti
sahf
jge
pop
xor
pop
xlat
push
mov
lds
(bad)
imul
xchg
shr
inc
mov
mov
(bad)
dec
clc
icebp
push
nop
push
mov
xor
out
mov
xchg
sbb
xor
das
daa
mov
push
pop
push
mov
push
test
pop
dec
ja
das
adc
pop
add
das
push
mov
les
xor
add
adc
mov
or
mov
outs
mov
loopne
mov
dec
test
inc
add
mov
adc
loope
test
mov
sar
adc
adc
ror
stos
outs
inc
push
cmp
sbb
pop
jno
jbe
mov
sbb
pop
push
pop
inc
clc
adc
push
aad
push
je
scas
push
loop
out
or
jmp
or
xlat
sub
add
dec
or
cmp
ret
arpl
fwait
jle
inc
add
mov
dec
add
dec
test
jbe
mov
mov
pusha
ret
and
pop
call
ins
push
push
das
cmp
ret
fbld
jmp
adc
ret
lods
add
rol
push
sbb
push
popf
sti
pushf
jmp
xor
sub
rcr
pop
mov
lea
mov
dec
stc
adc
outs
dec
iret
cmp
xor
pop
xchg
inc
pop
push
dec
push
mov
jo
mov
call
add
jb
jne
js
into
arpl
fxtract
xchg
xchg
xor
jne
ss
cld
jl
mov
jge
pushf
mov
mov
lock
into
loopne
loop
lahf
loope
push
movs
mov
adc
jle
cmp
jge
mov
cmp
jge
(bad)
fwait
cmp
test
fnstenv
sub
and
pop
and
mov
adc
neg
sbb
push
scas
push
push
inc
pop
test
inc
xor
mov
not
jge
shl
xor
(bad)
out
xchg
add
test
xchg
adc
adc
sub
add
stc
adc
lea
out
push
push
add
or
call
test
push
(bad)
adc
jge
outs
aas
nop
mov
pusha
ror
mov
or
sbb
addr16
push
mov
mov
xor
movs
push
xchg
mov
xchg
cs
inc
mov
or
pop
and
push
retf
adc
xchg
loopne
mov
add
enter
mov
cmp
js
sbb
ins
outs
lock
adc
push
lods
mov
ds
ds
(bad)
sbb
cmp
mov
mov
xchg
mov
clc
pop
rcl
lock
ja
test
xchg
fdivr
push
adc
pop
push
xor
mov
(bad)
cmc
movzx
imul
cmp
xchg
outs
mov
push
les
pop
and
loope
push
push
test
or
test
je
leave
xchg
jnp
jne
xchg
(bad)
mov
imul
lock
adc
jle
push
movs
inc
mov
int3
mov
mov
cmps
test
js
test
jae
sub
pop
sub
and
loopne
add
cmps
pop
mov
jg
rcl
and
or
jp
push
int3
jge
je
add
jo
pop
jl
cwde
lock
xor
pop
xlat
mov
adc
push
inc
pusha
out
neg
test
push
ins
shl
mov
or
mov
mov
or
cmps
mov
pop
mov
xor
adc
jmp
mov
jb
movs
sbb
lock
pop
hlt
in
cdq
imul
xor
mov
or
gs
cwde
in
test
mov
inc
in
xchg
push
shl
adc
out
(bad)
int3
fidiv
cmc
or
(bad)
lods
xchg
jge
add
fdivp
sbb
push
bound
pop
lds
sbb
push
jno
dec
jg
or
shl
mov
dec
cmp
and
mov
lldt
or
movs
fild
or
dec
movs
fld
cwde
sbb
cmp
push
cmp
push
xchg
lods
rol
and
jmp
test
iret
jnp
or
or
sahf
js
add
(bad)
push
jg
mov
mov
out
inc
sub
inc
sub
push
sub
push
mov
das
push
xor
xor
rcr
and
aad
and
call
sub
sub
aad
sub
movs
sbb
mov
mov
add
mov
xor
mov
fisttp
fadd
push
push
sbb
cmp
pop
mov
sbb
inc
add
test
fcomp
add
leave
push
mov
mov
dec
mov
out
jle
je
in
xlat
add
inc
scas
sub
adc
cld
sbb
push
adc
mov
mov
push
frstor
mov
adc
mov
adc
xor
rol
sub
test
inc
add
push
inc
pop
je
xchg
sti
sbb
mov
aaa
adc
addr16
outs
add
das
test
adc
or
jbe
cmp
rcr
cwde
mov
and
jb
mov
xchg
cmps
(bad)
bsf
fsubr
fcom
xor
pusha
adc
push
or
mov
xor
(bad)
bound
sbb
fisttp
std
or
lds
cmp
sub
adc
lods
or
fild
mov
push
cmps
jle
push
test
in
aas
int
mov
movhps
push
jne
fs
xchg
pop
bswap
jae
inc
and
inc
jb
int3
js
test
inc
repnz
les
or
and
cs
pop
add
add
gs
inc
cmp
test
xor
test
push
mov
add
xchg
sub
fadd
(bad)
fsub
data16
jp
je
pop
mov
or
mov
test
nop
loope
outs
pop
mov
lea
sbb
and
popf
jae
or
aam
fld
jl
out
outs
jbe
fmul
test
mov
or
add
fdivrp
je
sti
(bad)
leave
mov
add
mov
xchg
add
mov
sbb
add
rcr
sub
in
cdq
fs
leave
cmp
les
and
cmp
dec
shl
shr
cmp
jle
js
cs
adc
adc
aaa
mov
jo
add
je
push
or
dec
add
dec
or
loopne
fisttp
js
mov
add
xchg
cwde
test
jge
daa
dec
std
add
out
ss
and
fst
sub
fistp
lods
cmp
jge
push
push
add
loopne
cmp
das
pusha
push
js
cmp
aam
push
pusha
jne
xor
jle
add
out
inc
js
inc
sub
push
fwait
push
mov
sti
pop
push
and
das
cmps
ror
xor
scas
mov
in
xchg
mov
je
mov
inc
adc
ss
push
fadd
ret
jns
adc
xor
jbe
ret
(bad)
mov
push
bnd
das
and
popf
and
sub
add
sti
and
mov
xchg
fwait
in
ficom
fwait
xor
out
bound
add
inc
(bad)
adc
test
jns
xchg
jb
cmp
movs
daa
or
xchg
sbb
daa
sbb
inc
jae
and
push
inc
xor
adc
cs
add
les
adc
add
jmp
dec
in
mov
pusha
push
js
and
and
or
mov
sub
push
dec
daa
or
and
adc
jmp
aaa
sbb
aaa
sbb
inc
sbb
mov
xchg
pushf
and
and
daa
dec
jmp
xchg
aam
rol
(bad)
mov
xchg
stos
xlat
div
add
adc
out
xor
or
jno
cmps
fadd
repnz
xor
xchg
retf
xchg
add
int
cmp
mov
mov
adc
push
sbb
loopne
mov
xor
addr16
(bad)
xchg
test
push
adc
sub
mov
xor
and
add
lock
test
rcr
mov
jecxz
(bad)
int3
dec
cmp
(bad)
test
ret
int3
dec
mov
lea
int3
ins
sub
inc
xor
mov
movs
mov
test
and
shr
inc
lods
jne
ins
cmp
dec
mov
inc
add
pushf
add
fdiv
mov
mov
xchg
xor
shl
shr
js
pop
mov
sahf
ins
stc
idiv
cmp
je
dec
pop
sbb
aaa
xchg
add
jmp
test
fcomp
xor
ror
pop
daa
movs
mov
xchg
cmp
mov
in
and
jg
xchg
cmp
das
jle
sub
(bad)
mov
xchg
les
jmp
dec
dec
push
popa
mov
stos
or
mov
je
cvtpi2ps
ins
mov
call
mov
mov
imul
pop
jmp
inc
add
or
xchg
dec
and
pop
adc
bound
call
push
pop
jo
adc
ja
mov
xchg
fld
xchg
pop
ins
push
pop
call
mov
mov
shl
mov
inc
je
(bad)
mov
mov
inc
xchg
mov
inc
sbb
test
test
add
call
push
out
xchg
sbb
and
inc
in
mov
lods
out
int
out
inc
je
cwde
and
rcl
mov
mov
inc
ret
sub
imul
jb
inc
loope
inc
loope
pop
push
pop
xor
in
and
sbb
xor
fs
push
fdiv
jb
loope
ret
xchg
mov
inc
ins
fcmovnu
test
icebp
adc
js
dec
in
ins
add
push
das
stos
and
daa
and
mov
pmulhuw
jmp
sub
add
mov
mov
xor
push
mov
lds
mov
adc
jle
sub
jne
loopne
sbb
jg
aaa
stos
pop
popf
sub
les
fmul
mov
or
pop
or
push
or
jnp
or
add
lea
(bad)
retf
fidivr
sbb
jne
loopne
jmp
mov
dec
sahf
jle
and
data16
push
cs
not
jae
call
and
es
sub
mov
inc
sbb
push
adc
or
data16
dec
dec
inc
sbb
adc
xor
or
and
and
fnstsw
das
mov
inc
jo
jo
(bad)
jne
jne
jo
pop
popa
arpl
in
jge
sbb
add
sbb
sbb
ret
xor
mov
sub
inc
xor
fwait
jbe
js
out
fwait
jae
pop
popa
inc
inc
push
cs
aam
sub
mov
mov
das
pop
iret
pusha
dec
push
das
push
jmp
fs
gs
mov
pop
leave
fs
xor
retf
xor
xor
jo
popa
mov
loope
or
(bad)
loope
xor
jb
inc
cmp
gs
mov
xor
dec
(bad)
dec
or
adc
push
push
sbb
dec
add
or
test
adc
(bad)
mov
cld
ins
pusha
dec
adc
jmp
and
xchg
jmp
add
es
test
iret
jne
pop
jne
dec
push
jae
mov
fmul
retf
pushf
and
retf
fsub
sbb
retf
dec
retf
arpl
pop
retf
mov
inc
xchg
loopne
xor
mov
sub
fcmovbe
adc
inc
in
test
cmp
clc
mov
out
cmp
cmp
sbb
cmp
lahf
inc
popa
lock
mov
scas
mov
inc
mov
sub
or
cwde
add
and
out
jb
les
jae
or
retf
inc
mov
retf
or
pusha
xchg
fcom
sti
retf
mov
push
into
out
retf
push
retf
dec
add
outs
retf
inc
retf
pop
dec
call
pop
retf
hlt
inc
adc
and
dec
out
popf
pop
inc
ror
sbb
add
sub
retf
push
and
pop
cmps
(bad)
xchg
loope
cmp
or
inc
in
sub
jbe
aaa
fwait
sbb
jg
lock
pop
hlt
rcr
or
mov
mov
(bad)
jnp
push
outs
push
clc
push
adc
pusha
inc
jno
sub
push
adc
mov
cmp
hlt
imul
loope
popf
jns
in
gs
cmp
pop
pop
sbb
push
pushf
add
add
inc
add
push
or
ja
xchg
shl
inc
rcl
or
loopne
lock
mov
sub
adc
add
push
clc
or
stos
pop
mov
maxps
mov
adc
in
stos
mov
mov
lahf
mov
popa
int3
mov
mov
call
add
dec
repnz
xor
push
or
xchg
adc
inc
mov
aad
rol
in
lods
dec
mov
and
and
(bad)
push
mov
loopne
retf
pop
push
jp
add
xor
and
sub
dec
mov
ret
sub
div
jp
and
movzx
adc
(bad)
push
xchg
or
add
xchg
inc
jnp
test
enter
pop
add
sub
mov
mov
adc
iret
jge
das
jle
push
sub
add
call
adc
dec
nop
xchg
pop
cmp
enter
das
push
sbb
nop
mov
mov
jmp
mov
mov
loop
mov
je
outs
pusha
jo
add
sbb
lods
and
add
xor
pop
lods
sbb
lds
push
sahf
jne
test
and
and
push
xor
and
scas
lock
jl
inc
xor
and
(bad)
fbstp
mov
mov
jne
jg
pop
scas
cwde
das
pop
push
or
call
call
cmp
push
cmp
xor
je
cmps
in
mov
mov
push
data16
js
ss
stos
cmp
jo
int3
push
std
cmps
jo
mov
pop
xlat
adc
gs
jo
add
sbb
mov
sub
and
and
enter
xlat
add
cwde
loop
sub
adc
ret
jo
push
leave
popf
movhps
pop
je
push
mov
cmp
mov
inc
popa
scas
mov
or
xor
lods
data16
test
xor
adc
in
fidiv
push
push
cmps
lock
mov
sub
or
out
add
xchg
enter
mov
cdq
std
les
add
and
ret
pop
movs
and
jge
push
dec
dec
pop
push
dec
pop
pop
call
in
cmps
push
adc
mov
mov
(bad)
push
pop
pop
mov
pop
test
jle
sbb
add
lods
in
shl
inc
lock
mov
xchg
mov
aam
jno
lock
je
sbb
sbb
inc
mov
pusha
xchg
mov
jmp
out
sar
xor
pop
std
xlat
mov
into
inc
add
pop
mov
cs
pop
movs
shl
in
dec
test
xchg
loopne
sub
dec
jne
(bad)
adc
sbb
icebp
push
cmp
xchg
push
add
fcomp
lock
fild
jne
jge
push
jne
dec
jo
inc
inc
fsubr
inc
ror
sub
adc
aas
sbb
(bad)
pop
jb
div
sub
adc
mov
sub
pop
push
and
test
iret
jb
or
call
fidiv
mov
sbb
push
mov
inc
add
das
add
xor
cmps
movs
pop
add
inc
or
mov
or
push
mov
jae
jmp
mov
pop
fsubr
aam
or
psubq
push
clc
je
jbe
jmp
dec
add
ss
cmp
pushf
or
out
adc
call
ret
mov
faddp
mov
popa
pop
xor
push
mov
adc
xor
cmp
xlat
jmp
add
pop
pop
sbb
dec
pop
xor
adc
les
mov
jmp
dec
out
sti
ret
test
mov
dec
push
movs
sbb
jo
xor
pop
and
aaa
add
icebp
shr
xchg
jmp
cld
fiadd
or
inc
sbb
jbe
and
push
add
dec
ficomp
ss
push
pop
and
inc
xchg
test
dec
stos
push
ja
mov
jne
xchg
or
gs
loopne
(bad)
jl
or
test
and
cli
add
(bad)
pop
pop
and
ins
jle
imul
sbb
stos
cs
aam
jl
pusha
jno
scas
pop
sub
sar
pop
add
add
jge
out
ret
lds
stc
cmps
mov
dec
and
mov
mov
je
fwait
(bad)
loopne
cmp
jne
cmp
add
movs
paddsb
push
scas
xor
add
mov
dec
mov
adc
stos
sbb
sahf
add
lock
sub
mov
sub
leave
mov
lods
push
lods
pop
cmp
mov
(bad)
push
pop
mov
pop
test
or
sub
pop
xchg
pop
inc
call
xor
sbb
mov
jbe
ja
(bad)
jmp
push
pushf
fnsave
sbb
out
push
mov
sti
cmp
ret
mov
add
cmps
xchg
js
sub
loope
add
add
scas
xchg
cmp
sbb
xchg
jbe
pushf
aas
pop
jo
and
mov
pop
fbld
mov
cmp
fadd
sub
gs
xor
jae
dec
xor
push
lock
mov
push
cmps
or
inc
movs
push
pop
rcl
or
std
push
arpl
adc
push
fcmovbe
ror
adc
push
dec
jbe
adc
add
push
mov
cwde
femms
scas
leave
lds
sar
inc
inc
lods
push
rcr
adc
pop
jo
sti
cli
and
or
and
adc
xchg
(bad)
sub
add
push
sbb
push
and
movs
or
je
xchg
xor
add
push
push
adc
test
fbstp
push
lea
adc
xchg
mov
ins
stos
push
push
stos
push
jl
or
fild
rcl
cdq
cmp
ins
shr
add
xchg
outs
and
push
int3
mov
lock
movs
or
push
push
pop
bound
lock
sbb
popa
rol
inc
xor
or
fwait
pop
popa
shl
test
adc
push
out
xor
sbb
cmp
pop
ds
cdq
das
cmps
xor
call
sub
cmps
xor
mov
mov
cmp
or
loop
shl
mov
ret
pop
mov
mov
icebp
sub
je
inc
jne
pushf
pminsw
dec
and
or
mov
retf
scas
call
push
jbe
stos
sub
rol
sar
mov
push
mov
enter
test
push
mov
jge
hlt
ud2
loopne
retf
pop
push
std
add
js
adc
sub
ret
mov
adc
cld
inc
enter
and
pushf
add
nop
add
enter
adc
in
ud1
rol
sub
dec
cwde
fdiv
dec
and
mov
adc
and
push
sbb
push
inc
sub
dec
addr16
jo
adc
push
inc
and
std
test
sub
mov
sub
gs
push
jmp
les
xor
sti
push
scas
inc
and
and
clc
ret
mov
or
dec
stos
pop
mov
sahf
lea
fmul
jno
out
sbb
fld
jb
iret
jle
add
inc
push
add
cmp
enter
sbb
or
das
add
inc
cdq
in
sbb
scas
inc
daa
sbb
les
xchg
push
jns
bound
mov
dec
or
xor
inc
sbb
or
xor
cwde
dec
or
data16
and
jo
sbb
xor
adc
adc
dec
pop
add
jecxz
cmp
pop
cmc
aas
jle
dec
icebp
in
jae
sbb
adc
push
jno
inc
mov
mov
jb
sub
dec
jo
cli
sub
test
or
and
push
push
popa
push
sub
adc
push
stos
scas
or
push
je
push
mov
push
or
or
cmp
mov
popf
add
add
mov
push
add
mov
or
bound
je
imul
ret
xchg
adc
ins
jg
das
and
lods
cs
outs
ins
lock
jne
mov
and
dec
movs
iret
cmp
mov
addr16
out
aam
cmp
js
adc
cld
call
mov
add
or
aam
std
fmul
xchg
ror
mov
inc
or
push
dec
pop
or
add
add
mov
jmp
add
mov
jp
inc
or
cmps
xchg
(bad)
shl
cmp
mov
aam
std
sub
loopne
add
mov
retf
iret
jne
inc
push
add
ds
setge
sub
mov
popa
arpl
mov
in
xchg
xchg
or
sbb
mov
inc
sub
dec
mov
sub
rol
loopne
js
ficomp
adc
sub
adc
adc
mov
out
popa
xchg
rcl
scas
data16
ror
cwde
cmp
or
jo
mov
cmp
mov
mov
lock
icebp
cmp
dec
add
(bad)
add
mov
jl
add
enter
test
xchg
rol
dec
mov
cmp
sbb
mov
xchg
scas
jns
and
cld
and
jp
fadd
mov
aam
adc
lea
fsub
xchg
push
mov
mov
jmp
test
add
sub
jb
sbb
jg
pop
dec
push
jmp
mov
jmp
mov
jmp
mov
call
mov
pop
mov
pop
dec
mov
jmp
mov
jmp
mov
jmp
inc
es
jecxz
fdivr
jmp
mov
jmp
mov
jmp
aaa
or
adc
dec
outs
mov
add
or
dec
ss
xchg
pop
jo
hlt
retf
ret
test
add
add
push
lock
loope
je
dec
sbb
inc
sti
aam
sti
loop
inc
dec
and
xchg
es
or
enter
adc
jbe
cmp
xchg
jmp
and
xchg
mov
enter
(bad)
or
cld
push
mov
mov
mov
cmp
add
push
ror
mov
es
int3
push
mov
jle
ror
movs
mov
in
inc
movs
sahf
cmc
test
or
xor
retf
mov
lock
fld
adc
test
inc
test
dec
in
or
add
cmp
cmp
fcmovu
(bad)
std
pop
xchg
pop
js
mov
inc
dec
jp
adc
mov
pop
sub
dec
jne
aaa
lock
jge
movs
adc
adc
rol
movs
sub
fidiv
pop
sbb
and
(bad)
pop
sub
mov
clc
addr16
jge
fidiv
lahf
pop
loopne
jne
imul
out
pop
ss
jnp
aaa
ficom
jo
stos
adc
fstp
jmp
jns
jns
push
and
inc
push
jns
push
ret
xor
sub
xor
rol
mov
push
(bad)
je
popa
add
jecxz
rol
cmp
xor
add
stos
xchg
aam
addr16
pop
loopne
sbb
adc
sbb
call
adc
cmp
inc
inc
sub
lock
adc
dec
pop
mov
jg
xor
les
jge
inc
push
call
inc
pop
cmp
jge
cmps
pop
dec
xor
inc
dec
loop
movs
mov
(bad)
xlat
dec
test
pop
mov
into
add
popa
jo
test
mov
and
neg
jbe
adc
sub
sub
mov
xchg
pop
pop
cmp
test
loope
and
fild
lods
push
and
js
or
mov
mov
pop
add
push
jmp
mov
mov
push
mov
jmp
pop
sbb
jg
inc
jmp
mov
jmp
xor
mov
jmp
xor
mov
adc
push
mov
out
inc
mov
and
xor
cmp
mov
test
push
add
dec
adc
sub
sub
inc
sub
fs
xor
jo
sub
data16
cmp
inc
sbb
mov
and
ret
add
loopne
sbb
outs
loopne
and
or
add
out
sbb
and
ja
jmp
cmp
adc
xor
and
xor
mov
and
test
cmps
(bad)
pop
inc
fisub
xchg
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwde
xchg
add
unpckhps
dec
dec
inc
dec
inc
ins
jo
gs
outs
je
je
outs
outs
mov
hlt
add
jnp
push
mov
add
dec
cwde
ds
adc
outs
popa
jo
cs
push
fs
push
data16
je
fs
dec
(bad)
or
fs
adc
mov
out
xchg
je
or
dec
imul
xchg
and
int3
lods
sub
movs
adc
fs
dec
pop
sbb
sub
pop
jne
adc
jne
inc
mov
gs
mov
jl
push
xchg
gs
mov
test
push
inc
retf
push
repnz
cmp
dec
mov
je
jb
bound
or
or
(bad)
xchg
mov
lahf
inc
push
test
dec
popa
pop
ins
or
gs
and
add
in
ret
add
adc
mov
gs
push
addr16
push
jb
and
push
jnp
fs
mov
sbb
lahf
out
loopne
push
repnz
daa
inc
xlat
xchg
jns
fisttp
inc
leave
lea
nop
cmp
add
inc
pop
inc
dec
dec
inc
pop
inc
dec
dec
push
inc
push
push
push
inc
inc
dec
retf
and
jle
pop
jo
jp
add
mov
sub
lods
jecxz
lods
arpl
ror
dec
dec
gs
ins
dec
dec
ins
and
push
ins
add
out
inc
mov
push
mov
dec
bound
adc
fcomp
ja
jb
jns
stc
(bad)
jg
ins
cmps
ds
pop
outs
inc
mov
cli
test
pop
dec
jg
dec
dec
call
outs
test
(bad)
mov
(bad)
outs
retf
pop
pop
sbb
pop
hlt
out
mov
inc
imul
(bad)
cmp
addr16
jbe
jae
fist
xor
inc
mov
aaa
sar
push
sti
enter
push
inc
outs
ins
fs
jo
xor
test
out
ds
sbb
or
aaa
dec
idiv
jmp
inc
jle
pushf
inc
test
in
pop
adc
jae
(bad)
inc
push
mov
push
shl
xchg
ret
push
push
push
push
pop
loop
out
cmp
jmp
sbb
or
pop
or
adc
or
inc
sbb
mov
add
fist
jecxz
inc
jmp
jo
cmp
idiv
es
mov
push
xchg
mov
mov
movzx
dec
jne
cmp
xchg
mov
loope
cmp
pop
pop
pop
cs
fimul
xor
pop
xchg
int3
cwde
sbb
adc
push
or
js
jo
add
scas
ins
das
mov
dec
xchg
push
or
mov
data16
mov
pop
cmp
inc
mov
mov
xchg
pushf
jge
imul
add
jge
jp
mov
push
lock
or
ss
add
jl
(bad)
push
js
push
fadd
dec
add
xor
adc
ins
(bad)
push
add
push
adc
push
or
imul
loopne
fcom
fsub
retf
push
jge
jge
mov
scas
movs
mov
xchg
pusha
(bad)
mov
mov
enter
int
leave
mov
pop
jle
push
aam
in
push
ret
int3
xchg
add
adc
mov
stos
enter
push
dec
cmp
ss
mov
inc
jb
cmps
gs
add
mov
add
mov
clc
or
inc
dec
ja
pop
jge
and
mov
pop
and
arpl
fs
stos
or
jmp
jae
mov
or
add
and
push
mov
and
std
comiss
loopne
rol
fmul
loope
rcr
addr16
jae
inc
popa
jb
jb
inc
in
pop
div
or
or
bound
ss
cmp
lods
or
ins
or
push
test
arpl
cs
je
ins
jae
je
adc
data16
mov
out
fwait
jo
outs
pop
imul
ins
or
dec
dec
jno
gs
in
push
xchg
jp
jnp
aas
mov
adc
in
ja
and
and
gs
popf
mov
fdivrp
shr
jns
fild
mov
cmp
fistp
repnz
mov
push
fcom
mov
ins
or
xchg
jecxz
xchg
add
in
push
push
fs
and
sti
fidiv
ins
in
aam
pop
or
push
push
mov
loopne
mov
stc
outs
nop
ret
hlt
cmps
in
dec
ss
push
hlt
inc
idiv
in
imul
test
push
aam
sub
mov
fidiv
shr
imul
pusha
sti
pop
fild
rcl
sahf
sub
fs
dec
inc
ins
sti
call
dec
push
pop
out
mov
ins
or
push
test
push
sbb
xchg
or
mov
or
ss
jl
mov
mov
mov
push
je
xchg
mov
push
test
cmps
in
sahf
data16
cld
sahf
add
jg
push
mov
inc
xor
inc
imul
sub
enter
inc
dec
xchg
cwde
popa
js
push
imul
pushf
push
or
outs
jae
(bad)
sub
push
push
inc
push
popa
jbe
xor
xchg
push
jo
dec
imul
or
push
sbb
fild
push
ins
outs
outs
je
and
gs
jb
stos
lods
push
adc
out
sub
xchg
xor
mov
mov
mov
push
loop
adc
add
xchg
loopne
sub
fs
shl
outs
mov
mov
ins
mov
or
jne
fs
pop
mov
outs
mov
cmps
iret
out
add
push
inc
retf
jl
inc
adc
hlt
test
call
stc
pusha
push
add
ja
dec
enter
dec
je
add
ud2
jbe
xor
inc
daa
daa
mov
xor
xchg
inc
retf
mov
popa
dec
cmp
(bad)
adc
ins
mov
stos
cmp
jle
or
imul
fsubr
and
or
arpl
jae
ss
in
aam
pusha
and
cmp
sub
push
imul
mov
test
dec
mov
dec
adc
inc
xlat
popa
scas
test
bound
jne
push
mov
int3
popf
mov
popf
repnz
scas
ins
test
inc
jne
stos
lods
add
inc
rcl
out
out
or
add
adc
in
arpl
cmp
adc
jne
adc
cmp
xor
inc
add
pop
je
push
mov
outs
popa
es
jmp
in
nop
mov
inc
or
shr
js
call
repz
and
and
hlt
ret
loop
dec
popa
dec
jae
inc
bound
xchg
arpl
test
dec
mov
shr
imul
jns
cmp
or
cmp
fwait
push
or
sbb
xor
xchg
or
fisttp
dec
push
xlat
bndstx
push
or
add
test
ins
test
push
xor
pop
push
scas
ja
mov
pop
pop
sbb
cmp
enter
sbb
(bad)
jo
jo
push
jne
mov
or
ror
push
dec
aaa
call
jmp
pop
jnp
aad
fisttp
fidivr
pop
call
mov
inc
out
or
and
loop
pop
(bad)
(bad)
cmp
xchg
and
or
ja
and
inc
add
(bad)
js
adc
mov
push
xor
cmp
pop
stos
outs
lds
push
add
mov
js
pusha
sbb
push
aas
and
jge
cmp
fadd
callw
dec
mov
mov
jbe
popf
sbb
retf
or
inc
or
push
mov
sub
sub
mov
into
je
pop
aam
inc
sub
test
out
sub
mov
xchg
sbb
cmps
in
xchg
sahf
sbb
fisub
inc
pop
or
(bad)
pop
dec
pop
jae
in
add
dec
mov
adc
sub
std
mov
xor
js
add
test
fcom
mov
cdq
push
dec
and
dec
mov
lds
ror
dec
or
ja
adc
dec
or
pop
dec
xor
stos
dec
push
dec
call
xor
ja
pop
inc
xor
pop
mov
inc
scas
jnp
ret
xor
inc
retf
cmp
mov
out
inc
xor
xlat
mov
or
sub
pop
inc
xor
add
sub
and
add
ds
inc
xor
add
and
loop
inc
mov
inc
add
add
ja
int3
pop
sub
xchg
pop
dec
aaa
add
out
or
ja
inc
pop
dec
stos
ret
cmp
test
jae
test
add
inc
pop
dec
cmp
or
loopne
pop
lock
cwde
dec
cmp
dec
push
jo
ins
je
xor
cli
fsub
cmp
cli
jb
xor
adc
dec
cmp
ret
xor
add
fucomi
add
loope
xor
jb
xchg
enter
sub
xor
xor
test
xor
xor
adc
xor
xor
xor
iret
out
xor
jb
push
in
push
jbe
xor
xor
xor
xor
push
ja
jb
xor
mov
xor
xor
push
jns
(bad)
sbb
xor
adc
int3
add
in
shl
(bad)
fcomp
pop
add
jmp
das
hlt
pop
into
sbb
mov
push
test
xor
xchg
push
mov
mov
mov
inc
mov
dec
push
test
mov
jmp
adc
loopne
shl
bndldx
cmp
xchg
pop
dec
add
add
and
inc
cmp
mov
ins
je
push
fs
bound
xor
push
popa
or
xor
loop
dec
out
rol
icebp
add
push
pop
ja
sub
imul
push
push
imul
cmc
imul
ret
push
jb
lds
test
std
icebp
aam
dec
sbb
and
out
stc
cmp
sub
popa
cmp
adc
loopne
inc
ins
popa
jae
adc
push
or
adc
sub
(bad)
fsub
pushf
popf
mov
xor
push
mov
movs
mov
or
mov
pop
or
add
jo
sahf
test
push
js
push
dec
int
sti
inc
cwde
xchg
aam
push
clc
mov
mov
test
fisubr
cmc
push
cmp
push
int3
es
push
push
loopne
push
lods
ins
out
les
push
lock
inc
sub
imul
ret
or
inc
jno
xor
cmp
sbb
sbb
fcom
adc
add
cmps
out
add
jb
add
and
push
jg
js
add
(bad)
clc
mov
add
les
xor
clc
add
fild
(bad)
sbb
or
pop
pop
inc
call
(bad)
push
add
or
xchg
push
mov
call
add
mov
mov
dec
out
push
repz
mov
mov
sbb
sbb
call
and
enter
xchg
mov
out
fwait
add
inc
(bad)
adc
add
xchg
xor
loopne
call
lahf
add
ds
mov
pop
cmp
xchg
xchg
dec
adc
pop
fld
fadd
xchg
and
mov
and
out
sub
or
in
jmp
or
xor
pop
inc
int
mov
mov
sbb
scas
push
cmp
dec
gs
hlt
repz
bnd
mov
add
or
sbb
sbb
int
bound
dec
push
jmp
jb
sbb
call
js
add
(bad)
push
or
inc
sbb
or
addr16
xchg
inc
adc
mov
pop
push
add
enter
inc
lock
ins
push
pop
aam
outs
add
adc
mov
xor
xor
inc
mov
jl
dec
adc
rol
xchg
pop
jmp
push
or
push
push
mov
jmp
aaa
jl
or
jmp
sbb
les
popa
or
add
shl
or
push
push
and
daa
sbb
pop
jmp
xchg
push
xchg
mov
fimul
loope
sbb
sbb
xor
sbb
mov
mov
mov
out
lock
leave
dec
cmp
cmp
sub
or
js
mov
sete
adc
push
mov
adc
ret
daa
adc
mov
mov
ror
(bad)
pop
mov
push
adc
out
sbb
xchg
cmp
and
pop
ins
outs
dec
outs
es
or
leave
ja
jmp
das
add
xchg
sahf
push
push
test
aad
cmp
fisttp
stc
xchg
add
sbb
int3
xchg
idiv
lea
mov
cmp
js
div
mov
lea
mov
sbb
push
fild
sbb
loopne
dec
lock
movs
mov
cwde
xchg
cmp
sbb
cmp
jg
or
(bad)
jl
adc
lock
ja
xor
mov
jne
cmp
cmp
adc
pop
push
push
push
repz
cmp
leave
and
mov
loop
in
arpl
enter
inc
mov
mov
ss
cmp
js
jge
hlt
or
push
mov
mov
cld
call
mov
xor
nop
mov
ret
arpl
xchg
cmps
scas
inc
adc
idiv
sbb
adc
mov
or
xchg
dec
add
xchg
pop
xlat
xor
xchg
xor
vmwrite
push
loop
jb
and
cmp
cmovbe
mov
pusha
es
cmp
gs
(bad)
test
cwde
mov
(bad)
rcl
cmp
push
(bad)
(bad)
clc
adc
movs
movs
inc
ss
sbb
sahf
add
push
or
xor
xor
out
mul
inc
and
mov
dec
push
dec
nop
ret
shl
jle
adc
data16
(bad)
xor
add
bound
mov
mov
sbb
inc
sar
sbb
mov
call
ja
push
pop
shl
daa
adc
add
jp
scas
mov
xor
dec
test
add
jmp
call
mov
mov
adc
aad
mov
in
push
add
les
repz
adc
loopne
push
js
mov
and
add
imul
xor
mov
pop
or
jl
adc
jbe
cld
fisttp
pop
or
fstp
xor
xchg
sub
shl
mov
mov
push
inc
dec
jne
sub
push
fstp
pop
sub
mov
inc
push
jbe
mov
push
or
fisub
sbb
pop
adc
sbb
xchg
fcom
dec
clc
adc
push
(bad)
jmp
cmp
jg
cmp
jg
mov
sub
je
sub
pop
fild
sub
mov
adc
fdivrp
fstp
fwait
jmp
cmp
cmp
fld
inc
dec
mov
inc
pop
les
int3
cmp
or
inc
sbb
mov
ffree
cwde
neg
sub
mov
test
cwde
jg
mov
mov
push
xchg
imul
jle
cmps
mov
clc
mov
fcom
mov
neg
sub
adc
adc
test
jmp
sub
push
into
inc
cmp
bound
sbb
loop
jmp
xchg
dec
in
jmp
lods
sbb
jmp
push
xchg
jo
aaa
fdiv
lea
adc
inc
adc
cmps
sbb
or
fadd
adc
mov
fcomp
fmulp
cs
test
lea
(bad)
imul
jnp
movs
add
xchg
sbb
xor
pop
icebp
or
or
and
sub
push
sub
inc
cmp
bound
retf
sub
and
xor
jne
lds
and
push
imul
cmp
push
jns
scas
ds
dec
and
xor
xor
enter
sahf
movq
xlat
mov
lods
shl
xor
mov
sub
lock
pcmpgtb
add
in
mov
in
addr16
mov
xchg
push
push
inc
iret
out
cmp
enter
inc
add
loopne
dec
mov
(bad)
movs
clc
jmp
mov
cld
(bad)
mov
rol
movzx
test
je
test
ja
data16
into
rcl
(bad)
stos
neg
popa
mov
dec
add
sub
push
fstp
nop
and
mov
or
jo
gs
mov
jb
and
pop
xchg
cld
mov
pop
rcl
mov
jns
add
jmp
jae
gs
cs
add
xlat
add
call
fs
enter
inc
jnp
push
call
mov
movs
jg
xor
add
lds
(bad)
idiv
loop
push
inc
mov
movs
leave
aam
jl
retf
and
gs
inc
sti
jg
call
xlat
popf
rol
jg
ja
lahf
xor
cli
adc
jne
outs
ins
cmp
gs
xor
ja
pop
mov
mov
xchg
dec
popa
outs
popa
addr16
fisttp
add
ret
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
pop
mov
sbb
sti
pop
add
or
call
jnp
inc
repnz
inc
fdivr
push
inc
sbb
lock
inc
dec
inc
js
gs
pusha
popf
pop
pop
xlat
pop
xor
sub
add
mov
jnp
push
cld
push
retf
das
or
adc
sbb
xchg
ins
cmps
rol
push
js
test
and
inc
push
and
mov
jo
push
and
outs
loopne
jp
cli
inc
call
mov
or
inc
fst
push
push
push
pusha
push
pop
out
sbb
sar
pop
add
mov
ds
push
outs
xchg
push
enter
cs
shl
out
fcomp
mov
out
out
or
cmps
sahf
unpcklps
jmp
ins
dec
mov
add
and
xchg
sub
mov
mov
test
add
sub
ror
cmp
fcomp
sbb
sbb
jb
sbb
sbb
pushf
mov
pop
movlps
outs
inc
pop
fs
inc
ucomiss
adc
mov
sti
adc
aam
push
fistp
mov
adc
jo
cmp
loope
cmp
push
and
iret
xor
xchg
cmp
repz
mov
cmp
repz
arpl
jnp
repz
loope
cmc
fnstcw
fld
dec
outs
sub
add
add
aaa
mov
aaa
mov
push
ss
mov
rol
call
ja
xchg
inc
add
mov
ds
bswap
daa
movs
push
xor
and
enter
push
aaa
push
dec
and
dec
mov
sar
or
xor
out
push
jb
jmp
xor
push
das
sti
fs
sbb
or
imul
sub
scas
shl
mov
cmp
xor
inc
inc
cmp
xor
adc
sub
fs
adc
inc
imul
adc
mov
sub
push
dec
xchg
fincstp
ficom
inc
push
dec
add
sahf
leave
leave
enter
add
jmp
fs
add
daa
lahf
jl
xor
hlt
cmovl
push
add
add
add
push
add
aaa
daa
sti
mov
(bad)
inc
(bad)
jb
jns
dec
pusha
xchg
cmp
dec
push
gs
test
retf
xchg
pop
inc
pop
add
(bad)
frstor
or
ins
outs
jae
jecxz
push
or
add
push
jb
out
call
or
gs
xchg
sub
adc
imul
call
push
sbb
mov
push
push
xor
les
(bad)
scas
xor
pop
es
scas
test
dec
imul
push
scas
and
arpl
and
test
jb
fist
adc
jae
outs
cmp
mov
and
(bad)
(bad)
je
bound
inc
cmp
dec
rol
gs
xchg
push
bound
(bad)
pop
add
mov
and
sbb
inc
int3
xchg
jbe
call
push
fs
or
inc
shl
pop
push
push
pop
icebp
sbb
aam
dec
inc
jae
in
inc
mov
inc
pop
xchg
dec
push
sub
scas
dec
sar
mov
cmps
dec
add
sub
jb
push
mov
nop
mov
cs
push
inc
outs
push
push
pop
out
sbb
or
xor
in
sub
sub
cdq
lods
add
xchg
xchg
mov
cs
mov
push
dec
popa
cmp
mov
xchg
not
cmp
add
or
shr
pop
sbb
jae
mov
dec
dec
jno
add
jo
fiadd
iret
sbb
dec
and
cmps
rol
or
dec
(bad)
nop
sbb
pop
imul
push
loopne
pop
inc
jg
cwde
adc
sbb
adc
pushf
adc
push
inc
jb
popa
dec
xchg
sbb
jns
out
cs
ds
sahf
ror
xor
push
fdiv
mov
add
pop
mov
pop
adc
neg
outs
pop
outs
paddusb
ss
xchg
sub
mov
outs
xor
and
jne
sub
cli
dec
outs
jbe
or
and
imul
adc
mov
push
ret
and
fistp
push
shl
jmp
outs
sub
add
jp
js
(bad)
movs
mov
add
lods
js
add
add
add
sub
outs
mov
hlt
xor
in
or
sub
jl
xchg
test
scas
test
ds
xchg
push
ja
jg
scas
lods
push
sbb
ret
dec
mov
lock
daa
mov
loopne
out
arpl
push
mov
or
sbb
pop
pop
pop
mov
xlat
xor
pop
ret
adc
xor
mov
mov
and
mov
int
add
or
ficom
fwait
data16
cs
push
outs
push
ja
inc
clc
int
mov
dec
dec
jo
xchg
push
mov
int3
mov
sbb
inc
popaw
jne
je
inc
or
cmp
int
push
xchg
cwde
or
inc
push
ret
xor
jmp
xchg
sub
push
dec
bound
or
out
loop
sub
mov
pop
shl
or
pop
icebp
mov
and
fwait
mov
(bad)
pusha
jae
pushf
sub
ret
inc
push
scas
cmp
jne
or
or
inc
das
pop
mov
pop
(bad)
mov
push
mov
out
adc
jl
xor
xchg
mov
push
addr16
ins
ja
sub
sub
dec
gs
enter
or
mov
mov
lea
or
pushf
adc
retf
and
xor
rol
(bad)
leave
jmp
dec
fcomip
push
lods
shl
add
inc
imul
jp
mov
std
mov
add
inc
mov
fisttp
mov
or
and
fnsave
gs
dec
fisttp
adc
inc
mov
mov
repnz
or
vdivpd
sub
push
push
es
xchg
push
and
dec
push
xor
pop
xchg
das
and
in
and
pop
sub
add
push
sub
add
add
mov
xchg
dec
leave
fadd
lock
fdivrp
push
xchg
xor
dec
xor
imul
mov
sub
loopne
and
pop
jmp
sub
pusha
xor
pop
das
mov
cmp
cmps
xor
or
or
sbb
adc
sbb
js
icebp
adc
xchg
push
cwde
mov
in
ins
add
call
push
mov
lods
hlt
xchg
push
sbb
and
mov
jbe
nop
push
jg
xlat
ret
cli
cdq
lods
push
inc
cwde
push
fstp
xor
mov
mov
inc
imul
sub
iret
sub
pop
xchg
add
sub
js
inc
cmc
jl
inc
xchg
add
add
adc
pushf
fsub
push
dec
jbe
sbb
in
daa
adc
inc
cs
cmc
mov
psrlw
mov
xlat
and
inc
jae
int3
add
daa
daa
daa
and
int
xchg
xchg
xchg
xchg
pop
push
cwde
loopne
leave
leave
enter
dec
je
in
leave
stos
loope
sbb
in
in
mov
xor
aas
mov
pushf
fisttp
mov
push
lds
std
fimul
push
mov
add
jmp
lahf
dec
cmp
push
dec
or
(bad)
out
or
inc
adc
cmp
inc
repz
or
inc
pop
call
add
iret
xor
ins
pop
jb
cdq
add
push
jg
mov
xchg
add
fisubr
pop
mov
add
add
inc
inc
jg
pusha
dec
mov
scas
inc
inc
fs
adc
xor
mov
popf
hlt
push
popa
ins
jne
cmp
push
pop
xor
push
lods
popf
pop
es
ins
hlt
add
push
jae
add
sub
outs
cdq
data16
sub
mov
jl
adc
sbb
add
or
cmc
enter
inc
mov
jae
and
xchg
add
xchg
adc
dec
xchg
and
das
leave
fwait
jg
inc
and
fwait
add
popa
sbb
lea
pop
or
test
pop
dec
push
popf
out
jae
imul
sbb
mov
dec
imul
xor
call
mov
ror
imul
(bad)
sbb
push
sbb
(bad)
in
fisub
add
push
inc
mov
jo
test
inc
xchg
loopne
sub
jo
shl
or
sub
add
or
dec
cdq
or
adc
xchg
xor
pop
xor
dec
xchg
and
mov
dec
gs
(bad)
and
add
(bad)
dec
popa
inc
xchg
sub
mov
dec
pushf
sub
jo
nop
loope
into
dec
cmp
inc
jl
jmp
cmps
call
mov
mov
inc
mov
inc
inc
ror
and
or
sub
adc
xor
or
lea
dec
or
(bad)
jp
ffreep
add
dec
ins
or
xor
cmp
sub
dec
pop
cmps
and
popa
pop
xchg
sbb
jg
sub
shl
xchg
pop
or
fsubr
xchg
xor
dec
or
cmp
arpl
movs
xlat
sar
fdivr
ds
pop
or
and
xchg
inc
inc
add
xor
bound
sub
adc
adc
mov
(bad)
jbe
mov
mov
cdq
or
dec
cmp
test
add
dec
hlt
mov
inc
popa
pop
arpl
jns
add
lods
fdivr
das
rcl
out
(bad)
mov
inc
ret
cld
imul
outs
sbb
ins
xchg
jne
mov
mov
add
call
mov
test
test
mul
cmp
enter
push
mov
push
mov
test
je
xor
mov
fisttp
pushf
mov
mov
push
mov
cmp
psadbw
pop
pop
ret
jg
push
push
test
or
lock
mov
mov
xor
mov
sbb
push
lea
mov
and
mov
xlat
and
fs
xor
mov
mov
pop
pop
pop
ret
nop
xchg
xor
cmp
and
mov
sbb
dec
push
cwde
cmp
mov
inc
sbb
mov
cmp
les
cwde
mov
mov
mov
(bad)
jl
inc
pop
push
or
and
lock
aas
imul
adc
or
cmp
lods
rol
jo
adc
push
pop
idiv
ror
jle
adc
loopne
push
lods
out
add
repnz
mov
cld
mov
cli
aam
push
push
cmp
xor
mov
movs
pusha
sti
inc
iret
xor
aaa
or
inc
sbb
adc
push
push
sbb
mov
add
das
call
fdivr
xchg
test
je
es
jo
sub
jp
retf
jnp
rcl
clc
mov
call
in
mov
fcom
push
jmp
lock
fcomp
mov
add
ret
ret
dec
cdq
(bad)
icebp
sbb
xchg
cmp
mov
cmp
mov
dec
jne
lahf
mov
dec
cld
push
jle
mov
cmp
cmp
cmp
and
mov
push
in
call
outs
add
inc
inc
pop
or
jl
pop
sub
neg
mov
repnz
sti
sub
jne
pop
fcomip
hlt
mov
loope
fs
sbb
cmp
or
in
or
mov
hlt
sbb
dec
sti
mov
cli
push
hlt
fimul
or
push
mov
cmp
xchg
sbb
mov
push
fmul
mov
int3
int3
push
rcl
call
mov
jmp
sbb
sbb
sub
out
cli
sbb
sbb
and
cmp
jmp
(bad)
cmp
clc
div
(bad)
rcl
inc
and
cmp
mov
xchg
cwde
mov
pop
add
push
rcl
or
mov
(bad)
test
mov
aam
sub
and
pop
(bad)
pop
call
xor
pop
rcr
adc
inc
jl
inc
ds
inc
lock
xor
add
ret
cli
pop
xchg
fidivr
popa
or
pop
dec
jne
fimul
mov
push
mov
jne
adc
scas
fild
call
or
push
or
push
movs
out
jp
clc
out
je
lock
jle
adc
adc
jnp
adc
shl
cmp
dec
ins
dec
xor
and
jmp
jbe
mov
mov
jb
jns
inc
in
movs
imul
in
xchg
sbb
push
fisubr
cmp
dec
test
jl
inc
mov
lea
pop
sub
cmp
push
push
push
sbb
sbb
sbb
in
dec
jne
mov
and
or
xor
adc
ja
inc
js
inc
jg
add
(bad)
stos
and
push
(bad)
imul
repnz
adc
cli
add
js
out
mov
in
es
push
das
jmp
pop
dec
cmp
xor
jb
cmp
sub
add
push
cmp
jl
mov
mov
push
dec
call
inc
mov
or
scas
jl
stos
inc
inc
cmp
inc
es
mov
sbb
(bad)
mov
mov
ja
pop
or
nop
cmp
cmp
pop
push
ja
inc
jo
call
gs
xor
dec
les
int3
fdiv
jne
jle
lock
nop
in
adc
add
pusha
ins
pop
cs
stos
mov
aaa
call
enter
xor
mov
call
inc
push
jp
push
mov
dec
div
pop
loopne
mov
jns
pop
add
adc
mov
loope
mov
adc
sahf
cmp
pusha
in
jne
ins
mov
cdq
xchg
or
je
rol
aam
popf
mov
or
adc
movs
pusha
(bad)
adc
mov
and
ret
xor
or
dec
adc
outs
push
push
(bad)
fstp
and
mov
arpl
or
mov
add
pop
add
nop
int3
push
loope
lea
dec
sub
add
in
ror
pop
cmps
ror
cmp
pop
jno
aaa
mov
mov
fcom
push
iret
jnp
mov
les
iret
xchg
jmp
and
or
mov
lods
les
or
push
jno
and
xor
enter
mov
fmul
mov
ss
enter
pop
mov
push
sub
stos
sar
ret
sbb
lea
cld
push
adc
pop
daa
pop
and
cmp
add
or
mov
and
adc
sbb
xor
mov
inc
add
(bad)
(bad)
loopne
mov
(bad)
unpckhps
cmps
mov
xlat
adc
mov
jmp
dec
pusha
push
pop
shl
xchg
inc
mov
mov
stos
nop
mov
and
or
inc
pop
mov
inc
adc
push
repnz
sbb
sbb
or
add
cmp
pop
sahf
rcr
cmp
cmp
pop
or
ror
(bad)
mov
push
test
push
repz
ret
lock
lea
push
pop
addr16
push
out
fld
mov
mov
not
or
mov
xor
dec
je
or
rcr
lock
sub
je
jmp
jl
or
pop
mov
and
pcmpgtb
sbb
aas
mov
adc
xchg
mov
sbb
mov
or
(bad)
cmp
ds
push
mov
hlt
lock
xchg
std
sub
and
add
ins
push
out
or
add
js
pop
mov
mov
dec
cmc
inc
adc
sbb
pop
adc
int
pop
repz
xor
loop
into
xlat
dec
in
adc
(bad)
clc
sbb
ror
stc
inc
cmp
add
mov
xor
mov
inc
clc
or
mov
out
push
loope
mov
dec
jne
adc
sbb
call
sub
add
pop
dec
pop
cdq
dec
sahf
adc
data16
in
and
call
and
push
dec
push
add
rcr
or
pop
push
sub
aad
and
cmp
jo
mov
jne
cmps
xchg
popa
mov
xlat
cmp
mov
add
mov
into
cmp
in
retf
jecxz
inc
pushf
add
push
xlat
inc
std
mov
mov
ret
push
dec
rcl
or
inc
fstp
in
test
xor
shr
mov
rcr
mov
retf
mov
pop
or
enter
xchg
inc
or
shr
arpl
sub
inc
inc
popf
sbb
ins
inc
and
pushf
mov
outs
jmp
stos
out
loope
mov
aaa
and
xor
add
jmp
out
dec
jne
daa
das
adc
mov
add
adc
or
pop
or
fsub
pop
add
add
or
mov
pop
les
cmc
in
dec
inc
push
push
int3
rol
shr
mov
mov
cdq
aas
test
dec
xchg
test
xchg
xchg
xor
shl
std
mov
ror
ror
add
mov
add
add
add
or
inc
ffree
aam
popa
lds
ret
out
(bad)
mov
jle
hlt
je
call
jmp
cmp
and
aas
rol
cmp
jne
sbb
mov
jmp
inc
push
push
addr16
sub
pop
ficomp
fnstsw
retf
ret
adc
pop
dec
xor
mov
cmp
push
call
sar
mov
aad
daa
cmp
push
ds
sti
xchg
mov
test
mov
inc
repnz
adc
hlt
je
loopne
push
xchg
sahf
pop
sub
mov
test
pushf
(bad)
sub
sbb
nop
pop
call
jae
adc
jo
loope
ret
(bad)
lods
or
addr16
test
xchg
cld
and
ja
add
sub
push
scas
jo
ins
mov
into
push
jmp
jnp
xor
add
mov
je
sub
mov
pop
push
(bad)
push
daa
jg
jae
jge
rcr
shl
push
lea
mov
mov
movs
lock
cmp
jecxz
pop
test
jge
inc
and
and
pusha
cmp
jle
imul
mov
push
jge
enter
and
(bad)
call
push
test
jl
cmp
jl
pop
add
nop
cmps
test
in
dec
mov
mov
(bad)
lock
jmp
add
adc
jbe
hlt
cmp
jg
les
sub
fiadd
lods
nop
into
ins
mov
(bad)
jmp
cld
int
push
in
jmp
leave
mov
dec
push
je
mov
je
jle
or
ins
dec
add
mov
retf
dec
imul
mov
call
je
or
mov
loopne
mov
popa
mov
ss
ja
stos
push
push
xor
or
mov
push
add
shl
les
nop
mov
daa
pusha
cmp
adc
sbb
jp
adc
adc
(bad)
loope
nop
xor
call
mov
nop
mov
xor
mov
xchg
add
icebp
mov
and
movs
add
lods
and
xor
cmp
cdq
test
sbb
push
mov
lea
cmp
cmp
add
(bad)
inc
sbb
cmp
sbb
inc
push
bound
or
add
inc
sbb
shl
or
nop
out
cwde
adc
xchg
mov
pop
jp
inc
mov
or
lock
cwde
jo
popa
cmp
lds
inc
inc
daa
and
dec
cmp
inc
pop
lea
mul
push
or
fisttp
test
pop
cmp
dec
arpl
add
sbb
lock
push
dec
adc
or
xor
jbe
cmps
adc
sbb
(bad)
retf
(bad)
cmp
test
add
pop
je
mov
in
in
cmp
mov
jge
push
call
push
jmp
push
dec
lock
adc
pushf
sbb
call
lock
dec
jle
xor
rcr
fild
js
loopne
jge
test
js
inc
aas
mov
add
iret
push
push
xchg
ret
and
clc
xchg
pop
sub
push
mov
fidivr
adc
cmp
data16
or
int3
call
inc
sbb
call
fimul
(bad)
icebp
mov
call
lods
mov
xor
sbb
add
push
push
push
enter
push
ret
and
cmp
mov
dec
pop
jo
adc
adc
loopne
push
sbb
mov
sub
(bad)
or
addr16
adc
add
aaa
sahf
psadbw
hlt
xchg
in
ror
or
movs
cwde
sbb
(bad)
cmp
mov
jg
out
inc
into
(bad)
mov
(bad)
cmps
mov
jo
xor
pop
or
movs
cmp
sbb
(bad)
loopne
dec
out
adc
or
adc
mov
add
add
pop
adc
test
movs
test
es
lods
jne
inc
adc
push
inc
rol
dec
pop
push
jmp
dec
bound
leave
inc
or
add
cvtps2pi
jae
or
or
inc
and
add
pop
add
inc
popa
jne
je
mov
sbb
fmulp
add
scas
add
xchg
cmp
push
into
repz
ds
movs
es
push
mov
push
fwait
add
cs
inc
data16
lock
cmp
aam
xor
add
add
ins
xchg
add
and
or
js
adc
int
push
dec
pushf
jge
add
mov
mov
push
mov
and
cmp
je
jg
clc
fsubr
add
sahf
jle
add
call
(bad)
rol
sub
dec
mov
push
jne
fidivr
mov
fs
aaa
stos
gs
cmp
lahf
dec
adc
or
leave
dec
ret
xor
mov
jne
addr16
push
or
xor
dec
xchg
(bad)
adc
inc
xchg
push
loope
pop
cmp
or
or
sub
pusha
mul
xchg
push
imul
push
pop
add
(bad)
dec
and
cmp
pop
xchg
mov
ja
lods
mov
push
mov
cmp
pop
push
lds
test
jg
push
mov
or
outs
jg
fsubrp
adc
or
out
outs
mov
aad
mov
js
(bad)
push
into
push
add
add
push
push
dec
outs
jbe
inc
jb
popa
jns
popa
outs
popa
shl
fbld
add
and
add
or
int3
push
inc
pop
shl
mov
icebp
adc
imul
test
xchg
pop
push
outs
and
and
add
jmp
pop
cmp
icebp
jnp
int
mov
or
lods
cmc
aaa
cld
popa
mov
imul
push
lods
ins
std
mov
xchg
scas
add
push
add
in
enter
aam
or
gs
imul
dec
int
in
jmp
jnp
jge
dec
pop
je
rol
cmp
not
lods
outs
adc
jmp
shl
cmp
inc
push
jl
popa
aas
push
(bad)
scas
jl
or
dec
daa
in
push
dec
popa
mov
in
ins
add
daa
pop
js
daa
mov
sub
cwde
ja
add
xchg
add
jnp
popa
lahf
lock
push
sub
sub
xor
neg
mov
or
out
mov
push
jbe
adc
push
xor
xlat
cmp
mov
push
lock
dec
add
push
clc
loop
push
fcomp
ins
xor
mov
push
add
inc
retf
cmp
push
xor
xchg
imul
add
add
cmc
lahf
jg
mov
dec
or
gs
mov
adc
push
push
fstp
popa
xor
arpl
mov
pop
xor
dec
outs
inc
ins
outs
jae
pusha
mov
sbb
push
sub
(bad)
outs
dec
in
clc
push
ficom
arpl
push
add
push
arpl
shr
jo
out
icebp
cmp
add
repz
dec
pop
xchg
popa
jno
sbb
xchg
test
mov
push
cdq
sbb
cld
call
push
bound
add
add
(bad)
out
jmp
pop
add
push
clc
or
rol
ins
sbb
imul
inc
call
in
inc
cmp
mov
call
outs
dec
ja
push
cmp
cdq
daa
test
fsubr
ins
add
jmp
(bad)
jne
daa
dec
pusha
mov
sbb
push
dec
add
mov
outs
fcom
je
test
xchg
xchg
jae
ror
and
jb
sub
lods
mov
or
dec
push
mov
daa
mov
shr
loope
push
arpl
out
int
jae
ret
inc
pop
and
pop
in
ret
(bad)
pop
aas
or
or
jno
pop
out
fcom
scas
dec
cmp
push
add
pop
inc
scas
push
scas
outs
lock
rcr
or
pusha
mov
sbb
add
arpl
call
jp
push
outs
mov
jmp
mov
push
idiv
test
inc
neg
and
push
inc
sbb
fwait
mov
jo
adc
inc
push
xchg
data16
push
and
add
fsub
fild
cmp
cmp
pop
cdq
loopne
xchg
test
adc
cwde
cmp
sbb
dec
outs
fcomi
add
adc
fistp
adc
outs
dec
jbe
push
jb
add
mov
and
je
cld
jne
cdq
hlt
jae
jns
es
and
outs
inc
push
xor
xchg
jb
push
imul
fs
out
sub
jb
pop
dec
popa
mov
inc
ins
ins
data16
jl
(bad)
pop
mov
lea
mov
mov
mov
cmp
data16
lea
fcom
mov
push
add
lods
and
inc
stos
jae
and
xor
adc
out
inc
ja
cmps
ret
mov
ins
jns
je
jb
daa
shl
pop
bound
ja
dec
jae
xchg
lods
push
push
mov
dec
add
lods
outs
mov
jo
fs
mov
bound
aas
jp
push
add
cmp
inc
pop
inc
fs
mov
pusha
jbe
sub
add
mov
dec
repz
mov
imul
adc
push
rcl
dec
mov
jae
inc
call
sub
add
add
xor
jne
outs
jae
push
lds
(bad)
ja
js
or
arpl
jmp
data16
gs
mov
and
enter
push
cld
or
xchg
in
mov
mov
adc
add
rcl
add
inc
shr
mov
mov
push
adc
add
push
std
add
inc
dec
inc
jp
inc
lock
inc
outs
or
add
pop
int3
int
mov
aad
sub
sbb
jae
rcl
push
ja
inc
lods
loop
cmp
or
in
sti
loopne
add
inc
(bad)
sbb
popa
sbb
or
sar
sub
push
sbb
dec
adc
inc
adc
or
pop
(bad)
push
sbb
sub
add
sub
sub
xchg
test
mov
sub
add
jle
inc
push
and
loop
out
inc
test
aam
mov
mov
mov
or
mov
lods
xchg
or
or
push
ret
or
in
add
xchg
enter
add
xor
push
ins
sub
into
add
adc
ss
xchg
mov
inc
gs
popa
jae
popa
sbb
aas
js
nop
or
dec
add
add
xchg
or
jno
add
js
or
jo
xor
inc
pop
sbb
fist
sub
jne
out
ins
adc
mov
fmul
daa
inc
sbb
mov
sbb
inc
dec
dec
mov
add
push
mov
add
or
pop
pop
imul
jno
outs
xor
pxor
push
or
jl
loope
fld
add
dec
pop
sbb
fild
mov
loope
pushf
cmp
xchg
fild
cmp
rol
and
or
push
or
push
cmps
aam
push
mov
cmp
push
in
push
adc
or
adc
pop
popa
mov
test
popf
cmp
sub
gs
test
ja
(bad)
pusha
jb
outs
arpl
pop
(bad)
fcom
pop
inc
sub
inc
rol
inc
gs
mov
arpl
ins
xchg
jnp
cdq
add
xchg
fucomi
inc
cmp
xchg
imul
mov
add
jb
sbb
inc
fld
popf
leave
out
movs
pop
call
fisttp
push
xor
push
cli
push
pop
mov
sbb
pop
scas
or
cmp
jg
ds
or
and
cmp
arpl
pop
mov
push
add
popa
jbe
pushf
in
add
pop
das
push
jae
dec
mov
pushf
or
sbb
add
or
pop
test
add
gs
(bad)
fld
call
sahf
sub
sbb
add
push
cwde
ret
test
add
push
das
inc
mov
scas
add
cmp
(bad)
fld
sub
icebp
aam
mov
and
push
fadd
or
stc
mov
inc
stos
pop
jae
outs
jne
mov
mov
add
pop
or
pop
inc
or
add
or
inc
xor
into
jl
inc
sbb
imul
lods
dec
mov
and
sbb
dec
add
add
sub
xchg
mov
add
dec
add
ins
fdivr
sbb
aaa
sbb
int3
add
das
test
aaa
push
add
or
dec
fcom
movzx
pop
aad
je
js
mov
add
outs
in
jno
mov
cld
or
cmp
fistp
inc
or
add
or
add
inc
sbb
mov
pop
add
vmovss
add
aaa
push
jo
es
sti
cmps
pop
push
call
xor
call
push
int3
ss
mov
adc
cmp
js
dec
add
(bad)
push
je
jle
inc
pop
aaa
add
aas
in
jb
je
push
add
mov
out
test
inc
dec
das
enter
cli
jle
fidivr
shl
into
js
dec
pop
imul
ins
sbb
fiadd
imul
inc
sbb
ret
daa
adc
or
cmp
adc
xor
pop
push
addr16
and
shl
fsub
sbb
dec
test
scas
out
jbe
xchg
pop
sub
inc
xor
pop
(bad)
enter
xor
clc
bound
jnp
or
xchg
fcom
xchg
test
test
sub
dec
imul
imul
xor
ds
pop
in
sahf
adc
stos
lods
push
push
or
cmp
mov
call
inc
mov
jns
mov
mov
add
adc
arpl
mov
xor
xor
jmp
mov
sub
xor
jmp
aam
cmp
jmp
test
adc
scas
movs
xchg
push
movs
jns
ror
or
cwde
ret
popf
imul
inc
pushf
jne
adc
and
cmps
jnp
or
adc
cmps
(bad)
(bad)
(bad)
mov
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
out
std
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
pop
sar
jnp
sahf
enter
xor
push
push
ds
ss
(bad)
les
loopne
nop
(bad)
add
xchg
push
sub
inc
push
mov
xchg
outs
ins
mov
and
xor
xor
test
aad
retf
fstp
ins
dec
xchg
jbe
mov
jge
cmp
dec
jo
adc
or
ja
adc
and
lds
ins
pop
add
jmp
out
adc
pop
xchg
xchg
xchg
xchg
and
fst
push
popa
or
inc
inc
inc
enter
xor
inc
inc
pop
sub
jmp
pop
mov
sub
xchg
xchg
add
inc
inc
or
push
push
js
jle
push
pusha
adc
or
add
xchg
bound
sbb
push
add
pop
mov
call
adc
or
cmc
out
rol
out
mov
inc
sub
add
push
add
xlat
add
test
(bad)
mov
pop
inc
and
pusha
adc
add
jae
jnp
pop
xchg
pop
loopne
sbb
push
retf
xor
mov
or
mov
aad
inc
add
dec
add
add
retf
adc
mov
inc
adc
dec
int3
dec
and
pop
dec
push
inc
bound
or
inc
push
push
pusha
push
pusha
adc
jmp
or
bound
ja
pop
dec
adc
and
inc
stc
add
scas
sub
xor
inc
push
or
movs
shr
add
push
push
mov
mov
and
push
push
cmp
je
inc
outs
xchg
loope
sub
adc
outs
jb
or
int
fisttp
and
jae
jb
dec
popa
and
mov
xor
dec
sbb
push
lods
int3
or
mov
mul
xor
push
or
mov
pop
and
dec
xchg
push
sbb
movs
inc
mov
push
pop
gs
jns
aam
xor
xchg
imul
pop
jo
push
inc
aam
nop
xor
jbe
jae
sbb
sbb
add
jb
jne
in
pshufw
or
mov
sbb
push
outs
shl
jb
pop
push
outs
push
ss
xor
(bad)
es
push
cli
sbb
mov
pusha
add
rsqrtps
pop
push
and
shl
in
gs
mov
scas
imul
add
pop
in
add
mov
mov
call
add
push
or
fmul
loopne
push
or
jecxz
adc
sbb
jb
adc
push
pop
add
push
pop
push
sbb
sbb
cmp
dec
add
(bad)
mov
aas
add
sahf
(bad)
jg
lock
imul
add
pop
das
pusha
shr
lea
(bad)
sbb
(bad)
and
push
mov
push
sahf
jo
test
mov
or
pop
and
sub
mov
or
sbb
xor
pop
and
adc
inc
icebp
lods
dec
ss
mov
clc
sub
sbb
movs
test
fisttp
dec
add
push
pop
adc
adc
add
and
xchg
inc
mov
xchg
inc
adc
xchg
dec
bound
mov
ret
push
loope
pop
mov
ret
push
pop
mov
into
inc
fstp
push
or
inc
dec
or
fwait
imul
push
mov
mov
inc
lock
and
mov
xchg
(bad)
call
sub
or
lock
mov
rol
arpl
sbb
(bad)
mov
adc
push
stos
push
sbb
push
adc
mov
mov
cmp
dec
xchg
aas
out
sbb
ds
or
sub
ror
push
push
cwde
scas
lahf
mov
mov
xor
ror
pop
popa
inc
js
push
fs
or
mov
mov
add
or
outs
mov
int3
cs
sub
sub
je
add
mov
xchg
push
sub
push
push
mov
pop
loopne
idiv
add
and
shl
sbb
imul
add
call
xor
and
jne
hlt
push
sbb
and
ds
dec
das
fwait
push
mov
inc
cmps
(bad)
pop
jns
or
pop
test
imul
adc
sbb
xor
mov
inc
cmp
test
push
sbb
test
jnp
or
popa
inc
cmovge
mov
mov
push
push
ds
cld
or
adc
fs
inc
mov
pop
(bad)
fst
xor
aaa
push
dec
or
dec
rol
or
lods
push
pushf
bound
loope
fnstsw
push
push
sub
cmp
shl
daa
pop
add
in
pusha
daa
cdq
push
nop
daa
mov
mov
cli
add
and
xchg
dec
xor
ins
adc
or
(bad)
shl
cmp
xchg
add
push
stos
adc
adc
adc
or
and
jg
test
sbb
iret
pop
or
and
mov
test
(bad)
lock
sub
inc
test
loopne
inc
xchg
lods
ret
adc
push
bound
cmc
or
mov
lods
(bad)
push
add
xchg
frstor
lock
dec
inc
xchg
sbb
lods
mov
pop
call
scas
jg
push
pop
pop
sbb
(bad)
sbb
jo
ror
loop
test
push
ja
sbb
in
sar
mov
pop
lods
dec
adc
idiv
je
lea
and
dec
dec
dec
and
sub
es
das
jnp
pop
inc
or
cs
pusha
sti
rcr
ud2
or
or
push
sub
jo
sbb
stos
xchg
je
shl
fcmovne
jge
pop
jo
xchg
push
xchg
jo
lds
xchg
xchg
sub
mov
adc
cmp
cmp
in
jnp
add
adc
repz
push
jns
mov
(bad)
out
in
movhps
pop
xchg
add
adc
and
push
sub
daa
std
hlt
js
fiadd
cld
push
sub
pop
sbb
mov
xor
enter
ficom
lods
add
and
dec
add
lahf
xchg
mov
out
or
sbb
inc
fwait
dec
sub
xor
push
mov
imul
cmp
fisub
cmp
dec
inc
xchg
xor
or
push
scas
dec
fisttp
hlt
test
inc
cmps
sbb
push
mov
add
inc
pop
or
cmp
das
mov
pop
into
test
mov
jo
retf
pusha
add
add
scas
rol
rcr
xor
add
or
pusha
jg
inc
imul
inc
and
jns
push
push
xor
(bad)
dec
sub
and
les
mov
js
cs
or
ins
addr16
or
dec
stos
inc
retf
push
outs
and
jmp
push
jb
push
dec
bound
(bad)
adc
mov
or
sbb
inc
leave
imul
adc
mov
xor
push
cmp
or
add
add
scas
xchg
mov
cmp
mov
rol
cmp
int3
jne
test
outs
xor
adc
mov
add
inc
shr
inc
clc
mov
imul
mov
add
push
add
jns
cmp
popa
ret
mov
out
je
add
daa
or
inc
(bad)
int3
nop
pop
add
movs
bswap
xadd
or
adc
xchg
cwde
xor
(bad)
setl
and
push
loopne
inc
push
pop
pop
imul
xchg
or
cmp
fnsave
push
dec
mov
add
xor
dec
dec
cmp
adc
fld
mov
mov
cmp
mov
cdq
dec
cmp
and
adc
push
xor
movs
and
jge
xor
jbe
or
stos
sub
lea
into
dec
cdq
xor
xor
js
js
scas
or
test
sub
jg
inc
int3
imul
or
jae
mov
push
mov
and
add
lods
pushf
xor
dec
xchg
fisub
cs
arpl
mov
in
loopne
pop
sbb
mov
lds
add
xchg
and
ins
aas
sbb
mov
push
dec
pop
ins
aad
js
in
jge
lock
fcom
inc
adc
cdq
retf
or
int
xor
jnp
push
pop
push
cli
fdiv
aas
mov
popf
or
data16
aaa
dec
arpl
push
cmp
pusha
cmp
push
cli
lock
mov
adc
out
ficomp
call
fsubr
adc
pop
jno
pop
add
sub
cmp
punpckhwd
es
das
lock
ja
xlat
xor
xor
add
stc
push
add
call
call
shr
mov
jl
out
pushf
mov
cmps
shl
push
mov
add
clc
push
idiv
cmp
pop
push
add
dec
jl
jns
push
or
ss
ins
push
add
or
sbb
aaa
dec
sbb
add
arpl
xor
aad
add
stos
xor
jne
add
jno
fcomp
mov
sbb
inc
outs
sbb
sbb
cwde
shr
jae
sbb
mov
mov
jmp
sbb
sbb
movs
les
mov
jne
push
sbb
scas
fild
jbe
fs
push
or
dec
add
dec
je
adc
mov
push
(bad)
(bad)
loop
mov
jb
pusha
scas
inc
or
addps
mov
retf
inc
inc
or
in
out
enter
jno
adc
add
xor
jo
fcom
and
pop
in
jae
jo
cmp
pop
dec
add
pop
push
xor
adc
inc
push
lods
add
mov
push
dec
jnp
and
dec
cmp
cmp
aam
stos
(bad)
js
xor
add
(bad)
into
add
adc
xchg
add
mov
or
sbb
shr
(bad)
(bad)
hlt
out
add
xchg
xchg
push
call
dec
jne
pop
add
add
ror
dec
inc
pop
adc
or
cmps
mov
sbb
add
test
sbb
ret
push
cmp
lods
fist
aaa
adc
add
sti
inc
mov
xor
cmp
sbb
pop
dec
or
nop
call
adc
scas
and
add
jno
inc
and
and
lea
mov
adc
test
push
jbe
adc
mov
pop
pop
and
(bad)
loope
mov
dec
adc
int
aad
idiv
pop
pop
movs
inc
sub
adc
inc
adc
pusha
fmul
push
dec
outs
jo
(bad)
movs
(bad)
mov
jne
jns
jne
arpl
and
xor
pop
rol
fwait
mov
mov
call
mov
mov
pop
repnz
or
cmp
or
(bad)
movs
ret
jbe
pop
jl
or
rol
lock
(bad)
in
inc
outs
lock
mov
xor
mov
sbb
repnz
mov
push
push
outs
scas
aaa
sbb
push
mov
(bad)
jo
fs
in
ins
jnp
(bad)
mov
pop
ret
nop
mov
not
jne
cwde
or
push
push
push
dec
fidivr
jo
pop
test
nop
nop
adc
mov
jg
loopne
add
xor
mov
push
xor
sbb
mov
ret
adc
push
mov
mov
sub
sub
addr16
je
fwait
pop
mov
or
(bad)
fucomip
sub
mov
mov
mov
call
jb
ror
mov
les
xchg
sbb
inc
adc
adc
xchg
xchg
fdiv
push
mov
(bad)
mov
test
jp
or
mov
push
push
sub
push
jl
or
or
(bad)
sar
lods
pop
out
push
mov
push
mov
loope
jbe
inc
cld
xor
push
push
xor
mov
popa
jnp
xor
pop
pop
push
adc
sbb
push
cmp
repz
stc
push
cld
hlt
shl
pop
pop
pop
xchg
pop
add
je
in
outs
sahf
adc
xchg
ret
mov
loopne
fbstp
ins
mov
out
mov
gs
adc
ds
or
clc
outs
sbb
xlat
fdiv
mov
add
sbb
aam
push
clc
and
or
or
test
jns
fs
std
add
sar
popf
and
ja
sbb
(bad)
pop
hlt
mov
movs
inc
fnclex
fldcw
ret
mov
in
pop
les
repz
push
mov
or
adc
fild
call
add
xor
in
pop
xor
mov
mov
aaa
push
data16
or
nop
idiv
mov
inc
pop
call
ss
ins
rol
es
dec
shl
sbb
ja
jp
and
sub
aam
mov
test
add
jp
push
xlat
repnz
mov
mov
mov
adc
adc
(bad)
sub
or
xor
icebp
adc
xchg
clc
adc
inc
or
mov
rcr
ja
clc
xor
cmp
dec
inc
call
and
push
mov
push
sub
xor
dec
addr16
imul
sub
xchg
jae
sti
in
push
push
into
mov
pop
(bad)
mov
cmp
and
push
inc
ficom
sahf
fld
mov
cmps
pop
cmps
adc
loop
sbb
cmps
push
adc
add
cmp
aam
lds
push
cli
(bad)
fcom
dec
jle
dec
and
call
xor
fisttp
lahf
adc
mov
scas
or
push
daa
js
fiadd
dec
jne
pop
dec
pusha
cmc
add
push
cld
and
jo
fsub
push
and
lods
sub
pop
test
(bad)
sbb
push
mov
fimul
(bad)
mov
mov
lods
adc
cmp
les
(bad)
(bad)
mov
cmp
setg
mov
ret
clc
cmps
sbb
enter
nop
dec
xchg
push
or
shl
jbe
(bad)
mov
sbb
jo
nop
inc
push
inc
aam
adc
fisttp
adc
leave
sub
pusha
jnp
push
jo
add
jge
sub
imul
sti
add
es
sbb
adc
inc
mov
and
(bad)
je
pop
sub
push
inc
cs
add
push
ins
push
add
fwait
jge
and
push
inc
js
add
fld
dec
popf
or
jmp
push
cmp
jo
ja
push
test
fidivr
ret
imul
daa
mov
or
inc
push
gs
imul
test
cmp
out
mov
cmp
cmp
sbb
adc
xchg
(bad)
movs
dec
dec
mov
fld
out
lods
leave
jae
add
cmp
add
je
dec
pop
xchg
or
add
mov
dec
outs
sub
cmp
jnp
loope
gs
jns
add
sahf
aam
or
je
jo
lods
push
push
push
jmp
ins
adc
mov
mov
pop
inc
add
jns
int3
xlat
sbb
or
imul
add
add
mov
ds
je
cmp
jnp
add
adc
push
stc
jns
adc
sbb
push
inc
adc
sbb
adc
adc
inc
pop
cmp
dec
mov
inc
mov
movs
cmps
test
daa
push
dec
mov
dec
aaa
add
inc
xchg
sub
add
mov
pop
pusha
or
inc
adc
imul
stos
inc
push
jo
cmp
add
mov
jmp
mov
mov
ret
push
xchg
rcl
mov
adc
push
mov
pop
xchg
fld
pop
mov
gs
sbb
adc
neg
cmp
sahf
dec
sbb
inc
les
jae
stos
inc
loope
fs
mov
loopne
mov
fucomip
data16
loopne
(bad)
dec
loope
mov
dec
or
or
or
ror
pushf
dec
call
or
in
ss
or
and
jo
vmwrite
inc
ins
dec
push
dec
push
lea
ret
sbb
imul
adc
add
aaa
jno
dec
test
push
push
push
fs
outs
ror
outs
and
movs
popa
mov
call
pop
call
add
add
adc
sub
movzx
mov
inc
pop
push
dec
lods
xchg
pop
add
xchg
add
adc
pop
scas
dec
ficom
lea
cmp
test
mov
lock
xlat
lods
cmp
jg
out
pop
mov
add
(bad)
jg
mov
add
jg
lock
or
nop
pop
je
je
sbb
js
push
or
(bad)
je
test
xor
fadd
push
mov
out
mov
(bad)
fdivrp
sbb
push
dec
jne
lahf
pop
mov
push
lock
jo
test
in
outs
test
cmp
jge
lea
cmp
add
adc
mov
fisubr
aam
inc
fcom
lea
sub
pop
lods
mov
jle
inc
push
cmp
out
out
retf
cmc
push
ret
cdq
xor
and
js
in
mov
sbb
(bad)
pop
xor
test
push
push
push
(bad)
dec
stos
ret
xchg
mov
mov
cmps
not
dec
mov
jl
inc
outs
push
pusha
inc
shl
sub
xor
mov
push
xchg
push
pop
cs
mov
push
mov
nop
xchg
cmps
(bad)
push
inc
push
pop
mov
in
cdq
dec
ins
lods
ins
jb
dec
enter
test
es
jl
inc
push
cmps
imul
ret
or
or
mov
and
xor
movs
push
clc
pop
ja
leave
pop
test
rol
xchg
push
inc
lods
js
jle
mov
mov
iret
adc
push
adc
inc
mov
mov
cmp
pusha
xchg
in
fdivr
xor
and
push
mov
(bad)
dec
ja
and
bt
jae
or
inc
add
cmp
jne
mov
fmulp
xor
and
xor
ins
mov
scas
sbb
in
jmp
cmp
xor
sub
fisttp
fstp
xlat
pushf
dec
test
dec
movlhps
push
mov
ins
xor
xchg
inc
cli
cmp
inc
daa
push
mov
aaa
cld
sub
vorps
stc
dec
inc
jb
pop
in
mov
test
mov
ret
jo
das
rol
dec
add
xor
ja
mov
je
xchg
jne
mov
loope
adc
adc
jne
xor
xchg
or
cwde
leave
retf
movs
and
fwait
or
cmps
dec
inc
mov
mov
jge
or
inc
lahf
fiadd
iret
cs
out
rol
leave
jmp
es
in
sbb
push
pop
fistp
and
jae
in
stos
xor
jge
dec
cmp
push
(bad)
fsubrp
mov
pop
mov
sbb
jg
rcr
adc
pop
or
mov
mov
jae
mov
les
jb
add
in
add
xchg
add
add
add
int3
in
fidiv
loop
add
sub
adc
xor
out
int3
sbb
inc
add
add
data16
inc
dec
pop
push
es
ss
mov
jge
mov
pop
sbb
fmul
push
jg
sbb
and
mov
sbb
movs
adc
lods
sub
sbb
inc
je
inc
jp
adc
test
pop
pop
aam
fcom
test
mov
mov
push
add
dec
push
push
pop
into
push
imul
dec
push
push
ror
add
push
fdiv
outs
(bad)
in
sbb
xor
pop
sbb
add
ret
xor
pop
and
into
outs
cmps
push
cmp
outs
call
imul
nop
mov
sbb
add
in
lahf
xor
cmp
push
fsubr
add
je
xor
adc
inc
push
mov
lea
mov
mov
xor
cld
jg
pop
or
push
sbb
mov
cmps
mov
ins
add
push
not
or
adc
jmp
pushf
cmps
inc
xchg
fnsave
sbb
or
xor
js
or
xor
push
and
pop
jno
adc
xor
retf
es
push
or
pop
loopne
cmp
add
cwde
lods
in
xchg
out
mov
xor
loopne
mov
rcr
je
adc
fs
inc
xor
add
in
cmp
(bad)
in
inc
push
xor
pop
loopne
jmp
outs
xchg
xor
add
mov
mov
cmp
call
shl
cmps
daa
xchg
call
shr
inc
stos
ds
inc
mov
push
jmp
nop
loopne
add
js
jns
push
sub
fcom
(bad)
out
push
pop
rol
jl
inc
sbb
sbb
xchg
mov
nop
mov
and
js
add
cmp
pop
dec
jne
xchg
or
push
lahf
nop
jle
pop
daa
inc
sti
bound
loopne
xchg
jecxz
jno
mov
sbb
add
test
fdiv
sbb
jns
mov
dec
dec
nop
push
xor
xor
neg
fcmovnbe
push
xor
call
push
ja
sbb
idiv
xchg
pusha
cdq
loopne
adc
lds
rcl
(bad)
jmp
add
jge
add
into
mov
sar
scas
push
sbb
fld
push
lods
addr16
or
pop
push
test
inc
adc
sbb
adc
or
mov
mov
push
dec
jo
imul
sub
jno
xchg
adc
cmp
or
xchg
xchg
mul
add
nop
test
sub
mov
sub
sar
pusha
xor
(bad)
jne
adc
movs
add
or
adc
pop
cmp
(bad)
hlt
pop
ins
mov
pop
xchg
arpl
mov
adc
mov
movs
pop
xor
push
idiv
jmp
adc
and
rcr
test
cmp
push
adc
xchg
add
jle
cmp
loop
dec
pop
test
je
mov
mov
sub
push
adc
inc
ss
sub
push
jecxz
pop
mov
jne
dec
adc
aas
test
xor
dec
neg
push
push
test
mov
aaa
mov
inc
jmp
loop
aaa
sahf
xchg
pop
daa
sbb
cmp
or
jmp
mov
xor
or
mov
adc
pushf
cmp
mov
xor
push
sbb
add
fwait
ret
in
xchg
push
xchg
popa
cmp
je
or
jge
push
retf
inc
mov
add
sub
inc
test
add
ds
push
mov
cmp
loopne
xchg
jle
stos
movs
lock
push
es
mov
pop
jl
add
js
int3
sub
inc
imul
mov
xor
loope
or
push
nop
xor
inc
or
xchg
sbb
sbb
sbb
mov
je
jmp
jb
add
xchg
adc
push
mov
jle
jge
inc
xor
movs
cmp
je
mov
pop
mov
or
xor
and
xchg
add
or
es
std
mov
push
mov
mov
je
jmp
cmp
jmp
dec
adc
xor
push
push
adc
mov
fidivr
clc
je
mov
mov
pusha
ja
cmp
push
mov
or
mov
int
nop
pop
bound
data16
sbb
cmp
je
mov
outs
pcmpeqb
mov
push
out
pusha
mov
dec
setne
mul
xor
push
push
je
push
retf
or
in
or
cmp
cmp
jbe
sbb
mov
push
call
push
pusha
push
mov
cmp
sub
push
cmps
push
lea
push
(bad)
adc
fsub
add
mov
mov
test
imul
jge
add
pop
cmp
int3
sbb
and
or
aaa
adc
push
and
push
cmps
cmp
xor
hlt
scas
cmp
stos
pop
and
add
loopne
adc
outs
xchg
clc
rol
xchg
iret
xchg
jnp
xchg
ret
sub
lods
ffreep
leave
test
jl
pop
outs
rol
sub
ficom
xor
mov
(bad)
jl
es
les
out
and
lods
mov
mov
call
les
jbe
or
inc
push
or
pop
scas
adc
xchg
push
sahf
into
cmps
lock
imul
data16
sbb
call
cld
or
mov
in
call
xchg
cld
dec
clc
mov
lock
or
inc
xchg
hlt
xchg
adc
ja
loope
jl
gs
mov
xlat
frstor
call
movs
not
aaa
jmp
add
xchg
jae
jnp
inc
inc
sar
push
je
call
jl
hlt
push
and
or
sbb
add
fsub
push
pop
hlt
or
jle
ffree
loop
and
mov
pop
pop
pop
mov
pushf
test
dec
cmp
jp
xor
xor
ja
xor
sub
lahf
push
ret
sbb
xchg
cwde
dec
xchg
iret
outs
jo
push
xlat
pusha
iret
jg
pushf
mov
fisttp
jg
outs
adc
or
cmp
mov
test
repz
xchg
xchg
fs
or
inc
mov
sti
push
pusha
sbb
sbb
adc
adc
and
ins
daa
jmp
stos
mov
dec
jne
jmp
jb
dec
loop
pop
adc
lds
pushf
jmp
xchg
nop
xor
aam
cmp
jne
or
inc
push
(bad)
fucomi
xor
loopne
fistp
jle
cmp
or
jmp
cmp
and
call
nop
out
fs
or
and
add
inc
cld
and
es
add
push
dec
and
in
push
xor
mov
mov
pusha
adc
push
fistp
jns
sti
mov
mov
push
dec
mov
fucomip
mov
ins
popf
sbb
inc
dec
xor
dec
push
loopne
mov
or
add
std
pop
add
mov
jo
call
movs
ins
or
jl
mov
pop
aam
sar
sbb
mov
cwde
xchg
rol
inc
retf
or
(bad)
pushf
ror
cwde
mov
mov
push
int
inc
pushf
shl
sar
pop
and
iret
cmp
jp
pop
or
lahf
pop
sahf
movd
sub
cmp
ja
(bad)
sti
ficom
neg
daa
int3
add
bound
(bad)
mov
jb
push
mov
push
push
lahf
dec
sub
add
jge
jb
sub
daa
push
mov
(bad)
ss
sbb
pop
cmp
jmp
pop
mov
mov
es
std
xchg
sbb
jno
cmp
stos
jno
adc
sbb
inc
sub
jno
jnp
imul
and
rol
cmps
(bad)
cdq
dec
int3
adc
(bad)
loopne
test
mov
ror
jmp
mov
test
mov
fsubr
je
mov
adc
sete
inc
push
inc
xchg
inc
movs
ja
dec
sbb
inc
adc
push
inc
and
das
xor
cmp
or
jne
adc
add
pop
mov
dec
mov
ja
mov
or
ins
jo
js
push
jg
sahf
lea
repz
mov
leave
cmp
jo
stos
cmp
or
adc
sbb
(bad)
loopne
fcmovnbe
xchg
sti
inc
or
mov
mov
cmps
cmps
dec
add
(bad)
mov
add
rol
loop
lar
sbb
add
or
adc
push
stos
rep
xor
pop
ja
dec
cmp
rcl
push
jne
cmp
add
xor
mov
add
shl
inc
and
xchg
push
fsub
int3
loope
pop
dec
sbb
add
dec
sbb
jnp
sbb
jne
jae
and
sbb
xchg
adc
adc
inc
push
loop
mov
jmp
sbb
jmp
pusha
add
pushf
push
pop
push
sub
stc
call
into
sub
outs
shr
jo
mov
jns
mov
dec
xlat
pop
dec
sub
ins
adc
adc
je
int
dec
pusha
div
add
pop
fidivr
fs
repnz
into
lea
sbb
jnp
sbb
out
inc
popf
inc
cmps
inc
or
dec
mov
mov
loope
sbb
shl
(bad)
adc
push
inc
shl
loopne
jle
mov
mov
imul
jl
cmp
pop
xchg
or
std
cmp
(bad)
adc
add
add
or
aam
pop
call
push
or
in
inc
(bad)
stos
rol
lsl
inc
sti
mov
mov
mov
shl
inc
call
ret
in
and
mov
fisttp
or
push
arpl
(bad)
jnp
sbb
cmp
fidiv
cmp
add
dec
cld
mov
loopne
sub
add
into
jo
xchg
mov
jnp
out
adc
test
cmp
scas
inc
test
mov
fadd
shl
push
addr16
mov
mov
add
adc
and
vphadduwd
aas
push
push
ret
pop
retf
out
jle
adc
sub
pop
and
jecxz
inc
loop
add
js
dec
(bad)
add
jle
movs
inc
jg
call
lds
dec
jmp
or
push
jge
addr16
mov
loopne
xor
add
dec
loopne
jg
enter
test
mov
retf
dec
mov
cwde
push
or
int3
sbb
loope
and
or
shl
loopne
lock
cmps
aam
ds
fbstp
dec
and
jge
cmp
and
in
push
mov
or
push
mov
sbb
test
lods
bound
or
mov
xchg
pusha
daa
shl
mov
fdiv
lock
cmp
int3
test
mov
pop
or
aaa
jl
mov
loopne
imul
mov
data16
(bad)
push
loopne
add
inc
sbb
jecxz
sub
mov
cmp
cmp
in
fisubr
nop
push
push
push
in
push
or
ret
cmp
and
inc
fs
dec
xor
xor
fwait
mov
push
add
mov
mov
jg
stos
jl
xor
cmp
je
test
(bad)
fstp
inc
and
push
mov
add
mov
jmp
mov
cmp
adc
loopne
push
push
xchg
ds
icebp
cmp
add
jle
push
ins
cmp
mov
inc
jne
or
adc
cs
cmp
add
push
push
add
test
jo
or
xchg
outs
xor
sub
add
mov
jp
nop
outs
repz
daa
test
daa
cmp
sti
inc
push
or
or
cmp
outs
sbb
jle
sbb
push
jnp
nop
inc
adc
add
and
movs
push
sbb
jns
pop
shl
cmp
or
or
ins
add
push
jl
mov
add
cmp
add
sbb
jmp
jmp
out
add
add
and
add
mov
cmp
jbe
push
mov
mov
pop
mov
add
cmps
xchg
movs
call
sbb
adc
dec
or
cmp
or
push
sub
push
call
test
cs
fistp
mov
lea
mov
or
mov
and
push
and
test
pop
movs
sub
push
mov
push
jno
add
rol
idiv
mov
sahf
push
imul
stos
inc
stos
push
mov
add
cmps
pop
add
xchg
push
pushf
jge
push
dec
dec
es
data16
imul
pusha
push
sbb
cmp
hlt
fcom
in
not
movs
das
push
xchg
add
outs
sub
les
adc
sub
xor
adc
push
add
push
cmp
cs
or
out
mov
jbe
ss
pop
fstp
push
push
mov
loopne
jo
cs
hlt
cmps
div
dec
es
xor
inc
push
xor
pusha
xor
in
imul
aam
push
fadd
shr
ins
fwait
mov
xor
js
mov
mov
sahf
sub
fs
dec
inc
push
fs
push
ins
inc
ins
fcomi
mov
push
inc
push
cld
or
and
inc
pop
mov
pop
xchg
push
mov
pop
pop
jnp
mov
ror
push
call
cs
fs
mov
(bad)
inc
fsubr
pop
sub
sbb
(bad)
ins
push
rcr
jo
ds
sub
loopne
js
rcl
push
cmp
data16
cmp
inc
bound
xor
jnp
add
call
pop
dec
gs
popa
sbb
stos
gs
mov
(bad)
(bad)
push
mov
xor
jb
dec
xchg
or
gs
je
dec
outs
test
add
or
add
gs
clc
(bad)
data16
or
call
outs
gs
pushf
adc
jo
scas
push
add
jns
lds
pop
test
nop
test
pop
sub
mov
sbb
cli
(bad)
pop
fld
xor
jne
inc
pop
mov
pop
ret
jg
mov
js
xchg
mov
(bad)
push
icebp
xchg
ret
pop
add
pop
adc
cmp
jne
bound
inc
jne
push
pop
add
jne
push
xchg
out
pop
mov
push
adc
in
or
adc
popaw
sbb
bound
xor
xchg
mov
push
lods
icebp
loope
inc
push
retf
jle
test
pusha
push
jns
jge
sbb
clc
aas
scas
ret
xchg
add
add
push
push
add
loopne
add
mov
shl
and
loope
push
test
sbb
mov
add
add
jg
test
or
or
sub
in
std
jmp
js
mov
aas
les
shl
pop
les
mov
rcl
pop
popa
pop
aam
mov
pop
cli
xor
mov
sbb
call
mov
mov
scas
loopne
sub
sbb
out
ds
in
ret
inc
repnz
adc
clc
retf
ja
or
mov
push
dec
ins
mov
push
cmp
jne
xor
mov
es
shl
rol
aad
shl
into
imul
sbb
add
aam
and
leave
mov
add
nop
push
in
pop
mov
push
rol
scas
xchg
mov
pop
pusha
ja
(bad)
ss
fadd
es
(bad)
jb
movs
test
push
lods
adc
push
jp
rcr
mov
imul
je
push
rcr
sbb
inc
int3
adc
ds
fwait
mov
test
push
fdivr
fcom
loopne
xchg
mov
mov
add
pop
mov
mov
or
xor
sub
(bad)
psubusb
sbb
fcmovnb
dec
add
frstor
dec
inc
or
add
es
in
push
push
data16
pop
jg
cwde
jmp
adc
and
mov
jae
outs
jno
adc
js
inc
dec
xor
ror
daa
dec
nop
daa
xor
sti
fild
push
inc
add
outs
add
ins
aaa
mov
mov
call
je
das
(bad)
int3
sbb
pop
es
dec
add
arpl
xchg
inc
pop
test
xor
mov
mov
aaa
push
nop
push
pop
and
or
das
sbb
sub
add
imul
scas
mov
shr
adc
test
push
sti
dec
add
jae
mov
mov
sbb
lock
adc
and
shr
adc
fwait
mov
push
inc
xor
call
pop
and
mov
cmp
cwde
push
jo
mov
or
into
das
ds
adc
mov
cmp
movs
jg
ins
and
cli
hlt
cwde
xchg
push
sub
lock
push
add
dec
pop
in
adc
pop
call
fdivr
pop
loopne
xor
fdiv
(bad)
sbb
or
dec
lahf
dec
push
or
cmp
loopne
stc
es
(bad)
je
cmp
jne
push
jl
or
inc
xor
jmp
ins
scas
ret
pop
fst
inc
or
push
or
adc
push
and
adc
mov
push
or
or
je
xchg
sub
shr
movs
jnp
mov
cmp
jle
sbb
add
push
movs
add
sti
or
test
jnp
rcl
fdiv
cmp
outs
test
push
dec
pop
aam
or
mov
addr16
rcl
clc
jns
adc
push
sub
or
add
out
jno
pop
cld
fwait
mov
pminub
adc
lods
xchg
inc
push
dec
jo
inc
mov
bound
test
cmp
dec
mov
jle
adc
enter
data16
ins
inc
in
and
and
jge
and
xchg
or
dec
mov
ror
add
dec
push
pushf
add
mov
call
mov
sbb
fmul
scas
ror
mov
add
es
int3
adc
jle
push
mov
xor
jmp
adc
shl
sti
rcr
and
fadd
call
xor
or
add
or
pop
sbb
dec
jge
aam
pop
jb
pop
pusha
repz
test
add
and
aas
pop
mov
jmp
cmp
xchg
add
cli
loope
jmp
ins
aad
dec
mov
les
push
lock
xlat
adc
add
sub
out
mov
jmp
jne
js
les
and
sbb
xchg
clc
(bad)
push
(bad)
int3
push
repz
pushf
mov
outs
mov
shl
add
cwde
mov
add
ja
inc
inc
or
pop
inc
fild
sbb
jno
call
xchg
add
daa
std
sub
mov
jl
dec
jo
add
xor
sub
inc
xchg
or
pop
popa
pop
jns
xchg
mov
mov
jmp
push
add
clc
or
(bad)
fmul
adc
and
jne
and
test
scas
adc
adc
adc
cmp
sti
movs
push
stc
or
or
rcr
outs
sub
or
xlat
das
aam
pushf
sar
cmp
jne
xor
lock
adc
mov
clc
(bad)
das
push
mov
mov
sbb
adc
in
sub
jbe
mul
cmp
in
call
dec
or
loop
jne
ror
xor
adc
gs
or
bound
es
stos
popa
add
pop
add
add
xlat
dec
mov
adc
jp
xlat
int3
cmp
sbb
aaa
jge
pop
sub
rol
add
or
fist
adc
arpl
rol
arpl
mov
dec
add
enter
add
int
(bad)
sbb
cmps
int3
dec
aas
pop
add
jmp
fnstenv
mov
icebp
sbb
lahf
mov
add
add
imul
mov
add
cmp
mov
jns
bound
(bad)
pusha
jge
ds
mov
loopne
or
push
aaa
cmp
mov
xchg
cmp
inc
ret
in
les
jo
dec
push
aad
fist
inc
xor
ret
add
data16
mov
test
sti
setge
or
adc
sahf
sbb
and
sti
daa
cmp
mov
fsub
scas
sub
rcr
ja
lods
push
add
or
push
add
mov
pop
adc
push
cld
retf
stos
pop
adc
xchg
loope
mov
adc
rol
adc
fwait
mov
jmp
arpl
call
test
movs
xor
fs
or
or
push
lds
ret
es
mov
mov
sar
out
test
(bad)
cmp
(bad)
ins
push
inc
loop
out
mov
push
jle
mov
out
fwait
test
aaa
cld
add
imul
mov
xchg
out
dec
out
add
mov
(bad)
leave
jle
jo
pusha
fs
sub
icebp
pop
(bad)
lock
test
mov
(bad)
mov
add
pop
jmp
test
jle
loopne
(bad)
push
and
adc
shl
and
(bad)
hlt
aas
or
gs
jo
imul
(bad)
iret
mov
jb
outs
je
outs
sub
push
clc
imul
jg
outs
jae
je
outs
outs
sub
shl
out
(bad)
in
(bad)
jmp
shr
(bad)
push
cmp
popa
jae
(bad)
fbld
and
pop
inc
js
arpl
gs
ja
or
cmp
lods
mov
les
pcmpeqd
ret
sub
jo
push
xchg
int3
push
inc
jae
and
jns
mov
pop
add
sbb
add
push
or
loope
pop
inc
mov
or
add
push
inc
xor
push
(bad)
cmp
push
aad
sbb
push
push
push
enter
test
mov
mov
mov
or
xor
call
sub
lods
inc
pop
xchg
js
push
sub
push
imul
or
mov
sub
add
jmp
sub
sar
outs
pop
sti
mov
(bad)
jge
mov
sub
sub
or
push
add
clc
rcl
fist
(bad)
cmp
lods
pusha
add
push
sub
adc
xor
cmps
or
sub
pop
pusha
push
imul
inc
push
xchg
xchg
xchg
out
add
js
je
jmp
mov
pop
pop
mov
rcl
adc
das
hlt
pop
xchg
dec
pop
aaa
add
or
test
push
loopne
out
dec
es
mov
js
std
nop
dec
cmp
push
push
push
inc
es
aaa
pusha
and
sbb
inc
outs
ds
fld
mov
or
scas
shl
xchg
mov
pop
(bad)
push
call
mov
mov
and
outs
mov
xor
int3
cmp
push
aam
mov
push
dec
xchg
mov
rcl
lea
cmp
jmp
ins
lea
mov
and
rcl
out
inc
ja
lock
mov
ret
pop
pop
ss
cmp
cmp
jne
clc
add
xor
mov
jmp
stos
fadd
push
enter
js
lock
add
adc
dec
sbb
cmp
adc
das
js
add
mov
adc
rcl
cmc
adc
fcom
js
sbb
rcl
xchg
or
loopne
test
fld
push
in
add
adc
push
xchg
adc
adc
sub
loop
mov
sbb
and
mov
push
xor
out
adc
in
jbe
mov
lahf
jmp
ja
inc
pushf
cdq
sbb
pop
loope
sar
dec
ds
not
add
add
or
inc
add
push
inc
adc
aas
iret
adc
push
push
cmp
loop
pop
adc
shl
xor
fnstsw
add
push
and
adc
adc
into
iret
cdq
add
sbb
rol
clc
dec
imul
and
inc
inc
ins
outs
jae
push
jne
jb
inc
jne
arpl
or
pusha
in
adc
andps
jo
je
push
sub
and
add
lock
inc
mov
pop
sub
(bad)
rol
push
mov
adc
je
mov
mov
pusha
jp
mov
push
lock
ror
add
inc
or
movs
hlt
inc
and
pusha
push
daa
pop
cmp
fiadd
mov
inc
add
out
mov
xor
ss
pop
test
pop
jl
aam
push
mov
inc
mov
push
sub
jae
cdq
add
ret
clc
or
inc
shr
add
xor
pop
or
ret
nop
ds
add
unpckhps
and
cmp
and
ins
xor
data16
inc
add
test
sbb
int3
push
pop
out
test
add
mov
adc
xor
pusha
test
imul
push
cs
ss
fs
cmp
add
pop
xchg
add
push
cmp
lahf
je
add
ret
pop
jno
out
stos
pop
xchg
push
add
or
xchg
mov
addr16
and
mov
(bad)
jbe
xor
lock
test
jbe
in
add
mov
xor
cmp
jb
ins
jo
inc
outs
div
push
aas
xor
push
sub
cmps
inc
arpl
sbb
and
aaa
mov
sbb
jecxz
push
and
cmp
ror
adc
inc
cmp
fwait
sbb
pushf
pop
sub
cmps
lock
or
add
jmp
test
sar
jg
loopne
cwde
mov
mov
inc
or
dec
push
imul
pop
clc
adc
add
mov
jmp
pop
sub
inc
lock
or
fbstp
cwde
cld
hlt
aam
ret
add
jne
or
outs
cmp
xchg
jns
push
add
pop
cmp
cmp
and
adc
adc
xlat
xchg
add
adc
js
pop
not
movnti
mov
mov
and
je
fucomip
inc
inc
cld
icebp
mov
movs
fwait
shl
and
loopne
cmps
xor
adc
(bad)
jb
or
pushf
sub
xor
adc
lock
jbe
adc
inc
es
push
or
jno
fwait
dec
lea
xor
movs
sbb
mov
or
enter
in
mov
aaa
mov
adc
aas
xor
outs
js
enter
movs
sbb
inc
or
jmp
pop
les
int3
or
lock
and
inc
ss
sbb
retf
add
sub
pop
adc
popa
pusha
and
rol
aaa
test
retf
mov
xchg
cmp
xchg
pop
clc
mov
cmp
jle
mov
cmp
jle
mov
leave
idiv
cmp
mov
dec
jge
xor
mov
or
fcom
xchg
mov
mov
pop
cmps
test
rol
sub
or
loope
mov
push
jo
ret
or
xor
(bad)
shl
adc
inc
daa
loopne
adc
dec
sbb
mov
dec
mov
loope
loopne
jbe
add
dec
stos
xchg
outs
cmps
push
sub
sbb
ret
add
mov
shr
cmp
(bad)
int
mov
or
add
movs
dec
mov
dec
es
ins
cli
push
retf
push
int3
mov
in
fadd
adc
inc
retf
iret
xchg
inc
aaa
xor
sahf
sub
enter
push
loopne
scas
and
mov
dec
mov
pushf
ss
jo
jbe
adc
jmp
inc
pop
out
mov
mov
adc
or
push
add
lock
ret
int3
(bad)
inc
adc
in
pop
sub
sub
rcl
jae
fbstp
add
sub
pop
(bad)
jg
or
mov
push
or
push
scas
push
jmp
xchg
fs
lahf
add
xor
mov
jmp
popf
inc
mov
inc
rol
add
fadd
cli
stos
inc
dec
jne
setle
or
(bad)
sub
inc
cwde
xor
push
ror
nop
push
fs
sub
or
pop
nop
sbb
xchg
jo
aaa
cmp
(bad)
imul
iret
leave
add
add
ins
add
ror
mov
inc
stc
add
mov
imul
push
mov
pop
clc
not
inc
add
fdivr
mov
mov
dec
jne
xor
xor
push
mov
call
pusha
adc
adc
add
fdivr
mov
or
adc
loopne
sub
bound
sub
push
inc
add
mov
loope
mov
jmp
xor
mov
pop
and
mov
pop
jo
shl
jmp
jmp
aas
add
das
data16
daa
jo
(bad)
test
fucomip
aam
push
mov
pop
pop
push
movq
add
(bad)
fmul
sbb
(bad)
mov
gs
jne
je
outs
imul
daa
inc
ret
sub
jae
push
into
jbe
mov
xor
inc
jbe
and
inc
ja
and
mov
push
sbb
sub
outs
je
(bad)
mov
dec
or
ins
bound
ret
arpl
cmp
push
jne
arpl
fsub
shl
fmul
jmp
ret
popa
inc
xor
pop
mov
fwait
scas
aad
jbe
jle
xchg
xor
xor
push
adc
add
out
loopne
mov
push
jmp
cmc
jns
jecxz
fst
int
mov
mov
adc
add
(bad)
jns
fst
daa
mov
nop
sub
inc
mov
sbb
push
xor
sbb
bound
or
inc
mov
outs
add
imul
(bad)
xchg
mov
push
push
ins
add
or
or
inc
je
adc
push
adc
cmp
pop
ret
nop
jg
(bad)
sub
jne
push
xchg
or
les
pop
mov
mov
fcom
or
xor
icebp
mov
ret
adc
jae
or
jge
mov
jg
in
ins
fiadd
hlt
mov
cld
lock
das
push
dec
add
lods
push
dec
push
and
aaa
and
in
loopne
cdq
adc
inc
in
mov
jnp
fisttp
mov
push
call
fadd
loopne
imul
jmp
or
(bad)
push
adc
and
bound
inc
jae
xchg
and
jns
int
sbb
pop
jp
int
push
mov
dec
pop
push
stos
out
xor
jg
add
and
push
sub
xor
cmp
jg
push
sbb
outs
int3
push
push
push
add
dec
inc
rol
jg
and
mov
sub
mov
shl
(bad)
and
and
nop
mov
add
retf
loop
pop
and
call
call
mov
in
call
push
div
in
in
rcl
loopne
push
icebp
mov
fistp
push
or
mov
add
push
mov
mov
push
pop
or
mov
xor
clc
sbb
sub
inc
mov
fistp
lods
xor
movs
mov
xor
(bad)
sti
sbb
add
aam
mov
xor
jo
out
std
inc
add
outs
sbb
inc
es
inc
data16
fiadd
jb
and
(bad)
fisttp
je
and
punpcklbw
je
cmp
add
in
adc
fucomip
sbb
das
fs
sbb
pusha
daa
(bad)
mov
push
dec
mov
sahf
cmp
pop
pop
push
inc
and
outs
mov
add
cld
add
loopne
jo
mov
rcr
pop
out
mov
sub
sub
int3
and
mov
and
out
dec
enter
inc
sbb
aad
mov
inc
mov
fsubr
xchg
or
lock
mov
mov
push
xchg
and
pop
pusha
icebp
cmp
add
jl
mov
les
retf
outs
sub
mov
ja
push
sahf
mov
pop
ret
daa
bound
jno
sub
jne
sub
mov
sub
jecxz
inc
(bad)
into
jmp
push
bound
out
(bad)
cmp
jl
push
cmp
push
push
or
pop
in
push
adc
or
ds
jl
out
or
push
adc
imul
aam
push
shr
out
jl
daa
pop
jnp
das
pushf
or
es
push
add
push
movs
retf
push
es
ret
add
xchg
push
es
mov
mov
add
add
mov
and
es
mov
shl
int3
mov
es
push
sub
aam
das
daa
je
push
cwde
mov
data16
dec
push
pop
or
add
xor
inc
lock
imul
sub
stos
cmc
cmps
es
outs
and
in
xlat
add
mov
push
push
je
je
sbb
pop
inc
inc
call
fbld
outs
arpl
cs
fdivr
jmp
jae
ins
popa
jns
ror
push
jb
outs
sub
das
aam
inc
cs
outs
adc
addr16
aad
cmp
outs
jb
jae
push
ficom
stos
(bad)
jmp
dec
(bad)
mov
fild
inc
call
pusha
idiv
or
dec
adc
sbb
cmp
loope
cmp
mov
add
xor
jbe
mov
mov
dec
ja
xchg
add
or
adc
inc
cld
fisubr
and
fbstp
ret
push
fild
ror
pushf
push
(bad)
xor
int3
inc
js
inc
jbe
jae
enter
sbb
lea
mov
push
(bad)
add
outs
cmp
inc
push
pushf
pop
xor
test
jecxz
pop
inc
rol
or
sbb
inc
jl
inc
cwde
inc
je
push
imul
ins
clc
bound
xor
hlt
cmp
shl
or
call
adc
int
adc
cmp
push
(bad)
inc
mov
popa
lock
fsub
mov
(bad)
hlt
rcr
icebp
loop
add
ss
dec
jae
lods
add
or
pop
fwait
inc
pop
xlat
adc
mov
adc
in
arpl
inc
dec
outs
arpl
test
fsubr
push
xor
inc
push
pop
out
js
sub
bound
popf
inc
mov
jne
push
sbb
ret
sbb
sbb
xchg
push
jg
xchg
ja
(bad)
in
(bad)
lock
sbb
mov
sti
fwait
js
xchg
enter
and
jne
dec
call
(bad)
mov
adc
cli
popa
dec
cdq
xchg
pusha
add
fistp
sbb
pop
inc
mov
mov
adc
fnstenv
push
jo
mov
fadd
mov
adc
fsub
sub
and
jmp
movs
mov
dec
imul
and
push
test
lods
cmp
loopne
mov
mov
pop
and
mov
inc
push
arpl
adc
sbb
push
ja
pop
xor
enter
rol
jmp
sub
push
sbb
push
sbb
imul
fwait
add
add
and
pop
push
out
dec
and
sub
or
inc
dec
mov
and
es
jbe
adc
dec
push
adc
pop
dec
mov
dec
jae
fstp
fiadd
ds
inc
cwde
mov
or
dec
mov
mov
stos
jecxz
push
inc
sbb
and
add
int3
push
cmp
pop
inc
sub
and
imul
cmp
pop
or
cs
cs
xor
push
dec
xchg
pop
dec
sub
push
or
dec
cmp
inc
inc
loopne
cmp
ret
or
int3
mov
pop
dec
cs
dec
xor
ja
xor
inc
pop
dec
das
cdq
jb
addr16
dec
push
jo
or
add
aaa
ja
(bad)
std
cwde
sbb
inc
out
dec
xor
mov
sbb
cmc
pushf
shl
cwde
mov
xor
in
add
ficom
add
fs
sbb
enter
inc
or
in
loope
fldenv
push
enter
jl
ret
enter
fisubr
dec
je
enter
mov
enter
push
je
enter
mov
enter
pop
and
ret
repnz
push
push
pop
(bad)
inc
inc
pushf
cmp
add
push
cld
sahf
neg
es
dec
push
push
pop
cs
add
je
fs
or
or
mov
cmps
lock
test
push
and
pop
and
xor
cmps
lods
push
fwait
or
add
clc
fcomp
mov
adc
mov
push
inc
sub
add
pop
cmps
push
inc
cli
cwde
ret
push
fs
pop
out
jmp
or
pusha
es
pop
pop
loope
pusha
ret
not
outs
test
inc
out
(bad)
js
fidiv
sbb
fcom
fistp
push
cmp
pusha
ins
add
ficom
mov
rol
pop
outs
jbe
push
sub
js
xchg
call
call
test
inc
pop
fcomp
call
ffree
jno
xor
dec
sbb
add
push
and
jnp
lock
push
xor
mov
rcr
in
push
aas
mov
jnp
int3
mov
fcom
or
xchg
add
sbb
jo
in
fidivr
fistp
sub
dec
pop
lock
inc
mov
push
mov
in
dec
es
mov
dec
push
hlt
inc
out
sub
ret
or
sbb
add
pop
ret
mov
out
adc
mov
cmps
out
in
imul
ins
inc
dec
push
pop
sbb
mov
cli
cs
or
adc
cmps
push
aam
sar
mov
shr
call
rcl
sbb
mov
push
(bad)
div
test
push
fsubr
cld
sahf
je
inc
lds
ins
xchg
mov
inc
pop
loop
inc
xchg
and
ret
and
sub
or
cmp
dec
or
gs
fiadd
sub
fwait
dec
outs
xor
sahf
mov
dec
pushf
outs
fs
ins
xor
push
or
outs
jb
das
rcl
cld
cwde
mov
movs
push
je
shl
and
inc
jne
ins
push
gs
das
cmps
div
or
dec
inc
(bad)
and
push
cmps
dec
jge
adc
ins
inc
ins
addr16
dec
stos
jne
or
xchg
aaa
inc
add
push
push
mov
ret
fdivr
inc
push
out
arpl
push
aas
out
mov
imul
leave
inc
add
mov
mov
mov
mov
cmp
and
adc
and
jp
push
or
inc
jne
pop
add
pop
cli
mov
(bad)
lods
mov
rcl
fbstp
adc
mov
sub
add
push
inc
xchg
loope
jno
push
in
xor
pop
std
mov
in
pop
and
pop
add
pop
jno
mov
in
mov
mov
stos
xchg
pop
test
xlat
jmp
pop
pusha
repnz
push
pop
fiadd
push
sub
jo
jge
mov
loope
imul
push
fwait
pop
adc
idiv
cwde
sbb
test
or
mov
inc
jl
xor
sub
mov
shr
call
int3
in
sub
addr16
dec
mov
mov
or
leave
repz
rol
rcr
push
jp
adc
sub
js
int3
lods
push
xchg
fstp
or
das
(bad)
call
xlat
add
fs
mov
or
mov
bsr
xchg
add
rol
call
sub
and
inc
nop
mov
iret
loopne
cmp
fadd
jge
add
push
add
(bad)
dec
lock
pop
scas
ret
sbb
rcr
or
(bad)
movs
clc
loopne
nop
call
and
xchg
es
dec
inc
xlat
icebp
cmp
add
xchg
rol
push
mov
inc
call
push
loopne
leave
nop
sbb
dec
out
mov
and
lock
mov
dec
dec
hlt
xlat
fimul
into
rol
jmp
and
fiadd
xchg
inc
jne
xchg
gs
and
and
push
jb
and
pusha
jo
or
inc
add
adc
mov
pop
add
test
pusha
push
or
daa
mov
and
inc
adc
(bad)
mov
int3
cwde
push
addr16
adc
pop
mov
xchg
or
test
retf
push
mov
cdq
cvtpi2ps
scas
or
sub
push
push
test
adc
sbb
push
jle
sub
push
mov
fld
dec
or
cmp
push
sub
xchg
push
dec
inc
mov
imul
(bad)
sub
das
(bad)
pop
ins
push
push
mov
pop
adc
xor
imul
xor
pshufw
dec
adc
add
add
add
xor
cmp
xchg
cmps
call
pushf
inc
ret
inc
or
pand
cmc
xor
add
and
xor
adc
aaa
add
daa
(bad)
nop
stos
sbb
test
mov
outs
(bad)
sbb
fwait
pop
or
add
in
inc
add
jae
adc
jmp
cmp
adc
fisttp
out
ficomp
data16
pop
pusha
push
pop
ret
jnp
pusha
pop
cmp
clc
add
jbe
cld
stos
push
adc
ror
jae
push
cmp
mov
in
mov
addr16
sub
cmp
adc
loopne
(bad)
ds
lods
or
mov
mov
adc
pop
push
lods
fisttp
dec
out
sbb
out
int3
pop
dec
sbb
cmp
shr
mov
xor
push
inc
inc
rcr
and
scas
pop
inc
outs
sub
sub
sub
cmp
push
out
inc
dec
add
pop
pushf
push
retf
out
and
add
add
or
push
dec
or
pushf
and
mov
add
add
add
dec
dec
pop
adc
sub
loope
ds
dec
fs
add
pop
adc
outs
push
or
push
and
push
sub
jae
jbe
cmovp
pop
dec
mov
fcom
push
add
icebp
and
mov
movs
lods
or
jmp
or
cs
js
and
and
and
xchg
add
fld
loopne
out
lods
jb
loopne
add
or
pusha
or
retf
mov
(bad)
add
movs
or
add
add
add
outs
add
add
data16
inc
pop
jmp
inc
inc
inc
test
icebp
adc
sbb
cdq
gs
or
sbb
sbb
cli
and
dec
sbb
sbb
ins
call
or
sbb
sbb
mov
sbb
sbb
mov
icebp
pop
out
cmp
sbb
pop
test
stos
movs
out
fdiv
pusha
xchg
js
xor
dec
(bad)
sti
pop
lock
ss
ins
outs
outs
outs
inc
ins
sub
fbstp
pop
jae
or
ss
bound
cs
or
hlt
outs
add
rcl
adc
test
sub
jno
or
xchg
repnz
call
aaa
fld
repz
das
or
mov
(bad)
in
aam
adc
inc
and
outs
imul
xchg
js
or
jl
rol
cmp
jle
rcr
pop
or
repnz
dec
mov
add
push
and
inc
inc
cli
sub
ins
dec
aam
ins
das
adc
push
(bad)
mov
iret
lahf
icebp
mov
or
pop
mov
add
lahf
xlat
aam
dec
adc
or
pop
mov
cmc
ss
arpl
add
inc
inc
adc
cli
and
add
sbb
inc
sbb
add
and
sub
mov
add
sub
sub
inc
mov
dec
or
call
shr
or
gs
and
addr16
and
xor
scas
add
js
rsqrtps
sbb
add
mov
mov
pusha
mov
xchg
sub
and
into
jle
add
dec
cwde
das
add
mov
sub
aas
movs
bound
sub
push
add
sbb
ror
jg
ror
je
inc
add
call
leave
(bad)
adc
shrd
jns
xor
test
inc
test
jge
ins
push
add
dec
pop
and
mov
and
data16
dec
bound
js
fdivr
bound
outs
mov
daa
pop
das
ins
inc
arpl
or
jmp
mov
cdq
std
fisub
neg
ror
sbb
mov
mov
clc
sbb
inc
sbb
sbb
bound
sbb
clc
sbb
inc
or
cdq
cmp
in
add
mov
adc
cmp
inc
cmps
mov
cwde
mov
lgs
out
std
sub
add
xor
lods
or
or
add
pop
cmps
shl
sub
repnz
dec
adc
dec
push
int3
fst
sub
sar
mov
xchg
inc
add
sub
(bad)
cmp
cmp
jae
xchg
push
push
sar
mov
aad
or
mov
pop
pop
add
das
xor
sub
(bad)
(bad)
(bad)
push
inc
mov
pop
or
in
fimul
dec
xor
aas
dec
and
out
jne
pop
dec
ror
pop
mov
push
pusha
pop
mov
push
lds
xchg
cmp
mov
fcomip
pop
cdq
dec
add
push
push
jns
dec
imul
imul
push
push
push
dec
add
ret
iret
test
or
rol
add
push
xchg
fs
mov
dec
bound
arpl
cmp
mov
add
pop
xor
mov
sahf
cmp
call
jge
out
inc
push
popf
popa
cmp
mov
cs
scas
ja
dec
popa
bound
inc
and
mov
cmp
cmp
sti
das
loopne
xlat
push
ds
dec
push
data16
adc
in
push
lods
cs
push
rcr
iret
or
push
iret
sbb
loope
push
add
and
loopne
sahf
iret
xchg
jae
mov
sub
out
adc
je
xchg
iret
fmul
add
add
rcl
cmp
xchg
push
or
xchg
pop
fild
inc
cmp
sub
aad
cmp
or
js
mov
bound
clc
inc
loopne
mov
mov
cmp
cmp
push
adc
jo
push
pop
sbb
mov
lds
pop
add
popf
fwait
pop
movs
inc
pusha
mov
add
std
fs
add
or
aaa
pop
mov
jge
xchg
cmp
inc
out
adc
xor
inc
cmp
adc
or
(bad)
jo
push
aam
mov
cmp
pusha
sbb
push
test
push
ins
inc
add
call
clc
dec
inc
js
aas
push
mov
mov
loope
test
mov
fs
and
stos
sub
add
mov
fild
inc
inc
mov
stos
and
rcl
adc
push
in
mov
(bad)
ror
adc
mov
and
xchg
pop
adc
fbstp
push
pop
pop
add
ja
mov
int
aas
sbb
and
mov
cmp
xchg
sbb
sbb
adc
sub
sub
add
shr
in
add
nop
nop
or
push
adc
adc
sbb
and
lahf
inc
and
cmp
pop
sbb
(bad)
push
adc
push
pop
daa
enter
fcmove
sub
sub
fist
fld
sub
add
push
or
and
das
add
xor
add
push
xchg
add
cmp
inc
adc
test
cs
cmp
int
pusha
inc
cmp
xor
inc
inc
or
ret
call
or
or
or
and
jae
or
inc
loope
add
inc
inc
inc
inc
inc
imul
inc
push
or
and
and
int3
mov
and
popa
or
mov
sbb
or
cmps
sbb
sbb
mov
or
mov
sgdtd
idiv
repnz
mov
and
or
jno
xchg
mov
cwde
xchg
aam
push
clc
mov
mov
mov
xor
cmps
in
ja
jnp
cmp
push
mov
not
ret
(bad)
and
ror
scas
out
outs
outs
imul
sub
rcl
popa
sbb
ror
call
and
cmps
pop
movs
bound
adc
sub
push
mov
add
push
push
mov
mov
mov
or
push
add
lock
pop
ins
pop
mov
cmp
inc
cmp
fimul
pop
shr
lock
or
fcom
imul
ins
mov
and
inc
call
push
ds
mov
mov
call
xchg
or
in
into
fcos
dec
int3
imul
pop
shr
out
out
call
sti
cmp
mov
pop
pop
mov
pop
ret
nop
xchg
push
mov
push
mov
mov
or
lahf
(bad)
pop
and
push
fstp
in
neg
fisttp
sub
div
or
or
sbb
in
cwde
xor
sar
mov
inc
or
(bad)
jg
or
or
lock
outs
lock
mov
xor
mov
mov
adc
mov
inc
pusha
mov
mov
xchg
movs
neg
or
pop
adc
inc
adc
push
inc
shr
pusha
adc
ret
mov
ins
pusha
mov
mov
ret
adc
jge
lds
dec
jo
pop
adc
and
fcomp
sbb
push
mov
and
fcmovbe
mov
jmp
mov
and
mov
sub
test
pop
adc
dec
inc
outs
inc
pop
mov
dec
or
push
icebp
inc
ror
mov
ror
mov
ret
fld
push
rcr
jmp
(bad)
out
push
pushf
adc
sbb
dec
jle
sbb
adc
cmp
aad
sbb
aad
test
add
inc
cmp
jg
cmp
mov
(bad)
call
test
jle
test
jle
mov
fstp
mov
call
push
adc
stc
fstp
fwait
cmp
jge
mov
fadd
out
in
inc
or
jle
mov
push
add
push
jnp
fmul
jmp
sub
jo
cmp
and
mov
xlat
and
dec
add
js
fdivr
fisttp
jge
xor
and
sar
jns
adc
call
(bad)
sar
push
rol
xchg
mov
cmp
pop
pop
pushf
mov
outs
push
jg
lea
sub
mov
mov
sbb
add
call
mov
in
jno
push
or
pop
js
add
push
jle
lods
push
mov
mov
pop
xchg
mov
sbb
enter
fcom
mov
add
mov
pop
pop
call
das
nop
ret
and
ss
inc
push
fild
shr
cmps
add
inc
sbb
je
adc
mov
ins
or
in
adc
mov
(bad)
pop
enter
xor
sti
std
jne
rcr
jl
movzx
sti
sbb
or
(bad)
pop
add
mov
or
and
(bad)
xor
js
je
sbb
and
sub
fcomp
sbb
clc
cli
lods
pop
jmp
and
sbb
mov
adc
mov
pop
cld
inc
cmp
mov
nop
sub
jmp
inc
sub
mov
xor
mov
ficom
std
fwait
in
jnp
inc
sbb
jne
and
jle
push
imul
dec
jne
mov
pop
das
sub
ret
sbb
idiv
fs
cmp
sti
je
mov
retf
je
cmp
es
push
mov
cmps
ins
cmp
mov
push
push
adc
jl
add
xchg
mov
mov
lds
ds
ss
outs
cmc
std
push
cli
ficomp
test
jg
cld
pop
fnstenv
xor
pop
or
cmp
adc
in
lds
ins
or
xchg
xlat
mov
out
xlat
xor
cmp
xchg
enter
ret
ror
mov
cld
bound
mov
pop
cmp
repnz
nop
inc
mov
addr16
hlt
or
loop
sti
or
push
inc
sbb
push
clc
rcr
jl
xchg
or
sti
jle
popa
or
pop
iret
cs
mov
out
ins
mov
or
dec
fsubr
and
hlt
mov
fstp
js
into
loopne
dec
hlt
cmp
mov
dec
and
es
retf
popa
mov
mov
mov
ret
adc
add
inc
fadd
adc
rcr
sub
inc
cmova
rol
add
comiss
das
comiss
aam
dec
mov
dec
aam
fcomp
popa
inc
jbe
jb
xchg
into
adc
call
push
call
cmp
jbe
shl
bound
xor
sub
and
sbb
sahf
inc
jae
fmul
adc
sub
push
mov
sbb
call
xchg
cmp
xchg
out
xor
push
jb
sahf
shr
xchg
lods
and
pop
sub
jo
inc
je
xor
inc
call
pop
and
push
not
cmp
in
sti
fisttp
mov
inc
cmp
jg
or
dec
call
inc
pop
jl
aam
adc
fisttp
pop
jl
mov
hlt
cmps
addr16
not
and
or
cmp
push
add
push
shl
fnstsw
arpl
loopne
stos
mov
cmp
adc
inc
inc
sbb
hlt
aam
inc
adc
jno
loope
rcl
out
shr
adc
inc
dec
add
cwde
out
and
in
add
(bad)
jmp
add
movs
dec
mov
ins
inc
inc
sbb
inc
xor
add
sub
jae
test
pop
xor
arpl
mov
je
pusha
popa
cmp
lock
push
dec
inc
jno
pop
xchg
cmp
adc
fsubr
and
or
or
jno
int3
add
adc
or
push
push
arpl
or
or
int3
mov
add
inc
inc
int3
jbe
shl
push
sbb
inc
inc
mov
(bad)
xchg
or
xor
push
ins
test
mov
je
sbb
cmp
clc
adc
add
adc
or
cmp
jp
xchg
out
inc
jmp
or
jp
mov
pop
jecxz
test
rcr
rcr
add
adc
inc
add
push
inc
inc
inc
daa
sbb
pop
jp
cld
mov
cdq
out
sti
retf
bnd
xor
int
lock
push
or
push
sbb
je
cmp
add
mov
fs
inc
or
rcl
cld
mov
lds
enter
loop
push
mov
cmp
and
lods
std
jo
fsubr
cmp
push
mov
ficom
or
pop
push
mov
sub
(bad)
imul
sub
inc
push
rcr
xchg
call
sbb
and
mov
pusha
adc
shl
xchg
inc
pusha
sbb
add
dec
add
cmp
cmps
push
and
add
or
shl
ror
push
pusha
mov
mov
add
cmp
xchg
dec
cmc
lds
inc
pop
in
scas
pop
test
push
jmp
xor
stos
mov
adc
fadd
test
dec
ss
out
push
mov
dec
or
push
inc
ins
mov
(bad)
xor
xor
add
sbb
ja
add
push
sbb
xchg
or
pcmpeqb
adc
mov
call
sub
jg
or
xchg
rol
pusha
movs
push
xor
int3
mov
jp
cmp
pop
scas
pop
test
mov
adc
adc
movs
sub
(bad)
mov
inc
or
dec
in
adc
into
mov
jg
xchg
icebp
and
sahf
mov
sbb
pop
ret
xchg
cdq
mov
mov
jo
push
ss
mov
scas
mov
inc
push
pusha
scas
jmp
outs
mov
dec
pop
call
inc
bound
fwait
and
inc
cmps
push
jmp
push
popf
mov
inc
adc
sbb
and
hlt
clc
sub
dec
pop
push
cmp
jmp
(bad)
test
adc
mov
movs
cld
ficom
loopne
jle
xlat
sbb
loopne
mov
mov
push
shl
lods
cmps
mov
dec
mov
pushf
ret
clc
cmp
ficomp
push
hlt
mov
pop
pop
lock
lods
xchg
setle
or
daa
lahf
mov
popa
pop
and
mov
xor
cmps
jl
sub
add
jl
(bad)
fs
test
adc
or
adc
repnz
test
add
xchg
cmp
xchg
mov
sbb
cmp
mov
rcr
je
jb
fstp
add
and
inc
cld
inc
add
sbb
test
cmp
cli
rcl
sbb
leave
dec
pop
cmp
ins
add
sar
cmp
add
push
pop
fs
or
call
jmp
xor
movs
enter
loopne
push
(bad)
xchg
mov
lods
loope
in
popa
arpl
out
rep
pop
push
pop
cmp
mov
adc
mov
pop
test
xchg
in
pop
movs
lea
in
sbb
pop
cmp
adc
cs
adc
mov
shl
pop
mov
push
je
adc
push
sbb
xor
adc
or
jle
or
and
or
daa
cmp
je
lds
mov
add
or
stos
sbb
add
mov
loop
sub
or
or
dec
push
imul
push
dec
jno
mov
sbb
addr16
ins
jmp
sub
mov
xchg
jl
mov
pop
mov
adc
xchg
movs
push
mov
fiadd
movs
xor
mov
popf
scas
je
scas
loope
add
scas
mov
pop
lods
das
pop
pusha
pop
rol
in
xor
aaa
repz
cmp
aaa
mov
(bad)
adc
sti
fimul
push
je
mov
cmp
mov
or
cmova
and
mov
sahf
xchg
or
fistp
rcr
cmps
add
neg
ss
sub
pop
neg
mov
mov
mov
mov
jg
jecxz
mov
outs
jl
cmp
xlat
movs
in
or
imul
jle
(bad)
jge
movs
add
inc
ins
dec
je
mov
iret
repz
jne
and
test
movs
inc
sub
js
mov
lock
mov
enter
jnp
jne
mov
jne
push
jp
call
push
or
dec
cmp
push
sub
push
push
xchg
ret
jbe
out
jmp
arpl
hlt
xchg
retw
stos
fsubp
xchg
jl
xor
xchg
xor
cld
mov
lock
rcr
stos
jns
and
fsub
cmp
adc
mov
sub
jbe
adc
or
popa
push
mov
leave
nop
push
stc
sub
jg
jne
mov
inc
or
mov
loopne
movs
icebp
sub
push
push
mov
mov
out
lods
rol
jmp
pop
or
mov
lods
mov
push
pusha
fld
les
mov
ud1
push
sub
test
pop
in
sbb
bound
pop
fmul
xchg
icebp
mov
mov
adc
sub
mov
mov
inc
pop
sbb
xchg
inc
ficom
test
movs
pop
fild
jo
dec
push
daa
sbb
xor
cmp
mov
hlt
dec
out
into
js
fs
sbb
sbb
add
inc
mov
shl
gs
cwde
lock
mov
dec
xchg
out
inc
pop
fimul
clc
mov
outs
mov
sbb
inc
sbb
mov
xchg
mov
mov
mov
push
push
jg
lock
jbe
dec
rcl
test
mov
or
inc
hlt
test
and
in
pusha
mov
or
and
mov
ret
hlt
pushf
sbb
shl
cmp
shl
jne
test
mov
xchg
nop
aaa
adc
cmp
mov
test
hlt
ins
mov
mov
shl
pop
jnp
push
(bad)
jo
lock
lock
ins
cmp
adc
adc
cwde
push
and
push
cld
sub
cmp
setle
sbb
arpl
jle
add
scas
call
push
xchg
(bad)
aaa
add
add
cmp
icebp
cmp
je
repnz
dec
int3
fsubr
dec
push
push
ins
neg
mov
add
das
pop
cmp
cld
das
inc
push
inc
cli
js
inc
lea
and
mov
aas
into
jb
fwait
rcl
pop
push
loope
mov
pusha
or
dec
test
fs
movaps
mov
call
lock
inc
je
stos
inc
ins
aas
mov
sub
stos
pop
mov
inc
dec
shr
adc
shl
mov
(bad)
sub
out
or
movzx
(bad)
(bad)
adc
add
or
push
pop
dec
sbb
adc
and
adc
add
push
or
adc
mov
je
or
xchg
sub
adc
cmp
pop
stos
cmp
sti
mov
mov
call
call
cmp
inc
or
mov
clc
add
ja
jmp
jl
js
loopne
push
pusha
cmp
or
xor
jg
sahf
out
or
sbb
add
add
adc
ret
aas
dec
xor
pop
and
rcl
xchg
mov
fdivr
add
pop
inc
and
clc
jge
xchg
into
cmps
sbb
jg
jns
xchg
je
imul
cmp
loopne
ja
scas
jnp
imul
test
jp
or
mov
xor
outs
cmp
outs
add
adc
in
shr
mov
pusha
mov
iret
fisub
mov
or
sbb
cwde
jbe
mov
or
push
push
dec
xor
or
addr16
cli
jnp
out
ins
inc
mov
sub
cmp
xor
mov
inc
jno
or
or
add
cmp
sbb
inc
push
xchg
ror
mov
ror
lds
push
pop
mov
js
(bad)
xchg
addr16
push
nop
push
mov
sub
jmp
inc
jp
and
or
je
inc
jl
js
sbb
cmp
psrlw
scas
adc
or
loope
pop
retf
or
and
in
push
out
icebp
and
cli
push
and
inc
adc
or
xor
out
in
sub
(bad)
xor
test
inc
add
rcr
xor
xchg
ins
in
sub
movs
or
in
add
sbb
and
scas
iret
pop
imul
push
mov
mov
jecxz
cmp
outs
outs
div
ror
inc
ins
jle
mov
inc
mov
out
lods
push
daa
mov
push
jnp
inc
shl
outs
sub
loopne
into
xchg
sar
(bad)
add
ins
mov
out
les
cmp
iret
jmp
rcl
in
push
ja
inc
mov
pop
cmp
adc
and
mov
sbb
retf
cmp
or
movs
cmp
jne
cmp
jne
in
pusha
sbb
sbb
jp
push
add
out
dec
cld
or
movzx
loopne
xchg
movs
pushf
pop
mov
pop
fimul
ja
and
aas
fistp
cmps
dec
sub
add
xchg
mov
cmp
mov
sbb
out
xchg
lock
cmps
pushf
sti
push
mov
adc
sub
fistp
inc
or
icebp
add
cmp
sub
xor
loop
imul
pop
fstp
dec
add
cld
xor
dec
add
shr
pusha
loope
aas
adc
mov
adc
clc
test
hlt
stos
repnz
ja
xor
jne
adc
movzx
push
sbb
mov
add
sbb
or
daa
pusha
or
mov
es
fiadd
dec
pop
sbb
cs
pop
jg
(bad)
mov
or
add
sbb
jle
dec
or
test
mov
jne
icebp
adc
enter
push
and
or
jne
out
aad
popa
dec
inc
je
push
xor
lock
lds
dec
jo
inc
xchg
loop
sbb
bound
add
sbb
pop
cld
or
cld
and
add
sbb
jle
rol
mov
test
mov
mov
adc
pusha
dec
and
popa
jne
ds
xchg
arpl
xchg
shl
sar
or
aas
in
lea
stc
xor
sub
cmp
xchg
dec
add
addr16
scas
xor
dec
jns
ins
lock
bound
call
inc
sar
lea
dec
sub
adc
cmps
pop
cs
mov
pop
enter
add
addr16
push
mov
jmp
into
add
jae
dec
add
outs
add
push
nop
jge
mov
add
bts
ins
adc
rol
add
adc
jo
push
cwde
pop
adc
inc
add
mov
cmp
call
lea
adc
inc
inc
movs
js
pop
popa
lock
std
(bad)
fmul
jmp
jne
lea
lea
paddusw
or
movs
lea
and
xchg
sti
add
add
dec
mov
xchg
sub
jnp
and
jnp
cld
jmp
dec
ud1
sub
mov
retf
xchg
dec
or
cmp
or
stos
push
mov
retf
pushf
and
sbb
or
sub
pop
jp
(bad)
les
sub
pop
ss
sbb
xor
xchg
fisttp
cld
or
cdq
cmp
test
push
pusha
enter
enter
sbb
cmp
jg
les
adc
lock
pop
(bad)
cwde
call
sti
jne
sti
dec
jne
dec
ins
add
lea
outs
lock
aaa
aam
cmp
jmp
pop
arpl
adc
mov
add
rcr
jl
out
cmp
ror
mov
xchg
js
add
jg
jb
ror
and
jle
jp
jge
jle
or
rol
dec
mov
(bad)
fdivr
gs
add
out
js
mov
xor
loopne
add
adc
hlt
dec
jne
sub
add
or
cld
jns
pop
add
sbb
in
fdiv
in
femms
imul
push
mov
fidiv
sub
clc
ficom
fdivr
fidiv
ret
sbb
inc
xlat
jmp
add
add
fistp
scas
add
sete
inc
(bad)
add
add
and
dec
pop
ja
loopne
mov
es
pop
enter
(bad)
push
mov
std
inc
ins
sub
and
push
sub
add
xor
in
sbb
pop
loopne
cmp
je
mov
xchg
dec
lock
clc
gs
cld
dec
xchg
nop
mov
fimul
mov
(bad)
cwde
cmp
push
ret
jle
jg
jl
pushf
movq
and
push
push
mov
or
clc
jl
nop
push
xchg
add
inc
pop
adc
pop
add
add
dec
stos
add
ret
mov
cmp
mov
jmp
cmc
jge
pusha
inc
push
xor
sbb
add
jne
inc
mov
adc
scas
push
jle
xlat
mov
add
and
(bad)
outs
fisttp
push
push
push
push
inc
ins
or
(bad)
div
cmp
je
inc
jne
je
outs
pop
adc
mov
push
outs
arpl
push
outs
ins
bound
outs
js
adc
popa
push
push
imul
gs
adc
imul
and
jb
fistp
jns
adc
gs
fs
dec
imul
or
je
imul
and
push
je
inc
popa
ins
les
jbe
ins
jg
(bad)
int3
imul
gs
jb
addr16
mov
push
gs
into
or
push
arpl
ins
ins
out
mov
jo
jb
je
je
outs
gs
cld
sbb
ins
ja
je
jae
adc
or
imul
adc
jb
adc
mov
je
pop
addr16
outs
mov
adc
ss
imul
adc
dec
outs
daa
adc
push
inc
data16
gs
adc
outs
ja
bound
movs
popf
mov
adc
cmp
or
push
sub
das
or
into
or
(bad)
adc
popa
adc
enter
ins
push
mov
movhlps
mov
dec
sbb
ror
jbe
push
ins
inc
and
push
icebp
push
or
arpl
jae
ins
xor
(bad)
ins
repnz
or
push
and
push
outs
ins
ret
dec
and
adc
push
sbb
fs
jb
jl
mov
fcmovb
and
je
call
out
fadd
inc
jae
shl
gs
jne
psubusb
sub
imul
in
addr16
push
mov
aas
mov
int3
loope
outs
arpl
add
sub
sbb
cmp
mov
pop
cmp
add
das
fisttp
aaa
xlat
test
shl
es
sbb
sar
sub
or
xchg
sub
das
shl
pop
(bad)
sbb
ret
pop
xchg
xor
fsub
mov
mov
mov
adc
scas
push
adc
sub
repnz
add
or
fdiv
mov
sbb
add
mov
jp
nop
mov
mov
jge
xor
or
sub
(bad)
xor
or
jne
int3
sysenter
xor
and
push
mov
add
adc
xchg
sbb
mov
or
sub
adc
and
push
popa
imul
or
dec
imul
pop
sub
push
aas
inc
ins
jns
push
aaa
xor
pop
ins
or
inc
push
xor
or
les
lods
fnstsw
or
xor
fsub
aas
mov
push
xor
ror
xchg
pusha
lods
pusha
es
adc
cmp
cmp
and
push
adc
jle
add
lods
test
dec
jo
outs
sub
push
pop
lock
xchg
adc
arpl
fs
push
sbb
inc
test
pop
adc
pusha
dec
adc
jo
arpl
dec
cmps
cmp
popa
add
sbb
xor
add
pop
jo
sbb
or
sbb
mov
push
daa
lea
jmp
sub
gs
adc
dec
into
lea
xor
mov
popf
sbb
sbb
inc
mov
pop
mov
aad
movs
out
push
fldcw
in
icebp
in
shl
test
adc
and
imul
out
add
cmp
fisubr
je
pop
push
sbb
ins
sbb
stos
mov
sub
fldenv
xor
push
sbb
daa
ror
cmp
xor
enter
in
jne
mov
xor
mov
and
sub
test
sbb
and
inc
push
movs
fwait
sbb
jno
fisttp
jmp
test
mov
xor
sub
or
fld
retf
mov
mov
sbb
pop
adc
sbb
js
add
fimul
mov
pop
in
push
adc
adc
das
jmp
leave
movs
or
inc
and
loopne
retf
outs
das
adc
xchg
fsub
sub
pop
or
push
inc
cmp
into
dec
adc
sub
jo
adc
fucomip
or
in
pop
xor
retf
push
aas
inc
mov
jne
(bad)
jb
retf
push
(bad)
call
or
pop
add
add
(bad)
dec
outs
ins
movs
or
fcomp
and
sbb
ins
adc
cmc
mov
push
imul
push
xor
mov
xchg
cmp
or
push
inc
shl
aam
add
xlat
add
call
gs
jno
push
sbb
(bad)
push
out
sbb
jmp
outs
mov
push
mov
cwde
mov
sub
dec
bound
ret
and
sub
and
daa
mul
pusha
mov
adc
daa
inc
pusha
scas
inc
shr
outs
fcomp
pusha
ss
and
push
inc
xchg
dec
xchg
mov
pop
adc
push
sbb
mov
and
adc
rcl
out
ret
dec
xchg
or
and
push
test
cmp
daa
mov
jb
and
xchg
shl
adc
sbb
cs
sbb
ja
ins
shl
inc
les
mov
and
mov
and
cmp
mov
sub
push
sti
mov
gs
aam
adc
mov
cmp
push
push
sbb
and
xor
pop
xor
push
cmp
cmp
cmp
xor
shl
sbb
or
push
xor
cmp
ror
xor
pop
push
xor
fild
ins
or
pop
and
cmp
shl
or
xor
pushf
pusha
iret
mov
imul
pop
cmp
aaa
in
pop
cmps
rol
std
pusha
sbb
jno
(bad)
cmc
push
popa
inc
retf
xor
xor
xchg
fadd
addr16
xor
lea
or
push
adc
or
and
cmps
(bad)
pop
ins
sbb
es
adc
adc
or
jne
dec
inc
ss
or
fadd
ins
xor
mov
xor
bound
mov
inc
lods
popa
jo
aad
ret
cmp
ins
add
out
push
and
bound
adc
out
or
aaa
xor
add
inc
adc
xor
xor
rol
and
int3
inc
cmp
xchg
call
push
pop
mov
je
xor
inc
xchg
dec
pop
rol
xchg
lea
push
add
adc
or
jne
sbb
mov
push
ins
jo
popa
jae
jp
sub
ss
sbb
call
sub
lea
pop
dec
add
stos
clc
and
fisttp
and
imul
fwait
jecxz
int3
push
shl
loopne
test
mov
xor
scas
clc
jge
add
das
stos
ret
and
push
push
das
or
mov
mov
daa
or
(bad)
sbb
dec
ja
nop
and
mov
sub
jmp
ss
lock
ins
ror
and
sahf
sbb
mov
mov
sub
push
sub
pop
pop
cmp
inc
mov
adc
mov
push
push
add
adc
ret
cwde
push
ds
int
lods
and
ret
daa
cmc
inc
adc
dec
nop
pusha
and
sbb
or
cmp
or
cmp
or
sbb
cdq
cld
inc
lds
(bad)
sub
inc
bound
cdq
das
add
or
shl
les
xor
mov
mov
fwait
mov
daa
mov
addr16
into
push
int
or
jb
retf
arpl
sub
int
add
and
add
dec
imul
test
xchg
cmc
in
test
aas
repz
mov
adc
dec
in
movs
mov
sti
neg
lods
or
test
push
and
les
pop
sti
pop
sbb
daa
sub
mov
div
int
add
push
sub
inc
xor
je
adc
(bad)
jo
xor
or
cmc
and
sub
mov
es
daa
add
inc
mov
mov
xor
cmp
fdivr
xor
dec
mov
pusha
sbb
data16
xor
sub
push
pop
call
(bad)
inc
xchg
add
push
in
xor
dec
sbb
neg
not
pusha
ss
adc
push
mov
push
cmp
xor
xor
inc
cmp
pushf
das
addr16
jmp
and
ins
xor
inc
lea
sbb
push
test
popf
cmp
sub
lock
loopne
ficom
inc
gs
loopne
pop
out
sbb
jno
cmc
shl
cmp
jmp
test
lea
push
lods
test
adc
inc
data16
not
push
aas
push
(bad)
pop
retf
icebp
inc
push
xchg
test
shl
bound
jo
sub
and
cdq
daa
dec
adc
movs
fsubr
and
and
shl
jae
sub
or
xor
pop
cmp
add
sub
pop
and
or
jp
int
xchg
out
addr16
and
das
rol
sub
push
nop
push
(bad)
adc
test
xchg
or
adc
outs
lods
outs
cwde
fcmovb
cmp
inc
std
sub
hlt
test
push
pusha
or
jg
sub
sbb
dec
sbb
cmp
xor
dec
fcom
mov
(bad)
xor
and
(bad)
fisttp
cs
fimul
cmp
in
fidiv
sar
mov
mov
jae
mov
pop
mov
lods
and
imul
mov
data16
xlat
lahf
sbb
dec
lock
pop
mov
aas
or
jmp
push
sub
dec
popa
dec
xchg
ret
xor
outs
adc
sub
xlat
mov
mov
sbb
imul
push
cwde
daa
cmp
sub
pop
xor
enter
push
mov
mov
call
fisub
or
and
out
and
ss
ins
jne
push
push
test
jge
or
pop
out
cmp
sub
cmp
adc
inc
xchg
jb
and
(bad)
mov
mov
sub
xor
mov
jns
xor
jae
ins
ins
or
fnsave
daa
sti
fs
ins
sub
js
ins
push
pop
cmps
aam
pop
mov
pop
mov
ss
pop
sub
sub
pop
sub
bound
pop
(bad)
rcl
and
pop
repnz
out
pusha
jo
or
repz
ss
inc
(bad)
dec
movs
add
gs
jo
cmp
retf
mov
push
jae
icebp
xor
sbb
das
inc
retf
add
lods
inc
(bad)
xor
sbb
test
jb
and
push
xchg
mov
daa
lds
or
fdivr
shl
and
cmps
add
sub
test
xor
daa
cmps
lock
sub
push
arpl
cmp
or
popa
jl
rcpps
and
jo
jo
dec
push
sbb
pushf
sbb
and
or
inc
push
jg
mov
fs
jns
lock
popa
jae
je
push
daa
arpl
sub
xchg
ja
pop
and
nop
push
out
daa
xchg
pusha
push
ins
and
xor
js
inc
jae
adc
aaa
gs
imul
sbb
cmps
add
or
std
aaa
fist
push
mov
inc
dec
dec
popa
jbe
arpl
dec
inc
xor
imul
sbb
outs
or
ins
and
xchg
call
sbb
mov
cmp
add
inc
sahf
cs
lahf
pop
mov
and
cmp
enter
jo
cmp
cmps
retf
sbb
inc
mov
ins
dec
pop
in
popa
add
xor
sbb
popa
(bad)
and
cs
lods
ins
mov
neg
pop
pusha
neg
ja
sbb
xchg
dec
adc
fidiv
out
xchg
(bad)
aad
sbb
movs
and
mov
and
pusha
shl
and
push
imul
push
ja
ja
cwde
or
ja
ja
add
push
in
in
sbb
sub
and
in
mov
sbb
xlat
sbb
jbe
pop
div
and
pop
shl
sbb
addr16
adc
add
add
cwde
mov
xor
cmp
pusha
xchg
push
mov
sbb
movs
pop
and
inc
cld
pop
dec
jnp
or
adc
dec
out
sbb
outs
pop
ja
add
sub
push
and
in
pop
sub
inc
pusha
adc
inc
dec
dec
inc
pop
pop
inc
daa
ret
push
sbb
pop
inc
cs
arpl
push
call
inc
data16
bound
mov
sbb
push
and
mov
jae
pop
lds
sbb
and
add
and
sub
jg
jg
jg
jmp
inc
mov
ins
sbb
add
pop
ja
popa
jne
or
test
pop
mov
and
jnp
fcomp
push
mov
lds
xchg
cdq
jo
mov
xchg
sub
sub
xchg
xchg
loopne
or
xchg
test
lods
xchg
jae
xchg
ja
outs
jmp
int3
or
fdiv
or
and
arpl
mov
push
ja
ja
and
fs
jmp
xchg
inc
push
sbb
sbb
mov
imul
loop
pop
ins
jns
jo
dec
jae
xor
das
push
sub
mov
das
mov
and
fdivr
sub
sbb
mov
hlt
and
popa
adc
dec
jb
test
daa
pop
push
outs
sbb
mov
or
pop
adc
daa
pop
fcomp
sub
retf
pop
or
pop
jl
arpl
shl
outs
aam
push
test
mov
push
sbb
ins
jecxz
pop
push
lds
sar
sbb
sbb
push
and
enter
test
dec
or
aaa
mov
or
movs
xor
sub
outs
adc
sbb
xor
pop
cmp
and
gs
adc
adc
and
sub
pop
push
adc
int3
add
es
jno
fs
push
imul
cmp
ror
jo
dec
cmp
push
in
xchg
cmp
das
jmp
mov
icebp
add
sbb
sub
push
inc
imul
daa
push
push
pusha
out
jae
clc
or
or
adc
mov
sbb
cmp
fcmovb
pop
mov
nop
add
out
lods
bound
xor
lods
dec
xor
push
and
das
or
xor
popa
pop
enter
cmp
jmp
bound
les
sbb
je
jb
aas
pop
dec
loopne
xor
inc
jb
in
sub
(bad)
adc
out
je
cwde
push
js
xchg
popa
and
aam
pop
and
sub
push
mov
gs
lods
shl
ins
in
sub
test
out
fadd
aaa
xor
jne
ins
imul
daa
out
and
in
xor
arpl
pop
dec
sbb
xchg
inc
push
or
ins
inc
sbb
jae
fldenv
ja
ds
jae
inc
je
inc
fiadd
sbb
sub
mov
daa
add
pop
adc
movs
lea
sub
xor
mov
pop
ins
cmps
aaa
pop
dec
and
movs
inc
das
cmps
sub
pop
pop
lods
sub
jg
cdq
push
and
sub
scas
sub
ret
into
jne
daa
sar
add
div
add
mov
fstp
shr
sub
and
sub
sub
imul
cmps
add
sub
adc
push
bound
scas
jb
lods
and
cmp
push
mov
bound
test
mov
pop
pop
jecxz
jecxz
sbb
test
(bad)
add
push
inc
(bad)
ja
sbb
sbb
enter
jg
mov
pop
sub
jecxz
adc
adc
jecxz
ror
dec
xor
movs
xor
ins
imul
mov
fcomp
sahf
sub
mov
ins
lds
add
xor
scas
add
push
dec
inc
outs
js
inc
js
(bad)
daa
jecxz
mov
sti
jbe
and
int3
sub
pop
sbb
or
ins
pop
test
ins
addr16
jne
pusha
sbb
pop
mov
or
cld
ins
loope
dec
daa
not
imul
mov
test
into
retf
fucom
push
fadd
adc
or
rol
pop
outs
retf
pop
or
pop
or
adc
out
addr16
cmp
shr
mov
xchg
pop
fcom
add
fdivr
mul
jle
or
popa
sbb
jne
or
outs
pop
pop
ret
es
imul
push
and
ret
push
or
cwde
jo
and
cwde
loop
xor
je
addr16
ins
jae
sub
fsubr
adc
push
xor
into
sub
dec
lods
adc
arpl
pop
fbstp
push
xor
ins
push
pop
sub
je
dec
mov
fwait
xor
inc
adc
dec
ins
pop
jne
jne
and
imul
pop
cmps
imul
mov
mov
shl
xor
push
sub
xor
cmp
sbb
dec
push
inc
mov
dec
push
outs
scas
inc
test
fs
pop
or
and
add
lods
pop
sub
or
sbb
dec
cmp
sbb
mov
and
(bad)
ret
sbb
and
mov
cmp
loope
pusha
fsub
push
in
sbb
xchg
lea
add
mov
bound
outs
cmp
cmp
adc
(bad)
fdiv
mov
sub
nop
inc
push
aad
and
ror
sbb
push
mov
sub
jmp
mov
mov
sbb
(bad)
ja
ja
ins
and
test
(bad)
shr
hlt
xor
(bad)
rol
sbb
sbb
push
dec
mov
daa
pop
or
inc
cwde
imul
xchg
sbb
mov
inc
pop
ret
rcr
jecxz
xor
inc
ficom
repz
cmp
xor
sbb
xor
loope
icebp
dec
inc
pop
adc
inc
fsub
or
sub
xchg
or
push
xor
xor
xor
push
repz
xor
aaa
jo
push
fldl2t
scas
and
or
xchg
sub
clc
sub
daa
lods
dec
aaa
call
mov
aad
icebp
cmp
dec
cmp
xchg
fdiv
retf
cmp
aaa
adc
xor
and
or
cmp
and
push
jecxz
dec
adc
sub
pop
(bad)
cmc
push
or
push
cmp
add
loopne
push
fisttp
fs
inc
cmp
imul
and
jbe
inc
mov
je
mov
add
bound
jmp
dec
jl
fst
jo
push
sbb
les
xlat
mov
push
ret
dec
jae
ja
fadd
cmp
cmp
bound
and
cmc
daa
sti
push
ins
dec
frstor
out
jo
cli
call
mov
jo
push
add
loopne
jo
adc
cli
rol
push
push
add
adc
test
add
and
dec
add
int
daa
cmp
add
and
sbb
lahf
imul
mov
dec
and
int3
pop
and
push
add
push
sub
outs
lds
loopne
sbb
lock
lahf
sub
cmp
mov
jns
loop
sar
in
je
jne
loope
add
das
dec
sub
arpl
push
fs
mov
outs
adc
sbb
gs
imul
in
cmp
mov
lea
pop
add
dec
or
push
jb
or
outs
push
pop
mov
rol
dec
sbb
sbb
out
push
das
fsubr
or
cdq
jp
ins
and
and
aaa
lock
fs
imul
add
sbb
in
pop
inc
ins
popa
test
arpl
push
mov
cmps
test
cmps
push
xchg
sbb
pop
lahf
fsubr
ret
inc
cs
dec
pushw
outs
cmp
fmul
jp
test
dec
jp
ja
or
ror
cmp
push
out
push
dec
cmp
ins
xor
xor
test
dec
dec
das
jno
adc
push
retf
cmps
int3
call
ds
je
dec
dec
push
enter
mov
xor
jmp
push
jnp
inc
mov
jae
rol
test
dec
pop
push
imul
sbb
pop
outs
and
jne
sub
cwde
sub
fsubr
mov
push
das
dec
aaa
adc
icebp
xchg
or
cmp
jae
jg
rol
or
mov
out
or
or
mul
add
das
mul
and
sub
pop
(bad)
jecxz
out
add
ror
and
icebp
xor
(bad)
dec
mov
and
and
dec
jb
xor
(bad)
xlat
sub
push
das
mov
mov
pop
into
sub
add
sbb
xor
pusha
sub
inc
add
scas
add
ds
shl
addr16
dec
aaa
test
xor
adc
test
fsubr
sub
rol
and
movs
xchg
mov
mov
and
pop
xor
mov
stos
cmp
mov
pusha
retf
cmp
pusha
and
movs
fsub
test
pusha
cmp
test
pusha
arpl
shl
pop
data16
and
mov
add
cs
or
push
inc
xchg
mov
mov
daa
cmps
pop
mov
adc
daa
inc
xchg
jno
imul
add
sub
addr16
aad
push
mov
das
jge
or
or
xchg
dec
clc
adc
inc
ins
jns
lods
push
sar
leave
mov
(bad)
icebp
xor
stos
add
and
push
div
cmp
pop
retf
push
mov
jo
(bad)
sar
adc
or
ret
add
pop
jl
add
and
push
and
mov
ficom
fstp
xchg
pop
sbb
xor
cmp
xor
ss
cmp
(bad)
ins
in
or
sub
and
shl
(bad)
daa
inc
sub
sbb
adc
es
stos
push
and
inc
cwde
add
jmp
xchg
shl
inc
arpl
xor
xchg
xor
add
mov
mov
mov
mov
adc
int3
sbb
pop
rol
lock
and
mov
lods
cmps
xor
pop
lock
or
add
push
jge
or
shr
pop
xchg
push
enter
pop
mov
inc
test
pop
outs
scas
shl
call
sub
pop
fcom
test
sbb
and
xor
and
imul
mov
popf
sbb
cmp
icebp
and
lea
mov
aaa
xchg
daa
mov
aaa
mov
push
mov
pop
fwait
sub
aaa
jbe
adc
daa
ret
sub
(bad)
sub
sub
test
xchg
sbb
mov
push
movs
inc
add
(bad)
or
je
data16
jl
into
movs
dec
arpl
imul
jns
pop
fidivr
ins
and
cld
mov
cmps
dec
ja
adc
and
or
clc
cmp
das
sbb
out
xor
sbb
sub
dec
adc
or
push
push
and
pusha
adc
xor
test
in
push
das
inc
inc
cld
xor
fs
inc
loopne
outs
fisub
push
in
inc
scas
aam
lock
lahf
push
imul
imul
sub
fwait
and
shl
hlt
mov
jo
inc
or
les
sub
int3
and
ja
ss
jno
mov
or
sub
rol
das
ja
push
add
and
ins
ret
jns
cmps
sbb
and
ins
lea
adc
mov
js
adc
adc
fisttp
ret
inc
lock
call
jg
pop
mov
pop
xor
and
push
not
in
bound
pop
or
push
dec
add
ret
or
sbb
addr16
mov
sbb
jae
in
ror
push
inc
push
rcl
add
clc
adc
push
sbb
dec
xchg
je
and
int3
add
lahf
cmp
adc
xor
dec
mov
and
sbb
xor
xor
adc
xchg
xor
dec
xor
jnp
xor
push
adc
in
jmp
ret
es
or
(bad)
push
pop
cdq
mov
pop
sub
cmps
pop
xor
stos
pop
mov
mov
mov
pop
ror
mov
xchg
mov
push
or
push
gs
mov
retf
shr
push
scas
mov
sub
fidiv
mov
sub
ins
or
sub
xor
inc
pusha
aas
or
gs
jo
fldenv
cmps
(bad)
and
sbb
push
fisub
add
sbb
retf
or
inc
xor
jp
arpl
inc
and
inc
pop
inc
and
xchg
mov
das
fmul
and
push
(bad)
cmp
and
or
mov
xchg
and
pop
and
fmul
shl
dec
xor
popa
arpl
and
lea
es
loope
xor
add
jo
popa
je
sbb
or
adc
es
(bad)
push
xor
ins
cmp
scas
(bad)
xor
pop
jae
sbb
sub
mov
das
dec
ins
add
jns
aam
fwait
dec
adc
test
jg
popa
lods
sub
jo
inc
add
fs
cmp
inc
inc
and
inc
pop
inc
sbb
jmp
mov
jg
arpl
jb
ret
sbb
mov
pop
push
pop
adc
dec
mov
adc
dec
cmp
dec
sub
push
push
adc
and
iret
adc
jae
inc
fadd
nop
or
fsub
xor
xor
nop
or
xor
or
inc
or
ins
imul
outs
ror
and
ret
popf
shl
pop
and
(bad)
into
or
mov
sub
and
arpl
scas
arpl
cmp
sbb
ins
lods
add
das
daa
xor
js
sbb
inc
jo
jb
hlt
xchg
test
sbb
mov
xor
push
popa
std
or
mov
cmp
push
jne
imul
cwde
push
sbb
dec
cmp
inc
add
xor
jbe
lods
outs
or
je
inc
adc
dec
adc
xchg
fadd
pop
pushf
into
pusha
or
add
aaa
cwde
add
or
pop
add
push
xchg
jne
fs
mov
pop
add
jne
cmps
idiv
sub
nop
out
adc
or
jp
outs
mov
push
out
dec
push
retf
les
inc
pop
pop
and
imul
lds
das
dec
lock
dec
imul
lock
push
push
inc
fs
or
ror
lods
xchg
cmp
push
call
sbb
jmp
addr16
ds
aas
dec
popf
out
rcl
sub
enter
xchg
retf
ins
mov
fadd
pop
adc
xlat
sbb
inc
push
xchg
adc
bound
fidiv
jae
imul
push
xor
jne
adc
fdivr
pop
fs
ret
adc
mov
mov
or
inc
in
call
or
pusha
or
addr16
dec
data16
jge
adc
or
int3
push
sysret
inc
fistp
xchg
or
scas
addr16
xor
dec
pop
jae
inc
add
fistp
xor
push
add
add
in
nop
add
add
jae
or
mov
or
sub
mov
in
movs
inc
movs
add
xchg
pop
adc
mov
sub
sub
lock
adc
ror
add
mov
sbb
or
clc
rol
mov
adc
(bad)
arpl
ins
jae
adc
call
cmp
add
enter
cmp
add
dec
icebp
js
cmp
rol
movs
pop
leave
add
add
shl
or
ins
ja
inc
mov
mov
addr16
ficomp
pop
fcmove
test
jge
mov
cmp
pop
adc
push
test
xor
data16
pop
adc
sub
add
daa
fwait
ret
test
add
push
xchg
adc
sbb
mov
push
hlt
add
jb
das
test
jbe
sbb
pusha
dec
mov
mov
cmp
xor
jne
or
loopne
outs
sbb
adc
cmp
or
xchg
jbe
adc
adc
fcom
data16
daa
sub
repnz
ins
adc
add
fsub
dec
or
dec
jmp
adc
push
lods
push
int3
pop
adc
jle
dec
pusha
in
cmovne
or
hlt
xor
xor
mov
inc
sub
mov
sub
pop
das
xchg
cdq
push
or
adc
or
in
adc
pop
sub
pop
daa
sbb
lea
push
pusha
mov
xlat
or
inc
sub
pop
es
sbb
push
push
fsub
cmp
clc
int
jge
inc
addr16
xor
aas
and
adc
out
pop
mov
mov
(bad)
ret
bound
fcom
xor
cmps
sbb
sbb
adc
sbb
sub
or
ins
pop
sub
fstp
fdivr
sbb
(bad)
sub
and
pop
shl
je
stos
call
or
mov
sub
cmps
sub
ins
add
mov
and
ins
retf
cmps
pop
imul
inc
and
dec
sub
hlt
push
mov
test
xchg
or
ja
sub
jge
sub
js
push
mov
aaa
pop
aad
mov
sbb
data16
mov
add
add
sub
pop
sub
sbb
std
dec
sbb
test
pusha
arpl
sub
ret
xchg
push
outs
jo
ret
push
aaa
fwait
adc
sub
adc
push
inc
xchg
popa
and
int
xor
fidiv
cli
test
bound
test
sub
fst
push
sbb
ja
retf
adc
xor
push
inc
mov
xchg
sbb
pusha
das
outs
and
sbb
xor
cmp
xor
sub
push
(bad)
sbb
or
jge
daa
test
push
and
mov
(bad)
popf
mov
int
sub
rol
xor
sub
xchg
sub
and
or
mov
sub
push
xchg
jbe
in
jecxz
adc
jge
icebp
mov
jbe
arpl
pop
scas
outs
cmp
enter
(bad)
fcom
out
inc
wrmsr
push
cli
pusha
arpl
add
adc
int3
test
add
inc
sub
fldenv
lock
or
inc
dec
sahf
jne
cmp
push
dec
mov
mov
sub
dec
ret
mov
popw
and
jg
xchg
iret
mov
mov
push
test
out
mov
add
dec
pushf
jge
mov
lahf
out
mov
cmp
add
repz
outs
jb
pop
outs
add
add
cmps
retf
add
imul
add
sbb
dec
sbb
mov
sbb
xor
sub
and
adc
and
retf
add
add
add
daa
add
sub
sub
pop
stc
in
add
sub
or
sub
sub
cs
mov
mov
or
pop
xor
aad
adc
out
mov
pop
xor
mov
add
xchg
das
pop
aaa
add
inc
scas
packssdw
cmp
mov
pop
mov
gs
(bad)
fsubr
dec
mov
inc
add
rcr
inc
jmp
ss
xchg
push
inc
add
add
push
push
inc
push
pop
or
jb
cmp
jb
imul
adc
je
test
or
add
cld
jge
cli
je
or
outs
push
mov
dec
push
push
imul
add
adc
test
adc
cmps
pusha
aaa
cmp
sbb
or
sub
call
cmps
add
add
add
adc
mov
pushf
add
push
or
dec
in
add
push
and
xor
pushf
add
adc
push
and
nop
push
sbb
bound
xchg
les
and
pushf
add
clc
ins
and
or
push
cmp
adc
scas
add
add
jl
and
pushf
add
mov
adc
xchg
call
outs
popa
fs
jb
ins
test
mov
ins
nop
(bad)
les
xchg
das
pop
cmps
cld
or
push
or
add
pusha
scas
adc
pop
add
pop
or
push
je
sbb
or
inc
or
cs
sbb
or
popa
jbe
push
sub
push
sub
add
js
adc
sub
push
jo
test
xchg
test
sub
jne
inc
and
mov
xchg
and
push
lods
cmp
test
imul
mov
jmp
int3
pop
push
dec
popa
outs
sub
mov
adc
and
or
mov
and
jae
xchg
add
xor
pop
shl
xchg
push
dec
or
mov
push
pop
les
pushf
sbb
lock
push
add
idiv
and
pop
mov
inc
dec
outs
outs
mov
push
add
sub
adc
imul
add
call
in
mov
sbb
sahf
add
xchg
xlat
addr16
jb
jb
mov
jg
fs
cmovge
sbb
fwait
or
test
sahf
pushf
mov
sar
dec
inc
xchg
aad
add
adc
dec
mov
lar
aam
fmul
(bad)
cmp
cmp
lahf
mov
sbb
pop
add
retf
mov
adc
ror
and
out
jb
pop
mov
push
inc
inc
adc
push
imul
push
or
add
add
call
call
add
push
jbe
xchg
imul
xchg
repnz
shr
push
add
jne
mov
adc
add
jo
and
(bad)
jp
loopne
push
add
jb
(bad)
loope
inc
fs
pusha
sbb
or
add
fld
outs
add
xchg
stos
sbb
jnp
jg
fdiv
stos
add
xchg
add
or
js
fiadd
or
add
push
or
imul
sbb
adc
imul
or
into
leave
pushf
mov
lahf
dec
arpl
and
enter
ret
adc
jle
sub
jo
fld
dec
ins
push
push
pushf
popf
add
fst
adc
popa
sub
popa
and
loope
imul
cmc
push
cmp
xchg
inc
push
sbb
fisttp
push
jl
test
add
dec
outs
pushf
js
mov
loop
jae
aad
mov
mov
and
cmp
pop
and
and
mov
cmp
adc
jno
dec
pusha
add
(bad)
push
or
out
in
loopne
mov
jns
adc
and
add
ror
dec
sbb
cmp
mov
mov
and
add
icebp
sub
push
ret
lock
dec
mov
idiv
fs
adc
or
maskmovq
test
or
and
cmps
cmp
psllw
imul
in
xchg
test
stos
hlt
nop
test
push
mov
popf
ret
dec
dec
(bad)
and
inc
xor
mov
(bad)
add
xchg
mov
aam
push
scas
mov
test
and
sbb
ins
pop
add
adc
adc
sbb
shr
loope
push
fucomip
movs
in
or
and
nop
inc
out
mov
xchg
in
dec
les
xchg
outs
bound
jp
and
xchg
mov
or
xor
fidiv
jle
add
or
pushf
out
cmp
test
and
(bad)
cmp
aas
add
nop
and
mov
dec
jge
add
aad
jae
ins
ja
add
add
imul
inc
add
gs
jo
add
or
jg
or
(bad)
xchg
cmc
inc
pusha
add
test
mov
cmc
scas
and
xchg
dec
add
nop
pop
dec
popa
jae
inc
imul
fs
outs
jae
in
xor
(bad)
std
add
mov
stos
inc
call
sub
xchg
sbb
or
adc
pop
cmp
jnp
js
inc
dec
sub
jne
popa
ins
jnp
leave
mov
ins
sar
push
jne
adc
adc
mov
sbb
sbb
xor
bound
sbb
sub
push
sub
scas
rcr
dec
push
popa
ins
imul
rcl
dec
inc
sub
mov
ja
mov
add
addr16
outs
outs
popf
cmp
mov
push
arpl
inc
ins
add
lds
(bad)
jno
and
xor
cmp
push
ins
xor
(bad)
lds
cwde
sti
das
xor
rcr
add
add
inc
(bad)
les
outs
dec
cdq
add
or
test
je
dec
jb
shr
xor
sbb
inc
stc
popa
push
xor
jns
and
loop
shl
push
inc
adc
(bad)
pop
add
push
aaa
mov
mov
and
sub
sbb
pop
xor
xchg
jae
outs
mov
fdivr
and
push
mov
push
xor
enter
push
in
dec
mov
(bad)
and
into
push
push
mov
sar
movs
and
scas
push
out
or
mov
daa
lahf
data16
or
sub
pop
xor
xor
out
xor
push
dec
out
(bad)
xor
push
xor
cmps
push
mov
les
push
loopne
je
cmp
jnp
in
aas
push
ds
inc
es
ss
mov
scas
jge
fdiv
push
fdivr
push
sbb
js
imul
cmps
cmp
xchg
mov
cmp
xchg
dec
scas
jge
aaa
push
push
je
sub
or
test
aam
scas
sbb
cmps
dec
push
sbb
xor
push
inc
neg
loopne
(bad)
inc
xchg
inc
dec
ss
les
(bad)
sbb
std
xor
mov
das
(bad)
dec
and
pop
popa
push
mov
sub
fiadd
cmc
jg
or
inc
sub
add
lock
dec
gs
ins
mov
and
cmp
daa
pop
add
sub
aam
std
jae
inc
sub
push
xor
(bad)
iret
pop
enter
dec
aam
retf
out
dec
mov
add
sbb
stos
sbb
imul
pop
scas
cld
sbb
inc
retf
sbb
mov
ficomp
retf
push
add
add
xchg
das
ja
and
push
and
mov
push
mov
movaps
in
pop
mov
sub
push
add
sub
movntps
dec
sub
call
out
add
shr
add
scas
cld
sub
push
shl
add
add
xor
cli
xor
add
aaa
add
in
sub
(bad)
push
(bad)
xor
ret
add
aad
jl
imul
add
aas
adc
sub
adc
cmovno
(bad)
dec
dec
aad
aad
adc
push
inc
ror
xchg
or
push
adc
(bad)
jl
adc
inc
ins
adc
mov
jns
inc
or
sub
sbb
xor
xchg
out
xchg
int3
sub
xchg
pop
and
or
pusha
xchg
cmp
cmp
cmp
add
adc
add
xchg
cmp
xor
das
dec
xchg
inc
and
add
or
xchg
cmp
adc
sub
add
add
push
aas
xchg
add
or
pusha
xchg
mov
inc
cmps
xchg
loopne
pushf
sbb
add
xchg
mov
and
push
inc
jb
aam
and
inc
dec
leave
sub
or
xor
push
mov
add
xchg
int3
pusha
inc
add
push
sahf
xchg
mov
and
and
adc
rcl
sbb
cmp
movs
arpl
mov
and
xchg
in
mov
xchg
outs
xchg
adc
add
sub
(bad)
xchg
or
xchg
push
mov
mov
addr16
xchg
and
into
or
xchg
lods
adc
mov
(bad)
and
jb
mov
xchg
sbb
leave
adc
lea
mov
aaa
push
out
xchg
adc
add
sbb
push
sub
jp
xor
in
ins
mov
sub
inc
cmp
xchg
syscall
xchg
push
mov
cmps
pusha
xchg
jl
nop
dec
rol
clc
cmp
in
xchg
(bad)
push
add
outs
jge
icebp
add
cmp
jb
xlat
jp
or
ja
cmps
ss
sbb
ja
dec
or
jo
adc
or
call
(bad)
push
add
add
les
mov
mov
andps
outs
outs
imul
adc
jg
jne
int3
add
imul
mov
add
es
out
or
or
scas
enter
bound
gs
push
imul
cmp
push
sub
cmps
je
jns
popf
adc
mov
push
js
mov
cmc
inc
test
adc
test
inc
xlat
sub
mov
xchg
xchg
addr16
xor
add
adc
inc
and
add
inc
ret
and
and
jmp
test
xchg
pop
add
cld
enter
(bad)
sbb
push
inc
add
push
(bad)
call
dec
data16
jle
push
cwde
cdq
in
push
add
pop
sbb
imul
cmp
or
repz
xchg
mov
sbb
scas
mov
ret
add
mov
jbe
cwde
mov
push
rol
push
and
inc
outs
pop
pushf
fisubr
ins
push
outs
addr16
mov
cli
hlt
and
inc
jo
push
fdivr
push
or
and
in
jno
sub
and
push
arpl
outs
or
add
push
scas
pop
or
and
push
fcmovnb
fs
or
push
dec
fcmovne
xchg
xchg
xchg
fld
imul
retf
xchg
repz
xor
xchg
jbe
mov
xchg
xchg
retf
xchg
stc
sbb
inc
gs
xchg
xchg
xchg
lea
push
retf
and
pop
xchg
fs
and
jmp
mov
cmp
fs
lods
inc
jg
inc
loope
add
cmps
push
inc
sti
add
int3
cwde
(bad)
fisubr
add
not
int3
push
mov
mov
pop
push
out
and
pop
inc
js
inc
in
mov
add
repz
aas
mov
inc
cmp
scas
cmp
or
mov
xor
or
jmp
add
mov
add
clc
(bad)
mov
loopne
pop
push
imul
sbb
push
or
sbb
pop
or
hlt
dec
sub
lods
sbb
dec
xlat
inc
xchg
or
bound
or
cmps
mov
xor
sub
lds
mov
out
js
ret
add
push
push
arpl
jo
cmp
rol
inc
iret
xchg
xor
aam
xchg
fisttp
shl
push
pop
clc
lea
sub
jp
fmul
add
xor
push
jmp
add
loopne
push
adc
add
int3
call
pop
mov
push
cmp
xor
add
in
imul
cs
push
mov
jnp
ret
and
inc
ds
adc
shl
sbb
adc
add
fwait
in
push
aas
jo
out
inc
jae
outs
jae
xor
addps
or
loopne
sub
sub
lock
jb
fild
mov
push
and
sub
push
jb
gs
inc
imul
adc
or
or
daa
mov
test
sar
or
aaa
and
scas
retf
push
xor
or
inc
inc
adc
fld
jne
inc
mov
sbb
or
dec
outs
(bad)
cmp
sbb
in
scas
add
add
push
inc
inc
jb
jae
aaa
ins
ret
mov
push
mov
or
cmovnp
pop
push
xchg
clc
xor
mov
test
sub
pop
dec
sub
in
inc
add
adc
dec
inc
fsub
sub
xchg
mov
add
or
clc
prefetch
or
loop
xor
fs
jl
je
push
shl
sub
xchg
bswap
xor
adc
push
add
mov
mov
add
and
call
xor
sbb
push
xchg
lea
mov
pop
jmp
and
sbb
ins
mov
and
pop
push
or
adc
adc
and
les
movs
pop
pop
push
out
sahf
inc
loopne
adc
loopne
push
js
adc
js
cld
add
clc
sbb
(bad)
pop
clc
mov
jb
adc
inc
add
test
push
fiadd
xor
inc
retf
(bad)
jecxz
int
int
loop
test
push
ror
ret
mov
inc
add
or
add
mov
adc
mov
add
pop
outs
sti
or
sbb
sbb
mov
sbb
in
pusha
test
sbb
movs
(bad)
pusha
adc
mov
add
pop
int
jae
or
cwde
or
sub
scas
rol
mov
out
inc
shr
dec
and
add
inc
inc
add
xor
arpl
dec
int3
pop
stos
inc
dec
push
int
shl
jo
add
adc
mov
pop
dec
pshufw
inc
jo
shl
dec
add
jae
retf
dec
adc
add
test
pop
xor
pop
or
js
rcl
dec
movs
xchg
add
adc
xchg
add
sbb
mov
test
inc
push
add
inc
and
mov
adc
out
pop
add
pop
pop
(bad)
sub
pop
jmp
pop
add
adc
mov
and
ds
adc
inc
fs
push
js
jl
outs
push
add
add
rol
cs
and
mov
js
mov
and
xchg
sub
adc
sbb
(bad)
gs
cli
pop
push
pushf
sbb
je
imul
sub
or
outs
inc
and
pop
inc
inc
pop
and
push
outs
adc
xchg
mov
jle
gs
mov
jmp
sbb
repz
bnd
fsubr
mov
xor
call
pop
retf
adc
dec
cld
mov
jmp
add
mov
push
jp
shl
arpl
xor
add
jae
addr16
add
lock
in
add
mov
adc
faddp
lds
fild
ins
(bad)
in
cmp
or
imul
add
lds
mov
sbb
push
mov
dec
jo
xlat
mov
out
dec
and
or
inc
push
popa
cdq
mov
add
mov
sbb
(bad)
or
cdq
icebp
(bad)
xlat
sub
xorps
adc
rcl
xchg
push
xor
adc
out
ret
adc
push
out
leave
pop
dec
jo
imul
and
adc
js
pop
mov
fistp
push
push
icebp
add
das
and
ror
and
dec
inc
retf
xor
cmp
jb
jo
jb
enter
popf
test
emms
arpl
jg
dec
sbb
add
inc
fadd
add
jae
push
scas
mov
push
rcr
ret
or
jae
jne
arpl
jns
or
add
or
jmp
push
or
repnz
jnp
lods
pop
push
sbb
pop
mov
pusha
mov
popf
js
adc
mov
or
js
ret
add
and
pusha
in
pop
or
pop
das
adc
push
jo
in
test
fdivr
sub
jbe
jno
aam
inc
sahf
pushf
(bad)
cmp
(bad)
retf
daa
daa
and
out
xchg
ficomp
leave
enter
sahf
and
pop
fs
leave
pop
dec
repnz
repz
xchg
inc
fwait
sbb
dec
pop
and
inc
dec
adc
pop
leave
shr
in
(bad)
push
test
loopne
xchg
out
mov
(bad)
imul
or
call
xchg
jmp
lock
mov
sbb
dec
jae
cmp
xlat
cdq
or
push
mov
jnp
imul
push
jnp
and
pop
adc
xor
sbb
pop
jnp
adc
fstp
xchg
out
ds
or
leave
mov
test
test
imul
cmp
or
jl
push
add
add
lds
push
fwait
mov
pop
in
rol
test
shl
in
adc
adc
or
sbb
pusha
js
push
sub
pusha
je
dec
xchg
inc
cmp
mov
pop
stc
ret
adc
ss
jno
xor
repz
or
ret
imul
add
ins
repz
out
or
adc
push
inc
scas
push
dec
mov
sbb
push
add
in
xor
adc
push
pusha
rcr
inc
or
push
push
ins
jb
cmp
out
push
bound
mov
xchg
outs
push
loop
add
and
jmp
jl
adc
test
jl
push
mov
adc
mov
test
inc
in
dec
xchg
test
mov
test
and
xchg
sub
or
or
sbb
jne
jnp
int
ss
add
dec
adc
(bad)
fld
mov
int3
mov
arpl
ins
jo
cmp
inc
jo
lods
(bad)
scas
inc
aad
push
bound
adc
mov
push
sbb
mov
adc
sti
sub
jg
ins
jbe
add
pop
fsubr
cmp
mov
test
es
shr
repz
cld
lock
add
sub
ds
push
into
cs
psubsb
ret
jnp
imul
test
in
xchg
repnz
and
push
add
outs
shl
retf
cli
wbinvd
add
mov
or
sub
outs
cmps
adc
and
xchg
and
add
inc
(bad)
pop
arpl
push
jmp
or
sbb
push
xchg
cdq
in
sub
adc
clc
or
mov
test
cmp
sbb
fcom
push
shl
or
dec
add
or
outs
adc
sub
inc
ret
and
or
push
inc
and
cmp
add
mov
and
jo
cmp
mov
pusha
add
jge
sbb
pop
stc
adc
loopne
sbb
imul
dec
call
cmp
jns
loop
adc
out
push
in
(bad)
dec
movs
and
mov
adc
sub
sub
pop
dec
daa
jmp
popf
lods
(bad)
vunpckhps
add
dec
or
loope
push
or
shr
shr
das
add
fdiv
jb
add
out
dec
rcr
inc
or
hlt
nop
imul
sbb
push
lahf
mov
mov
or
cmp
popa
or
add
mov
dec
add
xchg
es
ror
add
or
adc
inc
mov
cmp
pop
inc
push
aad
xchg
daa
dec
rol
push
or
stos
mov
xchg
or
sahf
jns
pop
dec
int3
in
test
sbb
sbb
adc
loopne
fidiv
and
pop
inc
(bad)
push
iret
pop
ins
adc
push
xor
cmp
or
adc
pop
jo
add
pop
dec
cwde
and
lahf
mov
pop
sub
inc
push
leave
repnz
pop
pop
mov
jo
lods
push
lahf
clc
sahf
jo
out
mov
syscall
jne
loopne
push
push
push
push
js
inc
int3
addr16
jns
jne
mov
adc
mov
add
sub
pop
dec
mov
adc
inc
fnstsw
cvttps2pi
push
push
dec
jnp
jl
jge
test
(bad)
cld
jne
ret
imul
cmc
jl
adc
rol
outs
mov
xchg
jo
in
add
sbb
xchg
aad
sub
sub
icebp
push
rol
stos
arpl
jmp
xchg
fwait
sbb
add
jo
jle
inc
mov
imul
lods
add
pusha
cmps
addr16
cmps
mov
push
mov
xchg
sub
xchg
jecxz
jbe
xchg
loopne
in
xor
out
push
fbld
or
fistp
cdq
or
inc
cmp
popa
inc
or
mov
cwde
aas
pop
inc
lahf
mov
mov
int
push
pop
push
das
outs
push
fbstp
xchg
fistp
adc
in
push
fbld
out
loopne
inc
add
popa
push
or
call
outs
imul
sbb
add
and
mov
ror
(bad)
inc
adc
mov
das
out
minps
inc
push
out
fs
sbb
out
dec
imul
jns
and
movs
shr
xor
cmp
frstor
cmp
dec
push
mov
sub
push
mov
adc
into
mov
sub
add
fwait
shr
xor
std
push
or
lds
mov
add
jmp
push
lds
inc
inc
xchg
mov
cwde
loop
sbb
out
push
mov
dec
sub
push
popa
(bad)
inc
jge
and
lds
loopne
and
out
(bad)
daa
xchg
leave
add
inc
push
push
ret
frstor
mov
xor
mov
mov
out
into
iret
jp
ins
outs
jbe
nop
or
inc
shl
(bad)
sbb
mov
or
mov
sub
cwde
out
lods
add
ror
(bad)
lds
fld
bound
pop
pop
xor
movs
cmp
jge
ins
sti
ss
push
push
adc
adc
sahf
cmps
jge
outs
adc
movs
frstor
fcomi
or
cwde
xchg
xchg
iret
push
call
mov
push
mov
mov
mov
cmp
mov
push
push
push
add
fsubr
push
clc
cs
or
push
inc
inc
jb
jae
dec
lea
push
loope
inc
cmp
into
jo
xchg
mov
ins
ins
inc
gs
out
movs
std
popaw
jne
je
arpl
mov
bound
jne
data16
fs
xor
(bad)
or
push
jo
push
or
mov
push
(bad)
jecxz
ja
sub
fadd
adc
and
mov
mov
push
or
sub
clc
adc
jbe
pushf
gs
sub
mov
imul
pop
or
cmp
jno
or
dec
pusha
mov
sbb
daa
dec
outs
cmps
(bad)
or
test
mov
dec
mov
adc
dec
hlt
ss
inc
inc
(bad)
mov
lds
cli
(bad)
cld
and
push
mov
mov
test
int
xor
cmp
cwde
push
mov
mov
test
mov
cmp
push
sub
push
xchg
dec
outs
imul
push
inc
cli
cmps
mov
add
or
mov
mov
and
push
mov
jns
xchg
nop
popa
jno
add
or
push
js
bswap
jns
sbb
idiv
daa
mov
fsub
jbe
pop
jne
sbb
or
inc
imul
xchg
scas
ret
add
lods
ja
aam
mov
or
std
dec
inc
jae
sbb
or
mov
lods
mov
lahf
mov
jnp
pop
or
mov
mov
fisub
lock
stos
xor
out
iret
pop
nop
mov
scas
adc
test
ja
scas
(bad)
lods
jmp
cmp
pop
cdq
sbb
fidiv
cmp
push
inc
es
push
push
inc
jo
lods
mov
shl
fs
sbb
scas
popf
or
inc
nop
nop
fnstsw
es
cwde
add
mov
in
je
xor
arpl
imul
and
xor
and
push
ret
mov
inc
xor
xlat
xchg
mov
aam
and
mov
mov
push
sbb
xchg
ror
popa
push
je
cmp
sub
jno
inc
mov
add
push
and
xchg
mov
jle
adc
push
fidiv
cmp
or
inc
mov
push
fdiv
lods
xlat
dec
push
push
jns
clc
cmp
xor
adc
or
ucomiss
add
inc
fsubr
loopne
gs
and
inc
or
outs
jne
test
jb
test
add
test
push
popa
test
pop
xchg
cwde
leave
and
cdq
sbb
pusha
(bad)
ins
imul
in
ds
mov
xchg
or
mov
push
pop
push
xchg
pop
xchg
(bad)
push
xchg
xlat
jmp
jl
aas
stos
xchg
jne
inc
mov
push
xchg
dec
dec
add
cmps
inc
stc
test
cmps
xor
xor
sub
ret
adc
jo
pop
xor
pop
push
outs
nop
imul
dec
inc
or
mov
sub
add
pop
ret
nop
gs
fst
pop
sub
push
pop
fiadd
(bad)
stos
cs
pop
adc
mov
aaa
leave
adc
(bad)
(bad)
dec
xor
cwde
rol
add
pop
inc
mov
mov
lahf
rol
push
sbb
push
shr
dec
outs
or
inc
adc
fldenv
aad
inc
or
dec
pop
sbb
push
add
ror
push
adc
scas
add
pop
lds
fnstsw
loope
rcl
(bad)
mov
jae
mov
or
(bad)
jae
fsub
inc
ret
inc
push
scas
mov
shr
ins
sbb
cld
sbb
js
mov
outs
das
xchg
push
pop
pop
inc
scas
shl
adc
not
daa
mov
add
punpckhbw
sub
dec
popa
outs
pop
xchg
pusha
cmp
ja
rol
inc
and
popa
mov
adc
pop
push
or
ins
pusha
dec
mov
dec
sbb
or
and
xor
xor
add
add
test
dec
or
nop
mov
cmc
(bad)
hlt
or
rcr
add
std
retf
pop
test
pop
push
push
sub
int
xchg
pop
lahf
mov
add
daa
dec
dec
test
rol
shr
jmp
sub
inc
push
or
retf
call
nop
mov
inc
sbb
push
je
lahf
das
mov
push
shl
inc
dec
push
call
add
retf
scas
xchg
pop
push
add
movs
sub
mov
inc
scas
dec
in
mov
jecxz
inc
fs
sbb
or
adc
sti
xor
cmp
pop
inc
pushf
jge
or
int
or
inc
adc
sub
ss
stos
ret
ins
add
or
pop
pop
mov
bndstx
ja
mov
add
sub
push
ficom
push
outs
xor
test
dec
or
das
adc
cmps
add
cmp
out
stos
movs
jnp
xor
scas
dec
push
fs
sub
sub
popf
je
or
add
mov
shl
pop
imul
sub
push
xchg
add
shl
inc
cmc
dec
add
test
pop
sete
in
mov
or
cmc
push
js
and
inc
xchg
pop
(bad)
jnp
jne
mov
leave
enter
fwait
in
in
in
and
xor
(bad)
pop
nop
fstp
cmp
jns
and
pushf
mov
es
pop
add
pushf
mov
dec
dec
dec
dec
popf
sar
sub
mov
lock
pop
push
ins
ja
es
fimul
push
xor
sbb
fwait
es
stos
mov
xor
xor
xor
dec
out
dec
or
or
push
add
add
jecxz
mov
or
jae
pop
sub
xor
jb
or
dec
add
sub
add
std
mov
addr16
push
adc
inc
push
ss
sub
xor
jg
fs
xor
inc
inc
fs
aad
les
mov
adc
popa
ins
jne
cmp
bound
cmp
mov
retf
add
jmp
xchg
or
ins
inc
cmp
rcr
or
outs
pop
sub
mov
push
mov
jbe
sub
jae
sbb
cmc
enter
add
xchg
add
xchg
or
mov
xlat
or
and
das
leave
fwait
loopne
adc
push
fmul
push
arpl
pop
xor
inc
or
loope
dec
jae
imul
sbb
push
sub
or
ror
imul
jno
in
xor
aad
ror
imul
add
lods
sbb
lea
adc
inc
pop
push
sbb
stos
and
push
adc
xchg
dec
add
cwde
lds
xchg
pop
push
pusha
xor
or
ins
sub
imul
add
stc
cdq
or
xchg
dec
sti
push
lock
xor
inc
sub
std
xchg
mov
adc
gs
and
pop
fistp
pop
lea
dec
popa
inc
xchg
pop
sbb
inc
dec
popa
add
push
jo
es
cli
jo
gs
dec
aaa
inc
(bad)
jne
dec
jle
jae
loope
mov
dec
mov
dec
and
mov
mov
lods
or
inc
pop
dec
or
add
pop
int3
(bad)
(bad)
loopne
pushf
mov
adc
xchg
scas
shl
inc
aaa
pusha
add
xor
cdq
ins
shr
ins
or
stos
jb
dec
or
or
adc
adc
and
mov
xchg
or
xchg
adc
dec
sub
or
ins
test
sbb
or
inc
push
push
push
xchg
dec
xchg
mov
cmp
add
dec
aad
ficomp
mov
sub
and
inc
retf
loop
push
or
imul
mov
mov
mov
test
sub
fild
mov
add
and
fs
sbb
or
mov
sub
test
out
mov
cli
push
push
repz
stos
push
popaw
push
arpl
dec
sbb
mov
add
add
adc
adc
mov
mov
mov
push
ret
or
or
push
push
(bad)
jb
mov
rol
add
ds
xchg
jbe
add
and
popa
add
dec
gs
push
xchg
add
push
inc
movs
sbb
cmps
rcr
mov
aaa
pop
sub
outs
add
addr16
lods
(bad)
not
sub
adc
xchg
push
fistp
rcl
cs
adc
lock
dec
orps
mov
xchg
fisubr
pop
xchg
or
push
pop
add
mov
add
out
xor
out
mov
push
rcl
icebp
adc
jo
pop
add
mov
sub
pop
adc
xor
pop
add
pop
mov
add
push
ss
xchg
sub
cmps
icebp
push
pop
ret
and
sbb
dec
add
sub
mov
mov
pop
sub
pushf
cmp
mov
mov
push
inc
xchg
dec
inc
sub
js
add
outs
ret
and
in
mov
outs
fxch
or
push
pop
push
inc
inc
xor
and
jo
pop
test
add
push
inc
push
mov
pop
daa
ja
sbb
dec
add
je
push
arpl
inc
mov
sbb
invd
sbb
inc
xchg
add
rol
add
add
inc
jno
shl
inc
inc
add
ins
add
and
xor
rol
add
push
aas
or
pusha
add
adc
in
rep
loopne
pop
add
sbb
cmovbe
sbb
push
push
mov
push
lea
pop
push
inc
mov
and
adc
or
js
jmp
fadd
in
inc
in
adc
xor
adc
and
mov
mov
outs
mov
fld
jbe
inc
outs
add
pop
movs
sub
sar
cs
xchg
adc
mov
pop
clc
adc
inc
pop
xchg
add
or
pop
nop
adc
ja
push
in
scas
mov
pop
add
pop
shr
out
push
push
or
mov
or
loope
jo
jbe
push
addr16
push
or
je
dec
add
daa
(bad)
xlat
outs
cmp
nop
inc
xlat
pop
dec
aad
push
pop
xlat
mov
shl
xlat
or
add
xlat
movs
adc
dec
pop
add
jg
aaa
adc
fistp
neg
jno
xchg
fiadd
xor
fbstp
movs
sbb
pop
shr
aaa
outs
adc
pop
or
sub
loopne
dec
and
sub
sub
test
loop
sbb
pop
xor
dec
cmp
push
inc
push
adc
or
add
int
or
inc
xchg
sbb
hlt
and
mov
xor
mov
mov
mov
mov
nop
jno
mov
cmp
fstp
enter
mov
shl
les
outs
(bad)
(bad)
jecxz
shl
outs
imul
xlat
mov
mov
and
add
(bad)
imul
clc
pop
bound
pop
(bad)
adc
nop
jmp
shl
sub
scas
sub
xor
outs
bound
out
adc
jne
js
arpl
arpl
sbb
mov
fbld
inc
add
jg
loopne
adc
sbb
out
mov
push
inc
push
adc
aas
adc
cs
mov
adc
into
in
inc
cmovle
add
popa
aaa
mov
lea
mov
lea
push
jecxz
push
inc
jg
int
pop
sbb
sbb
mov
cmp
sbb
mov
mov
mov
push
iret
aaa
(bad)
adc
call
lock
push
mov
fist
sbb
or
push
and
retf
(bad)
loope
test
mov
sub
aad
mov
dec
mov
retf
aad
sbb
mov
xchg
sub
inc
nop
(bad)
std
clc
cs
scas
sub
mov
aas
push
pop
mov
lahf
push
and
cs
pop
fst
mov
or
sub
shl
or
into
inc
push
adc
pusha
cmps
mov
pusha
movs
das
xor
pusha
test
ins
ret
ins
adc
push
mov
ret
jbe
je
rol
push
pop
jns
mov
mov
adc
mov
mov
mov
pop
add
inc
push
xchg
es
das
fisttp
ss
sub
adc
add
jno
adc
inc
clc
jb
(bad)
jmp
or
lods
push
sub
sbb
imul
jmp
inc
sbb
pusha
push
push
mov
push
xchg
adc
cmp
ror
(bad)
mov
jno
imul
test
test
cmp
push
add
sub
pop
ja
inc
push
xor
or
mov
push
add
push
add
out
out
push
push
mov
les
push
inc
adc
add
cmp
sub
or
jns
add
pop
mov
ret
pop
ins
sbb
mov
add
ffreep
fwait
mov
dec
push
ins
sub
push
and
data16
ret
push
xor
add
cmp
mov
mov
mov
push
push
fwait
sub
add
mov
or
or
imul
jo
lock
xor
iret
and
and
aaa
jp
cmovge
outs
ja
jnp
fwait
cmps
sub
sub
pop
sbb
or
cmc
scas
movs
(bad)
dec
outs
dec
dec
cs
push
test
xor
(bad)
sbb
scas
xlat
add
adc
mov
sbb
adc
inc
fist
jle
mov
mov
das
(bad)
pushf
mov
psubd
inc
sahf
pushf
rcr
push
nop
rcr
jo
ret
push
and
sbb
push
mov
movups
add
mov
cs
in
mov
cmp
inc
pop
aaa
and
adc
iret
loop
aad
loope
jne
test
sbb
jecxz
bound
ficom
adc
push
pop
mov
add
or
jae
mov
pop
sar
fisub
add
dec
fs
mov
loopne
jo
mov
add
xor
pop
adc
nop
mov
add
push
add
or
cs
outs
movs
repz
js
es
popf
mov
and
pop
push
js
ja
fs
push
cmp
lods
add
arpl
push
inc
cmp
and
mov
xchg
sub
cwde
jge
xchg
or
xchg
mov
xchg
test
cmp
ret
adc
dec
pop
pop
or
pop
mov
inc
xchg
add
add
dec
xor
xor
cmp
inc
cmp
sub
ret
or
mov
mov
push
dec
std
mov
push
pop
xchg
add
adc
add
pop
pop
push
xor
inc
sbb
cmp
dec
dec
xor
pop
inc
inc
inc
test
test
or
dec
lods
dec
sbb
aas
cmps
loopne
push
pop
push
aas
add
jae
loope
jge
js
push
inc
jae
mov
inc
or
aaa
adc
cmps
inc
dec
adc
xor
hlt
or
push
xor
clc
xor
pusha
pop
adc
xchg
lea
mov
adc
jno
scas
js
push
in
mov
das
or
outs
add
bound
push
inc
popa
js
(bad)
sbb
xchg
inc
arpl
(bad)
sbb
repz
stc
adc
test
pop
cmp
dec
pop
les
daa
not
xchg
dec
sub
mov
xor
jae
or
sbb
cmps
pop
cmc
mov
xchg
ret
addr16
pop
mov
inc
dec
pop
add
add
pop
add
pop
enter
pop
daa
frstor
pop
mov
imul
xor
test
cmps
(bad)
lock
adc
sbb
inc
daa
in
sub
mov
lahf
mov
pushf
loopne
cli
dec
sub
pop
xor
jmp
sbb
and
inc
sub
sub
lods
retf
ret
sub
clc
jp
push
(bad)
ds
fisttp
mov
js
imul
cmps
lods
sar
(bad)
fld
cli
dec
push
push
mul
pop
jl
add
pop
add
pop
and
push
adc
or
cmp
(bad)
aas
dec
and
aaa
jns
cmp
xor
or
pop
xchg
sbb
dec
bound
add
add
pop
push
aas
rol
js
in
sti
add
push
xchg
jo
sar
push
shl
push
dec
dec
ins
mov
ja
push
sbb
and
add
(bad)
mov
jmp
adc
cmps
je
sbb
lds
cvtpi2ps
mov
pop
test
enter
or
jo
shr
adc
xor
inc
mov
add
rsm
lds
add
inc
push
push
push
or
pop
dec
das
add
lds
push
push
(bad)
jo
out
jl
jns
xchg
test
add
loope
addr16
(bad)
js
lods
sub
sbb
or
xchg
sbb
jo
xor
rcr
dec
inc
sub
pop
das
add
xchg
das
popa
sbb
aas
mov
add
sti
cmps
aam
push
pop
es
push
call
adc
popa
hlt
push
mov
adc
mov
push
add
xor
aam
or
inc
or
mov
test
add
aaa
xor
and
fldcw
loope
push
and
pusha
je
jns
or
add
mov
jl
pop
shl
in
es
(bad)
add
test
add
pop
or
fldcw
test
js
jmp
inc
je
enter
pop
adc
mov
clc
fistp
fbld
push
and
and
jl
out
fsubr
out
mov
adc
push
sbb
mov
sbb
test
pop
rol
mov
pop
and
pop
inc
fist
out
test
and
pop
and
pop
or
(bad)
loop
pop
adc
nop
pop
and
pushf
fld
(bad)
mov
pop
popa
xchg
pusha
ror
nop
push
mov
adc
addr16
mov
push
add
enter
push
retf
pop
add
js
push
ins
pop
xchg
dec
pop
pop
inc
xor
ins
je
xchg
push
xchg
and
stos
sti
test
push
push
push
xor
mov
cmps
adc
xor
add
add
lods
ja
sbb
rol
dec
dec
stos
cmp
call
xchg
cmp
inc
sub
add
outs
ins
add
sbb
mov
or
pop
pop
ja
add
push
xor
adc
daa
xchg
enter
fst
mov
xor
stos
add
loopne
xchg
call
push
dec
shl
or
or
add
xchg
fild
fsubr
jns
and
pusha
add
push
push
inc
mov
inc
sar
inc
mov
clc
pop
add
ret
mov
sub
inc
push
or
js
adc
mul
mov
jne
adc
push
outs
add
push
inc
stos
imul
push
imul
inc
test
sub
test
pop
je
icebp
add
xor
mov
push
iret
dec
iret
adc
mul
jmp
mov
repnz
or
jle
and
bound
add
xor
sub
ja
mov
jne
push
fcomp
and
retf
add
shr
adc
jae
sti
push
push
dec
mov
xor
test
jo
and
pop
stos
jmp
inc
push
mov
push
inc
xchg
pusha
jns
xchg
arpl
mov
add
out
test
(bad)
in
cmps
lock
les
std
push
lock
mov
xor
cmp
fnstenv
dec
push
adc
scas
push
xchg
(bad)
neg
or
ins
call
(bad)
cld
push
adc
out
mov
clc
or
adc
xor
ret
xlat
imul
mov
hlt
xlat
adc
addr16
xlat
mov
sbb
xlat
fs
popa
call
cvtps2pd
icebp
in
cmps
loopne
mov
jb
je
scas
xchg
shufps
cmp
cmp
cs
lahf
call
and
sahf
mov
mov
out
invd
xchg
push
cmp
cmp
xchg
shr
jb
xor
or
stc
xchg
adc
xchg
jno
xchg
inc
or
sub
test
mov
xchg
mov
inc
and
xchg
mov
mov
pop
or
sub
jae
push
or
daa
sbb
fistp
xchg
out
fadd
dec
mov
rcl
adc
out
gs
or
adc
dec
xchg
pop
mov
add
mov
sub
and
push
adc
mov
and
adc
and
xchg
sbb
sub
xchg
test
adc
xchg
lea
or
xchg
jae
xchg
loopne
out
or
test
jl
ret
or
adc
pop
push
xor
xchg
push
sbb
mov
fsubr
adc
xor
xor
pop
pusha
test
add
test
dec
fnstcw
in
or
xchg
xchg
xor
ret
pop
push
adc
cmp
add
and
add
xor
mov
and
or
xchg
nop
or
push
mov
add
call
add
int
and
scas
mov
push
sbb
iret
jo
push
xor
sbb
cld
loope
dec
ja
jae
imul
mov
paddd
inc
loopne
add
xlat
jecxz
dec
push
pusha
pop
pusha
aam
add
jecxz
das
in
sub
pop
add
test
mov
pusha
cdq
adc
scas
or
test
pop
jg
mov
arpl
jge
mov
or
inc
mov
fld
cs
outs
ja
dec
push
dec
inc
fstp
xchg
fnstsw
inc
push
inc
pop
cs
push
into
cvttps2pi
or
xchg
call
jge
add
inc
or
jne
pop
(bad)
je
push
inc
fbstp
pop
pop
outs
or
and
xlat
xor
mov
pop
cmp
imul
into
dec
(bad)
ficom
ja
daa
xchg
xchg
sub
add
std
sub
enter
jne
or
add
cmp
add
jo
scas
mov
test
in
push
add
push
sbb
mov
in
mov
adc
xor
sbb
push
daa
xchg
push
mov
jo
inc
cmp
stos
sbb
out
or
sub
mov
pop
sub
or
xchg
jg
test
push
jo
mov
dec
dec
xchg
dec
inc
sub
jg
or
out
clc
jp
add
cmp
(bad)
aas
mov
ins
pop
pop
fstp
or
or
push
movs
add
dec
call
aad
fs
daa
mov
js
pop
dec
pop
add
mov
adc
cmc
or
and
sbb
jae
(bad)
dec
inc
jno
pop
add
add
push
stc
pusha
or
and
and
ret
add
lds
je
std
call
or
push
out
pusha
xlat
das
jno
xor
xor
push
pop
div
pushf
jmp
add
add
in
push
sar
mov
mov
and
push
add
mov
fldenv
and
test
mov
jae
xchg
xor
mov
push
cmps
adc
add
push
sti
mov
add
inc
and
jnp
add
sub
or
aas
jo
sub
mov
jae
loopne
jmp
ins
jbe
add
pop
mov
mov
add
out
loopne
out
fild
lock
aam
sbb
push
push
or
xchg
xchg
shr
dec
aad
and
out
mov
and
mov
mov
pop
call
repz
push
outs
js
mov
movs
push
popa
daa
xchg
dec
push
jg
push
add
lock
icebp
nop
icebp
mov
mov
mov
dec
add
dec
mov
xlat
pop
xor
jno
cmp
jmp
or
dec
inc
sub
sbb
cmps
das
dec
pop
add
xchg
fwait
dec
popf
sbb
neg
rep
scas
push
fs
das
stos
push
adc
mov
addr16
hlt
lock
add
aam
shl
or
call
adc
mov
shr
ret
push
push
cmp
add
sub
aaa
je
pop
shr
or
addr16
lahf
xchg
pusha
add
xchg
add
push
movs
mov
inc
arpl
xchg
fcomi
out
aam
push
xor
out
pop
jp
loope
scas
popf
nop
jnp
pusha
mov
cmps
push
sub
not
mov
push
push
imul
loop
add
push
sub
pop
push
xor
push
inc
xchg
dec
or
test
cwde
xchg
mov
gs
xor
mov
dec
mov
sbb
enter
addr16
push
sbb
adc
mov
adc
dec
sbb
jg
dec
adc
mov
mov
xchg
xor
pop
aam
push
loopne
das
loop
xlat
int
pop
adc
cmps
ins
and
cmp
jo
lods
mov
(bad)
xor
and
or
movs
pop
stos
or
int
add
stos
add
ins
bound
rcr
jle
in
inc
xor
add
sbb
push
adc
test
movs
adc
push
cmp
mov
cmp
inc
popf
cmps
and
xchg
je
cmps
out
dec
xchg
sub
pop
xor
cmps
dec
inc
sub
adc
pop
add
pop
mov
add
jbe
sbb
es
jecxz
adc
(bad)
lock
je
pshufw
ins
(bad)
jo
retf
add
or
sbb
outs
cmps
jnp
pusha
or
mov
imul
or
sub
mov
ror
dec
xlat
rol
sar
sbb
imul
bound
mov
inc
cmc
sub
or
out
sub
pop
add
fstp
loop
cmp
lds
jecxz
xchg
add
(bad)
dec
jmp
lock
inc
push
pop
fadd
clc
out
push
out
push
or
popa
xchg
sub
xlat
test
call
mov
enter
xor
adc
sbb
out
adc
mov
dec
shl
push
xchg
mul
jb
movs
shl
or
add
cmp
retf
fiadd
add
test
shr
add
add
push
fdivr
loopne
(bad)
addr16
adc
or
addr16
push
ja
call
dec
xlat
push
sub
xchg
clc
cmp
push
add
gs
xlat
nop
call
test
pop
pop
gs
sub
inc
rol
stos
js
iret
cmc
dec
test
jp
add
pop
pop
outs
fcomp
aam
fsubr
out
dec
add
xchg
dec
xchg
push
push
adc
hlt
shl
mov
iret
push
test
aam
in
push
push
fwait
push
cmpxchg
sub
inc
or
inc
cwde
in
fcos
xor
add
outs
fcomp
imul
add
dec
aas
push
inc
inc
jb
popa
xor
mov
sub
sub
or
xor
sub
sub
rcl
cs
adc
into
push
(bad)
cmc
xor
push
xor
mov
sub
adc
sbb
add
inc
sahf
fmul
sti
inc
mov
jno
cmc
push
scas
xor
(bad)
jb
xor
iret
stc
cmp
sbb
mov
js
cmps
das
jo
pop
ins
adc
dec
fimul
nop
mov
adc
cmp
xchg
dec
cmp
aad
add
int3
or
sub
push
mov
dec
xor
jno
dec
add
das
aam
inc
xchg
jecxz
inc
jo
add
cmp
push
fmul
or
push
lahf
jae
je
xor
ss
fwait
add
add
rol
mov
fs
loope
fisub
mov
xor
push
mov
sbb
xor
add
and
out
or
retf
mov
fild
add
int
repz
xchg
ret
add
and
and
add
add
fidiv
les
pop
add
(bad)
arpl
push
mov
and
and
add
pop
and
sti
lock
or
inc
mov
xchg
test
cmp
pusha
test
call
outs
jae
pop
adc
add
test
jb
rol
out
ins
in
xor
or
cmp
mov
rcl
push
lds
mov
enter
mov
pop
xchg
add
xor
push
adc
dec
fild
ds
inc
fs
or
xchg
or
inc
fs
adc
adc
test
sbb
ror
push
inc
sub
cmps
add
jae
mov
push
push
add
inc
and
cwde
inc
or
or
jae
sub
pop
dec
or
dec
add
adc
add
push
xor
fstp
cmps
das
lds
add
ins
les
cmp
mov
ret
adc
mov
add
adc
inc
dec
ja
jae
imul
ret
stos
push
setg
imul
cwde
add
out
nop
bound
cmp
sub
pop
cdq
push
sbb
mov
xor
outs
mov
pop
jg
cmps
push
push
dec
inc
arpl
loope
dec
jae
out
aaa
dec
or
sahf
ins
fs
outs
nop
dec
outs
outs
ds
add
movhps
mov
mov
fstp
sub
inc
adc
inc
mov
and
adc
movs
pop
(bad)
dec
arpl
(bad)
or
sbb
mov
(bad)
(bad)
pusha
add
pop
in
repnz
loop
and
pop
push
and
loopne
jns
add
push
cmp
and
dec
ins
lea
scas
pop
std
push
lds
jns
sbb
pop
sbb
dec
jno
add
jo
daa
sub
ss
xchg
push
daa
sar
mov
push
mov
xchg
inc
pop
cmp
gs
pop
shl
jno
je
imul
ins
stos
push
cmp
mov
(bad)
pop
xor
jns
dec
add
mov
outs
inc
sub
lds
or
mov
mov
div
fimul
cs
push
inc
aaa
in
out
or
and
adc
add
push
jo
fiadd
cli
dec
popa
jae
add
jmp
pop
fs
(bad)
daa
mov
js
aaa
popa
aaa
add
shr
(bad)
out
pop
or
popa
shr
shl
shl
aas
push
add
push
test
ret
xor
inc
cwde
shl
push
add
or
adc
cld
jge
add
adc
and
and
shl
push
jg
mov
and
fadd
xor
fcmovnu
mov
push
scas
pop
xor
inc
mov
xchg
pop
and
mov
adc
mov
push
push
popf
adc
mov
push
mov
aam
add
in
scas
mov
call
dec
dec
cmp
mov
cmp
les
jmp
xor
movs
or
stos
mov
loope
imul
shl
xchg
dec
cdq
outs
add
mov
popa
sbb
test
(bad)
and
pop
pusha
cdq
mov
push
sub
loope
das
jae
xchg
cmp
out
xor
mov
cld
pop
fld
add
rcr
mov
dec
aaa
push
imul
sbb
fwait
push
fadd
rcl
adc
mov
inc
fild
adc
fiadd
adc
pusha
mov
loopne
dec
push
shl
fcmovnb
cmps
push
or
jecxz
or
mov
sub
nop
sub
call
push
sbb
and
movs
mov
cmp
lods
das
mov
pop
addr16
pusha
les
xchg
push
mov
hlt
loop
push
push
test
or
mov
(bad)
aad
repz
sbb
sub
push
add
sbb
in
outs
add
pushf
push
or
fwait
pop
hlt
das
adc
(bad)
jne
xor
loopne
xchg
push
test
mov
movs
mov
icebp
mov
stos
arpl
cmp
stos
les
xchg
je
into
add
iret
not
into
inc
iret
int3
add
pop
dec
cmp
aas
push
mov
mov
outs
arpl
neg
mov
popf
pop
test
das
mov
adc
retf
push
mov
sub
test
jecxz
push
add
cmp
add
scas
sbb
loope
mov
or
je
mov
shr
and
mov
mov
(bad)
popf
push
or
xchg
xchg
mov
add
pop
jae
cmp
rcr
lahf
mov
inc
sbb
pop
cmp
shl
jnp
(bad)
ror
inc
xchg
test
test
or
add
mov
mov
jno
call
dec
add
ret
mov
ds
push
adc
lods
pusha
push
push
mov
push
xchg
adc
pop
repz
ror
xchg
add
fstp
enter
ja
mov
ret
int3
mov
in
xchg
out
rcr
mov
push
les
das
nop
cmp
xchg
pop
xchg
in
dec
push
add
pop
call
push
xor
mov
pusha
xchg
je
xor
push
test
mov
fdiv
sbb
xchg
je
jns
dec
add
pop
pop
imul
mov
ja
dec
call
mov
dec
nop
push
pop
add
push
call
repnz
push
mov
das
dec
movs
dec
shl
faddp
mov
fld
(bad)
fistp
je
inc
push
and
xor
imul
push
stos
add
cmps
sub
lea
(bad)
dec
inc
sahf
fmul
dec
test
fucomi
push
jno
stc
push
mov
jb
xor
sar
cmp
sbb
test
lds
mov
(bad)
xor
pop
pusha
jne
mov
adc
mov
push
adc
mov
cmps
rcr
in
add
arpl
mov
xor
xor
inc
or
xchg
xchg
or
sbb
or
add
popf
cmp
add
push
loop
jae
mov
daa
sub
push
ret
push
out
les
xchg
inc
inc
jo
call
pop
adc
imul
ins
repz
fsub
cmp
dec
pop
clc
add
inc
sbb
inc
pop
pop
push
adc
test
push
ins
rol
xchg
test
cmp
and
pop
lea
out
sbb
cmp
je
pusha
mov
lea
test
movs
pop
sub
sbb
int3
in
mov
pop
std
sub
pop
fs
xlat
sbb
jge
inc
add
pop
xor
ret
shl
test
daa
movs
or
add
daa
push
pop
jl
push
fmul
pusha
pop
lock
pop
cld
cmp
daa
cmp
adc
push
daa
mov
or
mov
sbb
fs
mov
and
int3
repnz
mov
(bad)
cmp
daa
sbb
adc
mov
sub
sub
das
test
es
stc
shl
sbb
das
inc
adc
push
and
cdq
push
xchg
xor
or
inc
mov
movs
repnz
pop
jae
add
pop
fist
lods
mov
retf
cmp
fadd
dec
popa
adc
xchg
sbb
sub
arpl
pop
ja
adc
popa
out
inc
dec
test
push
adc
inc
jo
dec
imul
scas
dec
lock
jne
in
jnp
cli
mov
mov
(bad)
aam
adc
pop
inc
int3
cmp
dec
fadd
lods
mov
xchg
push
or
sub
sub
lahf
nop
xor
pop
scas
pop
bound
movs
cmp
out
mov
stos
cmps
sbb
inc
inc
add
sbb
push
mov
sbb
mov
mov
inc
jno
das
or
(bad)
xor
push
leave
adc
mov
push
aas
fs
aad
test
xchg
je
sbb
jnp
inc
jno
cwde
scas
dec
sub
loope
pop
xchg
pop
cmp
sbb
xor
mov
inc
sub
sbb
add
add
pop
rol
loopne
sbb
add
ja
adc
in
inc
lock
push
ins
aaa
inc
pop
add
add
clts
push
rol
or
sar
cmps
sti
(bad)
test
inc
mov
cmp
xchg
and
or
add
add
arpl
push
or
ds
(bad)
rol
or
xchg
or
(bad)
ins
mov
je
in
jo
xlat
push
je
movs
das
mov
jne
or
xlat
in
bound
xor
shr
cmp
loopne
or
mov
push
adc
mov
sbb
mov
loopne
ss
ficom
or
rol
js
in
mov
mov
xchg
addr16
push
xor
jo
pop
and
shr
stc
lods
call
leave
mov
or
sub
in
mov
push
jl
movs
das
ret
push
push
xchg
mov
vmovmskps
add
clc
movhps
add
adc
inc
mov
dec
push
(bad)
jp
fbstp
push
push
nop
mov
pop
lods
fimul
pushf
pusha
test
sub
jns
sub
sbb
sub
sub
dec
in
lods
in
rol
sub
cmp
ja
add
mov
(bad)
or
rcl
enter
dec
ja
sbb
pusha
fistp
sub
mov
jne
xor
loopne
add
dec
inc
popf
dec
pop
adc
les
movlhps
xlat
pop
xchg
pop
dec
mov
sub
xor
add
sub
lds
mov
inc
jmp
pop
mov
std
outs
out
loop
dec
fcom
add
jo
adc
mov
in
cmp
pop
pusha
das
jle
scas
jmp
cmp
sbb
mov
jle
push
mov
jne
jne
js
or
rcl
mov
aas
cmp
(bad)
test
stos
adc
dec
adc
inc
xor
sbb
adc
adc
xor
inc
sub
dec
push
and
push
(bad)
jge
ret
mov
adc
(bad)
clc
rcr
mov
pop
add
sbb
add
push
test
add
test
push
loopne
jae
push
add
pop
fadd
adc
call
push
ror
popa
push
sub
pop
bound
sbb
xor
stos
push
adc
call
je
jns
sbb
jae
push
movs
mov
jmp
cmp
xchg
push
ins
sbb
push
jb
pop
jo
xlat
dec
inc
mov
das
push
push
or
pop
popa
sbb
push
fwait
add
push
pop
jmp
adc
movs
fadd
fisttp
inc
stos
inc
pop
or
test
add
or
aaa
rcl
loop
push
mov
je
adc
or
scas
rcl
dec
movups
sub
xchg
gs
and
sti
dec
xor
jmp
pop
mov
clc
in
in
les
sub
dec
rcr
dec
pop
ja
es
xchg
push
xchg
fld
add
adc
pop
lock
ins
push
add
(bad)
call
dec
add
fwait
lahf
cmp
push
sbb
dec
loopne
pop
mov
je
pusha
mov
xchg
jns
sub
inc
rcl
push
(bad)
cmps
aas
or
movs
adc
push
sbb
jno
xchg
dec
ret
push
jo
fsubr
cmp
jbe
cmp
das
xlat
push
inc
jo
je
inc
pop
psubusb
scas
fnstenv
push
loopne
mov
and
test
and
add
push
xor
pop
adc
punpckhwd
dec
push
inc
and
je
sbb
or
loop
push
inc
adc
(bad)
leave
leave
ins
mov
mov
out
adc
pextrw
pop
add
(bad)
mov
pop
xchg
daa
daa
daa
xchg
pop
(bad)
mov
pushf
xchg
dec
mov
mov
xchg
(bad)
sub
cli
aas
adc
add
inc
dec
mov
in
add
loope
pop
adc
cmp
or
adc
test
das
aam
cmp
xchg
or
popa
push
jnp
loop
dec
add
cli
or
adc
and
sub
push
mov
push
bound
and
inc
(bad)
xor
adc
adc
or
test
pusha
mov
or
adc
or
adc
dec
push
adc
xor
and
pop
mov
and
inc
inc
test
mov
adc
out
cmp
rol
imul
fldcw
in
or
loopne
adc
sub
and
adc
adc
ror
or
js
mov
xor
test
bswap
daa
das
or
xor
add
ror
adc
and
mov
aas
adc
xor
cmp
dec
dec
test
pminub
adc
test
fsubr
add
pop
jo
adc
jmp
pavgw
lock
add
add
jbe
hlt
pop
jl
mov
out
xchg
loopne
sub
xor
xchg
sub
repnz
add
or
sbb
push
jb
and
retf
nop
arpl
(bad)
retf
add
aaa
inc
adc
push
add
int3
pop
push
or
jle
repz
adc
push
xlat
sbb
loopne
lock
sbb
and
inc
xchg
push
out
xchg
pop
xchg
push
and
and
jo
adc
iret
retf
enter
add
cmc
push
adc
jo
mov
aas
pop
xor
call
ror
loopne
jbe
dec
inc
sub
pop
scas
lea
inc
popa
mov
scas
cwde
std
jmp
out
ds
dec
imul
repnz
push
push
add
sub
test
mov
(bad)
dec
int
in
pusha
push
cmp
and
sbb
adc
jle
pusha
popaw
jne
je
mov
loopne
sub
cli
inc
loope
pusha
push
or
add
xor
inc
(bad)
inc
or
fisub
jns
loopne
jo
push
sahf
fild
fadd
push
inc
or
inc
imul
(bad)
mov
je
xchg
push
add
inc
push
movntq
sub
out
mov
aaa
rcl
add
ror
mov
add
cmp
cdq
adc
addr16
add
adc
adc
add
adc
pusha
loopne
int
xchg
jne
push
cmc
or
ins
das
and
cmp
and
pop
cwde
or
int
mov
or
lods
in
or
cmc
cs
mov
fst
imul
add
les
sbb
scas
add
and
pop
cmc
or
xor
(bad)
dec
addr16
stos
push
and
mov
inc
add
push
inc
xor
xchg
enter
arpl
dec
pop
mov
fimul
movs
rcr
shl
das
in
add
add
push
sbb
in
cmp
les
push
add
xchg
mov
add
cmps
inc
ret
fild
sbb
scas
and
in
inc
aaa
add
enter
mov
sbb
or
inc
mov
ins
push
inc
pop
sbb
pop
pop
inc
push
cmp
and
xchg
imul
xlat
push
test
(bad)
imul
pop
neg
push
fs
ret
aad
or
sahf
jbe
(bad)
push
and
mov
or
out
repz
call
js
push
mov
push
fwait
sub
add
mov
xchg
add
xchg
xchg
imul
and
pop
jns
and
dec
mov
fwait
or
or
enter
add
sbb
add
sar
xchg
fstp
neg
push
inc
cs
push
fld
fmul
enter
addr16
fldenv
leave
ins
mov
in
in
xchg
jecxz
fstp
jb
arpl
cmp
mov
pushf
mov
ins
mov
sahf
sub
push
jne
jno
ret
dec
cmc
aas
fisttp
jnp
(bad)
fnstsw
shr
sbb
inc
(bad)
jp
pop
xor
icebp
add
test
call
dec
sub
sub
shr
cmps
(bad)
dec
and
daa
add
sbb
daa
xor
aaa
pop
in
dec
add
mov
push
dec
cmovns
dec
jae
not
add
pop
xor
lods
push
popa
jg
jg
pusha
dec
test
(bad)
inc
and
hlt
repz
mov
push
inc
das
or
push
xor
sub
stc
out
popf
push
mov
das
outs
or
rcl
outs
cdq
ja
test
mov
ja
test
add
add
shl
and
enter
in
out
imul
add
xor
mov
or
and
das
leave
fwait
dec
mov
and
add
popa
arpl
mov
xor
mov
loopne
pop
dec
jae
add
ja
aas
mov
iret
dec
imul
loope
mov
push
jnp
pop
add
sub
add
ficomp
and
lea
stos
and
dec
add
xor
imul
xchg
push
loopne
adc
add
sbb
lea
push
ja
pop
inc
cs
xchg
rol
mov
sbb
mov
dec
or
add
mov
mov
pop
xor
les
out
sbb
or
ja
xor
mov
dec
jg
into
scas
shl
das
out
dec
popa
pop
adc
nop
dec
and
mov
pop
add
pop
es
jae
sbb
cmp
je
or
call
ss
cmp
add
push
loope
popw
push
stos
inc
daa
into
imul
ret
and
or
mov
jns
push
shl
(bad)
push
outs
fild
and
inc
sti
adc
jp
test
inc
repnz
dec
or
mov
and
push
mov
mov
dec
mov
xchg
dec
adc
mov
jmp
dec
or
or
push
jecxz
pop
leave
sub
ficomp
xchg
add
mov
adc
fild
adc
push
or
push
stos
and
outs
lods
or
pop
jns
ficomp
push
mov
mov
mov
addr16
enter
repnz
loope
xor
cmp
add
inc
test
call
xor
stos
cmps
fadd
(bad)
xchg
inc
jnp
jmp
adc
in
dec
out
mov
lahf
inc
ret
js
outs
sub
add
sub
test
sbb
addr16
sub
add
fcom
cs
retf
adc
jae
dec
jae
add
pop
push
lods
outs
shl
sbb
rol
call
stc
nop
cmp
outs
pop
mov
stc
repz
mov
add
cmps
test
je
cmps
push
in
xchg
call
sub
lahf
pop
push
push
mul
fs
push
mov
loope
mov
pop
xor
xor
daa
jo
je
mov
push
imul
push
dec
xchg
shr
pop
inc
shr
dec
inc
js
add
pop
xor
inc
sub
movs
ret
jg
add
sbb
sar
jmp
pop
jae
(bad)
adc
cmps
or
mov
mov
push
add
jmp
in
sub
ins
ffreep
mov
clc
push
mov
or
mov
sub
add
jmp
cs
add
xor
inc
imul
xchg
or
pushf
add
sub
imul
xchg
add
pusha
aaa
rcl
repz
ja
push
shr
push
jg
mov
out
vmread
pop
ret
mov
add
mov
mov
cmp
xlat
jl
add
fst
or
inc
mov
jecxz
or
and
jg
fsub
movs
cwde
add
lds
jnp
mov
into
pusha
or
loopne
das
addr16
out
push
adc
xor
adc
aaa
and
aam
loopne
shl
out
mov
fmul
pop
push
add
sub
mov
and
(bad)
sbb
add
push
adc
aam
div
push
fsub
or
mov
and
pop
shr
clc
ins
pusha
jo
shl
jo
adc
push
or
xchg
jmp
pusha
je
cmp
das
dec
and
or
dec
call
lods
push
sub
das
mov
adc
jl
pop
sbb
(bad)
imul
sbb
push
lods
std
and
or
add
mov
pop
mov
jo
test
mov
popa
add
or
pop
pop
mov
pop
and
fadd
pop
mov
repnz
arpl
out
dec
cmp
jne
push
mov
jno
ror
cmc
push
stos
daa
out
cmp
cmp
sbb
inc
sahf
pushf
mov
add
and
pop
(bad)
fist
repnz
daa
daa
and
fisub
xchg
xchg
xchg
xchg
rep
xchg
mov
leave
enter
hlt
cmp
in
leave
mov
xor
in
js
sbb
jbe
mov
pop
cmps
push
sub
push
stos
or
xor
dec
mov
push
cmps
dec
int
dec
push
dec
or
out
call
add
pusha
adc
push
mov
and
outs
out
sbb
(bad)
(bad)
out
inc
cmp
inc
sti
lea
and
ins
adc
xor
push
imul
cdq
mov
push
fist
out
adc
jae
sub
add
jo
out
xchg
and
push
add
out
mov
das
pop
loopne
adc
add
inc
gs
mov
lods
cmp
or
jmp
sub
add
mov
inc
inc
call
sub
jno
inc
inc
or
inc
pop
and
jae
mov
dec
add
out
xor
add
xchg
add
inc
inc
add
fnstenv
add
ret
xchg
inc
adc
pop
xchg
ret
mov
and
xchg
and
adc
add
adc
in
or
and
inc
xchg
cmp
push
dec
mov
adc
or
push
mov
ficomp
popa
xor
or
loopne
rcl
mov
inc
add
xchg
xchg
dec
xchg
rcl
xor
push
cmp
add
pop
arpl
jmp
pminub
fsubr
xchg
sub
sub
or
xor
cmp
lea
sbb
iret
fnstcw
mov
int
add
retf
xchg
in
or
sub
div
outs
adc
sub
dec
mov
inc
and
jb
push
cmp
add
add
or
cmp
daa
outs
add
fdiv
mov
jbe
sub
add
les
mov
xchg
add
fsubr
ror
leave
add
fisubr
lea
aad
jae
mov
push
nop
inc
xor
pop
mov
adc
or
add
and
mov
ret
xchg
and
and
lahf
add
loope
mov
pop
sub
dec
push
lahf
dec
sbb
xchg
mov
test
xchg
cmp
xor
inc
aaa
fisub
mov
add
scas
imul
lods
adc
pop
push
cmps
add
dec
pop
xor
mov
inc
sub
add
cmp
sub
or
cmc
mov
adc
ja
and
mov
fst
push
repz
lock
cvtpi2ps
ret
stos
mov
or
shl
pusha
rcr
inc
loope
(bad)
or
adc
adc
add
add
cmp
clc
add
loop
sub
adc
ja
add
or
pop
mov
cmp
push
mov
inc
pop
push
pop
das
jp
inc
inc
sub
rcr
ss
mov
ret
or
ss
xor
sbb
mov
push
mov
in
mov
shl
add
xor
add
or
xor
add
ins
std
xor
out
test
call
or
(bad)
aas
retf
adc
(bad)
(bad)
sub
test
sbb
sub
add
ja
lds
fs
(bad)
fstp
inc
add
ins
es
das
lods
push
sbb
in
in
lods
add
ds
add
lods
or
sbb
pop
loopne
mov
adc
mov
adc
pop
xor
fcom
inc
cmps
movs
or
xor
inc
sbb
push
sti
ins
icebp
xchg
sbb
and
add
in
jp
lods
(bad)
fcomi
mov
popa
or
add
cmp
mov
push
push
shr
add
and
add
int3
test
add
mov
inc
hlt
jl
call
adc
repnz
cdq
enter
fmul
or
inc
pop
sub
retf
sub
pop
or
pop
inc
add
ds
dec
outs
cmp
xlat
fsub
loopne
pop
dec
push
ds
add
jle
mov
xchg
xchg
daa
and
pusha
movs
leave
leave
enter
pop
mov
jecxz
or
xor
in
sbb
scas
cmp
jns
neg
inc
gs
cmp
mov
clc
inc
or
cmps
retf
jno
dec
inc
dec
cmps
shl
cmp
das
(bad)
ficom
adc
punpckhdq
mov
sbb
push
adc
dec
cmp
jecxz
mov
or
and
adc
jno
push
xchg
mov
daa
mov
xor
ror
xchg
xchg
inc
adc
adc
and
(bad)
adc
fistp
adc
mov
adc
or
cdq
ja
add
adc
push
cmp
sub
cmc
add
out
add
add
xchg
or
xchg
das
xor
lea
pusha
inc
adc
inc
shl
or
adc
pop
stos
adc
mov
jno
adc
add
xor
inc
add
fdiv
ret
sub
dec
add
fldcw
add
jae
adc
adc
sbb
test
or
xchg
add
add
lods
or
add
mov
inc
adc
adc
dec
adc
inc
fstp
and
adc
sub
and
jae
pusha
inc
adc
sub
adc
adc
adc
adc
mov
adc
xor
add
jg
mov
adc
xchg
movs
and
push
dec
adc
xor
shr
mov
nop
(bad)
(bad)
adc
mov
call
xor
sub
inc
rol
dec
adc
pop
xor
mov
aaa
push
add
or
lods
push
or
mov
fwait
sub
scas
xor
in
xchg
inc
sub
or
cmp
ins
out
frstor
bndldx
repnz
test
inc
cs
ds
inc
sbb
add
cmp
mov
xor
xlat
pop
xor
mov
cmps
in
or
xchg
mov
mov
push
mov
arpl
add
enter
sub
adc
(bad)
sub
in
and
dec
push
jo
addr16
inc
inc
and
jne
ins
mov
aaa
shl
mov
in
cli
push
lock
add
jne
xor
add
or
xlat
pop
imul
ins
inc
or
js
fs
jnp
fiadd
popa
pop
gs
jb
jae
ror
xor
mov
cdq
xor
(bad)
ss
jp
dec
mov
fdivr
jecxz
push
add
or
pop
mov
dec
jbe
sub
push
adc
jp
int3
and
jae
push
xchg
mov
pushf
cdq
shr
adc
add
call
iret
xor
int3
dec
ds
xchg
(bad)
cs
jnp
add
aaa
pop
outs
call
mov
cdq
inc
add
xchg
cdq
cmp
push
pop
adc
sbb
and
pop
and
into
ja
mov
pop
stos
xchg
aas
or
sbb
dec
mov
rol
cmp
jae
sub
and
sub
or
daa
xor
cmp
(bad)
push
dec
ss
das
add
and
adc
cwde
test
mov
outs
xchg
int
sar
sub
push
push
(bad)
jmp
dec
sbb
das
fcmovne
nop
rol
not
push
outs
call
into
inc
add
xchg
cmps
mov
outs
xlat
xor
sub
pop
sbb
cmps
mov
mov
das
inc
xchg
cmp
sbb
or
mov
xor
test
je
test
je
cmp
push
fdivr
les
pop
mov
sbb
sbb
clc
fs
pop
ret
movs
mov
mov
mov
push
inc
adc
pop
or
outs
jg
or
push
pop
dec
ret
mov
push
push
jmp
push
jne
das
mov
call
jmp
test
je
mov
jmp
imul
xlat
pop
and
add
and
mov
dec
cmp
mov
inc
sub
xor
push
outs
pop
(bad)
push
push
mov
add
ret
dec
pop
mov
sbb
push
bound
push
push
(bad)
std
mov
mov
mov
jno
push
or
(bad)
movzx
ja
frstor
push
pop
jl
pop
pop
pop
inc
adc
pop
xor
push
outs
aaa
pop
push
sbb
lock
call
sti
pop
ret
nop
out
int3
xor
mov
add
mov
push
mov
pop
xor
mov
mov
adc
cs
clc
lock
cld
pop
test
adc
push
call
inc
mov
pop
shr
adc
in
test
or
cs
mov
xchg
inc
fcom
sbb
loopne
push
mov
loopne
xchg
fld
sub
rcr
retf
push
inc
push
jb
inc
ins
into
pop
sbb
and
(bad)
sbb
jne
mov
pop
call
add
sbb
jle
or
inc
sbb
push
jo
add
add
inc
sbb
retf
add
in
push
add
test
or
or
push
mov
jb
mov
pop
sbb
or
push
mov
jne
pop
in
mov
js
lea
xor
mov
es
mov
cmp
mov
pop
test
shl
push
in
lea
sahf
cdq
jmp
lock
movs
add
add
xchg
test
mov
sub
je
enter
test
or
in
aam
push
jmp
or
jns
jbe
mov
in
inc
cmp
jns
xor
ins
cmp
add
sbb
addr16
popf
dec
ins
sbb
sbb
scas
dec
dec
add
cld
pop
aas
push
idiv
add
movs
shr
icebp
or
xchg
mov
pushf
cld
add
and
call
paddsb
or
push
sbb
cli
push
jb
or
adc
setne
outs
test
ds
adc
inc
push
or
ret
ss
push
pop
mov
es
or
popf
test
loopne
rcr
adc
or
adc
mov
or
sbb
ds
mov
cmp
lock
(bad)
add
and
and
cmp
popa
add
cmps
jmp
jl
(bad)
and
std
(bad)
inc
dec
enter
int3
add
adc
sub
adc
or
(bad)
jge
jo
sbb
bnd
out
or
pop
sub
xchg
or
out
push
cmp
cld
std
dec
add
inc
and
push
push
inc
shl
enter
or
add
mov
jb
inc
dec
or
cli
sub
lock
lock
mov
fild
push
or
mov
adc
dec
fs
pop
adc
pusha
lods
add
jg
data16
push
ror
xchg
adc
adc
loopne
shl
clc
adc
nop
push
cmp
cmp
inc
or
push
jl
or
scas
hlt
mov
push
hlt
mov
mov
push
mov
push
or
inc
mov
aad
hlt
jns
dec
ret
mov
addr16
or
adc
pop
adc
pop
or
shr
or
push
adc
mov
les
or
(bad)
rcr
mov
mov
sti
loopne
push
or
pop
jne
sbb
push
mov
sbb
mov
or
add
repz
adc
cld
dec
loop
sbb
mov
jmp
sbb
jmp
inc
adc
or
xchg
push
dec
adc
add
sub
add
paddq
or
add
adc
push
mov
pop
sbb
push
pop
xchg
ds
xchg
mov
bnd
sub
or
push
sbb
mov
scas
sbb
inc
bound
push
test
sbb
push
and
sbb
dec
rol
(bad)
loope
jge
push
or
and
sub
or
movs
mov
arpl
adc
push
cmps
cmp
cmp
jmp
nop
mov
call
push
wrmsr
mov
lds
xor
movs
sbb
xor
(bad)
enter
mov
inc
cmp
test
aaa
inc
add
push
add
clc
call
retf
xor
mov
clc
or
in
cs
or
add
call
call
inc
xor
and
mov
pop
into
call
mov
cld
(bad)
pop
mov
adc
jl
in
push
push
pcmpgtb
les
je
mov
cmp
(bad)
fdiv
fldl2e
fdiv
fidiv
sti
mov
aas
clc
inc
nop
loopne
add
call
xlat
movs
pop
lods
mov
adc
pop
test
ds
and
mov
push
adc
inc
jp
(bad)
mov
cmps
cs
(bad)
xchg
adc
mov
pusha
dec
call
sub
call
dec
jmp
push
mov
add
mov
lock
(bad)
or
cmp
call
test
push
or
in
call
(bad)
das
push
jns
add
dec
add
jl
int3
mov
mov
jmp
pop
push
sub
or
loopne
inc
dec
out
outs
xchg
push
jecxz
aam
stc
pop
pop
test
popa
mov
cmp
sbb
fcom
inc
rol
mov
adc
(bad)
loop
push
sub
sub
scas
inc
adc
std
adc
jns
int
in
inc
push
sbb
int3
add
push
push
sub
add
mov
nop
fdivr
test
mov
push
jmp
(bad)
adc
cmp
aad
dec
cld
pop
(bad)
aad
jo
ret
add
mov
popf
push
daa
or
dec
adc
adc
loopne
scas
add
jecxz
mov
cmp
jne
push
sbb
and
adc
pop
cdq
jo
push
jmp
div
je
inc
pop
fdivrp
test
jne
mov
jmp
and
mov
add
inc
sbb
rol
in
jp
addr16
ss
fwait
add
mov
ret
add
sub
jae
sub
lock
adc
fnstsw
sbb
inc
xchg
fisub
call
jmp
aaa
hlt
jb
in
jne
jmp
pop
pop
adc
or
xchg
push
or
jl
sbb
add
inc
test
cmp
sbb
jle
and
and
xchg
sbb
or
cmc
rcr
out
and
pop
push
or
xor
dec
dec
xchg
cmp
and
addr16
xor
mov
and
pop
mov
push
jmp
mov
bound
in
sub
call
xor
cmp
pop
add
enter
or
scas
inc
mov
add
sub
push
push
in
push
adc
adc
or
ins
aad
jl
push
and
mov
or
adc
sub
or
aam
das
or
ds
fsubr
sar
adc
gs
mov
pop
mov
adc
ja
enter
ja
sti
(bad)
jmp
and
lods
enter
jae
mov
or
inc
add
cmp
jne
mov
int3
mov
(bad)
inc
rcl
(bad)
aam
test
and
adc
xchg
pusha
fiadd
ror
test
pop
adc
add
cmp
push
fdiv
add
bound
push
mov
neg
mov
xchg
movs
sbb
push
in
leave
in
loopne
push
jmp
ror
add
inc
and
mov
(bad)
hlt
stos
xor
int
lds
add
outs
or
jb
test
jmp
dec
cwde
loopne
add
stos
fsubr
push
and
dec
mov
mov
out
mov
cmps
aam
mov
jb
pop
out
push
popf
pop
cmp
hlt
adc
movs
sub
dec
mov
lods
cmc
push
and
daa
or
add
fistp
pop
ret
jmp
dec
shr
inc
mov
sub
or
sbb
adc
sbb
mov
push
pusha
pop
pop
and
add
pop
(bad)
cmp
fild
sar
hlt
dec
clc
clc
sbb
jmp
push
sahf
out
sahf
popf
mov
jns
out
rol
rcr
out
sahf
out
in
icebp
std
jns
dec
lahf
test
adc
sbb
daa
sub
sahf
cmp
inc
mov
(bad)
mov
add
or
repz
add
mov
in
dec
sub
and
push
and
mov
or
or
ja
inc
xchg
mov
xchg
and
mov
add
cld
pop
dec
add
jne
mov
popa
mov
xor
call
inc
mov
adc
sti
jo
inc
adc
push
sub
push
pusha
and
or
sbb
cmp
repz
xchg
cmps
stc
cmp
mov
stc
sbb
sbb
popf
repz
repz
mov
fdivr
out
fsubp
and
pop
push
imul
das
mov
gs
jns
out
rcr
in
xor
repz
repnz
push
jne
mov
sahf
cmps
stc
cmp
sbb
bound
out
jbe
mov
sar
test
or
push
cmp
repz
call
int3
pushw
inc
dec
push
aam
push
fwait
dec
mov
add
pop
mov
adc
cmp
push
pop
mov
sbb
add
cmps
push
sub
add
int
outs
mov
xchg
add
inc
adc
inc
ja
push
ret
mov
loopne
rcl
pop
xor
adc
adc
inc
adc
mov
add
cmc
pop
sbb
sub
les
mov
adc
hlt
or
sbb
or
mov
outs
and
or
add
add
dec
push
pop
or
shld
inc
(bad)
or
and
inc
in
mov
sbb
push
pusha
stos
(bad)
or
or
or
mov
inc
leave
inc
xor
inc
or
inc
mov
sbb
mov
inc
inc
adc
push
aam
or
test
add
sub
dec
mov
inc
daa
mov
add
sbb
and
pop
outs
push
push
push
and
pop
pop
ins
adc
test
ins
adc
xor
daa
jle
popa
adc
add
test
push
add
mov
add
sub
add
call
dec
clc
push
jg
arpl
jecxz
and
jo
pop
jecxz
push
nop
les
dec
rcl
test
mov
mov
push
in
mov
add
bound
xor
sbb
pop
mov
idiv
xchg
jmp
sub
inc
mov
sbb
cmp
sbb
imul
add
shr
mov
test
je
pop
mov
out
ins
push
hlt
lea
push
mov
add
js
mov
mov
push
jmp
dec
pop
push
push
add
outs
add
sti
push
outs
add
jae
mov
jno
mov
xchg
sbb
sbb
aas
test
fwait
data16
add
inc
cs
add
iret
jnp
or
retf
ins
cmp
dec
pop
imul
test
stos
iret
mov
mov
inc
sbb
into
and
adc
jge
sahf
sub
jno
add
sbb
jmp
sbb
dec
movs
mov
push
test
jmp
sbb
dec
mov
fnstsw
mov
mov
das
sbb
pop
lock
xor
outs
sub
inc
mov
ret
and
ret
sub
jae
push
push
ds
push
push
push
pop
(bad)
adc
retf
xchg
inc
mov
add
add
mov
sti
jge
xor
push
jns
xchg
mov
lock
loope
jmp
lock
lock
sti
pusha
lock
xor
mov
xor
xor
xor
or
(bad)
mov
cmp
sub
cld
and
retf
cmp
cmp
pushf
pop
xchg
aaa
mov
cmp
(bad)
out
or
cs
push
sbb
cmp
out
sahf
dec
pop
imul
xchg
mov
xchg
mov
test
or
and
cmp
cmp
and
test
xchg
cmp
jns
xchg
in
enter
and
and
adc
and
sbb
mov
jae
(bad)
and
dec
outs
int3
and
and
(bad)
rcl
push
pop
in
cmp
dec
data16
sbb
mov
movs
mov
xchg
sbb
sbb
repz
nop
mov
jne
push
mov
sub
sbb
mov
push
push
adc
sbb
and
jnp
jnp
jl
out
or
and
inc
cmp
jb
cmps
mov
add
sti
jp
popf
add
out
mov
dec
mov
push
lods
mov
iret
(bad)
in
mov
push
sbb
pop
add
cmp
and
and
and
loope
loop
xlat
mov
loop
mov
pop
mov
fnstsw
pop
cmp
shr
pop
retf
push
sbb
out
test
inc
mov
ds
push
adc
dec
ret
std
push
jmp
push
push
fadd
sub
or
ds
jbe
or
cs
cmp
jnp
int
loop
repz
add
adc
iret
repz
dec
pop
imul
and
xchg
daa
scas
and
ret
and
xor
jo
shl
jo
mov
ror
push
pop
(bad)
fcmovnbe
mov
femms
pop
and
leave
shl
outs
inc
iret
mov
iret
push
push
sbb
loopne
jo
sub
cmp
ret
loopne
loopne
xlat
ret
xlat
ret
mov
ret
xlat
add
add
add
push
push
and
fwait
mov
sar
call
and
adc
fst
or
xor
movs
jb
je
dec
aaa
dec
jo
mov
or
lods
pop
sub
xor
ror
jecxz
pop
fsub
sbb
add
adc
sbb
sbb
push
push
cmps
ror
js
xchg
cmp
cmp
popa
lods
scas
mov
repz
inc
inc
push
dec
pop
into
repz
push
xchg
stos
cmp
(bad)
stos
push
(bad)
cmp
sbb
retf
(bad)
stos
inc
cmp
mov
sbb
pop
sbb
or
pop
jl
(bad)
(bad)
fsubr
sbb
sub
dec
push
movs
mov
inc
mov
in
popa
add
add
xchg
xsha256
cmps
push
ds
push
xor
lods
pop
mov
xor
push
aas
dec
cmps
push
mov
jns
out
enter
add
adc
out
push
pop
sub
stos
inc
pop
inc
das
pop
pop
ret
ret
mov
mov
xchg
xchg
mov
sbb
and
retf
cmp
xor
pop
sbb
mov
add
or
inc
adc
ficomp
push
rcr
push
out
cld
out
fidivr
sbb
es
add
adc
rol
icebp
sub
js
xor
inc
jmp
(bad)
clts
imul
clts
icebp
inc
or
cmovne
inc
lock
push
cmp
mov
call
mov
mov
in
jns
cmp
add
push
sbb
imul
repz
pusha
dec
inc
popf
repz
iret
psllq
les
push
add
repz
inc
scas
push
jns
fwait
cmp
call
sahf
dec
cs
out
and
rcl
shr
loopne
mov
in
and
or
loopne
pop
mov
mov
scas
stos
or
pop
int3
pop
or
lds
cmp
mov
loopne
inc
mul
jns
out
push
test
(bad)
ror
out
jns
loopne
cld
or
shl
js
xor
jecxz
push
pop
popa
cdq
jecxz
mov
sbb
dec
add
sbb
nop
and
xchg
cmp
jae
sbb
mov
in
sbb
sbb
pop
int3
dec
push
dec
add
popa
or
push
sbb
jmp
add
jns
mov
inc
push
ds
push
movs
mov
out
sahf
ror
jmp
ror
aad
ins
(bad)
or
loope
lods
stc
movs
retf
jne
jns
aaa
mov
mov
mov
jne
loope
nop
or
(bad)
sbb
mov
fst
or
or
aaa
jmp
es
or
adc
or
or
sub
fild
pop
test
in
retf
mov
push
pop
movs
adc
push
icebp
loopne
inc
int
pop
push
imul
jg
cs
cs
inc
mov
dec
inc
out
add
xor
add
out
call
sahf
out
sahf
adc
sahf
out
sbb
sbb
sahf
or
and
and
loop
push
or
iret
repz
push
sub
rep
adc
iret
(bad)
aad
test
sahf
sbb
cmp
jns
out
jg
mov
sahf
out
loop
dec
repz
push
sbb
sub
inc
sub
mov
cwde
mov
jmp
mov
(bad)
int
dec
bound
push
and
sub
lea
and
jmp
test
pop
daa
test
mov
and
shl
mov
adc
test
mov
imul
mov
mov
xor
mov
pop
jmp
xor
sar
and
jmp
fnstcw
jns
(bad)
ss
jae
and
mov
in
and
repz
dec
pop
cmps
mov
pop
bound
push
and
mov
mov
aaa
mov
pusha
sti
jne
lods
and
popa
or
das
movs
bound
sub
or
ins
mov
push
outs
daa
std
mov
pop
sub
adc
sbb
mov
test
sbb
add
imul
fisub
sub
and
pop
enter
daa
and
and
cli
pop
enter
fimul
jmp
mov
out
push
outs
or
je
dec
or
sub
(bad)
fisttp
sahf
jge
jmp
pop
push
and
sbb
fild
xor
push
xor
jge
pop
mov
add
adc
or
jnp
div
push
add
push
push
sbb
ror
cmp
inc
push
aad
dec
lds
loope
idiv
aaa
ret
pop
scas
jge
or
retf
addr16
push
adc
mov
dec
dec
pop
es
repz
repnz
dec
pop
push
repnz
jnp
popf
scas
mov
rcr
in
cli
jns
jbe
or
pop
push
and
ret
jns
xor
or
or
les
ins
and
punpcklwd
and
xchg
add
popa
and
and
dec
and
xchg
xchg
push
jo
dec
add
add
and
and
sbb
or
adc
cmp
div
add
add
push
jb
retf
xlat
push
pop
retf
gs
pusha
xor
pop
aaa
shl
and
add
sub
dec
cmp
pop
push
inc
test
ja
lahf
int
sbb
sub
pusha
adc
push
or
arpl
cmp
jne
pop
ja
ins
or
clc
xor
and
mov
pop
into
sbb
add
mov
xchg
pop
and
jns
mov
adc
push
les
sbb
xchg
lock
jne
bound
push
push
xchg
push
or
push
aaa
sbb
ret
and
adc
xlat
ret
push
out
mov
scas
inc
push
mov
xchg
push
in
jmp
test
sbb
xchg
dec
cmp
int
es
dec
pop
stos
push
mov
jnp
repz
call
and
xor
enter
gs
cmp
repz
mov
or
repz
test
and
in
aas
test
and
popa
and
and
add
inc
fmul
adc
outs
aad
and
mov
jne
out
or
ret
cmp
mov
arpl
xor
cmp
scas
adc
cmp
arpl
mov
push
mov
pop
sbb
pop
or
push
jns
lds
xchg
shl
xchg
push
xlat
xchg
aas
mov
out
and
repz
xchg
push
movs
mov
into
jnp
repz
jmp
push
adc
ss
inc
and
loop
daa
and
lea
cmps
pop
and
lds
push
pop
iret
pop
xchg
sbb
ret
pop
xchg
outs
pop
outs
pop
cmp
ret
pop
cs
or
push
push
push
in
mov
sbb
cmps
dec
dec
cmp
int
mov
pop
xchg
xchg
push
mov
repz
test
cmp
stc
cmp
je
stc
daa
push
push
stc
mov
sti
test
pusha
pusha
pop
ret
sti
repz
aam
sti
iret
ret
mov
out
inc
pop
sub
and
call
or
sub
jle
add
mov
jl
test
sbb
sti
and
mov
or
add
mov
push
pop
cmp
adc
cmp
in
pop
mov
or
mov
or
add
dec
mov
ret
idiv
ret
fst
push
push
push
mov
lea
mov
outs
adc
into
loopne
mov
mov
jge
xor
push
es
pop
pop
pop
pop
push
adc
data16
and
lea
movnti
add
sub
pop
scas
lods
jle
ret
lods
in
cmps
pop
lock
and
pop
and
int3
test
je
push
mov
or
cmp
sub
repz
fdivr
jnp
pop
and
adc
push
pop
sahf
(bad)
mov
inc
cmp
mov
cmp
push
adc
xchg
fisubr
(bad)
mov
pop
test
sub
rol
fmul
sbb
jb
push
mov
push
jns
je
ins
cs
jns
gs
push
outs
imul
iret
jo
js
lock
push
dec
cmp
test
add
ss
mov
pop
inc
jnp
iret
repz
dec
pushf
jge
mov
mov
mov
jp
je
outs
in
out
add
adc
fild
fisub
pop
add
cld
push
inc
outs
jne
gs
je
jb
sub
cli
mov
and
push
loopne
outs
jbe
dec
gs
adc
inc
push
das
add
gs
data16
mov
add
pop
popf
mov
or
or
cmp
imul
inc
outs
ins
ins
arpl
outs
test
arpl
sahf
ret
ja
mov
xor
outs
mov
pop
clc
inc
jne
sbb
je
loopne
add
pop
xor
fwait
test
push
outs
pop
pop
shl
push
loope
pop
add
jo
push
cwde
push
adc
jnp
dec
push
(bad)
(bad)
in
ja
and
inc
and
int3
jmp
mov
mov
sub
sub
and
std
push
push
outs
(bad)
add
mov
inc
clc
inc
sub
push
xchg
das
dec
pop
add
xchg
fwait
dec
data16
ficomp
test
push
dec
imul
cs
inc
outs
push
idiv
add
mov
push
dec
jecxz
xor
xor
mov
and
or
add
mov
data16
clc
popa
jne
je
sbb
mov
scas
or
push
loope
es
data16
into
mov
xor
or
cwde
sbb
dec
bound
adc
dec
push
aas
rol
mov
hlt
mov
xor
or
mov
mov
out
out
lods
xor
fdiv
mov
les
ja
sbb
das
out
push
(bad)
jb
scas
push
aaa
aas
lock
adc
nop
adc
adc
add
adc
repz
and
dec
popa
outs
popa
sbb
ins
ja
lahf
enter
int
add
int3
loopne
and
push
jmp
loopne
mov
cmps
adc
xor
dec
or
or
and
sbb
add
push
int3
xchg
xchg
jnp
sbb
int
dec
fcomip
lods
shl
iret
movs
add
fisub
(bad)
popa
ins
imul
adc
retf
scas
add
xor
pmaddwd
mov
and
shl
mov
addr16
and
lods
lods
dec
je
inc
mov
lods
and
sbb
(bad)
jl
xor
fld
icebp
push
mov
push
lods
(bad)
test
push
cmp
gs
add
add
fmul
inc
popa
lock
inc
lahf
and
inc
sub
pop
sub
sbb
inc
aam
or
ds
gs
cmps
sbb
imul
sbb
data16
inc
or
or
inc
add
dec
push
or
shr
pop
pop
pop
shl
pop
mov
jmp
lods
ret
dec
fcom
sub
popa
jmp
fwait
mov
push
pop
push
fs
or
push
in
das
inc
pop
or
mov
add
not
or
sbb
push
and
jnp
and
nop
push
mov
rol
pusha
push
and
adc
test
fwait
push
(bad)
mov
pop
push
arpl
fwait
sub
lahf
sub
push
std
nop
aad
xchg
sub
fsub
add
add
and
mov
jno
xor
pop
push
inc
cs
push
cmp
jns
jae
invd
popa
inc
sbb
pop
stos
dec
inc
sahf
pushf
into
add
test
and
mov
xchg
xchg
daa
daa
in
gs
enter
mov
leave
leave
leave
inc
xchg
retf
repnz
fs
addr16
xchg
repnz
ja
icebp
sbb
dec
dec
push
pop
jnp
mov
push
mov
shl
sub
add
mov
xor
sbb
sub
mov
or
inc
test
pop
xchg
jno
or
mov
daa
push
cmp
test
test
add
nop
shr
adc
dec
jae
rcl
mov
jmp
mov
int
jg
dec
jg
xchg
std
cmp
add
fs
sti
int
mov
popa
ins
jne
arpl
add
bound
adc
add
push
mov
ins
fiadd
cmp
outs
lds
pop
or
push
mov
adc
adc
hlt
test
dec
enter
pusha
jae
pop
sub
cmp
enter
sbb
inc
jae
and
out
xchg
xchg
or
sbb
inc
das
leave
fwait
(bad)
cmp
sbb
fwait
add
popa
arpl
cmp
inc
or
add
jae
mov
push
push
js
inc
mov
imul
data16
jno
mov
in
in
inc
imul
add
fcmovu
bound
push
lea
dec
add
or
imul
xchg
or
mov
pop
inc
js
jo
mov
lea
push
ja
pop
inc
cs
xchg
rol
mov
sbb
mov
dec
or
rcl
rcr
imul
lahf
sbb
xor
or
ja
loopne
or
xor
jmp
dec
jg
pusha
addr16
pop
das
out
dec
popa
pop
and
ds
inc
mov
sub
lds
pop
call
sub
dec
lods
push
fs
popa
imul
hlt
inc
mov
adc
dec
popw
push
push
or
std
imul
ret
and
or
mov
jns
push
shl
(bad)
push
outs
fild
and
inc
pop
cmp
mov
ins
or
mov
jns
sbb
and
or
adc
and
les
push
mov
push
adc
dec
div
jmp
mov
push
jb
ins
mov
jae
shl
cmp
or
push
sbb
dec
fld
movs
inc
sub
xlat
push
sub
mov
push
movs
ss
pop
arpl
shr
xchg
loop
in
inc
loope
and
sbb
addr16
pop
mov
mov
dec
dec
sub
pop
cmp
inc
jnp
stos
sahf
or
mov
sub
adc
test
xor
push
or
inc
outs
popa
inc
jnp
push
pop
arpl
jns
add
push
inc
out
(bad)
xchg
icebp
ins
push
aas
mov
call
pop
ret
pop
cmp
add
mov
inc
shl
and
div
cmp
inc
mov
xchg
mov
popa
gs
mov
xchg
es
out
pop
sbb
and
(bad)
push
dec
test
je
sub
dec
shr
idiv
stc
mov
xor
test
inc
and
aaa
or
fs
jne
mov
or
(bad)
enter
adc
sub
ret
loopne
nop
(bad)
movzx
mov
(bad)
or
ret
sar
xor
shr
or
push
addr16
mov
xor
in
or
xor
jecxz
mov
scas
add
nop
mov
shl
lock
jmp
jmp
shl
pop
or
add
mov
(bad)
hlt
push
push
mov
leave
das
loopne
mov
enter
sar
sar
popf
sub
nop
hlt
add
jne
sbb
lea
or
(bad)
jg
mov
call
mov
mov
mov
lea
ror
jl
or
adc
push
in
and
pop
rcl
cmp
add
pop
mov
push
pushf
inc
pusha
iret
push
and
ficom
or
sahf
jo
xchg
ins
test
sbb
jl
or
outs
fdiv
and
or
lock
sub
loopne
cmp
bound
add
ficomp
shl
push
ja
adc
inc
leave
cld
push
call
sti
xor
mov
and
push
xor
and
adc
mov
jg
adc
shl
add
and
add
in
in
dec
jae
and
pushf
mov
cdq
icebp
and
and
add
cmp
and
sbb
jmp
bound
sub
rcl
adc
loopne
enter
add
jl
movs
pop
ds
mov
popf
cld
xchg
ja
(bad)
das
cwde
sub
aad
shr
je
cld
test
rcr
dec
in
mov
add
sub
jb
or
jb
in
mov
lock
inc
adc
popf
idiv
jo
mov
add
retf
push
mov
push
jmp
mov
lock
movs
add
addr16
int
in
sbb
mov
or
dec
add
in
mov
mov
or
outs
push
mov
and
inc
jbe
aas
jge
dec
aam
sbb
movs
jo
dec
dec
cmp
mov
push
or
popa
outs
pop
shr
xor
adc
push
and
xchg
out
xor
dec
loopne
add
jmp
and
and
xor
(bad)
and
mov
push
setge
xor
rcl
mov
in
cwde
pop
xchg
or
lock
push
sub
ss
in
loopne
bndldx
or
or
push
mov
add
push
adc
int
adc
sub
imul
rcr
call
add
clc
xor
sbb
cmp
popa
mov
mov
lahf
out
(bad)
(bad)
sub
jb
add
sub
jb
or
add
lods
adc
mov
loop
adc
xor
imul
cmp
xchg
mov
fcmovne
daa
pop
ins
fcomip
mov
inc
sbb
xchg
jle
xchg
or
fs
mov
push
jmp
ds
les
jae
mov
push
add
pop
mov
lock
jb
je
lahf
pop
push
pop
mov
jmp
adc
popf
in
or
or
add
add
mov
fsub
aaa
sbb
sub
pop
xor
inc
pop
sbb
or
and
mov
inc
adc
sbb
gs
dec
push
arpl
xchg
sti
xchg
jl
js
mov
push
rcl
jge
jge
js
cmp
dec
adc
sub
adc
push
dec
sbb
add
mov
movd
sub
push
adc
je
push
or
call
pusha
rcl
cmps
sbb
mov
ins
mov
mov
pop
aaa
push
dec
ins
imul
rcl
les
push
enter
cld
mov
mov
xor
jge
xor
test
xor
inc
jbe
mov
je
fimul
dec
xor
xchg
test
and
add
cmp
add
imul
test
xor
mov
push
sbb
and
mov
add
or
mov
inc
adc
(bad)
repnz
mov
call
mov
cmp
inc
fdiv
mov
jmp
mov
nop
cmp
leave
ja
ins
add
xchg
mov
out
dec
jo
nop
mov
adc
mov
adc
inc
mov
pushf
shl
mov
add
sbb
int3
pop
sbb
sub
ret
ins
sbb
mov
pop
sub
sub
lock
repnz
mov
call
sub
mov
dec
push
clc
cmc
and
mov
test
or
movs
sub
fucomip
test
clc
push
call
xor
or
in
cli
jl
mov
les
faddp
inc
test
mov
adc
jne
lock
test
cmc
push
add
adc
ss
inc
lea
fiadd
loopne
sbb
stos
mov
inc
jge
into
sub
fwait
inc
retf
iret
call
stos
pop
mov
sbb
inc
cmp
(bad)
call
add
adc
mov
mov
mov
gs
mov
mov
fucomi
ss
fild
jmp
sub
je
jmp
and
dec
rcr
inc
and
xor
mul
(bad)
pop
les
inc
sub
cmp
cmp
aaa
jmp
and
pushf
cmp
out
repnz
sub
aam
or
or
push
sti
pop
jmp
es
sbb
add
mov
ss
lea
ret
sar
mov
stos
adc
(bad)
sbb
call
mov
fld
jo
test
lahf
ds
inc
fadd
and
push
sti
mov
and
hlt
mov
xor
mov
daa
dec
jbe
sbb
sub
std
inc
jno
ja
cmp
fwait
cmp
cmc
push
adc
push
pushf
jns
into
repz
lock
pop
push
cs
dec
js
or
cwde
add
or
fs
cmp
and
or
lea
dec
add
push
ret
mov
jbe
jle
sahf
jne
add
adc
or
xor
xor
sub
sbb
xchg
enter
pop
sbb
push
icebp
cmp
dec
dec
sbb
out
push
pop
test
add
out
jns
std
add
push
pop
mov
cs
rol
clc
and
inc
or
out
push
push
push
sbb
add
lea
mov
add
adc
push
xor
add
jno
pop
enter
dec
xor
and
pop
dec
xchg
fsub
sbb
sub
jmp
inc
add
sbb
test
out
out
shr
mov
clc
mov
outs
mov
cld
jmp
fstp
push
fdiv
add
pusha
pop
adc
xchg
sar
xchg
(bad)
aam
sbb
adc
add
loopne
test
or
push
mov
mov
jmp
dec
or
pusha
int
rcl
add
sub
sbb
pop
dec
jge
loope
pop
in
inc
mov
mov
sbb
add
pusha
push
cdq
push
jmp
xor
push
push
jle
pop
pop
iret
repz
mov
outs
add
mov
mov
or
outs
adc
icebp
test
push
lock
or
mov
enter
adc
adc
loope
stc
fst
or
adc
adc
or
mov
(bad)
fidivr
mov
cmp
das
aaa
sub
ds
retf
sti
and
out
push
sub
mov
cwde
xchg
movs
adc
xchg
adc
and
push
push
pop
call
mov
dec
(bad)
das
add
add
jno
icebp
loope
sbb
and
in
rol
sbb
popa
push
dec
gs
add
stos
xor
and
ffree
mov
jmp
adc
sub
ja
or
mov
fist
mov
data16
jge
adc
loopne
pop
sbb
push
movs
mov
xlat
call
push
jno
dec
aaa
adc
add
outs
jp
mov
out
das
push
push
mov
ret
lods
mov
mov
push
pop
jae
sbb
inc
and
or
nop
mov
aaa
fdiv
mov
mul
inc
shl
enter
or
mov
inc
sbb
mov
xor
ret
or
sbb
add
cli
sbb
mov
and
jmp
jbe
jl
ret
mov
or
or
add
sbb
repnz
mov
xor
add
add
cmp
cmp
push
and
pop
adc
inc
add
sbb
aad
inc
clc
sbb
into
add
push
pop
sub
and
or
pop
mov
dec
stc
adc
xchg
mov
hlt
mov
push
iret
add
or
loope
retf
sbb
leave
sbb
jnp
xchg
and
inc
adc
jle
xor
or
push
or
dec
mov
stc
(bad)
pop
pop
push
and
fild
push
and
sbb
adc
jb
loopne
movs
and
mov
pop
outs
fild
or
push
and
lock
popf
es
daa
or
sub
xor
daa
or
sub
pop
jbe
mov
daa
or
xor
into
arpl
or
xor
push
xchg
repnz
adc
push
je
in
mov
cmc
sbb
cmp
jne
or
jmp
inc
test
push
pusha
into
repz
cwde
pop
pop
jl
outs
mov
sbb
in
jnp
cmp
mov
sbb
fnstsw
push
pop
add
in
push
clc
push
loop
sub
shr
cmp
pop
pop
jne
popf
xor
(bad)
add
xor
ins
lds
das
je
inc
call
adc
jno
in
sub
jns
sub
inc
add
dec
mov
(bad)
push
push
cwde
or
lock
xchg
or
inc
ss
pop
out
call
add
adc
or
pop
dec
push
push
pop
loopne
inc
add
pop
aad
(bad)
enter
into
add
sub
pop
movs
xor
mov
sar
pop
adc
scas
cwde
psubsb
fs
and
push
es
mov
test
sti
ins
sbb
jo
jle
adc
(bad)
(bad)
lods
pusha
cmp
jbe
or
dec
sub
inc
or
mov
(bad)
sbb
pop
jp
push
(bad)
int
jo
sub
push
je
push
data16
inc
adc
push
sti
or
shl
imul
sbb
xor
xor
enter
fucomp
or
test
pop
inc
pop
(bad)
cld
add
push
jnp
rcl
fidiv
(bad)
aaa
imul
sbb
or
lock
ror
cmp
inc
int3
stos
stos
xchg
(bad)
jnp
push
mov
lahf
adc
add
sub
add
jnp
outs
sub
jae
rcl
add
or
xor
sti
in
jmp
add
jg
je
sub
je
or
(bad)
pop
fiadd
ret
pop
jb
jmp
sub
jmp
and
jg
pop
out
cli
cmp
jo
sbb
or
adc
pop
cmp
xchg
xor
dec
jne
mov
cmp
mov
sub
je
mov
push
jmp
add
inc
add
call
stos
dec
mov
mov
sub
out
js
inc
push
push
fdiv
adc
jnp
je
push
mov
jg
mov
adc
or
test
test
push
mov
mov
jp
outs
or
jbe
push
ins
iret
sub
pop
mov
ret
add
pop
outs
inc
add
add
imul
aaa
mov
je
xchg
jns
mov
pop
aam
push
(bad)
pop
popf
sub
test
call
jmp
mov
mov
out
stos
jp
lods
lea
push
xor
add
ficomp
mov
xor
ja
lods
es
stos
adc
cmp
push
ret
push
push
inc
and
jbe
or
dec
test
dec
mov
sbb
inc
popf
pusha
dec
gs
add
fs
add
and
in
pop
mov
bound
aaa
sbb
inc
mov
pop
add
inc
dec
test
jmp
pusha
jo
pop
je
sub
movs
and
je
pop
jbe
mov
add
mov
pop
sbb
stos
add
jmp
pusha
call
adc
shr
mov
jno
ss
mov
test
jle
inc
add
xchg
lock
(bad)
mov
rol
and
or
xor
aam
pop
sub
xchg
xchg
cwde
sti
pop
pop
loop
outs
mov
inc
cmovbe
or
sbb
add
or
scas
sbb
jae
in
inc
mov
pop
pop
inc
aaa
xchg
dec
rcl
fisubr
ins
push
pop
les
sub
ss
pop
add
inc
lods
or
inc
aaa
sub
leave
outs
or
movs
(bad)
cmp
xchg
push
clc
imul
loope
push
and
adc
test
stos
jne
inc
or
fsubrp
pop
shl
outs
mov
sbb
inc
adc
test
enter
jp
add
popa
mov
lea
ret
imul
fs
cmp
cmc
(bad)
sbb
jno
fsubr
aas
jo
push
ins
not
int
or
dec
jno
dec
and
or
mov
mov
mov
push
leave
inc
jnp
ficomp
loop
nop
sbb
inc
loopne
clc
push
mov
aaa
add
sti
xchg
push
push
outs
xor
test
xor
pop
inc
sub
sub
add
mov
mov
movs
test
cmp
mov
mov
push
add
push
stos
ret
mov
xor
jg
shl
sub
mov
das
pop
shl
out
pushf
xor
mov
mov
xchg
addr16
sbb
jo
or
add
mov
loope
or
or
mov
jle
adc
dec
nop
scas
push
sub
sar
movzx
fadd
das
push
int3
or
fdiv
or
push
fadd
add
mov
inc
or
sub
pusha
movs
fidiv
pop
and
sub
sbb
sub
mov
mov
push
and
lock
cmp
mov
inc
mov
add
mov
xlat
iret
clc
fdivr
fcom
push
push
or
je
add
sbb
jo
aaa
cmp
loop
inc
and
fdivr
mov
sar
repz
rcr
inc
ficom
xchg
mov
mov
add
mov
xor
and
jb
adc
or
fs
add
(bad)
push
jb
lea
(bad)
ins
adc
mov
mov
cmps
cmp
dec
je
add
push
inc
or
xor
or
add
mov
fistp
cmp
pop
dec
lock
sbb
add
pusha
or
jne
inc
jg
add
enter
xor
je
out
xchg
adc
pushf
inc
or
pop
scas
(bad)
mov
add
stc
pop
mov
ja
cmps
xor
jmp
xor
adc
mov
je
pop
addr16
pop
lods
int
and
out
test
test
jge
cs
shr
imul
cld
add
ror
adc
adc
add
cli
into
stc
ret
(bad)
xor
add
jne
mov
faddp
test
repz
sub
adc
nop
jne
pop
or
lock
mov
or
rcl
imul
xchg
pop
sbb
fisttp
add
ret
test
cmp
or
inc
push
movs
mov
ret
sbb
daa
inc
test
repnz
int3
sbb
and
pushf
cmp
push
movs
call
cmps
aam
inc
je
sahf
test
mov
js
sbb
inc
sub
imul
cmp
mov
es
xchg
pusha
call
cld
jl
inc
xor
push
or
mov
inc
mov
dec
pop
add
in
push
lahf
or
push
mov
into
add
mov
ror
daa
(bad)
pop
fcomp
add
adc
pop
jb
or
sbb
sub
or
mov
test
je
shl
sub
in
ret
inc
es
data16
pop
adc
pop
into
dec
enter
xchg
cld
les
dec
pop
fdivr
push
add
adc
sbb
jge
inc
loopne
in
jl
cmp
pop
int
es
push
loopne
aam
push
fneni(8087
sbb
jns
push
fdivr
movs
fstp
(bad)
pop
idiv
inc
out
add
(bad)
out
push
ins
sbb
popa
add
add
es
mov
jns
add
jo
jbe
add
push
ins
add
out
lds
add
or
xlat
add
add
fisttp
jbe
lea
xlat
jp
push
lods
pop
pop
add
inc
sbb
and
add
cmp
je
jo
popf
popa
fs
imul
dec
cwde
cmp
sub
and
int3
xlat
(bad)
and
int3
inc
or
mov
clc
rol
push
xchg
xchg
jno
aaa
or
das
nop
sbb
push
adc
faddp
and
data16
mov
add
mov
cmp
push
movs
or
not
mov
idiv
shl
mov
and
push
jp
test
ja
adc
sbb
or
push
mov
fdiv
pcmpgtb
push
jbe
sub
(bad)
dec
mov
or
sbb
shr
or
or
test
add
push
inc
ret
lds
loopne
aaa
xchg
lock
das
mov
inc
add
jbe
call
mov
ret
push
mov
rcr
xchg
nop
and
nop
add
ror
or
jbe
loop
stc
xor
pop
addr16
and
mov
(bad)
pop
stos
cwde
mov
test
or
jnp
xchg
out
push
es
sbb
leave
sbb
push
pop
mul
mov
pop
je
or
pop
push
push
add
mov
add
xchg
mov
jo
push
and
add
call
push
pushf
cmp
shr
sub
test
mov
or
mov
pop
in
data16
rol
inc
cmp
jb
(bad)
mov
les
push
mov
add
xchg
enter
and
adc
push
sbb
push
jne
push
sub
pop
and
or
mov
(bad)
out
scas
jnp
jbe
pushf
(bad)
mov
or
inc
pop
mov
and
sbb
jb
xor
movs
lds
andps
fwait
enter
adc
and
lahf
aam
fcomp
cmp
or
out
arpl
out
add
mov
pop
push
ror
jbe
and
mov
popf
inc
imul
scas
mov
or
ja
test
xchg
je
jbe
ret
jl
push
icebp
jno
lock
jmp
xor
mov
ficom
popa
push
jo
or
fild
sbb
in
push
inc
sbb
jbe
mov
inc
inc
jp
jmp
push
lods
sbb
cwde
mov
mov
cmp
(bad)
in
(bad)
adc
mov
bound
mov
mov
and
mov
sbb
sbb
sub
mov
push
ja
push
jge
adc
dec
mov
mov
pop
or
push
sahf
push
pop
mov
retf
xor
lea
inc
mov
cmp
jg
jb
fidivr
or
sub
popa
push
out
pusha
pop
aas
ins
aas
mov
add
dec
sahf
mov
mov
mov
lock
add
adc
push
add
adc
pop
jl
out
call
cmp
and
jl
or
cmps
int
je
jle
or
or
pop
mov
xchg
or
call
cmp
cmp
cld
stos
adc
or
push
xchg
fcom
mov
cld
in
stos
je
popf
fst
sub
xor
push
mov
aaa
shl
sub
push
out
sbb
xchg
cwde
pop
(bad)
push
ins
push
sar
inc
mov
sub
lea
adc
pusha
test
push
jo
cmp
in
cmp
cmp
xchg
mov
mov
(bad)
aam
fiadd
mov
push
inc
jge
xchg
jmp
jns
or
addr16
pop
popa
inc
sbb
push
imul
loope
fmul
sahf
pop
xchg
add
pop
lods
cmp
push
adc
sub
jmp
pop
sub
sbb
push
push
(bad)
add
xor
pop
xor
push
cmp
out
push
xchg
imul
cmps
dec
and
cmp
data16
loopne
xchg
rol
xor
out
in
pop
movs
push
dec
sub
sar
xchg
pop
ret
pop
retf
or
mov
add
mov
jo
push
sbb
cmp
mov
adc
cli
mov
je
push
mov
add
push
test
ret
jne
loopne
cli
xchg
(bad)
push
adc
push
daa
inc
adc
not
ds
jbe
add
and
hlt
pop
and
jo
je
adc
pop
aad
fist
jo
sbb
shr
jg
out
fild
jl
cmp
mov
cmp
test
pop
sbb
cmp
(bad)
mov
sbb
loop
inc
(bad)
psubq
sbb
dec
dec
push
dec
add
xchg
aaa
mov
inc
pop
ja
xor
push
cmps
sbb
loopne
jns
or
inc
add
les
sbb
add
inc
pop
out
sub
push
lods
cmp
lock
ja
or
or
mov
mov
test
pop
sahf
mov
test
inc
fsub
aas
mov
neg
mov
neg
xor
cmp
and
and
pop
or
pop
xor
push
lea
lea
jmp
inc
movs
mov
imul
add
sub
frstor
jmp
push
lahf
dec
jle
inc
test
xor
jle
mov
mov
shr
xor
adc
push
jne
mov
add
add
sub
push
add
and
(bad)
sub
pop
dec
push
loop
add
push
call
jb
cld
imul
loopne
(bad)
fadd
inc
rcr
push
add
dec
int3
or
mov
test
pushf
push
lods
xor
or
push
and
repnz
out
push
or
(bad)
scas
sbb
les
rcl
mov
jmp
push
or
push
call
mov
sub
add
imul
sbb
enter
ror
xchg
jecxz
jne
mov
xor
fdivr
pop
jge
jge
lods
and
jmp
call
leave
adc
and
stc
call
lea
mov
sub
mov
cld
pop
pop
cmp
add
sub
push
shl
add
clc
cmp
ins
add
test
in
jo
add
push
mov
loopne
push
cmps
xor
inc
add
or
mov
mov
push
cmp
add
adc
stos
and
(bad)
ins
outs
dec
out
add
jg
sbb
cld
xchg
sbb
and
jns
jmp
leave
fldenv
fincstp
push
adc
add
or
inc
or
test
or
or
mov
mov
pusha
cmp
lods
aad
mov
sbb
add
imul
add
cmp
xchg
movs
mul
sbb
or
rol
cmp
adc
pop
xor
add
jne
mov
popa
js
mov
les
sbb
push
pop
imul
adc
mov
mov
sbb
pop
pop
or
sbb
aaa
ror
inc
rcr
lods
sub
(bad)
es
or
ins
test
and
icebp
add
and
push
cmp
inc
ret
jg
inc
dec
xchg
or
mov
xor
sub
daa
shl
mov
and
mov
add
push
add
outs
xlat
pop
popa
test
stos
out
jns
fidiv
and
sub
push
iret
into
push
shl
cmps
mov
das
adc
mov
aad
cmp
lds
cmp
inc
xlat
jge
loopne
pop
add
inc
nop
jne
es
lods
add
fs
sbb
sub
sub
cld
adc
sub
jmp
lock
add
or
(bad)
jp
jp
rcl
test
cmp
in
dec
test
sub
push
shl
add
mov
nop
jmp
pop
mov
jg
jle
sahf
lock
adc
or
fcmovu
clc
call
cmp
dec
retf
or
add
loopne
dec
js
inc
sub
pop
add
daa
and
cmp
shr
in
xor
imul
push
loopne
aaa
xchg
xchg
cmc
inc
or
rcr
jp
dec
out
adc
push
icebp
cmp
push
cwde
mov
pop
pop
aad
and
(bad)
or
cmp
adc
das
cmp
add
cmp
pop
dec
shr
ins
cmp
int3
js
call
sbb
cli
adc
adc
ror
mov
mov
aad
jo
add
stc
ret
jo
dec
call
loope
std
cdq
sub
add
and
xchg
std
fcomp
mov
sahf
in
add
divps
lock
push
loope
sti
jb
jle
jns
test
xchg
mov
push
pop
scas
push
lds
cmp
jge
inc
cdq
jl
lea
daa
mov
aaa
clc
adc
mov
lock
(bad)
out
lea
test
jge
mov
mov
inc
inc
add
test
sbb
jle
dec
jno
mov
enter
xor
into
daa
popf
mov
daa
int3
or
mov
or
push
and
ins
xchg
dec
push
adc
dec
sub
fist
mov
fucomip
lsl
adc
popf
cmp
cmp
pop
fdivr
or
pop
in
mov
push
ret
jmp
push
outs
xchg
cmp
jmp
dec
out
fiadd
pusha
je
mov
je
pushf
xor
xor
dec
inc
add
pop
or
inc
enter
sbb
adc
(bad)
push
call
pushf
push
push
popa
mov
clc
ja
adc
xor
or
mov
sub
dec
test
repz
push
adc
sbb
lahf
xor
cmp
loopne
adc
sub
retf
es
(bad)
push
or
pusha
jmp
xor
push
cdq
std
retf
js
jno
sub
push
lea
sbb
adc
enter
or
outs
inc
outs
out
jle
inc
sub
adc
loopne
cmc
aam
push
(bad)
outs
cmc
iret
loopne
pop
add
lea
fnsave
or
cmp
push
inc
sbb
cmp
movs
inc
(bad)
sbb
mov
or
jne
inc
push
dec
jle
or
dec
test
add
sbb
sbb
sbb
(bad)
sbb
or
fld
mov
push
pusha
xchg
inc
inc
push
adc
stc
dec
mov
ret
hlt
jmp
add
cmps
inc
push
xor
push
pop
cmp
(bad)
ds
inc
mov
leave
push
add
ins
(bad)
cmps
es
sahf
push
in
jl
icebp
std
inc
sbb
sbb
scas
(bad)
iret
ds
and
mov
jo
pop
or
(bad)
clc
add
cmp
jg
adc
lea
or
js
shl
and
mov
cli
and
in
adc
push
mov
add
push
add
push
push
dec
xor
add
add
push
dec
(bad)
fiadd
movs
in
outs
fwait
imul
jle
je
dec
hlt
add
mov
or
call
or
push
add
or
sbb
inc
aam
mov
fmul
rcr
mov
or
sub
js
inc
data16
adc
inc
adc
mov
inc
and
mov
adc
test
push
inc
dec
jne
ret
loope
inc
sbb
retf
push
mov
sub
mov
inc
test
fist
push
mov
or
add
inc
fsub
xlat
dec
pop
mov
ficom
sub
dec
inc
dec
jne
or
pop
xchg
adc
(bad)
xchg
jne
or
and
sbb
int3
ds
cmp
repnz
inc
sbb
pop
lahf
pop
daa
push
inc
mov
mov
sahf
mov
inc
push
push
addr16
push
add
ja
mov
scas
cmc
mov
xor
or
and
push
mov
fisub
setg
addr16
mov
ss
or
rcl
pusha
sub
mov
jl
nop
dec
mov
inc
scas
popa
lea
cmp
sub
scas
jp
sbb
inc
push
ror
xor
mov
sub
pop
push
jp
dec
or
xchg
dec
jo
mov
push
add
jne
cmp
xor
pop
mov
das
or
add
cmp
adc
inc
adc
sbb
fnsave
or
jns
adc
mov
sbb
into
mov
pop
add
sbb
ret
pop
sbb
shl
ror
test
mov
push
add
or
pop
retf
shr
sub
fmulp
mov
add
test
(bad)
pop
adc
mov
add
pop
cmp
jo
mov
sbb
std
mov
push
dec
mov
push
loop
daa
loope
mov
dec
xchg
adc
dec
outs
je
pusha
lea
hlt
mov
out
xchg
data16
rol
cmp
shr
add
push
inc
pop
add
cs
add
jl
dec
add
sbb
add
mov
mov
pusha
add
pop
push
mov
jl
mov
jp
shr
loopne
loope
rcl
add
jmp
mov
sbb
xchg
jo
sti
std
pusha
pop
mov
cmp
js
and
push
popa
add
push
cmp
cmps
mov
jmp
push
adc
sbb
add
push
add
int3
or
div
jge
sbb
push
push
mov
in
test
sahf
ds
pop
jge
fs
fidiv
adc
jbe
in
or
add
xchg
xor
sbb
jb
ret
sub
push
call
out
push
sbb
sbb
adc
dec
and
add
adc
xchg
push
dec
or
mov
pusha
les
xchg
popa
stos
mov
retf
outs
cmp
cli
je
cmp
adc
mov
adc
fiadd
rcr
test
cmps
cmp
mov
pop
das
sbb
sbb
call
scas
cmp
mov
adc
push
shl
(bad)
fild
lea
mov
stc
adc
pop
add
out
cld
jno
movs
daa
and
push
sub
add
lahf
mov
ror
(bad)
rcr
push
add
inc
or
ret
mov
mov
xor
add
pop
mov
cmps
xlat
pop
inc
inc
adc
stos
mov
mov
stos
adc
inc
add
rol
fnstenv
and
pushf
cmp
inc
xlat
(bad)
fwait
or
jno
inc
push
clc
movs
je
fmul
lea
mov
jnp
repz
gs
lods
les
inc
mov
enter
cs
jbe
out
mov
(bad)
and
loop
mov
sti
adc
fistp
xchg
add
xor
lahf
adc
je
into
ins
aaa
lahf
sbb
jnp
outs
retf
and
or
js
cmp
sub
popf
inc
sub
aas
sub
inc
push
push
loop
sub
dec
ret
out
pop
(bad)
movs
inc
sub
pusha
sbb
xchg
(bad)
test
ins
es
cmp
(bad)
dec
push
imul
dec
sub
loop
mov
fs
xor
push
jge
adc
or
shl
loope
mov
or
jmp
pop
dec
je
push
out
jae
cmp
sub
out
(bad)
adc
or
psadbw
cmps
push
inc
jmp
xor
jbe
xlat
push
test
jge
cmp
push
jp
add
loopne
cmpxchg
and
inc
push
outs
mov
mov
cmps
movs
dec
sbb
xchg
push
xlat
sbb
pmuludq
mov
sbb
jmp
(bad)
clc
xchg
pusha
cmc
sbb
sub
lahf
pop
arpl
add
add
and
add
fisttp
inc
jg
mov
mov
js
add
push
hlt
scas
mov
sub
mov
nop
shl
ror
inc
nop
mov
in
xchg
punpckhbw
cmovne
inc
mov
inc
(bad)
cmpxchg
aaa
outs
data16
into
xchg
bts
inc
push
icebp
nop
call
stos
sub
daa
mov
cli
shrd
inc
mov
gs
lods
and
dec
pop
or
mov
pop
add
pop
mov
and
or
mov
mov
xor
mov
xchg
ss
cmp
mov
sbb
das
ja
xor
push
mov
aam
cmps
and
std
xchg
mov
(bad)
or
dec
scas
scas
or
popa
jmp
lea
jmp
sbb
fsub
or
jp
fdiv
pop
push
call
mov
ret
sbb
pop
mov
ins
sbb
aas
dec
shl
or
cmps
pop
pop
cmp
ja
xchg
(bad)
loope
cmp
adc
(bad)
cmc
nop
aaa
es
arpl
xchg
adc
xor
push
jb
pop
adc
sbb
aaa
sub
xor
pop
adc
push
pop
sub
js
nop
pusha
cmp
pop
loopne
test
jg
(bad)
lds
mov
cmp
sar
int3
push
imul
cmp
add
mov
lock
aad
mov
das
test
mov
cmps
imul
push
lock
lea
add
mov
(bad)
xbegin
adc
mov
mov
add
js
mov
adc
xlat
mov
inc
add
ret
push
rcl
sbb
cli
(bad)
xlat
mov
sub
xor
ror
adc
rcr
xor
or
test
and
and
bndldx
or
(bad)
sbb
out
inc
inc
mov
mov
jl
das
(bad)
push
cmp
mov
js
mov
or
mov
sub
shr
(bad)
dec
fsub
pusha
test
outs
inc
lds
shrd
jbe
xor
add
pop
ret
jmp
adc
push
cwde
pusha
es
add
and
pusha
cmp
clc
jp
mov
push
fcos
jbe
mov
test
lahf
mov
aad
push
inc
out
push
arpl
mov
arpl
jecxz
or
enter
cmp
mov
push
pop
adc
inc
adc
mov
loopne
sbb
loope
cmc
jle
push
cmp
aad
push
sbb
prefetch
pop
sub
pop
cmp
add
push
mov
sbb
icebp
(bad)
mov
push
jns
sbb
add
dec
das
cmp
movs
dec
adc
and
dec
movs
cmp
aas
aas
mov
bound
fbld
inc
jno
jg
pop
cmp
push
icebp
(bad)
jecxz
cmp
prefetchw
or
mov
(bad)
shl
mov
nop
or
clc
loope
loopne
shl
jno
push
pop
iret
pop
xor
push
pop
(bad)
mov
mov
mov
cmc
ja
sbb
cmp
mov
push
sub
stos
push
sub
aas
movs
pop
out
aas
je
and
xchg
dec
iret
mov
mov
xor
mov
jg
in
fmul
jne
ret
cmps
dec
xor
mov
mov
pop
loop
push
mov
(bad)
jmp
jne
clc
cmp
jne
test
je
mov
mov
xchg
adc
xchg
inc
push
mov
add
push
stos
pop
addr16
inc
ss
jecxz
adc
aad
pushf
pop
push
add
mov
inc
or
dec
push
or
sbb
xchg
scas
jg
and
int3
xor
pop
test
sbb
xlat
push
fst
loope
add
push
and
mov
lar
adc
xor
sub
xor
cmc
pop
das
(bad)
ror
ins
add
pop
and
mov
or
push
(bad)
aad
rcl
push
push
sub
sbb
xor
mov
aad
ret
and
cmp
adc
pop
scas
je
nop
jmp
pop
jo
mov
inc
dec
rol
scas
nop
nop
inc
enter
loopne
add
fadd
mov
fistp
or
sbb
mov
inc
dec
rcr
ja
ja
inc
cmp
sub
ja
cmp
ja
push
(bad)
xor
xchg
or
xor
loop
mov
les
add
cmp
jnp
mov
cmp
sub
aas
and
mov
cwde
in
shl
cmps
les
mov
faddp
or
dec
aam
add
jno
and
cmps
data16
cmps
and
(bad)
mov
cmps
jae
sub
call
sbb
sub
mov
pop
cmp
mov
ret
aad
hlt
cmps
ret
fwait
add
(bad)
adc
lock
lds
(bad)
bswap
sub
push
shr
push
(bad)
and
repnz
mov
push
in
fdivr
psubsb
es
inc
push
or
shrd
xor
cpuid
fwait
mov
cmove
fsub
pextrw
test
adc
xor
icebp
bnd
inc
(bad)
jg
jl
movs
in
lds
lea
dec
hlt
(bad)
pop
(bad)
ror
add
add
clc
mov
enter
adc
test
rcr
pusha
and
ret
aaa
sbb
leave
fmul
cmps
mov
mov
push
pop
icebp
adc
pop
mov
add
jb
lea
lea
movs
add
loope
imul
outs
mov
test
cmp
in
mov
pop
pusha
push
mov
mov
outs
cs
retf
data16
cmps
in
popf
inc
test
sub
push
jae
cmps
ins
mov
jae
test
xchg
pop
jae
mov
loopne
xor
push
adc
pop
fdiv
push
call
cmps
cmps
or
js
xchg
add
push
push
outs
imul
xchg
sbb
nop
je
adc
xchg
cmp
mov
test
int
retf
rcl
loopne
fld1
and
mov
pop
dec
adc
pop
mov
mov
test
jnp
mov
mov
int3
mov
mov
sbb
test
lods
sti
ins
rol
cli
mov
or
dec
sbb
or
ret
xchg
aas
bswap
push
mov
scas
push
jl
ficomp
jnp
or
jo
pop
or
das
add
or
jle
sbb
lods
inc
int
pop
xor
or
rol
mov
and
push
and
sub
sbb
adc
ror
xchg
fiadd
mov
mov
aad
adc
or
(bad)
test
xor
ror
aad
(bad)
and
ins
and
adc
or
fcmovb
arpl
and
jae
mov
es
out
aas
xchg
inc
(bad)
jg
sbb
in
ret
int3
xchg
dec
xor
pop
sar
jg
lahf
jle
push
std
aas
rcr
jg
mov
jmp
shl
ror
(bad)
aad
or
rol
xchg
xchg
rcr
(bad)
sub
pop
cmp
inc
or
(bad)
in
or
scas
push
add
popa
es
or
shl
mov
xchg
or
daa
lea
inc
jecxz
test
in
mov
or
lock
pop
jmp
fdiv
xor
cmp
mov
adc
or
call
dec
cwde
sbb
mov
loope
loop
cdq
mov
(bad)
cmp
and
fimul
jle
dec
jecxz
rcl
jne
mov
pop
mov
dec
pop
mov
dec
aas
call
adc
and
dec
xchg
aas
and
rol
shl
add
cmp
xchg
jno
bound
or
pop
sbb
out
cmp
stc
shr
inc
lea
sar
and
mov
pop
and
lock
mov
or
jo
jno
lahf
pop
aam
push
xor
int
or
lea
imul
in
adc
sbb
popf
mov
xor
xlat
mov
inc
push
nop
lods
retf
mov
and
mov
scas
push
fwait
adc
sub
popa
jmp
jmp
mov
imul
lods
imul
les
push
sub
(bad)
movs
fsub
mov
sub
cmp
rol
dec
add
mov
dec
mov
imul
dec
test
aam
inc
fmul
sbb
mov
xchg
es
pop
xlat
loopne
or
adc
rol
scas
push
xchg
ins
cmps
push
and
xchg
add
movs
loopne
xchg
push
call
mov
and
cmc
push
(bad)
pop
add
xchg
and
sbb
inc
fwait
daa
pop
xlat
jo
sub
add
pop
push
pop
add
mov
add
xchg
sbb
adc
push
add
out
push
mov
and
xor
xor
xchg
xchg
ret
push
int3
shr
in
xor
mov
pop
test
and
adc
dec
sbb
and
inc
sbb
add
jo
dec
xor
aam
xor
movs
js
(bad)
mov
add
aaa
adc
add
lea
adc
push
in
test
lods
mov
clc
or
or
arpl
(bad)
or
xor
aaa
shl
xchg
inc
ficomp
jmp
push
or
loope
aaa
xlat
xor
test
fdiv
mov
(bad)
add
sbb
cmp
jmp
aaa
arpl
aaa
(bad)
cmp
and
aaa
mov
cmp
dec
retf
inc
popa
adc
jnp
cmp
jo
daa
lea
push
add
cmc
imul
aaa
aad
ret
mov
jnp
push
mov
lods
mov
fild
sub
les
sbb
test
mov
iret
lods
shl
xor
push
xchg
ret
shl
cmp
ret
(bad)
dec
fdivr
xchg
jg
dec
dec
arpl
and
bound
xlat
xchg
mov
jo
call
push
or
cmp
fisubr
add
in
sub
sbb
das
loopne
add
or
or
sbb
sbb
push
add
fdiv
daa
push
lock
pop
xor
daa
iret
pop
ret
adc
push
enter
aaa
mov
cmp
pop
sub
movs
iret
mov
mov
ret
iret
test
xlat
mov
jo
cmp
ret
jns
sar
or
ret
imul
adc
jmp
inc
fild
adc
mov
pop
mov
pop
xor
fstp
hlt
(bad)
int
fiadd
leave
mov
enter
fild
in
inc
xor
aaa
push
into
and
call
mov
dec
dec
adc
sub
or
lahf
push
and
loopne
add
mov
ret
jno
loop
dec
adc
cli
sbb
iret
add
xchg
pop
clc
inc
aam
pop
lahf
loop
in
test
mov
loope
cs
das
mov
in
sbb
jae
mov
cmp
loop
jmp
inc
outs
push
(bad)
in
call
ficomp
sbb
scas
add
pop
loopne
xchg
sub
add
outs
fwait
iret
sbb
(bad)
push
add
jg
and
cmp
jge
adc
mov
shl
push
(bad)
fsub
popa
sbb
xchg
ds
jno
xchg
cmp
jle
xor
dec
fistp
mov
enter
in
mov
neg
repnz
je
or
inc
imul
fadd
xchg
mul
fucomip
lsl
adc
mov
sar
xor
push
sbb
aas
in
into
push
out
adc
push
adc
mov
popa
(bad)
cmpxchg
popf
sub
pop
pop
jle
enter
cli
dec
cld
fcom
cs
mov
test
arpl
xchg
pop
or
cmps
mov
cmc
in
test
mov
aad
sbb
fisttp
mov
jo
xor
inc
pop
movs
push
and
mov
jecxz
inc
sbb
dec
sbb
(bad)
xor
call
retf
inc
hlt
add
shl
aaa
push
sub
add
pusha
xor
and
ror
jmp
push
cld
(bad)
icebp
hlt
jmp
test
jmp
imul
(bad)
add
test
(bad)
ds
xor
push
inc
or
add
pop
idiv
fcomp
loop
pop
cld
jmp
out
xlat
div
or
shl
jbe
clc
add
cmp
mov
nop
jg
adc
xchg
pop
je
mov
add
ror
and
ds
xor
dec
cmp
push
jmp
push
dec
adc
push
inc
xchg
push
sub
enter
sbb
xor
and
rcr
push
push
ficom
call
loopne
jge
mov
sahf
or
js
push
ins
inc
movs
mov
cmp
fdiv
loope
ins
xor
(bad)
push
mov
xor
shr
add
dec
mov
cmp
lds
mov
or
int
call
adc
(bad)
out
or
or
pop
inc
dec
jne
std
or
mov
and
or
cs
push
add
push
xchg
xchg
or
jl
jo
mov
leave
test
push
add
sbb
call
or
mov
or
shl
dec
dec
jo
and
inc
or
(bad)
mov
pusha
rol
addr16
addr16
fistp
add
(bad)
sbb
nop
daa
adc
or
test
cmps
cwde
xor
sub
inc
push
mov
mov
add
ret
inc
and
lahf
push
mov
cwde
loopne
ja
jae
add
inc
jmp
jmp
test
aas
call
pushf
ret
aas
cmp
call
stc
jmp
ret
ficom
mov
fbld
loopne
sbb
pop
pop
idiv
leave
mov
pop
xchg
sbb
cmp
pop
adc
out
in
adc
or
push
inc
fcomp
add
les
xlat
add
push
test
push
mov
hlt
xchg
or
adc
pop
adc
add
mov
cli
jo
ror
jno
loopne
loop
shr
lods
pop
xchg
push
inc
adc
je
mov
pusha
nop
mov
loopne
and
inc
dec
mov
or
popa
add
or
jl
adc
add
push
pop
lods
adc
or
and
xchg
add
(bad)
fwait
std
or
pop
sbb
adc
xchg
mov
or
sbb
adc
sti
pop
push
test
or
loope
inc
pusha
test
sbb
test
jmp
sub
push
ja
pusha
imul
pop
push
rol
fs
and
push
lock
neg
out
test
jmp
sbb
out
cmp
cmp
xor
mov
mov
push
nop
pushf
pusha
sti
out
ins
and
leave
out
test
jo
jb
pusha
cld
mov
mov
jl
add
pop
jno
pop
sub
push
mov
xchg
pop
pop
inc
add
mov
or
mov
cmc
mov
shl
sbb
inc
inc
ror
xchg
movs
inc
or
mov
pop
push
lods
mov
test
repnz
sub
add
add
lds
push
and
ss
sbb
rcl
and
adc
pop
sub
push
(bad)
je
jmp
adc
xchg
ficom
out
test
lock
sub
das
js
hlt
mov
das
pop
iret
hlt
pushf
pusha
inc
and
das
hlt
cld
or
cmp
daa
cld
pop
mov
cmp
cmps
adc
gs
je
arpl
dec
mov
clc
(bad)
mul
aad
daa
adc
sbb
push
cld
sbb
std
xor
test
sbb
aaa
or
repnz
push
add
iret
mov
adc
aaa
not
mov
and
mul
aaa
push
adc
sbb
push
mov
cmp
or
mov
mov
inc
mov
adc
cld
pushf
mov
jl
mov
mov
or
dec
div
je
push
or
mov
mov
and
dec
mov
or
and
sbb
or
or
push
inc
mov
not
test
push
scas
mov
clc
mov
mov
ret
(bad)
add
scas
leave
shl
mov
adc
mov
sub
mov
push
cld
movs
jl
cmp
jle
add
stos
sar
jle
jne
inc
add
fadd
add
or
pop
xchg
or
outs
lods
je
addr16
into
inc
mov
addr16
(bad)
add
xor
adc
adc
sbb
(bad)
add
push
(bad)
icebp
es
mov
push
or
daa
inc
mov
adc
pusha
outs
cli
lea
push
ss
xlat
jg
add
add
add
sub
outs
jnp
lock
inc
or
add
sbb
pop
or
pop
xchg
test
ret
push
in
inc
test
loope
aaa
dec
add
or
arpl
jns
lea
lods
push
fsub
call
add
fidiv
adc
mov
mov
scas
sub
pop
pusha
sub
jo
add
and
dec
pusha
cmp
jge
dec
jne
push
fist
add
rcr
inc
cmp
test
daa
adc
outs
or
or
adc
xchg
cmps
mov
push
add
add
xor
add
push
repz
sbb
inc
(bad)
ficomp
pop
adc
test
int
add
ret
push
scas
test
push
ins
dec
or
cld
xchg
inc
dec
bound
mov
inc
or
nop
outs
test
and
dec
int3
popa
sub
mov
outs
push
push
dec
repnz
sar
outs
add
pop
pop
add
adc
xchg
(bad)
add
mov
(bad)
sub
dec
xchg
outs
jmp
dec
push
mov
outs
jns
sbb
jmp
shl
outs
bound
adc
or
test
outs
les
mov
leave
dec
adc
js
jo
outs
lods
fild
fisttp
sbb
sub
inc
dec
sbb
(bad)
pop
push
add
pop
add
scas
mov
out
add
inc
rol
scas
fsub
rol
add
mov
in
test
adc
mov
mov
pop
inc
mov
push
mov
push
sbb
sbb
sub
lahf
pop
add
and
push
pop
rcr
adc
push
leave
stos
lahf
clc
ins
inc
and
lahf
rol
adc
lahf
jns
shl
test
stos
outs
movs
add
lock
in
add
daa
sbb
push
jb
sub
ret
adc
pop
lods
adc
pusha
jg
jg
loopne
mov
or
jnp
mov
out
xor
push
cmp
jnp
or
pop
push
or
or
in
(bad)
pusha
out
pop
adc
pop
dec
jb
or
or
out
adc
jb
pusha
cld
out
hlt
xchg
add
jns
sbb
rcl
xor
adc
push
mov
inc
sbb
push
movs
pusha
inc
out
inc
sbb
loopne
inc
mov
out
jns
leave
mov
stos
mov
mov
jo
stos
xchg
jne
lods
add
sbb
sbb
mov
cmovnp
and
inc
ja
push
scas
pcmpgtb
dec
dec
jb
push
int3
and
push
test
pushf
adc
xchg
mov
movs
je
add
clc
es
(bad)
sbb
call
sbb
ror
adc
fdiv
pushf
sbb
pop
test
sub
push
loopne
adc
jmp
xor
jo
rcl
push
xor
xchg
jns
mov
rcl
jmp
pop
fsub
aam
adc
or
mov
cmps
sbb
sbb
push
push
mov
cmps
adc
xlat
(bad)
enter
fbstp
aaa
and
sub
adc
shl
lahf
lods
lods
or
sbb
cmp
pop
pusha
adc
sti
into
pop
arpl
je
popa
sub
or
xor
nop
push
inc
mov
daa
out
add
and
or
nop
sbb
aad
adc
dec
sub
(bad)
mov
das
inc
sbb
addr16
adc
mov
imul
jo
cmp
fbstp
add
adc
add
cmp
test
daa
dec
add
xlat
add
cld
and
pop
enter
sub
push
(bad)
mov
add
xor
push
(bad)
sahf
pushf
push
leave
mov
pusha
stos
inc
or
movs
adc
mov
lods
(bad)
adc
and
pop
aad
push
adc
dec
dec
add
cmps
fadd
fist
add
sub
lods
cmps
sbb
cmps
iret
fild
test
sbb
lock
adc
or
pop
sub
pop
push
ds
xorps
je
sbb
fucom
nop
pushf
in
sbb
les
call
push
or
sbb
pusha
addr16
loopne
pusha
adc
pop
or
(bad)
jl
push
js
cwde
add
sbb
push
mov
call
sub
test
sub
and
(bad)
sub
inc
shl
rol
rol
mov
dec
addr16
add
addr16
cs
dec
add
pop
add
cwde
bound
(bad)
mov
lods
pop
sbb
pop
addr16
adc
pusha
shl
adc
frstor
retf
dec
sub
out
out
mov
daa
adc
nop
mov
js
shl
inc
push
js
aaa
loopne
and
cmp
adc
int
and
pop
call
add
and
js
xor
lahf
dec
xor
push
js
lahf
mov
pop
dec
ins
rcr
ins
push
push
mov
out
dec
pop
add
mov
push
xor
cmc
mov
add
stc
add
lods
lahf
inc
or
and
nop
pop
xchg
adc
xor
cwde
lea
(bad)
rol
sbb
jg
pop
cwde
xchg
mov
cmps
sbb
push
and
push
and
add
call
and
stc
daa
and
repnz
in
pop
and
dec
or
out
cmp
cmp
sub
ss
sbb
or
jo
jno
loopne
(bad)
push
mov
out
aaa
push
xor
movs
nop
inc
push
jo
add
imul
add
vdivps
iret
cmp
mov
xchg
or
lods
out
inc
pop
rol
and
out
div
pop
push
sub
inc
add
add
sub
push
js
fdivr
xor
and
sub
mov
addr16
push
mov
sub
fisttp
add
pop
dec
add
das
add
inc
cmp
sub
add
xchg
shl
fs
dec
push
ret
mov
sub
pop
out
or
push
add
adc
inc
add
mov
in
mov
add
mov
rcl
ret
(bad)
push
push
loopne
cmps
daa
addr16
repnz
cs
or
cdq
push
and
inc
pop
(bad)
repnz
ret
cmc
sbb
cmp
das
and
das
dec
push
or
adc
pop
mov
xchg
sub
push
inc
mov
push
shl
pop
xlat
ins
adc
lock
dec
xor
adc
inc
or
xor
pop
jb
xor
loope
adc
xor
push
add
xor
mov
mov
add
or
iret
adc
adc
nop
nop
or
and
stos
cmp
pop
lahf
pushf
or
push
sub
xor
nop
adc
fcomp
lock
dec
lahf
xor
jo
pop
lahf
push
xor
xchg
pushf
inc
mov
rcl
jmp
lahf
fadd
in
sbb
pop
sub
add
lea
xor
fs
push
dec
cs
mov
mov
ds
in
pop
xchg
or
sahf
test
mov
add
ss
push
lods
xor
ss
loopne
inc
mov
and
cmps
pop
xchg
push
add
lods
jmp
mov
inc
or
(bad)
pop
push
std
sahf
and
or
mov
jp
sub
test
hlt
scas
cwde
jnp
inc
sbb
stos
xor
inc
mov
ss
jne
in
push
scas
mov
push
nop
ss
ss
dec
xor
stc
movs
adc
mov
into
sbb
pop
or
bound
div
xor
cmp
lock
push
sub
jp
mov
jo
je
adc
push
jae
and
adc
dec
pop
test
add
add
mov
mov
inc
add
inc
popf
add
popa
lock
stos
shl
mov
and
lea
push
jne
push
mov
pop
jb
lods
xlat
(bad)
pop
pop
scas
add
mov
scas
push
dec
cwde
add
and
sbb
mov
and
sub
mov
add
add
or
lods
cmp
test
test
or
push
add
stos
mov
jne
or
and
mov
mov
add
nop
js
xor
push
pop
paddq
test
daa
adc
dec
jb
loopne
cmp
cld
cmp
and
dec
cmp
cmp
xor
mov
mov
test
out
mov
je
dec
in
cmps
sbb
add
dec
mov
or
out
push
stos
in
cmp
out
mov
test
and
sbb
rcr
sub
out
les
inc
pop
adc
fimul
nop
mov
sub
lods
dec
lea
adc
dec
shl
inc
add
or
arpl
outs
lea
mov
add
xor
aaa
xchg
shr
mov
shr
cmp
xor
push
push
nop
adc
push
add
push
fadd
fist
ja
cmp
mov
cmp
inc
test
adc
sub
ja
cmps
mov
aaa
sti
int3
jmp
cmp
adc
imul
jmp
or
adc
jl
cmc
shr
add
or
shl
add
ret
xchg
retf
pop
inc
pop
(bad)
cs
push
dec
mov
add
dec
or
push
mov
add
push
mov
es
cli
or
call
sbb
movs
cwde
jecxz
inc
push
add
out
(bad)
push
cmp
pusha
inc
or
and
rcr
dec
bound
xor
(bad)
aaa
(bad)
les
ss
or
js
rcl
xor
aaa
xor
jecxz
adc
add
or
ins
pop
inc
pop
add
dec
enter
pop
pop
dec
test
test
adc
inc
mov
add
or
dec
adc
movs
sub
fbstp
and
or
and
pop
mov
js
xchg
aam
or
push
inc
dec
bound
lods
das
xchg
sub
mov
pcmpeqb
pop
fisttp
ins
(bad)
aam
mov
cmp
lea
push
lock
lea
push
fisub
mov
es
addr16
inc
adc
addr16
data16
sbb
sub
addr16
sbb
or
jmp
mov
add
push
mov
(bad)
inc
(bad)
push
inc
outs
ins
jo
jb
jae
outs
cmp
arpl
push
or
je
xor
cld
jmp
outs
outs
imul
jae
and
mov
add
push
jns
je
cs
outs
and
gs
jne
fisttp
add
inc
inc
int3
add
push
(bad)
add
stos
push
lea
sub
iret
cmp
nop
push
jo
int
xlat
push
loope
(bad)
(bad)
cmp
in
fdivr
add
pop
and
push
cld
es
ja
ret
add
call
add
jl
push
dec
pushf
jge
dec
repz
imul
push
je
outs
fld
add
add
inc
add
push
(bad)
retf
and
jno
ins
xor
mov
in
add
or
addr16
sti
mul
xor
ins
data16
push
add
adc
push
ins
ja
or
outs
mov
jne
addr16
or
sub
jnp
or
shl
jp
adc
mov
add
lods
xlat
inc
imul
fmul
sbb
sbb
dec
lahf
pop
aad
push
xchg
sub
jg
xor
(bad)
out
fild
les
cmp
pop
push
dec
adc
or
outs
mov
mov
outs
sbb
outs
dec
pop
mov
push
fidiv
jg
mov
mov
psrld
push
push
push
lock
sub
gs
jb
popa
jns
popa
outs
popa
addr16
addr16
adc
ror
imul
retf
nop
inc
jb
fidivr
gs
jp
push
outs
and
ret
xchg
outs
loope
aaa
pusha
jbe
jns
sbb
int
sbb
(bad)
xchg
or
push
ins
imul
mov
std
retf
scas
add
stos
scas
pop
aad
sub
dec
xor
sbb
lods
ins
push
and
fsubr
push
cmp
add
popa
pusha
adc
cmps
scas
jge
dec
inc
je
cmp
or
jg
xor
dec
imul
lods
rcl
ins
xchg
push
popa
imul
sti
rcr
inc
mov
adc
stos
cs
(bad)
outs
push
iret
add
mov
aas
mov
dec
out
or
mov
push
cmp
mov
arpl
cmp
ret
xlat
dec
outs
or
inc
int3
out
aam
inc
adc
push
idiv
jb
dec
bound
adc
mov
push
xlat
into
push
pop
or
sub
pop
add
pop
js
fs
sub
add
fs
loopne
add
inc
xor
adc
ins
jae
dec
inc
push
scas
sbb
popw
mov
les
loop
mov
xor
lar
lods
jle
stos
js
lock
dec
outs
mov
mov
into
and
ins
push
xor
adc
lahf
mov
adc
out
cmp
and
test
push
or
lea
xchg
cmc
(bad)
std
(bad)
adc
lea
xor
inc
lds
push
xor
add
mov
fcomp
pushw
inc
outs
jne
inc
bound
add
pop
adc
imul
dec
fisubr
movs
(bad)
daa
outs
cdq
sbb
test
mov
inc
ins
jo
inc
pop
arpl
add
add
daa
scas
push
enter
inc
mov
or
mov
cmp
push
add
inc
add
or
sub
jbe
adc
inc
lods
pop
cmp
(bad)
aad
inc
stc
dec
jp
repz
inc
and
mov
xor
loopne
xor
inc
jb
sbb
lods
(bad)
lea
fsub
xor
pusha
aam
fwait
pusha
inc
shr
fst
xchg
add
add
or
dec
imul
xchg
jbe
mov
or
(bad)
mov
lds
retf
in
sub
push
push
ja
add
push
add
movs
mov
push
mov
add
pop
inc
jne
fidiv
loopne
imul
cld
lahf
div
push
xor
push
cdq
das
out
ins
push
and
sub
jg
adc
push
push
js
push
push
dec
push
push
fwait
sub
mov
dec
jnp
and
jno
jae
mov
sbb
sbb
test
cmps
(bad)
sub
sub
shl
ins
sbb
or
mov
push
ins
dec
jp
mov
jge
dec
in
dec
lods
adc
push
dec
mov
push
push
js
push
fwait
leave
enter
paddd
outs
jbe
fs
mov
xor
in
(bad)
stc
cs
sbb
jb
cli
cmp
pushf
mov
(bad)
jae
add
pushf
cmps
int
je
dec
dec
dec
dec
xchg
call
cmp
sub
mov
out
cs
cmp
sub
inc
push
pop
stos
cwde
mov
jno
push
mov
fs
add
es
sub
mov
(bad)
imul
add
ins
push
pop
push
dec
(bad)
or
inc
xor
mov
mov
cmp
jno
movs
xor
das
fdivr
je
test
daa
in
cmps
adc
sub
outs
jns
jp
cmps
adc
add
psubsb
adc
add
addr16
adc
adc
or
inc
push
popa
jg
add
dec
jg
(bad)
push
push
xor
inc
inc
fs
int
mov
fnstsw
jmp
popa
ins
jne
arpl
sub
mov
push
xchg
jle
sub
xor
add
rcl
or
rcl
cdq
ja
loope
push
mov
sahf
and
pop
inc
movs
mov
add
enter
(bad)
rol
pop
inc
movs
or
jns
and
xchg
and
das
leave
fwait
pop
cmc
sbb
add
arpl
dec
in
sub
pop
xor
test
mov
(bad)
jo
jmp
adc
es
dec
imul
cli
in
jno
loopne
call
or
push
or
sbb
lea
add
in
sbb
mov
pop
lods
jecxz
xchg
in
or
mov
js
jo
pop
add
sbb
xchg
push
xchg
loop
jb
add
sub
add
pop
mov
mov
fsub
arpl
jge
js
mov
and
xchg
mov
test
int3
dec
or
ja
or
out
pop
add
push
lds
dec
ror
shr
dec
popa
pop
and
mov
inc
inc
mov
jo
loope
into
add
cmp
into
je
nop
jae
je
imul
mov
stos
ss
xchg
sar
dec
popw
dec
inc
dec
outs
cmc
imul
sbb
jo
test
push
or
daa
jns
retf
mov
mov
push
outs
fild
imul
pusha
ror
push
stos
pop
data16
hlt
sbb
or
and
dec
or
sbb
adc
and
mov
pop
xchg
mov
xchg
dec
test
std
aaa
sub
ins
mov
jae
into
cmp
push
ret
or
pop
inc
mov
pusha
and
adc
sub
and
or
inc
xlat
push
and
scas
imul
pop
arpl
or
stos
xor
loop
loope
or
popf
call
add
jb
daa
cmp
inc
add
mov
or
push
call
sub
dec
inc
les
pop
push
xor
imul
add
mov
push
aas
dec
mov
pop
push
jg
inc
sbb
push
cmp
sbb
lea
inc
push
add
and
and
loopne
sub
aas
cmp
prefetchnta
and
push
inc
mov
cmp
push
cmps
inc
jns
add
add
outs
mov
pop
push
das
outs
push
pop
cmp
out
stos
mov
add
(bad)
ins
into
pop
sbb
adc
and
test
add
inc
stos
adc
cmp
pop
mov
retf
add
or
inc
mov
fdiv
pop
mov
sub
pop
mov
push
sbb
sbb
fst
adc
pop
xchg
push
mov
dec
das
xchg
jnp
and
or
(bad)
fcomp
adc
aas
das
sbb
dec
ja
push
into
inc
xor
in
fiadd
(bad)
mov
add
sbb
xchg
jbe
ret
test
stos
push
jmp
test
into
test
or
or
div
sbb
xor
call
pop
sub
jo
mov
inc
jecxz
in
add
push
das
jge
add
or
sbb
into
repnz
(bad)
mov
jle
fwait
jg
jo
aas
neg
jbe
loopne
data16
adc
cmp
lods
push
ret
(bad)
sbb
push
inc
pop
popa
sbb
xor
mov
imul
xor
push
pop
adc
sub
mov
mov
(bad)
(bad)
jo
jmp
jo
push
mov
fstp
ja
push
lock
pop
and
xchg
pop
xchg
rcl
and
leave
leave
pusha
scas
cld
and
push
mov
or
mov
and
imul
xchg
dec
inc
sahf
pushf
icebp
sbb
dec
dec
mov
jmp
(bad)
push
je
mov
inc
push
mov
push
and
call
mov
call
cmp
mov
dec
or
mov
dec
sub
jno
xor
push
daa
inc
mov
sbb
add
mov
push
or
es
(bad)
mov
loop
mov
push
sbb
les
cmps
pop
and
mov
pop
xchg
mov
aas
ja
sub
test
pusha
int3
cmp
cmc
cmp
out
xchg
inc
jo
and
mov
jecxz
rcl
lea
gs
cmp
pushf
mov
xor
cmp
cmp
mov
push
pushf
or
sub
jno
add
inc
adc
mov
xor
sub
fdiv
inc
cmp
xor
inc
add
mov
cmps
push
xor
adc
mov
mov
mov
and
(bad)
push
or
test
fadd
push
xchg
cmp
cmp
loop
mov
adc
mov
mov
pop
cdq
mov
inc
pushf
pop
xor
pop
jge
push
dec
pushf
pop
inc
(bad)
adc
xchg
pop
jns
push
xchg
or
pop
push
push
mov
xchg
dec
mov
add
cmp
xor
pop
or
out
push
sub
jmp
cmp
pop
mov
lea
sub
dec
imul
loopne
mov
xor
pop
or
pop
je
and
mov
shr
mov
cmps
mov
mov
sahf
xor
call
pop
push
sub
test
les
ins
adc
and
mov
xchg
pop
in
sub
mov
aas
hlt
mov
getsec
push
sbb
pop
je
add
add
ins
jbe
mov
pusha
das
jle
pop
frstor
push
and
push
pushf
nop
aam
add
cmp
loopne
hlt
test
sbb
xchg
or
adc
mov
and
pop
std
js
adc
pop
dec
jns
push
jno
popf
cmp
or
push
add
int
mov
add
(bad)
push
cdq
lods
rol
and
sbb
in
or
(bad)
push
es
das
in
lea
aam
xchg
loopne
(bad)
mov
cmp
push
add
or
and
inc
cmp
push
mov
aas
or
and
pop
sbb
sub
or
sub
sbb
sub
pusha
xor
pop
inc
test
pop
test
mov
and
pushf
(bad)
fdivp
jne
js
lods
or
neg
push
or
mov
or
xchg
dec
cmp
push
mov
jne
sbb
and
mov
adc
pop
xlat
ret
mov
xchg
fmul
imul
xor
add
fwait
test
xchg
pop
pop
xchg
lods
cmp
cmp
fwait
push
xchg
fstp
ja
fisttp
ror
enter
mov
in
leave
cdq
out
xchg
inc
repnz
in
shl
xchg
sbb
xor
or
push
cmp
cmp
jns
ret
pushf
mov
cdq
push
mov
sahf
add
cmp
dec
add
sbb
push
xchg
punpckhbw
and
cmp
iret
jge
pop
push
movs
out
dec
ss
or
aad
inc
push
xchg
cs
add
pop
aad
add
mov
lods
fwait
sub
(bad)
(bad)
daa
and
inc
aad
jae
mov
mov
aad
cdq
jo
ins
push
loope
ret
vpaddusw
mov
xor
aad
pop
and
mov
out
bound
aad
add
or
je
fwait
gs
sbb
lea
mov
jne
enter
or
jo
rcl
adc
adc
or
inc
push
enter
sbb
adc
shl
inc
adc
mov
xor
adc
aad
jne
and
pusha
and
sub
sub
aad
pop
int
cmp
bound
mov
add
lods
jae
add
lods
aad
sub
xor
aad
test
adc
adc
(bad)
aad
pop
add
inc
pop
sub
aad
dec
lds
je
xor
xor
mov
xor
mov
mov
aad
(bad)
aad
sbb
fsubr
aad
xchg
xor
dec
or
pop
dec
inc
mov
mov
out
inc
out
call
(bad)
sbb
adc
xor
push
sbb
adc
mov
lea
call
pop
pop
push
inc
dec
or
push
cmp
sub
int3
or
cmp
push
sub
dec
clc
cmp
pop
mov
cmp
sbb
jmp
lods
push
cmovs
and
pop
popa
or
js
xor
dec
inc
add
fsub
dec
inc
mov
cmp
dec
movs
bound
adc
pop
sub
cmp
push
rcl
movs
cli
push
jae
jns
fsubr
lahf
sti
add
mov
dec
add
or
add
push
push
add
pop
cwde
das
mov
out
repnz
outs
outs
add
jp
or
movd
ret
mov
ja
sbb
xchg
cmp
jnp
pop
mov
adc
mov
or
and
xchg
std
mov
shr
inc
push
adc
shl
mov
rol
or
scas
xor
out
pop
stos
inc
jne
icebp
adc
paddusw
pop
es
das
pop
or
aam
out
fmul
fnstcw
mov
(bad)
and
push
add
lods
pop
jmp
mov
push
or
push
or
pusha
sub
pusha
and
addr16
sbb
lock
pop
push
add
inc
adc
mov
xchg
or
and
dec
push
add
xchg
add
add
and
xor
adc
(bad)
mov
push
lock
lods
das
add
aaa
push
xlat
mov
dec
clc
lods
push
sbb
inc
test
add
and
sub
add
adc
sub
and
imul
push
add
sub
aaa
dec
test
add
loope
add
or
in
lods
ror
sbb
repnz
fs
clc
inc
stos
jns
jb
xchg
mov
cmp
sbb
out
das
lods
inc
sahf
pushf
mov
dec
dec
dec
dec
jbe
sar
daa
and
scas
jnp
fcom
scas
aaa
sbb
sub
cmp
imul
push
cmps
mov
jecxz
add
pop
fs
push
cmp
mov
jg
js
ins
dec
or
adc
pop
jno
push
add
daa
movs
pop
and
and
xor
add
shr
fwait
sub
pop
mov
inc
sbb
mov
shr
ins
dec
or
add
mov
push
loope
add
int
adc
xor
pop
jae
add
shr
out
js
mov
xchg
or
xchg
inc
sbb
add
sub
or
or
push
and
xor
inc
add
adc
xor
iret
pop
add
nop
and
pop
inc
add
xor
add
adc
add
cmps
or
call
inc
xor
lea
push
ja
pop
ror
add
lods
xchg
or
sbb
add
loop
mov
test
pusha
inc
adc
mov
test
test
(bad)
sub
add
test
sub
sbb
add
aad
fwait
pop
mov
shl
mov
mov
or
dec
mov
or
inc
mov
std
sub
push
mov
sbb
add
bound
sbb
add
mov
pop
adc
or
or
jo
and
add
mov
fbstp
push
bound
inc
sub
cmp
mov
bound
mov
add
adc
mov
and
inc
xor
in
mov
pop
(bad)
mov
pop
(bad)
sbb
bnd
add
cmps
call
mov
cmps
mov
shr
mul
add
jmp
mov
jmp
xchg
xor
enter
jmp
add
sbb
inc
sub
or
cmps
test
shl
add
aas
or
into
movaps
xlat
addr16
xor
pop
cmp
pop
push
aad
fild
push
push
scas
mov
push
test
jno
sbb
mov
sub
sbb
enter
cmp
adc
mov
and
int
push
inc
pop
and
ss
pop
or
push
hlt
or
xor
sub
test
sub
mov
xchg
and
add
mov
mov
mov
es
jp
mov
enter
ins
cmps
adc
test
outs
mov
add
jmp
stos
add
mov
fsubr
push
sub
pusha
xor
(bad)
rcl
fwait
xchg
out
and
cmp
pop
push
sbb
inc
shl
inc
aas
pop
daa
push
pop
jbe
retf
mov
sbb
lods
(bad)
add
add
js
mov
test
add
rcr
mov
push
cdq
inc
icebp
mov
das
out
mov
add
je
mov
sahf
data16
nop
push
cld
push
xlat
adc
pop
or
xlat
sub
add
pop
popa
imul
pop
into
jecxz
in
int
sbb
mov
cmp
aam
push
ja
lods
(bad)
adc
push
push
fwait
xchg
daa
daa
mov
movsx
ss
jp
adc
leave
test
in
outs
mov
jb
xor
cmp
cmp
cmp
into
pushf
pushf
mov
rcl
jae
sahf
pushf
xlat
and
aas
(bad)
out
call
pop
add
stos
fmul
push
mov
pop
vpmacsdql
cmp
and
(bad)
repnz
dec
or
xchg
pop
cmp
xor
xchg
xchg
xchg
push
mov
xchg
nop
or
jb
daa
inc
les
xor
ret
ins
push
sub
adc
ins
xchg
cdq
or
jb
sub
pop
ja
int
add
ja
rcl
xchg
jae
mov
inc
lea
ins
add
mov
xchg
mov
cmp
das
leave
fwait
inc
lods
add
gs
sbb
sbb
or
xchg
pop
stos
xchg
mov
add
inc
lods
add
mov
or
or
adc
test
add
adc
add
imul
imul
adc
dec
lods
imul
and
mov
mov
dec
aas
cmp
adc
mov
aas
imul
and
inc
adc
pop
cdq
aas
sbb
xor
inc
jge
bound
popa
mov
(bad)
aas
test
dec
adc
shr
add
sbb
xor
or
mov
aas
push
mov
retf
adc
aas
test
nop
imul
bound
imul
mov
add
mov
call
add
fs
sbb
mul
xchg
inc
sbb
test
push
push
out
inc
test
and
in
out
loope
inc
mov
adc
sti
std
rcr
push
cli
jo
cs
outs
ja
pop
inc
aam
dec
push
dec
inc
inc
ds
jb
lea
and
sub
loope
or
aas
inc
lods
sub
add
mov
pusha
pop
imul
adc
inc
call
ds
xor
jb
mov
bound
adc
cdq
or
test
sbb
dec
adc
cmp
pop
mov
mov
std
add
rol
push
xor
push
jmp
mov
inc
outs
push
scas
pop
clc
ins
xor
cmp
add
mov
pop
push
lods
jg
mov
lds
push
into
jg
xor
aam
test
dec
shr
arpl
(bad)
(bad)
retf
shr
inc
inc
sub
push
sub
std
shl
adc
out
pop
adc
mov
add
leave
or
fdivr
ss
pop
add
pop
stos
dec
movs
out
push
rol
das
push
add
(bad)
push
jbe
mov
push
mov
add
outs
seta
das
push
push
add
test
fmul
push
mul
pop
push
loop
push
push
sub
or
push
xor
mov
or
rcl
shr
mov
sbb
addr16
add
jne
shr
retf
adc
das
add
pop
pop
adc
ret
add
push
and
das
and
loopne
into
punpckhbw
add
inc
nop
test
sub
lods
shl
add
sbb
jl
sets
ret
test
xor
test
sbb
inc
sete
inc
add
inc
(bad)
cvtdq2ps
retf
jecxz
cmp
into
enter
push
jge
add
push
or
push
push
pushf
int3
ss
ror
addr16
sahf
pushf
fbld
shr
daa
daa
and
shr
daa
daa
jecxz
shl
enter
cld
inc
aam
fs
leave
mov
repnz
in
mov
jb
xor
lods
cmc
aas
push
xor
xlat
(bad)
push
lods
js
(bad)
fstp
fimul
(bad)
sbb
sub
push
inc
jecxz
mov
pop
push
test
lds
add
push
jle
or
mov
add
jno
jno
sbb
xchg
jmp
cmps
adc
pop
add
fnsave
aad
add
(bad)
xchg
sbb
push
inc
xor
dec
mov
pop
sub
ins
push
mov
add
push
mov
fnstenv
call
add
push
jae
adc
inc
out
push
sub
push
xchg
cmp
add
leave
fwait
add
mov
add
dec
adc
mov
adc
add
iret
push
adc
jno
sbb
add
push
inc
add
add
sbb
jae
ror
aaa
inc
call
mov
ja
sub
sub
adc
add
push
outs
xor
adc
lock
jge
adc
pop
add
inc
xchg
add
pusha
push
and
dec
jg
add
das
out
xchg
pop
sbb
add
add
test
aad
test
sbb
fisubr
mov
add
std
or
ret
mov
test
add
pusha
test
or
test
jns
sub
add
xchg
or
arpl
or
loope
call
adc
out
push
push
add
mov
mov
mov
push
gs
add
and
in
add
add
cmp
add
fld
ror
outs
hlt
je
sbb
mov
add
cmps
and
or
or
rol
sbb
add
dec
mov
in
add
fistp
rol
add
xor
fadd
or
inc
push
pop
shl
call
mov
push
cmps
mov
push
xchg
fidiv
popf
out
add
fcomp
mov
mov
mov
ja
ss
fcmovnb
(bad)
and
inc
xor
and
loope
push
test
dec
adc
jmp
pop
pusha
push
or
and
loope
mov
shr
inc
pop
lds
call
mov
mov
cmp
cwde
mov
loope
inc
je
js
(bad)
dec
ficomp
adc
ja
es
das
ror
add
imul
and
(bad)
aam
outs
fadd
stos
pop
sbb
fbld
repnz
loop
pusha
inc
outs
mov
pop
push
(bad)
jno
inc
or
rol
or
xchg
inc
adc
jbe
push
test
lds
bound
cmp
push
outs
out
loopne
xor
mov
das
adc
adc
pop
aaa
mov
push
jne
mov
adc
data16
push
ins
hlt
loopne
dec
push
imul
aaa
mov
in
mov
inc
lods
aaa
xor
inc
lods
mov
imul
mov
inc
sub
xchg
aaa
cs
(bad)
arpl
(bad)
in
out
pop
ss
push
ss
fdivr
outs
push
jae
psubusb
dec
dec
dec
inc
push
xchg
fisubr
daa
daa
daa
and
ror
xchg
xchg
xchg
xchg
in
mov
leave
leave
leave
enter
lahf
out
in
in
out
push
jnp
repnz
mov
xor
jb
xchg
mov
(bad)
ss
test
mov
punpckhdq
cmp
js
mov
add
push
loope
xlat
in
outs
sbb
dec
sub
data16
dec
or
dec
sub
cmps
loope
mov
push
inc
push
xchg
jnp
push
and
add
loope
add
add
loope
test
loope
and
inc
dec
mov
cmps
(bad)
jg
ins
popf
jp
jo
mov
sbb
cdq
je
lds
push
cmp
adc
loope
sbb
xor
fiadd
dec
sbb
dec
cmp
cmp
pop
xchg
das
leave
add
adc
push
loope
mov
cmps
loope
mov
and
mov
and
loope
es
inc
adc
jo
hlt
test
lds
or
inc
ret
sub
add
sub
sub
aam
xchg
adc
jo
xchg
imul
and
mov
fld
ds
lahf
inc
cmps
push
sbb
dec
mov
out
cmp
cmps
add
dec
mov
imul
mov
mov
mov
mov
pusha
mov
inc
add
(bad)
mov
adc
inc
or
xor
cmps
mov
xor
add
adc
sub
fnsave
mov
push
mov
sar
and
pushf
or
outs
shr
or
js
push
pop
pop
sbb
xor
lea
(bad)
ss
push
jne
jmp
in
push
pushf
cmp
sbb
and
aam
add
and
and
call
outs
shr
sub
jo
add
jecxz
pop
aas
ss
jge
enter
and
(bad)
mov
push
and
add
call
out
pop
mov
fstp
push
aaa
add
cli
aam
out
imul
daa
xor
ror
pop
push
test
gs
pushf
pop
inc
dec
inc
cs
ror
and
inc
std
pop
movs
loopne
inc
cmps
pop
push
push
and
int
jne
fwait
or
(bad)
inc
inc
popf
sbb
push
test
pushf
mov
aad
test
out
xor
ja
add
fld
icebp
push
inc
and
cmc
mov
cmps
mov
outs
push
push
add
fdivr
pop
mov
cld
sbb
sub
rol
and
pop
xchg
fnsave
in
jl
or
jecxz
ins
or
imul
cmp
or
aaa
pop
pop
stos
ror
mov
in
cmp
lods
push
jo
inc
cmp
jno
icebp
jnp
outs
sub
push
fsub
sub
jp
rep
ds
jmp
cmp
dec
(bad)
push
push
rcr
cwde
cmp
or
jns
push
outs
lods
cmp
pop
dec
test
push
je
jo
sub
cmc
sbb
add
mov
sub
outs
imul
jmp
lahf
outs
stos
push
sbb
adc
sbb
rcr
neg
mov
adc
dec
dec
dec
inc
inc
xchg
(bad)
adc
daa
daa
daa
and
fsub
xchg
xchg
xchg
stc
dec
ins
xchg
leave
enter
out
and
leave
leave
lods
shl
cs
push
out
fs
std
jbe
fucom
outs
das
cmp
pop
in
fimul
mov
es
adc
dec
test
add
dec
out
xchg
mov
stos
ror
adc
jmp
inc
mov
push
mov
adc
test
xor
jne
jns
aam
jno
add
ins
push
icebp
fsub
fst
cmp
cwde
mov
lds
adc
and
sbb
jns
add
add
dec
jns
adc
cmp
leave
fwait
adc
gs
cmp
jne
push
or
cmp
mov
push
pushf
jns
adc
dec
add
cmp
rcl
jns
or
add
jns
mov
sbb
inc
xchg
xchg
test
xchg
les
fist
sub
push
inc
push
add
cs
cmp
rcl
loop
fld
imul
ins
lds
mov
jns
xor
or
jns
and
cmp
push
daa
(bad)
jns
push
sub
out
rcl
jns
xchg
cmp
or
xchg
xor
xor
mov
sub
sub
jns
mov
push
mov
lea
mov
test
xchg
push
add
jns
dec
les
pop
shrd
aam
sbb
xchg
pop
outs
lahf
ja
xchg
mov
mov
adc
popf
mov
inc
test
xcrypt-cbc
cmps
push
arpl
sbb
adc
push
pop
pop
int
call
hlt
cli
or
mov
cmps
outs
retf
ds
sbb
in
fidiv
jns
cli
ret
sbb
ins
(bad)
dec
rol
adc
xor
push
or
or
mov
call
and
mov
push
push
mov
sub
dec
bound
adc
pop
jne
mov
cmovge
gs
and
mov
inc
add
xor
in
in
jb
sub
inc
mov
into
mov
mov
add
push
lods
mov
xchg
push
ret
pop
fmul
jno
pop
scas
and
push
push
scas
add
mov
adc
and
mov
add
or
or
mov
and
test
xchg
or
sti
pop
clts
sub
push
cmovg
rol
jne
adc
out
push
addr16
jmp
mov
cld
add
add
das
jmp
scas
cmp
inc
push
test
aas
aas
add
jmp
retf
into
cmp
add
loopne
mov
sti
aam
je
fcom
push
adc
pop
test
je
sti
and
jo
rcl
jmp
or
sti
fs
sti
ins
(bad)
push
or
js
pop
outs
pop
add
jmp
retf
mov
aas
pusha
inc
add
jecxz
push
unpcklps
in
cs
icebp
add
pop
push
dec
sbb
(bad)
cmp
js
fadd
adc
test
add
and
push
inc
pop
and
dec
and
ret
dec
and
mov
sub
add
inc
arpl
mov
(bad)
pushf
(bad)
add
ror
dec
mov
or
dec
jge
sub
enter
movntq
or
in
leave
mov
xor
in
lods
loop
or
sbb
jb
jecxz
or
cmp
or
cmp
sahf
pushf
pushf
pushf
nop
mov
and
dec
dec
dec
inc
jo
shl
daa
daa
and
adc
sti
fucom
add
dec
sub
xor
inc
push
fwait
push
cmp
inc
inc
jmp
pushf
fs
push
add
out
cmp
mov
mov
loopne
xor
pop
mov
jno
xchg
cmp
daa
scas
mov
xor
add
sub
and
jl
mov
inc
imul
pusha
dec
add
pusha
ins
push
jmp
add
add
sub
adc
and
sbb
inc
xchg
out
inc
pop
inc
mov
or
icebp
adc
leave
fwait
add
inc
add
sub
mov
and
cmp
ins
adc
mov
test
or
inc
jo
add
mov
add
mov
add
adc
lea
push
mov
dec
pop
or
sbb
ins
sub
sbb
js
mov
mov
add
mov
sar
xchg
inc
add
iret
xor
iret
push
dec
mov
jne
jg
das
out
adc
pop
add
shr
sti
cmp
sub
sti
sbb
sti
imul
mov
sti
inc
add
cdq
sti
adc
mov
sti
add
pusha
or
pusha
test
adc
and
add
jns
push
add
imul
dec
xchg
sar
add
xor
xor
sti
ja
sbb
adc
add
or
sti
fsub
test
sti
mov
adc
inc
je
push
cmp
add
add
in
adc
inc
mov
rcr
imul
test
add
push
or
mov
or
sbb
add
sar
ret
inc
add
arpl
add
mov
arpl
sbb
out
arpl
cmp
sub
adc
pusha
xor
adc
adc
push
loopne
aas
shl
daa
adc
or
iret
jns
add
ret
add
inc
(bad)
frstor
add
adc
push
pop
jmp
stos
lahf
or
in
paddb
sub
leave
push
jo
rol
gs
adc
jne
pop
pop
sbb
int
add
or
popa
mov
aam
scas
pop
test
adc
(bad)
shr
and
push
sub
test
mov
into
cmps
js
dec
(bad)
xor
pcmpeqw
push
cmp
addr16
jge
xor
push
movhps
cli
mov
cli
cmovne
test
push
jne
int
lods
fdiv
sbb
psubsw
in
mov
xor
or
lea
nop
pop
mov
sbb
cmp
push
push
add
sub
fwait
mov
fidiv
rol
fcmovbe
sub
les
pop
lock
sbb
lods
(bad)
mov
ja
sbb
mov
add
sbb
xchg
fisttp
inc
jno
ja
inc
loop
inc
push
jo
cli
pop
dec
repnz
adc
xlat
or
jmp
sub
mov
xlat
pop
adc
sub
xlat
imul
add
dec
xlat
out
mov
(bad)
xlat
add
inc
sub
fnsave
(bad)
ret
push
sahf
mov
sbb
push
pop
and
outs
shrd
and
daa
daa
mov
push
dec
enter
jae
(bad)
pop
in
leave
leave
pop
test
repnz
mov
add
xor
jb
push
jl
jmp
and
mov
repnz
aas
xadd
shr
pop
(bad)
repz
and
push
popa
pop
adc
fwait
es
pushf
inc
mov
sbb
call
pop
movs
adc
mov
pushf
sub
rcl
and
mov
shl
xchg
mov
bound
mov
jmp
dec
dec
inc
adc
(bad)
mov
mov
ins
mov
sbb
push
or
adc
xchg
and
push
push
or
adc
push
or
fucom
mov
xor
das
push
fwait
push
and
and
adc
bound
pop
dec
jo
mov
iret
mov
adc
jno
add
add
or
mov
or
adc
popf
in
aas
out
imul
inc
sbb
adc
shl
jne
mov
mov
sbb
mov
mov
mov
mov
jae
dec
mov
mov
bound
push
adc
std
mov
ins
push
mov
adc
add
gs
adc
add
mov
cmps
stc
mov
ret
inc
mov
cmp
popa
cli
pushf
mov
cmp
add
adc
pop
les
mov
mov
adc
cmp
add
add
lods
mov
pop
jns
outs
lods
sub
pop
fwait
jo
sub
or
fs
inc
mov
and
and
inc
mov
inc
adc
ins
int3
inc
imul
pop
adc
push
inc
add
adc
loope
sub
pop
es
mov
cmp
xlat
jmp
dec
jo
sbb
gs
lea
lods
push
xchg
ds
mov
stos
xor
push
xchg
xchg
dec
xchg
add
sbb
out
and
pop
sbb
and
mov
lock
push
pop
inc
jb
pop
mov
push
adc
push
sbb
and
push
fs
mov
inc
add
imul
jnp
mov
sub
(bad)
call
bound
mov
stos
outs
pop
mov
push
outs
mov
push
cwde
movhps
inc
jno
push
mov
lds
mov
fcomp
lods
jno
jo
rol
lea
and
cmp
inc
sub
inc
and
xchg
mov
sub
inc
rol
add
clc
test
xchg
(bad)
sub
sub
scas
mov
adc
add
push
xchg
lods
inc
adc
test
fisttp
sub
ror
push
add
int3
cmp
scas
or
fdiv
mov
xchg
push
mov
push
pop
mov
add
inc
pop
push
loopne
int
imul
inc
push
cmps
ins
xchg
and
pop
ja
inc
pop
fsubr
scas
xlat
clc
test
sub
jb
lods
(bad)
int3
ja
add
push
mov
sar
push
cs
test
add
inc
mov
out
mov
adc
dec
loop
inc
push
and
test
lock
jo
div
push
sub
test
push
add
ins
imul
loopne
div
das
or
mul
xor
add
rcr
ja
out
mul
xor
leave
lods
ror
xor
repnz
fs
(bad)
xlat
and
xor
int3
add
cmp
sbb
int
xor
data16
mul
ss
dec
dec
inc
push
jp
xlat
daa
daa
and
aaa
pop
xchg
mov
fist
cmp
add
cwde
mov
out
cmp
inc
inc
push
test
dec
jmp
out
push
push
das
stos
push
pop
xchg
fnstsw
add
xchg
add
ss
or
mov
mov
loopne
jmp
adc
add
mov
sub
mov
and
push
pusha
and
pusha
inc
ins
add
jb
push
add
adc
xchg
js
add
or
iret
ja
xor
call
cmc
sbb
adc
lock
xchg
or
sub
mov
cmp
das
leave
fwait
sbb
xor
add
dec
or
add
test
xchg
bound
inc
inc
jno
adc
add
adc
inc
push
loopne
add
xor
add
pusha
add
sbb
and
jecxz
xchg
push
ja
push
mov
adc
scas
mov
shl
add
pusha
xchg
inc
xchg
and
jg
add
rol
inc
inc
pop
xor
cmp
and
pusha
inc
sbb
inc
imul
mov
add
ins
rol
add
bound
sbb
add
inc
jge
pusha
mov
inc
inc
adc
add
and
mov
dec
xor
inc
xchg
or
loopne
dec
inc
rcr
inc
or
in
sbb
push
inc
cmp
cmp
inc
mov
add
mov
in
hlt
inc
inc
add
add
in
inc
rol
sbb
dec
pop
or
lods
sub
add
xchg
mov
sbb
cmp
mov
xor
mov
push
xchg
inc
xchg
ins
movs
inc
cdq
lea
jae
add
sti
xchg
add
mov
push
inc
xor
and
add
sbb
add
jmp
cmp
and
push
sbb
jbe
(bad)
or
ins
add
cmp
ins
cmp
push
push
out
fidiv
icebp
paddb
cmp
pop
out
rol
sbb
fldenv
pop
jne
adc
and
mov
pusha
add
int
sub
cmps
push
sub
inc
std
cmps
add
in
inc
sub
ds
mov
xchg
addr16
fld
aam
daa
mov
push
pop
out
popf
cwde
push
push
aas
dec
cmp
pop
xchg
popf
push
out
iret
add
mov
pop
pop
jbe
add
loopne
out
shl
or
bound
mov
fwait
cmps
mov
jno
xor
int
sub
add
push
rol
pusha
push
dec
pop
aaa
push
pop
jbe
jmp
xlat
lods
data16
into
jecxz
mov
sbb
and
cmp
xchg
xor
in
dec
push
mov
(bad)
cmovae
mov
ret
inc
dec
push
sbb
jl
call
pop
addr16
mov
inc
push
lods
cwde
adc
pop
data16
add
or
mov
or
test
popa
setp
cmp
aam
sti
push
(bad)
jecxz
lahf
cmp
mov
(bad)
xor
in
and
mov
jmp
inc
xchg
loopne
inc
popa
xchg
dec
inc
sahf
pushf
loope
dec
jp
daa
daa
and
dec
cmp
xchg
daa
daa
daa
mov
and
xchg
xchg
xchg
outs
test
repz
leave
leave
enter
iret
stc
sahf
mov
cmp
pop
add
xchg
push
stos
mov
mov
es
daa
loop
pushf
inc
scas
pop
cmp
ins
pop
dec
dec
shr
sbb
movs
adc
mov
shr
xor
mov
pop
daa
and
test
push
(bad)
(bad)
mov
daa
ins
pop
das
adc
push
sub
cdq
sub
pop
sub
(bad)
push
push
or
jae
lods
push
or
xchg
pop
out
xor
daa
xchg
inc
sbb
pusha
(bad)
sub
or
push
lea
pop
dec
adc
mov
test
adc
daa
jno
mov
pop
or
xchg
test
ss
(bad)
xor
jae
nop
sbb
(bad)
retf
mov
inc
int3
daa
aas
xor
inc
mov
sbb
mov
shl
jne
mov
pusha
xchg
sbb
dec
jg
push
data16
pop
pop
or
jae
daa
cmp
pop
or
daa
push
adc
jae
add
lods
daa
cdq
sub
xor
daa
jge
rcl
daa
inc
add
cwde
gs
daa
jns
add
sub
daa
xchg
dec
bound
lods
daa
or
sbb
xor
sbb
adc
pop
int3
mov
daa
test
in
cld
retf
test
inc
nop
mov
sub
(bad)
pusha
(bad)
inc
pop
daa
lea
stos
push
add
aas
int3
sbb
out
dec
aas
mov
mov
sub
sub
cmp
push
out
xchg
inc
fwait
lods
inc
fstp
or
scas
out
mov
(bad)
push
addr16
sub
pusha
pop
jae
(bad)
mov
jo
daa
inc
lds
dec
fldenv
int3
arpl
mov
push
mov
add
inc
and
hlt
jmp
adc
adc
int3
jne
inc
jg
mov
rcl
imul
mov
repnz
movs
es
inc
push
pop
and
add
adc
push
(bad)
and
add
not
jmp
push
out
inc
ja
(bad)
jl
test
into
div
cmp
jmp
and
loop
mov
mov
push
(bad)
pop
jb
je
lds
add
xlat
or
mov
cmps
ins
test
addr16
icebp
or
retf
cmp
cwde
mov
mov
add
imul
jmp
xchg
sbb
out
mov
ror
jge
in
push
jno
pop
push
mov
test
hlt
dec
ja
pop
or
sub
les
iret
mov
and
mov
push
mov
adc
add
scas
loopne
cli
dec
into
push
cmps
or
(bad)
leave
add
add
addr16
xchg
in
add
ret
mov
ret
int
adc
ret
and
ret
pop
add
sub
std
xor
xlat
pop
std
push
cmp
arpl
and
test
lds
mov
les
adc
cmp
push
je
sub
cmps
dec
jmp
or
das
test
jne
xor
inc
outs
addr16
repz
outs
push
jns
or
push
sbb
xlat
mov
and
rcl
xchg
add
push
pop
adc
add
push
fucomip
add
pusha
jle
xchg
movups
add
loope
mov
add
mov
nop
lea
loopne
(bad)
sub
(bad)
in
call
(bad)
and
jo
not
add
adc
sbb
scas
pop
add
xor
add
outs
add
or
push
scas
pop
out
mul
and
jmp
loopne
lahf
cmp
jmp
scas
loop
into
scas
xor
inc
leave
addr16
xchg
test
pop
adc
retf
pusha
push
add
sub
ror
push
pop
and
stos
add
xchg
or
add
std
xchg
xchg
mov
in
mov
call
jg
mov
or
(bad)
adc
adc
addr16
sbb
add
or
call
pop
dec
sub
add
xor
jb
adc
dec
or
add
add
ds
push
cmc
or
sub
inc
enter
push
mov
push
add
pop
pop
mov
pop
push
add
mov
inc
sub
sbb
popa
jne
add
shr
int3
inc
jno
add
inc
movhps
dec
adc
push
inc
shl
ror
les
adc
test
push
adc
frstor
test
je
ja
mov
pop
pop
sub
push
jnp
or
clc
cld
and
push
pop
loopne
rcr
ror
pop
loopne
mov
xor
out
or
addr16
xor
gs
add
movs
xor
xchg
sub
xor
adc
and
push
jno
adc
mov
xor
jle
in
or
dec
in
mov
into
adc
sbb
or
adc
xchg
ins
and
add
and
out
fcomi
push
jns
mov
outs
sbb
mov
xchg
push
fwait
push
movs
fcom
repz
mov
xlat
stos
lock
pusha
push
mov
shl
mov
popa
pop
inc
add
add
add
add
maskmovq
test
adc
pop
xor
cld
xor
and
neg
(bad)
add
sub
not
cmc
(bad)
mov
cmp
mov
js
mov
add
div
adc
pop
(bad)
lds
add
lock
lock
push
(bad)
fild
adc
(bad)
mov
enter
add
xor
rcl
push
pop
jo
fbld
stc
and
sbb
test
or
rcr
xchg
mov
mov
and
int
dec
aad
pop
and
jo
(bad)
std
mov
rol
push
xor
pop
dec
pop
adc
mov
mov
jae
add
and
rcl
add
cdq
sar
fs
mov
popa
imul
inc
test
inc
mov
dec
outs
outs
mov
test
sub
stos
sar
push
sub
add
je
pushf
les
frstor
fisttp
add
pop
enter
scas
test
push
cmovg
add
idiv
or
xor
inc
in
adc
xor
movs
outs
mov
add
and
push
and
mov
or
sbb
daa
pop
pop
jo
arpl
cmp
push
adc
fsubr
outs
mov
pop
adc
cs
adc
shl
jg
std
shl
fs
push
and
aas
lahf
test
seto
lock
adc
inc
cmp
or
mov
inc
loop
ror
jne
add
push
pop
sbb
in
rol
and
std
shr
adc
push
inc
lock
mov
movs
cmp
push
(bad)
in
inc
test
repz
and
add
ja
sbb
push
push
cmp
test
sbb
test
mov
ins
inc
sbb
jo
adc
push
xlat
and
in
pop
(bad)
mov
cwde
js
mov
xor
add
out
cmp
ror
xlat
out
or
jmp
(bad)
sbb
loopne
rcl
sbb
hlt
or
and
add
add
adc
dec
aaa
and
mov
push
and
movs
sub
cs
push
push
aaa
lods
movs
sbb
push
sub
shl
adc
sbb
xchg
jo
popa
inc
mov
mov
outs
aaa
add
outs
pop
sbb
fistp
push
xor
inc
test
xchg
ins
loopne
sar
push
les
sar
mov
dec
add
mov
addr16
not
dec
or
sub
mov
test
shl
add
inc
push
not
cmp
push
push
or
addr16
or
add
mov
or
movs
inc
pop
stc
mov
sub
mov
lahf
jecxz
rol
call
lods
cmp
pushf
out
cs
dec
sub
scas
pop
mov
in
fdivr
add
mov
mov
addr16
fild
out
ds
jo
mov
addr16
loope
inc
jo
lea
movs
outs
xor
and
mov
movs
mov
mov
push
pop
or
cmps
xchg
push
add
add
cmc
pusha
add
fstp
popa
sub
mov
pop
or
jo
enter
(bad)
cld
mov
scas
xlat
or
pop
pushf
xlat
pop
xor
pusha
mov
xor
lea
out
or
xlat
pop
adc
sbb
adc
xlat
adc
adc
dec
aad
inc
add
adc
mov
adc
adc
adc
mov
mov
hlt
mov
push
jl
add
out
movs
icebp
inc
add
adc
mov
and
sub
jbe
dec
fmul
js
sub
mov
out
lock
lods
out
xor
jo
push
pop
cmp
inc
and
mov
popf
lods
fdiv
pusha
push
add
pop
loopne
inc
sub
jo
out
inc
js
sar
out
dec
push
or
add
lods
xor
xor
test
push
mov
adc
push
and
mov
add
push
mov
or
bound
mov
and
add
pop
mov
fldenv
fild
xchg
jnp
inc
inc
out
ret
xor
rol
push
movs
and
mov
std
aas
push
mov
mov
subps
into
aas
push
inc
loopne
lds
jo
jno
nop
scas
xchg
pop
aam
adc
popa
add
sbb
mov
rol
inc
stos
lods
popa
or
add
std
popa
mov
sbb
ret
cmp
sbb
push
jle
fld
push
movs
and
mov
lds
sbb
ret
jmp
add
jge
sub
nop
fiadd
lods
xchg
loopne
jne
jg
mov
push
loopne
div
(bad)
jl
mov
jle
movs
es
mov
pop
and
add
ds
je
imul
add
fmul
in
sub
cmps
xchg
ins
xor
sub
push
sbb
jno
lea
inc
addr16
and
dec
rol
aaa
cmp
inc
jmp
add
push
nop
cmp
call
inc
pop
mov
call
mov
or
pop
loopne
add
js
sbb
das
or
and
jg
sbb
xorps
push
movs
pop
adc
mov
mov
je
ror
xor
mov
outs
sub
addr16
xor
pusha
mov
add
jg
add
adc
(bad)
mov
add
adc
(bad)
mov
arpl
pop
fld
mov
fild
adc
shr
push
pop
sub
add
aas
and
mov
push
pop
repz
or
imul
rcr
ja
dec
push
dec
inc
jmp
jo
stos
rol
dec
jns
shr
and
xor
add
cmp
dec
xchg
stos
js
lds
push
dec
push
add
test
pushf
cdq
gs
out
pminsw
add
ds
or
pop
lds
xor
adc
scas
xchg
mov
addr16
inc
xchg
mov
inc
add
xchg
push
jecxz
ret
hlt
mov
sbb
xchg
out
shl
or
movs
xchg
mov
ror
test
add
mov
pop
aam
repnz
into
mov
(bad)
call
dec
fimul
in
jno
inc
xchg
stos
(bad)
pop
loopne
sbb
into
iret
push
icebp
js
xor
addr16
push
sbb
sbb
jl
inc
push
jne
lds
or
adc
pop
outs
push
and
and
jne
and
adc
add
and
pop
sbb
lds
add
or
dec
inc
shl
add
push
cdq
mov
add
sbb
and
pop
clc
faddp
push
ror
xlat
(bad)
or
and
cmp
mov
addr16
jno
fiadd
cs
(bad)
popa
xlat
mov
mov
mov
add
pop
inc
pop
scas
mov
push
jg
in
add
jle
jnp
ret
xchg
loopne
jg
popa
pop
jecxz
jmp
inc
sub
sbb
pop
ret
sub
mov
sub
push
sub
pop
sub
sub
push
mov
inc
sub
inc
loopne
pop
mov
ret
mov
popa
sub
mov
ins
je
fld
pop
mov
cmp
out
loope
or
nop
enter
lock
cmps
rcl
push
add
js
shl
into
fiadd
inc
jmp
adc
add
jns
push
shl
int
add
nop
test
mov
mov
mov
int
or
in
pop
sbb
sub
xor
adc
add
jno
jo
xor
xchg
sub
mov
and
add
mov
push
xor
mov
stos
add
xchg
xchg
cs
clc
jmp
dec
(bad)
push
shl
add
out
xor
add
rcr
xchg
jnp
les
or
xchg
jbe
or
jmp
or
sbb
xchg
lea
loopne
sub
addr16
xor
push
push
xchg
mov
aas
mov
dec
push
imul
sbb
add
or
es
cdq
cld
aas
add
pushf
(bad)
nop
xchg
pop
or
ret
inc
enter
into
pop
push
test
sub
push
mov
mov
xchg
sub
loopne
adc
xor
mov
test
sbb
pusha
jne
int
jo
add
xchg
adc
or
inc
mov
or
xor
test
mov
add
push
mov
push
cmp
adc
mov
xchg
xchg
xchg
mov
aas
add
push
and
imul
push
xor
outs
adc
sub
out
cmp
adc
outs
mov
out
push
pop
push
add
xchg
pop
fsub
test
inc
xchg
js
jae
push
mov
adc
mov
xor
test
mov
add
arpl
arpl
arpl
add
arpl
xchg
mov
je
xor
in
pop
sbb
push
mov
out
pop
and
add
or
add
lock
push
xchg
mov
xchg
movsx
add
(bad)
clc
push
sub
pop
mov
out
add
into
sbb
pop
das
mov
add
xchg
mov
push
pop
adc
pop
add
adc
adc
adc
add
mov
std
push
and
adc
(bad)
in
xchg
and
add
push
sbb
arpl
add
jle
shr
add
or
cmp
mov
mov
or
adc
pop
sub
aas
sbb
push
sub
ret
pop
rol
out
push
xchg
push
popf
jge
mov
loopne
test
mov
fwait
mov
mov
pop
cmp
add
pop
scas
push
push
mov
in
add
push
cdq
ins
sar
cli
xor
dec
jle
imul
call
pop
pop
mov
addr16
jo
add
inc
jae
add
pop
sbb
lods
inc
mov
add
xchg
lahf
pop
aad
jo
and
and
fucomi
mov
dec
add
sbb
rcl
pop
aam
outs
jnp
loop
pop
ins
(bad)
mov
rcl
inc
mov
lods
aas
jo
loope
xchg
into
pop
das
cmp
adc
mov
mov
test
sbb
pop
xchg
rcl
ror
jo
add
shl
shr
or
mov
adc
in
adc
adc
jl
call
mov
cmp
xor
out
push
out
mov
xchg
lahf
out
push
sub
sub
or
sbb
(bad)
pusha
add
fild
gs
sbb
or
sub
jns
cmp
popa
mov
es
aam
pop
push
jo
fldenv
or
push
mov
inc
mov
sar
xchg
test
ins
xor
ror
push
and
addr16
nop
add
loopne
(bad)
push
push
loopne
mov
nop
sub
(bad)
lea
and
add
pop
mov
sbb
movs
pop
(bad)
jmp
and
or
mov
cmp
loop
es
push
mov
pop
pop
ret
mov
nop
nop
sub
or
push
add
sbb
ror
addr16
das
bound
push
es
mov
nop
xor
mov
das
int
add
cmp
and
dec
mov
add
hlt
pop
pop
sub
pusha
lock
jg
and
add
mov
iret
or
lods
push
or
push
nop
and
push
xor
mov
fbstp
ja
cdq
mov
test
fistp
mov
scas
ins
push
inc
cmps
push
enter
test
dec
mov
pop
ja
add
fistp
jle
enter
popa
rol
adc
mov
scas
lahf
sbb
sub
loop
lahf
addr16
loope
lahf
and
ret
inc
pop
cs
lahf
push
push
lods
sbb
rcr
jne
sbb
inc
cmps
in
dec
lds
cmp
test
ins
mov
stos
pop
sbb
ss
aas
sbb
adc
cmp
add
mov
sar
mov
outs
mov
pmaxub
ror
push
into
pop
aaa
xor
inc
nop
leave
addr16
ss
loopne
test
push
mov
add
mov
add
int
jo
add
and
push
jnp
adc
or
inc
mov
pop
in
pop
mov
cmp
pop
and
xor
or
pop
sub
mov
scas
xor
or
xchg
sub
aam
daa
pop
push
outs
push
mov
into
jbe
test
mov
test
loop
pusha
pop
cmp
mov
mov
jb
pop
mov
add
outs
inc
push
add
ja
(bad)
dec
push
test
xor
sbb
cmp
add
outs
imul
(bad)
xchg
jecxz
jns
call
test
and
outs
cmp
xlat
push
stc
and
scas
or
ins
ins
sbb
loope
add
pop
fadd
inc
mov
add
or
std
inc
inc
push
pop
test
hlt
neg
pop
mov
dec
ja
call
loopne
popf
push
imul
jae
outs
arpl
mov
push
outs
adc
or
outs
jb
pop
cmp
outs
cs
adc
inc
mul
mov
jmp
aas
ins
or
push
jns
test
jbe
mov
je
push
push
jbe
imul
into
test
ja
push
push
retf
mov
(bad)
inc
push
fimul
cmp
jae
push
adc
cmp
xor
jb
cmp
add
ss
jge
test
add
pop
sbb
clc
ret
mov
dec
or
leave
push
sbb
jl
xor
sbb
or
sub
push
pop
sti
and
mov
push
ret
loopne
add
ss
neg
fsubr
jo
push
xor
arpl
stos
mov
inc
gs
xchg
out
xchg
loop
and
or
pop
xchg
mov
xor
jle
push
xchg
mov
sahf
data16
cmps
mov
cmc
mov
mov
mov
jl
pop
in
push
dec
ins
add
pop
mov
mov
clc
ret
rol
(bad)
call
mov
test
push
jl
sub
xlat
ins
fbstp
push
adc
add
adc
ins
mov
mov
lods
jbe
adc
ret
or
data16
mov
ror
ret
pop
in
scas
dec
gs
out
xchg
and
imul
repnz
inc
and
das
push
test
jo
es
jno
sbb
and
push
and
inc
hlt
sahf
inc
pusha
pop
xor
scas
dec
fs
in
and
xchg
test
ror
jae
call
push
or
in
loop
sti
sub
add
add
lahf
daa
xor
es
push
in
fidiv
pop
jae
mov
aad
je
inc
popa
(bad)
aaa
sbb
shl
inc
jmp
imul
add
push
out
xchg
sbb
xor
mov
popf
jo
pusha
lock
mov
lds
push
std
loopne
les
fs
fisubr
fnstsw
outs
dec
xchg
jns
and
xor
test
out
add
push
sub
dec
xor
fisub
sub
push
inc
cs
punpckldq
jns
jb
loopne
mov
mov
cmp
sbb
sahf
ss
adc
daa
mov
adc
out
sub
pslld
in
pushf
retf
mov
push
mov
inc
sahf
pushf
mov
add
dec
dec
(bad)
in
pop
mov
daa
clc
pop
fs
xchg
mov
out
sub
inc
or
adc
jne
mov
ret
jnp
push
push
inc
push
mov
cmp
call
leave
or
inc
dec
ja
dec
push
pushf
jo
data16
(bad)
imul
data16
adc
xor
popf
mov
daa
or
mov
dec
pusha
add
nop
jae
jo
inc
cmp
adc
loopne
mov
out
or
adc
mov
jecxz
fs
gs
ins
bswap
mov
add
add
(bad)
int3
push
jmp
jle
sbb
in
aam
xchg
push
add
add
push
or
call
push
cwde
jne
adc
pushf
or
sbb
cmp
push
and
lea
outs
mov
les
std
rep
xchg
imul
or
add
xchg
add
les
les
inc
addr16
std
mov
aas
and
add
mov
(bad)
enter
sub
(bad)
dec
fnstcw
or
pop
pop
das
punpckhdq
mov
cmps
in
add
add
das
add
adc
mov
jbe
xchg
add
adc
int
xor
jecxz
sbb
outs
adc
outs
popa
bound
mov
fisubr
xchg
outs
rcr
inc
dec
push
(bad)
sbb
inc
cwde
into
sar
push
or
sbb
ficomp
or
adc
xchg
and
jnp
or
aaa
inc
and
sub
add
sbb
jmp
sbb
(bad)
mov
or
inc
loopne
or
inc
or
pop
or
adc
mov
fs
sbb
xor
mov
add
lock
shl
lahf
jo
adc
add
popa
ins
jg
jg
pop
or
xor
adc
sbb
or
xor
mov
je
ja
pusha
mov
push
mov
adc
jo
fild
cmp
pop
push
jne
repz
stos
mov
push
xor
add
or
call
mov
cs
push
fisttp
xchg
loopne
imul
mov
fwait
jno
cs
pop
pop
push
mov
je
data16
adc
jae
push
jecxz
loop
jo
nop
std
xchg
add
xor
dec
sbb
xor
dec
push
and
add
clc
lea
xchg
clc
adc
add
lock
push
into
js
xlat
sbb
push
jg
sub
sub
pop
push
add
fcomp
xor
sbb
mov
mov
addr16
(bad)
or
sub
sub
add
or
cmp
iret
ins
scas
and
dec
(bad)
mov
ins
rcl
xchg
mov
adc
lds
dec
add
add
jb
les
sub
pop
jl
mov
pop
pop
sub
add
outs
mov
xor
das
push
xchg
iret
(bad)
inc
retf
jo
fst
fs
inc
sub
in
or
cmp
popa
xchg
or
xor
aaa
xor
pop
test
mov
inc
ret
dec
dec
aaa
push
and
and
jno
push
hlt
fcom
push
outs
mov
add
inc
pop
xlat
mov
xchg
nop
jg
dec
and
je
dec
add
in
push
mov
cs
and
sbb
cdq
jne
lahf
shr
loopne
rcr
sbb
add
sbb
mov
div
repnz
inc
add
cdq
call
pop
aam
add
sbb
mov
dec
and
add
lds
push
popa
scas
push
out
ja
(bad)
inc
inc
retf
pop
jbe
enter
sbb
jns
inc
inc
jno
xor
or
cdq
inc
iret
mov
pop
je
dec
mov
xchg
push
mov
jge
pop
xor
scas
inc
xlat
gs
xor
or
jae
push
sub
push
jge
mov
inc
inc
pop
pop
dec
add
or
dec
test
inc
inc
lea
into
js
push
jmp
pop
sub
sub
pop
fadd
pop
sub
mov
push
aas
mov
dec
nop
mov
sub
je
jmp
or
ret
std
fstp
mov
xor
add
mov
push
aas
and
test
je
add
nop
push
mov
mov
mov
xor
mov
sbb
repnz
mov
imul
push
inc
or
(bad)
fcmovnu
add
jo
fs
adc
jbe
sub
xchg
fucomp
mov
mov
xor
mov
add
jmp
fwait
or
push
imul
clc
adc
mov
cmp
jge
(bad)
jg
mov
pop
push
das
mov
sbb
imul
lods
jne
pusha
sbb
inc
ins
(bad)
cld
and
dec
loope
mov
or
jle
adc
sub
push
cld
push
push
mov
push
mov
jb
push
loope
push
mov
mov
mov
push
mov
inc
inc
lock
cmp
cmp
jl
cmp
jnp
add
lea
mov
test
mov
data16
mov
es
sbb
jle
mov
add
jo
sbb
ret
sbb
cs
lea
int
push
cdq
and
adc
xchg
sub
pushf
jmp
rol
adc
cmp
inc
cld
(bad)
mov
adc
jmp
pop
ret
nop
cmp
punpcklwd
ret
pcmpeqw
push
jbe
mov
pop
sbb
or
iret
mov
or
jmp
enter
lock
or
add
cmps
fdivr
shl
or
mov
addr16
and
pop
pop
das
jnp
div
mov
ss
jmp
sub
mov
int3
push
jnp
lock
sbb
lock
sub
test
mov
inc
push
hlt
xor
mov
jge
popf
ret
je
ins
mov
xor
xor
in
jbe
or
inc
xchg
xor
cmp
push
inc
mov
push
lea
push
push
dec
lar
mov
mov
sub
inc
lahf
fst
cdq
pop
pop
jmp
or
outs
cmp
inc
je
mov
mov
inc
dec
test
xchg
ret
ret
aas
scas
or
sbb
lock
or
xchg
mov
inc
imul
in
xchg
xchg
inc
mov
xor
mov
test
je
mov
sbb
fmul
inc
adc
pop
mov
push
cwde
jbe
stc
dec
aas
bound
sar
shl
push
lds
mov
mov
ja
or
jmp
inc
mov
(bad)
pop
mov
xlat
xchg
imul
call
pusha
xchg
arpl
mov
fs
stos
or
adc
(bad)
sbb
add
or
jae
adc
push
cmp
cld
inc
es
test
je
cmp
hlt
xor
jne
lods
and
sahf
shr
nop
aas
and
adc
jae
push
push
push
sub
test
and
mov
or
push
(bad)
aad
jo
cmp
mov
test
cmc
jne
push
enter
and
cmp
repz
mov
loopne
pop
fwait
add
add
or
push
popf
or
shl
out
ins
xor
push
inc
repnz
imul
cmp
xor
les
loopne
fcomp
mov
sahf
dec
adc
sbb
dec
rcr
loopne
inc
cmp
jb
add
cmp
mov
ret
or
add
cwde
mov
pop
push
or
or
mov
sub
sub
mov
das
pop
fist
push
inc
or
mov
or
cmps
cmp
pop
ret
mov
jle
call
les
ret
pusha
adc
mov
andnps
pushf
add
ja
outs
or
inc
pop
mov
fwait
mov
mov
push
xchg
arpl
xor
sti
inc
test
jle
(bad)
or
pop
or
out
das
mov
add
ret
je
sbb
stos
out
mov
jmp
inc
push
mov
sbb
out
cmp
pop
mov
jge
jmp
inc
mov
or
push
mov
xchg
push
mov
fsubr
sub
(bad)
repz
ins
add
add
inc
jne
cmp
cmp
test
retf
inc
lea
sbb
push
add
pop
jo
add
add
cmps
jnp
jns
jp
cwde
mov
mov
pop
xchg
loopne
push
mov
clc
shl
test
dec
cmp
push
xor
push
(bad)
arpl
adc
js
(bad)
lock
lock
gs
jb
add
add
pop
retf
and
push
fmulp
and
push
faddp
es
je
jb
push
fiadd
xor
xor
xor
ror
add
dec
jne
dec
jne
stc
outs
dec
sub
xchg
cdq
std
aas
push
outs
adc
xchg
(bad)
jo
xchg
mov
aam
mov
sti
xchg
add
adc
jp
fadd
mov
fdiv
cmp
xchg
or
pop
inc
and
in
adc
mov
and
mov
mov
pop
jno
shr
test
loop
jp
cmp
test
xlat
pop
mov
cmc
aam
add
outs
pusha
mov
sbb
es
sub
jmp
jl
addr16
retf
cmp
jge
js
xor
pop
enter
push
inc
inc
jl
sbb
dec
test
fsub
sub
cmp
ds
mov
jbe
mov
rol
imul
xor
or
iret
and
add
fmul
adc
xchg
inc
xor
nop
ins
sub
pop
pop
mov
pcmpeqb
(bad)
lea
jmp
lea
in
(bad)
(bad)
jmp
outs
mov
push
sbb
cmp
push
das
inc
push
fcomp
dec
inc
dec
and
inc
push
movs
mov
ins
inc
nop
cmp
adc
mov
in
mov
mov
loop
and
cdq
pushf
cmp
sub
push
adc
cmp
push
push
push
int3
push
push
mov
or
push
xor
into
or
xchg
mov
ins
cs
popf
push
ret
rcr
ficomp
push
or
lods
ror
or
dec
mov
mov
push
cmp
loopne
jbe
push
pushf
sbb
or
sahf
bnd
dec
or
add
sub
sbb
adc
retf
mov
dec
xor
cmps
out
dec
hlt
mov
mov
add
push
lea
or
cmp
je
or
test
fcom
pusha
cmps
adc
mov
ficomp
int
in
xor
je
cmp
test
push
jg
mov
shl
inc
xor
cmp
mov
hlt
push
pop
hlt
jne
stc
pop
clc
lea
icebp
mov
xchg
fstp
xor
add
push
sar
or
(bad)
mov
inc
dec
jne
test
or
jmp
outs
adc
nop
add
rol
pop
or
push
dec
adc
scas
adc
daa
mov
iret
push
(bad)
dec
popa
push
fadd
(bad)
and
lea
pop
mov
push
pop
pop
jl
call
fdiv
pop
adc
pop
pop
xor
out
and
lods
shr
or
ret
adc
mov
cmp
pop
ror
nop
jmp
pop
add
push
fld
add
or
out
push
pop
push
push
leave
or
and
inc
inc
jl
gs
mov
push
movs
inc
or
adc
sahf
loope
cmp
pop
mov
or
mov
push
mov
or
push
add
out
fadd
inc
jo
ret
add
add
adc
push
and
std
pop
push
jl
inc
xor
mov
es
in
aas
add
pop
jp
je
pop
cmp
(bad)
js
lahf
jmp
cs
jle
dec
(bad)
cmp
jne
push
inc
sbb
div
jmp
inc
cmps
fisttp
jmp
pop
mov
cmp
cmc
loope
scas
pusha
adc
push
iret
pop
jo
cmp
add
cmps
pop
pop
jne
xor
sbb
mov
cli
in
(bad)
sti
lods
jp
into
movs
mov
scas
out
hlt
mov
cmp
xor
clc
je
mov
cwde
les
pop
es
ror
dec
sbb
add
(bad)
jo
fwait
movs
fwait
dec
inc
xlat
mov
out
mov
mov
ret
dec
mov
aad
pop
aam
pop
push
(bad)
cmp
add
push
imul
cmp
xor
pop
mov
xor
adc
or
enter
pop
mov
sar
jno
std
setg
and
clc
push
mov
push
dec
add
inc
or
clc
out
add
ret
shr
mov
xor
dec
push
push
je
sbb
xor
aas
adc
jno
or
add
xchg
pop
shl
add
add
imul
pop
sahf
out
(bad)
call
mov
or
or
fist
es
in
and
sbb
pop
or
(bad)
xlat
mov
mov
mov
add
cdq
mov
add
cmps
jge
add
dec
pop
int
loop
dec
adc
lea
cmp
in
aad
push
pop
sar
sub
js
call
stc
dec
(bad)
cld
div
inc
mov
sub
out
xor
cmp
jo
xor
inc
into
or
mov
push
add
or
fs
fdiv
imul
xor
add
aam
fsubr
inc
pop
call
inc
dec
cmc
push
sub
pop
adc
mov
or
test
jo
and
retf
hlt
mov
dec
lods
jge
in
dec
jne
loopne
push
and
adc
enter
aad
test
and
dec
xor
cmps
lahf
push
popa
test
es
scas
test
bound
dec
dec
clc
rol
(bad)
sub
mov
push
push
add
mov
dec
mov
mov
cmp
je
jmp
add
inc
lea
ret
inc
ins
fxch
arpl
(bad)
fcomp
sub
pop
mov
adc
sub
out
mov
sbb
jne
cmp
test
fdiv
dec
repnz
out
stos
adc
xlat
daa
sahf
out
or
xchg
xchg
xchg
mov
sete
push
or
scas
movs
inc
aaa
lock
addr16
push
ret
aaa
push
pop
aaa
adc
jb
cmp
cmp
sbb
or
inc
jge
lock
mov
xor
xlat
mov
xor
mov
mov
jmp
dec
or
aam
(bad)
mov
xor
retf
sbb
movzx
aad
add
shr
mov
or
push
cld
cmp
pop
cmp
jne
cmp
or
jmp
cmp
outs
outs
adc
pop
dec
mov
mov
pop
sbb
fisttp
add
push
push
adc
inc
cmp
xor
xchg
or
jne
mov
js
mov
pop
sub
and
xor
clc
test
pop
ret
push
push
fsub
and
dec
dec
into
inc
mov
adc
daa
dec
dec
inc
enter
adc
or
pop
push
ret
jae
dec
cs
adc
(bad)
push
enter
in
jmp
outs
test
or
nop
cmp
mov
push
or
dec
push
pop
and
jl
or
arpl
outs
push
je
ins
cmp
rcr
jbe
add
test
mov
add
xor
inc
pop
ss
or
inc
jmp
outs
mov
and
dec
cmp
or
jo
mov
cmp
pusha
xchg
mov
rol
hlt
mov
mov
add
inc
pop
adc
(bad)
or
cs
push
pop
jno
and
and
(bad)
xchg
and
lods
pop
xchg
or
out
setp
mov
sahf
xlat
fcmove
inc
test
inc
ds
mov
mov
jns
sbb
cmp
jnp
push
jg
loopne
inc
sbb
add
inc
dec
outs
jne
jb
imul
jb
fcmovb
pop
and
fldcw
das
mov
outs
add
add
push
daa
inc
jb
popa
imul
xor
and
aam
ins
bound
outs
gs
dec
jnp
addr16
or
popa
jb
xchg
push
jge
mov
or
xchg
jbe
sbb
adc
add
push
push
es
push
dec
(bad)
cli
pop
or
push
arpl
or
jmp
inc
loope
pop
loopne
jne
ins
fs
inc
outs
push
add
scas
outs
add
pop
dec
in
ss
imul
jbe
sub
out
add
in
fsub
inc
popf
inc
pop
xchg
sbb
out
or
leave
dec
shr
leave
add
add
inc
inc
call
ins
test
movups
push
or
dec
push
gs
aaa
lock
add
repz
sbb
inc
popa
adc
inc
dec
mov
sbb
gs
(bad)
mov
sbb
pop
outs
movs
fs
cmps
sub
push
je
js
pop
ja
adc
xor
adc
call
(bad)
push
mov
sbb
jbe
fild
push
test
ins
add
jbe
pop
sub
je
add
arpl
xlat
sbb
arpl
pop
mov
mov
inc
hlt
mov
adc
inc
jne
outs
inc
ins
popa
addr16
imul
out
int3
or
das
or
or
adc
test
popa
ins
adc
cmp
shl
loopne
or
push
or
mov
loope
sub
inc
add
jno
mov
cmp
pushf
(bad)
mov
sub
or
or
push
mov
imul
push
js
jnp
imul
aam
cs
ins
push
xchg
or
mov
fidiv
loopne
cmp
fs
nop
shl
iret
sar
push
add
push
and
es
push
out
jnp
call
mov
stos
sub
add
es
add
add
vmaxpd
adc
inc
inc
ins
imul
cs
sbb
dec
imul
sub
pop
das
push
add
mov
jno
call
data16
add
loop
and
mov
add
push
ret
test
ds
je
cli
add
gs
push
inc
mov
sar
or
or
mov
add
add
cmp
hlt
inc
adc
jbe
test
inc
or
dec
cwde
outs
jb
aam
xor
fisubr
inc
xchg
cs
add
test
or
outs
add
retw
das
outs
imul
add
add
or
cwde
xchg
jmp
or
add
add
lds
dec
outs
or
fcmovbe
or
jecxz
in
and
addr16
inc
xchg
loopne
(bad)
loopne
imul
push
into
shr
cmc
pop
add
popf
or
fprem
pop
(bad)
inc
cmp
sbb
data16
cld
sahf
data16
push
(bad)
out
movs
out
les
mov
jp
inc
in
push
pop
inc
ins
add
mov
lods
push
call
add
adc
push
push
push
sub
mov
push
adc
out
adc
fidivr
or
or
cmp
adc
ss
ins
cmp
push
pusha
aas
push
inc
jnp
jo
push
push
mov
dec
add
add
xor
stos
popa
jo
pop
mov
(bad)
daa
push
xchg
ja
es
stos
popa
bound
cmp
retf
inc
inc
gs
jne
and
idiv
es
jae
outs
je
jns
das
imul
xor
das
push
gs
xchg
cmp
push
popa
fs
into
jo
adc
imul
jns
mov
pushf
inc
inc
jb
jne
inc
cmp
jo
add
sub
add
push
sub
cvttps2pi
sub
jle
xor
and
dec
dec
bound
mov
jo
rcr
cdq
std
sti
inc
outs
ins
and
fdivr
sbb
jo
stos
xor
xchg
sbb
lods
add
sbb
ret
xchg
add
and
not
jmp
in
add
je
push
dec
jb
jmp
js
add
inc
push
mov
addr16
pop
imul
jmp
sbb
scas
mul
sub
lods
pop
test
in
or
sbb
add
mov
push
outs
jne
jns
imul
clc
nop
xor
outs
gs
cmp
pop
xchg
cwde
sub
sub
push
fidiv
es
mov
lock
aad
pop
and
fild
mov
dec
adc
icebp
cmp
xchg
mov
or
pop
or
jo
retf
int3
push
sub
add
add
jmp
xor
aaa
push
ins
adc
gs
mul
(bad)
add
paddusw
jmp
ja
add
push
pop
pop
setb
push
add
nop
pop
sub
addps
jnp
in
icebp
dec
loopne
jmp
jb
jb
aaa
jns
jmp
cmp
jns
in
push
sub
(bad)
in
push
and
push
into
add
(bad)
out
(bad)
clc
push
ins
data16
jmp
inc
fimul
push
cwde
inc
(bad)
push
pushw
int3
inc
mov
push
(bad)
das
add
mov
sbb
test
or
inc
mov
add
adc
xchg
jae
and
jbe
outs
jns
add
cs
cmps
pop
mov
mov
lods
pop
inc
jbe
push
and
add
jae
ins
dec
add
sbb
xor
mov
cmp
pop
push
add
xor
adc
add
fcomp
push
add
lea
sbb
cmp
les
inc
dec
test
or
cwde
xchg
add
push
fs
test
clc
or
inc
or
or
int
push
sub
push
dec
data16
jno
adc
sbb
jo
es
pop
je
es
pop
jae
and
push
lock
lock
cmp
push
xor
ja
scas
nop
mov
adc
inc
lds
pushf
arpl
fcom
outs
retf
push
mov
sub
(bad)
aad
mov
sahf
out
loop
pop
daa
inc
cmp
xor
mov
push
imul
and
cmp
js
pop
shl
int3
loopne
push
adc
bound
mov
inc
push
cmc
call
jae
dec
xchg
rcl
ror
gs
outs
jo
ins
sbb
and
push
inc
ss
pop
frstor
adc
mov
ret
gs
retf
jmp
inc
int
adc
cmp
add
cmp
xor
push
mov
add
mov
jecxz
push
in
popa
push
sbb
sti
outs
or
add
inc
mov
sbb
rcl
int3
out
int
test
push
data16
outs
imul
cmp
aas
cmps
pop
or
push
int3
popa
or
and
add
adc
add
push
xor
add
sbb
xchg
ins
pop
adc
xchg
mov
push
fidiv
cld
mov
mov
mov
mov
fcom
and
dec
push
jno
add
sbb
cmp
int
inc
ror
mov
ins
(bad)
cmp
inc
xor
jne
mov
(bad)
iret
mov
add
or
out
adc
xor
lds
call
sahf
sub
pop
pushf
sub
xchg
mov
(bad)
call
aas
outs
popf
xor
pop
shl
fcmovbe
pop
inc
cmp
or
jae
jno
jmp
mov
or
(bad)
add
pushf
jo
xchg
inc
mov
and
pop
or
xchg
mov
into
mov
(bad)
push
xchg
or
and
outs
or
jno
sub
xchg
adc
inc
push
or
aam
loop
aaa
and
dec
(bad)
cmp
xor
mov
cmp
xor
sti
popa
movs
(bad)
js
or
shl
cmp
jnp
pushf
or
in
nop
lods
iret
xchg
adc
adc
or
dec
inc
int3
out
sub
sbb
inc
in
mov
ret
cmp
pop
or
adc
inc
push
pusha
outs
inc
dec
rcl
movs
les
add
xchg
sbb
jmp
dec
mov
js
hlt
xor
cwde
mov
push
and
and
and
xchg
out
and
lea
and
and
and
xchg
out
cmp
cmps
xchg
and
and
jmp
lock
rcr
sbb
xor
(bad)
call
call
xchg
inc
mov
cwde
push
addr16
test
inc
add
ror
int
sbb
xor
js
mov
sbb
push
inc
sub
xchg
shr
pop
loopne
or
gs
add
or
xor
loopne
test
add
push
test
rcl
push
ss
mov
push
and
inc
sbb
xor
mov
push
push
jmp
or
je
push
leave
ss
and
cs
cmp
out
push
inc
pop
push
push
xlat
enter
lds
add
aam
sbb
mov
lock
sub
enter
lea
pop
dec
je
or
ja
cvtps2pi
(bad)
and
or
hlt
outs
loope
sub
emms
hlt
rol
mov
in
mov
sub
aaa
xor
popa
or
retf
popa
add
push
add
fcomp
add
fidivr
push
inc
cmps
push
in
daa
mov
mov
cmc
cmovge
pushf
fstp
sub
orps
out
call
mov
cmpps
(bad)
mov
jecxz
js
fsubr
sbb
dec
pusha
push
daa
ss
arpl
mov
or
aaa
jo
cs
push
imul
mov
cmc
jnp
add
sub
sub
dec
jb
popa
shl
jo
arpl
jno
or
daa
lea
add
xor
or
jo
mov
cwde
pop
(bad)
jl
inc
add
and
add
jp
or
fwait
add
ret
jo
shr
shl
adc
mov
push
(bad)
les
mov
mov
add
and
lds
jns
sub
sub
push
outs
dec
mov
(bad)
cmp
or
xchg
shl
rol
mov
ds
je
cdq
push
outs
fisttp
sbb
and
push
mov
jo
ins
scas
sub
data16
test
xor
sub
adc
cwde
enter
cdq
push
es
das
pop
sub
mov
rol
loope
jp
fld
jl
push
add
xchg
in
clc
dec
ins
lea
retf
enter
jno
call
loopne
xor
pusha
scas
fstp
dec
daa
pop
imul
push
push
inc
jle
mov
push
inc
js
pushf
add
int3
inc
sbb
pop
jp
popa
call
and
hlt
(bad)
aaa
sub
ret
jmp
rcr
or
out
dec
nop
fbstp
or
push
std
(bad)
adc
pop
or
loop
mov
pop
stc
lods
add
push
fld
or
pop
sub
adc
mov
xchg
sbb
mov
sbb
jmp
movs
dec
js
(bad)
or
push
ja
jp
cmp
je
xchg
fild
fist
add
popa
hlt
sahf
mov
adc
add
push
not
pop
stos
in
fdivr
imul
rcl
int3
test
cmc
adc
ins
push
popf
xor
push
jnp
push
scas
sbb
or
repnz
pusha
dec
mov
mov
adc
xor
sub
pop
or
cdq
mov
pop
aad
fidivr
je
pop
push
dec
and
push
aad
daa
or
fdivr
inc
and
push
test
push
or
leave
and
sti
jne
jmp
jmp
sub
gs
mov
aam
add
sub
mov
push
jge
inc
cmp
ret
pop
popa
adc
out
mov
sahf
ret
push
or
push
ret
cmps
ret
les
or
popa
push
ret
pop
fisttp
pushf
adc
inc
adc
mov
cmp
or
pop
cld
sub
mov
xchg
mov
sar
xor
push
adc
imul
add
inc
and
push
jo
pop
jmp
jnp
pop
or
or
inc
inc
fcomp
ins
(bad)
or
push
neg
or
mov
movs
outs
mov
cmp
or
or
movs
ja
es
sbb
outs
imul
inc
stos
add
scas
sub
push
outs
mov
sbb
or
in
mov
ret
sbb
and
and
mov
call
inc
push
fild
int
loope
into
push
add
js
xchg
and
mov
punpckldq
jo
cmps
mov
or
push
aam
imul
add
sbb
enter
clc
jle
inc
cmps
or
mov
sub
add
mov
adc
adc
sub
popa
sub
push
in
or
xor
inc
or
sbb
shr
push
mov
(bad)
ror
and
mov
xchg
xor
jbe
sti
push
lods
cwde
pusha
add
push
and
push
rcr
push
inc
xor
daa
pusha
mov
ins
mov
cmps
or
outs
jae
mov
rol
addr16
add
sub
mov
pop
adc
hlt
enter
movs
mov
imul
into
or
pop
jge
mov
inc
sub
sub
cmp
lods
xchg
inc
push
sbb
or
lock
cmp
xchg
add
hlt
sub
sbb
mov
jmp
test
int3
fst
pop
lea
sbb
or
or
or
xchg
mov
xor
aad
scas
inc
adc
cdq
and
shl
pop
push
pusha
and
(bad)
pop
inc
mov
dec
xchg
adc
add
fsubp
mul
sbb
sub
rcl
cmp
clc
and
or
xor
mov
sub
xor
daa
add
stos
cmp
retf
cdq
inc
mov
sahf
mov
jno
push
or
push
jg
xchg
add
jnp
fs
mov
push
sbb
ror
pop
daa
xchg
push
inc
cmp
push
daa
xor
dec
add
lock
cmp
fld
not
cdq
(bad)
cmp
pushf
aam
int
sbb
cwde
mov
push
clc
and
call
add
mov
or
or
clc
sbb
sahf
inc
push
jmp
add
leave
sbb
imul
scas
out
aas
push
mov
scas
xchg
xchg
push
and
pop
mov
or
(bad)
sar
sbb
adc
mov
cmovg
jae
test
hlt
push
loopne
int3
pop
hlt
dec
adc
fdiv
xor
fidivr
pop
jb
in
cmp
scas
shl
call
add
inc
(bad)
add
pop
popf
lahf
sbb
fcomp
or
ret
mov
or
and
xor
add
adc
add
push
cmp
dec
cmp
loop
inc
mov
mov
xchg
xchg
dec
add
xor
out
stos
jmp
mov
push
mov
call
rcr
es
push
mov
xor
mov
call
call
mov
fadd
add
mov
xor
mov
sub
add
mov
test
(bad)
mov
mov
mov
pop
pop
pop
ret
lea
mov
push
mov
push
mov
jg
add
push
add
jmp
(bad)
(bad)
out
xchg
pop
pop
inc
push
mov
xor
movzx
shr
test
jne
mov
test
pop
mov
ret
add
lock
inc
add
push
add
add
into
mov
push
loopne
add
js
movzx
push
adc
or
inc
sub
outs
sti
mov
mov
xor
jl
shl
aas
test
push
pusha
jmp
jge
add
nop
outs
mov
enter
mov
mov
mov
mov
enter
jge
add
sub
jb
or
je
mov
fwait
jp
je
push
or
or
sbb
cmp
jge
sub
push
sub
call
cdq
aas
sar
sbb
cli
int
lods
imul
hlt
sar
je
cld
mov
mov
shl
leave
shl
jg
and
fild
jp
or
fldenv
sub
add
and
int3
jmp
inc
arpl
pusha
dec
jbe
in
lock
outs
int3
pop
ss
clc
add
ja
inc
mov
adc
or
outs
sub
pop
sbb
test
cmc
neg
(bad)
je
xor
and
xor
daa
inc
inc
or
mov
xchg
cmp
pop
push
adc
repnz
(bad)
popf
sar
mov
bnd
jmp
or
cmp
(bad)
sub
mov
xchg
addr16
push
add
lods
hlt
mov
jb
inc
sti
mov
ds
add
test
adc
xchg
call
sar
fsub
sbb
into
aam
aam
or
movs
xor
div
into
pop
out
xor
jne
xchg
add
mov
enter
push
fwait
enter
pushw
call
fs
inc
mov
stos
cmp
xor
push
int
fimul
test
mov
out
pop
push
das
inc
in
sbb
jmp
popa
cdq
xor
mov
dec
sub
mov
push
mov
jb
ins
pusha
and
adc
add
fsubp
fcmovnu
and
(bad)
jmp
inc
(bad)
sti
push
add
sbb
or
test
loopne
sti
neg
fisub
sbb
js
or
in
jp
shl
fs
clc
xor
xor
cmp
cmps
div
outs
push
xor
inc
jmp
mov
repz
nop
loop
ins
enter
dec
dec
or
inc
cld
jg
fidiv
ror
adc
xor
push
add
inc
cmp
aas
fld
or
cmp
jg
cli
mul
in
rcr
call
enter
cmp
mov
sahf
out
or
in
xor
push
rcr
out
push
jb
cmp
or
hlt
pop
lock
fild
add
push
sti
retf
(bad)
call
cmp
add
add
imul
in
jle
sub
ja
cwde
loope
mov
cmp
jl
push
jb
out
aas
sbb
xlat
loop
js
xor
jmp
cmp
jnp
xor
xor
jb
add
pop
xlat
jge
jmp
in
in
fild
cmp
push
fs
push
aaa
push
jne
jbe
pop
dec
adc
jo
mov
inc
pop
adc
adc
sbb
ds
shr
add
ins
loopne
inc
sbb
pop
fistp
sahf
adc
mov
rol
add
inc
push
js
(bad)
fstp
pop
mov
mov
les
adc
cwde
ins
pop
mov
xor
xor
add
pop
push
push
ins
in
(bad)
fsubr
inc
inc
mov
cmp
je
cmps
nop
retf
mov
jl
inc
jno
out
jnp
pop
push
jmp
dec
dec
js
cmp
ror
jl
fs
sub
push
dec
push
add
int
dec
push
push
cmp
add
mov
pop
xchg
mov
mov
mov
dec
adc
push
out
pushf
dec
dec
imul
dec
push
push
mov
outs
and
cmps
lods
push
movs
call
add
dec
or
push
(bad)
inc
add
dec
push
test
xchg
movs
adc
in
sub
je
loopne
sbb
mov
jbe
call
mov
jnp
cwde
jbe
in
pop
jg
in
out
push
sub
sar
pop
arpl
pop
lods
aas
lods
mov
xor
push
mov
aad
mov
jl
add
(bad)
cs
daa
nop
and
xor
push
in
aas
inc
mov
mov
xor
aas
ds
mov
or
ret
mov
pushf
pop
pop
ret
nop
or
add
or
ja
test
outs
mov
shl
lock
outs
lock
nop
stc
mov
lds
shr
or
int3
mov
push
inc
inc
add
add
mov
inc
lea
mov
shr
adc
dec
mov
mov
stos
sbb
mov
idiv
cmp
dec
pop
sub
inc
sub
xor
push
clc
(bad)
mov
pushf
les
cmp
ss
sbb
cmp
push
jmp
out
add
sar
mov
cmp
fwait
test
xchg
test
lea
sar
push
add
mov
mov
xor
sub
mov
mov
xor
pusha
call
cmp
or
inc
pop
data16
xor
inc
pop
aas
mov
xchg
(bad)
inc
or
pop
test
jle
sub
jg
jo
out
xchg
or
inc
mov
mov
idiv
mov
adc
lidtd
push
push
push
adc
push
ror
inc
jp
aam
dec
cmp
inc
sbb
ret
mov
fnsetpm(287
cmp
into
add
add
or
add
jne
push
push
mov
or
or
mov
mov
dec
call
jb
mov
scas
cmp
jne
mov
jle
mov
jge
jmp
adc
les
or
hlt
sbb
call
add
or
jle
adc
cmp
cdq
call
pop
cmp
dec
and
jmp
outs
inc
jo
pop
sub
pop
je
mov
ins
fld
js
xor
push
pop
cmps
inc
xor
iret
lods
adc
test
adc
or
lods
(bad)
mov
movs
fwait
dec
sete
and
dec
pushf
mov
jge
xlat
mov
adc
lea
ret
test
add
jge
rcl
lods
xchg
adc
jnp
outs
inc
inc
je
inc
xor
fild
sbb
rcl
or
or
popa
and
dec
fs
jns
test
clc
rcl
add
jb
push
jmp
mov
sbb
sbb
push
pop
std
inc
icebp
fist
dec
sub
fadd
cmc
out
pop
and
and
mov
add
retf
adc
movs
jmp
and
and
jno
push
mov
jle
inc
mov
or
loop
ja
sub
pop
ja
pop
sub
push
dec
jl
push
inc
fisttp
or
push
into
xchg
arpl
js
and
out
sbb
jecxz
or
sbb
inc
sbb
push
mov
pop
fisub
push
test
aas
cmp
mov
cmp
mov
add
fdiv
lods
cs
sbb
xchg
ins
cmc
inc
nop
adc
lahf
jp
out
sbb
ret
sbb
pop
mov
mov
mov
cdq
pop
or
mov
pop
cmc
push
ret
mov
jne
xor
je
ins
rcl
in
mov
and
stos
std
sbb
mov
shr
mov
adc
sbb
inc
mov
jecxz
push
call
mov
mov
in
ins
inc
cmp
je
sbb
jbe
lods
lock
test
cmp
add
mov
push
mov
and
outs
inc
jg
cmp
ret
or
push
mov
dec
push
inc
aam
add
adc
sub
push
dec
cmp
push
jl
daa
iret
or
aam
ins
stos
arpl
inc
out
xchg
jle
and
call
pop
shr
std
pusha
xchg
scas
push
mov
push
mov
fucomi
mov
jmp
sub
jge
sar
lods
aad
nop
cmp
jae
mov
scas
lea
call
or
adc
dec
jne
pop
shl
add
mov
cwde
cmp
pop
inc
and
inc
pop
in
cmp
dec
test
mov
scas
loopne
pop
jl
aas
jmp
(bad)
cmps
add
push
out
pop
mov
mov
sbb
push
jge
dec
add
push
push
lahf
push
jmp
outs
outs
add
inc
mov
add
sbb
add
loopne
cld
dec
xchg
ss
pop
mov
mov
sbb
adc
clc
lods
leave
jmp
xor
fdivp
or
jmp
mov
shr
call
mov
or
or
push
or
mov
cmp
jne
fnstsw
sti
adc
jne
mov
adc
adc
xor
je
or
cld
adc
mov
(bad)
out
jge
movs
add
add
jo
push
clc
jg
(bad)
fcom
daa
or
jmp
mov
jae
mov
cmp
push
and
lods
stos
adc
adc
repz
ins
repz
inc
add
mov
add
mov
mov
mov
mov
test
stc
xor
cwde
hlt
mov
jo
scas
ror
je
cmp
retf
shl
jle
adc
mov
not
cmp
dec
jo
adc
and
sbb
mov
cmc
loope
or
or
loope
loopne
add
push
test
movq
push
test
movs
icebp
push
lock
into
call
dec
or
out
test
and
(bad)
cmps
fcmove
in
in
nop
ja
and
cmp
mov
xchg
or
sar
sbb
sbb
test
push
mov
les
fsubr
push
jo
ror
sub
shl
add
add
shl
xchg
adc
sbb
inc
xchg
xchg
adc
js
cmp
add
mov
cmp
and
fcom
sub
adc
add
ret
xchg
xchg
push
inc
push
xchg
mov
jo
pusha
fadd
xchg
xor
mov
mov
push
mov
fcom
or
ins
pop
mov
pop
push
icebp
mov
sbb
addr16
inc
add
xchg
and
dec
xor
inc
or
clc
mov
inc
or
add
inc
sub
inc
test
adc
mov
test
nop
(bad)
mov
out
sbb
mov
push
xor
ret
rcl
into
add
adc
inc
dec
shl
mov
cmp
mov
push
sbb
sbb
inc
xchg
ret
jg
adc
ret
and
scas
rcl
repz
mov
fwait
mov
adc
ret
lock
jmp
pop
movs
and
push
cmps
xor
lea
call
mov
jb
movs
call
sub
jne
cmp
fisub
pop
mov
mov
and
fsubr
or
mov
je
inc
mov
or
xor
add
not
cmp
add
cmps
mov
gs
iret
add
add
mov
xor
push
enter
fsubr
xor
or
ja
aas
clc
sub
stos
(bad)
cmp
sub
add
push
lea
lea
fcomip
in
xor
sbb
fs
pop
aam
cmc
loopne
(bad)
in
cmp
jle
sub
in
add
mov
inc
sbb
sbb
leave
je
inc
aaa
std
cmp
sub
imul
sub
stc
jns
icebp
jle
mov
cli
push
shl
nop
test
add
jge
pop
inc
or
loopne
shr
cmp
test
loope
ja
mov
or
mov
cmp
test
mov
fmul
jmp
and
sub
std
je
fmul
sub
jne
xchg
mov
mov
xchg
sub
mov
push
mov
cs
adc
pop
jo
sub
loope
pop
and
xchg
or
retf
into
jle
(bad)
pop
xchg
popa
int3
fwait
inc
sub
xor
retf
mov
or
test
xchg
mov
dec
ja
mov
cmp
and
das
inc
aam
mov
sbb
and
pop
outs
xchg
push
movs
ror
mov
pop
push
movs
adc
fs
pop
push
pop
test
lock
out
mov
popa
jne
ja
xor
mov
add
jae
and
jge
add
in
cmp
int
aad
mov
add
jg
mov
dec
inc
xor
retf
addr16
push
mov
dec
push
mov
pusha
inc
mov
loopne
enter
inc
and
add
sbb
or
shl
and
outs
pop
add
xchg
xor
ds
push
mov
lods
xor
mov
pusha
xor
sub
daa
cdq
cmps
mov
std
rol
adc
push
popf
mov
arpl
shl
mov
loop
jp
add
aas
mov
push
xor
daa
and
in
xchg
xor
test
pushf
pushf
cmp
mov
daa
dec
pop
(bad)
int
das
enter
mov
or
cmp
or
jae
push
push
ror
int
adc
mov
es
push
gs
xor
push
hlt
xchg
add
dec
mov
add
and
adc
mov
lahf
out
add
or
lock
adc
or
or
mov
push
pop
test
(bad)
adc
cwde
movs
sub
mov
xor
xor
sub
push
add
pop
push
push
push
sbb
dec
sbb
xchg
sbb
stos
mov
shl
iret
into
mov
or
mov
xor
adc
iret
(bad)
cld
mov
pop
ja
xor
xchg
cmp
(bad)
loope
sub
add
add
bts
icebp
call
push
jo
pop
nop
test
je
add
std
push
or
adc
pop
lock
popa
outs
arpl
or
into
push
mov
iret
les
adc
mov
sbb
ror
je
sbb
add
pop
les
dec
stos
sub
cs
ret
adc
ss
test
jmp
div
or
xor
js
ret
aas
movzx
test
pop
push
add
add
cli
xchg
(bad)
icebp
movsx
sbb
cwde
add
(bad)
adc
sub
in
loope
sub
shl
sahf
inc
clc
mov
push
popa
sbb
je
push
add
lds
add
mov
sbb
cld
jmp
out
dec
mov
cli
jmp
and
or
mov
fbld
sub
in
add
inc
pop
pop
mov
push
cmp
imul
das
jne
mov
push
jg
and
ins
pop
dec
push
iret
cwde
push
inc
adc
cs
mov
xchg
fcmovnu
adc
inc
xchg
or
ret
jo
xor
sbb
sbb
aas
in
or
adc
or
call
mov
and
add
and
ret
ss
and
push
dec
pop
adc
sbb
lock
push
scas
xchg
fld
sbb
fld
add
sub
adc
cmp
pop
push
jne
inc
pop
pop
sbb
xchg
mov
out
sbb
jnp
inc
cdq
pop
dec
cmp
fcom
sub
xlat
inc
push
loope
sub
jo
test
int3
ret
jne
pop
mov
je
in
cdq
or
add
push
push
rol
je
fistp
cs
aam
adc
fadd
sub
in
jmp
add
jbe
dec
sbb
sbb
cwde
push
int3
in
icebp
lds
jae
and
push
mov
add
mov
mov
cmps
inc
cmp
rol
pavgb
out
cli
test
dec
das
mov
or
fld
nop
inc
mov
sbb
adc
cmp
or
xor
mov
mov
jg
arpl
ror
dec
mov
adc
ror
ds
mov
lock
fnstenv
push
push
pop
mov
bound
pusha
sub
or
xchg
call
sar
xchg
push
cmps
mov
mov
pop
push
mov
xchg
les
or
sub
mov
add
inc
push
dec
ins
call
loopne
rcl
inc
leave
pop
push
sbb
push
pop
test
sub
mov
in
and
mov
pop
push
loopne
ret
shr
cmp
inc
pop
sub
lds
(bad)
das
pop
pop
test
dec
xchg
xchg
shl
xchg
inc
pop
xchg
or
mov
leave
mov
xor
jno
mov
jns
push
adc
pop
shl
pop
or
xor
push
stc
mov
and
or
xlat
xor
stos
pop
sub
icebp
cmp
leave
jecxz
xchg
and
jbe
jb
or
sbb
add
dec
and
adc
pop
pusha
push
mov
shr
mov
enter
lock
fs
imul
or
retf
add
in
mov
scas
or
or
rcl
ror
mov
adc
mov
outs
test
movs
adc
adc
push
(bad)
aad
adc
jnp
add
dec
add
inc
xchg
jne
inc
popa
mov
add
adc
push
adc
iret
gs
add
lock
fdivr
loope
popa
and
mov
inc
(bad)
push
or
les
test
sub
xor
adc
adc
fnstsw
lods
test
ins
aaa
inc
push
add
and
mov
add
mov
cmp
ss
push
jmp
sti
add
ds
jno
leave
or
lods
mov
nop
add
add
(bad)
push
or
push
adc
setl
das
sub
sbb
retf
mov
rcr
inc
xlat
(bad)
and
adc
stc
ja
movs
mov
xor
movsx
or
ret
icebp
jne
loop
pusha
push
add
xlat
clc
xchg
loope
inc
add
xlat
call
test
or
rcr
imul
and
and
xchg
enter
pop
push
loopne
jl
xor
test
jae
inc
ins
(bad)
ret
dec
loope
mov
add
xchg
adc
and
mov
(bad)
and
pop
cli
xor
xor
dec
cmp
sub
sub
ret
(bad)
arpl
and
pop
scas
add
pop
ins
push
dec
les
mov
pop
sub
das
mov
bound
adc
add
adc
add
in
sbb
(bad)
adc
pusha
in
sbb
mov
(bad)
in
pop
rol
inc
xchg
lock
sub
(bad)
popa
pop
out
sbb
add
sub
add
daa
push
adc
mov
test
pop
fs
inc
push
mov
dec
mov
js
cmp
jg
adc
lods
cld
jne
mov
cmc
dec
scas
mov
ss
cmp
adc
je
scas
jmp
mov
mov
outs
les
xor
jge
push
sbb
mov
push
mov
jle
cmp
sbb
push
pop
mov
movs
jge
ins
add
sub
fimul
sbb
pop
or
mov
mov
cmp
sbb
mov
jbe
test
loope
jle
dec
pop
or
inc
xor
add
fadd
loop
mov
and
sub
push
fdivr
int3
xor
mov
repz
xor
xchg
inc
and
cmp
pop
jmp
aas
dec
aas
or
ret
adc
or
pop
adc
ins
pop
test
call
push
jo
add
cmp
mov
or
sbb
or
test
ret
pop
pop
mov
(bad)
loopne
adc
test
push
add
pusha
iret
jno
sbb
xchg
in
mov
arpl
nop
ins
add
in
jle
shr
icebp
dec
pushf
push
mov
jne
in
push
and
call
loope
dec
movs
jg
adc
or
dec
(bad)
scas
call
sbb
rcl
push
adc
aam
add
or
inc
push
mov
push
js
loopne
mov
in
cmp
jle
sbb
inc
inc
inc
jl
cdq
movs
lock
popa
jecxz
sbb
jge
push
xor
or
xor
inc
loopne
dec
adc
push
pusha
aas
cmp
clc
push
aam
xchg
inc
cwde
retf
je
sbb
pop
hlt
lahf
push
xor
mov
or
call
xlat
mov
add
sbb
in
sbb
mov
je
add
nop
xchg
push
and
es
fldcw
outs
xor
dec
and
or
add
ss
cmp
push
call
jmp
push
das
sbb
or
mov
adc
lahf
xchg
push
xor
jmp
cmp
mov
push
lea
lea
xchg
fadd
mov
mov
sbb
mov
(bad)
pop
gs
rcl
(bad)
push
mov
ret
sbb
adc
mov
mov
jmp
inc
push
inc
ror
sbb
pop
lea
xor
or
push
mov
(bad)
dec
in
sbb
(bad)
add
ror
inc
pushf
mov
pop
pop
xchg
js
inc
movs
adc
(bad)
or
xor
pusha
xor
add
sub
pop
pop
push
ret
fild
fistp
add
jmp
pop
inc
inc
int3
mov
pop
int3
add
mov
mov
xor
stos
inc
fdiv
outs
dec
mov
ins
push
adc
cld
xor
or
inc
sub
pop
or
jp
call
inc
clc
jnp
adc
shr
add
aas
or
xorps
sub
pop
xor
ret
adc
cld
int3
ret
push
cwde
ss
add
adc
push
adc
cmp
fs
fisubr
push
cmp
scas
push
pusha
lock
test
fcmovnb
add
push
and
pushf
xchg
jmp
mov
lods
xchg
gs
sbb
in
fwait
jecxz
jo
inc
push
sub
mov
pop
jp
fs
adc
or
adc
jo
pop
push
or
mov
cmp
out
sbb
fdivr
out
adc
cwde
loopne
out
inc
je
push
adc
jbe
jle
mov
mov
xor
inc
push
and
dec
sub
xchg
lock
xor
stos
xchg
leave
enter
in
jmp
dec
imul
mov
mov
in
scas
out
xor
into
xor
xchg
mov
leave
mov
or
inc
or
push
mov
inc
mov
cwde
ret
nop
push
mov
cmp
cld
mov
and
pusha
(bad)
std
dec
pop
sahf
das
sub
xor
inc
dec
shl
je
jno
fist
lea
mov
push
pop
ret
xor
mov
sbb
aam
jo
cmp
sbb
or
push
jl
inc
mov
xor
mov
mov
daa
nop
cmp
je
cmp
icebp
aaa
adc
adc
dec
cmp
jne
call
js
pop
inc
dec
jne
and
xchg
ins
sti
pop
inc
je
mov
mov
push
inc
sbb
mov
loope
sub
jno
xchg
mov
pop
mov
or
inc
fcmovnb
mov
xor
inc
je
inc
nop
pusha
mov
retf
or
sti
xor
add
adc
sbb
push
sbb
es
xchg
pushf
outs
icebp
jg
mov
je
(bad)
adc
(bad)
popa
aaa
inc
and
clc
push
nop
retf
adc
push
sbb
cmp
int3
push
ror
test
inc
adc
aam
mov
mov
push
or
aaa
arpl
repnz
cmp
(bad)
inc
push
sub
inc
push
call
cmp
shl
or
fimul
dec
cs
dec
push
icebp
pusha
int
pop
dec
das
or
dec
adc
push
pushf
leave
adc
rol
invd
fidivr
pushf
(bad)
or
idiv
xor
cmp
jg
xchg
dec
jg
and
es
cmp
je
mov
nop
adc
clc
adc
xor
pusha
pop
(bad)
push
xchg
ds
push
int
outs
mov
inc
xchg
sbb
daa
nop
loop
or
add
lock
sbb
push
icebp
scas
sub
in
loopne
adc
(bad)
pop
xor
pop
mov
mov
inc
je
xchg
test
icebp
pop
cmp
aas
mov
clc
dec
inc
jl
inc
xor
mov
daa
nop
js
pop
sub
inc
push
pop
mov
jne
mov
and
push
jge
(bad)
xlat
mov
mov
fisub
enter
pop
fadd
call
jle
(bad)
fnstsw
or
inc
dec
push
mov
mov
dec
test
jl
int3
push
or
loopne
push
sub
aaa
push
inc
dec
jbe
and
cdq
ss
dec
shl
in
loopne
mov
loope
mov
mov
xchg
mov
lods
inc
cmp
mov
sbb
xchg
push
imul
inc
mov
cwde
push
pop
int3
push
inc
adc
add
mov
lds
int3
mov
jo
fbld
mov
or
arpl
pop
popa
and
scas
rol
mov
push
jmp
mov
sar
and
sub
inc
adc
sub
push
mov
and
call
dec
push
push
and
sti
inc
push
cmp
sbb
cmp
(bad)
xor
inc
sbb
jne
out
adc
inc
int3
xor
cmp
pop
jp
cmps
jl
jo
aam
xor
xor
scas
hlt
cs
leave
es
pop
out
add
jp
inc
into
adc
in
cmp
jmp
and
loopne
dec
push
fdivr
loope
sbb
inc
push
adc
mov
ss
xchg
adc
js
jecxz
xchg
sbb
sub
inc
xchg
stos
push
xchg
pop
test
rol
jnp
and
and
sub
fimul
mov
jmp
fsubp
(bad)
fsubr
add
lods
sbb
sets
cmp
push
push
loopne
sbb
push
scas
or
inc
push
fistp
adc
mov
pop
ins
pop
(bad)
mov
mov
inc
mov
js
push
adc
fwait
loop
sub
scas
dec
pop
std
or
inc
or
dec
mov
inc
sbb
sar
std
imul
out
xchg
or
sar
inc
xchg
inc
sub
push
mov
or
out
or
scas
pop
das
xor
cld
inc
test
mov
or
adc
and
clc
pusha
dec
add
dec
mov
mov
xchg
inc
add
ins
inc
inc
cmp
push
cwde
add
cmp
pop
pop
ja
inc
xlat
jne
add
sub
je
mov
or
aam
inc
lahf
sbb
pop
std
add
cmp
add
mov
(bad)
clc
mov
jno
dec
and
jbe
push
xchg
sub
std
outs
(bad)
xor
mov
lods
xor
daa
fistp
(bad)
dec
push
jo
pop
sub
jno
(bad)
cwde
lea
(bad)
shr
mov
pop
fs
lea
mov
lock
dec
scas
je
jne
fwait
daa
and
(bad)
or
push
cdq
sub
ins
xchg
movzx
mov
loop
dec
push
repz
add
xchg
xor
int3
mov
xor
inc
pop
cdq
out
jle
pop
adc
ds
je
inc
push
leave
lea
dec
std
scas
push
rcl
jge
pop
ins
in
ds
test
add
or
inc
jb
sbb
sub
and
leave
cmp
inc
inc
xor
mov
and
in
test
sbb
out
retf
sbb
and
(bad)
clc
and
xchg
adc
adc
sbb
dec
aad
ins
xchg
mov
je
das
mov
inc
pop
loope
sub
pop
cwde
dec
dec
or
pusha
xchg
aas
dec
dec
hlt
mov
mul
xchg
jecxz
cmp
clc
mov
int3
std
mov
enter
sub
and
mov
idiv
loopne
push
cmp
jne
pop
add
test
push
lods
adc
mov
neg
ret
mov
push
loopne
ss
idiv
mov
nop
loope
and
xchg
sbb
add
pop
das
shl
or
push
dec
out
sahf
out
jge
mov
mov
mov
jp
je
pop
std
push
pop
mov
inc
add
enter
outs
jne
jo
popa
je
int3
cmc
sti
gs
add
push
inc
outs
jl
and
jae
add
femms
pop
adc
push
gs
data16
and
and
add
lahf
ins
sbb
add
fsub
pop
mov
or
rol
fisubr
mov
jo
jo
fstp
je
cli
sbb
push
push
mov
aaa
fdivr
xchg
push
lods
push
mul
cwde
push
je
inc
scas
imul
je
push
mov
mov
ret
adc
ret
mov
xchg
xor
xchg
rcr
cmp
lock
sub
and
xchg
add
and
and
mov
inc
xchg
sub
jnp
sahf
test
sbb
sbb
lea
out
pop
pop
push
inc
inc
dec
jne
adc
jb
test
stos
mov
add
mov
or
xchg
sbb
mov
mov
mov
out
mov
loope
mov
adc
sbb
loopne
es
ror
(bad)
(bad)
xchg
cmp
je
cmp
jne
mov
jmp
inc
dec
jne
add
and
push
pop
sbb
sub
loopne
adc
aam
jne
js
mov
lock
mov
sbb
dec
imul
sub
pop
add
push
movs
out
sub
sbb
push
mov
mov
call
outs
(bad)
cmp
push
or
add
push
cmp
xchg
mov
mov
and
lahf
mov
mov
sbb
cwde
dec
xchg
jmp
ins
jmp
stos
add
jbe
mov
pop
es
add
push
push
jns
fistp
call
in
fadd
xchg
push
ds
out
fmul
mov
test
xor
inc
fsub
pop
mov
shl
adc
mov
mov
push
add
add
stos
mov
cs
jae
and
test
dec
or
adc
in
aam
cmp
xchg
push
jns
loopne
shl
mov
jl
mov
(bad)
xor
cmp
push
mov
daa
push
dec
fcomi
dec
or
cmp
cmp
sbb
push
jp
cmp
dec
les
retf
or
lahf
nop
jne
dec
push
or
pop
sub
test
outs
das
mov
jle
test
outs
in
jb
outs
jo
dec
dec
sti
out
xchg
or
rol
sbb
mov
rcr
sub
adc
dec
inc
mul
fadd
sbb
cmp
sbb
push
jb
jae
xor
push
bound
add
dec
pop
dec
loopne
clc
gs
mov
xchg
cmp
jae
lea
fmul
scas
(bad)
fld
inc
movzx
cmp
loopne
add
jb
or
fbstp
add
ins
outs
loopne
inc
jmp
fidivr
ins
dec
pop
std
(bad)
mov
inc
daa
je
mov
inc
test
or
cli
jne
cmp
jo
sbb
sub
sbb
mov
xchg
inc
and
pxor
sbb
js
xor
dec
jmp
inc
fbld
add
fmul
mov
dec
shl
pop
pop
inc
dec
push
fist
fcom
js
outs
movs
pop
idiv
fadd
stc
cmp
pop
fdivr
retf
repz
fsub
sbb
lahf
sub
jl
jne
das
sub
ror
mov
lock
pop
test
retf
test
mov
dec
add
(bad)
js
out
mov
pop
shr
mov
cmp
push
bound
xchg
mov
ret
push
sbb
fdiv
sar
inc
sub
(bad)
and
push
fs
pusha
adc
icebp
popa
cmp
out
push
ja
popa
shl
daa
fstp
push
jmp
sub
fsubr
mov
mov
mov
inc
pusha
sbb
(bad)
xor
add
inc
fistp
xor
xchg
shr
psubsw
xchg
mov
js
rcr
ret
or
les
stos
fwait
push
fadd
and
add
and
adc
xchg
fnsave
mov
add
(bad)
sub
jl
inc
rol
je
sbb
adc
pop
jno
test
inc
rol
jmp
mov
aas
sub
shl
in
je
loopne
mov
cmp
mov
mov
jmp
xchg
retf
add
pop
jne
mul
or
fsub
and
fcmovb
outs
fdivr
dec
jnp
sti
adc
jg
inc
jne
xchg
adc
nop
push
pop
pop
int
dec
dec
jo
(bad)
mov
inc
inc
cmp
jne
jo
add
lock
cmp
add
outs
std
rcl
call
stc
into
neg
or
pop
imul
mov
test
and
outs
lock
mov
push
push
mov
mov
cli
xor
mov
mov
dec
mov
shr
gs
dec
push
es
inc
or
fs
fwait
mov
xchg
iret
push
clc
or
xor
inc
clc
inc
sub
add
xchg
ret
(bad)
call
(bad)
(bad)
js
dec
fs
push
cmp
push
or
xor
loopne
add
(bad)
cwde
xlat
push
push
enter
mov
ror
push
xor
add
push
pusha
inc
js
or
jne
in
inc
scas
(bad)
and
std
mov
add
hlt
lods
daa
sbb
ds
jmp
ja
push
clc
dec
aas
aas
mov
inc
mov
push
adc
xchg
cwde
jno
sbb
ins
sbb
or
mov
adc
jne
clc
movzx
cmp
je
xor
into
(bad)
sub
sub
add
add
jge
pop
pop
ins
pop
cmp
call
hlt
pushf
aam
daa
push
rcl
fisub
and
mov
cmc
add
out
iret
or
or
mov
push
add
dec
pmuludq
dec
call
jns
jp
les
mov
add
sbb
xchg
dec
ds
sbb
push
mov
mov
test
lea
push
je
xor
xchg
mov
push
ror
jg
push
test
popa
outs
clc
jmp
adc
dec
sbb
lods
dec
pop
jmp
xchg
adc
adc
adc
or
mov
ror
pop
lods
mov
add
jns
push
clc
inc
push
add
test
push
stos
movs
pop
lods
inc
add
icebp
dec
aas
cs
and
push
mov
adc
shl
ins
sbb
js
add
sbb
bound
mov
cs
(bad)
out
cmp
push
add
adc
and
or
push
or
jo
aaa
jl
ins
loop
mov
call
adc
inc
and
cmps
ret
and
push
or
icebp
daa
sahf
add
sar
dec
push
ficom
pop
(bad)
add
jo
jbe
cs
call
add
or
xor
or
add
push
push
add
push
xor
xor
add
arpl
gs
pop
mov
push
outs
or
add
sti
ret
fnstenv
add
fcom
bound
out
mov
sbb
or
mov
(bad)
icebp
or
or
ja
hlt
test
gs
in
inc
js
mov
fsub
movzx
or
adc
int3
dec
push
xchg
out
mov
(bad)
iret
clc
out
add
mov
dec
cld
mov
out
dec
outs
das
shr
call
add
clc
ins
out
loope
dec
inc
push
sub
mov
fcomp
push
in
xchg
pop
loope
mov
push
mul
loopne
loopne
sub
add
mov
mov
cwde
add
mov
out
cmp
push
out
inc
inc
cmp
sbb
and
lods
xor
retf
push
inc
nop
sbb
or
push
inc
add
ret
dec
je
or
or
cdq
cdq
dec
dec
sub
inc
sub
arpl
mov
add
popa
cmps
and
push
cwde
cdq
cdq
cmps
adc
push
xchg
dec
test
inc
add
xor
mov
push
inc
add
add
xchg
int3
icebp
shl
push
inc
ja
adc
bound
add
fdiv
fld
lds
data16
mov
into
cmp
jb
jp
(bad)
dec
sub
push
and
push
aam
sahf
or
push
lea
add
clc
fcom
xor
push
popf
add
les
and
and
inc
and
and
dec
lods
ret
pop
lods
ret
mov
add
jle
scas
hlt
dec
jns
loopne
in
sub
sbb
add
sub
dec
sub
adc
lea
cs
jecxz
sti
sbb
pop
mov
in
in
imul
add
mov
jbe
xor
imul
adc
ins
jb
cmp
je
and
push
or
mov
mov
call
sbb
cli
add
fs
lds
mov
push
pushf
rol
cmp
add
test
loope
adc
jp
addr16
jbe
sbb
test
retf
cmc
cmps
add
jo
dec
sbb
mov
pop
mov
dec
push
push
sbb
jp
mov
jecxz
sbb
and
jg
sub
test
jmp
push
or
lea
lea
js
cmp
in
dec
nop
data16
hlt
lock
in
mov
cmc
and
add
sbb
or
int3
mov
cs
cli
bound
push
push
cmp
imul
inc
ret
arpl
fistp
inc
adc
leave
mov
shl
dec
je
push
pop
add
cmp
add
push
or
pop
push
jl
add
jmp
lods
dec
cwde
test
sbb
dec
pop
test
or
test
test
or
xlat
lods
mov
in
push
or
or
mov
jo
sbb
add
or
jge
push
test
xor
pop
adc
push
js
in
(bad)
(bad)
xor
popa
jp
push
push
scas
mov
int3
jle
test
push
test
and
(bad)
(bad)
cli
cli
add
rol
ret
mov
cmp
lea
add
lahf
out
mov
fsubr
inc
dec
imul
or
xor
scas
inc
or
mov
push
std
mov
(bad)
add
js
push
jl
test
mov
push
xchg
and
sub
sar
jns
dec
push
push
ficomp
loopne
cld
sti
push
into
sbb
pop
xchg
shl
mov
or
outs
mov
mov
test
loopne
fadd
add
ret
add
cli
es
int3
sbb
and
daa
es
repnz
(bad)
ins
jp
popa
sbb
cs
cmp
sub
xor
shr
loope
pop
push
mov
(bad)
mov
hlt
push
dec
and
ret
js
mov
cmp
and
cmp
add
movs
lea
scas
sbb
push
shl
int3
lahf
std
pop
(bad)
stc
ret
pop
cmp
je
mov
mov
push
(bad)
in
xchg
and
jmp
adc
mov
and
daa
pusha
push
cmp
cmp
popf
test
pop
enter
pop
in
mov
mov
test
aad
int
test
loop
clc
jecxz
rcl
sbb
fimul
push
cmp
add
aaa
pop
in
jle
lods
push
jne
mov
pop
push
push
cmp
mov
inc
pop
stos
lahf
inc
lods
icebp
out
push
dec
or
in
xor
ficomp
adc
test
add
inc
sbb
adc
jae
mov
jb
mov
add
jbe
cmp
sbb
adc
add
in
rcr
push
fsub
jb
inc
in
jmp
adc
or
adc
push
les
outs
fnstcw
mov
cmp
push
icebp
adc
pusha
cwde
les
push
fdivr
mov
mov
cs
mov
bound
adc
ins
or
or
loope
push
mov
add
arpl
jo
loopne
sbb
or
cmp
mov
data16
pushw
cmp
dec
sub
and
jbe
sbb
add
repnz
mov
dec
aam
push
mov
in
add
push
fs
data16
push
and
neg
jmp
and
push
jmp
and
cmp
jge
jge
or
je
dec
xchg
scas
inc
inc
xor
sub
or
ret
call
cs
ins
loopne
lea
or
sub
xchg
aaa
into
jo
and
push
out
inc
adc
cmp
xchg
push
jo
fucomp
push
pop
sbb
aam
call
mov
out
or
hlt
cmps
mov
fisub
out
clc
sub
xor
(bad)
jae
pop
lock
jb
bound
push
and
jae
call
pop
push
inc
mov
add
(bad)
jmp
pop
ret
sbb
lock
xor
adc
add
pop
or
jl
adc
inc
dec
jne
rcl
repz
sbb
jp
jb
sbb
popf
jmp
(bad)
scas
and
xchg
test
ret
or
loopne
fild
rcl
mov
jmp
push
add
pop
and
js
jge
push
xchg
in
aaa
in
lock
add
pop
sub
repz
pop
adc
mov
push
xchg
js
ss
rcl
sar
sar
xchg
rol
mov
inc
mov
jo
test
(bad)
jle
dec
xchg
shr
dec
cmp
scas
(bad)
add
test
inc
and
pop
jp
in
imul
push
add
ret
cmp
aaa
mov
(bad)
sbb
push
dec
jle
inc
and
add
cmps
pop
mov
adc
inc
sbb
sbb
cwde
push
jno
jns
jp
in
out
imul
scas
nop
jmp
adc
clc
push
loopne
test
cmps
push
xor
push
and
dec
int
rcl
push
xchg
dec
sbb
ins
mov
ins
add
mov
add
lea
jno
jp
or
dec
icebp
push
add
sbb
dec
clc
cmp
pop
(bad)
cmp
push
push
push
xor
arpl
inc
pop
push
xchg
js
ins
pop
jl
jge
cwde
add
ja
adc
loopne
adc
test
pushf
ret
mov
add
dec
dec
je
dec
inc
jne
xor
dec
fsubr
ja
call
adc
sbb
movs
adc
inc
lahf
scas
push
nop
rol
(bad)
cmp
lahf
adc
pop
xchg
lds
jecxz
dec
out
sub
mov
aaa
enter
jecxz
push
enter
jo
push
jg
je
sub
je
shr
push
daa
adc
cmp
fld
sub
je
inc
std
sbb
pop
or
fisttp
mov
es
nop
fs
push
cmp
or
shr
add
dec
jp
and
fcmovu
test
loope
jo
inc
sub
loop
or
iret
add
inc
push
movs
int3
mov
neg
jl
add
mov
or
adc
push
mov
out
adc
jae
xor
or
xor
loope
dec
repz
jmp
sbb
fcomp
and
push
ret
in
test
cmps
sbb
(bad)
jbe
loopne
and
cmc
and
sub
stos
cld
pop
adc
loope
mov
mov
xlat
push
fdivr
inc
or
sub
clc
hlt
repnz
add
xor
test
bound
inc
or
mov
std
dec
out
stos
push
dec
xor
mov
push
je
mov
or
sbb
pop
mov
js
idiv
push
in
not
sub
mov
pusha
fdiv
and
push
jo
ss
in
inc
jo
mov
in
les
cmp
test
sbb
dec
dec
pop
add
mov
bound
mov
sbb
in
xor
pop
push
ret
inc
mov
add
cli
aam
fld
aam
dec
(bad)
mov
clc
mov
push
inc
and
pushf
jmp
push
out
out
pop
cli
add
neg
dec
xchg
sbb
adc
fsub
add
sbb
xor
imul
inc
in
pop
or
fisttp
mov
mov
dec
inc
xor
(bad)
mov
test
pop
dec
or
adc
add
adc
mov
dec
pop
jns
cld
jnp
inc
push
loopne
push
clc
adc
xor
and
jge
ret
nop
and
xor
shl
jbe
pop
or
dec
call
or
in
dec
scas
jl
cmps
popf
int3
or
ins
les
cmp
dec
scas
adc
sub
cmc
pop
shr
and
sbb
jmp
lods
mov
dec
aam
push
push
jecxz
adc
inc
and
bound
enter
movs
push
loope
std
pop
cmps
shl
push
cmp
push
push
push
pop
loope
or
inc
adc
pop
mov
or
jl
or
inc
push
sbb
push
cmp
add
mov
inc
fdivrp
or
mov
mov
sar
adc
or
outs
dec
mov
(bad)
mov
adc
pusha
cmp
sub
mov
mov
cwde
mov
inc
(bad)
or
and
inc
mov
jbe
je
call
or
dec
mov
cmc
cmp
xor
hlt
adc
dec
jmp
(bad)
xchg
(bad)
push
sbb
aas
jnp
or
cwde
sub
mov
mov
sbb
(bad)
cdq
mov
jmp
dec
test
loopne
pop
loop
ret
xor
pop
iret
or
stc
push
xor
mov
mov
hlt
fisttp
or
ficom
push
push
test
xor
adc
syscall
out
jae
movs
fst
sub
sbb
push
jo
sub
cld
out
sti
cmp
or
in
sbb
shl
or
push
repz
jo
jecxz
push
push
push
movs
bound
push
or
or
xchg
inc
not
push
repnz
lock
push
ins
and
pusha
inc
push
push
mov
jo
jb
out
test
inc
xor
sbb
pusha
int3
or
sub
cmp
sti
inc
inc
adc
jne
mov
fisubr
lea
xchg
mov
xor
jg
adc
adc
adc
jg
jl
pusha
daa
xchg
push
out
adc
dec
add
or
je
jmp
and
mov
retf
or
cmp
movs
mov
outs
adc
fs
jmp
inc
dec
push
je
cdq
cmps
or
adc
pop
xor
push
mov
push
adc
adc
test
adc
add
and
(bad)
adc
mov
pop
outs
fs
hlt
jl
push
(bad)
cmp
jb
or
fbstp
lock
cmps
mov
test
and
or
std
pop
ins
not
js
cmp
jle
cmp
or
or
and
lds
popf
xor
add
je
rcl
sbb
sbb
cmps
jp
xor
xor
jno
push
push
cwde
pop
push
sub
sub
cmps
aad
mov
push
fistp
cdq
pop
je
cdq
cs
inc
or
cmp
jle
pop
xchg
pop
push
mov
push
sub
xchg
mov
imul
cmp
jl
or
ss
add
and
sbb
dec
jl
inc
pop
iret
call
adc
xchg
push
jle
fcmovne
inc
xchg
jge
out
(bad)
lock
cmp
or
clc
add
or
xor
xor
std
daa
and
ds
push
jne
jne
in
pop
jo
add
aaa
add
xor
or
mov
test
xor
enter
push
test
bound
push
dec
pop
and
adc
ja
inc
ds
and
das
xor
jmp
sbb
sub
leave
xor
cld
and
clc
and
fstp
ja
sbb
push
mov
adc
sub
pop
adc
in
fstp
or
ja
push
inc
xlat
add
sbb
cmp
mov
or
clc
and
jne
pop
or
adc
hlt
stos
add
rcr
adc
cmp
mov
or
ret
jmp
mov
(bad)
ins
sbb
dec
jnp
sbb
das
push
js
inc
mov
xchg
dec
push
sub
pushf
jge
repz
add
push
sbb
(bad)
jle
cmp
fs
xchg
add
xor
pop
push
add
sub
xor
sbb
ss
adc
adc
adc
or
or
mov
sti
push
rol
push
fcom
inc
loope
add
cs
scas
jmp
dec
mov
in
push
jl
adc
push
adc
dec
jmp
jnp
add
add
jae
bound
dec
popa
outs
fistp
jb
data16
inc
outs
push
imul
cli
call
gs
gs
gs
gs
or
add
or
cld
xchg
ins
pop
add
inc
fdiv
push
push
add
and
jbe
push
inc
pop
dec
imul
je
or
das
push
fs
dec
mov
(bad)
adc
je
outs
outs
dec
outs
je
inc
fsub
ret
add
dec
je
ins
dec
inc
cmp
adc
arpl
jo
ins
jns
jmp
scas
sub
dec
das
inc
in
fld
into
popa
ins
imul
or
push
imul
jge
bound
or
stos
jbe
push
mov
fs
pop
push
pop
inc
sbb
mov
icebp
fld
push
jns
ins
cs
cs
inc
outs
ret
dec
or
jnp
push
lods
sbb
sahf
je
out
fisubr
es
sub
mov
xchg
retf
push
mov
loopne
pop
fs
or
mov
mov
std
test
or
mov
and
jo
and
sbb
add
into
inc
push
sub
sbb
push
add
sbb
dec
sbb
pusha
inc
xor
sbb
cmp
push
pop
xor
shr
push
cwde
nop
or
sbb
cmp
sbb
retf
loope
or
ins
or
stos
adc
push
popa
mov
adc
and
jp
inc
adc
es
push
ja
add
push
dec
pop
shr
pop
add
push
add
or
push
(bad)
add
ret
stos
jo
cmp
inc
adc
bound
cmp
arpl
and
test
mov
add
push
cmp
fdiv
mov
xchg
pushw
scas
mov
add
mov
add
xor
dec
test
cmps
inc
inc
dec
ret
nop
je
add
push
push
arpl
ins
ins
inc
add
push
dec
dec
rcl
(bad)
fiadd
cmp
bound
enter
add
sbb
pusha
mov
(bad)
arpl
push
arpl
xor
mov
mov
cmp
jae
test
jecxz
iret
pop
aas
dec
neg
je
pusha
sar
fmul
mov
push
loopne
jae
dec
jne
ss
adc
je
adc
lods
fdiv
je
jb
arpl
jl
mov
sbb
sbb
das
outs
xor
dec
sbb
pop
dec
mov
push
mov
es
push
movs
cwde
stos
or
cvtps2pd
shl
dec
clc
or
add
sub
es
or
or
int3
stos
ins
xor
or
add
xor
fadd
push
les
outs
jae
or
mov
or
adc
inc
mov
mov
add
imul
sbb
pop
inc
dec
push
addr16
and
or
push
imul
loope
daa
sbb
sub
movs
jae
icebp
ja
(bad)
gs
and
jo
outs
fisubr
(bad)
adc
and
cli
sbb
test
push
jmp
jmp
sub
ins
cmp
inc
jo
adc
(bad)
lock
das
add
jne
out
rcr
cmp
cld
xchg
dec
out
and
(bad)
cmp
stos
inc
imul
les
dec
lods
daa
inc
clc
inc
mov
push
jo
jl
loop
add
gs
and
jmp
push
xor
(bad)
jmp
sbb
mov
ss
push
inc
(bad)
mov
outs
xchg
or
mov
mov
lods
or
jne
arpl
xor
sub
iret
outs
mov
fild
arpl
mov
test
iret
pop
arpl
dec
sbb
sahf
in
sub
inc
push
retf
test
or
idiv
add
dec
add
push
add
mov
sub
icebp
sbb
mov
add
ror
in
sbb
rsm
or
leave
pusha
sbb
cmp
push
inc
mov
add
jbe
daa
(bad)
(bad)
jl
inc
nop
push
inc
push
dec
pusha
out
mov
pop
test
shl
push
mov
push
(bad)
je
or
movs
enter
in
pop
and
or
rol
dec
aas
call
mov
inc
inc
push
cs
ss
or
adc
mov
lea
cli
pop
add
or
call
fs
repnz
mov
sar
sbb
cmp
fs
jl
shl
cmps
gs
ret
(bad)
mov
addr16
in
in
add
or
adc
adc
cmps
test
cmp
add
xor
push
ret
shr
fcom
cmp
mov
add
daa
sbb
fcom
fild
fldenv
inc
aam
jbe
add
in
add
sub
push
inc
ins
or
sbb
aam
pop
or
fcmovnbe
mov
push
push
mov
loopne
jo
cs
hlt
cmps
push
in
dec
sar
push
hlt
inc
xor
test
push
aam
in
imul
sub
mov
mov
inc
mov
in
ins
cmp
adc
mov
(bad)
mov
push
dec
inc
inc
inc
push
ins
inc
dec
push
sub
(bad)
push
cld
or
enter
push
fdiv
out
imul
or
ss
outs
cmp
call
je
xchg
mov
push
jge
imul
lods
cld
sahf
cmp
mov
loop
nop
rcl
push
cmovbe
outs
dec
jne
ror
ret
xor
push
adc
inc
mov
and
loop
lock
mov
outs
cwde
inc
call
ret
mov
adc
and
fs
dec
xor
addr16
dec
mov
mov
loopne
paddsw
jg
ss
adc
adc
cmp
(bad)
dec
cmp
out
jl
jle
push
and
pop
(bad)
fmul
jge
xlat
pop
xor
scas
or
nop
test
add
pop
jg
push
pusha
ins
pop
sub
inc
dec
ja
pop
outs
pop
jmp
bound
jae
xchg
ins
stos
(bad)
pop
add
adc
mov
pushf
popa
rcr
or
cmovne
add
and
and
or
outs
cli
gs
inc
ins
jb
shr
clc
or
rcl
adc
mov
push
mov
and
add
loopne
and
inc
xchg
mov
dec
outs
inc
and
jae
jae
push
call
js
pop
pusha
push
pop
pop
adc
mov
clc
mov
adc
mov
or
or
dec
push
or
jae
xchg
pop
and
mov
js
ret
sub
daa
lods
xor
mov
push
fs
loopne
or
call
jae
mov
or
cmp
or
jp
scas
mov
cmps
popa
ins
outs
addr16
push
outs
(bad)
retf
jle
jmp
ja
out
fisttp
xlat
or
pop
enter
dec
mov
dec
pop
push
outs
imul
add
movs
sbb
inc
push
jmp
inc
std
das
mov
imul
out
jo
outs
or
mov
and
dec
rol
int
push
rcl
sahf
cmps
adc
adc
push
or
jne
push
mov
lock
cmp
adc
inc
hlt
movs
add
inc
cld
call
dec
pop
fwait
js
adc
inc
and
cmovno
popa
jns
or
call
push
or
or
sbb
xor
jmp
xchg
dec
inc
dec
inc
push
data16
mov
adc
sbb
mov
push
lods
movs
in
add
sti
popf
ins
clc
movs
or
lahf
xchg
adc
je
adc
arpl
jns
and
and
scas
gs
jge
xchg
sbb
mov
add
or
dec
and
adc
outs
sbb
push
retf
dec
dec
push
xor
idiv
add
mov
lds
push
jb
ret
in
xchg
jb
or
int
adc
les
sbb
(bad)
mov
mov
sbb
or
data16
cmp
jne
cld
scas
push
xor
mov
mov
inc
inc
or
mov
xchg
inc
adc
daa
cmp
mov
mov
scas
dec
xor
cmps
dec
pushf
rcl
cmp
fimul
adc
adc
dec
xchg
ins
fstp
popa
js
mov
cmps
inc
push
mov
xchg
clc
adc
mov
sbb
push
in
xchg
test
not
inc
or
rol
(bad)
jmp
push
dec
bound
push
add
push
xchg
cmp
cld
pop
mov
arpl
enter
mov
add
fwait
imul
inc
push
mov
inc
mov
inc
jns
es
out
or
ds
pop
mov
pop
inc
fild
xchg
(bad)
mov
dec
rcr
cmp
pushf
scas
add
sub
mov
add
aaa
add
pushf
sahf
lds
pop
sub
push
adc
popa
inc
stos
jne
dec
adc
sub
test
add
xor
or
mov
inc
jne
fist
add
addr16
push
push
dec
dec
gs
or
jns
pop
push
fs
(bad)
sbb
nop
jle
rcl
mov
retf
imul
icebp
mov
gs
jo
add
sahf
ins
enter
cmp
inc
and
dec
loopne
dec
ds
sub
jge
ins
ins
pop
in
cmp
outs
sbb
js
adc
add
add
sub
xchg
dec
mov
lods
cmp
loopne
push
jg
dec
imul
cli
scas
adc
js
ins
sub
sbb
add
aaa
sti
or
out
das
call
add
add
or
pop
inc
jle
mov
or
sbb
sub
outs
dec
in
mov
add
jl
push
mov
push
and
shr
adc
rcr
mov
(bad)
sub
inc
fnstsw
inc
bound
ret
jg
gs
inc
ins
popa
jae
cs
lock
stos
les
push
jb
sub
pcmpeqd
clc
call
jb
ins
gs
jmp
pop
and
xor
add
xchg
adc
dec
shr
pushf
loopne
inc
sub
cmp
xchg
sub
add
jae
jns
push
push
test
bound
sbb
cmc
popa
(bad)
fcmovne
in
add
push
popa
leave
sysret
xlat
dec
adc
js
sub
and
sbb
call
xor
or
push
in
movs
inc
add
add
lods
inc
mov
into
bound
leave
cmp
mov
pop
add
aas
xchg
mov
push
pop
or
pushf
aas
dec
or
bound
sub
pop
mov
xchg
dec
add
out
or
clc
push
aaa
ss
xor
or
cmp
mov
pop
mov
mov
je
xchg
mov
sbb
push
sahf
cdq
push
jl
cs
ds
sbb
jmp
mov
xchg
in
or
sub
mov
push
std
ror
das
mov
repz
(bad)
inc
sub
les
adc
aas
cmp
cs
push
mov
jmp
aas
fs
push
aas
pusha
xor
fadd
push
call
xor
test
je
sub
push
scas
fsubp
rol
pop
pop
aas
rcr
xchg
jne
push
aas
mov
enter
sbb
sbb
xchg
ds
sub
loopne
jbe
fiadd
or
xor
cmp
inc
(bad)
loopne
mov
js
push
and
and
adc
int3
call
loopne
cld
lock
adc
add
ret
js
hlt
mov
lar
pop
mov
cwde
push
icebp
retf
(bad)
xchg
xor
imul
pop
std
mov
sahf
add
pop
sahf
popa
add
mov
scas
mov
das
dec
je
mov
imul
sub
mov
or
rcr
js
aam
sub
mov
cmp
adc
ret
inc
add
mov
sbb
ret
push
rcr
jns
les
pushf
sbb
xor
ss
dec
sbb
(bad)
push
cwde
sbb
jb
adc
adc
push
scas
(bad)
sub
jmp
sbb
mov
mov
enter
out
mov
call
dec
dec
cmp
addr16
mov
add
inc
dec
mov
sbb
pminub
clc
add
ins
dec
ds
xchg
std
adc
add
push
mov
pop
sbb
sub
jp
add
ror
std
xchg
push
add
add
js
jae
xlat
cmp
arpl
fsub
or
frstor
ss
cli
and
or
adc
in
jmp
push
(bad)
xor
aad
clc
push
or
or
loopne
mov
sub
ins
and
inc
gs
xor
push
mov
adc
mul
jmp
cmp
xor
xlat
add
aam
pop
dec
cwde
add
sub
in
mov
(bad)
loopne
mov
dec
(bad)
fadd
and
pop
daa
add
outs
xchg
xor
popa
mov
mov
xor
xor
inc
pop
xchg
mov
cmp
bound
inc
xlat
rcl
sub
sti
push
push
test
fidivr
and
loopne
pop
sub
jae
sub
sbb
add
push
inc
add
jns
dec
adc
in
adc
mov
rcl
pop
push
lea
out
adc
add
adc
xchg
lock
sub
xchg
enter
sub
adc
sub
js
push
adc
push
add
pop
out
shl
xchg
sub
cwde
inc
sub
repnz
jnp
movs
adc
mov
adc
inc
arpl
ror
inc
jne
or
inc
add
jo
adc
or
scas
xchg
cmp
movs
or
dec
push
jge
mov
inc
cmp
js
sub
push
fisub
push
push
jo
int3
push
mov
xor
xor
stc
movs
xor
mov
xor
addr16
xor
je
rol
and
ss
cmps
lods
xor
push
mov
sbb
cmp
jo
dec
add
(bad)
fisttp
xor
popf
xor
paddb
ins
mov
push
push
add
inc
sahf
pop
inc
push
push
imul
jbe
std
dec
mov
mov
push
push
enter
(bad)
mov
sub
add
mov
das
neg
dec
sbb
mov
push
das
stos
pop
stc
(bad)
fcmovnb
push
adc
dec
push
add
into
daa
add
add
test
jg
add
add
add
add
cmp
repnz
add
and
fild
sub
add
sbb
fcomip
(bad)
loop
or
add
push
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
in
(bad)
in
jmp
test
cmps
jmp
jmp
(bad)
clc
add
dec
dec
add
repz
push
push
imul
test
out
xchg
ins
es
loopne
ins
mov
lock
add
je
push
adc
repz
dec
jno
push
stc
out
adc
mov
push
adc
push
cmp
sbb
jne
clc
and
push
mov
sub
idiv
ss
sub
jbe
inc
pop
mov
cwde
push
call
ss
cmps
or
pushf
xor
movs
jg
sti
(bad)
cmp
int3
sbb
ss
push
and
adc
jno
clc
pop
mov
pop
push
ror
inc
ins
or
fs
pusha
xor
push
dec
push
sar
imul
mov
inc
hlt
pcmpgtd
and
shl
inc
or
inc
imul
pop
rcr
inc
mov
lods
mov
jmp
loope
or
xor
sbb
sbb
pusha
test
or
push
add
jno
mov
pop
pusha
shr
mov
sbb
push
add
les
dec
or
rcr
lea
fst
movs
inc
inc
je
push
pop
cmovo
pop
adc
xor
mov
jae
jge
push
sub
jge
aaa
daa
test
rcr
inc
xchg
cs
ins
outs
jbe
fwait
inc
cmp
add
pushf
imul
out
mov
imul
mov
dec
xor
sub
dec
push
sub
and
inc
sub
ja
pop
or
mov
pop
jl
imul
mov
sub
or
cmp
jno
mov
or
mov
push
cmp
je
mov
add
stos
cmp
loopne
inc
sub
stc
(bad)
and
dec
popa
imul
jno
sub
ins
jns
aad
add
xor
pop
mov
pop
bound
sbb
rcl
data16
push
loopne
push
sub
mov
pop
sbb
dec
mov
push
packssdw
xor
cmp
leave
sub
bound
in
adc
mov
jno
dec
ds
gs
pusha
int
push
dec
arpl
stos
push
rol
jmp
push
add
jne
and
retf
push
and
jnp
adc
cmp
cmp
inc
je
xchg
push
add
sub
jo
and
inc
add
retf
rcl
or
or
and
mov
inc
push
shl
(bad)
add
pop
loope
movs
or
les
scas
(bad)
je
out
or
sbb
xchg
adc
inc
callw
and
adc
in
pusha
jae
daa
jo
adc
movs
inc
inc
neg
js
adc
mov
lods
dec
inc
or
xor
lods
cmp
mov
out
lea
mov
pop
inc
ins
into
xor
retf
xchg
xchg
xchg
popf
enter
xchg
xchg
xchg
xchg
xor
cdq
xchg
retf
xchg
xchg
mov
xchg
xchg
xchg
xchg
dec
push
xchg
xchg
fdivr
and
xchg
ins
xchg
add
sub
inc
mov
pusha
or
xchg
dec
inc
stos
adc
mov
cmps
shl
sub
mov
test
dec
fwait
add
inc
test
dec
pop
pop
xchg
mov
movs
test
rcr
mov
je
and
cmp
xchg
sbb
inc
out
xchg
std
xor
push
or
jo
jecxz
std
and
add
mov
inc
lods
jne
ret
ret
pusha
popa
jo
aam
and
mov
test
test
pop
cmp
test
cmp
(bad)
lds
test
sub
inc
inc
or
mov
add
or
xor
imul
mov
fsub
cmp
into
mov
sar
pop
shr
lods
dec
loop
repz
rol
mov
test
sub
(bad)
mov
jmp
imul
clc
xor
jge
adc
imul
inc
or
movs
jmp
xor
or
push
and
inc
shr
xor
inc
or
mov
inc
mov
xor
jb
push
push
cmp
addr16
add
fdivr
or
add
pop
inc
jnp
sub
push
(bad)
cmp
add
xchg
test
cmp
mov
fcom
pusha
add
push
sbb
test
pavgw
inc
xor
je
das
push
and
add
pop
daa
es
adc
mov
pop
nop
rcr
loopne
daa
push
xor
popa
lahf
adc
dec
add
pop
mov
or
bound
xchg
dec
xchg
mov
not
rol
shr
push
test
xchg
test
jae
daa
dec
int
sub
inc
fwait
int3
add
addr16
mov
mov
inc
jo
arpl
pop
push
or
adc
sti
cmp
sti
icebp
pusha
scas
(bad)
push
ror
ins
inc
inc
stos
xchg
add
cs
dec
cmp
loop
adc
or
mov
cwde
dec
mov
(bad)
pop
sbb
inc
add
add
and
push
add
fadd
mov
iret
add
cmp
xchg
add
jae
dec
inc
or
loopne
adc
push
and
sub
fbld
xor
dec
jle
mov
je
jns
nop
xor
sbb
pop
add
add
test
inc
pop
or
pop
popa
pop
dec
clc
icebp
cmps
sbb
or
adc
pusha
dec
xor
dec
rol
pop
jg
(bad)
jo
mov
mov
loopne
add
and
dec
mov
add
push
and
jg
pusha
pop
push
dec
aam
mov
call
and
xor
lods
push
adc
push
sti
lahf
loopne
rcl
jmp
call
pop
add
push
and
sbb
fld
sub
pop
je
push
inc
mov
xor
mov
dec
stos
out
push
jae
add
mov
xchg
dec
imul
jae
inc
mov
xor
push
mov
in
jmp
pop
dec
lock
mov
jmp
pop
xlat
sub
sub
push
ret
es
xor
aaa
mov
sub
addr16
out
inc
in
test
shl
rol
call
test
dec
push
pop
pop
add
(bad)
cmp
cmps
sub
pop
adc
das
sbb
retf
xor
pop
push
cmp
xor
or
sub
arpl
push
cmp
push
repz
sbb
and
xchg
popf
adc
pop
xor
push
scas
rcr
adc
adc
mov
sar
js
mov
xchg
jo
adc
xchg
adc
and
push
mov
push
addr16
xor
mov
addr16
fadd
arpl
add
inc
xor
sbb
add
ret
les
in
and
jne
xor
cwde
sub
cmp
adc
inc
xchg
dec
je
push
add
push
add
mov
sahf
cwde
inc
xor
repz
int
adc
mov
fidiv
inc
push
test
(bad)
fcom
inc
push
jb
ret
xor
ret
pop
inc
mov
or
in
lods
sar
ror
out
mov
lds
movs
xor
pop
pop
dec
cdq
mul
sub
mov
retf
fidiv
out
pop
lds
or
jns
rcl
xor
jbe
mov
mov
xchg
dec
pop
push
add
xchg
fadd
mov
ins
mov
mov
shl
jmp
mov
jno
sbb
xchg
stos
adc
push
cmp
pop
imul
or
xchg
lds
loopne
pop
mov
push
adc
int3
mov
rol
xchg
sbb
shl
or
pop
push
shl
test
(bad)
movs
nop
shl
pop
in
mov
push
daa
inc
add
push
push
out
push
pop
inc
cdq
dec
or
loopne
pop
loope
cmp
loop
jg
add
dec
test
adc
aam
xor
jl
js
lock
pop
pop
(bad)
cwde
cmp
add
popf
push
adc
adc
sbb
fisubr
sbb
loop
jae
push
inc
and
push
or
sbb
imul
arpl
pop
inc
dec
pop
outs
inc
add
jg
outs
mov
or
jo
sub
adc
scas
inc
jne
sar
xor
adc
xor
pusha
outs
sub
pop
sub
pop
outs
loopne
xor
mov
inc
jle
jb
out
fisttp
pop
inc
push
sbb
push
push
cmove
pop
xor
push
mov
(bad)
push
jnp
push
push
(bad)
xlat
xchg
ds
cmp
inc
lods
shr
js
sbb
and
xchg
dec
bound
outs
inc
push
out
scas
inc
pop
dec
push
out
ins
ret
dec
jbe
add
dec
call
cdq
lock
push
dec
sbb
fcmovnbe
add
inc
pop
dec
xchg
fsub
mov
es
pop
inc
pop
mov
fnsave
mov
fcom
jecxz
repnz
push
cmovge
jne
mov
cs
inc
mov
test
xchg
and
pusha
push
push
push
add
or
sub
inc
clc
adc
nop
xor
push
xchg
mov
into
add
call
pop
add
or
pop
sbb
xor
ja
ja
les
ds
inc
pop
out
mov
jae
xchg
dec
inc
pop
out
iret
push
dec
push
jo
or
cmp
inc
popa
stos
push
inc
gs
pop
(bad)
hlt
rcr
push
bound
push
sub
xchg
xor
mov
dec
dec
loop
scas
adc
push
dec
inc
inc
pop
dec
adc
dec
cmps
jbe
push
out
movs
or
fiadd
out
mov
dec
xor
inc
pop
shl
dec
pop
dec
into
or
fst
add
fadd
loope
add
xchg
aam
and
sbb
push
sbb
push
pusha
dec
pop
push
pusha
imul
or
outs
jno
aam
cmp
pop
or
inc
clc
js
pop
or
xchg
sub
xor
dec
add
ins
mov
pop
(bad)
push
inc
pop
inc
lock
call
repz
leave
pop
pop
mov
cdq
add
lahf
or
int3
cmp
dec
outs
sbb
sbb
repz
mov
mov
mov
pop
add
mov
imul
stos
mov
mov
mov
push
mov
jmp
ss
jl
mov
scas
mov
xchg
mov
sbb
mov
mov
jecxz
mov
push
mov
fmulp
enter
or
enter
scas
aad
enter
and
enter
out
mov
enter
pop
xchg
iret
repz
mov
enter
popa
or
and
test
and
xchg
mov
imul
cs
and
and
jae
mov
sub
add
cs
push
aam
adc
daa
and
push
outs
rol
push
addr16
movs
(bad)
push
test
lods
and
movs
neg
xchg
es
or
dec
or
add
mov
or
cmps
mov
push
lds
dec
push
jmp
mov
dec
push
mov
push
xchg
out
add
repnz
xor
pusha
mov
(bad)
(bad)
fild
add
add
or
ret
(bad)
mov
xchg
dec
nop
js
mov
add
aam
jnp
adc
cmp
swapgs
jo
(bad)
ja
ss
lahf
or
add
fsubr
xor
and
enter
dec
ja
repz
(bad)
daa
pop
xchg
jno
push
or
lods
adc
xlat
imul
and
jb
cwde
push
shr
int
mov
push
sub
dec
stos
add
push
mov
add
sbb
daa
inc
das
dec
mov
adc
push
shl
iret
mov
cmpxchg
movnti
(bad)
sbb
dec
ret
adc
adc
inc
pop
shl
dec
add
inc
lods
dec
jne
cmc
sbb
pop
sbb
ins
pop
and
and
mov
fld
mov
push
mov
jbe
or
pop
shl
gs
xchg
xchg
test
add
imul
dec
ins
aam
cld
adc
adc
xchg
cmp
je
xor
pop
imul
add
or
mov
xchg
enter
or
xchg
popa
dec
push
test
(bad)
pop
mov
dec
lahf
ins
cli
loope
add
js
or
jb
jo
or
jbe
inc
push
cdq
jp
push
or
out
jp
push
jge
icebp
hlt
push
add
or
cmps
addr16
push
add
call
pop
xor
out
cmp
cmps
add
mov
fld
pusha
or
xlat
scas
push
cmps
jle
push
adc
ins
and
call
div
push
and
push
push
push
and
das
or
les
sbb
ffreep
or
loopne
cwde
mov
add
pop
out
push
test
push
sub
fadd
adc
out
adc
rol
je
out
in
sub
movs
add
xor
xor
pusha
adc
push
add
push
inc
adc
and
or
add
and
xlat
lock
cmp
sub
pop
pushf
dec
sub
cmp
adc
dec
popa
jns
hlt
inc
or
inc
mov
fadd
push
bound
xor
mov
bound
retf
cs
adc
push
add
xor
sbb
push
loope
je
add
jae
ret
add
push
push
add
aaa
or
(bad)
mov
add
xor
cmp
mov
or
cdq
loopne
mov
fwait
js
adc
pop
mov
inc
and
xchg
or
inc
sti
jb
mov
xor
das
jae
hlt
loopne
jmp
mov
ss
mov
sub
push
sar
gs
add
call
sub
das
pop
inc
pusha
mov
xor
pushf
cs
push
mov
lods
sahf
xor
jnp
or
in
mul
inc
sti
outs
outs
loopne
pop
inc
push
sbb
adc
cmp
xchg
mov
push
outs
pop
jge
outs
fisttp
daa
jnp
add
mov
out
stos
fimul
dec
push
add
leave
in
xor
pop
mov
(bad)
out
fs
mov
enter
enter
loopne
leave
out
vpcmpeqb
jmp
pop
dec
jno
add
daa
mov
movs
icebp
ins
add
or
add
mov
in
loop
jmp
inc
in
or
es
mov
cmp
idiv
push
outs
movs
pop
pop
and
dec
fcomp
adc
fiadd
xchg
adc
push
inc
call
push
mov
lods
out
stos
int
icebp
inc
ins
or
test
sub
adc
pusha
rcpps
push
sub
aad
add
jbe
rcr
pop
pop
(bad)
popa
push
sub
test
or
out
mov
cmp
xchg
lods
add
dec
pop
aad
adc
and
inc
add
sbb
jo
mov
xor
xor
or
jno
mov
jno
sbb
dec
sbb
or
cdq
xchg
les
adc
or
jno
xchg
jp
popw
jo
daa
and
test
imul
add
mov
test
xchg
retf
mov
or
pop
sbb
sbb
jl
int3
neg
sbb
imul
fld
sbb
lds
mov
into
xor
sbb
sbb
mov
sbb
iret
sub
rcl
sbb
pop
mov
add
xchg
inc
and
lods
dec
sbb
pop
es
or
sahf
imul
jge
bound
popa
or
loope
dec
es
pop
adc
pop
push
or
push
jnp
push
dec
dec
setae
jb
or
popf
inc
test
xchg
(bad)
pop
mov
push
sub
scas
cmp
loope
bound
mov
loope
or
mov
int
adc
sub
dec
dec
add
out
adc
mov
jo
cdq
(bad)
fs
in
cs
or
inc
in
fwait
dec
push
fcomp
aad
dec
or
pop
ins
outs
mov
adc
scas
test
xor
gs
fwait
je
pusha
push
adc
push
adc
lahf
test
cmp
xchg
dec
dec
sbb
cmp
call
lea
inc
and
jmp
pop
and
je
call
inc
push
and
dec
dec
mov
adc
cmps
mov
adc
jbe
push
mov
inc
fisubr
xor
outs
cld
sahf
cmp
fcom
mov
adc
int3
movs
aad
dec
xchg
(bad)
jnp
shr
movs
rol
push
test
jmp
aam
sub
pop
aas
adc
cmc
out
inc
pop
and
pop
add
push
push
and
mov
or
xor
je
les
xchg
mov
mov
pushf
and
daa
in
or
xchg
inc
mov
imul
xor
add
add
out
movs
cmp
dec
or
pusha
and
jnp
mov
(bad)
popa
mov
cmp
xlat
add
inc
adc
outs
les
or
cli
adc
or
and
das
jl
jl
add
addr16
dec
push
inc
add
mul
inc
outs
push
cmps
outs
jp
fild
mov
xchg
fs
push
xor
push
mov
or
inc
js
gs
fnstenv
push
pop
pop
push
dec
bound
push
arpl
mov
add
inc
(bad)
pop
addr16
or
ins
inc
xchg
rcr
les
inc
icebp
mov
(bad)
adc
push
dec
inc
add
mov
cmp
fdiv
ret
rol
or
jge
add
xor
cmp
(bad)
sbb
and
jnp
adc
imul
cwde
jns
cld
dec
or
push
xor
lea
push
push
enter
cmp
int
mov
ret
pushf
or
jge
movs
jmp
xor
dec
add
pushf
pushf
xor
cwde
imul
lahf
push
inc
jnp
push
pop
dec
loopne
adc
inc
nop
cdq
mov
cld
adc
(bad)
xor
lea
lods
mov
or
adc
sub
shl
test
push
xchg
sahf
pop
fild
add
add
and
push
sub
pop
sbb
add
cmp
ret
pusha
cmp
pop
adc
xchg
sahf
(bad)
aas
loope
test
cmp
(bad)
je
push
xor
cmp
mov
xor
jne
enter
push
inc
jo
ins
imul
imul
bound
fs
ins
push
out
push
dec
out
sub
cwde
sub
or
push
gs
add
dec
sahf
xor
test
xor
dec
dec
dec
xor
imul
cmp
add
adc
(bad)
mov
inc
enter
iret
add
mov
pop
push
adc
pop
sub
push
fs
add
inc
mov
cs
inc
pusha
xlat
cmp
dec
fsub
pop
sahf
int3
sbb
push
pop
lds
mov
cmp
cmp
add
mov
sbb
repz
inc
pop
fcmovnu
dec
sub
xchg
call
frstor
push
push
pushf
dec
adc
sub
inc
lods
rcr
mov
scas
cmc
fiadd
push
jg
cmp
and
div
sub
mov
in
pop
adc
push
mov
xchg
gs
jmp
pusha
sbb
cmp
ds
sub
fidiv
or
inc
pop
xor
into
and
fwait
add
(bad)
pop
rcr
and
jp
test
out
sub
arpl
jg
jmp
gs
jo
jns
gs
shl
add
add
addr16
mov
xor
and
mov
ins
or
inc
push
jo
test
mov
push
call
lock
mov
push
arpl
or
sbb
add
(bad)
lock
loopne
outs
xor
ins
sbb
mov
xor
sub
div
jecxz
test
scas
jg
push
xor
(bad)
push
xchg
xor
popa
fxch
lds
and
pop
sub
fwait
div
leave
xor
(bad)
adc
push
cs
popa
lods
in
add
fdivrp
ret
mov
in
push
jne
les
sub
mov
sub
mov
je
repnz
or
fisubr
push
outs
jo
mov
imul
das
in
sub
inc
pusha
and
pop
jecxz
lahf
jecxz
daa
mov
pop
aam
and
lock
fsub
pop
sbb
pusha
jo
push
add
mov
sub
rol
and
stos
pop
add
pop
ja
push
int3
xor
mov
pop
bound
xchg
xlat
out
sbb
pop
fild
xor
pop
jo
sahf
jmp
add
inc
xchg
xchg
push
int3
scas
or
das
pop
ret
inc
inc
rol
adc
push
add
sbb
jnp
scas
dec
inc
jb
addr16
mov
adc
and
shl
cmps
pop
sub
sbb
jmp
xchg
sbb
call
xor
call
arpl
dec
add
jnp
adc
loope
outs
cmp
or
inc
inc
outs
jne
ret
push
mov
jae
push
shl
or
jnp
push
popa
jae
jne
xlat
imul
xor
xchg
es
cmp
hlt
xor
mov
mov
std
push
in
mov
dec
pushf
movs
mov
cli
and
push
adc
dec
mov
pusha
jmp
cmp
int3
les
fsub
aaa
mov
retf
adc
mov
xor
mov
mov
mov
xchg
inc
sbb
inc
adc
pop
aas
shl
je
clc
and
push
fistp
ins
sub
shr
mov
gs
xor
sbb
ss
adc
mov
sub
push
data16
int3
push
dec
mov
(bad)
fsub
lds
rol
shr
push
jbe
sub
imul
sub
or
nop
sub
jo
stos
les
add
sub
js
xlat
and
sub
adc
xor
cmp
sbb
sub
mov
loopne
ja
cwde
in
ss
nop
xchg
popa
push
test
jmp
xchg
adc
gs
push
mov
push
xchg
cmp
outs
xchg
fld
or
push
push
dec
xor
cs
shl
dec
add
in
push
xor
in
test
jns
jb
xchg
sar
push
loope
cmp
sbb
sub
sahf
pushf
pushf
mov
fcom
dec
dec
dec
inc
push
xchg
daa
and
xchg
daa
daa
icebp
sbb
xchg
xchg
jle
fisub
out
leave
leave
leave
dec
ja
shl
fs
sti
cmp
jo
movs
xor
in
sbb
jmp
pop
inc
and
ss
and
sbb
mov
sbb
xor
ins
rol
mov
loopne
mov
in
push
adc
in
in
ret
(bad)
lock
adc
adc
add
in
jmp
bound
ins
jns
in
sub
inc
add
ret
and
push
retf
popf
and
loopne
or
cmps
sbb
lds
or
sub
add
or
sbb
xchg
xchg
jp
push
or
rol
in
xchg
dec
fiadd
fs
ins
mov
xchg
mov
jo
(bad)
test
sbb
ror
or
in
inc
ins
popa
jae
je
push
adc
ror
or
gs
aad
mov
cmp
enter
mov
push
popa
or
nop
stc
cmp
jb
jbe
outs
pop
push
xchg
push
adc
xor
inc
ss
jns
je
and
pusha
repnz
mov
push
fmul
push
jl
xchg
lods
int3
idiv
or
jnp
shl
dec
add
inc
or
cmp
ins
ins
dec
mov
js
cmp
int
jg
adc
dec
and
pop
push
ja
add
sub
popf
loope
loope
fcom
pop
xchg
fdivr
imul
inc
cmp
ins
jo
push
outs
lock
or
aam
cmps
and
adc
dec
inc
enter
ja
jnp
mov
dec
pop
dec
ja
out
adc
outs
lahf
ficom
imul
dec
sub
xor
shr
add
fucom
fsubr
gs
dec
xor
ins
fdivr
inc
xchg
mov
mov
xchg
dec
cmp
or
(bad)
ror
pop
scas
push
xor
jmp
lock
(bad)
jnp
rcr
lds
cmp
xor
add
jns
mov
push
mov
imul
loope
sbb
mov
jbe
imul
sbb
xchg
in
jae
xchg
loopne
(bad)
jo
or
and
ret
push
arpl
mov
test
or
or
mov
push
jb
or
in
(bad)
push
or
pop
xchg
adc
cmp
pop
adc
mov
sbb
mov
addr16
mov
popa
jmp
add
pop
movmskps
jle
mov
(bad)
sub
out
cmovb
adc
add
inc
sub
sbb
and
movs
les
xchg
pop
rol
xchg
xor
ror
fmul
or
mov
aam
cwde
inc
out
shl
jp
sar
mov
xlat
adc
jae
sbb
xchg
add
bound
or
das
rcl
and
inc
ds
adc
ret
push
inc
not
ja
not
push
adc
jnp
mov
mov
sub
sbb
and
dec
sub
mov
pop
fwait
int3
push
outs
ins
mov
or
inc
dec
les
dec
test
imul
push
xchg
dec
adc
sbb
cs
or
les
sbb
call
clc
or
loopne
mov
lods
or
rol
cmp
rol
rcr
mov
mov
nop
adc
mov
pop
inc
add
sub
outs
pop
mov
test
xor
inc
data16
or
mov
jmp
inc
inc
cs
outs
cwde
mov
in
in
ds
inc
inc
inc
inc
and
sbb
inc
pusha
mov
inc
inc
inc
lods
aad
out
es
inc
inc
inc
dec
jb
ret
inc
cs
inc
out
out
xor
inc
inc
inc
xor
dec
jne
cs
inc
inc
shl
adc
inc
inc
pop
jg
retf
inc
cs
inc
out
adc
cmp
js
inc
test
jb
push
mov
mov
add
pop
push
cmps
push
lods
inc
and
xor
lock
sub
aaa
es
adc
push
sub
inc
push
or
mov
inc
sub
loopne
dec
movd
enter
xchg
xchg
clc
test
or
mov
push
test
add
sar
(bad)
dec
add
sbb
jecxz
add
xor
or
push
mov
mov
inc
dec
int3
pop
dec
sbb
add
mov
pop
ins
mov
pop
add
bound
dec
popa
jmp
pop
inc
js
rol
xchg
outs
jmp
fiadd
loopne
and
add
cmps
aaa
adc
cmp
leave
add
add
inc
or
jg
or
add
mov
xchg
inc
adc
push
pop
xchg
jae
rol
outs
mov
xor
call
add
xchg
enter
inc
shl
sub
xchg
fld
add
xlat
jmp
fidivr
repz
cmp
mov
inc
mov
rol
out
or
aas
inc
dec
mov
cmps
add
mov
mov
pop
or
dec
or
and
shr
mov
and
(bad)
loopne
add
mov
sbb
pusha
and
jbe
push
(bad)
mov
inc
xor
xlat
movs
inc
inc
or
sbb
or
pop
jp
cs
xor
add
add
add
sbb
mov
jmp
cwde
jmp
sbb
pop
pop
int
rol
dec
int3
pop
pop
bswap
adc
inc
outs
lds
pop
sbb
inc
push
mov
pop
inc
adc
dec
add
sub
mov
fwait
add
jae
xchg
inc
dec
adc
mov
inc
test
adc
cwde
cwde
fwait
pop
cmc
inc
pop
push
outs
add
add
cmp
add
shr
loopne
call
pusha
bound
xchg
inc
inc
or
add
push
mov
inc
sub
lods
dec
mov
inc
dec
jo
add
lods
sbb
push
add
pop
xchg
mov
xor
pop
add
adc
xor
(bad)
out
pop
inc
xchg
pop
cmp
dec
fwait
add
inc
test
pop
push
pusha
xchg
cwde
dec
adc
mov
adc
popa
xchg
add
pop
fadd
encls
repz
or
aas
dec
popa
pushf
mov
aam
push
aas
mov
pop
jns
sbb
in
push
fcom
or
ins
fstp
or
aam
push
xchg
add
in
push
and
imul
aam
push
mov
in
aas
enter
pop
or
push
push
outs
repz
mov
loopne
nop
ret
hlt
cmps
in
dec
ss
jge
xlat
ins
push
hlt
inc
xor
test
push
aam
sub
mov
in
cs
mov
inc
mov
ins
cmp
out
mov
sahf
sub
fs
(bad)
mov
push
dec
inc
inc
inc
push
ins
inc
dec
push
pop
mov
(bad)
push
cld
or
adc
push
test
push
aam
lock
ror
xchg
push
mov
rcr
ja
jnp
call
je
xchg
mov
push
test
enter
fsubr
cld
sahf
add
(bad)
xor
mov
je
shl
in
sub
or
imul
add
add
pop
dec
(bad)
pusha
and
push
pop
xor
add
test
add
inc
mov
mov
push
imul
cmp
jmp
sbb
mov
mov
sbb
dec
mov
pop
add
pop
mov
mov
icebp
imul
or
or
inc
xor
inc
inc
or
mov
add
es
loopne
in
push
test
test
xlat
call
xchg
push
inc
mov
or
xchg
push
clc
mov
cmp
add
pushf
repnz
daa
add
push
shl
mov
jl
in
imul
push
push
inc
nop
add
push
cmp
mov
mov
fs
add
aam
push
jle
retf
out
cmp
fs
mov
xchg
sub
stos
xchg
xlat
pop
imul
xor
mov
dec
imul
ret
jo
ss
jo
scas
(bad)
sbb
inc
call
and
(bad)
in
xor
add
jns
or
push
xor
stos
cmp
push
ss
mov
pop
cmp
inc
sub
cs
adc
inc
xor
dec
mov
lea
mov
lea
(bad)
sbb
cwde
mov
ror
mov
shl
xchg
out
shl
daa
lock
outs
pop
add
adc
or
repz
mov
add
jmp
adc
xchg
call
cmp
aam
xor
lds
add
or
out
mov
push
xchg
in
pop
mov
fcom
mov
rcr
sub
xor
in
pop
pushf
dec
xlat
out
mov
loopne
call
or
or
sub
adc
stos
jp
loopne
or
pop
xchg
sti
jne
mov
xor
push
fsub
push
mov
outs
jne
sub
outs
nop
xor
jnp
push
stos
push
in
cmp
add
add
out
aad
push
xor
jne
jae
lock
pop
ins
and
xchg
call
pop
push
add
jl
mov
adc
cmp
push
test
add
xor
add
int
mov
in
sahf
add
sbb
push
sar
das
std
push
lods
test
and
ins
adc
push
jnp
push
xlat
add
sbb
sub
and
and
adc
gs
sete
fsubr
outs
jne
jmp
ror
mov
mov
pop
clc
mov
push
add
and
inc
xlat
jmp
and
add
adc
and
cwde
and
and
fist
sbb
sti
jns
jl
aas
loopne
push
jns
nop
xor
cmc
xchg
inc
sbb
lea
sub
pop
mov
mov
adc
xor
ins
jns
mov
xor
add
(bad)
cwde
out
inc
test
sub
inc
push
inc
add
sub
inc
adc
int
ja
push
jb
fisttp
mov
jnp
fisubr
adc
ins
jo
dec
push
sub
out
jle
jne
push
(bad)
cwde
xor
hlt
or
sbb
xor
test
dec
(bad)
or
dec
mov
outs
lds
xlat
inc
fiadd
adc
inc
and
and
or
ret
cwde
xor
dec
adc
adc
jae
icebp
jmp
pop
fisttp
movs
or
imul
(bad)
(bad)
jno
sub
fiadd
cmps
or
xor
sub
inc
xchg
fidiv
daa
and
xor
pop
cdq
fcom
call
push
xchg
int3
sti
(bad)
and
push
test
add
leave
add
test
leave
inc
call
sbb
enter
sbb
or
pop
lea
mov
jo
mov
and
push
inc
push
jb
fs
in
aaa
jo
mov
and
or
jb
dec
gs
mov
mov
jmp
sub
dec
and
cmp
mov
int3
inc
adc
push
or
lahf
adc
jno
test
sub
jns
inc
xor
jns
aas
mov
popa
jnp
pop
adc
and
mov
or
shl
jge
dec
pop
mov
fwait
jns
jb
test
js
js
push
xor
and
cmp
std
adc
dec
lods
adc
add
stos
mov
sbb
in
inc
jge
das
add
jmp
daa
push
cmp
aaa
ret
pop
test
mov
iret
ins
add
shl
retf
lock
in
pop
mov
add
das
enter
push
mov
in
add
xchg
push
dec
dec
cmps
jae
jo
dec
jmp
push
or
sub
inc
dec
adc
push
in
pop
mov
popf
addr16
adc
cwde
stos
je
pop
dec
sbb
imul
pop
stos
rcl
pop
in
jmp
adc
shl
fcomp
call
pop
adc
mov
and
test
pop
inc
add
pop
mov
xchg
sbb
mov
div
push
push
adc
jecxz
add
rol
mov
dec
add
mov
dec
cs
pusha
int3
sub
jle
loopne
sub
sub
iret
enter
call
push
sti
pop
jns
int3
push
pusha
dec
push
xor
xchg
add
setno
ja
or
pop
dec
and
call
gs
inc
inc
ins
ret
mov
jle
call
mov
test
mov
adc
ins
outs
pop
test
or
or
and
jae
add
loopne
or
sbb
sub
es
sub
fsub
and
ins
jo
or
push
loop
or
xchg
sub
pop
inc
rol
xlat
mov
mov
jno
mov
add
jo
dec
or
test
adc
push
cmp
push
cmp
jne
sub
mov
pop
fmul
jne
jne
loope
add
cmp
test
pop
cli
mov
add
jo
inc
cdq
add
mov
mov
xor
sbb
fcom
fld
pop
xchg
mov
cwde
dec
mov
mov
pop
dec
gs
movs
add
bound
cmp
cmp
dec
pop
enter
pop
inc
jno
(bad)
popf
or
pop
mov
xor
ror
sbb
or
inc
cmp
ret
add
or
ret
sub
push
clc
fcom
loopne
inc
mov
mov
inc
ins
jne
inc
ja
adc
in
push
add
shr
dec
cmp
js
push
sub
les
inc
xchg
mov
add
dec
fcom
push
inc
clc
sbb
mov
push
repnz
mov
mov
add
scas
inc
out
cs
pop
call
bound
in
push
call
add
sahf
and
sti
fidivr
pop
push
jl
pop
mov
push
imul
push
outs
aam
in
cs
jae
ins
je
scas
ja
dec
push
loopne
inc
push
js
and
ret
dec
push
mov
les
and
cmp
jnp
(bad)
cs
push
shl
and
or
add
xchg
xor
test
fwait
jno
or
sbb
lea
push
mov
or
lods
push
js
mov
pop
jecxz
push
jno
add
sbb
add
dec
cmp
dec
add
mov
add
sbb
ret
push
call
(bad)
aas
jns
ret
mov
mov
push
mov
fimul
aas
push
idiv
imul
mov
push
dec
pcmpgtb
add
or
je
(bad)
mov
and
dec
inc
ins
push
push
add
out
mov
and
pop
pop
pop
lahf
push
mov
cmps
lock
fs
add
mov
add
sbb
jae
shl
jne
and
cmp
loopne
sbb
inc
mov
nop
frstor
pop
or
mov
or
sar
jbe
cwde
out
or
mov
or
loopne
xor
jno
and
in
out
add
and
pop
cmp
or
pusha
(bad)
xchg
call
jae
shl
mov
rcr
push
fld
inc
sbb
adc
cld
lock
adc
push
mov
push
mov
cmp
push
dec
lahf
fstp
xchg
or
and
bound
xchg
pusha
sub
adc
jg
jo
lods
dec
or
ret
fndisi(8087
aaa
push
sahf
add
stos
hlt
mov
pusha
lods
push
je
call
and
pushf
sbb
mov
push
push
xor
nop
out
std
mov
mov
int
idiv
or
mov
pop
pop
pop
cmp
pop
mov
loopne
sbb
ss
sub
push
jg
mov
pop
inc
push
mov
setp
push
push
push
clc
pop
ret
jp
lock
adc
jle
push
cld
pushf
mov
pop
es
cmp
out
sbb
fimul
push
or
push
xchg
ins
sbb
ret
and
xchg
(bad)
arpl
loop
cwde
and
out
jo
pop
sub
pop
fsubr
loope
loopne
cmp
mov
sbb
addr16
adc
popa
jns
or
mov
xchg
sbb
je
mov
(bad)
pop
mov
mov
movzx
push
pop
or
bound
sete
inc
adc
or
enter
call
mov
mov
(bad)
ds
pop
or
or
or
lea
iret
iret
ss
mov
push
jne
add
cmp
inc
inc
(bad)
cmp
setle
and
fcom
cdq
mov
mov
cld
fstp
mov
push
push
aam
adc
and
adc
cld
call
cmp
push
arpl
or
(bad)
mov
sub
test
push
mov
mov
test
js
cmp
pcmpgtb
jne
inc
(bad)
jl
and
xor
loopne
fcmovne
pop
imul
out
add
inc
mov
jo
push
mov
push
test
sbb
add
sti
das
mov
cmp
je
or
adc
pop
call
mov
popf
dec
adc
adc
adc
fcom
pushw
jge
add
fs
xchg
aas
cmps
sbb
arpl
in
dec
retf
add
pop
add
add
pop
and
nop
mov
adc
or
sub
adc
add
cdq
add
inc
add
inc
push
adc
idiv
and
mov
xor
push
lea
(bad)
aam
js
sub
push
pusha
push
rol
jle
outs
xchg
int3
cli
mov
pop
push
cld
sub
retf
outs
push
xor
mov
test
je
jmp
icebp
adc
pop
jmp
mov
ja
cdq
leave
mov
fcom
test
lds
pop
jne
sub
ret
int3
lahf
test
add
sub
mov
gs
jmp
leave
mov
mov
push
test
test
xor
sbb
(bad)
pushf
adc
in
(bad)
jecxz
(bad)
hlt
mov
into
loopne
js
add
jl
inc
sbb
push
es
mov
mov
data16
test
je
xchg
test
(bad)
lock
dec
adc
outs
xor
rol
sbb
dec
call
push
mov
sbb
or
push
push
mov
or
div
push
xor
call
and
push
ins
push
cmp
or
adc
lahf
shr
push
inc
xor
test
dec
pop
test
add
push
outs
pop
adc
into
inc
pop
xor
iret
and
sub
(bad)
mov
jg
imul
mov
inc
push
sbb
sbb
pushf
mov
adc
popf
cdq
js
adc
xor
sbb
je
or
inc
or
or
nop
(bad)
loopne
sub
mov
xor
dec
add
xchg
and
push
adc
jmp
cwde
gs
or
stos
push
ins
inc
ins
add
imul
jb
sub
push
dec
je
jmp
cs
add
ins
aaa
fadd
inc
jae
adc
cmp
jo
cmp
stos
inc
in
pop
adc
inc
or
inc
push
add
test
cmp
clc
jle
push
xchg
dec
lods
loop
push
mov
adc
push
push
pop
add
daa
cmp
fstp
mov
mov
add
inc
ss
and
adc
and
add
add
(bad)
enter
push
in
test
sbb
add
adc
cs
test
sbb
call
call
inc
or
adc
jb
cmp
imul
cmp
addr16
adc
cmps
cmp
lahf
fidivr
xor
add
pop
jmp
sub
leave
inc
mov
add
cmp
inc
sbb
rcl
ret
mov
pusha
pop
je
pop
or
pushf
sbb
jne
inc
repz
sbb
pop
adc
aaa
jl
lock
inc
ret
setne
push
mov
mov
xchg
clc
ins
cdq
and
int3
xor
dec
cli
fist
sti
test
stos
xlat
mov
and
add
pop
mov
inc
mov
lahf
dec
stos
xor
in
outs
xor
pop
hlt
neg
jmp
pop
jne
pop
pushf
or
jns
adc
dec
mov
js
sti
mov
vmovaps
or
inc
test
lock
loopne
add
mov
iret
fmul
lds
jno
mov
jmp
dec
pop
in
push
mov
pop
inc
push
in
les
cmps
mov
loopne
scas
fcomp
(bad)
fwait
add
jns
mov
pushf
lahf
and
inc
dec
in
mov
mov
add
mov
push
mov
pop
push
cmp
push
push
out
mov
push
mov
jne
dec
sbb
adc
mov
add
sahf
aas
fadd
je
inc
call
fstp
or
jmp
fs
push
or
dec
inc
cdq
idiv
mov
ret
andnps
stc
jmp
inc
inc
or
mov
hlt
cmp
cmp
cs
jmp
xor
retf
add
push
in
test
jle
(bad)
push
test
call
sub
jp
xchg
cmp
jae
movs
and
(bad)
scas
add
cs
xor
test
je
jmp
ja
cmps
sub
push
enter
cmp
and
or
lods
dec
outs
and
rol
cmp
inc
add
inc
or
jb
(bad)
add
or
jl
mov
sbb
neg
push
and
in
jmp
ja
test
cmp
ds
(bad)
pop
push
rol
push
mov
ins
mov
shl
retf
jns
aaa
dec
mov
and
es
dec
inc
rcr
jne
add
(bad)
jg
in
xor
ja
adc
add
test
fs
inc
arpl
sahf
push
push
and
pop
cwde
pop
xchg
jno
pop
fwait
add
dec
in
fcom
pop
dec
mov
mov
and
xor
sbb
mov
cmp
inc
mov
enter
dec
add
les
pop
cmp
je
mov
mov
push
add
into
jmp
cmp
add
cs
mov
and
es
pop
push
call
sahf
sti
rcr
jle
mov
and
(bad)
out
js
cmp
jle
shr
push
test
jge
call
imul
mov
xor
fild
dec
pop
das
adc
ret
inc
fadd
aas
sub
xor
mov
sbb
imul
jl
inc
mov
mov
bound
xchg
mov
jbe
mov
or
dec
lods
lock
xor
or
outs
pop
jb
divps
xor
outs
mov
xor
xor
addps
push
cs
xor
retf
adc
cmp
or
pop
adc
nop
mov
mov
sub
call
cmp
bnd
sbb
push
sbb
jne
add
sti
adc
mov
inc
push
mov
dec
stos
jl
or
cmps
sbb
lea
and
jecxz
xlat
jge
jbe
cmp
sub
in
dec
sub
and
inc
inc
push
in
cmp
inc
in
push
sbb
xor
frstor
push
sub
push
dec
nop
pop
sbb
add
dec
out
fdiv
mov
add
lea
inc
pop
sbb
mov
cmp
lock
cdq
cdq
adc
push
push
push
xchg
push
lods
jecxz
mov
clc
sbb
lock
(bad)
jge
ja
inc
fdivr
loopne
or
inc
push
pop
mov
fwait
jmp
inc
adc
sub
sub
fadd
imul
push
mov
sbb
dec
mov
mov
add
scas
push
dec
ret
xchg
dec
in
dec
push
stos
test
loope
cli
rcr
fadd
mov
stos
je
sub
mov
xor
stos
mov
ins
call
fcomp
adc
add
pop
sbb
fdivr
pop
add
inc
pusha
fmul
xor
sbb
pusha
sbb
clc
call
aaa
mov
jle
pusha
test
adc
jo
adc
test
fadd
adc
test
or
xchg
sti
mov
in
or
add
ret
fmul
jae
jmp
fimul
(bad)
pop
push
or
mov
and
xor
fdivr
(bad)
ins
adc
inc
pop
pop
cmps
lods
icebp
push
enter
repz
(bad)
mov
hlt
shl
fisub
mov
enter
js
push
mov
and
leave
hlt
xchg
ror
mov
outs
adc
aaa
jmp
div
adc
pushf
xchg
pop
inc
lods
clc
push
mov
adc
bnd
mov
les
pop
sub
or
adc
std
or
push
push
sbb
call
shl
out
or
fst
adc
push
shr
mov
inc
mul
rcr
imul
fimul
mov
mov
daa
icebp
sbb
loope
cwde
(bad)
pop
sar
fild
push
clc
sub
add
lods
cmps
jnp
jle
sahf
nop
inc
dec
jne
lock
sbb
sub
loopne
mov
pop
pop
push
mov
cmp
sbb
sub
addr16
bound
sub
push
mov
jmp
jmp
add
test
je
inc
add
mov
pushf
repz
mov
jg
jo
adc
mov
sub
into
jl
or
cmp
or
shr
mov
sub
not
mov
mov
int
sbb
sbb
mov
and
mov
shl
push
test
xchg
fnstsw
pop
loopne
cmps
aas
mov
addr16
mov
mov
mov
outs
js
out
or
jae
fistp
mov
call
sbb
bound
scas
mov
dec
push
out
dec
mov
sbb
mov
je
pop
mov
fmul
sbb
ret
clc
rol
dec
mov
lahf
add
jle
sbb
mov
pop
and
int3
add
outs
dec
outs
xor
dec
inc
outs
add
ins
dec
push
mov
pusha
cmp
rcl
add
xor
mov
pop
xchg
push
mov
movs
mov
(bad)
mov
les
test
dec
jae
jne
push
or
or
into
adc
xchg
movs
adc
aas
mov
lds
jge
xor
jmp
dec
sbb
test
and
xor
xchg
inc
cs
xchg
sbb
and
jle
popf
add
push
mov
pop
xor
inc
jmp
mov
dec
pusha
mov
sub
add
cli
cs
push
inc
or
dec
push
or
and
push
or
aam
mov
fimul
adc
push
xchg
xchg
or
push
push
lea
ja
data16
mov
rol
dec
add
out
adc
pop
pushf
mov
cmp
jge
pop
jb
mov
sub
jne
mov
pop
push
jle
retf
fs
mov
mov
cmps
dec
cmp
add
or
add
pushf
sbb
js
xchg
mov
pop
push
mov
loopne
add
inc
mov
(bad)
je
test
mov
push
std
adc
imul
fcom
jne
mov
adc
add
adc
xchg
mov
stos
addr16
loopne
inc
fsubr
fsubr
add
xor
adc
lock
adc
xchg
cmps
stos
xchg
add
inc
push
push
sub
mov
and
mov
or
rol
dec
je
ins
shr
outs
push
loopne
mov
ret
cmps
mov
or
push
mov
loop
push
add
and
dec
ja
mov
(bad)
fsubr
jo
add
mov
std
out
or
push
sti
call
push
fs
jae
icebp
lock
mov
cmp
pushf
adc
cmp
jno
out
sub
call
ret
mov
inc
mov
push
mov
jne
sar
jmp
jo
ja
push
xlat
cs
mov
cmp
xor
jmp
je
int3
ins
mov
sbb
dec
mov
push
mov
or
lea
push
xchg
mul
retf
int3
push
test
loopne
inc
in
int3
movs
and
jge
(bad)
std
movs
add
dec
imul
or
les
cld
mov
es
(bad)
fmul
out
mov
(bad)
adc
pushf
add
sub
cdq
mov
popa
adc
scas
repz
cmc
test
xor
mov
out
add
in
add
cmp
jge
adc
or
mov
call
xor
cmovg
jmp
cwde
cmp
add
test
or
mov
imul
mov
cmp
mov
pop
jne
sahf
sbb
aad
push
jmp
or
les
lea
cmps
daa
cmp
sub
inc
and
lock
mov
add
xor
pushf
sbb
sub
or
jmp
mov
mov
loopne
pop
retf
stos
fsubr
sub
outs
loopne
std
and
pusha
pop
inc
push
cs
sub
sbb
and
retf
or
inc
jmp
push
xchg
jne
adc
sub
and
(bad)
and
push
sub
shl
call
push
push
test
cli
xchg
fst
fbstp
add
sub
movs
mov
sbb
fcom
pusha
mov
add
lock
cmp
push
loopne
inc
and
clc
mov
mov
stc
(bad)
mov
push
pop
cmp
cs
pop
adc
adc
xor
(bad)
cmp
pushf
push
loope
bound
pop
in
(bad)
sbb
sti
mov
or
shl
sbb
or
aam
or
(bad)
rcl
jle
inc
div
and
sbb
shr
mov
mov
or
pop
add
cwde
sbb
and
iret
fidiv
sbb
movs
adc
stos
adc
cmp
das
add
iret
and
sub
cmp
sar
mov
ficom
mov
(bad)
or
sub
pop
push
cmovbe
add
inc
call
daa
add
and
add
sub
rol
pop
sbb
leave
push
loop
fcom
push
sbb
adc
inc
xchg
je
ret
test
iret
pop
add
pop
in
cmp
pop
sbb
add
in
cwde
jno
push
or
outs
pop
xchg
retf
cli
popa
dec
xchg
call
loopne
pop
add
push
or
shl
into
lock
cs
add
cmp
and
es
enter
out
cmp
js
adc
xor
test
inc
fisubr
mov
test
iret
push
sub
ss
push
push
clc
push
and
ins
or
xlat
loope
and
jnp
jp
scas
sbb
cmp
nop
xchg
mov
cmp
inc
shl
pop
jae
movs
test
cmp
aaa
pop
or
pop
pop
cmp
xchg
pop
or
jmp
mov
enter
in
add
je
add
or
mov
cmc
add
or
retf
sub
inc
add
fs
fnstcw
sbb
jo
mov
dec
rcl
sar
mov
les
enter
adc
mov
sbb
mov
xlat
push
push
mov
jnp
sub
std
scas
bound
(bad)
mov
mov
sti
sub
adc
jae
fcmovne
mov
mov
dec
xor
fld
data16
cmp
nop
inc
xor
sub
cs
jbe
out
mul
jne
and
test
aaa
pusha
aam
out
das
mov
stc
pop
shr
fisttp
or
sbb
cld
test
sub
jno
cmc
sub
in
sbb
jae
in
mov
call
inc
mov
xchg
push
add
or
push
jl
sbb
push
loopne
dec
movs
mov
xchg
std
imul
mov
scas
push
sub
push
int3
sub
out
xor
add
push
add
lock
mov
(bad)
sbb
push
xchg
pop
call
in
or
nop
das
int3
fsub
pop
nop
hlt
ins
adc
xchg
cld
mov
lock
mov
jne
or
scas
pop
adc
mov
mov
jmp
hlt
mov
pushf
sbb
jo
pop
xchg
scas
sub
add
pusha
pop
mov
aad
fnsave
cmp
je
(bad)
cmp
div
push
aam
add
fcomp
xlat
cmp
push
push
pushf
cmp
and
cli
jmp
push
test
add
lock
in
mov
enter
outs
(bad)
lock
jns
loopne
fsub
inc
pushf
sbb
sahf
pop
add
and
loopne
cmp
sti
mov
sbb
xor
mov
sbb
and
and
or
js
sbb
sgdtd
rcl
adc
add
sub
mov
sbb
nop
or
mov
cmp
mov
push
push
sub
mov
aaa
or
mov
sub
adc
cmp
xchg
xchg
jb
test
push
dec
jo
icebp
in
fisubr
push
mov
call
xor
nop
imul
jb
sbb
add
add
fbld
ficom
dec
add
fild
gs
add
push
jb
dec
add
arpl
push
popa
dec
xor
je
dec
adc
in
fimul
bound
push
add
scas
cdq
mov
outs
xchg
push
fisubr
pushw
inc
cmps
sbb
jo
sbb
push
mov
addr16
mov
push
bound
iret
call
add
imul
sub
das
and
rol
xchg
mov
aaa
ds
rcr
pop
lock
mov
clc
inc
call
pop
ds
and
push
aas
adc
inc
and
cmp
clc
sbb
pop
adc
rcl
out
cmc
xor
mov
pop
pop
mov
inc
loop
fbstp
call
dec
sub
jns
and
movs
jp
and
imul
push
push
add
test
scas
movs
or
icebp
inc
fmul
idiv
ds
or
sub
je
movs
push
cwde
push
push
cmps
fsubp
add
jbe
in
pop
mov
sub
adc
or
mov
push
add
cmp
sbb
adc
std
mov
xchg
push
outs
cmp
sbb
sbb
sub
sub
lods
sub
jmp
outs
in
inc
mov
jbe
push
test
mov
jle
mov
push
inc
sbb
call
bound
cmp
in
and
pop
ds
push
push
cld
and
adc
pop
mov
stc
push
sub
dec
ds
daa
sar
loop
fadd
mov
test
jmp
call
fs
mov
push
mov
xchg
fwait
js
in
push
cmp
(bad)
shl
ror
sub
ror
ja
pop
sub
add
push
adc
add
add
out
cmps
jmp
cmps
cmp
adc
cs
clc
sbb
jne
ret
imul
ds
cmp
jne
adc
or
test
(bad)
or
pusha
ss
loopne
xor
pop
lock
xlat
lock
sbb
push
dec
clc
jne
imul
or
nop
ds
lds
pop
or
push
sbb
pop
ret
ret
fadd
inc
lock
scas
jl
ret
cmp
fs
jg
jo
push
mov
cmp
sete
bound
cli
pop
ficomp
dec
and
mov
push
adc
cmc
and
jl
fs
mov
iret
push
add
jmp
adc
sub
sub
add
mov
jl
inc
xor
jbe
jmp
dec
outs
add
inc
(bad)
dec
xor
das
sbb
dec
jne
pop
emms
adc
inc
xor
stos
xor
sub
adc
jne
cmps
sub
inc
lahf
test
lods
mov
movs
out
js
cmp
sbb
jp
test
jbe
push
into
push
movs
add
cmps
and
fsub
stos
je
lods
or
arpl
jmp
and
cmp
jmp
sbb
test
push
inc
add
test
in
or
push
jmp
or
push
(bad)
pop
mov
push
xchg
mov
imul
lea
mov
push
das
mov
jb
das
daa
das
jb
addr16
add
(bad)
cmp
addr16
pop
dec
je
cld
adc
xor
mov
jl
push
pop
jp
aaa
cmp
out
push
int
push
into
pop
ret
icebp
adc
push
mulps
mov
movs
push
jbe
jno
mov
jne
jmp
cmps
shr
std
test
or
or
mov
jmp
cwde
repnz
ins
les
loopne
mov
mov
cmp
jg
cli
fcomp
xor
sub
jb
sub
out
cmps
jns
sbb
sbb
sub
test
dec
sub
fistp
lods
push
(bad)
add
add
std
fcom
lods
enter
pop
jmp
sbb
adc
push
xchg
out
and
icebp
mov
sbb
xor
push
push
push
es
pop
sbb
jle
cmp
test
add
ss
ss
das
shl
lds
in
clc
add
enter
and
out
pop
adc
outs
lock
cmp
sbb
hlt
dec
cmp
int3
loope
adc
cmps
lods
rcr
aam
neg
add
ja
jne
mov
sub
out
ins
jp
mov
sbb
mov
dec
or
xor
mov
xchg
lahf
pop
repz
pushf
jne
mov
jmp
xchg
jo
mov
xor
imul
je
push
fs
cmp
mov
dec
push
jmp
mov
ins
inc
xor
fsubrp
cmp
xor
xchg
xchg
adc
clc
ss
adc
xchg
in
scas
shl
fwait
rol
sub
push
stos
stos
mov
sbb
inc
mov
sub
movs
sbb
and
js
push
mov
mov
pushw
test
push
cdq
and
and
mov
adc
cmp
sub
inc
pop
or
inc
inc
and
test
jns
shl
ja
mov
add
mov
mov
add
mov
cmp
mov
test
pop
cmp
sub
cmp
xchg
or
dec
or
xlat
jmp
and
pop
pcmpeqb
js
push
pmulhuw
push
push
sbb
inc
lahf
push
loopne
jno
adc
jp
mov
jo
inc
xor
ss
mov
stos
(bad)
fdiv
xor
ja
jae
loope
dec
ficomp
mov
test
xor
mov
ds
push
xchg
pop
add
inc
cmc
push
pop
push
out
icebp
and
mov
xchg
pushf
cmp
sub
jne
nop
daa
mov
in
pop
xor
and
cmp
lock
lea
adc
dec
mov
adc
mov
enter
push
jl
lds
sbb
jbe
mov
add
and
dec
or
inc
or
dec
sar
mov
jo
std
repnz
lea
daa
mov
jo
jne
jg
leave
mov
and
or
nop
or
imul
repnz
dec
shr
add
add
adc
shl
jl
jo
lea
or
in
and
adc
jae
sub
add
call
sbb
mov
sbb
and
mov
cmps
adc
sahf
or
lock
clc
and
jno
cld
dec
mov
mov
push
inc
dec
jne
pusha
sub
mov
rol
pop
lods
call
sbb
data16
cmps
sub
mov
mov
push
cmp
call
or
es
add
xor
(bad)
xlat
daa
rol
rol
enter
push
xchg
and
cmp
lea
mov
mov
mov
cmc
cmp
movs
fneni(8087
shr
add
movs
lods
adc
push
ret
mov
xor
or
or
mov
pusha
daa
push
dec
cmovne
add
or
sbb
js
mov
cmp
adc
int3
sbb
mov
pop
pop
stos
add
cwde
dec
sbb
sub
inc
aas
or
or
sahf
test
or
hlt
inc
or
neg
xchg
movs
add
mov
pop
or
jmp
retf
sbb
mov
push
and
adc
inc
test
push
dec
icebp
fcmove
loopne
ret
sbb
gs
sti
das
sti
push
inc
push
inc
jle
sub
push
adc
add
push
sub
push
push
push
push
fwait
or
cmp
sub
push
popa
or
jmp
loope
int
daa
or
dec
lsl
add
xchg
lock
and
inc
sbb
add
and
dec
jg
mov
adc
fmul
push
call
adc
dec
out
bswap
adc
or
mov
out
clc
or
add
sub
or
loope
jb
in
or
ins
and
dec
pushf
out
stos
jl
inc
push
push
adc
push
das
xor
(bad)
push
pop
in
inc
dec
jne
pop
sub
shl
outs
push
cmc
mov
add
mov
push
push
or
push
add
cmovle
push
or
push
xor
jne
inc
movzx
add
mov
jmp
inc
dec
call
popa
in
mov
sti
or
es
lahf
push
clc
ret
jo
cmps
inc
idiv
adc
dec
mov
push
or
call
jl
aaa
add
scas
loop
sub
inc
fimul
pop
repz
mov
icebp
dec
icebp
add
inc
adc
lock
ror
mov
adc
rcpps
dec
pop
popf
ds
add
in
enter
into
pushf
popa
mov
inc
aaa
mov
iret
inc
mov
push
push
mov
mov
mov
mov
nop
hlt
inc
adc
xchg
add
cmp
mov
sbb
add
push
mov
aam
mov
adc
jb
jmp
adc
nop
inc
loopne
adc
xchg
adc
ret
jmp
std
fsubr
adc
pop
add
add
fimul
or
jae
dec
add
xor
shl
or
dec
push
add
sbb
sbb
or
mov
or
mov
cmp
pop
dec
sbb
aaa
mov
int
add
je
or
lahf
cdq
adc
dec
inc
mov
jne
adc
dec
test
mov
and
dec
neg
or
mov
ins
dec
or
xor
sahf
xor
daa
or
lods
push
jmp
shr
inc
adc
mov
mov
clc
push
pop
icebp
jg
cmp
jle
jle
or
xor
or
das
push
in
out
sub
add
add
mov
jmp
push
add
popa
out
pop
cmp
xchg
add
sub
add
shl
xlat
pusha
inc
mov
popa
je
aaa
std
int
mov
pop
or
mov
mov
or
cs
fistp
xchg
mov
mov
addr16
gs
jb
test
sub
retf
mov
and
dec
clc
adc
mov
shrd
jb
(bad)
and
cmp
cmps
pop
mov
cmp
test
cmp
je
xchg
not
clc
stc
mov
dec
or
out
dec
jb
sub
mov
cmp
push
je
stos
jne
scas
and
hlt
and
push
out
push
loopne
loope
in
dec
cmps
xor
sbb
enter
jae
fild
fwait
daa
adc
sbb
mov
sbb
loopne
ins
cmp
add
cmp
(bad)
aas
mov
mov
das
adc
stos
sbb
mov
or
imul
rcl
inc
inc
sbb
jle
clc
mov
lea
movs
add
pop
ins
ror
mov
sbb
dec
dec
je
cmp
jne
cmp
in
cmp
adc
fld
cmp
int3
push
jbe
push
ins
jmp
push
in
fsubr
in
jns
adc
(bad)
pop
loopne
and
mov
pop
push
xor
in
and
sbb
sub
lahf
pusha
add
and
inc
xor
inc
fmul
cs
lahf
sbb
pop
cmp
sbb
(bad)
sub
aas
add
push
inc
daa
and
mov
mov
nop
or
and
scas
out
rcl
mov
lahf
mov
push
jp
cmp
jbe
push
rcl
mov
adc
jmp
or
add
add
push
scas
arpl
xor
xlat
or
mov
loopne
dec
mov
shr
sti
pop
pop
std
mov
cmp
and
call
jne
and
dec
test
lds
push
ret
and
pop
or
bound
adc
pop
dec
rcr
lea
xchg
cmps
add
(bad)
jne
test
add
outs
push
in
call
lds
mov
mov
cmps
dec
adc
and
mov
mov
jne
jge
jns
or
push
rol
lahf
jp
test
jg
add
jo
push
mov
imul
pop
fdivr
rcr
sub
sbb
ds
xchg
rcl
and
movs
fcomp
inc
ret
stos
(bad)
movs
dec
sub
or
(bad)
add
in
repnz
rcl
(bad)
iret
add
in
cmps
fild
es
push
mov
xchg
ror
movs
or
jmp
pop
hlt
fistp
mov
je
mov
(bad)
push
add
mov
xchg
mov
leave
mov
stos
repnz
rol
hlt
test
add
dec
push
push
jo
outs
adc
xor
or
add
mov
ds
stos
inc
or
test
cwde
fmul
add
or
shl
xor
mov
xchg
jmp
mov
push
or
or
cmp
mov
inc
sbb
mov
sbb
add
and
mov
cmp
fneni(8087
arpl
pushf
sub
jne
daa
hlt
sub
pop
fdiv
inc
shl
mov
lea
out
ja
rcl
sbb
mov
cmp
jle
inc
dec
jne
push
or
and
and
inc
and
cmp
inc
and
lds
mov
push
clc
jne
cmps
add
push
sub
cmp
mov
or
cld
or
or
jmp
add
fs
jno
lock
fist
clc
je
adc
pop
fs
bound
mov
popa
xor
pop
sbb
xor
or
les
js
jmp
add
sub
ins
jmp
aaa
(bad)
and
jl
mov
ja
mov
sbb
or
js
pop
mov
div
into
mov
out
or
arpl
adc
sbb
inc
xchg
add
fwait
sub
or
jo
cs
outs
div
inc
in
adc
pop
and
or
pushf
shr
push
or
and
sub
lahf
jmp
sub
add
adc
push
push
mov
leave
add
shl
mov
pop
cmp
add
nop
imul
cmp
jo
cli
push
adc
mov
aas
inc
add
and
test
das
sbb
and
or
or
cmps
scas
aas
inc
push
cmp
je
pop
loope
mov
or
xor
outs
ss
add
add
mov
lock
test
push
int
shr
test
(bad)
sbb
sti
push
sub
and
or
daa
mov
dec
inc
add
test
sbb
push
ds
pop
imul
movs
stc
mov
ret
add
or
add
mov
sub
adc
jg
pop
out
cli
arpl
cmp
jne
jo
je
mov
stos
xor
jnp
pop
mov
inc
pop
xor
daa
jo
and
or
ds
sub
sbb
mov
(bad)
test
cmp
daa
sbb
mov
add
js
or
pop
jmp
sar
pop
ret
rol
mov
adc
inc
and
add
inc
or
jg
cmp
add
jmp
jns
add
jo
shr
push
aaa
shl
pushf
int3
enter
sub
into
out
push
or
jns
into
jl
popa
or
mov
pop
cmp
test
and
sbb
push
push
imul
sbb
scas
sub
sbb
and
mov
and
or
dec
cmp
pop
rol
mov
adc
xor
out
inc
pop
push
dec
and
sub
dec
pop
sar
jns
adc
add
pushf
jns
jge
sub
push
and
push
pop
sar
sub
sbb
xchg
loopne
fcmovu
jg
inc
and
jne
(bad)
(bad)
mov
push
int3
and
clc
cwde
rcl
dec
int3
rcr
or
test
cmps
xor
inc
inc
cli
popa
lds
add
pop
pop
std
xor
outs
xor
and
pop
xor
sub
mov
xchg
call
add
jl
sbb
cmp
jge
popa
cmp
test
pop
mov
sbb
loopne
stos
cdq
xchg
adc
in
and
push
icebp
or
and
mov
test
add
xchg
hlt
cmp
std
(bad)
(bad)
jmp
sar
test
pop
pop
das
pop
jbe
iret
sub
shr
dec
ror
sub
add
les
or
repnz
mov
add
ins
and
aad
test
fdiv
jne
pop
movs
adc
mov
test
mov
adc
or
daa
mov
data16
mov
mov
cmps
jp
iret
dec
lock
jo
jp
add
or
adc
xor
add
mov
mov
add
add
sub
cmp
je
fadd
and
add
rol
and
push
mov
cmc
or
test
mov
mul
(bad)
neg
(bad)
loope
or
icebp
jge
push
push
leave
stos
or
in
cmp
cmp
adc
inc
sbb
mov
lock
scas
retf
xchg
pushf
(bad)
movs
ins
mov
daa
arpl
(bad)
call
ss
add
sbb
mov
or
sub
aam
fisttp
xchg
inc
shl
or
cmc
sub
and
and
pop
lods
push
and
push
lods
adc
push
cdq
jmp
gs
outs
cmps
xchg
sbb
jg
xor
mov
mov
adc
push
fwait
or
mov
sbb
hlt
xor
add
jne
(bad)
mov
pop
mov
pop
mov
pop
mov
cmp
jo
adc
pop
jo
dec
test
call
xor
cmp
je
add
movs
fwait
xor
fadd
push
imul
push
xor
and
inc
xor
mov
or
mov
loope
and
jecxz
add
push
xchg
cwde
leave
or
test
xchg
pop
dec
test
jmp
outs
js
loopne
push
sbb
mov
cmp
jbe
jo
cmp
mov
add
add
cmc
aaa
push
push
pop
push
push
xor
gs
loope
xchg
and
and
ins
cmc
dec
mov
push
mul
test
and
lock
mov
je
das
stc
mov
jp
or
dec
xor
push
dec
push
das
push
add
pusha
jne
out
xor
adc
stos
mov
jle
lea
lea
add
in
xchg
add
mov
(bad)
jmp
sbb
(bad)
pop
mov
xchg
xor
add
adc
and
lea
or
adc
dec
mov
or
pop
out
sub
ds
sbb
test
ficom
sub
(bad)
mov
sbb
sbb
and
jmp
mov
or
push
xchg
pusha
loope
dec
pop
xor
and
adc
je
jne
mov
cmp
add
mov
shl
mov
push
xor
shl
les
ds
jmp
jp
push
cmp
sub
rol
adc
not
add
push
adc
js
sub
push
adc
sub
sbb
add
sub
aam
cmp
fld
pusha
daa
cs
add
xchg
xlat
xor
fild
or
les
fdivrp
mov
daa
mov
hlt
pop
xor
or
call
push
xor
(bad)
or
mov
push
dec
clc
push
sbb
push
mov
and
xor
or
xchg
nop
call
adc
sub
cld
lods
sub
xchg
retf
and
xchg
mov
ficomp
push
shl
push
or
sar
sub
js
mov
or
pop
sub
daa
gs
inc
xor
daa
mov
cmp
or
add
(bad)
aad
rol
fist
popf
xor
push
lock
sbb
add
mov
loopne
daa
mov
in
loop
sub
sbb
mov
jge
cmp
xlat
pop
add
push
sub
dec
add
add
dec
or
dec
add
cmc
mov
xchg
mov
(bad)
ins
pop
xchg
add
(bad)
pusha
in
adc
mov
mov
add
daa
lea
jo
push
out
test
mov
fild
dec
mov
add
loopne
xor
rcr
push
in
inc
or
call
dec
inc
shl
sbb
jne
clc
or
je
push
in
push
mov
and
ds
(bad)
pop
add
mov
fcom
adc
sub
sbb
mov
and
inc
aaa
mul
xchg
movs
and
movs
add
test
das
and
ja
scas
push
mov
out
pop
add
or
push
je
cdq
cmp
fdiv
push
ror
pop
cmp
jne
fidiv
adc
push
loopne
scas
cmps
or
test
or
add
add
adc
add
test
jl
imul
ds
sbb
cmp
pop
adc
into
shl
mov
add
xor
mov
push
push
push
push
mov
pop
mov
pop
lock
rol
adc
mov
or
lods
mov
add
(bad)
adc
(bad)
xor
pop
cmc
push
(bad)
add
mov
mov
push
xchg
mov
add
or
int3
inc
mov
dec
out
add
adc
or
adc
adc
ret
retf
fisub
mov
js
push
and
popa
mov
retf
push
cli
xor
sub
movntq
ds
sbb
and
in
lahf
cs
xor
cld
mov
jmp
cmp
adc
das
inc
in
loopne
cmp
neg
adc
mov
and
(bad)
cmp
loopne
cmp
cmp
cmc
pop
je
inc
je
lea
fbstp
test
(bad)
cmp
fdiv
jne
stos
mov
inc
mov
(bad)
jne
mov
push
cld
mov
cld
xlat
pop
fwait
cmc
mov
(bad)
std
inc
push
add
sbb
lods
xchg
lods
jmp
sbb
and
inc
push
and
addr16
cmp
cmp
rcl
pushf
sbb
xor
xchg
rcr
mov
add
dec
cmp
mov
push
clc
into
adc
jo
push
dec
xchg
pop
xor
daa
xchg
pop
xor
add
push
mov
ror
or
ds
mov
pop
sub
add
xor
in
cmp
cmp
je
or
sbb
mov
and
xor
fs
rcr
mov
test
mov
clc
loop
clc
mov
add
cmc
add
add
pop
jne
jbe
sub
cmp
fwait
jbe
jmp
mov
adc
mov
adc
mov
shl
test
and
popf
sbb
mov
cmp
xchg
ins
mov
push
pop
mov
and
or
stos
push
je
fs
pop
inc
loopne
sub
or
push
ret
mov
sub
pop
push
sub
xor
xchg
nop
aaa
mov
push
sbb
jnp
sbb
push
inc
ss
push
cwde
pusha
adc
mov
or
push
add
or
mov
mov
cmp
test
sub
xor
or
sbb
push
pop
fmul
mov
xchg
pusha
enter
jmp
mov
jmp
mov
add
inc
cmp
push
test
in
sub
repz
push
jbe
jo
mov
sub
and
adc
and
sub
jbe
or
xchg
or
jbe
movs
(bad)
push
call
pop
sbb
test
pop
scas
add
xor
sbb
cmp
push
(bad)
hlt
cmp
fsub
mov
lds
mov
in
xlat
(bad)
inc
mov
inc
add
pop
cmp
int3
or
push
jne
mov
pop
mov
jne
and
mov
sbb
xchg
sti
adc
dec
push
fldenv
and
loopne
xlat
or
outs
sub
das
jb
dec
or
aad
sahf
or
jo
mov
lds
dec
sbb
lahf
add
call
mov
add
retf
or
(bad)
xchg
adc
lock
out
clc
xchg
test
test
je
je
out
pusha
or
and
sbb
inc
add
jo
lock
and
push
sbb
aaa
rol
adc
test
cmp
mov
xchg
cmp
(bad)
pop
mov
cmp
scas
and
inc
pop
je
scas
aam
xor
push
dec
cmp
out
popa
push
ja
cmp
inc
push
pop
push
jns
inc
add
sar
add
sbb
or
sbb
inc
or
daa
push
adc
pop
scas
inc
cmps
sbb
call
dec
clc
icebp
fimul
scas
adc
mov
push
cmp
sub
js
mov
out
sbb
push
ja
iret
fs
mov
xor
adc
int3
xchg
adc
inc
ror
adc
xor
mov
out
sbb
test
sub
mov
(bad)
adc
fadd
pop
ret
inc
or
xchg
jbe
xor
pop
cld
pop
add
fimul
adc
test
movs
imul
aaa
test
pop
pop
sar
into
cmp
xor
xor
cwde
inc
ret
sbb
icebp
stos
js
stos
push
lock
cmp
cmp
sbb
push
jno
lods
mov
sub
jl
pusha
mov
inc
sbb
in
or
inc
adc
or
cmc
add
fucomip
or
add
and
cmp
lock
lea
fcmovb
jno
test
fisubr
fsubr
pop
mov
pusha
pusha
inc
inc
jl
sub
in
es
and
push
mov
nop
xchg
push
int3
jge
jecxz
enter
in
cmp
mov
pop
push
movs
jmp
outs
xchg
sub
jle
pop
pop
outs
cs
sub
push
mov
sbb
adc
ins
xchg
and
add
retf
movs
inc
add
in
pop
ds
xor
or
sub
jl
push
adc
cmp
or
ret
cmp
sub
jl
push
shl
test
inc
out
scas
dec
fadd
cmp
mov
or
rcr
in
adc
gs
adc
call
sub
inc
sbb
(bad)
jmp
fadd
push
inc
movs
pop
aad
out
adc
and
xor
pop
popf
in
push
mov
pop
pop
inc
push
in
inc
or
jno
adc
outs
adc
adc
test
cs
sub
xor
pop
cmp
int
lods
cdq
or
js
mov
sbb
or
lock
push
rcr
jmp
adc
pop
mov
int
sbb
nop
jbe
addr16
loope
adc
inc
and
mov
retf
and
xor
mov
lock
sub
outs
pop
mov
mov
inc
push
cli
and
pop
sbb
rol
add
or
es
shr
dec
add
in
outs
int3
cmp
cmp
cmp
jp
pop
mov
push
cmp
outs
(bad)
push
test
xor
push
sbb
inc
push
ja
xchg
rcl
in
xchg
sub
mov
jle
push
jno
sub
rcr
or
add
mov
js
mov
mov
and
add
leave
das
mov
nop
repz
mov
iret
outs
mov
shl
loopne
cmp
dec
sbb
js
mov
push
dec
test
jl
inc
mov
jno
pop
hlt
push
xor
add
sar
jnp
push
xor
dec
inc
dec
jne
fmul
cdq
inc
add
pusha
int3
loopne
xlat
jno
lea
jg
dec
xor
mov
mov
jmp
test
jne
cmp
test
cmps
push
push
pop
mov
in
xlat
imul
cwde
imul
xchg
stos
sbb
out
dec
add
nop
push
dec
fisubr
or
outs
in
sub
pop
push
fist
xor
xchg
inc
sbb
ret
mov
loope
mov
inc
ins
call
loop
sub
or
sub
loopne
push
sbb
jg
add
jne
movzx
add
sbb
inc
fisttp
add
retf
aas
xchg
outs
lahf
dec
movs
jne
xlat
ret
mov
push
push
jg
lods
pop
sbb
push
ror
scas
push
bound
fild
sub
adc
mov
xor
rol
das
or
cmp
clc
push
inc
jo
jne
or
fs
js
push
(bad)
push
cmp
loopne
mov
dec
inc
add
inc
push
ss
jbe
mov
or
retf
(bad)
jno
push
xor
dec
sbb
je
jecxz
xchg
dec
or
fs
jno
mov
outs
retf
or
movs
sbb
mov
push
dec
(bad)
cmp
pusha
inc
lds
push
in
jl
cmp
or
jecxz
push
pop
jl
add
cmp
ret
sbb
pusha
push
pop
icebp
inc
dec
or
shl
push
push
mov
dec
mov
test
aad
cmp
jmp
clc
test
xchg
xchg
xor
add
mov
fiadd
push
mov
sbb
jne
es
adc
jp
pusha
(bad)
or
mov
push
or
dec
jb
add
pop
ins
jo
sbb
fisubr
jbe
mov
push
add
xlat
mov
and
push
and
sbb
mov
jl
dec
adc
jmp
cmp
or
sbb
dec
sahf
nop
xor
dec
lock
and
mov
addr16
inc
push
sub
not
dec
repnz
je
jb
jo
inc
cmp
(bad)
ins
imul
and
lods
add
adc
or
je
loopne
pop
stos
xchg
dec
out
adc
imul
hlt
outs
arpl
mov
mov
pop
ret
and
test
fnstcw
xchg
or
daa
or
loope
hlt
xor
jbe
cmp
push
ins
test
jno
pop
xchg
add
je
test
pop
cmps
xchg
jmp
loop
xlat
pop
ret
jp
dec
add
stc
add
leave
neg
(bad)
push
and
adc
ds
pop
sub
inc
out
daa
and
test
call
or
dec
imul
outs
leave
push
mov
mov
and
and
bound
(bad)
js
je
xor
mov
add
je
inc
enter
pop
out
pop
jmp
cdq
sub
xor
sbb
subps
xlat
xchg
imul
adc
xor
aas
shr
and
dec
clc
cs
and
jne
ror
pop
mov
xchg
shr
or
adc
add
shl
adc
call
outs
sbb
test
ss
lods
pop
sbb
loopne
in
call
loopne
mov
inc
ficom
ja
retf
add
sub
cmp
mov
add
xchg
sub
sahf
or
mov
test
fidivr
pop
les
inc
cmp
add
add
adc
xor
rol
clc
aaa
adc
enter
stos
(bad)
pusha
jl
lea
and
sub
add
adc
sbb
dec
and
jo
add
xor
ret
adc
sqrtps
or
xchg
push
xchg
dec
(bad)
push
fs
adc
jle
xor
call
mov
test
jbe
mov
dec
adc
add
(bad)
sub
sbb
sub
inc
jo
add
(bad)
or
loopne
call
ds
pop
sar
ret
add
shr
cdq
xor
sub
shr
fcom
cmp
sub
mov
ds
dec
sub
int3
push
repnz
sbb
mov
inc
sbb
fnstsw
sbb
ja
push
mov
mov
test
pop
mov
fnsave
adc
push
imul
pop
adc
in
adc
push
xchg
cmp
fs
push
test
xchg
dec
in
sbb
pop
sbb
push
imul
and
into
sub
xchg
and
call
mov
inc
mov
add
and
or
sub
in
add
add
ds
ret
adc
add
mov
and
sub
mov
push
adc
push
pop
rol
cmp
fist
scas
jo
fisubr
inc
sbb
fcomp
push
inc
ror
sub
push
push
or
sub
ja
or
mov
jo
adc
sub
fcomp
jmp
adc
add
pop
xor
cmp
inc
push
stos
push
imul
in
sar
call
and
pop
fiadd
addr16
fsub
pop
imul
xchg
push
jecxz
mov
xchg
cmps
inc
xchg
adc
or
xor
je
push
icebp
test
mov
shl
add
xor
push
js
ret
pop
es
movs
dec
add
neg
xor
jge
push
enter
sbb
fiadd
mov
clc
aaa
les
cmp
cmp
mov
or
mov
sbb
call
sub
test
mov
pop
mov
and
pop
cmp
jmp
fild
push
dec
or
data16
fiadd
sub
and
shl
jne
jg
add
xor
addr16
inc
pop
adc
aam
sbb
popf
rcl
ds
outs
mov
mov
std
(bad)
push
jmp
or
je
or
je
sub
push
push
jmp
cwde
push
inc
push
cmp
inc
bound
sub
jl
call
pop
lock
inc
cmp
je
js
or
call
xor
and
ret
call
scas
push
adc
ins
and
scas
adc
inc
push
inc
mov
push
mov
pop
add
loop
push
pop
std
jmp
jle
cmp
dec
out
push
mov
jo
jg
xchg
ret
add
cmp
dec
jno
push
int3
pusha
jg
lods
loop
mov
in
mov
fwait
lock
fst
les
sub
sar
jns
adc
cmc
ja
or
pop
sar
jns
cmp
pop
cmp
xor
gs
movs
mov
rcr
mov
xor
in
mov
push
movs
(bad)
out
pop
fdivr
clc
xor
addr16
ds
rcl
rcr
or
scas
pop
mov
xchg
jo
sub
dec
mov
push
ins
das
sbb
push
enter
or
ret
jmp
aaa
mov
jne
fcom
mov
push
dec
clc
dec
fsubr
pop
add
cmp
cmp
cwde
adc
cli
sub
test
or
clc
cmps
rol
add
add
inc
and
and
clc
jmp
xchg
sar
xor
mov
add
push
sbb
and
and
pop
and
leave
aaa
sbb
xchg
dec
inc
xor
add
fcomp
push
ret
xor
xchg
sub
sub
cmp
mov
pop
jbe
ss
popf
add
ja
and
arpl
add
(bad)
fistp
outs
jmp
push
test
nop
inc
or
xchg
adc
ret
cli
sti
loopne
sar
pop
inc
xchg
pop
jl
adc
xchg
xchg
outs
pop
enter
in
mov
sbb
lock
lahf
inc
je
or
sar
nop
dec
mov
xor
fnsave
xchg
sub
or
adc
sub
mov
push
inc
and
dec
call
and
sbb
xor
inc
das
add
test
inc
hlt
syscall
outs
inc
mov
pop
sbb
sbb
adc
ret
xchg
adc
int
sti
cdq
out
cmp
sub
sbb
cs
pop
adc
fidiv
aas
xor
add
push
jmpw
mov
sbb
sbb
sbb
add
js
sbb
sub
imul
test
mov
cmp
push
push
and
add
pop
push
(bad)
cmps
call
pop
jno
xor
jmp
pop
clc
sub
into
or
or
loope
push
fdiv
jo
jl
or
mov
jno
lods
pushf
jb
imul
sub
je
mov
jmp
or
test
and
shr
add
outs
movs
sti
ret
cmps
cmc
cwde
mov
clc
jne
loope
mov
sbb
jne
cmp
mov
mov
jae
and
push
and
aam
cdq
fild
clc
mov
(bad)
lock
inc
xor
pusha
loopne
shl
test
and
jne
cmps
mov
das
and
add
cmp
(bad)
and
push
dec
jne
and
xor
add
int
cmp
push
or
sahf
scas
sar
adc
lea
sub
or
sub
jb
dec
mov
inc
and
dec
cmp
rcr
push
push
pop
in
inc
cdq
xchg
inc
test
popa
sbb
aas
sbb
push
add
movs
loopne
data16
pop
movs
xchg
jmp
xchg
and
nop
mov
xor
fld
jne
not
mul
jmp
jmp
sbb
adc
sbb
xchg
or
fiadd
(bad)
int
addr16
mov
mov
lock
out
and
dec
push
xchg
pop
push
pop
call
loopne
inc
push
loopne
test
adc
or
and
mov
ja
mov
rsqrtps
pop
sbb
retf
and
or
(bad)
mov
or
adc
sub
movs
jp
inc
and
cmp
cmps
call
mov
xor
mov
(bad)
data16
xchg
fucomi
jo
aaa
pop
fsubr
sub
sti
std
push
and
push
(bad)
lahf
sbb
retf
out
or
in
add
fimul
popf
call
jae
mov
adc
add
or
and
std
xor
mov
push
data16
jae
dec
sub
ror
(bad)
mov
pop
xchg
add
mov
aam
aad
nop
or
jl
cmp
test
cmp
rol
rol
outs
sub
sar
cmc
push
mov
add
sbb
push
cwde
daa
sub
mov
ror
fstp
sti
and
je
inc
sbb
push
cmp
nop
sbb
cmp
cmp
shl
adc
push
out
xor
sbb
loope
mov
cli
cwde
rol
stos
add
mov
sbb
jae
jg
loop
jmp
aas
dec
sub
sub
in
or
sti
xor
cmp
cmp
push
popa
rol
imul
xor
test
arpl
adc
and
inc
stos
out
mov
cmp
rcl
scas
push
add
cmp
fdivr
repnz
pop
inc
(bad)
(bad)
cmp
clc
cmc
setb
je
mov
and
aam
push
mov
imul
mov
mov
add
mov
mov
sbb
movs
lock
cli
mov
rol
sahf
cmp
xor
inc
fwait
cmp
inc
xbegin
arpl
aam
aas
xlat
add
jg
ds
pop
mov
dec
fcmovbe
pushf
cli
test
adc
aam
mov
cmp
sub
and
or
add
adc
add
pop
add
adc
les
xor
xchg
cld
ret
sub
adc
les
lock
ins
cmp
jne
loopne
pushf
dec
fisttp
add
jbe
loopne
mov
or
scas
sub
pusha
lock
mov
sbb
push
ins
sbb
mov
pop
pop
daa
adc
addr16
sbb
adc
lods
les
sti
or
and
add
movs
adc
jmp
cwde
stos
adc
sbb
add
aaa
push
fisub
or
cmp
(bad)
lods
icebp
iret
sbb
jmp
sbb
stos
mov
out
loopne
cwde
cmps
and
call
sbb
cmp
out
mov
adc
xchg
jb
xchg
je
pusha
push
and
xchg
jns
jns
and
dec
and
ins
adc
pop
sbb
mov
pop
scas
pop
ins
or
inc
pop
add
add
mov
jmp
ss
or
loop
xor
and
fs
sbb
std
or
and
test
cs
jl
sbb
or
mul
cmp
adc
mov
xchg
dec
mov
out
or
dec
mov
out
adc
lock
imul
lods
jge
std
mov
or
or
outs
cdq
shl
fisub
ret
or
and
pop
or
or
or
pop
mov
mov
mov
cmp
(bad)
mov
push
cmp
lds
scas
int3
jo
jb
and
pop
dec
or
jle
jne
or
sar
xchg
outs
jno
scas
fsubr
ins
pcmpgtb
push
mov
or
nop
add
pop
mul
add
fstp
push
or
imul
cmps
mov
sbb
jnp
mov
cmp
test
or
dec
nop
idiv
sbb
jmp
lods
out
push
dec
adc
and
dec
iret
shr
ins
pop
sub
lods
xlat
cmp
adc
jnp
ret
es
jae
into
daa
(bad)
cmp
js
mov
inc
je
mov
jl
sbb
jo
mov
je
pop
sbb
push
xor
lock
fadd
dec
cwde
or
mov
add
and
mov
rcl
lock
retf
dec
sbb
sub
fcomi
sub
aam
sahf
nop
xchg
ja
push
mov
and
mov
enter
add
mov
xor
outs
mov
test
xor
or
sahf
sbb
or
adc
push
add
push
or
ror
or
pop
(bad)
adc
(bad)
xchg
cdq
ins
sub
bswap
(bad)
fcmovnu
(bad)
mov
mov
or
jmp
adc
shl
push
mov
outs
lea
xor
mov
or
push
movs
or
sub
mov
sahf
lock
xchg
movs
push
and
jns
push
pushf
inc
xor
push
jl
hlt
mul
or
lahf
xlat
add
jl
push
xor
mov
xlat
adc
loop
adc
dec
or
(bad)
test
or
ds
cld
daa
(bad)
fsubr
inc
or
int3
pop
xor
adc
pusha
ds
mov
mov
sub
add
fcmovnu
dec
cmps
jg
sbb
sbb
jl
nop
fwait
cdq
pusha
sbb
jg
or
or
jmp
scas
xchg
loope
fadd
(bad)
fistp
mov
push
fs
jmp
in
fidivr
cdq
jle
clc
dec
inc
idiv
or
push
ins
jno
push
cmp
jns
adc
mov
jge
cmc
mov
pop
in
xor
cmp
add
mov
jl
push
loopne
sub
pop
rcl
test
je
adc
outs
add
hlt
lock
pop
and
inc
sub
sbb
xchg
in
adc
dec
mov
xor
add
out
in
mov
and
mov
cmp
and
sbb
jo
fs
mov
xchg
adc
sub
pusha
sbb
xor
mov
mov
mov
(bad)
cli
inc
xchg
mov
sbb
cli
xlat
pop
adc
sbb
in
mov
jmp
adc
jg
fs
movs
mov
mov
pop
push
cmps
ror
call
loope
inc
mov
push
pop
(bad)
data16
dec
imul
mov
push
in
es
dec
repnz
jg
fs
adc
bt
setb
push
or
add
mov
cmp
inc
dec
jne
aam
cmp
nop
xor
push
sbb
aam
jmp
cmp
clc
mov
and
int3
dec
test
xchg
mov
adc
int
mov
out
push
pop
sbb
jno
lods
ins
ja
pop
aaa
mov
push
push
test
mov
dec
test
inc
std
(bad)
jl
inc
xor
dec
aaa
(bad)
aad
test
cmp
retf
push
inc
dec
jne
test
scas
jle
sbb
pop
dec
mov
adc
lea
movs
movs
imul
lock
add
add
or
add
push
sbb
or
pop
outs
mov
cmps
dec
jp
out
outs
xor
jne
cmp
pop
ins
mov
aas
jbe
mov
push
dec
js
sar
jmp
mov
adc
mov
or
push
out
rcr
mov
add
push
ret
add
xor
xor
mov
sub
inc
xchg
lahf
jp
ret
outs
push
jne
sahf
mov
loope
mov
or
xchg
jl
test
push
(bad)
jg
inc
and
mov
xchg
or
or
pusha
sub
or
sub
outs
mov
test
mov
imul
mov
cs
imul
fs
xchg
and
push
mov
pop
sti
sbb
aas
je
test
add
repnz
mov
mov
movs
adc
mov
dec
fcmove
in
and
xchg
jbe
jecxz
test
sbb
inc
daa
and
inc
cwde
std
mov
jns
je
or
cmp
xor
out
add
xchg
pop
jecxz
das
push
jnp
xor
sub
aaa
repz
les
or
lahf
jg
aad
push
pushf
mov
das
test
and
je
outs
add
inc
es
mov
daa
push
adc
mov
fst
div
and
setne
sub
js
pop
aas
and
lods
popa
xchg
sti
adc
adc
or
jp
pop
or
mov
(bad)
not
and
ret
add
jecxz
scas
jb
lock
ja
pop
syscall
pop
iret
push
ins
mov
je
and
xchg
add
dec
xor
adc
repnz
jne
pop
jmp
mov
adc
jo
sbb
mov
data16
sub
inc
dec
bound
and
ror
rcl
pop
pusha
jne
adc
fs
sbb
push
push
adc
fist
sub
mov
push
mov
sbb
or
and
stc
hlt
add
les
push
push
push
or
mov
nop
ins
test
loopne
loopne
cwde
iret
nop
xchg
mov
cli
or
inc
or
lahf
cld
movs
pop
pop
cwde
or
mov
and
test
and
cwde
in
cmp
cmp
call
cmp
stos
pop
or
shr
pop
xor
add
ss
pop
imul
dec
or
add
pushf
adc
inc
cmp
sub
xlat
push
xchg
arpl
adc
push
cmp
inc
enter
out
into
pop
xor
sbb
iret
and
pop
sbb
xor
inc
push
pop
or
and
loopne
or
pop
xor
dec
cmp
nop
into
into
sub
cmp
dec
cmps
hlt
cli
push
push
or
push
and
mov
add
repz
mov
jl
push
jge
push
xor
std
dec
(bad)
jbe
adc
mov
and
inc
or
sbb
jle
adc
mov
sbb
jp
or
daa
daa
daa
fisttp
dec
dec
dec
dec
and
adc
add
nop
mov
push
or
test
data16
mov
das
push
pop
inc
adc
and
pop
mov
outs
aaa
pusha
mov
call
je
xchg
jl
mov
or
and
adc
xchg
sahf
dec
sub
js
stos
pop
cmp
dec
fiadd
les
xor
(bad)
iret
fisttp
mov
mov
cmp
sub
ins
mov
sbb
dec
enter
pop
sti
add
inc
mov
sub
cmp
cmp
mov
add
push
cdq
(bad)
pop
das
add
push
and
test
hlt
or
mov
leave
outs
fidivr
jl
or
jg
cmp
cld
out
jo
push
push
push
push
pop
mov
repnz
in
not
mov
jne
lds
mov
jae
(bad)
xor
int
nop
add
jmp
add
adc
sub
mov
mov
and
fistp
rcr
mov
cmp
je
push
push
mov
enter
mov
xchg
xor
pusha
jecxz
sbb
out
jle
inc
clc
jne
das
clc
add
popf
sbb
(bad)
loopne
das
popa
and
not
or
ficomp
or
sbb
mov
dec
stc
push
mov
inc
test
frndint
jo
mov
push
mov
sbb
les
add
adc
sahf
adc
adc
inc
test
arpl
mov
inc
and
outs
ret
dec
test
and
ss
push
fild
inc
cmp
adc
in
mov
push
push
sbb
xchg
dec
inc
jl
xchg
in
cmp
xor
loopne
pop
stc
popf
fs
push
nop
daa
pop
inc
push
hlt
pop
sbb
pushf
cmp
test
cmp
imul
push
mov
call
xor
jmp
mov
jo
xchg
inc
mov
ins
jo
mov
fld
inc
adc
mov
mov
jb
or
lea
inc
mov
add
loopne
sbb
push
sbb
cmp
ror
adc
pusha
dec
mov
jno
imul
sar
jnp
add
neg
in
ds
mov
inc
cmp
pop
inc
push
or
mov
std
xchg
adc
xchg
sbb
push
add
jae
ins
cli
aaa
stos
add
ins
add
fiadd
jb
sbb
xor
outs
nop
ins
push
sub
mov
pushf
push
inc
sub
dec
xchg
mov
neg
popa
es
add
push
xchg
dec
int3
cdq
jle
mov
and
add
into
shl
push
out
or
icebp
cmc
or
cwde
push
mov
mov
lods
leave
data16
ret
mov
push
das
cmp
mov
xor
je
sbb
sub
(bad)
js
pop
cmps
add
pop
dec
outs
sbb
dec
mov
cli
push
mov
stos
push
or
push
add
cmc
adc
mov
jge
mov
jmp
mov
ror
shl
adc
cmp
sbb
push
retf
ds
push
mov
sahf
push
adc
mov
repnz
mov
mov
add
cmp
jne
mov
je
add
mov
sbb
or
or
(bad)
mov
jae
jmp
mov
or
and
adc
adc
mov
push
pop
pop
in
pop
push
out
aas
mov
test
pop
or
pop
sub
repz
jl
pop
mov
sbb
rol
es
test
jbe
push
jecxz
xor
mov
dec
cmp
leave
add
mov
xchg
test
sbb
ret
pop
sbb
push
int
in
inc
cld
push
ins
jmp
push
sub
and
dec
lock
jns
popa
lods
xor
popf
data16
xor
sbb
push
fmul
stc
xor
out
push
imul
xor
or
xor
cmp
mov
pop
ins
ins
ins
ins
scas
daa
movs
daa
addr16
fwait
xchg
pop
les
out
fcmovu
push
clc
test
pop
popa
cmp
scas
dec
ret
mov
adc
call
fndisi(8087
mul
test
ret
push
hlt
jle
xchg
mov
push
jne
test
ror
xchg
test
jmp
dec
push
cli
ret
std
cmp
dec
push
and
dec
jmp
dec
(bad)
shr
sbb
setl
jmp
aaa
sti
jbe
sbb
pop
pop
inc
add
cmp
and
int3
xor
and
sbb
mov
addr16
inc
pop
cmp
outs
lock
enter
test
call
or
pop
aad
inc
inc
jae
or
inc
xchg
push
inc
inc
mov
lock
jne
sbb
dec
dec
dec
push
in
pop
add
add
jne
cmp
add
cld
clc
adc
bound
cmp
add
add
fisub
lds
inc
push
sbb
jg
jns
xor
inc
inc
push
lock
jmp
sbb
adc
jbe
out
xor
adc
mov
dec
aaa
adc
loop
push
or
test
call
cmp
or
jne
hlt
sub
mov
push
mov
cmp
ss
fadd
je
jne
or
jbe
and
pop
movs
inc
(bad)
out
sahf
out
jb
xchg
mov
js
sub
dec
sub
add
imul
or
xor
xor
daa
pop
add
pop
pop
inc
jmp
sbb
add
jb
fild
or
pop
xchg
mov
sar
pop
push
daa
hlt
cmp
cmp
xor
sbb
mov
das
pop
sahf
inc
ins
cmp
jne
xor
push
add
or
mov
mov
push
out
lods
push
fwait
jl
fucom
sub
inc
lea
scas
mov
hlt
arpl
imul
add
dec
(bad)
data16
shr
cmp
je
xor
jmp
inc
sar
in
push
adc
mov
jnp
mov
mov
xchg
mov
(bad)
cmp
aas
cmc
jbe
lock
sbb
sub
or
jl
addr16
xor
push
push
in
add
and
and
mov
mov
lock
cmp
shl
xor
fldcw
loope
xchg
adc
ror
xchg
xchg
movs
inc
dec
adc
dec
data16
mov
sbb
out
sbb
mov
sbb
sub
loop
sub
mov
in
xchg
int3
pop
adc
add
mov
out
adc
push
sbb
jle
enter
mov
pop
iret
loopne
cwde
movs
mov
adc
scas
cld
or
jmp
push
mov
cmps
stos
(bad)
and
mov
(bad)
cli
or
pusha
push
xchg
je
jle
outs
xchg
out
pop
xchg
mov
add
mov
pushf
add
mov
xchg
pop
arpl
sub
test
mov
inc
mov
adc
add
outs
or
psrad
mov
dec
rol
jmp
cld
clc
add
xchg
std
rol
test
ja
cdq
inc
test
(bad)
loopne
loopne
sub
mov
and
cmps
cs
and
mov
rol
cmp
push
jmp
add
inc
sub
fimul
inc
cmp
movlps
aam
cdq
ins
je
into
shl
add
cmp
or
dec
std
inc
int
out
pop
scas
adc
sahf
test
cmp
adc
popa
cmp
pop
jl
enter
lahf
mov
sub
sub
pop
sbb
(bad)
pop
fdiv
xor
add
cmp
mov
std
inc
das
into
inc
push
mov
cmp
sbb
je
adc
fild
pusha
pop
or
or
push
mov
outs
push
pop
je
fstp
or
sub
inc
mov
sbb
mov
cmp
shl
lds
sbb
jp
or
push
ror
std
push
add
mov
adc
rol
mov
fsubr
pop
sbb
das
mov
cmp
fcomp
cmp
ret
and
or
sub
mov
xchg
dec
in
sar
jo
xor
and
inc
fsubp
add
add
and
jl
mov
push
inc
or
cmp
and
test
mov
mov
clc
pop
pop
mov
adc
fdivrp
mov
xor
add
push
data16
cmp
mov
xor
add
pop
into
pop
lods
sbb
sbb
cmp
cmc
sbb
fiadd
dec
push
jne
xlat
cmps
call
call
mov
mov
in
es
and
mov
and
(bad)
iret
test
mov
push
sbb
or
pop
mov
in
aam
add
add
movs
add
xchg
scas
sbb
inc
xchg
lea
loop
cmovle
mov
add
or
sbb
fistp
ss
push
sar
ins
ror
clc
mov
mov
dec
aad
fmul
neg
cmc
xchg
sub
in
mov
add
mov
pushf
adc
movs
mov
mov
pop
enter
or
jb
ret
aad
pop
xor
pop
mov
ins
mov
mov
add
dec
xor
add
fs
jmp
test
jge
pop
(bad)
mov
jmp
ins
cmp
jne
in
pop
call
scas
adc
push
mov
adc
sti
js
dec
adc
shr
xchg
movs
popf
or
pop
add
or
ja
push
push
loope
xor
mov
or
sub
cmp
mov
not
dec
jo
mov
mov
cmp
shr
mov
inc
add
ret
loope
pop
mov
xchg
pop
sub
inc
pop
mov
push
or
ss
cwde
add
js
jle
lock
add
xor
sub
or
cmp
cmp
push
rcl
add
mov
shr
and
xor
and
mov
xor
mov
pusha
call
mov
jae
mov
mov
(bad)
sbb
add
sub
enter
adc
inc
jo
push
(bad)
sbb
stos
push
(bad)
push
add
cmp
inc
xor
rcr
or
aas
or
mov
iret
pop
adc
push
sbb
sbb
cmp
mov
cwde
adc
push
adc
adc
sub
test
inc
xchg
push
daa
data16
(bad)
pop
lods
add
in
pop
adc
lea
sub
adc
call
mov
ins
xchg
or
shl
dec
push
movs
retf
push
inc
and
cld
enter
(bad)
push
adc
lahf
ret
mov
sbb
ins
cld
inc
outs
push
fld
xchg
mov
mov
mov
or
sbb
sub
sbb
jle
lea
call
and
add
mov
add
push
add
loopne
jo
pushf
pop
jp
aas
dec
adc
fsub
icebp
popa
adc
imul
cmp
jne
pop
mov
inc
ds
jg
out
out
fwait
inc
sbb
sbb
xchg
out
lock
inc
push
dec
add
xchg
or
shl
lock
adc
add
imul
push
push
mov
fdivr
mov
add
adc
test
pop
lds
and
or
mov
xchg
sbb
jne
ds
adc
jge
add
add
mov
mov
push
addr16
mov
xchg
sbb
inc
movhps
pop
add
cld
or
jle
add
lea
add
jo
mov
push
sbb
inc
fwait
xchg
xor
adc
ins
adc
xchg
pusha
ror
in
retf
pop
inc
aad
retf
clc
scas
adc
rol
scas
ret
(bad)
call
ss
add
ins
cmps
sub
or
test
xchg
mov
push
cmp
pusha
inc
rcr
mov
ja
lea
ins
cmp
mov
not
or
out
sti
adc
sub
push
mov
cli
add
xor
(bad)
hlt
mov
loopne
dec
aam
add
mov
add
sar
test
dec
sar
jns
adc
fsub
loopne
sbb
(bad)
mov
ret
adc
pop
mov
int
les
imul
ss
repz
lds
out
adc
and
das
in
les
lahf
push
or
mov
and
in
call
pop
je
pop
mov
out
inc
(bad)
sahf
or
jae
js
popa
inc
repnz
jl
inc
sub
inc
mov
lock
data16
sbb
call
arpl
cmp
xchg
aam
sub
imul
enter
(bad)
cmp
jne
xor
mov
adc
sbb
push
ins
sub
movlps
xor
mov
sbb
push
xor
xchg
sub
push
pop
xor
cdq
popa
lea
inc
jp
aas
cmc
pop
or
popa
je
xchg
jbe
adc
cmp
adc
test
cmp
jl
or
mov
shl
or
or
pusha
or
push
push
fs
je
(bad)
iret
or
js
sub
fisttp
rol
aam
mov
fmul
ror
popa
push
sub
adc
cmp
mov
movs
push
jmp
xchg
inc
mov
pop
pop
arpl
fisttp
data16
stos
(bad)
jle
mov
mov
push
push
clc
xor
add
adc
add
sbb
xchg
mov
add
add
jns
or
mov
pop
xchg
dec
pop
jmp
adc
loope
push
loopne
jp
push
call
xchg
jge
mov
dec
in
or
pop
pop
out
sbb
xor
pop
mov
sbb
bound
js
sub
inc
inc
fcom
mov
sbb
xor
fadd
(bad)
mov
pusha
ret
(bad)
lmsw
mov
aaa
mov
pop
mov
mov
mov
push
aam
jmp
adc
inc
mov
lea
mov
add
sbb
xlat
jle
pop
mov
mov
hlt
jmp
inc
dec
jne
and
or
leave
or
mov
jle
cmp
fld
or
and
sub
dec
sbb
sub
enter
das
test
jge
test
inc
dec
sbb
jno
sbb
cmp
sbb
test
repz
jmp
rol
lods
popf
push
push
mov
jg
(bad)
push
push
add
sub
jge
sub
sbb
or
mov
mov
lods
je
leave
jne
cmp
je
push
rol
or
arpl
mov
cmp
pop
mov
inc
push
aaa
add
push
ret
pop
aad
mov
mov
and
hlt
daa
lods
test
fadd
jmp
outs
mov
rcl
or
or
fidivr
adc
fs
or
pop
push
ret
test
cmp
out
(bad)
movs
loopne
mov
aad
jp
jle
inc
jge
xor
xchg
add
or
pop
in
lea
outs
pop
scas
cmp
inc
test
hlt
sub
jmp
fstp
dec
and
lock
adc
sub
inc
sub
test
(bad)
shr
mov
addr16
cmp
nop
test
inc
add
pop
repz
arpl
shl
add
push
sub
and
jle
sbb
or
add
dec
das
enter
add
cli
pop
xor
push
cmp
sbb
cmp
movs
xlat
jo
add
inc
mov
call
lock
push
xor
cwde
push
adc
jno
mov
mov
or
clc
test
sbb
mov
dec
cmps
push
das
sbb
sub
dec
ins
cld
stos
mov
mov
je
mov
sbb
pop
cld
test
push
or
dec
push
inc
lods
cwde
sub
sahf
mov
push
and
dec
enter
push
call
jno
or
jno
add
inc
push
div
inc
cdq
dec
ret
add
or
mov
adc
mov
xabort
inc
or
int3
xor
bound
xchg
push
mov
daa
mov
pop
pop
mov
or
or
xor
inc
pop
adc
ret
pushf
xor
test
mov
fsub
movs
and
fimul
pusha
in
dec
sbb
daa
sbb
xchg
mov
call
xor
adc
pop
cmp
cmp
test
mov
adc
jg
push
loope
in
mov
adc
pop
adc
adc
xchg
push
sbb
pusha
sar
in
ret
ss
in
les
xchg
mov
enter
sbb
push
aad
dec
outs
mov
push
clc
sbb
xchg
push
push
scas
popf
or
adc
clc
adc
mov
adc
sbb
bound
imul
call
sub
dec
and
and
cmp
dec
clc
xor
add
jb
clc
stos
sub
xchg
imul
popa
sub
data16
adc
pop
mov
cdq
cmp
xor
shr
fild
adc
add
ja
add
sbb
nop
add
movs
and
adc
or
xor
sub
sbb
dec
pop
stos
in
pop
std
pop
xlat
fbstp
clc
cmp
out
movs
dec
mov
out
or
arpl
or
cli
sbb
bound
das
mov
mov
fild
popf
stos
sub
dec
xchg
fsub
mov
xchg
hlt
inc
int3
and
ins
mov
xchg
ins
pop
add
pusha
(bad)
lea
movs
add
shl
mov
xor
add
inc
and
pushf
adc
stos
mov
mov
sbb
cmp
dec
clc
ins
in
or
int3
les
cmp
popa
dec
ss
sar
test
push
cli
cwde
and
invd
mov
cmp
or
stc
aam
outs
out
or
add
pop
imul
add
mov
mov
ret
add
push
sub
lods
loope
adc
arpl
les
push
js
imul
dec
dec
push
adc
push
iret
leave
push
iret
or
mov
je
test
retf
inc
or
adc
cs
jge
cmp
sbb
inc
lock
loopne
rdpmc
mov
push
pop
xchg
bnd
or
rcr
xchg
into
push
and
sbb
imul
sbb
fisub
fwait
mov
push
adc
cmp
pop
sar
xor
outs
pop
jae
adc
or
out
pop
pop
je
lods
push
cmp
std
ss
pop
sbb
xchg
pop
or
adc
(bad)
sti
(bad)
loopne
inc
les
pop
cmps
cmp
xor
adc
pop
and
loopne
push
ror
or
dec
sub
sub
push
or
xchg
ins
loopne
sbb
or
jo
cmp
sub
sbb
xor
jmp
sub
xchg
mov
push
ret
xor
test
dec
add
xor
dec
das
enter
(bad)
jno
pop
aas
ror
sub
sbb
mov
out
daa
cmp
cmp
fimul
(bad)
adc
mov
ins
pop
or
adc
jmp
js
or
loope
in
or
hlt
imul
cmp
push
(bad)
sub
cs
int3
call
ss
adc
mov
or
mul
dec
jmp
ja
pop
adc
retf
jo
sub
lock
pop
pop
mov
test
or
sbb
or
push
jmp
lahf
sbb
jp
mov
ds
xor
test
or
mov
imul
pop
inc
mov
mov
imul
or
ins
cmp
cmp
xlat
cwde
or
adc
and
enter
lods
sbb
sbb
sbb
and
pusha
rcl
lock
sahf
mov
sti
das
pop
cld
jmp
mov
mov
inc
ja
sub
or
adc
pusha
xchg
or
sbb
jae
mov
shr
in
adc
mov
inc
hlt
jmp
lds
jo
test
sbb
add
icebp
sbb
sbb
and
sbb
(bad)
les
adc
add
les
cwde
(bad)
jb
mov
call
test
jo
in
xor
je
or
jmp
ins
adc
push
adc
adc
adc
jmp
daa
adc
xchg
and
and
repz
inc
inc
and
adc
loop
sbb
fs
add
xor
les
dec
push
mov
push
and
in
or
fiadd
mov
pop
or
aam
cmp
sbb
mov
test
aas
or
addr16
(bad)
(bad)
cmp
je
mov
test
inc
ret
fmul
or
in
loop
push
outs
in
dec
dec
sbb
dec
js
sbb
mov
push
push
aad
or
push
cmovbe
(bad)
(bad)
pop
inc
(bad)
nop
push
repz
sbb
mov
dec
pusha
mov
jle
pushf
cld
pop
pop
enter
popf
push
pop
inc
push
xor
push
or
dec
je
dec
pop
inc
jecxz
sub
adc
jo
test
mov
add
sub
and
nop
div
scas
aaa
jmp
sub
sahf
adc
mov
(bad)
imul
jo
sub
and
or
adc
dec
outs
jae
cmp
jmp
test
pop
lods
(bad)
aad
cmps
nop
repz
jg
add
mov
call
je
mov
in
test
push
or
xchg
xlat
push
push
call
call
jb
adc
dec
cmp
call
mov
mov
cmps
(bad)
mov
jmp
aas
scas
xor
add
call
jo
data16
cli
mov
xchg
dec
setl
fstp
sbb
mov
inc
inc
mov
add
add
addr16
popa
mov
jmp
cmp
jo
cmp
loop
aam
daa
fbld
and
mov
add
sbb
sahf
adc
and
pop
icebp
inc
sub
je
call
shl
mov
xchg
adc
add
xchg
push
push
xor
mov
cli
(bad)
fcomp
pop
bound
int3
mov
push
je
push
and
or
mov
push
loopne
fdiv
mov
shl
nop
add
dec
(bad)
ror
mov
xlat
mov
add
add
cmp
add
mov
jl
or
pop
test
fimul
sbb
mov
push
mov
out
or
xchg
inc
mov
cmp
cli
lods
or
sbb
dec
jg
jl
int
xor
mov
push
or
imul
das
cmp
outs
push
inc
dec
jne
jmp
add
lds
retf
aaa
js
fld
cld
mov
test
lock
cmp
or
or
mov
je
inc
rol
push
pusha
aaa
pop
mov
ins
mov
sub
int3
cmps
jo
push
(bad)
cmp
push
adc
and
into
test
xchg
and
jmp
fdiv
mov
int3
mov
xchg
dec
and
mov
in
sbb
sbb
or
out
fisttp
sbb
cmp
(bad)
sysenter
jmp
mov
in
ret
mov
sti
jmp
ins
aam
mov
sbb
mov
sbb
(bad)
lock
adc
mov
inc
daa
test
inc
lea
push
gs
shl
iret
sbb
sub
dec
jg
loopne
retf
mov
dec
mov
push
or
jo
ficomp
inc
fisttp
stos
test
push
ret
pop
add
or
imul
cmps
jmp
fwait
and
jne
std
hlt
cmp
cld
scas
inc
fbld
int3
sub
push
mov
or
scas
jbe
adc
xchg
fcmovb
add
(bad)
sub
push
mov
aad
xchg
mov
ret
xor
push
push
mov
pop
call
aad
mov
das
fcom
adc
mov
popf
outs
int
dec
mov
jmp
mov
call
mov
dec
xchg
bound
or
fadd
imul
sar
sub
mov
and
jns
nop
imul
jmp
in
fwait
setp
mov
and
add
dec
sub
enter
push
fs
xchg
sbb
sbb
fwait
and
sahf
and
sbb
add
shr
pop
jnp
cwde
ja
mov
inc
lds
test
iret
xchg
mov
jnp
sar
cmc
xchg
aad
mov
sbb
je
into
jo
test
sar
ins
mov
gs
sbb
add
add
mov
jb
test
sub
add
cmp
inc
pop
mov
dec
push
mov
pushf
js
pop
xchg
mov
pop
sub
jmp
test
sbb
mov
mov
or
idiv
dec
or
jle
int3
lods
jp
pop
and
pop
test
sub
lods
push
arpl
jp
test
ret
and
push
scas
nop
div
shl
ins
or
imul
pop
sbb
lock
cmps
popa
and
ss
rol
cs
mov
push
hlt
jbe
push
xchg
sub
nop
add
pop
add
inc
pop
sbb
loopne
or
add
pop
pop
sbb
loopne
cld
cwde
adc
mov
xor
lock
scas
jne
cmp
adc
cmp
xchg
or
jmp
cmp
retf
ret
push
lahf
jl
xchg
push
dec
clc
jo
push
push
popf
popa
(bad)
cli
test
(bad)
pop
lock
shl
or
hlt
inc
mov
lock
push
lock
(bad)
xor
push
leave
mov
sbb
daa
call
and
cmp
jbe
inc
mov
or
cmp
sbb
popa
or
repz
xor
sub
sar
or
repz
retf
push
mov
and
add
jne
popf
call
xchg
and
adc
push
xor
or
push
adc
pop
and
pop
mov
or
popa
inc
jno
and
pop
adc
push
lods
and
sub
test
adc
cmp
aad
or
mov
mov
jo
add
unpcklps
adc
xchg
adc
xor
stos
mov
lock
cmp
rcr
cmp
mov
jmp
jge
and
out
cmp
jl
(bad)
cs
hlt
ja
jbe
push
mov
mov
push
add
scas
sbb
(bad)
cmp
mov
(bad)
xor
xchg
fadd
add
xor
xlat
push
push
ret
rcr
jmp
(bad)
mov
jecxz
pop
hlt
test
inc
aad
les
fadd
clc
inc
push
js
fmul
test
pop
loope
dec
js
add
idiv
in
shr
add
mov
adc
dec
pop
or
cmp
cmp
lock
dec
int3
ret
or
das
mov
stos
repnz
jo
and
inc
pusha
ret
js
push
fsubr
loop
fs
jecxz
xor
jne
fs
ficomp
xchg
push
lea
xchg
stos
sahf
lock
and
movzx
push
push
add
xor
xchg
es
sub
mov
aad
hlt
mov
mov
pop
addr16
or
xchg
test
add
or
lock
lock
mov
loopne
in
xor
je
int3
cs
aam
int3
je
xor
popa
sti
jo
cli
xor
lds
mov
in
fwait
les
cmp
je
jns
daa
inc
mov
mov
mov
sub
fistp
cmp
call
rol
sbb
sbb
bnd
dec
(bad)
(bad)
data16
add
cmp
loope
jmp
into
cmc
add
sbb
cmp
pop
ret
push
or
add
inc
add
int
add
leave
iret
pop
and
sbb
push
(bad)
iret
adc
adc
sub
nop
js
dec
out
pop
jmp
pop
fs
cmp
out
ret
xchg
pushf
ret
dec
mov
mov
cmp
pop
dec
je
mov
mov
mov
push
add
bnd
and
cmps
clc
adc
and
call
cmp
sub
mov
ror
push
nop
inc
shl
xchg
imul
push
stos
rol
ins
cmp
js
dec
inc
daa
shl
aad
in
pusha
sub
call
leave
sub
aaa
push
pop
lods
jne
sbb
pop
or
pop
or
ds
dec
jne
rcr
(bad)
aam
js
push
inc
or
fwait
pop
sub
cmp
je
mov
shl
aas
jl
mov
pop
rcl
xlat
ds
sbb
or
mov
add
(bad)
pop
and
jns
pop
cmp
xchg
sbb
das
adc
leave
push
pop
dec
mov
fcomp
add
and
mov
cli
test
inc
push
cmp
(bad)
cdq
mov
xor
fadd
rol
sbb
adc
push
icebp
retf
inc
sti
nop
mov
add
dec
adc
dec
aaa
add
dec
movs
mov
push
sti
xor
fnstcw
lock
add
xchg
das
lods
shr
inc
adc
dec
jo
dec
mov
sbb
inc
call
lods
push
les
push
test
gs
pusha
fbstp
bound
dec
cmp
lock
add
mov
add
inc
add
push
and
or
ret
push
pop
pop
push
cmps
mov
out
loop
das
or
bound
and
pop
daa
(bad)
ficom
jb
pop
and
call
mov
std
and
dec
add
add
xchg
add
aam
pop
ins
imul
mov
inc
repnz
jl
pop
inc
aad
adc
inc
(bad)
push
into
hlt
cmp
or
or
jbe
movs
mov
imul
jns
pop
mov
add
shr
retf
inc
cdq
inc
or
jo
dec
ficom
push
(bad)
clc
ficom
retf
(bad)
(bad)
inc
sbb
test
mov
mov
das
lds
and
mov
cmp
mov
dec
and
cmp
jl
pushf
inc
fnstsw
sbb
xchg
retf
cmp
popa
add
out
scas
js
movs
movzx
sub
inc
inc
jbe
xchg
or
mov
xor
lods
xor
scas
dec
jg
add
ins
add
dec
test
jl
adc
xlat
sti
sbb
pop
inc
adc
aaa
mov
popa
and
add
ret
jno
out
jb
out
les
or
jo
(bad)
mov
jmp
inc
dec
jne
push
imul
cmp
or
ins
pusha
call
cmp
dec
test
mov
dec
int3
dec
mov
imul
loopne
xchg
or
push
inc
pusha
add
fwait
add
sub
icebp
aam
fnstcw
cmp
neg
inc
sub
ja
or
mov
lock
lea
lea
loopne
lock
aam
xor
rcr
clc
repnz
test
push
or
add
fmul
adc
cmp
add
jmp
ret
test
adc
leave
and
ret
adc
inc
push
cmp
xor
jmp
pop
ins
test
mov
cli
(bad)
xchg
dec
xchg
retf
mov
pop
sbb
add
mov
inc
shr
add
inc
adc
mov
inc
rcl
popf
ins
retf
inc
loop
adc
and
add
xchg
pop
sbb
or
mov
loopne
jb
movs
daa
int
jmp
cmp
(bad)
test
cwde
pop
stos
daa
scas
hlt
cmp
fwait
jo
jno
pop
push
inc
enter
sub
cmps
add
out
dec
and
push
or
loopne
jge
dec
and
mov
mov
mov
aaa
or
push
out
je
das
js
mov
mov
jg
pusha
mov
lahf
push
push
mov
mov
jge
mov
repz
mov
mov
daa
fmul
jle
add
bound
pusha
lea
sub
pop
jae
or
dec
(bad)
in
dec
je
fild
lea
jg
mov
dec
fimul
test
sbb
movs
adc
push
pop
clc
dec
jne
sbb
lock
movs
arpl
rcl
add
mov
(bad)
dec
push
imul
add
and
test
jmp
sar
mov
fsubr
jge
mov
sub
mov
je
xlat
mov
rcr
push
test
inc
sbb
add
cmp
jl
aaa
cmp
loop
(bad)
mov
inc
mov
or
ret
loopne
lock
mov
and
adc
fcompp
jmp
inc
call
mov
add
fidiv
cmps
or
scas
cwde
jne
mov
call
mov
xlat
push
cli
(bad)
cmp
or
and
push
jbe
xlat
push
dec
cld
mov
bound
sbb
and
or
div
or
out
and
jo
jno
imul
mov
mov
pop
stc
enter
jg
out
retf
sub
int
push
cmp
or
push
das
adc
test
push
cmp
jle
or
mov
pop
cmp
adc
clc
xchg
rcr
cmp
mov
pop
xor
add
cmp
sbb
mov
(bad)
std
or
je
or
mov
lea
jp
xchg
add
movs
adc
in
mov
scas
add
shl
data16
push
add
inc
out
adc
inc
xchg
adc
or
je
clc
mov
mov
adc
sbb
dec
loop
pop
add
sub
je
test
xchg
stos
loope
ss
shl
enter
shl
pop
jb
or
fisttp
mov
popf
mov
sub
push
jo
rcr
jo
adc
mov
lea
sahf
aam
and
mov
ins
push
or
daa
jo
int
push
movs
aad
jmp
loope
mov
adc
and
test
sbb
rol
fiadd
cmp
push
jl
test
dec
mov
movs
sub
ss
in
mov
push
mov
movs
adc
test
pushf
test
lea
jge
aam
pop
sub
lods
in
or
fs
adc
xor
bound
xor
sbb
ror
mov
mov
xchg
inc
mov
add
inc
xor
jp
sbb
mov
movs
mov
mov
xchg
js
or
inc
hlt
push
cmp
sub
pop
adc
(bad)
jbe
out
scas
jmp
or
adc
clc
push
sub
pop
iretw
fcomp
rcl
cmp
scas
(bad)
nop
(bad)
enter
ficom
pushf
push
sbb
xor
xor
cmp
mov
xchg
or
lock
xor
add
or
sahf
nop
add
lods
aam
std
pusha
aas
je
xchg
mov
js
mov
jl
loop
xchg
nop
xchg
test
dec
aas
push
rcl
or
stos
fsubr
mov
data16
fld
ss
jle
hlt
ror
sbb
cld
and
or
sub
sbb
ja
sbb
adc
mov
(bad)
xchg
(bad)
(bad)
jmp
add
and
test
outs
aaa
lock
test
rol
daa
daa
cmp
push
jne
ror
add
add
jb
mov
and
inc
sbb
scas
mov
mov
outs
rcr
jl
xchg
sbb
call
cmp
xor
mov
sbb
sbb
arpl
cmp
jg
xor
or
push
add
cmp
loope
mov
loope
(bad)
(bad)
loopne
movs
inc
add
add
or
mov
cmc
xor
pop
mov
pop
mov
(bad)
setne
mov
or
push
sub
jg
call
or
(bad)
sbb
(bad)
mov
xchg
adc
push
fs
add
not
jae
ds
dec
mov
push
jo
fwait
sbb
and
scas
adc
outs
fs
cmp
mov
push
daa
test
push
fnstsw
adc
je
push
add
pop
int3
call
ja
or
cld
dec
sbb
imul
mov
push
xchg
sbb
in
or
cmp
or
and
ja
pop
(bad)
int3
inc
stc
adc
adc
add
ja
xor
pop
cmp
je
mov
push
cmp
add
pop
jne
inc
adc
mov
cmp
add
jne
test
mov
mov
push
jb
or
popf
scas
(bad)
add
retf
mov
or
lods
clc
or
xor
pop
mov
dec
add
mov
cmc
ret
ret
dec
push
jo
sub
mov
push
jmp
mov
add
add
xor
add
rol
outs
fs
add
sub
jns
push
fnstenv
nop
outs
push
outs
add
add
int3
in
call
mov
or
xchg
push
sub
and
mov
add
mov
or
cmc
sub
rol
mov
loope
lods
add
inc
out
jmp
test
jp
sub
fsubr
stos
push
cmp
(bad)
inc
jo
scas
mov
and
jo
and
jmp
jmp
je
sbb
scas
rcl
sahf
push
fwait
shl
out
mov
adc
test
xchg
jo
sub
and
cmp
and
test
cmp
ins
xor
jnp
push
imul
cdq
test
mov
mov
mov
rcl
scas
and
sbb
arpl
jne
aam
ror
rol
mov
cmp
sbb
imul
mov
aaa
test
sub
xchg
ss
or
pop
mov
into
fneni(8087
and
cli
movs
pop
int
inc
mov
cmp
addr16
pcmpeqb
adc
js
ja
or
shr
and
mov
mov
jns
xchg
sbb
ret
adc
pop
scas
test
cmps
ss
clc
outs
lock
movs
sub
sti
jmp
push
inc
or
sbb
dec
pop
inc
inc
sbb
inc
sub
mov
(bad)
sbb
dec
pop
sub
inc
cmps
xlat
mov
mov
enter
adc
dec
mov
mov
mov
push
sahf
push
push
push
adc
mov
enter
sbb
sbb
sub
pop
imul
push
loope
dec
mov
add
add
ror
pop
inc
and
pop
ror
adc
inc
sbb
out
mov
adc
dec
enter
cmc
fiadd
sbb
fdivr
pop
fcmovu
subps
mov
jbe
adc
xor
sub
ins
xor
or
jne
loopne
stos
imul
inc
xor
or
dec
mov
sub
je
pop
jl
es
lahf
push
sub
loopne
jmp
fwait
call
sub
jb
je
dec
sbb
inc
dec
or
cmp
aaa
(bad)
sbb
jmp
and
outs
cs
adc
adc
and
sbb
movs
imul
sbb
xchg
push
sub
cmp
js
call
imul
adc
adc
sbb
int3
adc
inc
pop
scas
add
(bad)
push
jno
add
adc
fidivr
inc
pusha
in
xchg
(bad)
jmp
xchg
add
dec
adc
xor
repz
or
adc
fisttp
add
and
stos
add
stos
xchg
sbb
push
cmp
fild
adc
inc
or
mov
mov
fwait
add
inc
inc
mov
pop
add
and
movs
out
pop
xchg
add
jge
mov
les
cwde
outs
xlat
jp
jo
leave
sbb
not
dec
sbb
sub
shl
xchg
mov
adc
lea
mov
in
push
mov
sub
sub
call
pusha
add
pop
dec
or
jmp
push
imul
mov
xchg
pushf
imul
test
fwait
adc
aam
out
fsub
or
xchg
add
xchg
push
(bad)
add
push
jg
inc
(bad)
push
cmp
or
sub
adc
mov
jbe
ja
cmps
xor
retf
or
adc
xchg
cmps
pop
mov
pop
lea
cdq
je
and
pop
dec
mov
add
and
dec
into
mov
dec
je
push
(bad)
and
pop
adc
loopne
mov
rcr
lock
jns
pop
and
ins
(bad)
xchg
dec
jle
mov
jge
mov
or
xchg
jb
push
jno
mov
ror
test
popa
lock
inc
mov
push
pop
rol
repnz
fadd
mov
fdiv
jae
jns
push
mov
dec
push
test
aaa
or
mov
movs
call
cmp
or
jo
inc
in
adc
lods
(bad)
cmp
inc
jmp
pop
shl
pop
addr16
xor
in
add
repnz
or
inc
into
inc
adc
sub
in
outs
aaa
xor
call
push
add
push
sbb
inc
cmc
sbb
lods
xchg
xor
gs
add
(bad)
bound
push
adc
jmp
push
adc
xchg
and
cmp
aam
imul
outs
imul
ret
fwait
das
adc
aam
and
ret
sbb
push
int3
aas
gs
and
jb
inc
pusha
sbb
dec
aas
and
xor
(bad)
mov
push
and
inc
dec
sbb
int
data16
xor
dec
add
inc
or
fwait
xchg
pop
inc
push
xor
xor
stos
pop
mov
push
lea
and
xchg
cmp
add
sbb
addr16
stos
push
inc
cmp
mov
ffreep
or
pop
int3
int3
int3
in
ret
mov
mov
push
jmp
movs
push
pop
mov
fadd
mov
loopne
les
or
shl
dec
mov
ins
adc
shr
sub
call
xchg
popa
cdq
je
sti
in
(bad)
and
in
add
cmp
sub
scas
inc
test
ins
and
movs
adc
loop
mov
adc
push
repnz
add
iret
inc
iret
bound
inc
mov
inc
mov
in
fnsave
and
add
jno
mov
push
mov
dec
inc
loope
inc
pop
popa
jns
inc
inc
gs
pop
or
int3
icebp
inc
or
mov
mov
pop
cmps
sti
and
jmp
nop
sub
push
push
mov
sbb
sbb
or
fidivr
mov
ror
pop
cmp
neg
pushf
sbb
mov
sub
aas
push
daa
in
push
inc
or
pop
pop
pop
xor
pusha
cmps
mov
std
loopne
push
movs
cmp
out
mov
fisttp
jecxz
or
or
add
loopne
(bad)
mov
pop
and
xor
lea
mov
mov
call
stos
cmp
pop
dec
jge
inc
push
dec
pop
adc
or
shl
jbe
in
pop
ds
pop
mov
sub
mov
adc
fst
jp
inc
pop
test
add
sbb
pop
arpl
or
out
je
ret
dec
push
adc
and
xor
jmp
xor
push
jmp
mov
cmp
sub
sbb
pop
dec
push
and
int3
cmp
fwait
popa
pop
inc
xor
push
loop
sar
test
dec
add
and
adc
pop
xchg
dec
test
pop
pop
mov
xor
dec
pop
push
pop
dec
pop
cmp
retf
pop
ins
pop
aaa
push
ror
push
mov
add
mov
sbb
jecxz
add
or
sti
mov
pop
and
shl
xor
fisttp
push
addr16
pop
aas
stos
fsubr
fwait
inc
mov
jle
xor
push
pop
jmp
push
in
pop
jmp
jmp
mov
jbe
sub
sbb
cmp
adc
stos
pop
dec
pop
inc
test
cmc
dec
add
pop
cmp
inc
in
adc
mov
or
or
ror
add
or
jmp
or
(bad)
mov
add
cmp
push
mov
push
scas
cmp
xchg
cmps
xchg
es
xor
push
in
push
inc
mov
mov
(bad)
push
ins
or
push
test
xor
mov
adc
add
or
sbb
xchg
mov
outs
movs
adc
lds
pop
add
push
xchg
inc
fbld
fisubr
les
mov
cmp
cmps
les
or
adc
imul
in
xchg
or
add
adc
inc
scas
fsubr
cmp
add
fnsave
xchg
cmps
xor
adc
iret
setae
test
inc
adc
sub
xchg
out
out
enter
push
lds
pop
xlat
jno
stos
cmps
(bad)
adc
sbb
push
adc
jo
mov
mov
mov
and
icebp
ins
daa
iret
adc
addr16
out
add
adc
or
lods
(bad)
push
out
xchg
jne
add
add
jle
sbb
or
dec
shl
pop
in
or
(bad)
mov
inc
(bad)
cmp
fdivr
and
dec
test
test
and
es
call
jbe
sub
aam
mov
mov
das
dec
cli
xlat
inc
push
jnp
add
or
push
je
fidivr
cld
or
inc
adc
push
adc
or
push
and
adc
and
mov
cld
cmp
loope
(bad)
sti
lock
push
push
or
or
ds
mov
ret
cmp
inc
(bad)
out
adc
add
call
stos
adc
xchg
pop
and
dec
mov
call
jmp
add
ror
mov
ror
mov
fcmovne
fstp
fwait
(bad)
fwait
lea
push
cld
sub
or
mov
cdq
(bad)
test
push
xor
push
adc
test
sbb
pusha
scas
in
mov
fisub
hlt
test
dec
or
adc
ins
pop
mov
pop
xor
mov
or
js
pusha
adc
sbb
pop
jae
or
mov
call
jae
(bad)
ss
jl
arpl
and
jbe
jnp
mov
mov
ror
in
and
pushf
cmp
out
sub
sbb
jnp
inc
nop
lods
fadd
sbb
add
test
call
xor
xor
push
repnz
inc
and
sub
ror
mov
adc
xor
push
inc
adc
lods
imul
dec
sbb
jb
mov
adc
lahf
mov
jp
mov
mov
and
pop
stos
arpl
mov
adc
jae
pop
jmp
inc
xor
pusha
jbe
push
inc
das
mov
mov
xchg
jb
add
inc
push
dec
xchg
popa
jo
ficom
data16
cmovno
jo
jo
sbb
mov
dec
push
xor
ficomp
xor
mov
fs
scas
adc
mov
push
cmp
(bad)
cmp
int
xchg
adc
and
push
loopne
jno
xlat
sar
arpl
sub
push
pop
sbb
retf
dec
push
(bad)
cmp
das
xlat
mov
jle
jne
xchg
cwde
lea
sbb
dec
adc
popa
call
pop
dec
sbb
mov
je
in
cwde
fld
ins
dec
loope
sub
retf
push
dec
jbe
int3
retf
xor
mov
jo
sbb
popf
out
retf
movs
pop
or
mov
rol
(bad)
or
lds
cmp
and
sub
pop
add
jecxz
mov
cmp
loop
loop
jmp
mov
mov
(bad)
out
mov
out
rcr
jae
sub
add
and
fsubr
stos
out
loopne
mov
jnp
xchg
sbb
cld
outs
mov
leave
out
adc
lock
sbb
inc
inc
pusha
out
(bad)
out
data16
push
clc
out
add
out
sbb
neg
jne
out
aaa
xchg
xor
and
sbb
les
pop
pushf
mov
aaa
xor
push
and
cmc
jae
pop
(bad)
(bad)
fld
xchg
sahf
cs
pop
test
mov
add
test
and
push
push
xchg
iret
mov
adc
jbe
or
test
or
jb
loopne
jnp
or
mov
mov
xchg
add
xchg
cwde
cdq
retf
ins
xor
or
icebp
xchg
sbb
addr16
inc
push
adc
jmp
pop
pusha
mov
int
or
sub
ror
add
test
jo
pop
clc
mov
fucom
add
jne
add
jo
push
rol
push
aam
rcl
push
add
push
dec
ja
sbb
cmp
pop
pop
je
je
inc
out
sub
inc
fstp
dec
loope
(bad)
sub
cmp
inc
fcomi
push
inc
push
pop
and
push
and
in
mov
pop
push
ins
inc
fdivp
mov
les
leave
fsubr
(bad)
mov
cld
mov
fnstsw
sahf
jbe
push
and
or
or
adc
shl
call
or
jmp
or
fidiv
ret
int3
inc
mov
mov
xchg
or
add
mov
imul
cli
jne
add
gs
dec
pop
out
dec
xor
mov
and
inc
dec
xor
pop
data16
std
push
or
mov
movzx
aaa
stos
aaa
jle
sbb
pop
adc
sub
mov
sbb
push
sub
cmp
sbb
pushf
or
xchg
das
jo
stc
sub
cmp
setge
jle
inc
iret
cmp
add
sub
cmp
pop
or
pop
cmp
and
je
lds
pusha
not
pop
mov
aas
aaa
ret
shr
mov
les
push
jp
mov
mov
test
add
stos
ja
dec
ret
dec
je
add
inc
cmp
add
and
xor
cld
jae
mov
cmc
enter
inc
pop
cmc
fsub
inc
sbb
nop
cmp
add
xor
loope
pop
mov
sbb
rol
add
fcomp
add
(bad)
les
add
jmp
or
and
add
pop
mov
mov
push
pusha
jmp
push
and
jp
add
or
dec
lock
jnp
out
inc
xchg
(bad)
sub
lea
adc
mov
dec
dec
add
(bad)
cmps
fcom
push
(bad)
jae
jmp
sub
sar
jns
adc
xor
inc
xor
mov
inc
sbb
mov
xchg
les
or
sbb
call
imul
shl
dec
outs
in
mov
sti
cmps
dec
das
lea
push
mov
lea
sub
and
inc
and
sub
xchg
add
mov
xchg
sbb
xchg
out
lea
xchg
inc
clc
add
jle
inc
cld
or
cwde
cmp
jge
push
jp
inc
mov
cmps
arpl
dec
sbb
test
mov
cmp
outs
fimul
or
or
xor
and
xlat
fs
rol
shl
enter
push
cmp
in
into
and
lea
push
add
jb
mov
ja
inc
out
mov
and
mov
jo
push
adc
or
pop
dec
in
js
clc
cli
push
push
les
je
inc
and
xchg
sbb
fcomp
sbb
add
and
pop
inc
pop
jmp
fild
(bad)
jne
addr16
pop
sbb
and
or
add
sub
jge
push
sub
cmps
xor
adc
or
sub
or
call
push
push
adc
rcr
fiadd
pop
and
mov
push
sbb
or
(bad)
adc
loopne
adc
cmp
xor
clc
fidiv
or
sbb
adc
test
sub
js
sub
sbb
aam
sbb
jl
and
mov
mov
push
in
mov
lods
push
xor
cmp
fild
cmp
sub
jne
and
inc
lock
dec
add
ins
add
inc
cmp
mov
test
xchg
je
mov
sub
inc
mov
test
adc
jp
inc
xchg
pop
out
xor
sbb
dec
pop
dec
out
jmp
mov
dec
sub
test
jl
inc
xor
mov
add
add
sub
fimul
or
pop
jo
shr
add
dec
jne
scas
pop
cmp
sub
aas
aam
add
adc
sbb
pop
add
cmp
or
mov
jo
add
cmp
mov
scas
mov
test
inc
fiadd
mov
mov
out
dec
sub
xor
shl
push
jle
lea
or
pop
sbb
mov
cdq
cs
fsubr
fsubr
bound
cmps
or
inc
cmp
fdiv
aam
pop
mov
pop
and
pop
mov
sub
mov
pop
fstp
clc
cmp
jne
ror
js
je
adc
jae
gs
add
mov
jmp
(bad)
jae
pop
cmps
sbb
add
jecxz
ss
mov
div
jo
(bad)
(bad)
outs
cmp
jne
mov
ss
mov
rol
dec
push
test
pop
pop
adc
aas
arpl
addr16
pop
inc
test
fs
in
cs
pop
jns
stos
or
push
or
jle
push
test
jmp
mov
cmp
icebp
push
cmp
mov
adc
or
test
xor
cmp
pop
retf
shr
cli
adc
loope
adc
jl
sar
cmp
clc
pop
jg
jmp
cwde
add
sub
jb
shl
sub
sahf
jb
jge
loop
cdq
sub
in
sbb
idiv
fisttp
push
dec
cmp
add
out
call
or
ds
aaa
shl
dec
adc
or
(bad)
fisubr
jo
add
and
adc
stc
sub
add
sbb
into
(bad)
sub
pushf
ret
(bad)
and
jo
xor
inc
cwde
cmp
xchg
cmp
pushf
clc
cmp
add
jle
outs
cwd
push
xchg
mov
inc
pop
cwde
out
inc
inc
mov
movs
sub
adc
mov
and
push
mov
mov
je
fmul
xor
mov
mov
adc
pop
dec
je
gs
sub
ds
sbb
inc
dec
jno
push
cwde
imul
or
xor
pop
dec
dec
daa
mov
xor
mov
add
mov
ret
sub
imul
inc
aam
lock
jmp
mov
ja
or
inc
inc
imul
je
push
jmp
inc
cmps
fdiv
jge
jmp
xchg
jmp
mov
xor
push
mov
ins
rcl
add
jmp
adc
pop
xor
dec
dec
and
jg
cmps
cmps
push
bound
dec
test
jl
inc
mov
cmps
inc
inc
or
rol
sub
popa
sub
dec
cli
jl
pop
jg
fcomp
or
fimul
popf
push
mov
or
(bad)
aas
fs
inc
dec
jne
mov
pop
(bad)
jbe
outs
lea
pushf
pop
sub
cmp
jl
mov
add
add
retf
pop
or
mov
je
or
push
rcl
xchg
pop
pop
loopne
push
call
mov
stos
adc
cmps
xor
outs
sub
test
jl
inc
push
ret
int
or
stos
cld
dec
jl
push
sub
daa
push
push
shl
mov
jo
std
enter
pop
jle
dec
aas
dec
ror
jo
pop
or
jne
sbb
daa
add
or
mov
clc
and
jo
shr
add
add
(bad)
sub
mov
inc
(bad)
mov
cmp
jp
sbb
lock
inc
loopne
cmps
retf
(bad)
dec
jne
loope
add
xor
and
or
mov
sbb
(bad)
clc
scas
or
inc
jl
outs
dec
pop
loopne
sbb
sbb
mov
scas
mov
stc
jne
mov
loopne
and
add
stc
icebp
ficom
pop
retf
and
and
popf
movs
cmp
dec
outs
sub
loopne
pusha
add
jmp
xchg
pop
rcr
arpl
loopne
outs
in
stos
pop
ror
ins
div
cwde
jmp
cmp
sbb
ret
aas
unpcklps
and
adc
dec
mov
cmp
out
jo
mov
iret
(bad)
cs
push
scas
push
js
jmp
outs
xlat
push
dec
push
xor
jo
loop
sub
or
pop
cwde
scas
popa
sub
sbb
xlat
jne
scas
ja
js
xchg
xor
jne
and
jne
fxtract
or
or
mov
mov
int3
push
jae
mov
jmp
jge
mov
cmp
sub
lfs
jge
xchg
cmp
punpcklwd
inc
inc
cld
pop
enter
pop
dec
rep
pop
mov
aad
and
add
sub
or
cdq
add
ficomp
mov
push
sbb
sub
mov
and
fadd
test
popa
xchg
add
push
mov
add
jb
and
mov
daa
add
jbe
shl
leave
mov
paddsb
call
clc
je
pop
sub
cmp
adc
mov
cdq
cmp
jle
sbb
clc
dec
mov
xchg
fdiv
xor
add
sub
scas
inc
pop
fld
mov
push
ss
mov
out
dec
mov
test
les
pop
add
push
cmp
loopne
dec
call
int3
push
mov
ror
push
or
mov
retf
push
loope
stos
mov
mov
pushw
sub
cmp
push
xor
leave
push
enter
sbb
adc
pop
xor
inc
lods
mov
pop
jo
push
push
mov
lods
inc
cmp
or
ja
icebp
jnp
add
pop
lock
mov
js
push
lods
fucomi
or
stc
shr
cmp
pop
(bad)
fs
daa
push
or
(bad)
cmp
or
cmp
jne
push
js
adc
cmp
mov
adc
jl
inc
jmp
jmp
xor
repnz
push
inc
imul
lahf
test
ss
test
or
shl
inc
in
inc
mov
push
sub
retf
mov
test
jnp
push
xchg
adc
jg
mov
inc
mov
dec
cmp
jne
sbb
push
push
push
add
push
in
inc
je
outs
add
lea
sub
jg
dec
mov
outs
xlat
pop
sub
adc
jbe
push
jbe
push
sbb
mov
pop
pop
cwde
mov
dec
inc
push
pop
jmp
pop
inc
jae
push
sub
inc
mov
dec
mov
dec
mov
es
ja
cwde
inc
repnz
pop
xor
cld
mov
dec
cmp
sub
sub
int3
call
aam
sbb
push
push
inc
clc
or
add
pop
and
inc
int
out
sti
addr16
nop
fld
dec
adc
in
cmps
pop
push
add
fidivr
inc
shl
fwait
inc
sbb
cmp
mov
xor
shr
(bad)
jmp
add
mov
pop
sub
adc
lock
inc
pop
mov
(bad)
lock
lds
push
hlt
lea
cmp
xlat
inc
and
xlat
mov
inc
dec
ja
inc
add
lock
push
hlt
pop
retf
(bad)
bound
es
clc
xor
push
xchg
and
adc
fwait
jmp
ins
jne
push
push
or
push
das
xchg
or
adc
and
dec
push
sub
dec
push
xor
push
int3
and
mov
pop
mov
jmp
push
mov
je
mov
add
adc
es
dec
call
shl
jb
mov
add
daa
fidiv
pushf
fsubp
jns
adc
cmp
rcl
pop
test
xchg
xor
sbb
inc
cmp
or
jle
push
(bad)
xchg
adc
inc
mov
jmp
mov
push
push
push
mov
pop
or
pavgw
les
inc
xchg
mov
mov
aam
imul
lock
sub
sbb
add
ret
sahf
int3
dec
pop
dec
mov
push
pop
push
pop
(bad)
ins
ss
cmp
cld
sahf
movs
adc
in
cmp
jle
ss
in
test
mov
mov
push
outs
jo
pop
pop
pop
adc
outs
test
dec
ret
mov
jl
lock
lods
test
sub
add
cmp
push
lods
pop
ds
lds
(bad)
fimul
data16
push
dec
cmps
add
jmp
xchg
add
or
and
lea
mov
add
imul
ss
push
xor
movs
rol
mov
or
mov
(bad)
sbb
cmp
pop
adc
sub
sub
inc
push
push
sbb
jle
mov
imul
fnstenv
ins
xor
mov
push
js
sahf
das
mov
repnz
inc
pusha
je
jnp
dec
dec
mov
cmp
movs
hlt
push
fs
sbb
add
comiss
inc
cmp
loop
add
int3
jne
popf
leave
jnp
test
aaa
and
pop
idiv
or
jmp
xchg
aad
into
add
sbb
or
in
lea
dec
shl
sbb
xchg
mov
out
dec
into
push
mov
das
test
xor
daa
xor
and
cwde
or
lds
scas
pop
pop
mov
xchg
movs
leave
out
fs
fs
cld
mov
xchg
das
clc
sbb
add
sub
pusha
bndldx
adc
and
sbb
mov
sbb
jmp
aam
dec
jle
les
(bad)
ins
xchg
fwait
push
adc
sub
je
mov
jo
sar
lock
add
jne
aas
add
clc
and
add
lock
push
pop
jno
pusha
xlat
outs
div
dec
or
mov
ret
push
out
mov
adc
inc
cwde
mov
movs
add
sbb
adc
push
cld
push
sbb
adc
clc
add
add
test
je
jne
imul
xor
push
or
adc
mov
adc
add
inc
jo
mov
movs
les
mov
and
dec
adc
push
out
push
movs
call
mov
sub
add
adc
jmp
test
cmps
sbb
sub
mov
jp
imul
addr16
scas
and
rcl
xchg
lahf
jp
ret
pop
movzx
inc
js
and
into
or
mov
and
sbb
pextrw
pop
inc
add
pop
adc
mov
mov
or
pop
test
test
dec
xchg
stos
sahf
loop
test
adc
push
fisttp
sub
popf
and
adc
ins
cs
out
mov
pop
sbb
push
hlt
mov
jae
add
xor
adc
push
pop
xor
ret
fst
adc
jnp
dec
pop
xor
std
sub
jo
add
scas
xchg
xchg
mov
and
sbb
and
xchg
add
add
or
test
mov
xor
or
aaa
dec
or
popa
and
outs
aam
sbb
fucomi
add
add
push
or
aas
add
dec
push
add
shl
sbb
xchg
add
ins
cmp
xlat
sub
mov
fsubr
push
xchg
out
cs
fistp
int3
jmp
das
push
cmp
pusha
lock
add
cmp
sbb
sbb
arpl
push
dec
add
pushf
push
popa
rol
out
repz
add
repz
xchg
test
mov
enter
jns
push
hlt
loopne
sub
(bad)
or
cwde
xor
push
push
lea
add
or
jne
pop
repnz
stos
add
icebp
and
add
or
adc
mov
mov
sbb
icebp
stc
push
nop
pop
cmp
test
sub
sbb
fcmovbe
out
mov
inc
push
loopne
sar
sbb
hlt
enter
ret
adc
jmp
loop
bnd
adc
xor
frstor
pusha
sub
pop
pop
push
es
mov
pop
lahf
jmp
cmp
mov
or
sub
add
mov
and
mov
aas
(bad)
adc
test
(bad)
pusha
dec
js
push
into
adc
dec
or
push
mov
adc
xlat
mov
cmp
leave
loope
lock
sbb
add
add
jp
int3
into
push
add
mov
test
dec
add
xor
jle
xor
fisub
add
add
push
add
xor
je
sub
xor
add
dec
int3
sub
dec
test
outs
int3
mov
sbb
jle
cmp
int3
sbb
push
rol
mov
aas
push
push
cmp
or
mov
and
and
imul
mov
movs
add
movs
enter
in
cmp
and
int3
std
or
lea
and
sub
jb
je
dec
mov
mov
and
xor
fmul
popa
push
add
dec
cmp
fnstenv
mov
ds
cmp
daa
cmp
pop
cmp
jle
scas
xlat
out
imul
jmp
test
inc
repnz
jnp
jmp
sbb
jg
jmp
rcl
adc
in
test
gs
fsub
cmp
xor
out
lea
mov
push
mov
inc
pop
push
movzx
cwde
loop
(bad)
out
mov
call
in
add
rcr
xor
cmp
dec
call
clc
sbb
or
lea
popf
jecxz
pop
out
clc
sub
mov
jge
cmp
scas
adc
push
pop
in
leave
sub
fisttp
xor
mov
or
pop
je
es
jo
xor
sbb
push
cld
repnz
je
inc
xor
adc
sub
std
add
sbb
fist
add
xchg
dec
sub
imul
int
adc
sbb
pop
push
ret
rol
mov
pusha
rcr
ret
push
cwde
retf
pusha
shr
inc
and
and
hlt
imul
or
xchg
cmp
sub
and
push
or
push
inc
add
xor
pop
les
inc
push
sub
jl
test
mov
aad
or
sbb
add
mov
call
mov
push
push
push
ret
fsubr
push
push
pop
cmp
adc
adc
pop
popa
push
ret
pop
dec
mov
aaa
pushf
rcr
adc
add
or
mov
mov
add
mov
jmp
inc
xchg
mov
dec
mov
mov
cmp
loopne
adc
fwait
sub
lods
cmp
jne
(bad)
push
and
lock
pop
sbb
mov
mov
cli
adc
lods
lea
out
sub
add
pop
jmp
loop
jmp
sbb
push
rol
jl
cmp
cdq
pusha
push
mov
inc
lock
enter
lds
pop
cmp
in
out
movs
lds
pop
mov
jne
xor
loope
call
ficomp
or
sbb
pop
inc
and
mov
adc
int
adc
adc
jmp
enter
fcom
or
in
mov
dec
out
leave
fdiv
xlat
fld
xchg
fild
xchg
pop
enter
adc
xchg
sbb
add
or
adc
loop
pop
add
ret
neg
mov
push
fst
daa
les
fstp
push
fucomp
pop
nop
pusha
adc
dec
mov
repz
mov
jo
mov
sub
or
nop
and
adc
pop
js
in
out
jno
ds
mov
ret
xlat
mov
or
sbb
adc
dec
popa
add
call
or
xchg
push
inc
rcl
rcr
outs
push
pop
dec
dec
mov
(bad)
je
loope
in
mov
scas
xor
dec
cmp
popa
inc
jp
movs
icebp
xor
scas
mov
xchg
ret
cmp
pop
je
dec
je
jmp
xor
jae
cmp
shr
adc
push
movs
lods
aad
sti
cmp
or
clc
mov
lds
mov
and
mov
add
inc
and
cmp
cmp
sub
adc
add
jmp
shr
loop
lods
sbb
jnp
and
jg
dec
lahf
and
sub
sub
in
out
(bad)
mov
jo
and
push
rol
popa
pusha
and
pop
clc
mov
fadd
mov
xchg
mov
lea
call
xchg
push
stos
push
add
mov
jno
add
movs
sbb
add
(bad)
jge
sub
mov
mov
or
pop
sbb
add
or
adc
push
xchg
push
je
ret
mov
and
and
add
or
cmp
lock
test
mov
cmp
mov
jmp
cmp
xor
ret
pop
pop
mov
rcr
or
cmp
cwde
add
adc
aaa
pusha
add
aaa
lods
ins
lea
test
fs
jp
fucomip
cmp
mov
adc
jmp
(bad)
push
or
or
int3
call
cmps
adc
ins
and
sbb
les
jae
or
adc
adc
clc
xchg
sub
adc
sub
call
stos
mov
(bad)
nop
mov
ret
adc
pop
adc
inc
and
inc
push
mov
jmp
mov
adc
dec
popf
jae
ret
or
je
jl
cmp
inc
xor
xor
push
out
push
sbb
sbb
or
pusha
adc
sub
or
push
and
fcom
inc
jnp
loope
mov
sub
add
rcr
inc
cmp
pop
push
fnstenv
mov
test
push
adc
mov
in
xlat
inc
lea
rcl
adc
jns
inc
inc
mov
dec
mov
inc
pusha
stos
inc
adc
push
or
add
xlat
push
ror
shl
cmp
xor
sbb
inc
ret
mov
das
add
add
pop
push
and
push
rcl
cmp
mov
div
jmp
repz
scas
lods
add
inc
mov
daa
shr
fdivr
or
fadd
mov
popf
mov
and
sub
call
sbb
inc
andnps
daa
sahf
aam
inc
inc
push
adc
xor
cmps
outs
sub
sbb
add
je
xchg
or
or
cvtps2pi
daa
cmp
out
packuswb
add
cmp
xchg
inc
daa
mov
add
sub
or
inc
loopne
pop
push
cwde
push
push
push
cmp
mov
xor
jecxz
push
or
pop
pop
loopne
movs
jnp
lods
retf
mov
cmp
xchg
outs
sub
xchg
retf
in
in
jge
xchg
adc
fs
mov
mov
(bad)
je
scas
sbb
cwde
aaa
cmp
cmp
scas
add
adc
cmp
mov
lea
or
imul
jo
mov
and
pop
push
push
push
(bad)
jo
lods
pop
imul
cld
rol
push
sbb
je
lea
pop
rol
cmc
mov
sbb
sbb
pop
mov
dec
cmp
out
fdiv
pop
dec
jae
bound
inc
dec
adc
je
or
dec
adc
cld
and
and
jle
adc
sbb
adc
nop
test
adc
adc
ret
mov
int3
rcr
mov
dec
out
pop
add
or
call
out
xchg
add
jmp
in
lods
xor
imul
sub
and
add
inc
mov
or
sub
stc
mov
(bad)
and
std
out
lock
inc
jo
or
xor
push
daa
add
pop
fs
and
fadd
fcom
adc
pop
sbb
call
jne
cmp
jne
mov
cmps
inc
(bad)
sub
fild
sub
call
cwde
dec
das
pop
pop
je
pop
push
cwde
(bad)
fcom
add
xchg
inc
test
mov
nop
xor
adc
std
xor
mov
loop
xor
xlat
je
sbb
stos
test
add
or
cmp
push
mov
pop
add
rol
dec
dec
loope
push
loope
mov
pop
mov
xchg
aas
jle
inc
sub
inc
stos
cmp
jo
aas
inc
test
bnd
add
inc
adc
scas
adc
push
or
pop
inc
fld
pop
pop
(bad)
cmp
mov
mov
fidivr
fidivr
aad
out
iret
test
cmp
ss
xor
mov
and
je
inc
ficom
bound
push
or
mov
movs
inc
js
daa
mov
neg
jnp
adc
mov
pop
jne
in
mov
loopne
cmp
or
(bad)
fisttp
dec
jmp
jle
and
test
mov
and
sbb
test
adc
cmp
inc
xlat
push
mov
jae
sbb
int
out
xchg
or
mov
pop
rcl
loop
sbb
fwait
test
pop
mov
fnsave
fsubr
inc
pop
ret
lahf
cmp
pop
pop
jne
push
push
js
mov
pop
sub
ja
invd
cdq
mov
sbb
gs
sub
outs
and
and
sub
xor
cmp
inc
xor
sbb
add
adc
push
outs
pop
pusha
pop
pop
xchg
rol
lds
push
pop
jle
and
jle
sbb
pop
popa
jo
adc
xchg
fst
ret
inc
pop
adc
jnp
loopne
loope
add
rcr
jle
sbb
push
inc
jle
rol
cmp
pop
(bad)
fidiv
je
add
nop
popf
mov
je
adc
leave
add
jnp
or
mov
out
add
int3
xor
out
out
xchg
lock
mov
stos
or
add
push
in
loopne
pop
push
pop
mul
adc
mov
jo
add
std
pusha
adc
adc
push
pop
lds
pop
jb
push
sbb
or
add
fdiv
pusha
xchg
and
xchg
push
lock
jne
xor
je
sbb
sbb
push
mov
rol
sub
ja
adc
ret
add
fadd
and
imul
shl
sub
je
mov
hlt
and
movzx
aad
push
rol
outs
mov
and
out
push
loope
push
imul
cmp
rcr
jo
mov
lock
ret
scas
mov
xchg
fstp
add
outs
inc
loopne
jo
push
mov
and
test
jo
adc
imul
les
jmp
arpl
jo
inc
push
lock
out
rol
mov
test
adc
dec
pusha
ss
loope
sub
or
sub
lds
call
icebp
les
pop
mov
cmps
pop
xor
jp
push
out
jmp
xchg
pop
sub
sar
push
jl
jge
sub
push
xor
sbb
mov
jnp
cmp
jnp
sub
cmp
pop
sbb
mov
stos
add
mov
loopne
ins
dec
ins
sar
(bad)
pop
jo
sbb
or
lods
mov
mov
inc
nop
sub
push
push
daa
jae
mov
cmp
sub
dec
adc
aaa
or
rol
js
push
pop
adc
and
in
inc
sbb
adc
cdq
push
out
or
test
push
in
pusha
sbb
jmp
jmp
push
pop
add
ror
mov
mov
xchg
sbb
push
mov
mul
mov
clc
mov
push
sub
je
or
inc
add
dec
jne
shl
out
inc
add
push
add
pop
loop
pusha
gs
fcmovnb
inc
pusha
add
data16
call
push
pop
rol
mov
popf
cmp
jb
push
adc
mov
sar
jge
xchg
pop
cdq
setbe
adc
push
js
iret
or
and
lea
sbb
(bad)
fcmovne
shl
(bad)
add
lock
push
mov
mov
lods
inc
sbb
into
sbb
in
ret
and
dec
mov
sahf
and
push
xor
lmsw
test
fdivr
or
add
mov
ror
push
xor
jnp
sbb
icebp
cli
dec
cmp
fcom
adc
dec
data16
pop
add
jmp
mov
xor
ficomp
call
ret
jbe
adc
clc
dec
iret
out
adc
push
add
inc
mov
lods
inc
sahf
mov
leave
add
push
out
mov
sbb
stos
sbb
xchg
pop
xor
ss
enter
mov
movs
mov
(bad)
jnp
cmp
add
mov
jmp
cmp
xchg
shr
arpl
cld
loopne
sbb
mov
add
and
xor
push
inc
lods
pop
adc
push
sbb
or
push
pop
fdiv
and
mov
push
enter
daa
aam
rcr
call
push
cmps
mov
pop
xor
scas
cmp
cmp
adc
jo
nop
cdq
in
sahf
inc
stos
xchg
xchg
inc
add
jnp
fld
pop
push
sub
push
or
xor
add
rcpps
xchg
cmp
push
push
adc
dec
jle
fdivr
xchg
cwde
jg
jne
aam
loopne
push
pop
hlt
sub
daa
xchg
pop
imul
lock
test
or
sar
mov
lea
js
dec
je
cdq
add
pop
je
xchg
cs
push
xor
jb
aaa
adc
inc
inc
dec
xor
shr
adc
or
add
cwde
pop
and
add
mov
xchg
cmp
in
add
mov
test
ss
gs
cmp
in
push
adc
add
add
loopne
popa
dec
mov
jo
mov
int3
lods
mov
mov
sbb
mul
cmp
cs
or
add
xor
inc
sti
push
and
ins
inc
es
ror
sub
jo
inc
js
jp
(bad)
fiadd
add
mov
push
ds
pop
cmp
push
add
jmp
xor
push
inc
add
pop
push
jb
xor
popf
or
mov
cdq
sub
mov
push
(bad)
cdq
iret
inc
cmp
jnp
popf
and
inc
xlat
out
enter
fimul
sbb
mov
add
sbb
int
xor
cmp
retf
iret
mov
movs
sub
xchg
retf
pop
push
fidivr
popf
sub
sub
dec
xor
cmp
retf
pop
fisubr
add
fs
mov
lods
mov
fist
das
call
cwde
adc
std
cmp
mov
pusha
push
pop
add
shl
cmps
and
jp
xchg
jae
ds
add
sbb
lds
out
cmp
mov
jbe
xor
imul
lods
dec
shl
fild
push
push
push
inc
cmp
push
aas
ret
jmp
bound
pop
aaa
lahf
lods
pop
inc
ja
push
loopne
add
mov
retf
adc
pop
pushf
bts
inc
clc
push
cld
mov
sar
push
call
mov
mov
jne
sbb
out
test
daa
push
jne
push
ja
iret
or
sbb
retf
or
pop
(bad)
ja
cli
xchg
test
jne
cmp
sbb
push
(bad)
popf
pop
sbb
jle
xchg
push
add
(bad)
xlat
(bad)
xchg
jnp
mov
sub
sub
and
mov
pusha
add
loopne
push
lods
js
and
fiadd
jmp
pop
add
pop
loop
xor
xor
retf
icebp
jmp
push
dec
jae
popa
and
add
les
push
mov
add
and
jnp
push
shl
imul
out
pop
ds
outs
rcr
push
adc
jg
addr16
fsub
xchg
jnp
movsx
push
or
bound
inc
mov
arpl
and
mov
or
test
mov
or
sti
xor
or
dec
jmp
test
je
inc
mov
adc
xor
sbb
lods
fwait
add
add
adc
cmp
ins
stc
pop
sbb
mov
rol
pop
mov
xor
jns
ja
ret
pop
adc
inc
and
pop
out
dec
test
popa
or
add
add
mov
or
push
js
mov
aad
rol
ds
adc
clc
inc
pop
mov
aas
jo
aad
je
(bad)
rcr
inc
cmp
dec
(bad)
add
add
dec
hlt
xchg
sub
popa
or
push
adc
mov
inc
sbb
movs
mov
push
jmp
je
cs
mov
out
hlt
sub
jg
popf
aam
sar
fcomp
adc
icebp
and
cwde
loopne
jnp
add
pop
push
aam
les
cmp
les
leave
fwait
sti
add
xor
shl
mov
xchg
push
inc
pcmpgtb
jno
arpl
scas
dec
jo
(bad)
and
mov
push
sbb
ins
sbb
dec
dec
mov
or
loopne
xor
push
or
loopne
pop
or
cmp
sub
push
adc
scas
sub
sub
sbb
push
jo
mov
pop
int3
mov
(bad)
ins
nop
in
mov
adc
inc
pop
adc
xor
jg
mov
sbb
inc
cmp
daa
rcl
idiv
xlat
push
mov
push
or
cli
jns
adc
add
mov
dec
xor
imul
pop
add
loope
cld
lea
jmp
xchg
cli
push
call
(bad)
push
mov
bound
adc
pusha
and
fistp
mov
or
inc
cmps
call
lds
clc
xor
shr
aam
jle
hlt
(bad)
pusha
mov
jge
adc
sbb
pop
std
pop
xchg
or
dec
dec
xor
cmp
jle
sub
out
dec
sar
add
xchg
jo
arpl
sub
das
cmp
jle
adc
shl
cmp
xor
aaa
and
jb
pusha
push
dec
nop
mov
cmp
mov
test
mov
adc
or
mov
or
or
mov
and
jg
mov
or
and
inc
mov
rcl
pop
scas
les
pop
mov
mov
or
jge
(bad)
mov
nop
rol
lds
xor
test
js
sbb
mov
imul
add
push
pop
movs
sbb
push
popa
and
mov
mov
lea
pop
jmp
mov
mov
push
push
pop
imul
inc
(bad)
in
or
or
fsubr
jecxz
lea
mov
inc
mov
sbb
push
nop
xchg
or
jne
add
mov
and
mov
test
cmps
push
add
or
fmul
jmp
add
sub
movs
xlat
xchg
loopne
ds
dec
enter
cdq
and
in
dec
push
xchg
push
xchg
loopne
in
add
pop
rcr
cmp
popf
ret
or
dec
push
or
pop
mov
call
cwde
(bad)
add
inc
fnstenv
cmp
ss
mov
mov
es
jne
jbe
xchg
int
xor
fmul
cmps
or
(bad)
int3
push
push
and
dec
hlt
push
mov
sub
or
lea
push
js
int3
iret
cs
cmp
sub
jl
ror
enter
dec
or
loope
sbb
stos
jne
or
mov
lea
cmp
les
js
xor
mov
mov
adc
in
mov
js
inc
xchg
fs
arpl
xor
adc
clc
sub
inc
add
ins
mov
add
std
pop
or
js
jb
ret
add
sbb
add
adc
push
mov
add
push
test
inc
jo
cdq
jecxz
pushf
mov
sbb
scas
in
(bad)
mov
call
or
and
shl
lds
mov
in
jp
dec
pop
xchg
or
adc
mov
dec
push
lock
mov
push
push
push
retf
mov
pusha
aam
ds
mov
xchg
fidiv
mov
inc
loopne
loopne
scas
test
in
cmps
cdq
rol
rol
sbb
outs
sbb
add
mov
inc
push
lock
push
or
lods
ret
pop
adc
sbb
lock
push
pop
push
mov
or
mov
in
xor
mov
test
cdq
xor
sub
sub
cmp
add
xchg
jmp
adc
xchg
inc
in
bound
sti
and
dec
mov
mov
push
mov
call
loop
jmp
fild
or
rol
test
outs
xchg
(bad)
fsub
pusha
sahf
cdq
mov
loopne
movs
push
inc
shl
xlat
std
pop
sbb
mov
push
cmps
cli
ret
pop
dec
push
push
mov
ss
sbb
jge
sahf
xor
xor
aas
or
jmp
jne
fsubr
add
jmp
sbb
or
retf
ret
cmp
ret
mov
inc
inc
test
dec
xchg
pop
(bad)
mov
mov
sbb
adc
in
shr
xchg
test
push
fwait
lock
ret
mov
test
sbb
icebp
or
xchg
xchg
inc
inc
icebp
sbb
les
jne
ret
ins
ret
xor
sbb
icebp
xor
mov
xor
push
xor
add
adc
sbb
xor
imul
ror
add
outs
or
pop
mov
jne
xchg
sbb
or
push
ja
pop
pop
or
arpl
sbb
xchg
(bad)
movs
test
xchg
adc
push
pop
dec
xchg
sbb
jb
sbb
xchg
pop
mov
add
out
outs
mov
adc
add
les
jns
sub
ss
mov
adc
les
pop
je
ja
or
push
pop
mov
or
mov
les
add
push
lods
pop
cmps
jnp
adc
neg
xchg
popa
adc
sub
sbb
lea
scas
push
std
or
loop
sti
mov
push
fwait
and
lods
and
adc
adc
mov
retf
jns
in
jl
mov
(bad)
in
xor
xchg
mov
cmp
push
out
sbb
addr16
mov
or
mov
aas
push
pop
sub
sbb
rcl
fxch
cmp
call
or
sbb
dec
mov
push
sar
push
pop
loopne
dec
fisttp
and
adc
std
outs
test
nop
pop
pop
pop
fs
jae
hlt
mov
push
mov
jmp
js
lock
addr16
push
sbb
ins
seta
mov
loopne
push
out
or
js
or
cmp
mov
add
push
adc
cmp
jl
cmp
rcl
pushf
into
adc
(bad)
pop
retf
pop
shl
dec
cmp
ins
xor
loop
cmp
inc
sbb
jne
adc
shr
pop
inc
inc
ror
retf
ret
mov
mov
push
test
fild
and
adc
or
inc
int3
adc
add
ss
fistp
mov
sbb
xor
and
or
sar
pop
cmp
jo
or
sub
or
scas
mov
sbb
adc
and
or
adc
push
jo
inc
sbb
cmp
adc
outs
push
mov
je
pusha
add
push
sar
mov
movs
sbb
pop
(bad)
or
jmp
stos
push
push
cmp
push
pop
iret
das
adc
xchg
and
mov
outs
jge
nop
jno
inc
push
mov
add
pop
jmp
or
fwait
adc
cmp
sbb
aaa
add
div
cmps
cmp
mov
pop
pop
pusha
inc
inc
mov
loopne
(bad)
mov
shr
loopne
inc
scas
icebp
push
mov
cmp
test
adc
sbb
cmp
jbe
mov
sbb
jne
adc
inc
cmp
or
add
jnp
sub
inc
cmp
adc
ja
cmps
sbb
ror
arpl
add
xchg
sub
jne
push
push
inc
popa
sbb
or
jo
xchg
adc
cmp
je
or
dec
cmp
or
scas
jge
ret
fdiv
jmp
inc
dec
inc
inc
stos
sub
lods
rol
mov
jg
jmp
inc
inc
ret
loopne
jl
inc
je
pop
push
sar
sbb
or
sbb
mov
sti
or
(bad)
mov
ins
mov
adc
mov
mov
push
inc
(bad)
adc
mov
dec
and
cld
lods
push
shr
sbb
cmp
aad
cmp
daa
jo
pusha
cmp
test
jp
inc
jnp
pop
cmc
push
retf
rcl
xchg
je
js
mov
pop
test
cmp
jne
(bad)
(bad)
aas
call
mov
mov
test
add
cmp
lds
mov
add
loope
iret
cmp
(bad)
rcl
or
or
inc
ret
push
loopne
or
icebp
jb
fcomp
mov
sub
sbb
ret
or
adc
and
mov
push
or
fmul
ja
(bad)
test
xor
jp
cmp
add
cmp
adc
adc
jle
push
aaa
ret
add
les
ja
mov
adc
push
fs
je
loopne
shl
sbb
pop
test
add
or
in
or
cmps
inc
jne
aad
jae
neg
mov
hlt
test
xor
or
add
and
pop
or
ja
adc
adc
cmp
cmp
out
pop
xchg
dec
inc
lahf
or
ror
push
fs
sub
mov
pusha
fcmovnu
or
or
sub
shl
(bad)
dec
push
sbb
sub
jmp
add
sbb
lea
test
scas
add
adc
leave
inc
push
or
je
or
cs
sub
or
es
sbb
cmpxchg
inc
or
push
stos
xor
lods
loopne
inc
push
xchg
pop
inc
push
push
or
pop
push
cmp
mov
mov
pop
add
dec
dec
xor
xor
mov
jnp
pop
xchg
sbb
mov
sub
cdq
arpl
push
imul
outs
sbb
jecxz
ret
call
rcl
push
mov
jo
mov
cmp
xor
aad
sahf
and
adc
test
adc
pop
xor
add
pop
cwde
repnz
mov
or
rol
shl
or
cmp
add
adc
inc
lods
push
aaa
inc
push
jmp
popa
push
xor
inc
addr16
xchg
clc
cmp
push
sbb
stc
push
popa
test
or
sbb
enter
rol
or
push
sbb
adc
jl
in
add
adc
out
adc
push
cmps
sbb
and
add
cs
imul
adc
adc
fistp
jle
jne
cs
test
inc
mov
not
pop
pop
jp
xor
aas
pop
jbe
mov
jmp
sub
push
jmp
pop
outs
aaa
push
push
fisubr
outs
push
mov
outs
sbb
adc
adc
xchg
mov
loope
ret
add
into
(bad)
sbb
(bad)
daa
ret
push
mov
je
inc
je
lock
xor
je
xor
jp
lock
outs
and
je
adc
(bad)
stos
pop
test
cld
sub
pop
sub
out
cmp
dec
test
dec
popa
adc
scas
addr16
push
mov
sub
sub
or
call
les
dec
pusha
lock
(bad)
push
push
push
mov
add
in
jno
icebp
jbe
jbe
aaa
push
push
test
or
mov
xchg
jmp
xor
add
mov
fiadd
lds
or
dec
mov
inc
xor
js
out
fadd
imul
jno
rcr
xchg
and
cmp
mov
inc
sub
adc
and
mov
sbb
jo
arpl
scas
je
ins
mov
dec
mov
or
mov
jnp
xor
sub
loop
out
lock
add
push
xor
inc
mov
cmp
mov
dec
sbb
(bad)
dec
ficom
aas
jl
mov
or
push
outs
push
pop
cs
jb
sub
mov
mov
inc
jnp
cmps
sbb
das
outs
aaa
and
das
js
data16
pop
cld
mov
sar
push
push
dec
outs
je
xor
xchg
add
xlat
push
jle
dec
es
movs
push
or
dec
pop
lock
inc
jnp
dec
pushf
jge
jl
out
mov
mov
mov
sar
je
fild
outs
push
les
mov
pop
enter
inc
(bad)
adc
and
outs
gs
pop
fimul
jmp
dec
add
out
mov
movzx
inc
ds
pop
(bad)
dec
out
push
add
push
dec
outs
or
or
dec
inc
outs
arpl
je
jb
lds
clc
fild
js
push
inc
jb
popa
je
out
mov
loopne
call
push
gs
data16
es
inc
inc
add
dec
enter
outs
sbb
jle
mov
adc
imul
(bad)
fisttp
push
imul
popa
pop
xor
jae
add
mov
lds
movs
popa
sbb
push
dec
data16
add
test
dec
int3
lock
add
outs
scas
pop
test
loopne
xor
(bad)
and
push
paddw
in
xchg
sbb
pop
mov
jo
fwait
pop
add
push
jns
gs
cmp
and
pop
or
inc
stos
add
imul
or
jmp
bound
call
cmp
jbe
pusha
add
add
push
jns
imul
push
xchg
add
push
and
cmp
dec
push
push
mov
js
cmp
push
mov
mov
cmp
adc
add
push
cmp
into
xor
mov
je
mov
jne
sahf
sti
and
gs
and
dec
dec
jae
push
dec
sti
xchg
inc
cmp
or
je
cmp
push
sbb
in
or
sbb
ins
cmps
inc
xchg
fld
fdivr
pop
xor
or
push
xchg
mov
cmovbe
(bad)
or
lea
call
push
rcl
push
mov
adc
inc
pusha
inc
or
and
inc
inc
mov
sbb
add
stc
fldcw
movs
in
ret
xchg
mov
jns
hlt
inc
or
sub
inc
ret
ins
bound
mov
or
jge
push
rol
or
imul
psrlq
add
jns
sar
mov
pop
dec
popa
jae
push
adc
add
jns
or
mov
shl
addr16
icebp
mov
fisubr
jo
jp
jno
mov
push
out
int
jnp
add
cld
das
or
leave
(bad)
je
ja
mov
inc
jmp
mov
fdivr
push
inc
sbb
out
sbb
mov
inc
js
mov
imul
or
pop
pop
sbb
or
inc
jb
fs
xor
xor
push
pop
movs
test
rol
lods
cmps
push
sub
das
add
mov
jmp
fistp
add
push
cmp
xchg
scas
stos
inc
and
out
fbstp
push
add
mov
repz
push
push
jo
dec
jmp
jl
mov
aad
sbb
pop
push
je
imul
mov
lods
ret
loopne
popa
or
xchg
and
jne
cmp
push
je
push
inc
aad
push
sbb
idiv
dec
aam
or
test
push
popa
imul
pop
adc
or
add
push
aaa
push
mov
mov
je
push
xchg
jnp
or
mov
mov
pop
or
and
sub
inc
hlt
xor
loop
cmp
fnstenv
arpl
pop
pop
push
aaa
popa
inc
mov
aaa
dec
xchg
cwde
test
xor
mov
and
mov
and
movs
cmp
inc
mov
scas
pop
jecxz
push
xor
xor
scas
push
or
inc
test
mov
test
(bad)
sbb
mov
gs
xor
popf
push
lods
mov
push
jbe
adc
and
sub
xlat
pop
popf
pop
xor
pop
ja
inc
ins
push
add
add
pusha
lods
rcr
push
push
add
xor
xchg
popf
or
das
push
cmp
push
xchg
jl
ins
in
scas
inc
nop
call
pop
sbb
push
xor
xchg
push
push
xchg
loopne
xchg
scas
mov
lfs
adc
(bad)
enter
loope
jb
sahf
mov
lahf
xchg
lahf
std
mov
dec
lahf
add
neg
mov
push
xor
cmp
call
dec
call
lea
nop
imul
push
inc
add
jns
add
push
daa
xchg
icebp
lods
in
mov
clc
cmp
adc
data16
push
sar
pop
mov
push
adc
in
inc
push
sbb
shl
loop
stos
sbb
add
mov
mov
xor
dec
push
clc
repnz
add
daa
mov
dec
push
adc
mov
dec
or
hlt
scas
(bad)
mov
stos
arpl
dec
icebp
pusha
sbb
pop
and
movs
jmp
gs
add
push
inc
imul
adc
addr16
xchg
fcmovbe
push
dec
lods
add
dec
ins
push
mov
mov
(bad)
sbb
inc
fs
push
xor
dec
jle
inc
gs
push
sbb
xchg
call
or
and
js
rcl
cmp
test
sub
adc
cmp
pop
inc
mov
adc
mov
leave
rcl
fwait
popf
out
add
xor
xor
popa
mov
shld
repz
pop
mov
inc
test
or
mov
mov
xchg
daa
mov
pmulhw
lea
push
hlt
sbb
or
ret
and
xor
cmc
nop
xor
jne
bound
ret
rcl
leave
addr16
adc
adc
pushf
cwde
adc
adc
jnp
sub
mov
adc
in
aad
retf
xchg
inc
imul
adc
jns
and
adc
lahf
adc
cmps
pop
pusha
fwait
dec
adc
(bad)
fwait
lds
sbb
int
lds
fwait
pop
or
xchg
sub
mov
lahf
movs
dec
inc
mov
imul
nop
push
push
or
jb
jne
cmc
sub
or
inc
outs
jne
ins
gs
je
ret
sub
add
daa
les
xor
ss
push
retf
mov
inc
add
nop
cs
jnp
cdq
push
xchg
shl
(bad)
test
std
xchg
call
add
ret
das
cmp
dec
imul
push
push
lods
int3
gs
cmp
aaa
cmp
or
(bad)
adc
ds
outs
push
jb
outs
jb
xlat
bound
adc
mov
ja
int
inc
leave
add
sbb
pop
sub
inc
jne
jb
shr
jo
xor
out
movs
pushf
mov
gs
bound
push
(bad)
sbb
add
sub
jb
ret
stc
pop
sub
and
cmp
dec
jnp
add
xchg
inc
adc
add
xchg
fbstp
mov
iret
add
cld
stc
or
cs
in
nop
ffree
cmp
hlt
add
xchg
arpl
inc
dec
xchg
sahf
jae
adc
add
(bad)
ror
into
enter
cld
sub
sub
mov
pop
js
xchg
xor
pop
jno
addr16
leave
mov
xor
jo
in
add
jecxz
leave
ins
(bad)
jl
aas
dec
seta
xchg
fucomi
add
add
cmp
dec
fimul
sbb
and
das
dec
bound
arpl
and
add
jb
push
repnz
loop
jo
ins
fwait
add
lds
xor
push
mov
xor
test
shl
aas
jne
(bad)
nop
or
or
(bad)
cmps
(bad)
clc
frstor
add
xor
bound
lods
stos
or
in
cmps
pusha
sbb
cs
idiv
mov
mov
pop
cmp
es
sub
jge
add
fwait
push
push
pop
rol
xchg
adc
mov
ret
pushf
aad
push
movntps
stos
or
add
jge
shl
shl
lds
rcl
cmp
inc
and
loop
sbb
pop
fidiv
dec
jo
mov
mov
sbb
inc
jge
jge
xchg
cmp
push
icebp
fiadd
fsubr
and
imul
xor
add
add
mov
add
inc
mov
les
clc
jmp
test
stos
push
inc
inc
push
pop
dec
ins
dec
inc
and
sar
push
or
dec
cmps
add
(bad)
leave
push
outs
sub
dec
dec
rcl
inc
jg
test
and
jne
imul
adc
add
ret
xlat
mov
xlat
xor
pop
or
mov
and
or
shl
mov
shl
dec
test
cmps
inc
pop
mov
in
xor
cli
lds
mov
or
popf
push
inc
in
cmp
test
add
pop
pop
mov
or
mov
popf
add
dec
arpl
inc
dec
pop
push
pop
jge
mov
daa
mov
mov
cwde
add
mov
push
fstp
or
fnstenv
sub
aad
sbb
cmp
add
jb
sub
cmp
lods
pop
pop
pop
mov
adc
push
pop
rcr
jnp
push
rcl
jne
(bad)
(bad)
lods
mov
push
(bad)
jmp
ja
push
(bad)
lsl
jno
dec
mov
inc
pop
xchg
xrstor
mov
jne
pop
dec
inc
loopne
or
test
les
pop
in
dec
mov
loop
push
sub
shl
cdq
dec
ret
ret
nop
push
(bad)
fwait
lahf
out
cmp
push
pop
push
and
or
mov
jl
in
iret
pusha
pop
inc
scas
lds
ds
je
call
sub
gs
iret
xchg
nop
sub
bswap
push
push
iret
ds
pusha
icebp
bswap
xchg
inc
test
or
shl
cmp
fs
sar
push
xchg
pop
stos
ror
pusha
stos
ret
ror
sar
rcr
sub
pop
rol
inc
adc
rcr
sub
adc
fcomp
inc
sbb
add
push
adc
sub
jne
pusha
lock
and
jb
jns
sahf
dec
into
(bad)
out
sbb
push
pop
stos
pinsrw
add
cdq
push
sub
and
outs
cmp
aam
sbb
rol
mov
dec
int
mov
mov
mov
bound
or
and
inc
mov
adc
test
cmp
fcomp
scas
mov
cmc
test
mov
adc
jmp
mov
je
push
mov
pop
fstp
cwde
add
iret
jae
xor
jl
inc
inc
ins
sahf
cmp
fcomp
push
inc
add
pmaddwd
je
sahf
inc
mov
repnz
loop
test
pop
jns
jb
mov
imul
mov
pop
and
xchg
pop
xor
mov
je
outs
fisttp
aas
nop
(bad)
out
pop
cdq
push
jmp
test
jnp
rol
dec
jo
cmp
dec
push
cmp
inc
jno
jno
adc
jb
add
mov
or
fisub
and
or
mov
daa
or
psrlw
repz
je
push
add
xor
mov
or
push
jmp
dec
jne
rcr
push
addr16
adc
popf
addr16
inc
add
jnp
loopne
sub
iret
dec
adc
int
iret
dec
lahf
or
push
jo
mov
mov
xor
adc
and
dec
cmp
mov
sub
or
push
cmc
xchg
dec
push
bound
add
rol
pop
push
test
push
adc
das
dec
mov
cmps
popa
xor
push
push
mov
das
xchg
or
sbb
cmc
mov
jmp
add
or
ins
add
ja
out
jo
jne
jns
bound
jno
js
adc
pop
aam
sbb
jle
adc
cs
xor
jl
ds
add
loopne
gs
or
dec
xor
ss
add
les
imul
inc
nop
mov
fisub
push
lea
or
fcom
aaa
mov
push
push
xor
pop
movs
(bad)
jae
jb
mov
inc
cwde
out
arpl
adc
call
push
jae
xchg
pop
paddusw
add
sbb
ror
pop
cmps
ja
ja
popf
sub
pop
pusha
das
jle
ja
xchg
push
cld
outs
sub
out
or
mov
push
imul
push
dec
push
xchg
mov
icebp
daa
popf
jmp
sub
mov
fcmove
fild
add
push
xor
in
test
sbb
inc
in
inc
sub
das
xchg
sub
lahf
cs
add
dec
xlat
test
add
scas
adc
popa
rol
or
pop
shr
sub
add
mov
ins
jo
icebp
sbb
cmp
sbb
ins
je
jge
or
add
push
jae
outs
cmps
in
dec
outs
or
inc
jmp
and
pop
xor
cli
aas
or
addr16
nop
or
xchg
pushf
inc
adc
pop
scas
add
cmp
mov
les
(bad)
ins
daa
shl
cwde
xor
inc
inc
mov
push
scas
fwait
popf
mov
fsubr
push
inc
ja
push
out
idiv
jb
lods
fwait
mov
adc
mov
push
push
pavgb
daa
add
(bad)
outs
popa
addr16
outs
add
cs
mov
adc
add
adc
(bad)
fs
test
mov
xlat
adc
push
ins
add
jmp
mov
pop
mov
jnp
sbb
int
mov
add
clc
jb
sbb
push
or
pop
jae
push
mov
retf
scas
dec
xor
lds
test
push
adc
test
shl
stos
xchg
and
push
xor
ja
push
push
fnstsw
out
fsubr
add
inc
stos
arpl
shl
lods
iret
mov
lods
push
cmp
addr16
jge
adc
add
inc
(bad)
ror
add
in
pop
add
push
add
or
mov
xor
dec
cmps
clc
test
fdiv
fisttp
xchg
sub
sub
xchg
xor
call
movs
push
and
rcr
or
add
push
ss
pop
pop
push
jno
xchg
pop
and
addr16
adc
popa
fsub
js
add
push
pusha
xlat
jbe
cmp
jge
shr
add
(bad)
pop
and
js
mov
push
jl
lock
pop
push
push
fwait
mov
cmp
loopne
pop
movs
int
jb
add
pushf
xor
movs
movs
rcr
add
fsubr
mov
sar
sub
cs
retf
sbb
or
mov
xchg
fstp
add
dec
push
mov
mov
dec
fs
push
inc
xor
pushf
mov
(bad)
adc
sahf
pushf
out
cmp
pusha
xchg
daa
and
retf
dec
xchg
xchg
xchg
daa
daa
int3
sbb
xchg
test
leave
leave
leave
leave
cmp
in
in
mov
jl
adc
in
cld
aas
mov
fsubr
js
pop
loope
xchg
fdivrp
sbb
stos
mov
push
xchg
es
shr
mov
xchg
and
movs
out
es
push
pop
xor
dec
or
push
sub
loop
ja
mov
or
mov
daa
push
outs
sub
push
iret
xor
dec
add
xrstors
sub
jae
les
pop
pusha
rcl
sbb
dec
jecxz
inc
jg
rcl
out
dec
jg
(bad)
test
mov
pop
and
sbb
in
sub
dec
test
push
leave
inc
ins
aaa
mov
retf
outs
or
nop
outs
cdq
ja
call
lock
dec
xchg
add
and
inc
movs
adc
add
xor
or
dec
xchg
sbb
add
mov
cmp
fwait
gs
mov
arpl
mov
xor
mov
js
pop
dec
jae
les
fild
inc
ret
iret
dec
imul
push
jno
aad
str
adc
sbb
mov
xor
add
pop
xor
imul
or
aas
add
jo
add
fsubr
add
or
repz
lds
or
shr
xor
pop
xor
pop
xchg
adc
lock
gs
and
add
adc
popa
inc
xchg
inc
mov
popa
add
inc
inc
mov
add
jo
push
ret
sar
dec
dec
jno
adc
imul
sub
jge
dec
mov
push
adc
mov
or
and
loopne
and
adc
mov
xchg
inc
ror
mov
sbb
ins
or
sbb
push
jns
or
int3
movs
add
adc
and
push
stos
jb
popa
pop
xchg
movs
pusha
or
add
jg
sbb
adc
loopne
imul
xor
ror
xor
sbb
movs
push
sbb
sub
add
(bad)
xlat
stos
sub
push
fdivr
pop
mov
xchg
enter
inc
retf
push
imul
ja
or
pop
sbb
jmp
xchg
add
aad
test
or
sbb
sub
add
adc
fdivr
popa
loopne
inc
scas
inc
arpl
jns
add
sub
inc
outs
lods
or
add
popa
mov
lahf
int
pop
ret
jl
cmp
push
js
push
add
add
dec
dec
stc
add
xchg
pusha
mov
ror
push
add
inc
cmp
jecxz
sbb
push
push
push
add
pop
movs
leave
mov
shr
mov
or
xor
ja
mov
xchg
pop
push
ja
movs
mov
test
(bad)
jle
sub
pop
dec
movs
push
xchg
push
pusha
aam
cs
push
push
jecxz
adc
daa
lahf
jmp
add
xchg
loopne
push
mov
pop
cwde
cs
sahf
aaa
lahf
pop
in
data16
loope
inc
sub
sbb
lahf
das
dec
pop
add
xchg
adc
mov
inc
mov
mov
cmp
add
sar
or
mov
shr
push
jmp
add
ds
jge
shl
add
or
mov
loopne
add
stos
add
mov
popf
mov
push
push
out
mov
jl
xlat
lock
inc
mov
add
inc
xchg
mov
rol
dec
adc
add
retf
mov
add
add
lea
adc
rcr
lds
arpl
cmps
and
mov
add
fwait
stos
leave
pusha
xchg
scas
stos
add
dec
jnp
rcl
add
fcomip
push
and
add
mov
push
mov
out
pop
sbb
add
loope
add
out
or
push
iret
(bad)
fmul
les
lods
sub
jne
add
push
cmp
xchg
pop
pop
add
lods
or
and
and
add
scas
loopne
cmps
or
sub
push
ret
dec
addr16
add
sub
int3
pop
add
sti
push
(bad)
push
dec
sahf
test
les
mov
add
fdivr
pop
imul
sub
sbb
clc
push
(bad)
sbb
pop
push
pop
mov
mov
push
inc
add
mov
xor
test
sbb
stos
xor
test
sbb
sub
(bad)
jb
cs
cdq
push
into
(bad)
in
(bad)
or
sbb
jnp
jae
mov
cmp
jns
xlat
and
cmp
cmp
dec
inc
sahf
pushf
mov
retf
dec
xchg
push
dec
dec
dec
mov
call
pop
xchg
loopne
cmp
jns
int
gs
les
into
packssdw
ja
nop
popf
pop
retf
add
add
into
sbb
jno
adc
in
imul
and
cmp
dec
fimul
add
jno
xor
adc
or
jae
or
mov
xor
ror
test
push
add
fsub
and
fisttp
push
mov
push
add
adc
ins
rol
adc
pop
ja
add
int
ja
mov
jae
lds
rol
js
mov
or
adc
push
fwait
add
and
sub
jo
push
or
test
push
pop
clc
enter
xchg
pop
ins
iret
push
mov
rcr
ltr
sbb
push
inc
add
add
mov
shl
sbb
mov
shr
add
inc
xchg
xchg
add
inc
add
xchg
sub
mov
pop
mov
rcl
add
inc
add
inc
mov
push
shr
adc
add
rol
or
mov
xor
sar
mov
inc
adc
(bad)
sar
push
add
aas
sub
add
xchg
push
push
add
dec
rcl
mov
mov
dec
xor
movs
int3
js
add
out
stos
arpl
fdiv
lea
push
shr
sub
ret
sub
jno
or
xchg
and
lea
or
sub
ret
into
ficomp
shl
mov
xor
fld
ins
mov
(bad)
sbb
add
mov
fst
ret
push
add
(bad)
(bad)
clc
mov
mov
ret
call
fstp
fld
pop
pop
pop
ret
(bad)
neg
fild
or
mov
inc
in
push
xor
mov
dec
xor
push
push
mov
jmp
mov
mov
mov
inc
or
cld
push
mov
cmp
mov
pop
cmp
jb
jmp
jl
daa
adc
jbe
mov
(bad)
mov
lock
lea
push
push
lea
out
fcomi
sti
jg
into
loopne
dec
in
mov
mov
add
es
ficomp
mov
jbe
pop
rcl
push
sub
jl
jmp
cmp
mov
mov
pop
ret
push
mov
ins
retf
dec
jne
xchg
push
push
push
mov
mov
inc
enter
push
adc
mov
ins
push
std
aas
mov
movzx
cmp
ja
outs
out
jnp
std
(bad)
jmp
add
stos
add
mov
jo
xor
rol
ficomp
ss
(bad)
out
(bad)
mov
add
jnp
imul
sar
repz
sub
(bad)
push
or
jmp
out
clts
pop
bound
jmp
out
fwait
loop
sbb
ins
adc
sbb
cmp
xchg
push
lea
(bad)
or
push
jg
lea
adc
popf
mov
mov
mov
cmp
fistp
fbstp
adc
mov
pop
adc
xor
and
int
adc
mov
mov
push
rep
movs
mov
or
std
repz
test
push
sbb
cdq
xchg
out
or
pop
adc
add
pop
adc
sbb
mov
add
sub
call
mov
inc
data16
and
cmp
mov
jmp
cmp
mov
sti
add
nop
and
adc
mov
dec
pop
add
js
sete
test
je
xor
dec
push
fs
loopne
or
pushf
loopne
ins
or
clc
cli
imul
adc
fs
repz
add
int3
cmp
mov
enter
icebp
sub
cmp
and
int
jmp
xlat
out
hlt
fstp
inc
scas
out
pop
loopne
push
adc
jae
shl
jne
push
jns
and
push
and
les
inc
push
cwde
dec
xor
and
jns
mov
cs
adc
adc
dec
cmps
pusha
jno
adc
inc
xor
fwait
add
add
jbe
out
xchg
cmp
adc
hlt
fbstp
xor
add
add
retf
dec
xor
cli
mov
adc
int3
mov
jbe
mov
adc
aaa
pop
(bad)
xor
dec
sbb
add
iret
inc
xchg
dec
int
push
scas
loopne
fst
pop
test
aaa
mov
add
cwde
ret
add
mov
pop
pushf
ret
inc
mov
pop
add
push
bound
outs
add
push
ins
add
popa
add
cmp
jae
aaa
add
or
lds
sbb
je
push
je
imul
popf
adc
outs
imul
gs
or
clc
mov
add
inc
gs
popa
ins
or
sub
fisttp
mov
mov
aaa
mov
or
push
mov
das
mov
push
ficomp
xchg
cmp
push
mov
xor
nop
or
adc
add
in
jbe
or
and
cmp
or
iret
xor
cmp
push
(bad)
comiss
add
mov
push
xor
pop
adc
adc
jae
sbb
or
popa
arpl
push
xor
or
sbb
sbb
ds
pop
call
add
jecxz
sbb
adc
out
add
xor
cmc
inc
jns
pop
cld
adc
add
sar
xchg
mov
inc
bound
pop
jmp
ins
(bad)
mov
push
popa
bound
or
xor
cmp
mov
dec
sar
push
cmps
dec
ins
mov
push
push
or
add
clc
les
add
shl
lock
shl
fimul
sahf
clc
dec
jne
call
test
dec
cld
sub
test
sub
dec
dec
lea
or
cmp
mov
mov
(bad)
in
cmp
mov
popa
mov
inc
loop
mov
dec
mov
sub
(bad)
ja
jo
jo
rcl
add
adc
mov
pop
add
cmp
setle
ret
nop
xchg
or
inc
call
call
lods
retf
test
cld
xchg
jno
fst
cmp
js
jge
push
inc
xor
sbb
sar
fsubr
mov
cmp
jg
push
mov
or
es
sbb
push
and
ror
mov
push
mov
adc
bound
js
(bad)
or
(bad)
fcmovne
mov
mov
or
cmp
pop
jne
mov
inc
cmp
imul
clc
add
jle
data16
idiv
dec
or
imul
call
xchg
shl
inc
(bad)
jle
push
add
jge
add
jne
cmps
or
lods
shr
xor
pop
test
adc
cmps
jmp
test
dec
jno
pushw
cdq
fsub
dec
mov
in
add
hlt
js
jge
inc
out
or
or
add
add
and
pushf
ins
mov
shl
out
mov
mov
dec
adc
xor
push
add
cmp
push
ins
jne
fisub
rcr
mov
mov
fld
daa
jle
pop
je
jb
fild
pop
lock
or
test
pop
stos
jne
pop
loopne
aaa
les
jmp
adc
dec
je
lea
into
lock
adc
and
sbb
add
fs
sbb
lea
fsubr
mov
pop
and
and
ins
jl
mov
cmp
in
add
sbb
mov
pop
lea
and
jle
addr16
lock
sbb
xor
(bad)
ja
or
xor
je
jmp
adc
xchg
nop
push
fadd
sub
ds
dec
mov
jg
pop
inc
sbb
mov
jne
cmp
xchg
in
sahf
scas
push
cmp
mov
(bad)
js
or
dec
cli
pop
mov
jns
jnp
daa
mov
or
ret
pop
fs
pop
mov
ins
cmc
aaa
(bad)
jns
daa
je
jne
mov
jmp
aaa
mov
or
dec
push
(bad)
mov
cld
mov
sbb
(bad)
cli
lock
mul
shl
push
mov
(bad)
sub
(bad)
jbe
les
xchg
into
into
fs
sbb
call
xchg
mov
stc
mov
or
or
lea
fwait
fs
inc
ds
or
cmp
out
mov
div
cmp
mov
(bad)
pop
ret
add
ret
out
(bad)
ret
or
sub
fwait
mov
cmp
jne
push
cmp
jne
adc
out
cmp
mov
or
idiv
test
ret
add
jmp
adc
jle
rcl
push
and
add
pcmpeqb
idiv
mov
inc
clc
mov
out
jnp
add
mov
mov
sbb
push
xlat
jns
dec
jmp
inc
fadd
push
adc
add
push
jl
inc
add
test
stos
or
call
dec
es
adc
mov
and
cmp
jne
or
xor
jb
or
ret
add
in
in
pop
pushf
add
and
fimul
inc
cmp
je
mov
imul
adc
call
fsub
push
lea
js
push
jnp
movs
ficomp
lods
push
add
mov
add
or
or
jne
jb
mov
test
xchg
fldenv
or
shr
cmp
mov
xor
add
add
push
xor
and
push
rol
jmp
sub
cmp
pop
jb
outs
lock
lds
mov
jae
or
add
push
and
jae
or
fwait
ss
enter
dec
lahf
mov
int3
int3
ret
sbb
push
adc
popa
mov
mov
sub
push
fsub
inc
xor
sub
pop
adc
push
mov
icebp
mov
clc
cmp
es
nop
or
xchg
ficomp
add
sub
enter
and
scas
daa
les
les
imul
scas
nop
rol
add
nop
or
dec
outs
or
ds
aam
js
clc
mov
sub
or
aas
sub
call
movs
ret
loopne
or
or
adc
ret
cwde
and
jle
cmc
in
arpl
out
sbb
daa
mov
out
pushf
or
ror
dec
or
jp
lock
loopne
mov
mov
sbb
lea
lea
sub
ds
(bad)
dec
or
adc
jl
rol
fnstsw
(bad)
xor
sti
push
test
jb
and
or
mov
or
mov
mov
or
mov
jmp
mov
shr
sbb
cwde
or
test
lods
xchg
inc
clc
push
fcomp
cmp
inc
mov
mov
push
dec
push
or
jl
mov
add
add
inc
or
dec
scas
sahf
xchg
cmp
or
and
inc
mov
or
loope
pop
sbb
je
pusha
inc
mov
ret
xchg
jp
jp
push
scas
push
inc
test
jle
ror
adc
mov
movs
mov
fisubr
push
sbb
pusha
enter
movs
in
add
sub
cmps
dec
or
mov
out
cmp
or
je
lea
mov
mov
fdiv
leave
mov
inc
push
mov
or
div
sbb
sbb
xor
je
mov
pop
push
stos
push
outs
imul
mov
and
add
(bad)
jle
adc
jo
pop
pop
out
ret
cmp
add
retf
push
push
test
imul
test
and
out
retf
mov
xchg
pop
adc
adc
mov
mov
dec
iret
mov
inc
ja
cmp
push
adc
(bad)
in
inc
mov
mov
mov
jb
call
mov
jg
aas
int3
js
repnz
pop
jnp
test
je
add
jnp
je
(bad)
jo
sbb
mov
call
push
push
test
and
(bad)
aas
call
xchg
mov
inc
or
xor
jge
jae
(bad)
pop
cmp
push
in
xlat
sbb
call
xchg
scas
mov
cwde
mov
pushfw
sub
call
lahf
add
in
cli
add
sti
xor
aad
mov
sub
sbb
into
fnsave
imul
int3
loopne
jmp
inc
popf
aaa
jecxz
mov
mov
adc
sub
or
je
and
and
xchg
jp
add
and
js
jnp
mov
adc
add
or
out
outs
add
sub
push
test
mov
sbb
add
or
jae
es
dec
mov
push
add
aad
push
shl
popa
mov
xor
out
cmps
lods
or
sub
fidivr
jle
lock
rcr
mov
fdiv
in
mov
shr
jp
mov
pop
add
add
mov
gs
mul
push
add
addr16
movs
and
pop
daa
push
(bad)
or
into
ret
daa
cs
lea
fucomi
loope
xor
in
dec
dec
fisubr
pop
rol
add
mov
add
lods
adc
add
jg
pop
and
call
xor
xor
mov
cmp
inc
(bad)
pusha
fs
or
add
sub
add
push
aas
add
add
cmp
ins
ror
and
lods
xor
jecxz
loopne
movs
ja
xor
lock
xor
ror
add
adc
pop
pop
xchg
xchg
mov
cmp
xchg
push
fwait
lods
je
inc
daa
mov
and
clc
frstor
jmp
or
fmul
add
sub
das
rcl
or
je
sub
jne
lds
add
rcl
pusha
pop
in
mov
adc
movs
bound
and
add
or
adc
push
fucom
and
fcomp
adc
jnp
pop
(bad)
push
push
sub
(bad)
pop
xor
mov
ins
adc
pop
loope
and
out
jmp
ins
adc
mov
adc
es
ret
ret
std
inc
mov
xor
xchg
shl
ins
popa
js
mov
jg
psubd
or
lea
out
sub
neg
sbb
loop
or
pop
sub
je
daa
stc
pop
mov
lods
shr
xor
dec
das
bound
enter
jg
xor
and
or
xchg
add
mov
dec
cmp
loopne
push
and
mov
cmp
cmp
inc
cmp
daa
push
push
cmp
enter
dec
xchg
shl
adc
aam
fisttp
and
sub
sub
cwde
adc
ret
sti
daa
mov
cmp
xor
(bad)
cmps
sub
sub
xor
add
js
mov
aas
cmp
add
das
and
pop
pop
jbe
pop
arpl
inc
mov
sub
cdq
jge
push
sbb
adc
out
adc
shl
pop
jecxz
push
sub
gs
push
sub
sbb
jb
sub
or
jo
out
pushf
xchg
rol
add
test
sti
xchg
nop
push
cmp
outs
imul
inc
cmp
jno
and
push
add
pop
or
adc
scas
cmps
mov
adc
adc
xor
push
mov
mov
or
pusha
xchg
pop
pop
push
mov
js
jl
jle
repz
or
pop
cmp
mov
jg
dec
pop
pop
icebp
mov
inc
out
(bad)
sub
(bad)
leave
mov
pop
cdq
cdq
fadd
cmp
inc
jle
je
add
cli
sbb
add
dec
pop
mov
sar
or
adc
mov
call
xchg
adc
ss
cmp
xlat
test
adc
test
jecxz
inc
imul
pop
pmaddwd
inc
and
xor
lods
mov
sbb
ret
(bad)
test
push
pop
dec
repz
dec
stos
hlt
hlt
push
in
push
hlt
mov
(bad)
pusha
mov
shl
mov
pop
clc
fwait
loopne
sub
stos
fnstsw
add
call
ror
add
sub
test
imul
jl
call
jmp
push
dec
mov
mov
cmp
jbe
mov
inc
jbe
xor
or
enter
inc
xor
das
mov
add
push
mov
jp
ror
out
pop
inc
lock
scas
add
outs
clc
sbb
sbb
or
(bad)
push
push
mov
daa
mov
jl
add
retf
push
and
clc
and
in
dec
inc
or
dec
icebp
cmp
jne
or
pop
dec
jne
adc
adc
retf
and
sub
rol
loopne
lods
push
aas
arpl
inc
jbe
out
jbe
pusha
add
add
mov
in
sub
rcl
pop
xor
cdq
rol
sub
or
pop
daa
sbb
adc
je
lods
jmp
add
add
push
add
jmp
ins
cmc
adc
push
(bad)
nop
add
loope
pop
addr16
je
aas
jl
imul
nop
lock
ins
sbb
js
or
ja
add
hlt
pushf
pushf
aad
inc
(bad)
ins
scas
mov
adc
pushf
xor
pop
loop
and
xlat
xchg
mov
or
shr
movs
cmp
push
call
fwait
dec
je
inc
dec
jne
jae
push
aas
das
call
push
push
lahf
test
adc
inc
add
jmp
inc
inc
inc
cmps
jg
or
jl
inc
xor
daa
aad
icebp
push
cs
es
cmp
jne
lea
mov
cmp
xor
and
int3
cmp
addr16
and
rcr
inc
sub
imul
out
nop
inc
pop
inc
popa
cli
das
sbb
cwde
idiv
adc
pop
add
popf
mov
dec
mov
std
push
fsub
shl
or
cmp
mov
xor
ds
pop
xchg
pop
add
es
pop
cmp
and
not
inc
mov
mov
jmp
dec
ss
push
mov
imul
fcom
cmp
jne
mov
int
ret
jmp
jbe
add
push
cmp
imul
popa
js
scas
mov
sbb
jnp
push
ror
les
popa
pavgw
jle
mov
sub
aas
daa
add
pop
sahf
ja
call
rcr
push
adc
or
shr
xchg
dec
(bad)
cmp
or
fstp
xor
inc
sbb
or
adc
dec
push
pop
fdiv
adc
xchg
pop
imul
jnp
fdivr
adc
mov
test
cmp
ror
cmp
popa
add
dec
ins
sbb
jg
out
test
ds
ins
xor
add
je
jbe
add
aas
jge
jnp
sub
push
cs
mov
je
jne
xchg
jns
xor
leave
xchg
and
mov
push
add
add
or
xor
rcl
push
jg
mov
sub
shl
out
pop
mov
aas
mov
push
jmp
(bad)
push
push
ja
or
mov
dec
sub
push
repz
jle
hlt
cmp
ins
fisttp
loopne
cmp
neg
cmp
mov
cmp
pop
jmp
out
dec
jmp
mov
imul
std
add
add
into
pop
cmp
push
rcl
sti
sub
jmp
aad
jmp
in
or
or
adc
mov
or
mov
mov
ins
pusha
xor
add
adc
sbb
sbb
aaa
xchg
dec
icebp
lock
mov
(bad)
out
test
jg
je
mov
or
sar
or
or
je
jbe
mov
popa
pop
adc
inc
adc
push
je
or
je
das
test
nop
add
lods
sbb
push
mov
in
sub
int
mov
xor
stc
pusha
dec
lock
pop
jne
adc
add
mov
xchg
adc
ja
inc
mov
mov
data16
popa
in
cmp
jne
pop
ins
adc
adc
mov
adc
cs
imul
add
(bad)
in
in
arpl
and
les
push
inc
aaa
ja
popa
add
lock
mov
(bad)
sub
dec
test
div
popf
or
movs
imul
jne
xor
pop
repz
lahf
ffreep
jae
shr
jae
sahf
sub
cmp
cwde
sbb
sub
mov
icebp
stos
dec
xor
(bad)
mov
mov
add
jmp
cmp
jne
cmps
cmp
add
sbb
cld
pop
add
jp
sub
nop
lods
daa
popf
sub
sub
retf
or
retf
xor
push
fimul
mov
add
inc
jmp
es
aam
dec
test
outs
jno
cmp
test
icebp
shl
pop
push
add
fiadd
int
test
jge
jo
pop
mov
xchg
pop
(bad)
add
add
sub
aaa
add
or
bound
xor
ret
push
push
pusha
cmc
fwait
mov
mov
mov
arpl
es
jmp
cmc
les
add
lods
add
mov
sbb
sbb
jmp
lds
cmp
ins
aam
add
clc
add
sub
cs
cmp
xor
inc
aaa
add
or
inc
sbb
inc
dec
jge
or
je
sub
pop
inc
push
sbb
sbb
or
inc
push
xlat
clc
dec
and
pop
pop
out
shl
xchg
rcl
or
add
fst
inc
inc
and
or
and
push
mov
ror
gs
mov
stc
nop
mov
mul
mov
sbb
mov
test
arpl
and
xchg
test
(bad)
lock
das
add
or
scas
mov
adc
inc
mov
jnp
or
dec
(bad)
dec
and
fstp
jge
movs
(bad)
and
fldcw
inc
pusha
inc
jle
mov
sbb
mov
adc
js
movs
xor
pop
jge
jp
imul
dec
outs
xor
jo
sub
cmp
sub
fimul
out
pop
test
aam
pop
push
pop
jg
and
pop
sub
je
add
sub
int3
sbb
add
sub
xchg
inc
add
outs
loopne
cwde
jge
mov
mov
or
xor
add
push
xor
fsub
push
sbb
popa
xor
push
and
nop
jp
cmp
or
cmp
dec
mov
lahf
or
pop
lods
mov
sbb
and
mov
dec
out
or
add
xor
lods
loop
xchg
mov
sub
adc
nop
jbe
adc
mov
pop
aas
daa
mov
lahf
jmp
sbb
adc
test
daa
out
dec
adc
sbb
aam
cli
pop
push
mov
mov
fiadd
push
js
int3
xor
push
and
inc
or
mov
ret
(bad)
and
lock
lods
jnp
lock
sar
bound
mov
ss
(bad)
xor
dec
jnp
cmp
xor
push
or
sub
sbb
xchg
jmp
aam
pushf
xchg
push
mov
xor
pusha
rcr
push
pushf
xchg
push
ret
push
push
or
test
mov
or
jmp
or
sbb
push
push
enter
(bad)
std
xor
and
xlat
aas
retf
pop
scas
pop
cmp
mov
mov
dec
jb
test
pop
leave
or
in
aaa
dec
or
sub
mov
adc
sbb
hlt
push
adc
aaa
gs
inc
test
aaa
pop
adc
push
add
sbb
push
sub
fcom
aaa
add
retf
test
xchg
add
push
jno
sbb
ficomp
cmp
sbb
cmp
in
dec
inc
sbb
loopne
xor
xchg
cdq
int3
sbb
ret
(bad)
nop
push
imul
add
popa
xlat
lods
add
(bad)
mov
call
clc
mov
mov
cld
and
retf
les
jo
mov
mov
sti
clc
scas
or
vrcpps
test
ror
mov
aad
sbb
cs
adc
loopne
adc
xchg
adc
mov
lods
cmp
mov
loope
scas
loopne
fnstcw
cmp
je
shl
cld
cmp
movs
mov
add
xlat
les
and
inc
dec
cli
adc
mov
and
sub
jae
jge
cld
or
sub
inc
add
xchg
push
ror
add
gs
adc
jge
mov
clc
ds
jle
mul
add
mov
cmps
pop
add
enter
in
in
add
mov
in
nop
pusha
hlt
cmp
jl
and
add
test
mov
sar
jne
fucomip
lsl
adc
jo
punpckldq
imul
les
cld
test
les
cmp
or
scas
cmp
inc
adc
push
adc
test
xchg
in
bound
inc
mov
or
sub
out
inc
out
or
ds
out
arpl
enter
adc
inc
imul
mov
nop
(bad)
mov
or
jo
add
lea
add
jp
retf
cmp
push
inc
push
sar
sbb
cmp
adc
ror
leave
in
push
push
xor
popa
inc
inc
push
sbb
clc
pop
mov
xor
mov
dec
cs
(bad)
(bad)
mov
adc
jo
in
add
cmps
test
push
lods
fild
or
jo
push
pop
mov
add
mov
cmp
dec
mov
test
rol
fisttp
dec
xchg
test
adc
out
in
push
and
pop
adc
clc
add
cmp
rcl
hlt
jecxz
dec
push
shr
je
ins
sub
jmp
ins
mov
jge
and
test
arpl
push
xchg
jge
sub
adc
push
dec
push
or
lock
sbb
xor
inc
sbb
push
in
cld
sub
sbb
jle
mov
nop
dec
loopne
jge
test
adc
aas
push
inc
push
js
push
push
add
ret
push
mov
imul
idiv
mov
in
add
lods
ror
cmp
pushf
push
or
out
shr
inc
dec
adc
ins
call
bound
mov
inc
into
push
shl
jle
dec
jne
int
lods
mov
sbb
rol
inc
and
pop
outs
xor
jle
adc
xchg
jg
inc
nop
shl
adc
call
inc
dec
loopne
test
push
mov
das
and
sub
lock
jl
(bad)
idiv
out
aam
push
add
ret
mov
mov
mov
mov
add
pop
mov
jg
int3
test
call
setg
outs
mov
ror
fwait
add
add
push
dec
sbb
sbb
xor
add
and
data16
jae
popa
or
shl
inc
dec
pop
mov
mov
mov
xor
or
xor
test
xchg
cwde
jmp
jmp
out
mov
add
mov
inc
(bad)
mul
js
nop
dec
pusha
je
mov
je
mov
xor
add
inc
xchg
sbb
shr
inc
sub
es
inc
data16
call
jne
push
adc
loope
push
rcl
pusha
aam
xor
movs
add
adc
pop
xor
inc
or
pop
ins
test
and
or
cmp
mov
push
push
rol
add
shl
adc
push
(bad)
icebp
pop
adc
mov
adc
stos
dec
push
pop
cmps
adc
sub
cld
pop
ficom
in
adc
dec
push
mov
out
add
es
(bad)
sbb
inc
outs
mov
add
stos
lods
outs
sbb
outs
push
jno
add
adc
and
adc
fiadd
pop
js
(bad)
js
(bad)
dec
jecxz
enter
mov
out
mov
mov
or
sub
(bad)
lock
fs
dec
fsub
pop
xchg
or
or
cmps
mov
cli
pop
add
stc
cmp
push
retf
popf
mov
lea
dec
or
leave
add
pop
xor
aad
adc
test
ret
outs
cdq
push
push
jmp
popf
mov
inc
rol
inc
dec
bound
leave
inc
jo
xchg
or
out
aaa
mov
add
add
or
(bad)
mov
push
inc
outs
ins
jo
jb
jae
outs
cmp
jns
je
ins
cs
data16
cs
or
imul
add
mov
sbb
outs
gs
jae
inc
gs
jne
je
shl
sbb
call
into
inc
pop
or
ret
sbb
pushf
leave
sbb
adc
ins
push
ja
sbb
xor
push
imul
loopne
sbb
into
mov
add
add
add
push
or
or
stc
xor
jbe
jnp
dec
pushf
jge
add
mov
mov
mov
and
cmp
je
jg
clc
fsubr
add
pop
jle
add
dec
sar
pop
rol
sbb
retf
sbb
xchg
pop
fidiv
xlat
mov
push
gs
data16
cwde
add
in
(bad)
fmulp
adc
cld
ins
ja
or
arpl
xor
pusha
mov
fcom
cmp
popa
(bad)
and
pop
mov
dec
mov
pushf
adc
mov
or
cmps
dec
mov
ds
or
ret
sar
imul
loope
lds
pop
lds
out
enter
xor
cmp
aam
and
mov
repnz
and
jle
jno
push
pop
mov
mov
sub
dec
pop
in
aam
sbb
fisubr
pushf
inc
outs
sbb
push
dec
adc
or
std
cmovo
sub
jbe
fist
sar
jb
popa
jns
popa
outs
popa
addr16
test
jo
add
lock
or
inc
fwait
outs
pop
shl
rcl
add
dec
outs
fs
pusha
pop
push
outs
and
clc
mov
ret
jne
sar
int
or
int
shl
out
and
lods
ins
aaa
cld
pop
or
or
imul
xchg
or
retf
scas
add
or
mov
and
stos
ret
jg
cmp
gs
push
xor
mov
ja
push
jge
dec
mov
xor
jne
sbb
add
and
sub
push
jg
push
and
inc
rcl
gs
add
add
mov
mov
mov
cs
jbe
test
mov
add
mov
ins
add
push
lahf
lods
jle
rcr
mov
(bad)
mov
pop
jno
xor
shl
pop
mov
xor
sub
addr16
push
mov
mov
ins
cmp
mov
sbb
xchg
pop
int
or
pop
add
fwait
in
push
push
add
inc
push
jo
repnz
int
not
mov
loopne
ins
mov
pop
sar
bswap
dec
into
lahf
outs
adc
shl
mov
mov
or
mov
add
or
mov
push
pop
mov
std
mov
cmps
pop
int
pusha
rcr
mov
mov
add
aam
jns
sbb
sub
jo
or
stos
xor
mov
add
jae
dec
inc
iret
pushf
pop
or
and
mov
into
add
inc
xlat
mov
ds
inc
sbb
das
pop
cmp
xor
push
arpl
mov
or
dec
fs
js
gs
xor
push
inc
add
add
jl
inc
mov
add
cwde
or
or
pushf
mov
add
dec
jae
jge
data16
fcomp
fld
jae
packsswb
cs
jb
add
mov
add
ins
xlat
xlat
pop
add
cmp
adc
cld
or
cmp
jg
into
in
ss
pop
dec
rsqrtps
pop
sub
push
push
jg
add
lds
cli
jbe
xor
or
pop
xor
fs
add
outs
jo
mov
sub
pop
add
or
sub
xchg
pop
popa
call
test
fs
fwait
adc
data16
jns
pop
cmp
inc
push
rol
dec
add
pop
stos
popa
shr
bswap
jg
mov
mov
je
ds
mov
enter
jb
pop
xor
xor
jo
outs
push
out
fwait
pushf
pop
jl
sub
sub
call
ss
dec
outs
inc
imul
outs
xor
and
outs
sub
cmp
(bad)
(bad)
inc
or
push
inc
jns
dec
movs
jmp
adc
sub
iret
xor
inc
dec
xchg
outs
or
inc
inc
jo
pop
in
das
repnz
adc
xchg
je
pushf
or
in
sbb
fild
xor
xor
ret
push
push
add
pop
test
scas
or
and
sbb
inc
pop
mov
outs
push
push
push
and
cmp
pop
cmp
add
pop
cs
add
mov
outs
jg
sub
dec
adc
jbe
cmp
cmp
pop
xor
xor
mov
add
and
xor
outs
and
xor
jb
adc
ret
push
fs
mov
fisttp
pop
push
outs
or
inc
lods
push
add
add
add
jnp
lock
mov
mov
call
dec
push
add
outs
push
pop
js
(bad)
ss
jb
push
mov
jb
jb
mov
jb
movs
cmps
cmps
test
jb
jb
stos
stos
lods
jb
jb
lods
scas
scas
nop
jb
jb
xchg
xchg
xchg
xchg
jb
jb
xchg
xchg
xchg
cwde
jb
jb
cdq
call
popf
sahf
lahf
xor
jb
add
test
jb
mov
jb
lea
jb
jno
jae
jb
jb
jne
ja
jb
jb
jns
jnp
jb
jb
jge
jg
(bad)
xor
bt
push
cmps
test
inc
and
daa
scas
shl
or
movq
adc
and
gs
jo
push
inc
dec
imul
mov
es
icebp
jl
out
call
icebp
cwde
sub
mov
(bad)
pop
inc
jge
add
in
push
push
imul
push
inc
movs
ret
pusha
dec
daa
cli
test
data16
in
add
xchg
or
scas
int
popf
cmps
inc
data16
push
add
stos
loope
lock
retf
std
jge
aaa
(bad)
retf
dec
mov
fcom
imul
test
fsub
xchg
not
aaa
sub
add
add
icebp
xor
cmp
mov
arpl
or
or
gs
mov
or
and
sbb
inc
iret
mov
or
loopne
dec
je
mov
stos
add
sbb
add
push
cmp
mov
retf
xchg
or
or
and
mov
out
inc
add
mov
(bad)
or
mov
aaa
add
cmp
push
or
add
adc
xchg
cmp
ja
(bad)
push
mov
dec
add
push
push
mov
xchg
shl
retf
es
jmp
or
or
mov
adc
mov
jmp
neg
bound
sbb
xor
retf
cmps
or
imul
add
pop
pusha
pop
jl
sbb
push
test
dec
cs
gs
inc
outs
arpl
push
cwde
loopne
jg
add
cli
xchg
jecxz
xor
retf
xchg
pop
imul
clc
jbe
xor
jecxz
popw
sbb
sub
and
cmp
add
xor
cmp
mov
lods
cmp
inc
push
fdivr
cmp
mov
fs
xor
or
inc
mov
inc
or
sbb
adc
cld
and
sub
jae
jbe
mov
call
jl
nop
enter
add
adc
aam
aas
mov
das
mov
adc
iret
in
and
sbb
and
in
adc
adc
dec
das
add
push
cmp
out
(bad)
jns
dec
fdiv
jle
pusha
mov
sub
arpl
sahf
fcomp
xchg
cmps
cs
or
xor
addr16
inc
push
(bad)
in
pop
ror
cmp
push
popf
(bad)
pop
push
xor
bound
xlat
pop
sub
cmp
push
jo
inc
jo
mov
pop
jl
adc
xor
call
mov
pop
lock
fs
fistp
xor
xor
adc
cmp
pop
xor
pusha
add
into
cmp
sub
push
outs
and
push
imul
outs
add
dec
popa
fwait
adc
xor
push
(bad)
stc
loopne
add
xlat
test
xlat
lahf
out
sbb
add
dec
popa
js
mov
jne
push
or
cmp
ins
popa
pop
ret
ss
rol
push
push
jo
je
sbb
mov
xchg
gs
xor
xor
add
pusha
mov
(bad)
ja
dec
pop
test
jbe
fneni(8087
adc
mov
push
inc
cli
shr
sbb
gs
or
or
pop
xchg
out
xchg
adc
add
cmp
sbb
jg
add
mov
fistp
fbstp
mov
cld
mov
push
mov
pop
add
push
inc
pop
imul
cmp
mov
push
mov
add
iret
add
mov
xchg
inc
stos
add
jo
dec
cmp
sbb
lahf
push
inc
jne
retw
add
fmul
int
test
sbb
xchg
xchg
mov
jle
push
fwait
jb
movs
or
call
cwde
or
lds
dec
or
rcr
pop
cmp
cmp
das
add
out
sub
scas
nop
mov
push
inc
push
and
cmp
xor
outs
or
add
inc
push
outs
pushf
out
and
inc
sahf
jnp
mov
inc
xchg
push
mov
or
and
(bad)
xor
sub
pop
cmp
scas
test
xor
and
jle
jo
push
push
xor
inc
mov
mov
lea
sbb
sub
loopne
pop
xchg
inc
lods
jle
dec
pop
pop
pop
inc
adc
sbb
mov
lea
inc
mov
lock
sar
sysenter
setno
push
fdiv
addr16
mov
rcl
inc
in
in
mov
mov
orps
jbe
ins
push
mov
inc
or
repz
cmp
lods
addps
mov
or
pop
or
in
sbb
pop
xor
pop
adc
out
adc
lods
sti
adc
add
iret
repz
sahf
iret
test
(bad)
iret
repz
fucom
in
cmc
iret
repz
std
or
push
sbb
sub
repz
aas
inc
dec
push
repz
repz
addr16
mov
mov
fadd
retf
fsubr
dec
pop
mov
xchg
fs
fdivr
push
pusha
je
mov
add
inc
daa
daa
inc
mov
sbb
jg
pop
fs
rol
int3
imul
data16
dec
jae
outs
ins
gs
pop
jmp
shl
add
ret
loop
inc
sub
fcmovne
int3
mov
mov
inc
pop
test
(bad)
repnz
in
inc
jne
push
inc
fwait
sub
adc
inc
pop
jno
cmp
jns
ficomp
cld
mov
push
dec
inc
pop
(bad)
psubd
sahf
mov
dec
aad
dec
pop
add
mov
or
in
mov
syscall
add
out
out
cmp
movmskps
js
sub
adc
jnp
push
cmp
xor
arpl
or
fdivr
gs
add
ins
add
test
out
sub
loopne
add
rcl
adc
ja
aaa
add
loope
ss
arpl
pop
adc
(bad)
out
dec
in
lods
(bad)
and
mov
test
and
lahf
add
bound
movs
add
inc
(bad)
or
loopne
or
cmp
push
xchg
cs
push
nop
push
(bad)
imul
shr
pushf
test
test
mov
adc
sahf
or
and
and
test
mov
mov
push
aad
or
sti
sbb
dec
sub
arpl
outs
adc
fst
stos
dec
pop
xor
leave
jb
adc
add
enter
fild
es
dec
add
inc
rol
cld
mov
ror
punpckhwd
push
inc
add
and
shl
push
je
pusha
rol
imul
fsubr
mov
aas
lahf
push
xchg
pusha
push
inc
ja
adc
xchg
adc
aas
xchg
push
xor
mov
sbb
xor
sbb
add
lahf
and
jmp
add
inc
dec
or
mov
in
fimul
cmp
inc
aad
jne
ror
aad
aas
xor
inc
aad
js
retf
mov
jo
or
adc
mov
ret
sti
add
sub
mov
lea
fild
sbb
mov
cmp
(bad)
das
add
mov
pop
and
adc
add
xor
add
inc
adc
ins
ins
mov
xor
mov
ss
or
and
sub
add
or
add
push
inc
aam
push
and
test
xchg
xchg
aad
xchg
and
and
pop
dec
push
mov
push
xlat
movs
scas
sub
aaa
add
pop
or
std
(bad)
js
and
rcr
mov
add
push
pop
(bad)
cmp
das
add
test
sub
fs
sahf
out
cwde
mov
imul
dec
dec
push
add
clc
jecxz
shl
adc
inc
mov
push
popa
jcxz
nop
jnp
sub
push
outs
push
add
pop
fld
xor
js
sub
ins
cmp
inc
add
cmp
push
add
scas
inc
jae
or
fld
dec
loopne
xlat
loopne
mov
ucomiss
mov
pop
dec
test
push
sbb
scas
les
scas
es
mov
cmp
loopne
push
jle
cmp
adc
dec
scas
fadd
ror
add
outs
or
dec
xor
pop
add
xor
mov
int
jnp
or
push
cmp
sub
mov
lds
cmp
pusha
aad
pop
out
sub
ror
pop
dec
xchg
sbb
inc
adc
in
loope
mov
dec
in
or
sbb
and
add
ss
pop
sbb
fdivr
add
cmps
pop
push
pop
das
mov
(bad)
xlat
mov
int
inc
push
pop
enter
xlat
(bad)
push
les
xlat
js
pop
add
out
sahf
cwde
mov
pop
jmp
and
(bad)
or
jmp
cmp
adc
mov
adc
adc
movups
push
push
inc
aaa
loopne
jb
mov
inc
xor
test
test
and
sub
xor
rol
adc
xchg
shl
xchg
push
push
sub
xor
lods
rcl
sbb
test
sub
rcl
xchg
rol
iret
dec
gs
sbb
sbb
dec
enter
push
pop
dec
aaa
rcr
lock
push
push
dec
dec
jl
js
loop
add
mov
adc
je
arpl
(bad)
call
jle
pop
fwait
lock
cmp
sbb
pop
or
jo
xor
call
pop
pop
add
or
adc
loopne
pusha
mov
add
jnp
ret
loope
pop
mov
in
pop
add
inc
nop
outs
add
pop
and
test
mov
ja
adc
push
nop
pushf
jo
out
ror
inc
or
adc
cmp
iret
mov
sub
xchg
stc
(bad)
push
pextrw
stos
js
out
mov
mov
cmp
shl
mov
dec
clc
ss
imul
rcl
(bad)
fnstenv
loopne
(bad)
push
add
add
add
or
adc
add
add
add
vmovups
rcr
sub
mov
and
sbb
xchg
cwde
push
dec
jnp
loopne
sub
push
pop
add
mov
xor
jne
fucomi
sbb
das
dec
push
idiv
sbb
adc
mov
add
push
inc
cmps
sbb
mov
fs
aam
push
inc
mul
js
cmps
sbb
jo
cmp
stos
mov
mov
mov
and
adc
adc
adc
(bad)
out
pop
ins
push
inc
push
mov
mov
adc
pop
mov
add
loopne
push
fsubr
(bad)
fsub
jns
out
xchg
fadd
and
jo
fsub
out
push
jbe
cs
jg
js
mov
(bad)
cmc
prefetch
pop
(bad)
mov
push
and
es
push
fcomp
lock
fadd
inc
dec
dec
xlat
test
xlat
lods
fwait
push
or
sbb
push
sub
adc
pop
inc
push
push
inc
lds
xchg
nop
sub
dec
xor
inc
jle
xlat
out
lods
mov
sub
ins
adc
loopne
add
push
sbb
xlat
in
sub
loopne
call
lea
pop
pop
test
cmps
mov
pop
xor
fsub
rcr
popw
pop
das
xchg
push
dec
jl
ja
movs
call
cmp
shr
js
dec
cmps
enter
mov
int3
push
dec
sbb
shl
or
mov
inc
fmul
push
dec
or
(bad)
cmovg
cmp
ror
push
cdq
pop
xor
lods
dec
sub
js
mov
mov
push
ins
xor
xchg
inc
or
sub
xchg
test
jg
dec
test
lds
jns
dec
in
es
aad
sub
dec
inc
nop
pusha
sub
mov
add
push
push
add
mov
call
fimul
add
adc
sar
mov
mov
(bad)
mov
mov
mov
mov
call
or
jle
test
mov
dec
xor
sbb
sar
repnz
jg
mov
dec
call
add
rcr
pop
ret
femms
add
aaa
xor
push
jnp
jo
fwait
sub
cmp
jle
cmp
iret
push
fs
mov
add
sar
shr
mov
push
mov
fsub
frstor
pop
clc
(bad)
stos
cmp
add
jne
jge
ss
rcr
pop
pop
ret
mov
mov
cmp
(bad)
fcmovnu
add
mov
push
jg
jg
(bad)
inc
cmp
repnz
clc
ins
mov
push
lea
and
test
cld
mov
mov
push
jmp
adc
inc
pusha
cmp
dec
clc
mov
mov
mov
std
int
js
into
mov
inc
call
or
inc
jo
and
mov
in
push
mov
mov
aam
push
mov
in
mov
outs
sbb
fs
mov
imul
xlat
push
jl
dec
outs
ins
jl
fstp
sub
pusha
mov
mov
rol
mov
mov
sti
add
enter
mov
push
icebp
add
mov
push
add
add
fcom
ss
js
push
xor
push
in
xor
sub
add
shl
mov
mov
pop
push
xor
jo
or
lea
(bad)
(bad)
pop
push
add
mov
inc
gs
mov
cli
mov
std
sbb
adc
es
pusha
xor
int3
sbb
adc
and
push
add
jne
sub
push
add
adc
inc
add
nop
aas
sub
inc
and
add
pop
(bad)
loop
xchg
cmp
lock
mov
pusha
int3
mov
sbb
xchg
sbb
cmp
dec
xchg
pusha
pop
cwde
stos
lock
and
hlt
lock
add
retf
dec
dec
fisubr
adc
shl
push
and
inc
or
cmp
retf
adc
push
fs
inc
fwait
mov
mov
jnp
push
mov
mov
movs
add
addr16
lock
mov
mov
jbe
add
je
std
test
sub
adc
call
jns
ss
cmp
jl
sbb
jns
mov
aas
jp
loopne
popf
call
cmp
sar
sub
ret
ret
(bad)
mov
cmp
xchg
cs
bound
addr16
sbb
push
push
xchg
and
lods
call
call
add
push
daa
push
pushf
mov
add
out
lock
(bad)
pop
pusha
cld
push
push
cmc
dec
daa
push
aad
xchg
mov
push
push
daa
enter
ds
or
mov
dec
(bad)
iret
push
or
mov
imul
push
inc
aas
and
add
and
cmps
pop
hlt
jge
mov
jmp
repz
pushf
xor
sbb
xor
xchg
cmc
xor
call
pop
cmp
jle
push
mov
or
loope
dec
or
enter
pop
push
sub
dec
cmp
test
(bad)
lahf
sub
or
xchg
nop
movzx
aaa
xor
dec
push
dec
mov
arpl
pop
stos
arpl
mov
(bad)
cmp
and
push
popf
jecxz
cmp
xchg
xchg
pop
cwde
mov
das
and
mov
add
mov
pop
dec
outs
lods
aam
mov
xor
xor
fwait
push
sti
clc
push
mov
mov
pop
and
cmp
inc
mov
push
xchg
or
inc
xchg
jl
mov
loopne
mov
inc
(bad)
push
aas
js
inc
sbb
inc
and
aas
inc
inc
sbb
jmp
neg
mov
sub
sbb
mov
jae
push
push
dec
pop
mov
pop
sbb
xor
es
ss
loopne
push
aas
loop
xchg
test
xor
clc
or
dec
sete
mov
jae
arpl
push
or
sbb
pop
mov
dec
mov
xchg
xchg
push
iret
dec
ret
addr16
(bad)
out
sub
cmp
sub
inc
(bad)
mov
addr16
imul
ret
ret
sbb
sbb
dec
je
sub
xchg
inc
jb
add
pop
mov
std
add
add
or
mov
push
push
mov
push
inc
cmps
shl
(bad)
call
retf
fnstsw
or
rcl
inc
mov
sbb
inc
pop
and
mov
pop
or
or
cmp
pop
xchg
mov
aas
je
add
add
ss
add
mov
or
dec
inc
cwde
add
aaa
dec
scas
loop
pusha
xchg
data16
mov
dec
sub
shl
fld
(bad)
retf
loopne
pop
test
in
inc
sar
jns
adc
jnp
mov
sti
push
rcr
retf
add
popa
pop
cdq
popf
or
push
or
(bad)
outs
and
add
inc
(bad)
mov
jmp
retf
(bad)
push
dec
cmp
jl
movzx
shr
mov
inc
movzx
and
adc
sbb
push
jg
inc
pop
pusha
(bad)
push
mov
sub
inc
cld
dec
cmps
imul
ins
mov
mov
or
(bad)
jmp
push
jge
shl
or
mov
add
push
jne
adc
add
and
dec
sti
nop
xlat
add
or
ja
xlat
mov
xor
inc
pushf
dec
sub
sub
inc
imul
push
cmp
add
add
dec
mov
add
inc
dec
jne
cmp
push
pusha
popa
sub
push
add
sub
clc
xchg
sar
in
or
cli
call
jmp
sbb
ror
loopne
aam
mov
mov
xchg
adc
cmp
lods
neg
xor
inc
(bad)
dec
jo
adc
js
pop
arpl
jno
jns
scas
push
(bad)
mov
cmp
ja
jmp
mov
imul
jns
mov
cwde
and
jnp
cmp
rcl
loopne
js
adc
gs
fsubr
pop
push
jge
dec
push
repnz
inc
ret
cmp
lock
je
sbb
and
ds
push
mov
push
sub
xor
ret
int3
sbb
adc
enter
mov
fsubr
movs
add
inc
and
div
pushf
jmp
(bad)
lock
mov
shl
(bad)
mov
mov
pop
popa
sub
shr
cmp
icebp
inc
fdiv
(bad)
mov
jb
push
mov
cmp
ret
rcr
jb
enter
test
xor
sub
data16
outs
mov
cli
fstp
pop
mov
js
in
(bad)
je
push
ret
jmp
call
out
das
outs
jae
add
cdq
test
mov
adc
add
pusha
je
push
das
jo
or
nop
dec
push
inc
das
push
je
add
inc
loopne
inc
out
loop
ror
fwait
or
or
in
sahf
mov
out
cmp
or
aas
das
xchg
inc
and
movs
ss
xor
das
pop
sub
push
das
aas
mov
add
cmp
cs
xchg
dec
push
push
loopne
enter
das
test
aas
das
aad
nop
dec
push
data16
jo
adc
add
rcl
adc
int3
cli
push
arpl
push
xchg
push
mov
mov
push
ret
add
mov
push
add
in
pop
push
jle
add
call
cld
fstp
call
or
sbb
es
ret
or
aas
inc
or
pop
cmp
push
lods
call
daa
das
push
or
call
or
xor
mov
mov
inc
dec
jne
lahf
dec
popa
or
in
cmp
inc
xchg
ror
mov
icebp
test
jl
inc
xor
js
data16
pop
mov
push
jmp
adc
call
test
jne
inc
add
dec
jne
or
(bad)
cmc
add
add
cmps
scas
mov
adc
loop
shl
and
mov
jmp
into
data16
test
aaa
and
xor
das
push
add
mov
mov
sbb
adc
add
fisub
xchg
je
ja
rol
shr
sti
out
iret
sti
dec
test
jl
inc
xor
stos
aaa
lea
sbb
add
and
jmp
pop
loopne
shr
add
xlat
pop
fadd
pop
in
and
sbb
xor
pop
(bad)
cmovae
mov
xor
jo
sbb
loopne
push
hlt
mov
push
ss
jns
movs
jecxz
xchg
inc
imul
ret
inc
mov
ds
out
push
ja
mov
int3
push
hlt
nop
into
mov
cdq
test
sbb
ret
rol
dec
test
fisub
ja
jmp
inc
dec
jne
pop
adc
pop
je
dec
and
pop
imul
jecxz
or
retf
add
or
cmp
test
adc
ror
dec
push
push
mov
jno
aaa
mov
scas
cmp
jge
or
xchg
jle
jne
sub
and
popf
nop
bnd
dec
(bad)
call
jne
fdiv
aam
ror
mov
hlt
sub
cmp
or
jmp
xor
sbb
inc
sub
ds
clc
jle
sti
ss
lea
cmp
inc
jg
jmp
addr16
dec
pop
popa
mov
jmp
or
adc
add
pop
into
cdq
add
or
(bad)
add
mov
xor
lea
mov
test
sbb
mov
jle
scas
ss
pop
shl
pop
sbb
mov
or
sbb
jo
add
shl
loop
push
shl
mov
add
(bad)
call
push
add
ret
sub
ret
or
xor
mov
loop
push
add
ja
adc
mov
out
mov
jmp
adc
int3
leave
push
or
mov
mov
add
cmp
jo
fimul
jae
or
shl
pop
inc
movs
mov
les
js
cmp
maxps
sbb
dec
dec
aam
dec
fcomp
stos
push
cmp
add
sub
dec
pop
lahf
lock
mov
jmp
int
push
mov
mov
stos
adc
dec
mov
inc
xor
sbb
cs
inc
inc
sbb
adc
or
iret
sar
inc
or
lock
push
pop
cmp
jb
or
jbe
mov
add
mov
sbb
dec
hlt
mov
not
jg
add
es
push
dec
fsubrp
xchg
push
movs
xchg
mov
mov
mov
adc
mov
ss
dec
mov
push
pop
adc
pop
jb
sbb
fild
retf
sti
sbb
xchg
(bad)
jecxz
int
xchg
cmp
test
and
sbb
call
sub
jmp
mov
add
add
gs
jmp
dec
in
rcl
clc
add
mov
add
jle
test
aam
test
push
retf
mov
out
cmp
push
or
fild
xchg
dec
aas
adc
dec
sbb
push
inc
aas
inc
add
jmp
(bad)
and
ret
fistp
inc
ret
inc
adc
popa
pop
data16
push
iret
test
add
xor
les
data16
push
pop
(bad)
cmp
or
test
sub
shl
push
jb
call
add
sub
rol
cmps
jp
(bad)
pop
add
dec
adc
dec
jno
push
pusha
adc
inc
stc
shl
imul
jl
je
xor
lods
test
js
xchg
push
sub
cwde
sub
lea
jne
cmp
or
jb
pop
(bad)
aaa
jle
imul
leave
mov
je
inc
dec
jne
mov
pusha
aaa
rcr
jl
push
cmps
jb
fs
adc
jae
xor
add
ret
xchg
sub
sbb
xchg
adc
mov
in
push
add
xor
fadd
fwait
push
sbb
es
sbb
lahf
cs
pop
dec
mov
inc
and
add
es
shl
je
cmps
inc
cli
outs
xchg
and
xchg
add
and
xor
pop
adc
cld
sar
push
fimul
jb
add
jne
(bad)
ja
mov
ja
cwde
push
dec
jne
mov
fmul
jecxz
xchg
rol
aas
mov
adc
mov
pushf
scas
xor
mov
stos
(bad)
adc
sbb
gs
adc
mov
pop
xchg
mov
iret
xor
inc
cmp
int3
add
jle
add
mov
rcr
jmp
cmp
jg
je
sub
je
add
jmp
aaa
in
je
sbb
out
sub
xchg
jmp
rcr
imul
mov
hlt
or
(bad)
sub
jmp
lea
(bad)
cwde
and
shr
inc
jle
jne
out
or
(bad)
cld
out
jne
jne
fiadd
call
jnp
inc
test
cmp
je
add
jmp
inc
push
dec
and
mov
cmps
int3
shl
cmp
imul
dec
mov
or
push
scas
(bad)
adc
loopne
mov
sti
dec
jl
or
mov
add
mov
jo
lods
sub
cli
lock
inc
push
cli
scas
push
inc
add
mov
cmp
jne
mov
and
add
dec
sub
lock
push
repz
retf
(bad)
mov
icebp
jmp
pop
lods
adc
les
cmp
inc
mov
cdq
sbb
cs
test
sar
out
push
xchg
test
mov
push
xor
movs
add
adc
cmp
dec
xor
push
inc
and
inc
or
or
pushf
push
adc
cwde
stc
pop
pop
xchg
xchg
or
mov
sbb
xchg
sbb
push
sbb
xchg
cmp
mov
cmp
pop
stos
nop
xor
add
ret
fs
ret
mov
and
test
sub
adc
movs
sbb
cmp
jmp
bound
mov
imul
mov
sub
dec
in
cmp
add
leave
cld
cmp
loopne
arpl
jmp
loopne
out
mov
pop
xor
adc
pop
adc
in
sub
dec
xchg
call
xor
stos
jbe
mov
fdivr
adc
push
push
lock
into
popf
jbe
adc
js
sbb
jne
or
fild
es
lds
jecxz
pusha
adc
movs
lock
(bad)
xchg
sbb
lock
jnp
pushf
sbb
add
jmp
test
mov
and
mov
mov
push
xor
push
sbb
pushf
fwait
jmp
or
push
or
jg
jl
inc
mov
lock
push
and
pop
(bad)
add
dec
mov
in
push
mov
in
inc
adc
add
xor
fst
pop
ins
pop
neg
add
xchg
cld
jmp
mov
inc
push
sar
jl
imul
loope
adc
push
adc
push
or
pop
push
adc
pushf
iret
sbb
mov
sbb
popa
movs
adc
dec
rcl
(bad)
jg
jp
push
adc
shl
inc
xchg
cmp
je
inc
dec
pop
outs
sub
jne
into
ret
inc
lock
bound
dec
cld
movs
sub
jb
inc
xchg
ins
and
mov
push
dec
sbb
pop
xchg
(bad)
jo
jne
pop
ja
test
icebp
mov
call
cmp
inc
aas
push
lds
mov
add
js
in
je
add
push
sbb
cmp
and
cli
ja
(bad)
into
fisubr
or
scas
or
adc
xor
or
push
add
out
aam
mov
mov
sbb
sub
es
fldcw
adc
add
leave
es
inc
push
push
mov
push
nop
into
mov
dec
das
add
add
(bad)
mov
shl
xchg
aam
inc
or
out
fadd
js
mov
call
ds
or
retf
in
jnp
add
pop
xor
es
loop
call
push
xor
sub
adc
jmp
jo
mov
cmp
jbe
xchg
popa
fidiv
sbb
mov
or
daa
iret
sub
mov
ins
add
sub
test
pop
xor
mov
fwait
add
cmps
xor
push
cmp
cmp
or
push
cmp
add
xor
push
and
jg
fnstsw
(bad)
loopne
xchg
cmp
jl
movs
loopne
add
add
mov
ror
inc
jnp
fs
int3
rcr
inc
jo
sbb
add
or
adc
mov
(bad)
push
mov
sub
xor
mov
nop
test
test
mov
jl
(bad)
fisub
retf
int
rol
push
inc
(bad)
add
pushf
add
xor
mov
and
pop
inc
fidiv
xlat
dec
scas
int3
in
scas
xor
mov
mov
rcr
cmp
icebp
mov
or
inc
pop
cmp
adc
pop
mov
dec
pop
cmp
push
stc
fsubr
fld
jge
and
push
dec
int3
adc
mov
js
add
fcomp
pop
into
adc
fisubr
loopne
into
sbb
int
fsubr
inc
jge
add
xchg
or
(bad)
add
test
mov
add
or
cmp
inc
in
cld
adc
xor
jbe
jb
bound
adc
cmp
test
add
xchg
mov
mov
stos
cmc
stos
hlt
fsubr
pop
(bad)
sbb
fdiv
push
ins
or
or
sti
ret
fadd
outs
push
daa
pop
jnp
repnz
add
dec
gs
push
daa
jbe
jnp
fs
push
cwde
mov
imul
push
fidivr
bound
mov
mov
in
add
jns
inc
jmp
add
adc
push
shl
addr16
retf
cmp
daa
dec
add
dec
and
idiv
daa
inc
jbe
pop
xchg
sti
cmp
enter
fs
mov
lea
mov
jo
dec
test
pop
push
out
scas
mov
xchg
mov
jbe
ja
and
cmp
mov
ins
xchg
out
call
add
test
cmp
add
sub
outs
pop
nop
retf
das
bound
js
test
mov
jbe
test
pop
cwde
dec
gs
retf
test
jmp
retf
sbb
push
add
xchg
in
sbb
fstp
pushf
adc
daa
mov
cmp
and
in
jb
and
sub
sub
mov
fs
rcr
xchg
les
push
es
pusha
xchg
dec
sub
gs
retf
movs
fcomp
loopne
in
lods
dec
push
cld
call
imul
cmp
push
and
cdq
in
leave
mov
mov
lods
jb
movs
sbb
mov
mov
pop
retf
dec
adc
dec
gs
nop
sbb
movs
shl
in
popf
dec
xor
sub
inc
mov
gs
ds
or
adc
mov
imul
sbb
test
cwde
outs
sub
lods
xchg
popa
mov
daa
pop
cdq
add
xlat
pushf
mov
popa
cs
add
aas
adc
ss
or
add
add
and
or
imul
pop
pusha
sbb
daa
push
imul
ja
push
push
jae
sub
outs
dec
or
adc
inc
aas
movs
add
js
(bad)
mov
add
imul
cmp
sbb
aas
or
add
rsm
(bad)
das
adc
cmps
pop
pusha
lods
inc
pop
inc
pop
mov
lss
jle
inc
pusha
pop
mov
out
xor
jmp
data16
outs
or
add
jmp
xlat
push
outs
aaa
mov
sbb
dec
sub
jg
sub
mov
test
adc
aaa
lahf
aaa
and
movs
daa
scas
call
mov
cmp
daa
and
es
push
cmp
or
mov
out
aaa
ja
adc
(bad)
jnp
mov
push
and
inc
or
stos
ja
xchg
fcos
jne
jne
lea
test
sbb
cmp
daa
pop
idiv
and
mov
adc
push
or
and
movzx
mov
sub
and
int3
adc
add
mov
and
fdivr
test
loopne
fisttp
call
jle
push
lock
pop
mov
arpl
mov
mov
adc
lods
or
adc
jne
dec
add
cs
mov
adc
pushf
xor
mov
dec
aaa
int
push
daa
push
push
out
jo
mov
add
jbe
mov
je
call
xor
ret
lock
cmps
mov
push
clc
dec
or
xchg
lods
shl
aaa
(bad)
push
mov
jmp
or
fcomp
push
mov
add
mov
popa
xor
pop
out
or
push
push
xlat
std
adc
jmp
sbb
test
jmp
sbb
js
jmp
or
adc
aaa
sbb
out
pop
mov
clc
dec
pop
shl
jg
mov
ins
or
pop
clc
fwait
pop
cld
sbb
dec
clc
movs
adc
xchg
dec
out
dec
clc
pop
int
pop
(bad)
popa
xchg
sbb
popa
inc
add
push
test
or
ds
cld
xchg
out
adc
dec
mov
dec
sub
test
add
xor
push
lea
jne
lods
and
je
movs
xchg
rcr
or
adc
dec
pcmpgtd
add
hlt
jmp
and
out
xor
pop
test
retw
cdq
xor
sub
mov
mov
mov
pop
pop
cdq
idiv
push
adc
stc
push
pop
mov
aaa
adc
fldz
fsub
sbb
rcl
(bad)
mov
adc
fisttp
nop
loope
shl
nop
mov
nop
xchg
pusha
ret
push
iret
dec
adc
inc
(bad)
push
or
aam
inc
loopne
jno
pop
test
inc
mov
movs
pop
cmp
and
push
adc
mov
xor
movs
mov
lods
jns
mov
xor
mov
das
hlt
outs
hlt
lods
mov
in
push
or
rcr
xor
retf
pop
mov
push
pop
test
out
pusha
push
dec
ins
mov
dec
and
cmps
test
icebp
in
mov
or
pop
fs
fwait
sub
add
pop
mov
dec
dec
aaa
imul
fbld
imul
mov
pushf
lods
mov
test
push
clc
inc
test
sti
ret
movs
cmp
cmp
cli
jp
inc
daa
sub
or
or
mov
cmp
or
sub
mov
mov
call
jg
(bad)
push
sbb
jno
add
gs
add
push
mov
push
and
(bad)
dec
push
jnp
adc
jae
enter
or
add
ja
push
rol
and
xor
mov
xor
or
cli
pusha
popa
ja
ja
add
aam
nop
or
clc
mov
mov
cmp
xor
adc
xor
ret
popa
dec
mul
rol
bound
sahf
mov
in
add
mov
loopne
call
scas
push
fimul
sub
xor
rol
pusha
in
or
cmc
push
push
mov
cmps
mov
outs
mov
jecxz
test
inc
sar
ret
(bad)
aad
stos
fwait
jo
mov
inc
shl
test
mov
shl
(bad)
mov
ds
test
iret
add
or
jnp
adc
xchg
mov
or
add
cmps
mov
add
mov
xor
add
aam
mov
lock
add
pop
xor
pop
adc
aas
neg
adc
pop
lock
push
int
(bad)
push
es
xor
sub
push
retf
hlt
push
push
xchg
add
(bad)
mov
icebp
pop
call
add
xor
lods
add
mov
xchg
loopne
xchg
pop
stos
pop
daa
loope
shr
xlat
lahf
xchg
dec
lahf
in
add
cdq
(bad)
pushf
add
xchg
cdq
and
xchg
test
mov
mov
mov
shl
out
or
cwde
pop
es
adc
cmp
sar
cmps
mov
scas
and
or
jge
jns
add
lods
sub
popf
sbb
mov
hlt
arpl
dec
sub
neg
(bad)
nop
loop
popa
scas
jg
mov
and
addr16
xchg
outs
mov
adc
mov
and
sub
shl
loop
fwait
sbb
sbb
pop
mov
pop
test
xor
sbb
fimul
ja
fadd
stos
ins
call
or
or
push
and
test
sbb
imul
and
test
or
rcl
ret
sub
sbb
addr16
pusha
or
cdq
cmp
xor
(bad)
pop
ret
or
and
inc
xlat
(bad)
fldcw
lods
jo
movs
aad
or
push
sbb
out
push
push
inc
sbb
and
fsub
ret
shl
and
adc
pop
pop
mov
loopne
bound
daa
pop
add
push
mov
loopne
mov
cmp
adc
stos
mov
pslld
ja
cmovs
inc
adc
xor
lahf
pop
and
fstp
add
push
not
inc
icebp
xor
adc
out
pop
(bad)
xor
pushw
retf
or
rol
or
sub
pop
inc
loopne
ins
mov
and
shr
lock
add
clc
push
mov
adc
or
cmp
mov
adc
lods
imul
or
push
pop
(bad)
mov
sub
jb
je
dec
je
jmp
idiv
jbe
bound
or
mov
or
es
dec
test
into
push
mov
adc
xchg
push
ror
cmp
jmp
sub
sub
add
pushf
rol
sbb
out
clc
arpl
adc
(bad)
scas
ja
ja
cmp
sbb
bound
je
cmp
loopne
clc
lock
aaa
cld
or
push
ins
rol
jae
xchg
es
push
fadd
cmp
iret
test
push
mov
aad
adc
add
push
jmp
clc
lea
push
ins
jg
loopne
cmps
cld
pop
lea
addps
dec
aam
pop
fild
cmp
call
mov
sub
rcl
xchg
adc
in
cmps
(bad)
jns
adc
loop
push
test
and
rcl
pop
cmp
and
adc
inc
jae
xchg
mov
xor
add
mov
jo
or
iret
dec
outs
mov
mov
mov
jmp
ret
lock
cmp
sahf
xchg
sahf
vrsqrtps
out
push
cmp
sti
push
sub
dec
sub
jl
inc
xchg
lea
xchg
xchg
pusha
jg
movzx
or
jne
adc
dec
out
aas
sub
inc
in
fmulp
dec
pop
leave
ds
fwait
outs
mov
enter
inc
sete
or
and
movs
ret
dec
pmaxsw
sbb
sbb
add
add
push
jbe
add
loopne
or
movs
push
clc
add
jne
mov
cmp
cmp
vpminub
adc
dec
sub
add
add
push
into
retf
or
cmp
jle
dec
not
add
xor
cmp
mov
mov
test
cmp
retf
push
pusha
xor
(bad)
jl
push
movzx
xchg
add
pop
call
mov
jle
cmp
jne
clc
jmp
inc
dec
jne
out
setg
std
das
sbb
je
push
retf
ins
add
pop
pusha
add
inc
pop
xchg
add
add
sbb
rcr
cmp
or
aas
or
jl
(bad)
test
cmp
push
(bad)
mov
mov
jmp
repz
inc
mov
cmp
jne
mov
popa
push
dec
jne
push
pop
xchg
cmp
stos
sub
push
or
call
(bad)
ss
fsubr
add
pop
(bad)
add
add
jmp
sbb
imul
xchg
out
stos
or
or
cs
pop
pop
inc
sbb
sbb
test
je
inc
cmp
jnp
jbe
mov
(bad)
sub
test
adc
dec
push
loopne
xchg
sbb
loopne
sub
int3
cmp
ins
aaa
aad
dec
lock
div
adc
mov
sub
push
loopne
mov
lock
pop
xor
inc
add
mov
sub
je
cmp
je
jmp
xor
enter
fbstp
inc
add
pop
push
add
jb
inc
fs
jo
cli
adc
lds
pop
and
add
or
pop
pop
jbe
jbe
jle
nop
push
popa
jmp
gs
adc
jns
shl
icebp
ja
adc
and
(bad)
mov
xchg
add
scas
(bad)
adc
xchg
js
pusha
into
jge
mov
imul
push
in
adc
adc
xchg
pusha
sub
or
scas
add
and
adc
fdiv
jmp
jl
in
popa
sub
scas
sbb
and
or
call
cli
ins
sub
cmp
mov
cmp
adc
inc
enter
shl
out
popa
scas
dec
enter
inc
loop
push
adc
or
ss
sahf
push
les
stos
push
les
outs
addr16
jno
or
push
les
push
in
add
shl
adc
lock
jge
mov
sub
push
out
and
cmps
sub
sbb
push
add
shl
pop
adc
adc
inc
or
popa
stos
addr16
and
cli
cdq
xchg
xor
or
or
test
push
push
sbb
nop
and
sub
jecxz
mov
mov
adc
mov
mov
maxps
mov
int
js
(bad)
and
movs
(bad)
cli
or
cvtps2pd
or
cdq
repnz
dec
test
mov
cli
add
add
sahf
mov
js
dec
mov
push
mov
push
jne
clc
jle
mov
nop
cmp
div
scas
dec
add
pusha
mov
fadd
adc
mov
cmp
fdivr
nop
pop
rcl
(bad)
lock
ds
clc
fwait
sbb
sbb
ins
mov
fsubr
push
lock
ja
push
inc
mov
jnp
dec
push
cmp
jge
push
dec
add
mov
repz
sbb
cmp
fs
(bad)
lock
push
add
sub
ss
out
outs
xor
adc
add
adc
cmp
fimul
push
or
inc
mov
fcom
push
push
(bad)
hlt
inc
push
(bad)
(bad)
(bad)
dec
add
add
push
dec
fs
outs
imul
jb
outs
ins
jo
outs
outs
je
ins
or
iret
pop
pushw
inc
jb
popa
je
sub
call
push
ins
call
cs
add
mov
fmul
inc
dec
ja
jb
das
pop
ins
out
(bad)
cmc
mov
inc
inc
inc
jae
in
popa
jae
xor
loope
outs
adc
sub
xchg
iret
or
or
cmp
into
mov
popa
adc
xchg
rol
mov
popf
adc
into
outs
inc
sbb
fstp
enter
push
or
sar
ins
stos
adc
push
(bad)
jae
data16
inc
and
enter
movs
xor
(bad)
and
scas
sub
repnz
push
dec
inc
or
cld
push
add
inc
jo
fs
in
push
imul
or
dec
pop
lea
jg
(bad)
test
mov
sbb
setne
test
cld
or
jg
ret
mov
jo
adc
push
xor
pop
add
adc
xor
sahf
add
fld
je
pop
push
inc
mov
jbe
lds
loope
loop
ror
sub
lahf
pop
pop
dec
jle
mov
je
fdivr
push
inc
sbb
das
outs
imul
sbb
pusha
ja
ja
sub
push
add
adc
jbe
push
imul
outs
cli
add
neg
adc
popa
cmp
pop
pop
rol
xchg
ins
and
mov
add
jae
arpl
je
bound
pop
push
jne
ins
fs
adc
or
add
xor
or
inc
adc
xlat
adc
(bad)
mov
inc
sub
or
inc
inc
jb
jae
xor
outs
pop
jecxz
mov
pop
mov
sub
add
fs
or
push
fs
cmp
nop
or
dec
mov
xor
ficom
push
dec
push
lock
scas
add
push
push
inc
inc
dec
add
adc
or
pop
arpl
dec
add
outs
jne
pop
adc
fistp
popa
retf
dec
add
inc
cmps
into
pop
stos
ins
gs
ret
cmp
and
xchg
push
mov
lods
jmp
and
out
pop
jne
push
nop
mov
cmp
mov
out
inc
test
fs
push
in
adc
in
in
mov
test
cmp
nop
ins
mov
xor
test
push
push
js
or
jge
sub
stos
fmulp
pop
(bad)
mov
jmp
sbb
push
mov
and
push
mov
jo
sbb
mov
ret
sbb
cld
ret
sbb
or
xchg
imul
push
cmp
sti
pop
out
sub
ror
push
mov
or
fcom
add
inc
cmp
mov
sbb
adc
cli
jl
or
add
and
pop
sar
ja
jne
add
inc
test
js
mov
dec
push
jns
mov
test
or
and
add
add
sbb
inc
and
add
sbb
and
clc
pop
nop
jmp
aam
add
in
pop
call
and
mov
ror
sbb
mov
mov
hlt
jne
fdivr
dec
or
push
jecxz
jo
and
dec
repnz
add
jge
call
lods
cs
mov
add
aas
cwde
loopne
push
call
enter
xor
and
add
sub
push
push
push
mov
mov
aad
dec
lods
add
div
push
mov
pop
je
mov
mov
je
cld
add
test
outs
mov
aam
lea
ret
pop
add
push
test
call
clc
shr
dec
pop
test
adc
fistp
dec
adc
movs
adc
sub
int
in
movs
sbb
bound
mov
and
xchg
aam
fbld
sbb
fistp
out
push
ret
test
pop
inc
push
je
or
add
push
ret
loopne
(bad)
cmc
(bad)
(bad)
adc
loope
mov
pop
shl
pop
movs
test
mov
mov
cld
push
push
dec
and
and
inc
and
pop
mov
js
scas
xchg
dec
xor
add
add
shr
fs
jb
jge
(bad)
pop
mov
iret
or
lock
pop
arpl
ss
xor
sbb
(bad)
aaa
ja
mov
enter
add
loopne
lahf
add
push
dec
ret
sbb
test
lahf
mov
and
ret
nop
lahf
sahf
bound
ficomp
cmps
xchg
das
mov
in
add
outs
and
loope
sub
mov
sbb
add
shl
jo
js
or
std
pop
inc
sbb
inc
in
dec
pop
stos
pusha
push
xlat
int3
push
push
sbb
mov
and
xchg
dec
popa
mov
sbb
push
and
nop
iret
push
ret
ret
inc
inc
pop
aas
sub
push
sbb
pusha
add
adc
xchg
push
inc
sub
loope
mov
test
add
mov
nop
and
xor
xor
movs
out
xor
cmp
or
inc
sub
inc
pop
and
ret
and
aaa
add
dec
iret
dec
dec
iret
shl
add
lock
xor
lds
iret
addr16
jo
fld
or
jb
popa
add
inc
sub
movs
iret
ins
les
dec
iret
mov
xchg
cs
iret
aam
iret
xchg
xchg
or
xchg
adc
or
inc
iret
ffree
cld
sbb
(bad)
xor
ret
sbb
pop
sbb
loope
(bad)
adc
fbstp
shl
cwde
xchg
in
fild
inc
dec
fisub
and
pop
or
outs
add
je
popa
mov
sbb
mov
fbld
fdiv
inc
cmp
dec
push
push
jb
das
jo
leave
stos
ja
enter
ret
or
ja
xor
xor
mov
xor
pop
inc
mov
adc
sbb
leave
aam
xor
add
hlt
dec
ja
and
cmps
loope
arpl
sbb
jne
or
push
and
fs
popa
push
jnp
jb
cmps
shl
or
and
cmps
jbe
ret
or
movs
aas
dec
xor
or
loopne
movs
adc
popa
aam
pop
push
push
bound
js
sub
xchg
push
inc
or
loope
jl
lahf
cwde
dec
sbb
add
cmp
push
xor
sbb
ror
xor
sub
xor
xor
or
ss
push
leave
stos
and
or
fmul
xor
xor
push
dec
mov
adc
lods
or
stos
push
shr
loop
or
loopne
add
shl
shl
dec
ja
push
adc
movs
ja
bound
cs
iret
adc
stos
popa
jb
pop
add
ja
mov
dec
dec
xor
add
pusha
dec
ja
ret
push
fsubp
(bad)
(bad)
mov
sbb
lea
cwde
lea
push
xchg
or
das
cmps
jb
sbb
mul
jbe
das
(bad)
or
xchg
mov
(bad)
pop
xor
add
add
push
stos
sbb
mov
mov
lahf
sbb
xchg
je
xor
data16
ins
dec
in
adc
pop
pusha
mov
sbb
shl
xor
iret
das
shl
popa
xor
cmc
inc
and
dec
push
ds
in
nop
mov
push
pusha
mov
push
dec
scas
and
enter
cmps
loope
cmps
cmp
xlat
getsec
or
das
pop
aad
dec
(bad)
or
outs
add
mov
movs
(bad)
int3
outs
sbb
mov
test
jo
sbb
test
aas
jmp
(bad)
enter
clc
dec
mov
xlat
add
fcom
inc
push
mov
shl
inc
push
div
scas
loopne
sub
imul
addr16
test
add
out
sub
shr
pusha
mov
movs
sbb
(bad)
sbb
pop
sbb
inc
mov
rol
or
mov
or
(bad)
aas
xchg
mov
(bad)
add
mov
ret
push
movs
scas
or
fdivr
inc
ret
dec
ret
mov
nop
mov
adc
test
push
aam
sti
aaa
lahf
mov
fimul
(bad)
shl
lahf
xor
adc
pop
pop
movs
lahf
fdiv
or
lock
popa
sbb
push
xchg
jle
bound
pop
push
add
dec
scas
xchg
push
inc
out
fdiv
and
out
dec
out
sbb
add
movs
out
iret
popa
cdq
loopne
adc
xchg
push
or
pop
add
xchg
mov
(bad)
dec
xlat
ret
pop
and
dec
xlat
cmp
cmp
or
sub
push
pusha
add
xor
cs
mov
xor
aas
xchg
(bad)
sub
add
pop
and
add
(bad)
cwde
movs
push
xor
xor
call
sbb
xor
or
sbb
pop
fsub
push
jbe
jo
push
retf
mov
loopne
xchg
fimul
sbb
dec
fisttp
loope
push
xor
adc
in
xor
(bad)
(bad)
add
stos
in
adc
add
mov
dec
sbb
sbb
movs
ffreep
or
xlat
add
xchg
popa
mov
sbb
js
(bad)
xchg
sahf
cmp
call
scas
xchg
push
inc
pop
mov
test
sbb
dec
pop
push
test
add
in
pop
push
icebp
xchg
pop
nop
xor
jno
pop
push
inc
sub
sbb
or
xchg
in
(bad)
cld
adc
push
xor
add
inc
dec
in
xor
xor
jo
in
clc
ret
sbb
add
xchg
jecxz
nop
fcomp
out
push
add
inc
push
cmp
push
xchg
loop
dec
dec
adc
push
iret
xchg
loope
dec
loope
sbb
mov
loope
and
movs
loope
fcom
or
je
xor
mov
jb
push
pop
and
out
add
add
dec
fbld
call
dec
push
fild
aad
loopne
pushf
or
in
fbld
and
das
dec
ds
push
push
inc
xchg
daa
movs
shl
xor
inc
jmp
pop
dec
(bad)
shr
pusha
mov
movs
loopne
or
shl
dec
js
xor
ret
mov
data16
pusha
mov
and
dec
das
and
push
leave
stos
daa
fldl2e
clc
dec
mov
inc
daa
sub
pusha
mov
and
daa
or
sub
loopne
pop
adc
adc
pop
pusha
or
cmovnp
pop
push
fcom
gs
or
inc
jno
mov
adc
movs
pop
or
test
stos
jo
pop
ins
js
sub
rcl
xor
xor
test
and
outs
daa
adc
add
daa
mov
sub
dec
daa
mov
bound
adc
js
inc
pop
cmp
nop
test
sbb
sbb
jg
jae
fs
add
push
mov
outs
xchg
sub
mov
mov
mov
and
dec
pop
cmp
cmp
sbb
push
push
and
adc
sub
pop
jo
xor
push
cli
jmp
pop
inc
jno
leave
ins
icebp
mov
jnp
lds
repnz
pop
sub
sbb
pop
mov
shl
sbb
or
ja
push
dec
inc
sub
(bad)
repnz
dec
outs
and
fadd
test
mov
movs
outs
lds
and
sbb
outs
sub
lds
mov
shl
call
test
jg
shl
sub
hlt
or
loope
mov
dec
xchg
mov
cs
xchg
xor
or
xchg
push
inc
sub
add
loop
xchg
push
popf
idiv
push
hlt
dec
push
dec
push
test
sub
movs
push
and
mov
push
or
loop
movs
push
add
pop
sbb
adc
mov
cmp
pop
dec
and
mov
sub
enter
dec
lds
inc
shl
ret
call
sbb
dec
push
push
jno
or
mov
aaa
loope
adc
pop
and
adc
inc
aaa
sub
aaa
xor
ficomp
aaa
sub
icebp
inc
rol
sub
push
mov
add
ret
adc
adc
push
pop
lds
scas
pop
sti
jl
pop
add
dec
pop
xor
fcmove
movs
pop
xor
or
neg
mul
inc
ret
mov
xchg
xor
sbb
pop
add
add
jo
ja
xchg
dec
xchg
push
inc
or
frndint
sbb
loope
clc
dec
fistp
std
add
sbb
fsubrp
shl
ja
inc
ret
pusha
sbb
loopne
not
fld
fisttp
push
aas
or
pop
jo
in
adc
push
pusha
mov
je
mov
pushf
movs
or
out
inc
ret
dec
ret
cmps
xor
cmps
cmp
aam
ret
into
and
inc
add
or
ja
xor
mov
add
out
sub
dec
xlat
nop
das
pusha
mov
add
and
rcl
mov
adc
cwde
shl
adc
push
and
add
out
sub
jo
xor
push
dec
out
adc
pop
and
push
stos
mov
mov
add
mov
xchg
jb
movs
and
popf
popa
sbb
xor
mov
add
out
sub
pusha
mov
add
fist
scas
jo
lock
not
shl
ret
mov
inc
mov
imul
pop
sub
shr
ds
mov
inc
dec
push
fadd
adc
je
das
add
push
dec
lds
leave
push
and
sub
adc
nop
das
inc
addr16
mov
pop
fmul
or
add
das
cmps
loop
fs
and
sar
or
das
push
pop
add
out
sub
das
shr
mov
loopne
aaa
xchg
or
mov
das
or
xor
pop
inc
mov
push
dec
aas
test
push
shl
repz
mov
inc
cmc
or
js
adc
mov
add
dec
inc
je
add
push
dec
lds
and
xor
push
mov
sbb
(bad)
sahf
push
(bad)
and
pop
stos
in
adc
or
mov
adc
mov
movs
pop
adc
and
and
aaa
mov
pop
and
pop
pop
jno
leave
stos
pop
or
lds
pop
dec
push
mov
movs
pop
push
and
nop
dec
pop
add
add
in
adc
or
pop
adc
movs
icebp
inc
xor
js
or
pop
mov
pusha
fsubr
xchg
mov
mov
and
dec
inc
dec
push
shl
mov
fisubr
fbstp
dec
mov
or
adc
mov
pop
popa
sbb
dec
in
xor
div
sub
xlat
ja
leave
stos
and
adc
inc
push
inc
jno
outs
sbb
sbb
outs
and
push
push
cmps
inc
lds
pop
outs
lsl
sbb
jb
or
fcom
push
push
adc
shl
call
mov
pushf
movs
sbb
and
daa
and
ret
nop
inc
call
dec
dec
mov
inc
add
and
xchg
adc
dec
mov
add
or
movs
sahf
dec
xor
sbb
sbb
dec
xor
sbb
pop
aas
jo
leave
stos
mov
adc
or
mov
xor
sbb
and
fistp
inc
cwde
pusha
mov
dec
test
pop
in
nop
mov
out
push
push
pusha
mov
aam
mov
clc
movs
push
es
mov
xchg
cwde
mov
mov
pop
or
mov
mov
add
in
mov
idiv
pop
sbb
stos
sbb
push
idiv
dec
neg
add
aam
jo
lock
and
add
iret
dec
dec
mov
xchg
jge
sub
mov
sbb
add
je
mov
dec
ret
push
movs
mov
test
add
dec
and
mov
adc
xor
pslld
les
mov
sbb
xor
push
loopne
mov
rcr
jo
mov
sbb
mov
pop
or
loope
inc
aad
push
sbb
xor
sbb
mov
mov
ja
sub
mov
pop
dec
mov
add
mov
or
mov
aad
sbb
or
aas
daa
inc
jb
push
push
jb
ss
pop
adc
mov
add
pminub
sub
dec
prefetcht2
movs
les
inc
adc
in
mov
mov
push
inc
pop
sbb
inc
xchg
inc
inc
pop
and
dec
inc
dec
push
shl
and
ret
mov
popa
inc
sbb
inc
sub
(bad)
inc
sub
sub
xlat
loope
xchg
push
xchg
and
xlat
ror
cwde
pusha
sbb
in
movs
xlat
lock
icebp
inc
adc
push
pusha
push
jno
pop
cmps
rcr
(bad)
dec
xor
aaa
push
repnz
mov
mov
mov
jo
mov
adc
hlt
cmps
or
xchg
call
add
or
sub
test
test
mov
dec
pinsrw
mov
or
or
cmps
push
inc
lds
inc
mov
inc
inc
ret
inc
and
aas
out
fcom
fldenv
dec
out
and
push
or
(bad)
adc
dec
ret
cmps
loopne
cmps
mov
sub
add
aaa
inc
xchg
push
inc
test
dec
sbb
mov
add
mov
mov
cmp
push
test
mov
add
adc
push
(bad)
imul
in
nop
add
shl
pusha
mov
add
shl
sub
outs
nop
or
cmp
nop
stos
popa
xor
dec
out
adc
xor
and
dec
out
or
add
out
shl
pushf
movs
out
fdiv
inc
cmp
cmp
sub
xor
movs
sub
add
out
les
add
add
fcom
inc
push
out
ret
or
sub
xor
mov
sbb
fistp
sbb
xor
sbb
popa
mov
add
mul
jo
jbe
inc
lea
aaa
lahf
jns
test
add
out
sub
mov
lock
loope
or
adc
xchg
sbb
inc
adc
adc
dec
fs
add
xor
push
sub
out
inc
cmp
adc
xchg
mov
aas
pop
push
fadd
pop
dec
aas
nop
enter
movs
aas
cmp
push
icebp
inc
xor
adc
aas
cmp
push
inc
or
test
scas
enter
dec
test
add
outs
test
inc
xor
mov
aas
mov
push
outs
add
mov
movs
aas
sbb
aas
xor
push
rcl
add
xchg
push
adc
aas
xor
dec
pop
jmp
sub
and
cmp
aas
and
jo
aas
test
xor
sub
xor
aas
inc
sbb
addr16
loop
xchg
push
mov
dec
add
dec
aas
dec
push
test
adc
adc
nop
test
adc
add
jl
bound
push
js
cmp
jmp
adc
das
sub
push
dec
push
adc
dec
inc
add
jo
xchg
ret
push
dec
push
jbe
arpl
inc
inc
and
xchg
(bad)
scas
mov
ja
shl
add
pop
and
cmp
cmp
push
add
pop
fdiv
pop
mov
lds
scas
cmp
adc
add
dec
pop
cdq
mov
movs
pop
sar
mov
push
repnz
add
push
dec
pop
mov
mov
movs
pop
sub
push
mov
addr16
scas
xchg
and
push
pusha
imul
adc
jb
mov
cmp
ins
push
dec
push
icebp
push
enter
in
mov
push
ds
adc
outs
dec
mov
movs
dec
dec
or
outs
add
dec
dec
xor
ficom
movs
dec
rcr
push
mov
out
sub
push
dec
and
add
out
inc
dec
dec
je
mov
mov
icebp
sub
or
aaa
adc
pop
sub
xor
sbb
push
dec
xor
inc
mov
push
packuswb
lds
scas
int
in
dec
pop
cmp
cmp
adc
push
adc
mov
push
mov
dec
push
aam
jb
xor
and
inc
and
push
jp
push
add
in
dec
cmp
leave
stos
popa
imul
shl
mov
xor
xor
xor
pop
adc
xor
mov
loope
das
and
jae
inc
jbe
and
add
mov
outs
ja
jns
test
inc
enter
hlt
dec
dec
xor
push
fcom
ins
push
dec
lods
rcl
dec
fsub
cmp
sub
sub
ja
jge
loop
xchg
inc
pushf
dec
dec
test
sbb
dec
dec
adc
movs
xchg
dec
mov
jno
icebp
adc
(bad)
dec
mov
dec
inc
dec
and
mov
sub
mov
dec
call
adc
cmp
add
dec
pop
push
xor
sbb
cs
sbb
and
jno
leave
stos
aaa
int
in
dec
mov
inc
aaa
sub
popa
sbb
movs
or
jmp
call
dec
(bad)
adc
inc
inc
stos
cmp
xor
data16
adc
push
sbb
ja
xchg
mov
mov
adc
fmul
and
pop
sbb
test
sub
and
(bad)
ja
loop
xchg
push
xor
mov
and
addr16
mov
mov
fiadd
sub
cwde
xchg
mov
dec
add
push
addr16
dec
mov
add
ins
push
bound
adc
js
push
in
push
or
addr16
sbb
call
or
icebp
shl
ror
adc
sahf
add
movs
push
les
cmp
cmp
or
push
or
jo
or
loop
xchg
push
sti
xchg
stos
and
or
int3
dec
xchg
inc
jnp
adc
xchg
fiadd
je
xchg
xchg
push
add
xchg
push
dec
xchg
push
fsub
or
add
xchg
mul
(bad)
cmp
(bad)
pop
mov
jg
or
add
rol
or
das
lahf
and
sbb
pop
cmp
xlat
mov
fiadd
icebp
inc
xor
xchg
and
push
jno
xlat
and
xlat
test
xchg
cwde
neg
xlat
or
dec
mov
js
xlat
or
xlat
fwait
mov
xchg
cwde
and
adc
xlat
cmc
pop
push
test
xlat
jbe
lds
dec
xlat
ins
movs
lds
mov
add
adc
xlat
cld
xor
sub
adc
mov
mov
push
add
pop
and
add
(bad)
in
movs
inc
xor
xor
add
jo
lock
jl
dec
xchg
mov
push
stos
in
adc
cmc
pop
sbb
adc
pop
inc
mov
ins
movs
fimul
sbb
or
sub
inc
pop
and
dec
inc
dec
call
pop
movs
jmp
jo
jp
and
out
test
(bad)
dec
rol
jbe
addr16
sbb
xor
inc
pop
push
mov
mov
ret
pop
add
mov
xor
adc
sub
or
adc
fwait
push
inc
inc
and
in
sub
sbb
or
inc
call
jae
fisubr
or
sbb
pusha
pop
bnd
xor
mov
xor
and
cmps
add
or
or
js
xchg
loope
aaa
adc
or
sbb
and
jo
inc
add
cs
popa
jo
retf
add
or
jmp
arpl
leave
push
add
xchg
stos
popa
pop
clc
xchg
pop
jae
mov
or
enter
nop
ins
mov
sbb
in
push
inc
aaa
sbb
inc
mov
das
repnz
sbb
es
inc
pop
xor
fadd
in
pop
xchg
pop
in
movs
cmps
rcl
in
xchg
or
sub
mov
xor
sub
(bad)
mov
mov
mov
pop
je
or
jmp
dec
inc
jg
aaa
adc
add
add
push
push
sbb
dec
pop
mov
sub
push
xchg
aas
mov
lea
pop
dec
fmul
inc
cmp
dec
(bad)
and
popf
xchg
or
or
push
ret
mov
mov
add
push
xor
push
fidiv
gs
mov
out
shl
movs
inc
bound
aas
and
xor
xchg
mov
sub
dec
aas
xor
(bad)
sbb
push
(bad)
push
inc
or
mov
push
lods
mov
xlat
push
inc
fs
xor
xlat
lahf
call
lahf
dec
(bad)
cwde
outs
ins
sbb
sbb
cmp
pop
pop
scas
outs
pop
inc
and
cli
add
add
cli
xchg
jo
mov
mov
mov
jl
lahf
retf
xchg
sbb
cwde
test
retf
test
pop
(bad)
test
cwde
(bad)
test
enter
cmps
repnz
mov
retf
mov
int3
lahf
dec
jne
mov
iret
repnz
rol
in
rcl
pushf
retf
inc
ror
inc
adc
lahf
retf
call
fsub
fcomp
add
loopne
sub
loopne
call
lahf
retf
mov
lock
hlt
mov
loop
loopne
cli
adc
and
test
adc
jbe
adc
enter
cmp
xchg
mov
adc
call
sti
sub
pop
mul
cmc
add
sbb
in
stc
je
sbb
repnz
adc
out
sub
clc
cmp
loopne
clc
js
pop
adc
sub
call
mov
dec
jl
sbb
adc
std
adc
(bad)
adc
mov
push
adc
mov
rol
cld
jl
cmps
add
adc
sar
int3
add
test
adc
pusha
lahf
retf
or
fs
or
or
jl
js
or
sub
sbb
adc
setno
adc
jbe
fimul
mov
adc
outs
in
and
dec
retf
mov
adc
sub
push
adc
in
stc
push
test
inc
lods
hlt
inc
shl
dec
mov
inc
movs
ja
adc
jl
xlat
loopne
out
mov
xchg
adc
xor
mov
cmp
inc
aas
enter
aas
mov
ror
adc
inc
xchg
dec
div
aam
adc
adc
ins
sbb
cmp
lods
dec
adc
jbe
enter
sub
xchg
adc
mov
push
loopne
es
adc
sub
in
sbb
adc
xor
push
ds
dec
lock
pop
hlt
cld
and
(bad)
cmc
sti
hlt
arpl
test
adc
clc
jmp
repz
adc
cmp
in
nop
mov
and
or
adc
out
dec
mov
daa
ds
add
adc
es
stc
push
adc
sub
mov
scas
sbb
daa
sbb
clc
xor
int
jge
cwde
xor
and
mov
ret
std
fist
call
mov
push
mov
sbb
inc
pop
pop
jae
fstp
adc
lea
push
inc
mov
dec
add
not
and
pop
pop
mov
mov
test
jne
test
je
cmp
jb
mov
jmp
xor
ins
mov
dec
push
ret
add
mov
add
cmp
jbe
xor
or
(bad)
xor
pop
push
lock
xor
mov
mov
gs
inc
or
push
or
imul
loopne
inc
rol
add
sub
jmp
push
xor
ds
repz
dec
push
pop
popa
(bad)
cmp
push
jmp
mov
inc
push
out
jle
mov
sti
sbb
mov
jmp
mov
stc
or
js
lods
mov
or
jo
and
arpl
push
mov
clc
into
cmp
push
fidivr
sbb
(bad)
mov
shl
cmp
xchg
xchg
xchg
xchg
jo
js
xchg
xchg
xchg
xchg
add
nop
dec
jle
push
xor
repnz
imul
cld
and
mov
leave
jae
push
sub
jmp
inc
jp
mov
pop
sub
stos
push
mov
mov
lahf
jne
int3
jne
sub
lea
add
cwde
pop
adc
push
cmp
jnp
mov
sub
push
in
ret
sar
xchg
mov
sub
add
(bad)
jmp
data16
cs
inc
push
popa
(bad)
fist
add
mov
test
jne
cmp
je
pop
xor
cmp
(bad)
out
jl
cmp
xor
mov
push
sbb
in
jbe
clc
push
push
or
or
and
jecxz
sbb
lock
or
and
outs
scas
mov
inc
or
sar
or
mov
inc
loope
bound
inc
mov
push
adc
add
inc
fiadd
aaa
push
lock
or
and
pop
dec
cmp
or
jo
mov
shr
jbe
xor
pop
sbb
add
add
inc
jo
pop
clc
nop
fprem
xchg
(bad)
jae
(bad)
cmp
or
jne
movsx
cli
add
cmp
mov
inc
push
jnp
inc
or
cmc
outs
pop
cmp
cwde
push
sbb
cmp
jne
(bad)
push
mov
clc
xor
sbb
add
cmp
retf
aam
outs
mov
enter
hlt
shld
add
pop
cmp
bound
xchg
cld
jmp
mov
daa
fimul
jmp
add
sbb
and
xchg
dec
mov
adc
xchg
add
push
sbb
inc
hlt
sbb
dec
sbb
cmp
outs
xchg
add
push
add
arpl
lea
add
xchg
and
out
inc
pop
clc
and
and
mov
add
mov
jns
daa
push
cmp
inc
xchg
mov
and
mov
mov
xor
and
xchg
rol
xchg
and
cmp
jge
adc
sbb
cdq
arpl
add
adc
push
jmp
scas
pop
dec
rol
cmp
ret
mov
push
into
rol
mov
pushf
add
sub
or
or
mov
outs
jbe
sub
and
push
fimul
ds
cs
sbb
inc
add
lock
sub
pop
sbb
xlat
pop
pop
mov
call
cmps
mov
pop
test
mov
push
pushf
xlat
cmp
int3
push
xor
les
mov
pop
push
jne
cmps
sub
cdq
cmps
adc
add
fmul
add
or
sub
shl
loopne
xor
arpl
fimul
clc
fadd
icebp
int3
jmp
sbb
or
push
out
in
and
mov
mov
or
mov
js
jne
or
rcl
cwde
or
jne
or
dec
mov
dec
mov
shl
add
sub
sahf
push
mov
xor
pop
mov
psubusb
sub
pusha
mov
sub
add
cmp
cmp
xor
sti
idiv
add
inc
stos
jo
clc
push
pusha
cmc
je
xlat
adc
sub
loopne
add
(bad)
clc
cmp
lock
mov
pop
cmp
ficom
mov
and
push
in
and
(bad)
jne
pusha
mov
fst
add
or
scas
sbb
fmul
add
or
cmps
or
cmps
inc
or
test
or
fcom
dec
and
jne
xor
cmovp
jmp
xor
div
push
pop
xor
push
inc
jmp
sbb
(bad)
fwait
cmp
mov
dec
neg
sbb
xchg
movs
outs
inc
and
cs
pop
test
mov
dec
bound
pop
add
pushf
jg
mov
push
and
push
add
std
jle
push
push
xlat
clc
add
mov
int3
cmp
add
outs
aaa
lods
mov
js
or
ins
jne
push
jg
push
mov
jmp
aam
in
movs
add
into
mov
push
mov
rol
sub
cmp
lods
mov
mov
mov
jno
or
mov
ss
push
lock
or
adc
mov
mov
and
cwde
mov
add
pushf
inc
in
cmp
js
popa
aam
xchg
movs
in
sub
fstp
aam
pop
push
push
lods
fs
push
pop
cld
aas
rcl
and
out
iret
jne
(bad)
mov
adc
or
cmp
adc
pushf
cmps
mov
mov
adc
mov
pop
push
add
add
lods
push
popf
jle
ja
dec
fld
mov
xchg
mov
addr16
add
rol
jbe
add
cmps
mov
je
data16
mov
rcl
add
cmp
inc
sti
(bad)
andps
test
jno
adc
xor
shl
rcr
mov
clc
jb
and
ret
and
test
push
enter
call
std
ss
fbld
pop
bnd
in
in
outs
fild
sbb
and
sbb
shl
xor
adc
xor
pop
or
retf
dec
mov
jbe
or
test
sbb
and
ror
and
movs
push
push
mov
add
call
and
js
xor
das
pusha
popa
stos
lock
jno
mov
dec
fmul
test
mov
pop
nop
test
jnp
into
pusha
mov
pop
add
jno
inc
mov
dec
je
add
jmp
iret
push
data16
lock
push
imul
jl
test
push
pop
cmp
jbe
mov
adc
stc
cli
jno
adc
loope
pop
xchg
jbe
cmp
fnstsw
add
jg
adc
mov
shr
(bad)
fdiv
cwde
or
ja
mov
adc
push
xor
out
mov
or
add
push
movs
sbb
sbb
xor
pop
mov
mov
push
les
push
neg
aam
fs
bound
sub
movs
sub
dec
lock
sub
shl
(bad)
lock
and
cmp
pushf
sti
jo
in
imul
xchg
mov
sub
mov
(bad)
mov
arpl
ret
fidiv
nop
std
add
mov
test
xchg
ret
mov
cmp
add
inc
push
xor
add
scas
adc
dec
adc
stos
adc
inc
lock
push
jae
imul
mov
div
and
dec
inc
mov
jo
dec
pop
jae
push
data16
sub
daa
call
and
mov
adc
and
pop
push
add
inc
xchg
mov
mov
dec
retf
cdq
inc
fidiv
add
add
xor
loopne
mov
xor
add
add
mov
ins
or
mov
inc
sbb
or
ja
jae
cmp
push
cmp
dec
or
mov
push
mov
xor
sbb
cs
call
xor
cmps
jbe
fistp
fnstsw
adc
inc
arpl
jp
add
pushf
popf
sbb
jnp
or
jge
mov
loope
inc
jnp
add
pushf
jge
mov
iret
repz
mov
jbe
mov
mov
push
fsubr
pop
or
das
pop
jnp
or
rol
cmps
inc
int3
add
cs
mov
push
iret
jnp
fldenv
pushf
(bad)
rol
dec
scas
add
and
fistp
push
inc
adc
ins
mov
les
in
adc
pop
movzx
int3
(bad)
pop
add
add
ss
lahf
add
ret
add
sub
retf
pop
ret
in
add
sbb
jge
sbb
call
ror
mov
mov
sbb
mov
push
das
add
or
add
push
je
scas
(bad)
mov
xor
mov
xor
xchg
pop
xor
repnz
add
mov
xor
sqrtps
ja
aaa
add
test
add
test
add
in
adc
and
out
and
pop
int3
push
dec
fs
je
arpl
push
inc
inc
popa
jae
es
push
inc
jb
popa
(bad)
fdiv
jecxz
add
or
or
add
gs
in
xor
ins
jmp
loop
inc
push
gs
push
push
gs
imul
outs
jb
push
test
add
cmp
inc
outs
pop
arpl
test
push
mov
jbe
dec
enter
jne
test
sub
mov
je
inc
push
outs
fsub
and
xor
pushf
std
pop
push
inc
jne
cbw
xchg
xor
sub
outs
mov
cmp
mov
nop
cdq
add
rcr
and
adc
add
ja
jp
popa
jge
or
jb
ins
shl
fldenv
mov
inc
add
adc
push
push
sbb
int
push
jg
add
push
out
or
push
cwde
lds
lds
mov
out
ror
out
add
cdq
and
sbb
leave
das
dec
sbb
and
das
inc
xchg
mov
sub
fcomp
in
addr16
ja
imul
(bad)
or
inc
dec
mov
add
in
mov
ins
and
push
bound
push
popa
inc
add
in
push
push
in
mov
in
pop
mov
pop
pusha
push
add
(bad)
or
shr
in
and
mov
shr
inc
jo
and
es
add
shl
std
lods
cmp
retf
jb
outs
jae
inc
jle
inc
fs
pop
mov
imul
or
cmp
sbb
or
in
xchg
cmp
fiadd
iret
push
pusha
mov
ins
xchg
add
and
jnp
jnp
sbb
call
mov
stos
push
push
popf
sub
inc
jns
add
jae
shl
shl
mov
or
push
imul
inc
addr16
lods
in
gs
std
inc
mov
or
lock
lods
dec
jne
bound
or
loopne
imul
add
add
ja
(bad)
out
xchg
scas
push
jae
jae
fwait
or
jbe
jge
mov
test
mov
xor
je
and
inc
inc
dec
inc
sub
pop
add
adc
adc
add
loopne
xor
add
inc
xor
inc
jb
cmc
jo
retf
adc
ja
inc
inc
and
ins
jns
cmps
test
bound
add
or
je
outs
cmps
and
jne
test
or
ds
gs
cmps
jnp
jecxz
rol
out
add
popa
je
sub
(bad)
fdivrp
mov
popf
or
jne
fs
and
inc
out
call
sbb
cmp
dec
gs
push
mov
ret
dec
sbb
ins
cmp
jg
push
push
jns
add
jmp
mov
loopne
adc
adc
xor
xor
and
popa
sbb
rcr
push
sti
sbb
mov
div
call
mov
icebp
sbb
jo
sbb
fstp
sbb
pop
inc
(bad)
jo
dec
mov
pop
jae
imul
push
outs
mov
add
and
arpl
xlat
movs
ins
and
jg
mov
push
std
add
adc
mov
aad
xchg
pop
test
xor
outs
mov
scas
add
or
adc
fs
test
out
inc
neg
and
jnp
push
inc
sbb
pop
mov
pop
das
outs
add
adc
jbe
add
adc
imul
adc
jge
adc
mov
jp
in
enter
rcl
mov
ja
inc
lock
push
jo
dec
imul
or
fsub
ds
pop
inc
push
dec
rol
push
sbb
and
mov
mov
xchg
or
or
push
enter
bound
inc
js
inc
mov
adc
out
cmp
or
sub
add
rol
pcmpgtw
pop
sbb
sub
jb
ds
mov
call
lea
jge
and
push
inc
out
push
add
cmp
dec
add
push
cmp
call
cmp
jmp
adc
cld
lea
clc
push
movzx
les
out
add
or
sub
xor
in
pop
cmps
xor
ret
ins
pop
add
add
leave
mov
push
sub
mov
ror
add
cdq
cmp
mov
jp
inc
movs
add
jge
jmp
jne
movs
push
(bad)
mov
or
cmp
xor
sti
rcr
fadd
in
lock
mov
cli
mov
cmp
sub
cmp
maskmovq
test
jmp
or
cmp
enter
lahf
mov
mov
mov
dec
pushf
je
and
mov
cmp
and
loopne
in
add
aas
add
and
dec
fadd
mov
push
push
jg
add
sub
jl
out
sub
int3
sbb
mov
call
lea
mov
movs
add
pop
js
xor
aad
jg
stos
mov
nop
sar
jecxz
pop
ret
xchg
mov
ja
sub
add
push
xchg
or
add
sub
test
rcl
fist
cmp
jmp
outs
push
or
jle
shl
loop
adc
xchg
add
mov
cmp
(bad)
fbstp
mov
lods
mov
test
je
cmp
fs
iret
lods
add
jle
jbe
push
mov
mov
sbb
pop
xchg
jmp
sbb
loopne
cmps
push
mov
jnp
sbb
xchg
test
ss
jmp
shl
outs
aas
jbe
push
mov
jp
icebp
loop
dec
sahf
pop
hlt
jae
stos
inc
sbb
cld
mov
push
cmps
imul
mov
ret
mov
adc
or
sub
xchg
cmps
sbb
and
adc
inc
loop
pop
inc
push
mov
lahf
sbb
rcr
cwde
jbe
dec
ror
add
neg
loopne
scas
in
shr
dec
or
pop
nop
test
cmp
out
(bad)
imul
scas
sbb
adc
or
icebp
daa
pushf
daa
adc
push
or
fimul
loopne
pusha
and
xlat
inc
mov
dec
repnz
and
mov
mov
aaa
xor
cmps
jb
inc
mov
or
mov
out
pop
cmp
or
mov
jmp
add
or
adc
jmp
mov
inc
inc
ret
dec
push
ret
mov
lods
into
jecxz
push
popa
ss
or
adc
scas
in
icebp
loopne
push
ss
pop
je
xor
sub
jbe
dec
xor
jo
add
xor
mov
jp
sbb
jo
call
jo
dec
xchg
or
leave
sub
lock
sub
inc
xchg
aaa
add
nop
jge
arpl
xor
mov
dec
nop
jg
test
mov
mov
push
mov
mov
or
sbb
sub
scas
mov
or
popf
inc
add
cmp
xchg
enter
sbb
sub
push
push
xor
mov
lds
or
add
sub
or
fistp
cdq
sbb
mov
jp
cmp
jno
add
adc
sbb
cld
jbe
mov
xor
clc
in
sbb
pop
test
mov
popa
not
pushf
lods
inc
fcmovne
adc
xor
fdivr
adc
ds
jo
sar
cdq
cmp
fs
ss
xchg
bound
jno
xor
push
jmp
xor
sub
and
(bad)
add
cmp
mov
std
out
jg
xor
sub
dec
jge
add
mov
push
mov
mov
shl
fmul
test
mov
je
push
lds
fwait
jge
sub
mov
retf
adc
ja
xchg
mov
les
jo
(bad)
fisttp
push
pop
or
dec
push
outs
into
dec
repnz
add
or
or
and
popa
or
ja
popa
das
push
adc
cwde
pop
shl
mov
push
dec
xor
push
or
jae
mov
fidiv
dec
jbe
ins
or
push
sbb
jnp
pusha
data16
push
inc
push
push
cmp
fisub
fstp
mov
and
push
xchg
cdq
fldenv
add
cmp
das
sbb
sbb
(bad)
add
mov
sub
jg
enter
sub
dec
add
push
addr16
cmps
or
or
lock
out
or
or
ret
inc
daa
pop
sub
imul
xchg
push
xchg
es
das
or
push
adc
dec
pusha
pop
call
ss
add
push
enter
imul
mov
pop
ret
push
jl
cmp
fbld
aam
push
mov
pop
push
add
add
mov
into
inc
inc
inc
jno
das
xor
and
dec
xchg
aas
sti
stos
xchg
push
syscall
stos
(bad)
add
sub
lsl
sti
pop
add
xchg
js
in
and
lods
sbb
jge
ss
sahf
push
(bad)
mov
call
sbb
rcl
outs
outs
ja
xor
shl
add
mov
add
lods
fs
and
or
push
gs
outs
xchg
cli
cmovae
inc
outs
jne
sbb
pop
loopne
jae
sub
dec
fs
xchg
dec
add
dec
(bad)
jo
sti
ds
outs
outs
(bad)
push
ficom
dec
aas
bound
(bad)
popa
(bad)
jae
or
in
aam
pop
ss
push
cmps
ret
cmp
sub
or
adc
cmp
sbb
add
test
hlt
arpl
ja
sub
xor
or
or
std
add
push
jb
je
add
inc
pusha
jg
loopne
xchg
sub
ins
gs
cmp
cmp
or
cmps
xchg
pop
or
xor
jb
cs
push
ja
in
add
add
ins
sbb
or
(bad)
cmc
test
(bad)
test
push
dec
imul
xor
outs
inc
addr16
mov
cmps
pop
and
movs
pop
or
add
scas
mov
stos
les
shr
push
aam
jbe
(bad)
test
ins
mov
pusha
enter
clc
mov
js
pushf
mov
push
int3
(bad)
xor
push
mov
nop
adc
jo
mov
push
sbb
jle
out
adc
(bad)
lods
retf
in
push
jnp
sub
adc
out
neg
jge
pushf
push
(bad)
mov
ds
lods
int
test
imul
push
int3
neg
mov
add
loopne
es
scas
inc
xor
ss
lock
cvtsd2ss
fwait
bswap
ds
lods
or
unpckhps
movntps
mov
ds
movhps
pslld
xlat
cmp
psrad
xor
cdq
ja
xchg
das
xor
cmc
xor
sahf
nop
jmp
lahf
sysexit
add
retf
pop
xchg
repnz
dec
mov
add
mov
add
lods
push
dec
cli
shr
push
ss
mov
add
bnd
ucomiss
mov
pop
jle
jb
push
movs
mov
push
add
jmp
cs
sub
test
addr16
(bad)
sbb
inc
arpl
xor
pusha
adc
push
dec
cwde
or
or
cmp
xchg
or
dec
xchg
mov
push
add
fild
das
xor
sbb
jns
inc
mov
or
pusha
push
sub
scas
cdq
and
dec
jecxz
outs
or
push
sbb
jo
add
ja
adc
add
daa
inc
or
dec
sub
push
inc
jmp
jns
and
dec
shl
and
or
call
adc
and
loopne
lea
cmp
jnp
and
fnsave
aaa
lock
popa
inc
stos
lea
or
pusha
mov
and
call
or
push
add
add
push
or
jp
push
push
cwde
and
pop
stos
dec
in
or
imul
inc
(bad)
test
inc
push
xor
sub
or
in
add
or
mov
mov
push
or
mov
push
mov
mov
ret
sbb
mov
push
fisubr
inc
jb
jb
lods
xor
sbb
ret
mov
out
push
mov
push
cmc
dec
mov
mov
rol
pop
and
ss
push
add
add
test
add
lock
and
add
mov
sbb
lahf
pop
inc
outs
rcl
lahf
icebp
iret
dec
ficom
push
mov
es
inc
xor
popa
mov
adc
jecxz
inc
mov
outs
imul
jns
cmp
or
add
adc
movs
xchg
push
adc
mov
cmp
mov
loopne
out
rcl
inc
push
mov
or
inc
xchg
test
shl
pand
jmp
ffreep
cmp
sbb
dec
or
rol
or
mov
out
inc
sbb
dec
and
loop
inc
jo
and
es
xor
pop
dec
sub
dec
dec
in
mov
inc
mov
pop
pop
push
xor
add
cld
or
popa
jb
sub
push
pop
ja
or
jne
div
jbe
(bad)
push
hlt
push
pushf
inc
sub
ja
adc
xor
mov
out
pop
jecxz
adc
pop
mov
test
add
mov
aas
popa
sub
stos
jbe
push
jae
arpl
push
and
dec
xor
xlat
lock
mov
mov
or
loopne
sbb
add
test
inc
lock
xchg
adc
mov
outs
popa
bound
adc
mov
mul
add
sahf
cmp
push
pop
sub
inc
test
push
inc
mov
cmps
mov
push
adc
cmp
cmp
ds
je
mov
and
mov
mov
es
in
stos
adc
adc
sbb
and
(bad)
mov
add
popa
add
pop
shr
add
iret
sbb
add
and
rcr
mov
inc
inc
or
xchg
pop
out
pop
neg
inc
push
mul
cdq
rcr
outs
es
aaa
push
sbb
outs
jmp
mov
jo
loopne
pusha
xor
xor
sysret
repnz
sbb
push
and
pop
push
test
cs
and
cld
sbb
add
add
pop
push
test
sub
pop
jg
xor
sbb
add
aas
mov
cmp
jbe
mov
pop
or
or
xlat
push
hlt
loopne
ret
out
xor
add
pop
sbb
cs
pop
pop
stos
inc
outs
pusha
and
jp
inc
push
popa
add
add
xor
jp
popa
pop
imul
xor
fsub
adc
je
adc
clc
adc
movs
or
pop
mov
test
test
mov
inc
pop
test
sbb
in
adc
ror
scas
sbb
aam
test
and
out
push
cmp
or
ja
or
or
cmp
lock
gs
adc
fwait
push
adc
sub
jnp
test
mov
ret
mov
dec
add
xchg
or
out
out
jle
or
mov
or
adc
inc
xchg
push
popf
rcl
cwde
inc
mov
and
cmp
in
xchg
ret
pop
push
mov
add
mov
mov
cmp
mov
mov
hlt
jo
or
mov
mov
fs
push
lea
mov
fbstp
mov
cmp
test
data16
xor
add
adc
lea
sbb
out
jne
push
add
and
scas
mov
lea
gs
mov
out
sbb
add
inc
pop
retf
pop
inc
dec
xchg
add
or
(bad)
jg
jmp
push
mov
retf
ins
xchg
nop
or
retf
adc
lahf
xor
dec
call
mov
adc
add
sub
pop
or
data16
jb
data16
adc
lea
pop
ins
and
add
cmp
xor
mov
push
mov
mov
jno
jno
push
leave
in
or
jmp
xor
ins
push
push
sbb
into
or
das
lock
out
xchg
adc
sahf
cmps
fcomp
(bad)
clc
test
jne
ret
sub
jb
mov
pushf
call
test
(bad)
pop
jp
or
or
jecxz
cmp
xchg
mov
aaa
loopne
in
arpl
cs
mov
add
sbb
outs
add
(bad)
mov
dec
add
mov
and
fst
addr16
mov
cmp
or
pop
push
mov
xchg
(bad)
loope
lock
push
or
sbb
popf
outs
pop
xor
dec
mov
mov
test
xchg
mov
mov
jmp
inc
movs
push
jb
pop
adc
xchg
cli
xchg
adc
adc
xchg
push
cwde
cwde
inc
xchg
add
out
pop
fsubr
sub
and
stc
nop
sub
inc
ret
mov
rol
pop
clc
or
sub
dec
xchg
mov
movs
rol
dec
mov
and
push
cld
into
test
xchg
mov
and
aam
dec
xor
cmp
inc
xor
push
push
sbb
inc
xchg
popa
test
adc
add
leave
adc
lea
xchg
xlat
fist
cmp
sbb
xchg
jb
sbb
data16
ror
adc
xlat
push
test
jmp
cmp
add
push
xchg
push
cmc
mov
stc
xchg
pop
(bad)
mov
jno
jge
outs
jge
xchg
push
xchg
jge
(bad)
jl
aaa
jno
ja
sbb
xor
icebp
inc
and
test
bnd
push
mov
call
cmp
cwde
test
loopne
lea
das
ret
movs
sbb
pop
and
sti
jg
lock
jmp
cmp
je
push
mov
(bad)
pop
push
inc
adc
mov
popf
loopne
stos
imul
cmp
dec
jbe
inc
mov
stos
pop
pop
out
cmp
xchg
lds
xor
xlat
inc
loope
or
cmp
test
clc
mov
or
clc
mov
pop
xor
adc
jb
mov
fsubr
imul
nop
xor
mov
mov
dec
mov
mov
popa
clc
or
lea
mov
aaa
push
add
xchg
fsubr
cmp
or
xchg
mov
or
test
adc
and
rol
in
test
inc
inc
adc
push
adc
ret
xor
popf
lods
rcl
leavew
lock
jne
je
setg
or
cmp
repnz
lock
fsubr
fdivr
sbb
push
ss
mov
shl
aaa
fwait
adc
inc
mov
test
jecxz
jo
inc
mov
mov
adc
cmp
xor
inc
pop
or
into
push
sbb
je
dec
push
inc
lock
pop
idiv
mov
xor
sub
adc
test
lea
lock
jo
ror
adc
fcmovnb
inc
sub
jecxz
sbb
lahf
push
dec
lea
pop
hlt
sahf
push
push
cmp
inc
push
jo
cwde
adc
mov
add
adc
ds
inc
xor
lock
ret
inc
sbb
shl
call
mov
int
sub
mov
push
adc
retw
sub
or
xlat
mov
pop
dec
je
jmp
cmp
cs
sub
jbe
mov
adc
push
push
pop
or
mov
cli
add
data16
cmps
test
jne
lods
lock
sbb
pop
add
dec
movs
jb
inc
push
arpl
mov
shl
imul
push
lea
aaa
call
inc
mov
cwde
mov
add
dec
jne
popa
rol
dec
pop
hlt
fwait
jecxz
mov
add
fwait
cdq
mov
out
cmp
shr
pop
outs
in
test
popa
ret
jp
mov
(bad)
sbb
out
inc
call
sbb
in
dec
pusha
push
mov
push
push
inc
xchg
retf
clc
outs
jg
je
fchs
out
sbb
into
fsub
jmp
sub
sub
cld
(bad)
je
jmp
out
mov
neg
movs
ins
push
imul
adc
sub
nop
xor
lods
ret
test
sub
cmovae
das
xor
(bad)
and
sysret
add
xor
sar
push
cmp
je
cmp
test
mov
call
add
enter
test
(bad)
mov
hlt
loopne
sub
call
xchg
idiv
mov
pop
lods
lock
je
inc
mov
movzx
movs
push
pop
jmp
out
jne
test
outs
lock
xor
sbb
mov
dec
or
pushf
imul
xor
pop
jo
in
mov
fsub
call
dec
jmp
add
fwait
mov
pop
jns
in
add
fisubr
mov
push
and
jp
div
sbb
ins
stc
inc
ja
mov
cmps
loope
pop
and
in
aas
cmp
push
retf
cmp
mov
push
cmp
adc
cmp
clc
rol
mov
aad
pop
or
(bad)
ret
xchg
adc
sbb
test
shl
sub
sub
jno
stos
iret
adc
sbb
dec
push
mov
push
jmp
fucom
mov
jmp
or
in
loopne
test
cmp
js
pop
push
jb
fmul
jb
inc
cmc
(bad)
jecxz
aad
add
add
jne
stos
shl
jle
jns
mov
mov
cmp
inc
push
js
lahf
scas
leave
mov
das
popf
lock
pop
xor
mov
lock
das
push
ja
fsubr
ret
das
adc
cmp
je
inc
fimul
adc
pop
cmp
pop
test
mov
daa
mov
hlt
jmp
inc
sbb
cmp
in
sub
and
stc
xor
mov
(bad)
pop
movs
or
push
push
(bad)
loopne
aas
fstp
push
add
pushf
ja
call
push
call
or
shl
fwait
dec
je
mov
lea
div
loop
inc
je
sbb
sub
call
jns
mov
lock
mov
dec
xchg
jmp
dec
bound
loopne
dec
push
(bad)
dec
jg
adc
jne
mov
movs
cmp
xor
fist
call
add
jb
dec
push
and
mov
or
clc
pop
or
adc
test
test
(bad)
addr16
inc
outs
das
and
sbb
cld
sti
jo
cld
adc
jl
push
push
mov
inc
cs
clc
clc
xor
jl
out
fadd
stc
popa
inc
sub
jp
inc
into
gs
in
mov
test
pop
xor
sbb
int3
xor
cmp
mov
arpl
arpl
int
aas
mov
fadd
sbb
cmp
jb
ja
and
mov
call
(bad)
addr16
fidiv
test
or
mov
sbb
push
(bad)
jbe
aas
mov
mov
push
push
jns
jno
add
(bad)
or
int3
out
sbb
cdq
ins
inc
push
jmp
add
adc
in
cdq
ins
(bad)
inc
and
mov
dec
mov
mov
and
enter
test
jno
daa
fwait
shl
sub
hlt
aas
adc
inc
loopne
jo
xchg
push
lea
xor
jecxz
iret
aad
ret
jbe
mov
clc
jmp
fs
cs
hlt
sub
fcom
xor
xor
add
jae
mov
push
push
push
mov
or
sub
and
cmp
jp
xor
inc
clc
or
aaa
into
dec
test
jl
inc
scas
adc
cmp
jne
or
pop
dec
mov
clc
push
xchg
lea
add
jmp
pop
mov
sub
add
dec
jne
and
mov
pop
rcl
aad
xor
sub
add
pop
pf2iw
cwde
mov
push
gs
push
dec
sub
mov
test
and
sub
fcomip
mov
mov
mov
xor
add
test
jmp
mov
dec
mov
icebp
xor
retf
aad
lea
add
pusha
xchg
inc
inc
or
jmp
les
cmps
sub
lea
mov
cmp
inc
sti
and
seta
push
add
das
cld
xchg
push
(bad)
jl
pop
or
mov
add
shr
cmp
pop
mov
mov
adc
shr
push
(bad)
mov
dec
das
mul
mov
inc
setg
inc
push
push
or
inc
xlat
retf
dec
cmps
loopne
dec
push
ret
and
movs
or
or
add
lods
jnp
fmul
jo
adc
mov
cmp
test
push
xor
iret
pop
loopne
mov
push
mov
dec
fcmovnb
loopne
xchg
call
push
lock
rcr
std
add
in
imul
sub
fs
ret
pop
mov
or
push
or
xchg
and
xor
retf
and
xchg
xchg
lahf
mov
push
cmc
repz
xchg
add
test
ret
lock
jmp
sbb
inc
jo
sti
cmps
push
mov
or
cmps
sahf
push
ja
icebp
add
cmc
inc
and
push
push
mov
xchg
repz
mov
push
push
adc
push
or
rcl
inc
scas
mov
popa
add
out
mov
cmp
sbb
jp
xchg
out
pop
into
data16
or
pop
rol
je
and
cmp
les
mov
js
aad
cmp
jg
imul
fnstcw
cs
adc
add
in
or
add
sbb
pop
xor
push
lods
stos
push
add
cmp
mov
ds
or
adc
mov
(bad)
adc
adc
js
sbb
fdivr
add
fcomp
cmp
into
mov
rol
push
lea
cmp
and
push
or
iret
les
rol
test
cmp
pop
imul
loope
(bad)
ror
je
cmp
les
movzx
mov
inc
and
aam
shr
inc
popa
ffreep
mov
mov
call
rcr
scas
push
loopne
add
dec
jb
push
lds
push
lods
and
les
fsub
pop
ins
addr16
mov
pop
pusha
les
test
or
arpl
jno
jbe
xchg
adc
fld
mov
add
sti
outs
adc
call
inc
cmp
jne
ret
lock
add
aas
cmp
mov
call
push
pop
push
pop
mov
xor
outs
(bad)
frstor
sbb
les
scas
(bad)
dec
hlt
outs
out
jmp
or
loop
or
dec
xchg
sub
test
xor
ins
fs
scas
inc
(bad)
out
xor
sti
movs
or
les
adc
enter
adc
sbb
jnp
leave
mov
shl
(bad)
loop
ret
jmp
mov
arpl
outs
test
dec
adc
imul
push
sbb
into
(bad)
mov
pusha
xor
push
aam
sub
or
icebp
bound
call
sub
lock
xor
je
push
out
add
movs
jmp
add
and
pop
add
adc
add
mov
ret
inc
sub
in
(bad)
loopne
mov
or
das
sbb
test
ret
sahf
call
inc
add
add
xor
cs
xor
cld
add
xor
xor
add
add
inc
jo
sbb
inc
adc
jb
jl
dec
adc
sbb
xor
mov
add
fwait
mov
xchg
aaa
fdiv
mov
xor
jg
imul
clc
dec
cmp
xor
add
jne
stos
cwde
int
push
or
mov
add
lea
es
pop
int
popa
cmp
loope
pop
and
mov
sbb
sub
sar
lods
and
mov
xor
fbstp
mov
pop
nop
call
imul
add
add
jp
adc
rol
cmp
fs
mov
push
and
hlt
hlt
cmps
xor
pop
inc
sbb
mov
inc
pop
cs
data16
sub
lods
adc
jecxz
xchg
push
ret
push
sbb
sbb
mov
(bad)
mov
call
and
mov
pop
jmp
pop
aaa
jmp
or
xchg
add
(bad)
push
ror
and
push
and
mov
aam
aam
ret
jae
imul
int3
imul
lods
add
clc
mov
mov
and
add
sbb
pusha
adc
(bad)
shl
cmc
aam
push
out
in
retf
mov
pop
mov
call
xor
movs
add
push
pop
xchg
mov
pop
inc
ins
in
adc
hlt
(bad)
lahf
push
pop
mov
cld
pop
mov
jo
cld
sbb
shl
nop
adc
push
jno
mov
mov
cmp
xor
sbb
adc
mov
cmp
adc
pop
outs
cld
cmp
setne
xor
sub
movs
rol
mov
(bad)
int3
test
scas
push
or
add
add
and
(bad)
imul
mov
and
fld
test
loopne
or
xchg
push
mov
test
cmp
je
add
loopne
movs
cmp
mov
rcl
mov
lock
mov
push
cmp
jne
xchg
push
mov
sbb
pop
dec
sub
mov
or
(bad)
add
(bad)
mov
(bad)
ins
out
loop
rol
(bad)
jo
(bad)
movs
cs
scas
add
push
pop
ss
and
test
and
sub
fwait
adc
lock
push
movs
rol
xchg
jmp
push
mov
pop
out
out
dec
sbb
adc
mov
adc
add
psraw
inc
pop
(bad)
jge
call
adc
adc
ret
scas
sbb
iret
mov
js
push
lock
(bad)
addr16
ja
add
aam
daa
pop
repz
inc
jnp
dec
push
test
inc
add
imul
iret
mov
fdivr
inc
fcom
mov
das
outs
pushf
test
jbe
pushf
adc
adc
inc
dec
popa
jae
inc
jb
outs
jb
sti
das
clc
imul
ror
add
push
inc
dec
fs
outs
arpl
cmp
inc
or
je
and
inc
(bad)
add
or
push
gs
data16
mov
cwde
out
ss
inc
dec
sbb
adc
sbb
jae
dec
mov
mov
call
cs
xor
fld
pop
add
jp
ja
xor
movs
and
dec
or
or
dec
popa
xor
pop
add
test
add
or
add
iret
pop
and
adc
in
inc
lock
dec
add
pop
fsubr
push
shl
loop
rol
dec
(bad)
pop
jne
pop
sub
gs
imul
jo
(bad)
ficom
and
cmp
inc
dec
sbb
ss
ror
or
(bad)
into
mov
sub
and
test
dec
outs
je
pop
xlat
iret
and
sbb
add
push
pop
fs
push
loopne
mov
sub
sub
add
pusha
in
sbb
jnp
mov
movs
psubusb
or
cmp
or
jne
arpl
outs
int
ficomp
mov
add
sub
dec
out
fsubr
mov
arpl
xor
cmp
fcom
and
inc
gs
xor
mov
ret
(bad)
dec
lods
cmp
ins
jne
mov
and
add
push
push
dec
ds
sbb
sbb
ds
in
or
sbb
outs
outs
and
pop
div
add
stos
jo
jp
mov
stos
or
jo
pop
jne
and
fld
pop
add
push
enter
push
xor
enter
mov
cs
inc
imul
rol
sbb
xor
mov
mov
pop
or
int3
pop
push
inc
dec
pop
adc
jno
pop
inc
setae
pop
(bad)
inc
sub
cmp
sub
retf
(bad)
pop
sbb
mov
sbb
dec
int3
pop
inc
or
cmp
das
inc
dec
inc
mul
xlat
push
dec
push
out
in
aad
mov
outs
push
mov
pop
inc
out
add
pop
add
cmps
adc
cmp
push
dec
fidivr
mov
add
push
dec
mov
or
hlt
mov
or
inc
in
mov
push
inc
push
jg
out
add
or
pop
add
and
loop
test
arpl
das
push
jnp
into
mov
push
aas
sbb
stos
repnz
stc
fisttp
es
mov
adc
push
pop
sbb
mov
sti
mov
mov
lds
jns
xor
ins
ja
enter
inc
fs
add
jo
outs
lds
or
call
inc
ins
fsubr
out
dec
cli
addr16
pop
stos
mov
outs
inc
push
mov
xor
loopne
adc
test
mov
aaa
test
jbe
sub
ja
in
pop
aas
dec
push
pusha
or
pop
popa
imul
adc
and
fiadd
(bad)
adc
pop
lds
sbb
jae
test
arpl
sbb
ins
outs
addr16
inc
enter
pop
xor
or
inc
push
jb
dec
daa
jo
push
outs
sbb
inc
inc
js
jo
ret
loope
int
inc
push
imul
mov
cmps
pop
mov
and
pop
mov
adc
or
push
lea
sub
shl
jl
or
(bad)
inc
push
rol
loope
lods
scas
jae
outs
out
inc
dec
or
ins
add
push
pusha
add
adc
out
je
push
jmp
jmp
nop
add
sub
into
repz
fild
or
cs
push
push
add
add
enter
pop
repz
add
ins
xchg
add
out
pop
rcr
or
mov
adc
adc
mov
sub
adc
jae
or
cmc
or
dec
sub
jae
xor
jp
dec
inc
and
fild
ins
dec
arpl
lock
loopne
mov
fadd
xchg
ret
add
or
sbb
sbb
cli
seta
sub
push
or
add
add
stc
add
mov
mov
jo
daa
jl
sbb
lea
or
pop
in
jge
lds
enter
in
fidiv
fistp
mov
loop
repz
adc
pop
push
mov
xor
aas
ret
cs
dec
dec
dec
popa
jae
cwde
bound
test
and
mov
pusha
xor
test
movs
test
push
xchg
ret
pop
test
pusha
push
adc
dec
pop
in
sbb
add
push
arpl
push
pop
mov
mov
aaa
add
pop
jl
test
mov
inc
ret
xor
aad
adc
in
ss
mov
lea
push
inc
aad
jo
nop
pusha
(bad)
scas
ss
shl
and
cmp
push
shl
pop
lods
das
ror
dec
inc
or
or
mov
sbb
push
and
push
and
shr
or
push
or
fimul
jno
out
add
(bad)
pop
adc
inc
inc
add
repz
xchg
and
pop
xchg
jl
imul
int3
mov
ss
add
data16
cmp
hlt
push
mov
add
cmp
or
cmps
dec
imul
jo
shr
sub
in
jne
sbb
inc
add
sub
scas
std
and
jnp
scas
mov
add
add
pusha
push
add
dec
adc
aad
jo
xlat
mov
push
adc
push
sub
dec
aaa
add
jecxz
frstor
(bad)
loopne
mov
pop
ins
mov
mov
das
pop
rol
jns
add
add
pop
xor
pop
inc
mov
push
js
daa
add
mov
pop
push
setns
je
sbb
test
in
mov
xchg
adc
in
jge
dec
mov
ja
pop
retf
and
or
push
dec
jnp
mov
lahf
sti
aas
loopne
out
ror
jge
xlat
cmp
call
jno
pop
jmp
mov
mov
outs
mov
movups
fucomp
adc
xor
mov
dec
adc
ret
jae
fisttp
jmp
pop
(bad)
adc
int
mov
adc
in
unpckhps
mov
or
pop
ret
sbb
mov
push
sbb
mov
out
(bad)
mov
push
out
jbe
push
sbb
cmp
nop
mov
mov
lock
push
mov
mov
test
aas
cmps
andnps
and
repnz
enter
xchg
jg
and
sub
and
stos
and
jne
mov
push
daa
add
push
jg
pop
mov
je
sub
sub
bound
inc
arpl
je
pop
mov
add
test
inc
pop
bound
ret
mov
dec
cmps
push
pop
or
push
xchg
add
in
iret
add
movs
es
int3
mov
or
cmp
or
int
inc
imul
jmp
jmp
or
inc
outs
leave
shl
add
push
sub
outs
dec
iret
add
dec
xchg
sub
mov
sub
and
xchg
cs
jno
dec
cmp
adc
aaa
int
aam
outs
mov
aas
add
cmp
jnp
hlt
(bad)
ins
jo
call
add
pop
das
popf
mov
(bad)
arpl
push
push
ror
sbb
popa
jb
rcr
rcr
pusha
dec
outs
arpl
popa
scas
addr16
ror
dec
in
js
rol
dec
pop
cmp
jo
xchg
dec
popa
ins
or
ins
mov
inc
stos
ss
scas
ins
sub
inc
pop
xlat
or
fwait
add
(bad)
sub
sbb
pop
fisttp
push
inc
jns
add
sub
pop
sbb
xlat
or
je
outs
stos
loope
dec
call
push
mov
adc
adc
adc
jecxz
sub
sub
or
push
popa
ins
jne
jns
mov
sub
xchg
push
adc
mov
jo
pop
sub
loope
jns
cmp
jns
add
pop
fdivr
test
test
xor
push
cld
or
mov
xor
and
fsubr
dec
imul
outs
sbb
jmp
mov
inc
dec
inc
loopne
mul
xchg
push
push
push
mov
scas
or
mov
std
nop
push
mov
arpl
pop
add
sbb
jb
or
jmp
ret
inc
cdq
mov
imul
aaa
mov
imul
sbb
ins
les
and
jle
add
jne
mov
or
fiadd
push
stos
and
outs
push
out
icebp
sub
test
push
popa
cmp
dec
stos
cmp
xor
mov
sbb
adc
sbb
mov
js
push
add
ja
sbb
call
add
or
jmp
mov
pop
test
mov
dec
jbe
mov
mov
dec
push
or
add
push
and
lds
push
sub
or
push
push
test
std
pusha
movs
inc
adc
das
mov
cmps
fidiv
test
icebp
dec
mov
push
fiadd
test
and
les
ja
(bad)
in
in
pusha
fwait
adc
std
xor
enter
cmp
sub
fs
add
push
loopne
sti
fwait
nop
cmp
arpl
mov
std
scas
test
popf
push
xor
jne
test
scas
xchg
pushaw
inc
mov
push
adc
mov
ss
push
arpl
popa
adc
and
imul
jge
push
pop
inc
pop
call
sahf
fnstenv
adc
gs
xor
adc
adc
sbb
out
leave
pop
les
add
adc
cwde
adc
les
sbb
sbb
pusha
or
xor
das
adc
loopne
jno
or
push
adc
test
mov
sub
or
lods
and
je
or
jae
fsub
jbe
int3
jbe
dec
pop
or
call
inc
pusha
add
inc
es
es
(bad)
ss
(bad)
stos
xchg
not
pop
dec
gs
xchg
xor
and
add
jg
add
js
outs
popa
bound
popa
mov
push
ror
xchg
sub
and
xor
add
rcr
jno
or
jmp
and
sbb
dec
xchg
in
inc
stos
add
sub
jo
inc
mov
mov
mov
mov
pop
jl
xor
gs
bound
imul
mov
jno
and
push
pop
jmp
cmp
pushf
std
mov
or
inc
arpl
in
add
mov
add
inc
popa
je
sbb
mov
jns
jae
adc
sub
imul
adc
inc
mov
inc
add
mov
jne
pop
add
sub
sbb
into
call
push
jle
movs
or
fld
mov
aaa
mov
js
repnz
and
fisubr
add
dec
pop
in
or
xchg
add
cmp
push
inc
movs
sti
adc
push
and
add
sub
dec
loopne
lock
aas
xor
mov
push
mov
mov
rol
imul
adc
mov
mov
push
add
(bad)
xor
outs
out
jb
xchg
inc
sbb
sbb
pop
out
pop
sti
ffreep
nop
scas
add
test
je
or
push
sti
shl
(bad)
pop
dec
push
push
mov
mov
movups
mov
mov
xor
(bad)
jo
fs
lods
sbb
mov
sub
js
push
add
clc
cmp
lea
test
shr
inc
hlt
adc
push
lock
dec
(bad)
fst
or
push
mov
addr16
sbb
mov
cmps
aas
in
in
cs
inc
inc
adc
adc
iret
mov
push
data16
mov
outs
mov
pusha
ret
shl
push
add
hlt
pop
sti
xchg
mov
hlt
dec
dec
or
sbb
nop
jno
les
stos
push
sbb
sbb
aaa
sbb
shl
or
adc
push
mov
mov
pop
pusha
push
cli
push
or
sub
lds
cmp
xchg
mov
cmp
sbb
mov
daa
push
push
or
adc
mov
lock
mov
inc
sbb
xchg
iret
fld
push
push
push
aad
shr
sbb
mov
(bad)
das
xlat
inc
mov
push
fsub
inc
cs
pop
cmp
push
or
push
mov
lea
mov
ret
outs
pop
into
loopne
clc
mov
cmp
inc
sti
ds
es
pop
pop
xor
adc
mov
addr16
lea
or
popa
icebp
push
xor
out
push
push
or
ins
mov
dec
push
out
push
push
or
pop
cld
mov
call
jne
pop
das
in
cli
stc
ins
pop
mov
repnz
dec
or
xor
mov
push
imul
sti
push
add
lock
xor
ins
push
add
cmp
add
jl
inc
pop
in
(bad)
push
add
test
js
adc
and
ja
mov
fisttp
dec
jne
mov
jae
push
adc
xchg
arpl
cmp
fild
adc
in
and
rol
ret
add
dec
js
nop
pop
and
sbb
aad
or
jmp
mov
adc
out
or
fidiv
pop
loopne
leave
loopne
add
call
jnp
pop
stos
sbb
pop
jo
in
mov
neg
and
mov
mov
dec
push
mov
call
mov
cmp
or
inc
xor
jmp
mov
mov
jne
sub
leave
fsubr
in
xchg
xchg
xor
in
fs
clc
daa
xchg
and
sbb
sbb
sub
push
fiadd
je
push
mul
jecxz
pop
retf
cmp
add
bound
adc
pop
push
jge
lods
addr16
mov
das
adc
ret
jb
je
jmp
mov
cld
or
xchg
call
mov
push
aas
xor
pop
aad
push
mov
dec
jle
or
adc
test
or
adc
sub
int3
xchg
jo
or
cmp
dec
cmp
or
outs
or
dec
add
int
fstp
push
adc
push
add
mov
mov
aaa
mov
add
mov
shl
cmp
(bad)
out
aaa
imul
cmp
dec
mov
scas
lods
push
pop
mov
popa
ja
push
push
and
or
out
push
add
pop
xor
into
xchg
push
adc
outs
repnz
pop
sbb
daa
hlt
and
inc
or
inc
hlt
mov
cmp
sbb
and
fadd
push
adc
inc
rcl
cmp
ins
cmp
hlt
mov
sbb
xchg
push
lock
jecxz
mov
push
pusha
(bad)
in
or
mov
hlt
sbb
add
fiadd
sub
cs
fbstp
sti
popf
jg
in
mov
cmp
mov
ins
loopne
cmps
imul
(bad)
in
in
loop
fs
js
sbb
or
ins
les
pop
or
mov
push
and
add
int
adc
sub
sti
sub
ss
mov
pop
adc
dec
adc
cmp
adc
xor
(bad)
cwde
push
jle
xor
mov
dec
lock
lock
or
jle
sahf
lock
dec
fdiv
ins
cs
mov
pop
add
mov
aam
das
cli
xor
fiadd
xchg
shr
test
rol
push
push
pop
pop
mov
mov
push
cld
dec
pop
or
push
add
and
out
ficomp
xor
push
push
push
sahf
mov
cmp
repz
or
cs
repz
push
jbe
iret
repz
call
mov
ficomp
push
sub
ret
cmps
(bad)
into
dec
cmc
xor
movzx
or
sbb
xor
nop
sbb
aam
clc
and
loop
xchg
push
and
(bad)
ss
and
jns
and
inc
sbb
inc
xor
and
xor
shl
mov
and
mov
js
mov
and
ret
shl
and
sbb
imul
xlat
mov
jbe
nop
in
jmp
sbb
or
jmp
sbb
arpl
loope
sbb
sbb
(bad)
mov
sbb
xchg
cmp
jmp
sbb
lea
ret
pushf
push
cwde
pop
clc
xchg
sbb
loopne
adc
in
call
push
ret
rcr
pusha
add
inc
(bad)
gs
mov
or
jns
xor
lea
push
vmread
mov
or
test
aaa
add
mov
mov
loope
adc
jne
jns
jg
mov
mov
inc
and
retf
and
add
fstp
xchg
ret
idiv
dec
inc
les
cmp
lock
int3
mov
hlt
data16
jbe
xor
push
cmp
outs
and
in
out
adc
loope
xchg
adc
cmovo
pop
imul
or
xor
and
and
shr
inc
test
je
mov
(bad)
jmp
scas
add
pop
cmp
lock
cmp
add
or
jmp
imul
fndisi(8087
ds
adc
sub
add
inc
mov
mov
rol
ins
in
add
je
cmp
loope
inc
push
rol
mov
adc
shr
popf
cli
mov
xchg
ret
jno
jmp
not
mov
sbb
fiadd
adc
pop
das
aaa
jo
cmp
dec
mov
sbb
cwde
jl
push
adc
or
pop
ror
xchg
mov
cmps
je
jae
and
or
inc
into
or
jnp
outs
addr16
in
out
outs
push
inc
outs
outs
outs
arpl
sbb
movlhps
add
test
aaa
push
pop
cmp
push
ret
mov
gs
data16
lahf
cli
fisubr
mov
adc
mov
rcr
push
pop
or
ins
jo
outs
inc
lock
mov
add
push
or
aaa
inc
inc
adc
jbe
into
retf
es
add
dec
bound
add
data16
pop
jmp
mov
aas
push
jae
jb
pop
lods
mov
jge
int3
push
or
cmps
add
xor
mov
lahf
outs
pop
and
xchg
sub
dec
outs
ins
sbb
mov
cs
ja
mov
sub
xchg
stos
add
mov
or
ja
gs
push
cmps
add
mov
popf
add
dec
popa
js
and
push
jp
xor
cmc
data16
loopne
or
(bad)
out
and
ja
mov
or
jmp
je
add
sbb
movs
xor
push
adc
or
adc
or
test
in
shr
fmul
out
mov
push
scas
add
push
pushf
test
pop
add
jge
mov
jl
push
pushf
jge
push
dec
add
jl
mov
cmp
fisub
dec
add
xchg
add
lock
in
jge
adc
xor
adc
call
or
or
inc
mov
imul
fs
pop
clts
les
or
adc
hlt
add
adc
xor
inc
dec
outs
lea
in
add
dec
cmp
mov
cmp
and
(bad)
sbb
jo
pop
or
loopne
pop
add
add
daa
das
out
mov
lods
fcomp
nop
sub
push
popa
ins
add
jb
loop
add
sbb
cmp
adc
sub
jne
fucomip
push
push
adc
popf
movlps
or
xor
adc
pop
xchg
push
mov
dec
vpacksswb
add
aas
pop
test
daa
mov
pusha
xchg
js
outs
jns
add
nop
jae
inc
outs
frstor
inc
inc
add
das
and
lock
pop
dec
xchg
lods
xor
xor
xchg
pop
subps
mov
mov
out
or
jo
inc
pop
and
add
pusha
mov
adc
cmp
or
add
aas
call
adc
rcl
loopne
cli
jg
cwde
mov
mov
mov
and
mov
aam
sbb
inc
enter
test
jle
sub
cmp
push
lea
mov
(bad)
cwde
outs
push
push
xor
cmp
stc
(bad)
push
inc
shl
scas
push
cmp
pop
mov
shl
cli
jne
lea
sbb
mov
dec
mov
mov
add
sbb
leave
dec
cld
(bad)
cmp
mov
mov
call
jmp
push
fisttp
mov
dec
mov
cs
test
sbb
xlat
pop
(bad)
adc
das
js
fucomip
push
mov
ud0
dec
shr
(bad)
cwde
inc
jmp
fcmove
lea
inc
cmp
aaa
mov
fldenv
pop
enter
ins
(bad)
xor
add
bound
js
add
daa
cld
and
mov
mov
push
pop
call
test
jle
dec
test
dec
jmp
mov
mov
mov
icebp
jo
jle
dec
or
inc
pushf
mov
adc
mov
push
inc
cli
outs
adc
push
(bad)
mov
ret
ret
ret
add
mov
in
or
dec
adc
pop
mov
pop
mov
es
sahf
mov
in
pxor
cmp
adc
nop
popf
dec
push
test
mov
movs
pop
jbe
out
push
push
cwde
repnz
lock
in
jns
xlat
inc
sar
mov
cs
xchg
rol
idiv
jl
in
and
sbb
js
mov
shl
bnd
and
pushf
inc
dec
daa
adc
int3
sub
sbb
les
or
and
punpckhwd
inc
(bad)
test
and
dec
jo
inc
fnsave
inc
clc
jle
push
add
mov
push
pop
fmul
ficomp
movs
into
sbb
out
test
ja
add
out
mov
add
fdivr
push
inc
sbb
pop
mov
pop
das
outs
add
adc
inc
ins
jb
test
inc
sbb
fild
xor
xor
inc
js
jo
push
loope
jo
outs
cmp
popf
ins
and
in
pop
adc
pop
add
pushf
fist
clc
ror
inc
ins
outs
jae
push
outs
arpl
add
pop
sub
nop
pop
cmp
fs
dec
wrmsr
add
dec
addr16
fnstsw
pop
bound
inc
push
imul
pop
inc
add
mov
mov
add
sub
pop
cld
das
add
addr16
cmp
cmp
dec
outs
inc
dec
imul
je
mov
ret
pusha
das
(bad)
pop
test
pop
pop
cmps
les
add
pop
ror
(bad)
and
cmps
and
popa
imul
and
push
mov
pop
dec
arpl
adc
stos
cwde
adc
mov
stos
cmps
add
push
pushf
pusha
jno
jb
shl
xor
pop
sub
and
dec
mov
addr16
pop
divps
add
addr16
push
add
jo
xlat
addr16
and
pop
or
in
ss
or
adc
cli
pusha
add
sub
add
or
jb
adc
pop
xor
xor
mov
int3
psrld
sub
test
jg
hlt
inc
or
jo
dec
outs
je
jne
jo
adc
pushf
or
in
rol
vprotw
setp
pop
push
dec
dec
dec
popa
outs
fs
gs
pop
idiv
sbb
jo
outs
jbe
ins
imul
mov
jbe
or
pop
shr
add
rcr
inc
popa
je
push
outs
rcl
call
add
addr16
jbe
nop
sbb
pop
or
adc
add
test
sbb
hlt
xor
adc
addr16
add
addr16
in
jbe
fcomp
ror
xor
addr16
shl
js
gs
and
sbb
pop
je
jp
rol
sbb
push
push
dec
xlat
sbb
arpl
push
jo
jns
out
xor
mov
cmp
adc
cmp
pusha
add
into
xchg
jmp
(bad)
dec
mov
and
imul
pop
lock
neg
arpl
outs
clc
xor
fild
push
pusha
adc
or
add
pop
lods
sets
xor
sbb
mov
xor
jo
(bad)
outs
je
mov
jmp
inc
imul
xor
push
xchg
ins
push
cmp
js
jle
mov
leave
nop
pop
ja
mov
iret
pop
and
adc
in
adc
pop
sub
cs
push
jo
pop
adc
pop
test
cmp
jo
fmul
inc
popa
and
loopne
inc
push
xor
in
jg
adc
pop
call
out
push
ins
mov
test
jb
add
and
ds
ja
mov
mov
ja
add
jbe
fcomp
mov
mov
add
push
sbb
xchg
out
pop
inc
loopne
add
and
mov
xchg
mov
aas
add
inc
xchg
adc
push
outs
imul
lods
retf
mov
fild
xor
xor
and
jae
dec
fs
cmp
inc
ja
(bad)
nop
add
push
or
push
add
xchg
sbb
inc
mov
or
mov
or
femms
daa
adc
xchg
test
sar
adc
je
dec
gs
outs
xchg
and
cmp
out
cmp
inc
mov
push
add
adc
mov
das
pushf
xor
adc
clc
call
ja
pusha
push
pusha
nop
and
push
out
outs
lods
pop
test
inc
add
into
mov
loope
push
pop
inc
push
or
(bad)
adc
jo
pop
cmp
cdq
inc
and
ins
js
push
orps
sbb
imul
and
pop
inc
add
popf
dec
es
dec
add
dec
pop
and
and
pop
mov
hlt
sbb
movs
pop
ja
popa
bound
test
sbb
in
add
pop
clc
das
(bad)
scas
xor
and
push
lods
mov
pop
push
or
enter
fldenv
add
pop
aam
fimul
dec
add
inc
mov
popa
pusha
add
imul
add
jae
or
adc
movzx
jns
push
dec
and
loopne
jo
push
out
mov
inc
push
cdq
fild
add
test
or
cmp
push
add
add
sbb
mov
out
add
cdq
mov
loopne
inc
sub
inc
jo
rsqrtps
shl
xchg
inc
pusha
mov
dec
es
adc
sbb
push
xchg
add
sub
pop
add
or
inc
popa
or
jb
shl
xor
fs
pusha
into
xchg
cmp
or
mov
adc
fdivrp
pop
inc
or
add
inc
fimul
add
push
push
xor
aaa
or
ss
xor
add
xor
jge
cwde
loopne
add
jp
xchg
imul
xor
fdivr
push
loop
inc
xchg
call
push
dec
push
dec
inc
addr16
dec
push
push
cmps
jbe
data16
xor
or
push
ret
mov
das
pushaw
pop
mov
(bad)
mov
fstp
push
ss
xchg
push
pusha
ins
push
icebp
addr16
dec
inc
bound
aaa
gs
(bad)
arpl
jo
das
pop
rcr
mov
pop
setg
mov
xor
push
add
mov
cmp
sbb
adc
inc
bound
popa
jp
xchg
xor
xlat
cmp
nop
mov
data16
adc
xchg
jbe
out
(bad)
mov
cmps
mov
or
ficom
cmps
cmp
or
inc
mov
outs
mov
aas
dec
retf
or
scas
jg
adc
xor
pop
push
outs
push
add
sbb
push
or
dec
sub
(bad)
cmps
add
adc
xor
add
push
getsec
jne
inc
ja
inc
xchg
pusha
xchg
imul
loopne
ss
pop
imul
push
pusha
add
inc
fidiv
mov
inc
jp
add
sbb
sub
ins
addr16
or
lahf
push
inc
bound
mov
ja
xor
out
(bad)
mov
inc
or
mov
fild
add
and
xchg
cs
loopne
xor
xchg
mov
inc
mov
mov
rol
adc
push
xchg
out
ss
xor
data16
add
jae
sar
push
adc
cmp
push
pop
push
test
adc
addps
loop
daa
sbb
push
add
xor
add
cmp
mov
and
dec
mov
add
dec
ret
pushf
inc
jmp
mov
jo
push
add
add
inc
sbb
fidivr
sbb
xchg
ficom
gs
(bad)
orps
inc
xor
jle
movs
mov
sub
or
cwde
repz
iret
push
push
aas
or
and
bound
add
or
jg
test
out
jg
imul
mov
popaw
jae
add
push
inc
mov
inc
xor
adc
pop
push
inc
(bad)
jnp
dec
dec
or
das
aas
mov
dec
add
xchg
pop
push
inc
fisttp
and
inc
loop
xor
add
inc
rcl
adc
inc
fisubr
mov
jo
repz
jae
xchg
movs
out
sbb
mov
dec
dec
pop
add
xor
xchg
arpl
push
sbb
mov
aas
dec
loopne
pop
das
scas
sub
dec
add
daa
outs
iret
inc
add
sub
test
xchg
and
push
nop
cmp
addr16
out
inc
sub
(bad)
ds
adc
and
adc
cmp
shr
adc
ins
call
jle
sub
into
dec
cmp
sbb
xchg
inc
ds
add
push
iret
inc
and
mov
or
sub
pop
add
sub
inc
jbe
xchg
sti
cmp
mov
out
xlat
jbe
enter
xchg
add
ror
cwde
xchg
jmp
inc
cli
aas
mov
add
fbstp
inc
mov
push
mov
jmp
or
iret
ss
pop
ficomp
mov
mov
loope
push
bound
add
mov
scas
fistp
sub
add
dec
mov
ret
pop
adc
sbb
out
ins
adc
xchg
cs
xor
add
xor
scas
push
sub
cmps
push
xor
loopne
lea
addr16
pop
mov
jle
jae
sbb
repz
dec
dec
mov
pop
sub
int3
and
and
add
or
addr16
push
enter
pop
push
or
xchg
or
mov
add
push
and
pop
or
ds
add
push
dec
sub
out
push
aaa
rcr
(bad)
movs
movs
mov
stos
fadd
cmp
cmps
push
ja
sub
cs
nop
out
mov
mov
add
or
pop
ret
loopne
aaa
mov
inc
fst
or
and
aas
adc
jae
addr16
xchg
(bad)
push
pop
fsub
pop
(bad)
bound
fistp
popa
cs
pop
aaa
stos
pop
sub
and
aas
shl
push
pop
(bad)
imul
inc
xor
mov
idiv
not
add
ret
add
repnz
pop
add
int3
dec
stos
loop
stos
fild
dec
mov
aas
jae
or
ficom
inc
adc
pop
out
mov
or
adc
aas
xchg
cmp
xor
or
sub
or
div
jae
add
dec
fcmovbe
push
movs
xchg
loop
clc
xchg
xchg
jecxz
(bad)
xor
adc
daa
and
dec
out
pop
push
movs
sbb
loopne
rcr
jle
ja
and
push
and
mov
outs
ja
test
mov
add
inc
xor
sbb
pop
add
pusha
mov
pop
sbb
mov
dec
pop
dec
adc
nop
sub
add
pop
out
pop
movs
popf
sahf
aas
pop
data16
add
addr16
sub
xor
mov
gs
mov
outs
jne
push
cdq
adc
cli
cmps
add
(bad)
push
jo
pop
out
aaa
out
xor
mov
mov
scas
iret
pusha
sbb
popa
iret
xchg
outs
adc
pop
xlat
mov
and
or
jg
xor
pop
addr16
mov
pop
fist
push
pop
fadd
cwde
loope
das
ffreep
or
xlat
lahf
dec
arpl
call
je
lea
adc
cmp
addr16
xchg
lahf
inc
jmp
ror
and
(bad)
pop
xchg
dec
shr
mov
pusha
pop
(bad)
pop
aas
or
mov
jae
push
ss
(bad)
test
fidivr
or
xchg
mov
sub
dec
or
adc
(bad)
mov
add
bound
cwde
or
or
sub
dec
add
seta
seta
xchg
aaa
addr16
add
or
dec
push
imul
adc
shl
push
out
jg
or
mov
and
mov
add
or
dec
cmp
data16
or
mov
lods
or
inc
sub
xlat
cmps
add
shl
and
or
test
pop
fsub
xchg
or
cmp
fisub
mov
imul
push
loopne
outs
xchg
pusha
cmps
inc
dec
and
jae
pop
push
add
lods
add
push
dec
xchg
sbb
xchg
jg
fmul
mul
jmp
mov
and
add
ss
dec
sub
add
pop
pusha
dec
mov
adc
pop
das
push
fnstcw
xchg
outs
xchg
movs
test
add
aaa
aas
sbb
add
and
div
add
call
ficomp
push
inc
outs
dec
push
rol
popa
mov
mov
mov
dec
ficom
xchg
push
pop
push
sub
inc
pop
scas
sbb
sbb
push
add
iret
xor
div
pop
loope
daa
and
into
pusha
js
adc
ss
jo
sub
out
xor
pop
(bad)
adc
and
aas
aaa
sub
sub
lahf
inc
aas
xchg
pusha
dec
add
aas
out
sub
and
aaa
inc
add
gs
daa
xlat
adc
push
xor
jbe
test
dec
sub
pop
iret
xchg
call
fild
pop
or
(bad)
(bad)
pop
and
iret
(bad)
lahf
mov
inc
(bad)
dec
add
mov
inc
and
(bad)
out
bound
adc
(bad)
or
add
xlat
and
inc
xlat
add
sbb
les
out
and
daa
add
dec
add
jmp
and
mov
lock
aam
dec
rcr
jp
mov
mov
mov
out
adc
movs
shr
pop
or
or
jbe
js
and
jle
dec
sub
adc
inc
adc
adc
and
lea
sbb
pop
scas
test
and
sub
add
rcr
inc
movs
add
movs
and
cmps
jg
xor
adc
movs
scas
aaa
xchg
sub
test
xchg
sub
xchg
test
add
(bad)
(bad)
aas
pop
cmp
push
popaw
retf
push
ret
mov
outs
outs
fbld
pop
sub
cvtps2pd
xchg
mov
retf
(bad)
repz
scas
dec
lods
dec
xchg
jnp
and
xor
outs
inc
stos
shl
xchg
pusha
xchg
sahf
pop
out
pop
test
xor
dec
scas
rcl
inc
scas
dec
(bad)
int
test
int3
push
ins
out
xchg
out
sub
adc
out
rcl
dec
inc
pop
add
sbb
ja
sub
mov
sub
xchg
pop
out
pop
push
in
dec
inc
push
dec
push
pop
jmp
and
dec
lahf
and
lods
push
push
iret
daa
js
or
dec
pop
add
movhps
inc
and
cmps
mov
or
scas
push
xlat
mov
lahf
dec
cmps
ret
aam
out
or
aaa
out
mov
ins
dec
pop
dec
lea
inc
dec
and
out
xor
or
lods
xchg
mov
push
push
pop
pushf
sbb
into
push
out
sub
xor
stos
add
add
popf
(bad)
data16
mov
jno
or
jnp
call
pop
cmps
push
push
add
addr16
jns
and
iret
inc
mov
push
or
cmp
pusha
adc
cmps
vmptrld
test
inc
and
add
cli
shl
ins
add
adc
mov
xchg
xlat
out
retf
xor
xlat
cmps
mov
inc
dec
das
mov
and
dec
lahf
pop
inc
add
sub
cli
pop
sub
lahf
(bad)
inc
xor
out
sti
aad
add
aas
iret
out
push
lds
das
cmp
inc
and
mov
or
sbb
jae
mov
mov
outs
movhps
cdq
jbe
push
push
cmp
pop
xchg
and
or
aaa
sub
add
cmps
mov
push
dec
aas
dec
scas
and
movs
addr16
test
pop
push
cmps
stos
push
and
dec
inc
(bad)
mov
lahf
xchg
fadd
add
pop
inc
mov
test
inc
(bad)
and
shl
sub
mov
rcl
mov
pop
stos
or
pop
data16
push
addr16
jge
cmps
dec
push
or
xchg
not
pusha
shl
jmp
call
pop
add
(bad)
test
(bad)
xlat
rol
mov
mov
scas
daa
adc
or
xchg
out
mov
das
out
sub
data16
mov
cwde
fs
cwde
dec
pop
xchg
push
out
adc
inc
or
push
add
add
or
dec
test
mov
add
aaa
push
test
pop
inc
xor
adc
pop
(bad)
out
and
ins
adc
jecxz
jo
add
das
(bad)
pop
add
add
or
cmps
les
into
xchg
fbstp
mov
fbld
or
(bad)
iret
or
fs
arpl
add
aas
and
out
imul
pop
in
and
push
mov
and
mov
or
inc
xor
aas
cmp
cmp
shr
mov
pop
pushf
sbb
out
pusha
imul
adc
cmp
popa
sbb
aaa
test
aaa
pop
in
pop
imul
out
or
pop
pop
(bad)
pusha
add
outs
push
mov
cmp
push
sub
and
xchg
out
retf
jecxz
pop
data16
and
out
pop
outs
addr16
aas
mov
cmps
das
mov
push
jle
data16
test
(bad)
rol
add
popf
xlat
xlat
cmp
cmp
jecxz
sbb
ror
push
adc
mov
aas
fistp
xlat
sahf
dec
(bad)
mov
dec
or
mov
ret
dec
packuswb
add
or
pushf
loope
ss
pop
movs
and
aaa
ret
call
outs
pop
loope
ins
xor
outs
out
sbb
sub
add
fsub
inc
adc
or
and
mov
fstp
mov
outs
into
xor
mov
lea
push
retf
xchg
or
sbb
push
pop
dec
adc
dec
or
cwde
inc
scas
retf
and
add
scas
out
cwde
and
jmp
cli
inc
arpl
dec
cmps
add
dec
das
out
sub
out
sbb
push
sbb
daa
push
push
mov
xor
pop
cmps
iret
push
mov
loopne
xchg
push
fild
or
out
les
dec
scas
out
or
adc
or
jae
mov
out
pusha
nop
cwde
inc
das
out
dec
xchg
push
jmp
mov
mov
pop
jg
mov
cmps
inc
adc
add
ja
pop
pusha
aaa
data16
push
inc
pusha
or
inc
push
xor
inc
xor
rcl
sbb
and
push
sbb
pop
dec
das
sbb
inc
inc
inc
and
mov
inc
and
add
and
out
adc
push
xchg
mul
add
ins
mov
idiv
mul
jg
cmps
aam
div
sub
mov
xchg
mov
fimul
xchg
bound
add
test
xchg
neg
dec
ins
push
add
not
mov
(bad)
or
dec
xor
into
sbb
and
neg
and
jno
ins
push
lahf
imul
and
add
sub
out
inc
popa
test
xlat
or
not
pop
pop
and
xor
add
ss
ds
xchg
enter
out
(bad)
cmps
push
test
push
sbb
movs
movs
pushw
mov
repnz
adc
add
sub
and
dec
sbb
mov
or
or
bound
cmova
bts
push
test
or
jb
js
lods
adc
cs
lods
inc
push
add
mov
inc
xor
add
pusha
inc
mov
out
mul
mul
xchg
iret
push
add
pop
test
iret
inc
mov
dec
sub
mov
xor
daa
mov
aaa
popa
or
mov
push
xor
daa
iret
adc
xor
ss
sub
iret
daa
iret
mov
inc
or
and
iret
daa
mov
inc
pop
push
mov
(bad)
aas
test
call
xchg
pop
fsubr
test
mov
or
iret
mov
nop
bound
cmps
addr16
mov
sub
sub
add
push
mov
push
pusha
iret
aas
iret
and
iret
xchg
fadd
xor
scas
adc
rcl
xchg
pop
xor
xchg
aaa
cmps
add
mov
pusha
and
daa
inc
dec
ss
mov
test
mov
xor
lahf
fmul
inc
or
xor
dec
pop
and
or
sub
test
test
imul
movs
bound
sub
inc
push
cmp
fild
mov
or
rol
jmp
cmp
cmps
outs
cmps
or
popf
loop
xor
outs
cmps
adc
xchg
loopne
xor
fsub
xchg
daa
out
jmp
inc
pop
cwde
inc
pop
xor
pop
push
push
mov
mul
and
stos
or
scas
mov
(bad)
aaa
data16
or
pop
pusha
dec
dec
aaa
lahf
ja
adc
add
push
inc
fimul
mov
(bad)
jb
pusha
outs
adc
lahf
(bad)
arpl
pop
push
pop
adc
scas
add
pusha
mov
push
dec
repz
jae
dec
or
dec
cmp
dec
sub
rcr
lea
movs
and
out
or
add
adc
push
push
dec
or
push
inc
inc
lahf
inc
or
add
aad
sar
sub
pop
add
(bad)
pop
ins
and
inc
retf
adc
push
add
inc
xchg
ins
push
sbb
xchg
lds
inc
inc
cmovae
or
mov
sub
inc
(bad)
pop
inc
pusha
and
pop
adc
add
jnp
sbb
sub
mov
inc
ret
xor
ret
or
ret
pop
(bad)
out
xor
pushw
outs
push
and
lahf
data16
push
mov
or
add
sahf
push
out
daa
pusha
inc
mov
or
repnz
add
pusha
pop
add
das
sahf
ja
sbb
and
add
xchg
mov
push
inc
adc
fbstp
dec
ins
and
aaa
rcl
outs
aas
out
adc
outs
mov
(bad)
jo
out
ja
adc
cmp
dec
call
cmp
popf
add
sub
mul
fsub
sub
adc
inc
aas
xor
aas
inc
popa
popa
and
mov
add
or
or
dec
sub
xor
sub
xchg
mov
dec
daa
mov
add
inc
daa
cmp
adc
mov
adc
daa
and
push
and
add
inc
pop
sbb
or
and
xchg
sub
and
outs
mov
(bad)
daa
xchg
inc
inc
bound
mov
adc
push
daa
repnz
daa
nop
push
add
(bad)
xlat
pop
bound
inc
pop
pop
xor
xchg
pop
daa
cs
pop
add
xor
add
add
inc
pop
test
or
xor
daa
mov
add
sbb
(bad)
daa
test
adc
adc
daa
push
daa
inc
xor
sub
inc
daa
adc
imul
add
and
adc
jbe
and
das
daa
lods
push
nop
pop
inc
daa
and
inc
adc
and
daa
mov
pop
inc
outs
inc
jmp
sub
daa
outs
push
push
call
pop
mov
adc
ds
inc
mov
inc
push
dec
or
mov
dec
fcomip
push
push
ja
adc
lea
or
out
repnz
push
mov
test
inc
inc
mov
push
retf
mov
stos
aas
pusha
sub
dec
out
sar
pop
aaa
cmp
or
push
aaa
scas
mov
and
and
sub
aaa
inc
or
pop
loop
adc
cs
xchg
or
pop
sbb
jbe
outs
pop
movs
inc
adc
(bad)
add
sahf
div
inc
pop
push
es
adc
ret
outs
jno
inc
dec
inc
xor
push
add
and
add
and
inc
jmp
jnp
ret
sahf
push
jnp
and
xor
dec
(bad)
mov
enter
pop
cmp
mov
(bad)
xlat
out
pop
inc
sub
add
test
push
pop
daa
sbb
inc
or
adc
xor
test
fwait
cmp
(bad)
push
mov
cmps
add
sbb
add
add
out
outs
movs
sbb
aaa
lea
daa
inc
fcmovb
cmp
cdq
add
xor
mov
ja
xchg
xchg
rcr
iret
push
out
rol
add
enter
mov
iret
mov
or
dec
cmps
push
ins
mov
into
ds
cs
cmps
pop
aas
add
sbb
(bad)
xor
mov
in
scas
call
pop
pop
call
sub
or
and
js
data16
jecxz
or
(bad)
cmp
and
pop
adc
sub
mov
rcl
jnp
out
sbb
das
sbb
push
jo
add
test
xor
mov
mov
ins
add
adc
aaa
xchg
xor
aas
push
push
push
data16
inc
pusha
push
das
pop
addr16
inc
mov
mov
pop
ss
test
(bad)
mov
adc
rol
jb
push
loopne
pop
pop
add
add
fisttp
mov
cmp
(bad)
pop
cmp
jno
test
push
arpl
imul
ds
outs
mov
push
sub
pop
push
add
xchg
daa
pop
mov
cmp
scas
dec
add
inc
push
dec
push
push
mov
push
dec
cli
repnz
ret
test
xchg
dec
xor
add
jno
xchg
and
push
sub
and
push
xor
lds
mov
pop
adc
test
xchg
and
sti
pop
test
cmps
add
adc
or
push
xchg
shl
(bad)
xor
push
dec
jnp
adc
jo
(bad)
fist
jnp
repnz
push
or
pusha
jecxz
fbld
cmps
xchg
daa
mov
movs
jp
dec
pop
sar
lock
sub
test
or
sar
aas
cmp
aas
sub
adc
das
pop
das
or
sbb
adc
ret
push
sahf
mov
iret
ja
pushf
or
dec
bound
inc
ret
add
sbb
jg
(bad)
scas
or
pop
aas
xlat
inc
adc
dec
dec
mov
(bad)
aas
mov
xor
hlt
or
ss
fistp
xor
cli
scas
or
add
mov
mov
push
sub
add
pop
adc
out
xchg
cdq
inc
cwde
mov
mov
inc
and
movs
call
and
or
add
inc
mov
sub
mov
inc
test
inc
adc
cmps
add
ins
adc
adc
push
xchg
imul
mov
cdq
push
mov
jg
xor
jg
push
mov
inc
ror
push
scas
push
lahf
add
dec
ss
maxps
xor
aad
das
sbb
pop
pop
ins
sbb
ret
and
lods
xor
and
sub
add
ds
jg
rcl
ud0
ja
ja
bound
push
sbb
ja
pop
adc
pop
pusha
imul
push
lock
cmps
mov
scas
adc
mov
xchg
test
cmp
pop
mov
sbb
dec
pop
adc
fild
jbe
imul
cmp
push
ins
test
test
xchg
push
mov
add
pop
mov
dec
pop
addr16
or
pop
push
xchg
repnz
sbb
pusha
or
sbb
dec
add
mov
inc
jmp
push
scas
jbe
adc
adc
(bad)
jg
dec
or
pusha
add
add
cmp
sbb
sbb
sbb
(bad)
mov
push
pop
mov
and
mov
or
daa
enter
arpl
push
jle
adc
jmp
dec
imul
xchg
inc
pusha
xchg
aaa
aam
rol
mov
ret
push
pop
int3
cwde
fadd
mov
sub
scas
dec
movs
enter
fbld
fwait
xchg
(bad)
or
dec
xchg
add
aaa
rcr
pop
add
add
out
or
dec
loop
sbb
and
inc
mov
scas
aam
and
push
xor
cmps
scas
adc
sbb
inc
push
xor
dec
mov
xor
push
adc
inc
push
es
or
mov
fild
cs
ficom
inc
ja
out
pusha
inc
mov
es
lahf
and
lds
inc
pop
ja
addr16
sub
aaa
fbstp
xor
cmp
(bad)
mov
push
movs
mov
inc
push
add
add
lahf
ret
add
out
aas
ds
add
push
jae
xchg
out
and
push
mov
mov
add
xchg
jo
and
outs
xchg
aaa
add
adc
outs
or
sbb
inc
pop
xchg
nop
out
mov
mov
push
arpl
add
js
mov
pop
dec
adc
adc
add
adc
lahf
bound
pop
xchg
call
shld
mov
add
xchg
iret
inc
dec
in
adc
add
outs
xlat
push
rol
dec
arpl
movs
pop
and
iret
jo
pusha
mov
cs
push
pop
out
add
pop
and
movs
fisub
out
inc
push
mov
ss
inc
icebp
add
ja
and
push
inc
add
jge
lock
and
add
adc
sbb
add
out
xlat
jae
mov
rcl
maskmovq
test
movs
ss
cmps
div
push
out
stos
inc
add
out
or
pusha
out
out
add
xlat
out
add
iret
push
loop
jnp
mov
rcl
nop
cmps
or
xor
push
pop
iret
ja
jg
push
sub
jnp
(bad)
fst
outs
fcom
pop
push
pop
add
or
adc
dec
dec
dec
inc
inc
xchg
push
jle
xchg
fiadd
push
pop
mov
stos
mov
mov
xor
cmps
stos
outs
push
pop
out
out
jae
adc
mov
(bad)
pop
popa
mov
and
mov
inc
lea
div
xor
ror
mov
imul
inc
mov
inc
xlat
jg
sbb
push
bound
pop
push
jg
inc
aas
sahf
mov
and
data16
xor
jnp
cs
inc
xchg
inc
or
inc
cmovp
add
add
dec
out
jl
aas
pop
call
ret
add
push
cmp
(bad)
dec
sbb
push
test
mov
ret
add
dec
mov
cmps
dec
fld
test
(bad)
sub
loope
pop
int3
xchg
sub
xchg
dec
adc
mov
aam
bound
push
mov
mov
(bad)
lods
xor
dec
inc
mov
test
push
push
xor
popa
push
loopne
addr16
xor
and
aas
xor
ss
outs
aaa
jo
movs
or
aam
dec
scas
xchg
adc
mov
jno
pop
cmp
add
and
push
push
mov
ja
rcr
and
add
data16
sbb
dec
sbb
xor
ror
and
out
mov
pusha
push
das
ja
cmp
jg
push
and
aas
mov
leave
pusha
xor
add
inc
js
xchg
fadd
add
push
inc
and
mov
mov
pop
inc
add
add
(bad)
pop
aaa
pusha
push
or
jg
push
xchg
pop
xchg
add
dec
mov
scas
dec
cmps
ins
or
pop
dec
or
mov
pop
dec
movs
pop
and
dec
push
mov
push
and
adc
jbe
shl
cmp
jae
or
ins
adc
pop
data16
not
push
not
push
push
mov
xor
xor
mov
xlat
mov
call
(bad)
(bad)
(bad)
call
mov
jmp
inc
add
cmp
jne
mov
pop
pop
pop
pop
ret
mov
push
mov
outs
div
fisttp
call
add
jl
jb
nop
nop
lods
pop
mov
push
jnp
add
xchg
shr
cmps
std
imul
push
es
inc
add
push
dec
iret
repz
pushf
jge
mov
mov
ds
cmp
scas
fild
jbe
add
adc
cmp
(bad)
ja
xor
or
pop
add
inc
inc
fs
jns
gs
retf
add
push
pop
in
mov
cli
dec
adc
push
jb
push
frstor
push
or
lmsw
or
dec
outs
fwait
gs
es
push
inc
push
popa
je
mov
add
call
gs
(bad)
in
fstp
add
mov
adc
imul
bound
arpl
pusha
into
pusha
push
pusha
add
fwait
loopne
adc
jnp
sub
xor
cmp
in
jnp
xlat
or
dec
sbb
jb
imul
mov
outs
ins
jo
sahf
test
mov
(bad)
add
inc
or
push
inc
jb
xchg
popf
loope
push
dec
push
outs
dec
inc
jns
xchg
adc
in
xchg
pop
mov
add
pop
mov
call
add
sub
add
fst
or
fbld
sub
add
inc
push
or
(bad)
fst
pop
cmp
jae
je
imul
dec
cmp
dec
bound
in
or
test
or
xchg
in
sub
adc
mov
je
fistp
jmp
sahf
lock
mov
xor
mov
sbb
cld
jge
fcmovnb
inc
mov
mov
(bad)
jo
fs
pop
call
iret
dec
cmc
(bad)
cmp
sbb
add
scas
push
outs
fs
push
xor
lea
jmp
push
mov
mov
add
mov
test
fstp
pop
mov
ds
pop
or
mov
add
ins
imul
cmp
jne
fwait
(bad)
mov
pushf
cmp
out
push
(bad)
lods
mov
xor
jo
scas
inc
in
xor
push
add
rcl
push
aaa
clc
psubusb
mov
cmp
test
add
and
push
lea
cmp
mov
add
sub
adc
ss
repnz
adc
push
push
daa
popf
push
mov
in
push
repnz
hlt
hlt
push
sbb
popa
call
cdq
mov
jmp
adc
pop
jo
push
jns
dec
mov
jmp
jmp
mov
ret
outs
mov
jbe
pop
dec
push
scas
ret
ret
mov
ror
sub
jg
add
mov
sbb
fild
or
jno
pusha
ins
fneni(8087
ss
cmp
mov
outs
(bad)
mov
lock
jno
sbb
mov
sbb
aas
cmp
clc
jge
cli
push
inc
fidiv
ret
mov
pop
gs
cmps
and
loopne
push
push
sti
mov
lea
bound
push
cmp
mov
and
inc
mov
jmp
shr
lea
inc
ins
lds
push
ins
mov
mov
and
push
sub
aaa
xor
add
sub
sahf
or
pop
mov
fimul
arpl
dec
dec
fs
dec
dec
dec
push
dec
dec
dec
ins
ins
outs
outs
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
dec
dec
dec
dec
xor
ss
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
ds
dec
dec
dec
dec
and
and
jl
dec
dec
and
es
neg
fldcw
inc
add
mov
das
mov
push
idiv
pop
push
push
or
ret
fisttp
inc
dec
outs
popa
fs
jae
jb
ins
dec
push
std
mov
mov
dec
outs
inc
jne
ins
fs
popa
arpl
add
xor
or
fistp
(bad)
dec
dec
inc
dec
imul
inc
push
gs
jnp
pop
mov
pop
dec
into
sti
push
jb
jnp
es
mov
test
jns
mov
inc
jmp
imul
fisub
scas
sub
ret
adc
or
fsub
or
jns
jb
xor
imul
sbb
mov
js
dec
add
or
adc
outs
lahf
cmp
xor
inc
jl
cmova
loope
enter
cmp
nop
mov
popa
and
aad
out
adc
inc
gs
jne
cmps
sub
shl
dec
lds
mov
xor
xchg
loopne
pop
sbb
add
dec
cwde
inc
inc
mov
jno
jg
rol
je
push
dec
or
and
mov
inc
lds
add
jns
jne
xor
and
inc
add
dec
jns
popa
or
and
xchg
sub
mov
popa
ins
push
xor
dec
xchg
jo
ja
or
scas
imul
outs
imul
or
pop
jo
mov
adc
dec
out
fs
jne
iret
sbb
outs
lahf
push
mov
gs
ins
cli
outs
or
shl
xor
or
call
dec
push
push
push
fwait
mov
mov
out
repnz
dec
mov
pop
inc
data16
test
pop
aaa
jg
sub
pop
shr
imul
test
mov
mov
cmp
or
fst
lock
ret
call
adc
and
mov
dec
pop
sti
outs
jbe
shl
add
add
sbb
ja
pop
call
jg
mov
sti
movzx
dec
cmp
jne
cmp
test
push
inc
imul
fimul
push
fmul
fcmovnbe
cmp
fdiv
in
add
mov
jmp
pop
add
add
pop
xchg
cmp
or
mov
aam
loopne
or
rol
sbb
push
jne
mov
jmp
add
mov
push
js
add
jge
mov
ss
adc
or
mov
sbb
mov
adc
adc
mov
in
inc
stos
in
shl
cdq
mov
enter
lahf
pop
mov
add
jg
mov
out
cmp
adc
push
and
(bad)
les
iret
das
adc
fld
out
jge
rcr
xlat
inc
mov
dec
je
or
mov
out
mov
in
test
push
mov
fisub
mov
enter
(bad)
les
pushf
jo
xor
cmp
pop
mov
pop
mov
jmp
sbb
sbb
add
sub
inc
mov
mov
cmp
sub
jb
inc
(bad)
sti
and
inc
inc
iret
sub
and
inc
dec
jne
(bad)
int3
sbb
mov
push
je
push
call
push
clc
or
mov
jle
dec
push
ret
popa
cmp
dec
mov
test
std
mov
or
push
pop
out
mov
inc
jmp
mov
mov
les
sub
mov
ins
mov
loopne
inc
push
or
jo
mov
ror
bsf
dec
jne
xor
rcr
scas
dec
sbb
mov
adc
(bad)
stos
xor
mov
add
jns
imul
test
data16
jo
adc
inc
idiv
adc
fdiv
adc
xor
in
stc
clc
(bad)
popf
out
mov
mov
shr
arpl
test
mov
push
jle
cdq
ins
imul
(bad)
(bad)
outs
and
push
das
inc
hlt
push
lea
mov
hlt
mov
mov
aam
add
sub
mov
in
cwde
and
or
das
push
add
cmp
lods
ret
in
repnz
iret
cmps
shl
and
inc
jae
mov
ja
lock
and
mov
and
stos
pop
jmp
push
das
in
out
adc
xor
leave
(bad)
fisubr
lods
sar
jle
test
mov
pop
loopne
fisubr
fisttp
loopne
cmp
and
or
dec
idiv
pop
jle
push
hlt
inc
jmp
fwait
ins
fs
out
lock
leave
sbb
fsub
xor
pop
mov
pop
add
shl
xor
add
add
xor
add
push
inc
daa
pop
and
js
push
push
pop
mov
pop
inc
cmp
adc
xlat
mov
or
sbb
dec
neg
cld
(bad)
sub
lahf
sbb
cmp
js
imul
push
mov
mov
add
mov
fisub
out
xor
outs
sti
ds
shl
jl
jbe
aas
jbe
jae
mov
sub
sub
jne
xchg
shl
out
adc
cld
xchg
pushf
and
add
cdq
sbb
cld
sub
pusha
dec
ror
enter
dec
cmp
push
scas
sbb
fistp
adc
ror
cmp
cmp
sub
out
add
cmp
jge
or
sbb
nop
jmp
sbb
pushf
pusha
push
inc
inc
in
xchg
movs
(bad)
fcom
push
lods
in
pop
or
fs
jmp
adc
out
cmp
mov
inc
(bad)
sub
and
jmp
pop
xor
ret
jmp
ins
dec
jno
or
jl
sub
ds
mov
inc
shl
push
pop
mov
clc
mov
mov
in
cmp
jne
fstp
test
cmp
pop
jmp
sbb
mov
push
ins
push
imul
jne
das
adc
out
push
hlt
push
adc
leave
sbb
sbb
push
sub
sub
inc
fild
push
fimul
jb
and
mov
rol
je
adc
xor
or
pop
inc
push
pushw
xchg
(bad)
pop
fcom
in
jae
cld
sbb
xor
out
fucom
out
out
cld
out
or
sub
mov
sub
test
mov
inc
lods
lods
fcom
mov
dec
pop
inc
test
lock
clc
std
sbb
inc
and
fimul
repnz
sbb
ins
ret
jmp
sub
je
sub
shl
or
mov
push
push
fcomp
movs
jmp
adc
fadd
or
sbb
push
xchg
mov
or
cmp
jecxz
lods
mov
outs
daa
pushf
adc
xchg
pop
sti
xchg
mov
push
ficomp
pop
sub
mov
movs
push
xchg
inc
bound
daa
add
sub
push
mov
outs
pop
dec
add
sbb
jecxz
add
push
xchg
scas
or
ror
add
call
movs
loop
jmp
add
sub
push
mov
xchg
cmp
retf
and
ret
out
cmp
call
lods
pop
sub
jae
test
lock
cli
add
in
xor
shl
je
hlt
inc
cmp
add
sbb
jb
fbstp
mov
inc
cmp
add
call
cmp
jl
mov
into
push
mov
adc
(bad)
sub
and
or
sbb
add
xor
pop
add
mov
mov
inc
fidiv
(bad)
fisttp
and
loopne
sbb
fld
pop
pop
ret
push
sub
enter
les
and
mov
mov
repnz
sub
mov
in
xchg
adc
mov
jb
mov
or
out
xor
sbb
mov
mov
lahf
call
mov
push
daa
imul
test
and
dec
in
mov
daa
inc
push
mov
inc
ror
inc
cmp
xor
dec
out
xor
(bad)
int
mov
dec
mov
daa
and
daa
push
pusha
mov
pop
daa
(bad)
fisttp
and
dec
and
inc
pushw
retf
xchg
daa
push
inc
(bad)
data16
call
push
and
adc
push
pop
data16
stos
das
push
jae
and
xchg
and
xor
into
repnz
daa
sbb
add
push
int3
rol
ja
xor
dec
mov
sub
or
cwde
test
aas
xor
push
arpl
call
cmps
scas
pop
adc
movs
push
das
xor
inc
push
add
das
aaa
sbb
out
dec
aaa
test
push
nop
push
push
leave
mov
push
daa
call
push
das
call
out
xor
add
scas
(bad)
fild
aas
ss
adc
add
test
mov
push
retf
xlat
scas
(bad)
into
xchg
xchg
and
ror
jg
push
mov
test
je
mov
ja
mov
and
mov
mov
mov
(bad)
cmp
test
adc
mov
or
xor
inc
in
(bad)
jne
stos
ret
pop
inc
sub
mov
lock
push
pop
lods
add
shr
xlat
into
std
or
pop
pop
pop
js
fisub
inc
cmp
push
std
sub
mov
xchg
sub
push
add
and
jp
xchg
and
mov
push
cmp
shl
mov
jbe
push
div
push
ja
pop
cmps
aam
add
pop
push
add
pop
cmp
or
pop
sbb
and
pop
push
xor
xchg
rol
pop
(bad)
or
and
pop
pop
pop
pop
sub
xor
pop
dec
xor
inc
sub
dec
addr16
and
mov
loope
mov
and
push
inc
lahf
push
xchg
sub
addr16
test
or
xor
pop
add
pop
and
xor
(bad)
adc
push
pop
inc
shl
rcl
pop
sub
lea
push
scas
aaa
push
adc
inc
pop
ja
dec
mov
mov
dec
push
mov
adc
sub
sub
adc
push
(bad)
and
movs
xlat
pop
dec
adc
(bad)
pop
pop
sub
xchg
mov
and
push
(bad)
push
sub
jae
push
push
sbb
inc
cmps
pop
and
scas
dec
(bad)
pop
call
dec
div
ror
or
dec
xlat
cmps
dec
add
or
stos
(bad)
push
(bad)
push
adc
div
add
call
rcl
jg
push
xchg
ins
test
push
fist
add
and
addr16
jo
sbb
pop
pop
add
inc
test
mov
ins
aad
mov
not
outs
and
dec
pop
push
inc
popa
or
popa
mov
adc
sub
jg
inc
mov
rol
(bad)
pusha
or
and
bound
adc
push
addr16
(bad)
or
int3
test
dec
cmps
dec
jg
test
xchg
push
das
cmps
dec
dec
inc
cs
cmovg
lods
push
dec
lahf
add
test
cli
dec
ja
or
pusha
dec
out
add
sbb
das
jbe
cmps
stos
adc
int3
sbb
mov
pop
shl
push
pop
adc
ret
addr16
pop
leave
and
mov
dec
push
sub
pusha
dec
(bad)
ja
lds
push
inc
(bad)
push
adc
or
push
mov
push
dec
dec
push
movs
and
dec
dec
cmps
add
push
sbb
dec
lods
(bad)
test
add
cmps
dec
pop
ins
and
mov
or
mov
aas
push
cs
xchg
dec
pop
or
lods
mov
(bad)
into
dec
mov
jo
imul
mov
idiv
test
lahf
not
mul
lahf
out
adc
pop
(bad)
adc
add
mov
and
cmps
inc
or
movs
outs
push
lds
test
rol
outs
xor
je
mov
add
pop
dec
mov
mov
mov
out
ja
mov
inc
clc
xchg
mov
inc
adc
sbb
(bad)
and
sub
mov
shr
xor
push
add
arpl
jo
rcr
add
add
ins
cmp
mov
mov
clc
cmp
xor
jo
mov
jg
push
not
sbb
shl
push
into
push
jle
movs
iret
loopne
test
push
jne
movs
xlat
inc
enter
jnp
mov
mov
outs
dec
xor
inc
jmp
mov
xchg
fld
aaa
jne
cmp
and
gs
or
push
xchg
adc
xchg
push
and
cmp
popa
ror
pop
mov
fstp
fwait
cwde
add
xchg
(bad)
sbb
sub
adc
or
call
cs
xor
push
add
jecxz
cdq
iret
or
and
ja
test
add
and
pushf
shl
clc
stc
dec
loope
cmp
mov
push
cmp
fist
push
ins
les
fldz
fmul
fnstsw
sahf
jbe
out
out
or
mov
or
fsub
pop
out
or
das
adc
fsub
add
pop
dec
out
sbb
mov
idiv
pop
or
dec
xor
jmp
mov
movzx
movs
inc
clc
in
shr
inc
push
xor
add
fdivrp
fwait
fs
sti
jg
test
jle
cmp
jl
push
ss
push
fimul
push
add
mov
cld
lock
ds
pop
ret
mov
rcl
shr
xchg
jecxz
pop
mov
(bad)
pop
or
xor
sub
jmp
pop
movs
push
rcr
test
mov
cmps
xor
adc
cmp
lea
xchg
or
sub
jne
je
daa
adc
inc
shl
out
sbb
aad
in
in
es
mov
je
imul
and
push
mov
(bad)
ins
add
push
jae
out
jle
repz
pop
fild
imul
pop
jle
loopne
clc
cmp
inc
ds
hlt
dec
test
cwde
mov
dec
xchg
ss
pusha
and
sbb
push
inc
add
adc
add
jbe
popa
add
add
loop
add
add
idiv
ins
adc
pop
push
and
cmp
lds
mov
push
mov
mov
jno
sbb
not
inc
mov
jl
adc
out
sub
in
dec
cwde
jae
inc
mov
sbb
outs
neg
mov
and
dec
push
pop
je
push
outs
xchg
(bad)
neg
and
mov
add
xchg
pop
dec
mov
and
cld
add
push
xchg
jl
sti
mov
mov
les
test
mov
mov
mov
fcomp
retf
mov
in
adc
call
pop
mov
lea
mov
clc
add
or
fwait
stos
jecxz
jl
xchg
xor
mov
mov
and
in
in
or
jae
sub
or
and
call
or
dec
cs
bound
jle
daa
imul
daa
and
dec
dec
loope
dec
jmp
jne
outs
lahf
ins
jo
sub
retf
mov
daa
xchg
arpl
mov
sub
daa
sub
daa
adc
addr16
mov
xchg
dec
outs
and
jmp
daa
inc
test
jle
cmp
jne
inc
call
cmp
das
call
arpl
lods
and
sti
add
sub
adc
push
sbb
inc
jg
cmp
and
mov
test
inc
test
pushf
ds
pop
jb
push
pop
or
scas
loop
fmul
cmp
sbb
push
stos
shl
or
pop
mov
(bad)
in
jl
and
pop
mov
jb
push
cdq
out
aad
xchg
dec
in
pop
fcomp
pop
cs
lods
pop
in
mov
sar
daa
pop
lods
rol
pop
lods
cmp
dec
iret
jmp
mov
xor
push
in
push
scas
xchg
pop
scas
call
push
or
jbe
in
das
inc
aaa
jo
or
jbe
test
je
js
sti
push
lea
push
xor
mov
push
test
jne
loopne
add
jg
push
jo
je
(bad)
push
push
jbe
sti
(bad)
pop
jmp
cmp
outs
into
sub
cmp
push
fadd
adc
adc
sbb
push
mov
or
push
or
mov
mov
lock
push
in
repz
aas
add
sub
mov
pop
enter
hlt
cld
data16
clc
out
fadd
fstp
xor
fld
faddp
dec
fsubr
(bad)
sbb
mov
push
adc
pusha
arpl
ror
or
fcomp
push
outs
cmp
push
or
and
and
and
call
add
add
add
add
jb
jle
(bad)
(bad)
jg
add
add
add
cmp
add
pop
add
add
pop
add
jnp
mov
ins
stos
add
xchg
sbb
popf
or
data16
sbb
inc
push
push
xlat
mov
jne
paddw
add
mov
ds
push
fdivr
fs
cmp
pop
mov
fild
or
push
cmp
enter
add
and
mov
call
xchg
dec
cs
aam
and
cmp
xchg
pop
jb
rol
cmp
mov
dec
repnz
hlt
and
pop
mov
leave
and
mov
mov
das
and
ins
mov
xchg
xchg
pop
call
dec
cs
xchg
dec
repnz
xor
dec
pop
jb
test
sbb
das
mov
enter
jb
and
xchg
les
or
dec
cs
and
leave
and
rcl
punpcklbw
mov
xchg
pop
xor
cmp
push
leave
and
mov
enter
leave
and
in
xchg
pop
sar
and
xchg
dec
cs
dec
js
and
or
xchg
pop
jb
fs
mov
and
mov
fcom
jb
and
fs
xchg
pop
clc
sub
pop
xchg
dec
cs
mov
ja
lods
lock
xor
dec
xor
jl
mov
sbb
leave
dec
cs
sbb
and
pusha
leave
dec
cs
and
mov
pop
jb
in
push
push
cmps
pop
loopne
pop
mov
test
jb
and
dec
and
pop
sub
ins
lods
leave
and
mov
xlat
(bad)
pop
jb
add
pop
pop
jl
jns
and
mov
call
and
es
dec
es
test
leave
and
push
mov
loopne
sub
mov
cmps
pop
nop
dec
repnz
dec
int3
or
inc
jns
and
sub
xchg
dec
es
mov
mov
xchg
dec
es
sub
dec
repnz
pusha
lods
pop
pop
jnp
lock
cmps
pop
mov
in
xchg
in
sub
push
movs
loopne
xor
and
adc
xchg
dec
cs
pop
pushf
loopne
xchg
dec
repnz
pusha
test
es
in
cmp
xchg
dec
repnz
lods
sbb
test
das
cdq
in
pusha
ss
jnp
and
sub
ja
fs
xchg
pop
enter
and
lods
mov
inc
cmp
jb
jl
adc
lods
mov
add
scas
pop
pushf
in
ds
and
call
xor
js
and
inc
dec
cwde
dec
es
loopne
inc
ins
xchg
dec
repnz
lods
or
cwde
es
and
pop
xor
dec
or
cdq
in
xchg
rcl
cs
scas
lods
mov
inc
pop
fcomp
dec
adc
push
mov
in
dec
push
movs
loopne
dec
leave
and
in
xchg
dec
es
dec
sbb
xchg
dec
repnz
mov
mov
dec
xchg
pop
jb
dec
xchg
call
xchg
dec
mov
xor
pop
jb
and
in
sub
in
dec
mov
das
and
enter
pop
and
je
leave
and
push
cwde
xchg
dec
pop
jb
sub
and
adc
dec
pop
jb
xchg
fcomp
push
lods
mov
add
cmps
repnz
dec
scas
pop
xchg
fsub
leave
and
in
xchg
dec
es
pop
js
and
pop
dec
nop
dec
es
loopne
pop
push
mov
pop
push
lods
es
and
mov
lock
jns
and
pusha
in
dec
cmp
dec
cs
and
xchg
ror
leave
hlt
sub
das
mov
in
arpl
and
jo
cdq
in
xchg
cld
cmp
jl
xchg
dec
cs
sub
leave
and
lods
cdq
aad
cmp
jge
sub
xchg
mov
jmp
nop
je
dec
mov
mov
rcl
cmp
and
test
dec
and
sbb
add
je
aas
out
jl
mov
jae
aaa
add
mov
sbb
pop
retf
in
nop
push
and
mov
dec
test
jl
mov
fsubr
lea
inc
cmp
push
mov
push
cdq
push
jbe
and
pop
ss
mov
pop
jle
xchg
rcl
test
add
pop
add
adc
lea
lds
push
mov
sbb
or
jl
ret
pop
sahf
adc
sub
(bad)
adc
mov
jnp
fsub
iret
fild
dec
add
mov
pop
inc
fcomp
sbb
pop
inc
pop
add
adc
popf
jb
loopne
mov
popf
aam
pop
jg
and
cmp
test
dec
shl
clc
mov
xor
inc
int3
and
popa
cmps
nop
or
cmp
loopne
add
iret
(bad)
sbb
lock
push
in
xchg
arpl
cmp
cmp
jae
int3
mov
dec
add
lods
adc
sub
sub
ficomp
inc
imul
pusha
add
pop
xchg
imul
xor
add
jbe
xchg
add
add
cmp
lock
jp
ins
jb
fwait
outs
mov
xor
adc
data16
bound
data16
test
adc
arpl
es
imul
jne
neg
jae
xlat
adc
sub
mov
push
ret
dec
imul
push
or
add
push
ja
xor
mov
mov
and
sbb
rcr
test
pop
sub
test
sub
mov
das
pop
jg
and
push
pop
(bad)
sbb
mov
xor
and
adc
inc
pop
mov
test
jae
and
add
cdq
ret
push
xchg
addr16
mov
addr16
cdq
cdq
jmp
dec
cmp
adc
and
sbb
sub
mov
(bad)
out
push
adc
inc
popa
xchg
push
xor
xchg
and
lea
cmp
cwde
cs
(bad)
jg
or
fwait
pop
ja
test
daa
das
sub
or
pop
data16
pop
xor
imul
fadd
test
out
int
addr16
xchg
mov
inc
das
inc
add
repz
adc
sbb
ins
jb
dec
sbb
in
call
xchg
inc
or
xor
pop
loopne
cmps
je
inc
inc
add
aas
xchg
cwde
xchg
loope
xchg
adc
cwde
sub
push
cli
out
push
sub
add
scas
data16
xchg
mov
add
push
push
daa
ret
lods
adc
fs
into
not
xchg
sbb
int3
in
pop
mov
inc
push
adc
repnz
out
mov
(bad)
loop
push
(bad)
sbb
out
ret
addr16
das
imul
push
test
mov
imul
and
push
add
add
daa
retf
es
pop
movs
es
dec
pop
shl
das
mov
adc
stos
pop
daa
jbe
mov
mov
pop
mov
test
sbb
(bad)
out
repz
jae
jmp
(bad)
fist
or
sub
daa
retf
iret
cs
cs
data16
ret
jmp
push
inc
bound
inc
push
dec
outs
ja
adc
or
mov
ss
xchg
(bad)
daa
ret
push
stos
or
mov
mov
mul
call
fisttp
mov
inc
out
pop
push
lock
sub
push
xor
ror
add
das
add
push
add
pop
inc
sub
sub
pop
imul
rol
(bad)
das
push
frstor
pop
pop
jno
dec
jnp
pusha
arpl
sti
imul
enter
ja
xor
pushw
jbe
dec
in
sahf
aas
sub
push
mov
sbb
add
mov
sbb
sub
das
add
imul
xchg
and
push
out
fild
adc
pusha
pop
das
pop
neg
xchg
mov
or
pop
aas
aas
jp
adc
adc
aaa
add
inc
pop
mov
(bad)
repz
es
into
jae
test
lods
xchg
pop
mov
ror
dec
pop
rol
xor
jg
pop
or
dec
sub
gs
add
cmp
push
xchg
das
dec
adc
outs
out
xchg
and
in
iret
pop
xor
add
das
or
int3
(bad)
outs
inc
push
pop
ret
mov
inc
mov
pop
and
jae
push
cmp
jp
xchg
mov
gs
push
or
inc
ficom
cmps
(bad)
dec
nop
jbe
jg
adc
pushf
sbb
cmp
lock
push
sti
ja
push
lock
xchg
(bad)
(bad)
jle
ror
push
and
bound
sbb
adc
pop
inc
cmp
fsubr
pop
outs
mov
into
add
imul
cmps
pop
pop
mov
mov
dec
or
push
aas
outs
outs
push
and
and
sbb
mov
mov
xor
jg
cmp
fidiv
dec
or
(bad)
pop
sbb
xor
pop
cmp
cmp
sbb
sub
mul
imul
jmp
daa
add
cmp
sbb
retf
imul
cmp
or
sub
xchg
pop
sub
push
addr16
or
push
(bad)
fimul
and
pop
and
shr
pusha
repz
add
test
adc
shl
sub
fbld
das
sti
rol
jg
pop
ss
add
pop
push
fs
xchg
dec
push
xor
mov
mov
dec
add
inc
(bad)
addr16
into
(bad)
fcomp
imul
push
or
cmp
add
test
xlat
mov
xor
inc
test
pop
mov
add
or
imul
test
adc
mov
(bad)
lahf
enter
push
and
pop
test
xchg
mul
mov
inc
add
das
(bad)
out
stos
mov
add
inc
sbb
out
dec
sub
pop
push
fmul
pop
or
arpl
movs
pop
add
pop
scas
popa
pop
dec
in
call
outs
daa
stos
arpl
addr16
add
xchg
push
loopne
aaa
addr16
push
addr16
pop
retf
xor
and
push
add
mov
xchg
xchg
(bad)
or
loop
das
stos
add
adc
(bad)
mov
(bad)
dec
cmps
sbb
xchg
sbb
(bad)
gs
popa
out
pop
lahf
inc
jg
in
xor
aaa
scas
sahf
iret
pushf
pop
adc
inc
add
sbb
repz
scas
scas
pop
or
add
pop
mov
add
mov
pusha
inc
out
jg
and
push
mov
mov
stos
xchg
mov
and
inc
lahf
popf
dec
lds
and
add
pop
addr16
int
mov
add
mov
lahf
push
push
pop
sub
push
xchg
or
inc
xchg
inc
sbb
fwait
mov
cmp
bnd
test
sub
daa
jb
and
nop
inc
daa
lahf
daa
nop
push
lds
cmp
icebp
xor
inc
mov
ja
mov
stos
adc
scas
pop
and
outs
stos
xchg
jg
mov
rcl
adc
add
mov
rcl
int
cmps
dec
xchg
pop
stos
ja
sub
add
mov
inc
out
or
jnp
add
pusha
div
jg
fwait
pop
stos
jnp
es
sub
add
outs
daa
pop
add
mov
mov
inc
mov
out
xchg
mov
imul
mov
dec
(bad)
out
push
cmps
int3
ins
adc
jg
push
mov
inc
push
push
test
xor
iret
pusha
jo
mov
push
xor
ja
jg
add
dec
mov
ror
ss
add
add
iret
or
add
mov
scas
mov
fisttp
ja
and
mov
add
addr16
inc
and
inc
lahf
cmps
in
xchg
push
iret
mov
push
adc
inc
lds
jg
xor
or
daa
arpl
jb
xor
outs
pusha
jo
and
daa
retf
aaa
dec
lahf
dec
mov
jg
jmp
add
lahf
adc
inc
jg
cwde
dec
xchg
sub
cmp
add
das
xor
inc
mov
mov
ret
aas
jg
scas
adc
fs
and
xchg
fistp
push
xor
inc
out
scas
pop
sub
inc
xchg
(bad)
dec
or
inc
and
jg
cmp
mov
bound
mov
push
ror
sub
ja
scas
xchg
and
aaa
xchg
xor
inc
(bad)
jg
and
test
loop
stos
sub
mov
xchg
cmp
or
add
daa
fisttp
adc
ret
aas
jmp
fwait
pop
out
fdiv
cmp
pusha
je
test
icebp
push
scas
pop
or
dec
jne
sub
fimul
inc
iret
dec
sub
lahf
pop
xchg
push
scas
add
add
(bad)
xlat
cmps
jbe
cmp
test
and
mov
adc
ja
ja
dec
test
pop
adc
or
je
cmp
pop
adc
cmp
xchg
add
cmp
sbb
add
inc
and
pop
sbb
test
lods
rcl
pop
xchg
jns
pusha
jbe
push
xchg
inc
push
xor
xor
cmp
fnstsw
pop
(bad)
mov
shr
dec
jg
fiadd
movzx
jg
pushf
sub
repz
retf
mov
xchg
ror
sti
add
jo
add
add
imul
jbe
adc
jb
aas
into
or
mov
inc
and
pop
xor
jae
inc
mov
or
pop
lahf
pop
pop
test
add
dec
and
jg
outs
pop
sub
ja
ja
jae
mov
jnp
ja
test
or
mov
fldenv
xor
dec
ja
int
adc
es
add
call
mov
cmp
inc
mov
inc
call
(bad)
(bad)
aam
pop
out
scas
enter
aas
jmp
add
push
outs
jg
nop
xchg
or
movs
fcom
pop
xchg
and
jg
xchg
ret
xchg
int
stos
inc
cmps
jg
add
xor
sub
imul
ret
cmp
add
inc
inc
dec
test
sub
out
daa
bound
fmul
push
rol
test
mov
imul
cmp
push
loopne
xlat
fwait
pop
icebp
push
push
adc
mov
loopne
ja
cmp
sbb
test
(bad)
sub
add
cmp
ds
add
xor
cmps
les
or
cmps
xchg
dec
out
das
stos
pop
sub
cmps
fbstp
aas
xchg
and
or
inc
imul
dec
dec
jp
pusha
xchg
mov
add
dec
ja
or
lods
loope
jno
call
aas
(bad)
lods
call
enter
jg
add
add
xchg
pusha
scas
jnp
push
int
adc
scas
jnp
(bad)
out
jg
xor
or
push
aaa
jnp
push
inc
or
mov
cmp
xor
ja
(bad)
pop
rcr
dec
and
dec
js
rcl
ss
sub
lods
je
fistp
dec
push
inc
xchg
or
push
shl
xchg
push
sbb
inc
fcmovu
xlat
dec
mov
sub
inc
(bad)
xor
stos
out
nop
sub
xchg
pop
add
adc
push
or
xchg
mov
les
inc
adc
pusha
icebp
test
ja
iret
dec
icebp
and
cmps
sub
or
adc
inc
ror
pop
(bad)
pop
xchg
push
inc
mov
out
or
test
sub
and
add
adc
pop
dec
mov
in
inc
mov
and
sbb
sbb
sub
xchg
sbb
pop
scas
jno
sbb
mov
add
adc
jb
sbb
fisttp
fisttp
pop
add
lds
inc
mov
sub
xchg
out
mov
and
imul
dec
les
fbstp
dec
sbb
ins
iret
xor
iret
jnp
lods
fcomp
cmp
inc
pop
push
adc
xchg
xchg
dec
shl
(bad)
dec
cmps
xlat
dec
les
add
inc
into
xor
push
stos
mov
inc
xchg
ss
jmp
push
mov
les
dec
inc
push
das
iret
rcr
cmp
inc
scas
push
dec
cmp
scas
or
dec
dec
mov
and
dec
inc
push
inc
loop
mov
ffreep
fcomip
add
add
adc
nop
sub
sysexit
iret
mov
dec
add
test
(bad)
adc
and
ja
and
(bad)
jg
rol
pop
mov
push
mov
adc
(bad)
and
scas
sbb
cs
ja
xchg
ret
or
mov
call
lods
aaa
sti
jno
push
mov
sbb
mov
sub
fbld
mov
or
and
scas
jg
xchg
popa
xor
sub
mov
add
ret
arpl
inc
call
mov
popf
jae
fldenv
mov
pusha
outs
pop
inc
das
inc
shl
xchg
and
fdiv
xchg
mov
sbb
jbe
xor
jnp
xchg
mov
xchg
imul
aas
jo
xor
xchg
dec
in
pop
dec
or
push
pop
(bad)
jno
add
pop
and
xchg
(bad)
xor
cs
stos
outs
imul
sub
xchg
and
pop
dec
shr
xor
scas
xchg
xchg
nop
sbb
mov
daa
pop
imul
test
in
iret
inc
cmp
into
add
ret
das
fwait
push
and
sub
jns
lahf
pop
push
test
ss
outs
jnp
push
adc
push
mov
inc
xor
dec
pop
cmp
lock
pusha
or
or
cmp
xchg
pop
xor
push
lahf
lahf
mov
add
dec
jg
xlat
inc
mov
mov
add
push
push
xchg
test
aas
xchg
pop
xor
retf
adc
addr16
test
add
cmps
ds
add
mov
scas
add
push
sbb
fild
pop
mov
jbe
movs
mov
imul
or
jae
test
iret
jg
retf
adc
inc
rol
adc
test
daa
push
push
xor
inc
xchg
and
inc
out
dec
jp
test
add
push
inc
dec
lods
adc
fnstenv
push
mov
jg
xchg
test
pop
inc
pushf
rol
inc
mov
dec
pop
lods
or
add
pop
pop
mov
loopne
add
add
jge
lds
ja
add
test
mov
mov
fisubr
sub
dec
mov
dec
addr16
push
and
xlat
jnp
pop
sub
dec
sti
popa
and
jbe
inc
fcmovnbe
adc
loope
dec
mov
xchg
xlat
sub
sub
mov
iret
rdpmc
or
lods
test
(bad)
push
or
lahf
sbb
push
int3
retf
xchg
adc
push
sar
mov
pop
mov
scas
rol
sbb
dec
mov
or
and
and
inc
add
pop
test
cmps
ja
push
or
or
mov
add
adc
fnstcw
mov
mov
jae
inc
mov
(bad)
xchg
jge
and
sbb
or
test
pusha
test
adc
inc
push
xchg
xchg
aas
(bad)
fsub
or
sar
add
aas
add
pusha
and
sub
ficom
xor
push
mov
push
(bad)
mov
mov
(bad)
dec
or
dec
aaa
inc
inc
adc
dec
or
ja
movs
xchg
out
pop
mov
push
jmp
inc
pusha
push
das
xchg
cmp
arpl
(bad)
jle
mov
add
retf
xchg
cmp
jle
xchg
or
jnp
inc
push
pop
adc
iret
aas
jp
add
push
(bad)
retf
pusha
iret
or
adc
sub
arpl
mov
push
sbb
and
arpl
fidiv
stos
cmps
and
ror
push
fsub
pop
dec
cmp
pop
lahf
lahf
lahf
and
or
dec
mov
or
inc
push
pop
test
mov
or
dec
and
outs
es
addps
and
(bad)
and
ja
sub
xor
pop
mov
inc
ja
lea
scas
rcr
das
adc
add
movs
or
rcl
mov
cmp
pop
lahf
xor
sub
push
xchg
mov
sub
mov
addr16
push
dec
inc
fwait
mov
mov
or
loopne
outs
lahf
cs
or
xchg
dec
push
fild
or
loopne
pop
dec
jnp
sub
and
(bad)
pop
and
xchg
je
add
fild
loopne
sub
mov
sbb
or
aaa
xchg
adc
sbb
test
sub
arpl
push
addr16
push
call
inc
xlat
faddp
jge
dec
jne
cmp
mov
mov
idiv
das
fisttp
cmp
adc
daa
push
sbb
dec
inc
jnp
and
gs
ret
scas
pop
lods
xchg
and
fild
imul
pop
aaa
xor
cmp
jg
xor
push
jg
push
imul
sub
mov
popa
adc
fstp
aaa
push
push
daa
in
dec
mov
adc
pop
bound
mov
pop
ret
sbb
addr16
mov
dec
pusha
mov
mov
add
pop
and
inc
(bad)
xor
dec
add
cmp
sub
aas
sub
daa
xor
adc
sub
push
jg
dec
sub
movq
sub
push
or
push
lods
fld
push
jg
pop
or
mov
popa
jbe
scas
data16
bound
xchg
sub
mov
xor
pop
pop
cmps
(bad)
(bad)
(bad)
push
aaa
inc
mov
sti
xchg
outs
jecxz
or
(bad)
mov
add
cmovbe
or
(bad)
dec
or
test
es
or
or
imul
xor
daa
and
dec
dec
jb
pop
mov
push
fiadd
movs
dec
fbstp
push
push
and
mov
add
(bad)
ror
adc
push
pop
pop
add
push
cmps
xor
dec
inc
cmps
or
dec
div
lahf
fistp
cwde
movs
fimul
data16
mov
adc
arpl
sar
outs
push
test
ja
push
pop
inc
jnp
test
fst
enter
inc
test
ja
or
sbb
outs
mov
sbb
cli
ss
shl
fbstp
inc
(bad)
out
ja
mov
add
jbe
sub
add
and
and
xor
or
pop
xor
outs
pop
mov
add
inc
sub
lahf
imul
movs
loopne
cmp
bound
adc
in
dec
push
mov
mov
adc
cs
dec
xchg
(bad)
retf
pop
push
shl
sbb
xchg
call
sub
dec
xor
adc
inc
push
addr16
inc
or
xchg
arpl
mov
out
push
or
retf
inc
(bad)
pop
cs
sub
out
addr16
add
addr16
add
adc
xchg
arpl
test
pop
scas
addr16
gs
pop
das
pop
or
push
mov
mov
lahf
sub
es
sub
and
or
pop
push
sub
pop
xlat
inc
push
popa
jne
pop
daa
dec
inc
mov
inc
xchg
mov
rol
mov
(bad)
jg
sbb
ja
and
das
xchg
dec
daa
sbb
cmc
test
ret
imul
push
inc
add
add
or
inc
stos
js
fbstp
mov
xchg
and
xchg
and
loop
push
loopne
add
ja
dec
or
push
pop
pop
es
inc
or
mov
imul
cmp
add
push
pop
pop
fadd
fwait
data16
or
inc
push
repz
out
or
add
fadd
jnp
mov
dec
push
inc
adc
(bad)
add
arpl
mov
xchg
(bad)
dec
shr
pushf
dec
cmps
(bad)
call
sbb
push
mov
and
push
push
push
mov
mov
mov
mov
pop
or
rcl
push
mov
lea
mov
call
jg
(bad)
mov
shl
add
add
jne
test
je
jl
div
mov
add
loopne
sbb
pop
imul
enter
push
xlat
cmp
jb
cmp
shl
in
mov
push
mov
jnp
pop
loop
cmp
je
lea
mov
in
fnstsw
cld
mov
adc
or
push
pop
inc
in
into
ins
fidiv
sbb
ficom
repnz
sbb
mov
mov
loopne
int3
pop
pop
pop
rcl
or
ins
ja
pop
movs
dec
mov
mov
cld
jg
ret
mov
jl
jmp
pop
pop
pop
mov
pop
ret
call
push
cmp
mov
dec
jnp
out
mov
mov
call
pop
mov
das
mov
push
and
call
retf
sbb
lock
push
push
mov
push
add
mov
and
fisub
das
sbb
movzx
sub
push
fadd
mov
rol
scas
ret
xor
pusha
pop
in
mov
lods
pop
inc
outs
mov
inc
push
mov
lahf
std
jmp
pop
pop
(bad)
push
test
je
add
cmp
loopne
dec
icebp
(bad)
mov
pop
push
mov
ret
les
add
adc
fadd
pop
jge
mov
sar
pop
sub
xlat
push
lahf
sbb
lea
sbb
cmp
das
mov
add
mov
adc
xor
mov
inc
data16
fld
mov
pop
xor
rcr
sbb
mov
and
jmp
inc
pop
pop
mov
xchg
test
cmp
ins
xor
push
add
sbb
mov
mov
outs
lock
xor
cmp
jne
jae
push
pop
xchg
xor
clc
xor
pusha
sbb
or
arpl
mov
sbb
in
jl
adc
(bad)
(bad)
(bad)
sbb
call
add
push
sbb
push
daa
push
jp
lea
(bad)
loopne
addr16
stc
xchg
jo
adc
loop
in
shl
push
add
xor
arpl
mov
es
mov
adc
std
push
paddusw
test
sbb
mov
int
mul
or
mov
xchg
sbb
nop
sub
push
inc
sti
loopne
rol
sahf
retf
dec
mov
push
outs
add
inc
fcom
push
loopne
fadd
add
fsubr
loopne
outs
out
dec
pop
push
aam
repnz
jne
test
in
fistp
mov
call
push
mov
int
pushf
fdiv
out
cmps
add
loop
add
xor
inc
xor
mov
ins
sub
ja
(bad)
push
adc
pop
jo
cmp
sete
ins
mov
jmp
call
in
jne
push
lea
ret
stos
lods
mov
aas
push
inc
push
mov
mov
push
cld
add
fsub
outs
inc
ja
adc
push
not
mov
add
adc
scas
xor
scas
add
or
or
push
mov
(bad)
add
xor
mov
or
dec
jecxz
add
(bad)
out
xlat
push
xlat
dec
cdq
mov
xor
cmp
mov
mov
cmp
adc
add
pop
sbb
cmp
add
jne
cmp
jne
aas
push
nop
rcr
sub
sbb
jne
dec
in
pop
enter
pop
pop
jl
(bad)
cs
mov
retf
imul
jge
mov
push
repz
mov
xchg
mov
fwait
loopne
or
movs
lock
pop
mov
mov
(bad)
jo
add
fwait
enter
xchg
in
in
push
jge
dec
adc
in
test
lahf
sub
outs
mov
call
inc
jmp
sbb
movs
popf
rcl
(bad)
jmp
fcomp
cdq
sub
movs
cmp
push
mov
lods
jo
sub
rol
ret
push
push
test
scas
push
adc
xor
mov
mov
lods
xor
shl
jb
sbb
inc
xchg
sub
jge
jb
xlat
sub
dec
imul
gs
and
call
cdq
mov
cli
mov
sbb
das
mov
sbb
push
cmp
pop
add
and
cs
add
push
es
xlat
int3
push
add
call
mov
pop
push
and
jne
(bad)
push
pop
mov
sti
jge
pop
mov
js
pop
jnp
inc
jne
xchg
rcl
test
sbb
jae
retf
rcr
dec
hlt
or
nop
in
push
jge
hlt
(bad)
enter
ins
add
fadd
push
retf
das
or
and
(bad)
jno
sar
jge
mov
cmp
xlat
push
int
add
dec
les
clc
jge
add
aas
jne
push
sbb
popa
outs
push
fsub
in
dec
cmc
mov
lea
mov
mov
hlt
sub
rol
mov
add
mov
add
jle
jo
std
or
inc
cmp
ins
outs
dec
mov
jno
jne
pop
add
jmp
dec
in
inc
jmp
xor
jne
adc
mov
mov
pusha
add
or
sub
mov
dec
and
in
test
mov
inc
(bad)
or
lock
ins
jo
sub
sub
inc
lock
clc
pop
jmp
cmp
mov
sub
jb
je
sub
push
sti
jo
fist
cs
jbe
movs
lahf
ds
pop
shl
mov
xchg
call
dec
popf
std
sub
add
fdivr
sbb
lods
inc
sub
sbb
int
add
add
mov
stc
mov
ins
lea
aam
test
dec
mov
test
xchg
shl
or
adc
test
and
push
mov
dec
in
jne
sub
or
je
adc
or
mov
cmp
retf
pop
sti
mov
enter
cmp
ret
sbb
dec
mov
cmp
add
call
paddusb
aam
(bad)
in
ror
fs
jns
loopne
xor
and
loopne
lock
inc
xchg
pop
sub
call
mov
shl
das
jg
sub
jb
dec
loope
add
aad
into
sbb
xor
and
and
jmp
in
mov
push
cmp
(bad)
repz
pop
add
repnz
jle
mov
mov
inc
loopne
pusha
xor
shl
cwde
aam
xchg
xchg
pop
das
jne
ins
pop
lds
and
sub
or
or
js
js
or
mov
out
sbb
mov
test
mov
and
mov
push
shl
ror
mov
mov
sbb
aaa
jmp
fstp
aam
jne
push
movs
test
pop
imul
or
xor
call
xor
add
mov
xor
mov
inc
pop
data16
jns
js
mov
jne
test
and
sbb
add
shl
movs
ret
jmp
or
push
test
lds
xchg
in
sub
lock
jbe
adc
retf
push
xor
mov
add
lds
sar
dec
je
mov
inc
retf
inc
les
bsf
in
in
mov
lods
lock
jns
push
jg
sub
lods
stos
push
imul
jecxz
les
add
(bad)
clc
sbb
push
cmp
adc
cli
loope
and
lea
push
clc
mov
push
cmp
cmp
or
add
fdivr
adc
inc
lock
inc
pusha
icebp
jle
test
mov
add
sbb
test
or
mov
mov
or
push
loopne
push
test
cmp
push
shr
and
and
sub
and
loopne
sub
jecxz
sub
pop
mov
sub
adc
shr
enter
push
mov
sbb
(bad)
mov
stos
rol
mov
pop
jno
push
mov
xchg
or
add
loope
fstp
pop
dec
(bad)
mov
repz
push
jae
mov
fwait
in
fidiv
xchg
xchg
or
mov
lods
test
inc
ins
add
ss
cwde
fbld
adc
add
xor
call
je
xor
out
sbb
adc
jmp
mov
add
ja
sub
loopne
(bad)
push
mov
hlt
mov
hlt
jns
fstp
add
sub
xor
iret
cmp
inc
add
out
inc
sbb
jbe
js
xlat
js
shl
xor
or
xchg
sub
adc
lds
push
or
cmp
ret
jp
dec
jmp
adc
dec
mov
sbb
pop
pop
or
in
mov
add
mov
or
jg
xchg
fild
seto
in
xchg
mov
rol
dec
in
pop
add
add
mov
inc
mov
nop
mov
cmp
push
mov
test
push
mov
push
ret
je
or
inc
scas
and
mov
cwde
fsubr
mov
ins
(bad)
xor
aad
jne
inc
mov
jmp
stc
fild
mov
daa
jle
rol
sub
fadd
fdivr
test
jbe
jo
or
hlt
in
ja
push
push
(bad)
fwait
in
xor
mov
test
in
add
mov
and
pop
sbb
sub
cmp
xchg
nop
or
aas
jo
ss
xchg
aad
xchg
cmp
mov
mov
push
aad
mov
adc
movs
call
daa
adc
add
in
add
mov
sub
mov
add
add
push
enter
jne
test
outs
sub
add
add
add
push
or
bound
dec
data16
add
and
or
outs
push
add
adc
je
jne
jbe
ja
js
jns
ror
inc
cli
or
or
inc
add
dec
add
inc
and
dec
dec
test
ror
xor
es
scas
push
pop
or
push
add
pop
dec
pop
add
add
or
(bad)
inc
xor
xor
xor
add
add
add
dec
out
cmp
out
add
data16
sahf
das
xchg
and
push
das
adc
and
scas
sbb
push
mov
lahf
or
add
ja
rcl
push
test
push
loop
(bad)
add
or
jg
mov
das
add
pop
mov
lahf
aaa
adc
or
inc
(bad)
out
(bad)
cmp
test
xchg
push
pusha
data16
push
sahf
mov
add
push
jbe
sub
arpl
push
mov
sub
push
push
mov
xor
mov
xor
lea
rcr
mov
jbe
push
mov
mov
test
mov
adc
std
push
sub
or
retf
add
inc
pop
ret
push
cmp
je
xor
sahf
adc
ret
sub
jb
(bad)
jp
or
mov
div
pop
add
add
adc
mov
mov
add
add
xor
mov
mov
push
jg
cwde
fmul
cld
pop
aas
xchg
adc
sbb
sub
and
out
les
fadd
pop
adc
adc
(bad)
pop
jne
(bad)
call
mov
test
je
sub
mov
cmp
jle
mov
imul
mov
(bad)
(bad)
push
and
push
mov
dec
mov
mov
adc
push
mov
or
loopne
adc
add
pop
jge
pop
mov
sbb
cmp
or
xchg
push
push
pop
and
dec
add
pop
jecxz
popa
hlt
not
leave
or
stc
push
xchg
xchg
mov
mov
inc
pop
adc
sub
data16
out
sub
lea
mov
sbb
lods
and
jo
test
jne
movzx
push
dec
std
shr
test
mov
inc
ret
cmp
(bad)
and
dec
(bad)
fsubr
popa
rdpmc
pushf
jmp
jb
and
sbb
lds
dec
sti
cmp
pop
and
jmp
rcl
adc
dec
push
mov
or
loopne
cli
cld
push
cmp
mov
sbb
and
fnsave
test
popf
fidiv
cmp
push
inc
fldcw
adc
mov
cmps
mov
and
hlt
push
sbb
lock
mov
push
mov
test
adc
pop
or
jb
pop
jg
xor
adc
ret
mov
inc
sahf
pop
or
xchg
mov
mov
aaa
add
push
or
xor
loope
jo
and
pop
xchg
(bad)
fistp
sbb
push
mov
pop
or
sub
add
call
adc
pop
xchg
femms
daa
add
stc
sub
xchg
mov
(bad)
inc
inc
or
iret
out
fadd
push
loop
pop
xchg
mov
in
loopne
gs
mov
ret
fimul
cmp
test
(bad)
pop
push
in
sub
adc
jecxz
adc
mov
dec
in
iret
in
ja
mov
push
push
inc
or
mov
cld
jne
and
sbb
lahf
test
add
xor
fdiv
sub
fstp
mov
add
stc
sbb
mov
adc
add
call
adc
inc
add
push
mov
push
ja
inc
xchg
int3
sub
jmp
pop
inc
dec
jne
cmp
sbb
test
mov
enter
adc
pop
icebp
loope
sbb
cmp
enter
fiadd
inc
cmp
xlat
loope
into
pop
or
pop
mov
aaa
pop
loopne
test
push
push
push
mov
sub
or
cwde
sbb
cwde
test
fild
inc
pop
or
or
mov
push
addr16
scas
sbb
adc
xchg
inc
icebp
mov
jl
repnz
loopne
out
data16
call
sbb
mov
mov
dec
in
adc
scas
cs
push
sbb
in
gs
outs
sti
mov
int
mov
and
cld
dec
jbe
scas
sub
fistp
call
jmp
add
pop
jnp
mov
arpl
(bad)
cmp
or
call
clc
dec
test
jl
inc
xor
dec
fimul
lds
push
imul
adc
push
sub
sbb
adc
xchg
test
fsubr
movs
jecxz
sbb
add
and
aad
inc
imul
jecxz
and
xchg
mov
mov
add
ins
je
aam
pop
in
or
cmp
cmps
jmp
or
nop
bound
test
or
popf
nop
sahf
or
ficom
clc
fsubr
sbb
loop
xor
mov
mov
push
inc
cmp
push
xchg
ret
mov
dec
or
rol
ret
pop
aaa
add
cs
aaa
pop
inc
cmp
xor
sar
movs
sub
jmp
les
nop
inc
fisttp
or
dec
cmp
outs
add
mov
test
jl
inc
jg
jae
out
mov
jmp
add
sbb
pop
je
rcl
pop
pop
fcomp
push
xor
cdq
cmc
fstp
outs
sbb
adc
or
or
push
jb
loopne
lock
cmp
mov
dec
mov
cld
ins
sbb
cld
push
mov
rol
aaa
push
and
and
mov
or
lea
push
fadd
add
mov
lea
ret
mov
inc
mov
cld
pop
jl
mov
inc
add
clc
adc
je
jmp
or
or
je
or
jmp
mov
(bad)
dec
js
add
mov
jmp
or
ret
or
add
jl
jmp
or
inc
test
or
leave
mov
or
lock
cmp
outs
pushf
xchg
shl
or
cld
jl
dec
mov
scas
jnp
adc
dec
or
aam
jbe
push
clc
(bad)
enter
dec
(bad)
inc
sub
sti
repnz
push
or
mov
call
cdq
fdivp
jmp
inc
cmp
mov
call
jne
clc
pop
pop
and
add
pop
es
int
ja
aas
push
jmp
js
push
dec
jmp
or
dec
cmps
jne
clc
outs
jecxz
sub
cli
mov
jo
je
cmp
sar
sub
ret
call
add
scas
push
ins
xor
fsub
rol
popa
test
jmp
jle
in
sti
bnd
mov
pop
or
sbb
loopne
bound
jg
js
sub
or
cmp
jbe
push
mov
hlt
(bad)
cwde
add
out
adc
sub
out
pop
cdq
imul
jmp
cmp
adc
mov
mov
stc
pop
xor
imul
fs
jo
mov
push
in
imul
add
push
push
movs
push
mov
adc
fiadd
jnp
dec
cmp
sar
jge
mov
mov
mov
jp
dec
sub
add
outs
sahf
cmps
jns
mov
push
cs
in
fisub
ins
xor
cwde
xor
sub
mov
fld
cmp
hlt
push
push
push
push
aam
mov
sub
or
inc
das
mov
mov
fadd
sbb
in
ins
ds
or
cmps
and
shl
mov
push
in
and
cmps
or
in
xor
out
sbb
push
push
shl
xor
pop
ror
jp
sbb
add
(bad)
call
inc
dec
popa
ins
gs
popa
ins
jne
push
gs
jb
je
jb
(bad)
call
(bad)
adc
or
push
outs
outs
ins
fs
imul
fsubr
pop
or
sub
adc
addr16
aaa
mov
cld
jg
push
jne
je
push
jns
gs
xchg
loope
or
add
push
inc
iret
jae
mov
sqrtps
outs
pop
adc
jb
repnz
adc
jmp
add
movntps
or
gs
fs
clc
pop
pop
inc
jae
cmp
push
je
fs
or
push
mov
add
ins
push
or
std
inc
imul
lock
dec
and
cmp
movs
inc
mov
jne
ja
add
push
jb
ja
mov
call
mov
dec
enter
push
inc
mov
sbb
lea
pop
cld
xchg
xor
inc
outs
outs
jbe
je
outs
or
mov
sub
ds
inc
jb
imul
fdiv
ins
add
test
sbb
arpl
adc
cmp
loop
add
push
js
dec
nop
mov
pop
adc
gs
cld
inc
gs
aas
std
or
fstp
xchg
push
sbb
jg
jns
out
add
add
out
add
mov
or
dec
adc
push
add
movhps
in
ins
adc
jl
xor
push
adc
div
push
or
mov
add
shl
ins
adc
dec
out
and
sbb
mov
mov
mov
inc
aad
xchg
pop
fwait
jbe
sbb
pop
dec
loope
test
mov
add
retf
mov
add
xor
ret
mov
sbb
and
sbb
xchg
xor
jge
xor
push
jo
mov
pop
retf
pop
ret
xor
adc
add
out
inc
sbb
sar
dec
or
add
or
fdivr
pop
inc
or
add
cmc
addr16
imul
xlat
pop
clc
xchg
in
lahf
add
cli
adc
les
mov
inc
lea
xor
and
imul
adc
mov
jge
sub
dec
jne
push
loope
xchg
add
mov
inc
cmp
cmp
xchg
mov
call
jmp
ja
inc
xor
jns
popa
movs
and
test
je
add
add
std
or
fs
push
push
push
retf
jne
mov
cs
and
(bad)
sbb
call
adc
mov
pop
jmp
jmp
pop
dec
nop
xor
or
cmp
cmp
ins
mov
jo
lahf
inc
out
push
pop
int3
int3
adc
scas
mov
xor
pop
xchg
inc
adc
mov
sbb
inc
or
jne
mov
scas
cmp
mov
push
jmp
(bad)
push
movs
outs
sub
sbb
inc
add
push
clc
mov
fwait
enter
mov
push
jg
cmp
mov
ffree
setle
aam
jecxz
icebp
or
test
je
push
mov
outs
pop
(bad)
inc
sbb
lea
mov
in
mov
inc
pop
add
pop
add
sar
sbb
imul
pusha
mov
ins
cmp
add
cmp
divps
fs
adc
enter
sbb
add
jmp
int3
and
and
xchg
inc
adc
jge
jmp
test
ret
and
sub
stos
inc
cmp
mov
mov
retf
xor
add
xchg
push
ja
or
or
cmp
hlt
mov
inc
adc
cmp
test
add
clc
jmp
leave
sub
leave
xchg
sub
xchg
nop
in
add
xor
lea
inc
data16
int3
or
or
shl
pusha
jecxz
jg
scas
mov
mov
sbb
sbb
adc
push
sbb
inc
lock
rcr
mov
hlt
cmp
(bad)
imul
popf
xchg
nop
xchg
cs
test
add
ja
rcr
and
sti
(bad)
jle
es
sub
aas
sbb
fs
push
jbe
add
out
dec
jmp
(bad)
jmp
adc
jo
push
fcmovnbe
pusha
mov
test
add
iret
xlat
call
and
jmp
clc
mov
mov
or
or
mov
stos
pusha
fidiv
pop
xchg
sar
shr
mov
xor
pusha
sub
cwde
fwait
sub
and
sbb
ins
push
fst
sbb
iret
mov
xchg
test
ret
iret
in
mov
mov
xor
daa
or
add
daa
add
dec
jge
pop
push
fldenv
jno
mov
sub
jno
imul
xchg
stos
xchg
scas
mov
call
mov
or
jg
cdq
jo
mov
jns
sahf
jbe
and
mov
cli
push
pop
imul
push
pusha
inc
sub
outs
xchg
mov
scas
mov
shr
jmp
add
jl
ficomp
adc
add
aad
call
mul
sub
add
pushf
adc
xlat
xlat
xor
cmp
xchg
mov
jle
inc
popa
jmp
rcr
mov
cmp
sti
add
cmp
mov
fs
push
push
fimul
in
and
and
xchg
or
jns
jge
pop
mov
jo
jo
loope
lods
dec
or
or
ja
adc
mov
add
loopne
jl
dec
jle
data16
enter
jmp
ret
and
xchg
and
pop
mov
jnp
cmps
test
test
iret
ja
or
push
cwde
ror
(bad)
xchg
adc
daa
jbe
and
in
mov
mov
mov
push
cwde
clc
jmp
sbb
shl
fsubr
jp
mov
ret
and
pop
mov
adc
fcomp
xlat
mov
cld
(bad)
bound
jge
aam
push
inc
ret
sub
sub
adc
or
inc
mov
aas
aam
les
fiadd
loopne
sbb
or
sahf
adc
and
push
inc
adc
push
lods
(bad)
mov
add
and
cmp
ror
mov
loope
pop
cmp
mov
ret
dec
je
push
sub
dec
ret
mov
mov
jo
clc
sbb
add
or
adc
xor
mov
jmp
dec
movs
int3
add
cmp
and
mov
pushf
mov
pop
mov
gs
test
loop
cmp
mov
pushf
outs
and
add
das
and
outs
add
(bad)
ins
pop
add
sub
add
add
not
adc
add
sub
inc
xor
adc
push
aas
mov
dec
pop
call
jl
pop
xchg
stos
pop
dec
mov
(bad)
mov
in
xchg
push
(bad)
in
push
dec
ins
add
data16
mov
sbb
fs
mov
push
xchg
add
push
test
push
fwait
int
call
adc
add
mov
out
xor
or
inc
mov
fcom
xchg
jl
xchg
add
add
sti
movs
jb
shl
mov
rcl
cmp
retf
mov
dec
inc
ficomp
push
mov
mov
daa
and
mov
lods
adc
out
push
push
movlps
or
outs
arpl
push
add
mov
mov
js
and
add
outs
call
mov
jns
gs
cs
pusha
fld
push
mov
(bad)
aad
cmps
aad
mov
int
mov
imul
or
rcr
es
jnp
mov
mov
xor
mov
jle
test
xor
cmp
mov
xor
rcr
or
mov
mov
and
mov
mov
or
push
xor
bound
or
cmp
jmp
cs
bound
add
cmp
push
and
push
mov
add
and
test
sti
sbb
ret
push
sbb
sub
jecxz
sbb
out
mov
mov
je
mov
xchg
adc
shr
out
popf
push
and
sbb
imul
and
cli
add
cmps
ins
cmps
pop
dec
add
push
addr16
jne
movs
push
dec
pop
sbb
push
mov
outs
ret
into
mov
add
and
mov
push
push
dec
stos
call
loope
lock
sbb
add
add
add
sysenter
lods
pavgb
pusha
test
iret
fimul
mov
test
xor
cmp
or
fs
rcl
xor
add
and
push
xlat
and
sbb
jae
rol
retf
add
out
retf
xchg
add
push
push
or
xor
xchg
add
adc
push
test
xor
inc
xchg
pusha
xor
pop
or
mov
mov
mov
mov
ret
mov
nop
xchg
pop
je
xchg
jp
popa
popa
jo
push
in
mov
sbb
inc
cmp
xchg
mov
add
add
daa
sbb
sar
add
lea
mov
or
lea
nop
inc
push
leave
xchg
test
push
xchg
push
arpl
loopne
sub
cmp
xor
mov
test
cld
inc
lock
inc
bound
lods
push
add
movsx
mov
mov
sub
push
mov
mov
cmp
mov
cmp
sbb
rol
(bad)
mov
cmp
adc
and
enter
mov
in
xchg
in
pop
pop
or
pop
mov
and
rcl
pop
test
add
push
push
test
js
and
cmp
mov
push
je
mov
inc
mov
arpl
mov
mov
push
cmp
dec
pop
sbb
cmp
inc
mov
or
dec
test
xchg
bnd
and
inc
mov
inc
inc
outs
pop
inc
xor
add
push
or
scas
fdivr
pushf
mov
inc
popa
push
mov
out
or
sbb
xchg
mov
js
lods
mov
and
nop
xor
loopne
or
sub
jo
sbb
mov
adc
mov
inc
mov
popf
mov
jne
inc
or
adc
cmp
cmp
or
loopne
and
pop
jg
dec
push
dec
mov
(bad)
jne
add
ins
inc
jno
sbb
mov
vpmullw
scas
and
or
(bad)
mov
xor
out
xchg
pop
push
mov
inc
(bad)
psadbw
fmul
aaa
xchg
inc
jno
and
inc
cmp
add
js
shl
push
sub
xchg
ror
xchg
push
scas
adc
mov
add
xchg
mov
std
fwait
push
adc
and
xchg
daa
mov
fimul
je
cmp
add
cmp
(bad)
jo
inc
dec
fidiv
mov
pop
xchg
popa
mov
xor
push
fcom
into
pop
ss
sbb
ret
dec
pop
clc
xor
into
mov
dec
in
(bad)
popf
clc
ret
test
lock
push
iret
push
popa
bound
cmps
test
dec
stos
pop
mov
outs
ja
clc
test
ins
ret
fbstp
jl
push
(bad)
push
sti
das
or
fisub
cmp
aam
inc
fild
out
or
or
inc
or
jne
and
test
or
outs
clc
(bad)
(bad)
pop
push
cs
mov
imul
sbb
adc
xor
sub
push
loop
xchg
arpl
xor
std
ret
bound
inc
cmps
pop
out
dec
mov
out
sub
jo
cwde
sar
jmp
loopne
dec
mov
fisttp
or
movs
mov
fdivr
adc
mov
(bad)
push
loopne
jne
mov
push
mov
push
aam
adc
and
mov
add
ja
or
and
xchg
sbb
cs
jecxz
pop
pop
int3
cs
loopne
xor
xor
out
push
(bad)
mov
das
das
xor
mov
push
xor
adc
outs
mov
jb
arpl
or
mov
xor
mov
add
call
fld
sbb
pop
xchg
(bad)
fs
vmptrst
jnp
jo
and
and
pop
push
lea
loope
sub
(bad)
stos
and
mov
inc
dec
jne
xor
mov
cwde
add
sub
mov
lock
jle
mov
inc
dec
call
dec
mov
pop
mov
inc
inc
dec
jne
pop
scas
or
fld
add
cdq
push
les
fisttp
fadd
jno
adc
cld
mov
lock
add
test
mov
add
sbb
repnz
mov
adc
xlat
mov
or
imul
adc
xchg
ret
add
(bad)
cmp
mov
mov
sbb
add
sub
pop
mov
xchg
adc
push
outs
cmp
add
mov
dec
lock
pop
fadd
cld
inc
test
cmp
jns
xchg
pusha
inc
add
sar
add
cmp
jmp
or
cmp
dec
hlt
cmp
loopne
cmp
add
jmp
iret
cmp
jge
jge
mov
pop
sub
add
inc
add
add
add
loopne
or
fs
push
dec
and
add
pop
lock
xlat
sbb
push
je
jmp
fdiv
jo
mov
jo
add
pop
inc
lahf
call
loopne
pop
stos
pop
add
jo
(bad)
or
popa
jmp
inc
fidiv
pop
mov
push
popa
add
add
sub
xchg
mov
stos
mov
sti
add
and
mov
idiv
popw
jmp
ret
adc
pop
mov
mov
cmp
ret
cmp
jecxz
bound
push
mov
fldl2e
xchg
push
loope
out
and
lods
cmc
cmp
jmp
enter
mov
inc
add
mov
(bad)
hlt
imul
pop
lock
in
and
pop
sbb
mov
push
sti
mov
adc
mov
add
sbb
add
cmp
rol
or
sub
add
add
sub
xchg
push
cmp
cmp
fst
sub
mov
or
sub
cdq
in
adc
mov
lock
or
das
push
or
jle
xor
push
add
enter
jmp
inc
sub
aaa
jge
(bad)
ss
sub
jmp
outs
inc
pop
(bad)
fistp
cmp
mov
xor
sub
loope
mov
jo
in
enter
int
cmp
push
or
xor
add
push
add
pop
push
aas
xor
sub
cli
add
dec
dec
inc
and
dec
jne
std
popa
inc
rcr
push
push
je
(bad)
imul
adc
fsub
push
out
add
inc
add
pop
dec
cmovle
adc
push
add
ror
mov
push
add
dec
dec
dec
inc
es
iret
and
adc
sub
add
ins
data16
les
pop
cmp
inc
and
inc
cmp
add
xlat
shr
pusha
mov
jo
lea
or
call
and
shl
inc
sub
mov
cmp
add
dec
sub
push
dec
repnz
jge
mov
push
jbe
push
add
push
and
mov
pop
add
bound
arpl
js
xchg
inc
clc
data16
push
adc
add
jo
jno
jb
and
or
add
ja
cmp
loopne
out
xor
xor
xor
add
aaa
dec
add
add
add
pop
inc
daa
lods
jo
xor
pop
test
push
js
dec
mov
idiv
mov
movs
movs
xchg
xor
mov
loopne
js
mov
sbb
mov
test
fisub
es
add
pcmpgtb
inc
test
imul
sar
inc
dec
add
jbe
jne
ret
je
push
push
gs
xor
cmp
mov
dec
ja
inc
jae
push
push
addr16
ins
or
inc
outs
push
gs
fcmovne
mov
inc
popa
imul
arpl
add
add
js
sbb
sti
fcmovbe
rcr
hlt
es
jl
sahf
push
and
or
jmp
push
scas
mov
adc
sbb
scas
out
jns
push
push
lods
fcom
push
jl
shl
mov
fdiv
ror
icebp
add
fwait
icebp
sbb
push
je
jo
push
movs
cmp
clc
imul
pop
inc
push
popa
rcr
or
sub
lods
mov
jmp
mov
sbb
aas
push
sbb
into
xor
push
or
retf
ins
add
pop
or
stos
push
in
call
dec
es
push
inc
mov
adc
add
shl
loopne
jecxz
lahf
add
jmp
loopne
push
sbb
add
and
icebp
add
dec
mov
sub
xor
sbb
cmp
mov
inc
dec
mov
push
inc
push
jb
xchg
mov
or
je
push
lahf
inc
bound
rol
or
add
dec
(bad)
jne
fwait
sub
aam
hlt
inc
ins
imul
pop
push
and
data16
sbb
push
add
inc
adc
cmps
pop
mov
cmp
push
cmc
mov
lods
mov
cdq
mov
(bad)
and
jo
shl
sbb
sbb
shl
sbb
xor
xchg
mov
mov
cmp
sti
push
inc
pop
adc
(bad)
pop
cmp
sub
inc
or
in
je
mov
jb
inc
gs
sub
lea
xchg
ja
jb
test
cmp
sub
xor
int
cdq
jae
sahf
push
je
or
push
imul
int3
adc
outs
inc
ins
into
(bad)
cmc
or
inc
add
in
sbb
push
loopne
out
push
call
jg
fnstcw
sub
fstp
push
push
ss
xchg
cmovno
add
and
inc
pushf
popa
ins
xchg
or
add
add
rol
inc
dec
xchg
or
jbe
ja
inc
je
inc
jle
add
mov
sbb
jbe
jmp
jbe
and
inc
rcr
cmp
shl
(bad)
adc
xor
add
or
dec
and
mov
addr16
test
jge
and
les
in
mov
and
and
or
cmps
fwait
je
xor
or
pusha
popf
rcr
ret
mov
sti
inc
push
sti
(bad)
jle
in
mov
cmps
push
test
je
stos
pop
stos
sbb
cmp
lds
scas
xchg
shl
mov
outs
sub
or
or
(bad)
xor
pop
jne
add
mov
xor
aam
or
and
sar
sub
ror
mov
and
adc
or
fs
sub
pop
pop
outs
mov
(bad)
nop
or
xchg
cmps
lock
ss
sub
into
push
push
fbstp
jbe
das
push
dec
test
jl
inc
ins
lea
fstp
cmp
push
or
jmp
sbb
mov
je
pop
mov
jmp
inc
dec
jne
and
inc
or
enter
js
cmp
jbe
imul
ds
pop
nop
pop
push
inc
adc
add
shl
ss
(bad)
addr16
mov
push
ja
(bad)
pop
pushf
mov
sbb
les
jae
arpl
lea
cmc
outs
inc
mul
bound
jle
adc
mov
movs
or
int3
inc
in
lahf
or
cwde
sub
add
ss
rcl
add
outs
fdiv
icebp
sbb
push
pop
mov
gs
cmp
add
sub
xor
jne
push
(bad)
fsubr
jecxz
inc
push
adc
call
hlt
inc
mov
jmp
add
sub
and
push
loopne
fdivr
jbe
inc
in
mov
loop
mov
jns
ret
sbb
jecxz
push
pop
push
push
inc
pop
adc
adc
imul
out
mov
add
sbb
(bad)
pop
out
sub
sub
imul
fst
in
cld
loopne
loopne
pushf
mov
mov
mov
pusha
or
clc
push
repnz
(bad)
add
jg
sar
mov
(bad)
sbb
push
call
lock
es
hlt
mov
cld
lea
or
sub
test
mov
fwait
add
in
ret
adc
in
cli
add
shl
jmp
jmp
mov
xchg
mov
and
pop
xchg
test
ja
ja
cmp
xchg
test
jmp
sbb
push
mov
add
int3
jne
loope
out
retf
adc
ins
mov
fmul
fcom
nop
fild
inc
fcom
mov
out
push
mov
fsubr
cmp
loope
mov
push
ja
stc
pop
add
(bad)
js
mov
dec
push
arpl
adc
loopne
ror
bound
sbb
add
popa
daa
setl
xor
ja
stos
lss
push
ror
push
add
aaa
cmp
pop
add
(bad)
fild
inc
dec
ja
gs
or
test
cmc
or
push
add
ins
mov
push
popa
ja
gs
and
rol
mov
push
fwait
sbb
out
daa
pop
fmul
addr16
jl
arpl
xor
mov
outs
jae
cmp
test
mov
add
shl
test
cmp
popa
addr16
(bad)
sahf
sub
push
addr16
xor
sbb
add
imul
lods
loopne
cmp
sbb
cmp
push
je
xchg
pushf
add
cmp
push
arpl
jo
push
push
sub
jbe
test
xor
xor
push
jns
popa
das
cmp
das
call
xchg
pop
leave
push
fisubr
es
jne
outs
ins
iret
and
push
cld
xor
jbe
dec
shl
js
imul
data16
push
cmp
cld
ror
call
gs
push
and
out
sbb
mov
inc
dec
push
imul
xor
pop
jae
push
pop
and
sub
dec
pop
popf
ss
add
push
mov
mov
loop
push
test
bound
add
adc
adc
push
cwde
adc
jbe
je
mov
test
outs
xor
inc
data16
repnz
jno
push
cmps
add
xor
mov
dec
inc
lods
(bad)
inc
ins
test
ss
xor
mov
add
shl
push
sub
dec
pop
mov
add
pop
popf
dec
cwde
pushf
push
jns
push
nop
sbb
xchg
test
push
xor
add
rol
adc
and
dec
jecxz
scas
mov
mov
inc
add
inc
inc
ss
xchg
(bad)
dec
out
pop
aad
add
scas
adc
or
fcom
pop
pop
pop
sub
jmp
scas
push
inc
push
lock
icebp
push
mov
cld
add
shl
hlt
push
xor
push
inc
dec
jo
adc
jae
add
int3
pop
push
mov
stos
scas
xchg
(bad)
dec
push
adc
or
sbb
mov
sub
fmul
ror
mov
add
cmc
add
push
jmp
cmp
stos
jbe
(bad)
push
pop
or
and
inc
into
dec
xor
mov
xor
jae
push
inc
cmp
repnz
pop
cmp
(bad)
pop
xchg
outs
inc
or
inc
adc
rol
fcom
adc
lods
inc
and
pop
inc
push
or
(bad)
sbb
jecxz
enter
mov
mov
out
jmp
mov
xchg
fld
loope
mov
pop
loop
mov
je
mov
scas
pop
mov
adc
add
pop
add
ins
mov
push
mov
add
cmps
fst
add
push
add
mov
shl
adc
mov
push
stos
mov
mov
imul
push
jbe
das
movs
push
sbb
sub
ret
mul
cs
push
mul
jno
and
mov
or
add
daa
or
xchg
or
cmp
push
movs
lock
xchg
sub
sbb
jo
inc
push
mov
adc
jo
add
out
and
inc
jns
gs
jne
test
mov
cmp
inc
push
adc
cs
and
mov
ret
cmps
mov
add
shl
sub
pop
adc
pushf
test
lds
out
add
or
aad
add
bound
add
dec
cmp
jecxz
adc
lock
(bad)
adc
pop
dec
or
stos
shl
ret
and
and
cmp
dec
push
ret
test
cmc
pop
push
aad
sbb
xchg
clc
mov
push
or
xor
adc
adc
in
inc
rol
xor
sub
xchg
pop
or
int
inc
aad
or
sbb
or
adc
and
loop
jp
push
hlt
fcomp
fidiv
jmp
mov
stos
cli
pop
retf
push
sub
aam
daa
aad
mov
sahf
xchg
loope
fidiv
push
test
push
mov
inc
or
out
sub
shl
call
xor
dec
push
sar
bound
mov
imul
daa
pusha
push
cld
or
loop
rcl
inc
cmp
jo
cmp
jmp
inc
test
mov
fadd
sbb
aaa
lods
add
adc
fwait
pop
ds
inc
mov
sbb
mov
sub
stos
and
add
jp
or
add
sbb
rol
das
pop
pusha
xor
add
and
xor
push
cmps
retf
inc
add
jmp
push
mov
push
xchg
mov
das
(bad)
push
and
in
idiv
test
and
push
and
dec
movs
iret
repz
push
or
mov
mov
inc
mov
push
inc
push
xor
xchg
jmp
or
mov
das
push
and
cmp
or
mulps
jbe
inc
mov
pusha
out
lahf
bound
add
fs
add
daa
fstp
gs
sbb
inc
or
ror
retf
mov
mov
jne
sbb
cmp
shl
jno
cmp
ins
jo
inc
fwait
and
ins
push
and
std
mov
pop
pop
inc
push
popa
ins
jne
jnp
sub
mov
fwait
mov
and
lods
lock
push
arpl
arpl
and
adc
mov
or
in
iret
xor
mov
enter
ins
xor
aaa
fld
push
pop
out
push
sub
sahf
out
das
mov
or
push
test
mov
adc
mov
mov
push
dec
adc
int3
push
xchg
mov
seto
pushf
mov
dec
test
mov
and
dec
les
les
clc
add
arpl
and
test
mov
or
pop
xor
fdiv
pop
or
add
xor
add
pusha
sbb
and
jb
and
push
adc
or
(bad)
xor
and
push
aaa
ror
jae
inc
aaa
inc
shl
pop
push
ret
dec
sub
xchg
add
or
test
push
adc
inc
ja
dec
adc
or
jecxz
and
add
jmp
outs
rcr
mov
ins
inc
jb
and
rol
scas
hlt
jp
pop
stos
cs
dec
pop
mov
test
dec
and
hlt
stos
cmp
push
push
mov
lock
ins
dec
dec
inc
xchg
pushf
push
add
push
out
jl
push
scas
rcl
rol
inc
adc
cwde
sti
jo
inc
inc
retf
inc
mov
push
in
dec
or
int3
jge
inc
dec
push
cmp
dec
les
push
add
pop
adc
and
scas
inc
push
sbb
not
bound
inc
into
ret
xor
inc
lods
cmp
add
cmp
rcr
scas
inc
cmp
in
rol
inc
pop
push
add
mov
in
inc
rol
fcom
sbb
or
inc
lods
inc
mov
inc
push
rol
adc
pop
inc
pop
push
out
add
bound
push
xor
dec
push
pushf
push
ret
and
cmp
pushf
fcomp
and
push
out
fadd
and
and
sub
sub
add
repnz
rol
and
and
lock
jae
and
and
and
push
sub
inc
jmp
mov
enter
push
cli
push
sbb
mov
iret
push
cmc
pop
inc
and
les
outs
xlat
loopne
ins
jnp
sbb
js
push
push
and
shl
pop
xor
pop
add
or
bswap
je
add
inc
or
inc
dec
outs
mov
sub
cs
push
loopne
adc
add
aaa
xchg
cmp
jb
add
xchg
sbb
and
add
jge
out
add
push
sub
jmp
outs
xor
dec
ins
xchg
ror
pusha
mov
xor
shl
xor
cld
pop
ins
mov
push
lock
pop
sub
lods
adc
shl
sub
sub
push
call
dec
adc
test
jno
test
xor
xchg
call
push
add
inc
pop
jecxz
cwde
inc
scas
cmp
adc
sbb
adc
cmp
push
in
or
xchg
pop
loope
pop
sbb
mov
cdq
sbb
add
mov
mov
in
xor
jb
adc
cmp
jmp
mov
imul
push
inc
out
pop
punpckhdq
daa
sub
add
mov
data16
adc
add
xchg
popa
ret
inc
jno
imul
mov
pop
adc
inc
jae
xor
std
sar
test
icebp
jnp
sub
cmps
pop
inc
push
fadd
mov
data16
pop
mov
es
movs
popa
inc
or
lahf
es
int
push
jl
jp
ins
add
cmp
popa
add
add
add
jl
xlat
add
jmp
arpl
ins
js
je
and
mov
xor
cmp
pop
ss
add
jb
push
push
ret
push
sub
shl
les
outs
loopne
lock
mov
mov
xor
mov
push
push
mov
mov
fimul
and
je
neg
aam
fisub
mov
imul
je
xor
(bad)
xlat
add
or
pop
ss
fisttp
or
pusha
pushf
push
mov
mov
call
or
push
in
cwde
test
mov
clc
lock
mov
add
mov
xor
mov
lods
mov
push
mov
mov
xor
jbe
(bad)
xor
(bad)
adc
hlt
fs
jle
adc
xchg
inc
pop
pop
fimul
adc
arpl
ins
mov
lds
mov
in
inc
xor
je
mov
jae
cmp
sbb
dec
jae
sbb
and
retf
daa
dec
dec
push
dec
sar
adc
mov
mov
or
xor
xor
cmp
xor
sar
inc
inc
inc
pop
cmp
inc
je
dec
pop
and
pop
imul
imul
pusha
and
dec
shl
je
int3
jo
push
ret
(bad)
popf
or
pusha
mov
and
pusha
and
adc
or
mov
push
into
rcr
setns
xchg
cmovno
jo
lea
(bad)
jbe
mov
cmp
cmps
mov
adc
push
cmp
pcmpgtd
or
add
inc
xchg
adc
lea
push
mov
mov
mov
jne
adc
inc
lock
push
push
sub
mov
mov
mov
jo
and
scas
fsub
rcr
inc
in
dec
cmp
jae
inc
repz
fcom
(bad)
sub
mov
inc
int3
and
cmp
inc
pop
xchg
fld
test
mov
dec
rol
xchg
fstp
int3
and
inc
shl
int
pop
and
inc
inc
enter
in
and
push
sbb
ins
dec
mov
jg
mov
push
xchg
mov
or
(bad)
scas
fimul
xchg
shr
setge
mov
mov
xor
inc
push
xchg
sub
xor
pop
inc
jno
dec
icebp
and
cmp
imul
jge
les
mov
les
cld
mov
mov
je
mov
jmp
cmp
sbb
sbb
xor
bound
cmps
adc
fdivr
(bad)
retf
fcom
push
sub
sub
push
xor
hlt
mov
sbb
jnp
je
sub
in
cmp
ror
fstp
fwait
jmp
sbb
cmp
mov
das
ins
fmul
inc
scas
int3
inc
mov
xlat
imul
fs
(bad)
lods
mov
or
add
jmp
jl
aad
ins
call
fbstp
cmps
pusha
push
push
adc
ror
aaa
push
push
fs
xlat
cld
cld
lock
inc
pop
push
cmp
pop
sub
jmp
jmp
enter
fld
cli
sbb
jg
dec
cs
pop
test
push
and
out
adc
call
sbb
xchg
js
mov
call
sbb
mov
mov
mov
test
jns
push
mov
clc
rol
jl
jmp
ror
push
cmp
adc
inc
repnz
ds
jnp
push
jb
ins
dec
pop
dec
aaa
sbb
xchg
sbb
xchg
add
cmp
lods
pop
jae
sahf
push
adc
jbe
xor
inc
dec
push
jo
pop
xor
addr16
addr16
mov
addr16
adc
outs
xor
push
pop
dec
(bad)
dec
add
xor
pop
add
push
and
push
call
call
(bad)
push
push
dec
sub
mov
sub
out
dec
push
inc
pop
das
aas
xchg
lock
pop
add
jle
xor
mov
mov
test
pushw
dec
adc
xor
xor
pop
push
xchg
js
xor
jg
or
pop
add
test
mov
mov
inc
cs
sbb
aas
xlat
push
xor
add
push
push
push
(bad)
cs
add
push
bound
inc
loope
es
sub
jo
and
xor
push
add
ret
push
adc
pop
mov
dec
push
adc
rol
jmp
adc
dec
ds
lahf
or
cmp
sbb
add
aas
sbb
in
mov
and
je
es
sti
jle
add
int3
and
sbb
xchg
inc
sti
add
xor
push
push
push
add
add
cld
movs
push
ret
mov
inc
and
or
idiv
pop
sti
or
fcomp
fstsw
sahf
jae
pop
add
mov
add
xchg
nop
clc
mov
sub
adc
xchg
push
jae
jb
scas
in
mov
rcl
js
cli
aas
and
imul
mov
clc
jns
push
std
cmp
lea
jae
in
adc
in
lock
and
add
into
aas
sbb
cdq
xor
int3
and
xor
lods
adc
ins
(bad)
pop
in
mov
or
jmp
daa
mov
add
cmps
jmp
sbb
dec
sub
movs
bound
shr
push
and
test
pop
popa
mov
pop
pop
cmp
inc
dec
int
dec
int3
dec
mov
or
or
rcl
aaa
sub
jns
jns
inc
jl
add
in
pop
ret
mov
repnz
push
scas
sub
std
test
je
cmp
inc
aas
call
test
hlt
rcr
jo
or
push
mov
push
dec
test
jne
jmp
mov
dec
pop
mov
sbb
mov
mov
mov
inc
cmp
xchg
mov
mov
out
adc
push
or
mov
mov
jmp
sbb
sbb
pushf
cmp
add
(bad)
pop
aad
les
pop
add
inc
pop
fistp
js
mov
das
cmps
arpl
xchg
es
adc
arpl
push
jb
adc
sub
jmp
sahf
scas
or
pop
fild
mov
pushf
pusha
jbe
enter
cmps
mov
jb
aas
cmps
dec
(bad)
jnp
test
cmp
xor
inc
pop
hlt
js
push
xor
(bad)
jns
inc
ret
cmp
mov
mov
ret
call
mov
pusha
ins
inc
pop
test
je
xor
sti
dec
jb
pop
je
mov
jmp
sub
rcl
ficomp
movs
push
jle
add
scas
fldcw
or
(bad)
push
cmps
pcmpeqd
je
out
jmp
push
pop
or
aam
jecxz
leave
cmps
xlat
fs
adc
xor
mov
adc
push
movs
aad
dec
mov
sbb
hlt
movs
lds
push
cmps
xchg
(bad)
out
cli
ret
pop
dec
dec
cld
mov
push
or
pop
shl
lahf
jae
lock
push
inc
jne
push
sub
dec
cmp
inc
jle
mov
addr16
dec
jle
mov
enter
cmp
inc
or
or
adc
push
test
test
mov
inc
sub
sub
fwait
ret
lock
jmp
sbb
and
and
mov
mov
ins
push
ret
xchg
sbb
push
scas
fidivr
inc
xchg
cs
push
and
adc
out
ret
imul
mov
loop
push
ret
cs
push
adc
sbb
call
fadd
arpl
scas
ja
data16
add
clc
adc
sbb
or
xchg
xchg
xchg
adc
sbb
add
nop
out
loope
or
in
xchg
or
in
sbb
loop
jnp
in
pusha
adc
add
adc
push
jb
add
pop
inc
add
dec
add
pop
pusha
not
push
push
jae
add
js
mov
or
ret
cwde
jmp
imul
push
fadd
mov
jmp
mov
stc
(bad)
and
pop
push
movs
jae
or
mov
dec
arpl
mov
add
ja
pop
mov
arpl
mov
pop
cmp
inc
fstp
push
pop
pusha
sbb
ins
jp
aam
cmp
add
sub
adc
test
sbb
dec
sbb
mov
cdq
and
adc
or
and
movs
sub
dec
out
test
mov
mov
ret
mov
mov
rcr
pop
dec
add
adc
in
pop
add
cmp
mov
es
aad
bound
cmp
ja
cli
test
and
arpl
and
pop
or
rcl
mov
mov
push
push
and
inc
adc
imul
jl
inc
xor
add
xchg
add
cs
jmp
or
mov
out
xor
inc
adc
addr16
cmp
sbb
jl
mov
loopne
popa
dec
xor
push
xor
adc
adc
test
or
sub
pop
cmp
push
cmps
call
sbb
mov
add
push
mov
aas
loop
out
xor
sti
sub
mov
nop
ins
adc
mov
push
jno
cmp
push
push
dec
add
or
pop
test
or
and
push
fwait
push
lds
add
pop
push
adc
lock
xor
inc
dec
test
jl
inc
xor
lea
rol
push
movs
inc
call
(bad)
xchg
inc
sar
mov
mov
ss
adc
sti
int3
das
pop
sub
loopne
jg
pop
inc
dec
jne
jmp
int3
test
jmp
cmp
dec
and
mov
adc
pop
popa
jb
loopne
sbb
cmp
sub
test
sbb
push
xor
jnp
inc
push
adc
or
(bad)
out
sbb
xor
pusha
lods
dec
mov
lahf
jg
pop
sbb
out
into
(bad)
hlt
dec
call
std
movs
xchg
inc
movs
xchg
inc
ret
sbb
ja
pop
or
out
add
xchg
push
nop
push
loopne
push
and
popf
popa
adc
xchg
fld
cmp
jmp
adc
jle
lea
icebp
pop
rcr
clc
add
mov
mov
hlt
mov
push
lock
or
add
in
mov
dec
sub
enter
sub
fistp
in
movs
cmp
loopne
cmp
lahf
fdivr
add
ins
pop
lock
jl
mov
(bad)
adc
add
xchg
xor
(bad)
in
scas
sahf
inc
or
popa
outs
push
add
das
movs
sbb
fidiv
jnp
push
out
ins
push
sub
push
sti
push
xchg
add
and
jmp
cs
das
inc
(bad)
das
and
add
push
cmp
cmp
in
and
les
jb
stos
add
or
mov
pop
sar
push
add
dec
ds
call
add
outs
sbb
(bad)
or
cmps
addr16
cmp
je
push
xchg
lea
push
and
mov
push
xchg
and
xchg
mov
sahf
and
and
push
fs
pop
and
xchg
mov
stc
movzx
or
and
xchg
cs
push
xchg
test
inc
xchg
sub
hlt
mov
es
pop
call
pop
or
lahf
ret
xchg
add
push
icebp
ja
(bad)
fild
inc
dec
test
lods
ret
popf
mov
pusha
adc
add
mov
test
loope
push
jmp
mov
mov
adc
sbb
stos
pop
inc
shl
sub
dec
inc
adc
push
loopne
aas
cmp
jno
xor
xor
push
idiv
push
sub
push
daa
cmp
add
das
addr16
test
mov
add
lock
jmp
add
rol
push
push
(bad)
jno
and
outs
xor
and
mov
xor
dec
and
outs
and
dec
xor
ret
mov
push
fld
mov
lds
sbb
pop
int3
sub
dec
and
xor
dec
and
mov
rcr
movs
mov
add
pop
inc
jo
add
je
shr
movs
(bad)
sahf
cwde
out
cmp
mov
mov
lds
outs
mov
inc
mov
inc
fcom
mov
push
ret
push
xchg
or
daa
jbe
sbb
sbb
bound
nop
cmp
(bad)
sub
sub
(bad)
movs
cmp
inc
fild
mov
xlat
pop
push
lods
or
iret
lahf
fadd
stos
sbb
push
or
and
push
inc
movs
sbb
cs
mov
outs
push
adc
ins
lds
iret
loopne
daa
push
out
inc
dec
pop
imul
inc
iret
mov
inc
je
xor
xchg
sahf
cwde
and
aas
daa
or
adc
xchg
leave
xor
pop
jo
sbb
push
mov
loope
les
push
push
jo
mov
pusha
add
mov
mov
dec
sbb
push
sub
pusha
stos
push
or
jl
or
jl
add
or
hlt
mov
add
cmp
out
loopne
mov
push
cdq
inc
mov
mov
jecxz
rol
push
cmp
jbe
hlt
xor
mov
div
hlt
test
jno
adc
xor
fcom
dec
xchg
push
jle
out
add
add
xchg
ret
inc
in
out
mov
jmp
jno
call
add
add
(bad)
aaa
aas
pop
ins
(bad)
retf
adc
add
dec
repz
out
sub
dec
rol
adc
mul
jo
nop
inc
outs
jno
or
jmp
cmp
or
out
stos
pop
movs
cmp
xchg
sar
test
imul
mov
loopne
pushf
inc
cmp
in
xor
call
in
push
loopne
mov
jnp
sar
xchg
mov
cmps
imul
inc
jb
fcom
pop
fisub
ins
cmp
mov
nop
ins
mov
mov
call
mov
rcl
fcom
and
dec
or
or
and
fild
test
call
dec
mov
(bad)
dec
cvttps2pi
sub
rcl
gs
ja
sbb
(bad)
imul
and
jae
das
jmp
pop
xchg
dec
mov
jmp
popa
in
mov
push
add
cmps
or
pop
or
sub
test
or
push
movs
fadd
mov
adc
loope
pop
dec
xor
loope
cmp
arpl
add
xchg
or
ins
das
xchg
das
aas
lods
push
jmp
fadd
aam
ret
pop
test
mov
sbb
xchg
repnz
pop
or
mov
sbb
push
xchg
test
test
imul
ror
neg
outs
mov
clc
aaa
pop
sub
jb
outs
add
out
mov
cmp
cmp
push
dec
push
cmps
push
add
push
xor
jg
daa
aam
inc
add
inc
add
pushf
jge
stc
cmp
repz
mov
outs
(bad)
int3
sub
ins
add
jge
imul
sub
test
push
mov
lods
push
in
repz
ss
mov
outs
outs
or
and
adc
mov
outs
sbb
popa
sbb
outs
add
enter
add
add
add
gs
jg
rcr
push
cmovbe
jb
popa
je
gs
gs
div
xor
sub
push
gs
jae
popf
fdivr
push
or
and
mov
js
add
sub
cli
pop
(bad)
inc
mov
ret
push
push
sub
out
mov
jnp
dec
(bad)
mov
push
push
pop
mov
add
adc
les
xchg
mov
inc
add
(bad)
in
or
adc
add
jb
add
call
push
mov
add
cmp
fcomp
dec
push
inc
jb
or
dec
lock
mov
inc
repnz
fnsave
imul
jne
(bad)
nop
movs
loopne
je
fst
xor
sub
cld
mov
pop
inc
gs
jmp
mov
jb
jns
cmp
outs
outs
shl
fs
into
imul
retf
mov
retf
add
mov
inc
dec
imul
jl
out
ins
outs
rsqrtps
cwde
bound
inc
jb
push
sub
or
leavew
shl
fimul
or
pop
movs
or
lds
sbb
pushf
jp
sbb
pop
cmp
shr
lods
cld
rol
push
jo
stos
adc
daa
sub
jns
or
ins
and
add
jb
out
add
dec
ins
jb
bound
xchg
mov
(bad)
cld
faddp
aam
or
push
pusha
mov
jo
loop
xor
add
sub
and
dec
jne
sub
fadd
arpl
and
inc
adc
adc
popa
jae
jmp
jl
sbb
or
mov
or
test
je
add
jne
or
fs
daa
jns
add
push
and
cs
sub
push
or
movs
mov
test
sub
into
leave
cmps
and
out
jge
fisttp
push
add
push
and
movs
dec
pop
je
jbe
and
inc
icebp
pop
in
add
fs
shr
fild
inc
push
bound
sub
xor
scas
pop
div
inc
pop
int3
xchg
mov
or
inc
dec
ja
pop
mov
jb
or
sub
inc
xchg
add
mov
cld
call
inc
dec
outs
fs
jb
and
push
out
jne
ins
xchg
rcl
or
cli
jb
inc
push
dec
jb
add
xor
push
js
dec
inc
mov
xchg
mov
inc
jg
shr
and
fldcw
or
add
imul
cmc
scas
mov
push
mov
push
and
pushf
cmp
xchg
fsub
outs
mov
cdq
jbe
mov
shl
cli
jns
test
pop
jmp
and
push
inc
sbb
pop
mov
pop
das
outs
add
mov
ret
iret
pop
and
fcomp
loopne
pusha
or
nop
cld
add
into
out
sbb
dec
mov
and
add
sub
cmc
pusha
icebp
or
xchg
xor
lea
inc
pushf
push
inc
ud0
or
adc
cmps
ror
and
dec
push
inc
pop
ret
cmp
adc
mov
movs
add
mov
dec
sbb
mov
fadd
sbb
jo
scas
(bad)
daa
xor
aaa
jo
(bad)
push
push
xor
int3
and
sbb
out
and
loop
(bad)
jmp
cmp
mov
xchg
imul
orps
movs
out
loopne
outs
pusha
enter
xlat
sub
sub
rol
push
sbb
out
xlat
add
ds
or
nop
xchg
sub
xor
out
mov
pusha
jbe
jbe
mov
dec
(bad)
dec
leave
cmp
sub
addr16
retf
js
scas
ss
add
loopne
lods
dec
and
and
lock
aad
xor
pop
inc
ret
add
sbb
dec
je
fwait
in
cmp
mov
(bad)
into
adc
add
dec
loopne
sub
mov
gs
ja
into
loopne
xchg
lea
pop
aaa
(bad)
dec
push
es
xchg
add
cmp
xchg
ret
sub
xor
aaa
push
jb
sbb
lock
in
test
shr
rcr
adc
test
retf
xchg
sbb
push
sbb
xchg
(bad)
aad
addr16
pop
push
xlat
xlat
xor
ss
push
add
cmp
xchg
push
mov
xor
cdq
sub
push
xlat
jbe
push
push
hlt
push
test
dec
mov
inc
dec
ja
ds
aam
imul
jmp
dec
test
je
ss
dec
test
jl
inc
xor
mov
push
fmul
and
cwde
inc
mov
xchg
arpl
mov
jne
sub
faddp
sbb
jmp
inc
dec
jne
fist
into
push
aaa
adc
pop
push
mov
xor
retf
and
xor
mov
push
cmp
mov
push
cmp
in
iret
add
pop
cmp
jo
mov
cvtps2pd
retf
lahf
mov
or
inc
mov
in
cmp
cmp
push
xor
xor
xor
push
mov
mov
not
es
bound
mov
mov
inc
cmp
outs
inc
xor
inc
cmp
jmp
loope
sbb
cld
daa
jnp
xor
and
inc
idiv
lds
push
add
and
ins
or
push
dec
test
out
neg
xchg
sub
xchg
es
ror
or
das
and
(bad)
or
(bad)
or
inc
sbb
shl
pop
mov
rcl
dec
cli
mov
ss
or
adc
push
pop
pop
sub
or
inc
mov
inc
ret
ret
std
push
or
rcr
jl
jae
addr16
pop
fldenv
inc
xchg
pushf
or
sbb
inc
add
retf
mov
mov
add
push
push
jbe
cli
add
sub
icebp
sbb
and
enter
or
xchg
push
in
rol
mov
jl
cmp
pusha
imul
lds
jmp
ja
push
adc
stos
xor
loopne
add
push
or
cli
mov
add
cmp
inc
clc
shl
adc
lock
sub
mov
pop
dec
and
(bad)
mov
sub
les
adc
xor
in
cli
iret
cmc
loope
and
inc
cs
int3
bound
mov
xor
mov
call
jne
or
loope
jmp
mov
pop
push
ret
ins
and
jle
add
inc
push
popa
(bad)
sbb
ins
lods
sbb
mov
bound
das
sub
inc
lahf
sub
(bad)
call
add
cmp
jl
cmp
sete
ret
xor
(bad)
fld
aam
sbb
sbb
xor
loopne
or
sbb
and
inc
lock
xchg
popa
or
mov
dec
sub
push
loopne
dec
sar
jg
enter
dec
add
or
sbb
loope
push
std
mov
popa
add
xchg
test
dec
jo
xor
push
in
mov
imul
jno
adc
cwde
sub
pop
mov
pusha
jmp
(bad)
ss
test
jl
sub
cmp
inc
(bad)
sub
pushf
call
popa
mov
inc
lods
push
in
nop
jg
pop
fmul
in
mov
xor
xchg
cmp
push
jne
add
pop
test
push
gs
or
call
stos
mov
sbb
xchg
(bad)
mov
nop
mov
(bad)
pop
loope
sub
(bad)
mov
in
ins
add
les
or
mov
jnp
test
add
popa
fmul
loope
add
jg
add
jg
cmp
sub
ss
lock
int
call
sub
xor
adc
out
xor
adc
or
or
inc
mov
mov
adc
add
bound
xor
add
aas
(bad)
push
js
popa
and
popa
jae
jb
add
or
rol
inc
dec
fs
dec
jmp
imul
dec
cs
cmp
std
ins
jns
push
dec
mov
in
loop
retf
xchg
pop
xchg
push
and
inc
push
(bad)
div
dec
inc
outs
jmp
inc
repnz
sub
shl
out
mov
loopne
dec
adc
dec
jns
les
push
outs
arpl
scas
or
call
xchg
pusha
test
call
mov
or
dec
jb
xchg
inc
mov
sub
mov
jne
fs
push
pop
inc
mov
xchg
aaa
xor
add
fbld
xchg
cmp
sahf
and
pop
pop
sub
fdivr
fidiv
(bad)
movs
inc
or
pop
jno
xchg
pusha
mov
int3
pop
inc
cs
jecxz
int3
pop
xchg
(bad)
pop
popa
cli
or
adc
(bad)
stc
inc
add
hlt
or
pop
adc
mov
add
stos
enter
dec
push
retf
enter
cmp
mov
cmp
jne
call
repnz
sbb
push
mov
jnp
and
push
xchg
sub
pop
mov
dec
xor
or
jne
cmp
je
sub
add
xchg
loopne
adc
call
adc
or
cmp
ds
sbb
rcl
jnp
jnp
xlat
aaa
ja
enter
mov
push
or
mov
adc
cdq
rcr
test
xchg
add
cmp
mov
inc
inc
outs
mov
jmp
cmp
xor
add
jne
sbb
jno
aaa
or
je
outs
sbb
inc
sub
outs
inc
jne
les
shl
cld
out
cmp
inc
jne
inc
arpl
fwait
mov
jg
cmp
in
das
pop
inc
inc
jo
jg
inc
push
mov
and
outs
outs
dec
jne
jnp
pop
cmp
aas
jnp
outs
mov
adc
je
push
gs
outs
sub
bound
inc
xchg
cmp
pop
push
dec
bound
loopne
movs
rcl
pop
mov
mov
pop
int3
out
push
test
ret
outs
fist
cmp
dec
pop
clc
inc
push
sub
mov
sbb
push
inc
inc
push
out
cmp
nop
push
xchg
pop
lods
dec
add
mov
scas
lds
div
fs
mov
in
xor
mov
sbb
mov
or
imul
inc
adc
inc
jb
ja
push
aaa
xchg
(bad)
js
adc
inc
dec
gs
fs
xchg
add
movups
jo
mov
push
add
ss
aas
sbb
add
add
push
or
aas
push
(bad)
(bad)
(bad)
shr
adc
pop
cdq
daa
and
paddd
enter
xchg
xchg
inc
js
imul
leave
leave
enter
int3
push
inc
outs
xchg
daa
daa
mov
mov
daa
inc
leave
enter
sar
xchg
(bad)
sbb
sbb
dec
enter
xor
mov
pop
jp
hlt
push
mov
adc
test
sub
xchg
dec
xor
dec
test
inc
ror
mov
mov
and
inc
sub
add
jo
loope
or
outs
imul
les
(bad)
ror
lods
addr16
test
jo
mov
jecxz
lds
sub
mov
popa
outs
push
push
pusha
je
loopne
add
or
dec
retf
xchg
or
sub
jne
cwde
or
dec
cs
std
pop
rcr
call
add
push
in
lods
add
ud1
push
push
dec
leave
lds
pusha
adc
je
leave
shl
add
aaa
sar
cwde
sub
sub
sub
ss
cmp
dec
adc
jnp
push
mov
add
jae
hlt
xor
inc
dec
jp
aaa
cmp
inc
jns
lds
sub
add
xor
or
shl
add
dec
in
sbb
or
mov
int
xchg
adc
jns
pusha
inc
mov
jns
shl
or
pop
es
cmp
mov
imul
adc
pop
rol
ja
push
jbe
pop
sub
test
jns
pushf
cmp
int3
rol
push
push
mov
gs
and
inc
dec
xchg
loope
pop
push
rcl
pushf
out
retf
or
outs
loopne
sbb
push
outs
xchg
mov
push
stc
xchg
add
xchg
bound
push
push
push
stos
cmp
or
fcom
fisttp
sub
or
imul
pusha
js
idiv
add
push
or
loopne
fild
sub
or
popa
outs
stos
inc
dec
push
sar
sbb
add
add
or
add
stos
add
mov
mov
shr
sub
jae
cwde
or
int3
ins
xchg
imul
(bad)
xchg
pop
mov
adc
and
data16
dec
xlat
jae
(bad)
fiadd
or
jbe
inc
aaa
inc
inc
and
add
add
cmp
mov
lea
and
sbb
or
xchg
jns
aad
mov
adc
xchg
push
pop
jne
addr16
xor
jmp
in
test
add
fs
xchg
add
mov
rcl
dec
inc
popa
cli
push
shl
or
and
int
popa
fiadd
mov
lods
adc
jae
inc
or
test
or
add
mov
aad
sbb
and
sub
scas
xor
push
push
fs
cli
aas
jmp
and
dec
and
fnstcw
and
xor
sbb
mov
xchg
mov
pop
dec
je
or
(bad)
dec
repz
cmp
jne
add
mov
jmp
mov
fsub
outs
jg
cmp
jle
loop
mov
push
inc
repnz
inc
daa
mov
cmp
and
push
or
mov
add
pop
or
cdq
or
enter
aad
test
lock
bound
jo
mov
rcl
jl
mov
push
push
lods
lea
push
loope
xlat
mov
jo
dec
jo
shl
ret
jnp
and
sub
add
add
push
aam
jmp
or
sbb
xchg
cmp
xor
mov
cmp
out
fidiv
inc
jge
data16
sbb
mov
into
out
jle
fisttp
cld
cmp
dec
cmps
xor
cmp
fild
add
cs
enter
out
mov
push
mov
mov
push
push
add
cmp
or
cmp
mov
(bad)
sub
or
mov
jno
jg
jo
loop
or
jecxz
test
adc
fistp
pop
stos
add
mov
jge
add
(bad)
jo
inc
shl
movs
mov
adc
cmp
or
mov
add
cmps
adc
pop
mov
add
movs
aam
jmp
xor
ss
les
push
adc
test
jge
push
cmp
and
push
imul
xor
cmp
out
adc
nop
mov
inc
ret
sbb
pop
mov
sar
hlt
nop
xchg
loopne
sti
div
mov
iret
movs
dec
add
mov
out
loopne
mov
and
sahf
adc
sti
and
inc
mov
in
and
pop
push
add
aaa
jne
and
mov
or
dec
mov
loopne
xchg
cld
cmp
jl
add
pop
add
sub
aas
sub
les
inc
or
or
jl
mov
push
mov
fadd
call
add
retf
imul
add
push
and
dec
rcl
and
add
js
pop
imul
aas
push
sub
add
inc
ror
sbb
cmps
pop
fbld
popa
loopne
out
adc
sub
clc
out
cmps
ss
push
pop
(bad)
ret
push
inc
fdivr
push
fadd
es
mov
pop
and
inc
inc
and
inc
scas
pop
pop
inc
pop
cmp
into
adc
mov
sub
sbb
out
scas
loopne
and
sbb
cmps
pop
ss
mov
pop
cmp
mov
inc
pusha
arpl
add
pop
(bad)
or
sub
push
inc
or
add
shr
or
sub
jl
je
mov
push
loope
or
in
dec
test
jl
inc
pusha
lea
cmp
jge
(bad)
jle
(bad)
mov
movzx
in
cmp
je
push
add
add
dec
outs
out
shl
jbe
je
mov
sub
stos
hlt
jmp
inc
adc
dec
in
mov
dec
call
loopne
mov
loope
push
inc
movs
nop
jp
cmp
xor
pop
sysret
mov
btc
ret
scas
inc
es
sbb
or
and
inc
and
push
arpl
imul
outs
mov
outs
push
sbb
or
ins
sub
add
shl
push
scas
adc
jp
add
add
cmp
push
(bad)
push
mov
(bad)
out
push
push
or
sbb
fild
pop
mov
mov
rol
dec
or
jnp
add
xor
aad
into
retf
dec
mov
push
imul
add
mov
and
lea
clc
xchg
(bad)
sub
inc
adc
add
mov
lods
data16
fcom
popa
jb
lock
jb
mov
jae
push
push
push
mov
xchg
and
(bad)
sub
test
add
inc
add
stos
shl
or
cmp
mov
test
dec
xchg
xlat
cmp
mov
(bad)
ds
jge
rcl
inc
pop
push
in
ss
adc
add
lsl
add
ss
add
add
jl
arpl
je
and
mov
or
ins
popa
jb
jp
shl
pop
cmp
jnp
xlat
leave
cmps
popf
nop
cmp
pop
cs
jle
xor
jbe
and
mov
push
inc
inc
outs
outs
outs
rcl
in
out
mov
jle
xchg
ror
ins
inc
inc
jbe
mov
push
pop
add
or
mov
dec
push
cmp
mov
jne
fild
mov
int3
pop
add
ret
jne
jge
and
add
push
sub
sub
paddusb
out
fwait
add
pop
pushf
push
test
into
repz
enter
mov
call
mov
xlat
inc
sub
inc
dec
in
pop
sbb
in
sub
ins
imul
sub
dec
sub
pop
mov
mov
push
ja
outs
test
sub
inc
imul
xor
and
and
loopne
test
sub
push
sub
ret
add
lods
popa
pusha
(bad)
sub
adc
movlps
jbe
dec
das
pop
adc
scas
adc
ror
ins
pop
cs
pop
xor
xchg
sub
cmps
stos
sbb
add
add
or
add
inc
popa
sub
jae
imul
(bad)
mov
pop
mov
dec
test
cmp
push
jne
daa
and
imul
pop
fist
mov
stos
pop
push
popf
add
das
scas
call
es
add
sub
sar
jg
pop
inc
xor
cmp
and
adc
(bad)
push
add
mov
dec
adc
pop
mov
xchg
dec
sar
pop
inc
xchg
push
cmc
sbb
cmp
pop
popw
out
or
cmp
inc
inc
inc
pusha
xchg
imul
push
sbb
dec
or
mov
pop
inc
adc
out
jle
inc
mov
loope
inc
fmul
das
rcl
pop
jb
ficomp
pop
std
add
rol
iret
mov
or
push
push
jns
sbb
push
mov
hlt
daa
xor
pushf
js
dec
ins
bound
das
mov
push
push
jno
dec
xchg
test
scas
ins
push
xor
mov
add
mov
sub
push
js
mov
and
adc
cmp
je
mov
test
je
cmp
jne
xchg
pop
imul
icebp
out
scas
jo
inc
clc
adc
pusha
and
mov
fadd
cld
sub
jle
mov
(bad)
mov
test
call
mov
or
test
je
cmps
or
rcr
sub
push
adc
sahf
jmp
jne
cmp
jne
sbb
call
popf
movs
xchg
push
dec
adc
sub
fisttp
and
add
jbe
movd
hlt
adc
or
dec
dec
popa
push
ins
sbb
sbb
iret
pop
and
es
push
add
pop
dec
cmp
adc
push
push
shl
loopne
inc
xor
sub
jno
imul
popa
jb
gs
pop
lock
aam
popa
jl
mul
cmp
add
lahf
or
pop
sbb
shr
out
push
pusha
xchg
and
push
aaa
pop
lods
mov
inc
test
push
pop
popf
push
fmul
lahf
out
xchg
adc
jns
popa
jae
push
mov
imul
(bad)
pop
das
cld
pusha
adc
push
in
or
ja
ret
jp
out
dec
jnp
or
inc
push
pusha
repz
out
push
and
pusha
jl
cwde
in
jnp
scas
push
js
fs
out
ins
cmps
fsubr
fsubr
(bad)
pop
sbb
test
pop
ror
push
aam
adc
jbe
pusha
enter
pop
and
or
mov
scas
mov
call
neg
xchg
lods
pop
cwde
push
fdivr
sub
pop
or
push
movs
das
call
enter
adc
fdivr
add
inc
cwde
dec
mov
adc
pop
icebp
adc
outs
jae
fs
jp
data16
fidiv
cmp
sub
test
imul
sahf
xchg
add
pushf
cmp
dec
pushf
push
pop
add
push
dec
outs
jo
add
mov
inc
jecxz
add
mov
js
je
mov
fs
and
(bad)
call
mov
push
sub
sar
mov
mov
mov
ror
les
inc
push
outs
jb
les
popa
fild
push
jo
imul
adc
das
sti
fs
std
xchg
xor
int3
gs
push
inc
xor
xor
mov
xor
mov
mov
fsubr
adc
outs
mov
xchg
int
or
inc
loopne
xchg
cmps
add
jge
mov
pop
add
and
pop
jg
call
add
add
das
and
cmp
xchg
mov
pop
and
mov
call
jmp
mov
dec
ja
fwait
xchg
push
sbb
jne
pop
rcr
add
(bad)
add
sub
pop
shl
aas
mov
sub
dec
sub
movntpd
jns
into
add
addr16
mov
ret
push
xchg
mov
fucomi
jle
add
pop
imul
jl
cs
push
das
add
mov
maxps
cmp
out
leave
mov
ins
outs
xor
pop
in
orps
xor
jbe
sub
cmpxchg
xor
inc
sahf
fsub
mov
out
pop
jno
and
dec
mov
sub
pop
push
cmp
mov
pop
dec
cmp
mov
btr
ds
int
das
ja
xor
xchg
aas
sahf
ja
sahf
cld
pop
aaa
add
adc
add
into
adc
jmp
push
push
xor
shr
push
xchg
or
inc
fadd
add
push
add
push
jnp
jecxz
push
push
sbb
push
jbe
or
sub
ins
jb
jns
fld
adc
call
dec
jg
arpl
fs
gs
js
addr16
jbe
cmps
data16
dec
arpl
outs
stos
aad
pop
shl
adc
and
fdiv
xchg
add
fs
shl
or
add
pop
pop
rcl
add
inc
and
cmovns
adc
add
pop
inc
sub
push
add
adc
imul
add
push
push
xor
adc
jnp
addr16
int
js
out
mov
jns
cmps
and
icebp
lods
dec
and
loopne
aaa
js
inc
inc
popa
cmp
jns
inc
lahf
sbb
lods
(bad)
add
adc
loopne
and
push
mov
out
push
mov
mov
xchg
mov
mov
push
xchg
sar
mov
lods
sbb
bound
mov
mov
inc
xor
ins
shl
sub
dec
test
adc
scas
inc
ror
xor
pop
(bad)
in
mov
jmp
mov
or
inc
mov
(bad)
scas
data16
add
sar
jp
add
sar
and
or
mov
in
add
xchg
imul
ins
scas
xchg
or
sub
pop
push
add
jp
adc
popf
out
pop
inc
mov
out
add
add
jmp
dec
dec
(bad)
jnp
sbb
xchg
xor
push
mov
sub
inc
inc
popf
data16
mov
or
std
inc
mov
inc
(bad)
adc
shl
adc
cld
inc
adc
aam
out
pop
retf
adc
xor
inc
inc
test
jno
fcmovb
bound
adc
int
dec
adc
bound
push
cwde
shr
adc
inc
add
and
push
ins
stos
and
test
rol
test
mov
(bad)
fidiv
cmp
add
cwde
sub
(bad)
jo
repnz
lahf
push
pop
aad
btr
mov
jb
add
call
dec
inc
arpl
mov
push
fs
inc
inc
add
cmp
push
shr
inc
loope
popa
inc
imul
pop
iret
test
add
rcl
dec
jb
outs
jae
aam
add
add
sti
ror
add
jae
or
mov
sbb
iret
lods
iret
xchg
repz
or
sbb
popa
jae
repz
inc
arpl
push
add
push
push
push
push
imul
ins
push
pusha
push
add
ret
inc
and
and
mov
mov
inc
xchg
sub
cmp
shr
jnp
cs
xchg
push
sbb
imul
push
jae
inc
outs
je
sbb
sti
pop
jo
pushf
into
jl
mov
aad
(bad)
cmc
dec
push
cmc
enter
and
or
sub
sbb
adc
test
or
cdq
bound
push
inc
pop
adc
pop
test
test
sub
inc
adc
or
and
and
icebp
mov
add
fadd
rcr
pop
imul
sub
add
jmp
add
mov
sub
jno
add
fcmovb
push
add
adc
sbb
mov
lds
mov
mov
sbb
cmc
add
and
shr
lods
dec
or
push
ret
jne
lods
adc
movs
leave
js
mov
cmp
pop
int
inc
adc
jae
push
or
pop
inc
popa
pop
dec
mov
jecxz
sbb
jno
push
mov
ins
outs
or
sub
cmp
mov
lea
push
aas
lea
ret
in
retf
or
xchg
sbb
add
mov
ret
outs
cmp
or
mov
pop
mov
cs
add
cmp
mov
js
jns
add
cmp
xor
or
jne
imul
sahf
dec
arpl
sub
push
ins
popa
ins
ins
gs
loope
sbb
jnp
and
adc
rcl
pushf
pop
xchg
dec
sbb
mov
and
xor
add
push
aam
push
sub
jo
pop
xchg
mov
mov
xchg
xor
mov
and
xchg
xchg
mov
dec
pop
je
(bad)
mov
push
mov
xchg
adc
cmp
popa
push
cmp
popf
and
out
adc
and
test
pop
cwde
dec
ins
lds
cmp
sbb
push
int3
or
pop
pop
pop
inc
or
in
das
xchg
pop
jecxz
cmps
out
xchg
add
mov
or
mov
jecxz
sub
add
sub
test
xor
sub
icebp
in
xor
mov
dec
jae
ins
mov
je
arpl
test
hlt
ficom
arpl
adc
imul
mov
mov
pop
add
jae
scas
rol
add
sub
and
fmul
or
fwait
mov
pop
imul
pop
inc
shr
cwde
sbb
clc
inc
dec
or
cmp
sbb
loopne
into
in
fs
sbb
xor
xchg
inc
inc
and
push
js
add
test
pop
inc
push
out
xchg
pop
dec
push
lea
push
movs
add
lea
inc
cmp
inc
or
push
adc
inc
push
or
jo
add
fs
mov
jle
test
fs
and
addr16
fs
mov
jns
sahf
or
add
xchg
xchg
mov
add
xchg
enter
add
lock
cmp
dec
mov
push
mov
mov
xor
push
adc
gs
push
mov
sbb
push
mov
idiv
pop
dec
sbb
hlt
inc
aam
addr16
dec
inc
add
pop
aad
sbb
in
sbb
rol
xchg
lock
bound
lea
add
sar
sub
shl
lods
pushw
fcom
push
push
cmp
cmc
cwde
add
or
jmp
cwde
adc
or
xchg
add
xchg
outs
jo
jbe
cmps
imul
inc
repnz
cwde
sbb
jns
inc
push
mov
inc
dec
(bad)
mov
mov
push
mov
push
mov
xor
push
push
or
mov
mov
mov
adc
adc
push
dec
xor
pop
pop
pop
xor
push
inc
clc
cmp
add
push
push
ret
jmp
jmp
pop
pop
ret
push
push
add
call
loope
std
mov
mov
mov
inc
mov
outs
test
leave
mov
dec
push
xor
mov
mov
ss
or
mov
and
jle
(bad)
data16
jle
mov
pop
pop
pop
pop
ret
jbe
adc
push
push
mov
mov
or
xor
mov
in
and
xor
push
add
cmp
ret
jne
xor
mov
cmp
push
mov
movs
je
cmp
je
or
sar
or
mov
or
in
inc
aaa
adc
repz
cmp
ja
ins
and
or
cmp
add
cmp
xor
cmp
xor
ins
(bad)
mov
mov
ret
mov
sbb
push
lea
das
(bad)
rcr
sbb
jo
lock
jbe
and
out
retf
mov
and
scas
fiadd
adc
mov
loopne
or
adc
pop
mov
aaa
and
loope
inc
jne
sbb
and
sub
push
xchg
test
or
cmp
and
in
addr16
pop
rcr
ins
jo
or
push
dec
scas
outs
icebp
add
cmp
jmp
adc
cmp
or
mov
mov
ret
jnp
(bad)
push
pop
add
inc
in
and
mov
mov
sub
add
xor
aaa
fdiv
inc
push
sbb
stc
mov
stc
das
and
sbb
lea
fcomp
dec
cld
xchg
rcl
pusha
or
cli
push
ja
daa
call
xchg
out
movs
adc
jmp
mov
fbstp
enter
jmp
mov
xor
xor
in
or
pop
fld
out
clc
push
mov
and
dec
sbb
in
mov
imul
xchg
pop
mov
mov
and
mov
inc
hlt
cdq
adc
call
mov
pop
cdq
(bad)
fild
or
push
and
cwde
test
add
in
or
nop
inc
leave
rcr
sbb
ins
outs
loope
popa
sbb
cwde
push
ins
inc
or
pop
in
xor
sub
inc
or
test
mov
mov
loopne
jmp
pop
sub
test
je
mov
sbb
dec
xor
pusha
pop
(bad)
xor
movnti
ret
jb
xor
or
xchg
pop
dec
mov
loope
xchg
jp
or
cmp
or
setns
daa
clc
int3
sub
pushf
stc
test
push
pop
das
cs
call
ins
pop
in
add
fld
dec
and
mov
mov
cmp
aas
jmp
lock
mov
mov
xor
mov
cmp
je
and
ins
pusha
cmc
inc
test
je
mov
(bad)
fcomp
mov
dec
outs
js
fmul
fstp
xor
push
sbb
in
jmp
sbb
ja
mov
loop
inc
dec
jne
iret
or
xor
and
dec
or
loop
cmp
mov
pusha
jo
fnstsw
or
sahf
xor
in
sub
test
and
push
mov
push
push
or
or
push
sub
inc
adc
test
inc
cmp
in
push
dec
in
or
push
cld
dec
lds
fs
push
adc
shr
in
cmp
in
push
dec
cmp
dec
stos
mov
push
inc
ret
add
movs
fiadd
add
outs
lds
jle
push
bound
(bad)
ins
sub
js
imul
pusha
pop
inc
in
mov
xor
inc
or
xor
adc
sub
jmp
out
call
jle
mov
dec
test
jl
inc
xor
hlt
cmp
add
shr
fwait
mov
dec
jne
inc
jg
jp
dec
call
sbb
loope
mov
dec
pop
les
inc
(bad)
sub
or
shr
mov
out
dec
or
(bad)
popa
dec
rcl
jbe
movzx
mov
inc
mov
fdivr
mov
sti
leave
xor
or
or
scas
pop
es
mov
jno
sti
jg
xor
add
add
nop
add
add
xlat
push
lock
cld
mov
cmp
sbb
add
add
pop
cmp
leave
or
pusha
(bad)
hlt
push
mov
add
xchg
icebp
(bad)
cmc
aas
push
mov
cld
push
ror
cmps
push
cmp
aaa
mov
outs
cwde
(bad)
sub
lods
and
push
dec
inc
mov
cwde
enter
pop
jge
push
pop
loopne
push
xchg
loopne
pusha
pop
int3
and
call
mov
or
movs
add
pop
cmps
sbb
or
pop
or
sar
mov
or
shl
sbb
add
cs
cmp
inc
and
mov
push
mov
inc
mov
adc
loop
das
mov
jle
(bad)
fisubr
push
inc
push
js
test
jle
cmp
jle
mov
shr
js
xchg
ds
jmp
pusha
mov
clc
inc
sub
push
mov
fimul
mov
cdq
ja
mov
je
movs
(bad)
jle
cmp
jle
cmp
mov
loopne
lock
into
loopne
sbb
adc
pop
enter
xor
xchg
adc
push
jl
loopne
and
cmp
arpl
loope
pusha
cld
rol
push
dec
js
inc
sete
add
fcomp
adc
in
rcl
mov
call
mov
push
(bad)
jb
in
push
je
adc
jmp
into
jle
add
and
xor
lock
sub
mov
push
ja
adc
inc
xor
cmp
jne
rol
add
into
mov
cld
(bad)
pushf
addr16
je
shr
loopne
imul
mov
lods
inc
mov
(bad)
jg
inc
or
push
pop
add
add
push
jge
xlat
adc
lock
loope
loop
popa
pushf
pop
mov
sub
arpl
stos
clc
jge
add
adc
aam
(bad)
cmp
ins
mov
adc
std
push
mov
test
nop
jmp
adc
push
cmp
sbb
sbb
(bad)
push
dec
call
nop
es
jns
in
jle
push
mov
xchg
rcr
mov
xor
je
mov
fistp
push
cmc
aaa
dec
add
jne
push
xchg
sbb
inc
add
inc
(bad)
not
das
lods
mov
sub
adc
jmp
push
push
jne
(bad)
int3
test
xor
mov
into
sbb
les
js
sbb
pop
jnp
test
je
xchg
call
add
xor
mov
xor
pop
add
das
xor
shl
cmp
push
xchg
rol
nop
fcom
sbb
in
pop
push
std
ja
xor
add
outs
or
fs
push
adc
in
or
xchg
out
test
mov
and
scas
push
sbb
enter
js
and
aam
sbb
mov
mov
pop
sbb
jge
shl
je
fadd
sub
cs
lahf
xchg
mov
dec
inc
into
dec
push
scas
aam
das
adc
in
jmp
mov
adc
mov
xor
jmp
jmp
mov
and
dec
and
neg
xchg
cmp
lahf
js
clc
clc
test
std
fs
icebp
push
fcom
shr
icebp
dec
fadd
cmc
out
xchg
inc
(bad)
mov
enter
cli
test
jecxz
mov
mov
jmp
mov
scas
sub
adc
sbb
adc
mov
fdiv
jg
fucomi
add
rcr
sbb
xchg
test
(bad)
push
ins
mov
or
jne
or
xor
cmp
or
inc
call
aad
mov
sbb
call
dec
and
aaa
mov
iret
stos
sbb
push
and
cli
dec
pusha
pop
jge
cmp
icebp
ret
or
lods
outs
rcl
cmp
jbe
adc
pop
in
jle
push
lods
pop
pop
inc
add
ss
fwait
sub
lea
inc
sub
jmp
jne
imul
ss
or
xchg
mov
aam
pushf
mov
jo
hlt
mov
pop
fsubr
and
dec
sbb
cmps
add
aam
loopne
hlt
sbb
loopne
and
retf
fisubr
pusha
ds
sub
imul
in
ja
jmp
jg
or
ja
jbe
sbb
loopne
dec
jno
pop
sbb
xchg
dec
and
lods
push
mov
mov
push
mov
jmp
push
mov
dec
lea
jo
jle
cmps
ret
arpl
jg
retf
imul
in
jmp
test
aaa
fcmovnu
add
cli
mov
stos
lea
xchg
add
ja
rcl
dec
inc
jno
(bad)
jmp
sub
sub
ret
cwde
and
xchg
into
js
(bad)
lock
mov
add
xchg
push
push
ficomp
rol
retf
mov
enter
rcl
cli
jecxz
inc
mov
movs
iret
cmp
sar
enter
dec
adc
out
cmpxchg8b
(bad)
retf
outs
add
and
mov
xor
das
add
cld
loopne
push
mov
and
pop
mov
pop
mov
jg
cmp
mov
leave
pop
loopne
pop
sub
clc
mov
js
or
lea
cmp
out
lods
push
jmp
add
jp
push
push
ret
add
fsubr
and
sub
add
je
jl
mov
xor
sbb
or
aam
aam
aam
jo
mov
add
ret
jbe
push
or
or
rol
adc
and
je
jo
(bad)
div
and
cdq
and
pop
loop
cwde
or
js
mov
nop
in
or
push
mov
mov
mov
mov
test
sub
sbb
ss
add
jge
mov
or
sar
pop
add
inc
adc
cmps
and
test
or
mov
adc
add
pop
push
mov
jmp
pop
sbb
int3
jne
jbe
push
cmp
adc
jmp
xchg
nop
fld
jo
jnp
aam
mov
loopne
push
dec
test
mov
jo
pop
mov
and
sub
inc
pop
loope
jmp
ins
jno
add
mov
call
jmp
mov
dec
pop
jmp
mov
or
pop
test
mov
pop
cmp
jg
pop
mov
ja
fdivr
mov
inc
mov
mov
mov
jg
or
mov
or
test
sub
sbb
call
mov
and
mov
push
int3
add
imul
xchg
adc
sub
or
cmp
pop
pop
jae
mov
jge
xor
or
mov
arpl
lea
and
rcl
cmps
mov
and
and
xchg
pop
scas
mov
push
xor
push
jae
push
or
inc
mov
pop
xchg
or
jmp
sti
lahf
stc
setb
jmp
setl
mov
mov
test
ja
retf
pop
popa
or
xor
dec
mov
fs
add
rol
lock
jl
ret
sti
daa
into
or
sbb
xchg
jl
loopne
jbe
clc
test
sbb
inc
gs
out
shl
test
cwde
test
or
adc
cmp
cmp
aaa
jmp
in
and
mov
pop
jmp
inc
sbb
sbb
sbb
inc
jb
push
add
sbb
xor
test
push
xor
or
lods
add
cdq
mov
and
mov
adc
call
mov
test
scas
cmp
dec
adc
rcr
or
cmp
push
int
mov
into
js
inc
cmp
rcl
jo
fwait
in
pusha
movs
imul
add
sbb
call
lods
xor
inc
lea
adc
add
push
rcl
jmp
pop
adc
dec
xor
shl
adc
fimul
sbb
or
jp
cmp
mov
cmps
push
cmp
mov
push
aas
lock
or
add
test
cmp
xor
sbb
inc
jmp
nop
mov
jg
and
add
fucomip
lock
inc
mov
or
add
mov
in
mov
pop
ret
dec
test
pusha
xchg
xor
aam
mov
xor
jmp
push
mov
mov
test
or
push
jge
fcomp
cmp
dec
sbb
mov
mov
or
and
and
or
mov
inc
scas
punpcklwd
cmp
sbb
hlt
mov
add
aam
mov
sub
mov
pop
xchg
sbb
rcr
aam
push
fdivr
cmp
sub
bound
inc
aaa
rcl
cwde
and
daa
xchg
mov
push
pusha
das
retf
push
and
jge
pop
sbb
and
in
or
ret
adc
sub
jb
data16
jg
test
cli
clc
imul
inc
into
movzx
add
fisttp
(bad)
std
cmp
ja
sbb
add
and
xor
add
mov
push
push
test
add
fsub
jns
jle
push
pop
test
jle
xor
cmp
dec
loope
dec
or
call
icebp
xchg
push
cmp
aaa
jmp
inc
jo
adc
adc
ret
shl
cmp
and
lahf
call
cdq
mov
ret
outs
sbb
cdq
jmp
adc
xchg
dec
push
add
repnz
xchg
inc
aam
out
into
push
add
popa
pusha
cmp
out
sbb
outs
aam
mov
mov
adc
add
and
add
xchg
repnz
test
rol
add
adc
adc
loope
add
rcr
add
outs
mov
inc
mov
imul
mov
sub
into
fs
add
sub
add
xchg
add
add
pop
add
mov
jp
imul
ret
sahf
(bad)
sahf
jnp
jle
mov
xchg
xor
push
mov
std
loopne
enter
test
dec
push
push
mov
and
stos
and
inc
mov
mov
or
jl
adc
jnp
and
movs
xchg
and
jmp
inc
and
jge
popf
sub
je
cmps
in
dec
popa
cwde
into
and
mov
inc
mov
push
xor
add
inc
add
dec
mov
add
cld
inc
inc
xor
out
jle
xchg
pusha
bound
nop
aaa
sbb
add
(bad)
test
push
add
sub
add
push
mov
sub
or
adc
mov
jo
nop
jp
add
xchg
push
mov
adc
retf
add
and
jecxz
and
cmp
ss
push
mov
dec
rcr
inc
rol
xchg
adc
pop
ds
call
lahf
test
mov
rol
addr16
jmp
push
mov
outs
sub
push
push
mov
out
adc
pusha
mov
and
js
sbb
and
sub
add
mov
enter
or
call
pop
push
daa
test
xor
loopne
call
ret
rcr
cdq
daa
sub
add
or
inc
repz
cli
add
cmps
inc
and
cmp
lea
ret
les
push
cmp
pusha
pop
dec
xchg
inc
cmps
jp
mov
jnp
push
xor
and
lock
in
fisttp
loope
movs
push
or
push
add
lock
test
jge
out
mov
pop
jbe
push
je
cmp
mov
push
jns
(bad)
mov
(bad)
sub
fild
lods
sub
fiadd
and
add
sub
sub
add
jg
and
adc
add
aam
es
cmps
mov
ja
mov
mov
js
add
push
add
cld
mov
scas
push
ret
mov
cmp
loop
dec
repz
je
jnp
dec
push
pushf
jge
mov
iret
repz
mov
fstp
push
add
shl
dec
sti
cmp
test
push
mov
pusha
mov
and
js
mov
push
hlt
push
pop
pop
push
fld
out
fstp
enter
nop
add
aas
add
and
inc
inc
ins
imul
int3
cmp
imul
js
aas
sar
pop
inc
dec
popa
outs
fs
gs
fistp
and
mov
outs
arpl
gs
fdiv
test
add
not
gs
aad
and
enter
fidiv
or
push
ficomp
and
out
jne
std
inc
push
gs
fs
mov
imul
or
or
push
jns
sub
lds
jbe
popa
jo
and
cmp
fmul
and
jae
outs
fistp
aaa
sub
adc
fwait
loopne
ficomp
outs
arpl
fiadd
ja
cmp
outs
clc
mov
inc
outs
popa
(bad)
neg
je
ss
cmp
dec
popa
arpl
jbe
fiadd
sub
jne
das
mov
popa
cld
inc
dec
ins
push
pushf
(bad)
cwde
pmaxsw
and
pop
(bad)
xchg
fisttp
mov
cmps
aas
or
xor
or
cmp
add
jle
push
dec
sbb
out
mov
cvtps2pi
cmp
or
inc
sahf
and
xchg
xchg
daa
daa
ret
jl
enter
out
lods
pop
in
in
test
lods
dec
mov
(bad)
in
dec
push
dec
mov
jecxz
add
mov
push
inc
arpl
jo
adc
or
mov
sbb
ins
xchg
or
mov
push
add
mov
push
xor
mov
or
sub
inc
push
retf
outs
sub
mov
sbb
adc
sbb
mov
in
pop
push
xchg
call
or
pop
push
shl
stos
jmp
mov
(bad)
xchg
lea
mov
push
sub
add
sbb
xor
cmp
mov
inc
xchg
or
jp
mov
xchg
loopne
inc
jns
inc
and
mov
rcl
push
ins
add
fisub
shr
jle
xchg
aad
jmp
cmp
mov
shl
pop
pop
aas
rcl
mov
cmp
xor
push
sar
xchg
ret
or
cwde
into
dec
adc
sub
pop
inc
gs
xchg
clts
outs
sbb
and
jp
jne
gs
jne
jne
scas
(bad)
and
push
push
or
repz
and
js
jns
ret
ds
pop
dec
push
arpl
add
pop
ins
mov
imul
sar
pusha
out
pop
push
inc
jne
data16
fs
test
arpl
mov
ins
je
jno
jno
or
mov
or
add
enter
repz
or
out
add
add
push
sub
and
cmp
test
and
jae
loopne
mov
inc
push
add
jbe
mov
or
dec
jae
dec
push
lock
xchg
stos
push
adc
xor
push
fwait
ins
add
dec
push
sub
push
lds
test
push
add
adc
inc
movs
ret
inc
fucom
sbb
or
test
div
add
fstp
sub
ja
add
int
push
pusha
sub
lock
test
xorps
inc
pop
pop
fidiv
xchg
pusha
pop
jae
sub
mov
jle
add
mov
or
bswap
mov
push
inc
mov
and
dec
gs
pop
in
sub
ret
int
fs
popa
ins
and
jmp
push
sahf
jb
push
sub
push
test
ins
mov
fcomp
mov
or
into
add
mov
pop
test
mov
nop
push
imul
and
adc
js
inc
sub
sahf
bound
xor
dec
lds
inc
fs
jne
je
int3
dec
gs
(bad)
jmp
jo
mov
jle
add
push
inc
(bad)
jne
scas
dec
retf
inc
lods
std
(bad)
pop
inc
and
push
adc
dec
outs
jo
ins
(bad)
sub
add
mov
and
xchg
leave
xchg
dec
push
and
shld
pushf
outs
sub
daa
test
or
mov
add
and
loop
pop
sar
pop
aas
jne
aad
push
dec
stos
and
bound
jmp
adc
cmp
mov
dec
ins
inc
inc
jne
mov
sahf
pop
addr16
mov
inc
mov
xor
jno
or
add
add
inc
add
ret
adc
cmp
inc
cwde
sub
pop
dec
add
cmp
mov
js
clc
inc
dec
cmp
sbb
loopne
inc
adc
in
jno
push
jbe
cmp
pop
scas
mov
inc
inc
add
(bad)
pop
test
aad
or
mov
ret
add
je
dec
or
ror
pop
pop
gs
add
cmp
out
pop
mov
gs
sub
jo
xor
inc
fiadd
or
sub
in
or
add
inc
add
call
ud0
pcmpeqw
inc
scas
xchg
int
push
xchg
mov
(bad)
fsubr
sub
fild
fmul
ins
push
inc
ror
dec
and
inc
mov
push
sbb
shr
pop
jmp
inc
push
dec
jnp
je
xchg
and
sub
cli
or
push
and
add
iret
dec
movs
fild
push
mov
inc
test
shl
push
mov
adc
add
(bad)
jp
mov
inc
xor
mov
mov
dec
cmp
movs
push
pushf
cmp
cmp
xchg
outs
test
mov
push
cmp
jg
inc
cmp
mov
inc
rcl
inc
outs
popa
dec
sbb
push
or
push
adc
or
(bad)
or
inc
sti
add
sub
cmovo
push
mov
xchg
dec
sahf
jo
cmp
jmp
mov
mov
adc
xor
mov
jle
or
mov
mov
xor
jae
xor
stc
fwait
xchg
adc
clc
dec
test
jle
mov
sahf
sbb
(bad)
mov
aad
pop
add
retf
addr16
test
rcl
adc
xchg
mov
je
nop
inc
push
or
dec
dec
push
cmp
xchg
addr16
je
dec
sar
in
call
in
add
mov
cs
sbb
or
push
jmp
mov
push
or
movs
or
jle
adc
mov
push
mov
xchg
adc
fsub
add
xor
call
sahf
adc
jb
jbe
inc
or
cmp
jbe
adc
add
loopne
push
cld
adc
push
push
adc
or
rcr
xor
daa
pop
add
xchg
call
rcl
iret
inc
sub
shr
cmps
cwde
xchg
pop
add
cs
pop
fimul
adc
xor
add
daa
sbb
sub
push
xor
movs
movs
add
stos
inc
(bad)
pop
lea
push
adc
hlt
mov
dec
push
mov
mov
adc
dec
sbb
cmp
shl
xor
clc
jbe
and
or
add
test
cmp
push
jl
or
test
test
ja
sub
add
(bad)
(bad)
in
movs
shr
sbb
dec
xchg
ret
sub
sub
pop
mov
xor
cli
or
test
mov
punpcklwd
sub
sahf
add
cs
out
push
or
into
adc
xchg
adc
inc
xor
add
adc
ss
movups
or
pop
sbb
jo
jl
pop
push
mov
dec
mov
loop
cmp
push
test
(bad)
push
bswap
add
pop
sub
shl
add
or
and
mov
clc
mov
cmp
sbb
enter
fs
add
test
adc
dec
mov
loope
or
cmp
jne
scas
add
cmp
or
inc
cs
jne
push
mov
push
fsubr
inc
inc
xor
jmp
in
in
loope
jne
dec
sub
popa
js
cmp
adc
pop
fdivr
dec
adc
push
mov
cli
dec
push
(bad)
adc
ds
add
fbld
fadd
mov
sbb
and
mov
or
ins
imul
out
or
nop
push
xchg
sub
inc
add
and
and
push
data16
aas
and
rol
or
lea
mov
cwde
sbb
ret
jbe
sbb
sbb
or
out
(bad)
xor
push
arpl
jns
mov
push
(bad)
push
mov
mov
or
scas
lds
dec
ret
jmp
inc
push
test
sti
jp
xor
(bad)
jg
push
dec
mov
push
sub
ja
push
outs
je
imul
arpl
out
ja
dec
hlt
(bad)
add
or
push
inc
jne
ins
pop
xchg
push
test
inc
and
cmps
das
in
(bad)
or
xchg
ret
push
(bad)
push
mov
cmp
adc
je
mov
fwait
pushf
inc
outs
or
lock
adc
pop
xor
loope
mov
cmp
pop
sub
or
inc
add
mov
test
cmp
fcomi
dec
call
xor
loopne
xor
cwde
xor
pusha
inc
call
adc
mov
xor
and
sub
sbb
sbb
cld
xlat
push
pop
loopne
mov
rcr
cmp
paddd
cmps
xchg
sbb
js
push
xor
and
push
mov
xor
cmps
idiv
je
retf
xor
dec
outs
loopne
fsubr
pusha
add
mov
push
pop
and
add
test
and
pop
cmp
fdivr
push
inc
sbb
(bad)
cmp
dec
das
outs
add
add
inc
dec
fs
jb
outs
jae
popa
jb
outs
call
jns
imul
imul
and
dec
popa
cwde
sub
loope
sti
jne
je
ins
pop
fisttp
outs
mov
or
bswap
add
and
daa
(bad)
pop
push
inc
push
dec
outs
je
jne
jo
gs
add
push
outs
vmovaps
add
mov
push
jl
dec
fcmovnu
imul
push
mov
push
mov
pop
setl
or
in
push
dec
mov
add
(bad)
pusha
push
push
mov
or
ss
jle
push
test
sahf
or
sub
xor
adc
add
ins
shl
adc
or
or
inc
mov
fcom
shl
push
les
fsubr
int
in
dec
add
pinsrw
push
sbb
js
daa
lock
xlat
aaa
adc
pop
hlt
loop
cmovo
fimul
movs
cmp
movs
xchg
sar
inc
inc
add
xchg
popa
push
fsub
jae
mov
cmp
stos
mov
xchg
xchg
jns
and
test
popa
inc
in
stc
jb
ins
add
add
bsf
out
sub
and
ret
out
add
test
stc
in
fistp
pop
add
sbb
sti
sbb
(bad)
mov
sbb
mov
fcomp
jecxz
mov
hlt
sbb
push
add
aaa
or
pop
lock
gs
mov
pop
mov
shr
jnp
sbb
mov
jnp
outs
inc
outs
pop
xchg
cmp
imul
ret
loopne
jmp
loop
pop
(bad)
cmp
adc
pop
cmps
rcl
ins
icebp
push
jp
xor
mov
jmp
xchg
push
add
mov
add
jmp
out
sub
shl
add
jge
or
fwait
aam
or
and
add
mov
fdiv
push
inc
mov
push
rcr
ins
nop
stos
sbb
xchg
cmp
xchg
dec
stc
jne
daa
inc
test
ins
inc
fisttp
shl
sub
xor
jge
outs
aad
add
mov
rcl
mov
add
bound
and
lock
or
dec
iret
push
ins
pop
jmp
lds
adc
fmul
aad
ss
xchg
repz
mov
mov
call
push
or
push
push
nop
pop
pop
mov
inc
mov
rol
ja
sbb
(bad)
inc
cmp
or
jecxz
add
out
(bad)
aad
dec
int3
pop
(bad)
inc
sbb
xor
inc
retf
xor
popa
add
pusha
bound
xchg
retf
or
and
(bad)
mov
dec
lods
data16
add
lea
mov
int3
sbb
out
mov
mov
ins
mov
sub
mov
cwde
icebp
pushf
push
or
sub
dec
clc
mov
jmp
test
je
mov
rcr
mov
mov
mov
or
adc
cmp
mov
jmp
cmp
mov
fistp
add
js
loope
sbb
pop
mov
inc
jb
nop
sbb
sbb
les
lods
pop
test
scas
jae
sbb
pusha
ja
aaa
idiv
cld
stc
add
cmp
fisttp
add
jmp
je
aaa
outs
inc
nop
lock
mov
pop
bound
cdq
xchg
inc
lock
jge
je
mov
ror
repz
inc
sub
in
scas
jle
in
imul
mov
adc
sbb
pusha
ja
xchg
adc
sbb
lds
cmps
add
jge
test
or
mov
or
add
outs
push
or
shr
adc
mov
sbb
jno
jb
inc
push
scas
pop
jbe
lea
scas
shr
call
jmp
add
aaa
vmread
push
test
stos
nop
imul
adc
inc
xchg
pop
test
mov
retf
sar
sbb
sub
clc
jmp
popf
pop
and
cmovb
jo
popa
xor
adc
movups
or
xchg
add
push
sbb
es
pop
inc
cmovo
int3
js
mov
push
mov
jnp
mov
push
ins
jnp
into
cmp
push
sbb
jge
mov
cs
es
and
aam
mov
enter
push
ins
push
and
or
fdivp
fidiv
xchg
scas
call
xchg
jl
fld
adc
fdivr
lahf
ja
lahf
movs
call
push
pushf
shr
and
sub
or
outs
pop
inc
and
in
daa
and
mov
jg
or
je
jo
adc
test
outs
push
inc
outs
jb
imul
icebp
push
sub
ret
sbb
gs
js
gs
ficom
dec
fild
dec
data16
dec
or
jle
loop
outs
stos
outs
pusha
or
loope
cmp
outs
push
cvtps2pi
add
push
add
inc
clc
or
popa
fs
dec
add
leave
sub
pop
int
movs
into
inc
mov
and
mov
dec
test
xor
xor
or
adc
cld
adc
rcr
das
mov
push
add
push
ror
xor
dec
test
into
je
or
add
prefetch
cli
sbb
(bad)
and
cs
sti
or
xor
push
clc
clc
mov
les
add
xor
pop
out
and
inc
inc
sbb
adc
sbb
mov
cld
aas
mov
out
adc
dec
gs
lahf
fdiv
popa
addr16
jo
cmp
arpl
shr
adc
xchg
cmp
xchg
mov
popf
loop
mov
push
adc
jne
push
ds
unpckhps
push
cwde
gs
int3
or
lods
sbb
test
ret
push
pop
popf
stos
adc
je
push
dec
adc
arpl
arpl
or
xor
loopne
pop
or
push
rcl
ins
int3
xchg
xlat
or
loopne
fmul
jmp
js
or
adc
push
push
push
shl
clc
popf
add
rol
sbb
or
loopne
int3
mov
mov
popf
and
push
fsub
(bad)
sbb
jge
xor
out
loopne
xchg
mov
add
jne
jmp
pushf
cmp
xbegin
scas
in
loop
inc
pusha
test
xchg
dec
aaa
sub
mov
sbb
test
jle
imul
aas
call
ficomp
int3
sbb
test
out
dec
push
mov
or
sub
add
xor
lahf
lock
adc
sbb
enter
lock
cld
and
jo
enter
push
pusha
bound
call
aam
fisub
mov
icebp
ret
xor
sub
sbb
add
sub
and
push
add
ror
fstp
fimul
(bad)
xchg
inc
or
cwde
or
mov
mov
pop
mov
icebp
mov
mov
cmp
loop
inc
dec
xchg
xor
mov
shl
dec
cwde
(bad)
jmp
inc
fsubr
mov
pop
movs
in
add
jle
cmp
cwde
adc
test
mov
xor
lock
sbb
sti
rcl
in
clc
jmp
sub
std
sbb
push
int3
sbb
jo
cmp
xor
and
shl
sub
and
xchg
movs
mov
into
in
mov
mov
stos
mov
lock
shr
push
push
mov
std
xor
sbb
dec
pop
jmp
mov
sub
pop
cwde
in
mov
das
pop
sub
cmp
and
cwde
dec
adc
imul
pop
test
and
cmps
ja
xor
push
jnp
shl
mov
fadd
pop
into
mov
test
pop
xor
pop
js
adc
mov
mov
sub
shl
jmp
inc
xor
inc
inc
pusha
add
and
and
or
sbb
fs
add
adc
das
stos
adc
dec
or
xlat
inc
pusha
mov
add
adc
inc
pop
test
or
dec
jbe
add
sbb
das
jmp
or
push
std
test
mov
and
push
add
mov
scas
out
sub
add
das
jle
sbb
cmp
adc
bound
or
pop
je
sub
daa
or
add
jbe
ror
hlt
rol
loopne
push
mov
fdivr
outs
mov
push
shr
test
loopne
or
rcl
pushf
fcomp
ret
pop
xchg
or
push
fld
fdivr
xchg
cwde
fld
mov
fidivr
lods
(bad)
push
and
inc
pop
lock
lods
js
mov
sub
pop
cs
push
pushf
push
add
sub
outs
xor
mov
inc
(bad)
fst
inc
jb
gs
in
push
sub
push
mov
data16
je
int3
jo
add
mov
in
adc
push
ins
inc
ins
fs
gs
mov
pop
(bad)
jp
inc
dec
fistp
and
pop
mov
inc
jo
cmovbe
idiv
ret
add
mov
and
in
jae
or
pushf
and
inc
mov
ins
mov
cmp
sar
dec
push
(bad)
stos
bndstx
push
shl
imul
add
dec
xlat
lock
mov
das
push
push
aas
inc
pop
inc
mov
sahf
aas
neg
or
test
aad
and
and
(bad)
inc
(bad)
dec
popf
push
push
and
aaa
pop
pop
jo
call
push
inc
push
push
cmp
or
jmp
daa
sti
fdiv
movs
mov
inc
in
push
jns
ret
jo
fistp
or
adc
inc
callw
inc
xor
cdq
out
inc
sbb
add
or
pop
sahf
jo
pop
cmps
cmp
loopne
data16
dec
(bad)
xchg
push
and
or
inc
inc
ins
ins
outs
ja
ficom
test
add
mov
movs
sub
fcmovbe
dec
int3
sub
sbb
xor
mov
icebp
or
ret
fist
stos
dec
pop
inc
mov
jns
sahf
inc
inc
or
les
sbb
push
aas
cmc
ror
aad
adc
ror
jge
mov
jge
in
gs
jmp
pop
retf
rcl
aam
scas
test
fs
scas
inc
outs
retf
mov
or
sub
add
xor
push
sti
jmp
imul
imul
mov
test
and
and
adc
loopne
out
and
add
add
xor
mov
pop
test
inc
pop
or
and
fisttp
dec
cmc
add
inc
add
mov
inc
pusha
xchg
push
sub
adc
cmp
int
imul
add
mov
mov
pusha
mov
int
fcom
cmp
push
jb
push
dec
pop
mov
or
mov
sti
add
dec
ja
mov
cli
ja
ja
inc
inc
push
push
mov
fisttp
inc
dec
sbb
shr
dec
shr
add
dec
ror
sub
add
and
xor
inc
cwde
jmp
adc
sbb
outs
xchg
es
aaa
inc
inc
add
xchg
add
in
adc
pop
pop
mov
rcl
push
push
sub
int3
or
pop
adc
pop
inc
pop
shl
pop
stos
inc
inc
gs
mov
cmp
dec
jmp
or
(bad)
pop
inc
data16
pop
or
fadd
inc
xor
mov
(bad)
dec
inc
add
cmp
cwde
fbld
arpl
cdq
or
or
inc
dec
adc
mov
pop
movs
push
and
jecxz
sub
mov
jecxz
rcl
lods
adc
xchg
(bad)
xchg
das
push
out
aas
lods
jno
push
setne
inc
or
movs
iret
mov
push
push
je
cwde
push
mov
test
(bad)
dec
call
lea
mov
add
adc
xor
mov
push
xor
inc
and
mov
pop
jecxz
lods
ss
or
mov
and
rcr
arpl
(bad)
inc
pop
call
push
sti
add
and
arpl
sbb
pop
or
jl
je
add
pop
push
sub
rcr
das
cmp
add
xchg
sbb
sub
mov
loopne
icebp
std
imul
nop
push
cmp
test
pusha
call
and
loopne
mov
in
mov
or
mov
fiadd
or
or
ins
xchg
or
push
adc
in
pop
pusha
sub
jo
xchg
jo
jb
sbb
xor
inc
jns
xor
xor
push
lds
and
sahf
dec
pop
loopne
dec
xchg
dec
repnz
or
loopne
dec
in
or
jg
inc
xchg
and
push
mov
xor
jl
clc
ret
mov
loopne
push
ret
in
cmp
push
push
add
rcl
hlt
in
add
cs
lods
cmp
xor
cmps
sar
test
jb
test
sti
call
stc
mov
mov
cmp
adc
pop
xchg
addr16
jne
and
(bad)
push
imul
lods
test
out
ror
lea
cmp
call
aad
test
daa
cmps
setae
adc
je
cmp
jle
cmp
mov
adc
push
cmp
adc
push
repz
push
cmp
call
add
mov
cmps
push
cwde
jno
ja
ret
jo
or
jne
je
cmp
aad
sub
sub
clc
loopne
push
and
je
sbb
dec
adc
mul
add
loop
cmp
push
adc
xchg
pop
add
jo
or
adc
inc
jo
cli
cmp
jmp
mov
push
sbb
int3
sbb
or
pusha
stos
into
xor
adc
push
sbb
pop
add
xor
add
mov
and
pop
and
les
test
stos
and
pop
pop
pop
mov
pop
mov
retf
retf
movhps
je
call
data16
cmc
cmp
jne
add
ret
jne
pop
or
cmc
(bad)
jle
push
sahf
hlt
mov
cwde
imul
ins
xor
or
sub
dec
or
inc
cmp
popa
jae
stos
inc
add
jg
push
rol
xor
lock
mov
mov
cmp
and
lods
in
lock
sbb
xor
mov
ja
mov
sti
mov
sbb
outs
int
inc
dec
push
stos
xor
inc
in
push
mov
rol
mov
pop
xchg
fmul
dec
and
push
jo
sbb
mov
mov
xor
jge
clc
push
cmps
add
call
call
sub
xor
mov
ret
mov
cmp
pusha
inc
push
pop
pusha
add
rol
and
mov
and
sub
ss
ret
and
ret
ds
pop
sbb
xchg
push
pop
das
pushf
add
sahf
and
ret
mov
js
test
fild
rcl
in
repnz
xchg
in
movs
inc
pop
fidivr
rol
or
das
push
in
icebp
in
out
sahf
repnz
stos
sub
mov
dec
loopne
lahf
mov
out
loopne
rcl
mov
daa
daa
call
add
popa
fisubr
outs
fs
test
dec
push
cmps
int3
sbb
daa
push
outs
jb
sub
int3
imul
xor
xor
push
or
xor
inc
pop
loope
jmp
or
rol
rcl
test
das
pop
push
inc
dec
outs
cs
fs
cmp
xor
gs
dec
mov
imul
outs
xchg
sub
or
inc
push
push
ja
pop
add
adc
aas
in
cmps
xchg
push
or
jnp
pop
imul
jae
cs
sbb
clc
pop
jne
jl
xor
fs
pop
dec
popa
ins
xor
xor
adc
cs
gs
xor
lock
xor
popa
inc
data16
imul
adc
mov
adc
adc
(bad)
mov
cmp
mov
sub
test
push
int3
psrad
and
je
ins
imul
jle
inc
je
ins
daa
xor
xor
xor
mov
popa
and
mov
adc
shr
and
inc
push
mov
sub
push
mov
data16
add
cmp
or
inc
push
pop
bnd
popf
push
popf
add
pop
(bad)
nop
xlat
sub
daa
and
add
xchg
pop
inc
mov
mov
jg
and
out
or
and
sbb
and
and
or
push
dec
sbb
jge
push
(bad)
push
jbe
call
ins
jmp
jmp
(bad)
test
or
jnp
mov
dec
adc
sub
adc
mov
pop
push
sub
adc
lock
mov
dec
dec
inc
dec
cmp
dec
sub
imul
enter
test
loopne
pop
mov
push
nop
dec
movs
rcr
xor
ret
mov
lock
rcl
fild
pusha
rol
jnp
and
jp
mov
inc
cwde
jb
mov
cmps
adc
or
into
xor
jmp
repnz
into
push
jecxz
mov
xor
mov
xchg
xor
add
pop
mov
jb
ins
jmp
sbb
or
int3
add
mov
pop
jbe
dec
push
inc
rcl
je
dec
xor
pusha
or
dec
call
or
xor
xchg
and
adc
test
add
inc
xchg
cs
push
retf
das
fisub
(bad)
je
ja
cwde
jle
ror
dec
add
jmp
or
xchg
push
pop
inc
fisttp
xchg
arpl
sar
mov
adc
add
and
into
xchg
test
clc
test
lock
test
inc
or
test
xchg
or
je
je
fnsave
or
cmp
mov
pop
or
and
aaa
mov
mov
enter
dec
inc
mov
or
scas
je
inc
inc
or
pop
push
loope
xor
mov
jmp
ror
movs
pop
sbb
mov
sbb
ffree
or
aad
jns
pop
icebp
xchg
jns
fcom
les
int3
loope
ret
sbb
cmp
sti
jge
cmp
push
lea
aaa
xchg
clc
pop
sbb
xchg
jbe
jne
pop
cdq
pop
data16
xor
out
loopne
xchg
and
and
dec
cmp
and
mov
dec
mov
retf
arpl
sbb
sbb
nop
cdq
mov
xor
sbb
mov
mov
imul
sbb
je
lahf
push
or
in
mov
ja
sub
loopne
adc
dec
push
test
outs
mov
lahf
sbb
setbe
inc
push
mov
mov
mov
lea
mov
sub
cwde
inc
das
shl
cmp
mov
cmp
ret
mov
popf
or
loope
ret
ret
dec
(bad)
and
jg
jmp
cs
inc
test
fimul
stc
gs
sub
fsub
sti
retf
mov
in
jg
shl
mov
fsub
cwde
inc
push
cmp
ret
call
loopne
scas
leave
xor
(bad)
fiadd
xor
and
xor
fwait
cs
mov
mov
mov
mov
shr
out
pop
outs
out
test
and
mov
outs
pop
mov
ror
cmc
ret
pop
sub
fimul
add
push
xchg
sub
mov
mov
cmp
rcr
sbb
adc
shl
aaa
add
pusha
xchg
lods
add
movs
push
cmp
add
cmps
adc
imul
inc
sub
or
out
mov
shr
ret
push
inc
mov
dec
add
push
fld
dec
js
push
or
xor
dec
je
push
mov
dec
sub
outs
mov
shl
in
outs
out
imul
adc
bound
daa
outs
and
imul
jae
and
xchg
(bad)
cmp
xchg
mov
jle
jmp
cs
(bad)
icebp
adc
arpl
adc
pop
jl
fdivr
xchg
shr
mov
cmp
fstp
rcr
mov
xchg
mov
scas
xchg
jmp
fcom
mov
es
mov
xchg
arpl
mov
ja
xchg
imul
dec
xchg
mov
loop
mov
inc
mov
xchg
sar
ins
adc
jmp
add
mov
test
sbb
mov
adc
sar
sbb
cmp
mov
sbb
pop
dec
inc
(bad)
push
out
fisttp
push
ins
imul
loope
add
pop
jnp
neg
jnp
push
inc
sbb
das
scas
lock
sbb
inc
dec
fs
inc
push
mov
jo
shl
jmp
and
jns
dec
inc
dec
mov
inc
push
adc
add
sub
mov
add
pop
rcl
(bad)
cdq
cmps
mov
or
sti
in
xlat
or
add
jae
mov
or
ins
fsubr
ds
and
inc
and
je
test
lahf
adc
jne
push
fsubr
lods
or
adc
lods
aas
and
sub
movs
cmp
jno
dec
(bad)
es
cmc
das
push
jecxz
outs
ins
push
lock
mov
inc
xor
not
push
jecxz
stc
es
test
div
mov
hlt
add
mul
push
fwait
int
mov
inc
pop
push
fcom
sub
mov
or
or
pop
add
adc
inc
adc
repnz
addr16
mov
pop
fcom
faddp
dec
loopne
movs
lods
or
addr16
jp
jmp
icebp
call
fcomp
sbb
inc
div
sub
inc
mov
pop
add
sbb
sub
test
sbb
sbb
movs
mov
outs
outs
aaa
das
push
int3
adc
or
imul
pop
ret
mov
sub
test
call
dec
jbe
outs
jns
outs
in
mov
ins
add
add
inc
or
fadd
dec
pop
nop
call
call
or
(bad)
(bad)
les
bound
add
fstp
in
push
dec
imul
mov
xor
(bad)
js
shr
add
mov
or
add
cdq
push
xchg
imul
mov
inc
push
popa
lock
pop
(bad)
xchg
pusha
mov
out
and
jne
xchg
jns
and
gs
inc
mov
or
mov
pop
or
cdq
or
add
mov
or
xor
sbb
push
outs
inc
xor
push
and
adc
push
hlt
or
inc
lahf
pop
add
popf
or
xchg
xlat
lea
pop
pop
and
aaa
mov
sub
add
js
push
or
add
inc
pop
inc
add
inc
aad
push
inc
fwait
cmp
lds
sbb
pop
cmp
and
mov
ror
cmp
cmp
xor
jb
rol
add
retf
pusha
mov
dec
push
es
mov
push
xchg
lea
mov
adc
or
scas
movs
push
inc
or
inc
push
push
cmp
idiv
pop
push
fs
lea
hlt
sbb
retf
enter
cmp
rcl
or
or
data16
out
into
add
mov
mov
and
add
or
mov
ss
and
adc
jae
clc
jmp
push
(bad)
mov
xor
mov
cmp
pushw
mov
mov
dec
ret
shr
pushw
dec
cmps
jmp
push
or
mov
movs
cmp
rol
(bad)
mov
cmp
movs
push
test
xor
mov
xchg
(bad)
bound
sub
push
xor
scas
fst
imul
leave
and
pop
dec
in
sub
and
cmp
test
in
in
push
dec
loopne
xchg
push
push
push
rcl
addr16
inc
clc
cmp
sbb
leave
sbb
adc
mov
inc
out
xor
(bad)
imul
aas
adc
lahf
out
lea
push
jp
mov
icebp
mov
mov
loop
data16
outs
mov
cs
xor
aaa
movs
bound
push
and
jle
push
pop
std
pop
sbb
clc
or
movs
and
mov
jo
cmp
and
and
sbb
repz
mov
sub
je
or
sub
pmaddwd
imul
les
pop
sbb
test
mov
call
ins
and
push
repnz
push
and
shr
pusha
in
mov
and
sbb
out
fs
fild
stos
shr
mov
mov
movs
sub
or
xchg
dec
in
push
and
fldenv
pusha
dec
shl
(bad)
mov
(bad)
jl
lahf
pop
add
push
push
daa
inc
ja
shl
mov
mov
mov
jge
push
scas
ret
ins
inc
test
std
jnp
dec
clc
cmp
lock
add
or
cwde
out
push
push
pop
mov
int3
add
xchg
inc
test
add
clc
arpl
pushf
shl
push
fld
loope
aam
push
(bad)
mov
adc
jecxz
lea
test
mov
loop
mov
jecxz
mov
imul
mov
mov
out
rol
xchg
and
add
(bad)
mov
add
pop
push
push
rol
push
add
pop
jbe
pop
test
xchg
jae
mov
pop
push
or
les
femms
shl
jmp
adc
push
mov
jne
push
xchg
mov
stc
mov
xor
sub
jp
jg
cmc
sub
jg
mov
sub
mov
mov
pop
or
js
outs
or
fisubr
push
or
and
mov
push
xor
or
or
sbb
sub
mul
(bad)
and
inc
mov
and
sub
mov
je
push
or
std
loopne
scas
cmp
ja
test
retf
repz
pop
int3
and
xchg
mov
jecxz
sub
cld
icebp
inc
and
popf
hlt
and
aad
mov
and
and
dec
call
pop
push
dec
call
adc
mov
and
loopne
cmp
loopne
es
cmps
inc
jne
jp
fmul
daa
stc
sbb
sub
mov
sub
mov
add
fsubr
push
xchg
aam
sub
out
cli
jo
mov
call
jo
int3
mov
lsl
out
add
sbb
pop
(bad)
popw
jmp
cmp
out
aad
out
(bad)
jmp
cs
inc
cmp
sbb
cdq
loop
cmp
dec
xchg
and
pop
sbb
and
inc
mov
and
mov
xor
xor
push
cwde
xchg
iret
popf
mov
pop
adc
ja
push
test
dec
xchg
fimul
adc
xor
xor
adc
test
ja
adc
cmp
mov
out
jno
push
adc
movs
stos
dec
call
xchg
sub
and
gs
popa
push
outs
jle
xchg
add
pop
xor
adc
pop
adc
adc
leave
push
hlt
int3
mov
adc
sub
adc
cmps
jne
inc
mov
inc
add
test
ret
sub
dec
xor
shl
mov
sbb
mov
add
sete
shl
enter
test
mov
jne
sbb
jbe
mov
cmp
mov
sub
loopne
imul
loope
add
adc
cwde
stos
dec
sub
jb
je
jmp
cmps
pop
or
ror
in
cmp
jmp
lock
inc
repz
sub
setb
cld
xchg
adc
push
add
add
aas
fdiv
cmp
xor
jg
rol
rol
pop
mov
inc
xchg
sar
nop
push
add
dec
add
push
xchg
add
sbb
mov
mov
cli
adc
das
push
inc
adc
mov
and
pop
mov
add
mov
add
ret
dec
and
mov
jnp
add
cld
push
stos
ret
mov
rcr
cmp
jne
les
mov
add
mov
add
test
sbb
sti
cmp
inc
mov
push
adc
cld
in
add
pop
clc
test
push
mov
add
sbb
xor
xor
aas
bound
sbb
add
xchg
repnz
dec
scas
jo
inc
cmp
mov
mov
mov
pop
loopne
push
fisub
sahf
or
fisub
add
jbe
mov
inc
cmp
jbe
dec
enter
sbb
ret
mov
out
xor
push
loope
adc
cmp
and
je
or
push
loop
cmps
(bad)
mov
sbb
pop
mov
stos
and
cwde
mov
jmp
(bad)
or
mov
mov
add
bound
andnps
icebp
nop
xchg
sti
sbb
sbb
fsubr
js
shl
adc
adc
sub
stos
cmp
sub
mov
dec
das
add
ret
ret
xor
pusha
cmp
dec
xchg
push
xor
xor
popa
xor
rol
or
xlat
mov
out
push
lahf
push
lds
jmp
repz
push
pop
and
cli
jecxz
repz
dec
bound
adc
cmp
inc
and
popa
(bad)
call
xor
dec
(bad)
repz
repz
rol
sbb
ror
mov
and
sbb
mov
mov
test
repz
out
test
add
jns
in
hlt
hlt
ss
pop
and
xor
mov
adc
pop
push
call
sub
mov
cmps
or
adc
mov
icebp
add
inc
outs
mov
xor
fisubr
xchg
test
xor
sub
cdq
(bad)
pushf
test
or
sbb
inc
and
xchg
ds
push
in
imul
xchg
push
movs
mov
jle
dec
add
data16
cmp
mov
pusha
xor
mov
sub
push
loopne
sub
call
mov
mov
sbb
in
mov
repnz
movhps
or
clc
add
les
add
icebp
and
sbb
or
or
clc
out
push
ins
jle
adc
sub
rcr
xlat
add
push
dec
add
and
mov
ficom
adc
and
sbb
fld
or
outs
adc
movs
movq
ins
daa
clts
fisttp
add
ja
pushf
out
popf
shl
jmp
cmp
jg
add
dec
fdivr
sbb
mov
xchg
add
and
je
in
dec
xchg
jg
shl
arpl
sbb
add
arpl
dec
bound
pop
push
pop
arpl
inc
mov
(bad)
and
jg
push
xchg
add
push
mov
push
jg
jns
cs
test
mov
cmp
sahf
fld
mov
ins
inc
jp
les
dec
mov
sub
mov
retf
mov
push
sbb
mov
mov
out
inc
imul
push
test
or
test
mov
add
xchg
js
adc
push
cmps
and
dec
sbb
pop
outs
mov
add
retf
sbb
jne
mov
add
fwait
call
lahf
fwait
and
adc
add
mov
or
mov
ror
dec
mov
jb
or
dec
loope
mov
nop
mov
mov
lock
movzx
mov
mov
je
jmp
hlt
mov
repz
cmps
loop
aad
daa
loopne
and
leave
fistp
ins
mov
cmp
fsub
push
and
add
pop
in
push
mov
mov
lea
clc
cmps
(bad)
mov
jae
daa
ins
ret
dec
mov
inc
or
and
rcr
inc
adc
adc
inc
ins
xlat
jns
out
mov
jmp
aad
into
call
rol
add
mov
jl
loopne
int3
cmp
sub
xor
int3
xor
rcr
int3
lods
add
loop
dec
aam
xchg
mov
sar
cmp
rol
int3
mov
xor
enter
lods
dec
push
movs
scas
inc
out
outs
dec
fst
push
push
jmp
ffree
inc
xchg
cmp
inc
in
mov
cmc
js
add
cdq
leave
aam
int
int
sahf
repz
sbb
jbe
xor
push
sub
push
sbb
das
xlat
inc
mov
adc
mov
mov
add
mov
je
bound
imul
mov
xor
and
outs
xor
dec
test
repz
mov
pop
rcl
shr
mov
btc
daa
add
retf
add
pop
ret
enter
and
ror
mov
test
sbb
adc
stos
sti
add
push
ja
gs
xchg
dec
pop
inc
push
mov
pop
xlat
push
xor
pop
imul
push
and
mov
jmp
xor
pop
jle
(bad)
mov
rol
loopne
cld
add
in
mov
clc
mov
ret
add
adc
inc
xor
mov
sub
ins
mov
or
inc
out
test
call
mov
pop
add
sti
add
stos
lea
cmp
scas
into
adc
push
loop
push
loopne
inc
retf
mov
popa
xchg
add
xchg
jmp
loop
mov
jmp
add
dec
add
std
inc
push
lds
sbb
mov
add
dec
jne
sbb
inc
js
push
add
popa
sti
jbe
xor
shl
or
ds
lods
adc
jo
inc
add
loope
sub
push
inc
clc
cwde
sub
call
and
gs
cmp
pushf
cli
fdivr
adc
jmp
or
mov
scas
ret
inc
mov
fcom
sbb
push
or
in
or
cmp
adc
mov
in
cmp
add
and
test
push
fisubr
jno
adc
add
xor
repz
repz
adc
fcomp
mov
jmp
push
jmp
aaa
pop
std
cmp
add
in
and
outs
add
push
in
push
cmp
cmp
test
ret
pop
hlt
popa
int
stos
leave
clc
push
in
mov
pop
out
lds
push
nop
sbb
jo
data16
or
clc
ret
aaa
xor
clc
mov
into
mov
mov
fnstcw
rcr
sbb
fld
jae
inc
mov
or
adc
out
outs
js
and
inc
mov
xchg
mov
or
test
jne
(bad)
inc
idiv
add
xor
in
je
mov
jne
push
or
jge
and
bound
int3
clc
stos
pop
sti
loop
or
mov
arpl
inc
in
pop
push
(bad)
cmp
jo
arpl
jg
xchg
add
(bad)
xchg
sbb
mov
aam
daa
adc
sub
shr
pusha
add
mov
dec
mov
cmp
xor
add
jg
and
inc
push
sbb
mov
pop
addr16
sub
pop
cmp
xor
cwde
mov
lea
mov
mov
mov
mov
cmp
cld
and
movs
int
mov
jle
adc
(bad)
jle
fadd
les
push
test
push
(bad)
push
add
and
jo
adc
ins
pop
pushf
inc
mov
inc
fadd
pushf
jge
push
dec
add
out
imul
fstp
inc
add
ss
add
lock
sahf
ss
out
mov
push
sub
xor
adc
add
sub
or
or
inc
mov
fcom
push
pop
pop
pmaxub
push
and
mov
shl
mov
jl
ins
jnp
mov
fiadd
pop
pop
fs
mov
cs
fcmovnu
in
push
das
ror
adc
cmps
fnstcw
pusha
jbe
jge
and
int
or
daa
ss
xchg
scas
call
push
dec
test
xchg
adc
pop
out
jns
fdivr
movs
inc
scas
pop
cs
add
jns
pushf
shr
sub
push
mov
mov
sbb
adc
int3
add
es
ins
push
or
imul
add
add
dec
outs
jne
dec
push
in
and
es
adc
or
jb
sub
mul
jmp
(bad)
lahf
fwait
sub
inc
inc
gs
jne
je
(bad)
adc
xchg
pop
mov
outs
inc
xor
gs
add
push
pop
xor
mov
inc
data16
jb
movs
adc
push
outs
arpl
gs
ins
ins
push
popa
inc
cmp
lods
or
in
(bad)
cmp
inc
push
jb
outs
jae
popa
sahf
outs
aam
outs
js
cmp
push
or
sbb
ins
jo
imul
call
inc
push
jae
dec
popa
ins
sub
mov
scas
sbb
sub
push
gs
out
or
push
cmp
pop
push
sbb
push
pop
inc
jae
outs
(bad)
add
add
mov
inc
add
(bad)
(bad)
and
inc
mov
and
and
mov
dec
retf
add
sahf
push
dec
loop
dec
ret
mov
loop
shl
pop
pusha
mov
mov
jns
ss
movs
push
ins
data16
xor
fcomp
push
jl
adc
push
sbb
dec
lock
adc
inc
cld
push
arpl
jo
rcl
xor
push
jb
mov
outs
loop
inc
imul
pusha
mov
call
mov
inc
inc
outs
popa
bound
push
or
cmp
cmp
pop
xchg
push
xchg
sbb
inc
aaa
shl
jmp
add
jmp
inc
inc
into
or
mov
pop
inc
out
mov
ret
inc
inc
sbb
pusha
xchg
add
arpl
fcomp
mov
inc
setb
hlt
sub
ret
rcr
mov
mov
add
add
sbb
in
int3
push
in
or
and
mov
mov
cld
add
enter
int3
or
and
inc
pop
retf
enter
mov
pop
mov
dec
mov
jmp
jo
int3
pop
inc
or
xchg
lea
dec
pushf
pop
pop
dec
mov
(bad)
fcomp
inc
dec
or
mov
js
xchg
xor
mov
or
lock
lock
ret
nop
xchg
mov
ret
loopne
pusha
test
xchg
jns
test
bswap
jle
xor
mov
dec
sbb
or
outs
cmp
pop
sbb
mov
movzx
and
fiadd
push
ret
sbb
push
adc
dec
mov
cdq
mov
add
int3
fcomp
inc
and
fbld
(bad)
clc
mov
js
outs
add
jle
lea
sub
rcl
push
mov
mov
loopne
lea
xor
test
push
cmp
or
mov
add
push
neg
cli
cld
fnstsw
add
int3
loope
outs
aas
mov
sar
out
pop
loope
sbb
push
xor
or
inc
and
and
adc
(bad)
je
test
jle
push
inc
ins
xlat
ror
push
(bad)
and
push
mov
dec
dec
cli
mov
pop
ret
mul
or
push
xlat
and
inc
js
sahf
pop
jne
pop
and
and
pop
es
pusha
dec
enter
inc
xchg
int
xchg
pop
add
xchg
sbb
jle
mov
out
add
add
mov
dec
pop
add
pop
jo
(bad)
js
mov
sbb
test
push
retf
retf
dec
pop
(bad)
pop
outs
jge
fwait
cmp
das
push
push
lea
mov
jae
add
adc
std
push
xchg
fbld
xchg
xchg
int3
mov
push
ins
pusha
cmp
dec
fadd
xor
ret
popa
push
mov
ret
add
push
ret
push
adc
ret
(bad)
hlt
in
cdq
je
std
mov
inc
dec
add
aas
cmp
xchg
and
mov
cwde
fucomp
(bad)
mov
cld
call
jg
mov
dec
and
cmc
out
inc
cmp
sbb
xchg
add
call
je
dec
and
fs
jmp
ds
fcom
fs
das
pushf
das
mov
loopne
or
mov
rcr
sub
inc
xchg
adc
ss
or
sub
retf
adc
je
mov
icebp
jmp
push
push
(bad)
or
neg
xor
je
add
push
cmp
test
sbb
les
adc
xchg
imul
mov
jge
sub
dec
daa
inc
mov
sbb
clc
je
sar
jae
xchg
cmp
fsubr
jne
call
jl
sbb
test
popa
mov
and
(bad)
or
fimul
cmp
hlt
mov
mov
jmp
cmp
mov
dec
or
shr
(bad)
cmp
loope
dec
fstp
push
pushf
ret
jne
stos
add
hlt
adc
add
aaa
xor
data16
or
test
scas
ss
jne
cmp
cwde
mov
cmp
dec
mov
fcom
mov
or
(bad)
sbb
stos
cmp
in
push
mov
adc
mov
mov
daa
inc
inc
push
inc
dec
cmp
push
sbb
jle
push
aaa
sub
add
pop
das
test
scas
inc
div
push
push
dec
xchg
push
out
(bad)
sar
je
ins
test
pop
cwde
pop
popa
jb
scas
pop
sbb
mov
aas
add
mov
mov
xor
mov
push
sub
push
mov
sbb
data16
jae
jbe
clts
add
clc
mov
imul
jne
inc
outs
outs
push
dec
std
js
imul
inc
inc
popa
je
sahf
push
or
mov
cmp
es
or
mov
push
dec
pushf
ud0
in
(bad)
in
add
imul
push
inc
in
sub
push
mov
cmp
in
in
add
mov
(bad)
imul
inc
lock
ins
ja
or
sbb
mov
sti
push
and
cdq
dec
xchg
or
clc
ret
lahf
inc
js
gs
es
fadd
movs
or
jo
mov
(bad)
push
inc
mov
jecxz
and
arpl
addr16
out
inc
push
(bad)
or
cmp
xor
ja
scas
inc
dec
add
push
pop
popa
ror
lea
add
pushf
dec
outs
ja
mov
add
add
gs
outs
lock
test
jo
push
scas
add
clc
mov
mov
cs
xchg
mov
loopne
fs
je
pop
or
mov
xlat
inc
or
das
adc
(bad)
mov
loopne
push
sbb
lods
das
or
inc
ja
fsubr
add
addr16
inc
add
out
ss
mov
add
aaa
pop
mov
inc
pop
xchg
mov
arpl
xchg
jmp
sub
push
add
push
shl
push
xlat
or
aas
push
push
gs
sbb
pop
xchg
lds
adc
xor
repz
inc
add
xchg
inc
data16
iret
movs
cmp
push
outs
ror
or
ja
push
pop
pusha
adc
mov
mov
ret
aas
in
xor
call
push
cmp
push
das
js
adc
lock
or
loope
mov
hlt
jne
jmp
mov
add
stos
loope
xor
aam
sahf
mov
or
xor
int3
sbb
sbb
jo
in
jmp
int
cmps
mov
(bad)
push
inc
xor
fdivrp
ret
faddp
fsubr
add
or
iret
pop
shl
mov
push
mov
test
xchg
push
jmp
lods
dec
dec
cmp
vcvtsi2sd
add
js
mov
push
sub
cmp
push
scas
push
cmp
push
xchg
es
mov
inc
outs
outs
ins
xchg
fiadd
adc
xchg
imul
inc
pop
inc
add
mov
and
add
aas
mov
rol
mov
scas
test
sbb
push
aas
frstor
in
xor
xor
xor
jbe
sbb
rol
loope
sub
ds
cmp
(bad)
or
psubb
push
into
pop
leave
leave
leave
lods
pop
jb
add
mov
cwde
and
or
inc
jae
imul
cmp
or
aam
js
inc
add
xchg
jne
and
sbb
out
push
mov
add
fwait
iret
imul
cmovns
push
je
mov
jae
dec
mov
shl
(bad)
mov
ror
jns
(bad)
daa
pusha
pop
mov
inc
ins
jo
xchg
dec
add
jle
and
push
outs
jo
in
adc
retf
and
push
jne
ins
inc
pop
sbb
push
inc
pop
std
gs
icebp
xchg
xor
add
test
movs
das
ret
jo
sahf
sbb
dec
cmps
or
jb
inc
jle
cmps
add
data16
ja
jae
bound
or
jae
pushf
fidivr
mov
xchg
popa
nop
or
movs
pop
sbb
ret
push
leave
push
add
xor
cli
jl
dec
sub
cmp
inc
dec
jb
outs
rol
aaa
pop
sub
xchg
daa
lds
xchg
xchg
jo
adc
pop
bound
xor
mov
inc
rcl
adc
das
xchg
movups
push
mov
jmp
adc
adc
rsqrtps
adc
push
aaa
mov
rcl
pop
pushf
enter
or
xor
rcl
dec
or
mov
add
fcmovbe
(bad)
cli
movs
fs
add
xchg
xor
(bad)
cmp
aas
adc
inc
inc
mov
sbb
mov
push
xor
ret
or
xor
pop
and
nop
mov
inc
jae
ja
cmp
addr16
push
or
cmp
jo
lods
mov
(bad)
clc
add
aam
call
pushf
push
loop
push
jecxz
or
fstp
xor
cmp
or
ror
out
mov
pop
pop
mov
gs
inc
jne
and
add
inc
mov
inc
sti
popf
out
mov
inc
inc
push
mov
cmp
cdq
push
jbe
inc
push
cwde
xor
(bad)
aad
mov
stos
sbb
daa
adc
add
add
test
jb
pop
jnp
das
fdivr
push
inc
sbb
das
outs
push
mov
adc
mov
ja
sub
fild
xor
das
cwde
sub
aaa
lea
dec
cmp
pop
pop
divps
inc
xchg
lock
pusha
sbb
push
gs
imul
jp
popa
imul
push
rol
rcl
add
cmp
xchg
je
jo
outs
fs
cmp
pop
or
or
push
or
push
push
jne
and
push
xor
or
pop
jnp
mov
cdq
jbe
retf
int
pop
loope
aad
xor
or
popa
out
push
fcomp
inc
jl
test
mov
mov
fstp
call
dec
outs
and
stc
add
mov
test
add
cmp
adc
aam
or
fild
cld
fs
cwde
outs
jne
or
sbb
jmp
push
dec
cmp
cld
sbb
aas
sub
and
outs
jae
stos
aas
pushf
mov
loopne
test
cli
push
cmc
or
aas
push
xchg
add
test
dec
lahf
mov
jns
sti
fidiv
inc
push
push
push
pop
pop
imul
pushw
hlt
dec
mov
test
inc
mov
or
or
xlat
mov
andps
inc
nop
out
dec
loope
mov
sbb
dec
jb
je
mov
and
popa
ins
mov
aad
and
inc
or
mov
push
push
sub
inc
add
fisubr
sti
adc
jmp
inc
sbb
inc
pop
sbb
lods
sbb
popaw
jae
loop
jb
adc
fld
add
jbe
out
sbb
mov
repz
shl
sbb
add
fwait
push
mov
ret
or
(bad)
pop
xor
or
in
cmp
(bad)
mov
adc
push
adc
lds
mov
push
add
pop
pusha
push
mov
xchg
or
inc
dec
add
xor
add
test
sub
and
xor
mov
data16
adc
dec
and
(bad)
and
sbb
inc
sbb
inc
add
arpl
nop
push
movs
xchg
mov
add
gs
shl
(bad)
xor
rol
lods
add
xor
adc
xchg
ror
push
sbb
xchg
fnsave
sub
fcom
jnp
or
pusha
jg
enter
xchg
jmp
pop
sbb
xchg
mov
cmp
inc
out
bound
aaa
xchg
aaa
inc
cmp
scas
push
inc
cmp
lds
es
or
inc
je
ja
add
inc
or
or
or
push
les
inc
pop
in
cwde
mov
ja
adc
stos
mov
mov
inc
jne
adc
pop
pop
scas
add
test
xor
popa
push
cmp
and
ja
stos
mov
inc
dec
lock
inc
xor
pop
add
ds
inc
inc
and
cmp
clc
imul
call
push
into
loopne
dec
cld
lea
shl
cwde
jge
mov
push
cmp
xor
mov
adc
or
enter
cmp
or
pop
pushf
or
add
pop
inc
fdiv
push
cmp
adc
ror
(bad)
std
cmps
adc
push
mov
or
clc
jnp
xor
out
rcl
shl
aaa
inc
or
adc
dec
sub
xor
cmp
(bad)
outs
dec
and
pop
cmp
test
daa
push
push
inc
mov
ja
cwde
(bad)
sub
add
xchg
sbb
fcmovnbe
sbb
push
inc
bound
mov
jmp
xchg
sub
inc
test
mov
dec
aam
cs
fld
sbb
or
and
rol
call
adc
rcl
mov
or
bound
and
jnp
and
push
sbb
xchg
arpl
(bad)
sbb
ja
sbb
adc
inc
adc
inc
adc
ja
sbb
push
neg
inc
sbb
jne
das
pop
ja
inc
sub
(bad)
adc
pop
fwait
push
xchg
cwde
inc
jb
cmp
mov
sub
add
imul
and
or
jno
popa
aaa
jle
ja
mov
mov
movs
outs
push
adc
push
jb
or
js
mov
inc
sahf
or
dec
lea
pop
sbb
ds
out
jnp
dec
jmp
(bad)
bound
mov
inc
imul
cmp
(bad)
add
add
cld
cmp
fnstenv
mov
imul
ss
cmp
rcr
jg
push
ins
or
mov
pop
nop
push
adc
out
in
out
je
xchg
inc
inc
cwde
adc
sub
(bad)
mov
fist
in
mov
and
mov
js
fst
js
loope
pop
rol
inc
dec
sti
daa
mov
or
mov
jns
pop
or
stos
push
and
sub
or
stos
add
pop
adc
push
test
pusha
push
dec
sbb
xchg
out
mov
sbb
out
push
sub
jae
test
dec
pop
sti
aad
adc
cmp
xchg
inc
inc
xchg
fisubr
imul
(bad)
(bad)
jmp
mov
out
xlat
sub
add
(bad)
es
shl
cmp
or
repz
cli
inc
ins
call
push
bound
sbb
fwait
imul
sub
push
pusha
xchg
test
pusha
pop
fdivr
add
mov
mov
ja
inc
adc
jne
hlt
fucomi
into
and
lea
fld
mov
test
je
cmp
inc
and
mov
cmp
or
pop
pop
(bad)
fcmovb
nop
inc
stos
test
and
add
fstp
push
dec
push
jl
pushf
das
fimul
sysenter
sub
push
in
push
and
ins
add
pop
ds
sti
out
lods
xchg
add
or
xchg
add
lock
fnstcw
push
add
sub
xor
adc
fcomi
pop
mov
pop
adc
or
or
inc
mov
fcom
push
lock
in
push
or
pop
jb
fnstenv
sbb
add
push
ss
fiadd
add
lods
je
gs
out
pop
add
cmp
dec
push
retf
add
clc
cmp
adc
fstp
fild
xchg
das
adc
fimul
adc
push
add
cwde
cmp
fisttp
pusha
push
arpl
fs
gs
cdq
jmp
dec
sub
ror
or
or
imul
push
pop
push
and
dec
xor
movs
add
outs
imul
adc
in
shl
and
in
push
add
adc
add
mov
add
test
sbb
movs
sbb
sub
lea
add
les
jecxz
xor
push
ins
ins
xor
jae
out
in
(bad)
sbb
or
cmp
sub
ins
mov
add
dec
lods
sti
mov
push
add
sbb
xchg
sub
jae
cmps
push
add
sbb
inc
mov
sbb
js
sub
pop
adc
push
xchg
sub
mov
mov
nop
pop
inc
nop
mov
push
xlat
mov
mov
data16
inc
pop
cmp
pop
les
jmp
mov
adc
sti
call
int3
cmc
pusha
loopne
add
push
mov
push
cmp
mov
xchg
push
jmp
sbb
xchg
(bad)
mov
dec
push
jle
stos
lahf
xlat
add
mov
push
push
mul
push
mov
push
sahf
sahf
mov
xor
push
les
repz
cmp
sub
arpl
add
pop
cwde
adc
inc
bswap
push
mov
stc
add
jmp
push
and
jg
scas
add
sbb
mov
ins
and
dec
dec
popa
outs
test
jp
icebp
jmp
push
ja
adc
in
data16
sub
sub
add
call
ret
or
sbb
jmp
add
inc
lahf
adc
outs
inc
ins
imul
xchg
xlat
mov
mov
xchg
sub
dec
std
aas
mov
add
pop
or
jne
outs
ja
bound
movs
push
lods
or
je
cdq
mov
fisttp
inc
cmovnp
pop
mov
cmp
jle
adc
mov
dec
das
push
test
pop
ret
in
mov
push
cmp
jne
cmp
fisttp
rcl
cmps
mov
stos
push
js
fadd
push
shl
push
jnp
scas
cmp
mov
sub
lea
inc
in
outs
add
loopne
jne
jns
adc
push
sbb
or
rol
add
adc
xchg
sbb
sahf
fistp
pop
inc
pop
fistp
not
push
mov
jl
ins
jnp
pop
jnp
jnp
into
push
pop
pop
fs
mov
(bad)
fwait
in
xor
push
pop
into
ror
push
call
push
jle
cs
(bad)
sbb
mov
xchg
daa
outs
xchg
int
mov
scas
call
xchg
adc
jnp
cwde
push
fdivr
movs
call
mov
pushf
shr
sub
out
icebp
cwde
out
add
add
scas
je
mov
in
hlt
adc
pop
and
jmp
(bad)
adc
or
push
lock
clc
iret
cmp
jne
push
dec
jae
gs
ja
repnz
ja
inc
push
push
dec
push
outs
inc
das
jp
in
outs
jae
push
retf
xchg
jmp
add
add
rol
je
cmc
push
pop
ins
outs
es
fsub
or
pop
dec
movs
jmp
mov
jmp
mov
outs
pop
(bad)
lods
popa
(bad)
int
enter
inc
enter
jmp
dec
or
mov
push
dec
xchg
pop
ficom
push
push
dec
rcl
les
addr16
jbe
add
pop
pop
push
jb
fisub
inc
fbld
fild
pop
sbb
push
push
jecxz
(bad)
sbb
push
xchg
push
sbb
mov
out
nop
inc
xlat
bound
inc
mov
sti
je
push
or
sbb
in
sbb
out
(bad)
or
sub
or
lea
add
sub
gs
inc
push
push
push
jbe
push
outs
mov
adc
mov
or
movs
sbb
pop
or
call
jecxz
outs
adc
and
or
cmp
aas
shr
cs
aas
inc
push
scas
push
out
push
push
call
mov
add
aam
repnz
xchg
add
mov
scas
ins
push
scas
rcr
or
mov
pop
neg
push
iret
shl
imul
xor
stc
add
(bad)
cli
cmps
mov
mov
enter
lock
je
add
ret
inc
rcpps
jg
or
outs
jo
jb
and
sub
cmp
sub
shl
dec
push
add
faddp
lods
push
and
xchg
popa
jns
fxch
cs
das
idiv
mov
push
gs
bound
lods
ret
jb
cmps
pop
daa
out
mov
push
lods
sbb
cmps
(bad)
mov
enter
sbb
or
enter
pop
cmp
outs
adc
pop
jnp
aaa
movs
inc
or
rol
sbb
pop
sbb
inc
or
sub
outs
inc
aad
popa
(bad)
out
xchg
xor
pop
cmp
lods
loope
sar
sbb
fld
pop
ja
test
mov
jb
mov
ja
or
test
and
push
and
or
cmp
out
push
or
xchg
add
or
push
mov
push
and
or
adc
mov
es
mov
aas
and
je
pop
ja
and
dec
add
aad
in
inc
fs
push
push
inc
ss
adc
add
pop
inc
gs
ins
dec
pop
add
or
dec
fdivrp
pop
daa
ror
test
imul
daa
and
inc
add
imul
test
jmp
cmps
adc
mov
pop
mov
sbb
dec
mov
outs
cmp
cmp
inc
addr16
sbb
mov
mov
mov
sub
ins
cmp
or
(bad)
clc
mov
adc
mov
rcr
add
adc
adc
dec
jae
adc
pop
aam
lods
hlt
or
and
ret
cmp
add
and
cld
mov
js
push
mov
ss
in
out
or
xor
or
sbb
xchg
call
sbb
rcl
pop
lea
movs
push
sub
ja
add
pop
add
in
xchg
add
sar
stc
in
or
ds
push
jecxz
in
jne
and
push
sbb
adc
cld
push
adc
outs
ins
jo
shl
xchg
outs
lock
or
imul
pop
pop
test
fldenv
pop
je
fimul
jle
pop
inc
test
mov
jl
jo
hlt
push
cmp
pop
pop
adc
loopne
adc
cmp
inc
xor
fisttp
inc
retf
pop
(bad)
(bad)
setge
pop
unpckhps
outs
aaa
ror
or
pop
xlat
mov
cs
add
ins
ja
jo
sub
push
das
cmp
cs
leave
movs
add
outs
sbb
add
lock
bound
add
and
data16
sbb
xor
xchg
dec
aas
mov
dec
dec
or
xchg
imul
dec
jne
daa
add
sbb
shr
jne
push
(bad)
ins
(bad)
sti
pop
or
call
rcr
dec
shr
mov
or
imul
ja
imul
add
mov
xchg
pop
mov
adc
arpl
pmullw
enter
mov
pop
xlat
fwait
ror
ret
sub
xchg
adc
sub
fcom
jo
aad
mov
inc
andps
dec
inc
or
in
or
test
adc
inc
jb
dec
xchg
or
and
and
inc
sbb
or
out
cmps
push
mov
add
adc
lds
dec
push
fld
pop
rcl
xchg
xlat
fistp
scas
rol
imul
jo
inc
and
mov
mov
add
xor
movs
ja
(bad)
stc
mov
loope
inc
pop
dec
jae
clc
mov
xlat
add
pop
or
loopne
push
xor
ret
pop
mov
xor
jle
mov
add
push
cs
sti
mov
jnp
hlt
das
rol
adc
sub
and
push
lea
and
and
dec
push
(bad)
add
mov
movzx
and
cmp
jne
in
clc
ins
sti
ja
ds
adc
sbb
jnp
ins
test
cmp
jne
(bad)
jnp
fistp
add
dec
adc
and
lock
cmp
jne
push
add
sbb
inc
add
aaa
jbe
or
adc
mov
add
aaa
mov
push
push
repnz
mov
push
mov
cmp
push
sub
and
push
push
retf
or
(bad)
imul
inc
add
pusha
mov
xchg
xchg
push
push
sub
sub
fiadd
jp
and
je
into
dec
mov
(bad)
push
dec
lock
bnd
bound
cmc
call
mov
or
or
fwait
pop
jnp
(bad)
int
sbb
hlt
push
mov
ret
nop
push
mov
dec
cmp
xchg
mov
pop
daa
xchg
jo
add
outs
fiadd
and
fadd
xchg
push
add
popf
nop
dec
inc
setg
dec
stos
xor
adc
lock
dec
popf
mov
push
add
jl
push
outs
mov
inc
imul
(bad)
mov
outs
inc
ss
pop
outs
adc
outs
outs
imul
imul
add
ret
or
push
pop
pop
add
mov
pop
sti
push
je
push
loop
mov
push
xor
push
dec
cmc
test
pop
pop
je
xchg
add
push
cld
nop
aas
or
dec
scas
in
inc
cmps
add
clc
jb
cs
pop
psrlq
pop
movaps
out
dec
mov
or
mov
inc
inc
outs
arpl
cdq
retf
and
sub
mov
xor
xchg
push
das
test
xor
shl
or
pop
xor
or
and
stos
and
and
adc
outs
jae
sub
sub
(bad)
or
lea
lock
push
imul
jb
loopne
or
fidiv
or
push
push
jp
pop
sbb
or
(bad)
jns
iret
mov
bswap
inc
jno
xor
add
mov
push
out
jbe
mov
adc
or
mov
or
sti
add
or
inc
pop
jmp
dec
add
xor
ins
bound
cmp
push
dec
sbb
arpl
push
ror
inc
mov
test
add
fwait
cmp
shl
adc
in
scas
inc
outs
fs
add
test
clc
jae
jne
add
add
sar
add
inc
ja
mov
or
outs
lock
test
adc
mov
sub
push
jb
call
cmp
jns
inc
outs
pop
sub
sub
adc
mov
mov
loope
push
mov
and
xchg
cmp
mov
out
mov
addr16
mov
mov
fistp
mov
adc
add
inc
push
add
inc
inc
mov
imul
retf
pop
in
or
(bad)
mov
or
inc
loope
int3
sbb
push
push
pop
int3
jb
sbb
lds
xchg
or
add
fcom
inc
cmp
push
leave
inc
push
or
fsubr
add
mov
cmps
shr
mov
in
jae
cli
push
sub
add
inc
pop
dec
add
push
retf
cmp
out
add
int3
pop
data16
inc
adc
or
test
add
pop
mov
adc
add
mov
push
sbb
loopne
jl
inc
fcom
ds
inc
sbb
das
outs
add
fld
arpl
inc
imul
inc
fwait
xlat
pop
sub
adc
movs
push
dec
xor
mov
stos
inc
clc
sbb
sbb
push
mov
sub
mov
add
dec
jle
div
retf
and
or
(bad)
adc
cmps
rcl
mov
sub
mov
fadd
mov
pop
mov
cwde
rol
sub
or
and
das
mov
jg
sub
movzx
cmp
je
or
je
(bad)
loopne
jne
inc
(bad)
shl
cmp
add
addr16
jle
pcmpeqd
rcr
(bad)
cmp
cmc
sbb
cwde
xor
jle
cld
or
mov
stc
popf
test
adc
mov
inc
cmp
mov
adc
sub
dec
mov
sub
ds
mov
mov
xchg
nop
in
in
and
mov
fistp
push
js
mov
mov
loopne
sbb
lock
jle
into
dec
mov
lds
dec
scas
and
pop
enter
ins
int
push
inc
push
lea
mov
lahf
cmp
sub
mov
push
cwde
and
add
dec
fisubr
push
xor
jmp
or
mov
push
sbb
or
pop
jns
push
sbb
fadd
sti
(bad)
pop
push
mov
jge
pop
test
and
fwait
lock
and
clc
pop
lock
sbb
icebp
dec
inc
sub
or
adc
mov
sub
sbb
daa
aas
cmp
mov
lock
out
in
mov
out
xor
mov
in
pop
(bad)
jns
sbb
dec
sub
imul
cmps
loopne
and
outs
xor
enter
xchg
push
mov
js
push
aaa
je
fbld
dec
fcomp
mov
push
pop
adc
adc
cmp
inc
cwde
mov
mov
test
leave
mov
push
leave
fmul
loopne
add
(bad)
sbb
mov
popa
jo
aaa
inc
call
or
inc
daa
stos
outs
cmp
inc
pop
or
lods
add
sbb
mov
test
push
sbb
cmp
xchg
add
test
sti
addr16
pop
test
imul
retf
mov
test
pop
aas
push
adc
mov
or
rcl
imul
jo
dec
jmp
adc
fs
dec
jno
shl
(bad)
xor
cmps
cmp
cli
or
jnp
bound
mov
loopne
shl
hlt
aas
enter
icebp
mov
add
jne
jbe
(bad)
and
pop
pop
into
loopne
hlt
mov
cmp
push
jl
pop
nop
es
dec
and
in
sbb
mov
cwde
out
push
fdivr
clc
fist
and
je
test
je
sbb
dec
fild
rcr
push
push
test
push
ss
fsubr
pop
mov
jnp
jne
push
in
sbb
scas
ja
ja
inc
add
jmp
mov
inc
sbb
cmp
int
loop
or
(bad)
push
mov
and
call
ret
push
in
hlt
mov
or
sub
jb
je
dec
je
jmp
js
push
mov
cwde
fwait
dec
nop
test
and
je
pusha
add
jmp
pop
je
inc
mov
mov
test
lods
and
inc
daa
mov
fadd
fimul
or
sbb
push
mov
inc
mov
pop
test
jo
jg
and
pop
in
lock
test
(bad)
test
and
lea
jbe
fidiv
push
das
fistp
sub
push
pop
inc
pop
daa
shl
cmp
xor
lods
fsubr
inc
outs
xor
xor
movs
fcomp
(bad)
xor
xor
inc
pop
hlt
and
dec
add
xor
inc
push
out
sti
sub
push
push
and
js
sub
das
mov
xchg
ins
dec
add
mov
js
push
into
push
mov
das
jmp
add
loop
data16
add
aam
movs
sti
cmp
sti
push
ror
test
push
mov
mov
mov
xor
call
sub
push
xchg
aaa
inc
dec
pop
xchg
fisubr
or
ins
popa
imul
add
daa
mov
inc
inc
js
imul
es
lock
das
ins
or
je
dec
outs
ins
js
test
inc
inc
mov
cld
fld
outs
dec
fs
xchg
inc
add
das
xchg
mov
inc
jae
pop
mov
inc
mov
fsub
shl
jecxz
jecxz
dec
shr
pop
or
inc
arpl
enter
pop
pop
cli
mov
cmp
push
pop
mov
ror
push
dec
jp
scas
loope
ret
push
jp
mov
add
(bad)
rcl
or
or
mov
imul
je
je
mov
sub
ins
ins
enter
cmp
inc
inc
mov
or
je
outs
jns
add
les
or
push
inc
jl
outs
ret
xor
xchg
cmp
sbb
daa
loopne
sub
or
mov
sbb
add
pop
jp
mov
jno
out
loope
sahf
mov
inc
test
gs
adc
fsub
adc
ins
in
adc
pop
mov
fisttp
gs
pop
mov
jb
add
xor
pop
popa
push
sub
pop
add
fadd
mov
in
inc
and
mov
push
jl
xor
inc
inc
inc
mov
inc
inc
inc
cs
inc
inc
inc
mov
clc
pop
jle
sub
sub
mov
mov
mov
inc
mov
leave
cmp
dec
xchg
dec
call
mov
cmp
jno
in
aam
push
push
pop
lea
xor
push
test
xor
push
add
mov
dec
ins
or
mov
adc
(bad)
add
dec
popa
js
gs
inc
or
ins
pop
clc
xchg
mov
adc
outs
fs
enter
mov
jmp
inc
adc
movs
pop
xchg
pusha
(bad)
out
add
inc
xchg
or
mov
adc
pushf
jle
pushf
jg
jl
out
lods
das
retf
or
sub
or
pop
xor
dec
int3
lock
pop
jmp
adc
fmul
jnp
rcl
dec
pop
(bad)
and
add
mov
(bad)
sbb
mov
dec
data16
mov
xchg
clc
cwde
adc
lahf
mov
push
ins
adc
inc
out
inc
inc
or
jae
jae
push
loopne
lahf
nop
retf
outs
add
add
pop
outs
add
jb
cmp
add
inc
jne
add
lods
adc
mov
dec
cwde
test
or
xchg
pop
pop
daa
sub
fdivr
setg
jne
or
cmp
arpl
dec
icebp
in
je
or
scas
pop
daa
mov
call
ficomp
push
in
jecxz
sub
cmps
rcr
pop
lahf
test
and
sub
cmps
stc
cmp
push
or
add
jno
or
sar
xchg
sub
iret
inc
jle
pop
inc
push
push
dec
outs
arpl
fmul
sub
pop
(bad)
jnp
push
sub
push
pop
repz
leave
leave
enter
rcl
or
in
popa
mov
leave
leave
ins
imul
setns
mov
addr16
test
lock
push
push
or
or
ret
adc
pop
push
sar
dec
ja
into
push
daa
jge
mov
push
mov
lock
fs
inc
(bad)
call
inc
or
or
xor
fdiv
cdq
add
ins
popa
mov
ret
add
add
mov
in
jg
add
adc
popa
repz
shr
stos
jg
mov
add
or
or
std
or
adc
movs
test
inc
test
test
fist
add
adc
pop
push
pop
lahf
sbb
xchg
imul
or
xor
aaa
jmp
add
ins
and
add
mov
jb
test
jle
pusha
fadd
pop
mov
mov
jb
or
bound
push
mov
push
push
inc
test
mov
jnp
mov
loope
jo
push
jg
add
inc
add
adc
ins
add
ret
bound
in
pop
rcr
inc
jns
rcl
icebp
aaa
ret
out
scas
and
push
add
sub
push
sub
mov
outs
adc
pop
sub
cmp
ror
mov
icebp
cmps
mov
fst
inc
test
daa
adc
jle
adc
adc
cmps
fdivr
sbb
aas
add
add
adc
adc
aas
add
gs
jle
pop
jo
pusha
add
adc
cmp
and
add
lods
dec
pop
(bad)
popa
push
sub
add
xchg
or
mov
lea
pusha
pop
ja
adc
lods
loop
or
cmp
jo
clc
add
or
outs
cwde
std
loopne
inc
sbb
call
jmp
and
cwde
push
dec
mov
test
push
out
add
mov
test
push
out
aas
adc
adc
retf
xor
(bad)
mov
cmp
outs
or
pop
pop
ins
fsubr
add
rcr
or
js
aaa
sub
aaa
mov
cs
stos
rcr
push
add
ss
jle
das
mov
add
lock
add
xchg
lea
mov
lock
nop
popa
cdq
ins
jmp
and
or
les
fadd
rcr
call
sbb
leave
xor
xchg
rcr
imul
push
das
pop
outs
fcom
das
jae
pop
icebp
jge
add
mov
loopne
sbb
mov
fdivr
dec
cdq
mov
pusha
sbb
sub
mov
xchg
(bad)
fild
sbb
add
cmps
cmp
pop
ja
mov
add
mov
cmps
xchg
stc
or
rol
adc
jmp
jge
push
or
mov
outs
rol
lods
fstp
fld
or
fwait
sub
or
imul
rol
test
stos
enter
mov
nop
mov
push
push
add
sub
call
xchg
inc
cmp
mov
xor
call
mov
fs
inc
xchg
add
fstp
movzx
and
dec
fs
std
mov
inc
jmp
jle
test
movs
(bad)
and
not
add
test
push
imul
daa
dec
inc
adc
adc
aaa
lock
mov
js
shl
adc
mov
mov
sub
mov
cmps
cmp
inc
xor
xor
(bad)
mov
cmp
cmp
inc
inc
or
add
dec
dec
fcomip
hlt
nop
and
push
jecxz
sbb
dec
jecxz
ins
inc
cld
cmp
add
jb
neg
xchg
and
push
loopne
shr
mov
push
cmps
dec
adc
mov
and
loopne
and
ret
mov
pop
outs
hlt
push
mov
mov
ins
push
js
xor
ss
ja
outs
rcr
push
and
idiv
push
pushf
xor
pop
div
out
data16
punpcklwd
pusha
mov
or
jl
push
push
mov
adc
add
or
mov
and
(bad)
cmc
fsubr
push
pusha
das
test
dec
fistp
adc
and
aas
mov
pop
push
pop
pop
push
sub
(bad)
sti
jp
fld
in
mov
push
mov
shl
add
adc
std
push
cmp
es
push
xchg
push
enter
xor
xor
push
enter
adc
rcr
push
sbb
daa
push
inc
and
mov
cmc
imul
add
jbe
push
in
xor
pop
push
pusha
aaa
lock
push
cmp
cmp
mov
clc
mov
and
or
and
jmp
push
pop
lods
fld
sti
hlt
mov
sub
scas
mov
mov
hlt
mov
shl
sbb
cmp
sbb
sahf
or
fst
scas
add
(bad)
imul
movs
mov
mov
test
movs
lods
mov
data16
mov
hlt
mov
xchg
cmp
jo
clc
add
out
fistp
and
in
inc
cld
push
lock
xchg
nop
xchg
popf
ja
xchg
mov
test
sbb
or
nop
test
fadd
jne
or
add
idiv
push
call
fdivr
(bad)
pushf
add
dec
mov
xor
jge
fstcw
cmp
mov
rcr
rcr
data16
imul
cmp
fstp
fwait
in
mov
mov
xor
mov
inc
ret
xchg
mov
mov
push
fisubr
fldz
fmul
fnstsw
sahf
enter
push
ret
les
or
in
cmp
ror
jmp
jp
out
adc
inc
test
mov
jmp
push
adc
push
loopne
js
(bad)
jecxz
xchg
pop
xor
sahf
pop
xor
(bad)
in
in
mov
jae
mov
les
jl
aaa
neg
jl
add
sub
mov
sub
adc
add
or
add
mov
mov
dec
in
mov
outs
out
xchg
and
sbb
std
adc
jne
aas
mov
movs
mov
cmp
and
test
into
adc
pop
fisub
sbb
push
pop
and
outs
mov
inc
add
shr
jo
imul
stos
ror
dec
add
add
jge
mov
or
add
jb
loop
and
sbb
adc
je
jmp
push
mov
arpl
aaa
jne
cmp
sahf
ins
add
or
dec
inc
or
jle
push
pop
mov
add
xchg
shl
or
and
or
inc
inc
aas
inc
pusha
cmp
scas
pop
add
out
inc
mov
dec
iret
inc
adc
aas
das
push
dec
push
stos
fadd
mov
xchg
repnz
add
mov
or
mov
retf
add
lahf
lock
or
pop
dec
cld
retf
popf
adc
lea
retf
mov
adc
push
adc
(bad)
mov
dec
sbb
cmp
or
adc
and
sbb
xor
sbb
adc
mov
xchg
jmp
js
jne
add
les
loopne
jnp
imul
pop
ret
nop
call
inc
aam
fsub
call
push
clc
inc
pop
add
mov
cmp
lock
lock
test
fadd
or
inc
fsubr
push
bound
adc
rsm
push
lods
test
or
jg
rcr
test
lods
inc
ror
pushf
fdivr
cs
dec
xor
mov
cmps
das
sub
cmp
fstp
out
ret
mov
inc
xor
fwait
dec
mov
or
push
clc
pop
inc
sbb
inc
dec
add
movs
jnp
add
mov
bound
fnstenv
outs
ss
pop
dec
daa
push
cdq
add
fcomp
outs
xor
mov
adc
inc
fsubr
dec
xlat
rcr
rcl
push
sub
sub
ds
add
add
push
xchg
fsubrp
sbb
adc
(bad)
mov
rol
jnp
jb
fbstp
sub
xor
mov
enter
out
adc
mov
daa
sbb
icebp
rol
add
push
fs
aad
ja
data16
add
add
inc
inc
inc
add
movs
test
aam
sbb
or
inc
repz
jno
cmps
inc
dec
dec
pop
mov
jg
xor
add
and
add
xlat
aaa
pop
mov
add
movhps
or
jecxz
mov
je
push
sbb
shr
push
pop
dec
and
lock
fmul
jo
stos
push
cli
femms
pop
mov
add
mov
(bad)
mov
movs
into
adc
(bad)
jo
mov
ins
push
mov
or
stos
push
mov
xor
push
dec
enter
test
scas
jbe
push
push
js
mov
dec
and
adc
out
sbb
mov
cmp
test
fsub
jns
pop
and
test
mov
push
or
out
jge
icebp
lock
and
jb
sbb
or
pop
lock
call
adc
inc
adc
mov
clc
and
clc
mov
pusha
call
enter
xor
or
sub
mov
pop
dec
scas
mov
push
push
or
pop
lds
pop
mov
out
aas
ret
dec
scas
mov
(bad)
icebp
adc
movs
adc
push
icebp
ins
cmc
das
aaa
sbb
and
mov
push
lds
sub
sahf
mov
cs
(bad)
ror
adc
jae
call
cmp
sete
mov
fs
xchg
inc
and
ds
push
push
adc
loop
lea
call
xchg
adc
sti
test
test
test
sbb
adc
ds
mov
in
hlt
movs
adc
pusha
push
jg
sub
jb
sbb
sub
inc
or
xor
push
(bad)
cmp
jp
es
push
fmul
or
clc
loopne
fbstp
(bad)
fbld
mov
push
sub
cmc
jle
push
ret
pop
retf
out
loop
pop
pop
addr16
jmp
mov
sbb
or
xor
ret
idiv
ret
mov
mov
inc
mov
push
sub
xor
and
inc
add
jge
adc
jl
mov
xchg
or
dec
aaa
loopne
pop
out
rol
and
jne
pop
inc
bound
(bad)
ret
add
test
push
jmp
nop
push
pop
dec
jmp
mov
int
in
mov
mov
sbb
aad
popf
inc
(bad)
loope
sbb
ja
push
retf
add
mov
fcom
add
and
jp
and
dec
mov
scas
pusha
js
and
add
pop
xor
xor
sub
dec
or
cmp
jle
adc
neg
clc
inc
test
div
cli
test
loopne
or
push
repnz
xor
(bad)
xor
inc
enter
or
jge
push
stos
sub
adc
bound
or
jl
cdq
and
xor
das
pop
fdivr
movs
int3
push
push
aas
pop
cmps
(bad)
dec
jnp
mov
out
pop
sbb
mov
add
dec
repz
ret
fisttp
dec
imul
jle
or
ror
fbld
and
scas
inc
dec
mov
(bad)
jmp
inc
dec
ins
sub
xchg
cwde
adc
pusha
jo
xor
dec
xor
pop
pop
add
xchg
loopne
push
ret
ds
ins
cmps
js
jbe
dec
test
xor
into
or
loopne
dec
and
xor
imul
mov
into
mov
mov
push
movs
das
inc
fidivr
mov
fmul
test
or
cmp
test
push
sbb
inc
data16
enter
lea
outs
cs
or
not
jecxz
jl
inc
je
or
add
dec
cld
jo
push
repnz
sahf
and
sbb
test
cmp
push
push
or
fisubr
ret
mov
mov
pop
dec
icebp
or
dec
sub
sub
dec
jne
or
xchg
sbb
leave
mov
cmp
sar
xor
idiv
das
xor
mov
inc
xchg
mov
add
or
fs
dec
outs
sbb
test
jmp
add
or
adc
mov
jmp
adc
mov
jmp
scas
std
adc
inc
sub
mov
ds
(bad)
adc
dec
gs
inc
jbe
add
and
or
jo
mov
pop
cmp
arpl
iret
or
ror
push
inc
or
cmc
outs
add
pop
sbb
in
xor
and
xor
inc
jno
pop
cdq
and
cmp
cs
addr16
ss
xchg
or
mov
outs
outs
test
ja
and
and
cmps
mov
hlt
add
add
push
fs
mov
pop
mov
test
push
pushf
jge
push
dec
add
ins
add
dec
fcmovnu
not
in
or
xchg
add
lock
fild
pop
push
add
sub
xor
adc
idiv
adc
or
or
inc
mov
popf
cmps
ins
fcmovnu
adc
mov
ss
xchg
add
add
les
js
jb
je
sub
jnp
mov
sub
jns
test
(bad)
jno
push
sub
xlat
sbb
adc
push
add
xchg
outs
fwait
jo
dec
xchg
movs
push
inc
add
push
xchg
xchg
(bad)
(bad)
cmp
adc
adc
cdq
daa
or
pop
ins
(bad)
cmp
mov
push
test
and
mov
pop
mov
cmp
inc
inc
xor
add
inc
push
push
dec
fwait
(bad)
in
call
popf
or
std
inc
or
cmp
imul
sahf
xchg
jp
aaa
cwde
mov
outs
jne
adc
mov
retf
jo
cmps
add
push
cmps
add
lods
mov
es
shl
ins
sub
add
or
mov
jp
jno
add
inc
mov
mov
pop
adc
push
movs
pop
cli
pop
dec
pusha
ror
or
xlat
pop
mov
and
mov
cs
stc
inc
mov
mov
pop
rcr
xor
adc
or
xor
pop
inc
fcom
adc
or
add
mov
add
push
or
sbb
sub
dec
push
push
adc
adc
aam
les
neg
mov
(bad)
inc
pop
test
jne
repz
mov
lock
(bad)
pop
mov
mov
jns
xchg
mov
retf
test
jmp
or
enter
add
xor
gs
inc
jne
fld
fdivr
lods
inc
push
mov
or
jmp
aaa
or
loope
adc
pop
jg
cld
mov
mov
pop
enter
mov
les
ret
pop
xor
sysexit
inc
mov
loope
test
call
mov
fsub
xor
mov
test
jl
sub
test
movs
clc
lea
mov
(bad)
cmp
push
sub
nop
pop
pop
in
or
and
lods
add
jne
push
jle
mov
pop
sub
or
in
fs
dec
jecxz
pop
fcomp
pop
mov
and
fmul
cmp
xor
repnz
mov
sub
call
push
fwait
in
bound
push
xchg
mov
jns
aam
aam
shl
call
inc
test
(bad)
pop
xchg
sub
int
dec
sbb
xchg
nop
xchg
cmp
inc
adc
mov
pusha
add
xchg
test
(bad)
jmp
into
inc
sahf
fs
push
push
add
iret
outs
mov
repz
(bad)
mov
xor
sbb
or
into
loopne
sbb
out
neg
push
sub
push
jb
mov
loope
push
mov
jle
ja
lds
push
mov
(bad)
in
and
sbb
adc
jg
xor
sub
sahf
add
daa
mov
daa
inc
inc
mov
add
adc
jo
push
mov
and
push
push
rcr
cmp
or
ja
adc
sbb
push
mov
mov
mov
cs
inc
push
call
inc
xor
jns
cmp
into
cmp
cmp
stos
out
idiv
inc
(bad)
cs
into
cmp
or
mov
ins
pop
or
ds
dec
xchg
mov
cmp
shl
mov
or
fldcw
sbb
enter
push
dec
loopne
sub
pop
xchg
sbb
fst
mov
arpl
dec
jg
xchg
jmp
mov
and
sbb
xchg
add
inc
push
fmul
in
es
push
add
and
xor
inc
(bad)
xchg
adc
push
jno
mov
ja
les
push
ror
test
neg
ins
and
imul
or
mov
or
add
push
push
dec
push
push
cld
out
or
adc
pop
inc
push
popa
jb
ins
in
fdiv
adc
dec
adc
add
das
int3
lods
push
mov
or
adc
push
inc
jne
push
ins
dec
je
test
je
ins
cmp
push
mov
(bad)
in
add
call
or
add
xchg
or
inc
jae
imul
xchg
mov
xchg
pop
addr16
mov
pusha
add
cmp
ret
lods
xchg
push
or
pop
cmp
push
mov
add
mov
sbb
xchg
add
cmp
pop
clc
das
push
scas
push
(bad)
in
(bad)
or
cmps
jge
push
push
and
push
and
or
dec
repz
push
or
pop
add
iret
repz
cs
push
inc
xchg
and
or
add
imul
and
pop
mov
add
loop
test
mov
jecxz
pop
push
push
fadd
pop
or
dec
ja
test
dec
cmp
or
je
dec
ret
cwde
shl
outs
mov
dec
jl
jne
lods
fst
scas
jne
jne
add
(bad)
inc
or
or
push
popa
ins
jne
push
add
(bad)
mov
jae
in
leave
ror
jnp
mov
add
mov
push
xor
cdq
sub
inc
push
dec
(bad)
and
pop
jbe
xchg
pusha
add
adc
jbe
inc
mov
mov
pop
inc
and
call
push
xchg
inc
mov
icebp
jl
pop
fst
add
xchg
mov
mov
push
cld
or
rcr
cmovno
and
enter
pop
popf
popa
xor
cmp
adc
push
mov
add
cmp
fcom
lods
les
sbb
lods
xlat
aam
pop
jo
test
mov
pop
retf
pop
loop
jne
push
push
mov
mov
repnz
jbe
xchg
sbb
inc
inc
ret
test
ret
mov
ds
push
or
mov
and
or
clc
call
fcmovnbe
push
test
js
add
xor
cmp
inc
mov
pop
sti
clc
adc
(bad)
das
lahf
shl
pop
clc
mov
bound
sub
inc
and
or
adc
jb
or
stc
cmp
das
clc
dec
xchg
or
test
or
pop
test
and
hlt
add
jbe
jmp
mov
hlt
xchg
xchg
sahf
sbb
push
mov
in
push
sbb
outs
pop
mov
in
rol
add
mov
fucomi
inc
(bad)
mov
pop
das
jp
add
adc
push
idiv
ret
mov
outs
nop
push
test
jnp
sti
mov
pcmpgtb
push
and
sub
cmc
mov
or
push
push
arpl
pop
es
pop
cs
pop
push
mov
pop
mov
loopne
popa
jb
daa
xor
retf
mov
inc
jmp
xor
adc
inc
outs
mov
jae
and
cli
pusha
cmp
add
ins
test
mov
test
mov
cwde
push
addr16
das
inc
popa
jae
jl
aaa
cdq
lods
movs
outs
adc
mov
mov
jae
xor
mov
lock
mov
pop
and
sub
daa
cmp
test
inc
(bad)
fdivr
pushf
jne
ds
inc
sbb
das
outs
add
adc
mov
mov
jb
pop
sbb
cwde
sub
jno
mov
add
jg
out
mov
and
dec
push
idiv
adc
or
pop
ror
add
lock
fs
repz
mov
inc
(bad)
or
adc
loop
jae
mov
inc
jns
sbb
loope
loopne
ret
and
mov
pop
movs
vcmpps
sbb
inc
add
ds
add
cmp
(bad)
pusha
adc
in
sub
sbb
mov
mov
ret
lods
and
and
mov
push
call
sbb
mov
xor
jmp
test
push
pop
pop
mov
cmp
mov
mov
adc
ret
mov
add
hlt
mov
add
add
mov
adc
sbb
inc
add
ficomp
sbb
add
sub
test
add
push
push
push
add
mul
call
or
fstp
add
pop
cmps
sti
mov
in
push
aas
inc
jo
cmp
push
cmp
pop
and
jmp
push
test
gs
dec
dec
or
mov
clc
adc
call
(bad)
and
loopne
in
dec
ror
mov
mov
es
xchg
imul
sbb
and
push
cmp
xchg
pop
cmp
or
sbb
inc
jne
sbb
fisttp
xor
ss
in
fld
mov
jne
sub
mov
movs
repnz
xor
rol
push
mov
in
scas
mov
jnp
test
clc
lahf
dec
outs
mov
ror
adc
mov
imul
cmps
and
leave
xor
or
sbb
jo
sub
leave
add
and
iret
pop
cmc
and
adc
jae
cs
xchg
fistp
cwde
add
lods
cli
adc
jmp
jmp
shr
mov
bound
adc
mov
cmp
stc
enter
test
or
aaa
dec
test
add
mov
sbb
not
cwde
add
mov
xor
repnz
(bad)
popa
adc
pop
movs
inc
jne
sti
inc
fdivr
fmul
hlt
xchg
mov
scas
xchg
dec
add
daa
push
sub
push
add
dec
mov
inc
pop
push
push
dec
dec
xchg
data16
adc
pop
xlat
int3
popa
int
sub
cmp
fisttp
sub
rcr
pop
mov
push
mov
inc
or
aad
loopne
mov
hlt
imul
fdiv
test
je
(bad)
cwde
mov
push
daa
lock
pop
shl
aaa
push
ret
mov
jmp
xchg
or
(bad)
xor
xor
dec
push
in
mov
and
mov
and
mov
and
shr
add
(bad)
xor
imul
aaa
clc
(bad)
(bad)
(bad)
xor
cmp
jle
and
cmp
sbb
inc
lea
cmp
and
test
in
das
add
cmp
jne
adc
xor
inc
jne
aad
xor
cmps
mov
ret
add
and
jg
je
jle
mov
pop
outs
in
inc
push
dec
shr
adc
push
cli
pop
jae
jbe
jnp
adc
jmp
or
mov
add
stc
pop
jmp
or
inc
stc
jle
ror
dec
push
dec
sahf
or
add
sbb
lock
inc
pusha
add
jmp
shl
adc
js
adc
iret
and
dec
ret
je
xlat
push
cmps
mov
push
mov
mov
lds
loop
inc
cmp
xchg
and
and
mov
sbb
call
pushf
je
mov
mov
pop
(bad)
jle
cmp
cmp
jae
(bad)
je
js
sbb
xchg
sbb
pop
push
jmp
fs
fimul
inc
add
xor
fild
fadd
sub
dec
xchg
jge
jb
je
dec
je
inc
mov
dec
gs
dec
cs
and
mov
mov
inc
sbb
mov
inc
imul
push
pop
and
fimul
(bad)
sbb
mul
cmp
xor
push
jge
push
jno
add
jb
and
(bad)
in
dec
fistp
push
xor
jb
push
pop
and
fsubr
inc
inc
inc
adc
shr
mov
out
and
xlat
jmp
(bad)
pusha
shl
daa
sar
dec
cmps
mov
mov
int
cmp
mov
cmps
and
cdq
mov
(bad)
and
ja
nop
cmp
rcl
add
rcl
pop
clc
inc
fucomi
sbb
push
adc
outs
push
lahf
pushf
mov
sahf
push
sahf
or
and
jno
dec
clc
jns
pusha
adc
jge
mov
fwait
mov
fwait
mov
in
pop
cmp
sbb
aaa
movs
scas
sub
mov
jg
pop
scas
inc
or
mov
out
ret
in
lea
ret
icebp
sbb
sbb
push
js
jmp
ins
ror
int
jg
sbb
inc
add
lods
inc
xchg
jo
sbb
ins
in
inc
gs
cmp
lods
adc
and
or
push
or
(bad)
jmp
add
xchg
rol
cs
add
fucomi
mov
xchg
jmp
sbb
hlt
in
repz
ins
(bad)
push
leave
mov
add
add
cmp
jne
sub
addr16
mov
dec
mov
je
cmps
mov
jo
mov
jle
sbb
jmp
ret
loop
test
scas
adc
sbb
(bad)
mov
not
push
neg
xor
js
mov
test
je
inc
cmp
inc
mov
cmp
cld
lock
xor
mov
outs
mov
push
dec
mov
call
or
or
inc
dec
adc
sub
dec
or
(bad)
jle
fwait
or
and
sub
in
push
or
ss
xlat
rol
xor
add
daa
inc
dec
mov
aas
or
call
addr16
push
imul
outs
rol
(bad)
rol
mov
mov
add
or
lods
dec
bnd
sbb
cmp
mov
je
and
fdivr
xor
or
adc
mov
and
dec
pop
test
mov
cmps
movzx
test
call
les
or
jne
mov
jge
ficom
imul
xor
data16
inc
add
in
setle
jmp
jmp
outs
adc
push
je
(bad)
push
lea
cmc
sub
loope
mov
dec
int3
sub
cs
call
aam
mov
mov
jp
jmp
out
pop
pop
(bad)
outs
inc
jnp
add
fmul
mov
mov
popa
fidivr
or
jns
ins
add
sti
add
mov
add
sar
dec
mov
rol
loope
mov
mov
sub
adc
fadd
inc
fs
mov
mov
mov
mov
sbb
add
ret
cmp
push
div
hlt
add
pop
cli
fcmovnb
add
dec
mov
shr
or
xchg
mov
std
not
shl
ss
add
ret
inc
popa
or
loopne
sub
add
sahf
jl
dec
xlat
pusha
call
push
sbb
push
dec
lds
mov
mov
dec
mov
jne
scas
loopne
sub
int3
sub
push
lea
pop
add
xchg
andps
std
push
add
outs
or
push
dec
xchg
dec
pushf
lds
mov
xlat
push
add
or
mov
pop
sub
mov
mul
xchg
lock
jne
scas
xlat
mov
int3
(bad)
rcl
mov
dec
mov
gs
pop
aam
fisttp
pop
fsubr
cmp
push
cmp
jo
mov
in
and
jle
jp
rcr
outs
sub
cmp
loopne
add
mov
shl
pop
fiadd
clc
scas
jo
jns
dec
in
jmp
inc
test
arpl
mov
xor
mov
jl
and
jne
mov
and
fsub
push
adc
je
xor
cmc
aad
enter
push
mov
xor
push
push
inc
les
push
loopne
fcomp
call
fmul
add
scas
bound
into
fs
add
jmp
mov
jmp
add
in
sub
and
adc
sbb
mov
cwde
push
loopne
push
and
inc
int3
adc
mov
fs
sar
add
mov
adc
lea
ja
out
ins
out
inc
sub
and
mov
loopne
lock
add
shl
add
jp
pusha
daa
(bad)
or
mov
popf
dec
rol
push
mov
add
cli
push
add
sub
mov
hlt
fwait
mov
push
inc
or
inc
loopne
fidivr
clc
adc
rcl
mov
call
cwde
fsubr
mov
add
call
pshufw
and
loop
or
ds
test
sbb
sahf
test
mov
cmp
imul
sbb
adc
pop
sub
mov
movs
pop
loopne
mov
or
xor
pop
fild
loopne
sbb
mov
(bad)
adc
cmps
mov
cmp
(bad)
sbb
dec
jle
mov
jo
or
push
sbb
pusha
out
or
dec
test
fsubr
fsub
jp
fldcw
adc
mov
add
adc
loop
push
push
(bad)
hlt
shr
add
imul
sub
loopne
ja
mov
sbb
gs
ins
int3
xchg
data16
in
fldcw
xchg
jne
xor
ds
mov
(bad)
sub
dec
je
add
add
inc
loope
mov
cmova
jb
std
cdq
add
shl
aaa
and
shl
fs
loopne
cmp
xor
adc
adc
addr16
mov
cmc
mov
popf
inc
pushf
mov
pop
pop
test
cmp
aam
add
push
les
cmc
pop
xchg
loop
cmps
xchg
jl
aas
shr
sub
xor
into
in
add
mov
mov
sbb
mov
xor
sar
push
mov
fsub
mov
loop
aaa
xor
bound
xchg
mov
ret
add
ret
adc
cmp
jno
cmp
adc
mov
add
adc
mov
pop
loopne
and
(bad)
or
sbb
mov
push
xlat
xlat
rcr
mov
push
jge
inc
fcomp
push
shr
ret
into
jg
dec
lea
sar
jg
adc
mov
add
mov
mov
inc
dec
jne
xchg
jle
call
push
xchg
daa
dec
cmps
dec
mov
mov
jle
xchg
sub
sbb
loope
test
jne
out
mov
les
test
sbb
pusha
inc
(bad)
outs
push
pop
enter
enter
sub
cs
and
or
cmp
and
mov
mov
test
mov
mov
loop
pop
jae
jle
xor
sbb
xor
xor
xor
ds
add
rcr
rcr
hlt
push
pusha
or
mov
push
movs
jecxz
hlt
push
or
sub
mov
call
test
lods
or
xchg
scas
enter
cdq
fcom
fwait
sbb
push
enter
arpl
jbe
mul
mov
cmp
jge
add
jge
fs
imul
jb
push
je
sub
je
mov
in
mov
and
pop
(bad)
cmp
and
add
mov
or
rol
pop
jecxz
ins
sub
test
iret
pop
jg
dec
push
mov
pushf
mov
mov
je
adc
pop
cmp
pop
ins
test
imul
mov
lods
ins
add
inc
out
mov
loope
inc
das
xor
retf
sbb
add
(bad)
sti
and
push
in
sub
jmp
xor
mov
mov
push
popa
aaa
popa
or
jnp
xchg
les
or
pop
scas
sbb
mov
jns
mov
mov
pop
sub
ss
repnz
dec
aaa
in
push
dec
mov
add
aaa
sbb
fs
in
add
or
xchg
add
test
xor
fwait
out
mov
push
sub
xor
adc
add
ins
clc
fisubr
or
or
inc
mov
fcom
push
jl
xlat
pop
jp
push
aas
movs
aam
mov
add
add
mov
(bad)
call
outs
je
fs
jb
outs
je
bound
pop
sbb
or
test
dec
pushf
or
jb
push
je
gs
ins
aam
mov
inc
inc
gs
sub
pushf
cmovg
inc
jns
jae
das
or
mov
std
lea
or
push
inc
mov
pusha
and
cmps
test
xor
ret
test
mov
mov
clc
call
rol
lahf
call
enter
pusha
or
test
in
(bad)
cmp
jmp
adc
xor
dec
xor
lock
and
cmp
(bad)
jne
cmp
adc
push
mov
push
and
cmp
cmp
xor
or
push
ret
fs
and
inc
adc
mov
mov
push
xchg
mov
jg
daa
je
cmp
setg
jmp
pop
add
jno
daa
clc
mov
(bad)
not
add
ret
ficomp
std
scas
dec
sbb
and
hlt
jmp
test
jb
inc
jl
mov
sahf
cs
dec
adc
add
or
push
mov
sbb
sub
or
mov
mov
arpl
mov
dec
fdivrp
fmul
test
in
popa
leave
mov
sub
add
xchg
mov
jo
cs
arpl
test
cmc
inc
cli
ja
inc
and
and
and
add
add
ja
cmps
pop
dec
add
add
add
stos
(bad)
add
cli
sbb
add
out
xor
xor
inc
pop
in
jb
aaa
loop
add
test
add
loop
inc
dec
and
inc
sahf
inc
add
xor
(bad)
dec
add
push
add
dec
jle
mov
push
pop
and
push
push
out
add
pop
pusha
pop
pop
rol
pop
mov
repnz
dec
pusha
add
das
jmp
add
add
push
mov
push
add
outs
add
jo
jno
jb
jae
je
jne
loopne
mov
and
jns
jp
jnp
add
jle
add
jbe
pop
mov
mov
push
ja
scas
mov
add
js
push
out
push
in
fld
add
pusha
add
mov
fadd
dec
das
cmp
adc
ins
push
jns
ins
add
or
test
mov
psraw
and
ret
and
psubd
jb
unpcklps
sbb
xor
add
add
sub
gs
mov
or
jae
stos
jne
daa
mov
outs
and
cli
arpl
jns
push
rcl
das
jb
outs
jae
or
out
aaa
sti
or
push
fdivr
imul
add
inc
or
mov
loopne
push
popa
ins
jne
ret
xor
mov
push
imul
mov
jecxz
add
add
add
fmul
outs
xor
push
int
cli
mov
into
sub
xor
adc
adc
out
loopne
adc
inc
shl
test
or
adc
add
or
xor
push
clc
ins
jl
je
push
cmp
add
pop
test
jns
jmp
or
add
addr16
in
inc
mov
inc
mov
in
and
ins
test
movs
je
sbb
mov
jo
and
or
sbb
mov
xchg
sbb
ret
cmp
cwde
cli
and
add
push
inc
setge
jmp
push
test
inc
pop
xchg
daa
loop
inc
cmp
add
inc
adc
stc
lods
inc
adc
adc
inc
outs
xchg
je
pusha
std
xchg
jbe
mov
outs
xchg
mov
jecxz
lea
adc
dec
int3
repz
and
push
imul
retf
xchg
or
sbb
inc
dec
xchg
push
fadd
nop
mov
repnz
add
scas
sbb
adc
add
push
xlat
adc
out
or
cmp
sbb
jg
push
and
push
and
jbe
iret
repz
push
or
add
push
jbe
inc
add
in
or
mov
sahf
out
rol
add
(bad)
jp
inc
popf
and
push
push
je
adc
cmp
rcl
add
ja
loopne
pop
and
fwait
or
or
inc
dec
push
mov
in
popf
add
add
fs
scas
add
pusha
mov
or
adc
inc
shl
add
mov
mov
xchg
sar
pop
imul
(bad)
add
add
or
push
outs
(bad)
mov
adc
fstp
add
push
in
adc
(bad)
(bad)
mov
nop
cmp
jmp
data16
ss
lock
ss
add
push
push
xor
movs
push
dec
jnp
push
xor
sahf
out
push
add
cwde
pusha
xchg
lds
xchg
pop
pusha
lea
out
push
lock
and
add
or
ret
add
fsub
sub
add
sub
test
test
jne
push
jns
sbb
hlt
ffree
adc
gs
jae
xchg
call
lds
cmp
iret
inc
jmp
mov
and
pop
mov
push
jb
xor
data16
dec
push
cmps
jnp
push
outs
jae
pop
std
rcr
xchg
add
add
imul
mov
stos
pop
or
ss
xor
pop
pushf
int3
bswap
push
jp
mov
or
xchg
inc
add
into
pop
cs
call
outs
dec
ffreep
inc
dec
nop
cdq
or
lds
(bad)
in
adc
out
or
test
add
or
mov
test
sahf
adc
dec
or
sub
ins
add
pop
pop
rcr
or
and
mov
outs
pop
push
mov
push
dec
bound
out
or
and
cmp
retf
add
fs
cmp
push
ins
mov
add
fwait
shl
xor
mov
xlat
ins
adc
cmp
push
or
mov
shl
push
adc
push
pop
push
mov
add
imul
mov
mov
add
out
call
repz
or
ds
daa
aas
sub
cwde
push
test
idiv
add
fdivr
push
inc
sbb
das
mov
jmp
inc
enter
sbb
fild
xor
xor
ss
rcr
pusha
add
into
scas
jg
inc
xchg
add
dec
push
outs
jae
jo
add
dec
inc
fsubr
jb
retf
cmp
inc
(bad)
fld
sub
(bad)
xchg
pop
jo
rol
jbe
push
push
jmp
daa
adc
ss
cmp
aas
lea
sub
fdiv
adc
ins
mov
dec
ds
add
mov
(bad)
cmp
mov
pop
xchg
or
xor
sub
lods
push
imul
mov
movs
jne
repnz
dec
out
movs
sub
jmp
ins
sub
add
movs
lahf
mov
cmps
push
push
push
push
idiv
fbld
mov
lea
mov
mov
mov
xor
mov
xor
int
clc
push
mov
and
and
(bad)
adc
pop
ret
(bad)
mul
ret
fadd
inc
xchg
or
add
outs
(bad)
mov
mov
mov
cmp
fs
push
dec
test
jl
inc
xor
movs
inc
xor
fwait
div
fcomip
jecxz
add
sub
or
jmp
enter
jmp
rcr
lods
and
movs
sub
rol
shr
adc
or
jno
sub
add
pop
cmps
test
aad
xor
lods
mov
clc
clc
in
add
cmps
(bad)
in
cmp
add
mov
mov
jmp
and
or
pop
es
(bad)
fst
mov
test
and
aas
adc
cmp
mov
mov
adc
xchg
inc
movs
jbe
cld
je
add
scas
add
push
lods
xor
cmp
loopne
jo
mov
fmul
add
lea
xor
call
adc
mov
or
repz
add
mov
fcom
adc
adc
cmp
xchg
dec
sub
cmps
aam
ret
js
or
jle
shr
mov
lahf
outs
outs
data16
jbe
or
sub
outs
adc
les
in
adc
out
call
push
pushf
lock
xor
mov
adc
pop
call
ins
inc
xor
xor
rcl
pusha
push
and
ins
adc
cdq
add
adc
mul
mov
sub
push
cmp
aam
push
jge
and
add
rol
and
add
and
xchg
ret
in
loopne
ret
pop
or
test
test
push
push
add
adc
neg
sub
mov
(bad)
loopne
push
add
(bad)
push
xchg
or
(bad)
je
push
add
jmp
enter
sbb
and
pop
shr
shl
mov
fs
imul
mov
xchg
std
pop
cld
adc
xchg
shl
inc
mov
in
loope
fwait
outs
or
cmp
xchg
inc
(bad)
dec
cmps
push
repnz
add
cwde
loopne
jg
jne
fsubr
int3
push
push
or
xchg
xor
add
sub
(bad)
aaa
mov
jmp
sub
sbb
cld
sbb
xor
and
add
adc
ror
mov
enter
ret
ret
add
push
xor
add
adc
cmps
add
fsubr
clc
push
mov
sbb
mov
jmp
retf
jmp
scas
or
cmc
or
or
jne
mov
ficom
push
outs
or
cmps
jo
fsub
jmp
pushf
in
ja
dec
popa
or
and
cmp
sub
retf
sbb
adc
add
inc
inc
inc
ss
sbb
xor
jo
or
fisub
push
test
shl
call
mov
into
xchg
mov
mov
nop
es
mov
jle
in
(bad)
ins
sbb
sub
data16
mov
dec
or
xchg
pop
data16
mov
lds
mov
and
mov
cs
je
in
push
push
ret
add
loope
mov
clc
ror
lahf
ret
sar
push
leave
unpcklps
jp
jmp
jp
sub
adc
or
push
jmp
data16
push
adc
add
mov
or
adc
push
add
aaa
inc
add
xor
xor
outs
scas
xor
inc
nop/reserved
pop
add
dec
fs
xchg
and
inc
ret
adc
add
xchg
stos
or
xor
sbb
outs
sub
sub
add
test
scas
sbb
or
neg
xchg
dec
or
mov
adc
push
cmp
ins
mov
sub
or
push
dec
xor
add
dec
and
pusha
cmp
vmovups
inc
mov
pushf
inc
shl
cmp
movs
adc
mov
mov
int
out
xor
mov
cs
xchg
rcr
fdiv
leave
mov
adc
lods
(bad)
mov
dec
jno
xor
push
aam
adc
xor
pusha
test
rol
push
inc
adc
rcl
fwait
ss
cmp
enter
test
int3
sbb
and
sbb
int3
vpmaskmovd
mov
pushf
jle
or
(bad)
in
xor
add
(bad)
inc
cmp
pop
call
cmp
adc
iret
inc
xor
or
xor
out
jo
or
push
addr16
jle
aas
cmp
adc
rol
out
int
mov
xchg
es
aaa
int
pop
adc
rcl
mov
js
xor
jo
sub
push
outs
cmp
cmps
add
and
add
fbld
ret
dec
ss
xor
fisttp
imul
es
and
ret
loopne
push
or
adc
inc
or
(bad)
int3
push
dec
rcl
rcl
popf
or
mov
or
push
xor
call
adc
pop
jbe
dec
test
js
pop
js
jmp
dec
mov
cld
pop
cmc
sbb
and
aas
sbb
xor
add
pop
and
enter
lea
sub
adc
pop
js
cmp
stc
pop
rcr
jnp
add
outs
inc
mov
jne
push
ret
les
push
dec
in
mov
loop
cld
mov
adc
fistp
add
jmp
push
test
pop
sti
sbb
and
push
add
pop
sbb
sbb
loopne
in
out
mov
mov
ret
mov
mov
mov
test
jg
pop
ret
ficomp
arpl
call
clc
and
or
push
aam
ret
cdq
inc
ss
ret
inc
or
rcr
cmp
bound
jb
test
mov
cmp
pusha
bound
pop
popa
sbb
leave
cmp
xchg
mov
xchg
sbb
pusha
mov
mov
jmp
ds
jae
adc
or
ret
and
add
add
pop
fidiv
cmp
mov
mov
add
dec
fld
rcl
add
or
push
in
loopne
sbb
es
js
jo
and
inc
mov
inc
bound
mov
enter
addr16
sub
xor
dec
gs
and
and
pusha
pop
aam
dec
push
inc
clc
xor
es
ins
sub
xchg
movs
jo
inc
ret
sar
xchg
sub
sbb
addr16
push
jmp
aam
cmp
icebp
ss
lahf
icebp
push
jle
jg
jg
fwait
or
add
mov
pushf
xor
sbb
pop
fild
je
jb
test
push
les
xchg
shl
xor
push
jmp
nop
jo
inc
push
dec
adc
inc
xchg
pop
and
mov
cli
push
dec
mov
xor
call
cmc
mov
rcl
sbb
push
cwde
out
mov
loope
std
in
in
sub
shl
inc
mov
inc
or
mov
(bad)
cmp
pop
push
cld
mov
xor
test
ror
js
movs
xchg
xor
and
jle
mov
rcr
mov
je
or
mov
mov
push
arpl
(bad)
cmp
push
je
lea
jae
pop
push
push
add
cld
popa
ret
jecxz
mov
add
sbb
and
pop
js
lea
mov
add
dec
push
les
pop
add
neg
(bad)
jg
inc
inc
pop
mov
mov
loope
sub
adc
faddp
push
mov
adc
push
push
mov
push
and
add
test
mov
dec
cmp
push
mov
into
fisub
mov
bound
popa
je
lea
add
mov
jo
cmp
inc
(bad)
mov
push
jo
ins
out
test
dec
cmp
das
das
or
adc
push
xor
jae
jb
sbb
fmul
add
push
daa
or
ss
aas
jg
cmp
nop
jne
data16
(bad)
jp
add
adc
sbb
add
sbb
and
pop
pop
and
xchg
and
mov
inc
jnp
inc
cmp
jae
stos
pop
sub
adc
push
pop
repnz
lahf
xchg
adc
cmp
scas
lock
add
movs
ret
add
test
inc
mov
sub
add
or
retf
inc
(bad)
pop
sbb
pop
cmp
je
sahf
sub
or
mov
pop
clc
mov
add
pop
rcl
pop
inc
xor
jo
push
ja
mov
sub
push
pop
xchg
daa
(bad)
ss
pushf
pushf
je
sub
sub
pushf
pushf
pushf
pushf
sub
cs
pushf
pushf
pushf
pushf
adc
adc
pushf
pushf
pushf
pushf
adc
push
pop
mov
or
xor
lahf
push
jo
cmovbe
call
sbb
rol
push
push
inc
ins
outs
jb
je
ins
mov
in
dec
outs
je
ins
outs
ja
fs
pop
inc
mov
add
pop
push
inc
or
loope
test
clc
mov
(bad)
or
hlt
add
dec
call
lock
(bad)
data16
push
test
ret
add
pushf
(bad)
aad
add
jge
or
ficom
pop
lock
mov
hlt
call
leave
pop
je
jl
fsubr
jmp
clc
sbb
rcr
sbb
mov
push
pop
(bad)
jecxz
dec
sub
pusha
dec
pop
add
test
xor
add
dec
scas
fisttp
jmp
and
ror
pushf
xor
xchg
cmp
sbb
and
test
popa
pop
arpl
dec
and
arpl
jo
ins
(bad)
and
dec
add
adc
je
mul
sub
add
dec
ins
and
call
push
push
push
inc
push
pop
push
push
dec
pop
inc
pop
pop
inc
inc
pop
loope
inc
div
popa
dec
inc
pop
add
sti
aas
bound
cli
ins
jns
mov
(bad)
mov
jg
outs
ins
sub
shl
or
dec
pop
push
dec
dec
dec
inc
clc
jle
clc
mov
push
inc
dec
inc
dec
push
dec
and
pop
xor
int3
fild
(bad)
add
sbb
xor
pop
jmp
(bad)
or
jae
adc
jae
test
pop
push
mov
das
push
dec
mov
push
pop
inc
push
pop
dec
push
fiadd
push
or
pop
xor
or
push
push
sbb
xlat
xchg
inc
dec
sbb
xor
push
xchg
pusha
jae
mov
sbb
mov
loopne
or
pop
add
icebp
int3
and
das
div
sub
inc
dec
hlt
add
or
adc
pop
imul
push
dec
dec
inc
sbb
add
or
or
add
or
and
and
pop
je
popf
sbb
dec
cwde
outs
ins
add
bound
and
sbb
mov
jne
enter
push
inc
and
and
je
ins
pop
add
scas
sbb
arpl
adc
pop
fs
jb
dec
add
rcl
sub
arpl
popa
arpl
dec
add
jnp
(bad)
scas
add
push
jne
add
add
add
adc
pusha
mov
cmp
cmp
mov
aas
fcom
je
bound
jb
stos
add
outs
sub
cmp
xor
jae
test
sub
fs
cmp
and
pop
aad
data16
mov
sbb
add
sbb
fs
or
js
pop
bound
daa
ret
lods
pop
xor
jo
jbe
mov
or
push
or
outs
arpl
lods
mov
arpl
jnp
add
push
sbb
dec
pop
add
outs
movs
retf
inc
scas
pop
aaa
sbb
sub
inc
push
dec
xor
inc
dec
inc
sahf
add
retf
(bad)
xor
js
push
push
cmp
sbb
ins
lods
imul
or
addr16
pop
imul
popa
add
rcr
das
adc
lods
ins
pop
cmc
cs
pop
aas
(bad)
or
mov
cmps
es
cmp
adc
add
add
sub
inc
outs
xor
or
ret
pop
add
add
pop
push
add
cmps
adc
popf
rcl
add
sub
mov
rcl
and
cmp
sub
inc
push
xor
enter
mov
sbb
xor
inc
inc
cmp
and
add
dec
and
lahf
faddp
cmp
out
repnz
ss
push
jae
jbe
xor
dec
inc
inc
call
movs
andps
xor
pusha
aaa
das
push
push
in
inc
xor
pop
cmp
push
cwde
out
or
sub
dec
pushf
dec
dec
pop
mov
xchg
mov
das
adc
fcmovb
push
out
hlt
mov
dec
dec
push
sub
pop
lods
inc
push
inc
loopne
outs
(bad)
mov
inc
dec
cmp
mov
loopne
xchg
push
aas
fisttp
mov
cmp
jo
push
or
inc
iret
jecxz
push
inc
aas
add
or
xchg
push
mov
ja
sbb
xchg
hlt
pop
xor
pop
outs
bound
xchg
or
test
pop
inc
sahf
inc
xor
add
or
sub
sub
xor
sub
add
or
call
out
je
psrld
popa
mov
push
sub
stc
nop
pop
imul
or
ss
fldenv
cmp
ins
jo
lock
pop
jmp
jne
jbe
jae
js
mov
adc
pop
jne
dec
imul
xor
xor
lock
jae
jae
xor
mov
and
ret
add
add
add
xor
jne
popa
pop
sub
or
je
test
cs
ja
xor
or
inc
sbb
pop
cmp
pop
xlat
jne
fistp
icebp
dec
add
ins
outs
imul
push
gs
sbb
or
les
movs
ret
or
outs
ret
js
dec
leave
fidivr
jl
and
jo
bound
xor
mov
add
sub
or
sub
sub
add
pop
and
loopne
lea
js
mov
and
add
push
outs
sub
and
imul
call
jae
rol
and
inc
fwait
xchg
or
adc
jo
das
add
imul
out
addr16
pop
and
push
test
sub
sub
loope
imul
test
xor
dec
stos
jnp
imul
push
push
mov
pop
add
cmp
pop
mov
mov
imul
xchg
mov
inc
rcl
pop
ja
push
outs
mov
pop
sbb
out
adc
add
jmp
ja
dec
add
dec
add
and
xchg
inc
jo
pop
sbb
es
cmp
jno
popa
test
add
ror
pop
mov
sub
fcom
or
xor
frstor
jmp
(bad)
xor
adc
enter
dec
jo
loope
xor
loop
in
in
and
cmp
popf
xchg
test
outs
loop
daa
push
push
ins
lock
inc
aam
xchg
add
bound
push
inc
dec
enter
or
add
adc
add
sub
pop
rcl
inc
shl
mov
xor
stos
cmp
sbb
sbb
push
and
cmp
maxps
adc
or
push
je
pop
sbb
add
iret
pusha
int
in
cmc
push
pop
or
mov
push
sub
ficomp
stos
ja
popa
sti
push
add
inc
test
cs
aaa
jmp
aaa
jmp
aaa
mov
and
aaa
dec
shl
pop
retf
or
cld
jb
add
sbb
out
cmp
add
out
sbb
jo
lods
cs
rol
add
fbstp
shl
push
or
push
mov
cmp
pop
pop
(bad)
dec
dec
mov
pop
mov
sbb
xor
jo
and
out
or
cmp
and
fild
popf
icebp
sub
jnp
jno
enter
jmp
pop
dec
sub
iret
and
jmp
xchg
xchg
lods
ins
test
sub
jmp
in
xchg
or
push
push
pop
push
dec
inc
pop
int3
adc
add
cs
push
sub
push
inc
add
ss
cmp
push
and
mov
sub
aad
mov
dec
jno
xchg
adc
mov
icebp
lock
pop
int
xor
push
lds
sbb
inc
dec
push
aam
jge
mov
sbb
(bad)
sub
inc
mov
jo
or
dec
or
(bad)
call
pop
or
sub
(bad)
cmp
jbe
add
cmc
test
mov
xor
loopne
enter
adc
pop
xchg
sti
push
cmc
dec
adc
js
(bad)
in
mov
and
nop
mov
push
xor
data16
adc
add
nop
bound
sbb
inc
mov
retf
cmp
scas
std
movs
pop
ins
pop
nop
add
hlt
scas
test
cmp
mov
sbb
inc
lahf
xor
push
cmp
xchg
dec
pop
(bad)
(bad)
shl
mov
ret
dec
ret
sbb
push
mov
mov
cmp
adc
jno
adc
add
inc
and
ds
stos
sub
sub
fadd
rol
add
add
xor
hlt
jno
imul
push
je
bound
imul
fnsave
xor
push
xchg
pop
adc
mov
xchg
inc
dec
push
dec
inc
push
jno
push
(bad)
out
sub
aaa
mov
cs
iret
sub
or
sub
arpl
nop
popa
adc
mov
cwde
popa
outs
xchg
popf
lock
push
push
and
mov
loope
loope
call
and
push
ret
add
mov
loope
pop
shl
retf
adc
add
adc
sbb
jmp
dec
mov
xor
popa
sub
jo
lea
(bad)
mov
xor
pushf
je
mov
push
cwde
add
scas
rcl
jb
push
bound
retf
loope
xchg
mov
pop
add
mov
cdq
test
mov
nop
fld
pop
jge
jg
add
inc
mov
lds
call
cld
aas
pusha
and
icebp
add
adc
mov
call
adc
jecxz
adc
aaa
xlat
add
daa
hlt
pop
popf
add
lock
or
clc
jmp
or
inc
dec
inc
or
xor
cs
sbb
aas
mov
mov
fs
mov
mov
push
mov
adc
enter
rol
adc
pop
mov
jb
xchg
jae
jmp
pop
rol
pop
dec
das
dec
loopne
pop
add
mov
sbb
mov
push
inc
push
fmul
dec
in
push
es
or
js
sbb
or
test
pusha
add
dec
add
push
add
adc
in
daa
out
and
ret
lods
jp
add
pop
cmp
or
add
xor
in
adc
fdiv
lock
dec
sbb
lock
push
arpl
adc
sbb
int
sbb
add
in
leave
push
inc
push
adc
data16
inc
dec
adc
push
dec
jbe
fwait
xchg
movs
mov
push
xor
dec
mov
mov
inc
push
sub
dec
push
push
lods
ret
enter
test
sahf
repnz
or
imul
cmps
dec
das
fwait
push
js
imul
es
imul
lods
out
sub
rol
cmps
paddsw
inc
sbb
mov
jns
mov
adc
dec
dec
jp
fbstp
loopne
push
popa
add
inc
pop
adc
pop
jmp
jo
ins
imul
gs
cmp
js
ins
jne
aaa
or
hlt
movups
nop
lea
cmp
pusha
lds
cmp
xchg
lods
add
lahf
lock
xor
js
or
pop
add
add
mov
lahf
or
push
enter
mov
mov
pop
jecxz
fisttp
ja
in
pop
cdq
je
fadd
cmove
sbb
dec
jns
mov
push
add
sub
jnp
out
and
outs
outs
je
gs
ja
fild
jnp
sub
jns
iret
cmp
xchg
xor
cmps
cwde
inc
and
xlat
mov
adc
and
add
ret
inc
mov
inc
ins
imul
sbb
dec
mov
shl
je
or
xchg
in
or
sub
out
or
loopne
pusha
mov
mov
aam
push
cmp
loope
addr16
cmp
imul
popa
repnz
jnp
dec
sbb
add
or
pop
loop
rol
adc
inc
pop
push
pop
push
dec
pop
ja
ror
sbb
dec
ret
xchg
std
add
pop
dec
pop
ja
data16
inc
dec
inc
xor
xor
push
mov
sub
pop
push
lea
idiv
and
push
or
dec
jne
bound
xchg
pop
or
popa
je
adc
add
pop
popa
jl
popa
or
outs
shl
dec
sbb
add
inc
jmp
pop
sub
adc
enter
mov
sub
mov
jne
ins
sub
mov
or
popa
imul
jo
inc
out
xor
ins
sub
or
push
pop
inc
sbb
dec
add
dec
lock
push
jne
and
mov
nop
inc
mov
fadd
or
inc
xchg
popa
int3
bound
push
loopne
arpl
ret
xor
fcom
stc
sub
enter
xlat
das
add
or
mov
sbb
add
mov
outs
xor
push
sbb
and
pusha
call
mov
das
cmp
sub
adc
adc
cli
ror
pop
jae
shl
and
fld
jmp
ror
das
int3
leave
into
jo
jno
sbb
sub
imul
jnp
retf
sub
or
mov
lahf
sub
movs
sti
add
imul
fdivr
add
pop
fisubr
or
outs
jle
pop
xor
inc
test
cs
test
arpl
fs
fadd
je
lock
mov
inc
sub
fisub
xchg
push
pop
test
loop
pop
cmp
add
jg
loop
loop
and
dec
dec
dec
dec
push
push
add
push
push
leave
add
iret
cmp
add
dec
inc
pop
in
popa
jo
adc
and
and
aaa
inc
mov
push
inc
lahf
adc
data16
pop
dec
pusha
cmp
into
sub
mov
enter
xchg
fdivr
pop
pop
addr16
(bad)
and
mul
jge
cmps
add
dec
(bad)
shr
or
shr
sti
loope
outs
add
and
outs
pop
je
add
pop
cmp
jge
push
pop
sub
arpl
pop
add
outs
outs
mov
mov
mov
mov
pushf
ret
pop
xor
ret
or
sar
push
xchg
fwait
loop
adc
and
push
mov
xchg
mov
xor
cmp
sub
lds
push
dec
dec
and
rol
cs
jb
jae
dec
movs
imul
or
inc
add
daa
cmp
add
or
(bad)
and
daa
add
(bad)
dec
inc
push
push
pop
dec
inc
mov
mov
mov
jle
sbb
les
adc
aam
mov
mov
mov
sbb
jo
xchg
cmp
push
pop
push
jb
stc
sbb
push
cmc
or
mov
outs
out
(bad)
out
or
dec
dec
push
cmp
fbstp
std
xchg
das
daa
mov
daa
das
dec
sub
xor
or
cmp
aad
cmp
rcr
shl
test
inc
add
pop
in
cmp
pop
fs
ins
jo
(bad)
daa
cmp
mov
and
outs
repnz
cmp
cmp
ins
bound
(bad)
loopne
js
imul
xor
cs
or
add
or
add
push
js
jmp
(bad)
or
test
fbld
cmp
xchg
xor
cmp
pop
mov
ret
sub
test
cwde
xchg
push
arpl
inc
inc
pop
das
icebp
enter
or
or
scas
sbb
and
jo
adc
cmp
add
push
add
loopne
push
xor
test
xor
mov
out
xor
xor
or
sub
xor
shr
movs
xlat
es
fnstenv
add
and
or
das
mov
xor
mov
xchg
push
aaa
imul
jbe
shl
jns
stos
inc
push
aas
sti
test
push
pushf
push
and
ds
idiv
or
push
lahf
pop
add
loope
js
pop
dec
push
out
jb
repz
stos
out
popa
mov
xchg
cmp
pop
cmp
stos
add
mov
rcr
cli
gs
movs
mov
(bad)
cmp
or
cmp
pop
inc
sbb
test
mov
inc
int
push
jae
loope
adc
jl
push
jmp
adc
xchg
das
or
or
enter
test
pop
pop
mov
(bad)
sahf
pushf
sub
dec
pop
mov
lods
add
add
movs
xor
cmp
mov
jecxz
jmp
icebp
and
stos
push
mov
mov
test
in
xor
push
mov
inc
ins
arpl
repnz
or
jmp
push
mov
dec
enter
jecxz
sahf
jl
int3
outs
sub
outs
and
pcmpeqb
sub
and
and
in
pop
xor
outs
pop
adc
ins
jo
sub
push
push
sub
xchg
fdiv
sbb
pop
lods
loop
loopne
fnstenv
jb
shl
shl
pop
jl
add
sahf
pop
push
push
inc
jns
pop
js
add
dec
add
cmp
cmp
xchg
sbb
push
dec
push
int3
call
dec
loop
mov
bound
mov
fdivr
imul
xchg
rcr
push
xchg
das
add
add
xor
push
add
add
cmp
shl
retf
add
cmc
add
in
sub
cld
jecxz
mov
int
inc
inc
cmp
mov
inc
mov
mov
clc
icebp
push
or
out
inc
test
xor
add
mov
jo
or
enter
mov
out
jb
daa
pop
push
mov
ja
pop
adc
push
jle
cmp
or
push
fstp
and
inc
mov
(bad)
int3
adc
and
addr16
not
xchg
call
sbb
int3
loope
inc
adc
fdivr
(bad)
shl
inc
push
(bad)
add
push
push
int
sbb
add
leave
add
or
and
test
mov
movs
add
push
dec
sbb
inc
xchg
retf
sub
shl
push
push
pop
or
test
push
push
nop
mov
fist
(bad)
cmc
adc
aad
or
cmp
je
add
out
add
cmp
(bad)
sbb
adc
and
movs
xchg
sub
rcl
daa
xor
outs
or
and
add
lods
retf
add
pop
out
test
sbb
push
cmp
add
daa
mov
xor
data16
sub
sub
or
jae
into
outs
ja
xchg
or
mov
pop
aam
outs
mov
bound
xor
or
inc
shl
leave
push
outs
retf
or
out
push
push
xor
cmp
add
cmps
mov
pop
xor
or
imul
xor
pusha
test
jge
push
and
bound
xor
adc
and
or
xchg
and
enter
adc
sub
xchg
or
sub
xchg
pop
mov
(bad)
sub
and
xor
scas
xor
pop
fdiv
in
test
mov
add
cmp
add
adc
test
add
and
test
out
icebp
jno
adc
inc
inc
rcpps
add
aad
or
and
nop
loopne
mov
xchg
inc
fs
or
data16
push
mov
adc
addr16
fisttp
xchg
xor
loope
mov
and
outs
ss
lock
mov
adc
add
out
push
sbb
cmp
movs
cmc
adc
fucom
xlat
sbb
xlat
add
jle
push
add
sbb
loopne
loop
repnz
bound
add
rcr
aas
popf
fwait
push
and
test
push
and
and
xor
rol
lods
jg
ret
pop
and
add
mov
aam
xor
push
adc
xchg
xchg
je
pushf
bound
xor
pusha
int
iret
push
iret
pop
aad
pop
fdiv
inc
in
jae
or
out
add
icebp
add
sbb
add
das
add
cs
inc
sub
sbb
rcr
push
sbb
sub
inc
mov
jle
add
fisub
xor
add
mov
mov
jne
cs
data16
xor
rol
push
jo
mov
dec
mov
jns
sbb
inc
pop
outs
mov
icebp
sbb
adc
add
cmp
(bad)
ins
stos
or
mov
inc
pop
mov
mov
inc
push
push
iret
dec
and
push
pop
push
push
dec
cld
xlat
adc
ret
ror
and
xchg
add
jmp
out
mov
pop
cs
ret
push
clc
lods
nop
sub
add
dec
xor
cld
rcr
inc
sub
jmp
or
int3
pop
pop
xor
mov
rol
cld
or
push
fcomp
pusha
mov
adc
loop
inc
lods
popa
sti
mov
icebp
cmp
cmp
bound
add
xor
fst
pop
in
arpl
cmp
jecxz
xchg
pop
outs
sbb
add
push
pop
lods
adc
push
loope
lea
dec
fist
pushf
mov
rcr
xor
sbb
repnz
jbe
stc
ror
test
push
fsub
lods
pop
cmps
cmp
sub
mov
popa
mov
mov
movntq
inc
leave
in
mov
or
add
xor
xor
adc
sahf
mov
jl
adc
inc
imul
inc
popf
fimul
icebp
jb
popa
xor
sbb
and
add
or
dec
mov
or
jb
xor
pusha
out
jle
pusha
sub
jmp
push
sbb
xchg
or
in
pusha
xor
jecxz
inc
add
mov
pop
stc
pop
outs
hlt
js
call
add
push
sub
inc
in
or
jmp
add
push
jb
jecxz
in
les
push
and
mov
fdivp
or
jae
cmp
push
pusha
das
arpl
and
ror
les
add
dec
xchg
inc
and
inc
jne
call
in
mov
adc
adc
mov
sbb
sub
jne
les
sbb
sub
xor
xor
sub
push
data16
jo
or
mov
jb
test
mov
inc
pop
fcom
add
add
ror
lea
mov
call
inc
jnp
ltr
aas
push
loopne
add
aas
adc
arpl
popa
sbb
mov
pop
or
xchg
ds
sub
push
adc
inc
cmp
outs
inc
cmp
inc
shl
or
adc
jo
data16
adc
test
and
cmc
mov
icebp
retf
sub
inc
xchg
add
cmp
or
fstp
add
rol
mov
loope
fbstp
sub
jo
psllq
inc
shr
ja
repnz
xchg
and
scas
push
adc
xor
mov
and
cmp
les
outs
fs
adc
adc
cmps
popa
test
retf
lods
and
and
push
adc
pop
add
xchg
mov
rol
jnp
mov
push
dec
je
inc
imul
or
and
cmp
inc
cld
inc
repz
das
xor
movs
sub
inc
sbb
xor
add
cs
push
push
retf
outs
pop
dec
mov
jg
bound
ds
pop
icebp
jmp
mov
sti
(bad)
sbb
stos
jge
xchg
jae
fld
jbe
add
jo
test
loopne
or
hlt
data16
into
(bad)
enter
jae
inc
add
pop
lods
loopne
push
sti
add
pop
movs
fild
dec
fs
ja
jecxz
loopne
or
aaa
xor
adc
bound
sub
(bad)
mov
or
arpl
adc
and
mov
sub
adc
daa
popf
mov
push
mov
dec
push
push
push
or
and
nop
sub
inc
loopne
ds
cdq
xor
mov
xchg
and
mov
dec
sbb
pop
stos
ja
ret
mov
aad
and
icebp
or
movs
(bad)
mov
cmc
add
or
inc
mov
xor
sbb
add
popa
adc
stc
xor
movs
and
xor
jp
inc
add
out
add
(bad)
pop
js
pop
inc
inc
xchg
loop
mov
or
jne
cmps
mov
push
dec
or
xchg
mov
push
mov
je
test
pop
inc
jp
xchg
xor
cs
sbb
xor
xlat
cmps
or
movs
gs
mov
lock
mov
mov
xor
add
dec
jo
cmp
xchg
cmc
fiadd
fisttp
aaa
test
add
ins
cmp
inc
or
add
shl
add
cmc
add
or
jecxz
add
push
loop
inc
mov
sbb
fild
add
ror
pushf
push
sbb
inc
xchg
push
adc
pusha
adc
mov
mov
fild
lods
pop
xchg
sbb
sub
xor
sbb
push
ret
aaa
and
adc
push
xor
imul
int3
push
ret
das
adc
lea
mov
fbstp
push
or
adc
fldcw
mov
sbb
or
and
scas
sar
adc
movs
mov
jo
and
adc
or
push
inc
cmp
gs
call
jo
mov
inc
xchg
jo
mov
sbb
popf
inc
xor
mov
push
ins
cli
push
popf
pop
inc
test
arpl
bound
xor
popf
push
arpl
inc
mov
mov
pop
push
lods
and
inc
stc
pushf
jo
call
test
push
push
or
inc
bound
(bad)
cmp
or
pop
cmps
sbb
cdq
and
loop
dec
fst
inc
push
es
xchg
push
fld
arpl
push
xchg
pcmpeqb
loopne
push
xchg
(bad)
mov
sub
jg
mov
outs
inc
xor
mov
gs
fild
jae
in
xchg
sar
jb
push
xor
dec
xor
adc
stc
ins
aaa
mov
or
(bad)
jo
jno
pop
aaa
adc
das
sbb
cmp
sbb
sbb
jns
sub
inc
or
jecxz
mov
mov
inc
xlat
xchg
jae
cmp
pop
add
add
mov
pop
xor
in
popf
pop
add
cld
add
push
xchg
sub
xor
or
xor
jo
or
inc
pop
or
cmp
sub
cmp
add
cmp
mov
ret
push
imul
adc
jmp
or
pop
sub
sub
data16
sub
test
push
pop
movs
xor
mov
pop
pop
fiadd
inc
fs
dec
mov
dec
(bad)
xor
push
pop
ins
fs
test
aad
dec
pop
jb
fild
adc
hlt
or
(bad)
pop
pop
pop
push
pop
pop
adc
xor
xor
gs
mov
inc
and
or
daa
enter
jg
int
sbb
pop
pop
daa
mov
push
mov
add
or
dec
mov
xor
add
add
inc
push
push
mov
xor
push
pop
addr16
xor
inc
lods
nop
pop
out
rol
sbb
arpl
or
push
xor
push
mov
xor
push
push
and
test
inc
adc
sub
call
scas
or
cmps
mov
xor
xor
pop
sub
pop
xor
pusha
and
push
jo
add
push
dec
out
or
or
add
cmps
jb
push
dec
inc
cmps
and
mov
sahf
fild
inc
mov
dec
sbb
or
call
push
daa
enter
wbinvd
add
aas
div
inc
inc
dec
push
inc
sbb
ss
push
or
xchg
add
and
add
add
and
xor
xchg
and
add
pop
repz
pushf
sub
xor
sub
lea
add
inc
gs
or
add
(bad)
jno
(bad)
jb
scas
loopne
xchg
inc
inc
inc
push
fsub
xor
dec
sub
and
add
lock
pop
sub
mov
jae
jo
xchg
sub
inc
int3
adc
(bad)
xor
jo
cli
add
dec
fisttp
jg
and
adc
xchg
jae
add
mov
sti
loopne
rcr
add
aad
mov
fadd
ja
add
aas
xor
adc
test
cmc
adc
mov
or
popa
clc
outs
fs
xor
sub
xchg
rol
frstor
xor
gs
inc
leave
xor
aas
adc
mov
fdivr
add
shr
inc
out
add
inc
add
cmc
fnstenv
fs
ins
loope
stc
aas
sbb
out
gs
add
pop
push
retf
lods
rcr
jmp
xor
or
fcmovbe
rcl
ja
xchg
and
pop
xchg
jg
sbb
fwait
and
sti
sub
or
loope
sbb
mov
xor
adc
xor
fidiv
aaa
lds
test
xchg
jo
xor
xor
push
rol
sub
out
out
cmp
(bad)
mov
aaa
cmp
and
and
sbb
push
dec
sub
data16
js
push
ret
stc
mov
pop
and
scas
dec
lea
js
mov
ficomp
sub
loope
cmp
aas
push
arpl
pusha
and
adc
pop
mov
sti
inc
add
cwde
pop
aaa
pop
int
cwde
mov
pop
pop
arpl
add
xchg
addr16
ss
dec
mov
fwait
stos
outs
or
dec
loope
(bad)
out
cmp
add
int
add
cli
mov
cmps
lds
sbb
jne
cwde
adc
repz
push
(bad)
test
outs
daa
and
mov
jne
push
push
push
popa
retf
icebp
xchg
jo
and
or
call
fs
adc
pop
and
xor
xlat
cmp
mov
daa
jg
cmp
sub
xor
mov
and
adc
push
sub
rcl
or
xor
jns
and
popa
pop
jo
sbb
mov
fst
jo
repnz
xor
dec
push
xor
bound
test
aam
adc
inc
lods
mov
sbb
cmps
ret
jns
and
cmp
xor
adc
fwait
cs
data16
jns
cmp
sub
movs
adc
sbb
inc
cmp
cmps
data16
cmp
ret
ins
add
sub
pop
sbb
pop
es
outs
push
mov
mov
mov
or
mov
xor
mov
inc
xchg
addr16
dec
inc
es
add
jnp
bound
inc
shr
cmp
mov
push
inc
mov
ins
cmp
sub
and
mov
movs
popa
sbb
js
sub
cdq
or
jmp
jbe
jmp
sahf
mov
mov
add
mov
pop
pop
add
mov
out
rol
add
sbb
cs
jae
pop
aaa
sub
push
ins
add
or
stos
scas
mov
push
push
ins
adc
ja
xchg
or
repnz
inc
and
sub
add
push
es
dec
clc
lahf
std
inc
dec
push
dec
inc
push
out
push
inc
je
push
add
jmp
jmp
inc
dec
mov
xor
sbb
and
jge
pop
push
mov
inc
pop
fdivr
aaa
mov
scas
inc
or
or
daa
push
mov
adc
push
div
mov
int3
lock
and
or
push
push
in
sub
pop
jo
adc
xor
mov
ret
pop
mov
pop
xchg
sbb
ins
dec
les
mov
and
jno
cmp
addr16
loopne
nop
cmp
jb
lods
mov
sar
pop
popa
mov
sbb
mov
add
adc
or
sar
add
push
pop
or
adc
mov
push
sti
sbb
inc
or
jbe
shl
push
xchg
mov
popf
das
sub
pushf
add
sub
pusha
cli
or
push
xchg
adc
or
jnp
and
test
ja
sub
adc
sbb
sub
sub
cli
fisubr
shr
mov
inc
cmp
test
dec
sbb
pushw
xor
dec
je
inc
stos
push
xor
push
xor
mov
mov
cmp
add
(bad)
jle
mov
imul
sbb
scas
fistp
mov
sbb
jp
shl
mov
add
mov
sub
sub
ja
into
lock
adc
inc
mov
add
and
add
xchg
add
sbb
add
aaa
mov
outs
add
xor
mov
lds
cmc
push
stos
loope
add
out
dec
or
and
xor
scas
push
mov
loopne
es
add
cmp
mov
mov
aas
adc
sub
jo
test
inc
add
out
push
mov
mov
push
fdivr
push
inc
sbb
das
cmp
test
inc
dec
fs
lods
mov
add
pop
sub
and
sub
dec
or
pop
xor
pop
outs
(bad)
add
js
mov
xchg
push
jo
mov
pushf
outs
push
sbb
xchg
js
rol
scas
retf
or
xor
daa
pop
mov
inc
add
hlt
dec
and
repnz
cmp
push
dec
sar
ror
loope
popa
hlt
inc
js
div
or
add
push
gs
paddsb
add
lods
adc
js
repz
sbb
js
enter
dec
and
add
adc
push
int3
push
mov
sbb
out
ds
and
mov
out
and
jp
out
sbb
push
retf
jmp
xchg
into
les
movs
cmp
or
add
inc
pop
push
or
fs
aaa
push
pop
pop
loope
iret
in
mov
movs
push
out
adc
add
or
sar
dec
cli
prefetcht1
xchg
sub
imul
or
call
mov
or
loopne
push
cmp
call
mov
ja
adc
push
mov
pop
pop
ins
or
add
and
mov
dec
pop
mov
(bad)
pop
or
sbb
stos
pop
(bad)
sbb
add
outs
push
ins
jns
mov
push
in
pop
out
pop
inc
push
dec
add
mov
mov
lahf
or
pop
lock
idiv
add
lahf
push
pop
inc
imul
adc
sub
pop
imul
(bad)
pop
test
scas
push
shl
mov
inc
inc
shl
mov
pop
sub
or
adc
push
popa
outs
jl
add
jbe
pcmpgtd
sbb
pop
inc
dec
jl
inc
js
ins
xlat
xchg
and
cmp
dec
fisttp
je
adc
xor
fild
rol
add
(bad)
(bad)
repz
test
setne
nop
cdq
mov
je
mov
sete
dec
out
ins
out
cmps
pop
nop
push
fisttp
jo
push
push
call
dec
pop
add
mov
outs
jo
mov
sub
push
push
adc
add
dec
out
push
or
mov
cld
je
in
ret
pop
imul
ficomp
push
pop
and
dec
pop
in
pop
push
mov
add
je
push
sbb
push
and
add
adc
outs
push
add
sbb
add
and
pop
push
xor
pop
inc
loopne
pop
and
nop
mov
add
cld
stc
or
pop
inc
sbb
or
clc
cmp
inc
hlt
sbb
aas
adc
add
leave
je
repz
add
or
push
(bad)
popa
xlat
sbb
dec
imul
xchg
iret
data16
mov
push
add
popa
adc
retf
pop
jo
and
repnz
inc
mov
mov
aam
xor
cmp
add
mov
push
ror
or
aaa
stc
rol
push
jno
cmp
loopne
sbb
hlt
pop
pop
mov
dec
inc
push
and
jl
or
and
std
je
hlt
xor
jne
cld
and
mov
je
clc
and
jnp
or
adc
(bad)
add
push
mov
mov
sub
lock
jae
mov
test
push
jmp
mov
push
cmp
imul
loopne
jmp
jo
or
pop
pop
push
out
add
add
out
sub
or
xor
out
push
mov
(bad)
out
out
add
mov
call
add
out
out
mov
je
sbb
dec
ret
or
cmc
push
fcom
sub
xlat
(bad)
xor
sbb
cli
ja
mov
adc
sub
cmp
xor
jb
adc
fsub
inc
jnp
xor
mov
lds
cmp
jbe
inc
fdivr
mov
mov
rol
adc
data16
mov
into
(bad)
and
psubq
xlat
aaa
fsubr
add
xor
mov
add
int
dec
clc
hlt
mov
mov
hlt
cwde
push
push
outs
retf
xor
test
je
push
and
jae
stos
or
inc
lea
push
inc
test
cmp
dec
pop
and
or
jne
inc
cld
fucomp
out
mov
cwde
jmp
mov
or
(bad)
test
mov
dec
cld
mov
dec
shl
mov
pop
sbb
sub
dec
mov
pop
jo
pop
pop
inc
adc
pop
sbb
mov
ret
jmp
jmp
mov
pop
jg
add
fdivp
add
mov
dec
mov
push
or
sub
(bad)
retf
push
fsubr
pop
xor
pop
ret
out
addr16
mov
addr16
adc
sbb
jge
mov
stos
ins
adc
xlat
pop
sbb
sbb
and
ret
dec
je
push
or
jle
call
xor
shl
cld
pop
add
jae
jge
add
fcomp
mov
cld
pop
js
into
loopne
lea
cdq
xor
sbb
fdiv
sbb
inc
sbb
mov
cmp
mov
mov
lock
jmp
xlat
rcr
fstp
or
mov
pop
and
imul
jns
mov
addr16
sbb
or
fcmovnbe
mov
push
mov
add
and
fadd
movs
mov
scas
mov
fmul
call
(bad)
sbb
and
in
psubusb
call
push
add
ins
shl
vmovaps
jecxz
mov
push
arpl
outs
jmp
push
inc
pop
cld
sbb
cmp
mov
sub
add
ins
push
out
xchg
mov
fcom
imul
pop
pop
cmc
or
sbb
ins
adc
call
xor
xor
or
pushf
cdq
mov
or
or
sbb
adc
mov
and
aam
xchg
and
or
dec
int
rol
jmp
arpl
inc
and
pop
mov
dec
scas
xor
enter
push
add
outs
mov
cmp
jno
cli
adc
add
adc
push
adc
jne
mov
jmp
and
jne
jmp
sti
push
pop
nop
mov
push
lea
mov
stos
sbb
shl
inc
in
mov
aas
sbb
in
mov
mov
dec
mov
lock
sbb
pusha
jle
jae
or
and
sbb
aam
in
or
inc
repnz
mov
call
pop
mov
int3
mov
and
js
lock
inc
push
sbb
aam
fsub
nop
xchg
inc
fsub
loopne
sbb
call
fs
mov
lock
xchg
or
mov
xchg
add
and
add
fs
and
or
sbb
or
adc
ss
cmp
fsub
sbb
and
push
sbb
enter
sar
xchg
popf
and
inc
in
xchg
inc
cmp
inc
push
sbb
fs
cmp
inc
lock
sbb
dec
retf
and
fs
je
test
and
sbb
pop
add
xor
enter
pusha
ins
xchg
xchg
inc
inc
mov
jo
je
xchg
enter
test
xor
enter
les
xchg
enter
mov
sbb
jb
cwde
xchg
rcr
and
xor
and
test
enter
and
mov
mov
mov
push
mov
ror
movs
pop
add
cmc
push
and
sbb
hlt
jle
inc
push
jns
je
pushf
nop
xchg
arpl
enter
pop
out
fisub
movs
and
inc
fnstenv
aam
nop
and
inc
(bad)
loopne
mov
and
add
fwait
gs
and
inc
push
and
xchg
ss
in
fdivr
and
jb
jbe
inc
and
inc
and
inc
mov
int3
inc
sbb
les
and
nop
in
xchg
inc
sbb
sbb
or
fs
test
pusha
and
push
and
nop
xchg
inc
movs
cwde
test
sbb
fs
or
retfw
push
and
repnz
and
xchg
xchg
and
enter
and
stos
and
sbb
jb
jo
nop
enter
sub
xor
jb
fdiv
dec
enter
or
push
fwait
jecxz
jo
test
mov
enter
cmp
sub
xor
loop
aaa
xor
mov
in
sub
and
inc
mov
js
in
xchg
inc
jl
add
test
enter
mov
mov
jb
clc
xchg
xor
setno
nop
fsubr
fcom
and
and
mov
out
mov
enter
sub
jbe
xchg
mov
sbb
sbb
mov
mov
fiadd
inc
and
in
xchg
mov
push
sbb
shr
and
cmp
shl
punpcklbw
int3
inc
ja
cmp
nop
and
cmp
neg
fbstp
jmp
xor
adc
xor
popa
cmp
fsub
inc
mov
fsubr
and
and
in
and
ror
mov
xchg
inc
xor
cmp
pusha
jb
enter
enter
xor
in
adc
add
and
xchg
inc
inc
mov
cmp
in
xchg
sub
and
jno
sbb
xor
out
and
in
fsub
hlt
and
sbb
lock
sbb
ss
inc
and
push
add
xchg
and
mov
or
and
or
or
xor
adc
jb
enter
sbb
xor
add
add
loopne
push
aaa
cmp
sbb
adc
and
cmp
dec
inc
inc
push
sbb
ds
xchg
sub
call
cmp
and
inc
in
and
xchg
cmp
mov
test
add
and
nop
xchg
inc
inc
mov
jb
adc
adc
sbb
cmp
sbb
test
movs
and
int3
mov
inc
push
cmp
xor
mov
and
inc
and
jno
enter
inc
int3
in
sbb
into
(bad)
adc
and
in
fsubr
pop
gs
pop
retf
pushf
and
cmp
les
mov
push
jo
mov
jb
inc
fs
(bad)
xchg
jl
mov
addr16
adc
and
xchg
test
inc
push
sbb
mov
nop
add
jb
enter
cwde
xchg
cmp
enter
and
inc
push
cmp
sub
dec
ins
in
nop
xchg
inc
dec
lods
push
xchg
in
mov
push
sub
pop
inc
inc
push
sbb
cwde
mov
aam
movnti
ins
xchg
mov
mov
jo
and
and
mov
jl
and
and
cmp
nop
xchg
nop
mov
enter
cwde
and
pushf
arpl
pop
mov
aad
and
cmp
enter
or
sub
and
or
and
out
add
sbb
jb
enter
add
or
mov
je
xchg
adc
fldenv
and
in
cmp
and
cmp
or
and
enter
sub
xor
xor
xor
and
sbb
in
cmp
leave
inc
dec
xchg
inc
inc
push
inc
je
cmp
pushf
dec
les
fisttp
sbb
push
retf
retf
nop
xchg
inc
inc
inc
pop
ins
sbb
fs
xchg
fs
push
xor
or
jo
je
and
and
push
into
jl
pushf
and
and
cmp
int3
mov
xchg
arpl
xchg
xchg
inc
xchg
cwde
int3
and
mov
mov
cmp
and
xor
mov
mov
sub
rcl
ins
fs
in
enter
int3
rol
cmp
in
aam
iret
jb
enter
fcomp
sbb
lods
and
nop
and
shl
cmp
xor
test
sbb
hlt
mov
mov
xchg
xchg
inc
cld
in
ror
and
add
sbb
imul
je
or
inc
int3
adc
enter
rcr
push
and
and
and
sub
push
sbb
jbe
shl
sub
xor
xor
fs
in
cmp
and
aam
cmp
enter
fs
and
adc
mov
in
test
cmp
aad
push
mov
inc
push
sbb
jb
nop
xchg
mov
and
les
enter
movs
int3
inc
mov
aam
add
fs
xchg
aam
fsub
sbb
fcom
inc
in
lock
and
call
ins
dec
and
js
and
xchg
in
clc
sbb
cld
(bad)
cmp
or
and
and
add
inc
push
sbb
nop
xchg
or
adc
ins
xchg
xchg
inc
inc
mov
sbb
and
in
shl
fld
and
xchg
enter
xor
and
cmp
cmp
fadd
inc
inc
inc
push
sbb
xchg
dec
sub
push
dec
and
pop
pushf
jb
enter
pusha
mul
sbb
hlt
push
data16
cmps
sbb
and
js
and
(bad)
and
push
cmp
int3
jl
fild
cmp
pusha
sar
in
test
mov
nop
inc
fsub
xchg
inc
sbb
xor
add
and
xchg
mov
movs
test
loope
push
sbb
lods
xor
xchg
fisttp
mov
xchg
cmp
retf
xchg
and
and
sbb
int3
sbb
mov
xchg
daa
adc
lods
push
or
in
fcomp
in
and
xchg
enter
push
sbb
inc
inc
push
sbb
je
fs
xchg
js
jl
inc
push
sbb
sub
and
jb
enter
mov
nop
test
in
and
fcomp
sbb
pushf
cmp
inc
movs
mov
enter
sbb
mov
and
xor
enter
loopne
inc
mov
and
les
and
test
sbb
jb
mov
xchg
inc
mov
jmp
fadd
push
cmp
cmp
call
inc
in
xchg
test
lock
int
in
hlt
adc
fdiv
enter
test
repnz
test
retf
popa
addr16
and
inc
or
and
xor
arpl
pusha
and
fs
pushf
sbb
sbb
and
inc
xor
enter
mov
xchg
cmp
out
xor
cmp
push
sbb
xchg
inc
clc
inc
cmp
and
dec
mov
enter
in
push
inc
inc
push
cmp
icebp
pop
push
fs
xchg
pop
mov
inc
push
sbb
fs
push
enter
jo
cmp
and
and
sbb
jl
repz
enter
cwde
and
mov
cmp
hlt
nop
push
xchg
inc
inc
push
sbb
enter
cmc
mov
sbb
test
and
cmp
div
cmps
push
and
sbb
clc
add
and
inc
cmp
cmp
xor
enter
int3
inc
push
sbb
ss
and
rcl
enter
adc
fdivr
arpl
and
fsub
and
xchg
inc
call
je
mov
lock
hlt
xor
add
mov
clc
xchg
cwde
xor
mov
fdivr
add
xchg
xor
and
inc
push
sbb
or
or
xchg
popa
add
and
push
xchg
sbb
pushf
gs
adc
bndldx
sbb
pop
addr16
mov
sbb
inc
and
pop
or
add
adc
jmp
add
cmp
shr
xor
test
je
out
call
mov
mov
mov
xchg
cld
mov
lahf
arpl
mov
int3
into
or
and
or
sub
fsub
mov
cmps
or
dec
dec
and
xor
adc
jl
xchg
in
call
call
mov
sbb
lea
fcomp
jb
ins
fsub
aam
hlt
enter
xchg
xlat
xor
arpl
cwde
sbb
jb
pop
pushf
and
movs
fmul
in
test
add
cmp
push
jo
je
jl
cld
mov
mov
cmp
js
add
and
jo
in
pusha
enter
rol
sbb
lods
in
mov
add
and
cmp
dec
shl
push
in
and
arpl
enter
(bad)
mov
(bad)
in
gs
and
mov
inc
mov
call
test
mov
mov
pop
pop
pop
mov
push
inc
loopne
add
pop
jg
enter
je
clc
mov
jl
jmp
mov
pop
div
(bad)
mov
pop
ret
sub
add
inc
or
ins
add
jp
in
jle
add
jns
add
add
add
add
shr
push
jae
sub
push
scas
fscale
mov
pop
add
push
add
push
je
out
mov
add
jb
xor
ja
outs
pop
aaa
mov
mov
cmova
lods
or
(bad)
dec
xor
inc
sbb
jne
push
push
cmps
ds
sub
jb
dec
push
out
es
enter
xchg
pop
and
call
cmp
pop
inc
push
dec
outs
jle
mov
xchg
xchg
and
add
jg
xor
mov
jg
sbb
inc
(bad)
adc
cwde
pop
xor
rcr
arpl
xor
push
sub
xor
repnz
cmp
xchg
push
push
mov
dec
or
xchg
inc
and
aas
mov
mov
jg
ret
sub
jmp
out
addr16
sbb
pop
jg
pusha
and
ja
sbb
jmp
mov
push
xchg
mov
push
retf
loopne
mov
(bad)
daa
add
mov
es
pusha
push
or
scas
push
pop
mov
inc
inc
sbb
shr
imul
popa
cdq
mov
pop
jg
pop
imul
outs
rcr
mov
repz
or
retf
add
jb
scas
xchg
sub
inc
mov
mov
(bad)
sub
ret
inc
in
pop
xor
(bad)
daa
int3
and
inc
shl
add
jae
push
cwde
add
jmp
arpl
or
imul
das
dec
test
stos
mov
inc
add
adc
cwde
jecxz
mov
xor
push
ds
jb
ss
adc
test
cdq
dec
imul
inc
adc
call
mov
and
addr16
xor
loopne
ins
mov
pop
and
or
sbb
or
adc
xchg
mov
xor
sbb
outs
xor
sbb
mov
and
fs
addr16
daa
or
or
pusha
add
test
sub
iret
(bad)
and
inc
adc
outs
push
jmp
xor
inc
jae
int3
and
dec
dec
dec
add
outs
sub
add
add
mov
jbe
sar
jne
inc
dec
ja
dec
jo
adc
outs
xchg
ret
mov
outs
adc
and
xor
lods
sub
aas
inc
aaa
test
dec
aaa
retf
das
adc
jbe
aaa
and
inc
(bad)
setg
enter
push
pop
inc
cmp
(bad)
stos
push
mov
mov
neg
and
or
dec
add
dec
xlat
add
aas
xchg
add
nop
and
mov
or
dec
imul
adc
and
inc
push
push
aaa
xor
cdq
push
scas
ret
or
xor
adc
add
push
inc
dec
ror
test
adc
jae
data16
cli
or
push
xchg
and
pop
push
call
dec
pop
shl
pop
push
or
push
mov
cdq
and
or
inc
mov
pop
outs
pop
outs
cs
addr16
retf
je
pop
push
jae
outs
mov
outs
aaa
inc
ficom
push
outs
(bad)
ja
mov
inc
push
fld
add
dec
add
inc
mov
pop
mov
push
mov
ret
jmp
push
push
add
pusha
add
mov
imul
je
xchg
ss
dec
jg
inc
leave
add
jg
jbe
(bad)
aam
out
pop
xchg
jo
ret
or
mov
inc
and
sub
test
imul
add
mov
sub
aaa
inc
jle
add
adc
pop
imul
push
push
dec
push
push
mov
(bad)
ror
pop
pop
or
movs
inc
add
inc
xor
ss
dec
outs
dec
pop
add
ja
xor
sub
int3
cmp
jp
adc
(bad)
add
pop
shl
pop
or
pushf
jbe
mov
sbb
mov
cmp
add
neg
or
or
jnp
ins
sbb
addr16
addr16
bound
mov
and
xlat
xor
(bad)
and
dec
repz
fmul
and
mov
adc
pop
pop
add
pop
aas
mov
add
fistp
jg
sub
and
dec
xchg
xor
mov
ror
mov
mov
xchg
ret
adc
mov
mov
daa
mul
bound
aaa
es
mov
push
sti
or
dec
jb
jae
xor
jmp
adc
or
das
sbb
inc
inc
xchg
(bad)
mov
adc
mov
inc
outs
or
adc
scas
test
das
pop
or
sub
mov
lahf
jno
arpl
ja
outs
lods
or
out
(bad)
lahf
add
nop
imul
lods
daa
mov
or
bound
(bad)
lahf
lgs
mov
imul
out
push
mov
xor
or
inc
sub
dec
cmp
ja
fsubr
xchg
fsubr
inc
xor
adc
push
sbb
sub
pop
fild
in
test
addr16
inc
pop
pop
adc
inc
shl
into
inc
out
add
adc
outs
push
ja
push
and
mov
jae
mov
xor
add
ja
retf
call
not
dec
and
inc
dec
sbb
lahf
les
(bad)
ss
and
dec
popa
push
and
addr16
les
and
push
push
imul
add
push
add
adc
xchg
addr16
popa
add
push
in
cmps
ja
add
ds
pop
popa
and
in
adc
pop
dec
cmp
push
mov
ret
and
sbb
outs
repz
adc
jnp
or
xlat
add
jb
cli
ficom
pushf
dec
mov
sti
or
ja
inc
pop
pusha
pop
pop
push
in
mov
out
jb
sbb
imul
pop
add
add
xchg
add
add
push
and
mov
or
inc
lods
dec
pop
xchg
cs
(bad)
mov
popa
aas
adc
adc
sub
ja
(bad)
or
push
adc
and
jbe
dec
dec
add
sbb
ds
sub
and
(bad)
pop
push
stos
or
mov
dec
imul
jo
push
inc
push
add
xchg
sub
(bad)
mov
outs
into
dec
sub
xor
enter
xor
int3
pop
fimul
dec
add
(bad)
cmps
pop
xor
xchg
pusha
js
push
mov
cmp
rcl
mov
add
mov
pusha
push
outs
push
push
xor
mov
dec
dec
aas
(bad)
lods
push
and
adc
pusha
jecxz
xlat
push
mov
pop
xchg
retf
pop
aas
fild
dec
fiadd
push
mov
mov
xor
outs
fist
add
scas
iret
or
add
stos
aas
xor
sbb
out
inc
mov
push
ja
pop
pop
dec
add
xchg
xchg
(bad)
dec
addr16
push
pop
push
sub
inc
aaa
push
shl
fistp
add
fistp
aas
outs
aas
addr16
pop
add
(bad)
nop
pop
mov
sar
mov
adc
dec
test
push
add
pop
pop
pop
push
test
adc
mov
or
xlat
push
and
xchg
mov
sar
add
dec
bound
dec
das
movs
pop
pop
lahf
dec
mov
mov
dec
push
test
mul
pop
(bad)
adc
xchg
les
push
ins
inc
jae
adc
add
outs
sub
mov
cwde
loop
mov
nop
popw
xchg
jg
call
shl
(bad)
dec
cmps
lahf
lahf
ficomp
xor
jp
outs
xor
sub
scas
dec
sbb
push
lods
es
inc
test
sub
addr16
inc
daa
(bad)
mov
fisttp
xor
mov
fbld
ins
inc
and
repz
xor
and
cwde
pop
push
fisub
mov
call
mov
retf
add
mov
push
xlat
adc
adc
mov
(bad)
and
addr16
retf
or
bound
(bad)
clc
inc
pop
pop
and
add
movlps
mov
daa
addr16
dec
and
add
scas
jb
sbb
adc
(bad)
sub
xlat
sbb
pop
adc
popa
xchg
or
stos
sub
cmp
sbb
xchg
mov
sti
xchg
shr
stos
xchg
pop
sub
add
movs
fadd
xchg
cmp
ja
xor
arpl
or
sbb
and
(bad)
outs
mov
ja
adc
sbb
mov
mov
stos
inc
add
inc
movs
pusha
stos
div
add
mov
movs
movs
cmp
xchg
xchg
xchg
push
jnp
add
jg
jg
inc
xor
inc
outs
sub
aam
pusha
xor
leave
mov
and
sub
imul
adc
das
ja
add
sbb
adc
neg
xchg
outs
pop
push
jbe
adc
adc
loopne
cs
iret
imul
mov
push
mov
xor
inc
xchg
imul
xchg
mov
add
mov
sbb
xchg
pusha
mov
sub
mov
push
scas
aaa
ret
sub
cs
sub
inc
out
xor
test
or
inc
inc
bound
pop
pop
idiv
div
adc
xchg
jecxz
(bad)
sbb
push
fnstenv
xchg
es
rcl
cmp
dec
pop
xor
dec
movs
lea
xor
out
xlat
pop
int3
inc
mov
mov
inc
into
xchg
pusha
addr16
inc
add
jg
sub
xchg
pop
out
jg
pop
pop
and
pop
inc
data16
and
jle
push
mov
xchg
add
add
dec
loop
jbe
or
dec
cmps
jmp
pop
or
xor
or
push
push
and
inc
dec
dec
popa
inc
ficom
xchg
add
push
push
dec
ror
push
test
add
cmp
mov
cmps
jb
and
mov
inc
xchg
add
xor
push
iret
pop
mov
test
add
inc
(bad)
push
or
cs
inc
mov
nop
or
mov
inc
push
mov
dec
adc
push
mov
xor
test
pop
and
mov
adc
outs
cmps
ror
sub
mov
and
dec
push
aam
push
sub
push
mov
add
sbb
lar
add
jg
sbb
xor
jg
aaa
add
pop
or
mov
adc
rcl
cmp
or
mov
push
(bad)
mov
adc
push
(bad)
pop
and
mov
enter
pop
push
test
mov
mov
dec
aaa
add
and
sbb
push
xlat
pop
mov
push
dec
(bad)
mov
add
pop
stos
and
sub
push
push
test
dec
lods
mov
out
inc
xchg
pusha
stos
iret
dec
jnp
or
test
cmps
out
leave
movs
and
push
and
push
push
push
ss
in
add
dec
dec
push
push
or
pusha
mov
xrstors
adc
push
jbe
or
add
xlat
pop
jnp
pop
add
push
ret
or
add
mov
push
mov
sub
mov
or
xchg
and
pusha
dec
dec
addr16
and
add
out
adc
mov
mov
bound
iret
adc
and
push
sbb
inc
and
and
dec
call
inc
outs
dec
push
add
jg
inc
inc
sbb
push
pop
(bad)
push
push
fst
outs
push
dec
push
push
pop
and
xor
inc
add
pop
mov
and
add
addr16
mov
out
loope
adc
daa
dec
and
mov
sahf
mov
cmps
dec
lahf
or
cmp
or
push
mov
cmps
pop
cmps
add
mov
and
sub
xorps
adc
imul
or
add
sub
adc
addr16
inc
adc
or
mov
push
push
dec
push
push
sbb
or
test
(bad)
(bad)
sub
pushf
loopne
mov
xchg
test
ja
stos
pusha
je
inc
fimul
sbb
fmul
or
arpl
arpl
jle
fcom
dec
jae
pop
inc
cmp
or
adc
cwde
ret
ss
mov
add
and
mov
sub
popa
or
add
(bad)
adc
cmc
xlat
add
leave
loopne
push
aas
bound
push
dec
dec
dec
data16
sub
dec
out
dec
ins
or
pop
pop
stos
mov
mov
outs
(bad)
push
inc
mov
cmp
and
and
mov
or
retf
inc
add
pop
dec
inc
and
push
cwde
push
out
ins
adc
and
pop
pop
or
pop
push
cmps
pusha
and
sub
adc
out
and
cmp
push
pop
inc
outs
jp
mov
aas
inc
mov
mov
xchg
outs
pop
ds
sbb
sbb
popa
mov
inc
iret
jae
or
xchg
daa
dec
dec
inc
push
inc
(bad)
das
xchg
sub
push
outs
sub
pop
sub
ins
or
push
outs
(bad)
imul
dec
or
outs
inc
and
add
dec
adc
cwde
rcl
sub
push
outs
inc
or
sbb
mov
jmp
rcl
inc
xchg
stos
inc
mov
add
iret
adc
dec
pop
ror
mov
pop
mov
stos
lods
sbb
adc
mov
xchg
dec
or
or
push
add
(bad)
pop
bound
inc
sub
adc
dec
push
lods
xlat
ja
jno
rcr
sub
and
mov
add
dec
mov
outs
mov
sbb
xor
add
xchg
outs
stos
push
sbb
out
push
fisubr
nop
addr16
xor
sub
mov
or
pop
neg
xchg
cmp
xchg
add
pop
adc
cmps
cmps
push
sub
and
inc
xor
pop
xchg
mov
sub
xor
jmp
retf
inc
scas
pop
mov
jmp
pop
lahf
mov
jbe
pop
mov
pop
addr16
push
inc
or
outs
and
rcl
outs
add
mov
outs
outs
jne
xchg
push
cmps
sar
out
dec
data16
and
outs
dec
rcl
pop
adc
scas
mov
stos
mov
call
adc
ja
ja
sbb
mov
scas
adc
xchg
ins
jg
out
push
adc
fimul
sub
pop
outs
fistp
outs
movs
and
mov
xchg
jnp
xor
sub
pop
ja
mov
inc
ret
push
mov
push
movs
movs
xor
outs
adc
adc
inc
out
adc
cs
add
jbe
adc
and
xchg
and
mov
inc
aas
test
xchg
xchg
push
ins
jo
jg
movs
rcl
jnp
jg
jno
(bad)
fbstp
(bad)
sbb
xor
cmp
mov
and
inc
inc
into
lods
les
pop
xchg
fbld
retf
mov
inc
es
dec
sub
inc
bound
xor
push
adc
imul
pusha
pop
push
dec
dec
inc
repz
xchg
iret
xchg
or
loope
scas
jmp
inc
das
sbb
jae
imul
loope
or
add
movs
lea
jmp
jg
pop
or
retf
call
cmps
adc
jae
jg
or
aaa
pop
sub
ror
repz
ja
pusha
sub
adc
movs
cmp
or
inc
daa
xchg
inc
sub
dec
or
ja
loopne
popa
daa
mov
mov
push
pop
or
(bad)
adc
rcr
mov
add
(bad)
mov
sub
adc
ins
inc
scas
and
jae
jo
rcl
das
jg
nop
push
and
push
inc
fcomp
repz
pusha
add
aam
push
repz
pusha
jb
and
aaa
and
rcl
or
jmp
pop
sbb
test
xor
xchg
inc
sub
add
outs
mov
sub
add
bound
add
push
daa
pop
mov
pop
nop
push
mov
and
pop
xor
nop
fimul
ror
push
xchg
fidiv
xor
fisttp
xchg
mov
scas
jo
sbb
cmps
or
outs
add
dec
adc
cwde
inc
adc
push
sub
shl
outs
fbld
add
push
xchg
ja
xor
pop
loop
xchg
push
mov
test
sub
out
pop
movs
pop
add
mov
inc
pop
das
dec
sbb
daa
dec
sub
rol
inc
out
outs
add
leave
mov
sbb
gs
cmp
sub
xor
cmps
adc
ja
daa
mov
outs
out
add
and
inc
lods
add
iret
and
aam
pop
sub
loopne
push
mov
sub
retf
pop
jg
adc
jg
or
sbb
inc
sub
ja
or
or
iret
lahf
mov
push
addr16
mov
ret
rcl
addr16
inc
sub
sub
push
mov
(bad)
push
pusha
or
arpl
ja
jmp
and
ja
pusha
ret
aas
jg
sub
inc
xchg
pop
or
shl
sub
movs
(bad)
neg
lods
inc
cmps
jg
repz
movs
pop
xchg
int3
pop
cmp
jg
add
pop
adc
mov
mov
mov
arpl
mov
push
sbb
xchg
pop
push
push
aad
push
add
adc
movs
mov
pop
inc
call
push
ror
shl
ja
imul
inc
inc
fisttp
inc
or
pop
(bad)
(bad)
xchg
sbb
ud2
call
dec
jle
dec
aaa
or
mov
into
inc
daa
xor
add
aaa
inc
push
xchg
test
addr16
rcl
inc
mov
jbe
add
or
loopne
pop
push
or
movs
pusha
jecxz
push
daa
pop
sbb
mov
(bad)
pop
xchg
cmp
dec
push
pop
dec
imul
push
push
test
dec
outs
mov
pusha
pop
outs
push
dec
and
test
xchg
rcl
sub
sbb
shl
push
xor
fisttp
mov
imul
ja
test
bound
mov
dec
adc
adc
neg
test
push
iret
adc
mov
js
or
sbb
das
push
and
stos
push
adc
dec
sbb
mov
sahf
lahf
pop
test
push
add
jg
and
xor
inc
aas
test
add
and
jb
cmps
call
dec
dec
aas
xor
(bad)
lahf
(bad)
sub
stos
mov
push
push
(bad)
sbb
popf
nop
neg
adc
inc
ins
dec
xchg
adc
pop
jg
adc
pop
pop
imul
pop
stos
das
stos
inc
push
add
jo
push
pushw
xor
(bad)
or
cs
jg
xor
iret
pop
inc
dec
or
lods
mov
loop
repnz
out
pop
cmps
sub
loopne
cmps
neg
aaa
(bad)
adc
shr
push
iret
daa
inc
test
bound
push
dec
or
xor
mov
rcl
fcomp
loopne
xchg
xchg
xchg
in
in
lock
jb
jbe
or
fs
adc
fs
and
fs
xor
fs
cmp
fs
dec
push
push
fs
pop
pusha
fs
fs
add
nop
xchg
fs
pushf
mov
fs
mov
jb
fs
xchg
fldcw
les
int3
or
xchg
aam
fdiv
xchg
xchg
xchg
retf
and
sub
xchg
xchg
xchg
xchg
xor
cmp
enter
les
enter
test
mov
in
enter
rcr
enter
and
sub
ror
xor
or
fs
pop
pop
pusha
fs
fs
nop
xchg
cwde
inc
fs
mov
fs
mov
pushf
fs
fs
mov
fs
loopne
loope
enter
or
enter
fsub
cmp
and
mov
in
sbb
or
fwait
int
inc
add
lock
sbb
adc
sbb
fs
sub
xor
fwait
shr
xor
fisttp
or
cmp
ss
imul
test
pusha
fs
int3
data16
cld
or
xor
fwait
inc
cmp
xor
fwait
int
xor
call
fs
or
fs
jl
fs
popa
fs
cmp
inc
or
xor
push
push
xor
xor
pop
pop
pusha
xor
xor
push
xor
xor
add
nop
xchg
fidiv
xor
cwde
pushf
ins
lods
pop
mov
out
clc
or
mov
adc
lea
and
and
xor
and
and
cmp
inc
and
and
dec
dec
push
push
and
and
pop
pop
pusha
and
and
push
and
and
add
nop
xchg
and
and
cwde
pushf
mov
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
and
and
cld
add
xor
xor
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
int3
xor
xor
frstor
stc
movs
or
inc
inc
inc
mov
mov
inc
(bad)
enter
inc
inc
inc
aam
fsub
xchg
inc
inc
in
mov
sbb
mov
clc
cld
inc
adc
or
inc
inc
inc
adc
sbb
inc
inc
inc
and
sub
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
dec
dec
inc
xor
or
inc
inc
pop
pusha
xlat
or
inc
ins
jo
js
inc
inc
inc
jl
test
mov
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
inc
inc
inc
int3
rcl
fadd
inc
inc
fsub
in
inc
inc
inc
inc
in
lock
clc
inc
cs
inc
cld
add
add
inc
inc
inc
inc
or
adc
inc
inc
inc
inc
sbb
and
inc
inc
inc
inc
sub
xor
inc
inc
inc
inc
cmp
inc
dec
inc
inc
inc
inc
dec
push
push
pop
inc
inc
inc
inc
pop
pusha
fs
ins
jo
js
inc
inc
inc
jl
test
mov
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
inc
inc
inc
int3
rcl
fsub
cdq
inc
nop
icebp
xchg
or
mov
lock
lea
cld
sbb
mov
or
inc
inc
adc
outs
sbb
sbb
push
stos
push
or
sbb
sbb
je
js
sbb
sbb
add
nop
xchg
cwde
pushf
sbb
sbb
mov
sbb
sbb
sbb
sbb
(bad)
enter
sbb
shl
int
or
imul
sbb
das
mov
or
or
call
or
inc
loopne
nop
(bad)
enter
or
ror
movs
test
pop
jo
xchg
fldcw
js
jl
adc
lods
mov
mov
or
int
in
sbb
or
lea
cmp
xor
je
add
adc
adc
jne
sub
sub
pop
ret
adc
and
adc
dec
xor
push
sbb
sbb
ds
and
ret
fdivr
sbb
sbb
jbe
inc
sbb
push
and
sar
mov
pop
and
sbb
imul
repz
mov
jp
inc
sbb
adc
fwait
sbb
push
and
hlt
ret
nop
push
mov
push
mov
jmp
add
stc
xchg
push
push
mov
mov
xor
push
push
push
fs
aaa
sti
mov
mov
cmp
jl
dec
clc
fucomp
mov
xchg
xchg
xchg
add
mov
adc
jl
push
mov
sbb
rol
xchg
sub
push
mov
add
or
dec
mov
mov
dec
in
add
cmp
in
mov
inc
adc
push
adc
call
in
cs
ror
loopne
imul
cmps
es
adc
bound
dec
leave
fcom
cmp
jae
add
xor
pop
imul
or
retf
ins
adc
mov
pusha
xor
call
imul
mov
scas
cmp
je
inc
movzx
xor
push
jo
jl
push
inc
sub
jne
fsubr
push
loopne
cmp
out
mov
or
aam
adc
mov
cld
dec
aam
aaa
mov
pop
pop
les
push
mov
lods
mov
sbb
(bad)
jmp
fild
in
ret
dec
cmp
xchg
mov
or
push
ss
jmp
into
or
mov
sbb
inc
in
lahf
fidiv
adc
push
mov
jmp
jl
cmp
xor
outs
jo
and
mov
pop
push
mov
mov
daa
adc
pop
push
add
out
inc
mov
mov
inc
add
in
jnp
or
cmp
mov
rcl
jle
add
cli
dec
or
adc
dec
and
sub
cld
pop
or
movs
sahf
sbb
add
into
aaa
or
sahf
cmp
sub
ficomp
or
push
inc
add
lock
dec
enter
mov
mov
mov
mov
jb
sbb
lods
and
add
(bad)
lock
mov
pavgw
std
pushf
push
mov
(bad)
fild
clc
pop
ret
sub
add
push
dec
push
gs
cmp
outs
outs
dec
add
sub
or
ins
jbe
mov
aas
jbe
or
xor
adc
push
stc
dec
push
jbe
or
xor
dec
jo
outs
or
pushf
cmps
push
push
fbld
fdiv
sar
dec
outs
jg
xlat
shl
mov
push
cmps
ins
push
outs
popa
pop
jnp
outs
or
outs
gs
ins
imul
add
adc
jmp
outs
in
arpl
sbb
jns
cmp
adc
jb
push
gs
adc
mov
sti
ins
dec
dec
outs
and
sub
push
int
nop
push
adc
or
outs
inc
cmp
dec
xlat
(bad)
loopne
fild
js
or
mov
sbb
xlat
call
push
dec
nop
addr16
mov
ret
mov
push
add
add
pop
sbb
sbb
cmp
enter
xor
sbb
outs
push
sbb
out
jae
outs
pushf
aaa
dec
clc
sbb
pop
add
es
cmp
out
std
push
push
pop
dec
inc
inc
das
add
push
dec
int3
and
mov
imul
push
mov
xchg
inc
jns
gs
jb
popa
jns
add
push
movs
add
mov
dec
popa
xchg
or
mov
(bad)
inc
popa
ins
int
xor
ins
bound
imul
or
mov
jae
push
jae
cmp
adc
dec
jge
pop
and
push
add
inc
and
ret
xchg
js
push
or
inc
pop
jmp
jb
push
dec
bound
arpl
inc
pop
push
fistp
mov
inc
(bad)
add
inc
push
inc
push
push
(bad)
into
mov
pop
gs
sbb
inc
push
jns
add
adc
or
mov
add
pop
and
or
pop
fimul
dec
pop
sbb
add
mov
push
dec
rcl
cmp
mov
push
into
ja
jb
add
or
xor
loopne
xor
and
mov
jbe
adc
xor
mov
mov
jae
scas
push
push
adc
pushf
outs
ins
gs
outs
sub
pop
push
mov
repz
and
and
adc
mov
adc
sbb
movs
cmp
or
leave
std
ret
sbb
imul
xor
(bad)
or
dec
imul
inc
gs
data16
inc
cmp
pop
and
dec
aas
adc
sbb
mov
jo
pop
cdq
in
imul
or
fbstp
xor
adc
xlat
sbb
sub
dec
loopne
dec
dec
dec
shl
arpl
cmp
inc
mov
scas
sub
pop
cmps
sbb
inc
and
jne
das
jl
push
jne
sbb
shl
add
fwait
jge
and
push
fimul
ficomp
das
call
out
clc
fild
inc
jnp
dec
push
pushf
jge
mov
lahf
out
mov
cmp
fiadd
add
push
xchg
push
ins
pop
aaa
sbb
movs
jnp
pop
leave
fxrstor
adc
out
in
and
add
iret
ror
out
jno
data16
in
je
inc
imul
add
outs
in
(bad)
mov
sub
jns
retf
mov
mov
jb
shr
xor
aas
ss
mov
push
push
loope
jns
adc
add
ds
cs
mov
and
push
stos
shr
leave
xchg
add
sbb
pop
or
sub
inc
imul
mov
imul
sbb
sbb
add
inc
add
ror
push
es
push
js
movs
adc
imul
pop
and
ret
pop
jno
mov
add
lods
int
add
sbb
pop
push
sbb
ret
ins
in
or
push
sbb
mov
or
cmp
inc
jae
lods
sub
pop
sbb
adc
or
nop
or
sbb
aam
xlat
fisubr
push
adc
push
push
dec
jmp
inc
pop
test
outs
sub
pop
fild
scas
mov
push
inc
cmp
cmp
lds
pop
pusha
dec
fimul
icebp
mov
inc
scas
or
(bad)
inc
dec
mov
sti
push
add
and
mov
add
xchg
mov
and
and
ja
and
mov
xchg
stos
and
pop
test
push
mov
sti
test
test
or
jmp
jnp
or
(bad)
mov
dec
jne
ins
inc
(bad)
adc
push
push
movs
scas
or
fsubr
or
add
or
movs
sub
push
push
test
and
sub
or
xchg
js
cmp
or
lock
jne
dec
outs
outs
dec
outs
xor
jno
sub
xchg
in
data16
sub
xor
stc
sbb
es
mov
push
sub
mov
imul
hlt
jp
scas
push
dec
cli
aad
inc
push
cmp
push
mov
(bad)
inc
cmovle
adc
cmp
outs
jo
mov
and
pop
shl
or
daa
pop
pop
test
les
outs
jns
and
int
lods
rol
xchg
cmp
icebp
data16
inc
lock
dec
outs
popa
fs
(bad)
push
les
jg
pop
shl
dec
pop
imul
push
xor
hlt
jo
sbb
push
add
add
js
cmp
pop
lods
btr
popa
stos
xor
addr16
or
and
and
xchg
daa
sub
cdq
or
and
mov
mov
xchg
mov
or
xlat
inc
push
loope
cwde
dec
or
inc
(bad)
add
inc
inc
std
jo
add
mov
sub
pusha
xchg
add
and
and
and
inc
dec
add
inc
repz
or
or
jnp
pop
and
scas
shl
call
pusha
ins
sar
stc
fisttp
jo
into
and
sub
add
add
lock
shr
pop
sub
ss
add
imul
push
add
dec
loopne
xor
push
mov
sub
mov
add
add
push
sbb
dec
push
dec
push
cmp
cmp
in
sub
test
std
pop
sub
jmp
loopne
sub
sub
(bad)
jmp
sub
cli
mov
and
add
inc
mov
popa
ret
(bad)
leave
or
push
add
daa
pop
sub
ins
add
add
cmp
mov
mov
pop
jo
out
fnsave
cwde
cmp
aam
outs
push
add
xchg
xchg
push
out
push
add
inc
inc
jne
push
pop
or
dec
or
push
jae
and
idiv
and
and
sbb
push
mov
pop
mov
in
add
add
dec
movs
mov
js
loopne
pop
mov
inc
jae
retf
push
sub
in
jge
sbb
cs
sub
or
in
jg
mov
jnp
outs
int
aas
add
inc
pop
sub
pop
jnp
or
ja
mov
inc
cmc
fs
lods
add
or
icebp
pushf
stos
add
add
mov
inc
ret
mov
cmp
mov
push
xchg
call
das
or
addr16
fxch
pop
in
push
dec
ins
add
ins
or
data16
or
int
fild
sub
push
sub
int
jnp
xor
adc
add
adc
mov
or
inc
mov
fcom
lahf
call
push
and
mov
pusha
fstp
push
es
jl
ins
jnp
pop
push
mov
push
pop
mov
les
mov
or
retf
into
push
ror
mov
aam
push
adc
push
lods
push
sub
enter
(bad)
ins
mov
xor
jo
or
xchg
daa
xchg
mov
xchg
scas
call
xchg
adc
outs
pop
cwde
push
fdivr
movs
jo
jae
ja
xchg
pop
cs
pushf
cmp
mov
mov
(bad)
lods
push
mov
loopne
out
mov
ror
je
push
mov
fmul
add
and
add
sbb
and
scas
sbb
sbb
or
js
add
xchg
cs
and
lods
pop
movs
pop
test
sub
or
mov
mov
and
js
cmp
xor
pushw
cmps
das
and
jnp
test
inc
adc
rcl
sbb
dec
rcl
add
repz
xor
shl
pop
cmps
jp
dec
popa
jns
ins
outs
in
fsub
in
adc
ficomp
cmc
out
add
sahf
fsub
lds
outs
mov
add
cmove
adc
pop
add
and
bound
dec
xor
inc
push
test
daa
pop
sub
push
mov
pop
mov
push
cmps
ret
mov
jb
icebp
(bad)
and
cdq
sub
or
lea
sub
jb
push
mov
pushf
xchg
out
xor
lock
add
inc
stos
inc
ret
push
outs
pop
pop
rcr
adc
mov
mov
das
mov
ja
inc
xor
dec
ja
cmp
adc
shl
pop
dec
adc
fwait
arpl
mov
inc
dec
adc
mov
jecxz
pop
sbb
adc
out
(bad)
inc
dec
pop
mov
and
inc
push
xchg
xor
sbb
or
jbe
div
test
xor
mov
call
or
inc
mov
repz
xchg
pusha
xlat
jo
fs
and
ja
sar
pop
inc
mov
cmc
in
inc
mov
add
and
push
add
xor
xor
clc
push
fcomp
into
push
xchg
push
mov
adc
inc
push
pop
inc
add
fisubr
imul
out
scas
sahf
add
test
sbb
sahf
add
push
ins
jnp
sti
push
xchg
push
xchg
ins
push
in
push
and
sbb
mov
push
rol
cs
adc
sbb
mov
xor
mov
adc
xor
ins
mov
enter
xchg
imul
outs
jge
shr
jp
movs
ucomiss
imul
push
jmp
sbb
sbb
jne
sub
out
or
test
das
in
jge
jo
push
add
mov
mov
and
jne
outs
ja
pushf
mov
and
cmp
ficomp
sbb
ins
ins
scas
sub
clc
or
pop
cmp
push
push
movs
jg
sub
inc
pop
popa
jb
sbb
retf
cmp
and
xor
adc
mov
in
jmp
mov
cs
gs
push
push
push
jbe
arpl
push
mov
sbb
or
mov
and
sbb
retf
jbe
push
or
je
jl
push
push
push
mov
push
test
fisub
add
inc
dec
add
jae
mov
dec
add
addr16
pop
push
lea
or
sbb
and
int3
sbb
push
xor
sbb
inc
push
pop
pusha
and
addr16
sbb
ja
xor
mul
xor
inc
ins
xchg
mov
mov
shl
scas
pushf
mov
xor
rol
aaa
inc
es
mov
loop
fs
push
add
sbb
aas
add
ror
ins
js
je
test
shl
pop
test
cmp
mov
or
push
movs
or
in
sub
inc
pop
xchg
add
xor
mov
stos
add
push
sbb
sub
add
add
call
add
cmp
mov
ret
stos
mov
adc
out
mov
push
daa
sub
and
push
lock
add
outs
push
out
test
xor
and
xor
out
jo
out
or
out
push
add
or
push
add
mov
add
fwait
add
fbld
das
add
or
fistp
sub
adc
das
call
jae
pop
add
xor
loopne
sub
add
enter
(bad)
push
enter
and
in
cmp
mov
rol
xlat
mov
dec
inc
xor
xor
or
lea
test
cmp
out
dec
inc
xor
and
mov
not
jle
xor
xor
fs
mov
inc
popa
mov
mov
sub
mov
xor
inc
js
in
rcl
cmp
ins
test
xchg
inc
xchg
xchg
outs
mov
xchg
xor
mov
xchg
inc
xchg
and
ss
mov
das
mov
push
addr16
xor
mov
addr16
mov
adc
jo
(bad)
pop
push
test
sub
or
dec
test
mov
sti
push
dec
pop
inc
push
jns
mov
inc
jbe
mov
mov
inc
push
loopne
add
mov
cmp
xchg
inc
jbe
sbb
add
mov
and
sahf
or
dec
add
inc
xchg
rol
sbb
add
or
es
lock
pushf
or
or
inc
popa
outs
inc
fisub
xlat
add
ins
sub
cs
add
mov
js
loopne
jmp
daa
call
pop
inc
dec
jae
jne
fdivr
inc
jnp
and
fwait
sahf
inc
imul
mov
dec
pop
add
retf
jmp
mov
xor
add
push
sar
mov
or
or
jge
pop
add
push
sub
daa
or
push
cmp
xor
scas
or
xor
xor
outs
(bad)
mov
xor
(bad)
std
ret
add
pop
mov
sbb
cmp
mov
adc
clc
aad
mov
jg
xchg
dec
and
sbb
xchg
sbb
cmp
inc
mov
adc
daa
inc
xchg
inc
cdq
fadd
je
inc
push
rcl
inc
or
mov
outs
adc
ins
dec
popa
mov
in
jne
bound
and
jne
enter
inc
inc
add
add
and
daa
call
push
iret
cmp
test
sbb
imul
adc
mov
repz
xor
sbb
or
sti
ss
ret
add
push
jmp
adc
push
xchg
jae
dec
ja
iret
pop
push
es
adc
add
aaa
dec
mov
loope
sbb
add
lds
xchg
int
and
and
(bad)
adc
pop
dec
out
out
movs
add
in
leave
sbb
inc
aam
inc
fisttp
imul
jp
ss
out
loopne
outs
mov
jl
push
cvtps2pd
sbb
pop
cmps
xchg
test
(bad)
sub
inc
sbb
das
sbb
(bad)
lods
sbb
outs
jg
inc
hlt
jne
fs
xor
sbb
imul
popa
jb
out
pop
inc
push
mov
les
or
sbb
inc
xchg
cmp
and
cwde
add
shl
sub
pushf
dec
or
jmp
data16
pop
sub
or
hlt
pop
cmp
sbb
pminub
aas
or
sub
jb
xor
jb
pop
xor
xor
mov
xchg
ja
stos
jo
sbb
mov
inc
dec
shl
or
adc
pop
jb
in
js
pop
(bad)
mov
(bad)
dec
pop
(bad)
adc
or
in
ss
pop
and
pop
adc
out
(bad)
and
or
(bad)
mov
call
push
adc
shr
pop
dec
and
lods
and
push
add
inc
jg
pop
cmp
pop
test
scas
daa
or
jg
inc
dec
gs
fild
cmp
aas
jge
pop
dec
jg
into
in
ss
pop
push
pop
inc
add
dec
cmp
sbb
out
(bad)
adc
or
inc
push
xchg
jbe
or
dec
(bad)
push
pop
xor
add
ss
sbb
xchg
add
dec
loop
push
lods
cmp
cmp
pop
cmp
inc
xor
rol
pushf
ficom
add
dec
ja
xchg
push
push
lock
inc
inc
dec
cmp
cmps
sub
mov
je
addr16
inc
add
jbe
int3
pop
test
scas
addr16
sub
inc
inc
popa
je
inc
push
outs
xchg
jg
xor
ins
cmp
adc
push
into
outs
jg
outs
rcl
mov
pusha
mov
xor
and
add
outs
inc
pop
and
rol
outs
adc
outs
inc
bound
jno
and
or
loopne
fnstsw
leave
push
add
push
mov
xor
push
push
jmp
push
mov
mov
mov
adc
push
inc
mov
mov
cmp
dec
xor
mov
adc
leave
lea
jo
adc
aam
fisttp
mov
mov
mov
or
setg
lea
xor
call
pop
or
and
xchg
cmp
leave
xor
jo
data16
outs
psubw
call
ins
or
loopne
mov
fimul
mov
or
or
in
push
sbb
dec
mov
int3
outs
lea
sub
push
push
adc
test
adc
mov
jle
mov
mov
out
mov
je
(bad)
push
mov
jo
nop
pop
test
lods
popa
in
push
popa
or
sbb
dec
(bad)
mov
lock
pop
pop
in
push
xor
sbb
ins
jl
jmp
cmp
hlt
xchg
push
lock
inc
pop
sbb
mov
gs
lock
mov
push
dec
adc
mov
cld
pop
fadd
mov
pop
pop
pop
mov
pop
ret
(bad)
clc
pop
mov
push
mov
dec
jne
nop
sub
mov
xchg
in
sub
jmp
inc
xchg
clc
push
inc
pop
sub
adc
fsub
push
push
sbb
rcr
shl
call
and
in
(bad)
xor
jb
ds
push
adc
mov
into
loopne
popa
push
jl
adc
xchg
jle
ds
out
icebp
rol
test
dec
and
push
sbb
mov
scas
mov
cmp
(bad)
cmp
sbb
lahf
out
ficomp
inc
call
adc
loope
pushf
idiv
dec
or
cmp
inc
mov
add
aaa
sub
adc
lock
fnsave
sub
fild
pop
loopne
nop
sbb
push
push
adc
xor
rcl
dec
cmp
(bad)
lock
sub
or
or
fsubr
and
mov
xchg
fsub
pop
rcr
mov
scas
movs
jnp
jnp
add
pop
js
jmp
sub
lods
sbb
add
or
ins
xchg
in
push
dec
adc
sbb
xchg
mov
mov
inc
mov
xchg
popf
or
adc
das
test
add
push
adc
ds
push
pusha
iret
mov
es
and
pop
add
mov
movs
inc
pop
dec
je
jo
mov
lahf
popa
stos
in
inc
pop
dec
shl
int
aam
aam
sbb
ror
shl
or
mov
aam
jl
fldenv
mov
out
mov
out
lahf
xchg
xchg
pop
lods
or
cli
sbb
dec
mov
add
sbb
mov
pushf
out
mov
sbb
das
pop
test
(bad)
in
stc
mov
or
adc
push
inc
mov
and
add
dec
or
dec
cmp
adc
enter
loope
mov
inc
add
mov
adc
mov
mov
leave
cmp
sbb
ins
xchg
jo
and
sbb
outs
fcomip
xchg
test
jle
jo
mov
cmp
jge
xor
mov
out
dec
jne
or
mov
(bad)
cmp
sbb
fsubr
loopne
sbb
mov
out
xor
xchg
and
mov
scas
adc
pop
xor
xchg
sbb
push
jl
mov
adc
cmp
mov
jmp
jmp
and
adc
jge
adc
dec
jno
or
loop
add
add
fsub
push
pop
mov
add
and
mov
ins
and
arpl
pop
pop
sbb
out
add
in
leave
das
pusha
mov
or
pop
push
inc
adc
xchg
push
add
adc
mov
adc
nop
lock
pop
pop
pusha
lock
mov
sbb
sti
clc
jmp
test
setne
and
jmp
mov
xchg
sbb
repz
pop
pop
jmp
push
mov
xor
pushf
(bad)
div
rol
leave
loope
sbb
dec
pop
xor
dec
retf
enter
add
jmp
rcr
jmp
jns
jo
cmp
lock
fimul
sub
mov
or
clc
or
xchg
jo
push
dec
shr
and
in
or
xor
mov
push
out
icebp
sbb
jl
sub
push
ds
pop
(bad)
ja
dec
es
mov
aaa
and
sahf
add
cmp
inc
add
adc
mov
or
pop
lods
add
scas
mov
jle
xchg
stos
sahf
cmp
je
test
jnp
adc
cmps
pop
int
xchg
xchg
adc
cmp
loopne
mov
test
add
jmp
mov
inc
push
mov
test
aaa
add
or
pop
cmc
sar
and
and
mov
jmp
shl
add
prefetch
or
pop
pop
dec
mov
jmp
xor
mov
movs
fist
adc
(bad)
push
push
call
stos
ficom
sub
call
mov
je
loope
repnz
cmp
inc
mov
pop
mov
cmp
fs
lods
adc
push
pop
mov
in
aas
scas
add
mov
retw
xchg
outs
adc
ret
mov
aas
imul
mov
mov
pop
lds
cld
or
mov
inc
xchg
lock
sar
inc
mov
loopne
adc
push
mov
add
(bad)
inc
sbb
les
cmp
jne
or
out
cmp
clc
mov
pop
out
add
sbb
out
cmp
adc
mov
sbb
add
inc
jmp
(bad)
mov
fidivr
dec
cmp
scas
inc
add
add
adc
fisttp
pop
dec
mov
or
push
test
push
xor
jbe
cmc
dec
mov
xchg
pop
out
pop
std
test
cmps
loopne
mov
pop
hlt
push
hlt
fst
imul
and
leave
and
popf
mul
xchg
idiv
ins
cmp
leave
mov
xor
(bad)
and
inc
pop
pop
add
sub
dec
or
jl
sub
cmp
inc
popa
icebp
daa
jecxz
(bad)
jge
sub
mov
jp
xor
add
ss
ins
gs
imul
jl
add
and
and
mov
imul
ret
loope
aam
je
push
cmp
sbb
stos
push
out
mov
mov
xor
xchg
arpl
cmp
mov
nop
xlat
pop
push
sub
bound
popa
or
xor
pop
mov
pop
es
hlt
(bad)
stc
in
jmp
mov
push
and
das
jg
sar
xor
(bad)
push
jecxz
popf
or
pusha
and
(bad)
pusha
scas
pop
sahf
lock
out
xchg
dec
dec
je
add
jmp
mov
or
inc
jo
dec
ins
push
pop
mov
inc
mov
mov
push
pop
push
mov
shl
mov
or
in
mov
xlat
aaa
popa
jbe
inc
dec
mov
mov
and
and
adc
lds
out
bound
loope
adc
ds
lods
scas
mov
xchg
pop
mov
mov
mov
loopne
dec
ins
xchg
pop
push
dec
jne
and
pop
daa
adc
xchg
inc
pop
ret
pusha
mov
aaa
sub
adc
sub
sub
adc
test
pop
adc
cld
sub
xor
mov
mov
sbb
inc
inc
test
push
arpl
call
jmp
pop
pop
je
push
inc
aad
dec
ins
xchg
clc
jo
lea
rcl
add
fiadd
lock
sub
cmps
mov
rcl
xchg
mov
or
lock
aaa
pop
add
in
or
or
mov
pop
sbb
mov
mov
mov
or
scas
pop
adc
(bad)
xor
jecxz
cmp
push
ficom
(bad)
fs
xchg
or
xor
xchg
fbstp
mov
sbb
mov
mov
aaa
jl
rcl
cmps
and
jle
hlt
repz
rcr
loop
cdq
dec
add
push
push
push
mov
add
jmp
ret
cmp
lods
mov
adc
test
mov
inc
inc
outs
mov
clc
mov
data16
or
fisubr
inc
xchg
jmp
adc
hlt
pop
cmp
ds
mov
out
rol
inc
add
je
fmul
loopne
or
sbb
ss
and
out
inc
sub
bound
fisttp
lock
ret
shr
mov
or
jne
popa
inc
jo
jg
fdivr
inc
push
mov
pop
nop
frstor
inc
jmp
movs
std
clc
ret
push
mov
inc
push
and
and
in
mov
jge
lods
addr16
or
fisubr
mov
fild
push
jl
xchg
mov
lods
dec
ficomp
jnp
mov
or
and
rol
aas
ret
sbb
frstor
push
fs
add
jle
dec
dec
fwait
and
hlt
xchg
inc
daa
fsub
jo
add
out
movzx
push
das
inc
(bad)
mov
xlat
test
into
call
fcom
nop
pushf
mov
dec
and
and
neg
cmps
pop
jle
mov
inc
in
mov
mov
aaa
adc
sbb
inc
enter
mov
repz
add
cmc
iret
lock
sbb
sbb
lock
pop
pusha
iret
enter
cmps
(bad)
lock
outs
push
sub
or
clc
add
mov
push
add
inc
adc
sub
dec
fs
das
add
pop
imul
mov
add
mov
and
cmp
ja
iret
repz
jb
mov
xchg
mov
in
cmp
movs
adc
adc
cdq
fs
dec
aam
fdivr
cmp
mov
xchg
add
mov
mov
fisttp
add
mov
je
imul
adc
mov
pop
push
and
push
bnd
sti
add
pop
and
dec
sbb
cmp
add
test
idiv
out
outs
sbb
je
and
mov
push
mov
rcr
fmul
xchg
pusha
loopne
ja
repnz
mulps
lea
mov
inc
xchg
ins
lahf
mov
adc
push
mov
sbb
push
repnz
cmps
mov
push
adc
pop
pop
adc
inc
adc
push
in
mov
jns
sbb
mov
mov
push
(bad)
jg
push
and
je
shl
stc
cmc
pusha
pop
push
and
add
imul
pop
fstp
sub
call
mov
or
add
out
xor
mov
enter
retf
sbb
sar
jle
cdq
jo
pop
ret
mov
and
pusha
mov
fst
mov
xor
shl
ret
sub
or
mov
sub
sub
inc
sub
inc
sbb
data16
cmp
or
xor
lea
sub
retf
xchg
shl
mov
out
inc
mov
es
jne
adc
dec
pop
pop
jne
jb
add
adc
push
adc
stos
sbb
lods
or
push
push
sbb
ret
pop
sbb
ds
add
xchg
xor
push
in
rol
fistp
test
mov
add
sbb
retf
cwde
test
push
out
jecxz
lahf
xor
and
jb
movs
fsubr
pop
sbb
repnz
sub
loopne
mov
cmp
push
cld
mov
dec
retf
add
push
outs
mov
mov
mov
sbb
or
sub
dec
and
pop
pop
ret
mov
jbe
sub
mov
cmp
data16
not
dec
adc
or
push
retf
pop
mov
add
into
xchg
ret
rcr
mov
xor
ret
jl
or
rcr
add
xor
pop
or
pop
push
nop
push
out
(bad)
dec
enter
mov
aas
pop
dec
test
lods
rcl
jnp
cwde
cmp
adc
ja
mov
inc
xchg
sub
mov
push
nop
xor
push
mov
cmp
jg
icebp
sbb
inc
push
add
push
push
inc
push
or
fsubr
inc
cmc
jns
sbb
adc
outs
mov
inc
sub
nop
xlat
add
push
nop
xchg
inc
adc
add
lds
dec
add
cmp
sub
sub
test
pop
mov
out
add
mov
fnstenv
inc
jno
inc
and
pop
dec
fcom
dec
cmp
mov
pop
cmp
rol
mov
or
xchg
shl
inc
lahf
clc
mov
jo
sti
sub
mov
sbb
pop
and
jo
mov
and
jae
sti
adc
xor
add
cmp
adc
retf
inc
movs
scas
(bad)
mov
adc
and
add
mov
mov
pop
lock
dec
and
cmp
sub
fsubr
(bad)
sbb
cmp
sbb
or
pop
sub
sbb
popa
jo
push
rol
xor
and
dec
cmps
and
push
jb
lods
mov
xor
test
sar
sbb
js
shl
mov
adc
loope
rol
xchg
es
dec
cld
cmps
add
pop
hlt
fcomp
pop
nop
es
jmp
lea
mov
aas
adc
cs
mov
loopne
mov
leave
mov
(bad)
mov
test
sbb
retf
cmp
mov
pop
inc
jbe
pop
mul
mov
sbb
call
cmp
sbb
call
sbb
xor
mov
inc
fcomp
push
cmp
dec
push
inc
pop
sub
dec
or
xor
fld
sub
adc
loop
inc
es
sub
les
dec
iret
dec
and
pop
dec
lea
sub
cmp
sbb
inc
dec
sub
icebp
sbb
daa
dec
xor
dec
and
xlat
dec
bound
sbb
sbb
or
bound
pop
jl
lock
dec
scas
iret
sub
call
mov
aaa
inc
outs
xor
xor
cmp
adc
aaa
push
mov
inc
outs
nop
inc
mov
cmp
outs
stc
outs
mov
neg
outs
loope
cmp
xlat
scas
add
cmp
lds
cmps
aas
test
dec
xlat
aam
das
push
test
jg
mov
sbb
inc
out
sub
sub
cmp
adc
push
xlat
cli
rol
clc
jo
jmp
sub
mov
jbe
pop
jge
pop
pop
cmp
pop
cmp
daa
mov
jbe
inc
mov
push
imul
xchg
out
nop
fadd
fwait
sub
jo
adc
add
dec
cmp
into
jmp
and
sti
xchg
xor
add
cli
mov
mov
xor
stos
daa
xor
xchg
sar
push
fsub
int3
imul
and
aad
jbe
retf
adc
iret
mov
out
add
sub
and
ret
xchg
cli
dec
daa
retf
push
inc
mov
inc
jne
test
pop
sub
adc
(bad)
xchg
xchg
add
push
nop
pop
mov
ror
or
jne
dec
cmp
and
sub
inc
sbb
inc
jne
movs
lds
xchg
and
sbb
in
and
mov
cmp
xor
popf
xor
movs
or
xor
(bad)
icebp
fs
adc
jmp
push
add
loope
dec
mov
int
jnp
mov
mov
adc
add
add
jmp
push
mov
pop
das
mov
mov
push
clc
mov
xor
hlt
inc
or
test
or
xchg
xchg
not
add
add
es
ret
and
popf
adc
adc
pushf
and
or
inc
xor
scas
scas
sbb
mov
fcom
je
enter
in
jne
push
jne
sbb
xor
jne
in
movs
fwait
sub
jne
sbb
shl
std
pop
or
je
push
sbb
adc
(bad)
and
sub
push
jnp
jl
and
and
jne
in
test
push
hlt
mov
rol
sbb
push
or
outs
sbb
mov
fdiv
push
push
sbb
in
mov
sbb
in
inc
inc
push
adc
call
dec
jl
sbb
push
push
and
mov
test
push
hlt
jp
and
data16
or
push
(bad)
cmps
loope
sbb
and
clc
mov
jg
loopne
in
call
inc
int3
icebp
jne
ss
mov
cmp
sbb
dec
sub
inc
sbb
imul
inc
xor
sbb
xor
nop
fst
sbb
sahf
and
cmp
(bad)
idiv
mov
aam
jmp
(bad)
jno
pop
aad
sbb
retf
ror
aam
inc
push
cmp
dec
cmp
popa
dec
push
or
sub
xor
inc
push
push
push
inc
dec
inc
push
dec
and
add
shl
test
je
mov
mov
push
test
je
or
adc
add
push
push
push
mov
adc
or
add
pop
icebp
iret
stos
fiadd
add
jle
jp
cli
and
add
sbb
add
popf
push
add
ja
mov
lock
loop
out
sti
aaa
jge
adc
mov
push
jne
pop
adc
adc
sub
pop
cld
cmp
mov
dec
pop
ja
or
fsub
loopne
pop
or
xchg
xchg
(bad)
ja
sub
pop
or
mov
mov
mov
out
sub
movhps
scas
mov
jmp
mov
adc
ret
cmp
adc
jns
or
adc
ror
push
loopne
jae
pop
pop
pop
stos
inc
and
push
aas
(bad)
(bad)
sbb
rol
aas
pop
rol
aas
xchg
aas
xor
js
adc
jno
shr
jmp
fs
jo
sub
inc
adc
out
inc
jo
fcomi
jo
add
pushf
or
iret
nop
enter
int3
iret
scas
dec
stos
icebp
mov
dec
or
or
loopne
aaa
enter
xchg
inc
push
pushf
adc
inc
push
rcr
add
loopne
sbb
pop
dec
push
lock
lahf
push
js
or
aaa
retf
in
pusha
fild
adc
loopne
sub
push
pusha
lahf
scas
inc
call
add
add
and
inc
(bad)
jp
stos
or
push
sbb
push
mov
scas
rol
adc
push
or
adc
push
shl
hlt
cmp
and
lock
push
pop
sbb
xchg
push
jno
adc
pop
push
mov
add
int
ret
jle
cli
sahf
push
icebp
jmp
ja
xchg
lods
jo
out
cmps
ret
mov
pop
sbb
mov
or
ror
or
or
(bad)
mov
stc
cld
add
fistp
xor
cmp
and
clc
jl
sub
xchg
add
jmp
in
jae
jb
dec
sbb
pop
xchg
pop
or
sbb
adc
fnstcw
and
adc
clc
inc
lock
mov
mov
dec
js
mov
dec
xor
xchg
jae
pop
in
in
nop
dec
imul
daa
xchg
cmp
addr16
ins
test
xchg
dec
push
cwde
fdiv
das
adc
mov
call
repz
mov
ins
ss
loopne
sub
cmp
aaa
xor
inc
fmul
add
repnz
fsubr
inc
ins
fadd
and
fsubr
sub
mov
jl
call
push
outs
sub
pushf
ins
cmps
cld
test
or
mov
adc
bound
dec
add
sbb
push
inc
add
inc
mov
or
add
xor
add
popa
add
adc
push
push
ins
cmp
daa
pop
idiv
fs
jae
hlt
jp
je
outs
adc
sub
add
mov
push
bound
sbb
add
cmp
jbe
pop
iret
inc
and
mov
cli
and
sub
cmp
jp
sbb
or
mov
jge
bound
add
and
add
cwde
jmp
adc
sub
add
dec
dec
mov
cwde
out
add
or
add
add
loope
scas
lock
add
test
call
inc
enter
test
jle
ret
jmp
push
call
cmp
je
or
je
push
adc
sub
cmps
bound
adc
xchg
dec
clc
xor
aad
mov
hlt
aam
lea
mov
mov
loope
sti
(bad)
ror
pop
hlt
add
sub
cmp
jl
jmp
xlat
ret
cwde
std
push
sub
mov
add
loop
mov
pop
enter
mov
daa
jne
and
je
je
je
lea
out
mov
and
or
inc
cdq
mov
add
pop
and
dec
xchg
or
adc
lahf
jp
xchg
xor
jne
jl
ret
or
jp
and
movs
lea
mov
dec
std
xchg
xor
add
inc
in
retf
sub
push
cmps
push
shr
xor
dec
gs
push
push
mov
sbb
sub
mov
add
(bad)
sub
pop
(bad)
mov
mov
mov
and
add
fcomip
ja
movs
or
jns
out
enter
or
loop
pop
bound
fbstp
loop
dec
mov
cld
call
fisttp
test
sbb
mov
mov
test
lds
xor
lea
jmp
add
mov
mov
inc
test
push
lods
jo
test
or
xor
dec
jne
push
out
mov
hlt
jnp
xchg
es
pop
out
mov
jno
ja
cs
out
add
mov
xor
sbb
sbb
out
pop
or
inc
jb
adc
mov
pop
out
neg
sahf
out
dec
xor
push
lea
sbb
sub
xor
cmp
je
jb
pushf
bound
dec
and
imul
lock
outs
inc
jbe
push
cmp
jmp
sbb
sbb
shl
ja
push
jmp
enter
sbb
(bad)
and
jl
ficom
ret
dec
jl
ja
cmp
mov
ja
and
sbb
ja
mov
aaa
xchg
cmp
ja
xchg
mov
or
enter
and
mov
mov
mov
sbb
(bad)
out
ret
aaa
xchg
cmp
ja
shl
jbe
xchg
inc
or
add
pop
sub
fisub
xchg
xchg
in
hlt
add
cmp
mov
push
xor
adc
add
fsin
xlat
inc
femms
xchg
rcl
xchg
shl
cs
and
lock
loopne
hlt
inc
inc
push
jo
inc
popf
mov
sbb
and
inc
fdivr
push
les
test
outs
ins
imul
or
lods
scas
les
mov
sbb
inc
or
dec
adc
cmp
iret
jo
push
and
and
fiadd
or
sub
scas
in
cmp
movs
ins
dec
lahf
lea
pop
mov
adc
adc
sbb
cdq
jae
xor
xor
cs
jae
xor
adc
push
xor
sbb
into
jl
adc
sub
or
lea
jo
jl
cmp
sar
xor
in
loope
xchg
dec
ret
ja
cmp
(bad)
mov
test
dec
or
sub
lea
pop
pop
sbb
repz
mov
xchg
mov
dec
mov
mov
into
push
xchg
inc
push
nop
outs
(bad)
and
push
lds
into
outs
and
sub
adc
xor
hlt
mov
(bad)
call
sbb
call
mov
call
cmp
ins
xchg
mov
xor
mov
mov
fistp
mul
in
sbb
ja
add
dec
rcr
enter
jae
jns
in
jne
fistp
adc
inc
daa
adc
cmp
cmps
cwde
sub
neg
es
out
je
imul
mov
leave
inc
ins
dec
shl
push
test
adc
jne
push
dec
mov
les
pusha
test
cwde
push
fidivr
inc
test
int3
jb
ja
shl
int
ja
add
test
arpl
in
adc
ret
xchg
adc
mov
sti
call
test
sti
clc
cmp
sbb
rcr
pop
and
push
mov
jne
cmp
inc
fiadd
jmp
nop
xchg
xchg
rol
in
jne
xchg
jmp
sbb
es
xor
and
hlt
sub
stos
or
jl
mov
adc
jmp
mov
sub
inc
fwait
push
xor
sbb
loopne
xlat
jle
adc
adc
or
clc
xchg
dec
push
jns
(bad)
and
sub
pop
clc
jge
xor
fsubr
fwait
jp
add
push
outs
adc
fst
inc
shl
faddp
inc
push
inc
dec
adc
xchg
push
sbb
hlt
xchg
clc
adc
movs
and
movs
adc
ror
adc
js
aam
sti
push
nop
jmp
xchg
shl
mov
lods
mov
bound
jg
outs
mov
jno
pop
je
push
sub
lods
dec
test
mulps
rol
mov
test
xor
pop
rcl
(bad)
ja
ret
sub
ror
add
cdq
cmp
xlat
mov
fst
call
mov
test
dec
pushf
jge
mov
lahf
out
mov
cmp
jo
repz
outs
adc
xor
xchg
or
push
dec
add
add
jns
iret
add
add
inc
and
cmp
(bad)
sti
outs
cwde
fiadd
push
dec
fs
popa
jae
es
push
inc
jb
popa
je
sbb
inc
jg
add
gs
jmp
dec
jae
jbe
in
popf
mov
bound
inc
push
gs
out
ja
jo
push
mov
jb
outs
addr16
xor
pop
add
test
add
fild
ss
sbb
fs
or
inc
inc
gs
inc
outs
arpl
out
popf
fnstenv
inc
sub
add
into
jle
cmovno
gs
xchg
mov
push
mov
lds
or
sbb
jae
cmp
sbb
int3
in
pusha
add
inc
or
inc
mov
or
push
aas
lea
cwde
or
inc
add
xor
or
sub
test
and
add
dec
sbb
xor
pop
sbb
adc
and
add
repz
adc
push
outs
jae
loope
mov
imul
and
(bad)
shr
fld
cdq
and
cmp
push
and
mov
fidiv
add
pop
test
xlat
jmp
test
popf
in
rol
mov
or
out
dec
and
add
stos
iret
cmc
syscall
sub
test
jmp
sbb
push
mov
push
outs
pop
or
imul
sbb
sbb
das
test
loope
outs
ret
add
pop
les
retf
or
das
cmp
pusha
mov
add
pop
lock
xor
imul
or
addr16
inc
xor
or
sub
add
les
inc
xor
rcl
mov
xor
clc
jp
js
or
xor
in
in
ins
pop
daa
or
sbb
in
xor
(bad)
(bad)
stos
xchg
(bad)
iret
cmp
ja
mov
jb
stc
sbb
rcr
or
or
add
fnsave
pop
scas
nop
je
(bad)
jo
lods
jno
inc
(bad)
pop
cld
les
not
pop
jmp
repz
fdivr
inc
enter
pop
rcr
jecxz
neg
fisttp
xor
addr16
imul
push
pop
push
iret
jmp
push
mov
or
enter
push
test
loope
inc
mov
mov
and
aaa
daa
out
pusha
pop
aaa
fwait
dec
shl
pop
inc
cs
inc
pop
test
mov
call
call
add
jge
jb
jmp
jl
push
ret
fwait
test
adc
add
or
and
sub
sbb
pop
pop
test
pop
hlt
call
jae
je
mov
push
jge
sub
inc
shl
pop
mov
add
or
pushf
popf
mov
mov
pushf
ss
clc
(bad)
sbb
inc
jl
adc
cld
outs
pop
ret
sbb
loopne
add
or
xor
icebp
sbb
enter
mov
sub
add
dec
cmp
add
out
xchg
in
jge
mov
stos
je
dec
dec
fild
or
movs
push
adc
fnstcw
adc
test
push
scas
mov
sahf
add
js
cdq
and
push
cld
and
aad
in
push
or
and
or
xor
sub
dec
push
pusha
mov
int3
lock
cmp
mov
ret
ds
jae
adc
cmp
rol
mov
and
xchg
or
in
scas
push
jge
or
adc
push
mov
shl
popa
sti
arpl
mov
mov
daa
es
jmp
jge
sub
dec
mov
xchg
aam
adc
xor
clc
add
or
jo
dec
xor
outs
outs
addr16
outs
jb
push
arpl
add
push
loopne
clc
push
clc
sbb
out
sbb
add
movs
scas
and
je
fsubr
jns
ss
das
pop
push
add
or
int3
push
mov
mov
and
or
pop
adc
loop
xor
and
inc
inc
inc
jne
data16
add
call
or
dec
gs
popa
addr16
imul
pusha
jo
outs
pop
cmp
imul
cmp
cmp
movs
mov
fstp
sub
inc
das
pop
push
sbb
jle
out
push
or
xchg
lods
data16
idiv
je
stos
nop
es
inc
out
add
jl
mov
inc
stos
je
aaa
jb
loope
jno
sbb
and
adc
stos
jo
xor
enter
add
pop
sti
inc
(bad)
push
or
sysret
loope
jo
xor
mov
cmps
mov
into
in
ss
mov
xchg
mov
adc
push
call
mov
lods
cmps
lods
mov
jae
imul
add
daa
mov
aad
daa
rol
ficom
mov
or
or
or
add
sbb
loopne
test
push
and
or
sar
push
cmps
push
sbb
ins
jl
aam
add
or
or
rol
test
js
pusha
pop
jmp
(bad)
add
rol
push
sar
push
add
mov
add
fs
aas
in
mov
dec
push
adc
shl
add
add
add
or
into
or
das
fsubr
loope
xor
xor
and
add
lock
xor
add
xchg
add
mov
mov
add
push
fmul
ret
cmp
lds
mov
add
pop
xor
aam
ret
and
(bad)
xor
test
mov
xor
in
ret
add
xor
adc
add
adc
dec
fwait
sbb
shl
jne
dec
mov
and
or
test
add
int3
nop
ror
(bad)
and
inc
or
mov
dec
add
data16
or
or
int3
pop
dec
or
into
jo
data16
xchg
inc
dec
js
jo
inc
dec
or
fidiv
xchg
test
fdiv
or
push
pop
add
in
sbb
add
xor
cmp
push
pop
shl
add
xchg
inc
in
and
cmp
xor
in
iret
sbb
inc
enter
enter
dec
adc
sbb
inc
xor
inc
enter
sbb
jb
sbb
sub
cs
call
mov
push
pop
setl
mov
pop
lahf
cmps
and
or
mov
mov
push
sahf
or
cmp
movs
mov
jmp
mov
push
push
inc
cmp
fs
test
add
repnz
cdq
sub
push
icebp
dec
or
hlt
sbb
jae
xchg
fcom
sbb
imul
(bad)
mov
lods
add
add
cmp
jle
adc
(bad)
sti
aas
jg
mov
fistp
add
sti
inc
jne
mov
sbb
in
jmp
mov
add
xchg
in
and
ins
adc
shrd
shr
xor
ins
aad
pop
add
ror
fsubr
imul
lds
cs
shl
xchg
imul
adc
sbb
mov
sbb
aaa
push
mov
inc
cmps
nop
out
inc
pop
loop
xor
push
sbb
mov
rcr
jne
inc
mov
ja
fsub
outs
fs
outs
push
lea
mov
js
sbb
mov
xor
sub
cmp
or
push
outs
add
enter
push
cmc
cmp
nop
adc
add
mov
fld
push
(bad)
div
fcmovb
neg
cwde
mul
cmp
lods
pop
mov
mul
mov
adc
sub
test
lods
pop
mov
xor
div
mov
ficom
mov
cmp
mov
test
imul
shl
cmp
mul
add
cmp
adc
cmp
imul
loopne
pop
imul
jb
and
sar
xor
jbe
cwde
aam
lds
adc
push
push
in
popa
test
div
(bad)
in
in
popa
lds
mov
mul
mov
lock
hlt
mul
in
imul
(bad)
neg
div
cmp
jo
outs
xor
push
cmp
push
popa
inc
ret
out
sub
arpl
or
or
div
test
bound
test
bound
and
sbb
shl
out
and
xor
and
ret
jbe
(bad)
out
sub
div
pop
mov
out
xor
xor
and
and
cmp
xchg
inc
out
das
div
sbb
not
or
jmp
dec
cmp
sar
test
out
mov
cmp
mov
jo
neg
movs
test
push
cmp
push
in
popa
(bad)
pop
imul
arpl
and
mul
mov
push
in
movs
ins
not
in
arpl
push
vandps
arpl
mov
imul
inc
pushf
pop
lahf
dec
rcr
and
push
ret
out
bound
push
add
add
or
(bad)
clc
jmp
sar
add
jle
aaa
loop
sub
into
dec
mov
or
cld
mov
out
add
aas
push
lea
mov
int3
jo
loopne
adc
mov
es
push
test
lock
xchg
add
mov
xchg
pop
push
pop
and
or
les
xchg
cmps
loop
cmp
movs
movs
adc
movzx
ins
push
pop
mov
nop
push
push
add
retf
std
not
jmp
shl
and
inc
add
enter
or
mov
pop
mov
xor
in
add
add
sti
and
or
shr
or
dec
or
jnp
mov
add
add
ret
xor
sub
and
or
push
mov
pop
imul
mov
fmul
jo
push
sbb
icebp
mov
push
add
shl
popf
movs
cmps
adc
aam
mov
std
ss
test
add
jbe
ins
fist
arpl
push
add
ins
push
or
lock
lods
and
pop
js
dec
clc
add
xchg
pop
add
lds
cs
mov
(bad)
cs
(bad)
inc
jo
das
ins
popf
hlt
adc
sbb
test
add
fsub
xchg
dec
xchg
add
lods
ss
adc
test
bound
mov
lea
pop
cld
cmp
rcl
mov
jge
ja
cmps
test
jle
lea
cmp
retf
or
jecxz
push
jge
rol
pusha
adc
inc
adc
shr
push
jne
loopne
mov
scas
add
test
mov
push
push
sbb
push
imul
imul
xor
mov
and
jge
inc
rcr
sbb
popf
adc
mov
or
adc
adc
popa
cmp
adc
add
pop
dec
adc
adc
shr
push
sbb
sub
mov
enter
jg
call
mov
outs
and
pushf
mov
add
sbb
inc
clc
xchg
dec
(bad)
fdivr
mov
rol
vpmacsww
xor
pavgb
fistp
mov
pusha
push
ret
and
sbb
shr
ret
and
xor
jmp
les
push
add
lods
les
adc
pop
push
pushf
sbb
push
pop
lock
xchg
push
pop
int3
loopne
xchg
or
arpl
cmp
inc
enter
mov
hlt
les
or
mov
jb
push
aam
scas
in
rol
sbb
inc
nop
fistp
cmp
test
inc
or
mov
mov
mov
inc
in
inc
or
test
adc
or
sub
in
scas
data16
and
fmul
jecxz
dec
push
xchg
inc
sbb
in
fild
sbb
adc
adc
rcr
and
adc
sbb
sbb
sbb
inc
push
jo
mov
push
imul
mov
adc
inc
sbb
nop
sbb
hlt
push
jb
lock
ret
push
cld
pop
pop
mov
sub
mov
hlt
cli
mov
mov
dec
and
cwde
dec
jnp
pop
push
push
shl
push
mov
mov
stc
xchg
jo
add
adc
cmp
ret
mov
call
pop
lods
mov
xchg
pop
cmps
mov
call
cwde
and
xor
push
dec
jne
xchg
jo
push
ficomp
push
ror
call
dec
mov
out
es
mov
xor
test
sub
pusha
pop
test
pop
mov
movs
and
adc
add
sub
lods
sbb
adc
call
or
sbb
adc
lods
jns
cmps
xor
sub
xor
ficomp
pop
push
push
sub
ret
mov
sbb
loop
loop
mul
sbb
push
cmp
sar
cmp
add
adc
push
pop
inc
mul
jg
sbb
retf
call
cwde
cmp
daa
in
dec
jae
cmp
cmp
sub
xchg
cmp
sub
cmp
rcr
and
xor
push
cmp
add
and
cmp
and
lods
push
or
cdq
nop
call
push
push
cld
mov
push
sbb
mov
xchg
inc
xlat
sbb
ss
arpl
cwde
pop
push
test
adc
mov
or
push
test
shl
outs
scas
push
jb
les
loop
and
push
(bad)
or
lods
(bad)
push
fs
dec
pushw
xchg
add
rol
push
mov
(bad)
rcl
push
fadd
lock
es
pop
cwde
je
fmul
adc
and
push
add
jp
xor
pop
(bad)
push
add
inc
dec
push
dec
dec
dec
outs
outs
sub
jmp
(bad)
inc
dec
outs
jae
and
inc
inc
outs
ins
popa
imul
xchg
inc
push
jae
xor
push
call
push
add
lock
bound
add
or
jo
fistp
je
outs
je
arpl
outs
outs
es
xor
or
and
dec
dec
xor
inc
pop
mov
add
sub
mov
add
dec
gs
ins
imul
and
inc
(bad)
or
movs
mov
rol
add
or
pop
test
adc
xor
aad
pop
(bad)
dec
adc
or
and
jl
sub
pusha
into
loopne
jle
inc
dec
nop
lock
sbb
nop
es
inc
(bad)
and
mov
and
adc
sbb
pop
pop
dec
daa
or
cmp
loope
add
sbb
call
xor
cmp
jmp
push
xor
enter
out
mov
in
jle
(bad)
push
scas
push
jmp
sbb
push
test
adc
jb
in
add
mov
pop
call
ret
xor
push
pop
mov
add
mov
mov
mov
inc
clc
xchg
add
arpl
ret
in
pop
lahf
xor
or
add
jo
add
ret
mov
pop
aad
sbb
mov
add
in
int3
mov
fidiv
mov
and
call
jge
fld
clc
aas
adc
jne
jbe
mov
and
sub
cmp
add
mov
enter
mov
in
inc
mov
and
jo
dec
xchg
in
add
imul
enter
sbb
fdiv
or
xlat
sub
adc
pop
lods
and
hlt
push
mov
cmp
xor
or
in
jle
fdivr
lahf
lods
ds
push
mov
jnp
test
xor
sbb
imul
pop
xchg
out
les
ret
mov
shl
mov
test
inc
jbe
push
data16
mov
and
add
jg
jp
sbb
mov
push
add
pop
mov
jl
scas
xor
jno
and
and
fcom
test
xchg
in
clc
lea
lea
and
push
popa
xchg
mov
mov
aas
mov
lods
mov
mov
jg
add
clc
jmp
push
(bad)
in
push
clc
push
dec
dec
inc
in
test
push
push
inc
inc
push
aaa
(bad)
call
push
pop
pop
push
push
inc
push
push
push
pushf
cmp
or
dec
mov
std
popa
outs
fs
xor
addr16
push
or
aad
aaa
jo
mov
cld
pop
fs
outs
ja
and
dec
mov
mov
call
je
ins
jo
add
xchg
das
or
jle
push
imul
lods
cmc
mov
imul
or
(bad)
enter
call
add
sti
inc
mov
or
popa
bound
imul
pop
pop
int3
xor
or
xor
lock
add
ja
push
inc
push
and
(bad)
outs
loopne
retf
add
arpl
popa
js
outs
imul
nop
adc
sub
js
pop
inc
push
inc
outs
ins
and
mov
ret
or
fs
pop
data16
js
div
push
xor
sub
icebp
add
jo
and
pop
or
push
jns
cvttps2pi
cwde
sub
push
shl
loop
mov
ins
arpl
idiv
or
ret
adc
jne
xor
mov
enter
and
jg
iret
(bad)
daa
std
add
adc
inc
daa
(bad)
icebp
push
pop
dec
inc
mov
cmp
mov
ja
jb
and
or
imul
fld
dec
gs
out
mov
cli
sbb
jbe
sbb
push
in
jg
jle
je
aam
(bad)
pop
inc
inc
push
push
dec
push
inc
pop
inc
push
inc
ins
aaa
sti
inc
push
dec
inc
dec
push
pop
dec
inc
dec
inc
dec
and
pop
push
out
or
sub
lods
or
jae
fldenv
jecxz
jl
or
imul
std
push
jo
dec
mov
in
int3
sbb
mov
push
dec
fs
loopne
arpl
xor
and
loope
jbe
and
je
inc
inc
adc
mov
xor
push
xor
push
jo
mov
js
imul
sbb
ja
and
inc
or
mov
cmps
add
xor
mov
inc
test
add
ret
ficom
jnp
jnp
mov
pop
aaa
add
test
xchg
cld
cmp
out
xchg
pop
push
inc
push
push
push
dec
push
sahf
dec
add
daa
into
xchg
sub
sub
fisubr
push
inc
arpl
jne
sub
ins
xchg
ja
jb
sub
add
push
bound
push
and
sub
xor
aam
movs
sub
aas
cmp
fadd
jo
adc
clc
shl
je
xchg
and
dec
adc
push
sbb
or
inc
pop
push
out
sbb
pop
scas
or
test
mov
dec
sbb
ja
es
je
js
int
popa
xor
pusha
xor
lods
and
dec
sub
or
int
mov
imul
and
dec
outs
imul
sti
and
add
pop
add
cwde
mov
ret
test
and
mov
inc
push
hlt
pop
xchg
push
cmps
ds
jge
sbb
add
add
pop
jo
xchg
aam
cmps
push
xchg
shl
mov
push
push
dec
pop
push
dec
dec
clc
or
loopne
sahf
jbe
dec
lahf
push
ja
outs
push
sub
mov
inc
push
in
push
xchg
inc
xchg
inc
(bad)
mov
or
add
stos
hlt
push
xchg
pop
jo
add
push
push
push
jl
and
int
jge
dec
mov
jle
cmps
in
inc
sub
lahf
sbb
xor
xchg
xchg
pop
mov
push
sbb
xor
inc
push
mov
push
dec
dec
or
xchg
das
cld
(bad)
sbb
scas
sti
ret
inc
fimul
test
inc
inc
and
popf
add
push
jg
mov
ins
or
rcl
jmp
cwde
or
enter
jo
xchg
dec
add
push
je
pop
dec
add
out
scas
add
repz
mov
pop
push
inc
dec
mov
(bad)
iret
aaa
mov
inc
fmul
(bad)
ror
cs
out
push
das
in
or
inc
in
(bad)
(bad)
arpl
pshufw
pop
in
xor
adc
push
dec
inc
or
inc
je
or
push
adc
add
push
dec
push
push
xchg
fisttp
dec
gs
pop
or
push
jmp
dec
xchg
add
adc
hlt
repnz
inc
js
jnp
add
mov
pop
add
sbb
or
ret
mov
push
inc
push
int3
inc
adc
loop
xor
push
mov
dec
cs
adc
sub
sub
iret
and
(bad)
std
and
push
inc
inc
dec
in
shr
or
push
or
mov
push
jp
push
or
mov
lock
hlt
mov
scas
test
dec
inc
dec
mov
shl
ins
shr
push
or
sbb
mov
aaa
push
mov
or
inc
ins
mov
loopne
xor
pop
inc
pushf
cwde
add
jo
(bad)
fistp
fist
adc
xchg
pusha
mov
dec
add
cmp
lods
pop
cmc
je
pop
jne
je
inc
jne
arpl
push
popa
bound
pop
cmp
xor
add
push
jmp
arpl
mov
xchg
push
lods
dec
xor
loope
outs
ss
xchg
dec
dec
xchg
retf
push
dec
ror
sbb
inc
jns
fnstsw
mov
cli
pop
sbb
jno
imul
xchg
dec
pushf
push
adc
rol
inc
ffree
xor
lock
sbb
add
push
inc
dec
push
ret
or
xchg
arpl
adc
mov
mov
bound
mov
gs
inc
inc
push
sbb
mov
jo
sbb
sub
jo
ins
add
gs
jnp
inc
sub
and
das
sbb
out
div
ins
jnp
cmp
inc
push
ja
imul
mov
xchg
mov
fsub
dec
ss
add
mov
mov
mov
or
imul
ja
pop
adc
xor
mov
lar
je
out
jecxz
fs
push
lock
sub
add
jbe
outs
or
sub
push
fs
xor
push
push
pop
add
outs
add
inc
push
push
push
inc
fsub
push
rol
pop
dec
pop
xchg
inc
fs
inc
scas
sbb
pop
in
js
dec
add
mov
mov
dec
push
(bad)
arpl
or
sbb
pop
sub
push
xor
xor
ret
add
xchg
cmps
je
cmp
je
in
jo
inc
xor
je
inc
push
inc
sbb
rol
repnz
pop
cmc
mov
push
pop
bound
(bad)
mov
jb
sbb
sbb
jb
jb
push
pop
add
jb
jb
add
add
jb
jb
push
pop
or
jb
jb
or
or
sbb
jb
(bad)
std
icebp
cmp
cmp
repnz
cmc
cmp
cmp
div
clc
stc
cmp
cmp
cli
sti
cld
std
cmp
cmp
(bad)
jmp
loope
cmp
cmp
jecxz
in
cmp
cmp
out
jmp
jmp
cmp
out
rcl
cmp
cmp
rcl
aam
cmp
cmp
(bad)
xlat
fcomp
cmp
cmp
fcmovu
(bad)
cmp
cmp
(bad)
rol
cmp
cmp
ret
(bad)
lds
cmp
cmp
(bad)
enter
cmp
retf
int
cmp
cmp
iret
mov
xor
cmp
mov
pusha
fimul
add
fistp
push
data16
jle
mov
inc
je
sbb
push
inc
sbb
out
cmp
add
jecxz
inc
add
pop
gs
push
push
push
dec
push
pop
mov
loope
call
xor
push
pop
aad
cli
inc
jb
add
or
add
sti
adc
or
add
pop
loopne
daa
sub
imul
dec
call
fidiv
icebp
jbe
rcr
inc
pop
mov
mov
ins
xchg
retf
mov
pop
add
mov
mov
push
rol
pop
jne
lods
cs
pop
dec
fadd
enter
pushf
fld
pop
ror
(bad)
iret
or
mov
sbb
adc
es
popa
inc
xor
bound
das
fild
cmp
cmp
mov
sub
fmul
js
daa
stc
das
pop
fnstsw
push
test
jnp
and
out
and
cmps
fild
or
popa
cmp
shl
ret
das
inc
or
xchg
cs
jae
jbe
pushf
jle
adc
sub
adc
push
sub
add
shl
outs
and
adc
or
dec
dec
xchg
leave
mov
cs
adc
lock
dec
mov
aas
sbb
inc
push
push
push
push
add
lods
nop
push
in
jae
inc
sbb
pop
popa
adc
pop
inc
or
popa
cmp
inc
pop
mov
sti
call
fst
out
imul
push
jl
pop
test
dec
daa
xchg
pop
mov
jns
inc
and
add
ret
loopne
bound
add
mov
mov
add
outs
adc
or
push
sbb
push
or
mov
push
in
add
push
daa
loopne
out
or
inc
pop
je
and
push
add
dec
pop
inc
mov
jno
and
sti
mov
cmp
xor
adc
add
fwait
add
cmp
lea
fsub
stc
or
test
push
add
fwait
jae
mov
mov
popa
push
clc
in
or
fld
inc
xchg
adc
cmp
adc
mov
mov
les
daa
xor
xor
scas
push
cmps
xor
mov
out
loope
push
test
xchg
push
xor
adc
je
ins
daa
loopne
cmp
cmp
(bad)
xor
or
jb
xor
mov
xchg
pop
sub
popa
mov
pop
repz
sbb
xchg
movs
pop
das
pushw
xchg
ja
xchg
ja
loopne
out
ja
out
adc
push
dec
dec
shr
cmp
mov
mov
jge
sbb
cmp
mov
mov
adc
test
add
clc
jmp
loopne
or
jne
inc
repnz
loop
pop
adc
add
mov
jnp
les
jecxz
cwde
jmp
sbb
inc
push
mov
test
into
sbb
add
mov
or
add
or
pop
pop
data16
add
xor
mov
data16
js
adc
or
je
xchg
enter
lea
mov
dec
cli
push
push
pop
xor
pop
lea
mov
mov
ds
push
mov
int3
outs
mov
outs
mov
mov
xlat
pusha
dec
iret
in
lods
sub
xor
in
std
in
fsub
mov
mov
push
sub
sbb
xchg
fldcw
in
das
or
xchg
outs
jo
pusha
inc
sub
dec
adc
inc
inc
push
adc
ud0
pop
mov
dec
sbb
jbe
sub
add
in
lock
jno
jp
push
push
scas
cmp
scas
push
cmps
adc
jle
rcr
or
cdq
push
imul
mov
pusha
add
sti
fmul
inc
jecxz
add
out
add
mov
and
xor
pop
popa
inc
xor
jbe
jb
inc
or
add
arpl
pop
jge
sbb
sbb
jae
jmp
pop
out
test
mov
es
pop
mov
xchg
add
dec
add
fsubr
gs
shr
movs
inc
push
mov
pop
push
scas
arpl
(bad)
and
xchg
rep
push
sub
jle
push
jmp
xchg
aam
stos
sbb
xor
pop
retf
cmp
movs
xchg
push
push
mov
adc
xchg
(bad)
mov
lds
lds
cmp
xchg
(bad)
aad
cmp
ins
jo
call
repz
xor
xor
push
enter
add
and
xor
nop
xchg
fld
sar
fmul
cmp
(bad)
or
clc
aam
push
xor
cs
inc
jmp
push
pop
add
(bad)
mov
(bad)
or
pop
add
lea
push
cmps
add
loope
or
sbb
popa
movs
ficom
cs
retf
das
add
pop
out
adc
sub
fldcw
sub
adc
mov
loope
and
icebp
and
div
ins
sub
add
nop
mov
outs
mov
test
sub
(bad)
adc
adc
or
xor
mov
clc
ins
push
gs
retf
pop
xor
push
sub
cmps
sbb
js
cmp
or
int
xchg
test
add
mov
and
aaa
push
inc
push
mov
test
icebp
pop
mov
mov
push
mov
sbb
add
sub
adc
and
addr16
or
or
add
jne
jne
xor
xor
rdtsc
inc
adc
imul
mov
push
push
xchg
dec
adc
loop
lea
cmp
push
dec
(bad)
add
mov
or
adc
push
mov
cmp
movs
xor
call
mov
cmp
fmulp
popa
mov
or
fistp
pop
jp
dec
push
es
sbb
(bad)
push
loop
inc
or
mov
mov
xor
loopne
inc
xor
sbb
add
mov
cs
push
push
add
push
push
daa
mov
test
sub
xor
icebp
adc
jns
icebp
push
push
loopne
xor
ss
lahf
(bad)
or
out
or
js
rcl
inc
stos
or
js
push
stos
cmp
aam
sbb
mov
mov
cmp
sbb
jns
and
cwde
add
je
jecxz
pusha
imul
push
jns
gs
outs
pushf
xchg
and
inc
test
pop
jecxz
aas
(bad)
mov
sbb
dec
mov
arpl
add
pop
mov
popa
sbb
pop
test
daa
push
bound
push
ret
and
add
ja
test
test
arpl
or
sub
(bad)
fidiv
inc
daa
test
jg
push
(bad)
lock
call
das
hlt
push
push
ins
rcr
or
inc
jg
push
jo
add
cmp
out
add
or
push
dec
fadd
js
cld
mov
xlat
push
fadd
inc
or
adc
outs
scas
es
loop
xchg
or
cmps
sub
scas
xor
movs
push
inc
lea
add
add
xchg
pop
inc
lahf
mov
adc
or
mov
or
pop
fs
xor
aaa
xor
adc
ret
xor
dec
cmp
ss
add
ret
adc
add
add
or
or
jo
mov
loop
jae
ret
add
and
pop
pop
mov
imul
int3
or
cmp
stos
xchg
push
xchg
mov
mov
jle
jg
rcl
cmp
jg
cmc
cmp
out
inc
jg
cli
cmp
xchg
aam
and
pop
cmps
call
test
(bad)
shl
sbb
hlt
jo
jns
out
es
push
pop
es
sahf
ins
jp
push
es
jnp
pusha
pop
into
fadd
jmp
clc
ds
cmc
lods
push
xor
xlat
pop
dec
push
pop
push
push
ins
imul
aaa
pop
mov
repz
mov
add
cmp
mov
sub
xchg
movs
es
mov
pop
mov
es
cld
sbb
jge
outs
repnz
dec
push
push
push
fs
out
sahf
or
idiv
push
mov
loop
das
pop
cmp
sti
push
(bad)
ss
push
sbb
ss
into
repz
push
test
dec
sbb
and
test
and
iret
jnp
cld
outs
dec
jl
mov
scas
mov
ret
pop
in
push
cli
push
or
dec
rcl
and
in
imul
push
push
dec
or
pop
pop
mov
adc
imul
leave
cmp
fnsave
add
adc
shl
adc
int3
repz
loopne
ret
sbb
sbb
enter
adc
adc
sub
and
pop
cmp
sub
sbb
jo
push
ss
sbb
fbstp
aaa
fs
push
in
ins
sbb
push
or
push
mov
pop
mul
cmp
sbb
pop
rol
xchg
dec
add
sbb
and
pusha
sbb
push
sbb
and
in
sbb
mov
jo
xor
sti
cmp
add
fadd
rcr
sbb
and
adc
and
sbb
inc
jo
fisttp
pusha
pop
int3
aaa
push
dec
rol
clc
mov
sbb
sub
add
ret
in
pop
cmp
push
cmp
nop
cmps
adc
and
sbb
xchg
sbb
pusha
sbb
aaa
mov
push
jbe
imul
adc
pusha
pop
cmp
fistp
add
xor
push
xchg
cmp
inc
jo
dec
test
xor
sub
xor
(bad)
fmul
cmp
ror
mov
cmps
sbb
iret
test
int3
fadd
jo
and
mov
cmp
not
in
add
push
push
push
xor
mov
(bad)
call
mov
je
and
cmp
lock
mov
mov
mov
xor
push
push
iret
dec
push
mov
test
jne
mov
xor
mov
dec
add
std
jmp
jmp
mov
mov
mov
or
add
lock
out
shr
add
(bad)
cmp
sub
inc
mov
hlt
ret
and
mov
inc
fcom
add
mov
aam
cmp
pop
pop
pop
les
push
sti
pop
popa
aam
jbe
mov
or
jmp
clc
push
(bad)
jle
jge
add
jo
fs
pop
add
mov
sub
sub
pop
pop
mov
pop
ret
js
ds
loopne
push
or
mov
call
sub
mov
adc
(bad)
pop
shl
inc
adc
mov
mov
sub
es
and
and
dec
cld
sbb
pop
pop
pop
ret
nop
jp
repnz
out
push
dec
test
or
push
rep
(bad)
pusha
pop
sub
ds
mov
test
setge
loop
out
jnp
xlat
sbb
enter
and
mov
js
mov
cmp
add
mov
ret
cld
popa
fsqrt
add
inc
sar
fld
or
or
cmp
or
sbb
lods
aaa
rol
fmul
ins
or
mov
outs
out
rcl
push
add
xor
mov
mov
inc
inc
fidivr
mov
rcr
inc
or
cmp
and
xor
shl
adc
or
dec
shl
xor
xor
shl
adc
cmp
js
push
cmp
jne
push
scas
mov
mov
fisttp
sub
push
push
not
adc
push
or
fs
push
jo
stc
loopne
stc
jecxz
rcl
cli
lods
mov
cli
outs
jg
dec
inc
or
jae
add
add
xor
xor
cs
ins
add
outs
imul
inc
imul
add
out
sti
sub
das
push
es
inc
(bad)
out
data16
adc
inc
fsubr
jo
dec
cs
xchg
(bad)
into
loopne
scas
(bad)
aas
lods
js
je
push
xor
pusha
cmp
pop
fdiv
call
test
push
icebp
cdq
jecxz
test
cs
mov
xchg
rcl
lea
pop
(bad)
cmp
mov
sbb
mov
jmp
mov
mov
(bad)
out
das
cwde
jns
jmp
jae
loopne
inc
pop
add
popf
jo
cmp
pop
adc
dec
cwde
jge
das
jp
hlt
(bad)
mov
adc
mov
mov
adc
xor
xor
and
adc
adc
jecxz
js
mov
sbb
dec
mov
mov
(bad)
stos
pop
in
nop
mov
lock
cmp
cwde
or
jle
push
adc
mov
aam
or
push
xchg
movs
push
cmp
arpl
fadd
mov
call
mov
and
xor
dec
or
int3
push
add
inc
push
ficomp
xor
mov
(bad)
arpl
jmp
xlat
imul
call
repz
rcl
ins
mov
sub
or
jb
lea
push
inc
and
pop
bound
push
inc
je
loopne
adc
movs
js
ins
lock
aaa
mov
push
inc
out
add
inc
or
dec
xor
add
cmp
sbb
rcr
and
xor
cmp
dec
dec
and
test
mov
loope
and
adc
mov
ret
ror
mov
mov
aad
jmp
sbb
mov
aad
dec
mov
iret
push
jb
add
es
push
movs
lods
je
idiv
mov
les
sub
sub
xchg
mov
inc
sbb
adc
call
icebp
cli
mov
adc
jb
je
dec
je
jmp
mov
or
jmp
mov
mov
push
loop
jmp
clc
mov
out
clc
dec
lea
jp
sbb
dec
fs
hlt
xor
push
push
push
push
mov
test
hlt
dec
sbb
lea
(bad)
pusha
loopne
mov
adc
sub
adc
cmps
sub
hlt
lahf
rcl
ins
daa
push
cmps
(bad)
rol
jno
push
jmp
out
cli
or
scas
add
ins
mov
push
push
mov
pop
jbe
push
repnz
fdiv
dec
push
xchg
or
push
aam
inc
inc
dec
mov
mov
add
mov
out
adc
adc
jl
adc
adc
adc
or
icebp
push
or
mov
call
or
call
cld
lock
add
sti
push
cmp
push
push
out
pop
mov
adc
rol
inc
daa
ret
and
pop
xor
dec
mov
pop
mov
fisttp
xor
dec
pushf
push
push
icebp
je
sub
add
jle
inc
sbb
setg
test
and
mov
inc
dec
inc
lods
mov
push
call
mov
pop
adc
call
mov
push
sub
and
int3
mov
push
cmc
add
dec
inc
inc
mov
jmp
aas
clc
loop
add
xchg
cwde
sahf
dec
ins
jge
add
xor
lock
jp
rol
inc
mov
pop
cld
cmp
fwait
push
xor
cmps
xor
out
sbb
adc
mov
xor
rcl
retf
sbb
mov
ror
lea
mov
jmp
div
hlt
dec
mov
inc
adc
push
push
jp
(bad)
ficom
add
cdq
push
pop
into
fs
mov
adc
push
inc
add
jp
or
test
fmul
or
mov
call
ret
test
sbb
or
sbb
push
mov
imul
pop
jecxz
or
sub
(bad)
loopne
nop
cmps
scas
mov
sub
cmp
jg
jae
inc
push
cmp
cmps
jg
jg
add
add
out
sub
loopne
out
lahf
push
or
sub
jb
mov
or
cmp
rcr
ret
in
pop
jp
loop
pmuludq
rcr
push
or
inc
add
gs
aaa
aaa
xor
pop
pcmpgtd
cmove
inc
and
inc
jnp
cmp
mov
cmps
add
xor
add
or
clc
sar
fisub
cli
push
inc
sti
(bad)
test
sub
adc
push
cmp
jbe
mov
mov
imul
movs
nop
arpl
hlt
fcomp
popf
mov
and
sub
in
sbb
outs
(bad)
sar
imul
into
dec
and
push
xor
(bad)
jg
jle
call
xor
(bad)
in
cld
idiv
sub
jae
lea
arpl
or
ret
mov
mov
pop
inc
aam
sbb
cmp
imul
dec
hlt
test
xor
cmp
mov
cmp
adc
jne
or
in
add
or
ss
lea
adc
call
inc
mov
rol
mov
test
mov
jbe
das
pop
hlt
mov
cmp
add
xor
jne
enter
mov
mov
sub
imul
ins
outs
sbb
dec
ret
outs
inc
pushw
push
scas
imul
div
sub
inc
in
repnz
add
push
add
xor
enter
sbb
mov
test
test
loopne
xor
or
(bad)
icebp
or
or
push
cs
push
es
cmp
push
jo
push
xor
pop
push
mov
and
and
clc
mov
enter
push
inc
data16
push
(bad)
dec
cmp
lock
push
add
jo
add
into
and
in
or
(bad)
mov
or
in
ret
clc
adc
xchg
mov
push
lea
mov
(bad)
popa
pushf
mov
and
leave
mov
test
pop
xor
xor
add
adc
out
xor
dec
mov
and
mov
mov
add
dec
call
and
loopne
mov
mov
fisttp
push
sbb
fs
loope
(bad)
dec
sub
cmps
xchg
enter
je
adc
pop
mov
push
jo
mov
jmp
popa
les
or
rol
dec
push
mov
ss
mov
cld
add
je
or
je
dec
je
jmp
sub
mov
push
adc
jmp
mov
ds
ja
test
enter
or
pop
push
fucomi
es
fwait
cld
sbb
xchg
in
mov
clc
xor
adc
add
mov
dec
jne
(bad)
mov
adc
jne
adc
leave
jp
mov
dec
je
loope
add
inc
jno
cmp
or
gs
in
(bad)
sub
inc
push
shl
dec
hlt
jmp
sahf
adc
sar
jge
sub
lea
mov
or
ret
mov
test
pop
push
push
call
pop
sbb
adc
dec
push
sti
pop
cmc
push
sub
sbb
add
mov
(bad)
push
adc
fs
sbb
dec
jge
xchg
sub
cmps
or
xchg
sbb
adc
int
add
lods
and
aam
dec
jo
and
mov
aam
sbb
xor
(bad)
jp
pop
jmp
ret
in
and
jge
jo
fwait
inc
fdivr
in
sbb
xor
pop
adc
ret
aad
and
sub
xlat
pop
mov
xchg
out
and
aaa
das
or
jg
mov
test
inc
sti
sbb
pop
or
add
pusha
test
or
(bad)
popa
and
scas
xor
mov
inc
jnp
in
pushf
mov
jo
rcr
push
test
inc
xchg
cmp
xor
add
les
call
mov
push
sub
aam
xchg
pop
jle
enter
in
add
cmp
xchg
dec
adc
dec
adc
js
xor
js
push
mov
adc
dec
or
repz
mov
pop
mov
jb
and
cwde
push
adc
mov
mov
movzx
mov
loopne
clc
vcmpneq_ussd
mov
clc
mov
mov
jg
mov
mov
inc
sbb
or
gs
mov
xor
retf
push
outs
mov
mov
adc
in
das
repnz
mov
repz
sbb
daa
mov
push
repz
std
test
inc
add
mov
out
jp
fdivr
push
inc
sbb
das
(bad)
fbld
sub
mov
dec
outs
jbe
ins
imul
outs
jb
je
inc
fild
xor
xor
scas
test
gs
adc
and
push
push
adc
(bad)
das
xor
push
add
sbb
test
pushf
pop
xchg
adc
add
add
sbb
mov
and
dec
fadd
rcl
push
loope
xlat
mov
push
rcl
fild
push
pushf
es
mov
cmp
cmp
movaps
xor
ds
fld
or
add
sub
repz
mov
je
std
ret
dec
gs
popa
jno
and
ins
mov
outs
ins
popa
imul
out
jne
jb
dec
pushf
xchg
and
or
or
mov
aaa
or
ins
fwait
shl
push
mov
fs
mov
imul
cs
inc
je
inc
dec
jns
cmp
pop
or
sub
jno
sub
push
pop
dec
cmps
jb
dec
mov
bound
push
outs
call
xchg
push
out
add
mov
arpl
or
(bad)
mov
inc
jb
je
div
mov
add
enter
mov
gs
retw
mov
pop
inc
jl
outs
jns
and
adc
add
sub
mov
jno
(bad)
xor
and
ins
adc
lds
imul
add
xchg
and
pop
fldcw
mov
mov
fisubr
add
xchg
xchg
or
out
mov
and
cmps
add
sbb
push
sbb
mov
pop
inc
add
dec
int3
pop
int
pop
cmp
out
and
outs
lods
and
push
xchg
or
out
enter
retf
add
mov
push
xor
cmp
scas
pop
icebp
imul
xchg
lahf
lea
aam
outs
test
xlat
(bad)
mov
pop
push
mov
jecxz
(bad)
sbb
cmps
dec
addr16
xchg
cmp
cmp
add
sbb
outs
mov
sbb
xor
and
cli
sub
pop
pop
push
pop
lock
and
and
ja
(bad)
cmp
mov
mov
pop
inc
mov
sbb
and
icebp
je
inc
leave
mov
add
lods
fstp
fwait
push
add
lea
mov
or
pop
dec
mov
xor
cld
cmp
fsubr
in
or
inc
fs
xor
adc
test
xor
or
je
(bad)
sub
bound
sub
mov
nop
push
aam
xchg
mov
push
out
push
cwde
cli
ja
sub
mov
xor
repnz
std
cmps
les
daa
pop
movs
aas
bound
jle
cmp
mov
outs
mov
push
inc
xor
sar
shr
pop
jmp
mov
sar
and
retf
lea
lock
scas
and
or
lock
ja
push
paddsb
sbb
dec
hlt
iret
inc
lock
fiadd
push
pop
movs
fstp
mov
mov
les
mov
les
enter
cmps
(bad)
lock
xchg
mov
js
push
scas
hlt
hlt
sbb
sbb
das
xchg
mov
cmp
sub
jo
push
mov
out
fld
inc
push
sub
fsubr
inc
mov
jmp
nop
mov
push
repnz
inc
adc
xchg
or
mov
and
push
scas
inc
cwde
retf
jnp
sbb
jae
mov
pop
enter
enter
sbb
inc
and
inc
add
inc
or
(bad)
mov
int3
sbb
fiadd
jmp
jae
adc
sbb
cmp
inc
clc
xor
xor
add
(bad)
sar
inc
jne
pop
lahf
popa
out
push
dec
add
retf
sub
and
mov
or
jg
and
sbb
out
jb
(bad)
ins
adc
mov
pop
lds
sub
daa
and
inc
repnz
cwde
sub
stos
lea
xor
sbb
aas
es
or
add
or
stos
mov
daa
ja
cmp
int
daa
ror
push
or
and
dec
shl
out
xchg
push
or
ret
outs
pop
outs
push
xor
jnp
ss
or
inc
addr16
or
cli
pop
push
mov
mov
mov
sbb
movzx
data16
and
pop
jne
inc
inc
xor
retfw
sub
cmp
fidivr
push
lea
push
mov
sbb
test
inc
pop
adc
inc
sbb
pop
push
shl
clc
or
and
sbb
fisttp
push
adc
test
dec
mov
dec
mov
sbb
add
(bad)
dec
push
cmp
cmp
push
inc
adc
in
mov
mov
inc
pusha
jnp
ret
clc
inc
add
inc
or
ins
dec
or
cmps
or
add
movs
add
push
shl
in
fmul
push
test
sti
mov
shl
sbb
add
and
std
cdq
sahf
aaa
and
jl
fcom
dec
cmp
push
jmp
sub
daa
fcom
fidiv
ret
pop
push
push
jmp
movs
cmp
int3
pop
int3
fwait
cmp
sbb
push
ss
mov
ds
pop
out
or
inc
add
jmp
nop
fstp
lock
cld
adc
xor
dec
mov
xor
imul
xchg
push
scas
outs
jmp
mov
adc
push
les
mov
sar
addr16
sbb
fsubr
outs
(bad)
push
nop
test
inc
adc
mov
les
cmp
enter
cmp
adc
pop
shl
sbb
sub
arpl
sub
ins
mov
mov
sub
push
mov
lods
jne
mov
add
test
and
ds
pop
daa
dec
test
mov
sbb
es
or
mov
cs
xlat
out
add
test
jo
pop
imul
outs
cmp
mov
outs
adc
lods
xchg
movs
aas
xchg
enter
or
es
xchg
ror
and
pop
(bad)
adc
mov
pop
mov
and
push
sbb
dec
das
pusha
nop
ss
dec
das
push
or
loop
mov
add
push
dec
sbb
out
mov
pop
push
and
rol
and
add
dec
mov
iret
daa
pop
sbb
out
dec
(bad)
(bad)
push
mov
or
lds
mov
add
outs
dec
push
push
push
push
push
gs
jmp
add
or
inc
outs
push
outs
push
push
out
std
fisttp
dec
jne
je
js
je
inc
outs
outs
je
outs
outs
ja
xchg
outs
fs
or
dec
movs
fwait
push
lods
fistp
adc
arpl
push
jns
gs
in
xor
inc
or
outs
jb
popa
ins
add
adc
dec
pop
or
outs
js
or
adc
ja
and
push
mov
psrad
data16
jae
adc
dec
gs
jb
sub
mov
mov
and
fadd
outs
sbb
popa
jb
ins
jae
ret
test
push
jae
jae
inc
rcr
gs
push
aaa
dec
sub
inc
hlt
popa
out
inc
shr
pop
sub
popa
mov
xchg
push
push
js
pop
gs
idiv
ins
xchg
popa
adc
push
ret
xor
gs
rcr
fidiv
sbb
jb
cld
imul
ja
xor
push
jo
adc
xor
dec
inc
xchg
and
fbstp
js
fbstp
sar
sbb
add
sbb
ret
bound
imul
pop
or
dec
add
xor
xor
pop
xor
jg
mov
fwait
dec
or
push
push
push
push
fild
jb
push
dec
bound
add
mov
sub
add
dec
jne
popa
pop
loop
pop
jnp
mul
add
dec
popa
bound
inc
outs
adc
dec
or
or
push
pop
imul
inc
mov
sbb
pop
in
ror
test
inc
icebp
pop
in
ja
and
test
ret
out
jecxz
cmp
pop
push
xchg
sbb
cmp
add
fst
fs
loop
ins
pop
or
inc
dec
ret
adc
xchg
add
push
push
imul
sbb
inc
or
add
rcr
test
out
or
addr16
add
loopne
imul
sbb
inc
pop
inc
add
adc
pop
dec
add
and
sbb
lahf
inc
pushf
fmul
sub
sbb
dec
movs
jg
aam
add
or
aas
addr16
add
fbstp
fidivr
mov
adc
mov
pop
pop
mov
inc
lock
inc
push
mov
push
sti
fidiv
in
add
push
inc
sub
fimul
(bad)
daa
das
je
lahf
aaa
lods
push
int3
push
(bad)
cmp
jnp
mul
(bad)
jge
ja
mov
cmp
ss
sbb
add
push
add
ins
xor
inc
sbb
sbb
xlat
enter
pop
mov
add
mov
movs
cmp
adc
inc
inc
jecxz
lods
add
lods
and
out
or
sub
shl
mov
or
xor
inc
fmul
mov
jmp
cwde
sub
jmp
inc
in
sub
jp
add
mov
xor
xchg
jge
shl
add
xchg
shr
jo
shl
add
add
or
push
or
fbld
les
jmp
cwde
call
add
sbb
push
xchg
push
imul
mov
jge
add
inc
sub
(bad)
and
das
add
hlt
les
xor
cmp
pop
cwde
push
push
fs
or
xor
loope
pop
ficom
jg
loop
or
rol
sbb
es
sbb
pop
xor
lods
movs
(bad)
mov
inc
icebp
mov
or
and
rol
fcom
pop
dec
cmp
lds
shl
out
push
cmp
mov
ja
in
sbb
push
or
push
push
sub
pop
les
in
in
pop
sbb
xor
cmps
adc
pop
adc
pop
js
pusha
push
ret
ins
push
dec
adc
pop
jmp
inc
and
sar
cmp
jg
adc
add
jg
clc
push
dec
and
aas
in
dec
xlat
std
aam
xchg
push
outs
jne
rcr
(bad)
xor
fdiv
or
cld
repz
or
pop
add
je
shl
or
push
sub
outs
in
shr
les
mov
xor
sub
loope
stos
sub
xor
xchg
das
push
out
mov
adc
or
xor
cwde
cmp
or
add
fnsave
imul
nop
or
test
pop
imul
xchg
fst
xchg
inc
inc
or
int
dec
add
inc
adc
out
cmp
mov
test
(bad)
mov
rcr
hlt
push
xor
push
call
or
cmps
push
retf
add
loopne
push
jecxz
addr16
or
mov
add
dec
mov
rol
sub
xchg
fstp
inc
push
lods
pmaxsw
scas
inc
or
cmp
sbb
popa
cmp
or
ret
daa
sbb
sbb
mov
mov
sub
outs
pop
sbb
lock
js
adc
push
inc
dec
outs
outs
fstp
jo
bound
aaa
or
ficom
inc
cmps
ins
cmp
and
pusha
sub
imul
popa
xchg
lods
push
dec
sub
pushf
test
push
daa
push
sub
jae
xchg
or
dec
popa
js
inc
test
push
push
fcomip
out
jmp
sbb
fisttp
ror
pop
je
or
pop
inc
sub
imul
popf
mov
jns
adc
pop
test
loopne
addr16
es
xor
pop
xor
mov
jnp
and
ficomp
in
push
dec
ins
add
and
xchg
pop
sbb
add
in
pop
outs
lock
ins
jbe
stc
pop
jnp
or
sub
xor
adc
cmps
out
mov
or
or
inc
mov
fdivr
fcom
divps
les
and
sub
mov
call
icebp
mov
push
xor
es
push
and
(bad)
loopne
fild
lock
push
lods
cs
sub
and
clc
push
pushf
push
add
in
out
into
int
fstp
es
push
and
cmp
jmp
adc
inc
(bad)
push
out
and
jns
adc
mov
and
aaa
pop
fstp
sbb
xchg
clc
adc
jbe
div
sbb
pop
cmp
movs
je
cmp
xchg
or
adc
pop
bound
jge
xor
xor
inc
fist
sub
sub
inc
mov
sub
je
fild
push
lock
inc
cmovbe
ins
inc
xchg
shr
xor
or
test
mov
mov
cmp
and
loope
cmp
adc
sbb
jecxz
mov
jmp
xor
test
pop
xor
adc
ret
fstcw
pop
cld
add
scas
inc
ins
dec
ss
adc
dec
es
add
cmps
cld
add
test
ffree
and
out
add
or
push
add
mov
cmp
adc
inc
cmp
mov
ficomp
xchg
sub
push
sub
push
and
(bad)
rcr
nop
sbb
dec
test
fdivr
call
aaa
sub
into
jae
adc
cmp
sub
and
pmuludq
jo
xchg
daa
daa
mov
enter
sti
cmp
imul
in
mov
jns
xor
pop
cmp
cmp
sbb
sub
inc
xor
ret
or
into
gs
cmp
mov
fisttp
xor
mov
ins
ja
push
dec
mov
add
and
add
mov
sbb
jl
ror
inc
je
sbb
sar
fwait
aas
out
mov
inc
sbb
add
pop
mov
sbb
add
or
jb
add
pop
test
inc
xchg
adc
arpl
movs
mov
dec
cmp
loope
cmp
mov
in
inc
adc
lea
mov
or
sbb
cmp
add
mov
test
or
ss
sub
add
push
sbb
push
outs
pop
aaa
in
js
mov
add
or
inc
jbe
sbb
out
aam
bound
mov
or
pop
mov
sbb
xchg
or
inc
inc
jns
addr16
bound
leave
fwait
dec
fist
fwait
and
popa
sub
dec
adc
fwait
add
movs
popa
mov
add
push
ret
add
mov
in
popa
imul
test
pop
add
inc
test
loope
mov
arpl
mov
cmp
xor
inc
shl
and
cmp
adc
push
pop
mov
push
popa
je
test
mov
adc
pop
adc
mov
pusha
add
(bad)
mov
rcr
push
xchg
lds
or
inc
and
and
bound
xchg
and
cmp
and
and
and
xchg
ds
ins
xchg
ret
and
mul
aas
push
js
data16
sub
pushf
adc
cmp
cwde
lds
jnp
add
sub
lods
aam
jne
dec
fild
movs
mul
xor
adc
inc
adc
sub
test
or
cmp
sub
dec
mov
aaa
mov
pop
push
mov
jae
jo
jno
push
jne
xchg
out
popa
xchg
adc
pop
popa
setnp
mov
iret
popf
inc
jno
pop
cwde
push
rsqrtps
mov
or
fcmovnbe
inc
aaa
mov
or
punpckhwd
ins
push
inc
inc
sbb
arpl
in
lahf
jmp
faddp
jae
or
ret
or
dec
outs
add
pop
in
lds
repz
outs
add
pop
dec
adc
push
pop
pop
add
jnp
push
dec
adc
or
xor
rcr
mov
mov
aad
int3
dec
mov
adc
lods
add
imul
push
add
mov
sub
ja
fadd
sbb
lahf
xchg
xchg
retf
cdq
call
fcomp
enter
test
(bad)
mov
pop
pop
xor
pop
and
pop
sbb
sbb
sbb
loopne
(bad)
adc
xor
or
pop
inc
and
or
or
aas
mov
push
test
xlat
pop
cmp
and
xchg
sub
push
xchg
sbb
adc
pop
adc
adc
es
dec
push
out
add
(bad)
out
pushf
inc
enter
pop
add
or
lds
cmps
out
mov
xchg
sbb
jb
mov
add
pop
add
inc
dec
xor
xor
jb
(bad)
in
xor
jb
push
inc
xor
xchg
xor
mov
adc
les
ins
add
mov
les
jb
rol
cli
test
out
mov
mov
push
mov
jnp
push
inc
sbb
mov
outs
add
adc
push
outs
imul
jb
je
fild
fild
adc
aad
das
cwde
sub
out
add
addr16
push
hlt
push
cmp
imul
and
xor
addr16
popa
cmp
ss
inc
mov
xchg
cmp
add
push
or
sbb
or
jb
mov
mov
cmp
adc
mov
fbld
js
gs
outs
mov
add
adc
mov
lock
add
cmp
into
ror
cwde
dec
pop
mov
popa
cmps
xor
outs
in
jo
jns
das
xor
mov
add
sub
sub
push
rol
ds
bound
bound
lods
xor
add
shl
mov
pop
sub
push
pushf
add
xor
add
daa
push
mov
push
mov
push
push
test
je
add
call
mov
mov
inc
or
xor
mov
idiv
mov
and
and
or
mov
and
(bad)
into
lock
fs
movs
add
sub
pop
ret
fwait
pop
fmul
fdivr
add
mov
fisttp
inc
and
mov
aam
mov
or
add
pop
ret
daa
or
je
adc
jne
js
das
push
or
or
add
aas
mov
add
cmp
je
ds
bound
sbb
cmp
push
imul
push
dec
pop
adc
sbb
sbb
push
xlat
push
or
outs
pop
pusha
sbb
mov
lock
push
push
div
movs
push
mov
mov
hlt
mov
clc
in
mov
hlt
stos
inc
jae
outs
xor
inc
jne
mov
mov
data16
repz
push
lods
dec
jl
fst
lock
cwde
push
inc
(bad)
pop
pop
test
mov
retf
and
lea
(bad)
mov
jmp
in
jl
jmp
ret
ret
pop
push
xor
sbb
ss
xchg
or
and
sbb
cdq
jae
mov
aas
imul
or
mov
or
xor
daa
adc
movs
ret
xchg
das
adc
or
pop
sub
xchg
mov
sar
leave
mov
cmp
xor
(bad)
lods
mov
ss
or
cmp
mov
mov
pop
cmp
inc
inc
and
mov
cld
and
xlat
xor
(bad)
dec
jle
adc
sub
fsubr
ret
nop
es
push
mov
and
jp
test
dec
push
jmp
mov
cld
push
push
mov
ja
pop
xor
ret
mov
dec
push
mov
jno
fwait
stos
pop
xchg
scas
rcr
add
call
dec
sub
movzx
test
(bad)
ds
jne
push
mov
call
test
mov
fmul
cmp
(bad)
jae
adc
push
mov
hlt
inc
dec
cld
mov
call
sar
mov
jae
add
mov
mov
cdq
das
ret
or
sub
or
das
inc
push
inc
add
sub
add
dec
add
and
dec
add
dec
ins
dec
(bad)
call
inc
outs
push
add
push
add
pop
ret
sbb
mov
lock
mov
bound
addr16
imul
ret
loope
retf
jno
sub
(bad)
xchg
jne
jbe
ja
inc
jp
inc
add
(bad)
mov
mov
xor
xor
add
cmp
sub
loop
daa
sar
xchg
aam
push
xor
mov
add
pop
pop
sbb
leave
ret
push
cmps
pop
enter
dec
in
add
lock
push
sbb
cdq
jb
mov
cmp
test
pop
xor
mov
cmp
push
ins
lock
mov
std
jbe
xchg
test
and
inc
dec
hlt
movzx
out
mov
lods
call
cmp
jne
sar
fadd
fidivr
out
lods
(bad)
mov
push
jl
pop
retf
fsubr
inc
xchg
int3
pusha
fsubr
pop
lea
scas
push
cmp
in
push
mov
pop
clc
inc
dec
mov
xor
call
xor
mov
call
jge
cmp
jge
aas
je
pop
add
test
jl
inc
loopne
push
pop
mov
add
pop
jo
add
sti
fdivr
aas
jne
(bad)
fs
mov
jne
jnp
jle
in
dec
ins
jbe
ss
xchg
aaa
xor
or
jne
sbb
call
ins
or
jge
xchg
sub
aas
lea
pusha
jo
lods
jne
push
out
jp
jnp
pop
into
and
jnp
lea
fmul
mov
lds
nop
jge
aam
mov
loopne
mov
aad
add
aaa
pop
shl
add
ret
jecxz
jbe
inc
cmp
into
in
sbb
xor
sahf
fs
jmp
jle
ss
jl
push
push
retf
ins
sbb
clc
ror
sbb
add
push
pusha
mov
idiv
xchg
or
adc
imul
(bad)
dec
loope
inc
xchg
adc
fsub
xchg
and
push
inc
add
add
or
or
idiv
fiadd
jl
and
xor
rol
or
test
sbb
cmps
test
add
or
add
mov
aaa
pop
or
cmp
xor
sbb
fsub
mov
xchg
ror
mov
test
mov
jo
push
push
inc
push
add
push
(bad)
mov
dec
mov
mov
jle
inc
call
out
loopne
call
cmp
in
push
pop
push
and
inc
sbb
pushf
and
cmps
inc
in
adc
movlps
push
mov
mov
pop
cmp
cmp
dec
jne
xchg
bound
(bad)
pushf
cmc
pop
test
xchg
daa
push
(bad)
dec
push
shl
jl
stos
or
mov
adc
xor
mov
add
dec
inc
inc
mov
call
outs
cmp
or
jge
add
pusha
mov
pop
test
inc
dec
pusha
jb
xor
fld
cmp
adc
or
enter
in
lock
mov
and
inc
jns
push
je
mov
(bad)
mov
xchg
mov
add
xor
lock
cli
jb
(bad)
jge
popa
xchg
loope
les
leave
ins
rcl
sub
push
dec
pop
ret
loopne
test
add
ja
inc
xor
movs
popf
stos
adc
pop
jns
sbb
(bad)
fdiv
outs
and
into
and
add
data16
adc
push
sbb
in
or
pop
es
push
inc
sbb
cmp
sbb
or
mov
out
jbe
ret
cmp
jl
mov
inc
pop
addr16
sbb
cmp
int3
das
pop
lea
jge
jnp
pop
test
push
or
mov
daa
inc
sbb
aam
xor
push
add
jge
outs
sub
popa
je
mov
pop
push
add
dec
cmp
jmp
movzx
hlt
es
cmp
or
out
pop
fild
call
mov
add
mov
dec
inc
sbb
aam
call
dec
stos
shl
add
mov
inc
je
cmp
sbb
lods
inc
or
js
scas
xchg
mov
dec
and
jo
pop
aaa
fisub
adc
inc
(bad)
imul
or
daa
mov
adc
je
fisttp
and
sub
dec
jns
push
(bad)
jmp
aam
fisub
in
icebp
add
cmp
aaa
or
sbb
mov
mov
jbe
add
jl
repnz
or
(bad)
jbe
inc
sti
add
inc
add
jo
std
loopne
push
sub
je
mov
outs
dec
dec
sub
dec
sub
jecxz
clc
push
jp
adc
(bad)
jnp
adc
(bad)
or
lock
sub
add
jo
popa
imul
xchg
sti
add
add
xor
jmp
xchg
mov
loop
sbb
jmp
cs
push
rol
test
xchg
js
pop
xchg
bound
sub
lea
add
sub
adc
sbb
push
mov
add
arpl
push
in
and
popa
fiadd
dec
dec
cli
sub
xor
xchg
mov
xor
push
addr16
mov
js
sub
pop
cmp
mov
sub
or
sub
jmp
setg
sub
mov
mov
pop
adc
test
rcl
add
ins
test
out
(bad)
adc
mov
in
xchg
retf
xor
test
shl
sbb
stos
bound
mov
dec
je
sub
(bad)
mov
add
or
idiv
test
and
push
mov
pop
aas
pop
or
mov
icebp
xor
stos
push
add
inc
std
ds
lea
push
pushf
xor
pop
push
arpl
imul
pop
loopne
sub
ins
xor
ins
movs
and
or
jbe
jmp
adc
ret
sub
scas
adc
in
pop
loope
loop
xchg
add
pop
sbb
cmp
in
inc
dec
pop
pop
mov
cmp
or
add
dec
hlt
push
je
xor
pop
jno
rol
jo
mov
dec
cmp
and
test
and
mov
sbb
pop
xchg
add
xor
push
add
jge
add
outs
(bad)
or
mov
clc
dec
mov
or
inc
lock
dec
and
inc
retf
mov
xor
mov
add
scas
mov
test
loop
mov
lock
pop
cmp
pop
and
lock
cdq
push
or
ins
lahf
dec
cmp
test
mov
cmp
push
js
xor
retf
jne
aam
ins
(bad)
stc
jmp
leave
add
mov
jbe
in
cmp
cmp
inc
cmp
cmp
dec
inc
retf
mov
dec
pop
jecxz
movs
loope
jae
inc
mov
adc
prefetcht2
pop
push
mov
mov
mov
ins
push
xor
hlt
push
or
dec
sub
hlt
xlat
mov
mov
sbb
add
xchg
enter
ds
push
mov
add
adc
lock
jecxz
sub
and
push
retf
add
adc
lock
lods
or
(bad)
or
push
pop
mov
mov
sub
stc
sbb
mov
push
(bad)
in
xor
add
adc
scas
sti
push
cmp
ja
push
adc
mov
adc
xchg
mov
pop
mul
mov
mov
inc
aas
xor
jo
addr16
sbb
cmp
push
jg
pop
out
pop
inc
sbb
stos
push
popf
pop
iret
and
sbb
popf
sub
pop
fstp
(bad)
std
sub
pusha
add
xor
and
add
jmp
clc
mov
mov
pop
pop
pusha
nop
pop
push
add
pop
jle
push
mov
sbb
inc
in
cmp
dec
sbb
in
pop
js
and
push
addr16
mov
cmp
inc
gs
mov
xor
mov
cmps
or
fs
push
mov
sysenter
sub
or
js
mov
xor
sbb
loopne
xor
mov
push
mov
mov
paddusb
mov
xchg
fsubr
sbb
movs
xor
mov
(bad)
in
in
jle
or
or
sbb
nop
scas
inc
add
add
push
xor
clc
dec
in
mov
mov
imul
dec
je
or
iret
pop
(bad)
mov
mov
leave
or
inc
jbe
inc
mov
push
jle
pop
lods
pop
lea
cmp
push
sub
push
cmp
in
push
inc
pop
fld
jg
ret
pop
ins
jmp
sub
fs
or
dec
rcr
xor
sbb
push
ss
cmp
loope
fld
and
push
inc
push
in
js
je
add
ror
pop
push
push
xchg
jle
neg
inc
fisub
pop
add
inc
mov
call
jmp
into
mov
imul
rcl
mov
mov
shr
sub
imul
or
int
push
in
mov
fst
fcmovnu
bswap
fisubr
push
dec
enter
xor
add
jp
xchg
ins
mov
lock
(bad)
addr16
pusha
outs
or
add
shr
loop
or
xor
inc
aaa
push
lahf
ss
data16
xor
movs
pop
aas
jnp
shl
popf
into
aas
cmp
out
sub
sbb
mov
shl
or
jg
add
loop
or
sbb
iret
mov
push
mov
or
push
bound
sbb
out
inc
nop
pop
test
data16
or
add
and
adc
cmps
mov
push
fcom
loopne
sub
out
retf
je
cmp
scas
mov
frstor
fs
outs
sbb
jl
pop
jg
or
add
jp
or
pushf
jge
jg
les
add
jbe
push
loopne
mov
mov
scas
outs
mov
and
cmp
jne
mov
cdq
add
dec
stos
add
xor
loopne
std
cmps
or
add
dec
jne
mov
std
jbe
in
add
scas
and
jmp
mov
jne
ror
or
adc
cmp
and
cmp
jbe
shr
pusha
sub
cmp
das
(bad)
lock
ja
test
ds
into
repz
jl
jmp
inc
jnp
inc
rcr
fs
lods
int3
add
mov
sbb
ror
loop
adc
mov
mov
test
push
mov
loopne
or
mov
inc
dec
jne
leave
mov
dec
mov
adc
aas
jae
loop
nop
hlt
cmp
xor
cmp
sub
and
dec
lods
stos
sub
cmp
shr
xor
or
adc
inc
add
mov
push
add
mov
push
mov
xchg
fcom
fucomp
push
movs
pop
adc
or
or
sub
sbb
outs
mov
jne
cmp
pop
pop
jbe
mov
and
(bad)
xor
add
push
push
ins
ror
sbb
(bad)
mov
sub
jbe
and
cmp
pop
inc
pusha
jg
inc
aas
popf
nop
mov
test
inc
dec
sbb
jne
movs
into
push
or
push
xor
and
movs
sbb
add
xchg
mov
mov
mov
cdq
ins
push
xchg
pop
inc
loopne
pushf
push
mov
pushfw
mov
or
cmp
jne
icebp
(bad)
paddd
jo
mov
mov
dec
jmp
fs
nop
test
jo
jbe
leave
or
call
loopne
jmp
hlt
add
sub
or
cmps
and
lock
xor
cmps
rcl
inc
adc
sahf
arpl
(bad)
js
cmp
adc
mov
fild
jb
lahf
ja
pop
add
mov
aas
push
daa
pop
pop
jmp
mov
imul
test
push
and
mov
pop
pop
data16
push
sbb
jmp
cmps
popa
sub
pusha
adc
sub
add
xor
inc
xchg
push
imul
mov
es
push
dec
aaa
lock
inc
inc
in
xor
call
lahf
push
pop
scas
cdq
ret
dec
push
adc
push
or
pushf
mov
ss
jo
cmps
sub
popa
mov
mov
jnp
jle
(bad)
inc
and
lea
push
jle
push
and
and
xlat
ds
shl
and
add
xchg
push
test
or
fisubr
imul
add
mov
mov
sbb
or
imul
rcr
daa
add
and
imul
into
add
mov
or
and
or
jmp
aaa
(bad)
pop
imul
cwde
sub
cdq
(bad)
mov
sub
ret
loopne
retf
sbb
add
cmp
dec
push
imul
ret
daa
mov
mov
cmps
mov
mov
adc
in
addr16
and
mov
or
aaa
movs
sub
jmp
dec
in
xor
mov
pop
nop
es
inc
call
or
repnz
xchg
ins
or
jne
xchg
daa
je
inc
jbe
pop
pop
add
dec
daa
adc
add
mov
sub
xchg
das
xchg
in
inc
sub
aaa
sbb
add
outs
in
xor
fnstsw
xchg
lock
sub
cmp
in
int3
adc
loopne
js
mov
add
(bad)
fisttp
pop
hlt
clc
jmp
scas
sbb
adc
sub
dec
loope
push
or
shl
mov
mov
ss
add
dec
fsubr
push
jge
(bad)
shl
mov
outs
jmp
mov
pop
push
push
dec
pop
loope
or
fist
and
rcl
jo
jne
movs
or
mov
dec
inc
dec
ret
shl
das
das
push
fist
data16
push
jae
mov
das
add
lods
sbb
bound
mov
out
js
mov
aaa
ja
dec
or
repnz
pushf
dec
xor
ins
stos
sub
or
loop
inc
sub
xchg
mov
stc
push
imul
add
xor
push
(bad)
sbb
or
movs
mov
push
push
or
gs
mov
sbb
fmul
add
je
dec
je
push
sub
jl
jl
je
cwde
daa
ret
mov
push
test
and
js
dec
test
outs
dec
dec
xor
mov
cld
clc
mov
xor
pop
ins
push
cmp
pop
ficom
dec
pop
mov
leave
jmp
cmps
jnp
inc
sti
cmps
adc
mov
lods
dec
xor
jg
das
add
sbb
dec
movs
loope
inc
jle
(bad)
call
call
inc
cmp
dec
inc
scas
inc
jae
ds
mov
cmp
push
jae
sub
pop
data16
push
in
imul
popa
pusha
push
pusha
xchg
pop
and
popf
pop
mov
hlt
mov
aaa
and
dec
aas
dec
aas
fsubr
hlt
cmp
push
or
sbb
leave
js
pop
or
ins
out
adc
dec
xchg
test
lds
add
dec
jl
push
inc
add
pop
sbb
clc
(bad)
(bad)
push
popa
jnp
test
inc
adc
movs
movs
add
cmps
jo
sbb
ins
ret
sub
sub
xchg
sub
or
loopne
jmp
pop
call
arpl
mov
or
test
pop
push
jo
jne
push
(bad)
jne
pop
mov
mov
or
fstp
mov
ds
je
push
xchg
ss
sbb
cmp
fcmovnb
xchg
xlat
int3
xor
test
mov
adc
mov
in
mov
or
ds
fwait
and
and
fwait
inc
daa
fwait
mov
js
push
dec
add
std
push
cmp
xchg
ja
int3
jb
loopne
pusha
ja
lock
add
std
loop
popa
jae
js
mov
inc
jo
call
out
dec
enter
cmc
xor
fcomp
and
popf
clc
sub
xor
cmp
cmp
add
dec
les
push
ret
ret
rcr
and
pusha
into
or
adc
adc
(bad)
popa
ins
xor
and
or
inc
pop
mov
sbb
adc
mov
pop
int
jne
add
rol
pop
xor
jg
jne
mov
sbb
div
mov
add
je
das
or
add
adc
shl
ror
popa
call
dec
jp
jle
cmp
fsub
push
and
mov
and
cmp
je
hlt
cmp
daa
div
and
jmp
ja
inc
clc
and
inc
mov
mov
test
cmps
pop
or
fisttp
push
jle
jo
mov
sbb
ins
pop
jbe
inc
pop
push
sub
xchg
sub
and
ja
stos
mov
inc
add
sbb
in
cmp
and
shr
adc
or
rol
iret
cs
int
inc
xchg
add
js
xor
arpl
xchg
push
add
xchg
adc
iret
mov
adc
push
push
das
retf
ja
add
bound
or
scas
dec
push
or
scas
add
sub
xor
ja
mov
fdiv
cmp
retf
dec
mov
aaa
sbb
test
jp
mov
sub
xor
jne
hlt
pop
rcl
or
or
jbe
inc
inc
dec
cld
mov
test
xchg
push
hlt
sub
mov
mov
and
lds
inc
xchg
call
cmps
outs
push
add
push
ficom
shl
jb
fsub
aas
les
cmp
jne
cmp
or
pop
enter
sbb
and
movs
shl
cmp
adc
adc
scas
xor
jne
and
ror
cwde
pop
ret
jg
dec
or
jge
add
cmp
je
jle
not
cmp
call
push
xor
addr16
cmp
or
mov
or
pop
aas
cwde
test
ret
xor
or
cmp
shl
mov
mov
adc
and
cmp
pop
jns
sbb
pop
mov
nop
cmp
sub
outs
cmp
sbb
call
dec
inc
mov
push
out
inc
dec
cmp
push
or
in
lock
cld
jl
dec
imul
(bad)
and
push
inc
sti
adc
jl
ret
pop
cwde
mov
js
in
mov
jo
aam
movs
dec
arpl
or
outs
or
inc
push
int3
imul
sbb
xchg
jp
xchg
sbb
data16
xor
jne
test
fstp
repz
test
addr16
jae
cbw
popa
sbb
sbb
sbb
mov
cmp
and
mov
add
lahf
cmp
pop
push
push
mov
adc
or
push
mov
pop
jmp
inc
mov
(bad)
out
push
mov
push
ss
retf
stc
xchg
or
jo
imul
mov
test
jne
enter
sbb
xchg
ret
jnp
fnstcw
std
das
pop
(bad)
je
loopne
(bad)
ds
dec
jge
call
inc
shl
aaa
xor
push
add
mov
fs
add
xchg
loopne
adc
outs
xchg
data16
inc
add
into
xor
loopne
loopne
in
cli
push
push
mov
jnp
sub
and
inc
fstp
xor
jle
and
enter
lock
loopne
adc
or
and
aas
cmp
and
and
call
in
or
and
sbb
and
xchg
or
mov
jbe
lea
sahf
xor
push
add
div
clc
push
push
imul
pop
mov
popa
or
mov
dec
mov
pusha
push
lock
call
and
rcr
daa
nop
jne
(bad)
sbb
adc
pop
setno
(bad)
mov
div
xlat
mov
mov
ins
xor
ret
adc
fistp
jecxz
xchg
sti
sbb
out
push
cmp
push
lea
rcl
test
(bad)
div
xor
aad
mov
add
add
add
or
add
sub
or
into
pop
or
lods
jae
xchg
sub
retf
jge
aad
xor
ins
add
leave
je
push
add
push
mov
jp
mov
jo
inc
mov
add
sbb
nop
pop
shl
sub
mov
or
ret
adc
fstp
cmp
push
xor
and
mov
test
scas
pop
inc
mov
outs
mov
ret
repz
lock
dec
jg
adc
or
mov
outs
cmps
icebp
mov
mov
jb
mov
or
mov
mov
call
jg
pop
loope
push
mov
mov
mov
pop
inc
adc
or
nop
mov
push
xor
clc
add
out
adc
xor
mov
mov
and
loopne
xchg
jle
xor
mov
cmp
adc
xlat
sar
stos
scas
push
lock
mov
fsub
mov
push
jo
inc
xor
call
cmp
xchg
loope
add
je
dec
popf
push
ins
add
sti
div
sbb
imul
cmp
cli
stos
lds
inc
or
mov
pusha
sub
or
or
inc
and
adc
int
and
jne
pusha
and
in
xor
retf
adc
fnsave
cmp
popf
test
shl
stos
pop
sbb
add
ret
mov
add
xor
add
(bad)
xchg
repnz
add
shl
add
out
push
sbb
sub
and
adc
sahf
call
sub
xor
xchg
in
sub
jne
add
mov
cs
jmp
add
push
dec
cmp
test
je
xchg
jmp
cs
or
mov
add
mov
pusha
mov
inc
imul
ret
sbb
add
gs
pop
ror
xor
lds
dec
les
cmp
pop
das
daa
fidivr
pop
dec
and
push
bound
inc
dec
add
inc
aas
and
or
mov
sub
retf
popf
jbe
cmp
fcom
push
daa
movs
xchg
pop
movs
imul
pop
cmp
daa
test
add
push
repz
pop
jbe
sub
lods
movs
push
sub
repnz
inc
cld
cmps
sub
xchg
jp
sbb
loopne
sub
out
push
stos
fwait
dec
push
mov
sub
pop
push
add
nop
or
or
shl
cmps
cmp
xchg
or
rol
mov
mov
js
fwait
add
ja
push
mov
or
inc
add
cmp
jne
mov
dec
fiadd
xor
add
adc
pop
add
mov
retf
mov
xchg
pusha
or
pop
stc
mov
rcl
sbb
std
mov
out
test
pop
and
push
mov
mov
and
scas
aaa
rep
sbb
cmp
into
add
pop
adc
or
jnp
mov
pop
xor
sub
inc
add
sbb
scas
add
call
add
adc
bound
lock
mov
clc
dec
cmc
mov
xor
push
sbb
aam
inc
jmp
add
(bad)
jo
cmp
pop
ret
cwde
test
and
jmp
imul
sti
sub
rol
xchg
mov
dec
rol
push
mov
xor
adc
jo
cmp
add
push
movs
push
mov
sbb
cmp
add
inc
inc
movs
aas
pop
adc
movs
ja
dec
test
jl
les
test
dec
inc
cmp
sbb
aaa
sahf
in
in
rol
cmp
cmp
inc
fisub
into
sub
iret
inc
dec
jne
aaa
dec
movs
cmp
cmp
outs
cmp
and
sbb
pop
leave
jmp
add
cmp
sbb
push
xchg
add
adc
test
nop
ret
(bad)
jecxz
outs
pop
(bad)
cmp
cli
loope
xchg
fsub
lods
mov
sbb
jg
and
jmp
and
sub
or
push
push
shl
idiv
cmp
jg
add
dec
js
xor
push
add
movs
push
inc
fdiv
inc
push
jns
add
adc
mov
lock
add
mov
js
adc
fild
cmp
xchg
sub
(bad)
push
push
test
test
(bad)
(bad)
lods
mov
ss
not
push
into
enter
enter
loope
ins
sbb
jge
movs
xor
mov
inc
clc
cmp
jle
mov
sbb
sub
jg
jp
cwde
dec
or
movsx
cmp
jne
outs
loopne
aas
add
dec
jne
popf
fisttp
and
push
loope
adc
cs
sub
push
jo
push
clc
adc
pop
lea
jb
dec
hlt
push
mov
dec
and
jl
jle
movs
rol
aad
xchg
and
cmp
loopne
fdivr
inc
pop
ins
dec
cmp
call
(bad)
xchg
shl
sub
lock
(bad)
mov
mov
add
cmps
sbb
inc
or
test
adc
pop
xor
in
xor
scas
mov
call
pop
icebp
xchg
pop
or
mov
add
fistp
xchg
fld
pusha
sar
(bad)
fild
fstp
shr
mov
dec
push
jns
mov
jb
dec
add
jo
sub
xchg
add
pop
clc
adc
jl
dec
mov
rcl
inc
jo
bound
ret
es
cwde
add
push
clc
add
lock
test
cmp
adc
fwait
popa
lea
push
test
add
jne
push
lods
xor
mov
xor
fnstsw
addr16
push
and
push
dec
les
lods
test
lds
sahf
in
cmp
xor
fnsave
nop
inc
or
push
inc
out
loopne
adc
test
cmp
xchg
mov
jge
inc
jne
cs
mov
jo
test
xchg
xchg
dec
mov
add
jl
jmp
or
cmp
and
not
adc
adc
mov
mov
jecxz
loopne
mov
pusha
imul
sbb
lahf
outs
sub
sub
pop
imul
cmp
or
jnp
ja
adc
mov
mov
ret
rol
aaa
adc
or
(bad)
out
jnp
or
adc
add
xchg
ret
(bad)
jnp
(bad)
les
jg
and
pop
cmp
retf
or
clc
ret
adc
jmp
cli
sbb
pop
xor
loope
ror
sub
sar
and
adc
push
dec
arpl
xor
out
test
dec
ficom
or
fldcw
shl
pop
in
hlt
dec
aam
jg
es
xor
sub
out
inc
add
outs
je
dec
cmp
sub
jg
cs
inc
test
and
loopne
stos
pop
pusha
sbb
mov
push
ret
prefetchw
dec
gs
mov
mov
mov
data16
data16
dec
mov
pushf
cmp
or
mov
or
xor
push
push
into
fs
not
cs
xchg
je
mov
ret
adc
push
xchg
mov
(bad)
rsqrtps
jp
fcom
les
fiadd
outs
inc
rcl
lds
and
mov
fild
dec
cld
cli
in
pop
gs
outs
pop
nop
shl
bound
iret
and
cmps
enter
or
sub
gs
int3
jl
ret
push
jmp
ss
lds
cwde
push
scas
je
add
pop
cwde
jno
pop
mov
mov
pop
and
mov
dec
and
jbe
pushf
icebp
rcr
nop
sub
lods
push
call
inc
adc
shl
mov
jmp
pop
lock
pop
lock
pusha
and
ret
add
inc
test
add
out
cmp
dec
push
mov
retf
or
dec
adc
push
test
mov
xor
inc
(bad)
sbb
int
jge
inc
pop
xchg
mov
adc
push
add
push
pop
in
inc
xor
sbb
push
and
cmp
rol
int
mov
inc
adc
or
stc
or
loopne
loopne
movs
sbb
hlt
jmp
test
mov
sbb
add
add
lods
or
daa
inc
adc
or
add
cwde
fwait
add
and
adc
cmp
cmp
push
mov
loop
retf
push
ret
jp
or
pop
jb
mov
loop
clc
add
adc
out
fisub
movs
pop
adc
mov
jae
and
adc
or
test
cdq
inc
retf
inc
inc
mov
rcr
push
cmp
je
mov
jnp
cs
adc
xor
ja
sbb
sahf
out
cli
aam
sub
inc
add
cmp
ins
pop
sbb
popf
sbb
jae
add
jbe
stos
mov
lds
jno
mov
stos
jecxz
in
test
pop
mov
dec
cmc
sub
add
or
mov
mov
fistp
lea
daa
adc
fdivr
mov
push
inc
add
add
fucomip
fmul
adc
inc
jnp
dec
dec
repz
push
pushf
jge
push
dec
add
sti
in
sar
jp
lods
cmp
add
ss
adc
ins
xchg
add
lock
sub
push
data16
pop
sub
xor
adc
add
fild
or
or
inc
mov
fcom
imul
xchg
adc
sti
call
push
add
outs
je
inc
jb
gs
daa
inc
pop
push
jb
arpl
ja
shl
add
or
add
gs
shl
ins
data16
cmps
pop
jne
imul
in
mov
les
clc
push
arpl
add
loopne
dec
dec
sub
dec
imul
nop
cmp
je
add
mov
jp
mov
and
pop
push
jmp
add
inc
or
add
pop
or
inc
jo
jle
and
mov
pop
or
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmps
test
stos
daa
daa
daa
daa
stos
lods
lods
scas
daa
daa
daa
daa
scas
nop
xchg
xchg
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
cwde
cdq
call
xchg
jo
or
inc
push
gs
mov
outs
outs
mov
or
or
das
out
outs
call
imul
outs
add
or
popa
adc
ins
into
loopne
std
popa
imul
popa
into
bound
fcmovnb
add
pop
ror
sbb
lock
dec
cli
dec
imul
mov
push
neg
jnp
xor
inc
sbb
add
or
inc
js
lahf
rcl
rcr
and
or
ret
push
push
mov
xchg
out
or
or
sub
icebp
or
push
fcmovu
pop
cld
addr16
outs
outs
(bad)
jae
popa
jb
jle
adc
mov
push
imul
cmps
lahf
mov
add
ficomp
push
cwde
push
shl
jmp
add
fild
div
(bad)
out
ins
push
out
and
inc
out
fild
outs
ss
add
shl
push
sbb
out
mov
add
sub
push
retf
loopne
stos
jp
inc
ror
xchg
hlt
dec
inc
sysret
(bad)
or
ss
push
inc
outs
popa
sbb
add
dec
push
ins
fwait
cmp
push
inc
aad
ret
sub
mov
outs
push
je
or
ins
ja
sub
pop
push
jbe
movs
retf
dec
ja
push
dec
outs
popa
fs
outs
ins
cmp
pop
les
or
ins
xlat
or
adc
enter
or
cdq
sbb
repz
js
mov
pop
jno
push
lds
sti
mov
mov
cmps
mov
scas
push
mov
and
in
ss
mov
xchg
mov
icebp
xchg
test
in
(bad)
out
popf
push
inc
es
das
in
sbb
push
sbb
(bad)
out
mov
push
push
add
popa
xchg
out
jae
mul
frstor
inc
cmps
adc
jecxz
push
cmp
(bad)
imul
jb
repnz
or
jns
jb
into
push
pushf
dec
xor
xchg
xchg
xchg
(bad)
cld
pop
ins
out
push
and
cli
seta
je
add
clc
and
xchg
xchg
add
inc
inc
xchg
pusha
mov
gs
or
sbb
push
dec
add
fs
ret
mov
pushf
adc
inc
inc
mov
sub
popa
and
pop
pusha
add
pusha
xor
clc
xor
dec
(bad)
fnsave
js
push
outs
or
push
popa
les
push
sub
xor
push
xor
cmp
add
out
loop
sar
out
pop
imul
test
adc
mov
lods
jl
data16
test
stos
addr16
adc
adc
lahf
push
jb
or
loope
gs
xor
sub
push
push
repnz
xor
lock
pop
adc
adc
in
inc
and
inc
ss
popa
inc
(bad)
aam
push
add
cmp
popfw
sub
out
cmp
test
adc
jb
out
outs
pop
adc
sti
out
add
div
or
call
ins
jmp
std
inc
add
inc
outs
jne
je
sbb
push
add
cmp
lods
push
mov
ins
push
fild
dec
clc
jmp
mov
out
push
pop
add
mov
add
add
ja
push
clc
adc
or
jo
and
add
ins
jne
in
iret
mov
jmp
jo
push
ret
cmp
adc
sub
hlt
push
pushf
movs
pushf
xlat
popf
mul
lahf
push
dec
add
push
adc
stc
or
push
add
sub
inc
pusha
mov
aam
loopne
cmp
lods
inc
jmp
jo
or
call
psubq
and
fmul
jp
add
test
push
push
add
push
xchg
bswap
push
or
mov
leave
enter
psadbw
mov
into
mov
mov
pop
add
das
xchg
xchg
xchg
fst
in
sub
xchg
mov
push
setl
leave
es
cld
jmp
mov
mov
daa
mov
scas
pusha
into
push
dec
or
push
sahf
cmps
ja
fnsave
ja
test
add
cmp
js
inc
pop
pop
pusha
push
push
loop
test
test
mov
push
rol
loopne
dec
add
jbe
pushf
add
push
inc
fwait
xchg
jbe
daa
sti
and
pushf
push
mov
imul
popa
jnp
push
sbb
lds
pop
call
test
mov
xor
xor
adc
jns
mov
outs
imul
outs
xor
push
popa
stos
cmp
adc
and
mov
out
imul
test
push
adc
pop
ins
pusha
rcr
popf
ds
push
out
jo
push
or
push
popa
pop
outs
imul
sbb
leave
pop
dec
jnp
adc
jb
jp
stc
push
popa
(bad)
lock
xor
sbb
in
add
adc
mov
jp
mov
cwde
cmove
lahf
xchg
loopne
mov
xchg
push
dec
sbb
in
mov
push
push
sub
add
sbb
add
ins
loope
and
sub
js
or
xor
gs
aam
test
aad
xchg
or
inc
push
adc
push
ins
stos
ins
push
shl
sbb
or
push
add
fadd
cmps
push
pop
(bad)
add
neg
add
stc
data16
movs
or
enter
call
cld
ror
hlt
stos
or
pop
cmp
add
mov
and
xchg
or
inc
or
imul
jb
imul
sbb
sub
mov
shr
imul
add
movs
add
or
pushf
dec
clc
push
imul
scas
lahf
add
sub
out
ss
pushf
fsub
or
inc
imul
inc
add
fsub
add
int
clc
push
ins
clc
jo
arpl
imul
xlat
dec
mov
add
hlt
fidiv
daa
cmps
push
sbb
pop
add
repnz
outs
mov
neg
xchg
ins
es
sbb
shl
lods
pop
mov
sbb
inc
push
adc
mov
inc
adc
xor
push
ficom
out
or
xchg
push
cli
(bad)
subps
nop
push
lock
push
pusha
aam
daa
push
(bad)
or
sbb
cmp
cs
or
mov
and
sbb
nop
and
add
nop
pop
call
js
cmp
push
icebp
push
test
adc
xchg
and
ret
ds
mov
add
lods
mov
test
add
jo
shl
xchg
pop
fild
call
jecxz
adc
mov
out
mov
stos
xor
in
mov
pop
pop
sbb
aas
or
dec
test
push
adc
mov
inc
add
sub
cmp
push
or
nop
cmpxchg
sub
push
jne
or
push
sbb
push
pop
enter
out
add
push
dec
aam
xchg
fadd
push
jne
add
dec
pop
jl
adc
xchg
inc
js
outs
xchg
xor
popa
mov
lods
repz
data16
fdivr
add
es
stos
das
pop
sbb
retf
jmp
xchg
jge
mov
mov
push
or
fidiv
(bad)
cld
es
push
add
xlat
or
add
jne
mov
push
mov
pop
(bad)
push
test
lods
mov
push
dec
add
xor
pop
mov
push
or
xchg
ret
call
or
adc
jae
dec
pop
push
mov
sbb
adc
cmp
push
jmp
test
popa
scas
push
sbb
push
out
cs
jmp
aas
mov
imul
or
dec
sub
and
mov
bound
mov
bound
or
pop
inc
push
bound
leave
and
ja
or
shr
sub
or
(bad)
loope
jns
push
add
jo
push
push
pop
push
sub
add
jns
stos
push
test
ror
scas
mov
scas
sbb
mov
xchg
push
mov
inc
or
pcmpgtw
add
mov
push
pusha
mov
or
push
add
cmps
loop
fmul
dec
xlat
imul
push
push
or
mov
pop
mov
mov
add
fstp
fs
dec
sbb
imul
xchg
adc
jnp
cmp
jp
ins
in
xchg
out
ja
dec
or
add
push
or
inc
mov
out
cdq
add
mov
xor
inc
mov
add
mov
les
add
mov
xor
ret
dec
inc
jl
adc
int3
test
add
rol
add
mov
and
outs
mov
add
gs
add
xor
sbb
and
cmp
ret
cmp
or
xor
inc
mov
mov
xchg
pusha
cmp
cmp
mov
lock
mov
adc
lahf
push
lods
test
or
sar
push
xchg
add
es
movs
push
dec
mov
movs
shl
or
and
mov
popa
jae
inc
jl
es
sbb
gs
or
sahf
mov
or
dec
fmul
mov
add
int3
jl
sub
and
sub
and
pop
push
int3
cmp
cmp
or
xor
or
dec
jnp
xchg
test
inc
inc
inc
mov
sldt
pop
pushf
clc
push
jae
mov
pop
mov
inc
packssdw
cmps
paddsb
pmulhuw
ins
mov
sbb
mov
pop
out
push
xchg
and
mov
add
xor
push
jle
cmp
xor
xor
sbb
scas
jno
dec
push
arpl
or
mov
mov
inc
or
or
js
aas
popa
and
call
lea
loopne
sub
xor
call
adc
push
mov
push
(bad)
mov
add
int3
ja
xor
or
daa
test
inc
inc
out
(bad)
mov
mov
repz
mov
inc
and
lods
loope
xchg
hlt
add
ret
inc
sub
sahf
mov
mov
pusha
shr
imul
(bad)
mov
scas
pop
aaa
pushf
rcl
push
mov
mov
addr16
push
nop
cwde
scas
jbe
jne
inc
sub
push
push
gs
push
xor
je
test
shr
adc
je
jns
pop
icebp
add
add
sbb
test
xor
dec
jns
test
fistp
cdq
xchg
jnp
cs
add
jnp
pop
xor
js
adc
cmps
push
ins
imul
inc
fcomp
les
test
jp
fwait
push
bound
push
mov
mov
mov
shl
mov
mov
mov
(bad)
and
mov
pusha
and
fdivr
shl
dec
add
ret
wbinvd
dec
dec
fstp
cwde
outs
cld
ds
adc
mov
and
idiv
sub
std
sub
in
xor
mov
enter
inc
xchg
jae
mov
in
inc
add
fsubr
dec
xlat
sub
inc
jnp
xor
or
push
ins
popa
jmp
inc
shl
fld
cwde
(bad)
inc
retf
gs
retf
or
xor
mov
out
mov
test
adc
jne
pop
rcl
inc
repz
add
jbe
jmp
and
dec
nop
or
es
addr16
mov
add
xor
or
jg
mov
test
inc
dec
ins
aad
add
jns
lock
nop
push
xor
pop
pop
inc
dec
jo
imul
sbb
jbe
and
cmp
push
neg
pop
ror
or
xchg
xchg
push
and
mov
push
fld
hlt
mov
adc
les
jae
adc
(bad)
push
push
clts
or
adc
mov
sbb
cmp
cmp
add
nop
xchg
add
inc
hlt
loope
call
pop
adc
xchg
jae
cmc
sahf
add
add
outs
push
outs
ficomp
sub
inc
(bad)
mov
(bad)
fild
arpl
mov
add
inc
cdq
cmps
pop
mov
popa
jns
imul
xor
add
ins
inc
mov
aaa
push
inc
imul
outs
jae
dec
xor
outs
fs
mov
cmp
fs
dec
ins
gs
mov
(bad)
test
xlat
or
icebp
lods
xchg
or
(bad)
(bad)
fisttp
das
mov
push
jp
push
pop
jl
fistp
ret
xchg
nop
(bad)
jnp
push
mov
hlt
ds
xchg
sub
enter
and
aam
(bad)
stos
push
mov
lock
inc
ds
xor
jmp
adc
dec
xlat
rcl
movs
ret
cmp
mov
iret
fs
pusha
ins
ss
loope
and
pop
shl
sbb
adc
push
cmc
loop
push
cmp
hlt
test
xor
or
jo
lea
mov
inc
fs
push
push
jo
sbb
inc
push
aas
sub
jecxz
inc
ins
dec
inc
fidivr
push
dec
pop
add
cmp
add
outs
cmps
pop
jae
pushf
jo
je
inc
jnp
ins
ins
ds
or
loopne
push
sbb
inc
gs
xor
lock
push
add
push
add
loope
push
and
inc
mov
dec
out
das
mov
push
add
les
mov
dec
jp
test
fs
(bad)
and
(bad)
out
neg
daa
cwde
ret
sub
push
jb
stos
xchg
loop
cwde
(bad)
mov
cs
push
push
sub
repnz
call
fdivr
inc
push
add
pushf
and
test
or
mov
xor
sbb
push
sysret
mov
xlat
das
mov
mov
sbb
sbb
inc
or
and
push
pop
push
pop
and
and
stos
(bad)
retf
movs
and
and
jo
adc
outs
in
sub
mov
or
enter
sbb
pop
jle
enter
(bad)
in
sbb
mov
je
into
bound
xor
adc
pop
(bad)
cwde
mov
xor
cmp
imul
xor
or
adc
jae
aam
pop
ds
inc
or
or
ja
inc
pop
mov
inc
push
rcr
(bad)
out
ds
xchg
inc
xchg
sbb
xor
pop
dec
adc
pushf
gs
stos
sbb
enter
sbb
adc
mov
add
mov
fdiv
outs
cdq
dec
add
lods
dec
push
lahf
adc
vpshuflw
push
addr16
es
das
jg
jp
or
(bad)
rcl
cmp
cs
push
int3
pop
out
into
inc
mov
clc
stos
imul
retf
icebp
push
mov
push
mov
retf
xchg
sub
mov
ins
ins
hlt
sar
mov
push
push
push
or
lods
push
dec
ins
mov
push
mov
inc
mov
add
push
ins
jnp
pop
jecxz
test
push
mov
and
jbe
daa
call
push
or
out
dec
fcmove
imul
add
xor
out
jnp
pushf
add
push
push
inc
jne
push
out
inc
call
pop
mov
cmp
xor
mov
jo
ins
mov
cwde
jb
adc
sbb
adc
add
ja
cs
add
aad
mov
and
adc
(bad)
shl
outs
and
jmp
das
and
ja
push
push
(bad)
dec
and
movs
int3
mov
fadd
or
pop
retf
jg
push
sub
push
sbb
pop
add
adc
leave
add
dec
scas
ror
add
sbb
sbb
xchg
movs
or
loope
popa
xor
add
or
jo
pop
push
adc
stos
mov
dec
mov
cmp
xor
adc
sub
mov
fnstsw
and
adc
push
loope
loop
outs
mov
pop
inc
mov
add
jecxz
push
pop
mov
xchg
out
lods
adc
xchg
ja
or
push
enter
hlt
pop
aad
inc
nop
push
cmc
mov
mov
int3
push
push
cwde
out
add
mov
pop
loop
popf
push
daa
jle
movs
push
jb
push
icebp
add
aaa
pop
xchg
hlt
into
loopne
inc
cmp
cs
add
dec
sbb
sar
retf
push
cmp
popf
inc
or
cli
inc
(bad)
jo
arpl
test
xor
push
mov
xchg
add
jp
jno
jno
ins
xor
imul
push
stos
sbb
jo
sbb
pop
dec
jbe
jnp
add
push
scas
sub
xor
enter
or
push
rol
call
add
cmp
jo
xlat
dec
cmp
push
mov
cmps
das
mov
xor
shl
cmps
pop
inc
cmps
or
ret
lock
sub
xchg
sbb
pop
aaa
pusha
test
pop
push
and
sbb
add
int3
aad
add
push
push
cmp
mov
cmp
ja
cmp
out
call
jo
add
stos
rcl
jae
cmp
mov
pop
sub
fs
pushf
cmp
mov
sti
add
mov
push
sub
pop
add
and
pop
mov
out
push
mov
rol
js
lea
add
xlat
bound
outs
jo
clc
and
loop
in
or
data16
pop
stos
fbld
push
adc
dec
push
jno
ret
adc
inc
lds
lods
dec
fwait
and
fwait
lods
sbb
dec
jmp
je
outs
or
shl
(bad)
cmp
test
int
add
inc
rcr
mov
shr
ror
adc
mov
push
mov
sub
mov
add
pop
push
pop
or
inc
and
jge
push
cmps
inc
push
into
or
mov
push
xor
pop
add
lea
push
js
push
xor
sub
cmp
and
movs
clc
adc
add
cli
and
sbb
dec
ins
jnp
cmp
or
sbb
out
ja
add
aaa
jbe
dec
pusha
xor
sti
cmp
xor
xor
jbe
aas
ins
fld
ins
mov
inc
adc
pop
and
and
adc
mov
cmp
mov
xchg
adc
jecxz
gs
xchg
imul
cmp
jb
inc
mov
aas
or
sbb
jae
lea
pop
xor
mov
xor
pop
jbe
sbb
pop
or
daa
pop
or
movs
adc
push
jne
adc
shr
mov
and
mov
rcr
pusha
pop
adc
sahf
call
cmp
xor
or
test
mov
sbb
sub
mov
adc
jns
pop
gs
outs
sbb
mov
aas
adc
popa
dec
jne
dec
sub
jno
fimul
jb
gs
sbb
mov
out
pusha
add
inc
dec
jo
ins
mov
pcmpgtw
in
dec
push
cmp
or
mov
adc
pushw
sbb
mov
mov
aam
adc
mov
sbb
add
inc
outs
cmp
out
jns
xchg
pop
std
jg
or
outs
fist
add
(bad)
out
or
add
out
sub
mov
mov
ss
nop
fs
ret
fs
adc
mov
cmps
xor
and
aam
lods
jb
push
dec
bound
jae
data16
clc
fidiv
sbb
dec
jae
push
sbb
test
cmp
or
sar
adc
cwde
xor
out
popf
dec
pop
(bad)
pop
in
xlat
shr
jo
cmp
inc
(bad)
push
outs
mov
mov
fsubr
add
push
pushf
mov
cdq
push
add
or
push
add
or
jne
pop
sub
pop
hlt
push
pushf
dec
cwde
xchg
push
and
out
imul
call
popf
in
jnp
lock
push
push
lods
in
idiv
jle
ds
loopne
push
jo
sti
out
ins
out
pushf
lock
push
adc
mov
jle
rol
mov
(bad)
retf
add
add
pusha
(bad)
repz
sub
mov
push
pop
mov
fsub
dec
cs
sub
or
inc
sub
cmp
mov
ja
sub
popa
add
or
sub
jae
ret
pop
xor
sbb
push
add
sbb
jnp
nop
test
and
mov
and
and
inc
inc
jmp
inc
out
bound
mov
xor
and
xor
fstp
push
stc
push
push
and
in
dec
xor
loope
pop
jp
outs
mov
jbe
mov
push
mov
dec
push
repnz
pop
xor
add
jne
mov
mov
(bad)
mov
or
int3
dec
xor
cwde
sbb
int3
xor
jo
rol
jp
data16
xor
scas
loopne
fdiv
cmc
and
lods
jmp
or
cmps
mov
pop
mov
outs
jo
shr
push
aad
sub
sub
ja
xchg
cmps
iret
dec
add
jno
stc
cmp
adc
and
cmp
sub
push
mov
into
jmp
pop
fld
mov
jb
xor
fimul
push
cmp
fidivr
sbb
mov
sbb
mov
add
fmul
sbb
push
dec
mov
dec
daa
or
nop
and
dec
mov
push
std
daa
mov
dec
dec
push
push
fmul
retf
mov
ror
bound
mov
push
dec
push
call
mov
push
inc
ds
repz
cs
jnp
(bad)
jp
inc
fs
sbb
jno
mov
pop
inc
sub
in
clc
adc
push
out
shl
sbb
out
adc
adc
sbb
mov
das
clc
or
adc
add
(bad)
in
push
pop
push
int
adc
jae
push
xor
xor
or
cmp
js
add
push
pop
xlat
dec
rol
shl
push
and
fdivr
or
add
adc
add
push
push
inc
jae
addr16
mov
imul
test
jo
jo
push
jb
retf
push
inc
ror
aaa
mov
pop
inc
dec
and
inc
pusha
cmp
mov
inc
push
or
adc
sub
add
xchg
test
cmp
lock
sbb
xor
adc
rcl
add
inc
clc
sub
enter
stos
pusha
inc
popa
add
ja
add
or
push
jnp
xchg
sbb
inc
jae
ins
gs
mov
outs
addr16
ret
lods
enter
je
sub
or
sbb
sbb
inc
inc
sbb
or
cs
inc
fadd
fbstp
push
inc
inc
inc
inc
jg
(bad)
inc
cs
and
dec
ins
xchg
cs
inc
inc
mov
inc
inc
inc
inc
inc
imul
adc
cmp
cmc
test
push
mov
mov
xchg
push
fsub
push
push
js
je
push
mul
dec
jne
push
movs
leave
jno
push
ins
aas
sbb
test
mov
popf
push
jne
push
jo
xchg
bound
pop
test
dec
add
dec
int3
push
dec
cmp
jecxz
push
push
mov
inc
dec
dec
push
sub
mov
xchg
(bad)
mov
les
inc
(bad)
or
les
push
and
dec
jae
xor
aaa
pop
ud0
dec
adc
pop
inc
adc
shl
jns
dec
mov
out
inc
pusha
add
or
adc
sar
jecxz
scas
xor
adc
bnd
push
daa
jae
pop
inc
es
sbb
or
es
inc
or
(bad)
(bad)
fmul
push
sub
pop
xchg
fwait
adc
dec
inc
inc
les
push
sub
arpl
pop
inc
push
sti
jmp
in
pop
data16
dec
inc
outs
cmp
ficomp
dec
or
stos
cs
push
xlat
aam
xor
jecxz
push
push
mov
push
adc
mov
es
jecxz
iret
push
inc
sub
and
add
repz
mov
xchg
imul
daa
jo
cs
ss
adc
out
jns
mov
xchg
aas
push
cmp
push
xchg
sbb
nop
push
add
call
or
fadd
sbb
dec
out
daa
hlt
mov
fdivr
or
inc
inc
js
popa
cmp
repz
pusha
mov
inc
icebp
add
fist
call
xchg
inc
fldenv
je
push
(bad)
and
or
dec
fiadd
sbb
cmp
mov
pop
jb
dec
popa
dec
daa
adc
daa
sbb
or
lahf
movhps
shl
push
add
inc
dec
cmp
iret
lock
in
push
add
psubsb
mov
jg
mov
fist
add
push
push
inc
jne
ret
add
pop
maskmovq
mul
loop
mov
cmps
inc
pop
add
pop
shl
addr16
retf
rcl
aad
adc
push
and
(bad)
dec
sub
add
cs
pop
push
aas
and
mov
pop
inc
sub
push
jnp
add
or
pushf
push
inc
cmps
aas
pop
or
add
add
jmp
sbb
mov
sbb
or
sub
pop
jmp
dec
inc
adc
mov
aad
push
mov
dec
(bad)
fwait
push
in
push
jnp
or
inc
stos
xor
jmp
rol
mov
aas
or
bound
je
stos
lods
retf
dec
or
push
push
fist
add
and
aas
pop
cmp
inc
or
or
push
ror
sahf
inc
push
inc
or
mov
xchg
rol
jmp
and
repnz
mov
jmp
movs
aam
sub
pop
fadd
js
loopne
das
(bad)
(bad)
mov
push
int3
fbld
mov
call
push
push
movs
xlat
push
fdiv
inc
(bad)
aam
add
adc
sbb
sbb
mov
cmp
sub
jecxz
inc
or
xor
sar
movs
pop
sahf
pop
pop
sub
xor
stos
xor
sub
inc
call
push
mov
rcr
gs
fist
mov
imul
test
push
push
xor
loopne
sbb
push
add
out
push
test
fiadd
in
jmp
push
sbb
pop
mov
fadd
xchg
rcr
sub
(bad)
shl
mov
movs
mov
jne
ins
adc
pop
pusha
push
dec
pop
inc
add
push
(bad)
rol
ror
add
adc
mov
addr16
(bad)
push
pop
pop
fild
jne
pop
jo
and
fisubr
add
data16
mov
cmp
mov
inc
or
add
xchg
xchg
dec
mov
push
pop
xchg
mov
scas
mov
fild
std
dec
push
pop
adc
dec
or
in
rol
sbb
xchg
aam
push
call
add
add
push
rcr
xchg
push
xor
das
mov
sti
add
push
xlat
sub
add
mov
adc
and
aas
sub
shl
jne
aaa
(bad)
mov
mov
loopne
cmp
aam
pop
mov
mul
retf
xchg
inc
ins
mov
aam
sub
add
sbb
inc
shl
sbb
jne
ins
xchg
jnp
add
or
push
adc
fild
inc
adc
shl
mov
mov
cmp
push
jnp
push
in
rol
loop
cmp
add
sbb
pop
push
push
or
inc
jnp
add
fs
test
pop
je
and
xchg
pop
dec
or
inc
or
inc
faddp
xor
adc
dec
pop
or
push
in
adc
xor
push
hlt
es
das
sbb
dec
mov
mov
adc
jle
xchg
cmp
pop
jbe
add
jl
mov
inc
outs
aam
mov
add
push
sbb
dec
aas
fiadd
scas
xchg
push
inc
mov
loope
inc
ret
push
push
inc
ja
fild
sub
addr16
add
ret
shl
mov
cmp
sub
pmaxsw
loopne
fs
mov
xor
shl
push
ja
popf
mov
fimul
fild
inc
adc
mov
fcmovb
aam
int3
xrelease
sub
sub
fbstp
rcl
imul
adc
xor
iret
rcl
push
add
push
inc
pop
test
cmps
sbb
out
icebp
sbb
cmp
repnz
cmp
push
push
out
pop
ret
add
cwde
push
int
xchg
popa
mov
adc
pop
xchg
fbld
add
sbb
inc
bound
fbstp
jb
add
mov
jge
xlat
ins
jbe
xchg
pop
test
lsl
mov
adc
sbb
rol
mov
push
rcr
sbb
or
sbb
fxch
fst
or
inc
sub
aas
pop
jge
fldcw
push
push
add
mov
inc
add
add
add
sbb
div
leave
mov
mov
pandn
imul
sbb
imul
mov
adc
pop
add
out
jg
mov
add
cmp
jne
(bad)
push
(bad)
sbb
mov
sbb
(bad)
xchg
add
jne
xchg
fild
repz
lock
ret
mov
push
mov
fcom
jl
clc
std
push
push
xor
mov
std
xor
mov
mov
ins
add
fadd
call
or
push
push
call
daa
mov
mov
das
cmp
pop
jnp
mov
mov
hlt
lds
add
mov
xchg
jmp
push
out
mov
into
loopne
rol
pop
pop
pop
sbb
ins
jo
push
mov
jg
mov
or
call
ret
lea
out
adc
jne
ss
cmp
retf
movs
pusha
add
add
movs
cs
jg
cld
pusha
dec
retf
mov
jge
out
mov
mov
ror
stc
cs
push
mov
mov
jno
ins
clc
inc
mov
push
adc
push
and
ret
popf
inc
xor
sub
sbb
loop
mov
clc
dec
mov
xor
xchg
in
rcl
xor
mov
push
mov
call
cmp
sbb
(bad)
fdiv
push
clc
mov
clc
pop
in
adc
in
iret
in
sub
pushf
lock
pop
lock
mov
add
fimul
push
imul
pop
hlt
mov
call
jmp
clc
mov
mov
cld
dec
add
or
(bad)
sub
idiv
sub
inc
(bad)
jmp
mov
mov
das
pop
enter
rep
push
hlt
sbb
ret
add
sub
push
jg
retf
mov
fld
adc
lock
(bad)
pop
cmp
dec
clc
push
push
movs
mov
lea
mov
cmps
repnz
neg
cmp
mov
call
mov
stc
sbb
dec
jne
cmp
jbe
sbb
sti
call
xor
mov
inc
sti
mov
lods
cmp
sar
ror
sub
push
ffreep
rcl
jp
jl
cwde
jl
jb
mov
fldenv
dec
dec
jmp
sbb
(bad)
fisubr
fsubp
pop
ja
xlat
fs
cld
test
je
cmps
dec
outs
xor
icebp
sahf
mov
loop
push
ja
mov
fs
cwde
add
sub
jbe
stc
inc
lock
loopne
fs
scas
dec
mov
or
je
aas
sahf
ss
mov
inc
mov
cmp
sub
rcl
outs
xlat
mov
(bad)
iret
sub
cmp
call
mov
and
jle
iret
dec
and
hlt
fs
pop
mov
inc
fs
(bad)
push
sub
and
or
shl
mov
fcomp
bound
or
push
jmp
jne
push
outs
jo
jae
dec
(bad)
jmp
push
inc
or
mov
clc
cmp
jg
out
ret
xor
mov
mov
retf
fisub
sub
call
sbb
jl
push
cld
jmp
push
pop
or
jl
inc
xor
sbb
push
out
mov
popf
aad
adc
dec
jne
pop
(bad)
mov
xchg
jecxz
xor
ins
inc
aas
jmp
stc
inc
sub
pop
or
cmps
inc
sbb
adc
rcl
jnp
adc
test
and
ror
mov
push
sbb
push
sub
inc
daa
or
or
add
inc
adc
rcr
sar
in
adc
inc
dec
inc
cmp
or
ja
inc
gs
outs
ins
imul
popf
and
or
or
into
outs
ja
adc
js
xchg
pop
xchg
xchg
or
push
pop
icebp
inc
or
sti
movs
test
adc
or
mov
xchg
ror
stos
sub
or
cmp
xor
pop
xchg
das
sbb
sbb
enter
loopne
and
xchg
mov
mov
add
inc
scas
rcl
or
push
gs
pusha
and
call
sbb
pop
inc
and
mov
ror
inc
push
pop
or
push
loopne
dec
or
popa
add
pop
or
pop
jae
push
fcmovnbe
jb
add
mov
es
std
das
ja
dec
xor
ret
test
mov
dec
dec
loopne
jmp
jno
cmp
outs
outs
clc
or
addr16
or
fisubr
xchg
jbe
js
dec
push
imul
jmp
das
push
sbb
jmp
push
mov
loopne
mov
addr16
sbb
push
imul
out
mov
pop
mov
mov
push
inc
push
call
push
jb
mov
test
push
push
or
cdq
pusha
push
or
mov
or
push
inc
pop
pop
test
or
sub
mov
or
test
add
loopne
popa
fs
push
jo
dec
or
push
add
loop
dec
nop
push
retf
pop
push
enter
xchg
add
jecxz
push
ins
mov
add
pop
jno
sbb
push
in
mov
inc
add
xor
push
xor
pop
and
mov
fwait
pop
ret
test
mov
outs
and
xchg
push
mov
and
mov
nop
outs
push
sbb
or
mov
adc
mov
rcr
pop
lock
jns
jmp
sub
pop
adc
mov
test
cmp
sbb
mov
or
hlt
mov
pop
(bad)
push
and
jge
jne
lock
in
outs
int3
cmp
or
inc
and
adc
inc
or
adc
(bad)
in
mov
mov
inc
sub
ja
bound
pusha
or
ds
push
push
add
clc
adc
cli
xor
rcr
inc
hlt
dec
cmp
clc
mov
adc
mov
jae
jmp
and
mov
daa
mov
dec
hlt
(bad)
push
push
cwde
add
sub
sub
dec
dec
aam
call
mov
mov
push
mov
scas
retf
not
and
cmp
shr
sbb
add
mov
inc
mov
push
shl
ss
hlt
ret
fimul
lods
push
aam
pop
mov
aam
or
out
mul
js
and
js
xchg
in
out
fist
push
dec
jns
jmp
push
xor
and
(bad)
mov
sub
pop
mov
cmps
ret
mov
jmp
(bad)
jecxz
xchg
mov
adc
cli
dec
fisttp
fwait
lock
clc
cmp
jne
adc
inc
adc
stos
jmp
and
xor
pop
(bad)
les
into
sbb
fiadd
out
(bad)
outs
sub
daa
mov
add
hlt
mov
or
inc
or
pusha
inc
out
sahf
or
jl
jne
or
pop
loop
pop
sbb
dec
retf
jne
cli
push
push
push
jecxz
sub
in
lock
(bad)
jge
jle
cdq
or
shr
call
data16
inc
add
inc
jnp
aas
or
dec
mov
push
test
pop
sub
push
es
call
add
add
or
cmp
fisub
and
call
inc
sbb
or
dec
cs
dec
dec
jnp
pop
mov
(bad)
add
cli
mov
cmp
or
and
push
xor
push
pop
cmp
sar
popa
mov
and
clc
jo
test
jne
pushf
fbld
shr
out
(bad)
jmp
data16
jb
ss
jno
lahf
in
pop
retf
adc
retf
mov
jg
adc
and
mov
xor
and
aaa
cmp
ins
setne
dec
(bad)
cdq
(bad)
xchg
inc
test
jne
adc
jl
and
add
jb
xor
imul
jae
add
add
sbb
or
add
enter
out
idiv
cmp
data16
inc
dec
mov
push
inc
push
leave
mov
out
mov
out
xor
dec
adc
push
aas
sbb
pop
iret
mov
sbb
or
xchg
cld
outs
(bad)
outs
mov
adc
adc
cmp
adc
lea
xchg
outs
je
test
adc
sub
adc
xor
retf
push
or
mov
loopne
push
xor
push
jle
mov
push
jo
popa
add
xor
sbb
pop
ret
lahf
add
sbb
lods
xchg
popa
xlat
or
bound
test
ret
add
shl
or
dec
fcmovnbe
push
adc
adc
inc
or
adc
movs
and
retf
mov
fld
push
out
add
or
loopne
inc
add
mov
pop
mov
mov
mov
pop
scas
iret
shl
(bad)
dec
retf
cmp
hlt
rol
xor
into
shr
in
mov
jmp
push
pusha
push
pop
push
retf
lahf
inc
je
adc
add
add
sub
std
adc
xor
pop
pop
or
push
cmps
mov
dec
xchg
mov
imul
rcl
dec
add
ret
xchg
mov
xchg
pop
cwde
pusha
mov
mov
jns
fwait
test
pcmpeqd
imul
xlat
daa
repnz
cwde
mov
shr
in
inc
add
(bad)
jmp
call
xchg
jo
int3
shr
pop
push
inc
jb
xchg
pop
dec
sub
or
jl
jo
mov
adc
push
ins
sbb
movs
or
ins
imul
sub
jnp
xchg
sub
sub
cwde
das
adc
ja
push
adc
neg
sbb
enter
nop
add
idiv
inc
inc
imul
ficomp
sub
jne
push
xchg
sub
fisubr
add
push
aaa
push
add
sub
leave
push
into
aam
ja
fsub
ficomp
or
fidivr
getsec
scas
loope
ss
mov
aaa
rol
gs
outs
or
cmp
stos
gs
jae
add
sbb
leave
or
mov
ret
jp
cmp
adc
repnz
fsubr
je
mov
pop
xchg
outs
cmp
sti
and
ret
mov
or
js
push
sti
and
test
sub
in
sbb
push
in
sbb
pop
pop
test
rcr
jl
jno
fnstenv
xchg
pop
aaa
mov
fstp
or
add
mov
inc
inc
adc
jo
push
or
lock
es
das
cmps
push
push
mov
inc
adc
push
cld
sbb
and
inc
pop
mov
(bad)
(bad)
mov
cmc
pop
mov
inc
and
scas
and
iret
mov
fs
mov
and
sti
jne
imul
and
pop
dec
mov
sub
mov
xor
dec
in
pusha
sub
outs
ja
cmp
or
sub
push
cmp
push
shl
xor
cdq
dec
xor
sub
add
cmp
in
mov
sub
iret
push
cmovbe
shld
push
inc
jle
fs
pushf
sub
push
or
addr16
add
aad
push
push
pop
shr
jo
mov
repz
or
loope
sub
and
and
and
mov
and
add
mov
mov
push
jecxz
mov
in
imul
add
adc
add
sub
loop
or
pop
repz
push
nop
and
sub
sbb
add
xor
shl
div
push
stc
jae
jb
daa
inc
sti
daa
or
std
ja
adc
add
adc
add
sub
imul
daa
sub
sub
ja
pushf
inc
nop
retf
jmp
gs
dec
and
and
cmps
adc
jno
dec
popa
fwait
push
ret
jno
mov
rol
jno
ins
fdiv
or
push
jno
mov
pop
and
popf
pop
xlat
or
sub
pop
sub
pop
popf
mov
jae
push
push
ret
aad
imul
cld
aaa
stos
inc
jnp
inc
ins
and
or
movs
jmp
pop
ja
pop
push
pop
push
and
or
cdq
push
dec
pusha
push
jns
push
fist
adc
push
pop
add
retf
xor
add
stos
inc
push
dec
cmc
inc
sub
aas
aad
frstor
movs
pop
cmp
dec
aas
enter
xor
mov
js
sahf
sbb
andps
(bad)
loopne
jo
fbld
sbb
pop
mov
or
or
gs
ins
(bad)
fadd
xor
pop
mov
dec
mov
xor
push
pop
fdivr
xchg
jns
sub
sahf
pop
imul
popa
pop
addr16
sbb
jo
lods
adc
or
jae
jg
mov
and
mov
in
push
punpckldq
adc
or
pushf
not
aas
or
mov
push
push
jb
pop
dec
popa
dec
jne
sbb
outs
sbb
or
xor
pop
jg
push
mov
sbb
fcomp
sahf
and
in
data16
xchg
push
jl
xchg
fcomi
or
das
push
je
push
hlt
xor
pop
add
xor
sbb
xchg
xor
ret
daa
xor
mov
adc
or
lea
and
nop
and
or
test
test
rol
and
mov
and
fidiv
ins
jno
aaa
cwde
jo
inc
jo
imul
stos
(bad)
daa
pop
cmps
and
push
outs
adc
or
cmovbe
cmp
adc
gs
inc
jb
stos
cmp
imul
loope
or
sbb
lea
push
adc
ret
iret
jnp
sbb
adc
dec
dec
jo
jnp
push
and
lahf
pop
mov
aad
push
add
sbb
idiv
or
hlt
sbb
test
das
pop
loop
mov
sub
in
xor
ins
push
clc
aaa
outs
cmp
mov
mov
stc
popf
cmp
fsub
mov
and
push
mov
xchg
xchg
xchg
inc
xor
cmp
cmp
jmp
cmp
dec
mov
andps
jb
ss
mov
lock
xor
inc
xor
lea
push
add
leave
lds
pusha
xor
and
xchg
xchg
push
bound
outs
and
add
inc
test
ret
or
inc
fiadd
mov
mov
pop
cmp
test
int3
add
add
cmp
scas
fsubr
xchg
adc
or
cmp
inc
push
push
add
sub
mov
mov
or
scas
add
mov
mov
neg
mov
cmp
and
dec
(bad)
outs
out
aaa
add
nop
mov
pop
add
add
add
test
arpl
ds
pusha
out
and
sub
rcr
sub
adc
mov
fdivp
fucomi
scas
mov
sbb
adc
xor
inc
repnz
enter
mov
xchg
add
push
xor
jge
fwait
rcr
fiadd
ins
test
push
ins
sub
sub
sbb
test
fs
dec
dec
test
test
test
and
pop
(bad)
jne
adc
scas
add
add
test
movs
or
das
loopne
xadd
add
and
data16
shl
and
fdivr
pop
jg
jmp
cmp
sbb
shl
jo
mov
out
pop
cwde
mov
data16
sbb
enter
mov
popa
mov
adc
pop
adc
xor
cmp
loope
test
add
inc
sti
sbb
je
daa
mov
add
loope
xchg
fwait
sti
int
mov
mov
cmp
scas
popa
or
cdq
add
scas
std
scas
ret
addr16
jl
mov
jp
mov
pushf
scas
xor
scas
daa
fcomp
mov
mov
or
daa
mov
jp
mov
jae
xor
xor
dec
scas
and
cmp
pop
xor
aas
dec
add
and
add
adc
sub
add
inc
(bad)
cld
js
int3
rcl
out
lds
jmp
ret
adc
push
mov
dec
xor
inc
cwde
pop
push
pop
(bad)
or
out
pop
ret
pop
mov
pusha
les
push
pop
jbe
xor
test
fs
push
sub
mov
adc
and
addr16
mul
mov
call
lods
add
das
or
mov
ret
stos
and
mov
adc
mov
or
pop
xchg
pop
xchg
gs
xchg
pop
xchg
retf
and
nop
pop
xchg
pop
xchg
sub
sbb
pop
or
and
add
add
push
sub
test
adc
sub
sub
mov
sub
fcmovb
sub
cmp
inc
or
push
cmp
loop
and
mov
fmul
adc
adc
jne
popa
adc
ins
adc
push
mov
nop
das
push
mov
push
xor
call
mov
pop
cmp
adc
xchg
popa
sub
imul
or
mov
fstp
popa
mov
pop
mov
mov
mov
or
cdq
std
in
les
adc
sbb
and
jp
sub
int
hlt
hlt
hlt
hlt
and
jnp
adc
fwait
dec
neg
clc
mov
pop
mov
mov
loop
aam
lock
enter
lock
xchg
in
call
mov
mov
dec
imul
rcl
jge
mov
mov
out
movs
sub
dec
hlt
add
dec
xchg
or
inc
and
out
inc
or
or
or
fstp
pushf
ror
fs
aas
sub
fs
stos
stos
stos
pop
add
xchg
add
mov
push
and
xor
xor
out
mov
mov
jnp
xchg
jno
pop
and
cs
test
or
ja
mov
sbb
fwait
and
mov
loopne
std
push
call
xchg
mov
idiv
add
inc
or
int
js
jae
cmp
shl
sbb
sahf
jnp
dec
in
lahf
mov
lock
xchg
loopne
sbb
adc
loopne
loope
rcr
and
sub
dec
and
sub
cmp
mov
dec
xor
or
dec
and
shr
xor
xor
sbb
or
fnstenv
mov
add
xor
add
es
(bad)
es
std
sbb
sub
add
inc
and
push
test
pop
or
ret
(bad)
mov
inc
mov
mov
or
or
pop
arpl
mov
pop
xchg
popa
fcomip
ficom
fld
mov
jo
xchg
cdq
xchg
dec
or
mov
ins
mov
sbb
enter
scas
mov
push
push
xchg
lea
push
je
lea
imul
sub
jge
adc
add
ja
sbb
inc
add
and
and
push
rcr
jg
dec
or
nop
sbb
lea
mov
add
cs
or
mov
add
add
push
inc
cmps
xchg
adc
push
push
imul
ins
sub
sub
call
adc
sub
adc
(bad)
sub
pop
sub
pop
sub
sub
sub
sub
pop
xor
loop
aaa
data16
fcom
adc
lahf
rcr
jns
mov
iret
dec
clc
mov
dec
aam
cmc
rcr
cmps
lea
cmp
not
add
sbb
jbe
shl
inc
xor
ins
mov
push
nop
(bad)
mov
es
jbe
into
(bad)
pushf
adc
in
div
loopne
call
fistp
sbb
cmps
cmp
fstp
jo
add
or
fistp
or
xchg
fisttp
dec
sti
mov
loop
sub
push
pop
add
cdq
div
jge
xor
test
mov
sti
mov
jo
mov
and
iret
ret
cmp
repz
leave
jns
jns
idiv
mov
add
enter
and
mov
(bad)
dec
mov
mov
jb
dec
xor
dec
cli
int3
mov
push
push
fcom
mov
or
mov
inc
neg
int3
pop
imul
cwde
xor
iret
mov
clc
push
adc
adc
jo
push
adc
out
sbb
add
sbb
sbb
movlps
iret
sbb
and
sbb
daa
adc
xor
adc
frstor
xor
js
test
nop
inc
push
cmp
cmp
test
test
cmp
nop
test
test
mov
xchg
inc
test
cli
sbb
aaa
vmovlpd
adc
lods
adc
jno
jno
inc
sub
jl
scas
scas
jb
inc
or
adc
pop
xor
(bad)
or
popa
push
mov
fbld
das
pop
push
stos
mul
scas
lahf
or
mov
sbb
and
sbb
lahf
ja
dec
fcomp
loop
inc
lahf
sbb
(bad)
shl
movs
(bad)
shl
sub
ret
rcr
sub
xchg
or
aaa
sub
sbb
or
mov
arpl
jnp
and
and
mov
fwait
and
mov
sbb
mov
mov
jno
jno
mov
(bad)
push
aaa
push
pop
add
(bad)
push
aaa
(bad)
push
xor
(bad)
push
aaa
(bad)
xor
xor
pusha
ror
fnsave
arpl
or
jmp
int3
sbb
das
xor
xor
inc
and
aad
or
sbb
retf
pop
test
sub
sub
inc
push
pusha
and
sub
sub
or
pop
or
sbb
iret
dec
add
fucom
(bad)
cld
test
je
add
mov
mov
adc
mov
loop
loop
jmp
loop
sbb
je
mov
cwde
add
adc
pop
sub
sub
adc
sar
inc
ret
add
dec
fnstenv
add
jno
cmps
jbe
(bad)
inc
jle
push
and
cmp
shl
jbe
add
sbb
jbe
adc
sub
lahf
nop
and
or
nop
mov
mov
inc
or
sbb
or
jnp
js
adc
sbb
adc
adc
sbb
out
xor
movs
add
cmp
test
test
enter
test
mov
sub
inc
movs
rcr
xor
xor
inc
push
mov
pop
(bad)
pop
pop
ret
pop
sbb
add
push
std
pop
imul
imul
lods
imul
ffreep
(bad)
cmp
push
stos
in
sbb
fnstsw
and
xchg
ss
and
ret
and
add
or
adc
(bad)
push
xor
add
jnp
(bad)
jmp
or
fs
imul
gs
cmp
pop
add
add
inc
cmp
add
add
dec
add
ins
ja
sbb
daa
pop
aas
das
jo
inc
xor
mov
test
or
push
dec
pushf
jge
stc
cmp
repz
mov
mov
xchg
(bad)
pop
ret
sbb
pop
call
popa
pushw
add
jg
push
imul
outs
je
or
fs
in
cmovl
jne
and
outs
daa
xlat
and
adc
inc
ins
jne
and
fild
add
gs
push
jp
push
add
fs
sti
add
jl
inc
add
(bad)
out
push
dec
add
pop
out
sbb
je
das
add
push
inc
iret
ins
jbe
sbb
je
add
mov
adc
inc
push
repnz
add
jbe
sbb
xor
inc
imul
sub
or
test
or
addr16
inc
add
dec
in
inc
sbb
outs
jns
push
add
inc
and
ja
pop
pop
cmp
jmp
and
and
cs
ins
popa
imul
adc
faddp
mov
xchg
add
jno
ins
ja
daa
push
inc
das
cmp
cmp
fs
cmps
es
jo
add
add
imul
lods
inc
add
repnz
or
mov
jnp
dec
popa
js
sub
lds
inc
dec
bound
cwde
push
xchg
push
sbb
mov
popa
in
jp
jb
cmp
jo
mov
add
test
mov
lahf
or
and
jmp
sti
mov
inc
add
je
adc
ins
lock
popa
into
pop
add
loop
cld
jmp
or
inc
inc
bound
jb
jns
sub
xlat
inc
pop
cdq
imul
nop
add
or
mov
pop
add
or
or
xor
mov
push
ror
or
adc
fisttp
cwde
sbb
cmp
jne
lock
hlt
cmp
sete
mov
jb
sbb
mov
jmp
adc
xchg
or
add
jns
and
jg
xor
stos
mov
sbb
push
dec
and
adc
dec
jne
pop
stos
mov
jne
movaps
sbb
pop
cmp
mov
fidiv
sub
or
pop
sti
jmp
pop
adc
outs
push
loop
fild
lea
xlat
and
lock
push
xor
mov
push
mov
mov
inc
pop
lods
sbb
mov
pop
(bad)
fisubr
dec
jne
cmp
jne
mov
adc
mov
mov
push
cmp
push
mov
pushf
adc
inc
sbb
jno
hlt
inc
push
dec
inc
outs
std
fstp
cld
adc
jo
sbb
es
add
push
sti
in
xlat
push
mov
xchg
mov
cmp
call
icebp
lods
les
or
push
sbb
push
inc
push
or
in
sub
adc
push
adc
push
xor
adc
clc
mov
mov
mov
loop
or
adc
mov
cmp
or
rol
xchg
aaa
pop
dec
adc
je
jl
movs
inc
add
push
sar
or
inc
or
mov
push
lock
adc
jle
adc
adc
xchg
mov
add
or
add
pop
mov
(bad)
(bad)
cdq
bound
and
sahf
sbb
shl
rcl
mov
cmp
(bad)
xor
xchg
fidivr
neg
dec
jmp
dec
in
jle
lds
sbb
mov
push
sbb
loope
mov
stos
cmp
jo
cmp
mov
daa
test
adc
push
clc
or
in
add
nop
cmp
adc
pusha
repz
dec
mov
mov
xchg
mov
in
xchg
or
dec
loop
add
pop
or
nop
iret
fidivr
push
test
mov
push
inc
jno
cmp
adc
dec
push
call
(bad)
idiv
jmp
and
push
xor
xor
test
inc
sub
out
inc
ins
cmp
(bad)
int3
pop
das
jle
mov
push
dec
(bad)
jg
xor
or
or
cmp
inc
add
and
pop
push
lock
jae
xchg
mov
add
xchg
or
push
and
push
add
aas
pop
lock
mov
or
and
cmp
push
mov
nop
mov
loop
fimul
adc
push
and
dec
jl
inc
stos
js
scas
or
mov
arpl
jne
inc
push
adc
xchg
add
or
pop
xchg
cmp
cmps
push
out
adc
dec
add
push
out
ins
sti
(bad)
jnp
xor
dec
jne
inc
xor
adc
into
out
xchg
outs
inc
mov
fadd
in
shl
std
aad
pop
or
fsub
bound
push
xchg
push
sbb
(bad)
ss
jge
add
data16
jmp
and
je
(bad)
pop
std
aaa
or
sub
sub
add
dec
pop
add
add
mov
add
push
jg
les
add
push
add
sub
(bad)
push
clc
cs
pusha
fadd
jge
sub
(bad)
dec
xchg
in
retf
test
adc
push
push
push
mov
int3
push
mov
ss
cdq
sbb
fstp
mov
add
adc
push
sub
jmp
lock
dec
or
mov
daa
push
push
into
test
aam
not
adc
add
ret
clc
or
mov
mov
dec
add
inc
add
cld
add
into
adc
mov
mov
mov
enter
test
repz
add
inc
push
pop
aaa
mov
push
(bad)
ror
sbb
add
(bad)
aad
or
mov
mov
or
add
mov
jg
lods
jo
and
sti
sbb
sub
inc
or
loopne
addr16
and
jb
aas
ja
icebp
(bad)
xor
aam
inc
sub
pop
add
cs
add
mov
clc
fistp
cdq
xor
and
cmp
ja
test
cmp
jnp
in
xchg
sahf
mov
js
imul
ja
jecxz
pushf
jmp
scas
cmp
out
mov
pop
cmp
xlat
mov
daa
mov
popa
mov
sbb
into
loopne
or
cdq
fidivr
jmp
inc
clc
adc
jmp
pusha
in
clc
lods
fcmovb
or
dec
mov
shr
jmp
sub
jmp
ss
je
push
adc
pushf
enter
sbb
sub
push
enter
mov
dec
repnz
pop
fs
jno
outs
push
jns
ror
push
xchg
push
cmps
mov
jns
out
xlat
out
push
mov
aas
mov
retf
sub
push
mov
inc
rcl
sbb
adc
jns
addr16
adc
cwde
hlt
adc
sbb
hlt
ret
inc
jmp
xchg
ror
mov
rol
nop
inc
dec
sahf
push
mov
sbb
adc
out
or
push
push
or
or
repnz
fnstenv
adc
mov
inc
jo
dec
mov
jmp
scas
lock
mov
sub
or
loopne
pop
shl
out
push
aam
(bad)
sub
sti
retf
out
push
dec
jb
stc
sub
jae
sbb
mov
sti
or
xchg
rcl
mov
push
or
sbb
mov
xor
or
add
adc
pop
or
hlt
add
(bad)
lea
sub
add
dec
in
cmp
adc
fdivr
popa
push
ror
xor
adc
xor
ret
je
jb
int3
add
xlat
cs
xor
inc
add
and
mov
movs
shl
sbb
(bad)
out
adc
or
outs
scas
jmp
add
jmp
mov
popf
push
hlt
loopne
inc
rol
push
mov
sub
push
mov
mov
or
push
fsub
add
push
(bad)
xor
inc
adc
sbb
sub
push
jmp
fcmovu
mov
cmps
lahf
xchg
xor
in
add
add
sbb
loopne
fsub
repz
xor
sbb
mov
jmp
and
loope
inc
inc
pop
iret
inc
inc
pop
xor
or
jecxz
push
xor
call
lods
push
sbb
or
inc
or
(bad)
push
jo
pusha
mov
push
pop
jecxz
cmps
and
into
(bad)
nop
scas
add
xlat
sbb
or
fs
sbb
sahf
iret
xor
leave
xchg
mov
rol
cmp
mov
call
adc
add
and
mov
cli
push
push
loop
clc
or
loop
or
ja
mov
or
push
or
add
jecxz
cmp
lea
mov
or
ss
test
and
mov
xchg
sub
(bad)
fsubr
daa
mov
clc
adc
fcom
cli
imul
(bad)
iret
mov
cli
dec
adc
sbb
cwde
int3
jbe
nop
or
mov
call
int3
pop
sub
jnp
add
cmp
xor
jmp
lea
mov
adc
jp
cmp
jne
mov
dec
add
dec
adc
mov
cld
add
inc
cmp
or
jmp
mov
xchg
sub
push
jge
outs
and
das
inc
add
or
and
add
add
cmp
test
cmp
jg
mov
xor
add
pop
lock
dec
push
nop
add
sti
loop
ins
daa
add
push
lea
imul
adc
mov
inc
rcl
adc
sar
arpl
lea
push
clc
sbb
(bad)
inc
lea
outs
mov
jp
push
lods
loopne
cmp
mov
mov
push
mov
lods
lock
mov
popf
dec
stos
aad
push
inc
dec
add
add
dec
lock
test
mov
fild
sbb
or
push
adc
push
enter
mov
pcmpeqd
aaa
adc
pop
test
test
outs
stos
test
mov
or
inc
je
cmp
mov
inc
xor
sbb
push
es
or
jle
mov
inc
pop
cmp
ret
push
popa
pop
pop
(bad)
push
fist
loopne
cmps
fstp
inc
xor
push
js
mov
jl
push
in
xchg
popa
pusha
mov
dec
lock
daa
out
mov
lods
stos
pusha
sub
pop
hlt
or
fwait
cmps
loop
outs
push
pop
shl
add
inc
pop
adc
mov
or
(bad)
cdq
lds
jg
dec
test
jl
inc
sub
or
push
cs
ret
fidiv
mov
pop
ficomp
aas
pop
mov
jmp
jne
fmul
aas
lods
xchg
inc
pop
out
push
dec
hlt
cmp
dec
fist
jnp
adc
dec
push
sahf
(bad)
hlt
bound
pop
aam
add
sbb
lods
js
push
shl
inc
gs
push
sub
scas
icebp
pusha
das
adc
jl
fisub
sub
xchg
jecxz
mov
add
add
std
ja
push
(bad)
les
arpl
imul
aas
lods
fwait
adc
sbb
xor
sub
push
mov
or
add
mov
inc
or
bnd
push
push
test
dec
adc
cmp
and
add
sub
pop
loop
pop
push
jo
sbb
popa
xchg
(bad)
pusha
mov
xchg
push
popa
into
ds
adc
pop
sbb
sub
inc
mov
rcr
jl
pop
jg
icebp
out
xor
xor
push
or
add
clc
mov
mov
pop
and
cld
mov
loopne
shl
test
aad
rol
out
add
xor
push
mov
test
not
sbb
pop
stc
imul
sbb
je
xlat
leave
ins
ret
clc
xor
and
push
rol
les
push
sbb
call
or
sbb
and
adc
lock
mov
mov
outs
jbe
jne
xor
stos
jbe
pop
add
cmps
aas
imul
stos
mov
jmp
inc
shl
push
mov
fcomp
sub
push
jg
and
mov
jg
lock
cmp
jl
and
rdmsr
pop
cmps
inc
les
cmp
mov
movnti
iret
inc
lock
pop
jp
push
cld
cmp
jl
jns
in
neg
out
sbb
dec
pushf
ror
fwait
or
inc
pop
test
jg
mov
pop
sbb
pushf
add
add
sbb
cmp
into
or
inc
repnz
std
xor
dec
cmp
jne
inc
ret
cmc
test
ror
test
enter
in
imul
xchg
or
mov
sbb
js
test
dec
pop
push
in
adc
ja
fsubr
js
mov
inc
iret
xor
push
or
xchg
add
push
sub
mov
xchg
add
mov
sbb
push
push
mov
std
adc
sub
jl
cmp
push
cmp
jne
or
push
add
dec
test
test
pusha
mov
or
popa
setle
inc
jo
fwait
out
fwait
inc
dec
pop
cmp
das
xor
cmc
pop
test
das
jns
jo
mov
add
sbb
pop
dec
int3
push
push
fdiv
adc
lea
xchg
mov
out
out
add
jne
mov
enter
loopne
add
pop
bound
add
jb
loopne
add
push
stos
shl
add
inc
add
dec
sbb
sub
cmp
push
pusha
cmp
pop
sub
nop
test
fucomp
inc
gs
fs
add
xor
jbe
shr
outs
push
mov
add
test
pusha
inc
ins
outs
bound
mov
daa
fs
dec
popa
jo
(bad)
(bad)
or
iret
inc
rcl
or
cld
add
es
leave
dec
dec
add
bound
dec
jo
imul
in
add
ins
push
sar
addr16
dec
push
inc
xchg
jg
inc
mov
cwde
movs
add
xor
and
xor
push
test
mov
jno
ret
adc
xchg
jbe
pop
inc
adc
and
lock
xchg
add
call
and
sbb
adc
scas
and
mov
inc
xor
add
push
mov
retf
mov
js
cld
inc
mov
mov
lods
lea
bnd
mov
out
jl
ror
in
stos
ins
mov
cmp
jne
cmp
pop
mov
movzx
sub
call
cmp
mov
xsha256
cmps
adc
inc
sbb
icebp
inc
shl
adc
cmp
scas
push
pop
add
sbb
cmp
call
jge
in
aad
xor
aaa
mov
adc
std
or
jne
push
sub
push
and
data16
ret
imul
dec
cwde
pop
xor
adc
mov
dec
out
pop
push
fcmovbe
pop
or
mov
sar
jbe
or
xlat
test
out
lea
push
rol
repnz
das
push
add
(bad)
jle
add
test
fadd
or
cmp
push
je
fadd
and
push
jp
or
dec
cld
les
ja
mov
ja
or
and
push
push
imul
add
pop
cmps
aas
xor
inc
ins
or
adc
or
push
push
or
push
js
lahf
lock
add
cmps
(bad)
and
or
sub
(bad)
mov
fcmovnbe
mov
or
push
or
inc
push
mov
jmp
add
sbb
addr16
sub
add
shl
push
cmp
test
pop
mov
(bad)
cmps
neg
and
jle
mov
cmp
mov
retf
shl
shl
jo
dec
pusha
jnp
loopne
les
pop
push
mov
popf
mov
xor
inc
push
jnp
push
push
push
cld
lock
adc
mov
out
pop
xor
jle
call
adc
inc
clc
or
add
xor
fwait
inc
xor
mov
cld
or
js
imul
shl
loopne
or
lds
mov
xor
sub
ret
sub
std
push
js
push
aad
xor
mov
pop
push
pushf
push
add
lock
push
stos
(bad)
pop
ror
xchg
cs
push
cmp
cli
and
ja
cmp
dec
les
ret
mov
jb
retf
(bad)
out
hlt
mov
dec
je
jb
push
push
xchg
sub
mov
jb
sbb
lahf
push
mov
call
and
imul
mov
xchg
in
fwait
xor
inc
lds
push
loop
cli
cmp
(bad)
pop
clc
enter
mov
inc
jl
add
test
lock
or
xchg
xor
xchg
in
cmp
xor
push
mov
mov
sub
pop
inc
xor
dec
dec
add
add
add
inc
push
outs
jp
or
cmp
add
add
inc
inc
or
stos
or
push
xchg
xchg
sbb
sub
dec
jl
mov
push
inc
pop
mov
icebp
cmc
add
jg
bound
add
fsubr
and
or
int3
mov
sub
dec
sbb
sbb
or
add
scas
cmp
out
mov
ret
es
xchg
push
repz
cmps
lock
cmp
and
dec
xchg
pushf
add
mov
jb
ins
gs
jmp
push
in
jp
clc
or
outs
arpl
add
ins
fwait
sbb
jecxz
or
inc
(bad)
test
adc
pusha
lock
ficomp
sub
mov
mov
mov
movs
inc
outs
jo
mul
xor
pop
push
mov
adc
inc
mov
mov
dec
sbb
shl
push
pop
loopne
add
pop
or
call
test
xor
lea
mov
xor
mov
inc
and
ins
(bad)
dec
jne
cmp
jbe
pushf
add
add
inc
adc
cmc
add
add
(bad)
stc
loop
inc
xchg
dec
(bad)
in
(bad)
jns
retf
mov
cmp
jbe
pusha
int3
or
lods
jo
in
mov
inc
sbb
sbb
ror
xor
cmc
outs
in
push
jb
sbb
jle
inc
hlt
rol
test
in
stos
jge
repz
xchg
rol
retf
dec
xchg
ja
je
sub
out
push
mov
mov
jge
xchg
mov
xor
lds
push
push
add
in
sbb
add
or
outs
push
popa
jb
aam
js
mov
stos
shl
stos
adc
fcom
mov
jmp
or
addr16
jae
bound
gs
loopne
stos
or
cmps
pop
and
push
mov
or
or
push
movhps
mov
push
inc
or
pop
lods
pop
push
lock
push
cmp
and
cmp
pop
or
or
or
dec
inc
out
xor
add
sbb
push
movs
inc
sbb
loope
retf
push
dec
sub
add
xchg
and
pusha
xchg
scas
add
or
pop
pop
aam
sbb
data16
mov
sbb
ja
and
sbb
scas
jnp
ja
pop
and
add
add
mov
sbb
jae
mov
cdq
push
cmp
push
mov
inc
imul
or
and
push
mov
xchg
inc
jne
inc
ds
mov
inc
popa
je
and
sub
mov
push
mov
sub
jne
je
inc
xchg
imul
xor
inc
inc
dec
inc
pop
adc
pushf
and
dec
sbb
fcomp
sar
int3
jle
fld
rsqrtps
add
sub
mov
inc
or
push
add
enter
ss
or
sub
inc
push
dec
outs
jns
push
sbb
push
pop
fisttp
in
cdq
sbb
cmps
add
inc
jecxz
jnp
add
(bad)
or
cdq
push
sbb
aaa
sbb
push
pop
xlat
out
fist
add
xlat
mov
js
int
sbb
add
mov
xchg
popf
mov
mov
push
push
xchg
inc
or
jo
sub
inc
pop
vandnpd
lock
add
mov
cmp
push
mov
in
mov
push
xor
and
or
pop
mov
sbb
mov
shl
mov
xor
clc
mov
add
adc
test
jnp
jne
cmps
mov
jo
jne
sbb
add
xor
or
sbb
(bad)
pusha
add
ror
pusha
(bad)
fstp
aaa
sub
pop
shl
mov
dec
and
sub
pop
pusha
and
xor
inc
push
mov
mov
push
cmps
(bad)
in
pushf
mov
in
je
mov
jecxz
in
sar
jne
inc
adc
adc
(bad)
xor
sbb
pop
pop
and
(bad)
in
push
leave
scas
or
sbb
pop
pop
jbe
jmp
or
sbb
es
hlt
push
sub
(bad)
xlat
and
ror
int
mov
dec
xchg
out
or
sub
out
or
pusha
add
or
fst
push
mov
pusha
je
push
nop
imul
iret
lock
add
or
cmp
xor
mov
dec
mov
les
add
sbb
in
clc
stc
in
into
cmp
ret
pop
push
(bad)
jle
mov
in
jle
cmp
jge
mov
jmp
mov
jl
loope
jmp
clc
sub
sub
adc
inc
xor
jmp
inc
ins
pop
mov
rol
adc
mov
sub
jb
cwde
push
fadd
mov
aas
cld
xchg
adc
call
mov
nop
imul
and
imul
add
cmp
fs
ins
jne
push
std
mov
sbb
push
std
add
into
cs
loopne
jo
push
or
push
jb
sub
or
loopne
sbb
adc
outs
jl
std
xchg
or
sar
or
add
or
test
dec
xchg
or
inc
fiadd
pop
ret
fld
mov
push
or
rol
mov
out
addr16
adc
mov
cmc
inc
add
neg
arpl
sub
cmp
mov
pusha
or
mov
push
xchg
sbb
out
mov
dec
pop
das
lock
xchg
add
sbb
mov
cmp
jmp
cmp
fnstsw
sti
jge
fisttp
push
cs
push
mov
aaa
pop
adc
fsubr
fld
sahf
xchg
sub
mov
xchg
loopne
jae
mov
mov
jb
xlat
pop
mov
in
push
sbb
push
jne
pop
sub
daa
cmps
outs
xchg
jo
es
das
xchg
or
push
jbe
push
or
fdiv
(bad)
jecxz
add
aaa
push
jo
xor
add
ja
clc
or
je
and
fidiv
lahf
sbb
inc
dec
popa
mov
sbb
loopne
out
icebp
daa
fisub
pusha
mov
inc
push
ins
jmp
popf
(bad)
push
inc
or
cmc
test
aaa
into
dec
ja
or
int
adc
add
iret
outs
mov
push
inc
dec
fsub
xor
sbb
jae
jb
outs
mov
sub
add
xchg
or
inc
xchg
pop
mov
mov
pop
push
popf
or
outs
lock
push
jb
sub
or
mov
ja
movs
or
aaa
jg
in
outs
(bad)
outs
and
dec
pop
js
inc
mov
jl
fsub
adc
pop
or
inc
or
test
cmp
jmp
xor
add
add
test
adc
pusha
movs
fisttp
inc
cs
aaa
sub
mov
lds
mov
ret
test
sub
pop
pop
jo
mov
push
iret
push
mov
sub
adc
ja
rcr
adc
ror
xchg
adc
push
cmp
out
dec
fucomip
imul
push
sbb
xor
pop
inc
sub
pop
outs
movs
add
je
mov
mov
(bad)
lods
movs
add
rcr
out
dec
sar
cmp
jne
dec
adc
fistp
dec
add
stc
jne
fcomp
and
or
mov
jmp
jl
iret
cmp
cld
sbb
adc
clc
shr
and
sub
xor
mov
(bad)
ret
lods
or
les
imul
pop
and
cld
(bad)
dec
and
ds
cld
cmp
jbe
inc
sub
sbb
inc
sub
mov
mov
adc
xchg
sub
fld
jnp
inc
and
add
xchg
aam
in
jbe
popf
push
das
and
repz
mov
inc
mov
pop
mov
add
or
loop
shl
rcl
sar
sub
mov
in
jge
adc
loope
fild
jl
sbb
cmp
mov
mov
adc
sbb
cmc
mov
jae
scas
test
jecxz
loopne
in
enter
test
pop
test
ins
sbb
es
mov
jnp
outs
je
inc
hlt
or
(bad)
cmp
(bad)
loope
fcom
inc
add
or
shr
sub
pusha
sub
call
sbb
stos
stos
sub
inc
mov
xor
fmul
dec
pop
push
daa
in
repnz
add
aaa
or
iret
in
test
aas
fsubr
pop
pusha
mov
daa
dec
fdiv
and
sbb
lock
push
hlt
into
and
pop
jl
(bad)
lea
arpl
pop
adc
or
adc
and
mov
xor
mov
sub
push
fistp
lods
push
mov
fld
or
cmp
adc
mov
cmp
nop
sbb
jns
pusha
mov
and
in
cwde
std
add
(bad)
js
rol
jmp
movs
lea
push
or
push
nop
dec
xor
cmps
add
adc
hlt
push
cld
test
push
mov
sahf
call
or
in
mov
outs
lea
push
jmp
scas
jnp
jmp
iret
popf
test
mov
xchg
imul
mov
sti
imul
jns
jbe
iret
div
pop
xor
or
cmp
popa
sbb
lea
and
mov
iret
sbb
je
test
sbb
int3
loope
pop
xchg
mov
and
or
pop
lea
in
push
and
dec
cs
or
loopne
jp
cmp
mov
enter
push
or
aaa
cmp
mov
dec
test
repz
cmp
(bad)
mov
mov
sub
pusha
loop
mov
mov
mov
fdivr
lea
shl
int3
das
lock
jle
std
fimul
jl
inc
push
mov
pushf
pop
push
cmps
jg
cmp
add
test
dec
jne
mov
out
jne
add
retf
cmp
jg
cmp
add
inc
sar
js
add
sbb
pop
int3
cdq
js
xor
cmp
loope
push
jbe
and
push
sbb
rol
add
cmps
movs
sub
add
(bad)
push
stos
jo
pop
jmp
push
not
and
mov
mov
pop
mov
or
fsubr
pop
add
sub
fst
sbb
das
push
push
sub
jmp
mov
mov
sub
or
fidivr
inc
inc
or
xor
int3
shr
jg
ret
test
dec
add
sbb
in
aas
mov
inc
jo
in
mov
adc
(bad)
mov
push
or
jae
inc
jb
popa
jns
jge
frstor
es
pop
inc
add
inc
adc
mov
inc
rcr
push
jl
popf
cmp
push
daa
jno
lahf
pop
shl
jle
or
ret
in
mov
fdivp
push
popa
bound
add
ja
ror
xor
push
and
dec
mov
pop
xchg
or
mov
es
sub
mov
add
nop
sub
bound
dec
mov
idiv
and
lods
popa
jb
inc
enter
loop
push
dec
outs
jae
jb
dec
add
outs
dec
rol
dec
gs
or
lods
hlt
add
outs
shl
fadd
jne
dec
mov
pushf
cmp
or
es
sub
pop
pop
mov
mov
xor
mov
cdq
ins
jp
mov
ret
mov
sub
data16
push
(bad)
or
call
jg
push
mov
(bad)
adc
mov
out
lea
xchg
xchg
xor
fwait
sbb
add
hlt
fistp
mov
or
das
jmp
add
xor
ins
les
ins
fcom
adc
fimul
mov
sub
cdq
(bad)
pop
cmp
out
and
lds
clc
inc
sti
fild
cmp
sahf
push
mov
mov
mov
popf
outs
not
jge
in
dec
push
mov
and
mov
xchg
std
je
cmp
jne
xor
movs
data16
fsubr
jmp
std
outs
jne
pop
push
fsub
dec
push
data16
jge
adc
movs
jg
pop
push
mov
ins
xor
jp
dec
lahf
in
mov
mov
push
fsubr
cmp
(bad)
outs
lgdtd
(bad)
xlat
jle
pop
add
js
test
in
jecxz
daa
jge
or
push
xchg
push
imul
cs
inc
(bad)
mov
sbb
add
movs
jg
cmps
push
and
push
dec
imul
cli
mov
push
or
inc
pop
retf
sub
popa
arpl
add
adc
inc
push
add
shl
xor
add
adc
dec
sti
inc
pusha
mov
or
jne
jo
dec
sahf
into
jge
jne
imul
xor
jnp
sub
inc
rol
daa
adc
mov
cmps
xchg
imul
cmps
les
imul
fadd
inc
mov
sub
pop
lods
jmp
inc
sbb
daa
pop
sbb
xlat
dec
es
sti
fdivr
add
sbb
sbb
xor
in
add
jle
lods
xchg
mov
or
or
test
idiv
scas
enter
xlat
adc
or
out
jno
hlt
push
sti
test
ja
or
inc
mov
push
pop
lea
add
push
mov
push
iret
dec
or
or
xor
retf
or
inc
cs
or
outs
sbb
jne
push
add
add
ins
call
jnp
pop
loopne
and
retf
daa
inc
and
pop
pop
mov
(bad)
shl
add
push
pusha
and
or
mov
(bad)
push
xor
add
add
pop
movzx
and
sbb
add
pop
aam
imul
imul
pop
fisubr
inc
dec
cmp
jne
dec
add
jle
scas
jecxz
mov
pop
push
inc
mov
call
mov
sub
dec
cmp
pop
sti
xchg
inc
jne
mov
mov
or
jmp
(bad)
mul
dec
je
add
jmp
add
sub
and
inc
pop
(bad)
sbb
pop
sti
add
jmp
das
sub
jmp
cs
adc
dec
fimul
add
add
add
imul
cmps
cmp
jbe
push
sub
dec
push
iret
or
mov
mov
add
push
jnp
cs
xchg
cld
mov
cld
mov
sub
out
ret
call
push
adc
sub
mov
add
adc
adc
fwait
xor
call
cmps
(bad)
xor
icebp
in
dec
inc
loopne
mov
mov
xchg
sub
(bad)
js
jb
bound
inc
cmp
dec
test
mov
inc
adc
unpcklps
inc
xchg
movs
cld
ss
jb
fndisi(8087
int3
sysenter
lods
je
jg
adc
jae
cld
push
jmp
sbb
push
daa
test
mov
popa
push
addps
call
pop
mov
inc
test
cmp
jb
test
mov
rcl
mov
push
clc
out
or
add
adc
pop
je
adc
xchg
adc
jle
stos
xor
or
dec
sbb
add
sub
les
les
inc
nop
xchg
jl
mov
pop
mov
clc
rcr
out
mov
sub
push
add
push
add
dec
pushf
aaa
and
outs
mov
aad
xor
push
push
dec
pushw
ffree
es
and
inc
xchg
ret
jle
push
mov
cmp
push
ror
out
add
and
les
(bad)
daa
lods
jp
jb
and
inc
test
adc
cmp
aas
or
mov
jle
int
jns
dec
mov
mov
and
sbb
fist
cmp
dec
dec
jmp
mov
out
jae
shl
sub
outs
jo
inc
data16
(bad)
retf
pop
cmp
and
push
sub
cs
jecxz
cmp
ins
clc
mov
cmp
aas
out
xor
test
cmp
cmps
pusha
sub
xor
sbb
cmp
jl
add
js
xchg
lahf
retf
test
jbe
mov
bound
addr16
mov
mov
pusha
shl
ret
or
jp
or
aam
clc
data16
js
jmp
inc
pop
nop
sbb
sub
dec
cmp
sti
(bad)
dec
jge
inc
mov
bound
sbb
xlat
popf
pusha
add
dec
mov
icebp
dec
dec
xchg
or
ins
lea
jmp
pop
jo
sbb
inc
or
sub
adc
(bad)
jmp
cmp
mov
mov
lahf
out
push
push
pop
mov
adc
adc
inc
fdiv
sbb
or
push
mov
shl
sbb
cmp
xor
mov
sar
sbb
sub
sub
push
call
cli
shl
cld
xor
call
(bad)
xor
arpl
lods
pop
(bad)
cmp
xchg
mov
mov
paddsb
dec
in
push
addr16
add
lds
test
or
call
sbb
mov
(bad)
clc
and
inc
(bad)
mov
jl
cwde
test
mov
hlt
cmp
sub
jle
push
mov
or
mov
mov
aam
or
pusha
call
adc
mov
movs
cmp
mov
sub
push
fs
jg
xor
jp
in
xlat
js
or
jg
jmp
jmp
fcom
fmul
jmp
popf
jne
cmp
ss
mov
mov
in
lods
test
mov
lea
movs
in
fwait
ret
or
push
(bad)
je
fcom
adc
je
mov
mov
or
je
(bad)
push
pusha
(bad)
adc
rol
sbb
cmp
xor
inc
fs
add
mov
or
nop
pop
or
cmp
(bad)
lahf
and
pushf
pusha
lock
mov
or
and
jle
add
and
pusha
add
inc
and
inc
and
cs
pusha
add
inc
and
and
sub
inc
sub
mov
or
or
adc
adc
gs
fcmovb
or
stc
inc
cmps
movs
mov
dec
xchg
add
ss
mov
sub
jmp
sbb
pusha
push
test
call
jo
pop
inc
jbe
push
jbe
aas
mov
pop
pusha
sub
sbb
mov
mov
js
add
je
sub
add
je
add
xchg
fimul
add
mov
mov
push
sub
cmps
aam
sti
pop
jmp
adc
cmp
out
ret
lock
push
or
and
jg
(bad)
jmp
js
cmp
jle
lds
mov
push
(bad)
repnz
pop
pop
cmp
in
adc
adc
lock
out
jnp
push
mov
jo
push
mov
add
and
and
movs
xchg
(bad)
loopne
sahf
rol
outs
adc
call
mov
jecxz
loopne
cmp
imul
neg
mov
loope
sub
out
mov
jbe
pop
test
and
shl
xor
xor
mov
pop
mov
dec
int
ror
sahf
mov
xchg
or
add
lock
scas
lods
ins
sub
or
neg
add
pop
sbb
sbb
sbb
add
and
cli
cdq
(bad)
xadd
shl
push
in
jnp
pop
rol
or
inc
dec
fmul
mov
xor
(bad)
aaa
or
xor
push
out
dec
je
fcom
das
or
xchg
dec
icebp
or
inc
inc
addr16
fcomp
cmp
loope
adc
push
pop
shl
fdiv
pop
nop
or
push
inc
clc
rol
inc
lods
ror
mov
xchg
(bad)
lea
or
mov
inc
and
jmp
jmp
out
ins
test
iret
jl
clc
cmp
sbb
pop
pop
cmp
(bad)
in
outs
mov
shr
cmp
push
mov
cmps
inc
or
js
sar
jg
enter
dec
jb
stc
and
cmp
fbld
sub
xor
sub
or
int
add
add
inc
fbstp
push
dec
clc
dec
fs
jns
jle
loopne
int3
les
mov
add
mov
mov
cmp
cmp
dec
mov
mov
shr
inc
cmp
fadd
fstp
test
mov
mov
fistp
push
(bad)
inc
add
adc
jg
push
loop
mov
dec
fisttp
dec
fild
xor
push
push
outs
dec
pop
add
sbb
mov
add
fdivr
mov
mov
and
mov
ret
add
pop
mov
add
shr
add
enter
shr
stos
(bad)
fisub
pop
cmp
mov
pop
dec
ja
dec
test
sbb
cwde
test
aas
dec
push
xchg
adc
out
or
sbb
enter
push
(bad)
out
pop
adc
ror
xor
int3
call
sbb
test
ss
jne
in
inc
sbb
add
inc
mov
sbb
scas
or
lods
mov
jb
push
inc
inc
sbb
xor
adc
js
dec
(bad)
shl
sbb
push
div
cmp
leave
in
xor
stos
rcl
add
push
lock
mov
dec
sub
push
add
push
loopne
add
xchg
ret
sbb
xchg
inc
or
data16
inc
loope
js
aas
iret
clc
sti
sbb
and
pop
fdiv
add
jle
ror
mov
in
(bad)
loopne
or
sub
adc
scas
dec
pop
pushw
push
xor
sub
xlat
addr16
or
outs
in
cdq
or
dec
out
shr
and
(bad)
pusha
test
cwde
jne
pop
inc
jmp
shl
mov
jmp
dec
inc
pop
pusha
mov
adc
and
into
jge
mov
pop
imul
dec
int3
call
dec
sub
push
or
cmp
ds
ss
pop
and
or
je
aam
add
in
mov
fs
inc
or
mov
clc
cmp
mov
shl
fcom
jns
imul
retf
mov
call
lods
sbb
sbb
mov
jge
add
and
mul
mov
adc
pop
xor
mov
shl
and
and
clc
xchg
cmp
jp
outs
lods
add
xchg
outs
adc
test
pop
leave
sub
rol
add
sub
pusha
dec
out
jmp
sbb
add
adc
jmp
pop
cdq
scas
fnstsw
jmp
jle
jne
in
adc
adc
test
jne
fsub
mov
sbb
shr
fild
imul
clc
xrelease
fdivr
jo
sub
sbb
inc
push
fs
clc
mov
sbb
mov
sbb
scas
mov
and
mov
and
add
mov
cmp
cdq
add
scas
jl
inc
das
push
cmps
aad
pop
jp
push
jne
or
fdiv
int3
ss
std
mov
test
jne
bound
jne
or
sbb
fwait
jmp
fst
xor
or
adc
jne
dec
je
fistp
xchg
fdivr
fsubr
rcr
adc
mov
clc
cld
sub
dec
mov
add
cmp
cmp
jmp
pop
fnsave
or
sub
sar
fistp
or
pop
nop
push
loopne
mov
cwde
xlat
xchg
test
sub
dec
clc
les
jnp
fistp
(bad)
xchg
ficom
mov
hlt
(bad)
(bad)
adc
loopne
mov
or
sbb
or
test
(bad)
pop
retf
sbb
js
jg
cmp
mov
test
lock
jne
(bad)
hlt
sbb
in
push
out
sbb
mov
in
pusha
mov
inc
and
fsub
adc
push
fsub
mov
cmp
sub
pop
cmp
cwde
mov
mov
jnp
(bad)
adc
add
mov
in
and
xchg
cmps
pop
outs
mov
or
loope
push
mov
xchg
and
mov
std
xchg
ja
sbb
sub
cmps
mov
test
add
xchg
push
ret
and
shl
loopne
into
push
xchg
and
ficom
js
je
mov
push
pusha
mov
xor
xchg
adc
push
in
and
mov
jge
cld
add
cmp
jae
or
cmp
push
push
push
lock
jl
cmp
das
retf
cld
push
bound
inc
xor
pop
jg
jmp
jnp
push
(bad)
sub
add
push
push
lods
mov
push
into
test
enter
sbb
mov
ja
dec
lock
rcl
push
xchg
add
mul
das
dec
sub
xor
push
cmp
test
fld
inc
mov
call
cmp
or
mov
xchg
fs
dec
pop
add
xchg
mov
sub
mov
mov
hlt
sub
xlat
mov
cmp
or
mov
iret
add
mov
mov
dec
add
add
ss
lock
push
push
clc
push
daa
push
jae
jnp
sbb
push
pushf
xor
xor
imul
cdq
cmc
mov
add
cmp
mov
and
inc
retf
mov
pushf
sub
ror
idiv
(bad)
jge
and
adc
push
cmp
mov
xor
dec
dec
lock
aaa
mov
mov
sbb
push
or
ret
pop
ss
mov
inc
jp
stos
jb
sub
adc
xchg
pop
cmps
push
mov
mov
ins
push
push
or
jne
loope
push
add
or
add
ss
je
or
sbb
jp
push
mov
lock
sbb
mov
push
mov
mov
push
out
fcomip
bound
jb
xchg
outs
sub
out
add
mov
out
jae
jb
das
jge
or
mov
mov
add
or
mov
sub
or
or
sbb
mov
mov
clc
or
mov
outs
ja
cs
scas
inc
scas
adc
sbb
jne
adc
and
or
stc
adc
mov
pusha
jne
mov
jo
das
xor
push
and
popa
jae
stos
cmp
pop
mov
jge
dec
aad
stos
(bad)
or
fld
sub
std
pop
pop
cmp
test
call
imul
enter
mov
dec
sub
in
clc
mov
and
mov
scas
scas
xchg
loopne
sub
iret
cmp
lds
jb
add
and
jle
sbb
add
inc
sub
jne
cmp
call
mov
add
pop
or
add
adc
test
jmp
adc
or
sub
paddb
add
enter
mov
call
out
inc
jl
sbb
cmp
pop
ret
inc
mov
ds
adc
in
test
jecxz
test
sbb
cmps
or
cmp
or
cmp
xchg
add
je
adc
or
jne
add
cmp
adc
es
push
and
cmc
pusha
pop
pop
in
xchg
dec
cmp
xor
cld
mov
clc
mov
inc
or
lds
mov
(bad)
ror
jno
enter
hlt
sub
inc
cmp
xchg
pop
xchg
aas
push
or
inc
dec
test
mov
adc
xchg
mov
ret
pop
mov
mov
loopne
adc
pop
mov
push
or
mov
mov
mov
cmp
es
cmps
mov
call
push
ret
fisttp
pop
test
xor
inc
dec
test
pop
sbb
test
pushf
cmp
jge
and
mov
adc
and
mov
inc
pop
ja
mov
xchg
inc
dec
sbb
icebp
push
sbb
sbb
push
or
cmp
adc
jmp
leave
lahf
push
popa
and
jb
dec
xchg
jb
loope
into
jo
mov
(bad)
out
xchg
inc
pop
inc
cld
in
pop
inc
jns
sbb
xor
add
mov
arpl
adc
outs
and
test
jne
cmps
jnp
sbb
or
jmp
inc
inc
inc
dec
jne
jmp
dec
clc
loope
or
and
mov
dec
mov
dec
xchg
loopne
shl
test
mov
pop
mov
xor
int3
pop
popa
sub
pusha
fnstcw
sbb
lods
bound
sub
leave
jle
pop
or
sbb
inc
mov
shr
jge
mov
add
or
dec
dec
dec
jg
pop
jb
ret
xor
jae
sbb
xchg
cmp
mov
shr
pop
xchg
mov
mov
inc
add
cmp
jne
jp
and
ret
jmp
in
in
add
cwde
rcl
and
xchg
imul
push
leave
xchg
jns
fadd
dec
and
inc
test
loop
data16
push
mov
mov
mov
cmp
mov
lods
push
push
lds
movs
adc
mov
fsubr
cmp
pop
mov
outs
add
add
fdiv
icebp
(bad)
(bad)
adc
push
inc
fcom
add
jecxz
hlt
mov
inc
fst
push
in
adc
jne
or
sti
push
test
mov
add
xchg
mov
shl
popf
xor
lea
lock
adc
fisttp
adc
and
dec
sbb
adc
ins
mov
jns
push
push
retf
mov
inc
cmp
or
scas
cmp
xor
ds
inc
mov
and
sub
add
jo
daa
adc
dec
push
enter
sbb
pushf
or
pop
mov
loopne
sbb
test
ror
or
loope
test
fiadd
mov
add
add
cli
outs
rol
inc
jmp
sbb
adc
push
jns
inc
and
or
inc
or
cmps
xchg
pusha
mov
push
and
dec
loopne
xor
test
pop
or
or
add
add
dec
in
jne
jmp
cmp
(bad)
call
push
cld
and
push
xchg
clc
pop
fmul
daa
inc
or
(bad)
xor
(bad)
shr
lds
loopne
aad
shr
push
shl
mov
adc
or
pop
adc
jb
inc
int3
push
fcomp
push
dec
gs
jl
dec
pop
jg
fsubr
mov
mov
or
xchg
adc
mov
test
popa
pop
xor
xor
sbb
xor
pop
or
icebp
xlat
dec
mov
xchg
loope
cmp
daa
mov
mov
call
adc
inc
dec
nop
and
popa
and
push
cmps
aam
adc
mov
pop
pop
and
mov
das
hlt
push
or
inc
cmp
(bad)
cmp
ds
inc
popf
mov
inc
xlat
push
sbb
mov
xchg
fwait
mov
mov
push
xchg
pop
lock
les
mov
mov
mov
in
push
loopne
stc
inc
scas
shl
cmp
pop
mov
inc
mov
inc
shl
jl
jmp
and
adc
loop
fcom
inc
sub
adc
cmp
jmp
push
cld
jo
push
and
push
sub
mov
push
sub
sub
sub
push
sub
cmc
push
xchg
xor
sub
hlt
cmp
mov
gs
xchg
xor
inc
add
jbe
cmp
mov
pop
sbb
xor
xchg
sbb
dec
and
mov
pop
push
imul
ins
xor
xchg
push
inc
iret
xor
xor
retf
mov
and
and
(bad)
xchg
lds
jl
popa
sbb
push
les
sbb
push
lock
daa
mov
and
data16
cli
std
inc
dec
je
sub
je
or
aas
jae
add
add
add
mov
sbb
dec
stos
sub
or
ror
and
mov
out
rcl
add
div
pop
add
inc
inc
fs
mov
inc
add
mov
(bad)
xchg
cmc
mov
in
xor
gs
and
add
push
adc
ror
push
test
or
je
pop
cmp
jp
leave
stos
lods
xchg
iret
xor
add
and
or
jmp
dec
dec
or
xor
aas
inc
(bad)
mov
xchg
adc
rol
xchg
int3
pop
mov
jae
js
xchg
je
mov
and
mov
sbb
push
mov
enter
sub
add
sbb
or
or
cmp
sbb
push
rol
and
inc
adc
clc
push
mov
call
bts
sbb
pop
pusha
xor
xchg
xchg
mov
test
jne
repnz
sub
int3
pop
loop
es
mov
in
enter
push
jmp
adc
xor
je
arpl
daa
and
push
loopne
or
inc
mov
jmp
xor
iret
xchg
xor
jbe
pop
jmp
jae
dec
mov
in
mov
jnp
jae
fs
mov
push
push
movs
cmp
and
je
shr
and
das
xchg
rol
(bad)
cmp
and
scas
jecxz
fcomp
jo
push
xor
push
hlt
in
jmp
mov
mov
pop
inc
inc
test
mov
jg
test
out
push
push
mov
mov
cdq
test
mov
mov
out
or
sub
sub
dec
jae
push
popf
adc
xchg
inc
jge
adc
pop
add
sbb
push
sub
sbb
mov
test
fnstsw
or
or
push
sbb
mov
push
push
or
adc
sub
add
mov
and
mov
mov
push
int
pop
aam
add
sbb
sub
mov
mov
inc
fcomp
lds
stc
mov
xrelease
pop
xlat
fdivr
or
(bad)
xchg
push
mov
add
pop
xor
inc
dec
and
push
call
in
lods
int
retf
jne
mov
pusha
nop
popa
lock
xor
inc
icebp
mov
ret
daa
jne
xchg
loopne
int3
jbe
or
mov
xchg
xchg
les
or
pop
or
sbb
imul
mov
ret
push
es
pop
add
and
int3
add
add
mov
test
push
sub
bound
add
retf
call
into
ds
xchg
pushf
ret
loope
in
pop
push
dec
cmp
out
cmp
pop
push
popa
cmp
cmp
push
and
sbb
sar
sysret
xor
xchg
out
arpl
ins
adc
cld
inc
cmp
loop
loope
add
loop
or
sbb
mov
loope
or
sbb
push
movs
iret
jnp
sbb
or
loope
push
sub
push
xchg
jmp
cli
sub
or
addr16
add
xlat
int
nop
jmp
daa
lea
fistp
movs
hlt
sbb
sub
push
or
mov
jmp
jge
mov
retf
aad
sbb
sbb
jle
sbb
and
mov
rol
jmp
mov
jle
clc
mov
and
mov
xor
push
mov
aaa
mov
sar
in
retf
mov
add
add
jge
xor
stos
hlt
clc
add
cmp
pop
sbb
mov
stc
or
test
fisub
jp
xor
cmp
and
lahf
dec
mov
ins
fwait
and
pop
loope
cmp
push
(bad)
mov
push
add
sti
mov
sub
test
sub
pop
add
outs
(bad)
test
pop
jmp
out
xchg
in
jl
and
inc
mov
xchg
xor
xchg
and
das
jmp
mov
bound
mov
push
jmp
and
and
adc
les
or
cmp
cmps
sbb
xchg
leave
mov
jae
mov
lea
movs
add
pop
fucomi
cmps
or
sub
push
or
into
outs
ss
inc
and
push
adc
or
loope
sbb
mov
adc
fnsave
daa
or
out
add
pop
adc
ret
scas
or
xchg
jae
inc
xor
or
add
loopne
icebp
inc
imul
xchg
pop
mov
js
inc
test
adc
stos
inc
sub
sub
mov
sbb
adc
add
das
mov
ins
test
jl
inc
mov
mov
std
outs
mov
je
xor
jmp
inc
dec
jne
sahf
add
sub
inc
xchg
jg
and
sbb
or
sbb
jnp
mov
pushf
mov
and
or
cmp
add
cmp
rol
xor
push
ja
inc
mov
shl
jne
int
cld
enter
or
inc
and
push
or
sub
lahf
mov
sar
js
mov
movs
imul
and
adc
test
loop
imul
icebp
inc
jnp
adc
ret
adc
pop
cld
lods
les
pop
fcomp
sbb
fidivr
cld
or
lock
sub
and
sbb
jge
test
test
and
(bad)
mov
pop
test
jo
int
push
add
cmp
gs
xchg
scas
or
inc
and
cmp
pop
pop
or
inc
adc
xor
push
inc
js
pop
jbe
inc
or
mov
or
les
fild
lock
sub
dec
pop
clc
pop
and
(bad)
bound
out
add
or
jle
mov
cmp
pushf
mov
pop
stos
push
cmp
ror
bound
std
mov
ret
pop
loop
mov
pop
pop
or
xor
cdq
inc
(bad)
inc
jne
das
lds
inc
dec
jne
cmp
push
xor
mov
mov
and
push
test
mov
xor
cmp
daa
mov
mov
pop
pop
inc
xor
(bad)
xor
adc
sub
movzx
ret
cmp
lea
pop
mov
shl
inc
mov
cmp
in
and
rcl
sub
xchg
arpl
mov
enter
test
mov
pop
mov
idiv
ins
dec
in
cmp
fs
jo
arpl
cmps
out
inc
xchg
push
loopne
hlt
daa
mov
sub
call
or
push
add
inc
mov
xor
clc
cli
call
mov
sub
dec
sub
jl
int
imul
push
stos
or
push
or
into
jne
jecxz
sub
fstp
fcomp
add
xchg
inc
lock
xor
(bad)
push
mov
jo
je
sub
mov
jne
loopne
cmp
loope
sbb
out
je
les
dec
jne
mov
push
je
sub
add
sub
sub
and
mov
sbb
in
sbb
je
jno
pushf
pop
mov
jmp
mov
inc
inc
dec
jne
jmp
or
pusha
push
adc
inc
push
cmc
add
push
pushf
jne
adc
add
add
inc
adc
sub
or
gs
adc
mov
pop
jmp
addr16
js
push
push
mov
and
inc
(bad)
sbb
pop
rcr
push
cmp
cmps
dec
or
adc
xchg
rcl
jl
mov
jno
adc
jmp
jno
movs
sbb
lock
lds
mov
add
shl
and
ss
push
mov
inc
add
repz
push
dec
push
pushf
jge
mov
out
imul
jp
int3
xchg
(bad)
je
push
nop
out
adc
add
mov
hlt
inc
dec
add
push
inc
push
push
in
jmp
jae
outs
outs
dec
int3
ret
imul
push
inc
jb
popa
sub
add
loopne
cmp
sbb
add
gs
retfw
not
add
icebp
pop
inc
gs
jb
jns
inc
nop
popa
outs
add
inc
fs
add
adc
popa
(bad)
sti
data16
and
pop
stos
mov
inc
ins
popa
jae
test
cmp
inc
imul
mov
ror
ja
ins
add
and
ins
outs
jbe
imul
fldenv
pop
and
outs
sbb
add
push
arpl
imul
ins
popa
sbb
inc
dec
inc
adc
mov
add
or
clc
outs
cmp
pop
mov
push
(bad)
add
fmul
rcl
xlat
xor
mov
cmp
cmp
rol
mov
jo
popf
(bad)
je
(bad)
js
sbb
dec
fs
mov
les
mov
fdivr
outs
or
adc
arpl
or
loopne
add
xor
std
mov
and
daa
fild
jle
adc
cwde
inc
xlat
mov
jmp
cmp
inc
imul
adc
push
push
xlat
dec
sbb
mov
dec
cmp
sbb
into
cmp
jne
mov
jmp
push
pop
push
in
dec
(bad)
cmp
sti
loopne
sar
mov
mov
out
ret
mov
cmps
push
xchg
and
push
and
or
loop
aam
test
add
mov
inc
(bad)
xor
ins
cs
mov
ret
call
fistp
inc
lock
je
mov
and
in
cmp
push
in
and
add
icebp
mov
jl
(bad)
adc
cdq
shl
add
fdiv
or
add
push
lods
(bad)
sahf
add
outs
adc
or
push
movhps
inc
hlt
fs
add
pop
outs
je
and
xchg
mov
in
xor
pop
jbe
inc
into
add
test
or
(bad)
xchg
push
push
xor
cmp
xlat
sbb
push
ret
adc
lods
cmp
add
add
and
sbb
jl
cld
cmps
push
or
pushf
retf
pop
pop
shl
inc
sbb
addr16
inc
(bad)
pop
xchg
mov
rcl
je
fcom
adc
cmp
pop
push
fcom
or
push
adc
push
(bad)
scas
shr
push
cmp
fld
mov
out
mov
mov
pop
cmp
frndint
mov
mov
in
rol
inc
add
pop
ds
(bad)
fisttp
sbb
xchg
jbe
cmp
mov
mov
push
or
inc
lock
or
cmc
and
js
enter
xor
add
or
add
icebp
mov
(bad)
xlat
loope
and
cmp
adc
mov
xlat
sbb
in
mov
mov
cmps
clc
inc
or
mov
add
xchg
ror
push
retw
frstor
adc
pop
and
xlat
xor
add
jo
cmp
xor
or
ja
or
adc
mov
sbb
pop
hlt
mov
out
push
jl
loopne
sbb
xor
xchg
jge
data16
sbb
cmp
jg
sbb
dec
ins
aas
jne
xor
test
arpl
inc
(bad)
mov
mov
adc
and
lds
pop
pop
ror
jmp
pop
scas
enter
and
add
sub
cmp
add
sbb
loope
(bad)
out
int3
add
push
mov
jg
(bad)
lock
cmp
test
or
into
mov
or
jle
imul
fld
call
loope
add
add
mov
mov
(bad)
mov
lea
mov
and
xor
sbb
mov
mov
pop
pop
or
sbb
out
and
and
ret
add
dec
push
push
ds
or
sub
adc
jge
xor
inc
adc
repz
pop
ds
sbb
sbb
push
ds
mov
xor
rcr
mov
(bad)
push
sbb
fs
add
and
shr
inc
sbb
sub
jmp
jp
or
(bad)
cmp
push
adc
ret
test
pop
mov
data16
add
pop
out
iret
push
sbb
push
push
sbb
add
paddd
mov
loopne
xchg
jns
sbb
and
jo
aas
mov
fld
leave
pop
sub
push
aas
jno
enter
rcl
out
ds
cmp
push
ja
inc
jo
inc
xor
inc
cld
cmp
ret
movs
sbb
pop
inc
idiv
pop
ins
adc
dec
inc
add
inc
inc
adc
mov
dec
dec
fs
sub
inc
lock
inc
fmul
inc
imul
adc
xchg
inc
das
pop
push
or
aam
jge
ss
mov
aas
inc
movs
into
int
or
fdivr
and
mov
cmps
imul
pop
stos
hlt
ja
mov
movs
movs
movs
movs
mov
(bad)
cli
and
add
or
pushw
xchg
lock
mov
adc
push
or
mov
sbb
pop
sub
cmp
dec
cmp
sub
or
inc
add
or
add
xchg
ror
push
jmp
push
xchg
(bad)
aaa
popf
cmp
jb
cvtpi2ps
or
xor
xchg
data16
push
xor
mov
je
mov
test
and
mov
and
jne
xor
mov
fild
xor
push
mov
outs
bound
dec
cmp
inc
mov
mov
iret
shl
rcl
mov
adc
and
sub
adc
add
mov
push
adc
popa
addr16
xor
mov
in
lods
adc
mov
adc
mov
mov
pop
pusha
push
adc
push
push
push
push
cmps
sbb
push
pop
ret
xor
push
add
pop
idiv
dec
lock
(bad)
lea
dec
add
mov
push
mov
sbb
adc
or
mov
(bad)
out
lea
xor
jmp
adc
dec
add
mov
inc
inc
mov
jle
cmp
out
adc
mov
inc
and
fwait
or
jnp
xchg
test
es
jg
jnp
js
faddp
dec
xchg
add
and
adc
test
sbb
jo
loopne
pop
mov
addr16
jno
mov
inc
jp
or
mov
pop
fcomp
push
or
adc
jae
inc
or
(bad)
fnsave
adc
(bad)
out
jmp
sub
jge
fbld
add
inc
mov
push
and
sub
xchg
xor
or
sbb
cmp
je
pop
push
push
mov
(bad)
cmp
add
fisttp
add
add
mov
add
jb
pop
jo
int3
mov
addr16
mov
aaa
outs
(bad)
hlt
dec
sbb
sbb
mov
xor
fild
dec
pop
shl
dec
push
aam
in
push
inc
or
mov
mov
pop
pop
push
push
mov
div
push
push
rcr
sub
inc
xor
and
add
data16
dec
aam
cmp
addr16
inc
mov
sbb
add
and
pop
mov
inc
xlat
add
sub
fs
jb
jge
cld
mov
jmp
(bad)
ins
add
jle
hlt
sub
inc
data16
push
aas
or
push
inc
and
mov
dec
and
imul
dec
sti
jmp
popa
mov
ror
inc
sub
inc
dec
jmp
add
sub
shl
or
push
sub
sti
sub
(bad)
mov
idiv
inc
(bad)
pusha
adc
push
movs
xlat
punpckhbw
sub
dec
sti
cmp
cmc
cli
push
out
test
arpl
push
sbb
dec
enter
sbb
and
sub
dec
adc
das
pop
cmc
shl
xchg
lock
lock
fiadd
mov
mov
rcl
inc
xor
ret
lahf
xchg
and
aad
jg
pusha
clc
and
dec
je
add
jmp
cmp
inc
pop
sbb
push
and
inc
pop
cmc
push
jl
lea
or
movs
shl
lock
popa
add
add
rcl
mov
push
sub
(bad)
stos
shr
lock
pop
(bad)
xor
add
shl
and
and
mov
ja
pop
and
into
xchg
pusha
cwde
pop
pushf
push
pop
cmps
loopne
add
mov
mov
inc
addr16
add
test
inc
mov
clc
jne
popa
in
les
rcl
ins
ret
or
aas
push
inc
jmp
(bad)
push
mov
dec
sub
push
iret
xchg
mov
je
enter
jnp
mov
mov
fmulp
in
outs
xlat
xor
loopne
sbb
mov
push
push
scas
loope
inc
push
(bad)
mov
add
inc
and
dec
call
fdiv
shr
fcomp
pusha
mov
adc
cli
shl
std
jmp
ins
inc
std
xchg
sbb
aaa
je
(bad)
push
xor
ftst
cwde
dec
bound
fidiv
or
mov
and
loopne
icebp
jmp
add
cmp
jne
dec
call
std
push
sar
loopne
loopne
adc
and
outs
fimul
mov
in
push
pop
push
push
in
mov
aad
sub
bound
fsubr
sbb
ret
popa
sbb
pop
loop
mov
or
sub
push
dec
clc
jne
mov
push
jbe
mov
inc
xor
cli
out
clc
test
xor
dec
js
cmp
js
lds
(bad)
push
bound
and
inc
or
push
and
mov
mov
jae
mov
inc
and
jnp
test
dec
cmp
jg
inc
outs
and
or
cmp
pop
mov
leave
cmp
sub
add
adc
imul
in
je
movs
cld
or
mov
test
je
pop
sbb
(bad)
and
sub
lea
push
cmp
popa
or
add
jnp
add
pop
into
and
stc
jne
loop
or
cmp
inc
adc
mov
call
test
sub
cmp
add
loopne
fs
mov
test
shl
lock
mov
(bad)
push
push
cdq
and
push
mov
sbb
mov
lock
xchg
daa
out
bound
or
imul
cmps
dec
jle
adc
sbb
or
iret
xor
xchg
sbb
aaa
sub
add
cmp
cmp
or
push
cmp
mov
or
mov
mov
adc
ret
sub
and
add
sbb
mov
cmps
cmp
sub
xor
ror
add
sbb
rol
jae
cmp
mov
test
sub
aam
test
dec
inc
imul
or
sub
js
and
xor
xor
es
fs
outs
sar
not
mov
xor
iret
(bad)
les
mov
or
dec
adc
js
fadd
(bad)
push
sub
or
hlt
test
sub
cwde
jecxz
mov
jge
int3
sub
inc
movs
hlt
cmp
add
add
add
push
outs
xchg
and
out
or
addr16
sbb
or
out
push
push
pop
push
pop
movs
and
loope
popa
pop
jno
loope
sbb
dec
call
mov
rol
jbe
pop
jmp
clc
fadd
xor
pop
ja
cmp
xchg
add
cmp
les
ins
test
je
or
loopne
(bad)
sti
jg
(bad)
int3
push
pop
sub
cmp
jge
mov
or
rcr
aaa
into
(bad)
test
push
(bad)
mov
and
mov
add
(bad)
nop
mov
sub
push
jno
xchg
sbb
inc
dec
cdq
aad
jecxz
adc
push
mov
arpl
bound
nop
mov
xor
(bad)
sub
xchg
mov
pop
sub
xor
sub
jns
adc
int3
adc
push
into
test
xchg
std
mov
ins
mov
jmp
inc
dec
jne
call
in
fadd
jo
sbb
stos
cmp
jg
sbb
sbb
jle
je
jp
cmp
or
pop
adc
pop
jg
rcl
js
call
pop
ja
in
in
inc
and
bts
in
clc
aam
ret
add
shr
add
rol
adc
aad
or
dec
cmp
add
add
mov
aam
cmp
jecxz
pusha
stos
inc
es
lea
sbb
(bad)
pushf
add
cld
sbb
mov
cmps
pop
mov
sbb
and
and
outs
fwait
cwde
jbe
and
fwait
adc
jmp
out
lods
pushf
retf
sub
fld
sub
ror
dec
cmovns
rcr
and
inc
test
cmp
int
sbb
cmp
and
add
add
mov
or
adc
push
aad
push
push
gs
test
and
aad
sbb
dec
sbb
jae
fwait
push
adc
pusha
aad
and
or
mov
adc
push
fld
(bad)
inc
inc
mov
push
mov
push
lds
mov
mov
jmp
xor
test
je
push
fs
sub
adc
rcl
mov
outs
inc
pop
cmp
hlt
or
nop
or
lods
jmp
jnp
add
push
push
imul
jo
push
js
push
inc
pop
ret
aaa
fcom
arpl
push
mov
and
dec
dec
sub
xchg
inc
cmp
jne
sub
lock
push
pop
icebp
xchg
enter
icebp
push
mov
xor
xor
aas
dec
xor
mov
push
dec
je
jmp
pop
pop
test
dec
mov
int
int
sub
pop
inc
xor
movs
add
getsec
jecxz
xchg
mov
xlat
and
add
pop
or
push
jecxz
push
(bad)
fistp
sti
rcr
test
js
ja
adc
call
and
mov
cmp
pop
mov
arpl
push
jl
arpl
(bad)
mov
cmp
sub
(bad)
or
or
mov
dec
xchg
stc
retf
mov
sub
ficom
adc
test
mov
stos
adc
cmp
push
test
inc
inc
pop
sbb
in
in
adc
test
dec
xchg
imul
shl
lods
push
dec
and
cwde
pusha
jne
or
outs
or
lahf
inc
movd
mov
add
add
repz
inc
sbb
xor
dec
push
xor
inc
cmp
rcl
mov
adc
sub
sub
mov
fmul
pop
inc
and
xor
mov
mov
inc
pop
(bad)
and
inc
sub
jmp
push
outs
loopne
rcl
inc
and
mov
or
add
add
ud0
hlt
fs
les
adc
mov
xor
add
loope
mov
data16
add
int3
dec
or
ja
ds
js
cmp
in
mov
rdmsr
push
fild
(bad)
mov
mov
cmp
pop
xor
sbb
jae
or
shl
test
cmp
jb
ret
pop
scas
mov
push
and
das
and
lods
jmp
int3
stos
les
std
mov
and
js
or
add
movs
in
cmps
mov
sbb
cs
js
popf
fist
cmp
je
cmc
add
inc
jo
call
cmp
fisub
add
sbb
cwde
inc
jbe
sub
or
loopne
cmps
mov
mov
xchg
xchg
xchg
push
ror
je
sbb
div
adc
pop
sub
mov
push
dec
sub
xor
in
sub
jo
push
sub
mov
imul
scas
mov
mov
or
jmp
cs
add
pop
push
je
push
jns
add
inc
in
mov
je
inc
add
dec
xor
add
(bad)
ins
jg
stos
mov
add
or
test
dec
fdivr
mov
or
dec
fmul
push
pop
movs
sub
icebp
movs
loop
je
lds
push
mov
push
mov
mov
mov
repnz
mov
adc
jne
mov
mov
push
mov
xchg
cwde
pushf
jmp
shl
movs
test
mov
adc
push
and
rcr
ins
pusha
cmp
test
jne
dec
mov
push
sbb
push
sbb
mov
or
rcr
or
inc
adc
cmp
fadd
test
lock
fchs
xchg
je
enter
xor
or
sub
(bad)
jl
inc
lock
mov
jne
sub
fcomp
test
mov
jb
test
scas
test
shr
aad
sub
push
adc
cmp
jl
fild
cmp
mov
call
or
inc
inc
sbb
and
fld
push
mov
sub
rol
adc
fdivr
pusha
popa
pop
inc
jo
ret
retf
movs
cmp
enter
cmp
mov
xor
adc
ret
clc
xor
movs
add
mov
fld
std
add
sub
jae
lods
push
sub
mov
dec
or
mov
inc
push
mov
loopne
stos
in
and
push
jbe
jle
xor
mov
es
add
mov
popa
mov
jmp
dec
cmps
add
rol
leave
lahf
imul
jge
test
shr
js
jne
dec
jmp
push
sub
sbb
mov
mov
sub
ds
and
iret
ror
inc
and
fcom
pusha
add
xor
les
jmp
xchg
sar
les
sbb
adc
push
mov
sub
adc
dec
cmp
sbb
mov
jmp
adc
enter
xor
and
push
movs
adc
sub
jg
cmp
add
dec
jne
outs
xor
mov
hlt
pushf
cmp
jmp
inc
or
sub
push
add
popf
fcom
pop
inc
pop
or
dec
xchg
lds
xchg
cwde
cwde
lds
test
add
popf
rcl
and
std
in
adc
add
or
adc
arpl
test
pop
mov
adc
imul
mov
dec
cmp
fmul
xor
fiadd
xor
mov
lds
push
in
xchg
xchg
fs
aad
shl
push
lds
push
ror
jo
pop
les
jmp
xor
or
dec
dec
adc
push
mov
pop
sub
inc
nop
or
mov
sub
nop
push
adc
clc
ds
cmp
pop
pop
hlt
pop
mov
xchg
pop
fist
mov
or
mov
fmul
inc
inc
mov
call
(bad)
dec
pop
les
and
or
add
mov
cmp
adc
mov
sub
xchg
shr
loope
ret
inc
push
jge
inc
dec
jne
sbb
andnps
push
xchg
mov
mov
inc
int
xor
mov
test
aaa
fbstp
out
push
push
ds
jp
mov
mov
and
sbb
mov
sbb
fdiv
jo
or
das
loope
mov
mov
lds
clc
ftst
daa
add
adc
ins
push
fcom
loopne
fldenv
and
cmp
jb
fstp
dec
cld
test
mov
jae
popf
sub
push
dec
ficom
call
cmp
int3
dec
mov
push
fisttp
mov
(bad)
push
cmp
cmp
pop
jno
and
add
stos
xchg
fdivr
jbe
xor
mov
call
dec
jne
sbb
inc
aam
leave
aam
mov
mov
clc
retf
ds
pusha
sbb
mov
hlt
adc
mov
xchg
fmul
sbb
and
jbe
sub
ret
inc
mov
or
(bad)
xor
and
fdiv
dec
es
push
(bad)
adc
ret
iret
jmp
ss
add
les
nop
mov
hlt
mov
mov
in
sub
adc
je
arpl
pop
push
nop
dec
sbb
adc
lahf
jnp
scas
mov
mov
mov
add
inc
push
test
fdiv
cmp
stos
xor
clc
jne
xor
and
or
push
test
jne
and
inc
inc
rcr
fsub
arpl
sbb
(bad)
sahf
dec
aam
and
in
outs
pop
cmp
sub
cmp
inc
icebp
add
in
sub
or
pop
adc
xlat
adc
add
push
or
out
mov
mov
rcr
inc
or
push
inc
sub
(bad)
add
test
mov
movs
push
inc
lea
fs
aam
cmp
hlt
sbb
xchg
shl
loopne
dec
in
pop
stos
mov
aad
jnp
pop
lock
mov
mov
push
ins
lods
pop
clc
in
mov
jnp
lea
hlt
xor
ss
test
mov
pop
cs
pop
mov
mov
jmp
movs
xchg
in
shl
pop
mov
loope
sbb
add
add
retf
(bad)
shr
jb
cmp
cdq
fwait
mov
test
cs
sub
mov
pop
test
xor
push
sub
enter
adc
inc
stos
or
xchg
xchg
rol
cli
in
mov
or
invd
push
dec
fild
lock
jmp
push
cmp
ins
mov
test
jne
daa
sub
add
ret
aaa
fsubr
inc
inc
jmp
lahf
push
cmp
je
dec
pop
xor
add
pop
sub
je
cmp
cmp
pop
pop
mov
mov
repz
inc
rol
je
fst
clc
pop
cmp
sbb
pop
dec
mov
jecxz
repnz
cmc
fcmovb
push
cmp
dec
pop
adc
mov
mov
push
mov
jne
inc
js
cmp
or
mov
mov
jle
cwde
sub
mov
aaa
pop
daa
clc
ja
and
mov
cwde
pop
xor
xchg
push
js
lock
and
push
shr
jne
mov
mov
mov
mov
push
mov
ja
jmp
dec
ins
jle
or
or
std
sbb
inc
cwde
loope
lea
add
sbb
push
add
sar
dec
mov
inc
inc
adc
dec
and
xor
mov
and
adc
fbld
sub
and
inc
or
add
cmps
inc
xchg
imul
inc
pop
lea
rcl
mov
add
mov
movzx
mov
mov
and
jmp
mov
es
cmp
mov
leave
adc
sahf
inc
shl
inc
inc
aam
mov
push
or
add
push
sbb
pop
(bad)
cmp
fist
mov
jb
dec
dec
test
jmp
push
pop
test
push
inc
mov
and
jnp
loop
hlt
mov
std
pop
xor
fcomp
cmc
pusha
iret
lock
cmp
sbb
jmp
add
and
add
xor
sbb
add
hlt
scas
aad
std
push
sbb
pop
in
or
sbb
sbb
mov
addr16
dec
sub
xchg
push
inc
and
dec
or
pop
in
jbe
mov
cmp
retf
jne
aaa
sbb
sti
fist
loope
loope
sbb
pop
jbe
inc
pop
inc
fist
add
adc
mov
or
cmps
js
cmp
test
add
sahf
inc
repz
add
cmp
pushw
or
jmp
adc
movs
xor
push
lods
ins
ror
mov
in
add
push
gs
and
aam
sbb
xchg
mov
add
adc
clc
add
mov
xlat
mov
inc
push
fild
out
aas
sub
rcr
aas
sub
(bad)
in
arpl
adc
gs
es
cmp
addr16
jno
data16
es
add
imul
ins
ret
clc
inc
push
out
xor
xchg
movs
xor
cmps
adc
out
lds
push
or
or
push
xor
hlt
nop
sub
mov
xchg
sub
js
pop
adc
leave
aaa
push
ins
dec
sub
adc
jmp
mov
ret
fwait
shl
inc
out
ret
inc
jns
adc
pop
push
loope
arpl
push
popa
lods
jns
push
jmp
xchg
scas
inc
test
mov
lock
add
aas
lock
mov
push
inc
rcr
or
ret
jno
sub
add
je
pushf
or
cmp
add
jne
add
or
es
cmp
xor
sbb
ror
mov
or
add
dec
shl
or
mov
push
pop
test
fstp
sbb
push
popa
add
push
imul
js
hlt
outs
jo
in
out
imul
sti
add
or
or
sbb
xchg
push
(bad)
push
cmps
xchg
sbb
push
fs
movs
jecxz
cld
push
std
mov
cwde
movs
mov
mov
and
repnz
xor
sbb
sbb
dec
cmpps
pop
cmp
xor
mov
xor
je
mov
push
icebp
ret
sub
add
mov
mov
fistp
mov
jge
leave
adc
sub
add
aad
cmp
scas
adc
movs
les
inc
ret
cmp
mov
lods
aaa
daa
jnp
xchg
mov
mov
xor
pop
dec
fld
push
jnp
in
lahf
sbb
call
jl
sub
push
imul
ret
dec
sbb
lods
pusha
mov
cmp
jnp
push
fdiv
test
cmp
in
mov
div
inc
pop
cmp
mov
gs
jae
sbb
test
sub
stos
cdq
dec
out
add
push
dec
nop
sbb
dec
fs
out
xchg
leave
aam
out
jecxz
mov
cmc
ret
ret
lock
lea
call
cld
adc
dec
out
push
out
push
neg
ins
jbe
and
push
push
dec
fstp
sub
loopne
pushw
aaa
pop
loope
inc
ins
push
xchg
jo
or
push
je
jae
adc
mov
push
xor
mov
fisub
cmp
not
adc
cmp
xchg
cmps
icebp
enter
mov
hlt
iret
sbb
mov
loope
mov
lods
arpl
jno
dec
je
loopne
mov
push
pop
imul
inc
in
adc
sub
jae
inc
push
xchg
into
push
sbb
dec
and
rol
mov
mov
daa
cmp
or
les
cld
das
cmp
add
pop
jo
sub
and
push
push
(bad)
lock
cmp
test
sbb
mov
jecxz
mov
js
sbb
mov
cmp
clc
not
or
mov
pop
xchg
add
lods
clc
cli
jne
mov
mov
test
lahf
cwde
cwde
fist
add
push
xchg
xchg
sahf
lahf
add
add
xchg
in
mov
in
mov
jmp
add
jo
add
arpl
outs
add
lock
add
push
bound
ins
add
jbe
jbe
jb
jae
cmp
lock
add
add
data16
push
pop
jne
into
int3
cdq
mov
push
inc
or
pop
pop
data16
fbld
pop
push
repnz
data16
pop
retf
lods
xor
add
push
ja
jnp
add
sbb
push
out
sbb
xor
into
push
xor
xor
dec
pop
scas
pop
xor
outs
and
xor
xor
fwait
xchg
cmp
push
adc
ror
ss
or
rol
repz
jbe
push
cmp
cmp
sub
pop
std
out
fstp
inc
cmovp
mov
iret
imul
push
dec
push
test
inc
add
mov
mov
jp
fdivr
push
jmp
jo
inc
sbb
add
or
dec
jne
dec
gs
outs
mov
(bad)
fnsave
mov
(bad)
loopne
jmp
adc
arpl
ins
popa
imul
adc
and
sahf
nop
mov
in
pop
or
pop
sbb
shr
cli
pop
or
inc
jb
xor
adc
cmp
pop
pushf
cpuid
dec
xor
gs
arpl
nop
pop
mul
fs
pop
sub
inc
outs
dec
or
push
adc
pop
outs
push
(bad)
(bad)
push
inc
dec
outs
jbe
ins
imul
sub
pop
imul
addr16
or
push
scas
pusha
stos
and
dec
dec
or
fld
pop
sub
or
mov
loopne
addr16
leave
dec
fwait
std
jmp
imul
je
jo
gs
inc
inc
push
fild
cmp
cmp
js
cwde
pop
or
std
push
stos
add
xor
ja
xor
push
pusha
or
in
adc
pop
xor
ss
sub
pop
ja
in
push
or
add
xlat
pop
xor
daa
jns
loopne
jnp
ja
or
in
das
repnz
xor
inc
imul
jb
pop
xor
add
movs
pop
add
pop
lods
lss
jmp
outs
je
inc
sti
cs
jb
je
pop
sub
or
pop
or
mov
pop
punpckhdq
pop
lock
mov
imul
gs
or
xchg
iret
mov
sbb
adc
addr16
push
add
push
addr16
mov
outs
imul
outs
inc
jb
js
xor
fnsave
push
cmp
cmp
mov
pop
loopne
out
loopne
add
push
outs
ins
jo
gs
mov
ss
outs
outs
fild
cmp
aaa
mov
add
pop
movs
rsm
stos
adc
dec
inc
sar
pop
stos
jb
popa
pusha
xlat
pop
xor
sub
fild
adc
pop
punpckhdq
rol
push
cmp
gs
popa
je
iret
jmp
sbb
outs
adc
adc
addr16
pop
sbb
push
aaa
cwde
stos
loopne
sbb
inc
popa
outs
mov
inc
or
cld
push
jb
jae
popa
inc
fwait
sbb
retf
inc
nop
stos
add
jo
mov
das
jmp
mov
inc
push
(bad)
mov
jg
pusha
adc
sub
mov
outs
add
sub
mov
rsm
jg
add
ja
xlat
push
pop
pusha
and
daa
(bad)
in
add
add
dec
push
push
push
dec
inc
pop
inc
dec
out
fdivr
or
dec
inc
dec
sub
inc
adc
mov
ret
lock
imul
fnstcw
jae
sub
push
out
mov
(bad)
push
packsswb
outs
ins
add
or
je
aam
gs
push
inc
imul
fcom
sbb
push
fisubr
push
inc
jns
inc
jb
jns
ss
daa
pop
xchg
push
mov
push
add
or
jnp
adc
inc
test
loope
das
enter
or
ss
xor
(bad)
adc
mov
sub
dec
add
fstp
dec
adc
das
(bad)
adc
lds
test
pop
(bad)
pushf
sahf
(bad)
movs
in
fiadd
push
add
cmp
and
sbb
push
dec
nop
adc
test
retf
and
inc
ffreep
in
or
pop
stos
movs
cmp
push
jmp
call
sub
mov
jp
pop
lods
dec
imul
ss
push
inc
push
enter
mov
or
loopne
mov
push
in
gs
data16
add
inc
std
add
dec
pop
inc
and
jns
add
pop
add
sub
xchg
out
and
sub
mov
jo
xchg
sti
adc
xchg
dec
and
cmp
jo
call
cmp
adc
push
ret
inc
ins
popa
jae
in
daa
mov
ja
popf
sub
adc
and
dec
push
push
adc
push
aaa
sub
fcomp
push
test
es
popf
add
push
mov
push
add
cmp
adc
or
fs
jo
rol
push
loope
cmp
lods
movs
ins
or
adc
mov
(bad)
fadd
jge
test
pushf
cmp
jae
add
js
inc
fs
cmps
push
add
dec
or
ins
sbb
pop
lds
int3
ins
das
add
je
jne
add
pop
rcr
js
arpl
imul
mov
mov
popa
push
add
and
add
xchg
adc
loope
mov
sub
jge
or
cmp
jle
pop
or
popa
cmp
or
xchg
adc
mov
push
icebp
sbb
mov
ins
cdq
jae
xlat
fisttp
push
dec
xor
add
push
cmp
adc
popa
xor
xchg
gs
not
int
or
jne
add
push
jo
or
and
int3
mov
data16
ins
xor
mov
ds
add
inc
mov
fistp
jo
push
dec
sbb
and
lock
push
mov
cdq
push
mov
push
dec
div
data16
data16
ficom
xchg
push
sbb
pop
es
push
jo
push
and
scas
xor
ficom
push
ins
cs
fwait
push
aam
push
cld
push
call
out
mov
cmps
call
mov
or
imul
rcr
outs
lods
xchg
loopne
pop
inc
call
sub
jae
inc
xor
add
push
nop
adc
pop
sub
mov
test
mov
and
data16
sbb
sti
js
ret
cmp
sub
or
dec
popa
js
call
vpmaddwd
xor
adc
mov
or
repnz
xchg
cmp
gs
out
lds
pop
ins
imul
icebp
push
popa
bound
dec
push
repnz
(bad)
daa
push
xchg
(bad)
or
xor
pop
mov
sbb
das
jae
cmps
(bad)
ds
popf
sbb
push
movhps
das
aad
push
mov
xor
pop
ss
loopne
add
out
fdiv
ds
mov
prefetchnta
inc
outs
fld
cmp
sub
maxps
sahf
xchg
outs
mov
pop
icebp
nop
push
push
inc
clc
push
and
test
ds
dec
and
and
loopne
pop
mul
inc
pop
pop
or
pop
arpl
sbb
sbb
stos
xchg
jo
popa
popf
popf
add
test
mov
loope
add
sbb
pop
lock
pop
je
mov
adc
dec
gs
outs
jb
pop
or
push
push
fmul
jp
addr16
adc
inc
ins
imul
push
and
mov
inc
cmps
in
mov
inc
dec
and
cmps
add
outs
and
sbb
or
std
aam
mov
dec
mov
or
jle
rcl
rcl
mov
add
and
mov
xor
cmc
dec
int
push
nop
jo
sbb
xchg
add
aas
xor
adc
gs
cmp
js
adc
pop
pusha
cmp
mov
pop
gs
(bad)
sbb
push
nop
jno
scas
add
and
push
scas
push
xchg
adc
fld
cli
add
inc
jp
mov
loopne
push
outs
jne
cmp
adc
mov
add
add
imul
mov
add
adc
ror
call
dec
scas
(bad)
or
sub
sub
aad
xchg
repnz
or
shl
xor
out
mov
push
js
mov
adc
inc
add
inc
fcom
add
push
pop
out
jmp
jle
push
jns
stos
and
not
fs
push
test
cmp
cmps
out
xor
invd
mov
sbb
sbb
cs
unpckhps
sub
lods
test
jnp
imul
ja
adc
add
xchg
inc
pop
dec
cmp
mov
pop
push
or
imul
inc
mov
or
je
inc
mov
xor
mov
dec
push
arpl
cmp
adc
int3
ret
lea
scas
and
pop
jp
adc
(bad)
repnz
test
shl
int3
pop
es
add
mov
push
lock
dec
ja
mov
in
xchg
sbb
jge
pop
cld
ins
rol
add
arpl
pop
inc
pop
pop
inc
mov
not
pop
enter
xor
ins
push
push
or
xor
xor
xor
dec
jo
arpl
xor
mov
add
es
or
mov
ficom
push
or
mov
sub
sub
sbb
jno
add
cmp
loope
movs
stos
jl
mov
add
repz
jae
cmp
push
add
mov
mov
leave
mov
push
push
cmp
jb
xchg
push
pop
add
in
inc
das
(bad)
pop
jl
icebp
jge
xor
push
inc
cmp
cmps
add
aas
and
cmp
aaa
(bad)
imul
mov
mov
dec
int3
dec
push
inc
push
pop
jne
sbb
aam
inc
rol
and
add
jns
inc
sub
sub
sti
sbb
scas
aad
aam
jne
jae
hlt
mov
(bad)
xor
push
pusha
mov
stos
cmp
mov
pop
cmp
dec
push
xor
push
mov
inc
add
add
mov
aas
jl
scas
cmp
push
add
xor
xchg
add
out
sbb
data16
xchg
push
push
or
jmp
out
loopne
jne
stos
and
adc
jbe
add
fiadd
dec
inc
loopne
mov
dec
lods
mov
xor
mov
push
mov
idiv
dec
scas
pop
cli
add
xor
ss
or
std
jns
pop
lahf
xchg
scas
mov
pop
test
push
lds
ins
xlat
test
ret
adc
xor
nop
pop
imul
call
loope
inc
xor
pop
fnstenv
pusha
xor
je
(bad)
cmp
and
mov
(bad)
pop
adc
pusha
loope
sbb
aam
aas
mov
mov
add
ja
pop
xor
pop
pop
pop
pop
ins
add
xor
fwait
xchg
xchg
xchg
pop
imul
mov
movs
add
add
sub
gs
add
mov
jo
sub
test
fwait
cmp
aad
rol
inc
sub
cli
aas
sahf
(bad)
sub
add
mov
movd
add
lods
jne
dec
inc
dec
inc
push
fild
and
push
test
ret
enter
push
clc
adc
jae
add
in
add
pop
and
xlat
add
imul
xchg
xor
add
leave
add
cmp
or
sbb
adc
push
dec
or
pop
ins
fsubr
out
push
jmp
sub
sub
inc
push
les
pop
out
push
fmul
sub
test
sub
icebp
add
lds
mov
(bad)
and
cmps
jo
sbb
out
test
cwde
mov
pop
xor
sub
push
push
mov
enter
test
cli
mov
div
xor
sub
bound
cmp
les
adc
(bad)
pop
sub
retf
and
loopne
in
es
or
push
sbb
push
outs
ja
scas
or
imul
pop
push
inc
cmps
push
shl
ja
fisttp
cwde
add
adc
push
mov
add
jo
out
test
out
add
add
nop
pop
test
aad
sub
xor
aad
aad
(bad)
ss
inc
bound
xchg
push
call
push
gs
(bad)
push
cmps
cmps
xchg
and
or
and
and
pop
xchg
test
mov
ret
retf
xchg
out
push
inc
or
aas
pop
ss
adc
ja
mov
pop
pop
pop
scas
(bad)
rol
popa
cmp
jmp
pop
inc
bound
pop
inc
jge
adc
push
arpl
push
fwait
dec
int3
pop
aaa
dec
fs
pop
dec
clc
pop
inc
call
or
cld
mov
pop
or
or
test
adc
addr16
add
add
outs
mov
int3
enter
das
jmp
or
in
pop
sbb
sbb
push
mov
in
push
add
aas
or
push
or
xor
cmp
cmp
jo
loopne
sbb
inc
stos
inc
xor
mul
cmc
push
push
cld
stos
pop
stos
cmc
xchg
pmullw
pop
jae
inc
push
into
out
xchg
add
sbb
push
aad
mov
sub
bound
das
xchg
test
pop
ret
outs
pop
mov
mov
mov
adc
cmc
or
and
inc
int
mov
inc
out
cmp
pop
xor
ja
or
add
loop
or
jle
loopne
pop
call
push
push
push
dec
and
push
fs
sub
test
xor
jo
sbb
pushf
stc
addr16
dec
inc
gs
push
inc
jnp
test
sbb
xor
add
cmp
and
lahf
daa
sbb
mov
daa
faddp
mov
outs
sbb
or
in
ins
rol
add
adc
push
add
xor
pop
test
ret
push
cmp
inc
xchg
xchg
pusha
test
dec
test
test
and
aaa
and
ficom
add
shl
bt
add
pop
les
stos
ret
sbb
cmp
push
dec
push
inc
test
stos
sbb
mov
push
xor
add
out
shl
mov
cmp
xchg
cmp
and
or
stos
adc
loope
mov
scas
or
aam
dec
data16
inc
and
push
or
cmps
sbb
sbb
sbb
sbb
das
aaa
push
sbb
addr16
in
or
cmp
fcomp
test
adc
loope
mov
cmp
xor
mov
xchg
xlat
arpl
pushf
inc
sbb
clc
jne
fisttp
popa
je
dec
push
pushf
fist
and
popf
adc
jecxz
add
push
popf
xchg
and
push
sbb
mov
pushf
and
mov
push
or
mov
adc
mov
or
lock
je
pop
les
(bad)
jecxz
jle
jg
cmp
into
mov
hlt
push
push
jg
mov
jae
jne
mov
push
out
popa
lds
xchg
inc
pop
dec
mov
nop
inc
sbb
mov
xchg
pop
or
pop
mov
ins
push
push
sub
lock
and
cmp
and
xor
ins
push
add
arpl
dec
out
fld
mov
jg
fcom
jno
ficomp
push
cmp
dec
and
and
mov
jmp
mov
test
lods
popa
mov
inc
inc
push
fcom
rol
fdivr
data16
dec
jno
jns
pop
adc
(bad)
jns
and
mov
xor
(bad)
stos
inc
xchg
lds
psubusw
jno
js
sub
inc
mov
push
es
ret
loop
das
ror
pop
inc
sbb
lea
push
jo
sbb
iret
push
adc
jecxz
mov
add
ja
mov
rcl
aaa
dec
outs
jl
loopne
cmp
and
add
cmps
out
pop
hlt
pop
mov
movs
add
and
pop
fs
cmp
out
and
push
test
add
xor
cmp
mov
xor
into
dec
adc
sbb
std
test
mov
mov
mov
sbb
xor
mov
xor
das
ror
jnp
aad
xchg
xor
xor
dec
push
stos
test
xchg
or
or
pop
fcom
mov
(bad)
add
fstp
add
idiv
pop
ja
cwde
cwde
cmp
pop
cmp
jae
inc
xor
aaa
inc
out
cmp
cmp
push
push
jg
enter
popf
push
out
or
xchg
fisubr
les
push
mov
call
add
xor
dec
gs
outs
jb
dec
sub
push
in
gs
test
mov
pop
pop
cdq
inc
cmove
cmp
cdq
inc
pop
je
cdq
sub
jno
jl
fild
adc
xor
jbe
xchg
fsubr
cdq
imul
aas
lahf
(bad)
out
or
outs
shl
cs
push
retf
addr16
ret
adc
jl
bound
push
xchg
mov
or
pop
aas
outs
add
inc
pop
cmp
mov
push
outs
int3
push
jo
xchg
outs
test
push
lahf
adc
sub
sahf
loope
mov
loope
dec
jp
rcl
and
sub
pop
inc
popa
adc
push
adc
das
pop
and
retf
(bad)
aas
rol
mov
add
push
push
push
mov
std
outs
push
lea
movs
add
inc
cld
mov
call
mov
push
in
jnp
mov
push
sub
push
push
or
mov
dec
ret
adc
inc
or
inc
(bad)
(bad)
(bad)
mov
adc
mov
sub
mov
lahf
sub
pop
aaa
fld
mov
add
retf
push
ss
shl
hlt
pop
lock
jnp
popa
clc
in
push
hlt
push
push
fcomp
mov
call
pop
in
adc
loopne
or
neg
push
inc
les
outs
in
int
add
or
clc
pop
push
add
xor
dec
in
add
popa
cmp
mov
push
cmp
or
aaa
aas
sbb
lahf
sbb
fisubr
mov
inc
sti
das
add
movnti
call
sbb
in
xor
dec
and
(bad)
fsub
out
mov
adc
pop
cwde
(bad)
pop
pop
pop
mov
pop
ret
xor
mov
aad
mov
(bad)
mov
fadd
mov
shr
xor
jmp
adc
out
add
rol
xchg
add
lods
std
jne
mov
ret
(bad)
in
inc
xor
mov
cmp
icebp
(bad)
push
mov
(bad)
dec
test
jl
inc
xor
movzx
xor
and
fisttp
or
jp
dec
jne
mov
ins
xor
mov
pop
add
push
stc
addr16
not
sub
inc
mov
push
ret
clc
push
add
or
add
and
cmp
out
add
fstp
jmp
cmp
jl
sub
mov
enter
adc
mov
xor
cmp
ja
jmp
out
in
push
sub
std
pop
adc
mov
imul
add
test
jns
or
cli
add
adc
sub
sar
daa
jge
add
cmp
shr
xor
ret
dec
cmp
leave
mov
mov
sti
rcr
cmp
mov
out
(bad)
jbe
pop
fmul
and
(bad)
out
ins
jne
das
xor
fstp
mov
(bad)
push
cmp
jge
inc
dec
jne
and
out
(bad)
mov
xor
lock
mov
aam
movs
cdq
ficom
cmp
adc
push
ins
adc
enter
sbb
aam
adc
int3
push
cwde
adc
adc
cs
cmp
mov
hlt
add
add
mov
push
cli
push
push
clc
sbb
xor
mov
jg
push
jo
dec
test
jl
inc
xor
mov
mov
lea
call
xchg
int3
sbb
fisttp
dec
mov
pop
adc
sbb
(bad)
add
dec
jne
mov
les
call
in
cmp
adc
pop
pop
pop
cld
adc
mov
call
jmp
or
jmp
inc
outs
mov
fiadd
push
mov
je
or
cmp
cmp
push
mov
cmps
sub
pop
hlt
cmps
pop
(bad)
mov
push
push
aaa
push
adc
icebp
mov
jo
pop
add
loop
jnp
mov
inc
or
adc
call
mov
stos
adc
pop
pusha
call
or
push
hlt
fisub
scas
mov
pop
mov
push
pop
sub
cld
add
or
push
inc
mov
and
adc
cmp
cmp
xor
inc
dec
lock
mov
pop
fucomi
mov
sar
add
cmp
mov
fwait
pop
jmp
mov
fcomp
pop
adc
mov
in
scas
loop
aaa
add
pop
dec
out
xchg
pop
mov
xor
push
xor
arpl
fsub
xchg
jge
and
push
fdivr
sbb
pop
push
inc
or
jl
shr
adc
test
(bad)
mov
mov
mov
mov
mov
stos
mov
pusha
aam
add
and
inc
popf
adc
js
dec
mov
push
cmc
dec
test
movs
loope
loopne
pop
addr16
mov
loope
sar
dec
adc
add
bound
sbb
add
loope
mov
je
or
inc
mov
or
mov
sub
cmp
dec
enter
mov
ret
pop
push
fsubr
inc
pop
test
xor
xor
adc
mov
int3
popf
mov
mov
mov
mov
fabs
sbb
sub
lock
scas
in
mul
pop
outs
lock
inc
icebp
test
xor
jae
push
mov
pop
or
inc
or
faddp
rcr
ret
loopne
ucomiss
pop
cld
dec
or
push
push
mov
fdiv
stos
loopne
or
ja
pop
xchg
in
mov
add
jne
mov
retf
in
jl
mov
das
std
mov
dec
mov
cmp
jge
mov
lea
mov
ret
add
add
lds
xchg
inc
add
ret
pop
pop
xlat
or
pop
test
scas
nop
adc
mov
sbb
mov
push
cwde
and
shl
mov
rol
sub
mov
and
paddb
ins
movs
push
cmps
jle
adc
rcl
mov
dec
cmp
ja
inc
pusha
add
add
xor
mov
cli
in
dec
lock
popa
fimul
mov
stc
sub
adc
pop
cwde
pop
push
enter
push
jl
mov
or
loopne
jnp
iret
mov
cmp
fwait
jmp
cmp
ja
enter
fld
adc
retf
rol
jbe
es
pop
jno
loopne
jmp
lea
or
jmp
xchg
sbb
cmps
shr
call
add
pushf
mov
daa
dec
jl
rol
stos
je
fmul
push
xor
mov
push
push
out
jne
add
mov
cmp
jne
lea
push
pushf
fld
into
loopne
movs
adc
mov
mov
stos
jl
jmp
pushw
jne
xadd
sbb
xor
rcr
sbb
cwde
mov
inc
jne
xor
xor
sbb
adc
in
pop
aad
inc
add
push
adc
fwait
sbb
mov
mov
jnp
movs
call
enter
cmp
add
repnz
xor
sbb
sbb
adc
xor
cmp
icebp
push
loopne
mov
test
adc
mov
xor
adc
or
sti
xor
mov
shl
je
add
inc
aam
xor
scas
ins
bound
aaa
sub
push
jo
pop
in
iret
cmc
cmp
es
sbb
add
(bad)
dec
mov
rol
push
mov
test
movs
ret
xchg
stos
icebp
sub
sub
pop
lds
loope
dec
sub
adc
add
retf
inc
mov
xchg
lock
scas
repnz
jp
cmp
mov
dec
mov
mov
inc
mov
rcr
es
push
mov
lds
(bad)
cwde
dec
pushf
sub
adc
loopne
xchg
gs
jo
adc
xor
fwait
ret
scas
push
xchg
jle
leave
jbe
xor
add
outs
pushf
dec
jne
js
cmps
adc
sbb
add
dec
and
hlt
mov
rcr
pop
or
(bad)
mov
adc
js
adc
sub
sub
ss
push
inc
add
cld
mov
loop
add
pop
call
add
lea
inc
lea
mov
and
push
lock
sbb
and
popf
inc
mov
jecxz
adc
(bad)
or
cmp
and
push
add
ret
adc
xor
lds
clc
or
mov
adc
xor
clc
xchg
cmp
or
push
jge
mov
xchg
adc
test
push
xor
rcl
mov
push
cs
pusha
jbe
(bad)
clc
popa
push
inc
and
(bad)
or
xor
xchg
out
pop
sbb
mov
test
aas
push
mov
jmp
mov
xchg
pop
sbb
xchg
ds
lock
xor
fild
mov
or
fnstenv
ja
and
and
outs
xchg
add
inc
inc
add
dec
lea
pop
push
add
cmp
cld
daa
pop
adc
adc
or
or
jle
aad
inc
sbb
sbb
mov
adc
mov
push
adc
jbe
dec
add
clc
(bad)
cmp
sete
idiv
xor
js
adc
mov
pop
rol
push
push
push
push
mov
bound
xor
mov
in
push
or
xor
pop
cmovle
fistp
pop
jne
mov
or
loope
or
add
shl
mov
es
push
mov
xchg
dec
daa
retf
pop
pop
push
sbb
mov
cs
xor
retf
pop
adc
pop
adc
sar
pop
push
or
pop
sbb
mov
sbb
mov
dec
push
fdiv
in
shl
push
mov
mov
add
inc
xchg
push
sub
or
dec
sub
mov
push
div
push
sub
or
fwait
pusha
sub
sub
mov
loopne
xlat
in
nop
fisttp
adc
(bad)
into
cld
xchg
aaa
and
shl
push
call
push
out
inc
sub
test
sbb
(bad)
cmp
mov
data16
cmp
out
jno
ret
adc
outs
inc
ret
outs
movs
push
das
ins
out
pop
pop
push
fsub
mov
(bad)
mov
test
push
out
aas
sbb
mov
jnp
imul
int3
in
data16
push
sbb
clc
cs
dec
sub
fadd
mov
cmp
ss
sahf
and
mov
or
mov
mov
lods
(bad)
adc
sbb
jo
add
add
dec
rol
bound
das
jle
sbb
push
adc
hlt
add
mov
lock
add
bound
in
shl
xor
lahf
cmps
fimul
clc
mov
xchg
(bad)
jle
push
(bad)
xchg
pop
les
push
add
sbb
jbe
es
into
push
ins
mov
imul
or
je
sbb
mov
imul
xlat
adc
(bad)
stc
xor
test
xchg
stos
pop
pushf
jge
mov
xor
push
mov
sbb
cmps
adc
shl
out
push
xchg
sbb
ret
inc
in
ret
pop
add
and
icebp
mov
ja
add
dec
aad
pop
cmp
and
pop
xor
add
div
ror
xor
cwde
pusha
sbb
push
int
add
jl
sbb
pop
inc
icebp
and
add
push
fninit
lea
xlat
fist
inc
mov
sub
(bad)
and
fisubr
pop
outs
inc
jno
push
or
mov
push
inc
adc
sbb
push
push
ds
pushf
adc
sub
test
adc
push
inc
fmul
es
inc
sub
inc
jg
or
push
pop
xchg
jns
push
(bad)
adc
xor
es
jo
(bad)
pop
lea
or
and
adc
repz
and
xchg
or
pop
or
fisub
ins
mov
or
sbb
out
mov
fbld
(bad)
mov
jnp
cmp
rep
ret
pop
jo
ins
xor
mov
call
jmp
aam
add
hlt
mov
xlat
xor
push
jmp
call
test
jmp
mov
add
sub
pop
sbb
pusha
int3
push
jns
jb
cmp
mov
lds
push
addr16
movaps
loope
popf
fsubr
inc
push
cmp
sbb
pop
shl
imul
std
xchg
test
cli
or
cmp
jae
sbb
test
ret
sbb
add
inc
xor
xchg
int3
push
lea
imul
(bad)
jmp
pop
jnp
and
and
jge
or
push
and
jbe
mov
mov
(bad)
cld
sbb
or
std
jmp
cmp
mov
(bad)
adc
cmp
mov
add
mov
or
mov
xchg
(bad)
addr16
popa
mov
mov
jo
push
(bad)
mov
sbb
add
fistp
push
das
test
(bad)
sub
dec
add
mov
xchg
bound
mov
bound
shl
fmul
push
push
fstp
dec
adc
xor
aad
movs
aam
mov
cld
sti
adc
call
add
xlat
mov
mov
add
push
pop
mov
mov
adc
loopne
loop
movzx
lock
and
inc
xor
lea
sbb
dec
push
push
mov
push
out
test
push
cs
mov
or
inc
add
dec
jne
bound
add
iret
loopne
add
mov
mov
mov
xchg
sar
mov
or
or
jns
test
dec
dec
dec
sbb
loop
shr
dec
dec
cld
mov
push
cld
add
mov
sbb
das
mov
adc
rcr
adc
or
mov
ds
add
dec
inc
adc
or
lea
(bad)
and
sbb
in
sub
mov
push
or
popa
sub
jb
dec
je
dec
sub
jb
adc
aaa
mov
jo
jl
ret
or
cmp
ja
push
xchg
cld
mov
push
ds
das
add
jnp
out
sbb
pop
add
xor
ss
ds
push
in
jnp
ficom
push
push
pop
shl
cs
adc
repnz
add
push
mov
pop
push
push
push
mov
retf
pop
div
imul
add
shr
adc
aad
aas
cmp
je
cmp
jne
and
add
add
pop
inc
cmp
outs
scas
nop
aas
pusha
pop
daa
cwde
add
neg
mov
jns
xchg
xchg
push
jo
shl
and
sub
or
jno
(bad)
js
cwde
xchg
jno
jp
sbb
or
scas
inc
sbb
adc
sbb
xor
mov
daa
shl
in
cdq
sub
fnsave
jo
sub
mov
ins
adc
mov
sbb
imul
sbb
xchg
jnp
adc
push
or
pop
cmp
or
(bad)
push
(bad)
or
test
inc
adc
add
mov
idiv
or
xchg
or
ss
data16
jns
mov
mov
pushf
lea
stos
add
push
js
and
mov
or
and
xlat
iret
sbb
pop
mov
push
mov
add
mov
adc
dec
test
jb
inc
es
and
stos
imul
mov
push
mov
in
(bad)
inc
dec
jmp
test
mov
out
lods
push
inc
and
xchg
push
adc
daa
fld
or
dec
iret
mov
adc
push
shl
or
or
cmp
test
mov
xchg
adc
fcmovne
out
mov
or
add
shl
push
xor
mov
jmp
jae
mov
mov
sbb
pop
jmp
cmp
test
add
and
xor
int3
mov
mov
inc
movs
xor
std
inc
dec
jne
mov
(bad)
fistp
push
out
and
cmp
push
push
and
cs
stc
mov
push
aas
(bad)
xor
pop
inc
(bad)
je
sbb
ret
test
pop
sbb
xor
push
inc
scas
lock
into
adc
pushf
xor
movs
ins
cmp
rcr
jle
fadd
ror
rol
pusha
test
adc
dec
aaa
dec
into
jge
arpl
xchg
jp
pop
cld
add
jmp
(bad)
pop
add
pop
clc
fwait
cmps
ret
mov
adc
inc
xchg
sub
dec
sete
mov
inc
or
test
add
shl
loope
or
jne
fild
sbb
adc
mov
scas
sbb
int3
es
or
sub
dec
mov
ja
test
dec
fidiv
retf
sbb
inc
and
movs
or
sub
or
mov
add
jne
fbstp
pop
xchg
ds
rcl
pop
or
adc
bound
fmul
xor
add
in
ficom
dec
fs
xchg
push
outs
pusha
loop
js
js
ficom
cmp
or
loopne
or
cmp
add
sub
pop
pop
cld
cli
pop
cmp
xchg
jne
xor
adc
es
push
call
add
repz
jl
sbb
scas
add
or
cmp
je
(bad)
out
lea
or
in
push
or
in
shl
adc
out
rcr
pop
inc
loopne
pop
mov
pusha
xor
mov
sbb
data16
fsub
pop
or
jnp
es
aad
xor
push
pop
mov
add
mov
or
cld
test
rol
push
or
mov
jge
lea
sub
cwde
mov
cmp
jmp
pop
or
cmp
sub
or
popf
sbb
inc
push
test
mov
or
add
and
push
or
pop
lock
xchg
jge
ret
fsub
push
dec
gs
push
js
xchg
fadd
and
or
(bad)
pop
and
pop
jmp
stos
xchg
push
(bad)
in
in
pop
dec
lods
cmp
and
fnstsw
addr16
mov
add
dec
dec
add
inc
add
not
cmp
ds
je
mov
sbb
add
lea
sbb
repnz
pop
push
inc
es
es
daa
adc
and
dec
ss
xchg
sbb
es
cmp
sub
add
add
or
push
sbb
or
push
mov
sti
adc
xchg
pusha
xor
add
fiadd
or
jo
push
nop
or
or
dec
fmul
inc
or
cmps
es
sbb
add
lods
pop
sub
mov
sub
push
mov
lock
call
inc
xchg
and
je
outs
dec
mov
cdq
retf
imul
test
jns
fadd
sar
adc
ror
inc
jne
(bad)
int
(bad)
ss
and
jne
fiadd
out
add
retf
clc
inc
sub
shl
mov
pusha
xor
adc
jecxz
nop
rol
movs
push
jge
inc
cmp
and
inc
sub
push
push
jo
loop
outs
mov
loopne
sar
ss
push
adc
sub
cld
push
movs
and
clc
inc
push
clc
ret
push
mov
daa
or
add
add
and
jge
or
jbe
mov
jno
pop
add
add
and
jo
enter
jne
rol
mov
add
sbb
inc
sti
adc
jge
mov
jl
pop
clc
cmps
cmp
mov
xor
ret
or
sar
in
mov
mov
cmp
sub
adc
jge
mov
xor
iret
push
inc
pusha
ss
and
push
or
fsub
rcl
or
sub
test
cmp
cmp
push
push
adc
lods
sub
mov
sub
xchg
xchg
or
add
add
sbb
popf
ins
xchg
sbb
ret
into
pop
das
test
add
add
in
xor
rol
pop
aaa
sbb
lea
inc
pop
and
adc
or
mov
and
dec
ret
rcr
pop
and
mov
data16
loopne
inc
or
push
in
shr
retf
or
lea
push
imul
ss
cmp
pop
adc
adc
mov
sub
je
push
adc
mov
xor
add
cmp
popf
push
cwde
jae
arpl
add
jge
xchg
nop
(bad)
movs
or
into
jnp
and
mov
rol
into
or
into
fwait
mov
cmp
and
jae
xor
pop
hlt
pop
jl
xor
dec
rcl
push
push
jmp
cmp
ss
lods
xor
fs
mov
imul
add
xchg
adc
cmp
fisttp
call
sahf
mov
xor
scas
fcom
pop
sub
push
fmul
cdq
idiv
mov
enter
out
(bad)
mov
xor
xor
and
mov
mov
add
movs
and
mov
dec
sbb
sub
rcr
imul
mov
add
mov
jl
daa
cdq
jnp
scas
jge
add
cmps
test
nop
xor
ss
outs
fwait
adc
jmp
mov
inc
push
lea
push
adc
mov
add
mov
push
or
push
lods
in
adc
xor
pop
fnstcw
lock
call
add
mov
call
dec
pop
mov
pop
mov
push
int3
cmp
pop
and
inc
imul
sub
sub
test
sahf
sub
cmp
lock
pusha
sbb
ja
sbb
adc
xor
lock
cmp
jne
sbb
imul
idiv
fldenv
neg
inc
test
(bad)
sub
adc
and
fcomp
pusha
dec
jne
stos
cmps
inc
add
pop
gs
test
jle
pop
call
in
mov
fld
pop
mov
daa
push
mov
push
test
jne
dec
or
pop
cmp
xchg
xor
jb
cli
pop
test
daa
(bad)
inc
jnp
xor
sub
jmp
and
(bad)
lock
lock
mov
inc
and
enter
loopne
sub
imul
scas
xchg
sti
mov
jne
das
pop
cmp
shr
add
test
jle
xor
ret
mov
mov
and
add
add
imul
mov
ja
add
ss
mov
push
and
pusha
adc
cdq
add
ret
push
mov
test
ja
pop
popa
xor
inc
pop
or
sub
adc
or
mov
or
mov
xchg
sbb
mov
or
jno
and
jmp
ror
push
inc
inc
ss
xor
ja
and
psraw
ret
and
sbb
(bad)
inc
add
fs
mov
or
out
jo
push
push
jmp
mov
pop
jno
pop
neg
retf
push
js
not
in
sub
je
or
popa
sbb
in
loopne
mov
add
mov
and
jne
fiadd
adc
mov
rcr
xchg
ins
in
ret
push
cdq
push
mov
test
out
scas
loopne
xor
dec
pop
or
jmp
ror
push
pop
shr
dec
lods
sub
cmp
mov
mov
jno
sbb
mov
add
add
fdiv
clc
add
mov
or
sbb
or
or
mov
fistp
inc
hlt
add
cmps
js
adc
or
mov
(bad)
ret
int
xchg
inc
add
push
push
je
sub
pop
mov
add
jnp
sub
jb
push
xor
dec
push
aam
adc
fstp
sbb
add
and
mov
inc
dec
jne
jne
sub
outs
ins
test
jbe
enter
fdivr
jmp
and
jnp
xor
xchg
js
xor
repnz
add
js
js
call
outs
jns
ins
dec
into
dec
into
and
retf
xor
jmp
sbb
retf
data16
mov
add
sar
adc
mov
and
outs
sub
add
and
sbb
cmp
mov
lods
jp
mov
loope
jnp
(bad)
dec
cmp
or
push
mov
sub
pushf
imul
loop
or
mov
and
out
xor
lds
inc
jb
jp
and
pop
(bad)
pop
mov
push
imul
adc
mov
xor
pop
sbb
xor
mov
out
std
jnp
cmp
push
mov
pushf
dec
lock
test
int3
imul
jl
push
mov
and
inc
mov
xor
test
add
dec
outs
repnz
adc
aaa
data16
fcom
loop
ret
test
push
sbb
inc
or
test
fldenv
je
jmp
int
mov
lock
cmp
jmp
sub
popf
sti
push
adc
mov
ss
mov
push
outs
sub
adc
mov
mov
call
xor
and
jp
cmp
jmp
mov
lods
arpl
lahf
mov
jne
xor
ret
dec
scas
adc
fisubr
xor
inc
jno
push
call
lock
cmps
jo
or
in
js
mov
ja
cmp
xor
and
xor
or
adc
je
dec
lods
sub
lods
sbb
sub
imul
sub
xor
ret
sub
fadd
xchg
fsubr
xchg
sub
or
into
and
push
adc
adc
sahf
mov
pop
imul
fadd
jno
js
imul
sub
mov
xchg
into
and
popf
sub
addr16
nop
xor
sub
stos
mov
les
icebp
dec
bt
mov
pop
xchg
xor
mov
jg
aam
ret
mov
call
mov
imul
xlat
dec
pusha
xchg
or
ss
cmc
xor
jmp
ret
sbb
push
adc
test
add
aaa
or
cmc
repz
fbstp
out
mov
add
inc
enter
push
shl
mov
loopne
sub
jbe
push
jp
cmps
stos
sub
or
push
or
arpl
add
data16
fnstsw
cmp
jbe
mov
sub
jbe
jge
sbb
ja
sbb
pop
sub
and
sbb
sbb
lock
dec
jnp
inc
jb
ss
je
sub
xor
es
daa
adc
and
nop
sbb
test
inc
fimul
or
cmp
or
inc
sbb
mov
test
cmp
or
mov
and
dec
inc
mov
sbb
dec
xlat
(bad)
fdiv
and
ja
push
or
dec
addr16
outs
es
dec
pop
retf
adc
jo
adc
jmp
daa
fsubr
sahf
adc
daa
push
daa
add
or
test
mov
mov
push
repnz
lds
xchg
push
fiadd
push
mov
inc
rcr
mov
cmps
and
dec
je
ins
add
cmp
or
loope
jmp
pop
mov
mov
cwde
jmp
sbb
aas
pop
dec
inc
int3
cmp
or
xchg
and
sbb
addr16
fcomp
inc
mov
mov
dec
adc
pop
xchg
call
jnp
out
cmc
nop
pop
inc
and
dec
push
push
shl
push
js
jno
add
adc
or
cmp
adc
xor
pop
and
fsubr
sub
add
jne
je
scas
cmps
cmp
dec
sbb
push
bound
retf
inc
sub
cmp
ins
mov
and
sbb
daa
loopne
ja
iret
add
add
xlat
sahf
push
sub
mov
jecxz
sbb
and
mov
or
or
push
or
push
in
mov
add
add
mov
xor
fst
and
push
lods
lea
and
ins
in
or
ins
push
dec
fcos
add
cdq
push
jo
and
clc
inc
or
shr
fdiv
mov
loopne
ja
and
add
mov
sti
xchg
test
inc
sub
aam
mov
inc
inc
mov
jb
add
or
jl
xor
call
mov
faddp
xchg
push
sbb
sbb
sbb
addr16
retf
add
out
jg
push
add
add
rcl
clc
(bad)
adc
add
sbb
pop
adc
cmp
cmp
ja
shr
push
shr
adc
adc
ret
dec
call
cwde
js
(bad)
daa
and
add
cdq
mov
push
jne
push
clc
push
out
add
or
push
lods
pop
sub
add
dec
in
fisubr
sbb
cmp
int3
mov
scas
inc
push
fsubr
sbb
add
mov
mov
pop
loopne
fs
mov
pop
ja
int
add
xor
inc
dec
push
jne
cld
sbb
add
sbb
lea
lock
pop
mov
je
sub
push
cmp
add
je
push
movs
cmp
pop
aad
inc
cmp
je
sbb
sub
mov
mov
add
xchg
mov
add
and
cmp
push
(bad)
mov
push
loopne
adc
xchg
mov
xchg
data16
stos
inc
call
sahf
add
sbb
jo
ins
add
nop
adc
xlat
popa
push
shr
sub
bound
les
or
ja
ins
cld
push
mov
call
mov
xor
add
or
loope
adc
mov
es
das
push
xchg
shr
add
add
jecxz
fld
cmp
mov
xor
rol
mov
scas
or
nop
pop
mov
sub
addr16
data16
in
mov
jle
push
sti
outs
dec
push
inc
xor
sub
cmp
jb
mov
sub
adc
add
adc
jmp
push
sar
sub
push
sub
add
inc
dec
jne
(bad)
adc
mov
sbb
dec
sub
or
pop
jmp
out
pop
dec
in
ret
push
loop
sub
jg
mov
push
adc
sub
mov
in
mov
adc
or
adc
xchg
rcl
ror
pusha
fnstsw
loope
adc
(bad)
jb
out
fisttp
inc
out
lods
bound
mov
and
aam
inc
sbb
cmp
fdivr
push
lds
push
mov
add
cmp
shl
ds
bt
jae
(bad)
xchg
ja
inc
adc
and
inc
(bad)
jnp
or
and
pop
int
out
add
inc
mov
sbb
add
or
add
adc
(bad)
jne
push
inc
xchg
sbb
adc
xchg
inc
(bad)
sbb
sti
add
icebp
and
and
adc
mov
fiadd
mov
or
push
xor
dec
cmp
sub
push
clc
mov
movs
pop
fwait
pop
adc
mov
add
cmps
jl
jmp
add
loopne
not
ret
and
push
pushf
lea
jo
rol
adc
sbb
inc
add
or
sub
(bad)
sbb
mov
inc
cwde
mov
jg
ss
je
or
test
jne
push
ret
push
adc
cmp
cmp
mov
pop
mov
or
jne
jnp
adc
test
dec
cmp
outs
and
data16
and
fstp
movzx
mov
sbb
sar
dec
test
push
aam
sub
adc
add
sub
jnp
mov
loope
inc
pusha
cmp
dec
pop
test
nop
and
mov
add
pop
add
call
add
sub
loopne
mov
mov
add
sbb
xor
xchg
mov
cld
jmp
loope
push
rcl
stos
pushf
lock
lock
je
or
mov
shl
push
(bad)
lea
and
sub
jmp
and
push
push
push
sbb
ja
xor
and
push
lea
lea
or
movs
pop
and
jl
inc
add
or
sub
and
aam
or
sbb
adc
in
push
sub
rol
push
mov
rcl
xor
xchg
dec
sahf
push
dec
cli
xchg
gs
or
cmps
inc
sub
shl
nop
je
cld
mov
test
jg
jg
lea
sbb
xchg
pusha
dec
jp
popw
out
xchg
shr
push
out
xor
or
pop
ja
bound
nop
and
jns
sti
jg
xor
in
test
xchg
cmp
outs
jp
aad
sub
retf
ds
xchg
pop
data16
out
int
or
(bad)
jo
pop
add
cmp
je
xor
adc
jnp
mov
test
cmc
(bad)
jnp
stos
mov
fldz
fld
fcompp
fstsw
sahf
fcom
call
jmp
sub
or
sbb
test
clc
and
inc
shr
shr
and
jne
add
outs
fld
push
leave
test
fstp
fwait
and
add
popf
sub
test
and
xchg
ss
ins
add
mov
test
and
jbe
mov
fdiv
mov
jo
in
pop
daa
fild
cs
fld
mov
or
fdivp
adc
add
jo
sub
loopne
sbb
jo
jne
pop
add
cmp
aaa
cmps
ret
inc
int
add
nop
pop
dec
or
mov
inc
pop
cmp
push
cs
test
jne
xor
add
mov
sub
xchg
push
jmp
psraw
ss
inc
dec
sub
xchg
push
enter
nop
fcmovb
mov
call
pshufw
pop
je
shr
mov
hlt
nop
out
mov
push
xchg
push
xchg
pop
lock
adc
pop
or
jl
inc
xor
call
pop
xlat
and
inc
dec
jne
adc
inc
push
sub
xchg
push
xchg
mov
bound
or
jae
add
xchg
xchg
fadd
ds
or
add
xchg
add
push
push
into
jo
adc
cmc
cmp
jo
adc
mov
xor
add
into
sahf
clc
jg
mov
adc
push
add
mov
movs
jle
adc
lods
push
pop
xlat
dec
xchg
dec
jecxz
adc
mov
in
jge
arpl
mov
add
inc
hlt
sbb
jne
push
(bad)
jne
cmp
xchg
xchg
jmp
int
out
push
adc
pop
mov
jnp
stc
push
jae
mov
push
(bad)
mov
ins
(bad)
jmp
push
dec
jmp
movzx
lar
lea
shr
mov
jmp
das
test
sub
sbb
or
pop
mov
je
sahf
adc
in
or
adc
xor
outs
dec
(bad)
cmovae
lds
mov
out
push
push
das
pop
xor
pop
xor
lds
sbb
xor
xchg
add
add
mov
xchg
popf
into
inc
popf
out
icebp
add
outs
jge
(bad)
pushf
mov
ret
mov
xchg
inc
adc
movs
inc
push
mov
adc
inc
sbb
aaa
rcr
shr
xchg
lea
push
lea
push
shl
pop
repnz
(bad)
mov
jmp
cmp
test
mov
fistp
loopne
popf
dec
cmp
std
mov
or
retf
mov
adc
add
out
push
or
push
add
add
int
(bad)
xor
xor
sub
je
movs
add
add
xchg
test
adc
inc
mov
add
push
out
mov
ror
jnp
mov
mov
push
push
xor
rcl
mov
(bad)
adc
add
js
or
cmp
sbb
pop
ret
push
jne
imul
add
cmp
cmp
mov
cwde
sti
jle
test
into
test
lods
sbb
sub
cmp
fdivrp
fstp
fwait
jmp
nop
popa
out
push
fld1
jg
or
cwde
loop
push
pusha
push
retf
leave
mov
loopne
add
mov
sti
fidiv
adc
mov
cli
dec
rep
and
add
cmp
jne
and
mov
mov
js
cld
add
inc
loopne
ret
pusha
add
or
xchg
rcl
sbb
dec
jge
adc
push
or
cwde
cmp
or
xor
cmp
or
bound
xor
mov
adc
pop
imul
repnz
pop
jbe
cmp
jg
dec
or
xchg
mov
mov
jmp
sti
inc
enter
push
pop
idiv
mov
rcr
loopne
inc
inc
rol
inc
xor
adc
int3
sahf
or
aas
mov
lods
hlt
cdq
pop
pop
mov
push
ins
sub
add
jl
jge
adc
mov
lods
xor
inc
call
adc
push
loopne
test
(bad)
ins
pusha
jle
fist
xchg
mov
sti
mov
mov
dec
nop
xor
aaa
sbb
mov
fdiv
fs
pop
pop
mov
mov
cmp
or
push
jg
adc
jne
cmp
inc
les
cld
push
jecxz
inc
mov
mov
mov
outs
xor
inc
mov
(bad)
outs
test
jl
bound
mul
jl
push
push
add
shr
mov
add
jle
push
js
jmp
ret
cmp
in
push
lods
div
push
mov
xor
xor
outs
test
cmp
inc
js
inc
add
adc
lahf
lea
ss
push
or
lock
dec
mov
int3
add
jle
into
test
sti
lods
mov
push
int3
shl
shr
mov
jg
mov
mov
dec
jp
enter
(bad)
push
jo
inc
nop
xchg
push
mov
jb
cmp
jecxz
adc
and
mov
inc
push
sub
je
loop
gs
shr
and
call
sbb
sti
adc
mov
push
add
enter
call
shl
sub
rcr
ret
jmp
mov
ret
push
iret
outs
cld
(bad)
sar
rcr
test
inc
pusha
retf
cmps
fld
leave
add
and
lods
or
pop
inc
adc
enter
mov
xor
cmps
cmp
and
add
popa
jne
mov
fidiv
dec
imul
nop
inc
cmc
std
cld
push
sbb
xor
out
inc
imul
cdq
cmp
mov
movs
shl
movs
xchg
loopne
and
push
test
movs
add
outs
mov
mov
push
push
cs
add
ret
and
rcr
or
addr16
add
jno
mov
rcl
push
jp
rol
dec
test
push
nop
imul
imul
push
popa
push
mov
add
mov
cmp
or
inc
cwde
or
xor
popa
jge
mov
ins
les
lea
icebp
loopne
or
je
call
lea
add
mov
fsubr
push
test
add
jecxz
inc
cmp
xchg
loopne
sbb
jne
add
cmp
iret
mov
shr
lea
push
push
sbb
aas
dec
lea
mov
ret
push
cdq
loope
push
push
xor
or
cmp
fsubr
mov
ret
test
xor
ret
push
push
push
mov
or
mov
jne
dec
into
or
fnsave
test
and
mov
hlt
mov
sbb
push
or
pushf
js
sar
add
js
daa
repnz
inc
loopne
lock
les
mov
and
test
jg
stos
pushf
loop
mov
cmp
add
jae
mov
sub
ret
push
jp
mov
lea
ins
ins
inc
xor
dec
addr16
shl
sbb
fsub
cmp
les
sbb
push
xor
mov
in
pop
fwait
cmp
jne
mov
ret
cwde
dec
pop
fdivr
cmp
add
dec
je
fst
mov
mov
fcmovne
ss
ficom
sar
pop
stc
inc
int3
mov
ror
mov
xor
push
loop
push
dec
sti
mov
mov
mov
and
mov
or
(bad)
int3
and
int3
xor
and
adc
and
inc
in
inc
jmp
adc
lods
inc
xchg
inc
fadd
and
das
outs
xchg
das
and
inc
jle
mov
or
ret
mov
stc
mov
dec
push
test
in
jne
pop
jmp
adc
add
repz
add
bound
call
xor
add
add
lds
nop
mov
shl
and
add
jnp
fcmovnu
adc
mov
cmc
in
jno
mov
movs
cwde
fstp
loopne
inc
dec
add
inc
add
add
ficomp
add
pop
pop
dec
ja
mov
das
pop
cs
add
xchg
add
lahf
cli
stos
retf
inc
out
retf
cdq
cwde
cmps
(bad)
cmp
int3
sbb
aaa
or
mov
sub
lahf
xor
dec
fcomp
inc
mov
loopne
scas
pushf
mov
xor
clc
movs
and
cmp
cmp
and
or
nop
add
mov
mov
cmc
sbb
push
adc
cs
or
bound
push
add
xchg
pop
ins
cmp
cmp
ds
sub
and
out
ret
retf
sti
loope
fstp
nop
shr
fcmovb
sbb
mov
(bad)
jmp
add
xchg
scas
push
push
neg
jo
add
xor
mov
rcl
mov
(bad)
fild
adc
jne
adc
cmp
jmp
add
xor
dec
xor
sbb
cmp
jb
mov
or
or
mov
adc
ss
(bad)
add
pop
adc
or
push
or
jo
jge
jae
je
mov
add
cmp
jl
stos
xchg
push
test
add
xchg
rol
inc
in
or
mov
cmp
inc
cli
jne
mov
pop
lock
cmp
ja
adc
addr16
xchg
js
cmp
or
add
out
(bad)
add
ret
push
mov
scas
loopne
dec
mov
inc
test
add
sub
xor
or
jmp
dec
cmp
test
loope
push
stos
sub
or
enter
jnp
or
pmaxsw
xchg
push
rol
mov
aas
or
(bad)
xchg
lds
shr
xchg
pop
mov
or
std
nop
jge
xchg
mov
call
pop
pop
push
mov
sub
lea
xlat
bound
enter
and
fld
pop
push
pop
fist
cmps
mov
xchg
sbb
push
mov
dec
dec
loopne
imul
push
jmp
or
xchg
add
scas
mov
sub
cmps
push
pop
xor
js
cmps
cmp
dec
xor
cld
movs
pop
dec
std
pop
sub
jb
es
lea
int3
jnp
les
adc
and
mov
mov
xchg
xchg
add
sub
jo
push
cld
add
(bad)
fcom
add
or
pusha
fld
jmp
push
fmul
push
loope
lock
mov
add
mov
mov
push
xlat
or
cmp
inc
mov
xor
stos
ds
neg
mov
outs
(bad)
push
adc
out
adc
ds
nop
popf
popa
enter
and
mov
(bad)
rcr
cmp
fsub
push
sbb
in
dec
push
sbb
sbb
lea
test
mov
mov
adc
outs
mov
mov
jo
inc
jo
cdq
and
cwde
push
cmps
(bad)
or
xor
inc
lods
fiadd
xlat
outs
fsub
mov
xchg
dec
mov
jne
dec
lock
je
(bad)
sbb
mov
in
lock
push
push
aas
es
push
jne
data16
dec
xor
dec
outs
or
pusha
inc
inc
pop
push
adc
js
test
or
inc
pop
in
jl
test
(bad)
cmp
or
or
mov
pop
iret
or
test
push
adc
xchg
xor
add
inc
es
inc
mov
mov
rcl
test
mov
jl
xor
fdiv
sub
sbb
add
dec
jne
lea
lea
mov
push
pop
pop
outs
push
and
pop
xchg
dec
xchg
pop
loopne
outs
inc
cmp
je
or
dec
add
cmps
mov
outs
pop
ret
fimul
lods
dec
mov
push
pop
repnz
repz
mov
cwde
push
mov
or
nop
(bad)
fisub
cld
jns
inc
jmp
retf
adc
dec
adc
inc
cmp
mov
mov
sub
test
icebp
dec
mov
adc
mov
xchg
sbb
in
push
push
cmovo
xor
btr
jmp
pop
(bad)
fistp
adc
add
adc
or
js
adc
add
add
xor
into
int
je
adc
enter
pop
inc
cmp
loopne
push
leave
mov
cmp
sbb
sub
cmp
movlps
mov
inc
sub
add
repnz
lea
stos
push
loop
xor
jne
adc
test
icebp
mov
add
xchg
dec
dec
loop
xchg
xchg
adc
push
ret
cmp
loopne
push
add
das
pusha
int3
loopne
xchg
fwait
dec
je
mov
pop
imul
rol
push
test
dec
hlt
xor
adc
add
sub
sbb
int3
pop
out
add
or
div
xor
xchg
test
push
rcl
aaa
mov
push
mov
call
cdq
idiv
pop
mov
jo
cmp
pop
mov
add
jbe
xchg
sub
sub
out
mov
ffree
ja
mov
jno
sub
pop
push
rcr
mov
out
push
jae
in
out
add
jge
mov
in
xor
loope
rol
shl
loop
loop
or
adc
adc
addr16
jo
ins
push
push
add
pusha
push
push
imul
dec
mov
add
jmp
mov
sub
inc
jbe
fld
mov
and
movs
sar
pop
mov
ret
adc
xchg
out
out
or
xor
dec
pop
(bad)
icebp
add
xchg
add
aaa
(bad)
clc
test
mov
imul
mov
and
lea
ins
sub
jp
jmp
xchg
pop
jmp
adc
add
in
mov
cmp
add
adc
jmp
jmp
fucomip
xchg
xor
data16
lock
daa
(bad)
sbb
add
add
dec
or
pop
je
sub
sbb
mov
push
or
aad
xchg
dec
cmp
jge
cld
sbb
jmp
loopne
add
xor
movs
pop
mov
jl
es
inc
(bad)
lods
jle
add
mov
add
add
xchg
adc
mov
push
ror
jae
js
add
add
dec
cmp
cmp
sub
fmul
sbb
jno
mov
pop
mov
(bad)
sbb
pop
xchg
fdivr
or
or
and
imul
pop
add
or
test
pushf
rol
clc
dec
and
add
call
xchg
sbb
mov
ins
pop
sub
add
push
repnz
loop
sbb
mov
push
xor
pop
jmp
(bad)
sar
and
push
cwde
dec
adc
hlt
push
call
adc
adc
add
ror
loopne
push
sbb
test
dec
jne
jbe
cwde
loope
lds
je
pop
inc
and
fsub
icebp
and
fsub
mov
add
retf
push
sbb
inc
add
dec
sub
adc
xchg
dec
mov
mov
dec
or
push
inc
pop
cmp
sub
push
mov
adc
mov
shl
xor
mov
pop
es
call
mov
add
add
out
xor
xchg
icebp
push
xchg
mov
add
and
dec
mov
add
xor
lods
inc
cmovp
sub
xchg
adc
jmp
sub
push
jmp
mov
adc
imul
pop
mov
std
inc
or
aas
or
pop
popa
fsubr
ror
jl
arpl
test
jle
hlt
jl
int
mov
cmc
xchg
pusha
mov
inc
add
or
nop
scas
dec
xchg
inc
pop
and
mov
dec
sub
inc
cdq
inc
jmp
add
add
cwde
lods
push
or
add
test
mov
and
inc
adc
xchg
xchg
or
push
push
inc
inc
or
out
pusha
aas
cwde
lock
es
popf
loop
popa
repz
fs
sub
fistp
cmps
faddp
add
sbb
rcr
pop
ss
mov
mov
xchg
dec
inc
cwde
jns
pop
loopne
inc
repz
or
pop
fsubr
pop
inc
add
test
cwde
movs
and
inc
sub
sub
mov
fimul
add
mov
addr16
jl
adc
mov
mov
sbb
sub
and
lods
cmp
pop
xchg
popa
nop
not
test
mov
int
push
mov
cli
pop
test
or
ret
add
leave
dec
rcr
ret
and
lahf
push
and
call
mov
mov
call
mov
loope
push
or
push
icebp
(bad)
icebp
push
movs
lahf
pop
mov
test
cmp
add
fwait
ret
add
add
push
outs
push
fild
out
cli
jge
sti
inc
ror
test
mov
cwde
pcmpgtd
dec
test
xor
mov
mov
enter
mov
into
mov
scas
ins
clc
addr16
pop
pop
jno
push
femms
in
sahf
xchg
jb
clc
dec
add
push
cld
es
push
add
sbb
ss
fcomi
inc
jnp
dec
push
pushf
jge
mov
stc
cmp
mov
cmp
dec
popa
fcmovnu
mov
xor
mov
call
popa
test
inc
dec
pop
push
imul
inc
push
imul
cwde
and
or
jb
jns
arpl
sub
add
jle
sbb
dec
adc
push
dec
push
inc
inc
test
(bad)
inc
inc
gs
jb
jns
in
or
pop
gs
inc
mov
ss
std
xchg
aaa
mov
push
arpl
ins
mov
imul
addr16
enter
mov
or
jne
imul
sti
xchg
out
jbe
fs
in
inc
add
push
gs
outs
jb
push
cmp
jno
arpl
dec
cmp
mov
inc
cmp
or
push
rcr
fisub
mul
push
call
loopne
repz
lods
cmp
or
inc
jne
ins
push
mov
mov
imul
or
jb
hlt
or
lods
(bad)
mov
test
mov
js
inc
push
je
sar
nop
cmp
push
xor
inc
mov
cmp
mov
in
or
xor
in
in
imul
es
mov
sbb
or
dec
mov
mov
push
add
pop
enter
out
push
pushf
dec
dec
ror
ret
push
pop
es
push
lock
dec
jp
retf
dec
push
loopne
enter
ja
cmps
fld
js
sar
es
push
push
fidivr
mov
call
dec
sub
bound
mov
jle
add
bnd
cmp
inc
sub
xlat
ror
dec
xlat
push
mov
dec
or
jo
inc
das
mov
or
sub
mov
cs
or
clc
sbb
inc
mov
or
gs
jo
rcr
jns
cmp
scas
push
ins
outs
outs
jle
mov
fisttp
push
pop
inc
loopne
fcom
sbb
fwait
in
fnsave
add
push
add
jb
call
gs
imul
or
dec
mov
pusha
cmp
add
dec
aad
cs
pusha
mov
xor
retf
jmp
push
or
inc
dec
js
gs
aad
(bad)
or
dec
jmp
jb
scas
cwde
push
inc
add
inc
jmp
xor
movhps
xchg
in
popa
clc
add
nop
call
repnz
push
and
inc
je
gs
xchg
in
pop
aad
ret
adc
adc
push
and
mov
outs
sub
sub
ins
ja
inc
dec
inc
xlat
add
cmp
sub
pop
push
ss
sbb
add
dec
add
mov
inc
aas
push
jg
push
push
outs
jne
or
ds
dec
outs
lods
inc
mov
popa
fs
mov
push
mov
jae
inc
cwde
sub
jnp
jnp
mov
cmp
icebp
or
popa
in
outs
ja
fsub
repz
cmp
push
jb
sbb
jno
lea
int3
dec
mov
sbb
in
adc
adc
or
inc
add
xor
or
gs
rcl
jmp
dec
enter
add
jmp
adc
fadd
xchg
enter
mov
sahf
ins
bound
mov
pop
test
fdivr
push
mov
inc
jno
sbb
sbb
or
add
dec
inc
or
adc
inc
adc
es
add
pop
pop
adc
imul
scas
jne
int3
sub
lods
jg
xlat
(bad)
out
inc
movs
mov
pop
call
movs
jge
cmp
mov
add
or
call
or
daa
xor
jmp
adc
jbe
jae
push
inc
mov
ror
xchg
mov
das
adc
push
mov
xor
ret
add
add
jp
(bad)
fnstsw
add
das
dec
out
dec
cli
add
jl
mov
fdivr
push
inc
sbb
cmp
fadd
add
xor
mov
aad
mov
mov
mov
mov
push
movs
dec
out
push
xor
mov
push
mov
arpl
loopne
cdq
add
pop
stos
rcr
push
clc
loopne
out
or
mov
cwde
cli
fnsave
jmp
mov
sbb
sbb
pop
mov
xchg
dec
inc
js
mov
push
push
sbb
jl
cwde
mov
mov
mov
jl
loopne
xchg
mov
and
test
jle
and
inc
inc
bound
mov
shl
sub
outs
add
jmp
mov
dec
ror
xchg
pusha
movzx
mov
xlat
out
lods
ins
or
or
mov
mov
mov
pop
and
or
es
data16
dec
sbb
je
je
fisttp
pop
xor
fs
popf
int3
or
jo
sub
pop
test
cmps
inc
adc
mov
sub
xchg
xor
call
dec
nop
nop
fs
ret
rol
adc
mov
mov
mov
mov
mov
mov
sub
je
inc
add
cmp
and
jmp
jnp
popa
mov
or
push
(bad)
push
sahf
inc
rcr
push
sub
nop
cmp
ffreep
ret
adc
addr16
loopne
cmps
jno
jae
pusha
lock
jnp
dec
cmp
ja
sub
ret
or
sub
add
fdiv
call
adc
test
push
int
cmp
adc
cmc
test
add
mov
pop
sbb
mov
out
xor
xor
or
movs
lods
js
outs
add
add
xchg
or
fisttp
jl
les
or
inc
and
sbb
jo
cmp
adc
fucomi
fistp
loopne
fild
add
fdivrp
or
aas
mov
clc
rcr
test
les
cmp
imul
je
mov
shl
xchg
iret
mov
mov
sub
xchg
clc
add
popf
shl
jl
or
mov
mov
jp
inc
cld
hlt
cmp
adc
enter
mov
js
push
daa
js
rol
stos
fimul
ds
cld
cld
ss
mov
mov
xchg
test
jae
jb
mov
and
cmp
fild
rcl
ds
ror
pushf
mov
test
daa
(bad)
nop
ret
cwde
cwde
jne
and
xchg
rcl
pushf
ins
data16
bsr
or
shr
sbb
push
mov
and
add
cmp
sbb
jmp
(bad)
push
cmp
cmc
sbb
push
inc
mov
dec
ins
in
dec
pop
xor
sbb
jne
cmp
xor
popf
push
dec
ds
jae
jge
sub
dec
repnz
adc
popa
mov
add
inc
sub
or
jae
dec
mov
inc
inc
shr
adc
xor
int
and
sldt
adc
in
jmp
aam
ja
sar
jg
or
loopne
icebp
push
pop
js
dec
out
cmps
and
lea
mov
cmp
(bad)
pop
imul
outs
cmp
fsubr
sub
dec
xor
adc
xchg
xor
or
inc
xchg
inc
shl
pop
jp
gs
nop
ds
mul
sbb
add
pop
not
mov
lea
and
cmp
add
je
or
xchg
sbb
nop
rol
xchg
mov
arpl
in
js
push
cmps
mov
and
inc
(bad)
rol
dec
jo
aam
add
jae
sbb
inc
mov
inc
iret
call
daa
mov
push
pop
or
pop
sub
(bad)
lods
add
inc
fimul
push
test
(bad)
sub
sbb
adc
rol
dec
mov
mov
inc
xchg
add
cmp
push
not
mov
inc
sbb
nop
inc
and
rol
jnp
xor
adc
push
add
pushf
(bad)
stos
add
xor
mov
xor
jo
pop
mov
cmps
jl
nop
lods
mov
inc
and
shr
repz
cmp
or
cdq
call
mov
or
add
xor
adc
adc
imul
adc
jbe
addr16
aaa
fcom
fsubr
pop
hlt
cmp
ret
add
cmp
and
adc
or
or
xor
sbb
test
mov
rcl
push
or
push
cdq
add
or
stc
outs
movs
add
daa
test
sbb
adc
ret
out
add
(bad)
adc
ins
out
cmp
ja
(bad)
loopne
aad
xchg
jne
test
pop
retf
cmps
pop
pop
add
inc
mov
fwait
push
cmp
adc
retf
mov
and
pop
xor
push
mov
lods
push
or
fidiv
xchg
loope
sbb
dec
inc
ss
push
js
pop
cmp
push
sbb
movs
adc
call
ret
inc
clc
test
and
outs
jg
mov
jp
aad
pop
mov
mov
sub
lock
lods
test
xlat
retf
out
jne
loop
mov
and
inc
inc
mov
xchg
cmps
mov
mov
add
and
dec
test
jl
fmul
rol
add
xchg
mov
or
jbe
add
pop
xchg
mov
or
loope
dec
mov
test
pop
inc
inc
or
add
retf
add
popf
xor
rcl
das
cmp
add
adc
push
pop
lds
mov
inc
xchg
std
out
inc
push
and
push
je
push
mov
(bad)
push
and
push
or
in
sbb
daa
push
dec
(bad)
jl
inc
sbb
mov
cmc
dec
xchg
sub
cld
cli
dec
push
add
jo
ror
push
lea
(bad)
push
inc
adc
pop
add
dec
jne
adc
or
loopne
dec
pusha
ins
mov
dec
and
div
div
mov
push
or
daa
jge
sar
xchg
dec
add
pop
(bad)
lea
adc
inc
les
pusha
cmc
jmp
mov
mov
xchg
add
je
xlat
mov
adc
out
jne
xchg
push
xchg
jecxz
out
rol
push
push
adc
and
xor
cmp
xchg
ins
es
rcl
ror
or
cmp
jo
xor
lahf
jo
pshufw
das
and
in
data16
jae
pop
adc
push
pop
jo
inc
gs
and
or
or
mov
inc
dec
imul
jne
mov
js
out
pop
xor
fs
ds
add
add
xor
mov
cli
adc
adc
mov
inc
ins
loopne
js
pop
fdiv
loope
or
add
test
shl
js
sbb
ror
jo
jbe
jns
sub
not
add
not
add
add
jg
dec
jl
adc
pusha
jmp
or
jle
mov
lds
mov
sbb
adc
fld
in
adc
push
or
jne
pop
cwde
je
or
add
call
and
pop
fsub
js
cmps
mov
call
into
and
and
sti
pop
test
push
lea
fisttp
fld
lahf
mov
add
das
mov
jp
mov
rcr
mov
fmul
cmp
jl
stos
imul
cmp
add
aas
jb
daa
inc
rcr
jnp
nop
adc
add
std
sub
pop
or
adc
xor
mov
test
sbb
in
sti
inc
ret
test
mov
shl
sbb
xor
xchg
add
rol
xchg
lea
(bad)
aam
jo
push
mov
ds
jle
lahf
or
cmp
mov
and
mov
xchg
cwde
pause
(bad)
xor
push
cmp
das
and
inc
call
stc
and
nop
push
stos
adc
popa
lock
and
out
jmp
jle
shl
adc
dec
inc
mov
lods
mov
sahf
adc
or
and
push
jno
add
sub
stos
imul
dec
test
lahf
push
mov
(bad)
bound
jns
mov
inc
push
add
call
xor
mov
pop
push
push
inc
mov
test
pop
jne
scas
inc
std
or
sbb
mov
shr
cmp
or
sbb
data16
clc
push
iret
lds
adc
dec
movs
dec
ret
jmp
mov
fadd
in
scas
mov
xor
ror
call
jge
or
push
add
stos
xor
cld
cli
es
xchg
cs
out
sbb
sbb
pop
data16
fdiv
in
adc
and
pop
sub
andnps
push
inc
and
test
sub
fdiv
add
cmp
aam
push
fimul
or
or
inc
(bad)
sub
or
push
push
aam
sub
xor
call
into
mov
and
ficomp
push
ror
shl
addr16
lea
daa
pop
pop
sub
mov
(bad)
cdq
push
adc
or
je
sbb
js
xor
jecxz
test
es
jle
scas
or
dec
popa
dec
into
pushf
retf
sbb
or
sub
cdq
hlt
movs
gs
push
cwde
xchg
jge
cmps
arpl
clc
adc
ja
mov
adc
scas
jmp
xchg
movs
inc
adc
adc
mov
aaa
jl
inc
cmp
loope
inc
rcr
cmps
xor
fcmovnbe
inc
mov
lahf
dec
div
adc
mov
or
sti
add
push
pop
pop
cmp
push
stos
pop
xchg
and
daa
or
cwde
push
push
push
adc
(bad)
xor
pop
cmp
dec
mov
mov
dec
sbb
into
test
inc
test
dec
mov
outs
pop
nop
sbb
mov
inc
lock
dec
lea
xchg
xchg
or
push
cli
daa
outs
cmp
je
mov
lods
inc
mov
or
sub
lock
jp
add
retf
outs
imul
pusha
aas
fwait
sub
inc
ret
mov
mov
or
ds
cmp
pop
fistp
jae
mov
mov
dec
dec
mov
gs
dec
xchg
dec
call
xor
ret
jg
jbe
mov
repnz
jo
xor
dec
ja
push
loopne
xlat
mov
add
call
mov
cmp
jle
sub
ds
or
and
cdq
xchg
push
lock
lock
fwait
dec
add
call
mov
jmp
mov
xchg
push
inc
add
cli
ds
je
mov
(bad)
in
push
ret
push
or
mov
nop
sbb
cmp
push
inc
mov
mov
push
loopne
push
rdtsc
(bad)
fmul
dec
add
mov
mov
leave
mov
xchg
movs
mov
xchg
sbb
push
inc
mov
cmp
add
cdq
sbb
fmul
fstp
div
xor
nop
(bad)
daa
sbb
cmps
jbe
popf
xlat
add
adc
pop
cmp
jge
inc
add
js
adc
mov
mov
sahf
je
pop
mov
pop
dec
je
fdiv
sub
mov
and
je
sbb
in
sub
ja
retf
push
mov
jb
je
add
fucomp
sbb
inc
pop
mov
adc
inc
ret
push
arpl
js
sbb
adc
aaa
pop
push
jmp
jmp
mov
adc
inc
push
push
mov
mov
or
cmp
cli
push
inc
cs
xchg
push
test
sub
pop
or
inc
mov
mov
das
outs
outs
adc
test
(bad)
arpl
xchg
dec
push
dec
jle
jnp
dec
push
push
icebp
jmp
adc
test
adc
xor
fistp
jne
sub
or
and
shr
xor
icebp
cmp
push
rcl
dec
shl
inc
in
inc
inc
sbb
test
dec
push
cmp
push
sbb
pusha
xchg
mov
ret
rcl
push
call
ins
xchg
mov
cmp
and
leave
or
(bad)
mov
pop
jns
stos
aas
jl
ror
add
add
les
dec
jmp
ds
mov
inc
adc
ins
pop
mov
leave
jmp
adc
push
dec
test
pushf
clc
or
mov
mov
out
out
and
out
or
add
add
pop
push
aam
inc
jnp
sahf
out
ds
fisub
push
test
push
or
pop
xor
add
push
shr
stc
sub
fsub
dec
jmp
(bad)
jge
das
fs
dec
sub
rol
ja
in
or
popa
mov
nop
or
adc
imul
inc
je
into
or
xor
mov
push
jge
xchg
cmp
push
je
sub
lods
push
mov
movs
add
iret
jmp
cmp
repnz
xor
je
adc
adc
add
movs
sbb
loope
iret
in
xchg
cmp
loop
add
sub
ret
pop
mov
fimul
push
mov
into
mov
fdiv
loopne
leave
call
or
xchg
jbe
mov
aaa
cmp
cmps
lds
jbe
mov
jg
sub
add
pop
jl
or
jl
add
sub
pop
jl
idiv
push
xor
adc
stos
outs
ret
and
outs
call
mov
xchg
bound
ficom
addr16
or
sbb
enter
pop
pushf
call
add
in
loope
sub
fdiv
in
adc
cmp
sub
test
and
dec
(bad)
adc
pop
sti
xor
mov
or
iret
pusha
or
push
add
jle
mov
mov
fbstp
jne
dec
or
inc
mov
add
pop
sub
adc
cmp
jo
sub
ret
xor
pop
cs
ror
jge
jmp
lds
push
or
push
mov
ja
lds
mov
fistp
dec
dec
add
add
sub
adc
and
(bad)
cmp
inc
jae
dec
cmp
jb
xchg
push
push
push
call
jecxz
mov
arpl
ins
push
mov
div
cmc
push
int
sar
adc
mov
in
cmp
jge
mov
ss
pop
in
jmp
mov
dec
in
push
mov
push
and
rol
loope
out
fwait
inc
push
inc
cwde
or
and
cmp
ss
push
or
inc
sub
pop
jbe
inc
jns
int3
and
xor
imul
jp
(bad)
enter
(bad)
fbld
lock
lea
test
jbe
mov
mov
jno
imul
hlt
dec
push
ja
test
and
test
and
push
mov
add
pop
mov
add
dec
mov
pop
mov
push
sar
sub
bound
loopne
inc
mov
jb
leave
dec
mov
inc
push
cmp
mov
mov
push
mov
mov
lods
test
enter
dec
pop
adc
sbb
push
or
lock
dec
push
in
lods
(bad)
mov
and
mov
adc
les
jecxz
inc
inc
leave
or
dec
(bad)
sbb
dec
data16
push
push
mov
inc
mov
cmp
je
inc
or
xor
cmp
sbb
inc
and
or
pop
dec
repnz
push
enter
mov
or
jne
push
dec
cld
add
sub
push
shl
push
xor
cmp
push
gs
rol
fisubr
dec
bound
nop
pushf
and
cmp
dec
mov
mov
cdq
idiv
lock
jg
lods
sub
push
dec
test
inc
cmp
jl
fcmove
add
jg
dec
adc
and
out
dec
neg
lods
pop
call
aam
daa
jo
cmp
cmp
test
xor
push
pusha
test
mov
dec
sbb
add
es
out
mov
sbb
out
in
xlat
adc
in
nop
aas
cmovne
bound
test
(bad)
fisub
nop
mov
rol
ret
scas
pop
rol
stos
imul
ja
(bad)
cmp
jle
or
out
aaa
ret
fst
sbb
out
sbb
retf
jl
add
sbb
ret
dec
mov
jle
loopne
jl
push
inc
add
add
push
fsubr
or
movs
call
and
xor
push
push
xor
mov
ret
mov
fs
jae
aam
sbb
inc
addr16
fsub
inc
mov
pop
dec
hlt
sbb
pop
and
dec
or
pop
cld
mov
cmp
ja
inc
or
add
add
mov
and
ja
movs
clc
jbe
sub
dec
sahf
or
cmc
arpl
xor
adc
add
adc
into
in
retf
mov
out
dec
sbb
clc
data16
sub
int3
jge
(bad)
push
xor
cmp
cmp
mov
fcom
and
jmp
mov
sbb
add
and
pop
cwde
mov
(bad)
jbe
mov
retf
ds
add
jle
daa
js
inc
and
jmp
push
sbb
or
cdq
jl
or
mov
mov
enter
cmp
mov
pop
xchg
or
push
sub
imul
jbe
add
data16
adc
inc
sbb
add
adc
out
or
mov
mov
ret
push
(bad)
sbb
pop
jae
fisttp
inc
(bad)
cmp
push
mov
dec
popf
dec
(bad)
ret
mov
inc
mov
dec
aam
loope
xchg
cmp
pushf
pop
and
add
cmp
scas
int3
rol
mov
or
into
xor
out
jne
in
cmp
mov
mov
mov
pop
lock
jo
cs
mov
rol
jbe
jae
(bad)
ins
imul
or
pop
femms
sahf
js
mov
cmp
mov
cdq
inc
scas
xor
cmp
iret
ret
jmp
in
addr16
sbb
mov
loope
push
rcl
jmp
mov
retf
pop
mov
int3
(bad)
push
or
ins
xlat
or
fdiv
in
in
and
adc
sbb
sbb
fcom
mov
je
sub
ja
cmp
cmp
dec
adc
(bad)
dec
rol
aaa
adc
sbb
dec
push
dec
mov
sti
add
add
pop
ret
psrad
(bad)
movs
pop
ds
fsub
xchg
pop
sub
add
leave
or
adc
or
pusha
js
mov
mov
xor
or
sbb
jl
push
jle
enter
sbb
rol
je
inc
and
jne
setnp
mov
sbb
sbb
cmp
cmps
ins
sbb
inc
mov
adc
dec
mov
shl
add
adc
or
test
add
jecxz
lea
iret
icebp
scas
mov
movs
adc
xlat
sbb
inc
or
xchg
adc
out
push
or
adc
ss
cwde
idiv
aas
mov
sbb
imul
inc
and
push
mov
loop
pusha
imul
jl
push
pusha
retf
mov
sub
int
ja
or
dec
imul
imul
xchg
mov
push
es
daa
sub
and
cdq
movs
shl
paddusw
pop
mov
scas
push
add
xlat
rol
dec
or
xchg
sub
pop
ficomp
jmp
xchg
cmp
or
(bad)
push
pop
jno
ds
jne
and
sbb
inc
jne
pop
cmp
jg
fcmovnu
cmp
dec
out
inc
inc
add
sbb
inc
and
jno
inc
inc
inc
adc
jne
inc
je
inc
add
and
pusha
fs
xchg
pushf
pusha
cmps
xchg
or
fcom
pusha
add
das
pop
leave
inc
sub
aaa
sbb
sub
cmp
pop
xlat
xor
add
jne
sbb
xor
sub
or
aaa
or
loopne
xor
call
jns
in
add
add
xor
hlt
ins
jo
add
pop
daa
cmp
push
mov
shl
or
inc
jg
add
mov
mov
add
test
jg
aaa
mov
and
mov
jl
or
push
sbb
add
xchg
ja
jne
push
sbb
imul
jle
test
jl
cmp
jge
cmp
cld
xor
mov
mov
not
push
inc
pop
pushf
mov
adc
imul
dec
loop
sub
and
mov
add
daa
clc
(bad)
ror
push
sub
mov
loope
adc
add
jmp
xchg
push
adc
sbb
shl
sahf
push
in
xor
les
jle
add
add
je
dec
je
jmp
push
sbb
repz
sbb
pop
es
hlt
add
outs
in
out
aam
ds
ja
pop
adc
(bad)
jo
inc
scas
cmp
jae
pusha
xchg
popa
cmp
adc
(bad)
imul
pop
nop
push
cmp
jp
test
xchg
or
mov
ss
sub
movd
push
adc
jmp
mov
mov
out
push
mov
push
mov
(bad)
lods
cld
ins
add
or
in
adc
sbb
das
mov
or
ret
or
aaa
mov
mov
adc
lahf
pop
enter
rcl
push
in
pusha
sub
aaa
fld
jo
inc
sub
outs
mov
add
xchg
(bad)
pop
(bad)
push
fsincos
add
repnz
add
cmp
cmp
xchg
loopne
and
ja
jle
jmp
sub
xlat
pop
mov
fdivr
add
sub
add
(bad)
cli
int3
add
je
jne
(bad)
mov
inc
mov
adc
(bad)
mov
dec
add
fst
sub
loopne
and
pop
test
cmp
push
out
or
iret
das
mov
adc
test
clc
sbb
or
movs
inc
dec
icebp
pop
lea
jmp
imul
and
push
mov
sbb
adc
int
or
dec
pop
sbb
mov
pop
and
inc
(bad)
adc
shl
dec
jne
(bad)
inc
jp
ins
cmpxchg
or
dec
or
fadd
sub
in
mov
(bad)
jge
push
mov
int3
adc
imul
inc
xchg
pop
pop
je
fsubr
add
or
jmp
lock
ficom
and
out
cmp
xchg
dec
jl
mov
add
(bad)
and
inc
popa
jb
xlat
push
xor
(bad)
pop
cmp
rol
push
inc
push
mov
push
rol
push
xchg
inc
mov
loopne
adc
cmp
enter
ins
jb
adc
jnp
aad
loopne
xor
lds
sbb
ret
adc
(bad)
mov
inc
add
jmp
pusha
pop
adc
or
inc
push
jmp
and
adc
pop
std
test
pusha
loopne
imul
inc
gs
xor
leave
pop
jg
stos
loop
jbe
mov
jmp
add
sub
sbb
sub
pop
jno
popf
cmp
cmp
mov
inc
add
pop
mov
inc
add
enter
push
and
rcr
pop
idiv
cmp
loopne
enter
adc
or
xor
mov
imul
sbb
add
inc
pop
js
cmp
cdq
retf
js
add
or
sub
jne
cwde
cdq
call
in
(bad)
(bad)
stos
pop
or
and
pop
add
cmp
xor
outs
sbb
add
or
sahf
mov
movs
add
pop
and
and
fnstenv
cmp
jne
mov
pop
sbb
(bad)
sub
fdiv
shl
cmp
ja
mov
loop
inc
daa
add
je
xchg
outs
adc
mov
fisttp
lods
pop
add
jae
jae
jmp
sub
dec
ins
add
imul
xor
cmp
mov
push
bound
and
aaa
dec
jle
fidivr
pop
daa
jmp
add
xchg
or
mov
mov
add
stc
adc
adc
cld
push
sar
shl
lods
(bad)
out
(bad)
fbstp
jle
mov
jmp
xor
and
imul
cmp
or
sub
cmp
(bad)
outs
mov
or
jb
or
sbb
loope
in
pop
mov
push
adc
mov
js
js
icebp
or
push
or
stos
(bad)
sbb
iret
fcomp
inc
push
xlat
mov
or
adc
push
add
add
or
scas
jnp
mov
add
out
je
adc
jbe
mov
sahf
std
pop
or
into
(bad)
mov
inc
inc
cmp
mov
cmc
pusha
stos
mov
mov
add
cmp
hlt
push
popf
test
push
sub
add
push
ins
(bad)
push
jmp
rol
dec
xor
adc
cmps
ficom
sar
ret
push
mov
sbb
mov
add
pop
push
adc
mov
in
mov
fs
push
je
push
fwait
movs
das
sbb
mov
out
add
adc
push
ins
xchg
mov
jae
and
sub
retf
xlat
push
arpl
ins
or
sahf
push
dec
ja
fs
push
icebp
ret
adc
int3
cmp
ret
inc
shr
ins
and
retf
pop
xor
adc
aaa
push
aam
xchg
mov
and
clc
add
outs
add
jle
inc
jno
clc
pushf
dec
or
lods
sbb
adc
repz
sbb
daa
clc
pop
in
es
adc
rcr
push
stc
jne
inc
sbb
fwait
call
adc
or
sub
sub
xor
sbb
mov
xlat
fist
jbe
jo
in
stos
push
and
adc
femms
fsubr
add
inc
adc
cwde
dec
pop
call
retf
inc
add
push
fisub
xchg
cld
adc
or
adc
iret
lock
xor
retf
mov
sbb
adc
enter
push
cwde
ds
add
inc
pop
fisubr
or
mov
pop
(bad)
in
scas
rcr
call
or
inc
rol
jp
jbe
push
pusha
xchg
sub
mov
or
cs
push
enter
shl
pop
pop
aam
mov
sbb
or
inc
or
add
add
pop
xchg
dec
nop
test
iret
adc
fsubp
movs
dec
out
lock
arpl
push
xchg
add
cmp
inc
repnz
xchg
mov
fisub
mov
ret
sbb
cwde
test
rcl
pop
enter
adc
in
inc
movlps
mov
adc
repnz
push
outs
lods
outs
sbb
cmp
retf
xchg
jle
inc
outs
lods
pop
aaa
pop
sbb
fisttp
dec
icebp
cmp
cmp
and
jb
fbstp
outs
jmp
cmp
lock
outs
sete
and
mov
or
inc
mov
dec
outs
idiv
fucomip
or
dec
es
cmp
cli
inc
aaa
dec
movs
or
fnstenv
mov
fidivr
je
dec
push
pushf
adc
dec
sbb
ret
inc
mov
jle
sub
das
ret
cmps
mov
mov
into
xor
sbb
mov
and
jmp
popa
and
imul
lea
add
cmp
(bad)
jl
sub
test
retf
shl
xor
call
(bad)
in
movs
or
rol
jge
lock
pushf
mov
dec
out
push
xchg
adc
jmp
popa
mov
add
push
int3
inc
repnz
jns
sbb
sub
add
sub
push
and
cmp
jle
dec
or
xchg
dec
add
cmp
jl
add
push
mov
cmp
call
jnp
cmp
pusha
clc
push
das
in
cli
sbb
adc
fnclex
in
xchg
scas
push
pop
ficom
lea
pop
and
sbb
ret
cmps
xor
adc
into
lea
push
ror
out
mov
sub
loopne
outs
adc
adc
test
pop
adc
(bad)
gs
cdq
xor
push
adc
mov
bound
cmp
sub
div
jmp
sar
rol
clc
jo
add
add
mov
out
sahf
scas
pop
clc
loopne
mov
sbb
mov
mov
test
shr
lock
or
mov
arpl
js
mov
pop
loopne
scas
or
sub
xchg
pop
push
cmp
test
fadd
xchg
loopne
ss
hlt
pop
mov
daa
test
je
push
inc
sub
fwait
inc
hlt
fld
xor
inc
or
jp
lea
je
test
retf
dec
fild
mov
jo
jns
pop
push
lea
(bad)
(bad)
mov
add
mov
mov
sbb
xor
pop
xchg
cdq
jae
cdq
ins
and
add
(bad)
popf
cmp
test
dec
adc
adc
sbb
xor
adc
into
mov
push
fst
enter
sub
xor
or
push
mov
dec
scas
jmp
lea
sar
(bad)
fsubr
test
xor
mov
adc
bound
fisttp
add
xor
or
fistp
out
sbb
push
fsubr
sub
adc
in
in
sub
je
push
shr
jle
push
cmp
xor
sub
cmp
sbb
shl
dec
jnp
dec
jmp
ret
popf
fadd
popf
sbb
adc
shr
(bad)
push
inc
inc
pop
test
pop
mov
icebp
adc
jecxz
mov
lods
push
jae
sbb
push
and
sbb
xchg
xor
jmp
jg
je
mov
inc
mov
test
cwde
mov
loop
xor
jns
(bad)
call
dec
sub
les
sbb
addr16
int3
push
push
push
(bad)
xor
pop
ins
daa
cmp
jo
mov
jecxz
jbe
mov
rol
fiadd
les
stos
jmp
lods
or
pop
cld
sub
pushf
enter
or
and
jmp
outs
mov
(bad)
xchg
dec
jecxz
cmp
push
push
mov
dec
in
xchg
and
xchg
inc
sub
(bad)
mov
and
xor
adc
mov
inc
popf
mov
pop
dec
pop
pop
cmp
fiadd
jmp
lea
lds
sti
aas
mov
fisub
movzx
div
sbb
sbb
outs
sbb
ins
enter
test
add
sbb
je
add
sti
xchg
or
sub
cmp
sar
mov
mov
mov
gs
dec
and
cmp
icebp
jae
(bad)
mov
jg
out
sahf
fucom
ins
and
sbb
je
pop
shr
push
push
movzx
add
out
lods
xor
repz
pop
pusha
adc
adc
adc
lock
dec
sub
(bad)
mov
push
adc
jmp
fild
mov
nop
pop
adc
aaa
add
shr
xor
jg
push
xchg
jl
es
ss
and
mov
push
cmp
fdiv
or
sbb
scas
mov
cmp
xlat
out
jmp
mov
xchg
sar
mov
xchg
lds
lods
jl
inc
xor
cmps
inc
icebp
jmp
mov
push
or
clc
add
push
cli
adc
or
pop
pusha
mov
dec
mov
aaa
jp
fmulp
sar
test
or
or
push
inc
(bad)
mov
cmp
lock
jl
mov
into
mov
add
xchg
mov
das
inc
jp
push
popf
fmul
sbb
mov
push
pop
inc
or
push
popf
or
fs
sbb
or
ss
add
and
xor
push
dec
dec
imul
fiadd
mov
ins
xor
jmp
nop
call
jbe
jl
mov
mov
inc
into
stos
inc
sbb
stos
sbb
xchg
and
(bad)
scas
sbb
ds
ss
in
stos
int3
xor
cld
dec
fs
sbb
cmp
adc
push
pop
sub
mul
(bad)
jo
pusha
sub
add
cmp
xor
movs
inc
imul
lods
imul
add
sub
lods
retf
xchg
mov
xor
pop
pop
sar
fs
ret
nop
sbb
je
mov
les
mov
out
add
push
je
popa
shl
xor
test
aas
cld
outs
adc
or
jmp
inc
sbb
je
fwait
stos
xchg
sbb
sbb
adc
pop
and
jbe
jge
fs
adc
cmp
xor
dec
sbb
jno
aad
scas
pop
dec
dec
add
int3
sub
in
add
and
jge
pop
ins
cs
(bad)
or
shl
shl
push
jl
sbb
or
or
dec
mov
adc
jne
cmp
js
es
jne
js
xchg
add
sub
inc
js
add
das
add
fucomp
ds
jo
mov
pop
push
add
cmp
imul
mov
xchg
sar
mov
mov
and
add
mov
xor
inc
push
sbb
sbb
cmp
aaa
sub
jle
aam
adc
fs
or
add
ret
stc
push
add
sub
repnz
add
adc
sbb
scas
fld
test
dec
sub
sbb
call
push
enter
fidivr
jg
bound
push
test
inc
cmovnp
inc
mov
xlat
shr
ror
pop
repz
xor
lea
rcl
or
sti
dec
sub
inc
mov
dec
and
loope
addr16
movs
int3
or
lock
jl
aaa
xor
fsub
inc
jl
inc
mov
adc
loopne
mov
or
scas
pop
jne
mov
das
aas
(bad)
test
or
cmp
add
out
sbb
loop
jp
cmp
push
lea
jb
pop
mov
mov
sbb
add
and
outs
push
lea
push
dec
push
jbe
cmp
push
mov
pop
push
sbb
fdivr
sbb
cs
lock
(bad)
pop
cmp
lea
lea
jmp
mov
out
dec
xchg
out
xor
retf
mov
sub
push
popa
adc
in
jp
fs
(bad)
call
sbb
setg
and
mov
jp
jne
sbb
js
push
sub
xlat
add
(bad)
pop
add
movs
or
mov
inc
sub
inc
xor
or
xchg
cli
movs
push
mov
mov
mov
pop
or
or
(bad)
sub
sbb
adc
lock
daa
clc
out
mov
sbb
jge
test
sbb
les
dec
dec
hlt
cmp
shl
fiadd
cmp
push
mov
sub
mov
push
(bad)
add
mov
push
nop
mov
in
std
inc
in
pop
hlt
lea
sub
add
call
push
pop
jmp
push
inc
in
add
cmp
add
cmp
or
cmp
sub
or
gs
call
das
fsubr
cld
test
jne
inc
inc
mov
in
xor
mov
jb
ins
in
mov
addr16
sbb
inc
xchg
inc
lea
push
fimul
push
or
push
lock
icebp
je
mov
add
ret
jg
push
out
sub
add
sbb
fild
add
xchg
into
jp
xchg
scas
cmps
fimul
loopne
out
cli
lea
cmp
jmp
dec
mov
aam
loopne
jbe
or
in
xor
les
out
dec
loopne
mov
daa
inc
loopne
inc
sub
mov
movsx
loopne
scas
stos
push
add
int3
xor
(bad)
in
stos
xor
js
(bad)
mov
repz
pop
mov
(bad)
loopne
sbb
inc
rcr
lea
pop
inc
xchg
and
jge
(bad)
sub
jmp
in
add
pop
data16
sub
push
inc
pop
outs
cwde
mov
lea
and
pop
js
pop
aam
leave
ss
lods
fstp
or
jl
jle
mov
sub
mov
jo
sbb
and
mov
lock
or
scas
fsub
mov
cmp
inc
push
loopne
jp
fadd
fild
dec
call
pop
ss
call
push
jge
dec
movzx
clc
psubusw
js
stc
(bad)
cwde
pop
xor
shr
mov
pop
jl
nop
neg
mov
(bad)
adc
je
ror
mov
in
mov
jle
sbb
(bad)
loope
inc
jne
mov
sbb
and
jns
push
sbb
mov
inc
popf
mov
add
rol
mov
jmp
movs
or
add
push
clc
shl
or
pop
clc
jo
rcl
loope
or
dec
push
test
dec
leave
cmp
push
jl
jne
or
mov
in
mov
in
lods
push
and
mov
rol
clc
adc
sbb
mov
movs
xchg
sbb
call
pop
hlt
call
mov
out
fiadd
sti
jle
push
retf
jo
jbe
pusha
adc
(bad)
enter
clc
arpl
pop
push
dec
or
cmp
pop
or
dec
and
jne
lea
cmp
sahf
lea
cmp
lock
mov
jle
add
fs
push
mov
ins
mov
pop
or
add
xor
rol
or
inc
push
fsub
cmp
jg
jne
push
mov
or
movs
fs
adc
sbb
push
mov
outs
adc
int3
retf
aaa
push
adc
adc
adc
mov
mov
pop
mov
push
sahf
adc
inc
rcr
jne
and
(bad)
jle
nop
dec
pop
and
mov
and
loope
pushf
sbb
enter
pop
int3
mov
ins
retf
addr16
and
cmp
inc
mov
movs
pop
xchg
shl
adc
sbb
pop
mov
push
jo
inc
cmp
push
lahf
dec
jp
lock
mov
sar
xor
and
jbe
adc
push
dec
arpl
fcmovnu
dec
mov
adc
and
sub
outs
int3
push
xor
cmp
movs
call
xor
scas
adc
aam
lock
push
add
and
and
cmp
jmp
mov
pavgb
(bad)
mov
aad
js
enter
push
inc
add
je
inc
mov
dec
or
mov
sub
int
pop
pop
je
or
iret
or
jo
jb
iret
cmp
mov
les
dec
sbb
retf
(bad)
sub
(bad)
sbb
in
lock
push
fs
push
and
mov
ror
inc
jmp
(bad)
mov
daa
lds
inc
cmp
in
sbb
arpl
mov
sub
sbb
and
sub
add
or
loop
or
sbb
ret
scas
into
pop
cmp
aad
push
mov
call
lods
mov
inc
sbb
xor
or
in
dec
movs
mov
pop
dec
fist
dec
or
and
fist
dec
in
add
push
pop
jo
or
jo
or
lock
add
test
cli
add
inc
sbb
push
inc
push
hlt
mov
int3
outs
lea
mov
xor
cmp
xchg
inc
sbb
mov
loope
imul
rol
mov
sar
dec
mov
jo
xchg
mov
lock
dec
xor
pop
out
call
inc
and
scas
jo
or
ja
mov
fisttp
call
mov
dec
fadd
dec
stos
sbb
call
(bad)
and
cli
ss
sub
dec
push
xchg
push
or
enter
cmp
and
movs
js
rcl
and
push
xchg
call
sub
bnd
sub
ror
cmp
jae
icebp
je
adc
or
sub
push
jmp
pop
and
mov
jl
lea
or
add
call
and
xor
jae
adc
mov
cmp
jb
fnstcw
pop
push
xor
(bad)
adc
or
inc
push
add
pop
pop
imul
cwde
jno
rcr
loope
popa
mov
ror
les
dec
scas
jne
mov
mov
sbb
bound
in
mov
adc
mov
daa
cwde
mov
or
cmps
out
push
push
dec
jo
dec
outs
or
shr
push
loopne
jge
pop
mov
adc
inc
mov
adc
pusha
ins
imul
lock
pop
pop
mov
sbb
ret
retf
push
xor
xor
movs
xor
inc
les
pcmpeqb
lea
mov
mov
icebp
sbb
sti
adc
pop
hlt
mov
mov
sti
cdq
adc
add
(bad)
inc
jecxz
inc
xchg
js
inc
jo
je
add
push
or
dec
or
ins
jnp
inc
jmp
shr
mov
mov
add
mov
das
(bad)
test
icebp
add
inc
shl
mov
shr
daa
jo
loop
add
bound
lock
lods
call
les
(bad)
fmul
push
xchg
push
inc
xchg
mov
mov
test
and
adc
sub
xchg
test
push
jo
jmp
jmp
int3
cmp
bound
sbb
push
(bad)
int3
jne
in
call
xchg
adc
push
iret
pop
jns
int3
adc
push
dec
pop
pop
cld
loop
nop
hlt
lea
rcr
mov
adc
aas
adc
lea
jmp
mov
xor
add
fcomp
cmp
push
add
mov
fmul
pop
adc
or
add
cmp
jo
(bad)
sbb
imul
repz
sbb
jmp
ret
pop
and
xor
adc
daa
(bad)
push
add
leave
push
or
cmp
jbe
es
add
adc
xor
xor
sbb
add
cmp
out
jg
mov
add
adc
shl
mov
inc
(bad)
cmc
mov
imul
mov
mov
and
add
cmp
sbb
vmread
(bad)
cmp
call
xchg
jmp
inc
add
pushf
or
fwait
out
movs
and
pop
test
xchg
lea
sub
add
xor
cmp
add
out
xchg
add
adc
or
or
out
sahf
es
adc
int3
adc
jne
dec
jo
mov
inc
div
or
movs
loop
dec
dec
mov
jl
repz
add
adc
xor
pop
imul
add
shl
mov
xor
add
fs
sbb
push
xor
adc
mov
mov
ret
in
in
icebp
clc
clc
ret
lea
push
data16
mov
sub
fadd
sbb
xor
sti
adc
add
sti
xchg
inc
nop
inc
inc
cmp
add
sbb
fbstp
mov
jns
mov
(bad)
pop
xchg
shl
and
jb
ins
jmp
cmp
mov
adc
cmp
popa
sub
cmp
adc
add
test
mov
fidiv
mov
inc
sbb
dec
push
ja
fdiv
fdiv
cmp
jo
jl
inc
repz
jecxz
push
ss
push
aam
loopne
inc
and
daa
pop
pop
aas
jbe
add
inc
sbb
cld
jmp
ret
clc
loope
mov
cmp
stos
rol
mov
lock
fadd
es
ror
sub
add
lahf
mov
mov
inc
mov
mov
les
aam
(bad)
scas
inc
add
push
mov
xchg
fucomp
sub
inc
stos
out
push
add
or
sbb
icebp
enter
or
and
xor
mov
sti
fdivr
inc
pop
add
add
hlt
add
mov
test
mov
push
rcr
gs
xor
push
les
(bad)
xchg
cs
mov
ret
enter
movs
jmp
mov
mov
sub
or
jb
pop
mov
inc
and
je
mov
lods
xchg
imul
or
jmp
dec
rcr
add
sub
mov
fiadd
sub
sub
cs
je
add
sub
je
loop
pop
pop
ins
cmp
cmp
or
adc
je
ss
pop
sbb
mov
jmp
hlt
jg
aaa
mov
add
imul
rol
mov
mov
cmp
jl
test
pop
sbb
shl
sahf
adc
adc
stc
mov
add
xor
jne
fwait
iret
ret
out
pop
shl
add
enter
loopne
mov
arpl
(bad)
mov
mov
sbb
in
sub
aaa
inc
fsubr
dec
sub
dec
dec
dec
js
in
sub
mov
or
jl
fiadd
push
icebp
into
pop
js
push
dec
pop
jg
sub
add
lock
mov
mov
cmp
mov
arpl
mov
imul
mov
adc
or
loop
cmp
jge
mov
adc
dec
rcl
adc
aaa
fistp
(bad)
fcmovne
lods
jns
xrelease
mov
mov
icebp
clc
jnp
dec
and
fadd
js
rcl
(bad)
sbb
bound
inc
sbb
sbb
fst
(bad)
xor
(bad)
pop
mov
cdq
idiv
dec
mov
call
into
fcom
ins
ds
or
adc
(bad)
jbe
pop
or
retf
mov
adc
jne
(bad)
jge
or
sbb
lahf
mov
push
shl
test
shr
rcl
push
sar
or
sti
loop
nop
add
dec
shl
adc
dec
loop
inc
add
add
add
call
cmp
int3
repnz
cmp
in
and
in
js
je
inc
push
fadd
mov
pop
dec
or
es
push
and
adc
in
out
and
sub
mov
xor
pop
and
push
sbb
add
mov
les
push
jo
and
mov
xchg
adc
ss
xchg
mov
adc
jno
ror
xor
(bad)
les
rcl
pop
retf
or
jge
dec
fstp
jl
cmp
(bad)
in
dec
movs
mov
and
push
into
and
inc
sub
or
es
stos
popf
or
add
add
inc
mov
pop
sbb
pop
add
add
fcomp
fmul
ficom
mov
jl
test
and
out
(bad)
xchg
pushf
icebp
cmc
hlt
dec
js
adc
xor
jg
push
cmp
shl
xor
dec
or
out
mov
pop
je
adc
(bad)
sub
in
adc
or
mov
sbb
jae
lea
xor
cmove
sub
or
mov
sti
dec
xor
not
mov
inc
jnp
jne
adc
push
jno
test
pop
and
pop
cmps
popf
out
add
mov
sahf
xor
outs
push
sbb
(bad)
(bad)
enter
mov
ret
jge
mov
dec
inc
inc
icebp
fidiv
pop
jmp
cs
mov
mov
and
inc
push
in
mov
inc
nop
sbb
sti
add
(bad)
lods
retf
jecxz
or
mov
fiadd
retf
adc
mov
(bad)
xchg
mov
inc
inc
jns
inc
adc
jmp
cmp
jl
xlat
cmp
add
mov
pop
push
ret
lods
cmps
xchg
clc
xor
jg
jmp
in
add
sub
loopne
fdivr
movs
sub
sbb
(bad)
lock
popf
jl
add
sar
pusha
inc
cli
sub
test
rol
pop
ret
neg
cmp
jmp
adc
mov
push
addr16
add
mov
int3
pop
ror
idiv
jp
or
add
test
push
jmp
sbb
sahf
popa
sbb
cld
jo
jmp
mov
shl
ret
cmps
and
fidivr
cmp
mov
jmp
out
push
mov
int3
and
push
jne
jle
sar
mov
clc
add
cmp
jl
pop
pop
shl
loopne
pop
jno
mov
mov
jo
or
lock
inc
js
mov
and
popa
xchg
sbb
push
loopne
or
ja
push
in
jbe
jge
add
sbb
cld
ds
push
mov
mov
movzx
popa
cmp
sbb
add
inc
and
daa
add
lock
clc
mov
(bad)
jmp
or
mov
ja
adc
mov
xor
sub
adc
jl
mov
sbb
aas
jae
mov
push
adc
pop
pushf
icebp
sbb
inc
es
xor
push
pop
adc
add
push
pop
xor
in
test
jbe
cmp
out
rol
sbb
rcl
sub
sbb
ret
inc
and
fdiv
cmps
jl
xor
sbb
jno
loopne
cmp
and
sbb
inc
inc
aas
lods
fdivr
jge
les
test
fadd
push
(bad)
inc
xor
sbb
data16
inc
ror
outs
int3
lahf
or
or
in
push
ret
(bad)
sar
adc
push
add
and
mov
ret
cwde
(bad)
add
vminps
shl
loop
mov
jecxz
jne
call
sbb
mov
hlt
pop
mov
inc
mov
xor
pusha
jp
loopne
rcr
outs
test
push
in
jl
xor
add
inc
and
add
mov
or
loop
inc
int3
adc
dec
call
xor
mov
call
mov
test
pop
pop
mov
xchg
aam
mov
shl
enter
add
jae
adc
adc
sbb
mov
shl
cli
ss
jae
cmp
jns
adc
test
add
jge
aam
inc
push
xchg
cmps
fcom
push
mov
push
rcl
lds
inc
stos
lea
jbe
inc
mov
in
xchg
sub
lds
call
(bad)
lods
xor
lock
xor
inc
xor
push
inc
cli
mov
ja
lock
hlt
add
xor
rol
repnz
sub
js
xor
pusha
cmp
bound
repnz
mov
stos
enter
sbb
xor
push
xchg
packssdw
push
sbb
enter
icebp
mov
push
mov
cmp
(bad)
mov
mov
dec
imul
ins
fcom
sbb
add
sub
clc
(bad)
mov
sub
enter
dec
bound
in
lods
imul
add
add
outs
inc
cmps
stos
push
loope
pop
es
add
retf
jmp
sti
outs
cwde
xor
xor
add
out
nop
jbe
mov
in
push
(bad)
inc
push
or
dec
fs
ret
push
(bad)
int3
push
inc
test
jg
movsx
add
inc
(bad)
test
push
mov
and
jne
retf
add
or
add
xchg
in
rcl
push
sub
ror
xchg
push
fiadd
fmul
mov
clc
adc
jb
fdiv
sti
sub
cmp
ja
outs
sub
and
pop
add
xor
or
push
sbb
push
cmp
inc
jmp
(bad)
outs
loopne
aas
je
push
cwde
add
jp
pop
or
xor
pop
jns
not
mov
push
mov
popf
sbb
stos
aam
jo
iret
push
jecxz
jmp
mov
fwait
push
mov
jnp
jl
pop
inc
fisttp
jge
or
mov
dec
clc
jg
adc
xchg
test
dec
pop
sub
jb
je
dec
je
clc
adc
xor
sbb
xor
sbb
call
imul
cwde
push
int3
mov
(bad)
push
xor
pop
cmp
mov
sbb
jmp
dec
jl
push
push
push
xor
dec
adc
imul
add
lock
add
mov
lds
mov
aad
(bad)
out
sub
and
call
faddp
or
inc
sbb
sub
cmp
add
cmc
mov
fnstcw
or
or
or
dec
xor
add
xchg
aaa
fisubr
xor
outs
or
out
inc
mov
push
clc
cmp
cmp
xchg
or
jp
sub
jnp
add
mov
js
out
mov
pop
sub
cli
jb
jno
push
es
mov
jo
test
jbe
or
(bad)
push
ret
(bad)
sar
shl
adc
out
mov
sub
inc
add
adc
inc
into
xor
mov
(bad)
push
movs
test
movs
dec
jo
(bad)
xchg
inc
pop
or
les
pop
dec
jmp
mov
mov
xchg
jo
cmp
jge
inc
push
shl
mov
nop
fisubr
jecxz
out
xor
mov
pop
push
cmp
pusha
mov
jo
push
dec
push
dec
pop
mov
mov
sbb
mov
dec
or
fdivr
xchg
push
sbb
mov
or
into
mov
sbb
xor
xor
xchg
(bad)
int
or
push
mov
xor
and
or
pop
sbb
test
add
lods
cld
cmp
adc
aas
push
and
xor
add
les
or
out
or
jl
cmp
add
test
je
enter
or
sbb
jge
inc
jge
rol
cmp
mov
data16
aad
mov
or
and
fdivr
pusha
jl
sti
sub
xchg
or
ja
push
sub
sbb
sbb
or
mov
sti
adc
sbb
dec
inc
dec
mov
iret
mov
imul
popa
or
adc
or
dec
add
call
inc
sbb
xor
mov
dec
or
jmp
add
jmp
lods
call
fstp
cmp
imul
aad
jl
cmp
inc
and
or
xchg
add
mov
(bad)
cmp
loopne
add
sbb
inc
test
inc
add
movs
sbb
repnz
mov
loopne
push
cmp
cmp
mov
fstp
or
fst
sbb
fadd
scas
or
adc
nop
sub
sbb
fcom
loop
sub
lea
jle
cwde
mov
imul
mov
add
cmp
aam
rol
add
mov
sbb
jmp
mov
fwait
sar
ds
push
add
or
sub
imul
inc
cmp
out
push
and
inc
stos
pop
mov
mov
sbb
dec
mov
dec
scas
mov
jnp
adc
(bad)
test
sub
jg
(bad)
and
cwde
loope
mov
js
and
movs
test
je
je
fiadd
mov
inc
mov
bound
push
sub
sub
or
or
dec
mov
or
sub
loop
ror
sti
dec
sub
int3
jo
jae
es
ins
push
cs
cdq
loopne
xchg
out
push
js
add
mov
hlt
jge
sub
out
jg
pop
pop
je
dec
je
jmp
xchg
add
int3
mov
dec
inc
les
adc
sub
or
fsubr
adc
or
jmp
adc
sub
mov
push
jmp
int3
xchg
adc
xor
imul
xchg
jp
xor
sub
sbb
retf
ja
pusha
lods
cwde
xchg
or
pushf
aam
add
mov
push
jp
or
popf
or
xor
push
jb
cmp
jg
pop
das
jns
or
adc
in
popa
loope
jl
leave
lods
mov
aaa
std
jmp
bnd
test
mov
je
add
jmp
call
test
add
add
cmp
and
test
in
pop
push
das
add
pusha
jo
mov
movs
sar
mov
add
jl
mov
call
and
and
sub
shr
adc
mov
mov
fcmovb
or
add
mov
pop
mov
rcl
jge
sub
(bad)
dec
pop
mov
(bad)
push
or
xlat
fcom
push
sbb
xor
hlt
push
mov
add
push
sbb
jmp
adc
(bad)
retf
test
sub
(bad)
sbb
or
enter
add
scas
jp
mov
inc
lock
(bad)
(bad)
sti
jmp
addr16
jle
(bad)
in
and
js
inc
enter
es
dec
shr
or
adc
fisttp
push
call
test
ret
inc
aam
jg
and
mov
xchg
dec
pop
nop
sbb
cmp
push
sbb
hlt
fcomp
cld
popa
outs
jge
cmp
cmp
xchg
pushf
cdq
and
ret
sub
push
adc
inc
mov
enter
lock
call
sbb
adc
cmp
mov
inc
clc
jge
sub
sub
imul
push
scas
lock
pop
mov
pop
inc
add
add
jmp
movs
stc
call
ja
mov
jno
enter
sbb
fidivr
xchg
call
aad
pop
call
cmps
int
popa
inc
and
jg
outs
pop
jg
ins
push
dec
faddp
mov
cmp
jge
or
sbb
and
fwait
ror
fcomi
pop
add
bound
test
outs
aas
xor
jg
mov
inc
mov
inc
sbb
inc
sbb
jl
shl
add
xchg
add
add
mul
test
lea
xchg
add
dec
mov
add
mov
movs
ss
xor
adc
and
ror
adc
or
jno
pop
mov
pop
sub
jge
movs
js
movs
js
ds
or
mov
mov
inc
hlt
ds
sub
lea
jp
lods
mov
add
push
loop
push
lods
mov
adc
dec
adc
retf
test
scas
hlt
push
add
(bad)
hlt
ja
adc
and
ret
jb
out
pop
stos
enter
jg
cwde
xor
dec
or
data16
add
mov
test
lods
push
pop
shl
pop
jne
enter
ret
out
cmp
xor
mov
outs
lock
mov
add
mov
add
sti
inc
loopne
pop
jge
mov
mov
or
or
mov
xchg
cmp
shr
aam
sub
jge
adc
dec
adc
inc
mov
bound
ret
fsubrp
ins
and
movs
jge
push
xchg
mov
sub
sar
push
pop
mov
or
dec
inc
fs
add
jp
(bad)
sbb
add
ret
fcom
out
test
push
mov
mov
nop
mov
push
push
sub
(bad)
push
cmp
fadd
gs
gs
cmps
xor
push
in
aam
add
jb
xlat
das
add
shr
aad
pop
fimul
mov
mov
mov
out
inc
cmp
jl
inc
cmp
jl
movs
add
sbb
mov
outs
fdiv
bound
loopne
jo
shl
xor
cmp
in
adc
adc
mov
mov
sbb
add
out
nop
in
push
hlt
add
in
jbe
(bad)
mov
inc
in
pusha
add
pop
mov
inc
sar
mov
sar
int
add
xor
jbe
icebp
sbb
or
cmp
test
rcl
in
retf
lock
or
push
add
mov
ins
mov
dec
sbb
mov
test
push
or
inc
push
ret
xchg
lock
inc
mov
clc
mov
pop
aaa
call
lods
cmp
test
sbb
pop
rcr
inc
jp
sbb
call
push
ret
nop
cmp
fld1
ret
or
push
es
dec
push
cmp
aam
std
xchg
loop
and
je
and
aam
dec
push
push
mov
test
ret
cmp
xchg
cwde
mov
fsub
xor
mov
add
shr
cmps
cmp
and
add
mov
and
xor
pop
dec
pop
pop
jle
mov
sbb
mov
pusha
jmp
mov
or
loop
add
jbe
mov
mov
sbb
cli
push
push
inc
xchg
loop
inc
xor
repnz
xchg
sbb
test
ficomp
push
in
pop
mov
sar
sar
outs
pop
pop
and
xchg
adc
out
xor
pop
fisttp
inc
mov
push
test
mov
shr
mov
or
pop
pop
fsubr
cmp
adc
adc
inc
das
push
int
xor
pop
lods
mov
(bad)
adc
mov
push
pop
sbb
(bad)
(bad)
dec
test
jne
sub
into
test
xchg
adc
inc
shl
mov
mov
mov
mov
or
mov
adc
sbb
push
data16
call
add
push
push
adc
cmp
add
dec
(bad)
sub
cmp
mov
inc
mov
fadd
lock
(bad)
adc
push
mov
sbb
or
push
retf
aam
dec
adc
loopne
jmp
data16
dec
fsub
and
jbe
or
cmp
push
fs
xchg
ret
pop
ja
fidivr
stos
mov
dec
mov
adc
test
mov
not
(bad)
xchg
out
retf
in
mov
fwait
(bad)
mov
push
push
out
ss
adc
add
push
add
push
cmps
pop
sub
ja
cli
neg
neg
mov
mov
pushf
add
push
clc
test
jl
lea
push
xor
cmp
(bad)
add
fisttp
cmp
shr
scas
pop
inc
pop
das
jle
xchg
push
xchg
dec
add
push
add
leave
adc
lds
fs
mov
aam
push
mov
stos
out
push
sahf
pop
inc
push
dec
jle
jle
dec
cdq
pop
push
pop
cmp
shl
out
(bad)
fisub
clc
mov
or
popf
outs
and
add
jl
int
outs
adc
push
mov
loop
loop
inc
ret
loope
cmp
push
(bad)
jns
daa
pop
push
add
sbb
pop
movs
pushf
enter
mov
outs
cli
stos
push
lea
push
or
jnp
adc
adc
jp
iret
xor
in
push
cwde
push
or
xchg
jmp
push
xor
add
and
mov
adc
jmp
add
jl
cmp
cdq
or
ins
or
(bad)
sbb
lds
jae
(bad)
mov
int3
xor
(bad)
mov
and
xchg
je
das
sbb
mov
es
pop
push
sbb
sub
lds
xor
popf
mov
mov
add
loop
adc
fiadd
push
jnp
sub
xchg
pop
ret
mov
or
xchg
push
adc
or
in
sbb
clc
sub
scas
imul
mov
inc
add
sbb
and
leave
pop
add
aaa
and
add
call
shl
mov
add
xchg
fisttp
or
adc
loopne
dec
es
inc
mov
nop
jo
adc
add
or
je
mov
jno
outs
xor
ins
or
push
mov
or
push
or
mov
or
sub
scas
ins
loopne
and
mov
out
popf
inc
scas
adc
dec
add
outs
shl
ror
sub
cmp
jl
jmp
fdiv
mov
push
jbe
dec
mov
popf
mov
test
dec
or
sub
imul
inc
ja
ja
rol
js
test
adc
jl
inc
cld
bound
sub
out
sti
inc
cmp
xor
push
adc
shl
test
cmp
jmp
in
out
aas
mov
jne
sbb
push
jns
or
sbb
adc
scas
in
cmp
cmp
jl
jp
aaa
sub
stc
dec
mov
div
cmp
fcmovnb
ret
pop
mov
pop
aaa
push
xor
inc
push
rol
jmp
sub
mov
clc
mov
sbb
retf
cmp
hlt
or
push
xchg
adc
data16
nop
xchg
or
in
add
inc
(bad)
loopne
add
cld
sbb
cmp
dec
cmp
adc
in
loopne
adc
add
xor
mov
sub
scas
mov
xor
xor
cmp
xchg
and
mov
or
add
cmps
xchg
pop
push
or
inc
sbb
sub
xor
or
nop
in
(bad)
rol
add
retf
lock
jno
(bad)
loope
jo
repz
test
or
jne
mov
mov
popf
add
sti
jne
lea
inc
(bad)
push
(bad)
or
movups
and
rcl
xor
sbb
fisub
cld
jmp
lea
sub
das
scas
out
test
rcr
das
sub
mov
je
jmp
fdivr
sbb
mov
js
dec
cmp
cli
daa
shr
pshufw
cmp
sti
mov
inc
xor
aam
daa
pusha
add
or
test
call
clc
repz
mov
retf
in
out
mov
sbb
pushf
(bad)
mov
or
inc
nop
das
mov
sbb
sbb
sub
push
pop
dec
or
dec
xor
mov
arpl
rol
jb
mov
sbb
push
adc
mov
pop
push
or
out
out
jp
or
fisubr
bswap
xor
cmp
test
repnz
mov
inc
dec
jb
inc
jb
je
bound
push
xor
mov
bound
push
adc
xchg
mov
daa
push
inc
dec
jb
sbb
inc
and
xchg
push
int
adc
push
mov
dec
cmp
test
add
xchg
sub
pusha
mov
dec
(bad)
cld
fiadd
jmp
jb
test
add
sub
jae
icebp
xor
sbb
dec
mov
not
push
push
iret
loope
push
pusha
enter
call
outs
jb
dec
fcmovb
inc
pusha
pop
inc
adc
push
inc
adc
(bad)
mov
cmp
test
adc
push
lods
lock
jns
cmp
add
push
inc
add
sbb
ins
es
daa
add
cmps
sbb
lea
add
bound
add
push
cmp
clc
jmp
out
pop
mov
retf
out
aas
inc
and
add
lods
sbb
jne
es
push
dec
and
(bad)
fild
ret
sbb
inc
and
mov
test
lea
mov
in
rcl
adc
jl
clc
jnp
(bad)
jmp
xor
sbb
push
mov
les
push
sbb
add
stc
push
cwde
mov
inc
dec
fs
cmp
pand
adc
ret
in
nop
pop
mov
xchg
cmps
jp
mov
jle
add
add
outs
je
jb
xor
stos
xor
fmul
or
inc
scas
fistp
clc
or
inc
mov
outs
xlat
push
inc
dec
les
add
cmp
sbb
and
fs
or
bound
add
xor
pop
push
jmp
jbe
mov
pop
in
push
xchg
lods
and
loop
push
rcl
adc
and
mov
pusha
les
sbb
sub
sbb
sbb
leave
sahf
std
push
iret
popa
xor
in
jle
nop
cmp
cmp
push
shl
sbb
sbb
push
sbb
add
inc
xchg
or
mov
or
retf
and
scas
clc
adc
xor
or
ret
jo
inc
or
add
hlt
shl
add
rcr
inc
jbe
push
je
fild
push
xorps
fcom
or
sub
loop
jge
jl
imul
aad
add
mov
in
loopne
or
loop
sbb
sti
mov
sar
es
jnp
inc
dec
jl
adc
cmp
add
adc
dec
ins
cmp
jl
inc
push
dec
rol
xchg
add
jg
jnp
outs
jl
xchg
adc
add
ss
ss
push
cmp
inc
das
cmp
add
add
push
outs
dec
inc
jmp
jmp
mov
in
fs
add
inc
xor
lea
jno
pushf
mov
lds
lea
add
cli
xor
or
push
emms
in
sbb
call
into
iret
xor
pop
aaa
scas
ret
xor
push
and
add
pop
or
scas
mov
pop
mov
push
loopne
call
inc
sbb
cmp
inc
xor
add
jno
jmp
(bad)
xchg
sahf
mov
inc
xor
ins
jo
adc
add
daa
test
add
mov
aas
in
mov
adc
adc
shl
pusha
add
out
lea
jecxz
inc
cwde
inc
or
push
inc
inc
inc
mov
cmp
jl
inc
dec
adc
lock
inc
mov
(bad)
cmp
dec
div
push
je
daa
cmp
xor
into
dec
sbb
cs
fsubp
or
(bad)
adc
outs
push
adc
cli
(bad)
dec
daa
push
test
fadd
outs
push
in
mov
aas
sti
ss
(bad)
test
mov
sbb
and
add
jle
cmp
retf
cld
(bad)
mov
arpl
sub
jmp
jnp
mov
jb
xor
pop
loopne
mov
in
cwde
or
test
scas
dec
lods
daa
xchg
jne
cli
in
jmp
jbe
pop
or
mov
mov
mov
cmp
xchg
mov
je
push
push
jg
sbb
scas
mov
sub
into
ror
and
packuswb
push
les
inc
cmp
add
or
stos
fiadd
or
jae
adc
adc
jl
fldenv
test
mov
loope
popa
push
cmp
dec
xchg
movs
nop
sti
loop
push
adc
push
in
es
inc
or
pop
repz
push
push
das
(bad)
jnp
adc
and
(bad)
imul
fwait
mov
bound
loope
mov
pushf
loop
sub
stos
sbb
jl
lods
push
ins
cmps
ficom
aas
adc
xor
xchg
test
sub
rcr
lds
aaa
jae
mov
lahf
sub
sub
hlt
fwait
cwde
pop
test
sbb
mov
(bad)
lock
cmp
fidiv
rol
add
imul
scas
nop
adc
and
mov
lds
add
retf
enter
xor
pusha
pop
mov
cmp
and
js
or
sub
jo
mov
jo
cmp
jne
sbb
shr
or
mov
ret
xor
mov
add
cmp
xlat
ja
outs
mov
stc
add
or
push
sbb
dec
pop
and
mov
inc
test
pop
out
add
adc
ret
cdq
sub
jmp
fild
mov
cmp
mov
nop
in
ret
xchg
dec
xor
xchg
and
cdq
pop
fild
cmp
enter
imul
push
jnp
inc
lds
cmp
add
loopne
jo
mov
mov
inc
cmp
push
(bad)
in
ror
or
sbb
out
adc
add
and
dec
jmp
and
push
inc
icebp
les
jmp
or
pop
sbb
es
jae
fdiv
pop
(bad)
ins
call
or
dec
inc
push
inc
ret
cs
pop
or
and
dec
retf
xor
sub
pop
mov
movs
addr16
pusha
cmp
dec
jmp
cdq
retf
fs
sub
call
fs
dec
inc
jno
(bad)
sbb
mov
mov
dec
add
dec
cmp
or
fisubr
lock
test
pushf
and
inc
push
push
call
ss
jl
repnz
push
pop
jns
mov
fiadd
cmps
adc
inc
js
or
and
sub
sub
or
scas
retf
and
cmp
or
or
scas
loope
cmp
or
fimul
push
sub
fwait
sbb
xor
dec
cld
dec
xor
mov
pop
cmp
dec
nop
sbb
mov
push
int3
push
(bad)
into
jmp
dec
call
movsx
adc
test
mov
or
and
daa
mov
lods
jnp
or
or
movs
sbb
jns
dec
(bad)
pop
sbb
push
and
add
minps
(bad)
xchg
mov
pop
push
pop
mov
in
cld
cmp
sbb
in
loopne
push
nop
jecxz
xchg
push
cwde
rol
xchg
mov
cs
or
pop
add
fisttp
xchg
sbb
push
call
sbb
mov
sub
pop
sub
lds
add
leave
test
jl
mov
pop
shl
push
shr
(bad)
jmp
retf
sub
jl
sbb
loopne
arpl
enter
pop
shl
add
div
cmp
pop
or
sbb
xchg
fiadd
movs
add
sbb
inc
arpl
sbb
loopne
sbb
gs
mov
out
inc
mov
inc
mov
add
shr
test
sub
push
push
fisub
add
push
arpl
and
push
and
adc
xchg
xchg
cmp
cmp
mov
sti
pop
inc
push
mov
pop
xchg
mov
push
arpl
push
xor
push
adc
sbb
call
push
xchg
add
ss
leave
sub
dec
je
xchg
imul
jo
add
fisub
arpl
push
jns
add
push
lea
ja
out
inc
sbb
dec
push
sbb
xchg
pop
mov
or
cmc
js
outs
std
push
fsub
clc
jp
add
iret
lods
mov
fbld
ds
and
cmp
loope
sbb
cmp
add
jo
out
cmp
sbb
add
mov
fimul
sbb
and
mov
cli
mov
dec
inc
push
mov
pop
ror
mov
stc
adc
adc
cmp
mov
das
xchg
inc
dec
inc
clc
mov
es
ret
mov
add
popa
mov
xchg
mov
cld
ds
or
or
inc
jo
lea
xchg
stos
mov
inc
mov
les
or
pop
mov
mov
inc
or
add
sbb
add
shr
xor
dec
xchg
lock
push
(bad)
dec
or
push
cmp
adc
or
ret
cs
cmp
jg
or
test
mov
adc
or
jecxz
adc
and
mov
sbb
int3
fimul
icebp
pop
cmps
fadd
jecxz
add
mov
inc
fdivr
or
lods
or
or
ins
pushf
retf
and
xchg
mov
or
pop
add
jmp
cmp
(bad)
pushf
and
cmp
jne
add
adc
leave
jl
pusha
inc
std
das
adc
mov
inc
or
pop
mov
test
push
dec
or
mov
dec
dec
cmp
iret
sub
mov
pusha
cmp
push
das
into
mov
add
jns
or
test
mov
or
dec
jge
jns
or
xor
ja
push
ds
adc
shl
shr
pop
and
lea
mov
add
push
xchg
inc
hlt
shl
add
and
xor
ror
xor
movs
lods
xlat
shr
add
adc
mov
div
mov
adc
sbb
sub
push
cmp
ins
js
push
das
push
sub
xor
adc
mov
dec
jbe
sub
push
or
xor
lock
add
test
add
cmp
gs
mov
add
mov
inc
adc
sbb
inc
inc
push
inc
aaa
sbb
sbb
cmp
cmp
inc
jae
inc
jae
jg
sub
cmp
jae
jae
not
add
inc
je
mov
xor
mov
adc
add
fimul
add
fisttp
add
add
mov
cmps
mov
and
inc
pop
push
mov
adc
add
(bad)
fadd
push
call
icebp
clc
mov
xor
(bad)
cli
adc
dec
add
xchg
fldenv
mov
jo
mov
pusha
das
jae
or
inc
ins
cmp
loopne
mov
inc
sahf
icebp
inc
cdq
add
push
mov
push
mov
or
fcom
arpl
mov
das
shl
dec
je
add
sub
je
or
into
push
loop
jmp
ror
imul
and
scas
jbe
dec
jbe
lods
arpl
push
data16
add
jmp
push
mov
ins
adc
dec
ss
add
pop
xchg
jae
add
xor
xor
jmp
jmp
push
add
js
add
push
movs
inc
dec
and
dec
into
sbb
fiadd
in
aaa
pop
pusha
xor
mov
rol
fcmovnu
daa
rcl
sub
push
and
sbb
inc
or
sar
sbb
pop
or
call
sub
xchg
jo
push
push
adc
adc
push
pop
not
mov
int3
out
sar
das
xchg
clc
inc
jl
dec
xor
pop
push
push
fdivr
mov
add
lock
ret
add
sar
push
or
mov
add
rol
or
lea
mov
fst
adc
shr
ins
and
inc
(bad)
test
fmul
fstp
jo
inc
mov
popf
pop
fimul
or
mov
bound
data16
mov
lahf
mov
int
aam
clc
inc
jo
pop
add
(bad)
icebp
add
xor
rcl
mov
fisub
into
mov
push
cmp
js
mov
ret
rol
(bad)
mov
push
push
push
lods
mov
pop
aam
xor
push
mov
add
rcl
loopne
mov
cli
popf
mov
jle
inc
pusha
add
addr16
outs
scas
ret
out
pop
push
inc
pop
cmp
fcomp
add
mov
push
mov
xor
call
loope
adc
adc
adc
jge
psubsb
xor
in
add
ins
mov
sub
pop
and
dec
add
lock
or
sub
jo
dec
inc
mov
lods
jmp
mov
pusha
fsubr
and
fdiv
adc
shr
inc
in
bound
or
jp
add
jmp
mov
ror
push
adc
pusha
xchg
add
or
push
add
dec
and
daa
mov
rol
add
push
out
mov
loopne
add
mov
pop
mov
mov
or
mov
shl
adc
sbb
xchg
sub
dec
ret
lea
rol
shl
and
mov
mov
jo
clc
cmp
jbe
mov
inc
push
sar
mov
inc
dec
push
jg
ja
cmp
and
sar
inc
mov
dec
adc
push
adc
jo
cs
push
iret
mov
cmp
and
outs
xor
mov
mov
add
add
hlt
inc
jnp
add
test
lock
hlt
jmp
xchg
rol
jns
cli
cmp
jbe
mov
inc
add
fiadd
pop
lds
push
clc
(bad)
hlt
rol
xchg
test
pop
jl
enter
imul
int3
fidivr
rcl
pusha
mov
lea
enter
inc
call
jg
imul
jb
or
cmp
loop
inc
mov
or
inc
add
loop
loop
test
es
sub
and
(bad)
jl
loopne
lock
mov
loope
jg
fnstsw
shl
or
rol
add
in
js
cwde
pusha
jae
adc
xor
stos
pop
adc
push
jo
push
add
out
cli
add
sbb
push
or
sub
jbe
add
push
mov
add
inc
clc
inc
sbb
inc
arpl
ja
mov
imul
popa
dec
rol
xchg
sub
dec
mov
dec
out
inc
imul
push
outs
test
inc
ins
inc
dec
std
fs
dec
clc
mov
or
sub
push
add
aad
inc
add
call
cld
jecxz
adc
and
or
in
mov
cwde
retf
add
sub
and
pop
sbb
xor
or
clc
in
test
outs
in
jbe
mov
imul
sub
(bad)
test
jbe
test
jle
test
cwde
pusha
adc
pop
sar
push
imul
pushf
sti
add
mov
dec
mov
arpl
or
cld
jecxz
loopne
rol
mov
mov
aad
xchg
or
sub
lods
xlat
add
pusha
cmp
(bad)
jbe
(bad)
cli
mov
mov
inc
adc
je
out
pop
test
mov
jmp
sbb
or
add
leave
jmp
mov
xor
into
add
add
mov
cmc
repnz
lods
sbb
add
push
mov
push
sti
mov
jae
mov
inc
or
enter
push
shl
mov
pop
adc
(bad)
mov
xchg
or
cmp
data16
push
push
imul
dec
fistp
ins
pop
jne
add
dec
mov
add
add
clc
pop
mov
sub
cwde
or
out
cdq
out
or
or
adc
push
and
mov
add
les
out
xor
sahf
enter
sbb
pop
enter
jo
test
jmp
and
jle
push
jo
jmp
adc
int3
push
jp
adc
adc
cmp
int3
jno
ins
xor
sub
int
xchg
inc
or
sbb
jg
js
or
loop
daa
xlat
push
and
inc
jo
pop
mov
das
jl
mov
push
push
jp
pop
(bad)
push
mov
je
test
pop
mov
fisttp
call
add
cs
mov
ss
test
xchg
inc
mov
inc
bound
jns
div
hlt
ins
or
gs
adc
cmps
pop
pusha
push
ret
mov
rol
or
mov
ins
or
or
or
loop
adc
mov
add
enter
inc
mov
dec
pop
sahf
cwde
xchg
cld
fild
fmul
shl
rcl
clc
inc
fmul
int
mov
imul
fldcw
les
(bad)
lods
jns
gs
and
pop
rcl
ins
xor
mov
push
aam
fdiv
adc
and
cs
jnp
xor
loop
adc
rcr
push
fmul
shl
push
loopne
push
pop
imul
adc
pop
in
and
pop
les
gs
or
and
adc
sbb
jle
in
enter
ins
int3
fld
fild
imul
push
xchg
add
lock
sub
cmps
in
push
add
push
or
popf
out
in
sbb
xchg
or
pop
push
fwait
inc
call
xchg
or
sbb
popa
push
arpl
adc
fwait
lods
pop
sub
push
mov
push
cs
movs
mov
pop
icebp
jmp
mov
mov
add
inc
or
push
dec
xor
jne
pop
sbb
test
inc
or
sbb
adc
repz
(bad)
inc
push
jl
lahf
adc
mov
loope
inc
test
adc
inc
xor
pop
loope
or
add
lock
aam
call
push
mov
push
mov
add
sub
cmp
sbb
add
push
and
sub
in
ret
cmp
cli
scas
into
and
inc
add
dec
bound
xchg
inc
repz
aas
pop
sub
aam
mov
jne
sub
jmp
daa
rol
pop
fstp
nop
xchg
and
or
inc
ja
mov
inc
int3
lea
pop
pop
scas
cs
jp
mov
jp
mov
mov
mov
jp
dec
or
inc
or
mov
sbb
out
in
scas
or
inc
pusha
mov
enter
ror
pop
das
sub
push
cmp
in
mov
jne
dec
lock
stos
sbb
shr
sbb
sub
ror
rcl
mov
dec
in
dec
mul
jmp
mov
add
ds
mov
sbb
(bad)
loopne
mov
sub
imul
or
sti
sbb
mov
sub
mov
into
push
in
mov
inc
fbld
loopne
xor
mov
jb
sub
mov
and
adc
xor
icebp
ss
inc
ins
clc
loopne
jle
loopne
jge
repnz
ror
push
es
ficomp
cmp
shl
sub
or
inc
xchg
push
sar
adc
push
into
sub
push
or
pop
inc
inc
fadd
rcr
add
xor
add
pop
aam
sbb
loopne
rcr
sbb
es
movhps
call
in
pop
push
or
or
mov
push
cwde
ja
cs
shl
loopne
push
inc
add
sub
dec
cmp
(bad)
hlt
mov
std
xchg
(bad)
ror
sbb
jp
sbb
push
add
add
pop
and
(bad)
add
mov
or
stos
xchg
jne
mov
or
xor
add
loope
pop
mov
or
add
cmps
imul
inc
test
retf
push
mov
jo
or
fld
call
add
sub
sbb
add
jns
adc
in
pop
icebp
pop
(bad)
dec
sbb
pop
or
add
dec
adc
adc
and
in
sub
jecxz
sbb
mov
sub
ss
push
je
mov
sub
sub
push
push
outs
sub
add
sbb
xchg
xchg
pushf
enter
push
arpl
loope
das
aad
xor
add
mov
div
retf
movs
rol
pop
js
outs
in
pop
dec
nop
fld1
cli
inc
inc
mov
test
add
test
dec
add
sbb
or
cmp
jge
xlat
or
xor
sub
in
cwde
test
ret
push
stos
imul
adc
mov
mov
(bad)
stos
cmps
push
call
push
push
xor
sub
(bad)
cmp
scas
xchg
jmp
mov
in
shl
lods
jle
es
or
add
aaa
sti
(bad)
(bad)
neg
lea
shl
test
imul
and
sub
pop
fwait
add
cld
or
dec
sub
mov
add
and
ficom
lods
add
shl
push
js
add
sbb
hlt
push
mov
mov
adc
add
lock
cs
sbb
mov
jns
cmp
pop
and
cmp
dec
mov
daa
jb
div
cmp
ret
dec
push
in
int
sbb
mov
jl
js
mov
push
ja
cld
add
add
mov
push
hlt
pop
jo
stc
mov
retf
and
dec
mov
rcl
sub
inc
add
in
test
test
cdq
lods
sub
ds
in
retf
push
in
push
add
pop
in
in
in
aas
cmp
xor
daa
mov
call
loop
inc
sub
mov
mov
mov
push
dec
stos
push
ins
push
add
push
inc
xor
and
cmc
or
loopne
mov
adc
retf
mov
sti
neg
in
mov
sub
add
cs
mov
ret
pop
mov
dec
jo
aad
aam
push
call
clc
imul
repz
stos
and
into
hlt
iret
shl
stc
(bad)
mov
stc
sub
adc
xor
push
adc
and
pop
sub
or
pop
xor
mov
jmp
adc
push
cmp
shl
push
push
xchg
inc
push
adc
mov
dec
loopne
push
dec
add
fwait
dec
sub
add
clc
pop
sbb
in
sub
nop
jb
loope
bound
imul
jle
dec
mov
mov
scas
adc
imul
popa
jmp
lods
cmp
mov
push
cli
push
push
rcl
(bad)
enter
cmp
add
or
mov
or
sbb
mov
bound
fcom
sbb
pushf
pop
pop
sub
pushw
cmovb
mov
out
aam
sahf
cmps
imul
fadd
cmp
(bad)
sbb
ins
shr
xor
and
xlat
inc
and
je
sub
add
or
adc
cmp
loope
jo
inc
pushf
or
retw
mov
inc
clc
scas
cmps
adc
xlat
mov
clc
dec
sbb
or
dec
xchg
jle
shr
mov
jg
fadd
xchg
imul
fisttp
repz
sbb
pop
add
jo
daa
mov
dec
shr
adc
imul
sar
or
pop
add
add
mov
hlt
add
enter
fiadd
aaa
add
inc
test
lods
dec
mov
mov
inc
adc
fist
mov
xchg
mov
adc
or
push
ret
bound
arpl
push
mov
push
jl
mov
pop
mov
inc
mov
sub
mov
call
frstor
jp
jnp
sub
cmp
std
jbe
lea
inc
adc
push
and
mov
out
xor
add
adc
or
adc
inc
push
sbb
sbb
push
fbld
and
adc
add
pop
sub
mov
mov
ret
dec
push
inc
lea
cmp
xchg
push
jmp
sub
pop
inc
or
xor
or
inc
xchg
or
push
and
ret
call
test
jne
fistp
pop
mov
ja
dec
movzx
rol
add
in
inc
pop
sub
mov
pop
es
pop
inc
sub
pop
or
loopne
push
lods
fimul
inc
and
add
push
mov
push
pop
mov
fcom
sbb
mov
in
and
in
or
push
scas
xchg
mov
jl
xor
sbb
dec
enter
test
pop
retf
inc
je
add
mov
mov
inc
cmp
stos
ins
pop
mov
pop
jbe
adc
outs
or
jg
sub
sbb
push
cmp
jne
or
xor
add
fld
push
mov
push
fadd
in
add
sub
xchg
ds
pop
mov
shl
add
inc
iret
scas
inc
mov
sar
xchg
jmp
mov
scas
sub
pusha
fild
dec
jmp
int
loopne
xor
and
int3
dec
or
shl
fs
adc
mov
ror
add
in
ss
pop
dec
ror
test
mov
push
mov
les
pop
jb
es
clc
mov
icebp
call
rcr
mov
add
mov
fdivr
xor
ja
jl
test
jle
dec
add
into
inc
pop
jl
inc
or
lock
ins
rcr
es
pop
inc
pusha
push
xchg
int
push
je
xlat
inc
xchg
cmp
cmps
add
add
cmp
mov
(bad)
jne
mov
jl
or
ja
pop
xchg
or
jb
sbb
or
or
out
aaa
push
fsubr
mov
ins
add
or
xor
les
cmp
dec
test
loope
bound
push
je
inc
add
add
shl
add
ret
adc
mov
icebp
sar
loope
dec
jge
xchg
inc
(bad)
push
hlt
mov
nop
nop
cs
push
shl
dec
not
or
xor
sub
frstor
pop
xchg
nop
stos
xchg
and
mov
push
retf
iret
jl
push
adc
pusha
nop
add
pushf
sbb
cmp
test
or
dec
movs
imul
pop
ins
(bad)
adc
add
mov
push
sbb
aam
sbb
pop
push
inc
ja
js
xor
test
cmps
xor
out
sub
inc
dec
es
das
lock
mov
inc
jl
mov
add
push
add
push
inc
sub
cmp
pop
ror
neg
lahf
adc
jne
not
jne
sahf
inc
shl
or
or
xchg
cmp
fistp
dec
inc
mov
or
add
dec
adc
bound
call
dec
mov
in
inc
inc
sbb
and
cmp
int
xlat
xor
movs
and
push
and
add
add
mov
add
add
and
and
shl
sub
mov
push
jg
jo
xchg
add
outs
mov
(bad)
sbb
jbe
xor
or
adc
or
jno
js
adc
jo
popa
jae
pop
dec
idiv
sub
bound
je
and
jo
xlat
or
or
in
add
add
add
xor
mov
add
adc
jl
xor
iret
pop
adc
and
js
push
fild
or
adc
ret
mov
push
inc
mov
adc
(bad)
cld
xor
cmp
mov
xor
pushf
push
jg
(bad)
(bad)
ficom
test
adc
cmp
dec
jecxz
xchg
and
pop
les
jl
jmp
adc
cmp
adc
dec
fdivr
xor
lds
ret
push
popa
popa
(bad)
push
xchg
fist
add
and
jbe
jb
inc
fadd
adc
push
das
aaa
push
repz
push
sar
jne
lds
sti
jmp
pop
(bad)
popf
movs
push
in
shr
mov
push
in
mov
or
push
adc
(bad)
adc
or
push
adc
pop
dec
sbb
cmp
imul
movs
pusha
mov
cld
ret
mov
vcmppd
int
jl
dec
dec
push
fcom
cmc
push
dec
mov
sbb
mov
push
or
cmp
add
or
adc
sbb
or
xor
add
jl
cli
test
pop
dec
push
sti
mov
xor
std
mov
hlt
loope
cmps
ror
mov
jl
test
add
xor
mov
jp
and
pusha
xchg
sbb
cmp
xor
mov
aaa
ror
and
push
adc
adc
adc
xor
js
inc
adc
(bad)
xor
push
mov
in
adc
arpl
(bad)
es
scas
cmp
push
or
mov
mov
pop
call
xchg
mov
adc
pop
push
cmp
mov
adc
add
mov
push
jb
clc
dec
jne
imul
cli
inc
sbb
mov
ins
rcr
push
push
stc
ss
cmp
rcr
cmp
xchg
mov
mov
mov
mov
data16
outs
add
or
jne
pop
loop
add
xor
int
pop
and
or
loope
enter
shl
movs
mov
mov
sbb
pop
cmp
hlt
ja
sub
or
mov
cmp
pop
inc
out
push
or
inc
adc
jp
and
or
inc
xchg
lahf
fwait
and
or
je
std
cmp
cmp
pop
stc
pop
inc
or
adc
pop
xchg
sub
sub
enter
or
cli
je
mov
pop
cmp
clc
xchg
mov
push
ja
call
in
or
pop
ror
shr
fimul
popf
push
push
or
mov
(bad)
bound
or
leave
je
adc
je
jmp
cmc
ins
and
xor
jmp
xor
jbe
dec
enter
pop
xlat
push
add
adc
pop
jmp
jmp
lock
jnp
push
pop
pop
ret
xchg
dec
push
pop
in
hlt
mov
or
sar
mov
sbb
outs
sbb
rcr
xchg
std
dec
add
sbb
test
and
xchg
and
clc
outs
push
xchg
cmps
or
xchg
movzx
inc
in
inc
or
clc
hlt
dec
xchg
loopne
loop
jo
dec
retf
outs
test
pop
mov
push
aam
sbb
dec
or
jb
adc
pop
fnstcw
xlat
loopne
mov
xlat
fnsave
fist
sbb
ins
mov
add
xchg
shl
sbb
or
pop
inc
pop
mov
pop
fsubr
jle
dec
in
leave
in
or
lea
fisttp
call
xor
ret
push
adc
push
scas
sbb
or
rcr
sub
push
xchg
mov
(bad)
movs
pop
je
sub
je
xor
push
adc
add
adc
rol
gs
lods
jnp
mov
das
push
jmp
hlt
sbb
cmp
mov
mov
sbb
icebp
xchg
bound
mov
aam
add
and
sbb
xlat
nop
cmp
inc
mov
sbb
cmp
test
call
jb
xor
push
mov
sbb
xor
push
les
test
jne
fs
pop
out
popf
outs
xchg
dec
pop
fcomp
sub
adc
lahf
mov
dec
jbe
adc
sub
lods
stos
adc
cmp
js
jne
dec
pusha
rcr
jnp
sti
popf
cli
sbb
shl
ins
cmp
cli
sbb
fisttp
rcl
inc
and
jne
add
mov
xchg
fsub
or
fadd
xor
inc
inc
fild
mov
dec
nop
jg
mov
mov
jp
sub
mov
ret
mov
jmp
pop
mov
cmp
int3
xor
js
sub
ficomp
adc
jo
test
inc
enter
jne
xchg
inc
xor
(bad)
and
out
cmps
test
ja
adc
push
push
aas
cld
xor
cmp
sbb
ror
ret
rcr
xor
add
and
sub
inc
jecxz
add
xor
js
popa
cs
fwait
jno
jmp
and
inc
adc
mov
test
inc
sub
loopne
pop
out
call
lahf
into
xchg
(bad)
and
xchg
or
movs
repz
cs
pop
out
out
hlt
mov
and
inc
fs
sbb
pop
sbb
mov
push
out
pop
mov
in
mov
(bad)
xchg
mov
sbb
mov
mov
inc
je
inc
jo
sbb
push
or
cmp
xchg
pop
inc
and
xrelease
mov
inc
or
loopne
or
push
and
das
push
loopne
cld
mov
dec
xor
mov
dec
inc
cmp
cmp
cmp
cdq
inc
add
repz
xlat
sbb
js
(bad)
lds
sub
pop
mov
jo
adc
je
ins
inc
in
or
xor
push
inc
and
and
pop
cwde
loope
cmp
out
loope
test
sub
pop
dec
xor
mov
push
pop
jb
gs
inc
xchg
cmp
add
add
je
imul
aad
jo
ret
mov
xor
jbe
ss
mov
stos
sahf
cs
icebp
push
ret
call
jmp
xchg
out
mov
jo
add
imul
ret
mov
jg
je
out
dec
outs
pop
into
add
jb
dec
pop
jmp
ja
push
pop
dec
dec
(bad)
ret
cli
pop
bswap
(bad)
(bad)
fild
xchg
cwde
and
add
mov
pop
and
test
ret
or
nop
fsub
and
out
inc
inc
ficom
ror
mov
cmps
push
cmp
std
call
pop
inc
sub
ret
(bad)
adc
mov
test
sub
jo
das
pop
jp
xchg
xchg
or
xor
push
mov
or
xor
mov
jo
cmps
adc
push
or
jmp
pop
mov
arpl
jp
jns
mov
jge
(bad)
mov
sub
push
mov
retf
jo
lods
daa
pusha
cld
add
xor
data16
sbb
mov
out
fimul
dec
popa
addr16
push
sbb
pusha
rol
or
dec
rcr
sbb
and
mov
inc
jne
pop
out
iret
mov
sub
imul
push
sbb
jo
loope
dec
dec
adc
shl
jno
sub
push
mov
test
(bad)
cs
push
jo
add
xor
mov
mov
and
cmp
jb
test
lahf
mov
mov
sahf
mov
fdivr
pop
sbb
xor
jge
mov
or
jl
push
xlat
jle
and
sar
pop
call
inc
add
fdiv
push
add
push
int3
outs
aas
pop
fidiv
sub
clc
or
lds
xor
popa
adc
js
mov
add
and
or
cs
jo
mov
mov
movs
mov
jmp
inc
mov
pop
mov
mov
iret
fimul
pop
cmps
into
adc
std
mov
mov
xchg
ins
call
inc
or
adc
dec
sbb
cmp
adc
adc
add
mov
jmp
xchg
lock
or
test
jg
pusha
mov
add
and
add
pop
ja
cmp
jl
and
dec
pop
or
clc
cwde
jbe
pop
pop
mov
push
clc
call
pop
xor
jge
mov
test
je
mov
icebp
test
jne
nop
push
jae
mov
push
imul
and
cmps
cwde
mov
mov
mov
xor
arpl
mov
mov
inc
ret
popf
dec
jl
push
out
jg
mov
jb
xchg
cmp
inc
mov
mov
call
iret
lea
dec
sbb
test
ret
cmp
dec
test
lea
cdq
idiv
pop
sti
fisttp
push
fimul
add
mov
and
or
ret
push
nop
xchg
sar
inc
or
loop
mov
add
adc
icebp
add
mov
push
mov
cmp
pop
push
add
add
and
cld
push
push
push
sub
fidivr
jg
test
pop
xlat
add
push
add
rol
add
cmp
inc
in
jno
xor
call
std
and
test
jg
xor
mov
mov
pop
and
adc
mov
gs
out
push
je
sub
ja
aad
test
aas
mov
mov
nop
xchg
push
test
pop
mov
xchg
pop
ds
jg
mov
and
push
pop
test
clc
mov
adc
mov
xor
mov
sub
test
cmp
push
mov
inc
mov
sbb
mov
mov
xchg
(bad)
loop
mov
mov
and
je
jbe
xchg
mov
push
or
cmp
rcr
dec
xor
sbb
es
mov
loopne
inc
mov
mov
aas
fnsave
and
push
mov
inc
or
or
loope
mov
jg
pop
xchg
cwde
dec
jbe
repnz
add
cmp
xor
add
and
add
es
clc
lods
add
jo
lea
jp
xor
push
cmp
inc
out
jmp
mov
sub
mov
mov
xor
jg
addr16
cmp
inc
cmp
into
popf
jne
cmp
and
icebp
push
and
push
push
dec
ror
inc
retf
popa
jno
jl
mov
loopne
mov
pop
js
rol
stc
pop
jae
in
js
cwde
out
push
xor
pop
push
add
(bad)
enter
pop
shl
cmps
fs
mov
push
xor
mov
enter
leave
pop
xchg
imul
rol
cmps
clts
icebp
pop
ret
inc
pop
xor
sbb
into
cmps
push
sti
xchg
dec
or
dec
stos
cld
arpl
push
add
adc
push
cmp
(bad)
jle
lea
xor
or
fld
cli
adc
cmp
sub
or
(bad)
dec
(bad)
mov
inc
pop
mov
dec
or
ds
xchg
xor
sub
fwait
pop
and
push
(bad)
add
or
push
or
push
sbb
(bad)
in
sbb
shr
loopne
sbb
and
loope
add
dec
dec
push
aam
je
mov
inc
lock
jae
popa
sub
movs
jl
shr
sub
(bad)
(bad)
xchg
xchg
js
and
out
xor
paddb
mov
adc
retf
pushf
mov
xor
sub
or
cmp
or
xor
jae
ret
dec
mov
ret
xor
mov
fwait
ds
or
adc
or
sbb
ds
add
xchg
adc
dec
jge
mov
loopne
ss
(bad)
out
sahf
xlat
push
mov
pushf
iret
mov
in
ret
rol
mov
push
or
inc
es
ds
or
dec
out
scas
sbb
jmp
jae
scas
aad
out
inc
adc
adc
loopne
jnp
ja
xor
and
push
stos
outs
lock
adc
pusha
push
addr16
clc
retf
push
sbb
cmp
cdq
sub
cmp
mov
mov
xchg
or
xchg
jae
clc
ret
adc
iret
jae
ror
mov
sbb
mov
shl
dec
leave
sub
ret
push
leave
inc
push
dec
inc
enter
adc
popf
add
xor
inc
mov
movs
xchg
int3
sbb
std
jb
leave
and
mov
sub
sar
popa
mov
or
xor
dec
inc
dec
cmps
ret
add
or
or
pusha
add
cmps
les
stos
bts
mov
jo
adc
leave
shl
data16
les
inc
add
das
adc
stos
push
and
cmp
cmp
clc
add
or
mov
sbb
sbb
push
ret
xlat
shr
sub
add
or
and
shl
add
mov
inc
out
popf
inc
push
jl
int
loopne
scas
xor
push
scas
sbb
retf
push
retf
movs
data16
cmp
cli
pop
out
mov
dec
fs
in
(bad)
fstp
sar
addr16
dec
stos
add
sahf
jge
mov
or
(bad)
ffree
(bad)
rol
sub
fcmovnbe
push
loop
lea
or
push
inc
dec
push
mul
ins
popa
xchg
sub
ja
sub
push
push
mov
or
test
sqrtps
aam
das
jle
jo
push
scas
(bad)
ins
lock
faddp
inc
jne
inc
inc
or
mov
in
or
or
iret
add
dec
mov
or
push
rol
mov
mov
stos
adc
fist
and
xor
add
push
jmp
mov
mov
mov
and
leave
call
mov
outs
mov
sbb
mov
pop
jne
sub
push
mov
pop
cmp
fsubr
shr
dec
and
xor
adc
or
mov
or
sub
and
sub
ret
sbb
fbstp
ins
sub
mov
push
xchg
push
sub
sub
clc
mov
pop
push
mov
pop
push
mov
je
pop
xchg
push
sbb
pop
jb
sub
pop
loope
scas
movs
mov
mov
cmp
xchg
xor
test
call
pop
cli
jmp
cmp
jb
retf
std
movs
mov
adc
dec
xchg
mov
or
mov
or
cmp
je
xchg
imul
cmp
mov
data16
sub
shl
add
pop
ret
push
lea
sub
jmp
adc
and
pop
pushw
or
ins
addr16
adc
out
add
jl
mov
pop
shl
cmp
jbe
mov
pop
movs
jecxz
mov
movs
xchg
rcr
mov
(bad)
jg
jbe
cmp
mov
cwde
fcomp
mov
sbb
in
adc
popf
cmp
and
add
inc
adc
and
xchg
push
imul
jl
mov
shl
push
and
sbb
add
mov
dec
adc
or
jl
outs
mov
inc
or
dec
adc
out
fidivr
jp
mov
push
lock
or
sar
add
call
push
fdivrp
dec
mov
pop
dec
es
mov
aaa
test
test
dec
jmp
loopne
xchg
mov
mov
fidiv
repnz
je
data16
pop
sbb
cmps
cmp
adc
lods
mov
pushf
jmp
or
jns
addr16
adc
push
jl
data16
imul
cmp
push
inc
inc
add
jo
xchg
add
push
mov
scas
xor
or
sbb
mov
jb
imul
cmc
push
sahf
cwde
sub
pop
or
and
loopne
lock
inc
mov
mov
xor
movs
mov
jo
mov
pop
je
popa
or
or
fdivr
mov
adc
das
cli
jmp
call
inc
add
test
mov
fadd
pop
loope
add
sti
iret
mov
mov
sbb
and
sbb
or
out
inc
sub
call
cmps
popa
xor
daa
mov
pushf
movs
push
ds
std
fidiv
mov
or
pusha
or
xor
sub
stos
inc
jmp
xor
or
sti
daa
sbb
adc
xchg
xor
ins
and
xchg
add
adc
jno
jmp
and
inc
sbb
cmps
xchg
dec
test
and
add
or
dec
jne
jb
and
or
push
ds
sbb
mov
jmp
xor
mov
mov
adc
aas
daa
sar
imul
and
cwde
adc
or
mov
out
dec
loopne
push
ins
xchg
test
ffree
xchg
(bad)
out
jg
push
fisttp
cmp
push
inc
inc
pop
cmp
jl
cmp
mov
or
add
je
mov
js
shr
loop
add
pusha
ret
or
repnz
adc
ror
adc
xchg
jo
push
arpl
adc
xchg
push
fs
push
test
sbb
jbe
mov
iret
pop
or
xlat
jl
push
sbb
aaa
adc
icebp
jmp
mov
mov
and
or
or
inc
or
add
push
xor
lea
(bad)
mov
ret
inc
push
mov
sbb
jns
dec
je
jmp
call
or
mov
add
jmp
pop
pop
dec
and
jg
jg
mov
and
inc
push
pop
push
cmp
sbb
cmp
mov
adc
mov
scas
dec
sti
lock
adc
or
sbb
push
sbb
adc
jbe
pop
sbb
not
rcl
mov
stos
cmp
mov
shl
daa
lods
pop
push
jb
mov
sub
mov
clc
outs
adc
(bad)
push
cmp
jl
cmps
pop
out
adc
hlt
sbb
rcl
retf
and
in
lea
jg
jmp
mov
inc
push
mov
xchg
sbb
adc
sbb
inc
adc
push
fisttp
mov
mov
push
shl
shl
rcr
add
stos
(bad)
jl
(bad)
jne
xchg
add
ss
sbb
ja
dec
adc
out
mov
mov
mov
adc
fldcw
xchg
lods
sbb
or
sbb
fwait
xchg
out
movs
pusha
mov
adc
daa
mov
mov
inc
sbb
outs
pop
outs
les
sub
pop
cmps
lea
adc
cmc
inc
sub
push
or
je
cwde
and
push
xor
fcomp
pop
xchg
icebp
and
inc
jmp
mov
pop
xor
add
xor
mov
push
mov
mov
sub
ins
dec
sbb
sub
fs
xor
outs
(bad)
in
push
cmps
pop
xchg
xchg
mov
dec
in
ror
adc
mov
stos
xor
(bad)
sbb
xor
add
jmp
mov
stos
sub
jle
jg
jle
add
sbb
sbb
jge
out
repnz
js
shr
add
out
mov
push
mov
rol
sub
icebp
sub
in
sub
popa
sub
and
movs
cmp
jno
pop
or
xchg
mov
cmps
jg
not
ret
add
loope
mov
cmp
out
je
ret
pop
or
jne
lock
push
sbb
mov
aas
and
shl
or
push
clc
push
pop
popf
loopne
inc
sbb
adc
and
push
mov
mov
dec
icebp
lea
loop
retf
jmp
mov
add
mov
mov
and
into
ja
mov
cmps
js
dec
call
mov
push
jmp
dec
es
or
add
push
push
daa
lock
popa
jne
out
xchg
and
pop
retf
and
popf
pop
add
loopne
mov
jp
rcl
add
or
push
idiv
or
mov
sbb
pop
inc
cmp
idiv
jbe
(bad)
dec
stos
pop
sbb
or
add
cmp
mov
neg
test
fcom
xchg
loopne
(bad)
and
sbb
imul
inc
sub
in
mov
inc
pop
(bad)
push
cmp
lock
sub
repz
ins
(bad)
adc
inc
pop
jle
ins
retf
sub
jle
or
ja
in
inc
fist
std
mov
jp
into
mov
adc
mov
xor
cmp
ss
adc
adc
ins
cwde
(bad)
jle
mov
adc
call
mov
and
inc
mov
sbb
cmp
and
outs
mov
aaa
ja
imul
inc
es
mov
mov
cwde
frstor
push
movs
inc
or
cld
jg
mov
lock
add
cmp
inc
xor
ins
add
rcl
shl
add
xchg
cli
inc
cmp
push
push
js
aas
je
mov
cld
add
inc
and
jmp
loopne
add
lock
inc
jl
outs
push
push
mov
add
jmp
jne
and
ss
or
xor
jmp
ret
xor
inc
push
mov
sbb
pop
push
loop
push
xchg
pop
clc
mov
cmp
pop
mov
push
mul
and
sub
xchg
ins
mov
aad
(bad)
jl
fs
test
jl
cmp
adc
pusha
loopne
sbb
xchg
cmp
and
add
push
push
js
ins
jo
jl
cmp
cmp
and
jno
xor
mov
xor
jp
int3
inc
in
push
fucom
je
jl
or
mov
adc
adc
test
jl
adc
mov
std
or
push
sbb
sbb
mov
adc
ja
jne
xor
or
jnp
add
sub
push
lea
test
inc
add
sbb
and
shl
pop
mov
jge
dec
add
fbstp
cmp
jge
mov
in
cli
loopne
cmp
push
push
sbb
shr
cmp
and
sub
add
mov
cmp
stos
or
mov
push
or
push
sbb
push
mov
jmp
sbb
adc
icebp
adc
jne
nop
jns
scas
cdq
add
bound
mov
jmp
cmp
prefetcht2
xchg
sub
dec
jmp
lods
jle
cmp
cmc
or
popf
jmp
(bad)
sub
shr
mov
fldpi
xor
clc
dec
mov
jmp
popf
test
adc
imul
add
cmps
or
js
add
lea
shr
add
mov
mov
pop
arpl
or
mov
paddb
sti
mov
lea
push
shl
add
mov
inc
enter
add
add
inc
fadd
inc
(bad)
mov
inc
enter
popf
push
adc
pop
jmp
dec
adc
cmp
xor
lea
xchg
adc
add
add
test
cmp
xlat
add
test
aas
pop
in
fist
mov
cmps
add
mov
add
ss
inc
xor
or
arpl
xor
fadd
cmp
ins
push
scas
div
ret
pop
pusha
fstp
or
inc
xchg
hlt
pushf
js
dec
mov
pop
push
retf
test
cwde
mov
outs
and
loopne
cmp
inc
add
mov
push
sub
and
test
fwait
ret
iret
or
or
jns
aaa
fs
xor
scas
ror
push
shr
xor
add
inc
in
xor
xor
inc
stos
pop
sbb
or
pusha
lods
daa
fcom
adc
scas
add
sbb
push
mov
mov
mov
xor
inc
in
mov
mov
rol
addr16
pop
push
ret
xor
sbb
stos
scas
cmp
push
or
or
jp
add
push
fucomp
mov
dec
call
test
and
pushf
repnz
fwait
jmp
fs
repnz
rcl
pop
fs
jo
jecxz
adc
enter
push
ret
ins
and
jle
xchg
lods
mov
inc
(bad)
xor
pop
ds
cmp
je
fsub
mov
dec
or
stc
mov
pop
sub
lds
or
test
(bad)
and
push
jne
jecxz
push
mov
inc
mov
push
shl
mov
xor
or
fcomi
loopne
jmp
push
adc
jnp
sbb
sbb
dec
sub
(bad)
call
sete
and
mov
imul
les
cmp
sub
push
jmp
mul
sahf
xchg
fist
inc
cs
pushf
jmp
je
push
push
loopne
jmp
mov
int
sub
jmp
sub
out
je
and
add
pop
fidiv
mov
lods
cli
lea
test
mov
sbb
out
inc
(bad)
add
lods
or
pop
jo
pop
xchg
cmp
aad
popa
add
ret
or
ret
cwde
out
mov
inc
shr
sub
jo
and
push
pop
add
inc
mov
outs
ffree
push
or
ret
jmp
mov
jecxz
add
sbb
cmp
mov
mov
or
push
pop
shl
push
add
lods
jne
add
and
inc
int3
push
ret
outs
mov
mov
clc
mov
call
cdq
jmp
cmp
jae
inc
or
jmp
add
lea
push
push
jnp
dec
mov
push
add
jne
inc
call
jnp
xor
test
call
dec
jmp
daa
and
not
fwait
sub
and
(bad)
dec
mov
mov
repnz
push
inc
push
aaa
push
jge
call
(bad)
inc
mov
pusha
test
dec
mov
inc
mov
cmp
js
mov
jg
adc
mov
loopne
pushf
inc
and
or
push
push
loopne
aam
hlt
(bad)
push
xchg
xor
test
sahf
in
add
cmp
pop
and
mov
pop
push
xor
cmp
cmp
mov
cmp
push
stos
stc
movs
xchg
fistp
jecxz
or
pop
or
push
push
(bad)
cld
lea
mov
loopne
jbe
dec
inc
xor
out
mov
in
fcomp
mov
std
ja
xchg
cmp
jl
ss
push
adc
dec
xor
ror
mov
hlt
jbe
and
in
rcr
pusha
xor
lods
enter
push
lea
ror
lock
dec
dec
jb
add
cdq
sub
sub
dec
add
sub
rol
cmp
jge
es
and
lock
es
(bad)
push
push
jl
inc
inc
sti
sbb
cmp
xor
fistp
sbb
cmp
jne
push
adc
mov
shl
jae
mov
cmp
mov
adc
inc
or
dec
enter
or
push
inc
xor
mov
add
push
push
imul
fisttp
scas
xchg
inc
adc
mov
add
inc
es
in
psraw
enter
movs
test
or
jmp
mov
ret
outs
lahf
add
adc
or
enter
mov
mov
mov
sbb
jo
js
rcr
sbb
stos
adc
jae
xor
sub
mov
cmps
adc
cmp
movs
jae
sti
fidiv
cmp
sti
push
shl
sti
dec
inc
sti
lock
add
test
std
sub
std
cmp
push
and
push
xor
pop
jo
pop
outs
dec
in
push
or
jmp
fsincos
clc
cmp
sbb
push
dec
push
fisttp
push
inc
push
mov
push
inc
and
mov
inc
jle
inc
or
sahf
inc
jnp
lock
inc
cmp
in
jg
or
lds
inc
xor
inc
jnp
push
sbb
into
jne
jge
and
ret
cmp
retf
cdq
loop
push
xor
mov
imul
(bad)
cmps
(bad)
int
jne
dec
fs
add
adc
cwde
inc
or
scas
xor
aas
add
add
call
add
push
daa
cmps
sbb
push
int
sub
pop
daa
pop
push
ficom
cmps
cmps
add
adc
faddp
sbb
add
aas
adc
or
jo
xor
cmp
mov
or
fs
and
dec
adc
inc
or
or
mov
mov
shl
or
xchg
inc
cld
and
stos
je
idiv
fsubr
sub
fs
mov
rol
push
fwait
pusha
cmp
jl
js
inc
sar
(bad)
ja
fmul
cmp
mov
mov
push
cwde
mov
sbb
cli
mov
jge
inc
jmp
fcmovu
mov
sbb
push
bound
movs
add
fstp
mov
add
out
ficom
ror
cli
sub
(bad)
sbb
daa
xor
std
ret
ja
movs
sbb
sbb
add
add
les
jp
nop
inc
lods
push
adc
movs
mov
or
add
push
inc
scas
or
dec
or
xor
push
inc
inc
inc
push
dec
lock
or
push
cmp
xchg
(bad)
mov
cmp
pop
sub
in
mov
aam
cmp
jbe
or
add
jmp
mov
loope
or
and
or
cli
mov
sbb
push
lock
push
and
(bad)
out
add
dec
je
add
jmp
(bad)
xchg
jmp
nop
pop
mov
test
mov
jmp
cmp
add
mov
mov
test
and
push
mov
cld
add
call
adc
inc
jo
mov
je
add
sub
and
aam
or
(bad)
loopne
mov
xchg
xchg
mov
sbb
cmp
cmp
mov
cmp
jae
cmp
in
jp
push
rol
sti
cdq
mov
sub
imul
movs
clc
jmp
fidivr
cld
les
adc
repnz
add
jge
push
adc
mov
sub
sbb
dec
xor
xor
outs
cmp
xor
sbb
mov
in
ror
jne
mov
dec
xchg
push
shr
adc
xor
pop
dec
test
and
adc
out
sar
mov
mov
data16
in
fnsave
xor
out
aaa
inc
out
xchg
je
pop
test
pusha
lea
xor
mov
sub
aas
adc
jo
add
jb
sub
loopne
xchg
mov
jl
lock
push
jl
push
leave
div
js
test
cmp
ret
xor
and
dec
xchg
and
mov
mov
cmp
test
push
xchg
iret
ret
imul
sub
mov
cwde
and
call
std
mov
xchg
(bad)
das
push
push
mov
(bad)
or
retf
je
push
jo
test
fs
ins
jo
inc
pop
lea
and
retf
sbb
cmp
push
adc
fwait
add
pop
mov
push
xchg
sbb
pusha
push
test
sbb
jae
imul
push
mov
inc
jl
retf
es
cmp
pop
ja
imul
mov
hlt
push
sbb
or
cmps
or
stos
(bad)
pop
(bad)
sbb
repnz
mov
test
jle
out
(bad)
adc
jecxz
add
rol
jne
push
repz
cmp
xchg
fstp
clc
mov
lea
arpl
cs
jb
and
(bad)
mov
sbb
lahf
jo
fdiv
stos
xor
mov
cmp
(bad)
add
xor
mov
adc
push
xchg
add
adc
jg
inc
repnz
cmp
push
retf
and
dec
lahf
push
pop
mov
dec
mov
mov
push
or
mov
xchg
loopne
xor
mov
nop
sbb
and
idiv
adc
mov
pop
sbb
pushf
mov
push
mov
pop
or
(bad)
pop
js
dec
push
adc
push
jo
ror
mov
lock
jne
lds
push
inc
pop
jns
(bad)
jno
lfs
adc
pop
pusha
hlt
add
stos
jge
inc
sub
fdivrp
jmp
test
adc
dec
enter
out
sbb
and
xor
sub
gs
cwde
and
retf
pop
or
fld
mov
push
iret
cs
sbb
adc
movs
push
cmp
push
sbb
lock
enter
bnd
rol
and
shr
push
cmp
jmp
cmp
jb
das
rcr
ret
sbb
jns
mov
jmp
adc
dec
xor
xor
jg
inc
psubw
aam
inc
adc
into
mov
add
adc
cmp
lock
loope
add
add
or
or
inc
pusha
aam
jp
xchg
js
inc
dec
adc
jl
test
sub
js
lock
je
mov
add
jo
and
sbb
cmp
(bad)
or
jmp
ja
hlt
xchg
into
jge
pusha
ja
out
sbb
adc
imul
retf
(bad)
cdq
ret
mov
mov
mov
push
mov
jno
fs
cld
dec
mov
mov
(bad)
fs
outs
mov
mov
add
je
xor
pop
and
retf
rcl
lds
xor
inc
loopne
stos
mov
pop
sahf
dec
sbb
dec
add
icebp
inc
rol
jg
jmp
push
mov
add
cmc
out
pusha
add
out
fadd
jecxz
add
mov
sbb
dec
popf
cwde
ret
out
loope
pop
sti
or
or
push
mov
sbb
add
or
mov
ror
mov
xchg
push
sbb
imul
inc
xchg
ret
adc
mov
fcom
das
sbb
mov
mov
int
or
retf
push
or
stos
cmp
mov
or
push
(bad)
jg
and
fbstp
cmp
xchg
sbb
xor
jle
cmp
pop
inc
sub
sub
shl
ins
sti
mov
inc
sbb
inc
in
jb
movs
inc
jmp
pop
lods
add
add
sbb
mov
xchg
loopne
test
scas
and
mov
sbb
xor
inc
ret
or
lock
mov
or
cmp
jae
lods
mov
lock
mov
inc
hlt
push
add
xor
outs
jb
add
and
push
xchg
sar
mov
mov
add
retf
and
aas
xchg
or
aas
sbb
rcr
xor
adc
sar
pop
adc
inc
or
in
cmp
mov
push
dec
inc
mov
push
fnsetpm(287
mov
call
sbb
xor
or
or
aam
push
stos
and
add
dec
ror
sbb
adc
pusha
hlt
ds
add
sbb
retf
test
inc
jle
shl
popf
sbb
pop
inc
push
pop
fdiv
sub
ret
push
inc
cs
js
pop
inc
xor
test
pop
xchg
enter
mov
or
data16
pop
adc
test
push
mov
push
movzx
pop
mov
sub
mov
in
sti
jp
pop
push
xor
test
push
sub
sbb
loopne
nop
or
and
add
fsub
adc
outs
call
in
ja
dec
or
pusha
pop
push
inc
int3
inc
stos
inc
shr
add
aas
mov
js
cmp
pop
mov
push
mov
mov
add
inc
inc
sbb
adc
xchg
int3
ja
dec
push
das
lock
cmp
mov
mov
lods
inc
cs
mov
dec
pushf
cmp
mov
xor
rcl
cld
mov
fidiv
call
retf
push
add
jmp
lock
mov
adc
inc
test
push
dec
shl
add
add
or
jmp
add
pusha
xchg
jl
imul
test
sub
je
in
pop
add
sub
je
xor
loopne
adc
test
test
jmp
xor
ins
ret
shl
or
cmp
jg
into
inc
or
sub
add
(bad)
loopne
mov
inc
dec
mov
jne
or
mov
(bad)
mov
push
dec
mov
inc
cmp
mov
add
mov
dec
inc
sub
mov
pop
call
cmps
and
ins
pop
dec
mov
add
sub
mov
lods
out
add
dec
jge
inc
iret
hlt
movs
push
or
clc
push
dec
mov
sub
jle
push
clc
hlt
cld
pop
fs
xor
cli
dec
mov
adc
adc
clc
inc
xor
jl
inc
test
and
inc
dec
dec
mov
movs
xchg
add
cmp
int3
pop
inc
push
mov
retf
into
in
cmps
push
jmp
dec
push
mov
push
movs
dec
clc
cwde
ret
jbe
std
sbb
scas
dec
or
ror
pop
dec
mov
outs
(bad)
call
dec
into
push
call
inc
cmps
sub
rol
mov
jns
add
enter
repz
sbb
mov
cdq
div
mov
push
jbe
ja
push
int
jb
jb
inc
imul
rol
retf
adc
mov
add
jp
jge
inc
aam
in
push
adc
sbb
pushf
add
pop
fs
mov
add
adc
mov
int3
dec
int3
js
gs
aam
and
ss
scas
adc
aam
push
jle
cmp
jge
shl
call
std
pop
mov
or
mov
add
inc
inc
push
jl
add
call
add
pushf
shr
jge
sbb
(bad)
shl
add
fadd
xor
call
pusha
shl
lea
inc
fsub
jp
jg
sbb
sub
out
or
cdq
push
cmp
mov
mov
add
ret
jo
dec
mov
add
cld
push
mov
or
or
arpl
cvtdq2ps
mov
gs
xchg
ins
sub
add
dec
test
jecxz
mov
test
jo
mov
fdivr
je
xchg
and
adc
cmp
test
jbe
jae
xchg
cmp
fild
fld
icebp
add
sti
mov
and
inc
cmp
call
adc
inc
ret
clc
jg
inc
cmp
sub
sub
daa
inc
add
inc
test
mov
enter
inc
call
mov
cmp
jbe
add
adc
jae
inc
sub
scas
clc
pusha
xlat
sbb
or
pusha
fiadd
mov
inc
addr16
ret
popa
jb
inc
cdq
add
je
ins
xchg
loopne
adc
aam
fsub
aam
icebp
dec
lea
or
popa
push
inc
js
push
adc
mov
pop
out
jmp
add
add
xchg
sub
dec
dec
loopne
adc
mov
shl
adc
mov
jae
cmps
cs
xor
add
sbb
test
and
idiv
adc
add
jle
cmp
or
or
push
cdq
dec
loopne
adc
inc
xchg
jno
add
outs
mov
xor
in
mov
inc
mov
inc
mov
mov
pop
(bad)
aad
or
lock
sub
mov
lods
jmp
inc
add
sbb
and
and
or
sbb
push
pop
call
dec
and
loopne
sub
xchg
add
inc
cdq
add
inc
sbb
add
push
ror
xor
xor
mov
dec
jmp
mov
rcr
mov
popa
dec
inc
add
cmp
fadd
js
cmp
jg
in
push
daa
int3
add
xor
adc
fmul
dec
jmp
and
and
inc
push
inc
sbb
mov
js
adc
sbb
adc
xor
test
cs
rcl
push
xor
(bad)
cld
xor
inc
ficomp
and
fsubr
sbb
mov
inc
ds
sbb
sbb
dec
mov
imul
or
push
xor
xor
repz
or
push
mov
lods
sbb
add
or
push
jo
or
add
hlt
inc
or
mov
ret
fmul
push
aam
add
mov
mov
jo
cwde
(bad)
sti
ja
stos
fisubr
enter
add
es
or
sbb
inc
je
ret
add
pushf
and
sbb
aas
sub
adc
(bad)
jp
or
rol
jg
and
push
mov
inc
mov
jo
or
in
int3
or
test
jno
add
or
jge
mov
and
jnp
xor
jge
sub
ss
or
jne
dec
out
fwait
test
jp
mov
mov
ror
les
mov
dec
cmp
sbb
pop
mov
pusha
jp
jne
fxch
call
lods
dec
shl
popf
sub
andps
(bad)
loopne
(bad)
jmp
sbb
lds
rcr
jle
leave
test
jne
jae
or
int
jbe
scas
push
jo
and
and
and
add
dec
jl
or
cs
cli
adc
and
inc
push
add
cmp
and
(bad)
pop
push
cmp
push
pop
ds
xor
ror
dec
in
(bad)
mov
pop
adc
sti
add
or
cwde
jno
push
cwde
dec
xor
add
imul
pop
fnstenv
(bad)
jnp
lods
dec
cdq
dec
xchg
adc
or
xor
cmp
aad
sar
lock
sub
add
idiv
aas
add
movzx
movsx
add
mov
xor
retf
adc
mov
inc
leave
add
das
cli
cmp
jl
ret
outs
ret
sbb
cld
ret
jo
popa
dec
xchg
pushf
call
and
in
cmp
pop
mov
jo
loopne
add
lods
push
inc
rol
cmp
fcmovnu
adc
sbb
paddusb
fmul
cmp
add
or
sti
or
cmp
in
sbb
inc
adc
push
mov
or
pop
xor
imul
push
in
pop
push
pushf
or
push
inc
add
les
aas
xchg
or
add
add
xor
add
rol
rol
xor
or
scas
fdiv
sub
jge
mov
xchg
call
push
rcr
mov
xor
and
or
or
push
sahf
ror
lock
adc
in
inc
fs
or
pop
aaa
pop
ja
loopne
jb
mov
mov
neg
(bad)
sar
add
cmp
jg
jle
pop
or
sub
loope
and
xor
add
xor
jge
xor
push
mov
mov
out
xor
add
and
ret
inc
pusha
cmps
sbb
inc
or
inc
cmps
inc
or
adc
mov
fld
mov
sub
and
cmp
das
fmul
das
fmul
in
or
cmp
addr16
popf
test
test
sub
push
pop
test
das
pusha
lock
sub
push
mov
ret
sub
int
dec
sub
rcr
mov
push
fstp
fldz
fadd
and
int3
add
sbb
add
push
or
cmp
adc
shl
adc
test
aaa
imul
mov
jmp
sahf
das
mov
out
aad
xchg
adc
and
in
push
bound
or
sbb
in
into
sbb
fidiv
pop
js
cmp
cmp
lea
call
push
add
or
dec
adc
cmp
jl
mov
mov
sub
mov
pavgb
mov
or
or
pusha
bound
xchg
ret
cmp
and
push
and
mov
or
jl
fidivr
adc
shl
dec
pop
xlat
push
and
add
push
test
aaa
in
adc
mov
mov
cmp
pop
or
xor
lea
nop
or
or
(bad)
jnp
or
cs
mov
or
jp
push
or
push
xor
scas
adc
push
or
mov
mov
cwde
mov
cmp
adc
xchg
cmp
push
adc
mov
add
pop
jo
in
inc
inc
inc
xor
es
outs
adc
adc
mov
lea
cmp
push
jle
dec
ror
clc
adc
(bad)
adc
or
mov
ret
cwde
push
cwde
unpckhps
dec
cmp
cmp
(bad)
pop
and
adc
sub
and
push
or
sbb
call
jmp
adc
inc
int
xor
mov
jbe
dec
jp
stos
das
sahf
mov
mov
test
xor
imul
rcr
shl
dec
add
mov
xchg
and
sub
shl
or
cmp
dec
mov
sar
and
into
cmps
push
ins
inc
mov
inc
jne
mov
push
add
mov
cmp
out
sbb
sub
in
add
jge
fidiv
jne
mov
clc
fdivr
adc
pop
or
add
cmp
rcr
lock
push
nop
stos
sbb
movsx
jne
mov
addr16
jp
(bad)
call
jg
sbb
pop
fisttp
inc
(bad)
ja
xchg
mov
add
inc
cmp
imul
add
clc
jne
push
add
push
add
in
adc
push
xor
ret
cmp
je
inc
xchg
sbb
jbe
pop
test
mov
and
push
sub
(bad)
pusha
js
xchg
fsub
sbb
inc
jg
(bad)
pusha
bound
hlt
(bad)
sub
ret
stos
lahf
jle
adc
push
and
aas
mov
jmp
cmp
cmp
(bad)
jl
loopne
push
xor
jmp
push
sti
pop
cmp
jne
ins
and
or
mov
scas
or
or
inc
adc
rcl
adc
jmp
retf
push
dec
std
ret
clc
mov
call
cmps
mov
mov
or
test
sub
xchg
repz
mov
sub
lea
and
ins
or
jge
neg
call
adc
pop
inc
call
jle
cmp
jle
jmp
pop
push
jmp
push
mov
div
fistp
repnz
inc
pop
add
in
sub
jb
mov
cmp
inc
cwde
or
push
xor
or
adc
push
cmp
loopne
mov
pushf
dec
pop
xor
lock
dec
leave
sbb
loope
mov
(bad)
in
jnp
cwde
dec
cmp
push
inc
add
push
loop
adc
mov
push
push
xchg
jbe
dec
jmp
sub
mov
add
movs
test
inc
mov
pop
cwde
sti
punpckhbw
js
mov
or
xor
inc
fadd
(bad)
in
scas
cmp
mov
div
loop
push
inc
add
in
adc
neg
je
shl
dec
cmp
jno
not
xor
dec
pop
or
mov
inc
jmp
int
or
call
jle
mov
mov
xlat
add
sub
cmps
enter
inc
shr
mov
or
sub
jae
pop
sbb
ret
add
jns
and
push
push
test
add
sbb
test
ret
cmp
cmp
adc
shl
push
popf
inc
mov
push
adc
data16
push
sbb
div
cmps
pop
inc
sahf
arpl
mov
fcomp
mov
scas
inc
jbe
cli
sahf
mov
inc
enter
clc
jmp
mov
rol
mov
xor
cli
sbb
movsx
inc
int3
stos
add
mov
scas
push
sbb
test
fwait
cmps
add
test
lods
jge
arpl
xor
xor
dec
and
mov
movs
cmovg
out
js
into
push
xlat
push
retf
push
test
jo
(bad)
mov
cs
(bad)
std
jo
js
dec
movs
or
push
out
lds
add
pop
cwde
into
rcr
add
test
push
ret
mov
mov
mov
lods
jle
jae
and
mov
cmp
mov
or
test
add
pushf
ja
sbb
mov
int3
in
clc
ror
xor
jne
inc
or
fldpi
sub
enter
out
sub
aad
ret
dec
mov
push
mov
clc
fstp
popa
jle
mov
xor
mov
jns
fwait
clc
or
jb
jbe
cmp
mov
jmp
jne
or
icebp
or
xchg
adc
pop
enter
jecxz
mov
jecxz
jge
adc
jmp
sub
mov
adc
mov
mov
dec
rol
call
ret
inc
mov
ror
dec
adc
retf
(bad)
dec
rcl
add
cmp
push
or
icebp
adc
(bad)
retf
js
or
bnd
std
retf
and
or
add
or
clc
aaa
add
(bad)
lock
idiv
jl
pop
jmp
or
aas
sub
adc
(bad)
inc
and
call
mov
retf
(bad)
xlat
adc
or
add
mov
ins
sub
enter
adc
mov
lea
xor
test
fisttp
movs
fs
inc
movs
add
jecxz
scas
call
push
into
adc
mov
retf
dec
sub
retf
mov
fisubr
xlat
sub
lods
push
dec
push
mov
stos
and
push
add
mov
push
dec
push
mov
js
sub
sub
sub
dec
sbb
sub
scas
xor
sub
or
leave
cmc
jmp
cmp
cmp
add
xor
add
pushf
aaa
jl
cmps
out
sub
add
out
push
add
cli
adc
std
idiv
add
add
sar
adc
les
jmp
add
lea
ins
dec
sbb
shl
sub
add
sar
sti
mov
outs
jg
les
sar
cmp
sub
cmps
lea
lods
jp
xor
sub
mov
push
adc
mov
lock
sbb
sbb
and
aam
push
fdiv
adc
(bad)
lock
cmc
loope
push
cwde
loopne
cmp
fidiv
mov
cdq
and
gs
nop
mov
mov
fwait
xor
dec
js
push
pusha
add
sbb
popa
inc
xor
inc
mov
rol
movs
dec
pusha
jae
push
push
add
jns
xchg
or
into
mov
sbb
adc
fadd
fstp
push
(bad)
fisub
xor
inc
add
sbb
add
xlat
movs
bound
inc
or
adc
or
mov
or
adc
or
mov
cmp
cld
adc
in
push
js
fs
mov
div
push
int3
pop
cs
sub
xlat
lods
fldcw
sbb
sub
pop
test
sub
xchg
cli
sub
or
xor
sbb
adc
adc
int3
loopne
les
adc
sub
push
rcr
xchg
ror
int
sahf
or
add
pop
movs
imul
cmp
mov
cmp
je
cmp
sbb
mov
fnstenv
push
push
inc
sahf
pop
dec
pushf
cmp
dec
cs
add
sub
pushf
mov
inc
sub
das
add
sub
and
leave
push
nop
pusha
jno
inc
sub
loope
repz
lds
sbb
fadd
iret
sbb
sbb
adc
cmp
push
adc
mov
ficomp
mov
sub
sub
xchg
rcl
sub
das
das
call
add
ins
cmp
(bad)
push
add
aas
adc
mov
aas
jne
cmps
aas
das
in
mov
mov
pop
popa
movs
and
shl
or
movs
shr
push
push
je
ror
int3
out
call
in
add
push
inc
or
daa
cli
je
sbb
or
test
idiv
push
stos
shl
adc
not
nop
out
push
add
ds
fistp
xchg
in
mov
pop
mov
xor
adc
call
test
scas
cmp
imul
popa
ret
test
out
daa
or
std
jmp
lea
pop
push
movs
pop
aas
or
ror
cmp
fs
add
sbb
xor
in
push
push
cmp
sub
cmp
push
jmp
inc
(bad)
xchg
cld
add
test
sub
add
lods
inc
(bad)
sar
pop
mov
mov
fsubr
pop
or
sbb
sbb
xor
jge
xor
pop
add
ret
pop
sub
push
fs
or
mov
mov
call
lock
mov
push
add
dec
loopne
mov
mov
or
mov
mov
and
(bad)
lahf
push
je
test
clc
inc
jmp
call
inc
mov
add
add
icebp
inc
inc
sub
mov
push
pop
push
mov
mov
aas
sub
jmp
lea
fild
xor
or
dec
call
add
(bad)
aad
jp
(bad)
jg
stos
jne
stc
add
fiadd
pop
sbb
add
cwde
jg
mov
mov
jle
jmp
mov
int
or
fmul
sub
xor
jns
jge
neg
adc
jne
jg
mov
iret
inc
or
or
pop
jl
in
mov
cmp
adc
or
fadd
out
fadd
lods
jl
in
add
lds
retf
xchg
push
push
retf
pop
cmps
sahf
call
iret
ret
setl
ret
adc
add
xabort
mov
aam
repnz
imul
sbb
test
push
fld
mov
push
fldenv
jae
es
test
adc
rol
and
or
in
push
inc
adc
xchg
inc
movs
outs
mov
int3
aaa
pop
sub
or
dec
or
jo
xchg
xchg
in
push
dec
aam
mov
imul
inc
xlat
mov
cdq
add
lods
aaa
mov
and
jnp
mov
mov
xor
loop
pop
add
push
inc
dec
or
jle
xor
jo
pop
test
aam
lock
xchg
sar
push
jmp
pop
jg
mov
shl
cmps
adc
sbb
jmp
shl
sub
lds
inc
ret
mov
lds
and
add
cmp
sub
loopne
inc
hlt
aaa
out
(bad)
loopne
push
fstp
arpl
push
pusha
imul
mov
out
aad
xor
arpl
dec
daa
and
in
or
and
(bad)
or
cmp
adc
cmp
and
(bad)
js
jle
jbe
pop
mov
push
(bad)
in
jne
mov
push
rep
pop
mov
cmp
push
fisub
pop
enter
and
mov
adc
xor
or
retf
mov
lea
call
pop
mov
test
mov
out
xchg
lea
dec
mov
sbb
mov
add
dec
aad
sbb
jl
push
add
setge
stos
test
xor
lods
jae
jge
push
loope
adc
in
(bad)
add
push
adc
mov
cmc
pop
xchg
inc
and
sub
mov
ss
cld
sub
mov
imul
lsl
movs
pop
sbb
jo
push
call
xor
add
sub
adc
mov
lea
aam
(bad)
or
sahf
xchg
jns
and
push
push
sbb
jge
sbb
sar
add
mov
rol
inc
adc
mov
stos
jmp
add
add
inc
test
push
inc
cmp
test
aam
pop
ins
retf
shl
repz
mov
shr
inc
jmp
cdq
loop
pop
lahf
pop
call
cmp
mov
adc
xor
test
adc
inc
inc
add
mov
lock
rcl
jb
lds
lea
loope
push
shl
xchg
dec
mov
sub
and
xor
dec
sbb
mov
push
(bad)
jnp
fiadd
mov
sahf
test
push
push
xchg
or
ss
cmp
sub
add
lea
push
mov
fisttp
mov
sbb
cmp
pop
mov
scas
retf
mov
daa
cmp
inc
stc
jl
stc
jp
(bad)
fsubr
or
fwait
in
mov
or
(bad)
jl
ret
je
mov
mov
push
loop
sar
not
ss
push
or
add
out
mov
xchg
in
test
cmp
jnp
fimul
loop
out
mov
stos
mov
loopne
call
push
mov
push
cmp
xchg
pushf
push
push
adc
daa
out
clc
push
or
jecxz
inc
adc
push
cld
mov
cmp
mov
jmp
mov
aaa
dec
add
jmp
dec
dec
cmp
stc
add
inc
add
pop
(bad)
movzx
movs
fimul
add
jg
cmp
les
dec
dec
cmp
sbb
cmc
les
pop
ret
call
inc
dec
aas
mov
ja
mov
int3
cmp
cmp
push
mov
inc
inc
inc
jl
adc
ret
jle
and
(bad)
fst
js
or
push
cs
das
lock
dec
pop
loop
mov
test
sbb
and
lea
iret
js
enter
jnp
out
push
sbb
adc
dec
(bad)
mov
push
je
(bad)
mov
fistp
ins
(bad)
push
or
popa
stos
push
stos
pop
push
popa
(bad)
icebp
pusha
xchg
shl
mov
jns
adc
push
shl
inc
inc
pop
inc
mov
sub
shr
cmp
cs
fbstp
mov
add
call
push
mov
mov
fdiv
xor
test
push
cwde
cwde
aaa
push
pop
xor
cmp
cmp
pcmpeqw
js
cmp
cmp
jnp
cmp
cmp
jge
jg
cmp
cmp
popa
bound
cmp
cmp
gs
cmp
imul
cmp
outs
push
cmp
cmp
push
push
push
push
fcomip
cmp
push
push
adc
mov
push
dec
pop
dec
jmp
dec
dec
dec
outs
fs
data16
pop
add
daa
aam
sbb
adc
(bad)
inc
dec
pusha
mov
adc
ins
cs
imul
outs
ins
xor
add
test
add
lock
in
xchg
jo
das
mov
push
or
cmps
inc
je
jne
xchg
dec
push
pushf
jge
daa
push
cs
or
mov
cmp
scas
xlat
imul
dec
add
sub
std
aas
clc
andps
ds
outs
je
jb
popa
arpl
jg
push
popa
gs
inc
js
jo
imul
push
rol
(bad)
push
gs
dec
or
pop
mov
(bad)
dec
dec
bound
arpl
in
or
jo
pop
or
inc
fs
sub
mov
xor
push
push
out
addr16
sbb
cli
or
sbb
retf
sbb
cmp
cdq
adc
leave
sub
jo
jns
out
jns
add
pop
outs
aaa
adc
shl
outs
or
jbe
cmps
add
push
sub
push
mov
ja
xlat
mov
ds
add
sub
mov
test
(bad)
add
rcl
sahf
loope
in
sbb
and
inc
dec
ins
jo
loope
xlat
sbb
xor
inc
add
data16
mov
gs
mov
aaa
dec
test
(bad)
lock
push
inc
jb
sbb
add
mov
mov
ror
cmps
pop
movs
mov
add
(bad)
sub
lods
and
cld
xchg
ja
ror
add
bound
scas
dec
in
dec
push
jnp
mov
daa
or
mov
ja
jo
dec
nop
jbe
mov
adc
pop
daa
cld
enter
sbb
pop
fsub
cwde
mov
(bad)
push
and
mov
mov
mov
inc
jo
add
sub
mov
cmp
arpl
enter
push
ja
imul
adc
or
cmp
sbb
cmp
(bad)
sub
loope
fsub
adc
ins
out
add
je
adc
data16
adc
sub
xor
jns
aas
push
dec
and
imul
cmp
test
pop
cdq
mov
lods
mov
retf
aad
jnp
repz
repz
pop
outs
adc
iret
repz
sbb
repz
cmp
popa
push
push
pop
push
addr16
cmp
cs
push
mov
loope
add
sub
sub
call
mov
sbb
add
jmp
jnp
fimul
or
test
test
pop
out
call
add
scas
das
push
add
aaa
std
inc
hlt
cmc
call
test
push
or
jnp
not
cmps
sub
push
push
add
out
neg
or
push
push
push
mov
sub
add
jns
fsave
xor
push
push
pop
pop
jbe
loopne
call
pop
fdiv
imul
sub
je
xor
cli
je
imul
inc
dec
ja
gs
int3
gs
inc
outs
arpl
mov
mov
cdq
xor
jo
movs
or
movs
xchg
sbb
or
inc
daa
call
mov
pop
or
inc
pop
mov
mov
pop
adc
push
xor
test
sub
sar
test
(bad)
mov
push
add
loop
mov
push
loopne
div
cmp
jmp
add
mov
cmp
jno
add
test
ret
movs
add
and
ja
adc
dec
imul
mov
cmp
inc
out
jno
mov
inc
scas
or
cmp
mov
inc
cmps
jnp
pop
fwait
or
push
out
push
mov
lds
push
push
push
fsubr
pop
sub
sub
adc
xor
fadd
cmp
adc
jo
rol
push
adc
pop
sbb
xlat
gs
mov
iret
repz
sub
cmp
repz
pop
imul
jbe
(bad)
pop
test
pop
lea
jns
cmp
les
ds
(bad)
jne
popa
add
pop
push
ret
inc
xor
and
pop
fwait
jecxz
stos
popa
inc
lods
dec
popa
jo
and
mov
mov
adc
cmp
jbe
pop
rcr
int
pop
mov
push
stos
xor
stos
out
inc
nop
add
and
stos
arpl
push
xchg
into
or
jae
fsub
test
dec
adc
cmp
jecxz
mov
lahf
cmp
ja
ja
adc
ja
out
adc
adc
ja
out
daa
out
adc
ja
out
adc
adc
addr16
adc
adc
ja
out
adc
adc
ja
out
mov
cmp
arpl
add
adc
adc
adc
adc
ja
daa
or
addr16
dec
out
(bad)
jp
out
out
adc
adc
adc
(bad)
push
imul
jge
sahf
out
xchg
xchg
fwait
movs
scas
out
sahf
out
ret
int
loope
out
jns
jmp
dec
jbe
push
sbb
daa
xor
inc
dec
jns
neg
push
inc
dec
push
push
sahf
out
imul
bound
or
add
add
das
add
or
imul
jecxz
mov
popa
jb
arpl
inc
sbb
add
inc
fs
jecxz
shl
shl
(bad)
mov
popf
mov
ffree
xor
cmp
and
dec
aam
inc
adc
mov
jns
ins
add
(bad)
out
push
cmp
jns
out
outs
push
push
popa
imul
sahf
out
mov
jns
mov
(bad)
jecxz
mov
add
sahf
neg
push
and
pop
rol
push
cmp
ds
ja
inc
dec
add
fmul
add
and
push
adc
jno
inc
mov
xchg
and
(bad)
push
mov
push
and
out
aad
and
push
and
daa
ins
or
arpl
ss
aaa
pop
cmp
lods
jo
idiv
adc
fs
iret
cmp
mov
adc
lahf
imul
sub
(bad)
mov
shl
in
cmp
cmp
and
add
push
inc
or
add
sahf
push
mov
dec
push
add
pop
push
imul
jge
xchg
fwait
sahf
out
sahf
movs
scas
mov
sahf
out
loope
cmc
dec
xchg
(bad)
out
ficom
push
sbb
cmp
repz
fucom
icebp
iret
repz
sti
add
and
pop
push
inc
dec
cwde
out
(bad)
jmp
mov
jl
and
add
das
add
call
pop
sbb
mov
add
cmps
jge
pop
inc
or
frstor
fwait
push
inc
aam
loope
loope
ja
mov
push
mov
push
loope
mov
div
or
ja
ja
pop
and
adc
adc
out
call
daa
repz
adc
adc
adc
adc
xchg
enter
repz
mov
sbb
repz
pop
and
adc
and
repz
ja
daa
repz
jae
dec
push
psllq
sar
mov
adc
adc
out
cld
push
xor
cmp
pop
cmp
repz
ins
ja
mov
cmp
repz
lahf
test
cmp
(bad)
rcr
in
stc
repz
cmp
pop
and
iret
repz
push
or
adc
sbb
repz
inc
cmc
ds
mov
aaa
in
fisub
push
loopne
add
jns
jae
das
add
xor
push
movs
and
mov
js
gs
mov
push
in
into
and
push
mov
or
adc
push
out
jecxz
in
jns
pop
cmp
push
inc
or
adc
sbb
daa
xor
inc
dec
sahf
out
sahf
pop
arpl
or
mov
(bad)
shl
ret
je
out
int
loope
and
clc
outs
aas
xchg
push
cld
pop
mov
add
sub
add
push
aas
and
fld
outs
fild
ja
mov
and
inc
inc
inc
shl
mov
adc
xchg
dec
in
pop
adc
pop
sbb
pop
cmp
inc
out
jecxz
pop
ja
adc
xchg
enter
pop
adc
in
pop
daa
pop
adc
jb
das
xchg
pop
adc
and
pop
adc
jp
pop
adc
xor
mov
(bad)
pop
arpl
pop
xchg
enter
pop
adc
jp
pop
and
pop
ja
(bad)
cmp
pop
dec
pop
mov
pop
adc
pop
ds
pop
adc
ja
cmp
fwait
mov
sar
jns
aad
jmp
out
pop
push
adc
sbb
jns
inc
dec
push
popa
fidivr
out
jne
push
outs
pop
push
addr16
out
jno
test
out
addr16
out
test
add
mov
cmp
rcl
das
add
push
cmp
addr16
daa
push
loope
inc
inc
push
inc
push
js
fmul
add
sub
pop
mov
jo
xor
pop
adc
sar
mov
addr16
cmp
sbb
outs
adc
inc
mov
jb
mov
retf
or
movs
out
push
jns
rol
push
pop
arpl
jns
out
or
mov
sahf
out
in
stc
add
jnp
pop
and
adc
sbb
out
cmp
jmp
daa
jl
or
push
enter
mov
pop
xchg
mov
fld
xchg
push
daa
(bad)
retf
jecxz
mov
lea
add
js
jb
sub
xor
or
outs
and
cs
add
dec
or
outs
pop
hlt
fdiv
or
push
jns
gs
ret
and
jl
pop
xor
ds
push
or
push
fild
shl
(bad)
(bad)
inc
add
xchg
or
shl
sbb
adc
sahf
push
and
sub
dec
push
out
sahf
out
imul
sahf
xchg
fwait
movs
scas
mov
jns
xlat
loope
cmc
fdivr
lds
(bad)
mov
push
and
mov
jmp
xor
cmp
scas
sbb
inc
add
fmul
add
push
pop
ror
xchg
sub
mov
pop
sub
es
sbb
push
ins
xchg
pop
pop
retf
jo
fdiv
dec
adc
mov
sbb
dec
ret
adc
repz
fild
fwait
adc
sahf
out
faddp
push
retf
aad
jmp
jns
pop
inc
adc
sbb
das
cmp
push
popa
jns
out
imul
xchg
test
jns
cdq
jle
push
lods
arpl
lahf
and
pop
lock
adc
ss
push
fiadd
add
pop
das
adc
push
pop
or
jmp
sbb
(bad)
jns
pop
and
retf
adc
ds
cmp
and
or
mov
scas
test
adc
push
sbb
jns
jge
adc
push
xor
sahf
dec
push
pop
addr16
jns
out
test
jns
out
ror
fbld
repz
pop
in
test
mov
pop
xchg
and
or
sub
scas
jae
push
add
add
push
mov
pop
mov
adc
gs
outs
arpl
mov
xor
or
aaa
ror
int3
shl
adc
pop
ins
sub
push
jns
iret
jnp
push
jnp
test
push
xchg
out
sahf
out
stos
mov
leave
sahf
out
sahf
rcr
out
sti
add
outs
clts
sbb
sub
sahf
inc
dec
push
pop
gs
outs
mov
jns
out
mov
inc
mov
pop
into
fnsave
mov
inc
(bad)
jne
jle
fistp
dec
jb
xchg
jae
js
dec
outs
jae
jb
or
inc
push
xor
xor
sti
aam
mov
adc
ds
call
add
gs
mov
or
xor
or
adc
sahf
out
push
xor
inc
dec
sahf
out
sahf
pop
arpl
or
mov
(bad)
rcr
in
mov
sub
pop
and
mov
adc
sbb
mov
out
fsub
add
push
add
add
in
mov
ror
add
outs
or
popa
addr16
iret
inc
in
lods
pop
cmp
xor
or
pop
mov
pop
sbb
sbb
xor
xlat
mov
xor
repz
jae
jge
mov
inc
add
mov
and
pop
xor
ficom
fsub
add
push
add
inc
xlat
(bad)
ds
push
inc
ret
or
lahf
out
in
rcr
push
fsub
add
ror
push
je
gs
mov
and
adc
inc
mov
pushf
test
inc
inc
jbe
dec
popa
pop
ins
pop
in
rcr
sbb
into
sub
inc
fdivrp
out
add
inc
jb
popa
je
loopne
adc
sbb
xor
sbb
ins
data16
pop
lods
mov
fild
adc
jns
xor
jecxz
or
or
and
lahf
xchg
mov
pop
repz
in
jbe
and
daa
inc
adc
sbb
lea
adc
pop
loopne
push
imul
push
ret
pop
pop
adc
pop
or
jne
pop
dec
adc
adc
pop
mov
neg
adc
adc
add
in
add
shl
outs
pop
mov
adc
pop
pop
add
mov
adc
ret
xor
sbb
pop
mov
fist
fist
fcmovne
mov
div
dec
push
cmps
adc
adc
add
rol
pop
arpl
mov
mov
dec
dec
push
test
popf
add
adc
push
loopne
je
push
adc
adc
push
mov
pop
aad
mov
mov
dec
popa
fild
lods
adc
arpl
add
add
add
add
add
add
add
add
add
add
add
add
in
jge
arpl
mov
sar
mov
mov
sar
mov
mov
call
daa
daa
dec
fadd
pushf
add
ja
push
imul
adc
not
mov
push
retf
jno
out
sahf
out
(bad)
cdq
mov
sar
sbb
push
fild
jns
jns
jmp
adc
sbb
jns
out
das
cmps
mov
sahf
out
sahf
push
popa
imul
cmps
(bad)
out
xchg
popf
pop
pop
jbe
jns
adc
push
lea
mov
sahf
out
sahf
rcr
out
sti
add
jbe
push
sbb
sub
sahf
inc
dec
push
(bad)
push
(bad)
jnp
out
in
test
jns
out
pop
sub
cmp
out
pop
outs
fadd
test
hlt
add
push
jl
jmp
in
es
icebp
aaa
movs
pop
out
push
sbb
aaa
fcomp
adc
add
scas
loope
or
add
and
mov
or
nop
mov
out
push
add
add
add
ja
inc
and
or
idiv
add
in
adc
add
out
pop
xor
sub
test
retf
and
add
pop
ins
das
or
enter
push
push
pop
mov
mov
cmps
sbb
cmps
js
mov
push
add
xchg
xor
cmp
fimul
and
dec
ins
jo
sub
inc
popa
arpl
jns
sbb
adc
or
push
add
adc
or
mov
sub
out
or
gs
jb
jo
enter
or
xor
sub
in
xor
fsub
and
or
pop
xchg
(bad)
iret
push
and
sub
jno
in
gs
jns
xor
adc
inc
sub
ret
int3
jle
add
popa
and
add
and
dec
ficom
sub
imul
add
(bad)
and
fcom
(bad)
fcomp
mov
xor
int
ss
sub
or
add
ret
push
cmps
add
loopne
mov
pop
aam
repnz
(bad)
test
sbb
sbb
loope
push
add
pop
neg
or
inc
pop
and
nop
rdmsr
sbb
fdivr
jns
fs
cmp
jge
inc
fnstcw
ins
dec
call
jg
xor
outs
inc
ins
popa
jae
add
sbb
jbe
adc
or
imul
imul
push
inc
fs
lods
imul
jg
sbb
or
inc
jecxz
ret
xor
cmps
sub
imul
jo
lods
inc
js
ror
pop
sbb
push
cli
ror
push
mov
add
push
mov
mov
mov
repz
xor
push
push
xor
cmp
cmp
jge
in
ds
adc
dec
retf
clc
mov
neg
mov
sub
fmul
sub
fucomi
out
loopne
ret
xchg
mov
pop
adc
pop
pop
pop
cwde
adc
jge
jle
scas
xchg
iret
jo
mov
lock
sub
mov
pop
ret
push
push
push
mov
mov
mov
cwde
mov
iret
sub
sub
lock
pop
pop
ret
nop
add
xchg
xlat
dec
aam
sub
inc
or
mov
add
pop
test
mov
jne
lea
mov
mov
pusha
xchg
add
out
pop
lahf
data16
out
sar
out
mov
aaa
loope
mov
call
fwait
call
fwait
stos
mov
add
adc
lods
mov
daa
daa
enter
daa
icebp
out
xor
push
out
mov
enter
ins
mov
fld
and
mov
sti
loopne
sbb
jp
cwde
mov
push
mov
jae
rcl
test
add
cmp
aas
mov
and
outs
mov
push
inc
test
scas
xor
outs
lock
pop
mov
inc
lods
outs
xor
out
sbb
cld
push
lea
sub
add
adc
mov
pop
test
je
and
call
add
sbb
pop
jnp
sbb
clc
push
aam
push
(bad)
lods
popa
sbb
push
icebp
xor
adc
pop
add
xchg
(bad)
and
pop
xchg
or
cmp
int3
push
cld
inc
jo
pop
pop
xor
jmp
or
rcl
lock
or
push
shl
pop
ror
cmp
add
adc
outs
add
sti
out
jnp
xchg
mov
or
jge
mov
fwait
cdq
mov
jae
sbb
int
mov
or
inc
adc
arpl
jb
add
call
push
jne
inc
push
outs
jbe
xor
and
dec
push
add
inc
or
mov
scas
mov
xor
and
push
pop
dec
xlat
mov
mov
out
sbb
xchg
inc
or
sbb
dec
xchg
std
stos
call
addr16
addr16
fidiv
addr16
sbb
pop
sbb
fcom
push
in
inc
in
nop
mov
(bad)
mov
jnp
and
mov
xlat
pop
fcom
push
inc
xchg
xchg
ret
cmp
aam
fstp
stos
call
pop
cmp
or
mov
and
adc
sbb
mov
rcl
and
cmp
in
xlat
out
sub
sbb
mov
lds
mov
push
popa
cmp
xchg
mov
cmp
pop
push
arpl
push
cmp
cld
push
test
aam
add
jge
mov
mov
popa
adc
push
xor
add
inc
sbb
shl
and
add
push
ss
sti
jno
loop
sbb
push
jmp
or
and
nop
std
add
jne
repz
sub
push
cmp
xchg
imul
cmp
xor
lea
mov
enter
mov
dec
xchg
jle
sbb
outs
test
or
and
iret
jae
sub
adc
mov
adc
xor
mov
cmp
enter
inc
and
adc
sub
jg
jg
lds
jg
lds
xor
or
dec
mov
fcom
xlat
or
jl
cmp
or
jmp
pop
nop
movs
add
dec
jecxz
cwde
ins
adc
or
ins
fisttp
pop
das
fistp
xchg
inc
shr
enter
xor
cmc
mov
xor
sub
lea
sub
mov
xchg
xchg
fimul
mov
sahf
imul
push
add
xor
mov
loope
leave
and
add
test
jne
js
sbb
and
xchg
jo
xchg
jmp
stos
inc
pop
repnz
imul
mov
push
mov
pop
je
xor
dec
adc
add
sbb
jnp
aas
mov
call
sub
xor
mov
imul
jne
fadd
adc
loopne
andps
dec
lea
call
in
pop
inc
and
jne
add
cmp
in
data16
ret
cmp
ins
inc
and
out
jb
hlt
adc
adc
rcr
inc
and
loopne
imul
mov
fmul
int3
imul
outs
or
outs
xor
bound
jb
popa
add
add
test
test
sti
sub
pop
ins
clc
jb
inc
imul
inc
test
cmp
adc
mov
and
push
hlt
xor
lds
pop
dec
pop
jb
ror
out
xor
mov
cmc
dec
mov
stc
xor
sub
into
add
mov
or
adc
sbb
in
add
push
stos
adc
mov
mov
or
mov
iret
xchg
jae
imul
jo
(bad)
xchg
adc
pop
(bad)
in
int
adc
fcomip
imul
out
sbb
daa
xor
or
loope
mov
or
daa
call
xchg
or
enter
add
pop
sbb
popa
test
repnz
out
inc
cmp
push
cli
pop
jg
inc
sub
mov
ins
int
pop
inc
pusha
inc
mov
(bad)
nop
pop
inc
adc
jnp
ins
outs
fwait
sub
int
pusha
daa
mov
pop
adc
push
or
pop
ins
sti
ins
out
adc
leave
adc
lds
cmp
cmp
cmp
or
or
test
inc
test
add
inc
and
or
inc
cmp
pusha
push
xchg
dec
dec
add
lea
movs
cmps
mov
test
inc
add
mul
(bad)
mov
clc
xor
or
mov
ja
retf
xchg
push
ja
and
inc
call
add
inc
push
cmp
push
or
dec
adc
adc
mov
push
sub
lahf
or
or
and
lahf
pop
cmp
pop
sub
sti
stos
sub
mov
mov
lock
cmp
mov
cmps
sbb
xor
jo
adc
adc
adc
dec
xchg
push
jecxz
add
aas
xor
xor
add
inc
imul
mov
add
ror
(bad)
test
rcl
mov
push
cwde
ds
xchg
jl
or
xor
xor
ret
push
ins
and
add
das
push
dec
nop
mov
sub
dec
cmps
sahf
jecxz
add
cmp
(bad)
inc
fist
or
nop
(bad)
aad
adc
ucomiss
adc
lods
add
iret
iret
sbb
xor
ins
push
fadd
nop
stc
out
mov
inc
scas
mov
push
lds
jmp
dec
push
pusha
iret
in
pushf
add
xchg
shr
shl
adc
pop
out
jbe
push
bnd
lods
out
enter
mov
stos
push
out
out
add
inc
pop
rol
out
cmp
or
add
scas
shl
xor
mov
xchg
(bad)
push
out
push
stos
(bad)
mov
push
(bad)
cmp
inc
jb
shr
push
xor
pop
(bad)
stc
(bad)
fcomp
std
mov
or
push
div
jge
int
lods
xor
in
mov
add
out
push
addr16
add
ja
jae
out
push
jb
inc
call
add
inc
jg
jo
push
aad
push
jmp
sbb
pop
sbb
mov
dec
hlt
in
add
and
in
ja
add
add
dec
push
add
test
sbb
push
psubw
inc
nop
mov
les
push
adc
and
jo
push
sub
or
xchg
pop
add
ja
push
mov
add
and
inc
imul
or
adc
add
cmp
arpl
sub
mov
xchg
ja
sbb
or
xor
mov
lods
mov
fld
das
jecxz
mov
cmp
push
jo
loopne
jb
out
js
add
jae
or
lods
bound
push
xor
mov
jae
jo
loope
mov
sar
movs
int3
shl
lahf
add
adc
rcr
add
je
fcom
cmp
and
inc
call
loop
shl
outs
or
adc
(bad)
pop
adc
push
int
mov
daa
loope
or
adc
outs
pop
mov
jo
or
shl
cmp
add
xchg
out
adc
lods
aaa
cmp
add
jmp
jmp
add
pop
mov
sbb
adc
test
shr
and
shl
sub
add
rcr
sub
loopne
fisubr
or
pop
fadd
add
iret
push
push
inc
or
inc
add
push
int3
pop
adc
jle
dec
or
push
jl
or
jle
ja
icebp
sbb
and
shr
cmc
xchg
dec
adc
jg
xchg
shl
sbb
mov
jmp
shr
(bad)
pop
jg
pop
xor
enter
(bad)
jg
dec
or
or
add
sub
mov
inc
xor
or
xor
pop
cmp
adc
les
cmp
mov
add
pop
(bad)
in
clc
dec
aaa
cmp
add
mov
ret
sbb
adc
ffreep
dec
adc
shr
mov
xchg
push
call
add
and
or
iret
or
add
dec
add
sbb
pop
push
jno
dec
or
inc
sub
nop
popf
movups
push
xor
jg
inc
jg
sbb
cmp
xor
jge
sbb
adc
shl
or
xor
gs
fs
push
neg
mov
add
stc
nop
sbb
adc
test
es
or
cdq
mov
push
test
ret
les
or
adc
xor
movs
aam
fdiv
popa
imul
dec
(bad)
sub
loopne
fcomi
cmp
sbb
call
add
shr
xlat
inc
push
cmp
(bad)
dec
enter
lea
dec
enter
(bad)
enter
sbb
push
popa
sbb
adc
push
(bad)
out
fdiv
mov
mov
addr16
push
fsubr
pop
xlat
add
fwait
cmp
xor
aad
push
push
mov
rcl
sbb
sti
fild
push
xor
push
or
inc
xor
mov
out
aad
loopne
loope
out
jnp
add
stc
or
push
pop
test
fsub
inc
cdq
loopne
add
enter
adc
jmp
adc
or
dec
xchg
ja
push
dec
push
dec
mov
or
cmps
ja
push
jmp
imul
push
popa
ret
pushf
xor
jne
bound
popa
adc
pop
add
jb
xchg
inc
ja
and
push
mov
or
sub
pop
loop
stos
(bad)
adc
add
neg
or
push
(bad)
jo
or
arpl
dec
shl
cmp
pop
sahf
mov
cmp
shr
push
push
and
mov
jbe
test
inc
xor
sbb
inc
ror
xchg
add
xchg
ret
jo
inc
outs
cmp
outs
lea
sub
push
lods
pop
dec
dec
adc
push
call
mov
cmp
mov
emms
adc
ret
out
ja
or
or
imul
mov
bound
and
xor
out
pop
adc
iret
pop
icebp
arpl
jmp
push
call
std
pop
cld
test
je
add
add
mov
mov
or
jg
imul
dec
fs
pop
mov
pop
or
mov
add
add
adc
mov
ja
lahf
push
push
arpl
and
mov
out
fdiv
cmc
(bad)
ret
fld
push
sbb
cmp
or
push
sub
cmps
and
movs
xchg
or
adc
dec
pop
inc
mov
lods
inc
lea
dec
inc
icebp
pop
es
leave
lds
pop
adc
sub
add
jecxz
inc
(bad)
mov
lds
test
pop
adc
std
and
out
(bad)
push
cmps
jmp
jecxz
sbb
mov
sbb
aad
mov
add
push
stc
cdq
movs
clc
mov
sub
or
sbb
repnz
add
test
mov
jmp
mov
add
ror
(bad)
movs
pop
and
adc
call
push
xor
add
and
sbb
mov
xchg
ins
dec
adc
jge
add
mov
paddsb
jns
cmp
add
sbb
mov
ins
(bad)
out
stos
sub
aaa
jne
or
inc
pop
pop
(bad)
xchg
and
mov
sbb
or
cmps
shl
push
repz
jl
sbb
adc
fstp
enter
xor
pusha
jne
dec
adc
mov
add
pushf
or
rol
pushf
or
stos
sbb
add
outs
mov
pusha
pushf
mov
xchg
push
or
add
or
popa
xchg
(bad)
xlat
in
or
shl
icebp
xlat
push
xchg
add
or
gs
stos
shr
xchg
mov
push
ja
adc
adc
test
cmps
andnps
or
retf
lea
aam
xchg
mov
ss
jecxz
dec
xchg
shr
xor
fisttp
mov
push
mov
mov
push
pop
pop
add
push
adc
pop
push
addr16
sbb
jno
inc
add
xchg
sub
or
inc
add
xchg
push
lock
or
sub
out
cmp
and
adc
mov
pop
mov
push
imul
or
adc
push
mov
push
das
pcmpeqw
mov
fwait
imul
out
add
sub
push
clc
cmp
mov
or
test
xchg
mov
dec
xor
(bad)
dec
mov
cmp
jbe
cmp
gs
cmp
adc
push
pusha
or
pushf
or
jno
adc
dec
sbb
sar
mov
adc
xchg
add
mov
aaa
pushf
add
or
aad
clc
test
pop
into
add
rol
lds
jmp
pop
popa
push
mov
ss
(bad)
fild
pushf
loop
loopne
and
out
add
cld
jecxz
sbb
cmp
sub
xchg
sbb
scas
pop
leave
aad
out
adc
in
and
ins
mov
out
ins
mov
xchg
jg
jecxz
sub
sub
jg
scas
xchg
add
sbb
ins
adc
stos
dec
aas
mov
cmp
imul
mov
loopne
aaa
outs
in
les
mov
lods
xor
pop
test
in
sub
ret
jne
add
sbb
sub
scas
or
call
or
or
add
adc
xor
jne
je
and
xor
loopne
mov
dec
aam
or
pop
in
cmp
xchg
mov
rcl
cmp
aas
hlt
push
add
push
(bad)
dec
push
sub
in
pusha
inc
lock
pop
(bad)
popa
mov
or
or
xchg
jno
inc
and
pop
sbb
mov
call
shl
adc
xchg
jo
push
clc
add
add
sub
call
or
ja
xor
jno
inc
or
sub
inc
mov
pop
popf
inc
xor
lds
mov
adc
adc
outs
inc
ret
je
pop
cmps
push
jl
hlt
retf
test
sbb
adc
xor
fdivr
pop
lods
ret
movs
stos
add
cld
or
and
fcmovb
movs
jbe
ss
fcomp
and
aam
cmp
and
aam
add
fst
add
jecxz
in
mov
push
mov
sub
jne
mov
adc
push
outs
adc
mov
adc
xchg
in
jae
adc
loope
mov
sbb
inc
mov
sub
das
pop
fscale
jo
mov
lock
cmp
inc
push
push
sbb
sbb
adc
push
gs
xor
leave
push
and
inc
adc
mov
jge
xor
sbb
sub
jl
aaa
lea
mov
sbb
mov
add
push
rcl
sub
dec
push
inc
fs
adc
add
mov
ss
loope
xchg
adc
nop
pusha
mov
mov
hlt
ds
xor
xchg
out
(bad)
(bad)
out
or
or
or
jge
movs
add
cli
inc
call
mov
cmp
xchg
mov
pop
mov
jle
enter
mov
inc
(bad)
push
adc
mov
call
or
imul
dec
xchg
mov
xchg
shl
movs
fdivr
loop
add
xchg
imul
jmp
test
je
sbb
sbb
inc
fbstp
loop
inc
add
js
sete
test
cmp
dec
adc
fadd
jbe
mov
lock
fld
mov
cmp
xor
pusha
clc
add
cmp
pusha
int3
inc
push
mov
inc
mov
out
add
or
xlat
int3
pusha
push
mov
clc
out
adc
repnz
lea
(bad)
lea
mov
add
cmp
xchg
or
inc
mov
jmp
sub
push
mov
pop
icebp
mov
ret
jmp
xchg
add
(bad)
push
rcr
add
add
js
mov
dec
push
jns
mov
jb
sub
repnz
jb
sbb
or
in
jl
inc
pop
outs
icebp
fnsave
mov
xor
mov
jge
add
or
sub
dec
jne
mov
jne
push
ret
lock
test
jl
mov
(bad)
inc
mov
inc
or
push
in
cli
mov
mov
add
sbb
adc
ficom
xchg
or
add
addr16
mov
dec
int3
add
shl
sub
ins
fimul
add
clc
mov
lods
repnz
or
inc
nop
cmps
pop
mov
out
xchg
imul
shl
jns
in
fild
ins
jo
pop
arpl
shl
outs
(bad)
inc
adc
mov
dec
or
fcomp
inc
xor
or
das
jmp
cmp
iret
enter
in
out
dec
add
mov
(bad)
push
jl
lods
jg
jmp
enter
loop
and
adc
mov
cmp
adc
xor
xchg
mov
adc
push
je
popa
adc
mov
add
scas
fbld
cmp
or
inc
and
jno
pushf
jle
fmul
mov
cmp
mov
add
loope
les
push
pusha
push
sbb
in
push
or
or
push
retf
pop
mov
out
cmp
and
add
bound
mov
jns
mov
jb
mov
hlt
sbb
xor
in
movs
nop
or
add
out
call
cmp
mov
push
sbb
mov
into
pusha
xchg
shr
and
mov
adc
jle
mov
rcr
int3
cdq
and
adc
pop
jo
das
mov
mov
add
loopne
add
(bad)
inc
lods
add
sub
inc
pop
and
mov
cmp
scas
(bad)
lock
or
test
jae
pushf
adc
push
jo
or
mov
push
mov
add
scas
std
idiv
add
test
inc
add
push
mov
mov
jp
fdivr
push
imul
test
int3
adc
sbb
fist
add
outs
fs
inc
dec
dec
inc
js
gs
imul
test
repnz
outs
mov
ins
cs
outs
ins
jne
push
jle
sahf
mul
push
outs
lea
fwait
sub
push
ror
ds
sub
xchg
jns
push
call
jbe
and
inc
push
popa
jb
gs
jb
outs
jb
push
fwait
jmp
retf
inc
xchg
(bad)
(bad)
in
sar
xor
inc
jb
popa
je
add
jae
std
xor
add
gs
data16
add
sub
push
dec
jae
sbb
popa
mov
iret
pop
mov
stos
push
pop
bound
movs
add
cwde
sbb
sbb
mov
jo
mov
pop
add
stos
fdiv
inc
add
or
inc
push
mov
adc
inc
mov
xchg
mov
push
push
dec
cmp
cmp
push
add
je
jae
inc
hlt
pop
push
jb
push
pop
movs
(bad)
loopne
js
or
scas
sbb
(bad)
cmp
jae
jns
jmp
ins
sbb
ret
pop
out
adc
dec
ins
jo
ins
outs
je
shl
cmp
and
jbe
loopne
rcl
mov
mov
xlat
push
test
dec
es
out
xor
movs
nop
outs
inc
pop
jae
outs
loop
movs
imul
push
lock
adc
dec
and
pop
fs
popa
jo
jecxz
xchg
addr16
ja
adc
mov
shl
add
inc
shl
movs
add
jns
pop
out
test
ins
jg
inc
je
jb
jmp
add
ror
inc
mov
adc
fwait
pop
pop
ins
adc
fcom
sub
sub
add
imul
ss
xlat
ins
call
rcl
inc
outs
cmps
inc
inc
inc
push
inc
dec
mov
cli
aam
jmp
xor
arpl
push
jns
gs
push
cs
in
jmp
in
pop
jecxz
jmp
inc
aaa
inc
pop
hlt
outs
or
xchg
inc
mov
sub
stos
xchg
mov
data16
arpl
sbb
(bad)
push
jae
popa
ror
addr16
outs
jb
jne
mov
adc
(bad)
cmp
inc
sbb
mov
test
hlt
jg
repnz
jbe
ret
retf
adc
outs
ins
inc
js
repnz
jmp
jmp
jnp
fimul
or
test
call
and
push
mov
jmp
dec
inc
aaa
add
sub
sub
mov
mov
mov
jns
inc
jbe
dec
popa
outs
xor
or
(bad)
jge
int3
xchg
adc
pop
push
dec
bound
add
dec
dec
outs
popa
fs
in
imul
or
and
aam
push
scas
add
jp
int3
fucom
sub
test
in
sbb
pop
push
dec
pop
pusha
mov
cs
or
rol
mov
xor
fist
ja
ja
test
loopne
sub
repz
xchg
add
pop
sub
ds
mov
shr
push
call
outs
xchg
je
mov
outs
fs
xchg
adc
loopne
mov
or
mov
enter
ja
or
jb
sbb
repz
inc
inc
sub
add
jo
adc
adc
ss
shl
mov
pop
popa
ja
pop
add
pop
mov
jbe
mov
add
adc
pop
inc
cmp
add
fcomp
xlat
jne
imul
mov
in
mov
mov
mov
mov
push
or
or
sbb
aas
in
rcl
pusha
add
and
or
jae
adc
rol
sbb
daa
fld
(bad)
ja
and
add
inc
xor
mov
inc
fs
and
jae
cmp
lock
gs
add
mov
push
add
add
add
dec
add
call
mov
inc
fnstsw
pushf
inc
or
pop
push
loop
mov
sub
cmp
or
je
out
jb
xor
or
mov
push
addr16
sub
add
xchg
pop
js
sbb
mov
mov
enter
mov
nop
pop
(bad)
mov
cmp
push
push
push
mov
dec
(bad)
push
push
movs
adc
mov
nop
dec
mov
test
jl
mov
lea
lahf
test
cdq
fsubr
or
mov
aam
pop
(bad)
lahf
in
idiv
adc
inc
and
mov
xor
mov
cmp
popf
xchg
push
mov
jae
sti
popf
call
mov
cmc
data16
pusha
sti
call
sbb
jg
enter
sahf
sub
(bad)
jg
(bad)
cmp
adc
push
mov
(bad)
(bad)
aaa
jmp
push
push
sbb
cld
cmp
jne
mov
jmp
mov
add
test
adc
mov
pushf
push
enter
rcr
mov
mov
mov
lock
add
inc
test
inc
xor
loopne
mov
or
mov
mov
xor
and
shl
xchg
mov
sub
dec
je
or
pusha
adc
push
out
scas
cdq
jne
push
rol
pop
mov
and
pop
mov
jmp
xchg
sbb
mov
pusha
es
add
inc
fsubrp
cld
mov
add
pop
push
lock
retf
cmp
fiadd
jne
pushf
and
push
dec
shl
mov
sub
ds
or
mov
es
shl
ret
je
cmp
sbb
pop
call
add
or
mov
push
jnp
lea
mov
sub
mov
push
test
hlt
mov
sub
in
push
and
inc
sub
jne
movs
fsubr
shl
fsubr
hlt
mov
sbb
ins
hlt
push
cmp
mov
imul
lahf
ficom
in
mov
sbb
in
dec
mov
call
or
or
call
add
or
and
loope
add
jecxz
call
mov
jl
jp
inc
fistp
(bad)
xor
dec
or
call
pop
hlt
adc
jne
or
data16
mov
mov
push
push
cmp
out
or
adc
loopne
pop
repnz
add
mov
xor
push
hlt
aas
hlt
mov
lds
fwait
cmps
and
add
or
lock
mov
dec
and
xor
xchg
or
inc
xchg
push
sbb
push
or
dec
jne
aaa
(bad)
jmp
retf
lods
add
and
and
dec
fild
in
xchg
sbb
loopne
sub
loopne
mov
das
icebp
xor
lds
imul
js
in
push
sbb
jle
in
push
test
fdivr
inc
sub
add
inc
add
cs
shr
rcl
sub
adc
scas
xchg
cmp
sub
rol
or
jecxz
imul
and
mov
in
adc
mov
cmp
jne
fs
dec
jne
push
jge
je
pop
sub
pop
sub
jl
push
mov
adc
mov
jae
or
pusha
out
inc
icebp
rol
inc
lds
or
nop
fbld
jbe
sti
test
je
cmp
icebp
sbb
cmp
clc
lea
add
mov
pusha
add
cmp
push
or
clc
sub
dec
fs
jge
addr16
sub
push
sub
or
inc
mov
add
enter
pop
bound
das
das
adc
sub
popa
rcl
pusha
dec
retf
lods
ds
inc
adc
aas
mov
and
movs
jp
push
int
js
add
scas
lock
push
mov
nop
adc
mov
fdivr
xchg
mov
nop
mov
or
daa
sti
(bad)
jmp
scas
mov
or
push
gs
jb
gs
xchg
int
pop
or
imul
shl
jp
pop
or
mov
ror
pop
shl
sti
xchg
fsubr
shl
adc
cmp
sbb
push
std
mov
dec
dec
into
fsubr
xchg
call
test
scas
sbb
fadd
jge
sbb
and
push
and
add
aam
cs
rcl
pop
jle
push
ss
scas
ins
sub
add
xchg
outs
fistp
(bad)
mov
movs
xchg
frstor
(bad)
ins
sub
loopne
add
or
dec
and
and
test
outs
test
je
inc
add
and
pop
mov
cmp
ins
dec
jne
or
cs
imul
push
or
jo
and
loope
pop
ins
dec
cmp
les
sub
stc
dec
xchg
jle
ss
add
popa
mov
cmp
jo
ins
sti
and
jmp
ins
jae
and
mov
imul
xor
mov
push
and
xchg
sub
pop
mov
es
add
and
pop
adc
shl
push
into
xchg
repnz
or
je
outs
imul
outs
adc
inc
inc
mov
adc
xor
out
xchg
fdiv
xor
push
xor
or
push
inc
pop
xor
je
mov
or
cmp
imul
cvtdq2ps
bound
pop
pop
cmc
jmp
inc
inc
mov
sbb
mov
pop
push
sbb
inc
pop
pop
ret
xchg
das
mov
lock
adc
mov
push
xlat
jne
cmp
inc
pop
ins
xor
je
cmp
int3
inc
cs
sti
mov
inc
xchg
fs
arpl
inc
jp
or
in
or
and
push
rol
ret
dec
dec
dec
push
and
fist
sub
mov
push
mov
pop
or
xchg
rcl
sub
jbe
idiv
jmp
or
cmp
add
sub
add
push
jbe
enter
bsf
mov
fldln2
or
and
sar
xchg
and
mov
fdivr
mov
das
inc
btc
mov
int
ins
pandn
xadd
mov
fwait
cmpps
in
xor
leave
sub
pop
inc
inc
adc
fst
out
push
in
and
xor
out
sahf
out
dec
push
pop
popa
sahf
out
sahf
imul
sahf
out
cdq
mov
jno
out
leave
shl
push
clc
cs
and
out
sti
mov
cwde
push
pusha
add
cmp
push
imul
sbb
and
add
push
or
inc
(bad)
fsub
push
jbe
(bad)
mov
jne
mov
aam
std
push
int3
sub
xchg
ffreep
xor
add
xchg
and
inc
clc
dec
or
cmp
jo
sbb
inc
dec
jbe
jo
xchg
out
ficom
push
fiadd
in
xchg
add
or
push
jo
outs
data16
icebp
mov
adc
inc
mov
jne
inc
and
jmp
push
mov
add
pmaxsw
mov
ret
add
sub
adc
or
xor
popa
(bad)
pop
xor
xor
inc
sbb
in
rcr
(bad)
or
mov
jge
add
jno
dec
je
jns
dec
in
dec
xor
fldcw
bound
mov
pop
dec
jae
and
xchg
sub
ins
shl
pop
adc
jae
gs
jns
add
ins
int
dec
movs
ins
mov
movs
jp
test
jae
into
xchg
mov
push
mov
add
addr16
es
inc
add
push
pop
pop
add
mov
xor
lods
fwait
xchg
pop
icebp
lods
rcr
mov
ret
into
sbb
pop
(bad)
in
sti
jle
jns
inc
add
mov
inc
sub
push
rol
outs
arpl
add
push
imul
push
sbb
shl
push
ss
xor
cmp
pusha
add
sub
les
ret
jmp
aas
aaa
nop
and
stos
test
mov
xchg
mov
xchg
mov
adc
push
add
sar
(bad)
movs
pcmpgtd
in
mov
int
outs
outs
add
inc
add
popa
jno
inc
aaa
shr
pmulhuw
packuswb
in
icebp
cmp
bndstx
jb
aam
aad
(bad)
out
xor
pusha
jnp
pop
pop
lock
retf
enter
into
retf
loopne
sub
dec
sbb
aas
pxor
outs
pop
fsubr
out
sub
into
sub
comiss
ds
push
icebp
sbb
dec
icebp
mov
xchg
and
jmp
cmp
outs
mov
paddsb
icebp
retf
sbb
in
add
nop
pavgw
jnp
loope
loope
(bad)
fisttp
cwde
bsr
cmp
adc
das
call
pushf
(bad)
xor
das
into
jg
add
ror
out
jb
in
xor
fwait
daa
lds
daa
jge
iret
sbb
lahf
out
idiv
pop
popf
mov
cmp
pop
daa
das
aaa
aas
inc
cmp
repz
push
pop
outs
repz
repz
xchg
iret
lahf
cmps
scas
mov
(bad)
cmp
repz
xlat
(bad)
out
jns
iret
repz
pop
es
pop
repz
es
push
push
pop
iret
repz
gs
or
call
iret
repz
ficomp
mov
(bad)
dec
jne
fsub
mov
aaa
add
scas
cmp
iret
fcomp
push
sbb
mov
scas
pop
inc
test
ss
aam
outs
dec
fsub
fisubr
push
js
imul
cs
sbb
aaa
mov
add
repnz
adc
xor
adc
ret
cmp
or
ret
xchg
or
push
jbe
inc
adc
js
dec
out
cmp
pop
push
fmul
test
sub
xor
sar
mov
or
rol
cmp
push
mov
scas
fidiv
outs
adc
sub
pop
mov
inc
mov
xor
neg
xor
in
out
(bad)
fnsave
xor
push
gs
fs
outs
ins
jns
cmps
ret
fistp
sub
inc
and
retw
add
push
test
or
cmp
cmps
sbb
add
pop
andps
fninit
or
pop
mov
xlat
push
xchg
loop
out
or
sbb
pop
daa
out
add
add
or
jo
shl
inc
or
clc
or
jne
xor
sub
or
mov
lock
add
xor
sub
ins
leave
icebp
or
pop
cmp
dec
mov
mov
rol
iret
mov
movs
or
scas
add
enter
push
sti
call
cmps
push
pop
in
ud2
mov
ror
shr
ror
rol
fistp
psrld
cmpxchg
add
pop
psrld
add
mov
psrld
fadd
or
sar
dec
ror
jo
mov
xadd
ror
add
ror
add
psrld
rcl
jo
mov
pop
shr
movq
mov
ror
ror
add
add
mov
ror
rcr
push
jo
shr
outs
jo
jo
rcl
shl
mov
adc
push
and
sar
push
loope
icebp
sahf
addr16
stc
add
jns
out
and
xor
inc
out
sahf
out
push
pop
popa
imul
cdq
jns
out
mov
out
sahf
out
rcr
loope
sar
sahf
icebp
stc
add
or
test
fidiv
aaa
push
out
(bad)
aam
in
xor
leave
fnsave
sub
add
push
fs
mov
or
sbb
loopne
push
je
outs
pop
mov
and
add
or
cmp
pop
dec
add
hlt
outs
pop
or
pushf
fcmovnb
mov
fs
gs
mov
add
push
push
add
inc
ds
and
xchg
dec
sar
mov
jne
xor
and
in
(bad)
and
mov
xchg
sub
or
xor
imul
inc
data16
jle
das
outs
sub
stos
lds
add
pop
xchg
(bad)
mov
fild
outs
or
pop
inc
jbe
or
cmp
imul
enter
iret
jo
push
mov
cs
cmps
jnp
and
ret
jne
mov
js
jae
sub
sub
push
push
jo
add
or
xor
add
inc
gs
ins
ffreep
mov
daa
iret
push
push
fidivr
xchg
shl
ret
cmp
push
sti
jg
dec
nop
imul
sub
adc
(bad)
push
sub
je
add
mov
sub
inc
sbb
pop
pop
pusha
xor
outs
inc
jnp
xor
and
and
aaa
inc
sbb
in
pop
aam
adc
pop
cmp
sbb
push
sbb
sbb
sbb
sbb
pop
cmp
and
cmp
and
add
arpl
repnz
inc
sbb
sbb
inc
xor
adc
sbb
sbb
movs
mov
sbb
nop
or
adc
fcomp
nop
adc
jns
cld
adc
pop
xor
mov
sub
or
mov
aas
pop
je
fiadd
push
push
mov
push
pusha
pop
pop
out
sbb
or
loop
inc
xor
int3
and
sbb
repz
cmp
sbb
and
fiadd
out
sar
mov
hlt
cmp
movs
dec
aas
test
push
pop
and
cmp
repz
repz
pop
addr16
test
cdq
test
mov
repz
in
clc
cmp
repz
(bad)
or
push
and
xor
cmp
repz
push
pop
iretw
repz
jo
test
repz
ret
int
aad
dec
push
inc
mov
stos
fdiv
add
add
popa
xchg
fadd
ror
popa
je
mov
ja
stos
mov
jle
jl
add
cs
cmp
fdivr
fdiv
pop
push
or
into
ss
push
dec
add
fld
sti
push
imul
pop
push
ins
ss
push
fs
xchg
add
(bad)
jnp
fld
push
sub
xor
adc
add
adc
or
or
push
or
adc
jl
sbb
rcr
or
and
xor
imul
sbb
dec
mov
inc
jp
add
mov
lods
cmp
jo
jl
nop
add
or
cmp
cbw
sub
inc
or
jb
fadd
dec
pop
sbb
push
loope
sub
sub
mov
or
pop
jb
outs
outs
xor
fadd
mov
push
fdiv
dec
inc
jle
jg
cmp
lahf
mov
jae
xchg
or
mov
jo
jmp
fst
das
dec
ins
jo
push
loopne
fisttp
or
cdq
icebp
lea
mov
or
ret
xor
and
adc
test
pop
lock
ret
or
mov
addr16
inc
jnp
in
ins
jae
lods
dec
push
sub
add
add
inc
ja
sti
stos
xor
stos
ret
dec
mul
inc
or
data16
popf
lds
adc
data16
mov
push
ja
sbb
sub
nop
sub
adc
daa
or
inc
mov
pop
xor
sub
pop
test
shr
pop
sub
mov
mov
mov
push
jo
dec
jae
push
js
inc
jo
gs
mov
test
lods
daa
cmp
fnstsw
enter
pushf
test
or
pop
dec
outs
leave
jb
add
fistp
scas
inc
test
imul
adc
mov
push
cs
xor
in
in
mov
push
inc
ds
xcrypt-ecb
cmps
or
jne
adc
push
sbb
jb
fist
mov
data16
cmp
lods
rcl
out
adc
pushf
fmul
cmp
push
nop
add
sbb
in
(bad)
in
(bad)
jmp
(bad)
jmp
inc
and
mov
and
dec
cmp
push
mov
fcom
push
pop
sbb
cli
mov
mov
hlt
push
add
cmc
mov
inc
push
ins
add
jmp
ja
test
xor
xor
mov
fisttp
dec
gs
jae
inc
sub
jp
pop
dec
cwde
dec
cmp
movs
mov
push
push
pop
fisttp
mov
mov
mov
add
or
dec
pusha
adc
add
xor
dec
dec
or
dec
leave
fld
add
add
push
ins
push
xchg
or
xchg
push
sbb
mov
mov
mov
or
std
shl
ror
ja
cmp
mov
xchg
out
mov
mov
push
xor
xchg
dec
xor
ds
shl
pusha
es
add
push
add
jb
sub
cmps
cmp
loopne
fiadd
add
call
jmp
mov
adc
adc
aas
add
mov
push
cdq
(bad)
retw
cdq
push
add
sbb
jge
ret
jecxz
lahf
cwde
ror
or
add
and
inc
inc
inc
mov
jns
cmp
push
push
and
add
add
outs
les
outs
push
test
push
std
outs
add
dec
adc
adc
add
test
fwait
sbb
add
add
jo
mov
sub
mov
sbb
cmp
inc
mul
xor
or
jne
test
cmps
sbb
lods
loopne
jbe
aad
push
inc
pop
inc
push
fdivr
add
inc
cmp
mov
inc
cs
lock
push
or
jnp
out
mov
fnsave
fwait
dec
pop
inc
inc
iret
jo
mov
mov
cmc
rcr
gs
and
mov
test
add
(bad)
cli
dec
pop
jo
scas
pusha
addr16
mov
sub
cld
push
inc
cmp
mov
pushf
xor
add
inc
cdq
icebp
fisubr
lea
mov
clc
pop
pusha
inc
adc
test
jnp
int3
mov
inc
or
push
fidivr
rol
sbb
sbb
rcr
call
and
shl
nop
and
(bad)
idiv
inc
adc
popa
or
sbb
out
pop
dec
or
cwde
fwait
adc
or
pop
inc
inc
sbb
push
add
pop
dec
add
mov
pop
inc
mov
mov
adc
pop
push
sbb
popf
xchg
adc
pop
or
fild
sub
mov
xor
xor
jno
ret
in
xor
jb
adc
hlt
xor
popf
ret
or
and
and
movs
leave
icebp
adc
and
xchg
mov
pop
jge
xchg
and
and
in
pop
mov
sub
(bad)
outs
int3
add
(bad)
dec
mov
mov
sahf
in
push
test
adc
lea
and
or
aam
ror
sbb
mov
dec
adc
dec
and
dec
call
les
popf
arpl
cld
aaa
dec
adc
mov
or
pop
inc
xchg
add
xor
in
push
sbb
push
leave
and
pop
leave
or
mov
aam
mov
arpl
popa
test
xchg
or
mov
inc
stos
nop
dec
ins
inc
test
or
inc
mov
jae
pop
addr16
and
add
aaa
loop
or
mov
jae
and
das
mov
add
jmp
test
push
mov
mov
mov
mov
push
call
add
pop
ret
push
push
push
mov
mov
cmp
aas
in
fistp
cmp
pop
inc
mov
push
mov
add
push
xor
mov
mov
pop
mov
mov
enter
push
mov
mov
movzx
cmp
ja
out
sbb
and
mov
push
sbb
repz
dec
pop
cmc
jne
std
push
cmp
sbb
mov
jo
push
ror
retf
add
cmp
nop
push
inc
lea
ss
cmp
mov
cmp
push
sbb
xchg
movs
xor
jbe
ins
cmp
inc
popf
xchg
fisubr
dec
jnp
jg
pop
fwait
cmp
jnp
push
jl
adc
ins
scas
mov
dec
into
loopne
clc
push
sub
pop
mov
xchg
dec
adc
aam
sub
mov
adc
add
(bad)
jo
fs
jmp
loopne
cmp
fiadd
ret
out
data16
jge
movs
repnz
enter
dec
lods
cmc
jg
popa
sub
dec
mov
test
je
sub
outs
ja
mov
call
adc
adc
iret
mov
sbb
push
xchg
push
jo
iret
cmp
outs
fistp
pop
ret
nop
data16
je
mov
or
and
ret
mov
pop
hlt
jae
adc
pop
mov
mov
pop
fdivr
and
pop
loopne
test
je
out
ja
add
lock
jle
cmp
add
cld
loopne
fsubr
add
repz
mov
dec
inc
cwde
sbb
test
jae
imul
lea
inc
inc
cmp
xlat
in
fidiv
fcmove
iret
sub
dec
xor
ss
add
clc
pop
mov
jbe
push
push
fistp
inc
ins
leave
mov
mov
call
sbb
push
lods
mov
push
call
call
dec
je
add
xor
aas
ins
scas
fs
or
sete
inc
ins
clc
mov
sbb
adc
je
cmp
push
cmp
sbb
or
(bad)
push
add
and
or
ins
call
add
cmc
rcl
dec
push
fmul
mov
jnp
ret
rcr
mov
outs
mov
cmp
scas
add
mov
xchg
sub
ror
mov
enter
dec
or
adc
out
je
mov
pop
mov
sub
xor
jne
shl
inc
push
ins
jne
into
movs
mov
sbb
fsubr
outs
xchg
fsubr
sbb
and
or
push
hlt
dec
mov
mov
dec
or
cmp
je
xchg
frstor
pop
loopne
not
gs
enter
cmp
xor
std
lods
add
adc
add
add
aas
js
cdq
sbb
cmps
sub
add
add
cmp
cmp
out
mov
ret
call
mov
sbb
jmp
ins
jmp
xchg
clc
lea
mov
add
and
mov
test
ror
jecxz
cmp
or
outs
jg
scas
inc
sahf
ss
mov
js
pop
cmp
fld
pop
sbb
cmp
or
mov
lods
xor
inc
sbb
add
xor
adc
mov
inc
inc
push
sub
shl
xor
push
mov
loope
cmp
cdq
push
ror
or
gs
sbb
ss
push
mov
out
mov
inc
mov
sti
ja
mov
jl
inc
mov
pop
cmp
jne
or
pusha
or
not
and
push
xchg
mov
mov
mov
add
js
mov
mov
mov
xchg
lock
pop
push
add
xor
adc
cwde
inc
jo
add
add
jo
mov
in
or
sbb
aaa
lods
in
push
or
push
js
loopne
sub
mov
jg
cmp
push
adc
aaa
or
dec
xchg
lahf
and
fdiv
or
and
mov
test
add
jno
sub
and
nop
push
test
aas
(bad)
and
adc
cwde
pop
fdiv
inc
hlt
mov
dec
test
jl
test
mov
fmul
jne
and
loopne
rcr
and
stc
adc
fist
jg
cld
mov
lock
xchg
sub
sub
or
outs
out
jl
inc
aaa
or
lea
or
xchg
dec
jne
hlt
dec
(bad)
out
add
adc
stos
in
and
jne
pop
xor
mov
inc
mov
lea
or
mov
mov
mov
sub
sub
push
test
sub
loop
push
loopne
icebp
mov
not
mov
call
(bad)
out
cs
ret
mov
mov
adc
cmp
lock
in
retf
mov
inc
add
jl
ds
sbb
ss
sbb
ret
(bad)
repnz
pop
push
and
out
add
(bad)
push
(bad)
xchg
aaa
dec
jb
adc
push
ror
jecxz
jg
jns
inc
jb
popa
jns
retf
pop
stos
mov
mov
and
jle
out
dec
stc
data16
cli
icebp
jp
inc
add
sub
sub
and
mov
add
and
mov
pop
(bad)
cmp
lods
adc
fistp
test
nop
in
and
loopne
sbb
add
ins
sahf
adc
or
cmp
sbb
mov
adc
inc
outs
in
test
ss
jp
sbb
iret
cmp
mov
das
dec
inc
dec
jne
cmp
pop
in
inc
cmp
je
fisub
fcom
push
lahf
dec
hlt
mov
and
in
and
and
mov
test
je
(bad)
lock
mov
mov
fimul
out
mov
fadd
or
mov
lock
mov
mov
lods
mov
sbb
or
and
adc
jmp
mov
adc
mov
mov
mov
ins
aam
or
call
mov
and
mov
pop
loopne
jne
jo
jle
adc
inc
sbb
rol
imul
call
or
cmp
adc
or
mov
into
mov
call
mov
mov
in
(bad)
adc
push
sbb
add
stos
enter
pop
cmps
mov
mov
ins
(bad)
pop
in
shl
mov
lea
ret
pop
ret
shl
or
dec
and
mov
inc
fstp
lock
sub
or
cmp
fmul
fstp
fsub
bound
(bad)
sub
adc
push
xchg
mov
jp
add
inc
dec
jne
or
pop
popa
dec
rcr
sub
mov
and
mov
inc
xor
js
xor
push
cmp
iret
sub
inc
mov
mov
xchg
aaa
and
lds
retf
or
ss
ret
pop
rol
jl
mov
add
inc
jmp
test
sbb
aas
jb
scas
pop
mov
add
repnz
stc
dec
jo
nop
movs
add
retf
mov
ret
and
mov
addr16
sub
call
push
jo
enter
mov
cmp
aad
xor
add
mov
shl
cmp
add
rol
jle
(bad)
je
xchg
icebp
xor
lahf
mov
pop
jae
or
fild
sbb
sbb
test
test
pop
jo
mov
icebp
pop
and
pop
clc
hlt
sbb
gs
cmp
jge
daa
sti
lds
mov
jp
test
xchg
sbb
test
idiv
and
and
outs
test
jbe
pop
arpl
int
rep
int
push
les
add
adc
aaa
adc
sbb
mov
mov
jp
jnp
mov
ins
xor
shl
mov
cmp
jne
jbe
sbb
xor
pushf
test
pop
sbb
out
push
cmp
jne
jmp
cmp
sbb
jge
pop
adc
inc
or
push
mov
rol
xchg
and
push
mov
aas
pop
mov
push
mov
(bad)
pop
or
lock
pop
mov
stos
cmp
mov
and
dec
mov
sbb
fisttp
fdivr
inc
ret
addr16
retf
pop
mov
retf
shl
push
dec
pop
js
aad
pop
push
mov
jne
xchg
inc
movs
ror
cdq
sti
mov
mov
add
push
add
rcl
push
std
push
cmp
je
sub
test
in
xchg
ret
outs
mov
push
pop
cmp
push
cmp
(bad)
fs
adc
jmp
inc
call
pop
jae
fstp
es
leave
int3
sbb
fmul
xor
fadd
dec
mov
add
std
xor
dec
int
push
test
adc
dec
mov
push
push
imul
in
add
iret
sbb
pop
mov
out
ds
jle
dec
cmp
mov
and
iret
int3
dec
rcr
out
sbb
pop
fadd
int
adc
mov
push
adc
ror
mov
ja
sar
stos
pusha
test
add
lahf
mov
ret
rcr
mov
add
push
jb
sbb
fsub
outs
cmp
push
pop
jo
imul
aaa
or
inc
pop
sar
and
rcr
ror
push
push
sbb
test
adc
les
ins
out
aad
(bad)
mov
and
fs
call
(bad)
adc
and
int3
mov
addr16
(bad)
pop
mov
adc
and
enter
repnz
inc
call
fistp
xlat
dec
pushf
aad
add
inc
and
or
xor
je
push
cs
hlt
push
pusha
imul
enter
add
popa
shl
imul
xor
ret
xchg
push
adc
ret
inc
icebp
mov
jge
pop
mov
xchg
shl
mov
int
inc
scas
ret
mov
push
and
push
jmp
retf
inc
add
das
pop
and
jmp
cmc
inc
mov
cmp
outs
loope
outs
loope
mov
mov
inc
dec
and
pusha
jne
push
out
inc
lock
es
cdq
icebp
inc
aam
aam
in
sbb
pusha
jg
aad
push
movs
push
lods
mov
loopne
lods
cmc
out
xor
push
cmc
not
imul
adc
push
daa
inc
mov
sub
mov
and
neg
fisttp
cwde
jmp
xor
out
cwde
in
ss
cmp
jg
add
lahf
jo
dec
xchg
or
fsubr
aas
mov
xor
sbb
add
or
cld
mov
mov
mov
shr
push
xchg
ficomp
jmp
mov
pusha
push
dec
cmp
ret
pop
adc
cmp
test
mov
mov
push
addr16
and
and
dec
ror
ret
push
fiadd
(bad)
jbe
push
inc
and
test
dec
int3
push
dec
xchg
sbb
rol
xor
mov
das
in
int3
sbb
hlt
mov
inc
outs
sbb
push
push
aaa
dec
mov
cmp
aaa
mov
mov
add
(bad)
fld
adc
dec
sub
or
xor
mov
inc
dec
jne
fstp
mov
push
add
xor
xlat
popa
pop
out
in
test
sbb
scas
inc
pop
or
leave
push
in
test
pusha
cmp
adc
add
cmp
movs
cmp
sbb
ret
jo
jle
outs
inc
fwait
pusha
mov
outs
gs
xchg
scas
push
test
jg
shl
push
add
(bad)
rcl
adc
adc
aad
jo
fcomp
adc
fs
adc
xor
mov
ins
add
rcl
idiv
rcr
movs
(bad)
(bad)
js
jne
mov
xchg
int3
push
xor
mov
pop
mov
mov
inc
and
loopne
test
pop
(bad)
leave
sbb
das
ins
pop
(bad)
aas
scas
sbb
aaa
nop
sub
xchg
mov
xchg
mov
(bad)
outs
sub
mov
pop
add
loopne
int3
test
push
mov
jp
mov
and
pop
or
test
repz
adc
dec
fild
call
inc
movs
popa
pop
inc
fs
mov
dec
jo
test
cmp
ins
sbb
push
loopne
or
adc
pop
push
cmp
and
in
adc
outs
nop
clc
dec
jne
lds
fistp
dec
or
and
mov
arpl
mov
hlt
push
pop
cs
xlat
arpl
inc
jmp
jle
outs
inc
xor
call
sbb
push
add
push
push
pop
cmp
jo
in
or
mov
or
data16
push
mov
call
adc
(bad)
into
aad
push
sub
mov
push
mov
dec
mov
and
adc
stos
xor
jl
inc
cmp
ins
pop
loope
cmp
jmp
fstp
sbb
jne
jmp
(bad)
dec
rcl
test
data16
sbb
mov
jmp
pop
or
adc
je
test
out
inc
setne
and
inc
ja
xor
or
inc
scas
hlt
mov
dec
fiadd
nop
sbb
hlt
sbb
inc
pop
dec
dec
clc
sub
popf
sbb
xchg
loopne
mov
or
aam
sahf
loopne
push
push
xlat
rcl
add
and
ror
dec
(bad)
push
dec
sbb
in
sbb
mov
push
push
mov
neg
das
mov
loop
jne
adc
in
scas
ret
ins
fist
add
jmp
add
and
loope
jbe
das
inc
push
psraw
sti
and
cmp
arpl
add
pusha
clc
jmp
add
jb
loope
lahf
xchg
inc
pop
jmp
adc
shr
loopne
pop
push
das
dec
popa
dec
mov
punpcklwd
cmps
add
pop
sbb
push
adc
dec
icebp
jbe
xor
mov
adc
mov
sbb
ret
xor
cmp
or
cmp
nop
dec
loopne
outs
dec
test
xchg
mul
xchg
xlat
popa
add
or
mov
xchg
loop
add
arpl
loopne
mov
mov
aam
js
inc
fild
adc
add
hlt
cmp
ret
sub
push
loopne
in
sbb
imul
mov
sbb
xlat
or
aaa
or
mov
xor
das
inc
(bad)
sbb
repz
test
or
mov
fdivr
inc
loope
ja
or
jge
test
in
into
and
scas
push
inc
out
aam
nop
es
xor
fistp
stos
adc
fiadd
test
mov
repz
daa
shr
enter
cmp
inc
(bad)
stc
inc
shr
push
outs
rcr
sbb
dec
ins
sub
pop
mov
cmp
cmp
add
jb
ja
call
in
inc
mov
inc
and
(bad)
int
(bad)
cmp
adc
out
mov
xor
xchg
cmc
pop
js
ins
xchg
cmp
cmp
movs
sub
sbb
test
sbb
into
mov
iret
sub
mov
fld
mov
dec
jp
sub
clc
test
pop
cli
or
jo
test
movs
pop
fnstsw
sbb
cmp
add
pushf
dec
shl
in
add
xor
addr16
addr16
fisub
dec
je
or
add
loope
ret
xchg
push
sbb
lea
push
inc
dec
push
push
aad
fxch
xchg
mov
inc
cmc
pop
xchg
clc
scas
jne
inc
jbe
jb
call
nop
loopne
or
loopne
add
movs
jp
rol
ins
adc
mov
in
jae
add
je
dec
mov
(bad)
scas
push
xchg
and
shl
pusha
cli
inc
mov
int
scas
daa
adc
rol
cmp
fadd
xchg
rcl
test
rcl
lods
inc
enter
(bad)
jmp
adc
lods
mov
les
jmp
icebp
shl
les
lea
jecxz
push
push
sahf
adc
sbb
add
add
push
add
cmp
or
aaa
adc
inc
hlt
push
mov
js
nop
in
js
bound
fcom
enter
or
out
sub
mov
call
lock
ror
and
loopne
mov
popf
(bad)
mov
ret
repz
popa
pop
dec
push
test
dec
hlt
test
add
shl
outs
or
pop
mov
cmps
adc
inc
sub
adc
or
push
test
xor
mov
xor
ins
add
dec
push
sub
pop
xor
lods
and
mov
lods
stc
xor
xor
dec
stc
into
push
cmp
xor
push
(bad)
cmp
movs
pop
adc
inc
lahf
aaa
dec
in
jns
aam
aaa
shl
adc
sahf
adc
into
leave
add
xor
adc
or
add
das
cmp
inc
jo
xchg
gs
imul
cmps
addr16
mov
sub
fild
xor
mov
in
pand
jge
frstpm(287
rol
inc
test
popf
mov
inc
daa
cmp
lock
shr
int3
ins
add
mov
and
or
fwait
rol
sbb
dec
mov
mov
lock
add
mov
mov
adc
or
das
(bad)
loopne
mul
mov
mov
cmp
out
adc
faddp
dec
lea
pop
sbb
mov
and
out
sbb
fldenv
int
mov
sti
pop
bound
or
(bad)
sub
fmul
or
inc
xchg
outs
adc
icebp
outs
dec
mov
loope
out
(bad)
push
or
shl
(bad)
add
add
adc
jp
adc
xor
dec
or
push
(bad)
gs
xor
add
rol
inc
adc
or
cmp
mov
shl
int3
jmp
jmp
cwde
pushf
and
mov
dec
cmp
adc
adc
mov
adc
add
sub
rcr
xchg
add
arpl
mov
push
ror
mov
fld
inc
jno
not
ret
inc
adc
iret
les
sub
test
and
lea
stos
test
pop
pop
fs
popf
pop
push
cwde
clc
enter
adc
push
ja
ja
mov
aaa
cdq
call
mov
sub
mov
loopne
scas
fs
sub
add
sbb
mov
xor
pop
aaa
and
rol
sbb
test
clc
and
out
push
ror
arpl
les
mov
stos
fdiv
and
inc
xor
cmp
pop
cmp
(bad)
ja
pop
pop
lea
mov
arpl
xchg
xchg
icebp
or
mov
test
mov
inc
pop
sub
(bad)
mov
sub
jmp
xor
pop
lds
mov
mov
leave
dec
jmp
aad
repnz
cmp
push
or
push
push
jno
push
fcomp
mov
fisttp
mov
js
pop
pinsrw
lock
and
les
call
test
das
dec
pop
out
push
add
inc
loopne
aas
cmps
(bad)
push
mov
int
and
(bad)
mov
pop
test
push
sub
ds
inc
jbe
adc
inc
xor
outs
je
icebp
pop
mov
or
arpl
test
jl
inc
add
cmp
adc
inc
nop
add
push
mov
adc
out
push
subps
sbb
aas
inc
cmc
fild
or
jmp
inc
dec
jne
hlt
sbb
bound
call
dec
inc
fucomp
shl
pusha
int3
xchg
xor
xchg
add
add
ror
xlat
sub
mov
(bad)
mov
loop
add
add
add
lahf
aam
sub
pushf
push
mov
retf
adc
gs
pop
div
xchg
ja
movs
pop
push
or
outs
enter
in
shl
and
adc
push
and
jmp
outs
sub
sbb
mov
inc
clc
push
add
mov
pop
dec
stos
pusha
cmp
jne
cwde
mov
adc
jmp
push
push
cmp
mov
or
stos
adc
add
arpl
jp
jbe
push
pop
mov
rcl
shr
push
xor
loopne
lock
enter
push
mov
mov
loope
mov
or
sbb
jp
or
jns
add
lock
xor
inc
mov
ficom
sub
push
loop
scas
out
stos
in
jl
loop
push
popa
and
or
push
sar
jecxz
aam
dec
call
lea
in
loopne
in
sahf
hlt
or
xchg
xor
jne
cwde
test
xor
sbb
enter
add
loopne
xor
adc
imul
cdq
pushfw
push
das
cwde
jne
sub
pushf
stos
xchg
mov
jne
nop
mov
cmp
add
cld
clc
inc
sub
push
push
or
pop
mov
mov
clc
cmp
or
aaa
cmp
push
shl
jp
scas
cwde
call
adc
inc
inc
push
push
add
ins
in
cmp
stc
pusha
xchg
mov
xor
clc
mov
add
ins
add
jae
pop
inc
mov
and
shl
hlt
push
js
cmp
je
leave
inc
pop
(bad)
and
or
push
fiadd
push
inc
call
inc
mov
fmul
xchg
loope
fwait
mov
adc
test
test
xor
inc
dec
and
mov
xchg
sbb
xchg
mov
stos
xor
mov
mov
push
jne
inc
(bad)
fild
test
push
mov
adc
test
mov
dec
lea
mov
add
push
mov
out
mov
add
int3
mov
sbb
push
mov
fisub
mov
fidiv
sbb
sub
aad
(bad)
pop
and
mov
mov
add
arpl
repnz
inc
cmp
or
pusha
clc
push
ret
pushf
les
adc
sub
adc
pushf
shl
push
jo
test
enter
sub
fnstcw
mov
add
pop
out
fimul
das
push
add
pop
sbb
xlat
mov
das
add
push
xor
jle
or
jb
sub
add
add
stos
pop
add
push
aas
fistp
add
jge
xchg
repz
push
arpl
je
xor
add
fld
add
and
test
loopne
cmc
hlt
mov
ret
ret
test
xor
bndldx
aas
lea
jmp
jl
jecxz
popa
in
hlt
jmp
adc
or
pop
test
div
inc
pop
clc
clc
inc
jo
loope
in
hlt
rol
test
inc
sbb
mov
push
cmp
cmc
sbb
pop
sub
sbb
cwde
inc
add
sbb
sub
and
cmp
(bad)
iret
fnsave
ret
push
call
sbb
dec
jmp
dec
and
mov
add
adc
mov
and
sub
leave
mov
shl
das
inc
xor
or
mov
mov
or
ret
jmp
mov
aad
dec
mov
dec
jne
loope
repnz
enter
test
mov
cs
xor
push
out
jo
inc
push
lea
mov
dec
xchg
mov
pop
xor
outs
(bad)
sbb
push
mov
pop
adc
mov
mov
test
outs
fadd
rol
lock
inc
dec
sub
adc
jne
add
inc
(bad)
lods
std
jle
sub
jl
inc
mov
imul
add
jne
dec
xor
adc
shl
adc
imul
jp
ss
popa
mov
inc
sub
out
sbb
pusha
xor
pop
clc
inc
sbb
pop
scas
inc
ja
clc
ret
out
jnp
push
xchg
bound
js
jo
sbb
jle
and
xor
mov
xor
das
or
sub
mov
and
inc
add
es
add
adc
test
jnp
neg
jne
cmp
and
repz
pop
outs
enter
jmp
shr
cmp
popa
add
scas
add
sar
sbb
or
push
adc
push
mov
or
inc
clc
or
clc
add
mov
inc
mov
add
and
fcom
cld
cmp
or
in
lods
or
xchg
mov
retf
pmullw
sbb
mov
mov
lods
and
inc
add
loopne
dec
sbb
shl
and
mov
xor
or
mov
xchg
or
xchg
in
cli
out
rol
inc
or
add
push
inc
shr
aad
retf
mov
xchg
pop
daa
dec
xor
imul
loope
push
and
loope
mov
add
inc
cmp
or
jae
sbb
mov
mov
fdivr
add
mov
add
cmc
bndstx
jg
aam
inc
fadd
inc
fsub
inc
cdq
cs
shl
shl
lock
leave
pop
jecxz
pop
test
push
add
pop
cmp
sbb
das
mov
ret
or
push
ret
dec
adc
mov
push
mov
pop
pop
sti
gs
adc
lds
and
or
jmp
(bad)
addr16
pop
xor
fwait
and
stos
jecxz
adc
pop
into
jno
add
mov
ins
xchg
mov
push
jns
das
test
sar
lock
fmul
push
pop
and
push
add
xor
shr
aas
(bad)
adc
adc
(bad)
cld
aaa
or
ret
dec
push
mov
daa
jg
xor
in
fsub
inc
inc
and
cmp
cmp
inc
notrack
sbb
nop
add
push
adc
std
sbb
or
or
pop
jmp
jmp
clc
xchg
push
test
add
jbe
lods
les
daa
cwde
pushf
add
or
push
mov
cmp
sub
push
or
sbb
inc
inc
pop
call
jl
add
pop
into
adc
mov
jmp
test
test
jmp
(bad)
jmp
xor
xchg
in
dec
add
hlt
(bad)
mov
loopne
pop
or
dec
xor
out
xchg
in
sbb
mov
retf
add
ret
sbb
xor
das
jno
lods
and
in
inc
outs
cmp
mov
mov
add
fild
mov
stos
fistp
push
aaa
rcr
ins
xor
iret
mov
push
sbb
jmp
enter
call
jmp
mov
inc
lea
inc
ja
mov
cmp
xor
lock
pop
dec
add
and
push
jmp
dec
inc
outs
aas
bound
aas
jmp
or
inc
cs
(bad)
xor
sbb
inc
mov
pop
dec
cli
pusha
or
in
pop
ins
xor
jae
test
loopne
in
xchg
loopne
fdivr
xor
add
faddp
mov
pusha
mov
xor
mov
cmp
and
outs
leave
mov
aad
add
adc
fmul
enter
and
rcl
ret
addr16
or
not
cmp
adc
aam
popf
fidivr
jnp
nop
or
fwait
add
icebp
cmp
and
or
cmp
or
mov
ret
xadd
inc
mov
data16
jae
sti
mov
test
inc
sbb
clc
jnp
jmp
push
mov
xchg
adc
push
sub
mov
cmc
cdq
test
inc
xor
loopne
add
in
in
shl
and
sub
enter
mov
sub
push
lock
jno
popw
data16
fnstenv
inc
ficom
add
ins
call
mov
cmps
mov
sub
pop
arpl
mov
or
sub
jne
adc
push
dec
pop
fcomp
mov
add
jne
lods
or
ret
or
cmp
dec
es
cmp
inc
cmp
and
adc
add
add
mov
in
adc
mov
fadd
(bad)
jnp
or
mov
hlt
mov
lods
inc
sbb
or
test
aam
xor
jb
sbb
jp
repz
loopne
push
clc
(bad)
mov
test
mov
mov
pusha
sbb
mov
sbb
cmp
call
lods
div
imul
mov
out
adc
cwde
inc
jmp
repnz
add
int3
mov
mov
add
popf
cli
aam
add
fadd
add
adc
cmp
jge
push
xchg
pop
inc
push
aam
pusha
or
mov
je
retf
repnz
mov
mov
and
add
cli
mov
pusha
adc
mov
mov
inc
adc
mov
(bad)
fidivr
xchg
outs
xchg
test
inc
pushf
mov
lock
pushf
lea
out
aaa
test
nop
test
xchg
sbb
pushf
adc
retf
fwait
loope
inc
sub
jge
adc
test
sub
or
cdq
or
je
inc
or
cwde
pmaxsw
je
aas
sub
mov
xor
pop
mov
clc
push
out
adc
cmp
mov
test
aad
in
movups
sbb
jae
retf
push
shl
loop
mov
lea
dec
int
dec
jp
sar
push
inc
add
jmp
ins
jle
jne
in
clc
outs
jnp
sub
cmp
inc
icebp
pop
or
push
in
cmp
mov
sub
mov
cwde
cmps
aam
xchg
or
dec
test
jl
inc
add
dec
mov
mov
xlat
test
dec
jne
mov
jecxz
pusha
xchg
mov
(bad)
push
mov
shl
pop
pop
fisub
lods
add
xorps
add
clc
pusha
add
inc
loopne
out
pop
push
push
(bad)
in
add
je
push
jo
pop
loop
fidivr
sub
pusha
inc
pop
or
or
push
outs
jne
mov
aad
add
idiv
jge
js
retf
rcr
(bad)
ja
pop
ret
sub
gs
clc
fisubr
cmps
scas
inc
add
xchg
call
xlat
hlt
daa
sti
pop
sub
cld
xchg
std
(bad)
push
add
dec
inc
aam
cwde
push
dec
mov
mov
les
adc
test
je
push
imul
adc
ret
out
adc
pop
adc
or
adc
movs
sub
or
pop
adc
pop
and
adc
jne
rcr
add
or
sbb
xchg
pop
inc
js
jmp
cmps
aas
lods
sbb
das
imul
test
test
sub
shl
or
xchg
mov
test
adc
dec
jnp
fsub
sub
stc
imul
ja
jecxz
push
ret
icebp
inc
or
jl
je
icebp
call
jmp
jmp
adc
push
push
mov
push
pusha
jmp
fstp
enter
push
loop
sbb
enter
pop
and
ja
adc
xchg
rol
push
cmp
and
inc
sar
pop
pop
cmp
mov
fs
pusha
(bad)
cmc
(bad)
nop
mov
aaa
test
and
push
or
iret
mov
dec
adc
dec
mov
cmc
mov
add
ds
ror
adc
or
or
mov
mov
adc
push
mov
sub
sub
cmp
sub
cmc
push
xchg
sub
inc
into
fsubrp
out
or
push
and
and
addr16
sbb
mov
pop
adc
test
jg
mov
mov
push
adc
enter
call
add
rcl
sub
add
xor
and
stos
mov
aaa
and
and
(bad)
or
aam
and
shl
push
and
outs
je
pop
xor
or
int3
or
ucomiss
popa
inc
mov
add
inc
xchg
inc
cmp
xchg
nop
scas
push
daa
push
push
inc
cwde
push
das
push
jbe
test
jno
test
mov
fiadd
inc
loopne
cmp
out
icebp
(bad)
and
or
jle
pop
push
ins
mov
dec
jno
jns
push
push
push
add
lea
out
mov
imul
or
mov
mov
adc
repz
add
lock
jle
test
pop
jo
mov
sahf
jno
mov
push
jmp
scas
add
mov
add
je
inc
jl
add
dec
and
lods
sub
test
push
mov
sub
or
add
or
cmp
mov
pop
mov
pop
dec
(bad)
xchg
and
xchg
(bad)
(bad)
aam
inc
push
test
xchg
mov
adc
adc
(bad)
pop
rol
dec
xor
add
sbb
or
data16
ja
pop
jne
jb
scas
jo
js
cmp
jne
sbb
adc
in
idiv
enter
loopne
jl
mov
inc
mov
ja
fld
cmp
dec
mov
jp
adc
jmp
lock
not
or
je
mov
cmp
movs
pop
fdivr
inc
pop
pop
mov
mov
jmp
or
std
cmps
pop
jl
xor
sbb
or
jg
jg
imul
xlat
out
jmp
dec
std
mov
push
jmp
jp
jne
push
mov
sub
cmp
xchg
sbb
pop
clc
pop
sbb
repnz
xor
(bad)
loopne
adc
dec
les
xchg
or
ret
adc
push
retf
pop
std
js
xor
call
jp
push
sahf
push
dec
inc
add
dec
setne
hlt
cmp
mov
mov
cmps
cld
call
fiadd
push
push
push
mov
add
jmp
movs
cld
jecxz
add
jg
xchg
fwait
inc
or
add
push
add
and
and
scas
xchg
add
add
mov
loopne
or
pop
daa
xchg
add
scas
jne
inc
dec
pop
adc
xchg
xchg
jle
shl
adc
dec
pop
pop
sub
mov
dec
pop
push
mov
scas
adc
inc
sbb
movs
xchg
mov
jns
jnp
mov
je
adc
add
xchg
jo
jae
fmul
test
sar
mov
cs
ins
inc
pop
inc
and
out
xor
jae
(bad)
jl
pusha
mov
cs
retf
lods
lock
imul
mov
add
cmp
xchg
sbb
xchg
outs
ror
sbb
in
jmp
sbb
sti
(bad)
scas
and
pop
in
mov
or
adc
repnz
pop
sahf
push
add
jmp
inc
add
sbb
scas
mov
fisub
inc
bound
xor
pop
ret
jno
pop
xchg
dec
ss
sbb
dec
scas
ss
pop
(bad)
femms
sub
add
sub
fsubp
adc
mov
or
mov
inc
pop
jo
cdq
jo
jle
and
and
sahf
popf
js
lods
rcl
push
adc
data16
add
fild
add
mov
cmc
add
je
mov
inc
add
mov
sbb
cmp
(bad)
rol
mov
push
adc
in
into
inc
fidiv
jge
jle
call
cmp
cli
fwait
loopne
or
stc
mov
cmp
popfw
cmp
xchg
(bad)
sbb
inc
(bad)
or
jns
mov
xchg
push
mov
add
add
push
jo
dec
sti
mov
loopne
(bad)
aam
je
or
popf
rol
popf
add
add
dec
cwde
jecxz
rol
(bad)
push
mov
hlt
dec
dec
mov
pusha
add
test
cwde
test
mov
mov
adc
pop
push
movs
test
in
mov
and
pop
xchg
jg
nop
ins
in
jnp
ss
add
sar
xor
fimul
sub
inc
and
ins
les
mov
mov
mov
xor
sbb
jge
les
data16
sbb
arpl
ror
in
sbb
ret
lea
jbe
sbb
or
daa
(bad)
fwait
cmp
sub
test
pop
in
movs
adc
in
pushf
add
or
or
ret
iret
push
push
and
loope
fiadd
and
fs
add
fmul
push
jne
add
mov
(bad)
out
inc
and
or
inc
nop
je
mov
nop
test
inc
js
cs
fucom
movzx
lea
or
jecxz
outs
out
and
stos
xchg
(bad)
sbb
shr
adc
cwde
add
add
add
cwde
clc
mov
sbb
in
xor
(bad)
rol
adc
sub
sub
mov
or
mov
sub
imul
ret
lea
jo
shl
or
or
les
call
sbb
push
xor
push
clc
cmc
sbb
xor
inc
xchg
jmp
add
les
sub
push
push
jnp
pushf
push
mov
inc
mov
or
adc
sub
cmp
call
push
mov
add
hlt
or
dec
mov
jnp
cs
jl
sahf
add
mov
pop
jb
add
pop
fsubr
add
mov
(bad)
cmps
adc
(bad)
sti
aas
xor
mov
sbb
jne
sbb
test
leave
inc
add
scas
push
push
addr16
movs
jo
fs
add
call
xchg
sub
inc
cld
mov
fisttp
jno
sbb
mov
(bad)
adc
or
cli
(bad)
sti
add
xchg
xor
pop
and
and
inc
ja
inc
inc
cmp
cmp
mov
add
jno
pop
add
xor
pop
mov
or
jo
vphsubdq
ret
add
or
cmp
and
adc
adc
add
add
mov
xor
mov
mov
daa
add
inc
and
cmp
retf
cmp
inc
xor
dec
out
test
fwait
or
ret
sub
adc
test
adc
add
xchg
xchg
shl
add
adc
cdq
jecxz
push
mov
dec
lock
cmps
pop
fnstsw
adc
pop
push
cmp
nop
inc
and
mov
mov
jb
aam
xlat
cmps
push
push
loope
add
in
xor
inc
adc
ret
nop
movs
loope
pop
mov
jmp
sub
or
je
sub
jne
pop
loopne
aaa
test
adc
(bad)
mov
adc
popa
das
push
daa
inc
and
inc
and
inc
fdiv
adc
or
retf
mov
jnp
fimul
pop
pop
test
mov
pop
sub
dec
sbb
xor
pop
push
pop
or
in
jmp
retf
mov
sbb
mov
adc
outs
add
add
pushf
xchg
aam
in
outs
jmp
loopne
fwait
jge
mov
dec
pop
dec
or
hlt
mov
neg
mov
mov
and
add
clc
sti
and
cmp
jnp
xchg
and
push
sbb
call
call
jmp
pop
fwait
xchg
push
add
into
ss
mov
and
jmp
enter
sar
cdq
mov
sbb
push
lock
ret
push
jl
push
push
nop
test
(bad)
ins
xchg
push
cwde
push
jge
test
or
jecxz
add
xchg
xor
sub
cmpxchg
test
jl
ret
mov
mov
je
clc
sub
jbe
jb
mov
outs
xchg
ror
adc
popa
sbb
pop
repz
add
das
cmp
or
imul
arpl
mov
outs
neg
push
aas
add
ins
fidivr
pusha
mov
(bad)
ds
stos
call
(bad)
cmp
ins
push
out
inc
or
sbb
retf
inc
push
pop
or
adc
mov
sub
mov
jnp
add
jo
in
sub
push
add
lea
enter
clc
mov
cmovb
sub
xor
xchg
push
mov
adc
add
pop
cmp
pop
mov
xor
push
in
mov
cmp
aam
mov
add
inc
(bad)
ja
daa
ficomp
adc
jl
nop
fwait
daa
pop
mov
mov
icebp
ror
mov
adc
and
test
aas
mov
add
test
test
ds
int
add
inc
outs
test
mov
je
fld
xor
mov
dec
je
sbb
jmp
mov
or
adc
out
mov
div
xchg
add
sub
ret
hlt
and
jecxz
out
je
jg
test
inc
sbb
sbb
pop
adc
add
xchg
add
and
aas
lock
and
ds
pop
xchg
dec
mov
push
fimul
or
push
mov
or
mov
popf
dec
mov
add
cmp
and
xor
inc
(bad)
inc
jne
shl
add
inc
mov
and
pop
and
es
dec
jo
jmp
jae
outs
jmp
adc
or
pop
dec
jne
mov
and
adc
push
dec
jb
shl
push
aaa
or
shl
jo
pop
jne
sahf
pop
jl
push
mov
jg
out
fisttp
push
(bad)
sar
mov
adc
leave
(bad)
clc
ins
rol
mov
jns
inc
dec
mov
dec
sbb
bound
mov
ds
add
jbe
(bad)
mov
(bad)
fisttp
loopne
clc
pushf
mov
xor
xchg
and
push
call
jb
fdiv
pusha
test
test
je
sub
pusha
or
ret
fsub
retf
inc
mov
and
push
daa
es
shl
aas
in
push
push
cs
mov
xor
mov
jmp
jge
std
mov
and
mov
test
or
outs
pusha
or
add
dec
lds
push
and
addr16
xlat
jno
and
je
jno
and
sub
movs
bound
lahf
cmp
mov
sub
mov
inc
or
mov
or
retf
pop
ins
pop
or
dec
or
clc
jo
pop
sub
cmp
das
inc
call
sub
sbb
outs
les
add
sub
inc
inc
addr16
xchg
cdq
shl
cdq
pop
enter
or
aaa
inc
rcl
sbb
jno
mov
push
mov
pop
iret
mov
loopne
jne
aad
mov
ret
out
out
xor
test
jbe
in
xor
mov
and
adc
cld
jmp
fs
jbe
adc
(bad)
or
and
push
lea
mov
push
or
lea
add
push
sub
xor
sub
pusha
sbb
dec
loopne
ins
xchg
bound
inc
inc
jno
inc
sub
pop
lock
ins
dec
jbe
or
leave
lea
xor
fwait
inc
add
in
je
mov
sbb
xlat
jnp
mov
sbb
mov
and
mov
adc
push
test
mov
hlt
(bad)
ret
sar
pop
jmp
xchg
add
xchg
cwde
mov
cmp
mov
retf
adc
mov
cmp
jne
push
loope
adc
xchg
dec
pop
adc
loopne
dec
adc
(bad)
cwde
scas
and
jo
dec
pusha
fwait
or
cmps
sbb
pop
jno
fadd
xchg
gs
push
cmps
xchg
ins
test
mov
and
lds
cmp
adc
xor
sti
es
add
je
cmps
inc
sub
mov
jnp
gs
inc
aaa
mov
inc
xchg
inc
cmp
pop
pop
and
repnz
lea
(bad)
lock
xchg
dec
mov
cmp
in
nop
test
sbb
fadd
sahf
not
pop
add
push
out
cmp
das
lea
mov
je
ret
stos
push
push
(bad)
and
push
mov
shl
and
mov
ds
pushf
and
mov
into
rcl
dec
test
adc
pop
test
dec
ja
test
int
or
push
(bad)
mov
or
or
int3
rcl
fisubr
push
or
xor
dec
test
jl
stos
mov
(bad)
push
xchg
into
push
and
sbb
push
dec
inc
and
mov
lock
pop
dec
adc
sti
or
test
jne
jne
cmps
cdq
cmps
ror
cld
mov
push
test
push
les
mov
xor
lock
test
stos
nop
inc
xor
inc
stos
aaa
int3
add
inc
mov
popa
call
cmp
sbb
dec
xor
sar
hlt
mov
mov
xor
test
xchg
sbb
mov
call
movs
dec
arpl
sbb
push
push
sbb
into
imul
call
push
sar
push
gs
dec
jae
leave
lds
loopne
mov
sete
fld
mov
pop
mov
pop
imul
xadd
(bad)
jbe
sub
enter
adc
xchg
adc
and
lock
push
add
push
jbe
xchg
scas
or
jg
or
test
popa
ret
sbb
add
idiv
out
or
inc
mov
jns
mov
jp
jo
mov
call
clc
mov
xchg
cmp
jle
sub
jl
(bad)
and
mov
dec
and
push
mov
sbb
add
cmp
lahf
daa
and
add
dec
jno
jmp
and
jg
movs
cli
sahf
inc
push
sbb
test
sbb
sub
sub
pop
rcl
jo
das
add
adc
pop
cs
xor
or
cmp
add
add
adc
dec
xchg
es
popa
loop
xchg
lods
rcr
mov
mov
aas
xchg
pop
xor
test
icebp
and
out
dec
sub
mov
xchg
pop
push
mov
mov
xor
mov
out
and
adc
test
inc
bound
pusha
push
inc
sub
dec
mov
jbe
and
dec
ds
and
xor
loop
adc
pop
add
dec
fcom
lods
cld
sti
ficomp
pop
sbb
cmp
jne
pop
in
push
xchg
or
cmp
ja
fwait
xor
and
or
sbb
(bad)
or
jl
mov
leave
and
dec
and
add
call
scas
hlt
jne
jp
mov
jo
jne
and
leave
xor
scas
jns
mov
(bad)
dec
aam
cld
or
out
fdivr
jne
imul
mov
push
enter
test
mov
adc
pop
mov
mov
mov
shl
jmp
push
das
dec
cmpps
pop
pop
(bad)
mov
push
imul
icebp
loop
xlat
push
push
ret
xchg
je
dec
fdivrp
mov
sbb
push
and
lds
inc
(bad)
xor
outs
inc
test
jmp
loopne
inc
jb
je
dec
je
jmp
pop
dec
jmp
popf
jmp
pop
mov
ds
xchg
jmp
das
pusha
scas
test
cmp
adc
jbe
ds
cmp
sti
and
arpl
inc
cmp
pushf
add
lods
arpl
iret
add
sbb
jmp
push
mov
clc
mov
in
xor
jo
nop
or
jo
imul
test
push
sub
adc
(bad)
sub
push
adc
cmp
mov
inc
mov
fiadd
pop
or
mov
push
mov
and
leave
dec
sahf
and
jl
xor
inc
jge
mov
mov
cmp
mov
or
ret
pop
lods
push
loope
dec
sbb
and
lods
lds
dec
call
jo
in
xor
loopne
pop
mov
ja
loopne
push
sbb
push
dec
ds
mov
inc
mov
aaa
movs
je
clc
rcl
inc
xor
xor
pop
sub
dec
sub
ror
push
cmps
push
fstp
ror
aaa
sar
adc
rcr
shl
test
inc
mov
je
inc
cs
pop
sub
xchg
dec
sahf
les
add
sub
cmp
nop
in
sbb
cmps
ret
jl
mov
jmp
adc
push
mov
leave
dec
into
and
std
push
mov
pop
sub
arpl
ins
add
or
mov
nop
jo
fmul
int3
or
adc
add
add
inc
and
iret
adc
lods
pop
cmp
adc
loopne
add
rcl
jo
mov
add
out
jmp
inc
sbb
sub
and
loop
cmp
and
dec
jno
scas
cmp
sub
fs
pop
lods
add
daa
(bad)
pop
mov
mov
bound
and
add
aam
fild
cmp
bound
push
fbld
mov
mov
add
pushf
push
call
scas
out
aas
mov
gs
push
in
stos
lods
retf
or
mov
nop
mov
pusha
loope
movs
mov
in
cs
add
mov
outs
mov
les
ror
sbb
retf
mov
fwait
ja
jns
adc
scas
fsubr
bound
and
pop
jnp
sub
cs
sub
outs
bound
aaa
popf
retfw
call
data16
add
out
stos
mov
adc
scas
mov
push
out
or
aaa
inc
jle
das
outs
add
or
fisubr
scas
out
fild
imul
das
sub
addr16
ds
rol
int3
out
sub
call
cs
outs
aaa
cmps
rcr
aad
mov
jecxz
outs
or
fmul
push
push
inc
add
(bad)
push
sub
sbb
add
dec
aaa
lahf
push
repz
jae
or
mov
dec
scas
adc
cdq
fld
data16
outs
dec
popa
imul
sbb
jp
stos
push
mov
pop
xor
iret
xor
dec
dec
push
cwde
sub
xor
daa
ja
cdq
sbb
xor
inc
mov
push
add
aaa
ja
cs
int3
sub
jae
push
aas
pop
cmp
pop
sbb
push
mov
aaa
ja
imul
inc
aaa
int3
pusha
add
sub
or
jg
add
dec
inc
ja
cmp
cmp
outs
cmp
imul
jo
adc
out
push
push
or
push
mov
xor
xor
pusha
cdq
(bad)
pop
out
add
nop
loopne
daa
mov
mov
or
xchg
fidivr
nop
out
sbb
and
push
(bad)
cs
sar
(bad)
adc
ins
mov
stos
sub
sub
add
shl
adc
and
dec
popa
add
and
repnz
gs
or
test
push
test
inc
or
mov
jo
(bad)
pop
mov
inc
adc
and
and
dec
mov
xlat
xor
test
push
lahf
adc
addr16
mov
or
push
out
int3
and
and
lahf
fdivp
or
add
das
lahf
push
push
dec
fild
jecxz
pop
pop
add
inc
sbb
or
adc
test
pop
push
jo
push
pop
pop
inc
inc
xchg
inc
jae
or
pop
pushf
cpuid
ds
fs
jnp
push
push
test
cmp
imul
xchg
jge
mov
mov
cmps
stc
sbb
cmp
jnp
push
inc
sbb
cmp
jg
add
or
push
arpl
ins
popa
inc
jb
outs
out
mov
and
or
pop
and
(bad)
cmp
cmp
dec
sbb
cmovp
das
cwde
mov
sub
push
test
fs
je
outs
outs
iret
pop
sub
xchg
adc
data16
or
pop
hlt
das
cli
pop
adc
xchg
mov
jb
scas
pusha
lock
loopne
scas
and
push
dec
mul
or
ins
inc
(bad)
jne
cli
push
mov
or
or
push
jne
fsubr
psubsb
gs
sbb
xchg
mov
ins
jo
jae
je
push
jns
cdq
std
scas
retf
xchg
iret
test
add
ins
or
iret
xor
mov
adc
pushf
outs
adc
aam
neg
cmps
or
dec
outs
fs
xchg
push
mov
out
rcl
arpl
adc
jne
push
gs
adc
(bad)
mov
jns
add
mov
jb
pop
sti
lds
fwait
dec
gs
fs
xor
push
shl
in
fs
dec
xor
or
ins
gs
js
ins
sbb
mov
adc
retf
test
out
mov
adc
dec
scas
xor
rol
enter
and
lods
mov
mov
or
mov
mov
or
shr
fwait
push
in
fst
pop
movlps
inc
in
ins
je
adc
dec
imul
loopne
add
mov
out
push
mov
orps
(bad)
mov
ins
bound
icebp
rol
and
adc
push
mov
sub
jle
in
imul
fild
dec
ror
jecxz
stos
jnp
aam
adc
outs
outs
outs
je
fmul
ins
nop
sub
aaa
or
add
rcr
inc
dec
add
fld
jp
adc
jle
inc
(bad)
mov
jge
adc
mov
inc
adc
movs
push
movs
cwde
sub
test
dec
nop
icebp
adc
add
retf
cmps
xor
dec
in
pop
jnp
jg
jmp
jg
pop
add
(bad)
inc
movs
mov
sub
xor
jnp
pop
add
jle
mov
ret
jl
repz
rcr
(bad)
jg
jne
or
add
inc
dec
mov
and
call
jg
jg
fs
add
dec
cmp
out
out
adc
(bad)
jnp
popf
daa
dec
scas
aaa
pop
jp
retf
(bad)
push
sub
enter
(bad)
xchg
(bad)
fdiv
dec
or
jae
push
inc
scas
sbb
add
sbb
xchg
inc
inc
test
push
cmp
out
adc
dec
mov
aaa
sar
gs
or
jmp
mov
pop
rcl
fnsave
mov
pop
and
jnp
and
je
fs
cmps
mov
cmps
dec
jle
cmp
mov
(bad)
sbb
pop
sbb
in
pop
icebp
or
dec
push
and
pop
(bad)
rcr
shr
(bad)
xor
lods
xchg
jg
xor
push
inc
inc
call
scas
fs
adc
cmp
xchg
stc
fs
and
jle
fnstenv
ins
retf
loopne
in
dec
jmp
mov
lods
xchg
mov
and
or
in
add
sbb
or
sub
pop
jg
jg
adc
cmp
lea
inc
or
pop
jmp
adc
mov
mov
push
test
lds
aas
mov
cld
imul
xor
scas
dec
dec
aaa
xor
(bad)
dec
cmp
imul
add
and
in
sti
xor
(bad)
call
adc
test
in
dec
dec
mov
(bad)
repnz
jnp
fbld
inc
jo
xchg
outs
jns
and
je
outs
sbb
xchg
mov
push
jns
enter
(bad)
ja
jmp
icebp
std
xchg
and
mov
cmps
nop
xchg
std
pop
arpl
dec
ret
in
jg
outs
(bad)
call
fisubr
jb
adc
lock
push
stos
fisttp
fs
imul
inc
push
das
jae
xchg
xor
test
(bad)
jmp
xor
pop
push
inc
pushf
sbb
cmp
test
jg
jae
sub
cmps
inc
rol
es
inc
xchg
add
in
aas
aam
call
shr
push
fild
pop
xchg
add
add
sbb
xor
in
mov
sbb
daa
test
je
or
in
pop
pop
mov
lds
mov
xchg
pop
xor
data16
clc
jg
data16
pop
pop
jnp
mov
cmp
(bad)
out
add
jl
xor
push
pop
xchg
ins
push
or
int3
push
sbb
and
daa
add
mov
pop
sbb
mov
add
inc
lock
shr
(bad)
mov
out
inc
out
add
inc
lods
cmps
pop
dec
xchg
add
gs
jg
mov
push
mov
add
call
test
mov
cwde
pop
ins
pop
(bad)
jle
mov
xchg
outs
and
or
pop
int3
xchg
ret
das
ss
xor
ja
loopne
rol
sub
jb
lea
pop
sbb
mov
xchg
or
jmp
ds
adc
inc
sahf
test
(bad)
in
fadd
pusha
xor
cdq
ror
xchg
out
mov
ja
(bad)
call
stos
mov
jbe
push
bound
dec
fbstp
xor
lock
add
in
outs
daa
push
cmc
and
or
sub
fwait
sbb
jb
xor
cmp
js
mov
in
inc
(bad)
repnz
cmp
cmp
cwde
pxor
jo
jl
mov
lock
outs
scas
repnz
add
jmp
adc
gs
jns
iret
jae
push
jns
out
in
in
sahf
neg
cs
sahf
out
and
mov
push
pop
aad
mov
loope
ss
in
fisub
push
push
push
fsub
add
aaa
les
add
add
xor
lahf
into
sbb
inc
pushf
cmps
aaa
jmp
fld
or
and
lahf
je
into
add
mov
mov
(bad)
pop
ja
inc
add
jmp
mov
and
add
je
jl
cmp
ins
test
or
add
shl
pop
add
data16
add
out
dec
cli
gs
dec
dec
or
push
add
loopne
addr16
lds
adc
jb
adc
nop
dec
dec
iret
repz
lea
xchg
push
mov
repz
sbb
cmp
repz
jns
pop
scas
cld
push
push
jne
dec
push
xchg
test
inc
dec
lahf
loope
mov
jl
popf
shl
sbb
add
mov
mov
dec
leave
bound
adc
stc
pushf
xchg
dec
or
dec
inc
call
jo
add
pop
or
inc
xchg
mov
aas
cld
movaps
mov
mov
ror
in
or
loop
in
push
into
pmaxsw
aas
pxor
fisub
(bad)
(bad)
(bad)
out
lods
(bad)
mov
inc
mov
fdiv
enter
enter
nop
pminsw
in
ins
in
fs
lahf
in
hlt
paddsb
pop
je
fyl2x
mov
aad
(bad)
mov
pavgw
mov
fisttp
jle
leave
adc
pop
dec
pop
in
call
fst
popf
dec
pmulhuw
into
jg
mov
out
xchg
scas
add
add
daa
lds
jns
(bad)
push
push
jns
push
mov
xor
cmp
repz
rep
jne
test
repz
lea
cmp
repz
vpmullw
idiv
repz
cmc
std
add
mov
inc
sub
iret
cmp
sbb
addr16
fisub
(bad)
push
jno
lods
mov
push
xor
lock
add
fadd
clc
mov
push
pop
test
aaa
addr16
pop
fiadd
imul
data16
js
jle
call
cs
sar
add
rcl
js
call
push
pusha
cmp
mov
pop
jbe
idiv
aam
stc
mov
push
fs
push
mov
mov
xchg
ret
sbb
add
jecxz
pop
jmp
jge
inc
mov
hlt
pinsrw
popf
xchg
cmp
fs
push
dec
into
leave
cmp
lds
pextrw
setle
neg
cmp
jg
xchg
cmp
pextrw
pextrw
push
and
pextrw
aas
ffree
out
pushf
fmul
lds
lds
leave
cmp
daa
lds
lds
out
dec
iret
lds
pextrw
bswap
cmp
daa
lds
lds
jae
dec
into
lds
lds
lds
in
pushf
xchg
lds
lds
pushf
rol
lds
daa
out
pushf
lds
lds
lds
das
outs
cdq
fsub
daa
vcvtsi2sd
adc
int3
enter
push
fsub
jns
out
pop
nop
cwde
mov
sahf
mov
ror
fdivr
out
loopne
lock
add
out
fimul
push
adc
and
xor
out
cmp
push
pop
out
sahf
out
push
out
sahf
mov
out
out
mov
push
push
jo
ss
push
pop
and
mov
psubsb
aam
add
aaa
mov
cmp
mov
stos
in
sbb
pop
ja
push
dec
pop
push
(bad)
popf
fsubrp
out
push
stc
push
add
push
ins
push
pop
scas
push
nop
cmp
lahf
push
push
push
or
imul
in
push
xchg
jle
pop
push
push
sar
xchg
dec
scas
xor
mov
jbe
add
xor
inc
dec
add
xchg
dec
or
jo
add
mov
push
test
test
push
jb
sbb
push
add
adc
je
cs
adc
jne
push
addr16
(bad)
mov
pop
mov
sub
mov
addps
das
add
cmc
mov
mov
das
idiv
sub
mov
mov
jns
out
jns
scas
in
jns
aas
jns
pop
mov
jns
das
test
jns
retf
jns
jns
repz
mov
mov
mov
or
mov
jns
out
jns
into
retf
jns
jns
sub
psllq
into
mov
mov
mov
pop
or
mov
mov
mov
js
lds
pop
push
and
repz
mov
in
cmc
cmp
test
std
add
sbb
and
iret
repz
dec
push
pop
gs
jne
iret
repz
test
iret
rep
lods
mov
(bad)
cmp
int
fucom
in
cmc
ja
lock
add
push
sahf
out
sahf
lods
mov
jge
(bad)
ror
jns
popf
xchg
into
call
jle
dec
add
jl
xchg
add
push
adc
mov
push
jl
push
push
mov
sub
aam
pop
mov
push
cmp
repnz
add
sub
and
sub
cmp
fdiv
xchg
sub
adc
scas
pop
xor
fcmovne
stos
add
mov
mov
(bad)
sub
das
(bad)
dec
(bad)
shrd
(bad)
pop
cs
into
retf
push
(bad)
mulps
sub
jg
into
retf
jg
iret
push
movsx
(bad)
aad
jle
into
(bad)
jg
out
sub
lahf
(bad)
jg
jg
addr16
(bad)
jg
fcom
jg
addr16
jg
into
retf
jg
mov
jg
jb
(bad)
jg
lods
pushf
jg
cs
outs
(bad)
adc
daa
(bad)
adc
sahf
push
call
push
movs
popf
in
cmp
lods
mov
pusha
(bad)
out
sahf
out
aad
in
cmc
jns
neg
push
adc
sahf
out
xor
(bad)
jns
push
pop
gs
jns
out
push
jge
lea
out
lods
mov
lds
neg
push
jne
test
jns
out
dec
push
pop
gs
add
shl
pop
test
mov
cs
and
push
add
cmp
jle
and
dec
add
(bad)
dec
adc
ret
(bad)
into
in
fstp
xor
icebp
or
push
scas
rcr
pop
mov
rcl
push
xchg
mov
mov
xchg
push
popf
dec
fs
sahf
out
sahf
pop
popa
imul
jns
xchg
cdq
mov
out
mov
out
sahf
fabs
jmp
jns
idiv
and
sahf
out
sahf
xor
inc
dec
push
pop
jns
out
popa
imul
out
inc
mov
push
sub
cmp
and
push
or
adc
jmp
jle
es
addr16
clc
data16
add
addr16
and
xor
or
xor
(bad)
or
cmp
push
xor
pop
pop
pop
push
push
push
test
movs
xchg
ds
xchg
(bad)
dec
repnz
add
shr
das
push
clc
sysret
pusha
dec
outs
xor
pcmpeqb
add
invd
add
cmp
fucomip
sets
in
dec
dec
xchg
outs
hlt
push
jo
or
cmp
lock
fsubrp
lods
fiadd
or
movzx
aaa
out
psubw
cmp
cmpps
pusha
jb
push
sub
dec
mov
pop
sbb
test
test
test
push
pop
push
str
add
psrlw
add
rcr
jo
cmp
mov
push
jo
jo
ror
rol
jo
jo
ror
shl
push
jo
sar
femms
nop
loope
ror
(bad)
shl
enter
ror
jo
jo
ror
ror
add
sar
sbb
mov
add
add
psrlw
shl
cmp
cmp
rcr
pushf
add
add
psrlw
pushf
add
pushf
add
pushf
add
add
sahf
add
maxps
into
add
ror
ror
add
add
ror
ror
dec
add
adc
daa
rcr
xchg
jb
fiadd
xchg
imul
inc
dec
push
pop
bound
cmps
fnstcw
jb
or
call
sahf
mov
loop
sahf
out
jmp
jns
in
adc
and
jmp
jns
out
cmp
push
pop
jns
jnp
bound
jbe
push
adc
sahf
addr16
out
loopne
dec
push
cli
add
ja
push
mov
mov
out
sahf
out
out
idiv
jns
out
push
pop
push
push
push
push
es
sahf
out
ds
push
pop
cmp
rcr
imul
repz
repz
repz
mov
ret
retf
shl
aam
out
out
push
outs
test
inc
push
ins
aaa
clc
mov
push
xor
push
add
push
add
push
je
bound
adc
fldenv
or
or
cld
sbb
outs
outs
pop
cmp
sub
adc
cwde
add
mov
or
pusha
ror
bound
stc
pop
je
add
ror
loope
push
xor
in
add
adc
imul
sbb
mov
test
push
ins
divps
retf
jns
(bad)
(bad)
sahf
xchg
repz
ins
(bad)
aas
mov
ins
setl
jb
out
(bad)
ins
(bad)
bsf
(bad)
xchg
sti
dec
lock
(bad)
(bad)
out
mov
ins
por
das
ins
(bad)
pop
out
mov
(bad)
bswap
jns
das
ins
(bad)
psllq
into
ins
(bad)
(bad)
(bad)
mov
ins
setl
(bad)
comiss
in
ins
(bad)
(bad)
jne
push
cmp
outs
ins
adc
das
xchg
fld
ins
adc
cmp
fiadd
mov
jns
out
sahf
or
mov
ror
out
sahf
out
loope
icebp
stc
jns
out
add
and
out
sahf
out
cmp
push
sahf
out
sahf
pop
popa
imul
jns
xchg
cdq
mov
mov
ror
test
and
enter
jne
js
dec
push
hlt
outs
push
mov
add
jo
adc
push
add
rcl
jne
adc
mov
aad
dec
add
add
pop
xor
inc
aad
sub
push
shl
retf
icebp
dec
add
aad
out
cmp
jle
push
xchg
cdq
mov
test
out
sahf
out
fabs
jmp
sahf
stc
add
and
jns
out
xor
inc
dec
sahf
out
sahf
push
pop
popa
imul
or
mov
pushf
pop
(bad)
dec
test
gs
pop
popf
daa
dec
scas
aaa
pop
jp
retf
jl
or
ds
ja
aam
xchg
nop
push
add
(bad)
scas
pushf
cmp
push
dec
aas
in
push
dec
hlt
sar
pop
scas
mov
dec
sbb
push
mov
loop
stos
xor
mov
cmp
jg
movs
dec
xchg
sub
sub
(bad)
cmp
add
adc
inc
dec
xchg
xlat
icebp
mov
cmp
push
inc
in
push
sub
std
add
repz
adc
cmp
inc
dec
push
pop
gs
rep
jne
test
xchg
popf
movs
lods
mov
cmp
repz
int
fucom
sbb
cmc
std
add
sahf
out
adc
int
push
iret
aad
fisttp
ret
jae
push
inc
scas
sbb
xor
unpckhps
jbe
xchg
clc
pop
mov
(bad)
fild
cdq
outs
mov
scas
fist
cmp
xor
dec
imul
add
push
imul
mov
add
pushf
sahf
adc
iret
and
mov
pushf
(bad)
cmp
mov
movsx
mov
cmp
fcmovu
call
jg
mov
js
into
leave
movsx
mov
and
setae
dec
mov
out
hlt
pushf
pushf
movsx
setae
dec
mov
out
pushf
pushf
movsx
mov
daa
mov
js
into
mov
dec
into
leave
cmp
sahf
xchg
jae
movsx
mov
or
adc
daa
mov
ss
cmp
xchg
push
mov
pop
gs
repz
jne
test
xchg
popf
movs
lods
mov
repz
mov
in
iret
repz
cmc
std
add
repz
adc
cmp
inc
dec
push
pop
idiv
rep
jne
test
jg
repz
mov
out
adc
jbe
fdivr
dec
mov
jmp
lods
dec
jle
sbb
mov
inc
add
mov
jne
jns
adc
add
mov
sub
fmul
arpl
and
adc
or
dec
movs
push
jo
call
outs
push
stos
or
neg
and
push
mov
xchg
inc
sbb
mov
xor
sub
pop
sub
fldcw
sbb
jbe
test
js
bndstx
test
unpcklps
mov
sub
fisub
(bad)
cmp
popf
mov
jp
addr16
cmpps
dec
out
sub
psrld
mov
pop
out
xor
mov
cmp
bswap
lods
add
and
mov
xchg
mov
outs
cmc
pop
sbb
dec
punpckhwd
mov
pop
fwait
stc
mov
push
cmp
mov
add
setge
or
unpcklps
mov
lods
mov
cmp
pop
mov
test
mov
sub
ficomp
xlat
cmp
fwait
jns
out
mov
out
sahf
out
rcr
jecxz
jns
jnp
repz
add
out
sahf
out
sub
cmp
out
sahf
dec
push
pop
arpl
jns
out
jnp
mov
out
stos
mov
jnp
pop
jns
out
push
arpl
xor
repz
out
push
add
pop
iret
repz
pop
daa
das
aaa
aas
inc
cmp
repz
push
pop
outs
repz
repz
xchg
iret
movs
lods
mov
(bad)
int3
cmp
repz
fsub
in
hlt
iret
repz
cld
add
or
adc
and
mov
rol
(bad)
cmp
repnz
mov
add
es
into
jo
into
adc
jg
push
jns
mov
add
sbb
sub
jo
adc
out
in
and
adc
adc
sub
xchg
and
inc
loopne
imul
cmp
jns
pushf
mov
cmp
adc
adc
push
stos
iret
mov
lock
rcl
sub
lods
outs
movlps
sar
ret
mov
nop
inc
mov
movs
xor
add
dec
mov
sbb
xchg
add
(bad)
aas
ror
sub
ds
sbb
adc
add
ret
and
and
mov
sbb
adc
jge
xor
repz
push
push
xchg
cmp
repz
dec
push
pop
gs
jne
iret
repz
test
iret
rep
lods
mov
(bad)
cmp
int
fucom
in
cmc
repz
into
or
iret
cmp
inc
inc
dec
repz
repz
pop
gs
jne
repz
xor
std
add
iret
repz
adc
mov
pushf
jle
pop
xchg
ds
add
sahf
adc
or
mov
or
lahf
dec
shl
dec
sub
nop
dec
mov
or
loopne
loop
push
pop
sub
mov
test
cmp
out
push
push
inc
inc
je
bound
push
xchg
inc
jne
out
cmps
or
outs
jne
aaa
popf
(bad)
idiv
outs
jae
je
jb
outs
fs
inc
jbe
aad
pop
or
ins
xor
or
inc
lea
lahf
xchg
(bad)
dec
xchg
adc
xor
loopne
inc
cmp
cmp
sbb
or
cmp
mov
cmp
das
xchg
add
mov
add
dec
push
xchg
jnp
cmp
add
add
adc
aad
push
shr
pop
push
adc
xchg
cmp
push
push
loope
ins
xchg
push
sahf
out
sahf
popf
movs
lods
mov
lds
out
int
fucom
in
sahf
neg
jle
push
adc
jns
sub
jns
out
push
pop
gs
sahf
out
sahf
jne
test
out
movs
lods
mov
lds
into
jne
jge
dec
jle
cmp
out
call
dec
mov
(bad)
sbb
in
inc
push
pushf
jb
bound
xchg
mov
mov
add
dec
inc
xlat
or
push
sub
adc
int
scas
add
xor
jae
dec
outs
imul
fimul
mov
cs
inc
ja
xor
pop
iret
popf
int
push
and
pop
sub
cwde
jge
cmp
cvtps2pi
neg
ss
rdmsr
dec
xor
test
cmp
xor
mov
cmp
(bad)
mov
dec
sbb
pushf
setl
xchg
das
pushf
sbb
ud1
pushf
setl
not
test
pushf
pxor
dec
out
pushf
(bad)
(bad)
bsr
pushf
bts
les
pusha
jo
mov
pop
out
and
pushf
setl
cmp
push
imul
inc
pushf
setl
add
jp
hlt
push
jb
pushf
setl
cmp
pushf
syscall
cmp
gs
popf
sbb
sbb
into
popf
setl
pushf
push
jb
mov
cmp
sbb
pop
sub
mov
out
add
or
fadd
mov
mov
test
pop
mov
mov
cmovo
(bad)
cmp
ret
jae
(bad)
mov
cmp
js
or
add
add
mov
mov
pop
mov
mov
mov
lock
jo
mov
loopne
jo
mov
mov
cmp
sbb
add
add
js
fmul
jo
sub
maxps
push
mov
mov
xor
mov
mov
outs
retf
cmp
adc
or
iret
adc
repz
ror
sahf
out
cmp
cli
add
out
sbb
sub
cmp
jns
out
dec
push
pop
bound
jb
or
call
sahf
out
retf
loop
loopne
sahf
jmp
retf
jns
push
stos
push
mov
ret
lahf
out
lea
repz
rep
jbe
xchg
repz
mov
cmp
repz
(bad)
into
(bad)
fsubrp
cmp
sti
add
iret
repz
and
xor
repz
repz
dec
push
pop
arpl
rol
fld
loope
cmp
stc
add
iret
repz
and
xor
rol
into
repz
dec
push
and
les
fbstp
push
adc
aas
mov
inc
loopne
dec
mov
ror
sbb
(bad)
mov
and
xor
adc
xor
push
fild
int3
cmps
fld
jl
js
inc
pop
daa
popf
icebp
shl
inc
daa
popf
push
mov
or
mov
add
or
jecxz
fcom
xor
inc
jbe
paddb
imul
push
lods
sbb
cmp
sti
ret
outs
repnz
cmovbe
gs
mov
xchg
ret
aas
(bad)
ret
adc
js
adc
xlat
add
pop
ins
xchg
aaa
adc
enter
mov
jg
mov
or
and
mov
call
mov
mov
aaa
sub
(bad)
sub
push
adc
xchg
push
pop
sbb
cmp
cs
or
add
(bad)
loopne
js
cmp
cmp
es
iret
sbb
mov
push
les
out
mov
mov
jns
test
mov
out
rcr
loopne
jns
jnp
lock
add
out
sahf
out
sub
cmp
out
sahf
dec
push
pop
pusha
push
jns
or
out
test
mov
push
push
pop
jns
out
pusha
push
sub
inc
cmp
out
or
loope
jmp
iret
icebp
stc
icebp
jle
fnstenv
ins
retf
loopne
jp
sar
in
dec
jmp
fs
mov
scas
xchg
scas
fs
mov
jbe
jne
jns
add
push
and
add
push
push
test
or
mov
push
xchg
jle
pop
scas
pop
lea
mov
pop
jne
and
or
cmp
or
daa
dec
adc
test
ins
ja
xor
ss
leave
dec
pop
imul
shr
es
loopne
dec
mov
popf
out
inc
lock
repz
(bad)
movsx
sub
pop
(bad)
push
(bad)
xlat
pop
loopne
jg
cs
imul
push
mov
inc
mov
enter
out
cmp
clc
add
push
adc
repz
and
xor
repz
repz
dec
push
pop
pusha
iret
repz
push
nop
cmp
repz
mov
cmp
repz
fsub
cmp
cmp
(bad)
nop
push
cwde
mov
test
jae
mov
repz
dec
push
pop
sub
cmp
jmp
add
jns
neg
or
adc
and
xor
mov
pop
lock
xchg
mov
add
cwde
pop
int3
daa
fimul
je
lock
and
or
push
outs
iret
sbb
jp
mov
test
jmp
jno
inc
mov
imul
xchg
lea
cs
xor
lods
jnp
ret
pop
xlat
dec
sub
jnp
adc
dec
(bad)
dec
jl
dec
pop
pop
mov
xchg
push
push
fldcw
push
pop
fwait
gs
pop
outs
out
dec
test
call
sahf
out
xor
inc
dec
push
out
sahf
out
fs
je
sahf
out
sahf
test
sahf
out
mov
(bad)
int3
aam
jns
out
in
hlt
cld
out
out
add
or
adc
and
push
sahf
out
sahf
xor
inc
dec
push
pop
out
out
jns
and
push
or
iret
repz
sahf
sbb
pop
out
hlt
cld
mov
(bad)
movs
lods
repz
repz
pop
gs
into
repz
jne
test
mov
out
cmps
jmp
xor
sbb
cmp
rsqrtps
dec
dec
nop
sbb
pop
inc
pop
and
out
push
popa
mov
jmp
xchg
push
cmp
pop
(bad)
iret
jmp
jmp
js
popf
fsubrp
popf
mov
cmp
sub
jmp
aad
push
out
pcmpgtb
jge
push
push
or
scas
in
jg
retf
jge
xchg
or
or
repz
into
or
or
or
idiv
aas
paddsw
cmp
(bad)
xchg
jnp
scas
or
or
or
in
pushf
wbinvd
wbinvd
aas
mov
or
or
das
out
wbinvd
wbinvd
divps
retf
jns
wbinvd
pop
or
das
out
wbinvd
wbinvd
divps
retf
jns
wbinvd
wbinvd
pushf
xchg
repz
or
or
and
mov
pop
in
pushf
xlat
or
or
jns
das
out
wbinvd
wbinvd
scas
retf
mov
das
outs
or
or
jp
fsub
or
or
cmps
ret
(bad)
jnp
test
popf
inc
push
sahf
out
sahf
inc
dec
push
pop
popa
imul
or
mov
sahf
out
sahf
ror
fabs
jmp
icebp
stc
add
or
adc
jnp
sbb
sub
push
cmp
jns
out
push
pop
popa
imul
or
adc
and
repz
cmp
push
fabs
jmp
iret
stc
add
push
and
mov
outs
stos
cmps
nop
xchg
add
cli
or
add
mov
push
mov
add
fadd
add
movs
push
pop
or
movs
push
push
mov
push
push
test
push
test
and
pop
or
test
xchg
dec
xor
push
push
cs
das
mov
mov
ins
jo
inc
scas
ror
lds
xor
ins
inc
mov
stc
jmp
cld
adc
scas
iret
xchg
mov
sub
mov
(bad)
push
retf
test
push
mov
daa
cmp
mov
or
sahf
push
sbb
outs
rol
iret
repz
fsub
call
cmp
mov
sbb
iret
repz
sub
cmp
push
cmp
repz
pusha
push
iret
repz
cmp
test
mov
iret
repz
loopne
lock
sahf
ja
lock
ror
push
test
jns
out
mov
out
sahf
out
popa
imul
sahf
dec
push
mov
arpl
outs
or
scas
out
ins
xlat
popf
adc
inc
nop
movs
out
push
add
ins
movs
push
daa
push
add
pop
or
ret
inc
les
adc
addr16
add
xor
in
mov
mov
test
add
scas
les
dec
inc
ror
add
test
push
adc
jbe
xchg
(bad)
rcl
stos
xor
pop
add
pop
popf
outs
cvtps2pd
cmp
scas
pop
mov
pushf
inc
js
outs
push
sbb
push
lahf
and
push
xchg
inc
cmps
push
push
push
pop
cmp
repz
push
cmp
xrelease
repz
mov
ror
fdivr
call
repz
(bad)
or
adc
and
xor
cmp
cmp
push
pop
fdivp
cmp
pusha
push
sbb
and
xor
out
sti
jns
jnp
push
or
adc
rcl
fld
loope
out
sahf
out
mov
ror
pop
fist
inc
jo
push
scas
dec
jmp
push
mov
(bad)
adc
mul
xlat
cmp
les
dec
outs
add
add
scas
loopne
sbb
jmp
call
imul
ret
push
add
scas
and
dec
movs
push
outs
lea
inc
xchg
sub
pop
xlat
rol
scas
inc
pusha
xchg
xor
inc
xchg
cmp
add
pusha
sub
jns
or
mov
inc
mov
pop
mov
dec
cvtdq2ps
xchg
cwde
lods
sbb
inc
lods
shrd
mov
shrd
jne
out
cmc
pop
dec
shrd
jns
das
imul
jb
into
retf
shrd
lods
(bad)
pop
fcomi
lods
aas
shrd
cmc
mov
(bad)
lods
psllq
out
lods
shrd
lods
maxps
sahf
xchg
lods
aas
jecxz
pushf
xchg
repz
lods
shrd
das
out
mov
lods
pushf
xchg
jnp
pop
lods
shrd
das
out
mov
lods
into
retf
jns
shrd
lods
seta
jb
lods
shrd
lods
jb
or
mov
shrd
lods
xlat
and
shrd
outs
lods
in
mov
lods
lahf
mov
jmp
lods
int3
xlat
stos
push
push
jmp
stos
cmp
repz
cmps
scas
mov
repz
repz
iret
xlat
(bad)
mov
idiv
pop
jbe
push
pop
repz
repz
daa
das
aaa
aas
iret
repz
inc
dec
push
pop
outs
cmp
repz
jg
(bad)
xchg
repz
repz
cmps
scas
mov
cmp
cmp
(bad)
outs
push
ja
repz
xrelease
pop
addr16
iret
and
jmp
imul
ror
add
mov
xchg
stos
add
push
lods
push
lods
out
pop
xchg
pop
add
call
aaa
pop
cs
xchg
adc
sbb
dec
push
adc
add
inc
pop
pop
sub
popa
lods
iret
jnp
mov
test
and
push
push
xchg
jnp
cmps
mov
out
pushf
pushf
bt
mov
daa
mov
fistp
cmp
jg
mov
iret
leave
cmp
bt
mov
add
mov
into
leave
bt
mov
jae
bt
jb
into
leave
bt
mov
jae
bt
mov
bt
mov
cmp
leave
cmp
cmps
mov
jb
into
mov
das
dec
xchg
imul
inc
sti
xor
dec
movs
jmp
emms
outs
setp
jmp
cmp
pop
imul
por
jmp
push
into
ror
por
js
(bad)
aas
por
lock
ja
jg
push
out
jmp
or
jp
out
sbb
cmp
jmp
jmp
sar
pop
jmp
jmp
out
push
iret
jmp
jmp
pop
jmp
jmp
jae
push
into
jmp
jmp
jmp
loopne
pushf
sub
jmp
pushf
ret
and
maxps
sysret
out
sbb
por
jmp
loopne
cmp
jmp
outs
sbb
xchg
jmp
jmp
jmp
rol
js
(bad)
xor
cmp
jmp
add
ss
adc
and
xor
repz
inc
dec
push
pop
repz
repz
imul
iret
mov
cmp
repz
ror
f2xm1
cmp
repz
icebp
stc
add
jns
ja
or
adc
and
cmp
rol
fstp
pop
iret
repz
ss
outs
ja
xchg
xchg
lahf
cmps
scas
mov
cmp
repz
fdivp
cmp
out
idiv
pop
scas
psllq
repz
pop
pop
daa
das
aaa
iret
repz
aas
inc
dec
push
pop
addr16
repz
ja
xchg
xchg
push
sahf
inc
push
dec
int
fdivrp
jg
and
mov
cmps
nop
pop
arpl
dec
ret
inc
pop
std
es
inc
enter
outs
sbb
xchg
xchg
mov
push
js
adc
dec
xchg
int3
mov
xchg
mov
call
add
jnp
out
ss
pop
push
out
sbb
or
pop
out
jo
jne
add
xchg
outs
outs
mov
jbe
jmp
pop
or
xor
sbb
push
fisttp
adc
push
pusha
stos
pop
scas
cmp
push
or
ud2
comiss
in
or
or
or
or
ud2
pop
fistp
palignr
(bad)
ud2
(bad)
iret
retf
jns
ud2
aas
dec
retf
jns
scas
or
or
repz
into
or
or
or
retf
mov
or
repz
into
or
or
or
in
pushf
xchg
or
or
jns
das
out
ud2
ud2
scas
add
maxps
into
retf
jns
ud2
ud2
xadd
jb
or
or
outs
mov
adc
daa
ja
cmc
jb
adc
movs
mov
push
iret
repz
mov
jne
test
repz
xchg
popf
movs
lods
repz
repz
vpmullw
repz
fucom
in
cmc
std
add
cmps
or
sub
xor
pop
cmp
repz
ins
jne
test
cmp
popf
pop
cmps
cmp
repz
push
push
ins
xor
idiv
dec
xlat
dec
mov
(bad)
repnz
les
rol
sub
stos
add
data16
pop
ja
not
rol
ins
add
or
jmp
push
push
sub
cwde
ds
aaa
aad
mov
push
fwait
mov
xor
inc
inc
jo
dec
outs
outs
es
jnp
call
outs
arpl
mov
adc
dec
xchg
adc
loope
add
push
sub
sar
add
dec
test
push
bound
popa
xor
or
femms
pop
aas
jns
unpckhps
dec
mov
sahf
out
lock
sub
out
xor
inc
dec
push
out
sahf
out
popa
imul
or
mov
ror
out
sahf
out
loope
icebp
stc
jns
out
add
push
adc
and
xchg
out
cmp
pop
mov
call
stc
push
aaa
adc
lock
push
stos
fisttp
fs
test
pop
loope
fucomip
ss
mov
out
add
pop
mov
adc
lahf
icebp
adc
enter
call
sub
mov
sub
mov
add
cld
pop
setle
inc
and
psubq
cli
ficomp
inc
pop
shl
loope
test
pop
push
(bad)
iret
repz
push
dec
push
pop
popa
cmp
repz
jno
or
mov
repz
mov
loope
iret
repz
icebp
stc
add
or
fdiv
cmp
adc
and
xor
repz
repz
inc
dec
push
pop
popa
cmp
cmp
jle
push
and
(bad)
aas
fdiv
xor
cmps
scas
mov
pop
push
inc
pushf
sbb
imul
(bad)
cmp
call
mov
pop
cld
daa
add
mov
out
xchg
add
push
dec
ja
or
add
scas
mov
hlt
outs
pop
or
cdq
pushf
pop
pop
pop
push
and
pop
sub
push
pusha
cmps
cmc
mov
in
and
mov
arpl
test
cmp
pop
cmps
out
hlt
pushf
inc
retf
mov
shl
dec
mov
mov
mov
leave
cmp
setae
dec
mov
mov
mov
neg
mov
in
lea
mov
pushf
push
cmp
movzx
adc
out
movzx
(bad)
daa
out
sahf
mov
mov
mov
leave
cmp
movzx
mov
daa
ja
dec
mov
mov
mov
leave
cmp
movzx
mov
xchg
jae
dec
mov
mov
mov
in
pushf
movzx
mov
pushf
push
cmp
mov
pop
mov
daa
out
movzx
mov
add
movzx
outs
in
pop
cmps
mov
mov
xor
retf
mov
mov
mov
pop
iret
jmp
movs
lods
sahf
out
sahf
mov
vpmullw
jnp
out
in
cmc
std
add
fimul
sub
jns
inc
dec
push
pop
out
sahf
out
ins
jne
test
xchg
popf
movs
lods
mov
sahf
out
mov
jne
sahf
out
sahf
jge
lea
push
add
es
inc
dec
hlt
mov
xor
jbe
sub
push
into
inc
rol
iret
sbb
xor
iret
lods
punpckhdq
(bad)
int3
jb
jae
or
iret
sub
push
adc
iret
add
pop
push
adc
adc
bswap
pop
iret
jae
cmp
std
test
sahf
out
cmps
shl
sbb
out
xor
out
sahf
out
gs
jne
sahf
out
sahf
test
jns
out
mov
vpmullw
jns
out
in
cmc
std
iret
repz
push
adc
ja
cmp
aad
fld
in
jns
out
cmc
int
mov
ror
aam
call
shr
pop
jbe
fisub
iret
test
ret
push
sub
dec
out
sbb
pop
int3
psrld
aaa
sbb
push
xchg
mov
std
arpl
gs
vmptrld
pop
(bad)
cmp
(bad)
test
fnstcw
test
(bad)
cmp
in
out
(bad)
shufps
setae
cmp
(bad)
out
pushf
pushf
cmpxchg8b
(bad)
bswap
cmp
daa
(bad)
cmpxchg8b
call
aas
cmpxchg8b
shl
fdivp
jg
leave
cmp
(bad)
and
jg
jb
into
leave
cmpxchg8b
(bad)
setl
vmptrld
out
hlt
pop
(bad)
cmpxchg8b
pushf
pushf
xchg
jae
cmpxchg8b
(bad)
cmp
out
cmpxchg8b
(bad)
cmovle
leave
cmp
cmpxchg8b
(bad)
leave
cmp
(bad)
jb
into
(bad)
cmpxchg8b
(bad)
cmovl
sahf
xchg
(bad)
das
outs
(bad)
xchg
leave
ins
mov
adc
cmps
(bad)
mov
mov
les
push
jno
or
mov
jns
out
ror
fnstcw
jmp
or
jns
out
adc
and
xor
inc
dec
push
pop
popa
jns
out
imul
sahf
out
cdq
cmp
loope
out
pop
and
xor
adc
loope
pop
outs
call
mov
(bad)
mov
aam
sub
jg
lea
inc
mov
sub
sub
dec
cmp
push
add
adc
jmp
inc
dec
jae
ins
outs
bound
push
jl
pop
xor
or
gs
add
cmps
sub
ins
inc
clc
aaa
aam
movs
inc
ins
popa
jae
push
jns
push
sbb
fs
fsubr
(bad)
jae
pop
push
mov
gs
shr
or
movs
push
daa
pop
call
xchg
jnp
sub
sub
jp
out
xor
emms
cli
bsf
(bad)
pmulhw
jmp
(bad)
femms
(bad)
cmp
nop
pmulhw
vmwrite
das
out
(bad)
(bad)
(bad)
vmwrite
retf
(bad)
(bad)
(bad)
psllq
fsubrp
(bad)
jg
mov
(bad)
js
into
(bad)
pavgusb
pop
into
retf
jge
(bad)
(bad)
(bad)
setl
(bad)
(bad)
divps
cmc
mov
setl
(bad)
(bad)
comiss
in
(bad)
(bad)
(bad)
(bad)
bswap
retf
jns
(bad)
(bad)
(bad)
(bad)
vmwrite
pop
(bad)
pop
into
retf
(bad)
(bad)
(bad)
pfadd
xchg
repz
(bad)
comiss
in
mov
daa
pop
shr
leave
xchg
jns
jmp
push
jns
out
sahf
out
xchg
cdq
mov
sahf
mov
ror
fnstcw
out
loope
icebp
stc
add
or
adc
and
xor
out
cmp
push
pop
out
sahf
out
imul
sahf
mov
dec
out
sahf
out
push
pop
popa
sub
popf
out
sahf
cmp
adc
and
jp
daa
enter
xlat
(bad)
test
outs
dec
dec
push
movs
retf
outs
fisttp
push
add
mov
adc
jmp
jbe
retf
dec
out
imul
jo
cld
out
pxor
xchg
shl
jns
xchg
jge
and
add
adc
push
jb
in
call
test
adc
mov
test
test
dec
daa
jo
test
push
adc
or
pop
adc
push
cwde
sub
dec
nop
arpl
ins
enter
mov
adc
push
cwde
sub
add
stos
mov
stos
xor
xchg
adc
push
popa
adc
push
test
cmps
ja
adc
adc
dec
mov
mov
stos
xor
ret
push
test
into
adc
push
and
mov
adc
push
test
pusha
dec
adc
cmp
pop
push
(bad)
retf
out
add
(bad)
sbb
sbb
jne
scas
push
mov
repz
repz
cmp
push
iret
repz
popa
imul
xchg
cmp
repz
cmps
mov
(bad)
iret
repz
(bad)
in
idiv
repz
(bad)
or
adc
cmp
repz
iret
repz
outs
jns
lea
inc
imul
push
repz
aas
cmps
shl
iret
jnp
retf
push
aad
mov
into
mov
mov
pop
add
iret
into
cwde
jp
pop
ja
add
xchg
enter
cmc
inc
jmp
inc
arpl
add
imul
loope
mov
mov
mov
lea
les
ret
pusha
sbb
ret
xchg
sub
inc
mov
ins
xorps
ja
mov
out
outs
cs
mov
sahf
out
sahf
dec
push
pop
gs
jne
sahf
out
jge
lea
out
lods
mov
lds
aad
in
cmc
out
out
jns
add
sbb
and
inc
dec
out
jns
out
pop
gs
or
out
push
sbb
std
cmp
jnp
push
add
push
fucom
in
jo
shr
lahf
sub
lahf
jo
lock
je
test
sbb
bndldx
inc
lahf
adc
pop
push
mov
mov
mov
xor
jmp
adc
push
mov
test
adc
fsub
push
xor
cmp
jecxz
cs
in
cmc
std
out
fsubrp
add
sbb
sahf
sub
push
jns
out
pop
gs
jne
out
sahf
out
lea
jns
lods
mov
vpmullw
out
fucom
in
cmc
std
sbb
cs
mov
push
vpmullw
sahf
lods
ins
jne
test
xchg
push
xor
jl
jmp
out
sbb
add
pop
ror
test
push
push
push
or
add
imul
jo
pop
mov
push
xor
xchg
mov
mov
xchg
pop
das
sub
xor
xchg
pop
loop
inc
push
inc
rcr
test
jae
push
aad
xlat
cmps
push
xchg
cmp
repz
mov
cmp
repz
fabs
mov
icebp
stc
add
cmp
repz
sub
cmp
repz
inc
dec
push
pop
popa
imul
or
mov
cmp
repz
popa
push
imul
repz
push
adc
and
jmp
xor
inc
jne
loopne
inc
hlt
inc
fcmovu
dec
push
adc
fld
push
add
jne
punpckhdq
xchg
cmps
lea
fsub
cmp
outs
je
pop
push
sub
mov
push
inc
xor
jnp
inc
mov
push
scas
pop
dec
adc
iret
mov
or
repz
sbb
repz
repz
dec
push
pop
gs
repz
ins
jne
test
cmp
movs
lods
mov
repz
repz
in
idiv
in
cmc
std
add
cmp
repz
out
inc
iret
inc
in
in
push
cmc
std
repz
mov
push
fnsave
into
(bad)
jl
or
xchg
xchg
mov
inc
(bad)
fadd
or
pop
in
jmp
lahf
cli
(bad)
pop
rcl
shl
jae
je
jb
pusha
or
cmp
outs
sbb
xchg
jnp
inc
add
stos
aaa
daa
loope
icebp
mov
push
cmc
mov
out
sahf
mov
ror
fnstcw
out
loope
icebp
stc
add
out
fimul
push
adc
and
xor
out
cmp
push
pop
out
sahf
out
imul
sahf
mov
jns
out
mov
sahf
out
out
jns
add
jns
out
imul
push
out
das
add
add
fisub
loopne
pop
loope
fsub
add
mov
add
das
sbb
dec
adc
nop
shr
dec
inc
jb
jne
sub
stos
or
sti
iret
xor
aad
add
mov
jb
jbe
mov
sub
(bad)
jne
jns
jl
inc
mov
out
sahf
out
push
pop
gs
sahf
out
sahf
jne
test
out
movs
lods
mov
(bad)
sahf
out
aad
in
jns
jnp
cmc
std
add
sbb
and
inc
dec
jnp
out
push
pop
gs
or
ficom
cmps
inc
std
into
repz
add
push
in
jne
push
lods
daa
sub
mov
popf
ds
daa
js
in
push
add
in
adc
push
daa
dec
lock
mov
inc
cmps
in
pop
lahf
sub
push
sbb
int
pop
out
pop
movs
jg
cmps
in
xlat
(bad)
pmuludq
pop
jae
dec
out
(bad)
(bad)
(bad)
pmulhuw
lfs
xlat
aas
punpckhwd
out
clts
jg
xlat
(bad)
(bad)
pavgb
cmp
xlat
(bad)
aas
cmp
not
dec
into
leave
cmp
(bad)
(bad)
mov
xlat
pop
(bad)
cmovle
leave
cmp
(bad)
(bad)
pushf
xchg
jae
(bad)
(bad)
(bad)
out
pushf
xlat
(bad)
(bad)
mov
cmp
(bad)
maxps
cmp
out
(bad)
(bad)
js
into
leave
(bad)
(bad)
das
mov
xor
daa
dec
adc
xlat
adc
out
faddp
repz
cmc
mov
mov
ror
fabs
jns
jns
jmp
or
adc
jns
out
and
xor
sahf
out
sahf
inc
dec
push
pop
popa
imul
or
mov
mov
leave
rcr
jns
and
mov
dec
xor
out
inc
(bad)
lods
cmps
pop
dec
xchg
add
gs
jg
mov
and
adc
inc
dec
push
dec
call
dec
add
imul
hlt
mov
ds
adc
dec
cmps
mov
inc
mov
cmps
in
adc
out
sbb
outs
outs
outs
je
or
ins
mov
pop
push
(bad)
cmp
jae
cmps
mov
sbb
nop
(bad)
mov
aaa
sub
mov
ret
out
lahf
push
icebp
push
jmp
sahf
out
sahf
jbe
and
jns
out
dec
push
pop
gs
out
sahf
out
jge
lea
popf
movs
lods
mov
lds
out
int
fucom
in
cmp
sahf
out
std
add
sbb
and
out
jns
iret
dec
in
jmp
outs
jp
jnp
int
aad
fucom
outs
sub
stos
mov
cwde
pop
ins
pop
(bad)
jle
mov
or
out
jbe
inc
lahf
popa
out
test
jmp
push
rcr
xchg
add
pop
in
jmp
adc
outs
outs
nop
pusha
or
xor
gs
xchg
rcr
icebp
pushf
cwde
setae
scas
push
cmp
(bad)
iret
mov
mov
jge
test
lea
popf
movs
lods
mov
lds
mov
in
cmp
std
add
cmp
repz
and
cmp
repz
dec
push
pop
gs
repz
ins
jne
test
cmp
movs
lods
mov
iret
repz
mov
jne
inc
cmps
pop
loope
dec
mov
or
cwde
out
call
inc
lahf
sub
jb
lea
fsubr
enter
(bad)
push
test
(bad)
jo
add
adc
mov
mov
les
xchg
inc
outs
arpl
mov
pop
pop
inc
xor
fst
dec
mov
xchg
cmps
push
mov
(bad)
xor
test
mov
loop
push
inc
icebp
pushf
stc
push
add
iret
repz
dec
push
adc
and
xor
repz
inc
dec
push
pop
repz
repz
imul
iret
mov
cmp
repz
ror
f2xm1
cmp
repz
icebp
stc
add
jns
ja
or
adc
and
iret
repz
push
fabs
jmp
cmp
shr
jmp
ds
cmp
adc
inc
sahf
test
(bad)
in
fadd
push
outs
out
push
push
mov
repnz
sbb
loopne
mov
jae
out
sub
cmps
push
sub
jb
leave
and
sbb
pop
cmp
mov
push
adc
jae
mov
popa
jae
adc
enter
btr
mov
add
add
add
push
jb
imul
inc
popa
or
popa
arpl
push
dec
cs
scas
hlt
or
or
fs
add
inc
jb
jns
sbb
inc
loopne
inc
(bad)
and
fsubr
ins
cmp
lahf
mov
pushf
and
mov
adc
(bad)
mov
je
test
jb
mov
daa
cwde
adc
clc
lock
adc
mov
sbb
daa
xor
fsub
(bad)
adc
lahf
cmps
dec
jnp
inc
jo
mov
adc
ror
adc
cmp
cmp
adc
mov
mov
sbb
mov
pushw
enter
pusha
nop
ret
adc
or
retf
enter
jle
adc
in
xor
jb
mov
cmps
inc
xor
adc
or
mov
adc
aas
cmps
cmp
popa
(bad)
daa
mov
jmp
push
int3
(bad)
in
hlt
adc
add
adc
push
icebp
mov
inc
push
xor
adc
nop
jecxz
mov
arpl
sbb
and
out
or
mov
mov
cmp
inc
jbe
ret
or
adc
mov
and
out
out
sbb
and
adc
xchg
mov
and
push
iret
and
xor
cmp
push
repz
repz
imul
iret
repz
xchg
popf
cmps
mov
lds
repz
(bad)
in
test
mov
push
adc
iret
repz
inc
push
pop
gs
rep
jns
lea
mov
push
in
pop
jge
out
stc
add
mov
and
repz
xor
cmp
repz
addr16
test
repz
(bad)
cdq
mov
iret
repz
aad
jmp
repz
pop
mov
push
sbb
(bad)
xor
fdivr
xchg
mov
iret
add
add
clc
push
xor
add
and
and
lock
push
add
push
pushf
test
cmp
call
add
pop
in
push
mov
scas
dec
js
mov
mov
push
push
repz
push
pop
push
jo
jo
iret
pusha
call
jge
or
xchg
mov
rol
jns
idiv
push
mov
mov
adc
or
or
mov
lods
add
push
cs
sub
outs
nop
xor
sar
pop
or
ins
je
outs
push
jns
pop
or
jo
xor
mov
test
ins
gs
mov
pushf
jl
xor
and
inc
lds
xchg
add
test
cs
imul
leave
push
mov
test
sub
dec
ret
ja
pop
fcom
xchg
push
popa
jb
pop
loope
add
std
mov
mov
int3
aaa
push
sub
add
ltr
ret
xchg
dec
in
jg
push
mov
xor
ins
jne
jl
mov
push
shl
je
push
push
mov
es
xor
jae
xchg
pop
mov
aam
je
call
mov
popa
arpl
or
inc
push
jne
ins
imul
lods
fdivr
inc
jae
sbb
dec
and
dec
and
push
and
pop
xchg
mov
data16
jb
hlt
adc
push
out
jne
push
push
leave
mov
imul
gs
adc
in
dec
cdq
push
pop
lea
jl
pavgb
aam
inc
mov
cld
or
inc
inc
inc
stos
aam
cmp
jno
push
jo
mov
mov
popa
inc
outs
or
or
popa
in
ficomp
mov
scas
js
push
mov
pop
mov
shr
or
adc
jmp
icebp
(bad)
fdivr
dec
pop
push
dec
jae
(bad)
sahf
sub
adc
mov
push
bound
enter
jno
mov
stc
cld
mov
add
push
ss
push
push
jae
mov
pop
dec
sub
mov
mov
inc
xchg
ret
xor
pop
aam
adc
jb
sbb
mov
inc
push
jb
clc
sbb
sbb
sbb
sbb
mov
sbb
shr
fsubr
and
xchg
add
inc
sbb
add
mov
adc
and
sbb
sbb
cmp
mov
adc
or
enter
inc
push
cmp
adc
add
push
pop
xor
mov
sub
and
or
adc
aas
pop
je
push
mov
push
push
push
mov
call
pop
pop
inc
jo
pusha
or
or
push
jnp
mov
int3
push
or
push
call
mov
jbe
add
and
add
(bad)
daa
shl
sbb
out
sahf
xor
inc
dec
pop
jns
out
bound
mov
jns
out
sahf
test
rcr
fucomip
repz
out
fidivr
(bad)
adc
sbb
sahf
cmp
push
popa
imul
jns
jg
xchg
popf
out
sahf
out
mov
rcr
cmps
sti
jp
out
stc
dec
add
das
push
(bad)
jg
push
bound
dec
fbstp
xor
(bad)
xchg
or
add
xlat
push
mov
add
enter
sbb
adc
in
cs
stos
iret
in
cmp
add
iret
pop
push
mov
inc
js
into
mov
push
adc
ret
mul
add
push
add
push
sub
xlat
ins
fbstp
push
adc
add
adc
cmp
push
push
jbe
adc
retf
loopne
and
mov
cmp
or
inc
push
popa
jae
(bad)
mov
das
loope
adc
outs
popa
(bad)
mov
popa
outs
jae
lds
push
ds
mov
push
push
add
push
sahf
in
(bad)
call
add
jo
push
shl
xor
je
scas
cmp
lods
call
mov
push
popa
jbe
outs
inc
imul
add
inc
or
add
sub
add
movs
rol
ja
test
or
jmp
push
dec
pop
cs
and
jo
mov
(bad)
push
xor
outs
add
sub
add
out
adc
pop
(bad)
mov
push
add
gs
cmp
popf
push
push
push
mov
mov
test
jl
loopne
call
inc
mov
mov
mov
or
jmp
add
dec
mov
jmp
rcr
ret
lea
mov
cmp
fsub
(bad)
jg
push
push
push
mov
lea
mov
mov
mov
fnstsw
call
setne
pop
pop
pop
pop
push
adc
sbb
dec
jo
(bad)
jl
jmp
mov
clc
mov
pop
ret
push
aaa
nop
or
xchg
mov
xchg
mov
ret
jg
cs
xor
mov
mov
std
dec
(bad)
mov
test
je
sub
mov
mov
mov
call
pushf
dec
mov
lahf
stc
mov
jmp
js
inc
enter
pop
xchg
pushf
call
inc
add
imul
mov
push
inc
push
or
jmp
jg
mov
(bad)
das
mov
scas
dec
cmp
pop
lea
xor
pop
lock
sub
mov
clc
clc
mov
mov
push
or
shl
add
pop
xor
push
in
lock
or
adc
push
mov
xor
pop
dec
pop
in
sbb
jb
hlt
clc
fstp
clc
push
mov
es
rcl
mov
mov
jle
xchg
pushf
and
or
rol
pop
fistp
cmovs
add
sbb
lock
repnz
ror
sub
(bad)
mov
or
or
mov
and
and
sub
dec
call
mov
(bad)
mov
frstor
ins
popa
or
jno
dec
push
test
outs
pop
sub
mov
mov
ins
mov
(bad)
fmulp
pop
push
clc
mov
jl
adc
sub
or
std
cld
ds
or
scas
jmp
add
addr16
cdq
adc
sbb
and
fnstcw
jp
dec
jne
inc
push
and
or
and
sti
cli
enter
js
push
pop
pop
js
jg
ins
xchg
rol
or
ret
popa
aaa
hlt
(bad)
sbb
mov
dec
xchg
mov
adc
add
jmp
mov
ret
int
nop
ror
cmp
(bad)
lock
js
aas
adc
call
and
and
mov
and
or
iret
pop
add
cli
test
add
push
ins
(bad)
add
push
enter
jb
data16
push
stos
aas
inc
jg
or
adc
mov
lock
or
loope
fdivr
inc
pushf
ja
test
int3
mov
in
inc
cmps
or
loope
mov
push
jmp
fbld
push
retf
in
add
mov
push
adc
jns
repz
fdiv
shl
shl
push
rcl
scas
push
(bad)
mov
mov
jl
mov
mov
sub
push
xor
sbb
sbb
jne
scas
jge
or
loopne
jg
lods
ss
cmp
sbb
ins
xor
cli
push
cmp
cmc
in
popa
aam
lods
sbb
mov
push
std
or
mov
lods
sub
mov
push
jmp
mov
les
push
(bad)
fdiv
enter
cmp
mov
mov
lea
jno
add
ss
mul
cmp
sar
cmp
cmp
fcom
out
mov
daa
push
add
jb
inc
ficomp
mov
and
fwait
or
ror
cmp
jne
retf
ror
lds
inc
adc
jnp
inc
fdivr
in
add
mov
ror
push
push
jb
sbb
popa
adc
jp
(bad)
in
or
mov
dec
mov
ja
xchg
mov
xchg
cmp
sub
cwde
mov
dec
adc
and
daa
push
cld
inc
add
inc
call
scas
fs
lahf
dec
ret
and
sbb
jne
add
sbb
or
or
rol
inc
jmp
mov
jle
mov
stos
xchg
pusha
sbb
pusha
mov
mov
call
or
aad
fmul
add
outs
or
pop
push
dec
das
fcomp
inc
fs
dec
cld
mov
mov
je
mov
sbb
pop
mov
and
push
mov
into
dec
outs
aad
inc
dec
jo
loope
lds
jne
mov
mov
mov
pop
movs
xchg
pop
add
(bad)
jmp
test
dec
mov
(bad)
repnz
addr16
clc
sar
push
packuswb
sub
loope
push
jle
je
test
je
mov
add
cmc
pop
jbe
sbb
xor
xor
pusha
lea
out
sbb
lds
ins
mov
xor
mov
push
pop
test
sub
mov
(bad)
jno
repnz
fdivr
cmps
ror
fimul
push
cmps
dec
sbb
add
fisttp
push
add
cs
pop
aaa
xchg
sbb
mov
iret
das
fwait
dec
sete
push
loopne
lds
lock
pop
jle
adc
outs
jae
shr
add
test
sbb
loope
mov
adc
iret
sbb
or
jmp
jb
xchg
das
rcl
and
sbb
jno
and
stos
pop
enter
icebp
push
movaps
movzx
in
inc
ins
(bad)
call
ret
or
push
push
loope
adc
das
jmp
and
add
mov
xchg
out
sahf
loopne
iret
dec
mov
adc
add
pmulhuw
fmul
push
jmp
mov
imul
aaa
clc
push
push
mov
mov
push
sbb
lock
test
adc
mov
or
xchg
xor
adc
adc
(bad)
aas
inc
loope
xor
sbb
xor
test
inc
pop
mov
test
(bad)
pop
and
loopne
sbb
jmp
inc
xlat
pop
and
xchg
or
dec
adc
inc
fdivr
adc
jmp
mov
sub
inc
int
mov
mov
dec
mov
enter
neg
and
mov
xchg
leave
inc
hlt
std
sbb
inc
in
jne
push
dec
aaa
mov
mov
fistp
lock
or
imul
pop
or
ja
nop
pop
fisub
pop
mov
pop
ins
mov
mov
clc
out
call
cld
add
mov
loopne
dec
and
sbb
jo
jno
data16
out
cmp
nop
icebp
mov
adc
sub
push
pop
dec
or
xchg
xlat
adc
jp
pop
push
pop
jg
movaps
scas
adc
xchg
rcr
cli
fadd
mov
bound
pop
(bad)
push
adc
lock
xchg
sbb
stos
push
outs
sahf
sub
dec
jno
cmc
jo
xchg
mov
add
shl
inc
(bad)
jecxz
xchg
rol
pop
sub
mov
nop
mov
xor
int3
and
or
dec
push
ds
sub
sub
add
jg
pop
test
mov
sub
pop
test
cli
sbb
fcomp
sbb
fs
addr16
mov
inc
pop
jne
int3
push
jbe
in
sti
ins
push
xor
inc
push
sahf
jns
pop
mov
sub
out
call
jle
adc
sub
push
dec
ins
mov
sbb
xchg
ret
xor
(bad)
pop
sub
push
js
and
loope
jbe
rol
fadd
sub
sbb
inc
repnz
jp
ret
hlt
or
jnp
call
enter
mov
mov
mov
iret
and
aaa
mov
sbb
call
rol
ficom
cli
dec
adc
lock
push
stos
fisttp
(bad)
(bad)
(bad)
mov
lods
cmp
xchg
jmp
ds
adc
inc
sahf
test
(bad)
in
fadd
(bad)
js
add
pop
adc
adc
retf
iret
inc
push
fist
in
sub
jae
push
push
adc
or
ficomp
shl
in
call
inc
push
dec
add
fisub
(bad)
jg
dec
out
rol
lds
sbb
pusha
not
pusha
xchg
and
add
xchg
jg
dec
nop
pusha
pop
aam
outs
jg
in
add
outs
call
repnz
sub
inc
outs
cmp
outs
je
jbe
rcl
imul
and
addr16
mov
outs
sti
sbb
in
ja
adc
loope
ja
pop
ficom
mov
add
add
mov
scas
test
and
push
ror
mov
mov
jne
adc
or
mov
dec
seta
iret
jmp
sub
lea
sar
xchg
xor
(bad)
shr
fld
and
imul
add
test
jae
push
mov
xchg
or
mov
popa
pusha
ror
adc
mov
pop
pop
loop
add
push
enter
cmp
test
push
sub
movs
jb
xor
pop
outs
adc
inc
shl
out
sar
jmp
inc
int3
push
xchg
fsincos
add
and
push
and
sahf
data16
mov
push
ja
and
mov
sbb
retf
sbb
pop
push
das
pusha
pop
loopne
mov
mov
or
inc
orps
lods
cmp
jmp
mov
add
lahf
jle
push
add
mov
mov
fdivr
sbb
outs
adc
inc
add
xchg
outs
dec
pop
inc
add
pop
jl
xchg
mov
dec
outs
mov
sbb
leave
mov
das
pop
sbb
inc
enter
push
dec
adc
push
add
push
je
mov
mov
out
data16
inc
add
fucomip
or
aaa
inc
mov
dec
test
sbb
(bad)
jne
xchg
jl
pusha
push
fadd
fcomi
mov
aam
sbb
cmps
sbb
sbb
sbb
lea
das
rcr
push
xor
xchg
sub
dec
add
add
jecxz
xlat
and
pop
add
ja
add
add
rcl
ja
xchg
aas
scas
test
push
inc
fdiv
scas
aaa
mov
sbb
mov
add
adc
sqrtps
add
rol
aaa
clc
(bad)
movs
inc
add
mov
mov
push
test
xor
add
sbb
aaa
inc
jno
scas
pop
cmp
fs
add
push
sub
idiv
inc
xchg
mov
sub
es
inc
into
push
mov
adc
enter
xlat
int3
in
xor
pusha
mov
adc
pop
daa
lds
or
inc
clc
rol
sbb
adc
call
inc
imul
push
push
or
push
fadd
test
out
scas
and
ror
push
adc
loopne
xchg
and
pusha
cmps
repnz
(bad)
dec
mov
enter
sub
js
jns
add
jns
ja
daa
xor
jo
or
or
retf
jnp
jno
sar
inc
test
ret
das
dec
push
adc
in
neg
mov
sub
add
adc
xor
mov
iret
or
mov
jne
test
or
sub
leave
jo
sbb
loop
sub
sbb
retf
mul
sahf
add
loopne
mov
repz
js
push
mov
mov
ss
or
in
fs
xor
pop
add
fwait
and
lock
push
pusha
pop
adc
pop
cld
xchg
aam
jmp
mov
or
sbb
out
rcl
movs
and
rcl
jns
stos
sub
or
sbb
stos
adc
out
mov
stos
sub
inc
je
jno
paddq
dec
mov
packsswb
stos
out
and
push
adc
push
inc
xchg
mov
sub
pop
outs
xor
cmp
bound
mov
push
dec
scas
outs
add
loopne
inc
mov
pop
push
sub
add
xor
and
xchg
or
fsubr
dec
sub
adc
mov
stos
mov
ror
sub
jmp
push
sbb
cld
inc
pusha
jmp
gs
pop
popf
daa
dec
scas
aaa
pop
jp
retf
ret
xor
push
mov
inc
push
(bad)
(bad)
bound
mov
stc
inc
sub
je
adc
loope
inc
adc
pop
pop
sbb
add
lods
jge
inc
pop
xor
pop
xchg
in
ror
xchg
inc
pop
shl
call
cmp
repz
and
outs
and
xor
loope
inc
mov
jg
xchg
test
(bad)
pop
mov
add
mov
adc
das
sahf
sub
sub
ins
mov
xadd
push
std
call
popa
push
jae
push
inc
scas
sbb
sbb
adc
jmp
fiadd
out
ret
lock
or
sbb
inc
imul
inc
push
mov
out
pop
sub
xor
sbb
mov
stos
push
ror
test
and
add
xchg
outs
cli
aas
clc
not
and
lock
ret
cs
cmc
fstp
add
enter
jmp
mov
adc
dec
add
or
inc
xor
push
movs
or
(bad)
aas
push
cmp
out
adc
dec
mov
jmp
pop
or
adc
test
pop
mov
sbb
pop
mov
aad
mov
or
cmp
jp
call
push
enter
fs
adc
inc
sub
sahf
ror
pop
ss
or
add
bound
out
push
push
mov
(bad)
adc
je
mov
push
sub
mov
mov
pop
call
push
(bad)
xor
cs
adc
out
stos
inc
pop
mov
cmp
pop
inc
add
retf
pop
add
pop
ficom
loope
pop
cmp
or
movs
packuswb
add
add
mov
xor
daa
add
xchg
push
ss
inc
test
out
test
les
jno
fidivr
push
pop
push
or
(bad)
(bad)
and
pop
pusha
or
add
ja
mov
fwait
add
lahf
jmp
lahf
fldcw
cmp
add
repnz
mov
das
inc
add
pop
les
cld
inc
mov
xchg
cmp
inc
add
loope
adc
pusha
mov
jge
jbe
sbb
and
movzx
fmul
js
fsubr
jb
xchg
and
sti
test
mov
sub
push
cmp
daa
and
mov
jle
jg
add
je
jmp
or
mov
inc
add
inc
mov
ret
mov
cmp
not
jo
push
scas
dec
pop
mov
dec
pop
pop
daa
pop
cmc
mov
xor
retf
push
js
inc
nop
sbb
stos
jns
xchg
mov
jo
sti
xchg
xor
enter
add
push
xor
outs
inc
scas
int3
and
enter
jne
or
ins
mov
psubusb
jmp
or
test
daa
hlt
inc
fidiv
jge
daa
test
je
call
push
pop
int3
sub
pop
sbb
inc
or
xchg
cmp
movs
xor
aaa
mov
mov
pusha
add
mov
mov
adc
pusha
lea
hlt
cmp
je
aam
ins
and
ror
dec
sub
mov
dec
clc
cdq
ins
adc
or
daa
(bad)
nop
inc
(bad)
cmps
lahf
loop
mov
fs
or
sbb
xchg
inc
jo
sbb
cmp
sub
sub
ror
test
aaa
lahf
push
test
dec
pop
or
add
fcomp
mov
jle
das
xor
push
push
adc
enter
sbb
mov
adc
adc
fld
push
cs
push
mov
adc
and
adc
pop
add
sub
lock
dec
jne
inc
rcl
retf
sbb
sbb
cmp
mov
jmp
adc
outs
stos
xchg
loopne
sub
aaa
pop
mov
xor
inc
sbb
imul
in
sbb
loop
and
nop
in
mov
jo
imul
add
pop
jge
inc
add
dec
push
mov
push
jns
sbb
push
and
push
sub
inc
sub
mov
mov
sub
enter
mov
bound
push
sbb
and
add
aaa
adc
sbb
jmp
xchg
or
inc
sub
add
inc
adc
push
ret
mov
mov
sub
popa
mov
dec
arpl
sbb
outs
es
push
std
aas
sbb
scas
mov
xchg
ret
test
je
sub
not
jle
mov
mov
adc
jo
pushf
mov
(bad)
std
jbe
aam
call
and
inc
movs
xor
add
popa
stc
int
sbb
xchg
ja
loopne
xlat
mov
mov
jae
dec
pop
jge
cmp
mov
data16
pop
and
push
je
add
les
add
dec
cmp
push
fmul
inc
push
cmp
adc
aaa
or
pusha
pop
inc
shl
mov
sahf
popf
pusha
popa
in
mov
pop
daa
cmp
shr
mov
in
nop
psubusb
or
xor
jg
dec
mov
mov
xchg
enter
dec
add
dec
enter
mov
mov
mov
enter
rcl
nop
(bad)
sub
push
cmp
mov
inc
pop
aaa
xor
xor
sub
push
or
aaa
scas
jo
cmp
add
xor
or
fcomp
je
dec
daa
cmp
inc
xchg
fwait
inc
jp
pop
adc
and
mov
aas
jmp
add
jne
add
or
or
add
in
test
das
jo
add
(bad)
mov
fidiv
out
push
inc
out
aas
push
and
(bad)
pop
rol
add
adc
dec
push
mov
mov
and
rcl
pop
es
add
push
dec
loop
cld
xchg
lods
aaa
xor
test
mov
mov
in
sub
xor
fsub
shl
lock
adc
lock
je
inc
js
das
inc
test
inc
mov
sar
test
adc
arpl
push
(bad)
(bad)
imul
es
aam
add
pop
or
inc
pop
push
imul
dec
fdivr
ret
jecxz
adc
push
or
dec
test
inc
mov
push
xor
or
mov
add
fs
mov
call
mov
lods
ret
mov
not
push
inc
dec
fsubr
cmp
inc
mov
pop
ins
es
sbb
add
ds
mov
inc
xor
dec
jne
jbe
or
mov
xchg
daa
pop
test
and
test
shl
pop
sub
test
aaa
mov
popa
imul
fiadd
inc
cmp
js
jne
pusha
cld
push
or
or
shr
mov
lock
or
lods
jno
test
cmp
ret
(bad)
or
push
pop
test
rcl
jne
pop
or
mov
vsqrtss
cdq
adc
mov
call
movs
out
jl
adc
retf
bound
cmc
jl
in
es
loop
push
xchg
sub
pop
jno
xchg
(bad)
cld
push
mov
loopne
jl
inc
jne
iret
add
inc
imul
das
jge
movzx
mov
out
inc
pop
and
and
inc
pop
scas
pop
mov
mov
pop
add
xchg
in
mov
add
push
or
sbb
sub
cmp
pop
xor
das
sbb
cmp
mov
cmp
jp
jge
mov
sub
das
je
mov
or
out
dec
fmul
ss
pop
mov
(bad)
in
xlat
test
test
mov
cwde
lock
dec
jbe
cmpps
inc
data16
add
mov
adc
cmp
xor
xor
inc
outs
ss
and
push
test
xchg
rcl
stos
jp
pop
seto
pop
and
mov
mov
rsm
ret
push
mov
mov
aad
pusha
jne
ds
jg
rol
mov
add
xchg
je
push
pop
push
or
sbb
leave
xor
retf
cmp
fnstsw
loope
dec
lods
jno
das
push
add
jo
sub
pop
add
jno
sbb
cmps
test
add
repz
popa
rcr
push
pop
aaa
mov
inc
add
dec
adc
push
inc
cmps
or
sbb
push
cmps
push
bound
mov
mov
xchg
mov
cs
or
push
sbb
adc
push
jl
cmps
xor
jns
stos
fwait
or
pusha
lds
test
je
sbb
sbb
mov
xchg
lock
xor
mov
mov
je
sub
jae
fdiv
loopne
sbb
or
into
pop
hlt
hlt
or
mov
cmp
cdq
jnp
push
cmp
xchg
adc
inc
not
mov
dec
sub
mov
scas
mov
les
xchg
scas
mov
or
mov
nop
jl
repz
imul
mov
jae
xlat
shl
sub
and
xchg
cdq
and
push
and
jmp
lods
les
mov
or
jns
sub
inc
fisttp
cmp
inc
test
sbb
loope
jg
push
out
repnz
scas
jne
leave
jmp
loopne
pop
shr
jmp
mov
xor
adc
jle
daa
sub
mov
lock
fstp
jne
xchg
or
push
or
dec
shr
add
sub
mov
dec
inc
popa
or
(bad)
aas
push
add
mov
and
push
test
inc
not
dec
push
je
cmp
je
fs
enter
and
lods
call
jle
loope
adc
inc
fild
dec
xor
mov
add
loope
movs
and
xchg
or
cmp
jmp
inc
add
inc
xor
pop
loopne
inc
clc
add
addr16
cld
mov
xor
mov
fsub
iret
aas
adc
imul
dec
mov
cmp
jae
mov
jmp
push
leave
add
jne
adc
in
out
enter
xor
sub
adc
jnp
or
test
jo
mov
gs
fucomp
test
xchg
or
or
jle
push
ja
enter
mov
int3
mov
clc
jb
sbb
call
mov
jle
xor
adc
in
mov
out
mov
mov
mov
cmp
mov
pop
pop
popa
clc
mov
mov
sbb
jne
jmp
fmul
sub
sbb
mov
cdq
sbb
add
call
pop
in
or
enter
add
mov
lods
test
bound
sidtd
aad
lods
inc
adc
xor
jnp
sbb
jg
adc
sub
dec
pushf
ror
es
movzx
ror
cdq
movs
push
xchg
mov
push
pop
xlat
and
enter
sar
sar
sbb
rol
sar
add
cmp
in
adc
fs
jmp
cmc
rcl
push
dec
xchg
sub
fcmovbe
adc
add
jo
adc
aas
dec
test
mov
and
scas
loopne
sbb
fdivr
inc
cmps
or
push
and
jmp
add
outs
jmp
mov
xor
mov
add
mov
scas
xchg
clc
std
mov
xlat
add
(bad)
sti
sub
je
push
jne
xor
mov
sbb
shl
(bad)
pop
push
adc
leave
movs
mov
test
movs
clc
clc
lock
sbb
aam
repnz
or
add
mov
sar
aad
or
outs
bound
mov
xchg
jl
xlat
lock
cs
push
mov
andnps
or
mov
mov
sbb
and
or
inc
aam
call
movs
rcr
xchg
pop
push
add
adc
frstor
jmp
mov
jmp
mov
jecxz
adc
mov
rol
gs
fidiv
ins
and
(bad)
aaa
push
adc
int
pop
push
cmp
push
jo
add
cmp
sti
sti
dec
mov
mov
mov
inc
test
ret
psrld
sub
enter
sub
sub
jb
dec
mov
or
test
xor
add
jne
mov
loope
adc
xor
lods
sahf
mov
mov
sbb
iret
test
loope
mul
mov
pop
shr
mov
inc
and
rcl
(bad)
push
dec
inc
shl
jecxz
pop
rcr
cmp
pop
rol
sar
mov
cmp
lea
push
adc
mov
pop
(bad)
shl
jmp
mov
mul
test
fadd
loopne
inc
mov
jp
push
add
mov
mov
sbb
test
inc
mov
test
mov
inc
pushf
mov
add
sbb
mov
je
or
(bad)
cs
or
lods
add
in
jo
pop
or
xchg
(bad)
int
xchg
add
and
int
ror
inc
xor
int
dec
xchg
je
cwde
rcr
mov
test
and
xlat
ja
out
outs
test
lea
and
out
pop
push
cmp
lea
ins
int
mov
sbb
movs
push
jo
cmp
or
pop
(bad)
repnz
push
loopne
lea
mov
jle
mov
pop
out
std
pop
pop
clc
mov
pop
or
dec
sbb
cmp
cs
arpl
add
adc
jns
or
add
test
push
int
xor
adc
enter
gs
in
test
test
in
xchg
cwde
pushf
in
in
mov
push
and
into
gs
daa
les
sahf
bswap
or
and
bound
aas
pop
or
call
jle
fnstenv
ins
retf
loopne
in
dec
jmp
mov
and
test
outs
adc
int3
sub
aaa
and
shr
out
jbe
pop
mov
add
add
jnp
mov
outs
push
sub
add
add
adc
cwde
or
pop
add
dec
add
outs
mov
push
popa
lahf
aaa
nop
sub
xchg
mov
xchg
mov
mov
les
sbb
(bad)
or
sbb
jge
lahf
jge
and
xchg
call
lea
jbe
ds
lds
and
lahf
inc
ret
jb
inc
hlt
(bad)
std
jmp
add
movs
jmp
xchg
inc
push
shl
repz
sub
(bad)
std
clc
push
mov
loopne
cmp
dec
repnz
cmp
(bad)
and
jmp
test
jmp
mov
sbb
test
push
test
fwait
loopne
cmp
shr
bound
push
push
(bad)
fdiv
rol
or
cmp
and
fcomp
test
inc
jp
jbe
mov
cli
or
sbb
ins
push
fs
shl
pop
sub
sub
loop
loop
test
adc
imul
ja
rcl
and
jmp
and
sub
jo
mov
mov
sub
jne
loopne
add
mov
cmps
aaa
ins
push
fs
or
imul
jae
pop
mov
mov
dec
fbstp
mov
mov
into
inc
sbb
data16
mov
in
movs
pop
(bad)
push
pop
inc
loopne
mov
add
jle
mov
add
in
add
out
mov
shl
xchg
add
pop
xchg
and
sar
add
sar
add
ins
xor
aad
test
rcpps
out
mov
daa
enter
dec
fs
(bad)
pop
push
xor
jns
mov
pop
jbe
mov
xchg
nop
ins
pop
movs
xor
es
sbb
lods
mov
and
pop
adc
add
mov
and
fldcw
pop
fiadd
mov
adc
push
inc
push
sbb
push
arpl
nop
adc
pop
dec
test
imul
(bad)
mov
pop
push
sbb
xchg
sbb
push
rcr
xor
mov
mov
scas
pop
push
and
fs
jmp
adc
or
scas
lds
fsub
js
xchg
mov
cs
and
jg
call
test
jg
sub
jae
rcl
sti
mov
mov
dec
je
sbb
jl
add
fucomi
add
sbb
jbe
icebp
push
xor
inc
and
or
jne
pop
xor
mov
xchg
sbb
add
push
lahf
sbb
retf
jo
cmp
sbb
retf
mov
inc
jp
sub
fadd
push
or
call
rcr
adc
sar
pop
cmp
mov
and
or
fild
out
sbb
addr16
ins
mov
sub
inc
sub
xchg
call
loopne
jb
adc
fptan
das
les
lds
out
mov
mov
dec
shl
xor
or
mov
sbb
sbb
sub
dec
jle
push
adc
cs
(bad)
pop
push
adc
xchg
push
mov
add
cmc
jecxz
and
adc
mov
mov
mov
sub
fadd
jns
shr
sub
sbb
outs
dec
cs
es
push
rol
(bad)
and
out
movs
cmps
sbb
xor
cmps
stos
and
adc
(bad)
fild
cmps
(bad)
add
push
xor
mov
add
jb
add
jecxz
popa
mov
ja
push
les
mov
push
cld
or
add
pop
jo
stc
repnz
fdivr
mov
mov
xchg
mov
les
fadd
icebp
mov
ins
or
or
pop
push
mov
(bad)
jne
cmps
repnz
add
ds
add
add
bound
fild
frstor
arpl
int3
pop
clc
lea
mov
out
ins
mov
pusha
pop
jo
fxch
and
and
sbb
in
mov
and
dec
daa
inc
(bad)
(bad)
call
pop
jo
and
gs
adc
neg
outs
dec
jo
sub
int3
mov
cmp
daa
dec
rcl
mov
adc
mov
mov
aas
lahf
or
cmp
sbb
data16
add
xor
mov
mov
mov
mov
xor
scas
dec
dec
sub
push
xchg
int
ins
jns
mov
jg
nop
movzx
(bad)
aaa
fmul
or
xchg
cmps
daa
je
dec
add
cmp
sub
mov
pop
sbb
rcr
pop
aam
add
pop
mov
add
pop
ja
cmp
mov
fs
xor
inc
add
mov
loopne
or
mov
pusha
mov
mov
and
repnz
xchg
xor
dec
xchg
cmp
cmp
daa
mov
push
(bad)
into
inc
dec
rol
add
call
loopne
nop
idiv
stc
add
hlt
shl
or
fisubr
jo
push
loopne
cmc
add
aas
push
das
push
push
inc
push
loopne
push
(bad)
push
adc
cmp
add
and
jno
aas
push
shl
(bad)
mov
jno
leave
add
inc
mov
jmp
adc
fisttp
out
repnz
addr16
fiadd
loope
jo
and
cmp
add
fcomip
rcr
bound
lds
sbb
add
xchg
mov
sbb
mov
adc
popa
xor
jl
push
mov
mov
add
out
or
inc
test
xchg
inc
mov
ss
ss
adc
dec
add
popf
jmp
mov
les
mov
sahf
pop
adc
add
pop
xchg
je
jp
or
lods
bound
cmp
in
sub
sub
mov
fstp
es
ret
popa
stos
or
mov
mov
mov
jle
add
imul
jne
mov
lea
xor
shr
cmp
mov
fisttp
cmp
push
sub
hlt
mov
mov
xchg
test
loope
jmp
pop
mov
adc
test
and
xchg
stos
pop
mov
cld
pop
shl
aaa
push
popa
adc
fcom
lahf
inc
or
sbb
pop
or
popa
sub
mov
enter
fs
imul
push
cmps
and
xchg
lahf
mov
mov
cwde
xchg
lahf
mov
and
pop
nop
cmps
pushf
inc
xor
xor
xchg
sbb
xor
fst
inc
into
mov
add
cmps
(bad)
pushf
xchg
dec
call
xor
jns
mov
addr16
push
add
push
pop
jo
scas
push
sub
and
test
pop
out
loopne
adc
inc
scas
out
test
inc
into
test
pop
sub
pop
(bad)
jle
(bad)
or
cmp
mov
jo
(bad)
lods
es
cwde
rcl
inc
or
or
mov
cmp
push
mov
push
xchg
sub
dec
aam
loope
aaa
and
push
call
or
cmp
or
add
cli
mov
(bad)
mov
or
and
cmp
pop
push
sub
mov
adc
cli
sar
push
xchg
iret
test
ds
xor
test
adc
in
add
lahf
rcr
pushf
push
xchg
div
adc
loopne
jl
sbb
jb
fcomp
or
jae
pushf
loopne
mov
test
add
mov
js
adc
leave
adc
pusha
sbb
pop
outs
sahf
sub
and
inc
ss
mov
cs
mov
mov
jle
shl
pop
mov
or
(bad)
jo
pop
mov
mov
loopne
and
fld
and
(bad)
dec
aad
add
out
hlt
sub
iret
mov
das
popa
sub
lods
out
jne
jbe
inc
mov
mov
movs
cmp
inc
jo
mov
(bad)
shl
sar
cmp
sub
sbb
pop
das
(bad)
(bad)
call
enter
outs
sbb
xchg
xchg
mov
push
or
jle
mov
sub
jno
or
pop
pop
sbb
cmp
mov
sbb
call
xchg
and
mov
cmps
nop
pop
arpl
dec
ret
or
in
mov
scas
jb
mov
jo
or
dec
jb
add
push
add
inc
push
xor
bound
or
inc
out
sub
and
shl
sbb
jo
enter
dec
sbb
es
out
shr
cmps
add
xchg
fadd
outs
adc
fadd
mov
sbb
sub
add
cld
add
clc
pop
mov
call
add
mov
mov
add
jb
les
mov
std
pop
(bad)
out
jp
test
scas
inc
mov
push
movs
inc
adc
rol
xor
fisttp
rol
add
cmp
(bad)
mov
adc
lods
pop
popa
adc
pusha
cmp
nop
or
mov
retf
cmps
xor
sbb
and
xor
nop
sbb
je
and
mov
inc
inc
inc
rcr
or
jo
inc
dec
push
(bad)
jo
inc
push
sub
in
sub
xchg
das
icebp
out
sbb
cmp
das
clc
clc
call
add
pushf
movs
mov
sub
mov
das
fcom
test
movs
aas
and
inc
push
das
inc
out
or
das
or
cmp
xchg
sub
out
iret
jg
add
mov
in
idiv
iret
lds
mov
mov
mov
mov
inc
repnz
in
daa
jo
jb
adc
add
sub
mov
inc
loop
scas
add
adc
adc
(bad)
bound
mov
je
pop
fcom
adc
push
dec
push
xor
daa
adc
mov
add
sbb
leave
jge
rol
or
sub
ror
dec
pop
mov
mov
or
xor
enter
int3
push
or
pop
jne
xlat
mov
(bad)
jo
nop
aam
cmps
je
sar
sbb
shl
nop
sub
dec
movs
xchg
mov
xchg
mov
js
add
ja
daa
mov
test
inc
cs
cmp
cmps
push
dec
pushf
jge
mov
imul
iret
mov
int3
jp
(bad)
pop
adc
adc
or
popa
mov
arpl
outs
addr16
imul
pop
mov
add
push
imul
inc
gs
popa
xor
push
into
or
adc
inc
outs
ins
ins
arpl
neg
sti
out
inc
ins
jae
jns
gs
mov
ds
lock
gs
push
jnp
pop
jg
inc
add
jmp
cwde
dec
je
push
inc
push
or
mov
aam
popa
je
jb
mov
pop
push
inc
jb
and
add
or
add
or
mul
mov
add
jae
mov
pminub
daa
iret
pop
in
jae
jb
jns
int3
ss
enter
adc
js
fcomip
push
stc
jns
rol
add
in
enter
add
popa
ins
fisubr
es
cmp
push
dec
add
out
shl
ret
dec
mov
cdq
and
ins
add
pop
dec
dec
xchg
ss
aas
push
(bad)
add
bound
jl
mov
sbb
retf
std
cli
retf
push
leave
test
or
std
pop
push
cmp
outs
lock
mov
pop
movs
stos
call
mov
sub
add
ror
or
jnp
mov
xor
sbb
adc
ror
rol
loope
cmp
mov
push
into
dec
adc
push
ins
mov
jge
je
add
pop
(bad)
sub
fs
rol
mov
jle
je
jle
cwde
shl
mov
xchg
cmp
inc
or
add
clc
and
repnz
fs
push
jo
xlat
cs
push
ret
clc
into
push
js
sub
setne
inc
xor
cmp
imul
jne
add
call
sahf
dec
(bad)
sub
push
or
adc
adc
xchg
mov
adc
mov
sbb
xchg
test
lock
mov
add
xor
dec
or
adc
repnz
cmp
xor
out
sbb
sub
or
sbb
add
add
cld
mov
lock
mov
fadd
mov
inc
pop
pop
jo
add
(bad)
mov
push
cdq
fmul
fstp
xor
into
jbe
or
cmp
xchg
mov
or
pop
shr
fadd
jmp
add
repnz
imul
jp
pusha
push
sub
rcl
jmp
add
inc
dec
jne
pop
push
push
mov
xor
cmc
inc
test
ret
jmp
xor
sbb
shr
jge
retf
and
mov
add
and
and
imul
mov
xchg
jle
cmp
add
jl
test
mov
push
retf
sub
nop
mov
push
jae
adc
push
adc
sbb
jo
push
in
bound
jno
in
mov
mov
add
adc
xor
adc
pop
add
sub
daa
cmp
push
inc
push
rcr
test
ror
rol
or
jb
add
xchg
mov
hlt
push
sub
cmp
push
pop
fimul
mov
rol
or
mov
or
pop
adc
jmp
mov
ret
mov
je
mov
adc
push
or
add
rcl
retf
lds
ds
dec
or
and
ins
inc
cmp
sub
je
lods
fsubr
or
call
mov
inc
imul
add
add
mov
xor
sbb
dec
xlat
sbb
mov
adc
ins
inc
inc
fmul
dec
push
push
rol
inc
in
dec
fadd
mov
fisubr
int3
dec
inc
test
ret
mov
sbb
push
fwait
xor
add
popa
xchg
xor
loop
int3
pop
ja
cli
add
push
imul
movs
loop
cwde
jge
xor
adc
mov
rcl
adc
mov
sbb
sbb
or
jl
cmp
(bad)
mov
fnstsw
or
or
or
add
jle
sbb
cmp
jle
or
call
push
outs
adc
sub
push
lock
mov
and
or
cmp
or
mov
mov
call
inc
inc
sub
xchg
and
adc
jge
xor
sub
dec
mov
stos
loope
(bad)
mov
add
fwait
sbb
add
mov
dec
gs
mov
inc
jo
mov
shr
mov
add
and
mov
inc
sub
sub
sbb
mov
xor
leave
scas
xchg
vmptrst
pop
cmp
dec
push
stos
or
jo
inc
test
pop
addr16
(bad)
sub
mov
call
mov
dec
call
loope
mov
add
fwait
les
push
jg
(bad)
jae
push
loopne
mov
or
dec
or
test
dec
sahf
xchg
mov
dec
or
mov
sub
xor
dec
jg
push
sbb
adc
xor
add
in
arpl
dec
outs
mov
fld
pop
outs
mov
sub
call
inc
xor
test
mov
sti
loope
call
xor
push
bound
retf
shl
test
push
push
xor
repnz
ins
push
shl
into
mov
adc
add
or
dec
repnz
lods
sub
fnsave
inc
lock
(bad)
hlt
push
sub
adc
xchg
call
inc
dec
hlt
pop
(bad)
push
pop
mov
mov
jo
xlat
les
xor
fcom
loop
mov
and
sbb
ret
dec
and
cwde
movs
dec
push
sub
sub
lea
sub
sub
xchg
jl
xchg
push
ret
pop
aaa
cmp
sub
fcmovb
inc
or
add
cmp
jne
es
dec
mov
ja
jl
mov
pop
imul
xchg
aad
rol
lahf
inc
pop
and
push
stos
pusha
add
inc
movs
pusha
xor
cmp
ins
cmp
mov
mov
mul
je
adc
imul
js
js
fmul
xor
mov
mov
or
adc
rcl
sub
rcl
and
or
pusha
add
ja
mov
jnp
fldenv
clc
push
icebp
mov
jne
(bad)
adc
xor
jge
cmp
add
push
push
test
adc
rol
mov
loopne
jecxz
pop
cmps
sar
dec
(bad)
sbb
test
inc
movs
pop
inc
push
movs
inc
call
pusha
das
nop
mov
into
inc
adc
(bad)
(bad)
xchg
js
sbb
jmp
and
call
cmps
push
inc
sbb
mov
jae
and
inc
dec
cli
xor
mov
in
xchg
rcl
xchg
iret
(bad)
dec
sub
sbb
fld
sahf
jno
or
inc
mov
lahf
(bad)
xor
add
sbb
adc
pusha
sub
in
push
outs
add
rol
xor
leave
stc
pcmpgtb
and
xlat
iret
xor
add
jmp
adc
mov
(bad)
mov
mov
test
or
xchg
fs
lea
ret
xor
lock
inc
fild
adc
xchg
add
jmp
cdq
xchg
or
mov
(bad)
fcom
outs
loopne
daa
jo
sbb
and
cs
repnz
xor
jp
add
add
push
xor
scas
adc
outs
into
sub
add
add
or
aad
pop
lods
dec
mov
pop
lahf
and
int3
mov
add
mov
fwait
add
or
lods
adc
mov
add
inc
jl
add
sub
adc
aad
test
inc
daa
jp
pop
dec
imul
je
sub
aaa
push
pop
or
xor
mov
pop
push
add
scas
test
not
jle
jl
call
push
mov
jo
shl
mov
lods
sbb
cmp
adc
inc
(bad)
or
xor
pop
outs
dec
xchg
call
sbb
cwde
xchg
xor
mov
test
inc
sub
test
jb
jl
adc
dec
mov
fld
in
out
clc
mov
or
jge
xchg
stos
je
pushf
loope
stos
ins
cmc
pusha
mov
loop
push
adc
aam
cmp
mov
mov
sahf
sti
xlat
retf
lods
push
push
cwde
loop
out
adc
push
fld
jo
push
or
ja
or
jnp
adc
xor
call
lods
sub
mov
or
pop
jg
dec
sti
std
xor
adc
cwde
sbb
jmp
fstp
test
movzx
and
cwde
push
rol
gs
(bad)
sbb
mov
ds
mov
and
daa
pushf
(bad)
lods
cmp
sbb
daa
cli
daa
pushf
call
mov
jge
add
push
or
sub
or
mov
add
inc
sbb
ret
inc
stos
add
nop
xchg
pop
mov
fadd
fst
(bad)
mov
adc
rcr
lock
push
push
rcl
jne
xchg
and
dec
inc
test
pusha
inc
(bad)
call
(bad)
xbegin
add
(bad)
out
mov
xchg
cli
lock
test
je
mov
mov
mov
mov
test
clc
adc
loope
jge
ins
mov
pop
sub
loope
(bad)
mov
xchg
inc
pop
rol
xchg
pop
mov
(bad)
loopne
data16
test
cmps
cmps
loopne
nop
inc
dec
xchg
pusha
cmp
cmps
mov
fst
mov
and
arpl
daa
xchg
sbb
pop
je
jnp
xchg
cmp
sub
sti
add
sbb
and
dec
imul
dec
sub
jmp
test
cmps
inc
jbe
test
sar
shr
xchg
push
adc
fnsave
and
loopne
pop
sub
test
sub
scas
pop
movs
in
inc
xlat
cmp
dec
xlat
inc
and
in
sub
lods
jecxz
mov
push
mov
add
fucom
ret
xchg
and
cmps
nop
pop
ins
xchg
jl
sbb
mov
jmp
pop
add
shl
mov
adc
in
and
ret
imul
fwait
or
das
add
test
inc
jo
pusha
(bad)
xchg
daa
(bad)
add
imul
pop
je
lds
test
aas
fst
jae
sbb
ins
popa
jg
mov
mov
cmp
sbb
adc
pop
popf
mov
dec
into
loopne
(bad)
nop
or
std
sbb
rcl
or
mov
or
or
sub
adc
or
adc
ja
jo
mov
nop
add
test
mov
mov
jno
xchg
and
aad
std
fld
or
fld
pop
dec
or
pop
xor
fchs
out
cli
add
loope
daa
inc
loop
or
xor
data16
or
test
or
sbb
je
mov
push
movzx
test
mov
add
pushf
jnp
and
add
stos
das
pop
mov
add
mov
or
pop
inc
call
out
and
mov
repz
cmp
inc
xor
hlt
daa
jmp
inc
add
inc
jne
shl
add
cmp
adc
and
add
inc
loope
mov
popa
call
loope
imul
pop
sub
sbb
loopne
xor
mov
ins
xlat
cdq
and
push
mov
xchg
lahf
xchg
bound
cdq
jnp
outs
and
out
inc
sub
adc
dec
push
mov
dec
jne
imul
mov
mul
repnz
scas
dec
inc
fbstp
push
add
mov
ffreep
ins
and
mov
xchg
mov
sahf
aaa
mov
mov
sub
fldenv
xor
inc
adc
xlat
mov
xlat
nop
or
shl
fs
lahf
sar
idiv
lahf
lods
shr
test
dec
mov
(bad)
repnz
iret
ins
ja
sbb
in
mov
movs
and
and
inc
push
jo
scas
or
sbb
pop
mov
mov
mov
ret
fidiv
inc
in
dec
xor
pop
inc
and
call
jge
push
push
fist
push
mov
fadd
loopne
xor
cs
add
loopne
call
add
pop
sub
shr
aam
call
inc
adc
xor
(bad)
pop
clc
sahf
shr
out
adc
in
mov
pushf
int3
test
inc
in
cmp
lods
jnp
cmp
adc
pop
out
push
push
mov
pop
ja
cdq
or
jmp
ss
fmul
jle
mov
sbb
popa
xor
or
pusha
cs
add
add
add
push
popa
aad
stos
mov
inc
push
ins
jns
stos
pusha
add
and
sub
cmp
sub
lods
mov
push
out
(bad)
out
or
pop
mov
dec
adc
and
and
mov
cmps
nop
pop
dec
fwait
push
ret
shr
or
(bad)
call
and
push
mov
popa
inc
enter
xor
inc
xor
inc
jo
pop
cmp
call
sub
ins
stos
cmp
or
pop
fsubr
inc
bound
jbe
inc
aas
adc
adc
pop
rol
test
daa
das
pop
sbb
dec
sti
push
stos
fisttp
fs
ret
pop
and
pop
ins
les
inc
and
out
inc
pusha
pop
pop
inc
in
inc
sbb
repz
hlt
daa
push
jo
inc
jmp
sub
mov
inc
lods
push
xor
dec
lods
add
or
mov
add
push
fdivrp
mov
mov
mov
jbe
data16
in
or
mov
scas
mov
lock
cmp
mov
push
push
mov
jg
sbb
mov
xor
in
mov
les
sbb
pop
mov
mov
mov
or
push
(bad)
(bad)
mov
push
ret
repnz
int3
mov
test
je
sub
lea
mov
inc
xchg
push
nop
xchg
fs
das
and
das
and
jle
pusha
mov
enter
mov
mov
add
inc
(bad)
push
mov
inc
pop
pop
js
loope
xchg
inc
push
pop
mov
in
pop
nop
fldcw
(bad)
loopne
add
gs
xchg
in
jbe
mov
lods
xor
lock
icebp
out
add
inc
cmp
ret
pushf
call
mov
lds
mov
and
iret
ret
pop
test
in
lock
push
test
das
pop
push
je
popa
xor
sbb
mov
sub
popa
add
adc
cdq
cdq
push
push
adc
jg
push
fmul
mov
mov
push
cmp
popa
push
das
ds
aaa
data16
sbb
addr16
inc
push
pusha
pushaw
xchg
mov
push
push
add
adc
mov
inc
xchg
push
ds
pusha
or
dec
fs
mov
sub
xor
inc
fwait
shr
ja
aas
rcl
mov
retf
cmps
xor
sbb
pop
jnp
es
ja
pop
les
aas
sub
inc
push
and
xlat
or
add
xor
movs
add
lahf
mov
fadd
pop
pop
push
or
bound
sub
cmps
add
jbe
outs
pop
(bad)
call
aaa
das
out
inc
(bad)
lods
cmps
pop
dec
xchg
add
gs
jg
mov
xchg
push
push
das
add
(bad)
jnp
ja
push
xor
cmp
mov
imul
xor
cmp
adc
dec
add
stos
push
ret
cdq
sbb
add
cs
push
mov
mov
mov
mov
xchg
dec
clc
fisttp
push
test
je
sub
lock
std
mov
inc
xor
lea
inc
mov
stos
hlt
mov
add
mov
push
sub
mov
fsubr
push
(bad)
in
inc
dec
jne
movzx
adc
ret
(bad)
jae
xor
mov
mov
mov
(bad)
dec
add
ret
mov
ficom
sbb
outs
mov
pushf
loop
sub
push
sub
fistp
mov
imul
jo
sub
mov
movs
jge
sbb
add
add
mov
xlat
sub
hlt
popf
cwde
inc
cmps
daa
add
or
mov
sbb
mov
or
sub
cmp
add
fs
pop
xor
outs
and
data16
stos
mov
adc
aaa
mov
pop
aam
test
ds
xorps
enter
mov
xor
add
add
mov
loopne
ret
push
push
jp
(bad)
mov
inc
popa
(bad)
and
mov
inc
mov
sbb
inc
xchg
xor
mov
fbld
fwait
dec
jne
cmp
aaa
arpl
gs
inc
dec
and
gs
mov
sbb
or
adc
mov
pop
test
jecxz
xchg
add
hlt
mov
mov
fs
mov
push
push
mov
mov
daa
push
mov
daa
pop
xor
push
add
sbb
arpl
out
mov
test
inc
sbb
dec
xor
je
mov
fdivrp
and
push
dec
push
mov
add
adc
push
and
jp
sub
inc
jp
add
stos
pusha
adc
loop
mov
into
lea
ret
rcl
lea
mov
adc
fs
jp
inc
xchg
out
jno
adc
pop
push
pop
mov
jae
mov
and
or
jl
rcl
ficomp
mov
jnp
dec
sbb
imul
aaa
rcl
mul
add
pop
(bad)
add
aas
(bad)
mov
add
jo
mov
ins
je
sbb
pop
add
add
daa
ret
(bad)
je
cmp
inc
jl
lea
xchg
and
les
dec
cmp
jle
mov
cmp
sti
pop
dec
jne
ins
adc
mov
pop
sar
sbb
retf
jnp
add
fldenv
scas
mov
iret
adc
sub
out
dec
add
jbe
mov
xchg
mov
and
sub
lfs
xchg
call
pop
ins
mov
and
jo
into
call
stos
mov
shr
xor
enter
mov
mov
into
imul
xor
int
fucomi
mov
sub
shl
int3
adc
mov
xor
sub
ficomp
(bad)
imul
add
xchg
les
mov
push
mov
(bad)
jne
pushf
mov
or
inc
das
pop
jae
adc
inc
cs
lahf
or
push
movs
test
(bad)
push
jmp
cs
pusha
cs
int3
mov
sbb
add
mov
xchg
add
jno
push
inc
push
adc
push
or
outs
jae
loop
sbb
std
mov
fneni(8087
test
dec
pop
xchg
popa
je
adc
loopne
sar
push
add
jne
xor
jmp
mov
pop
add
add
fild
adc
add
jo
outs
in
outs
add
sub
pop
out
pushw
push
fs
pusha
int
add
cmp
add
xor
fchs
shr
push
or
rol
xchg
and
aaa
add
add
jmp
cmp
add
mov
mov
idiv
jno
in
test
call
ret
mov
leave
xor
std
dec
aaa
nop
sub
xchg
mov
xchg
mov
dec
mov
jmp
out
mov
shl
shl
sahf
cmp
inc
xchg
int3
jo
push
sub
pop
mov
outs
pop
sub
or
adc
xor
push
(bad)
(bad)
bound
mov
xchg
inc
shl
fcom
inc
and
push
inc
fsubr
(bad)
push
test
cmp
scas
adc
lea
repnz
scas
jbe
jnp
cmp
adc
out
aas
and
es
jecxz
scas
call
and
addr16
cmc
inc
add
stos
out
cmp
add
es
je
mov
imul
adc
sar
sti
js
sete
cmp
dec
es
sub
mov
nop
or
int3
in
fld
inc
cmp
imul
std
movs
or
sub
pop
div
xchg
adc
dec
movs
push
cmp
pop
cmp
sbb
pusha
loope
setbe
inc
fdiv
jle
movzx
cmp
push
xor
lock
loopne
mov
fucomip
or
and
adc
cs
mov
xor
mov
fadd
lea
retf
xor
ja
lods
sub
shr
clc
cmp
test
mov
test
add
adc
bound
adc
adc
mov
inc
mov
or
dec
lods
or
mov
adc
repnz
adc
or
pop
adc
ja
cmps
imul
mov
push
inc
dec
inc
aam
adc
add
sub
les
data16
and
cmp
aas
jb
add
and
adc
test
xor
(bad)
cwde
and
mov
adc
(bad)
shl
fild
push
adc
sbb
jg
fwait
cmp
xchg
sub
dec
jne
aas
hlt
adc
sub
nop
jb
test
or
pop
xor
mov
test
inc
outs
xchg
fadd
cmp
mov
outs
jg
mov
pop
cmp
lock
mov
add
fdiv
arpl
popa
fsub
(bad)
cmp
imul
bound
dec
fbstp
xor
(bad)
not
pop
int
dec
xor
daa
sub
or
ret
add
scas
mov
mov
and
xchg
sub
push
adc
inc
xchg
pop
pushf
mov
pop
pushf
adc
loopne
inc
mov
cmp
inc
lahf
je
fsubr
not
jae
daa
cmp
into
sub
clc
push
loopne
fsub
xor
pop
push
adc
lods
adc
(bad)
xor
or
mov
sbb
stos
xchg
in
sub
mov
mov
out
adc
imul
pop
je
movs
sub
clc
adc
fs
inc
mov
clc
sbb
pushf
jl
dec
cmp
or
pusha
xchg
mov
xor
xor
xor
mov
push
mov
mov
out
sub
(bad)
xlat
add
pusha
jecxz
mov
adc
add
xlat
enter
mov
mov
mov
rol
add
dec
loopne
sbb
cld
mov
pop
sbb
sbb
std
xchg
clc
push
or
push
repz
jno
pop
psubsb
enter
inc
or
fild
fist
xor
pop
add
add
dec
out
aas
xchg
adc
ja
mov
and
neg
dec
clc
mov
or
out
mov
sub
mov
into
out
shl
rcr
mov
and
stos
retf
add
jbe
inc
add
out
push
cmp
pop
or
xor
and
xor
push
sbb
xor
sub
mov
cmps
cmp
std
pop
mov
call
retf
add
(bad)
lock
add
adc
add
std
mov
push
stos
sub
jmp
inc
aaa
inc
xor
mov
daa
or
xchg
loopne
inc
jmp
add
add
shl
ja
dec
test
push
or
cmp
or
cmp
mov
push
nop
jecxz
dec
adc
xchg
push
xchg
xor
push
(bad)
mov
dec
inc
ficomp
ror
out
add
mov
or
mov
push
jnp
int
pop
mov
adc
sub
loopne
push
jmp
loop
inc
repz
into
(bad)
scas
adc
dec
and
pop
daa
add
scas
sar
xchg
outs
and
or
dec
sbb
add
fs
adc
add
mov
mov
jle
or
aaa
dec
inc
mov
xchg
cmp
es
sbb
(bad)
imul
fmul
dec
and
add
aaa
movs
inc
adc
or
retf
das
adc
scas
jbe
data16
arpl
inc
movs
inc
das
pop
add
and
jmp
nop
fcom
xchg
or
push
mov
cwde
and
(bad)
dec
push
xchg
addr16
jae
mov
inc
xor
or
aaa
mov
lds
aaa
push
xchg
xor
rcl
aas
inc
xor
and
aas
push
ret
push
mov
aas
mov
push
ss
iret
cmps
push
imul
aas
add
out
and
xor
aas
add
push
push
das
out
bound
movs
jo
into
fwait
jb
mov
sbb
(bad)
push
pop
not
addps
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
pop
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
dec
xor
daa
daa
daa
xor
xor
daa
daa
daa
xor
daa
daa
daa
cmp
cmp
daa
daa
daa
cmp
daa
daa
daa
and
and
daa
daa
daa
and
daa
daa
daa
sub
sub
cmp
daa
sub
cmp
dec
leave
add
mov
mov
cwde
adc
call
(bad)
pop
sbb
andps
je
js
(bad)
push
popa
jb
ins
inc
adc
or
jns
imul
cmc
enter
stc
add
pop
arpl
add
add
inc
ins
popa
addr16
cmp
add
outs
gs
pusha
fwait
cmp
and
xor
push
in
test
add
jb
idiv
mov
ret
prefetchwt1
popa
jo
push
pop
or
jge
cmp
xor
out
gs
jge
aaa
add
inc
cwde
jae
mov
sbb
sti
sub
fstp
push
and
dec
add
sbb
add
push
outs
test
rol
cmp
jne
xchg
adc
scas
in
cld
push
gs
ins
je
sub
in
loopne
gs
inc
repz
jg
cld
scas
fldenv
pop
dec
popa
jae
push
jo
adc
xadd
adc
or
or
and
retf
push
or
cmp
sub
xor
mov
mov
inc
push
or
fimul
daa
popa
sub
inc
sbb
add
loopne
lock
dec
dec
inc
out
das
fmul
add
out
pop
xchg
inc
outs
arpl
dec
jne
sub
or
scas
add
adc
jne
outs
movhps
jnp
out
in
mov
inc
add
mov
mov
jp
fdivr
push
inc
sbb
aas
ins
out
push
add
pop
inc
sub
popaw
arpl
dec
js
fild
push
jo
imul
ins
adc
lods
cmps
lock
gs
test
xor
ins
jmp
jbe
aaa
xchg
bound
lock
lahf
mov
add
das
outs
and
inc
outs
pop
sub
mov
addr16
dec
adc
pusha
and
ja
pop
jg
cmp
pop
addr16
or
xor
ror
add
pusha
dec
imul
or
out
push
pusha
test
push
out
add
or
inc
repnz
popa
pusha
xor
jg
xor
lahf
stc
test
loop
jmp
fist
dec
aaa
daa
and
add
push
xor
xlat
out
mov
rcr
jbe
daa
push
pop
fild
cwde
mov
aaa
loop
pop
aaa
cmp
inc
inc
(bad)
ror
xor
xor
pushf
pop
cmp
xor
xlat
mov
sbb
fbld
xor
popa
fild
outs
mul
jmp
pusha
or
add
rol
adc
mov
sbb
add
jmp
adc
mov
test
je
inc
inc
dec
jne
mov
push
push
add
mov
repnz
xor
mov
(bad)
jbe
lods
imul
ret
mov
mov
and
mov
xchg
idiv
aaa
add
dec
test
jl
inc
xor
mov
add
add
adc
fisttp
mov
cmp
sbb
mov
add
test
mov
mov
jle
push
or
jl
push
mov
fild
ror
nop
or
(bad)
mov
(bad)
cmps
cmp
jne
ins
sbb
ins
mov
jne
ins
out
jne
jnp
outs
push
adc
and
add
and
dec
adc
stos
mov
outs
popf
shl
push
movzx
add
mov
jmp
xor
sbb
push
lahf
adc
enter
adc
test
test
dec
loopne
int
sahf
mov
and
inc
push
add
pop
adc
and
mov
aad
mov
ficom
(bad)
adc
ret
mov
mov
add
mov
cmps
pop
pop
cmps
mov
aas
mov
mov
and
in
enter
retf
scas
add
mov
aam
or
mov
sbb
dec
loopne
in
sub
xchg
mov
test
rol
mov
fdiv
and
ins
mov
in
cmps
adc
mov
sub
or
push
or
dec
sbb
push
lea
mov
clc
mov
pushf
mov
bound
mul
jge
or
push
out
inc
mov
mov
sbb
shl
les
adc
ins
int3
out
adc
call
or
pop
and
int
popa
jle
mov
add
les
fbstp
inc
lock
push
pusha
das
add
xor
call
pusha
inc
int3
dec
rcl
sub
push
push
int3
mov
rcr
adc
add
dec
mov
add
mov
es
cmp
out
jg
pop
pusha
(bad)
mov
jmp
ds
mov
popa
jp
loopne
cmp
lock
mov
lea
fisttp
adc
add
dec
jne
inc
push
cmp
jo
push
sub
mov
in
int
pusha
in
dec
fs
xchg
mov
mov
add
pop
(bad)
and
scas
clc
sub
sbb
mov
mov
cs
pop
call
dec
dec
hlt
mov
xor
inc
sbb
popa
lods
push
lods
xor
and
out
pusha
push
pop
adc
into
rcl
adc
add
mov
adc
inc
loopne
test
mov
cmp
add
setne
es
test
jne
adc
add
or
(bad)
(bad)
scas
aas
out
lds
lods
jmp
xor
mov
inc
push
inc
imul
bound
push
sti
push
push
outs
sub
push
or
(bad)
ja
mov
(bad)
pop
(bad)
mov
sbb
xchg
xchg
jno
jbe
fwait
push
scas
not
jo
sbb
jle
inc
adc
ficomp
xchg
jecxz
sbb
or
dec
pusha
lock
int3
or
push
push
xchg
dec
pusha
(bad)
pop
scas
sahf
aam
xlat
in
rcr
stc
in
call
pop
cwde
into
jge
fdiv
cs
loopne
and
sub
(bad)
pop
inc
and
push
lea
mov
stos
ja
jo
jmp
lods
or
call
js
add
inc
outs
or
cmps
push
push
inc
and
add
das
imul
mov
mov
pop
lea
(bad)
cwde
enter
dec
jne
jmp
xor
or
mov
adc
lahf
jne
push
fs
mov
inc
scas
dec
fadd
jns
scas
loopne
sub
ret
dec
mov
mov
xor
mov
add
xchg
mov
cmp
sbb
or
jp
stos
loopne
jge
push
push
or
or
or
push
fld
(bad)
and
out
sti
lock
dec
adc
loopne
mov
fcmovnu
cmp
sub
in
test
push
xchg
clc
push
adc
test
je
leave
cmp
add
add
add
icebp
mov
(bad)
add
fwait
cs
mov
or
test
pop
enter
mov
stos
loop
bound
cmp
jne
into
lods
sub
or
jnp
pop
push
lds
push
loope
jmp
sub
cmps
sbb
rcl
outs
inc
sbb
enter
adc
dec
mov
shl
or
scas
and
push
push
repnz
sti
stc
lock
add
outs
fisub
or
and
movzx
sbb
push
das
dec
js
out
and
add
add
mov
movs
fiadd
pusha
sub
cmp
jne
mov
inc
pop
inc
cmp
add
inc
add
lock
ret
or
mov
inc
pop
or
nop
sub
xor
or
cmp
into
and
lds
(bad)
(bad)
test
pushf
add
jne
call
and
or
jge
and
es
pushf
xchg
push
sar
shl
mov
add
push
add
push
push
dec
inc
push
inc
outs
outs
jbe
jb
dec
jg
jbe
(bad)
int
adc
cld
push
or
pop
test
jmp
push
outs
je
jo
adc
dec
sub
dec
mov
dec
in
bound
and
push
es
mov
ins
ins
push
arpl
ins
popa
adc
push
outs
outs
je
dec
outs
fs
ins
sti
gs
outs
inc
or
or
inc
outs
arpl
jbe
pop
ds
(bad)
jne
outs
push
jne
arpl
outs
jb
popa
sahf
mov
inc
cmp
pusha
addr16
dec
gs
outs
jb
bound
inc
ins
push
idiv
push
jns
cld
inc
popa
retf
xchg
add
fldcw
sbb
ins
ins
jb
neg
int3
pop
je
jne
test
inc
jne
je
ins
rcr
or
inc
je
out
imul
ja
test
stos
popa
ins
out
push
sti
inc
outs
arpl
imul
dec
dec
or
pop
add
jb
mov
push
test
jnp
jno
imul
sbb
or
xor
push
push
movs
xchg
ss
xchg
and
add
sub
fnstenv
fdiv
push
adc
jae
fld
cld
add
pop
fld
(bad)
jmp
inc
out
mov
push
in
push
test
push
push
cld
mov
sbb
test
cli
xchg
add
xchg
inc
add
push
enter
out
or
push
mov
xchg
ret
sahf
pop
dec
adc
or
aad
rcr
or
shl
dec
mov
xchg
ins
ja
sbb
inc
inc
int3
imul
xor
cmc
sbb
rcr
ja
add
enter
inc
sub
movs
sti
ins
stos
js
inc
(bad)
inc
inc
lods
inc
retf
or
inc
push
cld
jl
cmp
ja
pop
add
dec
lods
push
mov
or
popa
push
in
mov
sbb
mov
and
lahf
imul
pop
pop
sub
gs
add
jmp
sbb
ss
mov
stc
add
neg
inc
test
push
cmp
push
je
xchg
int3
(bad)
in
arpl
or
xor
jne
add
outs
mov
iret
xchg
sub
inc
fwait
and
fild
adc
adc
and
pushf
data16
movhps
das
dec
popa
data16
jmp
scas
or
and
and
inc
dec
lods
stc
inc
push
scas
dec
push
clc
jns
or
out
or
clc
pop
push
cli
adc
push
das
cmp
loopne
add
mov
cs
mov
add
xor
dec
adc
xchg
pushf
loopne
add
loope
movs
adc
das
mov
mov
xchg
outs
mov
fst
jo
xchg
fidiv
push
add
push
or
adc
push
fiadd
sub
test
pop
cmp
or
pop
add
scas
nop
outs
pop
mov
sti
and
dec
sbb
cs
outs
jle
arpl
call
arpl
neg
or
mov
add
mov
pextrw
inc
jne
arpl
add
loop
cld
das
sbb
sbb
pop
pop
adc
sbb
cmp
aam
xchg
xlat
loope
mov
push
mov
shl
push
iret
bound
sbb
cmp
pop
pop
ret
inc
inc
int3
aam
int
add
ret
jp
or
adc
pop
xor
push
outs
pusha
daa
stos
jbe
dec
hlt
xor
add
add
mov
test
dec
lds
cmp
(bad)
jne
add
jecxz
xor
shl
cs
sub
or
shl
jo
dec
fisttp
add
xlat
push
fmul
lock
jae
xor
in
in
adc
mov
outs
or
in
add
jmp
shl
bound
adc
sbb
fidiv
inc
mov
sbb
push
psubw
cs
sub
jnp
loopne
sub
inc
mov
scas
data16
cmps
outs
sbb
in
int3
out
cmp
adc
(bad)
pop
push
ja
adc
adc
das
and
mov
adc
jle
jg
adc
xor
ror
popa
imul
inc
sbb
add
loopne
shl
jecxz
inc
mov
dec
mov
add
inc
loop
mov
xor
and
adc
aaa
pusha
ss
int
mov
cli
mov
and
or
inc
imul
and
add
retf
pop
push
stos
add
stos
sbb
pop
in
mov
out
inc
pop
scas
push
xor
push
sbb
test
mov
mov
lods
loopne
scas
xor
loope
push
inc
add
mov
fwait
jecxz
ins
test
cmp
push
xchg
pop
call
cmp
sbb
push
mov
mov
les
or
rcl
out
add
inc
mov
test
inc
movs
dec
aam
inc
add
sbb
popa
or
ss
icebp
cmp
cli
push
inc
clc
inc
xor
cwde
add
add
xor
ins
push
ja
lods
fst
or
or
inc
mov
add
aam
dec
ret
mov
dec
dec
pop
push
xor
aaa
out
inc
mov
mov
movs
lock
pop
jecxz
mov
daa
mov
jmp
push
lods
mov
inc
inc
(bad)
pcmpgtb
imul
inc
adc
add
or
push
mov
adc
xor
sbb
imul
sub
fild
dec
shl
cmp
sub
in
sbb
push
mov
add
mov
cmp
arpl
cdq
rcl
cli
push
dec
adc
outs
cmp
inc
cs
mov
pmulhuw
daa
and
out
pop
mov
daa
cmp
xchg
fist
pusha
xchg
in
in
loopne
icebp
arpl
repz
cmp
jns
jb
xchg
cmp
sbb
(bad)
std
adc
mov
inc
hlt
aas
bswap
mov
shr
mov
fimul
push
dec
inc
push
push
stos
es
cmps
(bad)
retf
pop
jp
mov
jmp
cmp
mov
cmp
test
dec
or
xchg
pop
cmp
pop
add
pop
je
and
jno
or
cmp
shl
daa
jno
mov
into
sahf
mov
or
add
(bad)
jle
ror
adc
add
addr16
adc
sbb
dec
pop
add
jg
enter
jg
pusha
dec
xor
dec
addr16
jae
sar
dec
dec
or
arpl
or
sahf
jns
push
or
sub
gs
jns
adc
rcr
outs
or
add
fsub
outs
cdq
ja
aad
push
adc
test
inc
test
jae
adc
cmc
daa
out
adc
xchg
mov
pop
inc
add
push
ud2
mov
rol
lea
leave
fwait
lods
jmp
fwait
add
mov
lea
mov
sub
inc
mov
mov
les
shr
ins
adc
xchg
ins
adc
sub
in
ror
imul
add
fisubr
popa
inc
lea
dec
add
xor
imul
xchg
shl
in
movs
pop
inc
js
mov
adc
dec
jno
add
imul
xchg
add
pop
stos
or
arpl
xchg
inc
ficom
xor
ins
xchg
sub
lahf
sbb
or
ja
and
loopne
inc
inc
jae
fcmovnu
mov
inc
nop
cmp
push
inc
pop
xor
sbb
es
jo
scas
out
pop
dec
cmp
inc
xchg
or
cld
push
cmps
adc
dec
and
dec
mov
mov
mov
lock
push
or
daa
jns
mov
or
adc
push
outs
xchg
rol
retf
jge
sti
or
mov
adc
sbb
dec
or
and
repz
push
cmp
and
sbb
and
dec
test
ror
dec
push
jb
ins
test
fs
mov
je
dec
pop
mov
jne
sub
mov
xor
cmp
adc
xchg
scas
adc
cmp
sub
ja
cmp
adc
(bad)
pop
pop
cmc
inc
or
push
fiadd
sahf
dec
iret
add
das
sbb
push
or
outs
adc
sub
sub
test
dec
movs
call
adc
clc
shr
je
je
stc
add
in
inc
lods
sbb
outs
or
mov
ficom
outs
inc
ret
sub
jmp
jmp
fimul
shl
loopne
test
jle
adc
adc
adc
jae
pusha
fdivr
shl
mov
les
cld
clc
xor
push
push
xor
mov
cs
test
push
int
rcr
lock
or
test
jne
popf
test
test
mov
or
cld
ret
arpl
pusha
ja
push
pop
or
js
sub
jl
ret
push
add
push
mov
sub
add
add
mov
add
add
and
cmps
dec
cmp
jge
ret
adc
lea
dec
cmp
(bad)
ffree
sar
pop
pop
test
jge
mov
fucomip
xchg
push
movs
test
mov
mov
fdiv
jle
mov
jge
mov
sub
daa
jmp
in
test
jl
cmp
jl
add
adc
push
adc
sahf
test
dec
mov
mov
jnp
sbb
jne
fucomip
lsl
adc
jbe
mov
cld
imul
les
sub
(bad)
gs
xchg
add
adc
sar
adc
push
ret
push
adc
daa
push
test
je
(bad)
dec
xchg
outs
fsubr
xchg
jo
sbb
xchg
sti
pop
pop
pop
mov
sub
dec
cld
xor
retf
jmp
inc
pop
and
enter
or
inc
(bad)
movs
je
mov
shl
add
or
or
push
icebp
aaa
test
jl
lods
mov
inc
mov
ret
push
dec
pusha
add
push
sti
pop
mov
lea
enter
jg
add
loopne
or
cmp
sbb
inc
(bad)
push
ret
je
dec
xor
lods
inc
sbb
xor
mov
xor
mov
push
dec
jge
sub
ret
(bad)
lock
cmps
js
sbb
cwde
jo
in
inc
xor
push
in
fistp
push
cwde
sub
or
cmp
sub
xor
pusha
jmp
test
mov
inc
push
pop
cmp
call
leave
mov
pop
pop
dec
mov
mov
mov
mov
fdiv
xchg
and
shl
add
imul
pop
mov
(bad)
cmp
rcl
hlt
jecxz
es
je
ins
push
cld
je
rol
ins
mov
jge
adc
push
aam
in
adc
push
ins
aaa
mov
push
dec
push
and
push
loope
ins
adc
enter
sbb
outs
bswap
push
in
cld
sub
pop
jle
mov
dec
hlt
in
push
jnp
add
mov
test
js
inc
aas
jbe
push
js
push
add
push
inc
push
jge
lods
sbb
loope
(bad)
push
fdiv
int3
lock
jmp
push
in
add
mov
xor
add
adc
or
in
sub
clc
mov
adc
ins
call
adc
mov
fistp
add
into
push
inc
dec
jne
int
loope
cmp
lods
es
lds
jmp
sbb
add
push
stos
mov
call
or
inc
and
lds
jle
dec
push
jl
inc
sahf
sbb
call
pop
call
adc
call
scas
inc
in
push
nop
mov
fidivr
fucomip
lods
mov
shr
or
or
pop
mov
mov
shl
in
xor
ret
inc
and
lahf
push
add
cmps
mov
fsubr
mov
movs
cmp
sbb
dec
push
retf
jbe
cmp
push
or
adc
dec
or
leave
add
pop
adc
adc
stos
stos
test
ret
push
imul
rcl
push
push
inc
rol
(bad)
aad
inc
dec
bound
leave
inc
or
and
rol
(bad)
xor
outs
push
shr
push
jge
add
popf
push
fiadd
sub
ret
add
jl
mov
cmp
sub
push
jo
inc
test
mov
pop
cmp
add
adc
adc
lock
je
add
popf
enter
hlt
daa
adc
push
push
or
push
and
xor
f2xm1
push
lahf
or
into
in
pop
ja
inc
jle
jae
mov
mov
inc
jmp
xor
jo
jnp
fidivr
mov
addr16
or
inc
add
hlt
mov
(bad)
xchg
sahf
(bad)
mov
ret
fsub
int3
scas
cmps
jmp
(bad)
lea
ds
bound
dec
lock
ds
mov
imul
jae
pop
in
cmp
dec
and
sbb
jmp
ret
add
add
das
loop
adc
fsubr
pop
or
das
(bad)
mov
out
mov
test
sbb
loopne
mov
or
sti
(bad)
jo
imul
push
bound
test
aaa
adc
lds
or
cmp
data16
and
mov
adc
pop
movs
push
popa
jns
adc
pop
xor
add
push
cmp
pop
pop
scas
push
push
add
call
xchg
jnp
jge
rcl
inc
cmp
test
dec
mov
dec
xor
mov
xchg
sbb
ss
or
outs
cmps
dec
jo
inc
ins
out
out
outs
test
or
outs
jno
xor
push
mov
les
push
push
ja
add
add
out
cmp
or
or
into
add
ja
mov
or
mov
mov
jmp
sbb
or
push
std
jne
adc
jae
push
fcom
mov
gs
shl
xor
(bad)
popa
(bad)
in
sahf
push
lahf
push
push
retf
jbe
mov
dec
fs
push
jns
mov
mov
dec
or
mov
fcomp
in
or
pop
push
adc
dec
imul
inc
mov
pop
addr16
xchg
pop
push
daa
ds
xchg
push
scas
mov
xor
aaa
mov
popa
cmps
inc
dec
sbb
inc
push
inc
inc
mov
dec
push
loopne
ins
jo
rcr
or
mov
sti
or
daa
call
push
setae
seta
adc
push
sub
fdiv
int
es
sbb
push
ffree
or
nop
pop
inc
inc
shl
xchg
pop
in
or
pusha
mov
dec
push
pop
dec
pop
pop
aam
lods
stos
dec
cs
xchg
jns
aas
add
pop
xor
lods
scas
and
aas
fld
and
arpl
adc
(bad)
push
(bad)
dec
add
dec
ja
pop
add
shr
popa
(bad)
call
jg
jg
jae
xchg
and
test
push
inc
sub
add
push
jne
add
inc
and
je
out
pop
cmp
pop
mov
mov
sbb
and
es
scas
sbb
pop
xor
popf
pop
psrlw
add
or
or
pop
mov
stos
push
mov
ret
adc
pop
fmul
adc
or
add
jle
add
cdq
mov
and
sub
inc
pop
add
or
rol
stos
loopne
cmc
pop
std
xor
xor
pop
mov
addr16
dec
add
pushf
add
sbb
add
pop
call
rcr
sub
arpl
mov
inc
mov
pop
ret
fstp
fwait
rcr
or
aaa
das
dec
push
and
inc
inc
aaa
add
outs
inc
pop
add
add
add
inc
xchg
mov
outs
fdiv
mov
push
nop
pushf
out
daa
sbb
pusha
mov
es
jno
adc
test
ret
pop
test
sti
inc
inc
test
sub
push
scas
xor
sbb
xor
call
jo
(bad)
nop
push
add
inc
lsl
adc
cmps
add
bound
sub
sahf
inc
loopne
fcomp
aaa
in
pop
add
cmp
into
das
xchg
push
push
and
cli
aas
pushf
fdiv
rcr
js
add
sbb
shl
sbb
vsqrtss
mov
inc
fisubr
ret
pop
test
test
imul
es
cmp
repz
xchg
fist
xor
add
sub
dec
xor
loopne
in
(bad)
test
into
sysret
cmovno
add
or
push
dec
jl
push
data16
xchg
call
rsqrtps
dec
dec
dec
mov
push
adc
daa
daa
daa
cmps
hlt
sbb
enter
dec
or
adc
leave
leave
leave
dec
(bad)
out
adc
in
fs
(bad)
sti
jb
xor
and
cmp
jns
push
cmp
xchg
rcr
pop
pcmpgtd
adc
inc
cwde
pop
lds
in
push
pop
mov
in
jmp
push
and
dec
mov
xorps
jl
add
mov
dec
or
sbb
pushf
or
mov
push
ss
cmp
ror
daa
inc
cmc
in
and
xor
jb
inc
jle
dec
icebp
pop
dec
retf
cmovns
dec
jae
mov
dec
clc
mov
adc
add
push
popa
jg
jl
or
jg
pusha
dec
shl
(bad)
popa
inc
mov
enter
cmp
fadd
loope
add
jo
ins
push
loope
pop
push
jno
jne
or
inc
or
bound
cdq
ja
aam
push
adc
push
push
or
or
stc
out
add
xor
imul
cmps
inc
and
mov
and
rol
gs
xor
lea
push
cmp
sub
or
push
sub
pop
dec
jae
jo
jmp
adc
es
dec
imul
sbb
add
sbb
add
lea
nop
cmp
xor
imul
inc
fwait
cmps
enter
xchg
popf
je
jmp
inc
js
jo
add
add
sbb
aas
xor
mov
dec
mov
outs
scas
mov
or
shl
push
lock
(bad)
or
int
xchg
mov
adc
gs
xor
add
dec
fld
sbb
jg
das
pop
sahf
sbb
add
daa
xchg
xchg
xchg
es
and
aad
sub
dec
aaa
jae
popf
jmp
imul
or
stos
ss
lds
in
dec
std
ret
sub
cmp
or
daa
sub
add
and
ds
xchg
xor
mov
shl
push
xor
bound
dec
enter
ins
or
and
or
repz
add
mov
pop
xchg
mov
xchg
dec
sar
and
mov
push
jb
ins
mov
jae
xor
js
ret
or
add
mov
dec
lods
and
or
inc
sub
sub
stos
lods
popa
mov
shl
push
pop
arpl
pop
xor
int
sbb
in
inc
loope
cmp
pop
adc
pop
mov
inc
cmp
fidiv
mov
jns
int
add
or
sti
add
outs
jo
add
add
int3
and
stos
push
test
rol
dec
hlt
mov
imul
js
push
adc
lods
jmp
mov
mov
pop
aas
sbb
imul
jmp
scas
rol
add
mov
add
popa
push
or
ins
outs
push
xor
push
push
jb
addr16
mul
fs
xor
fdiv
arpl
adc
pusha
scas
xor
mov
push
inc
js
adc
mov
and
(bad)
sub
fmul
into
push
ret
mov
lock
mov
subps
add
mov
and
fistp
jl
pop
adc
loope
or
mov
mov
mov
sbb
adc
adc
cmp
mov
stos
iret
mov
push
repz
sub
pop
or
sub
imul
add
out
adc
pop
and
xchg
pop
pop
push
test
mov
mov
mov
sub
in
push
lea
in
fmulp
and
pmulhw
ret
outs
cli
jge
mov
movs
test
aaa
inc
add
push
jle
xchg
in
mov
mov
or
daa
or
rol
or
or
push
push
hlt
sub
or
retf
pop
lods
cli
outs
fbld
js
mov
(bad)
fucomip
lsl
adc
mov
cmp
jg
push
mov
aas
sbb
push
cmp
or
or
dec
push
inc
adc
push
adc
add
push
shr
fnstenv
rcl
outs
test
sti
jmp
mov
lea
mov
push
sbb
fistp
dec
pop
pop
pop
inc
adc
push
lea
cld
jle
jo
stos
jl
jmp
and
pop
pop
out
adc
(bad)
add
pop
cmp
fsubr
fisubr
inc
xchg
(bad)
fisttp
jne
add
ins
adc
cmp
test
jb
rcl
push
shl
inc
sbb
xchg
push
mov
out
dec
clc
pusha
mov
mov
and
pop
shl
dec
inc
adc
mov
lock
jmp
jo
sti
cmp
cli
or
sbb
loope
mov
or
jmp
push
cld
push
mov
test
jmp
imul
cmc
pop
pop
aam
clc
lea
mov
or
sbb
leave
push
in
mov
sbb
cmp
pop
pop
pop
or
push
das
fmul
xor
mov
fidivr
xor
rol
(bad)
fisttp
fld
jge
xor
push
adc
(bad)
cmp
out
or
xor
or
fsubr
mov
push
aam
nop
jge
mov
jnp
fisttp
int
jl
jmp
clc
push
clc
pop
fwait
or
hlt
enter
sbb
fild
jae
in
adc
rcr
push
mov
dec
hlt
fcmovu
fisubr
loopne
jge
test
js
inc
aas
push
inc
push
js
sbb
iret
shr
push
ins
inc
ins
sti
rcr
retf
xor
loope
(bad)
push
mov
push
call
push
in
add
pusha
add
adc
adc
ins
inc
fs
push
ja
or
inc
ins
call
mov
icebp
mov
push
inc
dec
jne
in
jecxz
sbb
lods
es
mov
icebp
jmp
sub
mov
adc
mov
jbe
push
leave
shr
cmps
retf
hlt
push
adc
cld
loope
push
fdiv
xor
jle
dec
inc
jl
inc
int3
lea
js
je
or
pop
cmp
cwde
dec
inc
dec
jne
push
sti
jb
shl
xor
je
js
sbb
lods
call
dec
push
add
and
mov
or
add
adc
adc
xchg
aad
adc
or
ja
mov
or
push
or
push
add
fsub
ret
inc
and
lahf
push
push
lods
sub
sub
ret
gs
(bad)
rcl
dec
das
push
xor
sti
idiv
pop
add
push
dec
inc
outs
arpl
(bad)
fistp
push
out
rcr
dec
mov
or
outs
inc
sbb
imul
bound
inc
inc
cmp
xchg
lds
es
test
jne
sub
pop
psubsw
xor
fdiv
inc
(bad)
jmp
mov
stos
icebp
scas
adc
and
dec
dec
ins
jo
enter
call
mov
inc
into
inc
cmps
aaa
and
loop
push
adc
movs
xor
xor
inc
or
sbb
pop
dec
dec
push
arpl
(bad)
fstp
call
jnp
jmp
scas
rcl
mov
sbb
jmp
inc
fdivr
dec
jl
pop
bnd
stos
loop
and
jns
inc
mov
cmc
sbb
(bad)
jmp
js
dec
push
popa
retf
add
out
fidivr
clc
dec
mov
shl
mov
ins
push
and
xlat
addr16
dec
or
scas
inc
test
ins
xchg
ret
outs
xor
add
dec
sub
push
push
(bad)
ins
mov
dec
mov
inc
sub
outs
or
idiv
lahf
in
mov
pop
xchg
dec
mov
adc
mov
cmp
ins
fld
sub
xor
pop
inc
xchg
mov
clc
std
lods
mov
add
outs
inc
popa
jne
idiv
dec
xchg
sbb
imul
sahf
cs
lds
adc
repnz
pop
std
addr16
not
dec
mov
xchg
push
movs
stos
xchg
push
fdiv
or
je
pop
mov
ret
fwait
mov
inc
mov
std
mov
ret
out
(bad)
fstp
out
sbb
daa
push
xchg
jo
add
scas
dec
cmps
and
(bad)
shr
ja
out
push
push
push
outs
in
dec
inc
xor
(bad)
cmps
rol
inc
ss
inc
mov
pop
(bad)
call
outs
in
and
pop
dec
into
inc
je
rcl
pop
pusha
jno
pusha
ja
dec
daa
jmp
cmc
test
jo
lds
mov
es
cmp
(bad)
fnsave
out
adc
outs
ja
jb
xchg
outs
mov
inc
mov
and
adc
lds
aas
fdivr
cld
dec
xchg
icebp
adc
lahf
es
lahf
lods
xor
je
mov
leave
cmp
and
jmp
bound
cmp
sar
mov
jmp
pop
xchg
xchg
ret
fcom
sbb
je
inc
popf
lahf
bound
sbb
cwde
outs
cmp
push
outs
in
add
enter
sub
sar
nop
js
mov
retf
outs
mov
mov
mov
js
push
xchg
std
xor
daa
data16
call
loopne
sbb
or
inc
xchg
and
or
or
outs
mov
add
sbb
jbe
arpl
mov
in
stos
xchg
cmps
(bad)
ror
fdivrp
xor
jle
jno
outs
jg
rcl
gs
leave
addr16
fcomip
dec
sub
fdivr
les
(bad)
in
sti
jmp
call
ja
sub
and
call
fcos
int3
add
jmp
bswap
inc
shl
mov
cmp
or
add
sar
in
ins
jb
out
in
ins
(bad)
out
lods
(bad)
jb
enter
lock
jb
in
ins
push
mov
jmp
ss
lahf
in
hlt
paddsb
icebp
mov
in
sbb
(bad)
nop
pavgw
loope
fstp
pandn
cwde
bsr
cmp
adc
das
call
pushf
(bad)
xor
das
into
jg
cmp
std
or
inc
add
add
sub
lds
xchg
int3
popa
sub
imul
jns
cmps
stc
and
sub
cmp
jns
out
push
pop
popa
imul
cdq
jns
out
mov
out
sahf
out
rcr
loope
jnp
jnp
icebp
stc
add
or
adc
call
sub
cmp
les
out
push
pop
adc
sbb
cs
jg
or
sub
sub
loopne
les
or
test
jno
dec
sub
xchg
or
and
push
fisubr
in
lock
pop
fiadd
sub
js
imul
adc
cs
pop
add
push
mov
ja
mov
test
ins
aas
jl
fild
mov
xor
jg
(bad)
jg
jecxz
mov
in
sub
pop
test
mov
cli
ficomp
jo
daa
out
maxps
pop
cmovle
leave
cmp
pop
maxps
jae
maxps
maxps
jg
hlt
divps
pop
wbinvd
sahf
xchg
jae
maxps
jg
jae
dec
pop
maxps
pop
out
pushf
pushf
maxps
pop
setle
cmp
pop
pop
iret
pop
cmp
out
maxps
pop
cmovle
leave
cmp
pop
maxps
maxps
jae
lock
pop
maxps
in
pushf
xchg
pop
maxps
push
cmp
out
maxps
outs
xchg
(bad)
adc
pop
mov
pop
xchg
sub
fwait
push
movs
jns
aaa
cli
push
sub
push
popa
imul
or
mov
ror
sahf
out
rcr
loope
icebp
sahf
out
out
add
and
out
sub
cmp
out
sahf
out
pop
popa
imul
or
out
dec
adc
and
jp
xor
fisub
outs
jo
call
sbb
fsub
add
pop
sbb
and
test
xchg
add
cmp
jo
push
lahf
dec
add
les
hlt
outs
pop
or
add
add
and
pop
cmp
jae
cmps
shl
lods
mov
out
addr16
leave
cmp
setae
dec
packuswb
shl
sahf
aas
packuswb
xchg
cmps
out
mov
pushfw
xchg
jae
packuswb
addr16
dec
lock
addr16
packuswb
in
pushf
xchg
packuswb
cmp
daa
out
packuswb
addr16
fsubr
pop
packuswb
cmp
daa
out
packuswb
addr16
into
leave
packuswb
setl
packuswb
addr16
jae
lock
addr16
pushf
pushf
packuswb
setns
addr16
outs
addr16
xchg
(bad)
daa
addr16
mov
das
adc
push
fld
lea
xchg
popf
movs
lods
sahf
out
sahf
mov
vpmullw
jnp
out
in
cmc
std
add
fimul
sub
jns
inc
dec
push
pop
out
sahf
out
ins
jne
test
xchg
popf
movs
lods
mov
pushf
out
jns
jge
das
jae
cli
js
in
push
imul
ins
lahf
adc
push
xchg
xor
sub
mov
pop
scas
cmp
ds
add
iret
add
ss
sbb
cmp
fisub
pop
xor
and
push
mov
sbb
cmp
xor
inc
add
pop
gs
adc
push
jb
sbb
lock
jne
mov
retf
mov
test
cdq
sbb
pop
mov
inc
test
xor
xor
std
jb
and
xchg
pop
sysret
pushf
xchg
mov
sysret
sysret
movzx
lods
pop
sysret
aas
(bad)
out
hlt
lods
pop
(bad)
jg
pop
clts
sysret
cmp
addr16
pop
sysret
aas
addr16
adc
sysret
bswap
pop
cmp
pop
sysret
movzx
into
pop
sysret
pop
push
bswap
pop
cmp
pop
sysret
btr
into
pop
sysret
sysret
pmulhw
movhps
addr16
sysret
maxps
addr16
pop
sysret
sysret
iret
retf
sysret
sysret
das
push
pop
stos
add
(bad)
aad
in
pop
adc
dec
xor
sub
push
pop
or
out
push
sbb
sub
cmp
jns
out
push
pop
popa
imul
or
mov
ror
sahf
out
rcr
loope
icebp
sahf
out
out
add
push
adc
and
out
sub
cmp
outs
sar
xchg
sbb
loop
sub
pop
int
mov
mov
push
sub
mov
pop
ror
aaa
or
aad
mov
sbb
push
or
pop
sbb
and
or
cmp
loop
mov
ss
cmp
mov
xchg
inc
xor
cmp
repz
imul
xrelease
repz
mov
ror
fnstcw
jmp
repz
(bad)
or
adc
and
xor
cmp
cmp
push
pop
fdivp
cmp
popa
imul
jae
repz
sub
cmp
sub
jo
(bad)
mov
mov
cmp
call
fucomi
mov
and
pop
or
adc
sub
or
xchg
xor
sti
test
mov
inc
push
test
movntq
lds
out
cmp
inc
fld
sahf
out
sahf
popf
movs
lods
mov
lds
out
int
fucom
in
sahf
neg
xchg
sahf
out
and
out
sahf
out
push
pop
gs
sahf
out
sahf
jne
test
out
movs
lods
mov
pop
(bad)
sahf
out
fisub
ins
jne
dec
push
pop
pop
loopne
jg
in
ds
je
jg
sub
in
fisttp
cmp
push
add
adc
push
push
push
pop
or
xor
fsub
jmp
mov
setae
and
inc
out
pushf
pushf
cmova
inc
paddsw
cmp
inc
cmova
pand
cmp
jg
inc
cmovbe
inc
iret
leave
cmp
cmova
inc
aas
cmp
cmova
into
leave
cmova
inc
setge
inc
pop
inc
jb
into
leave
cmova
inc
setl
cmova
daa
out
cmova
inc
syscall
iret
leave
cmp
inc
maxps
cmp
cmps
inc
cmova
jae
dec
into
inc
cmova
inc
das
dec
xchg
imul
fdiv
xor
jmp
stos
push
repz
std
test
out
sahf
out
leave
rcr
loope
out
jns
jmp
or
adc
jns
out
and
xor
sahf
out
sahf
inc
dec
push
pop
popa
imul
or
mov
sahf
out
sahf
ror
fabs
mov
out
cdq
test
or
cmp
cmp
jne
push
mov
rol
test
xchg
mov
daa
movs
lea
xchg
xchg
dec
ret
fimul
and
and
push
pop
xchg
cmps
inc
adc
and
or
shl
(bad)
call
int3
xchg
pop
xor
mov
jnp
(bad)
(bad)
mov
cmc
cmp
into
mov
pop
mov
jl
sbb
sbb
data16
push
out
fsubrp
xor
xchg
inc
dec
push
sahf
out
sahf
pop
popa
imul
jns
xchg
cdq
mov
out
mov
out
sahf
fabs
jmp
jns
not
or
adc
and
(bad)
jns
out
push
cmp
push
pop
mul
sahf
out
imul
cmp
repz
and
and
in
out
shr
adc
inc
push
push
add
or
ins
lock
test
and
inc
or
shl
fild
adc
push
and
sub
cmps
(bad)
sahf
push
jno
test
mov
cs
jno
jns
mov
cdq
mov
repz
ror
fabs
jmp
icebp
stc
add
repz
sbb
sub
cmp
iret
repz
push
pop
popa
imul
jns
mov
cdq
mov
push
pop
ret
cmp
xor
out
out
(bad)
(bad)
fimul
mov
jge
ja
inc
test
ins
xchg
enter
imul
inc
fnsave
dec
push
add
cmp
push
jno
push
mov
sbb
das
scas
mov
mov
(bad)
mov
dec
sub
adc
fstp
(bad)
in
push
cdq
push
mov
out
mov
out
sahf
fabs
jmp
jns
div
push
adc
and
sahf
out
sahf
xor
inc
dec
push
pop
jns
out
popa
imul
out
xchg
cdq
mov
sahf
mov
ror
(bad)
jno
jg
out
jns
out
jle
inc
shr
jle
dec
mov
(bad)
std
sbb
(bad)
jb
lock
fistp
sub
fwait
test
inc
push
mov
fnstsw
add
cmps
and
popf
fisttp
xchg
mov
xor
and
and
cmp
xchg
(bad)
mov
push
dec
gs
popa
addr16
and
mov
xor
scas
ss
push
inc
cmp
jge
push
jo
jb
pop
pop
lock
jg
dec
out
ds
jp
push
jge
dec
xchg
push
cmp
dec
push
pop
popa
imul
or
mov
sahf
out
sahf
ror
fabs
jmp
icebp
stc
add
or
adc
out
sbb
inc
xor
inc
out
jns
out
push
pop
popa
add
sbb
adc
and
dec
out
stc
adc
mov
pop
xchg
dec
mov
adc
mov
mov
sub
dec
fwait
sbb
add
dec
pop
hlt
daa
push
mov
ja
push
jg
xor
sbb
add
ja
sbb
test
ja
mov
xchg
and
push
test
ud2
fadd
pop
sahf
rdpmc
or
mov
adc
mov
shl
call
gs
ins
jns
out
jne
test
out
movs
lods
mov
sahf
out
sahf
vpmullw
in
out
out
cmc
std
add
sahf
out
sahf
sbb
inc
jns
out
dec
push
pop
gs
out
sahf
out
jge
lea
push
sahf
xor
and
fidivr
sahf
push
aaa
jecxz
jmp
repz
repz
repz
adc
and
repz
sub
cmp
push
cmp
repz
arpl
jnp
cmp
repz
cmp
stos
mov
ret
retf
sar
repz
jecxz
repz
js
ja
add
or
adc
fistp
cmp
cmp
mov
inc
mov
xchg
outs
mov
inc
mov
lds
and
(bad)
inc
mov
mov
fadd
fnsave
out
adc
mov
push
addr16
add
data16
pop
inc
xchg
mov
and
cmp
pop
adc
mov
add
mov
scas
push
mov
popa
ins
push
out
xor
jecxz
mov
cmp
jns
aad
cmp
retf
in
into
retf
(bad)
push
cmp
jns
das
out
(bad)
(bad)
jnp
into
retf
(bad)
(bad)
aas
psadbw
imul
push
(bad)
retf
mov
cmp
repz
into
cmp
cmp
cmp
pop
out
sub
dec
cmp
cmp
(bad)
imul
in
cmp
cmp
pushf
xchg
repz
cmp
cmp
das
out
mov
cmp
retf
jns
(bad)
(bad)
xadd
jb
cmp
cmp
pop
jb
into
imul
cmp
mov
(bad)
(bad)
xlat
in
lock
outs
cmp
cmp
mov
adc
sub
mov
jo
out
call
pop
mov
btr
into
or
or
or
mov
sahf
test
aas
ud2
packuswb
(bad)
or
test
or
or
sub
ud2
aas
call
ud2
ud2
into
ret
ud2
ud2
ud2
mov
push
or
ud2
into
ret
ud2
ud2
jne
ud2
ud2
addr16
pushf
ud2
ud2
cvttps2pi
cmp
or
pop
or
or
ud2
ud2
syscall
iret
ret
ud2
das
outs
loope
pop
mov
adc
daa
mov
adc
cwde
cvttps2pi
loope
or
call
ud2
push
or
sub
test
or
or
or
jnp
addr16
or
cmp
(bad)
loope
iret
bound
(bad)
mulps
or
ud2
ud2
ret
loopne
call
into
or
or
or
icebp
sub
test
ud2
pop
mov
push
outs
or
or
or
loope
pushf
test
ud2
mulps
or
ud2
ud2
js
into
ret
ud2
bswap
ret
pop
or
or
test
or
or
outs
or
clc
xchg
ret
daa
or
xchg
int3
inc
push
xor
repz
push
push
add
push
iret
repz
adc
and
xor
cmp
repz
dec
push
pop
popa
repz
repz
cmp
xchg
cdq
mov
iret
repz
leave
rcr
loope
cmp
repz
or
jns
out
adc
and
xor
add
push
loope
mov
(bad)
push
sahf
push
fild
sahf
out
xchg
lahf
cmps
scas
mov
out
sahf
mov
out
sahf
out
out
idiv
pop
xchg
push
sahf
out
sahf
pop
pop
daa
das
aaa
aas
jns
out
inc
dec
push
pop
addr16
sahf
out
ja
xchg
xchg
lahf
cmps
scas
mov
out
fidivr
(bad)
pop
push
outs
ja
ret
dec
push
sahf
push
popa
or
out
sahf
sbb
inc
jns
out
dec
push
pop
gs
out
sahf
out
jge
lea
popf
movs
lods
mov
lds
out
int
fucom
in
sahf
out
out
std
add
jns
out
and
out
pop
out
add
cmc
std
ja
inc
test
iret
ins
push
pop
adc
add
sub
jg
test
add
and
retf
lds
and
ss
pop
test
mov
pop
add
test
cld
js
mov
push
add
and
popa
jne
push
sahf
or
mov
push
sbb
loope
cmpps
pop
dec
test
out
xchg
mov
mov
out
popa
pop
pop
out
lock
jne
pop
push
push
xor
inc
dec
push
pop
popa
jns
out
imul
sahf
out
cdq
mov
jns
mov
loope
sahf
out
jmp
or
jns
out
adc
inc
sub
cmp
jns
out
dec
push
pop
stc
jnp
jns
(bad)
add
push
adc
cmps
es
fdiv
aaa
fiadd
pop
std
addr16
not
dec
mov
xchg
push
movs
stos
xchg
xor
xchg
(bad)
in
add
in
daa
repnz
cmp
inc
out
pop
jno
popa
outs
add
xor
push
jmp
mov
seta
cwde
not
ds
psubb
jecxz
mov
js
or
mov
repz
mov
jne
test
repz
lea
cmp
repz
vpmullw
idiv
repz
cmc
std
add
mov
and
iret
repz
iret
repz
gs
jne
test
xchg
push
sahf
sub
ja
iret
inc
dec
addr16
fwait
mov
inc
mov
sar
mov
mov
cld
pop
sbb
popf
inc
inc
add
pusha
je
jns
out
push
sub
push
push
mov
push
adc
popa
or
jae
shr
test
cld
scas
test
gs
jl
dec
scas
test
lods
nop
xchg
mov
and
and
test
xchg
sub
loope
(bad)
push
ss
cld
xcrypt-ecb
cmps
push
push
adc
dec
bound
idiv
cmp
pop
or
push
sbb
jns
out
sub
cmp
out
sahf
out
pop
popa
imul
or
mov
ror
jns
out
fabs
jmp
sahf
stc
add
push
adc
and
jns
out
xor
inc
loope
idiv
push
jmp
outs
ror
(bad)
jg
out
rcr
daa
neg
or
push
xchg
scas
dec
cmps
je
out
stos
and
(bad)
push
ret
dec
sti
dec
mov
push
cmp
lock
fadd
loope
pmaxub
jmp
dec
ror
xchg
fdivrp
pop
and
inc
out
dec
xor
and
popf
into
pop
(bad)
inc
mov
inc
fs
out
push
push
pop
popa
imul
or
mov
ror
sahf
out
rcr
loope
icebp
sahf
out
out
add
or
adc
and
mov
cmp
push
dec
sahf
out
sahf
push
pop
popa
imul
cmp
lahf
jle
fdivr
dec
xor
(bad)
cmps
inc
(bad)
mov
cmps
or
imul
call
push
add
push
je
ret
imul
push
pop
xchg
mov
push
or
mov
or
cmp
call
inc
or
jb
push
jns
xor
mov
sbb
mov
adc
and
mov
mov
sub
cmp
sahf
sub
repz
mov
xor
loope
jmp
push
sahf
push
adc
and
xor
repz
inc
dec
push
pop
repz
repz
imul
iret
mov
cmp
repz
ror
fld1
cmp
repz
icebp
stc
push
sahf
out
in
push
adc
mov
iret
repz
leave
rcr
mov
shl
pop
dec
into
inc
je
rcl
fdivr
push
mov
ins
fcomp
pop
lods
(bad)
and
inc
arpl
call
add
xor
adc
mov
mov
xor
aam
mov
aam
and
mov
lahf
daa
inc
jne
imul
xor
repz
cmp
push
pop
popa
cmp
and
sbb
push
jns
repz
xrelease
repz
mov
ror
fnstcw
jmp
iret
cmp
adc
inc
sub
repz
repz
push
pop
mov
ja
stc
push
add
or
adc
(bad)
inc
(bad)
scas
icebp
adc
lahf
es
lahf
lods
xor
je
mov
adc
fsubr
ins
push
inc
fnstsw
jmp
fmul
pusha
outs
push
out
push
or
pop
and
iret
clc
scas
xor
test
xchg
push
pop
popa
or
adc
addr16
and
and
pop
xchg
xlat
adc
imul
xchg
adc
push
mov
mov
push
jmp
jo
push
out
pop
iret
sub
(bad)
fld
in
jns
jge
cmc
std
add
out
sahf
out
and
out
sahf
inc
dec
push
pop
gs
jns
out
jne
test
out
movs
lods
mov
sahf
out
sahf
vpmullw
in
mov
std
add
jns
out
push
mov
mov
cmp
or
aad
xor
movs
test
loope
sar
mov
outs
out
es
cdq
dec
sahf
loopne
pop
add
pop
push
inc
cmp
pusha
test
je
mov
sbb
pop
or
cmps
mov
or
loope
cmps
xchg
sub
add
mov
sbb
gs
push
jns
jb
cmp
cmp
xor
movs
cmp
push
pop
(bad)
dec
push
jne
iret
repz
test
iret
rep
lods
mov
(bad)
cmp
int
fucom
in
cmc
idiv
or
cmp
repz
sub
sti
jo
repz
pop
sbb
jg
repz
pop
fcom
sbb
fdivr
inc
popf
lahf
bound
sbb
pop
pop
pop
fcmovbe
popf
test
loopne
fs
repnz
mov
es
pop
pop
sub
xchg
dec
xchg
inc
or
dec
sbb
ret
hlt
sbb
xor
loopne
or
or
pop
jge
test
cmps
sbb
xchg
adc
loop
adc
shl
iret
repz
icebp
stc
add
repz
scas
push
adc
and
xor
repz
inc
dec
push
pop
repz
repz
imul
iret
mov
cmp
repz
ror
f2xm1
cmp
repz
icebp
stc
add
mov
push
test
shl
iret
leave
xchg
cdq
mov
(bad)
faddp
add
enter
inc
lahf
hlt
nop
js
mov
retf
into
add
inc
js
(bad)
es
pop
ja
add
mov
test
mov
xor
int
test
je
shl
stos
mov
idiv
mov
pmulhuw
addr16
cmp
out
packuswb
addr16
into
leave
packuswb
addr16
psadbw
imul
popf
sahf
shl
data16
jb
into
packuswb
addr16
dec
out
sub
dec
packuswb
jb
packuswb
cmps
out
pushf
packuswb
pushf
xchg
jae
packuswb
addr16
out
pushf
packuswb
addr16
leave
cmp
packuswb
xadd
dec
packuswb
pop
jb
into
imul
xchg
jae
packuswb
shl
lock
outs
adc
mov
adc
jp
loopne
sub
push
pop
add
repz
adc
cmp
inc
dec
push
pop
gs
rep
jne
test
xchg
popf
movs
lods
mov
cmp
repz
int
fucom
sbb
cmc
std
add
sahf
out
adc
iret
repz
cmp
in
cmc
std
push
dec
sub
cmovl
or
lahf
out
rcl
dec
mov
fld
add
pop
mov
or
mov
nop
cmp
mov
fild
add
leave
cmp
push
int3
(bad)
stos
inc
(bad)
out
sbb
jne
js
push
mov
repz
push
inc
dec
push
pop
cmp
repz
ins
jne
test
cmp
repz
repz
mov
vpmullw
cmp
in
cmc
std
add
(bad)
or
sub
repz
cmp
cmp
cmp
jbe
push
sbb
imul
add
(bad)
mov
mov
push
inc
xchg
and
xchg
out
add
daa
push
fdivr
push
add
jg
clts
inc
dec
pop
(bad)
jno
sbb
frstor
shl
sub
in
sbb
sub
sub
outs
popf
cmp
mov
outs
gs
ins
repz
repz
test
iret
popf
movs
lods
mov
lds
repz
aad
in
iret
jnp
repz
std
add
sbb
and
repz
repz
push
pop
gs
iret
repz
jne
test
iret
jnp
cmp
frstor
cmp
hlt
adc
push
add
xor
mov
cmp
dec
push
or
cld
mov
pop
xor
cmp
inc
cmp
fbld
push
gs
imul
stc
inc
test
test
add
inc
jge
jge
mov
das
ret
dec
ficomp
lahf
push
cmp
and
test
popf
mov
cmc
mov
push
add
sahf
out
adc
sahf
out
sahf
cmp
gs
out
ins
jne
test
xchg
popf
movs
lods
mov
out
sahf
mov
in
sahf
out
in
cmc
std
add
iret
repz
adc
out
sahf
ja
aad
fucom
in
mov
outs
je
mov
xchg
cmps
(bad)
dec
mov
stc
ds
test
xor
jle
push
outs
jg
sub
push
and
aam
ror
je
inc
cmp
ret
ret
jns
test
xor
rcl
jbe
mov
mov
mov
push
xchg
xchg
sub
movzx
leave
ja
unpcklps
cmps
pushf
(bad)
sti
jg
movzx
mov
daa
out
movzx
mov
ins
iret
leave
cmp
fcmovu
call
jg
mov
mov
mov
dec
into
leave
movzx
mov
into
leave
cmp
mov
xchg
jae
dec
mov
mov
mov
hlt
pushf
pushf
movzx
setae
dec
mov
mov
mov
in
pushf
movzx
mov
leave
cmp
daa
mov
mov
sub
movzx
pop
dec
into
leave
cmp
sahf
xchg
jae
movzx
mov
ins
mov
adc
daa
mov
mov
xchg
fwait
push
movs
push
xchg
sahf
out
jno
or
mov
jns
out
ror
fabs
fidivr
out
icebp
stc
add
sahf
out
sbb
sub
cmp
jns
out
dec
push
pop
popa
sahf
out
sahf
imul
jns
not
and
dec
out
sahf
xor
inc
dec
(bad)
sbb
fcomip
dec
add
cmps
(bad)
in
sti
jmp
inc
rcl
shr
test
rol
test
aaa
sbb
adc
push
add
leave
stos
or
push
je
jo
clc
or
adc
cmc
nop
and
cmp
pusha
push
cs
je
xchg
or
dec
clc
popa
out
bound
inc
dec
ins
jo
popf
pop
cmc
mov
or
xor
or
inc
adc
xchg
or
jbe
scas
push
fldcw
adc
sub
loopne
hlt
add
pop
imul
mov
test
or
mov
push
push
adc
add
das
xchg
adc
adc
mov
xchg
ret
sbb
mov
xor
pop
aam
adc
in
sbb
inc
daa
clc
jnp
nop
sbb
sbb
sbb
nop
cs
adc
push
sub
push
in
dec
inc
sbb
sbb
ins
adc
sbb
sbb
movs
mov
test
adc
sbb
nop
jl
adc
or
xchg
adc
pop
enter
xor
mov
sub
or
ins
out
or
adc
aas
jmp
(bad)
in
pop
je
inc
push
push
mov
call
fsubr
pop
pop
or
cmp
mov
int3
outs
mov
sbb
xor
in
add
and
add
and
pop
iret
jmp
add
pushf
push
push
pusha
push
fisub
out
push
outs
js
mov
mov
lahf
out
sahf
rcr
out
cli
or
adc
cmp
repz
dec
pop
arpl
repz
ja
mov
repz
mov
cmp
repz
stc
adc
fdivr
out
and
cmp
dec
push
mov
xor
add
loopne
in
outs
adc
lea
push
add
jnp
mov
or
push
push
push
in
push
dec
stos
push
mov
cs
in
push
dec
push
(bad)
push
add
add
add
ja
push
ds
aad
add
or
push
adc
xchg
call
test
dec
and
sub
fwait
int
outs
xor
adc
add
adc
out
jnp
or
or
push
jbe
adc
or
mov
pop
scas
xchg
adc
jmp
push
adc
outs
arpl
outs
je
sbb
pusha
mov
sbb
pop
lea
xor
call
jmp
add
or
push
(bad)
(bad)
(bad)
dec
push
push
xor
mov
mov
mov
mov
xor
push
push
jg
(bad)
push
mov
lea
or
ret
mov
call
mov
mov
mov
call
test
je
and
(bad)
mov
call
std
outs
mov
je
pop
pop
push
lea
dec
jo
mov
jl
jmp
pop
pop
ss
ret
add
lods
out
rcr
in
sar
dec
mov
or
outs
push
push
add
and
and
enter
pop
fcmovnu
or
sbb
hlt
push
mov
ret
js
imul
inc
adc
mov
adc
loope
out
cmp
hlt
xor
add
mov
inc
dec
xor
mov
cmp
dec
and
dec
cmp
mov
and
mov
les
mov
mov
in
mov
push
cld
and
xlat
int
(bad)
dec
mov
test
je
sub
lea
mov
or
jecxz
cmp
cs
dec
stos
pop
outs
scas
add
gs
data16
mov
push
mov
dec
pop
sbb
nop
mov
inc
xchg
mov
sub
imul
push
push
add
xor
push
(bad)
shl
jnp
cmp
xor
jle
xchg
sub
call
inc
pushf
xor
(bad)
mov
(bad)
in
push
mov
push
fcomp
ret
add
loop
push
cmp
mov
or
add
push
jae
adc
adc
jle
jnp
inc
push
mov
or
or
in
int3
lock
std
xor
in
mov
mov
cmp
dec
daa
mov
call
scas
and
or
shl
ss
fld
push
xor
pop
inc
and
xor
ins
pop
or
add
xchg
jl
add
imul
adc
hlt
hlt
or
and
mov
pop
push
inc
push
cwde
stos
xchg
push
hlt
cmps
xor
sbb
scas
aad
push
pop
lods
mov
cmp
mov
bound
jns
dec
clc
fisub
addr16
outs
fwait
mov
pop
ret
pop
push
or
cmps
aaa
and
loop
push
push
xor
adc
mov
inc
xor
add
les
and
sub
pop
inc
xlat
add
test
xchg
cmp
pop
ss
dec
das
and
out
fdiv
lods
sbb
stc
(bad)
aas
jnp
xor
and
cwde
mov
neg
mov
and
je
aam
clc
jecxz
push
mov
lods
(bad)
nop
xor
mov
and
mov
mov
in
dec
js
xchg
xor
in
rcl
neg
mov
xor
fistp
dec
aam
sbb
ror
fstp
test
or
inc
std
je
inc
mov
xchg
fmul
loopne
push
mov
sub
clc
adc
fs
out
adc
in
add
nop
xor
jnp
sar
mov
retf
cmp
sbb
and
sub
into
cmp
das
pop
jne
repnz
push
xor
xchg
jb
addr16
loope
sti
sub
add
add
pop
add
dec
mov
out
push
mov
gs
out
lahf
shr
sbb
push
jae
and
rcr
jmp
jecxz
add
fbstp
(bad)
rcl
inc
inc
and
(bad)
(bad)
jmp
scas
rcl
mov
sub
daa
cmp
(bad)
push
ss
xchg
mov
ja
dec
(bad)
sbb
fwait
loopne
lmsw
mov
add
xor
rol
nop
aas
pop
call
aas
popa
dec
aas
add
mov
mov
test
fiadd
xchg
aas
in
and
push
pop
aas
pop
adc
sbb
aas
jp
jo
xor
xchg
ss
or
pop
push
sub
(bad)
js
arpl
mov
sbb
inc
adc
mov
add
mov
and
int3
cmp
les
mov
aaa
adc
les
xchg
and
test
pop
(bad)
mov
add
out
fidivr
clc
dec
mov
shl
mov
aam
sub
xchg
movs
push
cmovo
mov
ja
push
in
and
cmps
cwde
nop
(bad)
lahf
aam
add
in
or
push
daa
fistp
inc
das
jl
mov
sahf
cmp
jo
cs
adc
jmp
pop
cmp
jmp
bnd
inc
inc
pusha
mov
das
pop
or
test
push
scas
inc
test
ins
xchg
pop
or
and
pop
add
adc
sub
inc
push
fld
test
pop
sbb
xor
inc
sub
pop
lea
inc
xlat
mov
or
bswap
sbb
call
shl
inc
shr
jle
adc
xchg
dec
ret
sbb
(bad)
jb
sbb
shl
dec
inc
pop
sub
daa
call
xor
mov
scas
mov
adc
and
cmps
ficom
ss
cmps
clc
fisttp
in
cmps
fld
jl
add
imul
xchg
(bad)
stc
aas
jo
and
or
imul
jae
ret
push
jo
inc
addr16
ret
sbb
inc
mov
pop
inc
lea
inc
mov
or
push
je
movs
jg
inc
mov
pusha
jo
jmp
mov
std
push
push
sbb
and
retf
lds
push
inc
push
adc
add
inc
cdq
mov
aaa
adc
dec
and
(bad)
rol
push
loop
retf
push
inc
and
and
and
xor
push
icebp
out
mov
push
push
adc
adc
rcr
jns
mov
sub
(bad)
fwait
icebp
in
push
or
push
test
mov
cmp
or
cmp
cmp
(bad)
xor
add
das
push
imul
adc
outs
daa
xor
lods
lea
data16
ins
addr16
call
or
push
pop
std
addr16
not
dec
mov
xchg
push
xor
inc
dec
stos
or
out
add
push
fisttp
cmps
add
cmc
xchg
sub
or
jne
push
xlat
mov
xlat
or
push
fnstsw
xlat
pop
xchg
xor
shl
and
aas
jo
sar
jl
mov
and
loop
ror
sub
cld
jg
xor
pop
inc
xchg
mov
and
jb
fsubr
and
test
xchg
mov
addr16
pop
js
aaa
(bad)
adc
push
outs
mov
arpl
jne
dec
pop
xor
(bad)
jg
fwait
mov
inc
mov
pop
jl
(bad)
lock
lods
cmps
iret
dec
stos
(bad)
stos
xchg
mov
arpl
jne
cmp
int
icebp
mov
ror
int
or
sbb
fiadd
jmp
adc
pop
call
data16
inc
and
add
jo
push
cld
mov
imul
cwde
pop
jnp
lods
in
cmp
add
pop
loopne
jno
add
pop
lock
jno
cmp
pop
bound
cmps
cmp
sbb
stos
pop
mov
pop
pop
and
jmp
push
cmp
test
ficomp
arpl
test
sub
xchg
test
push
(bad)
aas
adc
sbb
daa
push
xchg
scas
dec
cmps
and
(bad)
mov
call
mov
mov
test
test
mov
stos
add
or
add
push
lods
cmp
push
adc
and
cmp
sar
mov
sub
push
xlat
adc
dec
xor
(bad)
cmps
inc
(bad)
mov
cmps
or
cmp
ins
dec
mov
and
loopne
popa
adc
xor
cmp
call
retf
fild
cmp
jns
pop
nop
scas
test
sbb
mov
fdiv
je
and
call
or
cmp
pop
jne
push
xchg
(bad)
cwde
ss
or
(bad)
stos
mov
sbb
(bad)
mov
jmp
jbe
aas
mov
ja
mov
adc
jne
loop
shl
push
inc
lock
mov
mov
fadd
fnsave
out
adc
outs
or
mov
ss
fadd
cs
pop
pop
and
mov
adc
xchg
outs
or
cld
jmp
inc
mov
lds
and
or
mov
dec
pop
or
(bad)
aas
icebp
adc
lahf
es
lahf
lods
xor
je
scas
movaps
cs
inc
mov
or
or
and
ins
daa
daa
and
add
inc
(bad)
imul
push
scas
add
xchg
mov
adc
loopne
and
and
pop
push
test
and
std
inc
jns
cmp
sar
mov
dec
push
xor
data16
push
sub
xor
or
dec
and
(bad)
iret
jmp
add
inc
add
les
xchg
aas
mov
or
lea
xor
or
aam
or
outs
push
inc
add
add
inc
dec
rol
sbb
mov
inc
push
push
das
push
jmp
and
jg
call
fcom
sbb
lahf
bound
sbb
rcr
ins
ja
xlat
sbb
pop
mov
fdivr
mov
or
jecxz
pushf
mov
out
jb
add
mov
xlat
test
adc
jns
xlat
rsqrtps
adc
rcl
pop
and
xlat
pop
adc
pop
inc
aas
xchg
(bad)
aas
jo
xor
lods
ss
cdq
dec
loop
pop
les
push
bound
or
sbb
xor
inc
and
inc
setne
test
mov
inc
pop
push
inc
daa
leave
pop
(bad)
inc
inc
mov
js
sub
xchg
cwde
out
fadd
cmp
jmp
and
out
fadd
inc
pop
imul
jo
inc
jecxz
int
adc
inc
ja
jnp
pop
and
nop
mov
and
les
enter
cmp
outs
pop
or
adc
pop
pop
fimul
dec
adc
inc
je
enter
jmp
ror
push
push
mov
not
sub
mov
div
sub
popf
pop
imul
inc
test
pop
mov
mov
sbb
cdq
out
sub
ja
dec
push
jb
mov
lods
arpl
sbb
push
dec
mov
mov
ins
daa
add
and
inc
rol
push
push
add
js
mov
out
jle
push
nop
aaa
mov
or
push
pop
jo
xchg
mov
nop
lods
mov
and
xor
mov
and
cld
inc
test
mov
xor
stc
mul
enter
inc
mov
mov
cmps
jle
mov
push
mov
push
jns
fnstcw
pop
sub
pop
lods
xchg
inc
xor
mov
ss
icebp
cli
or
pop
add
xor
xchg
pop
mov
mov
adc
lahf
hlt
nop
retf
sti
js
mov
retf
data16
jg
add
pop
push
or
cmps
aaa
and
loop
rcl
call
lds
mov
sti
mov
mov
ja
ins
inc
shr
jle
clc
(bad)
(bad)
mov
sbb
(bad)
jb
aad
push
pop
xchg
dec
mov
adc
inc
dec
sub
sbb
ja
push
out
pop
(bad)
jg
sub
dec
into
inc
je
shl
and
in
xchg
dec
mov
inc
jnp
or
xchg
cmps
(bad)
dec
mov
or
fdivrp
xor
jle
out
pop
mov
jo
aas
mov
sbb
xchg
add
aas
(bad)
in
pop
add
les
mov
inc
or
push
xor
or
loop
out
adc
adc
rcr
rol
cmp
fnstcw
and
fwait
inc
pop
inc
pop
outs
add
or
addr16
nop
add
(bad)
and
sub
mov
addr16
xor
adc
fbstp
movs
pusha
push
mov
sbb
addr16
(bad)
mov
adc
cmp
addr16
inc
mov
loop
stos
inc
mov
cmc
sbb
xchg
dec
jb
push
fs
cwde
mov
int3
or
(bad)
ds
rcl
(bad)
sbb
pushf
mov
or
lock
movs
out
loope
sbb
cmp
add
and
int
adc
add
ins
mov
push
inc
push
ja
mov
ja
inc
xor
scas
data16
int3
add
data16
xchg
mov
cmp
pushf
or
or
dec
pop
cmp
adc
sub
and
push
fmul
and
add
sbb
(bad)
fcomip
dec
add
cmps
(bad)
jl
inc
cld
in
sti
jmp
cmc
lock
std
xchg
add
or
je
mov
neg
xor
and
push
jae
jb
out
sbb
je
jp
add
cmp
dec
maskmovq
test
mov
ins
cmp
adc
xor
xchg
or
inc
xor
push
mov
inc
add
stos
and
in
mov
inc
mov
int3
add
ins
sub
test
fisttp
in
enter
mov
sub
push
fneni(8087
push
pop
je
add
cwde
test
add
push
adc
jo
icebp
out
out
mov
push
add
push
mov
ror
fabs
jmp
add
daa
je
push
lods
pop
inc
scas
pop
ret
adc
adc
or
add
inc
add
in
mov
hlt
int
daa
xlat
xor
cmps
push
sbb
inc
dec
jnp
dec
pushf
jge
cmp
push
or
push
mov
and
push
mov
push
sub
pop
jnp
hlt
out
or
pop
inc
dec
outs
outs
imul
cmp
inc
lods
inc
jmp
dec
mov
daa
and
push
inc
push
in
daa
int3
push
mov
cli
aaa
dec
jae
leave
mov
push
push
inc
dec
xlat
sar
push
fs
gs
je
add
xor
mov
es
pop
add
gs
data16
daa
pop
mov
sbb
pop
inc
gs
jb
jns
push
add
and
inc
jne
ins
lds
sub
cmp
add
enter
or
fld
jae
dec
aas
and
or
ins
sub
lods
push
out
lods
mov
lods
add
pusha
push
mov
inc
ins
retf
popa
aas
clc
sub
add
fs
fst
add
add
adc
les
xchg
arpl
outs
repz
mov
pop
aad
sbb
jo
xchg
dec
ins
jo
jb
mov
sub
jae
imul
sub
or
je
imul
mov
pop
sbb
into
add
out
gs
and
add
dec
in
inc
aad
rol
add
xchg
shl
and
imul
mov
and
add
xor
or
test
mov
dec
and
mov
xor
xchg
inc
iret
xchg
add
into
inc
push
and
or
dec
jb
push
jns
fsubr
mov
jbe
ss
push
sub
mov
shl
mov
add
pop
jnp
mov
dec
gs
aaa
add
jo
jne
aaa
test
cmp
out
sti
rcr
fld
adc
pmaxub
push
inc
popa
add
adc
push
inc
jb
adc
sub
push
addr16
lock
push
inc
adc
ss
add
pop
or
ficom
lea
mov
ja
outs
add
ja
push
fsubr
push
mov
mov
inc
push
inc
outs
jne
ja
add
sbb
fwait
sub
and
jbe
dec
gs
or
sbb
or
ror
cmp
pop
mov
xor
mov
imul
mov
cmp
fdiv
jo
movs
mov
dec
push
enter
add
mov
nop
sub
add
out
ss
rcr
clc
das
push
push
out
in
cmp
mov
cld
push
add
jge
sbb
push
xchg
jle
push
adc
dec
push
punpckldq
mov
(bad)
loopne
or
sub
adc
scas
popaw
pop
push
pop
xor
jns
fcmovbe
push
outs
(bad)
cmp
adc
test
add
popf
add
test
iret
jae
xlat
test
das
push
inc
cmp
xchg
push
inc
inc
loopne
jle
mov
and
pushf
mov
ret
add
push
jns
movs
mov
adc
lock
shl
jp
adc
scas
xor
repz
in
mov
ficom
and
push
das
dec
outs
or
or
aad
inc
push
mov
rol
mov
nop
jb
add
dec
bound
adc
pusha
mov
repnz
test
mov
fstp
mov
xchg
mov
imul
aam
neg
mov
inc
aad
pop
lea
mov
dec
aas
mov
retf
scas
ins
mov
cli
outs
and
add
jno
fsub
push
or
sub
push
outs
popa
stos
gs
inc
dec
pop
js
shl
xlat
push
fsubr
push
sbb
cmp
push
(bad)
lock
cmp
sub
xor
test
pop
or
or
inc
xor
sub
jo
pusha
mov
or
bound
inc
adc
ins
add
mov
push
es
test
adc
xor
neg
mov
es
das
jg
inc
push
fdiv
fs
xor
test
fdivr
idiv
mov
and
add
mov
cmps
and
ret
add
sbb
jae
push
movs
popa
sub
out
test
push
mov
sub
xor
xor
aam
push
sbb
jmp
jo
add
inc
sub
xlat
mov
loop
mov
mov
and
daa
(bad)
shl
push
jl
add
loop
and
push
adc
dec
add
loope
xchg
(bad)
dec
pop
rcr
mov
fdivr
mov
les
xchg
lds
adc
fstp
sub
sub
cld
rsqrtps
fcom
pusha
adc
test
lods
int3
fldenv
add
push
add
ficomp
mov
into
push
push
jmp
outs
mov
xlat
popf
jmp
or
enter
loope
mov
daa
(bad)
and
jo
jne
int
xor
cwde
dec
cmp
pop
cmp
cmp
fadd
pushf
push
retf
inc
sub
inc
cwde
cmp
das
add
das
daa
xchg
pop
add
fcmovnu
or
push
es
das
addr16
mov
xor
adc
mov
pop
push
add
iret
aaa
inc
test
sub
mov
add
fisttp
test
bound
xor
xor
rcr
rcl
pop
jns
bound
xchg
dec
sub
retf
ins
mov
call
leave
dec
cmp
rcr
fiadd
xlat
popf
neg
fld
sub
inc
push
xor
loop
outs
push
ins
mov
cbw
mov
push
add
sbb
mov
imul
rcl
sub
sar
push
fdiv
add
push
fist
sub
push
movs
loop
sbb
daa
inc
mov
ja
daa
popf
jb
push
xchg
aam
mov
adc
test
push
fild
cld
push
adc
inc
xor
push
out
mov
jmp
hlt
pop
(bad)
mov
pop
inc
adc
or
out
jae
inc
mov
push
in
or
push
mov
push
aad
and
adc
mov
jns
addr16
inc
lds
mov
adc
push
ins
loopne
mov
fstp
sub
jno
cmp
jb
retf
push
aad
rcl
jbe
jae
push
xor
and
push
inc
mov
imul
xlat
mov
push
jl
push
fwait
mov
aam
loopne
leave
pushf
mov
test
movs
loop
or
mov
sbb
and
pop
std
jnp
and
dec
inc
inc
jb
ja
push
sub
sub
push
push
sar
dec
outs
call
jnp
or
sahf
sbb
xor
cmps
lods
cs
xor
outs
sub
pusha
xor
adc
test
mov
(bad)
(bad)
pavgw
loope
pushf
xchg
loop
or
daa
daa
mov
outs
dec
(bad)
mov
daa
or
add
es
push
xchg
jmp
test
or
push
adc
lea
cmp
inc
popa
dec
in
jmp
jo
jno
sahf
lds
inc
push
jecxz
(bad)
in
lea
jecxz
ret
sub
sar
js
xor
add
jae
pusha
mov
jno
inc
or
mov
aas
add
dec
add
test
inc
cdq
xchg
push
cmc
out
fld
inc
xlat
xor
jp
mov
js
fld
add
inc
dec
movs
out
pop
add
adc
or
add
and
out
mov
sub
push
cmps
ins
add
arpl
push
es
adc
push
jns
push
jo
pop
mov
out
pandn
xor
pop
dec
lea
sbb
xchg
or
xor
cmp
lock
pop
inc
dec
pop
mov
or
cmp
outs
xchg
dec
mov
fdiv
jb
xor
retf
imul
jo
retf
sub
or
push
pop
fsubr
int3
pusha
cmc
mov
mov
xlat
in
mov
sbb
pop
stos
jge
jge
xor
adc
loopne
pop
or
mov
(bad)
xlat
xor
in
add
mov
aas
xor
pop
call
retf
cmp
test
add
xchg
add
mov
sbb
add
jae
dec
cmp
push
jecxz
in
pop
inc
mov
xor
pop
pop
ins
and
add
dec
or
and
(bad)
inc
cmp
lea
test
je
add
std
fwait
test
mov
lock
mov
xor
inc
nop
xchg
out
mov
mov
test
je
ds
vpmacsdql
pop
sub
jg
cwde
jno
dec
iret
and
fistp
push
mov
and
fnstcw
jle
pop
adc
push
mov
push
clc
(bad)
mov
or
fmul
in
rcl
jg
mov
xor
mov
mov
lods
push
lea
imul
in
mov
add
hlt
lea
xor
aam
out
fs
fcomp
in
pop
pop
pop
pop
adc
outs
dec
sub
fistp
jo
xor
call
xchg
fcmovnu
pop
ret
div
push
mov
jecxz
jmp
mov
test
js
mov
fneni(8087
shl
pop
ror
cmp
jae
cmp
inc
mov
aaa
fwait
or
(bad)
mov
mov
jmp
test
or
ret
out
lods
adc
jmp
mov
clc
push
clc
pop
add
cmps
jne
mov
cs
dec
je
dec
mov
adc
frstor
sbb
and
mov
popa
mov
lahf
push
lahf
dec
sub
or
fimul
add
js
nop
stos
pop
das
add
mov
adc
loopne
mov
(bad)
mov
test
hlt
loope
hlt
jl
fstp
push
cld
mov
lahf
jecxz
pop
sbb
adc
cmp
or
pop
inc
mov
lea
data16
xchg
mov
leave
cmp
stos
jl
xchg
ja
xchg
jl
fdivr
xor
sti
jmp
jmp
cmp
cmp
jl
movzx
cmp
addr16
andnps
shr
xchg
aaa
clc
(bad)
cmps
into
ltr
data16
push
lock
fiadd
daa
(bad)
imul
cld
or
jae
jmp
cmp
push
push
adc
pop
les
je
push
int
push
repnz
push
dec
and
sti
xchg
jmp
rcl
push
fwait
inc
sbb
and
neg
jne
push
mov
mov
jne
xor
sub
inc
loopne
aam
loopne
aas
pop
mov
push
aam
fisubr
(bad)
inc
fmulp
add
or
sbb
and
ds
add
(bad)
mov
test
je
or
or
std
fimul
jmp
xchg
mov
rcr
xchg
or
adc
rcl
je
sti
hlt
ss
lods
sub
mov
inc
cld
fadd
sbb
mov
add
movs
mov
sbb
xchg
shl
enter
add
adc
xchg
js
adc
and
push
xor
je
pop
cmp
or
push
or
mov
out
fadd
xor
es
jnp
jbe
fcomp
or
lds
fadd
shl
mov
jmp
mov
test
in
jmp
cli
dec
mov
push
fdivr
int
push
jae
mov
mov
cmp
and
(bad)
cmp
aaa
sub
push
add
push
push
mov
push
(bad)
icebp
mov
add
aaa
fadd
add
dec
pop
sbb
add
push
or
in
mov
dec
enter
rcr
mov
in
mov
loopne
xchg
mov
sub
enter
xor
mov
ret
jecxz
add
mov
push
mov
mul
in
and
aad
pop
hlt
lock
pop
fs
mov
call
stos
fwait
pop
in
imul
inc
xchg
inc
lock
inc
cwde
ret
rol
sar
or
or
mov
fdiv
mov
jmp
jo
and
data16
jmp
stc
retf
cmp
test
je
dec
(bad)
or
fmul
push
call
pop
sub
ins
in
xlat
inc
ja
xchg
call
inc
mov
add
xor
cmp
inc
sub
mov
inc
and
add
cmp
je
dec
in
or
or
add
(bad)
outs
mov
push
into
jne
(bad)
inc
mov
dec
sbb
stos
lds
stc
call
mov
mov
test
mul
jo
fistp
add
adc
adc
into
dec
push
(bad)
call
mov
sub
movs
jbe
xor
xor
sar
and
scas
add
cmp
loopne
adc
pushf
jmp
xlat
push
ret
(bad)
movs
fadd
loop
adc
adc
shl
or
test
cmp
shr
jo
popa
mov
les
mov
pop
(bad)
sub
xor
in
adc
cs
sub
enter
arpl
neg
ret
jmp
adc
adc
dec
icebp
push
mov
xchg
cmp
push
fsub
into
add
repz
jp
leave
sub
and
pushf
in
inc
aaa
loop
rol
xor
cmp
jge
mov
inc
and
movs
test
mov
cli
jnp
ins
jne
xor
in
jecxz
ret
mov
jnp
sar
add
or
mov
sub
jne
push
mov
cmp
sar
loope
hlt
cmp
mov
lock
cmp
je
jge
adc
xchg
into
push
sub
and
or
hlt
mov
sbb
daa
cmc
mov
fcomip
dec
(bad)
jl
inc
xchg
and
inc
cmps
xor
out
out
add
mov
add
add
cld
pop
adc
bound
cmp
inc
repz
scas
lea
push
push
mov
lock
lods
(bad)
hlt
pop
cli
in
(bad)
aad
add
mov
ficom
in
nop
jp
adc
jo
sbb
mov
sub
jmp
clc
rol
daa
pop
ret
jnp
push
shr
mov
jb
push
inc
and
mov
add
push
pop
add
or
sub
cmp
inc
test
or
xchg
push
push
jge
sti
sbb
inc
or
add
shr
inc
push
or
add
repnz
jne
push
ret
aam
fimul
hlt
cmp
push
or
sbb
push
(bad)
in
sub
inc
aas
cmp
jg
inc
jmp
les
and
sbb
in
imul
idiv
jg
or
stc
and
pop
iret
in
mov
adc
add
and
sbb
lods
xchg
(bad)
push
pop
lea
mov
lea
sub
in
out
adc
xor
popa
dec
xor
mov
push
repnz
fwait
add
adc
jl
clc
or
movs
dec
sbb
test
jle
hlt
jbe
out
shl
pop
push
icebp
push
mov
push
jns
adc
enter
ret
out
sbb
mov
js
nop
and
push
sbb
or
rcl
dec
aaa
xchg
das
and
xor
and
shl
movs
and
wrmsr
add
out
fwait
ins
lock
aad
sbb
xor
mov
and
push
gs
dec
adc
ror
cmp
jne
pop
mov
or
mov
fnsave
loop
adc
or
fsub
or
xchg
ss
test
pop
push
into
mov
xchg
sub
sub
int3
pop
js
push
and
push
mov
cld
mov
and
inc
adc
push
mov
push
shr
js
cmp
loope
push
and
clc
jnp
push
cmp
ror
pop
out
and
inc
jo
adc
les
fwait
ja
jp
xlat
test
cmp
inc
or
or
enter
(bad)
data16
icebp
push
jl
push
loopne
dec
xor
cmp
es
push
or
mov
out
cmp
sbb
push
or
dec
jne
sti
out
movs
sbb
sbb
repz
xchg
sub
shl
and
shl
fisttp
sub
mov
jnp
push
adc
leave
ret
push
sub
sub
aas
sub
lahf
sbb
mov
sub
aam
shr
sub
pusha
sub
fcomi
(bad)
out
or
add
push
mov
and
mov
sbb
mov
xchg
jp
add
cld
or
jmp
imul
push
mov
dec
push
mov
mov
in
mov
add
sub
aas
jmp
cmp
push
adc
add
pop
jle
sbb
fsub
inc
in
mov
inc
jae
add
pusha
sar
adc
sub
leave
mov
mov
inc
jg
ror
xchg
dec
xchg
out
in
popa
and
addr16
pop
push
inc
es
addr16
jae
push
loop
pop
jmp
pop
popa
inc
push
cmp
push
xor
test
dec
rol
shr
daa
cs
mov
loope
or
or
dec
mov
adc
push
jle
jge
pop
jns
outs
stos
test
dec
aas
cmp
xor
push
into
adc
xchg
add
mov
sbb
pop
arpl
lods
cmc
sar
(bad)
inc
push
jmp
ss
movs
dec
sbb
ss
leave
aaa
inc
out
movs
in
in
test
sub
(bad)
in
mov
mov
pop
stos
les
(bad)
pop
sub
mov
cmp
aaa
sbb
daa
in
fsub
xor
shr
in
cmp
adc
dec
inc
scas
movs
daa
jmp
jb
or
in
add
lds
adc
or
outs
xchg
and
adc
lea
in
push
push
push
add
adc
fsub
add
pop
lds
clc
push
pop
cmp
jge
imul
dec
gs
sub
hlt
or
ror
and
xchg
pop
mov
mov
lock
mov
mov
sub
iret
sbb
daa
icebp
mov
ror
pop
mov
sub
dec
test
daa
push
mov
xor
push
dec
in
jge
jmp
add
adc
rol
in
jae
sbb
in
mov
push
jmp
jb
inc
adc
inc
or
call
pop
(bad)
jns
shl
pop
push
sub
cld
mov
jmp
jne
inc
dec
daa
push
mov
sbb
jmp
arpl
mov
scas
cs
test
sbb
(bad)
adc
sbb
(bad)
mov
push
inc
fild
or
and
jns
inc
inc
daa
xor
out
in
sbb
mov
xor
enter
inc
hlt
lea
inc
or
mov
cwde
(bad)
cmp
pusha
add
or
retf
int3
or
fbld
mov
leave
out
fs
test
fdivp
mov
jmp
imul
ins
lods
push
inc
cmp
mov
mov
data16
lds
pop
pop
ret
dec
mul
scas
aas
fcomp
mov
cld
add
add
sub
inc
pop
jbe
jp
xor
sbb
popf
outs
and
test
mov
fs
int
aaa
mov
or
stos
push
jge
in
cmp
jge
test
cmp
sub
push
inc
push
enter
sbb
pusha
push
dec
pusha
jge
and
ficomp
dec
mov
mov
add
mov
fs
or
push
js
push
and
and
jl
xchg
out
dec
ret
mov
push
mov
xor
dec
adc
in
push
scas
nop
cdq
and
out
xchg
mov
loope
xor
lock
adc
push
clc
into
loopne
fcom
dec
jne
ss
jo
mov
and
stc
fmul
test
push
addr16
rol
sbb
or
push
jl
es
mov
cmp
out
push
mov
(bad)
(bad)
or
add
xlat
test
sub
mov
xor
push
jp
adc
xor
or
jle
hlt
xor
or
xlat
xchg
jnp
adc
cld
daa
gs
sub
sbb
cmp
test
mov
cwde
pop
mov
add
jl
inc
and
cmp
setg
(bad)
pop
sbb
cmp
hlt
fsubr
xchg
test
xchg
hlt
lods
test
je
sbb
je
loope
jge
setge
or
sub
stc
call
xchg
jle
jg
jb
sbb
(bad)
push
in
sub
cmp
sti
cmp
test
push
rol
mov
cmc
paddb
push
mov
xchg
inc
(bad)
add
cmps
rol
sub
sbb
paddusb
xor
sbb
adc
inc
push
or
mov
sbb
add
mov
or
je
pop
mov
push
cmp
mov
shl
cmc
push
mov
or
ja
mov
sub
inc
add
or
pop
sub
and
push
dec
add
lock
or
mov
and
pusha
xor
daa
push
push
sbb
pop
and
stc
cmps
pop
push
add
push
mov
mov
js
mov
movs
cmp
fsubr
mov
push
fcmovb
sbb
popf
inc
or
dec
push
adc
or
cmp
add
pop
data16
add
test
pushf
xor
outs
mov
dec
adc
outs
push
push
shl
push
sbb
add
(bad)
pop
or
ja
add
adc
ret
pop
popf
loopne
add
add
loope
pop
loopne
add
pop
gs
nop
sub
or
shl
dec
clc
pusha
adc
(bad)
inc
dec
imul
jo
push
push
inc
dec
dec
outs
outs
imul
push
popa
imul
jns
gs
or
outs
addr16
push
popa
push
push
mov
ds
jns
push
dec
inc
outs
mov
sbb
outs
gs
arpl
inc
in
add
jmp
ins
arpl
outs
jae
xor
int
mov
xor
mov
inc
cmp
add
test
popa
jne
je
mov
or
mov
dec
outs
or
inc
jbe
or
aas
inc
add
or
push
js
fadd
push
dec
bound
scas
(bad)
test
add
inc
and
push
inc
pop
in
or
pop
pop
outs
popa
pop
add
adc
lar
mov
mov
jb
into
fcom
movs
add
xor
mov
jnp
sub
inc
jmp
push
scas
sbb
push
push
fmul
pop
cmp
pop
shl
add
push
dec
out
sahf
out
jge
mov
mov
mov
jp
je
outs
in
fidivr
push
add
mov
sbb
jg
add
inc
push
inc
dec
pop
push
mov
dec
loopne
shl
xor
mov
ins
ja
dec
outs
dec
sahf
add
xchg
ins
js
add
push
ins
data16
inc
loopne
adc
jmp
shl
dec
inc
jb
dec
dec
js
and
outs
and
lods
mov
enter
int
outs
shr
lods
rcr
test
jmp
push
lods
ins
das
js
inc
cli
popa
ins
imul
xchg
or
retf
scas
add
or
fild
add
(bad)
out
mov
jecxz
add
inc
dec
inc
outs
jne
stos
add
inc
jmp
ret
dec
cmc
inc
add
dec
lahf
mov
iret
inc
xchg
mov
jns
bound
fnsave
add
xchg
mov
add
(bad)
movs
clc
cmp
xlat
push
(bad)
(bad)
sbb
sub
add
or
rcl
sbb
fisttp
mov
add
fbld
inc
add
call
inc
and
rcr
jb
add
mov
inc
jb
sbb
add
test
or
and
or
add
hlt
outs
add
add
or
lock
fadd
push
or
call
ret
xchg
fiadd
mov
arpl
mov
and
sbb
add
sub
int3
pop
inc
jne
inc
push
ffreep
sbb
add
push
sbb
icebp
imul
cwde
rcl
xchg
fisub
call
push
ins
shl
pop
mov
and
push
fwait
sub
push
add
inc
cwde
(bad)
add
clc
mov
inc
xor
mov
sub
xlat
sub
sub
mov
or
test
inc
fidivr
ror
or
inc
dec
fisubr
push
dec
aam
push
inc
cs
sbb
andps
int3
adc
pop
test
mov
neg
sbb
dec
inc
sahf
pushf
rol
and
jmp
xchg
daa
daa
daa
fdivr
and
xchg
xchg
xchg
pop
nop
fst
sbb
bound
iret
ins
push
punpckhbw
call
push
xchg
push
or
push
cmp
cmp
es
inc
xchg
xchg
imul
stos
pop
pop
cmp
dec
movs
arpl
cmp
cmp
inc
aaa
icebp
mov
adc
rol
call
xchg
push
inc
gs
jns
cwde
retf
inc
mov
dec
aaa
fsubr
cmovns
adc
add
push
mov
mov
sbb
inc
push
popa
jg
setp
jg
pusha
dec
fs
cmps
xor
pop
inc
inc
fs
mov
fwait
jp
loop
mov
arpl
cmp
test
push
xchg
add
sub
xor
add
lds
cmp
push
test
shr
mov
adc
adc
repnz
dec
enter
loopne
add
cmp
cmp
enter
sbb
xchg
mov
dec
or
push
adc
or
dec
inc
test
rcl
(bad)
leave
fwait
mov
cmp
gs
add
arpl
xchg
ficom
pop
xor
push
or
xchg
loope
aad
imul
repnz
ror
imul
cmps
jno
jno
scas
lea
or
xchg
inc
mov
add
fimul
inc
add
shl
and
or
push
inc
adc
xchg
enter
cmc
inc
inc
inc
js
jo
xor
xchg
xchg
mov
add
sbb
ret
sbb
add
pop
mov
mov
stos
or
dec
or
rcr
add
xor
pop
xor
pop
xchg
or
sbb
or
ja
mov
add
or
pusha
push
dec
jg
jg
adc
popa
pop
and
add
mov
rcl
jo
fs
dec
aaa
jae
xor
imul
mov
cmp
dec
popw
dec
imul
pop
into
imul
or
cmps
or
adc
push
and
and
ds
xor
rcl
inc
jge
call
push
sub
mov
mov
push
std
ins
or
xor
dec
or
rcl
repz
and
mov
cmps
adc
nop
dec
test
(bad)
dec
push
ins
mov
jae
ret
xchg
xor
sbb
sub
out
jl
xchg
cmp
sub
xchg
outs
inc
je
idiv
in
and
sbb
arpl
scas
adc
shl
push
or
sub
icebp
lea
pop
retf
or
sbb
fs
js
cs
out
jmp
or
dec
dec
sub
sbb
test
mov
stos
inc
mov
ret
scas
push
popa
arpl
jns
add
aam
(bad)
clc
shl
inc
add
sub
outs
sub
out
inc
ret
(bad)
fdiv
loopne
adc
aaa
out
rol
movs
ds
or
pop
pop
xchg
ds
mov
movs
cmps
mov
mov
sub
add
out
add
and
jl
xor
push
jg
cmp
jle
mov
cmp
jns
xor
adc
push
sbb
les
imul
xor
mov
and
mov
xor
pop
mov
and
mov
push
mul
and
pusha
jmp
push
mov
and
cmps
mov
push
dec
es
mov
test
bound
mov
outs
sub
add
mov
push
je
mov
loopne
push
mov
test
mov
or
or
je
or
sbb
pop
pop
pop
mov
inc
jmp
jae
push
mov
inc
jo
test
mov
add
sbb
lahf
ficomp
push
jns
iret
daa
mov
push
fnstcw
lock
jmp
idiv
imul
push
les
lds
mov
imul
pop
jnp
cmp
sub
jne
cmove
movs
cld
aam
jmp
sub
outs
jae
push
jg
daa
daa
and
jecxz
xchg
xchg
xchg
xchg
sub
mov
or
mov
in
fs
sub
jb
repnz
cmp
cmp
jns
retf
sbb
push
jns
cmp
sbb
in
push
out
mov
push
lds
adc
add
add
cld
jne
scas
leave
sub
cmp
pusha
mov
pushf
mov
jne
sbb
fimul
daa
inc
arpl
mov
xor
jne
cmps
outs
mov
jne
cmp
push
inc
adc
and
adc
jne
adc
pusha
ins
push
jns
xor
or
jne
inc
add
dec
lea
adc
mov
or
movs
loopne
sub
std
out
push
push
jne
mov
icebp
adc
leave
fwait
dec
or
loopne
pusha
add
xchg
or
jmp
push
jno
sub
movs
pop
jne
adc
les
dec
popf
xor
jae
sub
adc
shr
push
ja
outs
les
add
ror
cmps
push
mov
rol
mov
xchg
mov
jg
push
loopne
jne
xor
pop
push
pop
cmp
dec
adc
sbb
jne
adc
jae
rol
popf
pop
jne
bound
jno
jne
rcl
aam
jge
sub
push
inc
adc
sbb
inc
jns
dec
rcl
jne
xchg
cmp
or
xchg
xor
xor
retf
call
arpl
mov
bound
mov
in
xor
push
cdq
(bad)
sub
xor
push
or
mov
cmps
jne
pop
arpl
pop
jns
pop
ret
dec
jnp
dec
sub
and
xchg
out
mov
xor
pushf
jb
and
push
call
inc
xchg
sbb
mov
cmp
loop
add
add
imul
std
push
mov
hlt
push
mov
add
inc
and
hlt
jmp
push
lock
mov
push
jo
or
dec
adc
rcl
sahf
sbb
xadd
(bad)
ss
pop
mov
in
mov
push
cmp
add
xor
mov
mov
and
rcr
push
inc
imul
sahf
and
(bad)
xchg
lds
aam
mov
push
loop
push
pop
pop
shl
inc
rol
add
scas
or
shl
jp
sbb
test
mov
loopne
ret
xchg
sysret
jmp
sub
adc
(bad)
ds
pop
jo
push
imul
(bad)
iret
pop
add
ja
and
lea
clts
scas
daa
pushf
xor
ins
mov
aaa
pop
test
(bad)
push
jl
sub
or
pop
mov
iret
mov
in
push
and
rcl
push
repnz
jmp
mov
orps
add
test
jmp
addr16
push
in
or
adc
test
and
pop
and
retf
cdq
test
mov
add
pop
fsub
adc
lahf
fmul
add
adc
mov
cs
not
mov
push
jge
test
ja
sahf
cmp
cs
add
gs
mov
jg
push
shl
inc
or
inc
bound
or
cmp
sbb
std
push
push
test
mov
cmp
jo
fldenv
mov
pop
mov
mov
jle
and
add
push
sbb
push
xor
push
add
xor
inc
mov
push
and
mov
mov
sub
jo
sub
pop
mov
sub
lods
shl
mov
mov
sub
in
mov
push
cmp
loopne
mov
add
cmp
pusha
das
jle
mov
sbb
aas
out
loope
add
ret
shl
fwait
add
mov
mov
outs
or
and
dec
add
popa
mov
xor
fcom
push
push
and
and
popa
and
and
add
std
pusha
adc
mov
add
lahf
aad
add
(bad)
imul
popa
push
xor
or
add
dec
xor
inc
add
lds
stc
call
inc
icebp
test
ds
dec
push
jne
(bad)
out
jg
imul
ins
gs
stos
jae
stos
xor
dec
lods
lock
cdq
leave
(bad)
iret
mov
add
adc
test
shl
jg
(bad)
jg
movs
clc
or
gs
xchg
out
outs
stc
aam
xor
push
sti
push
ins
mov
daa
popf
mov
and
fcomp
stc
(bad)
not
ja
test
mov
and
pop
add
gs
mov
int3
dec
jo
mov
or
push
or
inc
jbe
bound
addr16
enter
enter
jle
popf
push
sahf
or
push
daa
test
mov
pop
lods
xlat
or
in
jg
arpl
dec
dec
push
arpl
popa
shl
shl
add
push
fcom
setle
push
imul
or
or
out
or
std
dec
push
fistp
imul
ret
pop
jl
mov
mov
aaa
gs
jg
jecxz
pop
daa
je
push
lods
pop
inc
scas
pop
ret
adc
sub
int3
add
sbb
jmp
adc
dec
dec
or
sbb
xor
cmp
rol
sub
add
and
int3
jnp
mov
cdq
pop
pushf
out
pop
addr16
rol
lock
mov
mov
shl
mov
je
push
cmps
shl
add
push
cld
lea
int3
mov
push
dec
push
(bad)
es
add
das
pusha
js
iret
pop
push
pop
into
mov
push
fs
xchg
add
push
fld
sub
xor
adc
add
adc
or
or
imul
push
sbb
(bad)
adc
pop
push
jl
test
xor
add
push
ret
into
mov
sub
xor
adc
fst
out
ins
pop
icebp
xchg
cmp
cmp
add
(bad)
fdivr
add
punpckhwd
sahf
pushf
mov
daa
daa
and
inc
dec
mov
enter
inc
pop
int
dec
fs
leave
nop
clc
test
sbb
repnz
out
dec
imul
inc
sahf
pushf
rcr
dec
jg
xchg
daa
and
dec
aam
dec
fs
xchg
jmp
push
and
sbb
xor
cmp
sbb
sahf
mov
jl
sub
leave
enter
push
and
pop
(bad)
and
adc
pop
and
xor
jge
dec
add
mov
inc
dec
ja
sti
cmp
imul
jbe
shr
sbb
sub
mov
sub
mov
sub
pusha
movs
xor
pusha
mov
dec
xchg
neg
push
or
jo
mov
push
dec
sub
inc
(bad)
popf
lea
lock
ret
add
add
test
dec
xor
imul
and
in
ds
lods
jo
sti
add
or
rol
or
je
popf
pop
sub
dec
push
mov
out
cwde
fs
xchg
imul
or
sbb
adc
shr
or
test
and
push
or
pop
jp
jns
inc
add
dec
fwait
dec
dec
push
ins
mov
dec
or
push
adc
dec
ins
adc
mov
push
push
je
cmp
inc
dec
(bad)
jno
add
mov
jno
or
push
(bad)
sub
sbb
and
adc
jbe
aad
sub
add
dec
jae
dec
ror
call
gs
push
push
push
inc
mov
mov
sub
jno
pop
mov
dec
dec
jne
sub
mov
dec
gs
(bad)
daa
adc
imul
fs
push
sbb
push
jmp
sub
or
daa
loopne
adc
jae
mov
ds
mov
pusha
or
push
mov
adc
test
jmp
or
lds
(bad)
jle
add
addr16
adc
inc
or
dec
mov
mov
mov
test
add
dec
ins
pusha
sbb
aam
push
pop
jo
shl
mov
inc
mul
mov
outs
mov
and
jns
addr16
xor
sbb
imul
aaa
rol
or
(bad)
dec
mov
xlat
add
fadd
add
ret
jl
jmp
inc
fs
add
jmp
loop
and
add
push
push
dec
dec
inc
push
push
jmp
inc
adc
aas
test
iret
sbb
fs
sub
dec
sbb
jge
jge
pop
adc
test
dec
sbb
out
or
add
inc
cmp
dec
and
mov
inc
jbe
xchg
stc
inc
mov
pop
push
sub
xchg
pusha
fdiv
xchg
jmp
leave
pop
aad
imul
pop
test
fisttp
dec
or
fcmovb
jne
sbb
xor
or
neg
inc
adc
lahf
rep
mov
test
xor
sub
stos
push
js
inc
mov
xor
lahf
inc
and
repz
or
ja
jg
pop
and
jno
outs
jb
bound
and
xor
mov
ficom
jns
loopne
push
add
push
jae
std
inc
mov
or
int
rol
sar
je
out
sbb
shr
or
xlat
jl
adc
jmp
inc
stos
jg
adc
sub
xchg
cdq
aad
inc
(bad)
fsub
jbe
stos
imul
sub
mov
ins
nop
cmp
rol
stc
sub
out
push
arpl
or
(bad)
(bad)
dec
sbb
lods
or
cmp
adc
pop
mov
mov
jo
adc
inc
shl
xchg
or
push
je
ins
gs
xchg
or
(bad)
pusha
aas
cmp
adc
mov
scas
and
push
or
add
jl
pop
and
or
mov
mov
adc
aam
jo
lods
mov
push
icebp
xor
es
and
das
mov
xchg
adc
dec
hlt
xor
add
or
sbb
push
sbb
call
and
popf
loopne
inc
pop
jne
pop
add
retf
cs
retf
imul
sbb
add
push
and
rcr
repz
add
sbb
and
bound
sbb
aaa
pop
mov
fldcw
loopne
mov
retf
ja
mov
inc
rcr
push
mov
or
sbb
loopne
mov
push
push
xchg
ss
popa
mov
adc
push
shl
xchg
rcl
push
rcr
inc
xor
or
icebp
inc
or
mov
adc
imul
adc
push
jo
lea
ret
sub
mov
dec
add
adc
pusha
lock
mov
adc
mov
ins
fisttp
xor
or
sti
push
dec
add
push
add
dec
adc
sub
mov
pusha
mov
xchg
or
xchg
jne
or
outs
sub
shr
dec
enter
add
pushw
stc
adc
leave
sub
jl
repz
cmp
push
popa
sub
loopne
inc
jmp
int3
jno
adc
cmps
add
push
mov
pop
push
pop
pop
push
push
push
dec
push
add
push
sbb
push
or
(bad)
xchg
jo
add
xor
out
popa
or
adc
and
xor
mov
mov
add
and
add
fsubr
and
out
adc
mov
pop
xchg
push
loopne
cmp
cdq
and
adc
pop
sub
cmp
xchg
(bad)
arpl
pop
(bad)
out
arpl
arpl
sub
aaa
idiv
or
ds
add
add
jmp
add
add
adc
pop
shl
and
nop
mov
push
xlat
std
cs
mov
push
mov
mov
mov
mov
mov
out
(bad)
cmp
push
mov
test
je
sub
mov
push
enter
mov
mov
(bad)
(bad)
in
push
ficom
adc
sbb
pop
ret
nop
jbe
repnz
mov
mov
push
mov
jge
mov
daa
lea
bound
lahf
and
dec
adc
add
test
or
lock
xor
fucomip
push
rcl
sub
mov
xor
nop
xor
std
dec
lea
sbb
mov
push
das
dec
clc
mov
lea
sbb
sub
sub
clc
xor
mov
xchg
pop
pop
pop
mov
push
ja
sub
lock
mov
(bad)
jo
pop
inc
js
(bad)
xor
ret
add
aas
or
pop
push
push
jbe
icebp
mov
add
pop
into
jge
xor
dec
je
(bad)
push
fild
cmp
inc
jo
adc
and
mov
int3
push
and
and
jge
test
xor
ret
and
jbe
ret
jbe
dec
loopne
hlt
mov
pop
xchg
pop
test
xor
mov
cmp
nop
outs
dec
ins
sbb
jmp
nop
daa
mov
(bad)
pop
mov
call
cmp
jne
cwde
fcos
pop
cmp
jbe
jmp
jle
(bad)
cmp
mov
imul
hlt
mov
into
loopne
hlt
fadd
jge
add
pop
sbb
or
imul
push
fidivr
add
das
push
ret
aam
cmp
mov
mov
adc
sbb
push
push
ret
sub
loopne
or
push
je
outs
fild
mov
cdq
stos
loopne
mov
loope
mov
push
hlt
dec
call
ret
call
(bad)
xor
cwde
cmp
mov
adc
jge
sub
jl
push
mov
mov
jl
sbb
push
cmp
dec
jne
xor
jno
(bad)
ss
mov
jmp
inc
pop
fisub
out
cmps
cwde
shl
mov
cli
or
sub
mov
push
push
test
add
and
popa
pop
xor
jl
add
mov
fidivr
jb
addr16
ja
xor
jge
sbb
add
data16
outs
xchg
xchg
cdq
fld
scas
push
bound
pop
fist
and
int3
xor
or
or
inc
xchg
rcl
xchg
pop
xlat
rol
sub
aaa
push
pop
mov
mov
call
jb
idiv
fdiv
lods
ds
dec
push
jmp
enter
pop
and
scas
in
enter
aad
sub
clc
arpl
fxtract
lea
pop
pusha
das
dec
mov
adc
jo
(bad)
xor
adc
sub
push
or
ffreep
pop
pop
test
inc
mov
push
mov
xor
pusha
add
call
push
packsswb
jmp
push
and
pop
(bad)
jmp
xchg
add
and
mov
or
jne
cwde
pop
dec
xchg
sbb
loopne
sahf
dec
aaa
dec
or
shl
jmp
mov
in
loopne
nop
cld
jmp
call
loopne
mov
push
or
push
or
test
mov
sub
lock
jns
fcom
adc
adc
sbb
add
test
push
test
push
sub
bound
mov
dec
lock
pop
(bad)
call
ret
add
push
stos
pop
sub
xchg
popa
lods
pop
dec
push
mov
movs
ret
ja
popa
ins
inc
push
sub
dec
daa
mov
fwait
mov
jae
add
btr
popa
add
bound
dec
out
mov
call
mov
fisttp
xchg
dec
mov
adc
push
or
call
clc
or
in
adc
push
enter
jno
das
xor
pop
xchg
jne
dec
test
jl
inc
xor
lahf
aas
xchg
ror
xor
call
pop
cmp
jl
pop
mov
sub
sbb
sub
call
adc
push
sti
mov
push
cmp
add
pop
sbb
in
(bad)
cmp
mov
pop
in
fdivr
push
push
jbe
ss
sub
rcl
imul
cld
xchg
add
xor
jo
test
sar
test
je
sub
inc
adc
inc
das
sub
js
inc
jmp
mov
sub
inc
sbb
push
add
mov
lods
push
stos
xchg
cmp
add
add
aas
adc
xchg
mov
dec
test
jl
inc
(bad)
fmul
mov
cmp
(bad)
sbb
cmp
ins
imul
mov
(bad)
and
sub
or
out
je
arpl
jno
lods
loopne
test
and
leave
rol
xor
push
add
lds
jle
fwait
rcr
cmp
push
shr
cwde
lock
jno
test
sbb
ror
or
inc
mov
ins
mov
xor
fdiv
xor
(bad)
call
xor
sbb
add
xchg
test
dec
leave
inc
or
add
sahf
aas
push
mov
enter
mov
ret
sbb
inc
push
pop
sbb
pop
mov
imul
or
push
les
jo
jnp
rcl
cmc
pop
aam
sar
add
mov
inc
es
mov
fs
fdivr
dec
pop
xor
enter
dec
jbe
xor
mov
pop
aam
mov
mov
shr
push
dec
aam
sar
xor
adc
or
adc
xchg
jbe
jb
bound
mov
das
(bad)
push
sti
in
adc
es
out
add
fs
sbb
push
or
inc
imul
push
mov
dec
test
dec
or
jnp
aad
cwde
inc
out
sar
aaa
shl
jg
dec
xor
call
xchg
jo
cmp
sbb
cmp
or
scas
lds
xchg
stc
dec
xchg
shl
xchg
fdiv
in
jae
mov
stos
dec
sbb
hlt
aad
je
fucom
dec
ss
retf
xchg
xchg
or
xor
sub
imul
or
adc
jl
xchg
push
je
inc
cmp
les
dec
ins
adc
scas
test
jns
je
pop
lods
pop
leave
outs
arpl
pop
shl
shl
dec
mov
adc
popf
inc
in
shl
call
pop
aam
inc
iret
enter
push
pop
mov
fcom
cmp
pusha
sbb
jg
push
cwde
push
jno
ins
cmps
sbb
ror
xchg
or
add
cmp
dec
jne
imul
or
fwait
leave
adc
dec
scas
cmps
les
dec
xchg
and
xor
cmp
enter
dec
aaa
xor
adc
push
es
pop
inc
mov
jo
inc
(bad)
popa
retf
dec
ja
retf
or
mov
imul
push
cmp
scas
call
and
js
mov
or
iret
dec
fwait
out
and
cmp
inc
add
mov
cmp
sub
sub
mov
cmp
test
ds
pop
(bad)
jbe
sahf
mov
sahf
push
adc
or
hlt
icebp
retf
bound
mov
imul
call
jb
data16
or
add
pop
fild
ror
in
clc
pop
jecxz
ins
aam
inc
jecxz
and
adc
jae
jmp
push
rcr
add
dec
adc
data16
push
data16
push
push
mov
mov
sub
adc
fistp
mov
mov
lea
loopne
loopne
adc
jmp
and
pop
adc
and
fcom
mov
add
cmps
pushf
lea
lods
pop
loope
push
mov
add
push
adc
test
push
mov
jle
gs
or
push
lods
int3
xor
or
pop
inc
jno
je
dec
pop
push
adc
js
int3
jg
sub
outs
out
leave
push
dec
inc
mov
inc
mov
and
je
or
cmps
sti
add
mov
and
push
popa
scas
nop
sbb
adc
stos
push
or
(bad)
lock
inc
stos
mov
out
push
add
pop
outs
mov
jae
hlt
and
popf
push
xlat
push
pop
sbb
adc
pop
jecxz
cwde
mov
push
xchg
fcomp
jle
push
fcom
scas
mov
stos
xchg
sub
addr16
mov
dec
dec
xchg
mov
sub
stos
mov
clc
aad
loopne
jecxz
inc
jp
fnsave
inc
push
mov
rol
clc
int3
push
scas
and
sbb
push
rol
inc
mov
pop
add
sub
sbb
or
push
inc
icebp
call
inc
jbe
or
xor
adc
popa
pop
std
scas
xor
pushf
inc
add
mov
xor
push
push
inc
scas
mov
cmps
lds
mov
mov
movs
push
mov
sbb
cmp
test
jnp
pop
aaa
push
sbb
push
and
test
jg
into
lods
xor
inc
or
pushf
pop
gs
(bad)
clc
clc
mov
jge
lds
test
dec
popa
jno
push
out
(bad)
in
adc
push
fchs
jo
arpl
sbb
dec
sar
mov
loop
sbb
shr
dec
add
jmp
jl
add
shr
arpl
imul
je
aad
dec
lea
xlat
arpl
xor
xchg
stos
xor
mov
cwde
lods
aam
dec
mov
sub
imul
arpl
arpl
lea
aam
hlt
cmps
sbb
add
add
jmp
dec
lods
sbb
inc
ss
xor
test
pop
xor
imul
je
xchg
imul
rcl
fadd
lea
pop
sbb
rcr
or
sbb
jl
adc
loop
add
call
xchg
jno
add
lock
mov
mov
rol
jmp
pop
cmp
repz
mov
cmc
adc
(bad)
mov
add
or
sub
loopne
loopne
addr16
sti
fdiv
pusha
sub
push
xor
cld
jge
and
jecxz
ror
inc
out
xchg
xchg
jno
rcl
adc
call
not
and
pop
sub
xor
cdq
cmp
xchg
and
ret
inc
push
inc
xchg
mov
mov
push
adc
xor
int3
or
dec
xor
push
mov
fwait
test
mov
cmp
push
mov
hlt
jo
dec
call
xchg
push
xor
mov
add
xor
add
rol
sbb
jb
adc
sbb
cmp
jmp
fnstsw
rol
mov
inc
mov
or
aaa
xchg
xlat
int3
lock
xchg
jl
cmp
mov
cmps
mul
loope
sbb
push
mov
(bad)
jg
movs
pop
pusha
mov
jmp
dec
sub
cmp
jne
jmp
std
sbb
pusha
sub
mov
mov
outs
je
inc
xor
xor
stos
sub
pop
js
adc
sbb
shl
stos
jmp
cmp
les
pushf
pusha
mov
stc
jmp
push
push
cmp
mov
inc
or
dec
mov
shr
push
sub
mov
dec
je
lock
xchg
mov
sti
lahf
or
pop
pop
dec
inc
and
(bad)
mov
or
fbld
mov
inc
jne
inc
or
push
jg
ja
mov
sti
js
xchg
mov
push
mov
mov
fld
sub
in
mov
xchg
jecxz
push
inc
lods
xchg
cmps
push
sbb
xchg
or
jno
in
and
and
adc
or
mov
cwde
(bad)
sbb
cmp
(bad)
add
scas
push
icebp
ret
(bad)
stos
jne
mov
and
xchg
(bad)
mul
adc
(bad)
aas
inc
hlt
loop
jne
add
test
jecxz
xor
jbe
rol
add
cdq
cmps
arpl
ds
or
je
cmp
maxps
ds
out
test
cld
aas
jbe
mov
mov
adc
sar
stos
sbb
bound
pop
mov
shr
xor
dec
add
cmovb
and
cmp
jle
jnp
add
jns
xlat
(bad)
test
inc
add
mov
repz
cmp
jnp
push
inc
sbb
cli
(bad)
fnstsw
add
adc
push
inc
dec
dec
outs
popa
fs
js
gs
imul
xlat
pop
xor
out
mov
fiadd
or
inc
dec
outs
fs
mov
fucom
xchg
popa
sub
btr
sub
int3
xor
xlat
push
jb
cmp
mov
jo
addr16
ds
push
dec
ins
add
fist
push
addr16
fs
push
scas
fnstcw
int
add
test
push
add
sub
xor
fnstcw
adc
adc
adc
or
xor
push
rol
push
fcom
int3
pop
js
adc
in
es
cmovl
nop
pop
shl
pop
mov
es
push
add
inc
inc
push
jae
jb
popa
ins
add
ffreep
stos
sub
jae
ja
jb
lds
jnp
push
sub
js
and
dec
inc
fcomp
div
jo
repz
ins
aaa
add
jb
jmp
ret
cmps
fsubr
or
sub
xor
jo
test
loopne
pop
pop
jne
and
ja
lods
in
and
and
mov
je
push
out
pop
pop
fsub
dec
fs
and
inc
pmaxsw
push
arpl
gs
aam
popa
test
outs
sub
inc
arpl
jbe
gs
sbb
or
fwait
add
ins
data16
std
mov
mov
je
gs
outs
push
je
add
or
add
jl
enter
xor
imul
repz
int3
mov
das
mov
inc
mov
loope
jne
jo
or
inc
movs
test
in
sbb
stos
call
xchg
les
into
test
out
ret
inc
cli
inc
inc
xchg
xchg
push
sbb
rcr
pop
inc
pop
push
cmp
fadd
inc
inc
adc
into
add
push
ss
shr
or
dec
add
mov
jo
add
or
mov
lods
loope
out
daa
hlt
popf
jb
and
mov
mov
(bad)
pop
sub
es
out
add
fnsave
popa
cmp
sbb
inc
test
jne
pop
sub
sahf
xchg
push
cmps
xor
push
mov
adc
pop
push
or
cmps
xchg
xor
dec
dec
rol
add
push
mov
jge
jecxz
mov
dec
cmc
outs
adc
inc
cmp
mov
mov
arpl
hlt
adc
push
push
aas
ret
loopne
inc
sbb
fs
loopne
dec
loopne
add
or
enter
jle
or
xchg
sbb
setne
dec
push
pop
jecxz
ret
sub
xchg
add
cs
popa
or
(bad)
and
pop
bnd
lock
sbb
jae
lea
retf
fiadd
pushf
cmps
xchg
mov
ret
(bad)
std
(bad)
jmp
jle
adc
pusha
mov
mov
pop
adc
rol
fild
inc
mov
xchg
hlt
jb
ret
aaa
xor
sbb
or
mov
and
inc
xchg
hlt
retf
mov
jnp
je
sbb
jne
mov
jae
in
add
add
or
mov
inc
pop
rcr
maskmovq
imul
push
xchg
popf
sub
pushf
dec
jne
(bad)
out
rcr
imul
jg
or
sbb
cmps
sahf
cmp
in
pop
mov
cmp
mov
xchg
mov
ror
bswap
pop
leave
rol
imul
xor
push
out
(bad)
fmul
call
out
fild
outs
and
mov
adc
outs
and
jno
push
fist
and
sub
jno
mov
jae
scas
sub
and
sbb
xchg
push
push
push
push
(bad)
pop
mov
and
push
sbb
sbb
aaa
nop
cdq
das
pusha
sbb
test
movs
(bad)
pop
rcl
add
xor
sti
jg
cdq
cmp
mov
push
xchg
movs
mov
mov
push
push
cdq
imul
into
outs
pop
lock
jl
sbb
test
xchg
fisttp
cmp
cld
mov
xor
stos
push
pop
or
shl
lock
imul
inc
or
rol
es
or
clc
cmp
pop
adc
push
mov
aam
leave
and
sbb
xchg
adc
cmc
shr
aam
fcomp
ret
jo
add
ja
sbb
das
loop
xchg
inc
sub
sbb
sti
scas
sbb
push
push
nop
outs
jl
push
fadd
xchg
push
clc
xchg
pop
and
nop
xchg
sti
test
pop
xchg
mov
xor
vmwrite
xor
cmp
jns
adc
inc
adc
aaa
xchg
or
dec
gs
outs
arpl
pop
inc
adc
xor
jle
ja
push
inc
gs
pushf
xchg
cdq
jo
add
or
ret
jae
cmp
or
dec
outs
jo
mov
or
dec
sbb
add
pop
rol
mov
mov
sbb
dec
mov
repnz
popa
ins
xor
imul
or
sub
or
push
or
jg
xor
cmps
add
mov
mov
push
jg
mov
ds
add
jb
aaa
push
(bad)
push
outs
inc
jns
gs
cdq
dec
mov
sbb
mov
cmps
xor
jge
pop
mov
add
mov
and
imul
push
pop
and
shl
pop
adc
push
jns
fisubr
cmp
push
js
sub
loope
ja
mov
mov
push
sbb
sbb
fwait
int
pop
xor
push
dec
call
push
mov
xor
push
lods
test
jmp
adc
adc
add
or
jb
push
gs
add
xchg
add
inc
dec
and
cmp
outs
stos
add
jb
mov
rol
bound
or
xchg
dec
andps
jae
ss
adc
adc
jb
xchg
pusha
pusha
adc
add
mov
sub
ja
lds
adc
mov
ja
or
ins
add
xchg
sbb
and
out
cmp
out
add
lea
sbb
push
adc
push
rcr
mov
push
mov
sbb
or
push
imul
or
and
inc
xchg
mov
mov
loopne
les
retf
push
push
femms
inc
dec
push
push
push
pop
xor
pop
iret
pop
sub
dec
jmp
jmp
adc
addr16
pop
add
ja
push
nop
xor
paddusw
push
xor
sub
dec
ins
fstp
push
mov
cmp
cmps
mov
cmp
imul
push
in
push
adc
mov
and
push
xchg
outs
dec
push
inc
adc
ins
aas
je
pop
adc
pop
inc
push
pop
loopne
je
cmp
push
jne
add
or
add
xor
push
cmp
jnp
fs
cmc
sbb
push
inc
jne
jmp
sahf
loopne
outs
jne
xchg
sub
ja
xor
push
pusha
les
adc
lock
inc
sbb
(bad)
cmp
mov
or
fistp
pop
mov
push
lock
test
(bad)
mov
cmps
or
sar
inc
or
cld
jne
mov
data16
add
jge
clc
or
cmp
cmp
lock
xor
jp
adc
and
push
pop
(bad)
fidivr
cmps
push
cmps
adc
pop
adc
test
clc
or
adc
movs
sbb
cmp
xor
mov
out
retf
dec
cmp
mov
add
adc
xchg
push
and
push
cdq
ds
or
sbb
mov
add
cmp
dec
xor
sbb
jbe
or
and
mov
inc
jb
inc
imul
sti
xor
add
ror
pop
xchg
jg
push
movs
das
sbb
add
jne
sub
out
mov
cmpxchg
outs
xor
mov
or
sub
jnp
fdivp
add
test
add
adc
mov
outs
xchg
rol
lock
mov
mov
ins
adc
mov
or
inc
lock
xor
add
pusha
data16
dec
outs
sub
push
loopne
and
mov
xchg
and
aas
loop
dec
xchg
xor
sbb
dec
push
fcomp
pop
into
adc
and
push
or
ds
mov
mov
retf
mov
inc
sbb
stc
popf
sbb
mov
xor
leave
popa
and
ret
push
add
cli
(bad)
mov
jecxz
sbb
jecxz
(bad)
std
aad
dec
pop
lds
or
out
inc
and
adc
loopne
out
inc
aad
retf
push
aad
stos
out
push
out
popf
stos
(bad)
push
out
cmp
xor
and
ret
lock
test
shl
add
mov
xor
shl
or
xor
addr16
mov
or
jo
push
lahf
cwde
push
aaa
jmp
or
add
xor
xchg
nop
jecxz
pop
or
daa
cmp
jno
inc
cmp
xor
inc
inc
fcom
sbb
jbe
(bad)
ss
cdq
push
push
sahf
sub
(bad)
or
nop
lods
rcl
out
inc
cmc
inc
sar
idiv
aas
sub
inc
out
lea
lea
jl
(bad)
leave
fincstp
mov
cli
aas
nop
sub
jl
out
inc
cli
fiadd
int3
xchg
outs
push
js
(bad)
mul
test
je
outs
call
enter
mov
adc
cmp
push
xchg
sbb
add
inc
cmp
adc
jo
fs
pop
add
(bad)
mov
mov
push
mov
scas
add
or
xchg
push
and
mov
push
(bad)
cmp
lock
cdq
sbb
ret
cmp
and
add
gs
xchg
xchg
xor
push
ret
cdq
out
scas
mov
inc
inc
add
mov
push
xchg
or
add
pop
mov
int3
std
or
jmp
test
add
ror
mov
add
mov
add
je
dec
je
clc
dec
jne
(bad)
jmp
cmp
jne
inc
adc
cwde
stos
int3
fidiv
mov
and
mov
or
sub
scas
add
cmp
or
push
pop
cld
in
jle
mov
dec
fwait
dec
adc
movsx
add
(bad)
(bad)
cmp
jl
mov
and
add
add
mov
mov
mov
fadd
fmul
jo
iret
fcomp
(bad)
pop
pushf
mov
data16
iret
mov
rcl
sbb
xadd
add
add
xlat
int3
fcmove
out
mov
int3
push
out
in
jne
out
add
push
enter
add
jmp
add
retf
inc
nop
retf
push
and
loope
les
ret
and
xor
(bad)
les
fst
ret
sbb
aas
or
push
sbb
outs
or
and
lea
ficom
repz
and
and
mov
push
mov
fcomi
mov
xor
lea
gs
lock
push
call
mov
not
add
(bad)
and
fcom
pop
cmp
test
loope
out
ja
loopne
add
in
or
pop
outs
mov
sbb
fild
push
cs
push
or
mov
retf
cld
jmp
(bad)
sti
loope
xchg
mov
cmp
pop
test
mov
dec
push
pop
call
rcl
aas
jge
pop
jo
dec
cmc
xor
add
xor
cmp
push
xor
push
loop
pusha
ror
mov
or
fs
mov
and
sub
push
cmps
xor
test
bound
call
or
fimul
mov
not
cbw
sub
push
mov
test
xor
inc
dec
imul
(bad)
fxch
jmp
ins
sti
in
sub
ret
test
push
push
and
xor
ins
pop
add
fwait
pushf
call
ror
push
js
or
pop
cmp
ret
ds
ja
fdivrp
dec
test
out
add
jns
mov
add
add
fwait
aad
out
jne
sbb
add
sbb
and
adc
fwait
adc
scas
pop
add
jne
mov
sbb
or
enter
jmp
push
inc
repz
push
repz
lods
test
or
mov
ret
add
sbb
(bad)
push
callw
mov
inc
mov
add
mov
ja
and
inc
ret
push
mov
shr
xor
in
sub
add
in
nop
cwde
jnp
jp
pusha
add
mov
cs
inc
js
cmp
xor
hlt
mov
std
fild
fdiv
fcompp
fstsw
sahf
jb
int
pop
fmul
cmp
cmp
jp
adc
jmp
test
or
jo
inc
add
scas
cmp
fdivr
outs
mov
call
cmp
jge
loopne
mov
(bad)
outs
inc
sub
and
clc
and
xor
in
mov
adc
(bad)
ds
inc
je
mov
mov
xchg
dec
fld
jnp
cld
pop
xor
loopne
or
xor
cs
jo
or
push
movs
leave
int3
mov
cmp
(bad)
icebp
outs
daa
out
mov
sub
or
enter
mov
jge
add
cmp
popa
dec
inc
addr16
sbb
jmp
or
and
push
pop
adc
and
and
add
add
les
sbb
hlt
(bad)
stc
sbb
add
adc
and
add
mov
movs
dec
adc
loope
or
sub
pop
fisttp
xlat
add
xor
adc
or
aam
push
or
and
cmc
les
jb
cmps
sar
jns
pop
rcl
add
leave
mov
xchg
jmp
into
(bad)
xchg
mov
paddsw
or
jb
add
mov
add
sub
jb
adc
cmc
mov
push
out
jmp
sub
ret
sub
stos
and
dec
bound
popa
mov
and
mov
sar
lahf
mov
or
mov
test
mov
mov
das
cmp
shl
fldenv
ror
rol
push
out
adc
push
pop
xor
ret
push
push
fst
dec
xchg
fcomp
inc
(bad)
pop
call
push
cmp
mov
sub
call
sub
fnstenvw
jnp
and
lahf
cmp
jle
je
dec
in
in
dec
or
jl
sub
in
mov
(bad)
adc
sub
rcr
push
clc
stos
fsub
xor
xor
mul
xor
cmps
movzx
retw
ss
or
adc
in
sar
dec
arpl
clc
(bad)
cld
mov
jmp
cmp
jae
cwde
or
sub
mov
and
jg
cld
push
push
pop
xor
sbb
add
int
inc
ret
(bad)
xor
test
dec
adc
cmpps
push
and
mov
jecxz
aad
push
sbb
mov
push
and
outs
pop
mov
mov
jge
call
adc
jp
add
shl
sbb
adc
inc
mov
inc
and
inc
or
push
out
rcl
and
sub
shl
add
(bad)
enter
xchg
mov
call
loopne
mov
ret
pop
sti
xor
xchg
sub
hlt
mov
adc
and
mov
or
adc
add
cmp
xor
dec
mov
cld
dec
add
push
mov
dec
out
add
push
mov
add
or
xor
xor
xor
add
sbb
cld
xor
add
add
adc
add
pop
add
adc
jo
push
add
or
push
mov
add
loop
add
call
push
mov
push
psubsw
xchg
fiadd
sti
mov
or
add
hlt
in
je
inc
xor
hlt
add
jb
(bad)
and
and
loope
mov
daa
pop
xchg
test
je
ret
adc
jmp
xchg
sbb
shr
call
ds
leave
jge
dec
test
jl
xchg
and
aad
lods
fiadd
(bad)
push
dec
jne
ret
add
aad
jb
test
push
mov
jmp
aas
jecxz
add
push
jbe
inc
mov
lock
(bad)
fwait
mov
cmp
rcr
dec
or
sub
loope
nop
in
mov
or
mov
jge
fdivp
or
adc
movs
dec
int3
inc
lea
movs
cmp
jge
mov
or
cmp
pop
mov
inc
adc
(bad)
add
cmp
jno
push
sbb
fwait
add
jmp
mov
(bad)
test
call
dec
add
push
dec
gs
outs
fs
jns
gs
out
scas
xor
ins
je
outs
jns
inc
stc
out
repz
je
outs
jae
dec
gs
or
jmp
inc
gs
ss
sub
je
push
add
aas
sub
jo
pop
cmps
ficomp
adc
call
(bad)
das
jl
push
or
add
push
xlat
adc
ss
xlat
push
mov
push
lock
sbb
lock
ins
pop
add
sbb
lock
inc
inc
outs
mov
add
jb
or
add
or
sub
mov
les
add
outs
imul
mov
fisubr
ins
fs
add
cmp
push
lea
shl
pop
mov
dec
push
aad
retf
add
test
enter
lods
pop
ins
mov
icebp
(bad)
add
stos
or
ja
faddp
leave
ins
ja
dec
push
stos
bswap
adc
xorps
push
sbb
jno
xor
popf
mov
in
sbb
int3
mov
ds
pop
sahf
pusha
jb
push
dec
pusha
test
dec
cdq
or
add
inc
and
test
in
and
lds
xchg
jno
adc
int
jno
dec
aaa
dec
cmp
xchg
imul
adc
inc
in
cdq
xchg
dec
xchg
cmp
dec
sbb
outs
jae
dec
push
push
dec
mov
imul
sub
shl
push
call
cmp
movs
push
inc
out
enter
sub
sbb
xchg
pop
inc
dec
ja
xchg
inc
(bad)
lods
pop
ja
shl
push
fadd
inc
add
or
jne
or
clc
push
mov
xor
jae
stos
xor
je
int
mov
or
arpl
sbb
jmp
sbb
ds
fwait
inc
jnp
push
xor
daa
or
pop
push
push
push
or
and
xor
pxor
das
fcmovb
sub
fist
sub
cs
push
std
sub
mov
xor
retf
inc
adc
xchg
xchg
in
movs
pusha
jmp
out
(bad)
push
mov
stos
jae
jns
popa
ins
out
sbb
mov
pop
mov
add
pop
fchs
and
mov
jne
rcl
sbb
pop
sub
jnp
push
or
jb
xor
push
scas
cmp
xor
xor
ret
xor
adc
xor
xor
xor
and
cmp
xor
out
mov
xor
xor
push
jne
mov
fild
sub
xor
jp
(bad)
mov
out
movs
cmp
cmp
or
cmps
es
dec
mov
add
xchg
cld
ror
and
or
adc
jle
or
dec
(bad)
cmp
nop
cmp
stc
das
ficomp
sbb
pop
pop
push
inc
(bad)
es
jp
jb
cmp
ins
push
mov
inc
push
xor
push
out
push
mov
cmp
sar
push
aas
or
jl
or
outs
outs
inc
add
cmp
shl
arpl
inc
jne
mov
bound
shl
inc
push
dec
jmp
and
outs
or
int
inc
cli
inc
add
ins
mov
push
push
jg
cmp
push
inc
arpl
adc
lods
cmp
cmp
xchg
cmp
add
cmovns
and
fs
test
push
xchg
xchg
data16
mov
inc
xchg
mov
or
cmovg
shl
or
push
(bad)
shr
aas
call
adc
dec
inc
or
push
ins
fwait
inc
mov
fadd
add
dec
adc
ins
aas
jbe
push
or
ja
add
fist
inc
lea
test
popa
shl
dec
or
jbe
inc
test
dec
lods
push
gs
pop
inc
js
imul
idiv
je
jne
aas
lds
push
gs
fs
inc
push
dec
mov
sbb
push
arpl
(bad)
or
push
or
loopne
mov
lods
stos
jb
pop
call
inc
jp
mov
or
ins
jno
inc
mov
jbe
or
ror
mov
inc
hlt
mov
xor
or
shr
mov
cdq
or
dec
push
adc
inc
mov
add
push
inc
dec
ja
es
mov
dec
pop
mov
push
outs
hlt
fcmovnb
and
cmp
cli
dec
div
pop
cmp
push
mov
test
data16
push
push
inc
bound
ins
dec
cmp
das
add
int3
rcr
(bad)
jns
pop
inc
retf
pop
add
mov
cmp
xchg
dec
in
frstor
mov
cmp
daa
lods
cmp
jge
in
loopne
or
mov
es
push
push
in
push
xchg
mov
xor
fnstenv
lahf
add
dec
frstor
sub
add
ds
adc
loope
inc
fnsave
outs
movs
push
inc
shl
aam
(bad)
xlat
lock
and
movs
push
mov
push
push
loope
std
mov
pusha
pop
push
mov
adc
adc
and
pop
loop
sub
and
fistp
add
pop
in
pop
add
inc
mov
push
dec
push
xchg
adc
addr16
jbe
std
inc
ins
popa
jae
imul
mov
cmps
xchg
xchg
push
cmp
push
fcomp
icebp
and
xor
add
test
ins
sbb
scas
cmp
add
adc
sbb
mov
cmp
adc
push
into
add
cmp
out
push
or
mov
pusha
xlat
inc
pop
mov
mov
shr
add
imul
mov
mov
push
out
pop
cmp
sub
in
loopne
and
pop
cmp
add
inc
or
jle
cmp
mov
inc
cwde
sub
or
mov
sub
sbb
cld
xor
das
sub
pusha
lods
dec
rcl
cmp
and
xor
daa
into
jb
jns
sub
mov
mov
sbb
fdivr
sub
jo
lods
adc
mov
sub
das
mov
ja
scas
inc
mov
loopne
ret
mov
sub
inc
outs
jne
psraw
movs
fdivrp
dec
outs
jbe
jb
mov
gs
sub
sbb
pop
mov
ret
pusha
adc
sbb
jbe
call
arpl
pop
cld
aam
mov
jae
dec
mov
pcmpgtw
aas
test
jne
les
enter
jbe
add
out
push
add
xor
fdiv
scas
lock
(bad)
sbb
mov
push
mov
mov
cmp
sub
mov
movs
gs
js
arpl
add
pop
pop
sbb
pop
pop
pop
cmp
pop
push
outs
cmp
adc
pop
dec
inc
ret
sub
inc
add
dec
test
add
jg
inc
int
hlt
or
imul
pusha
push
jo
push
outs
shr
fwait
add
dec
xor
inc
int
aam
xlat
and
inc
push
sbb
ds
adc
jle
popa
jne
je
pusha
adc
aam
or
mov
call
inc
inc
mov
sbb
es
ret
inc
dec
bound
add
pop
dec
pop
(bad)
(bad)
inc
mov
pop
xlat
es
cli
or
mov
fwait
mov
(bad)
xor
ret
fsubp
out
retf
inc
push
scas
sbb
push
rcr
pop
mov
jno
adc
scas
loope
xlat
pop
dec
mov
adc
xor
dec
dec
dec
popa
outs
jo
popa
stos
add
lahf
leave
add
pop
adc
add
shl
mov
fld
inc
scas
(bad)
jbe
add
push
imul
dec
and
into
add
add
inc
and
sbb
mov
jnp
sbb
int
jmp
and
mov
add
mov
cmp
std
mov
retf
scas
add
lds
mov
fst
in
retf
(bad)
push
push
jo
(bad)
cvttps2pi
push
add
fild
mov
jmp
xor
push
je
inc
jmp
ror
rol
daa
call
das
bound
loopne
push
pop
push
and
daa
cli
mov
pop
lods
jecxz
mov
add
push
iret
sbb
inc
mov
loopne
sub
xchg
lea
xchg
dec
js
push
test
pop
and
or
and
sbb
je
(bad)
in
call
or
cli
inc
mov
js
in
cmp
ins
icebp
inc
pop
or
stos
or
xlat
test
xchg
xor
push
ret
loopne
xchg
xchg
or
fidiv
fcom
push
mov
or
sti
push
les
mov
bound
add
mov
fbstp
sti
ficomp
hlt
mov
push
jne
sbb
sub
cdq
ins
push
and
pop
fwait
shld
movs
loop
shr
(bad)
push
cmp
out
fisubr
ror
sub
sub
js
inc
xor
sub
loop
les
cdq
in
push
or
cmovno
mul
clc
loop
inc
cs
daa
daa
mov
mov
add
xchg
xchg
xchg
enter
leave
leave
leave
enter
xchg
retf
mov
or
push
fwait
sar
jns
in
int3
das
data16
cmp
popf
pushf
pushf
outs
movs
out
aas
into
mov
je
cmps
pop
ror
jp
je
xchg
fimul
inc
es
and
dec
mov
inc
aad
jno
retf
sbb
or
or
inc
movlhps
add
jne
mov
jae
adc
ret
push
mov
scas
dec
cmovns
dec
jae
pushf
adc
adc
jg
ds
pusha
dec
and
pop
inc
in
les
fcom
and
dec
and
popa
ins
jne
fiadd
bound
add
loopne
ret
dec
ins
aam
add
jecxz
outs
push
aaa
jo
or
retf
data16
and
cld
and
mov
jae
dec
add
ret
cmp
sbb
xlat
or
jo
jnp
xor
or
mov
xchg
and
das
leave
fwait
cmps
out
sub
fwait
add
push
push
fsub
lea
inc
or
inc
or
cwde
out
add
imul
push
test
xor
loopne
dec
imul
xchg
push
jno
rol
mov
ror
adc
push
or
sbb
cmps
add
pop
mov
imul
les
add
mov
jmp
jb
inc
xor
pusha
add
dec
enter
mov
stc
scas
bound
push
xchg
xchg
xor
pop
xor
or
and
or
gs
and
mov
jae
fisttp
dec
popa
inc
xchg
inc
dec
(bad)
rol
and
add
add
and
rol
stos
mov
mov
imul
mov
pushw
cmp
test
dec
or
rol
daa
jns
add
add
xchg
adc
inc
jge
call
(bad)
cli
or
dec
ins
or
or
mov
jmp
push
and
lahf
and
ss
cmp
adc
mov
cli
outs
and
or
ins
xor
js
test
cmp
or
mov
dec
or
shr
nop
bound
ds
fadd
add
adc
inc
retf
cmp
and
and
jno
add
pop
xor
(bad)
jp
push
icebp
ja
shl
or
or
sub
sub
test
add
les
add
pop
arpl
jns
sbb
in
add
hlt
inc
sub
xchg
cwde
fwait
sub
sub
cmps
(bad)
mov
inc
ret
sbb
outs
sbb
and
adc
push
std
call
mov
push
push
and
jo
mov
mov
mov
imul
or
add
cld
and
mov
jmp
mov
fstp
jo
pop
pop
ret
push
mov
add
push
push
mov
inc
fimul
hlt
lea
mov
repnz
loopne
out
dec
mov
lea
lea
hlt
retf
fs
pop
mov
pop
ret
push
int3
ds
xor
(bad)
pop
loopne
js
mov
mov
xor
push
push
shr
mov
mov
or
push
or
sar
(bad)
jg
cmp
add
mov
test
je
sub
mov
dec
xlat
ins
pusha
pop
cmp
jge
pop
mov
(bad)
std
dec
hlt
mov
sub
xchg
pusha
mov
push
cld
add
sub
mov
push
adc
push
mov
cs
fnstsw
mov
pop
pop
pop
sbb
push
div
fs
push
mov
push
or
or
call
hlt
add
inc
mov
xor
push
daa
push
test
xchg
pop
fdiv
or
sbb
add
test
mov
jo
mov
sbb
inc
mov
jo
pop
mov
mov
pop
inc
popa
dec
mov
int
mov
add
gs
add
mov
ds
push
add
mov
idiv
push
inc
adc
inc
shl
nop
dec
xor
mov
pop
sbb
sbb
jecxz
jb
and
mov
cmp
adc
jo
pushf
xor
or
jmp
cmp
rol
lds
call
dec
aad
dec
scas
mov
cmp
sbb
add
or
sbb
mov
or
ret
inc
or
jbe
call
push
adc
adc
and
mov
add
jp
mov
call
movs
int3
xchg
or
mov
mov
mov
dec
mov
and
fist
xchg
sbb
or
and
sbb
adc
cdq
cmp
pop
push
pop
or
or
lea
pop
and
mov
dec
cmp
aad
sub
sub
inc
mov
mov
test
je
mov
jb
or
push
popa
idiv
pop
push
adc
push
or
mov
cmp
add
mov
(bad)
sbb
shl
jl
out
jb
jnp
adc
stc
fdivr
dec
cmp
out
dec
cmp
push
or
add
adc
ja
retf
aaa
dec
xchg
xor
inc
js
xor
pop
inc
inc
hlt
inc
popa
xlat
add
add
cwde
push
push
aaa
sub
push
into
mov
xchg
mov
bound
fisttp
pop
mov
fidiv
shl
xor
and
(bad)
mov
lock
scas
out
inc
push
push
pop
scas
ss
hlt
test
cmp
and
push
adc
xor
rol
or
repnz
push
stc
jbe
add
loopne
push
cwde
mov
enter
xor
loop
daa
mov
mov
mov
imul
jge
sbb
sti
mov
mov
in
adc
mov
or
or
xchg
mov
js
mov
jb
out
and
enter
adc
fadd
xchg
sbb
add
js
fs
mov
in
ret
fsub
setl
(bad)
inc
repnz
pusha
shl
test
retf
cmp
cdq
pop
lds
mov
ret
jg
fstp
mov
mov
jo
scas
cli
icebp
popa
add
les
add
cmp
add
ror
shr
push
js
mov
out
cmp
icebp
push
mov
add
jo
adc
jmp
mov
fnsetpm(287
pusha
mov
repnz
push
jge
push
ja
cs
sub
test
shl
sbb
jbe
loope
js
xchg
daa
add
ja
les
cs
popf
popf
adc
add
in
mov
mov
push
movs
neg
ret
pop
cmp
cmp
lea
ja
lea
fs
sub
lea
cmp
inc
jne
arpl
mov
lods
push
inc
(bad)
mov
adc
add
jle
mov
pop
mov
out
mov
mov
inc
sti
aaa
jae
jbe
push
adc
call
cdq
mov
pop
(bad)
cmp
jne
or
pop
mov
cwde
xor
push
cmp
mov
mov
jge
je
add
ss
std
pop
setne
les
jne
xor
or
lahf
sar
lods
or
sub
into
sub
sar
jns
rcr
xlat
or
mov
mov
je
push
sub
jo
pop
add
test
push
sbb
int3
add
cmp
push
outs
xchg
mov
aas
add
sbb
push
dec
cld
xchg
dec
rcl
pop
aad
loopne
add
adc
add
data16
pcmpgtb
jnp
xlat
adc
lahf
out
mov
xlat
scas
inc
mov
lea
dec
movs
gs
pop
(bad)
jp
ret
jmp
xor
test
je
mov
jecxz
lock
dec
add
rcl
push
mov
(bad)
unpcklps
fs
je
push
loope
push
pop
or
(bad)
mov
ja
sbb
test
pop
or
jg
push
adc
jne
push
or
jle
scas
inc
inc
fisubr
sub
or
cmp
sbb
out
add
fnstsw
mov
fmul
not
cmp
add
repnz
mov
inc
mov
je
fnstcw
gs
je
imul
xlat
pop
xor
add
push
mov
xor
push
push
cmps
scas
jge
xor
emms
int3
nop
popfw
mov
add
mov
mov
int3
sbb
inc
iret
mov
add
and
add
adc
fst
test
mov
and
daa
or
pop
adc
hlt
push
mov
fdiv
out
cwde
and
sbb
ret
call
das
jo
adc
call
push
rcr
push
into
mov
xor
dec
ja
stos
adc
or
push
cmp
cmp
call
pop
adc
out
sbb
sub
and
cmps
retf
into
bound
inc
add
add
mov
cmp
dec
cmp
(bad)
out
into
lock
lea
clc
inc
cwde
test
movs
lock
clc
aas
arpl
test
jge
mov
scas
lock
push
movs
test
and
xchg
fdiv
jle
sar
or
adc
lods
sbb
sar
push
sub
mov
or
xchg
adc
adc
cli
jno
outs
sti
mul
sbb
jne
fucomip
lsl
adc
jbe
adc
clc
hlt
cmp
jg
les
rol
mov
pop
jo
xor
retf
cmp
push
adc
mov
push
(bad)
pop
aaa
in
cli
mov
sbb
adc
gs
sub
inc
pop
sub
mov
jo
xor
xor
inc
adc
push
icebp
arpl
dec
xor
(bad)
cmc
cwde
ds
aam
ret
push
dec
inc
out
dec
ja
jl
sbb
cmp
addr16
inc
sbb
cmp
nop
and
(bad)
sbb
mov
jecxz
inc
sbb
sbb
shl
adc
dec
sahf
adc
mov
xchg
pop
cld
cwde
jo
in
cs
mov
push
in
fisttp
push
or
out
js
sar
ret
iret
push
div
pop
jmp
cmp
call
sti
inc
xor
call
xchg
or
or
lds
push
jl
mov
pop
sti
clc
add
cmp
ret
lea
test
pop
ins
loopne
fwait
push
xchg
ins
pushf
jmp
mov
mov
arpl
shl
push
jmp
fwait
or
push
sbb
or
push
in
cld
sub
pop
jle
aad
outs
fisttp
add
mov
test
js
inc
aas
sahf
adc
or
js
push
ins
imul
or
(bad)
xor
loope
sbb
dec
mov
push
mov
out
or
ins
push
in
add
add
cdq
pusha
add
cmp
jo
sub
mov
dec
adc
loopne
jbe
sbb
call
adc
mov
loope
dec
or
dec
call
mov
xor
lods
mov
or
jmp
push
pushf
mov
and
clc
sbb
inc
add
sub
out
sbb
cmps
sbb
gs
data16
call
pop
or
mov
fmulp
aad
sar
pop
sbb
rcr
popa
or
ffree
mov
mov
add
sub
sub
mov
jg
test
jle
push
mov
fisub
setg
inc
fidivr
push
adc
stos
shr
movs
cmp
sbb
pop
mov
loope
push
fwait
and
add
mov
pop
adc
test
inc
push
movs
sbb
push
es
in
jne
adc
push
inc
rol
inc
test
stos
stos
and
cld
leave
inc
or
(bad)
shl
sub
aam
cld
or
imul
cmp
and
or
adc
mov
stc
inc
gs
jne
je
mov
sub
jbe
int3
add
scas
std
mov
xchg
mov
sbb
push
jo
xor
mov
inc
and
lahf
mov
xchg
ss
(bad)
push
pusha
push
add
out
loopne
shl
sbb
dec
and
bound
add
and
inc
pushf
js
out
push
out
jg
js
outs
xlat
add
sub
pop
bt
sar
cmp
push
sub
xor
pop
aaa
test
add
lock
add
or
sbb
or
ins
or
dec
mov
scas
daa
cmp
mov
lea
js
cmp
daa
mov
or
sahf
loopne
jl
xor
addr16
clc
cmps
pop
frstor
dec
and
sbb
jg
xchg
cwde
or
call
(bad)
out
adc
xlat
ret
das
(bad)
push
out
loope
in
mov
cwde
mov
stc
mov
pusha
call
adc
xor
push
add
popf
dec
popa
outs
popa
shl
addr16
ja
add
jl
jecxz
lock
ret
shl
pusha
pop
shl
adc
cmps
add
das
and
or
add
mov
mov
or
mov
das
and
inc
or
inc
cmc
push
mov
or
jno
inc
fsubr
std
mov
add
(bad)
retf
scas
adc
fimul
stos
add
xchg
in
mov
add
bound
into
adc
cmp
cmp
xor
test
imul
mov
call
fimul
cmc
das
sub
fisttp
push
push
mov
pop
mov
or
add
loopne
xor
div
xlat
aam
in
fiadd
mov
mov
push
imul
fidiv
repnz
push
ret
loop
adc
sbb
lock
(bad)
and
inc
dec
inc
mov
sbb
js
jo
inc
shr
sbb
or
adc
inc
xchg
je
popa
arpl
clc
ror
adc
cvtpi2ps
pusha
add
add
gs
xchg
gs
cmp
jp
cwde
sub
popf
push
inc
out
fs
sbb
icebp
xchg
dec
ja
jae
imul
daa
mov
gs
fwait
add
addr16
mov
seta
dec
add
in
adc
nop
jbe
add
xor
add
outs
adc
or
pop
xor
or
jo
cs
jge
jno
fs
ja
push
mov
inc
inc
lock
in
das
mov
sub
or
ja
fisubr
xor
je
jnp
out
mov
sahf
hlt
push
enter
popa
lahf
pop
fdiv
ja
in
sar
sub
sbb
in
sub
in
aas
pusha
adc
push
ret
xchg
cmp
jae
fnsave
mov
inc
push
hlt
and
pop
push
lea
mov
ins
das
fld
inc
jge
ins
mov
pop
push
jns
stos
pop
dec
test
inc
xor
ins
mov
cli
call
mov
push
dec
call
cmps
mov
out
syscall
add
leave
rcr
add
push
push
and
clts
jbe
push
adc
test
je
out
push
inc
push
add
sbb
daa
or
sbb
add
out
and
xchg
shr
outs
mov
pop
sub
jo
movs
add
push
sbb
xor
fimul
inc
jne
les
imul
add
sbb
or
fs
dec
sbb
loopne
add
jns
xor
jl
sbb
out
js
movs
dec
outs
test
jmp
inc
xor
and
or
xor
lea
sub
int3
pop
jb
sbb
xchg
add
pusha
adc
xchg
mov
sbb
test
add
pop
in
xchg
cmp
dec
sar
fsubr
lahf
and
inc
fild
pop
jnp
or
lea
inc
xor
das
addr16
lock
out
or
pop
les
(bad)
ss
pop
xor
push
in
push
dec
aam
add
sub
jne
mov
aam
aam
in
lea
sub
jne
or
call
xor
(bad)
ins
dec
sti
call
adc
lods
push
mov
push
cld
cmps
ficom
sub
cmc
idiv
add
jp
mov
loopne
call
js
mov
(bad)
icebp
je
stos
xor
popa
lds
lods
icebp
in
loop
push
cmp
push
inc
and
fwait
sub
or
xchg
jo
(bad)
mov
dec
jne
push
add
mov
not
sti
rol
jg
xchg
push
fsub
jnp
jle
sbb
and
dec
mov
mov
sbb
push
add
enter
test
mov
cmp
inc
stos
adc
jo
cmc
sub
adc
ins
aad
sbb
call
test
mov
fsub
add
inc
mov
jns
fwait
das
into
imul
shr
sbb
std
mov
jg
adc
inc
adc
scas
jmp
fistp
les
repz
es
mov
pop
xchg
adc
xchg
fld
fdivr
or
cmp
loope
mov
lock
jle
sub
inc
mov
xlat
pop
mov
sub
loop
or
fild
jl
sbb
nop
test
xchg
cmp
mov
outs
lods
inc
or
sbb
sbb
jl
dec
inc
dec
pusha
pusha
fs
push
push
daa
faddp
pop
and
or
pushf
dec
retf
push
pushf
pusha
retf
push
hlt
mov
mov
and
loopne
push
call
in
scas
dec
repz
push
inc
or
fidivr
push
mov
inc
pop
or
pop
daa
xchg
loop
push
ror
retf
add
ror
and
lea
push
adc
pop
dec
cmp
sbb
cmp
scas
sbb
int3
(bad)
rol
or
or
add
loopne
dec
or
push
or
or
jbe
jle
pop
mov
clc
cdq
gs
idiv
push
push
sub
pop
sub
sub
fld
pop
cmp
jae
jmp
jge
imul
xchg
cs
hlt
or
jmp
dec
sbb
retf
sub
push
or
cmc
mov
jecxz
(bad)
dec
les
mov
pop
pop
rcr
inc
push
pop
lea
add
(bad)
rol
dec
hlt
pop
sbb
inc
pusha
xor
ucomiss
adc
mov
jecxz
jo
jge
dec
mov
out
mov
(bad)
mov
dec
inc
jmp
adc
adc
dec
inc
adc
rol
adc
inc
pop
fmul
int3
mov
dec
sbb
or
mov
imul
int
pop
test
cmp
jl
int3
and
xchg
nop
test
dec
mov
mov
push
xchg
adc
mul
icebp
adc
sbb
xchg
mov
push
jnp
jo
jno
hlt
rol
je
mov
jg
jg
xchg
jo
das
push
cmp
jo
cli
xchg
mov
fdivr
out
adc
stos
je
sbb
aaa
lea
mov
pop
in
mov
mov
sar
pop
add
call
push
retf
xor
(bad)
fadd
pop
xor
jg
pop
pop
xchg
pop
cmp
pop
sbb
rol
and
into
add
pop
int3
ss
inc
clc
dec
ds
jb
je
dec
je
jmp
shr
or
adc
jmp
add
fs
inc
call
jg
xor
adc
push
adc
and
mov
jmp
add
test
adc
inc
or
dec
test
adc
int
cmp
cwde
xor
dec
cmp
popa
xor
or
out
mov
in
in
jbe
add
ffreep
xor
adc
addr16
addr16
shl
adc
and
push
mov
sbb
add
stc
ret
in
fwait
add
clc
sti
push
dec
push
mov
adc
(bad)
push
addr16
mov
(bad)
push
push
add
push
xor
push
sub
std
fistp
stos
xor
lock
jp
push
push
inc
inc
jne
cmps
and
mov
in
jb
in
(bad)
in
or
or
pop
inc
push
and
adc
pop
and
das
xchg
adc
xchg
popf
xchg
(bad)
and
sub
and
pextrw
sbb
inc
hlt
add
fmul
inc
fs
sbb
out
mov
hlt
push
inc
sbb
inc
fild
inc
mov
pop
cmp
je
and
push
lods
std
pop
sbb
jo
inc
ins
push
cmp
inc
inc
rol
push
add
call
bound
inc
sub
mov
jno
gs
popf
sbb
jmp
mov
outs
sbb
and
ror
push
adc
or
rcl
adc
jmp
push
fdiv
scas
outs
cmp
or
dec
and
fbld
call
xchg
pusha
mov
mov
lods
and
sbb
ja
(bad)
fwait
jmp
inc
push
xor
loopne
inc
or
inc
add
(bad)
leave
mov
or
cmp
or
sub
add
inc
xor
xor
push
xor
add
inc
icebp
icebp
mov
sar
mov
xor
mov
inc
pop
test
arpl
(bad)
mov
jmp
clc
mov
sub
jb
je
dec
je
jmp
loop
inc
add
or
jmp
or
mov
lods
add
adc
adc
adc
adc
mov
inc
test
and
add
push
or
push
jp
push
sbb
push
adc
aaa
cmp
jne
cwde
adc
cmp
mov
bound
fdivr
cmp
push
lock
push
and
or
es
push
and
jnp
mov
sbb
push
jbe
(bad)
xor
sahf
aaa
jnp
in
add
jnp
mov
sub
mov
cmp
add
or
xchg
pop
pop
jbe
jmp
or
push
out
mov
ss
aas
mov
mov
push
add
inc
push
cmp
in
fcomp
sbb
xor
xor
jae
bound
je
pop
fild
aaa
fdivr
sahf
inc
js
cmps
pop
fdiv
fmul
sbb
shl
push
adc
sub
xor
push
add
fsub
fadd
leave
fdivr
in
add
in
push
call
hlt
adc
test
push
mov
xchg
movs
lock
mov
jo
adc
pop
and
adc
movs
adc
loopne
movs
sbb
mov
nop
or
or
jbe
jle
arpl
mov
pop
or
cwde
sbb
(bad)
inc
sub
push
jg
inc
test
repnz
cmp
jge
adc
jg
push
jmp
cmps
lds
or
push
inc
or
dec
test
leave
test
cld
mov
inc
(bad)
mov
enter
fisttp
jae
jg
dec
and
inc
fmul
test
mov
pop
lahf
xor
cs
sbb
repnz
scas
jl
xchg
or
pop
loope
mov
ins
push
push
push
lea
(bad)
cmp
mov
fucomip
fdivp
cmp
push
adc
push
adc
shl
xlat
mov
pop
dec
lock
push
int3
mov
movs
xchg
test
in
xor
ret
pop
push
sbb
dec
and
or
xchg
or
mov
adc
jbe
add
test
adc
test
shr
(bad)
mov
lock
push
xchg
inc
add
sub
mov
inc
aas
add
pop
inc
ror
cmp
add
(bad)
popa
push
dec
add
mov
dec
jne
lea
push
mov
lds
iret
shr
repz
mov
add
push
adc
mov
retf
shl
push
pop
data16
ret
mov
push
scas
add
adc
movs
(bad)
test
dec
sub
add
sbb
mov
lock
adc
jae
test
pop
push
jge
inc
dec
popa
jae
dec
imul
dec
xchg
cmp
ins
add
push
int3
xor
mov
inc
jbe
ins
outs
stc
fdivr
inc
and
or
dec
adc
outs
inc
inc
hlt
sbb
cmps
int3
dec
outs
push
xor
or
fs
fsubr
sbb
aaa
shl
inc
popf
retf
in
and
into
jl
add
mov
fsub
loopne
sbb
aas
jmp
or
push
push
(bad)
jnp
shr
popa
adc
add
push
inc
inc
(bad)
or
movs
outs
or
or
mov
mov
hlt
adc
arpl
daa
lock
dec
outs
inc
je
outs
jb
test
sbb
daa
or
ins
fld
sub
cwde
sub
xor
and
repz
sub
jo
jmp
push
fmul
in
and
(bad)
call
push
gs
jo
imul
adc
fsub
and
mov
mov
jbe
jne
inc
bound
xor
add
inc
cmp
or
leave
montmul
cmps
pop
add
xchg
push
or
test
lea
pop
pop
mov
pop
std
imul
add
mov
or
pop
and
xor
or
mov
inc
dec
outs
pop
rcl
dec
or
es
dec
or
adc
push
(bad)
int3
ffree
inc
dec
adc
call
push
(bad)
shl
cmp
stos
sub
jl
mov
add
and
loope
loop
jnp
sbb
loope
sbb
mov
push
dec
pushf
or
int
sbb
cwde
mov
sub
js
sub
jne
or
leave
pop
or
bound
or
les
mov
jne
pop
sub
lock
adc
push
dec
mov
sbb
repnz
sub
test
sti
js
push
cld
push
ror
imul
push
mov
mov
call
(bad)
mov
mov
sbb
push
xchg
add
loopne
and
js
cmp
jbe
push
loopne
push
inc
fldenv
and
bound
and
adc
xchg
movs
adc
dec
test
jl
inc
mov
test
push
ja
cdq
mov
xor
call
jne
mov
in
and
xchg
cmp
or
mov
shr
test
adc
pop
mov
jmp
cdq
jge
sub
lea
mov
push
mov
cmp
clc
add
and
imul
mov
add
add
ja
cs
add
and
outs
adc
int3
add
push
arpl
es
add
out
xor
push
xor
cs
cmp
mov
inc
inc
sbb
js
outs
cmp
ror
mov
sbb
mov
jae
ds
or
pop
dec
pusha
lock
xor
or
pop
adc
enter
addr16
dec
addr16
inc
ret
jp
daa
ins
jnp
add
add
jle
mov
ja
push
(bad)
jo
pop
rol
xchg
rol
or
sbb
retf
sub
cmp
aaa
cs
out
add
mov
jo
test
ins
push
es
test
sbb
iret
bound
dec
inc
jae
shl
retf
je
mov
fnsave
ja
jo
push
or
mov
mov
inc
push
adc
sub
push
rol
not
adc
xor
xchg
cdq
and
push
and
mov
push
jg
and
fst
jnp
test
push
ja
mov
or
loop
mov
dec
jmp
pushf
test
xchg
push
inc
or
adc
js
movs
nop
rcr
and
mov
add
ret
pop
xlat
sub
fistp
inc
cmp
in
mov
out
push
push
adc
add
jle
inc
imul
and
fisttp
cmp
fild
xchg
xlat
shr
shld
and
push
pushf
jne
fld
add
push
push
xchg
adc
push
push
(bad)
push
push
dec
pusha
clc
sti
cs
or
dec
dec
push
nop
push
cwde
in
hlt
hlt
mov
rcr
inc
mov
inc
sbb
(bad)
cmp
jmp
enter
mov
mov
lock
cdq
mov
popa
das
pop
push
mov
pop
dec
or
mov
adc
rcl
sbb
in
sbb
lea
std
jg
xor
pop
jmp
mov
test
push
sbb
jmp
sbb
mov
sub
inc
retf
fwait
adc
mov
imul
ss
movs
aas
retf
hlt
mov
inc
movs
sub
sub
inc
test
sbb
push
lock
jg
inc
or
in
cmp
cld
clc
xor
sub
test
xor
cld
or
mov
sbb
test
(bad)
daa
pop
push
adc
push
pop
jb
mov
dec
adc
mov
jge
jae
adc
pop
mov
inc
mov
ins
enter
cmp
jne
jo
pop
in
xor
inc
sub
mov
je
cwde
adc
jnp
add
jo
xor
leave
xor
cdq
mov
sub
daa
cmp
stos
sbb
inc
js
(bad)
mov
into
cmp
sub
scas
lods
cwde
mov
jl
pop
or
add
push
mov
arpl
movs
xor
cmps
sbb
add
adc
adc
inc
fcomp
adc
icebp
mov
push
mov
add
cmp
xchg
je
mov
call
jb
and
jno
adc
dec
sbb
inc
jmp
movzx
cld
sub
bound
add
jmpw
in
push
mov
cmps
fnstsw
and
loopne
or
scas
sar
pop
loopne
sbb
test
sbb
movs
ja
add
pop
ret
popa
jno
push
inc
mov
lea
fmul
mov
pusha
outs
jle
daa
cmp
sbb
adc
sub
cs
inc
(bad)
sti
fist
mov
js
mov
pop
std
adc
pop
lock
and
jne
nop
sbb
sub
enter
(bad)
pop
fs
out
mov
xchg
xchg
cs
xchg
dec
lea
push
lds
setae
jmp
setge
add
fdiv
cld
mov
mov
or
inc
(bad)
jle
popf
cmp
lahf
es
mov
call
aam
jle
cmc
cmp
dec
push
stos
mov
jne
xor
jbe
aad
test
jne
(bad)
int3
out
(bad)
neg
mov
fdivr
adc
push
mov
mov
mov
enter
rcr
scas
std
or
cmp
sbb
sbb
mov
mov
cmp
(bad)
leave
das
xor
add
ins
and
shl
sbb
mov
rcl
add
ins
nop
jmp
mov
(bad)
sbb
js
xor
sbb
pop
mov
mov
push
sbb
adc
cmp
xor
in
pop
and
add
sub
inc
test
frstor
daa
add
mov
inc
push
icebp
pusha
outs
jne
push
add
jle
in
adc
cwde
add
adc
movs
xor
fwait
inc
loopne
jmp
jl
and
push
xchg
not
pusha
int3
pop
out
adc
(bad)
inc
push
jmp
xchg
inc
(bad)
test
xor
sub
or
mov
mov
xor
bound
out
dec
aam
pop
sub
fdivr
inc
ret
or
mov
adc
mov
hlt
xor
pop
sar
push
inc
hlt
inc
cwde
xchg
or
rcr
mov
mov
loop
outs
mov
pop
out
jne
js
ror
jns
pop
cdq
in
cmp
mov
mov
pushf
mov
adc
mov
mov
add
xor
or
xchg
adc
out
jne
dec
(bad)
(bad)
push
or
adc
jmp
pop
rcr
pop
loop
fcmovne
imul
clc
out
mov
hlt
mov
sbb
ror
in
lahf
cdq
call
dec
mov
sar
inc
(bad)
in
inc
mov
or
mov
mov
das
sbb
inc
push
bound
nop
xchg
cmp
fs
mov
push
sbb
inc
(bad)
in
add
int3
add
ss
shr
and
inc
(bad)
stos
inc
aas
pop
cmp
xor
add
and
sbb
sbb
dec
clc
dec
add
push
jbe
jae
data16
cmp
(bad)
and
xchg
scas
lods
push
rcl
add
in
cmp
test
popf
jo
cmp
push
cmp
es
inc
inc
push
cmp
lea
push
pop
jle
xor
dec
mov
jmp
gs
aad
pop
mov
jns
call
inc
adc
mov
mov
add
dec
jmp
sbb
inc
pop
bound
lahf
pop
add
xor
xor
or
mov
mov
div
lock
fld
dec
add
(bad)
mov
shr
push
mov
loopne
adc
mov
jns
or
and
jbe
ror
shl
icebp
mov
mov
mov
es
xor
adc
outs
jne
mov
rcl
xor
push
adc
pop
sbb
adc
mov
and
rcr
push
or
pop
dec
mov
jl
mov
cli
bnd
enter
cmp
shr
xchg
in
jmp
and
mov
inc
fsubr
mov
movzx
jo
cmp
pop
mov
pop
mov
adc
and
add
add
mov
lock
sbb
imul
push
loopne
push
rol
add
sbb
mov
push
inc
mov
pop
dec
jne
and
mov
push
mov
mov
push
fwait
outs
adc
add
or
pop
push
(bad)
stc
cdq
mov
push
inc
je
int
rcl
cmp
nop
popa
and
lahf
sbb
push
ins
lods
push
mov
jbe
jno
lods
push
test
sbb
xchg
imul
jne
test
cmp
pcmpeqb
push
sub
call
movs
xor
add
lock
dec
out
sbb
into
jne
push
jl
and
and
mov
jmp
fsubrp
les
and
call
cld
dec
fmul
test
pushf
jo
cmp
mov
add
dec
sbb
xor
and
sub
sub
inc
mov
or
push
pop
pop
add
pop
daa
(bad)
push
mov
adc
cmp
add
add
add
rol
mov
int3
push
cmp
mov
jae
add
xchg
mov
sub
or
(bad)
add
add
fsubr
sbb
pop
dec
movlhps
pop
and
xor
ror
aas
cmp
add
add
sub
jge
and
in
out
repz
jmp
xchg
popf
movs
iret
repz
lods
mov
vpmullw
aas
jecxz
fisttp
push
ret
stc
inc
mov
scas
dec
push
clc
add
aaa
add
adc
push
cmp
add
push
sub
sahf
je
loop
and
or
push
sbb
add
push
or
mov
push
aaa
xor
out
xchg
mov
add
pop
adc
loopne
or
aas
mov
mov
xor
and
mov
cmp
and
lahf
loope
dec
inc
sahf
and
jbe
pop
movs
inc
sbb
inc
hlt
ins
jo
es
push
or
xchg
cmp
sub
or
cmp
dec
push
or
xor
or
sbb
adc
pop
rcl
sub
popa
jo
fimul
adc
ret
or
inc
and
xor
or
mov
pop
or
jle
pop
xlat
or
add
xor
pop
test
nop
rol
jle
jg
int3
jne
int
jle
add
fdiv
mov
add
dec
jae
mov
jbe
jb
jno
imul
mov
sbb
or
mov
inc
or
xchg
inc
sub
outs
rol
push
add
push
sbb
cmpxchg
or
lods
je
pop
fadd
xchg
jo
daa
mov
mov
sub
pop
inc
daa
push
inc
and
enter
and
dec
adc
stos
pop
jns
dec
and
rol
fmul
pusha
pusha
push
inc
pop
lock
push
or
lea
mov
xchg
pop
clc
push
adc
stc
idiv
mov
inc
or
adc
ja
jbe
pop
xor
out
push
mov
mov
test
mov
jo
dec
test
push
lock
aas
sub
mov
pop
(bad)
pop
sub
pusha
movs
adc
xchg
rol
out
adc
adc
cli
mov
push
push
ja
pusha
pop
push
jl
jbe
jg
inc
mov
or
add
pop
cmp
xchg
or
add
mov
inc
cs
das
cmp
in
push
cmp
push
xor
aam
lea
mov
xor
or
push
cwde
push
outs
pushf
mov
lea
dec
or
leave
add
add
mov
cwde
dec
pop
test
ret
int
xor
jbe
adc
mov
sub
add
jbe
idiv
leave
inc
or
sub
sub
scas
fsub
push
inc
outs
out
shr
outs
outs
cmp
jns
out
jb
add
ins
cs
ins
cwde
call
mov
pusha
xor
push
xchg
test
outs
or
arpl
gs
ds
lock
push
(bad)
cmp
pop
clc
add
add
hlt
cld
jns
test
adc
adc
std
sub
rcr
push
pop
sub
adc
push
fidivr
sbb
cld
add
sbb
test
sub
add
mov
push
out
fisttp
clc
scas
je
fsubr
fs
ja
loopne
movs
hlt
call
scas
pcmpgtd
and
push
jo
and
adc
les
pop
mov
pop
daa
xchg
pop
retf
(bad)
jne
inc
dec
sub
pop
test
sbb
add
mov
and
addr16
or
mov
imul
pop
jo
inc
jp
inc
adc
push
mov
mov
sbb
add
ds
pusha
xchg
cld
add
inc
xchg
pop
and
inc
stos
int
pop
daa
xor
jno
ja
pop
sub
push
cs
lods
test
or
test
jo
call
pop
adc
inc
sti
pop
mov
push
ins
outs
lods
mov
adc
mov
mov
push
xor
push
dec
outs
jbe
fist
inc
jb
jns
popa
outs
popa
addr16
stos
add
ja
jo
add
rcr
mov
ret
cs
out
inc
jb
dec
outs
fs
shr
and
and
cmp
add
or
int
shl
out
lods
cmc
or
icebp
popa
push
pop
or
and
add
retf
inc
jne
lods
scas
add
push
in
xor
fadd
xor
jg
ins
ins
gs
jp
xor
push
xor
sahf
dec
sub
inc
or
fs
dec
gs
adc
imul
jne
rcr
daa
jne
outs
mov
jge
add
push
or
push
cli
push
sub
mov
outs
test
aam
cld
mov
push
pop
aad
sbb
and
push
inc
test
loope
movs
add
xor
pusha
xor
sub
es
adc
mov
sub
(bad)
mov
in
rdmsr
adc
cmps
lods
or
popa
imul
adc
sub
gs
js
mov
jle
jle
bound
ret
test
pop
mov
shl
retf
cmp
fnstenv
scas
lds
icebp
js
mov
int3
mov
sub
inc
or
cwde
jge
sbb
or
ins
(bad)
push
fcomp
pop
mov
add
pop
sbb
xor
les
or
ins
adc
mov
push
add
mov
sbb
push
cmp
sbb
add
adc
aad
and
or
dec
mov
fidivr
pop
add
clc
std
das
ret
int3
mov
or
cmps
add
jecxz
imul
es
adc
or
push
call
xchg
xchg
jb
ins
add
pop
xchg
pop
or
or
push
(bad)
pop
pop
sub
mov
(bad)
pop
mov
mov
dec
dec
arpl
(bad)
mov
mov
and
xchg
test
add
call
or
xchg
leave
dec
gs
shl
inc
add
ds
jae
sbb
adc
pushf
movs
fsubr
mov
(bad)
dec
push
data16
add
mov
arpl
cs
scas
dec
jl
jo
xor
jge
cs
add
jmp
or
and
nop
daa
inc
mov
xchg
imul
inc
in
lahf
sbb
sub
adc
mov
add
pusha
xor
out
jge
mov
movs
int3
rcl
fild
jmp
cmps
ror
jo
lds
aad
xor
mov
jge
pop
add
push
call
xor
daa
pop
pop
add
jns
push
mov
push
dec
or
push
push
dec
ret
scas
add
push
dec
and
fs
imul
lock
push
add
sub
int
jnp
xor
adc
add
adc
fnstcw
or
rol
push
fcom
cmp
mov
ss
adc
add
dec
cmp
out
pop
adc
inc
push
sub
inc
ror
inc
dec
ja
dec
jae
pop
sbb
nop
sbb
test
imul
fild
loopne
adc
out
movhlps
out
add
pop
and
stc
(bad)
mov
push
int3
adc
dec
stos
jae
shl
jle
adc
push
popa
adc
fldenv
frstor
adc
inc
xorps
and
inc
mov
lods
or
push
and
or
xchg
pop
adc
rcl
xor
add
fdivr
or
xchg
push
mov
or
mov
and
or
(bad)
int3
je
jmp
sahf
(bad)
fisttp
dec
gs
add
fcmove
and
aas
cmps
add
add
adc
in
inc
data16
(bad)
aam
sbb
outs
sub
pop
xchg
test
pop
pop
adc
hlt
les
mov
cmp
mov
jo
add
lea
push
push
mov
lock
inc
jmp
and
clc
mov
push
jne
xor
jmp
mov
inc
inc
lea
push
mov
in
in
or
dec
unpckhps
pop
test
push
or
shl
mov
call
or
sahf
pop
sahf
pop
or
jnp
test
mov
jo
mov
nop
not
xor
ds
jno
jb
arpl
add
loop
clc
adc
mov
dec
cli
out
inc
cmp
clc
push
enter
add
xchg
push
inc
inc
inc
dec
(bad)
push
or
inc
add
pushf
ss
or
inc
mov
int3
inc
sar
inc
jmp
inc
clc
adc
int3
or
or
sbb
xchg
sbb
push
out
cmc
mov
mov
xor
ja
jmp
jo
mov
aas
sub
ret
in
aas
mov
jo
leave
xchg
test
pop
subps
cs
in
inc
mov
dec
sbb
call
lods
call
push
arpl
ror
(bad)
xchg
fsub
mov
loope
and
aas
movs
lea
cmp
or
mov
ja
test
cmp
inc
aam
xor
or
adc
int3
mov
add
rcl
mov
push
pop
enter
ret
mov
mov
mov
jns
adc
and
mov
push
ret
adc
mov
rcr
leave
pop
adc
ins
aam
enter
ficomp
push
xor
pusha
test
je
call
adc
fcom
mov
cmp
in
ret
jmp
push
xchg
or
add
test
xchg
and
stos
sbb
or
push
int
mov
das
(bad)
push
dec
pop
out
div
push
inc
mov
cmp
fst
inc
div
inc
idiv
mov
sbb
push
cld
hlt
xor
mov
in
inc
aam
aam
mov
xchg
je
xor
push
inc
fisub
outs
imul
loop
push
es
ret
xor
mov
mov
push
inc
dec
jne
xor
inc
icebp
loope
retf
push
jnp
adc
test
cs
ret
push
cld
test
iret
dec
or
ja
lea
les
inc
jbe
cdq
movsx
out
in
dec
(bad)
retf
or
add
(bad)
fadd
mov
xor
push
add
pop
jo
cwde
movs
xor
outs
cld
mov
inc
outs
enter
jb
inc
xor
dec
jo
fs
imul
test
pusha
mov
pop
cmp
movs
jo
mov
adc
mov
add
push
sahf
and
inc
pop
or
imul
scas
pop
mov
or
inc
bound
in
push
shl
pop
in
cs
push
loope
pusha
ja
pop
adc
out
add
pop
hlt
call
jmp
cmp
push
test
setne
jo
mov
and
clc
lods
and
mov
or
mov
or
sbb
or
cmp
sbb
clc
and
pop
mov
sbb
add
ja
pslld
movs
ins
push
and
fucomp
out
cld
shl
push
add
inc
test
dec
fisttp
sub
outs
cmp
out
adc
enter
jne
push
iret
repnz
sub
imul
inc
and
clc
push
mov
add
test
mov
push
pop
or
mov
lock
mov
iret
add
cmp
push
and
or
mov
sbb
push
das
cmp
enter
and
das
seto
sysret
dec
out
(bad)
add
aaa
mov
add
cs
cmps
xor
xor
je
int3
mov
lahf
push
pop
enter
adc
sti
(bad)
pushf
adc
aas
sahf
add
inc
arpl
cmp
jp
add
mov
ins
cmc
or
arpl
push
out
jecxz
lock
adc
adc
outs
pop
xor
push
ins
sti
push
ficom
push
sbb
and
popf
mov
mov
mov
dec
stos
cmp
call
jecxz
add
xor
out
add
ret
mov
inc
rcr
or
inc
iret
add
push
add
into
pop
jnp
mov
sbb
inc
cmps
jecxz
int
aaa
add
inc
inc
adc
loopne
and
rcpps
stos
pop
pop
push
ret
pop
stos
clc
stos
lea
int3
pop
inc
imul
pop
adc
adc
addr16
pop
lds
loopne
loopne
or
ins
and
push
push
xor
jmp
inc
daa
jb
push
inc
mov
pop
pop
das
add
mov
add
push
adc
addr16
test
add
mov
setle
mov
mov
dec
(bad)
fdivr
push
inc
sbb
add
or
inc
jmp
cmp
pop
and
mov
inc
out
cs
ins
je
jns
adc
das
add
inc
dec
pusha
pop
inc
add
inc
dec
cmp
adc
sub
data16
outs
and
aaa
xor
pop
xor
sub
mov
retf
test
adc
xor
mov
imul
cmp
sub
mov
(bad)
movs
adc
cmp
jbe
pop
pop
pop
push
xchg
(bad)
(bad)
jmp
movzx
shr
dec
test
jl
inc
lea
cmp
je
xor
ret
inc
dec
jne
cld
(bad)
fld
adc
ret
adc
rol
jmp
mov
outs
inc
jnp
jg
clc
fmul
sar
pop
rep
pop
movs
push
or
and
or
in
(bad)
mov
or
push
fsubr
sbb
out
dec
test
jl
inc
idiv
jg
lea
cmp
jne
sub
jmp
test
jne
dec
jmp
xor
rcr
jg
mov
dec
jne
cmp
inc
cdq
mov
jle
mov
pop
sti
(bad)
test
jne
sar
jns
adc
inc
add
and
jmp
pop
sets
inc
inc
xchg
into
dec
and
add
jg
mov
and
cli
mov
mov
sub
shr
sub
mov
(bad)
sti
or
mov
rcl
cli
scas
adc
push
push
add
add
lahf
popa
and
and
dec
sbb
jne
inc
cmp
cmp
sar
ret
or
dec
cmp
jge
mov
imul
ins
outs
(bad)
enter
push
jl
inc
push
add
push
enter
retf
mov
mov
mov
pop
mov
lock
mov
adc
lods
ins
xchg
mov
dec
add
fchs
rol
xchg
mov
fs
or
push
mov
dec
jl
add
call
mov
shl
mov
or
mov
sti
xchg
in
mov
mov
cmp
jne
or
add
pop
shl
push
inc
cmp
xchg
dec
hlt
lea
shl
in
xor
in
lods
mov
mov
cmp
jle
push
jmp
jge
adc
xor
cmp
fist
fcmovu
xor
xor
mov
jle
mov
xlat
and
inc
jge
cmp
jge
test
jge
add
inc
add
mov
xchg
iret
gs
jne
rcr
push
sti
add
add
(bad)
mov
sbb
ror
shl
jp
jmp
dec
mov
pop
sbb
xchg
shl
imul
in
stos
ret
xor
in
clc
pushf
push
(bad)
mov
add
lods
lds
add
js
pusha
mov
inc
mov
inc
sar
retf
dec
test
jne
dec
inc
add
adc
jmp
or
mov
sti
imul
xor
push
pop
jbe
in
add
ret
adc
fs
jge
cmps
inc
add
adc
fadd
loop
mov
shl
les
test
das
in
adc
inc
sub
loope
ret
ror
pop
ss
xchg
(bad)
sbb
mov
and
mov
inc
aas
push
sub
jbe
adc
jbe
inc
ss
scas
mov
and
sub
adc
push
jg
out
mov
ins
hlt
push
xor
or
fld
js
ja
lods
in
clc
mov
cmp
addr16
call
inc
jne
imul
cmps
mov
cmp
sbb
sbb
cmp
sbb
dec
fld
je
inc
out
out
or
mov
jne
icebp
cmp
cmc
mov
fsubrp
in
push
fadd
dec
add
inc
loop
lea
lea
or
adc
imul
jge
mov
add
sbb
mov
mov
jl
inc
lea
mov
sub
ret
jmp
dec
jne
add
sar
stos
pop
jmp
mov
sub
mov
gs
add
into
mov
in
xor
fld
jmp
out
mov
xor
mov
push
jbe
in
mov
imul
push
loopne
outs
cld
mov
fstp
mov
stos
mov
lods
adc
mov
ror
adc
je
outs
add
mov
cmp
fdivp
outs
xor
mov
and
push
or
add
pop
xor
cmp
and
add
mov
sub
jge
retf
cmp
and
jmp
push
or
call
adc
retf
es
xor
sub
ins
test
inc
and
add
inc
lahf
fld
and
pop
mov
sbb
test
lods
je
mov
or
in
ret
adc
mov
mov
xchg
jb
pop
pusha
or
sar
or
push
xchg
shl
neg
es
sbb
sbb
dec
sub
inc
mov
clc
mov
inc
imul
mov
inc
aad
inc
mov
das
imul
jmp
mov
mov
mov
pop
and
cmps
inc
sub
dec
add
js
add
mov
lods
lods
cmps
inc
pusha
jp
fadd
(bad)
xor
jmp
mul
and
test
jbe
xchg
mov
aad
sbb
inc
inc
mov
mov
mov
ja
inc
mov
clc
lock
jge
and
or
pusha
imul
sbb
out
(bad)
adc
dec
add
xor
imul
add
add
cmc
shr
xor
fs
jge
sub
sub
neg
add
test
sti
mov
mov
pushf
push
dec
shl
or
mov
and
es
aas
mov
sub
rol
dec
mov
aas
or
pusha
mov
sbb
mov
xchg
cmp
inc
jecxz
mov
mov
rol
pop
xchg
pusha
jae
sbb
mov
ret
or
and
lods
outs
add
clc
xchg
fcom
cmovs
mov
clc
out
cmp
fsub
scas
stc
es
mov
pusha
lea
mov
xchg
mov
test
push
shr
mov
shl
pushf
mov
push
add
nop
or
(bad)
push
add
add
cli
nop
retf
ins
je
and
jge
cmp
jae
and
mov
cwde
mov
jmp
cmp
fs
movs
mov
push
push
js
clc
lea
push
sbb
or
and
fiadd
mov
mov
xchg
popa
cli
popa
cmp
jle
mov
loope
inc
scas
inc
clc
aaa
mov
in
xor
out
adc
push
pop
and
and
popf
in
or
cmp
xor
sbb
rcl
lds
and
jne
mov
psadbw
jmp
and
jmp
or
dec
jne
movs
mov
add
pusha
pop
lock
dec
xor
ins
rol
ss
jo
shr
and
lods
adc
sub
sub
call
rol
jl
lods
dec
cmp
setnp
(bad)
js
or
dec
jle
stc
aad
test
shr
and
loop
jo
mov
adc
inc
popa
in
mov
mov
cwde
retf
add
and
add
push
ret
or
add
jle
sbb
pop
xor
lea
pop
mov
xchg
enter
or
cwde
sbb
xor
repnz
aad
add
mov
xor
adc
lea
xor
mov
adc
add
(bad)
mov
mov
or
cmp
adc
inc
(bad)
adc
sbb
cmps
ret
cmp
fwait
lock
sbb
jne
popa
jnp
pop
mov
in
enter
or
mov
mov
mov
add
das
rol
aas
add
jae
inc
popf
adc
push
push
fstp
movs
pop
mov
sub
pushf
mov
mov
scas
push
jbe
push
inc
dec
add
test
enter
out
sub
out
inc
enter
ja
add
push
sar
sbb
loopne
xor
mov
pop
test
outs
div
stos
adc
mov
test
fidiv
cmp
sbb
sub
fdivr
adc
and
scas
into
outs
mov
mov
pop
sbb
scas
jo
lock
adc
not
cmc
icebp
popa
mov
nop
xor
and
dec
rcl
out
sti
mov
dec
jne
and
sbb
or
dec
xor
mov
sub
pop
and
data16
in
div
xor
inc
idiv
jmp
or
xchg
xlat
or
in
adc
fwait
mov
and
sub
popa
aad
js
jl
mov
sub
bound
lock
cwde
or
mov
inc
or
cwde
sbb
fisub
xor
les
push
sbb
loope
ret
out
and
adc
or
mov
imul
mov
dec
fcom
hlt
daa
lods
adc
cmc
or
lahf
loopne
into
clc
and
push
fmul
or
test
mov
jne
and
in
push
or
call
mov
(bad)
std
mov
scas
mov
jne
mov
cmp
mov
lods
add
or
sbb
retf
ds
sete
sub
lds
inc
(bad)
mul
mov
sti
je
iret
inc
and
mov
rcr
test
jo
inc
mov
gs
test
scas
sub
popf
push
xor
adc
jle
call
cmp
mov
sti
inc
jne
shr
fs
shl
jns
sub
add
int
dec
xlat
int3
push
sub
shl
mov
pop
mov
jmp
xor
mov
sub
jmp
xor
sbb
shr
mov
inc
out
arpl
add
test
add
or
outs
popa
cmp
ss
ror
sti
sbb
sub
scas
inc
jo
or
les
mov
jge
add
mov
rcr
fld
cmp
push
cmp
in
add
sub
in
popf
jmp
(bad)
sub
xchg
push
mov
adc
mov
mov
jb
lea
xor
mov
cs
fnsave
cmp
jb
xor
push
ffreep
jmp
adc
push
test
loope
sbb
inc
add
bound
jmp
push
jmp
retf
mov
dec
xor
mov
sub
cmp
push
add
and
aaa
xor
outs
cmp
push
cmp
push
and
add
mov
inc
sbb
xchg
xor
nop
popf
pushf
rcl
ror
scas
pop
je
inc
clc
(bad)
hlt
fstp
fwait
pop
xchg
ficomp
push
jnp
xor
enter
xor
xor
aas
test
test
dec
mov
out
add
mov
add
jo
lea
add
arpl
int
and
scas
dec
jb
pusha
sahf
stos
hlt
movs
add
adc
inc
dec
adc
mov
js
xor
movs
jge
ja
push
cmp
(bad)
aam
leave
mov
mov
test
xor
or
aas
seta
jmp
dec
or
inc
rcl
or
fiadd
shr
xchg
cmp
dec
pushf
fiadd
mov
ret
sub
sub
mov
and
shl
jmp
xor
(bad)
rcr
xchg
into
ror
add
xor
jb
pusha
rcl
popa
rol
sbb
jg
xchg
ret
jg
fld
shl
cmp
dec
rol
and
lods
mov
xchg
pop
in
jle
or
fsub
jmp
add
pop
or
jge
jbe
retf
mov
mov
dec
retf
loopne
push
dec
test
ucomisd
rcr
das
ficomp
cs
push
sbb
inc
das
pushf
push
pop
or
das
call
xchg
mov
xchg
mov
test
ins
sti
faddp
push
nop
push
in
sahf
xor
push
push
push
push
shl
out
jl
cmp
fcomp
and
sbb
call
pop
dec
cmp
jbe
out
mov
push
add
push
dec
add
add
ja
or
jno
mov
nop
or
mov
or
pusha
push
add
dec
std
sti
inc
imul
gs
add
rol
mov
mov
cmc
add
gs
data16
adc
sub
jo
into
push
dec
add
outs
jo
pop
or
clc
add
pop
add
gs
add
fistp
outs
jne
arpl
popf
inc
clc
out
les
dec
outs
imul
inc
adc
add
bound
push
outs
xchg
inc
sbb
sbb
mov
jo
dec
data16
clc
add
mov
adc
je
mov
pop
mov
ins
jo
gs
(bad)
fsub
mov
stos
or
push
es
and
push
pop
jo
mov
int
mov
adc
add
mov
and
jo
sahf
push
jno
mov
imul
inc
jbe
fucomi
fs
add
push
in
(bad)
mov
add
add
(bad)
fimul
xor
fs
pop
ins
sub
add
or
inc
xor
xchg
in
add
xor
or
add
or
mov
vaddss
addr16
fwait
and
sbb
jne
add
or
in
not
and
inc
pop
ss
data16
push
adc
loopne
push
jp
xchg
sub
lds
xor
inc
push
gs
adc
fdivp
cmp
push
addr16
adc
lds
outs
add
out
or
sbb
sbb
test
pop
out
pop
lds
mov
xchg
fst
xor
test
ret
pop
mov
push
or
pop
pop
cmp
add
cld
dec
mov
cmp
loopne
mov
je
push
mov
push
pop
pop
and
adc
iret
out
inc
mov
je
xlat
movs
es
dec
add
mov
cmps
xlat
sbb
js
jmp
movzx
mov
mov
mov
mov
push
pushf
call
mov
dec
fs
hlt
mov
ret
sub
mov
mov
jecxz
mov
mov
loopne
arpl
pusha
dec
or
paddsb
mov
adc
out
fsubr
outs
loopne
and
dec
les
xchg
mov
add
nop
ja
push
imul
jae
cwde
rol
cmp
fsub
add
mov
cmps
aam
rol
mov
call
push
in
jbe
test
test
in
cwde
xor
cwde
call
inc
adc
and
out
jp
pop
lea
mov
or
mov
sub
inc
movs
jg
sahf
xor
sar
les
enter
clc
push
add
jne
rcl
push
mov
call
outs
add
cmp
jne
sub
je
loop
mov
test
clc
cmp
add
mov
adc
call
popf
int3
mov
xor
mov
sbb
or
cmp
cmc
or
and
int
popa
enter
push
mov
push
imul
ins
loope
inc
imul
and
and
int3
mov
(bad)
inc
fsub
callw
dec
movs
push
loopne
push
inc
fsub
push
mov
lods
xchg
stc
jp
(bad)
push
ret
in
cmp
adc
mov
loopne
ret
push
loop
aaa
and
test
lds
mov
mov
frstor
cmp
push
arpl
(bad)
shl
out
adc
adc
lods
dec
or
ret
xchg
jmp
push
push
in
pop
pop
add
dec
mov
popf
lea
jge
push
mov
or
pop
in
sbb
rol
pop
cmps
fsub
push
icebp
pop
cmp
mov
push
mov
xor
in
dec
movs
jmp
dec
fmul
cdq
add
jb
inc
sub
lock
push
cmp
jmp
push
mov
pusha
jo
add
ins
or
gs
push
dec
lods
xchg
add
jp
push
shl
enter
mov
fnsave
mov
or
mov
xor
inc
loop
lea
mov
mov
imul
unpcklps
fs
mov
fwait
add
mov
shl
mov
cmp
push
ja
mov
retf
stos
push
dec
or
mov
sub
mov
mov
dec
mov
fnsave
and
arpl
jae
fiadd
lods
add
push
ror
imul
push
sti
ins
sub
cs
daa
pop
mov
mov
and
mov
ja
xor
jae
mov
inc
cli
xor
fild
or
into
add
mov
and
add
cmps
add
ss
or
dec
fscale
sub
dec
cld
mov
xor
pusha
jb
les
xor
jecxz
cmp
icebp
adc
mov
or
lea
lea
sub
inc
mov
and
lock
jne
mov
aas
push
mov
ret
nop
(bad)
push
mov
pop
inc
dec
add
add
mov
adc
and
push
es
mov
je
fs
or
call
push
inc
addr16
push
rcl
push
je
sbb
mov
inc
push
push
mov
inc
sbb
add
gs
(bad)
jg
int3
adc
inc
push
jae
pop
gs
dec
imul
push
add
aas
xchg
mov
cmps
jae
pop
fisubr
ucomiss
test
push
cdq
and
add
push
xor
in
mov
or
cmp
cmp
or
dec
sbb
test
dec
sub
push
(bad)
sub
jo
mov
jo
inc
mov
inc
jno
add
push
and
nop
inc
iret
pop
inc
or
ret
xor
cs
outs
popa
jo
sub
imul
dec
outs
jae
or
push
ins
scas
or
(bad)
pop
push
pop
fs
sub
lods
sbb
pop
add
or
cmp
add
aas
mov
dec
lods
cmp
inc
adc
popa
arpl
lar
ds
icebp
or
call
adc
cmp
dec
mov
dec
inc
imul
cmp
and
outs
adc
mov
scas
jnp
push
outs
jne
xlat
fadd
mov
retf
cmp
data16
fld
and
mov
cmps
sbb
inc
(bad)
adc
mov
call
fs
push
pop
lds
push
js
sahf
push
adc
test
jl
movs
jmp
scas
sub
test
push
cmps
dec
cmps
jnp
int3
push
aaa
icebp
push
aaa
sub
mov
imul
or
cmp
cmp
mov
cmp
xor
cwde
sbb
fs
call
rol
inc
out
lea
fld
add
in
push
ins
cmp
sbb
mov
mov
add
or
je
aas
lock
rcr
xchg
fiadd
clc
jns
nop
jp
cmp
jne
jmp
loopne
iret
shl
scas
jge
push
adc
mov
into
push
jmp
mov
outs
das
add
lahf
fadd
jbe
cmp
fsubr
pop
jo
lahf
out
cs
push
mov
rol
push
cwde
enter
xlat
(bad)
mov
and
out
xor
or
push
adc
push
dec
or
pop
ins
mov
jne
je
ins
push
mov
and
fs
sub
daa
jne
rol
dec
inc
(bad)
pop
(bad)
xchg
adc
jnp
and
in
push
adc
cmp
inc
inc
test
inc
repnz
push
mov
inc
inc
jo
leave
sbb
adc
sub
mov
and
addr16
imul
dec
ins
mov
add
or
sub
stc
adc
lods
cmp
adc
pushf
mov
jns
leave
in
inc
sub
mov
bound
pop
inc
cld
sbb
inc
iret
mov
inc
aam
iret
add
mov
iret
add
mov
jle
add
mov
xor
js
inc
je
mov
jb
xor
push
out
imul
lds
cld
push
xor
push
bound
mov
push
dec
mov
mov
cmc
push
inc
cs
loope
jo
bound
dec
into
dec
cmovge
sbb
cmp
xchg
inc
xchg
push
pop
and
push
aaa
(bad)
push
popa
ins
test
push
imul
pop
mov
xor
gs
lahf
pop
jle
push
push
sub
push
pop
cmps
xchg
adc
inc
push
and
add
push
sbb
ins
cmc
cs
adc
popa
into
add
mov
in
add
retf
(bad)
mov
pop
and
and
je
sub
dec
sbb
inc
pop
ret
pop
adc
xchg
ins
cdq
and
or
bound
clc
mov
fwait
pushf
jae
fstp
ret
mov
sbb
div
cmp
in
adc
inc
js
push
ins
add
jbe
add
pushf
cmp
xor
popa
or
sbb
or
cmpps
xor
rsqrtps
xchg
es
out
xchg
inc
cmovae
std
inc
bound
push
fst
adc
mov
ja
mov
mov
push
mov
ds
inc
outs
repnz
push
dec
jo
(bad)
jno
stc
jo
jno
js
push
mov
fs
push
push
add
cmp
pop
loopne
pop
inc
xor
xchg
push
adc
mov
push
inc
mov
dec
rcr
ja
clc
add
je
or
and
hlt
adc
mov
nop
fist
cmp
lahf
aas
cmp
pop
cmp
xchg
dec
sbb
cmp
mov
pop
cmp
mov
push
inc
pop
pop
jae
dec
aaa
cld
inc
inc
push
shl
or
or
loop
loopne
ror
loop
jae
dec
add
and
test
inc
fdivr
push
inc
adc
cmp
inc
or
neg
inc
js
gs
xlat
pop
xor
sub
dec
add
add
outs
cwde
pop
js
pusha
stos
xor
adc
push
nop
sar
ins
xlat
pop
xor
sub
dec
add
sub
push
pop
xor
pusha
stos
xor
adc
cmp
js
cmp
xlat
pop
xor
rcl
add
ja
push
les
jmp
jnp
push
add
test
mov
mov
ja
ds
adc
push
je
push
addr16
add
or
jmp
dec
or
push
xor
add
jb
dec
rcr
sbb
dec
aaa
shl
push
dec
jno
mov
pop
add
add
mov
add
pop
test
sub
dec
(bad)
mov
jb
xchg
ud0
jmp
scas
mov
jae
jns
inc
jb
clc
and
add
push
mov
ror
hlt
das
or
sbb
push
int3
push
and
stos
mov
bound
mov
inc
mov
mov
lds
test
add
add
sbb
xchg
pop
push
adc
imul
add
jno
ja
or
dec
add
mov
ror
or
test
add
outs
js
cmp
test
mov
das
mov
mov
push
push
outs
pop
inc
mov
(bad)
dec
dec
xchg
sbb
inc
pop
movs
sub
pop
adc
xor
pop
sbb
add
pop
jno
nop
sub
pop
das
pop
sti
adc
shr
or
jle
jo
out
es
push
push
mov
fstp
push
add
mov
outs
ins
gs
xlat
loope
push
jp
adc
test
sbb
inc
and
out
add
and
test
add
add
mov
rdtsc
cmp
std
dec
cdq
dec
je
or
adc
mov
cwde
or
(bad)
lock
push
cmp
cld
push
dec
mov
push
sbb
or
xchg
push
add
jecxz
xchg
mov
gs
ret
jne
mov
mov
or
inc
out
lea
cmp
clc
push
out
pusha
add
xchg
out
out
imul
pxor
out
xor
jno
cdq
sub
mov
jo
sahf
ret
adc
(bad)
repz
push
out
shl
xor
dec
out
loope
sub
adc
adc
sbb
shr
xor
jmp
sbb
loop
inc
or
shl
pop
jecxz
ins
shl
jecxz
pop
and
jecxz
pop
pop
xor
cmp
inc
loope
aam
add
push
mov
xchg
ds
cli
cmps
xlat
sub
mov
ds
jbe
and
out
lods
push
xchg
in
xlat
loopne
cmp
enter
not
or
xchg
push
jg
gs
fld
xor
or
pop
dec
dec
inc
dec
popa
out
outs
arpl
gs
push
sbb
fsubr
hlt
cs
sub
push
add
inc
pop
fisttp
adc
xor
scas
rol
cmovbe
xor
inc
pop
je
ror
je
mov
dec
es
sbb
add
mov
push
cld
ucomiss
(bad)
or
bound
arpl
dec
inc
adc
mov
push
addr16
push
or
je
jo
inc
or
je
push
inc
sbb
and
je
push
jl
iret
daa
or
and
and
(bad)
pop
mov
sbb
loopne
inc
jo
and
sti
mov
sub
and
popa
arpl
and
inc
push
or
imul
mov
lods
dec
jo
mov
and
add
inc
sbb
lock
rcr
retf
nop
inc
pusha
lahf
stos
mov
adc
scas
or
push
pusha
sub
add
lods
mov
dec
lea
push
popa
fs
or
pop
xor
ins
cmp
leave
inc
in
dec
sbb
inc
outs
jno
sbb
fsubr
push
mov
leave
sbb
imul
mov
sbb
xchg
aam
push
jb
aas
add
add
loopne
pop
test
or
loop
pusha
xchg
es
cwde
imul
adc
mov
add
inc
pop
pusha
lods
mov
out
dec
push
mov
cmp
shl
mov
stc
or
inc
sbb
inc
mov
imul
lea
in
or
mov
stos
inc
or
popa
xor
call
sahf
popa
dec
out
xor
rol
popa
xor
and
ja
aam
popa
call
sub
dec
and
and
sar
and
xchg
and
mov
push
pop
sub
or
addr16
push
loope
pushf
rol
inc
sti
(bad)
rol
push
xchg
add
mov
mov
cmp
mov
inc
dec
dec
addr16
cmp
and
jnp
popf
mov
and
ins
fimul
inc
sbb
xchg
pop
cmp
call
mov
add
mov
push
pop
(bad)
inc
cmps
sub
fadd
or
push
mov
xor
push
cmp
push
rol
xor
jo
call
lea
mov
inc
dec
pop
mov
stc
lds
or
push
sub
es
inc
popa
test
pop
inc
cld
test
ss
mov
push
fadd
cmp
cmps
xchg
xor
mov
(bad)
in
xor
push
fnstcw
pop
jb
or
mov
dec
and
aam
outs
add
xor
dec
das
addr16
xor
mov
push
int
shl
fsubr
popf
jbe
jl
or
sub
push
outs
and
add
ja
fiadd
xlat
movs
cmps
fwait
or
hlt
in
fidivr
fadd
or
sbb
call
or
push
xchg
mov
scas
sub
int3
ret
imul
push
ins
push
mov
(bad)
arpl
mov
or
inc
cmovne
lods
clc
or
adc
mov
mov
stos
js
inc
and
scas
stos
daa
xchg
dec
clc
mov
push
stc
je
xchg
cmp
pop
jno
fs
and
pop
lods
(bad)
(bad)
push
and
or
in
cs
in
enter
mov
mov
ins
mov
adc
pop
hlt
rcl
loop
aaa
shr
dec
aaa
cmp
push
push
dec
in
or
popa
push
pushf
fnstcw
in
dec
xor
mov
add
cdq
shr
out
test
add
mov
aaa
sbb
xchg
push
popa
adc
aaa
sbb
mov
test
or
cmp
add
(bad)
fbstp
cmp
inc
(bad)
sub
inc
fild
mov
ss
or
sub
and
adc
push
xlat
and
loopne
stos
mov
push
mov
mov
mov
mov
inc
xchg
call
add
pop
ret
push
mov
push
push
push
push
mov
aas
cli
in
stc
mov
inc
xor
push
push
xor
lea
push
mov
mov
es
iret
mov
bound
jl
sbb
jg
dec
pop
pop
outs
jg
mov
cmp
push
mov
jmp
lock
pop
pop
pop
ret
mov
fistp
add
mov
mov
jb
sar
nop
xchg
add
scas
mov
jne
(bad)
jg
fst
mov
pusha
mov
cmp
je
lea
sub
(bad)
cmp
pop
pushf
sbb
mov
mov
fsub
add
std
rcr
jb
test
adc
sbb
jo
pop
mov
adc
aas
hlt
fld
add
fstp
fwait
add
mov
xlat
pop
ret
cmp
lock
cwde
clc
push
cld
or
outs
ss
add
mov
pop
shl
fdiv
cmc
jecxz
push
in
pop
scas
clc
mov
fistp
std
mov
(bad)
pop
popf
nop
dec
mov
jmp
dec
test
jle
fwait
(bad)
(bad)
xor
cwde
sbb
cli
push
cli
add
cmp
shl
(bad)
cmp
retf
cmp
jge
out
mov
iret
sub
xor
ss
or
ror
push
sbb
jbe
add
sbb
push
arpl
push
ss
xor
or
push
inc
xor
hlt
out
hlt
push
sbb
xor
and
mov
push
sbb
(bad)
jmp
sbb
jp
sub
mov
add
jne
or
pop
sub
(bad)
sbb
or
(bad)
nop
push
and
adc
xchg
inc
(bad)
dec
xchg
xchg
lods
add
das
mov
fadd
scas
fwait
test
rol
(bad)
adc
mov
add
or
mov
icebp
jbe
movzx
popf
jo
fiadd
xor
mov
popf
js
sbb
add
push
pop
pop
dec
dec
fnsave
cli
sbb
push
add
(bad)
sahf
or
js
jge
lods
adc
cmp
pop
adc
cmp
jge
mov
adc
jmp
push
xchg
add
add
pop
in
sub
out
pop
ja
sbb
xchg
f2xm1
adc
dec
cmc
add
push
mov
jg
push
not
in
and
sbb
jmp
push
pop
push
prefetch
repnz
push
push
and
fild
push
pop
mov
xor
lods
fidiv
adc
dec
sbb
sub
out
std
jns
sbb
sbb
(bad)
in
pop
jge
dec
shl
mov
call
loope
rcr
cmp
loope
mov
inc
dec
sub
pusha
fdivp
cmp
push
xor
xor
xor
push
or
adc
sbb
push
cmp
pusha
pop
iret
repz
dec
dec
adc
mov
push
adc
fldz
fcompp
fstsw
sahf
seta
icebp
pop
mov
pop
adc
sub
in
cwde
je
adc
xor
adc
and
mov
adc
jmp
xchg
xor
mov
int3
jo
ret
retf
jne
mov
sub
sub
call
leave
jl
add
in
xchg
vmread
mov
fcomp
push
add
jl
sbb
mov
jo
js
lods
dec
add
or
mov
lods
or
movs
sbb
ret
fbstp
rcr
ins
fcomp
pop
sar
jne
add
lea
mov
cmp
pop
fist
in
hlt
lock
sub
dec
adc
add
fsub
and
not
mov
pop
lods
mov
sub
rol
(bad)
mov
adc
cdq
xor
sub
push
(bad)
mov
stc
xor
xor
push
(bad)
enter
mov
clc
mov
int3
in
ins
or
xchg
jmp
adc
fsubp
xchg
lods
bound
or
mov
push
sub
mov
or
mov
mov
in
mov
push
jp
adc
add
push
push
push
outs
mov
adc
or
push
jp
scas
mul
cmp
inc
xor
bound
mov
push
add
mov
sub
popa
mov
shl
inc
add
test
dec
(bad)
push
mov
ja
dec
bound
push
push
test
fldenv
fwait
push
sbb
pop
es
out
push
xor
dec
lock
clc
adc
int3
add
cli
and
and
push
adc
push
bound
cmp
or
cwde
pusha
test
cmp
jle
pop
pop
(bad)
aaa
inc
fs
fisttp
call
pop
daa
call
jmp
or
adc
adc
test
sbb
pusha
add
cmp
jb
xor
add
cmp
sub
inc
ja
pop
mov
mov
cs
loopne
inc
jno
xchg
pop
or
push
sub
(bad)
pop
xchg
aaa
pop
repz
xchg
rcr
ja
adc
outs
lock
pop
add
inc
sbb
jge
add
or
or
cmp
cli
push
or
or
or
das
ret
xor
or
cmp
jae
rol
in
jge
lea
add
retf
call
jmp
inc
xchg
cmp
inc
rol
inc
fidivr
and
and
scas
cdq
sar
data16
and
dec
inc
xor
xchg
mov
add
test
sbb
cmp
call
xchg
ret
and
sub
clc
pop
mov
adc
nop
hlt
mov
into
loopne
xchg
dec
aad
rol
add
mov
and
je
xchg
sub
aaa
add
leave
pop
xor
fadd
fcomp
lods
or
add
inc
fs
inc
mov
mov
sbb
(bad)
cmp
or
test
push
imul
push
xor
loopne
lahf
fld1
fcomp
or
bound
pop
cmp
mov
push
fsubr
or
fwait
mov
ret
sub
mov
pop
sbb
rcr
stc
mov
in
xor
jae
adc
not
fwait
enter
xor
bound
(bad)
and
in
pop
cvtpi2ps
mov
lock
out
push
loopne
dec
mov
fmul
push
clc
dec
pop
test
jp
mov
xchg
or
cmps
ss
sti
cmp
sbb
pop
test
push
shl
cdq
adc
mov
add
dec
enter
sub
and
movsx
jg
cmp
adc
adc
data16
sub
inc
adc
inc
lock
sbb
cmp
pop
inc
adc
loope
lds
push
add
inc
pop
sahf
seto
xchg
cmp
push
push
inc
cs
into
cmc
mov
pop
aas
nop
cmp
out
inc
scas
neg
xor
mov
push
out
(bad)
fcomp
or
je
shr
xchg
movs
ins
(bad)
jmp
(bad)
stos
je
add
add
fdivr
add
push
or
cld
loopne
push
add
add
fs
add
jo
inc
or
sub
or
outs
in
hlt
mov
xor
jb
cmp
dec
or
lock
pusha
shl
lock
movs
cwde
inc
mov
in
jo
cmps
popf
ret
in
aaa
jmp
and
sbb
adc
mov
dec
inc
call
movs
int
rcl
test
mov
sub
inc
adc
sbb
dec
or
mov
lds
in
sub
out
out
dec
pop
fwait
jne
or
test
sbb
adc
push
xchg
and
je
jle
pop
sub
jge
jmp
xchg
out
add
push
jmp
xchg
daa
sub
jnp
fild
out
and
enter
mov
ud0
dec
sub
enter
mov
push
sbb
or
inc
bound
mov
rol
mov
pushf
outs
xor
dec
pop
ror
mov
cmp
jge
mov
(bad)
mov
cmp
dec
xor
sbb
xor
dec
cmps
stos
mov
mov
pop
mov
cmp
pop
jle
add
lea
(bad)
hlt
test
lea
data16
mov
shl
pop
jmp
adc
adc
mov
fsub
inc
pop
push
jne
push
pop
int3
or
pop
and
mov
pop
cmp
add
or
xchg
cmps
ror
ror
test
loope
jbe
adc
cmc
loope
fcomp
or
aam
ins
test
fadd
mov
loopne
sub
movs
shl
in
lock
pop
cmp
mov
aaa
pop
fcomp
jl
push
cs
pusha
push
arpl
add
fstp
add
mov
sub
push
arpl
add
and
add
outs
inc
add
dec
(bad)
ins
dec
adc
push
or
lock
sbb
and
cmp
push
(bad)
pop
or
adc
inc
sub
mov
mov
ret
add
adc
jmp
loope
ret
jmp
les
rol
outs
lock
xchg
jg
xor
adc
dec
fs
(bad)
js
or
cwde
in
jno
add
push
push
sub
adc
mov
cwde
pushf
pop
fmul
addr16
xor
orps
in
jns
cdq
add
ret
mov
add
add
mov
mov
add
sar
inc
or
(bad)
or
ret
push
pop
pusha
ins
inc
dec
inc
add
iret
test
jbe
rcl
push
sub
dec
bound
mov
sbb
(bad)
in
add
(bad)
push
push
xchg
mov
ja
lock
iret
pop
cmp
les
mov
xrelease
clc
pop
ja
adc
fwait
sub
data16
adc
or
jo
jge
and
or
mov
add
adc
jmp
mov
fiadd
or
mov
xchg
test
and
loopne
cmc
jle
ror
jecxz
jmp
mov
stos
(bad)
xchg
ds
push
jge
mov
sub
test
sbb
push
cmps
adc
movs
push
pop
inc
add
push
fimul
sbb
push
sbb
push
leave
fisub
loop
pop
mov
inc
movs
jbe
mov
mov
push
cmps
fbstp
imul
or
add
pushf
xor
mov
ret
cmps
mov
lahf
xchg
xchg
into
dec
push
push
push
cwde
push
mov
mov
pop
push
scas
adc
xor
mov
retf
data16
add
(bad)
jb
les
adc
cdq
les
or
sbb
ds
jb
mov
jmp
cwde
lahf
lea
lods
sti
pop
pusha
add
adc
jle
test
sbb
loopne
xor
ror
add
adc
movs
inc
sbb
add
or
out
scas
pop
adc
inc
jg
mov
push
jno
out
nop
push
test
adc
cmp
(bad)
adc
xchg
jl
inc
addr16
mov
mov
(bad)
push
jb
mov
adc
cmp
dec
(bad)
xchg
imul
pop
test
push
add
mov
mov
inc
sub
mov
push
adc
dec
xchg
test
add
enter
pusha
paddusw
xchg
jl
push
adc
jmp
and
fs
call
sub
aad
xchg
jnp
pop
pop
sub
and
loop
mov
pop
push
daa
dec
mov
ror
push
repz
inc
sub
cwde
sbb
addr16
movs
sbb
mov
test
mov
test
push
mov
test
add
cmps
mov
(bad)
mov
sub
std
call
fsub
xchg
sbb
xlat
cmp
shl
cmp
or
xor
outs
add
arpl
mov
sbb
push
lock
pusha
pop
arpl
imul
lock
adc
bound
push
inc
xchg
push
xor
pop
cmp
add
movs
adc
mov
cli
adc
dec
or
and
ficomp
jge
add
jo
rcr
test
xor
(bad)
ror
push
or
je
mov
xchg
lods
out
add
push
jmp
pop
enter
adc
inc
or
sbb
dec
pushf
sub
jecxz
outs
xor
push
(bad)
repz
(bad)
xlat
xor
mov
rcl
cmp
enter
ret
pushfw
cdq
dec
mov
xor
test
popa
and
lods
ds
pop
icebp
dec
setbe
jmp
mov
call
imul
lods
lahf
push
sub
inc
cmp
sbb
and
int3
add
and
sbb
fstp
mov
loopne
push
dec
mov
lahf
enter
jns
lahf
sub
pusha
popf
das
cmp
aas
jns
xor
pusha
sub
pusha
mov
and
enter
iret
jo
pusha
test
sbb
jg
mov
enter
push
jl
outs
arpl
add
cdq
sbb
mov
retf
mov
retf
cmps
lods
sbb
jno
xor
ficomp
out
stos
lahf
out
std
loopne
add
out
pop
cmp
fcomp
pop
inc
cmp
test
mov
mov
aaa
xor
sub
cmps
jmp
fadd
or
or
test
ja
and
push
jo
add
inc
cmp
mov
and
and
leave
mov
cs
mov
xor
and
fs
repnz
add
out
adc
inc
jb
or
das
movs
or
xor
or
das
mov
test
dec
mov
push
xor
inc
das
sbb
and
cmp
das
mov
call
ret
xor
or
or
aad
jnp
or
adc
sbb
aam
loope
(bad)
scas
adc
mov
popf
scas
xchg
xor
xchg
sub
lahf
(bad)
xor
pusha
xor
aaa
cmp
lahf
add
and
xchg
in
shl
fbld
iret
lahf
xlat
stos
sbb
popf
xchg
jle
(bad)
icebp
ins
mov
retf
imul
xchg
xchg
pop
jno
fadd
repnz
nop
push
ins
jno
inc
(bad)
sbb
loopne
loopne
pop
mov
jmp
xchg
jl
mov
push
shl
xlat
lahf
das
add
imul
adc
mov
dec
mov
sbb
loopne
xchg
and
mov
fs
cmp
adc
or
das
ret
int3
cmp
imul
and
pop
jae
scas
pop
add
inc
mov
call
test
dec
test
ret
xchg
sub
mov
pop
mov
sbb
cdq
nop
fs
mov
lods
inc
leave
cmp
push
std
lahf
pop
clflush
add
pop
sub
les
aas
sbb
cwde
xor
sub
ficom
popf
lahf
xchg
sbb
cmp
movs
enter
lahf
in
cwde
inc
push
test
cmp
mov
lahf
sbb
nop
sbb
mov
jl
push
test
sub
in
xor
lahf
enter
jge
test
ins
mov
popf
push
addr16
shl
mov
lahf
rcl
cmp
sub
pop
push
jae
aam
(bad)
lea
pushf
xchg
mov
lods
xchg
shl
loopne
add
pop
stc
fmul
es
or
(bad)
sub
push
sbb
into
out
out
add
js
mov
jne
sbb
inc
xor
adc
push
mov
add
push
dec
ins
or
(bad)
push
cmp
add
push
pop
out
cmp
fidiv
xchg
mov
in
dec
leave
add
jo
xchg
pop
das
jbe
adc
inc
nop
das
pop
das
enter
jge
das
call
push
xor
and
sub
adc
or
xor
das
cmps
or
and
add
xor
or
das
adc
fs
jo
add
bound
das
push
xor
nop
pop
and
cli
in
add
adc
dec
xchg
das
sbb
and
cmp
movs
pop
and
or
adc
comiss
mov
es
ficomp
add
das
aam
mov
inc
das
sahf
xor
jo
loopne
sbb
and
or
and
xchg
mov
out
cmp
inc
scas
inc
sub
adc
loopne
fwait
push
daa
inc
stos
icebp
ret
call
mov
sbb
loopne
icebp
(bad)
sbb
xor
popaw
sbb
lds
jo
aaa
push
or
inc
cmp
or
xchg
or
jmp
arpl
adc
inc
or
push
enter
jg
push
mov
fild
fstp
fwait
pop
xchg
xchg
hlt
push
mov
test
imul
cwde
test
xchg
xchg
fcom
push
mov
mov
adc
and
ss
add
sti
xor
pop
jge
rcr
clc
push
jnp
mov
inc
xchg
hlt
push
add
aam
lock
pop
push
add
fld
inc
push
jne
or
and
fistp
xor
mov
xchg
aam
cmp
jne
call
mov
fimul
in
push
ret
mov
dec
call
sbb
inc
hlt
clc
and
mov
arpl
es
pop
push
stc
mov
add
push
mov
lea
mov
dec
jb
je
fisub
adc
add
in
add
sub
push
pop
pop
sub
inc
pop
mov
cmp
dec
jg
cmp
xchg
mov
(bad)
std
leave
popa
fiadd
jo
ss
clc
cmp
jge
aam
xor
sub
loopne
pop
inc
xchg
lock
mov
mov
fisub
pop
ret
out
mov
jle
push
je
or
sbb
dec
push
in
in
mov
xchg
pop
out
clc
mov
push
test
adc
ror
push
add
inc
and
rcr
mov
xor
mov
push
mov
sete
mov
inc
loopne
mov
mov
in
sbb
lods
sub
or
clc
or
push
cmp
sub
inc
push
fadd
cmp
cmp
es
fcom
jle
inc
aam
popf
rcl
fld
or
pop
push
imul
push
idiv
out
int3
push
mov
mov
xor
jmp
xchg
adc
add
shl
sbb
add
jle
adc
sbb
sbb
mov
jne
push
(bad)
jnp
cmp
fistp
loopne
adc
(bad)
lea
and
push
cmp
mov
push
jg
mov
and
inc
and
dec
add
dec
stos
dec
cmp
lock
outs
nop
ret
add
inc
add
pop
cs
push
(bad)
fucom
mov
and
mov
cld
out
mov
or
daa
cmp
xchg
movs
push
(bad)
fisubr
or
or
nop
sbb
mov
sub
cmps
cmp
xchg
sbb
push
or
inc
lahf
and
lods
fsub
pop
pop
cli
jo
add
mov
xor
inc
cmp
or
mov
jmp
add
out
push
retf
rcl
ss
add
movs
nop
cwde
test
les
ror
into
std
push
push
ret
scas
fimul
xor
mov
out
movs
add
mov
pop
out
test
jne
sbb
sub
mov
sti
daa
ror
enter
mov
and
ret
(bad)
stos
xlat
mov
addr16
inc
arpl
jmp
dec
dec
adc
ret
int
and
scas
cdq
movzx
or
add
sbb
jle
lock
mov
push
sti
out
and
jl
or
push
hlt
mov
mov
jle
xor
inc
mov
arpl
cmp
retf
mov
add
pop
scas
inc
js
mov
aaa
lock
and
ret
outs
into
push
xchg
xor
out
not
fidivr
into
cmp
cmp
sbb
cmp
cmc
mov
call
cmp
lock
hlt
shl
xchg
push
jne
loope
daa
dec
xor
popf
push
in
push
rol
and
xor
iret
sti
call
loope
sbb
add
add
mov
jmp
and
fidiv
aas
or
data16
seta
xor
stos
and
fs
mov
adc
(bad)
int
push
add
or
push
mov
or
cmp
push
add
lea
loope
cmp
jl
xor
dec
xor
adc
xchg
cmova
pop
scas
sub
or
ja
fwait
and
bound
adc
sub
add
sub
add
add
mov
add
or
mov
jecxz
popa
pop
test
push
add
and
arpl
in
dec
in
sbb
mov
idiv
jae
add
xor
sub
mov
pop
loope
mov
adc
into
pop
mov
(bad)
adc
rcl
sbb
sub
ds
push
lock
sub
enter
cmp
xor
cmc
enter
pop
bound
pop
fisttp
mov
(bad)
pop
aas
(bad)
in
inc
xor
add
shl
les
js
xchg
or
aad
std
(bad)
adc
adc
push
cmp
ja
xor
jmp
aam
mov
sbb
rcr
pop
pop
jne
mov
and
push
mov
imul
rcl
data16
xor
xchg
xor
or
les
jb
fsubr
scas
sar
dec
test
jl
inc
(bad)
loopne
push
dec
(bad)
sbb
inc
add
dec
mov
add
xor
jmp
mov
call
loopne
inc
mov
cmps
sbb
sub
cmp
dec
or
jne
pop
adc
push
dec
jne
cmp
je
mov
and
adc
or
rcr
sbb
inc
shl
movs
adc
sbb
adc
inc
mov
pop
mov
loope
xor
mov
data16
fsubr
mov
cmp
lods
pusha
(bad)
pop
fsub
cmps
retf
js
dec
sbb
push
or
push
xor
mov
cmp
or
nop
cmp
test
imul
sbb
pusha
fst
mov
test
fist
mov
mov
scas
movs
loopne
sub
mov
mov
push
push
mov
nop
test
sub
sbb
arpl
nop
out
test
dec
sbb
test
xchg
pop
lea
push
or
mov
cdq
test
cmps
test
mov
sar
pop
jmp
sbb
ror
add
in
mov
sbb
jo
push
adc
test
sub
sub
xor
imul
stos
inc
shr
js
mov
and
xchg
and
out
mov
pop
dec
mov
test
jae
add
mov
sub
adc
rol
cli
add
adc
ror
vhsubps
mov
push
sbb
pop
or
sar
inc
adc
or
mov
mov
sub
rol
je
inc
hlt
fisubr
dec
cmp
js
inc
lock
mov
test
or
mov
imul
ret
leave
mov
pusha
ror
dec
cmovs
mov
cmps
(bad)
out
sbb
sub
add
or
jnp
icebp
mov
xor
inc
iret
dec
jne
dec
outs
xor
add
mov
aam
add
loopne
mov
sbb
movs
pop
into
xor
jg
ins
push
fmul
inc
adc
cmps
adc
or
adc
int
jle
sbb
std
push
js
push
add
push
xor
jg
(bad)
sub
test
lock
xchg
or
test
rcl
enter
call
nop
jae
fidiv
pushf
xchg
inc
dec
mov
push
jp
cmp
mov
movs
enter
loopne
mov
push
xor
and
cmp
nop
add
(bad)
sub
add
or
sub
add
imul
(bad)
aas
or
or
mov
outs
add
pop
push
or
mov
outs
ja
mov
mov
das
out
shl
popa
aaa
mov
outs
outs
sahf
aas
or
lahf
xor
pop
mov
dec
or
xchg
inc
lods
xor
cmp
dec
push
jns
lods
mov
arpl
xor
scas
xchg
bound
int3
in
mov
fiadd
bound
lods
ror
aaa
repz
xor
(bad)
movnti
jbe
sub
jbe
ror
int3
popa
pop
es
not
pusha
mov
sub
test
or
mov
daa
jo
(bad)
mov
rcr
push
dec
pushf
push
ins
and
sub
sbb
add
pop
mov
add
jecxz
xor
sbb
mov
add
mov
cmp
and
ds
push
fcomp
add
or
pop
das
xchg
push
outs
dec
repz
pushf
jge
mov
iret
repz
mov
fnsave
jge
loopne
push
jbe
hlt
dec
mov
out
loope
dec
or
push
bound
fisttp
jb
repnz
ficomp
ins
xchg
push
push
jns
gs
jb
outs
jae
popa
je
jb
add
push
inc
pmaxsw
jb
sbb
int
or
add
pop
int
push
gs
data16
add
inc
gs
jb
jns
imul
dec
jno
out
and
inc
popa
dec
mov
outs
popa
jo
outs
dec
test
jbe
adc
sti
fsubrp
adc
and
xchg
dec
outs
outs
jp
adc
mov
jno
ins
popa
ds
xor
mov
pop
mov
(bad)
in
push
dec
jae
jne
ins
loope
mov
jb
repnz
jg
dec
and
push
adc
loope
cmp
mov
or
imul
push
(bad)
int
add
(bad)
jmp
pusha
add
rcl
retf
scas
mov
out
loop
add
or
xchg
fnstsw
movs
add
aaa
mov
mov
dec
add
add
xchg
pusha
fwait
rcl
call
mov
jno
pop
out
mov
pop
cmp
outs
mov
out
add
int
in
pop
int3
psrld
jno
add
cmp
jnp
(bad)
ins
out
pop
push
inc
sbb
add
adc
inc
js
xor
loopne
mov
mov
add
lods
cmps
loopne
test
lods
xor
jne
cwde
je
pop
add
out
inc
xor
test
cwde
aam
jo
add
clc
dec
cwde
pop
jb
cmp
pushf
call
and
cmp
test
dec
cmp
and
std
rol
test
pusha
shl
jg
movzx
cmp
ja
sahf
push
test
std
loop
loope
xor
repnz
shl
fbld
mov
daa
pop
inc
es
xor
add
js
rcr
or
stc
sub
push
mov
inc
inc
dec
cld
add
cmp
jne
(bad)
mov
call
add
sbb
xor
outs
mov
push
xor
out
dec
add
inc
call
push
sub
adc
dec
aaa
cmp
(bad)
jae
mov
dec
aas
inc
sub
ret
dec
jge
push
fisubr
ret
dec
fcomp
or
retf
(bad)
adc
imul
pop
bound
push
xor
test
test
push
mov
pop
lods
pop
pop
jl
jmp
sub
mov
fdiv
add
add
jmp
std
or
add
sub
call
enter
jmp
leave
xor
xor
adc
lods
xor
test
ins
or
xchg
xlat
fsubr
jg
xor
add
mov
adc
int3
or
das
aad
adc
out
fxch
and
cdq
(bad)
adc
out
mov
dec
adc
adc
rol
in
outs
in
and
push
xchg
loop
xor
(bad)
cmpxchg
maxps
pop
adc
fiadd
retf
pop
pop
in
cld
pop
aad
mov
adc
inc
retf
mov
mov
es
mov
enter
fmul
xor
inc
aaa
cmp
out
inc
aaa
in
or
mov
shr
cmp
mov
ds
pusha
shr
sbb
cmp
cdq
push
sbb
push
bound
nop
push
pop
rol
inc
mov
inc
call
mov
inc
in
lea
adc
sbb
and
cmp
or
fcmovne
hlt
sub
shr
dec
leave
xchg
or
jb
mov
out
push
cmc
out
daa
cmp
std
dec
ret
sub
inc
sbb
add
and
push
cs
push
and
and
sar
dec
mov
jne
mov
xor
in
call
dec
or
or
or
scas
sbb
in
clc
mov
and
add
inc
es
fsub
into
aas
stc
inc
loopne
xchg
js
arpl
aas
inc
mov
xor
das
je
push
cmp
pop
(bad)
push
cmp
data16
jae
cs
jnp
das
fucomip
add
(bad)
pop
pop
add
sub
cmps
fisttp
or
pop
or
cwde
jne
jmp
mov
(bad)
int3
inc
mov
in
xlat
cld
sbb
adc
imul
cmc
mov
imul
inc
movs
cmp
push
push
xchg
inc
es
xor
adc
vpsubusw
mov
dec
or
das
retf
push
jmp
sahf
and
bound
adc
dec
or
loop
adc
or
mov
and
xchg
pop
sub
lds
aaa
pop
xor
adc
test
or
loopne
hlt
cmp
cmps
jmp
jmp
xchg
and
inc
and
shl
mov
mov
jbe
fmul
xchg
sbb
xchg
xor
inc
push
adc
push
cld
(bad)
jo
sahf
add
mov
jmp
dec
sub
ret
outs
cld
cmp
fld
cli
pop
ret
pop
movs
ror
cmps
dec
push
push
aas
bound
and
movs
inc
sub
hlt
dec
(bad)
or
aam
push
out
loop
add
mov
ret
inc
das
clc
jbe
mov
or
inc
push
add
lock
inc
pop
push
cs
test
mov
jmp
inc
pop
sti
leave
(bad)
xor
ins
or
pop
clc
fwait
and
add
sub
in
jb
and
adc
aad
push
icebp
mov
sbb
add
mov
ja
(bad)
xor
daa
push
pop
out
popa
and
or
sbb
test
les
retf
cmc
shl
rcr
cmc
nop
push
ja
xor
xor
dec
xchg
pop
or
sub
mov
mov
cmp
fcomp
pop
mov
mov
and
jg
cli
les
inc
fdiv
add
xchg
ins
movs
add
sub
inc
int
call
out
pop
out
ds
jnp
test
test
mov
lock
push
mov
aaa
addps
sbb
cli
ss
jo
xor
sti
jbe
mov
or
push
and
add
mov
pop
sbb
inc
pop
mov
pushf
rcr
mov
sub
cmp
pop
add
retf
loop
jns
inc
aaa
bound
fnstsw
mov
sub
(bad)
sbb
daa
inc
jne
std
cmps
(bad)
dec
ret
xor
adc
hlt
(bad)
rcl
arpl
popa
in
mov
inc
cmp
fistp
(bad)
les
or
ror
pop
xor
mov
mov
sti
cmp
daa
std
es
mov
mov
cmp
or
sbb
retf
das
dec
push
inc
xor
pop
xchg
add
je
je
inc
mov
pop
les
push
sbb
(bad)
fs
and
adc
call
mov
pop
mov
inc
mov
fs
lods
mov
rcl
fwait
cmp
pusha
push
pop
dec
js
imul
jo
xor
outs
xchg
loopne
mov
dec
adc
movs
icebp
fcomi
jp
fbstp
cmp
ds
add
mov
inc
das
(bad)
mov
sub
hlt
inc
or
sbb
pusha
mov
out
aaa
repnz
dec
mov
rcl
push
add
mov
pop
popa
repz
pop
(bad)
(bad)
sub
das
pop
fs
cdq
out
mov
adc
enter
adc
sbb
and
in
ds
or
mov
adc
xchg
cmp
mov
iret
cmp
xor
cmp
seto
mov
inc
xchg
int3
shl
gs
shl
test
push
stos
inc
push
test
ja
fnstenv
mov
sub
out
shl
cmp
jo
movs
jbe
shl
cmp
push
imul
inc
fst
jp
outs
inc
cmps
fisubr
fild
jo
push
lea
xor
repz
mov
push
jp
or
rcl
sub
out
inc
jmp
popa
dec
fwait
retf
and
inc
js
aaa
repnz
test
push
jl
sbb
int3
jmp
sub
mov
cwde
pushf
jmp
cwde
pop
scas
std
push
cdq
sub
sbb
jl
loop
or
in
mov
xchg
sub
test
and
(bad)
(bad)
pop
ret
mov
adc
sbb
ja
sub
cld
sub
sub
pushf
mov
mov
inc
add
add
sbb
aas
mov
mov
xchg
mov
mov
sub
gs
ror
pusha
lsl
mov
xor
mov
xor
cwde
shr
push
fistp
pop
test
mov
jae
sbb
mov
idiv
loopne
shr
xor
inc
add
add
sub
in
adc
push
mov
lods
stos
hlt
inc
cmp
repz
fcom
mov
or
fmul
je
mov
cld
add
loopne
int3
push
mov
mov
ja
pop
sti
sar
pusha
add
pop
ror
call
push
add
adc
push
dec
inc
push
inc
outs
ins
inc
outs
xor
jmp
gs
inc
jb
outs
jb
pop
xor
sub
adc
push
clc
imul
div
and
push
outs
dec
outs
ret
fstp
popa
jns
add
or
xchg
(bad)
xor
iret
cdq
test
ins
jmp
inc
xor
jle
and
std
push
jmp
pop
or
ins
add
xor
sub
add
jae
sbb
or
sbb
cs
sub
xchg
jns
xlat
jbe
sbb
push
pushw
movs
das
mov
fadd
pop
or
outs
pop
in
dec
(bad)
jnp
mov
inc
add
and
inc
dec
outs
fs
or
cmp
push
and
inc
inc
and
and
and
inc
dec
and
pop
lds
test
jecxz
test
gs
popa
arpl
es
call
in
cmp
rcr
sbb
sar
sysret
mov
mov
jecxz
clc
outs
push
outs
adc
mov
sti
in
xchg
push
xor
nop
jle
adc
mov
out
cmp
dec
add
mov
pop
and
add
lea
imul
add
hlt
inc
mov
aaa
jae
mov
addr16
fadd
cli
or
or
cwde
leave
ds
in
xor
cmp
pop
outs
cli
fwait
inc
dec
add
inc
ins
popa
jae
fs
gs
aam
outs
cmp
mov
add
add
sbb
jae
jne
jae
clc
ja
dec
mov
adc
push
fs
call
sbb
loop
adc
or
repz
pop
imul
jge
inc
sbb
dec
adc
mov
or
cmp
xchg
push
and
push
xor
jmp
xchg
and
(bad)
call
jnp
hlt
enter
loopne
mov
ret
or
xor
ret
adc
push
cs
push
movs
pop
gs
ja
iret
repz
test
push
jmp
shl
dec
not
cs
(bad)
push
aam
outs
push
cld
into
add
pop
inc
mov
jg
mov
mov
jge
add
and
jl
in
push
dec
aaa
push
mov
push
xor
test
sbb
test
mov
ss
add
lock
push
stos
mov
jl
push
sub
xor
adc
add
ins
fcomi
pop
adc
or
or
enter
adc
cmp
push
sahf
enter
out
loopne
je
lock
pop
push
sbb
sub
cmp
outs
pushf
pop
push
adc
inc
dec
inc
dec
push
jmp
xchg
mov
ss
cmp
(bad)
pop
or
fbld
jbe
stos
or
pushf
xor
dec
inc
daa
inc
out
ret
cmc
or
push
push
lods
cs
mov
setno
movs
add
push
outs
cmp
sbb
sub
jo
sbb
mov
ror
fdiv
push
mov
fabs
retf
mov
push
push
add
dec
out
call
add
add
mov
loopne
inc
mov
push
or
ss
add
jae
add
pop
cli
mul
rcr
push
inc
dec
ja
add
jo
adc
adc
ins
add
adc
pop
iret
jb
mov
push
ins
sbb
dec
xor
(bad)
into
push
outs
or
and
fldenv
sub
adc
sub
jae
inc
mov
and
data16
dec
outs
outs
sbb
in
dec
enter
adc
xchg
lea
pop
or
add
adc
pop
cmp
rcl
movs
inc
dec
gs
enter
mov
add
xor
pusha
or
and
push
ja
fwait
adc
popa
adc
push
or
and
jbe
or
lahf
pop
push
nop
loopne
cmp
in
push
add
inc
inc
jmp
push
test
and
int
cs
fstp
inc
inc
pop
jbe
int3
fnsave
pop
arpl
and
or
movhps
fild
data16
lods
or
push
mov
inc
adc
das
(bad)
in
push
bound
xchg
ret
sbb
push
push
pop
ss
fdiv
mov
adc
inc
arpl
es
jo
test
pusha
push
ins
sbb
sbb
int3
add
add
and
push
das
push
cmp
iret
repz
jg
cwde
cmps
loope
iret
repz
aam
mov
(bad)
(bad)
jecxz
xchg
pop
or
pop
pop
sub
cmps
nop
sub
mov
cmp
push
ja
ins
push
sub
push
jp
aam
add
add
pushf
add
cmp
adc
dec
push
xchg
mov
int
jns
push
sahf
push
push
pop
jo
sbb
add
fwait
and
enter
push
arpl
ds
scas
jbe
push
pop
scas
jnp
retf
mov
ror
add
or
push
inc
dec
mov
imul
push
scas
jo
imul
inc
les
ss
outs
inc
dec
fwait
js
arpl
mov
xor
ds
mov
je
test
push
pop
xchg
jmp
cli
pop
enter
nop
nop
mov
sbb
bndstx
out
push
loopne
test
push
nop
stos
push
add
imul
jmp
xor
loope
ss
sti
sub
sti
sub
push
sbb
in
or
mov
in
sbb
(bad)
js
or
add
pop
and
xchg
enter
jne
mov
adc
retf
data16
inc
adc
push
push
dec
jne
and
inc
sbb
adc
je
or
pop
dec
xor
add
add
or
dec
jl
shl
mov
jb
xchg
psubq
daa
sbb
adc
fldl2t
rcr
fst
or
xor
xchg
add
and
mov
mov
xor
fild
add
popa
int
add
mov
dec
pop
add
inc
popa
or
xchg
adc
popa
or
add
fld
sub
js
repnz
cdq
jecxz
push
jp
repnz
inc
sar
jbe
(bad)
call
mov
mov
adc
leave
push
push
pop
or
jne
jnp
shl
inc
ror
shl
mov
scas
jge
cmc
mov
stos
push
mov
pop
arpl
add
pop
pop
add
push
pop
add
push
add
lds
xchg
push
inc
(bad)
push
rol
pop
in
pusha
cmp
inc
shr
mov
mov
out
add
in
xor
stos
ret
bound
jno
sub
dec
les
add
pusha
int
(bad)
dec
pop
inc
cmp
sub
dec
add
or
add
push
daa
fwait
das
test
shl
push
fstp
jmp
sub
popa
and
movs
jmp
sub
xor
out
mov
call
sti
cmp
add
(bad)
xchg
push
pop
test
imul
push
test
ret
das
adc
icebp
mov
jo
pop
xor
push
mov
rdmsr
sti
push
sbb
push
add
adc
add
push
dec
arpl
fmul
sub
ss
and
lods
pusha
repnz
hlt
cmp
arpl
push
out
xchg
cld
dec
imul
ret
and
or
mov
(bad)
add
inc
jb
stos
ja
xor
push
and
jne
lods
inc
inc
xchg
inc
mov
(bad)
push
xchg
jo
call
xchg
inc
mov
dec
add
push
arpl
jae
inc
iret
call
adc
add
ror
dec
add
jns
add
and
neg
addr16
mov
or
jne
pusha
dec
fbld
push
add
add
push
clc
lock
hlt
sbb
pop
inc
mov
mov
add
xor
mov
mov
in
(bad)
push
add
adc
outs
sbb
call
mov
cmps
shl
loopne
mov
mov
pop
pop
pop
mov
(bad)
in
pop
ret
nop
out
push
add
mov
mov
mov
(bad)
mov
mov
popa
cmp
cmp
add
mov
add
out
push
loopne
add
xor
push
clc
mov
inc
inc
(bad)
sub
lea
ins
neg
or
movs
jle
xor
dec
lea
dec
inc
add
cmp
jbe
clc
xor
push
add
mov
imul
rol
or
xchg
jne
test
jne
inc
cmp
imul
adc
pop
or
cmp
sub
ins
adc
(bad)
fdiv
retf
add
add
jmp
mov
outs
in
mov
test
test
jne
xlat
or
daa
sub
mov
and
or
je
pusha
jne
cmp
xchg
repz
cmp
jbe
cmp
jne
or
xor
shr
(bad)
sar
jns
ror
pop
fcomp
jns
jmp
leave
mov
into
jo
sub
out
mov
or
or
loop
pop
pop
add
mov
and
adc
adc
sub
shl
call
ret
cmc
or
inc
push
mov
and
pop
retf
sbb
dec
cwde
sbb
cmp
jecxz
mov
pop
adc
fcom
mov
movs
pop
adc
lock
xor
lea
inc
push
out
jp
lea
adc
inc
aam
inc
rcr
int3
mov
add
pusha
add
jecxz
add
cmp
ja
fimul
sub
shr
add
add
in
add
jnp
mov
loop
cvtpi2ps
fadd
sbb
pop
push
sti
or
into
test
std
pusha
repnz
mov
adc
jo
pop
rcl
mov
mov
push
sub
ins
push
adc
sbb
rol
mov
mov
xor
add
or
(bad)
call
fadd
je
push
add
fidiv
test
jne
ds
sub
sbb
fmul
sub
mov
pusha
fcomp
add
push
leave
push
and
mov
mov
xchg
add
enter
cmp
sbb
pushf
scas
sbb
mov
rcl
sub
mov
or
sti
popf
xchg
sub
jo
push
stos
je
jl
push
ss
hlt
inc
aad
js
xlat
out
scas
jecxz
fsubrp
mov
call
inc
cmp
sbb
sahf
rol
fidiv
sbb
jnp
inc
sbb
pusha
enter
push
xchg
sub
hlt
sbb
push
ror
and
cwde
or
cmp
fcomp
sub
mov
mov
mov
pop
aam
cwde
mov
int
mov
ins
cmp
jle
dec
dec
test
mov
(bad)
ja
add
jge
pop
lock
outs
push
hlt
cmps
push
and
pop
sub
or
mov
add
adc
add
adc
dec
shl
cmp
xor
and
sar
setne
jb
push
pop
push
push
push
add
sub
cli
out
mov
sti
repnz
and
xlat
or
cmp
es
xchg
repz
adc
repnz
push
adc
bound
mov
mov
inc
jp
sbb
inc
xor
cli
and
test
jnp
leave
xor
int3
retf
jmp
aas
leave
mov
lea
test
inc
jo
retf
ret
mov
push
dec
cmp
push
inc
icebp
mov
xchg
mov
sbb
or
es
mov
fcom
dec
in
mov
mov
jmp
xchg
mov
add
cmp
jne
retf
xor
mov
test
loopne
fnstsw
lock
inc
pop
loop
add
cmps
sbb
(bad)
mov
mov
sbb
push
cwde
adc
pop
jl
adc
or
push
and
js
push
mov
popa
mov
jge
mov
xchg
das
les
push
dec
push
pop
xor
sub
call
fiadd
cld
adc
push
outs
or
mov
out
mov
fs
inc
jo
jmp
mov
test
add
add
(bad)
stc
jge
enter
add
and
or
das
jp
and
or
inc
push
add
std
xor
(bad)
jo
fs
and
mov
mov
push
adc
mov
cmp
mov
lea
jo
jle
dec
jo
mov
xchg
scas
scas
mov
push
jne
mov
inc
mov
jge
adc
dec
ds
cmp
je
pop
fisubr
in
sub
push
sub
int3
shl
add
fstp
(bad)
push
push
inc
xchg
pusha
fidivr
ret
fs
add
aam
ret
cmp
mov
call
jge
daa
ret
cmp
jne
test
je
jmp
test
pop
push
shl
jns
adc
mov
shl
(bad)
cmp
dec
jne
ret
inc
xor
push
jbe
int3
jecxz
mov
or
lds
pop
and
jo
or
icebp
mov
cmps
out
xlat
sbb
sub
dec
aad
aaa
popa
push
jae
jmp
push
call
sub
and
rol
cli
in
ds
(bad)
fsubr
inc
sub
repz
leave
pop
add
pop
inc
cmp
cmp
loopne
in
shr
mov
sub
add
ret
xchg
xor
enter
rcl
inc
push
sub
mov
fisubr
ss
(bad)
leave
(bad)
and
mov
push
dec
or
xor
push
jo
loope
inc
hlt
mov
jmp
in
inc
dec
loope
mov
pop
call
sbb
pop
and
cmp
mov
inc
pusha
inc
(bad)
(bad)
pop
xor
or
xchg
cld
movlps
rol
ret
leave
hlt
cld
in
punpckldq
lea
stos
inc
xchg
pop
test
inc
xor
or
outs
inc
xor
idiv
not
jo
fs
in
dec
aam
loopne
aam
movs
clc
jo
xchg
out
imul
adc
push
inc
mov
xchg
sbb
pop
arpl
ins
dec
push
sub
punpckldq
add
mov
push
sub
push
jne
push
cwde
sbb
dec
shr
push
cmp
adc
cwde
mov
je
adc
cmp
jne
cld
lods
inc
mov
mov
jecxz
loopne
inc
add
popa
fimul
cs
pop
imul
aam
lock
mov
leave
in
shr
or
or
mov
add
rcr
and
pop
iret
and
xchg
mov
loopne
mov
call
mov
mov
jg
push
cmps
neg
(bad)
fldcw
push
mov
sar
cmc
addr16
ins
jmp
add
addr16
mov
sub
movzx
xor
dec
in
add
pop
adc
lods
xor
int3
lods
stos
std
(bad)
ficomp
std
push
rcr
ds
and
xor
clc
and
fdivr
mov
retf
jo
repnz
sbb
push
in
leave
mov
(bad)
arpl
pop
popf
loope
sbb
ja
in
lds
aam
jp
add
and
sub
and
hlt
and
or
pusha
fadd
jmp
scas
imul
sbb
fcomp
inc
or
das
lods
es
xor
sbb
idiv
(bad)
sbb
xor
push
and
push
popf
pop
push
neg
jbe
ror
sub
sbb
movs
mov
pushf
pushf
or
retf
add
mov
les
(bad)
or
or
imul
inc
mov
jno
or
sub
mov
sub
unpckhps
aaa
out
push
mov
ret
or
jl
shr
into
cmp
fldcw
and
in
fcomp
and
inc
icebp
les
xor
jbe
dec
cmp
pop
mov
adc
push
les
not
mov
shr
adc
jmp
adc
das
jb
in
aam
add
mov
mov
outs
inc
clc
mov
das
retf
xor
or
cmp
push
sub
add
mov
dec
add
daa
inc
(bad)
pop
inc
inc
pop
lock
out
out
pop
pop
aas
xchg
call
cmps
jge
or
test
jl
test
mov
les
enter
mov
mov
rcr
jl
aam
xor
in
and
jge
je
(bad)
js
mov
and
add
sub
int3
arpl
out
sbb
jecxz
sbb
pop
aas
sbb
inc
mov
add
push
into
mov
loope
adc
mov
test
dec
add
cs
push
lods
and
or
push
jle
xor
(bad)
pop
hlt
jb
fiadd
outs
add
cwde
dec
adc
sub
and
cmp
call
sbb
push
xor
stos
sahf
aam
inc
xchg
mov
mov
push
add
sbb
movs
push
ss
lock
test
push
sbb
push
loopne
retf
or
pop
jg
add
outs
imul
push
stos
in
xor
out
mov
dec
sbb
int
ds
dec
jae
shl
jbe
mov
inc
jecxz
mov
out
push
add
mov
adc
sahf
sbb
lahf
retf
mov
and
jnp
xadd
fadd
outs
test
(bad)
inc
bound
jne
and
or
pop
ror
fistp
movs
das
xchg
add
pushf
lea
arpl
pop
mov
data16
cld
(bad)
cmp
into
mov
push
mov
je
(bad)
aam
test
ret
lock
mov
xchg
jp
js
lock
inc
adc
add
lods
jne
cmps
lods
sub
ret
jae
or
mov
inc
and
cmp
sub
cs
ja
mov
enter
test
cmp
in
sbb
(bad)
(bad)
jne
dec
xchg
popa
paddw
faddp
imul
ret
rdtsc
add
or
cmps
cmps
add
daa
push
push
add
mov
cs
xor
ror
out
ja
sub
add
add
adc
xor
mov
popa
sub
int3
in
or
sbb
mov
or
ss
sbb
or
cmp
xor
out
pop
cwde
xor
(bad)
pop
cmp
xchg
dec
(bad)
aad
out
sbb
xor
jae
rol
or
lock
and
jecxz
mul
rcr
or
mov
mov
add
jo
dec
add
add
lods
mov
cs
aam
pop
adc
out
dec
xchg
jl
hlt
xchg
dec
jo
mov
test
mov
pop
adc
mov
mov
and
lods
stos
add
test
lock
xchg
jl
retf
test
fsub
mov
cmp
mov
push
gs
js
test
cmp
std
sbb
sub
je
je
popa
add
repnz
jo
add
lea
ins
cmp
not
push
sub
and
sbb
nop
ins
in
hlt
mov
stc
lock
xor
cmp
mov
rcr
push
rcr
sbb
pop
call
xchg
pop
pop
loopne
xor
jae
jae
in
jge
push
xchg
xchg
sbb
sbb
pop
push
or
lahf
fild
lock
mov
and
imul
xchg
or
sbb
mov
xor
or
fdiv
fdiv
dec
or
or
push
push
das
jae
js
dec
jne
mov
sbb
outs
pop
xchg
sbb
jbe
scas
es
xchg
adc
sub
pusha
je
cmp
sub
xchg
clc
mov
in
loop
push
jnp
fadd
add
pusha
lock
imul
ret
out
pop
mov
mov
icebp
bound
in
jns
and
or
cmp
adc
cmp
loopne
cmp
adc
sub
mov
sub
xor
inc
mov
sub
adc
jne
loop
test
test
mov
cs
dec
add
sbb
adc
sar
loopne
cmp
dec
sbb
pop
or
ins
xor
add
add
adc
mov
adc
hlt
add
ds
out
out
inc
adc
push
xlat
test
aam
js
lock
and
adc
sbb
inc
or
adc
jl
dec
je
in
imul
mov
mov
ss
inc
jp
cld
ins
sbb
mov
cwde
stos
test
aam
inc
sbb
retf
in
jle
ret
imul
push
cwde
ror
mov
push
out
or
repz
rcl
pop
dec
pop
sbb
in
aam
add
lods
pop
pop
mov
cdq
pushf
arpl
sar
es
es
or
popf
sahf
clc
lahf
in
mov
jne
mov
jmp
jmp
test
sbb
mov
fdivr
clc
adc
js
xchg
xchg
mov
imul
cmps
test
ins
pop
add
xchg
and
mov
cmp
(bad)
in
aas
ret
pop
cmp
or
lea
div
enter
je
fwait
cs
rcl
movhps
adc
(bad)
cmp
daa
in
into
push
adc
fdiv
sub
shl
dec
sbb
dec
popa
int
push
xor
mov
mov
test
push
loopne
pop
scas
out
loopne
mov
jmp
xchg
call
call
sub
daa
mov
mov
mov
mov
mov
mov
(bad)
adc
sub
push
pushf
ds
lods
mul
push
jae
div
pop
xchg
jae
je
fidivr
sbb
test
cmp
ror
jmp
pop
arpl
pop
mov
jne
shr
sbb
xor
adc
adc
mov
ins
pop
sbb
popa
and
ss
and
inc
xor
xlat
xchg
mov
jmp
push
fcomp
mov
dec
das
popa
(bad)
pop
out
ss
and
inc
fimul
lea
jbe
ins
cli
jo
imul
outs
cmps
dec
es
xor
or
je
out
mov
inc
arpl
add
dec
movs
sti
sbb
mov
push
sbb
shl
bound
movups
mov
add
stc
fwait
adc
push
rcl
jo
mov
(bad)
in
fist
or
je
dec
call
push
ins
dec
sub
inc
push
movs
in
cmp
ret
sub
mov
fcmove
in
or
cmp
inc
loopne
test
sub
and
sbb
xchg
fmul
iret
les
cmp
js
mov
mov
add
jno
and
adc
jp
out
mov
pushf
ds
mov
in
jg
inc
adc
sub
or
push
enter
mov
add
add
inc
sbb
push
inc
inc
sub
xor
add
or
nop
and
mov
push
inc
and
test
nop
into
loop
ss
push
add
test
shl
cmps
or
cmp
fcomp
das
push
push
xchg
add
lea
mov
(bad)
sti
mov
adc
fcom
or
or
(bad)
jo
loopne
mov
arpl
pop
pushf
in
or
mov
push
rcl
adc
popf
fist
add
inc
sbb
(bad)
mov
sbb
les
or
test
pop
and
cmp
(bad)
adc
sub
fdiv
cmps
mov
rol
shr
pushf
mov
inc
lea
mov
fiadd
movs
inc
mov
pop
xor
add
test
loopne
adc
ins
mov
mov
push
rol
sub
paddusb
cmp
add
or
and
or
cdq
loopne
nop
xchg
pop
add
jle
mov
add
mov
mov
sbb
scas
pop
and
pop
mov
je
vpshlq
sub
imul
gs
cmp
fild
xlat
sbb
mov
add
lods
add
stos
pop
daa
jno
add
and
adc
jp
rol
add
aam
adc
retf
pop
push
or
mov
in
or
xchg
push
repz
mov
sbb
dec
sub
adc
fsub
push
lahf
aas
movs
inc
arpl
mov
add
repnz
push
mov
pop
ret
xchg
fsub
cld
retf
mov
adc
cmp
mov
xchg
and
push
cld
mov
mov
into
inc
sbb
je
mov
jmp
rol
rol
jo
push
or
lods
add
loopne
xor
cs
ss
add
mov
adc
push
push
add
xor
sbb
lahf
cld
mov
and
push
ja
jecxz
lods
jecxz
push
sub
ret
dec
and
pop
popa
sub
iret
cmp
pop
popf
rcl
ror
dec
sub
add
mov
sub
xor
mov
mov
or
loope
pop
add
adc
and
je
push
mov
jns
mov
mov
xor
ret
stc
xor
push
sub
or
push
fwait
stos
mov
popf
dec
mov
in
fmul
push
add
push
push
pusha
and
xchg
sub
pop
mov
push
sbb
push
pop
movs
sbb
fs
push
push
popf
loope
outs
popf
push
cmp
test
pop
cmps
jbe
ror
mov
ins
lock
sbb
cs
les
out
add
sbb
or
sbb
ins
xor
adc
pop
sub
ins
in
data16
mov
outs
jae
mov
or
jo
loopne
loopne
push
pusha
mov
fsub
xchg
add
and
out
or
imul
push
pop
jb
movsx
push
fsubr
mov
fld
pop
or
add
add
fdiv
push
pop
test
ins
cli
xor
sti
mov
jp
xlat
add
mov
lock
enter
adc
or
dec
mov
cmc
add
mov
adc
sub
add
xchg
jae
adc
add
test
push
xor
or
sub
neg
add
gs
cmps
popf
add
lods
push
inc
mov
pop
lea
das
adc
or
pop
adc
test
push
sub
mov
lds
out
mov
test
aad
inc
dec
mov
stc
push
pop
(bad)
push
or
daa
or
ss
xor
lea
(bad)
icebp
dec
mov
jns
mov
sub
je
call
push
jmp
mov
xchg
inc
movs
cmp
mov
sub
repz
imul
sbb
cmc
sbb
data16
loop
out
mov
or
cli
push
jb
or
add
add
or
add
cld
xlat
add
push
add
inc
add
(bad)
pusha
fcomip
inc
add
push
aas
out
repz
mov
lods
outs
mov
sub
fiadd
add
lahf
adc
ja
stos
push
push
or
dec
lods
mov
daa
outs
jno
cmp
scas
outs
jno
jno
jmp
into
sbb
add
movs
jne
sub
add
add
xor
mov
add
inc
sub
push
mov
inc
sub
cwde
or
sub
mov
loopne
or
imul
enter
sub
sub
xchg
and
scas
jle
sbb
sbb
imul
jecxz
call
and
xchg
loop
call
(bad)
loopne
pop
dec
jl
inc
mov
fstp
daa
lods
loopne
mov
inc
dec
jne
scas
pusha
inc
inc
add
sub
push
fsubr
mov
(bad)
or
mov
stos
adc
xchg
icebp
push
xchg
pop
cmp
fdiv
mov
or
add
dec
mov
or
mov
push
cmp
pop
aas
outs
push
dec
sbb
imul
fdiv
dec
push
jns
inc
loopne
xchg
push
sub
jo
push
mov
xchg
aaa
sub
sub
mov
cmp
mov
xchg
jne
pop
int3
mov
aaa
push
ret
sub
pop
bound
push
adc
xchg
and
sbb
mov
aas
adc
xor
cmp
push
clc
loop
mov
adc
add
inc
adc
mov
(bad)
jo
imul
jle
mov
lea
inc
(bad)
test
(bad)
out
lock
mov
cmp
sub
dec
ds
xor
dec
bnd
and
je
loope
sub
add
add
or
or
je
add
mov
ret
mov
dec
inc
mov
pop
inc
dec
pop
jno
and
loope
test
gs
or
clc
or
fsub
adc
sub
jns
or
mov
mov
adc
xor
test
mov
retf
or
test
jp
outs
je
push
or
adc
mov
add
add
push
retf
jmp
add
add
fcomp
push
aam
les
lock
or
hlt
push
add
loopne
nop
arpl
mov
enter
xchg
in
mov
mov
repnz
xor
pop
push
add
test
test
push
inc
ret
rcl
push
xlat
sbb
ret
sbb
adc
push
sbb
ds
nop
or
ins
inc
sub
push
xchg
mov
jg
jg
inc
pop
adc
ja
cmp
inc
aad
mov
mov
fld
lods
add
sbb
cmps
ins
or
adc
dec
and
xchg
mov
lock
hlt
pop
es
test
or
cmp
daa
mov
pop
cld
and
test
shr
jl
sbb
pop
aam
ficom
push
test
inc
not
adc
movs
ror
fst
sbb
inc
hlt
hlt
clc
jmp
shl
sub
jne
imul
mov
aas
and
add
test
or
cmp
mov
mov
push
inc
pop
retf
mov
push
push
(bad)
loopne
push
div
not
lods
cmp
push
js
mov
sub
jo
sub
inc
(bad)
pusha
and
dec
sbb
and
lock
inc
daa
daa
(bad)
push
mov
in
lahf
les
inc
or
sbb
jle
or
lahf
rol
or
in
sbb
mov
mov
loopne
push
push
shl
or
popf
xor
fs
call
add
push
lock
mov
sbb
mov
pop
cmc
or
ins
pop
add
test
call
xchg
cwde
inc
pop
cmp
sub
or
xor
and
mov
push
jmp
jo
shl
sbb
mov
ds
push
inc
dec
popf
or
xor
sbb
clc
icebp
loope
sbb
push
test
jo
in
cwde
outs
icebp
and
push
lds
test
call
xchg
mov
scas
ins
and
loope
jle
sbb
movs
std
dec
test
jl
inc
clc
loopne
pop
cwde
popa
inc
xchg
nop
sbb
xchg
dec
fwait
pusha
add
ins
xor
inc
sub
leave
and
mov
push
mov
or
movhps
outs
adc
dec
jne
or
mov
inc
in
jne
arpl
add
or
and
add
xor
xor
imul
adc
jno
adc
push
mov
pop
cmp
add
fadd
sbb
add
(bad)
jb
jae
add
add
and
xchg
out
or
add
cmp
das
ja
out
test
add
add
ror
and
or
sub
or
cmp
add
movzx
cmp
je
or
add
or
fcmovb
nop
dec
and
lock
push
mov
adc
add
(bad)
sbb
clc
hlt
or
jle
mov
lds
add
in
or
jmp
xor
sub
mov
pusha
inc
dec
enter
pop
inc
xor
int3
mov
ins
push
sbb
sub
cmp
sub
add
cmp
adc
push
sbb
cmp
jne
in
and
cmp
je
cli
pop
shl
lods
scas
push
sub
xor
js
push
iret
cmp
xor
adc
aad
add
push
push
dec
imul
clc
push
jle
into
mov
sbb
jg
je
pop
jmp
lods
add
cs
pop
outs
jp
ss
adc
and
xor
imul
adc
jno
sbb
push
dec
mov
dec
jmp
xlat
sti
and
jge
arpl
adc
add
push
pop
adc
and
xlat
cwde
movs
pop
xor
(bad)
dec
mov
inc
add
into
test
fldenv
sahf
lock
je
pusha
add
into
ds
or
sub
push
sub
retf
jmp
loopne
xchg
dec
add
xor
scas
add
pushf
push
loopne
add
pop
movs
sub
pop
sbb
sbb
rcr
clc
push
push
mov
inc
push
or
js
dec
nop
mov
in
dec
jne
sbb
adc
test
sub
call
clc
aaa
dec
or
mov
push
jmp
add
je
sub
(bad)
mov
dec
sbb
adc
call
pop
sub
ins
fwait
dec
je
inc
cmp
jl
pop
or
cmp
aaa
or
cdq
or
(bad)
and
mov
jmp
or
xor
and
dec
popf
mov
cmp
fsubr
in
je
mov
lods
adc
lds
add
ss
jae
iret
mov
mov
mov
ss
push
adc
repnz
div
add
adc
jp
pop
adc
test
jb
sbb
mov
aaa
push
rcr
or
mov
xchg
pop
or
std
adc
adc
dec
mov
sbb
inc
scas
int3
adc
inc
inc
cmp
cmp
cmc
fdivrp
das
jmp
pop
lods
js
jecxz
jnp
sub
add
sbb
dec
movs
jb
fisubr
sbb
sar
push
push
push
sbb
sbb
sar
and
push
outs
(bad)
adc
cmp
setb
pop
movlps
shl
test
(bad)
push
push
mov
mov
es
mov
mov
shl
inc
add
movs
mov
lods
push
hlt
pop
mov
call
mov
fwait
inc
mov
enter
loopne
sbb
and
jo
sub
xor
test
gs
cwde
cmp
ror
dec
cmp
xor
inc
ror
rol
inc
pop
daa
jbe
cs
je
pushf
mov
mov
cli
ret
pushf
hlt
mov
push
imul
int3
mov
add
in
repnz
pusha
jp
lea
mov
jbe
sub
lea
rcr
jmp
xchg
and
xchg
or
fnstenv
jne
adc
fsubr
or
cwde
or
lods
adc
and
push
or
nop
in
(bad)
nop
or
xchg
in
adc
fstp
mov
sbb
add
sub
dec
add
mov
or
outs
or
mov
pop
adc
inc
(bad)
aas
es
push
leave
mov
mov
test
outs
or
lahf
sar
pop
movs
adc
mov
dec
push
sbb
sub
mov
or
fs
mov
xor
retf
arpl
(bad)
out
(bad)
into
inc
iret
sbb
test
out
cmp
xchg
xchg
js
sbb
xchg
adc
or
push
shr
push
cwde
jne
(bad)
dec
mov
(bad)
push
fsub
pushf
add
(bad)
cmp
int3
pop
call
dec
mov
fsub
stos
push
addr16
jo
xchg
push
movs
lahf
adc
cmp
pusha
and
in
pop
jnp
dec
add
gs
clc
ret
jl
(bad)
clc
add
jo
cmp
push
mov
and
(bad)
jecxz
xchg
add
daa
mov
loopne
mov
push
aam
or
mov
out
xor
mov
xor
mov
stos
mov
das
test
inc
lock
pop
xor
sbb
sbb
sbb
mov
xor
and
pop
push
aas
push
loop
imul
gs
test
dec
inc
pushf
sbb
pop
mov
dec
dec
sub
mov
sbb
dec
out
mov
std
xchg
fsubp
in
sbb
fadd
leave
retf
xor
push
sbb
iret
add
push
and
daa
and
sbb
jle
popa
add
(bad)
popf
retf
jae
pop
or
stos
dec
pop
cdq
cmp
mov
sub
push
push
dec
(bad)
popf
and
imul
aaa
pusha
and
and
shr
movs
stos
hlt
(bad)
rol
data16
adc
dec
ret
and
add
bound
les
and
das
inc
mov
es
repz
pusha
push
xor
xlat
push
sub
loop
js
das
dec
pop
pusha
push
mov
push
sub
add
stos
inc
mov
or
int3
test
and
or
neg
ja
inc
rcl
adc
aaa
stos
lods
mov
adc
(bad)
clc
jnp
mov
mov
xor
sbb
repnz
jg
adc
sub
mov
mov
inc
xchg
movs
clc
movs
xchg
outs
jbe
add
loop
or
loopne
add
jno
add
sub
je
stc
adc
add
out
push
lea
cmp
ja
mov
or
fidiv
jae
loope
pop
aam
ret
inc
call
or
sar
add
mov
cld
fimul
cs
and
sub
jg
inc
daa
loopne
daa
enter
adc
fmul
sbb
mov
mov
adc
fwait
dec
jne
pop
dec
aas
or
add
call
mov
lock
mov
je
pusha
jp
pop
adc
or
aad
xor
arpl
outs
xchg
xchg
rol
or
mov
mov
dec
fwait
data16
adc
pushf
sub
cmp
xchg
inc
xchg
mov
and
call
mov
xchg
cmp
add
ficomp
xchg
and
loop
sar
adc
leave
ss
add
cmp
dec
mov
popa
mov
push
loopne
xchg
push
hlt
jg
test
adc
loope
out
cmp
sbb
(bad)
xor
outs
cdq
loopne
mov
daa
push
add
aaa
mov
je
popf
sub
out
and
sar
xor
xor
js
mov
(bad)
imul
lods
fld
fisubr
adc
int
outs
fs
mov
dec
jne
or
cs
dec
inc
mov
sbb
sub
adc
sub
pop
and
dec
or
sbb
(bad)
in
pop
imul
and
jae
cld
mov
lock
loope
dec
test
or
xor
cli
push
inc
adc
adc
cmp
and
or
je
or
push
sbb
jne
mov
fs
push
sbb
fld
loopne
dec
and
ja
jo
fucomi
add
xchg
in
xor
sbb
sub
shr
imul
sbb
repnz
push
test
aaa
pop
jnp
stc
je
inc
and
sbb
dec
jnp
lds
fdivr
and
outs
and
fnstcw
jge
sbb
xor
cld
or
std
sbb
and
loopne
fs
pop
xchg
add
lock
outs
or
sbb
push
dec
adc
mov
leave
push
sbb
loope
(bad)
jmp
adc
stos
push
das
push
retf
inc
inc
mov
push
mov
dec
pusha
inc
popf
mov
js
mov
imul
dec
add
sbb
mov
sbb
mov
daa
push
push
sub
jno
and
sbb
sub
mov
sbb
adc
div
popa
mov
imul
push
popa
mov
rol
loope
(bad)
mov
loope
mov
adc
jne
icebp
dec
mov
test
pop
inc
(bad)
or
inc
jbe
ins
pop
jo
test
mov
scas
dec
xor
pop
add
jns
test
and
cmp
movs
pop
das
outs
push
push
add
mov
mov
mov
data16
cwde
mov
(bad)
mov
inc
push
push
dec
aam
xchg
mov
pop
jnp
fistp
jae
xor
and
xor
test
add
fisub
outs
xchg
cwde
inc
fnstenv
ret
push
cwde
scas
js
add
mov
loope
jg
mov
sbb
or
cmps
outs
(bad)
stc
icebp
jae
jp
shr
push
(bad)
loopne
cmp
and
xchg
mov
or
sbb
movs
or
dec
test
je
shr
fld
mov
mov
loopne
shl
out
jne
mov
xor
sbb
xlat
fdivr
adc
loopne
ret
mov
push
add
push
nop
xor
in
or
ins
xchg
test
hlt
cmp
xchg
lea
sub
jg
add
(bad)
pop
sbb
sbb
dec
cdq
mov
push
das
xchg
sti
sti
lods
cmp
iret
int3
sar
push
ja
add
xor
or
(bad)
jg
adc
test
add
das
mov
ja
xor
and
jp
je
pop
loop
or
test
sar
mov
push
inc
mov
rcl
ret
lea
xor
pop
call
aas
lahf
push
pusha
stc
cdq
dec
call
cld
int3
cmp
or
je
clc
and
mov
add
loop
push
inc
pop
pop
push
pop
aam
je
mov
add
mov
or
adc
arpl
or
loope
out
mov
cmp
lea
push
xchg
movs
pop
mov
mov
mov
retf
sbb
loopne
mov
cdq
(bad)
movzx
mov
add
pop
add
retf
push
xchg
and
and
jmp
dec
adc
mov
push
mov
inc
cmps
sub
aas
pop
neg
mov
and
or
inc
push
sbb
push
mov
add
into
add
nop
not
lock
push
cmps
movs
push
push
add
out
push
lock
pop
stc
nop
sbb
mov
sub
add
call
icebp
hlt
inc
xor
add
jge
(bad)
xor
fdivr
push
jne
sub
je
push
add
popa
hlt
pop
sub
loop
jmp
div
jg
jle
adc
dec
sub
js
sbb
inc
sub
jmp
push
and
adc
imul
sub
das
les
inc
sbb
in
sub
test
sub
mov
cmp
bound
imul
movs
das
inc
push
push
xchg
out
adc
xor
or
mov
and
cmp
and
sbb
das
push
rcr
push
cmp
mov
fmul
add
repnz
sub
or
sub
xor
ret
adc
mov
xor
pop
mov
popf
xor
add
rol
push
push
pop
test
mov
mov
in
sbb
mov
pop
push
add
inc
mov
or
test
xor
xchg
js
sub
mov
loope
dec
(bad)
aaa
mov
imul
mov
xchg
enter
add
mov
jae
ja
xlat
cmp
mov
cs
cmp
cmps
sbb
sti
fimul
mov
add
adc
pop
or
xchg
cmp
in
cmps
aaa
or
jb
ficomp
push
pusha
data16
pop
movs
call
push
mov
mov
jo
dec
sbb
aad
sub
cmp
leave
call
inc
fadd
aad
push
jo
bt
jg
das
fs
inc
dec
jne
mov
pop
pop
(bad)
mov
push
mov
sub
mov
lea
movs
inc
or
jo
adc
iret
mov
push
adc
(bad)
fs
push
add
rol
jge
mov
aaa
lock
arpl
mov
add
rol
push
push
mov
xor
inc
lods
das
push
mov
cmp
adc
je
icebp
jg
jg
push
mov
shl
sbb
and
sub
rcl
retf
shl
out
cmp
jne
mov
jb
in
fist
add
add
adc
add
or
sbb
push
fsub
bnd
add
sbb
mov
mov
xor
int3
add
rol
out
mov
push
in
add
ret
cs
outs
in
push
pop
or
sbb
push
mov
add
sbb
dec
pusha
jo
jbe
js
pop
imul
xor
nop
sub
das
and
fimul
xchg
sbb
dec
div
test
setne
lea
das
(bad)
mov
ret
cli
neg
mov
loopne
or
in
jg
jbe
push
cmp
push
aad
adc
pop
les
les
or
mov
xchg
jmp
cmp
jne
loope
add
fidiv
dec
or
test
cld
or
pop
mov
add
dec
pop
adc
add
lods
repnz
xlat
push
push
cmp
add
in
mov
(bad)
fadd
push
fwait
and
hlt
push
hlt
fmul
sti
inc
mov
jmp
inc
lock
iret
scas
test
mov
add
loopne
mov
inc
pop
fidivr
pop
in
outs
sbb
movs
sub
lods
mov
mov
sahf
push
mov
sub
mov
outs
(bad)
icebp
inc
clc
js
mov
dec
push
jns
mov
mov
fwait
mov
jge
les
or
jle
fcmovb
push
(bad)
jp
xor
jle
mov
add
push
sbb
sub
dec
test
test
or
fs
les
mov
jmp
jns
aam
leave
(bad)
pusha
mov
bound
jne
sub
add
ficom
mov
test
adc
inc
pushf
js
int3
out
outs
push
or
cmp
jmp
ss
fadd
mov
lock
add
jo
fstp
js
inc
mov
sbb
fwait
loop
fcomp
jo
ror
adc
dec
test
xchg
mov
mov
push
push
mov
push
add
adc
adc
jo
test
xor
jbe
mov
ret
sbb
cmp
nop
inc
cmps
fisub
pop
jl
aam
push
sub
test
ds
rcl
add
neg
fnsave
mov
and
push
sub
aam
(bad)
sar
cmp
jge
inc
je
mov
mov
sub
inc
arpl
dec
sbb
por
cmp
sub
mov
sub
and
test
test
(bad)
and
mov
call
call
shl
xchg
fnstcw
imul
push
lock
test
cwde
jbe
or
leave
mov
or
popa
in
mov
xor
out
xchg
fistp
test
adc
xor
outs
adc
jnp
jo
adc
add
pusha
nop
push
push
xchg
pop
xchg
add
inc
push
push
cdq
sbb
inc
and
sbb
adc
inc
push
or
sbb
pop
xor
sahf
mov
cmc
pop
dec
pop
pop
xor
cdq
inc
outs
loopne
mov
mov
sub
push
gs
xor
pop
adc
xlat
xchg
and
sbb
dec
ja
js
daa
das
div
mov
push
xor
push
sub
pushf
data16
and
or
sub
sub
and
or
jns
daa
out
mov
add
das
mov
out
adc
out
inc
es
sub
push
(bad)
mov
pop
add
retf
sahf
jp
sbb
push
push
adc
cmp
or
jl
mov
mov
fcom
leave
test
hlt
mov
movs
scas
xchg
adc
mov
adc
call
cmovo
idiv
xor
inc
dec
jne
push
or
push
cwde
sar
adc
retf
test
mov
dec
push
hlt
dec
mov
lds
and
lock
ja
not
fbstp
cwde
lods
xlat
fld
xor
dec
(bad)
jg
adc
cmp
inc
push
inc
outs
ins
inc
sub
cmp
pop
mov
jmp
add
outs
push
out
(bad)
popa
jo
dec
push
push
outs
dec
xor
fist
and
and
das
test
je
dec
scas
je
sub
test
ins
cmps
enter
arpl
fcom
in
jno
aas
xor
idiv
mov
lods
cli
cwde
js
mov
and
and
fidiv
out
add
fbstp
xchg
push
add
add
sub
inc
add
ds
and
loopne
test
mov
test
iret
test
mov
dec
ins
loopne
lock
mov
mov
push
push
pusha
fsub
cmps
and
test
mov
add
push
adc
or
mov
add
push
shl
mov
dec
pop
inc
mov
adc
push
mov
cmp
outs
sbb
or
data16
sbb
add
ja
(bad)
and
loopne
rcr
add
arpl
cmps
in
jge
push
bound
rcl
test
dec
retf
pop
dec
or
sub
outs
jp
rol
out
push
(bad)
adc
aaa
mov
fadd
bound
adc
scas
inc
call
out
movs
sub
mov
inc
nop
(bad)
mov
dec
das
lods
inc
jle
dec
stos
add
mov
inc
push
std
jbe
jne
or
mov
bsf
push
data16
mov
mov
sar
ins
jno
popa
sbb
push
daa
mov
repz
rol
and
pop
cmps
mov
leavew
jmp
jl
inc
inc
int
mov
cwde
inc
call
lods
loop
dec
cdq
or
push
pop
cmp
rcl
call
push
iret
fdiv
fisubr
loopne
add
test
push
sbb
jle
ja
js
sbb
outs
xor
je
in
out
xor
push
fnsave
mov
outs
push
nop
push
cs
cmp
mov
mov
add
mov
or
out
and
jne
cmp
push
inc
push
jle
fs
nop
mov
imul
pop
repz
mov
inc
mov
call
clc
push
push
cmp
jle
dec
cmp
jl
out
ds
cmp
jle
sub
push
push
jno
and
(bad)
fistp
aad
fs
in
cli
repnz
fcomp
stos
in
lds
out
aad
pop
movs
popf
loopne
(bad)
jne
add
fld
and
pop
and
inc
add
xchg
or
fisttp
fild
sub
out
or
fistp
pop
imul
add
xor
jnp
ja
inc
sti
lock
pop
mov
mov
jle
inc
retf
div
je
jne
mov
out
jb
int
sub
xlat
mov
sub
xor
sub
shl
imul
jg
sbb
out
inc
add
js
fmul
pop
fdivr
or
mov
inc
ret
push
aam
sti
inc
adc
or
or
inc
inc
adc
sbb
push
dec
dec
inc
dec
dec
cmp
ror
into
fsub
mov
call
push
sbb
or
sbb
sub
shl
test
leave
call
jle
retf
push
mov
pop
xchg
mov
push
jle
mov
push
cmp
mov
mov
inc
loopne
gs
sbb
push
retf
push
cmps
mov
stos
fs
add
mov
fistp
xchg
sub
sbb
push
mov
ins
jmp
push
push
add
add
daa
pop
shl
sbb
ficom
jge
movs
jmp
dec
sbb
and
push
mov
pop
or
jmp
cmp
mov
test
push
(bad)
shr
sbb
outs
and
add
dec
inc
sbb
push
adc
popa
(bad)
and
mov
lock
push
lods
test
lock
sbb
aam
and
cmps
mov
sub
int3
cmp
mov
ret
icebp
mov
and
jge
dec
loopne
adc
mov
loopne
inc
xchg
push
imul
dec
movs
push
pop
xor
sbb
sub
inc
push
fcmovb
call
pop
or
cwde
push
add
jo
mov
mov
les
inc
inc
pop
int3
mov
mov
mov
ins
ins
sbb
mov
push
mov
inc
(bad)
fmul
xchg
fcmovne
adc
not
das
int3
sbb
xchg
stos
pusha
jae
cmp
aam
add
xor
and
pop
inc
or
dec
fist
xlat
add
add
push
je
sub
in
call
sahf
jne
cld
push
inc
clc
test
jne
mul
add
scas
jmp
out
push
in
xor
add
mov
push
inc
mov
push
test
aam
push
cld
pop
jo
dec
setg
or
je
xor
les
xor
push
ins
xor
add
int3
mov
pop
sbb
popa
inc
cwde
add
pop
add
push
ror
pop
pop
pop
sar
test
push
rcr
inc
mov
add
mov
sti
sub
jmp
inc
add
sar
dec
or
arpl
adc
sar
(bad)
sub
inc
pop
sub
cmps
jo
mov
mov
(bad)
enter
inc
shl
in
inc
bound
cld
pop
mov
mov
xchg
lock
je
daa
cmp
add
jle
out
(bad)
lock
mov
xchg
or
push
loopne
test
adc
or
lock
pop
ficomp
push
pop
cmp
aam
sbb
dec
pusha
mov
dec
xor
mov
push
repnz
cmp
sbb
clc
jle
cmp
push
repnz
fistp
adc
mov
sti
loop
jle
xor
cmp
fucomi
and
ret
aaa
mov
xor
jno
mov
mov
sub
into
sar
push
rcr
push
mov
shl
add
cwde
dec
pop
ret
inc
jg
xchg
or
mov
cmp
cmc
xor
sahf
and
aaa
call
jp
cmp
jge
sub
add
cmp
adc
push
aaa
movs
rcr
jmp
xor
ror
loopne
mov
mov
and
cld
popa
aaa
test
movs
inc
or
inc
bndstx
sub
cmp
dec
dec
outs
psignd
(bad)
mov
inc
mov
adc
or
rcl
mov
push
mov
adc
ja
xchg
shl
adc
pop
xor
dec
shl
mov
pusha
and
jo
mov
or
js
mov
adc
sub
jnp
dec
(bad)
pop
sti
repnz
sbb
mov
cmp
sub
pop
jne
pusha
sub
aam
adc
sbb
cmps
inc
push
arpl
js
inc
data16
push
lds
(bad)
add
mov
les
enter
adc
adc
sar
ret
rep
add
jmp
sbb
xor
inc
mov
and
shl
inc
mov
xchg
lock
jne
lea
cmp
adc
lods
test
mov
scas
loop
or
inc
push
sub
adc
das
loopne
cmp
pop
jmp
xor
jns
mov
lock
sub
cwde
bound
mov
aad
mov
imul
fcomp
loop
inc
inc
and
sti
dec
add
pop
and
adc
xor
enter
or
sub
ret
std
add
push
add
inc
xchg
ret
clc
adc
mov
ret
push
int3
push
cmp
add
cmps
add
and
jmp
or
or
shr
dec
aaa
scas
adc
sbb
int
mov
xchg
add
jnp
sub
leave
xor
or
jne
movs
jne
mov
add
jg
loop
adc
sbb
and
mov
repnz
push
fs
rol
dec
nop
add
and
stc
in
adc
jp
sar
sar
addr16
dec
sub
aas
cmp
xchg
ss
loopne
cmp
xor
sbb
mov
mov
mov
js
popf
and
out
sbb
pop
lahf
push
mov
cmp
jmp
adc
sub
inc
pop
adc
pop
jl
dec
rol
shl
jmp
inc
out
inc
ja
adc
and
cmp
or
cmp
rcr
mov
mov
sti
rol
and
jmp
mov
gs
or
add
imul
outs
loopne
es
push
fnstenv
add
add
adc
lea
lea
jg
mov
rol
or
mov
sbb
outs
mov
lahf
jb
jmp
cmp
xor
ins
pop
xchg
es
loop
aaa
dec
push
loopne
ret
xor
dec
daa
and
cmc
in
adc
and
push
sbb
dec
cmc
fwait
stos
and
sbb
fs
dec
push
jle
or
inc
(bad)
arpl
shl
mov
popa
jge
xor
movs
xor
lock
xor
sub
jo
and
add
enter
sub
fisub
and
ss
pop
mov
mov
cs
mov
das
cs
jo
and
mov
add
les
shr
out
push
loop
lods
pop
sub
cmps
sub
les
enter
pop
push
pop
call
call
xchg
inc
or
scas
fs
cmp
jge
push
andps
gs
je
rol
inc
aam
mov
xor
mov
popa
dec
sahf
xor
or
test
inc
fmul
fsubr
adc
int3
inc
ret
mov
pop
mov
add
pop
(bad)
out
mov
bound
jae
adc
add
pop
loope
neg
out
cs
add
dec
jne
sar
lods
and
push
adc
retf
stos
pusha
xor
in
push
sbb
int3
cld
mov
bound
outs
cmps
push
pusha
mov
fnstenv
ret
push
mov
adc
mov
mov
cmps
out
aaa
mov
lea
or
add
cwde
or
pop
outs
mov
xchg
push
mov
test
and
(bad)
mov
pop
mov
add
jne
scas
test
and
cld
mov
pusha
add
lock
fld
xchg
xor
js
mov
mov
inc
cmp
push
jp
add
fsubr
lods
loop
jmp
sbb
push
jb
add
fs
enter
sub
or
sub
addr16
or
movs
jp
jge
jo
cmp
pop
ret
sbb
fdivr
ja
repz
add
scas
mov
adc
pusha
xor
mov
mov
aas
push
pop
jnp
ret
push
mov
and
adc
or
push
mov
cmp
(bad)
test
dec
pop
mov
add
push
jbe
pop
sbb
cmps
push
sbb
xor
pop
dec
or
jl
add
mov
mul
loope
push
mov
jmp
int3
mov
cwde
adc
add
ins
add
rol
cmp
es
rol
das
aaa
mov
int3
test
ins
adc
push
fs
jmp
scas
xchg
fdivr
cwde
not
(bad)
outs
mov
jecxz
pop
xor
push
push
xchg
jo
shr
dec
xor
arpl
jne
xor
adc
add
shr
je
mov
sub
jo
ins
test
mov
push
jno
stos
rcl
jp
fld
sbb
cmp
rol
call
jl
inc
xor
xchg
push
mov
inc
dec
jne
cmp
add
ror
jo
jb
mov
dec
add
test
mov
fist
mov
mov
sbb
inc
inc
lods
sahf
pushf
mov
aad
or
and
lods
mov
push
and
jne
fnstcw
push
xor
push
xor
pop
mov
cmps
sbb
sub
fsub
xchg
pushf
and
je
xor
inc
jb
mov
lds
pushf
mov
push
test
fld
je
and
inc
sbb
xchg
pushf
arpl
jmp
push
cmp
cmp
nop
daa
pushf
scas
imul
idiv
call
cmps
test
sbb
je
adc
add
push
test
mov
repnz
add
fiadd
cmc
jbe
sbb
pop
loopne
push
add
add
xchg
aad
xchg
push
sbb
fcmovnbe
lds
sub
je
int3
add
lea
inc
(bad)
xor
mov
xchg
mov
call
xchg
ins
je
mov
inc
mov
xor
les
test
test
dec
in
pop
sub
js
ret
test
inc
cmp
mov
out
adc
in
push
push
push
dec
mov
loope
push
in
test
pop
jge
inc
stos
test
push
test
jbe
inc
bound
popa
ret
pop
pop
xchg
rol
clc
or
mov
pushf
(bad)
test
mov
push
adc
bound
xchg
push
clc
mov
nop
dec
mov
adc
cdq
add
test
jp
mov
bound
cmp
push
jp
cdq
mov
dec
push
test
sbb
inc
ret
push
jecxz
sbb
jmp
sbb
fild
add
fdivr
jp
or
jae
xlat
pop
push
lock
dec
bound
dec
xor
add
ss
pushf
jg
outs
pop
xchg
add
mov
cmp
arpl
or
jbe
pop
xchg
int3
pop
icebp
ins
test
daa
push
dec
or
adc
add
adc
or
jo
mov
or
sbb
stos
ins
or
dec
inc
dec
mov
into
inc
push
pop
inc
call
fdivr
mov
cmp
pop
fmul
mov
fdivr
fs
mov
hlt
xchg
cmp
jne
lea
ficom
fwait
lock
sub
mov
mov
sbb
mov
xchg
cmp
mov
push
xchg
add
mov
push
adc
adc
out
push
lds
js
arpl
jo
shl
shl
addr16
xor
xor
and
or
lds
shl
retf
or
imul
or
daa
retw
psubusb
xor
jmp
adc
xchg
or
mov
push
or
xor
cmp
out
dec
imul
fistp
in
(bad)
dec
fnstcw
loop
adc
outs
inc
sbb
push
adc
sub
sub
inc
fsubr
push
mov
arpl
loopne
push
jae
movs
call
lock
add
neg
cmp
xchg
scas
test
dec
inc
lea
mov
push
mov
sub
cld
je
test
clc
test
ds
add
pop
data16
out
cmp
cmps
test
push
mov
mov
clc
xchg
cmp
jecxz
shl
fidiv
add
iret
push
in
rcl
mov
shr
add
mov
jmp
enter
test
loopne
(bad)
push
div
inc
popa
inc
arpl
in
adc
sbb
test
js
mov
es
mov
pop
pusha
add
push
pop
mov
pusha
xchg
sbb
adc
xor
pop
nop
sbb
sub
das
(bad)
mov
or
sub
jne
fstp
push
in
nop
shl
test
je
push
and
mov
push
cmp
and
fmul
or
push
fidiv
add
aad
stos
sbb
adc
lods
mov
shr
xchg
sub
or
dec
inc
sbb
nop
mov
and
sub
call
mov
mov
std
mov
jb
loopne
and
sti
or
pop
or
and
mov
(bad)
push
(bad)
shl
ret
add
mov
shl
jae
push
mov
outs
pusha
ins
mov
push
movs
or
sub
add
pop
add
mov
jo
pop
pop
mov
cmp
cli
cmp
mov
push
add
mov
loopne
popf
mov
outs
inc
adc
or
loopne
popa
rol
aad
sbb
fild
call
mov
add
sbb
daa
inc
nop
or
push
mov
dec
outs
jne
mov
or
loop
push
ret
test
jne
sbb
inc
push
test
xor
add
inc
push
cmp
idiv
(bad)
push
jne
push
add
and
fdivr
inc
xor
add
or
out
daa
xlat
sbb
aam
inc
shr
sbb
sti
js
mov
fcomp
jl
pop
or
cmp
and
mov
cld
ret
fistp
rol
xchg
das
(bad)
call
or
push
adc
cmp
inc
push
inc
outs
ins
inc
outs
outs
jbe
cmp
pop
add
ss
outs
popa
jo
dec
push
ror
(bad)
push
outs
dec
xor
jmp
sar
or
es
pop
ret
inc
dec
jne
push
add
repz
adc
push
cs
add
adc
mov
add
shr
popa
ss
adc
pusha
les
pop
mov
ret
mov
xchg
adc
loopne
adc
xor
jmp
cmp
pop
sub
mov
mov
std
xchg
fldenv
in
sbb
call
push
or
sbb
push
add
mov
sbb
cmp
jl
pop
rcl
in
cmp
jle
loopne
daa
push
sbb
lods
sub
fdivr
aaa
call
dec
jg
pop
mov
(bad)
std
popf
mov
adc
and
mov
pop
push
jo
mov
add
jp
inc
pop
or
cmp
je
pop
add
lods
loop
loop
retf
into
push
and
fwait
jle
cdq
(bad)
daa
pop
fadd
std
fwait
dec
je
inc
jmp
bound
out
(bad)
or
ins
inc
jmp
xchg
popa
rol
or
mov
movsx
mov
push
mov
sub
call
mov
cmp
and
daa
mov
in
and
and
dec
fsub
iret
mov
jo
js
loopne
dec
cmp
fucomi
push
add
add
xchg
inc
add
add
mov
aaa
and
call
mov
adc
mov
retf
sbb
inc
xchg
outs
mov
jno
nop
(bad)
xor
aam
or
outs
push
out
pop
xor
or
cmp
or
outs
ja
dec
aam
mov
pop
or
add
sbb
jecxz
jne
mov
mov
(bad)
fcomp
pop
pop
dec
pop
xchg
(bad)
adc
dec
shr
sbb
push
jmp
mov
mov
jmp
sti
scas
sub
jg
mov
adc
sbb
outs
or
cmp
pop
scas
fwait
test
ins
lock
mov
ds
dec
push
xor
into
cmp
or
test
cmp
mov
inc
adc
xchg
mov
jnp
push
and
jp
mov
add
jmp
mov
test
push
enter
(bad)
adc
out
jecxz
mov
push
pop
or
daa
nop
or
jne
adc
inc
dec
mov
jl
add
mov
push
enter
xchg
mov
sbb
xchg
es
ret
sti
push
sbb
test
je
inc
test
fcomp
pop
lea
addr16
push
loopne
pop
xchg
add
test
cmp
pop
jbe
add
xchg
and
sub
jl
push
push
or
cmp
add
int
jp
xchg
add
sub
jnp
pop
xchg
and
ins
ins
push
mov
mov
mov
dec
je
lea
cmp
cmp
push
mov
xchg
or
or
adc
pop
gs
sub
adc
in
test
inc
shl
outs
iret
pop
mov
sub
inc
nop
test
aad
fsubr
push
sbb
(bad)
fsub
leave
popa
arpl
lock
jo
xor
rol
push
imul
xor
dec
pop
or
or
out
ret
xor
fucom
adc
shl
adc
sti
cmp
or
int3
in
movs
xor
cmps
or
test
lock
or
test
mov
mov
repz
add
das
lahf
mov
mov
mov
jae
je
test
mov
push
or
pusha
test
pop
cmp
mov
lahf
push
mov
push
add
pop
jle
cmps
push
jmp
pusha
add
outs
mov
mov
sub
pushf
sbb
fcomp
add
sbb
fiadd
jo
jnp
adc
cmc
sub
dec
xor
dec
std
in
xor
ror
push
loopne
movs
push
pop
aas
sbb
dec
pusha
int
dec
adc
jmp
sbb
dec
sub
int3
sbb
ss
shr
add
outs
sbb
push
ja
js
dec
and
fs
mov
lods
dec
or
(bad)
clc
push
jmp
mov
cmp
sbb
ficomp
add
in
jo
pop
enter
stos
arpl
fwait
in
xchg
inc
lods
and
push
cmp
mov
add
push
ja
mov
mov
shl
daa
je
and
sbb
mov
in
mov
aaa
hlt
sub
fsub
sahf
mov
add
dec
mov
fcmovb
inc
mov
mov
dec
movs
in
ds
adc
ficomp
push
add
or
sahf
xchg
adc
pop
add
adc
pop
jo
test
stos
pop
mov
cmps
ret
xchg
repnz
mov
cli
push
test
xchg
push
xchg
outs
adc
jno
loope
mov
mov
cdq
sub
pop
xor
xchg
jne
ror
mov
xor
cmp
mov
and
inc
mov
xchg
lock
js
enter
dec
ins
adc
loope
sbb
adc
and
or
retf
xor
push
mov
fld
stos
cli
leave
xchg
imul
das
inc
push
outs
push
adc
add
cmp
sbb
dec
test
repz
fidivr
add
add
sbb
popf
sbb
in
je
lds
loopne
je
adc
push
or
xchg
or
push
mov
dec
add
or
out
rcl
test
das
rol
das
shl
adc
outs
jo
mov
cld
(bad)
das
xor
adc
sbb
add
test
inc
sbb
inc
ss
inc
push
cmp
test
add
je
jmp
aaa
xor
cmp
jmp
sti
cmp
or
rcl
fndisi(8087
adc
fxch
add
test
aas
push
sti
sub
cmps
in
rol
add
cmp
scas
imul
repnz
push
je
jbe
xchg
cmp
xchg
aas
test
(bad)
push
ins
cmovge
sub
imul
pop
lds
fmul
jmp
test
push
lds
dec
test
lds
mov
pusha
and
loopne
xor
cmp
pop
sbb
inc
jbe
dec
and
jmp
or
xchg
or
add
js
add
add
adc
xor
xchg
push
xchg
mov
push
inc
or
push
add
movs
and
add
inc
ror
and
xchg
jnp
arpl
sbb
xchg
mov
dec
jae
ud2
in
mov
jo
push
aam
pop
call
call
or
pop
push
cmp
push
add
or
push
fwait
jl
lods
int3
scas
call
and
adc
or
adc
adc
inc
cmp
mov
test
sahf
push
jns
in
mov
pop
das
xor
mov
pop
jo
xchg
add
sbb
pop
ss
sub
or
jae
xchg
mov
jne
ret
or
scas
adc
add
loopne
push
mov
jo
pop
xor
aam
pusha
or
shl
cmp
mov
ja
pop
lock
fwait
(bad)
pop
cmp
and
aaa
nop
adc
mov
fistp
cwde
mov
add
push
mov
sub
add
sbb
jmp
add
addr16
or
fild
xchg
sbb
outs
fldpi
ins
cmp
sbb
adc
dec
xchg
aaa
adc
je
fstp
push
xor
ret
sbb
aad
inc
enter
cmc
movs
lods
cmps
dec
icebp
cli
lahf
push
mov
pop
icebp
inc
adc
cmp
(bad)
push
push
add
mov
iret
out
push
and
mov
sub
add
stos
inc
dec
test
fild
adc
fnstsw
push
(bad)
cmp
sub
popa
pop
mov
pop
popa
data16
mov
rol
push
add
test
loopne
add
add
ins
test
data16
push
into
xchg
xchg
adc
push
aaa
call
fs
jecxz
(bad)
outs
adc
cmp
dec
pop
lock
test
std
js
mov
shl
push
aam
add
jp
push
pushf
push
or
daa
ds
imul
sub
(bad)
mov
in
ret
adc
mov
mov
push
sbb
adc
daa
xor
or
in
pop
shr
pop
fisubr
mov
push
mov
mov
les
and
add
enter
(bad)
in
push
cmc
sub
mov
cmc
pop
mov
pop
les
pop
cmp
jecxz
(bad)
push
cmp
lds
mov
mov
(bad)
xchg
sub
xchg
adc
test
sub
pushf
ds
xor
mov
movs
mov
jmp
push
xor
dec
jmp
xchg
sbb
sub
jo
mov
iret
pop
sub
clc
ss
sbb
leave
sahf
pushf
or
mov
adc
sbb
mov
cwde
in
add
xor
inc
mov
fild
push
mov
cmp
test
mov
mov
outs
pop
aam
jmp
push
pushf
and
loopne
mov
call
pusha
lahf
inc
and
push
add
sahf
push
mov
(bad)
add
mov
int
xor
jge
cmp
pushf
je
ins
das
loopne
adc
cmp
adc
xchg
push
xor
movs
and
pushf
add
movs
sub
mov
mov
push
cmps
add
or
mov
mov
or
cli
pop
cmp
ja
test
out
imul
mov
push
lds
jne
(bad)
mov
push
stc
pandn
std
repz
fdiv
pop
pop
inc
cmp
xor
fld
and
js
xor
test
pop
adc
int3
xor
fwait
adc
std
mov
lock
fwait
push
add
or
clc
sub
xchg
imul
adc
hlt
add
push
sub
cdq
hlt
das
rcr
add
js
outs
outs
aaa
inc
nop
aaa
jl
push
xor
sub
dec
or
cld
(bad)
aam
push
inc
sbb
gs
aad
add
and
push
and
cli
fcomp
ror
hlt
or
inc
mov
loop
adc
xor
ret
call
es
mov
inc
test
cmps
mov
sub
jge
dec
cmp
mov
test
jb
es
and
ins
dec
mov
fmul
sub
je
je
or
sbb
mov
push
test
push
push
or
cld
hlt
push
stos
add
je
fidiv
add
mov
add
ss
dec
loope
sub
xor
test
inc
shl
and
mov
mov
cmp
pusha
inc
sub
sub
adc
and
out
retf
mov
adc
and
and
loopne
push
mov
adc
ins
xchg
add
cwde
and
or
addr16
test
inc
and
mov
add
sar
subps
inc
mov
xlat
loopne
or
and
movaps
repz
aas
mov
jae
mov
and
and
sbb
lds
cmp
call
inc
je
test
je
mov
aas
les
push
dec
bound
mov
ret
add
xchg
jo
lock
hlt
jne
arpl
push
mov
lock
sbb
mov
loopne
mov
aas
add
cmovbe
mov
leave
popa
shr
xchg
ret
add
push
cmp
xor
sub
fcomp
imul
icebp
fbld
loop
mov
jae
cmp
fwait
dec
jne
pop
dec
xor
mov
xor
sub
or
fistp
and
mov
jae
cmp
mov
add
cs
pop
imul
popa
or
or
xchg
pop
cs
jl
jg
data16
or
pusha
mov
jp
pusha
daa
clc
sbb
clc
or
push
push
sbb
cmp
or
movs
loop
cmp
cwde
cmps
scas
sbb
clc
sbb
inc
jmp
into
in
ss
pop
cli
sub
push
(bad)
adc
adc
mov
gs
repz
cmp
jne
test
add
xlat
mov
pop
mov
mov
mov
mov
mov
add
fadd
mov
dec
sti
fiadd
call
push
mov
mov
in
in
aaa
ficomp
fcom
daa
inc
pop
pop
xchg
es
push
add
push
add
jo
jb
jmp
cmp
cld
dec
jmp
lods
or
dec
ins
sbb
fmul
jns
fcomp
cmps
ficomp
aaa
mov
lahf
ret
adc
xchg
mov
push
adc
xor
es
cwde
sbb
std
sahf
fcomp
inc
fwait
cld
gs
jge
fmul
ja
je
mov
mov
xchg
jo
mov
and
pop
mov
call
sub
iret
inc
js
(bad)
neg
inc
adc
shl
push
ror
mov
inc
rol
enter
sub
dec
inc
ficom
mov
ss
in
inc
mov
jmp
jle
dec
pusha
mov
adc
sub
pushf
sbb
sub
mov
inc
xor
add
add
mov
jmp
jg
xor
pop
mov
mov
loopne
das
stos
mov
xor
push
or
lods
test
movs
ins
and
(bad)
rol
scas
dec
ja
lds
cmps
push
cmp
push
sub
cmp
inc
ins
mov
ret
mov
add
test
jmp
rcl
lods
push
jnp
je
ja
jo
jb
adc
popa
in
add
pop
pop
ret
nop
scas
lea
mov
ret
mov
xor
je
test
je
sub
ins
and
cmp
cmp
dec
add
adc
call
out
(bad)
nop
mov
mov
or
int3
add
outs
cmp
add
mov
or
mov
test
mov
and
pop
je
call
lock
test
jl
inc
mov
dec
ret
inc
cld
cmp
dec
mov
call
loopne
mov
add
sub
pop
inc
lock
adc
popa
mov
jl
aam
mov
mov
mov
pop
adc
js
inc
jbe
mov
add
dec
jne
pop
jno
hlt
inc
push
cdq
mov
adc
sbb
aad
xor
das
mov
push
test
pop
sbb
mov
shl
inc
inc
xor
mov
(bad)
cld
dec
dec
mov
mov
or
mov
mov
dec
fdiv
adc
lea
or
fdivp
jo
sbb
mov
test
cld
pusha
fld
jp
mov
mov
pushf
and
cmc
aaa
mov
loopne
inc
test
or
dec
add
inc
mov
test
jp
pop
dec
mov
xor
sub
pop
xor
test
data16
cmp
outs
fcom
add
xor
sub
das
ds
dec
(bad)
xchg
mov
popa
lods
movs
inc
jo
loopne
pop
cmp
cmp
mov
add
lock
inc
xlat
pop
mov
pop
push
mov
dec
xlat
xchg
popf
lock
pop
sub
jnp
rcl
shl
or
mov
test
mov
or
mov
sahf
std
cmp
je
adc
or
je
lock
mov
mov
pop
cmps
arpl
mov
xchg
push
stos
xor
or
add
and
arpl
(bad)
xor
add
mov
sbb
movsx
aam
xor
mov
lock
add
mov
lds
je
shl
and
dec
xor
(bad)
mov
(bad)
cmp
cmp
lea
or
inc
(bad)
cmp
sub
xlat
push
pop
and
fadd
dec
add
ret
cmp
inc
test
out
test
inc
fcom
or
jmp
das
shr
movs
add
dec
hlt
jl
inc
mov
sti
out
enter
inc
mov
add
sub
cmp
in
push
sub
jb
iret
jbe
mov
ror
test
or
or
xor
and
or
inc
loopne
xlat
pop
(bad)
xor
cmp
add
out
mov
mov
dec
jmp
pop
ins
rol
mov
mov
loopne
rcr
adc
repnz
test
mov
ds
pop
ins
add
rol
cs
imul
repnz
push
mov
add
cli
ins
add
and
cmp
lods
inc
or
push
loopne
in
(bad)
ins
(bad)
pop
dec
ins
(bad)
in
dec
pop
or
add
add
xor
cwde
mov
pop
dec
scas
ror
and
sub
pop
lods
xchg
stos
pop
dec
jle
mov
enter
jbe
sbb
push
ja
(bad)
push
adc
mov
xchg
jo
add
pusha
(bad)
mov
int3
and
xor
mov
add
fs
aam
shl
xor
adc
push
outs
push
mov
cld
(bad)
add
or
pop
je
jmp
xor
aaa
add
pop
jmp
pop
test
scas
pop
imul
or
int3
sbb
pop
fidiv
xchg
and
jp
mov
xchg
cdq
mov
inc
rcl
sbb
jo
test
inc
add
loopne
es
lea
pop
pushf
mov
lods
pusha
cmp
stos
cmp
push
ja
adc
ret
jne
ret
out
mov
aas
(bad)
and
cmp
adc
scas
xchg
xchg
sbb
cs
pop
in
push
loope
retf
sub
fcomp
jne
ds
mov
andps
fdivr
push
add
add
push
aaa
nop
and
sbb
(bad)
dec
xchg
sbb
mov
mov
fdiv
and
inc
and
loopne
pusha
inc
push
popf
gs
mov
(bad)
ins
and
sub
ret
adc
inc
xchg
cmps
dec
fdivr
test
mov
jmp
push
cmp
xchg
int3
adc
loopne
xchg
mov
mov
loopne
in
stos
push
dec
test
movs
pcmpeqw
xchg
jmp
mov
test
je
call
popa
test
sub
mov
(bad)
test
out
jmp
xor
dec
movs
inc
mov
adc
or
and
push
shl
and
sbb
xchg
ficom
les
jl
sahf
lock
pop
add
xchg
push
sbb
shl
adc
adc
pop
rcr
fidivr
add
xor
push
and
push
popa
and
hlt
ja
test
inc
loopne
(bad)
ret
into
adc
jp
jmp
push
fadd
pop
jno
or
sbb
cmp
fdiv
fisubr
push
push
pop
shl
mov
mov
dec
mov
push
(bad)
std
cmc
mov
dec
das
or
retf
and
scas
dec
arpl
and
sar
sbb
inc
mov
jecxz
push
xor
mov
xchg
and
inc
jg
aaa
imul
sbb
jp
lock
loopne
fistp
clts
mov
cmp
push
cmp
adc
sub
mov
pop
pop
jne
rcr
sub
push
cmp
push
aaa
inc
xchg
int3
shr
mov
cmp
adc
in
sbb
bound
popf
lods
sbb
sar
pop
cmp
or
dec
dec
cmp
sbb
int3
inc
scas
cmc
inc
or
pusha
into
mov
js
aaa
mov
or
lea
mov
add
xchg
pusha
sub
dec
cmp
or
icebp
sbb
dec
adc
test
xchg
out
xchg
mov
lods
(bad)
fs
aam
aam
aam
fldcw
bound
jb
jmp
sbb
add
jle
adc
pusha
mov
or
inc
pushf
sub
adc
add
push
xchg
ret
jle
dec
pop
inc
pop
xor
jne
lea
psubusb
inc
inc
push
add
push
jno
mov
data16
push
movs
mov
add
js
ja
cmp
mov
inc
fsub
imul
fisttp
cs
mov
dec
test
adc
xlat
push
push
xor
enter
cmc
fadd
dec
pushf
pop
loopne
and
iret
push
pop
fmul
xlat
rcl
test
(bad)
lock
outs
in
add
and
jmp
cdq
cld
pop
aaa
rol
movs
jo
xchg
test
add
push
rol
adc
cmps
dec
scas
inc
pop
rcr
sub
inc
adc
ins
push
imul
push
fisttp
aad
pop
movs
inc
lods
gs
loopne
xchg
add
popa
jnp
ja
push
fisttp
mov
scas
pop
mov
popa
adc
adc
test
mov
mov
push
fisubr
mov
cmpps
mov
stos
popa
movs
add
shl
push
jmp
rol
outs
adc
rol
cmps
add
in
call
lock
mov
shl
sbb
aad
daa
lods
test
repnz
jle
or
jmp
scas
push
fsub
(bad)
rcl
push
arpl
mov
dec
sbb
xor
mov
std
dec
clc
jmp
mov
or
push
loopne
inc
(bad)
and
or
inc
inc
mov
cmc
or
loope
pushf
sub
test
int3
lock
lods
mov
shl
cmp
inc
int
add
loopne
fcomp
pushf
or
retf
rol
outs
mov
and
int
jo
xor
das
jecxz
or
mov
repnz
dec
or
dec
aam
fadd
shl
inc
mov
sub
jp
cmp
jg
ins
push
fdiv
aam
test
lods
add
cmps
je
mov
cwde
scas
ror
push
loope
inc
sbb
sub
or
call
rcr
push
pop
mov
fistp
pop
jecxz
push
jnp
mov
daa
not
(bad)
popa
mov
adc
movntq
mov
push
cmp
rol
or
mov
adc
imul
test
(bad)
dec
cmp
lods
fs
push
mov
adc
add
nop
pusha
jo
adc
repnz
jnp
es
push
mov
push
push
pop
nop
pop
sub
inc
mov
push
call
mov
jmp
push
sub
js
mov
sar
cvtps2pi
cmp
pushf
pop
inc
mov
loopne
xchg
sub
xor
(bad)
xor
(bad)
or
je
inc
push
jae
add
inc
add
(bad)
push
gs
sbb
jb
jl
arpl
jno
pop
pop
sahf
mov
aam
(bad)
(bad)
sbb
mov
enter
add
sar
pop
(bad)
(bad)
jecxz
(bad)
ins
das
out
out
push
loop
(bad)
loop
int3
inc
xor
sbb
enter
enter
add
jno
jno
stos
pop
cmp
and
or
or
or
pop
push
nop
setg
jo
test
fistp
or
sbb
daa
cmp
addr16
sbb
push
sbb
inc
popa
push
push
mov
push
push
sub
stos
jo
and
ins
sub
and
inc
push
inc
test
mov
inc
test
push
imul
mov
into
xchg
mov
and
mov
je
inc
sbb
mov
cli
push
ficom
imul
add
sbb
push
fsub
test
sub
add
mov
out
adc
dec
dec
in
push
adc
pop
fadd
dec
pop
cmp
mov
sub
imul
mov
outs
popf
or
aaa
cli
sbb
fdiv
push
or
ss
and
push
mov
dec
aam
rcl
sti
sub
pop
stos
lods
or
mov
xchg
les
out
(bad)
jmp
je
jmp
add
mov
mov
mov
test
and
into
mov
jnp
popa
push
popf
inc
enter
bound
fdiv
sub
add
or
or
scas
inc
sbb
popa
adc
(bad)
push
(bad)
std
push
xor
pop
dec
or
fdivr
push
fldl2e
dec
(bad)
loopne
xlat
xor
fld
pop
push
popa
mov
jg
ret
mov
rol
or
outs
add
ja
mov
pop
jmp
clc
or
add
add
add
add
xchg
es
loope
repz
push
cwde
xlat
add
jle
pop
adc
jne
mov
jno
sbb
push
adc
test
gs
push
jmp
outs
and
loopne
jae
sbb
jns
jnp
loop
pop
jg
add
add
es
xor
or
and
call
pop
mov
rol
pop
or
xchg
push
add
(bad)
sbb
sbb
fmulp
les
push
mov
adc
enter
push
jp
mov
mov
cmp
jne
sub
into
push
fmul
or
jge
or
jl
jecxz
inc
bsr
in
mov
mov
xor
inc
(bad)
sbb
dec
pop
jmp
mov
or
(bad)
xlat
loopne
add
xor
adc
push
push
push
mov
jmp
xchg
and
aad
adc
xor
jbe
adc
jmp
xor
pop
fmul
cmp
je
inc
cmp
jo
pop
pop
out
xchg
mov
stc
mov
and
(bad)
dec
aas
je
xchg
mov
fdivr
jne
inc
sbb
fiadd
cs
mov
pop
jp
dec
mov
pop
push
mov
push
or
and
stos
sub
(bad)
shl
mov
fwait
or
div
fistp
loopne
into
push
xchg
dec
out
jnp
div
pop
lock
and
jbe
shr
push
or
xor
cmps
inc
add
push
push
hlt
mov
push
add
in
clc
jnp
loop
or
outs
je
cmp
jne
(bad)
sahf
or
sub
mov
pop
std
cmp
enter
pop
jne
arpl
add
add
mov
pop
and
popa
jmp
test
push
push
adc
mov
jo
sbb
test
xor
popa
push
inc
int3
hlt
gs
add
pop
sbb
add
inc
out
loopne
loopne
push
add
inc
sbb
(bad)
cmp
jp
pop
mov
mov
or
jg
mov
enter
or
ds
or
retf
lock
cmp
ror
xchg
in
enter
dec
shl
push
adc
cli
pop
bound
pusha
mov
mov
sbb
ret
aam
pop
jne
pop
or
adc
and
in
clc
sub
cmp
pop
fld
ss
mov
add
cmp
mov
dec
je
adc
mov
adc
movs
ss
inc
sbb
adc
jo
js
xor
inc
xor
arpl
mov
add
pop
mov
mov
push
mov
loope
les
mov
ss
and
jmp
or
loope
push
xor
xchg
cmp
loopne
mov
adc
and
push
xchg
lahf
je
jne
inc
cwde
adc
imul
ins
push
dec
outs
lds
sbb
aaa
daa
inc
loop
shl
sbb
dec
nop
add
add
test
or
mov
xor
xchg
rol
call
sbb
jns
cmp
mov
adc
inc
jo
inc
test
aam
xor
into
and
(bad)
aam
js
add
cmp
xor
pop
mov
ss
shr
jle
pop
div
pushf
sti
js
or
popf
push
ret
and
or
mov
jmp
pop
xor
jo
ret
lahf
cmp
dec
add
iret
xchg
inc
mov
das
mov
in
lods
hlt
lahf
sbb
les
jecxz
sub
push
add
ret
sbb
cwde
xchg
mov
pop
sub
in
jp
pop
mov
stos
and
push
cmp
pusha
and
adc
push
mov
hlt
push
mov
test
out
pop
push
sbb
movs
and
popa
push
xor
xchg
mov
push
push
dec
inc
jae
clc
mov
add
mov
xchg
in
cmp
sbb
add
pop
les
mov
js
adc
sub
xchg
call
pop
xchg
jo
lods
dec
add
mov
clc
std
scas
(bad)
call
mov
imul
or
sub
das
pushf
push
adc
(bad)
xor
or
cdq
(bad)
push
loopne
jo
xor
aad
call
rcl
test
aas
scas
lods
inc
mov
retf
mov
ss
push
call
aam
push
adc
out
or
imul
(bad)
jo
add
lods
sbb
sbb
daa
and
test
and
loope
movs
jne
lods
or
or
pop
shl
mov
mov
inc
or
lods
cmp
test
or
mov
movs
mov
or
test
sub
(bad)
jns
jo
sbb
aaa
mov
or
out
jo
and
dec
xchg
push
jmp
sbb
and
fadd
push
pop
adc
and
mov
aaa
rcr
jecxz
mov
cs
dec
(bad)
aam
mov
ret
cmp
dec
mov
pop
ret
xchg
in
add
jnp
and
adc
push
mov
fwait
push
jmp
add
dec
dec
xor
or
retf
sub
xlat
push
xor
sbb
jmp
dec
je
call
jmp
loopne
inc
(bad)
fsub
test
rol
inc
retf
test
ja
aam
js
mov
dec
push
xchg
pinsrw
jne
mov
and
bound
pusha
hlt
mov
or
psubb
inc
icebp
shl
push
mov
cmp
xchg
aaa
loop
mov
je
inc
enter
in
or
dec
mov
mov
jge
mov
pusha
addr16
out
test
test
sbb
stos
retf
sub
loope
push
gs
xlat
xor
inc
and
dec
pop
add
sub
xor
rcr
pusha
jo
add
call
aas
ins
pop
dec
sahf
clc
call
scas
xchg
sbb
or
fwait
sub
xor
dec
mov
xchg
or
pop
sub
inc
xor
or
test
dec
dec
xchg
sub
add
test
or
ret
push
fidiv
adc
xchg
cdq
xchg
add
ja
fscale
fidivr
xor
outs
data16
add
add
loopne
jnp
adc
xor
sub
scas
pop
arpl
sub
pop
fsub
cmps
jecxz
cdq
or
cdq
dec
push
pop
fbld
mov
adc
popf
xchg
repnz
add
inc
sbb
and
into
lods
and
or
mov
xor
ds
iret
arpl
and
sbb
adc
cmp
mov
pusha
je
adc
and
cs
gs
loopne
sbb
mov
lds
(bad)
cmp
sti
pop
mov
push
or
push
sbb
mov
and
add
mov
pop
and
jbe
inc
add
or
cs
sti
pop
out
scas
hlt
mov
mov
sub
dec
or
(bad)
sub
adc
(bad)
pop
cmp
jne
retf
imul
or
ret
div
inc
movs
add
or
inc
adc
scas
mov
lock
arpl
sbb
push
xor
in
fild
add
ret
xchg
mov
mov
jae
xchg
sub
inc
dec
jne
pop
xchg
je
add
lods
or
out
ss
push
mov
add
cmp
push
adc
xchg
jle
xor
ror
pop
jo
sahf
test
je
sbb
mov
mov
mov
xor
lock
push
out
bndldx
adc
fisubr
fild
ss
dec
mov
test
cmp
repz
in
jo
push
iret
fs
dec
or
mov
enter
and
inc
mov
xor
adc
sub
jno
(bad)
out
jns
mov
ret
popa
clc
pop
test
push
add
in
mov
push
jne
or
ss
and
lock
bound
sub
jne
mov
xor
cli
xor
mov
mov
dec
push
pop
or
addr16
fild
arpl
mov
mov
push
in
ror
pusha
je
mov
test
leave
call
movs
mov
cmp
inc
call
pop
data16
lea
mov
or
imul
mov
add
dec
jne
jmp
mov
sbb
xor
fisubr
mov
sbb
popf
adc
inc
test
test
push
lds
clc
mov
jmp
dec
push
dec
dec
inc
arpl
push
cld
arpl
jae
and
add
leave
idiv
ja
mov
lods
mov
pop
dec
push
pop
add
cs
imul
adc
sti
call
outs
jb
inc
js
arpl
or
outs
bound
add
dec
gs
(bad)
push
fs
popa
ins
gs
jae
jb
outs
or
push
mov
push
gs
mov
in
pop
push
push
sub
sbb
into
cwde
sub
add
icebp
imul
xchg
xchg
dec
add
sbb
imul
inc
adc
fwait
push
push
inc
data16
jb
or
jae
outs
outs
jae
push
jb
dec
outs
pop
adc
add
push
and
imul
fstp
das
dec
pop
push
js
inc
add
mov
lahf
out
jge
add
or
push
lahf
jecxz
mov
cmp
cmp
inc
xchg
push
jl
push
fnstcw
bound
cmp
and
mov
mov
fucomi
jbe
pop
push
push
mov
dec
add
xor
sbb
mov
or
imul
and
or
or
push
inc
ins
ins
add
lock
add
or
fcmovnu
loopne
pop
add
gs
data16
or
inc
ret
sbb
cmp
adc
adc
xchg
mov
add
add
jb
xor
add
(bad)
adc
data16
pop
xlat
jle
adc
retf
inc
sbb
in
sbb
movs
or
mov
pop
(bad)
ret
add
mov
out
add
sahf
ret
int3
add
or
in
adc
test
fcom
jbe
mov
and
icebp
push
sbb
int3
int3
aas
repz
push
pop
xor
fwait
int
cs
ins
ror
jne
jbe
sbb
push
jl
add
clc
mov
out
test
add
push
les
popa
jb
in
push
dec
add
icebp
cmp
or
pushw
inc
es
mov
lds
or
inc
xchg
add
lock
push
repz
or
xor
adc
or
pop
adc
or
fmul
lock
fcom
push
sbb
js
sbb
adc
arpl
dec
pmulhw
retf
pusha
xor
mov
sar
add
shr
or
jo
fst
push
daa
or
out
inc
outs
jne
popf
ds
sub
jmp
call
pop
jae
je
sub
inc
out
stos
outs
daa
dec
inc
inc
data16
push
pop
fstp
bswap
bound
pop
mov
mov
loopne
pop
mul
fsubp
out
scas
mov
xchg
inc
je
mov
sub
jno
scas
rol
push
mov
add
ss
and
push
sbb
loopne
lock
and
jo
jb
in
(bad)
push
add
data16
ret
or
bound
or
adc
cmps
fsubrp
loop
push
or
push
fs
and
psubw
(bad)
dec
dec
dec
std
test
cmp
call
lock
jno
push
jne
xor
add
cmp
xchg
dec
ja
add
add
pop
inc
es
jns
add
bts
jb
pop
addr16
push
pop
(bad)
arpl
sub
jne
je
(bad)
pusha
mov
sub
popa
sub
ins
cmp
dec
gs
pop
popa
outs
dec
fcom
push
sub
pop
or
jmp
pop
jge
retf
loopne
or
(bad)
pop
(bad)
out
adc
xchg
inc
jge
adc
mov
jbe
mov
jno
lds
test
push
cwde
mov
push
fdiv
test
pop
push
lds
jb
add
sbb
inc
clc
sbb
fs
or
or
scas
out
sub
inc
or
pusha
iret
hlt
or
es
cmp
xor
ja
popf
inc
inc
pop
or
rcr
mov
stc
out
add
iret
jnp
hlt
push
pop
jnp
xchg
push
adc
add
pop
pop
sub
jo
mov
mov
cmp
xor
xor
cmp
rol
add
pop
xor
or
aaa
sbb
xchg
add
and
gs
jo
imul
mov
mov
or
push
inc
dec
sub
push
inc
add
xor
or
and
lahf
sbb
dec
sub
pop
add
lods
pop
(bad)
imul
push
test
xlat
mov
mov
movs
cmp
cmps
cmc
jge
jle
(bad)
mov
ficom
add
dec
cld
cmp
push
pushf
ror
rcr
jge
mov
adc
loopne
enter
mov
popa
stos
push
loop
sbb
sbb
sbb
inc
sub
movs
es
bound
jb
movs
add
or
test
fnstenv
imul
call
dec
les
aaa
mov
ja
mov
and
pop
jo
or
xor
and
push
cld
or
xchg
adc
jle
dec
xor
xchg
pusha
mov
sbb
cmp
js
push
push
push
ret
add
int3
mov
xchg
jbe
xchg
push
adc
pusha
hlt
jge
leavew
mov
inc
dec
sbb
js
fnstcw
and
retf
pop
push
mov
mov
mov
mov
int3
ins
mov
test
add
enter
push
jecxz
mov
lea
lea
xor
jo
and
(bad)
aad
pop
mov
(bad)
lods
ret
cmp
and
retf
xor
inc
enter
cld
lods
xchg
mov
sbb
test
fidiv
pop
xchg
loopne
push
gs
inc
push
push
or
adc
dec
push
mov
cmovl
sbb
repz
jo
(bad)
hlt
sbb
add
add
xor
adc
imul
ins
cli
xchg
addr16
and
mov
outs
mov
inc
sbb
loope
xchg
add
inc
add
add
jecxz
lods
test
outs
cmp
mov
ret
lods
add
sub
jae
mov
add
les
inc
int3
shl
or
jmp
ins
mov
mov
js
inc
lock
je
xor
cld
jo
pusha
enter
(bad)
jne
or
pop
add
jae
pop
dec
push
inc
or
scas
jb
test
sub
bound
jl
inc
dec
or
mov
leave
push
xor
call
pop
push
sub
push
test
outs
and
sub
jo
mov
mov
(bad)
sahf
sbb
and
and
dec
sti
out
test
pop
mov
xlat
inc
shr
pop
mov
pop
add
mov
mov
dec
adc
mov
adc
aas
jp
js
ins
inc
adc
adc
pop
xchg
lock
pusha
ret
jmp
dec
or
xor
enter
int3
jno
sub
pop
add
xchg
sbb
rol
and
sbb
push
call
push
cmp
test
(bad)
cmp
dec
call
or
dec
lods
adc
ss
in
cmp
and
inc
sub
mov
sbb
hlt
in
mov
daa
mov
inc
ror
sbb
inc
dec
repz
sub
pavgb
das
sbb
ins
aad
jnp
es
adc
push
mov
aam
dec
aam
je
add
mov
push
xor
loopne
adc
ss
xor
add
pop
add
test
jae
cmp
popa
mov
mul
dec
in
adc
add
or
in
ja
pop
lock
ins
push
add
inc
shl
pop
jg
fsub
push
mov
jmp
lea
add
push
or
adc
div
mov
inc
movs
fmul
or
shr
pushf
add
jno
call
pop
add
pushf
jne
mov
mov
and
push
iret
in
adc
xor
cmp
mov
imul
inc
inc
xchg
pop
ds
push
mov
adc
jle
jg
push
jle
je
and
js
mov
adc
into
je
call
cmp
add
cli
fsubp
(bad)
fisttp
or
inc
loop
and
add
dec
mov
jo
imul
nop
das
mov
add
and
xor
pop
add
add
ret
dec
mov
adc
add
sub
fldenv
xchg
(bad)
push
ffree
jb
cmp
add
into
or
call
push
je
push
mov
push
add
aam
pop
scas
xchg
push
(bad)
or
push
sub
pusha
(bad)
je
add
and
cmp
and
arpl
arpl
and
sbb
pop
inc
inc
dec
and
xchg
test
imul
add
sub
cmp
pop
pop
or
pop
dec
mul
and
das
rcl
in
sub
jne
retf
mov
clc
rcl
enter
fstp
or
js
jne
add
pop
push
pusha
adc
out
cdq
inc
fnstsw
fisttp
test
scas
inc
outs
and
pushf
dec
or
mov
xchg
daa
add
jb
mov
push
lock
jge
ror
sbb
add
mov
add
shr
mov
lea
movs
add
jmp
xor
cmp
add
in
cmp
xor
mov
jg
jecxz
mov
das
xchg
cs
lods
cmp
pop
inc
mov
or
jge
mov
ins
mov
test
je
lds
sbb
lock
or
fild
mov
push
push
not
and
movs
sub
add
jae
nop
cld
push
mov
(bad)
jb
popa
mov
add
repz
push
and
adc
ja
sub
pop
stos
cmps
or
scas
movzx
mov
adc
stos
cmp
ret
xor
mov
sub
xchg
mov
popw
ret
cmp
dec
xor
push
test
mov
ss
sub
add
or
jge
jne
adc
mov
push
ins
jmp
jb
lods
xor
pop
fild
xor
loope
sbb
inc
add
mov
mov
test
sbb
add
mov
mov
xchg
mov
fwait
mov
inc
cmp
mov
ins
adc
repnz
fwait
push
les
outs
cmc
test
pushf
cmp
and
and
xchg
fnstsw
aam
xchg
fadd
push
inc
sti
das
add
xchg
sub
add
add
adc
outs
mov
or
retf
dec
mov
adc
mov
mov
imul
inc
jmp
inc
dec
jne
out
scas
jle
mov
cdq
lea
jle
ret
jb
ja
mov
out
dec
pop
mov
sbb
nop
sub
add
cwde
xor
mov
jmp
mov
test
mov
cmp
jno
and
cs
pushf
jmp
cs
je
sub
mov
pop
cld
not
fcomp
cmp
fs
sub
popa
add
push
or
pop
push
add
ja
inc
push
in
loop
adc
(bad)
mov
push
loopne
adc
inc
mov
push
sahf
or
mov
bound
push
mov
cmp
rcl
int3
sub
call
or
push
push
inc
dec
dec
je
ins
cmp
mov
sub
sub
sbb
or
push
imul
dec
push
popa
cld
adc
sub
add
xor
push
rcl
add
fisubr
push
aam
jmp
add
or
dec
push
push
push
inc
popa
fsubr
repnz
fist
pusha
gs
jne
je
fdivr
ja
add
dec
fidivr
or
stos
push
loopne
push
xor
add
sub
pop
leave
xchg
mov
or
add
sbb
mov
mov
or
add
sbb
imul
test
pop
cdq
xor
ins
and
xchg
int3
push
stc
call
into
or
(bad)
or
xchg
sbb
adc
push
dec
daa
mov
es
imul
sub
jl
push
outs
add
lds
sub
or
xchg
ins
jno
push
dec
aaa
sub
push
cmp
or
sbb
mov
inc
movs
push
dec
or
xor
add
dec
mov
or
dec
imul
into
imul
sub
mov
ins
test
or
lea
mov
jno
adc
dec
fucom
xchg
push
or
jl
pop
(bad)
dec
imul
enter
ja
mov
das
jecxz
xchg
cli
(bad)
(bad)
call
or
pop
pop
sub
(bad)
or
dec
xchg
push
mov
mov
cmp
je
(bad)
into
add
sbb
mov
sub
daa
mov
mov
in
cmp
fucomip
inc
(bad)
fadd
das
mov
push
or
and
mov
fdivr
and
daa
push
gs
inc
or
adc
mov
mov
xlat
mov
jbe
push
add
push
in
dec
push
outs
bound
dec
mov
cwde
aad
data16
fisttp
jns
rcr
mov
bound
daa
fist
fidiv
jbe
je
pop
mov
xlat
test
cli
call
je
jge
sbb
ret
xchg
out
outs
xor
or
jmp
mul
fist
out
jbe
dec
xor
jne
xor
pop
add
js
in
fiadd
mov
add
pop
or
xchg
and
js
shl
mov
push
test
setne
pop
sub
fs
sub
cmp
inc
xor
and
add
pop
sub
out
lea
inc
(bad)
add
je
jmp
mov
or
jae
imul
cld
adc
jmp
rol
pop
or
test
hlt
inc
jb
dec
cmp
ja
fcom
mov
scas
xchg
test
scas
pop
inc
dec
mov
daa
dec
scas
lods
mov
sbb
ins
stos
cmps
stos
js
cmp
adc
das
add
(bad)
cmp
xchg
mov
out
push
lods
mov
in
test
inc
jge
scas
into
cli
push
fcmovb
sbb
xor
xchg
cmp
mov
mov
sbb
test
adc
call
call
jnp
dec
fmul
ins
fld
aaa
sbb
sbb
fadd
cmp
pop
fild
mov
add
cmp
out
adc
lock
xchg
mov
(bad)
adc
push
add
xor
mov
push
pop
pop
repz
(bad)
sbb
cmp
or
cmp
inc
shr
mov
add
lock
retf
movs
sbb
aad
push
xchg
hlt
adc
push
and
add
dec
pop
mov
test
inc
xor
xchg
mov
adc
push
pop
sahf
popf
pop
pusha
(bad)
gs
cmp
jne
xchg
jne
xor
inc
pop
or
and
ret
xor
loope
and
outs
mov
dec
inc
xchg
rcl
pop
add
jp
cmp
(bad)
mov
mov
shl
or
pop
or
jecxz
or
rcl
stos
push
sub
sbb
arpl
mov
fcomp
bound
aad
add
inc
cmp
jp
xor
cmp
and
push
pop
inc
jmp
test
cmps
sbb
xchg
in
nop
loopne
dec
push
lahf
je
pop
aaa
cwde
or
add
sbb
xor
mov
scas
fidiv
ss
lahf
je
xchg
sbb
cmp
push
lds
xchg
mov
aas
mov
(bad)
inc
adc
call
xor
not
and
xchg
je
mov
sub
fnstenv
mov
dec
or
or
movs
inc
mov
aas
add
aas
push
jno
dec
fst
retf
or
sub
mov
sti
add
cmp
cmp
sbb
jae
jb
iret
aas
sub
aas
xor
dec
push
pushf
pushf
xor
dec
push
mov
sub
pop
and
or
xor
mov
pop
cdq
or
add
loopne
sub
add
adc
jo
mov
call
adc
ret
out
inc
xor
retf
cli
sub
out
push
aam
adc
(bad)
cmp
adc
sub
cmp
maskmovq
test
add
sar
inc
mov
imul
movs
mov
pusha
mov
sub
or
or
loopne
and
add
push
sbb
adc
clc
loope
(bad)
aaa
sbb
mov
fmul
not
add
aaa
xor
add
push
outs
xor
and
inc
and
sub
jo
pop
stos
fcompp
push
mov
dec
inc
or
test
in
jmp
mov
xor
sbb
mov
jb
out
jl
test
jle
fstp
rcl
jo
push
adc
sbb
mov
jo
push
and
add
adc
cmp
add
stos
adc
sbb
pusha
xor
sub
call
popf
push
nop
shl
test
xlat
test
inc
aaa
jmp
push
mov
xchg
dec
into
(bad)
fdivr
push
inc
sbb
in
inc
jbe
add
shr
push
je
sub
rcl
les
inc
hlt
jl
inc
sbb
arpl
int3
push
add
das
mov
add
fs
sbb
xchg
js
fst
fnsave
mov
or
push
rcr
aaa
inc
jne
ins
jns
bound
and
jbe
mov
inc
ins
je
inc
add
call
add
jb
xchg
ret
pop
add
xchg
jo
sbb
lods
cmps
sahf
add
repz
fisttp
aas
push
jb
outs
jae
add
ret
mov
movs
loope
sbb
out
sti
mov
add
xchg
dec
outs
jbe
imul
jae
mov
push
sar
sbb
dec
outs
push
popa
ins
jne
outs
jb
ins
(bad)
add
push
adc
dec
xlat
mov
gs
imul
cwde
pushaw
inc
dec
push
(bad)
jb
sub
(bad)
mov
inc
push
movs
jae
push
outs
imul
inc
inc
dec
out
dec
fbstp
xor
jb
je
xchg
shr
fsubr
es
ffree
inc
sub
nop
sbb
ins
sub
sahf
inc
mov
(bad)
dec
outs
gs
jae
call
xor
pop
fidiv
and
ins
mov
pop
adc
or
push
inc
add
pop
xor
cs
outs
dec
push
or
add
inc
pop
popa
pop
mov
rcl
jl
in
cmp
int3
fnstcw
pop
add
xor
mov
dec
push
loop
cmp
xlat
mov
icebp
mov
std
push
call
ins
sbb
in
test
sbb
aas
ror
adc
mov
add
imul
jb
rcl
sbb
icebp
xchg
dec
or
les
ins
mov
mov
add
or
or
mov
jb
inc
pusha
hlt
cs
lea
clc
mov
add
pop
(bad)
neg
popa
out
rcr
xchg
out
dec
add
adc
pop
push
push
rol
jb
iret
mov
push
push
mov
inc
call
push
mov
adc
sbb
aaa
mov
pop
push
aaa
or
rol
pop
fistp
push
ss
mov
or
mov
movhps
inc
inc
cwde
xlat
popf
push
or
dec
popa
ins
jns
mov
gs
inc
dec
mov
ins
jb
or
mov
rol
jo
icebp
or
add
mov
out
and
fadd
rol
jne
or
inc
cmps
cld
fadd
sbb
mov
inc
js
aas
cmp
inc
(bad)
or
add
adc
pop
or
inc
mov
jmp
xchg
and
dec
sbb
push
adc
dec
int3
into
jnp
pop
pop
test
cmps
clc
daa
popw
add
es
nop
inc
push
sbb
cmp
aam
daa
or
push
jb
adc
inc
sbb
mov
cli
pusha
xor
paddsb
cmp
sub
dec
add
fnstenv
cwde
jae
sbb
imul
push
inc
enter
push
xchg
ret
sbb
dec
xor
es
adc
xchg
and
adc
mov
loopne
adc
adc
dec
int3
sub
cmp
inc
lds
repz
push
(bad)
in
test
or
adc
add
outs
mov
mov
and
pushf
out
sahf
mov
retf
jecxz
adc
outs
loopne
pop
add
dec
ss
adc
xchg
(bad)
loop
adc
aas
add
cwde
dec
mov
push
cmps
adc
sbb
fadd
imul
pusha
or
add
fld
cmps
es
cmp
push
hlt
lahf
sbb
ss
call
test
push
lahf
mov
sub
add
out
cmp
dec
mov
add
mov
push
push
push
adc
push
xor
fcomp
or
push
in
daa
daa
mov
pop
pop
pusha
pcmpgtb
lods
es
daa
jo
jge
inc
out
setl
pop
pop
sub
and
and
jp
ja
inc
push
jae
shl
sub
inc
adc
add
gs
outs
jne
push
rol
push
jg
inc
in
cwde
fstp
ins
jo
adc
dec
or
mov
add
gs
fistp
into
faddp
pop
scas
push
inc
inc
outs
fs
loopne
clc
or
outs
call
and
jle
or
inc
test
(bad)
fs
jb
or
pop
xor
fistp
inc
push
mov
mov
sbb
add
das
imul
inc
test
fild
push
popa
jae
ja
jb
lahf
or
push
sbb
inc
daa
loopne
div
daa
push
imul
call
cmp
dec
arpl
int
or
pusha
and
push
jb
js
and
fmul
aaa
dec
and
jmp
sbb
test
sbb
ins
jo
jae
sub
outs
xchg
daa
push
dec
fcomp
or
dec
xor
mov
mov
rcr
sti
mov
xor
push
mov
ja
sub
faddp
mov
sub
mov
inc
cmp
dec
or
(bad)
mov
mov
ss
pop
out
xor
clc
test
dec
gs
ret
pop
daa
shl
fs
popa
je
in
call
dec
outs
xlat
xor
neg
ds
add
out
int3
dec
cmp
mov
ss
mov
adc
ins
lahf
adc
sub
shr
adc
sub
jle
push
add
ror
stos
js
ret
push
xor
xchg
adc
xor
cmp
imul
add
dec
add
jle
cs
jmp
push
out
stc
(bad)
fimul
push
add
push
inc
cmp
mov
pop
stos
(bad)
mov
fnstsw
add
adc
lea
loop
aas
dec
sub
adc
jge
pop
imul
aaa
add
push
adc
add
push
xor
shl
cwde
sbb
or
sbb
sub
dec
push
add
fsub
cmp
add
pop
jl
mov
loopne
std
xor
adc
pop
ffree
rol
nop
nop
popa
aad
lods
lea
cmp
rol
pop
xor
inc
aad
lods
rcl
pop
dec
pop
or
add
xor
adc
push
mov
mov
xor
mov
and
mov
add
outs
or
push
push
push
push
fsub
dec
jg
or
imul
mov
inc
ss
cmp
or
and
cmp
je
arpl
sub
clc
push
cmp
or
add
push
jb
pop
pusha
push
popa
add
adc
mov
pop
push
adc
int
iret
sbb
dec
mov
mov
stos
or
ret
ins
xchg
add
fst
test
jl
dec
mov
or
push
mov
jge
or
jo
sbb
leave
pop
push
scas
pusha
mov
inc
inc
add
xchg
push
sub
mov
add
add
cmp
or
jo
js
jne
add
dec
adc
retf
push
fs
xchg
pusha
pop
or
mov
loopne
dec
fsubr
sub
popa
or
dec
out
js
test
dec
inc
xchg
or
push
js
inc
pop
sbb
xor
mov
push
pop
push
in
rol
ret
or
mov
ret
mov
les
lahf
xchg
rol
dec
inc
jnp
or
mov
dec
pop
adc
js
xor
test
rcr
cmp
shr
and
pop
test
or
jmp
mov
fs
fild
test
cwde
mov
or
inc
add
ins
ret
(bad)
mov
in
push
dec
rcr
sub
out
aas
pop
enter
pusha
xchg
adc
xor
jp
iret
or
outs
es
inc
icebp
or
push
or
rcr
pop
dec
or
jae
inc
cmc
ret
or
push
xor
fmul
jne
push
icebp
or
cmp
push
popa
push
jmp
add
add
(bad)
add
jmp
dec
test
mov
or
push
adc
xor
mov
stc
cs
and
dec
add
cmp
mov
inc
das
and
sub
xor
jb
push
jp
jb
xor
shr
sub
xor
fimul
jl
push
pop
add
and
pop
sub
dec
divps
inc
pop
nop
add
cmp
adc
stos
rol
sbb
push
dec
cmp
cmp
(bad)
rcl
xlat
cmp
pop
popf
repz
xor
je
dec
inc
test
adc
push
loopne
add
push
test
je
add
in
outs
lock
mov
add
es
inc
add
jg
outs
push
or
inc
sbb
test
je
cmp
pop
scas
add
add
pop
pop
pop
ret
push
mov
fadd
and
mov
push
cwde
ss
mov
and
repnz
xchg
adc
xchg
mov
movzx
fmul
mov
push
mov
xchg
mov
xchg
outs
aam
retf
cdq
mov
mov
movnti
mov
and
or
adc
cmp
or
adc
loop
or
add
idiv
add
pop
out
add
xor
inc
cld
popa
add
and
add
adc
xor
xor
call
imul
mov
dec
add
push
loope
test
loope
(bad)
retf
stos
push
push
push
or
or
sbb
and
dec
add
in
add
test
adc
loop
(bad)
cmp
or
and
xchg
repz
lock
pop
pop
dec
add
cmp
pop
(bad)
push
ja
cdq
adc
inc
add
push
mov
(bad)
(bad)
retf
mov
mov
lea
mov
unpckhps
test
adc
jo
int
pop
shl
add
cdq
cmp
pushf
push
ret
fsub
inc
jnp
sbb
push
pop
jo
or
iret
and
ret
ds
xor
fst
es
jo
dec
xchg
add
or
xor
and
test
loopne
xor
mov
add
cli
fwait
in
add
push
into
xor
stos
dec
pusha
jo
test
and
add
test
add
sbb
xchg
sbb
stc
xchg
movs
push
push
push
out
add
je
jo
push
loopne
adc
inc
or
pusha
mov
(bad)
mov
dec
test
out
test
pop
loope
pop
or
inc
(bad)
mov
test
sbb
in
inc
call
pop
mov
ss
adc
adc
cmp
inc
hlt
es
dec
cmp
push
and
pop
ds
dec
xchg
clc
ds
and
mov
mov
push
loopne
je
sub
ret
loope
(bad)
ja
test
xchg
inc
and
dec
inc
xchg
(bad)
out
add
add
jle
and
push
push
add
mov
and
push
arpl
add
sar
(bad)
scas
cmp
cmp
sbb
add
sbb
jg
push
out
mov
or
xchg
inc
ja
mov
pop
dec
or
cmp
xchg
lea
xor
add
sub
push
mov
dec
repz
fmul
dec
adc
adc
sub
mov
fs
mov
push
mov
sub
lods
les
cmp
int
cmp
or
sbb
or
out
or
jb
sub
hlt
shr
cmp
mov
imul
rcr
sub
jb
mov
mov
jnp
aas
add
mov
mov
outs
push
or
push
aad
mov
js
inc
fmul
and
fld
xlat
sar
jns
adc
inc
bound
fwait
xor
imul
mov
mov
jns
dec
push
(bad)
ins
push
dec
xchg
cmps
and
mov
fdivr
pop
ins
cmp
mov
jl
pop
int
sti
(bad)
daa
movzx
mov
push
push
and
mov
push
jmp
aad
sub
dec
repz
aaa
xor
pop
sub
pop
dec
mov
nop
fcom
inc
inc
aaa
aam
mov
add
inc
xor
or
add
sub
int3
mov
imul
sub
daa
rcr
xor
inc
js
jne
inc
lock
imul
xchg
fcom
sbb
aaa
push
push
push
push
jl
push
out
and
loope
cmp
add
cmp
push
mov
fistp
movs
cmp
(bad)
push
clc
cmp
ja
shl
clc
mov
dec
fcomp
push
or
jne
push
xor
dec
xor
cwde
shl
mov
cmp
mov
in
fucomi
fldcw
(bad)
mov
inc
dec
mov
adc
daa
outs
adc
dec
outs
push
push
pop
mov
mov
jg
nop
jge
sub
popa
push
cmp
add
and
cmp
xchg
sbb
dec
xor
fistp
lock
dec
ret
ins
sbb
in
es
cld
lock
sbb
sbb
push
nop
arpl
inc
imul
mov
pop
sub
and
add
sbb
aas
sahf
outs
sbb
lock
das
ins
mov
inc
xor
push
mov
shl
dec
cmp
outs
cwde
pop
leave
or
aas
and
test
adc
xchg
outs
mov
xor
pop
scas
push
aaa
sub
int3
inc
lock
mov
push
xchg
sub
sub
pusha
(bad)
out
push
mov
test
je
js
add
test
lock
mov
sbb
sub
stos
ja
add
jmp
xor
lea
out
add
aam
lds
ins
ins
pop
and
and
pop
ret
xchg
cdq
test
outs
mov
or
mov
test
ret
add
pushf
fcom
push
das
and
cmps
out
sub
mul
mov
fs
movzx
daa
jl
test
cmp
push
push
ficomp
ja
das
push
mov
jmp
outs
enter
lea
or
mov
and
jg
or
inc
dec
push
ret
or
cwde
mov
add
sub
stos
mov
jg
stos
cmp
out
les
pushf
add
pop
and
ss
fadd
in
and
not
adc
push
push
or
call
pop
jl
cmp
mov
das
push
xor
bound
lock
jnp
ret
lods
cdq
cmp
rcl
jne
cli
adc
je
stos
pop
cmp
dec
shr
rol
dec
adc
push
lahf
rcl
aam
inc
nop
into
mov
mov
adc
stos
enter
pop
push
das
jl
push
js
and
nop
lea
mov
nop
fwait
sub
add
xor
inc
xor
or
ret
ror
xchg
fisub
je
mov
shl
les
or
mov
sbb
iret
ret
mov
cmp
sbb
neg
es
xor
push
or
adc
mov
jnp
mov
cmp
inc
mov
in
xchg
xchg
clc
mov
push
cmp
push
adc
mov
sub
aaa
add
cmp
xchg
mov
es
data16
pop
xchg
jmp
je
rol
mov
movs
adc
push
shr
mov
iret
aad
adc
adc
adc
imul
inc
cmp
push
add
adc
das
addr16
push
daa
sub
add
xchg
jnp
shl
inc
nop
mov
push
pop
cmp
or
cwde
outs
or
xlat
clc
or
dec
add
ss
mov
push
or
cs
imul
imul
shl
ret
mov
sbb
fdivr
sbb
adc
push
mov
cs
mov
mov
add
and
pop
(bad)
arpl
cmc
push
lock
cmp
call
enter
sbb
bound
dec
jnp
or
popa
repz
cmps
dec
dec
out
pop
or
enter
mov
mov
loop
or
out
adc
mov
fidivr
and
mov
push
and
sbb
jp
ins
sti
add
xlat
dec
sub
arpl
dec
je
xor
push
(bad)
cmp
xor
data16
jmp
movs
push
or
jo
mov
ror
jne
std
adc
outs
stos
nop
push
add
push
popa
cmps
das
xchg
mov
dec
sbb
mov
pop
rcr
push
jp
dec
cmps
dec
sbb
push
dec
test
cdq
pop
pop
dec
sbb
pop
cwde
fild
cmp
pushf
mov
and
mov
retf
pop
pushf
loop
ins
cmp
sbb
js
add
sbb
fwait
loop
jo
test
inc
adc
lea
pop
sbb
mov
lock
pop
push
mov
pusha
cdq
and
jp
test
lock
test
or
add
test
add
pop
imul
(bad)
inc
sbb
imul
push
enter
xor
jbe
lahf
ins
popa
cmc
cli
sub
add
nop
int3
fmul
fsub
movs
xchg
mov
jno
adc
mov
enter
cmp
loope
sahf
cmp
jle
cmp
out
xchg
pusha
ss
pusha
ret
fsubr
sub
xor
adc
cwde
(bad)
xchg
nop
pop
mov
adc
pusha
jns
cmp
jnp
xor
adc
daa
in
mov
jnp
inc
push
inc
push
mov
ss
inc
sahf
push
mov
in
mov
sub
xor
add
mov
and
loope
ds
or
or
push
mov
jne
pop
pop
cmp
popa
inc
add
mov
xor
bound
push
dec
fsubr
stos
inc
stos
cmps
mov
and
outs
inc
add
lods
sub
mov
mov
movs
push
test
add
stc
enter
or
and
push
ror
cwde
lods
mov
daa
je
sbb
mov
loopne
cs
cmp
sbb
or
adc
add
test
stc
sbb
push
je
pop
cli
iret
xor
and
xor
push
fld
stos
and
mov
add
aaa
jle
jne
push
pop
pop
mov
sahf
xchg
loop
dec
cld
jne
das
test
sub
jmp
popa
shl
cmp
popaw
and
sub
push
mov
mov
aad
or
xor
shl
in
push
cmp
pop
sub
jle
jmp
cmc
dec
mov
xchg
mov
jge
jne
or
push
iret
push
test
pop
pop
add
jmp
out
arpl
push
add
adc
xchg
mov
sbb
shl
mov
xor
jp
inc
adc
mov
js
out
add
pushf
mov
xor
or
xor
add
and
sub
adc
mov
xor
jo
mov
(bad)
aam
push
cmps
xor
rcr
stos
loop
pop
push
movs
xchg
cli
fimul
or
push
cmc
aaa
push
push
add
ins
inc
jo
xlat
push
jb
adc
gs
fs
or
aam
outs
sbb
xchg
jp
and
xchg
mov
cmp
ret
sub
ficom
sbb
imul
push
xor
sahf
xor
data16
mov
jmp
cmp
add
or
test
push
test
int
cmp
mov
dec
or
pop
adc
add
sar
test
mov
or
fmul
pop
push
je
inc
fdivr
push
sbb
daa
dec
clc
aas
push
and
fisttp
fnstenv
add
scas
jmp
cwde
dec
push
dec
call
dec
cmp
xchg
retf
dec
call
or
aam
mov
fadd
jne
inc
mov
arpl
sub
gs
shl
mov
in
ret
xor
jmp
out
xor
pushw
sbb
cwde
rcl
adc
push
inc
ret
and
pop
sub
xchg
gs
mov
and
hlt
pop
(bad)
(bad)
pop
mov
lea
fcom
stos
push
into
mov
cmp
enter
adc
lock
cmp
cmp
enter
xor
mov
js
pop
lods
push
imul
mov
imul
jne
xchg
sbb
adc
mov
in
jp
cmp
push
cmp
add
mov
mov
in
mov
or
or
lahf
sbb
dec
jle
lods
sbb
sbb
hlt
cmp
sub
push
call
pop
mov
(bad)
retf
stos
ret
or
push
mov
or
lods
jae
xor
jecxz
cmp
je
out
push
in
(bad)
out
sbb
jae
fcomp
inc
pop
pop
push
pop
aam
add
in
adc
popa
lock
sub
dec
push
mov
jbe
retf
and
jp
push
mov
jge
jecxz
push
push
loopne
xchg
or
add
loopne
ss
fdiv
aam
pusha
(bad)
sub
mov
jbe
push
inc
pop
pusha
and
xor
imul
ret
jnp
jbe
mov
shl
mov
es
adc
lods
mov
cs
lods
jns
sub
adc
or
movs
lods
xlat
sbb
nop
dec
in
adc
test
movs
cmp
mov
loope
in
pop
cmp
movs
mov
sbb
or
cmp
inc
push
add
fild
xor
fimul
jo
adc
xchg
loop
jno
cwde
xchg
lods
aam
push
cmp
jnp
sub
pop
enter
add
and
push
pop
sub
xor
(bad)
adc
jbe
inc
push
sbb
movhps
popa
xchg
pop
mov
jo
fistp
cmp
mov
pop
and
enter
cmp
adc
add
mov
add
cmp
adc
lahf
cmp
adc
retf
inc
push
pop
xor
mov
rcl
dec
jmp
pop
add
or
push
add
push
and
jbe
imul
loop
(bad)
sbb
mov
lods
push
sub
pop
mov
adc
or
aaa
or
int
cmps
in
loopne
gs
(bad)
leave
in
je
fiadd
inc
adc
mov
loope
push
das
(bad)
lock
adc
(bad)
std
mov
gs
push
mov
js
jne
mov
jmp
mov
pushf
sbb
pop
not
out
adc
rol
jnp
loope
push
xchg
rol
daa
in
add
and
inc
and
jo
pusha
pop
hlt
mov
lock
adc
sbb
das
gs
or
je
pop
lods
add
jecxz
or
cmp
sub
stos
dec
out
add
add
inc
or
or
aas
push
ins
push
mov
popa
push
ret
lahf
fdivr
add
mov
push
mov
adc
inc
or
cmp
mov
bound
call
jo
sbb
adc
inc
test
cmp
mov
movzx
inc
shl
push
bound
ins
inc
clc
fcom
and
xor
fs
or
push
jmp
cmp
jg
jne
loope
(bad)
in
ds
jo
cmp
jb
(bad)
and
test
lods
ret
in
jg
add
adc
jne
mov
mov
sub
in
in
jge
push
sbb
cmp
arpl
mov
das
and
xchg
xor
clc
add
call
fmul
mov
stos
xor
and
loope
mov
inc
fsubr
je
jb
mov
scas
pop
sbb
or
aaa
or
pop
inc
pusha
je
mov
sbb
div
les
jo
add
and
stos
inc
call
cmp
packssdw
cmp
sub
xlat
call
and
inc
mov
mov
mov
jae
nop
push
lods
inc
push
mov
loopne
sbb
dec
setne
pop
dec
adc
clc
rcr
push
dec
and
outs
test
stos
xlat
xor
mov
movups
je
imul
imul
lock
(bad)
inc
popf
outs
and
aas
or
sub
inc
fimul
fistp
je
ins
add
cmp
imul
fs
fistp
sbb
cmp
in
jbe
mov
add
pushf
pushf
fcomp
dec
or
adc
shl
push
in
fistp
inc
and
adc
leave
sub
iret
repz
ds
mov
mov
dec
xor
jge
nop
push
xchg
or
lods
rcr
cs
fstp
adc
add
fcomp
ds
daa
js
ror
xor
xor
sbb
dec
push
pushf
jge
out
mov
or
push
mov
and
cmp
ret
mov
push
pusha
pop
data16
pop
sti
push
lods
sbb
or
enter
add
jmp
ret
pop
jo
rcl
inc
sti
xchg
push
inc
push
jb
js
and
icebp
outs
test
inc
push
jae
dec
pusha
gs
out
fcomp
jae
outs
jb
pushf
adc
inc
mov
or
imul
add
stos
inc
call
push
inc
test
fwait
mov
push
ja
jb
xor
ins
xor
xchg
xchg
mov
push
test
dec
out
push
jo
mov
lock
add
or
pop
xor
gs
data16
or
push
push
inc
dec
inc
mov
sbb
je
or
xchg
dec
add
fs
shl
push
inc
push
je
xchg
add
inc
or
test
data16
outs
jns
pusha
test
mov
pop
sub
inc
gs
dec
or
adc
inc
xor
add
xor
mov
add
test
sahf
stos
ins
or
push
fldcw
out
cmp
imul
je
sbb
or
pusha
loope
in
dec
(bad)
mov
add
addr16
inc
sub
push
add
cmp
ins
in
fadd
mov
push
retf
push
aaa
mov
ins
es
push
pop
and
dec
and
or
test
aad
push
push
test
je
adc
outs
lock
sbb
sbb
fsubr
(bad)
adc
hlt
mov
mov
test
ja
ficom
sub
or
enter
fistp
(bad)
fbstp
jo
fs
push
add
fnstcw
sub
and
movs
je
std
mov
pop
jle
adc
loopne
daa
sahf
js
fsub
das
adc
jne
(bad)
aaa
fs
call
inc
lods
fimul
push
ds
daa
mov
push
adc
or
stc
es
pusha
and
daa
icebp
imul
pop
sbb
adc
sub
cmp
call
nop
inc
sub
test
sub
dec
dec
cs
or
and
les
std
popa
(bad)
daa
push
inc
stos
les
dec
pop
(bad)
pop
sbb
js
mov
aaa
lds
push
xor
xchg
xchg
mov
sbb
mov
mov
fs
fdivr
mov
mov
or
ret
dec
fnsave
lahf
mov
push
jnp
add
das
add
arpl
or
mov
add
mov
jl
fld
jl
push
jmp
cmp
dec
call
outs
mov
dec
sbb
cmp
loope
scas
or
mov
sbb
or
(bad)
mov
mov
hlt
outs
daa
lea
mov
mov
ror
jb
rol
cli
dec
sbb
jmp
add
mov
xor
xchg
xchg
(bad)
stos
add
add
mov
data16
out
add
push
xor
push
sbb
fsubrp
pop
adc
out
in
lahf
adc
cmp
inc
push
dec
and
popa
je
sub
or
dec
pop
test
ds
fdivr
add
push
pusha
mov
pop
push
inc
add
or
pop
xlat
je
or
sbb
xlat
fnsave
jbe
cwde
lods
xlat
add
imul
shl
pop
inc
inc
gs
pop
cmp
test
out
or
jne
push
outs
jae
add
jge
sbb
out
inc
mov
sbb
sub
or
adc
sub
popa
pop
clc
add
inc
sbb
push
bound
or
adc
sub
test
or
dec
test
inc
outs
jne
je
stos
xchg
sahf
std
mov
je
bound
or
outs
out
lahf
sets
pop
or
add
outs
or
cmp
popa
or
loopne
lds
ror
ss
lea
retf
addr16
add
add
dec
pusha
mov
or
arpl
fcomp
dec
jmp
cmp
dec
rcl
jb
jmp
inc
ret
lea
fdivr
mov
pop
adc
xchg
add
div
inc
and
sbb
push
add
inc
nop
or
push
or
(bad)
pop
xor
adc
rcl
ins
mov
cdq
inc
push
pop
es
adc
mov
ror
adc
inc
adc
add
adc
and
sbb
push
or
mov
inc
dec
sbb
mov
sar
scas
or
cmc
lods
cmp
scas
es
push
aam
jl
call
adc
jmp
aaa
clc
cmp
jl
jmp
inc
or
xor
les
out
add
aas
mov
les
aaa
int
mov
mov
adc
push
adc
popf
rol
inc
jmp
xor
data16
loopne
cmp
ret
mov
(bad)
jmp
lock
mov
jg
push
fdiv
aaa
xor
push
inc
stos
bound
sub
mov
dec
dec
pop
add
sbb
pusha
jle
mov
adc
jns
pop
mov
mov
mov
push
mov
test
mov
outs
cli
and
pop
jnp
sbb
stos
ucomiss
mov
rol
mov
or
mov
ins
sub
imul
dec
out
push
cmp
outs
or
xor
jmp
sub
dec
fisubr
push
sub
cmp
lock
sub
rcr
movs
jnp
jmp
add
or
call
push
cld
mov
ret
mov
iret
hlt
scas
push
nop
pop
adc
dec
outs
jbe
inc
jns
inc
jb
popa
jns
outs
popf
push
cmp
dec
movlps
dec
sbb
imul
push
add
xchg
adc
bound
arpl
mov
je
jo
adc
inc
sar
push
jmp
outs
or
imul
dec
mov
mov
popa
mov
push
dec
jne
add
clc
jns
gs
je
std
lods
dec
fs
or
push
icebp
loope
movs
in
dec
mov
inc
add
dec
ja
jmp
mov
dec
not
adc
push
add
xchg
dec
popa
sar
mov
or
ins
lock
ins
das
fadd
call
mov
outs
dec
sbb
gs
bound
push
cs
loopne
and
iret
jae
dec
imul
push
mov
sbb
imul
and
(bad)
data16
jb
fnsave
adc
xchg
enter
inc
sbb
enter
inc
jb
and
or
sbb
cmp
int3
cmp
cmp
xor
cmp
data16
push
push
pop
push
es
das
mov
shr
es
mov
mov
scas
sbb
scas
cmp
jmpw
fcmovbe
rol
les
pop
aad
fidiv
mov
sbb
inc
or
test
js
add
push
clc
xor
add
adc
ret
out
sbb
push
fmul
addr16
xor
push
mov
shl
sbb
imul
scas
bound
es
pusha
sub
jecxz
mov
fwait
daa
push
jecxz
jp
mov
fcom
int
sub
jp
in
xchg
push
inc
outs
bound
sub
push
outs
jl
int
or
and
js
sbb
adc
daa
or
push
mov
out
sbb
es
ins
and
jo
arpl
push
stos
cmp
xor
push
or
js
and
add
sbb
or
or
xor
and
js
or
stos
mov
fild
or
push
mov
push
mov
adc
pop
jmp
add
pop
mov
mov
(bad)
jno
cmps
push
xor
xor
push
dec
add
pop
push
inc
xlat
call
imul
mov
mov
ret
push
je
cmp
push
fsubr
pop
jnp
scas
xchg
test
nop
sbb
push
test
push
add
push
xor
les
inc
and
mov
fld
data16
imul
or
mov
into
sub
sub
or
leave
inc
mov
dec
push
and
or
mov
ins
scas
fcmovnu
add
push
je
add
push
adc
mov
jmp
lock
mov
pop
cwde
rol
dec
jb
dec
jle
xor
jne
push
outs
popa
addr16
sar
push
inc
inc
pop
outs
enter
cld
add
or
cmp
push
cmp
in
(bad)
pop
jo
jo
sub
xor
xchg
push
jge
fidivr
or
add
push
sbb
fwait
inc
std
mov
push
dec
push
mov
xchg
mov
add
fst
pop
outs
das
push
sti
add
push
mov
dec
push
xor
push
and
shl
inc
fdivr
xlat
mov
sbb
xor
jle
push
aaa
or
push
fadd
push
xchg
jae
xchg
fsub
setp
jle
iret
jne
and
test
pop
jbe
jno
inc
inc
popa
jne
je
out
enter
sub
popa
cmp
or
inc
gs
das
push
ins
enter
das
into
popa
jae
dec
fadd
push
xor
xchg
sub
sub
fiadd
push
call
dec
push
xchg
stos
call
inc
das
js
add
inc
js
stc
es
cmp
push
jnp
add
aam
add
adc
sub
sbb
inc
jmp
jbe
daa
aas
sub
adc
adc
xor
(bad)
ds
inc
(bad)
pop
jecxz
pop
mov
sub
cwde
jbe
mov
cs
pop
jno
push
jnp
sub
inc
cwde
mov
xchg
mov
mov
dec
hlt
inc
dec
or
ret
lea
inc
icebp
jb
inc
mov
dec
retf
adc
add
dec
outs
dec
ret
(bad)
fadd
btc
mul
push
push
xchg
inc
xor
jo
add
inc
mov
pop
push
cmp
inc
sti
add
and
ss
add
push
xchg
mov
shl
adc
daa
jnp
aas
outs
fldcw
push
fst
fadd
shl
loop
imul
mov
push
nop
or
dec
jne
addr16
mov
daa
(bad)
out
sub
xor
mov
arpl
bound
or
dec
cmps
mov
push
iret
sub
fdiv
xor
in
das
pop
lea
lock
outs
arpl
sub
sbb
cwde
sub
aad
int
push
jne
sub
cmp
std
mov
(bad)
fs
fbstp
xchg
xchg
mov
inc
jg
ja
xor
je
js
les
push
ss
fmul
xchg
popf
and
es
mov
push
das
lds
add
push
push
pinsrw
dec
xor
jle
ja
pop
mov
pusha
or
push
daa
jge
push
mov
add
cwde
add
imul
push
stos
lock
inc
push
cmps
jo
outs
arpl
sub
popa
ds
or
test
cdq
or
das
js
adc
mov
adc
xor
cmps
inc
les
rol
or
cmp
push
mov
mov
int
pop
inc
push
fs
mov
push
sub
jne
pop
mov
fisttp
aam
jg
sub
ins
jne
push
xor
add
dec
mov
xor
push
jae
or
mov
or
rol
ja
sbb
push
js
push
sbb
sbb
or
sbb
xchg
imul
dec
jae
sub
rcr
xor
xchg
adc
lods
sub
dec
push
or
or
retf
mov
mov
push
add
and
cmp
fsub
sbb
pusha
pop
lods
push
pop
and
and
into
push
in
ins
add
push
daa
cmps
das
in
or
jo
lock
aam
mul
outs
or
icebp
sbb
ds
pop
jns
inc
push
xchg
xchg
fild
mov
shrd
repz
add
cmps
push
add
jmp
xor
pop
lea
cs
fisttp
mov
std
or
dec
add
fs
xchg
adc
push
jmp
push
mov
or
ds
aam
jb
xchg
pusha
or
js
xor
bound
dec
mov
jbe
fsubr
dec
data16
in
add
cmp
lock
hlt
inc
rol
mov
xchg
call
push
popa
rol
pop
and
enter
pop
cwde
push
pop
mov
adc
sub
int
fisubr
xchg
and
out
dec
int3
test
aas
or
jb
push
jae
push
adc
add
push
dec
scas
mov
(bad)
dec
xchg
cld
lods
xchg
mov
sbb
test
fidiv
add
mov
pop
xchg
(bad)
jae
or
inc
loop
add
jmp
adc
xchg
cli
add
dec
mov
and
int
in
jmp
sahf
ret
in
mov
mov
xor
xchg
shr
pushf
out
ins
retf
mov
cdq
adc
adc
mov
dec
jl
mov
jl
push
add
sbb
add
inc
shr
(bad)
sub
lds
(bad)
sbb
lea
dec
rol
fadd
iret
movs
inc
bound
jmp
retf
jne
inc
aaa
add
add
test
lock
popa
jae
inc
mov
les
push
jns
and
sub
mov
inc
mov
jo
lahf
adc
daa
inc
outs
psubb
add
xor
daa
daa
nop
mov
xchg
in
fdiv
shr
pusha
icebp
cmp
inc
or
push
push
pop
out
sahf
out
imul
out
sahf
xor
inc
dec
xchg
ja
or
inc
add
loop
push
leave
test
pop
cmp
push
dec
jle
add
int
push
adc
add
sahf
pop
clc
push
test
mov
std
in
fs
jg
lahf
(bad)
sub
loopne
push
psubb
test
add
jo
jne
or
cmp
addr16
or
sub
xchg
repnz
shl
test
imul
jne
shr
push
inc
dec
mov
push
adc
cmp
iret
add
mov
adc
ins
cs
add
xor
sub
jns
bound
fsincos
movs
sbb
add
ficom
dec
jnp
jo
mov
(bad)
push
inc
or
push
jmp
and
les
sbb
ss
arpl
pop
xchg
jle
(bad)
cld
inc
ins
popa
add
ds
outs
mov
aas
mov
jo
mov
inc
jp
pusha
out
add
add
idiv
outs
add
shl
sahf
cdq
mov
inc
pop
mov
loope
adc
shl
stos
add
or
test
or
xor
push
arpl
jg
mov
(bad)
push
call
jl
cmp
push
pop
add
pusha
into
jg
(bad)
or
cmp
and
fdiv
ret
scas
add
adc
dec
fsubr
fs
and
sub
ins
je
mov
or
jno
push
or
jae
cmps
gs
shl
loope
jb
outs
adc
mov
add
out
les
mov
mov
push
into
out
imul
cmp
out
jg
dec
out
das
jg
outs
push
jb
mov
je
adc
popa
xchg
fwait
xchg
loopne
loopne
stos
shl
(bad)
sbb
imul
sbb
inc
adc
ins
cwde
outs
mov
lahf
xchg
push
call
retf
imul
mov
adc
inc
mov
sar
outs
js
(bad)
mov
mov
repz
cmp
sub
test
pop
sub
jo
jns
push
icebp
(bad)
pop
icebp
lock
lahf
je
scas
adc
ret
jne
jo
mov
pop
jo
int
sbb
adc
cmp
adc
inc
and
xor
jmp
pusha
xchg
pop
adc
out
pusha
cmp
pmaxsw
mov
enter
push
inc
aas
mov
loop
add
or
pop
test
outs
leave
or
bnd
sub
mov
test
push
adc
inc
fucomi
jp
adc
adc
mov
outs
aas
jae
sub
adc
jae
jo
cmp
(bad)
jne
mov
or
dec
jg
popf
popf
jbe
sbb
sbb
aad
add
test
cmp
cmps
jae
cdq
inc
dec
dec
jo
sar
daa
cmp
retf
and
jmp
into
loope
icebp
push
fmul
pop
pop
mov
sub
or
dec
ja
pop
movs
clc
mov
adc
mov
scas
sar
and
femms
jle
inc
(bad)
mov
cmps
or
test
addr16
adc
aam
mov
add
adc
mov
pop
push
xor
int
enter
loopne
lds
sub
into
loopne
movs
in
sbb
in
fsub
add
xchg
aaa
push
xchg
xor
sbb
jle
ror
emms
pop
shl
mov
push
or
xchg
dec
push
inc
aas
pop
or
in
dec
(bad)
adc
sbb
test
push
pop
mov
push
jmp
push
nop
and
push
test
push
dec
or
ins
jo
lea
push
mov
or
push
inc
dec
imul
outs
retf
das
mov
or
jne
xor
inc
xchg
sub
pop
adc
add
jne
stos
cmp
fsub
dec
popa
mov
and
ret
jo
ret
test
xor
or
jne
icebp
xor
add
mov
das
(bad)
fiadd
cdq
bound
inc
cmps
lods
dec
gs
popf
xchg
mov
rcl
and
jne
sbb
mov
add
xchg
setne
mov
loopne
xor
sbb
clc
dec
jl
or
mov
dec
push
repnz
enter
scas
mov
data16
push
je
add
lods
xlat
add
push
fmul
fld
mov
mov
dec
call
inc
inc
jb
(bad)
cs
cli
imul
imul
inc
outs
int
xchg
pop
mov
add
xor
pop
jle
pop
xchg
push
lea
sti
repnz
pop
mov
push
mov
daa
nop
adc
xor
xchg
xchg
xchg
xchg
xchg
xor
leave
jnp
xchg
mov
xchg
cmp
jns
iret
arpl
inc
sahf
mov
daa
and
cdq
xchg
repz
enter
call
in
les
pushf
dec
les
xor
pop
popf
push
mov
jns
sahf
gs
lahf
dec
inc
sahf
mov
daa
and
icebp
cmp
jmp
stos
pop
(bad)
ret
jne
retf
es
mov
int
jo
daa
mov
dec
dec
fs
add
push
mov
dec
popa
cld
push
popa
add
inc
adc
aaa
lds
adc
pusha
sbb
mov
xchg
stos
or
or
adc
adc
cmp
ins
push
add
inc
gs
jbe
fdiv
(bad)
add
ins
add
mov
clc
mov
or
jo
loope
push
mov
add
sub
pop
inc
cs
mov
and
pusha
int3
mov
loopne
inc
mov
pop
sbb
ret
inc
outs
test
(bad)
pushf
and
fadd
outs
cmp
lds
pop
or
pop
outs
(bad)
push
mov
pusha
pop
pop
cs
mov
or
and
xor
or
add
sub
inc
push
stos
pop
fisub
sbb
test
dec
add
mov
jo
pusha
neg
mov
ret
sbb
clc
cdq
aaa
gs
(bad)
icebp
lea
sbb
popf
pushf
in
add
and
sbb
sub
ror
imul
call
add
sbb
or
ficom
mov
inc
addr16
sub
push
pop
aas
mov
inc
or
pop
test
loop
and
mov
dec
add
add
or
mov
mov
and
popa
ins
inc
inc
dec
or
adc
lds
mov
push
repnz
div
addr16
mov
popa
jbe
add
adc
std
add
adc
add
adc
add
stos
add
rol
(bad)
push
push
push
add
test
xor
dec
add
sbb
add
add
and
out
xchg
jecxz
xlat
bound
xlat
or
or
mov
ja
add
add
pop
cwde
(bad)
in
sbb
xor
daa
sbb
cmps
pop
in
iret
sbb
or
xor
(bad)
mov
add
push
jge
pop
bound
js
push
into
repz
nop
sub
and
loop
loopne
daa
push
add
or
mov
enter
jecxz
push
mov
add
test
repnz
adc
loope
or
lsl
scas
(bad)
fbld
sub
(bad)
movs
sbb
ror
pusha
ins
ror
mov
aas
mov
push
jo
aaa
and
pusha
xor
vmovhpd
add
mov
pop
jno
mov
mov
or
cmp
adc
sbb
adc
jmp
sbb
add
into
jae
ficom
outs
mov
push
rol
pop
dec
outs
loopne
add
inc
xchg
out
shl
xchg
inc
add
pusha
mov
jno
ret
jmp
add
mov
es
pop
loop
lds
or
pop
push
xchg
dec
dec
add
scas
dec
inc
sbb
inc
add
ret
cli
(bad)
and
push
add
or
inc
dec
sbb
mov
sub
icebp
ret
and
jb
mov
lods
or
mov
scas
enter
scas
adc
and
sbb
push
jae
int
mov
push
in
add
adc
cmc
xchg
js
jae
test
dec
sbb
mov
rcr
not
fimul
sbb
cmp
or
xor
ret
lds
outs
mov
mov
add
or
fwait
ins
xchg
pop
sub
(bad)
and
adc
mov
in
mov
bsf
push
and
popa
add
iret
cmp
push
mov
stos
xor
inc
or
out
or
sub
inc
and
pop
jge
add
pop
sbb
sub
pop
cmps
into
ja
mov
mov
imul
mov
adc
mov
push
bound
inc
(bad)
adc
cmp
push
sub
mov
xor
cdq
pop
dec
sub
add
dec
enter
add
mov
adc
lea
sbb
je
out
pop
fcomp
pop
not
or
add
clc
arpl
int3
retf
in
outs
and
inc
dec
mov
push
mov
jb
sub
pusha
adc
mov
fiadd
jg
sbb
or
imul
fiadd
and
or
jns
add
mov
call
sub
jmp
test
aas
cmp
or
fcomi
ins
xchg
aad
dec
mov
adc
outs
mov
ret
jp
js
adc
adc
shl
sbb
clc
les
push
jae
out
pusha
vmwrite
or
pusha
pop
fdivr
or
out
shl
addr16
pop
add
lods
test
add
or
xchg
xor
retf
les
mov
add
mov
shl
(bad)
and
dec
jae
add
xchg
je
dec
adc
fisttp
sub
adc
jb
push
imul
aaa
push
or
stos
xchg
and
dec
ins
call
das
add
ficomp
jne
mov
xor
jl
fdivr
cmp
push
inc
sbb
add
push
inc
and
inc
lods
xor
addr16
ss
mov
cmp
das
shl
imul
and
mov
xchg
rcr
fwait
outs
sbb
das
fwait
cmp
push
in
mov
push
push
push
mov
loopne
imul
mov
call
outs
out
push
popa
adc
inc
inc
jne
and
xchg
sub
js
nop
outs
xchg
outs
lock
mov
push
movs
dec
inc
push
test
add
dec
pop
aam
mov
rcr
push
in
lea
xchg
daa
ins
test
fs
mov
jb
xor
adc
sbb
lods
pop
xchg
rcr
scas
outs
enter
dec
dec
inc
popa
mov
es
and
dec
push
stc
add
popa
shl
pop
test
sbb
icebp
in
bound
dec
btr
test
pop
push
add
pop
add
icebp
push
cmp
imul
jmp
stos
push
cmp
lock
push
jecxz
push
or
mov
push
add
out
loopne
or
pusha
push
cmp
rol
dec
outs
ins
cmc
outs
mov
out
adc
or
push
ins
aaa
mov
call
or
mov
ins
mov
mov
jecxz
inc
sub
sahf
xor
js
ins
adc
and
jno
mov
mov
mov
fisub
lods
add
imul
xchg
pop
jle
dec
or
lea
pop
aas
cmp
es
fsub
pop
jl
push
add
mov
lods
add
or
sbb
jo
dec
add
sub
lods
or
cmp
out
test
mov
hlt
mov
ror
add
in
and
mov
(bad)
pop
sub
pushf
jne
sar
jmp
or
or
mov
frstor
sub
(bad)
fist
inc
sti
mov
adc
inc
inc
test
jmp
mov
adc
pop
or
enter
cmp
push
out
cdq
test
or
add
gs
add
sbb
fsubr
sbb
adc
inc
mov
std
jns
push
leave
add
jp
out
aas
add
arpl
ins
popa
fwait
push
and
mov
ret
cmps
iret
int3
xor
and
add
aad
retf
mov
xor
out
jne
add
sub
push
xchg
push
mov
dec
and
sbb
xor
add
mov
shl
lahf
mov
xor
adc
stos
add
sub
inc
cmp
mov
adc
test
mov
and
lods
loope
sbb
bound
in
int
mov
pusha
cli
fldenv
or
stc
xor
mov
ret
rol
add
push
xchg
mov
mov
mov
xchg
xchg
and
or
xor
mov
pop
(bad)
call
lods
or
jne
or
jmp
inc
jns
adc
out
add
and
push
enter
mov
inc
mov
inc
cmps
popa
inc
push
into
mov
jmp
idiv
add
test
xor
mov
mov
push
mov
jg
mov
cmps
nop
mov
add
and
inc
push
nop
fdiv
mov
ret
xor
jo
jbe
jg
(bad)
jg
push
mov
call
sbb
fsub
or
mov
add
mov
pop
mov
test
call
fdivr
or
(bad)
adc
pop
push
into
repz
ficom
rcl
push
into
cmp
pop
pop
xchg
push
jmp
int
or
push
inc
or
out
jp
test
data16
mov
loope
sub
icebp
xor
outs
add
or
jnp
pop
movups
(bad)
lahf
cmps
inc
jb
popa
adc
inc
or
sub
inc
xor
or
jg
push
sub
xor
les
mov
push
adc
movnti
inc
sahf
add
shr
inc
jns
push
cmp
pop
add
push
xchg
mov
jmp
enter
ins
xchg
inc
mov
dec
aaa
add
into
inc
loopne
jb
fcmovb
jmp
push
imul
(bad)
ja
or
add
clc
sub
je
push
or
xor
mov
add
ja
rcr
push
xchg
mov
pop
push
jle
inc
cmp
add
mov
fs
aas
or
vcvtss2sd
add
pop
and
inc
ins
outs
jbe
jbe
retf
arpl
xor
mov
and
arpl
jne
add
add
sti
xchg
faddp
push
or
add
add
sub
daa
ins
jbe
outs
jns
push
adc
add
mov
xor
jno
add
and
mov
pop
popf
popa
lds
dec
mov
repz
mov
out
jnp
in
es
das
xchg
push
xor
adc
or
mov
dec
sub
bnd
inc
outs
lods
outs
xchg
mov
lods
add
es
daa
and
int3
mov
add
cmp
mov
loopne
ror
ret
gs
stos
les
test
or
jle
hlt
leave
push
add
dec
add
sub
mov
mov
jne
push
sbb
mov
push
bound
mov
int3
mov
adc
xchg
fadd
add
inc
sbb
cmp
pop
ins
or
fld
push
pop
loopne
je
call
sub
stos
fidivr
and
jae
xchg
sbb
pop
pop
pop
and
or
mov
mov
add
mov
ja
es
push
mov
scas
inc
jo
fsub
sbb
(bad)
aam
pop
adc
inc
loopne
xchg
mov
inc
dec
ja
js
xlat
outs
jae
not
add
xchg
jge
add
sbb
dec
js
push
jns
xlat
ins
daa
pusha
ins
cs
ret
xor
loopne
int
fcomp
cmp
push
out
dec
cmp
mov
nop
loopne
ja
cmp
hlt
sub
add
mov
jo
add
inc
mov
popf
inc
popa
xchg
pop
xchg
(bad)
call
lahf
add
sub
pop
std
cmp
add
xor
arpl
lds
ss
or
pop
sub
out
adc
or
sub
dec
jo
fadd
je
into
cmp
das
add
add
mov
xor
stos
jb
sub
sub
out
inc
jae
adc
dec
add
lock
outs
add
popa
add
add
xchg
push
sub
out
mov
adc
out
or
iret
cwde
and
(bad)
iret
mov
inc
popa
and
xor
dec
pop
test
lahf
das
add
inc
sbb
out
ror
ss
aas
push
outs
cmp
gs
dec
or
(bad)
fild
push
mov
push
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
sbb
(bad)
fcmovnu
sahf
pusha
ss
je
sbb
call
call
mov
xchg
std
lahf
aaa
jnp
xchg
push
push
retf
mov
xchg
pop
pop
pop
pop
pop
pop
ret
mov
test
je
add
sub
lock
mov
xor
mov
sbb
mov
mov
movups
push
(bad)
fcmovb
test
pop
fidivr
xchg
cwde
jnp
push
mov
mov
cs
xor
mov
xchg
xor
mov
lods
jo
jle
adc
(bad)
ror
(bad)
fisttp
adc
rsqrtps
out
cld
xchg
sbb
repnz
push
push
push
mov
lock
call
cmp
jne
push
adc
add
(bad)
fsubrp
jbe
xor
add
das
out
pop
pop
pop
pop
dec
adc
fs
fneni(8087
in
paddusw
jl
jmp
jmp
nop
mov
jb
pop
or
enter
jp
mov
or
call
push
icebp
fisttp
lods
rcr
mov
mov
mov
mov
sbb
data16
outs
xchg
add
inc
sub
mov
fbstp
hlt
add
lea
jmp
mov
cwde
add
inc
inc
into
mov
ror
adc
push
fcom
pusha
add
add
jl
add
adc
mov
sbb
in
inc
cs
mov
jmp
inc
dec
jne
dec
dec
lock
rol
inc
xlat
jmp
or
test
out
mov
in
fs
add
hlt
mov
popa
add
inc
fs
jmp
jo
add
sbb
loope
loopne
mov
mov
inc
mov
jmp
and
rcl
test
xor
loopne
and
jecxz
and
jnp
cmps
ret
mov
xor
fwait
lock
pop
fdiv
or
sbb
pop
adc
pop
sbb
adc
jmp
ret
sbb
mov
test
pop
ss
jno
fidiv
mov
xchg
cld
aad
vandps
or
push
xor
in
dec
cs
add
leave
inc
cmps
jmp
(bad)
jmp
test
jl
inc
mov
add
cld
idiv
fisttp
or
push
fstp
inc
dec
jne
(bad)
pop
pop
pop
test
js
ret
pop
clc
push
sub
cld
movzx
jo
push
data16
sbb
test
or
or
outs
icebp
sub
mov
mov
mov
or
je
or
int3
cmp
fstp
xchg
cmp
dec
inc
cli
cld
imul
gs
jmp
mov
mov
fnsave
xor
(bad)
xor
push
icebp
mov
dec
pushf
inc
into
(bad)
jl
xor
sbb
adc
mov
pop
sub
sbb
icebp
sub
and
jmp
sub
sbb
ror
xor
and
push
cmp
outs
mov
data16
rcr
or
cmp
out
add
push
jmp
or
out
mov
add
js
xchg
rol
pop
popa
jb
jl
add
je
hlt
xlat
data16
push
jge
dec
add
xchg
push
call
add
inc
cwde
push
push
or
clc
cmp
mov
or
dec
dec
xor
sub
and
adc
add
jp
loop
inc
shl
hlt
dec
xchg
push
adc
popf
enter
adc
add
jmp
sar
xchg
mov
mov
sbb
dec
lock
cld
mov
push
cmp
movs
pop
mov
xor
shr
cwde
jnp
push
je
nop
xchg
mov
fs
or
dec
call
or
pop
sbb
jne
je
pop
ins
mov
fadd
out
(bad)
fmul
xor
fisub
adc
mov
retf
aas
in
mov
pushw
mov
xchg
sbb
in
push
mov
icebp
into
loop
adc
movs
mov
jecxz
add
ret
inc
out
in
sbb
(bad)
adc
push
leave
mov
cdq
cmp
shl
mov
enter
fild
out
xchg
xchg
iret
mov
jno
mov
xchg
pop
shl
dec
inc
mov
mov
fstp
xchg
or
inc
aaa
inc
dec
mov
and
cmp
loopne
or
test
or
xor
and
sbb
dec
inc
sbb
jo
xchg
dec
mov
mov
inc
jbe
or
and
pop
inc
xchg
(bad)
imul
sub
and
test
and
mov
ret
and
call
mov
loope
nop
add
inc
mov
dec
ret
sbb
cmp
mov
add
sbb
sbb
jg
mov
mov
xchg
mov
and
loope
test
(bad)
dec
cmp
lock
inc
xor
fldcw
lea
dec
lea
dec
test
lds
add
xor
adc
loopne
mov
mov
jne
adc
int3
inc
jnp
pop
mov
jmp
push
adc
daa
inc
or
adc
popf
adc
ins
or
out
cmp
loopne
jecxz
push
mov
mov
xchg
loopne
rcl
inc
fld
pop
cld
sbb
das
int3
clc
pop
fdivp
add
lea
(bad)
cmp
inc
ret
repnz
divps
inc
lock
je
mov
data16
js
test
je
push
sbb
xchg
push
inc
pop
xor
mov
bound
and
mov
sub
scas
shr
cld
mov
pushf
cmp
mov
popa
nop
ret
mov
je
jl
xchg
out
pop
not
push
xor
mov
xchg
int3
push
and
push
lock
mov
adc
test
int3
sbb
aaa
popa
sub
and
cmp
setg
rcl
jo
adc
dec
push
mov
lock
or
push
push
cmp
push
or
or
enter
sub
xchg
xchg
mov
or
sar
cmp
sbb
mov
popa
outs
aad
mov
dec
and
test
ss
je
sbb
xor
mov
ss
inc
add
pop
mov
mov
ror
mov
adc
and
pop
or
add
cmp
movs
push
push
and
add
(bad)
repnz
mov
sbb
push
jne
dec
mov
add
adc
adc
inc
mov
lea
add
in
call
iret
adc
inc
movs
mov
movs
test
fdivr
aas
clc
mov
fwait
jp
jmp
add
mov
add
fst
je
sbb
xor
fst
dec
jne
leave
idiv
or
lds
jae
jne
ins
jb
sbb
sbb
lods
push
sub
mov
mov
scas
rcl
loopne
add
adc
dec
sbb
add
mov
jmp
jo
or
pop
pushf
inc
daa
inc
int
adc
fadd
sbb
fdiv
sbb
not
xchg
push
in
cmp
lahf
(bad)
(bad)
jmp
xchg
add
iret
(bad)
cs
push
mov
dec
add
inc
int3
mov
mov
dec
mov
add
loopne
aad
ins
je
sbb
xor
jae
mov
xor
int3
adc
dec
and
cli
test
(bad)
out
int
adc
retf
jecxz
dec
or
cdq
xor
ja
pop
int3
add
pop
or
aam
mov
dec
mov
sbb
push
xchg
in
js
nop
inc
sub
(bad)
movs
cwde
mov
and
sub
and
sbb
add
pushf
jo
add
pop
retf
call
jne
add
push
test
jge
mov
out
fwait
outs
sub
push
enter
fldcw
mov
movs
dec
aad
outs
xchg
or
push
sbb
aad
jmp
imul
(bad)
fisttp
aam
push
sbb
push
or
jmp
mov
mov
dec
mov
sbb
jmp
xchg
adc
lea
and
push
pop
nop
add
(bad)
or
inc
pop
add
cmp
inc
jo
mov
mov
mov
ror
xor
jmp
adc
adc
inc
sub
sbb
mov
movs
rcl
pop
shl
push
xchg
mov
outs
pusha
sbb
pop
out
add
and
xchg
fneni(8087
add
adc
mov
cmc
ins
and
push
cs
das
sbb
mov
inc
icebp
dec
jne
xchg
or
pop
fcom
and
jle
dec
cld
jecxz
push
add
mov
inc
xlat
add
hlt
adc
jle
xor
push
or
into
jl
loope
gs
or
xchg
fcom
js
add
pushf
and
dec
jb
test
cmps
setne
and
fsubr
movs
aaa
clc
or
mov
jae
lods
jge
cmp
cmp
sbb
ins
out
mov
fldenv
sub
sub
or
push
dec
test
rol
add
ror
out
mov
sub
pushf
sbb
push
dec
sub
sbb
cmp
inc
ja
fnstcw
pusha
push
je
push
jne
fcmovnu
or
retf
imul
sahf
std
mov
jno
retf
xchg
mov
fadd
push
icebp
imul
inc
mov
sub
xor
or
sbb
or
lods
and
mov
mov
jmp
xor
or
sbb
sbb
push
adc
mov
or
push
add
sbb
ins
clc
add
mov
adc
xor
(bad)
cmp
mov
(bad)
cdq
jns
pusha
pop
pop
mov
mov
mov
mov
xor
xor
push
add
inc
sub
cmp
inc
loop
pusha
push
jle
add
xor
aad
add
cmp
das
xlat
mov
pop
dec
xor
inc
inc
mov
or
inc
pop
add
fld
dec
jle
ds
inc
and
jle
sbb
ret
int3
mov
add
or
test
dec
or
xor
xor
sub
fdivr
or
mov
outs
mov
jo
ins
push
and
or
arpl
mov
clts
push
aaa
adc
call
cmp
xchg
cmp
inc
fstp
pushf
or
push
push
pop
int3
cdq
jbe
sub
inc
sub
sub
sbb
mov
adc
mov
or
jecxz
push
stos
fsub
push
pop
jge
mov
pusha
ret
mov
mov
test
pop
fisttp
push
add
cld
jle
sbb
adc
test
movs
das
les
push
cmp
push
std
dec
bound
sbb
adc
aad
jmp
mov
pop
ins
test
scas
das
sub
pop
mov
out
inc
and
je
or
add
add
cmp
or
sbb
retf
or
in
sbb
test
add
mov
jae
sub
fadd
mov
pop
leave
shr
pushf
push
cmps
xchg
sbb
test
je
out
fisubr
inc
adc
out
sar
pop
(bad)
shl
js
and
jne
clc
push
rcr
adc
add
push
test
hlt
pop
(bad)
inc
rol
jne
mov
inc
outs
outs
(bad)
addr16
mov
test
je
scas
repnz
sub
sub
push
prefetcht0
mov
mov
add
pop
pusha
lea
push
rcr
add
nop
jbe
add
cld
or
fst
push
sub
lock
outs
loopne
pop
mov
or
jne
fimul
mov
sbb
retf
(bad)
mov
cmps
pusha
and
sub
add
push
stc
int3
sub
pushf
pop
push
sub
imul
mov
mov
aas
outs
test
and
dec
ja
push
aas
cmp
xchg
inc
jmp
sbb
and
js
and
push
push
pop
dec
push
sub
add
aaa
rol
jae
cmp
fwait
add
data16
add
pushfw
inc
push
shl
and
add
jo
sbb
loope
mov
mov
cld
xor
test
mov
mov
in
retf
xor
rcl
neg
jb
sbb
pusha
xor
mov
(bad)
fwait
add
jns
cwde
fdiv
mov
add
mov
xchg
push
loope
fisttp
mov
ja
pop
pop
mov
mov
loope
xchg
dec
pop
sbb
int
xchg
push
sbb
pusha
or
jmp
pusha
sub
(bad)
cli
out
cmp
add
outs
hlt
add
push
jno
jecxz
aaa
dec
sbb
loopne
lock
inc
call
add
movs
push
push
cmp
mov
pop
jp
xchg
div
ins
jle
pop
ss
inc
enter
mov
xor
das
cld
adc
sbb
xor
sub
push
and
dec
add
mov
and
shr
dec
into
xchg
dec
call
int3
rol
sub
sbb
test
aaa
push
not
inc
mov
mov
adc
rol
cld
lock
adc
dec
mov
adc
cwde
and
push
mov
or
ret
popa
pop
pop
js
inc
sub
paddq
pusha
xchg
pop
aas
mov
frstor
add
cmp
jl
xchg
in
test
sub
push
outs
repz
sar
ins
pop
jl
cmp
test
loope
push
test
mov
or
mov
mov
(bad)
mov
jb
adc
sub
loop
inc
push
movs
call
add
add
lods
add
add
push
mov
add
inc
ret
loopne
pop
dec
hlt
aaa
lea
jp
sbb
jmp
push
inc
xor
fcomp
bnd
add
sbb
arpl
or
adc
aaa
push
and
(bad)
ja
add
pop
mov
sbb
jecxz
mov
push
push
or
popf
jae
mov
cwde
cmp
lock
cmp
call
sbb
(bad)
out
dec
jne
inc
aaa
aas
addr16
aas
pop
mov
lea
mov
cs
lea
pop
sub
push
mov
sub
mov
in
cmp
or
retf
adc
sbb
push
(bad)
jge
call
adc
add
push
retf
popa
push
in
call
push
out
jmp
sub
push
clc
ja
sbb
or
cmp
(bad)
sbb
idiv
push
sub
je
sub
je
pushf
shr
imul
loopne
mov
lsl
sti
inc
cmp
or
ret
jne
or
sub
inc
into
aad
sbb
addr16
icebp
add
push
in
mov
fisub
mov
aaa
in
xchg
or
mov
xchg
pop
adc
jmp
ror
push
das
xor
sbb
or
fadd
in
rol
xor
gs
shl
add
cmc
add
xor
pcmpeqb
add
(bad)
clc
add
ds
jne
fst
and
push
add
cli
scas
clc
test
ja
jmp
dec
mov
je
jecxz
and
mov
das
inc
shr
jg
adc
mov
fstp
or
and
gs
in
add
test
jl
inc
int3
mov
add
add
cmp
pop
or
xor
jne
xchg
pop
mov
retf
push
sti
jmp
inc
dec
jne
sbb
inc
and
out
repnz
and
push
jo
xor
sti
or
lock
or
movs
pusha
or
cs
pop
inc
or
or
das
sub
add
add
dec
fld
adc
aaa
mov
add
xor
pop
leave
ret
sbb
cwde
jo
out
cli
mov
add
stos
mov
xor
adc
and
add
rcl
pop
test
ss
aaa
loope
or
or
and
lods
add
fcom
add
sbb
adc
xor
add
add
in
out
ror
and
push
movs
(bad)
lahf
loopne
add
in
dec
jne
sub
add
add
stos
test
xchg
jne
aam
mov
or
(bad)
jmp
dec
pop
imul
sbb
cmps
ss
lock
in
gs
dec
icebp
mov
test
test
rol
(bad)
je
xchg
jae
and
(bad)
shr
xchg
cmp
add
sbb
out
pop
imul
push
sub
out
or
in
mov
sbb
mov
add
push
mov
ds
push
dec
pop
lahf
bound
add
inc
push
push
push
iret
fiadd
fdivr
loope
add
imul
adc
fwait
rcl
or
mov
adc
enter
or
lods
shl
mov
sti
or
xor
cmp
inc
bound
es
daa
sub
cmp
ror
cmp
add
out
(bad)
aas
xchg
adc
mov
ror
pop
ja
mov
out
test
sbb
pop
aad
or
lock
in
mov
sbb
add
add
push
add
fsubr
rcl
rcr
mov
loopne
mov
mov
xchg
mov
jge
jo
push
lahf
sbb
mov
mov
loopne
lahf
les
movs
call
sub
das
sbb
(bad)
out
lahf
idiv
mov
push
mov
cmp
add
pusha
(bad)
dec
inc
jne
jmp
pop
cmc
jo
das
outs
mov
pop
jmp
js
cmp
adc
(bad)
ret
test
mov
xor
push
xor
fstp
mov
repnz
cld
movzx
and
or
sbb
xor
inc
je
ja
test
repz
pop
lock
movs
pop
fucomp
repz
jns
daa
or
pop
gs
mov
imul
sar
adc
mov
outs
(bad)
mov
pop
add
mov
(bad)
or
imul
loop
sub
sbb
(bad)
mov
sub
add
adc
(bad)
and
les
pop
hlt
push
pop
push
lock
aas
bound
sahf
shl
add
jge
jle
jno
mov
sbb
pushf
mov
mov
cmp
aas
mov
adc
push
xor
test
adc
dec
mov
and
ror
push
movs
xor
nop
fbstp
mov
adc
jbe
push
mov
in
pop
dec
or
cmp
lods
add
add
inc
test
in
jmp
adc
jmp
push
mov
int3
push
lock
adc
jmp
pop
lods
ror
jmp
push
enter
cwde
inc
xor
loopne
fmul
loope
push
loopne
int3
xor
ret
add
out
rol
adc
add
add
add
pushf
inc
sub
push
aas
push
test
or
or
add
jnp
test
lods
add
lea
push
mov
mov
mov
add
dec
movs
movs
rcr
dec
inc
(bad)
adc
mov
fs
or
sbb
sar
mov
outs
jmp
or
jl
jne
cmp
arpl
adc
xlat
sti
cmp
or
or
or
add
mov
cmc
sahf
push
rcl
scas
dec
push
push
and
mov
or
mov
sub
mov
pop
ja
cmp
adc
jl
movs
xor
shl
rol
adc
mov
es
or
test
push
arpl
inc
dec
dec
sbb
(bad)
outs
adc
xchg
adc
and
daa
out
imul
test
mov
xchg
sbb
scas
cmc
cmp
ja
add
mov
test
or
mov
loope
jne
std
mov
dec
jmp
push
mov
and
push
xor
push
test
mov
call
test
cmp
jo
pop
imul
or
cmp
cmps
dec
js
add
das
xor
fs
aam
sbb
sub
mov
xchg
das
(bad)
sub
or
and
adc
in
mov
test
mov
outs
jb
or
mov
lea
push
push
fs
nop
and
push
push
in
test
jl
jbe
pop
inc
popa
dec
adc
adc
cmp
repnz
xor
repnz
xor
sub
inc
sub
or
imul
in
popa
inc
cmp
je
stos
jo
dec
mov
push
inc
and
mov
call
inc
mov
add
ficom
dec
in
lea
jo
cmp
fisttp
std
js
adc
sub
ret
inc
loopne
aas
xchg
xchg
sbb
pop
(bad)
mov
add
or
add
loop
aad
inc
add
out
adc
xor
cli
inc
adc
mov
mov
mov
cmp
push
cmp
inc
test
xchg
push
adc
test
pop
add
mov
sub
loop
push
adc
cmp
je
mov
dec
movs
push
cmp
int3
add
pop
cmp
pop
pop
sbb
fst
dec
add
fs
sbb
mov
push
add
pop
xlat
inc
mov
xchg
stos
xlat
and
mov
ss
and
xlat
pop
xlat
and
and
ret
adc
xlat
and
push
pop
xlat
popa
pop
add
outs
pop
push
dec
pusha
das
leave
mov
add
fdivrp
scas
imul
push
dec
(bad)
jmp
rol
imul
int3
movs
adc
adc
popf
hlt
or
cwde
xor
scas
xchg
ins
je
xor
sub
or
in
sbb
ror
mov
cmp
pop
ins
add
mov
adc
mov
add
(bad)
xchg
add
in
sbb
or
sbb
repz
sbb
sbb
and
or
add
mov
jg
in
es
dec
jb
(bad)
jl
sbb
mov
mov
sub
push
sub
sbb
enter
in
and
ret
dec
adc
xor
inc
loopne
sbb
sbb
push
sbb
adc
add
inc
mov
mov
add
or
add
adc
jo
sbb
lahf
iret
jmp
inc
inc
movs
sbb
je
ret
fs
dec
movs
sbb
call
pop
cmp
ins
test
movs
push
pop
mov
jmp
pop
xor
jg
dec
sbb
cmp
je
test
jne
mov
add
cli
jmp
bndstx
and
adc
inc
push
popf
outs
outs
shl
(bad)
icebp
xchg
jmp
xor
cwde
jne
xor
push
loope
xor
cwde
jno
lods
xor
bnd
pop
mov
push
cmp
inc
test
or
mov
jns
aas
popa
sbb
enter
inc
js
shl
push
inc
scas
push
call
fmul
in
inc
sub
mov
iret
call
mov
imul
adc
xor
pop
mov
jb
sbb
mov
ins
data16
js
div
sub
es
sbb
mov
xlat
sbb
jmp
(bad)
mov
lar
pop
cmp
mov
mov
or
mov
add
push
fidivr
inc
fidivr
das
out
mov
scas
(bad)
out
xor
inc
imul
mov
add
cs
lock
jne
pop
sbb
mov
pop
cdq
cdq
jmp
pop
call
adc
gs
add
or
cmp
jne
and
jmp
sub
adc
sub
cmp
jne
pop
sub
sti
(bad)
pop
les
dec
clc
jne
pop
pusha
pop
cmp
test
push
lock
add
adc
rol
ss
jns
xchg
dec
pop
push
test
sub
push
pop
retf
push
or
test
int
cmp
js
cmp
sub
mov
imul
mov
movs
and
pop
loope
cli
mov
mov
sbb
mov
dec
dec
adc
jecxz
xor
out
pushf
and
or
(bad)
mov
add
in
out
xchg
dec
inc
fdivrp
fsubr
or
pop
pop
leave
pusha
les
xor
(bad)
sub
xor
ins
movs
pop
xor
jp
test
dec
enter
ror
movs
test
xor
lock
or
or
pop
inc
data16
and
or
cwde
mov
inc
dec
xchg
xor
arpl
call
sbb
add
loopne
push
data16
rol
xor
mov
dec
in
test
int3
xor
int
dec
enter
lods
and
mov
mov
sbb
nop
and
jo
or
inc
xchg
test
xchg
jb
sbb
adc
or
inc
enter
enter
mov
inc
aam
xchg
mov
hlt
inc
xor
cwde
es
cmp
dec
test
push
pop
xor
sbb
xor
pushf
and
int3
fwait
xor
or
inc
xor
push
add
cmp
sub
lock
sbb
or
jle
add
push
dec
xor
jb
xchg
jmp
xor
clc
mov
stc
sbb
xor
gs
js
aam
retf
loopne
adc
sub
add
retf
push
cmp
adc
sub
das
push
mov
icebp
sub
push
cmp
mov
pusha
pop
add
cmp
push
aas
push
add
pop
(bad)
pop
pop
add
or
bound
xor
ins
xor
mov
int3
pop
add
jns
add
push
add
jae
addr16
in
mov
outs
cmp
dec
test
fidiv
or
ja
push
or
inc
aad
add
xor
or
xchg
stos
or
dec
dec
sbb
add
xor
pop
mov
fwait
ss
das
push
push
call
rol
lahf
aaa
inc
and
add
cmp
push
ror
js
cmp
push
xor
pop
xor
lock
add
cs
pop
aaa
cwde
movs
cmp
push
xlat
sub
jae
aas
push
rol
int
data16
cmps
cs
cmp
cmps
aaa
or
push
mov
aas
inc
sbb
pushf
add
emms
or
js
rol
pop
loopne
pusha
es
mov
pusha
lods
inc
out
jp
das
inc
das
adc
mov
scas
out
cs
ret
loop
push
pop
or
cmp
jns
inc
cmps
imul
ss
in
loope
push
dec
add
cmps
aaa
xchg
ffree
adc
adc
fdivrp
aad
cwde
cdq
stos
mov
mov
daa
int
add
cmps
lahf
xchg
sahf
inc
and
adc
mov
and
daa
push
xor
fiadd
imul
popa
or
mov
inc
out
rol
pop
bound
ds
push
mov
fiadd
inc
and
xor
pusha
adc
jo
out
gs
nop
aaa
mov
cmp
dec
xchg
mov
test
or
ret
jg
xor
xchg
add
add
aaa
jg
mov
push
data16
add
ja
push
(bad)
mov
push
xor
xor
push
mov
mov
repz
xor
mov
call
add
fld
push
addr16
mov
add
sbb
cs
out
xor
add
pop
push
ds
daa
jg
mov
cmp
pusha
cmp
add
cwde
xchg
daa
add
test
js
adc
xor
retf
push
fistp
aas
adc
add
sbb
adc
sub
loopne
jmp
mov
hlt
mov
js
sub
pushf
ret
fdivr
popa
add
inc
nop
mov
add
(bad)
daa
sbb
jge
add
cmps
push
adc
pop
lods
imul
jne
lea
adc
push
jmp
mov
pop
jo
adc
retf
clc
pop
scas
fcos
add
xlat
pusha
or
cmp
and
or
add
nop
rcl
add
(bad)
pusha
or
(bad)
xlat
(bad)
fcomp
fnsave
mov
adc
add
jl
mov
adc
dec
jecxz
add
ss
cmp
or
mov
push
push
push
jne
xor
bound
xor
in
(bad)
(bad)
jmp
inc
outs
jns
jp
dec
dec
xor
bound
push
push
inc
dec
dec
pop
push
cmp
xor
not
jg
jb
jbe
jb
outs
imul
push
add
jo
test
adc
mov
xor
push
add
inc
xor
mov
cmp
xor
inc
xor
pop
pusha
in
xor
aaa
add
lea
jne
dec
in
(bad)
xchg
fadd
inc
outs
jne
arpl
push
fiadd
inc
imul
inc
sbb
push
das
popa
jo
pop
jbe
das
push
outs
outs
das
cli
je
xor
mov
imul
or
push
add
push
scas
arpl
xor
popa
imul
add
std
pop
outs
ja
ins
outs
popa
fs
fisttp
mov
das
inc
arpl
dec
gs
or
in
outs
jb
push
push
jae
dec
ins
imul
bound
mov
or
push
push
and
add
push
mov
stos
jns
arpl
dec
add
cmp
sub
mov
and
xor
jo
fcomp
fldenv
test
pop
mov
push
push
sbb
sbb
cmps
std
daa
(bad)
push
and
jnp
dec
iret
repz
pushf
jge
mov
mov
ds
cmp
fadd
daa
ror
sub
jo
mov
psrlw
movs
repz
sbb
(bad)
sub
dec
mov
cmp
out
inc
jbe
jbe
inc
add
cmps
sar
hlt
pop
inc
dec
fs
je
jo
inc
pop
mov
fbstp
inc
push
mov
jae
test
call
pop
inc
imul
push
and
outs
and
adc
dec
pop
dec
cmp
adc
dec
inc
and
cli
sbb
adc
and
mov
sbb
adc
pop
xchg
push
inc
jle
inc
cmp
dec
push
aas
inc
pop
push
cmp
movs
inc
or
inc
pusha
inc
imul
ret
mov
pop
push
xchg
inc
div
out
sub
and
and
lods
lds
or
cdq
sub
or
arpl
repnz
movs
inc
add
push
sbb
jb
repnz
pop
fwait
js
mov
and
cmps
sbb
xchg
inc
pop
ins
jne
sar
push
pop
and
cmp
bound
enter
jno
sbb
jno
cld
je
dec
and
or
pop
add
ins
data16
add
push
popa
and
sbb
add
push
add
bound
and
ins
ja
sbb
xlat
call
stos
dec
data16
rol
aas
dec
sub
in
adc
sbb
stos
mov
das
rcl
or
outs
jns
and
cmp
popf
pop
mov
push
xchg
pop
sbb
shl
or
shl
sub
out
cmp
and
pop
inc
gs
pop
add
and
jbe
cmp
or
push
outs
push
fcmovnu
outs
cmp
or
imul
ins
shr
and
inc
dec
popa
jns
nop
pop
add
add
adc
mov
or
shl
push
popa
or
jne
and
mov
je
sub
iret
jno
gs
jmp
mov
lea
popa
and
sub
push
es
aas
mov
mov
sbb
jnp
mov
cmp
jns
add
inc
or
add
push
pop
(bad)
fild
jg
pusha
sbb
sbb
cmp
sbb
pop
or
mov
pushf
sbb
outs
ins
inc
dec
add
pop
push
jl
rol
sub
add
push
mov
inc
into
add
xlat
aas
inc
pusha
scas
add
inc
aas
ss
and
jecxz
pop
rol
inc
add
and
add
cmp
cmp
(bad)
adc
inc
pop
into
sub
sti
popa
inc
pusha
scas
or
inc
popa
sub
popa
fst
sbb
push
or
mov
inc
add
loope
pop
or
adc
loopne
pop
dec
inc
pop
add
push
or
pop
inc
pop
pop
mov
mov
pop
adc
add
push
pushf
add
adc
or
xor
xor
xchg
mov
out
sbb
dec
jns
shl
xor
and
fisubr
xchg
pop
xor
push
dec
frstor
aaa
jmp
ret
push
daa
or
push
xchg
enter
push
cmps
ret
test
popa
adc
cmp
xor
test
cmp
add
cmp
aaa
fnsave
push
jns
pop
push
popa
imul
dec
outs
fisubr
jecxz
arpl
xchg
sbb
or
loope
adc
mov
or
(bad)
pop
idiv
mov
add
xor
push
add
sub
add
add
sbb
out
or
js
jnp
lds
xchg
or
dec
call
mov
add
inc
xlat
xchg
fld
cmp
inc
aad
ret
xchg
loope
shl
or
pushf
mov
in
out
xchg
push
xor
inc
xlat
dec
xor
or
xor
sub
push
adc
adc
arpl
cdq
cmp
or
sbb
out
push
daa
cmp
out
adc
mov
push
daa
cmp
add
call
cmp
cmp
enter
push
adc
pusha
push
mov
pop
out
sti
js
inc
mov
xchg
es
sub
push
inc
jb
mov
xchg
add
and
daa
sbb
xor
cmp
pop
mov
or
pusha
sub
movs
jmp
push
add
or
shl
adc
iret
add
out
dec
(bad)
pusha
jns
(bad)
out
(bad)
loopne
outs
push
mov
push
mov
mov
mov
jl
xchg
xabort
cmps
sub
inc
outs
aaa
jmp
leave
mov
mov
pop
lods
ins
push
hlt
lea
dec
imul
lock
leave
xor
out
xchg
lods
xor
stos
je
daa
jge
pop
jmp
mov
pop
idiv
push
std
dec
jne
push
jmp
outs
addr16
mov
or
sti
jl
jl
clc
ds
sub
jmp
mov
cmp
sbb
mov
or
add
rcl
xchg
call
call
in
mov
pop
add
sbb
lock
mov
and
mov
pop
(bad)
outs
in
fsub
(bad)
loopne
in
push
mov
das
adc
push
mov
jb
pop
in
xchg
(bad)
fdivr
xchg
xchg
dec
ss
aam
mov
inc
sti
add
fisttp
andnps
dec
mov
adc
cs
add
adc
loopne
(bad)
popf
adc
jnp
cwde
adc
data16
jmp
jbe
add
jge
aas
frstor
add
adc
inc
fwait
jae
mov
or
add
add
mov
das
dec
rol
add
jno
jno
jne
jge
inc
fiadd
cmp
push
out
aas
daa
call
mov
and
cdq
add
and
push
mov
loop
clc
inc
push
push
mov
push
xor
popf
repnz
sbb
test
push
test
pop
xor
adc
cmps
inc
xor
scas
loop
push
mov
or
loope
loopne
dec
adc
int
ficomp
cmp
adc
inc
xchg
out
call
adc
call
int
push
push
xor
mul
push
aam
push
fcom
test
test
inc
jge
nop
cmps
jge
jl
pop
pop
call
pop
sbb
data16
jg
les
imul
cmp
outs
ins
pusha
add
sbb
mov
mov
mov
mov
mov
xchg
sub
and
jbe
data16
inc
adc
sub
mov
xchg
and
lods
sbb
mov
jg
xchg
pop
(bad)
jle
mov
out
xchg
jg
mov
and
sub
inc
and
fcmovu
fiadd
xchg
jl
test
movs
and
into
jmp
inc
mov
jmp
or
test
pop
dec
loopne
sbb
mov
dec
and
inc
inc
js
in
aaa
or
add
into
or
and
push
xchg
push
adc
stos
push
mov
dec
movs
push
cmp
mov
ret
test
xchg
push
cmp
mov
mov
and
ss
mov
lock
mov
or
cs
xor
jo
mov
mov
repnz
inc
xor
mov
mov
test
je
(bad)
push
ret
sub
mov
cmp
jne
sub
loopne
mov
shl
ret
mov
jl
jmp
jb
pop
adc
sete
fnstenv
adc
test
pop
jne
sar
inc
and
mov
jl
adc
fs
and
push
outs
or
clc
sbb
pop
imul
mov
outs
int3
mov
pop
or
rol
in
shl
(bad)
arpl
or
sti
gs
push
test
dec
scas
in
inc
cmp
mov
pop
and
in
sbb
pop
sub
add
xor
inc
pop
inc
aas
std
and
les
sbb
push
or
repz
sub
jl
adc
mov
adc
mov
(bad)
cmc
sbb
mov
xor
bound
jbe
frstor
pusha
and
and
ins
adc
cld
adc
sti
xor
and
adc
out
daa
ret
and
and
mov
dec
sbb
pop
adc
(bad)
jae
retf
fadd
push
push
adc
icebp
jbe
jae
in
push
cmp
in
mov
and
pop
call
dec
sub
out
in
xor
mov
push
fucomp
mov
test
jmp
push
call
add
push
or
ret
nop
fimul
cmp
pop
dec
jecxz
lea
sbb
aaa
adc
div
je
xor
mov
push
xchg
cmp
mov
(bad)
loope
xor
ret
mov
in
(bad)
jmp
push
jg
ret
(bad)
mov
test
in
lock
sub
xlat
ss
pop
pop
dec
mov
ja
or
aas
hlt
or
shl
mov
push
test
push
bound
aas
adc
mov
push
add
out
(bad)
fnstsw
sbb
add
mov
scas
fwait
enter
cdq
mov
adc
dec
call
sub
add
into
(bad)
fcmovnu
movs
pop
retf
mov
sahf
dec
je
cmps
arpl
icebp
loopne
dec
fdivr
sbb
push
ror
sbb
in
enter
cld
pushf
and
data16
call
sbb
mov
out
ret
push
add
adc
(bad)
(bad)
jns
push
shl
loop
mov
pop
pop
and
aam
lea
pusha
iret
cmp
in
xor
xor
ds
and
dec
xchg
add
sub
loop
jmp
aaa
(bad)
mov
push
and
add
xlat
test
add
sub
inc
and
sti
in
shl
or
xor
aaa
loop
dec
test
cmp
std
sti
pop
test
test
fwait
ins
mov
pop
inc
les
inc
adc
mov
shl
aaa
push
xchg
ss
jnp
and
cmp
les
(bad)
jmp
inc
push
loopne
ins
mov
add
mov
pop
mov
jne
in
xchg
fcomp
lods
inc
sahf
mov
and
pop
xchg
adc
je
mov
pop
inc
mov
push
jo
sub
jle
sub
test
aad
xor
and
int
imul
jmp
pop
in
xor
sbb
push
xchg
daa
xor
mov
jo
jb
xor
(bad)
pop
xchg
add
mov
xchg
(bad)
in
pop
popa
xchg
fs
paddd
outs
xchg
nop
pop
fs
ins
mov
dec
and
movs
mov
mov
xchg
sbb
mov
xor
test
adc
mov
cmps
cmc
cmp
push
push
mov
push
pop
mov
imul
and
inc
jnp
sbb
add
ret
sbb
daa
cmp
or
aas
outs
ficom
pop
ja
and
je
add
ret
enter
inc
es
and
clc
fld
push
push
mov
cli
push
mov
iret
cwde
add
sub
xchg
add
lock
(bad)
adc
test
aaa
add
adc
aaa
fiadd
inc
fidiv
sbb
mov
lds
mov
mov
xor
sbb
rol
cdq
push
stos
aaa
enter
adc
aaa
add
or
ret
neg
mov
add
mov
jo
sysret
out
(bad)
adc
xchg
cmp
jge
add
push
repnz
inc
pop
pop
stos
sbb
mov
pop
je
pop
stos
mov
and
mov
push
in
adc
mov
push
sub
movs
inc
and
add
sbb
xchg
addr16
push
or
fimul
mov
dec
into
jmp
pop
push
popa
push
fiadd
xlat
push
and
ja
bound
lss
fiadd
lods
sbb
mov
mov
bound
dec
sbb
iret
inc
pop
in
xor
mov
mov
rol
or
scas
xrelease
sbb
rol
test
or
aaa
or
or
add
mov
fwait
dec
(bad)
xor
inc
arpl
imul
adc
aaa
lods
jns
pusha
imul
test
sbb
or
rcl
aaa
sbb
add
nop
adc
pop
inc
and
inc
add
jl
xchg
jo
xchg
dec
cld
mov
and
sbb
dec
and
adc
add
sbb
push
sbb
daa
dec
aas
mov
aam
scas
sbb
cwde
push
sbb
xchg
add
or
xchg
sbb
push
sub
shr
sbb
push
into
mov
addr16
jns
test
mov
jg
push
pop
mov
pop
or
(bad)
jle
daa
cmp
dec
mov
fistp
ins
mov
dec
and
push
pop
stos
sub
lock
sbb
ficom
push
pop
push
xchg
xchg
pop
ja
call
std
inc
ret
sbb
sbb
daa
shr
and
sbb
inc
mov
inc
imul
call
inc
add
je
fsub
shl
cmps
aas
loopne
adc
adc
or
es
sub
invd
in
or
jmp
adc
mov
jb
mov
push
ret
cmp
pop
cmp
sub
mov
int3
sbb
or
mov
inc
ja
xor
dec
add
sub
pop
dec
dec
test
mov
fs
mov
arpl
test
inc
inc
inc
sbb
dec
dec
xor
and
cmp
mov
xchg
or
inc
xchg
push
dec
aad
xchg
call
fsub
test
add
js
pop
inc
mov
cmp
cmps
or
in
mov
mov
hlt
jle
cmc
call
and
dec
sub
sub
xchg
call
ror
sub
(bad)
or
xor
and
jg
xor
adc
call
rcl
loope
bound
int3
mov
mov
sahf
push
gs
push
les
sbb
mov
pop
loopne
retf
lahf
call
mov
ins
sub
push
push
hlt
push
loopne
and
les
push
jbe
(bad)
and
or
ss
ds
jno
pop
sti
lods
inc
dec
fsub
inc
inc
sbb
int
sbb
xor
xchg
pop
dec
jnp
cwde
retf
sub
pop
cwde
jnp
mov
out
mov
cmp
jae
mov
fcomp
add
mov
fstp
mov
add
retf
cmps
mov
mov
mov
add
sbb
js
cmp
sbb
cmp
mov
add
adc
scas
in
push
frstor
push
loop
add
pop
out
inc
add
outs
das
pop
int
mov
push
data16
sub
mov
pusha
inc
pop
es
ins
inc
add
jp
dec
inc
xor
xor
adc
out
sub
push
sub
std
call
ss
cmp
add
ficom
ds
push
push
xor
sbb
int
inc
inc
das
ret
bound
dec
jp
neg
aaa
addr16
stos
cs
data16
sub
(bad)
xor
mov
bound
inc
adc
(bad)
add
cmp
push
call
sub
xor
xor
int3
int3
loopne
push
push
push
push
push
(bad)
test
mov
dec
inc
iret
add
mov
lock
push
mov
cmp
minps
fisubr
mov
cmp
cdq
sbb
ja
dec
fisttp
in
scas
add
push
imul
sub
sbb
push
mov
movs
es
jnp
(bad)
pushf
jge
push
dec
js
push
lahf
out
dec
loopne
push
mov
sbb
cmp
ins
fld
fs
push
xchg
add
or
mov
add
sub
xor
adc
idiv
adc
or
inc
and
push
adc
push
test
adc
or
dec
push
push
push
and
fcomp
daa
and
std
call
cld
pop
and
push
adc
popa
dec
outs
fs
gs
jb
(bad)
inc
push
gs
jl
rcpps
fs
gs
gs
pop
inc
xlat
(bad)
outs
in
inc
push
sbb
outs
ja
ins
outs
popa
fs
imul
push
and
push
push
imul
inc
sahf
ins
in
mov
nop
outs
jae
cs
je
aam
adc
jle
aad
lods
jb
jns
xor
dec
outs
ja
hlt
push
ror
punpckhdq
and
popa
imul
or
mov
add
add
lods
xor
pushf
ins
callw
pop
pusha
jo
popa
mov
push
mov
mov
pop
sbb
pushf
adc
add
mov
sahf
add
adc
push
push
dec
sbb
dec
popa
ins
gs
or
inc
mov
push
mov
inc
push
add
add
mul
out
mov
mov
dec
outs
imul
ins
mov
mov
and
sub
pop
sub
cmps
cs
and
mov
push
hlt
cmp
pop
pop
add
ret
fwait
addr16
loopne
js
scas
adc
es
test
xchg
sbb
hlt
adc
call
cli
add
loopne
icebp
ret
sbb
js
inc
les
stos
dec
pop
and
lds
jne
fcom
loopne
or
dec
je
cmc
cmp
cdq
fldpi
sub
sbb
daa
mov
loopne
or
xor
xchg
sar
cmp
pop
pop
jecxz
mov
shl
fwait
xlat
inc
dec
add
xor
add
out
push
mov
fnstcw
mov
hlt
pop
les
out
pop
nop
cs
push
and
mov
call
cmp
or
sub
pop
mov
push
jns
out
jbe
mov
int3
push
sub
mov
sub
fwait
or
add
mov
loopne
xor
jns
or
xchg
sbb
or
xchg
in
adc
sub
adc
add
push
lods
loope
xchg
jmp
xchg
add
push
sbb
xchg
cs
rcr
push
push
outs
and
mov
add
lock
push
sbb
adc
std
xchg
fwait
sbb
cli
push
jle
jecxz
inc
mov
shr
adc
mov
and
and
(bad)
leave
push
idiv
popa
dec
sbb
or
shl
mov
int3
aaa
imul
adc
push
push
xor
cwde
sbb
mov
mov
cmp
(bad)
pushf
outs
lock
int3
dec
mov
arpl
jbe
jmp
cmp
jo
inc
loope
call
and
idiv
maxps
out
add
ss
lea
and
addr16
pop
test
mov
call
cmp
je
shl
test
sahf
adc
jbe
push
jmp
adc
in
or
test
jmp
jmp
adc
(bad)
bound
xlat
pop
popf
popa
ja
adc
mov
daa
out
or
ins
xor
addr16
je
sub
sahf
pop
or
jo
cmp
add
(bad)
shl
and
aas
cmp
cmp
call
hlt
push
push
or
popa
fdivr
imul
xchg
test
jne
pop
or
pusha
inc
(bad)
mov
or
sub
mov
clc
mov
cmp
mov
mov
sar
add
ss
(bad)
xor
cli
ds
mov
retf
jo
mov
push
addr16
add
addr16
or
fcmovnu
pop
scas
push
mov
add
inc
push
dec
jne
js
shl
pushf
std
call
pop
lea
jno
push
es
adc
cmp
adc
mov
ja
add
movs
mov
push
in
and
mov
add
adc
push
in
sub
test
arpl
or
stos
sub
and
repnz
push
pop
leave
ins
data16
inc
call
arpl
xchg
and
ficomp
jne
adc
mov
loope
inc
mov
adc
jp
mov
jbe
test
retf
or
or
or
mov
mov
sar
jmp
or
aam
add
jo
cmp
xchg
jnp
jbe
clc
lds
mov
xor
jo
(bad)
adc
add
pushf
cwde
(bad)
loope
aam
mov
dec
inc
sbb
test
imul
pop
mov
add
test
ins
lock
push
pushf
and
dec
gs
and
and
in
cmps
pop
mov
pusha
add
xor
add
nop
cmp
pop
je
gs
sub
cwde
cmp
push
push
movs
mov
nop
retf
nop
or
retf
cs
sub
dec
pushf
inc
mov
loope
ja
and
je
cmp
enter
mov
push
push
fiadd
out
jmp
cs
test
xor
dec
push
es
ins
or
mov
mov
sub
pusha
idiv
dec
cmps
add
add
cs
push
(bad)
aas
and
es
aas
inc
adc
outs
pop
das
loopne
xor
push
mov
jnp
add
shl
push
xchg
fcomp
mov
adc
fistp
add
fwait
xchg
ja
aas
ja
and
mov
and
sub
xor
outs
and
mov
adc
pop
aas
pop
inc
pop
and
pop
inc
pushf
test
je
push
push
cmp
adc
or
aas
and
arpl
out
aas
cmp
cmp
xchg
sbb
scas
xchg
mov
add
scas
mov
ds
inc
sbb
(bad)
mov
xchg
add
gs
mov
std
inc
jb
outs
jb
pop
xor
imul
add
inc
rcr
jmp
aas
pop
lea
lods
cmps
cmp
bswap
pop
jo
fist
arpl
jae
imul
xchg
sbb
pop
push
dec
push
cmps
das
dec
fld
ja
push
(bad)
test
(bad)
dec
add
push
mov
je
in
dec
aaa
cmp
push
push
jmp
add
leave
or
ucomiss
push
clc
out
shl
ja
add
inc
xor
add
sti
int
and
and
aam
pop
inc
inc
outs
push
int
movs
ins
mov
push
mov
mov
push
xchg
mov
(bad)
popa
int
movs
loope
ret
xor
das
pop
lock
mov
add
out
add
lea
add
lds
sub
pop
out
ror
mov
mov
push
pusha
mov
cmps
pop
mov
pop
daa
mov
ins
lods
add
mov
pop
outs
bound
push
adc
sub
movs
cmp
sar
ins
mov
or
ins
ins
outs
inc
push
and
sub
and
cwde
inc
mov
daa
loop
mov
mov
jmp
pop
sub
in
pop
dec
cmp
dec
mov
test
and
cmc
and
add
addr16
daa
daa
mov
xor
popf
xchg
xchg
xchg
pusha
test
xchg
es
xchg
and
(bad)
bound
dec
pop
xchg
(bad)
mov
pop
data16
push
xchg
fs
xor
test
add
mov
ins
push
jb
aas
push
ins
fcomp
dec
xchg
fs
inc
mov
repnz
fwait
int3
fabs
mov
(bad)
(bad)
jne
mov
ins
ja
inc
ins
jle
jmp
sbb
aam
sbb
daa
xchg
inc
test
aad
cdq
xchg
stc
cli
mov
cmp
dec
pusha
or
aad
js
mov
push
and
push
xlat
sub
loope
gs
out
xor
push
jecxz
jnp
imul
sbb
pop
push
addr16
xchg
cmp
mov
add
movs
jg
mov
je
push
push
test
je
add
cmp
mov
mov
mov
lea
mov
(bad)
fidiv
and
test
je
and
fs
cdq
mov
cmps
inc
add
pop
pop
test
push
dec
pop
jecxz
dec
xor
jne
in
or
push
pusha
call
cld
mov
add
pop
cmp
dec
and
push
arpl
add
lock
or
aas
inc
lea
sti
pop
ror
mov
add
jmp
pusha
cmp
je
or
je
sbb
stos
jnp
fcmovnb
test
mov
xchg
adc
push
adc
mov
and
mov
xchg
ror
out
mov
xor
pusha
dec
sbb
mov
fs
cmp
push
xchg
sub
adc
pop
push
jge
loop
inc
add
inc
mov
fadd
push
pop
jbe
sbb
cmp
je
mov
test
psubsw
xchg
fild
add
pop
push
mov
inc
hlt
or
add
in
push
rcr
lds
cmp
dec
mov
add
jnp
call
ret
sbb
inc
jg
add
into
xor
jnp
jmp
pusha
cmp
add
and
xchg
sub
test
pop
hlt
loope
dec
retf
mov
and
sar
imul
sar
push
inc
or
mov
push
mov
dec
mov
sub
sar
cmc
idiv
mov
sbb
dec
mov
sub
dec
test
jl
inc
xor
cmp
loopne
add
fnstcw
dec
jno
outs
fwait
xor
sub
or
mov
add
inc
cmp
fwait
lods
mov
inc
das
cwde
adc
test
inc
add
mov
and
and
neg
jl
pop
adc
push
mov
inc
ror
pop
dec
sbb
adc
sub
push
enter
add
mov
xor
push
sub
or
cld
pop
push
sub
push
pop
sbb
mov
mov
push
or
sbb
mov
sbb
outs
stos
aam
or
xor
or
jle
push
mov
mov
or
adc
cmp
je
jge
pop
mov
into
jp
pop
pop
(bad)
in
add
nop
xchg
adc
xchg
lock
push
or
sub
lds
nop
cs
pop
inc
or
push
sub
setle
mov
pop
ret
popf
scas
cmp
jmp
shl
mov
fist
mov
outs
mov
iret
pop
bsf
mov
ins
cmp
mov
add
or
in
(bad)
out
jo
and
imul
div
push
das
or
mov
mov
inc
jle
mov
or
mov
jle
das
push
repnz
test
adc
repnz
movs
popa
push
add
inc
inc
aam
cmp
mov
(bad)
aaa
sbb
sbb
or
or
add
mov
adc
adc
dec
mov
rcr
popa
sbb
jecxz
mov
dec
sahf
mov
add
pop
mov
and
mov
mov
fsub
cmps
cwde
cmp
and
mov
jge
mov
add
add
sbb
mov
xor
jns
lods
mov
xor
xchg
adc
adc
(bad)
rol
sbb
lock
fsubr
shr
lods
cmp
jne
cmp
push
(bad)
fild
in
and
add
and
pop
bound
push
add
in
sub
and
add
imul
scas
repz
mov
in
ins
jo
loopne
mov
inc
shl
outs
das
push
push
dec
add
loope
add
adc
adc
cmps
mov
and
fcmovbe
pop
dec
mov
call
push
push
sti
jb
inc
xor
pushf
mov
dec
js
je
ror
jge
push
xchg
dec
jne
cli
adc
jnp
adc
or
scas
pushf
jne
jbe
push
pop
or
add
smsw
xor
jg
xchg
div
das
cs
or
or
out
push
pop
and
sbb
push
rcl
popa
and
jae
push
std
cmp
jne
aas
push
and
jno
add
fidiv
je
std
sbb
in
xchg
xor
add
jmp
mov
inc
inc
ret
out
add
add
adc
pop
add
in
sbb
ins
xchg
push
push
test
cld
mov
div
cmp
or
test
add
sbb
fld
add
and
push
sub
in
loopne
sub
adc
and
loopne
push
jmp
push
pushf
loopne
das
jl
xchg
push
andps
inc
push
gs
and
and
jo
cmp
xchg
outs
pop
add
push
dec
jb
out
cmc
outs
movs
int3
loope
inc
bswap
(bad)
call
pavgw
pusha
addr16
add
inc
outs
ins
jo
outs
jns
ret
cmp
fldenv
jb
je
xor
or
xor
outs
je
outs
popa
ins
xchg
dec
inc
(bad)
cs
dec
gs
jo
xchg
addr16
jbe
outs
(bad)
xor
fs
popa
jb
push
into
mov
xor
pop
imul
xlat
mov
in
int
fs
je
fcmovne
mov
and
sub
loopne
or
cmp
pop
pop
pop
mov
jbe
inc
jne
fs
popa
mov
push
aaa
cs
jo
arpl
das
inc
fadd
test
xchg
imul
(bad)
dec
retf
cs
and
lea
addr16
push
jbe
mov
xchg
outs
xchg
push
dec
dec
or
int3
int3
sub
dec
ds
push
adc
adc
stos
(bad)
pop
jbe
aam
rol
xchg
pop
sub
sbb
jbe
(bad)
cmps
xchg
rol
dec
adc
add
xchg
mov
int3
mov
loop
(bad)
pop
addr16
add
pop
dec
xchg
add
and
jecxz
sahf
fadd
js
ss
dec
mov
aaa
adc
and
inc
(bad)
add
dec
xchg
bound
js
pop
mov
stos
imul
mov
popa
in
mov
fisubr
mov
sub
pop
push
sub
push
sub
loopne
adc
xor
push
xchg
or
lods
push
push
into
cmp
sub
inc
mov
call
clc
mov
enter
xchg
and
mov
mov
mov
jmp
in
adc
ret
mov
adc
and
faddp
sar
push
cmp
cmps
nop
inc
push
jecxz
adc
(bad)
cmp
pop
push
mov
xchg
movzx
cmp
dec
sti
inc
notrack
push
or
sbb
aad
and
pop
mov
sub
jmp
mov
fcmovnbe
fist
test
jne
test
js
not
je
test
je
mov
sahf
sbb
cld
inc
jbe
sbb
or
adc
jo
mov
pushf
jl
or
clc
inc
sbb
mov
jmp
xor
or
fwait
push
and
or
mov
xor
push
push
sub
and
hlt
(bad)
out
les
lds
pusha
dec
je
cmp
sbb
inc
mov
ficomp
(bad)
or
mov
and
mov
mov
jmp
or
xor
xchg
sar
rol
mov
adc
sbb
pushf
lds
popf
mov
or
add
push
(bad)
ja
mov
lock
xchg
sub
inc
mov
jmp
movs
or
add
cmp
mov
mov
push
test
sub
fisttp
(bad)
add
sub
mov
inc
lock
jns
add
hlt
and
and
mov
sbb
add
sub
test
mov
mov
jb
xchg
push
daa
adc
add
sub
je
jmp
push
ins
jo
mov
xchg
aaa
ror
pop
mov
push
dec
test
jg
mov
mov
js
push
popf
adc
xchg
push
jo
mov
(bad)
dec
cmp
dec
and
xchg
lds
sbb
fcomp
pop
pop
sub
lds
out
ja
call
jg
pop
mov
mov
push
mov
stc
push
xchg
lds
push
sub
call
xlat
je
xchg
add
mov
sar
cmc
cmp
adc
lea
cmp
mov
inc
mov
fadd
xor
cmp
clc
or
add
loopne
pop
fs
loopne
icebp
out
mov
repz
jle
push
fadd
dec
push
iret
(bad)
fisttp
(bad)
stc
sbb
dec
fstp
test
sbb
mov
aam
lods
xor
(bad)
and
ss
ror
push
aam
imul
rcr
loop
dec
jne
cmp
sub
sbb
jp
xor
jno
(bad)
sbb
fimul
pop
dec
jbe
dec
ja
pusha
and
add
jo
push
jb
cs
data16
or
sub
and
fmul
ret
cmp
jmp
cmp
js
pop
and
cmp
movs
jb
xor
sbb
xor
push
sti
rcl
push
xlat
mov
sbb
shl
mov
inc
test
adc
add
fwait
pop
sbb
adc
adc
mov
sbb
fld
cs
es
sbb
xchg
in
inc
mov
sbb
xor
sbb
or
psraw
adc
push
jo
int3
dec
pop
aas
bound
push
sub
adc
xor
mov
pop
xor
sub
imul
cmps
out
add
push
ret
inc
fcom
xchg
mov
jns
popa
into
jecxz
mov
inc
cwde
and
fcmovb
and
cmp
test
inc
sbb
dec
int3
pop
mov
sbb
int3
pop
add
pop
jg
sub
xor
pushf
data16
daa
xor
pop
daa
add
or
cmp
jecxz
cs
adc
pop
add
sbb
ja
aas
inc
push
add
mov
adc
mov
adc
retf
mov
ret
jle
mov
retf
and
repz
int
xor
push
and
aaa
mov
pop
(bad)
jo
adc
pop
shl
daa
or
sbb
sub
not
push
ja
jbe
xchg
or
xor
aaa
add
push
jnp
jbe
sub
add
imul
or
jecxz
inc
aaa
pop
or
jmp
push
pop
push
not
imul
fild
add
adc
add
push
test
cwde
pop
fidivr
pop
sbb
mov
and
mov
and
adc
mov
mov
loopne
jne
dec
out
jnp
(bad)
add
jne
push
hlt
push
sar
mov
adc
sbb
loopne
sub
or
or
sub
dec
or
add
nop
icebp
call
mov
push
push
inc
mov
xchg
js
sub
repz
jbe
cdq
test
inc
test
pop
fst
call
pop
jmp
(bad)
or
out
test
ror
arpl
or
pop
push
repz
mov
add
xor
stos
adc
fucomip
repz
adc
adc
sub
push
test
jmp
jmp
int
xchg
clc
add
fsub
push
add
inc
jo
ret
fisttp
push
scas
enter
pop
push
adc
xchg
inc
xchg
je
shl
pop
retf
mov
xor
dec
test
fmul
adc
bound
and
rcr
rcl
sub
cmp
jmp
add
xor
dec
bound
push
push
jno
jbe
xchg
xchg
adc
inc
popa
fwait
inc
cmp
or
push
sbb
lock
jge
add
aas
cmps
mov
sub
cs
jecxz
sub
repnz
sub
inc
push
xor
jle
dec
addr16
rcr
sbb
dec
or
bound
xor
xchg
mov
xor
dec
inc
fmul
jmp
inc
and
je
sbb
jo
inc
mov
push
or
(bad)
popf
mov
cld
mov
jl
adc
mov
sbb
mov
sbb
test
popf
ins
sub
cmps
or
ja
das
xor
sub
aaa
xor
jmp
xor
add
inc
push
nop
xor
retf
ss
jle
fild
fdiv
(bad)
data16
cmp
fwait
(bad)
fcom
mov
sti
xchg
sbb
jno
mov
add
das
mov
data16
out
pushf
or
dec
sub
cdq
sub
xlat
sub
mov
push
add
push
fsub
and
(bad)
push
or
xchg
ret
or
xor
and
jae
out
add
imul
sbb
adc
and
imul
xor
add
push
xchg
or
xchg
imul
popf
nop
sbb
cmp
sub
test
iret
adc
xor
sub
fdiv
movs
mov
inc
jo
movs
nop
mov
mov
rol
cdq
in
add
test
movd
sub
sbb
push
(bad)
fld
xchg
into
dec
jl
mov
or
mov
and
test
ins
in
pop
call
mov
cmp
pop
or
mov
xor
dec
into
mov
pop
ss
shl
mov
in
mov
adc
adc
test
loope
mov
lahf
xor
adc
xchg
or
or
adc
pop
cmp
pop
jmp
or
and
add
add
fidivr
add
inc
outs
mov
or
out
xor
push
mov
sbb
aaa
int3
(bad)
xor
add
out
mov
data16
lds
ds
int3
add
dec
das
push
lds
sbb
mov
lods
nop
sti
mov
jnp
xor
add
pop
and
dec
test
mov
scas
push
or
(bad)
xchg
mov
mov
sar
pop
add
pop
xchg
jb
inc
jbe
inc
dec
enter
mov
mov
out
pop
xchg
clc
mov
retf
ins
mov
test
jle
mov
or
xor
mov
and
xor
ret
or
repz
lock
cld
ret
or
or
rol
lock
pushf
or
jp
push
test
jmp
outs
and
jecxz
and
and
sbb
or
mov
sbb
rcl
adc
xchg
cwde
or
xor
movs
push
xchg
pop
pop
and
test
push
retf
sub
mov
cmp
sub
push
loope
fsubrp
add
sbb
bound
lock
nop
push
aad
sub
pop
sahf
sub
push
sar
sub
mul
arpl
pop
popa
popa
xlat
mov
sbb
aam
test
pushf
sub
add
xchg
outs
test
xchg
push
push
in
pop
out
pop
out
cdq
adc
xchg
sub
icebp
mov
xchg
jmp
mov
js
dec
sbb
cs
(bad)
in
mov
loopne
scas
pushf
mov
ja
sahf
mov
pop
dec
lds
add
add
sub
cmc
adc
xor
cld
adc
dec
add
dec
xor
and
int3
pop
sbb
add
mov
xor
xor
xchg
das
sbb
jmp
out
push
das
inc
div
lahf
ror
mov
push
mov
call
stos
and
ja
enter
pop
push
jge
push
push
in
call
pop
sbb
mov
xchg
test
push
mov
push
push
dec
ins
dec
clc
mov
xor
xor
adc
ret
xchg
pop
dec
fs
or
add
sbb
rcr
xchg
fild
push
call
add
js
sbb
mov
or
add
int
cmp
mov
pusha
fdivr
sub
leave
test
cmp
out
push
into
ja
pop
addr16
fidiv
or
loop
push
es
(bad)
push
or
xor
xchg
clc
and
cmp
sahf
lds
pop
jo
aas
sub
fs
fiadd
jne
pop
push
mov
push
xchg
ds
dec
shl
mov
aam
ret
xchg
fcomi
push
or
and
push
sbb
mov
push
call
add
cmp
(bad)
fild
rcr
push
jmp
jmp
inc
rol
retf
xor
rcr
push
call
lods
int3
stc
adc
(bad)
not
jl
ins
push
mov
lock
lldt
dec
xor
adc
jmp
xor
ja
push
mov
pop
cmp
inc
pop
xlat
das
mov
arpl
cmp
push
inc
mov
jl
inc
fist
arpl
or
cmp
fsubr
xchg
mov
loopne
jmp
add
rcr
inc
ds
inc
and
ror
js
or
add
add
mov
sbb
ror
mov
shl
fcom
(bad)
or
inc
xchg
movzx
call
jbe
push
adc
scas
mov
push
sbb
clc
cmp
xor
fisttp
jo
mov
adc
sbb
push
pop
(bad)
cmp
push
push
mov
cmp
sub
adc
xchg
push
loopne
or
inc
test
mov
adc
add
and
jo
push
jl
out
(bad)
je
popa
jno
mov
xchg
mov
mov
mov
adc
sub
mov
mov
pop
push
inc
sar
push
pop
sub
xchg
cmps
push
cmps
loope
pop
aam
aam
int3
jae
popw
call
push
enter
jno
pop
inc
sub
mov
add
jns
ss
je
dec
(bad)
les
sub
dec
rol
sbb
mov
dec
ds
dec
mov
repnz
dec
mov
daa
mov
mov
les
mov
jb
jns
mov
fs
in
call
imul
mov
out
add
push
not
push
add
outs
fadd
mov
mov
jnp
lea
std
dec
test
cmps
pop
ror
sbb
mov
inc
jne
test
or
sti
mov
xchg
ret
jmp
loope
cmp
fadd
sub
sub
inc
cmp
pop
test
or
jecxz
in
aas
test
xchg
movs
cld
imul
push
cdq
mov
jge
test
jle
int3
mov
jo
jmp
add
xchg
cs
cmp
cs
jmp
add
add
aaa
cmp
and
inc
and
and
xchg
cli
fstp
and
jecxz
sbb
test
test
sbb
cmp
das
mov
mov
cmp
mov
sbb
jno
xchg
jl
xor
or
cmp
and
sbb
(bad)
xchg
aaa
cmp
aaa
xchg
jbe
pop
cmp
cwde
aaa
inc
(bad)
fcmovbe
cmp
cmp
pop
sbb
aaa
cmp
test
jno
nop
out
mov
pop
cmp
test
movs
sbb
test
dec
jbe
out
pop
and
lea
test
and
inc
pop
xor
jne
and
or
and
rcl
sbb
clc
pop
clc
lea
push
jmp
(bad)
dec
xor
ins
mov
push
movs
mov
dec
cmps
push
adc
add
pusha
das
push
dec
add
sahf
or
int3
das
pop
cmp
imul
sub
push
pop
shl
push
sbb
push
add
mov
(bad)
push
in
aam
daa
out
mov
out
cmp
and
fs
adc
pop
sbb
fmul
adc
dec
(bad)
ja
push
add
lea
outs
cs
mul
or
pop
retf
sahf
addr16
ss
sbb
cs
lock
scas
push
push
pop
int
cmp
mov
je
cdq
aam
mov
mov
movs
mov
arpl
mov
jge
mov
and
sub
clc
or
push
mov
mov
adc
mov
cmp
loopne
mov
call
inc
push
cwde
fcom
pusha
or
aam
rol
(bad)
aad
int
pop
lock
stos
(bad)
nop
imul
cld
dec
sbb
add
jo
push
push
mov
fdiv
push
loopne
call
and
sub
lods
pop
and
sub
inc
cmp
loopne
das
xor
push
dec
jmp
add
jne
push
mov
in
jae
mov
or
jp
es
dec
push
add
outs
(bad)
dec
test
push
jno
xchg
int
addr16
mov
and
inc
add
mov
loope
add
das
daa
push
sbb
add
pop
adc
jg
add
push
inc
inc
pop
fmul
lods
repnz
cwde
jg
pop
(bad)
shr
add
pop
lds
mov
adc
test
sub
int
in
cmps
cmp
cmp
sbb
dec
imul
cmp
test
mov
or
not
or
add
sub
inc
xchg
fcomp
nop
retf
xchg
adc
pop
les
outs
xchg
cwde
mov
add
hlt
cdq
and
xchg
cmp
les
cdq
bound
int
mov
xchg
clc
mov
(bad)
fld
lahf
in
cmp
rcl
push
test
and
pop
push
lock
mov
pop
jmp
dec
cmp
dec
enter
dec
sbb
inc
addr16
dec
push
in
sbb
pop
mov
or
jge
mov
dec
and
in
add
xor
mov
out
sub
or
pop
jg
or
or
(bad)
pop
dec
xor
adc
push
pmuludq
add
cmp
add
add
cmp
ins
xchg
ss
shl
jb
push
out
lock
imul
mov
push
push
in
rol
sbb
pushf
mov
jns
scas
aad
sub
je
jmp
sbb
jo
cmp
loopne
push
vpsubw
mov
mov
mov
pop
mov
xchg
xchg
add
addr16
fstp
and
pop
push
sub
retf
lods
push
mov
lds
add
inc
mov
inc
cmp
push
push
(bad)
out
or
out
arpl
hlt
adc
add
fwait
outs
pop
add
ins
or
(bad)
mov
ja
dec
mov
jb
mov
lahf
fst
dec
sub
into
and
mov
dec
loopne
xchg
add
rcr
sbb
add
out
jl
sbb
cmp
add
cmp
adc
movaps
inc
repnz
inc
push
loope
mov
jg
in
add
or
daa
or
rol
inc
pop
fisub
pop
fsub
pop
mov
xor
lock
inc
push
pushf
inc
sub
sbb
mov
inc
pushf
popf
out
fcmovnu
xchg
add
xchg
push
or
stos
ds
xor
mov
(bad)
(bad)
shl
add
push
push
or
loopne
cmp
jle
pop
imul
jge
in
bound
dec
enter
sbb
pushf
sbb
movs
mov
outs
adc
enterw
cmp
mov
neg
mov
in
dec
push
out
imul
sbb
cmc
(bad)
movs
xor
push
adc
xlat
bound
mov
jb
cmp
push
jnp
inc
je
adc
and
and
xor
adc
fidivr
add
pushf
cmp
pusha
or
xor
adc
inc
fnstsw
mov
mov
pop
sub
mov
add
test
mov
pop
aad
cs
inc
mov
adc
push
mov
es
add
dec
add
inc
sbb
add
sbb
cmc
add
or
or
mov
dec
add
outs
outs
arpl
jb
add
outs
mov
xchg
jbe
daa
add
inc
aam
mov
push
add
jb
inc
rol
cmp
jnp
int3
add
adc
shr
mov
jbe
add
loopne
aas
add
jne
jns
pop
dec
gs
outs
jne
in
jne
retf
add
or
std
sub
ins
dec
cmp
outs
xchg
dec
retf
pop
inc
fsub
loopne
and
out
pushf
and
aam
sbb
(bad)
aad
and
fs
scas
popf
shl
loopne
stos
add
xchg
(bad)
sbb
or
dec
test
in
mov
adc
cmp
xor
mov
sahf
mov
sbb
scas
xor
or
movs
inc
pop
pop
daa
repnz
test
or
cld
sub
xor
push
or
out
pop
xchg
(bad)
or
stos
sbb
jge
ror
add
xchg
js
pop
jmp
in
pop
xor
dec
sbb
push
mov
daa
pop
sub
cmp
pop
mov
mov
sbb
push
nop
mov
or
fdiv
adc
nop
(bad)
lss
mov
pop
add
aas
lea
fistp
inc
xor
nop
cmc
and
into
adc
fstp
push
mov
shl
fwait
xchg
xchg
add
out
dec
push
cmps
push
mov
sbb
sbb
xor
sbb
jnp
retf
cmps
adc
cmp
push
jnp
mov
jnp
outs
arpl
jne
dec
sub
add
cmp
retf
popf
pop
xchg
adc
pop
adc
movs
mov
test
push
inc
je
scas
ret
and
jnp
inc
data16
xor
fwait
(bad)
mov
pop
fstp
ins
pop
into
push
(bad)
(bad)
int
xor
pop
int3
pop
inc
fmul
or
fwait
mov
add
add
les
adc
dec
sub
add
mov
adc
push
pop
or
rol
das
push
add
mov
movs
add
mov
pop
cmp
and
mov
mov
push
js
popa
cs
inc
ret
into
mov
ds
adc
add
add
xchg
jo
xor
popa
pop
mov
(bad)
aas
mov
pop
xchg
rol
clc
fs
jae
das
add
test
mov
(bad)
loop
or
hlt
jp
les
lods
imul
ss
movs
fisubr
pusha
int
fprem
pop
dec
shl
and
icebp
test
pop
mov
iret
aam
bound
adc
add
std
jg
test
jl
inc
xor
lea
mov
sub
cmp
addr16
clc
xchg
cmp
dec
jne
imul
inc
cmc
int3
or
inc
sub
xor
pop
add
ja
ds
sbb
aam
ss
fucomp
inc
hlt
mov
call
push
sbb
inc
cmp
ss
sbb
popa
in
jmp
add
pop
fst
dec
les
cmp
jge
add
jnp
xor
loopne
iret
outs
out
inc
imul
jo
sbb
or
shl
add
add
mov
pop
sbb
xchg
outs
jmp
enter
fnstcw
dec
nop
xor
xor
push
loopne
adc
pushf
xchg
adc
xor
test
xchg
mov
and
sbb
imul
add
sbb
aas
sub
cdq
repnz
sbb
ins
ins
xchg
xor
fisttp
or
and
mov
xor
inc
outs
leave
or
and
push
mov
aam
add
fbld
mov
in
in
mov
push
lods
mov
adc
sbb
and
sbb
div
xchg
mov
in
or
mov
mov
push
sub
mov
and
int3
adc
push
xor
cmps
nop
out
xchg
dec
adc
xor
dec
test
push
pop
rcr
adc
mov
test
loop
add
nop
lock
and
call
fmul
xor
mov
fnstsw
mov
push
and
(bad)
sub
push
in
push
push
sub
push
sbb
jbe
sbb
fmul
cmp
jne
push
pop
fs
mov
hlt
in
adc
lea
jo
in
adc
loop
pop
ins
leave
mov
inc
or
in
movzx
mov
fcomp
mov
popf
std
jl
adc
repz
in
add
add
xor
jmp
mov
sti
sbb
jo
rcr
cdq
ds
jbe
mov
add
nop
push
xchg
out
sbb
sub
push
int3
xor
pop
sub
push
sub
jne
out
int3
dec
xchg
pop
hlt
dec
jmp
mov
les
test
enter
xchg
out
test
ss
inc
pop
addr16
addr16
xchg
pop
sahf
cdq
mov
sub
jo
adc
and
je
(bad)
adc
jbe
call
cmp
sar
add
inc
hlt
test
fwait
cmp
scas
add
adc
call
daa
fsubr
sub
mov
mov
pop
ret
in
retf
mov
cwde
adc
push
ins
lods
js
daa
int3
in
xor
xchg
cmp
push
jo
dec
adc
test
cmp
je
mov
pop
bound
push
in
sub
xor
stc
push
loopne
mov
aaa
adc
and
jo
dec
arpl
push
mov
dec
or
mov
fadd
cmovno
inc
shr
push
mov
add
test
fsub
jbe
pop
mov
push
jo
sbb
js
test
lods
ret
or
stc
fimul
push
inc
push
lods
adc
out
lea
pop
and
and
call
pop
mov
add
push
xchg
push
mov
(bad)
xlat
js
sub
cmp
mov
adc
clc
fmul
mov
pushf
std
xchg
sub
pop
or
popf
nop
repnz
jle
add
push
outs
inc
xchg
sub
mov
or
sbb
xor
jp
popa
out
add
ja
push
aas
mov
aas
in
push
jl
mov
movs
inc
mov
mov
enter
mov
add
mov
mov
mov
and
(bad)
rcl
push
sub
mov
les
retf
mov
sub
push
loope
adc
mov
jno
mov
mov
je
je
sub
sub
dec
mov
imul
mov
push
cwde
cmp
out
mov
xchg
xchg
sub
lods
ror
push
imul
push
mov
or
sub
push
loope
adc
mov
push
mov
mov
ja
frstor
mov
loope
out
jp
push
cmp
ret
imul
or
mov
lods
jg
and
sbb
and
cmp
mov
mov
pop
push
mov
hlt
(bad)
adc
pop
mov
loope
pop
test
rcr
dec
mov
mov
jo
xchg
sub
sbb
mov
sub
jmp
inc
adc
loopne
cmp
arpl
adc
sbb
push
sbb
jns
mov
adc
push
push
mov
mov
mov
push
(bad)
xchg
js
adc
adc
ret
ja
jg
xchg
sub
mov
mov
ror
jo
jne
mov
mov
mov
jo
or
mov
mov
ror
pop
push
mov
loope
push
fmul
in
mov
jbe
mov
ror
or
movs
mov
push
mov
inc
mov
sbb
cmp
lds
popa
imul
cmp
inc
push
push
mov
rol
or
inc
xchg
data16
jns
mov
pushf
pop
push
mov
mov
mov
mov
test
adc
push
mov
mov
push
jno
mov
mov
xchg
sub
sbb
push
scas
test
ret
fld
add
push
push
adc
ret
imul
popa
push
pop
sbb
lea
mov
cmp
push
fdivr
fdivr
push
push
enter
scas
sbb
push
icebp
into
xor
xor
into
cmp
xchg
and
add
mov
pop
xor
and
enter
adc
sbb
jecxz
scas
pop
dec
inc
(bad)
lahf
cmps
pop
cmp
pusha
add
ins
or
fadd
adc
and
stos
ja
jne
pusha
push
test
push
jno
cmp
jbe
sub
fs
push
add
add
add
lea
sub
mov
in
adc
sahf
sbb
pusha
scas
fwait
and
test
sbb
push
ja
xchg
sub
sbb
dec
outs
xchg
mov
mov
jmp
nop
call
push
push
in
xor
inc
add
sub
hlt
into
mov
call
outs
mov
inc
add
(bad)
push
arpl
and
in
sbb
in
cwde
leave
fwait
and
imul
(bad)
mov
add
adc
je
jl
fcmovbe
mov
imul
add
jne
lock
shr
clc
aas
adc
or
scas
push
sbb
loopne
not
pop
test
loopne
das
in
pop
fadd
ror
cmp
mov
cmp
pop
adc
mov
or
cs
xor
xchg
pop
in
test
daa
cmp
test
jns
or
fiadd
mov
xlat
cmp
ss
popa
pop
arpl
push
or
push
ja
fcom
mov
dec
xchg
inc
sbb
loop
xor
add
sbb
test
push
imul
and
or
jg
adc
push
mov
pop
add
or
dec
jno
or
jae
adc
push
imul
cmp
and
and
push
xor
pusha
mov
jle
imul
test
add
jae
iret
jle
add
add
or
inc
and
xor
fcmovb
mov
(bad)
ja
ja
push
fcmovb
jb
out
xlat
xor
mov
sub
add
nop
pop
data16
(bad)
push
mov
inc
addr16
retf
push
adc
sbb
ret
aam
pusha
addr16
pop
outs
jae
and
pop
mov
xchg
rcl
mov
aaa
sub
pop
push
cmp
(bad)
or
mov
int3
add
or
cmp
push
(bad)
jmp
push
add
mov
pop
out
or
pop
daa
repnz
daa
jo
out
dec
adc
dec
(bad)
cli
mov
xchg
sub
in
mov
adc
push
mov
addr16
mov
and
inc
jae
jbe
or
and
(bad)
pop
xchg
xchg
mov
add
push
push
jae
ss
cmp
and
jmp
jae
and
push
add
or
daa
cmp
test
push
or
out
or
nop
pop
inc
dec
adc
and
pop
lods
test
add
add
xchg
or
xchg
or
out
add
pop
inc
adc
xchg
out
pusha
or
push
ret
out
push
repnz
ins
and
push
aam
(bad)
in
mov
jnp
mov
or
dec
sub
inc
xchg
sub
adc
call
data16
dec
push
mov
add
push
push
push
mov
stos
std
leave
arpl
loope
lea
push
mov
push
movs
fcmovnb
push
sbb
jl
cs
clc
dec
shl
pop
in
sub
mov
sub
xchg
nop
inc
dec
sub
dec
push
push
push
mov
in
dec
mov
mov
nop
cmp
and
int3
outs
mul
js
and
push
push
push
adc
jle
sbb
mov
out
xchg
sbb
push
lods
xlat
sub
pop
mov
inc
jmp
or
jp
je
fld
jg
mov
iret
jle
ss
mov
mov
cs
movs
push
lock
sub
fmul
daa
cmp
cdq
dec
xor
fldcw
jnp
jle
mov
jbe
es
pop
aad
test
push
mov
pop
dec
(bad)
push
push
pop
jg
and
mov
mov
xchg
scas
clc
imul
mov
cmp
dec
mov
data16
scas
std
cmp
jne
push
adc
sti
dec
adc
add
pop
or
pop
repz
mov
push
sbb
data16
dec
push
mov
pusha
ins
xor
nop
mov
mov
mov
inc
add
and
movzx
mov
fwait
out
mov
adc
inc
into
push
jns
or
sbb
and
sbb
sub
retf
sahf
xor
cmp
push
jns
or
dec
sbb
jns
(bad)
push
add
jecxz
cmp
loope
movs
(bad)
xchg
dec
add
adc
pop
(bad)
ret
sub
test
(bad)
pop
push
and
add
add
dec
clc
xor
mov
mov
pop
jo
ds
int3
(bad)
xlat
test
jne
aam
pop
dec
aas
dec
mov
ja
cld
and
mov
mov
mov
clc
push
jp
mov
test
stos
mov
adc
fldenv
jmp
mov
cmp
sbb
push
push
cld
xor
cmp
ror
test
retf
loop
xchg
lea
jp
out
mov
pop
and
xchg
call
arpl
add
mov
sbb
js
cmp
imul
fdiv
mov
jmp
lea
shr
and
mov
dec
and
xor
jne
push
movs
add
and
outs
mov
cwde
movs
jae
adc
mov
lock
jne
mov
jecxz
or
outs
push
outs
ins
and
call
adc
call
adc
jmp
arpl
ins
add
jp
lock
sub
sbb
cmp
sub
pusha
push
adc
and
retf
js
cli
or
scas
add
jmp
mov
cmp
add
pop
xor
sbb
pusha
fiadd
add
dec
mov
add
out
clc
mov
ins
jl
out
scas
cdq
adc
fild
push
push
mov
lds
add
lock
sub
leave
jecxz
mov
add
aaa
xchg
call
arpl
cmp
stc
cmp
(bad)
addr16
and
adc
push
aaa
ja
popa
or
inc
and
ret
pushw
inc
and
pushf
ror
sbb
(bad)
add
loope
jne
inc
jle
xchg
inc
mov
scas
add
mov
stc
nop
sub
lea
push
sbb
test
xchg
push
std
dec
cs
cmps
jg
test
hlt
add
push
movs
mov
inc
adc
mov
mov
pop
repnz
mov
scas
cmp
push
mov
lods
cmp
and
mov
out
pop
out
jg
lods
and
rol
nop
iret
dec
dec
loopne
loope
push
pop
(bad)
test
push
cld
aaa
mov
das
call
mov
inc
add
add
call
dec
ja
int
pop
sbb
sbb
cld
push
jmp
and
fwait
sbb
pop
je
(bad)
pop
sub
or
sbb
mov
enter
leave
enter
add
and
fs
in
inc
push
push
and
mov
dec
push
nop
add
js
pop
enter
ror
or
rol
jecxz
sub
enter
enter
mov
mov
jb
or
adc
nop
retf
leave
mov
add
in
add
nop
retf
mov
movs
mov
jp
je
sbb
enter
pushf
pop
int
and
mov
mov
cmp
inc
lock
movs
inc
push
nop
add
dec
jp
js
adc
xor
mov
in
or
hlt
loopne
inc
add
test
or
inc
adc
aad
push
xchg
sub
cdq
sbb
xchg
neg
push
dec
out
add
out
stos
or
add
pop
push
push
push
or
int3
dec
adc
inc
adc
jmp
adc
pop
inc
xor
mov
enter
push
push
add
add
mov
push
and
adc
jo
and
push
sub
inc
sub
aaa
call
mov
cmps
add
add
sahf
sbb
push
invd
arpl
mov
jle
or
shl
sbb
in
dec
mov
mov
push
rcl
scas
cmp
inc
inc
push
out
xchg
pop
sbb
ja
aas
pop
mov
outs
inc
movs
inc
ins
jo
scas
rol
out
push
leave
sahf
push
pop
out
cdq
sub
push
maxps
rol
jecxz
(bad)
jnp
mov
and
mov
popa
movs
inc
imul
imul
mov
xchg
and
out
add
retf
addr16
movs
dec
aad
xchg
retf
xor
test
xor
adc
mov
lahf
xor
sbb
out
push
dec
jbe
sbb
sbb
sti
inc
data16
pop
inc
aas
scas
pop
add
and
(bad)
stos
out
adc
mov
pop
mov
add
xor
push
inc
outs
in
clc
mov
sub
ds
fs
sbb
lods
popf
ret
lock
mov
mov
ja
jns
inc
(bad)
mov
mov
mov
int3
add
cdq
xor
clc
clc
(bad)
fild
or
push
imul
jo
mov
jae
add
push
int3
adc
gs
jb
outs
loopne
add
adc
add
push
mov
popa
jns
(bad)
inc
dec
outs
pop
dec
outs
jne
add
dec
imul
and
arpl
sbb
inc
jb
arpl
jae
movs
shl
fdivr
adc
or
sti
data16
je
aas
add
sbb
add
pop
es
mov
add
fsubr
pop
add
into
add
in
aas
leave
mov
push
mov
push
inc
cmp
inc
add
cwde
dec
cmp
sar
jge
mov
mov
mov
jp
call
mov
mov
mov
rcr
add
mov
push
add
les
push
push
push
jle
out
mov
lock
fcomp
and
inc
add
lods
(bad)
not
lea
pop
dec
sub
push
in
faddp
inc
add
cmps
push
dec
(bad)
xlat
(bad)
jae
xor
jmp
push
loopne
mov
add
mov
push
add
jp
push
sub
popa
adc
push
aas
clc
push
jns
xor
add
or
hlt
add
je
add
ins
push
lods
loopne
inc
adc
sub
mov
pusha
pop
pop
add
outs
jo
pop
or
imul
jae
sbb
or
cmp
sub
arpl
mov
mov
inc
add
(bad)
sbb
cmps
popa
pusha
add
inc
and
popf
push
and
push
mov
outs
das
jmp
inc
mov
das
stos
push
sub
inc
repnz
mov
dec
jo
dec
gs
ror
imul
lock
outs
sbb
pop
mov
ret
scas
gs
(bad)
mov
push
bound
stos
or
push
push
imul
jo
outs
pop
mov
mov
pusha
mov
pushw
or
jno
dec
dec
dec
dec
je
adc
out
add
int
pusha
das
xchg
push
movzx
bswap
neg
neg
dec
sets
push
in
push
mov
dec
aaa
les
movmskps
pop
mov
mov
pmulhw
xlat
hlt
inc
ss
cmp
jnp
push
ror
ror
sub
shr
jns
or
sbb
nop
sbb
adc
or
sbb
leave
popa
sub
xor
dec
sbb
call
push
inc
outs
sbb
sub
pop
retf
sbb
sbb
in
call
jnp
mov
test
es
das
adc
dec
ja
push
daa
sbb
sahf
mov
push
push
ins
xchg
push
add
add
xor
inc
inc
push
push
pop
push
imul
add
jmp
nop
push
je
xchg
xchg
mov
adc
dec
dec
dec
call
pusha
xor
adc
repz
pop
xor
ja
or
stc
cmp
sub
lar
cs
jne
imul
inc
js
xlat
imul
daa
pop
imul
pop
xor
or
enter
push
gs
dec
inc
and
mov
mov
inc
inc
ins
push
sbb
or
sub
adc
jae
leave
pop
jns
add
or
or
xchg
pop
js
push
std
inc
and
adc
(bad)
mov
add
fs
push
jmp
inc
xlat
ret
mov
fidivr
bound
dec
sbb
mov
cwde
call
lds
aaa
mov
adc
in
pop
or
pusha
inc
pop
add
dec
push
ds
ret
push
xchg
cmp
and
mov
and
sub
adc
jmp
cmp
pushf
adc
push
sub
sbb
cmp
fdivrp
xor
add
adc
cmp
xor
aas
push
or
cmps
sub
pop
call
cmps
inc
fadd
(bad)
or
fwait
repnz
add
mov
enter
into
out
movq
jbe
mov
push
cwde
daa
mov
adc
pusha
loopne
sbb
repz
jne
xlat
dec
(bad)
cmc
push
and
inc
das
xchg
push
cmp
add
out
aam
or
cmovg
push
mov
fwait
jecxz
sbb
dec
test
loopne
je
push
push
sqrtps
jmp
pop
inc
mov
jo
add
or
(bad)
stos
test
and
imul
adc
mov
imul
adc
rcl
imul
cdq
add
inc
add
jge
xor
jns
aaa
aam
and
test
sbb
rcl
push
fild
cmp
pop
fild
pop
add
add
cmp
mov
loopne
push
cs
call
ins
lock
adc
dec
mov
(bad)
xor
sub
or
dec
outs
arpl
pop
xor
dec
mov
dec
jns
xchg
pop
aaa
mov
push
push
inc
push
nop
fcmovb
popf
test
into
or
push
pusha
in
dec
cdq
push
adc
enter
stos
mul
add
or
enter
cmps
test
scas
push
int
push
out
mov
sbb
add
or
jne
lds
in
or
jne
or
jne
or
jg
xor
or
or
ret
mov
and
fist
outs
aaa
xor
mov
mov
outs
adc
jnp
outs
jne
sbb
jne
or
mov
xchg
repz
pop
ret
les
test
mov
jno
add
mov
dec
in
call
retf
xor
lock
imul
lea
das
sub
and
xchg
mov
loopne
dec
fadd
add
out
adc
ins
dec
enter
not
fdivr
mov
in
dec
stos
mov
push
add
popf
cmp
les
lods
inc
mov
dec
lods
imul
sbb
sub
mov
inc
add
clc
mov
jmp
aas
pop
and
or
adc
sbb
ret
xchg
xor
jmp
cmp
enter
fadd
xlat
fcmovbe
aam
mov
adc
pop
add
or
add
cmp
jne
inc
and
sub
call
sub
add
xor
and
in
clc
and
out
inc
or
push
int3
add
push
fcomp
xor
pop
jmp
push
int3
stos
pop
int3
inc
call
xchg
mov
adc
inc
mov
inc
push
rcr
retw
gs
sbb
jmp
cmp
cmps
pop
rol
test
inc
fmul
xor
ja
fstp
fwait
push
lds
push
pop
bound
mov
push
jo
mov
out
pop
ja
mov
ror
test
add
hlt
or
into
add
aad
add
jo
nop
add
outs
mov
mov
loopne
inc
add
mov
pop
enter
div
div
leave
mov
jb
sbb
pop
out
loopne
sbb
add
pushf
pusha
adc
mov
sahf
test
call
sbb
mov
cmp
sbb
adc
mov
mov
mov
ficomp
scas
pop
mov
jge
lahf
loope
ror
push
add
fcom
xchg
pusha
or
outs
push
popa
cli
add
inc
mov
and
nop
or
mov
enter
add
push
pushf
push
add
mov
add
or
rcr
ins
rol
cmp
scas
(bad)
lahf
ins
das
mov
push
das
movzx
push
add
add
(bad)
push
ja
cmp
or
ins
in
jmp
popa
push
outs
or
(bad)
cmp
cmp
jl
pop
cmp
scas
pushf
es
and
movs
cmp
add
mov
or
mov
jle
mov
pop
ja
adc
test
jl
mov
aas
(bad)
repnz
inc
or
in
cmp
dec
aaa
add
(bad)
or
add
in
sub
(bad)
mov
fadd
fdiv
or
mov
ret
pop
sub
mov
xlat
data16
push
ins
adc
jbe
sub
js
shr
push
push
sub
cmps
push
mov
xchg
loope
push
xor
push
mov
out
add
xchg
test
adc
push
adc
inc
mov
mov
int3
out
sbb
aas
pusha
inc
mov
cmp
fimul
mov
mov
sbb
or
push
mov
push
mov
fnsave
push
push
mov
adc
adc
rcr
ret
loop
test
add
ins
cmp
retf
test
jne
cmp
pop
outs
sar
or
retf
cs
mov
sbb
push
push
adc
or
add
add
push
jle
jmp
shl
sbb
ds
popf
ret
inc
aad
push
data16
xchg
rol
sub
out
(bad)
daa
cmp
pop
push
xor
addr16
inc
aam
clc
jl
hlt
lea
movs
add
adc
fcomip
(bad)
fdivr
jne
add
fistp
push
call
mul
push
and
push
test
je
adc
loope
pop
push
mov
adc
jl
lods
cmp
dec
jo
pop
clc
xor
xlat
mov
lea
jnp
adc
into
scas
(bad)
mov
lods
and
int3
and
(bad)
push
mul
mov
pushf
lea
and
idiv
pop
test
fisub
stc
lea
enter
sbb
xor
nop
iret
out
mov
loopne
mov
push
or
daa
int
ja
or
push
inc
adc
outs
mov
push
outs
fwait
xor
jmp
inc
outs
enter
inc
xor
cmp
retf
loop
push
mov
out
fsub
les
outs
mov
icebp
xchg
sub
loope
outs
aas
jb
inc
mov
adc
or
int3
pop
outs
mov
into
outs
pop
test
inc
outs
outs
jo
adc
outs
clc
add
inc
and
outs
jbe
inc
or
or
imul
adc
inc
pop
outs
push
add
add
or
mov
inc
stc
dec
dec
hlt
push
(bad)
ss
push
fmul
mov
add
test
mov
(bad)
clc
ja
jmp
jb
je
jmp
jno
in
add
test
out
dec
dec
add
lods
push
je
test
mov
or
loop
call
xchg
or
stos
icebp
js
mov
or
or
mov
int3
inc
adc
and
and
fwait
push
pop
mov
mov
add
jo
mov
add
dec
or
shl
stos
das
ja
ins
sbb
adc
ja
jnp
cmp
or
mov
cmp
dec
jo
add
outs
mov
dec
jne
fs
push
xchg
repnz
in
pop
inc
loopne
mov
pop
adc
mov
test
cmp
add
sbb
push
call
fidivr
push
fdivr
adc
mov
out
sub
xor
xor
push
xchg
push
push
outs
xor
push
sbb
pop
push
call
rcr
pop
add
nop
dec
lea
test
jne
xchg
fimul
inc
or
in
out
mov
int3
enter
and
mov
test
add
outs
clc
xchg
adc
dec
fiadd
add
add
fdiv
dec
jo
(bad)
out
ror
ja
mov
clc
jl
push
jl
cmp
mov
mov
inc
repnz
push
mov
mov
push
test
(bad)
call
pop
fistp
inc
bound
jmp
lods
test
add
movs
pop
push
mov
lahf
mov
lods
sbb
test
ss
xchg
inc
push
push
add
cmc
lea
and
and
xchg
dec
mov
cmp
jle
and
fcmove
icebp
push
jb
or
ja
bound
ins
jo
lea
es
(bad)
jg
and
cmps
sub
add
pop
jp
jno
sub
aaa
push
mov
cmp
fdivrp
out
aam
hlt
pop
aad
mov
dec
jbe
loope
xor
call
ins
in
or
je
jmp
dec
pop
inc
cdq
sbb
aas
sti
pop
rcl
or
adc
clc
inc
mov
sbb
mov
xchg
push
jae
push
mov
shr
adc
call
(bad)
or
rcr
and
mov
into
lahf
mov
cld
inc
hlt
mov
es
fsub
or
in
jmp
dec
int3
cld
fbstp
addr16
mov
(bad)
(bad)
xor
(bad)
cwde
dec
or
inc
push
cs
push
inc
jle
fmulp
in
xor
ds
jmp
and
jmp
push
sahf
cmp
xor
add
add
mov
fldz
fmul
jno
adc
ja
into
or
mov
cdq
in
adc
jp
jmp
cmp
sub
push
or
mov
or
std
lock
lods
fstp
fwait
add
xor
imul
sbb
and
mov
ret
in
pop
or
jo
fmul
ret
pop
outs
call
or
in
inc
pop
sahf
out
jnp
ds
sahf
mov
jo
enter
aad
stos
mov
inc
fmul
mov
or
mov
rol
aam
mov
imul
dec
mov
inc
into
jg
sbb
mov
mov
and
ret
mov
xor
mov
repnz
call
call
(bad)
adc
cli
push
or
(bad)
jae
push
jnp
inc
leave
inc
xchg
addr16
pop
test
xor
inc
cld
out
jge
mov
or
inc
ret
or
loope
inc
in
sub
gs
lock
add
pop
in
jmp
mov
ret
xor
in
inc
mov
xchg
out
call
sahf
rcr
stos
gs
mov
cmp
xchg
push
popf
add
test
dec
sub
gs
xchg
add
test
cmp
outs
das
retf
shr
inc
pushf
and
sub
nop
or
outs
in
xor
ja
or
push
jg
push
cmp
hlt
jl
adc
jg
mov
loopne
sbb
in
leave
in
push
cld
inc
inc
nop
sbb
clc
sbb
sub
pusha
adc
xchg
cld
push
loopne
mov
test
dec
mov
test
jp
add
shl
fistp
lea
add
adc
xor
fwait
adc
inc
pusha
jecxz
sub
cwde
pushf
fs
pop
or
dec
pop
adc
jle
adc
sub
xor
sahf
add
rol
loopne
loop
in
sbb
dec
fld1
push
ins
xor
inc
sub
neg
out
dec
aaa
add
adc
xor
xor
ins
adc
dec
mov
sub
mov
sub
int
rol
push
loopne
xchg
addr16
jg
mov
sbb
sub
cwde
frstor
out
inc
cmp
xlat
pushf
wrmsr
outs
stos
adc
addr16
or
add
add
or
or
ror
xchg
and
data16
icebp
test
es
je
or
sbb
aam
xchg
sub
push
jl
jae
adc
fsubr
retf
std
aam
les
cwde
call
xor
inc
xor
scas
dec
jbe
clc
clc
(bad)
(bad)
loopne
or
sbb
jmp
jmp
push
hlt
adc
lock
retf
jae
pushf
loopne
sub
(bad)
movs
ret
xchg
punpckldq
fdivr
leave
mov
nop
or
mov
idiv
pop
mov
sbb
jae
adc
jmp
or
stos
pushf
jg
cmp
add
scas
sbb
fs
sub
and
inc
retf
div
xor
or
xor
push
pop
bound
sbb
push
popa
xor
mov
scas
test
in
rol
pop
xchg
repnz
and
jp
in
and
push
scas
mov
adc
loop
das
shr
cmp
lahf
or
ja
shr
xlat
add
xor
add
xor
daa
test
out
or
popf
enter
push
mov
lock
mov
sub
and
mov
inc
or
ds
push
jle
ja
adc
clc
cmp
xchg
popa
inc
add
jge
adc
sub
ret
jmp
mov
dec
test
jge
jo
(bad)
fidivr
push
cli
in
pop
add
ret
jo
push
in
jle
pop
js
(bad)
mov
dec
jl
push
xchg
ins
adc
popa
xchg
popf
mov
add
ins
lea
cmp
ror
scas
mov
stc
cmc
sbb
out
ret
push
int3
addr16
cs
xor
mov
sub
enter
add
comiss
movs
pop
sti
fs
daa
shl
inc
push
shl
adc
jmp
call
fmul
dec
outs
adc
pop
push
fsubr
lds
adc
dec
mov
mov
push
mov
inc
jle
or
fist
movs
pop
push
jns
or
add
lea
test
or
lea
sbb
push
add
adc
div
adc
inc
push
and
xor
adc
or
in
push
adc
and
neg
sbb
inc
mov
xor
push
sbb
dec
shl
jmp
fisub
mov
out
inc
and
(bad)
xchg
repnz
mov
cmp
and
fdiv
(bad)
push
pop
sbb
std
or
adc
leave
leave
leave
adc
leave
leave
leave
sbb
sbb
leave
leave
leave
sbb
leave
leave
leave
add
add
leave
leave
leave
add
leave
leave
leave
or
or
leave
leave
leave
or
in
in
icebp
repnz
in
in
cmc
div
clc
in
in
stc
cli
sti
cld
in
in
std
(bad)
jmp
in
in
loope
jecxz
pop
out
in
out
pusha
pop
jmp
push
cmp
je
add
or
mov
out
cmp
sub
adc
xchg
or
mov
das
mov
stos
popa
les
ins
sti
adc
jmp
(bad)
cld
movs
rcr
ror
das
inc
cld
mul
sar
jns
adc
mov
std
sar
ror
movs
inc
fmul
xchg
(bad)
mov
push
retf
pop
inc
inc
push
push
aam
pop
loopne
jo
jg
(bad)
out
(bad)
std
jmp
or
jb
push
inc
inc
inc
inc
or
inc
dec
dec
push
dec
dec
push
inc
or
inc
sti
jnp
fld
pop
sub
es
push
push
push
push
pop
inc
push
add
test
inc
dec
inc
dec
inc
push
push
dec
push
push
pop
and
(bad)
call
jne
inc
push
push
pop
adc
popa
cs
inc
inc
outs
ins
ins
outs
outs
icebp
jae
cwde
ins
add
add
jmp
jbe
movhps
test
push
inc
jnp
dec
repz
mov
jns
iret
repz
je
scas
add
cwde
jg
sub
dec
adc
inc
lock
(bad)
jmp
jae
imul
push
arpl
push
inc
jb
mov
gs
add
push
jnp
push
jnp
and
ins
dec
enter
shr
and
loop
adc
(bad)
pop
dec
jnp
xchg
shl
popa
jne
xor
movs
inc
fld
cmp
shufps
add
mov
xchg
mov
mov
mov
inc
adc
out
push
dec
or
add
jbe
inc
jns
sar
xor
push
cmp
popa
outs
je
imul
xchg
dec
inc
dec
push
or
outs
push
fld
jbe
jnp
push
add
pop
mov
loop
mov
mov
(bad)
xchg
inc
fdivr
push
inc
sbb
dec
jno
int
into
adc
and
jo
or
nop
pop
div
outs
jb
pop
sub
sub
cwde
aam
jg
add
retf
dec
add
and
pop
das
jb
cs
(bad)
push
scas
rol
add
(bad)
(bad)
adc
call
loopne
ins
dec
push
add
(bad)
shl
xor
jno
inc
or
std
mov
inc
ret
xchg
retf
sbb
cwde
sub
ret
and
or
or
gs
add
lea
ins
jnp
add
push
or
call
add
cmps
adc
nop
cwde
or
dec
ins
jne
cmps
xchg
loope
pop
pop
gs
add
(bad)
movs
pop
adc
adc
cmp
cmp
mov
ins
pushf
adc
pop
jp
sub
ds
push
mov
movs
or
loop
in
aam
push
xlat
nop
or
cld
pop
fisubr
loope
cs
push
(bad)
mov
call
int3
add
daa
ror
add
dec
inc
sub
loopne
adc
dec
adc
cmps
movs
pop
or
call
dec
or
jb
push
cs
les
iret
push
call
add
jmp
dec
test
jl
outs
sbb
dec
mov
add
jne
mov
push
movs
push
push
dec
xchg
add
dec
jne
mov
dec
add
fsub
loope
psubusb
test
dec
jbe
gs
add
(bad)
mov
add
cmps
repnz
push
or
retf
or
push
push
push
rol
sti
mov
lods
enter
rcl
or
pop
push
xor
test
out
in
dec
add
push
xchg
sub
aaa
ret
jnp
add
xchg
adc
shl
mov
cdq
adc
jne
lock
test
and
xor
lods
adc
fwait
clc
or
adc
arpl
pop
sub
pusha
or
xor
mov
in
pop
pop
or
inc
adc
cdq
int3
cmp
jle
pop
int3
dec
cmp
push
adc
add
jle
or
push
je
adc
jg
or
xor
ror
mov
pop
pop
and
cdq
pop
pop
jl
jne
cmp
stos
aas
cmp
inc
test
scas
cwde
pusha
adc
shl
js
xor
pushf
push
cs
cld
push
lods
fmul
add
pop
mov
aad
or
push
shr
jl
pop
sub
out
mov
add
push
sbb
add
pop
ret
push
fisubr
mov
and
jp
movzx
das
adc
add
dec
cmp
adc
ja
jg
pusha
cmp
push
nop
call
or
sbb
div
or
cmp
push
add
out
jmp
bound
div
add
je
push
mov
dec
mov
xchg
(bad)
adc
push
pop
pop
or
add
adc
adc
lahf
add
xchg
adc
and
test
add
jns
push
or
or
push
sub
lahf
sbb
add
imul
sub
push
mov
mov
clc
lods
rol
push
ss
shr
push
cwde
(bad)
and
inc
jnp
ss
sub
adc
call
aas
inc
jmp
lea
mov
xor
adc
(bad)
mov
pop
mov
push
or
aad
neg
inc
push
jle
jmp
fsubr
jno
or
sbb
inc
mov
cmps
lea
and
sub
cmp
adc
or
jge
lods
sar
in
retf
sbb
add
mov
fcom
push
call
ins
mov
add
jmp
call
mov
loopne
sub
mov
adc
pusha
movs
pop
in
jge
inc
out
adc
sbb
sbb
xor
in
pop
push
pop
ins
and
mov
aam
or
push
push
pusha
dec
mov
in
cmp
push
std
and
jnp
adc
dec
fidiv
add
js
lahf
add
and
xchg
mov
outs
je
and
fidiv
add
jo
xor
stos
and
xor
mov
add
adc
or
loopne
(bad)
xchg
in
dec
(bad)
jl
inc
(bad)
inc
cmp
adc
inc
imul
xchg
cmp
adc
xchg
sar
rcl
push
shl
call
(bad)
xor
add
pop
mov
loopne
sti
aaa
sbb
inc
jmp
mov
adc
mov
pop
add
fadd
xchg
add
adc
inc
dec
dec
in
and
jmp
adc
stos
mov
test
push
push
cmp
loopne
inc
mov
je
aam
sub
add
ja
aam
mov
pop
aam
cmp
push
jno
cmp
push
pop
jno
and
and
mov
add
in
out
fwait
loope
jo
push
int3
or
xor
adc
sbb
fwait
jecxz
(bad)
std
pop
push
mov
mov
movs
jmp
dec
pop
cld
mov
add
inc
icebp
and
rol
test
sbb
jecxz
xor
jnp
pop
icebp
sub
test
cmps
sbb
or
mov
add
push
add
fcomp
inc
push
mov
jle
sar
test
lods
push
add
les
cmps
sub
pop
sbb
mov
clc
ins
mov
es
sar
lea
pop
mov
cmps
mov
cmps
pusha
leave
jae
jo
xor
addr16
loopne
in
xor
in
stos
sbb
pop
hlt
jg
push
push
retw
sub
rol
imul
dec
int3
xlat
int3
and
pop
jmp
retf
test
inc
icebp
jne
pop
addr16
in
lahf
nop
add
jmp
cmp
sbb
xchg
xchg
hlt
xchg
adc
pusha
js
ins
pop
outs
setb
loopne
cmp
and
cs
(bad)
daa
pushf
dec
arpl
ror
sahf
jmp
pop
or
lods
sbb
out
sbb
rcr
ret
sbb
jp
xor
or
fistp
or
push
ret
mov
call
daa
(bad)
cmp
sub
les
add
xchg
lock
or
adc
je
stos
sbb
mov
repz
lock
shr
mov
push
mov
jmp
adc
mov
mov
mov
je
fimul
add
add
or
pop
add
je
ja
pusha
push
adc
adc
fmul
jle
lods
adc
outs
cmp
dec
xchg
push
pop
out
mov
adc
push
repnz
or
inc
loopne
ret
cmp
ret
adc
or
retf
test
add
push
push
xlat
enter
pop
enter
mov
loop
arpl
aas
std
and
daa
pop
mov
add
in
pop
loop
mov
and
mov
(bad)
dec
add
pop
icebp
add
sub
inc
add
retf
mov
push
jnp
std
cmp
and
in
or
jg
aas
pop
pop
mov
outs
xor
add
or
push
mov
push
sub
fsubr
mov
and
xor
cmp
sbb
or
dec
idiv
pop
xor
lods
add
in
pop
dec
add
pop
test
inc
xchg
pop
sbb
inc
mov
jecxz
xchg
(bad)
frstor
cmp
call
into
sub
push
jg
or
aaa
clc
lahf
or
imul
imul
imul
jns
enter
(bad)
les
ins
mov
jp
ja
scas
sbb
or
popa
bound
sbb
div
sar
add
dec
and
cld
xchg
add
push
jo
jne
ja
jb
dec
push
add
and
mov
mov
(bad)
arpl
imul
jmp
xchg
xor
mov
addr16
dec
or
jae
xor
xchg
jne
inc
rol
xor
or
movntps
push
cmp
loopne
idiv
or
hlt
pop
jae
mov
or
push
retf
cmc
push
bound
pop
(bad)
jmp
ja
xor
ins
adc
popf
jne
push
enter
outs
jle
fwait
push
cld
js
gs
imul
push
or
arpl
das
jo
xor
mov
sub
outs
pop
or
retf
and
(bad)
add
add
mov
fsubr
inc
pop
jbe
ja
aad
xor
shl
fcom
pop
ror
pop
inc
jbe
outs
je
or
inc
cmp
add
das
pop
sbb
push
mov
jmp
push
bound
sub
outs
out
add
pop
push
lds
pop
add
sbb
jae
popa
out
ins
lods
out
sbb
xor
sub
cmp
mov
sub
sbb
xor
in
movs
cmovbe
jae
bound
sbb
cs
(bad)
xor
(bad)
outs
mov
adc
cmp
and
jmp
(bad)
iret
pop
xchg
das
cmp
or
mov
sbb
shr
push
imul
pop
addr16
jbe
add
push
daa
retf
das
add
mov
mul
push
mov
mov
jle
add
stos
push
addr16
push
getsec
push
inc
xor
add
push
mov
mov
push
rcr
push
inc
xor
xor
xlat
push
adc
fmul
es
add
mov
pusha
stos
mov
jbe
aad
pop
clc
outs
jns
cmp
or
test
jae
add
lea
pusha
jbe
bound
inc
inc
jbe
bound
xchg
inc
leave
mov
inc
es
sbb
fdiv
dec
aad
cmp
add
pop
mov
push
inc
inc
or
pop
push
cli
add
xchg
add
sahf
add
jge
add
or
repnz
push
inc
lock
cmp
push
in
cdq
popf
popf
jbe
add
pop
mov
and
pop
test
dec
ja
sub
cmps
jns
(bad)
mov
in
fnstcw
in
mov
ins
xor
mov
(bad)
cwde
xor
sub
cmp
hlt
push
push
ss
out
push
push
rcl
sub
sub
dec
mov
outs
inc
das
push
add
fadd
out
out
cmp
push
push
in
add
or
cmps
and
shl
xchg
push
in
and
cmps
or
mov
jnp
in
xor
ds
push
or
xor
rol
popf
int3
fsubp
mov
test
sub
sub
das
nop
ret
arpl
(bad)
jne
aas
imul
cmp
repz
std
inc
sub
or
ss
loope
sub
adc
pop
xor
movs
dec
pop
pop
pop
jbe
mov
popa
loopne
add
add
fnstcw
push
aaa
ss
repnz
ret
fucomip
out
push
out
lock
call
push
movs
mov
fnstenv
add
xor
add
into
(bad)
or
cwde
js
jo
adc
xor
test
mov
or
push
loopne
sbb
add
cmp
sbb
ror
push
inc
dec
ja
gs
and
call
adc
dec
pop
mov
xchg
mov
sub
popa
dec
add
pop
add
sub
dec
mov
lods
add
stos
out
(bad)
add
push
aaa
addr16
pop
fwait
jge
in
mov
hlt
push
cs
pop
push
nop
jb
aad
cmp
cmp
mov
adc
mov
(bad)
repnz
mov
das
cmp
test
outs
lock
add
jecxz
add
cmp
sub
fisub
stc
jae
cmp
or
inc
outs
push
push
outs
add
jae
push
dec
(bad)
mov
pusha
or
scas
outs
cmp
shl
mov
outs
dec
adc
jno
imul
inc
mov
rcl
jbe
jnp
mov
daa
sbb
cld
pop
add
and
dec
call
dec
dec
dec
adc
nop
cmp
mov
sub
sub
inc
dec
sub
add
mov
loope
pop
dec
adc
cmp
ret
leave
sbb
mov
inc
adc
imul
cmp
jns
or
inc
jne
adc
and
mov
mov
jnp
lea
add
or
or
xchg
or
hlt
bound
xor
add
pushf
sbb
sbb
out
add
sbb
mov
cmps
inc
inc
add
popa
pop
cmc
add
shl
sub
push
stc
cmps
add
or
or
add
adc
sbb
sub
movs
sbb
or
ins
sbb
add
(bad)
fmul
pop
repz
aas
outs
or
pop
push
es
bound
cmp
or
and
xchg
scas
mov
jo
cmp
push
ret
mov
or
cs
(bad)
cmps
cmp
dec
outs
jb
push
pop
sub
ins
pop
fcom
div
or
je
add
enter
lods
cmp
lock
ss
mov
push
fstp
add
add
lods
mov
mov
adc
emms
test
je
add
imul
mov
mov
pop
(bad)
sub
daa
call
stos
out
adc
outs
inc
pushf
sub
popa
jbe
sti
lock
ins
inc
push
clc
outs
aaa
mov
js
gs
iret
mov
add
sbb
ss
jo
hlt
push
jmp
bound
jo
pop
mov
sub
test
lds
xor
fwait
xchg
sbb
pushf
mov
add
xchg
fisub
aam
push
dec
mov
ror
fsubr
pop
les
cmp
retf
push
fsubr
mov
or
lea
and
dec
add
or
mov
xor
mov
rol
xor
jae
outs
sub
inc
dec
adc
pop
inc
dec
shr
sub
cmps
popa
dec
ja
popa
adc
ja
sbb
add
inc
inc
es
push
(bad)
ins
aad
outs
fsubr
pop
pop
add
dec
aas
add
aas
loope
pop
retf
or
adc
pop
into
add
icebp
mov
hlt
cmp
inc
mov
fmul
jno
xchg
push
mov
outs
xor
or
cmp
shl
call
sub
ret
je
cmp
inc
ret
pop
adc
sar
ret
test
retf
(bad)
pop
sub
sub
imul
pushf
mov
dec
fst
pop
adc
or
jmp
push
xchg
sub
(bad)
shl
daa
xchg
inc
and
and
mov
mov
push
add
push
pop
adc
xchg
pop
pop
std
push
dec
imul
xchg
mov
mov
ins
xlat
or
mov
(bad)
lock
test
out
mov
cmp
and
cmp
or
in
sbb
mov
ror
fisub
adc
js
and
push
inc
and
push
xor
mov
push
jne
ins
pop
pop
nop
jo
shl
cmp
rcl
cld
push
shl
ror
push
in
xlat
jbe
fstp
xchg
dec
outs
es
ds
jbe
cwde
push
lock
mov
repz
es
sbb
les
and
dec
aas
iret
add
adc
out
cmp
pop
cwde
jnp
push
pop
push
imul
push
xchg
outs
jge
xlat
mov
ds
jne
lea
gs
lods
sbb
test
dec
xor
sub
mov
clc
(bad)
daa
add
push
mov
add
int
dec
divps
outs
aam
jns
int
arpl
daa
adc
dec
setne
xor
dec
rcr
loopne
ja
ret
shr
repnz
mov
xchg
add
push
adc
ins
xor
add
push
jns
inc
clc
dec
fistp
bndldx
bndstx
divps
nop
inc
adc
push
add
add
push
icebp
mov
inc
adc
shr
jbe
and
jecxz
es
sub
push
sub
scas
mov
scas
sub
mov
scas
and
inc
int3
add
test
cmp
sbb
pop
pop
xor
stc
pop
jae
jmp
xor
test
mov
in
pop
mov
push
test
into
cmp
gs
fidiv
xor
dec
imul
lods
xor
xor
adc
jmp
jmp
and
push
fisub
popa
lahf
xchg
push
mov
inc
inc
mov
popa
scas
xchg
xor
mov
xchg
sub
sub
jnp
add
ss
push
pop
cmp
add
fistp
mov
jns
nop
pop
or
aas
sub
(bad)
fwait
or
or
adc
sahf
outs
add
push
or
mov
dec
mov
adc
and
and
out
mov
adc
mov
and
inc
shrd
adc
mov
or
dec
xor
xchg
jle
retf
push
xchg
retf
adc
femms
jo
push
jo
adc
(bad)
add
sub
(bad)
(bad)
lahf
or
pop
adc
mov
pusha
hlt
dec
mov
adc
push
adc
add
sub
pop
dec
stc
arpl
js
push
mov
or
add
jae
jmp
dec
or
add
dec
and
scas
(bad)
and
push
add
lods
push
jb
pop
test
fiadd
and
mov
je
push
mov
nop
pop
pop
(bad)
jl
pop
stos
mov
aaa
push
or
mov
push
xchg
or
and
push
sub
daa
adc
add
sbb
xchg
xchg
dec
inc
aaa
and
pop
shl
imul
es
add
in
rcr
mov
xor
js
gs
sbb
out
xor
in
mov
pop
cwde
aam
dec
push
adc
scas
mov
push
mov
dec
cmps
add
shl
ud2
out
add
clts
cld
mov
sbb
adc
inc
push
jne
jle
sbb
ret
(bad)
jge
and
jb
cmp
pop
mov
jo
scas
je
mov
mov
or
inc
mov
mov
adc
xor
inc
dec
popa
or
or
aam
sub
jge
outs
ja
push
pusha
push
or
fcomp
sub
imul
gs
jbe
das
popf
cmp
popf
dec
pop
xchg
dec
fs
fcmovne
sahf
mov
dec
loopne
and
or
push
and
adc
add
push
push
push
ds
outs
inc
mov
imul
call
xchg
loope
stos
nop
xor
fs
ds
xor
dec
sbb
popa
ins
outs
addr16
jne
iret
sub
or
or
dec
cmp
pop
pushf
inc
movs
adc
(bad)
ss
or
ret
sbb
ins
pop
add
push
adc
stc
cmp
test
inc
xor
fist
out
pop
test
dec
loope
add
dec
loope
xchg
xchg
fldenv
nop
mov
retf
sbb
ins
xchg
xchg
xchg
retf
xchg
retf
sub
xchg
xchg
xchg
mov
in
or
or
aas
mov
or
pop
inc
adc
fs
call
inc
or
dec
dec
pop
in
in
pop
xchg
pop
sbb
xchg
call
dec
push
or
mov
dec
push
fcom
dec
adc
ins
out
push
or
mov
mov
pop
cs
out
dec
lock
inc
ins
add
pop
shl
push
adc
test
clc
aaa
shr
xor
pop
pop
mov
pop
mov
stos
test
sbb
or
adc
scas
mov
push
loop
jno
add
xlat
mov
push
and
adc
pop
mov
jge
xchg
xor
hlt
push
sbb
sar
inc
clc
outs
mov
or
add
push
sub
and
sub
pop
push
aam
mov
inc
xchg
mov
jnp
jge
scas
push
push
mov
jne
push
cmp
mov
and
adc
call
dec
pop
mov
xor
sub
les
add
pop
std
fs
or
xor
cmp
lods
and
enter
je
adc
xchg
xchg
loop
and
popa
push
mov
mov
sub
outs
jne
loope
outs
inc
mov
mov
(bad)
mov
cdq
out
mov
jmp
js
inc
(bad)
std
sbb
add
xor
sub
push
pop
sbb
sbb
add
pushf
pop
dec
pushf
push
dec
add
mov
(bad)
scas
hlt
sub
int3
push
bndldx
jge
adc
pop
sbb
stos
pop
sbb
add
daa
adc
daa
mov
ror
xchg
inc
js
je
and
ds
pop
ror
jo
sub
cli
sbb
and
push
pop
shl
aas
mov
mov
das
dec
sub
or
inc
add
jno
(bad)
adc
repz
imul
mov
mov
and
lods
outs
js
les
mov
xchg
seto
dec
mov
and
or
jge
pop
and
push
stos
je
xchg
xchg
retf
xchg
xchg
mov
sbb
xchg
xchg
push
jne
adc
xor
jl
outs
and
or
nop
xchg
push
pop
dec
test
test
push
and
pushf
retf
mov
and
jecxz
or
dec
sub
xchg
(bad)
fsubr
push
sub
nop
rcr
imul
push
sub
cmp
pusha
adc
jae
pop
in
rol
sti
in
call
push
in
mov
mov
in
dec
fistp
ins
push
push
fadd
push
pop
inc
add
lar
mov
push
ins
jl
lahf
test
mov
wrmsr
push
mov
mov
push
loopne
lods
adc
pop
loopne
mov
pop
push
inc
neg
mov
push
hlt
data16
mov
push
add
add
mov
or
mov
ins
rol
or
push
jecxz
push
mov
addr16
out
arpl
adc
pop
add
ss
push
mov
jns
push
jns
cmp
(bad)
add
aaa
punpckhbw
sbb
sub
imul
inc
lahf
add
mov
mov
dec
lahf
sub
adc
repz
test
add
add
or
add
jbe
add
lds
push
dec
add
ins
inc
mov
add
shl
pop
pop
or
in
push
add
mov
int
ja
movs
add
aas
add
mov
pop
push
push
push
shr
test
push
adc
pusha
push
sub
hlt
jns
fist
push
push
rcr
or
jp
pop
pusha
sub
add
popa
fisub
pop
inc
jnp
push
mov
mov
sbb
test
jb
add
lods
and
xchg
cmp
jo
pop
mov
(bad)
out
ds
mov
gs
mov
push
sub
inc
push
or
push
or
cmp
rcr
cmp
dec
lea
push
sub
add
adc
gs
mov
adc
pop
add
loopne
je
or
push
or
arpl
jb
xor
ret
sbb
wbinvd
push
mov
int
add
ss
int3
and
imul
adc
add
pop
xchg
mov
or
sbb
out
mov
hlt
inc
add
add
sti
xor
cmp
inc
pop
push
je
jmp
nop
add
push
js
adc
sub
mov
idiv
mov
neg
push
mov
dec
lock
add
pop
cmp
dec
inc
jns
push
adc
mov
ja
xchg
sub
and
cmp
rol
rol
add
or
fldenv
mov
push
jle
add
out
xor
movups
mov
and
inc
mul
adc
xor
add
call
dec
and
inc
cmp
jae
sub
rcl
mov
addr16
bound
and
pop
sbb
cwde
xchg
rol
stos
lea
or
xchg
and
dec
shl
shl
adc
xor
add
xchg
and
mov
mov
xor
xor
xchg
pop
push
or
jecxz
pusha
scas
add
retfw
xor
add
imul
cmp
cmps
xor
mov
and
push
dec
and
add
lods
je
jno
in
es
pop
jge
add
add
outs
fsub
cld
push
or
mov
popa
push
push
bound
xchg
push
push
lea
pop
iret
lock
push
(bad)
movs
push
mov
(bad)
fidivr
pop
push
push
sbb
movs
push
lods
push
hlt
out
popf
or
push
aam
shl
push
xor
sub
and
push
fcomp
push
js
sahf
neg
pause
sbb
loopne
cld
push
mov
es
push
and
das
xor
inc
sahf
popa
jo
inc
test
jge
dec
push
mov
shl
jmp
sbb
push
jne
daa
jle
xchg
adc
outs
ret
daa
retf
add
pop
arpl
jne
lods
xor
arpl
cdq
push
jge
daa
mov
adc
ins
fs
xor
cwde
dec
jp
jp
adc
jb
push
and
imul
inc
adc
inc
mov
sub
jecxz
pushf
adc
adc
dec
outs
cld
test
jno
xchg
push
mov
pop
or
lsl
sub
cmp
lods
add
mov
nop
sub
dec
add
ret
cmp
push
mov
jae
shr
or
add
ins
dec
rcr
outs
or
push
push
jb
arpl
jno
cwde
cmp
inc
add
pop
add
cmp
push
sbb
ss
push
mov
adc
jbe
loopne
push
imul
push
jg
inc
js
(bad)
int
shl
or
retf
push
xor
push
adc
pop
mov
fisub
(bad)
enter
or
in
enter
cmp
enter
lods
into
push
and
sti
and
sub
(bad)
mov
sbb
push
jae
xor
cmp
pop
push
inc
xlat
sbb
lea
inc
stos
fild
cmps
inc
push
inc
xchg
scas
push
cmp
pop
iret
inc
mov
and
push
mov
add
ror
stos
add
push
pop
aaa
mov
fs
lea
sub
push
mov
loope
jl
sub
es
push
bound
adc
and
shr
je
sti
or
ins
cmp
jbe
inc
inc
dec
outs
ins
jns
pusha
sbb
nop
inc
or
mov
or
arpl
xor
or
inc
shl
arpl
lods
cwde
test
push
pop
cmps
ins
sbb
push
and
hlt
push
dec
or
inc
pusha
fild
daa
pop
xchg
or
jmp
push
ss
add
arpl
xor
or
or
dec
popa
mov
pop
sbb
mov
sub
push
cmp
ds
xchg
push
add
dec
mov
retf
push
mov
sub
pushf
mov
mul
aam
hlt
push
movs
push
or
xlat
xlat
jbe
sbb
inc
scas
loopne
mov
cli
adc
jae
adc
rol
and
pop
xor
call
xor
sti
add
adc
test
sbb
push
ror
and
and
jbe
pop
imul
je
mov
pop
imul
rcl
(bad)
jmp
shl
xor
inc
mov
call
jnp
push
mov
(bad)
loopne
pop
and
sub
outs
jne
push
daa
sub
pop
scas
add
mov
das
imul
jae
outs
std
cs
sub
mov
bound
mov
test
sbb
std
mov
push
scas
jge
jb
or
jo
push
test
(bad)
mov
mov
aaa
inc
cli
or
adc
int
pop
test
out
and
inc
imul
cwde
pop
lock
je
jmp
pop
ins
repz
ins
lock
push
rcr
push
add
xor
mov
sub
mov
jl
sbb
sub
cmp
jbe
add
ror
xor
test
cmps
pop
sbb
(bad)
addr16
xchg
sbb
or
xchg
push
push
loopne
dec
mov
or
scas
rol
mov
mov
inc
adc
push
push
syscall
add
jmp
sysret
add
adc
add
cmp
xchg
das
or
adc
test
shl
scas
push
and
dec
fwait
out
cmps
scas
push
es
or
pop
xchg
and
aaa
sbb
push
mov
shl
fisttp
dec
lods
sbb
sbb
aas
xor
or
fs
and
aaa
or
pusha
mov
test
mov
or
push
mov
cwde
push
(bad)
cmovns
push
movs
cmp
mov
and
inc
jo
rsqrtps
mov
mov
leave
sbb
add
je
mov
jg
das
mov
rol
xor
push
adc
xchg
xor
adc
in
adc
pop
cmp
and
pusha
(bad)
loope
push
inc
movs
cmps
mov
push
mov
jns
xchg
jp
xchg
test
cmp
adc
adc
das
pop
xor
jge
dec
out
mov
js
cmc
push
xchg
nop
sbb
fld
int3
and
add
jnp
and
aaa
out
or
sbb
inc
add
in
dec
jae
push
rol
das
jae
ds
sub
push
push
mov
es
push
int3
mov
fdivr
xor
dec
push
push
pusha
(bad)
out
mov
xor
mov
add
push
fidivr
mov
aam
mov
dec
push
and
test
pop
push
sub
push
jnp
neg
push
in
or
out
neg
and
inc
push
pop
enter
fidivr
mov
loopne
call
push
test
fsubrp
jnp
inc
xchg
cwde
call
out
js
scas
sbb
scas
sahf
out
out
fs
xchg
es
in
mov
add
rcl
or
mov
outs
xor
call
fiadd
inc
dec
jae
and
rcr
add
cmp
mov
fist
retf
or
and
dec
nop
bndldx
stos
sbb
aad
adc
lds
nop
jne
push
add
repnz
nop
mov
mov
push
je
lahf
push
mov
jbe
and
in
lahf
loop
loopne
and
stos
pop
out
int3
shl
movaps
dec
sub
cvtpi2ps
mov
fld
js
sub
sub
add
jbe
movaps
rdtsc
add
jns
retf
xchg
sub
add
add
pop
out
fidiv
add
add
dec
in
cmp
(bad)
popa
fs
lahf
cmp
fnstsw
ins
clc
push
xor
inc
mov
popf
pop
xchg
rcr
push
test
or
jno
cmp
push
xor
fs
or
js
and
xor
sbb
or
dec
or
xor
inc
jmp
sub
mov
test
bound
or
add
pop
in
jb
mov
xor
inc
outs
jae
push
imul
or
jle
pop
inc
sub
pusha
mov
dec
lock
in
sub
or
push
mov
loopne
outs
outs
jo
imul
in
mov
mov
into
dec
outs
loopne
pop
pop
xor
imul
jno
and
add
shr
addr16
loopne
fdivr
pop
push
dec
add
lods
(bad)
cmp
inc
and
dec
fs
push
xor
add
mov
rcl
out
rol
dec
adc
loope
sbb
xor
mov
in
and
xor
loope
add
inc
stos
inc
and
mov
pop
mov
outs
jne
push
mov
mov
add
aas
repz
add
add
dec
lahf
push
dec
data16
push
lahf
adc
outs
rol
inc
jne
cdq
mov
adc
pop
pop
lock
dec
gs
je
fcmovnb
call
out
mov
into
popa
ins
jo
out
dec
sub
mov
lea
hlt
ins
int3
or
aam
jns
pop
adc
nop
jmp
arpl
ins
popa
sub
sbb
popa
inc
inc
dec
ss
sub
or
ins
das
jo
jnp
ins
push
inc
mov
outs
arpl
adc
ja
xchg
(bad)
xlat
test
mov
add
add
adc
cmp
xchg
pusha
pop
(bad)
pop
inc
mov
push
mov
push
cwde
sub
dec
jo
and
cmp
and
adc
mov
mov
dec
dec
sti
mov
rcl
push
xchg
add
xor
imul
inc
jle
bound
imul
shl
cs
ins
mov
pop
mov
inc
lods
sbb
mov
pop
inc
dec
ss
add
mov
add
jne
fbstp
and
xor
stos
sti
pop
cmp
ds
add
jnp
inc
cwde
push
scas
mov
pop
push
jns
or
pop
jge
lods
out
sub
rol
xchg
cwde
test
les
outs
test
sbb
bound
rol
jl
ficom
inc
dec
jge
cmp
or
jne
or
imul
push
dec
clc
ja
shl
popa
lock
fiadd
lea
loop
pop
dec
mov
adc
jge
sub
inc
or
xchg
mov
inc
inc
inc
(bad)
clc
sbb
inc
inc
inc
inc
pop
and
in
jg
push
aam
inc
inc
jbe
pop
les
sar
pop
cmp
dec
arpl
movs
inc
nop
jmp
jae
jae
sbb
lea
shl
imul
or
xor
sbb
call
aam
add
mov
adc
pop
push
out
push
jnp
inc
retf
mov
inc
push
adc
push
cmps
(bad)
inc
inc
ret
sbb
dec
and
pusha
xchg
mov
scas
loope
cmc
ret
push
add
dec
sbb
inc
jge
pusha
rcl
mov
pop
popa
or
sub
sub
dec
push
push
adc
daa
mov
or
daa
mov
iret
push
adc
pop
dec
or
or
bound
test
inc
daa
sbb
lds
(bad)
mov
push
inc
and
sbb
pmuludq
or
rol
push
push
cmp
push
retf
pop
es
in
xor
or
dec
push
mov
mov
repz
mov
mov
mov
pop
mov
sbb
loopne
in
fidivr
repz
and
cs
push
sbb
rol
push
adc
push
push
jnp
mov
cld
push
cmp
les
fcomp
cld
xchg
push
lods
les
fdivr
dec
mov
mov
push
je
lods
(bad)
mov
push
pop
inc
mov
pop
retf
add
jmp
repnz
sbb
lock
cmova
cmp
xchg
fbstp
push
dec
cld
pop
mulps
xchg
mov
add
pop
add
dec
jo
cmp
pop
add
sub
punpcklbw
test
popa
adc
bound
sub
inc
xchg
xchg
arpl
add
cld
test
jae
add
in
das
imul
mov
add
ins
add
cmps
movd
out
push
movs
cld
outs
add
mov
jl
test
mov
fdiv
jae
loope
loope
push
dec
xor
ins
dec
sub
ins
cmp
pop
cmps
shl
rol
pop
int3
jae
lea
lock
pop
push
mov
(bad)
out
adc
and
inc
jne
mov
mov
mov
fidivr
mov
imul
ins
push
jge
add
ja
shl
sbb
cmps
jge
jno
sub
imul
xchg
pushf
push
bound
imul
mov
imul
int
jo
repz
xor
ins
ja
ja
(bad)
imul
arpl
jbe
aaa
mov
add
retf
push
in
sbb
sub
rol
mov
dec
xchg
adc
dec
shr
add
xor
dec
std
sbb
ins
ret
mov
add
xor
ins
mov
mov
(bad)
fmul
leave
ins
cmps
sbb
ins
lds
and
inc
xor
ret
or
and
outs
push
sub
rcr
pop
dec
sti
in
outs
je
push
fist
je
arpl
add
cs
push
sbb
jne
push
push
fisttp
push
jns
jmp
push
je
add
rcl
pusha
ud1
dec
jecxz
mov
mov
or
and
push
pop
pop
mov
shr
inc
jnp
loope
add
xchg
adc
aas
stc
adc
test
and
xchg
or
add
pusha
push
dec
les
push
and
add
and
mov
push
or
add
test
add
scas
int
pop
loop
lods
lods
int
cwde
pop
or
mov
mov
ins
add
movs
ins
ins
scas
dec
add
jl
ja
xor
fbstp
pop
into
fimul
or
mov
pop
mov
inc
mov
aad
pop
mov
sub
mov
mov
sub
add
ss
cmp
rol
adc
inc
fwait
sub
inc
test
in
mov
mov
inc
cmp
sub
cmp
inc
add
push
push
shl
cmp
ficom
inc
inc
cmp
les
adc
add
test
loopne
jle
test
jne
pop
mov
jns
push
mov
inc
mov
lea
push
push
ss
add
nop
cs
addr16
mov
shufps
stc
add
lods
xor
xchg
push
je
call
fistp
add
push
mov
sti
push
dec
pushf
rol
cmps
js
mov
pop
mov
daa
jmp
and
and
ds
or
sub
add
jns
dec
xchg
pop
mov
lds
ds
push
test
or
data16
jl
mov
mov
push
mov
ret
fcom
push
jl
push
mov
ja
mov
out
jnp
out
inc
btc
push
push
ins
mov
test
push
mov
shl
xchg
jl
xchg
je
inc
add
ins
xor
xchg
test
xchg
inc
mov
dec
es
mov
ds
mov
hlt
dec
push
push
mov
cmp
push
inc
push
pushf
mov
push
test
push
ror
xchg
jbe
loopne
or
adc
adc
cmp
jb
add
and
inc
dec
(bad)
inc
fdiv
inc
dec
jbe
jb
ins
outs
ja
adc
jo
xlat
and
in
and
xchg
cmp
sbb
jno
add
or
jecxz
setne
add
in
xchg
aas
syscall
add
add
retf
sbb
wbinvd
add
xchg
or
or
popa
or
mov
verr
adc
pop
xchg
mov
cmovae
inc
add
inc
loop
mov
inc
add
inc
or
dec
add
dec
add
dec
dec
cdq
cmovl
pop
in
mov
pusha
ret
dec
mov
dec
mov
push
push
add
jns
inc
and
adc
dec
pop
dec
mov
mov
das
adc
adc
dec
and
pop
loopne
mov
cs
test
cmps
scas
xchg
fcomp
or
push
fisubr
stos
sub
retf
pop
ins
push
push
push
sub
and
in
cmp
lds
push
sub
mov
or
call
cdq
add
sti
push
add
and
push
ret
popa
push
adc
push
sbb
push
sbb
adc
mov
test
sub
mov
xor
inc
and
sbb
dec
sbb
push
xchg
mov
sahf
clc
sub
mov
adc
adc
push
mov
out
sub
popf
cmp
inc
xor
loopne
xchg
or
push
test
icebp
cmp
mov
cmp
add
jne
jne
imul
pop
stos
cwde
cmp
imul
mov
adc
dec
and
outs
or
adc
jl
push
bound
add
loop
push
call
push
jno
dec
lea
jnp
dec
and
xor
jno
and
fdiv
leave
sub
xchg
mov
add
inc
pusha
jae
jae
xchg
fsub
xchg
jae
and
and
mov
mov
add
lds
mov
mov
or
adc
outs
(bad)
fsub
mov
xor
pop
add
sbb
sub
push
add
pop
(bad)
pop
jmp
sbb
sbb
ret
imul
mov
lds
adc
call
add
es
ja
adc
push
call
daa
lahf
mov
js
ret
pop
je
repnz
ret
rcr
or
mov
neg
daa
enter
fmul
les
pop
or
mov
xor
mov
js
pop
add
mov
mov
nop
push
es
push
jecxz
shr
mov
adc
add
daa
xor
mov
add
mov
or
cmp
sahf
(bad)
clc
btc
add
add
push
fsubr
sub
addr16
cmovle
fwait
push
add
jb
bswap
inc
xchg
sbb
jge
icebp
in
pop
sub
push
or
retf
aad
(bad)
dec
push
rcr
and
rcr
xchg
cwde
add
test
test
dec
es
test
mov
pop
sbb
push
inc
cmp
inc
adc
xchg
xor
xchg
and
jae
stos
or
sub
add
cmp
adc
ret
pop
adc
loopne
push
jge
(bad)
mov
cs
cmp
sbb
fwait
adc
xor
jns
sub
sub
sub
sbb
imul
add
and
rol
ficomp
test
fsub
aam
add
sti
jle
repz
das
push
mov
pop
sub
and
mov
mov
pop
sar
push
add
shl
outs
jb
sub
pop
test
call
adc
test
cmp
fcmovbe
mov
mov
movs
push
pop
inc
je
ja
adc
jo
(bad)
aas
mov
test
cmp
repz
pop
mov
mov
scas
aas
les
aas
sbb
inc
je
and
push
aas
fdivr
repz
push
rol
add
or
aas
pusha
sub
movs
push
mov
pop
cwde
jmp
inc
fild
jge
push
inc
ja
bndstx
in
pop
sahf
(bad)
add
je
cmps
shl
ror
add
syscall
add
push
sti
mov
mov
loopne
or
aas
cmps
pop
test
cmps
cmovae
jg
xchg
pop
(bad)
sbb
cmovne
lock
add
test
retf
add
cmovns
aad
loope
sbb
push
cmps
push
cmp
cmp
adc
leave
rcr
jl
leave
push
das
jge
sub
into
call
push
cmp
push
or
sub
or
test
and
xor
std
and
in
(bad)
std
push
retf
mov
std
push
push
pop
or
arpl
jmp
lods
inc
sbb
sti
sti
imul
push
retf
push
mov
movs
mov
or
je
ffreep
stos
mov
mov
cmp
aad
sub
(bad)
mov
dec
sub
aad
aad
test
sbb
outs
mov
retf
sub
inc
sbb
aad
aad
push
bound
jno
add
push
test
jno
adc
adc
or
jno
add
mov
sbb
das
pusha
or
dec
or
jne
mov
dec
and
sub
xor
ins
imul
jmp
sahf
pop
(bad)
cmp
or
cmp
mov
ins
cmp
push
fsubr
adc
and
stos
lock
leave
das
mov
push
mov
cs
push
das
lock
pop
or
les
jne
scas
xor
les
outs
pop
push
sbb
das
or
mov
push
cs
pop
inc
das
outs
fsubr
out
stos
sub
mov
enter
(bad)
sub
ins
inc
stc
bnd
sub
pop
add
xor
add
scas
str
mov
adc
mov
ror
add
scas
stc
xor
dec
add
pop
(bad)
add
push
mov
mov
inc
inc
adc
or
popa
push
stos
cdq
mov
popf
mov
shl
out
xor
out
mov
aad
jnp
mov
adc
xor
adc
jb
mov
movs
mov
mov
(bad)
lds
mov
mov
pusha
adc
enter
push
inc
int
or
cmp
mov
in
xor
jns
add
and
ins
xchg
fsubr
and
pop
sub
and
shl
rcl
push
sub
and
jbe
mov
movs
mov
push
add
mov
(bad)
mov
clc
cmp
or
aad
imul
push
inc
paddq
inc
ret
push
outs
or
push
add
(bad)
pop
dec
adc
out
push
dec
pop
dec
adc
pop
pop
jmp
shr
lock
mov
iret
sti
fidivr
push
int
push
nop
int3
pop
push
cmp
inc
into
(bad)
jnp
jecxz
push
xor
mov
mov
es
push
push
pop
les
jo
inc
xchg
xlat
add
into
jmp
imul
adc
frstor
add
rcl
add
nop
bound
fs
subps
(bad)
add
out
add
add
or
rcl
test
xor
xchg
pop
dec
or
jmp
add
mov
add
sub
(bad)
ltr
jne
rdmsr
mov
inc
dec
cmove
add
(bad)
add
int3
repnz
pop
mov
dec
add
push
mov
mov
mov
dec
mov
push
add
xor
dec
js
cmp
ins
push
test
xor
ret
push
test
sub
dec
cld
aaa
sbb
rcl
inc
retf
ja
add
pop
push
ja
ins
rol
aas
jecxz
add
sub
imul
inc
xor
xor
mov
sub
pop
pop
adc
xor
add
mov
test
imul
sbb
imul
push
xor
add
mov
mov
push
or
inc
imul
(bad)
push
dec
sbb
imul
in
add
push
pop
mov
add
pop
pop
xchg
push
cmp
or
adc
mov
adc
jo
lds
iret
xchg
pop
sub
add
jb
dec
or
add
mov
lods
and
mov
and
xchg
jae
jl
xchg
pop
adc
xor
xchg
ret
bound
mov
jno
add
dec
xchg
enter
test
imul
jae
nop
fadd
adc
imul
test
int
add
mov
popa
je
mov
lods
or
pop
mov
cmp
movs
dec
lods
ins
movs
and
lods
test
popf
sbb
jae
push
or
or
stos
and
or
imul
mov
fbstp
call
cmp
add
ret
push
sbb
out
pop
je
push
dec
je
je
ja
je
dec
pop
sbb
push
or
sahf
out
xor
pop
push
add
sbb
cmp
mov
or
xchg
loopne
fnstcw
sbb
sahf
jnp
std
dec
pop
sbb
in
push
fcomp
hlt
daa
push
mov
push
test
inc
push
jg
and
mov
add
or
jbe
xchg
push
adc
cs
ror
sbb
cmc
inc
dec
or
ja
inc
sbb
movhps
inc
arpl
repnz
cld
syscall
add
add
jg
outs
shr
wbinvd
add
cld
or
or
ud2
add
das
pop
out
push
xchg
prefetch
xor
add
clc
or
cmps
inc
pop
cmovs
ror
retf
lahf
mov
add
mov
jp
movups
repnz
add
add
xor
ds
loopne
daa
(bad)
in
loope
sbb
ror
das
dec
mov
xchg
test
and
dec
jnp
lds
sahf
arpl
mov
push
adc
icebp
je
push
sub
adc
push
mov
mov
sub
stos
rcl
les
stos
jmp
and
imul
sbb
daa
push
retf
adc
sbb
fwait
xlat
imul
test
jmp
add
xor
xlat
sbb
xor
xlat
cmp
pop
test
clc
sbb
jmp
mov
push
jae
sub
or
sbb
pop
adc
jno
pop
mov
rcl
inc
adc
cmp
add
and
and
fs
jno
sub
adc
pusha
les
mov
inc
and
jae
pusha
test
ins
pop
pop
push
ret
or
ins
loope
push
call
sbb
imul
lahf
push
rol
jae
jbe
cmp
add
retf
push
cmp
push
push
mov
ret
(bad)
outs
sar
adc
xchg
push
loopne
jns
out
push
pusha
jo
pushf
pop
jne
sahf
sub
pop
outs
xor
push
lods
cmp
xchg
lahf
test
push
add
or
or
fldcw
and
les
push
and
cmp
fdivr
call
push
outs
push
lods
mov
nop
or
pop
jl
add
inc
mov
inc
jmp
out
aas
jle
das
inc
dec
add
add
pop
add
mov
syscall
add
push
mov
push
pushf
pop
(bad)
mov
sbb
jg
or
mov
and
or
adc
jl
stos
push
test
prefetch
jno
add
inc
add
inc
sub
cmovs
push
retf
popf
or
add
mov
retf
add
add
jb
in
push
jne
(bad)
cmps
add
call
je
push
jne
loope
sub
adc
and
arpl
sahf
cs
imul
lds
or
mov
pop
ja
sub
ja
pop
or
dec
ja
adc
sub
ja
add
ja
jl
sub
ss
ja
ret
push
ja
loopne
push
mov
shr
ja
add
xor
jno
mov
ja
ja
jne
sub
ja
lock
ja
test
push
pop
ja
rol
sbb
sub
ja
or
and
or
mov
xchg
ja
loopne
add
cs
jno
fadd
jae
xor
bound
cs
mov
inc
ja
or
jmp
nop
mov
and
or
mov
pop
adc
scas
out
pop
add
jnp
rol
add
dec
fisttp
rcr
js
push
xchg
add
mov
mov
jg
fidiv
inc
test
es
ss
repz
repz
pushf
add
jl
test
pop
fadd
push
jg
mov
ja
dec
jg
or
pop
mov
push
scas
int3
fnstsw
loopne
test
push
sbb
ins
fistp
jnp
mov
push
and
int3
js
mov
pop
push
jg
jo
rcr
ss
jg
pop
add
pop
mov
jg
pop
idiv
aaa
test
add
dec
add
add
repnz
add
gs
(bad)
add
jp
stc
repnz
add
btr
sub
wbinvd
cli
xorps
bound
add
scas
loope
or
ror
inc
push
imul
xchg
inc
add
dec
mov
(bad)
out
lods
inc
add
dec
ror
add
cmovnp
lock
add
loop
jo
sbb
setg
(bad)
cmps
adc
sub
xor
shl
inc
rol
xlat
bound
mov
add
cmp
push
and
sub
imul
shr
fcomip
push
loopne
cdq
mov
push
repz
pop
lea
loopne
push
ret
jmp
add
repz
sub
dec
jo
aas
rep
mov
pop
mov
mov
repz
push
repz
xor
gs
cmp
lds
mov
add
push
dec
dec
repz
or
mov
pop
pushf
dec
sub
fistp
mov
outs
ret
adc
and
sbb
gs
and
adc
push
jno
jo
inc
mov
or
push
sbb
xchg
mul
les
mov
inc
and
jno
fadd
jae
xor
xchg
gs
gs
icebp
shr
sub
adc
sub
add
or
fcom
and
or
or
fsubr
faddp
and
push
mov
push
addr16
aam
ja
jbe
add
inc
add
xlat
addr16
repz
jnp
ror
mov
adc
repz
sbb
nop
push
pop
adc
das
out
pop
mov
int3
scas
adc
xchg
loopne
cmc
data16
out
pop
add
pop
jnp
sbb
push
hlt
push
adc
inc
fdivr
rol
xchg
push
push
push
addr16
test
and
(bad)
out
adc
pop
pop
outs
add
push
xchg
pop
popw
out
neg
pop
imul
or
cld
sub
pcmpgtb
(bad)
add
add
imul
pop
inc
(bad)
pop
shr
mov
wbinvd
mov
or
sbb
or
inc
les
adc
or
cmovne
repnz
fimul
inc
add
add
lahf
push
cmovae
sti
dec
sbb
comiss
scas
add
dec
fmul
dec
add
dec
add
out
adc
jg
sysret
mov
loope
or
mov
mov
ins
rol
inc
dec
cmp
and
cmp
mov
cs
dec
sub
add
fidiv
outs
push
or
xor
popa
mov
jg
adc
add
pop
sub
inc
scas
rcl
test
outs
pop
sub
or
ss
add
mov
and
outs
pop
xor
push
test
mov
and
push
jo
mov
ror
dec
sub
or
test
sbb
and
pop
outs
outs
and
and
test
cmps
outs
jno
adc
adc
adc
adc
outs
inc
mov
inc
stos
outs
shr
mul
mov
jno
add
and
and
outs
adc
mov
outs
xor
xchg
fdiv
bound
inc
cmp
outs
jae
shr
outs
sahf
inc
or
or
outs
test
outs
inc
sub
pusha
ins
outs
or
or
repnz
imul
pop
adc
mov
iret
sub
popf
out
sbb
cmp
in
push
and
icebp
popf
(bad)
pop
fild
sub
add
out
sahf
out
push
jl
cmp
mov
mov
sbb
pop
scas
or
outs
int3
push
outs
adc
adc
inc
mov
les
shl
cmp
cmp
or
data16
je
mov
push
cwde
dec
push
lock
and
clc
and
adc
into
outs
push
pop
add
mov
outs
dec
mov
mov
adc
outs
jns
sub
add
loopne
aas
ret
in
pop
add
mov
push
dec
(bad)
add
mov
add
loope
add
add
add
(bad)
mov
or
adc
ja
cld
push
ret
or
seta
cmovae
jecxz
inc
add
das
jg
retf
add
inc
cmova
icebp
dec
add
repnz
sub
dec
add
add
fcmove
je
push
add
dec
jb
stos
aam
in
add
add
or
retf
and
pop
jns
lods
or
jne
push
test
outs
inc
pop
and
adc
sub
mov
pop
scas
push
sub
pop
and
xchg
jne
add
rol
mov
pop
push
pop
ins
xor
imul
imul
scas
rcl
pop
adc
sbb
inc
add
inc
mov
and
add
add
xchg
and
bound
arpl
jb
push
imul
or
push
cmp
fcom
cmp
or
pop
and
cmp
inc
mov
cmp
mov
add
rcl
rcr
lea
outs
shl
shl
pusha
xor
ror
mov
add
rcl
je
push
stos
adc
jno
jo
pusha
les
ficomp
jl
xchg
fadd
cmp
or
lods
jmp
jae
xchg
or
ret
ins
push
test
jmp
inc
jbe
cmp
sbb
outs
fsub
adc
into
pop
ins
add
push
adc
inc
jno
and
xlat
jae
xchg
popa
ss
and
imul
les
ds
mov
xchg
mov
out
shl
add
out
push
dec
call
std
callw
(bad)
mov
dec
jmp
push
loope
push
mov
jmp
pushf
or
sub
mov
in
push
ror
iret
sbb
pop
ds
loopne
lock
into
or
inc
iret
pushf
out
sahf
out
imul
pop
out
push
adc
inc
sar
jne
jns
mov
dec
ins
les
adc
jmp
push
fdivr
mov
test
sbb
inc
into
or
adc
mov
or
push
jmp
(bad)
repnz
add
daa
mov
fcom
maxps
repnz
add
or
imul
mov
add
add
xchg
das
pop
inc
add
adc
retf
xchg
das
ja
dec
add
add
and
dec
add
mov
pop
dec
(bad)
add
dec
nop
loop
add
in
xchg
inc
inc
js
scas
in
or
bound
ins
or
dec
dec
pop
or
stc
pusha
add
hlt
mov
(bad)
les
pusha
scas
xor
addr16
pusha
les
or
push
scas
adc
imul
inc
or
ret
push
mov
and
ret
scas
mov
shr
daa
scas
popa
adc
push
jne
mov
or
sbb
scas
dec
and
inc
pop
xor
mov
mov
imul
rol
add
pop
add
dec
ins
xor
and
sbb
and
mov
pusha
cwde
pop
adc
adc
xor
pop
jno
add
test
sub
pop
jno
and
inc
es
pop
ror
sbb
loop
cmp
pop
inc
and
pop
cmps
bound
ja
sub
push
ins
and
ins
in
push
mov
add
cli
jns
adc
mov
jns
ror
inc
mov
adc
test
and
cmps
mov
add
lods
mov
push
pop
add
repnz
ret
enter
jle
neg
repz
xchg
in
push
or
sbb
inc
fdivr
jo
fsub
pushf
push
out
test
adc
fisubr
(bad)
loopne
sbb
je
fisttp
xor
out
inc
out
out
push
repz
cs
push
hlt
push
sbb
cmp
test
test
mov
es
das
out
mov
es
or
mov
hlt
or
or
movs
daa
loop
sbb
cmc
daa
dec
inc
das
jg
sbb
in
imul
jge
retf
nop
xor
add
syscall
push
test
stos
sysret
add
imul
mov
add
wbinvd
add
or
pop
lock
scas
xor
prefetch
mov
icebp
cmovae
push
pop
cmc
cmove
gs
add
mov
test
dec
cmovns
jg
retf
add
add
dec
add
out
adc
xadd
xor
aad
mov
push
or
cmc
fistp
out
add
pop
pop
dec
js
pop
push
cmp
rol
add
or
adc
leave
mov
fbstp
adc
push
fisttp
add
xor
add
scas
pop
(bad)
lods
inc
pop
lea
mov
imul
and
push
inc
or
ret
push
add
mov
or
mov
fist
push
sbb
ins
pop
mov
xor
fisttp
test
fistp
fisttp
fild
inc
js
fbstp
xor
mov
and
fbstp
pusha
adc
fistp
fild
les
mov
inc
and
jae
pop
adc
nop
fbstp
xor
xchg
(bad)
inc
bound
inc
fbstp
mov
sub
fbld
fbstp
and
add
fbstp
mov
fbstp
xchg
fadd
lock
aaa
lahf
fist
push
dec
ins
fbstp
fild
and
push
sbb
rcl
fbld
adc
add
sub
xor
mov
add
outs
mov
jo
stc
es
das
icebp
push
clc
adc
push
cmp
jnp
ja
cs
push
push
pusha
je
push
into
repz
pushf
in
fcomp
inc
fcom
outs
rol
sub
xchg
adc
outs
neg
rol
enter
pop
jns
out
push
les
inc
cwde
sub
mov
movs
push
outs
stos
push
mov
pushf
test
out
push
dec
add
pop
and
and
outs
add
lahf
loopne
or
pop
add
(bad)
sub
push
dec
movaps
xor
movaps
sbb
ror
jno
movaps
js
loopne
sub
sub
xor
scas
sbb
std
movaps
mov
lar
dec
in
cmove
sbb
inc
add
clc
or
pop
cmovs
paddd
stos
dec
adc
dec
in
dec
add
dec
add
cld
sbb
(bad)
cmps
add
outs
aad
es
mov
push
pusha
jg
loopne
inc
xchg
rcl
push
cmp
sub
pusha
adc
sub
inc
imul
adc
jae
popa
xchg
or
outs
jno
adc
sub
adc
or
pop
ins
adc
sub
inc
pop
cmc
outs
sti
push
outs
push
push
and
inc
js
fld
push
sbb
fiadd
mov
and
xor
push
and
mov
inc
mov
test
inc
outs
mov
sbb
outs
push
loope
or
pop
xor
push
outs
pop
sub
outs
jo
mov
les
mov
inc
and
jae
pop
adc
nop
outs
jno
xor
xchg
outs
cli
inc
bound
inc
outs
jno
mov
sub
outs
mov
outs
ss
add
outs
jae
sub
and
ins
inc
mov
and
sbb
mov
push
ins
outs
sub
bound
dec
test
outs
repnz
inc
and
sbb
test
outs
inc
or
push
iret
sub
cmps
mov
adc
push
mov
test
jbe
push
enter
push
add
das
movaps
(bad)
js
popf
mov
mov
add
add
push
and
push
pusha
loopne
hlt
inc
pusha
mov
sbb
stos
adc
outs
(bad)
scas
adc
cmp
outs
pop
test
enter
mov
(bad)
cld
mov
enter
out
mov
add
push
sbb
push
test
outs
adc
pushf
shl
outs
mov
add
outs
add
adc
mov
pmulhw
pop
shr
mov
aas
or
jne
xchg
mov
add
retf
add
dec
push
add
add
jae
adc
or
popf
or
movsx
xor
or
pusha
cmovae
fwait
jmp
out
inc
inc
cmovne
cmovbe
inc
cmova
jg
dec
cmovns
icebp
mov
xchg
pop
dec
add
or
dec
mov
and
clts
ror
push
cmps
or
xlat
imul
add
and
cmp
dec
xor
mov
popa
dec
scas
shl
fadd
popa
xchg
or
ins
xchg
bound
and
mov
push
and
and
and
aad
rep
sti
add
lea
and
inc
js
push
push
fldcw
sbb
fiadd
add
or
ins
push
push
and
jo
mov
ror
dec
ins
inc
or
test
sbb
mov
adc
pop
inc
sbb
xor
sub
jno
pop
test
sar
adc
dec
ins
inc
mov
and
sbb
and
test
pusha
clc
ins
adc
or
bound
jno
add
test
inc
ins
jae
add
push
sbb
ins
pusha
adc
mov
ins
push
dec
test
ins
ins
les
ss
xor
ins
ins
ins
lea
nop
lock
or
or
sbb
fild
aad
popf
mov
test
xor
push
jbe
fisubr
ds
inc
add
or
or
inc
mov
mov
lods
ds
jnp
jmp
mov
pusha
nop
test
mov
addr16
clc
sahf
push
fdiv
mov
xlat
and
sbb
out
test
inc
mul
pop
js
mov
(bad)
sbb
jns
sbb
aam
push
adc
sahf
pop
mov
addr16
bound
ja
mov
inc
call
push
dec
mov
inc
retf
inc
neg
add
sub
sbb
cmovbe
into
imul
mov
push
inc
inc
jns
gs
fidiv
stos
xchg
outs
or
dec
pop
addr16
(bad)
mov
pop
inc
dec
data16
xor
or
xor
scas
call
xor
push
jbe
inc
ins
outs
ja
mov
push
push
dec
add
(bad)
js
shl
mov
cmovb
dec
cmp
push
packssdw
sahf
or
inc
jb
jns
mov
jge
inc
test
jb
jns
sbb
jmp
inc
pop
sub
sbb
ret
mov
xlat
push
bound
add
dec
popa
or
pop
sub
retf
add
xchg
mov
idiv
jl
bound
dec
or
xor
ret
xor
aas
sbb
push
imul
sub
je
push
ss
loopne
push
mov
add
mov
aas
push
popa
aas
in
fisttp
out
jns
popa
ins
jmp
sub
add
add
ss
daa
fnstsw
add
enter
add
test
out
aas
sbb
mov
out
adc
xchg
retf
(bad)
push
(bad)
je
or
loopne
adc
rcr
mov
push
fs
ret
out
push
mov
pop
or
push
loope
sbb
dec
aad
movs
shr
mov
retf
pop
pop
pop
and
add
xor
add
jmp
das
pop
and
call
dec
add
sub
jbe
cmp
adc
in
push
xor
sbb
das
push
push
xor
cmp
sub
or
int3
ds
push
push
push
add
rol
ins
push
sub
add
std
loopne
loopne
or
push
arpl
(bad)
mov
inc
dec
popa
jae
outs
outs
imul
or
into
out
or
jb
cli
jne
xor
xor
call
cmps
jo
ror
xor
mov
add
ficomp
popa
mov
adc
push
pop
push
push
inc
push
jmp
pop
jnp
jbe
push
sub
push
or
add
push
dec
into
sbb
xchg
daa
dec
push
(bad)
cmp
jbe
cmp
add
pusha
inc
xchg
or
ins
into
or
cmp
inc
pop
ins
xor
or
pop
mov
inc
outs
jne
sbb
and
aad
aam
xchg
mov
adc
inc
pop
sub
adc
push
aad
call
sub
push
push
outs
dec
gs
ret
jb
aaa
or
push
xor
add
gs
test
mov
xor
xchg
nop
add
outs
fdivr
push
add
add
jge
adc
das
fs
adc
scas
or
int
push
cmp
push
cwde
push
cmps
and
xor
add
jno
jno
mov
dec
popf
and
mov
and
inc
push
adc
pop
pop
aad
out
adc
inc
push
add
inc
cmps
jmp
inc
enter
hlt
push
sub
pop
cmps
inc
inc
shr
push
push
mov
or
lock
jne
ret
or
inc
and
inc
jno
xchg
in
cli
and
push
xchg
or
(bad)
pusha
inc
and
cwde
mov
mov
bound
sbb
xchg
fadd
mov
bound
bound
jmp
mov
mov
and
bound
pop
test
sti
popf
(bad)
dec
out
dec
push
sgdtd
mov
imul
push
fs
add
mov
add
data16
inc
pop
xor
push
pop
sub
fs
movs
push
mov
inc
sub
push
pop
fld
data16
push
pushf
mov
ret
ja
pop
and
cs
xchg
pop
inc
outs
int3
mov
add
inc
test
mov
pop
xchg
or
call
adc
cmp
dec
or
jb
cmp
ror
outs
sub
jo
jne
xor
and
dec
popa
dec
ins
pop
push
jb
test
or
push
pop
add
push
inc
pop
mov
sub
fdivr
pop
lds
scas
add
xchg
or
cmp
mov
add
aas
add
jb
lock
neg
comiss
push
pushf
mov
sub
fimul
popa
add
jno
add
xchg
xor
add
inc
jne
pop
retf
pop
or
fs
or
push
out
fisub
popa
or
fs
rcl
push
sbb
lahf
in
les
enter
dec
dec
sub
shr
in
dec
pusha
and
pop
inc
fld
mov
push
pop
add
pop
test
push
adc
mov
or
push
test
aaa
test
pop
push
cmc
mov
fstp
aaa
outs
push
lahf
loopne
mov
push
add
xchg
sbb
(bad)
push
mov
jo
add
int
sub
sbb
add
cmp
sbb
push
push
or
pusha
adc
cmp
mov
out
or
mov
movs
cli
inc
es
push
mov
fcomp
(bad)
pusha
or
lods
or
js
out
sti
aam
mov
push
mov
fwait
adc
fmul
(bad)
jo
lock
sub
mov
out
loopne
pop
inc
xor
je
mov
inc
xor
jo
or
sub
inc
push
imul
add
dec
shl
addr16
jg
pop
add
pop
or
femms
add
pop
stos
xadd
movlps
adc
das
jg
inc
xchg
dec
add
or
mov
add
cmp
cpuid
push
(bad)
ror
jmp
jne
cmps
ds
and
cwde
(bad)
pop
aam
mov
xchg
or
cmp
cmp
out
xchg
push
ins
add
add
lahf
and
mov
(bad)
jae
inc
or
(bad)
sub
sbb
mov
push
adc
push
outs
add
push
or
pusha
in
sar
mov
adc
retf
and
mov
or
lock
aad
or
sbb
sub
jecxz
wbinvd
xor
xor
outs
sub
mov
fld
push
inc
lds
and
icebp
pushf
and
das
dec
adc
ins
cmp
push
fisttp
leave
das
imul
inc
pusha
das
mov
(bad)
loopne
dec
test
push
(bad)
cmp
mov
add
and
sbb
add
add
push
dec
sbb
pop
(bad)
push
das
mov
sbb
jmp
sbb
cld
test
loopne
aas
mov
lea
xlat
pop
sbb
fidiv
dec
hlt
mov
sbb
inc
xchg
ret
ja
icebp
push
xor
popf
movd
cvtps2pd
sbb
jge
cmps
pop
push
lar
iret
data16
sbb
jo
jne
leave
xlat
les
test
adc
test
or
pop
add
add
rcr
add
adc
jns
cmp
inc
add
or
sbb
cmp
push
pop
in
mov
jg
imul
adc
push
mov
xlat
mov
scas
add
es
mov
sub
xor
push
test
mov
push
inc
in
push
daa
pop
or
mov
inc
daa
and
jmp
push
out
dec
xchg
xor
mov
inc
shl
stos
(bad)
daa
inc
sbb
sbb
inc
into
mov
repz
fs
fs
hlt
clc
test
pop
and
test
les
push
outs
ja
popa
movs
and
js
mov
outs
fs
je
and
fsubr
dec
push
mov
dec
popa
js
test
xchg
inc
adc
sub
dec
lahf
loope
jl
sub
(bad)
enter
sub
or
add
push
jo
lahf
adc
add
daa
cmp
mov
jne
(bad)
lock
adc
push
sbb
arpl
xor
sar
out
push
inc
jecxz
movs
aaa
cwde
push
push
fisttp
push
arpl
xchg
inc
movs
or
xchg
fdiv
js
sub
or
add
fsubr
add
adc
nop
pop
loopne
ins
adc
imul
pop
das
pop
pusha
inc
add
push
xchg
in
sar
gs
and
mov
pop
push
stc
dec
jae
inc
(bad)
sub
add
jmp
stos
add
sub
push
push
inc
add
and
jmp
add
add
or
and
push
scas
out
add
je
out
or
and
pop
outs
pop
fld
xor
add
jecxz
popa
aaa
add
arpl
add
loopne
sub
sub
cvtps2pi
std
xor
mov
imul
fwait
or
mov
imul
push
mov
add
jp
mov
add
xchg
adc
rcr
pop
shl
aas
in
adc
or
pop
or
popa
dec
add
ins
add
xlat
pop
sbb
aad
mov
mov
loop
mov
sub
push
daa
in
das
inc
xor
test
inc
outs
add
dec
lock
sbb
adc
dec
outs
inc
jb
sbb
ja
in
aam
es
push
jb
arpl
(bad)
daa
or
inc
ins
ins
add
ret
dec
sub
iret
lock
gs
sub
cmp
inc
and
xchg
or
es
xor
sub
or
pop
cmp
je
and
rcl
rcr
in
dec
add
push
and
dec
ds
mov
push
imul
fisttp
sbb
pop
stos
pusha
jb
repnz
inc
outs
(bad)
fisttp
ja
loopne
dec
daa
in
aas
adc
out
out
cmp
dec
mov
pcmpgtd
movs
mov
and
pop
out
out
(bad)
rcl
or
jle
adc
jns
sbb
repnz
inc
jns
inc
movs
addr16
mov
or
dec
add
(bad)
loopne
mov
test
xchg
or
and
inc
sti
sub
fwait
sbb
outs
fwait
or
rol
adc
and
ret
addr16
shl
jne
pop
add
mov
jo
add
mov
or
sub
imul
dec
mov
fwait
or
add
sub
inc
js
jo
cmp
sahf
pop
aad
jo
sub
and
lods
push
imul
pop
ins
cmps
or
fs
adc
ja
(bad)
in
sub
das
shr
lods
inc
push
shl
mov
add
dec
or
dec
lahf
xlat
mov
dec
adc
(bad)
call
jno
xchg
mov
rol
pop
ret
push
sub
add
push
data16
in
je
fsubr
or
jne
or
pop
or
inc
add
adc
pop
jae
retf
punpckhbw
fisubr
jb
add
mov
syscall
add
lock
and
sysret
cmp
imul
or
out
or
cmp
xchg
mov
shr
cmp
or
arpl
ltr
jmp
dec
test
add
sub
cmp
ins
pop
fld
imul
push
mov
mov
dec
popa
fs
add
push
aas
jne
add
adc
add
mov
cs
push
imul
adc
push
inc
je
iret
sbb
mov
int
ins
adc
shl
iret
in
and
xor
ss
push
xor
inc
push
lods
ins
aas
sub
outs
jne
sti
test
pusha
cmp
test
retf
ins
sub
xlat
push
loopne
pushf
cwde
xlat
inc
jecxz
shl
sbb
mov
xchg
int
mov
add
ror
or
push
in
mov
add
push
imul
mov
cwde
arpl
mov
add
ins
stos
cmp
adc
or
sub
push
inc
and
outs
enter
jo
pop
add
sbb
test
push
fist
or
outs
adc
cmp
push
jns
sub
je
cmp
or
cmps
sbb
add
or
and
mov
ds
add
push
enter
fstp
push
loop
push
jmp
xchg
les
jno
sahf
push
adc
push
inc
xor
jge
aas
add
cmovbe
jb
popa
add
xchg
ret
adc
or
dec
popa
xchg
and
popf
and
out
sub
adc
pop
in
and
xchg
sbb
add
pop
jnp
dec
ret
add
push
aas
push
pop
mov
push
outs
lea
fwait
push
inc
xor
je
lods
adc
daa
in
xor
cwde
sbb
push
mov
xchg
fcom
shl
int3
shl
or
outs
xor
add
mov
lods
call
scas
inc
mov
cmp
loopne
int
aaa
fwait
add
push
ins
inc
fbstp
add
pop
pop
adc
cmp
xchg
push
(bad)
or
cmp
scas
pop
fwait
sti
push
inc
ror
aas
lods
xor
daa
fsubr
(bad)
push
mov
inc
sbb
clc
test
cwde
xchg
arpl
cli
mov
adc
fsub
dec
fadd
sub
inc
jmp
aam
pop
jne
xor
daa
pop
pop
push
add
ds
inc
push
lds
xchg
fstp
inc
push
mov
push
sbb
jo
mov
lock
xchg
es
push
movs
mov
inc
jo
add
sbb
fs
mov
cmp
xor
mov
ja
aaa
das
fsubr
pop
mov
outs
ss
repz
ins
push
add
jne
popa
shl
arpl
dec
add
nop
arpl
jne
add
cmp
inc
call
das
xchg
int
push
mov
add
adc
fldlg2
sub
rcl
ins
mov
add
push
pop
inc
leave
push
sar
lods
mov
nop
shl
push
push
add
out
into
fadd
or
hlt
dec
stos
add
test
inc
mul
add
addr16
push
rcr
xor
loopne
inc
inc
call
pop
or
or
inc
push
in
repnz
and
sbb
movs
pop
add
or
adc
push
add
inc
sbb
in
mov
hlt
sub
xchg
pop
cdq
mov
mov
test
cmps
mov
mov
test
add
xchg
mov
dec
cmp
pop
in
je
pop
inc
xlat
add
sub
outs
cmp
mov
loopne
shl
outs
add
pop
imul
out
jae
bound
sub
cmp
xor
(bad)
jecxz
fild
jo
sub
mov
sub
scas
pusha
adc
retf
ins
xor
sub
sbb
add
jge
dec
daa
lods
(bad)
sub
push
xlat
push
daa
adc
mov
scas
daa
(bad)
sbb
mov
loopne
mov
push
adc
cmc
inc
fsub
in
ds
push
mov
pop
push
mov
stc
jmp
or
add
scas
xlat
jmp
sub
gs
(bad)
jne
xor
cmps
cs
pushf
mul
lds
(bad)
dec
mov
scas
es
and
inc
sub
pop
xlat
es
daa
mov
outs
inc
and
ins
daa
or
jecxz
fldenv
ret
or
xlat
pusha
stos
retf
or
mov
std
cmp
daa
sub
dec
mov
add
test
xor
jmp
xchg
push
adc
adc
add
push
sbb
cmp
xor
add
push
clc
push
(bad)
mov
push
in
jo
les
mov
mov
pop
push
shr
repz
push
or
xor
push
pop
jnp
cmps
jne
add
push
repz
fisub
push
lock
clc
neg
ror
mov
mov
out
cmp
sahf
xchg
fcomp
add
inc
out
push
hlt
iret
repz
jae
outs
push
jl
mov
cmp
push
push
pusha
dec
xor
cmp
ds
push
adc
push
add
xchg
fld
je
ja
pop
inc
adc
shr
jb
shl
push
(bad)
inc
add
push
mov
jl
cmps
inc
jmp
dec
mov
pop
jb
add
mov
test
imul
xor
dec
gs
and
pop
and
xchg
pop
fnsave
ins
jbe
fwait
mov
mov
inc
jno
fcomp
ja
xchg
lods
jle
out
jnp
adc
popa
outs
fs
popa
arpl
xor
movs
fisttp
xor
sub
js
sbb
mov
add
bound
es
cmp
push
fmul
dec
mov
jo
imul
or
and
mov
daa
xor
cs
add
sub
dec
pop
mov
cmp
xchg
mov
push
mov
xor
sub
not
fisttp
add
add
or
xchg
lahf
pop
test
push
sbb
ja
push
wbinvd
mov
mov
push
gs
outs
cmp
clts
pop
or
sbb
shr
pusha
add
sub
mov
je
push
cdq
lea
outs
cdq
vpunpckhqdq
ret
push
pop
bound
sahf
ret
add
push
xor
push
inc
adc
pop
inc
and
ins
add
cdq
inc
fcomp
xchg
ret
inc
ret
lods
adc
daa
jae
push
loopne
lea
movs
and
sub
lods
pop
sub
mov
push
xlat
arpl
dec
xor
add
pop
xor
loopne
and
and
pop
mov
xor
pop
xchg
jae
or
add
add
or
int3
sbb
xchg
push
add
outs
and
push
xchg
outs
fisttp
mov
xchg
push
mov
or
add
mov
cmp
cmp
test
push
xchg
jo
imul
test
inc
lods
idiv
in
and
push
mov
mov
push
aas
xchg
in
inc
fsub
sub
mov
and
test
fdivr
(bad)
mov
xchg
test
ds
scas
sub
jno
or
and
mov
jecxz
mov
adc
push
aas
out
pop
shl
(bad)
sbb
(bad)
pushf
mov
ds
mov
pusha
add
mov
jb
pop
mov
xlat
sbb
sbb
sahf
or
hlt
push
inc
dec
outs
test
gs
ja
xor
(bad)
ret
out
xchg
ficom
aam
cmp
dec
ret
orps
(bad)
fisttp
jne
ss
pop
jbe
jecxz
jl
xor
xor
mov
add
xor
pop
nop
js
add
push
xor
pop
jo
xchg
inc
push
push
cld
adc
addps
jbe
dec
push
dec
dec
pop
cmp
push
jne
loopne
out
add
sbb
jmp
shl
push
sbb
inc
mov
or
jbe
adc
adc
fst
inc
mov
test
pusha
sub
pop
das
and
je
dec
and
dec
xor
add
sbb
loope
les
add
ret
loope
add
ret
cdq
add
inc
fistp
cli
add
test
pop
inc
mov
mov
lock
retf
push
mul
pop
ins
push
outs
sbb
pop
adc
arpl
dec
mov
inc
add
cs
push
push
fcom
ror
jecxz
out
dec
pop
cmp
xor
cmp
sub
sbb
or
(bad)
loope
jo
leave
or
scas
or
mov
jo
test
xor
test
hlt
inc
jne
rol
js
out
push
pop
ins
inc
imul
inc
cmp
pop
cmps
cpuid
add
popa
fs
xor
int
or
mov
les
in
push
data16
pop
push
and
push
or
cmps
punpckldq
mov
es
out
(bad)
mov
mov
loop
pop
out
out
in
pop
sbb
into
jnp
sub
je
icebp
rol
push
dec
shl
or
sub
mov
(bad)
ins
bound
imul
loope
jbe
push
jbe
push
in
(bad)
cmp
bnd
add
pop
jnp
xchg
mov
pshufw
and
jbe
push
test
mov
xor
shl
inc
dec
pop
cmp
pop
jae
push
shl
sub
lods
ds
aas
inc
adc
xchg
inc
mov
addr16
sbb
xor
mov
cmp
add
in
shl
mov
pop
cmp
dec
adc
push
movs
mov
icebp
shl
pop
lods
adc
mov
pushf
inc
add
cmp
inc
ret
push
and
and
addr16
push
pop
add
sub
rcl
pop
aam
aaa
imul
sub
jl
add
test
inc
xchg
push
pop
mov
mov
loopne
and
int3
mov
outs
pop
add
fadd
aaa
leave
(bad)
inc
jg
cmps
xchg
pop
scas
(bad)
push
arpl
cdq
push
jmp
jbe
outs
je
and
jne
pop
add
add
in
and
lock
pop
push
out
mov
push
adc
push
jnp
cmp
push
stos
pusha
add
and
push
push
push
inc
pop
or
daa
adc
(bad)
add
adc
pop
pop
xor
dec
inc
dec
add
shl
sbb
inc
ja
push
enter
(bad)
xchg
xlat
movs
loope
add
daa
add
mov
pop
push
push
adc
daa
add
sub
stos
icebp
imul
push
enter
xchg
mov
bndstx
cmp
jo
bound
sub
ret
popa
sbb
popa
imul
das
lods
jnp
mov
mov
fist
cmp
adc
mov
or
jo
pop
out
pop
mov
pop
je
push
movs
jnp
(bad)
lock
bound
es
das
loopne
sbb
test
xchg
push
mov
xchg
inc
adc
jae
xchg
sar
lods
and
and
mov
fmul
inc
push
jns
and
inc
dec
outs
push
mov
adc
fadd
xlat
mov
adc
push
mov
adc
fild
mov
sbb
and
pop
es
add
or
xchg
mov
adc
or
ss
push
lods
or
fs
(bad)
in
inc
dec
fimul
sbb
add
or
nop
sbb
mov
add
lods
cmc
fxch
add
sbb
add
xchg
mov
les
inc
pop
cmps
and
or
fadd
outs
jae
shl
sub
add
test
mov
and
inc
pushw
xor
jb
ins
jmp
mov
xor
sub
gs
mov
cmp
outs
xor
add
fs
add
xchg
sbb
add
jns
xor
ror
jnp
adc
cwde
pop
pop
sub
mov
inc
add
inc
clc
aas
cmp
cmp
adc
inc
jb
popa
jns
and
sub
imul
mov
sub
adc
add
mov
pop
test
mov
mov
gs
jge
pop
sub
stos
outs
jne
dec
push
and
mov
shl
mov
outs
sub
jno
adc
mov
pusha
or
cmc
add
sbb
ins
(bad)
sbb
mov
pop
ins
imul
lods
cs
dec
or
lods
inc
add
dec
pop
push
cmp
loop
jne
mov
outs
lahf
imul
ret
mov
adc
sahf
jp
adc
push
inc
push
bound
xlat
loop
das
clc
push
dec
push
aas
dec
aad
cwde
bound
lock
sub
sub
dec
dec
adc
sub
adc
lock
xor
pop
daa
mov
dec
out
inc
sub
bound
add
push
dec
inc
popf
or
pusha
mov
push
cmp
scas
lods
pusha
stos
jb
fstp
push
sbb
adc
mov
dec
popa
jae
jp
xchg
and
test
add
mov
add
add
mov
mov
nop
test
or
xor
or
lds
mov
xor
rol
enter
pusha
or
adc
fisub
lods
pop
lds
jle
or
scas
jae
mov
push
cmp
sub
mov
jnp
xor
neg
sbb
push
loopne
adc
mov
daa
push
aaa
mov
aam
mov
inc
mov
xchg
lahf
pop
jle
sbb
push
push
sub
jno
loopne
call
push
outs
call
mov
push
push
and
rcl
xchg
es
fldenv
pusha
jo
jmp
rol
inc
inc
dec
add
xor
add
ror
xchg
or
jo
test
add
shr
inc
scas
sbb
add
push
fsub
add
ds
ins
das
pop
push
and
div
push
lds
ins
in
shl
scas
ins
add
pop
push
fs
xchg
data16
mov
mov
into
push
xchg
mov
out
je
push
loope
adc
add
je
add
xor
shl
stos
lods
in
ror
sub
cmps
inc
sub
sbb
jo
cmps
or
sub
push
add
jl
or
push
test
adc
mov
add
and
or
jae
(bad)
inc
jb
add
pop
dec
cvtps2pd
xlat
pop
xchg
pop
inc
test
xor
push
imul
mov
mov
dec
lods
xor
pop
pop
lods
lods
call
inc
pop
sbb
jo
add
in
push
sbb
jno
xchg
mov
(bad)
imul
sub
push
push
and
test
test
add
adc
pusha
pop
add
stos
xor
and
or
ret
ret
neg
sbb
ja
cmps
shl
sub
or
outs
or
outs
and
daa
sbb
dec
and
adc
sbb
cmps
es
or
das
push
xchg
sub
adc
scas
test
stos
add
fcom
sub
mov
shl
push
and
scas
or
or
push
or
fwait
sbb
nop
dec
mov
fwait
aam
dec
sbb
add
arpl
sub
cdq
movs
mov
popa
stos
adc
pop
cmp
sbb
int
out
es
push
or
js
xor
mul
mov
jne
and
je
(bad)
jno
outs
add
push
xor
imul
mov
test
jne
iret
icebp
add
shr
iret
sti
push
aad
test
mov
rcl
xchg
retf
and
add
iret
lock
into
test
fwait
dec
jbe
jmp
scas
popf
dec
ja
push
sub
test
push
dec
cld
pop
push
jbe
mov
push
add
push
ja
fucomip
outs
sbb
imul
pusha
loopne
add
xchg
sub
aam
inc
inc
rcr
pusha
or
and
mov
inc
out
in
xchg
mov
inc
sti
cmps
loop
xlat
push
inc
js
push
mov
pop
out
push
sub
xor
adc
fdiv
out
lock
loopne
mov
ds
push
cld
inc
les
fadd
and
das
mov
fld
out
add
add
cmp
xor
fwait
cmp
and
dec
and
nop
movs
mov
pavgb
aaa
push
inc
inc
jb
ja
jae
and
test
add
push
mov
sahf
and
dec
outs
and
cs
or
bound
mov
sbb
ret
lods
adc
adc
sub
imul
jp
cmp
jne
sti
call
sub
cmps
scas
psraw
dec
sbb
jb
mov
jnp
cmp
test
jbe
add
push
adc
or
add
nop
and
dec
inc
sub
adc
sub
inc
popa
sbb
or
shr
inc
jo
loop
sbb
jno
xchg
jno
shr
jecxz
mov
sbb
xchg
aaa
push
add
aam
or
dec
jae
or
(bad)
rol
daa
sbb
mov
clc
out
xor
add
inc
pushf
loope
or
pusha
mov
jmp
jo
xor
mov
mov
sbb
fld
mov
inc
sbb
jo
adc
pop
rcl
in
push
retf
inc
lods
mov
push
adc
inc
add
mov
mov
fild
iret
or
(bad)
arpl
test
and
or
push
add
dec
ret
test
and
clc
lock
scas
add
fs
or
mov
cmp
push
adc
cmp
mov
pusha
mov
add
imul
pop
push
std
sub
xchg
inc
push
lds
pop
pop
les
or
or
shl
addr16
stos
jge
add
mov
test
sbb
inc
pop
scas
sbb
add
fs
ficom
jg
xor
enter
dec
add
frstor
rcr
stos
inc
add
and
sti
rol
(bad)
jae
xor
jae
loope
push
sti
jae
inc
inc
and
adc
outs
inc
dec
or
das
es
push
and
sbb
outs
and
ja
xchg
xor
fs
add
mov
sbb
imul
push
push
add
push
movs
scas
jl
movs
fcom
push
adc
push
in
add
clc
das
push
push
xchg
pop
les
ret
xchg
test
sub
aad
sbb
das
pop
fst
jb
cmp
nop
pop
daa
inc
jmp
mov
fs
mov
pop
ins
das
mov
out
cli
push
xchg
dec
scas
sbb
push
test
push
pop
mov
out
stos
popa
xor
mov
mov
sub
pop
int
dec
pop
xor
jo
or
lock
ret
or
dec
addr16
dec
test
pop
adc
push
ret
das
xlat
xor
add
loopne
scas
push
pop
or
push
arpl
push
clc
push
pusha
or
push
xor
cmp
and
stos
adc
mov
adc
in
and
pop
aas
fimul
or
pop
push
adc
sub
adc
and
add
enter
xor
pop
jecxz
out
iret
push
test
rcr
imul
and
mov
jmp
lods
add
jo
adc
add
pop
inc
or
add
and
imul
sub
push
lahf
call
cmp
adc
xchg
loopne
das
test
fcom
loop
stc
std
mov
sub
fsub
sub
push
pop
jae
mov
sub
sbb
mov
int3
mov
loopne
adc
je
sbb
ret
rol
fist
adc
inc
sub
adc
dec
call
mov
jg
in
jl
jbe
and
add
mov
push
xor
add
stos
adc
xlat
in
or
xlat
pop
push
or
mov
xlat
and
jno
das
mov
sbb
sub
cmps
shl
sbb
and
mov
and
fiadd
fstp
fistp
sub
mov
or
mov
fidiv
sbb
jecxz
pop
int
jbe
add
das
daa
dec
inc
mov
push
fistp
or
sub
pusha
push
or
mov
add
scas
popf
push
mov
aad
scas
retf
jae
rol
mov
loopne
sar
hlt
je
call
int3
leave
and
pop
cmp
test
dec
inc
cmp
mov
daa
fsub
add
or
jecxz
loopne
jno
daa
test
sub
leave
jecxz
out
mov
mov
push
hlt
es
jmp
cmp
out
out
ds
shl
lock
cmc
mov
call
xor
push
out
jae
sbb
or
call
fdivr
xchg
in
je
jns
rol
push
add
inc
adc
ja
cli
inc
nop
inc
dec
mov
mov
fucom
pop
add
loopne
cmp
int3
retf
mov
das
push
nop
inc
popa
(bad)
and
or
mov
inc
fisttp
inc
push
mov
dec
push
adc
and
sbb
fdivr
cmovs
inc
add
mov
or
js
xor
add
push
add
push
ja
(bad)
push
xchg
daa
mov
pop
mov
out
cmp
jne
loopne
push
pushf
pushf
int3
outs
sub
dec
inc
sahf
pushf
in
xor
jge
sub
and
xchg
jbe
pop
push
dec
push
test
sbb
cmp
push
push
popa
inc
inc
mov
add
loopne
repz
add
xor
mov
or
sbb
add
repz
push
loop
add
or
repz
add
push
jae
daa
pusha
mov
fwait
cmp
dec
repz
not
sbb
lahf
jmp
add
push
xor
inc
repz
push
xor
in
mov
push
pop
repz
mov
pop
repz
inc
sbb
(bad)
ins
push
pushf
repz
push
pop
and
inc
sbb
xchg
push
shl
test
repz
mov
add
adc
out
pop
sbb
add
xor
push
push
movs
imul
add
add
or
rol
rep
sub
add
push
(bad)
shl
xchg
pop
test
or
or
jo
mov
ret
mov
add
and
shl
sub
mov
jmp
jno
add
dec
cmp
add
ret
(bad)
mov
xor
adc
imul
push
shr
mov
jecxz
add
or
or
loopne
lods
inc
adc
push
adc
inc
jae
or
fld
out
psrlq
xchg
add
add
out
outs
mov
pop
js
xchg
and
push
xor
inc
mov
out
fadd
inc
dec
les
inc
mov
sub
mov
add
sbb
std
sub
sbb
jge
pop
or
mov
mov
lds
rcr
inc
fwait
popf
sub
call
ja
push
das
fs
mov
nop
push
or
xchg
cmps
push
aas
aam
mov
push
mov
or
daa
jno
push
loope
jnp
scas
push
loopne
inc
dec
sub
pop
int
xchg
pop
xor
lds
mov
test
bsr
add
rol
push
inc
(bad)
adc
mov
in
jge
lock
mov
daa
or
nop
(bad)
pop
mov
sub
jmp
push
xor
push
cmp
gs
stc
xor
dec
sbb
out
sub
jb
dec
bound
or
mov
aad
mov
inc
cs
push
xchg
inc
cmp
jle
mov
cmp
ret
jnp
mov
jns
inc
push
fiadd
enter
popf
push
rol
out
mul
add
add
push
adc
js
loop
push
add
xor
aam
out
push
and
jp
stos
fist
xchg
cs
push
xor
pop
fstp
rcr
mov
call
pop
imul
sub
je
adc
pop
fld
pop
js
mov
stc
das
pop
lahf
mov
in
pop
mov
lods
add
(bad)
(bad)
clc
dec
fsubr
push
out
test
or
rcl
dec
(bad)
hlt
ss
push
(bad)
cld
(bad)
jmp
add
pusha
add
or
(bad)
popa
push
add
mul
movs
and
mov
dec
rol
out
shr
and
inc
add
aaa
fmul
test
adc
adc
les
fld
ret
mov
and
mov
mov
pop
jg
cs
sub
mov
lea
pop
xor
les
mov
cmp
addr16
mov
push
xor
(bad)
and
xor
mov
add
js
adc
frstor
mov
mov
xchg
cmp
in
pop
xchg
mov
inc
push
sub
sbb
or
js
ret
or
mov
cmps
xor
je
mov
mov
pop
cmps
leave
shl
cmp
sub
xor
inc
jg
push
add
jne
jg
ret
mov
(bad)
xor
xor
push
imul
jg
into
lock
or
inc
and
or
into
pop
or
fmul
sub
rol
lods
iret
int3
call
fiadd
sbb
sti
es
bound
rcr
sbb
mov
fisubr
hlt
pusha
je
or
call
je
pop
imul
inc
sub
mov
jb
test
clc
pop
add
push
adc
or
in
jo
push
cmp
gs
or
add
jecxz
inc
mov
xlat
or
push
aaa
rcr
test
movs
mov
call
xchg
xor
push
test
out
ins
fiadd
out
sar
inc
aad
out
add
sub
stos
rol
and
jo
ja
aam
retf
and
shl
stos
add
repz
or
into
test
jecxz
test
scas
mov
movs
das
mov
mov
inc
je
cmc
ja
(bad)
loopne
pop
int3
jne
push
or
push
ja
and
push
xor
push
(bad)
ins
call
jmp
jne
je
data16
lds
jns
and
aam
and
imul
stos
mov
std
repnz
lods
js
retf
jne
outs
sub
stos
(bad)
jl
test
xchg
scas
sbb
mov
sbb
push
pop
loop
pop
push
sbb
push
setno
xor
xor
ror
aam
test
xor
add
pop
or
cmp
lods
ins
shld
push
jno
sahf
sub
repnz
call
adc
jb
mov
sar
imul
jbe
push
jno
cmp
inc
or
xchg
cmp
or
adc
shr
test
add
add
inc
pop
lods
inc
nop
mov
sub
push
or
imul
mov
jae
sbb
js
daa
and
fwait
add
or
test
inc
aad
mov
push
lds
imul
push
loopne
loopne
ins
imul
mov
push
aam
imul
and
inc
and
or
pop
movs
fsub
add
cmp
pop
mov
lea
sub
rol
sbb
add
sbb
jnp
movs
sub
imul
xor
int3
pop
mov
imul
test
push
sbb
imul
fsub
add
rol
pop
sbb
sbb
and
pop
adc
adc
enter
pop
jg
sub
or
jmp
rcr
ds
test
rcl
xchg
add
inc
mov
mov
and
jl
cmp
add
push
cmp
adc
sar
pop
js
xchg
inc
sub
mov
cmp
cdq
inc
cld
add
add
xor
lahf
adc
fld
inc
lods
call
aam
cs
cmp
cmp
mov
sbb
fimul
xchg
arpl
(bad)
push
push
lods
add
loope
jo
je
push
xchg
push
push
cs
loopne
lods
stc
ror
loope
sub
xchg
adc
mov
lods
out
out
pop
lea
pop
shr
add
inc
sub
push
loope
aaa
pop
add
sub
pop
xor
aaa
mov
sub
push
stos
call
outs
push
aaa
cmp
leave
popa
dec
mov
add
or
and
and
push
mul
daa
xor
mov
popaw
jne
je
inc
or
shl
xor
adc
push
pushf
pop
fldenv
pop
sbb
pusha
adc
int3
jmp
add
sub
mov
out
inc
out
int
in
shr
pop
int3
push
sub
pop
lahf
mov
mov
mov
retf
or
js
lar
push
sub
sub
dec
loopne
addr16
xchg
push
and
add
sbb
adc
add
adc
cwde
mov
and
sub
or
inc
pusha
dec
pop
and
inc
imul
in
int
mov
add
lock
ss
push
or
sbb
imul
les
retf
scas
add
shl
push
lods
mov
daa
dec
add
retf
cmc
ficom
sahf
sub
adc
aad
sub
shr
jnp
inc
popa
adc
mov
push
cwde
mov
das
or
inc
ror
mov
push
fs
clc
push
sbb
movs
(bad)
arpl
ffree
test
aaa
fdiv
add
sub
inc
repz
(bad)
mov
and
adc
dec
push
mov
add
rol
aaa
ds
icebp
add
out
pop
and
cmp
retf
push
fdiv
or
inc
and
fidivr
out
loopne
cld
cmps
mov
addr16
mov
pop
and
inc
jne
fnstenv
push
cld
addr16
js
mov
loope
pop
in
or
pop
add
mov
fadd
pop
test
mov
dec
ds
ins
sub
or
inc
or
adc
mov
cmp
fnstcw
add
dec
push
dec
movs
mov
inc
cs
push
leave
enter
sti
rdpmc
mov
leave
stos
out
cmp
xchg
repnz
aad
shl
jb
scas
in
ret
cmp
cmp
sahf
pushf
pushf
pushf
mov
dec
dec
inc
inc
nop
retf
daa
and
lds
frstor
push
daa
sbb
call
ja
pop
jp
fimul
push
hlt
jo
adc
dec
dec
cmps
lds
dec
dec
jno
out
out
dec
push
mov
test
mov
mov
cmps
pop
cmp
arpl
pop
push
shr
aas
xor
sbb
mov
lea
dec
retf
mov
cmovns
push
xchg
cli
icebp
dec
jae
into
push
adc
and
jg
jg
pusha
dec
inc
popf
imul
adc
cmps
das
mov
ror
xor
push
xchg
mov
outs
fsubr
push
mov
shr
ins
xor
push
ja
test
sbb
js
add
or
adc
enter
rol
jecxz
mov
adc
xchg
add
mov
or
mov
xchg
and
das
leave
fwait
sti
out
sub
fwait
add
popa
arpl
dec
in
sub
pop
xor
test
cld
add
jae
mov
cmps
xor
data16
lahf
push
test
dec
ror
imul
mov
mov
mov
mov
push
or
add
push
ret
mov
lea
in
add
add
or
push
inc
ret
jmp
ss
pop
sub
mov
cmp
ret
add
pop
xchg
cmps
add
fist
cdq
or
movs
loopne
stos
xchg
xchg
xor
pop
xor
pop
xchg
sbb
or
clc
sbb
and
jae
sbb
dec
popa
or
mov
inc
xchg
ins
or
pop
dec
dec
es
cli
jo
call
aaa
jl
outs
gs
aad
loope
test
push
dec
mov
sbb
mov
mov
js
dec
or
inc
popa
cli
cs
jae
int3
sahf
lds
test
movs
xor
js
outs
xchg
push
sti
add
sub
(bad)
fld
std
add
or
stos
jb
dec
rcl
xchg
or
adc
and
fwait
pop
xchg
or
xchg
pop
rol
icebp
inc
mov
pop
out
or
pop
xor
or
mov
test
inc
stos
arpl
in
lea
push
xchg
out
and
push
add
test
jmp
dec
xlat
dec
sbb
out
mov
mov
test
sub
fild
mov
add
jbe
fs
sbb
add
mov
sub
test
dec
cli
fs
repz
bound
data16
jecxz
mov
inc
loope
sub
jb
xor
cwde
fwait
sbb
test
inc
ret
add
sbb
mov
pop
or
push
mov
cdq
bnd
push
push
je
dec
nop
dec
cwde
sub
sbb
mov
adc
push
jmp
scas
push
scas
popf
jno
push
mov
mov
mov
cmp
retf
jo
cmp
xchg
inc
add
pop
movs
leave
in
cmp
mov
inc
add
fwait
sbb
add
aad
or
cli
push
ja
add
lods
inc
xchg
push
push
push
cmps
jo
out
inc
fs
push
xchg
mov
rol
icebp
nop
stos
icebp
cs
daa
lahf
not
cmp
movs
push
xchg
out
cld
pop
int
and
gs
aaa
lods
cld
inc
mov
dec
inc
sub
das
dec
pop
or
mov
dec
sub
rcr
pop
mov
daa
aaa
dec
and
push
ins
sbb
mov
(bad)
test
add
mov
jne
imul
or
dec
pop
rol
push
sbb
hlt
add
or
sbb
rol
cmova
sbb
bswap
ins
add
frstor
push
into
pop
aam
repnz
out
push
and
sbb
adc
cs
push
add
push
and
add
push
pop
inc
adc
sbb
adc
push
pusha
pop
int
add
adc
and
pop
std
push
and
add
xchg
inc
add
add
mov
pop
mov
push
idiv
xchg
sub
mov
mov
imul
rcr
shl
das
add
adc
pop
fist
xor
add
jne
adc
sub
sbb
loope
xchg
pusha
push
movs
sub
jmp
sub
jo
aaa
je
mov
pusha
or
or
stos
sbb
loopne
dec
(bad)
sbb
pop
adc
lahf
or
scas
adc
ret
inc
test
and
fwait
mov
push
call
fist
push
rcr
jl
or
pop
aam
add
scas
fnstenv
mov
push
mov
int3
push
out
test
push
add
cld
mov
mov
push
add
fild
add
add
add
stos
cmc
sbb
jne
sub
paddq
aam
xor
add
jne
fidiv
push
jnp
nop
pop
xor
in
xchg
(bad)
jb
shl
xlat
dec
mov
cmp
inc
sahf
pushf
pushf
sahf
out
fst
dec
dec
dec
ja
ret
daa
and
fidivr
xchg
xchg
xchg
daa
add
cmp
fld
sub
cmp
pop
jmpw
push
js
push
mov
dec
mov
xor
imul
push
add
pop
or
xlat
out
mov
adc
or
inc
pop
call
add
fbstp
ja
adc
dec
mov
imul
add
add
(bad)
out
ins
add
fldcw
loopne
mov
(bad)
pop
ja
add
cmp
sub
cmc
retf
push
or
and
fadd
cmps
rol
(bad)
xchg
or
mov
adc
xchg
and
call
mov
xlat
inc
add
(bad)
xlat
or
add
add
push
ins
iret
add
rol
push
add
add
xlat
add
mov
jae
pusha
nop
adc
add
mov
sbb
or
xchg
ins
add
jo
xlat
xchg
add
xlat
add
fcmovnbe
or
add
cwde
push
pop
adc
sbb
dec
aad
mov
xor
sub
mov
dec
mov
leave
imul
mov
jae
fimul
popa
inc
add
or
mov
pusha
jge
or
test
sti
(bad)
xlat
add
and
add
inc
xlat
add
or
sub
or
xchg
inc
jp
sub
push
push
dec
sub
(bad)
out
call
fcomp
or
sub
or
push
xchg
xlat
add
dec
xlat
test
xor
lea
xor
add
or
lahf
into
pop
fst
sbb
mov
pusha
adc
rcr
push
iret
or
push
add
sbb
or
iret
rol
xlat
iret
call
cli
push
xor
push
cmp
test
loopne
sub
inc
movs
jle
inc
xor
ds
outs
or
fsubr
fwait
lock
sbb
add
push
in
or
shl
dec
add
pushf
jae
fmul
add
and
mov
or
inc
dec
mov
or
add
push
dec
pop
sub
jae
in
in
sbb
pusha
paddw
fist
fld
in
mov
pcmpgtd
in
(bad)
jmp
outs
mov
cmp
push
test
add
add
enter
rcl
lods
loopne
icebp
mov
std
dec
stos
dec
cmp
shl
xor
add
push
dec
and
call
cmp
in
loope
lock
push
push
add
daa
xchg
cmp
jge
push
ss
xchg
mov
mov
daa
test
or
daa
stc
mov
int3
inc
pop
dec
sub
cmp
pop
pusha
mov
or
push
xchg
ja
jmp
cwde
dec
adc
push
sub
jmp
bsr
sub
fld
into
adc
inc
mov
xor
pushf
cmp
(bad)
add
fsub
add
repnz
jae
fstp
fmul
jae
sbb
add
fisttp
dec
add
out
inc
daa
inc
or
or
scas
jecxz
and
lahf
inc
push
ror
push
mov
add
sub
pop
sbb
aaa
push
pop
push
rol
(bad)
sub
adc
mov
mov
push
in
push
test
fldcw
out
inc
mov
jo
inc
push
or
sahf
hlt
ja
pop
fsub
adc
test
enter
or
sub
pop
add
loop
out
mov
dec
ror
cmps
jmp
or
pushf
aam
and
pop
or
inc
push
or
add
es
je
lock
and
sub
jo
cld
pusha
add
pop
adc
out
push
popf
push
imul
pushf
pop
add
out
mov
int
jmp
cmp
inc
push
pop
call
push
add
sub
idiv
div
mov
pop
push
add
push
xlat
out
push
out
push
mov
xchg
dec
mov
jo
not
aam
loopne
stos
imul
sbb
ret
(bad)
add
sar
shr
push
inc
sub
or
cmp
rcr
shl
push
call
in
fdivr
push
jl
movs
js
out
add
lock
push
sti
popf
dec
unpckhps
sbb
repz
xor
add
pop
(bad)
mov
jno
cs
jne
pop
xchg
xchg
lods
or
jns
push
call
push
data16
push
xor
out
sub
les
cmp
fdiv
push
push
add
push
cmp
xchg
dec
jmp
mov
das
mov
lahf
mov
push
xchg
or
inc
push
inc
mov
xchg
loop
scas
shufps
sbb
or
js
ret
or
mov
cmps
xor
inc
gs
mov
jecxz
shl
lea
dec
sbb
mov
fld
inc
sub
pop
adc
cld
imul
adc
in
push
lock
dec
xor
shr
pop
daa
(bad)
mov
jo
adc
sar
sub
xchg
call
into
ror
cmp
call
push
ret
cld
imul
loopne
ret
in
fdiv
lods
cmps
in
jns
and
add
mov
imul
lds
aam
test
sbb
push
stos
add
cld
push
popf
jbe
pusha
add
out
dec
out
push
sub
add
mov
xlat
sub
mov
xchg
fcom
mov
push
jns
or
push
or
sub
xor
inc
je
push
cmp
or
push
add
dec
xchg
nop
scas
(bad)
cdq
jmp
movs
pusha
push
fcmovnb
loopne
cmp
outs
mov
xchg
or
mov
retf
adc
lock
icebp
push
test
fstp
es
das
or
clc
jns
loopne
push
outs
outs
mov
mov
add
inc
(bad)
mov
sbb
adc
popa
dec
xchg
push
arpl
jo
fs
scas
sub
jno
ins
ins
test
push
or
mov
push
inc
lock
imul
lds
imul
ins
call
ins
(bad)
repnz
push
(bad)
int
or
push
and
das
mov
jp
nop
mov
jnp
lock
jne
push
clc
jbe
push
and
push
fwait
out
and
ret
xor
inc
ins
push
fld
and
pop
xor
add
js
mov
daa
mov
imul
add
inc
jb
pop
ret
imul
push
push
xor
push
dec
adc
dec
mov
or
dec
outs
outs
in
leave
fidivr
adc
arpl
iret
xor
cmp
int3
xor
mov
inc
(bad)
xor
sub
adc
jo
inc
xor
jb
xor
addr16
(bad)
mov
js
cmc
mov
push
mov
pushf
mov
psubusb
test
sahf
pushf
pushf
mov
xor
outs
rcr
jo
mov
push
sbb
mov
xor
mov
inc
cmp
std
push
add
pop
or
cmp
jno
cdq
adc
inc
ret
pop
jno
adc
das
aam
xchg
mov
or
or
sub
call
mov
jae
sbb
and
movs
bound
fwait
add
out
cdq
sbb
add
mov
mov
dec
sar
push
scas
adc
retf
xchg
enter
gs
and
add
shr
gs
outs
and
cmp
and
mov
inc
mov
adc
mov
push
mov
and
xor
add
or
sub
sbb
or
cwde
adc
xchg
dec
jb
xchg
out
mov
cmp
and
pop
mov
adc
cs
adc
or
outs
shl
jne
pop
push
or
jne
es
mov
lds
int
mov
push
leave
mov
xchg
push
adc
add
mov
dec
ret
(bad)
stc
mov
loop
in
stc
or
sbb
loope
add
loopne
mov
and
or
adc
fdiv
pop
in
add
cmp
dec
test
inc
inc
or
sub
pop
rol
dec
or
and
loopne
xor
add
push
xchg
push
fadd
cmp
cmp
mov
ror
push
and
dec
jne
cli
jle
push
rsqrtps
jae
nop
out
pop
dec
mov
adc
(bad)
add
pop
inc
test
adc
jbe
pop
xchg
(bad)
bound
inc
test
adc
sub
loopne
mov
pusha
adc
std
stos
dec
push
mov
in
les
in
cmps
cmp
push
nop
push
add
std
pop
cwde
das
mov
daa
mov
jl
push
popa
jnp
xor
cmps
pushf
sub
mov
pop
push
aad
lds
jo
loope
daa
test
xchg
dec
pop
int
push
sbb
adc
cmps
xlat
xor
cmp
add
dec
inc
sub
xchg
mov
popa
mov
push
jmp
jmp
or
sbb
push
push
xchg
fucom
loope
test
aad
push
cmp
xor
inc
inc
or
add
(bad)
data16
jae
(bad)
and
push
ins
ins
push
or
push
test
jne
ja
push
push
sbb
push
cmp
sbb
xor
mov
sub
cmp
arpl
add
dec
mov
inc
add
dec
es
(bad)
push
adc
add
fld
add
aam
nop
movs
lock
call
ds
sbb
dec
retf
sbb
test
pushf
sub
or
stc
or
scas
sbb
loopne
xor
sub
popa
jns
push
and
call
je
push
add
je
cmp
sub
div
jae
inc
movs
in
es
das
mov
mov
push
add
hlt
cmp
idiv
test
fsub
invd
xchg
pop
mov
cmp
test
mov
fcom
xor
jo
imul
xor
or
mov
popa
mov
add
ret
sbb
ins
dec
cmp
mul
add
inc
stos
add
repz
sub
add
sbb
push
adc
mov
sub
add
push
unpckhps
ins
jbe
out
xchg
add
add
and
fmul
push
dec
mov
xchg
push
mov
jns
int3
test
and
int
inc
in
inc
addr16
mov
out
(bad)
aad
out
mov
retf
gs
fld
cmp
xchg
loopne
or
mov
pushf
sub
stos
sti
out
push
cmp
aad
mov
push
cmp
add
add
ror
fcom
imul
mov
enter
stos
cmp
call
xchg
cmp
fist
test
adc
sub
outs
pop
cmp
push
xchg
pop
pop
cwde
or
pushf
es
js
(bad)
jecxz
cmps
pusha
or
or
mov
xchg
sbb
or
aam
sub
xor
test
sar
push
xchg
or
sub
clts
or
or
xor
xchg
imul
je
jns
add
imul
add
push
and
retf
mov
or
mov
int3
or
fstp
(bad)
lds
jecxz
scas
lods
mul
outs
xchg
es
outs
push
mov
cs
out
push
test
push
xlat
out
xchg
push
jno
adc
pushf
jmp
(bad)
call
xchg
mov
or
sbb
cwde
xor
aad
test
test
rcl
xchg
retf
and
dec
js
or
inc
or
pusha
pop
fnstsw
or
shl
add
add
cmp
jne
movs
cs
mov
push
data16
pop
jno
push
mov
call
ja
push
addr16
xchg
cmp
xor
push
push
mov
ss
jbe
fs
jns
js
or
loop
push
sub
(bad)
cmc
dec
or
adc
add
pop
add
mov
out
loopne
fsubr
out
push
mov
das
dec
femms
mov
cmp
mov
mov
add
mov
out
push
je
pop
movs
test
inc
xchg
pop
push
inc
or
push
aam
dec
pusha
pop
or
pop
xor
pop
iret
pop
mov
in
call
sti
inc
adc
jae
or
xchg
fld
xor
packuswb
iret
stc
inc
adc
sar
das
jo
ror
push
nop
xor
mov
stos
xor
cmps
add
aad
inc
xor
out
push
shl
push
and
add
adc
sub
and
sbb
sbb
or
or
inc
sbb
sahf
push
daa
pop
out
or
sbb
inc
inc
sub
or
adc
sahf
or
or
mov
inc
sbb
inc
sbb
mov
test
inc
sbb
sub
sbb
push
sbb
sbb
sbb
test
imul
fadd
sub
sbb
and
lds
inc
jae
sbb
push
or
inc
push
xor
add
dec
xor
ret
dec
sbb
sbb
adc
xchg
or
mov
mul
ds
sbb
add
fadd
xor
sbb
stos
sbb
and
shr
mov
mov
jmp
les
ror
outs
jo
mov
add
stos
lea
es
or
bound
and
mov
add
call
and
lods
ret
mov
into
dec
add
outs
mov
shl
fcomp
or
es
sbb
neg
pop
frstor
pop
je
mov
mov
xchg
inc
stc
mov
test
std
dec
mov
mov
out
out
pop
inc
cmps
add
cmp
mov
inc
sub
or
adc
pop
add
and
pop
aas
adc
sbb
sub
xlat
adc
cs
jmp
leave
pop
test
retf
pop
add
mov
sbb
add
and
jne
je
inc
mov
xlat
or
sar
or
fld
mov
or
or
or
adc
xchg
int3
call
sbb
sub
cmps
add
sbb
frstor
adc
xor
(bad)
lods
imul
mov
ret
cmp
add
dec
popa
outs
popa
addr16
stos
adc
addr16
add
loopne
sbb
xchg
pop
ins
adc
int
mov
call
cmp
mov
mov
xor
int
mov
add
clc
jb
sbb
push
or
or
fld
ins
imul
bound
stos
jns
pusha
js
pop
int
mov
hlt
mov
es
aaa
or
cmps
add
mov
inc
sbb
sub
sub
jns
ret
xor
arpl
jae
mov
fcomp
or
add
jo
xor
dec
push
repnz
adc
je
push
ror
sub
inc
cmps
dec
mov
test
sti
rcr
ret
in
sub
sub
sbb
push
popf
mov
pop
cdq
mov
or
scas
inc
push
loope
xchg
nop
call
ds
pop
sub
or
pop
mov
mov
imul
or
cs
imul
cmp
out
pop
add
push
cmp
loop
push
pop
das
cmps
and
push
mov
add
push
mov
test
push
pop
or
adc
add
hlt
retf
and
dec
push
push
mov
fmul
mov
test
pop
into
enter
daa
and
clc
pop
add
mov
dec
xchg
enter
or
pushf
pushf
fsub
mov
(bad)
scas
jmp
js
adc
daa
daa
daa
and
ins
mov
daa
and
enter
and
dec
xor
in
or
sub
sbb
jb
mov
aas
sub
out
test
mov
mov
and
es
mov
xor
xor
xor
dec
out
dec
or
mov
in
push
mov
jno
je
push
daa
lea
xor
mov
inc
xchg
push
dec
paddw
movs
dec
jmp
jae
int3
push
adc
xchg
add
jg
cmp
add
xor
rcl
aam
and
sbb
add
push
div
sub
stc
cmp
push
mov
popa
outs
or
mov
outs
cdq
ja
test
mov
ja
test
add
add
shl
and
enter
movs
shl
mov
add
or
bound
mov
or
and
das
leave
fwait
dec
mov
and
add
popa
arpl
mov
xor
mov
inc
xor
pop
dec
jae
sub
or
imul
dec
imul
sub
sbb
dec
mov
in
jae
imul
add
(bad)
sbb
lea
out
mov
inc
add
sbb
or
inc
mov
sub
pop
jmp
in
pop
or
xor
inc
add
xor
(bad)
jns
jae
cli
scas
bound
push
xchg
xchg
xor
pop
xor
les
out
sbb
or
ja
and
shr
sbb
and
and
mov
jnp
popa
inc
xchg
jo
pop
bound
dec
es
call
sar
dec
fsubr
mov
lods
or
loope
mov
mov
mov
inc
inc
fld
and
dec
or
daa
adc
int3
call
adc
sub
push
inc
mov
(bad)
mov
inc
and
xchg
mov
ss
jns
or
or
push
in
inc
and
xor
shl
push
dec
ret
mov
or
pusha
mov
dec
test
sub
ins
(bad)
lds
mov
jmp
or
push
mov
adc
imul
sbb
cmps
add
imul
aam
hlt
adc
add
mov
sub
test
pop
bnd
jmp
bound
pop
inc
loope
dec
mov
inc
leave
push
sub
jb
add
add
push
or
addr16
cmp
mov
das
sub
jne
pop
sub
adc
bound
add
sub
and
cmc
cld
push
pop
(bad)
pop
and
imul
sbb
push
ret
ins
pop
mov
sahf
ret
ds
jno
mov
fimul
sahf
scas
mov
prefetch
or
mov
mov
fs
es
data16
popa
loopne
ror
cs
stos
push
sub
stos
pop
jecxz
inc
(bad)
bound
lea
push
push
addr16
out
pop
add
adc
dec
sbb
sub
mov
adc
mov
push
outs
ins
push
xchg
add
xor
push
xlat
retf
test
pop
jne
mov
cs
leave
sbb
add
xchg
mov
aad
inc
pusha
adc
aaa
push
arpl
fs
jb
sbb
add
add
adc
mov
das
pop
hlt
das
add
mov
loopne
(bad)
fild
adc
pop
adc
mov
sbb
and
sub
adc
pop
aad
add
fst
xor
out
jmp
add
pop
xor
inc
xor
pusha
das
aam
or
jle
xlat
mov
iret
mov
jo
jo
or
mov
push
sub
push
xchg
jae
int
inc
adc
sub
aad
push
aas
pop
xor
xchg
or
add
pusha
dec
inc
sub
inc
nop
or
mov
cwde
lock
push
ror
cmp
inc
icebp
add
sub
into
cmp
test
out
inc
inc
xchg
shl
add
lods
or
and
or
add
or
inc
push
xor
add
mov
ins
jbe
aaa
fsubr
jl
pop
in
and
xor
lahf
fisub
sahf
cmps
xadd
sbb
and
lahf
cmp
sbb
sar
je
inc
or
js
inc
or
fcomp
cmc
sti
add
add
push
(bad)
int
add
sub
and
mov
xor
iret
pop
cmc
sub
xchg
test
mov
out
fistp
add
pop
push
add
or
(bad)
aas
aaa
daa
cmps
inc
jne
and
(bad)
or
or
es
das
imul
xchg
lss
retf
mov
stos
fadd
fisttp
sub
clc
test
inc
das
pusha
and
and
ds
adc
ror
or
add
add
inc
ins
xor
pop
inc
add
push
popa
or
arpl
loopne
inc
dec
and
jg
pop
adc
lds
cmp
outs
sub
sub
cdq
das
cwde
lock
cmp
inc
push
mov
xchg
push
inc
clc
jo
sar
mov
adc
rcl
sub
daa
adc
cmp
mov
imul
add
and
mov
fwait
mov
cmp
in
mov
fs
lods
(bad)
push
fist
repnz
fs
mov
and
jb
jb
jo
leave
(bad)
xor
sbb
aas
jg
leave
leave
leave
int3
loop
dec
xchg
fucom
in
in
inc
es
jno
repnz
test
sub
jnp
jb
mov
(bad)
into
ins
movzx
mov
punpckhdq
cmp
add
div
cmp
les
pop
push
movs
ds
or
les
jo
mov
pop
call
daa
add
sbb
pop
xor
pusha
and
cmp
inc
mov
loopne
outs
fdivr
mov
jmp
ret
lea
or
iret
ror
sub
ins
rol
push
popf
mov
call
cmp
lds
ja
jmp
mov
jae
cmp
xor
mov
adc
xchg
or
sub
mov
cmp
das
leave
fwait
cmp
jo
add
dec
or
ror
cld
je
mov
mov
iret
push
jno
add
adc
push
daa
mov
dec
add
add
xor
mov
add
add
ret
add
jae
sbb
test
mov
adc
xchg
mov
push
jne
add
add
or
pop
mov
nop
lock
shl
dec
mov
mov
dec
cmp
push
add
dec
mov
pushf
inc
mov
and
jae
and
push
pushf
mov
pop
or
dec
mov
add
adc
xor
or
jns
pusha
mov
mov
ror
movs
dec
mov
jecxz
dec
or
addr16
or
mov
bound
sbb
mov
cmp
adc
adc
add
imul
and
dec
sbb
jp
inc
push
lea
and
xor
jmp
inc
or
dec
sar
je
cmp
fistp
loope
fcomp
add
sub
fild
inc
mov
pop
sti
add
and
dec
push
popf
das
or
fs
ror
ins
mov
push
lock
or
push
mov
sbb
rcl
push
push
pop
adc
adc
out
push
push
fdiv
push
xor
mov
pop
mov
in
pushf
ja
add
(bad)
icebp
bound
xchg
aam
or
adc
mov
pop
(bad)
xchg
mov
push
in
xor
sub
mov
bound
mov
dec
dec
hlt
jmp
lods
dec
inc
lock
dec
pcmpgtd
push
add
clts
dec
dec
syscall
add
retf
pop
add
lar
arpl
or
jno
and
je
es
je
stos
neg
popa
mov
push
cmp
xchg
pusha
jg
sar
ins
arpl
dec
dec
ins
ror
push
dec
mov
pop
lock
mov
pop
sub
repnz
mov
push
mov
addr16
sahf
rol
and
dec
mov
out
pop
mov
mov
mov
lea
gs
lds
retf
push
xchg
ret
or
or
sbb
or
inc
adc
pop
inc
jo
xor
inc
dec
xchg
ror
cwde
pop
and
cli
or
js
push
movs
and
adc
pop
and
jno
pop
push
or
jae
xlat
or
add
jle
push
arpl
pop
xor
data16
adc
pop
mov
jno
ins
jmp
or
data16
out
or
push
adc
or
xchg
or
fcom
xchg
pop
outs
push
rcr
add
call
mov
jp
data16
sub
dec
push
dec
test
out
mov
add
popf
mov
mov
push
mov
(bad)
push
add
nop
inc
pop
mov
popa
jnp
mov
mov
les
xor
mov
mov
mov
push
push
ins
mov
mov
mov
mov
idiv
push
push
dec
push
and
ins
mov
(bad)
mov
push
cmp
fidivr
or
out
dec
push
and
inc
push
pop
idiv
cld
push
push
push
mov
loopne
call
iret
jnp
les
test
inc
xchg
cwde
dec
push
fdivp
cmp
and
pop
js
scas
sbb
mov
shl
sahf
in
out
mov
ds
out
jnp
ss
dec
mov
xor
out
imul
clc
mov
mov
hlt
dec
push
push
out
mov
mov
push
lock
inc
push
pushf
mov
cwde
push
test
push
xor
jge
clc
mov
push
enter
sbb
idiv
inc
push
adc
push
push
repz
scas
push
push
cld
push
cmp
les
(bad)
repz
lods
les
(bad)
jnp
jnp
dec
mov
mov
push
je
lods
loopne
fdivp
push
adc
push
pop
inc
sub
pop
fldenv
add
and
inc
add
inc
jne
ins
outs
(bad)
lods
add
sti
lods
mov
lods
inc
adc
stc
fcomi
cmps
dec
ret
nop
jbe
add
inc
cmp
jae
lahf
mov
shr
mov
fisub
xor
sbb
dec
jae
mov
ins
dec
lds
in
mov
pop
in
or
mov
xchg
pop
inc
sub
adc
pop
sbb
or
xchg
and
xor
inc
xchg
pop
lds
jbe
div
mov
push
jge
add
push
push
ins
push
add
push
js
inc
push
inc
in
aas
lock
mov
mov
xlat
mov
push
xor
cmp
scas
push
mov
lods
jmp
mov
call
lods
outs
mov
jl
aas
nop
cs
in
aas
sbb
push
mov
rcl
out
nop
push
rol
neg
rol
retf
mov
push
int
push
nop
int3
inc
(bad)
out
jnp
cmp
inc
into
dec
xor
mov
mov
inc
jne
push
dec
es
push
aas
cwde
inc
jne
aad
aas
movs
(bad)
aas
(bad)
add
xor
push
in
push
aas
adc
imul
stos
and
fcmovb
lock
ror
sbb
pop
xor
and
and
mov
gs
and
xchg
xchg
sbb
fld
xor
stos
mov
jb
xchg
adc
add
xchg
stos
sbb
push
and
sar
mov
add
(bad)
jg
div
mov
mov
push
ret
nop
push
push
push
test
je
cmp
ffreep
lock
mov
mov
mov
inc
mov
aas
push
mov
mov
mov
xchg
xor
mov
xor
sbb
mov
(bad)
outs
adc
js
mov
mov
mov
dec
pop
xor
mov
out
lods
cmp
jp
(bad)
jo
fs
mov
add
pop
ret
(bad)
in
retf
rcr
lock
rol
ins
xor
inc
adc
jo
push
jo
dec
jae
mov
idiv
push
xor
cld
and
mov
sbb
data16
or
mov
test
je
rol
(bad)
mov
call
dec
test
lock
in
sar
xor
mov
mov
mov
call
dec
inc
ins
out
pop
jmp
in
and
pop
xor
jmp
fwait
mov
cmp
mov
pop
loop
mov
mov
mov
call
sub
mov
das
pop
mov
mov
cmp
mov
inc
mov
or
jae
in
pop
cmp
dec
adc
cmp
add
ret
(bad)
cli
stos
loope
mov
push
rcl
push
dec
push
fs
(bad)
xchg
jno
or
aam
pop
pop
out
jg
add
mov
ror
xor
pop
pop
xchg
pop
pop
jo
push
and
lock
sbb
test
xor
mov
add
adc
jmp
mov
push
loopne
adc
clc
and
lea
ins
push
js
inc
pop
xor
push
test
sub
xchg
std
ins
dec
jbe
adc
dec
enter
aaa
mov
mov
inc
or
push
cmp
ins
call
push
sbb
xchg
push
sbb
rcr
mov
add
(bad)
mov
pop
ret
push
pop
mov
in
sbb
pusha
add
mov
mov
xchg
sub
push
push
mov
std
rcr
je
mov
mov
mov
push
adc
cmp
in
cmp
pop
dec
mov
add
pop
in
fs
mov
pop
mov
test
jl
add
mov
jns
cmp
or
jge
mov
push
xchg
mov
dec
jne
popf
pop
mov
push
adc
push
sub
and
sbb
int3
sbb
sbb
loopne
movs
inc
in
cmp
jle
pop
jmp
cmp
mov
mov
mov
shl
cmp
add
mov
iret
add
push
popf
rol
adc
mov
jb
and
mov
jo
scas
loopne
and
jbe
add
adc
sti
jg
inc
add
imul
push
add
push
jnp
mov
inc
or
scas
cmp
mov
dec
or
push
sub
ja
cmp
aas
or
daa
pop
push
add
pop
push
ins
bound
dec
movs
inc
outs
retf
inc
fdiv
adc
ins
bound
loopne
push
or
push
push
call
or
adc
add
or
push
adc
addr16
or
dec
adc
ss
or
pushf
push
movq
pop
mov
dec
inc
inc
sbb
add
push
test
xor
and
dec
push
xchg
jmp
dec
jnp
add
repz
pusha
mov
out
mov
xor
ret
shl
mov
out
lea
xor
retf
out
mov
call
xchg
sbb
mov
jns
call
cmp
jbe
or
add
ds
jne
cli
clc
push
sub
es
loopne
pop
mov
mov
(bad)
pop
ins
cs
into
loopne
add
inc
pop
adc
sbb
or
jg
pop
add
xlat
pop
mov
inc
mov
aad
bound
push
jae
scas
adc
xor
loopne
mov
prefetcht2
jecxz
fdivr
ret
xchg
fld
push
shr
test
add
fistp
xor
cmp
clc
clc
gs
push
into
(bad)
(bad)
(bad)
jg
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
fcmovb
call
and
and
es
out
(bad)
pop
and
pop
shr
push
jnp
popf
lahf
out
sahf
scas
mov
pop
out
sahf
adc
push
and
jns
pop
imul
out
mov
(bad)
sahf
out
ficom
push
and
inc
push
push
jns
xchg
mov
out
int
pop
and
or
and
and
mov
and
inc
sbb
cmp
in
enter
and
add
mov
sbb
mov
inc
clc
sbb
dec
and
inc
mov
mov
xor
pop
mov
lock
movs
adc
or
xchg
fs
sbb
rol
test
fisub
(bad)
mov
jmp
sbb
enter
jmp
sbb
cmps
ret
test
jmp
sbb
adc
xor
dec
or
jmp
fs
xchg
add
scas
push
cld
push
dec
cld
cmp
and
push
push
js
mov
and
push
push
pushf
daa
add
inc
in
fadd
dec
arpl
dec
jbe
mov
adc
ret
inc
sbb
cmp
sbb
inc
ret
test
outs
adc
xchg
pusha
data16
inc
test
test
cmp
int3
cmp
outs
xor
mov
jbe
mov
xchg
mov
push
jmp
xor
daa
push
aam
cmp
dec
or
jo
mov
or
ja
sbb
outs
pop
xor
sbb
push
popa
je
mov
clc
repnz
add
pop
sub
push
in
leave
pop
dec
pop
loope
cld
mov
pushf
ins
popf
and
or
jb
popf
jg
add
les
mov
outs
sub
into
xor
sbb
push
fs
setne
neg
mov
pop
das
test
xor
sbb
jg
or
and
mov
mov
or
pop
outs
sub
mov
dec
leave
sbb
pmaxub
add
or
adc
sbb
xchg
daa
and
dec
xor
mov
std
pop
dec
dec
call
pop
mov
mov
cmp
fstp
mov
cmp
mov
xchg
data16
dec
xor
push
xor
mov
test
inc
push
and
das
or
arpl
mov
push
sbb
push
or
add
inc
or
mov
mov
test
pop
pop
ret
jnp
mov
inc
and
add
lods
bound
cld
and
mov
push
pop
stos
aad
and
adc
cmp
adc
add
ret
push
lock
dec
inc
cmps
or
add
sub
pop
or
sub
lods
or
not
mov
and
iret
xor
add
(bad)
call
cmp
repz
jp
lods
mov
iret
loopne
add
out
idiv
std
and
xor
cmp
repz
adc
mov
jle
add
sbb
pop
shl
cmp
push
pushf
out
sar
fimul
xor
sbb
js
xchg
lods
(bad)
fsub
xchg
or
xor
jb
cmp
inc
xor
je
mov
mov
xor
adc
and
xchg
and
and
xchg
adc
jmp
sbb
imul
xchg
cmp
aas
xor
fadd
test
dec
outs
lods
mov
push
dec
call
or
fsub
dec
popa
(bad)
cmp
mov
fiadd
call
dec
push
dec
aam
inc
out
or
mov
add
dec
xor
les
mov
movs
data16
xchg
or
lea
cwde
cdq
sub
ss
repnz
sub
xchg
cmp
sub
cmp
and
xor
push
cmp
or
push
aaa
xchg
rol
arpl
push
sub
(bad)
es
call
es
dec
xor
inc
or
imul
and
and
pusha
data16
jb
ds
xchg
dec
mov
mov
ins
mov
fbstp
aaa
imul
xchg
xor
sbb
stos
mov
push
xchg
es
fcom
jecxz
xor
ss
dec
int3
int3
cmp
inc
adc
sub
imul
dec
movs
outs
push
add
jmp
jne
add
arpl
lahf
outs
fcom
idiv
jbe
shl
add
aam
movlhps
jp
sub
push
jg
fisttp
bound
mov
call
xor
pusha
push
imul
scas
or
push
pop
push
push
jo
sub
xchg
adc
xchg
dec
jnp
loopne
cld
add
in
cwde
cmc
or
push
(bad)
les
imul
inc
push
cmp
je
push
sub
lock
jmp
movs
mov
daa
jb
hlt
es
xchg
push
xor
push
jecxz
mov
mov
push
lea
fcomp
sub
xor
dec
jle
test
in
mov
retf
out
mov
xor
je
jecxz
inc
add
lods
sbb
add
out
sti
mov
mov
mov
dec
mov
test
push
jmp
or
or
sbb
mov
ja
adc
addr16
adc
fstp
adc
and
mov
adc
pop
adc
mov
inc
lea
mov
mov
mov
push
imul
push
(bad)
into
std
xlat
dec
lea
or
pusha
sub
jo
add
sbb
test
mov
ins
dec
jge
mov
mov
jmp
test
add
(bad)
outs
fdivr
add
js
sete
sub
ins
sub
push
hlt
mov
dec
jne
shl
aaa
pop
push
ret
aaa
mov
or
clc
lahf
clc
xor
adc
mov
add
or
lods
and
movs
dec
loope
aam
or
add
jle
add
mov
sbb
sbb
jl
mov
jmp
xchg
cmc
jle
pusha
pusha
rol
pop
push
into
dec
inc
add
imul
mov
dec
(bad)
shl
dec
sub
stos
rcl
jecxz
sub
jge
inc
jmp
xor
jbe
inc
cmp
call
inc
jo
push
pop
sbb
and
ja
adc
adc
stos
and
pop
loop
push
jecxz
xchg
inc
sbb
shl
dec
rcl
inc
inc
sub
or
adc
sbb
or
movs
dec
sub
jg
stc
retf
(bad)
out
mov
addr16
push
dec
push
pop
mov
(bad)
jmp
push
mov
push
in
out
(bad)
pop
pushf
daa
fdiv
cmp
and
push
mov
adc
xor
and
pop
jge
addr16
mov
inc
mov
push
pop
scas
xchg
das
push
pop
pop
loopne
dec
mov
inc
shl
sub
sub
adc
sbb
or
outs
test
push
pop
cli
add
nop
fsubr
pop
jo
push
push
jnp
outs
jmp
push
sbb
adc
nop
or
and
leave
loope
call
sub
call
xchg
lods
and
sub
clc
mov
xchg
add
jo
push
jbe
jmp
(bad)
or
sbb
pusha
add
or
jo
pusha
test
(bad)
push
pop
and
scas
ja
cli
add
ja
or
jp
add
inc
jno
rol
or
cvtps2pd
mov
out
sti
or
push
adc
mov
imul
adc
and
jb
add
out
sti
sahf
add
fsubr
push
mov
jecxz
scas
xor
loopne
push
jae
cmp
jmp
sbb
mov
add
cmp
push
addr16
sub
mov
test
cmp
pop
aam
sbb
ucomiss
push
sbb
pusha
(bad)
pop
mov
mov
push
aam
mov
mov
(bad)
xchg
sbb
cmp
mov
aas
xchg
cmp
jne
mov
jmp
push
cmp
mov
je
add
cmp
pop
dec
popa
(bad)
retf
inc
or
xchg
sbb
mov
and
(bad)
es
(bad)
fsub
fimul
push
xchg
ret
dec
adc
adc
dec
add
lds
adc
shl
push
add
add
xor
dec
inc
sbb
mov
jg
fld
movs
into
mov
pop
jo
dec
hlt
mov
adc
pop
addr16
inc
and
lods
push
ja
adc
dec
mov
sbb
ror
add
cs
push
xor
add
mov
lock
mov
push
cmps
(bad)
rol
dec
xor
pop
jo
cdq
inc
nop
push
js
das
xchg
xchg
movzx
or
pop
rol
cmp
popf
ds
dec
xchg
cli
adc
cwde
cmp
in
xchg
out
or
push
or
jo
out
retf
xor
les
push
xor
push
or
sub
adc
je
xchg
mov
sbb
pop
xor
cmps
es
mov
addr16
mov
stos
add
jmp
outs
mov
pusha
add
clc
add
mov
push
out
cmp
and
xor
cmp
popf
xor
ins
xor
mov
out
mov
add
dec
nop
addr16
jmp
pop
mov
xchg
popa
aaa
xchg
push
push
add
adc
push
lahf
call
inc
fdiv
jne
out
inc
and
xor
in
clc
push
popf
xor
ja
or
aas
std
xor
repz
fldenv
lds
nop
pop
or
jo
les
cmp
inc
add
mov
add
sub
ss
mov
aas
push
bound
inc
push
add
cs
push
ret
inc
test
sbb
aas
jmp
loop
adc
popa
dec
int3
dec
push
mov
imul
dec
je
sti
je
pop
adc
xor
shl
add
push
mov
push
or
sub
or
sbb
mul
cmp
das
jl
add
cmp
dec
jne
and
test
(bad)
int
jne
add
rol
xlat
mov
mov
jb
rcl
shl
sbb
adc
push
fdiv
int
pushf
movs
shr
in
(bad)
adc
cmp
and
aaa
xor
inc
xchg
in
std
mov
and
mov
ds
mov
hlt
dec
xor
add
dec
or
xor
and
xor
and
xchg
js
cmpps
inc
xor
loop
int3
jl
aas
adc
ins
push
or
jp
inc
cmp
cmp
lods
sar
cmp
ss
adc
bound
or
jle
mov
gs
jo
shl
out
dec
or
push
cmp
stc
jp
add
cmp
mov
pusha
inc
scas
(bad)
in
clc
inc
lahf
ja
movs
mov
sub
or
add
push
mov
lds
lock
mov
je
bound
sub
sub
test
add
mov
jnp
add
and
dec
ins
cmp
adc
xor
aaa
shr
and
js
or
sub
rol
mov
mov
add
imul
in
adc
add
jmp
ret
cmp
inc
and
mov
daa
sub
adc
adc
(bad)
cmp
add
and
inc
xor
mov
mov
dec
mov
and
test
xchg
dec
int
add
mov
add
xchg
fdiv
add
mov
mov
or
dec
jp
xchg
pusha
arpl
xor
xor
loope
adc
lea
mov
mov
fisub
sub
mov
fwait
into
cmp
and
mov
sti
push
cmp
push
(bad)
push
adc
or
or
(bad)
mov
inc
or
sub
jo
or
fsub
cmp
sub
add
sbb
mov
data16
pop
loopne
or
movs
cmps
loope
add
jecxz
lods
mov
movs
push
loopne
add
adc
or
daa
push
xor
adc
sbb
into
jbe
sbb
add
xor
sbb
call
scas
or
xor
fbld
mov
outs
and
repnz
aaa
dec
pop
push
stos
jno
loope
das
or
sbb
sub
push
xchg
out
mov
fucomip
and
add
ja
push
adc
push
ficom
or
lock
data16
or
cmp
mov
dec
push
inc
scas
movs
cmp
adc
inc
xlat
jl
xor
(bad)
or
dec
adc
imul
js
or
aam
enter
or
mov
movs
push
into
push
or
arpl
sbb
push
xlat
adc
daa
mov
jo
xor
bound
adc
in
fmul
inc
sub
es
jbe
jmp
jle
jae
jae
mov
sbb
jne
dec
push
sti
pusha
scas
sub
add
fcom
dec
xchg
cmp
lock
or
add
adc
adc
(bad)
std
outs
and
xchg
xor
inc
out
inc
sbb
sub
and
adc
enter
add
jbe
inc
and
sbb
push
clc
adc
pusha
daa
add
lds
xchg
jne
mov
add
xchg
dec
inc
push
xchg
jo
adc
idiv
call
das
clc
pop
cmp
push
das
mov
dec
test
jl
inc
pop
outs
jl
xchg
add
shr
adc
inc
dec
jne
sub
dec
jns
mov
enter
add
mov
repnz
int3
sub
shl
fmul
(bad)
mov
xor
in
les
outs
loopne
test
loop
(bad)
mov
push
inc
scas
stos
test
stos
push
fiadd
inc
jge
inc
jne
imul
xchg
popa
inc
jae
or
dec
push
add
outs
(bad)
or
(bad)
pop
cld
lahf
lods
adc
or
or
xchg
inc
inc
mov
mov
adc
adc
jno
(bad)
scas
cmps
push
mov
cmp
jno
mov
jne
jl
jae
add
sbb
xchg
loope
pop
sub
rdpmc
test
cmp
lea
(bad)
lea
dec
popf
inc
clc
sar
out
sub
sub
loopne
loopne
xor
movs
inc
sub
push
ror
ss
(bad)
or
or
dec
adc
jmp
add
or
popa
cld
pop
sub
inc
push
pop
mov
adc
outs
mov
mov
jmp
das
loopne
ret
(bad)
mov
sub
cdq
and
mov
je
pop
leave
rol
cmp
add
add
xlat
add
jge
push
add
push
cwde
fcmovnb
push
dec
or
iret
xchg
add
jmp
cmc
test
push
cmp
in
stos
adc
ja
in
test
sbb
inc
inc
test
scas
push
fnstsw
push
sub
das
outs
cmp
into
jnp
loop
ret
addr16
das
or
mov
hlt
jnp
jmp
push
rol
xchg
ds
push
test
pop
pop
test
sbb
clc
lock
mov
pop
loopne
mov
in
adc
(bad)
jne
sub
mov
mov
int3
rol
call
cmp
sbb
mov
call
sub
retf
or
rcr
sub
sub
sbb
adc
dec
pop
aam
mov
push
xlat
xchg
push
aaa
clc
push
pop
or
(bad)
call
jne
push
lods
inc
scas
cld
and
loopne
inc
sub
or
loopne
leave
retf
lock
test
(bad)
dec
jmp
and
and
add
inc
clc
cdq
in
xchg
sub
loopne
push
cmps
cmps
pop
jns
pop
xor
mov
or
mov
xchg
jno
and
mov
inc
xor
pop
jmp
out
add
cmp
data16
lock
in
push
xchg
les
mov
cmp
cmp
sbb
sbb
and
or
add
jbe
pop
pusha
or
ret
test
scas
shl
test
sar
dec
lock
xchg
xor
pop
xor
fild
je
sbb
add
cmp
push
(bad)
outs
das
nop
test
and
mov
movs
or
pop
sub
cld
(bad)
das
sbb
cmp
and
adc
lock
mov
jo
mov
xchg
ror
and
mov
pop
or
dec
cmp
mov
jle
pop
cdq
fisttp
mov
sbb
or
retf
or
nop
adc
or
xchg
pushf
psignw
fidiv
aaa
ja
and
je
jle
pusha
xlat
jecxz
lds
and
or
or
fcom
inc
test
(bad)
fisubr
lea
push
dec
push
pop
jo
pusha
lods
js
sbb
push
fs
push
neg
mov
test
mul
pop
ficom
pushf
pop
mov
inc
mov
ror
pop
jmp
test
jl
xor
mov
cmps
inc
jmp
movs
xor
adc
push
das
and
or
pop
jo
add
lock
pusha
sub
pusha
leave
rcl
and
or
dec
sbb
loopne
das
mov
mov
and
push
sbb
xchg
add
std
jo
popa
xor
clc
pop
js
add
ror
inc
imul
pop
or
mov
xchg
arpl
mov
add
cmps
aaa
lea
adc
aaa
lahf
movs
or
cmp
fbstp
pushf
rcr
adc
dec
xchg
ss
out
mov
mov
inc
lods
adc
sub
or
punpckhwd
retf
test
push
pop
addr16
cmc
inc
mov
addr16
rol
lods
xor
out
aam
lea
aam
cmps
mov
lea
outs
in
icebp
test
sub
push
inc
lock
shr
pop
das
jns
loope
std
cs
lods
mov
xor
cs
xchg
cwde
sbb
sbb
fwait
inc
xor
or
not
retf
pop
nop
sbb
inc
xchg
xor
push
jmp
lea
mov
inc
unpcklps
push
outs
pop
js
jg
sub
add
jmp
out
or
retf
mov
or
das
dec
or
loope
int3
outs
mov
sbb
cmp
inc
fsubr
or
sub
cmp
(bad)
test
out
xlat
jbe
xchg
loopne
xor
fld
leave
and
add
pop
cmps
loop
aas
push
je
jg
loop
mov
mov
je
movs
aad
inc
pop
mov
xchg
push
je
jge
mov
xchg
movs
add
push
cmp
mov
pop
in
out
out
lods
inc
xchg
xlat
aaa
push
inc
jbe
icebp
mov
sbb
or
push
xor
xchg
je
movs
xchg
mov
jno
popa
lahf
test
sub
aas
out
and
xor
outs
or
outs
adc
sub
scas
and
xchg
scas
inc
adc
adc
out
enter
jbe
jl
(bad)
lock
cmp
add
rol
or
nop
test
call
add
push
enter
leave
dec
adc
mov
mov
lods
and
shr
outs
jno
xchg
nop
test
ss
loope
jns
inc
jmp
pop
mov
movs
sbb
inc
repz
lock
sub
dec
fwait
adc
push
adc
loop
clc
dec
add
mov
fisubr
scas
push
xor
mov
or
xor
outs
push
xchg
push
cmps
mov
pusha
add
aas
cmp
setle
js
or
mov
pusha
add
scas
cmps
dec
cmp
inc
push
adc
adc
xlat
lahf
add
rcl
push
mov
aaa
cmp
rol
xor
push
jbe
es
mov
loope
(bad)
dec
xor
into
and
rol
dec
nop
inc
xor
sbb
add
inc
mov
sub
jl
inc
inc
addr16
add
add
fmul
adc
xor
loop
mov
test
dec
test
jmp
and
call
xor
xchg
or
fs
movs
mov
add
inc
dec
jne
mov
in
inc
add
mov
rcl
inc
or
ret
jl
mov
inc
add
adc
fidivr
fsubr
inc
in
call
ins
inc
call
push
inc
or
pop
in
dec
inc
push
call
loopne
adc
mov
mov
mov
inc
adc
stos
mov
or
push
jnp
lea
scas
inc
mov
retf
nop
mov
ins
loopne
add
cmp
xrelease
popf
sar
inc
dec
shl
movs
cmp
aaa
mov
mov
mov
call
int3
add
jle
dec
push
in
repz
xchg
adc
(bad)
nop
xlat
push
mov
not
aam
dec
adc
out
jge
jl
vxorpd
add
rdtsc
sbb
jno
in
jle
dec
pusha
call
lds
jb
nop
or
mov
dec
xchg
loope
out
test
dec
and
in
mov
daa
cmc
add
div
nop
pusha
test
inc
add
mov
add
leave
ss
mov
cli
jg
pop
out
cmp
jle
sub
inc
inc
and
dec
jo
or
scas
push
mov
pop
fisub
push
fstp
(bad)
stos
mov
jmp
lock
mov
das
jae
jl
xchg
mov
and
movs
icebp
sahf
dec
fadd
scas
xor
fild
xor
sbb
jne
les
aam
or
xlat
sbb
inc
mov
pop
dec
ins
xchg
jo
mov
inc
or
jo
jge
jmp
pop
dec
inc
or
xor
fdivr
xchg
(bad)
pop
fadd
and
(bad)
aaa
push
or
and
(bad)
(bad)
(bad)
push
jl
mov
push
mov
push
fwait
inc
mov
lea
inc
xchg
stos
adc
and
push
aaa
push
push
outs
aaa
or
add
pusha
mov
mov
(bad)
fadd
jns
mov
jecxz
cmp
xchg
xor
add
inc
js
adc
mov
mov
or
sbb
sbb
lock
pop
jns
jle
jle
cmp
dec
aas
sbb
adc
push
repnz
pop
or
in
fmul
or
loopne
pop
std
mov
mov
mov
mov
push
ins
mov
mov
cmp
cmc
dec
pusha
and
cmp
jl
ins
push
fisub
jo
jmp
cmp
sub
fmul
aas
scas
dec
xor
mov
aas
int3
in
mov
loopne
in
mov
jne
je
xor
loopne
xor
neg
pop
cmp
adc
sbb
jne
pop
repnz
les
in
in
out
and
mov
les
enter
call
ds
movaps
adc
adc
add
out
or
enter
in
sub
fild
dec
jmp
fadd
mov
add
std
dec
add
js
add
add
mov
push
sidtd
push
inc
int
sub
aas
cmp
les
inc
mov
(bad)
inc
push
add
ds
add
push
pop
jnp
jb
lock
and
add
in
sahf
arpl
push
arpl
(bad)
out
sub
cmp
imul
ins
add
outs
jbe
inc
adc
data16
push
push
mov
inc
jle
cmp
call
and
sbb
cmp
sbb
mov
xchg
ja
mov
pushw
pop
or
dec
addr16
push
scas
sub
inc
sbb
adc
data16
test
jmp
mov
es
push
sbb
xchg
dec
bound
xchg
pushf
add
cmps
or
(bad)
push
add
aaa
xchg
inc
cmp
or
pop
cwde
jp
(bad)
outs
sbb
repz
push
push
push
and
xchg
jae
xlat
arpl
mov
xchg
sti
jne
mov
and
inc
cmp
inc
sbb
jbe
jg
ins
xchg
or
pop
push
add
nop
add
int
sbb
(bad)
pop
push
cmp
mov
rcr
lods
mov
pop
in
mov
jl
add
dec
pusha
push
mov
fmul
mov
(bad)
xor
pop
jle
xor
dec
mov
or
lods
push
push
mov
outs
les
or
pop
adc
mov
push
or
push
adc
mov
shl
adc
mov
inc
mov
push
mov
rcl
scas
pop
loopne
rcr
test
lods
xchg
cmps
shl
scas
movs
mov
fwait
jmp
aas
test
sbb
inc
add
loope
loopne
cmps
std
movs
dec
test
je
sub
ret
rcr
and
shl
cwde
xchg
retf
not
clc
and
xchg
jnp
mov
rol
inc
push
in
push
jo
push
test
jmp
cmp
das
add
ret
pushf
fisttp
pop
das
pop
les
fidivr
xchg
nop
loopne
cmp
inc
pop
jnp
xchg
mov
xchg
xchg
mov
icebp
pusha
add
jo
pop
push
stos
xor
inc
jbe
jo
ja
xchg
enter
sub
mov
fimul
mov
ficom
sbb
xchg
lods
sbb
imul
sbb
add
ficomp
aaa
mov
loopne
sbb
or
mov
jo
nop
sbb
sbb
lods
cmp
add
push
sbb
sbb
inc
inc
push
aam
ja
out
inc
fimul
push
or
push
je
inc
and
sbb
xor
inc
cmp
pop
cmp
jnp
int3
push
mov
inc
mov
enter
and
mov
add
push
test
sbb
test
dec
sbb
xor
xor
pushf
jae
dec
rcl
movs
int3
add
out
jae
test
pop
shl
jmp
movs
or
fmul
mov
xchg
jg
pushf
mov
or
test
sub
icebp
movs
pop
push
jno
inc
push
push
sbb
xchg
add
imul
sbb
gs
and
fisubr
dec
and
sub
add
ror
xor
and
mov
xor
cmovno
lods
out
movs
and
add
jb
cli
loopne
or
jecxz
test
cmp
and
or
inc
sahf
(bad)
mov
int
ins
sti
fiadd
pop
in
push
popf
push
or
dec
retf
jp
mov
das
sub
mov
push
add
pop
das
popa
outs
jnp
sete
mov
daa
das
pop
ja
add
movs
xchg
(bad)
stos
idiv
push
dec
xchg
test
push
addr16
sahf
je
loopne
pop
dec
or
ins
mov
cmp
aas
xor
pop
push
cdq
add
cmps
jge
clc
dec
pop
sub
jbe
cmps
in
call
pushf
nop
adc
daa
in
ret
push
retf
or
lds
or
fsubr
out
scas
test
push
push
mov
push
movs
pop
out
repnz
or
dec
jne
inc
xor
pop
ror
push
pop
fmul
sar
xchg
sub
lahf
loopne
aas
ja
cmps
adc
not
and
push
jg
movs
add
test
pop
cs
jne
aas
sbb
or
xor
call
fdivr
mov
inc
cmp
rcr
repz
inc
jmp
adc
xchg
call
push
inc
dec
(bad)
adc
ror
sbb
mov
cmps
ins
mov
pop
lock
add
add
jmp
out
daa
and
dec
mov
dec
mov
cmp
jne
add
sub
mov
mov
cmp
pop
pop
jmp
push
mov
dec
call
xchg
adc
ja
sbb
jp
push
cmp
into
add
push
jge
dec
and
or
jg
fiadd
adc
mov
cmp
ja
sbb
adc
add
inc
or
ds
cmp
inc
add
xor
cmp
clc
loopne
int
add
dec
scas
add
mov
mov
js
mov
hlt
outs
jo
mov
(bad)
push
in
sub
dec
icebp
dec
adc
pop
mov
pop
cmps
push
or
cs
mov
or
jmp
xor
fdiv
pop
add
sbb
push
fsub
pusha
jno
stos
clc
daa
push
push
inc
rcr
fiadd
cmp
push
pop
retf
ins
mov
not
into
mov
adc
neg
jbe
js
xchg
and
inc
add
xor
shr
inc
jno
loope
push
fsubr
sub
daa
scas
inc
sub
aad
adc
or
sbb
rol
mov
add
pop
jecxz
sub
jge
and
dec
imul
push
or
or
jge
ins
add
clc
mov
jmp
sbb
fadd
and
sub
xchg
sub
sbb
push
push
sbb
mov
add
repnz
ror
push
mov
xor
or
sahf
(bad)
dec
sub
mov
add
enter
add
inc
dec
jle
outs
adc
or
adc
xchg
scas
ret
jae
test
repz
rcl
fs
cmp
and
adc
or
nop
xor
push
add
jnp
push
adc
loopne
xor
sbb
push
and
inc
inc
dec
sbb
or
cmp
or
or
scas
cli
add
es
and
sub
push
enter
ror
push
call
mov
pop
jle
cs
push
xlat
ss
ret
and
loopne
push
sbb
lods
mov
mov
mov
sbb
data16
rcr
ins
loop
cs
clc
test
fmul
(bad)
mov
sbb
cmp
stos
sub
inc
xchg
add
add
aad
aas
in
movs
xlat
out
aam
clc
lods
fdivrp
xor
mov
cmp
nop
aas
sbb
lea
js
add
js
test
xor
pusha
fs
dec
mov
mov
mov
(bad)
push
data16
repz
add
and
pusha
xchg
push
mov
and
jb
or
out
adc
retf
inc
dec
dec
rol
shl
test
test
addr16
pop
and
shl
inc
push
arpl
sbb
(bad)
enter
enter
in
je
in
imul
cmp
adc
and
cmp
add
dec
in
sbb
xor
and
add
cld
add
push
sbb
fsub
jo
cwde
inc
add
test
outs
bnd
mov
pop
ret
test
push
xchg
int
inc
movs
dec
sahf
jmp
inc
fst
push
add
add
push
push
sti
pop
xchg
mov
mov
pop
add
js
mov
test
lahf
add
jne
pop
nop
es
cmp
adc
sar
xor
mov
xchg
or
sub
sbb
sub
js
cmp
cmp
popa
mov
or
add
test
sti
mov
and
cmc
or
repz
loopne
int3
xchg
jecxz
test
and
xor
pop
not
adc
div
and
sbb
cmc
add
cmp
cmp
(bad)
dec
xor
idiv
das
cld
icebp
dec
(bad)
hlt
fstp
fwait
push
mov
or
cmc
xchg
mov
pop
add
sbb
cmp
mov
sub
call
pop
ja
sub
mov
xor
mov
movs
sbb
fcomp
pop
sti
fdiv
jg
add
gs
leave
add
test
xchg
inc
jo
and
scas
jecxz
aam
shl
mov
inc
mov
jmp
jbe
mov
fstp
push
xor
in
ins
mov
inc
aaa
jbe
lds
adc
mov
mov
sub
xchg
inc
mov
pop
sbb
es
pop
mov
mov
and
bound
dec
cmp
sub
pop
add
jmp
leave
adc
ja
into
sub
and
nop
or
dec
aad
sbb
mov
aas
mov
lds
inc
push
std
pop
xchg
cwde
inc
scas
pop
xchg
mov
mov
call
jg
mov
add
mov
or
jmp
clc
pop
jl
cld
lock
ror
push
rol
lahf
data16
add
inc
inc
or
adc
or
inc
pop
cmp
inc
add
sub
cmps
sbb
dec
sub
bound
mov
nop
mov
jecxz
sbb
push
jno
(bad)
data16
pop
cmp
cmps
(bad)
sbb
or
ins
dec
jo
adc
cmp
arpl
loopne
js
push
scas
loope
jge
mov
dec
sete
idiv
mov
icebp
stos
leave
push
or
xor
(bad)
ins
into
or
jne
add
hlt
push
test
mov
mov
(bad)
sbb
or
sub
sub
pop
ret
lock
outs
push
loope
js
aas
pop
jb
adc
xor
and
sub
into
arpl
pop
pusha
or
inc
sahf
or
or
hlt
jg
lahf
test
jmp
xor
sub
neg
pop
clc
fwait
shl
mov
(bad)
repnz
ret
daa
pop
ret
dec
stos
or
stc
cmps
repz
jbe
mov
inc
mov
mov
sub
stos
mov
sbb
sub
js
popa
push
or
jo
or
inc
xor
pop
stc
cwde
xchg
cld
ins
(bad)
stos
pop
mov
lds
lods
aaa
leave
adc
pop
cld
popa
je
jbe
dec
outs
(bad)
mov
jge
mov
in
aas
cwde
jl
mov
pop
dec
cmp
xlat
mov
adc
push
mov
sbb
aaa
xor
aaa
aaa
and
or
jno
dec
aaa
pop
cmp
or
loopne
inc
and
fst
scas
adc
or
sub
loopne
scas
add
nop
scas
dec
dec
scas
inc
sbb
add
scas
and
(bad)
lahf
call
inc
xlat
sbb
inc
sbb
xlat
inc
jb
or
in
inc
mov
mov
in
popa
fnsetpm(287
cwde
inc
cwde
arpl
lahf
call
or
dec
and
aas
ins
mov
mov
shr
xchg
sub
dec
push
mov
or
pop
add
sbb
in
(bad)
retf
push
xlat
sub
loop
iret
stos
push
call
sub
test
jne
mov
add
pusha
sbb
nop
mov
dec
call
(bad)
(bad)
jne
test
bound
mov
int
test
sub
or
shl
and
xchg
lock
fwait
out
xor
jecxz
add
les
test
and
shr
sbb
inc
pop
scas
or
sbb
cmp
or
js
add
push
lds
aam
mov
rcl
adc
shl
bound
and
xor
outs
dec
es
push
mov
and
jae
add
ret
rol
pushf
fnstcw
add
in
mov
jbe
jmp
jle
mov
and
add
lods
fst
cmp
cmp
sub
in
shr
fs
pop
(bad)
int
loopne
dec
pop
mov
inc
dec
add
fist
and
test
adc
clc
jne
xchg
jmp
das
(bad)
jge
enter
mov
sub
pop
dec
push
scas
or
adc
add
adc
push
pop
cmc
adc
test
push
sub
ret
sub
or
out
sbb
push
push
jg
inc
or
movs
js
sub
les
clc
test
lock
test
mov
js
pop
add
or
sbb
sbb
pop
icebp
dec
mov
add
les
out
push
add
(bad)
mov
inc
inc
and
push
ficom
inc
xor
mov
popf
cmp
pop
dec
test
mov
(bad)
jle
sar
xor
inc
or
sbb
ins
mov
lahf
pop
outs
shl
retf
stc
sub
(bad)
cwde
push
or
fwait
pop
(bad)
fnstsw
adc
jg
mov
shl
setne
sbb
sbb
jge
cmps
push
popa
popf
ror
cmp
cmp
fimul
mov
fld
les
add
loop
mov
cmp
cmp
xchg
cdq
mov
ja
and
sbb
inc
push
popf
sub
add
dec
fadd
inc
push
movzx
movzx
movs
pop
lea
fs
mov
jbe
retf
popa
dec
pop
sbb
dec
cmp
pop
cmp
jne
movs
popf
jbe
retf
push
mov
add
and
dec
mov
pop
hlt
in
push
jl
cmp
leave
inc
mov
sub
mov
into
pusha
xchg
mov
loope
daa
and
sub
mov
out
cmp
sub
lods
push
cmp
xor
mov
mov
stos
mov
or
add
js
pop
out
xchg
sbb
xor
loop
pushf
aam
sbb
pop
dec
and
iret
xlat
jb
sbb
(bad)
xlat
xchg
rcr
pop
pop
ss
sub
pop
cmp
push
adc
adc
pop
imul
rol
sbb
mov
iret
xchg
addr16
add
out
cmp
(bad)
aad
aad
jmp
sbb
cmps
daa
not
add
cmp
jg
call
jns
movs
jb
add
mov
or
mul
xor
and
or
enter
dec
pop
sysret
fild
adc
popa
or
inc
inc
ja
ja
js
retf
mov
inc
sbb
or
test
cmp
fst
sub
pop
cmp
iret
and
sub
ja
add
sub
mul
int3
mov
adc
fild
xor
mov
push
adc
jbe
or
cmc
scas
sub
push
cmp
(bad)
lock
mov
xchg
xchg
xlat
or
fild
fidiv
les
adc
movs
and
pusha
ja
push
movs
fist
add
jg
fbld
pop
dec
test
xchg
std
scas
ror
pop
sub
cmps
fisub
or
test
popa
mov
jbe
aaa
ins
mov
or
pop
pop
push
arpl
rol
inc
mov
add
inc
xor
mov
push
sar
out
add
call
dec
or
jb
ror
cmp
or
dec
jns
dec
xor
mov
lock
inc
outs
jecxz
pop
out
pusha
mov
inc
loope
cmps
idiv
push
sbb
(bad)
aaa
shl
inc
cmps
pop
nop
push
dec
mov
cmps
xchg
aaa
mov
cmps
add
rol
icebp
or
iret
data16
ror
and
adc
lock
add
add
(bad)
cmp
clts
jb
lahf
loopne
je
in
and
mov
push
jo
add
out
mov
xor
(bad)
mov
neg
mov
cmp
mov
call
xchg
cmp
add
cmc
outs
loopne
neg
(bad)
call
add
push
ret
test
sub
bound
cmp
sub
mov
mov
adc
add
cmp
iret
push
aam
ficomp
je
fiadd
adc
pop
retf
mov
jg
or
mov
push
leave
adc
stos
lahf
mov
test
stos
stc
push
scas
iret
pusha
adc
outs
or
arpl
iret
pop
mov
adc
js
popa
cmps
pop
(bad)
mov
and
ret
hlt
push
pusha
add
leave
iret
push
sbb
rcr
sub
test
test
mov
bound
cmp
rcl
dec
or
cmp
inc
jo
adc
xlat
dec
rcr
test
or
aaa
push
mov
jbe
sub
push
sbb
mov
aaa
inc
and
inc
lahf
(bad)
int
dec
dec
and
sub
mov
sbb
xor
aad
push
cmp
add
mov
and
pop
fs
push
mov
xchg
arpl
fdivr
add
test
lods
cld
add
jle
push
add
inc
mov
adc
sbb
rcr
mov
es
or
(bad)
xlat
mov
xor
jmp
daa
xor
xor
(bad)
and
mov
mov
jae
fistp
gs
jb
nop
das
div
mov
outs
icebp
imul
push
fcom
inc
sbb
or
retf
push
test
mov
xor
mov
mov
ins
push
mov
paddsw
and
enter
adc
adc
add
sbb
xor
push
adc
fistp
sbb
xor
push
and
push
dec
xor
pop
add
(bad)
adc
(bad)
jecxz
xchg
das
outs
sbb
pop
sbb
xor
jecxz
pop
in
xor
dec
mov
xor
pop
jmp
dec
and
hlt
add
push
adc
fst
(bad)
adc
inc
mov
sbb
mov
ret
dec
inc
pop
push
and
pop
jp
add
xor
mov
xor
push
(bad)
call
mov
jbe
pusha
jae
std
xchg
mov
test
jne
adc
mov
js
cmp
add
and
retf
gs
mov
loope
mov
rcl
jo
test
xchg
mov
or
xor
sub
dec
xchg
repz
push
xadd
xchg
sbb
loop
imul
js
gs
test
shld
cmps
(bad)
cwde
rol
sbb
call
into
add
sbb
add
shl
jo
pop
adc
pop
inc
pusha
lock
xchg
mov
push
mov
movzx
push
shr
test
(bad)
jg
jg
cmp
jl
test
sbb
lock
fsubr
js
push
and
xor
fcomip
dec
or
in
fisubr
fnstsw
sahf
ja
cmp
and
jp
test
mov
or
pop
mov
loopne
mov
xor
cmp
push
sub
or
ins
js
mov
mov
dec
cmp
jg
and
sub
addr16
add
add
mov
fdivr
add
xchg
test
adc
push
nop
(bad)
fild
sbb
inc
out
cmps
or
ror
push
jo
jns
out
or
add
or
jp
pop
dec
pusha
not
inc
cmp
aaa
adc
and
mov
outs
push
cmps
push
pop
pop
xchg
push
loope
test
icebp
jle
mov
mov
dec
pop
or
int3
call
test
dec
or
add
das
fidiv
fild
mov
or
aas
xchg
add
pop
add
and
pop
es
dec
outs
outs
into
sahf
dec
mov
add
(bad)
jb
add
mov
xchg
inc
aaa
das
mov
sub
dec
(bad)
jae
lahf
std
and
push
fld
inc
pop
xor
pop
or
pop
jl
add
pop
je
es
movs
add
rcr
and
iret
adc
jns
sub
ja
out
and
mov
adc
mov
dec
add
lock
out
xchg
cmp
jb
shl
out
dec
and
loopne
dec
das
scas
out
add
dec
adc
sbb
(bad)
pop
jle
mov
out
dec
add
out
sub
cs
shl
add
sbb
daa
adc
push
push
inc
adc
add
jo
jmp
ror
loopne
push
xor
ja
loopne
in
test
sbb
jge
outs
mov
adc
jmp
sub
out
adc
rol
adc
mov
xchg
outs
and
and
test
cmp
inc
cmp
push
push
daa
jl
cmp
sbb
je
push
sub
pushf
(bad)
or
cmp
pop
mov
inc
mov
test
sbb
pop
daa
adc
cs
and
js
jmp
cmp
(bad)
fucomip
xor
jmp
ins
loopne
scas
push
sub
dec
test
fisubr
mov
or
ja
push
pop
int3
add
ror
pop
ja
pop
add
mov
rol
jns
push
je
lahf
clc
ret
pusha
and
xchg
pop
das
mov
je
pusha
or
inc
add
(bad)
mov
push
and
or
inc
test
pusha
pop
pop
jne
mov
pusha
inc
or
pop
push
push
or
or
out
adc
outs
sub
das
xchg
xchg
sbb
jg
cmp
sub
mov
sbb
fcom
rol
ja
adc
sub
iret
add
pusha
xor
or
iret
pop
rcr
add
mov
clc
add
test
cmp
or
or
ins
lahf
adc
pop
jecxz
nop
fisub
inc
fwait
ja
mov
add
or
stos
loop
and
rol
mov
lods
inc
mov
add
mov
sbb
(bad)
call
arpl
mov
dec
pop
(bad)
adc
mov
cmp
jbe
mov
cmps
scas
cwde
cld
cdq
dec
add
shl
and
jecxz
push
jno
fsubr
xchg
mov
mov
adc
(bad)
fstp
inc
add
pop
sub
mov
mov
xor
cmp
fist
or
cwde
ds
inc
sbb
imul
fild
xchg
aaa
jns
add
mov
out
cmp
(bad)
xor
(bad)
mov
add
or
jmp
and
out
cmp
pusha
sub
das
inc
test
jl
out
fcompp
sti
out
fsub
inc
xchg
cmp
sbb
retf
xlat
cmps
mov
pusha
daa
xchg
test
dec
pop
lock
add
dec
add
call
fstp
fwait
mov
lods
sub
add
mov
ins
hlt
or
mov
shr
(bad)
dec
sub
pop
test
mov
sub
xlat
ficom
sub
jnp
lea
push
push
or
jecxz
ja
lods
cmp
mov
cmp
or
push
aad
inc
movs
mov
lahf
fstp
push
push
dec
mov
aaa
inc
lods
das
das
das
(bad)
fsubr
jnp
(bad)
mov
lahf
lods
fiadd
repnz
rcr
sbb
dec
push
mov
add
fistp
adc
(bad)
or
(bad)
xor
ror
pushf
fwait
ret
lock
das
div
sub
dec
inc
dec
sbb
pop
mov
push
xor
adc
nop
push
lods
ret
addr16
loopne
fisub
or
mov
add
jg
pusha
stos
inc
mov
test
ror
mov
mov
or
pop
inc
jo
inc
mov
sub
push
and
pop
daa
sub
or
cld
inc
nop
inc
add
repz
inc
add
gs
fcom
rol
lahf
ins
hlt
adc
mov
rcl
xlat
sbb
enter
jbe
inc
(bad)
ror
call
jbe
lock
adc
out
iret
call
mov
mov
dec
jae
adc
jecxz
cld
push
shr
cmp
jne
sahf
jne
dec
pusha
lods
or
call
push
jne
push
xor
jne
add
mov
mov
mov
dec
xchg
jl
jae
xchg
outs
push
ficom
or
sub
call
mov
pushf
inc
js
rcl
mov
push
and
or
and
ficom
add
jo
inc
jmp
jecxz
xor
jle
mov
lea
ret
outs
pop
repnz
push
pop
adc
retf
xchg
add
push
fisub
push
pop
sbb
inc
dec
cmp
push
xchg
xor
js
call
in
sar
adc
ror
in
xor
add
xchg
jns
lds
loope
push
inc
inc
sub
mov
sbb
lds
jne
cmp
jo
in
mov
adc
or
inc
sub
pop
int
ret
retf
dec
inc
fist
mov
je
push
add
push
mov
or
sbb
mov
repnz
and
and
clc
mov
add
pop
push
inc
js
ja
jge
add
ja
jmp
dec
inc
jnp
and
hlt
dec
mov
xor
neg
mov
xor
and
in
push
mov
and
push
dec
jle
cmp
xor
and
push
dec
add
fimul
jp
pop
imul
adc
pop
outs
mov
ror
cmps
mov
lock
cmp
xchg
in
cs
ins
mov
ins
and
dec
inc
and
mov
mov
sbb
adc
mov
inc
inc
mov
les
cmps
in
adc
mov
and
adc
add
clc
mov
jle
or
loop
xchg
cmp
add
jns
add
adc
lock
cmp
jo
add
mov
push
shl
jo
jo
dec
in
jle
add
dec
mov
inc
sbb
xor
in
jmp
loope
stos
nop
shl
pop
scas
or
sbb
dec
sub
ja
push
or
jae
mov
add
xchg
adc
xchg
inc
test
cmp
pop
push
(bad)
rol
movs
scas
in
aam
ret
test
imul
xor
lods
sbb
push
add
push
lea
das
loop
or
xchg
in
(bad)
rol
test
inc
adc
fstp
daa
push
sbb
or
push
sub
jo
inc
xor
inc
mov
or
xchg
mov
lea
mov
stc
sub
pop
add
jp
es
outs
rol
test
push
test
xor
mov
push
cmps
mov
add
popa
add
sahf
imul
pop
pop
mov
jo
fbstp
inc
les
fild
mov
xchg
cmps
ja
mov
test
push
int3
mov
cwde
inc
push
xor
jb
cwde
and
lds
pop
xchg
or
in
or
add
nop
mov
enter
or
mov
fsub
mov
fadd
ins
retf
add
add
add
dec
fadd
inc
dec
pop
in
movzx
cdq
or
sbb
sahf
add
mov
fcom
xchg
dec
test
sbb
push
addr16
aaa
inc
add
aas
pop
aaa
dec
xchg
pop
mov
mov
dec
out
add
rcl
dec
jmp
(bad)
mov
addr16
jno
(bad)
mov
(bad)
fbstp
push
xor
movs
sub
push
mov
sub
sub
inc
add
in
iret
mul
xchg
add
test
imul
imul
daa
mov
test
stos
ja
fsub
dec
and
shl
fcom
lds
test
aam
jbe
cmp
pop
or
lods
mov
push
mov
mov
mov
(bad)
outs
mov
lea
xchg
or
inc
mov
adc
fisub
int
out
or
or
sub
test
cwde
push
or
call
aas
les
or
xlat
imul
jmp
cmps
mov
mov
cmp
cmp
sub
pop
scas
and
sub
aas
mov
adc
(bad)
cmp
(bad)
movs
pop
test
loopne
pop
inc
adc
pop
stos
jmp
push
add
les
int3
pop
aaa
pop
adc
push
add
outs
daa
jae
xchg
or
cmp
pop
jg
sbb
adc
sbb
sbb
add
pop
test
das
sub
retf
sbb
pop
lahf
push
pop
icebp
jae
cli
jne
ss
(bad)
loop
loopne
push
mov
sub
mov
add
sub
dec
dec
xor
cmp
jmp
pop
clc
mov
fcom
mov
popf
scas
les
push
cmp
add
push
aaa
jp
cvtps2pi
adc
rol
aaa
(bad)
loopne
test
int
das
or
push
das
je
and
or
pusha
aaa
cmpxchg
add
push
or
inc
sbb
(bad)
lea
int
pushf
add
inc
sub
lahf
ins
cmc
inc
mov
and
or
pop
add
pop
pop
loope
cwde
loope
sar
nop
push
cmp
je
mov
or
dec
push
push
mov
mov
add
inc
daa
cdq
and
gs
hlt
test
push
cmp
jne
mov
jne
rcr
add
ret
jmp
mov
dec
pop
out
(bad)
jne
inc
stos
push
xor
imul
jns
scas
inc
push
cmp
idiv
jle
pusha
test
adc
jl
out
mov
cli
add
jmp
cmp
sub
push
cli
mov
mov
lahf
pop
or
pop
push
mov
jmp
push
and
jge
iret
or
outs
add
lock
adc
adc
lahf
shr
push
loop
mov
or
mov
test
daa
push
prefetch
or
je
jmp
pop
cwde
add
and
add
inc
push
add
pop
pop
pusha
pop
call
jnp
push
mov
sti
jne
push
enter
push
call
popa
sahf
pushf
je
sbb
or
or
stos
lods
adc
mov
push
loope
inc
sbb
mov
cwde
sub
gs
call
jge
je
sub
rcr
adc
mov
(bad)
loope
mov
cmp
stos
fucom
xchg
cmps
xor
rcr
xchg
mov
retf
xchg
push
adc
xor
cwde
xchg
adc
inc
mov
sbb
mov
pop
jmp
dec
push
(bad)
cmc
sbb
int
in
pop
jp
push
adc
enter
sub
lds
xchg
or
xor
push
mov
mov
pop
(bad)
sbb
jl
inc
mov
mov
push
retf
jo
pop
ins
xor
mov
push
fwait
aaa
jo
cs
jne
pop
out
pusha
aam
jne
pop
mov
push
mov
xor
outs
inc
ret
imul
and
inc
inc
outs
pop
cs
sbb
in
inc
lods
adc
imul
sub
inc
call
or
sbb
push
mov
sbb
ss
sahf
cdq
jl
cmp
fldenv
mov
pop
push
xlat
adc
and
imul
ret
nop
stos
mov
mov
addr16
mov
cld
add
jne
inc
or
lock
pop
mov
dec
push
sbb
or
(bad)
xchg
adc
and
or
jnp
pop
scas
add
in
mov
test
hlt
test
pop
mov
arpl
jne
cmc
jno
ins
clc
jl
dec
push
xor
fdiv
call
and
jne
adc
jge
cld
dec
pusha
mov
jl
mov
adc
or
jmp
or
jle
cld
mov
jl
jmp
mov
movzx
mov
pop
inc
call
add
out
ja
push
or
dec
cmp
push
ror
ror
xchg
and
imul
add
sbb
push
or
or
enter
dec
jne
sub
jmp
sbb
jp
iretw
jnp
sbb
jle
adc
xor
lock
loopne
sbb
rol
inc
mov
push
sub
add
ins
loopne
hlt
ss
sub
sub
aaa
sbb
sbb
test
and
mov
loope
js
mov
inc
xor
fbld
jp
sub
ror
or
sub
jle
mov
lea
jo
(bad)
sar
inc
jmp
das
adc
loopne
inc
adc
loope
or
imul
pusha
out
cmp
lea
cdq
loope
cmps
arpl
call
mov
repz
jmp
mov
push
push
mov
sbb
retf
jno
push
cmp
and
test
mov
xchg
rcl
mov
aaa
ret
(bad)
cmp
jge
test
adc
push
mov
mov
call
dec
in
sbb
mov
pop
test
push
sbb
adc
daa
(bad)
mov
cmps
dec
test
mov
sgdtd
imul
push
mov
or
xor
add
add
inc
add
movups
sbb
mov
sbb
popa
stos
scas
pop
adc
and
mov
and
jno
rcl
or
or
lahf
mov
and
shr
mov
and
fcomp
inc
add
ror
sub
pop
sar
sbb
mov
loop
add
xchg
neg
mov
push
cs
xchg
and
pop
cmp
imul
test
pop
nop
cmps
jo
arpl
xor
lods
push
pop
push
lods
pop
arpl
shr
(bad)
xor
xor
or
dec
mov
out
test
ja
sub
(bad)
out
ficom
inc
add
inc
sub
add
outs
add
fdiv
(bad)
mov
iret
push
das
adc
fsub
xchg
stos
push
xchg
pop
xor
inc
jae
fdivr
push
sub
push
mov
adc
xor
sub
mov
add
dec
jl
in
fisttp
mov
fnstsw
mov
inc
call
das
push
hlt
cli
push
rcr
lock
lea
in
jne
jbe
(bad)
in
or
loop
dec
lods
clc
lods
or
mov
aaa
cmc
mov
nop
js
jne
mov
aas
cs
mov
int3
or
pop
or
and
pop
ret
add
adc
add
push
lock
pop
add
in
jns
push
in
loopne
xchg
js
sub
mov
jb
shl
cmp
push
ins
cmp
xchg
in
jl
and
(bad)
(bad)
xor
stos
aas
push
adc
xor
jno
(bad)
cmp
inc
pusha
push
sbb
and
fcom
and
int3
mov
dec
mul
jae
and
or
or
add
dec
ret
loopne
cli
in
dec
or
cmp
seto
shl
sub
xor
(bad)
xor
mov
mov
popa
pop
push
pop
movs
mov
jge
push
into
je
sti
fs
mov
push
cmp
push
pop
fcomp
dec
imul
pushf
outs
xchg
pop
add
shl
mov
xchg
adc
pop
test
mov
or
call
call
loope
push
neg
sub
add
bound
adc
outs
inc
ret
adc
pop
or
in
add
cmp
add
pop
jns
xchg
push
dec
mov
jbe
sahf
adc
(bad)
mov
das
pop
pop
jb
mov
jns
and
add
mov
lahf
movs
dec
ins
inc
aas
repnz
pop
mov
out
inc
or
ja
je
cmp
jmp
mov
pop
and
xor
ret
add
sbb
aaa
mov
inc
mov
inc
sbb
addr16
je
xchg
or
(bad)
pusha
call
mov
shl
cwde
pop
(bad)
pusha
mov
jbe
jp
xor
and
das
xor
xor
dec
pop
aad
fmulp
dec
push
fmul
and
jo
adc
mov
imul
movs
nop
retf
fwait
jne
sar
sbb
test
inc
pop
retf
xchg
add
clc
push
nop
mov
nop
mov
ret
jmp
clc
daa
push
xlat
dec
test
jl
inc
xchg
mov
mov
mov
inc
dec
jne
retf
jo
repz
jg
sub
push
xchg
mov
fs
in
push
cmp
fistp
xor
and
or
dec
or
xchg
inc
xor
adc
push
xchg
inc
pusha
adc
dec
cmps
push
adc
and
add
or
mov
lahf
mov
adc
or
lods
xor
pop
sbb
mov
int
jmp
cmp
faddp
inc
xor
or
xlat
xlat
cdq
sbb
cdq
jnp
or
enter
test
iret
and
mov
inc
movsx
out
movs
sar
pop
cmp
push
push
xchg
or
addr16
loopne
imul
fild
rol
push
xor
or
dec
cmps
lods
rol
pop
sub
add
in
and
addr16
add
pop
dec
loopne
pop
addr16
add
ja
popa
and
add
adc
leave
movs
shl
or
lea
je
popf
aas
clc
jg
adc
cmp
add
lock
dec
or
lods
pop
sub
pop
mov
inc
or
sbb
fstsw
sahf
ja
sbb
jns
push
and
test
jmp
xor
cs
stos
jns
xchg
add
scas
loopne
inc
ret
cmp
(bad)
or
pop
daa
call
pop
xor
sub
js
out
cmp
pop
mov
jg
and
add
push
int3
push
pop
add
xor
jbe
call
or
add
shl
sbb
sbb
push
jo
mov
mov
add
mov
(bad)
cmp
jo
jns
pop
or
inc
xchg
daa
jae
jp
mov
enter
pop
outs
push
scas
push
pop
lods
xor
test
inc
sbb
jo
mov
push
loopne
push
mov
xor
xlat
mov
xchg
ret
pop
xor
out
ins
xor
xchg
xchg
jl
jno
fimul
add
test
push
xchg
pop
fidivr
inc
test
rcl
xchg
sub
xchg
jmp
lds
stos
fist
lds
ret
mov
jl
cmp
mov
popa
push
xor
out
fcomp
pop
add
retf
lea
rol
data16
cmp
mov
(bad)
push
xor
xor
pop
mov
jmp
repnz
and
sub
jmp
jg
movs
imul
pop
sahf
test
pusha
cdq
cwde
into
mov
adc
or
(bad)
rol
addr16
aam
adc
enter
popa
nop
and
and
jmp
push
push
xchg
pop
js
lods
add
cmps
add
mov
sub
bound
cmps
dec
das
call
mov
mov
test
mov
inc
pop
xchg
sub
lahf
push
sbb
scas
sbb
scas
mov
and
jo
(bad)
sub
mov
cs
fdiv
in
lahf
mov
pop
mov
sahf
nop
test
jnp
sbb
add
fld
sub
imul
inc
pop
push
add
lds
test
ja
fmul
lods
icebp
push
mov
push
mov
div
dec
and
push
call
call
js
aad
push
add
clc
(bad)
in
and
out
mov
mov
add
jecxz
stos
and
push
clc
mov
into
loopne
sub
lock
pop
sbb
std
mov
jle
mov
mov
rcr
lea
dec
sbb
aad
push
jg
xchg
xchg
call
sbb
lock
sbb
into
adc
mov
lds
das
jb
rcr
mov
jge
xchg
sbb
sub
add
inc
adc
jg
and
add
add
pop
cmp
arpl
ret
test
fadd
add
ds
and
push
mov
ja
addr16
xor
pop
pop
fbld
push
cmp
addr16
shl
(bad)
enter
leave
xor
loop
aam
or
int
popf
push
xor
ret
and
repz
xor
dec
cmp
mov
sbb
mov
fs
test
jo
and
mov
push
enter
scas
mov
cmp
cmp
fiadd
mov
or
inc
sbb
pusha
in
add
ins
push
sbb
pop
inc
popa
and
push
pop
aaa
jo
loop
int3
shr
aaa
push
xor
xor
add
imul
or
cmp
push
ror
xor
fldenv
shl
das
cmp
test
imul
cmp
push
add
in
adc
or
lock
xchg
add
loopne
xchg
push
adc
jge
cs
adc
sbb
movups
mov
fdivr
or
mov
and
cmp
sub
call
xor
pop
or
sbb
or
sub
or
adc
(bad)
mov
or
add
or
inc
adc
mov
idiv
sbb
cmp
inc
jo
mov
lock
push
fs
into
push
add
mov
and
adc
or
ds
xchg
push
fucomp
fld
rcr
jle
mov
xor
push
mov
jmp
shl
or
nop
inc
xor
ins
sbb
rol
dec
into
jmp
sub
xor
mov
out
fsub
mov
pop
pop
int
sbb
add
stc
ja
es
retf
xor
jmp
cmp
je
fild
and
pop
(bad)
fmul
jge
clc
addr16
rol
inc
int3
sub
mov
das
jne
(bad)
loopne
rol
int3
cld
add
pushw
loopne
rol
stos
pusha
jo
mov
mov
cmp
(bad)
jl
ror
out
rol
iret
pop
fadd
and
sub
pushf
adc
xor
and
int3
ins
or
shl
pop
rol
or
into
jne
jle
inc
adc
bsr
call
aaa
js
mov
cmp
jle
cmp
test
jmp
sbb
test
xchg
jae
lods
fsubr
lock
mov
mov
test
cmp
in
cmp
cmp
inc
out
inc
xchg
xor
dec
leave
fiadd
jae
push
mov
push
dec
pop
or
sub
inc
dec
jae
fcompp
imul
stos
jbe
adc
cwde
loop
lea
aaa
adc
dec
test
jmp
cmp
lock
lods
adc
jmp
push
rol
jo
pop
or
cs
in
xchg
lahf
xchg
xor
(bad)
dec
push
xor
add
pusha
pop
ins
or
adc
inc
add
pop
add
arpl
mov
ror
gs
data16
add
jg
int
adc
add
push
xlat
(bad)
in
push
pop
mov
mov
mov
adc
mov
dec
sbb
xchg
movs
je
clc
and
hlt
jb
dec
cld
pop
and
push
lock
push
push
mov
ins
cmp
add
retf
xor
or
dec
jo
test
sbb
inc
fwait
sbb
clc
jne
jmp
push
xor
test
iret
movs
add
lea
push
jmp
xor
shr
cmp
dec
scas
data16
push
aas
xchg
xchg
sub
sub
test
xor
push
movs
xchg
mov
pop
aas
mov
sbb
pop
and
fxch
mov
push
sub
sub
sub
mov
loop
cmp
mov
das
popf
pop
test
imul
mov
ins
ret
cmps
push
sub
cmps
xor
jge
fs
imul
or
mov
mov
dec
push
scas
mov
push
movs
scas
mov
sub
dec
scas
and
mov
xchg
pusha
or
push
test
dec
cmps
dec
dec
loope
mov
xor
mov
das
dec
shr
das
inc
dec
mov
mov
add
ja
mov
cld
sbb
dec
cmp
aad
loop
mov
fwait
jnp
mov
push
add
mov
xor
mov
cmp
divps
jmp
adc
push
adc
dec
xor
xor
lea
(bad)
or
sub
mov
es
or
mov
lea
shr
hlt
and
(bad)
cmp
dec
jne
pop
mov
fld
call
je
push
or
and
popa
aas
loopne
push
fdivr
push
push
dec
jne
ins
and
stos
ins
xor
in
adc
add
and
ds
scas
push
cmp
inc
aam
ins
sar
push
loopne
push
sbb
push
xchg
stc
ror
imul
sbb
in
enter
inc
jl
jl
les
test
xchg
jl
sbb
fcomp
outs
jo
clc
fwait
pop
mov
lods
dec
push
cld
push
or
ins
arpl
pusha
push
mov
sub
xchg
and
push
fdivr
cwde
xchg
outs
rcr
push
jmp
fwait
cwde
and
fwait
sub
test
mov
aam
outs
mov
call
mov
test
fcom
jle
cmp
cmp
mov
mov
stos
jo
ja
(bad)
ret
pop
inc
mov
or
ficom
and
mov
mov
cmp
jg
add
enter
ins
jo
aaa
xor
inc
sbb
mov
adc
call
xchg
stos
jbe
fisub
pop
inc
jnp
dec
jns
cmps
stc
push
pushf
jge
mov
mov
mov
jp
push
pop
pushaw
pop
push
and
int
jl
and
(bad)
(bad)
mov
mov
or
ja
gs
push
push
dec
pop
add
out
inc
add
add
or
jmp
push
dec
bound
arpl
(bad)
(bad)
outs
push
imul
push
jns
je
ins
or
outs
addr16
popa
je
cs
inc
pop
inc
outs
ins
ins
ds
adc
and
xchg
mov
xor
push
sub
add
in
mov
in
in
add
gs
pushw
or
add
xor
adc
fcos
or
popa
jo
arpl
jns
add
sahf
mov
cdq
sub
jb
call
adc
test
in
mov
mov
xor
push
inc
pop
xchg
mov
xor
inc
gs
sahf
jae
fcomp
ins
mov
jae
jmp
mov
mov
inc
cmp
les
jecxz
add
(bad)
nop
jae
fdiv
lock
xchg
popf
repz
clc
jbe
cwde
mov
shl
paddusb
inc
das
adc
jbe
dec
outs
popa
or
cmp
xor
mov
cdq
mov
sbb
rcr
clc
adc
and
lods
or
cmps
pop
rep
scas
pop
sbb
cmp
push
push
sub
popf
and
shl
sbb
mov
shl
inc
(bad)
xlat
ins
xchg
inc
and
cmps
jae
pop
(bad)
mov
mov
add
imul
inc
ins
popa
jae
gs
push
push
adc
xor
and
repnz
cmp
add
pop
mov
sti
jo
shl
or
test
pop
dec
ja
pop
retf
add
sbb
pop
mov
push
push
push
push
and
mov
add
pop
or
mov
mov
xchg
adc
mov
mov
mov
or
dec
sbb
loopne
dec
adc
cmp
ds
or
test
test
push
sbb
push
xor
jo
jno
mov
dec
push
pusha
clc
popa
pop
push
cmp
adc
push
push
arpl
fs
jb
push
mov
test
add
ja
push
xchg
or
xor
test
inc
xor
push
pop
xor
xlat
nop
inc
ins
lods
or
and
(bad)
call
in
lahf
icebp
inc
mov
cmp
cwde
add
ficom
add
xchg
push
jbe
mov
inc
fdiv
jg
add
fld
xor
xor
popa
loope
add
push
add
jmp
lea
je
call
mov
add
mov
adc
mov
movs
fadd
repz
iret
mov
mov
sub
test
push
add
fcmovne
dec
or
arpl
fadd
sub
or
call
add
stos
adc
xchg
xor
adc
inc
add
add
ficom
xor
jmp
sbb
lahf
sbb
ficomp
xchg
jg
in
loopne
imul
mov
fsub
clc
in
mov
inc
or
mov
push
fmul
or
inc
clc
push
sbb
cmp
jge
mov
inc
and
les
mov
push
jp
loopne
jne
dec
xor
bound
xchg
and
sar
add
or
mov
sub
lods
pop
fimul
add
mov
push
push
cmps
inc
sbb
hlt
jl
std
mov
call
je
jge
add
mov
cmps
mov
add
pop
or
inc
imul
ds
std
daa
std
inc
das
xor
xor
cmp
fmul
xor
mov
add
test
mov
je
out
add
(bad)
and
cmps
rol
je
xor
adc
cmp
je
mov
out
ret
sti
div
push
push
mov
push
mov
push
xor
rol
pusha
jo
icebp
scas
call
pusha
xor
in
aad
or
inc
push
push
mov
pop
push
fisubr
adc
iret
pushf
cmp
sbb
dec
nop
ins
jge
jne
pop
push
cmp
lods
and
adc
pop
aad
ret
jl
push
not
jmp
jbe
aam
pop
or
inc
jne
inc
push
ret
call
inc
int3
xor
sbb
push
mov
mov
mov
mov
pop
out
inc
aas
cmp
jg
add
cmps
ins
inc
icebp
and
push
jg
pop
pop
and
inc
test
jg
inc
jmp
mov
not
mov
add
mov
shl
sbb
lea
sahf
neg
das
or
or
push
and
movs
or
xor
pop
fisub
js
lock
movs
mov
call
into
and
xor
push
cmp
cmp
and
inc
xchg
inc
sbb
sbb
push
leave
or
jnp
ficom
mov
inc
ja
xchg
jecxz
xchg
(bad)
cmp
xor
std
or
lea
ret
mov
popf
adc
push
or
sbb
addr16
mov
ins
xor
ja
(bad)
pop
sbb
or
arpl
add
xor
mov
sub
sub
add
adc
in
adc
add
test
add
(bad)
cs
dec
xcrypt-cbc
cmps
adc
dec
es
sub
push
test
mov
cmps
(bad)
je
pop
ja
mov
dec
retf
inc
jns
cmp
je
inc
add
ret
mov
(bad)
repz
mov
xchg
or
cmp
test
stos
adc
inc
or
jae
shl
jp
rol
sub
inc
call
adc
sub
xor
inc
sub
mov
push
js
jnp
jo
inc
push
inc
ficom
pusha
add
ds
or
retf
shl
pop
add
out
in
mov
cmp
jae
push
mov
add
dec
or
and
cmps
adc
jle
sub
adc
adc
mov
dec
call
lods
adc
cmp
rol
ss
sbb
sub
sub
mov
mov
shl
sbb
mov
jno
xor
add
push
add
add
add
in
pop
or
scas
mov
inc
jg
pop
mov
jmp
(bad)
ins
or
test
mov
inc
test
and
pusha
add
es
sbb
sbb
test
jg
nop
popa
push
mov
cmps
dec
hlt
je
add
sub
jb
call
loope
out
and
jge
add
add
jne
jne
pop
or
cmps
daa
loop
add
aad
test
out
xchg
call
ret
out
mov
inc
and
ins
add
bound
jg
test
fsub
loopne
test
ja
xchg
invd
push
dec
adc
scas
push
(bad)
sub
cmp
jmp
les
(bad)
sub
mov
in
jne
push
push
leave
repz
enter
or
mov
pop
cmp
pop
push
mov
aaa
pop
adc
adc
pop
adc
dec
dec
mov
adc
sub
or
dec
or
lahf
mov
cmp
cmp
xchg
mov
pop
(bad)
jl
cmps
test
repz
stos
adc
fmul
ss
or
sbb
cmp
cmp
jmp
popa
jmp
xlat
jne
stos
adc
mov
and
shr
mov
rol
add
and
and
push
stc
sub
add
inc
add
pop
xchg
mov
fimul
imul
scas
jge
scas
push
adc
sbb
stc
scas
mov
push
push
sbb
sbb
ja
cmp
sub
or
stos
scas
or
add
push
jecxz
enter
scas
mov
dec
cmp
mov
test
scas
daa
scas
and
inc
scas
adc
jle
xor
sbb
inc
aad
lods
cs
outs
lea
xchg
or
enter
js
aad
xchg
sbb
fsub
aad
inc
sbb
xchg
add
stos
jns
mov
shr
mov
sbb
xor
imul
or
sbb
sub
adc
and
inc
mov
adc
out
jg
or
das
jb
jle
cmp
sub
movs
mov
or
adc
into
or
outs
imul
sub
adc
test
fistp
inc
out
push
mov
pop
or
push
jb
mov
jno
mul
inc
and
push
outs
inc
je
mov
and
mov
inc
loopne
nop
nop
inc
cmp
fcom
ret
icebp
mov
adc
rcr
pop
cld
mov
sbb
sbb
cmp
pop
jne
in
lods
ficom
mov
cmp
xlat
jne
pop
pop
iret
or
sub
outs
lahf
push
fwait
or
add
test
and
cmps
add
add
scas
pop
jg
cmp
es
jbe
mov
or
mov
or
cmp
mov
mov
jne
xlat
lock
cmp
cmp
popf
ret
test
push
(bad)
mov
inc
mov
mov
jmp
push
ror
jns
inc
sbb
ret
das
cmp
das
mov
xchg
mov
hlt
cmp
das
or
cmp
cmp
mov
adc
out
cmp
(bad)
mov
xor
jne
out
(bad)
das
mov
adc
popa
xchg
cmp
aas
inc
in
pop
push
bound
ins
aas
das
dec
pop
sub
sbb
xor
inc
xor
push
rol
in
mov
cmp
pop
nop
dec
sbb
ret
mov
cli
push
arpl
ret
test
or
inc
or
xor
retf
out
call
bound
inc
mov
or
dec
jl
add
or
inc
ss
xor
mov
xor
push
xor
test
outs
inc
cmp
fcomp
pop
out
sbb
xchg
jns
mov
sbb
push
sbb
xor
out
cs
out
lahf
cmp
data16
stc
out
xor
mov
mov
or
cmp
ror
sbb
inc
sub
cmp
inc
jb
pop
and
imul
int3
out
daa
out
add
(bad)
adc
push
dec
or
fsub
xchg
xor
aad
push
add
mov
mov
mov
jb
dec
cmps
and
sbb
cmp
xor
xchg
mov
daa
and
jl
dec
shl
xchg
pop
mov
mov
inc
mov
sbb
pop
cmp
add
inc
pusha
mov
pop
les
inc
mov
mov
dec
es
out
dec
loopne
mov
iret
ja
les
jo
leave
cmp
mov
mov
iret
fsub
icebp
dec
nop
iret
adc
sub
push
mov
sub
aas
bound
shl
daa
push
and
dec
nop
ja
xchg
jnp
adc
mov
(bad)
es
mov
jmp
(bad)
dec
mov
movs
mov
adc
dec
shr
(bad)
cld
mov
adc
ret
mov
fbstp
(bad)
loop
xchg
cmp
(bad)
add
mov
pop
or
xchg
xor
out
sub
mov
xchg
inc
jo
aaa
popa
lods
adc
sub
dec
popa
pusha
ret
jno
aam
ror
arpl
push
jo
dec
data16
data16
frstor
arpl
fst
dec
int3
call
and
fadd
push
aas
clc
cmp
test
add
(bad)
jge
xor
mov
xchg
retf
xchg
push
sub
jb
dec
lahf
(bad)
jns
pop
mov
xchg
push
and
mov
push
(bad)
(bad)
adc
jb
push
xor
push
lods
push
inc
ja
je
pop
data16
push
in
jno
je
pop
aas
(bad)
push
and
aas
stos
add
mov
addr16
cmp
jge
cmp
nop
push
lea
mov
mov
push
enter
mov
xchg
lock
pusha
jp
sahf
mov
lock
mov
sub
daa
push
sub
fdivrp
test
jl
scas
jo
mov
add
adc
inc
test
or
sbb
jne
fucomip
lsl
adc
cmp
inc
pop
sahf
mov
rcl
adc
push
mov
jmp
jmp
popa
stos
adc
jmp
adc
nop
dec
pusha
je
mov
in
pop
mov
je
lea
push
add
push
cld
or
sub
inc
enter
sbb
push
je
sub
push
push
push
push
xor
int3
sbb
push
or
mov
inc
push
and
cmp
push
adc
sbb
dec
and
adc
xor
push
jg
mov
push
cmp
bound
in
mov
ret
push
cwde
jg
push
sbb
mov
pop
push
pop
inc
repnz
fdivr
dec
inc
sbb
(bad)
fld
adc
in
test
out
or
test
or
or
xor
add
sbb
sub
iret
lock
push
call
push
mov
lock
jmp
push
cmp
pusha
or
inc
jle
daa
and
ret
and
mov
cmp
or
push
rol
je
test
pop
push
clc
xor
inc
in
cmp
in
in
je
and
sahf
imul
ret
fs
dec
in
push
enter
add
mov
mov
inc
xlat
add
mov
pop
ds
je
and
clc
jo
scas
test
push
clc
add
cmp
pusha
cmp
add
add
je
mov
aas
mov
sub
pop
inc
in
rol
push
dec
xor
enter
fadd
xchg
mov
push
ins
pop
dec
sub
pop
jle
cmp
loopne
jge
(bad)
push
inc
push
adc
lods
js
push
ins
inc
pusha
push
jno
add
xor
fwait
enter
sub
push
mov
mov
sbb
add
fs
add
xor
adc
aaa
call
mov
jo
mov
dec
jne
sbb
jecxz
iret
sbb
add
add
cld
jne
or
jl
inc
in
xlat
aas
and
adc
retf
sub
push
mov
ret
jmp
inc
dec
jne
or
pop
pop
lahf
xchg
add
jmp
adc
js
add
sti
shl
ins
stos
sbb
add
sbb
repnz
and
push
daa
mov
sbb
sub
xchg
pop
push
pop
pop
mov
movs
or
sbb
dec
mov
mov
in
xchg
pop
ret
inc
and
lahf
push
das
(bad)
mov
and
pop
mov
out
imul
push
out
das
nop
xchg
push
adc
pop
ins
pop
mov
aam
sbb
pop
add
loope
mov
push
nop
pushf
in
add
retf
dec
push
leave
dec
pop
aam
add
mul
xchg
cmp
or
imul
pusha
fild
ins
cwde
sub
pop
test
fmul
call
popa
in
mov
jg
cmc
adc
loopne
jg
sub
sbb
inc
dec
add
mov
jg
jns
leave
mov
aam
jl
or
add
push
test
jbe
xor
push
sbb
ss
and
add
cmp
jle
hlt
add
xor
ins
jne
inc
add
js
dec
call
xor
push
and
je
addr16
xchg
inc
adc
mov
addr16
test
rol
into
or
cmp
adc
and
in
add
int
add
out
pop
add
mov
add
or
and
jne
or
lea
push
ss
cmp
mov
scas
dec
jne
xor
inc
(bad)
add
rcl
add
jo
fdiv
adc
and
add
mov
cli
shr
push
and
inc
es
or
lods
jo
scas
sbb
scas
add
mov
stos
in
outs
adc
addr16
(bad)
pop
dec
ret
inc
addr16
iret
(bad)
pop
popa
addr16
or
push
cmps
add
push
int3
pop
in
scas
int
mov
pop
pushf
pop
sub
mov
repz
popa
mov
int
and
sub
xor
jb
mov
pop
and
fcom
dec
pop
shl
pop
test
jge
cmps
jp
dec
popf
mov
loope
cmp
or
jl
adc
xor
jb
sbb
pop
stos
dec
ja
rol
pop
cmp
push
xor
pop
popa
outs
mov
cmp
test
mov
and
dec
inc
sbb
sbb
pop
(bad)
rol
add
xor
jae
cmp
xor
add
imul
sbb
test
pop
mov
pop
lods
add
xor
cld
fsub
aad
xor
call
aas
fs
lods
test
les
jne
bound
mov
mov
bound
mov
and
mov
data16
cmps
adc
adc
adc
fisttp
mov
or
out
es
dec
mov
or
pusha
push
out
test
inc
ins
mul
aas
push
neg
out
sub
imul
test
add
mov
push
add
mov
sub
mul
adc
scas
mov
mov
lds
xchg
or
cmp
or
adc
fmul
(bad)
push
pop
daa
scas
mov
cmovae
jno
xchg
push
rcr
les
mov
adc
jg
jae
dec
out
sbb
mov
pop
repz
pop
rol
jmp
dec
push
mov
aas
movs
jmp
push
ror
aas
(bad)
and
or
aas
div
cmp
(bad)
call
aad
imul
retf
sbb
movs
inc
shr
popf
lods
jl
imul
fisttp
lds
cmps
shl
fcom
mov
push
or
pusha
cmps
or
jge
jmp
jg
sub
cs
cs
cmp
xor
cmp
mov
stc
cmps
jbe
sbb
push
mov
(bad)
cmp
sbb
xchg
xor
sbb
sub
mov
adc
jg
cmps
cwde
jno
and
(bad)
push
daa
cmps
cmp
data16
xchg
adc
aad
(bad)
outs
push
xor
add
jb
cmps
loop
add
inc
push
add
js
loop
shl
pop
push
call
pop
fdiv
or
sub
adc
test
pop
jno
or
test
adc
xor
sbb
xor
or
(bad)
lods
pop
out
inc
push
scas
push
pop
pop
imul
rol
inc
xor
mov
icebp
jnp
or
jne
aam
cmp
sub
push
adc
push
pop
bound
xlat
call
inc
gs
pop
jae
pop
adc
sub
mov
aas
outs
push
pop
test
pop
adc
mov
aaa
je
aad
test
push
or
enter
fs
sub
adc
adc
jno
adc
lea
pushf
jae
stos
jno
pop
push
popw
mov
arpl
pop
mov
aam
icebp
mov
cmp
cmp
stc
and
inc
or
dec
pop
sub
dec
jo
xchg
pcmpeqd
adc
movq
stos
push
pop
jbe
retf
sbb
adc
lock
js
test
repz
sbb
push
and
das
jne
xor
mov
push
xor
inc
fisttp
(bad)
loop
js
mov
add
(bad)
lds
movzx
loop
inc
dec
js
cmp
adc
add
mov
cmp
jle
xlat
push
lods
nop
stos
inc
aaa
mov
mov
jb
mov
jbe
or
jle
rol
enter
xchg
jne
movs
sub
outs
lahf
pop
jb
xor
lahf
dec
mov
stos
mov
xchg
and
lahf
jl
stos
cmp
data16
out
test
mov
inc
and
arpl
dec
push
jns
xor
shr
fs
ja
imul
pop
aaa
jns
pusha
and
jge
cld
inc
sub
in
mov
cmps
jb
cs
jmp
jmp
(bad)
fadd
xor
pop
or
jnp
mov
dec
pusha
je
mov
jg
bound
jns
dec
add
or
retf
push
add
sub
mov
out
push
xor
push
je
cmp
jl
push
push
push
int3
push
cmps
fbstp
push
push
or
cs
cmp
and
adc
jo
(bad)
jle
out
dec
adc
xor
(bad)
and
out
mov
or
nop
sti
mov
sub
cld
fnstsw
jg
inc
daa
out
(bad)
push
imul
xlat
iret
mov
fsubr
mov
popf
(bad)
pop
sbb
stos
inc
sbb
in
sbb
mov
fnsave
mov
mov
inc
shl
inc
push
xor
sub
add
sbb
call
ret
loopne
jne
(bad)
or
lock
jmp
jo
popa
cmp
push
sbb
pusha
iret
inc
inc
inc
and
dec
or
cdq
push
pusha
and
jp
pusha
inc
cmps
push
pop
xor
push
pop
sbb
adc
xlat
add
fld
and
add
xchg
dec
ret
lahf
mov
dec
add
dec
ret
dec
jmp
push
cmps
lods
push
add
test
and
and
popa
(bad)
jns
hlt
ror
jmp
ret
push
and
pop
addr16
inc
xor
adc
das
test
mov
dec
das
pusha
nop
jg
cmp
test
adc
ret
sub
das
loope
inc
sbb
in
xor
cmp
nop
xor
add
sbb
jl
adc
xchg
add
xchg
push
adc
jmp
inc
pop
out
cmp
push
jmp
jns
adc
inc
xchg
inc
or
leave
add
inc
xor
dec
movs
inc
dec
xor
icebp
das
xchg
mov
jg
dec
sub
dec
and
lock
(bad)
pop
cmp
dec
add
or
xchg
je
ret
dec
fisubr
sbb
add
adc
mov
mov
repz
jnp
cmovo
adc
stos
dec
clc
call
int3
add
jmp
mov
or
clc
or
pop
pop
scas
daa
or
sbb
enter
mov
daa
jbe
pushf
daa
xchg
in
call
cli
jg
or
jae
fs
jne
test
je
outs
cmps
sub
push
fild
xchg
or
jl
push
xchg
loopne
adc
dec
pusha
dec
ja
xchg
mov
pop
xchg
and
or
mov
xchg
xchg
add
dec
ret
rcl
xchg
test
and
das
lahf
(bad)
cmp
je
and
dec
mov
push
push
sub
xor
push
push
mov
dec
pushf
sbb
or
add
nop
adc
lahf
gs
adc
push
lahf
cmp
xor
aas
jb
add
test
lahf
push
add
sbb
sbb
dec
sbb
enter
add
pop
pop
mov
adc
mov
(bad)
and
mov
pop
and
cmp
pop
and
fild
xor
adc
in
das
loop
(bad)
(bad)
je
push
mov
mov
shl
fs
es
ror
add
dec
add
adc
daa
in
or
or
mov
sbb
nop
cmps
cvtps2pd
jle
or
pop
sub
call
pop
daa
xor
(bad)
adc
loop
pushf
loope
cwde
daa
mov
xchg
lds
push
jecxz
inc
mov
xor
and
mov
or
icebp
jo
sahf
daa
inc
add
push
mov
fld
and
daa
mov
daa
das
adc
sub
js
or
shl
sub
call
mov
pop
lea
mov
lahf
repnz
cs
or
mov
pop
(bad)
dec
adc
pop
out
sbb
cmp
pop
and
pop
cs
push
sbb
popa
loope
ss
rcl
sub
fsubr
sub
jnp
lea
add
adc
mov
jbe
push
add
rol
jne
movs
(bad)
aaa
(bad)
test
adc
mov
adc
push
test
xchg
ds
mov
ret
jl
(bad)
and
nop
sbb
mov
fucom
shl
pop
pop
and
(bad)
nop
hlt
je
repnz
dec
jb
lods
nop
les
jp
fnstcw
ror
sub
and
test
dec
add
rcr
mov
adc
add
dec
mov
outs
retf
pop
jo
mov
mov
test
add
cmp
xchg
pusha
popf
inc
push
shl
pop
inc
pop
loop
inc
repnz
pop
cmp
cwde
cmp
pusha
les
and
cmp
pop
jmp
cmp
ror
imul
lock
or
add
or
cmp
loope
mov
or
aam
push
aaa
and
movs
rcl
jb
cmps
sub
add
xor
adc
shl
punpckhdq
and
pop
and
jmp
sub
movs
outs
out
dec
or
add
cmp
cmp
nop
or
push
fdiv
(bad)
pushf
daa
xchg
xchg
xchg
sub
adc
in
mov
xchg
pop
in
xchg
xchg
rcr
adc
xchg
js
cmp
cdq
movs
mov
mov
push
or
and
sub
dec
inc
(bad)
rcr
aad
pop
add
and
mov
sub
adc
adc
or
stos
or
add
cmps
mov
jmp
xchg
fcom
and
or
sbb
(bad)
push
mov
pop
lea
cmps
das
mov
sub
xchg
cmps
inc
push
adc
aad
and
or
xor
sbb
out
pop
add
push
pop
popf
cmp
mov
popf
cli
push
xchg
adc
push
in
add
add
mov
sub
leave
dec
adc
add
mov
movs
or
int3
addr16
fsub
gs
popf
in
inc
neg
adc
test
mov
add
sbb
add
mul
add
scas
xchg
sbb
ret
sahf
sub
orps
imul
adc
adc
div
or
neg
pop
and
test
popf
dec
das
mov
daa
mov
in
and
mov
or
lods
neg
idiv
shl
shl
(bad)
or
push
or
add
test
mov
jnp
rol
addr16
mov
push
neg
cmp
mov
jo
cmp
xchg
mov
stos
push
xchg
add
push
(bad)
cld
(bad)
cmps
ret
or
imul
mov
mov
mov
ret
xor
sbb
or
repz
(bad)
add
mov
and
je
inc
ror
(bad)
xchg
movs
inc
or
add
dec
stos
ror
cwde
lds
xor
cmp
xor
push
inc
stos
cmps
xlat
stos
and
sti
mov
mov
mov
and
nop
mov
mov
push
push
stos
add
sub
jge
cmp
and
sub
pop
jmp
pop
xchg
sbb
icebp
cmps
and
jl
add
pop
push
cmps
fs
les
fsub
and
mov
jno
loopne
mov
inc
mov
movs
cmp
sbb
jg
loope
pop
push
push
nop
inc
push
or
adc
jge
outs
mov
add
pop
adc
test
dec
push
mov
push
inc
jmp
mov
stos
test
dec
bound
leave
inc
or
(bad)
nop
pushf
push
pushf
test
pop
js
add
test
(bad)
pop
stos
lods
pop
in
add
aaa
push
cmps
dec
lods
aam
pop
pop
js
cmp
dec
jo
or
dec
stos
xor
pop
inc
add
dec
cmp
jbe
mov
dec
nop
add
mov
cmp
inc
dec
jo
les
dec
cmp
cmp
aaa
push
pop
test
or
inc
xor
in
mov
sub
lods
outs
icebp
mov
mov
outs
pop
sbb
pop
inc
call
ficomp
pop
test
arpl
pop
sar
push
cmp
cmovo
scas
sbb
or
repz
fisubr
das
xchg
inc
push
and
scas
les
cmp
mov
scas
jl
fnstsw
push
shl
mov
pop
dec
add
mov
js
aaa
or
pop
clc
mov
(bad)
loopne
ffreep
js
add
cmp
mov
call
jo
add
cmp
rol
mov
rol
mov
inc
shl
(bad)
lods
mov
adc
outs
mov
pop
jb
sub
pop
ret
cmps
clc
les
inc
push
pop
fsub
ret
push
lods
cmps
sbb
cmps
iret
pop
aaa
inc
add
pop
pop
sbb
nop
pop
icebp
mov
test
movs
sbb
pop
push
mov
inc
jbe
(bad)
out
rol
dec
dec
jb
cmp
push
shl
out
mov
mov
fist
add
push
xor
mov
(bad)
mov
lds
pushf
(bad)
ffreep
and
mov
movs
add
push
adc
inc
repnz
push
es
movs
enter
add
movs
sbb
add
sub
adc
fcom
mov
xor
rcr
enter
mov
adc
inc
retf
popa
mov
and
stos
or
lods
aaa
sbb
lods
pop
fistp
leave
inc
add
popa
adc
mov
xor
and
inc
mov
fistp
jecxz
ins
mov
out
add
mov
or
idiv
and
jge
in
arpl
idiv
(bad)
data16
(bad)
mov
lock
mov
add
sbb
and
int3
(bad)
into
adc
(bad)
cmp
dec
adc
mov
lods
or
mov
lds
lock
ja
cmps
xor
jb
rcr
pusha
add
mov
adc
and
add
xor
fistp
xchg
data16
mov
or
sar
in
add
ins
inc
add
adc
aaa
fs
jb
and
push
adc
fnsave
clc
or
sar
pop
jl
xchg
xchg
shl
loope
loop
nop
pop
dec
add
sbb
call
and
pop
pop
shl
dec
inc
or
and
xchg
adc
daa
sub
push
sbb
adc
imul
(bad)
cmps
inc
xor
or
cmp
dec
movs
jg
add
add
add
cdq
inc
outs
mov
mov
pop
outs
loopne
fs
xchg
xchg
stos
aaa
daa
xchg
adc
xor
pusha
(bad)
loop
daa
call
jg
and
add
je
adc
dec
imul
(bad)
jmp
popa
cs
inc
pop
inc
outs
ins
ins
outs
outs
cs
push
popa
imul
ins
cs
(bad)
mov
addr16
inc
jbe
outs
je
outs
xor
jb
js
(bad)
ds
jb
popa
jns
push
and
fstsw
mov
dec
imul
cs
ins
arpl
jae
add
call
out
cmovnp
jo
inc
pop
sub
call
(bad)
shl
inc
gs
jne
je
add
jo
mov
or
or
aas
dec
outs
or
mov
jle
sub
add
push
push
and
mov
sti
pop
push
dec
bound
adc
jp
xchg
add
loopne
push
inc
cmp
pop
ror
push
add
pop
(bad)
mov
mov
cmp
sbb
add
mov
sub
inc
pop
inc
push
sbb
pop
shr
fcmovu
dec
ja
pop
fsubr
cli
push
jmp
cmp
repz
mov
jns
iret
repz
je
ds
repnz
add
mov
adc
fcom
mov
adc
into
push
add
add
inc
mov
addr16
push
sub
addr16
ins
ja
dec
outs
sub
add
or
xor
or
out
add
icebp
jbe
loopne
or
jb
push
test
xchg
js
adc
and
int3
sbb
sbb
sbb
int
mov
jge
shl
jnp
retf
push
or
popa
ins
imul
xor
retf
scas
add
stos
test
inc
rcr
add
(bad)
push
fild
dec
inc
outs
jne
dec
popa
bound
add
imul
jno
and
out
push
sub
add
les
mov
inc
std
mov
and
fstp
push
das
push
fwait
das
mov
sub
sub
das
mov
inc
push
add
dec
jmp
add
test
dec
add
(bad)
cmp
push
rcl
inc
and
mov
cld
sub
je
jb
add
inc
jb
sbb
pop
sub
adc
or
or
and
add
add
push
je
xor
xchg
bound
sub
lods
mov
test
mov
mov
repnz
jl
sbb
sbb
xchg
mov
pop
cld
pop
inc
jne
dec
(bad)
cmps
add
ins
fiadd
jl
dec
div
add
push
and
hlt
mov
adc
cld
pushf
data16
in
imul
xor
push
push
fwait
daa
pop
out
push
sub
in
push
add
cdq
adc
xor
ins
xlat
loopne
mov
lods
jo
pusha
cwde
(bad)
mov
ins
(bad)
dec
sub
sbb
xor
sub
sub
loopne
add
add
jmp
leave
lar
cmp
jnp
add
arpl
dec
ins
mov
push
leave
leave
ins
mov
dec
mov
fs
lds
jecxz
mov
out
adc
dec
jge
jns
jb
dec
mov
out
mov
shl
sbb
push
and
dec
mov
adc
aaa
popa
daa
daa
daa
pop
xchg
fstp
mov
punpcklwd
xchg
pop
shr
ss
sahf
fcmovbe
mov
push
push
(bad)
das
and
add
pusha
cmp
fs
int3
pop
int
or
xchg
cmp
(bad)
or
add
adc
call
aam
jmp
daa
stos
pop
inc
mov
jl
test
inc
in
dec
jp
popf
xchg
cmovns
adc
add
addr16
sbb
or
sub
repnz
xor
add
fs
shl
sbb
add
fs
mov
dec
jp
push
popa
ins
jne
xor
shl
inc
test
sub
rol
mov
jp
xor
cmp
or
out
cdq
ja
call
lock
dec
test
movs
pop
or
push
adc
cmc
loopne
pop
push
enter
inc
and
out
xchg
mov
mov
fdiv
or
js
adc
and
call
push
jge
and
add
arpl
sub
mov
inc
or
or
dec
jae
imul
push
test
iret
or
dec
imul
popa
jno
jno
movs
shl
inc
nop
mov
adc
lea
lds
inc
add
aam
or
pop
xor
inc
mov
jecxz
pop
jmp
jg
pop
inc
js
jo
mov
lea
out
add
sbb
sbb
add
jl
mov
sbb
push
mov
or
ror
lock
(bad)
or
(bad)
xchg
mov
adc
gs
xor
add
dec
sbb
add
popa
pop
and
inc
popa
inc
popa
pop
lds
push
sbb
jb
es
sub
dec
aaa
jae
je
cmps
adc
call
ss
cmp
stos
aaa
add
dec
popw
dec
imul
sub
jp
sbb
or
daa
test
dec
jns
retf
js
push
outs
sbb
fild
push
or
inc
(bad)
push
fild
xchg
push
pop
dec
ins
or
xor
mov
dec
or
and
ret
bound
arpl
xlat
mov
les
xchg
mov
test
or
icebp
jmp
gs
ret
adc
test
or
in
adc
add
xchg
sub
inc
ret
inc
or
inc
mov
in
cmp
or
arpl
scas
adc
shl
push
or
mov
or
xor
inc
or
jl
xlat
or
add
sbb
jmp
das
dec
arpl
add
test
sub
test
mov
imul
repz
push
mov
imul
fadd
aam
pop
push
mov
aas
inc
hlt
add
pop
ret
or
sbb
cmp
sub
or
xor
adc
add
out
or
into
sub
add
(bad)
(bad)
out
daa
sub
push
lahf
xchg
in
mov
imul
pop
mov
stos
jne
xchg
mov
jp
xlat
xchg
int3
jbe
push
imul
aas
and
retf
inc
sub
pusha
test
pop
les
add
aas
lea
movs
mov
push
sbb
xor
fwait
sbb
mov
pop
xor
mov
add
cmps
jo
shl
out
paddusw
mov
js
push
movs
es
das
in
lea
inc
push
in
outs
pop
jmp
jnp
paddb
adc
cmp
pop
xor
dec
push
pusha
xor
xor
pop
sbb
shl
and
sbb
pop
push
push
ins
inc
aas
(bad)
and
pop
daa
leave
lods
or
sub
jl
xlat
fidivr
rcl
in
add
add
pop
icebp
ja
pop
outs
out
loopne
adc
or
das
inc
repz
cmps
mov
ja
mov
(bad)
mov
push
inc
push
xlat
jne
adc
je
mov
push
mov
xlat
pop
bound
imul
mov
imul
xchg
bswap
add
xlat
sub
cmp
push
(bad)
imul
stos
push
xchg
xchg
mov
xchg
fisttp
adc
xchg
xchg
(bad)
rcr
imul
in
leave
mov
adc
inc
xor
in
xchg
(bad)
adc
push
sbb
jb
repnz
push
cmp
cmp
pushf
pushf
pushf
mov
fdivr
dec
dec
inc
sahf
and
pop
mov
dec
sub
xlat
pop
push
pop
mov
(bad)
leave
punpckhdq
lods
xchg
stos
fwait
add
mov
(bad)
cmp
jno
shr
test
or
cmp
sub
arpl
and
lds
cmp
les
dec
in
add
pop
and
cmp
(bad)
ins
push
and
bound
lds
dec
test
pop
ja
int
add
ja
sub
(bad)
sub
xor
xor
or
sub
push
adc
(bad)
sbb
or
sub
push
xchg
and
ja
pop
imul
inc
adc
je
mov
xor
inc
lods
add
jae
sbb
xor
xchg
inc
and
or
dec
sbb
push
(bad)
adc
pusha
inc
sar
xchg
xchg
dec
pop
and
pusha
das
(bad)
pop
or
bound
les
cmp
add
push
pop
lds
imul
adc
sbb
or
ret
xor
xchg
les
(bad)
push
and
push
lods
std
mov
or
or
xor
lds
or
movs
cwde
adc
sub
inc
sub
mov
(bad)
sbb
in
dec
cmp
xchg
xor
cmp
or
loop
xor
pop
pop
fwait
mov
xor
adc
nop
cmps
mov
int3
or
push
les
cld
enter
adc
inc
clc
inc
inc
lods
fdivr
mov
arpl
pop
or
prefetch
ins
test
xchg
cmp
jae
jg
jo
push
aaa
jb
pop
aas
lea
test
ja
sub
stos
jmp
add
push
and
jl
sub
cmc
outs
cli
jo
aam
ins
dec
bound
adc
mov
rol
pop
sbb
adc
push
mov
add
jae
or
jno
out
jbe
add
and
(bad)
push
scas
pop
push
add
add
add
pusha
das
jle
jg
pop
jmp
ror
(bad)
mov
inc
test
dec
stos
loope
add
xchg
out
xor
retf
add
mov
add
or
or
mov
and
mov
shr
clc
pusha
(bad)
xlat
inc
adc
inc
ja
sub
fmul
inc
test
movs
sub
xlat
dec
dec
fild
mov
mov
es
das
jne
out
std
push
outs
cwde
or
xor
jge
test
nop
jmp
cld
cwde
xor
pop
retf
mov
mov
xor
or
mov
sbb
inc
pop
pop
sbb
add
inc
pop
addr16
dec
lods
push
adc
arpl
fadd
lods
loopne
loopne
cmp
add
ficomp
lods
push
ins
(bad)
(bad)
push
loop
in
in
xor
push
xchg
mov
aam
mov
cmps
push
cmp
mov
push
or
xchg
inc
pop
loopne
mov
xchg
push
xchg
adc
imul
mov
inc
ret
xchg
pop
pop
lds
or
mov
pop
xchg
fistp
or
aaa
pmulhuw
leave
leave
outs
stos
out
or
repnz
jne
adc
xor
push
jmp
or
cmp
sbb
add
dec
sahf
pushf
pushf
pushf
xchg
(bad)
repz
dec
dec
dec
inc
ds
clc
daa
daa
and
mulps
cmp
adc
cmp
fild
jbe
mov
cmp
shr
inc
mov
mov
cmp
xor
dec
dec
or
or
outs
dec
mov
sub
jno
or
sbb
cmp
and
push
mov
or
mov
mov
mov
loope
and
ins
push
or
cmc
push
sub
outs
mov
xor
mov
test
ja
movs
outs
lea
pusha
jae
cmp
leave
push
add
mov
or
sub
mov
cmp
das
leave
fwait
shr
fcomp
sub
mov
mov
xor
iret
sbb
jno
xchg
mov
mov
or
test
mov
loopne
xor
add
sbb
xchg
push
mov
mov
push
ret
mov
sbb
je
icebp
scas
mov
mov
mov
and
adc
jg
pop
or
jae
pop
mov
dec
push
sti
push
pop
mov
sub
xchg
mov
loop
stos
(bad)
std
mov
sub
or
pop
xor
adc
pop
push
sbb
pop
sub
adc
xor
and
mov
xchg
dec
div
or
xor
mov
sbb
pop
out
push
sar
jno
bound
mov
adc
mov
xor
in
mov
and
push
sbb
es
ret
xor
sbb
les
sub
shl
push
xchg
xchg
out
and
or
ret
mov
jl
cmp
fcmovnb
inc
loopne
outs
jl
jecxz
mov
fistp
shl
mov
adc
loopne
loope
adc
outs
or
sbb
vmwrite
and
add
dec
outs
dec
test
pop
jmp
or
add
add
add
mov
xor
inc
xor
xor
rol
ror
jg
and
add
add
rcr
jmp
outs
mov
pop
adc
xor
cmp
out
stos
xchg
add
push
mov
int3
imul
mov
pop
push
ja
mov
adc
mov
add
add
mov
add
inc
add
mov
inc
mov
pop
outs
push
add
inc
or
add
add
pusha
add
jg
cmc
test
sti
mov
dec
push
ja
in
mov
push
mov
push
push
and
daa
dec
cmps
add
ret
aam
neg
push
cld
cmp
test
and
xor
adc
mov
lock
mov
sbb
pusha
test
test
ja
push
pop
pop
imul
mov
shr
or
int3
push
mov
jno
xor
mov
pop
and
rcl
scas
push
push
cmp
shl
pushf
push
or
jp
mov
adc
sbb
xor
sbb
adc
sbb
sub
mov
aas
idiv
cdq
in
xor
push
nop
add
sar
push
ds
add
test
imul
fstp
pop
pop
and
dec
cmps
cmc
inc
and
daa
daa
daa
pushf
rcr
xchg
push
popf
fidiv
and
leave
leave
leave
jle
mul
fs
jo
fnsave
xor
sub
mov
out
and
je
add
out
adc
push
add
push
jmp
rol
es
arpl
imul
sub
rol
xchg
dec
or
add
and
dec
popf
cmp
call
add
inc
add
sbb
jecxz
mov
inc
shl
inc
add
and
or
arpl
or
adc
xor
cdq
dec
push
sub
mov
jmp
adc
arpl
jmp
jns
xchg
sbb
icebp
adc
xchg
das
mov
ror
fwait
gs
add
lea
add
arpl
xor
and
push
dec
ins
iret
or
add
pushf
dec
arpl
and
nop
inc
bound
xor
cmps
movs
xor
jae
sbb
push
push
lea
sbb
xchg
retf
mov
or
mov
sbb
or
sar
xchg
sbb
sub
dec
jg
push
sub
or
pusha
arpl
stos
mov
adc
dec
mov
add
add
mov
arpl
push
pusha
push
std
arpl
add
push
sub
xor
and
adc
add
jns
sbb
add
pop
sub
arpl
add
xor
(bad)
mov
fadd
shr
add
arpl
mov
sbb
mov
cmp
push
or
push
xor
push
arpl
pop
jns
xchg
js
(bad)
pop
pop
jmp
inc
sbb
test
mov
fs
mov
imul
or
mov
bound
push
mov
inc
inc
add
aaa
push
or
sti
cmp
add
adc
shr
pop
sbb
sbb
mov
mov
add
movs
dec
xchg
sub
sub
pusha
mov
xlat
(bad)
in
shr
into
add
fldcw
nop
xlat
fidiv
mov
cld
xor
or
cmc
pop
xlat
das
mov
push
imul
mov
pop
sbb
mov
pop
mov
cdq
push
add
pop
mov
lods
add
std
pop
mov
mov
fnsave
add
lock
lea
inc
ret
cmps
ja
dec
scas
xor
(bad)
mov
sub
out
dec
dec
das
in
push
adc
aas
das
push
add
push
jmp
add
mov
jl
add
stos
pop
pop
rcl
mov
push
mov
fwait
movs
pusha
pop
outs
test
jo
shl
int
out
pusha
xchg
ror
outs
enter
push
mov
ins
xchg
jb
pusha
xchg
mov
push
in
adc
mov
adc
es
sub
xchg
cld
push
mov
rcl
loopne
pop
mov
(bad)
sti
push
imul
inc
mov
add
mov
or
or
cmp
in
push
daa
int3
cmp
mov
sub
mov
mov
xor
imul
xchg
push
push
in
xor
xor
inc
lods
jnp
cmp
icebp
pop
mul
out
es
xor
mov
xor
sahf
pushf
pushf
xchg
in
xor
dec
dec
dec
mov
or
daa
daa
(bad)
ret
adc
pop
mov
leave
enter
imul
sub
dec
jae
ss
in
repz
cmp
jns
fucomp
pop
es
pop
fmul
push
inc
hlt
lods
cmps
push
or
mov
pop
add
and
pushf
jno
push
cmc
fs
dec
or
mov
adc
mov
daa
imul
sbb
fbstp
push
sub
and
adc
and
bound
adc
mov
retf
test
push
ins
fbld
es
int3
addr16
test
ja
or
fbstp
mov
out
mov
pop
fist
or
xchg
sbb
fwait
(bad)
sub
bound
fild
dec
adc
or
push
sbb
dec
adc
je
fbstp
inc
movs
inc
lds
inc
add
mov
js
fbld
fild
and
retf
fbld
push
nop
add
jae
les
add
or
fmul
xchg
cmc
mov
lea
bound
xchg
(bad)
bound
dec
xchg
pop
cmp
and
and
xchg
xchg
push
add
jae
sub
push
les
adc
and
adc
adc
loopne
cmc
xchg
and
mov
sub
dec
xchg
adc
xchg
bound
dec
ds
sbb
sbb
imul
add
jno
inc
mov
pop
xor
lea
ficom
int3
mov
fsubr
cmp
xor
adc
sbb
mov
mov
daa
jecxz
mov
lea
pop
adc
dec
sti
daa
fs
inc
pusha
cmp
inc
push
xor
and
and
inc
popf
or
add
push
mov
nop
arpl
mov
ret
add
jmp
adc
cmp
jo
rcr
fild
in
or
add
cs
outs
outs
mov
dec
mov
jl
cli
pop
add
popw
and
push
adc
and
add
scas
push
push
dec
lods
pop
ja
push
paddd
outs
pop
mov
(bad)
mov
push
ss
or
pusha
fs
sbb
sahf
addr16
ret
call
xchg
int
loopne
cmp
sub
stos
inc
(bad)
aam
jecxz
sub
jnp
push
add
shr
sub
test
cld
cmp
inc
mov
push
mov
(bad)
hlt
push
retf
push
imul
and
sbb
adc
xchg
mov
sbb
xor
add
fld
pop
inc
das
pop
push
int3
push
mov
outs
or
fidiv
pusha
jg
mov
mov
psrld
push
push
mov
clc
jle
push
add
mov
in
add
xchg
adc
jnp
jnp
push
and
pop
and
retf
addr16
shl
add
jnp
pop
add
dec
(bad)
aad
dec
mov
push
xchg
add
push
loopne
ins
mov
jnp
jge
xor
cmp
push
sub
sub
xor
pop
mov
push
jns
std
fld
popa
jae
gs
push
push
les
adc
sbb
ins
dec
ja
xlat
and
sub
inc
shl
inc
push
in
sub
xchg
mov
xor
dec
outs
popa
sub
push
ins
xor
fnsave
pushf
movsx
and
lock
lahf
adc
push
xor
push
cmp
mov
nop
push
or
enter
inc
mov
adc
sub
push
mov
mov
dec
bound
adc
pop
dec
mov
fwait
ds
mov
mov
xor
mov
inc
loopne
fst
dec
add
xor
pushf
sbb
lock
lds
ins
das
push
scas
shr
int3
outs
pop
mov
pop
inc
nop
out
stos
dec
push
fimul
sub
fmul
push
push
into
call
push
test
push
and
jo
stos
inc
lods
loopne
add
std
and
rol
or
inc
int
mov
leave
push
add
inc
push
and
std
leave
push
inc
shl
add
pop
and
iret
(bad)
lds
jl
mov
daa
adc
add
push
mov
push
addr16
push
or
adc
outs
int3
jp
add
das
inc
cld
add
loope
inc
clc
faddp
gs
and
mov
fcom
lock
add
add
push
push
shl
pop
adc
sub
sbb
jecxz
mov
aaa
cwde
out
icebp
addr16
inc
or
pusha
push
pop
ins
leave
sub
pop
ja
loopne
pusha
push
mov
stc
movs
add
shr
dec
mov
ss
lods
jmp
movs
ja
xchg
add
cld
into
push
mov
das
xchg
dec
cmps
nop
loopne
call
mov
test
scas
sbb
push
adc
cmps
js
xor
movaps
cmps
and
ret
cmps
add
adc
inc
xor
cmps
jno
pop
les
daa
mov
jecxz
dec
(bad)
ja
push
out
sbb
push
fsub
jp
mov
js
les
inc
mov
sub
leave
enter
mov
in
leave
test
sbb
in
lods
fisttp
xor
jb
push
mov
adc
cmp
sbb
xchg
int
out
cmp
pushf
je
fsubr
dec
into
pop
sti
push
xchg
cmp
shl
lock
cmps
dec
jmp
push
push
dec
es
in
jo
xchg
push
das
fnstsw
shl
push
cmc
retf
or
xor
pop
in
jno
jmp
adc
lds
ins
mov
push
add
add
sbb
xor
dec
add
ror
stc
ins
in
dec
cwde
sbb
cdq
xor
or
push
jne
(bad)
shr
ja
lods
add
jae
and
push
inc
loope
in
rol
xchg
or
mov
(bad)
in
xchg
and
call
and
push
inc
gs
inc
or
push
(bad)
in
or
mov
ins
iret
pop
mov
sbb
jno
rol
(bad)
in
inc
xor
push
in
mov
in
sbb
mov
jae
add
in
inc
(bad)
in
mov
and
push
mov
or
pusha
push
add
pop
or
sbb
mov
add
push
sar
xchg
inc
xor
sbb
(bad)
push
sbb
jbe
jo
jg
das
out
nop
push
inc
das
pop
pusha
mov
xor
pop
int
inc
cmp
inc
mov
inc
sbb
inc
imul
int3
inc
inc
jae
add
add
xor
add
xor
inc
inc
pop
adc
push
inc
jns
sbb
mov
rcl
inc
xchg
nop
sbb
dec
inc
sbb
mov
xor
mov
or
rcr
(bad)
aad
pop
int3
inc
mov
scas
in
sbb
inc
nop
mov
xor
mov
js
mov
sbb
or
pop
xor
or
jmp
inc
mov
mov
int
sub
dec
or
xor
add
test
test
es
je
sub
pop
stc
movs
adc
scas
mov
adc
push
or
adc
adc
movs
add
push
adc
daa
aas
pop
jp
mov
sub
(bad)
sub
xor
daa
xlat
in
scas
and
(bad)
mov
mov
pop
loopne
dec
in
pop
pop
push
mov
test
or
cdq
aam
add
inc
pop
add
fist
xchg
stos
and
pop
aaa
test
ja
push
or
lods
mov
sbb
aas
das
pop
push
jmp
rol
cvttps2pi
ret
out
push
mov
out
pop
cmps
xor
lods
add
mov
dec
outs
mov
ror
pop
(bad)
lock
sbb
add
or
aam
ds
in
or
and
mov
shl
addr16
fcom
push
mov
pop
sub
or
pop
push
sbb
dec
mov
movs
sbb
movs
or
push
push
dec
int
aam
push
ins
push
add
cs
inc
pop
das
push
mov
ret
call
dec
je
jmp
cmp
rdtsc
pop
and
push
hlt
je
pavgb
add
out
mov
push
inc
pop
das
fwait
pop
movups
xlat
mov
push
xchg
shr
and
push
cmpxchg
jmp
ret
sbb
pop
xor
sub
punpckhwd
push
int3
or
and
data16
data16
movzx
or
test
call
popf
xchg
pop
pop
push
or
lahf
jne
push
ret
add
xchg
xchg
xchg
(bad)
ins
test
in
leave
enter
ror
in
in
xor
call
sbb
cmp
sbb
arpl
les
fs
jl
inc
sahf
pushf
leave
add
sbb
adc
test
aas
pmaxsw
lods
xor
pop
mov
inc
adc
punpckhdq
mov
add
sub
fsubr
or
(bad)
jno
dec
pop
cmp
daa
imul
adc
xchg
inc
push
jb
mov
xor
xor
rol
(bad)
ins
adc
gs
ins
(bad)
mov
adc
(bad)
retf
pop
rol
ja
add
inc
(bad)
jae
push
jecxz
cmc
dec
out
pop
inc
lods
(bad)
xchg
or
xchg
(bad)
xchg
lea
imul
fwait
gs
or
(bad)
(bad)
mov
and
(bad)
ins
movs
mov
mov
or
mov
inc
add
xor
push
les
mov
mov
sbb
bound
mov
cmp
adc
mov
xchg
fstp
lods
(bad)
les
les
lds
dec
outs
mov
mov
lods
inc
inc
fld
mov
ins
imul
or
mov
lods
lds
and
(bad)
and
outs
jge
nop
pop
and
mov
and
jns
imul
(bad)
and
sbb
outs
or
or
mov
adc
repz
out
outs
sbb
outs
or
mov
sar
lock
bound
xchg
push
imul
cmc
adc
and
and
inc
test
js
int3
repz
clc
mov
lods
rcl
test
jl
adc
adc
sbb
mov
jecxz
mov
lea
pop
push
les
(bad)
adc
packuswb
pusha
jae
push
(bad)
mov
sbb
stc
cld
push
push
cs
(bad)
aas
daa
xor
(bad)
or
cmovge
les
pop
popf
or
js
add
pop
pop
push
inc
push
add
xor
inc
lods
loop
fwait
mov
push
dec
xor
mov
bound
pop
mov
xor
ss
pop
pop
sbb
jo
icebp
sar
add
push
add
xor
sahf
inc
mov
ins
outs
push
scas
pop
mov
add
fwait
pop
into
pop
shr
push
lds
imul
pop
adc
mov
lds
ins
add
mov
adc
sub
pmullw
fcomp
int
mov
add
std
add
test
movs
lds
fdivr
add
push
cmovg
pop
stos
or
lea
add
(bad)
ins
out
push
pop
loope
fstp
aad
push
scas
cmp
or
es
pop
xchg
popf
push
push
movs
cli
dec
(bad)
fisubr
aas
jo
push
push
mov
in
push
add
cmp
or
fsub
or
and
fisub
and
adc
xor
pusha
jo
aaa
push
in
mov
pop
add
mov
push
ins
add
adc
mov
mov
pop
loopne
jl
ror
xchg
pop
pop
push
xchg
and
pop
out
fstp
js
(bad)
push
cmp
xchg
cmc
das
add
jb
cmp
wbinvd
sub
(bad)
mov
lds
mov
test
add
push
test
pop
cmp
add
inc
bound
les
pop
sub
and
pop
and
add
pop
or
push
pop
loopne
add
pop
xchg
mov
lods
(bad)
test
mov
loopne
add
push
pop
(bad)
out
add
push
sub
daa
daa
daa
mov
(bad)
jnp
sti
xchg
xchg
xchg
daa
inc
jne
loope
mov
enter
mov
dec
dec
lock
aam
xchg
xchg
daa
sbb
fs
leave
enter
call
in
leave
jnp
add
ss
in
dec
test
aas
jnp
mov
pop
test
mov
stos
fmul
or
push
shl
and
add
imul
push
cmps
dec
in
cmp
test
mov
and
movs
push
mov
aas
daa
adc
add
popa
dec
dec
and
movs
shl
outs
mov
xchg
and
or
add
xchg
or
ins
movs
pusha
xor
adc
ja
add
cmp
sub
cmc
cdq
add
loopne
out
add
ficom
inc
movs
xchg
das
xor
lea
pusha
inc
movs
adc
pusha
lea
or
sbb
ins
iret
pop
mov
sbb
add
adc
add
add
movs
inc
jmp
and
movs
lea
push
ja
add
adc
mov
pop
mov
scas
or
inc
add
rcr
add
rol
shl
xchg
pusha
add
(bad)
rcl
mov
inc
dec
jg
jg
push
in
add
out
out
or
and
std
pop
stos
mov
dec
test
adc
std
sbb
std
imul
add
jae
pusha
push
add
std
add
push
sub
adc
std
jge
push
dec
add
inc
pop
add
std
jns
adc
add
pop
mov
adc
pop
dec
std
add
mov
shl
adc
xor
adc
sub
add
mov
mov
in
mov
std
dec
push
gs
inc
xor
sbb
in
cmp
fiadd
mov
loopne
sub
jecxz
add
jl
enter
push
fdivp
add
jge
and
add
shl
(bad)
aam
adc
add
and
inc
outs
sub
push
or
adc
cmp
out
add
add
push
or
add
pop
outs
shl
fdivr
sub
bound
mov
(bad)
push
push
add
mov
mov
cmp
add
pop
xchg
das
mov
push
push
jmp
cmps
loopne
scas
cmc
cs
cmps
inc
jg
(bad)
sub
mov
mov
sbb
imul
loope
jge
add
or
or
and
and
inc
and
cli
push
mov
sub
aad
lds
iret
sub
push
aaa
aam
xor
daa
cmps
push
xor
je
xchg
es
das
loope
cs
loopne
dec
add
lock
data16
adc
aam
mov
adc
mov
push
or
pop
outs
push
imul
movs
xor
loopne
popf
or
ja
push
cmp
add
pop
daa
inc
test
push
int
add
imul
das
mov
pop
cmp
push
loopne
or
push
fsub
das
inc
test
lods
clc
jg
xlat
mov
xor
mov
retf
idiv
push
push
push
mul
sbb
xor
mov
imul
xchg
aad
idiv
div
xor
bswap
(bad)
mov
imul
jecxz
jne
imul
dec
outs
cmp
pop
xchg
jg
dec
sbb
xchg
xchg
xchg
daa
adc
enter
mov
in
in
fisub
mov
repnz
in
mov
jb
xor
stc
cmp
sbb
lea
call
cmp
div
cmp
pop
stc
inc
push
mov
fimul
push
mov
add
mov
dec
in
imul
cmp
mov
cmp
data16
adc
jno
push
nop
mov
xchg
dec
daa
scas
dec
mov
inc
xor
les
adc
xchg
das
scas
sbb
mov
dec
add
retf
pusha
and
dec
scas
ins
mov
xor
push
cmp
jmp
xor
jl
mov
adc
imul
jae
xor
mov
les
out
xchg
adc
jp
or
xchg
das
leave
push
inc
and
fwait
gs
sbb
bound
bound
scas
mov
mov
inc
iret
scas
add
jno
add
scas
hlt
xor
mov
ss
adc
push
fwait
scas
lea
add
push
inc
fwait
cdq
jae
lods
push
or
adc
and
xchg
push
or
xchg
sub
nop
sub
imul
sub
push
les
and
add
mov
add
lods
jae
add
lods
push
cdq
sub
xor
push
jge
rcl
push
inc
add
mov
(bad)
push
jns
add
sub
push
xchg
dec
bound
lods
push
or
bound
jecxz
dec
push
adc
cmp
add
adc
pop
les
push
mov
fmul
(bad)
push
sub
inc
pop
adc
mov
add
jno
xchg
pop
xor
int3
mov
(bad)
pop
(bad)
mov
cdq
or
aad
cmp
lock
or
inc
cmps
(bad)
cmp
sub
scas
sbb
call
test
shl
call
inc
data16
adc
nop
sbb
daa
cmp
add
jg
shl
mov
add
inc
and
hlt
jmp
adc
clc
and
push
nop
push
pop
push
gs
mov
add
jbe
loope
xor
push
add
xor
xchg
nop
fucomp
shr
mov
or
push
out
push
je
(bad)
inc
jle
jne
mov
div
and
movs
cmps
sub
xchg
xor
js
pushf
gs
pop
and
xor
(bad)
adc
xchg
xchg
(bad)
addr16
push
(bad)
and
jo
or
test
xchg
add
pop
inc
and
cmp
ins
inc
jge
sahf
or
dec
push
imul
fild
lahf
pop
aad
fsub
adc
imul
aaa
loop
mov
mov
dec
add
shr
movs
inc
mov
sbb
outs
test
mov
fdivr
xchg
cmp
jb
adc
in
orps
hlt
fcomp
inc
lods
mov
mov
addr16
outs
xchg
adc
shl
retf
add
mov
push
jne
gs
jo
rcl
inc
or
inc
scas
pop
aad
xor
sbb
loopne
std
out
test
adc
push
jge
push
push
leave
ds
popa
add
and
push
pop
lods
bound
imul
push
cwde
cdq
pop
mov
push
sbb
pusha
test
call
fild
in
xor
lock
sub
or
xchg
cmp
add
push
pop
fcom
out
lock
push
(bad)
cmp
or
lea
adc
sbb
lea
mov
daa
or
daa
push
loopne
add
ret
push
sub
cwde
imul
sbb
mov
mov
fldcw
adc
add
pop
and
jo
push
xor
jns
pop
and
push
js
fsubp
add
cs
test
add
add
mov
fnstenv
inc
add
mov
add
add
xchg
sub
push
adc
ja
push
add
adc
ja
fsub
inc
pop
std
cmp
fild
adc
and
pusha
rcl
push
(bad)
movs
push
shl
out
mov
sub
dec
fwait
out
dec
push
dec
ret
inc
shl
or
outs
xor
jb
and
add
adc
pusha
frstor
push
icebp
sar
cs
in
sbb
pushf
push
push
add
fwait
pop
mov
stos
push
pop
je
cmp
add
pop
dec
sbb
xor
call
mov
mov
pop
fsubr
cmp
pop
cmp
jo
cmp
sub
fs
sbb
add
sbb
jno
mov
lock
pop
xchg
das
mov
push
js
mov
mov
cld
sub
push
sbb
push
push
lahf
pop
pop
ret
mov
orps
nop
sub
push
pop
add
jno
sbb
adc
sbb
pop
aam
lds
add
stos
push
mov
pop
jmp
push
jge
pop
push
jnp
mov
and
stos
add
js
adc
add
add
lds
mov
xor
repnz
inc
cmp
sub
mov
or
scas
cmps
pushf
out
sbb
mov
and
cmps
push
cmps
fcomp
jbe
movs
jmp
push
pusha
push
add
repz
cmp
into
in
pop
pop
mov
sbb
loopne
cmps
daa
mov
pushf
in
pusha
ins
xor
jp
aaa
cmp
imul
ins
les
pop
lds
pop
sar
sub
mov
mov
mov
or
xchg
cdq
cmp
dec
pop
mov
add
call
sub
add
xchg
movs
addr16
mov
add
pop
mov
push
inc
jle
cmp
pusha
(bad)
nop
pop
mov
pop
out
mov
push
pop
pop
js
movs
ror
push
das
icebp
sar
push
mov
pusha
mov
add
add
add
sub
adc
iret
add
xchg
and
push
add
std
inc
mov
iret
mov
fst
and
and
xchg
(bad)
adc
xchg
jmp
pop
xor
add
push
mul
cmps
idiv
fcom
push
in
sbb
push
data16
jle
pop
pop
push
and
lds
stos
add
jns
fnstcw
mov
fs
fucomp
mov
push
hlt
add
mov
push
daa
sar
je
adc
xchg
pop
daa
cmp
sub
shl
push
sub
(bad)
add
(bad)
mov
xchg
push
push
push
jnp
mov
jae
adc
mov
icebp
iret
shl
inc
pop
add
push
add
stos
(bad)
cmps
mov
lods
pop
fs
or
mov
push
pusha
cld
inc
pop
mov
(bad)
mov
xchg
stos
stos
jbe
or
jcxz
jo
cmp
cdq
out
push
and
mov
push
cmps
or
add
or
mov
add
mov
or
std
mov
and
add
jnp
clc
add
fld
lock
mov
pop
push
add
add
scas
sar
femms
pushf
sub
cmps
pop
lods
ss
push
adc
or
and
sub
nop
mov
mov
push
add
mov
ss
in
mov
in
adc
push
pushf
push
and
add
scas
pop
adc
daa
mov
paddusb
sahf
inc
inc
js
push
dec
push
inc
pushf
sahf
sbb
xor
nop
(bad)
cmp
push
jnp
jnp
les
aaa
sub
rol
cmp
loopne
push
jnp
out
rol
xchg
jnp
xchg
call
jnp
pop
add
mov
je
sbb
mov
ret
pop
mov
into
push
(bad)
inc
call
xchg
jg
mov
push
adc
xchg
es
xlat
lock
push
or
push
push
xchg
inc
add
push
inc
or
fadd
mov
movs
xor
loop
mov
push
mov
sbb
mov
sar
adc
mov
pop
pop
sub
loope
push
aas
jecxz
cmp
pusha
lock
adc
das
test
inc
cmp
inc
ror
push
inc
or
aaa
mov
(bad)
push
fimul
sub
lock
sub
xor
popa
mov
jo
push
imul
push
fcomip
fiadd
xor
push
mov
(bad)
push
mov
mov
adc
add
mov
fistp
aas
jo
pop
into
mov
aam
sub
mov
mov
loopne
scas
mov
rol
xchg
sub
addr16
in
shr
xchg
dec
mov
dec
add
sbb
call
pop
fld
push
pop
add
dec
fwait
sbb
add
pop
fsubr
adc
push
mov
push
sbb
dec
pop
fiadd
mov
sub
loopne
(bad)
or
dec
xor
lock
or
fs
sub
inc
xchg
sbb
loopne
pop
and
push
jae
add
pop
or
shl
mov
loopne
push
mov
idiv
ror
adc
adc
add
popa
jnp
xor
mov
cs
sub
inc
xor
jb
outs
popa
adc
ja
out
mov
push
xor
push
loopne
or
cs
mov
out
mov
push
enter
add
mov
loopne
daa
jmp
jo
imul
xchg
pop
ja
cdq
mov
xor
aam
sbb
xor
mov
mov
mov
add
dec
mov
fst
shl
sbb
add
pop
and
mov
mov
push
mov
pop
fadd
push
pop
inc
(bad)
rcr
hlt
sub
push
push
pop
xlat
lock
push
mov
xor
movs
or
add
push
and
pop
add
addr16
dec
mov
movs
xor
loop
dec
int
rol
pop
sbb
mov
sar
arpl
aas
pop
pop
sub
fild
add
add
inc
or
fst
jo
pop
js
xor
dec
inc
and
shl
mov
fisttp
into
repz
mov
fstp
jo
fistp
push
push
cmp
push
mov
mov
dec
ret
add
cmp
test
ud0
sub
jne
add
sbb
mov
outs
je
sub
addr16
sbb
mov
xchg
loopne
xchg
aas
add
mov
push
sub
cmp
mov
pop
je
xchg
xchg
les
add
mov
push
xor
jl
jg
div
dec
pushf
loopne
push
hlt
sar
int
push
mov
psubusb
ror
aaa
into
dec
xor
pop
ficom
shl
test
pop
adc
push
cmp
pop
add
add
jmp
movs
push
cmp
cmp
push
stos
sbb
pop
in
ja
add
mov
(bad)
rcl
in
icebp
movs
push
mov
cmp
push
ins
das
sub
mov
add
add
das
sbb
pop
das
inc
ins
popa
jae
sub
sar
dec
(bad)
outs
push
push
pop
cmp
ja
cs
push
(bad)
push
js
add
enter
lock
daa
push
(bad)
ja
outs
pop
mov
pmaxub
add
ja
cdq
mov
xor
add
mov
add
add
mov
push
mov
sbb
mov
nop
stc
push
sbb
cmp
daa
out
pop
and
mov
xchg
add
addr16
or
(bad)
push
pop
push
pop
pop
and
sub
cwde
fiadd
scas
(bad)
pop
jl
push
jecxz
add
sbb
pop
into
pop
push
and
sub
xor
add
mov
xor
mov
and
dec
mov
add
jmp
or
pop
and
aad
ins
aaa
cmp
xor
(bad)
ret
ror
cmp
cmp
outs
or
sub
outs
sbb
sbb
add
loope
int3
push
inc
add
repz
cmps
mov
mov
mov
pop
into
movs
iret
shr
mov
fstp
iret
int3
jge
pop
int
loopne
add
xlat
fucomp
ins
into
pop
pusha
add
test
mov
pop
out
and
clc
bound
jne
add
xchg
sbb
sub
loop
xchg
loopne
loop
cmp
xchg
mov
push
dec
mov
fcomp
add
aas
ins
xchg
mov
iret
ja
mov
pop
pop
ss
push
mov
sti
jo
loopne
or
push
cmp
ds
(bad)
js
fisttp
or
add
pop
into
aas
xor
xor
ins
rol
div
add
sub
rol
add
add
test
adc
test
fld
inc
add
sbb
mov
or
mov
icebp
rol
push
pusha
xchg
xchg
lea
arpl
je
inc
pop
fbld
(bad)
ja
in
push
rcr
inc
bound
mov
push
test
(bad)
mov
or
pop
pusha
(bad)
cmp
out
push
push
pop
pop
jl
outs
pusha
popa
inc
rcr
or
push
mov
addr16
xchg
repnz
scas
mov
push
std
push
jae
inc
test
push
inc
push
xor
or
loope
mov
bound
imul
mov
mov
inc
jae
rcr
add
sbb
inc
xor
pop
jno
cmps
mov
movs
or
fs
mov
test
daa
jmp
test
or
add
push
ror
xchg
and
push
cmp
in
popa
dec
push
dec
dec
inc
out
jbe
add
call
fldcw
(bad)
sub
mov
ror
jo
or
sub
dec
push
or
add
jae
jb
imul
lods
inc
pop
dec
jb
inc
rcr
(bad)
fsubr
push
loope
add
dec
add
aad
mov
sub
add
xchg
xor
jmp
sub
pushf
test
sbb
jle
push
iret
repz
sub
aam
push
add
mov
add
xor
hlt
shl
retf
adc
pop
ja
mov
push
and
push
fadd
dec
mov
jns
cmp
or
cmp
cmp
mov
or
push
int3
test
adc
cmp
sub
pop
jbe
or
sbb
sbb
cmp
push
ja
xchg
sub
mov
and
sub
loope
loope
inc
xor
push
pop
push
mov
xchg
enter
jl
xor
ds
and
and
aam
nop
ret
(bad)
out
(bad)
jg
idiv
inc
add
add
nop
push
dec
pop
add
fstp
call
mov
pop
ret
mov
shr
push
push
jo
mov
mov
lea
mov
mov
mov
ja
sti
and
leave
mov
push
mov
and
mov
adc
pop
lods
jmp
pop
pop
cmp
ret
btc
fst
es
mov
mov
mov
test
je
mov
das
sbb
cmp
push
or
and
lock
into
test
push
push
shl
mov
call
jnp
imul
ror
je
shr
xchg
sbb
daa
sub
mov
push
push
mov
das
add
imul
ja
adc
add
in
(bad)
push
push
(bad)
movs
push
mov
sbb
pop
push
adc
and
xchg
fdivr
mov
pop
ret
dec
ret
jmp
add
retf
add
jne
mov
test
call
adc
add
dec
lock
add
push
pop
inc
cld
setae
jmp
xchg
xchg
xchg
xchg
in
out
out
rcl
rcl
aam
xchg
xchg
xchg
aad
xlat
fcom
fcmovu
fcom
(bad)
rcl
ret
(bad)
std
pop
cmp
lds
aas
push
dec
jne
in
cmp
pop
or
mov
mov
clc
mov
jbe
sbb
inc
sub
cmp
xchg
je
pusha
push
hlt
outs
clc
xor
cli
sub
outs
cmps
jg
hlt
mov
dec
jne
mov
sbb
xor
add
adc
fucomi
xchg
mov
mov
push
cdq
in
mov
mov
and
shl
mov
add
rcr
mov
cdq
(bad)
fdivr
cmps
cmp
aam
mov
aam
sar
dec
sub
int3
mov
rsqrtps
mov
sar
in
leave
sti
adc
loopne
fdivr
repnz
aam
call
cmps
mov
enter
bound
push
les
sar
sub
mov
imul
or
and
mov
not
sar
mov
mov
xor
mov
inc
cdq
mov
lods
mov
adc
mov
in
stos
push
adc
imul
cmp
adc
adc
imul
pop
adc
mov
int
jge
push
jmp
les
es
cmc
daa
les
mov
clc
pop
pusha
mov
pop
pop
pop
mov
sbb
add
mov
jg
gs
add
daa
bound
add
ss
push
into
jecxz
and
jbe
pop
inc
fmul
pop
paddsb
dec
jmp
out
push
push
push
pusha
push
lods
(bad)
mov
push
push
add
outs
sub
les
xlat
jl
adc
adc
push
add
ins
fild
push
cmp
or
push
and
mov
jbe
mov
ins
jnp
dec
jle
push
push
push
mov
loopne
jo
imul
in
hlt
cmps
push
in
dec
es
xor
inc
push
xor
xlat
ins
mov
pusha
xor
aam
push
fadd
mov
sub
shr
ss
fisubr
mov
push
dec
inc
push
(bad)
call
dec
push
and
inc
push
cld
or
mov
push
and
inc
pop
pop
pop
xchg
push
ins
fcomi
mov
out
push
ror
push
call
data16
in
cs
fs
mov
push
test
fsubr
mov
lahf
lods
pop
sub
sbb
rcr
jo
ds
dec
jnp
sub
loopne
jbe
push
cmp
mul
loopne
data16
cmp
inc
bound
xor
js
push
add
repnz
sbb
push
popa
outs
gs
pop
dec
gs
mov
pop
jnp
and
adc
and
gs
nop
adc
jne
je
fild
dec
mov
pop
or
add
mov
inc
outs
je
outs
ins
les
or
sbb
lods
enter
gs
lahf
aad
je
ins
addr16
push
jb
push
sti
fistp
and
adc
mov
gs
addr16
gs
fbstp
ss
outs
ja
ins
push
fsub
add
dec
inc
outs
pop
push
imul
and
sub
adc
imul
lods
sbb
adc
imul
xor
or
aam
mov
ins
bound
vmwrite
aaa
clc
add
cld
ud2
xor
test
sbb
adc
or
dec
ins
(bad)
mov
dec
inc
outs
or
add
mov
sub
pop
xor
pop
mov
jae
popa
imul
push
arpl
std
inc
rol
jmp
sbb
add
jae
sbb
push
xor
fwait
jge
add
inc
xor
cs
pop
icebp
push
add
push
outs
imul
dec
or
in
movs
push
psrlw
int
repz
outs
shl
cmp
stc
ds
fs
pop
add
jmp
lock
mov
cs
pop
and
and
inc
sub
cmp
inc
inc
aas
or
mov
jae
jl
inc
(bad)
push
push
loopne
pop
sub
adc
pop
cmp
push
inc
inc
imul
mov
enter
xor
jbe
in
jg
pop
mov
fist
cmp
adc
xlat
sub
enter
cmp
ss
adc
add
popf
cmp
mov
ins
adc
iret
sbb
and
inc
(bad)
popa
jecxz
shl
mov
aaa
in
jmp
gs
xchg
mov
rcr
or
pop
shl
cwde
jmp
push
push
sub
add
sbb
loope
int
lods
and
ins
and
lods
dec
adc
ins
inc
cmp
iret
xchg
sub
pop
dec
outs
add
or
sub
icebp
mov
sbb
pop
pushf
adc
push
iret
mov
or
outs
pop
mov
inc
hlt
xchg
sahf
dec
inc
shl
in
adc
adc
dec
inc
pop
or
dec
out
(bad)
and
rcl
out
xchg
xchg
xchg
daa
daa
fcomp
out
cld
xchg
push
xchg
gs
jo
adc
in
(bad)
int3
xor
nop
mov
mov
mov
push
mov
cwde
std
push
cmp
je
sbb
ror
pop
pop
xor
sbb
push
add
mov
sub
or
sub
bound
out
enter
stos
inc
enter
cmp
push
mov
xlat
xor
fld
lds
mov
jno
scas
rcl
add
call
or
inc
stc
mov
inc
xchg
lahf
mov
sbb
test
ins
inc
repz
test
enter
outs
popf
sbb
push
add
push
call
jo
xchg
pop
jmp
pop
bound
push
outs
or
daa
xlat
push
mov
mov
je
add
jmp
neg
inc
ret
or
ja
cs
push
mov
and
call
adc
xor
ret
jg
lea
call
add
iret
(bad)
(bad)
cmp
xor
adc
add
inc
xor
ds
add
inc
fidivr
add
aas
test
jmp
add
iret
repz
cmp
je
and
jl
out
fistp
mov
lods
jmp
xor
inc
dec
xor
cmps
jbe
jmp
mov
sahf
push
scas
mov
jo
mov
or
aas
or
lock
cmp
and
pmaddwd
xchg
in
push
xor
sbb
or
or
jo
dec
div
cmp
loopne
int
xchg
push
sub
xchg
les
xlat
dec
js
pop
daa
pop
jg
sbb
cwde
or
or
pop
popa
sub
fwait
dec
sub
out
sub
jne
lea
push
add
in
fwait
sbb
adc
dec
fldln2
push
test
mov
push
fadd
addr16
fmul
cld
es
test
(bad)
in
mov
aam
aam
add
cmp
lods
dec
rol
pop
in
in
and
test
stc
sub
push
inc
enter
cli
call
jae
xchg
dec
test
lods
les
shl
lods
pop
and
dec
in
and
lods
pop
js
jae
lods
hlt
push
nop
cld
ror
push
xchg
mov
and
fwait
pop
mov
loop
push
lods
stos
test
jbe
out
ins
pop
mov
xchg
push
sahf
loopne
fs
mov
sti
adc
cli
sbb
dec
ficom
adc
(bad)
enter
dec
int3
rcr
fmul
dec
dec
loopne
mov
inc
mov
stos
out
xor
cmp
xor
lock
ins
out
jae
mov
outs
mov
dec
out
push
loopne
inc
add
dec
into
inc
push
push
push
dec
mov
fadd
dec
dec
dec
pop
ret
cmps
adc
aaa
in
rcr
or
test
das
pusha
push
mov
cmp
inc
inc
pop
mov
out
push
repnz
or
xchg
push
jbe
sbb
mov
and
out
pop
mov
mov
ja
push
sbb
xchg
mov
aaa
adc
push
iret
jmp
jb
push
out
jmp
push
loopne
dec
pop
or
inc
add
ficomp
inc
ss
cmp
data16
dec
sub
jb
xchg
pop
push
or
or
adc
cdq
cs
xchg
or
pop
xchg
pusha
aaa
xor
sbb
mov
add
pop
adc
and
mov
out
sbb
xchg
cmp
sbb
xchg
adc
xchg
add
mov
mov
sbb
fsubp
cmp
iret
adc
or
cs
adc
sub
xor
shl
xor
add
outs
(bad)
outs
add
xor
cmp
es
int3
or
cs
dec
cs
add
out
pop
sbb
cs
dec
pop
enter
add
add
dec
sbb
dec
add
out
sub
push
xchg
inc
cwde
xor
out
aas
xchg
pop
adc
aaa
jns
xchg
ror
push
sub
sbb
xchg
call
shl
pushf
jmp
mov
lock
sbb
test
daa
jl
test
je
mov
or
and
int
jg
movzx
cmp
jne
adc
sub
add
jmp
mov
or
lock
push
push
mov
mov
add
jge
mov
mov
sar
xlat
adc
je
neg
lock
mov
mov
jo
pop
loopne
fld1
fsub
adc
fwait
cmp
jge
add
mov
sbb
scas
ins
jo
adc
lock
jne
dec
push
int3
pushf
mov
cmp
pop
add
sbb
int3
cmp
mov
add
pop
and
pop
repz
rol
rcr
cmps
push
les
xlat
and
mov
push
shr
mov
and
dec
jmp
mov
adc
lock
jb
mov
push
stos
mov
inc
les
sub
mov
push
retf
sub
sar
cdq
xor
sub
and
cs
sub
cwde
movs
inc
dec
rol
sbb
and
shl
mov
push
lods
jmp
mov
adc
loopne
dec
jne
mov
sub
dec
jnp
push
fmul
push
add
faddp
in
(bad)
or
test
add
inc
add
sbb
repnz
ins
inc
and
add
inc
add
add
dec
inc
test
xor
inc
hlt
push
aam
adc
js
cld
and
data16
retf
mov
jecxz
and
mov
push
mov
cmp
(bad)
adc
out
dec
mov
fist
and
mov
pop
inc
mov
dec
ins
mov
retf
xchg
fwait
or
daa
push
mov
cmp
ss
je
lahf
cmp
sbb
cwde
xchg
daa
add
adc
cwde
rcl
fiadd
test
xor
sbb
ret
dec
inc
outs
dec
pop
sbb
jnp
mov
inc
jl
push
pop
lods
xor
xor
fdivr
sbb
pop
popa
pop
and
lock
cmps
xchg
ret
inc
push
or
mov
xor
fistp
test
jl
inc
xor
cmp
test
aad
movs
stos
and
adc
test
jne
xchg
add
aad
jmp
cmp
scas
movs
sti
sub
xor
add
stc
cld
fsub
sbb
cmp
mov
add
xchg
add
add
in
sti
test
imul
dec
cmp
xlat
cs
mov
or
lds
dec
push
pop
mov
add
adc
ins
test
adc
ret
pop
jmp
clc
add
(bad)
adc
rol
ins
gs
popa
pslld
push
inc
cli
xor
jp
fsubr
and
push
mov
cmp
adc
and
sub
pop
jg
pop
outs
(bad)
sub
arpl
or
adc
sbb
in
or
movs
je
jae
xchg
jbe
enter
push
outs
push
ror
imul
inc
add
rcr
outs
dec
jne
arpl
adc
push
rol
add
mov
jb
inc
jae
inc
popa
jb
test
or
retf
lock
ins
ins
jns
retf
and
ja
sub
fwait
std
add
push
jo
or
dec
mov
mov
and
inc
cmp
loop
push
mov
sub
add
sub
push
push
mov
nop
mov
cs
pop
mov
jg
add
or
sahf
add
pop
imul
clc
outs
jmp
push
push
push
dec
dec
xor
mov
stos
cmps
cmp
add
add
mov
mov
add
lds
sbb
cmp
loop
xor
jecxz
ret
arpl
icebp
in
shl
ins
xor
sub
adc
ins
aaa
ud2
das
jo
and
and
mov
fs
sub
mov
xor
mov
arpl
sub
dec
inc
cmp
ins
adc
push
push
aaa
pop
fs
and
imul
cs
xchg
aam
cs
inc
outs
cs
inc
push
jns
xchg
push
xchg
in
ins
or
hlt
or
add
xchg
and
inc
cmp
vmovss
adc
stc
into
mov
inc
jns
je
sub
jp
loopne
xor
push
outs
jb
jl
pop
ret
dec
inc
call
or
test
pop
or
cli
jb
addr16
fnstenv
pushf
aaa
jbe
mov
ins
mov
add
or
jo
adc
jnp
(bad)
in
push
sbb
inc
mov
sub
fadd
pop
cmp
mov
fsubp
sbb
cmp
loopne
retf
mov
outs
xor
adc
adc
push
jne
jns
mov
aam
or
sub
push
push
pop
sub
jle
inc
outs
js
mov
add
push
in
add
sbb
mov
retf
ret
xor
dec
or
sbb
fwait
rcr
(bad)
cmp
inc
push
sbb
push
and
xor
cmp
vdivpd
sbb
ins
fs
xor
cmps
mov
sar
fst
sub
aam
cs
adc
mov
pusha
inc
lds
mov
leave
movaps
xchg
cmp
in
leave
rcl
add
mov
in
add
dec
inc
mov
adc
pop
cwde
mov
movlps
ds
or
push
cmp
sbb
stos
mov
fcom
cmp
or
add
and
mov
push
fs
cmp
es
or
fsubr
aas
pushf
add
add
cmp
sub
popf
add
outs
int3
out
ret
push
mov
outs
pop
inc
jno
nop
or
or
es
inc
imul
push
push
fcomi
and
sbb
inc
js
sub
iret
add
syscall
xchg
bound
sub
cmp
outs
push
xchg
bound
rol
es
or
lahf
dec
inc
or
jo
(bad)
stc
dec
mov
int
or
stos
ins
xchg
push
push
xchg
movs
sbb
push
or
push
sar
mov
pushf
and
pop
adc
and
mov
cdq
pop
mov
stc
(bad)
add
xor
outs
arpl
adc
push
dec
inc
(bad)
cmp
inc
push
test
ror
mov
mov
aad
xchg
inc
xor
sbb
loop
test
lock
add
dec
dec
inc
js
jmp
mov
int
cmps
test
jae
inc
fs
mov
pop
pop
cmp
or
pop
xor
dec
push
or
lods
cli
dec
dec
dec
bound
je
popa
loop
leave
jge
sub
add
sub
xchg
cmp
popf
pop
pop
or
inc
add
pop
pusha
sbb
add
push
add
pop
mov
and
je
mov
cdq
(bad)
outs
inc
jae
imul
jbe
ret
pop
push
ds
addr16
xor
add
push
aaa
sbb
sub
data16
xchg
ds
add
loopne
out
cmp
into
loopne
or
add
mov
or
inc
pop
imul
xor
adc
mov
sbb
or
int3
int3
push
jbe
jbe
add
out
add
add
lahf
add
xor
or
push
adc
or
pushf
fldenv
push
pop
data16
xor
sar
or
mov
dec
fidiv
not
push
and
or
push
pop
cmp
(bad)
mov
add
sahf
xchg
xchg
es
sbb
ret
add
and
cs
(bad)
add
sbb
push
adc
inc
mov
ret
loop
fsubr
mov
adc
push
data16
inc
lahf
push
jmp
push
cmp
test
xlat
sbb
xchg
add
add
pusha
jb
adc
jmp
mov
sub
ss
cmp
inc
fnstcw
adc
push
pop
js
(bad)
cld
setae
leave
retf
xchg
xchg
retf
int3
int
xchg
xchg
xchg
xchg
iret
mov
mov
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
mov
add
cmp
fiadd
std
pop
int3
call
mov
arpl
push
ss
xor
add
int
pop
ret
jb
jb
sub
cmp
push
fs
sub
dec
push
cmp
cmp
adc
or
jl
sub
push
sbb
or
push
mov
cmc
mov
cmp
mov
xchg
mov
ja
cmp
arpl
and
pop
or
add
add
int3
push
aas
popa
adc
les
clts
or
rol
test
jg
out
mov
xchg
lock
add
fmul
sub
(bad)
inc
icebp
xor
push
in
pop
pop
jg
rol
pshufw
inc
daa
push
push
inc
add
fisub
mov
add
sbb
cs
push
xor
jg
iret
popa
mov
add
dec
jne
das
fadd
inc
daa
fxch
ja
fadd
pop
pop
dec
(bad)
retf
cmp
loop
xchg
arpl
les
hlt
test
sub
movs
xor
sbb
or
xchg
neg
cmp
inc
cmp
movs
push
test
add
mov
call
pop
xchg
cmp
add
mov
nop
in
mov
or
xchg
adc
pusha
sbb
xchg
mov
mov
mov
pusha
or
mov
mov
mov
rep
adc
mov
adc
mov
lods
mov
xchg
mov
cmp
xchg
mov
in
add
in
bound
mov
push
pop
jmp
cmp
ins
sbb
je
dec
pop
repnz
cld
jne
(bad)
pop
repnz
cmps
je
sbb
mov
mov
and
push
cmp
clc
adc
outs
mov
jle
enter
fs
(bad)
call
sti
add
fs
or
lods
hlt
jmp
sbb
mov
aas
jge
dec
dec
jnp
mov
test
mov
jl
mov
movzx
mov
imul
cmps
adc
xchg
mov
jbe
add
fbld
gs
cmp
in
add
add
call
mov
pop
cmps
jmp
cdq
sub
jo
or
int3
repz
aas
pop
call
lock
std
mov
movs
mov
icebp
fdivr
sbb
pop
out
test
je
pushf
pop
lods
push
ret
xchg
or
test
test
fdivr
loopne
(bad)
fnstsw
dec
jne
mov
test
in
sti
adc
adc
mov
mov
push
inc
push
xor
dec
sti
xor
push
jbe
call
pushf
mov
mov
jnp
pop
add
jmp
adc
mov
movs
cwde
cwde
mov
pop
enter
fisttp
test
(bad)
add
push
sbb
lock
xchg
or
jno
rol
cmp
pop
aad
ins
pop
pop
nop
nop
cmp
mov
add
mov
pop
cmp
nop
xchg
and
and
push
dec
ss
mov
mov
xchg
xchg
div
dec
mov
mov
mov
sar
pop
mov
and
rcl
call
xlat
jmp
daa
bound
retf
push
mov
cmps
xlat
push
and
or
inc
add
mov
enter
or
cmp
mov
push
cmp
shl
sbb
popa
stos
iret
movs
sbb
pop
jbe
inc
jae
daa
shl
push
bound
test
jb
clc
jo
int3
fld
xchg
jl
xor
pop
adc
or
inc
adc
mov
fcomp
xor
push
xor
lock
inc
mov
fdiv
sbb
test
mov
imul
popa
adc
and
je
hlt
mov
cmp
xchg
js
mov
mov
inc
pop
add
hlt
retf
cs
add
add
or
dec
pop
les
jecxz
add
mov
or
loopne
pop
mov
add
je
dec
js
pop
stos
mov
fnsave
in
ror
jns
test
lock
in
dec
lock
sub
or
in
add
mov
xor
pop
ror
loope
nop
push
pop
pusha
and
fist
pop
fwait
dec
xor
adc
ins
xor
or
clc
adc
nop
jmp
xor
lock
loop
xor
cwde
inc
mov
pop
mov
ror
sub
test
mov
je
les
jae
sbb
fild
in
lahf
push
mov
gs
push
addr16
push
push
data16
scas
or
mov
aaa
or
and
ja
ds
popa
sbb
sahf
jo
inc
jg
inc
imul
test
mov
adc
and
test
push
call
test
pushw
dec
dec
jle
sbb
cmp
idiv
xor
cmp
jb
data16
sub
cs
pusha
push
data16
xchg
or
or
push
inc
or
add
sbb
ss
dec
and
or
jb
addr16
inc
mov
mov
and
(bad)
cmps
adc
mov
or
mov
loopne
inc
mov
adc
dec
or
add
aaa
adc
cs
mov
mov
mov
aas
push
and
adc
out
das
mov
pop
push
sub
addr16
outs
or
mov
das
scas
pusha
mov
das
scas
cdq
or
dec
mov
sbb
jae
push
add
outs
add
push
inc
pop
es
push
mov
jnp
xor
xchg
jle
mov
sub
add
xor
nop
mov
xor
call
jnp
or
push
xchg
and
add
or
pop
out
(bad)
movs
cmp
pop
adc
cwde
hlt
inc
dec
aaa
xor
cld
mov
and
jns
pop
mov
xor
pop
mov
aam
add
jl
ds
lock
lea
mov
cmp
pop
jle
and
es
cmp
mov
push
cli
pop
dec
ss
cli
test
jl
aam
inc
loopne
xor
xor
or
push
xor
mov
inc
xor
in
ds
pop
sub
push
aas
loopne
inc
adc
mov
and
fadd
push
cmp
adc
cdq
in
(bad)
sar
push
mov
lock
adc
push
inc
add
add
shl
lock
popf
sub
rcr
cwde
outs
cmp
sbb
mov
lods
jb
mov
xadd
mov
push
sbb
xchg
lods
(bad)
in
sub
or
or
mov
and
mov
mov
out
mov
lahf
push
and
bound
fwait
ss
fcomp
enter
sbb
dec
add
adc
and
mov
scas
jns
sub
leave
mov
iret
and
xor
fstp
rcl
add
hlt
(bad)
imul
jb
aas
shl
and
or
push
sbb
push
stos
adc
mov
cmp
shl
mov
mov
sub
push
ds
movs
sub
mov
sub
jo
or
mov
xlat
fistp
dec
aam
cmp
pop
sbb
adc
or
mov
loopne
fisubr
adc
je
nop
sbb
sbb
enter
mov
push
add
jo
inc
or
test
fistp
xchg
mov
pop
cwde
std
pop
adc
sahf
in
(bad)
mov
jl
and
cmps
pop
mov
and
xor
test
nop
lahf
dec
adc
or
adc
clc
jne
jno
aaa
push
adc
mov
push
mov
outs
fisttp
cli
pusha
push
mov
add
sbb
test
mov
aad
jmp
mov
addr16
mov
mov
xchg
xor
jo
xchg
jo
xchg
test
inc
mov
mov
inc
or
or
rcl
ret
mov
push
xor
shl
ror
xchg
sub
xchg
sub
sti
push
pop
and
jecxz
pop
add
sar
jns
adc
cmp
cli
pop
jns
adc
inc
pop
add
add
adc
fwait
sub
add
dec
jne
sbb
cmp
loopne
pop
mov
data16
aam
out
cli
pop
xchg
push
or
pop
pop
fwait
xor
push
es
add
(bad)
adc
stos
pop
sub
pop
add
fld
lods
inc
xchg
mov
or
xchg
add
xchg
push
pop
add
mov
ins
sub
popa
jne
imul
imul
or
dec
ins
(bad)
loopne
stos
lea
mov
lods
add
mov
add
shr
mov
or
jle
add
gs
pusha
fdivr
test
xchg
adc
jecxz
sub
clc
xor
xchg
rcl
pop
mov
cmp
push
arpl
mov
or
xor
push
mov
ret
push
cmc
daa
fist
(bad)
in
test
or
dec
push
adc
sub
cmps
or
sbb
or
adc
xlat
ja
cs
mov
jns
sub
push
mov
push
jg
or
jg
mov
add
mov
adc
or
dec
and
or
jno
jae
lock
or
mov
mov
stos
mov
add
es
lock
and
add
rcr
lods
push
add
push
and
or
js
sti
sub
inc
push
pop
adc
test
add
or
mov
(bad)
mov
shl
pop
cmp
sbb
jmp
movs
cmp
and
test
push
pushf
out
es
cwde
xchg
xchg
add
sbb
out
test
add
or
cmp
call
inc
mov
xchg
xor
dec
add
sbb
out
mov
xor
push
or
or
dec
jo
inc
mov
imul
xor
rcl
dec
add
push
or
push
pop
sub
rol
dec
push
and
dec
nop
fadd
lock
arpl
imul
adc
sahf
jo
sub
mov
jnp
xor
adc
push
jae
aaa
les
pop
lea
adc
stos
or
or
(bad)
js
jno
test
or
jno
push
pop
data16
popa
fldcw
fs
int3
lds
cmp
pop
xchg
jnp
jnp
cmp
fld
adc
dec
ins
sub
inc
sbb
mov
mov
inc
fdiv
imul
jmp
pop
sbb
es
pop
xor
sbb
adc
in
pop
jo
push
adc
or
inc
mov
mov
pop
dec
mov
push
dec
repnz
scas
add
inc
mov
xchg
imul
xor
push
sbb
movs
inc
jecxz
push
inc
fidiv
push
xchg
or
int3
or
shl
add
lahf
pushf
and
xor
jbe
adc
hlt
daa
mov
push
push
xlat
dec
mov
mov
(bad)
int3
sbb
sbb
fsub
dec
add
lahf
(bad)
lea
pop
loope
push
cmp
add
push
rol
leave
push
add
push
in
or
fsubr
cmp
xor
dec
test
jl
inc
xor
push
shl
sub
fisttp
mov
mov
popf
push
jmp
pop
dec
xchg
ds
push
jl
dec
jne
call
sbb
fwait
mov
adc
push
mov
ins
test
ins
dec
mov
sbb
or
pop
pop
in
jmp
pop
adc
into
pop
mov
adc
adc
xor
add
lea
pusha
and
test
sub
cmp
sar
je
cmps
fs
jns
jo
xchg
les
mov
adc
hlt
push
and
push
sub
push
jns
or
push
push
sti
outs
pop
rcr
movs
push
push
sbb
call
mov
or
pop
sub
mov
jnp
xor
pop
mov
add
push
cvttps2pi
jecxz
mov
xchg
adc
pop
pop
jo
pop
(bad)
pop
int
leave
pop
add
or
sub
call
fidivr
rol
and
adc
cmp
jb
inc
(bad)
(bad)
inc
outs
ins
outs
popa
fs
jae
imul
popa
imul
sti
jg
add
add
outs
imul
rcr
nop
idiv
jecxz
cwde
not
clc
mov
repz
out
pop
jg
jecxz
mov
cmp
hlt
push
ret
shr
daa
clc
sub
or
clc
cmp
not
jo
adc
sbb
fdivr
loope
sub
cld
jb
xor
or
in
ja
xor
mov
pop
mov
sahf
push
in
or
push
aam
dec
fdiv
mov
adc
mov
les
dec
push
lock
xor
ficom
add
adc
push
js
add
mov
or
add
or
cmp
cmp
mov
sub
jb
outs
jecxz
or
add
add
rol
adc
sbb
dec
sbb
fcmovnu
pop
push
and
addr16
or
add
pop
out
adc
shl
pop
bound
pusha
mov
xlat
add
fdivr
dec
out
cs
add
or
(bad)
jg
mov
test
js
mov
dec
push
jns
mov
mov
test
jl
inc
cmp
jne
mov
jmp
add
dec
jne
mov
mov
loopne
loopne
mov
mov
push
sbb
bound
nop
xor
cmp
and
inc
inc
das
or
test
cmp
push
adc
or
push
lds
call
sahf
push
pop
mov
push
jge
sbb
xor
xchg
scas
test
mov
test
pop
popa
int3
loope
aas
inc
xor
mov
int3
call
gs
fsubr
in
sub
mul
add
fld
in
arpl
cmp
add
cmp
jne
call
push
mov
das
test
mov
mov
add
sar
stos
add
mov
mov
dec
in
jnp
ror
push
int3
daa
mov
hlt
sete
sbb
pop
enter
clc
(bad)
scas
int3
add
mov
sbb
mov
dec
lods
aam
les
mov
mov
cli
ss
pop
ret
pusha
mov
and
mov
stos
xor
js
adc
rcr
mov
cld
test
je
sub
jecxz
adc
mov
int3
sbb
xchg
lods
push
mov
adc
push
je
push
cli
mov
dec
stc
adc
mov
push
mov
sbb
mov
or
out
sti
scas
adc
idiv
adc
pop
xchg
xchg
(bad)
pop
sub
xor
mov
jmp
push
rol
mov
sbb
ror
pushf
pushf
enter
mov
inc
add
push
mov
pop
xor
(bad)
fdiv
pop
cmc
jge
movs
mov
test
mov
xor
jmp
mov
and
inc
dec
push
imul
add
scas
xor
cwde
mov
xor
fmul
push
add
sbb
sti
clc
sbb
mov
pop
adc
cmc
fidivr
adc
push
mov
inc
push
push
sbb
std
shr
mov
pop
bound
rcl
call
int
mov
push
add
add
adc
sbb
cmp
pushf
jb
pop
aaa
sub
aas
mov
or
push
push
xor
add
call
or
pop
push
adc
push
jmp
and
mov
loopne
pop
out
test
cs
lods
sub
pop
add
cmps
and
sub
popf
sbb
xchg
and
xor
mov
scas
adc
xchg
sahf
shl
inc
cmp
and
adc
cmps
ror
mov
pop
push
xchg
add
int
fst
pop
fiadd
jp
rcl
jg
sbb
mov
mov
pop
sbb
pop
repnz
jmp
xchg
or
xor
mov
bound
mov
xchg
arpl
and
(bad)
pop
inc
mov
ud2
add
push
add
cs
mov
out
scas
scas
imul
bound
scas
or
sub
mov
push
and
cmp
inc
xor
push
mov
aaa
les
popf
push
mov
cmp
jmp
shl
sub
(bad)
dec
add
add
add
add
add
add
add
add
push
rcl
sti
sub
and
aas
cs
or
sub
into
cmp
add
jo
pop
aaa
in
mov
aaa
mov
mov
das
jno
add
ret
lea
mov
push
dec
addr16
adc
sub
into
mov
or
pusha
mov
push
mov
mov
in
sbb
pusha
or
jnp
sahf
sub
mov
jmp
adc
xchg
mov
sub
adc
inc
push
mov
push
pop
and
fdivrp
movzx
test
add
sub
test
add
or
sub
xchg
xchg
jb
movs
ret
das
pop
mov
sbb
xor
inc
mov
sbb
je
jnp
cmp
add
fadd
push
cmp
xchg
dec
and
loopne
repnz
aaa
or
shl
dec
sbb
push
cmp
lock
or
out
clc
pop
pop
push
scas
jno
movs
aaa
out
pop
inc
mov
push
pop
xor
pushf
retf
es
push
mov
push
lock
adc
add
adc
dec
ret
xchg
push
push
mov
ja
xchg
jbe
and
ds
xchg
add
mov
sbb
pop
dec
push
mov
xor
cmp
test
pop
inc
mov
add
xor
scas
clc
(bad)
xor
lock
jne
(bad)
jle
xchg
push
add
mov
iret
test
jge
popa
sbb
cmps
retf
out
pop
mov
retf
mov
jl
ins
adc
daa
mov
bound
fsubr
fsub
ss
les
repnz
jne
or
sbb
jne
adc
push
call
add
push
das
imul
sahf
adc
lahf
push
push
pop
sar
dec
pop
sbb
push
add
daa
pop
mov
add
pop
sbb
or
sub
add
xchg
push
push
or
pop
arpl
cmp
xchg
pusha
ret
xchg
xchg
sbb
push
(bad)
call
lock
leave
mov
and
mov
mov
inc
mov
cli
data16
mov
mov
idiv
cmc
int3
pusha
inc
sub
cmp
jl
lock
or
inc
(bad)
outs
ror
adc
cmp
mov
add
pushf
cmps
out
mov
jne
cmps
dec
xchg
jmp
and
dec
stos
adc
popa
in
xchg
cmps
dec
add
xor
sub
aaa
mov
xor
pop
jo
dec
mov
addr16
nop
sbb
loopne
jmp
arpl
mov
sbb
arpl
sub
sbb
push
sub
cmp
xor
xchg
pop
pop
ret
add
and
lahf
in
test
push
cld
and
repnz
mov
xchg
ror
icebp
stos
push
add
ds
fcmovu
xchg
clc
lea
push
bound
adc
das
inc
cdq
cmc
jnp
clc
or
aas
mov
pop
jnp
or
fisub
or
pusha
mov
stos
test
mov
xor
ds
adc
cmps
inc
jnp
inc
movs
or
test
sbb
cmp
or
pusha
and
sbb
push
cmp
mov
or
inc
es
or
add
xchg
std
sub
jb
jmp
sbb
jne
push
or
mov
nop
add
outs
icebp
in
imul
pop
inc
or
les
push
pop
clc
inc
inc
cmp
ss
mov
sti
inc
jae
mov
ror
or
dec
mov
pop
imul
bound
sbb
cmp
sub
imul
adc
mov
jge
jle
jne
lock
add
sub
or
aaa
sar
das
imul
xor
inc
cmp
sti
cmp
pop
aaa
js
sub
into
retf
fmul
mov
ret
les
out
sahf
push
mov
hlt
push
lea
or
inc
mov
mov
push
push
inc
popf
adc
sub
xor
cmp
inc
je
add
or
xor
jmp
leave
loopne
mov
cs
fcomi
and
pop
jne
je
mov
sub
in
and
ss
lea
cld
add
pop
pushf
aas
and
xor
mov
mov
inc
and
xor
dec
ret
test
mov
mov
fstp
popf
dec
pop
frstor
push
out
or
movs
xor
and
mov
loope
sbb
loopne
jae
mov
popa
xor
mov
std
mov
cwde
dec
cs
es
xchg
retf
lea
movs
sbb
ds
into
lods
xor
xor
into
ja
data16
into
mov
dec
add
and
leave
add
jp
add
xchg
or
imul
cmp
or
add
inc
xchg
leave
add
jle
scas
mov
lahf
add
loopne
and
mov
ror
dec
jmp
fadd
std
mov
test
js
inc
clc
(bad)
(bad)
mov
iret
add
cmp
add
retf
mov
mov
add
pop
enter
bound
cmc
jmp
fdiv
add
cmp
xchg
icebp
and
and
aam
sbb
cmp
jle
xor
test
jl
cdq
mov
jb
pop
mov
cmc
adc
or
fsub
push
fcom
sub
pop
ret
and
rcr
ror
cmp
mov
push
sar
pop
and
test
fs
imul
inc
cmps
cmp
mov
jb
inc
into
inc
cwde
mov
fiadd
add
sub
sbb
mov
add
jmp
and
fld
push
fidivr
cld
pop
push
push
jnp
cmp
je
dec
mov
pop
cmp
and
dec
call
ins
into
xchg
mov
rol
gs
lods
nop
loope
or
jmp
in
jb
test
or
das
pop
push
xchg
mov
daa
loopne
outs
in
mov
pop
(bad)
xchg
data16
xchg
jae
and
lahf
pop
loopne
cmp
push
push
pop
cmp
pop
fwait
cmp
fdiv
dec
fwait
adc
add
fstp
mov
mov
and
lock
jae
sti
pusha
adc
sub
lahf
mov
aas
xchg
rcl
add
mov
jb
jle
loopne
add
fadd
jmp
adc
scas
adc
pushf
ret
rcr
jp
mov
lea
cdq
xchg
sbb
lock
es
(bad)
cmps
outs
jmp
or
push
ins
mov
push
or
cmp
xor
ud2
aam
pop
cs
xchg
jmp
loopne
xchg
push
and
sti
scas
icebp
push
cwde
test
pop
push
aam
sti
adc
add
xor
rol
arpl
into
adc
repz
mov
and
cmp
inc
add
sbb
push
cwde
sbb
mov
pop
push
add
add
pop
ficomp
and
movs
pop
imul
jo
jae
add
mov
adc
mov
popa
mov
loopne
jo
jle
fcomp
add
popa
shr
and
push
in
arpl
mov
push
(bad)
mov
outs
fadd
pop
push
push
and
xchg
sti
mov
rcr
push
data16
and
push
push
dec
rcr
addr16
xor
fwait
iret
or
xor
iret
pop
add
daa
add
pop
fisttp
shl
cmps
cmps
fs
mov
pop
and
inc
adc
mov
test
xor
mov
fistp
les
fimul
lahf
cli
cmp
std
mov
leave
push
add
cmps
pop
dec
lods
and
test
js
sar
sub
xlat
rcr
nop
jmp
je
cmp
lds
bound
and
jnp
or
jno
aaa
mov
adc
mov
int3
or
adc
fucomip
mov
fmul
xor
sub
jecxz
add
mov
and
push
lock
lods
cmp
lods
rcr
cdq
or
and
div
and
adc
xor
jbe
and
push
fbstp
jg
fnop
mov
push
pop
adc
add
xor
mov
rol
or
add
jae
es
js
cmp
(bad)
in
mov
pop
ret
add
out
enter
mov
pop
cmp
cwde
adc
or
push
into
popa
cmps
jg
(bad)
mov
cmp
xchg
ret
sbb
jo
mov
cs
std
test
fcom
xchg
das
cmp
mov
loopne
xchg
cld
add
in
cmc
adc
ins
add
mov
fs
sbb
xor
ja
fmul
dec
mov
nop
pushf
fadd
sbb
sub
push
adc
add
je
jmp
and
dec
test
ins
jo
inc
mov
or
adc
(bad)
xchg
call
xor
shl
repz
sahf
inc
cmp
sar
fisttp
mov
cmps
scas
hlt
sti
push
nop
push
inc
repnz
mov
ins
fbstp
adc
jbe
jmp
jle
fild
fild
jge
stc
fmul
mov
out
mov
movs
or
inc
or
mov
cmps
adc
add
daa
and
add
fistp
cmps
js
mov
shl
cmp
not
sub
mov
dec
mov
clc
sbb
aam
inc
repnz
(bad)
jecxz
in
call
push
ds
push
add
push
dec
and
fidivr
loop
aad
add
mov
and
sahf
or
arpl
jae
scas
jmp
pop
sbb
mov
mov
std
pcmpeqd
and
mov
in
add
inc
pop
inc
fs
xor
or
and
fsub
aam
pop
add
fwait
fwait
cmp
cmp
mov
jae
loopne
add
mov
add
inc
dec
lahf
push
adc
in
(bad)
xlat
push
mov
rcl
loope
out
push
pop
add
or
fcom
out
cmp
fidiv
test
sbb
faddp
mov
jns
jbe
mov
andps
outs
and
cli
nop
into
and
in
int
add
pop
inc
mov
fstp
add
xchg
and
sbb
adc
adc
adc
aam
icebp
push
pop
pop
jo
out
fstp
xor
dec
push
and
jne
lock
jge
cs
and
dec
ret
mov
dec
sub
dec
in
fmul
push
cwde
push
fcom
xor
imul
add
xchg
xchg
pushf
sbb
sbb
sbb
adc
xchg
out
or
fcmovu
(bad)
mov
xlat
add
pop
mov
mov
jno
xchg
loopne
add
pop
add
fwait
dec
mov
les
mov
stos
mov
add
mov
push
repnz
jo
fdivr
jge
mov
icebp
aam
push
icebp
pop
add
jb
js
push
loopne
icebp
hlt
mov
adc
and
jb
lods
scas
in
repnz
push
outs
in
pop
imul
push
sbb
or
push
cmp
arpl
or
in
retf
or
sti
test
pop
pusha
out
xlat
jg
ss
jo
pop
jnp
add
and
hlt
cld
out
sub
les
add
sbb
inc
dec
mov
cmps
xchg
cwde
test
mov
ror
pop
dec
xor
add
or
and
sub
out
data16
add
in
add
xor
xchg
imul
retf
inc
sub
dec
test
popf
add
and
or
push
fistp
mov
sub
add
or
pushf
shl
ins
inc
add
jne
sbb
(bad)
nop
add
fiadd
pop
adc
cmp
and
fadd
pop
mov
pushf
clc
dec
add
ss
add
jo
and
add
mov
lods
lods
stos
hlt
add
mov
stos
jmp
dec
in
pmullw
mov
or
sub
lock
sub
outs
mov
loopne
jle
or
push
nop
loopne
or
mov
mov
and
mov
inc
movs
dec
jmp
out
or
or
push
loopne
ret
push
jno
sbb
add
ins
push
mov
cmp
enter
mov
aaa
and
mov
cmp
lods
int3
jl
std
loopne
mov
cmp
jl
mov
push
sub
imul
add
lock
push
or
jp
push
stos
int3
xor
loopne
adc
push
jbe
jbe
(bad)
int3
inc
mov
mov
(bad)
xor
mov
pop
mov
sbb
pop
mov
sub
(bad)
mov
jne
pop
xchg
imul
ficomp
outs
ret
add
mov
jl
(bad)
push
sbb
mov
aad
push
cmc
arpl
arpl
xor
push
ret
jae
or
mov
lods
scas
stos
add
add
sub
push
faddp
into
lds
loope
out
sbb
dec
test
push
inc
sbb
call
xchg
adc
test
mov
std
sbb
sbb
cmp
dec
leave
add
mov
xor
ret
dec
test
mov
retf
dec
pop
fld
push
aaa
in
or
xchg
imul
outs
mov
fidivr
xchg
clc
jne
push
jge
mov
ja
cmp
xor
or
dec
ficom
hlt
call
pop
je
sbb
adc
sub
js
adc
push
shl
dec
aas
sub
sbb
imul
mov
int3
inc
cmp
ins
inc
(bad)
inc
inc
nop
cmp
and
shl
pop
xor
mov
fwait
adc
pcmpeqd
fwait
adc
adc
imul
aad
idiv
adc
mov
call
push
ret
call
sbb
or
fimul
xor
adc
cmp
mov
ins
add
adc
and
and
adc
cld
inc
pop
dec
push
scas
popf
push
fstp
sbb
jg
add
dec
je
test
aam
sbb
push
push
std
clc
loop
loopne
add
pop
adc
push
add
stc
hlt
sub
sbb
lds
push
pushf
cld
sbb
nop
out
aam
pop
xchg
push
xor
push
fistp
dec
pop
int
sbb
loopne
and
int
cmp
pop
or
pop
int
ins
ins
xlat
fsub
inc
fadd
inc
sbb
push
jp
popa
adc
and
sub
dec
(bad)
and
mov
mov
and
jp
test
xor
adc
ins
nop
hlt
mov
mov
repnz
cmp
mov
cmps
and
sbb
or
data16
dec
(bad)
sbb
das
loope
popa
mov
int3
push
(bad)
pop
inc
cmps
adc
mov
dec
add
pop
jge
out
mov
mov
add
pop
mov
fwait
adc
and
data16
imul
pop
test
push
call
shr
sub
xor
adc
sar
rcl
jae
dec
pushf
test
mov
(bad)
push
popa
shr
jno
adc
cmps
imul
push
std
nop
imul
push
or
push
fld
sbb
xchg
jo
test
pop
add
push
push
push
sub
jbe
push
or
xor
sbb
rcr
movs
xlat
fwait
loope
rcl
ins
push
fsub
push
je
adc
adc
xlat
adc
sub
fmul
sub
push
sbb
pop
int
pushw
test
ss
adc
adc
fwait
repnz
adc
adc
xchg
std
cdq
add
movs
outs
movs
aaa
(bad)
enter
adc
and
test
mov
mov
shl
jge
cmp
and
pop
test
scas
mov
in
or
mov
sbb
arpl
in
push
fcomp
in
push
or
or
adc
ret
jae
adc
fisubr
add
popf
push
jb
popa
int
cmp
(bad)
in
sbb
adc
dec
mov
sbb
pop
loopne
pop
add
leave
mov
or
mov
cmp
adc
js
lods
push
jae
jle
test
add
and
sbb
sbb
sbb
cmps
idiv
test
imul
test
or
sbb
dec
mov
test
and
mov
fst
pop
test
outs
movs
cmp
lods
inc
loop
lods
cmps
sub
movs
mov
xchg
inc
mov
dec
test
jl
inc
xor
cmp
jne
or
or
add
or
adc
pop
jmp
inc
pop
sar
test
sub
pop
retf
adc
call
xchg
(bad)
mov
push
sbb
or
jmp
jno
add
or
xor
imul
xor
xchg
test
jne
mov
std
or
push
adc
in
xchg
call
and
loopne
sub
js
sbb
aas
and
xchg
(bad)
dec
jne
out
dec
mul
pop
dec
sub
cmp
ret
mov
inc
enter
sbb
xor
aas
adc
jne
in
push
xor
das
mov
test
adc
adc
add
sahf
mov
popa
pop
das
out
xchg
int3
jb
pop
jecxz
sub
aas
mov
inc
xlat
jge
sar
push
push
inc
pusha
and
push
sub
add
aaa
es
and
inc
adc
or
xor
(bad)
fldenv
lods
imul
inc
add
cli
adc
dec
adc
cmp
pop
pop
(bad)
mov
pop
aas
pop
jg
pop
push
mov
and
fist
sub
in
jbe
pop
ja
test
mov
das
fcmovnu
pop
xchg
and
jo
xchg
rcl
or
mov
push
repz
iret
fs
add
adc
dec
fild
inc
add
mov
mov
push
sub
add
and
retf
cmp
rcl
data16
test
and
pop
mov
cdq
push
adc
push
add
out
add
push
xchg
inc
push
int3
xor
int3
cli
push
test
fdiv
or
dec
pop
ss
add
pop
xchg
inc
sub
(bad)
nop
test
and
xchg
shr
daa
outs
es
xor
add
cmps
and
or
inc
push
xor
pop
sub
add
call
mov
jb
daa
or
add
aas
or
inc
xor
jecxz
dec
lock
push
sub
sahf
dec
xor
xor
and
imul
adc
or
pusha
scas
psllq
ror
aas
adc
and
pop
mov
dec
daa
or
daa
cmp
push
inc
es
xor
cmp
pop
inc
(bad)
call
pop
popa
push
and
add
cs
stos
iret
push
add
es
daa
mov
cmps
add
and
(bad)
scas
test
inc
sbb
xor
in
mov
iret
mov
test
repnz
std
push
aad
inc
dec
pop
dec
shl
loopne
iret
inc
iret
mov
rcl
pop
test
inc
xor
int3
pop
jecxz
xor
mov
dec
ret
mov
dec
cmp
jl
data16
push
fmul
arpl
jne
cmp
aam
shl
xor
lea
cmp
inc
jo
or
loopne
or
stos
xor
loopne
cld
inc
xchg
jne
mov
jmp
mov
push
mov
ret
test
je
mov
pop
cmp
push
lea
jbe
add
inc
sar
mov
adc
ja
lock
enter
pop
push
inc
rol
dec
adc
adc
xchg
jbe
pop
icebp
pusha
js
dec
sbb
out
push
fs
retf
jne
cld
mov
inc
das
adc
lock
aas
ret
inc
adc
pandn
mov
popa
or
pop
adc
sbb
inc
aas
add
jo
dec
out
lods
sub
(bad)
jecxz
add
jae
dec
jne
pop
rcl
add
pop
shl
and
xor
ret
adc
pop
stos
rol
add
add
xor
push
dec
gs
and
mov
and
ins
xor
add
adc
pop
movs
sbb
mov
sbb
mov
rcr
dec
lods
int3
cmp
jmp
rcl
in
mov
mov
fisubr
nop
adc
outs
test
dec
pop
dec
rol
mov
dec
cmps
mov
mov
add
push
jle
mov
adc
adc
mov
lods
rcl
scas
add
cmp
lods
clc
dec
adc
xchg
shl
mov
jno
inc
mov
xchg
pop
les
aam
dec
enter
ss
stos
cld
(bad)
inc
add
adc
push
jg
js
dec
sub
jne
adc
xchg
mov
loopne
jmp
add
pop
mov
in
push
sbb
sub
lea
push
xor
lock
and
mov
push
addr16
adc
add
fs
outs
adc
repz
pusha
xchg
jns
das
lahf
and
out
or
mov
(bad)
test
sbb
ja
pop
mov
shr
dec
sub
in
lea
mov
jne
xchg
or
dec
pop
pop
push
ficom
div
fidiv
dec
out
into
pusha
xchg
dec
call
call
mov
sub
scas
and
retf
mov
dec
int3
idiv
bound
mov
sar
sub
not
pop
sbb
xchg
adc
or
(bad)
clc
sbb
jl
fadd
outs
fcos
add
jno
clc
cmp
idiv
inc
or
jne
and
xlat
fwait
shl
jmp
adc
pop
lock
xlat
dec
not
jae
jl
fdiv
pop
jge
push
mov
lock
push
and
push
rol
jb
xor
cmp
inc
ffreep
into
sbb
add
lds
add
outs
test
fwait
int
pop
hlt
push
xor
inc
add
in
lods
add
enter
stc
xor
or
enter
sti
xor
xor
dec
(bad)
mov
test
push
sbb
inc
xor
push
add
sar
push
mov
adc
dec
cs
add
les
push
lods
inc
(bad)
ins
mov
pop
int3
cs
dec
push
ss
xchg
ds
mov
push
push
sub
push
sbb
add
popa
and
aaa
mov
popa
dec
mov
add
in
fistp
sub
movs
push
loopne
mov
test
push
add
jle
dec
repnz
ins
mov
or
call
cmp
fist
mov
cs
mov
xchg
bound
xor
dec
mov
adc
mov
in
loop
in
ror
(bad)
push
das
movs
push
xor
push
repz
in
ins
das
in
cmp
cmps
jge
ins
add
push
cwde
and
aas
inc
stc
xchg
pop
fs
out
cmp
movs
push
mov
test
das
pop
add
fisubr
add
sub
and
dec
xor
aas
pop
test
inc
outs
in
mov
pop
test
mov
jle
shr
xor
push
adc
jge
xor
test
push
es
ds
cmp
in
loop
xor
pop
pop
inc
inc
in
push
je
outs
imul
add
cwde
cmp
inc
inc
(bad)
jge
mov
push
pop
es
sahf
push
adc
hlt
adc
pop
add
aaa
(bad)
(bad)
pop
add
dec
mov
cmp
mov
scas
dec
push
hlt
jns
inc
aaa
xor
sub
das
or
mov
mov
iret
adc
push
sub
ror
pop
into
push
cmp
add
outs
sbb
dec
std
xor
mov
or
dec
push
dec
fild
out
mov
pop
add
and
iret
add
xchg
neg
movs
jle
dec
popa
and
fsubr
je
or
jle
repz
out
mov
js
mov
cmp
(bad)
scas
dec
outs
int3
push
les
pop
arpl
add
xchg
ins
das
jo
mov
cdq
mov
cmp
sbb
fs
push
push
pusha
xchg
push
and
outs
add
pop
pusha
add
fcom
mov
cmp
push
pop
add
push
int3
cmps
mov
add
xor
out
aaa
les
je
lods
ret
jl
adc
and
test
mov
jl
add
or
push
(bad)
fisttp
hlt
imul
sbb
jg
retf
push
push
cld
push
pusha
add
outs
or
jo
push
dec
mov
add
cmp
std
call
in
push
je
jno
mov
mov
rcr
(bad)
std
add
mov
jle
pushf
xor
das
sbb
aaa
mov
inc
mov
jne
add
adc
in
pusha
push
jbe
add
xchg
scas
js
repz
dec
es
dec
outs
test
shl
call
loopne
repz
sbb
push
mov
pop
ja
inc
clc
out
mov
out
enter
lock
fsubr
sbb
inc
rol
pop
dec
and
jns
xlat
pop
xor
dec
sbb
in
adc
xchg
jmp
repz
xchg
mov
rcl
hlt
aaa
or
out
adc
and
cmp
enter
out
in
add
adc
mov
pop
daa
push
push
and
push
inc
addr16
das
sbb
mov
pop
fwait
div
xchg
pop
pop
mov
scas
adc
push
pop
mov
dec
and
js
push
and
lahf
not
in
cld
adc
mov
or
aas
pop
pop
aas
lods
jbe
fimul
mov
sbb
push
clc
pop
or
out
ss
xchg
and
xor
inc
pop
push
div
test
dec
aam
in
daa
sub
cmp
mov
enter
dec
sub
inc
dec
mov
inc
sub
pop
cld
fidiv
lds
pop
in
adc
sub
sbb
jns
aaa
rcr
push
xor
iret
repz
(bad)
push
movs
loopne
dec
sbb
pop
xchg
jle
imul
ss
enter
shl
pop
inc
dec
das
ins
dec
mov
push
das
pop
fsub
push
fmul
ss
rcl
(bad)
push
lods
in
xchg
xlat
jmp
push
je
pop
inc
repz
xor
dec
xor
enter
(bad)
jne
scas
mov
punpckhbw
add
inc
out
adc
cmp
cmps
push
rcl
(bad)
sub
push
enter
sub
fldcw
cs
xor
push
dec
sti
fiadd
xchg
inc
pop
and
push
pop
fs
mov
push
cmp
mov
push
shl
cld
(bad)
pop
into
push
mov
or
fld
je
xor
adc
xchg
mov
in
mov
push
scas
sbb
cmp
pop
call
test
or
push
pop
test
cmp
fistp
adc
vmread
pop
sbb
ins
ss
ins
pusha
sub
mov
je
sbb
fisub
fst
jne
jl
nop
add
push
scas
fnstenv
fld
pop
mov
ror
js
pop
sti
(bad)
fidiv
dec
dec
loopne
dec
pop
hlt
mov
cld
sub
hlt
fild
xor
bswap
push
adc
push
out
push
xor
fs
lahf
cmp
mov
pop
pop
aaa
mov
call
pop
cmp
(bad)
pop
or
dec
inc
push
adc
push
sbb
add
mov
xchg
pop
dec
xor
jns
dec
lock
mov
mov
mov
inc
sar
pop
jp
mov
das
adc
shr
in
pusha
loopne
push
mov
imul
push
pusha
les
lds
mov
daa
ins
(bad)
push
sbb
pop
push
push
mov
int3
data16
outs
pop
adc
push
lods
leave
push
sbb
sub
fwait
in
jge
mov
push
and
mov
fnstcw
sti
xor
cwde
loop
mov
ds
jl
faddp
aam
push
jmp
in
jg
je
sbb
in
sbb
daa
enter
and
prefetchnta
cmp
dec
pop
cwde
sub
fldcw
sub
mov
inc
div
cmps
aaa
into
cmp
fiadd
sub
cmps
(bad)
cmps
fs
inc
push
inc
push
and
xchg
stc
cmp
jo
rcr
dec
(bad)
mov
movs
in
cs
iret
fmul
xchg
dec
ds
fld
and
mov
les
jns
shr
mov
out
addr16
daa
shr
ja
pop
ja
jmp
mov
pop
xor
jnp
call
xor
push
or
stc
je
nop
fcom
xchg
sbb
mov
push
loopne
(bad)
mov
push
loopne
fstp
adc
pushf
fisubr
mov
mov
pop
mov
sbb
lahf
push
test
xchg
mov
shr
cmp
add
sbb
in
pop
pop
xor
gs
scas
dec
mov
je
xor
cmp
loope
ins
sbb
stos
inc
je
loop
imul
jbe
push
and
push
mov
dec
mov
(bad)
and
les
clc
push
cwde
leave
pop
(bad)
clc
push
sbb
push
cld
mov
(bad)
stc
sbb
ss
mov
xor
jl
ins
mov
push
sub
mov
repnz
sbb
rcr
cmc
inc
push
mov
lahf
repz
inc
add
push
or
mov
lock
push
or
push
fmul
add
adc
adc
data16
ins
pusha
sbb
and
lahf
clc
les
push
aam
or
push
pop
jle
adc
mov
push
cwde
jl
scas
xchg
xor
ins
sub
push
in
mov
lahf
add
and
push
adc
inc
adc
ss
ins
ss
int
xor
fdiv
js
pushf
cmp
cmp
push
rol
push
ins
mov
push
dec
out
mov
mov
sahf
push
mov
push
mov
push
push
add
arpl
data16
mov
sar
sub
push
push
out
imul
push
or
fwait
ins
pop
fcmovbe
imul
scas
lods
outs
push
fs
jae
fsubr
jne
ja
jle
jg
lahf
data16
add
test
test
ins
or
call
fmul
enter
fst
or
out
xor
or
nop
and
pop
push
enter
fldcw
push
mov
out
mov
cmps
imul
out
xor
fisttp
or
mov
pop
push
xchg
mov
mov
push
enter
push
mov
popa
test
push
faddp
out
fucom
(bad)
loope
loop
jecxz
push
test
scas
push
pushf
in
out
test
jle
pop
adc
jmp
in
out
push
icebp
push
clc
out
ss
jbe
stc
push
mov
std
adc
mov
ins
mov
fwait
(bad)
cmp
jae
add
and
fadd
fisub
fst
aam
cs
sahf
add
xor
push
push
xchg
fldcw
outs
inc
sbb
sbb
sub
push
mov
xor
mov
push
sahf
dec
ss
or
nop
inc
mov
jo
ss
push
jbe
clc
push
nop
xor
dec
jo
push
cmp
fadd
mov
lods
mov
jnp
mov
sbb
test
fsubrp
ret
iret
out
pop
sar
cmps
pop
push
mov
sbb
sbb
dec
mov
fisub
sub
das
les
ficom
xor
push
push
aaa
push
cmp
mov
mov
ins
test
push
inc
push
sbb
xor
pop
aam
ss
sahf
div
push
mov
int3
hlt
(bad)
lods
push
mov
in
ins
push
fcomp
pop
push
inc
pop
out
push
sub
(bad)
mov
push
xor
dec
ins
test
outs
jne
(bad)
jbe
jb
push
mov
xlat
mov
jbe
ja
jns
jnp
jnp
mov
jge
jle
xchg
or
push
test
push
call
push
ins
xchg
xchg
lock
in
jge
xchg
cs
push
and
mov
stos
neg
cs
mul
test
mov
mov
mov
rol
push
push
cmp
push
mov
mov
mov
ss
mov
enter
cmp
push
int3
ss
into
out
loopne
les
loopne
mov
loop
imul
mov
push
mov
in
sbb
or
cmps
jmp
xchg
push
sub
push
inc
pushf
fiadd
lods
fstp
add
or
push
lods
push
adc
js
dec
push
in
mov
shl
push
loop
jecxz
or
ins
cmp
ins
enter
xor
push
test
lahf
(bad)
push
fucom
mov
(bad)
or
push
int3
or
sbb
pop
mov
sbb
sub
test
adc
cmp
call
pop
cmp
pusha
xchg
mov
adc
dec
shl
retf
jbe
enter
push
push
mov
repz
movs
movs
pop
dec
(bad)
pop
aam
scas
mov
inc
daa
loopne
je
je
mov
fiadd
lock
mov
and
ss
int3
pusha
jo
movs
(bad)
sysret
add
pop
add
or
add
fimul
and
dec
pop
div
adc
push
dec
sbb
push
inc
push
es
push
fld
jne
je
mov
movs
pop
mov
ror
pop
das
lods
pop
jnp
sbb
xor
dec
daa
pop
fs
in
or
(bad)
cwde
fild
mov
pop
adc
pop
fs
dec
push
add
and
jg
adc
adc
scas
mov
jbe
adc
outs
or
push
push
mov
pop
mov
xchg
dec
push
push
sbb
or
inc
adc
pop
aam
iret
pop
add
iret
dec
sub
js
seta
xchg
cld
inc
add
out
ds
je
sbb
cmp
iret
repz
adc
ds
adc
sbb
mov
fdiv
lahf
out
ds
pop
lods
call
popf
sbb
xlat
fsub
lock
jne
bound
or
es
das
xlat
in
inc
pop
mov
inc
pop
adc
mov
test
fld
push
test
push
ins
lods
xor
int
jbe
sbb
scas
inc
mov
mov
mov
xor
xor
lahf
push
test
xchg
sbb
jl
lock
push
push
push
fstp
mov
mov
mov
iret
jo
push
and
mov
ret
pop
xchg
shl
ror
push
cwde
ret
into
mov
ret
daa
sbb
push
enter
pop
push
mov
mov
int3
push
in
ror
lock
daa
or
adc
hlt
loop
pop
xor
fistp
out
mov
mov
mov
js
(bad)
xchg
inc
inc
mov
lock
push
push
pop
push
pop
pusha
mov
and
dec
addr16
add
jg
inc
sub
sub
(bad)
or
push
push
push
stc
cmp
aam
sar
push
retf
int
jnp
(bad)
adc
push
rol
js
adc
adc
cmp
rcr
aas
pop
ins
fcom
out
jl
xor
push
mov
loopne
mov
inc
loop
ins
dec
movs
push
inc
out
jnp
add
out
push
test
int
jnp
test
test
shr
mov
push
and
(bad)
pop
add
add
add
add
inc
xor
push
ss
scas
add
ins
push
pusha
or
pop
or
loopne
mov
add
adc
pop
xlat
into
mov
push
(bad)
xchg
movs
fistp
push
mov
out
add
es
outs
ins
loopne
sub
data16
rol
in
ds
and
call
in
pop
out
sbb
fcomp
cmps
popf
jge
call
pushf
pop
out
loope
jbe
mov
push
pop
int3
das
pusha
repz
pop
popa
push
mov
(bad)
fstp
dec
lock
arpl
je
enter
sahf
cmps
fnstcw
push
and
sbb
fdiv
inc
or
out
xchg
cmps
inc
push
cmp
pop
test
fsubr
ds
push
hlt
mov
cmp
push
(bad)
mov
push
les
dec
imul
clc
aaa
pop
push
js
pop
sahf
out
ficomp
imul
push
or
movs
fidivr
jns
adc
push
mov
pop
in
cs
outs
push
mov
fnstsw
jbe
outs
push
push
jae
pushf
mov
cwde
mov
fdiv
ja
jne
xor
push
sub
add
xchg
add
pop
stos
scas
scas
push
loopne
ss
push
xchg
fild
push
mov
jo
inc
push
icebp
push
movs
inc
loope
or
mov
sbb
(bad)
mov
inc
cwde
enter
pop
and
pop
push
in
dec
add
out
aas
fistp
daa
pop
in
cwde
sub
int
fnstcw
sub
loopne
sub
int
fwait
sub
sub
dec
das
out
das
sub
and
pop
dec
in
ror
sbb
in
sbb
pop
pop
xor
jo
rol
xor
sub
out
pop
pop
push
adc
pop
dec
sar
popa
div
lock
pop
pop
in
sub
sub
imul
push
daa
pop
jl
mov
and
pusha
xchg
lock
cmp
mov
out
aam
xor
xor
push
jns
jbe
cmp
cmp
mov
int
popf
imul
je
push
sub
xchg
dec
fdivr
cmp
push
mov
pop
aas
xor
fs
fldcw
push
xchg
outs
push
push
jl
add
and
fwait
int
mov
call
adc
into
mov
retf
rcl
sahf
fdiv
fwait
in
sbb
push
pushf
not
add
ss
int
and
ror
adc
inc
pusha
movs
and
les
mov
ins
je
sub
pop
cmp
in
adc
jb
aas
jo
ja
mov
fwait
int
es
dec
push
add
dec
lods
push
inc
push
mov
ja
pop
(bad)
pop
daa
push
pop
push
fs
push
popa
adc
loopne
out
mov
cmps
mov
inc
or
ins
mov
aas
add
mov
pop
aas
pop
jbe
or
xor
xor
out
or
push
pop
adc
ins
dec
inc
mov
int3
ins
push
pop
inc
(bad)
and
cmps
ins
ss
aas
mov
jge
inc
sbb
fcmovnu
mov
mov
nop
ins
ss
push
cwde
push
call
movs
or
int3
out
pop
cmps
addr16
scas
mov
pusha
outs
jmp
jns
push
push
push
mov
in
in
push
fldenv
cmp
or
push
inc
hlt
inc
pop
mov
lods
call
rol
cld
push
mov
bswap
mov
jb
aam
fcmovu
fild
pushf
(bad)
and
ss
loopne
cmc
aaa
scas
add
lods
xchg
push
add
and
pop
mov
mov
mov
pop
pop
test
add
imul
mov
pop
cld
push
inc
mov
add
push
jo
std
adc
xchg
in
mov
xchg
movs
and
icebp
jns
unpcklps
pusha
add
inc
clc
outs
fcomp
paddb
(bad)
sub
pop
xor
inc
into
cmp
sub
pushf
sub
(bad)
add
add
sar
or
int3
push
jo
push
in
into
jbe
fmul
adc
outs
sbb
dec
js
lahf
pop
hlt
adc
jbe
pop
lods
adc
adc
push
mov
jnp
push
push
sub
in
addr16
fucomi
outs
jnp
sbb
and
fiadd
daa
xchg
sbb
push
sbb
mov
sbb
push
inc
pop
xor
push
pushf
and
sahf
and
mov
jl
test
je
dec
es
daa
push
xor
sti
xor
aam
sub
pushf
loope
sub
jl
push
pop
cmp
cmps
cmp
push
aas
arpl
shr
pop
test
(bad)
es
lods
sub
jg
mov
pop
jbe
push
adc
mov
jbe
mov
push
out
push
push
movs
mov
push
retf
(bad)
add
ja
nop
push
out
mov
das
adc
xchg
rol
or
inc
aad
js
rcr
imul
int
into
pop
in
out
or
mov
push
js
pop
fadd
pop
nop
add
setg
in
call
push
pop
push
mov
or
imul
or
mov
int
or
xchg
cmp
jns
ds
add
push
sar
adc
jbe
in
fld
inc
pop
add
push
push
push
daa
xor
push
in
push
int
lahf
dec
adc
push
or
xor
stc
cmp
inc
and
mov
les
sub
enter
cmp
data16
add
push
adc
push
pushf
cmp
idiv
push
sub
xlat
scas
test
push
pop
xchg
push
sub
das
sar
mov
(bad)
ds
repz
call
in
(bad)
(bad)
imul
add
ror
repz
pop
add
imul
movs
push
or
push
and
shr
ror
das
jl
push
adc
push
add
push
mov
int
enter
xor
aas
xchg
aaa
push
cld
cmp
mov
push
ins
cmp
clc
ins
ss
dec
inc
cmps
dec
push
in
aam
sub
adc
jg
push
test
dec
daa
add
das
pop
repz
cmp
nop
mov
push
call
cmp
aaa
ins
xor
inc
xchg
addr16
mov
scas
mov
(bad)
push
in
mov
push
pop
mov
ins
lods
jecxz
and
pop
and
in
icebp
fdivrp
cmc
out
fwait
scas
popf
push
xor
mov
or
and
sbb
pop
push
mov
sub
dec
add
or
pop
pop
adc
es
or
rol
mov
mov
pop
cmp
(bad)
jl
xor
ds
imul
int
repz
js
dec
aam
push
push
aaa
push
pop
es
jl
enter
push
pop
js
pop
fistp
bound
fs
imul
xchg
aam
push
iret
jnp
or
pop
pusha
push
mov
(bad)
mov
daa
pop
fs
push
outs
ja
mov
xor
push
pop
fldcw
push
push
pusha
aaa
cmp
cmp
fwait
int
mov
push
aas
mov
ins
add
push
dec
outs
mov
int
dec
aam
jbe
push
int3
push
and
pop
xor
pop
outs
pop
push
jl
movs
arpl
int
inc
les
addr16
ins
dec
outs
push
int
lahf
data16
sbb
push
push
adc
mov
imul
jl
add
jl
mov
rcl
xchg
jge
ins
js
jg
push
test
pop
pop
out
push
pop
enter
sahf
push
in
xchg
cmp
jl
shl
xchg
nop
cdq
push
and
shl
les
or
aaa
fstp
jl
push
lods
push
enter
jecxz
mov
xor
js
sets
jo
inc
idiv
int3
js
push
push
pop
jge
mov
pop
add
es
sti
push
fs
add
mov
lods
fiadd
push
mov
push
push
push
jl
or
fldenv
fwait
or
push
adc
movzx
lahf
loopne
orps
pushf
adc
jge
int
repz
push
fcomp
sub
sub
xchg
mov
push
out
repz
xor
mov
mov
mov
push
push
loopne
mov
cmp
xor
nop
nop
or
scas
(bad)
pop
fdivr
hlt
rol
jl
rol
sbb
clc
iret
aas
xor
push
jge
jge
mov
shl
push
int3
sub
dec
sti
xor
es
adc
(bad)
fsubr
mov
aaa
fist
push
clc
pop
mov
xor
pop
push
pop
push
rcr
shr
in
call
in
add
dec
mov
and
inc
add
push
mov
int3
iret
sub
pop
in
sub
and
push
add
jg
lock
daa
mov
pop
inc
aam
test
adc
push
pushf
(bad)
mov
popa
pop
and
pop
push
sub
clc
pop
pusha
or
sub
adc
add
pop
push
adc
add
iret
sti
cmp
push
add
int
fdiv
fldcw
sub
inc
lock
test
sub
in
xchg
push
outs
add
nop
add
pushf
add
fmul
cld
mov
ins
mov
push
lock
pop
cmps
sbb
clc
sbb
es
pusha
das
mov
cmps
mov
add
aas
nop
cmp
xchg
aas
push
les
imul
inc
push
xor
push
fs
daa
into
jle
push
(bad)
mov
outs
add
je
ins
mov
rcl
jl
movs
cli
cmp
repz
xor
cld
sbb
mov
inc
mov
xor
cmps
popf
sbb
xchg
(bad)
xchg
hlt
fxch
data16
push
pusha
fild
jo
cwde
ficomp
dec
mov
in
mov
aas
shl
pop
or
push
(bad)
out
loopne
(bad)
cs
aaa
pop
dec
call
fwait
int
jmp
ins
lock
lahf
ja
fwait
dec
push
invd
repnz
push
les
ja
push
das
cld
push
pop
hlt
push
je
mov
(bad)
cmc
mov
mov
hlt
mov
cmp
jo
daa
in
add
push
push
test
out
ss
dec
les
push
push
and
stc
xor
or
pushf
adc
lods
fnstcw
dec
push
xor
call
jnp
dec
mov
adc
aam
nop
adc
adc
data16
shl
or
push
dec
repz
mov
ss
sahf
out
sub
inc
mov
js
ds
(bad)
push
push
fcom
hlt
push
(bad)
in
ds
push
sbb
dec
arpl
ins
imul
cmp
xchg
pop
js
nop
sbb
jne
js
jge
in
loop
or
xchg
mov
and
ud2
mov
adc
inc
inc
xchg
ja
test
das
mov
push
pop
in
retf
mov
cwde
cdq
push
xchg
sahf
push
cld
mov
lods
pop
imul
movs
push
adc
mov
stos
aaa
cmps
jne
mov
pop
in
jge
iret
push
push
sbb
test
ficom
fild
int3
(bad)
ds
push
loope
push
aam
push
and
push
xor
int
loopne
push
not
add
and
mov
mov
add
pop
push
push
inc
je
xchg
sub
inc
adc
lahf
mov
ja
adc
out
push
jno
mov
sbb
div
loop
sbb
mov
jmp
pop
push
sysret
and
jmp
shl
push
xlat
pop
or
sbb
add
pop
test
test
stos
pop
jg
xchg
jo
push
test
outs
pop
add
hlt
sahf
data16
fisttp
outs
paddsb
push
cmp
idiv
xor
pushf
mov
int
jl
pusha
cmps
cwde
(bad)
or
push
fistp
mov
cmp
add
or
iret
repz
test
xor
fcmovbe
addr16
dec
nop
shr
repz
adc
nop
rcl
inc
ds
mov
aam
dec
cmps
push
pushf
loopne
out
ds
fs
sub
iret
repz
mov
sub
push
push
out
ds
test
sub
iret
repz
in
sub
jo
hlt
xor
repz
dec
js
add
test
mov
push
test
int
ins
xchg
push
push
in
push
push
dec
pop
or
fidivr
pusha
shl
mov
push
jo
jae
out
fdivp
mov
push
mov
xor
or
xchg
mov
fisub
dec
pop
lods
xchg
sbb
push
pushf
push
cld
mov
movs
xchg
mov
mov
push
mov
push
mov
ror
fistp
fisub
iretw
sahf
rol
fcom
ficomp
push
dec
jo
outs
loope
in
mov
mov
neg
fistp
push
out
push
fdiv
into
repz
jo
out
push
test
rol
pop
outs
int3
jge
imul
push
add
mov
repz
lahf
in
sub
or
cmp
mov
mov
fucom
repz
test
fnstsw
xlat
mov
push
push
mov
mov
xchg
adc
cmps
lock
icebp
aas
or
push
mov
push
sar
(bad)
mov
add
add
data16
int3
or
and
in
mov
push
sbb
sbb
test
dec
and
gs
cmps
push
push
(bad)
cld
and
push
ret
ja
mov
xchg
mov
and
neg
mov
mov
iret
jo
jp
into
pop
test
imul
int
mov
pop
inc
fisub
add
fild
daa
mov
rol
dec
fs
repz
mov
gs
push
cwde
imul
ins
pop
sub
dec
fistp
nop
jbe
jp
jnp
push
lods
repz
sub
mov
imul
sbb
fdivrp
xor
jge
or
pushw
and
inc
sbb
nop
xchg
mov
fcmovu
pop
push
movs
jle
push
aam
mov
lock
and
cs
push
outs
cmp
data16
xor
adc
fdiv
ja
ss
int
js
jns
jnp
jge
jle
data16
clc
jg
sub
push
lahf
sbb
mov
imul
outs
scas
push
in
fs
xor
push
stos
sahf
ins
mov
push
sbb
sub
cmp
cmp
rol
inc
test
cld
dec
aas
cmp
mov
inc
jo
out
inc
and
iret
stos
add
add
cmp
repz
out
in
and
pop
nop
sahf
cmps
sbb
enter
jo
cmp
repz
and
repz
push
xchg
int3
add
idiv
iret
repz
jo
in
sub
cs
fld
push
shl
cmp
ds
cld
inc
loopne
ins
ss
inc
mov
push
js
pop
out
push
pop
cs
push
pusha
arpl
sti
scas
push
outs
push
mov
js
mov
push
adc
sub
ret
mov
push
daa
sub
nop
pop
aaa
pop
das
pop
cmp
add
das
push
das
in
adc
jmp
jbe
jbe
pushf
out
outs
daa
movs
cmps
push
in
push
int3
cmps
cmp
mov
push
hlt
in
mov
jg
fnstenv
fdiv
mov
pusha
mov
sub
das
inc
sbb
mov
rol
push
pop
jg
mov
fistp
test
setg
xor
jmp
test
hlt
push
mov
shl
xor
(bad)
cld
fimul
test
pop
jl
out
pusha
xor
push
cmp
and
mov
clc
repnz
push
into
shl
xchg
and
push
fs
aaa
adc
xchg
push
mov
int
shr
xor
xchg
pop
jmp
mov
mov
pop
xlat
xor
push
call
setl
in
jge
ds
mov
push
xor
adc
xchg
push
or
push
dec
cwde
inc
popf
hlt
ins
(bad)
inc
sahf
aaa
pop
cwde
movs
push
test
data16
pop
stos
dec
lods
fsubr
fisub
push
enter
mov
jl
int
ret
aam
(bad)
xor
pop
retf
mov
cmp
jns
fnsave
push
xor
push
push
adc
push
push
nop
ss
out
cmp
ds
je
shr
in
cdq
jbe
das
xor
pop
pop
jl
ins
fld
sub
push
pushf
lock
or
push
js
sub
test
imul
lahf
aaa
je
popa
add
fild
in
out
jbe
int3
out
out
call
ins
xchg
jbe
pop
pusha
les
pop
push
popf
popf
jge
inc
mov
xchg
mov
sar
not
mov
clc
xor
jmp
and
test
fwait
in
ins
pop
sub
or
es
movs
cmp
inc
out
push
ins
mov
cmps
or
jbe
pop
jnp
addr16
adc
push
loopne
test
fdiv
dec
aaa
pop
cmp
pop
addr16
lahf
pop
jo
das
jge
ins
cmp
movs
push
fsub
lock
cld
fstp
ja
in
fild
shl
loope
push
mov
push
in
outs
mov
push
and
jmp
ja
dec
cmp
call
sbb
mov
xor
pop
js
pop
nop
push
lods
repz
push
les
pop
pusha
(bad)
push
js
fcom
mov
into
hlt
aaa
pop
(bad)
push
pop
(bad)
into
mov
out
jb
mov
pshufw
retf
sar
push
int3
push
pushf
loopne
int
fs
iret
mov
inc
pop
into
(bad)
push
fbstp
repnz
mov
push
pop
shl
mov
cmps
stc
push
sub
xchg
aaa
lock
mov
sar
push
mov
pop
aaa
fld
push
das
paddq
bound
add
pop
pop
sysret
ins
sbb
daa
pop
int3
outs
fdiv
data16
push
push
add
push
fcom
pop
jnp
outs
mov
mov
push
hlt
pop
fnsave
add
les
add
pop
and
pop
nop
pop
test
jbe
imul
pop
loopne
cld
jb
xor
sbb
inc
pop
js
jb
jb
mov
div
lock
adc
wrmsr
push
adc
sbb
pop
ins
cs
or
mov
rol
pop
addr16
rcr
jge
add
push
sbb
pop
cmp
mov
pop
pusha
nop
in
xor
jo
nop
adc
mov
loopne
inc
clc
push
push
popf
out
pop
int3
push
pusha
adc
je
movs
lahf
ja
xchg
adc
pop
adc
push
test
lock
daa
add
aas
lods
imul
das
mov
les
add
pop
adc
dec
push
dec
push
aam
fwait
push
push
in
out
sbb
push
inc
pop
stos
jge
mov
lods
or
pop
pop
mov
mov
push
nop
lock
push
loopne
inc
pop
adc
push
mov
cmp
je
daa
fmul
adc
pop
xor
mov
jnp
jl
xchg
push
lock
pop
(bad)
out
dec
in
or
daa
nop
push
rol
hlt
das
scas
scas
sbb
ds
sub
push
sbb
les
js
out
mov
test
fcom
cld
rcl
test
pushf
daa
pop
mov
cmp
and
or
inc
sub
ror
and
sbb
out
popa
xor
daa
scas
imul
sub
sub
sub
push
push
sub
in
in
aam
and
push
add
clc
push
adc
jns
ins
addr16
hlt
xor
cmp
out
(bad)
stc
cmp
out
cmp
mov
xor
ds
mov
xor
fiadd
mov
out
cmp
ds
cmp
stos
les
dec
push
sbb
fsub
jns
stc
inc
dec
sub
mov
out
sahf
int3
jbe
pusha
push
bsf
push
mov
and
pop
mov
cmp
mov
(bad)
je
cmovl
pop
retf
call
das
add
dec
(bad)
jg
repz
sub
arpl
cwde
push
mov
into
push
jmp
cwde
aas
in
lahf
out
test
sahf
push
add
dec
cmp
pop
cli
xor
sbb
fiadd
sbb
(bad)
data16
and
push
xor
or
mov
cmp
sar
adc
dec
out
adc
mov
inc
ss
mov
inc
inc
int
fldcw
inc
or
mov
pop
jp
mov
push
test
dec
xlat
(bad)
sbb
add
je
ja
xor
fst
in
dec
verw
mov
jb
dec
dec
sub
sar
cmp
fucomi
xor
mov
and
push
movs
inc
cmps
mov
fcom
push
push
lods
push
cmps
ss
int3
push
push
and
lahf
or
mov
pop
pop
push
addr16
or
mov
in
pop
in
push
sbb
pop
(bad)
push
or
jo
dec
ins
daa
test
push
sbb
scas
movs
pop
je
mov
mov
push
fadd
pop
xchg
aaa
nop
pop
push
(bad)
(bad)
(bad)
out
xchg
pop
or
outs
imul
gs
dec
outs
jae
popa
ins
std
neg
jmp
jb
pop
push
je
ins
xor
gs
push
jns
gs
cs
jns
push
dec
cs
sub
dec
fs
popa
jae
inc
outs
fdiv
outs
mov
or
inc
ins
outs
(bad)
ins
or
push
je
mov
fist
pusha
ins
push
inc
dec
push
add
mov
fstp
arpl
outs
in
arpl
jge
mov
aaa
inc
gs
ins
je
psubw
mov
or
dec
adc
push
push
dec
jg
pop
jbe
and
popa
jb
cwde
jp
push
imul
cmp
jae
push
dec
(bad)
adc
mov
mov
ins
cs
js
xor
xchg
mov
sbb
inc
fs
pop
dec
ins
ret
ins
or
popa
addr16
ins
jo
sub
push
mov
imul
ins
adc
sbb
outs
jne
popa
mov
shr
push
imul
jnp
hlt
mov
jbe
pop
adc
jae
ss
loop
jae
std
adc
push
sbb
jne
mov
gs
push
inc
shl
mov
mov
mov
imul
imul
dec
bound
pop
jbe
adc
inc
movs
outs
outs
adc
or
not
push
dec
inc
unpckhps
add
js
dec
imul
cmp
(bad)
or
mov
(bad)
(bad)
cld
jae
outs
pop
pop
adc
adc
or
popa
fiadd
dec
push
mov
dec
push
sbb
ins
adc
mov
loopne
fidiv
pop
popa
xor
push
inc
inc
mov
leave
test
sbb
or
push
xor
inc
arpl
pop
xchg
ins
pusha
dec
sbb
test
or
arpl
movs
imul
por
fwait
adc
push
fst
call
adc
or
mov
cmp
push
push
inc
out
movs
push
pop
push
adc
sub
iret
cmps
(bad)
es
push
aas
or
jne
pop
pop
sub
and
push
movaps
cmp
mov
popf
jo
inc
adc
mov
mov
jb
imul
sbb
push
adc
sbb
ins
pop
ins
mov
dec
or
jo
or
(bad)
js
add
fs
inc
je
push
xchg
pop
adc
loopne
pop
xchg
fldcw
cmp
mov
inc
inc
inc
adc
or
gs
fwait
mov
mov
js
rcl
add
cmp
ds
mov
push
fs
mov
imul
js
add
push
shl
push
inc
fs
cmps
jbe
and
inc
or
gs
jne
bound
ret
mov
mov
sub
cli
jnp
loopne
push
push
push
clc
sbb
sar
cmp
cmp
adc
push
arpl
xor
sbb
jnp
mov
push
jo
cmp
inc
push
ret
dec
dec
dec
test
push
dec
dec
dec
inc
pop
xor
jp
ins
jl
or
test
add
jl
jo
push
arpl
imul
sub
push
xchg
push
sub
sbb
adc
push
arpl
(bad)
fisttp
cs
sbb
inc
ret
or
sbb
mov
xchg
mov
retf
mov
arpl
iret
push
add
cmp
icebp
dec
imul
sub
mov
mov
add
push
or
pop
cmps
ins
add
je
call
fidivr
and
or
add
jnp
js
scas
fmul
jae
arpl
cmp
leave
push
lods
xchg
dec
(bad)
imul
or
lods
inc
mov
add
ret
ins
push
adc
adc
jge
pop
dec
dec
mov
mov
enter
inc
jns
add
loope
fs
or
push
fnsave
out
push
adc
add
jo
into
bnd
cmps
mov
or
cmp
ret
or
push
call
daa
sbb
add
xor
jbe
(bad)
stos
or
mov
sbb
or
mov
out
jo
push
xor
jmp
emms
ret
inc
sbb
jb
or
loopne
mov
mov
ins
xchg
inc
mov
push
dec
ss
rol
sbb
popa
push
push
sbb
add
inc
aaa
bound
ret
add
cmp
out
sbb
add
push
add
and
mul
push
push
sub
ins
mov
push
xchg
bound
aaa
inc
sub
push
cmp
push
mov
sub
es
sub
inc
xchg
xchg
cld
dec
cmp
dec
les
dec
push
pusha
add
fimul
push
sbb
mov
jbe
pop
ins
mov
sbb
ins
adc
popa
adc
neg
outs
xor
in
js
fs
adc
es
and
(bad)
mov
push
bound
ret
adc
inc
je
push
cwde
cmp
or
jbe
imul
lea
stc
daa
pop
dec
jne
lock
push
mov
mov
loope
(bad)
lock
jecxz
push
push
inc
add
outs
es
lds
dec
jg
call
sbb
push
push
inc
inc
dec
pop
adc
dec
jno
sbb
xor
aas
adc
push
test
mov
inc
jo
or
xor
pop
dec
push
push
mov
jb
cwde
dec
mov
sbb
sbb
sahf
push
dec
je
adc
shl
inc
sbb
jae
inc
inc
mov
(bad)
pop
rcl
sbb
movs
jbe
out
ret
xchg
adc
add
sub
mov
sbb
push
sub
not
pop
mov
and
(bad)
cdq
cmp
jbe
pop
cwde
add
in
add
add
inc
dec
inc
fs
pop
fucomi
or
js
outs
dec
pop
es
cmps
leave
adc
and
loop
je
ds
fcmovnb
push
sub
outs
fs
test
out
into
mov
pop
ins
adc
sub
jl
dec
fs
(bad)
imul
xor
xor
adc
pop
fsubrp
ret
inc
inc
les
jo
loope
repz
pop
jae
mov
stos
bound
mov
or
push
push
in
sbb
inc
fwait
jno
aaa
sbb
push
push
push
dec
icebp
sub
jns
inc
shl
mov
push
dec
dec
ss
adc
jae
les
into
inc
imul
fdivr
ins
push
sbb
and
mov
push
push
xchg
scas
daa
adc
nop
gs
scas
and
jge
xchg
push
or
xchg
adc
push
bound
gs
jg
outs
pop
or
push
shr
js
dec
pop
bound
sbb
and
pop
or
aam
(bad)
lock
bound
pop
or
arpl
adc
xor
push
sbb
les
jmp
sbb
dec
sub
out
sub
sbb
xor
jns
adc
add
and
sub
(bad)
sub
jae
jle
push
repz
rcr
jo
add
or
ja
add
add
dec
inc
add
and
out
out
mov
pop
adc
dec
iret
xchg
mov
or
ins
neg
fdiv
or
ins
mov
ja
cmp
adc
and
rcl
push
cmp
loopne
jg
aas
jo
dec
and
addr16
lock
cmp
test
add
into
fs
push
jo
or
or
das
in
div
shl
cs
adc
ins
cdq
inc
addr16
idiv
cmp
test
adc
test
(bad)
std
fistp
add
ret
nop
add
sub
cmp
inc
add
inc
and
xor
mov
jae
mov
(bad)
push
sbb
push
cld
add
fnstsw
pop
add
adc
cmp
in
sti
out
mov
mov
and
mov
popf
retf
mov
mov
or
mov
sbb
shl
std
jae
rcr
cmp
xchg
mov
jg
mov
fnsave
cmp
in
push
jg
adc
pop
inc
jle
mov
mov
mov
or
and
lea
or
jbe
or
dec
add
outs
add
mov
push
ins
push
cmp
(bad)
jle
xchg
mov
and
jae
jae
aas
clc
call
push
and
jg
jb
je
dec
je
sub
and
es
inc
add
xchg
mov
rol
jb
and
cmp
mov
hlt
daa
push
mov
fsubr
cmp
fsub
and
daa
fxch
inc
adc
pop
je
and
jo
sbb
and
dec
ror
add
sbb
adc
push
into
or
aaa
mov
dec
jmp
and
mov
push
cwde
ret
(bad)
loopne
mov
add
pop
xor
scas
call
xor
jl
push
test
mov
and
inc
pop
or
cmp
loop
je
mov
je
cs
cld
jge
jg
jne
mov
sbb
or
sahf
ds
shr
push
rcl
mov
add
stos
push
shr
loopne
push
sbb
cmc
aaa
mov
adc
cmps
ret
dec
add
clc
pop
ret
jle
xchg
imul
dec
or
test
cmp
out
ret
xor
es
xchg
xor
in
push
add
pop
in
sub
inc
and
iret
out
inc
mov
adc
xor
jecxz
shl
push
mov
mov
lock
push
pop
ja
sbb
xor
xor
jl
and
fdivr
or
neg
mov
xor
sbb
pop
mov
mov
in
(bad)
dec
pusha
(bad)
popf
jp
xor
add
in
jb
jnp
ins
cs
xlat
mov
and
sbb
std
push
add
ret
loope
pop
imul
or
push
mov
fstp
scas
movs
es
add
bound
jmp
mov
shl
inc
cld
mov
test
in
(bad)
sti
je
sub
and
mov
jmp
add
sahf
jge
mov
mov
inc
hlt
mov
jl
ja
imul
lock
pop
inc
xor
push
dec
out
inc
mov
add
or
and
or
pop
ins
mov
lock
(bad)
or
xchg
add
inc
push
aam
mov
clc
mov
cmp
fadd
test
mov
jb
mov
add
pop
dec
push
inc
jo
cdq
test
cmp
inc
sbb
outs
lock
cmps
or
lock
pop
push
and
adc
xchg
int
mov
test
xor
int
push
adc
adc
adc
int
adc
sbb
pop
fsub
addr16
mov
dec
sbb
adc
mov
mov
iret
and
mov
leave
push
test
cld
test
aaa
inc
push
bound
outs
pop
les
and
add
sub
xor
std
(bad)
and
clc
inc
mov
enter
mov
loopne
mov
les
bound
sub
cmovo
aas
adc
cmp
out
mov
dec
mov
movs
and
add
in
cmp
cmp
clc
out
into
add
sub
cmp
enterw
adc
add
cmp
pushf
adc
add
sahf
cmp
pop
adc
adc
adc
in
xchg
or
or
or
or
sbb
push
mov
and
in
xchg
daa
and
adc
adc
cmp
repnz
xor
leave
xchg
daa
dec
xor
xor
sbb
repnz
sbb
sbb
jns
es
push
adc
inc
and
pop
cmp
jl
clc
mov
mov
push
idiv
push
not
pmaxsw
cmp
neg
cmp
not
not
pop
mul
push
not
not
imul
sar
adc
adc
adc
mul
push
fcom
not
not
sar
adc
pmaxsw
adc
adc
adc
push
fadd
cmp
adc
adc
jo
out
rcl
adc
adc
fadd
adc
popf
push
mul
adc
adc
adc
int
xchg
adc
adc
popf
inc
addr16
dec
pop
fsub
cli
adc
adc
hlt
mov
nop
lock
aad
lock
push
cmp
mov
call
push
fist
or
(bad)
(bad)
ficom
mov
in
pop
(bad)
pop
dec
jecxz
ds
mov
add
in
in
inc
jl
jne
setbe
cdq
dec
mov
icebp
test
cmp
setge
push
add
add
inc
and
add
or
and
int
pop
in
cmp
ret
xchg
ins
sar
jmp
xchg
sub
pushf
jle
pusha
mov
sbb
and
mov
adc
pop
dec
stc
lahf
push
repnz
jo
mov
add
mov
push
or
fsub
pusha
and
pop
fs
push
push
or
ins
jae
repz
scas
jne
loopne
mov
dec
pop
dec
push
mov
enter
movs
sbb
cld
into
and
test
iret
and
rol
jmp
and
adc
in
or
add
xchg
mov
idiv
clc
mov
hlt
or
loope
jbe
test
push
in
ds
mov
xchg
test
adc
add
adc
mov
xor
jl
push
xchg
(bad)
aam
mov
movs
sub
adc
mov
arpl
jg
jle
aam
ror
cwde
xchg
cdq
sbb
push
fs
inc
cmps
sbb
sub
push
fs
xor
xor
cmp
push
jle
dec
mov
mov
fcom
add
sub
les
(bad)
mov
and
mov
das
test
js
mov
loope
js
jne
mov
test
pop
push
iret
push
xchg
or
test
xchg
std
cmp
setae
sahf
sbb
pusha
sbb
pop
ja
push
inc
mov
push
neg
push
mov
and
push
stos
int3
out
out
sar
cmps
rcl
push
out
push
and
and
fs
clc
inc
cwde
jmp
sbb
inc
xor
inc
add
aas
pop
mov
nop
xor
inc
lods
pop
cmp
fs
ins
inc
mov
retf
cmp
and
adc
fidivr
sub
mov
out
aas
xor
or
jbe
or
cli
not
dec
daa
push
stos
push
loopne
mov
push
dec
pushf
dec
sahf
push
or
fiadd
dec
and
cmc
add
cmp
mov
or
out
mov
add
inc
add
xlat
out
outs
add
or
push
push
add
aas
mov
or
mov
aas
das
push
or
pop
mov
es
adc
arpl
mov
push
not
jg
mov
jb
mov
adc
call
in
in
fld
or
clc
retf
push
into
in
test
or
and
mov
movs
cmp
dec
(bad)
sub
scas
nop
inc
xlat
push
aas
loope
ret
loope
add
dec
sbb
jae
xor
cs
add
jb
fs
push
mov
jo
xchg
fs
in
enter
xchg
mov
inc
fmulp
icebp
in
test
pop
push
mov
jo
(bad)
scas
dec
imul
inc
and
pop
adc
mov
fs
add
add
jge
mov
inc
lock
pop
cmp
leave
loop
(bad)
rcl
shl
and
mov
enter
enter
outs
fdivr
push
sbb
pop
xor
inc
adc
xor
and
repnz
xor
not
mov
push
add
stc
retf
ltr
adc
inc
xlat
dec
cmp
out
sbb
push
pop
adc
out
push
cmp
pop
fcom
dec
sub
mov
enter
add
pop
stc
(bad)
sbb
int3
push
jae
sbb
push
xor
or
adc
mov
mov
cmp
push
cs
jnp
push
dec
jne
lea
inc
jle
outs
movs
mov
popf
fdivr
adc
mov
fstp
sbb
movs
fdivr
mov
sub
loope
push
and
mov
mov
jge
jbe
into
loop
pusha
jb
sub
mov
inc
outs
mov
push
addr16
stos
js
out
mov
sbb
mov
or
or
push
dec
inc
push
push
push
sbb
lea
retf
cs
ja
inc
add
mov
std
sub
push
jg
cmc
push
div
add
mov
push
icebp
cmps
xor
repz
push
stos
das
sub
jnp
in
loopne
in
push
out
push
out
pop
in
mov
das
call
jmp
cs
mov
out
out
push
mov
jl
loopne
push
loop
jecxz
cs
xor
mov
fsubr
push
fild
fidiv
mov
(bad)
fiadd
fld
fadd
lock
lea
sub
add
idiv
xchg
enter
movs
add
push
mov
add
mov
pusha
inc
test
test
test
lods
sti
dec
enter
cdq
add
es
pop
cmps
dec
cwde
mov
jb
jns
xchg
add
dec
popa
fld
dec
inc
add
in
inc
or
pop
or
(bad)
repz
dec
sbb
sbb
mov
adc
sbb
and
imul
ja
and
pop
pop
and
push
mov
mov
cmp
xor
push
movs
pop
pop
pop
push
add
jb
push
and
jae
mov
mov
dec
adc
cld
jo
stos
push
fcos
sahf
add
fmul
clc
or
mov
dec
rol
and
and
mov
int
into
cdq
xchg
xchg
dec
and
xor
cmp
jp
sti
dec
adc
dec
ss
cmp
aad
(bad)
adc
add
pop
jecxz
pop
pop
and
mov
ss
xor
adc
mov
xor
push
mov
mov
pop
xor
dec
popf
cmc
movs
push
aaa
dec
addr16
aam
sbb
inc
and
mov
push
mov
cmp
dec
out
daa
mov
mov
cmp
ins
pop
nop
xor
mov
or
sbb
mov
je
pop
ror
dec
inc
(bad)
shr
push
add
cmp
adc
adc
icebp
push
add
pop
mov
jne
fcomp
mov
bswap
aas
adc
sub
movlps
lds
and
xchg
cmps
shl
sti
out
jbe
aam
fadd
pusha
jp
imul
sub
fsubr
jbe
and
mov
pop
into
sti
or
adc
lods
ja
inc
in
iret
pop
addr16
sar
xor
loopne
dec
call
fstp
aaa
in
(bad)
fdivr
imul
mov
sahf
in
ret
jae
xor
jl
adc
cmp
test
or
in
adc
or
in
inc
push
adc
sbb
inc
push
cmp
and
inc
push
cmp
sub
xor
cmp
nop
inc
cmp
adc
dec
xchg
dec
test
sbb
cmp
lods
push
mov
daa
pop
jb
and
and
jns
sbb
js
adc
jo
into
jae
mov
add
scas
mov
scas
outs
movs
mov
popa
push
mov
add
fmul
sbb
not
push
adc
adc
out
push
movs
cmp
or
inc
movs
mov
sbb
xchg
data16
adc
mov
adc
mov
lods
adc
arpl
mov
xor
mov
push
sub
and
mov
int
adc
fs
dec
adc
sub
enter
aam
inc
mul
jge
push
gs
xor
nop
xor
jae
out
loopne
mov
ins
hlt
adc
loopne
inc
addr16
xor
lock
pop
mov
cwde
sbb
sub
call
and
cmp
jle
xlat
adc
dec
push
adc
adc
sub
jne
adc
cdq
and
sub
pop
xor
pop
jbe
cli
les
push
jae
call
cmp
stos
les
cmp
stos
shr
sti
jge
xor
mov
shl
test
mov
jl
dec
pop
(bad)
push
dec
or
fisub
jle
pop
daa
add
pcmpeqw
push
and
xor
mov
cli
fs
inc
add
add
mov
sahf
push
push
and
add
jle
outs
fadd
cmp
shl
push
das
add
xor
outs
xchg
jb
push
push
not
outs
bound
pop
addr16
or
or
bound
dec
sbb
out
addr16
push
dec
sbb
push
inc
adc
and
inc
aaa
add
push
imul
(bad)
rcr
lahf
and
push
xor
mov
xor
cmp
xor
cwde
cdq
xor
mul
out
add
xor
sub
test
out
cs
ss
and
or
push
inc
xor
dec
or
mov
xlat
rol
sbb
xchg
fwait
add
or
jae
ds
pusha
jbe
push
mov
xchg
data16
stos
dec
adc
retf
or
lods
xchg
faddp
mov
or
dec
mov
out
jle
pop
lahf
mov
(bad)
cmp
push
mov
into
cmp
fisub
movs
inc
outs
xchg
iret
add
dec
push
pop
fs
mov
mov
das
or
dec
mov
mov
jo
sbb
mov
dec
adc
mov
dec
mov
xchg
adc
xchg
mov
jno
mov
jo
mov
push
lea
mov
loopne
dec
cld
mov
loopne
in
cmp
xlat
shl
add
jmp
push
shl
movzx
cmc
nop
push
test
pop
call
shr
xchg
push
sbb
sti
or
sahf
add
mov
xor
fwait
adc
add
ret
dec
mov
xrelease
push
pop
lsl
je
shl
mov
sub
adc
mov
cmp
es
mov
and
ja
dec
ret
or
das
sbb
and
inc
dec
mov
fwait
push
(bad)
in
stos
jmp
imul
cmp
inc
dec
jg
cmp
outs
gs
mov
mov
pop
and
inc
mov
and
push
cmp
(bad)
adc
dec
jp
sub
xchg
xchg
dec
addr16
sbb
add
add
loope
xor
rol
jg
setl
das
sub
les
cmps
pop
mov
lods
popf
jmp
fdivr
lock
icebp
sbb
and
lock
in
mov
ret
sar
rol
xchg
into
xor
or
popf
push
icebp
fist
dec
sahf
and
call
cmp
jle
jne
push
stos
mov
stc
retf
dec
push
loopne
int3
outs
cld
dec
or
std
icebp
icebp
das
mov
xor
call
add
lock
pop
push
fcom
mov
inc
mov
sub
push
jg
mov
xchg
jg
mov
sbb
and
fsub
mov
or
call
inc
loopne
popa
or
lock
jno
add
jbe
inc
loope
push
clc
cmp
adc
pop
jb
(bad)
mov
xor
mov
sbb
clc
pop
ins
and
int3
ds
adc
out
fbld
pop
and
ss
or
into
repz
mov
jbe
nop
daa
sbb
mov
adc
xchg
or
add
jbe
out
outs
cmp
mov
aaa
leave
push
or
push
cmp
test
mov
mov
in
loopne
pop
push
dec
push
push
mov
call
adc
adc
jmp
cwde
push
lods
addr16
adc
jp
jl
out
push
daa
inc
les
xor
popa
inc
fidiv
iret
cld
xor
es
fistp
xor
adc
jp
xor
bnd
push
loopne
loopne
imul
loopne
mov
mov
(bad)
fmul
xor
mov
jge
inc
push
mov
jecxz
push
ja
sti
mov
jmp
jne
stc
test
push
sti
inc
fs
mov
test
pop
sbb
and
mov
ins
or
int3
mov
fcom
ret
test
je
int
mov
adc
es
dec
sbb
push
jns
in
add
popf
sti
push
call
fcmovb
lods
pushf
or
fcmovb
dec
rcl
cmp
xor
or
loopne
not
sub
mov
jmp
push
call
cmps
cmp
mov
add
clc
adc
(bad)
mov
call
mov
sub
mov
iret
sbb
push
stos
rcr
aas
outs
lock
(bad)
push
jmp
pop
call
xchg
add
mov
out
mov
push
add
dec
or
xor
data16
mov
push
xor
xchg
adc
les
ds
xchg
dec
pop
cmp
test
push
or
and
je
fcomp
dec
add
adc
pop
pop
loope
and
add
int
(bad)
jmp
into
movs
cmp
jne
xchg
dec
inc
add
push
or
dec
cmp
repz
pusha
ins
jl
or
add
add
(bad)
(bad)
mov
add
arpl
add
aas
sub
ficomp
mov
push
aas
xor
sbb
aas
cmp
add
pusha
out
aas
pop
add
dec
pop
test
pop
add
adc
and
movs
fsub
push
aas
add
in
or
adc
mov
ficom
add
adc
mov
adc
sub
add
adc
pusha
imul
xchg
add
pop
mov
aas
and
and
leave
inc
inc
pusha
inc
jb
pop
and
loopne
inc
jnp
add
inc
aas
pop
and
leave
jo
loopne
sbb
add
pop
in
jo
shl
mov
cmp
add
leave
lock
pop
add
ficom
sub
test
adc
sar
or
in
add
add
add
mov
push
xor
pop
add
mov
cmp
sbb
pop
sub
push
popa
push
and
out
retf
int3
imul
(bad)
dec
leave
xlat
iret
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
in
in
out
outs
ret
ret
sub
stc
rol
(bad)
aas
adc
popa
das
sbb
add
pushf
or
and
and
adc
jnp
add
mov
imul
stc
add
jg
retf
xchg
and
inc
mov
call
push
jle
test
out
sub
jecxz
(bad)
out
jle
mov
lds
mov
jbe
imul
cmp
(bad)
out
call
mov
bound
and
rep
jg
pop
mov
xlat
fadd
lods
outs
xor
xchg
push
or
push
push
fwait
dec
mov
ret
inc
mov
push
pop
test
enter
mov
(bad)
jmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
inc
dec
addr16
leave
repnz
hlt
xchg
and
cld
gs
sahf
mov
sub
inc
popf
imul
pop
js
inc
mov
stos
mov
cmp
or
(bad)
(bad)
(bad)
(bad)
mov
pop
out
sub
imul
(bad)
div
jl
xor
cmp
call
(bad)
jmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
(bad)
call
or
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
mov
loope
jp
iret
inc
bound
ds
(bad)
(bad)
(bad)
dec
cmps
scas
mov
pop
or
add
cmp
xor
in
cmp
call
mov
mov
mov
popa
mov
fsub
addr16
repz
mov
(bad)
call
sub
and
and
outs
bound
xor
jb
outs
jb
push
jne
mov
imul
add
and
loope
jmp
sahf
xor
xor
inc
inc
inc
inc
inc
push
sub
hlt
inc
push
add
dec
les
or
cmp
adc
sub
test
repz
nop
push
pushf
pop
jge
iret
repz
mov
scas
sahf
out
(bad)
aam
and
adc
out
ds
clc
sbb
repz
repz
sub
cmp
inc
pop
push
sahf
aaa
clc
push
rcr
or
push
sbb
pop
les
out
mov
push
les
push
rcr
lods
jnp
adc
loopne
push
in
pop
sbb
cld
pop
daa
out
jae
push
or
push
aam
push
cmp
jae
jnp
pop
and
xor
push
inc
pop
loope
pop
daa
aam
cvttps2pi
movaps
jmp
mov
pcmpgtb
adc
xor
fistp
ins
dec
hlt
jg
pop
add
fistp
push
ret
cmp
hlt
das
push
das
mov
jg
push
iret
cmp
cmp
inc
push
das
push
(bad)
int
ret
push
fild
unpcklps
jg
pop
pop
ja
fild
push
pop
cs
mov
cmp
inc
outs
push
xchg
xchg
fadd
jg
jo
pop
mov
adc
(bad)
adc
fild
fadd
fcomp
add
scas
cmp
adc
or
ficom
sbb
or
add
adc
and
adc
add
ja
xchg
push
sbb
sbb
fistp
adc
(bad)
(bad)
sbb
adc
std
dec
sub
sbb
pand
sbb
ins
mov
mov
add
push
or
dec
mov
mov
dec
mov
mov
mov
push
mov
mov
pop
mov
mov
ins
mov
sbb
je
xor
push
bound
les
and
push
push
icebp
aaa
mov
pop
and
and
and
ja
ss
add
or
movd
jbe
es
(bad)
bt
movntps
shl
adc
in
push
pusha
add
or
push
mov
sbb
adc
sbb
mov
xchg
ja
cwde
xchg
pop
push
xor
sahf
out
sahf
xor
ss
cmp
xor
jae
inc
push
add
dec
push
dec
xor
xor
push
dec
push
dec
push
dec
push
dec
addr16
lods
add
mov
add
xor
xor
dec
push
dec
push
dec
push
pushf
xor
xor
dec
push
dec
ror
inc
push
add
dec
push
dec
add
xor
push
dec
push
dec
push
dec
sbb
addr16
cmp
mov
add
xor
xor
dec
push
dec
push
dec
push
dec
out
xor
arpl
ror
xor
dec
push
dec
push
dec
push
dec
cmp
add
stos
arpl
shl
xor
mov
add
dec
push
xor
xor
dec
rep
arpl
pushf
xor
ror
add
pop
xor
dec
cmp
stos
into
cmp
add
ror
addr16
add
mov
add
pushf
fist
lahf
sub
add
inc
inc
or
sahf
inc
inc
jae
push
xor
xor
jle
jle
jle
jle
test
jle
cdq
cdq
cdq
cdq
push
jle
jle
jle
jle
push
cwde
cdq
push
jle
jle
int3
int3
int3
int3
push
jle
jle
jle
jle
sub
int3
push
jle
jle
data16
jle
jle
jle
jle
sbb
pushw
jle
jle
xor
xor
push
jle
jle
push
xor
push
jle
jle
cdq
cdq
cdq
pop
push
jle
jle
jle
add
cdq
cdq
jle
jle
jle
int3
int3
int3
sub
jle
jle
jle
add
int3
jle
jle
jle
data16
push
jle
jle
jle
shl
jle
jle
jle
xor
xor
add
jle
jle
lock
xor
jle
jle
jo
mov
xor
xor
(bad)
jae
data16
push
add
jle
jle
loope
fs
jle
stos
loopne
popa
loope
mov
pusha
loopne
(bad)
jae
int3
int3
pushf
push
add
jle
jle
ret
ret
enter
and
xor
rol
(bad)
jae
xchg
cdq
cdq
cmp
jle
jle
jle
xchg
stos
xor
inc
retf
push
out
add
jae
jle
jle
adc
mov
fwait
and
or
cmp
add
arpl
jae
jb
gs
jle
or
sbb
mov
cmp
dec
rcr
jecxz
repz
adc
mov
es
push
add
test
pop
cmp
aaa
ins
and
(bad)
loopne
cmp
aas
lock
dec
add
and
iret
repz
lods
and
push
mov
repz
fsub
in
hlt
jns
out
cld
add
or
sbb
jns
out
sub
cmp
sahf
out
sahf
dec
push
pop
fs
je
sahf
out
jl
mov
movs
lods
mov
les
jo
int3
aam
cmp
jge
xchg
add
push
test
lahf
out
jbe
push
cwde
fadd
or
inc
addr16
jl
mov
mov
fsubp
pop
add
outs
push
jl
inc
ret
jns
fst
push
push
pop
dec
xor
jnp
push
pop
or
xlat
pop
add
rcl
sgdtd
adc
add
jg
inc
cwde
or
ja
push
inc
add
add
adc
sbb
add
add
(bad)
ja
pushf
xor
inc
and
cwde
adc
(bad)
pop
or
push
or
jbe
inc
inc
jle
push
pop
or
das
mov
push
add
add
add
cmp
add
push
add
fnstsw
das
jbe
pop
pop
pop
fisubr
add
or
nop
idiv
(bad)
das
or
or
or
or
add
daa
adc
lock
add
add
outs
jns
out
sub
dec
push
sahf
out
fdiv
adc
push
dec
jns
out
sbb
in
add
sbb
push
xchg
(bad)
stc
sub
adc
sbb
xchg
push
and
jb
add
pushf
or
pop
fwait
nop
cmps
enter
jns
cmp
repz
push
push
(bad)
aam
hlt
pop
in
or
mov
(bad)
pop
in
push
mov
loopne
call
sbb
inc
aas
push
mov
inc
js
(bad)
out
(bad)
out
cs
push
movs
daa
fisttp
push
mov
neg
push
in
lock
pop
repnz
and
outs
push
adc
test
enter
pop
jae
das
clc
es
jns
daa
ret
inc
push
test
xor
xchg
pop
inc
dec
daa
cmp
lds
fcomp
sbb
push
pop
mov
lods
push
enter
outs
test
lock
(bad)
mov
jl
es
cs
cs
adc
push
das
test
in
inc
dec
int3
ins
dec
add
in
or
jg
enter
inc
pop
adc
test
mov
js
mov
jnp
out
cwde
test
enter
xchg
(bad)
(bad)
mov
pusha
fsub
fcomp
lock
xor
pop
js
dec
jl
and
cmp
in
sar
push
cld
push
lock
add
push
sbb
iret
repz
inc
push
push
and
push
cvttps2pi
pop
sbb
pop
xchg
jl
aas
mov
scas
or
fsubr
ins
in
jbe
fsub
pmulhuw
jg
fisubr
mov
(bad)
add
outs
mov
sbb
xchg
aas
pop
mov
pop
movs
aas
add
je
xchg
out
das
test
jl
fld
js
mov
das
aas
fmul
add
js
lods
mov
ds
push
adc
pop
push
mov
test
aam
in
rol
mov
fadd
add
mov
pop
scas
addr16
fiadd
daa
pop
pop
pop
mov
inc
pop
mov
pop
in
scas
ror
shl
xchg
pop
or
scas
les
adc
scas
dec
in
inc
sub
mov
sub
aas
pop
sbb
pop
pop
pop
rol
into
daa
pop
packuswb
and
test
pop
pop
pop
call
lahf
outs
mov
pop
mov
push
or
adc
aas
pop
mov
mov
call
mov
inc
pop
add
adc
rol
pop
adc
add
(bad)
div
cld
jle
push
xchg
push
add
mov
fdiv
es
aaa
clc
add
pop
xor
sub
pop
sahf
xlat
pop
cmc
xchg
into
pop
clc
outs
or
mov
(bad)
or
and
out
dec
pop
xor
daa
pop
mov
fmul
pop
push
fdivr
into
popf
scas
sysret
je
inc
add
jl
inc
ds
lods
add
add
push
push
inc
jb
add
adc
add
inc
mov
and
adc
jmp
xchg
jg
pop
add
pusha
mov
add
bound
push
add
jp
fild
pop
(bad)
pop
jmp
sar
add
xchg
test
sub
add
retf
xchg
adc
jmp
fimul
fdiv
or
cld
mov
jmp
nop
fs
jecxz
cli
jl
aas
jno
inc
(bad)
(bad)
(bad)
(bad)
mov
pop
scas
scas
stos
movs
in
bound
dec
mov
mov
push
xor
cmp
jmp
(bad)
(bad)
call
mov
mov
dec
jge
dec
pushf
sbb
aam
mov
push
jp
inc
inc
(bad)
(bad)
(bad)
call
or
dec
and
(bad)
dec
dec
test
push
pop
dec
and
jmp
lds
push
cmps
clc
push
ins
add
add
dec
push
push
popa
out
push
add
stc
fiadd
iret
inc
clc
push
sub
fnstsw
cmps
pop
cmp
jne
ror
mov
push
std
mov
jge
out
sar
in
stc
adc
sahf
out
fimul
div
out
cmc
xchg
hlt
mov
out
repnz
jg
aad
jns
cmps
push
lock
pop
out
sahf
out
sahf
js
nop
in
mov
add
out
jns
jmp
mov
xor
mov
mov
test
adc
aas
add
aas
cmp
imul
sbb
add
sahf
jmp
(bad)
push
mov
adc
push
mov
mov
aas
add
aas
push
call
fisttp
add
jle
and
cmps
retf
dec
push
out
out
sti
push
test
push
dec
mov
movs
push
xchg
inc
test
outs
(bad)
cld
push
scas
jmp
(bad)
pop
call
sbb
jo
loope
add
pop
inc
push
pop
sti
fld
dec
jmp
push
add
or
push
sbb
push
into
repz
sbb
mov
jo
push
dec
push
(bad)
sub
jns
ds
sbb
(bad)
(bad)
fild
ins
push
(bad)
out
sahf
addr16
hlt
jns
(bad)
push
mov
fmul
push
xor
cmp
cmp
push
ficomp
movs
repz
ret
push
and
push
adc
iret
push
or
jmp
mov
push
inc
push
push
(bad)
clc
cmp
loopne
xlat
jmp
or
scas
pop
jnp
lahf
mov
out
pop
ds
fdiv
mov
cwde
push
(bad)
in
push
iret
fcomp
ds
push
int
clc
dec
push
sub
push
loop
mov
inc
fcomip
add
sub
movs
sahf
push
xchg
mov
mov
mov
push
dec
scas
fmul
push
imul
jle
imul
push
in
xchg
fs
call
push
cmp
fdivr
mov
pop
les
mov
movups
outs
loopne
imul
xchg
cs
ret
out
pushw
call
imul
cmp
pop
mov
call
dec
mov
lock
(bad)
pop
ds
push
hlt
repz
lock
jmp
(bad)
(bad)
call
fwait
loopne
jle
push
dec
dec
das
sahf
pcmpeqb
into
in
push
cld
push
sahf
push
rol
xchg
ds
xchg
adc
cld
aaa
mov
jge
(bad)
mov
imul
addr16
dec
push
into
push
and
mov
mov
lock
in
mov
ds
or
cmp
fadd
jmp
clc
add
push
and
mov
and
es
push
push
das
sub
out
mov
lods
scas
push
das
pop
push
aas
cmp
pop
pop
int
adc
add
push
add
sahf
aas
add
out
repz
ins
push
mov
adc
push
cli
out
dec
xor
lods
jmp
cmp
les
mov
in
(bad)
fdivr
sbb
pavgb
inc
iret
pusha
scas
jge
sar
inc
push
push
nop
mov
aaa
shr
ds
hlt
push
shl
lahf
neg
mov
push
push
cli
into
xchg
aaa
sti
sub
pop
paddb
les
(bad)
jmp
imul
int
mov
push
adc
in
aas
and
jmp
jnp
lock
int
dec
int
fs
rcl
or
ror
into
push
(bad)
ds
jno
cmp
mov
out
push
call
lock
sub
(bad)
push
push
jo
sbb
push
retf
in
push
loope
add
repz
lods
jl
scas
lahf
or
push
out
std
dec
mov
loopne
push
xor
push
and
mov
outs
cmovne
or
outs
test
stos
call
sti
cwde
sbb
out
scas
out
push
xchg
jo
out
cdq
mov
aad
pop
push
mov
push
icebp
push
aas
test
push
retf
rcr
push
frstor
adc
mov
or
loope
jle
sbb
push
or
ror
imul
push
adc
mov
jb
mov
or
mov
outs
icebp
push
push
mov
outs
push
out
lock
sub
inc
jo
mov
inc
push
jmp
mov
int
push
jno
adc
push
nop
xor
and
ds
dec
push
pop
lock
sub
lahf
scas
push
mov
iret
lock
push
fdivr
arpl
repz
sbb
fisttp
shl
inc
(bad)
cmp
or
push
mov
jmp
mov
add
stos
mov
ror
call
pop
xor
dec
hlt
mov
mov
mov
add
popa
outs
jae
gs
xor
mov
lock
in
dec
test
push
(bad)
cmp
pop
fs
dec
jne
ja
mov
cmp
pop
pop
push
mov
mov
jns
xchg
mov
mov
xor
out
mov
test
cmp
fidiv
cwde
fs
popa
mul
int3
push
add
adc
(bad)
retf
or
daa
inc
mov
add
adc
ds
ficomp
jbe
bound
outs
or
stos
add
lock
jg
add
add
adc
sbb
adc
loope
jae
pushf
or
sbb
outs
test
xor
pop
sbb
push
adc
in
add
push
mov
cmp
test
and
out
add
iret
fiadd
xor
add
ja
jmp
fs
popa
je
and
xor
cmp
inc
outs
jo
js
push
outs
push
cmp
xor
xor
dec
gs
ins
outs
jne
and
imul
and
and
jb
and
ins
aam
cdq
cdq
push
add
mov
push
mov
pusha
pop
pop
pop
cli
sbb
int3
sub
xor
cs
pushf
cdq
sub
pop
into
cmp
pop
add
adc
push
add
adc
adc
adc
inc
gs
pusha
push
or
mov
adc
jae
adc
pop
push
jo
or
cmp
pop
sbb
adc
dec
or
push
or
sbb
or
ds
ret
or
mov
nop
dec
pop
cmp
jg
push
js
mov
pop
push
or
mov
push
mov
or
or
lock
cmps
or
add
push
je
or
push
xor
enter
test
out
lods
repnz
test
pop
test
ss
pop
sahf
or
jle
pop
push
xor
cwde
or
jnp
xchg
push
push
jl
cmp
fcomp
ror
ins
push
sub
mov
mov
or
fimul
push
push
adc
jnp
jns
mov
xor
(bad)
(bad)
pop
neg
inc
xchg
or
and
movs
push
pop
or
jbe
dec
repnz
or
jle
mov
test
mov
jp
cmp
aam
repnz
not
or
sub
mov
lahf
outs
and
mov
hlt
jle
or
push
jnp
or
xor
jbe
ss
popa
stos
inc
(bad)
push
or
je
jo
or
push
lods
push
(bad)
or
jno
push
or
jle
or
neg
jnp
or
(bad)
arpl
jle
ds
fdivr
les
outs
push
cs
mov
in
push
or
call
ficom
cmp
push
xor
ret
push
and
mov
cmp
or
call
sbb
xchg
(bad)
jns
out
mov
push
cmp
sar
imul
or
mov
dec
push
bnd
push
adc
jne
ret
push
xor
or
ret
mov
pop
test
inc
push
jmp
push
jb
call
push
cmp
push
sub
add
or
cli
push
mov
dec
inc
mov
pop
dec
push
push
or
inc
ja
ret
cmps
or
scas
js
push
into
or
call
loop
pop
icebp
into
or
or
ret
mov
or
and
or
or
call
push
inc
sub
push
or
jnp
mov
addr16
daa
push
scas
push
pop
mov
xlat
fild
call
mov
or
push
fsubrp
out
mov
das
push
mov
mov
push
(bad)
inc
retf
lods
(bad)
push
jmp
(bad)
call
rcl
push
lods
cmp
push
fld
call
(bad)
call
fnstcw
mov
stc
(bad)
inc
lds
pop
movs
push
jmp
jmp
inc
xchg
xchg
aad
sub
cmc
call
adc
dec
lods
stos
adc
in
(bad)
(bad)
mov
fnstsw
stos
(bad)
std
test
mov
push
(bad)
notrack
call
shl
mov
repz
dec
lds
pop
stos
push
(bad)
jmp
in
xchg
fisttp
push
(bad)
sti
call
adc
inc
cmps
stos
adc
out
(bad)
mov
xlat
mov
push
sub
stos
push
(bad)
call
inc
iret
scas
push
jmp
or
(bad)
call
fistp
inc
sbb
jle
sahf
pop
push
out
add
dec
sbb
adc
add
adc
push
mov
ficomp
push
add
(bad)
sbb
and
add
add
push
inc
je
push
jle
jns
repz
jle
ds
cmp
cmp
ds
sahf
ret
sahf
jle
(bad)
jle
dec
test
xor
not
out
outs
mov
in
or
cwde
fisubr
inc
push
push
adc
or
(bad)
mov
call
outs
arpl
jb
arpl
gs
fs
push
mov
mov
outs
imul
outs
sbb
jo
jae
imul
ins
gs
outs
push
jbe
ins
imul
sbb
inc
and
xchg
pop
xor
mov
add
mov
xchg
jb
push
imul
bound
ret
in
add
jo
and
push
sti
mov
xor
addr16
mov
in
jbe
outs
jns
and
xchg
je
arpl
data16
jns
bound
inc
xor
jbe
add
imul
fld
loop
xor
sub
and
sub
mov
sub
rcl
adc
das
jmp
dec
sub
retf
arpl
pusha
ror
adc
popa
sub
xchg
add
xor
mov
add
arpl
cmp
add
and
dec
xchg
dec
retf
push
dec
retf
movs
push
test
scas
pop
or
mov
outs
(bad)
jecxz
add
pop
retfw
add
add
add
dec
sbb
cs
out
outs
movs
xor
push
push
sub
mov
xchg
leave
and
push
test
push
bound
cwde
dec
gs
push
sti
jecxz
pop
pop
push
rol
push
add
dec
sbb
push
sbb
add
scas
add
push
pusha
pop
mov
mov
pusha
or
pop
sbb
mov
add
xchg
jo
and
push
pop
add
pop
or
sahf
pop
pop
stos
pop
sbb
lock
js
sub
cmp
adc
add
neg
mov
or
or
or
or
repz
rcl
mov
dec
int3
sub
loope
iret
lods
ins
in
jmp
pop
fdivr
jl
sahf
out
mov
fistp
out
mov
xchg
jns
out
push
push
shl
mov
iret
rol
repnz
dec
retf
repz
stos
push
out
sahf
cmps
cli
push
call
sahf
mov
xchg
cmp
repz
(bad)
cmps
data16
cmps
cmp
out
push
xchg
push
(bad)
jns
out
ss
test
rol
stos
push
into
cs
cmp
repz
out
push
sahf
pop
repz
repz
mov
mov
push
out
neg
repnz
push
push
mov
adc
loope
push
xchg
cmp
je
push
ror
mov
sahf
ja
repz
push
mov
dec
leave
je
out
sub
cmp
add
cdq
pop
fnstcw
mov
jns
mov
xlat
jns
out
lds
jmp
push
xchg
push
out
sahf
out
xor
adc
mov
(bad)
int
cmp
repz
sub
out
call
mov
jge
jb
adc
fidivr
push
xchg
fiadd
push
sar
sar
push
push
mov
popf
add
mov
push
push
repz
push
push
mov
dec
dec
retf
retf
cmp
repz
mov
push
stos
stos
imul
into
repz
xor
push
fwait
jns
out
fwait
pop
pop
fcmovnu
out
sahf
out
cmp
jns
jnp
sti
add
jns
out
xchg
out
sahf
(bad)
daa
daa
cmps
cmps
add
addr16
push
out
sahf
ja
push
xchg
xchg
push
push
sahf
out
sahf
xlat
xlat
aaa
aaa
mov
jne
out
ja
div
cmp
repz
add
push
(bad)
(bad)
dec
dec
repz
repz
iret
das
das
scas
iret
repz
scas
outs
outs
out
out
pop
cmp
repz
lahf
lahf
pop
pop
repz
repz
aas
aas
mov
mov
sahf
out
mov
pusha
adc
adc
jns
jo
dec
push
sub
repz
sbb
js
dec
adc
(bad)
push
inc
and
jmp
iret
repz
xor
cmp
repz
and
arpl
dec
out
add
xor
xchg
mov
push
test
pop
dec
cwde
retf
push
xchg
push
push
pop
cmps
mov
loop
cmps
push
dec
data16
mov
push
inc
(bad)
jb
test
push
xchg
pop
push
add
push
scas
push
jbe
ret
xchg
adc
push
add
bound
data16
repz
sub
push
add
or
or
pop
and
leave
or
push
pop
xchg
pop
xchg
cmovle
adc
adc
adc
inc
dec
sbb
sbb
and
mov
lds
sbb
loop
addr16
or
int3
nop
sbb
bound
outs
or
and
add
popa
lahf
add
and
add
add
add
sub
or
add
inc
or
and
bound
sub
push
inc
sub
xchg
inc
outs
inc
fldcw
neg
xchg
adc
push
sub
movs
aam
jp
xchg
adc
push
cmp
rcl
fdivr
loopne
out
pushf
jae
cmp
iret
(bad)
mov
cmp
cmps
lahf
xchg
(bad)
jns
sub
mov
push
add
push
retf
sar
movs
push
and
add
ins
fst
bound
add
ja
lgdtd
popa
push
out
mov
les
(bad)
hlt
push
(bad)
(bad)
push
movs
arpl
mov
mov
push
movs
mov
aad
mov
rcl
mov
(bad)
(bad)
jle
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
(bad)
(bad)
jmp
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
(bad)
(bad)
(bad)
jmp
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
(bad)
(bad)
(bad)
dec
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
(bad)
(bad)
(bad)
inc
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
(bad)
(bad)
call
xchg
mov
mov
or
or
and
or
adc
(bad)
(bad)
call
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
sbb
inc
movs
in
lahf
xor
mov
js
stc
jl
test
xchg
sbb
(bad)
(bad)
(bad)
jmp
sub
ins
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
(bad)
(bad)
(bad)
inc
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
loope
(bad)
frstor
sub
ror
popa
mov
into
pop
cmp
mov
push
mov
dec
xlat
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
(bad)
(bad)
jmp
jae
add
in
add
pop
dec
or
cmp
add
daa
(bad)
(bad)
jmp
and
and
test
or
mov
popa
into
push
stc
ficomp
leave
(bad)
(bad)
(bad)
(bad)
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
(bad)
(bad)
(bad)
(bad)
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fcomip
(bad)
jmp
push
or
or
push
in
dec
xchg
daa
scas
jl
sahf
pop
jge
(bad)
(bad)
(bad)
call
or
inc
push
imul
xor
sbb
push
imul
(bad)
(bad)
call
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
mov
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
(bad)
(bad)
(bad)
jmp
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
mov
retf
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
cmp
mov
pop
mov
add
mov
cmps
call
ret
shl
sbb
cli
(bad)
(bad)
inc
fs
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
(bad)
out
or
adc
mov
jnp
sbb
xchg
or
out
fdivr
(bad)
jmp
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outs
(bad)
push
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
(bad)
jmp
cli
clc
sar
imul
push
js
or
push
add
mov
cmp
(bad)
(bad)
(bad)
jmp
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
(bad)
(bad)
(bad)
(bad)
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
(bad)
(bad)
(bad)
call
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
fild
pop
add
sbb
cmp
xor
ret
push
sub
hlt
ja
xchg
inc
(bad)
(bad)
(bad)
dec
mov
enter
ror
fxtract
jecxz
dec
mov
dec
jle
mov
sub
cwde
(bad)
(bad)
(bad)
inc
adc
fst
jo
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
add
sbb
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
(bad)
(bad)
(bad)
dec
mov
adc
mov
popa
ja
mov
out
repz
gs
(bad)
(bad)
(bad)
in
fisubr
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
stos
(bad)
(bad)
cmp
repz
fbstp
push
jo
add
hlt
div
sub
scas
ret
xchg
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
cmc
(bad)
(bad)
push
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
(bad)
(bad)
(bad)
fist
mov
lea
fnstcw
mov
dec
hlt
mov
or
xchg
std
adc
or
int3
pop
dec
xor
inc
mov
outs
retf
push
pop
mov
sar
pop
mov
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
(bad)
(bad)
jmp
les
jb
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
call
cmp
inc
out
and
cmp
dec
mov
mov
sbb
int3
cmps
xor
mov
lods
out
sar
mov
adc
push
dec
leave
jmp
sti
push
jns
das
mov
and
je
or
jmp
adc
mov
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
mov
js
mov
test
cwde
cmp
test
mov
mov
(bad)
(bad)
dec
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
(bad)
(bad)
inc
fadd
ss
push
out
mov
mov
movs
test
jno
mov
ja
fcos
(bad)
(bad)
(bad)
fldcw
dec
sub
or
sub
add
adc
cwde
mov
nop
bound
(bad)
call
xchg
push
(bad)
push
hlt
out
les
fdecstp
jmp
lea
(bad)
inc
sub
sub
dec
jo
outs
sbb
sub
loope
fdivrp
(bad)
dec
arpl
and
dec
in
mov
movs
ret
addr16
test
mov
lahf
sub
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
(bad)
(bad)
inc
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
jecxz
hlt
pop
arpl
lods
(bad)
loope
int3
mov
stc
dec
xlat
loopne
adc
dec
and
popf
mov
test
and
pop
ins
cmp
les
adc
sub
dec
addr16
(bad)
(bad)
inc
test
jns
or
cmp
popf
cmps
push
mov
xchg
adc
in
(bad)
(bad)
call
dec
cld
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
call
xchg
xor
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
push
jmp
push
and
sub
adc
jns
movs
dec
mov
movs
daa
sub
mov
mov
in
and
out
mov
shl
sar
mov
jle
xchg
aas
mov
adc
out
sar
mov
gs
jmp
aaa
or
jbe
dec
div
lahf
adc
jb
and
jmp
push
add
test
pop
mov
mov
ret
mov
lea
(bad)
(bad)
inc
push
adc
(bad)
cmp
(bad)
test
or
stc
sbb
sub
sahf
or
es
leave
in
push
ja
pop
sub
(bad)
(bad)
(bad)
jmp
sbb
fild
sbb
repnz
adc
dec
jae
adc
(bad)
(bad)
(bad)
(bad)
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
(bad)
(bad)
(bad)
inc
test
cmp
push
add
outs
jge
aaa
ss
fidiv
test
push
xor
imul
fld
adc
nop
in
and
(bad)
mov
(bad)
(bad)
call
daa
leave
pop
sub
and
mov
and
mov
sub
fidivr
inc
cld
sub
ds
sbb
sub
call
das
ror
jno
(bad)
jg
scas
pop
cmp
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
(bad)
(bad)
(bad)
jle
mov
jg
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
ins
xchg
outs
jmp
loop
sbb
ja
add
push
or
bound
stos
sub
shr
(bad)
(bad)
jmp
xlat
cmps
gs
fs
imul
dec
pop
mov
(bad)
call
mov
cld
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
(bad)
(bad)
inc
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
push
icebp
push
add
push
ds
mov
mov
clc
push
mov
adc
push
aad
mov
ja
jmp
pop
fist
pop
xchg
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
(bad)
(bad)
(bad)
jmp
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
(bad)
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
(bad)
jg
(bad)
pop
imul
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
(bad)
(bad)
(bad)
jp
sti
inc
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
sub
cmc
cli
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
fstp
(bad)
(bad)
call
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
(bad)
(bad)
(bad)
dec
mov
rcr
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
(bad)
cmp
ret
mov
call
dec
retf
lahf
lds
adc
leave
je
push
(bad)
inc
inc
int3
inc
ins
xchg
sbb
ror
mov
xchg
ja
ins
nop
cs
sub
sbb
jmp
xchg
stos
push
fs
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
(bad)
(bad)
(bad)
jmp
outs
mov
adc
xor
xor
dec
mov
or
jmp
iret
(bad)
in
popf
or
dec
add
mov
(bad)
mov
push
pop
and
push
cmp
(bad)
call
fcmovu
adc
test
sbb
xchg
shl
test
into
add
stos
(bad)
(bad)
(bad)
(bad)
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
(bad)
(bad)
(bad)
inc
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
(bad)
(bad)
dec
fcmovne
mov
mov
mov
cmovns
push
dec
adc
mov
xor
mov
ficomp
mov
sbb
jmp
gs
stos
out
scas
mov
push
xchg
bound
pop
imul
imul
out
add
dec
or
loopne
outs
add
(bad)
(bad)
(bad)
mov
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
inc
jnp
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
(bad)
(bad)
(bad)
(bad)
call
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
(bad)
cmp
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
sub
idiv
(bad)
jg
adc
jmp
in
inc
push
clc
sub
les
and
lock
loop
outs
dec
jg
or
(bad)
jge
aad
shl
(bad)
push
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
(bad)
out
rcl
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
(bad)
(bad)
inc
push
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
das
retf
jnp
dec
(bad)
(bad)
dec
retf
(bad)
push
add
dec
mov
outs
inc
nop
call
cld
jle
(bad)
(bad)
call
out
sbb
ficom
daa
mov
mov
out
mov
mov
mov
cmp
out
clc
(bad)
js
sub
pop
outs
xchg
add
cmp
inc
mov
das
xchg
in
pop
xchg
sub
mov
(bad)
(bad)
push
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
in
mov
call
xor
inc
arpl
adc
push
mov
(bad)
(bad)
(bad)
jns
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
(bad)
dec
pusha
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
sub
stc
push
nop
pop
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
adc
add
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
push
cld
(bad)
(bad)
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
sbb
repnz
(bad)
(bad)
jmp
dec
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fcos
(bad)
(bad)
inc
push
jmp
xor
(bad)
and
push
mov
rol
ss
(bad)
(bad)
jmp
lods
push
or
adc
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
(bad)
(bad)
call
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
cmp
inc
push
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
(bad)
(bad)
mov
aam
jmp
(bad)
stc
mov
mov
lock
imul
(bad)
(bad)
(bad)
(bad)
daa
test
(bad)
cs
mov
call
mov
loope
into
cs
stos
dec
mov
add
pop
std
pop
jmp
icebp
and
(bad)
(bad)
(bad)
inc
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
(bad)
(bad)
(bad)
call
loope
push
adc
cmp
adc
mov
jle
cmp
inc
cdq
adc
add
sbb
cmps
push
data16
jno
ds
outs
sub
(bad)
(bad)
(bad)
(bad)
mov
add
xchg
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
call
mov
jp
or
xchg
popa
mov
fdivrp
ja
xor
dec
popa
sub
or
pop
ins
les
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
(bad)
(bad)
call
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
jno
test
aam
ins
fucom
jmp
aam
push
sub
push
(bad)
(bad)
(bad)
jmp
sar
stc
jp
gs
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
(bad)
(bad)
(bad)
dec
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
(bad)
(bad)
inc
cwde
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
(bad)
(bad)
inc
xlat
push
cmp
hlt
mov
mov
and
mov
movs
(bad)
(bad)
(bad)
dec
sub
mov
or
or
mov
or
and
outs
jl
pop
push
sbb
lock
(bad)
(bad)
cmp
add
jno
cwde
shl
mov
jno
test
lahf
mov
or
pop
leave
les
and
or
(bad)
dec
cwde
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
bound
(bad)
(bad)
(bad)
jmp
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
ja
mov
sbb
mov
jl
sti
aam
gs
mov
(bad)
(bad)
jg
test
into
mov
mov
movs
inc
cmp
rol
ins
rcl
(bad)
(bad)
(bad)
push
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttp
jl
push
add
inc
stos
mov
or
xchg
mov
and
mov
(bad)
(bad)
(bad)
jg
or
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
and
mov
loop
mov
call
(bad)
call
(bad)
adc
jecxz
or
xchg
cmp
pop
(bad)
(bad)
(bad)
jmp
xchg
or
popf
or
scas
daa
jge
sahf
mov
setae
mov
push
(bad)
(bad)
(bad)
(bad)
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
(bad)
(bad)
dec
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
fdivr
pop
cmp
les
repnz
sar
addr16
mov
fisttp
ss
fmul
sub
scas
or
dec
add
inc
add
fbld
ret
test
fist
outs
mov
inc
jmp
fisub
mov
outs
shl
(bad)
(bad)
(bad)
dec
or
xchg
mov
add
mov
lds
or
sub
add
(bad)
(bad)
inc
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
(bad)
(bad)
call
ss
jb
test
add
xchg
mov
jp
jnp
sub
(bad)
call
(bad)
xchg
ror
repnz
mov
fcmovnu
and
aam
inc
push
(bad)
(bad)
clc
pop
fiadd
int
mov
ja
sbb
out
ud0
(bad)
jmp
pushw
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
shr
dec
add
push
cmp
mov
cmps
addr16
shl
test
ja
scas
shr
(bad)
(bad)
(bad)
(bad)
call
inc
fisttp
data16
fdivr
lock
mov
iret
jg
mov
jmp
retf
(bad)
(bad)
inc
mov
xchg
xor
mov
add
push
ficom
and
addr16
(bad)
(bad)
jmp
les
mov
sub
xchg
mov
mov
mov
sub
call
sbb
inc
xor
bound
lods
lds
(bad)
(bad)
call
cmps
xchg
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
(bad)
(bad)
(bad)
call
cwde
sbb
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
(bad)
(bad)
call
mov
add
sbb
sbb
ss
call
ins
sbb
(bad)
(bad)
call
inc
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
shl
(bad)
jmp
ret
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
(bad)
call
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
(bad)
(bad)
(bad)
jmp
repz
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
inc
cld
repz
push
dec
push
lds
jge
fisubr
cmp
jns
add
ret
(bad)
dec
xchg
push
sbb
xchg
adc
mov
cmp
lds
or
cmps
(bad)
adc
add
inc
xlat
xor
cli
bound
(bad)
mov
mov
lea
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
(bad)
(bad)
(bad)
call
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
cs
fwait
gs
imul
and
add
lahf
loop
ret
(bad)
push
cmps
int3
and
mov
loope
mov
shr
lahf
adc
xchg
mov
leave
dec
and
(bad)
(bad)
jmp
sti
jle
sub
gs
das
aas
jns
ss
mov
or
je
adc
xor
(bad)
dec
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
rcl
(bad)
(bad)
jmp
cli
call
js
cmps
cmp
sbb
or
(bad)
(bad)
(bad)
dec
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
(bad)
(bad)
inc
xchg
xlat
inc
mov
mov
mov
inc
mov
push
ja
cwde
pop
ins
(bad)
mov
adc
ss
daa
mov
fnstsw
xor
mov
inc
(bad)
jmp
push
rcr
hlt
lds
(bad)
out
hlt
push
out
rcl
pop
mov
push
xor
imul
jo
lods
push
push
cld
(bad)
clc
pop
sbb
inc
sub
data16
loope
lds
mov
lods
mov
in
test
xchg
sub
in
scas
mov
(bad)
(bad)
(bad)
stc
(bad)
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
icebp
push
sub
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
ja
ror
stc
add
xlat
push
scas
xchg
adc
lea
or
idiv
enter
mov
and
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
(bad)
(bad)
jns
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
das
cli
(bad)
jmp
cdq
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
sub
(bad)
(bad)
push
mov
xchg
push
mov
repz
inc
gs
dec
xchg
outs
jne
mov
call
and
pop
test
adc
gs
jns
(bad)
mov
sbb
mov
(bad)
jg
jmp
repnz
mov
mov
out
and
loope
or
mov
aas
aas
xchg
mov
jo
and
imul
inc
cmp
ja
fsub
push
jmp
out
push
or
test
mov
adc
xor
fwait
(bad)
(bad)
add
push
add
pop
lods
test
push
retf
ret
lea
(bad)
(bad)
inc
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
mov
sbb
mov
inc
pop
mov
sbb
lods
(bad)
(bad)
(bad)
call
in
popa
fwait
sbb
mov
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
(bad)
call
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
(bad)
(bad)
(bad)
(bad)
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
test
push
(bad)
push
xchg
aad
xor
imul
adc
frstor
in
mov
cmps
daa
aam
(bad)
(bad)
jg
es
dec
dec
and
cdq
and
and
adc
sub
(bad)
(bad)
(bad)
jmp
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
(bad)
(bad)
(bad)
call
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
jmp
(bad)
dec
push
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
or
outs
cmp
fisub
nop
jmp
ja
pop
push
jecxz
add
cmp
arpl
popa
sub
push
cmps
xlat
aam
fs
(bad)
(bad)
mov
mov
dec
xlat
retf
and
mov
dec
(bad)
inc
or
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
call
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
push
push
addr16
jne
ds
mov
or
ror
adc
push
mov
(bad)
(bad)
jmp
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
ja
push
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fcos
(bad)
(bad)
mov
in
or
cmp
in
paddsb
hlt
popa
call
in
mov
(bad)
(bad)
call
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
(bad)
(bad)
call
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
retf
sub
(bad)
(bad)
jmp
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
(bad)
dec
fdiv
dec
in
imul
test
fdiv
shl
add
mov
push
shl
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
loop
(bad)
sti
rcl
mov
retf
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
jmp
int
ins
inc
iret
rcl
into
add
nop
ins
cld
ja
sub
xchg
(bad)
(bad)
(bad)
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
pushf
cmp
(bad)
dec
jns
cwde
mov
and
add
dec
call
xor
pop
pop
mov
mov
sbb
mov
or
mov
dec
mov
sbb
int3
push
test
arpl
aad
or
test
(bad)
(bad)
(bad)
(bad)
mov
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
(bad)
(bad)
jmp
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
mov
(bad)
(bad)
(bad)
call
out
inc
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
and
adc
dec
pop
mov
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
(bad)
(bad)
(bad)
mov
stos
or
mov
mov
out
(bad)
bound
xor
xlat
cmp
fwait
jl
jge
dec
mov
loopne
xlat
add
mov
(bad)
(bad)
(bad)
fcomp
loopne
ja
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
cmps
(bad)
jmp
inc
int
outs
es
lods
jg
sub
mov
xchg
rcr
dec
call
inc
mov
and
xor
pop
or
addr16
xchg
shr
in
(bad)
(bad)
call
imul
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
(bad)
(bad)
(bad)
(bad)
aas
jmp
jecxz
in
fmul
lock
mov
pop
and
sub
sahf
push
jg
ret
dec
dec
outs
test
or
rcr
lahf
ror
(bad)
(bad)
(bad)
jmp
mov
lahf
xchg
sbb
daa
sub
mov
inc
and
(bad)
xchg
test
call
cmp
jmp
nop
mov
mov
iret
push
retf
mov
ret
pusha
test
jo
out
cmps
(bad)
call
mov
test
fistp
ret
imul
ret
ja
imul
mov
pushf
mov
(bad)
popa
add
sub
mov
cwde
cmc
cld
sar
nop
out
push
(bad)
(bad)
(bad)
(bad)
jle
fidiv
sbb
mov
inc
sub
mov
cmp
jg
sar
dec
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
(bad)
(bad)
(bad)
inc
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
jmp
(bad)
stc
xor
inc
out
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
std
(bad)
call
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
inc
daa
popf
and
(bad)
jg
jmp
inc
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
call
(bad)
in
sbb
bound
and
inc
sbb
jmp
sub
(bad)
mov
nop
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
or
pop
loopne
(bad)
cmp
movs
add
sub
scas
cmc
test
and
(bad)
(bad)
push
mov
mov
sbb
ror
sar
add
push
movs
not
cld
sbb
sub
jns
and
dec
imul
cmc
xlat
jle
out
ror
(bad)
push
push
jp
jmp
fnop
add
xchg
(bad)
das
rcl
and
stc
popa
call
add
fsubr
pop
loopne
adc
dec
call
xchg
(bad)
loope
xchg
adc
(bad)
(bad)
(bad)
dec
sub
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
(bad)
(bad)
(bad)
jmp
out
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
call
mov
xchg
push
xor
es
jmp
fdiv
inc
mov
bound
jmp
cmp
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
(bad)
(bad)
(bad)
call
ja
ss
adc
out
mov
loopne
jbe
pop
not
dec
jmp
(bad)
(bad)
(bad)
(bad)
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
jl
mov
(bad)
(bad)
out
(bad)
pop
sbb
mov
repz
in
test
adc
ja
mov
ret
add
scas
sar
(bad)
cmp
cdq
in
or
pushw
cmps
fidiv
(bad)
(bad)
inc
sub
fisubr
sar
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
std
(bad)
(bad)
jmp
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
inc
retf
push
out
sahf
out
pop
pop
addr16
(bad)
(bad)
jns
xchg
mov
and
je
outs
outs
popa
jb
fdivp
(bad)
jns
jae
jb
popa
ins
and
fs
imul
in
outs
inc
sub
popa
adc
dec
arpl
scas
fnstenv
ins
gs
and
bound
cmp
fcmovu
jle
outs
ins
jo
imul
mov
(bad)
mov
cmp
add
xlat
mov
dec
xchg
fdivr
loopne
mov
add
pop
idiv
lahf
push
push
lsl
or
pop
clts
ins
scas
jnp
sbb
add
add
push
add
mov
add
aaa
add
push
inc
gs
std
test
cdq
adc
test
scas
add
out
sahf
jae
cmp
mov
pop
pop
sbb
xlat
xor
adc
add
lahf
cmp
out
icebp
mov
or
push
sti
add
or
or
out
adc
nop
add
xchg
jae
out
and
add
punpckhwd
add
pop
inc
sbb
sbb
xlat
loope
push
push
jge
push
or
(bad)
out
push
xchg
cmp
sub
out
sub
addr16
pop
pop
cmp
into
test
outs
or
pop
loopne
xchg
jae
push
add
jmp
movups
aas
cmp
out
push
mov
xor
cmp
out
fadd
dec
add
cmp
cmp
bswap
popf
out
cs
inc
std
cld
lods
ss
fld
jnp
mov
aas
push
clc
dec
add
js
add
jg
fsubrp
into
repz
add
add
jns
out
mov
sti
jns
out
fsubr
push
sahf
cmps
stc
cmp
hlt
or
sahf
out
jo
mov
or
aaa
aas
inc
pushf
inc
sub
add
xchg
or
dec
xchg
xchg
pushf
inc
or
xchg
pushf
jae
and
aaa
outs
out
loope
add
add
xchg
fcom
push
add
push
hlt
sahf
out
or
and
push
jns
out
fs
nop
movs
out
sahf
out
rcr
lock
iret
repz
adc
sbb
inc
dec
pusha
cmp
repz
mov
repz
cld
or
fiadd
push
cmp
repz
mov
iret
repz
fdiv
aas
pop
inc
push
push
scas
iret
imul
cmp
push
adc
dec
pop
scas
mov
push
pop
mov
inc
fcomp
scas
or
dec
out
addr16
pushf
aas
dec
out
outs
mov
sbb
into
test
scas
test
cmp
aas
add
push
(bad)
mov
jae
daa
sbb
jne
add
add
sub
cmp
add
sbb
adc
mov
sbb
add
ret
outs
sar
fadd
divps
fstp
jo
iret
inc
or
or
or
pop
sbb
sbb
adc
and
mov
xor
out
popf
push
test
lods
xor
daa
fs
pop
sbb
adc
and
ret
loopne
xlat
pop
push
add
xchg
xchg
or
push
xchg
add
pop
cmp
sub
cmp
das
aad
rol
out
sahf
not
mov
mov
jns
sti
cld
std
(bad)
dec
imul
das
aas
test
add
xchg
adc
push
int3
test
push
test
pop
pusha
xlat
add
inc
adc
push
jl
push
in
pop
idiv
aad
cmp
test
xor
xor
xor
xor
dec
test
xor
add
pop
xchg
inc
add
scas
pop
mov
inc
iret
add
mov
repz
pop
xchg
pop
cmp
repz
adc
shl
clc
or
and
jg
out
dec
pop
icebp
jge
mov
retf
iret
adc
mov
xchg
mov
frstor
mov
jbe
mov
adc
fidivr
xchg
mov
(bad)
cmc
cmps
out
rcl
lock
mov
push
nop
pop
rcl
cdq
jno
dec
push
(bad)
sbb
fs
xchg
cs
jb
xor
(bad)
(bad)
jmp
enter
pop
outs
imul
in
jecxz
ret
and
out
movs
dec
jne
inc
test
pusha
stos
add
pop
stos
sbb
add
sbb
mov
pop
push
push
iret
sar
hlt
and
push
cmp
mov
jns
out
inc
js
mov
repz
xor
pushf
mov
fdivr
or
mov
push
sti
cmp
repz
mov
cmp
repz
shl
sahf
cmps
stc
or
xor
push
out
mov
push
push
jl
out
push
xor
cmp
rol
test
iret
call
je
repz
pushf
shr
xor
repz
movs
aam
ss
sahf
out
cmp
pushf
mov
fmul
aaa
jbe
cmp
mov
lahf
out
mov
push
repz
repz
push
and
adc
into
push
dec
push
sahf
(bad)
in
cmp
pop
js
jge
out
int3
in
sbb
pushw
push
pushf
shl
cmp
repz
repz
dec
ins
mov
iret
clc
sbb
iret
sbb
lock
jle
pusha
add
fadd
aas
cmps
jns
out
push
cmp
mov
out
sbb
push
push
out
shl
inc
mov
iret
repz
inc
out
sahf
aaa
push
push
dec
ins
mov
sahf
aam
and
ss
push
out
int3
clc
sbb
iret
repz
pop
mov
jns
inc
sub
push
lock
add
push
inc
js
ds
repz
hlt
adc
sbb
push
test
jmp
cmp
ficomp
push
test
out
sahf
out
pop
je
(bad)
in
repz
push
push
je
(bad)
repz
dec
sahf
push
xor
loope
cmp
jo
shl
dec
sahf
out
ficom
push
cmp
int3
out
idiv
add
mov
push
js
icebp
jns
movs
enter
push
push
inc
cmp
repz
nop
mov
hlt
jns
ja
or
push
push
js
sahf
ja
out
cld
and
push
pop
jo
lahf
out
mov
pop
clc
cmp
repz
fs
mov
jns
ja
push
ins
nop
mov
iret
repz
lahf
in
sbb
pushw
ins
nop
mov
loopne
push
jle
push
js
sahf
out
pushf
mov
repz
cmp
sar
mov
cmps
push
pusha
nop
mov
loopne
pop
scas
push
push
js
jge
out
shl
pop
sahf
push
pop
jge
out
jo
mov
add
sahf
out
fisubr
dec
jo
shr
iret
sbb
out
push
mov
fdivr
and
cs
js
fsubp
repz
hlt
and
push
push
test
sahf
aaa
adc
outs
push
and
push
cwde
mov
fadd
push
push
push
js
ds
repz
(bad)
idiv
out
ins
nop
mov
jns
out
push
push
je
mov
out
sbb
push
push
je
mov
fcom
sahf
push
dec
repz
rep
sub
clc
adc
inc
dec
sbb
jns
pushf
mov
mov
push
dec
push
fidivr
aam
adc
inc
push
push
jl
jge
out
int3
in
or
push
inc
jns
out
sbb
out
or
inc
push
dec
push
jns
mov
push
sahf
out
sahf
dec
pusha
mov
fidivr
push
push
dec
push
sahf
movs
(bad)
loopne
and
cmp
repz
mov
repz
jle
pop
jo
jns
out
mov
iret
repz
dec
push
push
push
aaa
clc
cmp
or
push
push
dec
pusha
jge
out
je
rcr
outs
repz
cmp
push
dec
fs
aaa
clc
cmp
rcr
and
push
sahf
out
sahf
push
push
cmp
icebp
jns
or
mov
cmp
repz
mov
mov
fiadd
inc
pop
jo
cmp
xrelease
jns
loope
jae
push
pop
ins
mov
out
sahf
test
loopne
adc
xchg
out
sahf
out
dec
fs
mov
lock
int3
in
sbb
cs
push
cmp
repz
jl
mov
repz
and
es
pusha
js
jns
out
rcr
and
repz
push
push
pop
je
mov
repz
js
push
xor
repz
ins
test
jns
jns
push
dec
and
hlt
and
push
jo
lock
cwde
shr
jnp
push
fs
repz
mov
iret
sbb
inc
push
ds
int3
lock
out
push
pop
shl
sahf
and
cmp
repz
mov
iret
repz
repz
or
mov
inc
pop
js
iret
repz
mov
hlt
xor
sahf
out
nop
es
js
enter
out
or
into
push
pop
js
sti
cmp
pushf
mov
push
dec
clc
cmp
repz
sahf
aaa
inc
jl
rcr
sahf
out
adc
(bad)
repz
test
push
pop
jl
cli
cmp
cwde
int3
in
adc
jns
je
mov
out
sahf
out
dec
ins
mov
loopne
push
push
push
jl
clc
cmp
xchg
mov
push
sahf
out
sahf
push
jo
test
lock
fidivr
mov
push
push
test
(bad)
fsubr
add
dec
push
inc
cmp
repz
test
clc
adc
(bad)
out
sahf
aaa
es
jl
mov
lahf
cld
adc
mov
jo
shl
ret
out
or
es
push
iret
shl
nop
ss
pop
fucom
jns
test
out
sahf
out
pop
jo
shr
repz
push
push
ja
cmp
add
push
push
inc
push
mov
repz
sbb
mov
inc
xchg
inc
les
xchg
push
push
jo
(bad)
out
test
adc
xchg
repz
push
sbb
inc
cdq
out
int3
sbb
ds
repz
push
push
mov
call
out
into
push
xor
iret
pop
test
mov
fsubp
adc
ds
pop
je
iret
sbb
shl
sahf
cmps
push
dec
jo
iret
repz
mov
jl
out
push
ins
mov
iret
sbb
test
iret
repz
clc
inc
mov
out
shl
mov
jge
test
adc
push
push
je
repz
movs
outs
push
jl
cmp
ds
enter
jle
push
je
cmp
repz
mov
ss
repz
call
out
out
and
or
jl
repz
pushf
mov
out
cmp
repz
pop
je
mov
cmp
mov
xchg
cmp
mov
iret
repz
add
dec
push
push
ret
jns
out
movs
rcr
push
push
add
add
cmps
cmp
xor
in
retf
imul
add
pop
pop
jbe
add
and
ss
mov
mov
or
add
dec
add
in
and
das
cdq
cmp
mov
add
(bad)
xchg
add
movs
movs
sbb
add
push
mov
add
add
nop
fld
add
in
ins
int3
sbb
add
jb
cmp
dec
add
jb
cmp
jns
jb
enter
xchg
sysret
add
push
add
dec
add
pop
pop
xchg
fldenv
arpl
add
mov
es
bound
add
sbb
xchg
push
xchg
push
add
add
add
jae
sbb
adc
inc
fiadd
push
pop
add
nop
xchg
jne
ja
cmp
cmp
jns
jnp
mov
mov
loopne
jnp
fstp
loope
push
adc
std
mov
in
dec
push
call
add
dec
fld
les
pop
add
imul
add
push
add
(bad)
call
daa
adc
adc
adc
daa
sbb
sbb
and
daa
sub
daa
(bad)
push
(bad)
jmp
and
dec
and
dec
and
and
dec
mov
adc
dec
popa
push
enter
(bad)
(bad)
call
push
dec
jno
(bad)
loopne
stos
fisubr
fisubr
fidiv
ficom
mov
inc
ds
or
idiv
lock
retf
mov
retf
repnz
sti
(bad)
repz
and
(bad)
not
dec
and
stc
(bad)
jle
push
xchg
xchg
add
std
pop
add
push
or
stos
aas
rcl
mov
enter
loop
jecxz
in
jl
inc
add
add
add
mov
cmp
xor
js
sahf
push
mov
iret
repz
add
fiadd
sub
mov
cmp
push
add
cs
xor
inc
mov
les
mov
aas
fsub
in
bswap
push
outs
pusha
out
push
sub
add
(bad)
pushf
mov
int3
pop
loope
outs
mov
addr16
daa
or
repz
jae
push
xor
pusha
je
in
cmp
mov
aaa
ins
in
in
add
es
das
fadd
xchg
pop
cmp
push
mov
xor
cmp
repz
js
movs
mov
aam
add
push
push
xor
cmp
repz
fs
test
sti
cmp
rcr
add
scas
push
sub
cmp
repz
push
ins
sbb
(bad)
fdiv
or
repz
jae
push
cmp
jl
repz
nop
test
aam
add
inc
sub
push
fs
out
jl
test
fdiv
mov
aam
push
xor
iret
repz
pusha
je
mov
repz
lock
pop
push
xor
repz
inc
pop
jo
pushf
mov
iret
repz
in
adc
jbe
sahf
out
push
cmp
push
shr
push
(bad)
fdiv
jns
out
add
mov
xor
je
jns
out
mov
sahf
ja
clc
or
mov
xor
pusha
out
sahf
out
mov
jge
fdiv
add
mov
jns
out
jl
test
iret
sbb
aam
add
fiadd
sub
cmp
repz
push
ds
repz
add
(bad)
out
sahf
out
sub
push
sahf
nop
test
shl
clc
cmp
sbb
fsub
push
xor
repz
repz
mov
ds
fdiv
add
jle
xor
out
sahf
dec
fs
test
mov
call
sub
iret
repz
test
pop
dec
repz
dec
push
fdiv
or
cmp
mov
add
nop
push
adc
cs
xchg
into
daa
or
(bad)
dec
(bad)
jg
and
push
and
and
and
and
sub
addr16
(bad)
push
and
and
sub
sub
and
aaa
and
jmp
aas
and
inc
and
dec
and
mov
and
pop
and
pop
and
bound
push
and
fdivr
ins
and
jae
and
(bad)
(bad)
jg
dec
je
sub
cs
xor
ss
loop
add
inc
and
inc
and
inc
push
and
add
jmp
cmp
fisub
sub
sub
aaa
cmp
cmp
inc
dec
dec
dec
dec
push
push
push
pop
pop
pop
add
add
arpl
imul
outs
jno
jne
jns
jge
or
sbb
add
and
jle
lds
ss
cli
add
add
add
mov
add
rol
xor
xor
xor
add
xor
cmp
cmp
cmp
add
outs
cli
pop
inc
inc
add
inc
add
add
inc
add
add
dec
hlt
sub
add
add
dec
add
add
push
add
cmps
call
add
push
add
pop
add
pop
add
add
mov
pusha
add
bound
arpl
add
add
mov
push
add
push
imul
add
outs
add
cli
sbb
add
jae
add
jbe
ja
add
jp
das
js
add
add
jle
add
add
add
and
(bad)
(bad)
(bad)
inc
sub
sub
sub
sub
sub
sub
add
add
add
add
add
xor
(bad)
(bad)
(bad)
inc
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
add
inc
add
add
inc
(bad)
(bad)
(bad)
inc
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
cld
inc
pop
add
pop
add
pop
add
pop
mov
pusha
add
bound
arpl
fs
(bad)
(bad)
jmp
add
push
add
ins
add
outs
add
jo
jno
jb
jae
je
push
loope
push
jbe
ja
js
jns
jp
jnp
jl
jge
jle
mov
arpl
into
ret
jns
test
call
inc
push
mov
cmp
pusha
add
and
jmp
test
add
inc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
fdivr
adc
push
push
mov
call
out
into
mov
cmc
sub
xchg
(bad)
(bad)
call
inc
xor
fcomp
inc
mov
xlat
pop
mov
adc
std
(bad)
(bad)
(bad)
dec
or
inc
mov
rcl
es
(bad)
mov
pop
adc
(bad)
push
adc
add
(bad)
(bad)
inc
sti
shl
out
loope
(bad)
pop
aaa
ret
xchg
pop
inc
add
mov
(bad)
(bad)
fld
outs
mov
lea
cli
inc
popa
popf
ins
or
in
inc
jmp
(bad)
(bad)
(bad)
jmp
mov
mov
cli
daa
mov
aam
sbb
aam
in
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jl
pop
gs
lods
les
hlt
xchg
jmp
inc
cmps
and
ret
pop
pop
gs
int3
or
(bad)
(bad)
(bad)
(bad)
jge
out
call
pop
test
loopne
sub
adc
add
cmp
xor
jle
(bad)
mov
rol
add
mov
dec
inc
jl
or
push
and
and
fs
add
in
dec
fnstsw
loopne
inc
add
pop
(bad)
adc
jl
and
arpl
cwde
ds
jo
mov
cmp
popf
mov
out
mov
arpl
popa
fwait
pop
and
and
cmp
mov
cmp
ss
and
pop
ins
js
inc
push
out
mov
outs
dec
or
pop
pop
or
aaa
push
add
test
(bad)
lods
pop
add
sbb
and
and
or
lea
mov
fiadd
pop
push
sbb
sub
jne
and
dec
dec
and
aas
push
fisub
nop
add
inc
mov
push
iret
dec
aas
add
mov
out
aaa
loopne
push
sbb
ds
repnz
lock
sub
aaa
popa
cmp
push
aas
ins
and
jge
xchg
and
and
scas
xchg
jmp
add
inc
and
or
pop
add
daa
push
call
clts
pop
cmp
jg
inc
inc
out
push
inc
push
cmp
inc
(bad)
fisubr
iret
repz
(bad)
inc
jg
mov
sub
inc
inc
push
inc
xor
xor
dec
dec
dec
inc
pop
sbb
adc
push
out
mov
push
mov
and
push
jl
mov
push
pop
cmps
add
out
sbb
pop
inc
pop
loopne
int3
cmp
das
ja
data16
inc
inc
test
add
outs
test
add
xchg
push
and
sub
pop
jae
dec
adc
dec
or
or
push
add
dec
mov
enter
jns
add
push
or
out
add
aaa
mov
sub
aaa
dec
fisttp
inc
push
add
mov
push
stc
icebp
loope
sub
repz
fiadd
cld
push
clc
lock
mov
dec
aam
add
push
shl
or
cmp
add
xor
bswap
aas
inc
mov
(bad)
(bad)
push
dec
mov
jae
dec
mov
shr
sbb
and
adc
das
out
pop
fbld
(bad)
call
ins
pushf
pop
mov
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwde
(bad)
(bad)
(bad)
call
fs
push
stos
imul
add
xor
push
into
inc
shl
or
inc
mov
(bad)
(bad)
push
dec
mov
jno
dec
mov
shr
out
push
fisub
loope
shr
bound
push
scas
outs
sahf
pop
mov
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
dec
mov
jp
inc
mov
mov
jns
inc
mov
sub
sbb
es
(bad)
sub
sbb
and
push
jg
clc
call
xchg
push
test
gs
push
mov
inc
lds
mov
inc
dec
push
dec
xor
and
jae
push
xor
mov
sbb
push
bound
mov
inc
sub
pop
push
pop
push
and
mov
or
fwait
cdq
outs
push
ss
and
sbb
or
outs
push
push
sbb
cmps
mov
scas
push
push
ss
xor
dec
mov
xor
aas
mov
outs
dec
xchg
scas
out
aas
stos
adc
shl
sub
cmp
cmps
shr
aas
mov
push
loope
pop
stos
jb
push
test
retf
ret
lahf
inc
or
mov
out
rcl
push
sbb
mov
adc
icebp
add
pop
out
and
fiadd
mov
and
scas
shl
push
mov
push
push
adc
jns
out
cmp
xor
and
jp
out
push
addr16
push
push
jns
ja
js
push
xor
cmp
jo
out
sub
mov
xor
popf
out
push
ss
aaa
popf
loopne
stos
sbb
pop
addr16
pop
out
pop
push
pop
push
pop
sar
add
out
pop
sbb
test
out
addr16
or
rcr
das
aaa
ja
pushf
ret
jne
inc
push
pop
aas
pop
into
jmp
sbb
pop
scas
push
push
push
out
sub
xchg
aaa
daa
pop
jo
jns
inc
push
ins
addr16
cmps
pop
adc
push
push
jno
out
das
dec
cmp
jmp
push
scas
outs
jns
js
dec
out
add
dec
out
bound
jo
aaa
fadd
out
repnz
int3
cmp
add
iret
mov
pop
lods
add
pushf
pop
outs
aaa
ja
rol
mov
push
and
sbb
add
add
push
pop
or
or
add
hlt
jmp
cmp
add
add
add
es
mov
adc
xor
(bad)
(bad)
inc
adc
pop
and
xor
inc
mov
adc
xor
xor
(bad)
(bad)
call
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
(bad)
(bad)
(bad)
call
fs
jae
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
(bad)
(bad)
(bad)
call
movs
cmps
cmps
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
sar
call
(bad)
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
gs
pop
gs
dec
add
lahf
adc
push
pop
popa
jno
and
pop
or
adc
push
push
lock
shl
xor
and
or
and
imul
gs
add
daa
sub
psubusw
jae
rcl
mov
in
fcomi
jg
dec
cdq
or
lds
mov
and
pop
std
push
jg
mov
mov
pusha
inc
xchg
xor
add
mov
enter
jl
push
inc
fldcw
dec
or
or
data16
pop
cld
pop
nop
and
sbb
adc
mov
mov
push
push
mov
mov
xchg
adc
push
enter
iret
repz
push
clc
sahf
out
adc
sub
xor
out
pushf
mov
repz
repz
test
fdivr
adc
ds
dec
push
jl
mov
add
out
sahf
cmps
sub
pop
jo
iret
sbb
in
aas
dec
push
pop
test
repz
enter
inc
sahf
out
fidiv
rcr
jne
jns
sub
in
add
cmps
xlat
jbe
mov
push
pushf
push
mov
cld
push
jns
cmp
sub
add
cwde
push
mov
fsubr
cdq
cmp
cmp
mov
push
pop
ret
xchg
push
mov
les
add
sahf
ja
test
lds
push
ins
jns
out
sbb
dec
repz
and
push
je
sti
cmp
mov
mov
call
sub
out
sahf
out
js
rcr
sahf
ja
lock
cmps
push
dec
ins
xchg
sbb
mov
call
iret
repz
inc
pop
mov
clc
cmp
sbb
push
push
pop
add
out
movs
enter
pop
test
jecxz
sbb
push
mov
add
fistp
cmp
jg
cmp
sbb
lahf
or
push
movups
out
push
clc
adc
adc
sbb
and
call
sub
cs
xor
xor
inc
inc
adc
aas
add
dec
dec
dec
dec
dec
push
push
push
adc
bound
imul
jo
jb
dec
loopne
daa
outs
add
ins
jle
jb
jge
ins
add
push
rcl
push
push
add
add
scas
adc
hlt
push
mov
call
adc
mov
fimul
xchg
dec
sbb
add
add
push
fdivr
ins
addr16
(bad)
lds
in
int3
push
test
xchg
pop
ret
inc
les
and
outs
mov
push
inc
jns
out
test
dec
repz
cmp
add
adc
mov
add
outs
lahf
cmps
stc
inc
push
push
xor
lahf
out
xor
lods
test
mov
jl
jo
push
ins
push
or
xor
js
shl
sbb
repz
mov
stc
adc
xor
pushw
je
iret
sar
in
outs
and
js
into
repz
mov
ins
fwait
clc
mov
pop
add
push
loop
or
inc
setp
pop
add
adc
or
add
sahf
iret
mov
add
add
jne
add
add
iret
shr
add
movs
shl
fldenv
and
and
push
mov
je
ja
adc
out
addr16
test
(bad)
push
jl
ss
mov
fstp
ds
mov
sub
pop
push
std
push
adc
cs
out
jnp
push
push
mov
outs
daa
push
sbb
mov
mov
movs
xchg
data16
lods
(bad)
popa
xlat
ss
add
aam
pop
xor
fcomp
push
sti
ins
neg
pusha
stc
data16
les
push
jno
push
cld
xchg
push
clc
pop
sub
mov
outs
outs
aam
push
inc
cmp
add
add
mov
sar
(bad)
mov
push
dec
test
fidiv
scas
pusha
xchg
int3
ss
lock
pushf
mov
xor
in
das
mov
push
inc
jge
pxor
out
push
test
sub
pushf
idiv
mov
outs
mov
fiadd
jle
dec
fidivr
ret
jl
clc
ss
es
(bad)
mov
imul
aam
cmps
sbb
mov
faddp
pop
jbe
out
movs
push
in
shl
ret
xor
xchg
push
into
sbb
clc
xchg
mov
es
jle
pop
cmp
test
int3
mov
(bad)
(bad)
or
mov
rcl
and
loopne
cmp
add
es
ss
lock
sahf
mov
mov
mov
mov
sar
ror
inc
jnp
dec
in
fiadd
push
div
ficom
jl
fsubr
inc
inc
ds
loope
add
scas
int3
ds
out
or
ins
jnp
pop
pop
jl
mov
pop
xchg
push
xchg
ds
cmp
add
sbb
mov
jo
push
push
faddp
and
push
lock
push
nop
xchg
sahf
xor
pop
ss
(bad)
mov
lock
jnp
mov
dec
push
es
push
or
loope
ja
and
mov
test
dec
cmps
out
neg
(bad)
into
les
add
pop
aam
dec
out
push
jo
ds
push
test
lods
jle
xlat
sbb
jo
enter
cs
adc
push
fiadd
sahf
in
adc
mov
je
pushf
jle
cs
fs
cs
push
fs
shl
xchg
jbe
imul
mul
loop
jbe
sahf
clc
(bad)
dec
inc
dec
test
out
pop
mov
cmps
lods
scas
mov
hlt
(bad)
loopne
loopne
lods
add
inc
lock
out
jns
push
mov
lods
mov
cmp
cld
push
ret
cmp
les
sbb
inc
sbb
jo
sub
inc
adc
not
cs
push
sahf
test
sahf
rol
ss
out
lock
(bad)
sub
les
jg
pop
out
cmp
cmp
shl
out
fmul
fadd
jnp
xor
pop
es
mov
ins
pop
shl
jle
mov
jbe
out
fidivr
in
sti
push
fdivp
pop
lods
fsub
in
into
pusha
xchg
cmp
mov
or
push
out
jnp
out
jge
add
cmp
cld
jbe
inc
ins
mov
push
faddp
call
into
adc
and
sti
cs
mov
ins
inc
and
mov
ja
push
push
lods
(bad)
jl
or
and
outs
sbb
lods
mov
cmps
mov
dec
pop
out
loopne
push
in
ss
outs
push
mov
ds
push
sub
fadd
adc
push
add
in
ins
push
mov
pop
fsub
je
loopne
cmp
push
call
push
push
sub
jnp
fisub
xor
clc
addr16
cwde
ficom
scas
lock
loopne
loopne
sub
xor
and
and
dec
scas
jge
inc
xor
adc
and
out
xor
out
mov
mov
mov
mov
scas
(bad)
neg
ret
in
cs
dec
push
nop
inc
inc
out
out
cmp
fmulp
push
sbb
add
outs
call
mov
je
lock
pop
out
jp
cmp
ds
outs
test
sbb
push
fidivr
(bad)
pushf
jle
push
lods
xchg
or
faddp
adc
push
idiv
push
push
cmp
lock
repz
jbe
imul
xlat
pop
xor
lods
into
sub
pushw
add
sbb
mov
sahf
cmp
pxor
xchg
pop
data16
call
sar
dec
push
movs
ss
sub
aad
ds
outs
jo
xchg
loop
mov
pop
ds
push
mov
js
jecxz
in
dec
int3
mov
into
lock
push
fidivr
jl
push
addr16
push
pusha
aas
xchg
mov
or
xchg
outs
add
aas
cmp
outs
ss
les
sahf
sar
push
sbb
pushf
mov
mov
fs
mov
pop
data16
scas
loopne
sbb
ss
mov
lock
out
cmp
push
sub
push
mov
pop
out
mov
outs
nop
inc
je
pusha
push
fs
push
push
faddp
add
ds
shl
div
pop
out
inc
nop
jbe
(bad)
in
or
jo
sub
push
jle
mov
mov
sub
clc
xchg
mov
cld
fdivp
jnp
out
cmp
data16
mov
inc
js
jl
push
xchg
push
(bad)
retf
pop
cmps
data16
cld
cmp
neg
cmp
ins
inc
dec
xchg
jbe
out
hlt
push
out
cmp
scas
push
push
pop
js
loopne
push
loopne
ss
push
mov
out
xchg
add
aas
ins
mov
loop
push
test
inc
jle
jbe
sbb
inc
jl
movs
aad
inc
push
enter
cmp
xchg
or
in
loopne
loope
xor
fs
push
cmovg
push
push
push
iret
jnp
xchg
loopne
cwde
scas
test
cmps
push
ffreep
es
ds
cs
ins
ds
push
mov
(bad)
cld
outs
dec
sbb
cld
dec
mov
clc
js
loope
cld
jle
push
aam
hlt
inc
enter
cmp
adc
mov
push
xchg
icebp
lock
mov
sbb
ja
je
sub
pop
ins
cmps
jbe
out
mov
inc
pusha
outs
or
push
cmp
cmp
pop
cs
dec
les
js
sahf
sar
fcom
push
mov
lock
or
int3
and
push
jo
sub
cmc
push
jo
lods
jle
mov
ss
scas
data16
mov
out
loop
sbb
sub
inc
cs
mov
faddp
add
push
inc
pop
add
lock
neg
cs
dec
pop
xchg
adc
fcomp
out
push
xchg
(bad)
int3
out
loopne
pop
mov
xchg
push
ins
div
fiadd
mov
or
sbb
xor
out
pop
mov
adc
inc
push
ins
pop
out
mov
data16
hlt
push
test
cs
js
mov
adc
div
ds
jmp
xchg
mov
push
int3
jbe
not
cld
(bad)
clc
dec
movs
into
or
loop
mul
push
dec
or
inc
push
sbb
out
ins
pop
sahf
push
xor
sub
ret
cwde
out
nop
out
push
add
cmp
jnp
pop
out
into
cwde
es
sahf
ins
test
xor
out
inc
inc
push
fcomp
push
or
inc
nop
jle
mov
loopne
mov
adc
xchg
scas
sbb
scas
(bad)
adc
rcr
cld
(bad)
outs
outs
loopne
sbb
push
mov
sahf
sub
pop
pop
out
mov
mov
push
out
mov
data16
sbb
jnp
xchg
(bad)
mov
cmp
in
or
ret
stos
ss
lods
out
in
je
fidiv
data16
je
sbb
cmp
cmp
mov
cwde
push
test
cmp
xchg
shr
les
test
out
mov
cs
es
xor
cmp
mov
out
xchg
jnp
sysret
es
sahf
sbb
test
push
push
cs
mov
pop
jle
test
lock
test
(bad)
movs
push
aam
loopne
jmp
xchg
pusha
sar
loopne
add
and
push
sub
sbb
mov
dec
add
icebp
faddp
add
or
ins
cmps
lods
xchg
lock
xlat
xchg
dec
push
push
dec
(bad)
int3
jbe
mov
cs
jnp
jo
out
inc
into
pushf
mov
jbe
neg
ret
arpl
in
out
out
sbb
nop
jbe
push
loopne
sahf
cmp
adc
movs
(bad)
jge
div
dec
mov
les
enter
pop
out
loopne
xor
add
test
faddp
jnp
dec
mov
into
aam
pushf
(bad)
cld
push
fdivp
push
xchg
push
je
outs
shr
les
cmp
push
xor
cmps
xor
xchg
sar
push
jle
jle
xchg
pop
mov
cwde
es
dec
push
mov
mov
xchg
cwde
mov
mov
cmp
push
pushf
push
cmp
hlt
es
pusha
add
ja
ja
mov
mov
loope
xchg
es
jl
pop
neg
jnp
into
sub
cmps
fdivr
pop
sahf
mov
cs
out
js
xor
loopne
push
mov
(bad)
xchg
pop
in
cmp
cmp
push
mov
cmp
mov
scas
dec
ss
lock
ret
fcomp
pushf
data16
div
out
fs
data16
lods
jle
nop
out
push
hlt
callw
addr16
test
jp
pop
push
in
(bad)
push
push
pusha
dec
int3
ds
cs
faddp
mov
lock
ror
mov
push
xor
je
cmp
nop
push
push
push
fild
push
(bad)
in
mov
adc
mov
xchg
outs
mov
push
mov
jnp
pxor
ins
push
fcomp
es
(bad)
shl
and
adc
sbb
push
pop
ds
outs
push
aam
xor
in
sub
inc
mov
cmp
pop
js
rcl
xor
inc
data16
cmp
add
call
pop
cmp
xchg
push
jle
out
in
sahf
mov
add
shl
aam
idiv
ret
mov
dec
mov
ret
rol
jle
xchg
mov
(bad)
mov
test
ret
lds
ss
jle
xchg
or
scas
addr16
fisub
fiadd
js
out
mov
test
dec
out
inc
push
hlt
cmp
xor
(bad)
or
mov
jl
cld
iret
mov
rol
push
and
jo
mov
push
in
dec
mov
js
loopne
pop
push
push
cmp
fs
jp
push
push
xor
cli
call
or
sub
clc
xchg
sub
fidiv
movs
scas
push
cld
mov
scas
pop
mov
mov
push
mov
or
out
mov
loopne
rcl
jl
sbb
xlat
jbe
ss
jle
out
lock
jle
(bad)
xchg
data16
add
sub
add
push
mov
out
loope
pop
fidivr
sbb
mov
lds
mov
mov
sar
into
adc
sbb
adc
sub
mov
ja
add
mov
mov
ds
jle
push
pusha
ds
jnp
mov
jbe
into
cmp
aaa
ret
es
(bad)
clc
jo
sbb
ss
push
test
aaa
js
mov
mov
push
(bad)
push
add
sbb
inc
mov
dec
xchg
mov
dec
out
cmp
push
hlt
into
dec
push
shr
js
sbb
fadd
pop
push
hlt
(bad)
lock
shr
into
les
cmps
pop
mov
movs
push
clc
sbb
loopne
es
push
jle
icebp
fimul
loop
dec
je
pusha
mov
inc
push
cwde
pop
paddd
jnp
aas
out
push
outs
clc
mov
push
sahf
push
call
xchg
xor
push
mov
test
je
add
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
add
push
lahf
out
add
push
fs
add
xor
ins
ss
jecxz
in
xchg
dec
sahf
out
movs
fadd
rcr
test
loopne
in
fsub
out
lods
ss
clc
ds
mov
mov
push
add
lock
mov
or
xlat
pop
sbb
ss
out
mov
sahf
or
add
sar
or
sahf
scas
mov
dec
sub
clc
aas
movs
lock
out
rcl
ss
iret
xor
jmp
repz
sbb
jmp
out
out
adc
out
sahf
int3
pusha
mov
mov
pop
dec
inc
push
sbb
ds
repz
mov
sbb
push
repz
in
cs
and
jo
pop
adc
repz
cmp
dec
add
daa
dec
mov
int3
mov
cmp
repz
ins
push
cmp
jns
cmps
stc
clc
xor
cld
xor
out
push
lods
push
imul
sahf
test
fadd
add
div
outs
out
mov
push
or
xlat
popf
xor
pop
push
push
xchg
cwde
push
jge
outs
iret
lods
int3
daa
hlt
bndldx
out
push
ins
mov
sahf
shl
cli
add
dec
sub
out
push
inc
pop
je
cwde
jecxz
jnp
add
unpcklps
jnp
add
push
push
push
je
daa
add
sub
jb
gs
xor
cs
jns
gs
outs
imul
in
push
arpl
jae
jb
outs
data16
je
outs
outs
ds
jae
jo
mov
push
push
push
push
outs
push
bound
xchg
push
pop
dec
rcr
in
dec
outs
push
data16
inc
adc
mov
fsave
inc
cmp
daa
inc
ins
outs
inc
sub
jo
push
sbb
xor
add
mov
push
push
outs
xchg
jg
imul
imul
addr16
jb
fs
cs
imul
popa
inc
cmps
scas
jae
(bad)
test
outs
ja
xor
and
scas
gs
popa
ins
gs
inc
daa
adc
inc
mov
gs
push
adc
sub
pop
gs
jb
pusha
and
gs
ds
ins
pop
ja
fs
arpl
gs
mov
mov
fst
inc
lock
jb
inc
imul
sub
dec
js
push
xor
inc
jne
inc
gs
popa
mov
push
fistp
inc
outs
cld
out
and
jbe
mov
inc
adc
mov
je
jo
ins
inc
push
add
sbb
imul
inc
pusha
and
ret
mov
sub
inc
ds
fbld
gs
inc
js
push
ins
and
and
dec
jo
dec
cmp
inc
out
jp
daa
jno
jbe
int3
ret
xor
xor
shl
xlat
or
cwde
mov
mov
inc
pop
xchg
sub
inc
jbe
jmp
dec
cs
dec
mov
dec
(bad)
shr
pop
mov
xor
xchg
or
xor
adc
add
test
mov
cmps
inc
test
je
cmp
add
dec
push
ja
jae
div
xor
xor
xchg
dec
hlt
shl
cwde
(bad)
push
outs
addr16
jecxz
outs
sbb
arpl
jo
push
inc
xchg
mov
(bad)
loope
outs
push
mov
push
or
mov
div
cmp
ret
cmp
cmp
and
pop
push
rol
xor
cmp
out
or
push
sub
xor
fadd
inc
push
retf
outs
ins
outs
popa
sbb
gs
add
je
outs
fs
ins
jo
xchg
outs
aaa
adc
idiv
gs
push
int
fld
adc
push
push
in
mov
inc
push
xor
ja
adc
push
dec
ret
add
bound
arpl
outs
and
jo
in
(bad)
jmp
and
jb
push
imul
ins
jo
ins
xor
jbe
jae
neg
fsub
xor
xor
sub
xor
xor
aaa
xor
cs
xor
xor
cdq
add
push
push
adc
call
push
add
add
dec
add
or
out
call
push
push
sbb
inc
add
dec
add
inc
add
ucomiss
mov
jmp
push
sbb
dec
adc
push
inc
data16
scas
adc
or
lods
xor
ss
push
xchg
jae
data16
ins
ss
push
es
cmp
cmp
xor
dec
push
jnp
or
dec
xchg
or
sahf
or
add
and
aaa
jb
mov
xor
loop
or
out
jl
mov
add
add
into
and
inc
xchg
add
or
xchg
sbb
inc
clc
in
jnp
add
sub
rol
daa
xchg
sbb
ret
jnp
mov
inc
pop
add
pop
mov
(bad)
fadd
das
pop
mov
clc
aas
push
pop
call
loop
les
add
cwde
fstp
ss
or
push
adc
(bad)
je
shl
pop
addr16
xor
mov
push
or
push
mov
sar
rol
and
mov
push
add
mov
pop
or
jg
jae
cmp
data16
sbb
ficomp
je
cs
out
cmp
loopne
push
sbb
dec
pop
lock
push
sbb
or
pop
mov
pushf
jae
das
aas
pop
xchg
pop
addr16
call
xor
pop
fwait
mov
xchg
std
cmp
mov
push
mov
add
in
cmp
jg
jg
jg
pop
out
mov
retf
jno
and
jns
mov
int3
mov
adc
sar
xor
push
mov
pop
pop
les
jl
loopne
inc
adc
push
push
retf
repz
dec
add
jnp
mov
push
or
adc
daa
push
jnp
cdq
or
cmp
xorps
adc
out
dec
pop
outs
daa
add
push
add
push
push
pop
bswap
clc
lock
fcmovb
jmp
push
and
out
or
inc
pop
outs
daa
(bad)
mov
adc
mov
sbb
jae
shl
not
pop
sbb
stos
dec
test
fmul
jae
cmp
pop
das
aas
pop
jg
xor
data16
dec
xlat
pop
in
les
cmp
mov
jg
sub
pop
add
add
add
addr16
lods
or
pusha
pop
cmp
fadd
sub
stos
cs
cmp
pop
sub
sbb
test
add
addr16
scas
mov
jge
cmp
sbb
cmp
push
sub
jl
dec
out
inc
add
inc
add
loope
popa
inc
xor
sbb
movs
jecxz
or
push
sbb
push
add
arpl
(bad)
jl
mov
push
xor
not
clc
dec
sbb
mov
push
sbb
push
sbb
or
test
shl
loopne
shl
xchg
mov
or
dec
test
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
call
and
add
jno
jne
popa
(bad)
fiadd
ins
push
jbe
sbb
push
adc
repz
or
jae
pop
outs
add
imul
mov
or
arpl
add
push
addr16
fucomp
mov
or
push
bound
push
xor
mov
sub
mov
sbb
inc
imul
xor
cs
es
push
fmul
mov
pop
add
jbe
adc
sbb
xor
inc
lods
or
or
es
push
push
aaa
push
ret
and
xchg
sbb
dec
jo
cwde
retf
add
push
out
dec
jae
int3
int3
push
add
outs
jp
cmps
push
(bad)
cdq
pop
cmp
or
cmp
cmp
jbe
cwde
add
add
add
int3
add
add
push
out
cs
and
in
out
push
ds
push
fdiv
sbb
or
nop
cmp
adc
sti
pop
cmp
pushaw
sbb
sub
push
data16
adc
push
pop
cmp
push
jle
inc
add
cmp
push
jg
inc
xlat
ds
jo
mov
scas
ret
and
cmps
loopne
or
test
fimul
sub
sbb
jae
cdq
sub
out
out
iret
cmp
xor
jg
repz
push
jle
inc
(bad)
int3
sbb
ror
inc
add
es
adc
push
or
sub
sub
jae
and
jmp
pop
add
movs
ret
pushf
ss
jo
shl
das
push
ins
stos
and
mov
pop
test
dec
mul
xchg
and
(bad)
aaa
add
scas
and
gs
data16
mov
inc
int3
dec
in
das
jnp
fisub
inc
cmps
(bad)
dec
add
inc
add
add
add
add
add
add
add
xchg
mov
xor
add
xchg
jae
mov
cmp
adc
and
mov
(bad)
repnz
mov
and
fidivr
push
add
sbb
ss
mov
jb
and
arpl
scas
ffree
and
aas
ltr
bound
xchg
and
int3
pushf
fld
fld
or
ds
ss
rcr
cmp
add
in
call
push
sbb
inc
data16
int3
sbb
ror
pusha
pushw
push
sbb
cs
mov
jbe
push
dec
sbb
push
or
scas
scas
sbb
daa
es
dec
aaa
sbb
adc
fdivr
cmp
dec
jo
pop
adc
push
add
popa
pop
push
pop
(bad)
(bad)
aas
arpl
or
data16
push
aas
repz
cmp
ds
push
cmp
sub
ss
ja
xor
pop
mov
push
cwde
imul
outs
jmp
push
mov
and
xor
dec
push
sti
and
pop
wrmsr
xor
mov
mov
adc
push
int
ins
jnp
jp
inc
scas
xor
or
mov
and
daa
xor
mov
and
adc
out
or
aas
adc
push
pusha
mov
xor
ficomp
mov
push
or
push
inc
jecxz
add
add
adc
dec
add
lods
inc
push
dec
add
inc
sub
xchg
(bad)
or
loopne
daa
cmp
push
rcr
mov
pop
or
xor
pop
sbb
adc
xchg
das
push
daa
xchg
push
push
push
ja
jae
cmp
ss
push
add
mov
dec
sbb
add
pop
pop
inc
adc
add
cmp
push
outs
add
or
jnp
pusha
jbe
sub
inc
test
and
cmp
pusha
adc
sub
add
pop
jae
add
(bad)
push
sbb
pop
xlat
cli
(bad)
enter
sbb
mov
das
into
push
jne
test
aaa
daa
test
push
jb
stos
push
or
or
retf
gs
es
cdq
cdq
and
push
push
xchg
xchg
xchg
(bad)
adc
rol
sbb
jmp
adc
pusha
jbe
rol
scas
push
push
mov
out
push
cmp
and
(bad)
sbb
call
arpl
mov
rcr
sti
mov
or
adc
lds
cli
mov
arpl
sbb
mov
adc
pop
cwde
retf
adc
sbb
aad
adc
push
dec
pop
mov
loop
sbb
push
ja
push
push
and
pusha
mov
add
(bad)
inc
stos
jae
push
mov
jmp
stos
repnz
or
sub
xor
adc
ds
pop
xchg
sub
adc
rcr
int3
sub
cmp
retf
ret
adc
pop
pop
out
mov
addr16
or
repz
loope
sbb
mov
lahf
ja
xchg
fs
and
and
add
or
outs
aaa
add
mov
jnp
pop
aas
or
popa
pusha
xlat
xor
add
jae
xor
adc
scas
push
test
inc
mov
pop
sub
daa
add
jmp
inc
loopne
mov
add
fadd
xchg
loopne
mov
loope
retf
scas
push
mov
movlps
sub
pop
shr
sub
adc
add
or
fwait
sub
cmp
movs
ja
pop
into
in
and
sbb
mov
cmp
shl
push
popa
pop
sbb
sar
stos
add
arpl
shr
dec
push
sti
adc
sub
aaa
push
sub
jp
and
pop
mov
shl
(bad)
mov
scas
mov
dec
push
(bad)
adc
(bad)
dec
pusha
and
je
imul
ret
cmps
dec
cmp
adc
shl
ja
inc
add
or
lods
fisubr
xchg
jmp
addr16
ret
aaa
push
fwait
addr16
sbb
rdmsr
mov
push
xlat
sub
jae
or
add
adc
rol
adc
lahf
movs
cmps
or
mov
sub
mov
(bad)
mov
addr16
inc
xor
push
pop
cmps
cmps
mov
mov
inc
dec
cs
or
imul
adc
dec
pusha
mov
aaa
mov
sbb
sbb
xchg
jbe
pop
rep
or
add
inc
fisub
xor
add
ret
pusha
imul
xor
fs
leave
enter
jg
mov
loopne
mov
in
pop
jb
or
cdq
xchg
dec
mov
pop
fwait
cmp
or
mov
fistp
out
sub
adc
pusha
adc
and
sti
and
adc
add
(bad)
push
test
sbb
(bad)
mov
xchg
push
pop
push
js
pop
adc
mov
lahf
cli
fwait
imul
add
sub
sbb
pop
mov
loope
xor
fild
xchg
push
call
mov
jns
dec
inc
or
push
stos
icebp
mov
pop
daa
sbb
sub
xor
test
mov
add
inc
retf
pop
test
rcr
shr
jae
xchg
jg
xor
sub
pop
xor
add
inc
(bad)
aas
cmp
xor
adc
and
mov
ja
fs
push
scas
pop
stos
pop
mov
add
ja
scas
and
add
cdq
jle
(bad)
das
sub
retf
sub
xchg
or
inc
push
jae
aaa
adc
pop
and
adc
push
push
cdq
retf
and
iret
sti
repz
or
ret
sub
add
repz
push
mov
jnp
cmp
add
addr16
jecxz
add
adc
pusha
dec
cmp
(bad)
adc
jp
xlat
in
sbb
push
or
scas
or
xor
adc
pusha
bound
xor
(bad)
sub
push
ja
adc
xor
(bad)
push
into
push
cmp
add
shr
ss
and
and
gs
imul
mov
sub
or
push
pop
iret
and
cdq
fidivr
fiadd
mov
mov
mov
sbb
popa
add
outs
sub
add
das
jno
jmp
lea
and
add
sub
mov
add
add
dec
mov
das
aas
fld
aaa
add
es
mov
or
mov
push
dec
retf
push
loopne
mov
test
adc
call
rcr
js
jmp
ja
xor
ins
xor
inc
mov
or
retf
loopne
mov
or
adc
or
or
pop
(bad)
shl
push
paddd
add
adc
jbe
ja
aaa
add
or
xchg
add
mov
and
xchg
jecxz
rol
hlt
pop
jmp
sbb
lock
mov
xor
xor
dec
inc
sbb
or
js
jb
lahf
cmps
dec
xlat
push
daa
cmps
arpl
das
bound
retf
test
sbb
jae
pop
lea
pop
test
fbld
push
xlat
sbb
inc
or
mov
push
adc
add
add
xor
arpl
iret
mov
xlat
sub
or
and
cmp
inc
mov
pop
jg
mov
inc
xor
push
and
dec
dec
or
inc
cmp
repnz
test
sbb
sar
aas
ja
xlat
mov
or
(bad)
push
xchg
inc
push
test
adc
repz
or
(bad)
scas
inc
xor
jg
test
ret
(bad)
nop
call
mov
fimul
mov
sti
push
fild
xor
add
adc
mov
nop
pop
ret
fisttp
ror
test
inc
pop
or
pop
or
fidiv
and
daa
and
push
add
inc
adc
imul
(bad)
fild
das
jle
or
mov
arpl
pop
loop
into
out
pop
push
mov
sbb
adc
pop
stos
call
mov
fwait
mov
sbb
mov
add
scas
ja
push
add
mov
xchg
out
stos
mov
xchg
call
jae
mov
das
push
and
mov
ss
ret
jecxz
xchg
push
repz
fmulp
nop
lahf
ret
sti
jmp
das
movs
or
sbb
xchg
adc
sub
jmp
xor
mov
or
mul
xchg
push
xchg
arpl
xchg
sub
fadd
xchg
mov
nop
movs
mov
or
push
jecxz
sbb
test
loop
push
jg
call
add
idiv
test
sub
stos
dec
xor
dec
ret
xlat
mov
imul
ror
jae
xchg
mov
mov
fld
or
xchg
pop
fisttp
inc
pop
(bad)
pop
jl
ins
iret
pop
pop
retf
or
lods
pop
xlat
daa
or
data16
mov
pop
out
cmp
fbld
inc
mov
jb
int3
dec
pop
sbb
mov
pop
iret
mov
lahf
fwait
adc
pop
cmps
cmp
xchg
daa
out
and
or
mov
xor
(bad)
pusha
adc
daa
retf
cmp
imul
pop
pop
mov
inc
sub
fldenv
add
inc
inc
mov
mov
fisttp
sbb
sbb
jecxz
adc
add
test
imul
dec
push
inc
sbb
cmp
int3
mov
pop
rol
or
fst
out
inc
jp
bound
xchg
adc
call
rol
add
mov
dec
adc
add
inc
add
pop
xor
cmp
push
xor
sbb
xchg
sbb
or
xor
cmp
sub
(bad)
add
or
add
(bad)
pusha
xchg
pusha
adc
pop
pusha
xor
xlat
not
stos
cli
inc
pop
inc
loopne
mov
push
popa
sbb
mov
push
not
ret
mov
xchg
add
dec
xor
push
inc
ret
mov
adc
mul
push
xchg
pop
and
jo
sbb
rcr
movs
sub
ret
dec
mov
add
dec
xor
scas
xor
dec
mov
adc
or
push
jg
or
loope
and
leave
and
sub
stos
sbb
jbe
push
daa
sub
dec
add
arpl
or
dec
repz
sub
push
pop
aaa
scas
add
nop
push
mov
daa
pop
and
xor
inc
imul
shr
sti
xor
add
mov
push
and
adc
adc
or
mov
add
les
sti
scas
mov
mov
jg
call
sbb
pop
jg
bound
mov
and
das
cmps
push
inc
mov
ret
adc
mov
popa
jecxz
sub
add
lea
ret
(bad)
movs
int3
jg
lahf
ja
mov
ss
xor
or
into
inc
cmps
iret
jecxz
pop
inc
sbb
sbb
adc
adc
or
add
pop
and
daa
cmp
add
or
test
xchg
and
push
sbb
out
rol
ret
adc
mov
lahf
movs
ret
sbb
cmp
adc
pop
loopne
sub
xchg
shl
fcom
scas
addr16
xor
and
(bad)
xor
das
gs
jg
fisttp
xchg
pop
xchg
dec
mov
frstor
inc
(bad)
mov
stos
add
pop
jo
or
jae
adc
pop
cmp
and
mov
add
adc
ret
push
mov
jmp
push
popf
pop
or
xchg
pop
ret
inc
test
dec
ret
push
sti
add
push
neg
mov
mov
sub
sbb
sub
add
mov
dec
inc
or
das
imul
sbb
xor
cmp
ror
xlat
push
jmp
loope
push
fwait
lahf
sbb
and
and
sbb
cmp
ja
adc
mov
adc
ret
pop
push
sbb
call
das
daa
inc
adc
adc
inc
xor
mov
pop
pop
movs
les
or
adc
or
adc
inc
cmps
push
call
test
loop
loop
cli
sbb
mov
add
imul
xchg
inc
xchg
mov
sub
outs
mov
sub
loopne
sub
div
dec
sub
sbb
mov
sbb
es
push
dec
dec
mov
adc
mov
dec
xor
inc
push
imul
push
loopne
ss
sub
mov
push
push
data16
test
add
dec
push
mov
xchg
sub
add
lds
out
scas
pop
xlat
popa
adc
mov
test
pop
push
mov
lods
xchg
add
pop
cmp
add
mov
das
imul
aad
cmps
fisttp
rol
in
jo
lahf
cmp
dec
ret
mov
loopne
or
scas
xchg
(bad)
push
stos
rol
push
jmp
aad
push
pusha
adc
inc
shr
xchg
cmp
mov
mov
sbb
inc
es
cmp
add
pusha
add
xchg
or
add
jae
pop
add
adc
stos
iret
imul
push
push
scas
pop
shl
jne
inc
push
mov
or
add
jecxz
retf
sbb
outs
inc
adc
mov
(bad)
mov
adc
jbe
scas
jae
adc
das
imul
ret
test
adc
(bad)
xlat
xchg
mov
add
adc
add
outs
rol
sti
and
or
mov
mov
mov
add
inc
scas
xchg
(bad)
out
sar
pop
and
adc
leave
mov
shr
addr16
test
(bad)
test
pop
sub
inc
cwde
movs
and
sbb
sbb
pop
das
add
stos
sub
or
iret
test
pop
movzx
and
inc
mov
dec
aas
sub
loopne
rcr
ds
ret
push
and
pop
xlat
adc
loopne
add
add
add
or
jmp
add
pop
sbb
into
or
cmps
pop
or
and
adc
and
inc
adc
pop
push
push
add
push
dec
ss
ss
pop
dec
xchg
and
sahf
xchg
cwde
cs
mov
add
xchg
jle
xchg
movs
or
and
dec
sbb
xchg
cmp
dec
pop
xor
jo
mov
sub
lahf
call
lahf
cmp
dec
add
or
and
and
addr16
dec
adc
subps
adc
pop
xchg
add
dec
aaa
mov
mov
ret
xchg
jnp
arpl
xchg
into
xor
or
add
sub
or
add
or
repz
div
pushf
mov
pop
fldenv
sbb
or
add
mov
and
arpl
sbb
pand
imul
inc
(bad)
mov
add
outs
pusha
jne
jl
shl
mov
dec
outs
sbb
ret
xor
dec
add
mov
push
add
adc
enter
mov
ss
ja
xlat
pop
cmp
add
retf
stos
mov
sbb
cs
mov
jae
inc
and
cmp
add
or
cdq
scas
or
ficom
imul
mov
mov
mov
sar
mov
jns
push
enter
adc
mov
inc
mov
inc
aaa
xchg
cmp
push
mov
enter
xor
mov
push
jecxz
xchg
dec
inc
mov
pop
jae
loopne
pushf
gs
out
push
add
iret
or
inc
fadd
ret
fwait
inc
add
jp
mov
push
xor
dec
mov
push
push
add
inc
imul
sbb
inc
or
pop
add
push
inc
arpl
inc
ja
or
adc
repz
sti
sbb
and
add
inc
call
pusha
or
pop
mov
inc
sbb
inc
fwait
mov
adc
adc
and
popa
xchg
stos
jb
add
nop
jecxz
mov
dec
rcr
inc
add
or
xor
push
inc
xor
and
out
pop
pop
mov
jb
and
sub
aaa
retf
mov
push
or
xor
or
cmps
pop
(bad)
arpl
loopne
mov
mov
ss
or
cmp
mov
sub
pop
out
daa
mov
jmp
mov
mov
sbb
adc
mov
pushf
push
push
imul
xor
jg
push
or
(bad)
out
or
add
cmps
mov
cdq
cmp
sbb
ret
int
or
mov
out
and
adc
mov
rol
scas
ss
push
sbb
sub
or
inc
lds
(bad)
daa
mov
dec
mov
and
lahf
cmp
jge
pop
pop
aaa
cmps
pop
xor
and
sti
and
sub
addr16
or
sub
cmp
cmps
add
dec
bound
jmp
loopne
jno
mov
and
xchg
mov
or
add
cmp
mov
push
fistp
ret
push
adc
sbb
add
pop
sbb
adc
aaa
cmp
push
idiv
stos
push
fsubr
push
sub
adc
inc
call
and
add
lahf
cmp
lea
pop
and
mov
mov
sbb
dec
add
int3
rol
mov
rol
ins
cmp
inc
sti
or
inc
or
sbb
mov
sub
xchg
inc
js
add
jnp
out
lods
cmps
cmp
xchg
es
or
add
pop
js
sbb
jae
and
inc
jecxz
mov
inc
jae
outs
lock
push
sub
call
retf
daa
dec
ret
(bad)
outs
add
sbb
aaa
push
mov
shl
imul
pop
xor
into
ss
cmps
sub
pop
xchg
or
shl
cmps
push
retf
sti
add
pop
and
nop
and
shl
pop
xchg
push
loop
pop
inc
or
push
out
dec
add
jno
test
inc
fucomip
fsub
push
xchg
xchg
push
inc
add
mov
dec
push
dec
loop
(bad)
or
cwde
xchg
addr16
cmp
mov
js
and
pop
rcr
xchg
call
and
push
and
adc
jne
jp
popa
xor
stos
mov
jbe
or
into
retf
ja
ja
ror
into
sbb
pop
cmp
adc
add
add
or
dec
add
test
aaa
pop
xchg
lods
add
inc
or
and
jae
mov
adc
cmps
push
imul
jae
das
sbb
in
add
xchg
mov
cmps
pop
push
inc
add
jb
jmp
mov
imul
inc
test
xchg
xchg
imul
push
sar
add
push
(bad)
mov
push
scas
out
ss
mov
out
fcmovu
es
outs
and
pop
push
xor
das
add
xor
out
loopne
and
mov
mov
stos
aas
stos
fsub
sub
pop
jo
inc
cmp
add
add
pop
inc
daa
cmp
and
xchg
imul
adc
das
push
out
xchg
jb
mov
xor
(bad)
jo
retf
cmp
pop
lods
mov
xchg
aaa
xbegin
iret
retf
adc
xchg
fistp
add
mov
mov
xchg
jnp
retf
dec
popa
xchg
sbb
mov
xchg
or
out
jo
rcl
retf
or
pusha
or
mul
jle
xchg
pop
jmp
bound
push
pop
or
cmps
pushf
and
ja
add
pushf
push
xchg
push
dec
sahf
imul
test
cmp
lods
add
xchg
scas
retf
and
stos
ret
lsl
xchg
add
push
or
inc
add
ja
scas
inc
les
xchg
(bad)
call
sbb
sub
test
mov
xor
and
pop
inc
push
retf
and
push
xchg
movsx
add
dec
es
sbb
arpl
mov
cmps
dec
xchg
jae
and
add
arpl
fsub
out
inc
add
sbb
mov
jo
out
or
out
pop
pop
sub
add
or
xchg
mov
imul
call
shl
aas
xchg
sahf
xchg
adc
adc
mov
adc
mov
outs
test
inc
icebp
add
push
push
and
push
add
pop
shl
cmps
cmps
or
push
mov
and
repnz
pop
test
or
pusha
sub
xor
xchg
xchg
sub
dec
in
or
xor
mov
mov
dec
mov
ret
jae
scas
lock
sti
xchg
leave
and
out
sbb
cmp
cmps
stos
ins
ret
dec
mov
and
or
xor
repz
and
sub
retf
test
or
xchg
cmp
or
scas
push
push
push
mov
fwait
das
subps
pop
xchg
and
bound
inc
and
add
jae
add
add
repz
add
pop
pop
inc
mov
mov
sub
push
sub
xor
(bad)
ja
sub
pop
addps
add
push
mov
mov
and
push
add
push
in
and
arpl
inc
dec
test
mov
in
push
adc
sbb
add
mov
push
and
test
daa
sub
push
push
mov
jne
add
retf
shl
and
pop
addps
lock
or
inc
mov
jae
adc
clc
xchg
and
xchg
retf
inc
push
rol
repz
adc
sbb
xchg
mov
sti
sub
ja
fbld
and
mov
scas
and
mov
xor
and
push
ja
arpl
cmp
dec
xchg
adc
sbb
ret
es
test
arpl
das
fwait
xchg
mov
cli
addr16
pusha
and
xchg
cmp
xor
jnp
or
cmp
mov
dec
aas
mov
pushf
retf
dec
push
or
xchg
sbb
inc
das
pop
sbb
adc
into
pop
xor
push
add
stos
push
push
mov
addr16
mov
rol
sub
adc
lods
das
sar
inc
adc
push
adc
xlat
adc
pusha
inc
jo
fist
fbld
or
call
and
sub
(bad)
xor
adc
sub
inc
repz
mov
mov
mov
dec
iret
pop
push
fiadd
add
mov
mov
adc
adc
xlat
push
lea
and
xchg
push
btc
push
stos
add
push
pop
popf
xlat
mov
push
xlat
mov
or
dec
sbb
and
lock
pop
inc
xor
popa
push
daa
xlat
adc
inc
mov
xor
or
cmp
push
sub
xchg
add
retf
dec
adc
xor
mov
mov
repz
mov
mov
mov
or
add
daa
pop
jo
or
sbb
mov
add
adc
sub
mov
xchg
sbb
sbb
sbb
xor
rol
mov
or
ja
or
sahf
nop
shl
lahf
inc
mov
cwde
xchg
or
inc
and
sti
and
psubusb
lahf
pop
push
sub
movs
cmps
add
mov
xchg
neg
rcl
push
stos
xor
mov
add
adc
mov
pop
nop
and
or
xlat
and
fwait
push
sub
xor
xchg
dec
add
jae
pop
shl
cmp
or
or
or
sbb
mov
dec
mov
adc
dec
pop
push
retf
add
xchg
scas
add
push
inc
repz
bound
pop
sub
dec
xlat
movs
mov
push
loopne
push
pop
mov
out
mov
mov
iret
movs
jb
sbb
(bad)
mov
pop
pop
fcmovnb
and
outs
pop
sbb
dec
push
outs
xchg
adc
repz
outs
or
sub
call
(bad)
sti
jmp
push
mov
xor
sbb
xchg
cs
xor
popf
dec
or
and
repz
jnp
lahf
fs
mov
mov
pop
add
mov
bound
dec
mov
mov
or
pop
or
cmps
daa
scas
pop
mov
xor
push
sub
retf
jnp
movs
and
pusha
daa
mov
xchg
xlat
sub
or
or
in
add
mov
sbb
ret
sti
mov
retf
push
jb
scas
push
ds
inc
cmp
jmp
and
jo
stos
mov
je
sbb
adc
adc
outs
dec
aaa
imul
sbb
das
scas
xchg
and
jb
call
cmps
xchg
bswap
lods
jp
inc
outs
dec
sbb
and
ror
loop
(bad)
loop
stos
seta
mov
idiv
xlat
add
adc
sbb
sub
test
fsubr
(bad)
mov
pop
out
add
jecxz
or
call
adc
les
das
iret
dec
fwait
mov
sub
aas
imul
adc
jo
fwait
mov
push
xchg
bound
pop
xor
scas
popa
xor
fnstenv
push
sbb
dec
pop
add
arpl
mov
lods
add
push
inc
mov
adc
mov
xchg
or
sbb
aaa
ja
xchg
in
pop
or
pop
adc
cmp
inc
cmova
and
rcl
cs
push
and
inc
loope
sbb
sti
jae
adc
add
inc
mov
inc
stos
or
xchg
and
jg
rcl
imul
sbb
pop
ret
mov
mov
and
int3
push
ror
(bad)
dec
bound
(bad)
movs
sbb
xor
or
not
adc
add
dec
pop
imul
add
inc
cmps
ins
inc
mov
lock
stos
sbb
mov
outs
adc
sar
nop
sbb
fistp
pusha
mov
mov
loope
jecxz
or
and
sbb
and
loop
loope
out
mov
xor
daa
or
shr
rol
mov
or
sti
inc
cs
arpl
or
push
ja
lea
xchg
sbb
pop
xor
push
imul
jp
shl
jo
dec
or
or
inc
sbb
cmps
addr16
pop
push
aaa
jae
dec
js
jnp
jo
pushf
push
xchg
or
mov
adc
add
xchg
inc
and
xor
mov
out
push
pop
mov
jecxz
daa
adc
jecxz
mov
xchg
pop
cmp
adc
sti
jecxz
cmp
sbb
pop
adc
adc
inc
mov
rcr
inc
jo
add
jp
call
sbb
and
pop
ja
add
jg
xor
aaa
add
bound
mov
and
xchg
and
sar
ret
or
(bad)
aaa
mov
or
inc
mov
add
jg
adc
pop
add
arpl
adc
push
sub
xor
cmp
mov
fsub
fwait
iret
arpl
loop
sbb
add
out
lock
retf
jecxz
stos
adc
orps
cmps
ja
adc
adc
sbb
inc
sbb
dec
test
push
daa
cli
lahf
mov
push
(bad)
jg
mov
cmp
lds
adc
loopne
pop
pop
or
out
jnp
push
pop
dec
jo
(bad)
cmp
adc
sbb
and
or
js
push
jg
jo
movs
jecxz
daa
add
out
lahf
(bad)
or
adc
pop
add
or
jp
pop
push
xchg
dec
xor
push
iret
mov
push
xchg
(bad)
out
or
into
mov
sbb
repz
jnp
adc
iret
scas
addr16
pop
adc
rol
adc
mov
ret
addr16
stos
inc
xor
cmps
or
mov
add
es
ror
add
xor
and
push
and
push
mov
stos
xchg
adc
pusha
mov
xchg
inc
adc
xchg
inc
push
pop
ja
dec
loopne
sbb
lahf
dec
aas
pusha
push
pusha
jne
push
cmp
push
fmul
mov
or
push
pop
dec
inc
adc
and
jo
dec
add
pop
inc
ret
out
xor
xchg
outs
(bad)
sti
dec
inc
and
jae
xchg
adc
push
push
adc
xor
rol
dec
jnp
sbb
xchg
bound
(bad)
xor
push
mov
aas
mov
ja
sub
mov
sbb
pusha
or
xor
loope
loopne
ret
pop
arpl
and
imul
add
scas
xlat
sub
sbb
adc
and
addr16
leave
and
jmp
aaa
inc
int3
sub
mov
push
sub
dec
inc
xchg
lahf
daa
inc
ret
mov
test
adc
out
xchg
add
mov
inc
sub
sbb
ret
scas
mov
(bad)
loopne
inc
sbb
jmp
pop
sbb
or
adc
sbb
or
inc
and
push
or
or
mov
dec
add
ror
enter
or
mov
jmp
sub
and
or
sub
iret
cwde
sub
aas
scas
out
inc
les
and
outs
mov
addr16
mov
adc
pop
push
add
sahf
jo
ret
cmp
and
push
xchg
add
adc
dec
jae
and
or
push
cmps
mov
out
push
or
and
add
sbb
lahf
and
or
imul
push
ret
(bad)
out
adc
shl
jmp
popa
xor
lods
addr16
pop
test
stos
push
outs
out
push
test
mov
daa
call
add
jle
pop
push
jmp
retf
mov
pop
ds
and
dec
call
femms
aaa
mov
add
xlat
cmps
fndisi(8087
or
test
sub
push
xor
aas
inc
xlat
fiadd
inc
fwait
adc
ret
test
xchg
add
dec
xor
mov
aaa
mov
adc
out
ret
add
and
and
jnp
bound
scas
call
pop
mov
cmp
iret
push
ret
inc
das
sahf
lahf
or
sti
cs
xchg
xchg
out
ret
lock
sub
dec
aas
xor
push
out
stos
push
test
jnp
pop
mov
mov
inc
mov
inc
or
ss
xlat
or
adc
nop
gs
inc
mul
les
adc
into
inc
xor
dec
fwait
cli
push
inc
scas
add
(bad)
push
adc
sbb
test
pop
push
inc
fld
xchg
mov
fild
scas
push
nop
sub
jmp
ret
add
mov
ret
mov
jnp
and
out
gs
push
aaa
ret
out
(bad)
es
daa
adc
cmp
mov
scas
loope
sbb
mov
retf
cmp
inc
or
and
pusha
or
jmp
pop
push
cmp
(bad)
sbb
mov
pop
adc
enter
push
pop
or
xchg
enter
imul
mov
sub
push
les
(bad)
dec
xor
sahf
mov
pusha
mov
push
pop
lock
inc
shl
pop
jmp
xchg
jae
mov
dec
shl
out
and
adc
pop
dec
icebp
ror
loopne
loope
cmp
pop
xor
imul
je
add
add
shr
add
and
or
or
aaa
pushf
ret
add
arpl
add
adc
dec
fild
adc
sub
sbb
scas
cdq
shl
out
jp
imul
fisttp
adc
jo
mov
rcr
pcmpeqd
cmps
gs
inc
or
aaa
push
int
call
jnp
push
popa
push
and
mov
mov
mov
pop
pop
sub
inc
ja
dec
loopne
call
or
mov
iret
cmp
or
push
add
push
neg
push
test
mov
adc
retf
xchg
pop
lods
ret
addr16
push
sbb
push
sbb
das
xchg
pop
lahf
out
inc
xor
adc
or
xor
addr16
sub
fld
inc
add
pop
push
add
sbb
adc
mov
lods
dec
into
imul
add
stos
xor
and
pop
repz
adc
and
(bad)
push
sti
outs
repz
xor
push
shl
add
ja
xchg
or
outs
and
pop
pop
js
push
adc
push
xor
mov
sbb
pop
pop
jmp
inc
xor
pop
jmp
sbb
ret
and
and
adc
nop
xchg
sub
loopne
xchg
out
or
mov
retf
pop
ret
mov
and
ret
inc
pop
inc
add
loopne
dec
dec
ja
and
jnp
dec
out
mov
sub
pop
loope
in
jnp
arpl
sar
or
push
cmp
xlat
das
add
mov
xchg
mov
in
xor
and
arpl
loop
dec
loopne
and
loopne
addr16
stos
loop
pop
sbb
jb
fild
pop
inc
sbb
xor
cmp
inc
sbb
outs
psubusb
pop
push
and
fs
mov
mov
sbb
jae
push
pop
and
aas
cmp
stos
xor
jecxz
xchg
test
pop
add
test
push
sbb
mov
inc
sbb
imul
inc
bound
cmp
xor
add
sub
sub
arpl
mov
cmp
xchg
sub
jecxz
or
adc
scas
push
mov
loopne
pop
lods
lahf
push
mul
ror
mov
lahf
or
movs
or
xor
push
outs
arpl
or
lea
add
and
sti
cli
inc
and
mov
xchg
cmps
pop
inc
sbb
pusha
push
cwde
push
pop
out
jb
lea
loopne
pop
out
adc
push
pop
sbb
fild
add
mov
add
xchg
xchg
sbb
or
pop
ds
cmp
ret
test
push
mov
mov
push
(bad)
jg
xadd
adc
(bad)
or
fild
outs
mov
arpl
out
inc
test
inc
mov
dec
jg
fisttp
xor
mov
and
mov
lock
(bad)
sub
inc
das
or
out
add
xor
dec
add
adc
sub
adc
test
xrelease
aas
xor
or
cmps
xlat
sbb
shl
arpl
add
mov
pop
cmp
sbb
imul
daa
inc
fcomp
lock
jnp
push
add
lea
sbb
add
test
inc
push
cmp
cmp
mov
into
cmps
cmp
(bad)
jbe
push
enter
repnz
sub
scas
pop
das
sbb
adc
and
mov
adc
add
or
inc
mov
ins
adc
mov
push
(bad)
or
dec
xchg
add
pop
xchg
stos
imul
sbb
push
sbb
into
push
gs
jbe
xchg
out
and
popa
inc
ja
ret
test
cmp
push
pop
add
fadd
fistp
adc
mov
adc
xchg
arpl
add
and
dec
or
sbb
xor
pusha
inc
or
mov
or
pusha
fstp
comiss
or
xor
fiadd
xor
or
sti
cmps
(bad)
fmul
adc
jmp
push
pop
push
call
push
adc
bound
and
inc
test
and
xchg
mov
loopne
sbb
enter
jae
test
daa
(bad)
adc
arpl
call
inc
call
ret
xlat
add
jecxz
cmp
mov
rol
arpl
push
xchg
lahf
mov
iret
pop
arpl
imul
dec
mov
push
ret
ror
daa
fisub
adc
scas
sbb
pusha
and
pop
adc
scas
rol
inc
cli
dec
adc
pop
mov
inc
add
and
push
mov
pop
mov
jmp
or
add
add
push
scas
dec
loopne
add
pushf
ret
sbb
retf
outs
(bad)
sti
sbb
arpl
outs
mov
ret
add
arpl
pop
push
sbb
xchg
jmp
jg
test
daa
addr16
test
dec
push
pop
lods
lds
pop
xor
(bad)
out
adc
or
rol
jmp
jmp
sbb
pop
and
xlat
push
add
(bad)
es
add
inc
mov
mov
xor
es
fwait
arpl
cmp
daa
iret
dec
mov
sbb
iret
sub
or
mov
sub
adc
adc
adc
rcl
add
and
mov
sub
push
jmp
push
adc
xor
into
dec
jp
push
sbb
or
fistp
out
ret
mov
(bad)
out
xchg
push
scas
pop
or
imul
or
iret
cmp
jo
imul
shl
das
push
push
scas
cwde
nop
push
dec
cwde
adc
xchg
sub
ret
mov
jae
test
dec
adc
pop
dec
dec
mov
cmp
repnz
add
pop
les
nop
or
mov
dec
xchg
ss
add
mov
inc
ja
xchg
inc
bound
iret
pop
into
jmp
or
mov
mov
shl
and
ss
out
xlat
xchg
or
pop
out
sub
iret
rol
or
mov
scas
sbb
stos
icebp
add
lahf
sub
adc
add
sti
push
stos
cmp
rcl
addr16
mov
push
and
add
and
fild
xor
xchg
(bad)
aam
loopne
or
imul
lea
retf
repz
jns
adc
shl
mov
cmp
and
xchg
adc
adc
aaa
sbb
sar
cmp
(bad)
sub
outs
sbb
inc
daa
mov
mov
pop
mov
or
pop
adc
xchg
outs
mov
mov
and
adc
xor
sub
dec
das
fist
mov
jae
or
mov
xor
sbb
push
xor
inc
(bad)
push
imul
or
sub
dec
cmp
shl
push
sub
add
add
aaa
sbb
lds
and
inc
sbb
pop
pop
cmp
jg
lea
sbb
mov
or
aas
push
add
add
adc
adc
or
pop
add
mov
arpl
or
stos
out
and
pop
mov
or
mov
stos
sti
mov
ret
pop
add
or
mov
call
or
sbb
mov
out
out
es
les
into
das
dec
mov
push
xor
pop
mov
jnp
cmp
arpl
sub
retf
adc
xchg
pop
adc
or
movs
ret
pop
mov
lods
push
jnp
aaa
adc
test
jnp
xor
xchg
push
sbb
xor
cmp
lods
idiv
es
mov
xchg
add
es
es
(bad)
xchg
xor
jg
pusha
in
adc
sub
call
push
sbb
ret
mov
or
into
outs
pusha
dec
dec
out
and
not
fstp
not
daa
jg
adc
cmp
xchg
cmp
and
loope
and
sbb
loopne
xchg
das
dec
mov
xor
stos
shl
push
iret
xchg
repnz
or
pop
add
and
sbb
or
cmp
data16
mov
pop
shr
pop
mov
jmp
inc
push
xor
ds
syscall
mov
push
data16
and
daa
movs
inc
add
or
add
cli
es
xchg
push
xor
cmps
xor
fninit
xor
xor
sub
push
push
add
jp
bound
fwait
jb
adc
mov
mov
pusha
push
mov
inc
add
retf
fwait
xor
daa
mov
addr16
ss
ret
loop
mov
jmp
sub
xchg
test
mov
in
adc
hlt
add
cmps
das
jg
add
sub
clc
nop
pop
cmp
or
add
or
push
add
add
das
xlat
rcl
lods
jne
sub
add
adc
iret
sbb
add
inc
xchg
xor
inc
es
(bad)
pop
sbb
sbb
xor
or
cmp
sar
aaa
adc
cmp
adc
mov
and
jae
(bad)
sbb
fiadd
or
xor
mov
or
jmp
loop
bound
pushf
lds
adc
repz
dec
push
mov
add
sbb
sub
not
push
mov
ret
sbb
ret
ins
adc
imul
adc
add
fwait
push
jmp
movs
das
rcr
stos
leave
mov
retf
sub
ror
sbb
pop
xchg
add
push
sbb
addr16
xchg
and
pop
xchg
aaa
mov
ss
popa
and
ret
out
cmps
movs
loop
enter
inc
lock
push
or
inc
pusha
pop
js
out
xchg
test
imul
sbb
adc
or
push
mov
dec
data16
data16
add
mov
mov
mov
inc
jnp
shl
sbb
add
shl
mov
add
sbb
lahf
adc
stos
(bad)
pop
sbb
jae
fld
neg
push
push
xchg
inc
ret
pop
mov
mov
iret
cli
sbb
int
inc
and
pop
jg
shl
add
mov
pop
adc
lahf
sub
pop
aas
rcl
inc
mov
inc
sbb
ret
add
inc
mov
sar
popa
sub
and
outs
pop
add
xor
or
push
mov
or
data16
call
push
data16
pop
mov
jae
cmps
mov
push
add
adc
cmp
es
aaa
mov
nop
add
xchg
inc
mov
xor
cs
add
push
jp
ja
in
adc
mov
dec
fistp
div
pop
out
jecxz
movs
xor
ret
cmp
lahf
sbb
das
sbb
adc
adc
push
mov
dec
mov
push
out
dec
test
xchg
fist
sbb
add
imul
push
cmp
and
or
sbb
retf
cmovo
adc
jecxz
xchg
add
jecxz
add
sub
dec
cli
mov
add
fild
jb
sub
xor
or
push
mov
jg
or
pop
dec
add
sub
dec
sub
inc
pusha
mov
pop
mov
push
mov
and
push
lods
and
sub
mov
(bad)
push
inc
and
push
or
adc
mov
and
das
add
inc
adc
mov
xchg
xchg
sti
rol
(bad)
daa
or
cmp
out
or
out
xor
pusha
add
arpl
push
sub
test
inc
popaw
jo
mov
sub
movs
ror
loop
add
push
mov
retf
add
xchg
jae
sub
dec
xchg
cmp
push
jmp
inc
push
push
push
daa
mov
mov
xor
inc
or
fwait
pop
xchg
adc
inc
xlat
add
push
mov
pop
fbld
mov
or
sbb
loope
and
sbb
and
push
add
jle
and
retf
xchg
xchg
pop
push
sahf
jg
inc
cs
ret
fwait
scas
mov
(bad)
fldz
aaa
(bad)
and
xlat
pop
imul
add
lahf
xchg
push
dec
xor
aaa
into
aas
inc
and
adc
aaa
push
ret
cwde
(bad)
and
mov
mov
dec
rol
jmp
jb
sub
adc
xchg
push
push
pop
or
push
push
xor
add
sbb
fs
loopne
and
mov
arpl
pop
out
lock
pop
out
or
xchg
scas
and
fcmovnbe
rcl
push
test
mov
dec
loopne
dec
ja
jnp
or
arpl
push
cmp
adc
cdq
adc
mov
cs
or
inc
sub
pop
ret
scas
pop
or
pop
pushf
rol
inc
test
xchg
push
xchg
inc
sbb
jmp
mov
xlat
add
jb
retf
inc
(bad)
aas
xchg
add
addr16
loop
arpl
fwait
and
push
out
push
and
xor
pushf
dec
adc
scas
adc
add
ror
xlat
das
lock
mov
add
fwait
packssdw
rol
pop
or
lahf
repz
or
adc
test
pop
pusha
cmp
mov
inc
or
ret
pop
or
sbb
hlt
lea
pop
push
push
or
daa
mul
inc
mov
enter
jg
mov
mov
xchg
xchg
xor
cmps
jbe
pop
sar
xchg
push
jb
xor
add
and
add
cmp
test
mov
jmp
aaa
mov
inc
jnp
adc
push
add
adc
sbb
mov
shl
arpl
inc
and
pop
stos
or
cli
inc
daa
add
cmp
sub
inc
add
jnp
inc
pop
test
jae
xchg
mov
sbb
cmps
sub
pop
stos
or
retf
inc
pop
mov
mov
movs
push
dec
push
movs
add
bound
cmp
sbb
xor
jg
call
cmp
shl
sbb
es
adc
fisttp
mov
cli
imul
mov
in
sbb
pusha
xchg
sbb
sbb
outs
dec
add
cmps
jmp
cwde
add
adc
sti
sti
sbb
add
pop
inc
ret
fisubr
xor
arpl
xor
push
cmp
xor
xlat
daa
sbb
mov
pop
test
bound
movs
or
fwait
mov
das
mov
inc
or
and
or
test
pop
and
test
inc
stos
stos
xchg
pop
cmps
sbb
push
mov
stos
test
fistp
or
and
jg
pop
ror
es
aaa
jnp
xchg
cmp
dec
inc
sub
push
repnz
xchg
ja
add
inc
or
scas
addr16
inc
pusha
sbb
fldcw
add
pop
sub
cmps
(bad)
lods
add
inc
mov
bound
add
add
add
add
inc
movs
je
fistp
add
das
pop
stos
push
in
stos
inc
add
mov
sti
dec
or
dec
scas
aaa
add
mov
sub
int3
lea
mov
outs
pop
xchg
nop
jmp
or
jo
sub
iret
aas
xchg
push
out
or
mov
cmps
cli
and
jecxz
addr16
cs
push
mov
aas
daa
push
xor
push
or
je
push
cmp
sar
dec
jnp
mov
cmp
aaa
(bad)
adc
mov
ss
jmp
sub
add
adc
or
mov
mov
in
pop
cmp
test
fadd
iret
or
outs
xchg
aaa
stos
xchg
mov
inc
add
lahf
sbb
call
and
aas
add
xor
mov
nop
dec
or
add
das
sub
mov
sbb
sub
out
inc
inc
adc
adc
aas
fwait
call
fstp
cmp
or
inc
lahf
sti
sub
out
dec
xchg
scas
mov
jb
sub
mov
push
sub
inc
mov
xlat
rcr
push
fidiv
data16
or
push
sbb
es
mov
or
or
or
add
adc
ror
adc
push
pop
push
add
and
or
popa
add
adc
sbb
push
sub
lods
repnz
xchg
xchg
xchg
dec
fwait
mov
push
mov
imul
adc
mov
pop
adc
xor
mov
imul
cwde
mov
inc
dec
adc
push
sti
out
call
or
add
add
inc
aas
outs
loopne
in
push
and
mov
jnp
mov
dec
inc
mov
cmps
add
inc
push
add
aas
retf
add
aas
cmp
lods
add
inc
push
cmp
add
push
pop
jbe
xchg
push
mov
out
scas
(bad)
rcl
call
shl
loopne
rcr
xor
xchg
ret
or
loope
ja
mov
mov
or
pop
dec
adc
sbb
inc
xchg
loopne
data16
sbb
mov
pop
(bad)
sbb
jbe
add
retf
push
imul
mov
iret
mov
loopne
(bad)
xchg
(bad)
sbb
out
ret
pop
js
mov
mov
sbb
mov
ins
push
dec
cli
sbb
cmp
(bad)
push
mov
daa
push
add
test
mov
pop
xchg
xchg
jmp
add
(bad)
pop
les
pop
mov
add
adc
or
mov
push
sub
add
xchg
jg
out
call
and
add
dec
jnp
stos
lds
imul
dec
imul
adc
jg
popa
test
sbb
or
sub
adc
cwde
or
add
dec
repz
or
loope
and
jae
rcl
add
fisubr
mov
mov
aaa
push
push
push
cmp
mov
mov
pop
xchg
xor
dec
sub
add
shr
or
push
add
dec
or
bswap
pop
ret
fs
mov
jg
mov
stos
inc
dec
pop
sbb
outs
mov
inc
sbb
sub
jb
cmp
inc
add
pop
xchg
fisttp
cmp
mov
jmp
or
xchg
push
and
pop
mov
add
sbb
push
mov
push
sub
js
sahf
push
sbb
push
das
ja
ss
sbb
cmps
das
stos
pop
fsub
mov
xchg
inc
add
ret
sbb
mov
out
loopne
dec
mov
add
ins
inc
pusha
rcr
add
pop
fild
addr16
mov
adc
daa
aas
push
add
jecxz
adc
and
push
add
sub
sub
mov
inc
or
inc
ret
outs
sub
add
out
cmps
scas
adc
(bad)
ret
(bad)
cmps
add
inc
mov
adc
mov
retf
push
pop
rcl
ror
adc
adc
(bad)
xchg
mov
mov
and
xchg
(bad)
sub
jnp
pop
inc
or
test
sbb
movs
bound
nop
mov
out
sbb
and
dec
inc
bound
add
or
adc
mov
cmp
xchg
xchg
xchg
lock
mov
mov
ja
mov
shl
(bad)
pop
loopne
add
push
add
inc
inc
sub
or
bound
dec
jo
add
fist
repnz
bound
push
test
sub
test
or
test
add
xchg
leave
lock
scas
mov
imul
push
nop
mov
xor
test
xlat
stos
adc
sbb
(bad)
dec
and
push
xchg
or
stos
sbb
adc
push
adc
test
arpl
daa
add
pop
pop
xchg
adc
shl
aaa
mov
cmp
arpl
out
ja
nop
rol
push
mov
xchg
pop
push
add
arpl
jnp
ret
call
or
ficom
ror
pop
repz
mov
rol
bound
cwde
fild
push
das
jnp
ret
push
adc
(bad)
dec
mov
(bad)
jnp
inc
mov
sbb
dec
adc
mov
inc
mov
mov
adc
jg
adc
inc
icebp
ror
invd
push
adc
mov
aaa
ret
cmp
jo
daa
jmp
inc
in
popa
es
ja
or
add
pop
pop
adc
mov
adc
retf
push
cmp
or
xchg
or
lahf
imul
mov
push
ret
loopne
xor
push
jg
ret
imul
add
fninit
sbb
adc
jle
mov
out
jmp
aas
inc
mov
arpl
sbb
xchg
fisttp
imul
push
or
es
xor
dec
and
rcr
popa
cwde
and
push
fisttp
dec
mov
add
adc
jp
push
push
scas
cdq
rcr
cmps
pop
outs
and
inc
pop
add
aas
push
outs
push
mov
xor
pop
xchg
cmp
ficom
loop
adc
xchg
xchg
aas
iret
add
sub
inc
and
test
xor
ror
push
push
pop
mov
cmps
push
out
push
es
pusha
or
push
retf
push
pop
xor
inc
push
(bad)
sahf
sti
cmps
fst
xor
cs
ret
mov
add
lock
add
xor
iret
dec
sti
push
add
test
pop
aas
inc
add
and
(bad)
mov
sbb
sub
or
dec
mov
into
mov
pop
repz
jno
push
addr16
sbb
fwait
pop
add
sbb
aas
push
dec
in
inc
cmp
push
xchg
cmp
pop
int3
pop
into
xchg
xchg
int3
sbb
cmp
outs
push
pop
ret
sub
cmps
sbb
imul
pop
ror
add
dec
fwait
jecxz
xor
shl
fisub
pop
sub
add
stos
shl
fs
ret
sbb
fcomip
push
cli
xor
cmp
push
out
mov
sbb
(bad)
adc
xchg
mov
pop
fmul
outs
addr16
mov
pop
mov
mov
jg
out
pop
pusha
and
dec
xchg
pop
adc
adc
add
jo
xor
mov
retf
pop
stos
pop
fisttp
xor
daa
add
sbb
pop
push
mov
retf
adc
inc
mov
(bad)
dec
mov
push
jae
pop
inc
sub
sub
lahf
xor
and
pop
push
jno
mov
mov
repnz
cmps
add
lahf
and
xchg
bndstx
out
adc
das
mov
mov
addr16
mov
mov
push
mov
push
mov
jo
lahf
xor
retf
dec
loope
cmp
das
mov
sbb
xor
sbb
cmps
cmovb
loop
scas
dec
pop
shl
scas
lahf
sbb
rol
cmp
test
daa
sbb
adc
mov
xchg
pop
test
mov
inc
rol
call
aam
emms
pop
rcl
sbb
outs
imul
mov
xchg
adc
ret
out
ret
push
or
test
scas
imul
das
or
and
pop
add
lahf
xlat
add
mov
xor
inc
xchg
or
jmp
adc
ins
push
cmp
stos
add
shl
xor
fwait
daa
dec
out
sub
xor
fistp
or
push
adc
imul
adc
repz
xor
sbb
retf
pop
push
inc
mov
cmp
add
fcmovne
pusha
add
inc
rcr
jmp
push
push
pop
and
cmps
xor
rcr
and
push
pop
or
pop
mov
xchg
loope
outs
push
xlat
lds
dec
cli
ror
push
or
adc
mov
cmp
ret
cmps
(bad)
sub
adc
mov
movs
repz
jg
pop
test
cmp
scas
push
and
sbb
mov
and
sbb
jg
ins
xor
xchg
jg
(bad)
xor
jecxz
stos
sbb
or
outs
cmps
inc
cmp
sbb
out
xchg
pusha
mov
stos
imul
pushf
jno
cmp
aas
adc
add
out
rol
cmp
ja
push
and
xor
xchg
add
dec
adc
pop
scas
xchg
and
dec
push
jb
add
sbb
ss
sbb
imul
or
stos
jo
inc
mov
inc
sub
add
jb
ficomp
ret
mov
pop
xchg
addr16
add
js
es
(bad)
push
dec
xor
fimul
add
cmp
jecxz
pop
sbb
xchg
cmps
ja
(bad)
and
dec
add
add
fadd
xlat
and
push
add
or
cmovae
push
xor
sbb
and
mov
xchg
arpl
ret
pop
xchg
repz
mov
xchg
stos
mov
outs
or
xchg
inc
pop
shl
or
(bad)
and
or
fimul
vmread
jmp
mul
xchg
les
bound
das
jmp
or
jg
aaa
and
loop
cmps
xor
das
ds
iret
jb
push
outs
adc
or
mul
adc
pop
xchg
dec
pop
shl
jbe
pop
mov
or
getsec
push
and
mov
data16
cmp
aaa
mov
repz
add
fwait
cmp
add
push
add
inc
outs
ja
ins
outs
(bad)
call
popa
fs
fs
dec
imul
gs
outs
jb
popa
cmps
jge
mov
stos
adc
popa
ins
push
inc
dec
sbb
or
mov
pusha
bound
adc
xor
dec
outs
imul
(bad)
adc
adc
mov
imul
jb
gs
imul
cs
popa
or
je
ins
and
push
jns
and
call
adc
and
sbb
xchg
dec
push
push
dec
push
and
fisttp
push
les
popa
jo
cs
sahf
(bad)
add
in
mov
dec
lods
or
sbb
pop
lock
xchg
sbb
lock
and
popa
jne
mov
push
popa
xor
mov
and
and
addr16
and
mov
test
jb
leave
in
or
ins
cs
js
xor
popa
in
clc
add
sbb
pop
push
jae
push
xchg
adc
(bad)
fisttp
inc
outs
ins
adc
addr16
ins
sbb
add
ins
ins
ret
dec
cmp
fisttp
ret
pop
push
imul
and
and
push
rol
ins
inc
jo
and
popa
maskmovq
test
dec
arpl
xchg
std
jns
arpl
push
and
mov
sbb
dec
inc
adc
pop
aaa
js
sub
lods
and
je
sbb
or
call
cmp
mov
inc
ror
dec
in
test
inc
mov
push
mov
ja
mov
cmp
jae
imul
pop
jns
adc
loope
popa
push
or
outs
and
and
xchg
inc
adc
mov
(bad)
jo
scas
sbb
and
jb
lock
shl
inc
dec
push
retf
loope
push
inc
sub
xor
mov
push
xlat
cs
pusha
pop
mov
inc
pushf
out
sbb
push
adc
mov
int3
mov
out
fstp
mov
ss
and
mov
out
data16
xor
gs
inc
outs
imul
shl
push
add
outs
je
sub
inc
vpunpcklqdq
inc
add
gs
jne
(bad)
in
ds
(bad)
es
push
push
fcmovbe
push
pop
mov
je
jns
aad
cmp
imul
fcomi
adc
shl
cmp
and
int
movq
sbb
adc
inc
fs
sbb
mov
pushf
push
je
mov
dec
shl
(bad)
push
fimul
pop
in
cmp
and
clc
add
mov
xor
cmp
cmp
inc
push
scas
xor
daa
xlat
inc
and
fwait
outs
lods
adc
dec
dec
inc
sbb
mov
dec
jb
add
adc
sbb
lea
mov
sar
ins
adc
popa
je
push
push
dec
stos
out
push
clc
sub
jo
jns
inc
inc
outs
pop
pop
fistp
adc
jp
and
loopne
mov
inc
jne
and
rcr
push
sub
cli
fnstcw
push
js
xchg
iret
adc
push
xchg
call
add
push
xor
popa
stos
sbb
fsubr
das
adc
iret
es
or
inc
retf
push
xchg
xchg
push
add
outs
mov
cmp
pop
cmp
jo
ret
xor
fwait
scas
sbb
cmp
lods
adc
push
dec
popa
sub
mov
adc
push
dec
dec
sub
retf
pop
cmp
aad
xor
js
dec
add
push
inc
mov
retf
mov
dec
out
fdiv
mov
lds
sub
pop
(bad)
jno
push
push
push
adc
mov
or
and
mov
and
mov
ror
sbb
inc
mov
add
je
push
je
(bad)
mov
popa
aad
push
call
cmp
ins
cmp
push
push
pop
or
jbe
sbb
nop
xchg
push
sti
test
push
mov
daa
movq
xor
xor
dec
cmp
xor
pusha
sub
popa
imul
(bad)
pusha
ret
push
test
xor
push
jnp
push
arpl
jo
add
add
stos
bound
stos
fistp
ins
addr16
out
js
loopne
mov
dec
mov
pop
jo
push
sbb
fisubr
cs
and
cmp
dec
(bad)
sbb
and
jns
mov
inc
sbb
inc
sbb
sbb
push
mov
out
and
ja
ins
or
in
test
add
and
test
pop
cmp
cmps
sbb
and
sbb
and
in
inc
pushf
bound
pusha
jo
push
push
mov
cmps
push
loopne
inc
retf
sbb
fstp
daa
inc
push
pop
dec
sbb
arpl
inc
loope
push
mov
push
neg
pusha
sub
(bad)
xchg
jecxz
dec
add
ror
(bad)
rcl
es
xor
inc
out
ins
push
mov
call
push
jo
sub
push
jl
lds
sbb
inc
(bad)
push
ror
add
and
lea
ins
int
push
dec
push
aas
outs
inc
mov
adc
inc
and
dec
pushf
lahf
fwait
mov
lds
and
inc
ins
mov
dec
dec
push
push
pop
inc
call
xor
lock
jo
ror
and
and
sbb
sub
jbe
outs
sti
fstp
sbb
mov
dec
(bad)
push
xchg
mov
test
cmp
fsubr
hlt
xchg
mov
inc
xchg
push
aad
lock
(bad)
jge
rcr
push
jo
pop
ins
mov
mov
mov
push
xor
je
inc
sbb
push
je
inc
(bad)
push
loopne
inc
bound
xor
pop
fcmovb
jnp
mov
dec
pop
push
cld
sub
mov
and
jbe
das
js
repnz
gs
push
sub
jne
je
enter
xor
pop
ins
sbb
push
mov
bound
cwde
add
pop
pop
xlat
dec
xor
(bad)
cli
daa
js
fs
sbb
push
jp
outs
shl
adc
sbb
test
or
(bad)
stc
pop
outs
jecxz
mov
sub
je
arpl
movs
add
lds
pop
mov
outs
ins
sub
jge
ja
das
int
sub
push
inc
(bad)
and
loop
inc
dec
mov
mov
(bad)
mov
and
push
pop
gs
fild
inc
inc
dec
mov
data16
fld
outs
bound
out
inc
daa
inc
push
test
cdq
sub
pshufw
adc
dec
jecxz
cdq
cmp
and
and
mov
hlt
pop
xchg
mov
and
(bad)
std
jo
push
inc
jo
and
add
adc
aas
imul
mov
inc
inc
jb
fdivr
dec
pop
jecxz
xchg
fild
sbb
xchg
out
sbb
xchg
adc
pop
js
dec
adc
daa
cmp
jnp
in
mov
lock
add
push
pop
mov
jbe
mov
sar
mov
jmp
popa
aad
dec
sahf
ret
dec
adc
push
xor
out
mov
mov
push
jno
ins
inc
xor
pop
fldenv
inc
imul
xchg
fidiv
pop
sub
rcl
push
or
xor
(bad)
clc
lock
cs
in
and
dec
fwait
aad
jo
lds
or
sub
sub
aam
xor
inc
dec
inc
mov
xchg
push
inc
push
sub
ror
push
into
dec
outs
gs
scas
add
ret
aaa
jle
popa
ins
ins
cld
pop
push
mov
mov
ss
dec
inc
sbb
pop
js
in
arpl
dec
add
add
ins
inc
or
mov
shr
es
jns
add
test
ror
fdivp
sbb
dec
bound
add
xor
cmp
pop
inc
add
add
test
and
inc
inc
jne
add
int3
inc
xor
push
fst
mov
sbb
clc
push
mov
xchg
dec
jb
or
sub
mov
cwde
arpl
cs
and
xor
(bad)
outs
dec
mov
jns
adc
and
push
mov
add
sbb
aas
add
push
adc
or
cmp
(bad)
fsub
mov
es
adc
js
jne
add
mov
inc
or
dec
push
xor
aaa
sub
in
or
add
xchg
call
fimul
and
pop
das
push
or
lods
jmp
xchg
sti
fdivr
je
mov
bound
push
dec
inc
arpl
push
push
jb
sbb
ins
sub
sub
fadd
inc
fsubr
sbb
ins
(bad)
jo
jae
inc
mov
push
ins
mov
movs
shr
adc
mov
xor
and
clc
inc
dec
push
and
xor
and
ss
and
push
pusha
sbb
enter
dec
xor
xor
push
dec
ror
in
fsubr
mov
jo
imul
push
xor
mov
xor
xor
hlt
jo
sbb
ins
adc
mov
mov
ret
xchg
retf
jae
add
or
sbb
push
add
xchg
sbb
add
jl
adc
sub
jns
xor
mov
sub
adc
push
lea
lods
cmc
outs
jo
or
sbb
pop
in
retf
mov
push
bound
xchg
mov
lods
cmp
(bad)
hlt
fisub
ja
or
dec
bound
ret
pop
ins
imul
jp
cmp
or
div
or
dec
add
(bad)
sub
mov
add
loopne
loopne
pop
inc
je
inc
popa
mov
and
adc
pop
in
aam
adc
adc
int3
or
outs
jne
xchg
or
cmp
fadd
pop
jb
mov
in
push
push
mov
inc
dec
pop
inc
dec
inc
push
push
inc
push
or
sbb
mov
mov
daa
mov
fdivp
sbb
gs
pop
push
mov
jnp
imul
outs
popa
xor
mov
outs
push
arpl
fiadd
mov
sbb
fsubr
push
and
pop
loop
sbb
(bad)
cli
or
cmc
(bad)
int3
jmp
mov
pop
or
jo
push
sub
sbb
mov
daa
adc
cmp
(bad)
mov
or
sbb
push
es
adc
mov
lods
adc
or
out
test
jb
cmp
xor
add
in
fs
or
mov
popa
mov
dec
or
test
ficom
cmp
dec
je
shr
and
inc
and
inc
gs
dec
inc
comiss
pop
push
pop
push
bound
nop
or
xchg
cdq
mov
xor
adc
ret
mov
mov
pop
sbb
or
pusha
push
in
stos
hlt
push
add
add
addr16
add
mov
add
cwde
add
mov
and
inc
jp
loop
popa
imul
push
jo
or
or
push
rol
xor
or
xor
sbb
mov
(bad)
jo
xor
or
cmp
or
int3
push
mov
dec
add
xor
mov
sahf
jnp
cmc
jg
mov
inc
or
or
push
clts
cwde
lock
adc
push
or
or
mov
pop
out
(bad)
push
pop
add
call
push
pop
je
pop
mov
ins
cs
bound
adc
loop
and
sar
sub
out
mov
adc
dec
call
mov
jb
imul
push
arpl
arpl
and
or
cmp
lahf
cdq
inc
pushf
mov
pop
scas
cmp
sub
das
xchg
imul
and
push
and
and
xor
xor
aaa
cmp
xor
and
(bad)
mov
xor
das
xor
das
push
sub
xor
xor
and
and
or
data16
inc
fstp
scas
mov
je
cmp
das
ja
cs
cs
das
xor
(bad)
cli
ins
call
sub
bound
mov
pop
and
pop
mov
pop
je
nop
ins
lods
sub
inc
add
test
xchg
es
mov
js
jo
cs
imul
jo
ins
xor
test
push
inc
fisubr
sbb
jo
xchg
jae
in
bound
cmp
jnp
dec
dec
jns
ins
adc
sub
xor
inc
jbe
jae
mov
das
outs
pop
int
mov
xchg
scas
xchg
loopne
int3
lods
fcom
inc
ja
js
ins
xor
mov
add
or
cmp
mov
sahf
ds
push
inc
(bad)
inc
add
or
stos
cdq
sub
out
mov
gs
ss
and
sbb
xor
push
mov
in
call
xor
jo
cmp
jns
lods
add
xchg
push
dec
mov
mov
(bad)
add
push
(bad)
(bad)
cmp
outs
mov
adc
xor
pusha
sub
push
adc
and
lods
nop
xor
dec
cli
mov
and
and
imul
cmp
pop
xor
sub
jne
sub
data16
bound
arpl
fs
out
push
mov
mov
adc
mov
mov
int3
push
mov
mov
sbb
jne
lock
popa
shr
or
pop
imul
fdivr
xor
mov
push
gs
add
in
add
lock
imul
popa
xor
frstor
fcomip
add
add
pop
(bad)
rcl
fs
push
adc
mov
cmp
ja
(bad)
vshufps
add
je
rol
retf
ins
mov
pop
mov
mov
sub
sub
fild
adc
scas
xor
jl
or
pop
pop
mov
ins
dec
adc
add
cmp
xor
aam
gs
pop
out
int
scas
jo
(bad)
ds
mov
inc
or
pop
inc
cmp
and
pusha
mov
pop
fistp
cs
xor
push
test
or
inc
dec
inc
outs
adc
fld
mov
push
mov
add
mov
leave
push
mov
mov
leave
mov
mov
add
adc
push
push
mov
add
adc
(bad)
(bad)
dec
cmp
js
popa
arpl
je
outs
fs
ds
pop
and
(bad)
(bad)
(bad)
inc
js
arpl
(bad)
(bad)
aas
add
add
movs
dec
xchg
(bad)
out
in
mov
push
(bad)
(bad)
(bad)
push
mov
mov
scas
cbw
bound
aas
and
movs
adc
loope
xchg
test
(bad)
adc
(bad)
(bad)
jmp
add
xor
orps
pop
les
add
dec
inc
scas
inc
pusha
or
outs
dec
fdivr
(bad)
jmp
jae
inc
outs
ja
pop
sbb
outs
gs
pop
dec
data16
dec
imul
lock
ins
imul
add
jl
push
dec
ins
popa
addr16
(bad)
(bad)
mov
arpl
ins
ins
push
jo
dec
gs
add
dec
add
in
jmp
add
push
dec
imul
and
popa
ins
std
outs
(bad)
(bad)
or
je
push
imul
outs
shl
imul
js
jmp
pop
or
fidiv
gs
popa
je
or
cmp
or
ficomp
cld
mov
dec
inc
or
or
push
(bad)
(bad)
std
std
push
adc
push
or
or
mov
pop
jae
adc
jmp
pop
add
call
push
pop
je
dec
dec
cmp
ins
cs
outs
bound
ins
jo
add
sub
sub
mov
push
xor
add
gs
push
jp
push
arpl
arpl
fs
xor
sub
and
ins
nop
fnstsw
sbb
cmp
sub
fsubr
in
je
xor
cld
push
and
nop
jg
(bad)
jmp
xor
xor
xor
aaa
cmp
xor
and
push
das
xor
das
mov
clc
outs
push
sub
xor
xor
inc
and
or
in
mov
cmp
data16
inc
fstp
scas
pop
je
imul
das
ja
cs
cs
das
xor
add
xor
mov
add
pop
je
ss
and
popa
(bad)
loopne
sahf
and
rol
mov
ins
mov
ja
das
js
jo
cs
fsubr
arpl
or
in
mov
das
(bad)
gs
add
sub
push
lods
cmp
in
icebp
nop
pusha
cmovbe
dec
jns
add
pop
ins
adc
adc
loope
push
jae
jns
gs
push
sbb
jbe
jbe
jb
gs
xchg
scas
sbb
xchg
data16
ja
js
ins
test
jae
xor
mov
cmp
dec
loope
cdq
or
mov
add
sbb
inc
(bad)
inc
stos
rcl
and
and
xchg
test
fwait
out
dec
je
out
push
ds
xor
imul
xor
xor
sub
sub
mov
add
fs
jns
fcmovu
pusha
pop
jp
push
xchg
ins
cmc
adc
fs
mov
(bad)
fdivr
in
mov
imul
test
push
stos
ins
pusha
push
shr
dec
add
push
sub
in
sar
dec
test
sbb
and
jg
imul
cmp
cmp
cmc
mov
xor
fs
bound
cmp
je
jge
or
ror
pop
mov
inc
pop
dec
les
in
add
popa
ins
lds
sbb
mov
aad
call
xor
pop
push
add
fsub
sub
xor
xor
jb
gs
in
mov
jae
xor
add
pusha
add
inc
sub
test
movs
jle
xor
push
sub
and
mov
data16
and
inc
or
adc
sub
add
pop
adc
sub
add
sub
lahf
cmp
sbb
ret
test
xor
inc
sbb
pop
daa
pop
pop
cmps
adc
add
ins
jne
aaa
je
ror
pop
pusha
fwait
jne
jne
test
pop
and
cmps
xor
xor
cwde
jmp
lods
add
xor
aas
mov
sub
gs
pop
inc
repnz
xchg
(bad)
jae
addr16
and
aaa
nop
bound
xor
pop
enter
xor
pop
mov
or
dec
outs
push
fldcw
leave
add
stos
add
add
stos
stos
add
stos
stos
ss
add
stos
add
add
add
stos
add
call
aas
js
popa
arpl
je
gs
jg
jmp
cmp
sbb
rol
inc
dec
inc
inc
push
js
arpl
(bad)
(bad)
aas
add
push
xor
jmp
and
call
pusha
aad
lods
adc
(bad)
(bad)
(bad)
jmp
out
pushf
call
sbb
sar
mov
push
fbld
(bad)
(bad)
jg
add
dec
inc
scas
inc
pusha
or
outs
dec
outs
jne
gs
outs
ja
pop
sbb
outs
gs
das
js
call
data16
dec
imul
ins
imul
je
imul
push
pop
adc
popa
imul
outs
outs
je
js
dec
gs
add
push
outs
jo
add
inc
mov
push
dec
imul
inc
cwde
fiadd
(bad)
or
jbe
dec
jne
outs
pop
push
bound
mov
dec
cs
push
rsqrtps
push
dec
inc
dec
loope
mov
pop
inc
dec
inc
push
push
inc
push
or
outs
ins
outs
pusha
pop
arpl
sti
mov
daa
rol
or
dec
popa
ins
gs
pop
push
lods
add
inc
popa
imul
add
data16
in
ja
enter
or
dec
inc
dec
add
or
xor
xor
imul
adc
adc
add
dec
arpl
jb
ror
adc
add
pop
push
mov
lds
or
outs
xchg
or
pusha
les
pop
inc
imul
mov
push
movzx
inc
or
je
aam
adc
rcr
sar
shl
or
dec
pusha
adc
or
push
mov
add
jl
xchg
shl
inc
xor
or
call
add
pop
enter
jnp
outs
arpl
jae
push
popa
imul
imul
push
aas
add
or
jnp
int
or
cs
adc
int3
jo
(bad)
sbb
or
inc
mov
test
ret
ins
add
push
cmp
and
mov
add
bound
adc
push
cmp
mov
rol
rol
sar
cwde
adc
or
sbb
sti
inc
add
add
push
or
or
push
cmp
popa
je
jae
adc
dec
dec
push
jns
jl
adc
or
push
popa
and
outs
cmps
jae
and
and
imul
push
adc
gs
dec
outs
cmp
mov
xlat
sub
fiadd
inc
mov
or
dec
and
dec
adc
repz
or
and
jbe
outs
push
and
mov
inc
mov
sbb
bound
out
and
push
push
cmp
aad
push
xor
or
popa
jns
and
jle
inc
je
push
data16
and
lods
xor
je
push
xchg
test
ds
rcl
add
stos
or
mov
loope
xor
inc
pop
add
push
lock
push
xor
out
or
cmp
fmul
aas
or
and
or
loopne
push
inc
imul
fild
push
or
mov
mov
adc
shl
dec
push
dec
or
xor
inc
mov
or
push
xchg
or
inc
xchg
push
cmp
popa
imul
add
mov
cmps
imul
imul
aaa
jl
dec
dec
sbb
inc
push
inc
xor
xor
add
add
gs
ja
push
js
mov
je
cs
outs
or
or
add
(bad)
mov
jmp
dec
imul
movs
jmp
popf
inc
or
mov
push
mov
pop
movs
xor
sub
xor
jg
jmp
jo
jp
ror
sbb
inc
add
cld
dec
inc
(bad)
(bad)
(bad)
jmp
inc
inc
adc
add
and
cmp
pop
sar
sub
shr
mov
adc
ja
(bad)
(bad)
(bad)
inc
cmp
adc
ja
bound
cmp
pop
pushf
pop
mov
or
add
add
stos
fwait
dec
test
mov
sbb
je
xchg
dec
jae
mov
cmp
(bad)
(bad)
dec
adc
or
pop
sbb
dec
inc
cmp
cwde
jg
pop
pop
sar
inc
fisttp
pushf
jae
out
jmp
in
cmp
sahf
arpl
fcom
jmp
adc
aaa
inc
xchg
push
jle
int
jmp
adc
aam
push
push
ret
(bad)
(bad)
jmp
sbb
dec
test
stos
popf
fs
lock
js
call
(bad)
call
pushf
add
pop
or
adc
cwde
sbb
sub
adc
mov
xor
cld
es
sub
push
or
xor
fstp
sbb
push
jg
push
clc
(bad)
(bad)
inc
mov
jnp
jle
mov
cmp
test
pop
xchg
js
mov
jmp
jns
mov
mov
xor
mov
sbb
pushf
adc
(bad)
(bad)
inc
push
cwde
imul
imul
mov
jp
push
loop
(bad)
(bad)
(bad)
inc
mov
in
mov
out
scas
mov
add
movs
mov
xchg
mov
iret
add
cld
cmp
sbb
and
pop
out
sub
out
lahf
xor
xor
fs
test
xchg
mov
mov
(bad)
(bad)
(bad)
call
cmp
adc
xor
loopne
xor
sbb
test
or
dec
mov
xchg
ins
test
(bad)
(bad)
(bad)
inc
(bad)
pusha
adc
add
jo
movs
push
or
add
sbb
enter
push
jne
cmps
add
pusha
jp
jge
test
push
mov
(bad)
(bad)
(bad)
jmp
sbb
pop
pushf
and
mov
cmps
jp
stos
jnp
lods
lods
stos
jl
stos
movs
(bad)
(bad)
(bad)
push
sbb
mov
imul
retf
mov
call
les
mov
lahf
leave
inc
mov
mov
cmp
stos
add
add
call
in
(bad)
(bad)
mov
and
mov
adc
movs
or
xrelease
and
mov
mov
rol
sbb
test
sbb
adc
push
xchg
(bad)
(bad)
inc
fldenv
ds
mov
movs
gs
and
cdq
and
(bad)
fbstp
inc
xor
outs
add
or
xlat
aad
dec
sbb
fsubr
cld
dec
stos
sbb
dec
and
push
jne
push
push
xor
add
(bad)
push
add
inc
add
jge
add
popf
adc
mov
(bad)
dec
mov
or
cmps
popf
stos
or
movs
cmps
xor
xchg
jo
mov
xor
dec
push
outs
test
dec
les
add
js
adc
push
mov
(bad)
(bad)
(bad)
dec
sub
loop
jns
popf
mov
adc
pushf
jmp
and
cli
cmp
cmc
jmp
fcmove
jno
xor
int
dec
ret
fcomip
xchg
mov
sub
mov
cmps
(bad)
(bad)
(bad)
inc
push
push
or
xchg
cmp
lods
sti
jp
xchg
adc
and
movs
sub
and
(bad)
(bad)
inc
push
rol
nop
push
add
sbb
push
lea
and
inc
inc
push
pop
arpl
(bad)
(bad)
call
loop
aas
push
shl
das
jo
pop
inc
es
je
add
add
sbb
cwde
(bad)
dec
jno
mov
popf
movs
or
bound
push
call
add
cmp
mov
mov
(bad)
jmp
dec
ror
mov
or
mov
add
mov
inc
pop
push
sbb
add
out
xchg
mov
dec
imul
cmp
add
(bad)
call
dec
add
jno
sub
inc
push
mov
repz
mov
(bad)
fistp
push
pop
stos
nop
scas
adc
adc
dec
fs
mov
sub
cld
(bad)
push
push
push
mov
xor
or
pop
clc
dec
ret
stos
(bad)
(bad)
(bad)
jmp
bound
xchg
xor
jb
test
and
ds
(bad)
jg
or
outs
das
jb
pop
cmp
dec
xchg
xchg
adc
xchg
xchg
pop
cmp
xchg
call
xchg
mov
xchg
stos
cmp
and
add
push
popf
adc
and
pop
push
sbb
mov
(bad)
(bad)
(bad)
jg
adc
mov
pop
pop
add
jge
push
or
or
dec
fidivr
push
add
or
(bad)
(bad)
(bad)
call
xlat
rol
inc
shl
add
xchg
fwait
push
jmp
sbb
add
dec
shl
sub
inc
cmp
test
jo
adc
shl
add
test
and
loopne
pop
dec
mov
push
sub
stos
loope
aad
jnp
xchg
dec
add
pop
inc
rcl
(bad)
(bad)
(bad)
jg
push
dec
xor
inc
or
mul
mov
dec
xchg
call
mov
add
jg
and
cmp
xchg
bound
dec
and
dec
cld
(bad)
(bad)
mov
lea
lea
add
mov
dec
pop
hlt
push
and
add
test
lahf
es
jg
scas
cmp
sbb
xchg
test
inc
xor
sahf
mov
push
and
(bad)
add
retf
or
or
retf
mov
loopne
retf
mov
dec
mov
adc
mov
icebp
adc
retf
movs
sbb
clc
loop
mov
loopne
popa
add
pusha
inc
dec
inc
jmp
inc
jp
inc
mov
push
cld
(bad)
cmp
mov
and
add
cmp
xor
loope
and
push
add
movs
ins
mov
or
sbb
cwde
pop
dec
mov
(bad)
(bad)
mov
push
lds
nop
mov
or
add
into
ret
adc
(bad)
(bad)
mov
hlt
ficom
call
in
in
out
jmp
push
sub
fwait
push
add
push
pop
adc
jmp
and
dec
das
test
lock
hlt
test
das
jbe
inc
jge
sbb
cmps
cmps
xchg
pop
scas
or
xchg
mov
call
inc
sbb
sbb
ret
pop
pop
cmp
(bad)
test
(bad)
dec
adc
push
adc
fimul
add
(bad)
(bad)
jg
cmp
shl
adc
inc
out
call
adc
mov
jne
or
or
xor
je
dec
xchg
push
xor
or
xchg
call
or
lea
jo
add
prefetchwt1
add
pop
mov
dec
pop
mov
stos
push
add
lds
pop
adc
ins
(bad)
(bad)
out
js
stos
movs
mov
add
es
push
sbb
ror
mov
aam
add
(bad)
(bad)
jmp
inc
outs
inc
add
push
aas
dec
faddp
jmp
sbb
adc
pop
clc
rol
rol
loope
test
mov
stos
inc
xor
call
or
adc
add
fcomip
jmp
mov
rcl
jnp
dec
imul
jo
arpl
adc
xchg
xchg
cmp
call
xchg
movs
xchg
das
add
sbb
inc
cmp
push
jle
mov
pop
mov
push
pop
mov
cmp
popa
mov
mov
jmp
fld
pop
dec
(bad)
(bad)
(bad)
inc
loope
aas
adc
and
int3
jmp
add
sbb
icebp
ds
cli
ss
xor
and
push
mov
and
pop
or
sbb
xor
push
std
push
(bad)
or
mov
or
sub
or
dec
fmul
push
mov
loopne
dec
add
pop
dec
pop
sbb
mov
cs
add
jp
push
fld
adc
jne
pop
jb
and
push
or
xchg
mov
inc
or
(bad)
jnp
fwait
fwait
mov
push
pop
push
mov
mov
sbb
test
or
inc
das
or
mov
ret
cwde
jle
mov
adc
ret
add
pop
mov
sub
bound
pop
ret
adc
sub
int
(bad)
(bad)
(bad)
call
pop
loopne
shl
add
mov
inc
cs
fwait
shl
jle
jno
cmps
in
adc
jg
inc
pop
inc
(bad)
mov
or
jb
outs
jae
std
dec
xchg
cmp
inc
jne
je
outs
or
or
loop
jno
cmp
test
aam
push
and
add
add
add
ss
jmp
cmp
dec
add
mov
pop
adc
sub
or
push
popa
jbe
lods
mov
and
add
xor
cmc
add
lods
sbb
sti
cmps
or
sub
add
into
push
push
sahf
fdivr
dec
xor
shl
clc
jmp
mov
mov
or
push
mov
sbb
pop
enter
push
cld
daa
scas
ja
inc
pusha
dec
jae
add
push
push
ins
outs
aam
cmps
mov
and
repz
add
or
inc
add
inc
mov
test
mov
or
mov
or
mov
pop
or
repnz
popa
sbb
xor
xor
or
mov
inc
xor
inc
cld
gs
push
xor
imul
push
imul
movs
into
ror
mov
ins
mov
in
in
dec
retf
xor
test
jl
daa
nop
pop
cli
push
jp
outs
cmp
sub
or
mov
mov
pop
scas
or
sti
(bad)
xor
dec
or
xor
adc
fbld
push
gs
enter
jae
push
push
inc
cmp
push
dec
or
cmp
jbe
into
lock
imul
jae
adc
outs
dec
outs
outs
and
add
inc
pop
je
sbb
pushf
inc
xor
aam
test
loopne
leave
pusha
popa
push
inc
inc
dec
add
shl
popf
setg
adc
call
cs
adc
sbb
push
cld
dec
jne
push
push
nop
push
bound
and
inc
ins
ins
push
jo
loopne
jno
js
push
hlt
ss
dec
fs
add
adc
into
cmp
pusha
lahf
retf
push
add
enter
es
lock
pusha
mov
arpl
dec
dec
add
add
or
inc
xor
cmp
xchg
sub
inc
mov
pushf
sbb
mov
clc
lock
bound
jns
ins
dec
clc
fimul
sub
xor
jae
push
adc
mov
shl
lahf
add
push
or
xchg
pop
add
sub
je
sbb
push
test
stos
add
shr
repnz
add
or
push
dec
push
test
push
or
stos
data16
popa
push
pusha
jle
push
dec
ins
mov
icebp
in
or
enter
dec
push
push
xchg
stos
or
sar
ins
xor
sbb
loop
pop
mov
push
adc
ja
push
out
pushf
lock
or
or
or
cmp
add
sub
scas
or
cmc
xor
add
add
inc
ret
inc
gs
jnp
or
addr16
shl
adc
jns
xor
inc
and
inc
jne
xchg
inc
fs
(bad)
or
rcr
ds
imul
aad
xor
inc
adc
sbb
rcr
xor
add
mov
dec
pop
add
push
jno
or
adc
shl
shl
add
mov
mov
add
call
push
ja
adc
adc
out
cmp
rcr
imul
retf
push
add
mov
jae
sub
stc
push
add
sbb
or
popa
xor
xor
arpl
cmc
dec
mov
stos
loopne
aam
sti
cmc
rcl
mov
pop
inc
outs
popa
rol
cmc
inc
mov
rol
mov
ins
push
js
out
enter
add
add
aad
(bad)
cmc
and
push
(bad)
stos
add
imul
cmp
cmp
and
mov
ins
pushf
int3
es
fldcw
mov
xor
dec
loopne
adc
add
lahf
xchg
out
cmp
les
add
and
loop
xor
cmp
sub
pop
add
dec
(bad)
btr
sub
add
push
xor
mov
mov
fisttp
cmp
xchg
mov
sub
enter
fimul
inc
or
add
add
out
repnz
fisttp
adc
out
cld
adc
fs
sbb
mov
das
sbb
push
or
xor
std
ins
sahf
adc
shl
jb
dec
nop
leave
xor
xchg
stos
fwait
iret
sbb
sbb
cdq
lahf
xchg
(bad)
(bad)
loopne
clc
push
and
ret
ret
add
pusha
pop
jbe
mov
bound
xor
outs
sahf
push
out
loope
or
jae
mov
sbb
xor
fadd
pop
movs
pop
inc
mov
pop
mov
jmp
imul
loopne
xor
ret
enter
or
adc
push
adc
mov
jge
mov
addr16
out
out
pop
push
jo
push
inc
dec
or
jbe
sub
add
jge
or
les
pop
adc
fsubrp
and
cmp
test
add
lock
dec
and
or
add
ret
pop
arpl
cwde
retf
out
mov
cmps
add
sub
add
arpl
ins
push
rol
dec
sbb
jae
sbb
aad
mov
retf
rol
pop
pop
sbb
retf
out
adc
cmps
mov
push
push
push
pop
sbb
cmp
shl
pop
test
push
pop
sbb
dec
fst
add
sbb
pop
pop
cmps
(bad)
add
pop
sbb
inc
nop
sbb
or
sub
sbb
lea
sbb
add
xlat
bound
mov
retf
add
pop
sbb
(bad)
mov
(bad)
sbb
mov
gs
pop
fld
dec
add
sbb
ins
sub
adc
dec
add
push
sbb
arpl
loopne
or
add
ins
sub
fld
popa
push
cmp
sbb
add
sub
add
sub
sbb
add
imul
sub
popa
pop
pop
add
ins
ins
or
add
dec
fcomp
pusha
fistp
sbb
add
ins
sub
mov
sbb
add
mov
and
sti
add
dec
mov
inc
inc
aaa
add
push
inc
add
imul
shl
stos
pusha
sub
dec
push
mov
ss
inc
aaa
add
repz
ins
ins
rol
and
dec
inc
inc
add
dec
mov
add
dec
inc
aaa
add
test
dec
dec
cmp
aaa
add
push
ins
or
aaa
ins
mov
adc
cmp
add
mov
push
dec
dec
cmp
or
dec
push
push
mov
aaa
add
sub
mov
inc
inc
mov
dec
and
mov
sub
mov
inc
mov
sbb
add
mov
dec
in
pop
add
mov
aaa
add
add
movs
mov
add
xor
add
icebp
add
test
aas
dec
fadd
or
and
dec
and
or
aaa
test
inc
dec
div
sbb
mov
aaa
add
mov
mov
sbb
mov
xor
and
sbb
fld
add
lock
dec
std
adc
dec
dec
sbb
add
add
mov
adc
pop
adc
inc
mov
or
retf
inc
dec
xchg
and
dec
dec
sbb
(bad)
fistp
das
add
mov
nop
dec
aad
ins
les
push
sub
push
adc
sbb
inc
add
or
dec
dec
push
imul
aas
xor
imul
mov
mov
add
lea
pop
push
pusha
stos
dec
add
imul
sbb
dec
push
add
ins
retf
cmp
add
adc
mov
mov
aaa
aas
sbb
add
adc
dec
sbb
add
sbb
dec
adc
popa
sbb
push
xor
imul
sub
fidiv
aaa
mov
add
adc
inc
add
dec
push
das
xor
and
daa
sbb
and
jbe
imul
add
sbb
sub
fsubr
daa
jne
add
mov
rol
(bad)
sub
inc
nop
dec
push
fcomp
ins
and
add
loopne
dec
push
lods
add
and
or
dec
daa
and
sub
add
jne
mov
xor
inc
inc
and
not
(bad)
and
add
sbb
xchg
sbb
and
pop
xchg
push
and
add
mov
mov
pop
add
rcl
add
sbb
sub
add
add
arpl
add
sbb
dec
or
sbb
das
pop
add
sub
add
aas
add
ficomp
and
pop
mov
add
mov
test
fsub
cmps
push
sub
sub
and
xchg
and
and
add
cmps
push
lea
and
add
arpl
sub
nop
pop
bound
xor
push
push
sub
ins
das
and
add
or
and
and
in
adc
cmps
push
push
sbb
inc
or
pop
add
mov
aas
xor
movs
pusha
rol
add
dec
push
adc
cmp
inc
adc
cmp
inc
ins
dec
or
add
add
cmp
jg
mov
ins
rol
add
mov
and
pusha
ins
or
aaa
xchg
add
cmp
add
fcom
das
xor
or
pusha
fld
add
imul
lea
adc
add
and
add
ins
sub
sub
add
outs
and
test
ret
add
mov
and
add
mov
pop
add
add
sbb
sub
dec
adc
add
jae
add
arpl
dec
add
ret
imul
add
inc
add
imul
add
sub
add
inc
add
xor
mov
mov
das
adc
mov
and
fcmovnb
ret
add
add
jmp
popa
imul
cmp
popa
imul
inc
add
sub
in
add
daa
add
or
ins
inc
add
dec
mov
inc
adc
mov
das
adc
movs
lea
add
adc
dec
dec
sbb
pop
ins
sbb
dec
add
mov
sub
xor
add
cmp
bound
and
add
push
fdivr
push
dec
inc
or
fmul
or
pop
push
jo
cmp
test
adc
inc
dec
(bad)
sar
(bad)
cmp
or
sub
or
inc
sbb
fdivr
dec
add
lds
dec
add
or
popa
loopne
push
jae
and
fisub
push
adc
add
mov
aad
xchg
imul
add
push
fsub
jo
movs
xchg
ss
ins
or
mov
add
push
dec
sbb
add
mov
mov
sgdtd
bound
add
add
pusha
popa
outs
adc
xor
add
add
pop
fmul
sgdtd
jo
dec
add
js
inc
adc
dec
(bad)
mov
add
inc
push
dec
push
adc
and
add
mov
fisub
or
dec
and
fisub
test
adc
xchg
adc
or
add
test
rcr
dec
sub
sbb
dec
inc
inc
pusha
arpl
loopne
jg
dec
aas
mov
invlpg
push
inc
loopne
dec
jge
push
inc
loopne
dec
jns
add
enter
mov
adc
ja
stos
or
push
add
pop
stos
xor
rcr
dec
jno
stos
and
dec
outs
pop
push
mov
popa
dec
ins
mov
add
pop
dec
push
inc
pusha
arpl
dec
sub
ins
imul
imul
addr16
test
mov
dec
gs
rol
push
adc
arpl
pop
mov
or
dec
pop
push
arpl
or
pop
ins
inc
shr
pop
or
add
push
adc
pop
dec
dec
add
pop
dec
dec
and
fadd
add
push
dec
ss
pusha
dec
push
inc
mov
add
dec
push
movs
and
mov
dec
adc
mov
inc
ins
sub
inc
add
ss
mov
inc
sbb
jo
dec
dec
aas
adc
mov
ins
rol
aas
add
fcomp
and
mov
mov
dec
dec
mov
sar
dec
imul
push
inc
cmp
mov
adc
movs
and
ins
add
bound
dec
dec
ins
sub
inc
xor
push
dec
aas
inc
mov
push
inc
sbb
aas
xor
rcr
or
fadd
adc
add
and
rcr
dec
inc
xor
mov
add
adc
dec
dec
add
xor
pop
add
dec
xchg
fsubr
mov
inc
add
adc
dec
add
sub
pusha
dec
sub
add
adc
dec
or
fcom
daa
dec
(bad)
inc
add
inc
add
and
dec
inc
mov
sub
add
dec
daa
add
inc
xor
add
test
pusha
imul
add
push
mov
cmps
pop
add
movs
or
jg
add
and
movs
mov
int
ins
add
add
push
adc
int3
ins
retf
sbb
push
fdiv
add
add
mov
adc
add
add
dec
pop
add
jle
dec
add
pusha
or
arpl
add
add
std
adc
gs
push
or
push
arpl
mov
add
add
add
mov
gs
inc
push
push
push
xor
xor
nop
dec
dec
inc
add
mov
data16
inc
and
or
fiadd
dec
adc
dec
push
inc
xchg
add
push
add
jb
gs
add
add
jmp
arpl
arpl
popf
ss
lods
or
add
sbb
add
add
inc
pop
pop
stos
shl
mov
and
push
xor
popf
mov
or
adc
inc
add
mov
aaa
ss
cld
movs
or
xchg
sbb
add
add
mov
shl
and
push
outs
xor
dec
dec
into
add
push
xchg
and
add
test
mov
and
xchg
add
paddd
dec
adc
dec
or
adc
xor
fs
or
push
out
add
stos
gs
sub
popf
sar
leave
inc
xor
mov
add
xor
and
add
add
dec
fs
mov
add
xor
push
add
mov
ins
movntq
dec
shl
jp
and
sahf
and
add
push
xchg
push
add
or
cmps
nop
repnz
inc
adc
ret
ror
dec
inc
lock
add
pop
and
inc
es
rcl
adc
or
push
or
xor
sub
push
fadd
add
sub
or
lods
and
xor
loopne
adc
pusha
add
xor
mov
and
sub
scas
repnz
push
xor
ret
push
fwait
xor
or
or
push
add
dec
xor
add
push
push
pusha
xor
lahf
inc
stc
push
or
dec
and
jbe
cmps
sbb
or
dec
cmp
inc
mov
push
dec
push
dec
push
pusha
add
push
inc
mov
push
dec
add
adc
or
push
dec
or
or
push
mov
fcom
push
xor
lahf
push
adc
mov
add
inc
retf
add
dec
or
mov
mov
cs
mov
adc
push
mov
xor
movs
adc
cmp
fild
nop
sub
xchg
dec
or
inc
add
dec
daa
fdiv
inc
mov
dec
push
cmp
in
sti
add
add
bound
in
add
out
and
xor
dec
push
mov
adc
popf
dec
inc
lock
add
add
inc
ins
movs
ins
add
movs
mov
dec
mov
mov
scas
add
bound
or
dec
ror
jbe
cmps
in
dec
sub
dec
rcr
dec
sti
xchg
add
add
add
push
inc
dec
add
add
mov
add
mov
mov
add
add
sub
dec
pop
push
je
gs
in
(bad)
jmp
or
arpl
dec
gs
cld
or
cli
outs
ret
push
sbb
imul
cld
push
dec
popa
(bad)
fucomp
fucomi
gs
adc
pop
push
push
arpl
gs
inc
ins
gs
add
in
(bad)
out
rol
ja
add
push
jns
and
inc
popa
jo
(bad)
call
imul
xchg
shl
mov
shl
(bad)
sbb
rol
idiv
mov
and
and
adc
mov
outs
(bad)
jmp
and
dec
inc
inc
push
dec
dec
dec
and
cs
push
idiv
mov
inc
inc
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
ins
outs
jb
or
fidivr
arpl
outs
ja
gs
or
cmp
lock
dec
popa
call
popa
outs
popa
jae
in
or
push
jns
or
data16
test
push
retf
loopne
sub
or
push
movs
fs
jb
or
clc
inc
mov
adc
mov
inc
repz
loopne
adc
jbe
lahf
es
or
mov
or
ret
mov
data16
xor
data16
dec
add
fsub
mov
ror
push
xor
push
test
or
xchg
sahf
adc
addr16
xor
dec
mov
repnz
or
add
add
test
outs
aas
add
add
push
cs
pop
push
sbb
scas
or
dec
je
repnz
ins
inc
adc
sti
mov
ror
gs
inc
fs
add
sbb
xor
imul
cmp
or
fsub
dec
sub
push
xchg
dec
ins
bound
mov
jle
inc
dec
mov
jl
cwde
popa
fs
test
or
(bad)
imul
push
ja
ins
bound
adc
dec
fst
fcmovnu
dec
mov
inc
push
or
mov
push
imul
fwait
adc
pop
xchg
scas
mov
mov
add
dec
ins
xchg
push
or
cmp
sub
fild
imul
cmc
pusha
adc
rol
adc
inc
push
gs
push
adc
mov
pop
stc
add
push
add
sbb
fwait
dec
or
mov
or
outs
and
push
mov
mov
inc
popa
add
je
int3
int3
hlt
dec
push
outs
push
addr16
adc
mov
jo
shl
mov
mov
add
imul
mov
ret
jo
call
pusha
mov
dec
pushw
sbb
inc
sbb
fldcw
jns
mov
arpl
fiadd
outs
ror
cmp
int3
scas
mov
xchg
jnp
imul
in
cmp
mov
adc
adc
or
cs
lahf
jo
ins
in
push
jo
sub
lea
mov
inc
popf
call
xchg
cmp
dec
mov
pop
xchg
fisub
sbb
and
and
pusha
cmc
adc
pushf
and
stos
dec
or
test
mov
and
push
js
cmp
pop
popa
and
pushf
sahf
scas
mov
ror
rol
fcomp
das
div
(bad)
xchg
not
loopne
cmp
jb
enter
cmp
inc
popa
jnp
ret
mov
or
outs
cmp
(bad)
loopne
and
repnz
cld
mov
call
jno
xor
xchg
pusha
xchg
test
sub
or
ins
ja
or
mov
adc
jns
cmovns
dec
mov
in
push
or
sub
cwde
jns
shl
pop
inc
cmp
fsub
and
ja
push
ror
sub
cmp
xchg
dec
or
sbb
mov
mov
js
(bad)
mov
add
or
imul
outs
cwde
pushf
xchg
div
inc
shl
adc
or
push
push
mov
mov
push
dec
push
cmp
push
loope
repz
adc
arpl
cwde
in
sbb
adc
or
mov
out
mov
ret
sbb
inc
(bad)
arpl
and
add
jno
pop
mov
push
xor
sub
call
mov
ret
xchg
sbb
mov
js
sbb
push
pop
sub
push
lods
aaa
test
ins
add
xchg
mov
cmp
xor
and
mov
mov
cmp
push
xor
sbb
shl
int3
mov
dec
add
cmp
mov
lea
sbb
sbb
fiadd
lea
scas
ret
and
mov
fistp
mov
xor
retf
and
pusha
xor
jmp
aas
add
js
cmc
call
jp
ret
fcomp
das
push
adc
or
dec
jne
into
xchg
mov
push
(bad)
and
out
push
sbb
sub
push
adc
mov
push
sahf
push
jg
lods
or
or
pop
cdq
dec
sbb
sub
adc
cmp
addr16
test
sbb
mov
mov
popa
cmp
adc
ins
mov
loopne
imul
mov
loopne
test
adc
xor
call
movs
sbb
pop
shl
mov
mov
sbb
sbb
iret
dec
test
stc
(bad)
dec
icebp
xor
or
add
xchg
xor
xor
push
pop
push
cdq
sub
(bad)
push
or
mov
sub
mov
sahf
ins
push
add
add
mov
push
bound
fadd
or
adc
ins
adc
outs
sbb
sub
pop
adc
and
ror
popf
or
sbb
xchg
pusha
xor
push
fimul
pushf
and
pop
loope
sbb
adc
aaa
sbb
into
loopne
cmp
cdq
scas
add
xchg
pop
dec
jae
jne
add
cmp
mov
retf
pop
mov
and
mov
sub
sbb
call
adc
shl
cmc
mov
dec
jo
je
(bad)
push
lahf
push
shr
jne
sbb
adc
cmp
fs
sub
inc
mov
xor
xchg
ss
cmp
dec
ins
outs
pop
add
pusha
add
es
cmp
mov
jl
call
(bad)
sub
inc
rol
add
inc
ret
adc
ret
(bad)
or
mov
mov
mov
add
xlat
sub
es
mov
dec
add
dec
adc
daa
push
dec
or
jg
add
outs
xlat
mov
xchg
xor
(bad)
imul
dec
clc
mov
add
push
cs
add
add
mov
pop
mov
imul
ins
sbb
mov
add
cmp
pop
pop
cmc
je
dec
fucomp
jns
pop
sub
stos
push
lds
stos
mov
jb
fisub
lods
(bad)
push
das
and
pop
retf
xor
je
pop
daa
je
inc
pusha
loope
sub
pop
cs
jb
mov
sbb
push
pop
sbb
sbb
mov
xor
inc
daa
sub
push
mov
mov
rcl
shr
jns
jo
mov
pop
popa
pop
mov
dec
out
mov
xchg
jg
sahf
fimul
xor
mov
xor
push
or
popf
cs
mov
push
inc
mov
(bad)
loop
outs
shl
add
xor
loopne
and
xor
inc
mov
add
dec
push
clc
pop
add
mov
loop
inc
inc
jno
pop
add
push
sbb
loop
in
adc
mov
je
sar
xchg
inc
sbb
sub
stos
jb
jl
add
mov
xor
je
je
mov
loopne
cwde
xchg
shl
add
push
ds
mov
out
(bad)
enter
cmp
xor
jo
or
dec
shl
jo
mov
jmp
jp
mov
or
pop
push
fnstsw
fs
mov
sbb
sbb
push
jno
les
adc
out
or
popa
jecxz
daa
inc
jo
pusha
sub
data16
lods
popa
jb
push
mov
sbb
retf
jle
(bad)
or
push
ret
inc
dec
fbstp
mov
ins
mov
mov
pop
adc
jae
add
aas
mov
inc
outs
add
ret
and
cmp
or
jo
pop
pushf
js
add
push
inc
add
dec
mov
inc
loopne
xor
push
mov
cmp
cmp
jmp
ret
add
or
xchg
or
out
sub
or
cmp
test
loope
pop
push
pushf
sbb
loopne
lock
bound
push
jp
and
lea
inc
arpl
or
pop
(bad)
(bad)
adc
sbb
lea
ss
fstp
hlt
js
test
loop
dec
in
rol
cmp
xchg
and
sbb
loopne
(bad)
xor
and
rcr
inc
lea
shl
xor
and
xchg
ret
repz
pop
push
add
jns
cmp
inc
cmp
sar
ror
fwait
cmp
sub
cmp
stc
in
add
jbe
loopne
push
loop
mov
lea
sub
out
rcl
test
leave
adc
fmul
movs
sbb
arpl
lahf
adc
lds
aam
dec
vpavgb
(bad)
adc
sub
push
aaa
pushf
xchg
pusha
movs
pop
mov
enter
adc
or
dec
clc
rcr
push
mov
push
hlt
mov
shl
xor
test
push
adc
or
sub
pop
and
je
dec
add
mov
test
pop
jbe
dec
sub
sbb
adc
int
(bad)
lock
dec
test
sub
inc
and
dec
lock
or
add
xchg
mov
xor
dec
imul
sbb
xchg
(bad)
xor
mov
add
sub
pop
(bad)
mov
shr
js
icebp
outs
add
add
jno
push
xor
or
and
outs
jae
clc
loopne
jns
jo
outs
rol
(bad)
int3
xor
popa
push
and
cmc
xor
popf
arpl
jmp
xchg
pop
and
cmp
retf
popa
pop
call
arpl
cwde
push
leave
ja
shl
push
mov
inc
loope
in
adc
in
cmc
mov
adc
das
adc
das
jge
ret
stos
or
adc
mov
sbb
rcl
pop
outs
pop
pop
sbb
push
sbb
adc
or
mov
mov
or
sbb
push
push
dec
movs
repz
int3
push
retf
into
enter
sub
push
rol
fild
xor
sub
jb
ins
inc
add
loopne
jne
xchg
or
push
dec
adc
test
mov
inc
xor
cli
sub
jmp
(bad)
out
mov
(bad)
mov
rcr
push
push
inc
ins
jo
mov
popa
ret
and
inc
loopne
dec
aas
add
jo
xchg
or
dec
inc
jnp
and
and
in
mov
pop
or
addr16
pop
jnp
jo
xchg
leave
mov
test
xor
fs
adc
(bad)
aad
add
cmp
cmp
dec
pop
pop
retf
adc
fdiv
pop
and
fnstenv
or
sub
lods
stos
adc
lods
mov
lods
adc
mov
mov
call
lock
shr
pop
shl
stos
pushf
sbb
outs
push
cmps
jge
push
cmps
stos
adc
jb
sbb
sub
xor
xor
push
or
loop
push
js
jp
jge
adc
xor
mov
or
mov
cmp
dec
shr
adc
arpl
rcl
xchg
or
test
and
pop
sub
cmp
sub
setg
js
adc
jnp
ss
or
xor
add
mov
jmp
pusha
lock
cwde
aas
push
push
data16
mov
or
adc
fadd
imul
or
das
mov
movs
inc
add
inc
mov
(bad)
xchg
and
add
adc
cmp
jns
push
cmp
sub
lods
or
bound
cmp
shl
es
loopne
jmp
bound
sub
cmps
add
xor
cmp
or
jns
mov
sub
push
xchg
sbb
sub
jo
xchg
jle
in
ret
popf
and
shl
js
push
add
or
lock
test
fsub
or
pop
adc
aad
sub
mov
mov
or
xor
jp
sbb
and
cmc
pop
or
test
and
add
push
sbb
mov
ret
xor
adc
jno
jnp
inc
dec
popf
repnz
inc
add
rol
lar
adc
mul
enter
mov
xchg
retf
mov
xor
fucomi
inc
shl
sar
adc
fbstp
xchg
in
pop
into
add
sbb
inc
pop
mov
xor
jecxz
xchg
xor
push
inc
and
push
pusha
or
mov
mov
push
mov
dec
(bad)
imul
lods
sbb
and
jbe
xchg
sbb
jp
push
or
xor
xchg
pop
push
add
add
adc
pop
pop
add
push
xor
push
pop
imul
add
or
pop
and
add
jmp
adc
popa
outs
pop
jecxz
push
out
imul
(bad)
push
xchg
cmp
mov
push
sbb
arpl
xor
cmp
add
pusha
shl
mov
sub
mov
or
ins
in
and
jmp
pop
fbld
add
dec
xor
shl
or
and
xor
loope
inc
hlt
sub
mov
xchg
mov
cmp
outs
xchg
ret
rcr
jge
cmp
push
pop
xor
mov
cmp
and
dec
and
and
adc
sbb
cli
push
fild
or
fwait
pop
sbb
sbb
push
mov
mov
gs
scas
push
and
add
call
add
aaa
sub
fild
mov
out
ins
rcl
adc
repz
mov
xor
cmp
or
mov
loopne
ja
push
jo
push
inc
mov
pop
jno
mov
or
outs
mov
add
xor
inc
mov
loopne
inc
add
or
sbb
inc
out
cmp
and
or
sbb
(bad)
jecxz
mov
xlat
(bad)
push
pop
movs
aaa
inc
ror
loopne
add
xlat
fiadd
sti
xchg
cmp
adc
xor
and
dec
push
sbb
cmp
add
pop
jmp
rcl
inc
in
cmp
imul
mov
xor
or
mov
(bad)
(bad)
mov
push
arpl
ins
ins
inc
popa
jb
pop
or
push
gs
imul
inc
jb
add
push
push
popa
outs
gs
add
sub
xor
gs
add
ret
add
push
clc
add
push
dec
gs
sub
outs
pop
or
in
idiv
je
ins
or
jbe
dec
jne
xchg
pop
push
bound
outs
nop
fucomi
push
add
or
push
popa
imul
pop
push
data16
addr16
fistp
les
mov
xchg
ds
cdq
scas
rol
add
and
loopne
xchg
cmp
ret
push
xchg
mov
xor
or
push
push
dec
adc
pop
loope
in
cmp
cs
fs
pop
lock
sbb
jo
pop
push
imul
or
pop
dec
outs
inc
call
dec
lock
outs
and
jae
mov
je
inc
sbb
adc
pushf
pop
and
popa
out
pop
pop
and
cwde
push
mov
adc
pop
xchg
jp
sbb
loopne
mov
sti
fisttp
or
xlat
or
imul
add
adc
dec
ror
or
inc
jo
pop
and
inc
mov
call
or
ret
cmp
push
movs
ret
jmp
xchg
inc
sub
data16
adc
mov
sahf
dec
mov
sub
shr
loope
inc
inc
cmp
das
mov
push
pusha
je
cmp
push
xor
ret
xlat
cs
je
xchg
js
push
xor
cmp
and
lods
test
cmp
popa
ds
add
repnz
popf
mov
sub
push
sbb
mov
or
pop
dec
data16
mov
fldcw
mov
ins
xchg
ss
ins
push
ins
or
ins
les
or
int3
mov
inc
loopne
fcmovne
xor
mov
movs
nop
shl
inc
adc
je
mov
call
dec
sbb
pop
pop
and
popf
cs
pop
fwait
jmp
call
xchg
push
sti
sbb
adc
xor
or
outs
retf
or
inc
xor
outs
cs
popa
mov
outs
jne
sub
shl
(bad)
retf
add
nop
adc
ins
ins
ins
push
add
cdq
test
test
jl
lock
jns
sahf
mov
cs
sub
movs
adc
aas
xor
outs
push
dec
(bad)
rcl
aas
push
adc
inc
adc
sbb
inc
jne
inc
mov
adc
retf
fcom
push
dec
inc
mov
stos
xor
fwait
cmp
dec
mov
xlat
mov
test
daa
jnp
cmp
(bad)
sub
jmp
push
mov
movs
jmp
(bad)
sbb
add
stc
retf
xchg
sbb
xchg
pop
pop
shl
and
xchg
push
pop
adc
cmp
dec
or
jmp
mov
xchg
outs
jne
shr
xchg
sbb
or
or
or
mov
mov
pop
mov
je
gs
jne
call
out
in
adc
and
pop
pop
pop
or
(bad)
add
push
cs
sbb
dec
inc
inc
inc
inc
push
dec
push
push
dec
inc
push
push
inc
push
or
outs
dec
xchg
arpl
outs
clc
mov
gs
or
lahf
cmc
or
dec
popa
xchg
jne
sub
push
fsub
nop
popa
jno
dec
rcl
mov
dec
mov
and
cmps
add
cmp
inc
sub
iret
adc
pop
add
out
adc
or
adc
push
xor
dec
jecxz
stc
xchg
add
mov
adc
or
pop
das
add
xor
push
out
aaa
repz
jae
ins
fs
pop
add
or
js
jmp
or
dec
sub
push
loopne
jno
rcr
add
jae
push
daa
push
retf
in
ss
dec
ins
outs
or
pop
inc
pop
dec
push
xor
inc
stos
sbb
xchg
div
mov
fild
fwait
or
outs
inc
xor
mov
pop
or
lahf
sbb
add
add
and
scas
repnz
ret
and
xor
mov
inc
cmp
jae
or
scas
add
sub
rol
jecxz
call
pop
or
push
sub
lods
adc
dec
mov
gs
sbb
movs
sbb
das
jo
xor
add
or
inc
xor
jg
loope
adc
jne
test
ret
mov
mov
iret
lods
push
pusha
lea
cmp
or
out
sbb
mov
sub
pushf
add
cwde
xchg
sub
loope
call
add
hlt
dec
add
jp
inc
xchg
sbb
stos
inc
scas
pop
les
xor
dec
inc
xchg
fdiv
push
dec
add
add
ret
jo
add
xor
mov
pop
inc
xor
push
test
ins
push
adc
add
adc
or
mov
push
sti
bound
jns
fisubr
outs
jne
stos
(bad)
mov
dec
sbb
jae
outs
sub
xchg
jge
test
or
inc
inc
adc
xchg
cmp
sbb
jne
loop
icebp
push
adc
dec
adc
ret
mov
loope
(bad)
outs
jae
fadd
push
jo
push
pop
sbb
sbb
push
push
push
and
mov
lock
hlt
imul
or
jae
pop
outs
arpl
xor
pusha
mov
inc
adc
or
cmp
lea
ja
mov
jb
or
mov
(bad)
mov
add
sub
rcr
inc
add
fld
mov
rcl
mov
imul
outs
xor
jo
xor
inc
adc
adc
repz
jmp
jmp
aad
or
cmp
hlt
test
sbb
or
in
adc
xor
cmc
dec
mov
dec
fild
lds
mov
cmc
push
pop
add
adc
ds
fwait
lock
dec
add
scas
mov
inc
or
pop
daa
push
lods
inc
and
(bad)
dec
and
mov
and
(bad)
cmp
jbe
mov
and
dec
mov
popf
pop
adc
cmp
test
inc
sub
mov
aas
jb
leave
push
movs
clc
and
test
call
call
push
adc
mov
cmp
xor
add
bound
mov
add
or
pop
inc
and
and
push
test
test
add
mov
repz
push
adc
or
inc
add
adc
add
(bad)
out
add
and
push
mov
inc
mov
aad
mov
dec
iret
inc
mov
mov
add
or
dec
outs
pop
xor
mov
or
push
and
popf
pop
adc
adc
sbb
rcl
mov
add
xchg
xchg
mov
pop
jle
nop
shr
xlat
dec
repnz
add
loopne
push
push
pushf
push
add
jns
xchg
lock
in
add
pop
int
fdiv
jmp
mov
or
jo
adc
pop
and
loop
(bad)
push
add
retf
fist
test
ss
xchg
add
sub
cmp
push
sub
in
mov
dec
imul
in
addr16
mov
inc
pop
and
sub
jne
or
or
rcl
mov
aam
sbb
aam
aam
cdq
cmp
jmp
sti
pop
test
test
mov
sbb
adc
aad
(bad)
aam
retf
or
xchg
scas
arpl
popa
push
jmp
ret
mov
cmc
pop
sbb
fimul
pushf
add
pushf
lea
sbb
xor
pop
(bad)
fldenv
sbb
int
pusha
push
cmp
out
and
xchg
out
adc
jecxz
cmp
pop
and
jbe
call
retf
sbb
push
xlat
test
xor
sbb
add
dec
dec
cdq
xchg
ds
push
sbb
pop
sti
adc
sub
sub
inc
(bad)
sbb
retf
add
xchg
enter
xchg
xor
and
sub
or
loop
xchg
sar
test
or
sub
xor
mov
add
xchg
pop
jo
loopne
lahf
add
aas
loope
sub
xlat
add
add
jl
mov
add
push
sub
jge
dec
nop
and
dec
and
ror
dec
test
adc
in
mov
push
sub
mov
xchg
pop
xchg
add
in
sub
outs
adc
mov
cmp
(bad)
add
in
add
icebp
adc
or
je
cmp
push
jo
call
inc
or
add
inc
rcl
lea
sbb
popa
sub
mov
and
das
in
mov
sub
cdq
jbe
sbb
iret
adc
sbb
movs
add
push
mov
pop
mov
mov
jns
xchg
sar
jno
scas
out
test
xor
mov
xor
mov
cmp
add
add
outs
xor
sub
adc
loope
push
shl
xor
cmps
adc
popa
cld
in
xlat
mov
push
aaa
lock
xchg
mov
std
dec
adc
sti
sbb
mov
add
xchg
cmp
test
adc
push
out
cmp
ja
xchg
sahf
fdiv
popa
and
ret
enter
jnp
das
inc
mov
sahf
mov
mov
add
imul
jnp
sbb
add
adc
loope
xchg
test
xor
loopne
pushf
xchg
push
cdq
das
cmp
dec
popa
jns
imul
sbb
ret
je
push
loopne
jae
sbb
and
adc
sbb
xor
pusha
xor
repz
add
repnz
xor
push
adc
and
adc
mov
mov
in
adc
push
popa
pop
stos
inc
pop
cld
add
sbb
or
dec
ins
jo
(bad)
mov
push
js
cwde
adc
mov
dec
cmp
bound
call
into
or
lahf
adc
cmc
pusha
add
shl
add
daa
adc
sbb
ret
imul
sahf
scas
pop
fs
sti
outs
cmp
xor
add
in
test
adc
loope
jmp
in
fld
push
lock
dec
adc
lods
xchg
mov
or
mov
jbe
xor
int
mov
shr
cmp
push
mov
sti
inc
in
mov
(bad)
mov
cmp
in
cmp
shr
mov
sbb
push
add
(bad)
sub
ss
int3
and
push
sbb
iret
aad
mov
stc
mov
xlat
inc
call
add
(bad)
or
add
xor
into
add
mov
push
js
nop
sbb
(bad)
pop
xor
or
add
into
xor
(bad)
push
mov
add
add
ror
pop
and
add
inc
xchg
jo
or
adc
inc
add
adc
shr
aas
jecxz
add
mov
xor
pop
and
pop
sub
add
arpl
jle
loopne
adc
(bad)
xor
cmp
cs
cmp
push
jnp
mov
cmp
xchg
ins
add
add
or
xor
push
outs
data16
popa
shl
mov
add
push
gs
ss
mov
aaa
xchg
test
add
or
nop
ror
xchg
mov
or
pop
xor
mov
pop
or
push
mov
inc
ret
daa
add
and
rcr
push
sbb
dec
mov
sahf
add
(bad)
sbb
scas
add
inc
and
ja
retf
mov
push
inc
pop
mov
mov
sub
adc
imul
sub
jbe
sbb
repz
or
mov
fst
sbb
mov
mov
nop
gs
mov
sahf
dec
push
xor
enter
ret
and
aad
add
in
inc
popa
loopne
pop
(bad)
shl
pop
mov
and
aaa
lds
push
or
jmp
cmp
mov
pop
add
sar
push
jl
stc
popa
xor
sar
fwait
shl
xor
xchg
hlt
ins
sbb
sub
ja
mov
xor
loope
push
jmp
out
push
sbb
adc
jmp
add
sbb
xchg
aaa
shl
jno
inc
sahf
mov
mov
ret
pusha
add
imul
ret
pusha
int3
pop
in
test
or
cmps
adc
sti
mov
scas
push
mov
adc
test
pop
add
pop
retf
xchg
iret
movs
push
adc
fld
pop
push
ins
and
shr
daa
daa
and
or
and
xchg
retf
mov
pop
mov
sub
cmp
or
cmp
lock
cmps
repz
out
push
sub
and
shr
shl
add
push
arpl
push
loopne
retf
inc
cdq
movs
ins
pop
test
cmc
add
sbb
dec
mov
sub
add
in
add
push
pop
aad
fsubr
xchg
out
pop
mov
adc
jg
sbb
or
add
ja
ja
les
loop
add
jnp
add
or
jo
packuswb
mov
loop
cmp
adc
mov
dec
test
repnz
sbb
cs
xor
cmp
outs
into
sahf
shl
sub
and
mov
pop
add
adc
inc
add
ins
xor
inc
lods
test
ret
xchg
sub
retf
ds
bound
xor
mov
mov
add
add
ret
mov
ror
adc
pop
push
adc
lds
pusha
inc
hlt
push
jg
into
mov
leave
loopne
loopne
pop
lods
call
(bad)
out
dec
sub
push
dec
jo
(bad)
cmp
and
jp
jns
mov
fwait
jbe
xchg
inc
or
cmps
rol
dec
pop
shr
shl
test
nop
sub
adc
mov
loopne
cmp
inc
and
aaa
in
in
push
daa
hlt
cmp
(bad)
mov
pop
jg
inc
mov
sub
adc
std
xor
movs
inc
mov
das
cmp
adc
jecxz
movs
dec
iret
add
pcmpgtb
sbb
cmp
inc
and
ja
adc
fstp
pop
sub
gs
jo
mov
pop
aas
add
out
rol
leave
daa
jne
inc
mov
sti
fild
stc
mov
outs
(bad)
mov
jae
sub
add
cmp
mov
movs
or
ret
adc
and
int
jo
push
test
(bad)
(bad)
mov
jmp
cmp
add
add
add
add
add
sub
loope
add
cmp
sub
rcl
imul
(bad)
mov
jg
sar
invd
and
loopne
jno
push
aad
outs
rol
(bad)
dec
jb
in
(bad)
mov
sub
pop
and
or
ret
fcom
and
arpl
ret
jo
ret
cmp
(bad)
dec
add
dec
nop
sub
(bad)
test
add
mov
test
mov
movs
pusha
add
sub
xchg
(bad)
(bad)
xor
add
add
ins
xchg
rcr
xor
pop
jnp
inc
add
lods
fist
push
shl
push
adc
pop
pop
cmp
and
jmp
xchg
(bad)
cli
daa
or
loope
xchg
lds
pusha
addr16
sbb
aas
mov
xchg
or
imul
mov
adc
cdq
jae
add
adc
(bad)
pop
loope
add
add
mov
dec
pop
stos
and
sub
dec
out
xchg
sub
out
movs
xchg
sbb
sub
sub
sbb
(bad)
in
xchg
stos
jae
and
ja
inc
aas
out
inc
sub
daa
daa
fmul
xchg
mov
cdq
xchg
and
or
sub
cmp
mov
jle
inc
mov
xor
pushf
loope
pop
pop
sbb
adc
mov
push
sbb
dec
call
(bad)
xlat
jne
add
dec
sub
sub
addr16
repz
out
out
jg
jo
add
inc
in
cmp
popa
sbb
add
iret
jmp
or
outs
xor
inc
adc
add
pusha
stc
in
adc
fdivr
(bad)
in
pusha
push
sub
xor
aad
dec
ja
or
or
dec
ins
dec
aas
loopne
fchs
dec
(bad)
popa
and
push
mov
and
adc
loopne
in
pop
pop
sub
sti
xchg
loopne
sbb
leave
ror
sbb
ins
pusha
xor
outs
xor
in
sbb
and
movs
cs
pop
mov
and
adc
and
dec
sbb
dec
cmp
jnp
sub
jno
push
sti
dec
dec
xor
cmp
inc
and
hlt
xor
pop
mov
sbb
xchg
inc
push
movs
mov
add
and
mov
loopne
pop
jmp
jmp
ins
adc
adc
add
cmp
adc
adc
push
and
adc
fadd
mov
hlt
mov
pop
xchg
cmp
cmp
push
scas
(bad)
sbb
jge
iret
add
mov
ror
nop
sub
arpl
pop
mov
and
push
dec
or
test
sub
mov
inc
adc
dec
sbb
fisttp
rol
mov
or
lock
mov
sub
and
adc
(bad)
fld
mov
jmp
test
push
fldenv
sbb
pusha
psubusw
les
push
pop
outs
pop
(bad)
mov
pusha
push
nop
pop
repnz
ret
shr
jno
sub
std
imul
sbb
pusha
push
xor
inc
mov
(bad)
dec
adc
pop
xchg
sbb
xchg
cwde
cmp
loopne
rol
push
aad
out
daa
pop
sbb
pusha
dec
sbb
or
and
push
and
pop
inc
adc
ins
add
dec
push
sbb
sbb
sbb
mov
add
xor
or
pusha
test
add
sub
jns
sbb
les
or
mov
mov
xchg
ins
jbe
popa
je
xor
jecxz
and
push
add
in
add
mov
or
sbb
or
scas
addr16
jae
pop
sbb
fcmovnu
sbb
or
cmp
or
add
std
and
push
cs
add
add
mov
mov
fdivr
cmps
sbb
adc
jl
xchg
xor
adc
xlat
dec
or
call
sbb
sbb
xchg
int
jo
jno
aaa
fnstsw
sbb
ins
inc
shl
(bad)
lea
jns
aas
inc
cmp
inc
out
std
jb
push
fadd
or
mov
packsswb
ret
or
test
ja
aam
xchg
mov
adc
push
jo
out
add
add
nop
inc
pop
pusha
and
add
into
push
sbb
inc
or
mov
mov
stc
xchg
test
cmp
jge
and
sbb
mov
xchg
or
adc
or
inc
imul
popf
lods
xor
mov
xor
push
lods
shl
push
xchg
push
sub
fmul
je
push
jne
or
add
inc
sub
les
and
test
out
loopne
add
mov
into
sbb
mov
push
aam
mov
(bad)
repz
repz
xor
dec
pop
sub
add
and
lods
adc
sub
adc
gs
jmp
imul
cmps
or
ja
mov
xchg
inc
adc
int3
repz
mov
push
or
jne
ins
mov
repz
sbb
mov
or
jns
jno
jnp
ds
adc
ja
cmp
push
adc
add
add
xchg
das
pop
push
sbb
arpl
pop
xor
or
inc
push
daa
mov
mov
xchg
sub
jo
shl
in
(bad)
ds
rcl
call
and
sbb
and
and
test
shl
shr
jae
or
ins
pop
mov
jmp
sbb
jb
adc
addr16
mov
aaa
push
or
ret
inc
pop
mov
and
xchg
dec
sub
rol
loopne
dec
or
pop
push
dec
add
pop
sub
mov
popa
push
mov
out
push
das
pusha
adc
mov
mov
or
push
or
mov
jo
pop
mov
mov
fs
stos
xchg
sbb
jnp
pop
sbb
aaa
pop
ins
nop
add
dec
adc
or
mov
sub
into
mov
in
gs
loopne
addr16
jnp
add
adc
mov
sbb
adc
cmp
pop
mov
cmp
loopne
pop
xor
dec
sbb
adc
pop
popa
ret
sub
jo
cmp
jae
add
addr16
sub
xchg
xchg
dec
repnz
bound
add
imul
mov
pushf
scas
push
add
push
(bad)
popa
mov
jl
or
pop
mov
jae
mov
mov
outs
inc
lea
dec
or
add
jmp
test
lahf
mov
sbb
adc
and
outs
pusha
shl
ret
test
mov
addr16
loop
mov
mov
seta
mov
scas
inc
jns
lods
jo
adc
mov
retf
popa
leave
aad
xor
xor
cmps
or
or
push
dec
das
rol
mov
inc
lea
push
sub
push
div
rol
adc
and
jmp
mov
and
push
shl
or
mov
push
(bad)
call
fadd
imul
adc
mov
int
stos
pop
sbb
cs
pop
adc
pop
inc
add
cwde
(bad)
mov
dec
add
or
pop
or
push
rol
rcr
retf
or
cmps
jne
stos
enter
jae
rol
xchg
jge
add
popa
push
ficomp
inc
push
jo
mov
mov
push
das
sbb
inc
dec
adc
jno
and
inc
xor
loopne
jno
rol
dec
jbe
scas
ss
and
movs
rol
mov
mov
sub
loope
data16
imul
and
pop
lds
and
adc
pop
or
popa
pop
(bad)
(bad)
jmp
jno
cmp
pop
and
cmp
xor
int
add
ret
add
int3
inc
mov
pusha
inc
lods
out
mov
cwde
pushf
repnz
mov
adc
(bad)
sub
push
mov
mov
popa
mov
push
cmp
jo
fistp
loopne
mov
inc
jo
add
ss
js
pushf
rol
jp
inc
mov
add
pop
and
adc
(bad)
push
jo
outs
jb
inc
fs
popa
jae
imul
outs
gs
push
das
cmp
cmc
es
xchg
mov
mov
mov
lods
ror
sbb
xchg
jne
dec
xchg
pusha
popa
je
shl
mov
add
and
cmp
rcl
movs
clc
and
repz
sbb
xchg
inc
xor
push
push
xchg
add
dec
loopne
imul
mov
out
xchg
jo
sub
leave
mov
jns
add
movs
ret
lea
pop
mov
push
add
mov
sub
hlt
xchg
cdq
stc
ret
sar
or
sub
pop
or
and
add
fiadd
cmp
sub
cld
jmp
pop
lods
jmp
add
ror
mov
fstp
or
xlat
idiv
push
addr16
sub
or
fwait
stos
push
xor
inc
mov
xor
imul
mov
mov
cld
push
or
imul
movhlps
loop
test
mov
sub
stos
scas
and
add
mov
(bad)
fisttp
inc
pop
(bad)
js
invd
push
sub
cmovo
movs
iret
add
sbb
add
mov
sbb
jnp
jo
lods
dec
mov
dec
inc
stos
rcl
out
add
ret
test
rcr
jp
push
jno
add
dec
xor
call
pop
sbb
xchg
lods
in
add
cs
cmp
xor
inc
mov
dec
shl
jo
icebp
not
or
xor
dec
add
sub
sbb
bound
and
or
or
fcmovne
shl
xchg
inc
movs
or
or
xchg
adc
add
pop
xor
pop
mov
sbb
sub
sub
fwait
icebp
xor
hlt
jl
inc
xchg
mov
xchg
mov
add
inc
and
or
or
jne
mov
and
loope
sub
(bad)
retf
fcomp
dec
js
xor
ja
add
mov
add
inc
call
mov
mov
xor
jae
add
or
lock
ja
ret
(bad)
inc
sbb
ror
es
adc
(bad)
and
test
shr
adc
ds
or
mov
or
jno
sbb
mov
jp
xchg
sbb
or
and
pop
sub
xor
cmp
stos
inc
pop
movs
repz
pop
add
popa
movs
mov
arpl
jno
cmp
rol
rol
add
das
add
push
jmp
ret
inc
cs
shl
adc
loopne
cmp
xor
dec
inc
jno
xor
dec
adc
int
repz
jge
adc
mov
mov
add
push
add
push
gs
mov
(bad)
push
daa
fs
addr16
push
mov
or
iret
adc
outs
inc
lds
sbb
lods
cmp
leave
jp
pushf
pop
pop
mov
enter
dec
add
push
daa
stos
pushf
sbb
or
test
daa
stos
add
ins
cs
push
and
xor
push
(bad)
lock
push
push
add
jo
xchg
sbb
and
cmp
mov
sbb
inc
sub
bound
mov
sbb
add
lods
ret
shl
out
cwde
or
sub
inc
sbb
lock
outs
jnp
bound
pusha
jae
movs
pusha
les
inc
jo
fcom
push
das
jl
mov
jne
sti
pusha
or
and
std
std
xchg
sbb
enter
test
or
int
test
mov
iret
mov
loope
mov
inc
cmp
add
lea
ins
pop
iret
push
add
je
mov
fild
jo
and
mov
xor
or
mov
cwde
cmp
add
daa
push
add
pop
movs
xchg
jl
inc
js
in
xchg
mov
in
dec
add
cmp
pop
movs
inc
push
add
mov
or
adc
or
inc
lds
mov
mov
cmp
sbb
dec
mov
popa
pop
jne
jmp
sbb
push
dec
push
sbb
stc
push
xchg
ds
inc
xchg
jne
or
and
sub
and
pop
in
les
jmp
icebp
call
sub
test
and
inc
xor
loopne
pop
das
jno
ins
pop
loopne
jno
xor
pop
aam
popf
add
jnp
jae
sysret
fldenv
test
sub
jo
xlat
ret
fidivr
sbb
das
sub
push
add
cmp
outs
add
push
mov
mov
jb
or
sub
pop
sub
pop
sbb
ret
sbb
mov
(bad)
loopne
and
popa
aad
or
xchg
xor
add
cmp
test
test
(bad)
sbb
xchg
test
adc
in
sbb
push
push
adc
and
outs
bound
and
rol
enter
add
xchg
add
pusha
loopne
lahf
add
add
sub
sbb
and
pop
mov
sti
cmp
stos
and
adc
rcl
adc
icebp
xor
loopne
sbb
or
cmc
and
sbb
ret
aad
cmp
shl
mov
(bad)
test
test
les
addr16
jno
xchg
scas
mov
fisubr
adc
aaa
sbb
loopne
xor
sub
dec
sbb
push
pop
arpl
push
idiv
and
sbb
lods
or
sub
lds
fnstsw
xor
(bad)
dec
pop
jne
mov
call
pop
xchg
add
mov
xlat
pop
or
out
shr
jne
mov
or
lods
or
shl
xchg
xchg
push
push
inc
mov
jmp
daa
push
inc
push
dec
cwde
push
movs
jg
or
adc
add
je
mov
pusha
cmp
push
or
push
jne
add
sub
dec
and
scas
mov
inc
push
push
add
shl
pop
and
in
fistp
and
push
mov
dec
aaa
pop
sbb
jno
sbb
js
pop
jge
pop
sbb
pop
pop
mov
pusha
mov
outs
jno
xor
loopne
out
push
or
in
adc
and
or
stos
arpl
js
nop
sbb
out
arpl
pusha
xchg
pop
outs
push
dec
hlt
jp
test
inc
cmps
sub
sub
loope
push
adc
leave
inc
sbb
push
sub
inc
cmp
xchg
push
xor
xchg
(bad)
mov
push
inc
mov
mov
cmp
inc
fidiv
or
or
ficomp
movs
rcr
aad
lods
add
inc
or
xor
inc
lea
jae
adc
repnz
jle
inc
cmp
jo
adc
inc
push
sub
lods
popa
daa
sub
inc
jmp
add
push
aaa
and
add
nop/reserved
xor
pusha
and
cmc
dec
div
ror
push
ficomp
push
xchg
mov
sbb
pop
sub
cld
push
ror
mov
daa
xchg
or
inc
sbb
push
push
es
popa
mov
jp
add
xlat
std
ins
inc
call
fwait
sbb
cmp
loope
inc
pop
add
pop
in
or
outs
test
hlt
pop
and
mov
popf
mov
xchg
jecxz
sub
rol
popf
aaa
loopne
mov
and
sbb
fs
test
sbb
dec
ins
dec
mov
data16
jb
stos
mov
add
(bad)
push
xor
bound
and
rcr
jb
and
xor
in
fst
movs
push
add
imul
cs
pop
inc
jae
xchg
sub
retf
add
or
pop
repz
shl
push
sbb
ins
cmp
xor
inc
sbb
stos
loope
push
cmp
lods
inc
mov
sub
push
sbb
dec
sbb
jno
loopne
test
test
or
mov
cmp
in
add
popf
lods
popa
add
popa
sbb
lock
lds
pop
je
add
in
pusha
mov
mov
loop
outs
lea
mov
and
add
sub
dec
ja
jno
sar
loopne
out
push
sbb
pop
int3
pop
cmps
movs
inc
cmp
cmps
mov
loope
dec
addr16
jge
ss
loopne
loope
jge
aad
js
add
jnp
add
or
mov
mov
stos
adc
je
aas
dec
bswap
add
aaa
mov
loope
icebp
xor
mov
sbb
aaa
sbb
rcl
xor
cmp
imul
and
int3
mov
xchg
inc
or
push
in
push
sbb
xor
jmp
cmp
ret
or
leave
movs
pop
out
push
mov
in
imul
xchg
adc
or
shl
inc
pop
xchg
pop
imul
sub
fimul
ret
shr
inc
sub
scas
mov
or
outs
add
aad
cwde
pop
and
dec
mov
dec
aas
or
fistp
add
jo
xor
xor
lods
mov
sbb
inc
inc
bound
scas
and
fstp
loopne
nop
mov
jns
xor
outs
cmp
cmp
pop
mov
sbb
xor
sub
cmc
pusha
retf
add
das
sub
int3
sti
mov
popf
in
pop
lahf
popa
xor
cmp
xor
jge
cdq
rol
sbb
nop
imul
xchg
jns
cmp
adc
mov
cmc
cmp
loopne
pop
in
push
fld1
aad
sbb
jecxz
pushf
lahf
push
xor
adc
aaa
mov
and
jae
ret
rol
cmp
cmp
pusha
je
add
xor
xchg
cmp
inc
mov
add
sbb
adc
mov
retf
push
or
leave
jg
loop
mov
dec
sbb
jmp
dec
pushf
push
and
repnz
test
call
adc
arpl
sub
add
or
lods
mov
adc
pop
push
sbb
stos
push
popf
cmp
jnp
int3
mov
aas
dec
push
sbb
adc
jne
inc
push
popa
loope
push
or
call
cmps
push
jmp
adc
nop
jae
mov
push
mov
xchg
push
push
add
es
jmp
xchg
shr
jmp
(bad)
mov
gs
xchg
stos
movs
dec
pop
add
sbb
mov
or
scas
or
xchg
pop
icebp
push
xchg
push
outs
push
loopne
mov
push
bound
and
mov
jmp
pop
jo
xlat
pop
pop
sub
test
out
push
pop
adc
mov
fisubr
stos
sti
pop
stos
mov
fadd
shr
cmp
pop
jb
inc
push
pop
cdq
test
cmp
test
dec
adc
leave
jg
fwait
xchg
xchg
int
add
jns
cmp
jno
add
jle
ss
xor
inc
or
(bad)
js
inc
or
xchg
rcl
retf
push
cmp
sti
iret
loope
or
sub
test
and
push
retf
push
inc
jns
xor
sub
daa
js
enter
rcl
push
dec
sub
js
lahf
lods
cmps
icebp
inc
xchg
xchg
xor
xor
pop
adc
ror
sbb
add
bound
fst
jg
popa
push
mov
push
push
in
mov
add
imul
pop
sahf
jo
add
rol
cmp
mov
rcl
lea
mov
lds
mov
ins
add
in
jl
cmp
inc
movs
push
add
xchg
or
sub
rcr
stos
push
or
outs
xor
dec
and
rol
mov
in
sbb
test
test
and
xor
dec
adc
adc
push
jb
popf
inc
xlat
xor
push
popa
iret
inc
(bad)
daa
cmp
or
add
cdq
or
mov
mov
xchg
or
scas
xchg
out
mov
sbb
les
and
inc
popa
mov
xor
shl
push
rol
cmc
adc
and
add
pop
fldenv
xchg
pop
jl
xor
pop
inc
cmp
adc
cmp
push
push
(bad)
lds
inc
push
sbb
jo
lea
cdq
jb
pop
adc
iret
test
mov
or
mov
jne
push
add
ins
sahf
fs
add
retf
jnp
icebp
xchg
xchg
xor
sbb
fstp
sub
jnp
push
mov
and
sub
sub
push
mov
lds
nop
mov
sbb
repz
dec
sub
retf
lods
dec
in
sub
push
or
test
adc
in
inc
pop
jmp
and
pop
lods
pop
cmp
daa
outs
frstor
or
aas
add
adc
popa
adc
movs
jecxz
pop
aam
inc
sub
loopne
or
adc
xchg
xchg
pop
test
imul
and
and
mov
lock
mov
cmp
sbb
adc
and
rcr
push
leave
ret
les
js
and
fdivr
ficom
loopne
xchg
outs
xlat
dec
mov
test
ret
dec
fsubr
sbb
aam
pushf
sbb
and
fild
sub
neg
loope
add
test
sbb
or
pop
cmp
jnp
push
loopne
push
aaa
inc
psllw
sub
imul
or
add
pop
and
ror
pop
retf
mov
cmp
adc
shl
bound
jne
ins
lahf
sub
or
pop
push
mov
pop
nop
xor
jge
mov
rol
push
pop
sbb
pusha
mov
and
add
imul
(bad)
in
call
pop
add
sbb
cs
add
add
sbb
sahf
and
inc
add
in
out
jl
inc
mov
cmp
inc
mov
add
add
or
push
mov
mov
nop
dec
pop
mov
sub
push
pop
cmp
push
dec
jno
stc
adc
mov
lock
inc
or
js
pop
xor
or
enter
jno
mov
dec
dec
fiadd
aam
dec
jg
or
push
or
fld
pop
cmp
fnstsw
pop
push
cmp
addr16
test
add
ins
adc
dec
sbb
inc
push
inc
mov
jo
adc
xor
cmps
sbb
cmp
mov
ret
iret
or
cmc
sub
out
jne
add
push
iret
div
lods
out
or
pop
mov
mov
push
iret
xchg
inc
cmp
imul
xchg
adc
or
pusha
inc
(bad)
fcmovb
sub
add
push
nop
or
xchg
popf
pop
call
push
add
push
inc
push
out
jge
pop
or
jnp
pop
dec
pop
out
adc
call
sbb
add
inc
loope
mov
mov
add
add
mov
aaa
jae
sbb
cmp
mov
cmp
jecxz
test
lds
pop
push
mov
test
xchg
jne
stc
adc
rcl
xlat
mov
jae
lds
and
leave
and
inc
sbb
ret
dec
retf
imul
inc
add
or
test
cmp
test
xchg
jnp
and
push
adc
mov
aaa
aam
or
push
dec
sbb
aaa
xor
cmp
(bad)
mov
rol
inc
sbb
mov
ret
adc
adc
add
add
movs
mov
or
or
lods
rcr
and
daa
mov
sub
fldenv
or
push
in
adc
mov
sub
icebp
cmp
fdiv
and
mov
add
outs
out
loop
mov
mov
int
adc
or
cmp
(bad)
daa
sbb
inc
pop
pop
icebp
inc
mov
or
or
ss
xor
mov
xor
add
(bad)
rcr
jo
xor
lahf
pop
adc
fsub
addr16
mov
pop
xchg
push
xchg
data16
add
jne
pop
ret
loope
mov
ja
xor
mov
ror
and
and
loop
xlat
xchg
ret
rol
clc
mov
ret
and
sub
fst
or
aas
add
add
add
ret
inc
cmp
add
add
add
add
add
and
icebp
mov
lods
push
sub
jge
ja
loopne
mov
jne
fsubr
cmps
inc
pop
mov
rol
test
push
mov
adc
push
lea
sub
sbb
mov
pusha
lods
lahf
cmp
mov
dec
cmp
adc
lea
adc
movs
sub
adc
retf
xchg
sbb
rcr
or
rol
lds
jge
hlt
lods
push
pop
out
popa
jmp
rcl
sub
pop
loopne
jbe
pop
adc
mov
mov
mov
and
imul
jo
popa
ror
ror
mov
aaa
push
jp
or
xor
sbb
push
sub
jmp
imul
inc
call
add
mov
xchg
add
push
loope
pop
outs
arpl
cmp
xchg
xchg
or
scas
pop
or
push
jno
add
pop
dec
adc
test
sub
out
pop
pop
pushf
shr
test
test
add
add
loopne
jo
mov
mov
add
sbb
in
push
out
xor
sub
shr
rcr
add
sti
movs
add
pop
add
sbb
mov
hlt
pop
sti
jmp
xchg
icebp
push
push
out
add
inc
hlt
cmc
sbb
adc
ficom
bound
jp
test
and
iret
push
lods
mov
xor
push
stos
adc
pop
mov
pushf
add
sub
adc
leave
pop
loopne
xor
imul
fnsave
adc
or
sbb
imul
stc
push
rcl
lds
jno
xchg
popa
dec
fsub
sbb
xor
mov
mov
or
mov
into
push
loope
out
xor
and
lahf
jg
add
inc
movs
or
jo
inc
bound
inc
dec
lea
loopne
loopne
jne
aas
or
pop
sub
mov
push
xchg
mov
mov
(bad)
int
sub
(bad)
jb
test
rol
sub
pop
cmp
nop
xor
inc
jl
scas
sbb
mov
cmp
movs
ja
mov
aad
bound
inc
ret
push
add
sahf
dec
dec
mov
and
mov
sub
ds
stc
push
xchg
daa
pop
mov
mov
leave
loop
or
pop
sub
imul
fadd
loopne
sub
and
sbb
fsubr
daa
xchg
test
inc
mov
and
ins
pop
xor
jg
dec
mov
das
dec
sub
inc
into
xchg
or
and
inc
nop
jecxz
push
aad
xchg
retf
cs
ds
mov
push
cli
mov
and
test
pop
stos
sbb
int
jnp
mov
xchg
fnstcw
cmp
and
xor
dec
cdq
dec
xchg
mov
cs
or
adc
adc
and
int
daa
pop
popa
adc
shl
mov
push
int3
and
lds
jmp
lds
jo
adc
pop
out
pop
adc
sbb
sbb
lahf
jo
sub
push
loope
adc
xchg
and
cmp
pop
fistp
and
mov
iret
sbb
or
inc
adc
nop
jge
in
xlat
shl
stc
ficomp
fdivr
shl
adc
and
lods
loope
or
dec
or
dec
out
mov
fcmovbe
lea
pusha
jo
or
jge
and
mov
jns
dec
xchg
pop
lods
xchg
fnstcw
popa
cmp
cmc
mov
test
push
test
push
mov
push
dec
dec
xor
(bad)
aad
mov
pop
mov
adc
add
xor
bound
and
(bad)
and
xor
sahf
aaa
xorps
lods
xor
or
xor
leave
xchg
sub
sub
sub
dec
push
sbb
shl
pop
jecxz
jmp
sub
lods
adc
retf
adc
out
loope
loope
or
adc
mov
jo
stos
ja
adc
mul
mov
arpl
scas
imul
stos
movs
arpl
bound
sub
fistp
stos
cmp
movs
sbb
cmp
sbb
fisttp
(bad)
add
mov
or
and
and
mov
and
fxch
xor
add
pop
push
test
lods
or
jo
inc
outs
popf
cmps
ss
jae
mov
aad
add
sub
fwait
adc
call
mov
sbb
or
sti
sub
gs
cmp
pop
adc
loopne
xor
xor
sbb
loope
and
mov
push
adc
mov
sbb
sbb
adc
jno
or
jmp
adc
out
sbb
adc
in
pop
xor
rcl
jmp
mov
sub
fwait
dec
vpsrld
and
adc
fnstenv
inc
adc
out
lock
dec
push
mov
lock
imul
fwait
cmp
xchg
nop
sub
ret
stc
xchg
sbb
mov
lods
ins
retf
lods
adc
fwait
iret
out
ror
add
repz
and
in
xor
jno
inc
sbb
div
jo
sub
movs
sbb
mov
dec
inc
mov
push
jnp
inc
push
pinsrw
add
mov
mov
push
icebp
pop
(bad)
xor
jae
adc
mov
jo
std
xchg
(bad)
sbb
fisttp
ret
inc
mov
js
sar
(bad)
and
mov
jo
les
xlat
mov
add
mov
push
in
cmp
arpl
xor
(bad)
pusha
sbb
inc
or
add
ins
popf
or
fstp
rcr
sub
or
add
in
mov
xor
and
push
dec
add
xchg
mov
(bad)
into
add
sahf
jp
jo
xor
jo
inc
daa
xchg
das
arpl
push
out
and
push
out
rcl
(bad)
(bad)
cmp
lahf
mov
in
(bad)
xchg
push
xlat
inc
sbb
fs
mov
xchg
add
push
arpl
ins
ins
inc
popa
jb
pop
or
push
jmp
je
arpl
or
dec
jb
sbb
call
outs
gs
add
(bad)
jmp
outs
ins
xor
gs
add
add
add
push
dec
gs
push
ins
adc
or
ins
or
jbe
mov
dec
jne
xchg
pop
push
bound
outs
nop
mov
add
std
imul
outs
inc
ds
outs
adc
pop
inc
addr16
gs
fimul
sbb
fnstcw
clc
adc
inc
popa
jo
pop
adc
aas
scas
add
cmp
xor
pusha
loop
mov
stc
es
fisttp
mov
mov
gs
or
jo
pop
dec
outs
inc
mov
fadd
cmp
and
and
jae
js
and
adc
cmp
adc
imul
xchg
pop
mov
shr
retf
add
pop
inc
jo
leave
jmp
cmp
jle
adc
addr16
dec
data16
dec
outs
sbb
or
lock
imul
dec
ins
les
or
xor
cdq
or
iret
xor
add
add
sar
or
mov
(bad)
aam
pusha
jb
or
dec
sbb
push
adc
popf
cs
and
mov
jne
sbb
int
sbb
sbb
pop
clc
sub
pop
inc
outs
pusha
adc
retf
or
inc
outs
in
push
or
mov
outs
jne
and
shl
and
push
inc
jne
ins
push
adc
cmp
xchg
cmp
sbb
jg
mov
loopne
mov
sub
shl
cli
inc
sub
sbb
mov
cmp
adc
cmp
or
cmovae
inc
mov
cmps
pop
ror
dec
add
inc
mov
xchg
add
sbb
(bad)
mov
and
push
mov
mov
push
or
imul
adc
add
sbb
(bad)
sbb
add
stc
retf
xchg
sbb
inc
nop
outs
push
imul
movs
hlt
mov
mov
inc
and
mov
es
(bad)
test
jae
lea
pop
ret
leave
xchg
sbb
sbb
mov
mov
das
mov
mul
cmp
and
cmp
je
and
das
fs
popa
jae
pusha
pusha
ss
cmp
mov
jae
cs
cs
ds
std
and
shl
sti
outs
iret
retf
pop
fdivr
ds
outs
and
scas
push
cs
push
mov
cmove
in
out
clc
inc
inc
push
dec
push
push
dec
inc
push
push
inc
push
or
outs
ins
outs
out
outs
xor
pop
or
ins
nop
sub
push
gs
or
push
shr
lahf
cmc
or
dec
popa
sub
fsub
push
jns
xor
dec
mov
cmps
mov
pop
push
stos
imul
push
dec
popa
ja
adc
or
inc
or
add
or
(bad)
int3
or
add
out
add
sub
mov
fsubp
cmp
or
or
pop
push
xchg
stos
stos
adc
inc
pop
loop
and
add
cmp
popf
xchg
push
or
rol
dec
mov
or
adc
and
cli
inc
pop
std
iret
adc
sar
fld
add
add
xchg
fld
fldcw
sub
xchg
and
stc
push
mov
jno
xchg
add
and
pushf
push
sub
pop
loope
pop
jmp
jmp
jne
xor
test
lea
outs
data16
adc
mov
jns
mov
adc
adc
add
sbb
xor
rol
stos
sar
and
lock
dec
retf
jo
cmps
add
fs
jb
sbb
leave
xor
fwait
xor
adc
mov
pop
loopne
ret
push
sub
and
add
fcomp
cmp
test
fdivr
xchg
outs
sahf
push
out
push
push
inc
push
loopne
repnz
jecxz
test
cvtps2pi
pop
add
lds
ins
addr16
pop
movs
inc
pop
push
xchg
or
add
cmp
dec
fld
jge
pop
in
xor
je
mov
or
loopne
push
inc
loop
jo
pop
out
jle
inc
dec
or
jbe
sub
call
add
das
or
in
fsubrp
les
pop
adc
add
push
test
add
cmp
add
mov
adc
pop
arpl
or
add
sub
rcr
arpl
xchg
sbb
aam
aad
dec
mov
iret
add
pop
jae
mov
jge
cmps
aad
ins
fild
add
sbb
mov
add
bound
test
push
pop
sbb
cmps
mov
test
push
pop
sbb
mov
jb
xchg
adc
mov
fstp
rol
xchg
pop
pop
mov
pop
sbb
dec
push
pop
mov
ins
mov
sbb
ss
pop
sbb
add
xlat
add
pop
sbb
dec
xlat
add
fild
imul
xchg
and
push
adc
xchg
or
add
or
rcr
dec
dec
mov
pop
fild
gs
inc
mov
fcomp
sbb
sbb
sbb
or
arpl
or
ss
fadd
popa
push
sbb
loopne
or
mov
les
or
add
movs
ins
and
sbb
add
mov
sub
sbb
or
mov
add
arpl
xor
add
mov
mov
dec
sbb
add
retf
mov
dec
adc
shl
push
and
inc
adc
mov
retf
add
xor
fiadd
fild
dec
repz
and
xchg
pusha
fld
sbb
dec
rcl
ins
inc
aaa
add
dec
cmp
aaa
add
sbb
add
dec
cmp
imul
shl
sub
sub
test
pop
xor
sub
xor
dec
dec
add
push
sub
dec
fist
mov
xor
ins
in
push
add
add
enter
pop
add
add
add
inc
or
dec
pop
xchg
test
sub
cwde
inc
add
icebp
or
add
or
aas
dec
arpl
sub
xchg
test
add
dec
xchg
movs
sub
nop
sbb
test
sbb
rcl
add
mov
push
sbb
rol
add
mov
test
sbb
add
mov
add
ret
retf
adc
adc
dec
dec
sbb
add
add
fild
inc
dec
iret
pop
dec
xor
adc
xchg
and
pop
mov
ins
dec
dec
sbb
ins
imul
add
retf
add
aad
add
push
mov
adc
mov
mov
inc
add
add
sub
aas
xor
movs
add
dec
jo
pop
out
adc
aas
add
aaa
and
or
pop
sub
lea
dec
ins
adc
mov
sub
inc
inc
or
push
dec
push
fcmovnbe
ret
aas
sbb
dec
adc
loopne
adc
sub
sub
xor
or
dec
adc
xchg
push
xor
lods
add
sub
imul
aaa
loopne
jae
and
sub
push
das
xor
and
daa
sbb
adc
sub
xor
add
add
inc
fisub
daa
jne
adc
sub
ins
sub
push
inc
dec
push
jae
mov
push
or
add
dec
push
and
daa
dec
push
and
and
sub
or
dec
jne
ret
pop
add
sbb
or
add
fmul
pop
add
sbb
pop
pop
add
pusha
pop
pop
mov
add
sub
rcr
dec
ins
dec
pop
adc
add
add
mov
pop
add
add
add
and
mov
ins
adc
or
ins
sub
das
pop
add
or
aas
add
imul
inc
(bad)
fldenv
xchg
push
xchg
xor
xchg
fcom
imul
add
and
pop
adc
or
cmps
push
ss
fisub
sub
add
and
sub
inc
jbe
add
push
sbb
and
push
dec
push
sub
shl
nop
or
mov
sbb
inc
and
inc
push
mov
xchg
(bad)
aas
les
jbe
add
cmps
movs
add
add
add
adc
mov
pop
daa
cmp
cmp
inc
cwde
add
inc
add
add
cmp
dec
dec
add
ret
add
cs
rol
cmp
cmp
xor
aam
ficomp
add
xor
add
arpl
mov
add
xor
and
sub
cmp
movs
and
sub
das
adc
add
in
pop
add
pop
sub
or
outs
and
test
or
add
mov
and
jo
cmp
jbe
and
adc
add
ins
sub
sub
add
mov
cmp
or
add
lea
dec
add
or
imul
add
loop
ins
sbb
cmp
xor
xor
mov
lea
das
inc
add
inc
or
sti
xor
retf
mov
das
adc
retf
push
xchg
mov
ins
sbb
dec
add
or
dec
call
add
adc
add
dec
add
add
inc
add
mov
mov
cmp
add
sub
cmp
rol
inc
add
retf
(bad)
das
adc
dec
xchg
ss
cmp
xchg
xor
add
xor
ins
ins
xor
cmp
xchg
mov
dec
aaa
add
add
cmp
mov
add
or
pusha
aas
push
dec
adc
fisub
or
push
ins
inc
ror
or
push
push
cmp
or
cmp
fldcw
dec
mov
dec
add
add
mov
jo
dec
add
adc
add
add
pop
pop
int
and
pop
push
pop
inc
adc
dec
add
add
movs
lods
or
add
mov
arpl
push
shr
sub
add
add
pop
sub
cmp
dec
mov
ret
sgdtd
mov
add
add
add
push
add
sub
add
stos
sub
dec
js
sbb
dec
(bad)
jns
dec
and
inc
inc
jo
je
jo
mov
je
test
js
and
dec
and
mov
ins
xchg
inc
pop
and
dec
xchg
or
add
dec
add
dec
movs
and
dec
or
or
jb
aas
sbb
rol
add
sbb
or
or
and
mov
nop
imul
lods
sub
imul
imul
gs
jae
push
add
pop
test
mov
dec
outs
ins
push
rcr
dec
ins
sub
dec
inc
add
dec
test
mov
imul
imul
addr16
dec
adc
fmul
dec
push
dec
arpl
arpl
or
push
ins
sub
ror
lea
mov
add
sub
dec
inc
inc
or
ins
ins
pop
dec
dec
nop
pusha
arpl
pop
dec
add
push
dec
fcomp
sub
push
adc
les
push
push
add
ss
dec
or
mov
inc
add
fcomp
dec
inc
ins
ins
adc
add
aas
dec
inc
lock
add
or
dec
ss
arpl
sbb
dec
cmp
xor
fcomp
cmp
aad
push
adc
aaa
xchg
and
dec
inc
add
movs
ss
mov
inc
xor
pop
dec
aas
add
push
xor
dec
push
or
aas
xor
add
cmp
push
dec
cmp
or
dec
dec
add
arpl
dec
dec
add
fadd
cmp
push
and
or
dec
or
adc
arpl
xor
bound
mov
dec
das
push
add
or
adc
sub
or
popa
mov
add
dec
or
or
daa
dec
sub
adc
add
add
shl
xchg
or
mov
add
dec
push
add
adc
bound
and
add
dec
rcr
add
xchg
ss
sbb
adc
add
xchg
test
add
retf
mov
dec
add
dec
inc
xor
xor
add
pusha
fild
dec
dec
add
xchg
or
sbb
add
inc
add
add
add
pusha
or
arpl
add
inc
add
xor
or
push
arpl
add
mov
add
adc
cmp
or
inc
inc
push
push
push
xor
xor
sub
add
call
xor
inc
and
inc
xchg
and
adc
outs
push
pop
or
push
inc
xchg
add
push
adc
cmp
dec
mov
gs
movhlps
push
cmp
aas
cld
and
and
pop
mov
dec
or
outs
dec
add
add
inc
pop
ins
test
dec
cmp
out
push
mov
dec
and
push
xor
jbe
jo
sbb
or
dec
adc
add
sub
fmul
add
ss
cld
sbb
adc
add
or
or
mov
push
ss
arpl
xor
push
dec
into
add
push
sbb
out
test
loop
or
and
xchg
push
adc
ror
push
xor
cmp
xor
fs
sub
ds
gs
test
je
jg
mov
mov
mov
push
xor
and
adc
test
xchg
pop
ror
add
mov
add
cmp
or
call
sahf
and
pop
push
or
push
xchg
inc
adc
cmps
add
repnz
inc
mov
sysret
dec
ror
xchg
and
sbb
sbb
inc
es
rcl
push
call
add
dec
and
jo
add
sub
and
mov
dec
jle
xor
sub
dec
cmp
shr
dec
add
dec
mov
repnz
add
or
outs
or
or
or
add
and
push
dec
xor
add
push
leave
adc
push
add
stc
dec
push
add
dec
add
pop
dec
ror
add
add
add
add
adc
and
in
xor
adc
and
and
push
test
push
and
shl
push
inc
add
cmp
sbb
push
retf
add
dec
and
adc
inc
cs
mov
or
dec
push
out
dec
adc
nop
sub
dec
push
loopne
scas
pusha
dec
xor
add
loopne
xchg
dec
push
and
mov
sub
jo
push
add
or
in
cmps
cmp
movs
sti
or
push
adc
add
adc
add
add
aaa
les
add
push
mov
or
inc
or
dec
jae
popf
add
adc
dec
add
mov
xor
mov
add
adc
add
pusha
mov
add
arpl
fadd
sbb
push
add
add
stos
pusha
dec
add
push
add
add
adc
add
mov
push
adc
dec
push
je
gs
push
or
arpl
dec
gs
cld
or
cli
push
mov
dec
imul
cld
push
dec
popa
bound
ja
outs
mov
push
arpl
gs
inc
ins
gs
add
add
mov
mov
push
imul
jns
and
inc
popa
jo
imul
adc
mov
xchg
shl
mov
shl
jae
ins
data16
adc
adc
pushf
aas
and
sti
iret
mov
and
adc
mov
and
inc
push
push
dec
dec
inc
inc
push
dec
dec
dec
and
cs
push
(bad)
fcos
inc
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
ins
outs
jb
or
ins
das
js
add
ja
gs
or
cmp
or
dec
popa
call
popa
outs
popa
jae
mov
push
push
data16
test
push
retf
sbb
sub
or
push
movs
fs
jb
or
and
cmp
xor
inc
repz
add
mov
into
inc
ret
sub
add
sbb
inc
add
rcr
dec
xor
or
dec
adc
jo
push
mov
mov
sbb
add
xchg
mov
xor
sub
test
daa
leave
xchg
sbb
dec
daa
add
leave
xchg
pop
add
stos
sbb
add
inc
xchg
js
int3
(bad)
(bad)
adc
ins
gs
push
imul
jb
sbb
ins
ins
outs
arpl
ins
jae
jb
outs
push
das
push
jne
jg
in
gs
sbb
jb
popa
outs
arpl
outs
jne
je
(bad)
fwait
sbb
inc
gs
imul
test
dec
add
shl
jae
pop
leave
mov
jo
push
imul
mov
imul
arpl
mov
popa
and
jne
je
int3
into
or
dec
dec
lock
push
jae
xor
add
std
out
nop
shr
inc
push
outs
dec
push
imul
mov
jae
mov
or
outs
je
jne
jo
inc
push
daa
in
add
sbb
ror
jb
jns
rcr
inc
js
push
je
pop
jo
fild
jb
inc
fs
pop
add
fs
or
cmp
inc
imul
pop
mov
and
iret
cmp
or
jb
pop
push
outs
and
add
dec
in
pop
out
nop
pop
push
je
cmp
(bad)
or
fcom
imul
jo
pop
das
daa
sbb
cwde
shl
pop
xor
shl
and
ins
xchg
inc
adc
repnz
xor
sbb
outs
neg
(bad)
aam
lods
jbe
ret
dec
cmp
inc
push
ds
xor
jp
add
aam
xchg
jl
inc
iret
shl
inc
cmp
xchg
cwde
sahf
push
imul
push
outs
cmp
push
shl
frstor
sbb
cmp
adc
outs
fidivr
sbb
cmps
leave
mov
mov
(bad)
dec
stc
mov
jg
inc
mov
mov
xor
xor
sub
out
ins
test
pop
cmc
push
sbb
and
and
pop
mov
and
or
inc
in
sbb
cmp
bound
sub
sub
jae
out
pop
xchg
mov
pop
sbb
mov
xchg
sahf
push
stos
adc
jmp
mov
adc
sub
jns
call
std
push
jne
xchg
add
push
push
imul
data16
sbb
es
xchg
loopne
push
xchg
add
outs
je
cmp
add
popa
pop
inc
jbe
into
ins
adc
imul
jne
sbb
and
outs
adc
sbb
jns
jmp
or
bound
xor
jb
test
enter
inc
sbb
mov
and
inc
pusha
ss
imul
xlat
xchg
mov
cmps
cmc
dec
jle
retf
adc
mov
outs
mov
mov
gs
pop
pop
inc
or
mov
xchg
js
sbb
cmps
sub
fwait
sbb
pop
(bad)
pop
mov
xor
mov
xor
(bad)
pop
js
int3
push
xchg
xchg
jb
push
and
xchg
add
imul
pop
push
addr16
popa
sub
lods
lea
test
sub
mov
sbb
or
xchg
push
push
xlat
sbb
jae
cmc
fwait
pop
arpl
pop
mov
scas
addr16
dec
mov
aas
adc
or
pop
out
sbb
sbb
xchg
sub
xchg
cmp
rcl
pop
add
inc
sbb
enter
call
dec
and
sbb
adc
mov
clc
pop
popa
bound
inc
and
jo
or
add
push
fs
sti
daa
dec
ins
inc
pusha
and
arpl
adc
dec
adc
push
aas
mov
sbb
pop
call
dec
jo
in
int3
sub
aaa
dec
and
(bad)
sbb
or
cmp
xlat
mov
test
dec
adc
or
sbb
mov
mov
cmp
xchg
outs
(bad)
cmc
shr
adc
inc
es
push
jle
push
popa
xchg
adc
and
mov
sar
test
repz
sbb
sbb
xchg
pop
out
inc
adc
daa
pop
retf
pop
mov
dec
add
sub
pop
addr16
gs
push
mov
fld
das
mov
adc
sbb
mov
pop
jae
push
sbb
rcl
aaa
jae
xor
sar
fimul
sub
ins
and
jo
pop
fisttp
jne
inc
arpl
js
test
lods
pop
cs
je
ins
sti
push
clc
sub
add
dec
push
int
xor
rcr
imul
add
inc
mov
loopne
add
xor
push
mov
lahf
fistp
or
push
inc
pop
sub
inc
call
push
fcmovnu
js
or
maxps
in
gs
fimul
loopne
pop
stos
aam
shr
sub
push
in
push
sub
xchg
rcr
jmp
xor
dec
(bad)
out
add
stos
dec
inc
outs
adc
xchg
mov
test
sbb
and
inc
fsub
das
sub
cmp
hlt
fadd
daa
in
sub
sub
push
out
or
das
and
sub
sub
and
xchg
fcom
mov
lea
cdq
add
sbb
test
push
xchg
push
sbb
sbb
test
pop
fstp
and
add
fsubr
sahf
push
outs
dec
xlat
xchg
inc
dec
inc
push
fild
ins
xor
add
dec
jb
hlt
pop
xchg
pop
fwait
add
jo
add
mov
mov
sub
sub
jg
push
dec
push
xor
push
imul
mov
sub
mov
jb
out
xchg
inc
enter
sbb
push
pusha
push
(bad)
push
stos
je
stos
pop
and
sbb
pushw
cmp
push
mov
and
add
sub
jne
xchg
outs
aas
push
mov
add
cmp
les
dec
shr
outs
adc
jmp
jmp
push
and
pop
or
and
mov
out
bound
or
enter
pop
add
ins
push
cmp
jne
push
pop
popf
lds
sub
pop
inc
push
push
arpl
and
pop
ins
or
xor
adc
sub
fcomp
mov
outs
dec
lock
or
push
push
outs
inc
outs
or
int
rcl
gs
dec
xchg
mov
sbb
test
xchg
add
cmp
data16
mov
mov
retf
iret
mov
xchg
dec
jbe
(bad)
popa
jo
cs
cmp
adc
jno
pop
outs
add
mov
in
cmp
xchg
mov
mov
add
in
mov
jp
loop
xor
sbb
fimul
nop
cmp
xchg
sbb
inc
pop
cmp
test
inc
pop
nop
js
push
jmp
xor
sbb
sbb
retf
mov
fs
ret
test
int
sbb
jo
data16
aad
dec
data16
or
pop
dec
sub
dec
jae
ret
inc
ss
sub
les
pop
or
(bad)
dec
daa
jnp
push
jo
outs
cmp
push
sub
jmp
out
xchg
inc
jb
ror
into
xchg
or
mov
add
dec
mov
push
packsswb
pop
dec
mov
push
outs
arpl
push
push
aaa
sub
jbe
adc
dec
pusha
sub
push
dec
inc
jne
push
add
push
dec
inc
push
rol
adc
retf
and
pop
les
and
shr
push
std
dec
and
shr
jno
inc
push
js
fs
xor
add
data16
adc
sub
daa
loop
sub
dec
or
mov
sub
adc
int
jg
dec
popa
arpl
rcl
loop
popa
sub
out
adc
leave
les
daa
dec
fld
and
cmp
dec
and
lock
sbb
ins
sbb
sbb
and
shl
adc
jae
les
loopne
das
xor
cmc
and
fmul
retf
jle
nop
dec
push
cmc
and
mov
clc
push
push
mov
and
push
or
ror
jmp
jae
ds
and
pop
add
cmp
sbb
pop
mov
call
pop
jle
ins
jo
pop
mov
add
and
in
mov
mov
stc
jne
in
mov
call
lea
arpl
push
int3
add
jo
jo
cmp
pusha
push
rol
sbb
add
ret
test
mov
add
sub
mov
sbb
je
mov
inc
mov
and
scas
adc
push
mov
dec
push
int
sub
outs
pop
(bad)
cmp
imul
ja
pop
loopne
aad
lea
xor
test
push
dec
and
and
pop
and
addr16
out
arpl
mov
sub
jae
jmp
mov
bound
fs
popa
jo
inc
xchg
cmp
lods
push
lods
xor
and
push
lock
push
imul
(bad)
push
mov
pop
fs
outs
push
lods
or
and
pop
cmps
sbb
in
mov
adc
test
jae
rol
retf
xor
inc
or
push
clc
nop
shl
ins
mov
pop
mov
jnp
rcl
add
sbb
fadd
ss
icebp
adc
push
jmp
mov
mov
xor
and
add
cmp
cmp
push
and
push
retf
or
mov
sbb
xor
sub
pushf
add
cld
cld
or
mov
pop
mov
dec
add
fidiv
shl
aam
loopne
xor
int3
movs
mov
into
pushf
pop
sbb
gs
dec
adc
fadd
mov
xchg
test
(bad)
and
jbe
mov
ficom
jmp
push
adc
test
push
jno
arpl
add
mov
and
or
dec
push
cmps
(bad)
adc
stos
ins
xor
bound
daa
mov
sbb
add
and
dec
fs
mov
pop
retf
(bad)
and
jne
push
fcom
pop
loopne
pop
imul
fs
neg
arpl
mov
lods
loopne
push
sti
lahf
mov
dec
xchg
pop
pusha
sub
out
sbb
and
mov
inc
sbb
sar
and
daa
ja
sub
movs
ret
fwait
rcl
mov
sahf
sub
and
xor
mov
out
aaa
sub
inc
ins
addr16
in
mov
je
push
imul
push
cmc
push
test
dec
add
leave
sbb
leave
and
sbb
sbb
arpl
loopne
xchg
sbb
mov
and
push
add
pop
ss
sub
out
icebp
sbb
dec
bound
push
arpl
push
sub
pushf
test
mov
and
sub
mov
sbb
adc
mov
sbb
push
ins
test
mov
or
pusha
sbb
ret
adc
test
sub
adc
adc
xchg
shl
and
shr
retf
jb
add
mov
and
js
pop
jecxz
xchg
ins
fist
ins
sbb
ret
push
adc
repz
dec
and
add
cmps
data16
mov
mov
xchg
addr16
add
and
arpl
jmp
outs
enter
fst
sbb
outs
shl
lods
(bad)
add
lock
jo
gs
data16
es
loope
dec
jo
pop
test
or
pop
or
ins
and
popa
mov
into
mov
mov
push
std
pop
arpl
mov
adc
lods
add
inc
or
clc
dec
inc
or
das
pop
je
push
adc
dec
cmp
neg
movs
lods
movs
sbb
sbb
push
in
add
cmps
dec
cmp
retf
jp
nop
or
mov
mov
repnz
mov
xor
xchg
jno
and
pusha
mov
push
outs
test
sbb
jb
ss
pop
push
scas
push
sub
ret
push
and
ins
dec
lahf
daa
popa
mov
das
xor
rol
mov
sub
and
push
jb
mov
cwde
or
sbb
add
nop
cwde
mov
or
dec
fild
mov
add
pop
in
les
add
add
lods
xchg
add
push
dec
add
add
fcomip
mov
(bad)
or
add
add
inc
add
out
mov
pusha
push
sub
add
idiv
cmp
lgdtd
push
add
xor
out
out
cmp
push
pop
packuswb
xorps
add
pusha
bsf
mov
fbstp
push
and
add
fistp
dec
imul
add
stos
scas
adc
adc
push
mov
cs
dec
xchg
cld
sbb
jnp
pop
and
fcom
sub
das
int
mov
push
pop
add
mov
push
cld
(bad)
or
push
jle
in
push
dec
dec
or
bound
inc
and
in
xor
add
out
or
push
mov
pop
inc
add
adc
fs
mov
loopne
(bad)
(bad)
adc
xchg
lahf
out
shl
cmp
inc
cs
sbb
add
mov
add
add
pop
mov
pop
push
sub
(bad)
push
dec
in
cmp
outs
and
mov
hlt
mov
aad
adc
push
dec
xchg
inc
add
add
add
add
add
add
inc
xchg
aaa
add
gs
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
loopne
jge
and
jge
xor
ja
