dec
or
add
add
add
add
add
add
add
add
or
add
add
add
adc
or
push
and
add
add
add
(bad)
cld
pop
add
jnp
in
loop
cmp
or
xchg
aad
push
shl
xchg
jbe
outs
mov
xor
mov
cmps
or
xchg
jns
ins
add
ret
out
sub
push
dec
shr
dec
sar
push
mov
xor
add
sbb
mov
ja
push
inc
call
mov
(bad)
jecxz
inc
fdiv
pushf
push
adc
xchg
push
jmp
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
inc
add
add
push
je
imul
add
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
fadd
add
add
add
xchg
or
add
add
dec
add
add
or
add
add
xchg
add
daa
fwait
or
add
add
mov
sahf
or
add
add
icebp
add
add
mov
add
sub
add
fadd
or
add
add
popa
add
add
les
add
add
add
or
add
add
into
add
add
add
add
add
jnp
xor
xor
sub
sub
sub
sub
xor
xor
popa
ss
outs
fs
gs
cs
jae
jne
arpl
add
imul
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
jo
test
xor
popf
xchg
into
loop
jecxz
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
pop
jb
add
add
add
add
add
add
add
add
and
or
mov
inc
jle
dec
cmp
sbb
(bad)
mov
cmp
pop
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
adc
mov
call
push
sahf
clc
leave
imul
sbb
das
or
call
or
pushf
call
or
stos
test
js
push
mov
mov
sbb
jle
push
js
fldenv
add
outs
test
cmc
mov
fcom
jle
inc
cmp
sbb
jle
nop
pop
dec
jle
inc
cmp
sbb
jle
dec
sub
sbb
jle
dec
outs
repz
xchg
jle
dec
std
dec
jle
dec
cmp
sbb
outs
mov
sub
or
jle
dec
cmp
or
jle
dec
cmp
sbb
repnz
mov
(bad)
ja
(bad)
imul
xchg
jle
dec
cmp
sbb
jle
dec
popf
dec
inc
rol
jmp
jmp
mov
cmp
sbb
jle
dec
outs
test
test
test
test
jmp
jle
dec
cmp
dec
inc
add
jo
or
loope
sbb
adc
cmp
sbb
jle
dec
test
cmp
xchg
dec
jle
inc
cmp
sbb
jle
dec
cmp
sbb
push
shr
cwde
call
jle
dec
popf
dec
jle
inc
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
mov
mov
xchg
mov
cmp
adc
cmp
sbb
pop
test
test
test
test
test
push
mov
xchg
mov
mov
xchg
xor
xlat
cmps
call
mov
cmp
inc
dec
add
adc
scas
adc
jmp
xor
cmp
mov
dec
fild
mov
ins
cli
sbb
pop
cmp
sbb
rcr
sti
rol
cwde
cdq
jmp
fwait
pop
cmp
or
cmp
sbb
lock
out
xchg
jg
dec
sub
jge
and
inc
je
dec
push
jecxz
jmp
inc
dec
cmp
cmp
test
test
push
mov
test
std
mov
mov
jmp
mov
sbb
xchg
push
jle
dec
xor
cwde
in
lods
add
outs
mov
cmp
inc
outs
mov
sub
sbb
das
pop
cmp
mov
or
idiv
push
call
inc
sub
sbb
cmps
inc
inc
jle
adc
repnz
ror
cmp
mov
sbb
mov
mov
sbb
xchg
dec
cmp
mov
dec
or
mov
cmp
cwde
out
lods
inc
push
jp
push
sbb
inc
push
jp
dec
cmp
(bad)
js
cmp
jg
dec
pusha
in
out
xchg
sbb
jae
pop
cmp
call
inc
mov
sbb
ret
test
js
jmp
movs
dec
cmp
lea
lods
xor
test
cmc
popf
xchg
inc
je
(bad)
aas
fst
jle
fs
ror
mov
sbb
adc
aaa
dec
sub
test
and
mov
or
out
mov
shl
clc
mov
outs
sub
mov
mov
sub
mov
movs
fldcw
cmp
(bad)
fwait
jecxz
sub
push
cmps
dec
xor
daa
or
out
nop
shl
sbb
jae
sar
ja
ret
mov
mov
cmp
aam
xor
xchg
clc
(bad)
aam
sub
fisub
mov
imul
inc
jle
dec
cmp
pop
add
repnz
sub
mov
jle
test
sbb
jle
dec
push
test
jle
dec
jmp
mov
lea
cmp
int
mov
sbb
mov
test
mov
pop
(bad)
mov
jmp
push
call
std
sub
jno
dec
outs
mov
in
cmps
cdq
add
and
ror
int3
mov
jns
and
fisubr
add
clc
jmp
push
mov
rcr
popf
mov
lds
mov
arpl
mov
xchg
cwde
int
xor
jae
push
js
sbb
out
loope
or
or
xor
mov
arpl
inc
adc
push
sbb
shl
daa
rcr
out
mov
fwait
pop
dec
dec
pop
into
pusha
retf
in
or
(bad)
fnstenv
cs
sub
int
rol
sub
(bad)
xor
iret
jg
int
mov
add
lods
fsub
cmps
je
push
and
inc
jne
mov
xchg
xor
sbb
(bad)
bound
jl
adc
lods
push
jle
pop
fld
rcr
mov
ret
cdq
inc
jle
inc
arpl
imul
dec
leave
out
pop
mov
int
gs
push
rcr
(bad)
(bad)
or
dec
jecxz
mov
dec
sub
shl
jns
(bad)
cmc
cmp
sti
outs
cmp
xlat
xor
lods
xchg
scas
jp
adc
jecxz
xor
push
outs
iret
ja
mov
cli
ror
and
or
mul
jmp
in
xor
rol
loopne
jnp
mov
pop
fsubr
ins
subps
mov
or
push
sub
inc
dec
push
imul
js
outs
arpl
shl
push
dec
mov
and
mov
xlat
out
xchg
pop
dec
xchg
jnp
jo
dec
push
cmp
adc
jne
push
out
shl
dec
pusha
pushf
imul
dec
inc
inc
adc
shl
mov
call
sub
dec
cmp
cmp
imul
repnz
sub
jecxz
lock
outs
mov
xor
in
inc
jnp
fcomp
and
movs
xor
or
ins
call
add
sbb
xchg
fs
ret
and
mov
mov
inc
adc
psubsb
rol
retf
inc
pusha
in
add
cli
sti
sar
gs
sahf
js
inc
add
mov
mov
mov
jle
lea
lock
in
and
scas
mov
or
add
je
push
pop
pop
cdq
dec
lock
adc
mov
jg
(bad)
sti
add
or
arpl
(bad)
xchg
add
mov
adc
int3
xor
ret
aam
mov
data16
pop
mov
dec
pop
pop
adc
sub
mov
push
pop
fsub
loop
pop
add
stos
push
push
cwde
mov
jbe
ds
cmp
aas
cmp
mov
out
(bad)
scas
test
sbb
or
in
cmp
jns
cdq
sub
fidivr
inc
les
icebp
les
sub
inc
push
mov
xor
mov
xchg
test
repnz
mov
push
push
or
ins
je
lea
add
adc
inc
xor
daa
dec
aaa
into
push
clc
mov
loope
or
cmps
cmp
lea
je
xor
push
dec
xor
sub
adc
sub
into
xchg
cmp
inc
ror
or
add
jnp
xchg
mov
fild
push
mov
sub
cwde
add
xchg
xchg
mov
xor
push
or
daa
in
cs
add
lahf
pop
mov
out
push
in
inc
fisub
inc
cmp
mov
mov
sbb
ficom
pop
or
push
das
or
or
movs
mov
cs
and
out
pushf
sbb
mov
xchg
jmp
sub
push
or
fdivrp
int3
sbb
mov
int
jne
mul
cmp
aaa
in
in
bound
mov
ins
inc
mov
xchg
mov
inc
mov
ins
xchg
in
int3
arpl
inc
mov
scas
mov
ret
lea
xchg
push
push
mov
ret
push
fwait
pop
loopne
ja
mov
mov
sub
pop
test
mov
fwait
retf
out
rcr
and
pop
and
jmp
lock
sub
in
hlt
ret
add
test
sbb
or
sub
rcr
mov
es
jmp
cdq
stos
inc
pop
aam
mov
mov
fmul
mov
or
xor
(bad)
out
cmps
adc
outs
sbb
fndisi(8087
neg
mov
jmp
movs
fimul
(bad)
pushfw
out
ins
xchg
out
xor
mov
arpl
xor
adc
pusha
(bad)
jmp
xor
lea
sub
nop
sbb
scas
dec
sub
and
cmp
adc
stos
dec
dec
xchg
and
inc
shr
mov
push
push
pop
push
fcmovbe
pop
mov
loop
stc
clc
les
data16
pop
fstp
movs
dec
arpl
fdivr
jg
jg
inc
cmp
fsubr
mov
iret
fldenv
sub
jb
add
push
nop
js
mov
mov
imul
jo
jg
jno
jmp
fist
and
pop
fadd
cmp
jle
mov
mov
mov
cmp
(bad)
retf
daa
add
adc
bound
jbe
dec
mov
outs
jnp
sbb
dec
scas
pop
or
xor
mov
lds
iret
cmp
neg
loopne
fidivr
mov
jne
aaa
push
popa
pop
jae
mov
or
cmp
mov
int3
ins
mov
xchg
(bad)
retf
push
leave
imul
sub
out
push
add
mov
push
fsubr
inc
inc
add
addr16
dec
push
inc
in
cmp
pop
in
mov
add
mov
inc
scas
(bad)
and
xchg
cmp
jmp
cmp
dec
stc
mov
(bad)
jp
sti
pop
imul
retf
out
and
mov
push
test
inc
mov
sbb
js
fcom
cmp
sbb
mov
dec
mov
and
in
mov
dec
loop
mov
or
fucomi
xchg
inc
stos
retf
inc
jecxz
fs
rol
jns
mov
idiv
xor
test
sbb
mov
xchg
mov
sti
out
mov
loope
dec
and
cld
cdq
cmps
repz
xor
in
adc
sahf
dec
clc
inc
cld
test
inc
adc
dec
movs
test
test
call
(bad)
out
fistp
adc
aad
inc
mov
mov
std
pop
push
dec
sub
fadd
ins
jecxz
retf
fstp
popf
jnp
into
ficomp
dec
jmp
ja
inc
stos
cmps
push
pop
(bad)
jbe
jmp
rcr
cmps
jnp
ja
out
mov
(bad)
mov
jo
sbb
pop
arpl
dec
ret
inc
mov
(bad)
lock
retf
sub
cmp
cmps
push
stos
aad
and
push
pop
imul
push
inc
call
or
iret
and
pop
pop
repnz
sub
test
in
mov
adc
cwde
inc
pop
mov
int3
mov
test
and
mov
lds
xor
cli
retf
mov
cdq
sahf
fdiv
xchg
sbb
sbb
xchg
pop
(bad)
mov
int3
int
push
adc
mov
lods
out
add
dec
sbb
xchg
mov
js
xor
xchg
idiv
jle
push
push
xor
retf
fdivr
aad
into
push
(bad)
cmp
out
sub
mov
jne
xlat
add
test
and
sbb
(bad)
and
jbe
dec
(bad)
hlt
mov
shl
int3
pop
mov
test
add
and
gs
fwait
sti
push
test
inc
outs
test
pop
popf
lock
shl
adc
lods
adc
test
push
cmp
add
rcr
push
cmp
imul
xor
push
cmp
or
xchg
(bad)
jo
sbb
pop
mov
arpl
or
pop
out
mov
(bad)
ins
sub
mov
jnp
sbb
out
loopne
cmp
and
jae
jne
push
adc
neg
jp
sbb
or
push
lahf
(bad)
ins
jp
jl
mov
out
xchg
sbb
in
xchg
fcom
aas
push
das
mov
call
and
popa
rcl
or
sbb
or
push
or
test
and
mov
and
xor
in
std
retf
push
mov
push
add
fisub
daa
retf
sub
push
cmp
and
icebp
xor
int3
mov
(bad)
mov
add
cmp
out
push
movs
jge
fcom
out
jp
jb
push
fs
jp
cwde
add
mov
pop
cmp
and
fadd
test
retf
xlat
push
xchg
and
pop
jle
mov
mov
iret
pop
mov
xchg
pop
aad
xor
aam
comiss
(bad)
jne
adc
shl
leave
popa
aas
stc
or
stos
pop
xchg
in
mov
lods
cwde
mul
js
inc
sbb
inc
adc
mov
stos
jo
ror
jne
mov
inc
and
mov
arpl
clc
xor
fwait
retf
je
jp
and
jns
ret
adc
adc
mov
(bad)
mov
jae
add
add
inc
rcl
jns
dec
stos
aaa
iret
xchg
addr16
test
pop
(bad)
icebp
(bad)
dec
dec
mov
add
cld
sbb
push
jg
mov
(bad)
sbb
ror
pop
rcr
sub
imul
cmp
mov
mov
jmp
push
jmp
aad
adc
push
mov
div
jns
ror
and
loopne
cmp
pop
pop
scas
xor
dec
and
pop
push
(bad)
cld
mov
xchg
inc
jbe
xchg
mov
outs
and
int
adc
fsub
repz
inc
imul
fiadd
jmp
dec
cmp
call
rcr
sub
inc
xor
xchg
inc
ins
and
nop
mov
retf
das
jnp
inc
jae
test
in
inc
xor
sub
inc
fsub
pop
sbb
out
xchg
mov
loope
test
lea
push
scas
or
fild
ror
pushf
imul
mov
push
sbb
pop
sar
dec
inc
mov
cmp
dec
iret
jp
outs
sub
pop
or
test
push
call
push
jo
jae
jl
es
jnp
sbb
xor
add
inc
cld
or
idiv
(bad)
xchg
(bad)
ins
nop
add
sti
aaa
shl
dec
cwde
push
dec
mov
clc
fdiv
dec
xor
lock
xor
fs
mov
xchg
fisttp
ins
outs
int
fs
and
ret
mov
fs
pop
inc
jge
fwait
xchg
sbb
sahf
ss
jmp
cld
mov
dec
sub
inc
retf
add
sar
jle
and
push
loope
ins
in
xor
sbb
push
(bad)
js
mov
(bad)
mov
repnz
add
lahf
pusha
xor
out
dec
sub
mov
je
add
scas
call
mov
nop
or
push
pop
sub
mov
mov
stos
mov
fs
pop
mov
gs
xchg
in
scas
lds
hlt
xchg
loope
ss
inc
in
je
ss
push
int3
sbb
xchg
cmp
leave
push
mov
shr
test
outs
fst
sbb
fimul
add
dec
pushf
mov
retf
pop
test
dec
sbb
ja
and
xchg
lahf
fimul
gs
movs
pop
cs
loopne
mov
bound
(bad)
cld
xor
jge
pop
loopne
nop
cmps
movs
repz
ret
dec
mov
adc
mov
fdivr
es
rol
ja
cmp
ins
in
stc
mov
cmp
and
and
xlat
out
arpl
or
loopne
jns
mov
dec
sbb
mov
sub
pushf
sbb
push
nop
push
cmc
inc
sbb
leave
inc
sub
(bad)
shl
jbe
outs
sub
xor
ror
and
pop
and
mov
or
push
mov
add
xchg
sbb
mov
clc
pop
mov
push
pop
in
jne
lds
addr16
jmp
cdq
fist
in
(bad)
es
leave
add
xchg
inc
fmul
lods
and
jb
loope
or
mov
cli
push
inc
cmp
inc
jb
in
mov
inc
outs
inc
mov
outs
sub
push
jo
ss
loop
int
clc
mov
rcl
push
adc
sar
xchg
cmp
sbb
(bad)
aam
test
jbe
jbe
in
jae
(bad)
mov
push
xchg
in
adc
mov
popf
and
or
and
cmp
je
xor
inc
icebp
pop
sbb
cdq
call
jle
jmp
mov
mov
or
mov
pusha
xrelease
jle
xor
movs
and
ds
xor
jb
pusha
add
cmp
popa
cmps
outs
inc
cmp
mov
call
ret
adc
ins
(bad)
cwde
sub
pop
pop
push
dec
and
and
pop
cmp
loop
pop
xor
mov
(bad)
jns
mov
push
or
mov
xchg
out
xor
push
in
and
sahf
push
scas
cli
cmp
ret
shr
push
and
ins
in
sbb
pop
sub
dec
repz
pop
inc
ins
xchg
mov
pop
xor
mov
push
(bad)
(bad)
outs
mov
popf
bound
mov
(bad)
in
std
fwait
into
dec
cmp
fsubr
mov
or
push
scas
jmp
retf
xor
outs
cmc
cwde
mov
jmp
sahf
cmp
(bad)
pop
iret
inc
aam
retf
mov
push
xchg
ins
or
push
xchg
mov
loop
loopne
gs
mov
(bad)
or
mov
and
sbb
in
stos
mov
leave
pop
jmp
dec
movs
jle
push
push
add
adc
xor
arpl
sub
push
cli
arpl
sbb
call
mov
lods
xchg
fdivr
mov
das
xchg
mov
mov
push
outs
hlt
data16
retf
sub
sar
or
mov
outs
call
mov
sti
jl
hlt
add
pop
jnp
xchg
xor
xchg
rcr
fs
ret
xchg
out
jns
dec
sbb
push
push
xchg
test
add
adc
pop
add
adc
mov
bound
jno
xor
add
cwde
sbb
inc
loopne
xlat
mov
clc
jne
jmp
test
daa
int
shl
outs
pop
outs
jae
push
jbe
pop
sub
movs
imul
(bad)
or
rcl
sub
pop
ret
inc
jge
dec
pop
test
mov
inc
dec
cmp
jge
scas
shr
pop
(bad)
popf
inc
js
cld
movs
call
adc
imul
sub
icebp
cmp
popa
cld
imul
adc
pop
test
pop
adc
rol
xchg
or
(bad)
pop
je
xor
xchg
imul
add
pop
call
and
scas
pop
mov
ins
rcl
int
xor
(bad)
push
(bad)
mov
pop
push
iretw
or
mov
adc
xor
push
push
sub
sub
mov
aaa
ss
mov
mov
sbb
push
into
xor
and
xor
in
jecxz
push
xor
jbe
sub
call
hlt
xor
pop
stc
add
sbb
into
test
(bad)
inc
xor
les
sbb
sub
enter
out
xor
add
lods
loope
mov
js
call
xchg
imul
jo
fsubr
mov
jnp
mov
push
je
and
xchg
ret
add
and
adc
movs
shl
imul
pop
add
pop
xchg
or
mov
dec
mov
shl
cmc
sub
sbb
mov
daa
inc
mov
pop
xchg
cld
inc
or
bound
sbb
push
popf
arpl
mov
ja
add
xchg
aaa
pop
arpl
gs
jno
mov
loope
addr16
xchg
arpl
aad
nop
(bad)
ss
in
sar
sub
cmp
faddp
push
retf
lea
jl
lods
mov
rcr
sbb
lods
aaa
pop
pop
lds
inc
shl
or
mov
sub
les
and
(bad)
dec
mov
push
push
ins
xor
in
pop
mov
cmps
pusha
adc
jbe
mov
xor
sbb
push
mov
shl
adc
mov
xchg
and
leave
nop
in
pinsrw
hlt
jecxz
stos
push
fcmovbe
push
pop
pop
mov
mov
jmp
pop
inc
iret
lds
ror
add
mov
add
aas
movs
int3
out
xor
and
xchg
mov
(bad)
xchg
aam
sahf
retf
ja
add
outs
rcr
add
push
mov
test
push
pop
mov
pop
clc
loope
mov
ret
in
inc
add
fdivr
(bad)
popf
retf
xor
(bad)
sbb
pop
pop
adc
pusha
fimul
pusha
pop
xor
cs
aad
mov
adc
mov
mov
jp
std
icebp
inc
add
adc
xor
int
pusha
or
and
int3
shl
jle
jae
inc
jns
imul
sub
jns
les
mov
(bad)
pop
sbb
lea
sub
inc
dec
and
pop
jbe
jmp
repnz
out
je
push
pop
retf
fldenv
daa
push
or
jp
pop
jno
and
jae
push
add
in
pop
push
push
or
mov
adc
cs
sub
ds
mov
sbb
out
xor
add
stos
xchg
mov
jg
ficom
outs
and
out
adc
pop
push
pop
push
dec
xor
sub
stos
aaa
push
cmp
icebp
aad
pop
fnstsw
cmc
mov
test
sbb
(bad)
cmp
push
add
push
mov
dec
jecxz
shl
cs
cmp
icebp
repz
mov
xchg
rcr
fcomp
mov
shl
or
push
outs
jb
inc
lds
cmp
or
adc
repz
stc
xchg
mov
call
addr16
nop
inc
or
loope
or
pop
adc
in
xor
fist
(bad)
(bad)
les
(bad)
mov
ins
(bad)
cld
ds
xchg
leave
adc
pusha
sub
dec
daa
fwait
sub
mov
std
fs
dec
or
mov
cmp
xchg
jmp
xchg
mov
lods
aaa
and
push
stc
xor
rcl
cld
xor
inc
(bad)
in
sub
mov
aad
fcmove
in
scas
mov
mov
bswap
mov
outs
out
push
push
push
pop
xchg
imul
pusha
jmp
pop
jne
or
mov
xor
xor
(bad)
sbb
ret
inc
(bad)
jle
sbb
jnp
jns
add
dec
int
hlt
scas
xor
mov
addr16
add
imul
pop
inc
sub
sti
push
shr
cmp
pop
dec
push
and
adc
dec
sti
pop
mov
push
sub
push
stos
push
xchg
mov
mov
sar
or
mov
or
pop
fsubr
cmp
xor
jmp
arpl
inc
sahf
pop
rcl
xchg
not
and
sti
xchg
lds
xor
jb
sti
sbb
in
xor
bound
out
jb
arpl
jo
xchg
sbb
jnp
mov
jmp
aas
cmp
cmp
and
jb
retf
shl
mov
pop
cld
gs
fnsave
add
pop
sbb
cmc
mov
outs
lods
xchg
retf
cs
popa
int
loop
movlps
fbld
dec
mov
fmul
dec
or
(bad)
mov
inc
fdivr
pop
imul
scas
adc
dec
aas
cmp
inc
rcr
jl
or
dec
add
mov
(bad)
lds
jne
(bad)
cmc
(bad)
test
or
or
in
add
jae
and
xor
add
push
imul
cld
mov
es
out
xlat
cli
pusha
inc
mov
mov
scas
and
cdq
pop
push
mov
adc
movs
push
fistp
xlat
pop
inc
scas
enter
das
jl
and
dec
fcom
mov
dec
aaa
inc
jne
ss
cmp
mov
pop
cmp
cmp
pop
addr16
jno
enter
xor
sbb
mov
jg
mov
push
mov
ret
movs
shl
push
push
fistp
jo
dec
jae
cld
cmp
add
into
icebp
sbb
jns
into
icebp
sbb
aaa
jno
ret
ror
shl
sub
jmp
jp
xchg
cmp
dec
test
psubw
mov
mov
mov
cmp
enter
jbe
cmp
mov
gs
das
mov
mov
adc
shl
std
pop
loopne
add
ss
ret
or
ror
adc
popa
aad
inc
push
fs
test
mov
cmc
pop
fmul
and
xchg
xchg
xor
dec
(bad)
out
rcr
or
sahf
nop
outs
ds
repnz
stos
inc
data16
scas
sub
mov
push
fst
dec
adc
mov
loopne
xor
adc
lea
xor
ret
push
push
das
int
sar
adc
sub
or
dec
xchg
jmp
pop
js
pop
lahf
cmp
adc
mov
test
and
fwait
sub
fs
jae
fs
cmp
mov
test
ror
xchg
add
cmp
jge
mov
mov
leave
inc
test
mov
jns
je
mov
add
test
ins
push
nop
jecxz
ins
cmps
aas
call
sbb
push
dec
mov
adc
or
xchg
popa
ret
push
addr16
or
mov
stos
sbb
jecxz
test
push
pop
xor
jne
sbb
push
lahf
cmps
in
mov
loop
lods
inc
xor
and
mov
mov
enter
das
or
cmps
inc
out
push
cli
lods
das
cmp
aad
xor
stc
cs
rcl
retf
sub
pop
idiv
xor
mov
pop
push
and
cmp
in
pop
dec
js
inc
cmps
pop
cmp
in
scas
inc
das
cwde
pop
adc
sbb
and
(bad)
out
dec
inc
xchg
cmc
retf
pop
aam
cmps
cs
sub
mov
or
sahf
hlt
mov
dec
dec
push
push
sti
into
push
cmp
daa
fs
pop
and
xchg
ret
mov
sub
rol
cmps
dec
sub
popa
mov
xor
(bad)
jl
adc
test
mov
adc
ss
out
int
push
xor
and
inc
pop
adc
push
popf
in
retf
or
leave
sbb
xchg
mov
adc
jns
loop
outs
fistp
and
add
(bad)
call
cmp
ins
xlat
ret
mov
xor
popa
push
rcr
push
outs
sub
hlt
(bad)
mov
sbb
lock
inc
(bad)
mov
or
ja
out
cdq
or
test
sbb
fld
jbe
jl
fwait
clc
xor
mov
cmp
adc
rcr
sar
nop
loopne
mov
dec
pop
pop
mov
cmp
outs
test
dec
xchg
dec
sub
xor
push
and
jmp
lods
xchg
xor
mov
dec
mov
mov
mov
(bad)
mov
ins
pop
cmp
push
sbb
pop
jmp
repz
jmp
mov
outs
jg
ja
in
add
xchg
lock
mov
sub
daa
xchg
push
jne
cwde
mov
(bad)
jb
popa
jle
mov
fidivr
adc
xlat
mov
add
sahf
inc
sub
lea
adc
or
ficom
(bad)
dec
getsec
mov
cmps
das
mov
mov
sub
pop
shl
cmp
pop
add
ror
ret
pop
xor
popa
xchg
retf
and
scas
pushf
add
and
retf
std
fcomp
or
retf
mov
fistp
mov
and
xchg
test
imul
std
mov
stc
test
call
out
mov
push
xchg
int
retf
adc
dec
lahf
(bad)
mov
jecxz
movntq
out
fcom
ins
or
mov
push
mov
leave
movs
pop
pushf
or
repz
gs
jns
pop
imul
xlat
add
jnp
packsswb
sub
test
in
and
push
imul
sahf
test
xor
mov
xlat
(bad)
pop
push
jmp
loopne
pop
jbe
fild
or
adc
fdivr
cmp
add
cmp
data16
fld
or
pop
xchg
dec
mov
sbb
outs
jp
mov
dec
push
inc
out
mov
repnz
xor
stos
retf
cli
lock
sbb
int
dec
and
xor
jne
pop
and
push
xchg
inc
cmps
xor
sbb
lods
shl
push
pusha
in
leave
or
mov
cmp
cmp
ss
(bad)
int3
inc
sub
mov
loope
fs
cmp
xor
sub
ins
mov
aam
out
add
inc
loopne
ins
test
lods
out
fiadd
outs
cmps
ins
das
inc
out
push
cs
or
push
inc
inc
outs
mov
cmp
fwait
xor
cwde
mov
push
movs
mov
in
sbb
dec
mov
adc
xchg
addr16
cmps
xlat
in
into
in
inc
pop
lods
jmp
jb
ss
pushf
ret
push
ror
xor
bound
out
fsubr
sbb
jmp
xchg
add
pop
imul
fcom
(bad)
jae
inc
or
xchg
xor
lar
push
sub
sub
out
jmp
ret
imul
lods
sub
pushf
cdq
xchg
cwde
fnstsw
mov
cmp
add
loope
lock
loope
adc
arpl
xchg
popf
out
rcl
push
push
adc
pop
mov
jmp
xchg
add
out
adc
mul
(bad)
loop
or
int3
cwde
mov
sar
dec
repnz
dec
pop
fwait
cmp
daa
outs
repnz
icebp
add
(bad)
movs
test
aad
inc
mov
(bad)
fld
addr16
loop
sub
lds
push
mov
push
sahf
xor
(bad)
mov
mov
bound
dec
cmp
jne
and
stos
adc
inc
(bad)
das
pop
leave
mov
cmovp
push
mov
icebp
add
imul
outs
hlt
loopne
test
les
cmps
adc
cmp
mov
(bad)
xlat
adc
repnz
ret
mov
aas
pop
pop
mov
cld
push
fdivp
jmp
xchg
rcr
nop
(bad)
sahf
pushf
mov
mov
sti
cmps
sbb
mov
add
ins
arpl
mov
in
cdq
push
ret
dec
pop
stc
cs
or
mov
aad
pusha
xchg
(bad)
push
pop
ss
daa
fldcw
out
mov
xchg
neg
cwde
inc
imul
push
xor
ins
pusha
adc
in
(bad)
clc
fstp
pop
bnd
or
int3
jmp
imul
push
jle
push
call
(bad)
add
xchg
(bad)
ins
dec
add
dec
push
or
push
fs
fild
cld
pushf
cmp
mov
add
nop
sub
push
add
(bad)
jge
inc
mov
rcr
lods
retf
xor
push
shr
jmp
ror
push
push
dec
sar
dec
ja
xor
mov
icebp
scas
push
jg
neg
in
js
push
dec
retf
jno
push
mov
stc
aaa
or
push
js
nop
adc
mov
pushf
add
repz
cmp
jmp
outs
mov
movlps
xchg
fist
data16
xchg
aad
mov
cld
push
rcr
jbe
jbe
aaa
or
pop
mov
xchg
jnp
std
push
mov
pop
push
mov
pop
jl
mov
iret
jo
cmp
pop
or
je
sar
fisubr
shr
in
push
and
inc
fwait
ins
lods
retf
push
sbb
cli
out
mov
sbb
leave
rcl
popf
dec
inc
cdq
ficomp
jmp
loop
arpl
jecxz
sbb
add
mov
jmp
scas
pop
mov
jae
sbb
or
(bad)
add
adc
xrelease
call
mov
stc
jg
std
sub
enter
(bad)
in
mov
add
push
xchg
or
inc
(bad)
sub
cli
push
jno
stos
in
imul
sbb
pusha
pop
imul
cmp
jp
push
ins
mov
adc
dec
(bad)
call
ds
(bad)
mov
pop
scas
dec
inc
mov
pusha
xor
loope
jo
push
sti
mov
xor
arpl
sbb
and
push
jge
cmp
xor
and
or
xor
out
mov
into
push
jmp
imul
(bad)
retf
retf
outs
shr
test
adc
mov
popf
add
pop
stos
add
mov
mov
in
retf
xor
cli
in
pop
ja
shl
cld
test
ja
xlat
mov
xchg
xlat
stc
push
dec
pop
scas
mov
ficomp
stc
xchg
imul
loop
sbb
clc
xchg
add
stos
fld
ins
loope
mov
bound
fcmove
mov
jmp
out
enter
adc
out
mov
push
shl
jbe
cli
pop
dec
in
dec
cmp
xor
shl
lds
data16
xchg
pop
shl
into
add
je
in
inc
jmp
call
popf
push
xchg
loope
and
fwait
cmp
jo
mov
std
scas
int
cmp
in
sbb
xor
xchg
fcom
mov
in
jno
stos
enter
adc
loop
test
mov
inc
xor
inc
mov
cld
inc
test
push
lods
adc
push
inc
push
xchg
add
mov
sbb
call
popf
imul
add
and
push
jo
jmp
sbb
jae
fwait
dec
xor
mov
xchg
fistp
lock
dec
test
es
or
rcr
lds
aas
idiv
pop
mov
shr
sbb
jb
add
test
sahf
fmul
loope
cmp
iret
dec
call
aad
jg
fcomp
not
fnsave
push
mov
adc
sbb
add
es
xchg
add
xchg
ins
jp
outs
ds
jmp
or
and
arpl
or
aam
pop
or
or
cli
in
push
ret
scas
outs
ins
test
outs
fcomp
adc
rol
test
jns
mov
nop
test
mov
loope
mov
dec
inc
popa
xchg
fdiv
xchg
add
popf
adc
fdivr
sar
push
push
jnp
es
pop
cmp
pop
jmp
fs
mul
xchg
mov
hlt
and
sbb
xchg
mov
fwait
call
mov
pop
cmp
cmps
std
es
and
mov
test
sub
mov
dec
fdiv
xor
fwait
dec
sbb
pop
jbe
(bad)
cdq
ins
xchg
mov
pop
fs
imul
mov
inc
xchg
ret
(bad)
cmc
xchg
shl
push
sub
scas
jl
jle
ds
sti
dec
(bad)
sbb
or
gs
mov
nop
push
push
into
dec
mov
data16
aaa
ret
xor
cld
mov
lods
cmps
fs
cmove
inc
mov
push
retf
lods
(bad)
push
nop
stos
add
popf
xor
(bad)
jge
xchg
daa
jo
out
in
stos
retf
les
mov
sahf
jo
call
cmp
add
mov
js
pop
daa
ror
push
push
pop
jg
jno
push
mul
pop
or
and
dec
dec
inc
cmp
xchg
enter
retf
mov
jg
cmp
xchg
test
add
je
pop
(bad)
(bad)
fimul
hlt
leave
in
(bad)
xchg
inc
xchg
sbb
xor
scas
xchg
movs
test
jge
dec
dec
add
cmp
(bad)
lds
push
pop
(bad)
fisttp
shl
cmp
(bad)
test
out
xor
fidiv
add
ror
xor
cld
xor
clc
xor
into
xor
inc
dec
mov
push
and
mov
nop
push
inc
and
in
sbb
fcmovbe
push
lods
adc
mov
ins
movs
repz
daa
lahf
mov
fdiv
adc
xor
or
cmp
iret
mov
adc
popa
(bad)
push
cmp
and
faddp
cmps
xor
sbb
mov
ror
pop
outs
mov
(bad)
mov
mov
mov
imul
push
js
and
adc
jb
enter
sbb
rcl
test
dec
inc
dec
aaa
das
dec
cmp
lock
or
mov
pop
dec
clc
je
pop
mov
push
xchg
fisttp
outs
repz
loope
pop
repz
mov
ret
or
mov
and
xlat
pop
jmp
retf
and
and
xchg
jbe
dec
add
hlt
xchg
mov
mov
lock
ss
sahf
mov
imul
cmps
pop
ret
fld
ret
les
xchg
sbb
push
and
inc
das
std
sbb
(bad)
and
test
pop
mov
mov
pushf
jmp
stc
jg
hlt
and
aaa
adc
js
adc
sub
mov
sub
das
and
in
mov
(bad)
fistp
xor
sbb
(bad)
xchg
jmp
int3
pop
mov
push
pop
fcom
hlt
in
sti
push
ficomp
mov
call
cli
mov
cmp
pop
sub
xor
push
push
jecxz
sbb
jg
cmp
mov
es
add
push
or
stc
and
stc
cmp
in
fdivp
push
add
test
mov
(bad)
aaa
adc
out
jg
cdq
pop
ins
fcmovne
cmp
push
mov
clc
jle
cmovl
dec
sbb
iret
out
sti
out
bound
test
ret
and
les
inc
hlt
adc
(bad)
mov
jmp
lahf
sbb
mov
stos
push
add
sbb
mov
mov
xor
stos
push
push
jle
mov
mov
jp
dec
(bad)
ins
dec
dec
je
out
imul
mov
outs
xchg
fld
jecxz
retf
lods
push
inc
jb
pop
pushf
inc
mov
das
jne
leave
jl
and
fimul
fcomp
arpl
mov
cmp
outs
xchg
test
sbb
sbb
mov
cli
xor
push
sbb
fisttp
fisubr
push
fcom
or
fs
stos
and
cld
adc
test
lods
xchg
shl
pop
bound
and
add
fucomi
rol
repz
retf
idiv
(bad)
movs
cmps
lods
(bad)
fsubr
sub
add
cmp
xor
test
adc
xchg
outs
scas
push
das
cmp
stos
mov
call
mov
test
or
rol
pop
bound
or
xor
test
pop
cmp
push
mov
ja
inc
and
mov
jb
push
int
addr16
sub
mov
cmp
shr
jmp
cmp
pop
mov
or
push
pop
and
in
out
gs
mov
xor
fiadd
sbb
jge
leave
adc
fwait
cli
xor
iret
mov
pop
add
js
adc
push
pop
popa
in
sbb
mov
stos
inc
xor
aaa
into
cmp
in
and
mov
mov
jl
les
push
sub
shl
(bad)
sub
movs
rcl
jb
popf
pop
mov
or
leave
push
pop
xchg
cmp
jecxz
dec
jge
dec
clc
sti
call
bound
jg
outs
ins
xchg
das
jmp
ret
sbb
dec
fbstp
test
inc
jnp
mov
loope
and
arpl
fcomi
fwait
push
jmp
mov
jl
imul
out
and
mov
psrld
jb
cmp
pop
push
ds
shr
sbb
jmp
fidiv
stos
sti
and
and
xor
les
xchg
mov
jle
adc
imul
(bad)
add
test
pop
push
test
mov
mov
jmp
jg
int3
in
or
cmp
fs
xchg
retf
popf
gs
je
xor
dec
add
mov
lods
call
adc
out
sub
dec
mov
pop
sti
popf
xor
not
lea
push
(bad)
inc
mov
in
retf
cmp
shl
mov
rcl
or
xchg
repz
mov
lods
fadd
aaa
call
push
lds
inc
retf
xchg
xor
or
or
adc
dec
pop
fld
mov
add
sti
pop
mov
jb
cmp
pop
dec
sbb
sub
adc
loop
pop
mov
cmp
(bad)
add
push
mov
das
cmp
dec
mov
inc
dec
scas
shr
cli
fisttp
xchg
cmp
jl
sbb
mov
inc
rol
rcr
arpl
int3
repz
push
pop
mov
movs
pop
movs
sub
out
fxch
cmp
push
add
lods
and
frstor
dec
stc
push
mov
adc
clc
mov
push
jae
mov
jae
imul
pop
inc
xor
dec
cli
mov
mov
mov
iret
push
xor
xchg
loop
inc
call
(bad)
retf
xchg
jo
mov
mov
clc
rcl
sub
neg
mov
outs
in
or
shr
sbb
mov
into
stos
test
out
pop
lds
pop
imul
aam
sub
sub
rol
jo
cli
mov
push
xor
adc
std
and
push
in
ret
ins
or
sub
out
jmp
sub
xchg
rol
and
jmp
and
dec
jge
or
movs
add
std
out
xchg
out
clc
cld
and
cmps
stc
lods
and
mov
adc
(bad)
cmps
lods
ja
sbb
cwde
or
pop
add
out
or
js
push
dec
push
inc
mov
mov
inc
or
xchg
add
xor
sahf
bnd
sbb
gs
push
sub
mov
pop
sbb
(bad)
(bad)
push
pop
or
and
pop
dec
addr16
dec
dec
mov
sub
(bad)
sub
out
iret
ud1
sub
fcomp
mov
(bad)
out
pop
shr
in
es
sub
mov
pusha
shr
js
xor
cmps
or
xor
jp
adc
dec
fwait
mov
xchg
movs
hlt
push
jmp
mov
jl
jne
add
lahf
jg
lods
xor
dec
pop
push
pop
sahf
cld
retf
jno
repnz
sbb
pop
mov
je
adc
dec
push
mov
shr
xchg
scas
cmp
ja
pop
pop
lods
sahf
lods
cmps
out
cdq
inc
icebp
xchg
fsubr
cmp
(bad)
int
push
push
(bad)
fcomp
pop
enter
jmp
pusha
push
ror
pusha
mov
xchg
hlt
pop
jg
cmp
push
push
outs
aas
push
fidiv
aam
stos
aas
fs
bound
cmps
mov
neg
inc
jns
repnz
ins
data16
jg
mov
mov
and
jb
or
shl
cmc
in
sub
xchg
imul
lds
enter
popa
imul
jo
mov
inc
div
mov
or
jl
mov
cmp
std
mov
push
fdivp
or
dec
sbb
sub
add
push
cs
lds
sub
sub
mov
push
pop
idiv
(bad)
in
xor
test
loop
inc
sti
int
rol
adc
cdq
ret
add
jns
dec
dec
adc
jge
and
jmp
dec
sub
mov
xchg
bound
add
jae
inc
or
add
mov
inc
sbb
xchg
ins
jg
cmps
ins
and
nop
cdq
movs
jmp
repz
adc
push
or
jnp
popa
scas
mov
stos
inc
test
inc
and
inc
cmc
adc
mov
nop
jp
ret
mov
jae
(bad)
aaa
sub
sbb
xchg
fcmove
inc
bound
cmp
fdiv
hlt
call
sahf
inc
inc
push
inc
test
das
mov
jae
pushf
cwde
pushf
mov
xchg
and
rcl
mov
cli
lods
fisubr
push
xor
jl
sub
inc
gs
sbb
mov
leave
mov
inc
enter
mov
popf
fist
dec
push
mov
inc
adc
dec
pop
loope
xchg
xchg
inc
fild
pushf
and
push
sbb
and
daa
cmp
jp
test
test
pop
rcr
pop
sub
push
aaa
pushf
(bad)
sub
or
inc
dec
jle
cmp
xor
adc
cmp
test
pusha
sahf
pop
fidiv
jge
pusha
call
popa
mov
xchg
mov
jmp
jle
ror
rcr
das
dec
leave
xchg
inc
pop
sbb
inc
jo
or
loope
push
xor
and
xchg
(bad)
mov
fs
pop
pop
jge
aam
mov
sbb
inc
aaa
adc
in
leave
push
pop
mov
or
bound
daa
fadd
mul
nop
ss
bound
lahf
ss
pop
dec
jae
movs
call
popf
test
imul
aaa
fdiv
and
rcr
fistp
xor
and
mov
or
cmp
lods
jp
dec
repz
mov
inc
pusha
fwait
dec
push
and
aam
test
nop
cld
jl
jae
jp
adc
sub
(bad)
fistp
inc
or
jmp
out
xchg
mov
mov
js
push
pop
into
out
mov
adc
fld
or
shl
inc
add
fnstsw
int3
xchg
xchg
sbb
xchg
lds
cmp
inc
sbb
or
jbe
inc
rcr
xor
(bad)
mov
mov
mov
jge
pop
leave
mov
push
mov
jecxz
test
add
(bad)
push
cmp
push
ss
push
ret
and
mov
inc
dec
sub
add
pop
jns
fstp
adc
xchg
pop
outs
cmc
out
cmp
add
dec
mov
retf
mov
inc
mov
imul
je
sahf
cmps
push
cmc
(bad)
mov
je
inc
fiadd
add
mov
mov
mov
mov
mov
jp
lods
sub
pop
repz
(bad)
ror
sti
push
or
push
mov
mov
arpl
cmp
jmp
and
jae
jmp
mov
in
add
inc
or
push
ss
movs
fwait
cmp
jne
jmp
push
fs
or
jecxz
int3
cmps
fild
ja
and
fld
nop
pop
or
xor
loop
inc
outs
dec
jecxz
adc
aas
stc
mov
ins
repz
(bad)
pop
sub
movs
lods
cs
sub
inc
sub
push
push
cmc
inc
icebp
jl
sub
sbb
movs
sub
mov
sub
int
cmp
mov
sub
mov
das
movzx
shl
fcom
pop
cmp
imul
mov
cmp
je
div
push
jo
add
js
xlat
mov
mov
or
mov
pop
clc
cmc
sub
mov
aas
cmps
jg
test
xor
fstp
add
ds
fistp
in
sub
add
mov
jnp
jge
not
cmp
repnz
(bad)
jp
cmp
adc
in
jo
in
(bad)
in
clc
push
aas
jp
adc
cmps
ret
js
retf
(bad)
push
mov
or
loop
sub
jo
jbe
cmp
pop
cmp
popf
jns
mov
out
push
out
ins
fild
sbb
dec
push
fcomip
lods
mov
add
and
pop
scas
jmp
or
dec
nop
jbe
mov
ret
frstor
sub
into
add
pop
inc
lock
add
jecxz
call
out
in
jo
xor
test
stos
stos
loope
clc
inc
mov
aas
add
jmp
pop
pop
jmp
mov
jmp
repz
addr16
mov
sub
mov
movs
and
lahf
dec
in
ror
mov
(bad)
jo
clc
cmp
mov
(bad)
mov
add
inc
fcmovnbe
push
fidivr
dec
jp
or
add
push
inc
and
pop
nop
inc
push
cmps
in
in
add
cwde
test
outs
loop
sbb
jae
pop
fidivr
not
and
sbb
xchg
sti
gs
fisttp
jp
fstp
js
gs
dec
stos
pop
and
(bad)
adc
xor
pop
pop
into
out
xor
inc
xor
xchg
adc
jnp
and
in
or
adc
loop
mov
shl
gs
dec
jmp
inc
add
add
ror
inc
(bad)
pop
mov
push
int3
lock
js
jmp
cmp
jg
mov
icebp
stos
ins
cli
mov
scas
fnstcw
mov
mov
sti
sub
mov
lods
outs
jle
ds
xor
iret
push
mov
outs
aad
loopne
push
rol
lds
sub
adc
icebp
enter
into
ja
and
dec
(bad)
in
inc
(bad)
xchg
sahf
push
cmp
or
or
aad
add
div
and
sar
push
je
cmp
cmps
cmp
inc
pop
push
pop
add
imul
retf
jbe
xchg
push
jno
mov
sar
adc
add
mov
mov
lahf
mov
shl
push
add
iret
adc
jmp
push
xor
cmp
lods
mov
aam
leave
scas
fisttp
mov
dec
or
mov
xor
adc
out
outs
sub
push
sti
sbb
(bad)
in
adc
out
pop
inc
div
jge
aad
hlt
jmp
fldenv
push
jns
push
xchg
inc
out
xor
add
adc
test
pop
dec
push
ret
outs
mov
call
mov
mov
out
fwait
inc
aas
jne
loope
leave
xlat
adc
popa
adc
sbb
dec
sbb
lods
repnz
mov
scas
mov
cli
sbb
dec
mov
fdiv
pushf
test
add
push
jl
fdiv
pop
imul
lock
pop
xchg
mov
inc
cwde
les
push
imul
push
sub
sub
jmp
mov
adc
cmp
rcl
adc
pusha
xchg
jae
inc
dec
leave
pop
jbe
adc
pop
inc
retf
cmps
mov
daa
push
adc
arpl
leave
jno
mov
mov
and
adc
add
dec
mov
jae
xchg
or
clc
cli
dec
inc
lock
push
ja
sar
stc
pop
jl
pop
adc
lock
push
pop
cmp
mov
mov
or
gs
jbe
xchg
and
test
dec
xchg
sub
sub
push
cmovge
xchg
dec
jbe
call
pusha
icebp
call
push
frstor
test
add
mov
jge
rep
nop
push
scas
loope
fisubr
outs
fmulp
sahf
xchg
sub
jb
sub
dec
fmul
jl
dec
out
xor
cmp
(bad)
ja
(bad)
(bad)
mov
or
add
push
mov
(bad)
mov
std
add
xchg
xor
mov
lods
nop
dec
es
xlat
or
mov
xchg
pop
mov
scas
retf
cmp
xchg
dec
call
loop
inc
jecxz
cmp
or
sahf
scas
ror
fsubr
bound
cmps
mov
into
jmp
xchg
mov
es
loop
xchg
xor
popa
rcr
push
jecxz
jmp
outs
pop
mov
or
cmp
ja
dec
cmp
(bad)
mov
and
and
xchg
mov
cmps
mov
(bad)
lahf
cs
les
mov
push
in
sbb
sub
add
js
sub
xor
(bad)
xor
add
pop
push
inc
sub
or
stos
test
push
clc
cwde
lahf
mov
dec
xchg
imul
pop
jo
into
inc
add
mov
inc
sub
inc
push
pusha
iret
add
sub
mov
daa
cmp
call
cwde
sbb
mov
cmps
int3
inc
std
rcl
xchg
jne
or
fsub
sub
pop
call
mov
cmp
sbb
mov
pop
push
gs
pop
out
inc
mov
push
and
dec
outs
nop
ror
add
retf
cmps
sahf
xchg
push
push
aas
jmp
inc
ins
jae
dec
jl
add
out
xchg
sbb
gs
pop
sub
mov
add
je
dec
pop
and
shr
sar
and
stos
cmp
sub
std
xchg
movs
xchg
fisttp
fst
fcom
in
movs
in
pop
lods
test
or
xchg
das
or
xchg
adc
test
out
cmp
jge
mov
sti
push
cmp
and
(bad)
idiv
arpl
loopne
cwde
pop
push
loop
nop
mov
sbb
mov
and
sti
sub
xor
xor
jge
rcl
cmp
mov
mov
fwait
cs
jmp
movs
std
hlt
sub
push
cmp
dec
bound
xchg
(bad)
loopne
ja
cmp
and
xchg
jno
mov
cmc
ret
test
pop
cmps
ds
sub
cvtdq2ps
ret
xchg
xor
pop
popa
cmp
call
test
push
jg
scas
hlt
xchg
or
jl
and
mov
jl
add
loope
arpl
shr
and
pop
imul
enter
dec
push
pop
ins
inc
nop
xchg
pop
enter
hlt
mov
cmps
cmp
inc
inc
imul
ja
dec
repnz
jne
jbe
pop
ss
add
pop
arpl
call
sub
xchg
inc
pop
push
sub
scas
jnp
iret
stos
push
adc
lods
inc
fisubr
pop
das
retf
cmp
ins
sbb
push
fadd
jp
ins
iret
xchg
aaa
and
inc
sub
sbb
push
or
adc
stc
aad
xchg
mov
and
inc
aas
pop
push
inc
and
daa
push
addr16
pop
scas
add
xor
mov
lahf
(bad)
and
xor
rcl
jne
shl
sbb
int3
inc
jne
(bad)
or
dec
clc
sbb
iret
rcl
nop
cmps
fild
lea
push
lahf
retf
or
inc
cli
dec
mov
push
and
dec
push
ror
lahf
push
ins
sahf
cs
xor
outs
movlps
movs
jns
fsub
outs
popf
xor
pop
cwde
jb
inc
add
cmp
lock
mov
cmps
xchg
pop
mul
or
movs
inc
les
pusha
push
out
sbb
popfw
movs
xchg
push
inc
cwde
sub
cli
repnz
sub
(bad)
pop
cs
push
sub
mov
arpl
adc
xchg
fist
xchg
push
mov
mov
lea
cmp
ins
lds
jb
cmp
xlat
sbb
push
and
mov
(bad)
(bad)
ins
xchg
movs
das
scas
out
mov
aas
cld
aaa
lds
stc
jp
push
mov
add
dec
mov
out
movs
mov
out
cs
add
fs
dec
mov
sahf
jbe
(bad)
adc
xchg
lods
or
sub
loope
ret
outs
pop
jl
cwde
ins
and
je
add
(bad)
xchg
pop
call
ins
fbstp
sub
inc
adc
xchg
or
cmp
dec
xor
xor
inc
repnz
mov
loopne
push
ins
mov
ds
push
mov
sbb
push
ins
push
lods
test
retf
repnz
jg
test
xchg
sbb
fdivr
aaa
scas
retf
rol
mov
xchg
inc
dec
repz
dec
pop
push
mov
data16
fild
aam
push
movs
retf
xchg
pop
ja
loop
mov
mov
ror
fwait
or
xor
jmp
into
xor
dec
scas
shr
pop
pop
pop
jne
ins
mov
movs
jl
pop
(bad)
movs
int3
test
lds
xchg
fist
xchg
imul
xchg
je
mov
adc
add
sub
sbb
cli
loope
data16
mov
cld
mov
sub
lahf
adc
xlat
cld
arpl
hlt
gs
(bad)
cmp
out
dec
and
rol
loope
out
dec
and
in
jmp
mov
inc
fild
adc
mov
or
and
sbb
sub
pop
mov
imul
cmp
push
cs
clc
mov
xchg
rcl
rcl
jb
jbe
nop
ret
push
adc
inc
mov
rcr
mov
push
in
out
xor
mov
cdq
fidiv
mov
inc
cld
add
or
ss
mov
inc
xor
(bad)
cli
adc
cmps
lods
jmp
pop
jge
in
(bad)
xor
fistp
jecxz
repnz
out
sti
mov
mov
xlat
jo
or
leave
(bad)
test
mov
dec
mov
sub
(bad)
jno
sbb
cmp
std
add
xor
repnz
mov
and
mov
or
jns
inc
dec
jno
bound
push
inc
test
jg
ins
loopne
int3
jecxz
inc
cmp
popa
xor
shl
inc
mov
xchg
scas
repnz
cmp
ins
sub
push
sbb
push
sbb
bound
neg
mov
sbb
jg
outs
fcmovbe
sub
push
xchg
push
pop
dec
push
mov
stos
push
xchg
mov
lahf
inc
jae
enter
dec
xor
arpl
pop
and
inc
lds
lds
mov
add
cdq
test
cdq
adc
fucomi
cld
inc
pusha
in
sahf
pop
outs
inc
add
int3
push
cmp
and
retf
cld
pop
inc
add
xchg
popa
cmp
xor
test
jecxz
mov
xchg
pop
mov
in
retf
cld
push
mov
es
fs
ret
lock
pop
inc
fimul
push
div
into
popa
mov
sahf
scas
or
ins
push
push
dec
sbb
scas
aas
call
inc
adc
push
ins
mov
out
sahf
xor
aas
sub
mov
pop
pop
dec
nop
mov
js
cdq
arpl
sar
xchg
jl
call
(bad)
or
xor
jle
sub
adc
ror
xchg
les
mov
les
fidivr
push
pusha
js
pop
mov
stc
inc
ins
xchg
adc
jne
in
addr16
ss
xlat
call
int
fcomp
outs
hlt
jbe
pop
(bad)
lea
inc
pop
aad
addr16
pop
stos
lea
hlt
mov
jmp
bound
scas
lock
inc
fld
adc
and
mov
(bad)
mov
sub
adc
mov
dec
in
mov
adc
ja
push
push
mov
hlt
pop
ins
addr16
int
bound
ror
mov
xchg
or
mov
xor
aaa
ret
cmp
mov
or
pop
mov
mov
xchg
fsubr
xchg
xor
add
adc
stos
leave
cmp
cmp
inc
adc
mov
add
add
into
mov
addr16
fild
stos
xchg
gs
jg
outs
out
test
and
scas
mov
(bad)
call
and
add
(bad)
pusha
stos
call
popa
dec
jmp
mul
fbstp
push
cmp
test
loopne
push
lea
dec
(bad)
dec
(bad)
pop
mov
movs
scas
sub
push
mov
mov
push
dec
inc
cmp
gs
and
in
jp
fst
sub
pushf
enter
jg
ins
outs
mov
and
ins
jg
ja
hlt
xchg
jno
jae
and
ficomp
jo
cmp
repnz
inc
push
xchg
cld
movs
leave
je
call
lods
dec
adc
ins
mov
pop
sti
inc
dec
or
xchg
pop
popf
and
mov
mov
jg
jp
and
test
rcl
popa
(bad)
stc
lahf
sub
mov
inc
and
imul
mov
push
xchg
jp
push
mov
sahf
cmp
ins
pop
ds
loope
not
inc
fwait
push
sbb
mov
std
std
add
jg
shl
mov
push
cwde
add
rol
mov
pop
mov
jbe
push
dec
mov
adc
stc
leave
adc
cmp
push
add
and
mov
cs
and
xor
sub
aas
mov
push
mov
xor
fcomp
les
xchg
xlat
bsf
call
mov
adc
outs
add
or
sub
test
dec
mov
dec
(bad)
aas
jae
fst
mov
fs
imul
push
fcom
call
daa
icebp
jb
je
aad
test
xor
push
cwde
lahf
(bad)
adc
fidivr
and
fs
aaa
seta
or
or
cld
jmp
xor
xchg
mov
jo
(bad)
mov
cdq
jne
sbb
push
movs
sub
add
adc
push
jge
dec
cwde
cmps
jge
lods
(bad)
cdq
mov
cmp
xlat
ins
test
sub
setb
jmp
push
adc
jle
or
(bad)
mov
bnd
xchg
or
aam
xchg
jecxz
mov
and
ja
icebp
mov
pop
call
mov
add
daa
fisubr
in
xor
add
test
pop
repz
mov
frstor
loopne
fldenv
xchg
aad
xchg
ja
mov
aas
je
ins
js
mov
inc
aaa
shl
stc
ffree
outs
(bad)
pop
mov
clc
sar
sbb
pop
jno
pop
dec
sub
mov
cmp
inc
and
nop
(bad)
add
pop
cmp
pop
movs
add
(bad)
loopne
xchg
xchg
push
cmp
mov
test
xor
jo
jg
dec
jo
fst
push
sbb
call
pop
test
sub
bnd
ins
and
inc
adc
test
jo
dec
xchg
dec
and
data16
loopne
ror
add
jne
int
mov
fistp
movs
arpl
push
pop
out
inc
(bad)
in
push
stos
ficom
push
movs
sub
or
xchg
push
jbe
adc
sub
call
cwde
mov
lock
(bad)
outs
mov
cld
ss
outs
mov
jle
mov
test
dec
cld
pop
push
fincstp
push
and
int
loop
push
jns
or
inc
dec
jbe
nop
and
xchg
xchg
fcomp
dec
cmp
idiv
jno
jecxz
xor
xchg
or
mov
mov
jnp
stc
test
sub
xchg
mov
movs
test
rcl
pusha
fs
fistp
sbb
sub
xor
and
nop
ja
shr
push
fcomp
loop
push
popf
aaa
out
cmp
lock
adc
and
xor
adc
jno
adc
mov
sub
xor
leave
ror
loope
mov
xchg
ss
scas
dec
pop
hlt
adc
test
enter
daa
cdq
sub
fist
imul
dec
imul
dec
cwde
mov
mov
mov
dec
adc
sub
mov
add
gs
jbe
or
mov
loopne
mov
enter
loop
adc
adc
retf
jge
jecxz
or
inc
add
pop
or
add
leave
call
sar
mov
imul
xchg
pop
cmp
outs
and
push
inc
call
movs
dec
popf
int3
das
jb
or
jnp
call
das
sub
dec
stos
pop
adc
sub
xchg
mov
out
push
cmp
iret
pop
mov
add
or
xchg
and
shl
fldcw
or
or
es
mov
test
stos
xchg
inc
out
mov
jle
jl
rol
dec
cmp
fs
mov
stos
mov
xor
sbb
or
push
clc
hlt
mov
pop
mov
std
inc
loope
xchg
mov
inc
cmps
ds
retf
stos
dec
sbb
movs
pop
mov
je
retf
daa
test
das
jecxz
hlt
adc
mov
mov
mov
loop
pusha
dec
fimul
rol
lock
and
dec
inc
jne
jmp
jl
pop
inc
sub
xlat
or
pop
jmp
mov
mov
inc
mov
cld
jge
pop
fdiv
xor
inc
hlt
mov
hlt
inc
fs
(bad)
int3
push
(bad)
ds
das
ja
xor
into
jle
mov
mov
out
cmp
add
inc
mov
pop
pop
aam
inc
retf
add
and
mov
mov
jae
adc
sbb
pop
pop
ins
dec
lahf
jne
test
scas
sti
mov
icebp
je
mov
inc
popa
test
pop
push
aad
int
mov
pop
fidivr
adc
dec
mov
xor
adc
push
int
cmps
inc
lahf
int
repnz
test
or
mov
mov
test
pop
pop
movs
mov
bound
out
sub
popf
jmp
and
enter
enter
es
mov
mov
imul
jnp
jb
sbb
mov
sti
dec
sbb
loop
loopne
jp
(bad)
pusha
repnz
mov
fldenv
test
call
push
jbe
out
dec
and
inc
dec
(bad)
in
push
mov
pop
sbb
pop
cmp
fs
stos
jb
popa
inc
lahf
xchg
and
or
push
cli
push
es
out
xor
stc
je
xchg
jb
dec
sub
and
sbb
or
jnp
mov
test
int
aas
aas
rcl
push
(bad)
clc
js
stos
aaa
imul
loop
or
out
mov
sub
in
lahf
dec
repz
inc
ins
movs
(bad)
cmc
cmp
ror
xchg
xchg
test
mov
addr16
jmp
pop
sub
or
mov
push
fdiv
pop
and
pop
test
xchg
fwait
mov
test
lock
in
inc
mov
jbe
jno
xor
mov
popf
dec
test
fidiv
shr
xor
mov
inc
les
jmp
dec
scas
popf
dec
sbb
mov
popa
add
mov
inc
(bad)
int3
xchg
popf
sbb
pop
adc
and
xchg
sti
daa
cmp
mov
in
or
cs
inc
or
push
out
jle
xchg
xor
(bad)
sub
ins
xchg
mov
or
out
(bad)
leave
sub
js
mov
or
popf
int
popf
push
inc
dec
xchg
lods
movs
mov
jl
xchg
xor
ds
imul
push
jbe
push
xchg
outs
(bad)
aas
gs
dec
add
mov
ror
ret
fsubrp
rsm
addr16
ficom
lahf
xor
jl
mov
aas
sti
movs
je
add
fcom
push
enter
movs
std
mov
or
cmps
mov
sbb
add
mov
mov
xor
xchg
add
std
loop
mov
in
jle
xchg
mov
or
add
out
xor
xchg
xchg
hlt
xor
mov
bound
das
imul
dec
sbb
xor
jl
in
adc
cmc
ret
daa
stc
jge
dec
lods
(bad)
add
mov
mov
daa
into
and
(bad)
es
ins
retf
jns
loope
xor
pop
sub
dec
ficomp
loop
pop
inc
stos
jmp
inc
call
add
test
imul
pop
and
fadd
gs
je
mov
cmps
arpl
addr16
mov
and
mov
das
int
jp
dec
stos
cs
cmp
and
lods
jbe
loopne
mov
pop
sbb
adc
sti
dec
arpl
xchg
xchg
inc
xor
adc
and
mov
ins
mov
imul
jg
ror
jg
retf
add
hlt
ror
cmp
lods
sub
movs
push
push
pop
or
or
sub
push
lahf
ins
ret
sub
jp
mov
outs
cmp
leave
mov
xor
xor
pop
test
test
xchg
call
add
out
mov
mov
fadd
lods
adc
mov
inc
hlt
fisttp
loop
mov
and
(bad)
test
jb
int
mov
scas
lds
adc
ja
pop
outs
test
dec
int
cs
adc
inc
add
shl
inc
jae
ss
nop
cmp
mov
js
loop
dec
cmp
les
cwde
aam
dec
xchg
div
mov
aad
cmp
push
dec
add
mov
adc
sbb
bound
xchg
pop
aaa
nop
adc
mov
push
adc
fdiv
pop
push
cmps
inc
inc
pop
or
inc
sbb
xchg
sar
sub
xchg
adc
sub
xchg
loope
js
mov
ja
les
inc
out
jne
fdivr
outs
mov
movs
jmp
add
adc
xor
jnp
pop
push
adc
shr
shr
aad
(bad)
mov
inc
scas
lea
inc
push
dec
xor
call
inc
mov
scas
lahf
(bad)
ds
cmp
mov
das
in
add
xor
jae
push
addr16
in
add
in
loopne
jnp
add
inc
push
or
in
mov
lds
in
ja
inc
aad
and
je
shl
aad
inc
rcr
cmp
mov
mov
ins
(bad)
aam
sub
push
and
in
shl
or
lock
xor
test
imul
or
add
repnz
and
repnz
fcmovne
xchg
enter
jp
loopne
fidiv
imul
dec
mov
mov
mov
ds
movs
(bad)
in
inc
add
mov
cdq
mov
repz
push
imul
(bad)
into
xchg
sub
pop
rol
out
jne
lods
cmps
es
scas
dec
mov
imul
push
mov
push
inc
cmps
and
call
jl
popf
add
and
retf
pop
sbb
push
popf
rol
mov
or
fnstsw
mov
mov
mov
lock
jns
std
dec
cmc
jl
xchg
shr
sub
jne
std
mov
jp
icebp
ins
(bad)
jmp
ds
inc
fst
les
lea
sbb
push
aad
dec
xchg
mov
sub
push
test
pop
jo
pop
push
fimul
rcr
fisttp
ins
ss
arpl
or
cmp
js
imul
mov
mov
pop
mov
imul
push
mov
xchg
adc
inc
xchg
popa
ds
stos
mov
stos
rcl
fwait
ror
xchg
js
inc
and
push
jmp
shr
into
mov
daa
sub
rcr
push
in
mov
pop
push
mov
and
cmps
jae
cwde
cmps
stos
xchg
push
test
mov
jl
sar
repnz
test
ss
dec
scas
inc
movs
push
test
(bad)
ficom
dec
or
cmc
or
icebp
out
pop
sub
or
xchg
rol
call
push
push
jle
xor
(bad)
mov
mov
sub
out
adc
fcomp
xchg
out
dec
loope
cmp
(bad)
inc
mov
daa
xchg
loope
lea
push
adc
fst
add
jmp
mov
mov
pop
shl
push
shl
inc
cmp
xchg
xor
addr16
(bad)
repz
jne
jle
sub
ficom
out
cmc
cmps
push
jge
lods
ret
arpl
mov
icebp
dec
jno
dec
out
jecxz
sbb
jns
stos
(bad)
jl
jns
(bad)
int
xor
lods
sar
dec
int
movs
rcr
and
sub
pop
enter
ins
(bad)
mov
mov
sbb
repnz
mov
js
push
add
jle
jmp
ret
or
sub
add
sbb
fwait
stos
pop
jl
retf
adc
das
js
push
(bad)
xchg
adc
fiadd
mov
sbb
daa
ja
das
mov
js
dec
mov
enter
adc
shl
mov
dec
shl
out
adc
ins
xor
xor
pop
(bad)
imul
outs
adc
popf
shr
and
cmp
jbe
shl
and
aad
int3
mov
call
push
mov
stos
dec
retf
cwde
sub
gs
or
xchg
pop
cmps
sbb
or
sar
cmp
ds
mov
dec
inc
adc
mov
sub
cmp
enter
(bad)
inc
in
arpl
mov
mov
in
xor
repz
add
or
pop
or
adc
mov
jnp
int
mov
out
or
mov
cmps
mov
sbb
sahf
sbb
stos
dec
popf
aaa
push
xchg
pop
es
int
mov
push
fst
ficomp
jmp
or
js
sub
adc
ds
je
sub
sub
jl
inc
xchg
mov
test
mov
jbe
pushf
rol
ret
mov
jp
or
cdq
push
std
movs
and
call
test
push
xchg
clc
ins
into
iret
inc
xchg
xor
scas
retf
mov
mov
pop
cwde
out
cmp
shr
movs
pop
int3
xchg
cdq
mov
mov
add
mov
inc
and
fnstenv
loop
aas
imul
jl
int
test
loop
xor
mov
jmp
les
adc
mov
outs
mov
mov
shl
pop
jmp
jecxz
repz
fsqrt
xchg
fadd
push
jo
push
cmp
pop
add
pusha
dec
mov
movs
xor
push
stos
push
stos
cmp
repz
retf
inc
xchg
test
push
sbb
ins
xchg
dec
cmc
clc
cli
pop
lahf
and
rcr
inc
test
sub
(bad)
jne
rcl
(bad)
mov
cmps
or
(bad)
pop
aad
and
xchg
xchg
push
repz
cwde
dec
xchg
sbb
jle
imul
pop
into
xchg
mov
inc
and
cmp
shr
and
adc
lods
add
aam
dec
fadd
inc
add
sbb
lahf
xchg
push
imul
movs
ret
fwait
sub
rcr
out
dec
mov
push
inc
mov
mov
es
in
fnstcw
dec
sub
test
cdq
imul
leave
and
mov
cmp
retf
mov
arpl
xor
ret
es
xchg
jo
jp
lock
xchg
mov
pop
arpl
lock
fild
int
mov
nop
pop
mov
mov
mov
push
call
sub
out
jmp
xor
(bad)
mov
jo
push
leave
pop
xor
sbb
addr16
data16
xchg
sbb
pusha
call
xor
std
pop
cmp
or
into
jl
sub
cmps
mov
mov
int
dec
push
adc
(bad)
lock
in
cmps
pop
fsub
cmp
shl
in
pop
retf
mov
ds
inc
scas
xchg
xor
fadd
xor
sbb
movs
cmp
mov
cmp
fadd
fld
mov
xor
fs
pop
sbb
jb
and
out
cmps
fldenv
fwait
call
add
imul
movs
add
sti
jo
(bad)
in
add
es
cmp
jbe
sub
mov
and
xchg
mov
imul
ficomp
inc
or
iret
out
mov
mov
js
stos
rcl
lea
data16
add
loop
sbb
gs
fisubr
pop
jmp
shl
inc
push
imul
je
jecxz
stos
ficom
and
in
jae
xchg
add
push
mov
mov
sub
adc
in
call
ret
aam
pop
aas
ins
(bad)
ja
fdivr
cmp
in
mov
jns
adc
(bad)
fnstsw
jmp
out
fcom
retf
rcl
push
dec
dec
pop
xlat
jmp
add
or
xchg
fst
retf
test
cli
sub
out
fcomi
fnstsw
add
xchg
mov
pop
outs
cmps
xchg
mov
mov
push
or
cmp
and
mov
jno
in
adc
cmps
push
sahf
adc
jo
call
dec
cmc
rcr
inc
loopne
xor
call
fadd
or
pop
jge
stos
sub
jbe
inc
jmp
or
xchg
mov
inc
enter
out
gs
(bad)
stc
fwait
cmp
arpl
jmp
loopne
xchg
loopne
scas
and
std
or
push
push
xor
js
adc
popa
cmp
add
pop
mov
mov
jb
xor
and
dec
leave
inc
lock
getsec
inc
call
jnp
mov
test
inc
in
repz
cmp
mov
mov
lahf
lock
jno
xor
cwde
daa
mov
or
stos
movs
xor
rol
stc
xchg
mov
iret
sub
jmp
popf
adc
sahf
pop
lea
pop
and
test
jmp
add
sbb
dec
imul
mov
sbb
mov
dec
mov
arpl
cli
cmp
sub
jmp
jo
movs
call
mov
xor
ror
xor
shl
mov
movs
cli
lods
fsubr
pop
fistp
dec
sbb
jmp
call
mov
dec
cwde
pushf
gs
add
add
lods
add
xor
jns
js
lods
inc
cmc
jmp
xor
and
test
fisttp
repnz
fidiv
xor
xor
add
repz
jns
enter
push
(bad)
arpl
gs
fiadd
mov
or
stc
aaa
push
and
push
inc
push
scas
or
or
pop
or
or
push
sub
push
ror
add
push
and
jae
jmp
cmps
adc
aam
add
icebp
ss
jecxz
and
shl
scas
inc
or
push
ret
(bad)
adc
test
les
fadd
sbb
leave
scas
cld
fadd
aam
xchg
sub
aam
and
in
cmp
jne
mov
add
or
and
inc
frstor
add
loope
loop
xchg
sar
xor
xor
push
call
or
adc
push
cmps
sbb
mov
push
hlt
jl
sub
push
sbb
cdq
pusha
and
jge
or
jmp
js
(bad)
cs
sub
mov
cdq
mov
test
cmp
gs
movs
ss
dec
cmp
leave
cdq
pop
in
adc
sbb
or
les
jnp
sbb
js
popa
test
pop
icebp
push
jno
mov
popa
sbb
rcr
fcomp
jnp
jo
dec
adc
or
mov
ror
dec
cmp
mov
stos
shl
inc
sti
jno
test
nop
mov
xor
cwde
in
and
mov
xlat
shl
push
xor
adc
div
rcr
jmp
jno
xchg
aaa
std
dec
mov
(bad)
pause
mov
sbb
std
cmp
mov
js
or
push
jg
es
imul
call
pop
push
cmc
shl
push
cwde
fwait
mov
jno
jmp
sub
outs
loope
repnz
pop
bound
mov
daa
sub
lea
pushf
cdq
repnz
leave
ins
data16
mov
inc
xor
aam
xchg
(bad)
pop
in
sub
sub
mov
adc
cs
scas
jle
dec
or
cmps
mov
mov
or
adc
addr16
addr16
and
scas
loopne
jns
or
lea
test
in
adc
push
outs
mov
or
adc
loopne
mov
dec
fcomp
adc
add
fwait
add
rol
ret
push
psubusw
xchg
test
xchg
sbb
adc
adc
jmp
fst
stos
popa
pushf
jb
cmps
xchg
xchg
test
test
in
sub
or
cmp
je
call
pop
ins
test
test
mov
arpl
cmp
cmp
or
jae
data16
sub
dec
pusha
shr
js
xchg
test
out
lock
jne
(bad)
cvtps2pi
je
shl
out
dec
mov
fidiv
xor
movs
daa
mov
jmp
jmp
cmc
inc
pushf
(bad)
(bad)
jge
sbb
retf
aam
sbb
ins
retf
jmp
xchg
jb
loope
sar
dec
sub
lock
xor
add
cdq
sbb
dec
cmp
add
leave
add
adc
push
and
mov
xor
inc
adc
ss
xchg
jbe
dec
pop
std
inc
call
jmp
mov
lahf
xchg
popa
fst
xchg
test
(bad)
dec
xchg
pusha
mov
xchg
or
inc
mov
and
retf
loop
push
sub
jb
mov
push
or
in
(bad)
pushf
and
shl
ins
out
jae
test
ins
push
in
sbb
xchg
cmp
(bad)
in
adc
mov
push
sahf
add
xchg
dec
pop
(bad)
movs
jmp
jecxz
icebp
lds
mov
pop
or
test
ret
sub
cmp
dec
jae
ret
rol
mov
fs
in
das
movs
sbb
sub
call
mov
test
add
mov
inc
leave
xchg
and
mov
mov
mov
imul
push
leave
add
pop
out
popa
scas
cmp
int
fisttp
in
xchg
pop
ss
pushf
inc
cmps
cmps
mov
cmp
inc
jmp
rcr
cmps
cld
mov
mov
dec
inc
ins
in
lock
test
test
dec
sub
mov
out
xchg
cs
sub
mov
fidivr
stos
jo
rcr
aad
mov
mov
mul
cdq
xchg
mov
nop
(bad)
xor
dec
or
cmps
mov
test
cmps
ins
repnz
rol
and
xchg
cmp
popf
inc
out
xchg
xchg
mov
adc
arpl
xor
mov
ja
lods
sbb
mov
aas
mov
ror
and
mov
xor
in
loop
nop
pusha
sbb
dec
mov
js
fs
xor
xor
sbb
sub
into
sbb
aaa
(bad)
nop
mov
jno
fnstenv
lds
jle
(bad)
daa
sbb
iret
xchg
cmps
out
movs
mov
ss
fucomi
stos
hlt
sbb
inc
data16
sbb
cmp
jo
mov
lds
out
mul
sub
and
cmp
mov
cwde
mov
call
aaa
cmp
dec
scas
mov
and
out
ins
mov
repz
outs
jmp
and
jl
test
repnz
pop
inc
sub
push
or
sub
mov
push
rcl
cmp
sub
dec
sbb
sbb
xor
cmp
mov
adc
pop
pop
push
(bad)
mov
xor
test
int
inc
and
(bad)
mov
(bad)
retf
or
int3
mov
mov
addr16
jno
addr16
les
repnz
xor
push
call
dec
pop
aad
push
adc
(bad)
(bad)
mov
ret
jg
pushf
nop
imul
hlt
dec
pop
xor
(bad)
cld
fsub
push
mov
arpl
inc
mov
lea
mov
xlat
mov
in
in
lds
or
seta
enter
push
jno
sbb
cmp
lock
add
mov
loopne
inc
push
jmp
cli
aas
pop
and
add
or
pop
mov
jge
mov
xchg
pop
xchg
cmps
pop
inc
test
or
hlt
inc
xor
ds
fstp
dec
jle
mov
(bad)
cdq
xchg
scas
jbe
jg
lods
xchg
call
push
je
mov
mov
das
aas
test
push
xchg
sbb
fmul
dec
jnp
push
cli
pop
cmp
(bad)
cld
test
dec
mov
mov
addr16
xchg
jne
not
adc
mov
cmp
clc
pop
xor
add
sti
push
cmp
pop
ins
cmc
jo
xor
cmp
add
out
call
jb
push
pop
mov
lock
mov
mov
call
rcr
jbe
cmp
(bad)
and
cwde
mov
scas
inc
(bad)
cmp
stc
in
repz
retf
lock
jns
sbb
ss
sti
push
ret
ret
inc
mov
or
test
inc
pushf
shl
cmps
cmp
js
mul
into
adc
ins
jmp
or
cmp
mov
mov
mov
xchg
mov
jno
hlt
aam
sbb
push
js
push
pusha
and
add
or
inc
xlat
mov
or
inc
ror
ja
adc
in
push
cmp
mov
cmp
cmp
xor
les
jne
mov
and
scas
dec
rol
jecxz
outs
pop
jl
cdq
jbe
lea
fcomp
dec
mov
idiv
inc
sbb
and
aaa
(bad)
pushf
mov
cmp
stos
cwde
cmc
dec
stos
push
mov
or
fistp
gs
jo
shr
xchg
mov
into
test
fwait
btr
aas
cmp
or
push
gs
dec
ret
xor
nop
push
xchg
mov
and
les
cmp
sub
mov
daa
test
outs
cli
outs
popf
in
xchg
fist
nop
and
sbb
inc
inc
repnz
test
scas
je
jno
push
pop
jp
jae
nop
mov
jge
xchg
loopne
mov
mov
mov
mov
sub
nop
sbb
sbb
push
std
dec
dec
dec
test
leave
lods
jp
ins
inc
xor
ins
mov
scas
addr16
jbe
adc
adc
jp
sbb
xchg
rcr
jecxz
aam
xor
lds
call
push
cmovs
push
jo
pop
or
pop
in
rcr
mov
call
fadd
and
(bad)
mov
dec
rcl
mov
add
pop
or
call
inc
jmp
and
mov
inc
daa
cli
inc
mov
in
jle
sbb
cwde
dec
nop
or
sbb
and
cmps
mov
pop
in
sub
std
mov
lahf
push
int3
sub
lods
dec
add
popf
or
mov
xchg
enter
jp
gs
pop
enter
cmp
ja
xlat
fs
inc
push
lock
(bad)
and
jge
xor
push
in
dec
leave
aas
loopne
xchg
aad
test
push
dec
add
pop
(bad)
and
(bad)
fdivr
mov
adc
mov
dec
call
sti
sbb
movsx
repz
xchg
shl
fcomp
loop
shl
push
pop
jmp
cmp
push
push
adc
test
pushf
jmp
fisttp
movs
and
mov
out
sub
push
cmp
lahf
and
outs
pop
(bad)
mov
xchg
push
scas
aad
lock
and
fs
dec
adc
popa
mov
mov
retf
jo
lods
lods
js
inc
pop
mov
xor
adc
clc
lea
aad
mov
test
rcl
into
jno
lahf
xchg
jbe
imul
(bad)
sbb
inc
mov
pop
add
ret
lock
and
cmp
outs
xor
int3
mov
int3
psrld
mov
cmp
mov
js
js
cmp
inc
mov
jae
sbb
stos
in
mov
nop
stos
mov
xor
loop
test
or
adc
je
outs
int
scas
push
mov
xor
cmp
(bad)
out
xchg
jo
jnp
push
push
cs
jno
test
mov
add
out
push
inc
and
inc
dec
pop
mov
call
xlat
mov
push
mov
inc
lods
adc
and
inc
adc
movs
pop
xor
cli
add
(bad)
fcomip
cmp
out
jb
inc
dec
jp
push
adc
mov
pop
pop
bound
mov
outs
fchs
jbe
jno
scas
mov
add
lock
jp
pop
mov
pop
push
ret
xchg
xchg
pop
es
sahf
cmp
xor
lea
xchg
lea
shr
jge
or
fadd
lahf
jns
xor
dec
push
in
sub
jg
dec
jb
and
or
scas
dec
mov
inc
mov
or
mov
cmps
gs
inc
add
or
stos
pushf
call
ss
cmp
jg
in
dec
xchg
xchg
retf
mov
xor
pop
sbb
sub
repz
xor
daa
(bad)
imul
pop
loopne
mov
aad
out
mov
loope
jo
inc
adc
daa
jae
mov
mov
dec
loop
cmp
mov
rcr
xor
cli
adc
mov
popf
loopne
jp
inc
stos
cmps
ins
mov
xchg
jae
jg
xchg
fs
mov
adc
scas
sub
fnstenv
add
ret
inc
push
inc
movs
lods
push
cmps
mov
outs
popf
gs
or
jne
(bad)
xor
jge
dec
inc
(bad)
nop
(bad)
xchg
mov
int3
dec
imul
ja
pop
(bad)
fcomp
aas
popa
dec
adc
cmp
test
jmp
retf
add
fisubr
out
out
(bad)
mov
repz
into
shl
ret
sbb
addr16
shr
ins
mov
fisttp
dec
daa
sub
xchg
fwait
movs
dec
js
movups
loop
push
push
fsubr
popf
add
fidiv
jge
pop
ss
movs
sub
in
mov
dec
pop
out
(bad)
jmp
push
sub
ds
scas
jns
inc
jg
(bad)
fstp
repz
cwde
dec
out
scas
arpl
out
loope
stos
mov
daa
mov
cmp
repz
fist
aaa
(bad)
sub
jp
mov
jp
call
add
add
dec
inc
jmp
push
adc
mov
ins
test
or
sub
ins
xchg
jb
inc
mov
sbb
das
mov
call
aad
adc
repz
rcr
inc
mov
add
movs
aas
sbb
jp
add
sub
shr
mov
or
cs
mov
pop
mov
gs
xor
in
pop
outs
aad
idiv
xchg
sbb
jge
iret
add
sbb
rcr
movs
(bad)
jle
inc
and
dec
addr16
jmp
dec
lods
xchg
cld
nop
push
sbb
aaa
and
sbb
mov
clc
or
push
pop
add
adc
xchg
test
and
mov
mov
in
ss
add
cld
in
xlat
mov
repnz
stos
xor
retf
lea
popf
mov
test
das
mov
punpcklbw
add
xlat
iret
(bad)
ss
call
or
std
fisub
in
dec
fiadd
in
jnp
fst
mov
mov
cwde
(bad)
mov
cmp
mov
(bad)
sub
gs
adc
rcl
aaa
adc
imul
xor
pop
ret
fisttp
and
int3
add
jnp
loope
push
dec
mov
ftst
js
inc
adc
outs
ins
stos
add
lods
sbb
pop
or
push
(bad)
sbb
pop
or
in
cmp
stos
dec
cmp
mov
add
xchg
inc
ret
jmp
pop
push
pop
xor
comiss
push
pop
hlt
dec
add
lock
sub
sahf
inc
sub
jo
xlat
xor
fstp
mov
pop
sub
xchg
test
clc
enter
xchg
in
(bad)
adc
cmp
add
push
xor
pop
mov
jae
pop
cmp
out
push
not
out
in
test
and
xchg
cmp
mov
jb
mov
mov
and
mov
push
lahf
xor
fldenv
xchg
jmp
inc
fild
rcl
and
pushf
jbe
mov
cmp
adc
mov
cmp
sbb
dec
add
push
js
xor
mov
push
sbb
ins
and
in
not
or
inc
popf
sub
fmul
pop
mov
rcl
ins
pop
(bad)
sub
mov
repz
cmps
not
(bad)
xchg
out
les
(bad)
test
add
and
neg
mov
addr16
js
retf
stos
shl
mov
imul
inc
mov
inc
adc
xchg
ins
addr16
add
es
sbb
fnsave
shl
xchg
out
aaa
(bad)
bound
cmp
mov
mov
loop
and
and
sbb
pop
popf
hlt
and
in
pop
cmp
ss
xor
cmp
sbb
retf
ins
sbb
fwait
xor
hlt
das
outs
mov
adc
cli
and
sahf
cmp
mov
and
add
stos
in
out
push
loopne
mov
sbb
cmp
sbb
sbb
pop
lock
mov
and
jl
jmp
xchg
cmp
retf
js
push
xchg
sar
popa
rol
cmp
les
inc
ins
int3
ficomp
dec
push
and
cs
or
jge
xor
xchg
retf
jbe
inc
adc
jne
mul
cdq
mov
idiv
and
cmp
lods
mov
mov
push
dec
cld
dec
or
test
ins
clc
fldenv
cli
xchg
pop
jg
mov
add
mov
lea
xchg
mov
mov
ss
jns
push
out
std
mov
mov
xchg
xchg
xor
xchg
pop
js
inc
and
ja
inc
adc
mov
cmp
jns
push
jecxz
clc
push
shl
pusha
cmc
scas
nop
fcmovnbe
ins
jb
xchg
pushf
pop
inc
pop
xchg
inc
add
cwde
pop
mov
clc
lea
inc
adc
mov
fbld
push
xchg
rep
mov
repz
ds
fwait
(bad)
dec
ficomp
jge
inc
pop
add
mov
jecxz
scas
sar
jmp
daa
mov
or
inc
inc
xor
xchg
or
inc
out
test
inc
popf
or
mov
and
int
cmp
daa
inc
call
mov
push
cdq
test
ss
scas
stos
xor
push
and
sub
leave
int
loop
or
data16
cli
xor
aaa
or
xchg
repz
jae
lea
push
mov
dec
std
fstp
cld
or
leave
popa
pop
idiv
pop
das
sub
cli
mov
push
push
stc
sub
test
xchg
jge
(bad)
mov
xchg
and
xor
mov
cdq
jl
cmps
push
xchg
daa
stos
popf
jmp
push
repnz
sub
dec
popf
test
or
add
test
test
mov
push
xor
shl
lahf
xchg
daa
xchg
pop
sub
movs
xor
pop
int
pop
mov
xchg
mov
xchg
movs
or
js
in
jecxz
push
jo
mov
adc
jmp
mov
ror
in
push
mov
xor
std
sub
sub
test
inc
xchg
das
pop
or
movs
sahf
fcmovbe
push
or
retf
push
xchg
pop
sbb
(bad)
adc
xchg
inc
addr16
mov
in
dec
jge
xchg
mov
ins
cmp
sbb
mov
shl
rcl
in
xlat
mov
push
or
iret
jno
cld
fldenv
push
push
in
movs
out
outs
push
dec
mov
ror
jl
ror
dec
mov
popa
cmps
test
(bad)
and
(bad)
sahf
test
(bad)
xlat
scas
int3
pop
mov
lds
add
test
push
rcl
push
loopne
shr
in
or
repnz
stos
pop
sub
ja
mov
xchg
ret
jb
scas
jmp
cld
dec
and
fimul
sub
sub
pinsrw
xchg
arpl
jecxz
inc
cdq
mov
adc
fnstcw
cmp
sub
push
xchg
sub
push
enter
xchg
je
dec
sub
add
mov
jl
pop
outs
les
mov
pop
cmp
scas
sbb
inc
lahf
pop
and
not
add
xor
addr16
ret
push
ins
cmp
mov
test
pushf
adc
xor
bnd
outs
pop
gs
mov
out
retf
mov
xor
and
sti
lods
mov
rcl
stos
jnp
(bad)
xlat
xchg
lds
cmp
pop
mov
sub
mov
ficomp
out
mov
pop
jmp
push
add
or
pop
int
dec
out
ret
mov
sub
cmp
mov
add
pop
mov
fbld
fcomp
xchg
xor
push
sub
test
shld
adc
test
jnp
adc
movs
rol
mov
daa
push
lds
push
cmp
jle
or
lock
sbb
xchg
adc
nop
(bad)
fistp
mov
inc
jnp
mov
inc
enter
or
adc
pushf
push
imul
fisubr
xor
jl
scas
stos
js
sbb
dec
cmp
call
aaa
fs
sub
inc
ds
jns
jno
outs
add
push
int
pushf
add
stos
loope
imul
fwait
idiv
(bad)
inc
push
mov
dec
mov
cmp
push
jmp
dec
push
pop
inc
inc
shl
push
lods
xor
pop
mov
jl
loop
scas
sti
cmc
push
pop
hlt
dec
out
cld
dec
mov
or
sar
dec
xor
(bad)
cdq
in
mov
movs
dec
mov
sbb
add
jmp
rcr
mov
mov
ja
iret
mov
int
imul
out
xchg
call
shr
lahf
imul
daa
(bad)
imul
or
(bad)
and
xchg
xor
pop
in
outs
sbb
stos
adc
inc
pop
xchg
sub
cld
(bad)
aad
in
adc
stc
add
mov
pop
daa
mov
cs
cmps
call
sbb
call
shl
(bad)
xchg
or
xor
movs
lahf
xor
push
call
fyl2x
repz
ins
repz
cmp
xchg
test
add
repz
cmp
int3
inc
inc
fcom
fcomip
jo
outs
xor
cmps
adc
pop
mov
loop
out
inc
xchg
cwde
rcl
xor
cmp
shl
les
clc
or
das
(bad)
aaa
or
retf
outs
jmp
aaa
mov
fidiv
sbb
cmp
xor
jae
or
push
push
mov
or
jns
imul
xor
add
dec
icebp
es
dec
pop
xchg
cmc
retf
call
rcr
xor
mov
(bad)
mov
out
aas
xchg
pusha
inc
cwde
(bad)
push
out
test
xor
cmp
sub
bound
add
mov
mov
nop
je
xor
ja
fnstenv
sbb
ret
fwait
stos
xor
iret
and
push
out
daa
and
adc
add
push
dec
sbb
gs
(bad)
lods
adc
psubb
and
in
jle
(bad)
xchg
or
push
out
mov
inc
push
add
sub
or
pop
push
lods
add
je
inc
stos
mov
lods
(bad)
stc
cmps
mul
cmp
mov
adc
(bad)
and
or
mov
lds
sbb
sub
pop
inc
es
pusha
fdiv
mov
jmp
mov
mov
gs
sub
inc
(bad)
mov
test
jo
mov
add
imul
inc
(bad)
xchg
loopne
adc
jo
test
popa
xchg
mov
mov
push
fdiv
xchg
sbb
and
or
fsub
das
test
xor
cmp
enter
xor
push
pusha
test
pop
xor
sbb
cs
(bad)
movs
mov
add
imul
pop
retf
nop
mov
lds
mov
fldenv
into
pop
dec
mov
push
adc
ss
jmp
ret
mov
and
mov
je
push
(bad)
sub
add
push
mov
in
push
and
ins
stos
(bad)
mov
push
pushf
and
dec
push
add
(bad)
pop
adc
jne
mov
dec
pop
scas
(bad)
jne
scas
push
mov
(bad)
cld
aam
pop
adc
gs
xchg
lods
sbb
inc
pop
mov
and
in
ds
sar
call
mov
lods
push
and
cmp
(bad)
outs
sub
and
dec
and
sti
and
loop
fsubr
push
arpl
push
ds
jmp
push
dec
adc
mov
inc
sbb
lods
lahf
shr
jbe
xor
xchg
push
(bad)
cdq
popf
cdq
fs
(bad)
in
in
ds
inc
xchg
add
jns
dec
cld
dec
icebp
out
mov
or
pop
pop
sbb
push
mov
mov
cmp
test
aas
sbb
mov
pop
out
(bad)
push
fidivr
cmp
cli
addr16
lock
mov
fadd
xor
push
aad
xchg
imul
sti
push
fcmove
xchg
xchg
cs
or
(bad)
and
inc
dec
sahf
add
xchg
lods
jno
je
mov
popf
dec
stc
add
bound
mov
je
mov
(bad)
mov
jg
int
jns
push
and
in
add
sbb
sahf
xor
pop
rol
cdq
(bad)
int
mov
sbb
or
test
and
mov
sbb
dec
mov
mov
sub
mov
mov
push
pop
(bad)
repnz
sbb
and
push
movs
outs
mov
gs
lods
dec
idiv
push
sbb
movs
mov
jmp
mov
adc
mov
push
add
jge
push
test
rol
and
mov
inc
push
fsub
ds
cmc
shl
add
nop
inc
fadd
test
(bad)
std
loopne
sbb
inc
jge
cmp
add
push
stos
push
(bad)
repz
jg
add
inc
xchg
repnz
add
aaa
xor
mov
retf
jle
mov
in
xor
jp
sub
sbb
inc
(bad)
pop
jp
mov
jge
cli
mov
lods
out
mov
int3
les
lock
retf
adc
loop
(bad)
xchg
add
rcr
xchg
fs
or
jmp
cmp
sub
retf
xor
scas
inc
jmp
xor
pop
(bad)
xor
push
daa
out
push
test
int3
stc
nop
pop
cmp
pop
mov
out
pop
mov
addr16
jbe
pushf
fmul
push
add
fisubr
lahf
mov
jmp
or
fs
xchg
add
mov
loop
fimul
(bad)
int3
out
popf
enter
cmp
pushf
add
inc
mov
mov
(bad)
fs
mov
adc
neg
mov
je
ins
out
je
add
jbe
loope
enter
inc
mov
outs
and
or
adc
scas
out
loope
sar
xlat
(bad)
mov
fsubr
aad
(bad)
div
sbb
add
sub
sahf
jp
xchg
jns
adc
pop
and
dec
mov
inc
outs
in
cs
sub
mov
mov
movs
test
ss
add
call
sbb
mov
push
sbb
(bad)
sbb
jno
pop
mov
mov
cdq
inc
pop
es
jb
jmp
lods
cmps
or
sub
push
daa
xchg
pop
pop
xchg
xor
push
sub
adc
push
pop
retf
jecxz
lods
pop
add
jmp
pop
xchg
(bad)
call
retf
inc
inc
pop
jbe
lock
inc
or
sahf
add
jp
cmp
dec
push
js
rol
es
shl
mov
das
push
sbb
mov
test
pop
movs
or
fcmovnb
and
test
clc
mov
(bad)
xchg
pop
fdiv
and
jle
add
cmp
in
je
mov
pop
(bad)
cmp
pop
mul
mov
and
dec
inc
fucomip
mov
mov
cli
cli
xor
push
jne
mov
jae
dec
push
cmps
aas
call
inc
enter
pushf
jb
pop
or
mov
test
pop
std
into
leave
push
push
loopne
mov
inc
jb
sub
xor
fwait
xchg
push
lods
iret
xor
aam
mov
arpl
in
outs
daa
nop
dec
dec
push
adc
inc
clc
or
push
aaa
(bad)
test
jbe
fcmovb
adc
mov
inc
cmp
ins
mov
push
mov
mov
test
or
cld
mov
jmp
gs
mov
(bad)
imul
inc
xchg
cmc
add
jno
jle
pop
push
stos
sub
and
in
clc
sbb
push
mov
not
pop
mov
push
and
adc
arpl
ja
add
mov
cmp
mov
test
and
and
push
mov
sub
lods
mov
mov
call
icebp
push
sbb
enter
mov
jge
es
mov
cwde
sub
jmp
pop
stos
jmp
dec
shl
out
cmc
js
push
push
adc
mov
add
repnz
inc
out
mov
xchg
pop
ins
(bad)
push
xchg
std
cmp
cli
sub
cmp
xor
push
sbb
loop
sti
sub
in
cmp
shr
inc
xor
mov
sub
xchg
in
sbb
sub
sbb
popa
cmp
dec
addr16
adc
aas
aaa
fcomp
inc
call
leave
push
xor
mov
jae
icebp
mov
aam
push
mov
xchg
adc
push
popf
xor
test
sub
neg
fwait
mov
mov
add
repz
mov
bound
loop
outs
jp
push
push
(bad)
fcom
pusha
imul
xor
enter
gs
jl
sub
icebp
dec
add
inc
mov
mov
nop
mov
fwait
cli
(bad)
lea
rcl
xchg
pop
sub
mov
hlt
mov
mov
mov
cmp
add
lock
div
out
and
stos
out
dec
mov
jp
cmp
inc
pop
(bad)
cli
and
stos
push
test
jl
cmp
add
aas
jns
add
test
and
jae
xor
push
inc
mov
cmp
mov
test
out
in
les
mov
rcr
jmp
int
ror
iret
and
cs
sbb
icebp
sahf
xchg
test
and
icebp
cmp
cmps
and
jae
inc
in
dec
retf
xlat
cs
lahf
retf
and
pop
and
push
add
dec
retf
fs
mov
xchg
jmp
inc
inc
inc
mov
(bad)
mov
sbb
push
outs
rcr
dec
mov
adc
sub
cmp
popa
push
xchg
nop
movs
cmp
sub
pop
icebp
gs
loope
out
add
or
xchg
mov
adc
or
inc
lods
add
xor
pop
fucomip
popa
not
mov
int3
outs
and
xchg
lock
inc
adc
sub
movs
pop
push
sub
mov
imul
stos
push
xlat
xchg
adc
mov
dec
sbb
jne
out
xchg
fiadd
and
push
call
dec
mov
and
(bad)
ins
xlat
sahf
inc
cmp
gs
es
ds
fmul
lods
in
inc
scas
imul
loope
adc
xchg
mul
pop
dec
add
xor
(bad)
fcmovu
sub
retf
shr
leave
(bad)
dec
jbe
inc
adc
loop
mov
and
mov
aam
ret
sbb
jmp
ins
retf
outs
dec
in
or
sub
push
xchg
enter
mov
jne
iret
or
sub
call
in
(bad)
fldz
out
lea
es
fs
leave
xor
mov
mov
cdq
pop
ins
stos
mov
shl
ins
stos
fstp
sub
add
in
lea
arpl
or
pop
aaa
mov
cmp
leave
push
test
push
in
jbe
mov
push
in
js
out
iret
sub
pop
lds
neg
loopne
cmps
call
add
adc
xchg
rcr
popf
pop
arpl
ja
retf
and
iret
xor
sti
and
shr
and
mov
stos
scas
aas
ins
adc
imul
xor
out
inc
jp
scas
jge
dec
inc
(bad)
loop
aad
jl
(bad)
push
fst
leave
not
ja
and
ds
pushf
lea
pop
fstp
xchg
pop
and
xchg
or
mov
push
icebp
lock
dec
mov
cmp
repnz
or
mov
dec
push
rcr
cmp
pop
je
cli
mov
xor
les
or
and
pop
jb
aad
xlat
scas
jns
dec
mov
das
scas
daa
cmp
gs
jnp
int
inc
fist
(bad)
or
dec
dec
push
or
out
inc
in
mov
mov
test
out
or
add
push
inc
stc
push
push
cwde
mov
inc
mov
pop
xchg
rcr
xchg
ret
push
xchg
ja
mov
mov
daa
ja
push
pop
dec
loopne
inc
pop
pop
adc
mov
inc
dec
movs
jae
mov
sbb
lea
mov
push
push
les
or
(bad)
add
call
xchg
mov
push
adc
les
in
or
movs
jns
ror
jae
mov
bt
rcr
mov
push
stos
adc
and
lea
sbb
jp
jle
daa
sub
mov
daa
mov
mov
and
xor
aaa
pop
fdiv
xor
inc
hlt
or
cmp
inc
sti
pop
ret
loope
aas
xchg
dec
imul
lods
iret
jo
push
sub
push
imul
(bad)
fstp
pop
pop
and
(bad)
aas
xchg
dec
jbe
mov
mov
push
inc
in
adc
mov
inc
fst
out
je
cmp
test
popf
sub
and
sbb
loopne
arpl
loope
imul
push
jle
je
stos
pushf
pusha
icebp
fisttp
jge
stc
or
mov
mov
jnp
jnp
(bad)
(bad)
xchg
sub
imul
dec
jb
shl
mov
mov
inc
cs
sub
aaa
xor
xchg
mov
push
aaa
inc
icebp
lods
sub
bound
enter
inc
mov
mov
arpl
mov
out
inc
adc
or
dec
and
test
jmp
in
pop
lds
mov
and
adc
or
shl
sub
push
test
int
hlt
sti
pop
fsin
xchg
rcr
jae
sbb
je
or
test
dec
les
je
dec
push
mov
ror
ins
shl
add
aam
xchg
push
in
pop
mov
ds
sub
pop
push
push
in
jo
jmp
mov
mov
es
sub
call
jle
enter
cmc
adc
jne
cmp
fiadd
ret
cli
and
into
idiv
sub
xor
nop
mov
and
or
in
movs
es
mov
cmp
cmc
pop
faddp
out
aad
out
sub
push
cmp
aam
int
call
popf
shr
jecxz
pavgw
pop
or
add
mov
mov
lahf
and
adc
push
add
push
cmc
add
mov
cmp
add
sub
xor
push
sub
outs
pop
into
sub
dec
jp
jle
pop
stc
mov
lods
scas
loope
sbb
das
fimul
jg
add
imul
jne
std
into
pop
mov
xor
and
adc
loopne
push
mov
std
inc
sub
aas
leave
pop
mov
push
ins
pop
xor
or
repz
stos
movs
add
xchg
lock
pop
fidivr
dec
jns
sub
aad
adc
fcmovnu
pop
mov
push
(bad)
xlat
in
or
mov
(bad)
jge
aaa
call
cdq
call
in
sbb
push
cmp
jecxz
mov
add
sbb
(bad)
loopne
sub
fisubr
jg
push
mov
mov
test
cmp
jae
mov
stos
popf
or
repnz
cmp
jnp
jl
add
mul
and
dec
mov
pop
retf
fadd
and
fcmovbe
push
push
test
repnz
(bad)
jp
ss
xchg
leave
cmp
cli
adc
pusha
sub
fmul
or
push
shr
imul
fmul
cmps
lock
lods
rcl
not
mov
adc
xor
adc
mul
and
movs
add
mov
dec
xchg
push
call
push
mov
and
fs
cmp
or
leave
out
mov
jecxz
clc
out
aas
lahf
push
icebp
add
je
bound
mov
sti
pop
dec
lods
mul
cmp
sub
cmps
mov
aaa
sbb
cwde
dec
cmp
test
jecxz
or
(bad)
movs
aam
cmp
xchg
movs
mov
pop
cmp
push
outs
out
mov
dec
push
xor
xor
ret
mov
sbb
jge
stos
test
pop
ds
or
hlt
push
fcmove
(bad)
outs
rcr
addps
pop
mov
sub
pop
(bad)
xchg
imul
xor
iret
jp
push
jmp
cmp
fcmovbe
push
push
cmp
and
xchg
mov
fnstsw
nop
(bad)
sti
mov
pop
adc
test
jns
icebp
pop
cmp
repz
mov
stos
xchg
aas
int3
mov
and
pop
jae
sub
jne
add
mov
mov
sub
push
mov
bound
xor
push
push
xchg
and
cs
push
jp
adc
cmp
push
loop
nop
mov
ror
not
ret
repnz
shl
mov
ss
push
xchg
add
xchg
sub
mov
hlt
rcl
jmp
mul
adc
sbb
nop
inc
(bad)
lds
adc
push
shl
and
cmps
and
pop
icebp
sbb
jmp
inc
ret
fdivr
xchg
inc
xchg
xchg
cmp
mov
scas
jae
loope
loope
(bad)
sar
sub
jne
adc
jae
cdq
dec
jmp
imul
pop
mov
out
xor
add
xchg
and
and
mov
push
(bad)
movs
mov
or
shr
xchg
emms
sub
test
adc
cmp
adc
mov
xor
call
fwait
ins
enter
mov
ds
sbb
and
jmp
popf
jle
and
and
cmp
jns
lea
mov
in
cmc
popa
jbe
mov
and
aad
or
xchg
inc
xlat
and
pop
mov
in
gs
mov
push
cmp
cvttps2pi
fsubrp
fadd
xchg
scas
mov
div
loope
and
call
add
and
retf
mov
leave
lods
rol
test
xor
in
mov
ins
loope
iret
push
ss
lahf
xchg
jb
cdq
dec
lods
mov
pop
sub
das
cli
inc
mov
dec
jecxz
popf
push
pop
repz
pop
push
retf
ror
shl
std
cs
adc
cli
outs
sahf
jl
mov
je
cmc
addr16
push
mov
addr16
stos
(bad)
call
dec
dec
cmc
jae
sub
or
cmps
movs
pop
fbstp
js
ja
mov
(bad)
sbb
mov
scas
xor
call
mov
out
test
sbb
jg
dec
mov
sbb
mov
test
push
ret
movs
pop
mov
mov
scas
xchg
mov
aad
cmp
jge
xchg
mov
pop
dec
adc
pop
movs
js
loopne
ret
gs
mov
ins
xchg
stos
xor
int3
or
lock
cmps
inc
mov
in
stos
cmp
add
xchg
mov
fucomi
and
es
xchg
and
xchg
pusha
xchg
ror
es
retf
mov
push
xchg
add
dec
rcr
xor
test
(bad)
xchg
lods
jg
pusha
cmc
jns
push
test
xchg
adc
enter
adc
pop
(bad)
(bad)
inc
fadd
cmp
cmc
stos
shl
mov
ins
xlat
jge
aas
sar
enter
aad
cmps
xor
jg
push
push
sub
mov
ror
fild
dec
sahf
ins
scas
shl
mov
stc
test
in
and
gs
out
cmp
cmp
cdq
(bad)
or
int3
ja
div
xor
inc
mov
out
(bad)
lock
cmp
inc
and
stc
and
mov
mov
fidivr
fnstenv
pop
or
daa
or
jecxz
cmp
add
pop
dec
repnz
mov
adc
stos
sbb
sbb
stc
sbb
or
shl
ficom
rcr
idiv
mov
and
movs
jo
rol
nop
xchg
repz
int
iret
lea
adc
(bad)
and
in
jno
xchg
cmps
lea
mov
mov
pop
popf
addr16
loop
add
jne
adc
cmps
mul
pop
sbb
push
inc
mov
nop
(bad)
push
jl
jno
mov
pop
out
xchg
ret
in
mov
mov
push
mov
push
sub
mov
das
retf
lods
xchg
push
shl
or
pusha
cmps
push
pop
cmp
dec
cmps
pop
sub
push
fs
ins
ja
jne
xchg
mov
and
sbb
int3
dec
xor
std
dec
jo
mov
mov
jo
out
cld
call
lods
inc
int
in
push
adc
mov
fcomp
or
js
loopne
data16
mov
inc
mov
mov
lds
jo
inc
icebp
xlat
sub
clc
dec
or
or
fisub
cli
retf
mov
and
pusha
nop
js
add
sbb
xor
or
cmp
jge
sti
pushf
les
stos
xor
jl
mov
cwde
repnz
xchg
loope
ins
std
mov
mov
mov
jne
sub
arpl
pop
xchg
cmc
and
es
adc
and
jp
push
cs
mov
hlt
adc
fcomp
addr16
je
iret
add
push
sbb
(bad)
dec
fwait
pop
or
pop
bound
lea
inc
hlt
test
and
enter
cmp
dec
xor
pop
dec
inc
mov
mov
xor
jnp
jo
mov
pop
cli
xor
(bad)
xchg
in
xor
popa
aaa
add
test
pop
loop
gs
push
inc
les
scas
or
(bad)
adc
xor
xor
cmp
cdq
sub
pop
loop
jnp
mov
xor
push
fdivr
jnp
nop
stos
imul
jp
xchg
inc
hlt
sti
arpl
js
add
or
or
cmp
jg
add
unpckhps
repnz
lock
pushf
cmc
loopne
cmp
jmp
ds
(bad)
je
add
les
lahf
stos
ret
jle
mov
out
mov
sbb
jl
pop
retf
add
mov
push
push
xor
push
dec
mov
mov
out
dec
inc
jne
sti
xor
jmp
pop
adc
(bad)
xchg
inc
adc
push
mov
idiv
ss
sbb
push
cmp
test
cmc
mov
test
dec
fadd
mov
mov
ja
xor
les
test
out
cdq
sbb
add
jmp
mov
dec
test
pop
mov
sub
add
xor
adc
outs
jp
cmp
and
es
out
mov
jl
mov
mov
sbb
sub
mov
mov
fidivr
mov
out
lods
dec
imul
pusha
test
xchg
push
push
stc
pop
add
fisub
or
jne
lea
mov
lods
pop
mov
shl
jl
ja
cmp
and
cmp
pushf
jge
add
inc
ja
fisub
inc
in
xor
outs
fadd
jecxz
jecxz
jmp
int
dec
lods
in
loopne
je
or
xor
shr
pop
jb
jg
div
pop
inc
icebp
loope
or
mov
cmps
mov
jg
sbb
push
(bad)
rcr
or
adc
aam
cmp
xchg
lahf
inc
std
loope
xchg
mov
jg
add
mov
cli
inc
xchg
inc
arpl
add
jl
mov
mov
out
les
adc
fs
loop
pop
jp
adc
jno
inc
test
jne
imul
retf
int3
cli
or
jmp
jmp
push
pop
(bad)
ins
test
push
into
hlt
jb
mov
imul
pop
rcr
stc
mov
pop
in
cmp
jb
inc
stos
daa
test
and
(bad)
cld
out
mov
lea
loopne
not
out
popa
arpl
imul
fbld
adc
xchg
iret
xchg
jp
scas
ja
cmp
sbb
gs
fsub
cmps
movs
cmps
shr
mov
cs
scas
pop
sub
mov
xchg
cld
addr16
xchg
or
pushf
mov
jae
pop
lods
ja
or
fisttp
fld
out
jo
mov
jp
jl
popf
das
ins
dec
loop
sbb
test
jmp
push
push
add
loop
xchg
jp
ss
out
(bad)
repz
int
cmp
xchg
jge
jo
dec
inc
inc
adc
fwait
iret
cld
out
lds
mov
jnp
(bad)
xor
mov
mov
xor
adc
test
cli
ret
push
mov
xor
jmp
rcl
retf
add
push
jecxz
and
inc
cli
sub
jmp
arpl
bound
call
sbb
stc
test
cmp
mov
dec
xchg
jbe
pop
out
xor
add
sti
shr
push
push
or
jmp
stc
(bad)
pop
add
push
dec
jmp
in
ffreep
call
jae
mov
es
loopne
fldenv
push
pop
fisttp
mov
xor
or
xlat
pop
xchg
sub
dec
xchg
sbb
pusha
adc
jmp
mov
push
adc
stc
push
sti
nop
xor
dec
daa
cmp
sar
cwde
stos
aaa
xchg
inc
aaa
repz
movs
imul
shr
sub
add
retf
es
mov
push
jmp
dec
push
xchg
ins
dec
xchg
jno
shr
dec
mov
imul
add
popf
hlt
ret
mov
(bad)
aas
in
bound
sar
data16
jmp
loope
jg
inc
mov
imul
inc
in
loop
sub
enter
cmps
(bad)
out
sub
rcr
pusha
mov
rcl
sub
xchg
sahf
cmc
enter
cmps
out
inc
or
dec
xor
aad
test
cli
sbb
aam
mov
push
fst
ret
mov
adc
cli
mov
pop
jmp
mov
pop
push
cmp
fbstp
mov
dec
cwde
daa
or
sar
sub
and
mov
cmp
shl
fiadd
mov
pop
sub
fnstcw
pop
jno
sbb
adc
jns
outs
xchg
fcmove
xchg
outs
add
pop
pop
mov
adc
and
fdiv
ds
lock
sahf
cmp
pop
loop
or
leave
mov
push
iret
adc
jle
daa
int3
pop
xor
and
into
pop
mov
bound
vmaxpd
test
sub
and
pop
gs
out
outs
arpl
and
and
outs
(bad)
jmp
into
push
inc
lods
outs
addr16
sbb
inc
outs
clc
in
leave
sub
sar
stc
fdivr
lods
jb
jmp
shl
mov
mov
call
pop
mov
stos
dec
inc
push
xor
sysexit
or
push
loope
fsubr
and
pop
inc
mov
test
repz
mov
sbb
das
data16
push
scas
mov
(bad)
add
cmp
fimul
fucomi
xor
in
xchg
and
sbb
cmp
jo
cli
data16
mov
jmp
outs
cmp
push
push
stc
popf
enter
mov
sar
mov
mov
xchg
sub
fdivrp
or
adc
or
adc
jbe
dec
xor
or
adc
(bad)
fadd
repz
pop
cs
and
es
dec
retf
ds
and
sti
inc
jg
pop
fmul
outs
inc
movs
and
add
lea
xchg
sub
push
dec
shl
repnz
(bad)
(bad)
ja
sbb
jmp
shr
mov
daa
sahf
sbb
call
adc
mov
sbb
lock
and
fmul
and
dec
jmp
(bad)
idiv
in
jecxz
inc
(bad)
pusha
mov
std
ja
jns
mov
sbb
test
popf
test
or
pop
sbb
out
loop
jb
mov
mov
in
add
push
jle
xchg
jmp
mov
cmp
nop
clc
adc
je
in
out
inc
pusha
inc
mov
dec
mov
jmp
retf
mov
shr
nop
or
jmp
pop
test
push
adc
leave
pop
(bad)
pop
jmp
dec
clc
push
repz
inc
dec
pop
fld
ror
xchg
xor
sbb
cmp
inc
test
data16
(bad)
addr16
(bad)
and
rol
inc
sti
cmp
inc
cli
pushf
sub
cmps
add
mov
aam
fst
(bad)
or
dec
rol
sbb
xor
cld
test
lea
nop
popa
pop
sub
pop
xchg
out
and
mov
ja
test
(bad)
xor
push
add
call
sbb
inc
xchg
in
cmp
(bad)
data16
xor
jo
push
inc
bound
sbb
jmp
out
sbb
loopne
cdq
dec
pop
pop
xchg
cmp
cmp
bound
ret
xchg
mov
inc
call
push
mov
fcom
data16
mov
lahf
push
add
mov
sub
mov
fmul
cli
push
jmp
xor
jb
lods
les
in
sbb
dec
lods
sti
mov
ficom
mov
mov
mov
xor
enter
arpl
cdq
adc
imul
movs
ja
sub
gs
xor
add
sahf
sub
out
fadd
or
(bad)
enter
cdq
xchg
pop
fild
mov
cwde
into
pop
jbe
cld
out
sub
cld
(bad)
push
add
dec
adc
dec
in
ror
sbb
mov
icebp
pop
leave
ds
adc
adc
aam
dec
pop
repz
test
xor
push
cmp
push
imul
imul
leave
shl
pop
sbb
xchg
out
rol
fwait
cmp
push
jmp
sar
movs
jne
adc
mov
sub
ret
mov
sbb
js
(bad)
push
mov
push
adc
imul
vhaddpd
or
inc
outs
mov
cmps
pop
xchg
pop
sbb
ja
mov
not
pop
or
test
xchg
push
outs
jecxz
sbb
cmp
dec
aaa
lahf
push
xchg
xlat
pop
mov
ror
push
ins
pop
mov
sbb
sub
inc
dec
je
pop
pop
jno
mov
cs
iret
loopne
lods
mov
jbe
dec
xchg
ins
mov
mov
sti
cmp
das
jnp
das
ja
add
mov
mov
cmc
fstp
rcl
adc
out
out
pop
mov
mov
bnd
movs
xor
lea
pop
(bad)
jmp
adc
adc
int3
xor
mov
mov
(bad)
in
gs
or
mov
adc
adc
dec
jg
loop
in
xchg
pushf
repz
jbe
mov
xchg
(bad)
lock
xchg
pop
sbb
jno
xor
scas
leave
enter
add
mov
pop
pushf
push
ret
clc
inc
dec
cmp
inc
fst
leave
imul
pop
dec
pop
stos
dec
xchg
lahf
sub
sub
jp
clc
std
dec
cdq
scas
xor
push
test
inc
outs
push
pusha
bound
dec
(bad)
jmp
div
in
test
jmp
repz
imul
aaa
stc
jb
fs
or
push
fbstp
and
pop
mov
hlt
inc
sbb
aaa
inc
dec
adc
scas
repnz
mov
sub
jno
iret
enter
ins
das
add
repz
jb
ds
test
adc
jbe
movs
repz
in
mov
mov
cmp
sahf
loope
(bad)
in
stc
mov
pop
aad
cli
pop
xor
pop
call
push
int3
sub
fld
pop
mov
retf
pop
ins
xchg
pop
mov
or
xchg
aas
retf
out
mov
pop
fucom
outs
xlat
stos
pop
loope
lea
jecxz
rcl
jo
xor
jno
std
ins
mov
inc
out
jmp
or
push
dec
mov
fstp
xchg
bound
push
jae
adc
jp
jb
add
sti
mov
add
mov
cmp
rol
sub
xchg
idiv
loopne
mov
adc
or
xlat
js
mov
jecxz
xchg
and
iret
enter
sbb
mov
adc
mov
fwait
inc
mov
inc
cdq
test
mov
mov
jmp
mov
repnz
jp
repz
mov
fidivr
inc
in
stos
fnstsw
mov
lahf
push
dec
add
stos
ficom
sub
adc
retf
lahf
hlt
xor
iret
xchg
push
mov
jns
stos
and
movs
xor
test
or
cli
add
add
lds
sbb
sbb
loopne
jle
add
ret
lods
pusha
mov
clc
dec
cmc
push
scas
and
or
and
mov
int3
or
aas
pushf
cld
lahf
add
test
lods
ret
pop
xchg
or
sbb
aas
mov
lds
or
pop
inc
stos
jg
call
jb
jle
push
dec
xchg
jg
push
cmp
cli
mov
pop
jl
popf
mov
mov
pushf
jle
xor
pop
mov
cwde
call
sahf
leave
jle
push
add
pop
test
mov
loop
(bad)
jnp
sub
push
add
pop
sahf
popf
mov
ret
imul
inc
xchg
pop
add
cld
cld
dec
mov
mov
enter
xchg
or
fsub
test
jmp
sar
inc
in
dec
xchg
lds
and
int
movs
fiadd
aas
ins
dec
jle
mov
xor
test
inc
push
and
hlt
and
fs
fild
jno
mov
sbb
dec
push
add
data16
and
cdq
xor
xchg
add
mov
and
scas
je
in
or
in
sub
ficom
mov
stos
pop
xchg
xchg
jb
stc
or
cmp
sbb
outs
xor
outs
sub
jns
inc
push
sahf
ss
clc
adc
or
sub
leave
fild
or
and
js
ins
and
sub
cmc
dec
cli
stc
mov
and
js
repz
out
fidivr
(bad)
lds
nop
in
retf
std
ss
push
out
cdq
pop
stos
xchg
or
cld
in
xchg
push
xchg
mov
mov
add
jmp
out
add
lahf
mov
aaa
inc
icebp
test
mov
mov
js
imul
stos
push
cmp
xchg
pop
sub
jmp
pop
xchg
test
cdq
fwait
inc
adc
in
dec
push
shl
jle
inc
and
stos
addr16
mov
jbe
push
mov
add
call
jg
popa
push
mov
inc
fisttp
dec
cmps
jecxz
jns
fadd
push
xor
call
hlt
pop
mov
shl
fld
popf
mov
mov
cmp
cmp
retf
mov
pop
fidivr
cmp
(bad)
daa
je
pop
inc
push
xor
test
mov
xor
mov
ret
or
mov
imul
push
shl
ins
xlat
xor
daa
ror
adc
leave
xor
push
fidivr
jb
mov
fiadd
mov
data16
mul
xchg
xor
in
mov
push
adc
jl
jnp
or
jle
xor
cmps
add
les
fcmovbe
pop
cmp
stos
push
(bad)
movs
push
leave
sti
sahf
jl
push
mov
outs
cwde
mov
mov
movs
mov
and
push
or
jmp
(bad)
out
add
loop
mov
sahf
call
add
scas
pop
in
mov
mov
out
aaa
inc
jg
aas
dec
add
out
icebp
jmp
clc
(bad)
cld
pop
xchg
ins
lock
pop
lods
push
(bad)
cmp
int
arpl
fs
fist
xchg
ja
sbb
outs
neg
cmp
outs
push
mov
imul
stos
retf
or
add
cmp
push
and
fnstsw
mov
dec
not
mov
add
std
mov
mov
add
(bad)
repnz
lods
sub
and
or
pop
ja
cmps
fdivr
dec
(bad)
test
or
mov
sub
pop
dec
gs
popf
push
(bad)
pop
arpl
cmps
fwait
imul
jge
arpl
stos
js
call
cli
test
stos
jo
adc
xlat
xor
in
(bad)
int
ins
inc
or
and
mov
arpl
push
adc
mov
rcr
call
(bad)
mov
jge
hlt
jae
test
inc
shr
sahf
pop
ins
data16
sbb
or
jmp
fsub
jg
xchg
inc
and
cmp
bound
fstp
iret
lods
jbe
push
ficom
sahf
clc
aam
dec
mov
cmps
sub
jle
movs
ins
jne
out
bswap
clc
push
int
push
and
and
cs
out
push
test
and
lea
inc
fdivp
das
cmp
pop
loop
shl
cmp
cmp
ds
adc
xor
and
sbb
in
push
out
not
bnd
ret
pop
inc
inc
pop
add
xor
jl
out
dec
cdq
jae
(bad)
sub
aas
cwde
(bad)
popa
dec
push
outs
xor
dec
inc
fistp
cdq
ja
fadd
sar
mov
add
test
dec
add
shl
aad
js
out
nop
scas
pop
(bad)
sbb
(bad)
jg
jg
jmp
inc
xor
pop
mov
call
sti
out
pop
js
scas
xor
cld
xor
or
pop
and
in
cli
nop
fisub
nop
fwait
mov
jns
sub
push
outs
mov
cmp
repz
cmp
push
ins
lahf
pop
cwde
movs
daa
out
jge
sar
sbb
lds
lea
dec
ins
imul
scas
cmc
mov
sbb
pushf
cmp
dec
jbe
jp
int3
pop
rcr
push
or
cwde
sbb
jmp
pop
mov
aaa
dec
test
data16
clc
in
popa
add
outs
inc
push
mov
push
pop
sub
std
xchg
cmp
mov
sub
push
xchg
mov
ror
leave
push
push
dec
adc
mov
mov
cmp
pushf
repnz
ins
arpl
adc
out
fnstenv
mov
stos
and
pop
(bad)
push
adc
adc
lods
jge
sub
in
pop
cmp
mov
outs
push
mov
xlat
fistp
xchg
dec
add
sbb
ins
cld
mov
xor
mov
in
loop
sbb
clts
xchg
ds
pop
jge
repz
pop
push
je
pop
mov
pop
sahf
mov
or
leave
cmps
jo
mov
sub
add
fidivr
sbb
mov
xchg
std
popf
scas
scas
jns
fs
mov
xchg
jns
jo
xchg
fstp
loop
ja
push
or
fbstp
data16
mov
dec
sub
inc
mov
out
retf
cmp
xor
sti
push
adc
aas
lahf
mov
rcl
push
inc
and
dec
push
and
cmp
fisttp
lds
add
push
sar
test
repnz
inc
or
repz
cmp
inc
mov
retf
cmp
add
ret
cmp
inc
sbb
inc
arpl
fsubp
add
inc
retf
shl
and
xchg
sub
movs
add
pusha
movs
pop
jmp
pop
bound
cmp
and
sbb
add
mov
adc
ins
loopne
adc
(bad)
xor
jle
xor
pop
add
or
scas
and
ds
outs
xchg
jmp
lods
sbb
dec
cmp
add
into
cmp
xchg
mov
pop
dec
test
xchg
scas
cld
and
mov
(bad)
push
ror
xchg
add
jo
inc
icebp
and
jmp
and
xor
adc
ins
mov
arpl
lock
adc
cld
push
jp
sahf
mov
push
sub
and
hlt
(bad)
clc
in
push
cmp
cmps
push
outs
stos
out
clc
call
xor
push
in
mov
pushf
adc
xor
xchg
jbe
jne
outs
adc
test
mov
push
inc
mov
mov
pushf
jb
and
repnz
xchg
add
fpatan
sub
push
mov
xor
push
dec
xchg
inc
repz
inc
push
pop
push
mov
leave
or
xchg
test
cdq
inc
xor
mov
sbb
dec
nop
(bad)
and
jbe
imul
inc
mov
stc
sub
mov
add
test
shr
adc
int
(bad)
push
dec
test
inc
pushf
(bad)
out
fcomp
stc
pop
shl
leave
ds
es
cmps
xor
pusha
or
adc
cld
lea
xor
clc
jb
jne
ja
pop
mov
xchg
movs
dec
pop
xlat
add
adc
jmp
pop
inc
retf
add
and
pop
stos
sub
(bad)
arpl
scas
dec
jae
inc
xchg
das
mov
pop
jnp
popf
jae
push
xor
adc
in
xchg
jmp
test
jmp
dec
adc
sbb
cmps
ins
aad
jo
popf
ror
jno
out
adc
xchg
gs
add
xor
pop
mov
jge
cmp
cmc
xchg
test
pop
(bad)
lar
ret
xor
inc
into
clc
addr16
pop
pop
jo
pop
mov
or
int
and
mov
dec
adc
cmpxchg
cld
in
add
in
test
adc
imul
add
pushf
daa
mov
xor
mov
dec
test
pop
add
int
frstor
repnz
jmp
gs
mov
cmp
sbb
xchg
add
iret
push
push
cwde
mov
fisub
pusha
loop
mov
inc
sahf
adc
adc
or
pop
cmps
xor
fnsave
pop
mov
dec
pop
adc
or
sbb
mov
scas
xchg
mov
sti
je
gs
and
jmp
sub
lahf
hlt
jp
sub
dec
jle
inc
xchg
jmp
cmp
into
jno
inc
sbb
inc
mov
mov
in
ret
or
mov
lds
aas
ret
mov
inc
arpl
pop
ds
das
cmps
ins
retf
adc
div
mov
das
fwait
inc
jmp
mov
dec
std
push
in
fisub
mov
rol
and
jnp
mov
test
add
mov
lods
loopne
sbb
or
fdiv
icebp
(bad)
mov
push
cmp
aas
jle
clc
popa
(bad)
scas
inc
mov
cmps
aas
dec
add
and
mov
(bad)
scas
imul
test
pop
mov
aam
pop
sbb
jmp
dec
mov
dec
push
shl
ficom
adc
sbb
jbe
adc
xor
fwait
into
enter
data16
xchg
cmps
(bad)
jle
cmp
push
pop
out
sbb
fucom
and
mov
idiv
sbb
or
fisttp
idiv
into
cmc
dec
inc
cmp
into
mov
pop
ds
pop
xlat
fdivp
dec
pop
nop
push
pop
ja
sbb
lock
fwait
scas
ret
sbb
stos
adc
inc
das
js
xlat
sbb
jo
jbe
sbb
cs
sub
push
imul
sbb
out
paddb
in
push
xor
pop
jmp
int
shl
sbb
sub
jnp
test
mov
out
lea
sbb
add
jg
cmps
or
inc
pusha
in
xor
jne
inc
mov
test
cld
mov
mov
popf
movs
pop
pop
sub
sahf
ins
mov
inc
shr
xchg
in
ds
popa
out
inc
jg
es
std
mov
jo
ins
xchg
lods
movs
out
gs
mov
jge
dec
retf
adc
or
and
mov
sub
xor
jo
jae
pop
pop
jno
cld
mov
out
pusha
ret
(bad)
mov
(bad)
int
jb
sub
pop
cmps
mov
push
mov
and
push
sbb
and
push
sbb
loopne
popf
pop
mov
and
lods
sub
movs
jg
xchg
jnp
mov
or
das
mov
adc
jge
add
mov
jno
aam
adc
std
es
imul
and
test
sbb
jmp
int3
jl
loopne
pushf
or
push
imul
add
fimul
es
jp
pop
fidiv
adc
lods
inc
dec
or
(bad)
xchg
mov
mov
push
xchg
mov
dec
hlt
pop
test
add
pop
fwait
inc
pop
add
bound
das
mov
out
push
(bad)
int
push
enter
int
ficomp
out
hlt
movs
push
cmp
rcr
mov
clc
pop
ret
imul
clc
sbb
sbb
adc
lea
sub
mov
inc
jno
inc
cmp
ja
xor
cmps
jg
iret
outs
or
leave
fsubr
add
dec
pop
shl
aad
mov
cmp
jbe
xchg
jb
arpl
jno
sar
or
std
dec
mul
pushf
nop
jo
push
mov
jb
adc
loop
cs
loopne
in
std
sub
bound
mov
mov
dec
pop
push
scas
repnz
or
retf
cwde
(bad)
and
mov
sbb
mov
cmps
aad
ret
iret
mov
jl
inc
pop
mov
pop
daa
mov
pop
push
arpl
adc
cmps
gs
fdivrp
stos
or
mov
mov
ret
xchg
aad
inc
into
mov
pop
mov
jl
or
xchg
or
jnp
dec
iret
fstp
aas
xor
cmp
pop
shr
mov
lods
mov
jnp
imul
sti
(bad)
sub
aaa
popf
jbe
aas
mov
int
mov
sar
(bad)
fsubr
adc
mov
cmp
fwait
pop
cmp
cmp
xchg
cdq
sub
jb
or
cmp
cmp
hlt
call
sbb
or
dec
pop
cmp
ins
fcomp
ins
cli
mov
jnp
jle
call
into
jae
nop
jmp
dec
inc
or
sbb
mov
sbb
int3
in
ins
dec
inc
cmps
mov
jmp
and
push
fdivr
out
bound
test
xor
data16
push
lahf
in
sbb
or
xchg
cmp
or
lds
test
(bad)
dec
dec
int3
xchg
jp
push
out
ss
xlat
in
push
dec
clc
sub
das
dec
sbb
jecxz
fist
idiv
cdq
jmp
push
ins
jle
call
call
gs
retf
loopne
mov
xor
js
out
sbb
inc
jbe
sbb
imul
jge
sbb
retf
rcr
cmps
sbb
xchg
mov
jmp
and
xchg
push
inc
jo
stc
xchg
(bad)
out
sub
xchg
dec
ja
lea
outs
(bad)
enter
push
test
mov
or
cmp
xor
inc
mov
test
in
mov
pop
arpl
fdiv
push
in
adc
inc
pushf
cmp
push
dec
and
fbstp
lock
sbb
mov
cli
mov
jnp
in
fdiv
clc
dec
mov
cdq
mov
fwait
xchg
jecxz
cmp
mov
loope
jp
int3
pop
jo
or
int
cmp
daa
dec
aam
vmwrite
jecxz
cwde
pop
mov
mov
ret
popf
aam
dec
push
dec
adc
cmps
ins
bound
add
sub
add
je
jb
jecxz
(bad)
cmp
and
dec
dec
mov
mov
mov
int
repnz
into
adc
ja
dec
(bad)
aam
sub
xor
movs
inc
jle
aad
sbb
cmp
lea
adc
mov
or
inc
cmp
jge
jecxz
mov
push
xchg
aaa
jecxz
iret
add
sbb
cmp
ja
jb
leave
mov
sub
jb
pop
jg
xor
jecxz
fs
fdivr
(bad)
xor
bound
cmc
in
ret
sbb
retf
clc
xor
mov
pop
das
xchg
jg
mov
or
mov
mov
je
xchg
fadd
or
loope
jno
jns
mov
pushf
aad
mov
or
pop
mov
adc
cmp
outs
dec
stos
stos
add
pop
fidivr
xlat
pop
js
and
fstp
mov
not
xor
pop
enter
(bad)
lea
es
mov
shl
xchg
push
mov
stos
data16
inc
xchg
mov
cdq
fistp
add
or
sub
aaa
imul
icebp
sub
and
xchg
loope
hlt
movs
sub
pop
jnp
nop
xchg
lds
or
push
pop
inc
inc
sub
mov
mov
movs
pop
dec
imul
sub
mov
and
mov
loop
fcom
rcr
jnp
cmp
sahf
adc
inc
(bad)
pop
jbe
cdq
jmp
leave
push
stc
sbb
ins
call
mov
in
and
mov
sub
cmps
mov
inc
xor
mov
add
cmp
cmp
data16
cmps
xchg
(bad)
pop
cmp
xor
in
icebp
jno
out
adc
gs
dec
int
lods
push
xchg
mov
sub
dec
push
mov
aaa
call
sub
ficomp
or
loope
pop
push
and
jecxz
add
pop
dec
xchg
clc
add
popf
push
dec
and
mov
sub
xor
sub
dec
pop
das
and
mov
aaa
mov
in
movs
ret
xor
pop
ds
cmp
loope
xchg
xor
scas
sbb
sbb
repz
or
and
pop
xor
nop
push
jae
cmp
inc
cmp
mov
dec
dec
(bad)
outs
ret
sub
ret
or
ror
and
mov
lds
aas
inc
call
into
imul
adc
enter
addr16
cs
scas
inc
pop
jg
scas
fild
out
xor
push
repnz
bound
std
loope
xor
mov
push
ficom
sbb
mov
scas
dec
push
push
xchg
sbb
cmp
call
cld
cmps
jle
push
rcr
aad
test
sub
cwde
pop
ja
not
push
test
push
jmp
lods
(bad)
and
in
in
push
cmp
inc
xchg
mov
(bad)
loop
in
jae
cld
jbe
out
stos
xchg
sbb
xlat
xor
inc
ss
xchg
cmp
cmps
aas
push
dec
jne
cmp
pop
add
lds
dec
push
inc
cld
xchg
mov
dec
fidivr
bndldx
stos
inc
pushf
pusha
sti
cmp
outs
out
xor
sbb
es
jns
inc
or
jmp
in
add
daa
gs
or
xchg
mov
sbb
arpl
dec
or
movs
inc
popf
push
aad
inc
sbb
jp
pushf
enter
and
xchg
xor
pop
xor
(bad)
(bad)
and
mov
int3
lods
imul
sahf
sub
xchg
mov
sbb
retf
fnstenv
dec
pop
push
inc
mov
daa
rcr
mov
inc
push
mov
sar
leave
and
or
cmp
xchg
and
fisttp
js
sbb
xchg
aam
xor
mov
loopne
(bad)
int
movs
sbb
loope
outs
imul
or
fimul
(bad)
sbb
mov
sbb
mov
xor
mov
jmp
sbb
sub
jmp
aas
std
test
mov
push
shl
mov
or
jno
cdq
xor
aam
mov
xchg
in
test
jl
or
mov
imul
adc
mov
into
outs
outs
dec
xchg
out
mov
out
mov
cmp
mov
imul
push
xchg
push
and
data16
pushf
js
pop
or
inc
outs
pop
pushf
mov
imul
lahf
lods
mov
mov
lea
xlat
dec
jecxz
es
mov
sbb
loop
call
dec
aaa
pop
sub
mov
lea
out
sar
push
dec
(bad)
loopne
sub
and
sbb
mov
dec
popa
cmp
inc
adc
ds
push
cdq
xor
mov
fwait
mov
inc
or
xchg
lock
cmps
inc
xchg
cwde
aam
(bad)
daa
xchg
jecxz
stc
sub
in
(bad)
lock
ror
stos
stos
jo
jno
pop
xor
xor
sbb
dec
xor
mov
clc
mov
xchg
or
hlt
lock
iret
inc
jl
sbb
hlt
pop
enter
jbe
ret
and
adc
add
sub
ja
fild
and
or
pusha
jecxz
and
dec
xor
jmp
push
pop
gs
shl
pushf
push
stos
dec
outs
ss
xor
(bad)
ja
pusha
addr16
push
cwde
add
movs
xchg
adc
aas
shl
sbb
and
jl
shl
das
push
stos
mov
or
lfs
jne
jo
rol
movs
imul
cmp
je
jb
push
xor
shl
cmp
mov
jae
push
stos
push
dec
add
sahf
pop
jno
and
or
mov
pushf
jmp
or
fild
push
fs
test
ja
pop
xchg
mov
mov
push
or
mov
push
movs
retf
cmps
mov
mov
and
jnp
mov
mov
outs
mov
and
jmp
test
dec
inc
shr
or
jge
aaa
ss
sahf
sub
in
inc
into
adc
call
ret
icebp
cmps
or
icebp
sbb
test
inc
inc
cmp
es
pop
and
push
enter
mov
xchg
cmp
push
ret
mov
fldcw
test
cmc
xor
stc
addr16
inc
xchg
xchg
inc
scas
push
cs
sub
pop
mov
jecxz
in
mov
es
inc
idiv
lds
cli
rcr
xchg
mov
sti
dec
fbstp
dec
mov
dec
sti
inc
jle
jp
mov
aam
sbb
test
lods
cmp
and
fld
adc
jnp
push
adc
dec
pusha
ds
push
and
xor
rcr
push
jnp
mov
add
ss
aaa
push
nop
aad
or
(bad)
xor
push
xor
mov
xlat
retf
and
push
adc
ins
jecxz
cld
add
(bad)
loop
cld
ffreep
cdq
push
or
push
rcr
pop
dec
es
jae
ins
jmp
fdiv
and
mov
cbw
add
lahf
sub
lea
pop
data16
and
mov
xor
mov
mov
jecxz
jns
aad
cli
or
addps
jbe
into
push
cli
dec
cmp
sub
jbe
lods
int3
xchg
ja
dec
ds
nop
bound
test
or
ss
cmp
push
aas
sub
mov
mov
popf
repnz
je
pop
mov
lea
fidiv
xor
ins
ret
inc
jo
sbb
mov
adc
cs
add
sub
jge
dec
push
jmp
jae
int
xor
aas
cmps
push
adc
dec
dec
dec
pop
dec
jle
imul
jns
jns
test
pop
test
push
mov
lock
outs
xchg
js
daa
mov
adc
adc
dec
mov
mov
push
int3
clc
sbb
shr
mov
fmul
sbb
mov
dec
gs
shl
pop
loope
dec
repnz
xor
add
fldl2t
cdq
popa
mov
int3
imul
dec
mov
sbb
loopne
data16
push
into
cmp
shl
mov
mov
mov
shr
inc
aad
push
addr16
ss
scas
out
dec
push
lods
fisttp
mov
fmul
cmc
aas
jmp
or
sbb
je
cmp
je
mov
inc
into
outs
stc
(bad)
sbb
sahf
mov
mov
leave
xor
pop
or
xor
scas
sub
inc
mov
sub
std
xchg
aas
jno
inc
xor
push
adc
dec
push
jg
mov
addr16
test
jl
pop
lods
call
add
inc
cmp
enter
fnstcw
fld
outs
or
and
mov
xlat
dec
sub
pop
add
and
inc
lahf
xchg
or
test
add
(bad)
std
cli
mov
mov
sahf
test
loop
add
mov
mov
sbb
test
jle
jbe
mov
xchg
lahf
jp
sahf
shr
inc
sbb
outs
sub
dec
aam
lds
aam
(bad)
addr16
pusha
xchg
add
push
call
cdq
aaa
int
ror
jmp
in
add
or
inc
or
sub
in
popa
dec
aam
in
mov
rcl
push
popa
push
scas
fwait
jecxz
(bad)
sbb
cmp
call
fiadd
je
paddw
sbb
xchg
imul
push
test
pop
push
fwait
adc
inc
dec
(bad)
jb
stos
and
das
xchg
test
scas
aas
ja
mov
xchg
adc
or
cmp
mov
dec
sub
sbb
or
(bad)
jle
cld
js
xchg
adc
adc
dec
adc
xor
imul
test
pop
gs
(bad)
mov
add
icebp
iret
dec
div
and
xor
(bad)
lahf
push
lods
and
jo
jge
addr16
jbe
jo
daa
cs
out
inc
sbb
inc
adc
mov
ret
and
clc
sub
arpl
aad
mov
and
test
pop
lock
fcmovnu
loope
cmp
comiss
imul
imul
ret
cmps
cwde
inc
aaa
imul
sub
xchg
loopne
push
dec
push
rcr
mov
inc
sub
add
push
add
shl
mov
sbb
push
stos
and
dec
out
scas
xchg
pop
pushf
loope
xor
loop
cmp
mov
sahf
(bad)
pop
aad
mov
and
movs
jno
pop
es
mov
mov
scas
shr
retf
mov
mov
xchg
rcr
dec
test
sar
xchg
mov
adc
js
popf
sub
mov
out
neg
cmp
int
or
scas
xor
cdq
cmp
leave
inc
inc
xchg
shr
push
xor
cmp
push
pop
cld
inc
ins
sbb
push
add
aaa
add
pop
sub
scas
inc
nop
jo
dec
(bad)
jmp
inc
mov
adc
es
shl
jp
pop
inc
inc
jb
or
idiv
(bad)
(bad)
std
mov
and
adc
int3
add
outs
mov
cmp
lods
adc
je
mov
push
test
aam
dec
into
test
xchg
and
jne
dec
pop
repz
fst
inc
repz
jo
xor
sbb
iret
in
gs
xlat
push
jno
mov
mov
and
xchg
dec
sub
fadd
out
and
mov
(bad)
pusha
push
adc
and
mov
hlt
cmps
jae
push
or
jo
std
imul
xchg
fistp
jo
sbb
popa
jno
xchg
pop
and
cdq
jecxz
into
sub
pop
cld
jle
mov
mov
out
mov
hlt
add
jle
cdq
jne
and
pop
enter
(bad)
or
out
sbb
xchg
or
retf
push
mov
jnp
pop
loop
sar
inc
enter
(bad)
scas
xchg
fsubr
ss
clc
xlat
dec
das
push
cmp
xchg
mov
push
fldenv
movs
scas
pop
xlat
ins
jmp
push
and
sub
in
sub
je
sub
xor
mov
pushf
movs
jl
push
(bad)
nop
xchg
pop
bound
into
test
mov
mov
cmc
mov
rol
les
sti
sbb
pop
imul
inc
and
into
adc
xchg
dec
jl
xchg
sub
ss
mov
popf
mov
ret
dec
xor
daa
xor
mov
push
ins
addr16
push
mov
fst
scas
mov
or
add
lods
gs
pop
aam
cmps
add
add
and
test
and
retf
cmp
dec
arpl
add
cwde
aaa
add
add
hlt
and
daa
fdivr
cmps
jno
xor
sub
and
dec
sub
das
mov
add
inc
(bad)
repz
inc
jno
inc
push
nop
push
ins
leave
mov
not
mov
nop
neg
inc
popf
imul
push
in
xor
pushf
retf
inc
loopne
ja
add
push
pop
stos
xchg
pop
out
repz
in
(bad)
pop
repz
inc
shl
imul
jp
xchg
cmp
sbb
xchg
push
inc
adc
dec
dec
sub
dec
mov
pushf
ret
mov
dec
xrelease
adc
cmps
cmp
push
(bad)
icebp
in
in
cmp
and
adc
and
cli
xor
mov
movs
rol
cld
(bad)
retf
leave
rol
adc
in
cli
mov
and
aaa
mov
fsub
dec
cmp
ret
loope
jg
cmps
pop
xchg
mov
xchg
xchg
ins
push
in
mov
movs
fstp
sbb
inc
shl
xchg
jnp
repnz
cli
call
enter
clc
dec
retf
sbb
outs
push
ret
jo
retf
mov
jno
inc
jmp
sub
mov
sbb
xchg
imul
call
out
cmp
aas
(bad)
sbb
loopne
call
sbb
mov
into
lea
and
cmp
xchg
pushf
pop
mov
adc
shl
jmp
inc
xor
jne
sbb
(bad)
clc
pop
or
sbb
dec
pop
cs
inc
lea
pop
cmp
inc
push
cmp
xchg
jmp
jae
xchg
jmp
cld
test
xchg
add
and
nop
shl
push
xchg
lea
(bad)
fdiv
xor
dec
push
inc
leave
scas
scas
outs
jo
outs
cmp
lods
popa
fild
aaa
push
into
mov
test
adc
mov
mov
push
push
mov
scas
(bad)
iret
xchg
int
push
mov
fiadd
das
imul
or
jmp
pop
sbb
mov
xchg
ret
jg
ret
test
mov
push
aas
repnz
mul
adc
std
fadd
push
call
cmps
xor
xchg
mov
out
dec
scas
push
xchg
test
int
repz
mov
mov
or
dec
lea
in
cmp
push
push
xchg
mov
mov
pop
xchg
cmp
xchg
ja
js
das
mov
cmp
and
out
stos
int3
push
ins
fcmovnu
test
jl
dec
test
sub
xchg
or
pop
aas
les
cmc
loopne
lock
iret
xchg
scas
inc
aad
inc
mov
push
dec
cmp
push
retf
ficomp
es
inc
shl
push
cwde
add
clc
cmp
in
xchg
addr16
push
and
add
pop
add
sub
stc
arpl
stos
jno
out
inc
jns
int3
fimul
lds
push
jle
gs
mov
push
fwait
shl
sub
test
aaa
rcr
test
std
lahf
sub
push
stos
jecxz
fnstsw
push
push
loop
adc
shl
es
fild
sub
push
dec
fld
stc
jnp
and
mov
xchg
xor
aaa
sahf
add
daa
inc
ds
scas
lods
(bad)
lahf
fwait
in
out
aaa
leave
add
inc
and
push
cmp
and
enter
cmps
push
mov
leave
dec
test
cmp
and
cmc
xchg
test
dec
retf
test
lods
pop
shl
dec
sbb
jg
mov
shr
or
and
fidivr
aam
test
cmp
mov
sub
shl
(bad)
std
cwde
pushf
fwait
out
retf
lods
fwait
scas
jp
or
xchg
icebp
or
dec
jo
call
out
mov
mov
pop
sbb
jmp
into
out
inc
repz
mov
cmps
(bad)
into
xor
xlat
jecxz
int3
ud0
push
out
or
sbb
push
add
jb
jno
out
xor
mov
jmp
mov
adc
fimul
int
daa
add
out
ins
jmp
cmp
sub
jmp
xchg
mov
test
jmp
inc
adc
push
mov
mov
dec
stc
aad
into
arpl
mov
xchg
out
add
adc
push
adc
aam
lahf
es
and
jno
xchg
cmp
sub
nop
pop
push
and
fcom
aad
adc
jecxz
pop
shl
stos
std
in
scas
cs
jnp
iret
cmps
jmp
nop
sub
jmp
outs
in
inc
shr
xlat
fbld
aas
xor
lea
rcr
push
mov
fisubr
cs
push
mov
mov
cmps
xchg
xor
cdq
inc
and
out
jno
xchg
(bad)
jns
adc
movs
cmp
mov
mov
fisttp
xor
jns
fidiv
mov
jnp
arpl
mov
mov
je
movs
push
mov
mov
loopne
xor
iret
shl
push
mov
icebp
cmp
out
scas
and
xchg
js
aas
push
jbe
lods
push
test
fld
test
mov
cmp
(bad)
or
imul
mov
ins
rol
bound
ins
and
(bad)
adc
dec
and
add
xor
jg
arpl
add
pusha
aam
inc
mov
inc
or
into
sbb
test
add
pop
jbe
repz
idiv
shr
add
mov
xchg
imul
les
sbb
or
dec
mov
ror
pusha
add
loope
push
push
lds
add
ss
xchg
cmp
das
xor
(bad)
stos
call
jne
pop
loopne
out
push
retf
call
into
mov
xchg
(bad)
lds
fistp
shl
popf
out
vmovupd
pop
adc
sar
push
std
dec
xchg
pushf
lods
xchg
add
out
data16
lock
stc
cld
mov
push
rcr
popa
aad
sbb
retf
push
scas
mov
and
add
pop
adc
cmp
aad
lock
fist
aam
fimul
imul
xor
movs
aaa
fadd
repnz
pop
loopne
jne
adc
dec
mov
push
mov
iret
mov
inc
jge
mov
mov
in
es
mov
std
cwde
jmp
jnp
not
cmps
pop
sti
push
call
mov
or
sbb
mov
out
std
dec
in
jge
or
dec
push
retf
ins
ficomp
cmc
cmp
call
movs
fsub
(bad)
cmp
xchg
sahf
jns
dec
jmp
scas
xchg
mov
pop
nop
push
in
fcomp
push
nop
nop
mov
jecxz
jle
push
mov
in
push
test
pop
mov
xor
aas
pop
xchg
int3
jle
shl
xchg
and
sysexit
popa
pop
sub
in
adc
mov
aad
ja
je
jmp
and
fsub
ja
pop
ins
ficom
push
ins
inc
and
xor
xor
xor
push
mov
aas
push
sahf
or
pop
fdivr
ret
push
cs
sbb
mov
dec
push
jns
jg
or
and
mov
inc
xor
arpl
mov
enter
adc
pop
pop
mov
mov
jno
hlt
sub
enter
cwde
lods
pop
jne
stos
(bad)
pop
nop
retf
stos
push
or
std
jns
sub
or
dec
dec
in
xchg
inc
sar
stos
sub
or
cld
add
jbe
sub
lods
popa
jmp
inc
fnsave
adc
test
lock
jae
les
out
and
nop
hlt
jmp
pop
test
mov
ficomp
dec
add
(bad)
cmps
cs
mov
sbb
mov
jne
fst
jo
pop
loope
and
pop
iret
xchg
outs
dec
ror
pop
mov
je
jmp
xor
repz
xor
cmp
iret
test
or
xchg
adc
test
hlt
mov
es
stos
xor
xchg
out
and
clc
mov
cmp
out
scas
or
popf
push
pop
adc
movs
mov
add
add
jmp
mov
inc
inc
int
scas
std
call
fiadd
ds
mov
xor
mov
aam
(bad)
dec
dec
inc
test
dec
sbb
xor
lock
sub
or
fdivr
cli
mov
fist
lahf
pop
jmp
jmp
cdq
mov
inc
pop
pushf
sub
dec
jp
imul
mov
and
ret
in
inc
inc
in
mov
call
popa
or
or
xlat
jmp
cld
mov
repnz
inc
xchg
mov
xor
pop
icebp
adc
adc
ret
jno
addr16
mov
std
movs
and
sub
and
adc
lock
push
cs
pop
adc
test
stc
cld
aas
jbe
pop
mov
rol
sahf
xchg
sub
and
mov
mov
int
jno
into
jae
push
ret
inc
xchg
int3
jg
icebp
cmp
push
push
pushf
int3
lock
daa
pop
adc
arpl
call
inc
push
xchg
aad
outs
shl
push
in
mov
sti
pop
add
mov
mov
add
das
sub
cli
leave
adc
push
lds
pop
dec
xor
sub
cdq
jp
add
outs
or
or
jno
test
jne
loopne
nop
or
fcmove
lods
lea
outs
das
das
into
or
fadd
pusha
pop
imul
or
hlt
in
imul
pushf
dec
cmc
push
mov
adc
data16
pop
test
push
mov
inc
rol
pop
(bad)
xchg
loop
out
ins
mov
or
inc
or
mov
ins
inc
sbb
scas
imul
cmp
sti
xchg
cmp
scas
add
call
test
jecxz
cmps
pusha
mov
xchg
mov
mov
shl
mov
ror
js
popa
rol
imul
enter
and
add
xchg
int3
dec
mov
dec
in
nop
icebp
sbb
cmps
adc
sbb
mov
fmul
mov
pop
aas
sbb
xchg
in
pop
les
jmp
mov
jmp
add
mov
cld
cli
mov
push
dec
enter
call
jmp
ret
or
bound
mov
or
jae
aas
xor
jbe
js
adc
or
sbb
or
pop
xor
call
cmp
xchg
xchg
mov
mov
aas
mov
cmp
mov
iret
ret
inc
int
test
das
scas
shl
mov
call
fistp
push
push
ss
mov
pop
into
jo
mov
dec
pop
loopne
inc
mov
xlat
scas
fnstcw
dec
imul
test
add
in
sub
or
xor
adc
mov
outs
hlt
xor
xchg
fbstp
bound
mov
xchg
mov
repz
dec
or
push
pop
dec
int3
rcr
shl
push
mov
jno
enter
push
das
out
loope
cli
push
in
xlat
pop
mov
mov
inc
addr16
xor
mov
movs
xor
call
mov
cmp
xchg
pop
in
(bad)
cmp
scas
js
in
xor
movs
sub
and
fisttp
jmp
daa
push
pop
inc
inc
mov
sub
ss
test
stc
xor
push
sub
fist
shr
aaa
dec
pushf
cwde
dec
(bad)
jmp
mov
mov
pop
adc
pop
pop
loope
dec
in
adc
pcmpeqd
jns
push
adc
call
cmp
test
and
scas
xchg
arpl
or
pop
das
data16
repnz
inc
ins
sbb
pop
fsubr
out
mov
xor
jmp
inc
inc
rcr
les
cmps
loopne
or
sub
xchg
sub
int
out
in
xor
dec
push
inc
dec
cmp
cdq
xchg
inc
mov
fcomp
and
stos
rcr
pop
pusha
pop
cs
jo
pop
adc
(bad)
fiadd
cdq
push
(bad)
pop
add
clc
popf
push
jb
(bad)
sti
in
out
scas
jg
push
loop
sub
inc
(bad)
pop
mov
ficomp
push
in
xchg
mov
lods
popa
les
mov
in
cmp
jl
shr
xchg
int
pop
js
hlt
arpl
popf
adc
and
sbb
sbb
outs
mov
sub
jl
mov
test
mov
les
push
push
(bad)
inc
push
mov
cs
xchg
cmp
jo
mov
bound
sub
div
ins
add
pop
test
mov
sbb
lods
ss
sti
and
jno
(bad)
pop
in
(bad)
out
add
repnz
add
mov
push
pop
ins
lea
pop
jge
call
call
pop
pop
mov
test
dec
mov
mov
loope
lock
mov
cmp
imul
jbe
sub
mov
dec
ins
jp
jp
data16
bound
mov
popf
jmp
mov
jns
mov
(bad)
xor
adc
cmp
aaa
loopne
inc
cli
repz
adc
or
xor
sbb
in
cld
jbe
add
sbb
push
xor
loope
and
cwde
cdq
loop
jne
xchg
or
(bad)
rcl
pop
mov
cld
mov
xchg
dec
sub
mov
mov
fs
scas
push
iret
out
push
xor
pop
fsubr
repnz
in
imul
out
test
lock
cmps
fisub
jbe
adc
mov
xor
dec
cwde
cmp
arpl
xchg
mov
stc
xor
xlat
pop
or
mov
lds
aaa
mov
xchg
dec
jb
sub
std
data16
neg
xchg
imul
cs
in
sbb
ins
sbb
and
pop
arpl
nop
test
jg
dec
out
cmp
repz
(bad)
retf
lahf
mov
je
test
enter
aas
inc
mov
jnp
nop
or
lock
push
int
call
pop
mov
push
xor
mov
(bad)
ins
jmp
push
fist
pop
xor
in
adc
daa
arpl
cld
cmp
jne
stc
mov
add
lock
rcl
and
je
les
xchg
inc
cmc
jne
retf
in
pop
jp
test
in
jp
int
push
cld
js
rol
and
movs
dec
mov
mov
test
adc
jp
push
loopne
or
retf
mov
jnp
loop
rol
jmp
add
pushf
mov
call
imul
or
add
adc
out
cdq
pop
fidivr
jmp
mov
push
sub
in
and
outs
(bad)
xchg
inc
gs
leave
push
add
xor
xchg
mov
sti
and
mov
aaa
neg
or
jbe
sbb
inc
stc
adc
mov
mov
(bad)
stc
xchg
sbb
mov
enter
frstor
dec
sbb
aad
and
mov
inc
outs
sbb
sub
add
lds
xchg
(bad)
lods
add
mov
cmc
daa
dec
pushf
movs
mov
sbb
push
cs
push
ret
fdiv
stos
fidiv
std
or
cli
lea
cld
(bad)
cmp
cmp
into
in
(bad)
int
int
int3
mov
test
aas
cmp
mov
scas
push
arpl
mov
sti
daa
adc
call
dec
mov
out
push
adc
mov
retf
push
and
sub
stc
jecxz
cmp
in
xor
fimul
loope
add
jns
and
xchg
js
jmp
push
shl
push
xchg
outs
cmp
movs
fnstcw
push
jne
fsubr
loope
cld
mov
pop
xor
lods
inc
push
lea
out
sahf
pop
lock
sti
fmul
into
in
test
fidivr
pop
aaa
or
or
mov
xacquire
das
xor
adc
sbb
mov
adc
xchg
test
loope
daa
add
pop
add
aaa
or
xchg
cmc
call
movs
sbb
sar
sub
out
add
out
adc
test
dec
test
jle
dec
xchg
xchg
fbld
outs
mov
pop
in
out
dec
xchg
dec
inc
sbb
sub
clc
fcom
je
push
sbb
push
pop
aaa
and
adc
shl
(bad)
outs
clc
(bad)
mov
inc
ds
mov
pop
mov
jnp
push
xchg
jmp
xor
jmp
pushf
sub
sub
mov
xor
xlat
aad
xor
mov
stos
inc
sti
jl
aaa
(bad)
hlt
inc
je
mov
test
fld
jle
cmp
mov
cmp
test
xchg
or
or
cmp
inc
cmp
add
rcr
xor
or
(bad)
pushf
aam
jecxz
sbb
mov
jmp
fs
sbb
jb
lock
adc
sbb
bnd
add
jmp
mov
add
div
cmc
sbb
and
out
outs
xchg
fadd
dec
xchg
std
add
js
jno
loop
ss
repz
or
movups
inc
je
cmp
xchg
popa
inc
ret
xor
je
out
or
or
cld
jb
add
test
sahf
or
jnp
xchg
iret
call
cs
retf
in
sub
cmps
inc
and
neg
cmps
daa
mov
jl
loop
in
jne
fidivr
sbb
data16
push
shr
repnz
cli
cwde
xor
ror
pop
xor
fadd
xchg
dec
xchg
jg
jb
popf
adc
or
sub
adc
jbe
adc
retf
cpuid
pop
test
movs
cmp
pop
or
xchg
enter
leave
cmc
jl
mov
sub
out
out
mov
cs
sub
or
out
(bad)
fsubrp
loope
xlat
int3
push
fwait
mov
div
xor
(bad)
leave
in
hlt
add
jb
into
(bad)
push
mov
(bad)
pop
sbb
push
repz
(bad)
sbb
pushf
ss
imul
ret
aam
inc
pop
ins
mov
aas
and
xchg
(bad)
out
cmps
scas
sbb
movs
das
mov
and
mov
pop
pop
scas
jp
cmp
test
addr16
cmps
sub
mov
sar
mov
jle
mov
push
mov
outs
xchg
xchg
sub
leave
(bad)
adc
rcr
stos
repz
cmps
out
pop
aaa
push
lea
jl
cld
stos
add
shl
xor
jno
out
lds
stc
clc
and
jns
jo
mov
xchg
aam
popf
sti
jmp
punpckhwd
(bad)
mov
dec
push
xchg
mov
jecxz
aas
dec
aaa
jl
cmc
mov
lea
test
add
pushf
xor
or
shl
dec
imul
fs
or
mov
mov
push
out
jno
cmp
inc
adc
jg
mov
call
and
mov
cmp
add
jmp
mov
jae
mov
or
push
adc
cld
push
pop
sub
mov
imul
std
jo
popf
ja
and
adc
inc
mov
cmp
mov
or
imul
pop
push
jp
hlt
test
push
and
push
sbb
out
das
inc
(bad)
shr
sbb
scas
in
imul
js
add
call
or
imul
arpl
cmps
sbb
inc
xchg
adc
popa
or
adc
sub
mov
test
cmp
cmp
sbb
cwde
xchg
mov
mov
or
adc
pushf
test
mov
stc
(bad)
pop
retf
movs
into
outs
imul
pop
or
adc
add
adc
loopne
in
pop
sbb
jle
push
and
adc
icebp
add
jne
jno
sub
add
adc
lods
call
sahf
idiv
movs
out
retf
(bad)
sbb
arpl
mov
lock
outs
ss
loopne
inc
(bad)
popf
ds
dec
mov
lahf
mov
xchg
mov
xchg
jae
or
fidivr
jo
sub
dec
mov
jo
mov
unpcklps
push
jge
mov
cdq
cs
jmp
les
dec
xchg
mov
ja
jp
mov
(bad)
in
sbb
mov
es
xchg
into
sbb
dec
bound
mov
xchg
mov
add
std
push
(bad)
lahf
mov
cli
mov
adc
ds
pop
shr
cmp
popa
rol
xchg
not
cmp
dec
xlat
fs
fiadd
dec
cmp
and
call
and
and
dec
or
outs
sub
sub
add
sbb
fsub
xchg
push
fwait
enter
in
sub
iret
pop
mov
retf
(bad)
mov
pop
and
and
xor
fwait
movs
jl
(bad)
mov
pop
mov
sub
xchg
push
scas
hlt
add
loope
push
pxor
or
jmp
cmp
out
sub
inc
call
leave
scas
in
out
cmps
add
and
fldpi
sbb
mov
xchg
sub
xchg
outs
add
ror
add
jl
ja
enter
inc
xor
sub
sub
or
fidivr
xchg
mov
pop
sbb
jg
fisttp
jnp
sbb
loop
sahf
or
xchg
jmp
stos
xchg
jmp
sbb
mov
sbb
xor
in
pop
pusha
fst
or
push
or
push
test
mov
popa
xchg
in
mov
nop
sub
xor
test
fild
cmp
fisttp
inc
inc
retf
adc
xor
mov
xor
(bad)
cmp
dec
dec
loopne
dec
test
xor
mov
sbb
xchg
mov
popw
adc
jne
fucom
cmp
push
movs
push
adc
call
cmc
mov
mov
xor
fisub
mov
pop
cmp
add
adc
ja
cmp
xchg
mov
pop
cld
add
mov
shl
sbb
lea
int3
ror
ret
jg
xchg
xchg
and
push
mov
mov
in
inc
push
aad
iret
jmp
je
fist
lods
jmp
xchg
or
mov
iret
pop
cmp
call
dec
pop
int
or
cdq
mov
adc
mov
add
sbb
mov
pushf
dec
push
mov
loope
xchg
push
dec
xchg
mov
or
cmp
call
test
cmp
cmp
lock
(bad)
pop
or
and
push
lods
pop
xor
mov
stos
inc
xor
adc
ds
sub
xchg
or
mov
imul
xor
aam
dec
rol
neg
fild
jecxz
cmp
mov
push
sbb
and
(bad)
dec
sub
movs
sub
add
data16
push
les
js
push
mov
in
gs
leave
jecxz
push
cmp
jge
jmp
in
retf
xchg
loope
mov
(bad)
es
js
ret
fidiv
js
and
(bad)
gs
cmps
shl
es
push
stos
(bad)
jmp
stc
push
push
fild
shr
and
test
loope
pop
xor
enter
js
lds
cmp
mov
jg
std
out
jl
loope
out
adc
xchg
inc
cli
adc
jnp
cmp
pop
xchg
dec
test
lock
inc
dec
xor
aaa
mov
enter
sbb
xlat
(bad)
or
adc
inc
inc
push
jbe
add
jg
lods
pop
cmps
adc
dec
mov
sbb
loop
std
fsubr
iret
cmp
outs
inc
pop
into
hlt
call
cdq
push
lahf
sahf
mov
scas
jnp
add
push
movs
addr16
jnp
test
mov
mov
xchg
icebp
xchg
daa
sbb
mov
xor
and
add
lea
dec
add
je
and
aam
das
ss
dec
jo
mov
call
(bad)
loopne
shl
inc
movs
mov
imul
mov
adc
sub
retf
sub
and
lods
cmps
cmps
je
fwait
inc
push
popa
push
addr16
in
jp
or
std
ret
and
cmp
pop
pop
jmp
add
inc
mov
test
loop
xor
inc
mov
fimul
jnp
xchg
(bad)
cmp
add
(bad)
movs
jmp
adc
stos
xchg
in
jmp
sub
mov
push
popa
or
sbb
jge
mov
xchg
mov
fst
jmp
xchg
out
pop
mov
out
(bad)
pop
stos
in
cmp
std
daa
pop
movs
push
mov
cmp
js
sub
shl
test
loop
(bad)
mov
pop
in
icebp
mov
pusha
cmp
and
push
gs
aas
push
loop
fsub
sbb
cmp
mov
push
cmp
out
inc
jno
cli
mov
jmp
movs
je
push
or
sub
mov
test
and
(bad)
mov
xor
je
push
ds
arpl
(bad)
pop
inc
sub
neg
add
xor
xor
add
mov
push
pop
std
lock
mov
sub
int
push
push
or
test
xor
pop
pop
dec
mov
xchg
int3
sbb
ret
btr
pusha
mov
sti
out
call
add
das
call
xchg
adc
mov
xlat
xor
cmp
xchg
ins
mov
call
dec
push
in
sahf
jge
inc
cmc
mov
xchg
cs
aas
add
or
notrack
add
adc
or
cmp
fistp
xchg
pop
adc
xchg
inc
iret
icebp
pop
loop
mov
xchg
mov
pop
add
inc
and
push
inc
or
loopne
cmp
fbstp
into
cwde
or
cmp
cld
sbb
push
xor
or
mov
dec
adc
add
imul
mov
xchg
lds
das
mov
push
ret
adc
sbb
sub
jns
jnp
cmp
sub
in
(bad)
push
pusha
fcomp
cli
pop
aad
xor
mov
jmp
in
data16
pop
fiadd
daa
xor
pop
jnp
std
call
pop
sub
leave
sbb
mov
push
mov
rcl
cmp
mov
xchg
pop
or
sar
(bad)
scas
mov
cdq
jbe
jo
jno
aaa
pop
sahf
xor
push
shl
fnsave
add
pop
and
jge
cmps
cli
mov
cmp
jbe
pop
enter
fisub
add
mov
adc
xchg
sub
jl
or
(bad)
or
sub
(bad)
jge
bound
and
mov
outs
cs
jecxz
mov
mov
inc
lahf
lea
adc
mov
fiadd
test
mov
sbb
add
hlt
jmp
jmp
pop
popf
and
ret
add
cmp
add
sbb
daa
cmp
xor
dec
inc
dec
mov
add
jmp
loopne
leave
push
ror
cmp
cmc
imul
mov
jmp
cmp
lahf
test
mov
test
test
jb
jae
lods
jns
or
jle
out
add
inc
cmp
sbb
xchg
pop
sub
mov
es
inc
sar
int3
mov
lock
and
aaa
rcr
mov
push
cmp
jns
pop
push
into
repnz
mov
mov
jae
sahf
add
mov
mov
pop
or
and
jbe
mov
pusha
imul
es
push
nop
push
shrd
fidiv
dec
inc
dec
imul
xchg
xor
cmp
mov
push
xchg
mov
movs
add
push
jecxz
and
adc
test
ds
adc
out
dec
lahf
jp
loopne
repnz
push
cld
(bad)
imul
inc
xor
ins
pop
add
push
lds
jo
pop
inc
jb
pop
add
sub
imul
test
popf
add
cmps
test
add
cmp
add
push
jb
lds
xchg
clc
mov
mov
daa
clc
lods
adc
popf
fistp
adc
sbb
xchg
rcr
mov
xchg
(bad)
in
test
loopne
ins
hlt
daa
jp
push
pop
jl
mov
jo
in
popf
mov
test
and
stos
int3
(bad)
or
test
xchg
sbb
or
xchg
and
imul
pop
add
xchg
imul
hlt
mov
popf
jns
jecxz
xor
loope
fs
inc
mov
add
or
cmp
in
outs
pop
add
pop
stos
out
shr
inc
in
pop
jmp
xor
inc
push
jmp
mov
popf
jecxz
sub
ins
dec
(bad)
ss
gs
xchg
ss
xchg
mov
ja
xchg
mov
ficom
inc
pop
cmps
push
adc
ror
dec
push
mov
jmp
xchg
pop
xchg
pop
adc
ja
mov
cli
out
inc
ret
stos
pop
aas
imul
pop
xlat
leave
or
pusha
xor
les
sub
in
pop
cli
fiadd
or
lods
test
test
xor
mov
nop
sub
push
mov
push
call
cmp
or
mov
cmp
sub
add
mov
scas
ficom
sbb
fild
xor
lock
xlat
cmp
pop
add
xchg
pop
enter
fcomp
xor
dec
push
out
or
pop
inc
push
mov
xor
pop
outs
mov
idiv
mov
rcr
mov
gs
add
mov
popa
xchg
sahf
ins
iret
aas
imul
clc
(bad)
rol
aas
popa
push
dec
in
add
push
push
cmp
mov
movs
in
mov
xchg
mov
repnz
mov
leave
icebp
pop
das
add
mov
or
dec
pop
cwde
inc
outs
shl
jp
dec
push
mov
je
fist
pop
jmp
pop
jecxz
repnz
stc
into
cmp
xchg
or
imul
into
imul
lea
cli
sahf
pop
xchg
add
sbb
jb
xchg
sub
nop
stos
jbe
inc
arpl
sti
xchg
adc
call
outs
shr
pop
push
xor
push
or
das
or
sub
and
inc
ds
mov
jae
cli
aas
push
(bad)
cvtdq2ps
mov
jbe
jb
int3
push
mov
pop
lahf
scas
bound
cdq
push
adc
or
mov
push
mov
xchg
xor
loop
pop
adc
xlat
arpl
push
cmp
pop
dec
pop
loop
xchg
pop
das
dec
adc
call
xlat
jae
mov
data16
jg
lods
popf
xor
dec
int
or
imul
or
repnz
into
mov
es
mov
add
data16
cmp
(bad)
or
jae
test
popf
rol
shl
inc
div
xor
out
mov
in
std
shl
dec
jl
mov
push
and
imul
and
adc
xchg
cmps
adc
or
adc
xor
enter
mov
pop
in
movs
add
cmps
inc
mov
sbb
adc
jno
mov
push
clc
jmp
mov
dec
dec
xchg
mov
jecxz
sbb
loop
add
cli
xor
jbe
jle
sahf
in
test
scas
inc
xchg
rcr
mov
jno
clc
in
neg
jnp
xchg
jb
sub
sub
mov
and
push
out
cmp
mov
ja
inc
mov
sbb
icebp
cmps
pusha
popf
mov
shl
cs
sbb
push
push
gs
out
jnp
mov
je
clc
imul
leave
inc
arpl
inc
ins
dec
mov
cmps
xor
pop
call
mov
(bad)
test
inc
inc
inc
inc
push
mov
and
stc
inc
stos
pop
and
jecxz
sfence
push
cmp
shr
push
xlat
mov
and
ja
add
test
push
push
add
dec
jmp
xchg
xchg
cmps
inc
dec
mov
fidivr
test
js
call
jl
leave
ret
call
(bad)
lahf
sub
adc
pop
out
mov
mov
aas
iret
scas
and
lea
inc
ret
push
push
(bad)
inc
lock
sbb
out
mov
inc
and
inc
cld
mov
cmps
adc
ror
fild
repz
fist
push
outs
dec
add
cwde
pop
in
into
adc
call
lods
xchg
jle
jnp
packuswb
and
ins
xor
lods
sub
push
jb
mov
cmc
push
jb
push
inc
sahf
mov
outs
or
sti
mov
or
pop
call
or
sub
jecxz
ja
es
dec
xchg
xchg
mov
or
les
jmp
push
dec
ret
mov
sbb
mov
nop
mov
push
mov
dec
daa
xor
addr16
in
sbb
les
pop
or
mov
jo
sahf
and
aas
call
ffreep
adc
pop
iret
in
jge
xchg
sub
leave
ja
jge
sahf
dec
jl
cmp
arpl
cs
adc
adc
stos
dec
mov
add
pop
inc
sub
jno
(bad)
or
rcl
cli
xchg
dec
mov
push
popa
mov
loopne
mov
stc
adc
(bad)
sbb
rol
arpl
mov
fs
jge
cwde
jl
aam
dec
push
add
pushf
sbb
dec
cmps
sbb
inc
mov
mov
inc
es
leave
xor
lea
enter
sub
in
xchg
int3
xchg
sbb
sar
cmp
int3
scas
clc
cmp
mov
pop
arpl
xor
clc
push
cmps
mov
lock
sub
sub
lea
mov
cmp
xchg
xor
or
or
(bad)
(bad)
push
mov
out
iret
ss
or
xor
ins
sbb
mov
inc
and
or
or
aaa
leave
mov
mov
ins
pusha
push
sub
addr16
inc
jnp
push
dec
jo
push
mov
fisubr
mov
jecxz
push
inc
sbb
xlat
cmc
xlat
fld
pusha
popa
push
jns
stc
cmp
or
fidivr
in
mov
clc
inc
in
sub
push
shl
and
pop
dec
mov
xor
aad
dec
mov
stc
test
mov
sahf
ja
jns
pop
adc
mov
jg
cmps
out
sub
sbb
movs
mov
mov
cmps
pusha
xchg
mov
call
mov
jmp
jge
lahf
jl
ins
int
mov
mov
cmp
out
fcmovne
fst
repz
outs
int
fisubr
ja
popa
test
rcr
xchg
add
cmps
addr16
inc
mov
dec
pop
or
fdivp
cmp
test
sbb
dec
rcl
nop
repnz
iret
pushf
fsub
mov
push
imul
mov
inc
fs
or
out
cmps
ds
loopne
mov
test
in
dec
test
or
xchg
imul
adc
mov
hlt
push
cs
xor
out
cmp
and
xchg
push
or
pop
call
inc
and
int
push
leave
and
data16
sar
and
repnz
cmp
push
inc
push
jb
push
pop
sub
jp
and
inc
sbb
ds
mov
js
or
mov
lahf
(bad)
jnp
mov
and
jge
xor
and
cmp
mov
mov
and
ins
add
push
mov
mov
mov
sub
add
in
shl
arpl
and
fisub
adc
pop
xor
dec
iret
pop
mov
and
ins
loop
and
sbb
push
push
dec
and
mov
outs
fisttp
aaa
xchg
jge
push
push
push
das
mov
adc
adc
inc
out
jecxz
sbb
aas
pop
aam
shl
idiv
es
loope
fwait
or
sbb
xchg
adc
pop
push
and
nop
fistp
adc
iret
mov
and
mov
scas
push
rcr
fild
cs
jmp
xchg
enter
mov
div
add
nop
pop
ds
out
lahf
iret
addr16
sub
fistp
loopne
cmp
jecxz
inc
nop
ret
xchg
adc
ds
push
jb
jmp
add
rcr
inc
xor
out
bound
push
mov
(bad)
jmp
dec
or
pusha
das
int3
jle
fisttp
(bad)
int
sar
call
jmp
dec
adc
and
repz
cld
mov
jo
mov
jno
test
out
bound
into
out
jp
or
pushf
push
sbb
pop
sub
stos
scas
les
and
xchg
mov
mov
push
retf
lods
add
scas
call
int
into
sub
adc
and
pop
push
jmp
mul
push
popa
fld
cmps
je
mov
or
inc
arpl
and
call
sbb
mov
dec
ins
iret
xor
lods
xchg
addr16
outs
jmp
xchg
xchg
jo
inc
mov
mov
shl
push
sbb
push
scas
(bad)
lods
mov
cdq
or
xor
adc
sub
jp
loope
fwait
pop
aad
pop
mov
xchg
cdq
push
cmp
sub
in
cmp
or
ins
popa
cmps
icebp
out
push
or
jbe
or
push
sbb
mov
fucomip
js
scas
call
sbb
pushfw
outs
dec
mov
ins
jge
pop
sbb
mov
push
xor
lock
xchg
mul
js
add
cld
movs
mov
shl
add
add
in
cmps
add
sti
lods
aad
in
sbb
(bad)
es
cdq
push
arpl
sub
shl
mov
loopne
movs
mov
add
addr16
add
shl
jmp
fimul
jp
aas
mov
lahf
ins
pop
movs
and
imul
scas
jno
or
sahf
xchg
outs
pop
add
aad
out
inc
bound
xchg
fadd
lock
and
in
and
mov
sbb
xchg
fwait
mov
retf
movs
mov
mov
scas
aaa
xchg
bound
sub
test
push
pushf
sti
push
pop
and
xor
mov
int3
stc
xchg
fdivrp
dec
and
adc
pop
aam
inc
xor
inc
push
dec
retf
mov
mov
jle
neg
js
(bad)
aaa
adc
scas
hlt
mov
mov
bound
or
xchg
sti
or
mov
xchg
dec
push
pop
movs
sub
pop
push
mov
repnz
loop
fsub
(bad)
cli
xchg
cdq
cmps
mov
xchg
mov
(bad)
retf
addr16
(bad)
(bad)
mov
cmp
call
inc
mov
iret
add
mov
or
test
aam
pop
mov
inc
pop
mov
scas
jle
jl
push
dec
pop
das
sub
mov
lahf
or
fld
in
pop
jnp
cmp
or
jg
mov
nop
cmp
(bad)
pop
push
sbb
cmps
dec
xor
mov
xchg
hlt
pop
and
cmc
fxch
pop
mov
test
fiadd
sbb
jo
adc
mov
jne
aas
fdecstp
or
retf
add
mov
(bad)
mov
test
pop
pop
call
mov
mov
push
inc
sar
push
aad
aaa
stos
xor
pop
dec
sbb
cmp
jle
je
dec
inc
aam
cmp
inc
jl
das
mov
loopne
add
mov
xchg
sti
pushf
or
push
mov
push
repz
popf
dec
int
push
push
ds
lahf
jecxz
push
in
add
dec
adc
scas
inc
dec
mov
shl
mov
cld
sbb
mov
mov
and
mov
cmp
dec
inc
pop
std
sahf
pop
and
xchg
shr
sbb
lods
repz
inc
sar
popf
hlt
xor
push
test
pop
sbb
pop
retf
iret
das
dec
cmp
cmp
cmc
aas
mov
push
mov
mov
rol
mov
push
in
and
js
adc
jns
mov
mov
xchg
cmp
sbb
(bad)
push
jge
add
sbb
enter
stc
arpl
out
test
dec
in
enter
out
jmp
icebp
nop
and
icebp
pop
mov
push
in
dec
aad
mov
pop
jle
mov
enter
mov
jle
adc
call
sub
not
pusha
arpl
mov
push
inc
ret
inc
cmp
mov
shr
xchg
sar
pop
mov
jne
subps
(bad)
jp
dec
(bad)
call
test
push
jge
jbe
inc
idiv
xchg
dec
xor
pop
ins
pop
dec
mov
xchg
mov
mov
lods
push
adc
mov
aam
ins
cmp
shr
push
add
or
sub
jne
sar
push
enter
add
sub
mov
jmp
iret
mov
adc
js
packssdw
xor
mov
or
cdq
stos
ins
pop
mov
gs
mov
sub
pop
inc
or
retf
cmp
enter
sub
in
imul
test
jp
dec
or
or
arpl
jmp
mov
call
lods
movs
imul
rcl
ss
out
pop
jns
cmps
adc
(bad)
sbb
repz
test
cmps
mov
mov
arpl
pop
fcomp
aas
std
jecxz
push
test
test
xchg
or
ss
out
fwait
push
cmps
push
outs
or
mov
sti
dec
jmp
mov
jmp
cld
push
inc
int3
or
lods
and
pop
jecxz
mov
mov
cwde
lea
retf
push
mov
mov
pop
pop
scas
push
fdivr
dec
push
or
cli
js
xor
mov
inc
shr
stos
imul
daa
stc
(bad)
fsub
stc
out
mov
fisub
cmp
push
sbb
outs
ret
xchg
dec
cmp
mov
retf
xor
inc
inc
xor
jo
mov
inc
mov
in
stos
adc
mov
leave
mov
icebp
xor
outs
mov
inc
jno
cdq
jo
mov
out
sbb
or
xor
lea
cdq
mov
je
add
popa
sbb
mov
cmps
loopne
pop
cld
scas
xchg
dec
mov
fnsave
lahf
or
add
jg
sub
leave
adc
pop
mov
mov
int
dec
mov
dec
out
test
inc
cmp
inc
movs
jmp
push
push
fist
xor
lods
fnsave
or
xchg
pushf
sbb
add
mov
mov
out
test
(bad)
in
out
inc
shl
out
out
je
xchg
mov
sbb
mov
outs
jmp
aam
ss
inc
dec
xor
jae
imul
popa
int3
sahf
sub
mov
mov
xchg
sbb
xor
pushf
test
mov
(bad)
(bad)
mov
gs
pop
jmp
call
loopne
mov
mov
mov
je
mov
jns
jae
hlt
sub
rcr
aam
lahf
sub
fisttp
dec
cld
test
test
fwait
xor
inc
mov
sti
mov
mov
dec
aam
mov
out
aaa
hlt
cld
mov
cdq
test
cld
aaa
adc
sub
cmp
enter
dec
sbb
movs
mov
dec
in
or
ret
sub
lods
inc
lods
fwait
stos
jb
dec
or
pop
(bad)
pop
mov
sahf
sbb
push
ins
data16
adc
mov
fimul
jne
or
stos
ds
ds
add
bound
scas
and
xchg
push
and
xchg
loop
sub
inc
and
xchg
push
jp
jno
stc
stos
pop
inc
sbb
leave
inc
ja
lahf
(bad)
jecxz
in
test
jae
sar
and
xor
in
and
call
shr
sub
push
fisub
fcmovne
imul
xor
sti
inc
and
mov
in
sbb
cmps
fdivr
push
sbb
cwde
mov
and
add
mov
ds
dec
out
je
les
jb
cmp
movsx
inc
inc
out
js
addr16
sti
push
adc
popa
mov
cmp
xchg
xor
sub
jo
je
xor
ins
js
sbb
movs
call
mov
inc
stos
fadd
add
popa
ficom
adc
cwde
out
outs
movs
jae
xchg
xor
lahf
mov
hlt
out
and
mov
sub
jmp
sub
cmc
push
repz
fiadd
call
int3
pop
push
mov
cdq
cmp
dec
aad
push
lock
not
cmp
(bad)
imul
int3
inc
cdq
jge
(bad)
pop
arpl
sub
mov
pusha
push
pop
in
frstor
nop
push
lods
in
leave
sbb
sbb
lods
adc
sub
push
add
movs
sub
inc
div
mov
xor
push
clc
call
dec
sahf
pushf
fidivr
dec
or
and
pushf
js
arpl
jl
sbb
call
ror
push
cld
add
mov
mov
mov
push
mov
sub
pop
lods
or
in
scas
mov
imul
lahf
xor
in
jns
sub
ss
sbb
add
and
xchg
in
test
adc
push
lock
iret
xchg
sahf
xchg
jbe
pop
inc
xor
and
pop
cmp
jae
stos
shr
out
out
inc
pop
push
mov
fs
(bad)
scas
pop
lods
add
rcr
push
adc
shl
or
in
and
mov
dec
scas
loop
(bad)
js
adc
shl
push
cmps
(bad)
push
xor
cmc
jns
cmp
pop
sbb
ja
call
movs
or
jnp
nop
push
popf
sbb
cmps
and
clc
jb
pop
loopne
cmc
je
jmp
lock
das
ins
cmp
and
cmp
hlt
dec
cmp
rol
push
mov
loopne
fwait
dec
sbb
xchg
push
xchg
inc
outs
test
cld
ins
ret
loop
rcr
cmp
call
push
pop
jge
push
imul
lea
scas
cmp
int
mov
(bad)
out
jno
shl
add
cmovg
push
pushf
xchg
or
fwait
je
ret
xchg
or
pop
mov
rcr
movs
ja
xchg
sbb
mov
or
loop
dec
xchg
gs
test
ror
iret
lock
je
cdq
and
pop
mov
sahf
pop
inc
les
repz
pop
and
dec
inc
ins
fwait
adc
fmul
dec
push
aam
mov
mov
mov
aam
pop
mov
xchg
jmp
cmc
cdq
hlt
pop
add
loop
outs
ins
ror
into
sbb
xchg
sub
adc
sbb
mov
jnp
es
mov
inc
stos
nop
scas
xchg
mov
jl
pop
jg
(bad)
pop
loop
(bad)
push
out
addr16
arpl
arpl
add
sti
call
gs
mov
lods
fnstenv
mov
cld
dec
or
mov
mov
cmps
push
pop
clc
bound
inc
ja
dec
shl
fld
dec
add
stc
jecxz
sub
repnz
or
xchg
sub
xchg
inc
stc
push
push
fidiv
ret
jmp
dec
icebp
enter
cmc
jno
les
dec
mov
jno
fwait
mov
push
nop
mov
lds
dec
mov
push
sti
cmps
ret
in
jno
fs
and
je
(bad)
push
xchg
mov
std
add
sub
fimul
or
retf
es
mov
xchg
cmp
and
sti
mov
cwde
mov
fld
mov
pushf
inc
jmp
jmp
frstor
(bad)
pop
popa
outs
xor
and
aas
stos
pop
test
mov
ins
xchg
mov
mov
dec
pop
adc
lock
retf
dec
jmp
clc
ret
adc
add
stc
mov
push
ret
lds
ss
or
sub
int
sbb
adc
pop
cmps
stos
cdq
xor
leave
std
loop
or
(bad)
and
inc
das
sbb
xchg
ss
popf
data16
lock
scas
call
movs
push
outs
(bad)
push
cli
push
lods
dec
xor
rcl
jo
retf
cmps
call
mov
jge
pop
pop
add
shl
aaa
add
pop
fwait
xchg
push
ret
push
pop
mov
rcl
ss
mov
mov
clc
das
xor
scas
stos
inc
mov
jge
xor
xor
sahf
test
inc
hlt
push
and
daa
fnstsw
push
jno
mov
es
mov
daa
cmp
rol
(bad)
das
sar
pop
inc
jb
mov
daa
test
and
out
cmp
outs
outs
jbe
test
push
mov
leave
cdq
(bad)
jo
push
mov
jne
sbb
push
lods
jmp
sbb
pushf
and
bound
xor
ss
push
cmp
in
hlt
aad
adc
jl
adc
nop
mov
xor
jl
and
xchg
or
sub
mov
scas
hlt
xor
push
cli
aad
fwait
mov
pop
mov
and
loopne
mov
sbb
stos
and
movs
aad
jbe
mov
xchg
lods
xor
pop
mov
test
and
mov
(bad)
(bad)
push
pop
sbb
inc
add
(bad)
sbb
aas
jnp
jbe
mov
sar
mov
mov
inc
mov
mul
int3
mov
and
sti
ffree
xchg
in
inc
ret
mov
or
mov
jbe
ins
call
cmps
fisttp
shl
outs
int3
cmp
inc
data16
and
sar
sub
ret
clc
push
test
mov
dec
mov
call
ret
fnsave
mul
xchg
push
cmp
jmp
xor
shl
inc
push
jl
xchg
dec
cli
sub
mov
int
pop
sub
test
xchg
xor
jnp
adc
xlat
cmp
enter
sub
in
retf
adc
movs
or
mov
push
leave
push
stos
lods
push
mov
movs
sub
loopne
es
ret
stc
pcmpgtb
ins
ins
sub
rol
or
cs
sub
enter
mov
mov
pop
dec
adc
jp
xchg
dec
shr
dec
or
jecxz
sub
fs
dec
add
jge
push
and
cdq
jge
pop
and
rcl
add
ja
cdq
leave
mov
mov
jle
xor
push
das
inc
sbb
cmp
mov
jl
inc
mov
loope
cdq
movs
addr16
ret
push
daa
jg
add
loop
cmp
rcr
mov
(bad)
in
jne
or
push
loopne
xchg
es
push
and
(bad)
fdivr
iret
mov
loop
cs
sub
xchg
(bad)
jle
xchg
cmps
ins
es
loopne
fnsave
fimul
int3
ins
pop
jle
aas
nop
(bad)
(bad)
mov
and
ss
call
sub
stos
pop
inc
dec
inc
(bad)
cmp
sbb
dec
pop
push
or
lock
pop
mov
es
in
call
aam
loop
popf
(bad)
mov
in
out
dec
xchg
repnz
jbe
xor
adc
jae
add
movs
pop
imul
xor
cli
ror
push
pop
add
mov
push
lods
out
iret
push
inc
ficomp
les
push
dec
pop
xchg
push
lds
xor
cmps
sub
dec
das
mov
fisttp
add
imul
mov
cmp
fdivp
sub
add
adc
sahf
icebp
out
jp
shl
(bad)
iret
(bad)
(bad)
dec
cmp
push
mov
inc
lods
lahf
cmps
or
outs
mov
loope
neg
lods
scas
scas
leave
fwait
jo
xchg
jbe
retf
jns
and
inc
pop
mov
inc
stc
scas
ret
call
inc
pop
mov
adc
scas
lods
pop
add
ret
je
fisubr
dec
sub
addr16
arpl
sahf
jle
pop
mov
test
fs
or
and
ja
in
and
xchg
adc
add
test
(bad)
lds
push
in
iret
fnstsw
jp
jle
imul
cwde
xchg
cmp
adc
cdq
mov
mov
sub
mov
iret
ins
sub
adc
cld
stos
pop
push
lods
dec
add
aaa
shr
(bad)
sub
pop
mov
in
mov
into
in
mov
ss
adc
loop
adc
mov
daa
cmps
jno
mov
adc
jmp
push
out
mov
mov
stos
inc
es
mov
mov
xchg
lods
lods
pop
mov
jae
retf
inc
jae
dec
add
data16
cmp
mov
mul
mov
cmp
ja
scas
ror
pushf
cmp
leave
jge
mov
mov
mov
sar
add
xor
and
lods
pop
jmp
mov
xor
push
mov
xor
mov
mul
xor
mov
int
iret
push
cmc
mov
cmp
mov
or
in
xchg
loopne
add
mov
push
dec
jns
in
in
push
jmp
cmps
cmp
dec
sti
mov
in
jbe
and
jo
inc
repz
sti
icebp
cdq
cs
je
or
fcom
lock
and
or
push
add
mov
mov
iret
outs
inc
scas
int
retf
pop
dec
jmp
xor
repnz
into
cmp
and
loopne
call
push
and
scas
(bad)
ins
scas
lds
push
loopne
jno
xchg
out
and
cmp
or
outs
std
jb
adc
xchg
iret
dec
nop
sbb
add
push
fdivr
cmp
sbb
sbb
pop
inc
add
pop
shr
jg
rcl
fnstcw
jb
sbb
jmp
inc
or
xlat
outs
outs
pop
imul
sub
inc
jae
movs
shr
xchg
adc
(bad)
mov
iret
push
jl
adc
pop
jne
mov
pop
jmp
sbb
xor
pop
icebp
out
jle
push
loopne
cmp
add
mov
inc
arpl
call
mov
xchg
sbb
(bad)
pop
stos
out
mov
clc
mov
int3
or
(bad)
pop
in
lds
outs
add
push
mov
out
cli
sub
stos
mov
test
push
dec
pop
cmps
int
pop
dec
enter
and
jne
ror
repnz
push
pusha
fwait
daa
imul
xchg
inc
mov
inc
fs
shr
sbb
cmp
std
push
cmps
dec
ret
neg
cdq
adc
jne
js
mov
sub
gs
mov
push
or
jns
shl
mov
aaa
mov
inc
test
fild
(bad)
cmp
shl
fbld
aad
nop
jo
cmps
dec
inc
or
xchg
ror
inc
cdq
jp
sub
movs
sbb
gs
repnz
data16
clc
adc
aam
mov
inc
call
adc
sar
dec
push
js
cs
fcmovb
push
inc
cli
cs
add
ficomp
jnp
mov
mov
mov
dec
mov
int
push
sub
scas
inc
add
js
lods
mov
scas
test
xchg
inc
popa
dec
mov
inc
lods
xchg
or
inc
mov
jl
jno
and
push
in
pusha
adc
add
pop
sub
fdivr
ins
dec
xor
(bad)
cmp
xor
adc
stos
mov
jle
jmp
mov
repz
data16
in
adc
pop
mov
in
mov
pop
adc
scas
or
nop
je
push
xchg
adc
pop
imul
leave
ficom
test
pop
xlat
jbe
sbb
adc
mov
and
dec
or
repnz
sbb
cmp
pop
mov
mov
retf
test
pop
sub
mov
in
sbb
inc
push
jecxz
rol
push
push
xor
pop
shr
cwde
bound
mov
xchg
push
test
adc
push
or
pop
inc
mov
test
fcmovbe
mov
mov
mov
cmps
jmp
fidivr
in
std
imul
push
sti
pop
rcr
and
mov
jmp
in
mov
out
dec
in
hlt
jns
sbb
enter
or
sahf
push
cmp
(bad)
xor
pusha
shl
add
mov
aaa
and
aas
mov
push
pop
sbb
inc
push
test
lods
jns
lods
pop
rol
lds
cmps
adc
ret
lods
das
fcmovu
lock
cmp
mov
std
aam
ja
mov
or
sar
pop
add
call
fs
cmps
hlt
jmp
add
jne
mov
jne
cmp
cmps
(bad)
call
test
cmp
or
mov
imul
add
mov
sbb
nop
sbb
sub
push
jbe
loope
cli
dec
xor
and
ins
and
iret
mov
push
sbb
stos
xchg
retf
in
jp
and
add
cmp
addr16
imul
cld
dec
mov
add
lods
xlat
sub
or
pop
xchg
cmps
jg
(bad)
fcmovu
push
(bad)
aas
out
std
ror
in
adc
jecxz
fcomp
into
mov
into
ss
aam
and
mov
ins
jmp
mov
mov
jp
scas
sub
arpl
dec
sub
ins
jnp
xor
test
mov
xor
(bad)
dec
out
pop
retf
mov
jecxz
gs
adc
les
cmp
jle
push
aad
(bad)
push
pop
push
xor
pop
mov
call
and
push
(bad)
mov
call
xchg
mov
push
je
sar
pop
push
inc
cwde
leave
mov
pop
hlt
retf
jns
xchg
popa
mov
(bad)
je
push
sub
popa
mov
mov
add
movs
aaa
dec
and
ffreep
push
movs
lods
aam
stos
adc
xchg
inc
pop
movs
push
lods
dec
int
vmread
daa
lahf
or
leave
mov
je
dec
inc
jmp
cld
xor
std
aad
cmc
jp
loop
xchg
mov
nop
xor
ror
lods
packuswb
leave
in
mov
retf
lods
cdq
mov
xchg
(bad)
pop
out
outs
pop
jnp
rcr
jp
dec
movs
mov
fucomi
mov
repnz
sub
xchg
das
fisubr
test
fwait
cmp
(bad)
or
cwde
add
sti
mov
into
ret
int3
push
fbstp
dec
lods
adc
sub
iret
shr
add
mov
jmp
pop
lock
pusha
movs
ds
sbb
cli
lahf
inc
dec
or
and
jl
popf
pop
mov
aam
add
ror
xor
inc
cmp
das
or
push
inc
je
cmps
movs
inc
mov
inc
jno
mov
das
xchg
cmp
add
pop
push
idiv
int
cmc
rol
pop
jno
stos
loope
mov
(bad)
mov
adc
scas
mov
pusha
loop
or
repz
jns
fmul
mov
lock
mov
xchg
vpcmpeqd
test
jb
mov
sti
aad
mov
push
dec
cmp
aam
dec
popf
data16
test
xor
rdtsc
adc
das
fs
repnz
inc
sbb
adc
inc
cld
pop
clc
test
cmps
out
out
cmp
and
stc
mov
adc
fnstsw
sahf
lock
jecxz
out
test
dec
jae
or
xor
inc
or
pusha
stos
stc
mov
jae
lods
popf
inc
out
adc
pusha
jbe
add
push
jnp
xor
mov
cmps
inc
push
dec
outs
(bad)
push
push
mov
mov
dec
and
ins
inc
stos
xchg
xor
jecxz
sbb
retf
imul
inc
data16
and
push
call
pop
push
push
dec
mov
mov
iret
retf
xchg
fisub
cdq
fs
je
jecxz
cdq
gs
inc
ret
jae
mov
out
sbb
ret
out
into
jl
xchg
fcmovne
jp
push
inc
loopne
or
data16
mov
(bad)
fdivr
mov
push
or
or
movs
popf
repnz
iret
cmp
xor
mov
pop
aas
mov
movs
lods
push
aad
ins
mov
mov
mov
mov
(bad)
mov
or
add
cmc
sub
jecxz
xor
sbb
pop
aam
cli
imul
xchg
xchg
push
loopne
les
inc
add
pop
sahf
mov
jae
mov
sahf
outs
js
nop
xchg
test
jle
push
in
out
popf
jns
shl
add
adc
jns
cmp
inc
mov
popa
cmp
fnstcw
inc
or
mov
jmp
mov
jae
leave
jmp
inc
fistp
retf
sbb
mov
or
inc
mov
pop
add
frstor
gs
imul
lods
sbb
mov
cdq
retf
jbe
jmp
dec
sbb
add
movs
lea
out
jb
add
sub
xor
rcl
mov
mov
fcom
cmp
retf
test
jp
ins
lds
loope
mov
fisttp
xor
mov
mov
add
dec
mov
movs
stc
ficomp
or
ins
(bad)
hlt
adc
push
test
cmc
push
mov
dec
jecxz
sub
pushf
in
es
repnz
mov
mov
push
or
cmp
jmp
push
into
leave
pop
ins
mov
push
jge
arpl
out
jnp
mov
mov
imul
aaa
inc
push
stos
jne
je
lock
push
in
fmul
cmc
pop
js
mov
out
jge
fist
xchg
or
jb
mov
or
dec
out
jno
nop
inc
adc
addr16
jno
mov
scas
fs
ret
push
pop
les
imul
(bad)
cmps
pop
add
adc
jno
sbb
lock
punpckhwd
sbb
and
jmp
and
xchg
adc
repz
adc
outs
push
push
lahf
pop
fisub
push
mov
jno
test
push
into
add
stc
dec
stos
clc
jge
push
mov
call
or
jo
and
loop
out
in
out
movs
xor
clc
dec
and
inc
xchg
test
push
xchg
xor
aas
mov
outs
std
pop
pop
out
jmp
xor
ins
xchg
pop
mov
out
jle
fsubr
retf
jnp
popa
in
sub
in
jmp
movs
cmp
push
dec
inc
mov
pop
das
push
add
test
sbb
(bad)
pop
dec
(bad)
fisttp
inc
int
out
cld
nop
retf
lods
daa
iret
pusha
movs
retw
xlat
cmp
add
push
in
pop
or
cld
xchg
xor
mov
inc
fidivr
or
mov
retf
mov
(bad)
mov
mov
push
bnd
cld
scas
shl
inc
into
mov
bound
push
fisub
aad
adc
dec
adc
imul
push
lahf
cmp
fisubr
test
in
cmp
pop
push
mov
sbb
jle
pop
add
lods
es
test
cwde
push
leave
(bad)
stc
ss
stos
sbb
lea
ss
xchg
in
cmovo
mov
popf
das
mul
cmp
inc
repz
pop
xchg
sbb
xor
test
ret
mov
pop
in
jb
les
jmp
out
jge
shr
add
inc
je
push
sbb
movs
int3
ficomp
lods
adc
stos
adc
sbb
lods
dec
sbb
ins
(bad)
into
jne
jl
pop
pop
sbb
or
(bad)
das
sbb
pop
pushf
test
push
push
in
push
(bad)
pop
or
sub
adc
cmp
mov
adc
les
push
rcl
sbb
pop
jno
cmp
or
fidiv
sub
inc
test
inc
jnp
pop
sbb
(bad)
shr
pop
pop
test
jb
cld
ss
sbb
pop
or
outs
das
cmps
scas
loop
loop
push
jg
jne
dec
iret
sbb
imul
push
cmp
mov
(bad)
aad
dec
inc
lods
mov
add
loopne
in
adc
pop
cld
shl
sub
mov
adc
jmp
dec
xchg
imul
sti
pop
jmp
lahf
ja
and
inc
and
sbb
and
daa
aad
adc
test
cwde
push
pop
rcr
push
pop
add
pop
fnstsw
push
jmp
lods
out
dec
push
xchg
gs
pop
jae
add
or
inc
imul
push
push
adc
test
xor
dec
lods
adc
scas
lock
aam
xor
and
stos
imul
inc
sbb
mov
inc
mov
push
jmp
lahf
cmp
push
(bad)
aas
je
sub
sbb
in
ja
lock
arpl
push
out
inc
inc
cmp
loop
adc
dec
cmps
inc
retf
dec
outs
sub
aas
lock
add
sti
dec
inc
mov
add
mov
and
sbb
popf
pop
jb
sbb
sbb
in
jle
fs
dec
repnz
(bad)
ja
aaa
and
xchg
push
add
push
push
push
push
push
fisubr
mov
jne
call
xor
jge
mov
outs
mov
inc
std
add
cld
mov
cmc
sub
or
repz
dec
loopne
adc
inc
xor
xchg
jl
mov
pusha
ins
pop
mov
mov
or
mov
mov
inc
mov
dec
into
inc
pushf
test
and
jb
cld
out
les
out
jae
rcl
sbb
mov
out
mov
add
stos
add
test
pop
loopne
test
mov
sub
jl
cmp
ret
push
xchg
lds
push
retf
idiv
sub
mov
loopne
jle
sar
ja
xchg
sub
xchg
fs
sbb
ins
and
je
inc
or
mov
ins
int3
mov
rol
daa
gs
es
out
push
cld
cs
sub
xor
mov
mov
js
jo
dec
lahf
lock
movs
lods
cmp
jb
jle
mov
cmp
arpl
mov
push
sub
jmp
mov
and
mov
mov
dec
in
sbb
mov
sub
lds
push
or
cmp
mov
xchg
mov
sbb
pop
movs
aad
fs
push
push
and
xchg
test
mov
push
ret
loope
ficomp
jns
lods
aas
(bad)
push
stos
adc
pop
jle
je
jae
sbb
addr16
(bad)
int3
hlt
pop
ja
jmp
push
sbb
inc
jb
and
jb
fisttp
aad
xchg
int
dec
push
retf
jp
cwde
xchg
mov
cmc
pop
xchg
outs
shl
das
stos
push
mov
mov
mov
movs
repz
in
ficom
inc
(bad)
adc
jmp
pop
fist
cdq
jae
add
sub
xchg
sub
dec
jnp
sti
mov
push
xchg
xchg
push
aad
mov
cmp
cmp
pusha
ss
aad
aas
pushf
dec
gs
and
sub
outs
push
test
pop
and
xor
(bad)
fisubr
ins
repnz
imul
mov
mov
dec
or
push
in
(bad)
mov
lock
mov
xchg
or
mov
mov
mov
scas
iret
sub
cmp
nop
stos
out
(bad)
mov
xchg
sub
nop
sub
xor
outs
and
jg
popa
retf
rol
call
lock
lahf
jno
mov
repnz
inc
hlt
jne
fcom
xchg
jg
sbb
add
test
fs
fmul
lahf
shl
push
aas
repnz
jb
mov
sbb
cld
mov
push
sub
or
push
sbb
aaa
loopne
cmp
pushf
in
push
fist
xchg
in
jns
sub
fstp
add
aad
lahf
sub
lods
pop
rol
lock
fld
or
scas
adc
jg
mov
shr
inc
push
mov
(bad)
dec
adc
pop
cmp
(bad)
std
adc
jl
sub
fs
push
lds
test
test
outs
in
stc
dec
lea
std
out
ss
jmp
sbb
dec
mov
cwde
into
xor
ss
or
shl
out
mov
or
pop
lods
mov
pusha
jge
xchg
fstp
mov
push
inc
push
pop
loop
clc
in
test
in
clc
je
pop
mov
inc
sub
mov
xor
popa
sahf
push
sub
fs
nop
sub
mov
and
pop
jmp
mov
fmulp
scas
lods
dec
mov
pusha
push
out
cmp
sbb
shl
scas
rcr
or
inc
pop
in
cwde
add
or
or
mov
cmp
aam
mov
cmp
cmps
cwde
jmp
mov
mov
call
sbb
out
outs
xlat
add
cmp
in
dec
sti
pop
jge
lea
or
push
cmp
clc
and
fs
pop
xor
sbb
cld
lock
enter
sti
jmp
and
xor
(bad)
cmp
sahf
js
bound
and
jecxz
fdiv
mov
out
test
ror
adc
sub
in
in
push
mov
loop
int3
mov
cmp
inc
adc
in
popa
push
jmp
inc
leave
xor
idiv
jecxz
repz
dec
add
cmp
xor
add
imul
fidivr
sub
inc
clc
imul
push
stc
das
jmp
psubsw
xor
cmp
in
jmp
jb
jne
mov
ror
xchg
xchg
aam
mov
push
retf
push
aam
aaa
dec
sbb
fisubr
mov
jl
out
push
imul
sbb
stos
push
jecxz
or
mov
leave
add
mov
out
shr
ins
pop
push
and
push
retf
mov
mov
mov
inc
sbb
fcmovnb
gs
xchg
sbb
imul
popa
and
retf
stc
adc
pop
cmp
mov
movs
pop
data16
push
dec
dec
jmp
sbb
pop
sub
mov
ret
imul
stc
push
xchg
cmps
sub
leave
bound
dec
repz
lods
dec
mov
dec
ins
fs
jbe
jmp
push
repz
in
gs
add
call
stos
jmp
push
pop
add
(bad)
adc
mov
sub
add
das
sbb
mov
cmps
repnz
retf
dec
repnz
mov
cmp
retf
cmp
xor
mov
jecxz
or
push
inc
xchg
ror
lds
dec
sbb
xchg
jne
shl
in
adc
cmp
hlt
(bad)
or
stos
cmp
push
ja
mov
enter
dec
sbb
aaa
ror
inc
dec
add
dec
fstp
inc
ret
pop
ficom
arpl
mov
push
inc
fist
lds
or
outs
or
xor
and
fld
leave
out
pushf
xor
test
movs
lods
fcmovbe
gs
scas
xchg
retf
jl
fild
push
neg
inc
aas
dec
imul
mov
inc
xor
mov
adc
pop
test
pop
call
xor
ret
call
outs
imul
push
mov
mov
and
lods
(bad)
leave
es
adc
in
mov
and
repnz
push
fcomp
cmp
aam
ins
aam
adc
push
sub
popf
fdivrp
push
mov
mov
xor
(bad)
jmp
add
mov
dec
test
nop
xchg
call
sbb
dec
(bad)
jg
mov
and
test
pop
add
fld
mov
fistp
mov
mov
aaa
test
cmp
enter
inc
or
mov
or
ds
dec
pop
sbb
in
or
or
(bad)
jle
and
addr16
jae
add
arpl
std
mov
sub
mov
jo
mov
inc
je
adc
xchg
daa
xchg
push
inc
mov
scas
outs
in
ss
imul
pop
lods
stos
cmps
cmp
jnp
mov
jne
sbb
test
enter
sti
cld
cmc
aad
shr
js
cmp
mov
sub
dec
lds
jle
jge
cmp
int3
push
out
pop
mov
jne
jecxz
mov
pop
shl
mov
nop
iret
or
pop
data16
out
int3
xor
mov
cmp
cmp
stos
mov
fadd
stos
add
and
mov
sbb
cmps
fwait
mov
test
gs
mov
lds
mov
adc
and
push
xchg
fs
les
mov
add
sbb
js
pop
adc
push
xchg
inc
xlat
push
fcmove
bound
xor
or
xor
jle
or
mov
dec
std
sub
dec
jp
fwait
aam
mov
adc
loop
loope
add
int
loop
inc
sti
cmc
pop
sub
pop
(bad)
and
mov
fstp
imul
leave
clc
mov
out
data16
sub
int3
dec
mov
aam
mov
adc
and
jb
ret
imul
adc
add
not
add
inc
ds
popf
xlat
(bad)
mov
pop
jne
(bad)
into
mov
add
(bad)
shl
rcl
pop
fdivr
pop
push
cmp
icebp
lock
adc
xor
jns
mov
fild
and
pusha
inc
popf
mov
mov
mov
dec
push
in
test
int3
add
dec
add
mov
dec
fistp
mov
leave
nop
and
sbb
ret
inc
push
stos
jmp
push
pop
call
ret
push
cmp
icebp
cmps
jle
int3
scas
sub
push
pop
or
call
std
mov
push
pusha
arpl
fst
out
jge
cmp
mov
imul
inc
mov
push
sbb
push
cmc
xlat
test
ins
or
(bad)
mov
pop
call
jp
test
rcr
ins
aad
and
enter
push
adc
lods
loopne
xor
stos
icebp
enter
mov
add
std
mov
push
mov
sbb
scas
dec
jo
dec
and
adc
inc
adc
xchg
mov
out
inc
sti
into
out
cmp
pop
ror
pop
jb
add
sti
cmps
mov
push
pop
adc
mov
jo
cs
cmps
adc
add
mov
pop
pop
cdq
in
xor
mov
fiadd
(bad)
cmp
mov
pop
cmp
enter
les
xchg
out
add
aad
or
sbb
and
sbb
popf
or
push
cli
dec
push
add
xchg
cld
call
les
jbe
ds
int
pop
jecxz
mov
rcr
nop
stc
(bad)
(bad)
fnsave
int
add
inc
bound
pop
sar
xor
call
mov
and
push
es
lock
sub
jmp
sub
adc
rcl
mov
fadd
mov
aaa
adc
ins
pop
leave
pop
mov
loopne
jns
or
inc
popa
inc
inc
mov
aaa
xchg
jnp
push
bound
int3
in
cmp
mov
or
push
sar
push
pusha
xchg
and
dec
shl
cmp
loop
sub
sbb
sbb
scas
fcomi
dec
cmp
das
(bad)
xchg
fs
mov
xor
cmp
mov
lods
fidivr
out
fs
test
xchg
bnd
pop
mov
jns
push
xchg
stc
lods
movs
sahf
rcr
cmp
ret
push
test
test
outs
rcl
pop
retf
hlt
or
xchg
sbb
shr
fcmovnb
imul
call
sbb
or
mov
sub
addr16
inc
inc
lahf
mov
out
inc
mov
jge
cmps
sahf
sub
cmp
mov
scas
pop
jns
xor
aas
fdiv
xchg
jmp
mov
push
fild
jb
shl
lea
cmp
mov
pop
hlt
push
js
xlat
cmp
pop
mov
(bad)
xor
stc
fucomi
popf
enter
add
leave
sbb
je
fcmovnb
fimul
in
xchg
movs
mov
ins
mov
test
or
dec
dec
mov
adc
push
sub
add
jno
(bad)
lea
jne
xor
push
ror
int3
cmp
jl
sbb
mov
jge
mov
adc
iret
inc
scas
fimul
push
bndldx
pop
mov
jmp
and
sbb
xchg
(bad)
cmp
fst
dec
lds
mov
xlat
sub
pop
mov
call
mov
mov
movs
add
cmps
std
int3
jecxz
sub
loop
cmp
ds
mov
and
bound
lock
in
test
push
dec
pop
dec
jno
sar
mov
fucomp
push
ret
retf
adc
mov
sub
jnp
inc
sbb
dec
push
adc
xchg
out
aas
sub
sub
out
pop
cwde
rcr
dec
cmp
arpl
jae
and
ins
fs
test
lock
xor
aaa
fistp
push
xchg
aad
adc
pop
and
out
cmp
lds
mov
jg
ficom
push
mov
or
aad
popf
das
mov
mov
das
jp
add
xor
dec
mov
fcomp
cdq
stc
cdq
sbb
lock
leave
jle
add
sti
imul
shr
add
rcl
mov
cmp
xor
push
(bad)
push
adc
xchg
mov
mov
aam
icebp
int3
leave
and
gs
scas
pusha
fwait
adc
mov
sub
jb
pop
js
cmc
andps
into
pop
or
pushf
(bad)
fsub
aam
dec
icebp
add
dec
pop
add
cli
push
out
mov
push
jge
mov
mov
pusha
mov
xor
jp
mov
add
adc
cmps
fadd
sbb
cmp
aas
sub
data16
sbb
push
add
add
sahf
and
stos
xor
inc
push
jno
ss
psrlw
loop
jns
aam
inc
int
or
fs
ret
cmp
mov
retf
dec
add
lea
and
jle
hlt
js
outs
fbld
fs
fadd
push
and
inc
cmps
shl
scas
pop
imul
loopne
ins
mov
retf
push
cmp
test
xchg
call
ret
pop
stos
sahf
inc
jmp
push
adc
out
ret
xor
loop
mov
ret
ret
popa
mov
sar
loope
aam
std
in
rol
cmp
retf
scas
adc
cmp
adc
jnp
mov
leave
mov
pop
clc
dec
mov
imul
sbb
imul
or
jb
push
mov
xchg
dec
retf
xor
imul
pop
pushf
adc
jno
jne
test
jmp
xor
push
fwait
cmp
fldcw
xchg
fisubr
inc
aas
(bad)
hlt
jb
sub
mov
pushf
popf
popf
xchg
and
add
out
cmps
mov
xchg
mov
or
mov
fimul
in
cli
pop
out
jns
js
sahf
cmps
addr16
xchg
pushf
cmp
std
ds
xchg
out
lods
inc
or
call
inc
dec
push
leave
fldenv
ret
sbb
fisubr
inc
daa
loopne
lods
xor
out
push
rol
dec
dec
out
(bad)
mov
sub
or
in
(bad)
jg
inc
jbe
add
dec
mov
mov
test
aad
adc
idiv
dec
(bad)
popa
(bad)
aad
daa
dec
xchg
ja
push
stos
retf
or
aad
jno
pop
and
leave
js
in
cmp
push
mov
or
push
lds
push
lea
jp
outs
and
in
fimul
add
dec
adc
cmps
jae
add
mov
and
jnp
push
stos
ds
loope
add
pop
lock
and
xor
retf
mov
test
inc
mov
scas
in
scas
jne
cmc
ins
xor
nop
jecxz
adc
push
jno
mov
mov
repz
fst
mov
jp
xor
cmps
sbb
pop
pop
cmp
test
jnp
inc
sbb
dec
leave
sbb
(bad)
loopne
pop
jae
dec
repnz
push
pop
adc
gs
xchg
push
mov
data16
mov
int3
push
sbb
push
(bad)
sar
jne
sbb
hlt
fisubr
repz
ins
mov
pop
das
loopne
jmp
ds
cmp
jno
retf
cwde
xchg
sti
and
ins
es
repz
mov
cmc
xor
(bad)
and
aad
pop
cli
fwait
out
jg
sti
pop
dec
push
aam
shl
cdq
jno
in
pop
in
clc
mov
push
out
sbb
or
jae
mov
ins
(bad)
(bad)
sub
js
call
mov
or
xchg
int
push
iret
push
mov
lahf
inc
lods
and
add
neg
or
mov
shr
pop
bound
xchg
jmp
pushf
test
in
and
and
push
jb
popa
fld
mov
inc
xor
inc
add
cmc
ret
mov
sbb
sbb
xchg
or
push
(bad)
cs
xchg
and
xchg
pop
xchg
push
arpl
lods
xchg
idiv
mov
sbb
xchg
push
push
dec
dec
pop
mov
push
sbb
ja
mul
mov
loope
cmp
mov
aaa
fs
out
stos
xchg
inc
pop
gs
fcmovnbe
mov
cmp
stos
in
mov
dec
adc
retf
hlt
pop
sahf
repnz
jns
sbb
ds
lods
aad
sbb
lock
mov
std
(bad)
and
ret
addr16
imul
xor
ja
dec
aas
mov
xchg
xor
mov
aas
and
pushf
mul
push
or
push
data16
and
sti
ins
lock
mov
cdq
add
scas
ret
sti
nop
enter
cmp
loope
mov
sbb
pop
jns
sub
push
inc
rcr
add
dec
or
in
or
loope
and
je
and
mov
xchg
out
(bad)
pop
out
mov
pop
cwde
mov
popa
sbb
aaa
jle
cmp
(bad)
jg
les
pop
test
das
xor
stos
sbb
dec
adc
pop
inc
lods
sub
sub
cld
mov
jnp
add
out
out
jp
dec
call
xor
sbb
cld
mov
add
push
mov
inc
movs
retf
test
hlt
adc
pop
dec
cmp
push
pop
fs
hlt
xchg
cmp
add
icebp
cmp
mov
mov
sub
mov
arpl
lock
movs
adc
das
xor
or
add
arpl
adc
pop
xchg
(bad)
jnp
jnp
cld
(bad)
out
xchg
dec
mov
xor
ins
imul
loopne
add
sti
int3
loope
call
xchg
adc
fsub
sub
pop
jl
push
movs
or
sti
in
mov
jmp
fidiv
das
std
(bad)
stc
out
rol
pop
mov
cmp
(bad)
sub
std
dec
scas
lea
xor
lock
sub
popa
scas
mov
jmp
mov
mov
in
in
xchg
call
xor
pop
pop
dec
imul
shr
adc
add
sub
add
pop
or
pop
cld
push
jmp
or
andnps
mov
popf
jp
inc
adc
mul
(bad)
sub
in
and
sub
dec
call
mov
xor
jge
inc
loop
jg
fwait
cmps
jg
stos
cli
push
pop
ret
aam
test
aam
stos
push
mov
iret
mov
es
xor
mov
mov
mov
rcl
aaa
arpl
jne
inc
and
pop
adc
(bad)
push
dec
mov
jnp
popa
aaa
jge
xor
rep
addr16
mov
idiv
aas
hlt
adc
jne
push
lods
sub
stos
adc
movs
fisub
adc
shl
xchg
je
xor
test
add
int3
(bad)
mov
lock
popf
adc
fsubr
xchg
adc
test
rcl
imul
jae
dec
sub
inc
shr
fwait
xor
jge
nop
xchg
xchg
sbb
pop
imul
push
int
xor
add
dec
outs
inc
nop
gs
sti
clc
sbb
pusha
lea
jno
call
sbb
inc
push
mov
test
ret
push
rcl
(bad)
stos
ins
imul
xor
fcom
iret
inc
jl
cmp
pop
mov
scas
js
cmp
(bad)
sbb
(bad)
mov
outs
xlat
jle
and
xchg
cmp
sub
ds
jne
sti
pop
mov
ficom
or
into
push
jp
or
pop
sbb
dec
inc
inc
sub
repz
pop
mov
rcr
ficom
lods
shr
sub
imul
sbb
xor
sar
push
inc
inc
into
lahf
push
test
outs
dec
jg
fstp
imul
test
cwde
bound
repz
xchg
cmp
(bad)
lock
jb
fcomip
jb
cmp
jg
scas
or
dec
pop
in
push
test
inc
ror
sub
repnz
xor
mov
cdq
adc
ret
mov
and
pusha
loopne
hlt
sub
add
outs
adc
imul
call
mov
nop
aad
mov
push
or
mov
jns
cwde
pop
int3
inc
clc
jo
xlat
push
add
push
mov
outs
popf
sbb
es
rol
xchg
test
push
js
mov
movs
out
xchg
retf
aam
push
xor
pusha
inc
ins
idiv
mov
dec
or
movs
or
cmp
int3
pop
jno
addr16
fs
or
call
loop
movs
xor
jno
fld
fsubp
call
mov
sub
movs
add
jae
add
imul
lea
sahf
in
icebp
xchg
push
call
push
sub
mov
pop
push
inc
shl
sub
fwait
loop
sti
ret
into
xor
scas
xchg
icebp
bnd
fwait
push
and
pop
popf
push
jl
outs
test
sti
jns
or
je
mov
jge
inc
dec
sbb
push
call
push
cmp
(bad)
int3
popf
pop
xchg
push
pop
push
sbb
lea
and
shl
outs
bound
inc
jne
and
cmp
js
or
dec
cld
mov
pushf
jp
movs
jmp
and
imul
or
xchg
fcomi
call
push
or
mov
(bad)
enter
xor
rol
and
movs
mov
popa
or
ins
mov
pushf
fist
int
jb
push
xchg
pop
sub
pusha
aam
add
pop
jecxz
(bad)
cli
push
xor
je
test
popa
fiadd
sub
fcomp
ja
gs
int3
jl
push
dec
je
(bad)
je
push
aad
fiadd
jle
aad
loope
sbb
dec
xor
je
push
pushf
xchg
cs
sub
loope
cmp
dec
fsubr
jecxz
in
test
add
retf
xchg
xor
mov
sub
jg
jl
ret
fnstsw
mov
mov
fs
out
jne
mov
or
jecxz
(bad)
or
or
outs
xchg
xchg
mov
mov
loope
repz
jecxz
cmps
jo
mov
clc
push
dec
sbb
or
cmp
adc
lea
or
sub
pop
push
and
lds
and
xchg
dec
pop
mov
aaa
xor
cmp
push
push
add
dec
fcom
mov
sbb
lock
inc
mov
clc
sahf
fadd
jl
pusha
cs
inc
shl
lahf
out
pop
in
mov
int
mov
out
mov
call
ds
aas
xchg
adc
addr16
add
xchg
stos
push
std
inc
jmp
and
sbb
cmc
sbb
ja
mov
mov
mov
ins
pop
dec
mov
(bad)
jb
cs
cwde
jno
jl
push
pop
add
dec
outs
cmc
push
aad
cmp
xlat
or
fcom
mov
xchg
aad
mov
pop
stos
xlat
in
push
cmp
out
push
xchg
sbb
mov
jmp
cvtps2pd
push
clc
retf
mov
cmp
ffreep
sbb
xchg
je
pop
(bad)
out
mov
pop
adc
ins
sub
lahf
xchg
push
or
rcr
sub
setg
ret
and
push
mov
jb
icebp
mov
lds
sub
pop
sti
jg
cmc
jo
aad
sub
lgs
std
icebp
mov
repz
shr
inc
cmc
jb
fldcw
(bad)
pop
mov
push
cmp
mov
inc
retf
dec
xlat
cs
inc
(bad)
cli
pushf
cli
sbb
aas
xchg
rcl
pop
dec
mov
pop
inc
sbb
imul
add
std
int
pop
clc
and
mov
pop
aam
inc
sub
mov
or
dec
faddp
mov
sub
icebp
shl
xlat
jo
inc
in
lods
call
fistp
stos
dec
xor
(bad)
sub
movs
cmp
inc
xchg
ja
mov
jbe
mov
clc
leave
cli
or
loopne
rcl
jmp
pop
jp
ja
outs
push
ins
in
xchg
scas
ret
stc
add
xchg
cmp
retf
cdq
fmulp
mov
repnz
push
push
int3
xchg
sbb
sbb
nop
xor
iret
(bad)
dec
and
fisubr
or
push
pop
neg
xor
jmp
movs
push
sar
fsub
mov
fwait
cmp
rcr
push
adc
ins
adc
dec
push
(bad)
mov
mov
or
(bad)
test
sbb
jmp
jno
adc
adc
(bad)
mov
xchg
add
fnsave
call
(bad)
mov
(bad)
mov
lds
and
fsub
retf
cwde
inc
nop
(bad)
pop
retf
imul
mov
mov
stc
std
xchg
in
jo
arpl
hlt
fisub
mov
test
leave
(bad)
test
add
inc
jne
loop
test
stos
xchg
loope
inc
sub
sbb
or
or
pop
jo
ficom
add
(bad)
mov
pushf
mov
int
adc
rep
jge
pop
push
mov
xor
push
arpl
sub
ds
loop
test
or
xchg
cmp
pop
or
dec
dec
ret
(bad)
jp
push
fist
das
test
sbb
fs
and
fnstsw
push
cmp
fwait
test
leave
cmp
dec
add
(bad)
gs
cmp
xlat
sbb
sub
(bad)
aas
into
aad
out
rcl
xchg
shl
xchg
cs
daa
sbb
mov
or
ror
pop
fimul
fyl2xp1
push
mov
loopne
jno
xchg
and
lock
mov
xchg
scas
in
mov
jb
and
shr
out
pop
dec
mov
loop
mov
sbb
jnp
scas
ja
sub
(bad)
mov
add
mov
in
jns
out
cli
cmp
lds
mov
dec
into
sti
adc
mov
mov
setle
xor
out
pop
(bad)
repnz
mov
lods
xchg
or
int3
mov
loop
jp
adc
cs
inc
and
pushf
mov
loop
or
cmp
sub
adc
fwait
aas
mov
push
mov
dec
test
inc
out
push
jecxz
jb
daa
in
test
(bad)
movs
fst
sbb
in
movs
pop
jp
push
xor
fdiv
ins
cmp
mov
mov
btc
xor
call
xchg
push
inc
stos
xchg
fidivr
or
mov
loopne
cmps
jecxz
ret
je
gs
and
(bad)
fst
jnp
pop
addr16
sub
ret
sbb
sahf
xchg
pop
add
repnz
cmp
mov
cmp
add
or
or
add
in
add
(bad)
loope
pop
mov
dec
jbe
jp
pop
dec
xchg
and
in
mov
inc
xor
std
fstp
xor
fs
js
mov
repz
outs
mov
ja
pop
cmp
or
(bad)
xor
and
xchg
icebp
jo
add
mov
int3
sti
mov
mov
ins
shr
push
scas
aaa
sub
xor
cmc
push
nop
cmp
sbb
les
movs
xor
jge
jne
nop
pop
cmc
call
xchg
leave
icebp
jns
xor
stos
cdq
in
jnp
mov
(bad)
into
repz
enter
out
pop
fdiv
aad
scas
jno
xchg
addr16
jmp
jecxz
cmp
fsub
jle
out
ret
loope
xor
loope
push
arpl
cmp
adc
sbb
(bad)
out
cmp
sbb
xchg
test
push
push
mov
cmp
int
and
test
test
xchg
jmp
mov
ficom
mov
jg
push
jge
inc
std
retf
adc
bound
int
and
mov
cld
or
dec
das
and
mov
and
cmp
and
push
cmps
cdq
sub
out
push
enter
(bad)
cmc
add
push
or
xor
and
add
lock
fidiv
ins
imul
int
adc
push
cmps
cmp
je
push
lock
adc
lahf
popa
mov
mov
mov
and
sub
and
push
arpl
sahf
out
push
push
leave
xor
jle
movs
pushf
stos
push
xchg
addr16
lea
je
xor
jge
outs
mov
out
dec
or
xchg
sbb
js
dec
xchg
sbb
test
ins
out
ret
jns
shl
xor
ds
add
out
push
and
outs
into
pop
push
arpl
push
arpl
or
ror
bound
les
imul
scas
mov
mov
lds
xchg
xchg
jb
stos
add
popa
inc
push
mov
sbb
movs
mov
mov
inc
pop
mov
loope
xchg
push
in
into
jbe
sbb
(bad)
cmp
leave
ss
in
pop
out
jne
mov
gs
loop
out
imul
inc
push
xor
or
lods
push
pop
dec
xor
or
in
push
iret
mov
lods
popa
cwde
jmp
inc
(bad)
pop
push
ins
(bad)
mov
mov
adc
add
leave
call
pop
pop
outs
push
xor
hlt
mov
(bad)
scas
xchg
xor
aas
pop
fdiv
sub
xchg
and
push
add
not
call
data16
bound
inc
sahf
movs
or
mov
dec
fisubr
and
imul
adc
jecxz
jno
dec
inc
aam
stos
jno
add
sub
push
mov
addr16
mov
mov
cwde
shl
sub
gs
movs
jo
dec
push
rol
and
loop
les
cli
ffreep
inc
xchg
xor
ret
std
pop
dec
outs
push
bound
shl
stos
outs
mov
xchg
out
sub
adc
pop
mov
cld
scas
cwde
jge
jle
loopne
fwait
adc
lods
test
xchg
daa
mov
je
mov
xchg
call
popa
mov
cwde
sbb
div
mov
cwde
test
lock
inc
(bad)
push
sbb
cmp
jno
sub
pop
cmp
retf
daa
sub
sbb
xchg
scas
inc
pop
dec
jle
(bad)
or
xchg
add
shr
dec
mov
idiv
in
cmp
mov
stos
and
test
mov
ror
shr
dec
push
das
mov
inc
sbb
jnp
xchg
mov
ja
(bad)
push
dec
in
mov
dec
dec
add
jo
inc
fcomip
cmp
jnp
add
cmp
sub
mov
inc
fsubrp
ret
pop
adc
mov
inc
(bad)
jp
(bad)
hlt
sub
lods
jmp
in
adc
mov
addr16
push
xchg
inc
fsub
popa
jecxz
jno
add
fwait
daa
push
mov
mov
jns
mov
(bad)
cli
sub
or
scas
call
push
sub
fwait
sbb
xor
pop
enter
cmps
inc
dec
jb
js
shl
inc
or
test
mov
sub
adc
nop
and
xlat
inc
pop
sbb
add
scas
mov
jge
std
and
push
push
dec
dec
scas
jmp
mov
xor
call
retf
or
sbb
cmps
mov
pop
mov
call
repz
inc
sbb
or
sbb
imul
push
or
inc
xchg
int
div
pop
push
stos
push
mov
arpl
popa
out
nop
mov
pusha
cmp
and
push
mov
mov
daa
cmp
mov
addr16
cmp
test
pusha
xchg
push
aaa
data16
adc
push
fst
dec
mov
pop
push
addr16
adc
mov
add
ins
mov
jle
fwait
ret
and
jnp
std
sahf
repz
icebp
jge
aam
jo
movs
lods
jae
fsub
iret
fst
push
leave
mov
inc
gs
add
and
rol
and
pop
mov
dec
add
out
sub
pop
mov
jmp
je
hlt
repnz
dec
pusha
dec
(bad)
hlt
jne
xor
popa
jae
jnp
mov
hlt
shr
mov
add
int3
test
xchg
aaa
cmc
ins
cmp
sub
inc
jae
sbb
dec
sbb
in
pop
mov
(bad)
ror
pop
repz
cmp
inc
int3
gs
jb
sub
push
aas
inc
jne
bt
mov
(bad)
lahf
xchg
sbb
push
fisub
lahf
and
dec
inc
mov
cmc
jmp
mov
ins
mov
xor
sub
xchg
pop
retf
retf
cmp
imul
mov
jg
(bad)
inc
test
pop
jmp
bound
xor
pop
mov
cmp
retf
cmps
sub
hlt
jne
daa
in
push
inc
dec
cmps
call
aad
mov
xchg
cmp
xor
iret
stos
sar
push
cmovle
sbb
xor
ds
mov
dec
dec
jae
cmp
jl
sub
inc
push
jmp
jb
dec
outs
sub
hlt
cwde
xor
daa
jbe
(bad)
mov
lods
ins
lods
call
in
mov
adc
mov
dec
in
test
movs
bound
inc
mov
leave
shl
ds
push
xchg
pop
mov
pusha
cmp
cmps
mov
jge
ds
ficom
arpl
imul
xor
inc
jmp
arpl
pop
stos
inc
sar
xchg
mov
and
rol
add
dec
pop
ret
or
push
gs
add
pop
jmp
sbb
adc
jg
iret
jnp
(bad)
(bad)
in
sbb
sbb
pop
stc
mov
or
push
mov
mov
push
call
jecxz
out
inc
xlat
outs
in
int3
rcr
repnz
in
or
xchg
add
xchg
sub
(bad)
dec
add
xor
clc
pusha
adc
cmp
dec
jnp
pop
hlt
mov
and
jg
stos
push
mov
mov
lea
das
pop
sahf
ins
push
in
lds
xchg
scas
pop
inc
popf
scas
mov
pop
sbb
shr
lea
sbb
jo
sbb
nop
call
je
inc
cmp
je
pop
hlt
or
xor
in
mov
out
dec
stos
sbb
pop
mov
and
data16
jge
imul
movs
je
call
arpl
inc
and
movs
xor
or
push
xchg
mov
loop
mov
test
jbe
or
cmp
stc
inc
pushf
popa
or
dec
dec
push
cld
sbb
leave
arpl
das
jl
xor
sbb
add
sub
repz
fcom
(bad)
sbb
adc
mov
dec
sub
adc
or
(bad)
xchg
or
pop
out
aam
imul
sub
(bad)
mov
inc
cli
sub
xchg
aad
mov
add
mov
dec
and
mov
push
cmp
xrelease
imul
push
xor
push
leave
test
mov
out
outs
mov
aad
cli
push
out
mov
idiv
enter
out
(bad)
call
jmp
mov
es
nop
sbb
sbb
xor
sbb
es
or
adc
mov
les
push
in
hlt
cmps
push
rol
das
mov
outs
movs
adc
or
or
dec
repz
sub
jmp
imul
lea
out
inc
dec
xchg
(bad)
adc
mov
and
nop
lods
adc
test
mov
sbb
arpl
jae
rcr
and
mov
call
scas
pop
mov
and
mov
movs
sub
dec
in
mov
cmp
ret
ds
mov
retf
(bad)
mov
inc
mov
cdq
sbb
add
xor
test
inc
iret
out
outs
outs
mov
xor
out
int
xor
ja
or
bnd
popfw
sbb
repnz
pushf
inc
jp
jmp
pop
sar
dec
gs
ins
lds
call
pop
adc
xor
jnp
cwde
xchg
aad
mov
add
and
or
mov
push
dec
or
popa
jl
adc
or
fwait
fwait
pop
imul
fwait
lock
mov
loopne
daa
jecxz
adc
mov
gs
dec
xchg
aas
push
pop
ss
iret
cmps
popa
call
aad
add
mov
sub
mov
(bad)
stc
in
pusha
fs
aad
cmp
mov
jge
inc
push
mov
cmp
nop
mov
repz
and
inc
sub
scas
(bad)
mov
les
cmp
jge
dec
mov
jp
mov
jp
test
sbb
add
push
ret
jbe
fwait
cmp
or
jo
jb
in
jl
inc
test
sub
lahf
or
adc
or
cmc
dec
pop
jmp
and
adc
popf
jle
stos
xlat
adc
addr16
ins
fs
adc
dec
in
pop
add
les
test
fbld
xor
mov
sub
sub
xchg
icebp
in
ret
xchg
(bad)
fadd
je
loope
stos
in
fcmovb
inc
in
call
xor
inc
std
push
push
adc
push
lahf
sub
shl
mov
sahf
sbb
ror
xchg
jb
mov
sub
cmps
add
lahf
jo
mov
mov
ret
xchg
fldenv
push
out
not
ror
adc
cdq
add
je
add
das
rol
lods
(bad)
lock
cmps
sbb
(bad)
loope
mov
shl
mov
push
dec
fsub
cwde
cmp
add
sbb
fild
push
cmps
outs
icebp
lock
in
iret
push
xchg
scas
pop
imul
lods
lods
sbb
outs
sar
fnstcw
lahf
sub
test
mov
mov
and
in
mov
mov
sbb
cmc
and
add
xor
xchg
rcl
or
popa
pop
shr
movs
aad
xor
fsubr
cmp
xchg
add
jmp
push
sub
lds
and
test
icebp
ss
imul
repnz
cli
sbb
jae
xor
cmp
pushf
cmps
or
pop
inc
jl
shr
movs
jae
sbb
mov
ds
call
mov
movs
xor
and
adc
dec
xchg
scas
push
sub
dec
scas
and
into
sub
aad
and
cmp
xchg
ficom
add
rcr
mov
lods
jns
pusha
out
or
and
(bad)
mov
fild
ror
test
(bad)
aam
xchg
jle
dec
sti
clc
outs
push
mov
mov
bound
bound
aaa
lds
adc
fld
hlt
test
rcr
xchg
stos
into
sbb
into
mov
sub
test
retf
fwait
hlt
clc
mov
aas
mov
mov
call
pop
xchg
pop
popa
and
xor
daa
adc
push
dec
pop
ds
out
dec
scas
xchg
jge
lds
adc
sbb
mov
push
(bad)
lock
ja
clc
sar
mov
out
push
stos
jne
add
test
xlat
sbb
pop
gs
dec
shr
or
inc
cmp
je
push
inc
xchg
xor
test
xor
stos
sub
mov
sub
test
jmp
jg
sbb
adc
pop
(bad)
dec
xor
adc
or
inc
xor
adc
mov
ins
or
mov
and
jp
(bad)
(bad)
xor
dec
outs
les
int3
xchg
int
mov
(bad)
jb
jmp
aaa
sbb
imul
push
sub
dec
ins
mov
mov
xrelease
jmp
adc
cmp
cmp
fs
fcomp
mov
dec
xchg
xor
out
stos
lods
fst
xor
mov
mov
pop
rcl
lock
cmp
and
mov
jo
and
data16
aas
pop
out
jne
das
lds
outs
loop
lock
mov
movs
pop
out
div
mov
push
xchg
xchg
(bad)
fld
xchg
sub
dec
aaa
cs
test
stos
call
and
test
mov
iret
jmp
je
icebp
ss
out
push
jne
nop
in
push
or
out
cmps
and
ins
in
fcmove
cwde
in
gs
in
and
ffree
or
xor
sar
not
pop
and
bound
daa
dec
push
ficom
js
enter
popa
jno
jecxz
jp
hlt
repz
retf
(bad)
outs
or
jae
stc
dec
cld
cmp
cmp
and
rcr
fs
stos
xchg
rcr
inc
mov
jnp
shl
sbb
les
cmp
data16
and
cmp
out
cmp
jnp
mov
repnz
and
movs
jnp
int3
add
sub
clc
in
or
adc
xor
xlat
push
pop
movs
mov
sub
sbb
iret
inc
add
aaa
and
xor
mov
movs
idiv
xor
mov
push
mov
add
mov
add
cld
pushf
gs
lea
imul
push
in
mov
outs
adc
(bad)
repz
pop
stc
jo
shr
cmp
mov
fisubr
ffreep
outs
push
aaa
std
mov
mov
das
fdivr
(bad)
pop
push
nop
inc
and
stos
mov
push
out
push
shl
mov
nop
jg
sbb
xchg
clc
in
aas
push
call
sub
jp
jge
loope
aaa
sti
pop
xchg
mov
arpl
xlat
out
mov
add
mov
fsub
es
and
cmp
mov
pushf
xchg
mov
xchg
sub
jp
icebp
push
mov
dec
imul
fbstp
mov
jmp
movs
cld
inc
add
ds
(bad)
cdq
xor
sub
nop
xchg
push
cmp
and
xchg
rcl
ins
cmps
sub
es
lds
popa
mov
mov
add
add
or
out
in
pop
cmps
jg
jg
ins
xchg
bound
dec
mov
and
cmps
inc
inc
ret
jne
xlat
push
mov
push
push
(bad)
push
cmp
fs
and
add
mov
stos
bound
push
mov
bound
xchg
inc
jne
cmp
mov
repnz
mov
and
(bad)
pushf
call
or
jo
outs
scas
frstor
enter
cmp
les
daa
jae
retf
jge
jne
(bad)
lds
dec
cmp
sub
loope
adc
dec
sub
dec
dec
push
mov
(bad)
jb
push
pop
lods
in
mov
std
push
(bad)
sub
pop
push
cmps
iret
inc
jg
mov
sahf
or
aas
mov
jno
enter
cs
into
jne
dec
sbb
sub
in
loope
xchg
sbb
fdiv
pop
push
ficom
test
and
jle
mov
mov
cmp
out
cmps
out
inc
jl
repz
mov
and
push
mov
jp
in
std
mov
dec
cli
repnz
dec
push
add
scas
sub
div
stc
jns
xchg
push
push
inc
fadd
jb
xchg
jmp
jne
add
ins
cdq
ins
retf
cwde
mov
movs
push
push
lds
mul
add
push
mov
push
in
and
jb
xchg
(bad)
mov
sbb
fisttp
or
sbb
int
test
mov
and
jb
fs
inc
add
cmp
pop
shl
dec
mov
inc
sbb
imul
xor
jl
xchg
ret
out
mov
push
cli
iret
ss
js
jle
das
lds
mov
sbb
fadd
pop
cmp
jp
push
cmc
jg
mov
into
ss
sbb
or
inc
fldcw
add
lea
adc
popf
ret
movs
push
lahf
mov
sahf
add
xchg
in
dec
jle
inc
pop
sbb
mov
add
in
cmp
mov
xor
ds
fs
cs
rcr
call
iret
xchg
or
xor
scas
or
out
inc
inc
fdiv
stc
push
ret
cdq
sbb
adc
out
ins
cmp
mov
repz
cmp
mov
in
mov
es
icebp
push
sub
iret
lds
xor
es
mov
out
xchg
and
dec
pop
mov
and
mov
xchg
pop
add
push
adc
imul
outs
leave
push
in
or
mov
mov
xor
bound
(bad)
cs
mov
fistp
retf
in
cmps
imul
add
mov
ja
push
fsub
cdq
js
int
cmp
cli
lahf
mov
push
fild
mov
das
nop
jge
pushf
xor
push
mov
push
pushf
adc
sub
or
xor
mul
(bad)
rcr
stos
mov
push
inc
stos
loop
xcrypt-ctr
cmps
pop
mul
mov
mov
push
dec
ficomp
push
xchg
dec
mov
not
clc
loop
inc
xor
cmp
xchg
sti
sub
stc
xchg
lods
ss
inc
add
xchg
dec
or
lds
jp
mov
xchg
or
sub
daa
or
or
mov
add
call
in
leave
ss
fwait
add
outs
xchg
mov
xchg
mov
mov
div
xor
outs
pop
jl
push
in
xchg
xlat
mov
rcl
mov
sbb
jbe
fstp
xor
adc
cmps
outs
test
in
and
add
adc
jmp
jge
pop
mov
add
add
jecxz
out
nop
lahf
out
xchg
mov
retf
cdq
or
xor
lds
out
mov
fdiv
push
in
loop
dec
fsub
pop
out
call
pop
jne
jg
popf
xchg
mov
(bad)
adc
daa
ficomp
mov
int
outs
adc
test
jnp
fcmovne
repnz
in
les
inc
imul
sbb
push
int
data16
(bad)
call
in
push
out
enter
rcl
es
aam
or
sub
dec
clc
lods
mov
sub
fs
xor
fcom
adc
mov
enter
dec
inc
sbb
mov
mov
in
movs
or
xchg
pop
repnz
lds
inc
ins
mov
sub
test
retf
es
cmp
push
xor
or
xor
test
hlt
push
xor
add
mul
and
into
aam
aas
pop
out
mov
hlt
and
aam
adc
dec
outs
sar
xchg
push
push
dec
clc
xrelease
cmp
cmps
enter
adc
pushf
jle
cdq
pop
popa
pop
pusha
ja
pusha
psllw
push
popa
xor
xchg
clc
js
outs
fimul
and
cdq
push
fwait
or
sar
pop
dec
jmp
cdq
jb
xor
adc
movs
fcom
push
mov
test
jecxz
clc
movs
rcr
test
cwde
dec
arpl
stos
sti
(bad)
xor
pusha
mov
adc
mov
adc
adc
xor
mov
push
test
enter
pop
call
mov
xchg
sub
std
es
cs
push
or
dec
mov
xor
push
popa
sahf
mov
mov
(bad)
(bad)
xchg
ja
inc
js
dec
xor
mov
mov
jo
mov
aad
adc
test
mov
cli
add
and
sbb
sti
xchg
ds
and
pop
xor
lods
idiv
mov
clc
adc
jl
dec
cmps
gs
movq
sbb
dec
mov
inc
pop
mov
fwait
out
mov
out
add
call
mov
iret
sub
call
inc
fld
jnp
cmps
pop
(bad)
clc
(bad)
sbb
rcr
sub
pop
cmp
xor
jle
inc
fcmovnb
add
adc
jmp
push
or
xchg
sbb
push
outs
jmp
pusha
and
cdq
in
mov
dec
idiv
jl
popa
push
shl
aas
js
test
xchg
lahf
adc
sub
jecxz
jb
in
dec
lea
in
fwait
mov
daa
outs
mov
adc
add
test
cli
gs
fucomi
arpl
dec
fidiv
stc
adc
pop
and
sub
jl
ja
aad
jbe
es
mov
inc
imul
pusha
test
(bad)
jno
add
ss
xchg
cmps
(bad)
outs
in
and
add
fucom
inc
loop
sbb
add
int3
lock
xchg
adc
popf
cmps
mov
add
test
push
mov
fadd
sub
ds
leave
dec
ins
in
aam
mov
dec
sbb
inc
daa
jae
jp
xlat
stos
xchg
adc
not
jnp
sar
cmp
and
std
jb
stc
sbb
push
(bad)
mov
in
push
jnp
repnz
mov
sahf
pusha
xor
cmp
je
or
xor
cwde
cli
dec
cwde
sbb
les
mov
int
out
fldenv
scas
aam
mov
jae
shr
pop
cmps
add
xor
lock
cwde
dec
shl
adc
xchg
jo
(bad)
out
ret
add
ret
sar
xchg
es
push
dec
fwait
in
outs
sub
push
neg
loope
pop
bound
mov
pop
xchg
xor
dec
test
xor
and
inc
inc
or
pop
es
xor
adc
es
repz
add
cld
sub
aaa
daa
ficom
sbb
mov
pop
mov
sbb
retf
(bad)
fisubr
imul
bound
loope
imul
add
jae
cmp
jg
jg
retf
push
jo
ja
scas
lea
inc
add
mov
jmp
ret
mov
cmp
push
jge
or
adc
shr
sbb
aam
fwait
jecxz
push
(bad)
dec
leave
ja
clc
dec
inc
into
cwde
sub
push
xor
inc
data16
in
push
imul
aad
gs
jg
mov
cmp
arpl
mov
xchg
xor
ss
int
jnp
jne
fiadd
pop
inc
pusha
call
mov
inc
bound
mov
or
lahf
ret
xchg
sbb
add
enter
adc
push
jnp
cli
pop
out
pop
adc
movs
dec
ja
push
cld
cmp
out
push
cmp
retf
out
aad
movs
add
adc
and
or
addr16
lea
xchg
test
ror
mov
jb
imul
mov
xchg
jns
shl
(bad)
dec
adc
xor
cld
adc
pop
jp
sbb
inc
push
pop
rol
cld
std
xlat
xchg
outs
jg
icebp
xchg
mov
mov
jmp
out
xchg
adc
xchg
out
rcr
add
xor
jmp
pusha
mov
ret
and
aam
adc
test
movs
adc
xor
mov
loop
sbb
mov
mov
lahf
xchg
mov
(bad)
add
leave
xor
or
ins
(bad)
out
pop
(bad)
(bad)
cmc
cmp
push
sahf
(bad)
pop
cmp
icebp
ret
fldenv
lds
push
mov
sbb
adc
(bad)
jmp
mov
dec
and
xlat
jg
and
cmp
in
mov
ds
xor
cs
cmp
jb
in
div
xor
pop
leave
nop
add
enter
adc
fild
ret
in
imul
bnd
xor
into
es
das
jg
not
test
(bad)
fisub
fwait
pushf
retf
mov
mov
sahf
add
leave
ss
mov
ja
xchg
hlt
sub
xlat
adc
mov
cli
addr16
push
test
addr16
rol
loopne
push
xor
add
push
leave
cld
ins
pop
fstp
and
mov
scas
xchg
mov
pusha
ds
ja
dec
add
mov
inc
and
enter
pusha
mov
aaa
loope
push
xchg
and
and
out
(bad)
and
or
sub
test
push
shr
movs
fcom
or
or
sub
mov
pop
scas
dec
js
pusha
cmp
mov
fdivr
pop
jb
push
aas
in
push
xlat
jnp
ja
fcom
push
add
ja
in
fwait
and
cs
scas
push
shl
or
push
stc
adc
pop
cld
std
push
sbb
mov
test
pop
cmp
loop
out
and
inc
and
stc
push
(bad)
out
adc
xor
into
mov
mov
shr
hlt
pop
in
cmc
std
inc
dec
sbb
jbe
jmp
repnz
ss
or
pop
mov
fidiv
repz
xor
adc
inc
lods
xor
ror
push
inc
jg
shl
mov
pop
ror
push
adc
ret
clc
jb
(bad)
sub
int
lods
push
adc
sbb
mov
(bad)
lds
shl
stc
and
inc
jb
aad
scas
imul
std
repz
call
loopne
xchg
mov
imul
shr
call
push
jg
into
and
int3
sahf
out
mov
loope
loop
inc
gs
push
xor
xlat
and
xor
xor
lods
mov
cmp
std
pop
push
xor
push
add
xor
push
cs
jb
mov
stos
jne
jge
js
push
icebp
cmp
sbb
adc
popf
lahf
scas
jbe
cmps
(bad)
cmp
gs
loop
pop
leave
mov
fs
mov
lea
in
out
dec
(bad)
shl
sub
pop
addr16
lock
call
das
mov
cs
mov
ja
cld
xor
imul
xchg
xchg
(bad)
int3
gs
lahf
sub
(bad)
daa
xchg
pop
xchg
sbb
or
bound
mov
push
out
stc
stc
dec
xor
fild
mov
mov
mov
pop
jns
aad
fld
daa
call
jae
jmp
mov
call
mov
in
arpl
xor
ss
cmp
out
or
jecxz
push
push
add
scas
cmp
jecxz
adc
je
sti
fs
and
cmc
mov
aas
pushf
ficomp
iret
loop
test
and
dec
lea
xchg
nop
xchg
ja
push
mov
mov
push
in
mov
mov
adc
xchg
int3
or
xchg
dec
adc
stos
cmps
mov
sti
mov
dec
daa
std
push
imul
mov
rcl
pop
aas
mov
jmp
or
cwde
mov
adc
cmp
mov
fsub
aaa
dec
retf
icebp
cmp
je
inc
aas
jmp
dec
(bad)
mov
mov
jno
hlt
pop
imul
test
mov
mov
rol
mov
mov
adc
out
pop
jle
pushaw
(bad)
jp
xchg
inc
fld
and
inc
(bad)
test
or
add
or
inc
test
popw
mov
pop
dec
push
not
loopne
in
lods
cmc
or
idiv
jl
sbb
push
cmp
movs
jns
xor
pop
and
cmp
mov
sbb
sub
push
push
popf
mov
adc
aam
inc
push
pop
and
bnd
mov
fadd
jae
mov
mov
lds
push
mov
arpl
enter
adc
push
mov
imul
outs
fwait
stos
dec
std
in
xchg
and
pushf
xchg
mov
dec
jmp
sbb
int
popf
cmp
or
cmps
ins
mov
out
adc
mul
jmp
jo
lods
and
pop
js
fbstp
and
sbb
movs
(bad)
(bad)
mov
pushf
cmp
ds
dec
mov
popf
enter
add
mov
mov
mov
sub
mov
add
mov
enter
je
adc
shl
push
fidivr
inc
jmp
lods
push
or
xor
dec
and
call
push
xchg
lods
out
mov
xchg
jb
popa
xor
outs
bound
fistp
sbb
ds
sahf
add
xchg
sub
enter
bound
inc
pop
cmp
fs
(bad)
test
or
scas
sbb
sub
ret
(bad)
loop
jecxz
dec
or
addr16
push
sbb
pusha
and
loopne
adc
iret
retf
lahf
das
fs
pop
sbb
inc
lahf
inc
cmc
fdiv
fistp
push
fisub
(bad)
mov
mov
adc
mov
gs
xchg
dec
shl
pop
pop
and
icebp
sbb
out
cwde
(bad)
in
nop
hlt
scas
lea
lahf
repnz
add
les
imul
mov
mov
jge
fdiv
rol
cmc
or
cmc
mov
xchg
retf
sbb
mov
dec
inc
pop
adc
and
sar
xchg
mov
or
punpckhbw
fs
pusha
fldenv
push
shl
mov
sbb
and
hlt
fstp
in
mov
popf
stc
mov
in
in
loopne
sbb
loope
cmp
(bad)
dec
jmp
lods
add
sbb
ret
in
es
call
frstor
cs
and
adc
lock
mov
mov
adc
pop
mov
xor
pop
mov
cwde
dec
push
movs
int
in
scas
and
or
fidivr
mov
cmp
adc
aaa
lods
adc
dec
sbb
cmp
pop
ret
arpl
sub
outs
sub
dec
(bad)
jmp
fadd
retf
sbb
popf
sbb
imul
mov
add
pop
mov
cmp
lahf
jg
mov
sar
xchg
scas
ins
aas
xchg
icebp
out
(bad)
arpl
inc
sti
iret
pop
push
sbb
add
repz
push
jb
sbb
pushf
mov
popf
adc
pop
xor
xor
push
(bad)
add
mov
mov
lahf
movlps
and
xor
cmp
cmp
aam
push
les
frstor
adc
jbe
mov
movs
neg
jmp
popf
inc
push
add
test
clc
add
hlt
push
sub
fs
aam
jle
mul
sahf
paddsw
jg
ja
push
sbb
lods
sti
pop
int
sbb
scas
wrmsr
mov
fcmovne
les
addr16
(bad)
gs
mov
jp
xor
daa
call
and
jmp
call
inc
sub
dec
pop
mov
call
shl
push
mov
mov
mov
xor
enter
push
mov
lds
adc
mov
shr
push
lock
fst
sbb
or
out
adc
mov
(bad)
xchg
xchg
mov
je
adc
pop
bound
cld
push
mov
addr16
in
(bad)
sub
dec
dec
jmp
fld
fwait
pushf
je
cmps
cmp
ja
and
mov
cmps
call
(bad)
jne
std
retf
or
hlt
and
sub
mov
mov
in
outs
fisub
into
xor
les
fwait
gs
sbb
and
hlt
fsubr
rol
cmp
push
jno
int3
je
hlt
sti
xor
aas
inc
mov
sbb
stos
fidiv
push
jbe
mov
sti
or
xor
mov
adc
iret
mov
sbb
mov
jmp
push
lahf
xchg
or
enter
leave
outs
xlat
inc
xchg
xchg
outs
fsubr
(bad)
mov
push
mov
stos
push
hlt
cmp
adc
cmp
test
cmp
adc
aam
(bad)
mov
dec
cwde
xchg
dec
sahf
movs
or
jns
rcl
sub
pop
fs
(bad)
data16
outs
lea
inc
jp
ret
ret
retf
pop
dec
retf
add
mov
je
out
es
(bad)
adc
call
mov
mov
adc
mov
xchg
sub
out
movs
inc
push
sub
add
sar
aaa
push
xor
mov
stc
dec
in
jo
cmp
inc
enter
sub
pavgb
or
outs
es
cmova
add
ret
or
std
cmp
shl
adc
sub
adc
std
pop
(bad)
int3
cli
cdq
das
stos
and
dec
lods
mov
gs
mov
div
xchg
movs
ror
xlat
imul
sbb
iret
mov
in
mov
sub
or
in
cmp
pop
mov
int3
sbb
scas
adc
xor
adc
or
(bad)
adc
or
stos
shl
push
and
jb
pusha
je
out
dec
mov
xchg
test
push
shl
and
pop
stos
cmp
and
inc
jge
sahf
pushf
xchg
dec
rcr
mov
pop
daa
pop
mov
icebp
adc
adc
xor
clc
adc
add
xchg
sbb
push
retf
call
inc
iret
cs
pop
xchg
add
popf
daa
retf
shl
clc
xor
int3
pop
jmp
jge
lea
shl
mov
mov
mov
int3
pop
inc
xlat
or
adc
(bad)
dec
sub
call
ja
popa
dec
call
inc
mov
out
cmps
rcl
pushf
pop
pop
movs
icebp
gs
fst
lea
cmp
in
xchg
test
add
inc
in
icebp
fucom
jno
jg
pop
adc
inc
ins
retf
sub
mov
cwde
scas
aaa
jle
jmp
jns
or
setnp
jmp
and
loope
push
xchg
or
inc
mov
std
in
aas
repz
in
fld
je
arpl
pop
mov
movs
test
sbb
iret
inc
mov
and
lahf
pop
mov
(bad)
idiv
jo
dec
jo
push
add
sti
ret
cmc
xor
cmp
sbb
(bad)
popa
pop
call
dec
iret
enter
mov
add
sub
cmps
lock
mov
push
lea
add
sti
push
dec
push
sbb
push
fwait
add
in
in
sub
mov
xor
jmp
jl
or
and
cmp
int
test
xor
xor
jns
push
cwde
rol
jnp
xchg
jp
mov
imul
adc
or
stc
sti
ins
adc
and
ret
les
mov
test
jne
enter
leave
push
mov
adc
stos
out
add
ds
jge
popf
xlat
mov
sub
rol
test
pop
push
sub
xor
mov
movs
sbb
cmp
cmp
xchg
adc
pop
shl
int
mov
outs
mov
ror
xor
mov
js
xor
sbb
adc
fdivr
mov
lock
mov
xor
mov
daa
sbb
sub
adc
not
leave
jmp
outs
outs
fdivr
dec
mov
(bad)
lods
dec
or
or
add
icebp
mov
std
neg
loope
pushw
lds
call
sub
jmp
lea
push
into
loope
(bad)
dec
fldl2e
jns
jne
dec
add
xchg
call
and
jae
movs
and
sti
and
int3
daa
daa
or
lock
push
in
add
cmp
jb
sub
and
mov
push
mov
pop
cmp
in
pop
ror
push
xor
imul
xchg
adc
sahf
mov
mov
dec
inc
out
fisub
enter
rcr
je
rcr
dec
jno
shl
arpl
add
mov
mov
fldenv
lahf
add
stos
mov
jg
adc
into
arpl
dec
and
das
stc
mov
mov
and
rcr
jle
inc
cmc
sti
pusha
push
data16
sbb
push
sbb
in
sbb
arpl
lods
push
xchg
mov
scas
sti
jo
neg
adc
mov
fcom
push
sti
lock
adc
and
in
mov
xchg
pop
mov
or
lock
pop
das
and
ffree
aad
dec
movs
jnp
daa
sub
idiv
lock
test
add
nop
add
push
mov
jnp
rcr
sub
inc
pop
out
(bad)
push
push
iret
jmp
sbb
push
retf
sbb
call
push
push
adc
adc
adc
mov
mov
dec
dec
xchg
or
push
sub
jns
add
pop
pop
in
mov
sbb
push
sti
inc
push
lock
sti
add
enter
cmp
or
push
loop
shl
inc
scas
test
add
in
into
movs
sbb
or
mov
dec
pop
pop
jg
mov
mov
fwait
jg
repz
jne
sub
cs
or
pop
sbb
pop
pop
jnp
cmp
dec
inc
mov
call
inc
repz
mov
(bad)
cs
mov
pop
mov
sar
sub
imul
mov
sbb
mov
(bad)
(bad)
scas
in
xor
inc
in
mov
in
mov
sbb
cmp
mov
in
sti
push
mov
jae
or
pop
mov
imul
call
sub
outs
sti
mov
and
pop
inc
aaa
ins
sbb
int3
ins
mov
(bad)
xchg
mov
xor
aam
mov
rol
cmp
shl
repnz
loope
mov
or
in
loope
cwde
test
fimul
sub
add
cmp
mov
fcomip
xor
cmp
dec
sbb
iret
iretw
sub
sahf
xchg
ret
dec
lods
leave
mov
mov
retf
sub
mov
mov
stos
mov
scas
jle
call
sbb
and
inc
mov
or
sub
mov
cld
pusha
push
pop
mov
mov
mov
mov
clc
mov
popa
addr16
lods
mov
adc
pop
xchg
add
mov
adc
push
push
cmp
pop
push
dec
push
cdq
iret
add
or
pop
sbb
and
push
jge
add
sbb
data16
pop
(bad)
scas
pop
aas
add
lods
inc
mov
dec
fdiv
bound
mov
dec
mov
adc
mov
aas
cmps
mov
push
or
rol
or
js
push
outs
movs
xchg
repz
sub
sub
test
(bad)
add
mov
mov
mov
popf
pop
in
pusha
adc
icebp
enter
mov
retf
or
clc
je
lea
mov
push
out
js
ins
(bad)
xchg
ds
rcl
sahf
sbb
ja
dec
mov
in
gs
jae
shr
adc
cmp
shl
in
dec
dec
not
dec
jmp
adc
outs
sti
dec
scas
push
jb
daa
cmp
xor
(bad)
les
mov
ds
jae
add
xchg
(bad)
rcl
mov
fs
gs
adc
scas
stc
dec
js
xchg
shl
jno
cs
pop
push
xor
or
xchg
sbb
call
xchg
cmps
dec
mov
and
jge
or
movs
jo
outs
out
popf
popa
(bad)
lahf
icebp
pop
inc
push
fdiv
test
stc
jl
shr
pop
test
adc
jge
gs
xchg
rcl
add
push
dec
cld
pop
aad
test
mov
xchg
mov
nop
push
or
cmp
cmc
xlat
dec
add
mul
jb
push
cld
rol
test
mov
sbb
pop
addr16
and
pop
in
pop
(bad)
retf
fsub
fsubrp
xor
pop
(bad)
cld
iret
nop
popa
(bad)
shl
mov
and
jecxz
inc
or
cmp
push
dec
xor
fwait
rol
push
mov
sti
popa
pop
les
pop
pop
cdq
scas
cld
mov
ja
xchg
stos
jnp
cmp
(bad)
in
push
or
ret
sbb
(bad)
rol
or
dec
cld
jnp
popf
mov
mov
push
gs
dec
ins
popa
cwde
cmp
movs
and
jbe
dec
aaa
pop
mov
inc
scas
push
push
popa
iret
adc
loop
and
call
mov
sbb
fstp
mov
fnstenv
xor
adc
ficomp
mov
xor
sub
push
push
(bad)
repz
dec
dec
jo
cmps
mov
push
push
push
fs
(bad)
pop
pop
loop
push
inc
cmp
jge
into
scas
stos
(bad)
jmp
test
jo
mov
or
xor
jmp
nop
jae
(bad)
xor
test
xchg
repz
add
lahf
in
lahf
bound
mov
movs
rol
cmp
lea
and
sahf
cmc
add
daa
scas
ret
push
out
xor
xchg
pop
cwde
jnp
push
retf
int
das
jle
dec
jno
data16
aas
nop
add
mov
mov
data16
call
xchg
mov
rcl
dec
popa
xor
sub
xor
add
dec
inc
add
cmp
bound
mov
add
scas
fsub
mov
test
cmp
adc
or
aam
dec
retf
gs
out
aas
dec
fcomip
sub
fnstcw
call
mov
mov
push
imul
dec
mov
loop
inc
push
leave
popa
mov
and
popf
push
xchg
cld
mov
bound
mov
jo
dec
arpl
aam
xor
push
(bad)
push
mov
mov
inc
test
mov
cli
dec
aaa
test
sub
in
leave
in
arpl
mov
mov
xchg
nop
imul
aam
inc
mov
(bad)
shr
xchg
fimul
xchg
outs
out
ret
fimul
sbb
(bad)
rcl
push
loope
movs
sbb
inc
xchg
(bad)
cmp
add
popf
mov
dec
cdq
fiadd
jg
lods
sbb
jle
mov
mov
stc
adc
cmc
cmp
clc
and
rcl
sti
sbb
push
test
or
ins
data16
mov
dec
dec
mov
xchg
jle
mov
lods
mov
test
in
aam
out
es
dec
lea
xchg
mov
call
mov
pop
xor
imul
pop
dec
push
cmp
scas
cmps
scas
dec
stos
rol
int3
add
enter
mov
push
pop
lods
add
pusha
sbb
jo
jg
cmp
fisubr
mov
jbe
dec
sbb
mov
cwde
push
mov
aad
mov
movs
dec
js
les
mov
imul
jl
cmp
cmp
neg
add
das
cli
and
stos
push
inc
aaa
push
ficom
ret
push
mov
out
fs
cmc
lahf
pop
pop
data16
(bad)
lods
add
xchg
pusha
cmp
(bad)
jmp
shl
int
mov
pop
xchg
test
sub
mov
scas
mov
in
sbb
addr16
cs
dec
jbe
jg
loope
retf
pop
or
mov
pop
call
cmp
mov
xor
out
cmp
fld
imul
clc
push
sbb
push
scas
js
push
pop
rcl
jno
mov
jmp
test
shr
lods
mov
cmps
pop
loope
mov
push
fidivr
sahf
mov
sbb
dec
call
push
mov
cmp
push
push
outs
adc
adc
js
xchg
(bad)
xchg
je
outs
outs
or
mov
pop
adc
xor
mov
jle
iret
jge
jnp
and
stc
out
mov
ret
js
cmp
mov
mov
xchg
pop
fcom
mov
loop
cld
pushf
pop
push
xchg
push
test
push
mov
(bad)
ss
dec
sub
dec
adc
ins
push
out
jmp
sar
pop
add
adc
dec
outs
jge
pop
jmp
(bad)
cmp
mov
je
adc
(bad)
sub
dec
xor
push
clc
push
and
mov
pop
adc
int3
xchg
(bad)
repnz
mov
(bad)
pusha
xor
add
ret
xchg
pop
xchg
xchg
push
inc
jne
daa
ret
dec
dec
mov
rcl
inc
inc
hlt
jp
pop
or
sub
stos
aam
pop
test
xchg
and
cmps
dec
jne
js
loope
cmp
push
mov
retf
mov
xor
pop
repz
or
xor
adc
fisubr
fdivr
in
cwde
popa
add
xchg
mov
add
fist
cld
pop
adc
retf
aam
jbe
cmc
ins
push
movs
inc
fnop
clc
inc
or
dec
and
push
or
mov
dec
aam
lock
outs
cmc
cwde
in
add
jne
fist
add
out
mov
ret
sbb
ss
sbb
les
xchg
dec
jno
mov
lods
dec
xchg
scas
mov
mov
adc
fdiv
pop
mov
fild
aam
adc
mov
mov
rcr
fs
aaa
fnsave
inc
test
push
cld
jno
hlt
je
xlat
xor
xor
jp
mov
sar
fsubr
and
retf
cmp
pop
popf
fnsave
mov
push
fsub
mov
clc
push
mov
leave
popa
inc
cwde
mov
loope
shl
adc
mov
dec
popa
xchg
xor
mov
scas
cmp
iret
pop
pop
xor
mov
mov
loop
mov
mov
in
ror
ret
das
gs
push
in
cdq
(bad)
loop
push
movs
imul
mov
lods
mov
rcl
mov
push
ja
mov
mov
fst
or
icebp
rcl
in
loope
sbb
jo
ror
cdq
sub
cmps
inc
jg
mov
inc
jnp
jg
ins
out
not
arpl
jp
inc
add
inc
les
add
sub
jecxz
loop
repz
dec
bound
inc
test
rol
es
pushf
(bad)
(bad)
mov
imul
shl
cmp
or
(bad)
or
pop
in
fdivr
cmp
cmp
(bad)
pop
push
push
mov
and
sbb
leave
adc
aaa
add
sub
inc
mov
in
sbb
cmp
ss
sahf
adc
xchg
fldcw
mov
sub
fldl2t
jne
pop
push
xor
in
adc
setbe
sbb
push
int
xchg
and
mov
cmps
and
ja
idiv
mov
add
cmp
jle
inc
in
jb
shr
and
jecxz
loopne
pop
int3
std
pop
cmps
fiadd
repz
inc
stos
fnstenv
xor
aas
mov
jbe
push
sub
pop
adc
jns
jbe
ret
or
dec
or
js
push
xor
mov
mov
mov
test
popa
mov
push
mov
xchg
les
xor
sar
retf
mov
inc
jbe
psubq
xor
adc
mov
mov
enter
mov
sub
cmps
jmp
push
xor
mov
xchg
inc
das
xchg
mov
out
ins
lds
mov
enter
fwait
and
sub
fwait
aaa
pop
pop
and
push
dec
xchg
sahf
lahf
(bad)
out
pop
or
scas
retf
test
pop
fwait
adc
ss
out
std
shr
mov
or
mov
out
enter
jnp
mov
bound
mov
test
dec
cmp
add
fild
les
jno
xor
mov
push
bound
push
repz
xor
mov
xchg
mov
adc
jmp
or
mov
mov
jp
xchg
jmp
pop
mov
ret
xchg
inc
out
cmp
push
imul
push
mov
cmp
aam
mov
shr
jmp
addr16
ss
cli
mov
imul
test
pop
ret
lea
imul
mov
loopne
(bad)
movs
sub
jmp
xchg
jnp
mov
pop
arpl
mov
mov
scas
xchg
push
jno
dec
fimul
enter
pusha
inc
and
(bad)
es
retf
mov
in
or
xor
mov
mov
jle
je
std
outs
dec
stos
shl
in
outs
(bad)
add
shr
lods
mov
push
neg
adc
imul
neg
aam
frstor
repz
and
pop
scas
imul
das
icebp
xor
lahf
call
std
adc
xor
mov
nop
push
fs
dec
sub
and
retf
push
xor
js
dec
sbb
xlat
mov
inc
adc
out
mov
daa
aas
ret
div
popa
mov
ja
data16
pop
lea
in
cmc
adc
and
addr16
loop
xchg
mov
add
sub
cmp
mov
outs
in
pop
jp
shl
xor
lahf
push
and
inc
std
cdq
das
movs
ins
dec
cld
in
push
push
in
inc
test
pop
inc
call
lock
add
cmp
cmp
sbb
adc
jno
test
call
adc
cmp
pop
or
dec
dec
imul
jo
mov
call
push
cmp
adc
test
jge
push
aad
rcl
ret
(bad)
sub
cmp
aam
into
(bad)
add
lods
setge
outs
inc
cmp
xor
(bad)
mov
pop
push
in
outs
cmc
pop
push
inc
and
add
fwait
out
movs
div
fst
push
jne
jae
(bad)
jge
dec
sub
push
dec
fisttp
int
cmp
jo
mov
jmp
jle
dec
sbb
fcomi
sbb
or
loope
sti
adc
fs
cmps
fs
outs
push
out
retf
(bad)
add
jmp
jecxz
mov
ins
loopne
jmp
pop
push
sbb
iret
std
cld
push
mov
sub
icebp
jno
xchg
fidiv
or
xor
inc
fs
cmp
adc
cmp
mov
loop
add
leave
test
out
or
je
mov
ss
add
xor
pop
fsub
jp
cmp
sub
inc
mov
cdq
popa
(bad)
cld
jmp
sub
fstp
test
rol
cmp
aam
xchg
sahf
xchg
lods
repz
mov
retf
setne
in
(bad)
shr
sti
aam
xchg
clc
jne
add
mov
adc
cmp
out
sub
and
push
cmps
hlt
fidiv
and
and
dec
test
pop
clc
daa
cmp
mov
mov
xor
pop
pop
add
pop
cmp
cmps
loope
jmp
xor
jg
xor
mov
bound
pop
jl
adc
in
jg
lods
mov
jo
out
pop
jno
neg
sbb
adc
cdq
and
ss
and
adc
pop
inc
xchg
pusha
aas
out
mov
jp
sub
test
aam
mov
inc
pusha
iret
test
movs
xchg
jl
loopne
xchg
shl
stos
inc
(bad)
jnp
je
test
outs
pop
mov
push
adc
and
push
jmp
push
cmp
(bad)
outs
mov
arpl
dec
icebp
out
xor
push
inc
fwait
les
scas
cmps
mov
div
dec
sub
arpl
push
neg
addr16
sub
data16
lods
mov
arpl
stos
or
cmp
mul
or
rcr
add
scas
retf
inc
mov
mov
or
cdq
ds
and
bnd
push
jns
cld
sbb
push
or
push
push
xor
pop
push
pop
ficomp
or
sub
fsubr
add
lds
mov
aas
les
ror
mov
cmp
pop
sbb
add
adc
xchg
add
xor
pop
or
push
out
cwde
inc
xchg
mov
mov
aaa
xchg
cli
popf
push
jne
sub
xchg
and
mov
sub
aaa
and
push
adc
mov
xchg
stos
test
fdiv
fdivr
mov
out
cmps
dec
fisttp
in
je
push
cmps
dec
(bad)
test
jg
mov
push
sub
(bad)
mov
fld
cmp
cdq
pop
rcr
movs
sahf
fwait
jmp
jae
sar
jp
popf
cmp
jmp
or
in
push
movs
xchg
sub
jecxz
jl
call
jb
sbb
and
and
mov
in
data16
adc
scas
in
inc
cmp
push
cmps
nop
adc
and
xor
repnz
fcmovnu
pop
push
jmp
and
or
sub
rcl
(bad)
(bad)
push
cwde
inc
sbb
arpl
int3
add
pop
scas
sbb
pop
pop
adc
fidivr
push
nop
dec
mov
cmp
sub
mov
sbb
jo
xor
sub
adc
stos
sub
xor
test
retf
dec
inc
stos
int3
rcr
imul
mov
das
idiv
mov
push
add
movs
arpl
jae
cmp
mov
xchg
mov
mov
add
into
sbb
rol
push
xchg
inc
mov
jmp
sbb
pop
inc
mov
inc
loopne
sbb
nop
push
push
or
push
jg
xchg
adc
arpl
inc
out
stc
and
pop
adc
mov
mov
add
mov
or
jo
jb
imul
pop
inc
pusha
sub
sti
push
aas
or
data16
mov
sbb
mov
and
hlt
mov
int
mov
pop
call
or
dec
test
imul
sahf
jmp
mov
sbb
xchg
and
mov
std
adc
xchg
mov
mov
shr
sub
inc
or
and
pop
mov
mov
push
cdq
ret
dec
aas
and
je
adc
jmp
test
xchg
neg
shl
or
addr16
add
in
stc
into
jns
sbb
(bad)
xor
in
sub
jge
sbb
pushf
test
xchg
loop
push
and
scas
sbb
xor
loope
sbb
add
and
fild
pop
out
lods
imul
mov
xor
sub
jb
movs
inc
(bad)
cmp
push
adc
inc
repz
push
cmp
in
adc
mov
push
pop
jecxz
xlat
add
shr
test
cmps
sbb
mov
pushf
ins
mov
pop
and
lds
movs
icebp
iret
clc
add
mov
xchg
gs
leave
iret
push
pop
lods
(bad)
fiadd
ret
jmp
mov
jbe
jbe
sub
mov
loop
push
cmps
xchg
or
js
jnp
mov
push
int3
stos
sbb
jns
daa
mov
fist
dec
pop
or
adc
fcom
pusha
or
mov
shr
mov
aam
jae
mov
mov
xor
pop
in
bound
fst
mov
cs
call
iret
jb
out
call
fs
sbb
cmp
call
inc
mov
fstp
sbb
test
xchg
data16
inc
lock
mov
mov
daa
ror
jns
sbb
cdq
cli
rcl
aad
outs
mov
dec
adc
ja
inc
mov
lods
cli
inc
fs
or
rcr
stos
mov
bound
pop
nop
test
sub
jmp
mov
dec
gs
bound
out
jl
add
xchg
dec
je
ja
jo
or
xor
les
sub
cmc
jge
loopne
(bad)
mov
xchg
sub
ins
(bad)
daa
pop
into
mov
mov
shr
imul
aaa
and
xchg
mov
xchg
or
or
leave
daa
mov
jae
into
mov
mov
movs
push
fidivr
lds
and
pop
(bad)
jno
adc
nop
fdivr
push
ret
int
loopne
mov
push
mov
mov
push
add
mov
inc
pop
mov
scas
and
jg
dec
bound
call
jge
cmp
jno
or
stc
jmp
ins
test
jnp
repnz
xchg
pop
leave
jnp
mov
xor
ror
xor
repnz
ficomp
mov
rol
rcl
push
jns
cmp
out
jb
fwait
cwde
in
add
adc
in
ret
call
les
cmps
rcr
sbb
nop
push
inc
popa
nop
mov
test
inc
cmp
ins
(bad)
push
inc
hlt
jae
and
jp
rol
fnsetpm(287
inc
fmul
fwait
sub
mov
cmp
cli
pushf
jbe
test
mov
movs
push
imul
jno
test
sub
(bad)
mov
mov
fild
jae
sbb
fs
nop
inc
add
mov
arpl
or
mov
int
mov
shr
shl
test
inc
sub
pop
stc
jmp
mov
out
ins
xchg
and
pop
jo
jmp
sti
mul
or
jmp
shl
pop
adc
cmp
sahf
fmul
xchg
pop
cld
pop
mov
js
sub
test
cmp
mov
push
in
or
cli
inc
mov
in
adc
mov
mov
inc
mov
cmps
jbe
mov
adc
int3
out
jp
in
dec
cmp
and
push
fstp
into
movs
and
or
(bad)
adc
arpl
mov
mov
pop
into
pop
and
dec
fsub
xor
das
(bad)
cdq
stc
call
ds
shr
pop
dec
in
xchg
loop
dec
fsubr
xor
les
sbb
mov
add
push
push
mov
into
push
repz
cli
fucomi
adc
leave
inc
lea
fsubr
jl
(bad)
(bad)
aam
retf
mov
and
ret
xor
inc
lds
push
cld
jmp
jnp
pop
ins
test
popa
mov
dec
stos
pop
sub
sbb
stc
xchg
dec
test
inc
ret
xor
movs
ss
mov
sbb
(bad)
cvtpi2ps
rcr
inc
ins
add
or
outs
pop
ins
jmp
cmps
ret
cmp
adc
xchg
pop
arpl
xor
aad
sbb
mov
jg
hlt
cmp
aam
stos
cmp
fst
pop
movs
stos
movs
cld
aaa
inc
(bad)
xchg
adc
in
sbb
sbb
cli
call
cmp
addr16
shr
push
sbb
dec
jmp
(bad)
xor
sub
lods
int
fisub
sbb
jmp
xchg
aam
cmp
adc
mov
jle
push
pop
pop
sub
fwait
jb
fmul
adc
into
cmp
ret
pusha
mov
rcr
push
mov
iret
dec
push
js
mov
mov
jmp
fistp
test
or
xchg
mov
and
test
sahf
push
push
sbb
repnz
or
pusha
sbb
cmps
sbb
aas
fwait
adc
outs
call
jno
into
sbb
mov
mov
in
cmps
ja
sub
hlt
cmc
retf
adc
mov
pop
inc
sbb
cmp
or
cli
xor
in
mov
test
ins
push
mov
fbstp
repz
sbb
sub
fild
mov
test
stc
lock
shl
xchg
cdq
dec
sub
mov
ret
or
lds
ss
jae
fadd
inc
ja
cwde
adc
neg
add
mov
fwait
mov
scas
movs
sub
aaa
dec
sbb
idiv
(bad)
mov
mov
xor
cdq
sti
out
pop
push
pop
ja
mov
sub
int
adc
(bad)
(bad)
cdq
cmps
adc
push
jmp
(bad)
mov
fwait
loopne
pop
dec
fbld
adc
jne
sbb
loope
jb
adc
xchg
and
leave
mov
pop
mov
in
movs
aaa
int
sub
pop
push
push
into
push
pop
jg
nop
call
out
and
imul
popa
mov
or
pop
adc
daa
add
jne
cld
cmp
stos
add
repnz
(bad)
test
jmp
or
(bad)
fnstsw
lods
out
sti
arpl
add
add
test
icebp
ret
sub
in
out
mov
repz
cmovp
and
adc
rol
jg
adc
jecxz
hlt
clc
loopne
mov
dec
add
or
sub
mov
iret
sub
stos
int
or
nop
int3
fstp
pop
into
(bad)
sar
sbb
sub
into
mov
shl
jnp
in
arpl
hlt
mov
mov
dec
repnz
stos
out
pop
mov
push
mov
dec
or
test
sub
pushf
in
xchg
adc
mov
mov
mov
arpl
ds
aad
jae
stc
retf
mov
into
sbb
adc
mov
and
daa
jne
dec
add
imul
jp
pushf
pushf
mov
test
mov
jecxz
mov
test
sub
xchg
inc
xor
mov
arpl
pop
or
and
cld
xor
sbb
loopne
in
dec
mov
push
lds
stos
sub
and
mov
xchg
sub
and
jmp
add
adc
retf
jmp
les
sbb
sub
retf
test
xor
imul
(bad)
xor
mov
(bad)
frstor
or
push
pop
and
or
adc
adc
cmp
pop
movs
outs
ror
stc
push
sub
mov
xchg
cmp
inc
int
out
jbe
loope
stos
add
mov
fistp
or
sub
cli
inc
push
sub
mov
fadd
cmps
arpl
mov
or
lods
add
xchg
sub
iret
retf
mov
jmp
dec
jle
jmp
sub
outs
sub
dec
jp
pop
jmp
pop
add
repz
test
(bad)
or
iret
stos
sub
push
jle
retf
clc
(bad)
mov
into
pop
adc
sahf
dec
sbb
pusha
cdq
or
add
js
dec
jg
mov
jecxz
icebp
pop
out
ret
pop
and
das
bound
sub
inc
hlt
imul
arpl
out
out
sar
loop
push
into
ror
lods
sbb
inc
pop
fnstsw
or
scas
xchg
xchg
pop
js
mov
mov
stos
cmps
add
es
in
sub
enter
xor
push
out
aam
xor
nop
sbb
aas
jg
enter
jp
mov
out
inc
(bad)
fld
inc
cwde
xchg
ins
enter
xor
dec
inc
mov
scas
and
fistp
pop
jmp
sar
mov
ja
or
push
out
adc
ins
or
push
dec
mov
cs
and
mov
fdiv
jns
and
sub
neg
and
cmp
loopne
xchg
jo
int
test
jmp
or
xchg
mov
enter
xor
xor
dec
or
mov
lods
xor
adc
xchg
jb
jo
pop
in
fwait
neg
cdq
dec
mov
neg
into
sub
(bad)
sub
pop
sub
cmps
ss
fmul
je
dec
xor
jmp
and
ss
adc
or
fmul
xor
xchg
into
add
or
xchg
sbb
ss
xor
pop
call
and
test
cmps
imul
push
and
inc
lahf
div
ds
xchg
fcom
cdq
(bad)
outs
inc
shr
pushf
dec
adc
movs
push
jle
sub
pop
mov
in
dec
retf
mov
jmp
sbb
loope
aad
in
mov
cld
push
xor
arpl
adc
pop
imul
stos
jle
sbb
sub
xor
jmp
mov
inc
jmp
and
je
out
jnp
fld
pop
inc
js
mov
cmp
xchg
dec
outs
fsub
ret
cmp
cs
rol
cwde
dec
fbld
fdiv
pop
inc
jb
mov
mov
ret
pop
pop
imul
push
jmp
sbb
fucom
mov
mov
imul
jmp
xor
sbb
mov
retf
ret
xorps
test
lds
inc
adc
scas
imul
shl
inc
cs
cdq
not
pop
pop
jbe
or
loope
lds
clc
or
int3
mov
mov
inc
fucomp
jb
aaa
sar
jb
cmp
dec
mov
jecxz
xor
fnsave
inc
inc
push
loopne
and
push
cs
dec
inc
pop
inc
jbe
jno
ins
push
lahf
(bad)
or
add
in
mov
aad
loope
and
daa
or
test
cmp
or
xchg
fcom
inc
and
call
out
jno
add
imul
cmp
lds
leave
adc
out
fsub
int
or
jmp
or
fbld
add
(bad)
nop
fldcw
add
dec
mov
inc
mov
jecxz
test
xchg
sub
int3
jmp
push
xlat
pushf
call
call
out
cdq
or
pusha
int3
push
mov
mov
sar
or
jg
sub
lock
sbb
lahf
inc
sahf
mov
aad
push
cwde
pop
call
sbb
ins
aas
xchg
test
mov
push
(bad)
iret
div
adc
int
inc
aam
ins
add
(bad)
push
push
int
cs
xor
jnp
movs
shl
test
mov
pop
lods
out
pop
xchg
shl
std
jg
pop
sbb
and
(bad)
sub
(bad)
mov
mov
outs
es
rcr
addr16
repnz
mov
xchg
test
xor
push
test
xchg
adc
mov
out
add
mov
imul
test
cmps
lahf
jno
gs
xor
sub
xchg
or
sbb
shr
push
test
enter
imul
sbb
popf
test
ret
pop
int
cmp
(bad)
je
mov
leave
xchg
pop
ds
mov
in
pop
in
lods
test
(bad)
or
mov
lods
jp
clc
push
or
ins
and
or
repz
adc
mov
cmc
retf
xchg
sbb
mov
iret
pop
cmc
inc
clc
ins
push
lock
sbb
loope
pop
enter
ja
(bad)
mov
lods
push
bound
jno
neg
fbstp
add
sub
das
pop
data16
dec
xor
fstp
sbb
cmp
mov
add
or
cdq
or
aaa
in
mov
or
pop
repnz
xchg
scas
and
dec
mov
outs
loop
stc
scas
arpl
sub
cmp
inc
lds
int3
or
in
and
in
retf
sub
mov
add
xor
movs
mov
jmp
pop
enter
inc
mov
call
out
or
outs
les
jns
jb
mov
xchg
jne
dec
add
hlt
xchg
ins
sbb
fwait
mov
xor
or
fwait
mov
sbb
aas
pop
or
adc
dec
cmps
push
mov
fcmovb
in
aam
aas
iret
(bad)
dec
mov
dec
add
cmp
in
(bad)
xchg
dec
les
js
out
call
stos
mov
fisubr
test
shl
jno
mov
out
push
cmp
mov
cmp
and
mov
in
push
fld
pop
push
mov
mov
xchg
pop
leave
and
xchg
mov
dec
adc
lock
nop
ss
repz
jbe
popa
or
add
ins
xor
sbb
xchg
sbb
std
push
mov
dec
inc
inc
dec
imul
test
in
(bad)
sahf
xchg
mov
push
mov
mov
adc
mov
sbb
and
aad
mov
pop
xor
arpl
xchg
outs
fimul
rcl
cmp
adc
loop
das
stos
cmc
pop
fnstsw
(bad)
sahf
out
push
mov
jmp
loopne
cwde
leave
retf
test
jmp
pop
or
xchg
nop
pop
dec
popa
jae
adc
cli
inc
arpl
outs
push
fwait
cmps
sub
fdivr
cmp
sub
repnz
sub
dec
mov
push
in
xchg
dec
cdq
aas
aaa
jle
inc
test
ins
jle
adc
loope
cli
fdiv
fidiv
cmp
jb
inc
mov
in
sar
jg
xor
xchg
cdq
or
inc
push
out
push
and
fmul
add
mov
or
fs
sbb
les
and
ins
(bad)
mov
mov
sbb
sbb
xlat
nop
cs
add
dec
je
push
jmp
shr
arpl
cmps
push
iret
push
jecxz
das
dec
nop
mov
test
mov
pop
ror
fidivr
mov
add
adc
xchg
and
adc
ror
or
outs
dec
xor
repz
pop
ficom
scas
mov
in
sub
sub
mov
ins
or
sti
cmc
inc
mov
push
mov
leave
xor
jge
mov
xor
sub
test
mov
jl
xchg
outs
fucomi
fnsave
inc
bound
clc
mov
inc
cmp
int3
jne
jecxz
pop
jnp
popf
mov
push
(bad)
std
rcl
jb
test
popa
fcmovne
and
sbb
sbb
pusha
cmp
pop
stos
push
cmps
fucomip
xchg
je
mov
jne
rol
adc
mov
mov
gs
(bad)
sub
nop
mov
xor
ins
mov
mov
xlat
nop
or
hlt
jg
call
jae
pop
push
inc
dec
adc
jb
ds
jp
rcl
ds
mov
stc
ficom
sar
or
xor
ds
push
jmp
scas
(bad)
retf
daa
cmp
sbb
mov
dec
jo
mov
push
push
pushf
dec
out
mov
push
mov
pop
pop
cmp
mov
cld
xlat
hlt
mov
pop
sub
xchg
add
addr16
and
mov
jns
cmp
sub
adc
mov
sub
fistp
ins
bound
daa
out
push
repnz
sar
call
rcr
mov
(bad)
mov
jae
or
stos
push
icebp
enter
push
add
mov
cmp
jmp
jnp
popa
lea
xor
and
leave
pop
pop
mov
je
ds
out
in
jmp
fdivr
dec
inc
mov
jle
xchg
inc
sbb
(bad)
mov
sbb
inc
mov
(bad)
jmp
inc
pop
(bad)
pop
rcr
(bad)
scas
les
in
stc
mov
inc
das
pop
or
inc
ins
(bad)
xchg
out
test
jmp
push
outs
jg
sub
add
or
xchg
or
loopne
mov
xor
js
adc
pop
xchg
(bad)
in
cmp
dec
lea
ficom
je
inc
jo
int
imul
aad
nop
xchg
pusha
pop
or
stos
loopne
push
sahf
fcom
loope
sbb
adc
jecxz
aam
inc
adc
movs
test
in
(bad)
shl
stos
xchg
dec
sub
and
jnp
inc
jge
ja
sub
test
add
jle
ret
inc
xchg
test
ja
or
jle
sti
inc
(bad)
(bad)
sbb
sub
and
into
fadd
sub
sahf
fcmovu
stc
add
mov
(bad)
xor
mov
and
outs
or
les
in
or
push
mov
ret
dec
stos
cmp
or
(bad)
mov
(bad)
cs
add
das
mov
xor
call
mov
jmp
xchg
js
add
mov
pushf
popf
add
adc
fwait
shl
not
loope
lds
ret
das
mov
in
bound
sbb
sar
dec
fld
cmp
inc
out
add
xchg
in
retf
pop
mov
or
nop
fs
mov
pop
ror
cmps
outs
jo
mov
rol
outs
icebp
or
mov
xor
push
mov
jno
stc
jne
mov
out
mov
addr16
pop
mov
jo
or
std
ins
lea
and
push
xor
mov
sbb
stos
pop
(bad)
or
cmp
fwait
sbb
jnp
jmp
(bad)
xchg
sbb
xchg
leave
lahf
or
rcl
aas
arpl
add
mov
mov
(bad)
dec
xchg
js
mov
test
mov
out
fstp
sub
repnz
dec
int3
pop
inc
pop
jne
shl
sub
or
enter
adc
cmp
retf
sub
pop
test
aad
and
scas
jecxz
inc
cmp
hlt
enter
cmps
bound
bound
jb
xlat
dec
push
outs
pusha
ret
test
jo
push
push
fsubr
cwde
xchg
xor
(bad)
sbb
sbb
cmp
or
push
ret
jp
cmp
xor
jmp
cmp
(bad)
lods
sub
aam
mov
out
xchg
xchg
mov
push
push
mov
mov
into
arpl
icebp
or
dec
popf
xor
ins
je
sub
pop
and
jns
fst
repnz
cmp
in
iret
inc
sub
mov
xchg
and
push
mov
(bad)
repz
es
mulps
xchg
push
test
outs
xchg
int3
jb
dec
push
mov
push
pop
out
lds
push
lock
ins
jno
add
ret
mov
addr16
push
dec
mov
cwde
add
sub
aad
je
inc
outs
jae
push
xor
mov
aas
push
inc
mov
and
jno
(bad)
call
retf
cmps
pop
sar
mov
ret
add
call
sahf
fs
cmps
dec
aas
fisttp
mov
fsub
or
ds
ins
or
jnp
(bad)
daa
push
cdq
iret
inc
dec
out
out
fs
add
sub
mov
imul
push
jb
out
sub
mov
in
clc
sti
sub
dec
push
cmps
lods
sub
xor
test
add
add
xor
dec
cdq
xchg
cmp
shl
out
push
rcr
jmp
loop
fstp
mov
into
nop
sub
(bad)
sbb
sbb
addr16
imul
(bad)
pop
imul
push
(bad)
mov
stc
out
inc
jns
scas
xchg
sahf
sbb
sub
lods
jl
dec
sbb
pop
push
adc
add
sub
icebp
mov
sbb
rcr
inc
(bad)
stos
(bad)
jp
fwait
inc
ret
dec
popf
dec
jg
cmp
ret
dec
dec
ins
push
sub
xchg
mov
sbb
and
fcomp
loopne
enter
sub
mov
rol
sbb
pusha
cmps
call
sar
test
sbb
lods
js
jbe
daa
retf
adc
dec
(bad)
xor
sub
cmp
out
sahf
loope
xor
jle
fbld
scas
xlat
int3
stos
(bad)
jnp
jg
inc
inc
jno
sub
xor
and
pop
pop
sbb
jl
cmps
inc
leave
pop
stos
xor
sbb
push
push
jge
gs
vshufps
stc
mov
in
(bad)
cmp
xor
out
sbb
ins
mov
pop
mov
xor
imul
mov
in
mov
push
outs
(bad)
mov
iret
jle
pop
mov
repnz
sar
mov
(bad)
sti
ficom
push
dec
xlat
stos
jge
leave
into
jge
xchg
fsub
pop
int
pop
mov
icebp
xor
jl
sub
dec
rcr
(bad)
pusha
pop
std
mov
lahf
sar
add
push
sub
mov
mov
fsub
pusha
mov
in
sub
call
in
mov
push
push
(bad)
retf
call
out
repnz
leave
sub
push
dec
inc
cmp
mov
bound
sbb
div
fisubr
push
push
call
(bad)
(bad)
or
stos
test
adc
aaa
mov
mov
or
imul
cld
scas
inc
imul
dec
sbb
dec
xchg
sar
es
daa
ret
adc
dec
xchg
push
(bad)
out
jecxz
fwait
rep
scas
stc
push
dec
xlat
rcr
stc
and
cmps
xor
call
cli
sbb
loopne
ja
cld
icebp
cmp
sub
jo
pop
cdq
fst
pop
nop
das
dec
mov
aad
aas
jle
fcomp
in
(bad)
ror
adc
lds
bound
and
les
add
ficomp
lods
dec
(bad)
(bad)
outs
cmp
cmp
push
(bad)
push
hlt
ds
stc
cmp
cmp
daa
ret
or
cmps
das
xlat
push
dec
ds
aad
bound
pop
lods
mov
mov
sub
xchg
fiadd
out
scas
xchg
mov
dec
xchg
xor
add
(bad)
shl
and
jnp
loopne
xchg
inc
mov
mov
dec
retf
gs
inc
mov
inc
lds
xor
cli
hlt
pop
fdivr
xor
and
and
mov
mov
gs
fucomi
dec
lds
popf
je
pop
sub
mov
mov
sti
pop
sub
inc
sub
or
add
daa
dec
dec
dec
jmp
mov
inc
aas
cmps
inc
loopne
add
cld
and
stos
or
retf
arpl
jne
xor
retf
inc
pop
mov
cwde
mov
test
sub
xchg
fld
outs
xor
lds
push
pop
or
xor
sbb
cmp
loop
and
jb
add
sahf
(bad)
(bad)
cli
adc
push
jne
loop
xor
jno
or
inc
jns
mov
sbb
pop
mov
mov
lahf
sti
push
inc
sti
rcl
cmps
mov
mov
adc
sub
out
(bad)
int
fst
sub
loope
(bad)
mov
jb
mov
jge
outs
fisub
out
or
adc
mov
cdq
retf
and
cmp
jl
mov
pushf
test
imul
and
repz
and
movs
loopne
outs
scas
lods
enter
adc
aad
frstor
inc
in
push
inc
xchg
sete
inc
mov
mov
(bad)
dec
repz
arpl
mov
and
pop
aas
int
pop
or
jns
jb
mov
mov
adc
pop
scas
cmps
mov
mov
mov
inc
fcompp
jns
es
push
cdq
inc
mov
icebp
daa
fadd
rcl
dec
mov
aas
pop
rol
stc
lea
test
pop
sbb
dec
aad
std
jp
jae
mov
mov
lods
push
push
test
pop
jmp
sub
add
loop
mov
out
sbb
sub
daa
add
mov
js
call
je
aad
pop
cmpxchg
xchg
or
xchg
and
jae
cmps
mov
dec
in
inc
(bad)
fwait
and
mov
mov
xchg
loop
inc
mov
test
add
es
cli
sbb
sub
paddw
mov
jne
jne
cmps
pop
cmp
adc
push
mov
dec
bound
mov
stos
add
fcomp
(bad)
push
dec
sub
popa
dec
mov
or
shr
in
test
dec
loopne
dec
sar
(bad)
sub
repz
jge
xlat
outs
pop
jbe
sahf
scas
add
fistp
punpckldq
pusha
sbb
jns
into
ins
or
and
scas
test
sub
push
inc
aas
sub
loop
out
pop
ins
push
mov
mov
scas
test
cmp
mov
retf
in
lahf
xchg
mov
mov
pop
add
ret
and
lock
xor
call
pop
xchg
sub
sbb
xchg
movs
jo
das
outs
out
stos
adc
out
sub
inc
push
cmp
or
gs
add
test
or
ins
shl
loope
int
outs
inc
scas
fst
dec
sbb
add
cdq
lock
sbb
mov
int
push
retf
retf
aas
adc
sahf
and
dec
fiadd
xor
adc
jle
into
dec
aad
push
sbb
mov
add
jno
mov
sti
repnz
cmp
sbb
mov
lods
mov
push
mov
or
mov
inc
dec
ins
gs
push
ja
add
shl
in
adc
sbb
scas
or
jl
loope
add
xchg
mov
mov
aad
pop
std
dec
dec
add
enter
add
adc
scas
outs
mov
scas
out
or
xchg
and
pop
and
jg
jl
jb
push
pop
jo
pop
jmp
add
sahf
in
jge
mov
or
and
pmuludq
sar
aad
jmp
fstp
mov
cmp
retf
in
mov
push
and
shl
call
cmp
out
mov
mov
jg
loopne
push
and
(bad)
dec
call
sahf
mov
jns
jb
clc
inc
sbb
push
aad
or
packsswb
(bad)
push
push
or
inc
test
cmp
adc
js
mov
cmp
xchg
aad
leave
(bad)
repnz
sub
sbb
adc
or
fs
icebp
mov
pop
jle
mov
std
inc
or
mov
mov
in
dec
jle
cmc
loop
inc
mov
call
mov
in
out
or
xor
jmp
jae
aaa
rol
into
jbe
jmp
jg
and
jmp
xor
enter
in
pop
inc
test
clc
cdq
cli
xor
jle
mov
sub
and
dec
je
pop
and
(bad)
fmul
mov
add
ret
push
shl
out
pusha
jb
jbe
xchg
call
add
adc
xchg
sub
and
push
aad
jae
test
mov
mov
xchg
shr
adc
pop
(bad)
scas
cmc
sub
jae
out
lea
outs
push
int
(bad)
nop
xchg
loop
cmps
push
mov
and
data16
stos
xor
test
(bad)
jge
pop
mov
arpl
mov
push
sbb
scas
mov
adc
mov
jo
(bad)
sub
mov
jge
mov
mov
pop
dec
scas
std
cmc
lock
scas
or
xchg
push
xor
pop
dec
ins
push
fisttp
jp
int3
daa
adc
iret
clc
sbb
mov
mov
push
dec
inc
mov
dec
sub
lds
(bad)
js
and
mov
dec
and
or
mov
fnsave
dec
adc
adc
cmps
adc
loop
mov
xchg
mov
pusha
cmp
cmp
pop
xchg
push
and
loope
popa
sub
out
inc
stos
sub
jae
xor
mov
call
adc
movs
sub
in
mov
fbld
push
fcomp
or
sub
sbb
xlat
add
or
mov
lea
add
or
mov
cli
jne
retf
push
pop
ret
stos
bound
jae
xchg
test
js
clc
sub
jmp
ja
cmp
fcomp
sub
imul
push
popa
push
inc
popa
or
test
jmp
pop
cmc
push
cmp
add
mov
ret
les
adc
xchg
(bad)
into
xchg
pop
push
inc
pop
mov
jne
mov
jg
mov
ret
xchg
push
sbb
and
mov
ins
xor
xchg
clc
pand
pop
hlt
add
fisttp
out
outs
jmp
mov
add
jle
leave
jecxz
or
movs
cmp
inc
jl
jge
in
mov
(bad)
out
enter
inc
mov
mov
es
repz
sub
test
inc
push
movs
jmp
or
mov
mov
cmp
mov
sbb
fwait
xchg
jmp
loop
cmp
and
inc
push
retf
sub
jmp
loop
or
mov
fisub
ins
je
pop
xchg
es
push
aaa
push
fcmovne
out
je
int
inc
loop
push
push
data16
mov
sub
push
xchg
je
pop
push
xchg
xchg
addr16
xor
or
cli
clc
cdq
cmp
xor
xchg
ret
imul
fcomp
shl
mov
fwait
je
not
dec
push
scas
jge
out
add
pop
mov
shl
in
xchg
mov
rol
add
sti
stos
je
test
mov
sbb
call
mov
js
call
inc
sti
or
iret
dec
cdq
jg
fcmovne
in
aam
lds
fdivr
mov
in
leave
popf
in
pop
add
mov
mov
aam
not
cmc
cmp
sbb
lods
sub
or
push
std
xchg
pop
loope
hlt
out
(bad)
addr16
push
lods
xchg
mov
xchg
xlat
pop
stc
stos
pop
jo
pop
into
icebp
sub
into
enter
xor
adc
fldcw
ja
cld
mov
test
inc
sbb
sbb
inc
cmc
fwait
lahf
(bad)
neg
scas
push
je
ds
cmp
adc
popf
fwait
push
lods
xchg
inc
xchg
sub
rcl
sbb
inc
add
sbb
mov
lahf
adc
jle
jmp
and
loopne
iret
int3
sti
mov
dec
icebp
daa
(bad)
sti
sbb
jne
adc
fisubr
push
mov
add
in
adc
gs
mov
xor
cmp
mov
mov
xor
adc
ds
test
div
dec
adc
call
loopne
sub
movs
div
inc
add
push
push
jnp
inc
imul
xor
xor
lahf
sar
lods
mov
(bad)
pop
push
int3
in
push
mov
retf
pop
retf
lock
retf
push
imul
pusha
or
icebp
push
xor
mov
push
outs
cli
mov
cmp
test
imul
scas
cmp
jns
pop
jne
mov
(bad)
cmc
jl
lods
sar
mov
rol
mov
sbb
add
mov
xchg
mov
cmc
loop
push
adc
inc
in
ins
lods
inc
dec
sbb
sbb
mov
rcl
xchg
fwait
fwait
add
mov
adc
sub
clc
jl
jge
mov
arpl
lods
dec
ds
xchg
adc
hlt
push
mov
retf
sub
icebp
mov
xor
imul
mov
xor
jg
outs
fistp
fldenv
dec
ror
loope
inc
cmp
cmp
xor
cmp
int
fisub
mov
cs
jns
cmp
jmp
mov
icebp
cmp
xor
push
pop
xchg
sub
cmp
push
adc
mov
dec
rcl
mov
std
mov
dec
cdq
loopne
movs
cmps
addr16
sub
or
mov
(bad)
pop
aad
sub
inc
push
push
xor
and
(bad)
cmp
div
out
pop
cs
shr
(bad)
xchg
fsubr
add
inc
pop
mov
xor
cmc
fimul
mul
mov
xchg
das
std
xor
std
cmps
adc
pusha
xor
addr16
push
es
inc
sub
das
repz
or
sbb
gs
std
and
mov
pop
fwait
dec
sar
add
or
test
inc
mov
and
jae
dec
ret
iret
adc
lea
xchg
rol
pop
push
add
jmp
jbe
hlt
sub
fld
dec
aam
mov
fist
add
cmp
loop
(bad)
scas
shl
inc
fwait
into
addr16
lea
ret
stos
sub
stos
(bad)
dec
rcr
test
in
neg
xor
inc
lods
or
outs
loop
push
jl
mov
cmp
imul
repz
cmp
ret
shr
out
ja
cld
xchg
jmp
call
in
retf
ds
xor
hlt
outs
cs
xor
lods
sub
(bad)
inc
xchg
or
loop
cmp
scas
and
mov
cmp
(bad)
jle
push
out
push
inc
test
test
cmps
pop
xchg
cwde
nop
movs
mov
jl
sbb
pop
pop
(bad)
test
mov
mov
mov
mov
xchg
inc
pop
aas
mov
into
stc
xchg
aad
pop
xchg
xchg
data16
loope
hlt
adc
dec
ins
icebp
xchg
ds
jbe
outs
loop
gs
jo
rcr
inc
es
pusha
into
call
xchg
fidiv
loop
sbb
sub
add
xor
les
mov
out
adc
xchg
(bad)
adc
(bad)
in
pop
inc
pop
leave
cmp
sbb
or
int3
push
mov
out
out
ror
dec
jmp
es
imul
dec
outs
mov
clc
(bad)
call
ret
jns
adc
je
adc
imul
cdq
not
push
test
shl
cdq
fcmovb
jmp
stc
xchg
mov
dec
mov
push
(bad)
out
push
inc
pop
mov
inc
nop
mov
arpl
mov
gs
push
jp
and
jge
popa
mov
cmp
lds
pop
sar
and
repnz
dec
in
mov
cmp
adc
jge
outs
push
aad
fist
js
or
jnp
mov
xor
icebp
pop
movs
inc
sub
loope
mov
mov
pop
inc
push
push
cdq
outs
popf
pop
stos
(bad)
sub
adc
adc
pop
test
push
jle
add
pop
cli
pop
fldenv
loop
in
dec
lea
bound
es
xchg
das
xor
dec
aas
fwait
mov
jnp
and
mov
xchg
je
adc
inc
push
push
xchg
mov
jle
mov
pop
iret
xor
out
mov
xchg
xor
sbb
mov
jo
dec
cwde
inc
cmps
pop
pop
out
xlat
mov
xchg
cdq
jmp
cld
(bad)
inc
call
mov
mov
sbb
pusha
fnstcw
inc
inc
cmps
mov
sbb
hlt
into
mov
pop
or
add
mov
out
jne
mov
push
fsubr
sti
push
xchg
pushf
je
stc
fs
jbe
outs
ud1
adc
mov
rcr
fcmovne
ss
xor
inc
xchg
bnd
jns
sub
push
and
inc
dec
and
mov
clc
jp
inc
inc
adc
adc
inc
and
xchg
jae
xor
in
and
pop
and
push
push
outs
push
pop
sbb
dec
jbe
inc
cmps
aam
jmp
sub
clc
xchg
stc
xchg
mov
mov
ins
xchg
sahf
sti
clc
or
xchg
lahf
sub
mov
jle
xchg
sbb
test
xchg
jnp
out
jmp
lods
mov
repz
push
data16
or
cmp
pushf
jmp
mov
pop
sub
dec
push
inc
hlt
cmp
adc
aaa
jns
push
jnp
cmp
test
xor
call
sbb
loope
adc
aad
in
in
push
mov
push
jle
js
add
jmp
fnstcw
in
cwde
sbb
neg
(bad)
sti
lock
and
adc
mov
mov
ror
and
sbb
and
hlt
retf
adc
ins
cli
pop
shr
pop
lds
icebp
push
repz
mov
push
test
and
adc
pmaxsw
push
pop
test
xor
das
mov
aas
inc
call
jo
cmp
jmp
retf
dec
outs
sub
mov
test
pop
adc
adc
aad
push
mov
fmulp
fdivr
and
jge
add
dec
and
add
add
push
scas
push
das
popf
mov
fs
iret
inc
test
mov
stos
jne
mov
(bad)
in
je
mov
gs
ss
cmps
test
push
jle
sahf
das
stc
pop
fild
das
add
pop
add
jmp
sbb
adc
add
mov
mov
sub
dec
xor
cld
pop
mov
sub
push
dec
mov
push
shr
sar
(bad)
out
rcl
in
mov
popa
sahf
sbb
cmp
mov
iret
mov
jnp
lea
xchg
push
daa
and
push
popa
test
xchg
jecxz
add
xchg
aam
fdivr
adc
sbb
jnp
jle
sbb
imul
cs
test
mov
cli
push
movs
das
adc
dec
inc
cmps
ja
mov
jle
inc
cld
xor
scas
repnz
sbb
adc
test
lods
cmps
or
pop
adc
xor
das
push
jg
jge
push
out
call
jno
data16
(bad)
std
sub
ja
xor
cmp
ins
xchg
addr16
lods
xor
imul
pop
lea
add
push
arpl
div
cmps
fimul
dec
hlt
pop
mov
loop
iret
xor
inc
push
and
ins
jnp
sbb
retf
ja
adc
adc
shl
pop
or
sbb
or
sub
cmp
in
sbb
mov
mov
(bad)
stc
push
mov
fisttp
in
xchg
popf
mov
fidivr
aad
jno
fiadd
sbb
xor
sbb
fldcw
push
sbb
cmc
movs
retf
shr
mov
or
mov
jnp
adc
cdq
imul
or
sbb
fwait
pop
in
je
(bad)
sub
mov
enter
and
inc
mov
mov
or
(bad)
mov
shl
loop
(bad)
and
stos
ss
retf
sub
retf
mov
mov
lods
fbld
and
jmp
or
push
cli
cmp
jnp
adc
push
retf
sub
and
enter
jl
dec
mov
mov
xchg
xor
or
iret
xor
add
mov
push
test
jns
or
out
lods
popa
into
push
ja
inc
mov
in
pop
xor
out
call
(bad)
xor
add
in
out
inc
cmp
retf
js
sub
jns
push
cmp
icebp
sbb
jge
in
dec
mov
push
test
sahf
in
mov
jmp
dec
cli
or
scas
inc
xor
xor
(bad)
inc
mov
pop
bnd
pop
pushf
fadd
sub
mov
movs
jmp
jge
mov
pop
into
xor
shr
jns
outs
adc
jo
sub
(bad)
(bad)
lock
xchg
xor
push
popa
lea
sub
or
or
es
and
cli
and
aad
add
or
inc
xor
and
sub
stos
adc
loopne
xchg
and
movs
(bad)
dec
jb
lods
movs
add
inc
dec
mov
mov
xchg
and
mov
jbe
imul
mov
push
hlt
cwde
jecxz
jnp
xchg
cs
push
aaa
ja
movs
aas
mov
fsub
cmp
and
adc
adc
cmp
rcl
mov
or
fisttp
mov
outs
jns
lahf
xchg
loop
xchg
sub
jl
pop
cdq
mov
movs
mov
push
cmp
mov
xor
inc
push
inc
fistp
pop
mov
stc
xchg
push
inc
or
cdq
rol
stos
pop
cmp
mov
stos
or
cmp
movs
jp
icebp
sbb
(bad)
in
cmp
fsubr
jp
jge
out
cmp
cmp
ins
mov
in
push
daa
xor
dec
mov
inc
nop
imul
and
lods
xor
sub
test
pop
nop
pop
push
movs
movs
jae
in
add
ins
pop
ins
xchg
xor
xchg
ja
aaa
mov
retf
dec
push
push
cmp
mov
xchg
cmc
or
lods
jmp
repnz
adc
inc
ja
push
addr16
and
mov
jp
lods
sbb
aaa
push
push
in
adc
jne
in
sbb
sbb
cmps
mov
in
dec
rcl
jg
sub
jp
call
ss
fisubr
scas
ret
movs
xchg
ins
rol
shl
pop
sub
popf
xor
or
adc
jg
repnz
data16
pusha
popf
mov
pop
sub
xchg
xor
push
not
xor
out
stos
fisubr
je
add
xchg
int
mov
cmps
daa
jnp
mov
push
mov
adc
lahf
rcl
jecxz
mov
lea
out
mov
in
mov
sub
or
(bad)
mov
lea
test
icebp
push
fldenv
adc
clc
inc
mov
aad
lds
xchg
inc
mov
and
pop
cmps
ds
ror
push
lock
nop
dec
js
adc
icebp
out
sbb
(bad)
lods
pop
mov
push
sbb
mov
mov
mov
(bad)
cli
aad
movs
sbb
or
out
mov
jne
jb
xor
fwait
xchg
mov
and
aad
jno
js
mov
dec
int
xchg
or
pop
mov
int
inc
pusha
cld
cmp
retf
and
aaa
mov
inc
mov
test
xor
push
xor
adc
jp
sub
leave
lds
and
movs
ss
es
lds
dec
jbe
int3
fldenv
stos
dec
jg
xor
(bad)
jg
sub
cmps
clc
sar
daa
(bad)
ins
movs
pop
ror
fdiv
inc
cmc
js
mov
fwait
sub
jp
push
repz
out
cmp
pop
sbb
mov
popf
xor
rcr
mov
icebp
rol
popf
xchg
mov
fdivp
pushf
and
adc
movs
add
int
js
(bad)
mov
xor
inc
pusha
ror
stc
sbb
and
loop
adc
cmp
inc
nop
mov
jne
pop
neg
cmps
test
ja
add
(bad)
push
adc
push
lds
daa
dec
cld
fs
push
xor
mov
dec
(bad)
data16
ret
mov
(bad)
jne
mov
loop
nop
fwait
xchg
es
aam
test
leave
movs
pop
aam
pop
int3
pop
jmp
leave
dec
add
loope
scas
ds
ja
mov
rcl
dec
mov
retf
adc
bound
stos
mov
sahf
push
imul
ror
lahf
div
inc
cmp
xchg
arpl
adc
popa
div
cmc
(bad)
xchg
sub
xor
in
inc
jmp
shr
cmp
fmul
in
adc
xor
js
and
xchg
cli
aas
das
cmps
das
xchg
add
lea
bound
rcr
daa
cmps
outs
xchg
ficom
pushf
mov
jb
aad
inc
das
fwait
lock
mov
push
pop
ins
adc
dec
ret
inc
or
setge
aas
push
enter
pushf
aaa
(bad)
xor
xchg
les
les
xchg
xor
push
push
pop
mov
scas
stos
jns
cmps
fs
mov
mov
sub
add
mov
mov
scas
(bad)
mov
push
adc
push
loope
sahf
test
push
sbb
(bad)
pop
ds
pop
pop
ins
fdiv
dec
push
rol
xor
jle
in
or
push
push
cmp
test
xlat
scas
push
loope
leave
imul
in
jmp
and
scas
sub
retf
sub
mov
test
cmps
ror
xor
retf
mov
stc
das
lea
adc
test
mov
inc
retf
mov
sub
cwde
in
mov
rol
and
cmp
push
aad
pop
inc
cmp
clc
in
inc
ret
imul
push
or
fist
xchg
nop
js
push
mov
mov
mov
mov
pop
add
mov
std
inc
aad
dec
test
inc
and
addr16
ds
add
cld
sub
cmp
call
lock
cmp
mov
jle
fcmovbe
inc
into
aaa
daa
inc
lds
cmp
cmp
pop
xor
push
mov
les
or
pop
pop
rol
call
mov
cmp
push
les
jae
movs
shl
loop
jp
arpl
pop
sub
rol
retf
inc
mov
(bad)
daa
stos
popa
in
and
mov
jle
stc
cwde
jp
out
fiadd
push
imul
push
and
cmp
or
or
pop
xor
inc
or
mov
loop
test
mov
lahf
gs
cmp
mov
jne
lods
or
push
or
call
xchg
add
and
leave
inc
rcl
and
sbb
push
jg
aad
cdq
cmp
push
push
add
xor
das
movs
pop
mov
(bad)
dec
mov
ja
push
or
push
test
xor
cmps
dec
sub
sbb
sub
mov
adc
sub
pop
jmp
push
(bad)
les
push
loopne
sbb
test
xchg
add
mov
xor
aad
popf
call
jbe
adc
mov
add
mov
xor
arpl
repz
mov
xchg
mov
adc
jmp
imul
cmp
cwde
sub
xchg
test
push
jne
and
dec
js
push
cwde
inc
leave
adc
aad
or
cmps
push
inc
xor
mov
fnsave
jle
push
cmps
call
sbb
jno
popa
cmp
sbb
lock
inc
iret
or
into
push
jle
and
mov
push
ins
xchg
dec
sbb
addr16
adc
push
es
stc
iret
lods
pop
push
xchg
cmp
jae
test
push
xchg
push
(bad)
sbb
dec
test
adc
loope
or
das
inc
test
jle
and
mov
mov
(bad)
div
dec
sbb
idiv
fsub
add
mov
jle
fisub
cmp
xor
cld
push
pop
push
jb
movs
mov
idiv
outs
test
push
xchg
nop
or
sbb
sbb
call
jl
test
ins
cmps
lea
xchg
leave
leave
test
jb
and
mov
test
adc
adc
sbb
je
(bad)
ret
mov
inc
test
cmp
dec
call
(bad)
xchg
dec
into
stos
mov
aaa
sub
and
and
xor
mov
retf
push
push
push
add
mov
call
add
cmp
inc
mov
adc
rcr
cmp
xlat
popa
out
cmp
ss
jne
or
(bad)
out
aam
fucomip
pop
adc
cld
daa
inc
into
mov
cwde
mov
movs
pop
lea
jne
(bad)
fistp
es
pop
inc
push
call
add
xchg
cmc
in
xchg
mov
loope
xor
sahf
jne
cmp
push
sub
sbb
clc
es
push
xor
lahf
push
aas
dec
mov
xor
das
xchg
adc
mov
push
jbe
es
data16
jge
pop
mov
sahf
xchg
mov
pop
repz
jp
mov
loope
scas
sub
mov
in
jbe
fadd
mov
mov
push
pop
aas
call
push
(bad)
pop
sbb
daa
or
sub
fstp
nop
sub
jl
out
dec
and
int
dec
popf
add
adc
mov
out
sub
out
mov
jb
out
jmp
ins
ins
data16
shr
pop
test
jecxz
pop
pop
mov
xchg
jecxz
mov
jbe
imul
bound
es
push
xchg
mov
in
imul
adc
in
inc
or
popf
inc
and
sbb
stos
into
aad
in
popa
in
add
mov
loope
in
paddusb
aad
ins
js
mov
repz
hlt
adc
and
or
sub
les
std
xor
jb
jg
loopne
push
repz
xor
rol
mov
fist
push
aaa
mov
pop
inc
jo
push
mov
cmp
ins
mov
mov
push
pop
dec
push
sub
js
jecxz
adc
imul
retf
pop
mov
test
shr
adc
xchg
cmp
les
imul
xor
xlat
out
or
adc
mov
aas
data16
sbb
call
inc
sbb
xor
adc
daa
sub
jl
mov
imul
push
ja
lods
mov
es
out
xchg
xchg
mov
(bad)
inc
push
mov
add
pop
dec
pop
jecxz
fsubr
and
jmp
xchg
mov
mov
leave
adc
cmp
fs
lods
xchg
test
sub
sbb
hlt
icebp
xchg
jns
xlat
cmp
xor
leave
fs
fisttp
jecxz
xlat
in
or
jl
push
push
fsub
dec
enter
lods
pop
push
add
ror
pop
int
es
sub
sbb
inc
(bad)
das
movs
and
push
retf
stos
jae
lea
ror
jle
or
add
retf
mov
xor
and
inc
or
pop
push
addr16
jns
lahf
(bad)
out
enter
push
inc
aas
mov
xchg
inc
imul
cmp
sub
adc
cmp
dec
out
out
sub
mov
iret
js
jne
dec
mov
jb
sbb
adc
cmps
idiv
xchg
inc
fldenv
sbb
dec
in
dec
mov
sbb
data16
icebp
pop
(bad)
aas
jmp
imul
out
lock
add
ss
rol
push
xor
out
neg
push
and
in
ret
mov
ja
scas
xor
fnsave
jnp
dec
dec
out
call
lds
test
push
jne
lahf
and
push
in
movs
sar
pop
pop
clc
jbe
xor
sbb
xor
sub
jmp
mov
int3
(bad)
daa
sbb
inc
sbb
in
rcl
dec
xchg
fistp
retf
inc
fwait
jecxz
add
ret
int
mov
stc
xchg
xchg
or
mov
push
(bad)
push
mov
xadd
jg
arpl
jo
test
and
push
pop
je
pop
test
xchg
push
stos
inc
mov
mov
xor
jns
pop
jns
retf
out
repnz
repz
test
mov
dec
xchg
mov
in
sbb
jecxz
add
nop
xchg
sbb
bound
(bad)
adc
xchg
push
pop
scas
(bad)
mov
mov
in
sub
rcr
or
leave
jne
addr16
(bad)
sbb
mov
outs
out
shl
int
shr
(bad)
int3
mov
inc
or
lea
or
outs
pusha
(bad)
popf
ins
hlt
sahf
mov
add
sbb
dec
and
mov
cld
mov
xchg
fistp
les
xor
cld
inc
inc
pop
add
xchg
(bad)
jae
and
xor
jae
push
cdq
mov
fcmovnb
dec
rcl
mov
sub
fst
pusha
push
in
rol
push
aas
cmp
(bad)
loopne
push
mov
cmp
loop
and
cmps
sbb
cs
jmp
xchg
push
scas
push
xor
mov
sub
stos
sahf
jbe
cld
aam
test
jo
pop
leave
cmps
scas
loopne
jbe
mov
(bad)
pop
fisubr
mov
adc
push
bndstx
push
out
loopne
jmp
int
xchg
sbb
mov
lods
pop
jmp
(bad)
imul
dec
add
fist
mov
repz
in
(bad)
pop
adc
jmp
in
retf
dec
pop
jns
enter
sbb
js
jmp
cmp
mov
mov
pop
sahf
or
daa
stos
dec
test
daa
pop
sub
(bad)
dec
xchg
and
and
stc
mov
rol
sub
cmc
xor
mov
cmc
out
sbb
sti
cmps
inc
retf
dec
xor
mov
fcomp
jge
lds
ficomp
mov
jmp
outs
cs
int
daa
inc
jne
cld
pop
sbb
out
sub
cmp
adc
ret
neg
or
in
sahf
push
sar
(bad)
mov
inc
jne
mov
add
mov
pop
ss
jo
add
sti
mov
or
cmp
xor
movs
pop
imul
enter
xor
cmp
enter
pop
in
cmp
daa
or
inc
retf
lods
adc
mov
(bad)
retf
mov
(bad)
dec
pop
add
ja
jae
jmp
add
pslld
cmp
mov
test
push
daa
bound
xor
outs
inc
mov
push
or
xchg
(bad)
pop
inc
mov
les
jo
or
sub
out
stc
inc
mov
sbb
imul
jmp
inc
inc
ret
enter
mov
push
sub
adc
clc
cwde
mov
(bad)
cmp
aas
xchg
sbb
fldenv
ret
call
or
imul
cs
mov
lea
mov
int3
cmp
popa
pop
fs
mov
dec
push
pop
ds
cmps
cmp
nop
xchg
adc
mov
jne
in
adc
fidivr
mov
mov
sbb
or
add
mov
or
int
cmps
cmps
aaa
fidiv
mov
cmps
in
inc
outs
dec
xor
div
rcl
add
mov
sbb
clc
cmc
inc
lods
ins
mov
cmp
out
inc
jne
mov
mov
sbb
out
enter
stc
inc
jae
xchg
test
mov
jmp
mov
inc
inc
test
outs
(bad)
xchg
retf
pop
jmp
jge
mov
popaw
test
adc
mov
mov
cmps
call
push
mov
inc
test
aad
(bad)
jnp
jnp
mov
js
push
push
hlt
movs
jns
cmp
cdq
loop
sub
mov
(bad)
or
push
mov
pop
jmp
add
and
sub
sub
jns
mov
mov
aad
xchg
popa
test
sbb
sbb
pop
in
test
sbb
or
hlt
out
addr16
outs
in
jg
pop
(bad)
cmp
daa
xor
mov
dec
push
and
push
xor
adc
aad
mov
mov
dec
dec
inc
jecxz
rcr
pop
cmp
data16
pushf
cli
ins
sub
fwait
bound
dec
lods
mov
bnd
mov
mov
leave
dec
aaa
mov
shl
(bad)
sti
repz
movs
xor
jne
mov
clc
imul
ins
inc
shr
cmp
leave
push
test
lahf
xor
mov
push
mov
xor
lahf
out
xchg
jae
lods
lds
or
fnstcw
sar
ror
dec
retf
movs
imul
jmp
lahf
push
sub
add
(bad)
xlat
push
daa
inc
jne
jnp
xchg
xchg
mov
xor
test
test
jnp
leave
std
adc
push
pop
cmps
pop
scas
and
cdq
dec
adc
jno
jge
lods
aas
dec
repz
mov
aam
fistp
mov
mov
test
push
jbe
mov
or
inc
movs
push
(bad)
pushf
cmps
sar
xor
or
retf
(bad)
std
in
push
xchg
sbb
into
aaa
cmp
jo
mov
int
lods
mov
jne
movs
cmc
xchg
jnp
pop
dec
test
idiv
adc
mov
mov
mov
ss
in
outs
mov
jnp
add
cmp
jne
retf
rol
ja
mov
mov
push
mov
(bad)
jns
(bad)
imul
aam
aad
and
mov
add
pop
xor
pop
xchg
aam
rep
imul
ins
ror
clc
es
push
or
adc
imul
inc
push
cmps
ficom
movs
mov
mov
cmp
in
ror
jmp
mov
inc
ret
mov
mov
adc
mov
ins
test
retf
fimul
pop
aad
push
jmp
mov
addr16
(bad)
lods
lock
push
rcr
push
push
adc
jne
faddp
daa
retf
in
and
je
sbb
stos
lea
mov
jp
(bad)
test
cmp
mov
sti
cmp
ds
mov
mov
dec
es
test
sahf
mov
test
push
adc
addr16
rol
inc
je
pop
out
push
push
xchg
push
mov
push
mov
repnz
push
sti
pop
jecxz
xor
jne
xchg
mov
in
popf
fiadd
lds
icebp
push
sub
adc
xchg
pop
movs
int3
sbb
and
iret
rol
popf
lds
jnp
inc
cmp
loope
into
repz
lahf
sbb
jnp
ffreep
pop
push
sbb
outs
imul
enter
xchg
add
xchg
xchg
call
imul
xchg
sub
loop
sbb
call
(bad)
dec
sub
jmp
xchg
dec
pop
adc
xchg
test
jnp
xchg
clc
dec
out
outs
clc
dec
pop
sti
sub
and
or
sbb
test
and
ins
es
daa
mov
adc
div
xor
pop
jp
lahf
outs
sbb
xchg
pop
push
cmp
xchg
lods
mov
cli
and
jns
mov
and
inc
or
cmp
and
dec
mov
xchg
cmp
(bad)
jmp
and
fxch
push
outs
cwde
inc
hlt
sbb
jl
jge
xor
and
and
out
mov
jge
es
neg
in
inc
int
xlat
dec
jnp
fsubr
or
mov
jg
or
push
jge
loop
mov
pop
cmp
mov
sub
dec
and
mov
(bad)
loopne
push
sub
add
mov
cs
add
arpl
sbb
loope
out
enter
cmp
imul
push
and
pusha
jle
aas
ror
pop
fldcw
aam
mov
aas
mov
sub
cwde
mov
xchg
or
pop
clc
mov
jg
fisttp
mov
dec
lahf
loop
fisub
and
and
push
dec
mov
add
rol
(bad)
fcmovnu
jnp
cmp
movs
xchg
xchg
pop
stos
add
mov
in
ds
xor
shl
lahf
shl
stos
mov
dec
dec
pop
pop
scas
(bad)
div
push
push
jbe
push
les
xchg
mov
cld
pop
mov
or
out
cmps
mov
sub
and
sub
(bad)
fnstcw
xchg
in
in
outs
scas
pop
aam
mov
pop
or
shl
dec
sbb
sbb
sub
push
sub
or
push
push
nop
jmp
sbb
or
leave
mov
dec
push
sbb
xchg
lea
repz
add
enter
add
push
cdq
xchg
mov
test
enter
xor
fs
dec
or
mov
cdq
push
xlat
lods
test
sbb
mov
data16
push
cs
mov
cmp
icebp
cld
push
jg
jne
loope
ja
es
cmc
or
mov
sub
mov
in
mov
lods
fidivr
ret
xor
ins
out
adc
hlt
ror
vdivsd
rep
sbb
into
jecxz
out
adc
aam
mov
(bad)
mov
outs
sbb
scas
dec
out
sbb
xchg
ins
lds
pop
sbb
outs
adc
mov
mov
push
jns
cwde
xor
mov
ret
xor
lea
mov
lea
jecxz
js
in
push
iret
sbb
xchg
lea
loope
mov
in
stc
adc
jbe
push
arpl
mov
cmp
jmp
jbe
xchg
mov
bound
add
mov
pop
pusha
lock
je
ins
ds
push
or
inc
(bad)
imul
xchg
sti
xor
aad
gs
and
jp
sub
push
pushf
cmp
popf
and
out
out
jo
cmps
pop
dec
mov
lds
mov
xor
mov
cwde
into
push
int3
sti
push
daa
mov
mov
int
into
cmp
push
pop
jo
ret
push
or
xor
lods
dec
mov
mov
test
adc
inc
xchg
or
loope
sub
lahf
fdivr
pop
shl
outs
dec
jbe
mov
inc
xor
loop
movs
je
jne
xchg
in
bound
cmp
fsub
scas
scas
adc
ficomp
repnz
rcl
dec
mov
in
loope
add
pop
in
mov
pop
outs
adc
sub
fucom
fyl2xp1
fs
adc
into
leave
jns
loopne
jae
xchg
sub
popa
sbb
aad
lock
out
outs
test
ror
imul
idiv
repz
pop
xchg
(bad)
xlat
jnp
mov
mov
inc
xchg
xor
xchg
imul
mov
sbb
adc
fisubr
fst
adc
add
sub
sub
xlat
add
push
fmul
push
inc
(bad)
int3
cli
leave
jmp
lahf
in
adc
pop
into
faddp
sub
rcr
lea
cmp
add
aas
jmp
push
sub
mov
iret
out
jo
icebp
cwde
pushf
jmp
push
(bad)
mov
jecxz
add
fwait
cmp
inc
push
push
(bad)
test
mov
shl
and
jmp
leave
aad
fsubr
inc
scas
push
xor
dec
add
adc
int
pop
xor
sbb
mov
add
popa
push
fwait
push
xchg
and
mov
mov
cli
pushf
aaa
or
push
in
fldenv
mov
lds
retf
add
xor
cmp
adc
jbe
call
ret
lods
push
aaa
lahf
mov
pop
les
xor
and
out
mov
jae
sub
fmul
test
pop
xor
add
iret
popa
dec
push
ret
and
cmp
push
lods
ja
push
mov
ss
mov
jp
mov
(bad)
xchg
push
sbb
hlt
jecxz
pop
pop
adc
xlat
inc
jns
dec
js
ja
iret
jmp
pop
adc
pushf
inc
cs
movs
call
int3
scas
es
loopne
jno
sub
or
fstp
pop
arpl
pusha
shl
sbb
push
fld
data16
sub
in
mov
inc
xor
dec
gs
jae
mov
lea
cmp
or
enter
cmps
ret
scas
ds
jg
cli
mov
mov
jb
aad
repz
dec
push
out
stc
mov
leave
adc
and
cmps
gs
jmp
clc
mov
add
xchg
bound
mov
(bad)
mov
adc
pop
push
aas
adc
ret
mov
outs
call
lahf
es
test
arpl
pop
clc
sub
outs
mov
ror
out
dec
aam
mov
pop
(bad)
jnp
add
stos
or
sub
mov
inc
sbb
inc
(bad)
cmp
addr16
in
push
jb
(bad)
dec
lods
mov
sti
sbb
cmp
nop
cld
fcomp
mov
mov
jns
mov
cmp
jo
call
clc
jnp
call
mov
jb
lds
sbb
and
dec
stos
iret
inc
xchg
in
mov
jmp
lods
(bad)
xchg
add
adc
lods
inc
sahf
inc
popf
xor
jns
xlat
push
mov
mov
jge
sub
sbb
inc
ds
xor
and
test
into
xchg
shl
dec
inc
(bad)
aaa
and
cs
xor
cmp
ret
lock
pusha
jmp
mov
push
inc
repz
xchg
mov
test
push
mov
popf
cmp
push
inc
(bad)
hlt
in
fistp
pusha
push
fs
hlt
out
mul
movs
mov
xor
rol
aam
je
fsubr
xor
dec
mov
imul
xadd
div
mov
cmps
retf
or
ficom
cmc
mov
inc
mov
sahf
sbb
bound
bound
pop
int3
inc
xor
fcomp
ins
fisubr
test
daa
in
std
mov
xor
in
out
mov
test
sar
pusha
jmp
and
outs
test
into
mov
rcr
loop
repnz
ins
sub
(bad)
fdivr
mov
cwde
lea
cld
mov
or
data16
cmp
mov
loope
mov
cmps
jecxz
mov
int3
popf
dec
iret
rol
mov
adc
push
jl
add
mov
mov
mov
sbb
add
jo
cmps
sti
loopne
sub
test
daa
jmp
fdiv
dec
mov
dec
mov
out
xchg
iret
xchg
sub
jbe
jae
adc
mov
dec
or
(bad)
sub
pop
cmp
shl
jecxz
jo
or
sbb
push
xlat
aaa
scas
jbe
outs
mov
hlt
sbb
cmp
in
cmps
mov
mov
push
jmp
dec
jg
pop
mov
xchg
push
lahf
mov
movs
jl
stos
pop
xchg
push
cmp
ss
mov
in
scas
test
adc
(bad)
sar
and
in
repz
sub
idiv
loope
jl
imul
jmp
or
ds
ss
mov
aam
gs
test
std
pop
xchg
fxch
cmp
leave
or
fmulp
hlt
mov
movs
iret
jo
xchg
cmc
ficom
div
jno
sbb
outs
or
push
daa
stos
add
fidiv
adc
pop
loope
inc
cld
push
(bad)
ja
jl
dec
iret
sub
add
cmp
dec
mov
or
div
aaa
int3
aam
mov
jae
inc
aad
jl
jae
data16
jne
bound
cmp
mov
idiv
push
lahf
out
shr
daa
push
out
mov
lea
shl
pop
ss
jmp
mov
sti
adc
jb
mov
fwait
mov
ins
push
sub
jno
adc
mov
jp
cwde
test
sbb
enter
pop
mov
std
lods
mov
jns
lock
mov
jo
add
inc
bnd
jle
ret
jno
jecxz
lods
in
push
aam
rol
push
sahf
popa
mov
pop
xor
iret
mov
push
ret
shr
adc
dec
ficom
inc
sbb
(bad)
lods
xchg
jb
inc
jmp
cdq
ja
mov
scas
(bad)
popa
enter
sub
mov
ds
inc
push
js
mov
test
or
ret
adc
mov
pop
stos
setns
mov
xor
mov
jne
sub
jns
dec
int3
dec
mov
fcom
push
scas
(bad)
cli
(bad)
push
xchg
xor
das
ins
test
xchg
mov
inc
popf
test
nop
jnp
inc
out
push
pop
cmp
rcl
jle
arpl
aam
jns
movs
cmp
out
push
arpl
adc
ins
popa
call
bnd
ss
cwde
jge
jns
(bad)
or
cmp
fldenv
sar
les
cli
fistp
iret
outs
adc
mov
(bad)
in
or
xchg
mov
jno
jg
out
outs
adc
mov
test
or
hlt
pop
fld
fstp
and
daa
rcl
hlt
xchg
cmp
sahf
jns
ss
aam
scas
jne
lods
mov
call
xlat
cmc
and
jbe
xlat
jb
mov
adc
jno
and
add
out
sbb
ret
xchg
pop
addr16
sti
mov
pop
sbb
mov
mov
pushf
mov
test
fsubp
jb
sti
(bad)
js
add
scas
jb
in
ret
ds
sar
and
call
inc
mov
iret
fcomip
std
mov
pop
push
leave
and
call
xor
lods
mov
out
movs
out
mov
jp
scas
into
aad
lea
add
sar
imul
in
sub
and
mov
mov
movs
or
push
cli
dec
sar
jmp
mulps
ret
adc
dec
cmc
xchg
movs
in
add
jp
adc
mov
clc
add
lds
in
mov
scas
out
push
pop
cmp
pop
inc
daa
push
xchg
pop
sub
mov
loope
inc
push
out
in
jmp
jo
inc
shr
in
in
fisub
in
and
mov
and
add
and
std
out
out
cwde
fisttp
cmp
addr16
pop
add
fsubr
push
pop
ins
xor
int
out
inc
jle
jmp
push
push
stc
jo
loopne
push
mov
and
adc
gs
mov
mov
jmp
sub
adc
sub
push
pop
and
mov
mov
cmps
pextrw
push
arpl
inc
dec
cmc
lock
mov
jge
sub
mov
nop
dec
adc
int
inc
add
mov
mov
loope
dec
mov
call
ror
leave
ficomp
cmc
sahf
mov
cli
call
adc
or
jmp
test
retf
call
mov
push
sar
sub
aas
pushf
lahf
nop
xchg
gs
cmp
repnz
inc
in
stc
mov
adc
add
jge
sbb
jbe
adc
xor
inc
cld
nop
mov
ins
ja
push
in
mov
std
adc
dec
int3
in
or
mov
inc
enter
cmp
jb
fdivp
xchg
stos
pop
jp
push
test
cmp
addr16
loopne
dec
cmp
push
pop
dec
or
or
retf
xchg
dec
adc
mov
sub
sub
mov
pop
inc
mov
leave
cmp
xchg
test
dec
jecxz
pop
cmp
mov
jmp
movs
jnp
(bad)
bound
add
sub
hlt
mov
sub
daa
dec
jne
sar
inc
xchg
mov
jnp
rcl
mov
in
cdq
cli
fwait
add
mov
enter
and
mov
adc
je
pop
push
sbb
fisubr
cli
jmp
pusha
inc
enter
mov
fcomp
ror
addr16
mov
mov
scas
(bad)
xor
dec
pop
call
jno
adc
into
mov
iret
and
fisttp
sbb
test
ja
fldenv
mov
cmc
daa
cdq
bsf
lods
call
sbb
pop
rcl
xchg
pop
int
pop
test
lods
inc
sbb
mov
xor
je
or
fs
dec
mov
sub
pop
test
adc
lods
cmp
jl
push
pop
sbb
stos
xchg
ret
and
retf
sub
add
adc
stos
movs
in
lods
mov
adc
pop
add
sbb
xchg
pop
aam
popf
repz
icebp
push
dec
dec
dec
xor
or
inc
mov
push
jbe
imul
jnp
mov
mov
jge
ja
pop
stos
mov
hlt
rcr
pop
pop
sub
dec
push
add
scas
jo
cwde
inc
xchg
enter
outs
cmp
cmp
sub
xor
imul
xor
or
jmp
test
cld
dec
arpl
xchg
adc
xchg
ins
scas
clc
or
xchg
jecxz
jp
(bad)
and
pop
outs
in
sub
scas
(bad)
into
fwait
mov
arpl
(bad)
scas
popa
fcmovnb
dec
(bad)
adc
add
in
jmp
pop
inc
push
mov
jmp
inc
or
sub
mov
sub
pusha
sbb
jae
leave
add
cmp
popa
popa
enter
xchg
out
out
mov
mov
mov
shl
inc
sub
mov
call
push
jmp
call
popf
(bad)
jmp
inc
sbb
fist
adc
or
xor
jno
(bad)
xor
pop
fimul
mov
mov
cmp
idiv
inc
jg
adc
mov
sub
cmps
push
dec
mov
jle
retf
cmp
xor
cmps
mov
jae
adc
jb
pop
dec
daa
cmps
cmp
mov
xchg
data16
sahf
push
ins
rcr
pop
std
aad
xchg
adc
loope
imul
out
add
adc
mov
xchg
fwait
dec
cwde
sub
sub
jg
xchg
jbe
xor
in
or
jnp
leave
push
mov
cmp
orps
jge
scas
daa
pop
fnstenv
fcmovnbe
xchg
mov
cpuid
popf
xor
and
popa
rcl
pop
add
cs
jecxz
cmp
into
xchg
inc
or
mov
and
add
pushf
mov
or
setno
jmp
je
shr
add
mov
and
out
pop
sub
xchg
or
sti
push
jp
call
mov
jmp
jmp
or
fmul
aaa
movs
fldcw
(bad)
clc
fldenv
push
dec
imul
enter
repz
jmp
cmps
ins
movs
mov
popa
pop
mov
outs
mov
popf
push
std
and
sub
imul
je
xchg
shr
dec
loopne
in
or
mov
les
outs
pop
xor
mov
sub
push
loop
out
jl
loopne
pop
sub
xor
add
cdq
mov
pop
cmp
dec
leave
pop
mov
sbb
fld
add
test
push
xchg
out
jmp
xchg
push
mov
mov
inc
push
out
pop
jmp
arpl
pop
movs
clc
fnstsw
fdivr
pusha
xor
cmp
lds
imul
cmp
loopne
mov
fistp
sbb
jb
or
fist
and
out
jbe
add
neg
ret
repnz
sub
cmps
fdivr
sbb
dec
call
ror
jmp
popa
int
add
cmp
imul
sbb
scas
mov
add
aas
mov
cmp
addr16
pop
loop
iret
push
(bad)
pusha
cli
mov
popa
add
xchg
mov
cli
aas
cmp
push
sub
xchg
jno
jmp
js
mov
xor
xor
test
movs
hlt
and
mov
push
sub
mov
ficom
mov
sub
pop
xchg
mov
out
pop
push
xor
repz
or
add
and
int3
xor
jge
scas
mov
cmp
loopne
jbe
lods
xor
ins
xor
pushf
in
in
cdq
jp
dec
ret
push
or
popa
fcomp
les
or
sahf
jb
cs
not
bound
inc
cmp
(bad)
push
pop
pushf
pop
sub
jp
sar
pusha
fcom
adc
xchg
xchg
sub
std
mov
or
call
jg
add
in
xlat
ins
inc
push
out
daa
ds
cmc
dec
les
mov
div
sbb
mov
rcl
mov
fldenv
aaa
xchg
mov
jp
mov
add
mov
icebp
add
dec
ins
ret
jl
imul
sub
dec
sbb
aaa
cmp
out
in
push
sti
pop
cmp
pop
ds
imul
push
(bad)
nop
scas
and
xchg
xor
out
shl
imul
out
retf
lea
sbb
or
add
cmp
fwait
push
or
xor
je
outs
xor
cmps
mov
push
inc
add
cdq
mov
(bad)
scas
stc
and
pusha
mov
outs
cmp
xor
std
and
popa
adc
addr16
gs
out
dec
mov
enter
xor
loopne
push
test
fnsave
and
mov
push
sbb
mov
(bad)
into
push
inc
int
mov
xor
or
add
jbe
or
sub
aam
loope
not
jp
mov
(bad)
add
xchg
pop
hlt
mov
movs
adc
ds
nop
js
push
shl
sbb
fistp
mov
mov
pop
sub
pop
sbb
loopne
inc
scas
jbe
repz
xor
adc
mov
cwde
out
xchg
mov
ds
outs
jns
loop
xchg
push
mov
xchg
pop
sbb
rcr
sub
xchg
and
fsub
inc
test
sub
mov
ins
(bad)
jnp
dec
dec
and
xor
sub
mov
(bad)
std
scas
cmp
mov
sub
imul
jns
addr16
pop
scas
add
gs
fs
arpl
cmp
mov
jge
adc
scas
or
xchg
addr16
(bad)
jp
shr
jl
bound
xchg
xor
jbe
inc
inc
sub
call
scas
out
jo
hlt
cmp
mov
pop
xlat
xor
scas
dec
cmp
mov
mov
das
fs
out
imul
lods
mov
dec
test
xor
cmp
sahf
sub
(bad)
lahf
scas
pop
fld
fwait
cmp
in
jb
js
xor
sbb
shl
call
lods
cli
mov
xor
add
mov
pop
mov
mov
inc
dec
fistp
cmp
adc
cmp
and
jo
push
in
std
(bad)
or
sub
and
imul
pop
les
rcr
adc
pop
jp
mov
pop
jo
dec
mov
or
mov
sub
stos
cwde
add
mov
mov
jo
aad
(bad)
dec
jmp
out
test
mov
jno
loop
xor
in
imul
lods
test
scas
daa
xchg
fadd
sub
push
and
loopne
mov
sbb
mov
clc
pop
in
inc
sub
push
ds
xchg
lahf
sub
xor
pop
out
stos
dec
add
ror
shr
in
(bad)
push
pop
out
leave
mov
xlat
(bad)
pop
mov
nop
push
cmps
or
(bad)
clc
mov
pop
iret
and
ficom
mov
lods
inc
ins
out
sbb
jge
fsubr
imul
pushf
mov
retf
pop
fisttp
fnstenv
dec
std
jl
mov
push
mov
fs
cmp
mov
test
sub
mov
into
daa
popa
std
xor
mov
jno
fbld
mov
shl
int
jae
sti
add
push
add
jno
xor
jbe
mov
leave
inc
mov
push
in
jne
push
push
xor
cmp
imul
retf
add
cmp
mov
dec
pop
gs
adc
mov
xor
or
mov
mov
and
(bad)
loop
cmp
xchg
inc
gs
mov
lea
dec
shl
inc
sbb
int3
and
cmp
cmp
sti
imul
cmps
test
or
mov
xor
sub
fwait
loope
cmp
es
es
jle
xor
ror
jp
out
clc
xor
push
aas
xor
test
push
in
movs
mov
(bad)
pop
adc
scas
push
hlt
mov
pop
inc
js
or
int3
(bad)
fucomi
ror
mov
inc
adc
xchg
je
mov
jmp
imul
ja
ins
cdq
adc
jo
pop
pop
xlat
cmp
ret
mov
fld
cmps
dec
call
gs
sar
cmps
dec
daa
lahf
push
push
icebp
popf
inc
xor
pop
mov
stc
popa
fisubr
test
leave
les
cmp
out
lds
jns
(bad)
cmp
aad
addr16
add
int
aam
out
xlat
mov
jecxz
xchg
sbb
inc
shl
inc
(bad)
test
test
xor
adc
rcr
jmp
imul
mov
pop
fnstenv
retf
cs
sub
rcl
shr
add
imul
inc
push
pop
sbb
(bad)
jg
loope
mov
mov
cli
faddp
mov
nop
or
jle
ja
movups
shr
mov
sub
or
dec
fdivp
sbb
lea
test
sub
adc
xchg
jg
cmp
ss
dec
ret
js
xor
(bad)
(bad)
mov
div
inc
inc
mov
test
mov
inc
loop
pop
fild
mov
cmc
es
jb
test
xchg
pop
popf
ss
mov
sti
sbb
jno
jbe
jg
xor
fdivr
(bad)
jmp
repnz
jne
pushf
js
mov
mov
jle
cmp
xor
xchg
sbb
jbe
dec
cmp
sub
fdivp
fimul
dec
lods
sub
add
add
dec
mov
sbb
sbb
mov
icebp
stos
adc
adc
mov
and
popa
dec
out
xor
jmp
jne
les
sbb
rol
cmps
out
sub
mov
push
and
retf
es
sbb
movs
daa
mov
jne
add
jp
mov
aaa
xor
and
out
shl
call
lods
sbb
cmps
movs
mov
ins
jae
std
sahf
imul
(bad)
les
and
cmp
movs
bound
repz
pop
movs
test
stos
(bad)
jns
cmp
mov
jp
int3
cmp
pushf
scas
mov
ret
std
xor
and
push
out
test
add
cld
call
sbb
inc
mov
inc
jl
fdivr
mov
xor
pop
mov
ficomp
mov
sbb
pusha
jne
push
pop
mov
dec
nop
sti
mov
pop
push
pop
add
jnp
imul
inc
jns
mov
mov
pushf
lea
jmp
pusha
and
(bad)
fsave
aaa
mov
das
shl
rol
or
pusha
(bad)
cdq
les
leave
faddp
inc
jnp
or
popf
dec
xchg
xchg
pusha
sub
movlhps
cli
inc
and
jno
bound
inc
jns
iret
mov
and
lds
sbb
cmps
jne
(bad)
cmp
xor
enter
ret
les
xor
pop
(bad)
aas
popa
pop
adc
mov
dec
xor
pop
mov
xlat
int3
(bad)
mov
std
or
xor
cmp
and
in
jp
popf
mov
sbb
push
stc
aad
iret
cmps
add
pop
mov
(bad)
cmp
(bad)
mov
movs
jnp
xchg
ror
and
jle
push
jp
loop
mov
mov
cmps
push
out
adc
mov
icebp
pop
fs
pop
dec
sub
pop
sbb
adc
popa
push
rol
fst
in
sbb
ror
das
imul
daa
nop
adc
sub
jb
mov
mov
mov
shl
bound
popf
fldcw
xor
test
dec
and
fild
mov
push
adc
mov
movs
and
(bad)
dec
dec
cmp
ret
stos
sbb
(bad)
call
add
rcl
sar
xchg
in
retf
pop
xor
(bad)
xchg
mov
fs
fdiv
adc
jle
mov
mov
mov
and
aas
stc
pop
inc
push
dec
sub
xchg
and
(bad)
mov
xlat
bound
adc
sub
mov
js
neg
lea
adc
les
cld
fs
sbb
cmps
mov
cdq
and
sub
mov
imul
jo
mov
cmp
rcl
imul
repnz
cs
add
popa
ror
dec
frstor
dec
int
addr16
movs
adc
lods
jmp
cmp
jl
js
or
xchg
in
lods
mov
push
xchg
or
mov
xchg
in
cmps
stos
push
jmp
pusha
cmps
int3
outs
jmp
in
test
sbb
xchg
cmps
dec
arpl
(bad)
sti
cs
xor
inc
add
mov
jno
xchg
xor
bound
das
fisub
sbb
stc
xor
mov
arpl
aam
loope
mov
lea
mov
popa
retf
mov
pop
inc
dec
fs
test
adc
outs
sbb
jecxz
out
(bad)
jp
pop
aaa
ins
popf
in
test
rcr
stos
add
xchg
inc
sbb
dec
mov
sbb
mov
xchg
popa
movs
cwde
push
cmp
cmp
dec
dec
sub
adc
ror
fs
lea
pop
hlt
fnstsw
outs
cmc
outs
cmp
sub
mov
dec
adc
mov
cdq
outs
and
aad
xchg
int
movs
pop
enter
or
and
in
inc
adc
sbb
jno
sti
pmulhuw
rcr
into
dec
inc
jmp
sub
lods
lods
mov
jp
hlt
fs
sbb
call
pusha
mov
sti
xor
in
jmp
adc
mov
dec
jmp
dec
xor
mov
jo
hlt
aaa
adc
hlt
sbb
dec
jne
sub
mov
add
retf
rcl
nop
iret
rcr
mov
(bad)
fistp
jge
lods
pop
ret
sub
add
pop
dec
sar
xor
push
mov
mov
out
sbb
cdq
cmp
mov
in
cmp
xor
jp
fs
mov
cld
sub
add
sub
pop
addr16
push
push
leave
ja
pop
mov
int
jle
data16
test
into
mov
ins
jp
push
cwde
cmp
iret
stos
mov
hlt
sub
or
push
xor
xchg
cmp
push
(bad)
adc
or
retf
jmp
sti
sbb
nop
sub
stos
mov
inc
stos
jp
inc
jle
repnz
xchg
cdq
cld
pushf
mov
mov
test
jmp
xchg
bound
dec
neg
xor
fld
fiadd
jb
sahf
repnz
add
pop
pop
fs
lahf
iret
int
leave
and
movs
pop
hlt
push
mov
call
(bad)
push
fidiv
(bad)
pop
push
xor
dec
sti
push
stos
cmp
and
inc
push
lock
mov
sbb
leave
test
iret
fsubr
and
rcr
std
pop
cmp
es
adc
(bad)
aad
sub
leave
ins
mov
loopne
cli
lds
fcmovne
test
inc
xchg
cwde
sbb
xchg
fwait
icebp
test
data16
xchg
jnp
jmp
jno
mov
lods
call
push
push
pop
sub
mov
inc
pop
pop
fs
dec
ins
in
sbb
pop
in
inc
imul
adc
call
sbb
xor
lock
jnp
repz
ds
adc
scas
stos
nop
mov
inc
retf
loop
pop
push
(bad)
xchg
(bad)
mov
fimul
mov
std
mov
pop
nop
inc
mov
mov
and
xor
data16
leave
outs
jno
outs
adc
sbb
pushf
dec
call
push
xchg
nop
xchg
inc
pop
and
jmp
jnp
retf
ror
adc
mov
sbb
aam
lock
inc
add
(bad)
pop
pop
mov
add
adc
retf
and
push
add
imul
and
ret
adc
stc
inc
ret
add
stos
dec
jbe
push
test
xchg
mov
pop
fsubr
or
iret
js
es
or
inc
addr16
xchg
pop
daa
movs
sti
mov
pop
gs
popa
ds
inc
jae
mov
popa
out
sahf
test
les
sti
ins
xchg
sbb
loope
push
cmp
lock
cli
das
imul
lea
xor
sahf
push
(bad)
pop
fld
stos
add
mov
je
in
lods
pop
cmps
sar
gs
push
cwde
cmc
(bad)
dec
int
jo
scas
mov
add
or
mov
in
add
int3
call
adc
in
pusha
loope
fld
mov
pushf
test
lods
into
or
fbld
sti
mov
xor
dec
scas
push
aaa
xchg
jge
cli
adc
pop
push
mov
out
aaa
cmp
xor
inc
dec
int3
mov
dec
xor
pop
inc
add
xor
inc
ja
push
mov
stos
int3
(bad)
call
add
mov
mov
call
adc
add
lahf
ins
jmp
adc
xchg
(bad)
and
inc
nop
lods
outs
repnz
pushf
in
jno
mov
std
shl
mov
push
icebp
sbb
xchg
add
mov
inc
(bad)
aad
lds
add
cli
cmps
sbb
shl
mov
inc
dec
mov
imul
fwait
mov
sbb
call
inc
sub
mov
aad
mov
xlat
cmc
cmp
rcr
adc
or
lea
xchg
vmovss
inc
cli
(bad)
stos
push
and
lea
sub
mov
lds
pop
(bad)
lock
mov
inc
add
jb
push
retf
mov
mov
cli
loop
jge
shl
mov
shl
outs
push
test
mov
mov
cmovge
(bad)
rol
lds
pop
xchg
pop
xor
(bad)
js
cld
dec
je
cwde
and
in
cmp
mov
sub
repz
repz
and
mov
nop
sbb
cwde
nop
cwde
sub
mov
movs
test
dec
jne
push
out
push
mov
(bad)
out
and
mov
mov
dec
daa
or
add
(bad)
repz
in
mov
jle
(bad)
loop
lds
clc
mov
jnp
lds
jmp
xor
mov
xchg
xor
add
push
sub
and
sub
or
test
test
dec
les
xor
xchg
ss
jo
loop
aas
adc
pop
sub
dec
stos
lahf
fs
push
jne
jp
pop
push
cs
or
int
scas
test
mov
rcl
inc
(bad)
sub
nop
test
arpl
sub
les
icebp
sti
out
in
ror
push
(bad)
xlat
sub
call
stos
(bad)
sub
in
dec
xor
fwait
pop
test
push
add
add
es
fdivr
fs
push
jmp
nop
daa
iret
inc
jns
push
inc
pop
push
ds
adc
test
and
scas
inc
mov
jae
es
push
add
in
mov
mov
push
test
cwde
cmp
jg
push
leave
sbb
jns
das
scas
popf
aam
(bad)
adc
leave
adc
iret
mov
cmp
ins
outs
jp
ds
mov
xor
dec
movs
adc
xchg
inc
mov
sbb
mov
lods
push
aaa
bound
jl
dec
pop
and
push
pop
mov
and
das
dec
mov
add
rcl
das
dec
popa
mov
inc
sbb
lahf
movs
(bad)
jmp
pop
test
neg
(bad)
push
jo
and
xor
jae
inc
pop
cmp
mov
dec
lods
dec
cmp
data16
dec
xchg
cmp
cmp
ret
dec
add
aad
pop
mov
shr
movs
inc
xchg
icebp
push
jmp
aad
scas
mov
fadd
or
cmc
cdq
addr16
hlt
sub
pop
lods
lea
sbb
outs
xchg
iret
adc
inc
push
sbb
mov
jl
ret
add
mov
sti
adc
int3
in
dec
(bad)
and
add
cs
lahf
scas
adc
xor
dec
nop
inc
and
mov
stos
pop
cmova
cli
out
cwde
mov
cld
int
fcom
push
or
xchg
into
push
xchg
xor
sbb
inc
dec
rcl
pop
adc
jo
sub
pop
(bad)
mov
push
(bad)
xchg
mov
out
mov
sbb
xor
jo
pushf
dec
adc
in
push
mov
fstp
out
outs
cs
aam
adc
mov
and
imul
ret
push
or
sub
fistp
inc
or
mov
add
ins
inc
or
push
pop
push
js
sub
xchg
arpl
adc
xchg
jg
dec
mov
(bad)
daa
push
cmp
dec
pop
mov
loopne
and
pop
ins
inc
nop
or
pop
cmc
mov
sbb
jnp
outs
not
xchg
mov
loop
push
loope
jmp
imul
fdivr
push
dec
stc
mov
jmp
leave
(bad)
push
jnp
mov
shl
enter
int
mov
push
and
outs
hlt
data16
and
rcr
jo
jnp
mov
push
cdq
jmp
in
dec
inc
and
rcr
push
xchg
mov
scas
sub
and
loope
in
ins
mov
mov
cmp
xchg
cmps
dec
adc
retf
repz
jb
lods
cmp
add
fdivr
test
or
imul
call
out
call
adc
jmp
xor
fs
in
and
out
mov
xchg
pop
adc
jb
adc
push
add
aaa
test
fwait
icebp
jle
repnz
pop
dec
int3
add
jge
call
into
(bad)
xchg
js
push
xchg
movs
lock
xlat
retf
jnp
mov
(bad)
dec
inc
out
(bad)
or
mov
dec
sub
outs
(bad)
cmp
out
jge
sub
movs
xchg
rol
mov
lods
retf
mov
ins
sub
mov
je
pop
(bad)
fdivr
pop
fstp
push
shr
stos
outs
mov
sbb
push
mov
xlat
xchg
sbb
dec
js
mov
ds
outs
and
mov
cmp
mov
pop
sub
pop
jae
sar
mov
lahf
jo
(bad)
jo
(bad)
cmps
jmp
dec
loop
inc
and
cmp
cmp
je
or
int3
les
sub
sbb
not
inc
xchg
mov
cmp
(bad)
(bad)
mov
jg
rcl
lock
sahf
test
add
fldcw
sub
dec
inc
out
(bad)
ror
das
test
mov
cmc
mul
lahf
cs
outs
out
mov
sub
xchg
xor
add
aad
inc
ja
mov
cmp
std
pop
stos
lock
int3
add
(bad)
(bad)
into
jae
dec
in
out
shr
aas
arpl
xchg
jnp
fdivr
and
jmp
mov
mov
push
enter
movs
mov
mov
into
(bad)
(bad)
push
mov
push
das
xchg
xchg
xor
je
mov
xor
dec
sbb
ror
push
sub
lahf
push
jb
pop
lods
(bad)
bound
xor
dec
(bad)
xchg
add
or
dec
and
push
mov
push
add
or
jns
push
mov
mov
jb
daa
jle
cmp
test
fbld
(bad)
xchg
jp
fwait
out
adc
or
lds
fwait
sar
push
xchg
ins
inc
cdq
test
xchg
push
adc
inc
cwde
sub
adc
(bad)
movs
imul
xchg
out
jle
bound
aad
mov
jns
jb
int
cmp
ds
xlat
sub
jl
lock
repz
xchg
xlat
push
mov
scas
sub
data16
jp
ret
jecxz
cmps
or
setle
aad
xchg
mov
sbb
lods
shl
sbb
mov
stos
out
cmps
mov
jl
out
imul
fldln2
mov
sar
dec
ret
int
mov
data16
(bad)
mov
cmps
adc
fadd
pop
xchg
xchg
pop
fild
ins
test
stos
movs
(bad)
mov
mov
sahf
hlt
add
dec
push
loope
xor
push
xchg
adc
(bad)
cld
or
inc
dec
inc
adc
xor
mov
out
mov
clflush
jl
pop
mov
in
stos
lahf
dec
jg
aas
add
add
push
mov
pop
pop
outs
retf
fdivr
sbb
neg
push
mov
mov
fbstp
cli
jmp
and
aam
popf
mov
pop
inc
push
jge
movs
sahf
sbb
xchg
add
dec
aas
mov
inc
rcr
xchg
(bad)
jg
add
dec
mov
out
dec
jl
xchg
jnp
jp
fidiv
iret
test
mov
fcomip
leave
popf
add
loop
out
push
loope
out
mov
call
xor
in
pusha
or
mov
out
int
cld
stc
sub
pop
jbe
cmp
hlt
xlat
aad
repnz
pop
test
movs
and
push
enter
aaa
sbb
sbb
xchg
or
inc
mov
add
sahf
xchg
mov
mov
dec
cmps
dec
in
aaa
mov
inc
jmp
or
xchg
loope
fcomp
repnz
sahf
data16
mov
sub
xchg
mov
xchg
or
(bad)
and
(bad)
(bad)
push
sub
imul
dec
pop
ret
sbb
dec
movs
sbb
inc
xor
and
dec
pop
(bad)
cmc
push
in
ret
fsub
push
fimul
movs
sub
arpl
ss
jo
jbe
inc
dec
jg
sbb
pushf
aaa
jb
ret
push
leave
fadd
mov
jmp
jg
retf
adc
loope
ror
out
(bad)
cmp
(bad)
or
nop
xchg
and
(bad)
sti
shl
(bad)
xchg
lds
bound
fs
(bad)
jns
aad
out
add
call
out
shr
jg
adc
lahf
jmp
cmps
iret
dec
inc
imul
retf
iret
inc
and
mov
dec
xor
ins
inc
ins
lock
sbb
outs
fidivr
mov
(bad)
push
sbb
sub
(bad)
rcr
push
loop
pop
arpl
xchg
xor
and
jle
bound
sub
stos
dec
test
cmps
push
add
add
cmp
mov
stos
xor
es
cld
adc
fild
inc
mov
fadd
push
mov
clc
pop
jns
sub
mov
test
mov
cmps
sub
pop
out
(bad)
sub
pop
push
scas
imul
test
pop
jle
aaa
mov
daa
mov
(bad)
sti
fs
fs
pop
fdivr
pop
ficom
and
pop
mov
jbe
std
add
sbb
lea
push
scas
lods
cmp
stc
jbe
in
les
ja
xchg
inc
cmps
adc
dec
shr
pop
mov
add
and
add
ja
cmp
fdivr
ret
jns
clc
adc
mov
push
mov
pop
inc
lea
pop
arpl
das
test
mov
fwait
dec
fimul
js
mov
arpl
loopne
dec
xor
cmps
mov
mov
ins
mov
(bad)
mov
or
sub
in
aaa
(bad)
adc
outs
adc
scas
mov
sbb
daa
fsubr
test
sub
or
inc
dec
mov
pop
lods
cdq
jns
dec
mov
or
outs
(bad)
mov
xlat
pop
aaa
mov
cmp
dec
clc
mov
(bad)
jns
jbe
pop
mov
bound
mov
retf
das
retf
pop
retf
xor
call
or
push
xor
mov
sub
movs
cmps
inc
add
jnp
adc
xor
inc
lds
loopne
lods
outs
add
dec
addr16
push
mov
(bad)
cmp
clc
cmps
push
and
mov
and
call
repz
adc
in
ja
or
and
in
arpl
and
aaa
repz
ja
cli
popa
add
nop
ds
aaa
loopne
aaa
adc
or
or
fnstenv
or
stc
xor
addr16
pop
mov
inc
and
rcl
pop
and
cmp
xor
adc
dec
or
aaa
sbb
lods
jge
movs
out
hlt
test
out
pop
test
and
mov
or
popf
push
mov
arpl
mov
mov
jne
mov
ret
inc
dec
jmp
arpl
int
into
ins
push
ins
cmp
fdiv
ss
outs
mov
ret
push
sub
movs
inc
ret
and
cmp
dec
mov
shl
aad
push
xor
scas
pop
(bad)
jb
ss
retf
xchg
test
jmp
rcr
pop
(bad)
cmp
cmp
adc
and
jb
or
jmp
stos
jno
jno
cmp
dec
dec
or
xor
pop
push
in
xor
and
add
xchg
scas
xlat
test
add
nop
in
adc
xor
push
lods
loop
ds
pop
(bad)
imul
dec
(bad)
mov
mov
sti
add
cmc
xlat
pop
mov
mov
imul
(bad)
pushf
enter
xchg
repnz
int
sbb
or
sbb
std
cmp
dec
push
push
out
lock
arpl
gs
cli
sub
mov
dec
xchg
fdiv
std
xchg
or
add
enter
hlt
jno
mov
idiv
sub
cmp
cmp
hlt
inc
js
inc
test
mov
push
mov
inc
xchg
enter
imul
std
push
dec
(bad)
outs
test
inc
cs
adc
cwde
div
dec
mov
fchs
repz
add
inc
pop
leave
lock
jg
out
pop
add
loop
cs
mov
fstp
mov
mov
dec
mov
xchg
add
icebp
cld
xlat
jnp
mov
and
push
imul
data16
push
pop
inc
test
and
scas
push
iret
pop
add
cmc
or
aaa
jle
mov
rcl
out
movs
rol
aas
(bad)
aam
jl
ret
or
js
jle
xchg
ficom
lods
mov
jmp
jecxz
mov
dec
dec
int3
ins
out
int3
icebp
xchg
cmc
fdiv
mov
sar
pandn
push
fld
aas
add
xchg
push
adc
pop
test
mov
xor
loope
movs
fs
add
sbb
cmps
or
daa
lods
jns
pushf
mov
or
sub
in
mov
xchg
enter
xchg
and
mov
pop
cli
ja
arpl
test
retf
mov
out
adc
(bad)
loope
mov
jle
cmp
pop
loope
cmp
ret
sbb
call
pop
sar
add
sub
xchg
push
call
jle
sbb
pushf
pushf
adc
dec
mov
adc
cs
and
hlt
xchg
std
clc
lods
jns
mov
adc
nop
xchg
iret
cmp
int
fld
out
out
mov
mov
cld
out
mov
shl
xor
xor
jmp
pop
inc
pop
stc
mov
adc
pop
fst
addr16
cmp
mov
loopne
mov
push
out
push
dec
mov
mov
cld
fistp
arpl
pop
(bad)
hlt
or
mov
mov
xor
jbe
add
das
sbb
test
pushf
mov
xor
xor
aam
mov
aas
mul
xor
jl
stc
mov
pop
add
leave
mov
cmps
test
inc
add
xchg
add
ds
test
pusha
out
xor
dec
(bad)
jne
loopne
sub
aas
aad
or
gs
jmp
scas
cli
cmps
(bad)
and
jl
enter
test
ds
push
xchg
push
in
jg
cs
ja
movs
leave
or
shl
pop
mov
aam
scas
or
fimul
xor
stos
mov
and
push
iret
jmp
fist
int3
inc
add
lods
out
or
js
jecxz
(bad)
loop
add
inc
hlt
repz
retf
movs
ret
sbb
pop
pop
jns
int3
inc
(bad)
xchg
mov
sar
or
(bad)
adc
pop
mov
cmp
aam
ss
out
cmp
cdq
test
daa
ds
stos
arpl
stos
adc
(bad)
in
xlat
mov
and
repz
pusha
push
xor
sar
push
add
sub
push
mov
aas
dec
and
pop
test
sahf
lds
outs
hlt
popf
sbb
icebp
shl
sar
add
pop
ja
adc
fs
jecxz
das
icebp
and
mov
push
push
dec
adc
retf
lods
xchg
push
and
inc
lods
xor
addr16
xchg
lds
hlt
inc
out
pop
push
inc
adc
mov
mov
pop
dec
ins
cwde
retf
dec
add
out
jmp
sub
lahf
sub
mov
cmp
adc
push
fiadd
cld
outs
xchg
cwde
lock
ins
repz
movs
repnz
fistp
and
ret
push
retf
fisub
cmp
push
and
jmp
jae
loopne
stos
(bad)
mov
ss
mov
nop
aas
imul
cmp
(bad)
xor
xor
hlt
cmps
mov
jp
mov
into
std
and
dec
(bad)
push
xlat
cmp
mov
mov
xchg
jl
cdq
xor
(bad)
pop
dec
adc
push
mov
add
sbb
jae
js
jno
jp
sti
and
popf
jp
idiv
int3
mov
(bad)
sbb
sti
inc
sahf
rcr
ins
xchg
add
call
frstor
or
(bad)
and
xchg
pop
inc
lock
je
push
push
call
and
repz
das
sub
gs
and
pop
pop
mov
into
sub
into
std
push
retf
hlt
outs
test
or
add
cmp
ror
std
xchg
and
dec
adc
jnp
pop
pop
jae
push
sbb
jae
jbe
hlt
(bad)
push
icebp
loopne
xor
dec
and
mov
int3
outs
sub
mov
xchg
test
fs
fistp
and
xchg
add
ja
jmp
fcomp
out
loop
loope
sbb
adc
dec
and
inc
or
sti
test
mov
call
sub
dec
js
mov
div
test
sbb
popa
fisubr
out
pop
adc
in
imul
mov
loopne
xchg
inc
mov
cmp
push
std
add
rcr
loope
push
scas
mov
popf
pop
test
es
je
push
sub
(bad)
popa
ins
mov
call
mov
adc
mov
cli
out
movs
jecxz
repz
ja
clc
test
imul
mov
mov
mov
fist
out
shl
mov
call
out
cli
test
mov
sbb
mov
movs
pop
test
stos
mov
and
iret
push
cmp
cmp
jmp
sbb
das
adc
mov
lods
push
sbb
dec
shl
std
pushf
in
mov
loopne
xor
or
mov
jp
enter
adc
pop
jp
adc
icebp
cmp
adc
push
pop
cmps
or
fs
mov
xlat
int
cmp
sub
jbe
imul
dec
repnz
aam
inc
lds
mov
sbb
imul
push
mov
sahf
sub
jno
call
push
xchg
cmps
lea
inc
movs
adc
out
mov
pop
arpl
pop
and
mov
jo
mov
xchg
enter
mov
or
fsubrp
pop
cmp
xor
fst
jmp
pushf
push
push
or
push
sub
test
cmp
ror
leave
scas
cmc
std
adc
xchg
jle
hlt
int3
and
pop
and
rol
mov
test
aam
jmp
stc
mov
dec
mov
fisttp
inc
out
loope
adc
ja
push
push
fdiv
jmp
xor
retf
ret
or
fwait
cmp
int
pop
push
out
(bad)
sbb
rcl
paddb
fadd
push
icebp
cmp
mov
sti
xlat
iret
push
or
ss
push
xor
mov
data16
push
ret
dec
(bad)
test
es
cld
xor
dec
les
addr16
cs
add
out
dec
fsqrt
mov
inc
inc
mov
rcl
and
cmp
sar
cmp
mov
test
out
push
xchg
xchg
shr
push
in
sub
sbb
or
stos
cmp
add
bound
dec
push
ficom
push
rcl
jne
and
cmc
pop
pushf
bound
test
scas
stos
sbb
or
mov
push
sbb
cmp
push
repz
dec
xchg
clc
lds
jle
fistp
mov
push
pop
int3
mov
jne
(bad)
stos
not
or
xlat
dec
xchg
fistp
stos
mov
cmc
les
ret
or
adc
mov
pop
loope
bound
cld
pop
xchg
xchg
(bad)
js
cwde
aaa
jbe
cmp
dec
rcl
movs
rcl
or
jne
lahf
mov
xor
into
stos
cmp
call
push
xchg
in
les
jmp
cmps
je
sub
jbe
mov
mov
and
fldl2t
add
data16
ror
push
dec
cld
(bad)
mov
div
and
ror
(bad)
mov
stos
mov
fdivrp
(bad)
lods
pop
push
das
es
pop
and
xchg
xchg
out
iret
nop
pop
enter
pop
cmp
lds
ja
out
dec
mov
cmps
lods
imul
out
enter
and
sub
sub
pop
lds
fs
push
cwde
loope
xor
and
test
loope
jae
popf
imul
std
pop
sahf
les
sub
mov
cmp
mov
sub
inc
lock
fisttp
hlt
adc
xor
stos
cmovb
push
dec
pop
fisub
push
push
scas
cmp
movs
rcr
movs
mov
add
push
adc
or
inc
movzx
(bad)
dec
retf
fld
jne
dec
mov
sub
pop
xlat
in
cmp
aas
push
mov
movs
mov
mov
sbb
into
ret
jne
dec
lds
mov
jb
ins
dec
data16
dec
sub
stc
xor
sub
lods
aas
call
pop
add
inc
add
ds
push
push
cwde
jg
mov
hlt
mov
cmp
adc
mov
test
les
retf
lods
mov
arpl
jnp
and
test
out
retf
inc
hlt
sbb
clc
and
pop
(bad)
fcom
hlt
sub
adc
push
and
(bad)
stc
inc
fimul
(bad)
pop
cmp
mov
idiv
ret
(bad)
loop
jne
imul
adc
ins
cmp
mov
nop
test
add
push
in
(bad)
adc
aas
dec
xchg
jp
xchg
popf
outs
out
adc
test
and
dec
retf
test
lods
fisttp
and
call
mov
push
xor
sar
ds
(bad)
loop
pop
cmp
call
push
movs
cmp
ret
mov
(bad)
pop
mov
repnz
jecxz
mov
and
outs
nop
pop
sbb
(bad)
outs
adc
push
push
sbb
adc
imul
in
push
fcmovne
pusha
inc
jecxz
push
xor
in
pop
mov
mov
and
xchg
inc
pop
push
push
sub
cwde
out
dec
or
jmp
outs
inc
lods
les
and
adc
sti
sar
mov
shl
cmp
jmp
push
les
daa
shl
test
mov
sub
mov
dec
cmp
mov
fs
out
sbb
inc
cmps
mov
push
lds
js
shl
cmp
lods
inc
mov
dec
ret
dec
push
dec
mov
pop
sar
xchg
adc
mov
cs
mov
jecxz
cmp
clc
inc
call
loope
leave
aam
adc
fdiv
sbb
push
mov
enter
adc
mov
loopne
mov
mov
sbb
pop
add
pop
mov
jne
cmps
imul
inc
ret
adc
dec
xor
(bad)
cmps
ds
clc
sahf
stc
adc
popa
adc
into
pop
int3
call
(bad)
jg
mov
stos
es
aam
dec
ret
jae
stos
xchg
cmp
or
cmp
movs
lods
dec
sbb
jb
pop
adc
addr16
jb
xchg
add
jmp
and
push
mov
shl
out
mov
ja
dec
xor
add
fadd
mov
xor
mov
(bad)
xchg
xchg
movs
fidiv
into
shl
dec
xor
inc
in
cmps
push
xchg
mov
or
test
xchg
jmp
aaa
cld
mov
push
push
or
adc
dec
into
int
(bad)
in
sti
inc
mov
retf
loop
loope
outs
popa
and
add
dec
mov
imul
jne
out
mov
dec
push
adc
aas
icebp
cmp
(bad)
lock
mov
mov
lods
ins
pusha
in
inc
aas
add
das
mov
push
jmp
cmc
fdiv
mov
xchg
lea
xchg
fidiv
ins
inc
aad
cmp
stos
push
xor
stos
cmp
fwait
ret
push
out
sub
push
jmp
scas
xchg
or
jle
inc
push
and
aaa
dec
cdq
add
ret
arpl
gs
push
jns
dec
push
dec
test
test
scas
pop
dec
movs
ins
xor
sub
popf
adc
test
xor
arpl
jmp
push
cmp
es
fistp
cdq
mov
lock
push
mov
aam
popa
iret
aad
push
stos
adc
xchg
mov
sbb
sub
sbb
(bad)
jmp
xor
outs
mov
add
lods
cli
pushf
fmulp
pop
lds
les
xchg
cdq
rol
fild
bound
jb
mov
pop
push
aam
aas
pop
mov
mov
mov
xlat
fbld
jnp
pushf
pop
dec
xor
and
or
mov
mov
mov
adc
cli
call
xchg
mov
inc
es
sbb
pop
into
fwait
rol
ret
add
jns
fidivr
pop
in
add
movs
nop
xchg
mov
mov
popf
ss
jnp
out
jne
mov
fdivr
fstp
mov
sub
pop
add
ja
inc
neg
aaa
cwde
addr16
iret
aam
sbb
nop
rol
jl
(bad)
adc
sahf
sti
mov
mov
xor
adc
add
xor
add
(bad)
sti
mov
(bad)
push
cmp
fwait
mov
and
retf
not
xchg
adc
or
aam
movs
into
add
dec
lock
dec
fnstcw
dec
pop
aaa
sar
and
pop
clc
mov
sti
aaa
mov
mov
pop
bound
movs
addr16
xor
cs
mov
fs
gs
mov
fld
adc
movs
pop
cmps
xchg
sbb
sbb
xchg
cmp
shl
cmp
jns
in
add
sbb
aas
outs
adc
gs
xchg
add
loope
in
jns
push
xor
cld
inc
inc
sub
mov
aaa
scas
popa
mov
jnp
and
mov
cld
dec
push
pop
test
ja
repnz
fidivr
add
stos
cwde
xchg
adc
inc
and
and
in
icebp
icebp
cli
gs
mov
in
int3
enter
imul
and
hlt
sub
lahf
jg
jb
xor
mov
ds
test
ja
inc
outs
movs
inc
jecxz
mov
mov
mov
outs
or
mov
sbb
xchg
mov
mov
push
fs
inc
or
jbe
aas
pop
mov
add
mov
jo
js
mov
adc
mov
mov
push
mov
stos
pusha
sar
cs
and
dec
loope
(bad)
push
icebp
pop
aaa
(bad)
and
ret
fadd
mov
outs
mov
nop
je
adc
inc
jbe
aam
fcom
es
sahf
or
xor
call
fwait
scas
adc
out
fild
ins
xor
or
inc
sbb
and
push
imul
jo
call
inc
test
adc
mov
les
dec
clc
mov
pop
sbb
stos
sti
push
lods
call
dec
cmp
fsubr
pop
into
out
inc
sub
mov
jp
push
cmps
mov
pop
hlt
test
dec
inc
dec
aam
js
push
ficomp
mov
cmps
ins
and
je
test
(bad)
dec
cmc
mov
daa
(bad)
lock
mov
fiadd
cmp
out
mov
cmp
xchg
adc
jecxz
mov
hlt
mov
mov
xchg
lods
int
mov
sbb
or
xchg
sbb
adc
sub
fcom
shr
mov
xchg
lea
adc
pop
xchg
pop
mov
in
bswap
imul
adc
data16
stos
xor
push
inc
jae
or
clc
(bad)
int
stos
mov
cmp
sbb
(bad)
mov
xor
cmc
scas
xor
enter
test
pushf
sbb
ds
dec
xchg
stos
pop
(bad)
jne
cmps
mov
int
xor
call
sub
sub
mov
push
loope
hlt
mov
jp
push
pop
jmp
push
scas
mov
(bad)
loopne
ret
mov
mov
ret
iret
mov
jg
shr
je
ret
cmp
push
mov
das
mov
fist
pushf
xchg
scas
dec
mov
ins
jns
inc
rol
jne
jb
mov
mov
idiv
sbb
std
mov
sbb
idiv
adc
jmp
pop
push
stos
nop
js
mov
sbb
inc
fiadd
pop
enter
and
loop
jbe
stos
enter
sub
cs
jmp
(bad)
lock
ins
repnz
sub
aam
dec
push
xchg
add
in
fs
sahf
dec
sub
pusha
push
push
in
(bad)
int
dec
out
mov
adc
daa
int
outs
or
test
aad
xor
dec
xchg
popf
ins
inc
bound
out
xor
mov
adc
gs
enter
mov
int
jge
xchg
loopne
addr16
ds
or
mov
add
cmc
arpl
lods
pop
fwait
push
outs
sti
shl
out
fisttp
iret
test
mov
cmp
(bad)
mov
dec
xchg
lods
cmc
cmp
push
mov
inc
imul
xchg
addr16
das
mov
cmp
stos
xor
pusha
jmp
mov
out
dec
xchg
shl
dec
push
test
or
jmp
pop
sub
scas
mov
push
xor
mov
ror
jae
scas
mov
lods
inc
mov
(bad)
jmp
pusha
pusha
cmp
inc
fistp
sbb
xor
sbb
and
inc
repnz
xor
test
mov
fstp
ins
(bad)
add
hlt
add
dec
scas
add
call
cwde
mov
pop
mov
add
(bad)
scas
int
shr
and
enter
pop
add
aam
fidivr
xrelease
adc
cmps
cmp
lods
mov
scas
(bad)
imul
(bad)
jb
mov
rcl
call
rcr
inc
ror
xor
fisubr
inc
xchg
movs
cmp
ins
pop
rol
mov
sti
movs
mov
adc
mov
inc
hlt
in
dec
ja
push
or
mov
gs
or
cmps
(bad)
adc
and
imul
pusha
or
out
loopne
xor
inc
sar
mov
pop
into
or
xchg
clc
dec
repz
jecxz
retf
enter
mov
(bad)
push
push
fdivp
or
inc
das
aaa
out
leave
loop
fnstenv
xlat
push
jmp
sbb
pop
cs
aam
cmp
stc
nop
imul
add
(bad)
out
sbb
or
inc
dec
pop
dec
push
test
dec
leave
and
fsub
mov
test
cmp
mov
xor
mov
add
addr16
mov
sub
mov
cbw
sub
dec
sub
sub
iret
call
cmp
ret
enter
leave
addr16
add
hlt
adc
popf
pop
outs
arpl
daa
adc
cmc
call
movs
inc
in
cmp
repz
enter
pop
retf
sar
retf
jecxz
ficomp
pop
test
xchg
push
add
das
inc
add
cmps
cmc
push
ret
fcomi
jns
fbstp
repz
sub
pop
xchg
mov
cmp
xor
pushf
push
test
ds
scas
out
pop
mov
push
pop
mov
inc
aaa
js
sti
push
imul
clc
stos
fld
aam
jo
sbb
stos
mov
sbb
inc
fisttp
sub
sahf
fnstenv
inc
loop
in
fwait
dec
cli
stos
push
xrelease
jle
cmps
jecxz
mov
and
scas
arpl
dec
hlt
and
cdq
call
mov
arpl
es
jnp
aam
enter
jae
cli
xlat
(bad)
cli
jecxz
mov
push
(bad)
fst
scas
les
retf
add
add
dec
(bad)
ins
pop
cli
or
ds
pushf
pushf
xor
js
jmp
sar
(bad)
or
les
inc
sbb
mov
push
arpl
push
add
aaa
pop
sbb
ret
(bad)
mov
adc
or
push
out
xor
aas
aas
mov
adc
xchg
in
inc
test
adc
mov
mov
es
stos
pop
dec
sbb
inc
add
ds
push
gs
sub
push
dec
in
jg
and
dec
dec
aas
add
cmps
bound
sbb
inc
scas
fistp
imul
dec
je
push
es
sar
test
or
jmp
fsub
adc
in
inc
xchg
jg
shl
or
or
fisub
xchg
aam
jp
cmp
aad
sub
push
repz
pop
pop
xchg
outs
es
out
loope
add
arpl
rcl
aas
dec
ret
jmp
test
(bad)
not
pop
mov
dec
imul
jbe
das
add
adc
test
add
adc
sub
mov
les
dec
jmp
xor
(bad)
fwait
mov
repnz
aas
push
jno
in
sbb
xlat
in
fcomp
fsub
jecxz
push
xchg
push
in
retf
xor
inc
jbe
jb
int3
jmp
add
and
xchg
sbb
mov
dec
add
repz
test
std
rep
icebp
dec
xchg
xlat
pushf
push
adc
and
lock
jo
ss
jnp
out
jge
push
fdivr
jne
or
push
xchg
movs
cmps
mov
fwait
xor
ds
add
lods
jl
pop
ss
xlat
cli
push
in
push
jl
jb
ffree
mov
dec
lds
je
test
jnp
pop
rcl
inc
mov
out
mov
jae
inc
(bad)
stc
jle
dec
inc
or
retf
jecxz
lock
sub
and
pop
and
in
cmp
int3
cmp
add
add
mov
les
add
stos
jne
pusha
add
cld
cmp
repnz
fsub
stos
sbb
popf
rcl
cdq
add
test
ret
ret
inc
int3
add
in
mov
jno
movs
movs
push
int3
mov
movs
inc
and
mov
mov
adc
pop
mov
jl
sub
cmp
fsub
int3
add
push
addr16
push
push
mov
test
(bad)
cs
sbb
sbb
cwde
(bad)
xchg
pop
aam
aaa
mov
ret
lahf
sbb
mov
aad
bound
xchg
jo
mov
xor
pop
jl
adc
sti
in
rcr
out
mov
mov
mov
dec
push
xchg
adc
pop
adc
inc
dec
pop
call
inc
add
out
jne
data16
jbe
pop
cld
xchg
int
fucomi
cdq
xor
sub
mov
cwde
in
call
ficomp
adc
push
jle
mov
xchg
dec
inc
cmp
int
in
imul
ror
xor
je
shr
pop
loope
ins
enter
adc
or
imul
mov
into
aad
add
into
sub
jo
ffreep
jno
frstor
icebp
xchg
cmp
sub
inc
add
pop
mov
xor
pop
or
mov
mov
sar
lods
shr
out
(bad)
fsubr
mov
push
push
jp
inc
or
pop
and
pop
sbb
sub
push
lods
je
xchg
int
adc
mov
sahf
js
mov
ret
adc
lock
sub
or
ficomp
pop
pop
cmp
sub
scas
xlat
iret
cmp
or
out
or
and
push
loope
imul
bnd
and
movs
xchg
mov
in
cmp
xor
add
das
out
outs
xchg
je
xchg
mov
sub
sti
push
ins
jbe
cs
cmp
outs
popa
jo
cdq
xor
outs
enter
and
movs
ja
xchg
sti
jle
(bad)
mov
mov
or
bound
mov
data16
jo
idiv
daa
inc
adc
jns
xchg
dec
in
push
fcomi
mov
or
mov
mov
jne
ins
or
scas
cmp
test
movs
clc
imul
fwait
mov
inc
push
jns
pop
dec
sub
and
into
ror
hlt
dec
loop
inc
cmp
bound
loope
data16
sub
add
jmp
aas
xor
gs
fisubr
call
test
jb
cmp
pop
pushf
loop
cmp
add
and
in
dec
jecxz
push
arpl
mov
iret
xor
mov
inc
add
or
out
dec
pop
out
add
adc
retf
mov
in
adc
sub
sub
dec
sbb
or
mov
call
xor
mov
in
pop
sahf
stos
or
mov
cwde
std
push
jecxz
(bad)
jmp
cmp
movs
mov
mov
xchg
sti
or
cmp
popf
scas
(bad)
cmp
mov
pop
xchg
push
call
ret
sbb
adc
cmp
and
sub
mov
call
mov
inc
ins
jp
inc
pop
mov
dec
movs
sbb
std
push
pop
idiv
jbe
adc
in
popf
mov
and
jo
and
jle
jo
retf
pop
nop
sub
(bad)
in
adc
(bad)
jae
mov
mov
fsub
ror
fsubr
test
xor
test
pusha
loopne
sbb
ins
gs
in
addr16
add
test
push
or
push
arpl
int3
call
jmp
inc
stos
pop
mov
sub
xor
leave
push
cs
mov
lahf
push
test
jmp
pop
adc
sbb
pop
adc
imul
cs
ins
mov
dec
push
movs
push
(bad)
push
cmp
push
(bad)
pop
jmp
xor
inc
leave
mov
jmp
call
arpl
in
and
cmp
xor
out
lahf
mov
jp
icebp
sub
cld
icebp
cdq
dec
mov
lds
jmp
mov
xor
mov
retf
ins
js
js
and
mov
inc
cs
jbe
cmp
data16
cmp
out
and
mov
shl
fild
aas
movs
cdq
nop
repnz
les
iret
xchg
and
stc
sbb
clc
cld
imul
imul
scas
cli
dec
xchg
(bad)
popa
xchg
mov
mov
jno
iret
call
fwait
cwde
pop
mov
lds
jae
mov
cli
add
ret
mov
mov
inc
mov
std
js
outs
sbb
inc
jnp
push
adc
mov
sbb
push
or
sub
pusha
fadd
pop
mov
mov
sub
fistp
es
loop
push
pop
inc
mov
mov
cdq
imul
rcr
pop
mov
(bad)
xor
mov
cmps
dec
xchg
test
rcr
jb
jg
lock
push
jle
push
dec
push
sbb
mov
xchg
mov
shl
jne
iret
jle
sbb
xor
idiv
mov
(bad)
xchg
in
rcl
sar
pop
mov
pop
jne
repz
cmc
xlat
fldenv
cdq
mov
dec
adc
loopne
ins
and
mov
popa
inc
scas
pop
sbb
xchg
jmp
in
mov
cdq
or
(bad)
(bad)
mov
fnsave
movs
adc
enter
call
addr16
(bad)
stc
dec
test
and
mov
stc
lods
ret
test
jne
push
add
shl
popa
sbb
cmps
mov
inc
fs
retf
inc
xor
jbe
xchg
leave
mov
push
mov
mov
or
cmp
(bad)
dec
mov
inc
inc
pop
sbb
add
les
inc
push
gs
jno
bswap
enter
cmp
fiadd
jle
into
(bad)
or
add
lods
imul
movs
aad
pusha
xor
int3
jmp
dec
lahf
in
dec
std
adc
out
pop
cmp
ret
mov
mov
jmp
adc
push
xor
pusha
xchg
movs
sub
or
xchg
das
mov
xor
mov
dec
push
jecxz
and
mov
adc
and
sub
ds
adc
call
mov
push
inc
pop
adc
stos
fld
dec
div
mov
mov
sbb
cmp
sub
dec
int3
inc
in
lods
test
daa
pop
(bad)
mov
retf
mov
in
addr16
mov
mov
dec
js
dec
jmp
inc
mov
jo
sub
push
call
or
mov
lahf
push
lods
ja
arpl
xor
fnstcw
fwait
gs
bound
in
adc
jns
mov
ds
xchg
or
mov
and
cli
fwait
dec
jae
out
pop
ror
sbb
sbb
popa
cmp
mov
jae
sub
jae
cmp
lods
aaa
dec
inc
ja
fbstp
mov
mov
les
cwde
pushf
dec
dec
fld
ja
and
xchg
aam
lds
call
or
call
cli
imul
jl
jl
fimul
mov
and
mov
mov
pop
pop
inc
pusha
mov
ret
push
push
add
push
loop
jmp
shr
or
jmp
pop
call
dec
jg
pop
movs
xor
xor
aad
add
inc
movs
mov
leave
in
retf
push
call
push
inc
aaa
(bad)
jp
inc
mov
cmps
fisttp
mov
loope
fld
and
dec
aaa
loope
arpl
cmp
cdq
jno
mov
pop
push
(bad)
cmp
movs
cmc
inc
adc
les
mov
jp
cmps
and
adc
imul
mov
loopne
repz
data16
pop
aad
cmp
lods
call
push
or
out
vhaddps
push
mov
push
and
not
stc
adc
cmp
loope
xor
xchg
and
sbb
cmps
test
jae
inc
mov
call
sbb
or
jle
cmp
xlat
mov
jbe
jae
or
mov
and
aas
loope
jns
enter
icebp
xor
fldenv
aaa
imul
fadd
mov
inc
pop
adc
addr16
out
repnz
outs
xchg
mov
fidiv
out
aad
retf
div
xchg
jmp
lods
mov
into
mov
(bad)
test
mov
jo
push
leave
mov
jb
or
or
xchg
xor
xor
jmp
(bad)
sub
retf
mov
frstor
icebp
rcl
mov
inc
dec
addr16
stos
cmp
pushf
or
das
adc
inc
aad
mov
sub
arpl
retf
stos
xchg
not
pop
mov
mov
jge
mov
lea
out
mov
and
popf
fcom
sbb
ja
inc
sti
test
fcmovnb
xor
mov
nop
jnp
pop
and
imul
dec
sbb
inc
test
std
pop
inc
ror
test
add
hlt
inc
mov
dec
dec
inc
mov
ret
adc
pop
pop
stos
mov
mov
jmp
(bad)
cli
pop
(bad)
sub
nop
nop
sub
push
pop
push
xchg
ret
dec
ja
movs
cmp
int3
inc
add
cmp
jbe
xchg
xchg
bound
imul
test
cmps
mov
jae
inc
dec
sbb
mov
inc
xchg
aaa
xchg
cmp
mov
fwait
xchg
and
mov
mov
xchg
retf
in
pusha
add
sub
es
mov
out
pop
dec
enter
jp
mov
dec
out
sahf
push
jmp
stos
dec
pop
pop
adc
(bad)
push
pop
rol
fnstcw
rol
into
idiv
mov
ret
aaa
inc
mov
popf
hlt
mov
mov
jmp
sub
add
jmp
pop
(bad)
pop
iret
dec
mov
xchg
pop
pushf
loop
push
ss
pushf
add
loop
hlt
sbb
pop
jbe
jg
inc
and
mov
adc
scas
in
xchg
dec
mov
mov
xor
enter
xchg
jae
cdq
adc
or
xlat
or
das
xor
shr
and
clc
mov
xchg
add
inc
lods
imul
cmp
push
ret
add
push
addr16
data16
repz
shr
push
arpl
pop
and
mov
sbb
xchg
or
fstp
mov
add
pusha
in
fnstcw
push
push
mov
xchg
nop
popa
ffree
int3
jecxz
cmps
cmps
mov
fstp
jg
dec
nop
xchg
into
sub
sbb
add
jmp
pop
jmp
inc
shr
jae
xor
aam
mov
fs
(bad)
bound
and
add
fidiv
shl
inc
push
out
pushf
inc
fimul
pop
and
dec
or
gs
jns
mov
cmp
bound
xchg
retf
mov
mov
pushf
xor
leave
fiadd
test
push
mov
push
cmp
out
and
in
inc
add
mov
fstp
xor
jb
sub
call
in
hlt
or
lahf
dec
out
pop
test
cmp
test
xor
pop
jmp
and
push
jnp
xlat
shl
(bad)
call
cmp
pushf
dec
or
mov
test
out
and
lahf
xchg
std
sysexit
mov
gs
dec
clc
inc
pusha
sbb
push
jmp
ret
adc
or
push
mov
jnp
pop
xchg
fstp
lahf
cmp
fidivr
jg
xor
pop
inc
xchg
add
dec
into
push
fadd
ror
push
int
aam
les
sbb
xchg
jb
pop
rcr
div
daa
hlt
push
mov
mov
cmp
cmp
into
or
fidivr
repz
add
shl
fst
push
mov
push
add
call
rol
xor
inc
inc
pop
mov
test
push
ds
out
or
pop
stos
test
pop
out
and
pusha
ret
hlt
or
shl
iret
xor
lods
push
(bad)
scas
cmc
dec
cmp
pop
add
sub
nop
mov
add
jmp
loop
sbb
retf
ror
ins
sub
xchg
add
mov
or
jne
jge
in
cld
cmp
out
mov
xchg
movs
xchg
(bad)
jg
ins
mulps
mov
push
inc
pop
xchg
sti
outs
mov
or
retf
mov
(bad)
in
inc
mov
mov
push
and
sbb
div
add
or
add
xchg
dec
mov
lods
mov
movs
push
fdiv
xchg
ds
outs
xchg
sub
shl
ins
shl
jmp
(bad)
xchg
loope
dec
push
imul
mov
ja
and
stc
mov
jb
xchg
pushf
(bad)
sbb
fcom
pop
ss
xchg
pop
jl
mov
aam
dec
mov
sub
mov
loope
es
out
retf
mov
xchg
cmc
or
(bad)
in
mov
in
mov
mov
adc
out
mov
mov
inc
lock
add
cmp
sbb
xor
dec
cmp
(bad)
aad
mov
xchg
call
mov
(bad)
sbb
xor
push
fisttp
bound
mov
iret
pop
ror
mov
cmp
pop
icebp
jmp
dec
mov
xor
pop
add
jb
cdq
(bad)
into
push
les
iret
push
int3
bound
int
xchg
jbe
loopne
rcl
jo
and
pusha
cs
imul
test
inc
repnz
and
inc
mov
lds
retfw
xor
(bad)
int
add
ins
xchg
mov
mov
sar
(bad)
jne
arpl
and
fcom
inc
sar
loopne
add
icebp
mov
add
pop
mov
lea
cmp
fsin
je
pop
ror
sar
fmul
fs
pusha
push
(bad)
fadd
dec
push
sar
pop
(bad)
data16
sbb
test
das
sub
retf
int
mov
sahf
enter
mov
mov
fistp
hlt
enter
enter
les
iret
and
pop
dec
pop
mov
jmp
dec
imul
adc
lahf
lds
js
jp
int3
adc
pop
mov
cmp
cmp
inc
fld
xchg
mov
lods
sub
push
jmp
xchg
jmp
or
adc
xchg
cwde
xor
pop
fsubr
cmps
pop
dec
stc
rol
(bad)
test
xor
scas
or
dec
adc
test
lahf
push
and
xchg
xchg
add
xchg
push
(bad)
push
jle
scas
in
sub
inc
test
cmp
nop
xchg
dec
iret
stos
jmp
cmps
js
cs
adc
xor
fmul
mov
call
sbb
(bad)
sar
popa
sahf
sbb
cld
adc
test
outs
mov
in
inc
or
(bad)
mov
int
mov
xor
or
test
adc
addr16
jp
out
shr
(bad)
jns
ja
mov
xchg
xchg
outs
jge
or
(bad)
adc
data16
sub
leave
and
sbb
popa
loopne
scas
add
fwait
iret
or
call
add
test
addr16
fldl2t
rcl
sub
in
and
mov
nop
leave
rol
jb
mov
cmp
xchg
jo
in
xchg
test
dec
inc
cmp
inc
cmp
jnp
faddp
leave
stos
push
cmp
fist
fdiv
push
jbe
fadd
inc
sub
inc
inc
jge
inc
(bad)
ds
pop
add
xor
bound
(bad)
xchg
ror
shl
cmp
mov
cmp
add
mov
scas
dec
sub
sar
mov
sub
shr
and
fnsave
cmp
add
dec
sbb
mov
pushf
int3
jge
test
xchg
(bad)
jmp
cmp
mov
cwde
pop
shl
adc
inc
and
push
movs
mov
cmps
and
sub
jecxz
idiv
push
mov
xchg
out
xchg
and
lock
jbe
ds
push
fs
jg
mov
inc
sbb
mov
dec
sbb
cmp
sbb
ret
xor
mov
nop
retf
push
push
rcr
test
pop
popa
movs
div
stos
fsub
mov
adc
sub
sbb
pushf
pop
jb
cs
jmp
pop
pop
test
gs
mov
xchg
sti
lds
and
or
mov
cld
pop
push
push
fs
(bad)
es
stos
and
inc
shr
adc
jp
call
jns
add
sbb
rol
xchg
lahf
adc
mov
push
shl
sbb
xlat
inc
fsub
mov
lods
lods
push
push
in
(bad)
call
leave
das
and
int3
push
mov
shr
loope
je
faddp
xor
mov
xchg
cdq
xchg
sub
cmp
sub
dec
sbb
into
and
pop
and
adc
push
(bad)
and
mov
(bad)
push
fsubr
mov
push
loope
jnp
ins
loop
or
mov
pop
test
jmp
and
mov
mov
jmp
and
out
sub
mov
jecxz
pop
hlt
mov
test
push
inc
jno
mov
push
scas
adc
retf
fld
mov
adc
icebp
retf
call
in
xor
call
in
icebp
xchg
repnz
adc
push
mov
movs
loop
sbb
shr
xchg
mov
js
mov
push
fnstsw
ss
push
adc
and
sub
mov
sbb
mov
aas
enter
sbb
pop
jb
mov
ja
mov
(bad)
cmp
fstp
sbb
adc
jg
cdq
mov
add
mov
jecxz
aam
dec
retf
mov
imul
and
xchg
lahf
mov
fmul
mov
cmp
fucomi
aaa
jns
mov
aaa
push
push
sub
xchg
push
push
jb
ja
adc
or
xor
pop
in
cmp
mov
es
inc
mov
in
jg
pop
jmp
ja
scas
sahf
dec
sbb
lea
inc
and
push
arpl
inc
sub
mov
pusha
pop
dec
call
mov
clc
inc
shl
jo
(bad)
rol
push
out
and
scas
mov
fcmovbe
(bad)
aad
mov
adc
sar
pop
rcr
push
adc
ss
push
loope
out
inc
rcl
jmp
rcl
ins
outs
movs
dec
(bad)
call
out
and
aaa
or
jmp
movs
cmp
popa
xchg
pop
stos
shl
fs
mov
test
and
std
std
scas
pop
(bad)
jl
out
jmp
cmp
movs
hlt
mov
adc
push
retf
cs
retf
outs
add
xchg
enter
aad
sti
cmp
inc
mov
stos
test
jne
pop
and
(bad)
popa
or
cmps
add
and
fstp
cmp
pushf
add
cmp
dec
loopne
adc
cmove
ror
dec
dec
mov
retf
add
mov
sbb
xchg
loopne
leave
ret
addr16
or
out
sti
(bad)
fadd
imul
or
stos
push
ror
and
(bad)
mov
push
fcompp
cwde
add
repnz
jo
sub
inc
sti
daa
popa
aas
test
mov
aas
dec
retf
ficomp
int
jmp
jne
cmp
inc
add
pop
xor
and
in
ret
ja
jmp
into
pusha
in
cmp
call
or
(bad)
adc
sub
or
dec
pop
dec
sbb
dec
inc
fdivr
xchg
unpckhps
jp
addr16
xchg
imul
jmp
mul
sub
gs
pushf
test
add
cmp
mov
call
test
dec
sbb
popa
dec
xchg
loope
pushf
aaa
adc
dec
into
cmp
xchg
in
cmps
or
push
out
loopne
(bad)
aad
xor
pusha
test
cmp
jle
xor
stc
jbe
cmp
inc
dec
mov
add
cmp
adc
sar
in
daa
dec
js
iret
jo
mov
xchg
inc
mov
dec
pop
inc
or
scas
inc
xchg
ja
push
scas
jg
xchg
xchg
jmp
stos
inc
push
cld
and
retf
xchg
(bad)
jl
bound
adc
pop
in
ficom
or
(bad)
mov
add
ins
fld
cmp
fs
shl
inc
lods
movs
les
ins
dec
xor
dec
and
cmp
clc
inc
ror
(bad)
repnz
in
push
mov
and
std
enter
scas
cmp
nop
sbb
xchg
xlat
push
or
inc
jae
sub
(bad)
jp
adc
(bad)
and
fsub
push
stos
adc
call
ror
out
cmp
imul
fcomp
std
pop
cmp
mov
in
daa
cmps
xor
daa
or
pushf
sahf
in
ret
jecxz
aas
xlat
inc
push
out
aam
into
xchg
mov
and
adc
in
jl
mov
ins
fnstenv
cli
int3
arpl
cmp
in
xchg
fdiv
call
dec
popa
mov
mov
aam
or
push
dec
std
popa
pop
add
jb
loopne
rcl
dec
imul
mov
ds
mov
pop
(bad)
mov
and
mov
mov
jns
lods
add
ficomp
and
pop
pop
in
test
dec
sub
or
leave
and
inc
cli
stc
pop
popf
std
dec
push
je
jp
push
mov
jb
test
stos
(bad)
xchg
mov
push
ret
loopne
xchg
xor
jg
mov
mov
cmps
rol
push
or
sbb
(bad)
sub
not
je
pop
or
adc
or
cmp
out
and
rol
pusha
cmp
rcl
cmps
inc
push
push
cmp
and
jmp
jmp
sub
inc
mov
stos
stc
add
push
jg
scas
mov
cwde
mov
daa
pop
adc
pop
or
push
mov
test
jb
fbld
fisttp
jne
ss
retf
lea
in
cmp
add
call
cs
ins
inc
test
jl
sahf
mov
call
dec
(bad)
call
retf
movs
mov
inc
stos
repz
jmp
sbb
xor
jne
sbb
adc
lods
mov
fdivr
(bad)
mov
and
push
cli
popa
test
pop
mov
mov
sub
dec
cmps
sbb
iret
mov
data16
sbb
xor
sti
push
sub
(bad)
push
daa
and
adc
push
frstor
add
cmp
xor
adc
mov
lock
ins
fisubr
or
push
pop
(bad)
pop
sub
inc
rcr
add
pop
rcl
push
lahf
push
inc
push
inc
push
out
les
fld
mov
jnp
test
scas
test
and
push
or
retfw
pop
sbb
mov
inc
jo
jmp
pop
push
xor
ins
repz
lock
mov
inc
mov
push
or
push
dec
xor
repz
inc
cmp
(bad)
mov
mov
ret
mov
xchg
aaa
pop
push
stc
jecxz
jo
xor
mov
int3
sub
in
icebp
stc
rcr
or
hlt
cmp
dec
cmp
jo
or
or
and
shl
and
imul
cmp
aad
into
shr
js
movs
mov
sub
lahf
sbb
inc
adc
inc
mov
mov
push
outs
adc
push
adc
jecxz
mov
movs
scas
cmps
outs
test
push
(bad)
jecxz
addr16
pop
or
jbe
idiv
int3
xchg
or
fs
inc
je
push
es
outs
arpl
stos
jle
es
xor
out
mov
dec
mov
sub
cmc
sbb
aad
sub
data16
jmp
out
imul
int3
cmp
push
repz
fcomi
int
adc
or
mov
ins
rol
popf
jb
pop
enter
cmps
std
lahf
test
div
cld
xor
pushf
movs
out
mov
in
mov
xor
mov
dec
lahf
icebp
pop
shl
and
scas
mov
xchg
push
icebp
ds
pop
jb
xacquire
sbb
push
lock
sub
(bad)
(bad)
lods
pop
aam
jge
shr
ficomp
in
jmp
(bad)
or
pop
jne
jo
loop
adc
scas
mov
mov
push
mov
test
aas
out
icebp
cli
addr16
sub
pop
cmp
enter
xor
in
and
dec
mov
aaa
adc
mov
sar
mov
add
inc
pmullw
cmpxchg
adc
push
mov
fsubr
push
stos
xor
lahf
inc
jp
mov
cmp
dec
jno
(bad)
loopne
jo
mov
shl
seta
jne
idiv
inc
ficomp
fdivrp
cli
jl
sub
out
(bad)
fisttp
in
retf
(bad)
cmp
dec
fsubr
lods
mov
les
dec
sub
xor
cmps
xor
hlt
or
outs
ret
xchg
aaa
and
mov
pop
jle
jle
jb
jmp
and
sti
stos
mov
jge
mov
lock
in
cmc
mov
jb
pop
xor
sub
mov
in
(bad)
and
sbb
out
call
fs
pop
mov
gs
outs
or
jns
test
mov
cmp
scas
gs
inc
xchg
adc
into
(bad)
xor
gs
cmps
push
adc
retf
lods
push
les
test
sahf
dec
dec
test
aaa
inc
jns
push
inc
xchg
dec
mov
loop
jecxz
sbb
mov
xchg
cmp
(bad)
adc
mov
int3
inc
cwde
and
fdiv
stos
mov
sub
or
(bad)
(bad)
jb
das
cmp
pop
push
adc
rol
sar
retf
pop
mov
imul
gs
idiv
and
pusha
xchg
push
cmp
xchg
jno
test
cmp
sub
mov
scas
sar
lock
fild
add
(bad)
mov
(bad)
retf
xor
jmp
jbe
inc
push
and
lock
and
cs
pop
rcr
aaa
fiadd
lds
fdivrp
mov
sbb
push
cli
dec
mov
mul
nop
(bad)
sub
iret
pushf
add
pusha
lods
inc
arpl
dec
push
or
or
cmp
xchg
pop
(bad)
or
leave
xor
(bad)
inc
leave
cld
push
loop
mov
das
add
sub
sbb
mov
add
scas
dec
dec
sbb
shr
std
cmp
cmps
mov
pop
adc
dec
and
(bad)
sar
mov
push
or
or
repnz
(bad)
test
cmp
ror
dec
enter
popa
mov
adc
mov
jle
enter
fwait
xor
inc
mov
ror
and
cmps
imul
fiadd
rcl
int
or
sub
cmps
push
dec
push
jbe
data16
sub
call
shl
pop
adc
and
mov
xchg
aaa
or
aam
pop
stc
and
xlat
loop
jo
cmps
jnp
cmp
xchg
into
sbb
and
test
xchg
add
add
(bad)
loopne
repz
fisub
test
neg
push
and
pushf
(bad)
dec
fs
test
pop
cwde
(bad)
mov
jmp
and
stc
scas
ja
in
inc
mov
dec
dec
and
fwait
cmp
int3
mov
pusha
jne
bound
das
and
fsubr
pop
cmc
xor
fwait
sbb
pop
fs
add
inc
or
xchg
and
in
and
mov
mov
call
loope
push
daa
and
push
sub
fnstcw
or
mov
push
add
sub
add
js
leave
xchg
xchg
or
daa
enter
mov
popa
adc
xchg
mov
or
mov
repz
test
mov
xchg
jge
xchg
mov
cmp
and
rcr
in
add
mov
jne
sbb
arpl
and
out
(bad)
out
arpl
out
inc
cmp
sbb
and
bswap
xchg
xchg
test
scas
dec
mov
xchg
mov
sahf
test
and
xchg
sub
(bad)
adc
jmp
mov
stos
popa
std
add
push
lods
loop
leave
xlat
fisub
div
or
aad
movs
cmp
daa
jl
mov
daa
push
ret
retf
out
loop
fcomp
pop
add
ss
xlat
push
push
jb
xor
add
int
stos
nop
mov
xor
sub
push
adc
jecxz
dec
bsr
pop
xchg
mov
pop
mov
clc
sbb
mov
push
and
int3
(bad)
jo
push
call
jmp
add
ins
push
dec
ret
inc
lahf
adc
cmp
aas
clc
sahf
shl
call
xor
cmp
jo
mov
call
push
addr16
ret
js
outs
xor
mov
je
xchg
xchg
push
lds
loope
jne
dec
data16
xchg
ja
sbb
aas
jbe
and
pop
(bad)
fmul
pcmpeqb
aas
mov
and
stos
push
pop
jmp
fsub
int3
arpl
adc
cmc
in
adc
add
dec
aas
dec
ins
mov
loopne
push
inc
adc
or
and
xor
iret
push
out
daa
sub
lods
xor
xchg
fs
sbb
in
inc
popa
pop
cmps
mov
adc
arpl
add
mov
shr
inc
sbb
adc
cmp
(bad)
mov
mov
sti
lods
ins
lock
shr
lods
push
sub
pop
enter
ja
test
repz
ror
push
sahf
or
call
imul
outs
addr16
xor
nop
stos
adc
pop
push
xor
mov
xor
popa
ds
push
pop
ret
sbb
test
push
popa
jno
xor
mov
xor
xchg
inc
mov
xor
iret
loop
mul
push
dec
ret
xchg
mov
jne
dec
xchg
std
cmp
outs
xchg
mov
or
pop
and
and
retf
pop
call
aas
inc
fidiv
aas
mov
inc
mov
test
or
popf
fs
mov
adc
loopne
sbb
retf
pop
fmul
push
mov
sar
and
lds
xor
push
add
mov
ss
mov
(bad)
cmp
cmp
jmp
mov
cmc
push
mov
js
out
mov
xchg
lock
out
ficomp
or
jae
pop
push
leave
icebp
cmps
sbb
cmc
clc
push
mov
lods
popa
jg
retf
inc
in
jge
lahf
or
pop
mov
fs
xchg
in
shr
test
scas
inc
mov
jne
add
enter
inc
dec
ror
hlt
and
pop
(bad)
out
and
call
pop
(bad)
fild
pop
mov
and
push
dec
ds
or
dec
and
or
imul
ja
push
jmp
out
inc
out
pusha
xor
inc
iret
add
clc
xor
add
and
cmps
and
jle
adc
push
add
xchg
mov
in
and
inc
push
popf
out
pop
out
jg
dec
(bad)
hlt
pop
out
js
add
add
pop
push
mov
int3
push
inc
fstp
ja
mov
loop
out
lahf
test
or
and
mov
scas
lods
movs
mov
bound
scas
inc
je
or
cmp
popa
mov
cdq
push
or
dec
rcr
dec
pusha
or
(bad)
repnz
inc
rol
in
aaa
das
imul
mov
je
jbe
aas
sbb
sub
loop
push
pop
repnz
sub
out
mov
mov
or
adc
inc
ins
sub
adc
test
js
ins
lods
mov
jmp
in
push
sub
test
jns
xlat
mov
or
mov
push
jno
dec
and
mov
push
jp
xor
pusha
jmp
dec
(bad)
sahf
rcr
jns
sbb
fld
cwde
cld
push
xor
add
or
push
push
je
inc
(bad)
push
aaa
push
pop
icebp
mov
mov
xchg
dec
rol
or
jns
cmp
lods
inc
dec
pop
push
mov
add
leave
popf
aam
mov
mov
dec
xchg
dec
adc
addr16
jge
aaa
pop
mov
push
jp
fcmovnbe
adc
sub
(bad)
icebp
pop
push
dec
mov
push
cmc
mov
(bad)
jb
aas
(bad)
mov
inc
cs
fstp
ret
pop
sub
jb
push
xchg
jmp
add
add
jae
mov
iret
jecxz
mov
xchg
mov
push
jnp
add
sub
sti
icebp
ret
jne
je
mov
mov
and
xor
mov
nop
jle
jns
leave
lock
in
in
lds
popf
loope
jno
mov
jecxz
ror
out
jne
add
cmp
icebp
sahf
cmp
inc
mov
fidiv
push
adc
pushf
test
add
dec
(bad)
push
inc
and
test
mov
leave
pop
inc
mov
int
test
mov
outs
cdq
rcr
test
xor
sbb
mov
test
leave
rcr
mov
jecxz
lds
imul
or
int
int
jmp
jae
(bad)
dec
adc
push
xor
repz
mov
ds
pop
push
adc
daa
jmp
jle
mov
imul
push
mov
int
cmp
jle
sahf
(bad)
imul
bound
(bad)
xchg
jo
lods
bound
jns
adc
inc
mov
jg
mov
cmovo
push
push
push
(bad)
fist
mov
clc
push
push
jmp
shl
out
popf
ja
pop
jge
(bad)
cmp
jmp
or
push
mov
sar
sbb
cmp
movs
inc
sar
mov
retf
rcl
mov
loopne
in
lds
push
xor
mov
lods
adc
cmp
xchg
mov
sub
and
fnstcw
(bad)
test
das
mov
scas
jg
dec
test
inc
imul
fnsave
sbb
and
ss
imul
sar
bts
sar
pop
setg
aad
lods
mul
sub
gs
ret
inc
(bad)
dec
cmc
iret
jo
(bad)
sti
push
aad
movs
ds
xchg
pop
shl
sub
or
dec
int3
movs
stos
cmc
in
pop
add
ret
iret
mov
test
cmp
and
(bad)
mov
mov
rep
jecxz
out
inc
bound
pop
into
mov
and
cmps
cmp
pusha
cs
cmp
mov
in
js
pop
pop
nop
inc
mov
mov
fcmovb
push
leave
pop
sbb
sar
movs
pusha
ins
pop
loopne
push
call
cs
xor
movs
or
inc
adc
out
mov
cmps
push
dec
mov
add
les
mov
dec
xchg
mov
sub
and
sti
jp
xchg
add
(bad)
fnstcw
xor
push
fild
pop
cli
and
rol
mov
fsubr
cli
or
fcmovu
jmp
adc
and
add
(bad)
test
ror
push
in
pop
sti
pushf
in
mov
or
mov
jle
add
or
mov
sbb
sub
pop
nop
xchg
pop
mov
mov
and
fwait
jge
in
mov
cld
aam
push
mov
sbb
dec
and
retf
mov
lods
gs
test
mov
mov
jmp
push
cld
or
xchg
test
add
mov
aam
jp
pop
adc
jmp
mov
jmp
mov
push
xchg
and
in
dec
shr
inc
adc
xchg
push
aad
rol
imul
mov
arpl
mov
ins
jo
jb
jmp
push
jg
inc
jo
leave
mov
push
mov
xor
xchg
push
cwde
push
xor
fcomp
xchg
cdq
int3
call
xor
mov
lahf
adc
pop
jbe
aam
popf
stos
in
add
outs
push
inc
sub
jecxz
mov
or
xor
imul
test
pop
xor
cmp
jmp
std
(bad)
imul
jmp
fstp
repz
inc
adc
and
gs
retf
les
mov
int3
fwait
into
pop
xchg
mov
dec
pushf
adc
dec
retf
xchg
inc
dec
lods
cwde
inc
sub
pop
arpl
adc
mov
popf
sub
xchg
js
push
test
loop
xor
cmp
mov
out
leave
mul
jne
ins
cmp
mov
mov
pop
mov
lods
(bad)
jns
jg
pop
leave
adc
mov
and
cdq
dec
jnp
and
add
sub
cli
and
xchg
xor
ud2
push
out
ror
scas
push
mov
ret
outs
xchg
mov
jmp
xor
out
dec
xchg
and
jmp
fild
ds
and
pop
inc
repnz
jne
add
pminsw
out
mov
cmp
mov
mov
jmp
jmp
idiv
dec
scas
sbb
mov
push
and
ins
xor
push
mov
cs
aaa
jl
(bad)
xor
das
js
fld
and
adc
je
imul
xor
std
imul
data16
test
daa
push
fmul
stos
dec
inc
out
lock
fwait
mov
mov
push
inc
pusha
mov
rcr
inc
dec
(bad)
dec
das
rol
mov
bound
sbb
sahf
dec
hlt
test
popa
(bad)
movs
push
and
cmp
loop
mov
data16
push
aas
jle
dec
and
mov
test
cmp
jmp
call
mov
in
add
adc
pop
inc
add
addr16
sbb
xchg
inc
(bad)
cli
add
push
cmp
pop
or
sub
fild
jle
popa
lock
or
push
test
ret
stc
add
jmp
jb
inc
and
lds
sub
cmp
inc
outs
js
out
cwde
sbb
stos
jae
addr16
mov
jle
gs
jecxz
test
and
xor
pop
call
jb
or
sub
inc
add
mov
mov
mov
mov
push
sub
dec
cmp
sbb
dec
or
aaa
(bad)
pop
inc
aaa
mov
push
dec
out
mov
pop
xchg
stc
fidiv
nop
test
into
nop
cdq
adc
cs
inc
push
sbb
xor
sbb
mov
std
dec
add
push
rol
fcomp
dec
or
out
sahf
out
add
inc
sbb
xor
inc
pop
cmps
inc
stos
iret
adc
retf
scas
dec
fisub
sbb
sub
das
cmp
sbb
test
rol
movs
aam
imul
inc
cmps
mov
xchg
popa
jmp
mov
mov
rcr
cmp
jae
fcomp
xchg
leave
pop
js
xor
and
out
scas
ror
aas
pop
mov
or
rcl
mov
jbe
in
xor
movs
and
xchg
sub
jnp
sbb
fwait
inc
mov
(bad)
xlat
sahf
inc
(bad)
adc
ss
nop
scas
dec
or
clc
popfw
dec
pusha
dec
imul
imul
neg
mov
inc
test
pop
push
mov
fld
jae
and
pop
push
arpl
cmps
inc
pop
push
adc
rcl
add
mov
jmp
adc
mov
mov
push
xchg
fcomp
or
mul
aaa
or
inc
jno
adc
ins
outs
movs
inc
fwait
dec
es
lock
repnz
fs
jl
(bad)
in
xchg
rol
xor
sub
lahf
inc
rcr
xor
sub
dec
dec
mul
or
jle
pop
(bad)
rcl
call
mov
sbb
jecxz
sbb
mov
pop
sbb
std
push
inc
xlat
sbb
mov
dec
fnsave
push
cld
in
mov
lds
adc
sahf
iret
inc
sub
push
add
and
jns
xchg
xchg
add
rcl
cld
pop
aad
mov
or
pop
add
cmp
mov
xor
adc
scas
add
dec
or
cmps
push
lods
mov
jno
mov
loopne
push
dec
push
adc
ins
sbb
mov
push
jb
imul
sbb
stc
aaa
retf
xchg
and
ficomp
mov
loop
fwait
jnp
xchg
mov
retf
sar
enter
or
mov
push
les
cs
dec
push
es
test
jmp
mov
push
xor
fstp
test
jg
cli
aad
mov
xchg
or
sbb
sbb
pop
sub
push
xor
xor
dec
push
into
inc
sub
jns
stos
imul
rcl
sub
mov
and
aad
lods
sub
jg
shr
push
das
lods
fisttp
push
or
mov
ins
jnp
fdivp
ret
jg
push
ja
data16
ficom
mov
mov
push
shr
dec
test
int3
jnp
aas
mov
add
mov
scas
int3
sub
push
xchg
pop
dec
shr
mov
in
jns
push
pop
jnp
loopne
mov
dec
retf
xchg
mov
jns
mov
out
push
ret
call
inc
inc
mov
ds
mov
mov
sub
(bad)
jle
iret
mov
(bad)
mov
sub
fsubr
jb
shl
sbb
jbe
or
fcom
sub
loopne
movs
bound
adc
add
rcl
int
gs
pushf
bound
lea
xlat
idiv
(bad)
movs
sahf
add
aas
cmp
mov
sbb
imul
movs
out
jae
mov
leave
in
in
push
and
or
popa
je
dec
inc
sub
push
adc
sbb
push
retf
aaa
mov
or
pop
mov
pmulhw
jg
mov
sub
mov
xor
stos
ret
icebp
pop
loope
pop
jno
mov
enter
sti
adc
leave
movs
test
outs
sub
jnp
pop
fild
inc
adc
fcmovu
dec
sti
ror
imul
popf
and
push
pusha
dec
push
sbb
jb
mov
sub
icebp
shl
mov
(bad)
loop
mov
movs
jno
sub
jb
push
aam
cwde
dec
sbb
and
dec
add
dec
je
call
jbe
mov
jle
cmp
daa
xchg
jo
add
(bad)
ror
movs
push
xchg
jmp
mov
shl
push
fcom
mov
inc
xor
fidivr
call
dec
shl
jae
xchg
retf
loope
jp
mov
jo
in
scas
jecxz
scas
in
mov
inc
mov
adc
popf
inc
stos
mov
pop
test
or
imul
(bad)
in
inc
movs
push
sbb
xor
fild
fwait
mov
rol
pop
(bad)
(bad)
in
cmp
xchg
out
mov
jno
js
jno
xchg
push
(bad)
pop
aam
jbe
xchg
cli
daa
mov
mov
push
sub
and
xor
pop
not
ret
popa
mov
push
lock
call
test
or
xor
pusha
jns
mov
push
push
outs
pop
ins
loopne
cs
sti
movs
jns
nop
je
outs
mov
std
icebp
jecxz
xchg
ins
pop
nop
push
out
fistp
out
mov
out
sub
test
ss
or
pop
(bad)
mov
stos
sub
ds
pop
cs
hlt
sbb
mov
mov
jle
pushf
mov
sub
mov
enter
pop
test
push
sub
add
mov
repnz
cwde
lods
mov
mov
stc
xchg
mov
push
ror
loopne
dec
xor
outs
inc
(bad)
mov
stos
test
fistp
call
mov
dec
(bad)
(bad)
push
hlt
js
ins
push
arpl
push
stos
outs
mov
pop
push
mov
inc
dec
xor
nop
push
xchg
cli
imul
jp
mov
xchg
inc
loop
add
inc
in
int
jae
or
adc
stos
push
cmp
jae
mov
aas
jmp
out
loop
stos
mov
push
sub
daa
sar
jae
lods
movs
(bad)
sti
and
push
sbb
push
ds
push
push
call
and
mov
inc
shl
out
mov
xor
not
mov
and
cmps
rcr
mov
cmc
push
(bad)
pop
(bad)
mov
int3
fwait
movs
add
scas
ja
sbb
aam
jmp
call
(bad)
dec
mov
jo
test
or
mov
add
mov
xchg
inc
jge
repnz
xchg
lock
in
int3
ja
xor
adc
jg
(bad)
cdq
cdq
ret
clc
add
cld
mov
and
dec
cmp
dec
cwde
jmp
das
ficomp
add
fs
out
icebp
loop
addr16
cmps
jle
jmp
adc
lock
loope
mov
mov
ins
adc
mov
dec
outs
jecxz
imul
and
fs
cmps
xchg
mov
mov
call
cmc
adc
mov
xchg
mov
pop
fadd
out
in
adc
pop
dec
scas
mov
xor
popa
daa
test
push
push
aas
sub
jne
cwde
mov
push
cli
pop
jge
ja
addr16
inc
lods
jb
mov
lahf
cli
outs
dec
dec
and
pop
iret
aam
imul
repz
jb
jle
sbb
stc
in
push
mov
std
mov
mov
and
xchg
cli
sub
imul
jne
rcr
cmp
xor
push
cld
xchg
sub
es
lds
push
cdq
das
(bad)
ss
or
fstp
jae
rcl
pop
hlt
push
inc
aas
test
(bad)
lods
ds
outs
clc
jno
stos
ss
es
pop
aas
jne
cmps
loop
out
jo
sbb
aam
mov
dec
icebp
xchg
out
inc
in
push
test
data16
mov
xchg
adc
and
inc
je
sbb
test
rol
add
les
cmc
inc
xor
inc
sahf
test
(bad)
repz
sbb
stos
in
in
xor
mov
cli
icebp
xlat
mov
loope
test
pop
jecxz
inc
cmp
inc
pop
adc
sbb
shl
imul
pop
out
xor
cmp
test
sub
mov
sub
test
jmp
int3
pop
inc
(bad)
jmp
bound
cli
iret
push
push
mov
sar
sub
mov
and
fs
push
std
cwde
pop
in
ds
sbb
rcr
fimul
mov
xchg
adc
xchg
call
loope
xor
js
xchg
mov
jb
dec
into
pushf
sub
div
in
sahf
xor
add
aam
mov
repz
adc
lock
push
jl
sbb
sbb
ret
mov
mov
xchg
pop
dec
into
jl
mov
mov
sbb
push
xchg
call
jnp
mov
cmp
fcmovnu
mov
pop
dec
sar
daa
cs
popa
push
dec
dec
mov
jp
jl
out
push
cli
popa
pusha
iret
icebp
xor
push
xor
ror
es
call
not
(bad)
push
sub
imul
cmp
cmp
pop
sti
ss
mov
adc
mov
dec
shr
mov
jbe
jmp
jmp
std
jge
addr16
fdivr
mov
stos
xor
sahf
ficomp
sub
fimul
mov
cli
outs
fcom
jno
daa
mov
fstp
fcom
popa
setno
addr16
mov
dec
out
add
push
jp
movs
dec
cmc
cli
push
pop
mov
pop
ret
mov
adc
aas
push
leave
out
push
and
repz
ret
shl
jnp
dec
pushf
bound
push
xlat
ins
add
adc
imul
test
and
out
loope
pop
movs
mov
xchg
test
pusha
add
fstp
mov
lahf
sbb
mov
sbb
popa
inc
mov
mov
mov
jmp
or
data16
nop
push
js
pcmpeqb
xchg
dec
cmp
xchg
add
xchg
xchg
test
mov
ret
push
push
lds
pop
loopne
fisubr
pop
mov
outs
enter
ret
sub
or
dec
mov
pop
inc
push
xchg
jmp
push
sahf
add
sti
xor
lahf
cmps
call
push
jae
sahf
and
jb
cmp
sbb
test
aas
cmps
mov
outs
lock
neg
jge
scas
ins
push
imul
jecxz
(bad)
mov
movs
and
bnd
fisttp
imul
adc
popa
push
mov
jae
test
push
sbb
jbe
jns
int
mov
cmp
dec
lahf
xchg
ret
mov
dec
pop
push
mov
cwde
mov
lahf
cmp
mov
repnz
jl
and
sub
lock
mov
lock
lds
adc
or
and
sbb
out
jae
fist
iret
jge
mov
ror
xchg
lods
outs
je
or
and
cmp
out
push
push
out
xor
aas
into
xchg
or
jecxz
fsub
dec
and
scas
and
(bad)
push
movs
cdq
and
out
in
xor
loopne
aam
mov
dec
mov
sub
int
dec
sbb
(bad)
or
iret
dec
(bad)
sbb
mov
mov
and
leave
(bad)
stos
cdq
stos
or
outs
fs
push
sbb
push
xchg
jno
(bad)
hlt
outs
mov
jge
lock
mov
xor
jbe
cmp
cmp
add
and
cdq
mov
add
pop
xchg
(bad)
out
stos
cli
push
repz
scas
cmps
fimul
and
fs
aaa
or
mov
mov
pop
pop
outs
sbb
call
fisub
dec
fidivr
and
jg
mov
adc
ja
ret
xchg
(bad)
or
inc
mov
and
sub
inc
pop
dec
and
test
jl
sbb
sub
dec
addr16
mov
lds
scas
ins
rcr
(bad)
mov
inc
adc
or
rcl
(bad)
loopne
pushf
or
adc
xor
add
int
(bad)
mov
es
add
fdiv
jle
jns
rcl
mov
mov
push
add
xor
(bad)
jge
or
ret
xchg
cmp
inc
xor
and
xor
jl
or
sub
pop
mov
scas
dec
mov
rcr
test
push
pop
jmp
dec
or
arpl
rcl
and
loope
arpl
mov
fdiv
inc
xor
(bad)
fimul
pop
add
jb
inc
inc
inc
or
in
ins
sbb
inc
mov
mov
imul
push
jge
fild
in
push
loopne
sahf
test
dec
or
data16
(bad)
or
push
gs
pop
(bad)
ret
and
sahf
stos
sbb
retf
fisub
push
or
jp
add
jb
lea
mov
mov
outs
cdq
and
sti
mov
xor
cli
into
jb
dec
ins
inc
lds
rcr
outs
sub
sub
mov
dec
mov
push
cmp
int3
and
dec
or
fst
inc
in
(bad)
scas
movs
shl
shl
pop
std
push
cmp
jo
fwait
push
and
pop
out
jmp
loope
mov
test
gs
out
adc
call
aaa
(bad)
not
call
mov
sahf
push
mov
mov
inc
and
mov
xchg
sti
mov
cwde
add
lds
movs
outs
cdq
mov
push
xor
mov
jo
out
aas
sbb
sub
mov
mov
sar
rcr
cld
jp
ja
inc
mov
or
sub
ror
pop
outs
push
test
xchg
push
arpl
ja
idiv
mov
mov
loop
sub
inc
cmp
and
jg
ficom
xor
inc
fld
mov
pop
jecxz
sti
jl
dec
xchg
ret
call
(bad)
xor
movs
jg
sub
sbb
cwde
icebp
inc
test
cmp
mov
call
aas
inc
mov
dec
and
push
or
lahf
out
cmps
scas
sahf
mov
shl
dec
xor
adc
aam
jmp
and
push
imul
dec
fbld
inc
dec
jmp
hlt
test
popf
fist
push
sub
movs
mov
imul
mov
in
push
fisttp
leave
lahf
or
rol
test
add
out
adc
std
mov
and
(bad)
dec
sbb
or
mov
push
sub
sbb
xor
aas
scas
mov
loope
dec
pop
jnp
arpl
call
push
mov
fisttp
add
add
pusha
inc
in
and
dec
cmp
pop
lahf
inc
lods
xchg
push
pop
aam
xor
or
cmc
cdq
push
(bad)
xor
aam
or
jl
iret
(bad)
cld
jne
(bad)
xlat
and
cmp
ins
fisub
mov
dec
fcomp
cwde
adc
mov
dec
je
lea
(bad)
in
fnstenv
sub
inc
cmp
xchg
packssdw
dec
test
inc
lods
fbstp
jl
adc
shl
xlat
jmp
xchg
test
adc
mov
xchg
push
cli
shl
xor
je
or
mov
in
scas
pop
sbb
or
push
mov
mov
ja
add
push
jnp
inc
cmp
(bad)
lds
test
mov
inc
mov
xchg
in
cmc
pop
hlt
je
jg
or
jne
sub
xor
ror
xchg
lahf
cmp
sub
test
pop
pop
lds
xchg
mov
push
pushf
imul
xor
test
(bad)
sbb
call
int
ret
fwait
cmc
mov
pop
je
mov
popa
jmp
pushf
scas
xchg
test
retf
pop
add
and
loope
mov
jns
xchg
shl
push
add
loop
out
dec
(bad)
mov
or
or
pop
popf
(bad)
sti
sub
push
test
scas
mov
or
add
or
add
fcom
push
and
cmps
dec
push
retf
mov
dec
ja
dec
mov
dec
inc
push
push
and
aas
xchg
ins
(bad)
mov
fdivp
mov
and
repz
sbb
ds
out
pushf
inc
(bad)
and
inc
mov
outs
add
das
jns
test
xor
fisubr
adc
pushf
mov
test
pop
mov
adc
xchg
(bad)
pop
cmp
ss
cmp
sahf
mov
clc
scas
xchg
pusha
and
inc
pop
test
or
or
xor
popa
cmc
in
(bad)
jge
cmp
xchg
jmp
pop
das
mov
daa
xchg
jl
mov
fst
mov
mov
popf
sub
imul
cmc
loope
scas
mov
les
push
xchg
sbb
pop
sar
loope
cmp
les
not
push
rcl
pop
sub
mov
sti
jbe
fld
das
enter
pop
push
inc
pop
or
mov
or
loop
pop
push
add
pop
mov
ret
or
xchg
pop
fs
jnp
pop
aam
mov
std
jnp
es
lods
test
ret
cdq
in
xor
and
xor
pop
or
outs
daa
shr
xchg
lea
mov
stc
push
ds
pusha
lods
and
das
dec
xchg
cli
movs
imul
ss
mov
adc
mov
jno
dec
push
sub
in
add
aaa
cmp
scas
int
loope
mov
retf
cmp
mov
fidiv
and
jp
std
shl
jp
mov
xor
xchg
fldenv
adc
pop
jnp
int
inc
inc
mov
cld
retf
pushf
ror
sbb
inc
mov
and
cmps
leave
into
scas
sbb
cmps
add
loop
mov
das
fst
mov
push
(bad)
daa
inc
mov
mov
sbb
mov
pushf
in
push
push
mov
xchg
pop
div
cmp
outs
jmp
xor
or
or
dec
clc
(bad)
cmp
ja
aas
cwde
and
inc
pop
mov
cmp
fwait
xor
adc
jno
pop
out
pop
cmps
lock
shr
jb
mov
aas
xor
jmp
das
shr
or
ret
nop
push
jle
mov
mov
xchg
rcl
dec
xchg
in
jmp
pop
add
test
cmp
mov
cs
sbb
mov
outs
ror
push
cli
xor
loope
out
dec
adc
(bad)
jmp
dec
and
gs
imul
call
xor
inc
mov
xor
xor
or
jns
iret
cmp
ins
pop
dec
adc
test
mov
clc
dec
and
dec
cli
(bad)
xchg
(bad)
fwait
pop
hlt
mov
bound
xchg
popa
and
adc
repz
mov
imul
out
mov
mov
jne
add
xor
loop
data16
je
dec
stc
ret
cwde
add
es
loope
jg
jne
push
mov
retf
pop
(bad)
(bad)
sbb
es
adc
mov
pop
in
mov
dec
xchg
xchg
xchg
lock
mov
jmp
push
ds
retf
loope
not
in
sub
xor
in
mov
imul
mov
ds
mov
push
jmp
sub
sar
sbb
inc
sbb
sbb
loop
shl
dec
ins
call
scas
cmps
or
mov
mov
adc
outs
outs
mov
xchg
jg
xor
push
jns
(bad)
and
inc
xor
and
test
and
rcl
jle
jns
pop
loope
repnz
cmp
pusha
jae
dec
push
inc
ins
out
mov
mov
in
inc
repnz
mov
mov
data16
icebp
lahf
les
push
sub
pop
inc
push
mov
and
jg
movs
mov
pushf
cmp
dec
xchg
push
repnz
sbb
dec
sbb
pop
in
test
pop
jno
pop
or
mov
and
test
pop
call
inc
pop
adc
cmc
inc
je
push
mov
and
adc
add
cmp
ss
ret
icebp
or
mov
inc
int
pop
push
iret
sbb
xor
add
mov
mov
ffreep
nop
push
repz
push
out
cmp
out
xchg
add
ret
jne
xchg
push
mov
mov
outs
add
push
adc
in
clc
cli
push
xor
mov
stc
mov
pop
mul
mov
retf
adc
mov
mov
mov
das
test
(bad)
xchg
(bad)
pop
and
adc
in
pop
jg
xchg
sub
or
or
or
and
fidiv
aaa
fisubr
jae
pop
mov
inc
xor
jl
jb
in
push
mov
movs
bound
jecxz
daa
outs
sub
scas
mov
fs
in
setno
lods
cmp
push
loop
dec
and
outs
jmp
js
dec
or
aad
outs
cli
ret
pop
inc
mov
xchg
sub
aas
fsubr
pop
imul
inc
aam
neg
addr16
mov
cmp
dec
jle
xchg
xchg
iret
call
add
es
pop
mov
enter
popa
jp
jae
xchg
xchg
push
and
sar
and
rcl
bound
das
xor
adc
jmp
mov
popa
xchg
add
add
sbb
and
aas
je
pop
push
sub
fdivr
aad
(bad)
mov
jno
push
sub
add
lea
sub
aas
or
(bad)
cs
pop
xchg
pop
cmp
inc
xchg
popf
mov
jo
fcom
test
inc
bound
jle
add
int3
xchg
jns
or
(bad)
test
leave
mov
cwde
in
xchg
mov
xlat
aaa
cmp
mov
out
dec
loope
or
and
mov
fwait
pop
pop
pop
call
dec
lahf
sbb
mov
stos
dec
mov
iret
into
cmp
bound
push
test
ret
(bad)
cdq
packuswb
push
push
adc
daa
sub
or
out
dec
mov
nop
xchg
pop
nop
hlt
test
sbb
scas
mov
inc
je
popa
mov
pop
pop
adc
jge
inc
push
inc
es
fsub
xlat
push
ror
xchg
push
int3
jns
pop
mov
sbb
loopne
shl
mov
icebp
jb
push
aad
mov
mov
xchg
inc
or
jno
inc
mov
jmp
jge
push
dec
ds
mov
in
out
mov
out
mov
clc
push
xor
or
cmc
imul
shr
xor
dec
(bad)
jbe
es
cld
push
xor
jecxz
xchg
pop
inc
test
cwde
fnsave
xlat
call
stos
push
hlt
xchg
xchg
or
push
cmp
push
mov
add
push
sbb
cmp
pop
repz
jmp
jns
scas
jle
into
cmps
lods
or
cmps
adc
loope
bound
repnz
add
mov
in
mov
cld
xor
cwde
mov
(bad)
scas
leave
and
or
fisttp
inc
push
mov
cmp
xlat
outs
xchg
in
mov
inc
lods
loop
out
pop
sub
push
jge
lahf
or
add
dec
jmp
out
aam
or
sbb
cmps
dec
jne
(bad)
dec
add
sub
jno
sar
std
loope
jmp
sbb
popf
neg
nop
div
push
jmp
dec
lock
xchg
xor
fwait
cmp
leave
sar
lea
call
cmp
dec
and
add
shr
pop
outs
outs
xchg
jge
(bad)
test
add
xlat
std
mov
rcl
sub
or
adc
pop
cmps
ror
and
sbb
cmp
xrelease
pop
inc
sub
loopne
inc
pop
jmp
ins
cmp
repnz
add
and
loope
mov
outs
data16
int3
mov
daa
imul
dec
push
movs
push
dec
sbb
sub
dec
xchg
pusha
sar
pop
lods
mov
and
(bad)
hlt
add
sbb
jnp
fs
(bad)
gs
pop
push
aaa
xor
xchg
ins
xor
std
into
xor
cmp
add
mov
rcr
into
test
fild
and
pop
call
test
fsub
gs
pop
ins
or
aam
sub
(bad)
into
dec
fcom
pop
push
scas
and
(bad)
cmc
sbb
dec
or
inc
mov
sahf
push
jne
push
cmc
xor
cmp
pop
rcl
xchg
fistp
cmp
shl
push
push
aas
sbb
pop
sar
fcom
pop
xor
ss
dec
sub
call
movs
loope
push
loope
mov
loope
mov
or
cs
push
pop
xor
lahf
cld
jge
inc
push
cs
je
test
cwde
clc
sub
and
or
add
icebp
and
xchg
xlat
idiv
sub
mov
pop
cmc
xor
and
xor
cmp
push
jns
sahf
mov
fadd
xchg
retf
dec
fwait
call
or
sbb
mov
jb
outs
pop
mov
or
dec
jmp
popa
fsubrp
cmc
inc
or
dec
mov
(bad)
and
retf
inc
mov
rcl
pop
mov
arpl
lods
outs
cwde
cmp
arpl
xchg
add
mov
in
test
fmul
enter
div
mov
clc
jns
xchg
and
mov
popf
push
mov
xchg
or
f2xm1
mov
inc
dec
pushf
and
mov
fadd
or
pop
(bad)
mov
cdq
outs
loop
mov
inc
pop
icebp
enter
mov
or
or
inc
stc
jo
pushf
and
add
jns
pop
add
pop
stos
ret
daa
rcr
(bad)
pop
bound
inc
sbb
mov
and
xchg
pop
push
mov
ficomp
inc
or
std
pop
out
cmps
popa
clc
push
pop
call
inc
jb
bound
xor
aas
les
jo
out
mov
cdq
fimul
add
xor
cld
push
fs
xor
cmp
xchg
je
imul
call
int
(bad)
fldcw
or
mov
inc
mov
stc
and
mov
and
adc
loop
and
pusha
test
push
dec
retf
sbb
(bad)
mov
mov
cmps
das
fstp
xchg
fucomp
jmp
mov
shr
stos
jl
rcr
mov
cmp
icebp
loop
fidiv
push
sub
dec
xlat
aaa
icebp
es
mov
sub
out
pop
mov
movs
lea
(bad)
push
outs
jbe
push
jmp
lods
xor
jbe
std
rcr
mov
add
(bad)
aas
repz
sbb
mov
xor
pushf
clc
mov
add
ss
xchg
jb
pop
pop
shl
sar
pop
outs
aad
(bad)
fwait
aaa
add
and
dec
lods
push
out
inc
pop
pop
outs
xlat
xor
mov
out
mov
xchg
mov
push
int
int
adc
mov
ins
xor
sub
mov
adc
pop
in
pop
scas
fld
lods
and
xchg
mov
ror
push
jbe
sar
call
mov
neg
vmwrite
in
add
repz
test
xor
mov
bound
pop
movs
lods
dec
(bad)
ficomp
inc
push
sbb
xchg
fnstenv
in
into
jne
stc
adc
dec
js
jne
cld
dec
adc
adc
enter
push
sub
(bad)
loopne
cmp
xchg
test
imul
xor
mov
fcomp
lock
mov
jb
add
mov
push
pop
dec
add
xchg
or
adc
stos
sub
adc
mov
les
pop
cmp
inc
shr
mov
jnp
xchg
movs
mov
cmps
jne
dec
dec
pop
fcmovnbe
shl
sahf
mov
and
add
(bad)
cmp
or
out
hlt
data16
cwde
and
adc
ds
fidiv
(bad)
gs
sar
jge
movs
mov
xchg
div
mov
adc
jno
sub
and
pop
fild
cmc
pop
hlt
mov
jbe
sub
stos
sub
xlat
(bad)
div
fisub
adc
sbb
mov
sub
enter
mov
push
es
pop
fisubr
jb
cmp
push
sub
pop
daa
mov
sub
cwde
adc
sbb
mov
(bad)
rcl
mov
sbb
mov
xchg
add
movs
jns
jg
hlt
cwde
adc
push
clc
adc
or
stc
pop
test
sub
stos
lods
(bad)
mov
in
cs
sub
into
cmps
jno
in
push
stos
call
rcl
stos
mov
mov
iret
int3
test
sar
mov
dec
mov
xor
fdiv
jge
xor
pop
xchg
nop
xchg
xchg
mov
cmp
jne
nop
leave
seta
sub
dec
push
ins
loopne
outs
sbb
push
lea
xlat
dec
xchg
movs
jne
loope
mov
test
pop
ret
sbb
jl
mov
aad
mov
mov
ret
inc
aad
add
inc
add
(bad)
mov
pop
pushf
inc
mov
or
std
sbb
xchg
mov
pop
and
or
push
or
pop
cmp
clc
xor
add
inc
jnp
je
sbb
rcr
push
loopne
enter
shl
retf
adc
mov
xchg
fdivr
cdq
push
into
test
or
hlt
shl
pop
jo
dec
sub
loope
mov
and
repz
pushf
sbb
mov
dec
mov
sub
mov
inc
dec
nop
xor
jns
adc
and
sub
ins
mov
out
push
std
xchg
ds
push
mov
lods
imul
and
xchg
lahf
mov
or
push
push
call
shl
pushf
out
fwait
mov
inc
mov
not
jp
or
pop
or
icebp
sub
sub
clc
or
clc
xor
mov
sbb
mov
scas
mov
push
xchg
add
(bad)
mov
pop
xchg
fwait
adc
retf
sbb
es
jge
jno
pop
cs
arpl
jne
cli
sbb
mov
pop
pop
movs
lahf
cli
je
jne
jmp
test
enter
or
pop
je
adc
mov
int3
in
dec
arpl
into
mov
mov
cmp
ss
jb
leave
cmp
inc
jo
dec
sub
mov
ror
mov
add
lea
daa
out
jo
ror
les
sahf
pop
mov
cmps
cmp
push
stc
les
pop
in
pop
cmc
bound
xchg
test
mov
pop
ret
aaa
cld
sbb
and
dec
pop
cwde
sbb
adc
cmp
cmps
test
pop
test
jecxz
outs
xlat
lods
dec
jmp
xchg
sbb
div
cmp
lds
jle
pop
push
(bad)
clc
out
je
(bad)
and
test
scas
cmps
lods
mov
push
ins
or
pop
cli
fstp
xor
hlt
inc
movs
inc
xor
iret
mov
pop
popa
pop
cmp
jne
ret
and
cs
adc
(bad)
cmp
pusha
int3
and
dec
cdq
clc
add
cs
mov
adc
int3
jmp
cdq
add
fwait
sub
int3
dec
mov
xchg
pusha
xchg
scas
sub
pop
out
mov
xchg
inc
fld
loopne
jno
xlat
cmp
es
xor
sbb
mov
(bad)
jg
mov
dec
mov
jae
das
or
sbb
adc
retf
stos
ret
mov
xor
iret
call
mov
mov
jmp
fs
sbb
(bad)
fist
mov
popa
pop
ds
dec
daa
sub
scas
inc
jbe
movs
xchg
add
nop
pushf
into
push
in
push
scas
pop
in
scas
mov
fstp
mov
xchg
jae
retf
outs
rol
movs
test
ds
xchg
iret
cmp
sub
dec
mov
(bad)
mov
sbb
sbb
lods
dec
jmp
lods
jl
jmp
mov
scas
sbb
jecxz
(bad)
sub
inc
fisttp
in
jae
and
pushf
mov
popa
mov
mov
pop
push
movs
mov
fst
sbb
fst
cmps
cli
cli
mov
retf
push
and
adc
ss
mov
loopne
sub
mov
mov
xchg
xor
mov
aas
and
mov
jp
mov
dec
and
mov
icebp
cs
aas
pop
sbb
jnp
(bad)
push
or
add
cmp
xchg
mov
shr
add
ins
shl
xchg
jmp
into
dec
add
adc
sbb
sahf
sar
mov
xchg
ds
cdq
sti
push
and
cmc
stos
mov
inc
pop
in
ror
and
loop
push
in
sbb
xchg
xchg
push
cmp
xchg
repnz
push
jecxz
ror
loopne
ds
jle
in
mov
xor
push
xor
rol
arpl
push
ss
rcl
test
shl
add
dec
imul
es
cmps
xchg
ss
js
loope
sbb
mov
dec
xchg
outs
and
xlat
sub
retf
jbe
sti
pop
mov
arpl
aaa
ds
jmp
or
daa
or
loopne
fst
xchg
dec
jbe
inc
imul
aad
hlt
iret
bound
inc
cwde
xchg
mov
adc
lods
xor
xchg
adc
cmp
adc
cmp
pop
outs
mov
movs
jmp
and
iret
sahf
or
pop
out
inc
bound
jno
jns
shl
dec
mov
in
pop
or
cld
mov
jg
out
gs
fsubr
jle
cmp
xor
sbb
rol
jp
scas
cwde
cmps
in
fs
xchg
ds
shr
xchg
ja
sbb
pop
mov
dec
mov
in
mov
cwde
mov
aaa
jl
ficomp
shl
out
in
jns
jnp
stos
daa
lods
jo
adc
mov
scas
aam
mov
fldenv
dec
div
pop
js
mov
stos
adc
shr
lods
dec
je
jnp
push
sar
and
shl
stc
mov
das
es
and
(bad)
gs
sbb
je
sub
inc
jp
test
adc
jle
int
cmps
xor
adc
or
sub
scas
rol
mov
mov
out
mov
pop
adc
mov
rol
test
movs
movs
xor
lahf
adc
out
in
int3
ret
xlat
aas
pop
xor
jle
movs
popf
mov
popf
mov
stos
cmp
mov
rol
popa
scas
stos
(bad)
retf
dec
jecxz
arpl
mov
jl
xor
mov
ret
psubusw
lea
mov
(bad)
jmp
xchg
and
inc
mov
pushf
pop
mov
enter
dec
or
sbb
jns
call
js
iret
mov
xor
or
(bad)
push
and
jp
jl
fldenv
inc
aad
in
sub
push
cmp
xchg
adc
ret
sbb
mov
mov
cmps
adc
add
inc
jno
fmul
adc
mov
xor
or
mov
mov
sbb
mov
push
push
xchg
stc
xchg
mov
add
xchg
or
mov
stos
or
and
scas
sbb
push
sbb
xchg
sub
dec
pushf
push
and
xor
xchg
div
fwait
es
sub
les
or
call
push
push
popf
stos
xchg
push
into
mov
or
or
jge
leave
cmp
or
ss
sahf
and
scas
cmp
outs
jo
sahf
mov
ret
lods
cmps
jns
int3
in
fldcw
push
push
add
push
fcom
jle
inc
mov
inc
dec
iret
imul
aaa
test
inc
lods
mov
outs
xlat
jmp
ss
and
jno
push
arpl
stos
loop
pushf
(bad)
stos
jl
imul
sar
push
loopne
les
pop
inc
sbb
mov
or
jecxz
shl
pop
mov
pusha
push
dec
push
(bad)
push
(bad)
adc
mul
ficom
pusha
or
mov
jge
ret
lea
mov
push
mov
jg
add
push
data16
shl
dec
mov
je
add
(bad)
pop
mov
loopne
fld
les
inc
ja
sub
sub
sub
cs
adc
cmp
ins
inc
dec
push
cmc
push
push
dec
rcl
clc
icebp
pusha
sub
sbb
loopne
push
lock
push
mov
cmps
jbe
mov
jmp
fadd
aad
and
xlat
xor
push
push
mov
adc
bnd
sbb
push
inc
sub
xor
(bad)
sahf
mov
sub
sub
shl
xor
mov
cmp
xchg
mov
outs
sbb
ins
mov
repnz
jmp
pusha
addr16
data16
push
or
loopne
adc
movs
inc
mov
pmaxub
test
xor
fiadd
imul
and
mov
inc
jg
cs
fst
mov
sahf
cld
inc
sbb
movs
dec
call
das
inc
jmp
inc
mov
lahf
fcom
jmp
jge
mov
mov
add
(bad)
in
and
ja
xor
jnp
mov
fmul
inc
pop
xor
ror
movs
cli
push
inc
jmp
(bad)
fcmovnbe
cmps
pop
test
call
pop
out
(bad)
pushf
repz
fsubr
iret
inc
pop
test
xchg
mov
in
aad
pop
inc
ror
fidiv
pushf
(bad)
mov
pop
inc
or
pop
imul
pop
stc
xor
xchg
push
or
and
(bad)
out
ins
cmp
mov
adc
jle
mov
fnsave
inc
add
scas
sbb
jmp
mov
jp
pop
das
mov
mov
adc
dec
mov
and
test
gs
sti
cmp
lea
aam
dec
or
xor
pop
gs
or
popa
add
add
(bad)
(bad)
sahf
pop
push
in
lods
mov
or
xor
movs
test
enter
pop
adc
xchg
fdivr
int
adc
adc
arpl
int
repnz
mov
cmps
cmps
shl
adc
jmp
fcomp
jns
mov
lods
movs
xchg
(bad)
mov
jmp
or
adc
out
xchg
jo
int
push
out
popa
jecxz
add
or
cmp
jae
and
(bad)
mov
lods
fst
jg
(bad)
push
arpl
add
push
dec
mov
aaa
ror
xlat
push
retf
loope
pop
xor
pop
mov
ds
mov
retf
or
mov
jg
mov
out
push
popa
jmp
aam
popa
ins
in
mov
ins
cmp
sahf
lods
inc
pushf
fstp
mov
inc
stc
fistp
pusha
js
push
aaa
aad
mov
fidiv
mov
and
mov
sbb
mov
jecxz
imul
xor
inc
cmp
pop
jo
into
mov
ret
clc
pop
sbb
jecxz
shr
xchg
out
data16
in
adc
add
jecxz
mov
xchg
mov
out
ffreep
out
push
or
popa
ficomp
movs
push
add
mov
push
mov
fnstenv
mov
and
test
leave
pop
sbb
shr
dec
loope
add
mov
pop
gs
ficomp
nop
addr16
fisttp
dec
scas
add
mov
in
frstor
sub
outs
gs
or
add
mov
cmc
inc
outs
push
loopne
cmc
xchg
adc
loop
dec
xchg
call
in
dec
iret
enter
sbb
sbb
jge
je
rcl
adc
icebp
pop
xlat
lods
(bad)
mov
add
pop
ror
scas
push
fcom
adc
nop
cmovp
dec
add
xlat
pop
sub
retf
int3
cmp
popf
push
jmp
mov
lahf
mov
xlat
into
bound
inc
mov
inc
mov
aaa
mov
xchg
cs
test
mov
push
mov
jae
and
jge
pop
sbb
arpl
lds
add
retf
push
inc
js
xchg
push
cmp
or
add
ins
add
(bad)
or
pop
cli
xchg
test
push
imul
jae
sar
mov
xlat
mov
mov
jbe
popa
into
mov
stc
xchg
push
xor
outs
cmp
adc
pop
(bad)
imul
cdq
dec
test
jno
fsub
jnp
fsubr
repnz
xchg
xchg
mov
xor
aas
dec
sbb
sbb
mov
dec
ins
xor
sti
push
jb
and
shl
sbb
hlt
pop
or
adc
rcr
(bad)
shr
cmp
mov
pop
ds
dec
sub
in
jbe
push
loope
add
push
bound
add
call
adc
enter
mov
ror
fs
repnz
stos
mov
jl
cmc
jge
hlt
xchg
xor
je
jno
mov
loope
mov
and
test
addr16
and
cmp
sbb
jge
scas
pushf
sbb
jbe
pop
xchg
out
cli
dec
fistp
stc
cmps
lock
movs
jno
leave
test
sub
and
push
dec
dec
cwde
outs
addr16
jge
(bad)
fsubr
mov
xchg
aaa
mov
je
enter
(bad)
enter
push
cld
sbb
push
test
inc
hlt
jb
dec
pop
mov
ret
xchg
cmp
leave
retfw
or
adc
lods
push
jae
pop
stos
push
push
mov
mov
jle
and
xchg
add
sub
pushf
(bad)
jne
popa
inc
and
xor
mov
arpl
call
fld
in
lds
jle
out
sub
xlat
xchg
adc
jns
inc
pusha
fild
push
xabort
dec
aaa
xor
in
or
or
dec
jle
xchg
cld
ja
mov
mov
xor
cs
pusha
fisttp
adc
dec
xchg
imul
mov
loopne
imul
ja
shr
sbb
das
loop
retf
fstp
xor
sub
mov
dec
daa
repz
pop
mov
dec
stc
mov
lods
mov
call
gs
xor
ins
sbb
gs
sar
dec
enter
scas
imul
data16
into
inc
stos
mov
push
push
outs
xor
mov
lock
pop
pop
out
hlt
in
shl
xchg
adc
int3
nop
cmp
call
(bad)
aad
pop
xor
mov
lock
pop
pcmpgtd
mov
jbe
cld
push
mov
jl
pop
aaa
into
mov
cmp
dec
ror
int3
sbb
test
imul
mov
rcl
call
mov
mov
mul
inc
sti
jge
sbb
xchg
add
or
leave
popf
dec
fbstp
scas
icebp
ficom
lds
cmp
loopne
cmp
and
xchg
push
adc
pop
dec
pop
add
xchg
popf
mov
daa
int3
mov
and
hlt
loopne
push
bound
push
mov
jns
push
mov
outs
sbb
mov
adc
push
movs
xchg
repnz
bound
pop
add
stos
outs
mov
cdq
ins
arpl
push
pop
inc
cmp
ret
ss
ds
push
das
xor
cli
sbb
dec
pop
push
sub
aas
sub
pop
dec
cmp
or
ficom
data16
dec
dec
sub
dec
das
paddb
mov
mov
jp
lahf
adc
fstp
in
aas
cmp
lea
or
mov
and
mov
retf
push
lods
push
iret
(bad)
mov
rcr
mov
inc
jbe
popf
xchg
out
fstp
out
pop
in
cmp
pop
sbb
sar
or
push
sub
movs
xchg
xchg
mov
test
retf
sub
jne
xor
ja
scas
(bad)
push
push
jno
or
xchg
or
xor
(bad)
sub
mov
xchg
or
cmp
xor
popf
jne
lahf
push
jl
push
int3
test
jp
cmps
mov
mov
xor
iret
arpl
xor
push
popf
adc
cmp
hlt
and
cli
rcl
mov
push
retf
adc
jg
repz
test
imul
sub
mov
test
fdiv
pop
xor
cmp
das
cmp
jge
cld
ins
cld
and
sub
lea
in
push
dec
loop
pop
es
or
jns
test
fldenv
neg
xchg
fwait
push
fdiv
es
out
jge
xchg
mov
stos
sub
cwde
dec
jns
dec
pusha
mov
dec
pusha
repnz
ja
sub
cmp
mov
jp
adc
xchg
mov
xor
sub
and
sbb
ret
fnstenv
and
gs
mov
out
cs
inc
icebp
fs
cmp
sbb
jle
nop
les
push
dec
int
and
retf
clc
push
mov
jl
add
and
cli
out
mul
ror
dec
push
add
sti
jmp
hlt
les
popa
xor
xchg
mov
ins
xor
cmp
div
ins
in
push
mov
fst
(bad)
mov
(bad)
hlt
inc
push
cmps
jle
add
add
jbe
and
mov
and
adc
pop
push
ins
and
pop
xor
cs
mov
dec
in
or
cmps
into
cmp
out
mov
or
iret
mov
fs
and
sub
pop
stos
in
cmp
cmp
outs
cwde
push
lahf
test
add
xchg
inc
aas
mov
pop
sbb
arpl
pushf
push
call
inc
mov
in
xchg
aad
push
xchg
es
cmps
xor
or
fs
sub
cmp
cmp
jbe
aas
movs
test
jp
or
pop
ret
cwde
xor
mov
dec
add
mov
int
loop
mov
mov
lock
mov
xor
in
xor
int3
inc
xor
shl
jb
mov
call
inc
adc
cmc
jns
sbb
push
xchg
not
pop
ins
jnp
mov
int
daa
test
push
mov
push
ror
add
mov
push
pop
inc
xchg
inc
xor
int
mov
mov
jmp
jmp
cld
in
hlt
ret
add
adc
xor
mov
jno
sbb
adc
pop
inc
add
xor
sbb
xor
inc
retf
mov
stos
xchg
xchg
test
mov
xchg
test
push
add
hlt
pop
mov
movs
inc
int3
xchg
arpl
fdivr
push
aam
push
jle
mov
add
outs
push
or
and
mov
cmp
inc
shl
pop
xor
jae
and
in
sbb
hlt
ins
test
cwde
cmp
sub
or
cwde
stos
enter
ins
ret
ins
test
cmp
nop
cld
jmp
in
out
cmp
or
retf
aas
dec
mov
(bad)
enter
mov
mov
(bad)
jp
adc
inc
xchg
jb
clc
mov
aaa
add
dec
jle
xchg
dec
pop
imul
push
cmp
pop
popf
pop
dec
inc
sbb
jbe
aas
std
cmp
lock
imul
push
lods
clc
adc
retf
push
dec
push
dec
or
int
sub
std
push
xor
sar
stc
int3
dec
jl
daa
add
lahf
jle
cdq
repz
les
stc
pusha
inc
add
or
aam
mov
movs
push
add
mov
xchg
inc
add
aad
mov
dec
inc
mov
xchg
xchg
inc
mov
adc
stos
gs
mov
leave
out
stos
jge
jl
xchg
movs
mov
out
fadd
ret
push
xor
js
sahf
xchg
fs
mov
pop
jl
pop
aam
in
ins
push
cmps
in
adc
add
push
retf
pop
pop
xor
shl
dec
pop
mov
inc
fcmovbe
rcl
xchg
cld
xor
lock
xor
add
retf
or
cmp
mov
sti
iret
out
inc
inc
cmp
aam
lahf
add
jmp
adc
retf
dec
sbb
mov
popa
and
dec
xor
clc
arpl
stc
and
cmc
adc
gs
cmp
push
push
mov
into
cmp
call
xchg
push
lea
inc
sub
mov
and
rcl
sbb
fsubr
shr
fdivr
sbb
add
push
jle
daa
loop
stos
fidivr
jbe
(bad)
sub
rol
xor
iret
sub
push
jle
test
cmps
not
xchg
sbb
lock
push
rol
ins
clc
sub
div
stos
jb
push
xor
repnz
lock
sbb
outs
or
clc
icebp
aaa
sub
in
inc
hlt
inc
cmc
or
dec
stc
dec
mov
mov
out
shl
or
dec
jns
cld
cld
sbb
xchg
cmp
mov
nop
inc
and
xor
xor
cmp
bnd
dec
mov
cmp
inc
enter
sub
and
es
jge
fstp
in
rcl
cwde
sub
rol
add
pop
or
dec
pushf
daa
test
xchg
push
int
or
in
je
jge
clc
push
push
mov
pop
push
les
sub
xchg
jge
out
pop
jae
loopne
fisubr
(bad)
aas
jg
dec
mov
out
jmp
stc
mov
jb
ficom
add
xchg
and
mov
outs
xchg
jg
mov
add
in
fwait
test
xchg
jg
jmp
sar
sub
mov
or
out
loop
mov
inc
in
call
push
mov
sub
jbe
and
aad
jp
(bad)
mov
jecxz
fwait
jmp
jmp
cmp
pop
inc
je
(bad)
std
dec
sub
inc
mov
push
dec
push
cmp
dec
test
psadbw
mov
pop
mov
jle
test
mov
outs
push
fwait
cli
add
pop
xlat
mov
aas
pop
lods
xchg
ds
call
test
push
pop
push
pop
sub
sbb
push
test
fs
push
fiadd
mov
in
xchg
addr16
mov
test
or
cld
sbb
in
imul
fistp
cmp
inc
inc
ins
sbb
enter
mov
int
jle
sub
jmp
stos
mov
pusha
test
jmp
idiv
mov
or
clc
cli
mov
dec
mov
imul
pop
sub
out
mov
xor
into
sbb
mov
imul
mov
mov
jae
cmp
sbb
push
mov
pop
rcr
pop
inc
int3
and
mov
out
push
call
cmps
adc
sti
jmp
sbb
(bad)
repz
jnp
mov
xor
or
das
js
and
pop
cmps
sub
push
dec
push
hlt
shl
adc
in
out
pop
bound
xor
dec
and
dec
sub
cmp
inc
cdq
cvtdq2ps
cld
cmp
push
sbb
out
aas
aas
pop
gs
shl
push
fsubr
add
pop
dec
call
push
hlt
and
sbb
jbe
or
(bad)
lea
cld
cli
sbb
xchg
dec
add
int3
or
adc
hlt
loope
push
add
cmc
pop
fmul
(bad)
rol
ret
lods
ds
dec
out
or
sbb
adc
mov
mov
das
mov
fsub
mov
repnz
ja
outs
xor
aam
xor
xchg
js
mov
jmp
loopne
sbb
retf
scas
or
mov
leave
or
xchg
jl
outs
in
mov
ja
cli
inc
std
movs
inc
call
imul
repnz
je
cmp
push
(bad)
mov
mov
cmp
push
mov
pop
mov
pop
retf
cld
mov
jne
xor
inc
cmp
ja
jg
cmp
aas
push
sbb
fld
adc
imul
add
or
jne
cwde
outs
mov
ins
movs
mov
jnp
lods
js
push
push
add
js
pop
in
inc
jl
cmp
les
lds
lods
dec
adc
jecxz
outs
fmul
in
xchg
mov
fimul
dec
mov
xor
pop
cmp
lea
outs
add
mov
jecxz
into
ror
jno
xchg
in
mov
xchg
mov
pop
int3
xor
cmp
mov
sbb
test
cld
jmp
call
cmp
mov
fwait
cmc
push
lea
cdq
and
test
fsub
ds
sbb
fisub
dec
push
cmp
js
pop
leave
push
sbb
sbb
jp
adc
lock
retf
sbb
add
sub
sbb
mov
pop
mov
jno
(bad)
jmp
neg
push
add
pusha
clc
or
mov
sti
push
adc
stc
push
add
push
and
or
adc
xor
jmp
rol
cmps
mov
jecxz
adc
lea
jge
js
out
scas
mov
pop
dec
inc
shl
loopne
icebp
mov
cmp
cmp
ja
mov
pop
pop
mov
out
es
sub
movs
pop
or
imul
mov
cmp
add
hlt
xor
jbe
arpl
jmp
iret
xor
mov
inc
cmc
fcomp
ja
or
std
pop
aas
jge
and
rol
fdivr
fisttp
je
sbb
push
jmp
or
sar
jo
push
jmp
lahf
inc
ud2
call
sbb
out
shl
lahf
ja
mov
mov
cmp
into
add
scas
xchg
sar
shr
push
cli
cmp
ins
(bad)
scas
retf
daa
xchg
and
mov
dec
push
adc
xor
jb
jbe
pop
hlt
fcom
sub
int
sub
mov
das
sbb
nop
add
inc
adc
ins
and
test
push
cmp
sbb
je
imul
sub
std
or
xchg
out
cwde
jno
dec
aam
call
popa
repz
movs
jge
mov
in
cld
adc
imul
jmp
push
mov
sub
out
mov
cmps
jmp
or
cld
cld
sbb
push
mov
fiadd
dec
int3
add
mov
cmp
mov
jns
jo
scas
or
iret
add
mov
loopne
stos
mov
ror
into
push
xor
dec
jo
loopne
mov
rcl
out
addr16
jmp
xchg
mov
push
in
xchg
mov
push
arpl
lahf
push
ins
mov
clc
iret
sti
dec
enter
sti
xchg
jl
rcr
sahf
out
or
and
mov
push
xlat
call
lods
ins
cwde
sti
xchg
cld
xchg
push
xor
shl
pop
(bad)
xlat
jp
add
jno
cwde
inc
das
and
push
mov
xor
lods
(bad)
or
xor
cmc
sahf
stos
std
jmp
xchg
mov
jns
jge
retf
enter
add
cmp
pop
push
inc
add
mov
adc
mov
sbb
cmp
dec
lea
fcom
mov
pop
xchg
push
sub
call
adc
call
jecxz
dec
mov
jle
pop
cmps
lock
in
enter
sbb
pop
push
push
mov
mov
mov
ret
outs
xlat
sbb
push
jmp
cmps
jmp
(bad)
adc
sub
add
xchg
sbb
ds
movs
jmp
pop
and
cmp
adc
fist
sti
cdq
in
mov
jge
sbb
mov
das
std
or
cmps
ja
(bad)
push
pop
sbb
hlt
xchg
xchg
mov
jecxz
pop
adc
mov
xchg
cmps
ins
fidiv
xchg
out
add
adc
pop
jle
push
or
xor
xor
xor
jg
jmp
test
cli
adc
xchg
shr
loop
push
clc
push
sbb
call
dec
fld
jecxz
(bad)
jmp
or
cmps
xchg
push
pop
aaa
lahf
xor
in
aam
jo
ja
ror
hlt
xchg
sub
and
repz
test
stc
mov
movs
sbb
add
sub
xor
inc
jmp
push
and
push
ja
inc
jo
mov
add
dec
adc
test
mov
add
rcr
and
xor
mov
pusha
loopne
lods
pop
aad
std
sbb
inc
ins
cmp
fadd
sub
cmp
inc
in
cmp
xchg
arpl
repz
dec
shl
nop
ret
loop
add
fistp
aas
mov
inc
or
xor
pop
movs
sbb
xchg
ficom
mov
xchg
inc
int3
jbe
lock
jmp
mov
cmp
(bad)
mov
mov
(bad)
adc
aad
les
inc
fist
jmp
adc
add
jge
ficomp
xor
in
cs
xor
mov
test
inc
(bad)
push
(bad)
aam
dec
xor
test
dec
enter
das
xor
idiv
xor
sbb
xor
mov
in
in
adc
inc
sub
dec
fdivp
fcmovbe
sub
pop
gs
js
mov
nop
xchg
out
dec
js
lea
cmps
sub
leave
pop
adc
pop
(bad)
cld
xchg
dec
std
bound
dec
popa
addr16
scas
ffreep
jmp
loopne
repnz
shl
ret
jns
add
push
xchg
push
adc
js
jl
dec
mov
and
and
push
xor
cli
dec
jmp
sbb
(bad)
jb
jp
pop
pop
mov
jecxz
xor
cmp
jl
ins
cmp
xchg
mov
cmps
ret
iret
dec
mov
mov
addr16
push
or
ds
mov
mov
out
shl
out
(bad)
xchg
popa
pop
xchg
mov
jnp
pop
rcl
out
(bad)
push
sub
hlt
adc
hlt
jno
arpl
hlt
loope
popa
and
sbb
(bad)
leave
push
pop
add
(bad)
adc
in
lahf
pop
sbb
int
out
lea
test
sbb
adc
lea
cmc
mov
or
and
sahf
pop
scas
sub
dec
jne
dec
stos
mov
retf
xchg
mov
add
cmp
pushf
cmp
cmp
mov
in
or
or
jne
cmovne
or
enter
lock
(bad)
lods
inc
adc
movs
xor
xor
xlat
mov
ret
inc
mov
xchg
push
add
cdq
mov
std
xor
xor
cli
xor
push
sbb
xchg
repnz
(bad)
leave
movs
in
pop
push
sbb
ficomp
dec
sbb
ss
out
call
data16
jle
push
test
xchg
jno
clc
ficomp
inc
pushf
pop
ss
rcr
cs
jge
lods
mov
sub
jnp
fistp
xchg
fwait
add
rcl
dec
xchg
inc
test
nop
pop
popa
xchg
loope
sbb
imul
inc
ficom
fcom
les
mov
(bad)
imul
aas
xor
test
stos
or
adc
lods
pop
mov
dec
jne
sub
xor
or
fwait
repz
cmp
push
xlat
pop
xor
loopne
fcom
(bad)
jle
aas
jb
or
fsub
addr16
push
push
and
fnstsw
outs
mov
push
ins
bound
dec
cmps
lods
add
dec
jge
in
das
cmc
mov
sti
cmp
push
(bad)
mov
ss
popf
mov
mov
mov
shl
mov
dec
xchg
aam
jns
mov
mov
jmp
adc
mov
int
sub
sub
fdiv
mov
jb
mov
sub
xchg
mov
sub
jb
icebp
rcl
push
loope
sub
sub
pop
lahf
sub
ret
fstp
and
dec
mov
in
(bad)
les
rcl
jb
ja
addr16
adc
ror
push
in
cmp
loop
mov
adc
cmps
dec
adc
icebp
jne
jge
inc
outs
movs
xor
push
retf
outs
xchg
jns
into
add
ins
push
hlt
add
or
cli
pop
xor
daa
mov
and
je
lea
rcl
xor
and
fmul
inc
addr16
pop
xchg
call
jo
sar
jle
xchg
aad
repnz
dec
sub
add
add
inc
mov
add
push
cs
mov
inc
push
cmp
adc
test
hlt
xchg
outs
mov
mov
mov
adc
adc
inc
push
adc
sub
push
mov
pushf
dec
or
push
mov
push
daa
sub
sub
mul
hlt
loop
mov
pop
lods
push
aas
and
int
dec
jge
hlt
push
mov
mov
leave
add
shr
push
(bad)
or
arpl
mov
gs
out
idiv
jecxz
aam
sti
jmp
fs
mov
xchg
dec
ja
in
cmp
cli
push
jge
lahf
cmp
push
mov
cs
xchg
daa
jg
movs
js
dec
js
dec
cmp
ins
push
ret
inc
jg
and
sub
retf
popf
pop
loope
jmp
inc
dec
jmp
jbe
ins
jo
adc
imul
sbb
xchg
in
cld
repnz
mov
pop
mov
dec
or
loope
sub
sub
nop
mov
xchg
je
xchg
inc
jl
movs
jnp
repz
ins
xlat
dec
dec
ja
ins
jmp
call
loop
ror
fst
cdq
pop
cmps
cdq
jecxz
es
loope
mov
ss
lds
daa
jns
shr
or
aad
aad
outs
scas
jbe
test
add
push
mov
int3
ret
add
retf
mov
push
jae
cmc
inc
mov
xor
sbb
or
xor
mov
test
cmps
add
sub
das
push
xor
in
arpl
dec
repz
inc
push
xchg
les
ja
int
std
pop
sbb
pop
adc
mov
stos
sbb
in
push
add
cmp
mov
jae
sbb
add
pop
add
adc
and
mov
jbe
xchg
ret
lds
ins
ins
ror
sub
fld
dec
aad
push
inc
aam
xor
gs
mov
ror
(bad)
cmp
pop
mov
xchg
aad
cmovg
cmps
push
mov
mov
mov
sar
xor
or
call
dec
add
or
test
cmp
jb
sti
data16
arpl
(bad)
(bad)
daa
push
jmp
push
(bad)
cmp
mov
mov
aas
xlat
push
cmp
inc
fcomp
and
xor
sub
repz
adc
fsub
scas
adc
or
sub
add
xchg
cld
in
(bad)
xor
mov
pop
lods
sbb
enter
mov
xor
add
loopne
or
xchg
clc
and
(bad)
fnsave
push
inc
mov
enter
imul
jge
add
das
cmp
out
dec
jmp
aad
push
pop
(bad)
idiv
adc
push
mov
or
inc
add
pop
xor
fld
les
sub
in
pop
shl
loope
cmp
xchg
dec
sbb
fwait
push
enter
sbb
scas
mov
jb
inc
push
add
jns
in
dec
fwait
dec
cmp
cmp
fs
and
mov
ret
dec
repz
xor
sbb
xor
xchg
mov
mov
cmps
xor
jns
jmp
aas
rol
pop
repz
push
(bad)
test
outs
sbb
adc
int3
or
dec
ret
jmp
scas
push
pop
mov
add
jb
mov
sti
dec
test
mov
in
inc
pop
cli
inc
xchg
je
jge
cmp
dec
pushf
push
xor
imul
mov
pop
inc
mov
adc
repnz
xchg
push
pop
rcr
push
mov
cmps
ja
bound
add
loope
lock
mov
jle
xrelease
or
jbe
out
ds
fisub
dec
mov
mov
mov
arpl
xchg
xor
pop
int
cmp
inc
loop
movs
adc
or
or
ret
lods
(bad)
ja
sub
sbb
jo
shl
dec
jns
and
jl
movs
or
in
jl
mov
pusha
jl
jge
stos
jnp
retf
adc
adc
and
sahf
inc
scas
inc
mov
stos
fwait
xor
push
ins
xchg
cmps
sub
mov
and
pop
div
ret
jb
pop
cmp
sbb
stos
mov
outs
test
daa
inc
pop
dec
repz
or
cmc
neg
add
arpl
jne
jecxz
retf
(bad)
xchg
pop
jge
cmp
ins
(bad)
xchg
ret
sbb
mov
test
jmp
(bad)
sub
jb
lods
dec
psrld
ret
or
sahf
out
xor
mov
cmps
div
mov
adc
lds
jns
loope
xlat
(bad)
sbb
dec
mov
and
push
mov
test
popf
sbb
adc
rcr
sbb
fild
add
jp
div
std
inc
dec
enter
iret
jl
mov
xor
fnsave
in
mov
sub
xor
les
jecxz
std
lods
das
sub
shl
scas
adc
cmps
fucom
fisttp
cmp
and
rol
cs
jg
dec
call
cs
xor
add
aaa
js
test
movs
fcmovb
push
add
jae
and
mov
cmp
lock
imul
scas
mov
aas
retf
pop
cwde
jmp
add
ins
mov
ins
rcr
adc
int
jnp
rcl
jge
cmp
pop
mov
xchg
pusha
rcr
clc
lods
push
cld
scas
daa
arpl
mov
sub
inc
pop
mul
xor
popa
jne
(bad)
push
sahf
sub
mov
jbe
jecxz
push
adc
inc
or
jb
inc
mov
xchg
dec
push
rol
call
popf
mov
and
mov
xor
fcom
aad
lahf
test
cs
xor
jecxz
cmps
in
mov
hlt
stos
mov
cmps
js
jb
mov
push
fidivr
or
loop
pop
aaa
add
mov
dec
mov
pop
movs
rcl
add
cld
fadd
fisubr
push
or
adc
outs
xchg
loope
jnp
sub
mov
push
lock
je
fcmovnb
retf
adc
sub
ins
out
push
cli
scas
cmc
leave
dec
arpl
jge
das
or
cmp
mov
mov
mov
es
jae
xor
rcr
imul
mov
dec
xchg
(bad)
push
or
dec
pop
cs
ror
cmp
pop
je
and
jge
setns
sbb
in
int
adc
or
add
mov
cmp
jl
jg
sbb
rcl
add
sbb
popf
sbb
push
stos
push
stc
es
push
ss
clc
scas
sti
mov
push
cmp
icebp
cld
cmp
or
dec
push
or
mov
sti
push
sbb
retf
imul
sub
adc
fdivp
inc
xchg
or
cli
xor
into
xchg
and
push
leave
pop
push
imul
pop
dec
in
adc
ins
mov
dec
xor
sbb
cmp
out
dec
ss
aad
mov
or
add
cmp
mov
mov
shl
std
call
mov
and
cmp
inc
out
mov
movs
call
pop
push
je
xlat
pop
neg
dec
fadd
test
leave
pop
dec
add
inc
scas
or
sbb
adc
pushf
fadd
loopne
jecxz
xchg
xor
dec
out
and
jns
das
ret
adc
xor
fwait
shr
xchg
repz
loopne
push
mov
addr16
xchg
sbb
cmps
pop
retf
cs
dec
xchg
cmps
rcl
neg
repnz
mov
test
cli
jo
sub
cmps
mov
mov
int3
and
les
lock
ss
addr16
sbb
mov
cld
(bad)
sti
jnp
arpl
jmp
popf
pop
shr
add
and
jle
ja
jge
les
loope
jp
imul
ret
mov
frstor
fmul
sub
mov
(bad)
aas
ja
mov
movs
mov
xchg
dec
inc
idiv
push
fs
jge
jb
pop
adc
loope
adc
and
dec
and
fsubr
jl
cld
jae
int3
mov
inc
mov
sbb
ds
call
mov
add
inc
fsub
pop
xchg
mov
mov
lds
js
test
ins
push
out
cmp
jmp
add
add
idiv
loope
mov
stos
clc
cmps
dec
mov
push
mov
js
mov
aas
pop
adc
(bad)
mul
int
shl
dec
mov
in
out
loop
sti
out
pusha
leave
xchg
sub
test
jge
push
mov
push
ins
(bad)
sbb
fisttp
sbb
add
out
out
cli
pop
test
sub
shl
scas
cmps
sbb
shr
enter
ja
xor
add
or
daa
lods
cdq
retf
mov
scas
in
pop
push
js
jle
add
fiadd
lds
cmp
inc
push
aad
mov
pop
xchg
(bad)
jle
icebp
xor
popa
test
cld
repnz
in
xchg
je
ss
and
push
ficom
xor
xchg
iret
(bad)
xor
dec
push
sub
xor
xchg
scas
mov
cmp
push
stos
add
cmp
sub
jecxz
dec
add
push
(bad)
add
and
mov
mov
pop
inc
retf
out
fwait
movhps
mov
into
sbb
out
(bad)
outs
jle
out
movs
(bad)
push
or
jg
mov
aaa
mov
push
mov
xor
popa
push
pop
stos
arpl
neg
mov
fstp
test
sub
push
cli
popa
dec
(bad)
rol
pop
add
inc
push
jae
aad
in
and
repz
add
aad
imul
and
retf
sub
nop
inc
(bad)
mov
adc
movsx
bound
pop
adc
xchg
xchg
and
push
sti
jl
and
iret
loopne
push
jnp
mov
sbb
adc
push
mov
adc
mov
dec
cmp
std
add
push
and
lods
jmp
ins
test
dec
pop
popa
shl
sti
(bad)
ja
bound
sahf
jb
das
(bad)
jb
xchg
(bad)
push
sbb
je
call
mov
mov
pop
add
call
repz
push
mov
jns
iret
pusha
and
icebp
mov
aaa
nop
ret
aam
ins
xchg
into
and
movs
mov
test
(bad)
std
mov
push
mov
inc
retf
pop
hlt
out
mov
adc
movs
pushf
pop
shr
rcr
ja
inc
stos
mov
push
kmovw
popa
test
inc
pop
xchg
scas
outs
cdq
ss
dec
sub
into
(bad)
mov
mov
jnp
push
dec
add
push
loop
inc
std
push
push
lock
fldenv
dec
rol
cmp
cwde
adc
jge
cmp
adc
mov
add
push
add
jmp
push
sub
data16
cli
out
adc
retf
push
pop
scas
adc
fisub
repz
xchg
lods
adc
bound
sbb
and
and
scas
adc
mov
and
aas
pop
xor
push
into
pop
mov
(bad)
(bad)
movs
adc
push
mov
jge
repz
je
cmp
imul
and
inc
push
sar
frstor
pop
mov
ins
or
js
mov
test
xchg
mov
xchg
fisub
adc
xchg
(bad)
scas
aad
push
(bad)
sub
mov
adc
xchg
lods
and
cmc
inc
in
popf
cmps
sub
xchg
pop
(bad)
dec
addr16
add
in
call
ins
xchg
cmp
jns
jl
and
sbb
in
addr16
add
enter
mov
sbb
mov
cs
out
repz
push
jle
push
jmp
movs
call
mov
sbb
mov
stc
fcomp
nop
(bad)
cmp
adc
pusha
mov
or
ds
xchg
nop
jg
aad
push
add
movs
dec
inc
daa
call
jno
sbb
ret
test
scas
clc
scas
(bad)
call
sbb
outs
scas
sub
mov
(bad)
xlat
movs
xor
adc
xor
retf
ret
inc
movs
ret
add
inc
dec
in
vpmaxub
xchg
popa
in
push
scas
or
stos
neg
mov
gs
or
mov
adc
rol
cwde
push
movs
mov
scas
aaa
loop
pop
movs
pminsw
inc
ins
adc
mov
add
cmc
imul
push
jae
mov
sub
sub
xor
or
and
xor
sbb
mov
test
pop
cmp
lds
mov
ja
call
push
xor
add
xchg
mov
jno
sar
cld
mov
dec
std
(bad)
xor
jp
fwait
mov
sbb
inc
ret
mov
jmp
test
sahf
int
in
inc
add
dec
or
xor
nop
mov
dec
mov
and
adc
add
or
js
xor
jae
cld
push
jecxz
jne
jae
ds
aas
rep
mov
and
mov
lds
add
jb
arpl
mov
inc
push
push
fisttp
lods
int
in
retf
loope
pop
sti
mov
call
dec
and
adc
iret
add
enter
inc
cmp
sbb
and
js
push
lock
and
cmp
push
mov
sahf
pop
je
mov
xchg
cmp
leave
xchg
fmul
mov
fdiv
xchg
add
jae
loope
cmp
lock
xor
fcmovnbe
cmp
xchg
cdq
mov
mov
lods
ror
ss
sub
shl
jl
jp
cmp
sub
es
mov
sbb
add
pop
ds
stos
inc
push
and
xor
sti
mov
sbb
call
jle
cmp
js
mov
jp
pop
jmp
and
add
jmp
outs
xchg
xor
mov
push
mov
add
add
dec
adc
cs
cmp
sahf
mov
jnp
and
ret
adc
mov
fisttp
sub
jne
mov
(bad)
in
inc
sub
xlat
aas
inc
sub
stos
adc
cmp
test
jne
jae
out
cs
in
add
mov
or
test
mov
inc
ins
inc
in
fs
dec
jl
mov
sbb
(bad)
jmp
iret
aam
push
sub
rcr
mov
push
inc
jmp
mov
retf
xchg
outs
inc
ja
(bad)
pop
aam
shr
popf
xlat
mov
mov
jb
fnstenv
fiadd
shr
cli
fistp
popa
inc
mov
pmulhw
jle
imul
pop
stos
mov
std
adc
lea
lock
inc
stc
fwait
dec
mov
push
seta
push
sahf
mov
lock
xor
jp
jp
sub
xchg
xor
mov
fisub
sub
add
test
mov
add
add
pusha
in
repz
mov
mov
sub
nop
ss
ja
test
push
loopne
daa
or
test
add
mov
pusha
out
xor
sar
std
push
cmp
add
sbb
lea
jmp
pop
mov
or
mov
and
stos
cmps
push
jae
cmp
out
fs
loope
out
sub
push
xchg
add
cmp
outs
(bad)
mov
jg
mov
sub
(bad)
rcr
add
or
(bad)
lods
lock
(bad)
sbb
xlat
scas
pusha
das
sub
mov
fs
movs
dec
mov
fldcw
cmp
les
xlat
adc
mov
int3
popf
shl
push
aaa
call
cwde
leave
jb
cmc
push
dec
jns
pop
cdq
xchg
mov
mov
jno
(bad)
mov
mov
in
cmp
mov
xchg
push
dec
push
and
jg
sub
sbb
gs
sub
inc
sub
div
rcl
fcom
mov
push
push
add
je
push
jg
xchg
sub
mov
xchg
(bad)
test
mov
das
jmp
mov
push
xchg
jns
and
ja
adc
push
call
pop
xchg
cld
aaa
mov
pushf
mov
mov
stos
and
mov
or
not
adc
cmp
pop
add
mov
sbb
loope
dec
inc
imul
jnp
inc
out
aaa
aas
sbb
and
cmp
sub
mov
movs
(bad)
and
ins
sbb
ja
mov
pop
sbb
jns
(bad)
xchg
fcom
add
dec
cli
les
push
mov
add
int3
add
lds
xor
clc
dec
pop
lods
pop
xchg
mov
call
adc
dec
xchg
nop
and
mov
push
dec
jb
retf
retf
addr16
(bad)
jmp
sbb
pop
sub
pop
mov
rol
nop
xchg
sbb
push
pop
mov
fwait
aam
or
push
and
mov
xchg
sbb
stos
(bad)
repnz
aaa
cwde
dec
jge
scas
pop
std
xchg
xor
icebp
jno
lock
shr
cmp
mov
js
test
add
push
mov
pop
retf
das
test
in
outs
sbb
pushf
mov
inc
jg
aas
call
scas
enter
xor
mov
enter
ror
inc
or
xor
rcl
mov
outs
fwait
pop
xchg
jmp
add
fwait
xchg
fdiv
pop
or
iret
cmp
push
mov
jl
xlat
(bad)
jl
ret
out
inc
and
jae
push
mov
jns
cmc
jmp
movs
inc
and
jmp
mov
xchg
jecxz
imul
cmp
or
push
jbe
jne
cmps
enter
arpl
xor
push
ret
dec
sbb
std
neg
jo
xchg
fcomip
dec
and
inc
mov
bound
mov
push
sub
add
loop
cwde
add
xor
cwde
fmul
xchg
faddp
loopne
in
ror
(bad)
cld
in
scas
push
test
shl
ins
mov
gs
jne
jnp
dec
arpl
bound
fs
cmp
jle
cmps
nop
lods
mov
pusha
or
fwait
gs
call
inc
test
xor
mov
xlat
xchg
or
fsub
pop
adc
adc
lds
and
rcl
stc
add
dec
out
stos
xor
out
jbe
sub
test
(bad)
jg
fmul
fisubr
sub
push
test
inc
mov
sub
arpl
and
inc
sbb
idiv
xor
inc
dec
push
jmp
and
sbb
mov
out
or
pop
movs
test
push
fsubrp
mov
leave
loopne
jne
pop
das
push
movs
in
movs
daa
xor
popf
daa
arpl
jo
pop
add
out
fs
fsubr
add
loope
or
mov
ds
jne
inc
out
movs
inc
xchg
aad
aas
pop
adc
lock
fs
cdq
xor
inc
sahf
mov
jmp
cwde
pop
jle
adc
nop
add
pop
inc
loop
ja
scas
mov
pop
adc
std
es
pop
pusha
inc
je
inc
sub
fwait
in
stos
or
imul
push
jmp
fsub
xor
fsub
fistp
aad
cmps
jno
jae
add
jb
popa
outs
mov
sbb
jg
repnz
outs
(bad)
cmp
add
cdq
and
push
cmps
mov
pop
(bad)
mov
mov
adc
push
mov
retf
push
sbb
bound
xor
dec
sbb
sti
test
adc
fs
mov
js
dec
sbb
jl
cmps
ret
nop
dec
fadd
je
mov
jl
pop
jecxz
mov
push
add
int
shl
adc
idiv
imul
lea
cmps
cmps
mov
cld
or
mov
dec
lahf
mov
clc
lods
inc
pop
xor
push
add
retf
mov
cmps
clc
lods
push
sbb
mov
dec
retf
mov
les
ja
jbe
inc
mov
bound
pop
add
inc
retf
mov
or
iret
int
xchg
cmp
dec
loope
js
add
in
pop
aad
and
jno
fsub
pop
ins
xor
push
jnp
out
lahf
mov
(bad)
add
xor
imul
lods
pop
imul
or
ins
jmp
mov
inc
pop
mov
xchg
sub
das
popa
or
out
cmp
push
je
cmp
push
ror
addr16
xor
pusha
mov
xlat
pop
and
shl
jle
add
jmp
push
pop
mov
outs
push
mov
ret
call
retf
inc
cli
loopne
lock
add
scas
enter
loop
rol
dec
nop
mov
les
mov
in
pop
and
jmp
xlat
jbe
xchg
push
xchg
add
fidiv
sbb
outs
xchg
push
jns
mov
cld
and
add
das
rcr
jne
cwde
popf
push
ss
cwde
mov
popf
inc
ja
push
inc
mov
push
or
pop
cmp
jmp
int
fmul
push
shr
lahf
dec
movs
fwait
call
inc
mov
xchg
push
jle
and
mov
push
(bad)
push
clc
aam
(bad)
int
jb
lock
cmps
ja
or
jl
xlat
mov
dec
and
and
xchg
pop
xor
inc
inc
jae
call
rcl
sbb
arpl
cmps
add
jmp
pop
or
je
sub
(bad)
inc
inc
shl
inc
out
inc
js
push
xor
imul
sbb
add
pop
inc
fstp
fild
jmp
dec
in
xlat
lods
sub
inc
retf
pop
outs
push
cmp
retf
sub
ss
xchg
push
mov
dec
push
call
jns
nop
cmc
inc
and
shl
and
(bad)
ret
sbb
(bad)
push
cli
int3
pop
lahf
jne
retf
jg
jge
movs
loop
aas
(bad)
fidiv
inc
popa
test
mov
iret
enter
push
jle
mov
dec
rcr
idiv
outs
ret
loope
mov
js
out
pop
cwde
push
jns
jp
add
aad
mov
add
xor
imul
out
mov
pop
arpl
cmps
iret
leave
enter
push
(bad)
stc
call
cmp
xchg
cmp
ss
dec
mov
ds
xchg
cmp
jno
outs
jmp
sbb
in
lds
data16
pusha
mov
dec
das
pop
mov
xchg
outs
dec
inc
movs
fdiv
fsubr
movs
mov
test
mov
out
inc
sahf
mov
xor
dec
not
data16
and
scas
adc
fwait
mov
and
sbb
test
xchg
mov
jge
push
push
pop
or
pop
mov
or
add
mov
es
and
enter
pop
out
test
or
jmp
jo
inc
push
xchg
iret
(bad)
inc
gs
push
aad
sub
mov
mov
pop
mov
xchg
jg
jae
mov
add
push
mov
inc
aas
push
cmp
sti
out
cmps
mov
stc
mov
loopne
adc
jbe
add
or
xor
inc
push
imul
repz
xchg
pop
inc
gs
fsub
in
xchg
mov
jne
jmp
xchg
jne
in
adc
dec
div
pop
jnp
xchg
std
adc
xor
mov
test
add
movs
mov
mov
push
rdmsr
retf
push
test
mov
and
jp
(bad)
enter
out
dec
mov
data16
inc
ins
pop
mov
test
pop
fs
mov
mov
jmp
dec
sub
adc
add
es
push
aam
shl
pop
aas
pushf
(bad)
addr16
sbb
nop
pop
mov
fxam
jg
daa
adc
add
cmps
cwde
inc
cli
pop
retf
je
xor
push
imul
frstor
lock
push
shl
cmp
or
mov
shr
dec
sar
adc
cmp
xchg
test
xchg
repz
xor
and
xlat
jbe
das
scas
xor
sub
ficomp
add
mov
repz
pop
mov
pop
inc
jp
stos
jae
mov
rcr
scas
call
push
mov
std
push
lea
dec
dec
fwait
pop
inc
xor
or
add
jg
mov
jbe
or
adc
xchg
cdq
xchg
call
inc
cmc
hlt
cld
xchg
fadd
inc
cli
sub
cld
rcl
push
(bad)
sbb
in
mov
aas
jl
(bad)
push
repz
jb
pusha
mul
(bad)
sar
mov
addr16
mov
shl
cdq
jnp
mov
jmp
clc
jns
outs
and
pop
stc
je
in
mov
mov
enter
jp
dec
leave
inc
or
pop
pushf
sbb
push
jmp
mov
and
in
std
jns
iret
inc
movs
scas
xchg
daa
sbb
aaa
dec
mov
inc
sbb
(bad)
jno
test
cli
outs
nop
mov
fadd
mov
inc
aad
in
sub
int
fisubr
inc
lock
inc
ss
and
jmp
or
or
(bad)
(bad)
iret
push
mov
or
jmp
sub
cs
stos
cmp
pop
mov
aad
daa
inc
inc
in
je
jge
dec
lahf
sub
or
icebp
in
call
leave
dec
adc
fist
jg
cdq
out
dec
jmp
stos
call
cmp
sub
hlt
jb
lea
inc
fsubr
mov
out
stc
adc
push
daa
pusha
sbb
jo
add
and
add
es
ret
push
add
inc
(bad)
ja
and
mov
jecxz
call
ja
pusha
adc
fs
fist
pop
or
add
(bad)
(bad)
loope
xchg
pop
sub
jmp
jle
pop
cld
stos
xchg
mov
jae
jl
add
les
push
jle
shr
push
jmp
sar
and
sub
test
daa
or
fdivrp
lods
outs
jb
ss
leave
cmps
lock
into
jae
jg
mov
(bad)
call
lods
mov
icebp
std
out
inc
jge
gs
sti
add
mov
jmp
in
or
mov
mov
push
iret
sbb
fdivr
test
shl
jae
jne
push
mov
lods
cmp
jmp
lds
aaa
hlt
sub
fwait
hlt
enter
pop
add
loope
movsx
mov
cmovs
cwde
mov
xor
cmp
mov
sub
jnp
test
dec
sub
mov
dec
ret
bound
popf
out
leave
iret
mov
add
scas
pop
(bad)
sar
test
jmp
or
mov
xchg
mov
aaa
lahf
gs
fisttp
xchg
mov
pusha
shr
mov
push
(bad)
pop
and
dec
inc
mov
add
adc
out
sti
ins
xchg
ds
stc
test
pop
jae
push
xchg
das
in
ins
lahf
sub
cld
push
call
adc
out
push
and
adc
jo
sar
jmp
adc
inc
lock
psrld
(bad)
cs
mov
ja
out
cmc
xchg
add
repz
mov
mov
inc
sbb
lea
movs
sub
push
bound
jb
stos
xchg
rcr
xlat
and
shld
sbb
test
xchg
test
pop
adc
fdivr
pop
push
xor
push
xchg
cli
popa
ret
dec
(bad)
bound
cld
mov
xlat
js
fsub
add
sar
xor
push
aas
cmps
xchg
call
or
sbb
cmp
cdq
jmp
mov
movs
inc
push
xlat
call
or
xchg
xchg
dec
(bad)
push
cs
mov
sti
pop
add
cmc
int
leave
js
xor
jb
mov
popf
outs
test
pop
pop
push
sti
icebp
nop
daa
aad
dec
into
xor
clc
mov
mov
mov
clc
xchg
test
add
jecxz
arpl
cmps
test
cdq
xchg
stos
fcom
lock
inc
push
xor
push
ror
sub
push
ins
pop
rol
cmp
cmp
fisubr
push
movs
imul
xor
out
xor
add
ins
mov
cmc
(bad)
cmp
repz
loop
push
and
push
leave
adc
fwait
inc
(bad)
push
add
sbb
mov
xchg
ins
add
(bad)
pop
dec
mov
cmps
jp
mov
pop
push
scas
dec
sbb
sub
or
fiadd
and
sbb
jle
cs
push
or
loope
cmps
xchg
imul
mov
data16
mov
pop
retf
ret
inc
popf
jp
jb
sar
out
mov
fisttp
jmp
stos
cmp
test
imul
xchg
and
adc
pop
mov
sti
fisttp
mov
cmps
xlat
js
sar
aad
mov
ins
jmp
lods
adc
shl
sbb
in
mov
inc
jno
pop
jbe
sbb
outs
jp
mov
jnp
adc
ds
data16
xor
mov
movs
aas
push
(bad)
fcom
xchg
test
je
add
test
or
imul
inc
xor
cmp
test
sub
mov
fmul
sti
aad
fucomi
mov
xchg
cld
jecxz
pop
pusha
lea
mov
jnp
jne
je
lahf
jae
jecxz
mov
je
popf
dec
jmp
dec
shl
mov
movs
imul
cld
pop
sbb
mov
push
push
xchg
or
es
ret
sbb
cmp
(bad)
adc
daa
xor
mov
repnz
mov
adc
mov
iret
jae
lods
mov
push
adc
jne
out
and
test
or
aaa
push
add
ds
mov
push
jp
mov
(bad)
adc
loope
mov
rcr
mov
retf
leave
add
push
lahf
bound
dec
or
inc
pushf
push
ret
jge
or
rol
push
(bad)
xchg
jae
push
(bad)
jle
xor
mov
ret
shl
lods
push
xchg
ss
fst
jno
jns
addr16
sub
sbb
cs
or
rcl
push
dec
movs
stc
shr
sti
cmp
lods
ds
xchg
and
mov
cmp
outs
pop
bound
mov
js
imul
adc
sbb
pop
loope
push
fld
fisub
jle
ds
mov
mov
mov
adc
jle
addr16
sub
push
aas
sar
retf
les
arpl
jle
adc
dec
hlt
push
(bad)
js
sbb
lar
push
rol
mov
mov
neg
jo
add
into
adc
fcom
jb
cli
mov
fwait
mov
mov
aas
or
arpl
dec
push
mov
xor
mov
jae
mov
call
sub
inc
add
jge
in
out
sub
retf
(bad)
fild
xor
in
(bad)
mov
pop
popa
mov
add
mov
mov
mov
(bad)
xchg
pop
add
cmp
out
rol
bnd
mov
add
jo
sbb
dec
mov
add
mov
cmps
mov
in
push
das
out
in
into
dec
pop
xlat
sbb
mov
stos
rol
xor
into
in
in
adc
cdq
outs
cmp
rcl
jnp
in
aaa
sbb
xchg
shl
add
dec
fucomi
dec
ja
mov
retf
int
cmp
dec
shl
popa
js
sub
inc
retf
daa
cmc
push
arpl
mov
imul
popa
mov
jp
into
(bad)
jno
or
mov
js
jecxz
movs
and
adc
dec
xor
js
mov
mov
js
imul
jmp
mov
test
scas
int3
or
pop
jns
neg
dec
pop
rol
iret
in
in
sub
and
repz
imul
mov
call
aam
sub
jns
xchg
mov
stos
leave
out
push
sbb
std
scas
mov
sub
popf
xor
mov
dec
mov
(bad)
mov
push
sub
int
sub
lahf
xlat
push
sub
or
loop
pop
cmps
jb
test
xor
out
mov
pop
dec
push
adc
xor
arpl
sub
call
hlt
jge
add
cmp
mov
sbb
lock
(bad)
sbb
lds
and
and
rcr
jno
pop
adc
xchg
dec
mov
pushf
jo
mov
mov
push
inc
or
movs
pop
(bad)
sub
adc
leave
pop
mov
mov
jecxz
push
or
mov
inc
push
out
xchg
cmp
push
rcr
xchg
pop
inc
mov
test
xchg
dec
stos
rol
in
add
sub
xchg
push
dec
and
sti
mov
into
sti
mov
xchg
mov
outs
sti
dec
pop
rol
cmp
inc
jo
push
mov
xchg
xchg
push
arpl
push
scas
mov
mov
loopne
out
cmp
sti
xlat
dec
sub
pop
jl
adc
pop
out
pop
fbld
and
fst
add
mov
loope
dec
stos
not
sbb
enter
mov
cmps
dec
push
cmps
push
xor
retf
cmp
and
fidiv
xchg
lods
hlt
lock
stos
(bad)
adc
cmp
iret
popf
loope
sti
jge
sbb
fdiv
jecxz
cli
jecxz
mov
imul
mov
repz
cmp
(bad)
imul
cdq
xchg
add
mov
cli
jb
mov
stc
mov
hlt
rcl
fiadd
pop
ins
mov
ins
clc
mov
jo
inc
sbb
jne
cmc
in
loop
cmp
mov
in
test
inc
popa
mov
and
scas
xor
or
shr
lock
pop
loopne
xchg
js
jno
mov
das
adc
dec
jmp
(bad)
hlt
es
and
loopne
xor
int
and
mov
cmc
clc
pop
cs
jp
or
sbb
ins
xchg
sbb
scas
aaa
inc
xor
jle
and
add
inc
mov
(bad)
scas
jmp
hlt
lea
jmp
add
xchg
mov
push
add
lods
mov
cs
mov
sub
in
or
js
aas
in
and
adc
jge
xchg
nop
rep
sub
es
sub
bound
lods
movs
sub
dec
cs
sub
mov
fimul
xor
push
pop
or
sti
mov
push
sub
ins
mov
out
les
add
sar
pop
je
movs
test
aas
push
sbb
mov
in
mov
adc
adc
sbb
test
leave
dec
mov
xchg
or
cmp
jmp
cwde
ss
mov
imul
cmp
lods
ret
add
int3
inc
add
push
pop
adc
mov
jbe
mov
into
xor
or
movs
jle
in
ret
adc
adc
enter
or
jge
je
xor
cwde
dec
pop
cmc
aad
jg
pop
or
jns
sub
adc
adc
mov
sti
rol
test
lods
loope
mov
mov
or
push
imul
mov
repnz
inc
lods
repnz
pop
xchg
fistp
je
jmp
test
fstp
sub
outs
fcmovu
stos
dec
jg
hlt
push
cmp
outs
outs
fisub
stos
pusha
pop
xchg
into
fs
movs
xchg
lahf
test
jecxz
mov
and
mov
xchg
jl
retf
jae
and
jnp
mov
push
xchg
jbe
cdq
(bad)
and
cdq
xchg
ss
sbb
dec
pop
(bad)
fsubr
cmc
push
inc
add
pop
push
mov
in
das
jbe
xchg
daa
loop
int
jo
ret
bound
cmp
mov
cmp
sub
jl
lea
int3
dec
mov
enter
test
movhps
addr16
ins
(bad)
into
sub
sub
and
or
dec
push
cmp
sub
mov
push
cmp
mov
daa
mov
fimul
sbb
addr16
mov
aaa
mov
out
retf
arpl
cmp
mov
cmp
ror
(bad)
jno
mov
mov
jno
jo
and
add
add
ja
push
cwde
aaa
and
push
cmp
les
cmp
dec
das
sbb
xchg
cld
push
sub
enter
and
inc
outs
mov
jmp
scas
pop
es
(bad)
cmp
pop
je
sbb
push
das
inc
lahf
retf
out
cmp
in
jb
test
adc
imul
sbb
jecxz
mov
sub
add
dec
mov
sub
mov
cmps
outs
push
or
and
pop
aad
push
sbb
mov
int3
xor
inc
jns
movs
fs
adc
add
test
sti
inc
jbe
ss
xchg
cmp
push
es
ret
push
test
jp
xchg
xor
or
fisub
and
imul
mov
xor
mov
inc
pop
daa
test
xor
jecxz
std
into
in
lods
iret
pop
addr16
fldenv
cmp
jle
rcr
dec
push
inc
ds
inc
cmps
js
out
adc
and
(bad)
cmps
cmc
leave
or
mov
into
je
cld
loop
dec
push
push
or
std
fimul
(bad)
xchg
adc
rol
pop
push
jmp
mov
pop
add
sbb
or
daa
lahf
and
sub
addr16
sar
adc
mov
retf
pop
arpl
fst
into
mov
cmps
dec
push
in
mov
in
push
add
or
inc
lods
sub
push
mov
call
fbld
push
ret
xchg
je
addr16
fs
push
sbb
sub
jno
add
(bad)
xlat
mov
sub
outs
int
mov
inc
in
push
into
mov
or
fidiv
in
dec
bound
inc
(bad)
mov
test
aaa
push
cli
aad
movs
mov
jl
aam
test
inc
lahf
std
mov
mov
cvtps2pd
mov
pop
adc
mov
(bad)
repnz
cmp
push
outs
je
popa
(bad)
jae
lds
xor
xchg
sbb
ror
cmp
gs
lahf
cld
bound
mov
pop
add
int
add
xchg
add
(bad)
cmc
jmp
sub
mov
arpl
imul
mov
rol
adc
ret
nop
sub
push
sahf
cwde
ror
(bad)
push
leave
das
popa
call
or
imul
scas
push
stos
dec
int3
mov
mov
or
imul
xchg
fbstp
out
out
adc
test
jno
cwde
inc
xlat
sub
inc
fdiv
pop
lahf
jmp
cli
cmps
xchg
lods
movs
cmp
pop
and
add
cmps
mov
aad
adc
pop
ficomp
dec
hlt
adc
pop
bound
js
cdq
inc
(bad)
cmp
nop
pop
sub
push
inc
lahf
call
and
mov
dec
pop
sbb
push
inc
retf
leave
mov
push
pop
fucomp
push
sub
cmp
das
int3
xchg
nop
push
mov
and
add
out
push
(bad)
push
loope
fsub
mov
stc
push
pop
dec
mov
mov
and
inc
fs
mov
push
and
xchg
mov
arpl
mov
cmp
xor
dec
sub
mov
jge
add
jo
and
and
dec
cmc
inc
adc
retf
test
ins
(bad)
in
leave
adc
fcmovu
addr16
out
imul
sti
mov
fwait
cdq
add
loop
(bad)
push
in
imul
and
jbe
in
mov
push
mov
imul
fsub
jns
mov
push
cmps
dec
fisub
xor
mov
sub
cld
push
aam
hlt
(bad)
sub
jns
cwde
cmc
in
in
adc
push
ror
mov
mov
pop
(bad)
sub
add
mov
fsubr
retf
outs
cmp
clc
mov
ret
push
dec
not
lahf
hlt
mov
mov
jmp
fdecstp
pop
push
addr16
push
jg
and
fs
xor
jecxz
sbb
push
sub
sbb
test
sub
mov
dec
cli
xchg
mov
mov
sub
sbb
sub
aam
in
icebp
jmp
in
fild
lea
test
pop
bnd
sbb
jno
inc
data16
ror
and
call
mov
mov
cmp
lea
inc
movs
repz
call
push
add
out
sbb
inc
sar
retf
cmp
mov
imul
test
ficom
jl
sub
push
std
cdq
sbb
mov
inc
sub
xlat
rol
pop
lds
adc
pusha
ins
or
mov
inc
pop
jecxz
mov
pop
pop
mov
adc
push
mov
mov
push
jno
pop
mov
ds
ror
cli
jnp
jb
fwait
push
mov
lock
push
arpl
aam
pusha
ss
mov
sti
sub
push
fld
push
xchg
iret
mov
jbe
xchg
lods
loop
pop
and
iret
stos
retf
fidiv
addr16
adc
leave
adc
in
cmp
or
test
inc
dec
idiv
mov
jnp
out
sbb
mov
lods
inc
inc
imul
pop
mov
fsubr
scas
sub
sub
lahf
sbb
ror
mov
mov
loope
jae
aam
xor
scas
stos
scas
xor
push
sahf
jl
out
adc
xchg
pop
movs
or
mov
jne
xor
inc
(bad)
cmpxchg
pop
jl
cmp
ins
sbb
(bad)
cmp
and
cmp
pop
mov
test
mov
sub
loop
jmp
fidiv
call
cld
ins
jmp
(bad)
cmp
sub
inc
xor
cmp
rcr
test
aad
and
pop
mov
push
xor
jns
mov
pop
jnp
cmc
in
add
jge
adc
stos
xchg
jo
inc
xchg
ins
ret
jmp
nop
loopne
jl
inc
and
mov
inc
aas
test
out
mov
addr16
imul
xor
pop
jl
mov
pop
and
and
ins
or
or
add
in
mov
into
add
and
sub
stc
aaa
addr16
add
jge
sbb
(bad)
pop
pop
inc
sti
imul
out
sbb
mov
sub
dec
mov
in
popf
out
sub
jbe
adc
out
je
sti
mov
icebp
test
pop
cmc
mov
jnp
mov
push
push
add
lock
sbb
sbb
mov
and
or
push
push
xor
jle
push
test
imul
xchg
jne
inc
mov
scas
retf
ficomp
and
add
inc
push
stos
retf
ja
cmp
cmp
push
rcl
pop
sbb
xchg
lahf
or
pop
jmp
ret
imul
jp
push
stc
add
stos
inc
dec
xor
xchg
sbb
mov
pop
dec
dec
mov
xchg
iret
xchg
popf
push
jnp
js
ret
shl
iret
test
mov
call
pextrw
xor
xchg
inc
push
fdivr
in
(bad)
push
add
xchg
int
pop
add
inc
iret
stc
inc
inc
rcr
imul
push
scas
clc
std
push
jb
push
inc
es
mov
int3
xchg
lea
cmp
movs
inc
pop
out
sub
or
addr16
stos
cmp
and
cmp
fcmovnbe
inc
jb
pop
xchg
cmp
mov
jge
hlt
mov
fisub
dec
loop
or
xor
xchg
or
inc
addr16
fist
jecxz
and
push
ret
push
push
mov
push
cmp
mov
adc
sub
scas
inc
lahf
daa
fild
aas
cmps
test
popf
clc
mul
rcl
inc
adc
in
inc
je
pop
mov
int3
cwde
jb
popf
sbb
adc
xlat
xor
frstpm(287
inc
or
aaa
int
(bad)
add
icebp
jo
push
sahf
das
int3
inc
adc
inc
lahf
push
adc
push
jp
xor
fsub
dec
mov
xchg
sbb
idiv
jge
data16
adc
xchg
stc
pop
ins
jecxz
outs
sbb
out
call
repz
mov
mov
shl
mov
mul
or
int
jmp
aam
retf
push
test
popf
adc
fidivr
fild
mov
sbb
icebp
xchg
jnp
ror
and
xchg
xlat
sahf
test
xor
loop
sbb
cmp
ror
jle
sahf
jp
les
js
mov
xchg
mov
(bad)
sahf
pop
and
gs
jae
pop
push
sahf
jae
inc
adc
mov
das
out
jne
add
xor
sub
push
cmp
popa
jbe
mov
cwde
ins
mov
pop
(bad)
loope
mov
bound
or
sub
add
stos
imul
mov
jno
and
shl
xor
push
dec
push
xor
test
fnstcw
fcmovnbe
call
xchg
cmp
cmp
sbb
inc
push
push
xor
pop
cmps
lock
push
adc
popf
mov
in
push
ret
arpl
or
fmul
inc
and
iret
js
cli
mov
rcl
pusha
std
test
outs
jmp
out
shl
dec
aaa
js
jb
xor
nop
sti
es
cwde
push
stos
fucomp
pop
mov
xchg
movs
adc
aad
mov
mov
idiv
sub
jo
not
(bad)
xor
retf
sub
mov
loopne
ret
lea
cli
cld
repz
int3
cmps
out
popa
mov
xor
popf
fwait
out
movs
aam
iret
in
xor
arpl
out
adc
jne
mov
xchg
add
std
xchg
das
jo
xor
jle
movs
sahf
mov
jmp
loop
fucom
imul
cmp
mov
xor
mov
xchg
retf
push
dec
cmps
mov
mul
inc
mov
sbb
pop
popa
lahf
pushf
xor
shl
imul
dec
push
push
stos
clc
cmp
retf
cmps
add
leave
sbb
and
and
or
mov
out
mov
jg
sahf
iret
arpl
mov
mov
ret
or
stos
enter
jbe
in
repz
mov
gs
(bad)
jno
out
xchg
and
push
mov
cmp
mov
dec
gs
in
popa
ins
clc
xchg
bound
pop
cmp
pop
sub
adc
dec
add
sbb
stc
jmp
add
ret
fs
bound
pop
jecxz
sbb
data16
shl
daa
fistp
jl
retf
fidivr
or
push
inc
(bad)
hlt
popf
out
(bad)
xchg
xchg
lock
test
test
outs
mov
fcomp
rcl
push
xchg
ss
add
jne
add
sub
ja
call
outs
aas
fsub
js
cmp
adc
jb
mov
push
ds
mov
lds
and
mov
iret
inc
inc
and
int3
iret
sub
outs
shl
hlt
dec
popa
pop
cmp
lods
mov
dec
loope
dec
adc
mov
std
dec
xor
or
sbb
push
clc
sub
xchg
add
movs
call
dec
jbe
inc
dec
xchg
or
inc
arpl
fs
in
cld
pop
mov
pop
push
inc
cmc
mov
sub
pop
movs
inc
mov
push
stos
aam
clc
loope
xor
inc
jl
test
stos
fbld
and
mov
cmc
jne
xchg
enter
and
dec
(bad)
xchg
lds
sub
xchg
bnd
out
out
fsubp
xor
adc
enter
xlat
push
push
sbb
pop
fucomi
jnp
cli
nop
add
pusha
rol
jae
xchg
call
out
mov
cmp
push
or
shl
adc
push
dec
es
fsubr
aaa
or
jne
cmp
xlat
mov
sbb
mov
adc
and
arpl
or
arpl
mov
xchg
xchg
rol
inc
inc
inc
pop
aad
(bad)
out
imul
mov
in
mov
js
into
adc
in
push
inc
pop
cmp
ins
add
mov
aas
mov
mov
iret
daa
loopne
fs
(bad)
push
pop
xchg
cmp
cmp
mov
sti
mov
nop
rcr
outs
outs
mov
loopne
out
sub
stc
sahf
js
ret
xchg
xor
ret
lods
pop
push
adc
cmc
push
les
dec
into
les
jne
icebp
aad
jg
sbb
les
xor
dec
add
add
(bad)
mov
and
test
add
xor
sub
ss
sbb
aam
outs
imul
adc
xchg
and
xchg
mov
sub
add
dec
dec
int3
test
pop
push
xor
test
nop
test
repz
add
mov
mov
sub
adc
movs
xchg
dec
xchg
mov
mov
in
lea
cs
cmp
outs
mov
dec
sti
sub
stos
jae
push
cld
mov
fadd
outs
inc
or
loope
leave
out
mov
jle
xor
xchg
cmps
test
jae
stos
aam
and
fxch
out
aaa
cmps
das
fs
pop
push
hlt
into
cld
sub
mov
cmp
rol
inc
ds
push
inc
adc
adc
xchg
xlat
push
inc
and
xor
dec
adc
pop
ret
ds
xor
out
outs
shr
xor
stos
or
test
movs
mov
sbb
popf
scas
cmp
pop
cmp
adc
cmp
cmp
mov
rcl
mov
sbb
inc
mov
push
jns
sub
ror
xchg
clc
loop
jg
fwait
pop
(bad)
push
es
sub
std
ins
clc
cli
jmp
out
ds
cmp
sbb
mov
lods
push
cmp
addr16
(bad)
and
and
pop
movs
and
push
push
out
shl
dec
or
add
into
jns
push
(bad)
or
xor
cmp
repz
jge
cmps
mov
inc
mov
dec
std
iret
lock
push
pusha
pushf
pop
sub
lock
or
push
ins
jecxz
add
pop
inc
dec
nop
jmp
add
adc
pop
fs
adc
push
inc
adc
sbb
add
das
push
jp
mov
inc
rcl
adc
jle
adc
cld
xchg
movs
out
jl
jnp
std
mov
pop
jne
push
push
xchg
fiadd
push
in
loopne
inc
rol
xor
cs
sub
add
je
cmc
jnp
adc
retf
mov
lds
cs
push
mov
push
xchg
xchg
pop
sbb
cmp
add
pop
inc
dec
dec
cli
cmovnp
ret
jp
cmp
cmp
mov
and
aas
popf
xor
push
sbb
popf
sahf
push
xor
or
aas
fcmovbe
pop
mov
dec
in
rol
push
cmp
jno
lock
xor
sub
pushf
bswap
fild
mov
or
sub
push
(bad)
lds
sahf
dec
pop
rcl
mov
loopne
xor
mov
and
mov
xor
(bad)
and
(bad)
gs
sub
bswap
out
pop
mov
inc
outs
inc
mov
cld
cmp
jmp
mov
inc
mov
jb
xor
jmp
jmp
cmp
das
xchg
add
aaa
mov
or
out
cmp
push
rol
sbb
je
adc
outs
addr16
pop
push
xchg
and
sti
lahf
sahf
pop
xchg
ins
scas
fbld
mov
xor
sbb
cdq
pop
ds
xchg
sbb
ins
sub
mov
imul
and
or
shl
cdq
mov
inc
cli
rcr
scas
test
test
arpl
repz
cmp
add
push
iret
push
adc
fnsave
ror
cmp
ja
shl
mov
mov
cmc
mov
or
mov
ins
xchg
test
pusha
ins
es
and
dec
in
ror
fisubr
imul
mov
dec
nop
fucom
xchg
cmps
mov
aad
mov
push
lds
jle
std
cmp
cmps
adc
mov
not
xchg
jmp
fidivr
pop
adc
dec
js
mov
sbb
jae
mov
mov
jecxz
mov
dec
inc
jmp
out
sti
es
push
outs
ja
adc
repnz
cmp
sahf
cdq
cmc
sbb
and
mov
(bad)
fldcw
popa
mov
and
sub
cld
std
add
das
push
mov
fimul
jmp
mov
dec
inc
rol
mov
daa
cmc
mov
lds
icebp
adc
xlat
sub
jecxz
in
lock
push
push
pop
push
scas
mov
mov
sub
dec
sbb
xchg
xor
mov
mov
mov
xchg
repz
jmp
jne
push
adc
add
and
push
jo
mov
and
mov
hlt
clc
(bad)
adc
mov
jp
push
dec
icebp
mov
dec
push
and
mov
scas
pop
inc
inc
jp
jp
jmp
and
pop
(bad)
mov
adc
mov
ins
cmps
cdq
xlat
push
fs
and
xor
es
movs
push
cmps
adc
in
fisub
mov
xchg
jno
dec
and
jnp
cdq
leave
sub
arpl
xchg
cwde
fdiv
pop
popf
fwait
mov
jb
scas
mov
or
inc
xor
xchg
jns
iret
ja
mov
movs
in
sub
push
and
lods
in
or
call
mov
cmp
repz
ins
sub
jns
movs
out
loope
cmp
test
sbb
xor
xchg
or
cmp
stc
lea
addr16
xchg
xor
mov
cs
rcl
sub
xrelease
rcl
xor
imul
retf
adc
push
pop
push
xor
adc
mov
pop
and
and
outs
setne
jne
sub
push
dec
sub
lds
mov
sub
sti
rcr
add
in
dec
mov
cs
lods
dec
mov
adc
push
or
aaa
dec
or
ret
sub
jle
stos
into
ins
ja
sub
xor
(bad)
jmp
inc
ret
push
stc
xchg
es
rol
in
cs
(bad)
sti
in
xchg
outs
js
retf
inc
nop
rol
push
shl
xchg
aam
jne
movs
sub
das
dec
sbb
iret
mov
cdq
aad
mov
shr
enter
sub
jbe
lods
xchg
popa
(bad)
xor
sub
push
inc
add
mov
inc
mul
push
adc
pusha
add
or
xchg
les
xor
je
xor
sub
sbb
arpl
mov
cmc
clc
mov
jmp
fwait
xchg
mov
and
xchg
adc
retf
lods
(bad)
mov
xlat
xchg
adc
push
sar
pop
not
dec
xchg
cmp
jo
stc
push
xchg
xchg
stos
push
xor
icebp
push
push
hlt
shl
jo
mov
mov
jle
dec
ja
inc
push
pop
dec
inc
jl
add
lock
mov
loope
mov
sahf
push
adc
sub
xor
mov
mov
and
ds
xchg
push
xor
push
rcl
lods
ja
rol
call
mov
loop
adc
(bad)
add
inc
in
push
in
(bad)
dec
addr16
mov
out
stos
loope
pop
sbb
or
push
jle
ins
pop
adc
cld
stc
in
movs
aaa
sub
fdivr
mov
push
mov
add
loop
cmp
call
fldenv
mul
xchg
addr16
js
and
pop
and
pop
sbb
xchg
mov
push
sbb
pop
js
ds
fistp
push
inc
mov
adc
mov
repz
cdq
ds
mov
aam
cdq
leave
or
adc
cs
mov
imul
dec
mov
jae
inc
arpl
adc
mov
push
pop
and
and
or
leave
mov
or
mov
xor
dec
and
xchg
xchg
inc
stc
mov
cwde
sub
fcomp
pop
push
push
or
shl
in
pop
in
popa
out
or
jp
cmp
aam
sbb
cwde
pop
rcr
mov
jge
xchg
rcl
and
and
in
test
lods
jns
out
jg
(bad)
mov
call
inc
cs
dec
sub
push
rcr
fild
repnz
mov
dec
movs
cmp
cli
mov
iret
pop
in
mov
dec
adc
inc
pusha
push
xlat
rcr
sbb
ins
dec
mov
js
cdq
push
inc
push
xor
daa
lock
xchg
push
ins
iret
adc
and
cdq
in
loopne
push
jle
ret
daa
call
inc
mov
push
pop
stos
jo
and
imul
cmp
imul
and
in
mov
call
iret
push
push
je
xlat
(bad)
mov
add
jmp
pop
fld
stc
push
test
aam
fs
retf
psrad
xchg
mov
adc
(bad)
cdq
mov
arpl
loop
hlt
iret
or
dec
jmp
cmps
mov
ins
push
dec
jne
mov
xchg
or
push
retf
dec
scas
pushf
jb
movs
repnz
ret
push
and
fnop
cmc
or
push
pop
fbstp
and
cs
arpl
cmp
add
sub
jo
sti
jnp
push
fsubr
adc
xchg
xchg
xchg
fsub
push
or
mov
sub
or
sub
jbe
or
js
and
mov
sub
rcl
neg
dec
lock
mov
ret
ins
push
lods
int3
popf
scas
sub
or
mov
rcr
test
mov
adc
push
out
dec
and
sub
xor
test
dec
dec
fs
lea
ror
push
push
(bad)
aas
in
lds
aam
mov
jne
mov
jmp
mov
sbb
movs
pop
inc
sub
aam
ret
stc
pop
cmp
addr16
daa
cmc
push
leave
ror
add
push
js
xchg
sub
xor
fst
cmp
mov
call
inc
dec
pop
jp
fs
mul
std
out
inc
jnp
pop
(bad)
js
jl
xchg
dec
imul
lea
and
into
je
mov
in
seta
loopne
dec
in
cld
adc
arpl
push
inc
int3
fisubr
mov
test
and
enter
mov
xchg
mov
sub
jae
mov
sbb
cmp
and
bound
aam
xchg
and
fnstsw
mov
sbb
retf
mov
scas
in
inc
cld
mov
outs
and
nop
mov
hlt
iret
(bad)
scas
or
lahf
outs
xchg
imul
fwait
xchg
push
push
xor
fist
(bad)
int
ds
xor
test
mov
sbb
int3
imul
jl
aaa
test
cmp
fwait
arpl
jnp
sub
das
or
loop
popa
clc
(bad)
rcr
push
dec
ret
mov
push
jecxz
(bad)
cli
sbb
pop
hlt
dec
xor
jb
jecxz
mov
mov
aaa
das
push
scas
outs
jno
pop
ret
mov
pop
jp
push
scas
sbb
rol
inc
sub
fmul
outs
adc
stc
arpl
jecxz
sbb
mov
mov
push
pop
arpl
add
inc
retf
cmp
and
sbb
pop
cli
out
xor
lea
call
xor
jg
mov
inc
ins
fisubr
ficom
test
das
sbb
nop
test
mov
ja
jbe
pop
fs
xlat
inc
stos
sbb
push
mov
sbb
sub
les
xchg
push
cmps
push
jle
dec
push
sti
ins
ret
and
arpl
dec
jmp
jne
cmp
mov
cs
popa
add
sahf
adc
je
xchg
add
cmp
push
cmp
in
pop
imul
xchg
xor
sub
dec
(bad)
xor
test
mov
mov
pop
(bad)
outs
cmp
cmp
test
aam
pop
test
cmc
(bad)
jno
pop
cmp
mov
sahf
cdq
data16
cmp
outs
jbe
imul
inc
in
cmp
or
jmp
push
ror
sahf
mov
push
jle
add
push
rcr
popa
inc
ret
movs
aam
lahf
jnp
test
ret
push
adc
push
cmc
pop
jno
hlt
inc
stos
xor
ds
ret
or
ins
and
xchg
cwde
push
mov
icebp
out
popf
pop
or
sub
test
inc
loop
sub
call
jae
loop
jecxz
or
test
jno
sub
aaa
adc
add
hlt
push
inc
and
and
retf
pop
mov
lods
outs
movs
iret
dec
rcr
cli
rcl
sbb
call
cmps
jge
test
arpl
es
sub
dec
adc
sbb
and
retf
jl
sub
aam
mov
ficomp
stos
ficomp
mov
retf
inc
mov
out
sbb
movs
(bad)
or
xchg
loope
push
leave
je
inc
dec
hlt
loop
or
stc
pop
popa
lahf
call
je
lahf
push
pop
dec
or
addr16
xor
xor
movs
jl
loopne
cmps
adc
fmul
call
adc
ret
cld
seta
js
hlt
pop
mov
pop
sub
mov
mov
push
adc
out
int
repz
or
cdq
(bad)
jmp
xor
jmp
int
sub
xor
inc
or
and
pop
cmp
cmc
adc
das
xchg
hlt
jo
mov
aaa
ret
dec
jle
lock
xchg
out
xchg
icebp
cmp
inc
or
push
into
mov
dec
ret
ret
test
cmp
mov
add
jmp
inc
mov
mov
mov
xchg
push
lahf
and
call
add
repz
sbb
dec
xlat
mov
jge
call
lods
fsubr
sbb
out
cmps
pop
cmp
mov
push
pop
test
repnz
fdiv
inc
ss
ret
fsubp
mov
loope
jae
(bad)
movs
cmp
js
cs
(bad)
(bad)
dec
mov
add
movs
movs
stc
lea
cmps
test
mov
adc
pause
and
icebp
cmp
inc
sbb
sbb
mov
(bad)
jmp
(bad)
(bad)
mov
pop
pop
xchg
lods
fdiv
jp
xchg
add
pop
repnz
iret
shl
mov
mov
in
pushf
cmp
jecxz
add
push
mov
add
jg
xor
icebp
int
pop
xor
loop
add
and
cmp
aad
sar
jo
jle
jnp
pop
inc
or
pop
js
jge
clc
daa
jbe
dec
fidiv
jnp
test
adc
ins
call
push
or
fcom
push
cmps
push
aam
mov
mov
mov
or
jno
inc
jmp
out
or
dec
enter
add
test
rol
jb
sbb
add
inc
xchg
pop
mov
into
test
push
xchg
jle
push
inc
in
sub
cmp
jmp
push
ss
stos
cdq
fidiv
adc
dec
jno
jge
pop
imul
in
jno
das
or
xchg
mov
fidiv
push
sub
aam
jb
pop
inc
cmp
cdq
dec
ja
dec
test
jae
adc
fstp
in
nop
leave
cmp
out
dec
fcmovne
test
cdq
or
popf
push
scas
xor
push
add
jb
data16
add
or
sbb
sub
mov
push
pushf
push
out
jo
addr16
mov
mov
jno
nop
dec
scas
add
out
jmp
sbb
dec
test
imul
push
add
mov
xor
xchg
aaa
lods
sbb
popa
enter
sbb
loopne
mov
add
sbb
pop
push
std
nop
xor
mov
aas
and
dec
ins
mov
popa
inc
test
xor
jbe
sub
inc
add
and
mov
push
movs
cmc
shl
xor
repz
mov
jmp
push
fucomi
mov
addr16
fs
jbe
cmp
lods
leave
jl
nop
sub
inc
or
adc
mov
aam
fsubr
test
push
fsub
leave
sub
push
out
mov
pop
jne
nop
jb
(bad)
mov
loopne
pop
cmp
ins
out
sub
sbb
push
pop
aaa
sbb
push
imul
adc
loop
ret
cld
mov
(bad)
in
adc
xchg
pop
xor
sahf
and
test
or
ja
mov
push
pusha
sbb
enter
daa
or
leave
inc
or
jb
fstp
sub
daa
std
cmp
hlt
mov
gs
out
out
test
sub
inc
sbb
dec
addr16
fwait
inc
je
jmp
inc
pop
add
cmp
xor
loop
loopne
hlt
les
mov
int3
xchg
xchg
lea
xlat
xor
cmps
mov
push
mov
pop
mov
dec
jmp
enter
aaa
test
les
push
cmc
xchg
add
mov
and
push
mov
mov
and
xchg
shr
mov
push
popf
cmp
lods
gs
ret
dec
int3
push
xor
push
jne
movs
and
jecxz
call
femms
test
lea
mov
sub
and
or
pop
ds
movs
sub
mov
dec
jo
fdiv
mov
inc
push
call
jns
test
xchg
adc
adc
xor
mov
outs
cwde
sbb
inc
dec
(bad)
mov
adc
jp
mov
pop
(bad)
pop
idiv
jl
mov
fcmovnb
mov
es
iret
mov
aad
clc
lea
dec
cdq
sub
sbb
stos
(bad)
cmp
xlat
sbb
out
jge
fwait
and
call
push
sahf
pop
jmp
inc
mov
mov
jne
jle
xlat
or
jle
and
rcl
mov
jge
ret
cmp
push
xchg
xlat
jmp
arpl
outs
push
xor
mov
sbb
xor
mov
mov
dec
repz
cmp
push
jno
lea
ins
nop
adc
dec
push
pop
add
or
test
mov
neg
leave
dec
cdq
sbb
pop
adc
push
cld
mov
or
and
or
ja
(bad)
mov
je
sbb
popf
pop
bound
js
lock
xchg
mov
mov
adc
cmps
lods
fwait
push
xchg
imul
push
and
jb
push
mov
pop
mov
int
jnp
fsubr
mul
xchg
aas
and
sbb
out
sub
in
or
xor
xchg
or
inc
aaa
or
jge
mov
jno
in
push
and
inc
dec
or
fadd
cmp
ret
imul
pushf
cmp
jnp
or
cdq
xor
rol
out
bound
stos
(bad)
xchg
pusha
hlt
imul
in
pop
dec
xchg
sub
repz
aad
fucomip
cmp
cmp
stos
les
stos
adc
test
dec
in
ret
fdivp
leave
pop
clc
aam
(bad)
shl
mov
add
or
outs
fbstp
test
call
jbe
xchg
push
dec
(bad)
(bad)
sbb
es
and
sbb
push
cmp
jne
clc
push
imul
cmps
fiadd
fcmove
repz
nop
adc
js
lods
xchg
mov
cwde
jecxz
fmul
imul
cmps
sbb
xor
jns
cmp
popa
sbb
pop
scas
leave
rol
call
mov
(bad)
adc
and
or
sbb
movs
mov
or
pop
pop
xchg
inc
push
mov
mov
idiv
pop
xchg
loope
mov
xchg
push
je
add
sub
fmul
nop
jnp
add
pushf
pop
lods
aaa
cmp
retf
neg
daa
and
aas
cmp
dec
out
stos
stc
pop
sub
frstor
xchg
jge
or
retf
bound
and
jbe
int
pop
jg
cmps
dec
or
adc
sub
mov
cmps
ret
cmovnp
dec
inc
cs
adc
sbb
inc
ja
lods
sub
test
out
mov
dec
mul
mov
adc
test
or
or
sub
call
push
sti
mov
or
jns
pop
cmc
iret
jge
pop
mov
stc
repz
xor
mov
sbb
aaa
nop
pop
sub
call
(bad)
mov
fadd
jl
mov
cmps
aam
retf
or
push
cmp
ss
xor
nop
pop
sub
movs
adc
mov
div
mov
xor
inc
cmp
imul
and
ins
jno
push
dec
xchg
outs
jnp
mov
(bad)
mov
dec
pop
aad
ret
(bad)
rcl
sbb
sar
fsubr
(bad)
xor
sti
xchg
jge
nop
sub
test
pushf
imul
(bad)
jl
int
aam
pop
test
inc
outs
sub
jle
mov
mov
movs
push
xor
mov
out
pop
test
mov
mov
cmovl
mov
adc
xchg
jns
dec
cmc
outs
pop
ins
pop
xchg
cld
pop
add
dec
popa
mov
repz
dec
rcl
(bad)
retf
cmp
jmp
in
shl
out
dec
xlat
scas
outs
mov
and
add
jmp
jmp
and
jnp
push
aam
jnp
dec
sbb
cmp
ret
sub
out
bound
sbb
push
call
and
mov
and
push
mov
jge
add
and
inc
ds
pop
or
pop
and
nop
xchg
fist
(bad)
xor
imul
jb
mov
mov
in
out
and
add
push
iret
ss
fild
jle
or
add
lgs
push
fcom
xor
cmps
sub
scas
adc
iret
call
sar
pop
into
daa
push
nop
or
loop
fbld
test
pushf
daa
xor
loopne
ds
push
cld
mov
pop
jmp
cld
and
lock
sbb
jle
fadd
(bad)
xor
pop
jle
add
or
mov
fisubr
cmp
leave
icebp
mov
inc
in
mov
shl
cmp
or
pop
dec
addr16
cmp
xchg
adc
call
dec
xchg
sbb
push
mov
test
jl
adc
xchg
xchg
jmp
xchg
sub
pop
sbb
in
and
arpl
and
rcr
mov
mov
cmps
xor
mov
sahf
mov
inc
add
int3
stos
movs
adc
js
mov
mov
movs
adc
jnp
call
stos
or
sub
les
xchg
pop
cmp
neg
inc
jns
bswap
sbb
iret
mov
xchg
jne
mov
push
adc
sbb
push
retf
adc
addr16
pusha
push
inc
test
sbb
fs
(bad)
pop
lock
stos
pop
mov
mov
fcmovb
or
repnz
scas
les
imul
sbb
mov
cmp
push
neg
jmp
out
inc
or
and
inc
setge
sbb
jmp
ret
xor
jnp
add
and
(bad)
out
scas
push
xchg
idiv
cmps
int3
mov
jns
and
addr16
mov
mov
adc
shr
sub
mov
jno
pop
(bad)
mov
xchg
mov
sub
int3
stos
data16
mov
pop
cld
fiadd
outs
pop
add
fsub
dec
xor
mov
ror
xor
(bad)
ret
jp
call
inc
dec
aad
in
push
push
retf
xor
(bad)
(bad)
nop
mov
ror
loopne
jg
mov
mov
adc
cld
mov
pop
fwait
fwait
sub
dec
loop
lods
fcomp
fsubr
pop
sub
mov
stos
jg
xchg
frstor
lds
in
mov
(bad)
gs
sbb
lds
xor
cmp
outs
out
xchg
or
xchg
pop
and
stc
mov
jg
push
ja
pusha
push
mov
clc
scas
xor
and
pop
adc
stos
icebp
or
xor
in
mov
xchg
jecxz
scas
push
add
or
xor
test
movs
int3
add
jb
mov
mov
sub
push
jbe
or
xchg
jo
xchg
sub
aad
in
jo
sti
sub
xchg
xor
sub
fdivr
push
aam
jge
sub
push
das
and
pushf
add
xor
pop
outs
sub
fs
inc
ds
adc
cld
fldcw
jle
inc
into
pop
push
int
xchg
push
dec
stc
fist
push
xchg
lods
(bad)
push
pop
fisttp
sub
push
xor
and
and
cmps
fidiv
test
sub
ret
xlat
ret
sub
mov
es
gs
mov
icebp
adc
call
and
sub
fsubr
mov
leave
push
and
jle
xchg
repz
mov
dec
pop
jmp
xor
repnz
int3
adc
xchg
data16
aaa
fsub
cmp
push
test
(bad)
cmp
lods
or
cmp
and
inc
loope
mov
pop
xor
fild
and
mov
adc
xor
mov
movs
and
call
xchg
cmp
pop
sbb
adc
pop
pop
loope
mov
sti
rcl
dec
pop
inc
popf
arpl
(bad)
clc
cmc
nop
ss
cwde
add
test
out
or
push
and
mov
das
loopne
or
push
ds
enter
push
push
jecxz
jle
adc
imul
(bad)
or
je
stc
scas
and
sub
gs
inc
popf
aaa
xor
in
dec
inc
adc
movs
dec
push
popf
jl
cmp
inc
inc
jo
jne
push
push
or
pop
(bad)
fdivr
js
mov
dec
and
xor
mov
push
in
fwait
mov
adc
push
lods
jp
mov
dec
jne
aam
mov
or
call
add
ret
dec
or
pop
rcl
mov
lea
push
sti
fldenv
aam
xchg
mov
push
jmp
xor
xor
movs
in
pop
pop
in
xchg
sti
dec
mov
stc
sbb
nop
sbb
inc
jp
and
xchg
repnz
jecxz
adc
dec
mov
cvtps2pd
inc
ins
pop
ret
(bad)
imul
xor
retf
stos
dec
ficomp
add
loope
add
mov
sti
cmp
cmp
mov
jne
lods
mov
loope
mov
dec
mov
dec
dec
sub
mul
add
iret
fiadd
xchg
cmp
adc
inc
inc
(bad)
push
and
cld
in
arpl
imul
jge
xor
jge
mov
daa
fisttp
aas
or
ins
cli
inc
icebp
sbb
add
dec
imul
mov
fisub
push
adc
scas
sub
imul
mov
dec
mov
mov
(bad)
sub
and
xchg
push
aam
ins
int
jo
retf
mov
dec
inc
loopne
jg
push
bound
dec
mov
je
fnsave
imul
gs
xor
loop
data16
mov
sbb
mov
mov
lea
add
pop
ja
mov
call
mov
shr
and
xchg
push
test
and
push
call
ror
xor
jne
lds
cmp
jge
cwde
push
ror
(bad)
clc
lods
call
pop
cs
pusha
add
mov
clc
mov
mov
push
cld
imul
mov
dec
daa
dec
pop
jae
add
or
inc
(bad)
stos
mov
std
dec
sbb
lahf
xchg
outs
popf
inc
sbb
sbb
adc
xchg
xlat
cmp
xstore-rng
cmps
push
pop
fnstcw
pop
sbb
lahf
in
add
(bad)
stos
adc
add
mov
movs
xor
fs
xchg
mov
(bad)
les
and
fidiv
out
or
and
sub
enter
iret
call
hlt
(bad)
push
mov
xchg
and
lahf
sub
shl
adc
mov
rcl
std
push
mov
mov
mov
mov
sahf
mov
sbb
pop
add
movs
fistp
retf
mov
ret
loop
arpl
add
inc
iret
mov
daa
loop
outs
dec
popf
mov
push
jle
lods
xchg
add
scas
hlt
jmp
imul
aad
repnz
stos
mov
sub
je
ret
push
shl
push
xor
xchg
inc
cdq
addr16
in
pop
inc
sub
lods
inc
stc
hlt
cmp
pusha
mov
pop
add
push
imul
add
aam
stos
stc
push
adc
sar
ss
add
sbb
scas
and
pop
jle
outs
jecxz
lea
shl
inc
sbb
and
xchg
movs
stos
sbb
mov
sub
dec
jle
cli
or
mov
lods
pusha
mov
cli
xor
push
outs
mov
cmp
ror
adc
ins
cdq
push
sbb
pop
jmp
lahf
sahf
mov
(bad)
pop
paddusw
test
push
shl
adc
sti
(bad)
repnz
or
adc
aaa
mov
xchg
mov
jae
ret
adc
leave
xor
pop
cmp
cmp
call
cmp
rcr
lds
sti
(bad)
popa
(bad)
punpcklwd
xor
adc
mov
xchg
mov
scas
push
mov
aas
add
dec
adc
push
push
mov
xchg
test
push
push
js
adc
sahf
mov
push
dec
popf
outs
retf
mov
mov
cmp
mov
loopne
and
mov
nop
xchg
stos
loope
add
jecxz
fcom
pop
mov
inc
fidivr
jne
inc
scas
add
sahf
das
in
xchg
and
fldenv
xchg
mov
push
cmps
push
in
imul
mov
les
push
loopne
adc
inc
outs
dec
mov
cdq
sbb
in
(bad)
retf
addr16
es
pusha
cmp
mov
lds
in
cmp
nop
jne
and
adc
xchg
sub
adc
push
xchg
mov
ret
addr16
ja
add
imul
mov
daa
xchg
test
mov
(bad)
jae
arpl
xchg
pushf
pop
jle
push
mov
or
jmp
enter
(bad)
sbb
sbb
test
xchg
imul
or
movs
jbe
fsub
movs
dec
lods
pop
xchg
mov
aam
pop
xor
daa
push
fwait
push
std
mov
mov
out
mov
imul
(bad)
mov
dec
rcr
push
rcr
lds
jp
stos
adc
and
dec
ins
loopne
pop
iret
adc
in
xor
bound
pop
jno
jg
mov
mov
test
add
or
push
cmps
test
push
les
fs
push
or
sub
or
pop
pop
cmp
mov
int
daa
jl
cmp
jns
outs
in
xor
mov
pop
pop
out
pop
mov
cmp
ret
inc
jno
pop
or
test
js
lahf
sbb
stc
call
shl
(bad)
pop
jbe
(bad)
ficom
sub
mov
retf
dec
pop
sbb
stc
ret
pop
push
or
sub
and
add
mov
and
into
mov
(bad)
jnp
pop
cmovg
mov
jl
cmp
pop
neg
(bad)
xchg
xor
inc
push
push
es
popa
movs
cld
add
(bad)
jnp
jo
into
dec
jb
cld
in
or
(bad)
fsub
xchg
mov
lock
xor
push
scas
loopne
popf
and
xchg
mov
popa
movs
adc
enter
push
mov
sbb
xchg
push
inc
pop
cmp
xor
gs
push
repnz
mov
int
ret
sbb
mov
ins
(bad)
out
and
push
fisub
pop
ret
stc
push
std
icebp
lds
iret
cs
or
aam
in
mov
or
mov
loop
enter
and
inc
scas
shl
dec
lds
imul
pop
aaa
test
movs
stos
push
mov
add
addr16
lock
dec
js
in
daa
jecxz
es
jp
cmp
stos
not
dec
ficomp
lods
dec
mov
and
ret
shl
dec
xor
cwde
push
sub
dec
std
adc
std
jne
add
retf
and
jp
push
or
xchg
or
xchg
rol
imul
xchg
sbb
pop
mov
sub
ret
cmp
pop
adc
cli
retf
sub
xor
inc
fld
xchg
or
mov
scas
jle
das
inc
mov
rol
pop
mov
jmp
mov
(bad)
pop
or
add
fucomi
sar
pop
or
pushf
sub
test
mov
pop
jb
mov
adc
movs
dec
bound
sahf
jne
adc
dec
das
out
and
jns
mov
aas
or
rcl
(bad)
lock
dec
fisttp
sbb
xchg
mov
mov
inc
pop
mov
push
push
add
sub
sub
mov
sub
xchg
nop
or
outs
jno
mov
test
fnstenv
out
dec
push
dec
mov
xor
inc
sbb
scas
push
inc
push
les
in
xor
leave
test
jecxz
cs
out
aaa
pop
loope
xchg
adc
std
push
ret
je
push
sub
inc
mov
push
popa
in
lock
sbb
ret
sub
enter
push
jp
sub
sub
(bad)
test
mov
xor
out
sbb
pop
push
stos
mov
adc
dec
cwde
cmp
and
cmps
xchg
and
je
push
xor
je
jg
mov
(bad)
mov
test
imul
xor
sub
rol
mov
cwde
dec
(bad)
je
jne
mov
pop
(bad)
or
mov
push
repnz
imul
aaa
ja
movs
aad
inc
aam
scas
in
inc
xor
inc
inc
mov
xor
or
mov
xlat
stc
cmp
pop
popa
daa
jns
mov
popa
adc
mov
jo
ins
pop
mov
es
add
jo
imul
push
mov
loopne
pusha
iret
retf
jae
mov
mov
mov
lea
(bad)
scas
fadd
mov
aad
adc
loopne
imul
adc
lods
push
dec
rcr
mov
cmp
xchg
pop
shr
xchg
lods
inc
das
add
push
into
pop
imul
cmp
jne
fnstsw
xchg
cmc
cmp
enter
add
mov
out
inc
mov
rcr
pop
sub
js
(bad)
out
adc
popf
pop
mov
adc
cmp
xchg
mov
idiv
dec
xchg
imul
(bad)
js
inc
fmulp
mov
sub
jne
mov
shl
bnd
daa
push
or
sahf
add
imul
loopne
(bad)
arpl
xchg
aas
mov
movs
hlt
jne
cwde
test
(bad)
xchg
imul
mov
cmp
out
jmp
rcl
stos
lock
adc
(bad)
daa
repz
jp
sub
rcr
push
fbld
out
and
and
cmp
popf
(bad)
push
ins
ss
xor
(bad)
retf
test
in
and
sub
mov
repz
cmp
xchg
mov
jbe
rol
aaa
setp
lock
mov
movs
mov
lahf
iret
rol
and
or
pop
mov
lea
mov
sbb
sbb
mov
add
pop
into
xlat
call
int
jmp
and
adc
pushf
mov
xchg
and
imul
fsubp
shr
and
jns
dec
jmp
cmps
jne
sub
ret
sub
mov
sbb
mov
jmp
sub
(bad)
push
and
retf
xor
shl
jmp
fs
sbb
cmc
mov
xchg
xchg
int
std
inc
aad
jbe
aaa
mov
test
mov
jns
or
mov
sub
fst
xor
mov
hlt
lahf
push
je
into
(bad)
int
add
xchg
push
mov
push
ins
es
xchg
lods
cwde
add
add
sbb
jnp
add
ins
mov
or
gs
push
mov
sbb
add
jne
imul
iret
or
pop
pop
mov
and
icebp
xchg
xchg
gs
jg
aas
sbb
adc
imul
and
mov
outs
adc
in
mov
sahf
rcr
mov
mov
jb
sbb
popf
mov
or
inc
xchg
lods
sbb
or
inc
neg
ret
inc
fld
mov
repnz
fs
add
in
mov
popf
fidivr
sub
mov
dec
jle
mov
jmp
dec
dec
scas
out
or
js
adc
(bad)
popa
inc
pop
xchg
sbb
movs
mov
push
sbb
inc
sbb
sar
push
call
xchg
hlt
imul
inc
arpl
mov
pop
or
and
out
mov
xchg
sbb
jae
adc
xchg
gs
mov
aas
sub
mov
push
(bad)
sti
out
push
xor
je
in
jo
(bad)
(bad)
lods
mov
pop
sbb
and
rcr
hlt
jmp
lods
or
and
scas
cmp
or
pop
pop
push
jecxz
push
cmp
mov
pusha
mov
add
or
pushf
lods
adc
pop
test
add
addr16
dec
xchg
adc
(bad)
mov
inc
mov
(bad)
clc
loope
ret
nop
fld
add
sub
sbb
fisubr
ror
and
les
push
xlat
sbb
push
f2xm1
jno
dec
and
fs
mov
xor
and
pop
lahf
sub
add
ffreep
and
jnp
into
lea
sbb
(bad)
fcom
jns
xchg
pop
or
lods
rol
nop
mov
lea
mov
push
adc
jo
or
out
and
nop
mov
mov
ret
jmp
test
push
dec
(bad)
hlt
hlt
mov
and
and
call
cmps
int3
add
pop
js
int3
pusha
sbb
mov
mov
push
push
add
(bad)
pusha
(bad)
mov
push
mov
dec
scas
jl
jge
outs
daa
sub
(bad)
lods
sahf
mov
je
pop
ins
xchg
sar
int3
jp
call
test
sar
shl
movs
sbb
or
xor
mov
icebp
sub
push
pop
lods
dec
sbb
imul
pop
mov
sbb
dec
pusha
jle
aad
cmp
in
dec
into
push
sub
inc
popa
(bad)
movs
(bad)
xchg
cmc
sar
mov
pop
retf
and
sbb
jl
mov
fs
shl
lds
es
add
lds
dec
mov
lds
dec
movs
mov
push
lea
js
fidivr
sub
pushf
ss
dec
adc
mov
inc
mov
dec
sbb
(bad)
outs
push
push
dec
adc
or
pop
dec
pop
push
lods
adc
rcr
enter
jne
add
jne
sbb
lods
push
and
dec
int
stc
js
inc
or
sub
imul
retf
push
adc
sub
sar
xchg
icebp
inc
test
inc
test
inc
adc
in
jae
mov
neg
std
mov
fadd
mov
fwait
mov
rcpps
xchg
int3
dec
data16
outs
mov
leave
mov
xor
xchg
or
inc
jl
pop
jge
mov
ret
jmp
and
test
mov
sbb
cmp
lods
outs
(bad)
stc
pop
inc
fbld
rol
or
dec
jp
cs
jmp
call
or
enter
mov
retf
jbe
pop
or
push
add
dec
xor
xor
push
mov
ja
pop
push
fucomip
ss
sbb
push
aad
sbb
lock
cwde
ja
in
xchg
leave
xchg
or
and
sahf
fild
cmc
in
push
gs
stc
cmp
cwde
das
cmp
lahf
cdq
add
xchg
pop
mov
aas
je
cli
movs
popf
push
xor
imul
and
cs
scas
aad
pop
mov
mov
inc
aas
pop
jb
data16
arpl
gs
jl
sti
mov
jmp
xor
cld
ins
and
cmp
pop
sbb
jle
lea
add
xor
mov
sbb
inc
into
inc
loope
stos
cld
push
add
outs
stos
inc
fst
push
xor
leave
xor
jno
xor
mov
test
sub
addr16
imul
xor
or
push
popf
mov
icebp
mov
and
xchg
sar
scas
rol
dec
xchg
mov
jg
or
std
lock
mov
sbb
mov
inc
cmp
int3
addr16
test
jmp
test
cmp
jo
in
push
lods
int
push
scas
add
movs
fisub
push
div
in
inc
(bad)
and
daa
xor
dec
aam
xor
data16
pop
imul
dec
jno
sti
in
adc
jae
and
xor
push
dec
sbb
aam
ss
std
adc
xor
test
test
add
cwde
jnp
cmp
xor
jne
or
sbb
jb
jecxz
rcr
push
jb
imul
cs
cli
(bad)
repnz
add
arpl
add
outs
push
jmp
sbb
in
push
jecxz
ud1
push
cmp
mov
dec
es
iret
mov
cmps
les
xor
jle
sub
imul
pop
jge
lods
pop
pop
inc
adc
inc
lea
retf
mov
mov
xchg
mov
pushf
es
jbe
push
mov
in
and
scas
inc
rol
xchg
or
pop
xor
loope
aad
bound
inc
cld
ret
inc
cmc
in
mov
fadd
pushf
and
inc
mov
popa
or
xchg
cli
sbb
div
mov
or
add
in
pusha
ins
xchg
pushf
out
mov
pop
xlat
mov
popf
nop
mov
cmps
pop
jge
xchg
xchg
retf
in
push
test
imul
xor
add
xchg
idiv
xchg
adc
or
std
xlat
fwait
lahf
fninit
pusha
cmps
cmc
fdiv
out
retf
fcom
cdq
les
or
ins
movs
xchg
sahf
je
push
loop
or
nop
cmp
ret
lods
inc
imul
add
mov
loopne
sbb
bound
and
lea
push
sbb
mov
inc
add
adc
(bad)
cmp
push
and
int
push
lods
into
por
sub
add
cs
jmp
fistp
aaa
push
xlat
stos
repnz
xchg
int3
pop
or
aas
bound
out
pusha
inc
mov
stc
shl
pop
inc
push
cdq
in
push
les
cmp
jecxz
aas
daa
push
ins
cmp
jmp
sbb
mov
js
dec
data16
mov
ret
xchg
xchg
test
ins
data16
fistp
data16
add
jge
inc
adc
mov
in
adc
or
movs
movs
push
sub
mov
ret
inc
mov
je
cmp
pop
call
lods
xchg
sub
popa
and
jmp
sub
cmps
inc
jge
push
xor
aaa
sub
test
jne
out
cmp
in
int
xor
(bad)
test
inc
retf
test
stos
or
xchg
shl
add
movs
mov
mov
pop
cld
in
xor
fadd
mov
aas
fiadd
adc
adc
fistp
and
fcmovu
cwde
retf
fwait
adc
aam
mov
fwait
xor
cmp
xchg
lods
jge
pop
xor
aas
mov
rcl
movs
push
mov
(bad)
loopne
aad
cmp
aam
ins
add
push
jnp
or
pop
(bad)
div
push
pop
and
jmp
movs
add
in
lods
push
sub
std
jmp
adc
sub
sbb
bound
(bad)
fdivp
or
and
sbb
icebp
cmps
and
or
mov
xor
je
mov
sbb
dec
or
and
out
sub
sar
test
adc
mov
icebp
aam
jnp
(bad)
add
push
xchg
sbb
dec
das
jmp
aam
pop
mov
mov
mov
cmp
jmp
fwait
mov
stos
xor
or
iret
and
rol
fsubr
out
jnp
pusha
and
imul
cmp
or
loop
sahf
(bad)
adc
cmc
mov
retf
fincstp
ss
cs
in
jnp
rcl
rcr
cwde
ins
xchg
aad
dec
push
add
push
adc
cmp
dec
inc
mov
push
mov
fisub
nop
pop
ss
dec
and
mov
mov
pop
add
adc
retf
xchg
xor
ss
add
mov
inc
push
jbe
outs
aas
push
in
shl
daa
mov
jae
outs
icebp
fdivr
lods
mov
dec
out
xor
sub
bound
jnp
stos
fsub
mov
push
dec
xchg
mov
jb
jecxz
sbb
stos
shl
icebp
lods
mov
pop
fld
mov
pop
lea
fs
in
lods
sub
jbe
jge
mov
push
cmp
add
dec
mov
cmc
jp
out
fcmovne
cmp
inc
leave
int3
adc
shr
inc
inc
mov
popa
cmp
sbb
ins
lea
mov
jo
mov
lods
movs
and
arpl
mov
vmwrite
mov
pop
mov
fdivp
mov
sbb
leave
scas
loopne
sbb
das
jns
dec
pushf
inc
ds
(bad)
in
and
pop
std
add
lds
jg
dec
imul
cmp
mov
mov
inc
xor
sti
xchg
cmps
dec
mov
daa
or
fisttp
nop
jp
or
retf
cmp
dec
pusha
and
outs
lock
jbe
jg
sar
cmps
dec
xchg
inc
sub
cli
pop
cwde
ja
or
jp
cs
pop
sbb
push
pusha
adc
jmp
jecxz
or
gs
add
dec
and
mov
jmp
pop
dec
sbb
sub
add
sub
lock
loopne
out
scas
mov
xchg
test
aas
(bad)
or
repz
outs
retf
jp
aad
shl
mov
dec
cmp
sar
in
out
inc
jo
add
jl
dec
cmps
sbb
dec
and
fimul
sti
fwait
into
push
push
cmp
shr
push
nop
and
ja
(bad)
mov
and
out
push
jae
iret
mov
mov
cmp
je
inc
xor
and
jle
pop
es
push
mov
xor
shr
mov
adc
cdq
(bad)
adc
outs
call
mov
inc
js
icebp
pop
sbb
mov
mov
sub
cmps
inc
and
mov
mov
jge
jno
hlt
mov
repnz
leave
mov
pop
aas
cld
repnz
jl
inc
pop
sti
pushf
rcr
test
call
adc
ret
test
push
sub
imul
push
test
cmp
jbe
pop
mov
xor
push
mov
jp
or
xor
xchg
(bad)
adc
outs
sbb
call
enter
stos
sbb
mov
push
adc
sbb
aas
adc
lods
pop
or
stos
add
ror
sub
push
movs
push
adc
jmp
jb
mov
dec
mov
(bad)
(bad)
mov
je
std
push
call
push
fiadd
rcr
clc
inc
xchg
add
cmp
dec
push
sbb
mov
and
and
push
lds
test
push
retf
or
mov
mov
mov
xchg
dec
sti
ret
ja
int3
sub
fwait
adc
xor
(bad)
inc
jnp
dec
xchg
inc
imul
inc
cmp
inc
xchg
imul
mov
mov
in
(bad)
std
jmp
adc
mov
push
mov
dec
scas
jnp
mov
add
and
mov
bound
scas
cmps
mov
aam
fldcw
leave
outs
aad
in
xchg
cmp
iret
fisttp
jnp
je
mov
cmp
lahf
or
push
fadd
clc
xchg
int
lock
lahf
shl
scas
in
xchg
inc
ja
mov
inc
xor
setno
add
adc
arpl
add
jle
jl
aad
cmp
out
jne
retf
mov
popf
add
aaa
xor
jle
in
test
dec
jl
sti
(bad)
out
lods
jg
sbb
jbe
xchg
push
jb
inc
adc
std
xchg
(bad)
cdq
cmps
push
rcl
aaa
sub
or
pop
mov
xor
jmp
cmc
pusha
jnp
cld
daa
xor
adc
mov
stos
std
test
and
dec
out
cmc
icebp
xor
inc
out
pop
in
pop
aaa
inc
aad
jnp
sbb
xchg
sbb
inc
(bad)
xor
fdiv
test
clc
pop
test
jae
adc
in
jmp
ja
jp
add
or
cld
cmp
cmp
mov
in
push
push
pushf
ja
mov
cmps
js
stos
or
push
mov
xchg
ins
shl
popf
lods
xor
xor
scas
pop
shl
mov
mov
xor
dec
mov
pop
or
push
in
call
pop
cmp
fnstcw
xor
push
into
xor
call
push
test
sbb
lods
xchg
cmp
(bad)
cwde
or
inc
jmp
mov
test
lods
iret
(bad)
xchg
sub
push
ds
retf
cdq
push
push
popa
(bad)
push
pop
jo
sub
push
mov
pusha
mov
lea
or
lods
mov
dec
add
imul
xchg
xor
cmp
push
adc
pusha
mov
inc
iret
jb
fsubr
push
pop
jge
stc
xor
hlt
and
and
pusha
mov
push
push
loop
daa
adc
jle
shr
das
mov
sub
movs
add
loope
loop
fs
push
mov
xchg
fstp
dec
dec
inc
imul
movs
mov
shl
retf
jnp
(bad)
jne
sti
adc
sub
scas
adc
xor
mov
mov
sub
xor
inc
xchg
bnd
cmps
in
repnz
popa
in
mov
ret
jp
inc
aaa
cmp
arpl
cwde
cmp
out
in
pop
xor
jge
hlt
add
mov
mov
sbb
add
fdivr
xlat
or
sbb
jecxz
jle
push
push
jne
mov
retf
dec
out
push
retf
xchg
ins
shl
retf
adc
ss
and
add
pop
mov
outs
xchg
loope
mov
push
xor
ins
lahf
jmp
or
stc
dec
sub
(bad)
in
out
jle
adc
mov
cs
sbb
in
repnz
aam
aad
dec
pushf
fild
mov
jmp
sahf
ja
in
lods
call
jp
(bad)
xor
aad
mov
pop
lahf
xchg
stos
rol
cmp
cld
pop
cdq
scas
(bad)
pop
in
imul
jle
pop
scas
and
stc
xor
mov
das
ret
nop
stos
mov
inc
popf
sbb
xor
cmp
mov
xchg
mov
push
sub
mov
mov
scas
fisttp
in
mov
jae
mov
xor
fld
add
out
jnp
aas
push
inc
pop
jl
retf
xchg
jmp
scas
loopne
jae
sbb
sbb
(bad)
add
xor
das
add
jne
add
ret
push
cdq
out
test
ret
and
imul
mov
or
imul
jbe
sbb
mov
xor
jecxz
cmp
inc
mov
gs
test
adc
in
cmp
pushf
mov
scas
ins
neg
mov
test
loop
dec
mov
aad
adc
cmp
ss
jns
and
adc
shr
pop
outs
xlat
mov
fimul
sub
mov
inc
call
ud1
es
and
sbb
lea
pop
fwait
inc
dec
shl
retf
cwde
jne
pushf
inc
mov
or
mov
ja
pop
mov
lock
cmp
mov
add
shl
addr16
ret
xchg
aaa
inc
xlat
loope
loope
pop
mov
mov
xchg
fld
add
movs
xchg
ja
inc
inc
mov
lods
test
(bad)
enter
call
scas
shl
jge
int
mov
stos
add
rcl
js
ds
hlt
inc
and
pop
lods
stos
adc
data16
jecxz
xor
push
in
shr
sbb
in
das
adc
pop
mov
xor
mov
(bad)
les
cdq
inc
js
add
cmc
dec
jmp
sbb
adc
lea
push
jbe
loope
(bad)
ds
fld
test
inc
cmps
sar
lahf
push
inc
(bad)
dec
jo
xor
cmp
movs
cld
push
mov
movs
pop
inc
clc
enter
movs
shr
push
ret
sub
adc
ret
adc
in
movs
test
sub
mov
pushf
pop
xlat
(bad)
scas
stos
mov
push
jae
mov
popf
and
int
push
mov
add
xchg
into
add
add
stos
mov
push
pop
jp
inc
scas
xor
outs
lods
rcl
mov
mov
and
pushf
inc
xchg
inc
xlat
jge
popa
bound
xor
call
scas
lods
outs
imul
ds
ret
pop
clc
test
stos
pop
sub
inc
lds
ja
and
loopne
mov
mov
or
cmc
inc
sub
push
xchg
cmp
inc
xchg
leave
pop
mov
in
mov
pusha
pop
sahf
daa
adc
jecxz
mov
pop
sbb
mov
retf
sti
jns
xor
test
push
lahf
leave
push
lock
call
sahf
cmp
movs
jmp
xor
scas
dec
xchg
cli
mov
lahf
sub
cli
pop
xchg
arpl
mov
pushf
adc
repnz
jne
std
or
mov
mov
push
add
popf
pop
inc
int3
jbe
and
repnz
inc
rol
or
cli
(bad)
mov
sbb
outs
leave
push
add
mov
lock
inc
fs
pop
or
pop
ret
adc
push
and
das
cmps
xor
stc
adc
call
sbb
or
in
xchg
mov
push
or
add
and
bnd
popa
push
cli
xlat
test
cmp
pusha
lods
jl
imul
aas
(bad)
out
dec
fist
sbb
icebp
cdq
mov
jl
add
pop
xor
pusha
pop
movs
lea
aam
xor
aaa
mov
sbb
mov
leave
outs
dec
daa
adc
lock
add
pop
mov
jo
inc
sub
xor
in
out
stos
fiadd
loop
test
test
addr16
and
push
stc
dec
arpl
and
lock
mov
push
jmp
std
xchg
(bad)
js
fcom
leave
cmp
rcl
push
popa
pop
and
cwde
and
out
jns
xor
jmp
add
inc
push
les
fxch
mov
(bad)
in
jl
push
pop
xchg
push
xor
xor
pop
fdiv
lods
sar
popa
out
jp
int
lock
sti
das
push
sbb
sbb
mov
into
add
lds
imul
adc
dec
cs
mov
jmp
(bad)
lahf
fiadd
daa
jbe
sti
pop
ins
sbb
fcomp
jg
jl
xlat
clc
mov
mov
sahf
jo
out
pop
dec
ins
xchg
cmp
xchg
(bad)
int3
outs
mov
es
ds
bound
sub
enter
clc
mov
xor
pop
int
or
cmp
jnp
xor
shl
xchg
cmp
sub
xchg
out
xor
adc
out
cmp
stos
loop
call
mov
scas
or
xor
sbb
inc
adc
push
pop
stc
sti
jmp
cmc
pop
xchg
ins
jp
gs
sbb
nop
iret
test
rep
push
sbb
dec
fsub
sub
call
std
or
add
push
sbb
push
jns
(bad)
sbb
cmp
outs
imul
push
cmc
adc
xchg
sbb
pushf
ret
std
inc
and
cdq
mov
cwde
sbb
stos
stc
data16
pop
mov
mov
sbb
movs
shl
es
movs
addr16
add
aad
arpl
into
mov
jno
and
shl
dec
pop
(bad)
xchg
cmps
popfw
sbb
or
push
jle
pop
ficom
pop
addr16
mov
ror
and
mov
ss
push
adc
pusha
repnz
shr
sbb
iret
mov
nop
enter
cmp
ror
cmps
mov
mov
mov
pop
jns
sbb
mov
jns
loopne
hlt
out
jg
inc
jp
inc
mov
mov
loope
xchg
into
dec
retf
fidivr
fsubrp
lods
push
mov
xor
dec
pop
movs
push
mov
adc
jb
mov
mov
lods
call
and
push
hlt
dec
adc
inc
repz
push
sub
cmp
shl
imul
int3
test
lods
jmp
jl
jg
sti
xchg
jne
cmp
dec
fbstp
and
scas
xchg
and
in
mov
inc
mov
sub
push
pop
dec
dec
pop
lds
call
xchg
test
ss
mov
mov
cmp
jae
inc
push
fisttp
mov
in
and
imul
leave
jle
xor
pop
lahf
jg
arpl
(bad)
jo
es
int
jmp
fdiv
cmps
add
js
ins
das
rol
mov
mov
inc
stc
pop
adc
cmp
int3
cs
inc
les
mov
pop
mov
cld
ins
jno
fsub
inc
xor
mov
cmps
clc
push
xchg
mov
mov
call
mov
jo
pop
aaa
scas
xor
cmc
dec
jo
dec
(bad)
push
test
clc
je
push
in
imul
pop
in
loopne
mov
inc
int
cmp
in
add
mov
push
sbb
ret
xchg
sbb
idiv
xchg
(bad)
xchg
(bad)
stos
fs
ret
dec
idiv
mov
dec
pop
fucomip
cli
dec
add
adc
cs
xchg
and
cld
das
repnz
dec
arpl
in
(bad)
mov
into
mov
ret
cmp
and
jl
mov
mov
cmp
lods
mov
sti
dec
add
sub
ret
test
xor
inc
(bad)
(bad)
dec
push
push
out
out
mov
stos
jmp
xor
iret
mov
sbb
or
sub
repnz
xor
mov
mov
popa
and
movs
es
repz
js
mov
ror
jmp
nop
daa
inc
dec
addr16
aam
mov
ds
test
nop
cld
enter
adc
ins
js
das
in
sbb
(bad)
jmp
jae
mov
adc
std
adc
bound
ins
aam
xchg
cmps
enter
jl
push
adc
aam
xor
pushf
dec
fnstcw
in
mov
data16
cdq
movs
jne
fsub
inc
mov
pop
push
loop
and
xchg
out
sbb
inc
sbb
sbb
arpl
cli
xchg
fdivr
xchg
adc
jne
pop
fwait
sti
mov
xlat
fisttp
xchg
(bad)
popf
pop
mov
adc
xor
or
dec
or
iret
cmps
mov
cmps
imul
adc
add
call
sbb
jg
pop
popf
jno
jle
lods
ja
jg
aaa
scas
in
push
xchg
cmp
add
xchg
fdiv
dec
aaa
pop
mov
jb
push
sahf
pop
in
pop
enter
lock
jmp
xor
mov
test
test
or
xor
and
rcr
mov
or
into
dec
lahf
pop
push
test
aas
adc
pushf
test
jp
sar
idiv
retf
pop
or
jbe
mov
and
xchg
xor
xchg
cdq
popa
in
(bad)
or
jp
arpl
push
sub
pop
fwait
lods
add
mov
lock
or
shr
and
nop
cs
mov
mov
xchg
fwait
push
and
mov
inc
stos
mov
jp
xchg
push
mov
or
adc
mov
xchg
cmp
jp
jno
aam
jmp
xor
inc
inc
sbb
(bad)
int3
js
cwde
sub
(bad)
and
add
inc
xor
dec
or
mov
movs
or
in
jnp
jl
mov
mov
fsub
lock
pop
sub
xchg
outs
sbb
fcom
loope
push
imul
or
inc
pop
arpl
xlat
mov
jmp
jg
mov
push
in
fisub
sbb
outs
rcl
(bad)
(bad)
jl
dec
cs
bound
arpl
in
add
movs
inc
or
pop
xor
das
stos
js
aam
hlt
mov
push
rol
loope
(bad)
std
xor
aam
mov
pop
(bad)
movs
cli
loopne
push
push
add
jmp
jae
push
test
in
lds
aaa
loop
mov
sti
adc
cdq
inc
mov
ins
into
jo
xor
mov
(bad)
(bad)
(bad)
cdq
and
sbb
sbb
les
and
pop
cmp
inc
cmp
or
mov
enter
cs
(bad)
jecxz
std
dec
adc
arpl
pop
fs
xchg
call
mov
js
arpl
mov
bound
mov
cmps
iret
or
or
stc
iret
out
hlt
test
sahf
(bad)
sbb
cmp
mov
pop
scas
movs
inc
lock
mov
les
sub
add
addr16
and
ss
xbegin
inc
repz
in
xlat
inc
mov
cli
hlt
push
cmp
hlt
call
push
sti
mov
call
daa
int
inc
sub
cmp
int3
fs
jne
shr
cli
pop
push
mov
sbb
pop
inc
out
sbb
cmp
int
(bad)
push
jp
fldcw
xor
movs
jb
and
fs
rcl
mov
pop
mov
or
cmps
mov
add
sub
cli
clc
out
lock
add
test
sub
xchg
outs
inc
mov
inc
stos
rol
sbb
stos
dec
inc
push
pop
idiv
lods
fadd
adc
cmps
mov
sti
daa
inc
mov
test
popa
mov
out
icebp
mov
movs
les
cmp
mov
jecxz
sahf
sbb
cmp
dec
mov
pop
jl
sbb
cmps
std
sub
movs
add
push
jg
sbb
mov
imul
or
sbb
pop
lods
neg
imul
sbb
data16
mov
aas
loopne
sbb
(bad)
pop
lods
or
jl
addr16
mov
dec
add
retf
sbb
sbb
stos
xor
or
or
je
sar
retf
adc
inc
push
sbb
sub
imul
pop
jg
mov
sbb
and
jb
dec
movs
mov
mov
xchg
jmp
pop
shr
sbb
sbb
xor
sub
out
mov
adc
push
imul
cdq
and
cmp
lods
pop
loop
ffree
call
dec
push
dec
arpl
adc
std
xor
inc
adc
xor
push
mov
outs
aad
into
test
fistp
cwde
push
xlat
push
int
inc
or
xor
inc
call
push
arpl
jl
mov
dec
mov
inc
test
in
or
add
(bad)
nop
aam
lods
enter
imul
add
cdq
loop
cmp
mov
repz
xor
cmps
out
lahf
in
push
mov
dec
(bad)
das
aaa
ror
test
mov
push
jp
data16
iret
ds
data16
ret
(bad)
dec
jbe
jnp
adc
daa
jp
cmc
sbb
sahf
inc
out
ror
push
jae
xchg
mov
mov
mov
mov
in
loopne
jno
sub
je
mov
je
dec
pop
xchg
fadd
scas
mov
cmps
jmp
fimul
test
cmp
add
push
cmp
jmp
push
push
sub
add
cmp
pop
mov
cmp
cmp
cs
pop
cmp
(bad)
fwait
jns
ret
sub
xchg
rcr
mov
or
loop
(bad)
fsubr
jns
ja
push
dec
or
mov
cld
add
xchg
ins
dec
mov
dec
xlat
sub
fldcw
add
mov
lock
xchg
loop
adc
sub
sbb
mov
repnz
jmp
retf
inc
mov
js
lahf
call
popf
lods
imul
ret
adc
xor
pop
arpl
cmps
inc
adc
add
xor
dec
mov
call
dec
(bad)
in
scas
inc
pop
mov
add
dec
and
inc
xor
mov
js
push
or
(bad)
enter
add
cmp
sti
xchg
mov
cmp
clc
cmp
sti
push
mov
jle
ins
mov
mov
test
cmp
cmp
mov
test
dec
ret
mov
popf
xchg
adc
jmp
dec
xor
xor
out
mov
(bad)
xor
fidiv
or
sbb
push
fcomip
std
xchg
sbb
mov
idiv
cmp
aad
aad
mov
enter
mov
stos
inc
ja
and
cmp
cld
bound
mov
dec
je
xor
aas
xor
cmps
cmp
jmp
mov
push
jb
test
mov
arpl
loopne
out
mov
push
sahf
int
push
fdivrp
xchg
xchg
clc
inc
icebp
xchg
lods
sahf
ror
jne
cmp
mov
imul
and
rol
push
stos
adc
dec
jle
sub
sbb
icebp
cs
sbb
push
out
sahf
and
jmp
mov
sbb
mov
iret
push
enter
jo
mov
push
sahf
cmp
fimul
add
(bad)
dec
xor
jecxz
jbe
iret
dec
fld
mov
arpl
add
jnp
adc
cmp
mov
shl
mov
fsubr
retf
or
nop
xchg
push
dec
stos
sub
mov
test
adc
and
fimul
mov
pop
div
cs
fdivr
adc
loope
fistp
pop
mov
add
imul
sbb
dec
stos
and
adc
cmp
add
mov
and
cmp
pop
adc
in
jns
xchg
cmp
mov
shr
popf
ins
mov
jae
sahf
icebp
dec
enter
ss
xlat
mov
(bad)
pop
mov
out
lea
and
out
or
pop
addr16
popa
scas
sbb
pop
or
jno
test
jns
push
push
pop
sti
movs
ror
out
movs
mov
xchg
sbb
jb
mov
and
arpl
add
nop
scas
add
retf
inc
loop
or
in
cmp
in
push
dec
pusha
or
adc
jge
mov
cmp
dec
push
jae
mov
scas
push
out
jo
adc
xor
mov
in
loop
lods
(bad)
cmc
lahf
xchg
stos
sub
push
(bad)
into
loope
and
push
outs
fild
or
dec
pop
cmp
xchg
faddp
sbb
jmp
xlat
xlat
pop
xchg
nop
ja
adc
out
push
xor
pop
mov
adc
pop
shl
frstor
xchg
cmps
pop
sbb
pushf
and
aas
dec
cdq
ret
pusha
fild
mov
and
add
adc
(bad)
sbb
jge
and
push
(bad)
jnp
and
mov
pop
cdq
dec
out
push
pop
jecxz
pop
push
inc
aaa
popa
(bad)
jbe
and
(bad)
mov
repnz
popf
dec
add
in
fimul
inc
dec
sub
movs
mov
out
sbb
push
icebp
push
mov
outs
mov
ins
xor
call
rol
ja
jmp
into
cmp
and
out
mov
jae
out
gs
add
add
mov
mov
and
xchg
retf
retf
stc
adc
xchg
push
ror
push
xchg
push
into
int
ret
(bad)
lock
sbb
jae
add
push
mov
dec
loop
shl
aam
lock
mov
stos
xor
add
stos
xchg
lahf
shl
mov
dec
mov
mov
fs
and
jmp
sbb
xor
cmp
sahf
inc
sub
icebp
push
push
push
sub
push
retf
jecxz
(bad)
jecxz
jg
xlat
fwait
or
mov
mov
retf
movs
adc
shl
jle
mov
jl
add
out
call
pop
adc
in
call
push
dec
sub
js
dec
data16
test
sub
repz
mov
inc
jg
fisub
push
cwde
imul
adc
repz
rcl
mov
cmp
mov
xor
sub
inc
(bad)
data16
ss
retf
xor
sbb
sbb
inc
add
ins
push
pop
(bad)
mov
dec
and
enter
jmp
shl
and
pop
mov
(bad)
pop
dec
dec
dec
mov
jmp
jo
retf
mov
xchg
scas
gs
(bad)
jo
sahf
outs
push
movs
sbb
xor
aaa
fimul
pusha
cwde
pop
add
jecxz
pop
arpl
ds
add
movs
call
cmp
(bad)
(bad)
jmp
fwait
push
inc
dec
sbb
mov
sbb
inc
fidiv
dec
ss
push
mov
push
adc
loopne
fild
gs
(bad)
mov
iret
xor
add
scas
into
iret
shl
arpl
cmps
push
(bad)
and
inc
xchg
xchg
mov
jo
fild
sbb
and
push
inc
fwait
(bad)
pop
cmps
add
jae
jge
adc
ins
call
cmps
mov
inc
cmp
ss
call
jp
inc
mov
jno
call
adc
adc
fiadd
repz
cmp
out
imul
push
or
loopne
icebp
add
out
cmp
retf
std
push
je
xchg
xchg
push
addr16
pop
hlt
shl
jmp
sysenter
jb
sar
pop
cmp
loopne
push
adc
lods
pop
add
xchg
dec
inc
and
mov
(bad)
int
int3
inc
mov
inc
sbb
dec
push
ret
mov
mov
or
fst
test
push
js
push
loop
mov
and
fwait
sub
out
dec
pop
scas
inc
jl
rol
shl
sbb
or
sbb
and
mov
ja
(bad)
pop
push
jge
repnz
xchg
in
pop
punpcklwd
mov
pop
sbb
pop
or
jae
sahf
ss
inc
ror
lock
sub
sbb
loope
mov
jmp
ror
dec
push
add
jmp
repz
(bad)
daa
or
pop
cdq
mov
push
das
fisttp
in
cmp
inc
lock
out
int
in
arpl
repnz
icebp
cmc
add
dec
je
pop
push
sti
ret
mov
or
jle
inc
push
dec
test
aam
sbb
stos
or
jns
repz
call
inc
push
ret
sahf
xor
or
push
test
(bad)
fnstsw
cwde
mov
(bad)
xchg
inc
std
or
jg
mov
mov
rcl
mov
retf
ret
xor
or
sbb
add
div
push
push
dec
movs
and
dec
pushf
jb
aam
jg
call
sbb
dec
xchg
out
or
ds
pushf
lahf
add
mov
loop
stos
rcl
outs
pop
xlat
sub
outs
inc
push
data16
lahf
into
cmp
jmp
mov
cld
pop
mov
je
add
call
add
arpl
je
dec
pop
icebp
sub
test
pushf
jmp
xchg
sub
dec
sbb
mov
pop
les
aas
fistp
sub
sbb
inc
daa
push
ror
cli
scas
jmp
outs
push
ds
fist
pop
lds
enter
or
mov
pop
(bad)
int3
int
sbb
dec
dec
adc
into
dec
xchg
in
popf
fs
mov
jns
imul
inc
pushf
movs
rcr
push
xchg
loop
add
cmp
add
jne
jmp
jne
idiv
dec
pop
lods
outs
test
ds
nop
nop
adc
adc
cmc
ret
daa
cld
sbb
fnsave
sub
out
mov
int
test
outs
stos
ss
pop
push
shr
mov
cmps
mov
and
shl
gs
scas
clc
rcl
pusha
(bad)
jo
jle
cmp
sbb
adc
or
stos
lock
retf
mov
inc
in
mov
retf
ss
jne
std
rcr
pop
cmp
dec
(bad)
sbb
inc
scas
mov
inc
cmp
clc
pop
sub
in
sub
and
lds
pop
not
ja
imul
jg
xor
test
pop
mov
inc
das
cmps
into
xor
jne
mov
sub
fadd
ret
cmp
xchg
jg
adc
leave
jae
cli
pop
je
xor
adc
dec
mov
mov
push
cmps
sub
or
inc
movs
sbb
and
cli
mov
ja
sbb
xor
popf
sahf
retf
pop
xor
pop
push
and
sbb
xchg
xchg
enter
ins
inc
ins
and
jnp
stc
cld
hlt
ins
dec
iret
mov
js
pop
dec
nop
xchg
(bad)
clc
mov
add
les
adc
sbb
mov
mov
(bad)
les
pushf
and
nop
fld
sub
push
movs
inc
pop
cmps
sbb
shl
sbb
push
sub
arpl
dec
adc
test
daa
call
cmps
mov
add
scas
mov
popa
mov
cli
mov
sbb
out
fstp
stc
adc
sbb
pop
ds
cld
xchg
xor
cmp
fdivr
fs
cmp
push
mov
mov
pop
lahf
cwde
ret
add
das
push
jp
ficom
scas
add
dec
xchg
pop
rcr
scas
xor
or
xor
inc
adc
mov
retf
out
ror
mov
jb
scas
dec
jmp
inc
shl
and
fnsave
mov
jb
and
outs
jge
fucomp
mov
retf
ja
dec
sbb
mov
and
or
mov
sbb
shr
xchg
fdivr
and
or
xor
push
loope
enter
int3
jle
sub
pop
test
fdivr
sub
addr16
jbe
fcmovnbe
or
xchg
and
dec
(bad)
imul
push
ret
jmp
cli
xor
fcomip
iret
(bad)
jecxz
jne
pop
mov
rcr
xlat
in
fst
xor
rcr
leave
mov
mov
inc
movs
cmp
aaa
test
nop
inc
xchg
iret
inc
pop
std
xchg
stos
inc
test
sub
pop
cmp
loopne
test
mov
sahf
jg
rol
jmp
ret
inc
aam
scas
int
stc
aaa
test
cmp
movs
ins
xchg
push
pop
into
and
retf
fldcw
mov
xlat
pop
mov
scas
mov
mov
push
add
add
lock
xchg
in
lods
dec
dec
jmp
add
xchg
sbb
pop
mov
cmp
fdiv
cmc
sbb
dec
dec
sbb
pop
outs
repnz
sub
clc
inc
push
adc
(bad)
repz
sbb
ins
cli
xchg
pop
jns
mov
retf
jp
jecxz
sub
jne
fmul
cmp
cmp
ret
call
popa
leave
xchg
mov
mov
adc
call
les
mov
jno
push
test
push
(bad)
cmps
popf
das
sti
ds
dec
icebp
(bad)
xchg
add
sbb
dec
test
jge
mov
xor
or
aaa
xchg
shl
pushf
sub
and
sbb
test
test
push
push
xlat
nop
mov
push
cld
and
pop
imul
sub
popa
add
push
lock
in
mov
fwait
pop
fiadd
test
out
daa
jl
dec
pop
mov
(bad)
ds
fsub
call
mov
xchg
jle
das
movs
sbb
sbb
cs
aam
mov
mov
mov
je
inc
sti
popf
sahf
cmps
jmp
es
pop
gs
pushf
nop
in
mov
ds
sub
mov
repnz
loopne
mov
xlat
(bad)
mov
or
or
(bad)
mov
and
mov
jns
pop
sbb
mov
(bad)
mov
fcmovb
jo
dec
push
dec
add
fwait
push
jno
mov
cmc
repnz
xor
cmp
popa
pop
inc
pop
test
xlat
dec
and
into
inc
jno
pop
pusha
icebp
jno
jg
clc
xchg
lods
xchg
fst
push
loope
or
cmp
in
pop
out
jmp
mov
mov
sbb
(bad)
push
dec
dec
mov
test
test
push
pushf
jp
push
call
sbb
push
dec
fsubr
shl
or
sbb
sar
daa
out
adc
push
dec
sub
pop
loop
xlat
pop
aam
fld
sti
sbb
pop
repz
leave
sbb
je
fmul
pop
outs
aas
inc
aas
nop
xchg
mov
jns
in
les
in
(bad)
and
jb
and
ret
clc
xchg
test
scas
sbb
add
sbb
clc
sti
mov
ds
xchg
add
mov
(bad)
xor
bound
push
xchg
cmp
test
fdiv
cmps
mov
xor
mov
hlt
lock
dec
jns
inc
pop
xchg
mov
xor
test
and
int3
(bad)
cmps
scas
sar
pop
aaa
pop
pop
mov
xor
or
and
hlt
lea
cmp
sub
es
sbb
xchg
pop
int3
and
outs
add
xchg
popf
fild
mov
mov
xlat
daa
or
add
mov
lods
inc
int3
loope
data16
(bad)
jge
push
or
stos
jmp
ror
sbb
popf
push
aaa
lahf
retf
clc
xchg
inc
sbb
in
shl
pop
jecxz
js
cmp
push
sub
ret
aad
jmp
retf
shr
adc
pop
inc
adc
lahf
dec
mov
popa
test
dec
dec
dec
adc
lock
movs
and
push
push
lea
pusha
push
dec
fwait
pop
xchg
cmp
ret
(bad)
mov
fs
ror
out
xchg
gs
push
les
push
test
adc
or
pop
sbb
jnp
adc
or
mov
pop
fmul
inc
cmp
mov
ds
shr
add
mov
dec
(bad)
not
mov
and
adc
push
dec
mov
fisttp
mov
jp
or
(bad)
pop
rol
(bad)
lds
push
ins
push
fucomi
int
cmp
sbb
or
stc
(bad)
pusha
lods
pop
sbb
call
cmps
push
jne
cwde
shl
xor
push
and
pop
push
sub
mov
push
mov
dec
xchg
ret
lea
sub
mov
outs
(bad)
int
call
xchg
sub
fld
scas
test
fimul
scas
mov
fidivr
pusha
or
mov
or
les
cmp
rcl
out
jne
pop
jo
adc
sbb
xchg
test
jmp
fidivr
movs
adc
dec
xor
xlat
lods
sbb
jbe
dec
fwait
push
xchg
call
sub
ja
mov
inc
mov
repz
cmp
pop
mov
mov
jnp
outs
cmc
movs
xor
mov
push
xchg
stos
xchg
cmp
lods
or
repnz
adc
mov
pop
jl
cmp
sub
movs
jmp
mov
cmp
les
mov
retf
pushf
mul
sbb
push
dec
and
pop
push
enter
or
push
jge
and
ins
jg
es
mov
(bad)
push
push
adc
cmp
mov
mov
les
mov
aad
mov
movs
not
sahf
xchg
enter
dec
(bad)
push
sbb
mov
inc
enter
popa
stos
(bad)
dec
inc
popa
out
cld
xor
mov
mov
aas
(bad)
shl
stc
and
push
repz
pusha
sub
movs
lock
adc
daa
cli
xor
ja
(bad)
adc
dec
cld
in
ins
rol
add
push
stos
popf
stc
inc
pop
cmp
ret
or
test
mov
inc
adc
clc
jb
jbe
mov
ins
mov
mov
clc
mov
cmps
mov
ins
mov
cmps
out
fsubp
(bad)
js
data16
sbb
fsubr
hlt
mov
xor
xlat
inc
dec
cmp
mov
mov
sub
mov
inc
xchg
mov
fsub
pop
int3
fisttp
add
xchg
jnp
js
inc
and
cmp
fwait
icebp
and
add
cdq
movs
retf
jae
aas
and
ds
movs
or
rcr
jl
xor
in
push
mov
fbld
(bad)
mov
mov
and
or
push
mul
rcl
xor
xor
in
push
scas
mov
and
sti
pop
pop
xor
scas
mov
movs
mov
rol
lods
mov
(bad)
dec
add
jb
pusha
sbb
or
lea
mov
inc
in
mov
mov
mov
mov
xchg
movaps
imul
ret
hlt
xchg
mov
mov
jno
cs
jmp
call
adc
pop
out
or
(bad)
jnp
pop
mov
pop
shl
out
aad
ficomp
ret
inc
sub
cwde
popf
sti
fld
push
div
retf
inc
inc
or
cmp
cmp
pmovmskb
fisubr
push
jmp
and
ror
shl
jl
in
mov
adc
int3
jns
sti
cli
pop
jg
inc
fldcw
pop
shr
inc
xor
or
(bad)
jl
adc
adc
dec
sub
andnps
outs
ror
fst
ins
add
and
outs
sar
sub
out
xchg
adc
rol
cmp
sti
cdq
cmp
scas
mov
pop
mov
inc
das
sahf
pop
xchg
sti
std
lahf
mov
dec
ds
mov
cwde
stc
gs
cmp
add
lock
outs
call
xor
push
into
pop
sar
inc
mov
mov
or
and
dec
adc
out
jecxz
pop
xor
cwde
inc
iretw
add
sbb
dec
icebp
fadd
push
dec
loopne
in
das
sub
jnp
xchg
xor
test
sub
inc
cs
mov
and
jge
cs
jl
(bad)
push
and
dec
mov
(bad)
add
jg
mov
pop
movd
xchg
shr
pop
mov
les
fisubr
adc
cdq
loope
arpl
loop
out
mov
jmp
and
int3
pop
cwde
ds
loopne
adc
xchg
xor
mov
shufps
fs
fbld
mov
sbb
pushf
xchg
dec
sahf
push
mov
call
ins
lea
jl
inc
(bad)
xor
mov
in
dec
jg
push
cmp
lds
jp
mov
je
sub
daa
xchg
mov
fidiv
xor
loope
cmp
mov
cmp
and
push
outs
pop
and
cmp
and
sub
xchg
std
jae
and
dec
scas
mov
out
cs
in
aaa
and
int
jnp
pop
and
aaa
loope
xor
out
sbb
xchg
jno
aad
push
jmp
push
mov
movs
push
cwde
lahf
xor
scas
mov
sub
dec
hlt
adc
dec
in
nop
sbb
and
mov
daa
jecxz
aam
pop
aaa
cli
aaa
push
mov
fdiv
sbb
out
push
sub
xlat
ja
pop
in
sub
xchg
push
sbb
mov
iret
cmp
pop
sub
(bad)
cmp
mov
pusha
aas
mov
in
rol
and
or
test
fdiv
mov
xchg
(bad)
pop
(bad)
call
fmul
sub
or
gs
pop
xor
sar
das
stos
call
leave
pop
jp
cmp
cmps
fdiv
xchg
mov
push
aas
shl
fcom
jo
out
mov
fs
cwde
call
jns
sti
sub
ret
loope
lods
jmp
push
push
mov
fs
pop
cli
jmp
push
dec
mov
loope
sub
stos
sub
mov
pusha
dec
jmp
scas
outs
cmp
neg
in
jnp
sub
dec
movs
int3
rol
(bad)
mov
and
mov
dec
stos
rol
jl
out
jge
mov
ss
repnz
rol
outs
mov
out
arpl
sbb
or
pop
jno
(bad)
adc
mov
cld
sub
lods
mov
sub
push
stc
push
imul
in
jmp
and
bound
sub
fmul
mov
aad
movs
jbe
cmps
pop
push
test
pushf
jb
jmp
inc
ret
and
icebp
popa
jecxz
mov
cmp
out
xchg
fcom
nop
shl
cmps
rsqrtps
xchg
or
rol
mov
fnstcw
mov
les
mul
pop
dec
pop
gs
leave
clc
pushf
les
nop
or
mov
mov
pop
mov
ret
lea
(bad)
or
adc
adc
ret
sar
cmps
jmp
mov
jbe
push
cmp
jo
mov
repz
mov
cwde
data16
inc
dec
aad
pusha
adc
inc
inc
sub
inc
pop
icebp
outs
sar
das
fsubr
xlat
pop
adc
imul
push
aas
pop
les
cmp
mov
pop
fdivrp
mov
ds
sti
mov
addr16
sub
jl
loop
and
adc
mov
add
ret
pop
popf
sub
cmp
test
mov
test
xlat
pop
out
mov
add
and
(bad)
or
sti
gs
push
(bad)
push
mov
pop
movs
sub
adc
in
xchg
shl
add
nop
sub
fwait
xchg
dec
push
dec
and
jno
dec
push
cli
adc
outs
xor
mov
or
inc
add
mov
mov
sub
mov
push
cdq
call
add
push
dec
or
cmp
lea
setns
cmps
loope
add
or
xlat
sti
push
aas
dec
out
retf
adc
sbb
pushf
and
lds
call
xchg
jne
popa
mov
xchg
xchg
sbb
adc
add
lahf
mov
stc
jge
shl
mov
push
les
add
addr16
lock
cmp
or
(bad)
cmp
adc
adc
retf
test
mov
(bad)
cmp
ror
push
xor
clc
push
andps
lods
add
dec
cmp
add
loop
pop
cmc
retf
in
mov
rcl
ret
mov
mov
rol
rcr
cmp
loop
loop
adc
mov
retf
jmp
mov
sti
dec
arpl
mov
push
push
js
sbb
call
sti
xor
cmp
retf
dec
scas
xor
ins
clc
ja
add
xor
add
sub
add
xchg
ins
mov
jg
cmc
sbb
repnz
add
and
retf
push
add
in
adc
test
scas
daa
scas
mov
and
lods
or
pop
mov
sbb
pop
scas
iret
sub
adc
xor
sbb
mov
jnp
xor
jge
pop
mov
test
movs
xor
hlt
es
(bad)
push
fwait
xor
test
(bad)
loope
fs
push
mov
lock
sub
dec
out
mov
or
call
and
pop
clc
jae
jne
cmp
sbb
cld
dec
or
jp
push
movs
xchg
xchg
lahf
xor
ret
sub
mov
and
test
xchg
fdivr
(bad)
jle
pop
imul
adc
mov
rcr
sub
arpl
mov
adc
mov
ja
rcl
arpl
push
nop
not
pop
sub
fbstp
mov
sub
int
(bad)
xchg
cmp
and
xor
adc
aam
retf
xor
cdq
cmp
adc
loopne
out
sar
fucomi
fnstenv
(bad)
sub
leave
and
dec
sbb
xor
fisubr
int
or
mov
fcomp
in
call
xor
mov
sub
je
pusha
sub
push
cmp
fisubr
imul
mov
mov
aaa
mov
or
xor
and
jle
pop
js
outs
jbe
xchg
xor
nop
leave
retf
jle
xchg
or
pushf
pop
pop
hlt
and
xchg
dec
or
mov
mov
inc
dec
or
xor
sbb
inc
jo
lahf
icebp
lock
jg
push
xchg
mov
shl
mov
out
xor
xchg
adc
mov
cmp
(bad)
push
mov
dec
or
cli
jb
pop
lock
shl
loope
pop
retf
rcr
shl
scas
sti
jne
call
arpl
inc
stc
xchg
loop
out
or
jae
dec
inc
shr
mov
das
mov
test
pop
movs
xor
push
lea
xchg
cmp
mov
xchg
je
jne
icebp
sahf
add
pop
jp
fs
lea
cs
inc
and
inc
je
sub
cmp
jns
cmc
and
mov
inc
push
pop
adc
xchg
ret
mov
out
sti
cmp
int3
test
js
pop
fldenv
add
jb
test
(bad)
fistp
jecxz
xlat
enter
nop
push
gs
xor
inc
in
cwde
xchg
jge
in
xor
not
xchg
jbe
test
arpl
inc
ret
rcr
push
jge
out
dec
adc
mov
gs
and
retf
mov
in
jo
mov
rcl
mov
xchg
dec
jp
jg
stos
in
and
scas
bndldx
aam
lods
daa
test
mov
popw
cmp
pushf
push
daa
mov
fstp
mov
jmp
xor
or
test
mov
xor
jb
enter
push
mov
dec
pop
mov
ds
xor
(bad)
sub
(bad)
cmc
pop
out
inc
and
jns
mov
xchg
aam
rcl
sub
jp
inc
test
mov
push
mov
pop
sti
inc
mov
mov
xchg
push
push
je
sub
mul
add
rcl
test
rcl
jbe
daa
pusha
sub
rcl
mov
push
mov
in
dec
cmps
mov
xor
sahf
sbb
clc
adc
out
lods
inc
or
movs
cwde
sub
popa
add
adc
loopne
fcom
and
push
or
xchg
push
cwde
cmc
add
lds
mov
pop
xchg
inc
xchg
xchg
not
push
into
push
push
mov
pusha
test
(bad)
leave
cmp
xlat
ficom
cmp
out
xor
cld
cmp
mov
add
pop
gs
shl
jno
push
outs
sub
in
mov
add
push
mov
adc
mov
pop
mov
push
and
pop
or
stc
fs
enter
cmp
imul
jnp
xor
in
jno
in
inc
push
inc
test
sub
inc
mov
ror
add
fisttp
imul
je
paddw
add
pop
push
push
xor
xlat
push
js
or
into
pop
cwde
add
mov
popf
xchg
sbb
jae
cmc
mov
mov
jbe
push
xchg
not
mov
cmp
sbb
movs
out
(bad)
jg
je
iret
add
lods
sbb
in
(bad)
fisub
cdq
add
loopne
and
addr16
cmp
repnz
inc
lahf
xor
mov
es
hlt
ss
pop
and
mov
jo
stos
(bad)
mov
push
pop
jmp
xchg
scas
xchg
mov
cmc
popa
out
test
pop
loope
push
mov
sbb
push
movs
dec
sub
into
cdq
into
imul
(bad)
pop
jnp
or
mov
test
aam
repnz
xor
mov
mov
push
test
test
dec
xchg
xor
mov
test
and
jmp
sbb
je
mov
jge
aas
lahf
mov
mov
push
in
and
or
scas
in
vmovntps
sbb
pop
arpl
test
sub
add
add
push
sbb
mov
gs
sub
mov
stos
xor
mov
movs
shl
mov
call
test
fnsave
mov
repz
mov
in
pop
or
ds
adc
xchg
jne
dec
dec
test
mov
or
sbb
mov
push
mov
cmp
js
stc
mov
add
or
jne
mov
neg
mov
cld
retf
push
mov
scas
out
mov
adc
pop
test
sbb
xor
ss
int
iret
push
lods
imul
dec
cmp
daa
xor
dec
or
in
(bad)
sar
loopne
ins
js
lods
cdq
pop
mov
mov
daa
mov
adc
aam
mov
fist
retf
push
loopne
push
movs
xor
or
push
(bad)
sbb
and
out
fisttp
jnp
xchg
aas
pop
jns
pop
or
cs
repnz
xor
enter
retf
or
adc
out
cmps
push
mov
retf
ins
call
std
mov
pop
jb
or
in
adc
add
mov
in
xchg
sub
mov
call
es
mov
sub
xchg
xor
fcmovbe
cmps
push
not
jo
aad
mov
(bad)
adc
ror
mov
xor
pop
rep
aas
in
and
pop
dec
sti
popf
cdq
outs
pop
dec
test
or
fmulp
mov
movs
and
inc
and
mov
sete
aas
push
data16
(bad)
mov
jle
sbb
inc
add
cmp
and
push
out
inc
test
cli
sub
into
and
test
push
test
out
data16
ds
or
popa
mov
jl
mov
call
xchg
int
mov
popa
(bad)
xchg
mov
shl
inc
sbb
icebp
ss
pop
fisub
or
das
pop
mov
or
sub
aas
sub
fwait
pop
xor
ret
pop
jo
dec
push
loop
iret
sub
sbb
pop
iret
push
loope
std
test
ins
aaa
pop
mov
mov
push
mov
inc
test
xor
lock
popa
cli
xchg
dec
inc
aad
nop
inc
adc
addr16
aaa
cmp
or
iret
inc
and
inc
jne
jns
std
int
sub
sub
scas
popf
sar
sub
popa
fisubr
jle
les
je
call
sbb
push
dec
ret
jne
push
fiadd
cld
mov
sbb
pop
inc
ds
pop
inc
iret
xchg
div
hlt
into
pushf
scas
xor
lahf
jno
popf
lock
frstor
(bad)
mov
mov
stc
das
xchg
not
loop
out
fdiv
in
icebp
xchg
not
pop
xchg
inc
mov
leave
add
cmps
test
(bad)
inc
adc
pop
sbb
push
cwde
xchg
pop
movs
and
fisub
lock
sbb
add
xor
cmc
pop
inc
out
inc
lods
jbe
pop
push
aas
dec
sub
xchg
leave
mov
push
or
fwait
pushf
jecxz
mov
jmp
pop
sbb
or
int
mov
sub
lea
xlat
mov
fld
xchg
sub
lahf
pop
push
imul
loopne
sub
dec
pop
js
cmc
pop
xchg
aad
or
ror
sbb
mov
sbb
jbe
cmps
lds
sbb
and
xor
and
mov
pop
stos
inc
inc
imul
pop
cmp
cmps
push
and
fs
jp
idiv
xor
shr
xchg
jae
jle
lahf
mov
push
or
mov
add
jmp
mov
jbe
mov
(bad)
adc
pop
rol
push
pop
in
and
data16
ds
adc
xchg
sti
pushf
jae
jo
mov
xchg
pop
lea
add
push
nop
sahf
out
shl
sbb
adc
push
xor
inc
(bad)
fild
lods
aad
cmps
xor
je
push
sbb
cld
jns
inc
clc
cmps
lods
movs
jno
in
cmps
and
sub
movs
or
dec
pop
xor
fstp
arpl
(bad)
cs
arpl
mov
cld
loope
adc
imul
mov
sub
mov
sahf
rol
icebp
rcr
bound
xchg
and
or
add
clc
mov
call
mov
popa
imul
cmp
or
jl
in
sar
fild
popf
stos
mov
mov
in
fcmovne
fistp
mov
jnp
(bad)
push
xchg
sub
es
fwait
push
inc
xchg
mov
mov
add
(bad)
xchg
fdivr
or
inc
rcl
xor
sub
inc
jmp
clc
pop
inc
dec
or
stos
and
gs
imul
das
sbb
pop
hlt
push
mov
aas
jmp
cmp
ds
or
sub
adc
xor
in
inc
and
sub
xor
and
pop
ins
sbb
add
jecxz
cmp
ins
rol
xchg
stc
fadd
clc
mov
jns
jecxz
or
or
push
leave
xchg
dec
cmc
cmp
mov
test
jbe
movs
push
inc
xchg
adc
sbb
repnz
fstp
xlat
lods
stos
in
sahf
out
lahf
mov
push
add
inc
sar
jo
loope
pop
test
out
pop
pop
imul
jno
mov
and
rcr
lods
xchg
call
out
shr
int3
das
nop
aaa
sar
xchg
push
mov
retf
loop
mov
xor
push
push
cmp
cli
fadd
cmp
adc
adc
dec
cmp
jg
dec
mov
sub
int
out
int3
adc
jne
test
cmps
mov
mov
(bad)
aam
dec
imul
jmp
mov
fs
iret
mov
fiadd
push
dec
shl
fdiv
das
outs
movs
scas
or
pop
xor
addr16
sub
mov
bound
pop
jge
cmps
mov
push
sub
jecxz
in
lea
pop
aam
(bad)
or
mov
in
jle
nop
or
mov
fild
rcr
push
inc
cdq
fsub
push
jp
pushf
push
loopne
stc
pushf
and
xlat
mov
add
or
and
or
mov
(bad)
push
jmp
xor
jle
xchg
mov
dec
fsubp
(bad)
add
outs
ins
loope
jno
(bad)
mov
aam
adc
stos
or
pop
pop
bound
sbb
mov
jl
mov
clc
adc
popa
js
test
cwde
daa
jo
sub
xchg
cmp
inc
jecxz
cld
cmp
ins
and
dec
loope
cmps
stc
ret
dec
add
test
xchg
movs
pop
cs
ss
shl
dec
adc
mov
xor
popa
test
jae
ins
jne
cld
and
pop
jns
lods
add
cmp
popf
jge
or
jmp
lods
and
cmps
push
cmp
push
out
test
sbb
cmp
out
shl
xchg
jp
jae
xchg
sub
cmovae
mov
push
scas
imul
scas
vpinsrw
add
jle
fucomi
add
bnd
inc
sbb
xorps
and
jmp
(bad)
and
sub
mov
push
push
in
test
out
pop
(bad)
int3
(bad)
test
div
adc
push
retf
push
out
jbe
xchg
mov
pop
aaa
in
dec
dec
add
stos
push
mov
inc
das
fsubr
movs
stc
adc
xchg
out
pop
stos
dec
lea
dec
mov
hlt
sub
mov
sub
inc
cmp
dec
nop
(bad)
in
push
out
addr16
jb
ss
ja
scas
sub
test
pop
jo
mov
movs
daa
mov
inc
js
lock
and
cmp
shl
push
aad
lahf
dec
popa
pop
enter
sub
rcr
xor
add
shr
mov
retf
sti
dec
adc
pop
or
cli
out
scas
cmps
xchg
stos
jae
bound
jle
fidivr
je
add
jo
leave
cmp
sti
mov
int3
fild
cwde
xorps
outs
icebp
adc
mov
and
and
xchg
pop
sahf
jg
mov
lea
lods
in
mov
call
push
into
xor
shr
idiv
adc
xor
lds
in
pop
rcr
xchg
inc
imul
aaa
pop
je
mov
jle
pop
shl
jecxz
sti
dec
stos
xor
outs
add
inc
xchg
aad
and
push
cmps
pop
push
dec
test
dec
add
cmps
popa
(bad)
cmp
mov
shr
popa
dec
scas
(bad)
pop
add
pop
stc
(bad)
mov
inc
iret
jmp
dec
mov
mov
jnp
pop
jle
add
cwde
movs
aam
mov
or
inc
xchg
inc
mov
out
push
scas
lods
dec
mov
cmp
fdiv
dec
cmps
mov
mov
into
cmps
sub
add
and
ds
aas
pop
and
mov
xor
fidivr
and
(bad)
mov
fcmovnu
push
dec
push
add
cmps
nop
aas
cmc
daa
cli
adc
mov
dec
(bad)
call
imul
xchg
pop
mov
and
dec
(bad)
stc
jecxz
pushf
popa
pop
xchg
out
test
xor
imul
mov
add
mov
pushf
sub
xchg
pop
adc
scas
lahf
popf
sbb
xor
lods
lds
ss
xchg
mov
movs
outs
adc
mov
cmp
jl
or
test
or
add
fdivr
aam
sub
ret
jmp
dec
push
cli
cmp
xor
paddq
or
retf
loopne
fcomp
icebp
ret
inc
lahf
sub
push
sub
(bad)
xchg
jae
fild
das
sbb
mov
or
pop
iret
out
cld
xor
adc
push
gs
test
inc
add
loope
setbe
loop
dec
sbb
pop
xchg
mov
and
mov
mov
mov
cmp
fsubr
jmp
mov
enter
ret
shr
xchg
pop
in
mov
adc
mov
pop
jecxz
cmc
add
mov
push
xlat
repz
std
sbb
in
inc
stos
xor
loop
mov
dec
push
cmp
loopne
sbb
mov
mov
fdivr
leave
repz
xor
aad
mov
cmp
mov
mov
xchg
inc
shl
cmps
into
push
ret
(bad)
(bad)
mov
mov
dec
retf
cli
and
adc
iret
inc
add
sbb
stc
retf
stos
lds
adc
in
cs
pop
push
lods
aam
mov
xchg
xor
mov
inc
stos
in
xor
and
mov
leave
test
(bad)
retf
or
xchg
hlt
dec
jmp
jo
pop
pop
test
cli
and
mov
add
add
jmp
push
push
jmp
push
jle
pop
(bad)
mov
loope
fs
push
push
jmp
sbb
cmp
dec
add
sub
xlat
pop
aad
cmp
loopne
fs
je
into
and
pop
out
xor
popa
pop
mov
cmp
inc
xor
jge
pop
movs
or
or
inc
(bad)
fcomp
arpl
loopne
mov
pop
or
mov
pop
mov
push
xchg
and
data16
jno
idiv
data16
es
(bad)
dec
shr
call
into
and
or
dec
dec
add
pop
mov
loope
pushf
fiadd
mov
scas
out
xchg
les
pop
mov
xor
movs
popf
fisttp
and
arpl
adc
xchg
jb
mov
jnp
push
or
xchg
cmc
nop
inc
cdq
inc
fwait
cmp
sbb
aad
bswap
pop
scas
pop
arpl
cs
dec
inc
and
cmc
arpl
ja
daa
ins
(bad)
add
mov
sub
pop
outs
mov
jecxz
into
daa
ja
jno
xchg
jmp
cmp
(bad)
push
lea
xchg
icebp
in
call
xchg
daa
retf
mov
data16
aas
stc
nop
lods
pop
inc
aaa
xchg
and
ficom
fisttp
stos
rol
fidiv
cmps
xlat
scas
mov
mov
sbb
pop
and
repz
pusha
mov
add
mov
loopne
push
xor
neg
add
icebp
or
jecxz
stos
repz
rol
mov
ret
push
push
ss
enter
inc
fwait
and
mov
sub
push
hlt
sbb
popf
cmp
push
xchg
inc
jno
cs
push
ja
push
fcmovnu
fldl2e
mov
push
(bad)
and
fist
fild
pop
xchg
dec
imul
ret
adc
rol
sbb
dec
shl
popf
mov
pop
div
fnstcw
sti
xchg
mov
jge
fadd
rcr
shl
ret
cwde
stos
jnp
add
sub
les
jno
push
mov
movs
lods
pop
lock
test
neg
cmp
push
ds
xor
mov
add
cmp
add
jmp
mov
mov
push
jg
pop
scas
mov
cmps
movs
cmp
mov
sbb
xchg
jmp
mov
sbb
and
rcr
dec
xor
jnp
and
mov
mov
dec
sbb
sbb
mov
aaa
popf
pop
dec
mov
cmovle
sbb
lock
sub
mov
sar
ss
jnp
cmp
mov
je
sub
adc
outs
int3
in
fdiv
(bad)
jb
mov
movs
sub
sbb
mov
nop
mov
popa
jo
into
pop
jb
xchg
aaa
add
cdq
push
add
pop
outs
mov
lods
hlt
mov
dec
or
xchg
out
mov
inc
push
jecxz
lods
fadd
fistp
div
sbb
jle
out
pop
in
push
scas
or
ja
lea
(bad)
ret
inc
xor
lock
cdq
mov
inc
xchg
jne
push
sub
pop
jmp
lods
dec
sbb
in
xor
xchg
xor
sub
int3
pop
cmp
std
pop
pop
aad
push
jecxz
nop
retf
mov
mov
retf
sub
lahf
jmp
mov
inc
xchg
pop
dec
inc
pop
mov
cmp
jp
sbb
add
sbb
dec
cmp
fiadd
sbb
xor
fidiv
mov
dec
pop
unpcklps
fld
(bad)
das
ja
xchg
je
push
cmp
fdivr
test
mov
(bad)
ins
fsubrp
or
add
cmp
mov
or
cmp
xor
mov
jne
(bad)
adc
ret
test
fdiv
xchg
or
xchg
jae
mov
mov
lods
retf
dec
arpl
sub
dec
sub
jecxz
daa
outs
push
loop
push
cmp
jl
mov
adc
mov
mov
jge
dec
push
push
mov
mov
fimul
dec
fwait
jae
xlat
ins
pop
jb
cmp
mov
lahf
popf
and
add
aad
lea
pushf
pushf
xchg
rol
mov
shr
repz
or
mov
adc
in
dec
xchg
jecxz
fwait
xor
nop
or
or
out
aaa
cmp
aam
lods
cmps
mov
push
cmp
dec
dec
pop
jnp
stos
add
fistp
jge
out
fwait
sti
adc
lods
int
scas
fiadd
mov
mov
mov
jae
in
xchg
jp
cli
fcomp
ret
and
mov
dec
or
sar
sbb
xchg
or
mov
xchg
aaa
dec
(bad)
je
ss
sti
push
add
push
jo
push
add
fld
dec
fs
out
fwait
inc
cmp
cld
add
dec
sahf
sbb
in
jge
fs
sbb
repz
xor
scas
inc
ror
jg
lahf
pop
cmp
sub
dec
imul
push
adc
push
adc
ret
push
cmp
and
mov
cdq
loop
push
stos
mov
push
mov
or
mov
out
out
mov
fistp
jae
pop
repnz
aaa
and
mov
nop
jno
cmp
lahf
das
mov
push
sti
adc
xchg
adc
cmp
test
push
jge
lock
add
call
retf
aad
lahf
jle
rol
ret
push
and
ret
jb
iret
arpl
adc
sub
push
push
movs
push
out
inc
js
cmp
cmp
jecxz
ins
ror
cdq
jno
mov
jnp
and
fistp
xor
inc
mov
push
(bad)
pop
repz
repz
ss
jmp
jle
outs
and
bound
stos
cmc
rcr
cmps
out
retf
ror
jne
jbe
stos
lods
or
add
add
aam
mov
ds
dec
xchg
mul
sub
adc
out
pop
cwde
icebp
mov
(bad)
pop
std
pop
test
lods
xor
mov
pop
dec
inc
dec
ins
inc
test
sub
sbb
mov
pop
xor
dec
mov
lds
xor
ins
(bad)
xchg
in
pop
popf
and
les
aas
add
ds
jae
cmp
xchg
jne
pop
arpl
sub
iret
out
cmp
adc
in
mov
gs
push
aam
sti
add
cmp
mov
in
pop
pop
aam
jns
push
dec
xor
loopne
add
shl
sahf
xchg
ins
ins
xchg
sbb
bound
ret
cmps
or
scas
or
xor
inc
mov
scas
movs
mov
leave
mov
mov
push
xchg
adc
popf
out
cmps
aam
cmp
stos
or
pop
int3
iret
xor
cmp
cmps
jp
push
adc
das
mov
clc
push
fs
add
int3
jmp
add
mov
jnp
icebp
inc
push
scas
out
cmp
in
push
push
jle
cmp
mov
mov
out
xchg
mov
pusha
add
ret
inc
inc
pushf
adc
push
fsub
xor
xor
fs
or
adc
mov
inc
aad
push
jmp
adc
sub
push
popf
pop
popa
push
retf
mov
ffree
xchg
jo
dec
xor
or
jg
inc
je
or
jecxz
push
cmp
jnp
das
(bad)
jo
lea
sbb
xchg
int3
test
pop
dec
in
(bad)
mov
out
cmc
out
fcom
jae
mov
cmp
sbb
(bad)
daa
mov
jnp
push
and
jecxz
fwait
aam
adc
rsqrtps
mov
pop
and
cld
xchg
retf
sahf
(bad)
sub
popf
pop
xor
push
out
xchg
ins
inc
(bad)
mov
lods
data16
rol
int
call
jmp
ret
ror
inc
pop
push
dec
shl
in
sbb
xlat
out
jmp
inc
(bad)
push
add
push
scas
sbb
adc
xor
addr16
ins
jb
cmp
xchg
fimul
in
mov
dec
xor
xchg
mov
lds
mov
xor
lods
outs
inc
test
test
fisubr
push
leave
mov
rol
or
sub
or
in
call
int
test
mov
xor
and
sbb
mov
and
nop
in
call
cdq
sub
mov
xor
loop
jmp
push
xchg
fwait
arpl
fmul
(bad)
dec
sub
mov
out
xor
(bad)
aam
icebp
mov
pop
ror
sbb
ja
mov
jne
cmp
adc
frstor
test
jb
inc
jg
retf
clc
dec
shr
fldenv
popa
das
cmps
loope
inc
inc
sbb
dec
jle
sub
repz
mov
push
out
fxch
inc
aam
ror
pusha
fimul
vmovntps
or
push
les
xor
fisttp
test
or
iret
das
jo
mov
addr16
mov
jge
push
in
dec
inc
mov
imul
adc
and
fisub
sar
outs
mov
dec
mov
outs
xor
stc
aas
or
shl
imul
sbb
jne
jle
mul
cmp
out
or
xchg
adc
or
xchg
lods
push
cwde
aaa
inc
and
xchg
adc
fcom
mov
mov
mov
jp
mov
cmp
je
jg
inc
xor
cdq
jp
cmc
adc
mov
icebp
push
out
(bad)
pop
sub
int3
jb
xor
jb
sbb
and
inc
iret
pop
lds
sbb
and
inc
mov
or
lods
adc
das
cmp
(bad)
ret
or
imul
and
movs
xchg
ds
call
and
cmp
popf
and
or
nop
adc
mov
sbb
inc
cwde
mov
cdq
and
jnp
into
sub
add
jl
pop
mov
addr16
(bad)
mov
out
jne
pop
loop
loop
(bad)
mov
dec
cmp
push
cmp
loopne
imul
mov
jb
daa
out
xchg
add
mov
push
cmp
inc
aad
xlat
cmp
jbe
lods
push
jno
scas
fbstp
cli
(bad)
xor
jge
ds
adc
repz
xchg
and
mov
pop
mov
add
pop
push
mov
jmp
cmps
dec
je
push
jno
les
push
mov
(bad)
sub
push
sbb
call
scas
fst
push
sbb
aas
test
dec
stc
into
xchg
dec
loopne
call
je
popa
pop
scas
fwait
mov
mov
hlt
dec
dec
shl
xor
sub
pop
push
fiadd
jnp
jo
js
cmc
xor
mov
sahf
mov
or
lods
xor
sbb
imul
jle
std
jge
addr16
pop
cmps
inc
add
xchg
mov
mov
int3
adc
ret
(bad)
sbb
mov
fwait
dec
xor
retf
add
jmp
dec
jbe
(bad)
mov
aas
ds
sbb
cli
and
pop
add
sub
mov
jge
sbb
and
(bad)
std
push
into
jl
scas
dec
inc
mov
imul
add
in
adc
dec
(bad)
clc
adc
mov
xor
cli
mov
cmc
cmp
inc
or
sbb
push
je
pop
sub
xchg
nop
sti
jne
or
stos
add
cdq
rcr
ret
call
push
xor
ins
xchg
inc
bound
into
mov
cdq
jno
sub
add
icebp
outs
adc
pop
addr16
mov
aas
out
movs
retf
aaa
xlat
sub
dec
sub
sub
pop
pop
push
fistp
cmp
cmp
popf
jno
sbb
xlat
stos
mov
jge
add
js
test
out
mov
cld
xor
pop
repz
mov
test
inc
cwde
fild
sub
test
fnstenv
push
add
mov
inc
xchg
jl
push
arpl
idiv
lock
mov
pop
jae
(bad)
es
(bad)
in
cli
push
pushf
ss
and
cmp
cmps
push
mov
mov
mov
retf
dec
cmp
dec
mov
(bad)
std
jmp
pushf
and
scas
leave
shl
bound
sbb
adc
add
cdq
sbb
out
jo
mov
inc
push
shr
data16
fidiv
into
sahf
adc
int
push
mov
push
popa
dec
xchg
out
mov
test
mul
push
cmp
and
scas
cmp
jp
out
sbb
sub
ret
mov
stos
loopne
sub
dec
pslld
arpl
mov
sub
aas
inc
xchg
not
out
fisttp
mov
mov
iret
addr16
xor
push
pop
pop
and
pop
or
int3
jo
pop
mov
outs
std
adc
pop
mov
shl
cdq
iret
ret
adc
hlt
cmp
fild
mov
mov
mov
sub
aam
(bad)
cmps
mov
int
pusha
and
imul
jle
xchg
dec
fst
aas
adc
cdq
pop
jmp
outs
ins
pop
and
jmp
inc
add
jo
jle
inc
add
clc
loopne
mov
mov
loopne
lahf
leave
cdq
adc
cmps
loope
fld
addr16
xchg
adc
clc
and
pop
xor
mov
mov
push
scas
pop
out
xchg
test
cmps
cmps
jae
mov
lods
sahf
scas
push
pop
adc
add
jnp
cli
mov
sbb
aas
fs
and
mov
ss
aas
vpsubusw
popf
push
call
xor
hlt
ds
xchg
ret
pusha
xor
xchg
mov
dec
xor
dec
push
out
inc
jle
cmps
test
mov
(bad)
shl
or
mov
cmp
mov
ret
fld
scas
sub
in
aam
lea
mov
icebp
pop
pusha
sbb
in
push
pop
ds
shl
(bad)
jmp
mov
adc
popa
and
sbb
sbb
je
fs
mov
mov
lea
pop
push
movs
xor
jne
dec
jno
push
cwde
(bad)
cmp
inc
icebp
imul
gs
addr16
movs
fidivr
and
sub
aam
test
xchg
and
pop
add
xlat
loop
inc
add
fisttp
popa
cmc
sub
js
push
leave
(bad)
out
xchg
cwde
sub
adc
sbb
aad
fsubr
int
fwait
into
mov
aad
add
fsubr
enter
mov
jmp
in
jmp
inc
outs
pop
popf
cmp
cmp
and
dec
push
jnp
aaa
popa
mov
lock
movs
(bad)
fs
jnp
and
jne
jae
add
push
jnp
nop
pop
arpl
and
xor
adc
bound
ror
mov
cli
add
sbb
loope
xor
push
cli
jae
pop
repz
dec
sub
aaa
pushf
(bad)
in
std
in
das
push
nop
inc
test
call
loope
mov
xchg
fwait
jno
inc
mov
push
stos
mov
push
(bad)
and
into
test
sub
call
daa
sbb
scas
in
add
xchg
dec
xor
out
and
pop
adc
std
rcl
cmp
scas
not
cmps
inc
movs
(bad)
fs
(bad)
(bad)
ins
aam
sub
mov
ret
pop
xor
xchg
retf
in
rol
test
aaa
sti
push
mov
and
mov
add
pop
movs
ds
adc
mov
jbe
cmp
fisttp
xor
xor
add
jp
cmp
sbb
int
xchg
push
stc
jo
sbb
pop
push
jae
in
stc
push
xchg
retf
jno
stos
mov
mov
aam
mov
(bad)
inc
sbb
int
ret
scas
mov
into
mov
test
data16
cmps
repz
mov
pop
cmp
loopne
jno
shl
cmp
aas
and
movs
mov
mov
pop
xchg
daa
xor
dec
xchg
pop
stos
mov
sub
or
clc
pop
push
pop
test
jne
xchg
sub
cmp
cmp
ins
inc
fcmovnu
jb
arpl
mov
imul
bound
ret
test
aaa
fnstsw
jge
push
sub
and
mov
sbb
aaa
(bad)
sub
pop
stc
shl
dec
(bad)
adc
cmp
push
jmp
adc
iret
push
xchg
cld
sbb
data16
inc
add
out
xchg
jns
sub
bound
pop
push
inc
cmp
cmp
inc
pop
out
xor
cld
dec
xor
sbb
or
mov
test
out
adc
mov
pavgb
add
and
add
xchg
sar
enter
sbb
scas
xor
sar
sbb
xor
dec
pop
ret
outs
cmp
dec
(bad)
aas
or
clc
pop
add
push
push
repnz
je
xchg
xchg
popf
adc
pusha
fst
inc
stos
shl
ror
or
pop
sbb
mov
fisubr
or
pop
cmp
popa
and
dec
aad
lods
outs
loope
cli
jbe
xor
mov
xor
xor
cmp
adc
dec
mov
jp
inc
cli
fmul
jl
pop
test
push
test
add
fnstcw
dec
jne
sub
or
loop
jo
out
stc
aad
cmps
scas
lods
cmp
add
xchg
push
pop
iret
fisttp
and
dec
shr
es
lahf
and
test
aam
mov
mov
enter
dec
cmp
in
jge
out
push
sub
xor
sub
push
lods
rol
and
adc
dec
dec
imul
jnp
loope
cmp
add
out
leave
mov
std
lock
xchg
pop
fs
mov
jno
icebp
test
les
adc
xor
hlt
icebp
cmps
cmp
and
inc
lea
push
sbb
mov
scas
bnd
jnp
adc
mov
call
inc
push
mov
shl
or
test
lods
mov
jge
and
mul
daa
mov
stc
scas
sub
jmp
xchg
sub
or
cmc
inc
fiadd
rcr
sbb
mov
imul
sbb
mov
in
pop
mov
xchg
push
adc
mov
inc
jbe
int3
ins
idiv
ficomp
jnp
mov
adc
cmp
mov
lahf
je
retf
test
mov
mov
fcmovnb
cld
inc
fisub
adc
fst
dec
sbb
ja
pop
pop
in
xor
popa
mov
or
call
sbb
mov
gs
push
xchg
popa
adc
jne
lea
mov
xor
shl
popf
mov
outs
lea
mov
shl
inc
popf
mov
retf
(bad)
int
mov
into
mov
or
push
xor
jo
sbb
push
xor
jo
dec
mov
add
cmp
add
frstor
(bad)
sti
pop
test
addr16
adc
push
in
daa
imul
(bad)
add
pop
(bad)
mov
out
aaa
dec
pop
adc
mov
xor
rol
nop
dec
sub
into
lahf
inc
jns
sub
fld
mov
test
and
inc
jbe
dec
jno
pop
jle
lods
loope
jns
inc
(bad)
mov
loop
add
fimul
(bad)
xchg
shl
cmp
cmp
pop
jge
mov
pop
mov
es
add
(bad)
call
cmps
popf
xlat
cli
(bad)
call
rol
(bad)
pop
dec
cli
xor
push
jp
dec
pop
fnstcw
push
pop
inc
faddp
pop
xchg
pop
das
pop
dec
bound
cmp
aaa
addr16
dec
shr
xchg
enter
add
daa
add
dec
enter
int
cmp
(bad)
push
fdiv
inc
sbb
mov
add
sbb
xor
push
jle
nop
ficomp
div
popf
push
in
jle
or
pop
inc
mov
xlat
adc
pop
sti
les
cmc
scas
imul
mov
and
rol
and
inc
mov
push
adc
test
loop
and
push
and
out
cmps
mov
jecxz
mov
ret
xchg
pop
cmp
sub
shl
loopne
retf
cmp
and
and
(bad)
and
call
cmp
jbe
jle
mov
cmp
std
lods
mov
(bad)
push
jae
stos
mov
test
pop
(bad)
icebp
add
or
or
(bad)
cli
xchg
inc
test
ins
movs
jle
dec
sbb
data16
arpl
mov
leave
and
jbe
jnp
mov
stos
int
les
imul
fild
enter
jmp
mov
fcmovne
fs
xor
ffree
ret
ins
retf
pop
les
inc
push
les
pop
daa
out
cmp
push
xor
mov
sbb
mov
sub
out
(bad)
cmp
dec
mov
ins
push
sub
add
cmps
adc
sub
inc
push
pop
push
pop
(bad)
popf
push
mov
rcr
cli
mov
pop
jle
aam
(bad)
fcomp
nop
inc
and
sbb
out
movs
in
xor
mov
mul
fmul
mov
push
inc
cmp
inc
(bad)
and
or
jnp
stos
rol
xor
mov
add
arpl
sbb
push
clc
and
or
cwde
xor
dec
loope
call
push
sbb
sub
xchg
dec
fdivr
or
mov
cmp
mov
mov
data16
xchg
outs
popa
jp
enter
pusha
fwait
add
std
ret
mov
inc
xchg
dec
dec
in
xor
fbstp
pop
xchg
xchg
clc
sub
int
ds
shr
or
jbe
push
sahf
hlt
xchg
dec
mov
loope
lahf
loop
das
cmp
mov
jb
dec
cs
in
sbb
lds
sub
add
push
pushf
jno
jae
pop
inc
repz
xor
sbb
xor
push
fbld
jecxz
popa
pop
add
add
sub
pop
cli
mov
sbb
lods
pop
cli
enter
dec
xchg
mov
sub
jl
call
ins
xchg
xchg
neg
aas
pop
test
imul
ror
pop
loopne
xor
ss
mov
mov
pcmpeqw
outs
sbb
push
mov
push
outs
xor
test
fisubr
stc
leave
xchg
cmp
sub
pop
cmp
scas
jmp
mov
mov
addr16
dec
daa
dec
invd
pop
les
call
lods
xchg
fstp
sti
and
dec
mov
jmp
push
sbb
fisttp
lahf
jns
inc
enter
les
es
adc
imul
mov
cdq
ins
jge
ja
mov
mov
push
iret
fsubr
popf
and
lea
or
stos
(bad)
mov
jge
add
aad
pop
jnp
push
std
popf
and
test
pop
xlat
test
push
cmp
and
js
pop
dec
popf
mov
arpl
pusha
push
(bad)
adc
clc
xchg
fcmovnu
rol
xor
cmp
cmps
and
sub
sbb
test
push
mov
in
sub
mov
outs
(bad)
daa
inc
mov
inc
xor
aaa
in
push
es
xor
ss
mov
iret
mov
or
addr16
sub
mov
test
ret
(bad)
stos
mov
out
adc
(bad)
inc
inc
inc
sbb
xor
adc
xchg
push
daa
add
loopne
cmc
and
jo
fisubr
mov
fadd
and
mov
xor
aaa
fimul
or
push
scas
mov
scas
call
add
cmp
xor
and
mov
aad
pop
retf
dec
int
aam
bound
(bad)
movs
dec
iret
pop
cmps
and
icebp
cdq
mov
or
jae
pop
inc
mov
dec
ficomp
clc
mov
mov
push
xchg
fxch
movs
and
ins
mov
mov
jmp
movups
mov
push
es
or
or
mov
push
add
mov
or
aas
mov
xchg
loop
jp
arpl
dec
lock
xor
pop
movs
call
in
sbb
outs
idiv
inc
add
and
pop
pusha
outs
jne
dec
test
pop
and
mov
call
push
mov
imul
xor
sbb
(bad)
enter
lds
pop
pop
fs
pop
int
dec
and
cmovs
imul
lahf
xor
sub
std
in
les
xchg
stc
dec
dec
retf
push
jmp
imul
sub
mov
push
(bad)
and
xor
mov
int3
test
lods
jns
dec
dec
mov
jbe
sub
dec
pop
and
loop
mov
rcr
pop
dec
enter
pop
fcom
add
(bad)
mov
jmp
addr16
aad
ins
cdq
push
(bad)
jl
in
mov
dec
imul
sub
dec
test
inc
sbb
adc
lea
mov
sti
and
mov
xchg
inc
pusha
jp
adc
shl
js
mov
fimul
pop
xchg
pop
(bad)
lock
stc
in
mov
push
cmp
ss
sub
xlat
popf
popf
cmc
hlt
and
push
js
inc
lock
bnd
jmp
jb
jbe
mov
push
dec
or
int3
sbb
retf
pop
shl
push
aaa
xchg
jae
sbb
movs
sub
jbe
out
inc
or
jmp
sbb
mov
jne
adc
rcr
xchg
add
jbe
das
pop
rol
cmp
sbb
clc
sub
aam
gs
outs
sub
in
and
xor
adc
inc
xchg
sub
jle
push
or
scas
pop
outs
outs
(bad)
sti
add
inc
mov
fdiv
stc
adc
xchg
out
push
adc
ficomp
and
nop
fsubr
iret
or
sub
sti
iret
fsubr
add
ss
fnstsw
outs
pop
(bad)
neg
xchg
inc
xor
jne
in
dec
ins
and
push
mov
mov
jns
mov
dec
inc
sbb
pop
lahf
cvttps2pi
dec
xchg
mov
sub
outs
mov
sti
pop
inc
push
leave
clc
add
or
xchg
cli
idiv
lea
in
ins
adc
loop
mov
sbb
aas
add
xchg
dec
stc
pop
mov
test
cmps
pop
iret
xchg
stc
jae
inc
sub
sub
rcl
push
add
pop
add
jmp
stos
lock
sub
bound
or
popa
and
cwde
shr
dec
adc
mov
out
pop
inc
mov
repnz
sub
push
mov
mov
shr
push
xchg
pop
sub
sub
jns
rol
ja
cmp
nop
xchg
(bad)
push
arpl
xor
pop
int
leave
or
fsubr
mov
jg
dec
frstor
dec
or
mov
stos
adc
fdivr
shl
push
inc
dec
nop
sbb
retf
ret
jecxz
inc
mov
pop
add
mov
ins
jo
pop
push
scas
(bad)
cmp
mov
mov
imul
inc
jnp
call
cmps
xor
jnp
lods
push
das
pmaxub
mov
dec
arpl
ss
cs
inc
out
addr16
jmp
pop
in
ss
aad
(bad)
lods
enter
rcr
lock
sub
aad
or
shld
dec
add
inc
mov
mov
cmp
adc
lahf
out
adc
fdivr
xchg
mov
stc
xor
std
cmp
out
jno
mov
fwait
jecxz
aas
cmp
mov
popa
cmc
ret
(bad)
sub
cli
in
es
mov
js
leave
in
cmc
cmp
xchg
adc
lock
pop
adc
fisubr
xor
shl
imul
inc
sub
sub
xchg
push
push
push
push
rol
imul
sahf
das
(bad)
push
rcr
dec
fistp
fild
test
loope
inc
mov
jbe
out
xor
call
mov
push
rcl
call
ss
retf
icebp
stc
stos
dec
push
sub
call
lods
mov
mov
dec
mov
mov
(bad)
rcr
pushf
xchg
sub
lahf
bnd
and
f2xm1
(bad)
stos
sub
popa
jae
test
mov
jge
clc
clc
mov
jl
rcl
in
fwait
stos
mov
cmp
adc
xor
ins
mov
out
dec
add
mov
dec
push
mov
cmc
jp
mov
add
int
and
jle
out
loope
and
adc
mov
and
pop
movs
jns
mov
xchg
fnstsw
xchg
sbb
pusha
jecxz
sbb
and
sub
mov
dec
adc
xchg
fisttp
cmc
xlat
aas
jo
xchg
cmc
or
fbstp
push
or
es
adc
pushf
test
xor
stos
mov
enter
jno
nop
dec
inc
add
ins
or
fild
cmp
xchg
mov
int3
xchg
loop
bound
pop
mov
dec
xlat
(bad)
push
mov
test
dec
cmps
mov
pop
mov
add
mov
fxch
dec
aad
mov
jbe
jmp
cmp
retf
inc
push
es
cld
sbb
mov
add
pop
es
stos
pop
and
dec
jle
mov
in
add
cmp
mov
fnsave
leave
cmp
mov
sbb
rol
ror
cmc
adc
jmp
jno
mov
mul
mov
fs
pop
popf
cdq
cmp
push
jbe
jnp
or
lods
push
fdiv
pushf
cmp
adc
ja
sbb
mov
in
push
push
and
loope
sbb
add
push
push
movaps
hlt
jge
sahf
pop
jmp
fild
mov
push
or
mov
mov
cli
push
mov
add
cmp
adc
sbb
shl
push
xchg
lods
or
jnp
(bad)
(bad)
(bad)
push
out
jmp
retf
and
sbb
or
pop
loope
cmp
sbb
xchg
mov
inc
pop
dec
std
int3
sbb
cmp
(bad)
sub
imul
dec
ss
push
cmps
leave
jae
mov
je
aas
mov
lds
fistp
es
add
lea
push
mov
push
cwde
stos
pop
add
rcr
iret
sar
fdiv
xor
xor
sbb
mov
push
push
fiadd
jae
mov
add
mov
dec
dec
jp
leave
outs
lods
dec
push
and
lahf
neg
cmps
loopne
jge
mov
inc
and
push
sub
cs
(bad)
(bad)
clc
ss
fsin
xor
test
fwait
icebp
test
test
xor
mov
cmp
cmps
into
jae
xchg
push
push
adc
and
mov
jge
mov
test
sub
mov
xchg
mov
fcomp
test
inc
stc
cmp
in
movs
mov
shr
or
loopne
mov
fiadd
jmp
leave
sub
aas
dec
xchg
jg
bound
cmps
rcl
push
mov
test
mov
and
jmp
int3
pop
and
dec
xchg
or
pop
push
std
dec
cwde
sbb
pusha
mov
dec
aam
xlat
out
mov
and
outs
mov
pop
popa
(bad)
popa
sbb
xchg
inc
mov
sbb
xchg
stos
movs
sub
inc
nop
pop
pusha
sub
fdivr
aam
xchg
repnz
or
or
push
cld
loop
cmp
sar
lea
pushaw
mov
inc
aad
jmp
cmp
push
outs
xor
mov
and
std
int3
jecxz
push
sar
js
add
retf
scas
cmpps
pop
pop
adc
sbb
lds
es
lds
pop
mov
add
enter
imul
mov
mov
pop
mov
call
aas
cmp
cmp
jne
ds
ds
dec
xchg
push
addr16
loopne
or
jae
mov
dec
mov
pop
mov
out
push
nop
test
xchg
lds
sbb
and
jmp
test
pusha
out
(bad)
ss
xor
jp
and
push
lods
out
jno
inc
mov
xchg
pop
mov
push
stos
push
inc
mov
in
sbb
stos
loopne
cmp
addr16
arpl
cdq
cwde
mov
sbb
pusha
sti
dec
push
mov
rcl
add
xor
mov
mov
outs
fsubrp
mov
mov
addr16
dec
rcl
jmp
and
pop
mov
add
daa
sub
mov
scas
jle
cmp
stos
xchg
fidivr
push
mov
jns
mov
push
fcmovb
xchg
loope
bound
mov
lahf
pop
test
jae
xchg
call
push
xchg
jmp
je
ss
cld
xchg
add
pop
retf
sbb
sub
adc
retf
and
sti
std
push
aaa
outs
ret
jne
mov
or
repnz
fcmovnbe
mov
ja
ss
push
std
jmp
(bad)
(bad)
imul
or
xor
shl
sub
xor
fwait
test
bound
inc
test
xchg
push
gs
pop
aad
in
mov
push
rol
es
inc
mov
retf
jg
mov
or
mov
cmp
mov
js
or
xchg
jae
jp
fdivr
push
lods
xchg
scas
inc
retf
xor
xor
pop
cmps
cmp
mov
adc
arpl
dec
mov
retf
(bad)
ror
pushf
jmp
out
pop
leave
retf
inc
add
inc
or
(bad)
aad
in
shr
(bad)
push
enter
aam
loop
jnp
test
jp
xor
pop
shl
mov
aaa
(bad)
ficom
push
pop
and
cmp
lods
sub
inc
scas
out
movs
rcr
jl
jmp
add
imul
(bad)
fidivr
and
cmps
push
rcr
lods
mov
scas
mov
iret
mov
add
data16
sub
cmp
fs
stos
jp
pop
ret
leave
stos
sbb
retf
xchg
fs
hlt
test
icebp
out
lods
cmp
jmp
sbb
add
pusha
in
cwde
cwde
cmp
cmp
popa
push
jg
pop
dec
sub
add
sub
scas
dec
out
adc
mov
pop
data16
push
ror
cmp
mov
xor
loopne
dec
test
mov
nop
and
lea
fld
jne
push
cld
add
data16
jb
add
mov
lock
mov
adc
adc
pop
add
mov
adc
push
(bad)
pop
int3
dec
and
cmp
xchg
and
mov
mov
pop
mov
xchg
xor
pop
gs
pop
and
ror
cdq
mov
or
pushf
ins
pop
ret
ja
push
mov
jb
mov
ror
adc
add
rcl
pop
add
call
data16
outs
imul
add
test
cmps
xlat
sub
ins
mov
xchg
pop
nop
inc
lds
xor
xor
add
fidiv
ret
mov
lock
retf
dec
adc
cmc
and
cli
mov
and
mov
test
fcomp
or
mov
xor
xchg
enter
add
dec
(bad)
call
sub
ins
xlat
out
adc
pop
pop
dec
sub
mov
retf
and
and
mov
call
cmp
mov
push
adc
push
sub
jae
mov
arpl
daa
ret
loop
dec
popa
cmps
pop
mov
pop
sbb
xchg
xchg
bound
sbb
cmp
dec
pop
aas
and
pop
jecxz
cmp
push
add
mov
jg
lea
fist
jmp
and
push
mov
shr
push
popa
cmc
jmp
out
sbb
mov
ds
inc
mov
sbb
cbw
mov
out
cmp
not
adc
and
test
in
mov
cs
cmps
repz
dec
mov
xor
jmp
outs
arpl
in
(bad)
or
sub
repz
dec
scas
jecxz
(bad)
clc
mov
jg
iret
mov
(bad)
stos
icebp
add
adc
aas
cmc
call
imul
and
fcom
ds
in
mov
mov
mov
lds
xchg
scas
(bad)
mov
call
shl
mov
mov
pop
hlt
add
mov
jge
lock
pop
jae
cmp
ret
adc
sub
cmc
add
aam
mov
in
mov
pop
out
and
xor
mov
les
leave
aas
addr16
pop
imul
lods
das
adc
arpl
out
scas
mov
outs
mov
dec
cmp
jmp
ins
xchg
aas
add
mov
and
test
sub
das
aam
jb
xor
sahf
jg
mov
mov
test
imul
rol
dec
popa
repz
xor
mov
sbb
or
mov
push
adc
xchg
pop
mov
daa
sahf
inc
sub
push
nop
in
sub
mov
or
iret
mov
mov
loopne
xor
or
nop
add
(bad)
and
in
in
shl
pop
mov
test
sbb
les
mov
pop
js
leave
xchg
or
movs
push
in
add
jne
xchg
call
inc
das
adc
scas
hlt
jbe
stos
adc
lods
jle
aaa
mov
cld
adc
push
push
cs
mov
mov
or
mov
cmp
pop
retf
nop
mov
jmp
inc
(bad)
pop
movs
jecxz
inc
push
add
push
mov
aam
or
fist
jnp
jb
out
add
xor
cmp
cli
cmp
js
add
xor
in
add
out
ret
mov
jmp
ror
imul
pop
fwait
add
xor
ret
xor
push
gs
mov
fdiv
xchg
or
arpl
cmp
pop
sub
cmps
adc
call
arpl
das
retf
xchg
(bad)
inc
fbstp
xor
sub
out
jne
pop
aad
xor
mov
arpl
test
add
jl
mov
push
pop
sub
push
or
fdiv
(bad)
popf
lock
pop
cs
scas
inc
mov
push
(bad)
sahf
xor
add
mov
bound
fisttp
fdivr
and
push
(bad)
fiadd
adc
xchg
imul
sub
(bad)
fistp
lods
cmp
ins
and
sub
pop
mov
pop
scas
mov
jnp
push
gs
inc
scas
inc
js
xor
mov
add
push
daa
xchg
shl
mov
xchg
fwait
idiv
stc
pop
mov
sti
or
cwde
fnsetpm(287
xor
leave
mov
push
adc
inc
mov
test
leave
mov
inc
cmp
jmp
mov
dec
hlt
in
pop
dec
imul
stos
ret
sub
add
cld
data16
push
(bad)
and
movs
psubq
test
inc
jns
or
gs
inc
(bad)
fisub
(bad)
ret
outs
fiadd
cdq
ins
shl
xchg
xchg
jmp
in
(bad)
ds
shr
xor
jp
loopne
cmp
cmp
xor
sbb
jg
int3
ja
mov
adc
mov
(bad)
repz
sbb
popa
ds
and
lods
xchg
dec
and
mov
inc
jae
sub
and
pushf
ret
add
sti
pop
and
test
adc
adc
fcomp
mov
lock
or
idiv
ins
ret
lods
loopne
jge
into
push
pop
push
or
mov
push
arpl
mov
call
test
je
iret
mov
and
outs
mov
enter
add
xor
adc
dec
(bad)
fcmovne
mov
xchg
adc
pop
cdq
push
sub
imul
xchg
in
std
add
or
mov
cmp
lods
jnp
mov
pop
fmul
push
jae
(bad)
lock
inc
adc
mov
xchg
std
add
sbb
fsubr
(bad)
jle
dec
clc
stos
(bad)
cmp
mov
loopne
pop
mov
sbb
imul
sub
repnz
imul
scas
shl
jnp
sub
and
cmp
and
add
push
mov
or
ds
aas
(bad)
and
sub
clc
dec
pop
test
fnstcw
xor
cmp
jle
mov
dec
mov
xchg
ja
lock
mov
retf
retf
adc
not
jg
imul
les
lea
jae
pop
xchg
mov
out
les
rcr
test
pop
cmp
fstp
(bad)
or
stos
pop
imul
cmp
cmp
inc
mov
pop
(bad)
cld
call
repz
movs
int3
ss
mov
xchg
adc
xchg
pop
xor
in
clc
push
pop
shl
test
(bad)
jmp
mov
xor
inc
int3
xchg
push
adc
and
dec
mov
xchg
sbb
jge
sub
test
adc
push
and
mov
sahf
lods
sti
shl
ret
pop
hlt
test
loope
xor
scas
ds
daa
out
sbb
mov
jg
dec
mov
sub
cmp
ins
xor
das
jge
jle
or
xor
movs
cmp
jl
dec
or
sti
mov
je
sub
mov
sbb
mov
and
xor
int3
sub
or
mov
jp
hlt
dec
imul
fbld
div
and
fnstcw
cmps
and
adc
ins
scas
or
xor
push
xchg
sub
into
mov
js
into
ror
call
repnz
fs
repz
cli
into
inc
inc
cwde
add
outs
xor
cmp
mov
cld
in
mov
push
and
mov
stos
xor
pop
sbb
add
sbb
and
sbb
adc
in
iret
ins
mov
mov
xchg
dec
sub
mov
cdq
and
jns
jbe
cld
test
mov
or
in
cmp
cmp
imul
repnz
mov
jge
stc
scas
(bad)
cmc
mov
in
xor
leave
mov
(bad)
and
jmp
inc
inc
pop
xchg
and
leave
add
mov
cmps
lea
inc
imul
dec
out
pop
scas
or
lea
adc
aam
pop
loop
shl
push
cmc
add
stos
adc
pushf
mov
mov
retf
cs
in
fsub
loopne
jle
dec
std
fidivr
fisttp
sub
sti
jg
stos
jle
dec
xchg
mov
dec
mov
movs
pop
xor
push
sub
lods
jl
scas
out
adc
mov
or
jb
scas
pop
jmp
jb
push
inc
pop
cmp
loop
mov
sub
ds
stc
push
fdiv
in
inc
mov
xor
gs
movs
js
cmp
std
jp
cmp
pop
jge
in
shl
cmp
rcr
jmp
and
outs
push
cmc
xchg
sub
imul
xor
xor
call
mov
xchg
push
or
dec
mov
pushf
pop
cmps
sar
cmp
sbb
stc
dec
test
mov
je
ror
mov
cmc
data16
in
add
movs
mov
jecxz
ret
data16
inc
rcl
mov
sbb
in
sahf
mov
adc
cmp
div
add
(bad)
pop
in
int3
add
xchg
repnz
test
das
cmps
mov
addr16
sbb
pop
fidivr
out
dec
mov
or
push
mov
xor
jl
call
push
pop
sub
mov
fdiv
shl
loop
ror
ss
push
scas
sbb
pop
mov
pop
mov
cdq
dec
jo
mov
out
pop
out
mov
sbb
je
ds
push
jmp
mov
or
mov
add
jl
dec
inc
ins
lahf
lahf
nop
cs
or
pusha
lds
dec
lahf
ret
pop
cmp
(bad)
xor
jg
std
retf
adc
add
gs
adc
stc
icebp
into
push
sub
xchg
pop
push
mov
dec
push
mov
cli
adc
dec
out
adc
jns
out
add
and
dec
pop
jmp
(bad)
push
sub
ror
push
jl
fistp
mov
ret
cdq
mov
sbb
or
mov
icebp
mov
push
stc
jne
sti
cmp
cmp
push
dec
fild
test
push
mov
adc
popa
add
add
add
cmp
repnz
sbb
push
ja
adc
in
adc
sub
jne
xor
(bad)
out
fnstsw
push
dec
add
pop
jecxz
cwde
adc
push
mov
mov
and
add
xlat
lds
inc
popf
mul
xor
xchg
pop
mov
dec
mov
mov
and
inc
jg
scas
aaa
(bad)
jl
sbb
repz
sub
fdiv
cs
rol
cmp
xchg
dec
adc
js
mov
test
out
mov
in
aam
push
pop
and
cli
mov
retf
jg
jge
sub
sbb
push
shr
ins
into
mov
jb
lds
test
push
sar
inc
ret
sub
mov
inc
loop
ror
xchg
sub
aaa
cmp
ss
or
or
arpl
test
cs
retf
xchg
rcr
dec
into
and
loop
test
adc
popa
je
mov
ja
sub
aas
dec
jno
cmp
fs
outs
xor
loop
cwde
pop
push
mov
sub
icebp
xchg
into
or
mov
jmp
dec
mov
stos
adc
ins
inc
jge
out
or
xchg
fwait
out
inc
aaa
xor
push
addr16
enter
inc
stos
test
in
push
sbb
lock
adc
sub
push
inc
push
enter
inc
test
adc
add
push
push
jp
cdq
enter
push
push
std
or
dec
or
sbb
iret
jp
jp
adc
data16
adc
jne
retf
jno
jecxz
lea
imul
mov
cmp
pop
cli
fs
adc
ss
ins
xchg
ret
gs
add
jae
xor
sbb
and
pop
xchg
xchg
ror
add
lock
push
test
cwde
xchg
fiadd
loopne
or
mov
xor
push
rol
shr
and
pop
aad
das
jno
xor
cmc
sbb
sahf
sbb
jle
imul
push
push
xor
adc
sbb
rol
cmc
(bad)
stos
stos
fs
shl
mov
jns
icebp
jecxz
fldcw
mov
dec
loopne
dec
lds
sar
popf
push
pop
mov
rol
sub
(bad)
mov
xchg
or
loop
dec
aam
les
pop
rcl
and
xor
pop
stos
dec
inc
repz
cmc
in
sub
sub
data16
jecxz
pcmpeqb
xchg
stos
popf
ins
out
xchg
mov
xchg
add
in
daa
xchg
and
lock
ror
iret
add
push
adc
fcomip
sbb
shl
cwde
pop
addr16
push
adc
inc
loop
dec
shl
jecxz
nop
mov
sub
out
cmp
cdq
inc
sub
sti
cmp
je
jp
jecxz
outs
sub
inc
cmp
mov
ins
int
sti
aad
movs
cmp
xchg
popa
dec
ss
jle
outs
mov
cmc
scas
lock
dec
pop
jp
cmp
jle
mov
aas
mov
push
test
stos
div
aad
pusha
inc
mov
push
rcl
jns
inc
fnstenv
push
mov
outs
mov
retf
ror
inc
(bad)
in
inc
fcmovnb
or
sbb
sahf
cmp
out
and
push
cwde
cmp
icebp
mov
xor
jb
mov
mov
retf
bound
xchg
repnz
mov
sar
xor
dec
ror
popa
ds
sub
and
ins
xchg
pop
xlat
icebp
push
test
in
mov
pop
add
not
xchg
fldcw
and
mov
retf
lds
leave
retf
icebp
add
dec
mov
stc
cwde
sub
sub
xchg
push
mov
dec
test
inc
test
iret
pushf
aas
jo
mov
je
mov
inc
jbe
lods
popa
sbb
pop
(bad)
or
rcr
or
mov
xor
push
call
inc
adc
sbb
mov
call
arpl
jb
sbb
fiadd
push
add
fldcw
out
push
fcomp
lahf
dec
push
cld
shl
jne
mov
mov
push
mov
xor
sti
inc
mov
xchg
jbe
scas
rol
loopne
xchg
lods
outs
fst
cmp
jl
adc
retf
mov
jmp
mov
cli
or
stos
test
sahf
dec
pop
sbb
movs
icebp
jecxz
out
aaa
rcl
das
stc
mov
jmp
mov
or
(bad)
in
call
mov
add
int3
dec
imul
rol
repnz
add
sub
dec
xchg
sar
ret
outs
ss
sahf
not
mov
or
std
pop
sbb
(bad)
fstp
je
(bad)
mov
xchg
lods
cmp
jmp
cmp
xor
into
and
inc
push
data16
sahf
in
inc
inc
push
jmp
repnz
or
das
sub
jmp
jnp
pop
cmp
jno
mov
add
xchg
mov
xchg
call
mov
add
cli
or
mov
adc
push
pushf
adc
out
stos
repnz
jno
repnz
jae
cmp
adc
ret
add
call
cli
ss
jmp
(bad)
push
xor
ret
mov
push
fs
xor
or
mov
mov
ins
call
stos
or
add
les
pushf
lahf
lds
loop
add
mov
popa
test
iret
fsubr
sbb
popa
in
mov
jmp
xor
adc
cmps
fnsave
dec
push
mov
push
stc
std
scas
and
aas
lods
loop
cmp
popf
push
addr16
sub
sbb
or
ffree
push
mov
jl
xchg
pop
mov
js
push
jg
je
call
imul
push
lods
pop
fistp
iret
push
sub
adc
add
cmp
jg
and
ss
cli
mov
mul
iret
pop
sahf
sbb
std
xor
addr16
pushaw
cmc
and
add
lock
xchg
xor
mov
fild
adc
and
mov
jl
and
adc
test
cwde
stos
push
jmp
sub
adc
mov
pop
inc
xchg
test
pop
xchg
pop
jno
fild
int3
outs
push
mov
mov
outs
fdivr
lea
and
int3
pop
or
push
int
mov
aad
loop
xor
cmp
push
mov
jmp
mov
movs
push
adc
js
ret
or
or
add
loopne
out
test
(bad)
xor
push
ds
push
outs
int
sub
movs
sbb
pop
add
jb
push
sti
test
test
xor
loop
scas
cmp
je
cmp
inc
xchg
and
jecxz
sub
(bad)
ds
adc
pop
mov
cmp
pop
xchg
fbstp
ss
xor
and
xchg
loope
xlat
pop
pop
(bad)
rcl
icebp
pop
and
dec
jo
cli
popa
mov
inc
mov
test
sbb
add
cmps
xchg
push
jne
retf
cmp
stos
fnstsw
mov
je
shl
xor
ja
daa
xor
or
xor
mov
mov
(bad)
mov
or
pop
inc
fs
sbb
mov
data16
addr16
dec
dec
mov
push
(bad)
aad
fsubrp
bt
sahf
repz
and
and
(bad)
mov
retf
mov
push
fidivr
inc
in
mov
or
add
(bad)
sbb
loop
fbstp
cli
wrmsr
push
mov
pop
js
xchg
cmps
mov
jle
and
push
icebp
cli
mov
dec
es
in
mov
ds
ja
jae
aam
shr
int
or
push
or
mov
xchg
mov
mov
das
lock
or
pop
inc
sbb
pusha
lods
sbb
cdq
es
sbb
push
sti
jae
ins
push
mov
mov
test
mov
hlt
push
cmp
out
dec
mov
gs
gs
(bad)
aam
loop
stc
mov
ins
xor
clc
ins
in
rol
test
outs
les
mov
jb
jne
shr
das
imul
aam
push
inc
xchg
inc
inc
cld
loope
pop
cmp
sbb
stos
inc
fild
mov
jb
icebp
or
pop
sub
shr
imul
xor
icebp
cmps
mov
add
pop
pop
jno
sub
std
dec
mov
and
dec
fist
and
xor
push
push
xchg
sub
imul
ret
(bad)
cmp
push
fisttp
loopne
stos
test
mov
int
outs
sub
lods
pop
fstp
shl
lods
xor
add
dec
xchg
sahf
(bad)
fcom
push
stc
xor
lea
sub
cmc
pop
add
inc
sub
dec
mov
add
jge
(bad)
pop
jecxz
ret
repnz
lods
inc
and
les
jl
out
mov
mov
cmp
dec
push
stos
pop
arpl
and
inc
add
aas
pop
loop
xchg
push
adc
xchg
jmp
jns
lock
mov
nop
xchg
mov
sub
mov
leave
in
inc
push
lods
mul
sahf
pop
cmp
add
in
mov
je
mov
sar
or
pusha
(bad)
imul
xor
sbb
mov
adc
retf
call
inc
es
daa
pop
pop
dec
mov
jmp
adc
add
popa
adc
cmp
icebp
and
imul
cs
jae
test
movs
inc
cmp
mov
shr
pop
jl
xor
in
sub
push
cmps
icebp
call
and
out
xchg
(bad)
add
xchg
or
mov
out
or
xchg
mov
adc
jbe
out
jnp
dec
jecxz
arpl
adc
xor
mov
xchg
or
push
add
leave
adc
sub
mov
xor
stos
xchg
dec
add
aad
clc
call
mov
retf
fistp
retf
jo
test
add
lods
ror
rcr
and
lahf
pop
xchg
cmp
jg
mov
in
(bad)
mov
mov
and
outs
int3
outs
sub
xor
in
or
mov
nop
add
xchg
popf
push
cmp
(bad)
pop
adc
fdiv
mov
(bad)
jo
cli
scas
iret
xchg
inc
mov
lods
stos
mov
arpl
or
call
push
stos
fbld
xor
inc
int
test
stos
ret
add
in
cld
stos
sub
xchg
test
pop
or
mov
mov
push
add
adc
repz
inc
and
and
leave
cmp
xor
mov
lds
or
push
xchg
scas
ret
mov
(bad)
sub
dec
rol
repnz
movs
and
fwait
enter
push
or
pushf
push
push
add
lahf
(bad)
and
push
iret
add
pusha
fild
inc
out
pop
shl
test
jp
push
pop
daa
mov
fdiv
fbld
call
sbb
sub
and
shl
dec
xor
push
mov
sub
sub
fiadd
pop
push
mov
cs
mov
sub
mov
inc
fisttp
cli
lods
cmp
icebp
xor
aam
jne
and
adc
scas
jecxz
enter
outs
mov
scas
lock
jg
in
inc
ret
push
stos
fdiv
xor
mov
ds
test
mov
xchg
mov
cld
lods
fisttp
fiadd
mov
push
adc
shr
enter
inc
daa
jle
hlt
pop
jae
inc
test
lahf
in
mov
dec
in
jle
sbb
push
imul
scas
push
retf
and
mov
into
pop
inc
outs
movs
adc
xchg
popf
lea
sub
pop
sub
xchg
ds
mov
test
scas
cmp
jecxz
mov
xor
inc
sub
(bad)
adc
pop
lea
das
cdq
push
xor
loope
fnstsw
push
out
push
icebp
add
pop
sti
movs
push
das
mov
mov
dec
ret
and
dec
nop
enter
xchg
(bad)
cmp
ins
dec
xor
jo
push
inc
push
inc
fst
adc
pop
cmp
in
mov
cmp
sub
sbb
movs
loop
icebp
mul
bound
mov
add
push
cmps
xchg
dec
test
test
adc
int3
sahf
hlt
enter
adc
xor
xchg
push
or
bound
ja
popa
test
aas
js
arpl
xchg
cdq
inc
xchg
std
es
mov
xor
cmp
data16
fisubr
mov
rcr
or
call
jmp
inc
in
mov
mov
jne
push
ins
pop
iret
push
inc
imul
push
push
adc
pop
cmc
test
xchg
stc
xor
dec
icebp
jbe
adc
jno
lahf
jp
dec
mov
or
xchg
and
jmp
lods
sbb
(bad)
(bad)
neg
pop
js
mov
shr
or
jmp
dec
(bad)
sti
mov
sub
mov
cmp
ins
jmp
inc
imul
and
es
lds
pusha
das
jmp
jno
int3
scas
jno
jo
xchg
mov
push
aam
imul
push
pop
add
mov
cli
out
leave
push
adc
cmp
jb
push
push
inc
movs
mov
inc
dec
test
add
in
adc
aaa
xchg
xor
mov
in
pusha
stos
mov
test
xor
sub
call
arpl
jle
add
pop
push
jmp
dec
mov
cmp
mov
inc
mov
pop
gs
inc
test
fs
(bad)
fucomp
ins
repnz
sbb
pusha
inc
div
lds
cmp
and
jnp
adc
mov
test
push
xlat
add
cmp
mov
mov
cmova
retf
popf
jno
inc
dec
std
lods
push
leave
pop
dec
call
jo
sub
test
call
icebp
bt
addr16
push
jmp
mov
pop
js
push
int
dec
mov
out
jno
pop
pop
cmp
(bad)
and
cld
sub
faddp
mov
popf
xchg
jns
mov
or
ror
mov
adc
mov
pop
retf
out
gs
mov
movs
shl
ss
jl
xchg
(bad)
lock
inc
leave
mov
xlat
cmps
iret
add
mov
outs
(bad)
push
cli
dec
cdq
js
and
jle
xor
sub
(bad)
fisttp
jmp
push
jl
ret
das
daa
mov
rol
dec
add
loop
mov
xchg
retf
psrad
xchg
jno
mov
ins
push
(bad)
out
data16
cmp
popa
add
fst
or
push
pop
fiadd
imul
icebp
pop
pop
xchg
pushf
or
adc
daa
(bad)
dec
mov
mov
xor
aas
mov
cld
cmp
cld
mov
dec
mov
xchg
xor
ret
sub
or
mov
mov
xchg
pop
daa
xlat
sub
jo
pusha
mov
adc
push
aaa
fcom
pop
out
addr16
enter
jg
jecxz
and
outs
movs
jbe
sbb
mov
sbb
xor
lea
push
cmp
imul
mov
fild
fidivr
cmp
cmp
push
jp
add
rcr
jecxz
pop
pop
or
adc
sub
nop
xchg
mov
pop
ins
iret
and
lods
xchg
sbb
push
lock
retf
and
outs
mov
xchg
je
dec
(bad)
inc
in
inc
lds
jg
xor
adc
xchg
mov
inc
gs
xchg
call
mov
jno
cmps
ret
mov
push
push
jno
fsubr
jmp
xchg
fs
lock
cmp
mov
test
jmp
adc
and
and
js
iret
or
hlt
push
ret
xchg
mov
inc
xchg
mov
inc
ds
cmp
test
dec
sub
retf
cmp
or
je
dec
bound
sub
mov
in
retf
jmp
xchg
mov
test
addr16
cmp
retf
in
push
repnz
mov
xor
push
lea
ret
mov
add
xor
mov
loopne
leave
dec
inc
adc
push
jne
sbb
xor
pushf
mov
mov
sbb
inc
ins
mov
pop
in
in
out
sbb
and
dec
push
inc
test
mov
push
(bad)
sbb
jle
test
mov
or
mov
lods
std
inc
lods
xchg
enter
mov
scas
xchg
(bad)
scas
fimul
dec
je
sub
xor
rcr
adc
cld
bnd
add
push
arpl
loop
jl
xchg
jmp
pause
dec
mov
ja
aaa
das
cwde
or
push
mov
jo
or
dec
mov
rol
mov
retf
jl
sub
pop
jnp
idiv
dec
sub
in
shr
loope
shr
sbb
and
sub
fisub
jg
xor
mov
add
cld
fbstp
ja
push
out
jmp
jno
scas
and
es
cdq
sbb
mov
fisubr
sbb
pop
cmp
jp
xlat
pushf
mov
xor
add
into
jns
lock
sbb
adc
add
or
idiv
or
push
retf
jmp
dec
sub
imul
push
retf
lds
out
(bad)
aam
xchg
cmp
dec
cli
or
mov
nop
fwait
jge
mov
pop
pop
shrd
cmp
setns
out
aad
(bad)
fild
add
xor
test
or
and
add
mov
push
mov
cdq
lods
aaa
sahf
inc
pop
xchg
mov
mov
or
(bad)
ret
dec
pop
jecxz
and
xor
sub
xor
cmc
xchg
ret
sar
push
mov
fwait
pop
pop
and
push
xchg
repnz
mov
cs
xchg
sbb
xor
bnd
in
fs
out
out
mov
sub
mov
xor
xchg
ss
mov
popa
sbb
jg
or
scas
lea
(bad)
xchg
jmp
sub
cmp
lea
inc
push
sub
add
push
add
adc
int
pop
inc
jbe
adc
xchg
iret
sub
cmps
and
aad
push
fcomp
pop
inc
push
loopne
mov
jnp
add
dec
aad
mov
or
pop
jle
pop
test
int
clc
pop
mov
push
shr
and
lods
fistp
dec
ret
in
jp
lods
push
loope
fadd
sbb
int3
aaa
dec
sub
sub
jne
sub
retf
jns
sub
jbe
aas
call
cwde
mov
cmps
cmp
outs
test
outs
(bad)
mov
int
cmp
sbb
jl
push
xchg
mov
add
or
push
xlat
mov
out
inc
pop
std
pop
(bad)
out
bound
pop
cmc
bound
jb
add
inc
pop
jo
fmul
leave
push
push
xor
leave
out
add
push
mov
mov
adc
jno
xor
mov
es
inc
(bad)
pushf
(bad)
das
(bad)
jo
or
cmc
iret
jmp
mov
push
adc
leave
sbb
ror
jg
movs
pop
das
das
adc
enter
popa
cmps
std
and
or
mov
mov
iret
mov
clc
repz
ins
sbb
sbb
sub
neg
mov
popf
add
inc
jbe
shl
popa
popa
test
ret
in
cmp
mov
jbe
adc
cmp
ja
or
aam
iret
or
pusha
fwait
test
sahf
jge
mov
outs
xor
mov
stos
dec
movs
xchg
shr
jnp
(bad)
in
inc
xor
or
sar
mov
add
xchg
jge
test
test
ret
ins
xlat
cmp
xor
rcl
(bad)
jmp
push
mov
(bad)
jnp
adc
in
jno
pop
iret
inc
outs
xchg
sbb
aaa
pop
fiadd
push
in
xlat
jl
outs
adc
sub
mov
outs
movs
xor
pop
sbb
sub
cmp
pop
mov
(bad)
loope
mov
cmp
imul
outs
out
fisub
shr
out
stos
out
or
mov
iret
push
or
jl
push
adc
xlat
(bad)
outs
sbb
inc
mov
pop
xchg
lods
mov
into
xor
loope
sub
fsubr
shr
adc
fiadd
xlat
daa
out
push
jmp
cwde
fldenv
sti
stos
retf
repz
xor
pushf
outs
test
mov
std
push
xor
(bad)
xor
lock
nop
or
outs
mov
nop
or
inc
jae
cmp
dec
sub
stos
or
dec
in
jnp
push
adc
mov
sahf
jg
gs
ins
push
(bad)
and
xchg
add
and
neg
neg
out
sti
shr
dec
std
lea
je
mov
in
arpl
into
test
psrad
mov
faddp
cmp
inc
add
std
mov
pusha
lods
lock
call
test
in
ins
ins
cld
inc
fld
sahf
xor
(bad)
sub
out
cmps
xchg
mov
sbb
dec
pop
pusha
inc
and
jns
add
sar
inc
mov
int3
cmp
clc
mov
xchg
jl
ret
add
push
mov
and
dec
push
xchg
or
cmp
jmp
add
xchg
lahf
imul
cmp
inc
(bad)
aad
sbb
clc
mov
pop
jne
xor
rcr
xchg
iret
lahf
pusha
call
push
add
call
retf
out
push
adc
fidivr
gs
sahf
(bad)
nop
fmul
mov
xor
sub
fmulp
rcr
aam
cmps
mov
lea
out
or
or
mov
stos
movs
mov
cmps
mov
add
sub
xchg
and
pop
adc
xchg
adc
aaa
mov
cld
push
pop
div
out
push
movs
je
jae
jmp
dec
vunpcklpd
in
jno
or
sbb
loop
push
cmps
(bad)
or
mov
test
adc
xchg
cli
mov
imul
pop
clc
addr16
pop
xchg
xor
xchg
mov
adc
mov
adc
adc
push
push
inc
xor
jae
pop
int3
lea
imul
out
pop
int3
(bad)
(bad)
(bad)
test
sbb
mov
idiv
scas
mov
ret
daa
dec
stc
push
outs
mov
sbb
les
in
int3
fs
push
(bad)
push
add
movs
sar
cs
cmp
mov
fmul
jg
push
je
jmp
xchg
mov
jne
or
lock
fisttp
sar
call
xchg
mov
pop
add
mov
adc
scas
inc
adc
mov
cmp
push
and
rcr
int3
iret
push
jl
adc
mov
push
ret
int
icebp
xor
push
push
push
mov
adc
aad
test
in
dec
lea
fcmovnb
dec
mov
cld
stos
mov
sti
outs
inc
in
mov
cmp
or
pop
sbb
xchg
hlt
sbb
jecxz
rol
cmp
adc
enter
aam
sbb
mov
(bad)
sub
inc
inc
and
or
dec
push
hlt
add
cdq
aam
stc
daa
jb
stos
mov
push
ds
adc
inc
mov
pusha
xchg
pop
sub
inc
pop
cli
popf
sub
lods
mov
out
push
bound
inc
retf
ret
adc
inc
lods
idiv
mov
mov
and
push
and
pop
add
mov
jno
repnz
les
sti
mov
iret
dec
mov
les
dec
ret
and
pop
(bad)
sbb
lea
dec
or
mov
inc
xor
mov
(bad)
dec
sub
pop
jl
test
or
xchg
and
sbb
(bad)
ror
mul
or
sub
or
xchg
sahf
mov
ins
cmp
xor
ins
push
fsub
fsubr
dec
inc
mov
fwait
cld
push
aad
lods
push
mov
cli
pusha
jg
push
or
rol
xchg
pop
and
xchg
loop
outs
adc
lahf
sbb
lods
ret
jae
sub
inc
sbb
ror
inc
leave
pop
sti
arpl
lods
inc
push
int3
in
fmul
jle
je
jecxz
cmp
sub
retf
sub
jno
cmp
dec
gs
test
gs
xchg
pop
popf
jmp
and
(bad)
and
(bad)
pop
stc
and
sub
lods
or
pop
xor
pop
outs
ds
add
mov
icebp
cwde
sbb
into
jne
add
adc
mov
test
cmp
leave
call
stos
xchg
ror
movs
xchg
test
jmp
test
rol
add
fwait
push
jbe
push
or
adc
mov
push
mov
jmp
adc
inc
cmp
pop
mov
nop
xor
jge
add
shl
js
and
fld
popa
xor
mov
pusha
in
sub
jg
pop
add
cmc
aas
fdivr
in
mov
adc
imul
mov
jmp
stos
in
jg
adc
fcmovb
stos
xor
(bad)
ret
outs
add
ret
retf
aas
jge
clc
(bad)
cwde
call
call
lahf
xor
sub
pop
outs
sbb
inc
(bad)
or
adc
and
pushf
push
add
fwait
lea
cmp
mov
xchg
push
(bad)
aad
sti
add
or
dec
outs
mov
scas
dec
xchg
pop
sub
adc
mov
sbb
push
xor
enter
push
fnstsw
mov
les
push
or
jle
icebp
retf
cmp
cmp
jmp
or
xor
pop
sbb
mov
push
push
push
jmp
dec
retf
fs
stos
and
call
test
lock
mov
inc
(bad)
mov
call
adc
lods
push
out
in
out
pop
daa
(bad)
fistp
je
pop
cli
aad
jl
mov
cmp
push
xchg
pop
sbb
inc
sbb
pop
mov
add
call
mov
int3
jno
dec
xor
scas
ja
xchg
loope
mov
pusha
mov
push
mov
pushf
dec
retf
sub
lea
mov
cmps
sub
sbb
inc
imul
adc
pop
adc
in
dec
cmps
jmp
xor
cs
xchg
in
ins
cmp
mov
ror
out
jns
hlt
sti
xchg
add
add
and
fs
sub
adc
jmp
mov
xor
out
pushf
and
ret
sar
add
mov
and
test
pop
mov
cwde
cli
jmp
stc
outs
cmps
mov
push
mov
lods
outs
std
adc
test
(bad)
in
lahf
imul
cmp
bound
lods
mov
push
xor
jne
(bad)
fmul
pop
add
push
lock
xchg
mov
ror
js
in
or
jge
mov
adc
shl
(bad)
shl
sahf
outs
mov
(bad)
stc
mov
or
inc
nop
and
mov
in
xor
push
adc
xor
xchg
std
dec
mov
mov
adc
popf
iret
sub
pop
push
sbb
push
cmp
movs
jg
and
jg
push
mov
repz
movs
jmp
inc
mov
not
mov
add
pop
int3
adc
and
xchg
add
fwait
ins
pop
test
(bad)
inc
shr
inc
adc
add
scas
stc
push
(bad)
fsub
adc
int3
aas
cmc
das
mov
and
xchg
sti
jmp
in
aaa
mov
xchg
jae
inc
ss
rol
js
mov
xor
pop
mov
xor
gs
stos
add
aam
or
mov
(bad)
in
dec
mov
cli
(bad)
scas
(bad)
js
sbb
arpl
pop
xchg
mov
pop
int3
jbe
test
sub
scas
arpl
mov
sar
mul
jnp
inc
fnstsw
daa
cs
add
xor
jmp
imul
adc
ins
arpl
icebp
xor
jbe
ja
cdq
aas
outs
or
xchg
iret
data16
pop
(bad)
cli
in
dec
rcr
sub
ds
dec
inc
std
mov
mov
cmp
dec
ja
cmp
mov
sti
ins
out
adc
int3
sub
dec
sbb
cdq
sub
sub
add
push
scas
imul
sbb
cmps
pop
xchg
pop
scas
cmp
xlat
xor
mov
cli
sahf
ret
pop
pop
lds
adc
mov
mov
mov
sti
xchg
cmc
and
and
pop
scas
mov
fdiv
push
and
stc
ret
or
or
out
add
adc
iret
sbb
mov
xchg
mov
js
or
or
les
cmp
push
loope
mov
rcl
pop
movs
setge
sbb
jo
jl
sbb
mov
adc
jecxz
sbb
jecxz
bound
js
dec
shl
les
ror
cwde
es
lods
jno
mov
and
out
mov
inc
imul
mov
jg
aaa
push
xor
push
mov
icebp
in
or
mov
movs
mov
dec
scas
adc
adc
pop
adc
test
and
ja
or
shl
outs
pop
test
xchg
xlat
pop
js
inc
ret
loop
mov
into
lds
(bad)
pop
cmps
popf
push
shl
inc
mov
add
cmps
fstp
shr
imul
mov
push
sub
cmp
push
lahf
add
pop
arpl
and
cmp
and
stos
(bad)
imul
cmc
nop
xchg
jno
fmul
or
loope
jg
repnz
fdivrp
out
mov
(bad)
lods
cvtps2pd
dec
(bad)
mov
xchg
jbe
mov
or
push
xlat
dec
adc
stos
wbinvd
loopne
int3
shl
mov
xor
aam
inc
mov
ds
cmp
inc
out
push
outs
call
stos
and
push
and
sub
mov
fnsave
adc
nop
xor
cli
call
mov
jnp
push
stc
(bad)
sbb
fcomp
pop
dec
loope
sbb
push
jns
cwde
mov
mov
adc
aaa
leave
or
stos
dec
lods
dec
jne
jge
push
or
(bad)
out
add
mov
jmp
out
or
out
int3
push
push
add
cmp
jmp
es
loope
push
cmp
repnz
sbb
push
(bad)
nop
test
sbb
push
mov
fisub
arpl
ror
xchg
fwait
shl
popf
(bad)
stos
imul
mov
fimul
fs
repz
adc
icebp
clc
xchg
pop
fst
stos
(bad)
rcl
call
sbb
popf
fiadd
xor
adc
repnz
jmp
jae
mov
scas
mov
popf
push
cmp
aam
sti
dec
pop
or
inc
inc
popf
jnp
fs
pusha
sub
sbb
mov
retf
gs
dec
push
dec
sbb
ds
add
pop
mov
jge
jbe
stos
stc
xor
cs
leave
mul
movs
jb
jge
xor
lods
dec
cmps
xor
mul
movs
push
mov
push
fsubr
pop
dec
xchg
out
dec
jmp
and
repnz
mov
ds
ja
fcomp
or
and
jae
adc
stos
ret
dec
pop
dec
mov
fidivr
in
mov
rcr
lahf
scas
ja
rcl
mov
mov
shl
mov
ins
arpl
movs
shr
test
cdq
ss
dec
sub
inc
push
mov
xor
cmp
mov
push
cmp
and
sbb
out
add
jg
test
mov
hlt
out
xor
(bad)
das
sub
fdivr
ret
ffree
out
jmp
daa
and
or
popf
repnz
dec
pop
int3
lahf
push
pop
push
repz
pop
fcmovnbe
mov
push
mov
ins
push
out
push
aam
cs
or
movs
movs
out
cld
adc
dec
and
scas
(bad)
cs
push
cmps
loopne
or
jmp
mov
cmps
mov
shr
xor
fcmove
sar
or
adc
cli
pop
data16
jns
je
xlat
fisttp
imul
push
sub
(bad)
xchg
out
imul
xchg
int3
test
mov
pop
(bad)
or
adc
clc
sub
(bad)
and
lods
loopne
loope
dec
xchg
dec
loopne
push
ins
lods
lds
fwait
mov
mov
fs
or
add
nop
rcl
push
xchg
in
mov
aam
pop
loope
mov
(bad)
clc
scas
sbb
iret
call
mov
mov
sub
fiadd
mov
xor
icebp
icebp
mov
addr16
enter
xchg
push
neg
test
(bad)
xchg
inc
rcr
mov
bound
movs
cli
(bad)
repnz
imul
scas
xchg
sahf
in
pop
cs
cld
mov
and
sub
fs
or
unpcklps
dec
cmp
dec
loopne
mov
cwde
into
fistp
inc
xor
xchg
outs
bound
jae
cwde
xor
ret
es
or
(bad)
xchg
ins
cwde
or
xor
xchg
mov
pop
shl
jbe
jmp
scas
push
push
fsub
dec
test
ret
popa
inc
dec
gs
pop
fs
mov
lods
jge
jle
jo
inc
or
sbb
xchg
jp
ins
retf
jl
pop
mov
ror
ret
test
repz
iret
jge
xor
nop
cmp
loope
stos
cmp
clc
sbb
movs
call
inc
cmps
ins
mov
ins
(bad)
imul
xchg
mov
mul
xbegin
cdq
(bad)
retf
shl
jo
xchg
(bad)
(bad)
int
adc
and
mov
sub
(bad)
ds
in
stos
pop
jg
mov
xchg
sub
out
popf
in
imul
xchg
loope
pop
push
cmp
in
pushf
cdq
cld
iret
sub
fistp
mov
inc
pop
in
neg
add
cmps
mov
stos
idiv
movs
jecxz
loopne
and
jno
das
cmp
mov
push
dec
push
adc
test
loop
scas
(bad)
ror
adc
(bad)
dec
in
mov
dec
(bad)
mov
push
iret
mov
push
mov
mov
ins
jns
int
aam
cmp
out
lss
cdq
ficomp
mov
out
push
aas
xchg
sbb
aas
loopne
lds
call
inc
lahf
addr16
mov
and
repnz
sbb
push
cdq
cbw
jbe
imul
push
add
cmp
out
adc
shl
fist
(bad)
lods
ins
mov
adc
dec
rcl
repnz
clc
pop
sti
adc
imul
pop
add
or
jge
mov
adc
arpl
and
push
scas
stos
imul
mov
mov
add
fmul
aaa
or
xchg
cwde
add
cmp
adc
jg
mov
cld
(bad)
or
xchg
retf
push
xchg
sahf
lods
xor
cmp
jmp
mov
aaa
mov
stos
cs
jb
sbb
sti
push
popf
or
inc
xchg
sti
std
xchg
jge
mov
ret
sub
jmp
scas
les
fst
rol
sbb
pop
lods
mov
sahf
xchg
xor
xchg
enter
mov
fnstcw
ds
mov
jle
loop
xchg
jmp
int3
or
cmp
pop
iret
cmp
cld
ret
dec
stc
mov
mov
push
sbb
loop
aaa
cmp
and
cmp
(bad)
mov
bnd
test
xor
outs
cwde
lea
push
mov
sub
mov
outs
push
xor
xor
jle
rcr
mov
mov
and
lds
fnstsw
cld
mov
pop
inc
pusha
icebp
inc
xchg
dec
cld
cmp
sub
mov
add
lea
add
cmp
mov
dec
mov
push
add
xor
jbe
mov
fdiv
lods
dec
xchg
pop
dec
cmc
pushf
mov
mov
sub
sti
mul
xor
cmc
iret
pop
popaw
(bad)
cli
daa
add
das
jne
jns
and
adc
shr
sub
test
or
int
sti
or
xor
les
scas
add
test
jp
es
call
push
scas
icebp
jno
and
stos
jne
add
or
inc
jae
inc
retf
jns
pop
loop
mov
xchg
loop
aam
cmp
loopne
push
dec
or
retf
xchg
add
popf
movs
dec
hlt
or
jg
fstp
fwait
mov
ret
inc
loope
xor
fadd
das
inc
or
repnz
sub
pop
inc
loopne
daa
cmp
and
loopne
mov
pop
cmp
jle
lods
inc
xor
inc
(bad)
xchg
retf
inc
mov
cwde
stos
ficomp
or
call
add
cmp
adc
sti
test
or
lods
sbb
pop
pop
rcr
(bad)
loope
push
sbb
sub
in
fs
sbb
inc
mov
neg
not
ja
lock
int
ficom
loopne
push
mov
push
dec
jge
add
pop
aaa
adc
xchg
out
dec
loop
in
fwait
mov
and
xor
xchg
mov
sub
mov
lds
pop
dec
and
adc
in
inc
cdq
sbb
bound
test
push
ret
mov
and
outs
arpl
sub
dec
pop
dec
test
push
sahf
lods
lea
nop
fist
gs
push
cmp
fs
inc
fdiv
nop
je
test
div
and
loop
call
dec
jmp
test
aas
or
mov
fucomp
aaa
bound
sahf
xor
push
sub
out
adc
lahf
call
pop
sar
and
leave
or
fidivr
mov
pop
cmp
gs
pop
imul
inc
mov
mov
jle
pop
fmul
push
inc
dec
movs
jecxz
jl
pusha
pop
movs
sbb
fs
lahf
sbb
test
ret
loop
and
sti
int3
push
sub
cdq
loop
push
mov
ds
pop
dec
data16
lahf
mov
stos
scas
cmp
stos
nop
div
ins
jno
pop
jmp
movs
and
fst
lock
out
add
pop
into
hlt
pop
int
cmp
call
mov
or
add
xlat
sub
jmp
pop
ret
out
daa
stc
mov
sub
and
push
push
adc
adc
loope
and
and
add
inc
inc
arpl
ret
repz
outs
mov
or
cs
push
mov
pop
dec
jb
int3
retf
jl
and
adc
dec
cmp
pop
sahf
cli
and
mov
mov
mov
shl
add
call
nop
loop
inc
lock
clc
pop
sbb
lods
adc
cmps
or
adc
imul
mov
inc
dec
jne
maxps
push
xchg
cld
jle
arpl
test
gs
pcmpeqd
mov
mov
cmp
mov
dec
or
mov
add
sbb
mov
pop
int3
sub
or
fld
(bad)
cmps
clc
mov
pop
xor
into
push
out
push
in
mov
fld
(bad)
jge
mov
cmp
jne
test
pop
div
or
dec
inc
pop
inc
adc
or
or
pop
xchg
shl
adc
repnz
push
sar
call
mov
jmp
xchg
(bad)
mov
mov
sbb
push
hlt
xor
xor
stc
int3
push
and
clc
jnp
xchg
dec
outs
mov
ja
cmps
push
sub
ficomp
call
mov
push
cmps
push
sub
mov
in
jnp
mov
sub
mov
xchg
fstp
rcl
ret
or
and
xor
push
sbb
dec
push
jg
ficom
outs
jl
inc
jge
call
pushf
mov
stc
mov
adc
cmp
imul
ins
cmps
int3
fwait
retf
and
mov
ins
sbb
js
loop
in
fucom
push
sub
jge
lods
leave
add
(bad)
imul
loopne
cmp
adc
aas
sub
xchg
fmul
movs
out
stc
ret
add
mov
fldenv
add
push
adc
xor
inc
jg
rcr
pop
in
and
jmp
sbb
pop
xor
rdmsr
test
xchg
lods
push
call
jb
mov
add
push
lock
stos
jo
pushf
add
sar
pushf
dec
sub
sbb
mov
in
bound
hlt
das
jge
jo
icebp
sub
push
inc
imul
test
mov
push
mov
mov
mov
xchg
aaa
sub
es
or
call
jmp
xchg
cmps
inc
mov
sub
add
sbb
push
fcmovb
sub
retf
shl
push
or
cmps
call
cs
and
xchg
loopne
or
dec
into
movs
data16
lods
scas
jle
adc
out
(bad)
(bad)
mov
xor
je
icebp
fild
mov
in
ss
adc
add
push
dec
movups
movaps
push
xlat
sahf
mov
fs
push
dec
ret
bound
cld
fidivr
aam
jle
hlt
int
mov
xor
sbb
xchg
mov
pop
jo
popf
cmp
les
aas
push
pop
fadd
sub
adc
fcom
jns
bsr
and
cli
loop
add
cmp
shr
cmps
jmp
add
lods
test
data16
xchg
adc
sub
(bad)
cmp
jp
fist
cmp
idiv
pop
ds
xchg
inc
mov
gs
adc
or
sub
push
out
loop
les
test
mov
inc
aaa
sub
sbb
mov
test
sub
ret
std
xor
in
popa
retf
shl
into
mov
sub
fcomp
aas
jge
mov
clc
pop
xchg
mov
cmp
cmc
test
add
enter
xor
and
sbb
nop
cmp
mov
xchg
cmp
xchg
jbe
mov
sbb
mov
aad
inc
icebp
pop
mov
popf
aaa
mov
add
and
xchg
fmul
shl
dec
mov
inc
inc
mov
dec
imul
aad
dec
and
push
xchg
sbb
or
mov
xchg
cdq
and
test
pop
(bad)
push
int3
pop
aaa
sub
repnz
dec
xchg
cmp
das
cmps
dec
jnp
aad
sub
sahf
sub
jecxz
xor
in
in
xchg
or
bswap
loop
sub
popa
dec
retf
icebp
mov
int
shl
mov
sub
dec
push
daa
cmp
mov
xchg
push
in
test
or
mov
xor
push
ja
les
lods
ss
adc
pop
or
push
stc
mov
iret
push
ss
popf
fild
in
das
inc
xchg
and
das
enter
rcr
jns
hlt
fsub
pop
imul
lock
mov
add
push
loop
daa
ja
add
jle
retf
test
cdq
mov
mov
in
xchg
inc
mov
js
arpl
adc
(bad)
xor
add
or
ret
popa
movs
mov
jecxz
scas
shl
ss
mov
shl
or
mov
and
jp
cmp
mov
and
jmp
add
cdq
push
pop
(bad)
or
in
ins
cmp
add
jbe
rcr
xchg
or
cmps
aad
bound
inc
lods
mov
sahf
out
sub
push
mov
mov
jae
mov
jg
push
pop
add
ss
aam
aas
dec
xchg
dec
mov
mov
dec
xchg
jns
(bad)
fsub
and
stos
in
in
hlt
inc
inc
push
jbe
push
pop
call
ret
outs
loope
mov
mov
cmp
xchg
jne
out
cmp
and
lea
scas
and
inc
mov
inc
xor
das
(bad)
xchg
je
daa
imul
js
fist
hlt
loope
aaa
(bad)
mov
test
mov
out
cmc
clc
mov
ret
or
mov
or
push
das
and
pusha
adc
inc
mov
push
pop
test
xor
icebp
mov
and
ror
test
sub
loope
mov
push
push
add
adc
cwde
ins
push
jp
inc
xor
jb
adc
nop
sbb
or
les
sbb
call
fistp
xchg
pop
push
mov
loope
cdq
xchg
loope
jp
fldenv
adc
jmp
jp
inc
(bad)
xor
(bad)
sbb
sbb
pop
sbb
(bad)
sbb
in
lods
and
pusha
cmps
jmp
(bad)
pop
mov
adc
or
mov
jnp
dec
pop
dec
mov
call
push
lock
test
or
std
xchg
mov
mov
rol
dec
push
or
adc
dec
fist
pop
loop
imul
cli
fs
stos
inc
jle
push
arpl
imul
xor
dec
cdq
pop
es
ss
mov
cmp
mov
jns
mov
je
fcomp
xchg
inc
lods
cmp
mov
jg
push
ficom
scas
idiv
mov
les
das
inc
lock
mov
loop
push
mov
pop
fld
mov
mov
jne
lds
adc
adc
sub
jge
xchg
cpuid
es
xchg
or
xor
jl
lods
push
or
cwde
pop
mov
das
jmp
inc
mov
inc
mov
mov
dec
int3
fldcw
fild
ins
mov
out
in
aas
call
ret
or
dec
xor
add
int3
out
call
pop
sbb
test
adc
mov
xchg
ficom
cmp
xchg
inc
cs
pop
mov
sbb
pushf
mov
mov
cmp
ins
test
and
push
push
xor
pushf
inc
sub
cmps
je
sbb
push
iret
icebp
inc
add
push
addr16
sbb
adc
ins
inc
or
mov
in
jmp
mov
inc
sbb
test
mov
jno
pop
lods
popf
push
push
or
das
dec
hlt
(bad)
ds
daa
inc
and
ss
movs
outs
ins
lea
xchg
in
mov
pushf
lods
clc
aaa
xchg
(bad)
xchg
xchg
add
stos
adc
outs
add
xor
xchg
sub
inc
adc
jnp
shr
outs
fisubr
jbe
pop
data16
test
xchg
out
pop
in
aam
(bad)
test
sbb
sub
(bad)
xor
retf
icebp
inc
and
(bad)
sub
push
mov
inc
dec
push
xchg
mov
ret
in
repz
mov
xlat
out
jg
neg
sub
jg
and
bound
std
(bad)
and
loope
cdq
addr16
inc
and
std
adc
iret
(bad)
dec
popa
and
mov
imul
mov
cmps
and
adc
das
jg
retf
cmps
aaa
xchg
and
nop
out
xchg
adc
test
push
jae
int
js
inc
arpl
mov
cld
jne
jbe
arpl
jmp
sub
stc
push
sbb
cmps
ins
sbb
aaa
mov
ins
mov
mov
push
adc
cli
pop
pop
pop
adc
adc
aas
jle
push
arpl
call
push
cmps
dec
hlt
push
fs
clc
jbe
test
test
sbb
pop
call
and
popa
movs
hlt
add
pop
inc
sub
push
shl
mov
outs
fild
loopne
ins
leave
fcom
enter
cld
rcl
mov
dec
int
xchg
ins
in
ret
xchg
sbb
aad
jg
mov
in
stos
out
fild
inc
sbb
pop
in
pop
icebp
sub
ins
sub
push
out
sbb
fisttp
mov
movs
jmp
ds
jl
ror
std
pop
pop
mov
dec
mov
fs
adc
lods
or
ds
js
cmps
adc
fisttp
iret
loope
pop
pop
repz
mov
fwait
std
cmps
jp
xchg
push
or
jle
inc
inc
xchg
ss
jnp
ret
icebp
sub
aam
or
inc
jl
and
idiv
xor
das
and
pop
xor
mov
dec
jmp
xchg
mov
aad
sub
sahf
fisubr
pusha
add
lock
into
inc
ret
bound
and
mov
sbb
stc
bound
and
xor
scas
inc
outs
mov
jne
and
mov
pop
dec
cmps
push
pop
pop
out
dec
dec
repz
and
cmp
enter
dec
das
cwde
inc
mov
(bad)
fstp
sub
sysret
mov
inc
sar
stos
push
cmc
cld
and
mov
jecxz
pop
cli
and
cmc
mov
push
sub
jmp
sbb
cmps
add
mov
pushf
dec
fstp
pop
add
outs
shl
sub
das
or
fld
scas
inc
lods
sbb
scas
movs
sub
in
add
shl
mov
cdq
and
adc
retf
es
mov
lea
cdq
xor
sbb
adc
in
(bad)
nop
mov
inc
or
es
mov
cdq
cmp
cmp
sub
das
xchg
jmp
pop
mov
xchg
pop
(bad)
mov
adc
das
(bad)
ror
jge
gs
dec
xchg
sbb
arpl
dec
sbb
adc
sub
sar
inc
loope
and
lea
out
shr
iret
push
cmps
(bad)
clc
js
push
(bad)
inc
add
xchg
(bad)
dec
test
sar
xor
mov
add
xor
mov
jl
push
or
hlt
sub
xchg
jo
xchg
lods
and
dec
mov
or
mov
and
out
cli
and
push
iret
test
cmp
sub
dec
ins
fsub
adc
retf
and
push
push
leave
or
(bad)
xchg
pop
(bad)
fidivr
inc
fcom
lds
or
ins
add
jl
lds
mov
pop
xchg
loopne
cmc
in
call
mov
cwde
ficomp
lock
js
hlt
cwd
je
jo
and
ja
fdiv
psubusw
mov
xor
add
outs
aad
lds
cmp
mov
jl
lock
dec
movs
mov
mov
sbb
push
aaa
jecxz
and
add
leave
in
jne
pop
mov
adc
mov
or
retf
cmp
sbb
dec
es
sub
add
jge
jg
xor
cwde
lods
sbb
mov
fiadd
or
jb
cmp
and
fwait
mov
or
mov
fdivr
mov
adc
sbb
xchg
(bad)
mov
lods
(bad)
jae
nop
sbb
mov
sbb
enter
and
mov
xchg
les
xor
add
sahf
sub
sub
int3
pop
es
and
pop
xor
movs
mov
call
and
rcl
jmp
mov
lea
mov
add
shl
mov
movs
mov
sbb
fidivr
jle
dec
sub
test
or
ror
or
jb
mov
dec
mov
and
daa
pop
pop
mov
push
dec
add
cmp
xchg
adc
stc
jo
or
inc
test
and
in
das
add
psrld
push
pop
adc
xchg
inc
xchg
int
jo
cmps
push
dec
(bad)
aad
dec
inc
cwde
mov
das
xor
(bad)
in
mov
add
and
jl
adc
call
or
cmp
push
pusha
ins
sub
mov
or
hlt
jns
ins
jg
cwde
xlat
push
and
lods
or
adc
add
lahf
leave
xchg
pop
enter
repnz
push
sahf
int3
dec
and
retf
pushf
loope
push
dec
scas
rcl
int3
add
inc
xchg
mov
bound
xor
add
(bad)
jae
test
retf
adc
cmp
int3
ret
mov
test
pop
jp
mov
push
int
lods
push
ds
mov
ins
test
or
jge
scas
cmp
xchg
scas
xlat
ins
ret
sub
test
mov
retf
sub
sub
inc
ss
push
cmp
icebp
inc
nop
sbb
mov
(bad)
repnz
jle
lods
out
inc
ret
in
cli
test
jns
neg
pop
int3
dec
sar
sub
xor
add
lahf
and
push
(bad)
cmp
lods
jo
cli
push
push
push
jb
jmp
xor
sbb
inc
adc
test
xor
mov
cmp
jmp
inc
adc
push
sbb
sub
mov
xcrypt-cbc
cmps
xchg
fcomp
dec
cmc
pop
fcomp
and
not
pop
lods
cmp
cmp
mov
ret
ret
ror
adc
jl
in
mov
fisub
jmp
inc
ret
xlat
jne
jl
or
popa
dec
xor
push
push
cmp
in
aad
mov
push
and
mov
cld
inc
sub
mov
jecxz
xchg
inc
rcl
dec
cdq
outs
sub
and
fild
js
repz
dec
jo
test
(bad)
mov
or
sub
mov
jmp
dec
(bad)
fcmovbe
ss
or
popf
xor
(bad)
jmp
loop
cmps
in
mov
dec
push
jne
icebp
(bad)
arpl
(bad)
dec
leave
(bad)
inc
in
fsub
leave
mov
fsub
cld
icebp
aas
mov
jmp
retf
push
sub
cli
loopne
or
stc
or
gs
jne
aaa
xchg
(bad)
jg
adc
scas
mov
mov
sar
and
mov
or
lock
cwde
test
mov
xchg
ss
ror
lods
pop
sbb
jl
outs
add
adc
pop
bt
xor
pop
cwde
adc
and
test
jp
(bad)
jmp
jnp
mov
mov
rcl
mov
cdq
cmp
sbb
add
cli
jnp
jmp
ret
pop
into
dec
je
pop
sub
push
lods
test
mov
movs
iret
xchg
jg
add
fstp
mov
arpl
pusha
push
popa
sar
mov
xchg
inc
pop
mov
sub
jmp
movs
inc
and
mov
add
stos
or
xlat
sbb
ins
sbb
or
ja
retf
popa
mov
xor
cmps
adc
(bad)
aam
add
jecxz
jno
sbb
push
mov
sub
inc
sub
ret
mov
movs
pop
mov
(bad)
popa
jae
push
inc
les
movs
test
lods
cld
ins
les
retf
jmp
popa
dec
jb
mov
stos
jecxz
mov
lods
xor
cli
dec
jmp
and
xchg
(bad)
fist
(bad)
call
jns
out
mov
out
clc
xor
lock
aas
xor
xor
add
lahf
fcmovb
fs
mov
push
dec
mov
and
aad
sti
pusha
sbb
test
ret
rol
dec
std
sti
mov
mov
pushf
push
push
dec
xor
add
sti
mov
loopne
repz
stos
adc
arpl
and
cs
sub
push
cmc
(bad)
mov
je
scas
dec
ja
fld
sub
(bad)
jo
mov
dec
ficom
aaa
and
adc
mov
imul
mov
out
test
test
mov
pop
push
test
sti
(bad)
inc
mov
test
xor
das
xchg
mov
js
outs
or
sbb
neg
fs
cmp
sub
sub
push
sbb
or
sub
into
nop
pop
xor
mov
xchg
test
jo
aaa
movs
mov
mov
ds
popa
ins
shl
mov
jg
jno
xchg
js
mov
cli
push
mov
inc
cdq
fs
push
sub
xchg
mov
xor
fcmovb
ja
repnz
jmp
ins
push
mov
std
scas
xchg
pop
inc
sbb
and
mov
test
xchg
push
jge
mov
les
mov
pop
dec
mov
and
cmp
adc
in
mov
ret
inc
cmp
call
sti
sbb
pop
or
mov
in
or
dec
mov
jecxz
cli
mov
push
jae
add
scas
xchg
sub
pop
xchg
pop
je
gs
cmp
mov
push
xchg
out
mov
int
lock
adc
pshufw
in
xlat
mov
mov
and
imul
add
lods
arpl
cmp
xor
mov
cli
or
out
sub
xlat
or
sub
inc
xor
mov
mov
call
cmps
xchg
(bad)
mov
adc
daa
adc
sbb
adc
ds
cmp
cmp
cwde
(bad)
jp
out
(bad)
sub
jae
loopne
popa
mov
pop
push
lds
push
and
adc
ins
xchg
xor
hlt
stos
sub
cmps
loopne
lock
and
cmp
dec
movs
lds
xchg
retf
dec
aam
xchg
mov
ror
icebp
shl
scas
or
movs
fwait
mov
lds
jbe
rol
test
sub
test
fs
pop
push
(bad)
pop
mov
push
out
cmp
loope
sar
sahf
imul
sbb
lds
mov
pop
dec
fcomp
dec
xchg
mov
or
xor
cmc
pushf
outs
xchg
and
vmovss
pop
fcomp
sar
popa
enter
fwait
cmps
inc
mov
sub
push
fild
xor
repz
mov
mov
scas
sub
inc
xchg
cli
inc
or
out
call
mov
loopne
dec
popa
and
mov
je
aam
addr16
cli
or
in
jge
mov
pop
inc
and
sub
fistp
cmp
dec
push
add
rdpmc
push
js
add
push
sub
jo
ins
ror
or
movs
(bad)
mov
or
jge
xor
fild
fucomp
and
mov
pop
adc
ror
mov
mov
ror
ds
cmp
std
xchg
icebp
xchg
shr
scas
in
xchg
xor
mov
push
adc
and
rcr
xor
and
vpshufd
fist
jecxz
pop
adc
and
mov
add
sub
inc
mov
push
xchg
jne
cli
(bad)
out
add
lods
(bad)
cmp
repz
out
add
mov
jecxz
jb
mov
nop
inc
test
ins
jmp
cmps
jne
xchg
and
mov
dec
add
pop
cmp
loope
ror
lahf
jnp
hlt
fisubr
jmp
imul
lea
out
sbb
repnz
cmps
add
in
mov
push
and
inc
das
iret
in
jge
add
add
scas
mov
or
aas
ins
mov
scas
and
fsubr
inc
jl
enter
pop
or
dec
dec
xor
outs
push
and
cmp
pop
jae
rcl
ds
push
adc
mov
push
mov
(bad)
push
stos
or
pop
hlt
fwait
or
and
call
test
int3
sti
or
ret
sub
adc
sub
pop
add
and
in
(bad)
xchg
adc
push
cmp
inc
in
lods
fisubr
sub
mov
push
push
vorpd
inc
retf
(bad)
iret
cmc
enter
mov
xchg
fdivr
cmc
adc
push
stos
lods
fsubr
pop
adc
inc
in
clc
call
scas
aaa
add
mov
hlt
aam
dec
test
and
ret
rcl
push
sar
sub
and
pop
push
mov
fldcw
aaa
sbb
pop
cmp
repz
cdq
scas
ss
cs
or
push
xor
mov
scas
ret
cmp
pop
xchg
sub
inc
or
out
dec
test
mov
dec
cli
mov
in
adc
mov
sub
(bad)
dec
daa
jmp
mov
movs
and
pop
xlat
sub
(bad)
sar
lods
inc
lods
dec
mov
imul
test
(bad)
fwait
pop
call
pop
dec
xor
nop
lock
call
xchg
scas
lds
or
xchg
dec
jp
sbb
pop
pop
inc
xchg
pop
mov
ins
daa
push
into
jg
ins
jnp
jge
inc
aaa
dec
shl
or
pop
mov
sbb
mov
push
fcomp
mov
or
fs
and
movs
push
pop
shr
in
add
fs
in
clc
push
sbb
dec
mov
dec
pop
jo
inc
std
xchg
icebp
pop
jecxz
std
adc
sbb
stc
inc
test
gs
fwait
pop
out
jnp
add
repnz
aam
mov
sbb
add
pop
dec
leave
inc
popf
sub
fnstenv
adc
jnp
rcl
aaa
cmp
dec
jo
push
scas
pop
ror
or
ins
into
or
int3
jmp
push
xlat
iret
xchg
dec
mov
sbb
fldenv
pop
jbe
mov
jne
jmp
fucomip
lds
loop
inc
ret
call
outs
xchg
test
scas
add
outs
cmc
lea
xchg
ja
xchg
jge
inc
cmp
stos
adc
inc
fdiv
dec
xlat
loope
mov
dec
popa
lods
icebp
add
inc
xlat
add
call
sbb
push
rdmsr
xchg
mov
jno
pop
cdq
add
xor
adc
mov
sub
xchg
ins
xchg
ret
sbb
(bad)
pop
pop
call
or
inc
and
push
mov
daa
push
aas
pop
mov
(bad)
js
bound
jb
ret
add
cs
(bad)
jge
jnp
ins
ja
cli
int3
mov
or
mov
popf
push
jp
xchg
pop
es
jecxz
hlt
and
repz
xchg
fs
call
push
jae
mov
adc
cli
jbe
sub
fnsave
push
fs
lods
mov
scas
out
shr
ins
jbe
jbe
add
xchg
adc
add
clc
retf
outs
mov
sub
repz
sub
cmp
jp
push
(bad)
into
es
sbb
pop
dec
pop
rcr
pushf
pop
scas
jne
xor
jno
scas
test
jmp
mov
call
push
inc
std
inc
rcl
rcl
in
pushf
sbb
xor
mov
add
mov
sbb
xor
push
xchg
adc
in
les
in
nop
push
mov
jmp
xchg
push
add
or
stos
fsubr
scas
movs
xchg
(bad)
dec
dec
mov
push
jl
push
add
cmp
fst
sub
(bad)
mov
jle
mov
fwait
and
xor
inc
inc
xor
xor
(bad)
sbb
cmps
les
cld
(bad)
shl
add
clc
cs
mov
sar
sbb
add
mov
xchg
aas
inc
outs
jno
ds
and
mov
xchg
mov
(bad)
aam
add
adc
data16
cwde
fmul
adc
sub
jle
sub
dec
ja
xlat
xchg
pop
push
mov
mov
and
(bad)
mov
mov
shr
(bad)
push
fcom
fwait
jge
add
add
ja
push
jg
sar
mul
ins
jecxz
fist
imul
das
push
xor
jnp
jmp
xor
mov
int
and
popa
adc
mov
rcr
pop
mov
xor
rol
nop
jl
js
xor
and
mov
cdq
dec
adc
out
shr
add
add
mov
dec
pop
js
aaa
add
retf
ja
call
inc
or
sub
test
dec
sub
fidiv
(bad)
push
lock
add
add
fs
mov
nop
rcl
cs
xchg
xlat
pop
lods
out
xor
or
std
lock
adc
sub
jg
mov
aad
sbb
mov
ret
inc
adc
stc
add
mul
int3
test
mov
cmc
into
push
jbe
sub
sbb
inc
adc
sub
xchg
daa
mov
(bad)
aas
gs
inc
imul
icebp
sbb
mov
pop
outs
sbb
mov
popf
call
movs
and
mov
cmp
cmc
xor
mov
in
lods
aaa
aam
sbb
dec
fstp
or
jg
pop
fcom
add
dec
jnp
or
sub
in
jbe
mov
push
jb
(bad)
popa
addr16
inc
ror
or
outs
loope
std
les
push
fsincos
push
daa
nop
mov
pop
test
ja
mov
test
mov
adc
dec
dec
sub
adc
shl
dec
retf
pop
addr16
scas
mov
test
push
mov
inc
and
mov
cmc
push
xchg
mov
not
push
cmc
jmp
out
ret
push
int3
loopne
fmul
mov
xchg
inc
(bad)
xchg
cmp
xchg
outs
fdiv
push
fcom
cmp
sbb
push
out
jae
je
fild
fcom
cli
outs
dec
test
mov
stos
arpl
pop
inc
push
xlat
out
and
sti
scas
pusha
mov
gs
pop
mov
adc
movs
xlat
cmp
sbb
in
mov
mov
iret
daa
loop
not
lds
jmp
aas
mov
enter
fdivr
xor
inc
jl
sbb
(bad)
inc
aas
pop
mov
sti
lahf
push
test
(bad)
fcomp
stos
pop
mov
fwait
push
es
icebp
mov
nop
and
out
sub
movs
lahf
test
cmp
mov
cmc
stos
pop
mov
(bad)
jge
popf
loop
stc
push
das
xlat
mov
jle
push
sub
jge
and
out
scas
in
or
stc
xchg
fcomp
or
or
out
mov
into
fcomp
das
rol
clc
xor
push
adc
or
inc
lahf
sar
xor
stos
mov
pop
jnp
lea
xchg
or
inc
pop
(bad)
xor
mov
dec
ror
jle
ja
out
jne
in
std
jmp
leave
xchg
mov
sub
push
sbb
inc
imul
xor
xor
std
push
in
xchg
or
or
outs
mov
push
in
rcl
nop
pushf
sar
mov
mov
call
aam
push
sar
sub
sub
mov
in
adc
push
jmp
push
pop
stc
jmp
mov
aad
cmps
push
push
dec
push
push
inc
push
xchg
mov
movs
xor
push
pusha
mov
sbb
dec
call
or
dec
mov
add
sub
out
cmp
xor
mov
lods
mov
lds
push
xor
pop
push
mov
push
test
daa
out
mov
test
ror
inc
mov
or
xchg
lea
es
stos
ret
(bad)
shl
sbb
inc
aad
shr
scas
dec
mov
stc
nop
repz
xchg
sbb
outs
out
push
cwde
jnp
retf
imul
and
add
dec
adc
add
movs
mov
int
test
pop
mov
mov
pop
mov
mov
(bad)
gs
inc
movs
dec
hlt
mov
cmp
or
shl
pop
adc
rol
inc
and
ficom
js
lahf
(bad)
fldln2
mov
pop
sub
add
jp
es
scas
or
fidiv
int
(bad)
ja
rcl
test
sbb
hlt
push
mov
in
dec
adc
int3
push
jns
xchg
sub
fidivr
mov
and
(bad)
mov
adc
fdiv
and
sar
jae
retf
imul
clc
xchg
cmp
out
dec
cmp
cli
adc
mov
xchg
adc
mov
cmp
addr16
repnz
dec
xchg
push
movs
fwait
lock
out
addr16
cli
xor
pop
inc
or
lea
push
outs
xor
mov
jns
sub
adc
imul
cmps
ins
jnp
retf
lods
jmp
jns
xchg
sub
jecxz
sbb
add
adc
push
pop
mov
sbb
arpl
pop
rcl
xchg
retf
sub
iret
mov
mov
test
add
jns
movs
sbb
mov
(bad)
sbb
xlat
push
dec
cmp
call
loopne
mov
add
div
sub
and
and
jecxz
sbb
inc
sub
ja
scas
(bad)
mov
pop
movs
cmp
mov
and
ret
scas
ins
or
mov
pop
sbb
rsqrtps
ror
das
jmp
xchg
or
in
xor
jno
lods
(bad)
add
dec
mul
or
in
gs
ins
int3
sar
push
inc
mov
ds
mov
and
jb
out
add
push
xor
mov
enter
xor
loop
or
push
ds
mul
and
inc
inc
pop
out
mov
pop
or
dec
and
sbb
fdiv
mov
mov
jmp
ss
sub
sbb
fs
ja
out
or
test
je
idiv
jle
(bad)
mov
jp
sbb
mov
daa
ins
imul
mov
imul
sbb
adc
cmc
bound
xchg
mov
in
aad
call
das
imul
push
push
inc
mov
sub
sahf
mov
xchg
inc
jp
movs
push
push
push
test
mov
inc
sub
in
inc
in
add
(bad)
mov
fisubr
fisub
gs
es
shl
rcr
cmps
mov
cmp
shl
gs
in
xor
fild
cmp
push
inc
xchg
pop
sub
jmp
loope
jmp
push
pop
les
mov
lods
daa
xor
scas
xchg
and
cdq
outs
mov
retf
inc
jecxz
outs
mov
xchg
mov
jbe
xchg
sbb
and
bswap
fwait
sub
adc
psubusw
sub
xchg
sbb
xlat
adc
iret
aad
push
out
inc
pop
scas
mov
aad
fisttp
pop
push
les
xchg
sub
cmps
sbb
xor
ja
das
push
mov
sti
jbe
test
mov
(bad)
(bad)
mov
xlat
mov
lahf
jge
add
pop
clc
add
push
mov
int
mov
mov
adc
jno
jne
mov
push
jae
dec
sub
cmps
dec
mov
push
jno
ins
cmps
sub
loope
cdq
in
and
in
sub
mov
gs
xchg
xlat
mov
push
mov
fwait
xor
lahf
and
imul
mov
leave
daa
mov
aas
aad
pop
cmp
push
fs
pop
test
and
mov
stos
pop
add
scas
enter
(bad)
dec
and
add
jecxz
jl
sbb
xor
ins
mov
jno
sbb
cmps
inc
loopne
call
sbb
jbe
jo
mov
cmp
lea
adc
lgs
call
cmps
test
repnz
xchg
jno
ss
pop
cdq
jl
mov
fld
push
push
jne
cwde
es
int3
cmp
inc
push
into
mov
sbb
paddb
in
div
sbb
xor
movs
cmp
xor
sbb
icebp
pop
pushf
cmp
out
mov
scas
mov
cld
out
out
mov
nop
jae
ja
push
mov
retf
scas
pop
xchg
idiv
cmp
lds
test
shl
and
ficom
sub
push
push
cli
xchg
stos
inc
inc
jne
push
hlt
imul
pop
retf
aam
xlat
ud2
pop
arpl
mov
inc
mov
mov
lea
test
jmp
aas
(bad)
mov
push
and
adc
dec
imul
loop
mov
mov
dec
loopne
lds
cdq
cli
xchg
push
test
(bad)
sti
sbb
xchg
push
xlat
mov
or
fnstcw
ss
pop
add
xchg
fnstcw
jns
sbb
mov
unpckhps
stos
repnz
dec
(bad)
sub
out
lock
dec
add
stos
retf
pop
add
data16
call
mov
enter
cld
mov
repnz
xor
popa
jnp
adc
push
cbw
or
out
loopne
push
xlat
push
in
push
pop
jg
jb
mov
mov
es
(bad)
xor
inc
mov
fucom
cmps
out
jb
jg
aad
cmp
cmp
vaddsd
sbb
call
xlat
in
out
jo
retf
sbb
inc
dec
push
imul
stos
sbb
scas
inc
into
dec
xchg
out
fnstcw
mov
push
and
mov
in
or
jmp
fldenv
das
mov
(bad)
and
fs
fstp
pop
(bad)
stos
popa
push
dec
cmps
lods
sahf
sbb
mov
scas
inc
pop
push
out
dec
repz
ror
call
or
xchg
into
shl
pop
and
xor
push
ds
out
dec
scas
iret
dec
mov
add
dec
movs
inc
adc
sbb
int3
fcmovnb
or
cld
lds
out
ja
pop
pop
and
pop
loop
mov
pop
dec
mov
mov
jle
in
dec
mov
std
dec
cmp
je
sbb
pop
xor
fwait
dec
xlat
movs
cld
fcmove
mov
jns
data16
cdq
fadd
sahf
xor
lock
inc
adc
daa
cmps
pop
je
jae
xor
repnz
mov
int3
mov
cmp
add
or
shl
xchg
dec
in
ds
xchg
out
sbb
movs
ins
movs
xor
test
call
mov
int3
inc
pop
xchg
or
imul
dec
mov
test
mov
xchg
dec
dec
(bad)
xchg
mov
sbb
mov
xchg
mov
fs
mov
adc
inc
mov
je
fidiv
test
test
mov
adc
pusha
inc
pop
add
rcr
adc
push
inc
icebp
mov
je
out
cmps
or
nop
hlt
mov
dec
cdq
mov
and
mov
xor
dec
popf
add
cmp
retf
inc
mov
mov
push
loopne
fmul
(bad)
pop
ja
cmp
add
pushw
cmp
pop
sub
jns
scas
sub
jmp
push
and
pop
cmp
sbb
mov
mov
fild
cs
(bad)
xchg
add
sbb
push
xchg
int3
dec
shr
lahf
aaa
mov
out
fwait
into
mov
outs
xor
cld
add
cmp
stos
sub
das
inc
sahf
sbb
dec
das
stos
cmp
pop
loop
out
div
pop
xchg
fistp
inc
xor
fs
jge
jl
push
sbb
ins
dec
adc
mov
pop
mov
int
push
add
cmps
dec
movs
das
(bad)
ja
out
xchg
or
sbb
pop
cmp
retf
fcomp
jo
or
fcmovu
mov
ins
push
call
scas
dec
dec
daa
addr16
rcl
push
pop
xchg
sbb
xchg
jne
sti
cli
add
sbb
jecxz
xchg
stos
fsub
and
sub
arpl
sbb
(bad)
in
(bad)
out
movs
punpckhdq
or
loop
xor
sahf
sub
mov
leave
mov
pop
jnp
imul
push
scas
fld
sbb
pusha
clc
mov
mov
and
out
mul
and
rcl
or
push
js
adc
ins
lods
test
push
sub
jno
jge
popa
lds
push
pop
pop
pop
mov
(bad)
or
scas
int
pop
sbb
scas
adc
mov
push
jns
push
push
or
out
inc
jno
push
fldenv
fs
imul
xor
out
and
dec
lods
sub
xlat
xor
xor
mov
rcr
neg
enter
sbb
mov
mov
arpl
sbb
jmp
inc
sbb
lahf
hlt
dec
dec
out
shr
dec
push
(bad)
retf
add
add
jae
pushf
(bad)
mov
add
je
hlt
nop
ins
sub
xchg
outs
test
pop
call
sub
imul
outs
icebp
add
adc
inc
sbb
hlt
mov
pop
add
sub
icebp
les
mov
mov
mov
sbb
mov
mov
dec
cdq
gs
and
stos
cmp
lods
enter
mov
fwait
ror
cmp
stos
shr
mov
ret
xor
jmp
mov
rol
dec
push
das
addr16
dec
inc
xor
push
jle
inc
pop
xor
iret
dec
cld
pop
mov
mov
shr
and
sar
outs
or
jne
or
or
rol
std
lock
std
retf
jbe
add
scas
push
(bad)
fimul
dec
and
cmp
daa
mov
xor
call
inc
adc
xor
xchg
rcr
outs
mov
xchg
daa
jmp
jo
lods
mov
inc
mov
xlat
jo
dec
cdq
cmc
test
cmps
lds
cmps
jge
jo
fdivr
mov
loop
add
sbb
mov
call
sti
inc
mov
adc
mov
js
dec
add
jmp
(bad)
adc
xlat
or
mov
mov
inc
jae
pop
jbe
es
jb
sbb
aad
pop
mov
aas
xor
js
cmc
ins
xor
not
jl
or
dec
hlt
cmp
pop
(bad)
das
daa
inc
das
mov
sar
shl
and
pop
inc
call
jns
push
les
dec
daa
repnz
xor
sub
(bad)
sbb
jmp
pop
or
fst
cld
adc
outs
sub
test
cmp
push
xchg
cmp
and
fs
jbe
push
or
pop
push
pop
mov
test
imul
mov
ss
jp
mov
inc
dec
push
mov
cwde
mov
fs
loope
add
sti
and
leave
xchg
mov
adc
ss
xchg
jg
pop
aas
mov
scas
nop
es
inc
je
xchg
fbstp
icebp
xor
pop
pop
sub
jno
add
movs
add
sbb
sti
fiadd
xor
add
mov
mov
mov
mov
aas
cmp
popa
add
xchg
arpl
repz
adc
mov
xchg
int
test
or
jnp
jge
idiv
xor
loop
int
inc
daa
and
outs
dec
std
movs
xor
mov
lahf
push
ss
sbb
mov
lahf
sub
fwait
retf
fidiv
sub
call
popf
xor
scas
sub
inc
mov
pop
mov
(bad)
fbstp
pop
fwait
pushf
push
jns
imul
lods
call
loopne
or
test
inc
push
jecxz
(bad)
js
sbb
jle
pusha
xchg
fnstcw
add
cmp
inc
hlt
jg
inc
jl
scas
and
jmp
out
pop
fst
sub
std
add
sub
mov
not
xchg
fcom
add
sti
mov
cmp
call
sti
cmp
movs
push
or
test
jno
cmps
mov
and
pushf
stc
les
inc
xor
mov
sahf
push
xor
jb
mov
pop
std
cmps
xchg
shl
(bad)
adc
sub
mov
fwait
jle
fstp
ret
dec
mov
push
hlt
not
imul
jecxz
hlt
stos
xchg
xchg
test
(bad)
and
ret
sub
jne
inc
mov
dec
shl
(bad)
lock
enter
xchg
push
push
push
outs
adc
mov
lea
int
jnp
mov
mov
push
mov
mov
cmp
movs
pushf
mov
sub
(bad)
push
cld
mov
jmp
sahf
dec
dec
push
mov
ficomp
jp
sbb
push
inc
and
push
pop
push
lock
xor
pop
cmp
sub
fadd
jmp
fcomip
xor
mov
fs
(bad)
imul
mov
inc
mov
xchg
test
es
jns
loop
neg
call
mov
out
mov
sbb
or
and
add
leave
inc
fwait
inc
cmp
jge
xchg
out
xor
out
and
stos
jg
push
fadd
jle
xlat
mov
in
jp
das
pop
cmps
aas
fistp
(bad)
aad
inc
inc
test
mov
jecxz
sub
ret
outs
mov
fmul
mov
sub
jne
jbe
adc
xor
call
mov
push
(bad)
out
nop
out
scas
outs
mov
cmc
in
ret
fild
jge
leave
xor
adc
test
xchg
xor
sub
or
test
outs
or
into
xor
loopne
dec
or
sbb
dec
jnp
int
outs
or
jnp
and
ss
fscale
dec
mov
xchg
xor
push
and
adc
jge
and
jmp
xchg
retf
mov
out
ins
jp
icebp
push
int
or
and
jle
fist
cld
add
push
repz
jl
push
(bad)
aam
mov
sbb
push
sti
sbb
mov
int
xchg
(bad)
fcomip
jp
sub
out
adc
jmp
test
iret
stos
aas
cmp
push
push
popa
adc
xor
pushfw
nop
cwde
mov
jno
lea
sub
ret
in
rcl
push
jle
call
inc
aaa
mov
mov
mov
retf
clc
fnstenv
xlat
aad
pusha
xchg
pop
adc
xor
mov
movs
(bad)
sbb
push
mov
xor
sub
ret
push
or
or
out
sbb
icebp
or
pop
out
mov
xor
sub
mov
in
scas
pushf
or
and
imul
inc
mov
push
cmp
dec
xor
movs
pop
fwait
cmp
cmps
pusha
mov
inc
inc
mov
(bad)
pop
pusha
sub
mul
mov
call
pop
retf
inc
clc
mov
das
int
push
mov
and
or
daa
mov
jp
dec
fistp
das
add
sub
push
push
xchg
ja
jb
rcr
je
mov
adc
ret
sahf
enter
push
pop
dec
sbb
xchg
add
mov
mov
fiadd
retf
inc
inc
jg
or
dec
ins
inc
dec
rcl
rcr
xor
aaa
mov
out
stos
lea
and
mov
js
pop
adc
and
add
cmc
dec
pop
push
push
inc
mov
shr
or
pusha
(bad)
mov
aam
outs
(bad)
movs
pop
mov
lahf
add
arpl
movs
sbb
(bad)
xchg
out
adc
repnz
ja
xor
mov
push
jle
xchg
push
cmp
sbb
into
inc
sub
and
push
pop
jecxz
into
test
inc
xchg
lock
mov
push
rcr
inc
mov
movs
stos
jp
sbb
cwde
or
inc
xchg
clc
inc
pushf
(bad)
int
fisttp
xchg
dec
mov
jnp
repnz
sbb
lea
push
mov
sub
in
jbe
jmp
pop
jge
cld
(bad)
inc
pop
imul
mov
mov
xor
xchg
je
sbb
cmp
xor
jnp
es
mov
aam
div
sbb
fnstenv
out
push
out
ret
sub
call
(bad)
mov
cmps
add
clc
jle
pop
and
gs
pop
in
jl
out
xor
adc
frstor
mov
xlat
xor
(bad)
pop
cwde
cli
jno
stos
test
cwde
push
jecxz
jbe
sub
jnp
jno
or
cmp
jle
pushf
dec
xor
mov
lods
or
rol
in
xor
jmp
or
push
int3
or
(bad)
fisub
pusha
cmp
add
mov
mov
mov
aam
retf
pushf
mov
inc
push
ja
shl
lock
push
and
fidiv
sbb
in
xor
mov
pop
push
jne
fadd
xchg
ret
cmp
xchg
xchg
ret
dec
rdmsr
dec
js
out
sub
test
ins
sbb
imul
ror
adc
xor
jmp
aad
and
add
lea
sti
sbb
push
ds
aaa
fdiv
dec
ror
popa
adc
pop
inc
cdq
mov
xor
cmp
shl
dec
adc
std
arpl
movs
in
inc
lods
jmp
call
xchg
sbb
sub
and
jb
outs
lods
or
jecxz
jb
and
sub
cmp
xchg
cs
lea
js
outs
call
jp
(bad)
popf
ficom
mov
ret
push
stc
fwait
cmc
mov
and
sbb
inc
movs
imul
xchg
in
mov
push
xchg
jp
inc
(bad)
mov
sub
mov
aad
sbb
sub
test
inc
or
cs
enter
jl
test
leave
jne
xchg
xchg
xor
lahf
sub
adc
mov
dec
mov
and
jnp
repnz
jecxz
mov
mov
mov
cmp
leave
out
push
vpermd
mov
push
add
mov
or
or
inc
and
inc
ss
or
int3
fist
xchg
sub
jmp
mov
xchg
sbb
jbe
sbb
mov
mov
out
xor
iret
pop
pop
into
mov
(bad)
pop
rol
xchg
test
sti
(bad)
fxch
popa
sbb
mov
mov
aaa
mov
push
out
xor
aam
pop
fsubr
push
outs
pop
bnd
pusha
enter
push
cwde
pop
test
nop
sub
sub
jbe
(bad)
dec
or
xchg
or
je
dec
mov
and
adc
jo
sub
pushf
mov
xlat
ret
in
mov
cs
dec
add
shl
scas
icebp
inc
inc
jno
frstor
mov
ins
pop
mov
dec
dec
popf
repnz
and
(bad)
xchg
rol
scas
xor
gs
gs
sbb
dec
rcr
dec
aaa
das
mov
dec
cli
(bad)
lock
jl
test
cmp
mov
jmp
and
clc
sub
xlat
cld
push
(bad)
mov
dec
loope
jmp
or
(bad)
fidiv
(bad)
sbb
xor
stos
lea
repnz
aas
add
pop
int3
cdq
inc
leave
sar
daa
sbb
clc
xlat
rcr
fstp
xchg
aas
mov
aam
and
mov
fwait
shr
inc
xor
mov
push
sub
add
pop
retf
cwde
jne
stc
mov
sti
adc
dec
ror
jne
fsubr
popa
push
into
xor
mov
push
sub
jge
xchg
mov
stos
push
pop
inc
imul
jno
movs
mov
or
pop
add
je
stos
adc
in
out
xor
pop
aaa
push
(bad)
aad
xchg
mov
out
inc
jae
push
retf
add
jmp
dec
mov
(bad)
in
sub
mov
xchg
in
adc
pop
movs
mov
popf
(bad)
arpl
fdiv
pop
hlt
pop
xchg
lods
mov
jge
test
add
sub
dec
jp
and
and
popfw
les
sahf
movs
cmp
in
loopne
or
stos
push
(bad)
jge
cmp
xor
mov
inc
loope
(bad)
push
cmc
gs
clc
lea
push
or
jmp
jmp
xor
inc
mov
pop
lock
sbb
and
scas
sub
ins
add
and
popf
mov
lods
nop
lods
cld
inc
cmc
retf
jge
add
jg
xchg
aas
test
sub
cdq
rcl
aam
cmps
sub
mov
nop
cli
jle
movs
int
test
ror
loop
pop
and
enter
push
ja
(bad)
call
xor
lea
dec
cli
std
jp
cmp
push
cmps
add
mov
call
outs
addr16
stc
sub
jp
(bad)
or
(bad)
xchg
adc
popf
in
dec
aaa
nop
jmp
call
les
sub
lods
push
ins
es
ret
test
inc
jmp
or
das
and
jns
hlt
jmp
mov
in
mov
imul
arpl
xor
sub
bound
loope
ror
in
not
jl
stos
pop
call
jb
ss
sbb
neg
aad
arpl
jno
ret
add
out
cld
mov
mov
and
xchg
jns
popa
mov
retf
mov
inc
cmp
add
cmp
jnp
call
shl
dec
inc
sbb
adc
ds
aad
dec
lahf
xchg
dec
daa
and
xchg
jmp
push
repnz
sub
fbstp
sbb
aas
aam
xor
or
adc
(bad)
addr16
push
cwde
ds
test
call
std
test
jo
(bad)
xor
mov
gs
xchg
add
dec
xor
ret
push
jne
dec
lock
jmp
(bad)
jge
and
cld
xor
dec
scas
mov
sub
dec
int3
stos
hlt
ret
add
(bad)
neg
pop
addr16
cs
mov
mov
shl
out
or
in
adc
into
mov
ins
(bad)
cld
call
xchg
mov
repz
inc
sbb
push
sub
jb
push
mov
daa
push
rol
test
in
push
sub
int
sahf
popf
add
pop
sbb
loop
stc
test
clc
xchg
sbb
sti
mov
repz
xor
aas
idiv
mov
in
loopne
cmp
pop
scas
jmp
outs
jno
and
aad
in
push
imul
es
in
mov
push
loopne
fxch
pop
pop
xchg
sub
inc
push
out
jmp
sub
add
dec
mov
lock
adc
jbe
add
ins
jb
and
cmps
or
cld
aaa
(bad)
ins
mov
(bad)
cmps
in
push
push
jo
cmps
push
xchg
cmp
cmp
inc
(bad)
not
jnp
fs
call
(bad)
(bad)
xor
mov
lds
fimul
es
mov
jmp
pop
js
push
push
inc
xchg
pop
dec
lahf
mov
movs
sub
sub
sub
cld
jbe
sbb
loopne
push
xchg
adc
jmp
jne
arpl
pop
ins
sub
pop
jle
add
icebp
pop
or
xchg
out
mov
mov
and
idiv
xchg
and
inc
shr
adc
push
outs
push
add
(bad)
jg
aam
xchg
xchg
fmul
xchg
addr16
movs
ss
dec
sti
jne
out
jmp
pop
pop
xchg
or
cld
xor
sub
loopne
add
stos
adc
jmp
sbb
push
cmp
cmp
add
sbb
sub
dec
rcr
cmp
cmc
fisubr
jg
cmps
into
mov
sbb
jmp
ret
adc
cs
arpl
ret
sbb
std
pop
inc
xor
jo
pushf
in
or
push
cmc
inc
sbb
mov
lahf
xchg
cdq
lock
stc
or
adc
push
adc
cmp
nop
shr
out
out
xlat
mov
lods
imul
loope
out
loop
or
repnz
adc
mov
mov
sbb
fadd
cmp
push
(bad)
int
cmc
test
or
dec
test
in
inc
xchg
cmp
lahf
push
jg
mov
or
fldcw
cmp
repnz
add
dec
xchg
xchg
shr
sub
int
cld
imul
dec
jl
pop
ins
xchg
inc
xor
push
mov
into
and
aad
es
pop
cwde
push
add
push
sub
jmp
sahf
mov
and
xchg
mov
jns
imul
outs
js
inc
adc
(bad)
mov
cdq
push
outs
jne
iret
jmp
jae
push
pop
push
mov
add
jmp
dec
dec
dec
sbb
xchg
test
pop
lods
add
fadd
retf
jmp
jne
test
(bad)
mov
mov
mov
push
mov
add
mov
mov
das
fisubr
inc
push
int
pop
pushf
mov
sub
bound
adc
sub
cmp
push
gs
or
push
idiv
mov
nop
pop
jae
pop
inc
cmps
int3
int
and
ror
and
ret
jb
mov
adc
lods
ins
mov
out
push
xchg
imul
sahf
or
dec
mov
lods
iret
xchg
add
shl
fcom
pushf
sbb
out
inc
cli
clc
xchg
adc
mov
cmc
push
pop
pop
push
adc
stos
jne
dec
out
call
mov
pop
jo
pusha
mov
pop
pushf
cmps
mov
xor
or
into
neg
std
cwde
rcr
cmp
dec
sub
cmp
repz
enter
jmp
ja
fld
jp
xchg
icebp
fnstcw
jl
iret
out
mov
pop
popa
loopne
jo
repz
inc
imul
xchg
repnz
mov
test
loop
cmps
mov
mov
mov
fstp
add
(bad)
jp
mov
sub
push
mov
inc
xor
add
lods
jmp
ja
movs
out
int
xchg
out
scas
push
sub
mov
mov
cli
outs
mov
push
test
push
xor
inc
out
jno
cwde
out
outs
jne
mov
push
push
fisttp
mov
cmps
xchg
jns
cmp
(bad)
mov
repz
call
into
dec
js
push
sbb
popf
daa
dec
mov
jnp
add
xchg
inc
and
cwde
jg
test
pop
add
push
cs
call
mov
sub
push
and
push
fwait
or
and
inc
fwait
add
div
arpl
outs
rcl
jmp
jle
mov
cmp
in
not
dec
xchg
push
or
mov
stc
or
cmp
aad
stos
fisubr
rcr
fimul
fcom
fisttp
icebp
mov
sub
add
aad
push
ret
or
mov
jmp
xchg
div
xchg
mov
mov
shl
push
repz
sub
(bad)
arpl
mov
sbb
sub
push
push
xchg
xor
inc
jg
pop
push
out
pop
xor
jp
daa
xchg
xor
frstor
jecxz
and
ja
popa
inc
xor
mov
fsub
daa
mov
out
push
lods
repz
(bad)
aas
xor
mov
retf
and
sbb
and
(bad)
iret
or
ss
test
in
push
test
rcr
rcr
test
retf
mov
test
cmp
shl
fwait
mov
lods
ins
pop
retf
in
mov
mov
ds
adc
xchg
xor
sbb
jae
stos
lds
fwait
fwait
clc
in
pop
(bad)
mov
jl
cdq
daa
cmp
sub
shl
xchg
cmp
push
in
movs
jno
mov
and
cs
ds
in
xchg
xchg
push
pushf
push
stos
retf
and
push
arpl
sti
enter
ins
pushf
imul
in
mov
sahf
adc
retf
jp
or
call
pop
adc
rcr
fs
or
push
stc
mov
push
clc
les
push
clc
sbb
movs
xor
js
jmp
mov
add
rcr
sbb
retf
xchg
jecxz
cdq
hlt
lods
push
and
in
cld
sbb
js
push
ins
loopne
popa
test
lock
and
stc
pop
dec
add
adc
lds
dec
cwde
in
xchg
movs
int
sahf
mov
fbld
sub
xchg
and
mov
jg
mov
mov
popa
mov
push
rol
xor
out
add
push
mov
lods
xchg
outs
loop
inc
mov
push
pop
push
cdq
add
cmp
dec
xchg
or
pop
jmp
outs
pusha
adc
adc
push
pop
xchg
leave
jnp
repnz
hlt
rcl
inc
inc
mov
xchg
sbb
int3
scas
push
push
(bad)
add
mov
sbb
fisubr
xchg
imul
xor
mov
ss
or
mov
(bad)
std
mov
lds
mov
sbb
out
inc
imul
fsubr
movs
mov
pop
xor
sbb
popa
mov
ficom
xor
and
fmul
pop
push
cmps
aam
aas
cmps
push
and
mov
ret
mov
fmul
sbb
mov
cli
mov
loop
cli
jns
shl
adc
test
rol
ins
mov
mov
fnstenv
inc
sar
sahf
add
aam
adc
mov
js
leave
sar
int
jb
mov
xor
and
arpl
adc
mov
nop
nop
cli
nop
gs
mov
push
xor
mov
jbe
and
sahf
outs
ins
lock
cmp
dec
mov
xchg
sbb
jno
mov
ds
adc
jge
mov
cmp
add
dec
push
call
sub
(bad)
fsub
hlt
test
adc
mov
ret
dec
push
es
sbb
cdq
das
xor
in
out
std
jecxz
mov
das
xchg
add
inc
rcr
cli
jae
sbb
div
mov
cmp
sbb
jg
dec
add
pushf
jl
test
sar
add
push
imul
rcl
(bad)
call
scas
xchg
stos
pop
cmp
push
js
mov
cmps
cmc
jg
aas
pop
inc
jbe
jp
push
pushf
sub
jle
jo
pop
out
imul
pop
pop
jne
iret
popf
cli
jb
in
arpl
std
lea
sbb
ins
cmp
push
call
cdq
mov
int
fst
mov
imul
xchg
jo
retf
pusha
hlt
jge
push
mov
loope
test
xchg
mov
out
jbe
(bad)
movs
(bad)
inc
ror
push
icebp
or
or
call
mov
fadd
xor
sub
sbb
xor
es
push
pusha
cmps
into
(bad)
jmp
jge
pop
retf
inc
cmp
daa
and
ja
arpl
adc
loopne
aam
mov
mov
popa
loope
fcmove
pop
push
cmps
sub
aam
jmp
scas
es
ret
lahf
sbb
rol
out
xchg
add
xchg
pop
dec
mov
or
imul
mov
or
lea
pop
inc
adc
scas
push
sbb
or
fwait
dec
icebp
pop
aas
repz
ins
adc
mov
ret
and
xchg
ins
imul
cli
inc
jg
pop
sti
xchg
push
pop
mov
add
mov
gs
frstor
jmp
pusha
mov
jmp
aaa
iret
xchg
int
clc
jbe
pop
mov
push
inc
pop
inc
add
cmp
int
add
cmp
sbb
and
dec
cmps
loopne
call
mov
bnd
sub
aad
mov
jl
xchg
sbb
scas
adc
push
mov
mov
test
out
add
loop
cmps
icebp
popa
repnz
(bad)
loopne
ss
imul
je
fsubr
mov
fld
jmp
ja
xchg
xchg
imul
add
stos
dec
jnp
push
cmp
ins
jge
loopne
inc
xchg
out
cmp
push
cmp
out
jmp
mov
jmp
add
ss
sub
scas
loope
jmp
sbb
inc
loope
aaa
adc
jmp
pop
jb
into
mov
sub
mov
ud0
rcl
push
mov
outs
in
leave
and
cmp
push
shl
cwde
aam
xor
js
mov
outs
push
ficomp
cld
into
movs
int
pop
sub
push
mov
loope
mov
rol
jle
cli
cmp
xor
or
mov
imul
jnp
push
(bad)
iret
jecxz
adc
pop
(bad)
mov
or
mov
or
arpl
or
push
out
jl
mov
outs
add
xlat
or
xor
mov
sub
sti
repnz
pusha
js
push
or
out
test
ret
sub
mov
cli
cmp
out
mov
cmps
sbb
inc
bound
xor
dec
xchg
push
outs
nop
add
adc
movs
add
cld
adc
ret
aam
add
xor
sub
loop
and
sbb
fwait
mov
mov
mov
mov
(bad)
cmp
jae
addr16
push
lea
add
mov
js
jg
add
mov
fisttp
mov
adc
adc
xchg
cmp
inc
inc
push
stos
mov
mov
fst
mov
int
push
sub
call
fimul
neg
in
call
jl
loop
aaa
dec
or
add
out
fnstenv
dec
mov
cli
ror
and
dec
lods
sbb
outs
push
mov
dec
jmp
adc
js
mov
adc
jmp
xchg
adc
iret
mov
fsubr
aas
loope
inc
mov
push
push
scas
mov
push
fld
sbb
jmp
shr
repz
lods
or
xor
cmp
fs
sub
repz
mov
retf
test
sub
(bad)
sti
cld
sub
mov
idiv
pop
in
pop
add
fstp
push
inc
retf
dec
pop
inc
das
lods
push
mov
das
xchg
arpl
(bad)
cld
push
push
mov
mov
xchg
jno
fs
fbstp
pop
not
sub
jg
mov
adc
or
adc
dec
cld
push
test
jl
ret
mov
hlt
lds
push
and
(bad)
repz
add
xchg
or
ror
sbb
dec
push
pusha
xor
lock
cwde
bound
pop
mov
pop
(bad)
fdiv
dec
mov
loopne
fisttp
sahf
mov
mov
retf
idiv
xor
push
ret
(bad)
sbb
dec
sub
sub
test
adc
xlat
repz
cmp
mov
push
push
or
nop
out
stos
mov
mov
push
repz
pop
call
xor
fnstsw
call
daa
adc
xor
ffreep
out
imul
and
mov
cmp
ficomp
jns
inc
pop
pop
add
and
dec
out
jnp
call
xchg
add
add
aaa
push
jmp
int
ds
inc
popa
daa
cdq
mov
add
sar
pop
push
xchg
or
xchg
mov
cwde
or
mov
ds
faddp
add
xor
std
xor
sbb
aad
or
push
jg
jne
fcmove
xchg
inc
pop
test
outs
pop
imul
std
(bad)
fsub
fbld
xchg
inc
mov
test
ins
jle
(bad)
retf
jmp
iret
mov
(bad)
sbb
jge
sti
and
into
mov
add
(bad)
mov
icebp
sub
sub
test
and
inc
inc
mov
xor
call
and
jno
(bad)
icebp
jmp
add
out
fdivr
or
shl
jne
inc
ret
out
mov
push
sub
xchg
sbb
test
dec
es
mov
ins
xor
mov
dec
adc
and
jns
inc
jp
call
mov
(bad)
mov
xor
and
inc
jb
xlat
mov
dec
inc
cmp
mov
fcom
sub
je
inc
xchg
dec
cpuid
xchg
dec
push
call
daa
xchg
fidiv
push
test
sbb
xchg
gs
imul
fucom
push
sbb
sbb
mov
sub
sub
pop
inc
adc
push
jbe
ret
xchg
cmp
test
mov
or
out
fnstenv
and
mov
sub
in
movs
inc
adc
push
ss
push
fisttp
int
push
jl
mov
mov
sbb
sub
xor
jg
jns
cwde
outs
retf
out
add
in
out
pop
cmp
jno
jb
enter
dec
ffreep
dec
cmps
xchg
xchg
jmp
sbb
mov
iret
into
inc
inc
imul
dec
popf
sbb
jge
cmp
adc
lahf
repz
mov
xchg
cmp
(bad)
icebp
push
movs
retf
fwait
and
stc
sub
or
jg
repnz
aad
mov
rol
retf
mov
in
out
mov
ret
sbb
sub
add
jnp
sub
and
jb
ror
cli
es
fld
enter
adc
mov
mov
and
leave
xor
push
dec
pop
push
lds
sbb
xchg
inc
xor
repnz
sub
cwde
or
std
ret
repz
jmp
dec
ds
movs
push
inc
add
out
in
ins
jge
loop
mov
hlt
inc
shr
test
ins
cli
es
(bad)
js
je
inc
fild
dec
pop
dec
or
dec
jmp
sbb
lods
cli
jns
mov
push
shl
pop
jne
push
mov
ret
into
mov
mov
hlt
(bad)
out
and
sar
ret
fdiv
sti
cmps
inc
outs
popa
adc
test
add
in
mov
jmp
ret
imul
and
and
cwde
outs
shl
or
es
mov
adc
scas
leave
mov
stos
hlt
cmc
loop
fmul
scas
int3
jp
stos
cmp
or
test
cdq
(bad)
aam
ret
into
inc
les
in
xchg
nop
fstp
inc
push
cmp
mov
scas
stos
(bad)
hlt
repnz
dec
push
iret
fcmovnb
sbb
mov
ins
mov
jns
clc
popa
jns
sahf
repnz
outs
nop
cmp
call
loope
cli
push
leave
jmp
inc
aas
aad
(bad)
fmul
jle
inc
or
stc
cld
pop
je
mov
xchg
jecxz
mov
sub
push
lea
mov
mov
nop
adc
mov
xlat
jns
pop
dec
pcmpeqb
mov
mul
dec
add
mov
adc
dec
mov
fstp
in
add
mov
pop
std
mov
push
mov
mov
lock
mov
rcr
push
pop
ins
fwait
popf
cmp
out
ret
xchg
xor
pop
test
and
mov
adc
jnp
xchg
rol
sbb
mov
iret
xchg
add
cli
imul
xor
mov
mov
xchg
jmp
ds
imul
lods
int3
aad
jne
scas
dec
cs
mov
stc
test
push
or
inc
pop
jb
pop
push
push
sbb
sti
mov
dec
adc
rcl
cs
daa
jns
or
fld
cmc
fsubr
mov
dec
shufps
sbb
js
xchg
jns
xchg
xchg
pusha
shl
jns
xor
add
hlt
mov
scas
push
pop
or
fld
dec
inc
adc
mov
mov
mov
pushf
sahf
(bad)
jnp
out
dec
movs
mov
mov
les
in
ins
(bad)
ins
test
daa
lahf
hlt
ret
nop
enter
dec
idiv
cmp
cmp
js
cmp
xchg
or
lock
sub
mov
xchg
sub
fisubr
pop
xor
xor
ror
xor
pushf
lahf
mov
test
jnp
into
(bad)
adc
mov
sbb
pop
fist
add
xor
jo
outs
and
push
je
(bad)
jo
xor
sbb
fsubr
scas
aas
jge
cld
je
dec
icebp
inc
cs
rcr
pusha
data16
leave
ret
jge
mov
pop
inc
dec
scas
scas
mov
mov
retf
mov
test
ins
les
and
aaa
js
retf
jl
std
into
sahf
sbb
cmp
jne
mov
pop
mov
or
jecxz
cwde
adc
imul
inc
cdq
(bad)
cmp
adc
jns
pop
(bad)
setb
cwde
jecxz
xchg
sti
mov
adc
jge
xor
mov
push
addr16
and
(bad)
shl
cmps
push
lahf
popf
mov
(bad)
mov
jg
pop
lahf
ficom
add
sub
mov
pushf
pushf
ins
or
das
jns
push
add
or
sti
lods
cmp
mov
sub
call
push
lahf
push
icebp
into
rol
loope
mov
inc
js
test
clc
mov
sbb
popf
in
fcmovne
cmc
sbb
add
sub
hlt
and
cmp
push
addr16
into
push
sub
cld
add
xchg
and
xor
xchg
fidivr
xchg
shr
ror
mov
xchg
fs
or
sar
pop
lock
jno
(bad)
xor
cmp
sbb
stos
jl
das
xor
push
cmp
xor
inc
xchg
sbb
pop
push
xor
int3
mov
fs
retf
cmps
mov
push
in
xlat
xchg
retf
dec
test
sbb
imul
mov
clc
mov
retf
mov
popf
or
ss
and
(bad)
out
adc
cs
arpl
xchg
icebp
in
out
jecxz
jo
movs
cmp
outs
scas
cmp
fsub
xor
inc
popa
jno
in
xchg
ins
out
add
movs
dec
in
jmp
test
push
ficomp
test
adc
jb
cmp
in
or
pop
out
and
repz
mov
pop
jae
add
cmp
fimul
in
daa
or
int3
sti
loopne
cmps
or
or
xor
and
lahf
rep
je
xor
ret
or
ja
xchg
and
sbb
cs
out
(bad)
jle
xchg
(bad)
xor
add
leave
cmc
in
sub
out
and
dec
sub
xor
jnp
sbb
mov
push
aas
addr16
ficom
push
jns
pop
ret
aas
inc
aaa
int3
cmps
(bad)
sti
retf
std
xrelease
mov
cmp
mov
popa
pop
mov
clc
(bad)
scas
fcom
cmps
call
pop
sub
xchg
cmps
sti
cli
mov
ins
popf
push
jp
or
mov
cwde
fbstp
imul
mov
(bad)
call
add
push
or
rol
mov
sbb
cld
jp
int3
cmps
pop
jno
or
int3
cmp
inc
adc
addr16
dec
inc
add
cmp
stos
jnp
adc
mov
jmp
mov
aad
outs
pop
repz
push
imul
leave
iret
stc
int
(bad)
dec
aad
pop
jnp
mov
ss
inc
mov
mov
das
push
sahf
sbb
imul
push
iret
inc
sub
xchg
(bad)
fcomp
mov
daa
retf
fs
in
mov
xor
addr16
mov
cmp
call
loop
cmp
(bad)
jl
cmp
xchg
mov
nop
fst
mov
dec
cmp
test
or
jmp
shl
jnp
clc
cmp
push
dec
imul
pop
add
test
scas
ja
call
push
ds
popf
jp
and
xor
cld
xor
xor
mov
shl
hlt
sbb
out
rcr
cmp
fsub
fmulp
cmps
mov
pop
out
xchg
sbb
mov
mov
sti
mov
int3
sbb
inc
mov
lds
and
xchg
dec
pop
jno
ret
int
push
fwait
dec
(bad)
in
sub
push
sub
and
iret
rep
add
xchg
lods
mov
dec
ins
repnz
pushf
out
mov
fnstenv
sysret
test
cwde
adc
and
adc
cmovle
xchg
ds
pop
repz
cli
sbb
add
and
shr
lods
pop
and
or
cmp
movs
pop
aaa
pop
fbld
push
ret
fucomip
leave
div
sub
xchg
mov
mov
xchg
xor
and
sub
enter
xor
pop
les
in
mov
mov
je
xchg
adc
add
fisubr
shr
dec
out
or
push
push
inc
mov
pop
mov
push
repnz
push
xlat
in
sub
mov
mov
hlt
scas
cmp
cs
scas
jmp
(bad)
push
dec
and
das
loop
mov
adc
xor
cmp
pop
inc
cmp
mov
fild
ja
fldcw
dec
xchg
bound
ret
cdq
cmp
ins
push
jne
sbb
test
adc
fsub
jl
icebp
dec
jle
ret
xchg
push
out
sub
je
retf
pushf
call
adc
inc
adc
jns
movs
cmp
test
push
ret
pop
or
sub
stos
fwait
test
mov
xor
lods
pop
pop
adc
sbb
std
lahf
loope
dec
and
ss
arpl
sti
and
mov
cmps
test
loopne
and
movs
scas
call
loope
push
in
stc
call
pop
xchg
push
xchg
das
jo
push
cmp
or
out
adc
ret
sbb
(bad)
std
adc
fldcw
jnp
fidiv
icebp
and
mov
adc
movs
xlat
clc
in
clc
add
mov
jbe
shl
xor
sub
adc
aad
je
adc
add
(bad)
aas
xchg
je
cmp
xchg
test
sub
aas
les
hlt
add
mov
pop
imul
xor
ja
mov
das
jmp
shl
fmul
cmp
(bad)
fidiv
pushf
shl
sbb
popa
call
iret
inc
mov
je
sub
xchg
adc
sti
fild
in
xlat
lahf
lahf
cs
clc
retf
cmp
xor
clc
push
add
adc
pop
xor
mov
out
sub
push
jmp
adc
jo
mov
lods
mov
cmps
adc
cmps
jmp
loope
xchg
cmp
lea
push
xchg
fnsave
push
and
cmp
stos
data16
sub
cs
cmp
test
xchg
unpcklps
shl
loopne
inc
sbb
jb
inc
scas
iret
pop
or
mov
(bad)
and
test
(bad)
imul
cwde
mov
xchg
inc
mov
sbb
mov
cli
cmp
(bad)
hlt
dec
jmp
or
dec
loopne
bnd
call
je
outs
push
xor
lods
push
pop
add
jl
imul
movs
int
int3
mov
(bad)
test
or
in
cmc
pop
push
lahf
cmp
mov
in
ror
in
push
daa
gs
sbb
(bad)
imul
dec
cld
push
repz
and
mov
scas
ins
dec
hlt
ret
stos
in
retf
dec
repz
mov
pop
mov
inc
test
cmp
inc
xchg
mov
cld
mov
push
mov
inc
lods
jl
fidiv
enter
mov
movs
xlat
fisttp
xor
sbb
cmp
idiv
mov
mov
lods
int3
ret
nop
stos
sahf
sbb
mov
pushf
dec
xchg
sti
add
cs
test
cmp
es
fucomp
sbb
ret
xor
loopne
inc
cli
lock
jecxz
dec
pop
inc
jbe
out
fwait
sbb
pop
add
ror
xchg
fadd
push
sbb
aaa
or
es
rol
(bad)
mov
ja
ss
push
in
ss
imul
push
mov
add
push
enter
scas
cmp
xor
pop
in
in
aam
and
mov
sti
xchg
or
mov
bound
sub
aam
dec
(bad)
sbb
sar
mov
or
mov
mov
int3
aad
jb
icebp
dec
mov
ss
out
mov
add
push
popf
sub
xor
mov
test
(bad)
mov
cmp
or
add
dec
xchg
outs
mov
and
(bad)
iretw
icebp
ret
daa
lahf
call
sub
adc
out
shr
and
jo
or
ss
jle
les
mov
mov
mov
scas
push
stos
aas
cmp
or
jns
adc
lds
push
(bad)
jg
mov
dec
shl
cmp
push
in
cmp
push
outs
pop
xor
mov
and
outs
pop
cmps
and
fiadd
pop
push
xchg
out
mov
les
(bad)
leave
xchg
pop
jge
shr
cmp
js
pop
jle
xchg
bound
dec
sar
js
xchg
mov
and
pusha
and
repz
test
jp
pushf
mov
xchg
add
int
popf
sbb
and
loop
push
shl
loopne
movs
inc
cmc
cmp
div
xlat
push
fst
jb
ss
pop
ret
or
xchg
mov
popf
enter
in
xchg
cmp
cmp
xor
mov
inc
push
mov
shr
jno
push
mov
adc
lock
mov
dec
and
push
arpl
adc
loope
pop
xchg
fild
or
jp
ret
cli
fsubr
xchg
mov
pop
cmp
sub
or
ret
dec
test
push
xor
jecxz
fxch
leave
push
repnz
dec
push
mov
jmp
fadd
repnz
ss
or
stc
cmc
and
enter
mov
or
mov
xchg
daa
gs
xchg
push
lahf
push
mov
pushf
pusha
ins
imul
loope
rcl
push
sbb
xchg
pop
ss
lods
test
ins
cmps
inc
push
cmp
repnz
loop
daa
imul
jle
adc
adc
mov
cdq
sbb
mov
adc
scas
dec
and
jecxz
pushf
xor
in
jb
add
adc
cli
iret
outs
leave
lods
cmp
pusha
stos
in
pop
test
inc
psubq
xor
enter
sbb
inc
or
dec
retf
xchg
aam
adc
jle
cmps
push
push
sub
idiv
jmp
pushf
lods
xor
or
pop
(bad)
gs
jecxz
shl
cli
xor
ins
push
andps
inc
popa
movs
arpl
jno
fnstcw
das
les
dec
in
inc
xor
ss
sbb
call
aam
adc
sar
outs
es
sar
sbb
rol
sub
daa
pop
neg
mov
enter
rol
addr16
xor
add
int3
in
stos
sub
cmc
add
jmp
fdiv
and
push
daa
cmp
movs
cwde
push
inc
lods
scas
jmp
mov
cmp
and
add
dec
call
je
loope
shl
dec
mov
outs
movs
adc
and
pop
loope
jmp
adc
jb
aad
mov
xchg
cmp
test
add
sbb
sbb
push
pop
arpl
cmp
dec
push
ror
xor
std
and
les
js
or
xchg
shl
lds
loop
cwde
jp
mov
cmp
mov
inc
dec
stos
scas
inc
pop
pop
(bad)
add
add
scas
push
aad
loopne
pop
mov
icebp
sub
test
fsubr
add
sbb
push
les
sub
jl
mov
jae
lea
cld
push
cmp
push
mov
arpl
adc
rcr
call
mov
in
pop
into
mov
retf
xchg
iret
cli
lock
ret
and
arpl
ror
jne
inc
and
xor
jmp
and
sub
arpl
pop
cmp
rcr
pusha
jge
outs
iret
lea
mov
std
jmp
imul
inc
daa
mov
mov
xchg
pushf
fisttp
sub
mov
xchg
pxor
mov
inc
(bad)
ret
sub
lock
test
push
sbb
rol
jne
imul
and
fadd
test
push
push
not
popa
or
push
adc
push
xchg
(bad)
mov
or
pop
outs
mov
pop
dec
cwde
mov
xor
pop
pop
add
push
push
or
pop
lods
mov
dec
mov
mov
(bad)
fwait
jnp
nop
lahf
retf
push
movs
push
mov
mov
jmp
ins
popf
mov
outs
dec
push
(bad)
call
out
and
out
cs
and
mov
pop
(bad)
adc
xchg
add
ret
les
dec
daa
jecxz
push
adc
dec
add
clc
adc
lock
dec
jbe
jno
test
into
mov
fs
test
sar
scas
adc
ret
iret
xchg
outs
mov
in
mov
stos
rol
mov
lock
mov
(bad)
adc
xchg
ror
inc
add
sub
repz
and
jne
out
cmp
pop
test
mov
mov
scas
(bad)
lods
loope
js
in
xor
jbe
jge
inc
lods
sub
xchg
std
push
cwde
or
or
dec
sbb
repz
aad
das
mov
sahf
mov
push
and
div
push
push
mov
ret
pop
inc
xchg
pop
lock
push
outs
retf
dec
movs
mov
xor
inc
cmp
icebp
int
xor
lahf
dec
sbb
sbb
jmp
stc
adc
hlt
getsec
bswap
fsubr
xor
jp
cli
xchg
loopne
push
dec
in
out
scas
cdq
add
pop
int3
mov
outs
add
push
movs
pop
cmps
cwd
push
aas
mov
dec
cmps
dec
mov
or
aas
cli
shl
xchg
fstp
jge
jecxz
pop
pop
int
pop
imul
xor
adc
jbe
fcmovnu
add
xchg
dec
and
imul
sub
psubsw
mov
in
push
sbb
aam
mov
stos
aad
test
xor
sbb
xchg
(bad)
sub
jae
xlat
loope
mov
add
mov
dec
push
mov
push
js
or
mov
jo
xchg
aad
adc
xor
jnp
mov
aas
mov
arpl
in
jne
loop
add
fcom
push
div
mov
adc
scas
xchg
push
mov
sti
fsubp
jmp
jl
mov
sub
xlat
pop
inc
xchg
loopne
imul
(bad)
fisub
sti
xor
sbb
mov
sbb
mov
xor
adc
push
jmp
popa
mov
out
lods
scas
push
push
test
xchg
dec
stc
xchg
in
push
test
test
cs
pop
mov
and
ror
dec
and
inc
xor
test
cmp
clc
push
daa
pop
ja
xor
shr
pop
mov
retf
push
loope
dec
jo
adc
sbb
or
loope
in
out
dec
mov
jmp
ret
into
or
sbb
adc
jp
(bad)
adc
(bad)
or
cmp
fbld
mov
aam
add
clc
cmc
ret
xchg
lock
and
cmps
pushf
inc
fsub
js
test
cli
in
xchg
cdq
shr
js
sti
repz
cmp
add
mov
mov
into
addr16
aaa
dec
jmp
sub
pop
leave
xchg
xchg
mov
add
pushf
hlt
(bad)
xchg
gs
cmp
lds
aaa
push
stos
shl
jns
xchg
and
jnp
cmp
in
les
in
cmp
sbb
sbb
sbb
sbb
fwait
and
adc
in
rol
push
and
sahf
push
pushf
pop
clc
fdiv
xor
ret
ins
jns
xor
pop
ins
dec
mov
nop
or
pop
cmp
mov
sbb
stc
sub
or
jnp
clc
sti
sbb
pop
and
jns
into
out
push
aad
shl
fs
imul
xor
or
stos
add
dec
push
inc
adc
pop
mov
outs
jb
inc
sub
cmp
jbe
adc
fwait
into
mov
adc
jnp
shl
daa
or
push
clc
mov
push
rol
mov
lods
or
jbe
rol
jge
inc
test
clc
jge
sbb
dec
xor
pop
js
rcl
push
repnz
xor
pop
ins
ror
jmp
arpl
dec
call
cdq
sbb
inc
fwait
pop
dec
pusha
stos
ss
adc
xchg
(bad)
imul
cmps
enter
test
pusha
cmc
fs
sub
(bad)
cmp
test
js
push
or
test
(bad)
je
shr
sub
or
and
sbb
hlt
loopne
imul
jnp
push
(bad)
jg
dec
jno
mov
shl
arpl
inc
or
fidivr
inc
cmp
mov
mov
shr
mov
sub
nop
dec
add
repz
or
hlt
test
es
ret
dec
jg
xor
or
mov
in
lahf
push
push
jp
and
pop
in
mov
jp
adc
rcl
pop
or
pop
xlat
rcr
ins
popa
pop
call
add
(bad)
test
xor
and
lea
cld
stc
addr16
jb
lea
sub
cld
sbb
loop
int3
push
xchg
out
out
and
repz
pop
(bad)
cli
mov
popf
jae
add
inc
pop
jno
xor
xor
popf
imul
sbb
ins
dec
pop
stos
repz
loop
mov
add
lods
or
outs
and
cwde
shl
sub
push
dec
in
stos
sti
push
xlat
cs
sub
jns
add
aad
ror
mov
out
push
sub
loope
push
out
cld
lock
sub
out
popf
aam
into
sub
sbb
mov
ds
lahf
lahf
xchg
add
mov
call
out
fstp
dec
neg
aaa
inc
dec
push
xchg
shr
je
or
mov
mov
std
or
out
ror
sub
adc
enter
into
pop
inc
ss
mov
mul
xchg
or
push
(bad)
dec
in
sub
and
mov
pop
retf
jae
push
lea
inc
movs
cwde
imul
and
jbe
dec
mov
femms
repz
push
dec
mov
mov
add
pop
inc
in
out
jo
(bad)
popf
cdq
in
xor
add
sti
xor
in
inc
mov
push
sub
cmps
sbb
lahf
loop
cmp
jmp
stc
lods
lea
push
push
neg
xor
retf
sbb
mov
fisub
mov
push
cwde
add
ins
push
pop
push
mov
cmp
adc
or
adc
les
cli
xchg
add
push
and
into
fbld
lock
mov
pop
sahf
lahf
add
dec
push
js
sub
mov
scas
jmp
xor
push
ins
sbb
pusha
ja
lods
sbb
clc
jo
push
icebp
xchg
xchg
mov
fxch
adc
das
stos
imul
ret
xchg
aam
call
inc
inc
mov
push
pop
test
mov
(bad)
xchg
loope
sub
sbb
sub
pop
popa
ins
dec
push
hlt
aam
xchg
sbb
sbb
xor
movs
cmps
shl
pop
push
sub
rcr
inc
xchg
stos
inc
mov
jo
push
adc
cmp
hlt
rcl
stos
jmp
fstp
xor
jmp
inc
inc
add
mov
push
mov
xlat
ja
dec
jle
sbb
xor
xchg
or
sub
lock
mov
pop
outs
dec
leave
(bad)
ret
pop
fnclex
mov
(bad)
outs
ret
adc
lods
adc
(bad)
sbb
mov
mov
data16
jp
sahf
nop
mov
jae
in
push
fcmove
rep
pop
mov
out
xchg
xchg
dec
js
mov
and
push
stc
cmp
cs
xor
cmp
push
xor
inc
xor
mov
push
pop
clc
pushf
icebp
add
pop
test
ret
or
cdq
leave
push
lock
mov
dec
mov
fadd
ror
push
jnp
and
jp
inc
scas
mov
mov
mov
test
(bad)
data16
and
pop
mov
mov
int
ja
dec
dec
aaa
mov
mov
sbb
jl
fidiv
and
mov
pop
and
(bad)
xchg
jmp
lods
aaa
int3
sub
cmc
clc
idiv
test
and
sub
jp
pop
daa
pop
or
pop
jae
or
sub
sub
ds
mov
push
add
xchg
aaa
dec
xor
arpl
in
sahf
or
adc
and
cmps
out
imul
mov
in
pop
lock
aad
sub
or
cdq
jnp
stc
jmp
js
out
outs
repz
add
push
or
add
or
sbb
in
(bad)
std
pop
scas
test
push
inc
jg
int
adc
test
push
jmp
out
icebp
push
cdq
out
mov
mov
pop
push
push
es
mov
push
cmp
stc
xlat
ds
adc
dec
dec
ds
cdq
fisubr
push
mov
out
adc
cld
retf
in
mov
cmp
cmp
rol
test
inc
dec
ins
push
pop
je
and
outs
into
test
or
mov
push
mov
leave
sub
shr
pop
retf
outs
mov
ds
stos
into
cmp
std
frstor
push
ret
and
sti
repnz
pop
mov
push
retf
popa
and
sbb
mov
mov
xlat
sbb
dec
push
mov
sti
out
mov
fcmovnu
loop
cmp
outs
mov
lock
(bad)
into
cwde
enter
rdtsc
or
jne
mov
pop
fs
jmp
mov
and
fs
xchg
or
jne
sub
or
rcl
sbb
test
in
push
fstp
adc
jb
(bad)
fstp
lds
xor
in
std
mov
scas
cdq
push
dec
mov
into
(bad)
out
pop
xchg
adc
jge
mov
add
push
fld
test
test
jno
add
fidiv
retf
retf
mov
dec
hlt
sbb
mov
jp
jmp
push
addr16
pushf
addr16
mov
jns
jnp
fnstsw
and
loopne
or
dec
push
std
jl
ins
ror
int3
cli
rcl
mov
mov
inc
jae
scas
add
mov
in
add
cdq
dec
sahf
jecxz
push
enter
ret
dec
jg
pop
repnz
movs
mov
pop
mov
loope
cli
in
and
add
cmp
add
not
and
bound
data16
jbe
ja
pusha
test
cld
dec
retf
test
mov
mov
mov
ins
rcr
xchg
pushf
ds
aas
add
sub
mov
fild
lea
dec
das
push
mov
sub
mul
bound
daa
push
ficomp
mov
dec
push
cmp
bound
push
xchg
outs
sahf
in
cmp
or
mov
retf
sbb
inc
fisub
pop
popa
xchg
ret
loop
js
mov
scas
lods
pop
test
and
or
shl
cmp
cmp
fistp
scas
es
cmps
xor
xchg
ss
inc
push
mov
jae
ds
add
mov
arpl
lock
hlt
mov
jmp
sti
inc
mov
xchg
(bad)
sbb
(bad)
or
in
xchg
ja
push
out
sar
cmp
pop
mov
mov
mov
lock
xor
pop
aaa
lahf
out
or
popf
dec
inc
pop
adc
fnstcw
dec
ror
xor
outs
xor
ds
mov
icebp
stc
out
and
xor
stos
mov
movs
in
mov
wrmsr
and
not
dec
push
xor
pop
cmp
out
pop
stos
bound
fdivr
and
out
mov
adc
scas
xchg
out
pop
data16
xchg
mov
mov
ins
and
popa
add
add
dec
nop
js
nop
or
jbe
and
minps
cwde
cmp
mov
repnz
icebp
pop
ficomp
out
ins
and
clc
pop
pusha
cmps
inc
imul
dec
test
or
mov
inc
adc
or
pop
jg
ins
repnz
jp
sub
mov
je
adc
inc
imul
ds
rol
pop
cwde
adc
std
sub
lea
pop
adc
lods
mov
jl
(bad)
iret
xchg
aam
push
cmps
in
pop
inc
or
push
sub
fdiv
(bad)
dec
mov
adc
cmp
test
gs
inc
pop
icebp
jle
cmc
xchg
fild
cli
add
test
xchg
ins
ret
ret
mov
jno
imul
mov
das
shl
imul
fist
mov
lock
xor
gs
mov
ret
xlat
loop
cmp
inc
pop
out
xchg
inc
into
jecxz
mov
add
in
jbe
dec
cmp
add
in
stos
add
xor
stos
pop
pop
pusha
pusha
dec
lods
cmp
(bad)
out
cmp
out
repnz
mov
jmp
aaa
std
mov
add
adc
mov
cs
dec
inc
push
loop
call
xchg
jge
shl
fst
pop
or
movs
popa
shl
add
test
mov
aad
cwde
or
lahf
imul
jb
aam
sub
cmps
add
xor
or
enter
stos
loop
retf
scas
leave
scas
jbe
std
arpl
cld
fdivr
ja
shr
int3
ss
clc
sar
pop
jae
xor
ret
dec
sub
cwde
fidiv
push
sbb
pop
jmp
sbb
add
fidiv
and
adc
fadd
xadd
or
or
jmp
inc
jo
xlat
xor
fistp
and
jl
cmp
ss
fdivr
test
xchg
in
sbb
xor
xor
call
scas
(bad)
and
xor
xor
stc
loopne
into
leave
out
test
dec
movs
inc
and
mov
test
loop
ret
(bad)
add
jmp
inc
jne
je
mov
adc
and
push
mov
and
adc
xor
cmps
jne
sbb
aas
(bad)
mov
mov
xchg
inc
jbe
push
ret
rcr
mov
pop
add
or
stos
push
xchg
sub
adc
lods
xor
xor
in
push
and
retf
adc
imul
test
(bad)
test
add
adc
idiv
dec
pop
loopne
test
sub
xor
pushf
ficom
adc
adc
and
mov
lods
add
bound
stos
loop
jg
sub
and
mov
adc
dec
into
sub
retf
out
shl
push
adc
in
popf
rep
cs
test
xchg
xor
dec
fisubr
icebp
bound
call
aam
aaa
and
jno
adc
lock
jno
cdq
cdq
call
and
(bad)
cmc
sti
inc
dec
int3
in
xor
and
repz
(bad)
scas
imul
push
pop
adc
and
scas
adc
jmp
pusha
in
mov
add
cmp
inc
popf
dec
ror
repz
mov
(bad)
xchg
xchg
fnstcw
mov
xchg
xchg
xor
shl
out
mov
xchg
out
arpl
imul
jmp
int
mov
mov
sar
ins
lea
sbb
daa
add
adc
enter
sub
fiadd
add
lock
js
aam
arpl
mov
stc
sub
jmp
in
inc
xor
hlt
call
add
inc
test
dec
repnz
mov
fimul
enter
fld
dec
cmp
sbb
fadd
jp
sub
inc
mov
jle
dec
or
nop
fsubr
aaa
mov
loop
jmp
arpl
les
xchg
jmp
sbb
push
stos
mov
test
sub
scas
rcl
lods
inc
mov
data16
push
add
ins
shl
add
adc
jns
push
fisubr
pusha
aad
(bad)
hlt
cmp
add
scas
and
es
inc
mov
and
pop
fadd
scas
fdivr
dec
xor
mov
sub
out
loop
popf
add
test
dec
or
test
iret
push
cmp
mov
call
xchg
sahf
mov
or
mov
in
scas
jb
dec
cmc
fbstp
punpckhdq
cmp
addr16
loop
fist
jbe
push
mov
mov
int
pop
cmp
rcl
sbb
mov
je
pop
nop
and
add
icebp
jl
jg
retf
fisubr
cmps
mov
or
push
clc
add
push
mov
test
dec
imul
sub
ror
sub
push
pop
stos
repnz
pop
repz
rcr
sbb
inc
or
pushf
jecxz
dec
retf
push
ins
sbb
enter
loopne
mov
jecxz
jne
(bad)
mov
xor
mov
in
repz
pop
int
jle
and
xlat
popa
dec
or
and
xchg
jns
mov
xchg
(bad)
hlt
fsubr
add
add
xchg
fiadd
inc
adc
cmp
clc
mov
lods
pop
cld
sbb
mov
xor
push
shl
out
dec
lahf
jge
aad
xor
(bad)
jno
lea
mov
ins
jns
(bad)
pop
addr16
or
imul
cmps
(bad)
or
sbb
ret
or
cld
ins
xlat
sub
dec
movs
in
lea
sub
sbb
leave
add
stc
cmp
mov
push
cmps
xor
rcl
adc
mov
inc
shl
shr
sub
stc
cld
cmp
push
cmp
sbb
in
mov
sbb
test
(bad)
dec
sbb
push
bound
data16
jno
leave
mov
adc
mov
cmp
pop
xor
jmp
mov
xor
fisubr
push
leave
adc
jae
icebp
std
xor
pop
into
(bad)
or
ret
cmps
xchg
mov
mov
jnp
jbe
inc
outs
xchg
add
mov
out
jl
int3
popf
ja
dec
mov
cmovnp
and
ficom
jmp
xchg
imul
xchg
rcr
inc
arpl
jmp
sub
cmp
bound
shr
mov
push
outs
mov
popf
in
pushf
or
jl
and
jg
cld
pop
call
imul
stc
scas
fstp
pushf
scas
cwde
std
xor
cmp
fst
outs
xor
push
lea
daa
test
mov
cmp
or
and
mov
clc
mov
ss
push
mov
cmp
add
xor
lods
(bad)
jno
scas
sbb
dec
dec
push
repz
int
mov
jp
sahf
dec
ret
sbb
push
add
fnstcw
pop
jge
fwait
cmp
or
pop
outs
mov
jo
ret
outs
add
adc
jmp
popa
jl
add
xor
cdq
cs
retf
sub
(bad)
call
scas
inc
icebp
mov
sbb
retf
cmp
jge
or
add
pop
bound
mov
adc
pop
xchg
and
sbb
scas
cmp
fimul
push
sbb
xchg
fscale
xabort
call
movs
lea
lahf
sbb
(bad)
mov
into
out
cmp
mov
test
xchg
sti
dec
fstp
das
pop
xchg
rcr
push
test
xchg
and
cmp
and
inc
in
in
into
mov
aas
loopne
rol
xor
ins
sbb
daa
int3
xchg
push
or
adc
sub
pop
and
fisttp
(bad)
loopne
into
cdq
sub
cs
mov
call
cmp
dec
sbb
jmp
lock
std
jle
pop
sub
inc
push
or
mov
je
mov
test
and
xor
mov
push
pop
outs
pop
(bad)
iret
xor
ss
mov
jo
adc
aad
addr16
sub
add
fimul
mov
jp
cmps
mov
retf
shl
xlat
sbb
xor
jnp
xor
jb
fiadd
mov
test
pop
mov
sbb
(bad)
aaa
bound
gs
or
cli
and
fistp
lahf
xchg
mov
(bad)
cli
mov
sbb
fcom
hlt
sbb
xchg
push
inc
rcr
xchg
xchg
xor
push
stos
jns
mov
std
rcl
pushf
xchg
sbb
pushf
les
add
les
adc
sub
repnz
jnp
cmps
pop
call
jnp
popf
fisubr
cmp
das
sbb
movs
mov
xchg
inc
test
(bad)
(bad)
je
ja
ins
xchg
and
push
jmp
xor
push
xor
mov
add
and
cmp
loop
jo
dec
mov
add
lods
and
add
jl
push
jle
fs
in
and
pop
outs
in
mov
inc
and
dec
adc
mov
scas
clc
sahf
jno
mov
test
ja
inc
inc
cmp
inc
aam
xor
lds
and
lods
xchg
cwde
dec
ss
adc
xchg
(bad)
retf
fwait
les
fstp
in
cmp
adc
jmp
sti
das
xor
add
jg
xlat
push
add
out
retf
xchg
sar
out
or
adc
ds
ins
add
js
imul
mov
addr16
popf
inc
jmp
mov
popa
lods
leave
shl
xor
mov
in
dec
add
inc
sub
or
cmp
in
sbb
or
jne
lods
cmps
dec
add
(bad)
mov
cmp
test
mov
cmps
dec
and
stos
mov
aam
ins
outs
repnz
outs
pusha
push
ret
push
nop
inc
push
inc
into
jnp
jns
and
gs
cmps
out
pop
mov
and
ret
xor
xchg
dec
jg
cmp
adc
mov
mov
push
imul
mov
inc
and
jle
sbb
dec
mov
imul
pop
in
inc
mov
fild
push
add
(bad)
dec
jo
outs
or
mov
cld
inc
add
inc
add
inc
fmulp
lea
cdq
mov
enter
call
jne
outs
pop
fisub
xor
out
mov
mov
stos
push
ins
jb
fadd
dec
out
xchg
mov
test
nop
dec
mov
xchg
in
xchg
pop
xchg
std
enter
jge
inc
fwait
inc
aaa
jg
sbb
fidivr
ret
cli
pusha
sti
mov
mov
lods
or
stc
movs
inc
(bad)
cwde
or
cdq
fmul
(bad)
adc
fld
jp
shr
mov
and
rcr
aam
add
sbb
cld
pop
lods
nop
shl
xor
rcl
popf
push
std
cli
or
cli
xor
pop
inc
jmp
add
jbe
and
mov
repnz
jl
add
int3
push
inc
mov
xchg
cdq
adc
test
out
jo
sbb
mov
in
arpl
icebp
iret
and
jne
mov
add
lahf
aam
dec
shl
mov
(bad)
and
adc
fisttp
add
int3
rcl
xchg
fsub
dec
popf
pushf
and
push
in
pop
(bad)
aaa
push
mov
cmps
push
inc
or
inc
pop
fst
dec
pop
stos
inc
shl
pop
pop
ja
popf
popf
es
je
shl
iret
data16
popa
adc
in
mov
xchg
hlt
rcr
into
hlt
sub
pop
pop
push
or
stos
or
pop
or
xchg
or
adc
test
repnz
dec
rcr
repz
in
mov
or
add
in
test
sub
inc
cdq
outs
add
arpl
sbb
dec
xchg
out
mov
push
dec
call
and
add
adc
fild
inc
lods
sub
repz
test
daa
iret
xor
(bad)
nop
mov
xchg
fmul
sahf
shl
mov
pop
imul
cli
jge
pusha
mov
xor
hlt
xchg
mov
cs
adc
inc
leave
mov
mov
mov
retf
mov
inc
push
xchg
xchg
adc
lock
mov
fidivr
sbb
enter
jp
mov
push
jne
mov
inc
add
rcl
nop
and
pop
jo
or
dec
jo
jl
push
in
or
sbb
cmps
or
jb
sub
xchg
popa
jge
mov
adc
adc
shr
xchg
or
sti
dec
dec
xor
loop
ror
sbb
outs
xor
push
pop
sub
lods
ret
outs
mov
sahf
xchg
adc
(bad)
mov
mov
pop
jns
dec
jae
jbe
push
sbb
mov
retf
pop
fidivr
sub
sub
inc
jb
sbb
clc
and
out
loope
inc
jbe
inc
ret
pop
pop
nop
mov
ds
movs
les
mov
out
pop
cmp
push
and
adc
es
repz
icebp
stos
das
xchg
xchg
outs
in
dec
and
mov
shl
adc
test
fs
xor
pop
dec
fsub
lahf
push
retf
sub
or
test
outs
movs
lahf
imul
ffreep
(bad)
clc
ror
jp
paddw
hlt
mov
retf
mov
cmc
and
lock
shl
xor
mov
loop
mov
or
mov
jo
test
jle
cmc
inc
cmp
addps
sahf
inc
mov
push
in
imul
jmp
ins
inc
adc
test
jecxz
sub
inc
dec
jle
or
sbb
xchg
xchg
jmp
mov
scas
aad
mov
ins
mov
aad
sub
jge
mov
retf
or
add
and
or
int3
dec
cmp
jp
jmp
dec
inc
or
dec
mov
mov
adc
or
inc
dec
mov
sbb
loopne
daa
add
cmps
sub
fsubr
pop
mov
and
lahf
cmp
or
sbb
fistp
fdivrp
pushf
outs
jp
repnz
ds
dec
xchg
pop
movs
push
mov
mov
pushf
or
xchg
sub
cwde
and
cmp
test
pusha
adc
int3
lods
cmp
ffree
repz
js
sahf
mov
(bad)
mov
add
xor
jne
jno
(bad)
adc
mov
inc
sub
pop
or
jmp
nop
iret
xchg
rcr
movs
xchg
(bad)
ror
imul
aas
in
sub
xchg
fisub
retf
sbb
or
jae
stos
sahf
sub
jge
mov
sbb
fcmovnu
pop
in
cdq
fnstcw
pop
jmp
je
js
push
rcl
cmp
mov
mov
adc
and
movs
inc
std
mov
mov
retf
ja
pop
pusha
mov
mov
outs
or
mov
inc
lock
(bad)
sub
push
pop
mov
sbb
hlt
jge
(bad)
mov
call
dec
sbb
inc
bound
mov
jl
lds
rcl
aas
arpl
jle
dec
mov
cmp
xor
es
pop
inc
dec
dec
xor
aas
outs
push
fwait
mov
xchg
or
nop
inc
cld
ins
movs
arpl
adc
arpl
lea
jl
into
xchg
jp
mov
and
lahf
out
data16
sbb
ja
pop
adc
xlat
jmp
shl
mov
pushf
jbe
(bad)
pop
or
sbb
arpl
adc
pop
or
jmp
pusha
dec
cwde
int3
pop
inc
(bad)
mov
sbb
sub
jp
stos
jge
dec
push
sub
xor
push
lods
cmps
pop
aaa
fwait
cmps
lock
shl
mov
adc
inc
inc
int3
mov
fldlg2
jecxz
push
in
aas
mov
(bad)
sahf
push
into
shl
mov
cs
bnd
movs
sbb
dec
dec
add
or
ret
xchg
jo
(bad)
cld
sbb
push
mov
mov
aam
jl
popa
xor
and
xchg
push
pop
test
pop
cdq
cmp
or
pop
jecxz
sub
add
jp
mov
sbb
xchg
and
pop
pusha
pop
pop
sbb
dec
pop
dec
and
imul
retf
xchg
xchg
dec
cmc
inc
mov
jno
sub
xchg
or
xchg
pop
or
fnsave
ins
xchg
push
sbb
addr16
adc
das
sub
xchg
xlat
aad
mov
dec
and
inc
sbb
loopne
int
push
mov
mov
sub
jp
dec
dec
push
mov
not
add
pop
pop
rcl
xchg
movs
popa
mov
cmps
and
xchg
jp
lods
aam
pop
(bad)
mov
loop
push
shl
mov
stos
mov
dec
mov
popa
pop
push
jmp
xchg
lods
push
call
mov
mov
aad
int3
xchg
adc
stc
jp
jge
lds
(bad)
pop
xchg
inc
push
or
or
mov
add
jg
fsubr
arpl
lock
loop
in
jge
pop
jl
xor
jbe
push
xchg
xor
mov
cld
jge
xchg
sub
pop
cmc
push
outs
add
sub
push
icebp
jmp
push
imul
loop
int3
daa
mov
outs
cmp
imul
cli
test
nop
pop
jae
imul
dec
pop
in
dec
jge
sar
cmc
xor
xlat
xor
js
movs
pop
in
aad
jo
dec
test
xchg
adc
es
xchg
mov
cmp
and
inc
add
cli
sub
movs
ds
pop
sub
lahf
in
outs
rcr
jge
mov
lods
jge
cmc
pop
add
js
jbe
daa
inc
movs
or
sub
ds
mov
(bad)
bswap
sbb
pop
sbb
movs
cmc
xchg
cmp
pusha
test
sbb
je
gs
push
movs
mov
mov
pop
cmps
jmp
mov
add
shl
and
fcomp
cmp
push
iret
sub
imul
rol
and
pushf
setle
pop
pop
int3
xchg
(bad)
mov
sbb
or
out
lahf
push
pop
mov
(bad)
out
push
sub
popf
xchg
inc
lds
jbe
lods
stos
bswap
dec
or
leave
ss
pusha
cmc
mov
pop
dec
or
cmp
adc
bound
jb
frstor
sbb
cli
popa
xor
sbb
xor
sub
adc
and
js
xchg
outs
push
outs
mov
and
sbb
cmps
xchg
and
ins
test
ror
xchg
addr16
in
and
ret
dec
dec
loopne
inc
(bad)
lods
jg
jbe
mov
lods
in
mov
jp
es
mov
dec
pop
add
(bad)
fcom
clc
leave
cmp
mov
push
(bad)
iret
fst
xor
adc
mov
scas
popa
xchg
test
fcmovnb
gs
and
fidivr
out
sbb
push
lods
xchg
jbe
into
adc
cld
dec
not
popa
out
(bad)
and
sub
lods
int
push
xor
and
cmp
iret
shr
and
rcl
sbb
lea
inc
inc
xor
dec
rcl
das
xor
fcom
fsubr
gs
xor
cli
push
or
test
xlat
mov
lods
les
or
xchg
bound
adc
and
sbb
mov
addr16
into
shl
or
push
inc
or
popf
not
outs
pop
out
push
xor
add
out
sub
das
test
mov
scas
pop
fsubr
ror
pop
rol
sub
mov
pop
lock
push
rol
sub
mov
in
pop
jl
imul
push
push
outs
jg
push
add
test
add
mov
cmp
repz
sub
out
sbb
ds
dec
add
test
test
mov
jo
cmp
lahf
adc
das
test
adc
idiv
test
sub
xchg
mov
push
loope
sar
leave
mov
mov
cmovs
int3
mov
inc
and
popf
daa
aam
jmp
ret
fidivr
inc
add
popa
mov
push
cwde
nop
fs
jge
inc
ds
mov
loop
neg
stos
cwde
pop
outs
(bad)
adc
(bad)
sub
or
jmp
inc
push
sar
or
(bad)
xor
xchg
mov
cld
jnp
push
ret
in
je
fsub
dec
mov
retf
rcl
sub
lock
mov
mov
jne
or
and
xor
xlat
cwde
scas
mov
jnp
scas
xor
enter
sub
ins
and
loopne
stos
mov
pop
jecxz
mov
ss
(bad)
sbb
mov
pop
jecxz
aas
pop
dec
loopne
ret
fwait
cmp
or
inc
aad
pop
pop
paddsb
push
cvtdq2ps
push
inc
js
psubq
xlat
adc
add
mov
sub
xchg
in
test
movs
inc
push
pop
retf
test
in
(bad)
sub
icebp
dec
push
mov
call
adc
ret
mov
push
enter
cli
movs
push
mov
mov
scas
mov
xchg
mov
lock
jl
cmc
push
hlt
jp
add
in
(bad)
out
aam
xor
hlt
xchg
xchg
popa
dec
pop
xor
xchg
test
push
ins
mov
stos
cs
mov
mov
aam
inc
addr16
or
adc
jbe
cmp
jmp
in
lods
mov
inc
leave
and
aaa
lea
repz
mov
adc
sub
call
sti
push
das
movs
test
jmp
inc
leave
dec
push
scas
jecxz
jp
gs
jecxz
cli
imul
retf
jnp
mov
adc
inc
push
call
in
adc
sub
(bad)
(bad)
xlat
retf
mov
push
jb
addr16
cmp
dec
jge
hlt
jp
jmp
fsubr
fstp
imul
push
push
pusha
jns
shr
and
ret
cmp
enter
in
dec
xchg
jl
leave
dec
retf
xchg
adc
sub
not
loop
xchg
mov
inc
repnz
xchg
push
ss
sbb
stos
xchg
adc
iret
inc
xchg
fcomp
mov
dec
stos
int
sbb
adc
call
or
sbb
mov
repz
test
(bad)
sbb
xchg
mov
aad
add
mov
sub
cwde
add
mov
mov
jns
jmp
push
pushf
aaa
es
xor
or
and
sub
cwde
nop
jp
or
into
mov
jo
xchg
aad
sbb
lds
cmc
jo
mov
nop
fstp
xchg
mov
pop
add
xchg
fisttp
cmc
xor
adc
test
call
data16
jmp
xor
push
bound
call
and
out
mov
or
or
mov
adc
inc
pop
dec
or
jmp
push
push
mov
daa
cmp
imul
pop
add
arpl
cmp
outs
jno
fdivr
(bad)
xchg
sbb
and
sbb
xchg
cld
mov
push
retf
jl
adc
sub
sti
mov
mov
sbb
sbb
out
xor
popf
push
push
fwait
imul
nop
imul
data16
mov
add
pop
hlt
jecxz
imul
mov
pusha
xchg
cmp
int
pop
dec
scas
(bad)
ror
loopne
aaa
sub
cmp
push
aam
xchg
mov
sar
dec
popa
jns
inc
mov
mov
adc
adc
ja
ret
mov
dec
push
(bad)
js
and
push
sbb
(bad)
pop
jnp
sbb
sub
and
fnsave
mov
or
pop
or
cli
fwait
xchg
lods
out
dec
add
push
sub
aad
pop
in
jmp
shr
inc
fwait
pop
int
neg
push
(bad)
aam
mov
dec
pop
pop
ror
dec
out
sti
dec
iret
sub
sub
cmps
adc
pop
(bad)
sub
xor
(bad)
aad
stos
mov
add
inc
popa
in
data16
push
(bad)
sar
xor
mov
leave
les
sbb
inc
out
mov
xchg
aaa
push
out
cmc
shr
jle
pushf
push
in
add
outs
loope
(bad)
lea
in
push
clc
jl
aad
outs
aas
cmp
pop
pop
mov
dec
push
ins
test
fist
mov
ret
jmp
fld
inc
or
shr
and
adc
push
mov
fst
lahf
test
call
outs
ins
add
push
xchg
fs
dec
pop
dec
xchg
sbb
ins
data16
mov
pop
rcr
push
xor
sar
mov
mov
pop
mov
sbb
xlat
mov
daa
push
jg
jae
enter
cwde
cwde
mov
das
lea
dec
test
cld
sub
push
or
xchg
or
xor
shl
mov
cmp
movs
cmp
imul
fs
les
js
popf
xor
ret
test
mov
out
jae
ficomp
rol
mov
xchg
aaa
imul
mov
lds
jnp
adc
mov
sub
mov
(bad)
mov
xchg
movs
ja
jmp
xor
aad
ss
pop
pop
mov
cwde
dec
movs
and
cmp
or
retf
or
into
xchg
sti
inc
add
inc
and
mov
shl
pop
call
jg
fwait
mov
sub
jnp
add
imul
jmp
ds
lea
or
imul
sahf
(bad)
sahf
(bad)
jmp
test
mov
repz
xchg
add
xor
push
imul
sbb
xor
ins
(bad)
jmp
popf
dec
loop
repnz
dec
loop
imul
fcomp
sub
adc
pushf
push
loope
cld
aam
push
ins
adc
cmps
neg
jnp
jp
sub
aas
jl
xchg
ror
mov
fidiv
cmp
sub
xor
or
xor
movs
movs
dec
pop
ss
and
cmps
push
pop
adc
pop
clc
jno
adc
jecxz
fidivr
shr
shr
ins
ins
test
push
push
mov
sub
shl
test
(bad)
pop
out
test
(bad)
mov
mov
adc
rcr
or
je
fbld
xor
mov
fcomp
and
rcl
mov
rcl
fs
fst
and
rol
add
das
sbb
fisub
sahf
dec
fadd
jns
and
int
sbb
and
lea
cmp
hlt
sbb
imul
cmc
std
mov
cs
sub
xor
xchg
sub
stos
jb
ins
adc
lea
cmp
pop
dec
pop
int
sahf
outs
xor
addr16
adc
in
inc
jae
jle
adc
and
adc
add
pop
push
pop
loope
jmp
mov
add
rcr
mov
and
icebp
and
call
xor
data16
mov
jnp
lods
or
and
loope
or
mov
jl
xchg
xchg
sub
in
addr16
cs
stc
iret
ja
xchg
sbb
test
jne
mov
or
push
cmp
fwait
or
and
pop
cwde
jbe
sbb
cmp
dec
aaa
leave
dec
jl
mov
adc
cwde
int3
jmp
mov
jge
xchg
imul
fild
ret
dec
fdiv
dec
xchg
cmp
stos
das
or
dec
repz
mov
jmp
aad
mov
mov
sub
and
sahf
pop
push
pop
jecxz
cmp
hlt
cmp
shr
mov
lock
mov
pop
dec
lods
dec
cmp
sbb
and
jecxz
dec
shr
das
int3
jmp
movs
sub
and
xchg
movs
xor
ja
stos
jbe
push
sbb
push
xor
not
and
cmp
pop
xchg
cmc
mov
adc
mov
cdq
ins
outs
adc
pop
pushf
and
push
cs
inc
jne
scas
in
cmp
xor
or
arpl
loop
call
arpl
dec
mov
add
ins
push
outs
pop
packuswb
xlat
mov
cmp
xchg
daa
mov
mov
push
das
lea
clc
in
fisubr
push
jge
shr
(bad)
mov
mov
adc
hlt
les
adc
int
imul
bound
adc
movs
push
xchg
xor
icebp
stos
inc
dec
jne
add
ja
dec
mov
xor
inc
cmp
sti
xor
sub
mov
ret
test
dec
mov
pop
out
inc
dec
jp
xchg
imul
cmp
push
push
jmp
icebp
cmp
in
inc
pusha
xlat
test
fisttp
mov
daa
jmp
or
mov
stos
push
jmp
cmp
ds
aas
inc
dec
ja
mov
lods
stc
and
mov
pop
jbe
sbb
jnp
mov
mov
and
xchg
dec
retf
aad
xchg
ficomp
ret
out
dec
cmps
cld
mov
adc
mov
sbb
push
jne
xchg
sub
jae
jae
and
out
and
add
aas
iret
lods
out
or
test
(bad)
xchg
push
enter
push
jb
and
sub
dec
movs
mov
scas
es
jl
mov
cmp
nop
(bad)
sti
mov
mov
xchg
sbb
data16
mov
push
push
mov
dec
aam
inc
or
iret
out
cld
ret
sub
in
xor
push
mov
retf
xchg
jmp
push
sbb
sub
sbb
add
or
push
js
push
je
rcr
aam
jbe
aam
popf
jp
sub
jbe
xchg
fild
and
stos
clc
ret
add
push
mov
ficomp
push
xchg
pop
pop
mov
cwde
inc
jo
es
test
je
inc
jne
sub
ds
ret
dec
aaa
mov
repz
push
sub
xchg
sub
or
addr16
fidiv
sbb
sbb
pop
or
and
cmp
cmp
or
mov
aas
or
cmp
adc
stc
sar
sbb
pop
fldcw
push
pop
lahf
inc
mov
sbb
xchg
scas
adc
mov
pop
test
sahf
cmp
jb
arpl
adc
jl
aam
jp
cmc
test
mov
mov
push
jmp
add
es
mov
les
add
ret
mov
dec
retf
sub
jge
js
mov
mov
push
mov
out
mov
push
xchg
call
dec
and
mov
push
mov
rcl
sub
ror
xor
xor
jbe
fsubr
mov
add
sbb
mov
xchg
xor
addr16
arpl
mov
xchg
or
cmp
dec
(bad)
call
adc
xchg
jg
jbe
inc
push
movs
call
in
inc
add
stos
add
adc
repnz
push
and
in
(bad)
dec
mov
push
lea
ds
sub
cmps
loope
inc
call
add
xchg
pop
ss
jne
imul
je
rcr
cmp
jg
out
push
pop
cmp
add
add
fmulp
out
fst
sbb
pop
call
stc
es
cmp
(bad)
push
pop
nop
shl
mov
es
mov
ins
sbb
das
stos
add
mov
jg
data16
xor
stc
test
in
adc
ret
or
imul
not
into
push
and
fnop
ret
push
aaa
push
(bad)
shl
in
cli
cs
gs
dec
mov
add
ds
mov
(bad)
ins
adc
aaa
addr16
adc
movs
(bad)
pop
test
xchg
cmp
xchg
lss
fnstenv
adc
sar
pop
not
mov
ret
cli
xchg
pop
into
sub
xchg
pop
jnp
inc
mov
pop
mov
mov
mov
hlt
xchg
or
mov
scas
cmp
fldenv
sub
mov
arpl
lods
sub
mov
mov
mov
aas
lods
outs
mov
mov
inc
push
and
arpl
fsubr
inc
scas
daa
dec
sbb
aam
fucom
shr
sbb
mov
mov
clc
call
add
jecxz
sub
pop
and
sbb
push
out
repnz
cli
mov
mov
jg
fstp
push
outs
mov
jb
adc
adc
retf
icebp
xor
xor
mov
fwait
je
pop
and
inc
mov
push
int3
mov
and
pop
and
push
(bad)
fcmovnu
stos
fnsave
loop
in
out
test
aas
retf
stos
sar
push
xor
std
neg
mov
pop
push
das
cmps
aam
sub
xchg
mov
fcomp
dec
add
or
lds
outs
jmp
pop
movs
mov
mov
ins
(bad)
cdq
or
mov
cmps
out
dec
push
add
push
add
cwde
retf
fcomp
mov
rol
inc
sub
les
inc
add
leave
adc
data16
cdq
pushf
or
xchg
xor
add
push
ja
and
sbb
ins
jns
xchg
(bad)
sbb
cmp
jmp
ds
and
and
data16
add
fisub
sbb
lahf
adc
mov
jns
fimul
mov
ins
dec
outs
movs
retf
pusha
pushf
sbb
(bad)
push
mov
shr
sbb
scas
adc
add
inc
pop
sbb
xchg
and
mov
add
fst
hlt
or
push
inc
out
pusha
ret
add
adc
push
jmp
fimul
ss
sar
icebp
in
cmp
ins
fwait
sti
add
cli
shl
push
repz
setge
fldenv
daa
xor
adc
aas
dec
xor
mov
sbb
mov
pusha
mov
mov
and
cs
dec
jbe
iret
in
pop
and
jbe
inc
fsubr
pop
mov
pop
ins
inc
push
sti
ret
icebp
movs
(bad)
in
(bad)
cld
pop
aaa
cmp
loope
xor
fistp
icebp
mov
clc
loop
call
pusha
mov
add
test
cmp
fs
push
pop
push
and
aaa
les
mov
add
ins
mov
jmp
fdivp
in
scas
xchg
pushf
dec
xchg
jbe
inc
add
fcmovnu
test
adc
cmp
ret
inc
pop
lock
jge
and
repnz
sbb
in
rcl
xchg
aam
js
sub
inc
jp
fs
cmp
mov
xchg
fsubr
inc
sbb
mov
ds
xor
retf
push
fwait
nop
mov
sbb
out
mov
pop
mov
and
inc
or
cmps
rcr
cs
fcom
loopne
add
cdq
add
aaa
and
movs
mov
add
mov
dec
pop
ins
mov
mov
pop
imul
mov
mov
push
(bad)
fdiv
neg
test
push
loope
mov
mov
stc
xchg
mov
adc
enter
repnz
iret
icebp
popw
pop
dec
not
ret
mov
mov
xor
mov
test
je
movs
inc
inc
push
or
dec
int
jns
add
mov
imul
pop
loope
sub
jge
test
cmp
sbb
dec
aas
stc
(bad)
jmp
sahf
pop
rol
mov
add
call
xor
repz
enter
cmps
or
jmp
shl
jbe
xchg
xchg
dec
and
pushf
rcl
inc
cs
sahf
mov
fild
mov
ror
xlat
mov
pop
pop
(bad)
hlt
loopne
loopne
rol
sbb
xor
mov
pusha
push
and
add
call
add
leave
push
imul
sub
mov
mov
(bad)
push
mov
fnstcw
leave
cmp
lock
retf
push
outs
pushf
rcr
fisubr
bound
outs
pushaw
pop
or
(bad)
int
pusha
retf
jmp
fstp
pop
adc
fistp
sub
movs
clc
jmp
cmp
call
push
xchg
pop
inc
mov
pop
cli
lock
push
jb
sbb
adc
test
mov
es
push
sub
inc
and
jnp
sub
pop
cmc
out
mov
jge
mov
dec
fwait
jo
cmp
leave
adc
das
jmp
mov
sub
ret
sub
mov
stos
mov
or
push
push
pop
in
jmp
xchg
fdiv
sbb
and
mov
jmp
test
xchg
push
dec
adc
fsubr
or
loopne
pop
inc
adc
xor
cmp
sbb
adc
pop
daa
and
push
dec
adc
fsubr
add
xor
mov
out
add
not
stc
stos
jg
adc
mov
movs
scas
xchg
popf
imul
jg
ins
iret
jl
pop
cli
(bad)
adc
ret
jg
mov
add
and
or
rep
jne
pop
mov
xlat
arpl
in
loop
fiadd
jle
fisub
aaa
in
iret
rcr
(bad)
(bad)
sub
xlat
add
fwait
inc
std
adc
stos
add
jle
pop
aam
pop
scas
cwde
retf
data16
fimul
(bad)
pusha
jg
int3
dec
stc
mov
jp
mov
push
mov
pop
sbb
or
fdiv
repnz
mov
ins
adc
pop
test
loopne
stos
mov
dec
push
xchg
mov
dec
popa
sti
leave
add
jno
pop
and
mov
adc
mov
popa
std
repz
(bad)
pop
mov
mov
rol
xchg
jge
mov
xchg
xchg
cs
jb
and
jno
sar
mov
adc
pusha
sbb
mov
mov
sub
sahf
pop
movs
push
stos
mov
or
outs
aad
les
outs
xchg
and
adc
lods
popf
inc
jg
stos
push
push
jmp
js
stos
mov
pushf
stc
call
scas
fistp
mov
pusha
sahf
enter
push
into
or
movs
fild
xor
sbb
mov
add
stos
in
and
sub
push
pop
nop
push
rol
in
(bad)
mov
push
sub
push
adc
aam
fstp
(bad)
sti
xchg
arpl
mov
in
out
xor
sar
nop
enter
sbb
adc
xchg
sub
xor
jb
cli
stc
cli
cmp
cmp
fbld
gs
ds
ror
ins
adc
in
iret
addr16
add
add
pop
xchg
push
xchg
(bad)
mov
les
cmps
imul
rcr
add
adc
loop
sub
(bad)
mov
std
xchg
test
mov
sbb
mov
xor
bnd
xor
stos
out
addr16
retf
mov
xchg
out
fstp
leave
mov
in
outs
inc
rcr
adc
pop
fild
jge
cmp
dec
xor
js
je
jmp
aas
jo
scas
not
jo
dec
je
popf
jne
lea
or
(bad)
add
mov
sub
sbb
inc
shl
fmul
push
in
loop
nop
(bad)
mov
mov
mov
(bad)
dec
pushf
mov
(bad)
and
jp
movs
inc
inc
imul
jecxz
pop
in
je
mov
push
add
inc
ret
inc
shl
inc
sbb
dec
mov
mov
sbb
aam
out
lahf
(bad)
scas
and
loope
xchg
jb
jo
jmp
cmp
xchg
mov
cmps
out
cmp
(bad)
fucompp
sti
lea
mov
xor
lea
inc
push
dec
dec
adc
jp
sbb
inc
int3
and
push
out
dec
mov
xor
sbb
sub
fnsave
pop
cmp
dec
mov
mov
pop
cmp
mov
gs
js
jecxz
mov
mov
mov
xor
mov
jle
retf
jno
loop
sbb
bound
lea
jp
scas
addr16
les
call
dec
and
jbe
adc
dec
jb
repz
pop
xlat
dec
cmp
sbb
xchg
inc
mov
stos
call
adc
xor
in
aad
xchg
stos
or
repnz
lock
imul
fisttp
cdq
adc
in
pushf
in
mov
retf
push
enter
ret
data16
fistp
inc
mov
into
(bad)
cdq
not
sbb
sti
xor
dec
fisub
rcl
cmp
outs
jp
adc
xor
repz
shl
inc
mov
push
or
add
xchg
pushf
(bad)
lods
pusha
cmp
neg
push
repz
mov
mov
pop
push
inc
nop
outs
mov
stos
xor
xor
sbb
enter
jb
loop
add
sub
lahf
dec
jp
test
inc
ret
add
stc
sub
fcmovb
test
cmp
dec
mov
mov
jle
mov
jl
into
out
out
jmp
mov
mov
xor
stos
adc
in
pop
xchg
sub
mov
mov
mov
pop
push
fwait
add
adc
add
add
push
aas
fstp
pop
cwde
pusha
adc
lahf
lods
xchg
aas
jo
fsubp
pop
ret
xor
jns
in
fs
rcr
out
fwait
in
lods
scas
mov
sub
(bad)
out
pop
xchg
jecxz
jl
add
stc
pushf
repnz
in
test
sub
mov
fcom
loopne
jns
or
adc
nop
mov
pop
and
push
(bad)
repz
and
mov
test
dec
push
xchg
push
daa
xchg
mov
adc
icebp
pusha
jg
sub
fcomp
jp
push
(bad)
pop
out
adc
mov
add
enter
add
xor
mov
sbb
movs
push
or
push
sbb
mov
push
movs
loopne
xor
hlt
or
cmp
xchg
xchg
daa
cmp
xchg
xor
outs
out
scas
mov
and
outs
pusha
scas
test
ret
xchg
mov
mov
mov
or
or
xchg
adc
jp
xor
mov
fcomp
(bad)
xor
aad
fstp
mov
fld
mov
cli
cmp
repz
push
daa
xor
jl
push
adc
ds
mov
mov
mov
sbb
in
fild
add
fcom
jle
sbb
iret
jmp
outs
mov
mov
jnp
jb
shl
pop
sti
mov
jge
cmp
or
push
pop
int3
xlat
out
xor
adc
xor
jecxz
test
xor
add
retf
scas
js
cmp
jecxz
popf
jmp
pushf
push
sub
test
ds
adc
(bad)
in
inc
jae
loope
into
daa
popa
nop
and
pop
stos
mov
stos
xchg
shl
dec
enter
(bad)
shl
mov
xor
xchg
not
adc
ds
jmp
push
cmps
cmp
iret
fcom
clc
(bad)
mov
inc
sub
movs
dec
adc
xor
into
das
sbb
sbb
lods
xchg
aad
push
push
add
cdq
sbb
outs
int3
retf
sti
aas
aaa
movs
or
aad
inc
sub
(bad)
(bad)
pop
out
leave
xchg
test
inc
fdiv
je
or
arpl
daa
mov
shl
cmps
xor
dec
mul
add
je
xor
fdivrp
retf
push
cvtdq2ps
pop
inc
out
movs
out
jecxz
dec
leave
mov
inc
cmc
rcr
repnz
sbb
adc
aas
xor
ret
outs
pop
cmps
mov
and
pusha
pop
mov
rcl
dec
stos
cmp
leave
fdiv
xor
sub
retf
xor
sub
cld
cmp
adc
jne
inc
cmp
call
sub
outs
xchg
jmp
cmp
mov
sbb
lods
sbb
sbb
sbb
xor
sub
ror
in
mov
dec
dec
clc
cli
pop
pop
sar
aam
pop
add
es
sbb
push
(bad)
mov
mov
leave
jne
xchg
pop
cmp
pushf
lahf
and
lods
call
stos
sub
pop
xchg
stos
push
adc
mov
sub
mov
xor
xor
add
sahf
push
movs
pop
cld
int3
cs
adc
push
rcr
sbb
cmp
mov
jno
adc
push
or
push
jo
fld
lods
cmp
stos
test
arpl
lahf
rcr
dec
ret
add
bound
test
ds
(bad)
mov
xchg
sbb
jbe
jp
addr16
or
repnz
jno
imul
mov
loope
aas
(bad)
mov
add
fnstenv
or
xchg
je
lea
push
and
into
cld
sahf
scas
pop
dec
(bad)
mov
call
lods
enter
es
cmps
inc
in
dec
xor
xor
push
test
dec
sbb
push
inc
bound
cmp
mov
(bad)
nop
sar
add
cmps
dec
in
int
data16
ins
pop
cmp
jp
jne
fiadd
and
xchg
dec
rol
jmp
inc
nop
mov
sar
push
cmps
pop
imul
and
gs
call
mov
inc
push
or
jne
loop
add
inc
add
cmc
sbb
jge
or
jne
jns
mov
adc
fcmovb
pop
sar
jge
jle
es
dec
xor
sbb
in
imul
dec
(bad)
fwait
ss
inc
xor
mov
test
xchg
std
je
and
fisttp
fdiv
mov
cld
popa
jle
(bad)
popf
rcl
cmps
inc
outs
sahf
imul
and
push
cld
stos
inc
mov
mov
xchg
rcl
ds
or
pop
push
adc
call
fst
in
cmps
push
jns
mov
into
loop
ds
push
and
arpl
pop
pushf
aad
jbe
mov
pop
pop
imul
dec
xchg
in
mov
push
and
add
enter
jmp
and
jecxz
lods
aam
dec
inc
ins
xchg
adc
mov
out
xor
(bad)
(bad)
pop
sbb
ffreep
iret
call
sbb
sub
mov
jecxz
push
leave
ja
xor
outs
fwait
pop
je
retf
add
div
into
or
mov
push
xor
lods
(bad)
push
inc
add
pop
pop
jp
les
out
cwde
test
daa
aam
fcom
inc
test
lahf
sahf
jnp
cld
ror
in
pusha
dec
jle
(bad)
daa
add
pop
adc
and
sub
sub
mov
hlt
xlat
adc
and
das
shl
cmc
jmp
xchg
out
(bad)
test
pop
pop
cmp
sub
test
enter
pop
rol
out
mov
and
ror
pop
stc
dec
aam
pop
jle
jne
jl
das
js
or
xchg
pushf
out
xchg
xor
or
jmp
nop
push
js
pop
or
dec
push
ins
mov
add
and
sbb
cwde
fpatan
inc
shl
repnz
or
(bad)
cld
xor
lods
cmp
ds
scas
scas
pop
cmps
push
idiv
shr
or
call
repz
sbb
mov
pop
in
add
int3
push
push
push
iret
push
cmps
(bad)
(bad)
mov
outs
mov
mov
mov
or
cmps
sub
xchg
xchg
pop
jmp
clc
or
mov
and
sub
push
mov
mov
movs
jl
or
xchg
mov
test
cli
pop
xchg
mov
adc
mov
xchg
inc
aaa
ss
sub
aaa
ss
xchg
add
or
clc
pop
sbb
mov
add
xchg
or
xchg
pushf
cmps
cmp
xchg
movs
popa
xor
dec
lock
pop
mov
push
stos
jmp
ret
sbb
mov
xchg
pop
outs
fs
(bad)
js
jb
test
cli
lahf
fidivr
or
enter
mov
jg
or
jg
push
aam
adc
lods
daa
xchg
sysenter
cli
push
or
in
mov
dec
fstp
mov
cmp
repnz
addr16
repnz
mov
rcr
mov
test
les
out
ds
mov
test
adc
aaa
and
jge
xor
pop
xor
push
std
mov
mov
sbb
cmp
sbb
out
push
add
icebp
hlt
push
sub
or
jmp
out
loop
and
loopne
mov
repnz
mov
sub
mov
pop
xchg
leave
fs
pop
or
jb
repz
loop
mov
shl
or
mov
(bad)
pop
fwait
push
rcl
xchg
sbb
dec
or
and
push
push
hlt
shl
shr
and
ins
pop
int3
adc
ds
mov
and
lock
call
xor
std
add
call
inc
aad
push
dec
loope
add
test
jl
xchg
cmp
and
sub
mov
sbb
fcmovne
loope
ds
adc
aas
call
jns
nop
std
sub
dec
ins
cdq
cdq
(bad)
dec
outs
jmp
pop
loopne
inc
clc
retf
cwde
retf
mov
fldenv
add
adc
xchg
mov
mov
mov
sub
in
enter
jnp
popf
pusha
lea
or
xchg
xchg
dec
jb
add
sbb
popf
aad
cmp
into
xor
cmp
les
ret
sbb
mov
mov
inc
xchg
sub
jg
jle
jae
in
loopne
push
repz
stos
cwde
jns
push
and
push
add
add
das
in
fmul
pusha
mov
xchg
xchg
dec
xor
cmp
mov
shr
adc
loope
sbb
dec
imul
pop
lock
rcr
xor
lock
je
ins
imul
fs
bound
inc
test
dec
mov
jnp
sub
sub
xchg
test
xor
adc
jmp
std
add
or
sub
mov
sub
adc
lods
mov
inc
mov
lods
int
push
xchg
adc
fdivr
outs
rol
push
inc
pushf
or
push
not
repnz
cmp
jnp
pop
pop
pop
out
in
inc
(bad)
cdq
jg
scas
not
and
cmp
fstp
ds
in
push
test
add
(bad)
sahf
pop
scas
jae
hlt
repnz
mov
pinsrw
or
cmp
loop
jp
sub
iret
adc
push
fcom
out
push
arpl
aad
xor
aad
mov
jae
int
ret
sub
sub
or
jmp
fdivr
mov
pop
pop
lods
out
fisubr
es
lahf
cmp
pusha
fmul
mov
mov
std
mov
sub
pop
adc
cmps
das
cmp
std
adc
test
jge
lods
xor
popa
nop
call
icebp
out
mov
jnp
stc
lds
lahf
loope
stos
lock
fild
mov
call
pop
push
repnz
add
inc
xchg
(bad)
ds
mov
dec
sub
popf
(bad)
xchg
push
data16
enter
ds
lock
retf
movs
daa
mov
(bad)
out
out
adc
loopne
mov
pop
xchg
outs
ret
pop
push
push
jno
or
ins
adc
xor
pop
jb
push
retf
loop
imul
dec
inc
loope
push
xchg
add
xor
loopne
sub
cmp
mov
adc
popf
arpl
leave
pop
imul
jae
aam
shl
mov
inc
fnstcw
repz
cli
and
mov
mov
push
iret
std
out
xchg
xchg
imul
jl
adc
pop
pop
clc
adc
and
pop
cmp
push
js
jl
pop
sub
mov
stos
rcr
add
int
xor
dec
les
xor
retf
js
cdq
and
sti
out
addr16
sbb
or
inc
gs
lock
jg
cmp
(bad)
ret
mov
jnp
fmul
mov
call
mov
inc
mov
mov
std
int
or
imul
call
pop
cmps
push
jns
and
ret
fcom
std
jns
jns
cmp
sbb
pop
test
xchg
scas
sub
aaa
jnp
cmps
jecxz
rol
js
mov
iret
jp
sti
daa
ins
out
mov
sub
aam
mov
into
movs
mov
adc
(bad)
lock
and
add
cmps
dec
xchg
in
jg
lahf
sbb
xchg
mov
dec
push
les
lds
pop
lea
ins
xchg
fstp
push
push
mov
mov
(bad)
jmp
jo
sti
pop
fst
imul
cmp
in
popf
imul
fld
push
shl
ret
jmp
or
dec
xor
jle
mov
fs
arpl
sub
lahf
shr
cwde
aad
add
repnz
mov
sar
add
(bad)
mov
ret
jle
das
push
xlat
test
and
push
cmp
daa
adc
fstp
fs
mov
movs
cmps
rol
scas
mov
aam
or
test
daa
xchg
cmps
jge
jg
fsubr
and
lahf
bound
test
xor
mov
jmp
xor
cs
cmp
(bad)
xlat
mov
pop
iret
and
jecxz
out
enter
shr
nop
inc
mov
inc
push
fnstsw
jo
ins
imul
add
adc
repz
inc
jns
ds
cmps
lea
or
lock
dec
jp
mov
pusha
aaa
cmp
sbb
(bad)
jmp
mov
mov
faddp
xor
repz
pop
(bad)
pop
shr
add
jg
mov
mov
add
sbb
loopne
cli
je
xor
pop
push
out
(bad)
enter
movs
sbb
loope
mov
push
scas
or
cwde
add
es
retf
loopne
arpl
out
call
or
inc
shl
mov
sbb
pop
test
jnp
push
fs
push
test
outs
inc
lea
gs
xchg
jp
in
sub
sbb
stos
ss
mov
(bad)
jge
cmp
add
fisub
mov
outs
gs
js
ds
ficomp
cs
sti
mov
icebp
in
lea
loop
cmp
xchg
popf
sbb
mov
jle
shl
push
jbe
fdiv
adc
nop
push
outs
jb
cld
inc
rcr
retf
leave
in
sub
jno
repz
das
inc
test
out
mov
xchg
sbb
(bad)
and
repnz
test
iret
test
mov
pusha
mov
cmps
add
jo
pop
mov
push
mov
ss
sbb
sub
mov
jo
or
and
or
pop
mov
mov
pop
pop
and
xlat
cmps
sbb
xor
retf
xlat
mov
(bad)
inc
(bad)
movs
dec
jbe
xchg
xor
sbb
clc
mov
arpl
and
jmp
pop
cmps
pop
int3
(bad)
loopne
or
shl
mov
inc
and
not
xchg
mov
jg
jo
jb
dec
ds
push
clc
cs
sahf
dec
fbld
int3
mov
sbb
inc
lahf
push
or
mov
xchg
pop
test
sar
xlat
and
mov
add
popa
imul
inc
mov
sub
daa
add
clc
cmps
shl
push
outs
(bad)
rol
sbb
mov
mov
mov
cdq
std
xor
mov
into
es
and
jbe
btr
out
mov
popf
jb
fld
dec
fld
lock
stos
repnz
mov
sbb
outs
or
or
inc
mov
mov
dec
hlt
(bad)
scas
push
adc
fcmove
sub
scas
add
and
out
pop
push
pop
test
js
inc
enter
cwde
push
fwait
or
je
pushf
les
stos
inc
pop
sub
addr16
stc
sub
add
fnop
pushf
xor
push
xchg
cld
cmp
popf
imul
bound
arpl
mov
pop
std
dec
jmp
dec
xchg
xor
movs
sub
scas
ficom
inc
clc
pop
repz
dec
outs
mov
xor
xchg
xor
jb
gs
jg
or
add
xchg
scas
cmps
ss
add
loope
xchg
ss
jmp
fsubr
inc
daa
(bad)
fs
test
das
outs
gs
dec
and
cdq
push
rcr
psraw
mov
loop
(bad)
inc
iret
mov
adc
xchg
nop
pop
popa
pop
sub
in
push
jb
adc
arpl
jae
ret
sub
lds
cmp
jmp
sahf
add
fsubr
out
out
inc
cmps
test
jecxz
out
inc
cmp
xchg
push
std
out
adc
push
loop
cmps
(bad)
adc
adc
mov
repz
(bad)
and
jne
jge
and
loop
pop
jmp
aam
(bad)
(bad)
add
or
mov
add
icebp
and
jne
or
xlat
(bad)
aam
add
jnp
icebp
dec
mov
mov
out
(bad)
int
xchg
mov
sub
mov
pop
in
rcr
xor
inc
pop
cmp
push
add
fcom
sbb
out
add
push
in
js
lds
sub
aam
jg
dec
(bad)
sbb
cmps
outs
inc
add
cmps
fidiv
add
arpl
fsub
xchg
pop
xlat
cmp
sub
dec
mov
test
sub
adc
jmp
mov
dec
aad
jns
jp
push
pop
cs
clc
xchg
adc
test
fnstsw
xchg
add
mov
call
and
and
pop
arpl
and
test
fild
mov
pop
dec
lods
mov
(bad)
pushf
jge
(bad)
mov
arpl
adc
pop
not
loopne
jle
retf
push
sti
fdivp
mov
in
addr16
push
cmc
hlt
sub
fdivr
cmp
inc
mov
loop
mov
pop
outs
xchg
pop
sub
inc
inc
or
mov
xlat
jle
sbb
inc
dec
imul
popa
and
ror
xchg
mov
push
fdiv
jbe
inc
inc
pusha
jno
or
rcl
mov
dec
cmps
mov
pop
pop
or
paddw
add
out
jb
in
dec
scas
cmp
popa
mov
push
movs
lahf
cmp
mov
xchg
push
jge
rcr
mov
nop
in
aam
call
cmp
repnz
callw
rcl
xchg
jg
imul
out
push
cli
retf
add
fnsave
push
mov
cmps
das
xor
cwde
mov
imul
pop
sahf
xchg
xor
sbb
jmp
bound
xchg
ret
dec
push
test
call
cmp
imul
mov
pop
sbb
test
std
jmp
jmp
xchg
movs
inc
ret
int
cmp
xor
pop
push
test
jo
icebp
popa
test
int
cmp
je
(bad)
mov
jmp
pop
jno
mov
rol
inc
frstor
mov
jae
jns
or
mov
shl
shl
scas
sbb
icebp
cwde
sub
push
cli
jbe
aad
or
cmc
xchg
xchg
xchg
in
push
in
out
cmp
jg
jp
leave
cmc
cmp
enter
or
div
in
push
iret
(bad)
gs
cwde
nop
cmp
outs
dec
mov
repz
imul
inc
adc
pop
inc
idiv
mov
or
add
or
sub
imul
ret
add
jo
dec
dec
pop
add
sub
sub
push
cmp
sub
add
sahf
jle
lahf
shr
leave
mov
sbb
mov
outs
adc
fs
outs
in
mov
mov
push
cmp
aam
inc
add
sbb
iret
inc
leave
jl
inc
in
(bad)
mov
push
dec
jno
jns
int
or
mov
fcom
sbb
mov
mov
inc
sbb
add
mov
adc
test
cmc
ror
lds
cmp
xor
(bad)
add
int3
xor
mul
daa
and
lea
add
rol
test
je
sbb
sbb
ret
adc
pop
cld
cmp
sbb
lea
cmp
add
pop
daa
sub
rcl
inc
xlat
out
sub
mov
and
cs
push
cmp
jae
jno
leave
dec
dec
rol
inc
cmps
ja
or
popa
xor
loopne
test
cmc
pop
loop
inc
outs
in
push
imul
scas
ins
sar
mov
sbb
rol
in
pusha
inc
hlt
into
adc
adc
push
cmc
arpl
or
shl
ja
jmp
arpl
ja
out
xchg
les
push
mov
pusha
icebp
inc
jecxz
out
das
inc
jns
ins
xor
jecxz
xor
cmps
pop
dec
in
inc
mov
add
scas
xor
sbb
push
hlt
xchg
in
cmp
xlat
retf
gs
bound
dec
call
imul
shl
movs
adc
pop
xor
scas
fbstp
(bad)
xchg
lods
lock
and
and
sbb
sbb
mov
push
sbb
mov
scas
pop
lahf
inc
mov
scas
fidivr
push
pop
add
xor
call
nop
mov
fdivr
or
lds
inc
push
mov
mov
dec
xchg
cmps
sub
enter
fld
dec
idiv
push
sub
(bad)
cli
xor
out
lahf
out
cmps
pop
stos
(bad)
dec
mov
inc
fst
push
and
adc
ja
lock
ror
(bad)
or
mov
jg
xor
rcl
std
xor
out
adc
jbe
sbb
jne
xor
pusha
in
cmp
mov
aaa
adc
ret
cwde
jns
and
shl
mov
leave
call
enter
es
jnp
xchg
imul
pop
in
repz
fiadd
jmp
aam
cmps
push
mov
ins
je
loop
xchg
push
push
mov
fcomp
mov
or
sub
sti
dec
mov
fdivr
pop
sbb
fmul
fstp
jp
cmp
repz
xchg
push
inc
(bad)
sahf
xlat
cwde
cmp
sbb
mov
data16
and
shr
xlat
push
in
aas
std
sub
cmp
gs
push
dec
sub
mov
(bad)
adc
movs
or
cmp
mov
bound
mov
imul
retf
aad
sub
(bad)
int3
movs
popa
sar
test
hlt
fld
xchg
(bad)
test
sahf
cwde
and
sub
push
imul
addr16
fs
data16
dec
lea
test
out
adc
(bad)
mov
sub
pop
pop
(bad)
jmp
cmps
push
movs
cmp
sub
xchg
fiadd
add
fld
jg
aas
mov
mul
mov
cdq
cmps
call
js
adc
das
and
fimul
add
gs
test
jno
(bad)
popf
retf
add
adc
cmp
ins
inc
mov
sahf
and
pusha
popf
mov
push
add
test
push
sub
push
cdq
inc
lock
sub
jo
aas
lods
xchg
push
jo
ins
sub
int3
add
mov
(bad)
push
sub
gs
push
xlat
adc
aas
pop
movs
adc
and
inc
test
shl
test
out
fsubr
arpl
add
push
jbe
addr16
or
pop
ds
les
pop
lods
push
in
push
cmps
shr
dec
push
sbb
pushf
hlt
add
dec
cmp
sbb
es
sbb
and
push
addr16
push
add
dec
lods
movs
mov
pop
xor
rcl
out
add
outs
fadd
outs
loop
pop
xchg
cwde
fadd
jle
movs
cmps
ret
das
rcr
addr16
jecxz
in
jo
aas
xchg
dec
push
leave
call
dec
mov
ret
pop
cli
pop
push
jge
sub
xlat
inc
pop
and
jl
pop
sbb
enter
sti
mov
or
mov
repz
pop
mov
lea
stos
(bad)
mov
outs
inc
inc
jnp
cmp
inc
adc
mov
cli
movs
scas
cmps
icebp
cmc
icebp
push
add
inc
dec
(bad)
mov
test
mov
mov
jp
or
xchg
das
mov
xchg
inc
add
sub
in
and
cmp
pop
aas
mov
cdq
test
fistp
push
popa
inc
sbb
fisttp
inc
arpl
jp
ret
mov
push
xor
hlt
mov
ss
fnstsw
or
loopne
aam
dec
pop
cmp
cmp
and
push
sub
test
dec
pusha
push
ficom
jb
int3
aam
cmp
or
jg
mov
sbb
and
push
sub
sub
nop
retf
sbb
pop
sbb
mov
add
ret
cwde
ror
in
mov
inc
dec
in
mov
pop
sbb
or
test
dec
pop
mov
(bad)
stc
in
xor
sbb
push
sbb
(bad)
out
add
ins
imul
mov
daa
xor
xchg
pop
je
aam
adc
or
scas
xor
mov
sbb
adc
pop
dec
adc
xor
or
dec
push
fistp
push
mov
adc
stc
bound
cli
stos
stc
mov
das
cwde
adc
sbb
std
lahf
push
jp
repz
(bad)
in
and
mov
inc
stc
jmp
daa
adc
and
lds
pop
sahf
out
add
jecxz
mov
jp
ret
and
imul
ins
aam
test
add
sbb
movhps
xchg
in
cmp
cwde
ds
lds
push
push
mov
aam
shl
mov
inc
in
dec
aam
into
mov
mov
repnz
mov
pop
xchg
add
xchg
mov
les
jo
mov
in
ret
or
sub
sbb
fcomp
jp
aad
lea
dec
lea
test
and
sbb
jno
jp
enter
sbb
xor
mov
or
push
pop
push
xchg
out
inc
xor
sub
mov
(bad)
gs
xor
fcom
outs
(bad)
jp
leave
imul
sbb
mov
je
out
int3
shr
fidivr
xchg
dec
vcvtsd2si
cmp
daa
mov
dec
sub
dec
mov
lahf
(bad)
lock
inc
jecxz
test
test
pushf
dec
cmp
in
xor
mov
pop
aam
aaa
aam
inc
in
loopne
iret
fs
fist
xchg
push
inc
fst
push
jecxz
jmp
ja
hlt
mov
mov
cmps
adc
mov
cld
(bad)
dec
pop
xchg
outs
out
pop
outs
adc
push
popf
dec
jno
push
cmp
aad
shl
inc
push
bound
inc
jmp
cmp
(bad)
push
test
cmp
shl
test
pop
mov
addr16
mov
call
sub
shl
mov
call
fistp
in
sti
das
js
lods
stc
adc
mov
cmp
mov
popa
push
packuswb
sbb
cld
and
in
mov
lea
retf
sub
popf
xchg
(bad)
stc
dec
pushf
cmp
push
add
leave
imul
fistp
dec
and
fnstenv
push
mov
jne
cmp
ret
push
cmp
in
push
ffreep
cld
xchg
xchg
cs
sub
adc
out
xchg
xchg
pop
mov
xor
push
ret
dec
sbb
jl
(bad)
push
jne
jne
xor
sub
mov
mul
push
kmovb
cwde
push
ds
push
pop
call
clc
clc
mov
arpl
dec
not
xor
nop
test
fs
movs
mov
(bad)
xor
sub
dec
push
jmp
mov
pop
sub
push
cmc
dec
pop
pop
mov
mov
(bad)
aas
dec
lock
fisttp
xor
pop
enter
sub
shr
mov
(bad)
in
cs
sahf
dec
scas
pop
xchg
inc
shl
adc
lea
mov
ja
xor
xor
xchg
sub
ss
(bad)
jp
xchg
xchg
movs
pop
cdq
or
repnz
dec
xor
jl
mov
sub
test
enter
and
cmps
inc
add
jge
mov
sub
jmp
dec
sbb
mov
xchg
jmp
aas
repz
push
mov
lock
and
loop
popf
lea
out
les
add
cdq
repz
out
out
xchg
lock
xor
aad
inc
xor
push
push
dec
inc
jmp
jl
push
std
push
stc
fadd
in
sbb
jns
cmp
or
(bad)
ins
sub
scas
ja
pusha
pop
into
popf
sub
movs
adc
jbe
add
ja
ins
mov
xchg
inc
mov
scas
pop
dec
out
add
mov
jo
dec
daa
adc
ret
push
jmp
int
fist
push
sbb
(bad)
rcl
sbb
jecxz
out
mov
inc
out
sbb
cmp
scas
pop
daa
arpl
repnz
pop
sbb
cmps
rcr
mov
xchg
push
dec
cmp
adc
add
sub
ret
ds
addr16
aam
out
repz
inc
shl
sub
scas
xchg
mov
div
out
xchg
mov
cmp
(bad)
push
mov
inc
mov
mov
mov
(bad)
pop
(bad)
adc
les
imul
dec
cmp
cli
cs
pop
sbb
or
sub
aaa
cmp
pop
jno
aaa
sub
mov
cli
mov
jns
lock
pop
daa
aad
jno
ret
adc
sub
mov
mov
adc
rcl
loope
pop
mov
lahf
lock
mov
add
push
inc
fild
jns
inc
inc
rol
or
popa
pop
aam
cdq
hlt
dec
inc
aad
dec
add
jl
in
out
popf
mov
imul
push
pop
adc
xor
out
mul
add
iret
in
add
cmps
jmp
jno
sub
fist
aad
ss
pop
pop
inc
or
jle
pop
aaa
xchg
data16
mov
push
push
mov
mov
or
and
fwait
or
jg
sbb
push
sbb
lods
cmp
inc
(bad)
cwde
push
pop
jl
fstp
pushf
sub
fs
xchg
loopne
loop
scas
pop
sbb
sti
test
icebp
test
adc
clc
and
xchg
enter
mov
pop
mov
pop
popf
mov
ss
push
inc
movs
movs
push
inc
add
mov
stos
and
add
sub
jnp
add
ins
and
mov
shl
ss
cli
push
test
test
push
aaa
inc
cli
dec
shr
xchg
sub
pop
imul
mov
das
loop
sub
popf
mov
cld
cmp
jo
and
dec
xor
popa
cld
dec
jecxz
mov
mov
push
sub
lahf
ds
pop
push
push
and
ds
mov
pop
fdivr
inc
jecxz
jge
(bad)
jnp
imul
ins
ror
or
bound
fimul
push
fdiv
push
cmp
pop
mov
(bad)
nop
test
sbb
iret
shr
add
les
test
adc
dec
(bad)
adc
popa
xchg
inc
sub
idiv
adc
or
aad
dec
inc
mov
ds
scas
das
mov
xchg
fsubp
movs
dec
rcl
and
sbb
push
call
jne
test
dec
out
xchg
pop
xchg
jle
or
xor
sbb
jno
pop
clc
and
div
loopne
(bad)
jmp
(bad)
into
addr16
mov
mov
cmc
push
cmp
scas
mov
mov
cmps
sbb
lock
mov
or
sub
jae
lods
fs
or
pop
inc
pop
or
or
sti
cmp
cmp
cmp
mov
sub
cmp
neg
pop
mov
sahf
mov
push
adc
lea
mov
or
mov
push
jp
icebp
pop
inc
mov
inc
test
and
mov
stos
mov
sub
popa
xchg
out
mov
call
sub
jg
xlat
repnz
xchg
repnz
or
sbb
scas
(bad)
ja
mov
xor
xchg
sub
sahf
add
aad
mov
dec
je
pop
inc
mov
and
inc
nop
mov
fistp
jg
ja
test
mov
add
hlt
pop
ss
sbb
mov
pop
js
aad
jge
stos
add
fnstsw
outs
dec
push
cmp
lahf
pop
inc
lods
fnstsw
xor
rcl
jmp
pop
xlat
lods
mov
mov
push
pop
in
sub
push
xor
cmps
sahf
stos
inc
or
in
dec
lods
fist
inc
(bad)
in
sub
sahf
shr
sub
add
or
lock
lods
fsub
or
retf
mov
pop
add
xor
dec
in
and
pcmpgtd
push
ins
cmp
shr
cmp
xchg
cmp
popa
mov
leave
mov
or
jl
lock
aas
ss
inc
push
jne
jo
jge
jg
pop
mov
call
jg
popa
jmp
cmp
gs
dec
mov
out
mov
nop
cwde
icebp
cwde
xchg
sahf
push
imul
xor
dec
vmaxsd
(bad)
adc
xchg
ret
xor
cmp
je
(bad)
mov
mov
into
xor
cdq
aaa
pop
jmp
xor
push
adc
out
push
stos
adc
mov
mov
pop
das
das
dec
or
rol
stc
shl
adc
mov
ret
imul
pop
mov
shl
mov
push
dec
neg
and
ja
mov
push
loopne
or
mov
pushf
jecxz
dec
xlat
fwait
and
in
ret
aas
xor
cwde
inc
fisttp
dec
push
sbb
lds
sub
push
jp
ret
cmp
pop
pop
lea
mov
push
mov
dec
fdivrp
dec
leave
fmul
repz
cmps
sub
xor
pop
lea
imul
pop
mov
pop
xor
inc
fwait
jne
iret
out
ins
dec
imul
je
xor
mov
popf
adc
mov
enter
or
jae
in
es
fs
and
or
cli
(bad)
shl
out
movs
adc
push
or
in
mov
data16
cmps
popf
push
out
into
imul
cmp
aam
mov
in
pop
xor
xor
push
mov
(bad)
mov
add
jg
addr16
aad
mov
and
repnz
std
dec
sub
cmp
cs
aas
inc
std
mov
or
add
imul
or
outs
out
sbb
sbb
cld
stos
push
mov
sub
add
nop
into
jnp
dec
push
xchg
mov
mov
bound
add
daa
lock
adc
jmp
aam
mov
and
sub
repnz
mov
cmc
inc
push
popa
aas
jmp
call
mov
mov
into
adc
jg
in
xchg
rcl
into
je
popa
dec
fcomp
inc
int
ret
nop
xchg
pop
mov
xchg
xor
leave
cmp
call
test
cmp
movs
inc
pop
lahf
xor
dec
push
push
pop
sub
inc
push
pop
inc
daa
pop
ins
dec
push
arpl
mov
es
sub
add
inc
inc
(bad)
lods
sbb
pop
lods
rol
loopne
dec
stos
lds
repnz
or
jno
(bad)
fxtract
cmp
outs
cli
nop
les
out
les
cmp
clc
adc
les
jle
(bad)
inc
es
movs
lahf
jbe
push
in
sub
jmp
xor
in
push
ja
inc
shl
and
movs
lahf
mul
inc
push
lods
shl
sbb
shl
test
adc
test
data16
in
mov
sar
cmp
cmp
xor
push
add
clc
mov
clc
cbw
jmp
rcr
ror
movs
test
fs
jg
cmp
add
cmp
ss
add
mov
lds
adc
push
arpl
jp
push
iret
sahf
push
ret
retf
nop
ret
ret
mov
imul
pop
mov
icebp
adc
and
push
fucom
and
add
ins
pop
daa
mov
cmp
mov
ss
dec
test
mov
adc
add
mov
mov
adc
cmps
out
push
jae
out
repz
scas
les
and
in
dec
not
dec
adc
pusha
dec
xchg
jmp
cld
js
not
push
mov
xor
outs
jbe
xchg
in
fnsave
or
mov
lock
pop
and
(bad)
dec
jecxz
test
cmc
xchg
aad
mov
xlat
push
push
and
out
jl
iret
push
les
xchg
or
bound
loopne
ins
and
and
ror
xchg
dec
ja
add
(bad)
jae
mov
sub
adc
jno
jne
add
(bad)
xlat
lods
data16
int
aad
mov
dec
popf
ror
gs
mov
add
addr16
in
jno
imul
xor
fs
movs
(bad)
cmp
cwde
pop
add
pop
movs
jmp
and
les
test
push
xchg
outs
sub
xchg
fnstcw
xchg
(bad)
lods
pop
sub
push
pop
xlat
bound
pop
mov
cmp
cmps
xchg
pop
fsub
scas
xchg
popa
xchg
or
stc
cs
sub
fmulp
xor
popw
pop
shl
push
fdivr
or
rcl
out
mov
pop
xchg
jmp
mov
sub
push
push
xlat
fidivr
stc
cmp
cwde
inc
cmp
cs
mov
leave
retf
sahf
test
or
(bad)
in
ins
sub
cmp
push
sub
xchg
std
push
ja
sbb
je
movs
cmp
stc
(bad)
jg
dec
sub
gs
inc
adc
repz
xchg
(bad)
mov
loop
outs
ins
rol
xchg
cdq
nop
aad
dec
aas
mov
mov
mov
hlt
inc
cld
data16
addr16
adc
cmps
stc
sti
loope
int3
mov
cmp
in
jns
js
add
out
sub
clc
es
outs
add
outs
push
add
or
lods
fwait
cmp
leave
cmp
mul
lods
sahf
pop
loope
mov
jle
mov
test
out
cmc
jmp
push
pop
add
mov
and
xchg
pop
inc
and
mov
cmp
lea
imul
mov
sbb
pop
adc
nop
(bad)
jmp
pop
xchg
xchg
dec
push
aad
(bad)
mov
fdivr
push
ins
mov
cmp
xor
cmp
test
push
push
pop
and
xchg
mov
push
in
adc
sbb
not
imul
or
or
mov
addr16
retf
cli
and
pushf
stos
shl
fdivr
inc
stos
xchg
mov
bound
xchg
sbb
push
setbe
sub
stos
leave
pop
sub
pop
cwde
inc
adc
lds
loop
loope
daa
fcomi
push
(bad)
ds
sar
mov
ja
out
jmp
rol
sar
repnz
out
cmps
lds
and
jmp
pop
xchg
sub
je
xchg
mul
xchg
sbb
xor
dec
push
mov
adc
(bad)
jle
adc
cld
xchg
pop
add
push
pop
dec
outs
mov
sbb
sub
mov
pop
je
pop
mov
in
stc
xchg
out
outs
push
outs
vpsubsb
lods
shl
ret
mov
mov
js
(bad)
mov
in
shl
sti
ins
retf
in
pop
inc
fdivr
loopne
jns
jb
add
dec
test
xchg
mov
pop
jmp
pusha
adc
into
(bad)
mov
jmp
pop
mov
ds
mov
movs
retf
and
jg
dec
fcomi
retf
call
push
adc
mov
call
mov
push
sub
retf
pop
and
push
inc
sbb
pushf
dec
rcr
mov
out
ret
add
sbb
sbb
test
add
test
push
mov
std
sbb
dec
jnp
aad
sti
lahf
sub
mov
add
mov
cdq
pop
fistp
sbb
int3
jo
jmp
idiv
out
mov
psubsb
pop
adc
cmp
mov
jle
out
js
jo
mov
and
pop
mov
mov
ins
out
xor
mov
adc
and
jnp
lock
mov
or
sahf
pop
push
pop
cmp
ja
xchg
push
(bad)
cmp
and
xchg
jnp
dec
sub
ror
mov
dec
(bad)
dec
icebp
jmp
push
add
out
and
fcomp
pop
(bad)
xor
mov
sub
rcl
add
lahf
pop
sub
cdq
dec
inc
popa
es
fwait
inc
imul
scas
and
leave
jecxz
movs
jnp
cwde
test
test
into
(bad)
outs
xchg
sar
adc
jmp
pop
mov
cmp
push
push
mov
ins
add
retf
pop
push
xlat
and
xor
mov
test
cdq
pop
(bad)
jns
xor
test
pop
sar
sub
jae
test
aad
outs
adc
xchg
lods
and
pop
adc
out
(bad)
gs
scas
mov
nop
add
arpl
adc
fcomp
loope
push
mov
add
mov
scas
jb
iret
xchg
retf
xchg
retf
repnz
adc
ja
pop
xchg
mov
mov
mov
mov
mov
cwde
aam
dec
mov
mov
test
scas
sar
mov
pop
inc
les
jmp
push
mov
idiv
sub
inc
inc
add
dec
xchg
ja
int
inc
test
dec
inc
movs
(bad)
addr16
adc
rcl
mov
lahf
test
out
ret
cmp
vpcmpeqw
and
and
sub
retf
sub
fstp
pop
(bad)
ds
push
mov
cmp
pop
push
mov
xor
cmp
ins
stos
shl
inc
inc
pop
pop
shl
mov
sti
sub
xchg
shl
shl
stos
and
es
push
stc
shl
imul
mov
cwde
or
xor
loopne
dec
fcom
xor
scas
push
pop
xchg
enter
aas
(bad)
in
xchg
add
cs
shl
(bad)
jmp
dec
jg
ja
fidiv
fsub
mov
cmc
into
jle
(bad)
movs
in
push
fwait
mov
lods
lahf
pop
adc
dec
mov
push
dec
push
sub
les
mov
mov
lods
imul
sub
sub
int3
loop
clc
gs
push
stos
xor
shl
mov
cmp
fsub
mov
push
lods
add
jmp
xor
js
out
xchg
shl
icebp
xor
mov
mov
xchg
cmps
jo
mov
mov
js
cmp
xchg
cli
inc
or
aas
ret
test
or
mov
ror
dec
(bad)
cmp
mov
out
inc
(bad)
jle
push
out
loopne
cli
mov
out
jae
mov
push
cmp
ret
and
jmp
xchg
jp
push
add
test
xchg
dec
xor
inc
jne
push
xchg
mov
cdq
jne
xor
cmp
(bad)
push
mov
and
push
sbb
mov
mov
add
int
mov
pop
lea
or
mov
jmp
jmp
pop
retf
ja
or
imul
sbb
enter
daa
sub
dec
push
pop
fisttp
jmp
lahf
scas
dec
adc
fistp
xor
clc
mov
je
sub
retf
add
and
movs
stc
and
pop
pop
cs
xchg
call
and
cli
mov
cli
dec
and
jae
sbb
cmps
pop
push
cmp
xchg
sub
ja
adc
aam
mov
xchg
pop
ins
outs
ficom
in
stos
inc
mov
loop
iret
retf
div
pusha
xor
sbb
mov
popa
out
hlt
in
aam
sbb
lods
retf
sub
repnz
mov
mov
sahf
ret
sub
sbb
xchg
push
and
ret
(bad)
(bad)
in
inc
adc
fs
retf
jo
sti
into
jp
sub
test
sub
dec
xchg
and
dec
dec
js
jp
add
xor
jmp
lds
push
(bad)
xor
push
mov
cmp
popa
aaa
xchg
inc
dec
pop
cmp
mov
jmp
ins
ins
sub
and
and
int
mov
mov
mov
mov
and
out
scas
sbb
leave
xor
rol
push
scas
pusha
or
xlat
jb
daa
jge
or
cmps
jecxz
mov
jmp
jmp
sbb
xor
fbstp
pop
stos
cmp
xor
push
mov
xchg
push
inc
pop
or
(bad)
cmc
test
xchg
(bad)
mov
in
ja
sub
test
ds
sub
test
lds
and
jns
sub
call
xlat
nop
pop
inc
and
push
jmp
mov
jmp
or
pushf
mov
or
add
enter
rcl
mov
ins
test
xchg
xchg
pop
rcl
or
loopne
das
push
dec
dec
xchg
out
xchg
movs
mov
adc
pop
pop
xchg
or
sub
lods
cmp
jae
test
stos
mov
call
fild
dec
aas
xlat
lods
pop
pop
dec
cmps
xchg
xor
inc
pop
daa
jge
xor
pop
add
pop
sar
dec
dec
xchg
(bad)
xchg
ja
ret
jno
popf
push
or
fwait
mov
daa
sbb
fcomp
out
(bad)
ss
sbb
and
adc
(bad)
das
push
test
mov
adc
jmp
or
mov
in
cmps
jb
pop
sbb
sub
xchg
inc
fld
sub
sub
pop
sub
add
push
dec
jmp
cmp
popa
jnp
ror
es
xchg
xor
dec
cmc
movs
aad
mov
adc
add
inc
test
push
call
push
cli
call
adc
(bad)
push
pop
jl
cmps
test
pop
fucomip
je
lds
fcomp
xchg
icebp
mov
(bad)
cld
stc
mov
pop
push
adc
sub
jle
call
mov
xor
mov
in
push
mov
retf
mov
fwait
push
cs
lea
movsx
or
movs
sub
mov
and
add
and
loop
(bad)
cmp
add
imul
push
mov
out
pop
aas
mov
repz
les
add
xchg
ss
or
cs
outs
cmps
mov
das
in
jbe
push
pop
dec
pop
or
push
push
fisttp
pop
mov
inc
clc
cmc
push
clc
jb
inc
or
ret
cmp
jl
cmps
enter
in
out
popa
loope
cdq
xchg
fdivrp
rcl
jp
mov
jle
xchg
cmp
sti
sbb
xlat
loope
and
mov
loopne
mov
into
mov
repz
and
mov
push
sub
arpl
pop
mov
mov
fcomp
cmp
add
hlt
pop
adc
inc
nop
daa
adc
sub
mov
ftst
outs
sbb
push
mov
cmp
pop
or
lahf
sub
add
pop
and
jle
xor
pop
imul
pop
loop
clc
xchg
inc
sar
add
lahf
inc
aad
mov
cmp
data16
pop
aad
(bad)
xchg
sbb
aad
dec
inc
fisttp
push
add
stc
jp
jne
fs
fldenv
adc
movs
aas
xor
outs
sub
adc
das
jb
dec
cwde
pop
push
dec
loope
push
inc
cmp
or
mov
(bad)
and
imul
mov
test
adc
ins
mov
in
and
push
mov
pop
(bad)
ins
add
in
mov
jnp
mov
jge
mov
push
dec
iret
jnp
rcr
popf
mov
(bad)
cmp
xchg
cmp
lahf
test
retf
dec
dec
call
aaa
loopne
in
sar
hlt
das
cwde
pushf
addr16
call
in
dec
push
out
scas
movs
xchg
cmps
test
lods
addr16
call
into
pop
sbb
mov
mov
icebp
push
test
shl
and
mov
test
cmp
mov
in
pop
mov
xor
and
pop
(bad)
jb
xor
jne
inc
shl
pop
lods
adc
cmp
adc
jae
add
nop
add
mov
add
xor
loope
rcl
dec
sbb
ins
fisttp
imul
mov
cmp
xor
xchg
mov
dec
lea
and
cmp
into
aad
(bad)
mov
sbb
mov
add
cmp
out
add
retf
dec
aas
and
lods
outs
into
cmp
adc
ret
xor
pop
addr16
shr
xor
out
int3
fsubr
or
leavew
and
adc
pop
xchg
stos
mov
lods
mov
mov
inc
loopne
fmul
cli
aam
das
xlat
lods
mov
jp
cmp
je
(bad)
jp
pushf
and
mov
sub
pop
ss
sub
jnp
jmp
or
inc
jle
cwde
mov
cmp
(bad)
hlt
sti
xor
sahf
das
in
mov
fcom
cmp
test
xor
ret
cmp
xchg
mov
mov
push
scas
movnti
daa
adc
popa
cmp
mov
pop
lea
int
add
pop
sub
es
fdivp
push
push
sar
jbe
cdq
iret
add
fwait
jge
inc
shl
mov
inc
jmp
sahf
leave
das
jmp
cmps
daa
test
adc
fist
sub
out
pop
push
arpl
fmulp
adc
mov
jno
mov
mov
dec
adc
pop
imul
pop
daa
test
cmp
cwde
mov
lahf
push
sub
jecxz
fisttp
lods
push
dec
add
fs
dec
stos
lods
mov
jmp
cmp
or
lahf
scas
sub
jmp
call
mov
(bad)
jns
es
(bad)
mov
cmp
bound
cwde
iret
int3
jne
rcl
xchg
pop
popf
(bad)
rcr
xchg
mov
cli
jl
retf
lods
rol
adc
movs
and
push
add
mov
sahf
add
pop
inc
xor
cmp
sub
jo
pop
imul
inc
inc
hlt
dec
(bad)
mov
in
mov
or
mov
ds
mov
push
jnp
or
test
adc
xchg
test
mov
adc
and
rcl
fisub
nop
(bad)
xlat
lock
scas
loopne
call
jl
mov
jecxz
dec
pop
push
dec
mov
std
pop
xchg
cmp
and
rcl
sbb
ss
mov
adc
retf
nop
cmp
les
inc
push
xor
mov
and
xchg
mov
test
mov
ins
fisttp
cmp
movs
mov
nop
test
mov
jno
ror
mov
lahf
bound
lock
jb
das
push
aad
daa
and
mov
shl
cmp
rcr
retf
sbb
retf
mov
sbb
stc
xchg
ret
pusha
mov
cmp
iret
pop
out
xchg
je
inc
mov
push
fidiv
and
sbb
inc
jns
push
(bad)
pop
and
add
daa
shr
sbb
scas
repnz
shl
cmp
call
daa
mov
movs
inc
cmps
push
or
push
cmps
xor
rcr
mov
push
mov
in
enter
in
sahf
sub
add
mov
jno
jns
sti
cmp
cmp
jb
mov
xor
outs
les
add
push
pop
mov
call
popa
std
inc
adc
fsubr
mov
fist
xor
stos
shr
sbb
outs
mov
das
cld
add
cmp
push
xchg
jbe
push
dec
icebp
sbb
test
test
and
xor
fmul
scas
sbb
es
fld
mov
sbb
mov
scas
dec
scas
add
push
mov
jl
jp
sub
mov
push
dec
js
stos
xchg
xlat
pop
inc
or
xchg
jb
aaa
test
sub
imul
or
xchg
push
out
rol
jp
mov
mov
cwde
in
add
and
lock
inc
and
or
dec
jmp
adc
xor
pop
mov
adc
pop
pop
push
out
popa
ficomp
mov
mov
call
pop
and
add
retf
lods
mov
mov
or
pusha
dec
rol
(bad)
rcr
call
xor
xor
div
xchg
cld
aaa
dec
loop
retf
in
adc
mov
xchg
das
dec
push
(bad)
fsub
mov
mov
xchg
fdivr
pop
push
ror
stos
gs
enter
fdiv
push
add
pop
mov
xchg
pop
mov
ret
std
ror
inc
ret
pushf
pop
xor
dec
adc
dec
gs
stos
sbb
sbb
repz
adc
shl
mov
add
dec
cmp
cs
inc
xchg
or
mov
scas
mov
aad
mov
dec
mov
cwde
sti
les
stos
sar
jbe
jmp
and
inc
popa
fwait
adc
(bad)
sbb
xor
test
(bad)
jbe
cmps
fdivr
or
test
test
jmp
push
sbb
inc
mov
jle
vshufps
mov
nop
adc
and
js
repz
push
das
inc
and
(bad)
pop
setno
jns
ror
mov
pop
aaa
mul
push
xchg
mov
cld
adc
(bad)
scas
xchg
jle
add
fild
sbb
inc
stos
xchg
or
xor
lods
enter
hlt
jns
adc
mov
mov
xchg
movs
cld
mov
push
xchg
push
dec
or
test
or
fnsave
pusha
outs
add
ror
repz
inc
(bad)
or
xchg
mov
mov
loope
cdq
push
cs
rol
push
es
movsx
xchg
pop
cs
hlt
mov
mov
mov
cmp
jns
inc
mov
dec
mov
cmp
cmc
cmps
jp
mov
inc
(bad)
in
cmp
jo
xadd
in
cmp
sar
dec
jecxz
loopne
aas
jecxz
loopne
xor
jbe
iret
dec
rol
neg
int3
popf
sahf
ret
mov
shl
and
push
dec
call
push
cmps
retf
and
fwait
outs
fs
pop
pop
sahf
mov
mov
fsincos
mov
push
xchg
add
in
ins
sbb
imul
outs
push
mov
ret
cmp
inc
out
mov
into
sbb
mov
jmp
or
adc
in
inc
hlt
aas
bound
mov
push
ins
jne
adc
ror
mov
mov
repz
ins
mov
pop
mov
inc
jle
dec
mov
xor
imul
mov
mov
pop
add
mov
pop
hlt
add
mov
push
xor
inc
mov
dec
out
push
push
sub
lods
test
ror
leave
sbb
pop
enter
add
cmp
xor
cwde
jns
and
cwde
pop
push
sub
arpl
jne
xchg
or
jl
adc
jmp
push
into
push
mov
mov
and
das
outs
jge
dec
daa
xchg
push
xchg
pop
adc
adc
cmps
sub
icebp
pop
or
add
or
mov
xchg
iret
pop
(bad)
popa
mov
jns
int3
mov
push
pusha
sbb
add
mov
movs
test
xchg
push
cmpxchg
mov
out
(bad)
pusha
loopne
mov
das
xor
sbb
das
adc
jbe
add
sti
stos
xchg
mov
stos
xor
inc
push
dec
push
sub
push
or
sbb
cli
test
jmp
dec
or
stos
test
inc
movs
inc
sbb
mov
add
or
sbb
add
out
bound
pop
jecxz
xor
ds
mov
dec
jae
mov
push
test
jne
aam
in
pop
imul
or
cwde
out
and
out
mov
inc
bound
(bad)
pop
adc
movs
aas
jg
dec
fnstcw
test
mov
(bad)
aad
adc
jp
pop
in
pop
into
jns
ds
push
xor
mov
adc
adc
sbb
mov
in
popf
stos
cmp
iret
rcl
clc
out
scas
sahf
sub
adc
mov
jno
inc
(bad)
cmps
int3
in
in
loop
pop
mov
jle
in
icebp
xlat
sub
add
or
pop
mov
and
mul
push
jne
push
mov
mov
mov
xor
cmc
push
cmps
mov
xor
dec
dec
mov
add
inc
sub
mov
aaa
pop
fs
(bad)
sub
mov
test
add
movs
cli
xor
mov
cmps
mov
cmp
adc
pop
in
jecxz
push
sbb
sub
cmp
mov
ss
out
or
mov
stc
jl
test
lods
jle
sub
jo
test
jnp
je
(bad)
retf
fs
nop
movs
enter
test
cld
mov
ds
pop
mov
ds
jno
push
push
cmp
rcr
repz
fwait
nop
jmp
iret
mov
jns
sahf
imul
push
(bad)
jbe
jnp
mov
pop
jmp
cmp
(bad)
psllq
in
sbb
iret
sub
or
or
stos
int3
ins
dec
mov
arpl
test
mov
cs
and
cmp
leave
fiadd
outs
repnz
jbe
(bad)
sahf
inc
hlt
jne
pop
(bad)
jmp
push
ds
cmp
loope
jno
loope
pop
fucomp
cdq
addr16
jb
jmp
bswap
pop
pop
aas
or
and
(bad)
sbb
or
aad
fmul
(bad)
retf
jmp
xchg
dec
dec
cld
push
inc
stc
xor
in
inc
sbb
mov
cmp
outs
lods
push
ss
xor
mov
xor
dec
cmp
addr16
xor
pop
ds
sbb
hlt
xor
mov
sub
ss
(bad)
mov
addr16
xchg
test
push
pop
(bad)
call
imul
popf
xchg
jmp
or
mov
cmp
add
jle
inc
cwde
cmp
mov
push
ret
ss
out
add
xor
add
adc
push
lods
cmp
push
test
inc
mov
in
and
pushf
(bad)
scas
clc
lea
cld
add
imul
sbb
sub
sbb
imul
push
pushf
(bad)
lods
mov
mov
and
cmps
inc
dec
mov
mov
mov
cmp
jae
xor
sub
rcl
inc
test
lds
jmp
push
and
scas
mov
lods
xor
pop
fldcw
cmp
jge
sbb
loope
dec
adc
xor
push
xchg
and
(bad)
mov
ret
or
mov
aam
ror
xchg
ss
mov
mov
icebp
aad
and
cwde
popf
mov
je
es
xchg
daa
jg
xchg
push
ret
xchg
aas
jl
dec
dec
pop
pusha
sti
dec
imul
test
and
repz
or
jmp
pop
in
cmp
push
mov
dec
scas
push
icebp
cmp
repnz
cmc
mov
jae
and
int3
mov
bound
movs
pop
add
stos
retf
ror
cmp
push
rcr
jnp
push
call
mul
mov
xchg
push
inc
mov
int
mov
mov
mov
push
mov
call
push
sub
icebp
aad
and
xchg
push
mov
stos
sbb
clc
or
jbe
data16
lods
imul
inc
lahf
shl
pop
fld
pop
inc
gs
xor
test
cmp
out
ficom
inc
mul
ja
sahf
inc
fst
adc
sbb
add
outs
sar
(bad)
mov
(bad)
cmp
dec
das
mov
fnstcw
cmp
(bad)
mov
mov
inc
gs
and
fdivr
sti
cmp
jp
dec
out
icebp
inc
mov
xor
sub
mov
mov
mov
aaa
or
sub
adc
sbb
in
mov
sahf
popa
push
pusha
stos
(bad)
mov
inc
push
pop
cli
inc
dec
(bad)
mov
or
xor
inc
mov
inc
call
xchg
ret
enter
cmp
repz
retf
sahf
mov
and
mov
adc
xchg
(bad)
movs
jg
xchg
add
js
test
cmp
xor
add
cs
adc
mov
mov
fwait
in
sbb
fdivr
mov
mov
xchg
sbb
jb
mov
aaa
adc
es
cmp
mov
mov
mov
pop
mov
push
and
dec
int
and
les
shr
mov
cli
fist
jne
xor
outs
jnp
ins
and
cmp
fwait
repz
imul
push
ins
bound
outs
in
mov
aam
and
pop
shr
(bad)
mov
add
sub
jp
sub
push
add
dec
cld
mov
inc
aas
sar
cld
xchg
inc
jno
lods
lea
out
jge
inc
mov
das
inc
mov
push
cdq
push
fist
fidiv
ja
pop
outs
loope
mov
scas
cmp
out
mov
sbb
out
gs
pushf
pop
push
cmc
pop
(bad)
push
lods
sub
gs
es
sub
rol
inc
inc
in
fild
call
das
push
ror
mov
xchg
or
das
mov
test
es
mov
shl
mov
and
lea
jmp
dec
popa
imul
inc
mov
(bad)
call
adc
sbb
aam
lock
mov
mov
mov
sbb
push
test
pop
xchg
cmps
rcl
pop
ret
and
xor
and
ficom
xchg
fidiv
mov
sbb
cdq
xor
sbb
and
jae
push
ror
out
je
push
test
jmp
js
cmp
cli
pop
cmc
dec
ret
ret
add
and
cmp
stos
loope
rol
dec
(bad)
mov
call
push
or
std
fld
ret
aad
jbe
fdivr
and
push
popa
adc
out
xlat
pop
int3
fistp
aaa
or
arpl
sahf
mov
daa
retf
xor
xchg
xor
mov
mov
nop
mov
fild
push
mov
dec
ds
jp
inc
(bad)
nop
cmps
sar
and
imul
adc
fild
pop
leave
les
jmp
jmp
scas
rcr
pop
fwait
push
in
je
or
rol
push
xlat
inc
call
fsubr
scas
int
pop
retf
(bad)
out
add
jb
fist
push
adc
pop
jge
test
or
fadd
mov
rcr
jae
mov
cs
inc
pop
sbb
dec
adc
ds
scas
push
jle
fldcw
pop
dec
inc
imul
out
xchg
std
lahf
mov
jo
ja
add
out
jo
mov
jmp
jge
jge
mov
push
cmp
fs
call
push
mov
outs
call
lock
fidivr
cli
and
lds
sti
add
dec
mov
bnd
int3
sub
cmc
dec
mov
mul
xor
sbb
rcl
inc
adc
aad
or
push
idiv
cmps
hlt
mov
push
add
mov
js
test
xchg
add
js
sbb
cmp
push
js
xchg
xchg
mov
cli
add
(bad)
fisttp
hlt
jg
call
or
nop
retw
mov
or
mov
push
pop
mov
je
mov
jmp
and
mov
xchg
std
leave
dec
repnz
(bad)
imul
sbb
leave
jecxz
lock
add
mov
sub
gs
push
or
mov
ss
imul
scas
js
ins
(bad)
out
js
sub
mov
and
sub
pop
push
outs
add
sub
dec
popa
mov
mov
ss
mov
lds
sbb
rcl
arpl
out
jmp
sub
inc
test
push
mov
push
or
arpl
ret
ds
les
add
pop
jbe
test
add
ret
push
test
retf
push
cmp
mov
add
fistp
aad
adc
or
xchg
mov
fidivr
in
jmp
push
fild
xor
js
sub
sbb
push
jns
repnz
mov
dec
cmp
mov
and
cmp
add
addr16
ja
int3
mov
js
stos
sar
or
outs
rol
xlat
xchg
xor
xor
fimul
hlt
mov
cmp
mov
jmp
mov
xor
pop
inc
push
xor
mov
cmps
ds
push
and
in
jmp
or
xor
add
pop
in
push
cmps
xor
cli
mov
cmp
cmps
repnz
mov
xor
sbb
jb
clc
mov
gs
scas
add
add
pop
cmp
dec
pop
mov
push
pop
lods
jo
fiadd
(bad)
xchg
test
stc
test
aas
cmp
dec
jae
pop
imul
mov
pop
xchg
adc
scas
pop
push
cmp
jl
shl
repz
jmp
fwait
mov
add
enter
xlat
dec
mov
int
push
mov
bound
push
fisub
test
mov
test
xchg
repnz
cmps
pop
push
call
inc
lods
retf
lock
repnz
dec
in
scas
mov
dec
mov
inc
jno
call
cld
sbb
and
cmc
in
outs
cvtpi2ps
inc
jmp
mov
sub
ins
inc
shl
mov
mov
dec
stos
repnz
test
cmps
pusha
iret
fwait
mov
push
stc
out
pop
int
ror
clc
xchg
std
xchg
outs
dec
adc
pop
push
xchg
and
mov
in
nop
popf
mov
xor
movs
or
adc
aam
mov
pop
popf
jns
push
sub
mov
mov
rol
mov
add
pusha
call
lea
fidiv
pop
nop
lods
repz
pop
aad
ret
inc
stos
jl
imul
out
(bad)
mov
fist
xchg
push
mov
bnd
and
(bad)
psllq
rol
adc
push
and
cwde
xor
push
pop
dec
(bad)
fimul
call
add
add
adc
mov
ficomp
arpl
shl
rcr
in
jo
in
xchg
std
imul
dec
jmp
push
jle
mov
xchg
(bad)
sub
dec
rcl
movs
ins
cmp
aaa
add
mov
push
xlat
in
lahf
push
enter
addr16
pop
mov
lds
test
pop
sbb
std
in
and
xchg
pop
jl
cld
sbb
cwde
xchg
xchg
into
jb
scas
xor
mov
(bad)
push
sbb
not
and
xchg
pop
pcmpgtd
retf
aam
mov
jmp
mov
cmp
call
mov
jb
pop
sub
rcr
add
loopne
popf
push
lods
ud2
in
shl
or
sub
hlt
out
fsubr
mov
sub
cmp
xchg
out
sahf
xchg
mov
and
inc
or
adc
scas
push
xor
jle
jl
push
inc
push
retf
jge
dec
pop
inc
into
loopne
pop
sub
push
push
or
sbb
mov
mov
mov
(bad)
movs
mov
out
mov
outs
scas
mov
hlt
mov
push
arpl
sar
cmp
mov
inc
push
mov
dec
jb
xchg
imul
fisubr
pop
pusha
xchg
jmp
mov
cmps
inc
in
and
aad
dec
arpl
out
xchg
push
add
add
(bad)
dec
ror
pushf
xor
aaa
and
or
enter
cwde
sti
push
lock
(bad)
pop
xchg
mov
js
pop
add
jle
mov
dec
mov
in
in
imul
jns
sbb
jmp
shl
jge
push
and
mov
mov
sbb
(bad)
adc
(bad)
mov
jecxz
add
push
into
lahf
xchg
leave
pop
xlat
repnz
mov
pop
in
dec
mov
retf
(bad)
mov
mov
fbstp
cmp
addr16
rcl
lea
data16
mov
cmps
pop
mov
mov
mul
pop
adc
imul
jge
inc
and
loope
and
inc
fwait
pusha
pop
(bad)
sbb
and
sbb
loope
jecxz
adc
je
in
sar
std
cmp
mov
jae
and
mov
sbb
lds
adc
jle
add
push
fld
push
(bad)
xchg
stc
inc
and
push
sub
test
icebp
pop
jo
fmul
or
mov
pop
push
test
add
out
scas
movs
stos
(bad)
ja
pop
in
test
xchg
js
lock
sub
jb
xor
lock
lea
(bad)
pusha
lds
(bad)
mov
ret
adc
mov
jne
fbstp
dec
and
mov
or
dec
cld
push
das
xlat
inc
pop
dec
pop
push
inc
mov
cs
push
mov
into
int
push
mov
out
cmc
xor
dec
cmps
jg
cmp
mov
in
test
jo
je
bound
dec
pushf
xor
or
lahf
enter
and
into
mov
dec
imul
xor
pop
sti
pop
pop
cs
pop
sub
sti
xor
cmp
jnp
or
sti
jl
imul
sar
mov
jmp
or
retf
inc
push
bound
mov
xchg
or
into
pop
(bad)
cwde
sub
das
(bad)
and
repz
inc
das
xchg
fidiv
pop
cmc
jns
pop
cdq
push
push
lods
jno
ss
lods
xor
lds
outs
call
jns
xor
add
jp
adc
inc
in
stos
sbb
(bad)
jp
xchg
call
clc
js
daa
inc
ror
rcr
or
nop
dec
scas
jg
pop
call
in
sub
push
jmp
mov
out
imul
(bad)
(bad)
sbb
jg
leave
push
enter
retf
cmps
jns
sbb
adc
(bad)
pushf
push
ror
push
clc
out
sbb
jl
ror
and
pop
loop
sahf
inc
cli
xchg
jne
jne
add
and
xchg
xor
push
mov
cmp
stos
and
scas
mov
out
cmp
out
(bad)
js
aaa
mov
or
retf
push
add
cmc
shr
add
pop
jb
(bad)
loope
arpl
imul
cs
mov
pop
or
mov
inc
mov
pop
push
shl
(bad)
nop
shl
sub
mov
jge
inc
lods
bound
and
mov
mov
xchg
scas
cmp
xchg
mov
ret
aad
adc
inc
scas
mov
stos
mov
inc
push
mov
gs
mov
mov
lahf
push
aaa
fld
es
mov
pop
jns
ins
or
in
mov
je
fcomp
push
out
jmp
ror
outs
xlat
int3
mov
loope
xchg
xchg
scas
jbe
xchg
pop
lahf
stc
jo
xchg
sbb
jg
or
cmps
adc
xchg
inc
and
test
fdiv
inc
add
mov
jae
mov
cmp
push
sete
les
aas
pop
sar
mov
mov
outs
mov
lahf
fptan
mov
out
sub
ss
mov
(bad)
fisttp
push
mov
lods
out
loop
jp
and
out
add
icebp
cmps
pusha
adc
je
bound
retf
mov
cmp
jo
loope
add
loope
fcomip
dec
push
sbb
cmp
fisttp
les
ja
gs
push
std
ja
sub
push
push
cmp
push
js
(bad)
imul
stos
cmp
sete
xchg
sub
bound
das
or
pop
ins
out
inc
dec
add
adc
mov
outs
xchg
cmp
jp
mov
mov
dec
(bad)
shld
lods
leave
movs
mov
loope
imul
(bad)
add
jp
sahf
jne
lods
int
inc
cmp
sbb
push
das
pop
add
sub
mov
popf
dec
and
jp
fld
adc
xchg
push
fucom
fs
xchg
aam
sbb
scas
adc
push
pop
push
sub
movs
mov
clc
sbb
jno
dec
and
cmp
dec
sub
or
cwde
cwde
repnz
add
enter
mov
in
pop
enter
cdq
sub
mov
cdq
push
cmp
(bad)
jbe
cwde
inc
inc
jp
movs
cmp
pop
add
mov
call
leave
jmp
mov
(bad)
aam
(bad)
sahf
mov
xchg
nop
mov
xchg
sub
fld
add
xor
xor
les
push
fwait
sub
gs
xchg
or
neg
mov
arpl
sahf
lock
data16
cs
and
or
push
inc
pop
mov
in
lods
adc
inc
mov
aaa
ins
bound
sub
call
xor
fs
icebp
stos
dec
xor
int
xchg
mov
mov
inc
cmp
std
sub
fwait
mov
shr
xor
xchg
mov
pop
adc
mov
movs
cdq
jne
add
movs
(bad)
cmps
cmp
inc
mov
call
push
outs
gs
scas
sub
sub
movs
mov
stc
not
stos
out
fs
mov
sbb
mov
daa
jo
xor
das
xor
fisubr
push
push
mov
repz
push
(bad)
ja
dec
sbb
sub
adc
call
jp
push
and
test
gs
sub
(bad)
call
jnp
sbb
and
repz
mov
and
aam
loop
mov
mov
fst
ret
mov
sti
xchg
imul
fwait
inc
push
cmp
(bad)
xlat
mov
daa
inc
mov
fwait
out
int3
cmp
leave
jecxz
xchg
in
in
or
pop
scas
mov
pop
sub
xchg
push
pop
xchg
not
stos
lahf
adc
pop
fbld
cmp
icebp
out
inc
mov
fwait
outs
cwde
pusha
mov
and
xor
fild
stos
mul
sub
and
pop
into
neg
ror
cmp
fadd
inc
sbb
jo
add
lahf
repnz
pop
dec
jae
aaa
jbe
mov
jge
xor
fs
sti
ins
daa
mov
dec
pusha
mov
lods
inc
dec
div
pop
mov
stos
push
push
out
scas
int3
(bad)
mov
or
sar
std
stos
movs
cmps
and
xchg
iret
adc
nop
loop
add
cmp
pop
pop
mov
xor
mov
and
(bad)
push
mov
mov
or
xchg
arpl
mov
xlat
push
adc
mov
movs
loop
push
jne
and
ins
stos
dec
lahf
inc
xchg
jecxz
sub
test
xor
or
stc
icebp
add
push
into
xchg
or
jne
into
in
sub
out
outs
fdivr
dec
dec
jbe
ss
retf
inc
std
outs
test
xor
cmps
out
sbb
xchg
shl
dec
xor
mov
mov
(bad)
je
idiv
inc
cmc
bound
std
sub
popf
lods
inc
dec
int
and
and
or
outs
and
es
je
jo
sbb
sahf
xor
popa
xchg
clc
leave
ret
ret
and
lahf
les
or
addr16
adc
mov
or
or
cwde
repz
retf
jne
xchg
in
inc
pop
(bad)
mov
mov
cmc
xchg
jbe
imul
mov
outs
xchg
mov
es
mov
push
call
lock
fsub
pushf
ins
mov
push
adc
and
daa
sub
and
add
cmps
loopne
adc
xor
aaa
cmp
dec
mov
int
and
mov
lock
out
xor
fcmovnu
ficom
sbb
bound
(bad)
ret
xor
fstp
mov
inc
outs
jnp
jle
data16
ins
and
loop
jns
cmps
sbb
jl
cmp
popa
imul
mov
push
pop
jge
inc
sub
xor
retf
mov
cmp
mov
or
jo
or
push
inc
pop
pusha
sub
cli
leave
leave
cmps
xor
push
dec
inc
sbb
inc
call
and
cmp
xchg
into
aas
rcl
pop
adc
pop
push
mov
inc
sub
imul
and
movs
mov
cmp
pop
es
dec
mov
ret
dec
inc
sub
leave
pop
shl
ss
(bad)
repnz
and
xor
mov
add
es
mov
pop
push
bound
cmp
add
jo
loop
push
xchg
push
and
cmp
xor
jns
mov
fisubr
enter
or
or
aaa
repz
mov
test
stos
cmps
lea
data16
xchg
je
mov
mov
jno
aam
stos
lds
cmp
sub
aad
imul
push
mov
push
icebp
jl
scas
jmp
push
or
ficomp
pop
xchg
adc
retf
repz
sub
cmps
mov
cld
clc
xchg
ror
daa
push
mov
push
popf
fsubp
push
add
xchg
cwde
cld
jmp
add
mov
inc
sub
outs
mov
cmp
and
dec
sub
fist
out
pop
pop
out
into
mov
dec
inc
sahf
pop
outs
cli
push
xlat
jo
pop
int
jg
xor
daa
or
inc
nop
add
lods
and
cmp
test
stos
inc
jp
jle
sub
cli
and
ins
xor
scas
mov
cmp
mov
adc
sets
call
or
(bad)
fcmovnu
pop
loopne
xchg
mov
xchg
and
pushf
and
cmps
adc
sti
repnz
das
push
xor
cmps
ins
dec
iret
mov
push
add
cmp
sub
setae
jge
lahf
cdq
into
fs
pop
xchg
dec
repz
js
mov
lock
dec
retf
cmp
fisttp
jnp
cmp
outs
add
sbb
fcom
and
retf
ss
in
shl
ret
xor
and
inc
mov
jg
sub
push
pop
push
mov
sbb
pusha
add
rol
sub
shl
nop
sub
(bad)
adc
les
je
stos
adc
adc
fs
out
aad
mov
sbb
inc
mov
cmc
and
pop
dec
ins
ins
jl
sbb
jge
mov
call
jge
fcomp
call
out
stc
push
in
push
(bad)
jg
test
sbb
and
push
xor
scas
pop
adc
into
add
or
test
(bad)
xor
test
inc
pop
gs
bound
mov
sub
loop
popa
jnp
cmps
ret
mov
jne
mov
jo
xor
movs
sbb
(bad)
jne
add
xchg
int
icebp
cmp
outs
test
cdq
test
retf
cmp
pop
push
not
mov
popa
stc
xor
gs
mov
push
adc
loop
or
and
scas
adc
cs
jo
dec
inc
xchg
push
imul
iret
push
mov
loop
or
pop
jmp
jns
cmp
jmp
les
cs
cmps
(bad)
or
pop
imul
int
sbb
xor
mov
mov
jl
jle
iret
fwait
pop
ins
mov
adc
jle
in
and
arpl
and
je
packsswb
aaa
sub
in
xchg
retf
stc
je
rol
inc
jmp
fimul
mov
push
lods
call
fmul
push
retf
mov
or
jecxz
inc
dec
cmps
into
repnz
and
and
push
aam
jae
jge
sub
cmp
cmp
add
cmps
add
(bad)
bnd
add
and
xchg
aaa
test
sar
sti
inc
not
jg
xchg
or
shl
mov
xchg
mov
push
jo
adc
mov
sub
scas
mov
outs
dec
clc
mov
mov
mov
mov
das
adc
mov
mov
aad
pop
(bad)
cmps
pop
shl
jns
mov
fadd
push
and
shr
and
stos
push
xchg
(bad)
fistp
or
movs
enter
cs
int
outs
push
in
enter
inc
fstp
loop
mov
pusha
xor
pop
cmp
push
mov
(bad)
jnp
mov
int3
ss
in
dec
xor
or
test
shl
sti
xor
inc
loope
ja
inc
out
retf
jns
xchg
mov
cmp
out
in
or
jnp
mov
mul
cmp
cs
inc
out
movs
hlt
sbb
push
cmp
scas
jl
dec
mov
inc
pop
add
daa
mov
push
pop
lds
ins
cdq
ins
mov
loopne
retf
retf
pop
add
push
(bad)
popa
jo
out
and
inc
icebp
jbe
pop
shr
test
neg
movs
cdq
ret
pop
dec
push
out
inc
dec
dec
jmp
cmp
jmp
xchg
and
enter
popa
das
(bad)
(bad)
push
pop
push
mov
sub
sub
mov
aaa
dec
aad
add
adc
arpl
xchg
mov
sub
cmp
enter
out
pushf
shl
sahf
(bad)
rcl
mov
mov
(bad)
stos
and
xor
xchg
dec
jns
aas
push
mov
sub
mov
(bad)
stc
push
mov
mov
push
ret
or
adc
test
popa
mov
mov
out
imul
fild
lods
or
mov
outs
add
dec
sub
inc
add
popf
cmps
test
in
gs
mov
jmp
pop
push
rol
push
ins
out
jo
fcmovnu
ins
sbb
sbb
mov
cmp
div
adc
or
inc
adc
push
adc
jmp
mov
add
ins
int3
rcr
mov
bound
push
aas
fwait
sti
xor
cdq
clc
cdq
add
outs
add
test
fs
push
pop
inc
lods
cmp
mov
pushf
data16
jp
out
(bad)
sub
mov
add
inc
adc
sbb
dec
js
retf
sar
pop
lahf
addr16
enter
xor
(bad)
aam
cmp
xor
xchg
(bad)
adc
test
sbb
cmc
loopne
adc
pop
mov
sti
test
cmc
outs
call
push
and
daa
cmp
push
sbb
jb
mov
xor
cmp
fsincos
fs
xor
sub
imul
rcr
bound
int
xchg
add
jbe
in
jecxz
cmc
pop
gs
int
cdq
sbb
dec
int3
mov
pop
lahf
std
dec
(bad)
das
ror
fld
mov
jb
jae
and
mov
jg
or
inc
mov
ret
adc
or
jns
pop
repnz
adc
jno
xchg
or
jo
clc
dec
ins
and
fimul
in
retf
hlt
lods
ror
aad
rol
push
push
fcmove
xchg
mov
sti
stc
xchg
pop
mov
mov
mov
add
cmps
jp
xchg
cmps
fucomi
and
and
pop
jae
push
jnp
fdivr
lock
gs
adc
mov
int
fs
mov
ja
(bad)
test
sub
nop
sub
out
fadd
dec
jb
dec
mov
aad
je
xor
pushf
sti
inc
int
sbb
mov
or
and
or
(bad)
out
xchg
dec
cmps
jmp
in
hlt
or
in
add
add
ret
popa
mov
fstp
sbb
mov
xchg
rcr
jl
inc
push
and
ss
movs
shr
pop
xchg
cmp
test
mov
out
fs
and
rol
mov
out
in
pop
push
mov
sbb
je
jmp
xchg
sub
xor
in
cmp
push
hlt
inc
(bad)
les
cmps
lds
fldenv
mov
shl
add
mov
push
cmp
nop
cdq
call
push
jns
add
nop
xchg
add
ins
std
xor
pusha
cmc
into
mov
xor
pop
adc
lods
mov
imul
dec
dec
pop
in
mov
ja
sbb
in
rcr
stos
pop
pop
dec
push
jb
shl
retf
push
aam
nop
or
movs
aaa
mov
pop
adc
clc
mov
mov
add
cmps
and
jbe
adc
jae
and
ret
cmc
sub
int3
arpl
out
dec
push
push
mov
call
(bad)
jns
pop
or
call
jb
jecxz
aam
mov
arpl
add
push
ret
push
inc
adc
hlt
je
mov
in
mov
or
xchg
das
pop
cld
or
cmp
mov
push
(bad)
into
scas
std
push
out
shl
pop
ficom
repz
cmc
enter
out
mov
repz
xchg
cld
push
out
xor
mov
repz
inc
sbb
cwde
sub
inc
ins
stos
fistp
push
inc
mov
adc
adc
aas
and
scas
inc
and
div
retf
adc
cmp
fmulp
div
int
ds
xor
mov
fstp
daa
cwde
sub
adc
shl
sbb
jb
cli
pushf
in
repz
aaa
cmp
xchg
int3
(bad)
outs
sbb
xchg
aaa
ja
fnsave
inc
mov
test
iret
push
jnp
es
and
repz
dec
out
out
mov
cmp
mov
xor
dec
pusha
hlt
lods
cmc
add
pop
sbb
cmc
dec
mov
shl
test
in
loop
repz
ret
lahf
mov
cmp
dec
mov
or
add
mov
inc
lock
sahf
push
call
mov
cmp
stos
in
cld
add
retf
dec
sub
outs
jne
sbb
ret
(bad)
hlt
mov
lahf
nop
mov
add
je
inc
out
arpl
adc
or
sbb
and
xchg
dec
frstor
push
shl
outs
sbb
jmp
push
and
sub
mul
enter
push
mov
inc
out
(bad)
in
dec
(bad)
in
mov
int3
push
ins
sti
jns
push
leave
push
mov
and
test
inc
dec
ss
jg
or
fild
push
sub
mov
sbb
clc
iret
pop
out
imul
aas
jp
iret
fcomi
jmp
aaa
mov
push
or
imul
sbb
(bad)
adc
jmp
inc
jmp
mov
push
fsubr
inc
popa
nop
ja
push
lods
loopne
imul
dec
add
rcr
inc
dec
push
int
cmc
inc
push
dec
(bad)
pop
sbb
addr16
fnstenv
adc
xchg
push
dec
push
adc
push
or
inc
xchg
cmp
test
pop
out
inc
mov
scas
(bad)
mov
mov
lahf
sahf
inc
stos
sbb
int3
pop
sbb
push
jno
ss
cli
test
cld
into
mov
jmp
repz
mov
and
out
sbb
sbb
mov
rcr
addr16
or
(bad)
mov
loop
cmc
dec
jbe
and
xor
mov
cmp
push
adc
add
fld
sub
inc
pop
cmps
dec
cmc
ja
jae
stc
sbb
iret
test
in
mov
pop
in
imul
adc
js
sti
cmps
adc
adc
aam
cdq
retw
push
and
and
fisub
fcomp
or
test
mov
sub
xor
mov
jp
aad
sub
ss
in
je
fnstenv
stos
outs
leave
shl
and
mov
push
mov
mov
popa
add
dec
call
xor
or
pop
sbb
pop
push
scas
sahf
test
xchg
push
add
cmp
adc
es
(bad)
pop
dec
aam
ficom
pop
not
inc
xchg
movs
test
cs
and
mov
repz
xor
loop
jno
adc
sub
mov
pop
push
push
mov
lods
jne
or
retf
add
stos
in
adc
arpl
mov
push
mov
rol
cmp
mov
mov
or
mov
xchg
xchg
cs
xlat
jno
icebp
jo
inc
push
retf
pop
das
xchg
pop
repz
lock
pop
stc
icebp
jno
inc
mov
push
sbb
test
mov
xchg
and
ss
or
es
pop
xor
pop
dec
xchg
sub
push
stos
mov
xchg
outs
xor
mov
gs
pop
test
pop
shr
mov
xchg
retf
test
(bad)
jnp
or
std
lea
scas
push
outs
(bad)
gs
movs
sbb
fldpi
sbb
or
retf
daa
and
gs
inc
dec
jge
fdivr
sbb
sbb
lods
jp
(bad)
xchg
enter
cmp
sbb
add
sub
sub
std
sbb
fwait
popf
mov
dec
dec
inc
in
push
jp
das
inc
jp
pop
cmp
hlt
push
cld
xchg
sub
mov
fsub
imul
push
push
mov
mov
mov
push
not
jb
(bad)
cs
and
or
pop
or
std
js
sbb
dec
pop
xchg
sub
(bad)
cld
pop
or
mov
sub
sti
jecxz
push
jp
xchg
(bad)
arpl
hlt
(bad)
popf
push
push
adc
push
dec
fnsave
push
fmul
stos
test
push
xor
scas
pop
mov
mov
jmp
jmp
cmp
call
int
jo
sbb
aaa
sbb
xor
lock
scas
stos
sar
mov
or
or
adc
sub
repnz
jmp
fsub
rol
mov
jbe
aad
adc
and
mov
inc
sub
pop
jg
cmp
int
nop
or
xchg
mov
data16
mov
rcl
popf
out
scas
sub
mov
test
fwait
inc
cmps
stc
movs
jns
pop
adc
dec
xchg
xchg
sub
jno
sti
lods
test
out
sub
push
popa
cmp
cmps
mov
(bad)
push
push
cld
push
push
adc
into
pop
push
xor
inc
xchg
arpl
out
mov
add
leave
or
sbb
loop
in
iret
outs
cmp
mov
int
jnp
add
jnp
int3
int
sub
xor
add
loop
mov
je
aaa
dec
out
in
test
gs
scas
mov
scas
xchg
pop
(bad)
aas
xor
retf
or
xchg
outs
push
int3
(bad)
iret
fadd
and
retf
sti
and
aam
cs
xchg
ss
jb
cmp
shr
fs
jmp
dec
aam
mov
adc
lds
fstp
mov
add
adc
xchg
inc
pop
jnp
adc
jae
dec
in
and
fidiv
int3
shl
loope
or
test
repz
push
xchg
or
test
inc
shl
ins
retf
dec
mov
push
xor
outs
add
fidivr
mov
addr16
xor
rcr
or
mov
call
fcom
je
xor
add
pop
dec
pop
sbb
push
ja
sub
mov
inc
nop
out
add
or
aaa
mov
cli
xchg
shl
jbe
push
xchg
and
add
inc
int
das
cdq
ret
test
jno
paddb
jmp
xchg
add
(bad)
and
dec
inc
or
repnz
stos
mov
int
mov
pop
scas
sbb
shl
scas
es
mov
int3
rol
das
jle
call
out
jge
(bad)
(bad)
clc
dec
or
sbb
pop
lock
mov
push
mov
stos
mov
jo
outs
aas
div
cwde
ret
dec
jae
test
cmc
cmp
sahf
cmp
bound
and
cld
xor
in
push
das
xchg
push
loop
outs
mov
jp
mov
push
rol
mov
lods
pusha
adc
or
dec
jp
sub
dec
xchg
stos
xchg
and
mov
fisubr
nop
cmp
push
sahf
push
popa
(bad)
out
fcomi
push
rcl
in
pop
or
lds
push
mov
and
mov
lea
push
imul
sub
stc
cmp
push
sbb
ror
leave
fcmovnu
push
jae
or
dec
dec
jle
imul
sahf
(bad)
scas
pop
repnz
int3
adc
ror
out
mov
aaa
test
xor
movs
push
(bad)
adc
outs
sub
inc
cmp
mov
pop
mov
mov
cmps
lock
lods
rcl
push
mov
inc
dec
sub
stos
mov
inc
push
push
hlt
sub
outs
xor
fnsetpm(287
in
mov
or
(bad)
iret
icebp
in
mov
push
leave
aad
retf
fmul
adc
in
mov
push
in
dec
cwde
pop
mov
fs
dec
mov
mov
mov
inc
pop
lds
lea
xchg
inc
sbb
dec
dec
js
jbe
cmp
jns
and
shl
push
pop
pop
dec
cmp
jmp
and
mov
push
jle
stos
call
int
mov
adc
push
xor
test
(bad)
fist
lods
movs
stos
repz
push
retf
arpl
cwde
xor
sub
xor
(bad)
lahf
cli
sub
cli
mov
movs
lods
ins
xchg
pop
scas
pop
xchg
add
and
sbb
in
jne
cmps
out
ins
into
push
pop
adc
xchg
into
std
mov
mov
mov
jae
(bad)
mov
out
mov
fucomip
pop
sub
stos
jl
mov
adc
les
mov
fld
aam
paddsb
call
aam
shl
cmp
inc
in
jmp
cli
aad
inc
pop
xchg
loop
mov
mov
push
sar
and
in
jmp
add
cmp
inc
mov
mov
dec
adc
sbb
ror
mov
pop
cwde
jbe
inc
das
sbb
jno
icebp
dec
cmp
jge
inc
test
cmp
inc
xchg
movs
cwde
dec
cmp
push
popa
std
mov
call
fdivr
cmp
fisttp
mov
sub
in
xor
mov
retf
push
push
stos
and
jg
mov
popf
sub
aaa
adc
cmc
daa
fnstsw
repnz
and
xor
or
add
push
out
sbb
and
or
stos
add
and
sub
inc
es
aam
add
bswap
sub
mov
xchg
jno
add
test
add
lods
xor
mov
outs
adc
mov
mov
adc
push
jecxz
sti
dec
inc
cwde
aas
jecxz
xor
jnp
icebp
adc
xor
cli
sub
dec
stc
int3
mov
jl
inc
mov
cli
(bad)
test
int
add
stos
lods
xor
jns
rol
fld
enter
push
movs
retf
out
adc
push
stos
jecxz
xor
shl
jp
fs
icebp
cmps
xchg
ret
shl
push
cwde
and
sub
xor
jne
stos
je
adc
xor
and
out
jmp
jae
sbb
mov
push
xor
cmps
adc
repnz
std
ja
outs
mov
or
ret
test
call
aam
xor
fisttp
btc
test
sub
pop
adc
lds
das
adc
imul
aas
cmp
xchg
mov
sahf
or
push
outs
sub
shr
lds
mov
push
scas
cdq
pop
sbb
jno
pop
daa
mov
dec
pop
sub
pop
or
sub
stos
inc
fldpi
cld
xor
scas
lea
outs
mov
or
and
cmc
ret
jne
imul
dec
jo
test
add
das
sub
adc
adc
mov
add
lds
mov
jno
jl
and
repz
pop
aam
cmps
aad
mov
or
pop
jecxz
retf
jo
cmp
push
jmp
not
push
aas
add
xchg
push
push
pop
int3
or
jnp
imul
fadd
mov
imul
xchg
mov
retf
and
mov
mov
in
loope
in
adc
dec
daa
test
push
xor
call
jbe
adc
dec
sub
add
fadd
cmp
dec
leave
call
fmul
cmps
adc
xor
mov
push
ja
fcomp
cld
(bad)
movs
inc
gs
jecxz
dec
mov
mov
sub
pop
push
lea
in
pop
xor
sub
lds
mov
mov
mov
mov
push
sahf
out
int3
mov
jl
pop
repnz
pushf
fnstenv
xchg
scas
xor
cmps
fisttp
pop
mov
enter
pusha
fwait
xchg
test
call
neg
(bad)
xchg
mov
pop
test
fdivrp
jne
out
xchg
adc
or
xor
push
sub
xchg
mov
loope
adc
fldln2
mov
jp
pop
adc
mov
stos
xor
rcr
adc
inc
push
aad
xchg
cdq
and
ror
cli
push
jecxz
xor
idiv
aad
xchg
out
dec
cs
mov
ins
sbb
pop
adc
mov
sbb
nop
popf
push
push
std
sbb
je
data16
and
dec
add
adc
popf
addr16
mov
mov
push
das
test
cli
dec
inc
sbb
mov
sti
in
test
lods
fnsave
jbe
lea
(bad)
sti
sbb
enter
jmp
ret
xchg
mul
or
mov
movs
adc
pop
aaa
(bad)
cmp
fiadd
lods
icebp
sbb
add
and
nop
das
push
or
xor
xchg
cmp
in
xchg
add
inc
scas
popf
inc
pop
or
dec
retf
xlat
(bad)
dec
aam
mov
dec
dec
scas
sub
and
pop
adc
ret
call
sahf
out
mov
dec
gs
aad
and
jl
dec
cs
jno
xchg
jo
into
(bad)
scas
xor
jo
xor
in
dec
test
mov
sub
adc
jb
scas
cmp
std
add
imul
cmp
jecxz
es
or
push
pop
ret
fidivr
(bad)
je
(bad)
in
inc
loopne
mov
cmp
dec
cmp
inc
push
xchg
ficomp
xchg
lods
xchg
sub
pop
popa
rcl
push
pop
idiv
xor
int
xor
jmp
mov
mov
adc
push
push
bound
dec
add
push
stos
dec
jmp
shr
je
stos
jl
cli
push
xchg
xor
xor
mov
(bad)
ja
fisttp
mov
jecxz
movs
xor
mov
sbb
pop
add
and
ret
adc
rcr
pusha
mov
cwde
pop
mov
iret
xchg
xchg
test
les
call
xchg
cmc
pop
or
mov
in
addr16
stos
cmp
add
inc
hlt
inc
inc
ja
add
or
frstor
mov
xchg
or
ins
inc
inc
sbb
sub
sbb
repnz
(bad)
loop
adc
arpl
dec
(bad)
pop
loop
outs
xchg
ret
add
jb
imul
loop
popa
dec
(bad)
adc
out
dec
xchg
jns
pop
add
adc
imul
xor
adc
ins
xchg
test
and
jecxz
jnp
jl
sahf
fwait
cmp
jmp
inc
add
lds
(bad)
loop
adc
jecxz
xor
jo
mov
loope
in
add
push
xor
push
jb
cmp
(bad)
outs
out
nop
pop
xor
cmp
or
lock
test
mov
jecxz
(bad)
xchg
int
cmp
cld
cmp
xchg
push
in
out
call
add
push
arpl
cmp
mov
mov
repnz
popa
xor
and
cmp
pop
(bad)
ja
ja
dec
xlat
mov
shl
std
sub
sub
jl
out
cmp
dec
out
in
mov
in
ins
(bad)
int
mov
aad
sysenter
cmp
xchg
adc
push
cs
add
push
cmp
pop
push
dec
aad
dec
push
push
les
das
mov
int3
push
adc
xor
test
popa
outs
lahf
mov
stc
push
pop
dec
mov
out
fistp
mov
push
out
xchg
test
jle
cmp
mov
add
cmc
cs
dec
fnsave
lods
fcom
lds
or
pop
sbb
lock
(bad)
je
inc
cmp
leave
inc
iret
or
div
pop
fnsave
out
(bad)
out
addr16
jnp
push
call
cmp
add
dec
in
sbb
add
or
nop
out
lock
cli
jo
dec
and
pop
cld
pop
dec
add
sbb
sub
lock
add
rol
xor
pop
xor
xchg
lea
aam
movs
or
out
xchg
stos
push
xor
ins
jb
dec
jne
int3
mov
enter
pop
sub
addr16
repnz
cs
or
push
dec
cmp
jmp
mov
pop
popf
mov
cmp
push
xchg
jge
int
test
lods
movs
mov
jmp
int
inc
mov
cmp
sti
sbb
add
sub
xor
xchg
mov
cdq
mov
xor
call
and
pop
fisub
mov
jecxz
sti
call
clc
mov
sbb
inc
cdq
xchg
(bad)
into
lds
icebp
xor
ja
not
dec
cmp
cld
inc
fiadd
jp
mov
test
fucomip
mov
mov
ret
rcr
inc
inc
sbb
pop
adc
push
pusha
js
pushf
test
pop
add
loope
retf
push
push
push
cdq
nop
pushf
mov
or
push
jne
adc
neg
xor
jns
shr
mov
repnz
enter
cld
adc
inc
cmps
xchg
mov
das
inc
into
mov
inc
cmp
or
stos
add
mov
js
jp
call
mov
mov
and
or
dec
add
push
cmps
add
mov
mov
and
data16
xor
cmps
pop
push
and
or
(bad)
dec
push
fcomi
xchg
mov
loopne
mov
aaa
push
xor
or
xor
or
lahf
xchg
cmp
call
add
repz
gs
stos
pop
shl
fwait
call
loopne
in
or
mov
and
out
pop
sahf
pop
imul
mov
inc
dec
out
xchg
retf
aas
lea
and
pop
dec
mov
mov
pop
push
mov
cmp
jp
xor
jnp
aaa
xor
jno
adc
sbb
test
stc
inc
mov
add
(bad)
and
fiadd
jbe
jne
es
ins
rcr
(bad)
or
data16
pushf
out
xchg
mov
add
xor
loope
sub
cwde
shl
cmp
outs
xchg
inc
cmp
or
das
add
jne
sub
ins
add
call
aad
dec
xor
dec
mov
mov
sub
xor
cmp
stos
std
jl
ins
sbb
mov
and
mov
mov
sub
in
dec
ja
xor
jmp
cs
lods
js
mov
xor
jb
mov
je
sar
mov
xchg
into
adc
cmp
jnp
and
adc
mov
shl
aaa
inc
sbb
xor
jno
sbb
pop
jbe
stc
sbb
arpl
or
and
les
js
xchg
dec
shr
inc
cmp
and
(bad)
cmp
add
xchg
rep
call
pusha
adc
xchg
pop
ss
and
mov
cmps
push
xlat
enter
out
mov
cmpxchg
fcom
shr
sub
pop
movs
jne
adc
scas
repnz
jne
scas
cli
pop
xchg
xchg
dec
xchg
mov
pop
pop
jp
out
es
adc
call
xchg
jle
into
shl
or
dec
jnp
popa
pushf
(bad)
xor
ins
js
loop
xchg
repz
das
mov
mov
loopne
mov
xrelease
pop
push
inc
mul
cld
add
cmp
test
shr
bound
movs
out
sbb
das
das
in
cmp
cmp
push
mov
xor
imul
cli
jmp
sbb
ja
addr16
mov
out
aam
dec
popf
and
addr16
push
out
xchg
dec
dec
pop
and
add
sti
adc
xor
aas
aas
add
retf
or
cmp
sahf
jecxz
data16
jmp
push
(bad)
stos
push
aad
mov
inc
data16
add
sbb
stos
es
shr
jbe
hlt
pop
mov
pop
sub
stc
std
in
mov
sub
adc
nop
hlt
xor
fcmovbe
aas
sbb
sbb
push
in
push
aad
in
daa
jb
std
pop
mov
and
into
sbb
cmp
mov
dec
(bad)
mov
inc
int
mov
mov
lods
rol
js
sbb
add
popa
pop
add
xor
sub
dec
jae
fcmove
sbb
outs
jge
test
dec
or
repnz
inc
ds
aam
mov
xlat
mov
mov
das
les
sbb
cmp
inc
in
pop
aam
xchg
mov
xor
xchg
dec
mov
in
lock
cmp
push
rcl
xchg
ror
cmc
popa
(bad)
cmps
ror
mov
aam
mov
clc
cmp
and
add
xor
les
cld
jl
retf
nop
mov
jmp
mov
cld
add
retf
add
fidiv
pop
adc
shl
add
(bad)
fld
mov
xchg
pop
add
push
pop
or
cdq
lock
mov
or
sbb
in
test
push
jl
mov
cmp
xchg
lahf
iret
add
imul
movs
fcmovu
cmps
fistp
frstor
lods
into
inc
cmp
or
outs
dec
and
hlt
stos
les
add
push
dec
sub
mov
pop
push
xor
jno
mov
shl
adc
das
and
cmp
mov
das
bound
aad
or
dec
mov
mov
lods
mov
(bad)
jb
loope
les
mov
sub
or
inc
adc
xchg
push
aad
jne
xchg
scas
xor
jb
sbb
cmp
and
jmp
inc
push
pop
sbb
inc
mov
mov
push
inc
mov
outs
sti
sub
mov
jo
xchg
dec
add
pop
bound
push
or
enter
stc
add
inc
mov
mov
jns
je
leave
fdivr
(bad)
lods
push
mov
push
test
ret
mov
cmp
adc
out
or
and
push
xor
mov
dec
repz
mov
mov
jp
ret
jl
out
jmp
in
jecxz
rcl
sub
popa
xchg
mov
or
sub
and
dec
pop
or
imul
loopne
inc
aad
jl
test
mov
cmc
mov
adc
mov
sbb
pop
call
arpl
mov
xchg
adc
or
stos
or
shl
fmul
bnd
iret
jle
adc
add
outs
in
fcom
push
sahf
(bad)
fild
js
cmp
sbb
sub
(bad)
sub
ret
or
cmp
retf
adc
fbstp
std
push
add
and
dec
or
popfw
pusha
add
fs
add
dec
std
xlat
push
rol
adc
mov
sbb
pop
nop
(bad)
lods
xchg
sbb
sbb
ror
cld
cmp
push
jmp
sbb
jle
xchg
dec
jp
fisubr
xchg
jae
or
pop
sub
movs
popa
in
mov
mov
fcmovu
pop
inc
loopne
cmp
push
mov
daa
imul
or
jmp
dec
xchg
das
cmp
pop
dec
fcom
inc
jge
stc
dec
ficom
sbb
pop
mov
mov
ret
pop
int3
fmul
sbb
jno
or
dec
test
inc
or
mov
in
inc
fwait
mov
jnp
xchg
outs
stc
jb
data16
js
cld
and
in
jnp
pop
outs
mov
paddd
loope
add
dec
jmp
aam
cmp
(bad)
push
or
cmp
mov
loop
movs
and
xlat
ins
jns
adc
mov
cmps
xchg
dec
shl
sbb
(bad)
cmp
jo
jne
hlt
push
mov
jmp
pushf
rcl
(bad)
xchg
adc
iret
cmc
push
adc
movs
scas
in
xchg
out
call
dec
int
je
dec
adc
dec
and
test
and
in
jno
and
adc
push
scas
dec
fmul
test
out
out
xor
dec
not
xor
adc
fldcw
(bad)
adc
xor
movs
xor
pop
cmp
sub
add
(bad)
cli
inc
retf
jecxz
fild
pop
pop
sub
test
push
ret
les
int
adc
jne
out
mov
adc
pop
pop
test
jl
mov
das
mov
sti
imul
cwde
xchg
mov
mov
lahf
loop
mov
xchg
push
(bad)
add
cmp
scas
mov
or
in
je
cmps
push
inc
pop
xchg
jl
stos
pop
repnz
sahf
and
fmul
and
imul
movs
ins
sub
loope
mov
ror
fisub
mov
xchg
pusha
dec
pause
adc
fisttp
xor
cmp
nop
xchg
mov
pop
ja
pop
sbb
dec
adc
pop
(bad)
test
mov
and
xor
cs
inc
out
pop
(bad)
xchg
cmp
sti
fistp
cmc
pop
pusha
fisub
add
mov
mov
(bad)
dec
mov
cmps
int3
fwait
dec
das
sub
cmps
ret
mov
add
bound
leave
cmp
mov
xchg
ss
hlt
sub
ret
aad
rep
iret
(bad)
imul
imul
pushf
pushf
cld
dec
add
mov
hlt
lds
das
int
mov
cli
cmc
(bad)
ds
or
imul
push
imul
cmps
dec
push
sub
aaa
loopne
xor
out
xor
(bad)
pop
mov
adc
push
in
jb
cmp
jb
js
adc
xchg
xor
push
pop
lahf
add
mov
or
les
sub
mov
in
fcom
add
xchg
rcl
xlat
jns
inc
in
inc
adc
repz
adc
fcomi
lahf
loopne
sahf
pop
push
and
call
sub
mov
or
scas
(bad)
lods
ds
push
mov
inc
ja
sbb
test
imul
and
cmp
popa
imul
add
in
or
imul
mov
shl
sbb
sbb
cmp
jbe
inc
push
repz
mov
lea
out
push
sbb
aam
enter
dec
pop
sbb
push
iret
les
push
idiv
add
mov
push
lds
xlat
int
jp
cmc
fsubp
and
jecxz
fcmovbe
pop
rol
cmc
inc
pusha
xor
retf
push
test
xor
mov
adc
sub
ror
push
add
inc
push
mov
jo
cwde
xor
sbb
fdivrp
adc
mov
push
xchg
xor
push
mov
rcl
ds
and
les
mov
stos
push
push
push
mov
sahf
inc
jmp
sub
mov
cmp
out
mov
nop
mov
movs
pop
mov
or
mov
sar
ds
rol
test
jle
lods
pop
es
imul
mov
mov
iret
add
movs
xchg
cmps
stc
dec
xor
adc
scas
lock
inc
(bad)
lock
cmps
arpl
stc
and
pusha
popf
dec
(bad)
fcomp
cmp
pop
out
or
push
pop
sbb
sar
sti
pop
cmp
cmp
xchg
in
add
call
das
xchg
push
cmp
pop
pop
pop
pmullw
fwait
sub
sbb
data16
ror
aaa
adc
bnd
sbb
jbe
aad
pop
cmps
movs
mov
stc
sbb
sahf
call
imul
call
sbb
es
adc
pop
lock
push
scas
push
(bad)
dec
mov
add
fsubr
loopne
mov
lahf
popf
jnp
push
cli
into
fld
xor
dec
cmps
cmp
mov
sahf
xchg
stos
scas
xchg
and
sub
lods
jge
aaa
add
xchg
enter
dec
dec
in
inc
xor
fs
jb
mov
jge
aas
dec
adc
jp
imul
lahf
dec
and
push
pop
ret
scas
clc
lods
add
cmc
mov
ror
js
imul
jmp
jg
lea
or
sbb
and
or
jne
leave
sub
bound
xchg
ds
fs
(bad)
cmps
cdq
mov
dec
xchg
xchg
push
mov
retf
mov
push
mov
fcom
call
and
into
aad
pop
into
xor
cmp
mov
popf
cmp
dec
sub
shl
enter
call
stos
xchg
stos
add
imul
icebp
fucomip
sub
bound
loopne
sar
aas
sbb
add
add
and
or
and
scas
xor
jb
xchg
outs
sahf
xchg
ins
scas
pop
in
scas
xchg
hlt
sbb
das
jge
stc
and
(bad)
in
outs
popf
or
mov
aam
out
sub
xlat
xchg
retf
dec
xlat
popa
cmp
fnsavew
ret
jbe
dec
enter
adc
inc
movs
imul
out
divps
and
enter
or
adc
popa
pushf
lods
sub
je
jecxz
and
jbe
xor
xor
mov
lods
pop
outs
(bad)
js
sbb
adc
dec
pop
loopne
test
pop
mov
data16
xchg
jns
jge
(bad)
ss
mov
push
jg
pop
mov
outs
int
mov
xor
mov
dec
pop
sti
lods
(bad)
add
xlat
clc
push
popa
mov
ss
mov
jp
xor
sbb
std
cs
xor
cmp
mov
les
jge
ret
div
mov
sbb
addr16
lods
cmp
inc
mov
sub
adc
ins
dec
pusha
mov
ss
mov
imul
mov
mov
out
fcmovnbe
lds
adc
sbb
pop
test
adc
adc
vpcmpgtw
pop
out
ja
lods
or
jl
ror
push
cmps
jmp
out
sbb
jae
cmps
jae
cmp
cmp
out
enter
cmp
pop
rcr
xchg
jnp
or
bound
or
inc
fild
or
cdq
sbb
jp
in
mov
cmp
out
fldenv
and
ror
mov
les
mov
popa
ja
jno
psllw
loopne
sub
cmps
sbb
cmp
sahf
inc
pop
mov
rol
sub
call
xchg
mov
in
push
push
cs
xchg
jge
adc
adc
mov
mov
fs
imul
daa
push
xor
gs
dec
or
out
push
cwde
xor
test
jp
lods
mov
xor
push
mov
or
jge
arpl
cmps
mov
push
stos
xor
xchg
test
cmc
in
mov
pop
inc
and
es
and
mov
xor
mov
out
mov
push
into
cmp
push
xor
mov
cdq
call
aaa
ret
test
in
adc
dec
nop
fwait
(bad)
pop
mov
movs
addr16
jne
loope
loope
jo
sbb
sbb
push
sub
hlt
dec
push
mov
push
dec
sub
inc
sbb
inc
call
mov
mov
push
pop
in
les
je
mov
pop
xor
sbb
arpl
or
and
test
push
cmp
sar
inc
jo
mov
xchg
xor
cmp
inc
movs
and
xor
pop
into
and
jmp
and
fdiv
pop
dec
shr
and
adc
inc
aad
pop
dec
jge
les
fld
cdq
shr
inc
jp
sti
or
outs
xchg
sti
fisub
imul
cmps
rcl
popf
inc
and
inc
test
sub
pusha
fiadd
push
rcl
movq
mov
inc
pop
cwde
repz
dec
fsubr
jns
fs
aaa
jmp
inc
inc
or
cdq
and
dec
(bad)
repz
ret
lods
imul
fs
adc
test
jo
ss
ds
jb
test
out
xchg
inc
lds
cmp
cmp
stc
sbb
push
test
cli
lahf
mov
enter
cmp
sti
mov
into
ror
pushf
push
(bad)
jl
hlt
psadbw
repnz
dec
in
mov
push
adc
out
(bad)
in
and
xor
or
or
jnp
test
push
push
sub
daa
fmul
retf
add
gs
loope
dec
mov
mov
shr
xlat
clc
inc
jg
ss
ja
rcl
and
inc
sahf
add
out
or
sar
loopne
xchg
movhps
in
pushf
pop
rcl
xchg
and
in
pop
lods
dec
mov
cld
mov
js
outs
loop
pop
mov
xchg
xchg
mov
repnz
leave
push
jns
pop
sub
cmp
and
mov
sbb
aad
mov
scas
jns
pushf
jmp
xor
or
in
(bad)
xchg
or
jns
fimul
iret
add
mov
adc
shl
icebp
push
das
fist
inc
xchg
mov
inc
cmps
add
jmp
push
into
pushf
ja
mov
jmp
shl
add
push
sbb
enter
retf
out
inc
add
sbb
outs
lds
call
pop
stc
sbb
and
stos
imul
pop
pushf
push
bound
jns
mov
cmps
ja
or
pop
jnp
mov
loop
jp
jmp
or
push
in
jo
mov
dec
sub
dec
fcomip
je
jo
out
lock
outs
push
pop
loopne
pop
imul
(bad)
bound
push
jmp
jb
ja
or
xor
pop
xchg
jle
push
(bad)
das
(bad)
dec
clc
mov
stos
xor
mov
push
retf
jle
sub
or
imul
mov
cmp
add
adc
aad
adc
mov
push
sti
icebp
mov
push
xchg
cmp
scas
sbb
pop
gs
add
popf
mov
fbld
adc
and
mov
mov
inc
push
mov
rcr
pop
lds
test
ret
jge
cdq
xlat
mov
cwde
fldenv
mov
pop
inc
(bad)
pop
and
mov
mov
xor
icebp
fadd
aas
mov
cmps
mov
sbb
pop
pop
inc
add
in
daa
xlat
cld
cs
div
iret
nop
lods
xor
jnp
mul
(bad)
or
xchg
xchg
inc
out
mov
jl
adc
push
adc
data16
test
sbb
jno
test
out
mov
shl
or
out
fimul
jno
jle
mov
into
and
test
pop
xchg
jae
mov
pop
cwde
dec
jo
retf
inc
pop
fistp
mov
jmp
mov
fcmovu
sahf
mov
bound
pop
mov
test
mov
xor
and
mov
stc
and
sahf
mov
jmp
cli
neg
fisub
push
repnz
cmp
add
or
lds
jnp
mov
mov
retf
lahf
loope
jo
add
je
pop
ss
(bad)
mov
cmp
leave
inc
cmp
mov
arpl
je
push
xor
out
mov
je
xchg
xchg
je
xor
cmps
pop
out
inc
jmp
pop
push
jne
in
scas
leave
sub
pop
shl
sar
sub
aam
(bad)
add
dec
sahf
sbb
add
pop
ds
mov
adc
lods
cmp
pop
jmp
jne
inc
mov
bound
fs
shl
fst
adc
pop
xchg
(bad)
push
ja
jns
popf
bound
adc
test
mov
cli
out
mov
xchg
mov
push
jge
add
aas
sbb
call
mov
pop
add
push
lods
test
add
std
and
fidivr
jo
push
sub
into
push
or
xchg
(bad)
fild
and
pop
inc
icebp
xor
cli
int3
or
sub
jno
xor
pop
mov
in
lock
and
mov
movs
jnp
adc
shr
cli
or
sbb
and
stc
adc
jmp
aas
push
aam
cmp
hlt
clc
xor
dec
sbb
ffree
pop
cdq
aaa
adc
sahf
mov
imul
cld
mov
(bad)
int
adc
adc
outs
and
(bad)
int3
ror
push
ja
gs
mov
pop
jns
sub
inc
jmp
sub
in
push
and
ret
les
jecxz
and
pop
dec
mov
icebp
xor
cdq
lahf
pop
sbb
jnp
inc
int
mov
lea
or
mov
ins
movs
daa
jno
inc
test
mov
scas
cld
or
ja
ret
mov
in
push
mov
xor
shr
jge
add
or
lahf
dec
xchg
and
inc
test
dec
or
out
pop
das
dec
sti
sbb
xor
cmps
or
shr
adc
ds
loop
xchg
jp
and
je
(bad)
iret
aas
fs
or
mov
mov
pop
inc
cli
mov
movs
mul
mov
retf
sub
add
lock
out
push
stos
sbb
inc
call
sub
(bad)
sbb
adc
dec
jne
call
jmp
mov
lods
and
jb
test
cmp
cmp
cmp
cmp
call
stos
cld
(bad)
jle
inc
cmp
lods
cmc
retf
adc
mov
fstp
mov
add
xor
jle
or
and
mov
lods
(bad)
adc
leave
lea
or
adc
movs
repz
dec
cli
in
push
and
(bad)
sbb
pop
and
mov
ror
add
int3
sbb
out
jecxz
pop
mov
xor
sub
xor
ror
cld
xchg
add
mov
jp
dec
adc
unpcklps
mov
xor
sbb
sub
xchg
in
adc
(bad)
cdq
outs
hlt
lods
aaa
repz
loop
arpl
mov
dec
pop
adc
sar
lods
xchg
loopne
sub
add
scas
push
out
movs
mov
ds
js
imul
jecxz
sub
int3
ret
push
out
jmp
xchg
xor
adc
cld
retf
(bad)
cmp
inc
inc
stos
fidiv
and
pop
rcr
fsub
or
xchg
leave
stos
(bad)
add
(bad)
lock
pop
lahf
stos
lods
add
cmp
jne
mov
add
stos
mov
push
call
ds
(bad)
aad
jno
ds
js
and
fs
mov
cwde
(bad)
out
(bad)
in
cmps
pusha
(bad)
icebp
jo
or
pop
inc
pop
fisttp
push
mov
inc
enter
in
push
scas
jne
push
pushf
stos
arpl
je
inc
push
or
enter
add
loopne
fidivr
test
mov
dec
push
push
push
jae
inc
cmp
push
call
sbb
(bad)
stc
xchg
mov
bound
ds
(bad)
cmp
jnp
daa
retf
jge
pop
shl
add
or
sub
stos
cmp
ja
cmp
sub
cs
popa
(bad)
movs
pop
xor
xor
repz
jnp
nop
cld
dec
cmp
xchg
daa
mov
rol
shr
aad
scas
adc
cld
jno
test
push
int3
mov
aam
sub
add
push
or
inc
fstp
and
pop
fisttp
cdq
ja
push
ret
scas
cmp
xor
and
jmp
jmp
pop
call
loop
jge
xlat
popf
rol
fimul
fstp
lock
sub
adc
and
mov
out
inc
movs
loope
popa
(bad)
lock
in
sub
xor
iret
cmp
mov
pushf
dec
shl
imul
push
dec
aas
xor
pop
hlt
js
mov
sub
retf
jecxz
test
ficom
fld
clc
jae
icebp
call
mov
in
fcomi
pop
std
loop
or
add
std
test
sub
loopne
dec
aaa
push
sahf
xchg
in
shr
dec
(bad)
mov
or
dec
mov
xor
dec
scas
pusha
xor
and
jo
lods
in
jno
aam
xchg
hlt
gs
cmc
push
hlt
add
pop
mov
jno
fnstsw
sbb
or
mov
push
dec
loope
dec
(bad)
cmp
lods
aas
push
ret
test
movq
mov
pop
pushf
dec
arpl
inc
ret
(bad)
imul
sti
adc
aad
jp
popa
adc
mov
cmovs
jno
test
push
mov
mov
call
xor
cmps
dec
imul
popa
sahf
cmps
push
xlat
sub
in
clc
shl
(bad)
mov
sbb
pushf
mov
mov
aaa
fsub
rep
adc
pop
mov
into
add
jmp
fs
movs
icebp
inc
dec
dec
test
stos
fidiv
lds
mov
mov
adc
sbb
(bad)
jmp
sbb
xor
popa
add
imul
adc
ret
mov
mov
sub
je
jmp
sti
xor
adc
popf
xor
push
lds
sub
mov
dec
inc
ret
fist
scas
call
jmp
xor
daa
pop
jge
test
int
pop
imul
fild
mov
sub
pop
hlt
mov
sbb
jge
sbb
push
xchg
sahf
(bad)
mov
mov
add
add
aad
cli
push
scas
push
jb
mov
hlt
add
nop
sbb
push
psraw
lods
mov
mov
mov
mov
out
shr
add
jnp
call
nop
fsubp
mov
iret
xor
das
popa
push
push
(bad)
sbb
sahf
inc
leave
or
ja
mov
inc
jns
(bad)
mov
mov
pop
enter
mov
or
adc
call
mov
in
dec
jno
pop
sub
jle
sub
ins
movs
lea
int3
sub
or
pop
cmp
loopne
mov
retfw
test
jne
addr16
aas
push
mov
jge
and
mov
pop
cmps
(bad)
leave
sbb
lahf
sub
and
xlat
xor
sbb
pop
inc
outs
mov
lock
mov
cmp
div
fldenv
pushf
push
outs
add
sbb
ds
mov
mov
lock
bound
and
and
jne
mov
push
mov
add
aas
dec
sub
push
shl
stc
or
cmc
dec
mov
sub
aas
inc
xchg
add
enter
xor
fild
outs
mov
mov
test
or
mov
pop
pop
call
xchg
push
fdiv
test
mov
ins
in
leave
js
push
cmp
mov
push
inc
outs
mov
jge
fwait
pop
movs
sbb
rcl
mov
jmp
lods
sbb
and
cs
data16
mov
ret
push
cs
lods
and
sbb
pushf
imul
ss
push
add
mov
(bad)
xor
rcl
sar
cmc
cmps
mov
lods
add
call
sar
out
push
in
add
push
imul
xchg
dec
fldenv
adc
cwde
cmps
cmps
sub
adc
out
call
out
(bad)
xchg
(bad)
dec
imul
pop
or
retf
das
cli
jp
xchg
jg
inc
or
in
adc
adc
stc
arpl
push
jmp
mul
pop
(bad)
mov
adc
cmps
xchg
loop
cmp
inc
out
ins
(bad)
pop
adc
and
xor
cmp
xchg
xor
bnd
loopne
xor
daa
xor
xchg
pop
or
jno
cdq
add
mov
aad
dec
test
or
and
clc
sar
push
pop
ins
jg
fsubr
pop
leave
and
lock
stc
std
hlt
sub
popf
fwait
mov
mov
xor
mov
push
in
and
pushf
in
je
out
cmp
das
cmps
jnp
push
jnp
leave
test
dec
or
inc
jmp
repnz
stos
cmp
and
mov
mov
and
jmp
mov
inc
mov
and
cmp
das
ret
test
add
inc
dec
and
js
ud2
cld
ror
pop
xchg
fwait
les
in
adc
push
loop
push
push
pop
xor
(bad)
lods
ja
ins
fsubrp
das
pop
(bad)
(bad)
jb
dec
jp
out
xchg
ret
arpl
xor
rcl
jne
shl
pop
imul
mov
repz
push
mov
mov
rol
adc
and
mov
jbe
fcomp
xlat
sub
sahf
fisub
add
in
out
ds
or
(bad)
mov
jns
and
loop
bound
pop
lock
not
jbe
fwait
pop
mov
into
mov
and
hlt
je
add
addr16
push
(bad)
repz
inc
xchg
dec
out
adc
test
push
cmp
dec
pop
bound
cli
mov
jmp
xchg
push
in
add
loope
xchg
test
mov
jae
jae
inc
adc
xor
pusha
push
scas
push
mov
(bad)
js
sahf
xchg
rcr
test
push
loopne
cmp
cmps
inc
xchg
cld
pop
lock
test
mov
ficom
(bad)
pop
pop
shl
dec
mov
imul
sti
fsubr
pushf
aad
adc
idiv
push
fisttp
cmc
dec
jne
icebp
aaa
inc
enter
inc
inc
popa
out
pop
dec
jb
adc
sbb
gs
(bad)
cmp
push
sbb
shl
or
lods
div
popf
xor
mov
mov
jae
fsubr
out
pop
inc
test
sti
fistp
mov
dec
(bad)
(bad)
inc
js
jb
dec
mov
hlt
or
inc
xlat
inc
jge
sub
mov
mov
pop
out
in
rcl
outs
lods
push
cmc
test
xchg
fsub
repnz
mov
inc
sub
xor
jge
retf
cmc
stc
dec
leave
popf
mov
mov
int
sbb
xor
mov
jae
inc
add
push
jmp
std
repz
inc
pop
in
jmp
das
dec
sbb
fisub
bound
xor
add
xchg
pop
jns
or
sar
add
mov
xor
xor
dec
push
push
repz
push
(bad)
hlt
sbb
mov
mov
add
std
cwde
loopne
rcr
inc
hlt
cdq
add
out
(bad)
shl
and
shl
repz
push
scas
jb
fld
add
dec
mov
adc
mov
neg
push
in
cmps
inc
dec
fwait
mov
scas
xor
arpl
fwait
inc
ins
adc
sbb
mov
cmps
cdq
mov
mov
test
push
push
mov
std
ins
push
nop
xor
shr
mov
div
gs
arpl
and
or
mov
pop
(bad)
adc
xchg
mov
inc
jns
dec
xchg
sub
sub
adc
jmp
xchg
pop
mov
jg
fldcw
cwde
and
addr16
test
xor
sub
inc
cs
aas
shr
mov
mov
gs
rcr
dec
sbb
jge
movs
leave
mov
jle
xchg
xor
iret
lahf
fld
fwait
rcr
add
das
hlt
cdq
inc
cmp
loope
fs
xor
nop
stos
lea
aam
mov
ss
mov
sar
aad
retf
dec
pop
lahf
lds
mov
cwde
and
push
ss
xchg
shr
imul
adc
mov
out
push
xor
int
cld
test
stos
cmp
push
xchg
sub
imul
cld
fnsave
addr16
scas
lea
cmp
pop
mov
sub
in
(bad)
ja
dec
mov
jl
mov
outs
lds
test
add
retf
aaa
cli
enter
sbb
cmps
push
movs
(bad)
xchg
sub
dec
jecxz
cld
lahf
and
adc
ret
ret
cwde
out
enter
pop
mov
pop
lods
mov
mov
pop
jmp
jno
aam
mov
jns
xor
sar
push
cmc
sbb
mov
adc
mov
test
push
scas
mov
out
adc
outs
inc
retf
cmp
sub
ja
cmc
cmp
pushf
int
repz
fs
je
xor
mov
pop
cmp
mov
sbb
add
mov
jae
or
xor
or
inc
test
inc
inc
into
mov
push
pop
adc
call
outs
push
jmp
(bad)
mov
mov
adc
add
xor
ja
lea
sbb
push
cmp
xchg
inc
(bad)
xor
shl
in
adc
retf
ret
xor
fcom
stos
cli
nop
out
jge
add
call
and
xor
mov
inc
fcmovb
and
jle
int3
sbb
daa
mov
sahf
xor
dec
xchg
stc
add
xor
stos
sbb
gs
mov
mul
fldz
mov
adc
mov
scas
push
int
mov
out
adc
xlat
and
jns
shr
pop
xlat
sahf
push
push
mov
jae
pop
and
jge
lds
pusha
mov
adc
dec
xchg
ins
call
mov
in
adc
jecxz
rcr
jno
fadd
(bad)
shl
or
jnp
nop
sub
pop
and
jle
lea
in
shl
loope
push
loop
add
mov
and
or
int
(bad)
pop
add
and
setbe
or
rcr
cmps
pushf
jl
loope
stos
rcr
imul
xor
div
mov
xor
ss
pop
mov
test
jns
sub
lock
lds
in
or
std
rol
(bad)
fst
jbe
imul
fst
push
adc
or
push
adc
sahf
jl
or
rcl
loopne
or
test
or
xlat
dec
mov
test
xor
and
push
fimul
xchg
xchg
add
sti
test
hlt
pop
jb
adc
test
mov
pop
repz
ss
cdq
add
dec
xor
pusha
aam
leave
imul
retf
sub
xor
sub
lea
outs
lahf
stc
mov
clc
and
pop
in
push
and
adc
out
mov
cmp
hlt
sahf
mov
outs
xor
xor
and
mov
xchg
(bad)
(bad)
fisubr
das
cmp
xchg
stos
dec
push
sbb
test
psubsb
cmp
or
inc
push
fisttp
mov
mov
xchg
cmp
jge
cmp
xchg
xor
jp
popa
and
ja
jge
jne
xchg
or
es
pop
mov
aad
mov
adc
mov
dec
stos
(bad)
or
mov
sub
test
adc
dec
outs
shl
or
mov
inc
pop
pop
(bad)
sbb
mov
out
or
cwde
fst
cli
dec
jbe
lea
or
ss
out
fidivr
pop
or
pop
add
mov
in
loop
inc
pop
jp
and
xchg
in
iret
cmps
lock
(bad)
(bad)
mov
loope
imul
out
mov
in
std
ins
jecxz
pop
shl
lods
out
stos
sbb
mov
cmps
dec
stc
jg
jecxz
sbb
shr
cmp
sbb
stos
scas
mov
cld
js
pop
cmp
ret
sbb
push
sbb
lea
cmovs
and
sbb
aas
jns
xor
iret
adc
cld
jb
sub
jae
or
fcom
ins
mov
js
sub
fild
ins
fdivr
(bad)
loop
adc
jg
sti
jl
fld
shl
sub
das
fst
sbb
ss
imul
or
or
loopne
ret
pop
ds
rol
and
loop
jmp
stc
sbb
sub
mov
push
mov
and
stos
sbb
shl
pop
and
(bad)
loop
mov
push
cmp
add
pop
call
pop
lods
cmp
in
mov
dec
sub
mov
inc
cmp
das
iret
and
push
arpl
or
xchg
(bad)
popf
lods
setl
(bad)
les
lods
pop
push
test
lahf
sbb
or
mov
(bad)
jg
loopne
jnp
shl
gs
cli
fidiv
(bad)
out
into
fistp
lods
xlat
aaa
adc
fwait
jge
push
inc
popa
ins
mov
dec
jnp
push
stc
sbb
out
pusha
xor
cli
mov
jge
mov
dec
hlt
rol
out
sub
(bad)
sti
push
inc
pushf
stos
pop
aaa
retf
mov
addr16
mov
cmp
xchg
outs
out
and
(bad)
ror
sub
aam
sbb
data16
loope
cmp
jne
retf
mov
pop
push
sub
pop
pushf
ins
movs
sbb
imul
enter
sub
or
cmps
dec
test
xor
getsec
jle
imul
retf
test
das
(bad)
scas
add
inc
call
icebp
mov
test
push
push
hlt
nop
xchg
fidivr
inc
out
push
stos
cmc
jle
jne
hlt
cmp
sahf
push
and
popf
movs
ins
push
sbb
sub
mov
int3
sub
loop
sub
cmp
fsubp
movs
adc
jmp
pop
ret
add
dec
fsub
push
xor
das
(bad)
cmp
xor
adc
ins
in
(bad)
mov
xchg
sahf
mov
mov
pop
leave
hlt
cmps
inc
test
add
and
or
adc
(bad)
movs
inc
mov
mov
mov
(bad)
sbb
sbb
adc
scas
lahf
outs
std
fistp
xor
arpl
out
std
xor
xchg
loopne
popa
scas
out
inc
test
and
pop
int3
mov
mov
lds
cwde
fdivr
xor
mov
ret
stos
mov
mov
shl
int3
stc
xchg
idiv
push
and
sub
jb
sub
cs
imul
pop
pop
inc
pusha
ret
aam
call
dec
mov
mov
cmps
sbb
retf
outs
aad
mov
and
jp
cmp
or
gs
gs
inc
call
xlat
mov
dec
mov
clc
and
out
dec
xchg
into
outs
aas
mov
dec
pop
add
in
and
inc
jge
jle
dec
push
dec
enter
(bad)
test
ret
(bad)
int
cmps
pop
jo
leave
sti
rcr
retf
push
pop
jecxz
shr
(bad)
mov
fldcw
fwait
push
fdivr
sub
push
bound
out
mul
push
sahf
push
inc
in
inc
xor
int3
out
mov
adc
mov
push
and
sub
dec
or
xor
adc
int3
push
cmps
and
and
inc
sub
test
push
movs
xchg
jno
ret
mov
xchg
adc
xchg
adc
outs
call
mov
not
add
mov
(bad)
cmps
inc
add
adc
add
mov
sbb
and
ds
sbb
pop
(bad)
(bad)
lods
loopne
leave
xchg
sahf
push
mov
ret
fsub
cmp
aam
cmp
je
aas
dec
push
cmp
xchg
test
mov
add
loope
mov
fisubr
test
pushf
jle
cmps
xor
push
(bad)
cmp
sbb
push
mov
or
repnz
adc
(bad)
into
xor
and
mov
scas
inc
(bad)
push
fild
outs
mov
ss
out
pop
fadd
jl
mov
int3
lahf
mov
int3
fnstcw
inc
inc
fdivr
test
dec
inc
call
jne
cli
push
and
(bad)
mov
push
mov
push
and
loop
cmp
sahf
cmp
fild
or
dec
add
loop
fimul
or
mov
aas
push
imul
push
jp
pusha
div
sbb
or
xchg
inc
fild
cld
pushf
adc
cwde
scas
cmps
or
add
out
sbb
jno
mov
outs
sub
mov
ret
ret
add
xor
aam
mov
stc
xor
retf
ds
(bad)
repnz
out
imul
rcl
xchg
or
jmp
dec
add
call
pop
mov
mov
fadd
sbb
retf
and
push
es
inc
iret
outs
adc
xchg
mov
in
cmps
adc
jmp
xchg
out
adc
out
xchg
push
jmp
xchg
lds
cmp
test
arpl
imul
push
int3
or
aam
jmp
mov
and
pop
pop
ficom
add
pushf
ror
repnz
xchg
push
jb
adc
adc
adc
inc
jmp
sbb
clc
dec
out
dec
sar
int
dec
fwait
push
pop
xor
push
xchg
add
cmp
adc
sbb
scas
(bad)
sbb
int3
mulps
(bad)
and
movs
xchg
in
mov
mov
or
dec
out
mov
loopne
aad
cs
xchg
xchg
iret
stc
cmp
inc
cwde
push
inc
xchg
jnp
mov
sub
add
jns
add
lock
(bad)
cmps
mov
sbb
xor
xchg
pop
lahf
adc
cmc
pushf
ror
inc
jae
cmp
iret
retf
cli
and
call
data16
xchg
ja
pop
xchg
mov
ret
(bad)
sbb
push
cld
int
xchg
xor
sub
push
mov
push
push
test
push
lock
movs
lahf
xor
jno
xchg
jbe
icebp
enter
dec
sub
cwde
mov
outs
add
inc
gs
(bad)
mov
cmc
aad
push
dec
out
mov
mov
aas
push
pop
movs
add
and
mov
adc
call
xchg
fwait
cvtdq2ps
or
pop
xor
mov
aas
xchg
int3
xchg
push
jae
adc
xor
mov
xchg
cmp
stc
mov
push
mov
out
out
das
mov
sbb
mul
dec
popf
fnsave
jo
stc
repnz
push
sbb
mov
xchg
adc
movs
out
dec
xchg
les
cs
xchg
jmp
push
icebp
sti
inc
stos
sub
inc
inc
gs
jns
mov
sub
repnz
test
cld
adc
sub
fsub
bnd
rol
mov
jmp
lea
call
scas
xor
ins
adc
iret
addr16
rol
push
dec
icebp
dec
mov
ins
pop
enter
jnp
rcl
in
and
retfw
dec
mov
cld
iret
dec
and
xchg
leave
dec
jae
fnstsw
add
cmp
cdq
mov
cmp
retf
imul
jb
jo
out
daa
stos
cmp
sti
mov
fiadd
pcmpeqd
push
sti
stos
mov
cmp
ss
pop
mov
fstp
inc
jnp
jo
push
mov
in
xchg
pop
sahf
inc
out
sbb
adc
int
mul
fcmove
cmps
mov
(bad)
push
dec
int
ins
leave
add
aad
and
jbe
(bad)
xchg
xlat
xor
in
dec
push
dec
cld
fxch
cdq
out
sub
and
stc
cmp
dec
int
stc
inc
rol
icebp
pop
lods
aam
sub
(bad)
or
add
out
(bad)
div
xchg
xor
ret
add
(bad)
or
loopne
inc
adc
fild
or
cmp
into
mov
sbb
popa
daa
cmp
jmp
push
inc
cmp
movs
addr16
popf
push
shr
aam
adc
mov
dec
les
push
mov
mov
iret
outs
dec
inc
enter
test
or
adc
stos
imul
(bad)
xor
clc
mov
or
fnstenv
imul
ss
pop
ret
mov
ds
popf
test
pop
or
(bad)
cld
mov
xor
or
pop
pop
mov
adc
xchg
xchg
ins
lds
xor
adc
dec
data16
sbb
dec
xor
fld
jl
and
das
retf
jae
std
or
nop
iret
call
es
cmp
mov
inc
(bad)
xchg
jmp
pusha
call
xchg
test
cld
push
inc
and
or
sub
push
addr16
cmp
imul
outs
dec
push
sub
jecxz
aas
pop
and
jmp
fstp
ror
into
add
mov
cld
bound
mov
push
das
mov
retf
and
mov
or
ret
fwait
mov
loop
push
sub
pop
jmp
sti
or
loop
out
cmp
jp
sub
stos
loope
cld
fstp
addr16
dec
cs
jecxz
jle
cmp
in
cwde
fnstsw
rcr
push
neg
cmp
mov
div
popf
mov
sub
mov
xlat
cmp
stos
or
cmp
leave
push
push
mov
imul
mov
ds
inc
aam
jno
adc
push
shr
popa
in
xlat
fcomi
test
inc
and
mov
or
lock
sbb
mov
pop
outs
ror
inc
push
and
call
jg
sub
mov
pop
sub
imul
pushf
add
or
xchg
xchg
dec
ret
das
push
mov
cmc
iret
adc
jo
test
dec
movs
fidivr
jae
std
sbb
popf
scas
stos
pusha
xchg
jo
repnz
out
hlt
mov
scas
mov
stos
inc
imul
jns
xor
dec
push
aas
je
sbb
outs
mov
push
cmps
push
push
das
xor
in
and
pop
and
sbb
or
adc
add
lea
inc
push
loop
arpl
ins
inc
sbb
cmp
jns
cmp
jns
loop
jecxz
cwde
fld
jg
dec
retf
mov
and
adc
fiadd
and
scas
fldcw
pop
add
or
ret
bound
jno
mov
xchg
fist
(bad)
sti
mov
lahf
ror
add
and
inc
mov
jno
popf
dec
inc
dec
(bad)
pop
inc
int3
pop
and
bound
jmp
enter
rol
xor
jecxz
daa
jnp
pusha
arpl
push
loope
hlt
mov
sbb
sub
and
fdiv
jns
(bad)
std
sar
add
cmp
mov
ret
xchg
rcr
movs
mov
pop
dec
je
xor
inc
imul
mov
push
inc
jno
xor
not
inc
test
sqrtps
push
mov
ins
lock
mov
retf
pop
sbb
and
dec
pop
nop
repnz
dec
call
mov
leave
aas
daa
sbb
rcl
pusha
call
jmp
xchg
pushf
jne
cli
mov
or
push
mov
push
ins
or
pop
fidivr
jnp
sar
sub
cmp
or
enter
ss
pop
loopne
scas
test
pop
adc
xor
sub
inc
jb
mov
ja
mov
out
adc
pop
adc
push
xchg
cwde
in
out
das
test
nop
push
fs
jno
or
mov
stos
iret
enter
push
add
add
test
call
test
mov
xor
and
xor
push
sub
or
or
xor
icebp
popa
sub
sbb
test
idiv
loope
pushf
ins
push
sbb
call
push
cwde
mov
push
sbb
mov
mov
das
jp
mov
aad
clc
push
clc
hlt
adc
(bad)
push
inc
jmp
shl
xchg
xchg
out
sub
pop
push
mov
stc
mov
jcxz
fild
jge
dec
ja
les
outs
mov
xchg
sbb
imul
push
xchg
sbb
scas
cwde
mov
or
pop
cmc
push
sbb
arpl
fisttp
or
mov
cli
jne
and
das
mov
jo
(bad)
dec
int
sub
test
push
mov
add
pop
and
sbb
adc
out
sbb
add
adc
add
push
mov
aam
fs
aas
mov
ficom
jbe
xor
movs
jnp
cmp
cmp
pop
or
fwait
and
rol
aad
add
adc
mov
push
add
mov
or
pop
sbb
lea
jle
xor
xchg
stc
pusha
call
ss
jmp
pop
aad
fsub
in
cwde
add
mov
jne
sub
ret
jle
mov
cmp
cmp
outs
lock
lahf
add
ss
push
fs
sub
pop
or
mov
push
call
add
adc
xor
outs
rcr
stc
sub
repnz
scas
cmc
cmp
aaa
scas
jne
cmps
jo
fs
pop
dec
add
dec
jbe
adc
lods
inc
pop
xor
icebp
loope
jp
ss
add
xchg
outs
jo
adc
cmp
out
je
ret
imul
adc
mov
dec
(bad)
jl
cld
add
jns
mov
xor
retf
mov
fisub
rcl
mov
dec
(bad)
cmp
in
adc
imul
shl
adc
aas
aaa
inc
sub
jg
ds
inc
push
out
test
jmp
xchg
xchg
fs
lods
popa
imul
push
addr16
mov
add
stos
aad
pop
cmp
aad
xor
sbb
shr
mov
out
lahf
in
jnp
cmps
int
sbb
imul
mov
pop
cli
ror
mov
enter
pop
mov
pusha
cmp
or
leave
pop
je
pusha
(bad)
mov
lahf
or
jmp
sar
push
js
pop
es
rol
jecxz
and
jne
xchg
cmp
call
and
stos
xor
xor
addr16
jns
push
adc
jecxz
in
dec
sub
push
movs
scas
xchg
cli
pop
push
cmp
es
push
mov
mov
push
and
shr
aam
jb
mov
dec
mov
add
mov
or
xor
popf
je
mov
movs
test
inc
fwait
adc
inc
mov
fimul
data16
cmp
jb
jns
repz
push
mov
push
mov
in
push
inc
jb
outs
(bad)
imul
cwde
outs
sbb
mov
jle
xchg
xchg
cmp
hlt
cmps
xlat
mov
jl
out
fwait
sbb
adc
arpl
aas
push
jnp
sti
leave
retf
fistp
nop
add
mov
neg
add
ins
dec
add
xchg
and
pushf
ror
nop
sahf
outs
adc
sub
push
aam
push
adc
imul
jns
xchg
mov
not
in
xchg
jl
and
add
xor
xchg
scas
adc
loope
bound
sub
sbb
jl
das
stc
mov
cdq
push
jge
shl
es
dec
pushf
and
pop
imul
inc
into
fs
ret
sbb
jl
fs
pop
cmp
cwde
hlt
mov
ins
mov
pop
hlt
mov
or
mov
jmp
rcl
pop
pop
lea
push
or
lock
jb
test
fild
movs
cwde
ins
lds
hlt
(bad)
sub
hlt
setp
inc
pop
std
jmp
add
retf
cmps
imul
inc
add
ror
pop
mov
nop
lea
push
fstp
repz
mov
movs
aas
inc
inc
adc
inc
and
into
push
dec
cmp
jl
test
mov
retf
xchg
xor
ss
adc
int3
push
fs
out
fdivr
movs
pop
js
es
xchg
out
mov
push
sahf
fisttp
inc
loope
in
pop
xchg
aam
pop
pop
fsub
repnz
cmps
mov
mov
pop
je
jnp
jge
dec
cmovae
push
xlat
std
dec
dec
pop
je
cmp
adc
js
cmps
cli
or
push
and
push
cmp
inc
loopne
sbb
test
and
mov
jl
mov
and
push
test
mov
ror
xlat
and
scas
lahf
in
sub
add
add
adc
jbe
pop
cmps
int
add
loop
and
test
jns
(bad)
pop
add
sub
add
jecxz
xchg
fsubp
xor
in
push
xor
hlt
adc
xchg
cmp
and
repz
xor
rcl
nop
cwde
cdq
dec
iret
jb
and
outs
push
imul
fsubr
mov
mov
jecxz
mov
outs
pop
sub
fidiv
cmp
pop
data16
aad
xor
jne
add
pop
outs
hlt
mov
lods
loop
and
mov
mov
bound
and
push
mov
ds
je
hlt
xor
cmp
stos
out
mov
push
stos
jge
add
push
mov
int3
xchg
pusha
popa
mov
jge
jns
pop
cmp
enter
mov
out
push
push
imul
adc
rol
(bad)
fisub
inc
push
aam
daa
or
or
out
pop
sbb
pop
lods
out
add
scas
inc
loopne
mov
jg
inc
inc
mov
ins
cmp
lds
pushf
(bad)
mov
add
call
loop
loope
rcr
lods
test
gs
add
stc
fs
call
pop
ret
out
xchg
in
push
aaa
aam
jmp
dec
(bad)
pop
jae
xchg
outs
sbb
imul
xchg
and
aad
jne
mov
mov
sub
jmp
adc
movs
imul
sti
arpl
inc
loopne
jno
(bad)
sahf
pop
inc
daa
adc
inc
outs
or
out
loopne
pushf
pop
gs
test
ja
in
adc
fcomp
pop
mov
adc
jp
cmp
xor
pop
jb
mov
hlt
jne
push
sbb
nop
xor
test
jge
mov
sbb
les
cli
mov
pop
inc
mov
arpl
xor
in
cmp
js
sbb
adc
add
jge
test
jg
adc
jle
push
(bad)
call
push
das
push
mov
sub
sub
mov
mov
push
sbb
cmps
scas
out
jmp
jmp
nop
mov
stos
jmp
(bad)
mov
nop
popf
inc
out
mov
ret
adc
and
push
inc
mov
inc
out
in
adc
out
dec
xor
cmps
pop
xor
push
jbe
mov
xchg
in
sbb
inc
les
jle
dec
stos
shl
sub
jmp
aam
sbb
xchg
sbb
lds
fiadd
push
ss
xchg
aam
mov
arpl
cmovne
xor
aam
inc
pushf
adc
imul
fnstenv
daa
push
sbb
cmp
mov
mov
aas
cwde
int3
inc
xor
and
mov
adc
cli
jo
pop
mov
mov
mov
pop
ins
sbb
mov
cmp
movs
xchg
mov
add
push
and
shl
mov
inc
sbb
and
shr
push
(bad)
xchg
ret
mov
sub
push
stc
(bad)
lgdtd
leave
mov
xor
data16
(bad)
add
jmp
add
add
ds
retf
retf
xor
stos
pusha
outs
ja
mov
fnstsw
in
aam
adc
in
or
xchg
retfw
popf
push
fwait
and
les
popa
in
cmp
xchg
repz
dec
sub
in
xchg
add
test
test
mov
mov
loope
xor
fwait
or
ret
adc
jo
stos
ret
inc
into
adc
out
mov
loope
clc
lds
lahf
test
pushf
gs
pop
ja
mov
clc
ficom
adc
or
sbb
mov
mov
xlat
call
sti
and
es
sub
pop
sub
mov
lods
adc
sar
sub
mov
and
in
arpl
add
jb
xrelease
pop
test
and
movs
pop
add
sbb
jae
pop
pop
stos
ficomp
inc
inc
xchg
or
arpl
sub
ss
shl
xchg
ja
aaa
adc
popf
xchg
xor
sbb
ret
adc
and
popa
lds
fidiv
xor
sub
test
cmps
movs
inc
mov
pushf
pop
fs
repz
ins
jg
out
out
fadd
out
dec
jl
jno
xchg
sbb
push
xchg
xchg
xchg
mov
pop
pusha
inc
sub
ins
into
movs
xor
xor
ret
pop
adc
jmp
mov
popa
(bad)
or
mov
dec
mov
in
jns
rol
hlt
mov
sub
ja
lock
mov
inc
rol
sbb
aam
jnp
aas
retf
adc
push
out
dec
pop
lds
jae
cdq
dec
mov
fist
mov
fdivrp
aam
jo
fucomip
cmps
xor
jecxz
ja
push
push
das
vpsraw
out
push
pusha
push
in
xor
jo
bound
sub
xor
mov
or
add
imul
loopne
in
cmc
in
mov
and
add
jae
push
xchg
repz
mov
and
(bad)
loopne
sub
stos
test
sahf
dec
neg
pop
sub
pushf
push
clc
mov
nop
jo
mov
test
ss
push
lahf
in
fadd
das
mov
loopne
in
out
es
out
dec
push
pop
xchg
pushf
push
(bad)
fidivr
jne
and
mov
mov
(bad)
or
pop
imul
or
(bad)
xchg
pushf
sahf
popf
add
in
lock
imul
or
add
test
xor
sbb
mov
prefetch
and
cmp
ret
sbb
shl
or
sub
push
pop
mov
inc
scas
cmp
mov
push
leave
and
add
inc
push
pop
fbld
jcxz
(bad)
push
pop
pop
adc
scas
jp
mov
(bad)
es
inc
popa
or
push
popa
mov
jnp
cmp
xchg
and
jae
mov
inc
mov
in
addr16
lds
adc
pop
adc
gs
cmps
push
cdq
(bad)
dec
mov
pop
scas
hlt
int
fstp
xchg
and
out
stos
mov
(bad)
xor
fimul
cmp
pop
imul
mov
mov
iret
xor
cmps
push
jle
sub
jge
(bad)
mov
outs
icebp
push
xor
icebp
mov
jnp
xor
outs
mov
aam
push
(bad)
mov
xchg
(bad)
xchg
int3
sbb
js
sahf
mov
loop
inc
pop
push
bound
mov
mov
clc
repnz
es
inc
mov
shl
adc
mov
imul
or
sub
(bad)
fdiv
test
int3
pop
adc
test
call
xor
xor
cmp
outs
push
sub
out
jno
fs
lock
cmp
adc
adc
inc
xchg
and
jb
or
test
xchg
mov
sub
xchg
les
(bad)
in
ja
pop
cwde
jp
mov
xchg
jne
adc
sti
cmps
add
aad
xchg
push
mov
sub
jno
add
xchg
inc
mov
or
(bad)
shl
fcom
stos
mov
dec
hlt
(bad)
mov
sahf
jnp
movs
imul
pop
(bad)
cmc
dec
repnz
stc
xchg
stos
lahf
xchg
fcom
js
(bad)
xchg
jmp
in
xor
inc
aaa
dec
mov
sub
sti
add
sar
addr16
cmc
dec
xchg
sub
inc
aam
outs
sbb
push
push
dec
mov
ja
adc
call
sahf
cmp
cmps
or
mov
lea
cmps
(bad)
cmp
mov
jo
xchg
sbb
das
mov
(bad)
pop
leave
ss
sub
push
test
sbb
fwait
ret
in
mov
adc
cmp
dec
jle
daa
or
mov
xor
cmp
loop
jb
stc
das
push
push
inc
push
and
je
outs
jbe
ds
and
imul
movs
(bad)
sbb
ins
fld
test
sar
sub
lock
sub
dec
jnp
fisttp
pop
ins
push
nop
jae
and
shl
jnp
int3
push
add
pop
iret
daa
mov
or
hlt
push
and
daa
movs
cmps
(bad)
sbb
sub
leave
repz
lahf
xchg
rol
lea
sub
dec
jns
xlat
out
arpl
lea
mov
dec
ret
or
pushf
stos
push
bound
(bad)
lock
(bad)
sbb
push
pop
fnstcw
sub
clc
adc
cmp
mov
adc
cmps
mov
inc
fsubr
dec
xor
jle
test
sar
push
cmps
movs
ja
test
fld
mov
(bad)
aas
iret
inc
jle
(bad)
adc
add
and
sbb
in
ss
mov
out
addr16
dec
mov
pop
or
and
push
stos
or
fbstp
cdq
ja
push
xchg
inc
fld
push
mov
fwait
aad
sbb
pop
int3
cmp
and
dec
out
push
dec
das
inc
dec
pusha
ins
mov
mov
and
sar
rol
mov
and
test
jno
jle
and
scas
repz
xor
push
std
fnstenv
jne
je
push
aaa
jge
xchg
mov
pop
xor
cmp
dec
pop
(bad)
and
xchg
xor
add
mov
xchg
pop
dec
out
out
imul
adc
mov
test
adc
loopne
outs
pop
xor
xor
mov
adc
int
push
addr16
pop
xor
xor
push
sbb
push
push
pop
mov
hlt
dec
jle
add
cmc
inc
inc
call
test
les
cli
and
in
pop
jb
std
pop
jle
push
add
and
ret
cdq
dec
pop
fdivr
out
fs
rcl
(bad)
sub
sub
shl
or
push
js
repz
mov
int3
fwait
xchg
pop
ret
in
mov
ins
fnstcw
xor
mov
sbb
ins
mov
popf
dec
ins
(bad)
call
mov
mov
test
push
scas
pop
int
add
mov
push
outs
sahf
arpl
jns
aas
sub
cwde
xor
call
xchg
stos
inc
dec
adc
mov
push
imul
cmp
xchg
jo
xor
dec
add
clc
movs
outs
or
jp
cmps
retf
imul
ja
out
pop
pop
mov
ja
jp
std
fwait
xor
pop
push
cmp
mov
push
add
adc
mov
push
mov
rcl
fwait
pusha
lea
stos
sbb
mov
mov
dec
movs
mov
aam
sub
pop
dec
adc
nop
and
(bad)
and
push
mov
hlt
test
arpl
push
xlat
xor
or
xchg
mov
mov
mov
ficomp
jnp
sbb
sbb
dec
out
pop
xor
push
mov
lock
and
jae
ficomp
mov
shl
in
xchg
jne
push
pop
(bad)
lea
inc
mov
mov
sbb
and
mov
push
push
xor
sub
jne
jmp
outs
outs
inc
sbb
and
aad
out
or
mov
pop
ins
push
push
sbb
jo
aam
(bad)
jmp
pop
mov
push
mul
pushf
popa
jl
iret
ins
aad
sub
out
test
pop
enter
loop
shr
movs
dec
fld
rcl
cmc
bound
bnd
xchg
sub
les
(bad)
mov
adc
mov
test
xchg
(bad)
(bad)
fwait
movs
in
xchg
out
sub
lahf
cmp
aam
movs
mov
push
sbb
fisubr
mov
jmp
pop
sub
push
jno
jne
xor
div
call
push
sbb
in
retf
cmps
jge
movs
mov
out
mov
lock
push
nop
movs
xchg
popa
in
xlat
addr16
cli
repnz
mov
cwde
(bad)
cmp
in
add
mov
fdivp
and
pop
mov
adc
mov
data16
xchg
xchg
test
xor
mov
push
out
sub
jns
fs
dec
push
xlat
jge
clc
int3
mov
mov
pop
mov
mov
add
mov
into
push
cmp
(bad)
lea
outs
inc
xchg
sbb
icebp
fldenv
mov
in
jo
jae
pop
sahf
in
cwde
fmul
mov
ret
repz
(bad)
std
retf
pop
xor
ins
adc
pop
mov
in
xor
dec
dec
sbb
pushf
jge
jle
cmp
mov
mov
xor
push
je
leave
je
(bad)
iret
pop
fld
mov
addr16
data16
push
inc
sub
std
or
inc
sbb
rcl
fwait
ds
inc
cmps
repnz
dec
nop
push
(bad)
shl
and
push
mov
inc
les
add
xchg
push
repz
neg
cmp
xor
into
mov
cmp
les
push
xor
and
mov
mov
out
cmp
mov
call
sbb
outs
daa
stc
pop
popa
fsub
pop
pusha
xchg
dec
arpl
lods
push
push
dec
inc
mov
stc
mov
cmp
adc
addr16
in
mov
add
(bad)
ins
enter
jp
scas
or
add
jmp
dec
js
push
ds
mov
add
enter
movs
leave
retf
(bad)
ficomp
scas
punpckhdq
or
js
mov
add
push
fldenv
imul
pusha
int3
mov
outs
sub
scas
ss
cli
(bad)
(bad)
rcl
pop
dec
aad
loope
inc
(bad)
and
xor
fisub
test
dec
sbb
mov
add
fcom
jns
inc
dec
idiv
pop
cmp
out
and
fcomp
jmp
pop
lock
adc
fisttp
in
int
nop
hlt
sbb
(bad)
js
push
jmp
mov
mov
push
cmp
and
and
stc
jno
daa
inc
div
movs
push
sti
imul
mov
xor
or
xor
push
add
dec
xor
sub
in
adc
loopne
sti
pop
adc
bound
mov
fstp
out
loop
gs
adc
je
les
sbb
xchg
jmp
dec
sub
ror
push
aaa
mov
lods
mul
xchg
xchg
push
ins
int3
xchg
daa
pushf
cmp
add
icebp
rcl
pop
mov
xchg
jle
pop
xchg
mov
pop
dec
lds
call
jmp
mov
cmp
gs
call
daa
jmp
push
lods
cmp
mov
in
cmp
xor
daa
in
js
cmps
and
mov
fxch
daa
bound
jo
lods
enter
jmp
cmp
push
loope
movs
int
add
adc
fimul
out
add
dec
inc
rcr
xlat
or
or
out
sbb
cmps
sub
sub
mov
out
scas
or
cmp
lock
jmp
jnp
iret
arpl
outs
(bad)
pop
mov
xor
fistp
jmp
inc
pushf
mov
aaa
sbb
sbb
fsubr
fmul
mov
ins
or
add
push
add
and
outs
mov
mov
addr16
or
inc
jo
xor
mov
fmul
inc
cmp
xor
aam
out
iret
sbb
jo
ds
aam
jmp
cmp
daa
(bad)
aaa
repnz
xlat
pop
jnp
jmp
dec
pop
test
shr
adc
add
shl
jbe
jae
fcom
jb
xor
gs
xor
xor
add
mov
cmp
popa
push
mov
rcr
mov
sub
test
pop
clc
mov
out
inc
jmp
in
aaa
movs
cld
push
inc
rol
(bad)
jmp
xchg
cmp
push
mov
jl
sti
pop
jge
sub
js
xchg
iret
scas
xchg
sub
dec
and
jg
pop
dec
js
fsub
xchg
push
cmp
or
loope
dec
loopne
out
(bad)
stc
js
ins
add
xchg
jp
stos
mov
and
mov
leave
in
xor
retf
(bad)
cmp
jmp
ja
pop
sub
inc
add
out
rcl
add
lahf
xchg
add
push
leave
mov
in
enter
jp
lds
sbb
xor
and
sub
daa
inc
add
retf
sbb
mov
pushf
repz
sbb
movs
mov
add
pop
pusha
sbb
dec
xchg
inc
mov
xor
or
cmp
push
or
pushf
dec
sbb
scas
cmps
mov
adc
pop
retf
xchg
ficom
cmp
sub
(bad)
sub
int
(bad)
fs
cmps
jl
jmp
pop
movs
dec
mov
mov
mov
or
in
fcom
cdq
dec
or
out
addr16
hlt
inc
test
clc
dec
in
dec
pop
mov
pusha
mov
test
xchg
dec
and
pop
loope
or
je
and
dec
push
push
test
mov
fistp
jae
int
sbb
sub
xor
out
cmps
mov
mov
mov
mov
sub
fst
cmp
cmp
in
shl
aaa
lahf
or
outs
ret
or
pushf
jae
(bad)
(bad)
push
pop
mov
inc
or
aas
adc
mov
and
xchg
and
or
mov
lock
test
xor
je
into
retf
jb
out
jo
fild
pop
mov
call
ss
out
lods
sbb
sbb
dec
fiadd
cmp
fdiv
adc
adc
data16
pop
sahf
xor
out
mov
inc
cwde
jge
and
movs
pushf
aad
loop
or
mov
movs
lods
or
sbb
ins
repz
cdq
or
icebp
xlat
adc
movs
dec
add
pop
xor
test
jl
jmp
ja
push
(bad)
jl
rcl
pop
shr
inc
cli
mov
cvttps2pi
cmc
pop
pop
jecxz
dec
lahf
out
std
mov
mov
mov
cli
jae
lods
stos
sar
jno
mov
adc
enter
cld
pusha
rol
movs
sbb
jb
inc
mov
xor
cmp
sub
xchg
test
xchg
xor
outs
(bad)
and
outs
jmp
(bad)
push
shr
cvtpi2ps
dec
fdiv
int3
je
adc
in
xchg
(bad)
pop
fidivr
cmp
icebp
add
pop
scas
scas
cmp
(bad)
out
ins
movs
and
add
lahf
shl
cmp
scas
ret
cmp
mov
loope
pop
lods
inc
loop
sbb
mov
sbb
ret
add
xor
xor
xchg
lahf
leave
retf
scas
dec
xchg
add
pop
std
lods
fdiv
(bad)
sbb
(bad)
adc
push
je
mov
push
push
retf
rcr
dec
icebp
sub
js
sbb
mov
fmulp
ins
jmp
pushf
inc
dec
push
rcr
stos
scas
jnp
jb
ss
mov
cmp
add
dec
cmp
pop
dec
and
pop
mov
pop
jl
loope
jecxz
ss
aad
and
(bad)
fidiv
jmp
ja
dec
iret
nop
es
mov
stos
push
test
mov
test
dec
adc
xor
movs
pop
jbe
and
sbb
push
movs
outs
cmp
ficomp
iret
mov
xor
mov
pop
(bad)
fidiv
push
push
sahf
ror
hlt
fnstcw
jmp
inc
inc
pop
jnp
mov
arpl
mov
push
push
xor
ss
retf
mov
push
cmp
shl
mov
jmp
jae
sbb
sbb
mov
test
sub
and
psubsw
(bad)
mov
sub
stos
fisttp
ficomp
push
mov
into
cwde
je
leave
scas
outs
in
sar
or
pop
gs
pushf
data16
jae
jae
push
in
inc
xchg
mov
arpl
shl
imul
mov
sub
call
ret
cmp
jae
push
je
stos
mov
in
mov
hlt
leave
test
adc
pop
mov
les
xor
lods
mov
out
or
or
loop
pop
rol
sbb
jmp
jne
jbe
push
mul
xchg
retf
cwde
je
mov
aad
mov
ret
mov
call
cmp
jecxz
jno
cmp
mov
jae
pop
hlt
or
(bad)
in
xor
je
push
sar
scas
sar
cdq
pushw
pop
lahf
xor
dec
es
fsub
or
retf
hlt
lock
or
adc
jge
cmp
jp
jne
scas
test
cmp
sbb
sti
inc
fld
jo
push
jno
lock
aas
scas
push
fnstsw
jbe
xchg
out
lahf
aaa
dec
je
fwait
in
sti
sahf
xor
out
xchg
lea
mov
mov
jbe
icebp
shl
xor
or
inc
je
or
in
mov
pushw
jnp
pop
repz
jb
clc
test
push
aaa
cmp
scas
ret
dec
or
lea
test
loopne
xchg
stc
cmps
pop
xchg
out
pop
sar
push
out
inc
jnp
out
aas
inc
fsubr
sbb
cmp
xchg
push
addr16
movs
and
mov
xchg
in
adc
sub
loop
stc
hlt
test
xor
mov
ret
jge
test
add
fistp
inc
sub
inc
int
pop
pop
and
and
dec
push
mov
cmp
outs
sub
jl
cwde
mov
pop
lds
cmp
das
test
test
cmp
dec
rcr
mov
cld
sbb
push
mov
adc
popa
pop
lea
je
dec
je
mov
dec
sub
mov
adc
xlat
retf
inc
cs
cld
dec
outs
or
in
mov
mov
push
mov
jae
adc
mov
and
dec
cmc
cmps
xchg
std
rol
adc
int3
mov
push
popa
cmps
adc
out
sub
inc
movs
cmp
les
das
xchg
push
push
in
and
call
cmp
std
mov
push
mov
scas
cmp
xor
fdiv
in
mov
test
in
add
xor
ret
add
iret
or
cli
and
out
test
jo
or
add
and
movs
pop
mov
jmp
cmps
adc
mov
cld
sti
(bad)
loope
xor
retf
mov
mov
icebp
pop
inc
popf
dec
xchg
pop
jb
dec
out
lahf
aaa
mov
int3
out
imul
mov
add
adc
outs
repz
das
pop
xchg
sub
dec
stc
inc
jl
ror
popf
dec
std
or
sub
test
pop
leave
ret
push
push
iret
push
pop
lods
and
or
mov
jb
mov
aas
mov
xchg
push
jbe
pop
or
jae
test
lock
mov
cld
clc
jmp
cmc
add
outs
inc
js
cmp
hlt
or
mov
mov
call
mov
sub
add
addr16
(bad)
pusha
pop
jnp
mov
adc
sbb
sbb
add
xchg
lods
dec
dec
mov
xchg
scas
jnp
and
shr
imul
mov
mov
daa
fidivr
add
sti
and
push
cmp
push
xchg
add
hlt
nop
call
popf
cs
pop
jae
dec
icebp
pushf
sub
test
xor
pop
jmp
mov
test
jp
cmp
xchg
addr16
nop
loop
dec
pop
pop
fst
sbb
pop
mov
lock
scas
inc
stos
mov
mov
lahf
mov
test
lea
clc
je
(bad)
xor
pop
dec
pushf
fsub
or
popa
push
(bad)
sub
sbb
stc
cmp
sub
ja
scas
xor
call
xor
add
push
pop
sbb
dec
ret
mov
xchg
jp
call
jb
prefetch
or
daa
push
push
fbstp
test
aaa
push
lock
mov
mov
scas
bound
ret
hlt
addr16
xchg
add
loopne
add
push
in
dec
mov
fild
inc
push
cdq
adc
mov
stos
push
mov
cld
jmp
cmps
and
jns
mov
sub
sbb
test
pop
and
into
aas
mov
aad
mov
pop
rcl
xchg
fnsave
ret
je
call
cmp
ss
xor
outs
scas
fdivr
lahf
and
iret
js
jb
mov
jnp
pop
fiadd
out
add
test
lock
call
retf
ret
mov
outs
xor
mov
inc
add
or
dec
enter
cmp
mov
add
fdiv
mov
mov
add
call
xor
hlt
sahf
add
dec
mov
icebp
or
iret
jle
push
add
cdq
push
dec
icebp
inc
adc
sub
pop
shl
jle
add
rcl
sbb
(bad)
sub
inc
adc
pop
or
rol
push
call
add
pop
xchg
push
test
arpl
and
xchg
add
nop
hlt
test
fmul
dec
jmp
outs
movs
fcmovnb
cdq
push
or
idiv
repnz
dec
(bad)
sbb
adc
push
ins
inc
or
ins
cmps
in
loop
call
dec
aad
sbb
or
xor
dec
jnp
push
jmp
lds
jnp
mov
push
inc
cmp
mov
mov
jp
mov
popf
dec
mov
sbb
mov
mov
mov
mov
pop
dec
cmp
mov
push
fisttp
and
push
adc
outs
arpl
jp
cmp
enter
cld
or
dec
mov
xor
sti
sbb
popa
not
lahf
outs
stos
and
sub
adc
rol
mov
test
in
ret
cmp
xor
xor
dec
xchg
aaa
fbstp
repz
(bad)
fsubr
lea
ins
push
in
mov
call
loopne
dec
out
adc
shl
shr
int
cmps
mov
jecxz
cld
ror
loope
fcomp
lea
ret
add
popf
int
pop
sti
push
loop
cdq
xchg
mov
jmp
add
inc
daa
sti
ret
ss
test
add
xor
fisubr
sub
mul
out
push
jmp
xor
scas
jbe
dec
dec
and
daa
lods
mov
mov
pop
pop
mov
popa
cmp
mov
or
xor
stc
push
push
shl
(bad)
out
mov
pop
es
ror
repz
add
or
in
js
xchg
fidivr
stos
push
inc
out
mov
xchg
and
inc
push
stos
call
sub
mov
push
cmp
jmp
cwde
hlt
inc
adc
aas
jo
mov
es
psubq
xlat
pop
out
jmp
sbb
in
ret
pop
movs
addr16
into
setge
test
sar
push
xlat
repz
sub
daa
(bad)
push
adc
sti
(bad)
mov
repz
into
pushf
jno
adc
mov
mov
sahf
dec
mov
imul
xor
adc
dec
jmp
icebp
out
jg
sbb
lods
arpl
xchg
jmp
xor
aaa
sbb
xchg
or
std
sub
inc
dec
lock
push
popf
int
push
call
sub
jmp
or
mov
mov
xchg
mul
jnp
sbb
mov
leave
dec
pushf
outs
cmp
dec
mov
imul
mov
and
dec
inc
cmp
(bad)
bound
les
movs
mov
pop
dec
adc
out
jg
sub
inc
int
fstp
(bad)
dec
cmc
jp
repnz
xlat
pop
popf
cmp
out
aam
inc
retf
mov
pop
shl
inc
mov
mov
imul
(bad)
idiv
mov
stc
cmp
mov
inc
mov
pop
pop
add
repz
xchg
inc
nop
cmp
mov
cmp
daa
xchg
jbe
dec
inc
jbe
int
mov
jmp
push
cs
fcmovnbe
adc
shl
add
je
mov
mov
test
add
aam
sbb
addr16
pop
mov
(bad)
jle
imul
outs
cmp
xor
js
cld
xlat
sbb
test
clc
mov
add
sub
lahf
or
(bad)
pushf
xchg
pushf
fdivr
or
data16
jge
cmp
imul
out
jb
push
or
adc
add
test
repnz
das
or
js
sahf
mov
pop
jg
xor
jnp
popf
push
mov
cmp
sbb
add
cmps
adc
fxch
push
sub
das
sbb
push
inc
pushf
bound
jp
ins
movs
fcom
mov
mov
mov
cmp
or
mov
cdq
sub
fs
out
loope
into
mov
mov
rcl
pop
and
bound
jmp
fisubr
aaa
xor
dec
in
jo
add
jbe
imul
adc
enter
inc
dec
pop
xchg
movs
(bad)
movs
mov
mov
sub
cs
imul
jg
data16
push
adc
outs
in
mov
call
jb
xchg
and
adc
or
xor
data16
push
push
pop
(bad)
clc
push
outs
cmp
mov
icebp
out
lods
sub
push
dec
mov
xlat
dec
arpl
mov
xor
dec
lock
je
sbb
fst
jnp
xchg
mov
inc
pushf
out
cmp
icebp
retf
out
dec
retf
inc
scas
fidivr
movs
es
ss
and
imul
pop
pop
cdq
pop
xchg
ja
jl
(bad)
ficom
ins
fst
jo
cmps
(bad)
push
outs
sbb
sbb
stos
inc
add
adc
bound
repnz
cmc
xchg
mul
(bad)
pop
stc
and
inc
or
or
repz
aas
es
outs
xchg
addr16
imul
int3
call
ins
push
add
and
in
mov
dec
ficom
imul
repnz
retf
inc
xor
pop
push
jge
add
jmp
(bad)
xlat
scas
inc
stc
cmp
push
jae
leave
retf
iret
or
lods
leave
sbb
movs
lds
sbb
inc
mov
pop
ja
loopne
xchg
jno
cdq
retf
add
push
dec
jnp
dec
test
fnstcw
push
cmc
movs
dec
jecxz
lahf
pop
dec
arpl
(bad)
in
and
out
addr16
into
rcl
call
int
cmp
xchg
sti
mov
sbb
repz
or
inc
inc
out
icebp
xor
sub
loopne
test
jl
sub
call
imul
(bad)
(bad)
test
dec
cmp
pop
cmps
xchg
mov
test
add
cmp
adc
mov
leave
jmp
in
xchg
add
and
aad
mov
js
loope
push
mov
ja
mov
aam
inc
movs
jnp
pop
xchg
scas
movs
(bad)
loop
retf
push
adc
fnstenv
sbb
inc
lea
call
or
xor
gs
add
inc
aaa
mov
inc
adc
in
xchg
mov
shl
mov
mov
cmp
jle
aaa
scas
dec
add
in
pop
push
push
(bad)
js
adc
ins
pop
scas
push
fcmovb
rcl
ins
cmp
arpl
cli
inc
mov
mov
call
adc
dec
jae
pop
dec
outs
(bad)
imul
mov
test
iret
arpl
pop
shr
shr
cmp
jb
mov
dec
cmp
mov
retf
inc
icebp
out
std
loopne
adc
fs
mov
jns
(bad)
sti
lahf
loope
mov
repz
and
dec
push
mov
push
cmp
pop
movs
cld
in
jmp
add
movs
and
xor
shr
push
lods
out
sbb
xchg
cmp
dec
push
mov
xor
dec
outs
cwde
cmc
cmp
out
or
fstp
sbb
in
sbb
add
jb
ds
or
div
xchg
cmp
in
and
or
xor
jmp
mov
imul
iret
mov
mov
retf
ds
(bad)
xor
jg
sbb
jnp
loop
outs
stos
aas
mov
mov
mov
inc
ret
sti
xchg
jmp
push
xchg
jne
lods
push
xchg
fwait
inc
mul
ins
cmps
call
rcr
mov
mov
sub
inc
pop
mov
cmp
ror
dec
gs
xor
or
add
in
popa
es
cli
out
call
mul
cmp
jecxz
aaa
loope
adc
xchg
sub
pop
push
(bad)
lods
div
sub
adc
lahf
push
ja
imul
popf
sbb
imul
xor
push
xor
xchg
sbb
scas
push
fisttp
cmc
pop
fwait
aad
xchg
cmp
and
je
dec
dec
(bad)
fsubr
js
mov
xor
test
mov
sbb
scas
inc
mov
jne
jl
mov
scas
std
cmp
ret
(bad)
test
dec
mov
push
shr
inc
push
jg
mov
inc
adc
cmps
mov
cld
jns
rol
js
les
pop
and
or
shl
mov
push
inc
test
enter
jmp
sbb
loop
xchg
ror
je
or
cmp
mov
sbb
or
scas
pop
jecxz
cdq
jb
push
add
pop
xchg
repnz
adc
jo
mov
clc
fbld
lock
fistp
push
loopne
push
adc
les
and
and
mov
mov
sbb
in
pop
test
jns
push
cmps
outs
push
fnstcw
dec
sbb
push
xchg
pusha
sti
outs
jmp
std
sub
add
les
hlt
in
dec
test
cmps
and
ret
jmp
jno
stc
in
mov
mov
pop
mov
and
inc
mov
ins
sbb
sub
mov
mov
inc
mov
out
adc
add
cmp
sbb
fsub
adc
xor
mov
sub
add
pusha
jmp
and
mov
in
cmp
sub
jns
movs
nop
call
shr
jecxz
push
lods
mov
stos
push
aad
pop
sub
xchg
addr16
pop
ret
mov
mov
xchg
cmp
imul
xchg
leave
cld
stos
fnstsw
push
ss
push
popf
sbb
xor
(bad)
adc
outs
mov
rcl
scas
xchg
enter
pushf
ret
movs
mov
out
xchg
out
adc
fnstenv
or
xchg
out
jmp
and
adc
sbb
mov
or
dec
aas
cs
pop
xor
mov
fmul
popa
mov
mov
stc
das
xchg
aam
call
lods
popf
jmp
mov
mov
icebp
inc
in
retf
(bad)
stos
push
jae
xchg
mov
out
mov
jne
bound
(bad)
push
in
ins
jno
xor
mov
xchg
loop
push
cmc
mov
cld
lea
in
cmp
or
loopne
sub
inc
push
ins
sub
in
out
das
pop
mov
sar
xchg
pop
dec
fist
(bad)
xchg
push
mov
mov
(bad)
out
dec
sahf
adc
or
pop
and
(bad)
push
adc
popa
(bad)
fld
in
xor
pop
xchg
fistp
or
xor
xor
cmc
inc
inc
sti
xchg
pop
test
lods
fadd
add
fwait
cmc
xor
cmp
imul
fs
sbb
fwait
adc
xchg
mov
inc
das
pop
push
fimul
jmp
and
xor
and
add
adc
mov
push
pop
sti
push
sub
ins
xor
inc
ds
mov
enter
fadd
in
fcom
push
mov
popf
ja
das
(bad)
dec
ja
dec
aas
cli
inc
jp
jno
mov
or
mov
dec
in
cmp
push
fnstsw
push
movs
sbb
pushf
dec
xchg
adc
or
xor
das
jo
mov
mov
sbb
inc
mov
jns
lods
mov
bound
and
cmp
test
jmp
sub
adc
cmp
adc
xchg
leave
ficom
daa
xchg
pop
lods
cmp
xlat
xchg
add
push
sbb
pop
pop
push
les
jbe
inc
push
ret
leave
sbb
and
mov
pop
inc
dec
mov
sar
mov
retf
cmp
lock
jae
mov
fadd
pop
(bad)
dec
adc
sub
sti
pop
cdq
add
lods
cmc
fst
hlt
sbb
pop
push
popf
shl
pop
jle
sub
imul
(bad)
(bad)
imul
xchg
cmc
push
lahf
fidiv
cmp
stos
fsub
loope
aad
aaa
jmp
pop
fisub
jge
stos
ss
push
mov
clc
cmp
add
ss
inc
or
stc
mov
add
mov
mov
and
js
pop
mov
jmp
sbb
mov
cmp
sbb
es
add
cmp
in
call
daa
xchg
sbb
add
cmps
add
and
lds
cwde
lahf
into
mov
mov
cmp
addr16
out
or
cmc
sbb
dec
stos
(bad)
mov
xor
aas
lock
dec
add
call
jge
(bad)
call
out
xchg
push
les
ret
inc
xchg
je
xchg
cld
push
mul
shr
addr16
mov
mov
cmc
popa
outs
out
fld
jb
dec
call
push
xchg
cdq
push
push
mov
xchg
neg
inc
mov
add
sbb
arpl
cs
scas
aas
add
fisttp
mov
cmps
mov
cmp
ja
test
popf
dec
add
fcmovne
pop
mov
adc
inc
lds
mov
cmp
movs
stos
arpl
(bad)
mov
add
fisub
mov
mov
pop
or
add
fdiv
adc
repnz
imul
mov
mov
iret
in
les
imul
push
cdq
or
(bad)
out
popa
jbe
mov
jge
clc
jne
jle
fs
pop
pop
mov
push
jb
shr
jecxz
xor
inc
clc
loop
xor
adc
pop
jmp
mov
aaa
mov
pop
cli
sub
push
imul
test
dec
not
ins
pusha
retf
sub
clc
mov
mov
xchg
and
(bad)
jmp
fs
movs
xchg
pushf
in
push
inc
pop
mov
dec
mov
or
inc
stc
pop
ror
fld
gs
gs
add
jae
mov
xchg
cmp
dec
adc
mov
mov
inc
out
adc
mov
pop
repz
cmp
mov
outs
mov
scas
cwde
sbb
ret
es
xchg
shl
dec
movs
xchg
sub
(bad)
sub
mov
clc
(bad)
jne
fild
mov
lds
(bad)
fldcw
xchg
mov
mov
shl
loope
adc
shr
xlat
cmc
sub
std
stos
add
dec
ss
add
push
xor
aaa
jge
fsubr
jecxz
push
popf
sbb
repz
push
hlt
mov
(bad)
lahf
xor
ds
and
(bad)
xlat
mov
add
ss
ja
(bad)
(bad)
int3
(bad)
fwait
jae
jecxz
cmp
in
adc
adc
loop
xor
add
inc
inc
jmp
icebp
call
ficomp
ja
bound
add
sub
cmp
sub
aaa
ds
push
and
lds
cld
fidivr
sub
push
(bad)
push
test
js
and
loopne
hlt
dec
arpl
mov
int
mov
fmul
dec
cmp
out
fwait
addr16
pop
mov
jge
sbb
test
jbe
je
lods
mov
fsub
dec
mov
loope
mov
inc
call
dec
hlt
cmp
inc
aam
or
cmp
mov
mov
pop
lds
push
dec
stos
(bad)
lahf
out
cwde
and
adc
retf
clc
(bad)
mov
cmps
in
ret
cs
fcomip
cmp
add
mov
nop
xor
mov
shl
les
sub
fnstenv
mov
leave
ss
cmp
in
mov
shl
push
nop
(bad)
data16
fs
sbb
fisubr
mov
sbb
sbb
int3
sbb
fbld
and
push
repnz
mov
and
les
pop
push
imul
xchg
outs
aam
es
fld
sbb
pop
inc
mov
push
(bad)
jmp
adc
sbb
mov
ja
adc
cmp
lods
mov
cwde
movs
fist
inc
add
rol
mov
or
js
pop
add
ja
cld
xchg
mov
pop
push
std
cdq
pop
cld
imul
cmp
jae
sub
push
or
sub
je
(bad)
ja
addr16
cli
addr16
add
xchg
xchg
pusha
cli
repnz
sbb
aas
scas
je
pop
rcr
sti
xchg
xchg
sti
sbb
sub
jne
cli
fcmovnu
xchg
jl
cwde
mov
xchg
mov
arpl
xchg
mov
jne
aam
mov
out
cmps
(bad)
clc
or
mov
leave
rcl
repnz
out
mov
mov
mov
imul
mov
dec
sbb
cmps
pop
jge
lahf
pusha
cmps
fimul
ret
jmp
sub
cmp
mov
leave
inc
repz
loope
int
sbb
sbb
add
out
cmc
mov
jnp
sbb
jo
sub
mov
cld
sbb
nop
loop
xlat
jbe
outs
mov
xor
loope
and
sub
jb
out
outs
push
jle
push
cmps
rol
mov
dec
pop
sub
and
loop
cmps
loope
test
sbb
aaa
cmp
popa
push
inc
cmp
hlt
add
fsub
idiv
pop
aam
push
ficomp
mov
repz
jg
xor
mov
sbb
jo
fadd
dec
aaa
adc
test
stos
shr
pop
fsub
scas
repz
add
mov
mov
shl
pop
rcl
xchg
add
outs
and
repnz
and
jg
add
push
mov
es
nop
in
and
sbb
lahf
int3
out
outs
dec
scas
cdq
pop
ret
shl
shl
ins
mov
cdq
in
mov
popa
xor
add
push
scas
inc
hlt
cmps
ja
sub
fadd
pop
jp
js
cli
adc
dec
lock
push
inc
fwait
jne
xchg
mov
xchg
es
arpl
jns
jne
dec
add
and
loop
clc
scas
jb
in
in
(bad)
push
movs
cmp
pusha
lds
cmp
sub
sub
clc
xchg
add
pop
das
sub
mov
inc
out
out
pushf
fcom
in
popf
xchg
adc
fsubr
ds
xchg
sub
add
jge
test
outs
test
pop
and
xchg
repnz
popa
or
adc
iret
ret
cmp
frstor
shr
and
mov
push
adc
inc
out
js
ret
vpmulhw
xchg
or
jmp
fisttp
rcl
push
(bad)
movs
loopne
int3
xor
in
inc
jp
xchg
jnp
(bad)
retf
popf
aaa
nop
(bad)
call
jmp
pop
(bad)
loope
jmp
cmp
js
cmc
add
call
push
mov
sahf
adc
add
mov
cli
push
pop
aam
imul
loopne
mov
sar
cwde
sub
retf
(bad)
jmp
or
add
push
es
push
cmp
fadd
dec
retf
cli
retf
test
add
cld
movs
lds
cld
jns
add
div
xchg
daa
js
imul
dec
pop
call
out
enter
push
adc
pop
xchg
ret
fwait
(bad)
rcl
mov
inc
retf
cmp
sbb
ret
mov
jmp
fdivr
mov
ja
sbb
inc
cmp
cmp
adc
in
das
xor
call
sahf
nop
popf
and
xor
movs
add
addr16
jmp
call
mov
inc
fstp
cmp
sbb
and
fwait
addr16
jno
push
push
rcr
pop
cwde
inc
xchg
adc
popa
adc
mov
fiadd
stos
retf
mov
rcr
lods
mov
jmp
aas
sub
loop
dec
and
into
pop
scas
pushf
scas
lahf
push
bnd
leave
adc
pop
ret
inc
sub
cld
dec
sub
cmp
sub
jecxz
adc
loopne
sub
xor
lock
rcl
sub
push
fisub
stos
push
cmps
pop
inc
fnstcw
out
xchg
sbb
mov
data16
stos
add
push
js
mov
call
and
sbb
loope
mov
cs
iret
hlt
call
fs
or
sub
sbb
mov
retf
sub
xchg
imul
pop
rcl
scas
xor
xchg
and
outs
pop
sahf
movs
push
jmp
xor
push
shl
popf
in
enter
xchg
ret
adc
movzx
lods
or
icebp
aas
and
xor
mov
dec
popf
pop
cmc
jae
stos
mov
adc
stc
push
mov
enter
sti
shl
jb
std
dec
rol
call
outs
jo
stos
fdivr
aad
jle
dec
sub
popf
fistp
scas
test
or
aam
or
lsl
push
or
push
pop
mov
std
mov
push
mov
out
daa
mov
sub
out
or
push
aas
mov
movs
mov
lock
mov
and
pop
mov
mov
mov
stc
adc
cwde
jnp
or
cs
jp
(bad)
push
shl
fst
pop
scas
jb
sbb
inc
sar
and
push
retf
push
movs
sti
das
push
push
adc
data16
aad
fsub
jnp
pop
rcr
iret
push
lds
ins
mov
mov
jb
lods
or
icebp
ret
dec
scas
shl
xchg
hlt
adc
and
cli
in
inc
mov
pop
inc
cmp
(bad)
loopne
ins
mov
test
cdq
arpl
push
lock
movs
nop
hlt
add
jae
pop
stos
aad
outs
jge
lods
call
jo
lahf
push
xchg
sub
jnp
jns
dec
sub
iret
jmp
xor
test
aad
aad
addr16
popf
xor
inc
test
and
retf
stc
cmps
addr16
and
push
dec
data16
(bad)
xchg
arpl
inc
add
fwait
push
sbb
pop
shl
shr
sub
ds
fsub
adc
rcr
add
fs
mov
mov
test
push
jae
cmps
inc
lock
lds
retf
fisub
sti
loop
xor
xchg
mov
stos
jbe
in
mov
fisubr
cmp
push
std
add
sbb
data16
jle
lods
xor
bound
fdivr
jg
mov
pop
inc
mov
std
inc
lahf
pop
push
imul
dec
sar
or
cld
sbb
pushf
xor
js
out
leave
fwait
adc
push
pop
xor
rcl
xor
call
or
xchg
add
xor
inc
jecxz
or
jmp
dec
fcom
pop
scas
add
stos
pop
retf
scas
int
loope
or
xchg
mov
push
jmp
test
retf
jle
sbb
sub
mov
and
shr
outs
adc
xor
ds
xchg
imul
repnz
test
fisttp
arpl
cmps
rcl
(bad)
fadd
push
mov
lods
xor
mov
xchg
mov
lds
add
jmp
push
dec
in
sub
and
inc
in
loope
mov
mov
xor
inc
repnz
mov
push
xchg
adc
loopne
adc
dec
arpl
mov
fild
inc
jg
xor
mov
jle
js
push
aad
xchg
sbb
retf
jnp
or
nop
sub
or
shr
popf
jb
mov
aam
or
pop
and
fwait
imul
jnp
sub
int
xchg
cmp
popa
pop
ins
enter
in
lods
jnp
rcr
inc
rcl
cmp
bound
cmp
mov
xor
add
xchg
cs
sbb
sub
mov
in
lods
and
ffreep
fmul
adc
int3
mov
push
xor
test
adc
std
rcr
or
clc
icebp
mov
aam
sti
mov
sbb
jmp
sbb
retf
or
add
jmp
outs
out
sub
adc
lods
push
or
mov
mov
lea
mov
mov
cmp
pop
test
push
in
jne
cmp
push
cld
jg
and
mov
pop
scas
mov
pop
scas
nop
scas
mov
push
sub
push
int3
mov
pop
sar
cmps
into
mov
outs
add
push
push
xor
(bad)
push
xor
xlat
scas
in
pop
jns
cmp
lock
xor
ret
push
pop
jge
cmp
aas
mov
fild
inc
cs
mov
movs
adc
rcl
push
es
ss
dec
lods
in
or
movs
into
stos
mov
ss
out
mov
cmc
sbb
or
in
(bad)
push
dec
inc
push
(bad)
sbb
retf
sub
shl
clc
int
rcr
mov
mov
adc
xchg
push
leave
in
fnstcw
sub
pop
out
sti
loope
adc
adc
rol
fwait
add
je
mov
and
sbb
adc
aaa
call
pop
lahf
dec
pop
mov
outs
ins
aaa
(bad)
sti
sub
jae
mov
aas
sub
jne
dec
mov
xchg
jge
sub
xor
add
mov
inc
dec
lods
cmp
mov
adc
je
jne
xchg
lahf
cmc
pop
mov
test
pop
mov
lds
retf
push
mov
ror
mov
hlt
scas
(bad)
lahf
test
xor
(bad)
addr16
inc
inc
lods
sub
xchg
jb
lods
movs
or
push
jo
jmp
fwait
xor
aas
aad
fist
stos
dec
clc
sub
xor
and
push
jbe
sub
inc
and
xlat
pop
rol
jns
push
shl
int
cs
mov
leave
(bad)
add
into
mov
enter
imul
adc
add
jmp
out
pop
icebp
jns
or
daa
mov
outs
call
jmp
loop
sbb
inc
sub
sar
(bad)
mov
dec
icebp
pushf
test
and
add
sub
imul
fild
lahf
jae
daa
cwde
aas
stos
adc
dec
inc
push
shr
mov
jg
sar
fisubr
and
mov
or
add
icebp
push
jmp
loop
shl
cwde
test
fdiv
and
mov
jae
in
xchg
adc
sub
push
jle
pop
xchg
xchg
int
cld
adc
pop
add
cs
lahf
loopne
push
mov
or
repnz
aas
jl
add
repnz
ds
and
xor
in
jo
sbb
retfw
xor
cmc
test
cli
(bad)
(bad)
cmp
jno
je
push
in
ret
jg
inc
enter
retf
sbb
aaa
ss
jae
ss
loop
(bad)
sub
cmp
and
mov
xchg
stc
inc
and
jle
or
sub
test
sub
mov
addr16
pop
aaa
clc
pop
mov
jne
inc
(bad)
and
mov
in
xchg
stc
mov
pop
cdq
push
aas
cmp
jae
jl
sbb
push
push
cli
pop
xchg
mov
jmp
jbe
in
and
into
das
mov
xchg
mov
pop
mov
cwde
pop
push
push
enter
movs
add
out
lahf
xchg
out
repz
or
dec
mov
ja
xchg
(bad)
mov
pop
push
pop
xchg
daa
aas
xor
test
pop
and
jmp
fsubr
out
cmp
ret
repnz
popf
pop
sbb
xor
mov
(bad)
loopne
cwde
mov
dec
movs
push
(bad)
aad
adc
jo
retf
xchg
movs
in
mov
out
outs
ror
cs
mov
clc
dec
ror
ja
or
pushf
adc
icebp
inc
idiv
jns
xchg
mov
xchg
sti
sti
adc
outs
stos
sbb
mov
stc
inc
pop
xchg
add
adc
and
or
shl
xchg
das
aad
test
push
push
mov
addr16
loope
test
nop
iret
sbb
push
mov
add
inc
ss
xor
loop
or
lds
fidiv
cmps
out
push
in
jle
adc
int3
int3
std
mov
test
(bad)
and
es
movaps
xchg
test
loope
je
cmp
cmp
fst
jo
sbb
(bad)
jge
shr
push
add
out
xchg
sbb
mov
jo
xchg
mov
test
mov
mov
fs
mov
xchg
sub
(bad)
(bad)
mov
fisub
repnz
dec
lods
daa
mov
bound
jl
adc
frstor
ret
cmc
dec
dec
inc
(bad)
out
sub
inc
js
cdq
sti
fnstsw
cmp
mov
xchg
mov
sar
xchg
popa
rcr
fs
xchg
popa
push
aas
jne
jmp
push
xchg
aam
sti
cmp
dec
aam
in
loop
test
mov
in
sbb
ja
mov
out
icebp
icebp
xor
inc
hlt
dec
inc
(bad)
inc
mov
lds
(bad)
stos
push
jnp
adc
out
fisub
sbb
test
mov
(bad)
add
push
jno
dec
in
push
push
jmp
sbb
and
push
test
outs
push
retf
(bad)
hlt
into
fst
sub
cli
dec
and
mov
loop
out
and
fsubr
push
pop
dec
xor
loopne
sbb
loope
hlt
jg
stc
jmp
jno
rcr
stos
in
inc
jne
in
jno
mov
jl
push
out
pop
sar
scas
lahf
je
out
add
aas
retf
add
jnp
dec
nop
test
mov
jmp
gs
xchg
jge
pop
lea
and
pop
dec
sbb
or
xlat
jp
jo
inc
nop
and
add
push
fild
dec
cmp
shl
in
and
ficomp
xchg
outs
xor
int
jle
mov
hlt
push
or
pop
retf
mov
dec
inc
jne
fsubr
hlt
mov
out
mov
outs
fwait
cmp
int
mov
fistp
scas
fsubr
stos
cdq
add
ret
call
jmp
in
(bad)
ror
inc
test
mov
aaa
es
push
movs
jge
int
imul
fistp
fiadd
and
jnp
inc
daa
dec
retf
mov
cmps
cmps
jge
imul
or
fwait
sar
jo
inc
data16
mov
in
ret
cmp
mov
and
scas
sub
adc
sbb
arpl
jb
sub
or
ins
pop
es
sub
or
sti
aaa
xchg
arpl
or
mov
cmp
push
ins
inc
mov
retf
mov
faddp
int
sub
pop
fsub
xor
popa
stos
leave
movs
(bad)
aaa
mov
dec
sbb
jmp
ret
sbb
fs
xor
push
bnd
sbb
mov
and
inc
xchg
clc
popa
mov
xchg
scas
arpl
daa
aam
(bad)
cmps
jns
mov
xchg
dec
or
and
dec
cmp
pop
xchg
in
pop
mov
sbb
add
pop
push
and
adc
outs
shl
pop
push
ret
dec
addr16
imul
dec
xor
popa
test
sub
lock
aaa
mov
cmp
fwait
pop
jmp
sub
aas
jecxz
push
leave
out
imul
cmps
leave
mov
adc
xor
mov
sub
sbb
scas
lahf
inc
sbb
mov
out
push
adc
mov
cmp
xchg
test
and
rcr
adc
mov
push
(bad)
out
push
dec
cmps
in
int
sete
sti
inc
mov
and
fdiv
dec
es
hlt
dec
or
test
or
dec
jl
icebp
pop
arpl
mov
cmp
les
mov
dec
push
mov
jns
xchg
jnp
dec
mov
jo
sub
inc
ror
push
cmp
fwait
popf
jp
movs
(bad)
out
mov
cs
xchg
xchg
xchg
pop
dec
in
jp
add
xchg
cld
mov
sahf
stos
mov
int
sub
movs
loop
dec
retf
pop
movs
inc
ficomp
and
inc
or
mov
popf
ret
popf
adc
inc
call
loope
mov
fldcw
ds
fwait
sbb
jo
push
adc
mov
std
sub
(bad)
fistp
mov
lahf
test
(bad)
dec
fcomp
xor
fwait
xchg
jp
pop
mov
cmc
pop
mov
sub
addr16
sbb
push
fwait
push
ret
outs
mov
xor
sar
dec
loop
inc
mov
cmps
pop
scas
fsubr
rol
mov
jne
cmp
nop
xchg
adc
jno
fdivr
pop
dec
pop
inc
sub
rol
xchg
js
hlt
mov
mov
xchg
sahf
loopne
push
int3
cmps
push
mov
jl
movs
push
push
mov
dec
xchg
cmps
mov
push
(bad)
sahf
lea
into
ret
mov
mov
inc
dec
push
jbe
fdiv
jmp
scas
push
aad
cs
sbb
ret
out
shl
movs
or
nop
dec
cmp
sbb
out
pop
out
or
cmp
aas
enter
scas
pusha
mov
loop
jno
pop
cmps
lds
cmp
xor
dec
jl
or
jp
sahf
mov
(bad)
rcl
adc
push
pop
or
inc
and
add
sbb
dec
fcmovnbe
rol
cli
cld
(bad)
add
test
(bad)
repnz
cmp
test
stos
rol
cmps
add
test
int3
mov
ror
in
mov
mov
hlt
lods
dec
push
add
or
xchg
pushf
mov
mov
pop
mov
out
mov
sub
aam
sbb
test
xor
dec
ins
xor
or
cld
push
es
add
movs
push
push
jno
sbb
int
fwait
outs
inc
sbb
sahf
push
xor
lea
mov
imul
add
icebp
push
inc
movs
nop
sub
cs
popa
dec
pop
add
lock
dec
or
sbb
add
call
ret
(bad)
and
adc
sbb
aas
iret
(bad)
mov
inc
mov
sub
sub
bound
fldenv
fwait
and
and
add
icebp
mov
movs
and
jmp
mov
push
push
xchg
xchg
push
adc
dec
push
fistp
pop
out
adc
sbb
lahf
clc
bound
and
sbb
pop
in
and
scas
sti
adc
add
lea
mov
push
iret
pop
mov
jnp
add
pop
or
pop
popa
and
aad
dec
popf
dec
dec
inc
inc
bound
in
fcmovnu
xchg
jo
cmp
outs
test
mov
fist
lds
stc
pop
or
add
dec
repnz
rol
add
mov
cld
into
adc
stc
inc
jecxz
push
pop
dec
pop
jmp
ds
out
lahf
mov
xor
jns
sbb
outs
mov
sbb
jno
outs
popf
mov
mov
adc
xchg
xchg
cmc
and
xchg
test
add
cmp
outs
dec
pop
mov
add
and
ds
dec
enter
ja
xchg
movs
pop
mul
mov
sub
jg
sar
dec
pop
fst
retf
cmp
push
xor
mov
jmp
inc
cmp
pop
ds
adc
sbb
pop
out
mov
adc
rcl
popf
cmp
xor
into
dec
popa
pop
sbb
test
retf
inc
mov
push
xchg
jmp
(bad)
adc
(bad)
jecxz
ins
xor
pop
mov
rol
clc
and
stos
dec
inc
ret
dec
mov
cli
mov
ret
sbb
and
arpl
faddp
sub
xor
push
jmp
das
or
fnstcw
int3
xlat
mov
(bad)
xor
dec
cmc
div
xor
call
ins
add
push
dec
call
pop
and
mov
mov
xor
or
ja
loope
andnps
outs
outs
mov
jge
out
stos
pop
aas
xor
push
xchg
ins
mov
jp
sbb
dec
cmp
jns
lock
in
xlat
dec
popf
jnp
inc
es
les
push
fcom
xchg
adc
xchg
add
out
add
dec
(bad)
inc
call
push
push
dec
xor
mov
(bad)
cwde
mov
dec
inc
jbe
or
add
fiadd
fmul
sub
call
adc
mov
jle
mov
gs
xor
push
inc
dec
movs
dec
(bad)
adc
imul
cmp
icebp
aas
xchg
or
leave
dec
mov
inc
(bad)
cmp
mov
sbb
pop
push
mov
mov
pop
jmp
cmp
push
out
adc
clc
arpl
and
xchg
popf
sahf
leave
push
inc
xchg
or
aaa
jmp
xor
ds
call
iret
pop
jnp
and
retf
push
push
daa
pop
cwde
adc
retf
lea
loope
out
ds
lods
jae
mov
je
or
call
add
mov
std
and
into
js
scas
xor
test
mov
lahf
das
stos
lods
jne
adc
clc
ss
fs
scas
xchg
retf
ss
push
fisttp
mov
mov
xor
and
and
stos
add
(bad)
js
push
and
dec
call
inc
mov
fsubp
aas
sbb
mov
lods
(bad)
enter
dec
bound
cmc
jp
addr16
je
push
xchg
ins
retf
loopne
lods
cmp
adc
lahf
fnsave
inc
popf
call
call
push
enter
mov
mov
sub
ins
cmps
jmp
and
int
les
mov
(bad)
add
sbb
fisub
mov
push
add
xor
fnstsw
jno
repz
mov
daa
xor
je
nop
mov
mov
xlat
dec
xchg
hlt
inc
xchg
pop
push
mov
mov
push
mov
pop
adc
lahf
icebp
and
jecxz
mov
rcr
mov
fnsave
sbb
les
lea
scas
stc
inc
sbb
xor
push
test
jbe
(bad)
rcr
push
in
sub
dec
outs
cli
push
add
ret
push
jb
adc
mov
pop
add
out
arpl
lea
stos
adc
lock
and
sar
ret
dec
jnp
aas
cmp
push
jns
aam
or
js
mov
ss
ss
push
push
pop
add
(bad)
cwde
mov
(bad)
iret
test
(bad)
call
cwde
fcom
psraw
or
out
mov
push
fdiv
call
pop
and
xor
mov
xchg
das
sbb
cdq
and
fs
mov
cli
inc
xor
dec
lea
pop
push
push
test
mov
push
jle
js
in
push
loop
icebp
ss
push
mov
jl
add
leave
pop
or
push
push
outs
jno
jo
rol
lock
jne
aaa
lahf
add
and
cmp
sub
in
loop
fwait
inc
pop
mov
(bad)
(bad)
xor
lea
retf
lds
aas
scas
jne
or
and
lahf
stos
cmp
jp
mov
or
jns
or
imul
(bad)
out
adc
sbb
and
aam
lea
out
rol
and
cmp
icebp
push
mov
push
sbb
stos
xchg
sub
shr
lea
pop
or
not
pop
(bad)
pop
jle
mov
adc
push
out
add
dec
mov
pop
pop
push
stos
test
imul
cli
(bad)
inc
and
arpl
push
jb
lahf
sti
dec
sub
adc
clc
cmp
scas
stos
lds
adc
pop
xor
and
or
outs
(bad)
stc
push
jmp
addr16
pop
call
into
jae
jns
inc
call
aas
out
sub
adc
adc
adc
stc
jg
mov
int3
mov
cmp
dec
push
loop
inc
outs
sbb
jne
fild
div
mov
sbb
hlt
pop
cmp
bound
je
mov
icebp
dec
sbb
adc
adc
and
mov
iret
add
adc
jb
inc
mov
xchg
push
xchg
inc
lahf
scas
cmp
and
sbb
inc
(bad)
sub
sar
je
inc
cmp
cdq
nop
mov
adc
push
fstp
aam
sbb
arpl
push
not
push
jb
push
jno
mov
retf
jmp
dec
jmp
inc
lds
cwde
call
retf
loop
stos
std
mov
dec
pop
mov
jg
fisubr
loop
pushf
inc
mov
mov
mov
(bad)
cmp
hlt
xchg
test
hlt
push
xchg
clc
movs
ss
jno
xor
cmp
cli
jb
jno
lahf
das
xchg
loop
dec
add
inc
mov
in
not
push
rol
retf
push
shr
(bad)
fstp
sub
je
add
adc
inc
rol
pop
dec
sbb
inc
mov
cld
pop
cwde
jg
iret
mov
dec
dec
mov
dec
adc
dec
add
jae
aad
call
push
ss
ins
int3
int3
pop
lea
mov
cdq
das
or
cld
pop
icebp
scas
sbb
outs
sbb
imul
fldcw
shl
mov
adc
mov
xlat
pop
fild
jno
stos
outs
call
pop
cmp
pop
push
lods
jb
scas
push
loopne
data16
rol
out
or
pop
or
push
into
adc
add
xchg
sub
pop
test
inc
jp
test
out
mov
ins
adc
aas
sbb
cmp
ror
fbld
outs
in
shl
adc
or
inc
scas
arpl
fadd
mov
movs
cli
aam
mov
sub
pop
fld
xchg
ror
xchg
and
cld
sub
mov
retf
or
(bad)
inc
cmp
je
cmp
mov
push
push
cld
(bad)
por
mov
punpcklbw
mov
xor
sub
(bad)
cs
cmp
mov
fdiv
ins
inc
dec
pop
lahf
imul
xchg
adc
enter
iret
push
cdq
sub
inc
shl
mov
add
push
fld
lods
icebp
xchg
adc
in
nop
xchg
in
jg
sar
lods
loop
inc
pop
mov
and
repnz
push
sbb
cmc
(bad)
jle
sbb
sbb
js
and
mov
ja
mov
loopne
jmp
seta
sbb
xchg
xlat
mov
add
icebp
loopne
mov
mov
and
scas
arpl
std
jmp
dec
hlt
jmp
or
sbb
mov
cmps
es
enter
ds
push
fld
(bad)
xor
pop
xchg
xlat
mov
cmp
test
scas
test
dec
add
lahf
out
cmp
jb
cmp
(bad)
fst
and
mov
mov
mov
dec
sbb
ds
jmp
js
(bad)
sub
and
in
sub
jne
loopne
outs
xchg
push
or
dec
stos
xor
xlat
jecxz
addr16
cmps
adc
push
mov
xchg
shl
and
dec
fs
inc
(bad)
iret
inc
cs
fisub
dec
inc
inc
mov
call
iret
in
gs
pop
sub
loop
pushf
push
push
test
and
add
and
xor
int
xor
mov
and
adc
cmp
mov
aas
fnstcw
dec
ins
pop
push
leave
jns
clc
jmp
push
jle
rol
mov
cli
loopne
das
xor
cmp
ins
mov
jns
mov
movs
pop
rol
xchg
cmc
(bad)
fsubr
imul
scas
ins
and
and
push
sti
push
cs
data16
push
xchg
mov
repz
push
fild
out
ret
(bad)
in
mov
test
mov
mov
push
fisub
inc
xor
mov
(bad)
fwait
pop
js
cmp
adc
ffree
fld
clc
push
and
loopne
in
xor
mov
(bad)
and
xor
jp
jo
pop
mov
loop
sbb
and
call
dec
dec
iret
mov
jo
loope
mov
outs
shl
sahf
adc
imul
fidiv
movs
xor
dec
dec
xor
sbb
jno
sub
mov
les
stc
sub
xchg
loop
mov
and
out
bound
ds
fst
xor
mov
jecxz
mov
jl
lods
xchg
pop
add
mov
rcl
test
mov
aad
pop
cmc
retf
mov
(bad)
mov
or
push
fld
pop
push
test
jg
test
sahf
jo
sbb
cs
in
fs
xchg
mov
clc
mov
push
into
mov
inc
cmp
cmps
xor
pop
fdivr
ja
ins
js
mov
ret
xchg
mov
push
push
stos
jmp
ss
xchg
daa
(bad)
jge
popf
mov
xor
jbe
call
mov
push
lock
ror
add
aam
pop
jp
out
loope
push
xchg
popa
test
inc
pop
les
mov
sbb
jo
push
div
lock
shl
repz
outs
pushf
in
cwde
out
cwde
sar
xor
pop
pop
and
scas
call
ins
adc
jmp
loopne
xor
movs
add
mov
in
mov
in
outs
or
sbb
pop
loop
xor
gs
mov
loop
pushf
sti
shl
xchg
adc
aaa
and
sbb
fidivr
mov
mov
pop
push
mov
je
jbe
stos
mov
mov
fimul
rcl
jp
test
xor
sub
lahf
mov
jb
mov
sub
pop
lahf
dec
adc
je
mov
pusha
rcr
push
(bad)
xor
push
sbb
repnz
out
dec
scas
sbb
push
xchg
mov
fwait
and
in
xchg
das
mov
xor
int3
mov
sub
jmp
aas
pop
sub
loope
leave
pop
dec
dec
sbb
div
dec
mov
sbb
popa
pop
sub
loop
ror
push
push
pushf
adc
dec
add
push
enter
xor
xchg
ret
xor
xor
dec
dec
jae
add
ret
xlat
aaa
pop
lahf
dec
cmps
sub
inc
xchg
mov
loopne
into
push
sub
inc
pushf
xlat
loopne
sub
mov
jmp
xor
sub
mov
cmps
xchg
lock
push
lods
mov
inc
icebp
adc
ss
or
mov
pop
pop
and
clc
mov
leave
les
shr
mov
ins
sbb
(bad)
clc
xchg
jns
ret
jecxz
add
pop
mov
xchg
cdq
dec
sbb
sub
mov
js
mov
sub
jecxz
imul
xchg
cmp
loope
push
pushf
cmp
inc
xchg
jnp
push
mov
push
call
fisubr
loope
hlt
outs
inc
lods
lea
pop
push
shl
dec
dec
jae
mov
xlat
call
mov
fldcw
into
jmp
or
lahf
mov
movs
xchg
clc
inc
cmc
push
clc
dec
jmp
xchg
cwde
mov
idiv
sub
inc
sti
daa
sti
push
inc
fwait
mov
out
push
fwait
in
into
jmp
cmp
fldcw
adc
or
jnp
sahf
mov
loope
fsubr
cmp
int3
mov
mov
and
loopne
xor
dec
test
(bad)
dec
adc
mov
lds
in
push
cmp
inc
adc
inc
jae
jno
test
scas
fwait
inc
dec
cld
cmp
cmp
test
or
sub
add
adc
mov
fwait
xchg
stos
mov
popf
imul
inc
push
pop
and
into
(bad)
sbb
test
or
mov
loop
mov
xchg
push
aam
xor
jecxz
clc
dec
inc
mov
inc
and
aam
and
mov
inc
lock
sbb
mov
loop
test
pop
jne
in
and
not
mov
pusha
pushf
cmp
mov
test
or
aad
adc
or
cdq
mov
pop
je
test
push
and
shr
outs
mov
int3
es
jno
xlat
xor
xchg
sbb
jg
int
test
push
sub
lods
push
adc
nop
in
fstp
mov
fld
sahf
cmp
mov
xlat
imul
(bad)
jne
mov
call
or
jo
pop
xchg
pop
push
xchg
fmul
or
imul
fldcw
mov
xor
fcom
mov
mov
aam
push
add
cdq
outs
out
gs
jbe
dec
dec
lods
sub
push
sbb
rcl
dec
inc
stc
add
mov
xor
push
shl
sub
add
out
lods
and
xchg
fbld
mov
jo
test
push
(bad)
mov
pop
retf
adc
rcr
sbb
push
aas
arpl
jne
push
out
push
push
dec
rcr
lea
fisttp
add
pushf
ins
test
lea
ret
addr16
xchg
pop
adc
scas
push
je
lea
mov
sub
dec
test
or
ins
sbb
xor
adc
test
ins
jp
or
push
aad
xchg
jnp
sbb
mov
popa
xor
aad
retf
jle
xor
ins
jmp
fistp
cmp
aas
call
mov
sbb
ret
xor
mov
mov
cmp
ret
bnd
adc
cmp
movs
daa
pop
es
add
leave
sub
xlat
lods
cmp
mov
fisttp
out
test
ins
cwde
stc
mov
loop
(bad)
dec
fist
jno
cmp
repnz
and
mov
fs
leave
in
pop
sahf
push
pop
push
xchg
and
jg
imul
into
jecxz
cmp
push
mov
cmp
and
xchg
cwde
iret
push
stos
add
xor
xchg
inc
retf
jo
push
xchg
push
add
sub
ins
inc
rol
js
lea
neg
pop
mov
popa
jbe
icebp
daa
shr
mov
in
jbe
jp
pop
inc
jbe
and
dec
loopne
out
sbb
mov
dec
xor
je
aam
(bad)
repnz
jne
sbb
scas
mov
adc
push
aad
mov
xchg
sub
inc
ret
out
sbb
mov
push
cmps
dec
jg
fnstsw
or
xor
inc
add
and
aam
xchg
enter
xchg
ret
dec
mov
adc
imul
push
push
pop
ins
test
(bad)
jne
mov
das
into
cld
retf
pop
cmps
xor
cmc
sti
sar
push
xor
or
out
xor
and
cld
inc
jo
addr16
rcl
retf
mov
rol
jo
push
adc
test
fadd
in
xor
es
pop
(bad)
xlat
mov
(bad)
and
stos
pop
sub
in
inc
and
fisubr
mov
(bad)
jle
xor
push
out
dec
push
pop
mov
adc
or
mov
shl
pop
mov
add
inc
(bad)
cmps
sbb
dec
ds
mov
inc
sbb
xor
xor
lea
lock
outs
mov
imul
jecxz
xchg
pop
jmp
add
out
imul
jo
outs
xchg
push
cmp
xchg
rcl
or
mov
test
and
fisttp
repnz
aam
xor
dec
lahf
add
sbb
mov
pop
jnp
into
aaa
out
and
(bad)
stos
loopne
sub
ret
jecxz
mov
adc
xchg
stc
jns
mov
daa
mov
rol
data16
mov
movs
das
add
or
xchg
outs
push
gs
rcr
xor
xchg
ficomp
mov
hlt
les
dec
sub
push
aas
sub
popf
xor
idiv
cmp
es
cmp
jg
or
mov
test
icebp
scas
retf
into
add
pop
or
and
adc
jae
popf
in
fadd
subps
dec
cmp
std
shr
sub
cmp
mov
mov
sub
push
mov
xchg
stos
fiadd
cmp
jae
cs
mov
es
rcl
jae
fucom
lods
adc
mov
iret
push
mov
or
fsub
repnz
(bad)
stos
aad
mov
std
sbb
jmp
test
push
fadd
pop
adc
mov
pop
iret
fcomp
ror
(bad)
repnz
stos
mov
jp
fisub
pop
inc
rol
sub
push
test
jle
pop
push
push
(bad)
cld
imul
mov
jae
vlddqu
idiv
add
fwait
dec
mov
out
stc
adc
les
sub
sub
jmp
inc
repz
sub
fidivr
adc
xchg
xchg
fnstenv
mov
dec
pop
or
test
inc
and
add
jno
fistp
sub
in
jle
dec
into
aas
fcomp
cs
int3
out
iret
int3
dec
addr16
fstp
xor
pop
mov
(bad)
out
or
imul
jae
pusha
and
jmp
dec
and
xchg
retf
mov
imul
mov
cmp
inc
das
push
jnp
bound
fs
sti
icebp
outs
nop
adc
les
into
mov
lods
(bad)
mul
and
ds
repnz
cmps
and
cmps
mov
int3
movs
and
add
gs
sti
or
cwde
cwde
jns
jl
xor
xchg
fisubr
gs
call
test
mov
ret
popf
fmul
sbb
sbb
lea
xchg
cmp
das
call
imul
jmp
add
mov
repz
out
ficom
push
mov
scas
xor
dec
leave
sbb
pop
(bad)
sahf
xor
pusha
dec
add
xchg
or
test
leave
es
scas
cmp
rcr
test
cdq
or
addr16
arpl
sub
int3
cmp
popf
(bad)
fwait
and
xchg
mov
mov
movs
out
and
xchg
push
loop
xchg
movs
push
stos
daa
fsub
xchg
(bad)
pop
test
movs
sbb
je
push
jae
xor
cmp
test
xor
(bad)
and
ret
mov
outs
mov
lea
xor
(bad)
cmp
shr
out
mov
cwde
shl
mov
iret
enter
xchg
movs
sbb
and
les
scas
cld
and
test
cld
ds
cdq
out
repnz
sub
test
(bad)
shl
mov
(bad)
xchg
sbb
dec
stos
fstp
int
test
cdq
ins
push
sbb
jns
int
sub
aas
retf
sub
fcomp
sub
pop
or
xor
or
dec
xchg
or
cmp
shl
ror
repz
adc
jno
pop
mov
cwde
(bad)
pop
sub
xor
adc
mov
dec
ficom
loop
cmp
inc
or
js
cmp
mov
sbb
adc
add
and
xchg
jle
jno
cmp
sbb
mov
mov
stos
cwde
lods
push
pop
or
push
cli
jecxz
mov
icebp
mov
(bad)
mov
movs
je
inc
inc
enter
hlt
fmul
jle
imul
les
das
lahf
mov
inc
xor
shl
test
cwde
adc
jmp
jle
and
mov
mov
gs
mov
mov
hlt
addr16
inc
xor
jb
xchg
pop
adc
hlt
fldcw
imul
(bad)
outs
jno
stos
push
push
xchg
or
scas
lods
inc
cmp
sbb
push
imul
inc
jo
sti
int
shr
push
sbb
retf
test
arpl
dec
in
in
adc
xchg
sahf
test
add
xor
mov
add
clc
call
cwde
retf
sbb
hlt
movs
pop
das
push
mov
outs
(bad)
jo
inc
pusha
jl
ds
dec
mov
and
push
(bad)
les
inc
mov
cmp
mov
pusha
and
pusha
sub
outs
in
mov
rcl
or
jnp
in
mov
ss
lock
fldcw
ss
mov
dec
cmp
loopne
jo
xor
xchg
cld
call
(bad)
clc
mov
inc
xchg
leave
rol
in
arpl
push
imul
repnz
cmc
dec
sbb
mov
(bad)
xor
xchg
and
lea
sbb
(bad)
jb
fstp
mov
ror
retf
add
inc
scas
sbb
dec
movs
jne
rcr
(bad)
pushf
inc
in
fcomp
in
mov
mov
sub
arpl
jbe
in
cmps
pop
aam
dec
std
pop
inc
outs
shl
fldlg2
not
sub
or
fs
cdq
xor
nop
mov
push
mov
jle
pop
test
jae
mov
xchg
push
cmp
push
lock
push
pop
iret
or
pop
jg
xchg
mov
push
jo
jns
mov
cmps
inc
push
mov
and
push
jge
sahf
jb
jnp
inc
outs
jge
jecxz
mov
or
ins
ret
mov
xor
aad
test
out
arpl
jp
ffree
cmp
mov
adc
test
xchg
mov
add
jno
jmp
mov
(bad)
sbb
fwait
lods
push
rol
test
scas
adc
in
jmp
fwait
mul
shl
cmp
das
mov
stos
leave
call
std
and
adc
out
std
jp
ja
mov
mov
mov
lods
addr16
je
out
aad
test
and
xor
dec
retf
or
cmp
stc
cs
push
popa
addr16
sub
inc
out
addr16
add
inc
das
mov
sbb
add
mov
cmp
xchg
push
pop
xchg
div
jns
xor
cmp
xor
mov
js
push
and
mov
(bad)
imul
out
add
pop
push
cmc
not
push
cld
cmps
not
push
idiv
mov
and
in
adc
inc
jbe
mov
ror
inc
je
ror
sub
and
js
mov
mov
mov
jmp
xchg
push
mov
retf
outs
loop
popa
outs
sbb
hlt
fld
stc
cmp
or
xchg
mov
mov
mov
mov
xchg
imul
xor
or
cmp
dec
movs
push
mov
mov
push
xor
mov
lock
ins
fidiv
sub
cmps
retf
pusha
ja
mov
out
in
add
arpl
(bad)
out
scas
mov
mov
retf
push
cmc
cmp
in
xchg
xchg
pop
xchg
test
lock
pop
xor
pop
pop
xor
or
pop
inc
cmps
imul
cmps
mov
or
dec
add
(bad)
adc
sahf
jbe
dec
jge
pop
loope
icebp
dec
in
jnp
mov
es
in
fwait
push
mov
fiadd
popa
popa
cld
sar
aas
fsub
(bad)
sbb
rol
repnz
aam
jno
mov
cmp
adc
dec
test
sahf
push
add
leave
adc
push
sub
popf
scas
sbb
aaa
mov
dec
inc
jecxz
sub
mov
mov
and
iret
xor
cmp
retf
scas
or
xchg
setne
pop
xchg
and
or
les
push
push
push
cs
scas
add
mov
jo
ss
sti
pop
out
xlat
add
cli
scas
test
and
push
mov
sub
fadd
aaa
mov
dec
jns
xchg
inc
mov
xor
mov
xchg
dec
sub
ins
pop
or
mov
pop
test
adc
add
and
sbb
stos
jg
pushf
bound
mov
inc
inc
aam
(bad)
xor
dec
sbb
inc
iret
mov
add
push
mov
stc
push
cdq
fimul
dec
sub
in
mov
into
fadd
mov
inc
hlt
repz
push
mov
xor
jge
rcl
cdq
repnz
jmp
fild
daa
xchg
dec
dec
mov
add
and
pop
std
pop
mov
push
test
xchg
lahf
xor
stos
fsubr
inc
jecxz
cs
(bad)
fild
or
and
jge
jp
push
cmp
std
jecxz
push
xor
xor
scas
aam
dec
jns
xlat
mov
leave
fs
cmps
push
in
stos
sbb
mov
sbb
ja
adc
sub
enter
mov
(bad)
fstp
push
lds
test
sbb
(bad)
in
fldenv
xor
jno
jmp
pop
cmp
mov
popf
imul
cmps
mov
adc
add
cwde
les
mov
test
xor
cs
imul
push
retf
mov
adc
loop
mov
stos
sub
mov
or
jg
sbb
push
fistp
lock
sbb
or
rcr
call
stos
pop
xchg
shr
arpl
xchg
and
mov
inc
xchg
aaa
fucom
loope
les
mov
inc
mov
jmp
sbb
mov
jnp
pop
mov
(bad)
ins
mov
pop
xchg
xor
retf
in
or
push
push
lea
test
mov
fnstsw
ret
mov
pop
aad
xchg
dec
iret
dec
cmp
jmp
lea
jns
or
mov
mov
cmp
arpl
mov
clc
push
sbb
push
cmps
xchg
sbb
sbb
xchg
dec
mov
cmps
shr
mov
mov
mov
push
mov
cld
cli
inc
inc
sbb
scas
(bad)
movs
sbb
fld
mov
ss
inc
test
or
inc
icebp
(bad)
sub
inc
nop
mov
dec
jbe
add
mov
ds
fsubrp
imul
lahf
cmp
stos
bndstx
fild
mov
fiadd
cs
(bad)
cmps
cmps
fist
add
mov
sbb
(bad)
xchg
inc
fwait
cmp
es
into
mov
lock
sahf
lock
jle
mov
inc
out
sub
out
jg
adc
sub
lods
js
push
loope
jbe
cmc
mov
ins
push
loope
mov
addr16
inc
pushf
jb
mov
push
pushf
or
mov
(bad)
shr
les
les
not
add
push
bound
clc
cwde
stos
jnp
ds
jne
push
and
fs
and
or
mov
(bad)
cdq
push
mov
cdq
jns
pushf
out
push
jmp
or
mov
sub
call
loop
mov
pushf
test
pop
dec
xchg
sub
call
or
js
add
fadd
pop
sbb
mov
pushf
xchg
lods
inc
xchg
inc
xor
jae
mov
sub
mov
pop
push
jp
and
mov
xor
mov
push
adc
lea
sbb
xor
fdivr
xchg
jmp
adc
cli
aad
loopne
loop
sub
sbb
dec
iret
jl
mov
push
push
mov
push
push
push
cdq
push
clc
cmp
jnp
mov
enter
xchg
or
scas
pop
add
sbb
sub
mov
(bad)
fadd
jp
sahf
xchg
std
cmp
shl
xchg
cdq
mov
add
mov
cmp
mov
test
mov
(bad)
leave
sub
mov
fsub
xchg
call
(bad)
xor
push
lahf
jmp
push
(bad)
std
arpl
data16
fcom
(bad)
out
sbb
sbb
idiv
push
retf
sbb
js
xchg
add
pop
mov
or
xor
add
ror
or
loope
adc
and
dec
mov
jb
sub
fs
sbb
inc
add
jae
(bad)
adc
and
jp
sbb
push
dec
xor
mov
jmp
rol
sub
xchg
add
in
cmp
mov
or
imul
and
xor
imul
sub
arpl
icebp
stos
inc
mov
cld
hlt
in
out
mov
or
mov
jp
or
inc
jno
adc
sbb
mov
in
cmp
push
mov
inc
add
stos
mov
cmp
pop
or
dec
pop
pop
jne
fs
sbb
push
pushf
scas
fwait
shl
mov
mov
popf
gs
add
add
cwde
or
xchg
outs
pop
jno
arpl
daa
stc
leave
hlt
jb
sbb
push
or
std
sub
mov
dec
jmp
xor
xchg
(bad)
mov
inc
mov
clc
out
jbe
adc
mov
xor
pop
inc
aad
mov
repz
bound
sub
ins
stos
or
xor
push
(bad)
fnstenv
imul
out
rol
xor
add
sub
push
pop
and
inc
mov
adc
xchg
lds
sbb
pusha
push
fstp
mov
xlat
jle
sbb
or
(bad)
dec
add
in
xor
lock
xor
mov
jno
mov
test
push
test
adc
pop
int
jb
xchg
pop
daa
lock
adc
adc
adc
and
sahf
hlt
sbb
inc
or
mov
sti
aam
adc
mov
push
xor
sub
test
shr
mov
test
(bad)
std
mov
cmp
inc
mov
dec
test
adc
fld
retf
out
call
sub
hlt
mov
dec
stos
add
cmc
ss
arpl
lods
mov
icebp
fisttp
rol
mov
adc
(bad)
rol
sar
cmps
adc
dec
stos
outs
mov
mov
and
inc
push
adc
jae
pop
jmp
call
pop
addr16
scas
pushf
dec
jge
push
mov
cmp
mov
cmps
(bad)
nop
sbb
xchg
inc
and
mov
je
es
jmp
mov
cmp
jae
fdivp
mov
mov
punpcklwd
call
sbb
xor
pop
sub
and
cmp
cmp
(bad)
cmp
pop
dec
jno
int
jge
sub
dec
cdq
jmp
ror
push
xor
push
pop
aad
sbb
cmc
xchg
test
sub
adc
add
xchg
gs
sbb
mov
xor
fiadd
aaa
mov
sbb
int3
mov
add
dec
cs
xor
add
xor
xchg
xor
jecxz
daa
sbb
add
rcr
push
(bad)
dec
xor
inc
inc
enter
jbe
(bad)
retf
mov
mov
push
sub
es
mov
fisub
popa
mov
cmp
xor
push
jge
xor
or
std
gs
xchg
mov
adc
pusha
xlat
mov
loope
inc
dec
jnp
out
add
sahf
mov
inc
xchg
sbb
enter
adc
mov
shr
sbb
jl
mov
(bad)
test
xchg
fidivr
xor
aas
cmp
adc
in
pop
test
xor
mov
ja
call
test
mov
test
movs
into
pusha
shl
(bad)
pop
push
retf
dec
(bad)
xor
jp
mov
fisttp
mov
inc
(bad)
xchg
daa
stos
arpl
jl
(bad)
adc
and
nop
mov
sub
jmp
pushf
add
js
(bad)
xor
pop
je
sar
loopne
fwait
push
imul
jno
pop
loope
pop
cli
or
test
(bad)
(bad)
cli
xlat
lahf
leave
out
cli
call
inc
in
push
xchg
shr
mov
test
(bad)
push
test
jo
sub
mov
push
jmp
scas
push
xor
lock
jnp
call
mov
fiadd
sbb
fwait
bound
stos
lods
movaps
inc
and
mov
xchg
mov
lods
adc
jnp
loop
imul
push
(bad)
call
out
out
out
push
push
mov
dec
cmp
imul
pop
jg
pop
mov
fiadd
repnz
(bad)
leave
mov
cmps
push
(bad)
jmp
sub
jmp
xor
add
test
lods
(bad)
fisub
and
add
mov
stos
xchg
jge
(bad)
dec
mov
inc
aaa
cmp
add
popa
jmp
mov
imul
sahf
pop
mov
and
inc
adc
(bad)
aaa
lods
dec
dec
sub
imul
rcl
call
rdpmc
jp
arpl
gs
ins
or
mov
dec
repnz
pop
ret
ja
mov
sbb
(bad)
lods
push
add
in
lods
test
push
add
mov
push
sbb
push
or
fldenv
cdq
(bad)
test
inc
jns
xlat
xor
ins
in
inc
mov
pop
test
aad
fst
add
test
iret
dec
pop
push
int
cwde
add
sub
icebp
loope
(bad)
xchg
test
add
xchg
call
ins
cmp
mov
pop
pop
dec
js
sbb
add
nop
test
inc
dec
imul
mov
and
arpl
scas
(bad)
cmp
push
cmps
lods
(bad)
popa
mov
mov
lock
pop
imul
int3
out
cwde
adc
jbe
mov
cmp
out
test
sahf
xchg
pop
icebp
jp
xchg
cmp
outs
push
in
sub
dec
ss
dec
sub
and
cmp
std
mov
xor
push
sub
test
pusha
gs
mov
sub
cwde
jnp
add
dec
aam
loopne
arpl
inc
rol
push
or
and
adc
pop
sar
cmp
outs
mov
punpckhdq
retf
inc
pusha
jns
jmp
stc
fadd
mov
adc
pop
dec
icebp
jbe
adc
sbb
shl
cmps
sbb
xchg
pop
bound
lods
addr16
lds
pop
leave
movd
pop
ss
jecxz
push
int3
add
fnstcw
mov
scas
scas
out
inc
push
stc
xchg
xchg
pusha
adc
call
dec
mov
mov
and
adc
and
mov
adc
cdq
test
xor
test
ror
dec
pop
xor
into
ret
inc
and
xor
scas
sub
ins
or
mov
ret
(bad)
push
sub
cs
enter
mov
(bad)
fdivp
test
ja
cmps
or
ficom
test
cmp
mov
cmp
mov
push
dec
xor
inc
mov
and
jge
xorps
loop
les
stc
mov
xchg
js
push
or
push
adc
adc
test
mov
sti
test
and
add
pusha
pop
push
ret
pop
sbb
loope
outs
pop
ret
jns
ss
es
or
push
cmp
jne
add
repz
arpl
out
fisttp
jp
fbld
add
cmp
push
push
xor
inc
fdivp
imul
test
push
scas
add
dec
call
in
int
inc
mov
or
popf
cdq
mov
xchg
cmp
inc
pushf
pop
inc
jns
daa
xlat
bound
xchg
cmp
ds
es
xor
int3
inc
fcmovnbe
mov
adc
and
jle
rcr
add
in
(bad)
pop
inc
xor
clc
fscale
fstp
sub
fist
and
push
push
lods
shl
out
add
sbb
cwde
cmps
add
cmp
outs
mov
or
test
dec
repnz
add
rcl
add
dec
scas
inc
popa
and
mov
dec
cmp
into
or
cmps
dec
inc
push
xchg
dec
dec
cmp
inc
icebp
mov
inc
ds
aam
mov
pop
les
shr
pop
bound
pop
xchg
repnz
aad
xor
dec
mov
jbe
(bad)
test
clc
pop
xchg
shl
cmp
int3
xchg
icebp
jno
(bad)
pop
xor
xor
push
mov
adc
into
and
rol
or
sub
inc
div
ret
lea
xchg
push
mov
lds
sub
repnz
js
popf
and
js
in
sahf
mov
push
mov
cmovge
pop
pusha
mov
add
dec
xor
jl
mov
das
adc
add
mov
pop
out
mov
cmc
shr
(bad)
outs
sub
xchg
inc
and
push
loop
adc
inc
cs
out
rcr
lods
shl
pushf
enter
jmp
(bad)
call
retf
rcl
iret
repnz
test
mov
sar
jae
dec
sbb
out
pushf
push
or
sub
mov
add
nop
pop
adc
hlt
or
jne
pop
and
fimul
mov
js
int3
test
add
mov
mov
(bad)
jg
outs
call
and
(bad)
loopne
aas
jnp
clc
imul
mov
sbb
sbb
adc
add
scas
repz
mov
sub
es
jb
xor
sub
xor
cmp
and
outs
icebp
repnz
push
xchg
jne
push
les
xor
fild
jns
ja
(bad)
pop
lds
(bad)
or
jge
push
fs
adc
mov
add
jmp
into
dec
sub
cld
call
shl
adc
outs
push
cmp
out
test
mov
cli
pop
ffree
call
push
lahf
jl
xchg
repnz
push
dec
ss
dec
pop
and
or
mov
dec
loopne
in
jmp
push
js
pop
out
mov
cmp
loopne
ret
or
into
push
mov
add
push
stc
push
rcl
lods
lds
(bad)
fisttp
fnstcw
push
cld
mov
out
icebp
scas
pop
fdivr
xor
test
retf
and
sub
jb
(bad)
(bad)
pop
sub
jns
mov
adc
sbb
mov
movs
stc
sbb
mov
cmp
push
arpl
test
sbb
ss
fs
inc
inc
lods
or
leave
bound
gs
cli
out
call
cmp
push
push
and
sbb
jecxz
xchg
pop
xchg
out
repz
push
(bad)
pop
mov
dec
mov
pushf
xlat
pop
push
and
add
bound
aam
pusha
cmp
loope
cmps
mov
nop
dec
cwde
imul
rol
iret
jbe
mov
dec
xor
inc
add
mov
mov
mov
jg
in
les
test
or
int3
pop
adc
rol
mov
sub
mov
daa
sbb
jo
aam
loopne
fbld
(bad)
data16
inc
dec
pop
mov
and
fild
sub
int3
in
imul
sbb
bound
jge
icebp
fisttp
cld
mov
in
mov
cli
rol
out
jecxz
dec
in
jl
addr16
push
or
or
mov
popf
hlt
ds
fisttp
push
movs
cmp
push
xchg
jnp
ficom
ins
lods
dec
movs
and
(bad)
std
ins
ja
int3
mov
loopne
clc
mov
and
jae
fs
enter
cmp
jmp
mov
shr
sbb
xor
mov
cmp
lahf
pushf
add
inc
in
div
pop
sbb
xchg
push
push
enter
inc
mov
sub
(bad)
das
inc
push
mov
shr
and
out
jnp
mov
fwait
out
pusha
pop
outs
out
pushf
sbb
mov
ret
rol
sbb
adc
sbb
inc
xchg
retf
stos
adc
sub
into
sbb
xor
mov
dec
push
cli
out
ror
cmps
sbb
jl
rcl
mov
mov
into
pop
mov
fistp
in
add
test
pop
imul
dec
(bad)
jae
fs
pop
stc
into
icebp
pop
lods
cmps
inc
outs
pop
test
jnp
cmp
outs
test
ficom
adc
mov
push
outs
movs
in
imul
add
loopne
jb
and
sub
and
add
mov
pop
mov
(bad)
inc
jge
scas
add
fadd
repnz
outs
lods
stos
sub
pop
cmp
xlat
sub
or
mov
add
xchg
and
daa
inc
andnps
enter
jo
imul
mov
xchg
popa
fbstp
loopne
mov
stos
imul
or
fstp
iret
mov
sub
jnp
aaa
pop
push
adc
sahf
jle
out
cmp
xor
sub
and
imul
inc
scas
sbb
dec
push
mov
lahf
sti
iret
std
aas
or
and
and
in
push
jmp
sbb
xor
sub
pusha
mov
mov
and
ins
iret
add
and
arpl
push
imul
in
cmp
and
scas
jp
loop
and
mov
jns
hlt
div
mov
jae
adc
cs
dec
jae
jmp
cmp
push
mov
sahf
not
mul
(bad)
call
mov
test
ins
test
push
pop
inc
loope
ret
jns
cmp
leave
mov
push
into
sub
xchg
xchg
dec
cmp
(bad)
jle
or
xchg
into
mov
rcl
in
or
pop
imul
push
jecxz
arpl
cdq
mov
retf
dec
fcom
(bad)
mov
je
pop
out
call
add
mov
xor
jge
shl
and
imul
xchg
mov
and
xlat
sti
test
cmc
jecxz
dec
dec
xor
push
shr
shl
adc
jge
leave
pop
and
icebp
jns
cmc
cmc
push
shr
jl
hlt
xlat
mov
cmps
jbe
imul
movs
adc
pop
shl
mov
rcr
jl
mov
bound
inc
pop
lea
jne
std
pusha
add
in
sbb
icebp
jo
inc
xchg
mov
push
mov
addr16
repnz
pop
pop
mov
xchg
mov
or
adc
pop
dec
add
xchg
scas
jmp
adc
jbe
fidivr
cmps
push
xchg
out
sub
inc
not
stos
or
pop
adc
and
leave
neg
shr
imul
push
cmps
out
mov
test
or
cmp
sbb
test
mov
pop
clc
xchg
bound
mov
in
cmps
out
ss
aas
lods
aas
sbb
movs
ret
lods
leave
dec
enter
mov
jns
std
mov
shl
sub
outs
mov
nop
or
sar
cdq
inc
loope
and
push
iret
or
fcomp
xor
mov
add
arpl
cmps
js
nop
sbb
enter
sub
cli
and
shl
push
cmp
mov
jmp
jnp
loop
add
add
nop
cmps
xchg
cmp
cld
add
dec
lock
jle
inc
xchg
or
mov
jmp
inc
pop
arpl
aam
paddq
push
dec
dec
push
js
cmp
jecxz
jmp
mov
retf
retf
fdiv
fmul
or
mov
in
mov
dec
imul
movs
cmps
sbb
stos
and
sahf
mov
add
nop
stc
das
pop
loope
mov
or
je
pop
add
ret
rol
loop
inc
imul
or
sub
xor
clc
pop
outs
push
arpl
into
nop
inc
lods
mov
int
pop
hlt
mov
add
add
mov
lea
inc
test
or
ins
test
lods
cmp
shr
cld
pop
retf
(bad)
lds
dec
das
mov
stos
dec
mov
mov
js
retf
mov
addr16
retf
sub
push
xlat
fldcw
mov
pop
sbb
or
jl
sub
test
addr16
inc
hlt
setl
popa
rcl
push
fwait
sbb
push
pop
aaa
fwait
dec
pop
popa
sub
sub
mov
xlat
retf
movs
mov
add
ins
or
jmp
sbb
pushf
push
(bad)
stos
inc
repnz
adc
lock
popf
mov
adc
cld
fucomp
imul
into
dec
ja
xchg
in
mov
loopne
push
and
jg
or
mov
cli
or
ret
cmp
and
fnstsw
aaa
mov
idiv
retf
mov
inc
inc
sbb
movs
xlat
or
sub
cmps
push
push
adc
daa
mov
aas
xchg
pop
movs
ficomp
outs
inc
mov
lds
ret
or
cs
nop
pop
rcr
or
xchg
cmp
cmps
aas
adc
inc
mov
addr16
jb
or
aam
cmp
jp
add
pop
mov
pop
out
fs
aaa
arpl
int
fcomip
sub
jecxz
je
sub
add
sbb
out
out
xor
xchg
stos
shl
mov
(bad)
mov
and
jp
popf
mov
jecxz
add
jb
xlat
mov
push
pop
mov
in
xchg
or
stos
sbb
adc
or
out
xchg
pop
push
pop
sub
mov
push
xor
scas
mov
xchg
shr
ret
and
push
dec
test
jle
push
jns
imul
les
fcom
dec
sti
jb
int3
icebp
cmps
and
pop
gs
jle
mov
jns
sbb
adc
stos
mov
test
(bad)
pop
pop
pop
popf
aam
scas
cmp
int
mov
push
xchg
cmp
das
lods
sti
jno
lock
mov
and
dec
xchg
dec
nop
pop
ss
adc
sbb
out
cmp
pop
mov
dec
leave
adc
shr
sub
sub
xchg
enter
jge
adc
mov
cmc
rol
int
xchg
mov
push
xchg
jns
icebp
nop
rol
pop
js
add
ret
jne
push
pop
mov
xor
mov
dec
push
pop
div
vpcmpgtb
inc
dec
pop
pop
sub
dec
mov
push
mov
xor
ins
jg
into
pusha
pusha
enter
xor
mov
loopne
inc
test
lock
das
mov
test
xor
inc
cmps
sub
pop
xchg
mov
ds
rcr
dec
mov
pop
pop
jbe
jne
xor
test
iret
pop
sbb
lahf
xchg
rol
out
dec
pop
mov
jbe
cmp
xor
fiadd
and
(bad)
das
ins
mov
sub
sub
and
add
into
cmps
inc
push
fimul
mov
xchg
cmp
xacquire
sub
sbb
cmp
lock
(bad)
jp
xchg
out
nop
mov
xchg
icebp
cld
push
out
jl
ins
sar
mov
mov
jge
cld
cs
add
push
(bad)
out
not
jle
aad
jge
mov
add
jge
aaa
or
jns
mov
aad
das
cmps
mov
or
mov
lods
mov
and
pushf
and
fild
fild
jnp
pop
popa
mov
mov
xor
cmps
xor
(bad)
push
sbb
dec
pop
and
retf
push
xor
add
in
add
inc
lahf
cmp
xchg
push
lahf
call
out
mov
popa
adc
mov
mov
ret
(bad)
cmp
adc
push
push
jbe
sub
pop
(bad)
fidiv
xchg
pop
in
outs
push
mov
adc
mov
rdmsr
inc
or
and
add
inc
pop
loope
mov
push
(bad)
mov
dec
or
repnz
jnp
dec
sub
jle
cmp
in
mov
jle
popf
jge
pop
mov
inc
retf
mov
cmps
mov
in
jbe
and
fild
out
lahf
hlt
daa
jp
sbb
cld
test
clc
add
mov
mov
sub
jge
js
pop
mov
push
mov
sub
inc
idiv
mov
jecxz
or
add
div
loope
and
leave
imul
sbb
hlt
bnd
mov
ss
dec
call
xor
mov
push
dec
mov
scas
push
jb
cmp
xchg
sub
xchg
aad
rol
inc
xchg
stc
sar
sbb
jecxz
inc
inc
mov
shl
add
fcom
test
inc
cmp
pop
push
into
mov
mov
or
js
push
add
push
dec
xlat
out
or
cld
sar
ds
in
inc
jne
push
out
sub
mov
or
mov
mov
jb
cdq
je
mov
das
adc
push
mov
mov
into
repnz
inc
popf
mov
mov
mov
xor
inc
outs
call
and
sub
test
push
nop
mov
hlt
jno
les
mul
adc
fwait
adc
jne
add
jge
cmps
jp
mov
neg
mov
sbb
adc
jae
mov
test
mov
lock
mov
jns
jmp
mov
int
push
xchg
pop
or
ret
xor
adc
cmp
mov
es
call
(bad)
adc
retf
std
mov
adc
inc
jmp
mov
mov
push
lods
xchg
shl
mov
push
cmps
push
sbb
icebp
add
jmp
pop
retf
or
adc
mov
add
fmul
mov
sub
cdq
in
push
jp
mov
mov
pop
and
cmps
jo
inc
xchg
enter
jb
mov
scas
dec
xchg
sub
jle
adc
add
lea
cmp
push
cmps
adc
lds
(bad)
adc
out
jmp
movs
movs
mov
xchg
jg
rol
das
(bad)
pop
fbld
xchg
sahf
dec
inc
test
jge
mov
inc
stc
lods
int
cwde
in
mov
or
sub
(bad)
and
push
jnp
inc
cmp
pop
out
clc
xor
jmp
push
push
inc
nop
xchg
mul
dec
(bad)
inc
fiadd
cwde
jb
(bad)
sub
jmp
jne
pop
imul
adc
jo
nop
xlat
push
imul
gs
pop
outs
out
int
xlat
mov
ret
nop
sub
shl
or
or
imul
les
mov
dec
jg
es
xor
ret
lods
cmp
(bad)
jecxz
scas
(bad)
(bad)
daa
mov
pop
in
mov
scas
mov
jb
sub
addr16
jmp
or
sbb
add
mov
push
or
mov
pop
add
bound
leave
aaa
inc
outs
mov
mov
sar
or
xor
xor
test
mov
cs
cdq
cmp
mov
adc
dec
jno
lea
lods
pusha
adc
push
hlt
cmp
repz
jmp
mov
sbb
fiadd
jl
mov
inc
xchg
sbb
addr16
dec
dec
cmp
pop
movs
div
dec
pushf
scas
fist
xchg
sub
jl
mov
pop
mov
sub
arpl
outs
shl
cmp
cwde
and
(bad)
stos
jle
pop
xchg
xor
pop
add
mov
into
imul
mov
fistp
inc
cmp
pop
inc
mov
(bad)
adc
and
aaa
pop
cmp
and
js
push
mov
push
out
xchg
cmps
lea
pop
imul
ret
mov
push
push
and
mov
push
inc
or
in
lods
je
mov
xor
repz
rol
mov
push
aas
jl
sar
sbb
push
or
mov
les
pop
int3
cmp
sub
jg
pop
ds
test
fwait
mov
hlt
mov
or
push
stc
mov
jns
aas
es
pop
stos
in
mov
test
and
jecxz
and
fsubp
cmps
pushf
pop
push
add
sbb
sub
mov
push
je
cmps
stc
xchg
and
pusha
sub
and
adc
les
jmp
and
jl
cmc
or
into
jl
mov
add
sbb
scas
ins
pusha
cmp
mov
adc
movs
push
and
jnp
dec
int3
loop
dec
push
jmp
mov
push
(bad)
mov
push
cmp
dec
push
lods
lock
or
add
fdiv
shl
(bad)
cld
(bad)
call
aaa
jne
ins
cmp
stos
jnp
dec
inc
sbb
jnp
lods
push
pop
jae
(bad)
jp
sub
cmp
xchg
mov
lahf
xor
fs
or
mov
or
jbe
xor
les
popa
sbb
adc
push
cmp
lahf
cmp
ror
push
xor
or
xchg
inc
hlt
cs
adc
sub
es
jno
push
cli
cli
mov
call
push
mov
movs
mov
rcr
repz
sti
(bad)
hlt
fmul
or
dec
imul
idiv
ficomp
mov
cmp
and
(bad)
(bad)
ja
pop
xchg
mov
xlat
addr16
pop
loope
add
fs
rcr
ret
or
inc
sahf
mov
popa
das
(bad)
jmp
movs
mov
in
inc
adc
cmp
sbb
icebp
sbb
jne
mov
sbb
retf
pop
retf
rcr
dec
xchg
cld
mov
aad
mov
and
enter
enter
sub
hlt
adc
adc
push
dec
inc
xor
xlat
cmp
cs
mov
xchg
lods
jne
cmp
fs
(bad)
mov
xchg
bound
mov
pushf
in
push
xor
movs
mov
sub
jmp
jg
sbb
aam
xor
fmul
dec
mov
xchg
mov
push
xor
mov
in
stos
pop
loopne
inc
mov
jns
out
neg
push
inc
js
ja
push
mov
lea
or
lahf
cld
xchg
lock
lods
pop
jae
in
sub
loope
stos
in
mov
ds
add
mov
adc
(bad)
adc
std
cmp
xor
sub
xor
stos
or
aas
cli
sbb
out
outs
bnd
loop
ror
(bad)
adc
pop
cmp
dec
pop
dec
addr16
in
push
add
dec
mov
xor
call
xor
cmc
cli
ins
mov
lock
mov
in
jmp
push
std
add
inc
mov
mov
gs
dec
xchg
sar
pusha
mov
sti
push
push
movs
clc
popf
pushf
jb
leave
sub
stos
dec
sbb
clts
xchg
inc
outs
test
add
push
jnp
mov
mov
jl
(bad)
ins
sti
stos
cmc
aad
xor
push
xor
and
(bad)
scas
sbb
das
aaa
ds
pop
jg
or
pop
mov
call
and
enter
cmp
jmp
shl
mov
gs
retf
xor
cmp
stos
test
imul
mov
sti
mov
cwde
mov
daa
repz
pusha
aad
jmp
call
jae
fnstcw
inc
(bad)
jae
sub
sub
and
aas
iret
fisubr
dec
in
fidivr
xor
ins
mov
mov
jmp
pop
gs
call
mov
adc
in
mov
adc
inc
cwde
xchg
mov
dec
ret
pushaw
sub
mov
mov
xor
push
and
fs
lods
sub
dec
out
xor
sub
jl
jne
xchg
adc
test
clc
and
inc
cmp
xchg
push
pushf
in
dec
ja
aaa
sar
in
neg
mov
mov
mov
fdivr
sti
push
daa
btr
sbb
imul
inc
xor
push
add
pop
mov
and
jmp
lock
sbb
(bad)
pop
jmp
fs
add
sbb
fdivr
(bad)
xchg
out
cmp
repnz
fadd
pop
les
xchg
in
loopne
mov
test
jae
in
setg
add
outs
and
sub
test
or
dec
or
mov
xor
jnp
cmps
mov
jns
icebp
sbb
push
xchg
adc
outs
jo
cs
stc
jp
adc
int
jne
xor
pop
pushf
outs
icebp
data16
mov
call
test
inc
bound
jno
rol
cmp
outs
nop
inc
fs
stos
ds
inc
mov
in
xchg
jbe
aad
xchg
fcomp
mov
pop
out
cld
sub
lahf
pop
mov
xor
arpl
xor
pop
mov
aam
add
cmp
mov
enter
lahf
and
retf
ins
scas
cmp
xor
mov
cli
xchg
popa
dec
daa
retf
add
xor
movs
stc
lahf
jl
leave
mov
mov
test
or
movs
pop
js
es
cmps
mov
dec
mov
leave
mov
repnz
or
aam
add
jmp
pop
xchg
jne
cmp
fld1
cmps
xor
aad
sub
sbb
mov
addr16
outs
push
inc
hlt
int3
and
and
scas
cmps
inc
or
cli
call
inc
ja
dec
sbb
xchg
repz
jne
cmp
stos
xlat
movs
popa
mov
test
pop
ret
sub
sbb
in
aaa
(bad)
es
aaa
(bad)
mov
loope
mov
and
movs
pop
lods
movs
dec
xor
xchg
mov
out
repnz
jg
jmp
pop
enter
jg
(bad)
xor
mov
jb
rcr
jb
das
into
lds
test
fst
sbb
add
fldcw
mov
cmc
cli
sub
inc
sub
dec
mov
inc
inc
dec
adc
xchg
sbb
pop
cld
push
out
std
loope
ret
sti
fnsave
jbe
std
sti
retf
mov
scas
adc
ja
inc
or
mov
js
dec
scas
outs
jne
push
lds
mov
xchg
enter
dec
(bad)
fsubr
sub
xlat
sub
or
push
out
call
out
movs
clc
shl
mov
jmp
jns
jnp
mov
inc
bnd
xor
retf
ret
js
xchg
xor
mov
mov
mov
xor
mov
inc
jbe
sub
inc
loope
cmc
pop
hlt
jle
adc
ja
mov
cwde
mov
xor
pushf
push
dec
mov
arpl
xor
and
nop
xor
scas
cmp
lahf
retf
jno
rcr
xlat
pop
out
add
in
fidivr
in
jge
push
cmc
push
test
ja
mov
(bad)
test
push
(bad)
std
cwde
jo
(bad)
retf
(bad)
push
ficom
test
loopne
pusha
sbb
mov
cmp
lock
(bad)
cmps
mov
jnp
into
xchg
test
adc
mov
loope
cmp
xchg
mov
sub
mov
or
pop
pop
setno
inc
stos
scas
daa
inc
push
mov
jle
in
xchg
scas
dec
dec
push
jmp
or
fwait
push
adc
push
jno
aad
pop
outs
test
adc
jo
aaa
pop
repz
xor
xchg
inc
sbb
bnd
mov
ja
fsubr
imul
pop
mov
mov
leave
mov
sub
arpl
(bad)
jl
push
iret
icebp
retf
or
pop
dec
sbb
or
fistp
popf
ja
dec
and
or
sbb
cmps
mov
sbb
into
ins
sbb
inc
jecxz
dec
jno
clc
frstor
or
xor
fstp
loope
rcr
jo
xchg
(bad)
sti
dec
(bad)
mov
adc
std
inc
jmp
jnp
inc
lahf
les
pop
sti
mov
dec
or
pop
jmp
fstp
or
jg
push
ror
add
repz
cld
aaa
jg
xchg
push
and
ret
xchg
add
cmp
outs
sar
inc
retf
mov
sahf
mov
pop
xchg
dec
aad
jo
in
loop
push
lds
mov
fadd
sbb
sbb
adc
js
popa
xchg
push
fs
in
xor
pop
retf
jnp
mov
js
mov
retf
in
rcl
movs
aam
imul
fstp
push
es
div
inc
mov
mov
rcr
test
stos
dec
imul
gs
add
inc
or
loopne
inc
out
add
sbb
pop
fucom
icebp
cmp
jmp
aas
pushf
sbb
pop
jmp
sbb
(bad)
xchg
cwde
sub
je
iret
int3
cld
shr
pop
in
sub
mov
ror
mov
repnz
aad
mov
js
adc
repnz
sbb
or
lods
ror
jbe
imul
jb
jns
sbb
jb
add
mov
inc
aaa
xchg
xor
add
enter
aaa
retf
jae
aas
pushf
sbb
adc
mov
push
clc
xchg
mov
dec
out
js
jmp
mov
xchg
imul
ja
leave
stos
mov
xchg
push
test
out
lock
in
push
pop
fbld
mov
inc
ins
dec
sub
retf
test
fild
inc
repnz
jo
out
cmp
mov
ret
retf
push
inc
jne
xchg
or
js
call
jne
push
retf
jne
push
add
push
aad
dec
sub
inc
sbb
pop
lds
iret
enter
cld
jle
dec
popa
mov
movs
or
rcr
(bad)
out
sbb
pop
aam
addr16
es
sub
pop
leave
sbb
cmp
mov
xchg
and
xchg
xchg
dec
fnstsw
add
cmp
xor
dec
sub
js
aaa
cmp
sub
bound
cmp
pushf
or
jnp
scas
xchg
push
xchg
lds
shr
jle
mov
pop
mov
ror
out
pop
pop
pop
outs
adc
add
mov
inc
mov
mov
cmp
sbb
jle
jne
fs
aad
ins
retf
aam
not
xor
xbegin
and
cmp
push
jg
sbb
jbe
mov
enter
pop
cs
test
pop
mov
add
adc
mov
das
adc
pop
push
loope
pop
sbb
mov
xabort
outs
push
or
cmps
in
lods
pop
xor
sbb
mov
imul
stc
int
inc
mov
push
cli
inc
pop
outs
jmp
dec
sub
pop
cmp
lds
shl
clc
outs
in
nop
jge
add
jb
or
xchg
xor
cmp
sahf
ins
cwde
or
sbb
sub
xchg
es
xor
dec
xchg
inc
jbe
les
fisubr
mov
rcl
add
xchg
push
ja
cwde
push
mov
shr
dec
mov
xor
sti
ffree
adc
in
xor
add
mov
sbb
mov
jo
mov
fist
fdivp
stc
(bad)
call
adc
(bad)
out
ss
out
enter
int
das
pop
cmp
ds
pop
mov
aaa
popa
mov
call
out
mov
cmc
or
xchg
push
mov
jge
fs
jns
push
push
and
(bad)
loope
iret
mov
xchg
sub
add
dec
pusha
rcr
iret
jb
sub
pop
gs
mov
in
aad
dec
xchg
cmp
jnp
lahf
(bad)
pop
xor
mov
sbb
adc
popf
jecxz
and
iret
pop
xchg
and
cmp
xchg
mov
add
in
(bad)
mov
mov
loope
add
pop
sub
xlat
push
dec
inc
icebp
mov
xor
arpl
(bad)
xlat
repnz
loop
dec
mov
(bad)
cwde
mov
inc
sbb
mov
mov
xor
mov
mov
push
jecxz
push
cld
cmp
mov
mov
jl
jp
ja
sub
push
dec
adc
and
(bad)
mov
popa
rol
out
mov
adc
mov
adc
fs
fcomi
pop
stc
mov
ins
mov
push
mov
sbb
mov
jle
mov
mov
bswap
rcl
jns
and
pop
loopne
ror
dec
jge
push
and
mov
inc
xor
mov
mov
movs
jb
mov
and
pop
mov
cmp
inc
in
cmp
mov
sub
jo
lahf
inc
and
mov
inc
cmp
enter
mov
lods
xor
inc
iret
loope
xor
or
pop
adc
popa
xor
in
sbb
ins
xor
xor
out
mov
mov
sub
repnz
and
push
inc
lods
push
adc
cmp
int3
cmp
es
mov
dec
(bad)
scas
and
ss
adc
shl
jle
ret
pushfw
stos
mov
cmp
sbb
ds
stc
fcmovu
test
adc
ds
sahf
loopne
pushf
hlt
dec
cmps
pop
sub
int3
mov
clc
mov
loope
pushf
mov
jmp
cmp
movs
mov
and
or
pop
sub
jmp
or
xchg
jb
sub
stc
pop
mov
popf
cli
lods
sar
test
push
jge
lock
pop
lds
mov
cmp
push
add
mov
inc
ja
mov
mov
ret
loopne
or
xor
addr16
xchg
mov
ret
test
cmc
sbb
stos
add
fidiv
dec
daa
mov
mov
jmp
and
scas
out
push
pushf
mov
retf
inc
daa
test
mov
out
repz
scas
fstp
mov
sahf
add
inc
and
push
push
ins
sahf
aaa
pushf
pop
and
cmp
int
xchg
mov
pop
push
loop
test
push
mov
sub
cmp
xor
leave
adc
ret
fsubr
sti
adc
pop
pop
mov
inc
sbb
mov
popa
ins
lods
pop
or
test
das
add
push
out
adc
push
frstor
test
xchg
jb
xchg
mov
push
call
push
sbb
retf
mov
dec
cld
enter
xchg
pushf
mov
aad
rcr
xchg
retf
mov
lock
outs
push
sbb
jno
cmp
pusha
(bad)
out
test
adc
shl
scas
call
nop
and
scas
(bad)
daa
xchg
in
xchg
in
pop
mov
lods
mov
dec
mov
es
xchg
(bad)
arpl
out
inc
xor
shl
xchg
ins
push
cdq
jge
mov
call
or
add
mov
bound
sbb
(bad)
daa
jb
inc
outs
outs
push
cmp
(bad)
pop
ret
jb
sbb
mov
(bad)
dec
adc
lock
lods
aaa
inc
dec
sub
xor
mov
or
mov
inc
cmp
int3
jmp
std
mov
ja
mov
test
adc
arpl
xor
movs
scas
jp
movs
mov
push
mov
mov
rcl
push
or
das
loop
pop
dec
pusha
adc
inc
sbb
pop
out
mov
mov
movs
(bad)
les
(bad)
or
hlt
fstp
sbb
add
(bad)
fnstsw
and
xchg
cdq
call
ds
rcr
movs
xchg
loop
inc
(bad)
(bad)
rcl
leave
pop
add
repz
xchg
xor
cmp
xchg
test
movs
sbb
pushf
add
cmc
lahf
inc
out
xor
jb
repnz
add
push
inc
inc
push
sbb
mov
push
jbe
stos
data16
cs
das
sub
iret
sub
cmp
inc
(bad)
cwde
mov
cld
aad
xchg
out
mov
jl
inc
sub
in
scas
mov
ja
clc
or
(bad)
fdivr
loop
inc
pop
movs
clc
xor
in
iret
mov
repnz
sbb
mov
adc
lahf
mov
cmp
mov
arpl
push
lds
out
pop
mov
mov
mov
mov
pop
mov
out
push
mov
lods
mov
cdq
das
mov
xor
mov
int3
outs
xchg
push
push
mov
retf
cmp
pop
jmp
mov
mov
or
mov
xor
mov
push
retf
mov
cmc
sub
int3
inc
outs
inc
loope
adc
mov
dec
mov
xor
or
out
adc
mov
add
mov
mov
pop
push
add
pop
call
stos
and
mov
es
add
retf
loop
pop
or
mov
inc
retf
mov
repnz
dec
sbb
xchg
fisub
adc
or
xlat
mov
pop
pop
adc
cmps
jp
scas
or
cli
lock
add
dec
inc
push
xchg
je
sub
sub
lahf
retf
mov
sbb
xor
push
out
pop
adc
dec
dec
addr16
je
and
add
mov
cmp
push
and
dec
push
std
cmps
sti
inc
aad
in
xchg
inc
cli
xlat
or
mov
sahf
xor
mov
jle
inc
xor
inc
mov
xor
and
push
add
loop
pop
cmc
cmps
xchg
lods
test
or
retf
inc
loop
sub
mov
pop
sbb
jns
enter
call
push
bound
and
ins
sub
mov
add
fild
sar
add
cmps
fs
cmp
mov
icebp
(bad)
xlat
mov
add
mov
inc
mov
mov
xchg
cmp
xor
lea
(bad)
adc
(bad)
pop
push
(bad)
push
mov
xchg
or
and
ss
aaa
jge
sbb
popf
push
cmp
lods
mov
es
sub
pop
mov
das
and
mov
jnp
inc
movs
sbb
icebp
mov
repnz
inc
rcr
pop
adc
ds
repnz
(bad)
sub
add
jmp
out
adc
mov
pop
pushf
mov
add
outs
jl
sub
mov
ret
push
test
cwde
sub
call
and
inc
cmp
out
xchg
(bad)
imul
jle
(bad)
imul
add
(bad)
sbb
jne
add
dec
xor
mov
mov
cli
mov
pusha
or
xchg
mov
dec
mov
sbb
cmps
gs
adc
pop
push
movs
fcom
mov
shl
sti
aam
xor
ret
faddp
mov
add
jecxz
lea
jo
push
and
aad
aas
adc
das
push
push
sub
call
aaa
jnp
imul
cmp
push
loop
pusha
inc
cs
mov
call
dec
es
(bad)
(bad)
jl
push
sbb
sbb
fwait
xchg
or
dec
dec
cmp
call
(bad)
xor
adc
shl
xor
ss
cmp
mov
call
mov
mov
push
sub
dec
and
pop
cmp
cmp
xor
out
fist
dec
jb
pop
cmp
jb
int3
sub
dec
mov
lea
pop
ror
mov
js
mov
cmp
fs
mov
cmp
stc
inc
mov
cmp
and
pop
fs
test
jnp
jge
lock
mov
fldcw
retf
xchg
clc
into
bound
and
adc
mov
rol
mov
dec
inc
xchg
bound
jp
enter
cwde
mov
movs
cli
and
sahf
aad
push
(bad)
(bad)
retf
pusha
fwait
gs
aad
(bad)
pop
test
dec
xor
scas
mov
dec
dec
xlat
inc
push
cmc
jmp
jo
push
fiadd
hlt
mov
pushf
inc
scas
or
stc
inc
int3
jmp
mov
pop
jb
mov
vcmpss
pop
mov
sbb
scas
int
push
cmp
push
daa
cdq
gs
lock
outs
cmp
push
rcr
mov
lahf
jne
push
ficomp
out
cmp
es
inc
(bad)
mov
out
xor
push
jo
push
pushf
daa
jo
sbb
test
or
xor
sub
inc
xor
jns
mov
sub
int
push
pop
and
xchg
stos
mov
dec
in
daa
repz
ins
lods
adc
(bad)
(bad)
jle
push
or
mov
mov
mov
icebp
enter
movs
pop
xchg
push
dec
in
cmps
sti
xchg
jnp
add
cmc
in
cmc
or
lahf
xor
jno
or
dec
movs
je
add
jl
sub
pop
jp
aad
and
pop
dec
fnstenv
add
mov
mov
mov
fdivr
pushf
dec
out
daa
inc
pusha
pop
(bad)
jbe
xor
sub
pop
jmp
test
imul
fnstenv
inc
adc
outs
cmp
cld
or
loope
lods
loope
mov
aas
popa
in
lea
bound
or
cli
and
enter
adc
jno
or
fnstenv
mov
pop
xchg
pop
into
loop
sub
pop
adc
mov
call
mov
sbb
and
dec
je
mov
into
scas
cdq
push
jae
add
fcmovbe
mov
popa
mov
xor
fwait
and
std
test
push
or
sub
je
sbb
inc
stc
(bad)
lock
mov
mov
scas
fs
mov
fist
arpl
repnz
mov
shrd
push
sbb
cmps
aaa
xor
xchg
(bad)
out
(bad)
lock
dec
test
sbb
(bad)
das
nop
ja
pushf
sub
sub
sbb
or
pusha
cs
xchg
and
jmp
adc
sbb
push
cmp
xor
xchg
adc
jmp
and
jge
scas
idiv
mov
cmp
pushf
repnz
jle
call
fnstenv
push
int3
pop
int3
ja
clc
(bad)
loopne
out
nop
popf
pusha
sbb
mov
cli
int3
(bad)
xchg
js
aaa
popa
int3
ror
outs
xor
scas
inc
xchg
arpl
aas
or
retf
pop
icebp
enter
(bad)
inc
cmc
sbb
int
cmp
rol
xchg
inc
push
push
inc
rcr
pop
(bad)
xor
xlat
cmc
add
or
sahf
add
iret
out
xchg
add
or
ins
hlt
mov
push
pop
out
pop
pop
push
cwde
cwde
adc
mov
cdq
aaa
xchg
adc
add
mov
mov
je
ret
push
inc
jb
push
call
push
adc
fbld
mov
dec
mov
mov
popa
xchg
(bad)
call
test
lock
xchg
adc
mov
sbb
cmps
or
lds
lds
jne
sub
das
test
pop
push
cs
or
xor
mov
ss
xchg
jae
ficom
xchg
ret
inc
frstor
jae
call
xchg
cwde
mov
(bad)
inc
push
xchg
pop
(bad)
jmp
cli
pop
inc
pop
mov
jae
fsubr
fistp
retf
clc
aaa
xchg
add
(bad)
idiv
and
inc
cld
mov
repnz
outs
adc
jnp
dec
(bad)
jne
sbb
sbb
retf
stos
lea
inc
adc
add
arpl
mov
sbb
jecxz
ret
jle
out
xchg
jle
cmp
movs
das
mov
icebp
call
jl
movs
push
push
dec
push
and
fbstp
retf
sbb
mov
out
scas
jp
jp
retf
addr16
sub
mov
cld
addr16
outs
push
in
aam
ror
cli
test
fwait
test
add
add
jmp
add
scas
xchg
scas
inc
push
shl
lea
adc
mov
jle
push
mov
xchg
cld
dec
jnp
add
loop
test
xchg
xchg
xor
xor
loop
cld
lods
pop
stos
lea
shr
repnz
mov
ja
cdq
inc
pop
mov
xchg
add
sub
push
jg
or
or
and
scas
add
into
ss
push
loop
stos
mov
lahf
xor
int3
pushf
xchg
mov
pop
xlat
rcl
imul
into
lea
add
jae
fwait
sbb
les
push
cmp
(bad)
ds
xchg
and
push
and
push
mov
lock
push
push
cdq
out
and
mov
nop
adc
adc
xor
jbe
repz
mov
or
(bad)
in
mov
cmp
fwait
das
cdq
dec
adc
mov
jns
cmp
ret
imul
aam
shr
clc
and
cwde
test
mov
mov
in
(bad)
jle
add
and
inc
adc
mov
out
(bad)
jb
test
pop
push
adc
add
outs
inc
test
outs
pop
pushf
dec
push
in
test
mov
xchg
or
pop
add
jno
dec
mov
jge
call
sub
cmps
pop
(bad)
(bad)
pop
sub
addr16
mov
pop
and
scas
xor
adc
test
xchg
mov
or
sbb
loop
inc
lods
aaa
ins
int3
pop
mov
addr16
arpl
fs
stos
pop
sub
ret
add
add
jns
sub
ja
int
sbb
adc
iret
xchg
movs
xchg
gs
repz
jae
retf
mov
inc
imul
jne
rcr
jmp
mov
mov
jp
sub
sti
fidiv
push
sub
fisubr
rcl
pop
mov
jmp
dec
mov
mov
pop
inc
pop
pop
(bad)
vmread
inc
add
loopne
jl
inc
or
pusha
leave
js
pusha
enter
mov
pop
xor
fist
cmp
push
repnz
sbb
mov
mov
(bad)
hlt
in
pop
aam
adc
out
adc
push
movs
or
jne
and
test
adc
leave
adc
cmp
cmp
popf
stos
inc
jbe
mov
retf
push
scas
dec
mov
pusha
mov
push
adc
push
jns
imul
push
dec
mov
jmp
imul
add
cwde
out
pop
cwde
icebp
sar
inc
push
lds
push
mov
mov
cs
xchg
scas
ret
mov
sbb
dec
lahf
mov
dec
xor
es
adc
js
dec
gs
jmp
mov
daa
inc
or
lock
stc
sbb
in
cmps
xor
mov
fdivr
xor
dec
mov
retf
add
enter
push
not
pop
out
and
cwde
bound
inc
jg
push
sub
cmc
scas
sbb
mov
int3
pop
imul
inc
push
jge
push
arpl
xchg
les
nop
hlt
mov
bnd
test
call
inc
dec
push
cmp
repz
dec
movs
arpl
outs
xchg
gs
popf
inc
lea
pop
lea
in
mov
mov
or
jbe
mov
ficom
repnz
xchg
addr16
push
or
mov
xchg
dec
leave
pop
dec
sub
clc
hlt
popf
fcomi
out
sub
(bad)
(bad)
dec
jb
int
dec
stos
je
xchg
cmp
xchg
test
mov
call
cmp
test
jae
into
dec
cmp
(bad)
in
xchg
and
or
cli
inc
inc
mov
adc
xchg
sub
ins
and
mov
jno
ret
es
jae
dec
pop
mov
or
dec
jecxz
fwait
test
test
(bad)
jnp
enter
mov
mov
bound
xchg
jl
sahf
(bad)
int
and
dec
out
sbb
adc
inc
mov
mov
fsubr
loope
adc
retf
fisub
mov
hlt
mov
jns
loope
push
sti
jp
cmp
adc
and
jl
jbe
clc
rcl
jae
mov
xchg
gs
jg
mov
ds
es
iret
shr
cli
jo
xchg
leave
inc
repnz
cmp
lock
pop
add
inc
int3
(bad)
sti
push
xchg
jno
push
jmp
lea
push
cmp
aam
int
xchg
mov
jecxz
or
cs
xchg
sub
dec
sub
ins
cmp
or
mov
arpl
mov
jbe
adc
lods
cmps
nop
adc
lock
dec
mov
pop
jmp
leave
push
aaa
sbb
clc
or
mov
(bad)
jp
(bad)
into
xor
test
fisttp
mov
out
push
adc
add
jmp
jo
dec
std
lods
mov
popa
cmc
mov
fwait
pop
mov
sti
sub
shr
dec
xchg
sub
or
clc
xor
out
enter
xor
stos
daa
idiv
test
loopne
push
dec
repnz
mov
aad
lea
or
or
(bad)
in
pushf
aas
adc
adc
jmp
lea
and
div
fs
xlat
ins
jbe
loope
pop
fdiv
loop
xor
push
sbb
push
jge
repz
push
aas
adc
mov
movs
fimul
add
add
mov
inc
dec
pushf
pop
add
sbb
mov
inc
imul
xchg
pop
jecxz
jae
(bad)
pop
cli
cmps
jbe
outs
push
fsub
cmp
lds
xchg
cmp
xor
test
loope
jbe
jns
push
mov
mov
add
add
fsub
popa
add
xchg
dec
adc
shr
mov
or
push
fidivr
or
call
cdq
icebp
jno
jmp
outs
cmp
imul
cli
pop
xor
push
mov
shl
fwait
(bad)
sub
xchg
jno
xchg
pop
push
loop
jne
sbb
mov
mov
mov
sub
cmp
sahf
xor
addr16
mov
repnz
pmuludq
pop
mov
(bad)
out
jmp
mov
jno
inc
xor
dec
xchg
(bad)
inc
loop
retf
mov
xlat
inc
stos
outs
or
mov
push
clc
aas
loop
mov
aaa
adc
jbe
dec
aaa
bound
repnz
rcr
mov
lea
fwait
leave
push
retf
pop
and
(bad)
cmp
push
inc
popf
into
or
repnz
repnz
shl
xor
mov
das
nop
mov
movs
pop
cs
rol
lods
iret
pop
inc
jb
pop
(bad)
pop
pop
movs
xchg
ret
leave
or
imul
cmp
loope
das
mov
aad
into
jecxz
add
cmp
mov
addr16
jb
jmp
mov
aad
cmp
push
pop
add
xor
mov
ret
leave
pop
js
fwait
adc
xchg
shl
add
es
adc
and
int
fnsave
sahf
out
not
adc
stc
fs
inc
mov
mov
aad
push
mov
mov
push
jne
shl
cwde
pushf
jl
mov
or
xor
xor
cmp
imul
jbe
loope
out
ins
in
imul
jg
cs
les
mov
cmc
fld
pusha
fimul
in
mov
rcl
xor
push
aas
cmp
cmp
mov
in
mov
int
inc
rol
or
xchg
inc
add
fsub
and
lods
or
out
(bad)
retf
or
push
push
mov
dec
retf
lea
imul
ror
out
sbb
xor
lahf
mov
dec
in
inc
pop
mov
add
sti
dec
and
test
push
shl
xchg
movs
clc
(bad)
or
xchg
mov
pop
test
aad
dec
arpl
mov
ss
ret
mov
adc
and
stc
push
jmp
sbb
xchg
inc
iret
(bad)
push
cdq
lea
(bad)
shl
mov
sub
sub
push
mov
aad
pushf
outs
mov
hlt
repz
sti
retf
sub
loope
frstor
les
and
repz
sub
fwait
mov
push
mov
xchg
dec
jmp
retf
xchg
rol
(bad)
les
add
cmps
pop
in
lea
jle
inc
mov
mov
retf
mov
in
mov
push
mov
add
inc
jge
and
rcr
or
xchg
jne
(bad)
sub
test
pop
movs
cmp
clc
xlat
push
cwde
loopne
xchg
pop
(bad)
pushf
std
pop
push
xchg
and
or
shl
mov
dec
fistp
push
sti
mov
test
shr
jmp
mov
add
push
test
in
push
or
push
sbb
dec
movs
lods
jno
and
inc
adc
xchg
sbb
cli
xchg
push
and
cmc
pop
cmp
in
mov
adc
dec
out
and
dec
aas
outs
sbb
xor
loopne
mov
cmp
js
mov
dec
lahf
xchg
dec
pop
xchg
daa
jne
(bad)
in
std
(bad)
cli
dec
into
push
mov
pop
xchg
cli
loop
out
jp
push
inc
std
cdq
inc
push
gs
int3
cmp
push
fwait
retf
fnstsw
js
adc
test
mov
mov
fcom
(bad)
mov
xor
sbb
popa
ss
repz
or
or
adc
(bad)
lods
pop
enter
mov
inc
out
xchg
call
sub
mov
mov
(bad)
fsubr
mov
jb
xchg
js
push
push
jg
cmps
jae
mov
xor
cmps
loope
sub
and
(bad)
add
and
test
mov
icebp
test
mov
sar
fiadd
(bad)
pop
mov
test
jge
add
mov
cli
iret
inc
push
rol
and
loopne
add
mov
or
je
jbe
into
mov
jl
mov
cmps
dec
xchg
mov
aaa
add
mov
stc
fwait
mov
mov
or
sar
pop
adc
jmp
into
(bad)
xlat
arpl
lods
es
adc
xor
cmps
dec
mov
leave
movs
lods
retf
test
pop
in
fs
push
stos
hlt
xchg
fsubp
and
cmp
push
or
inc
(bad)
fwait
cmp
test
mov
sbb
int
stc
pusha
sar
jp
push
mov
and
add
sbb
inc
jbe
call
or
call
or
(bad)
xchg
in
jge
xor
fs
mov
les
or
cli
out
jb
(bad)
pusha
push
rcl
jg
pop
dec
jmp
les
push
jp
mov
or
dec
aam
cdq
push
scas
xchg
mov
add
ficom
push
pop
xor
test
mov
outs
push
stos
add
push
add
jmp
nop
pop
dec
loopne
call
popa
aam
xor
xor
xor
aad
mov
movs
jne
out
add
xor
loop
mul
push
pop
cmp
xor
jo
in
std
rcr
adc
shr
repnz
cmp
adc
lahf
push
pop
xchg
sti
inc
jmp
cmps
xchg
or
movs
mov
xchg
inc
test
scas
(bad)
dec
push
(bad)
mov
jo
adc
inc
lods
in
cdq
xor
fist
adc
imul
or
(bad)
pop
pushf
mov
inc
push
out
mov
mov
fiadd
xchg
movs
xchg
cmp
cmps
inc
inc
(bad)
xor
or
xchg
std
sbb
sti
jmp
popf
push
xor
sbb
and
stos
loope
mov
cli
int
dec
xlat
inc
sti
mov
adc
pop
int
(bad)
cwde
pop
mov
repz
pop
fadd
popf
push
in
imul
add
mov
das
xchg
(bad)
xor
jo
rcl
mov
test
stc
mov
rol
push
pushfw
xchg
rol
ds
push
inc
push
hlt
(bad)
cmp
out
aas
xchg
lds
mov
ja
cdq
mov
icebp
js
cs
xlat
inc
into
adc
sub
cmp
call
mov
adc
repz
push
je
ret
std
cld
mov
mov
sti
les
jmp
int3
cli
stos
sbb
addr16
push
adc
add
pop
xor
xor
pop
push
jnp
mov
sbb
sbb
xor
int
or
xchg
(bad)
retf
stc
movs
xlat
in
xlat
es
cmp
sti
pop
dec
inc
xor
aas
xchg
mov
inc
fild
push
xchg
push
mov
push
dec
push
mov
pop
sbb
sbb
ds
sub
sub
jl
push
mov
dec
jmp
andps
out
out
cld
push
jo
sbb
retf
xchg
pop
pop
mov
jp
sahf
test
out
sbb
hlt
ja
movs
dec
repnz
sbb
dec
shl
sti
push
iret
jl
sbb
pusha
and
pop
lahf
adc
out
mov
fld
dec
pop
cld
sub
jne
xlat
(bad)
adc
cmp
cmp
sbb
fiadd
sti
pop
test
sbb
daa
int
push
ss
(bad)
int
sbb
iret
nop
mov
data16
inc
jmp
test
adc
cmp
xor
xor
mov
scas
adc
js
or
mov
dec
and
ret
vpsubb
pop
xor
lea
ins
and
xchg
sbb
and
xchg
and
mov
inc
cmps
pop
mov
xlat
aaa
adc
test
lods
sub
inc
inc
xor
jecxz
imul
test
jl
inc
dec
adc
outs
loopne
movs
adc
mov
push
sbb
daa
mov
ins
push
xor
loopne
sub
sbb
icebp
dec
xor
mov
adc
ds
sar
mov
ja
xchg
das
ret
or
add
jo
repnz
xor
mov
nop
call
jno
test
cmp
fisttp
mov
adc
pop
(bad)
jne
or
add
push
jbe
jae
sbb
add
ss
xchg
mov
inc
xchg
jge
sub
push
sti
xor
out
sub
jmp
enter
rol
data16
into
jmp
mov
(bad)
movs
fs
data16
stos
jno
arpl
xor
or
xor
jmp
or
pop
push
dec
jp
xchg
loopne
cwde
sub
test
fbld
repnz
jb
nop
in
xor
clc
not
dec
addr16
inc
and
jl
cdq
and
in
popf
test
mov
enter
push
stos
dec
mov
iret
jmp
xchg
and
xlat
cli
mov
add
std
ja
mov
sub
repnz
inc
sub
fistp
shl
in
stos
mov
and
xchg
test
js
add
adc
ds
inc
mov
(bad)
retf
lea
and
ins
popf
sbb
repz
mov
jge
stc
sbb
xchg
loopne
xchg
nop
dec
in
jl
sub
or
push
popa
jbe
jge
in
or
xor
pushf
mov
pop
shl
stc
sub
and
inc
ins
inc
fstp
addr16
push
scas
mov
das
jae
jle
dec
arpl
adc
sub
cmc
in
addr16
xchg
js
mov
mov
gs
jp
addr16
repnz
das
leave
push
push
push
cld
popa
cmp
aam
jle
push
or
shr
pusha
xchg
xlat
das
adc
fiadd
add
jne
fwait
sbb
mov
in
cmp
inc
ins
daa
cwde
cmp
in
adc
mov
popa
sub
fist
es
int
es
mov
and
popa
call
sahf
sahf
pop
xchg
cld
push
mov
inc
jns
mov
push
out
xchg
sahf
fdiv
push
into
stc
jae
sbb
mov
and
ins
fwait
sbb
(bad)
fldcw
push
ret
xor
data16
test
sahf
cmp
sahf
push
xchg
push
test
xor
push
xchg
and
inc
cmps
dec
jmp
je
lock
mov
sahf
dec
inc
fidivr
ja
aas
or
dec
push
sti
xchg
mov
xor
pop
stos
push
add
ins
sub
shl
shl
mov
mov
cmp
call
sub
or
repz
movs
mov
dec
loop
mov
mov
movs
(bad)
je
or
xlat
sub
xchg
jle
in
cmp
sbb
iret
push
push
lods
mov
sar
push
sbb
push
pop
stos
mov
pop
ins
movs
push
(bad)
addr16
xor
cmp
daa
push
and
gs
loope
xchg
in
sub
gs
ror
push
mov
or
stc
shr
lods
push
mov
inc
test
jnp
in
cmp
je
jne
adc
clc
cmp
ret
repnz
out
xchg
into
sub
mov
test
cwde
or
shr
shl
dec
mov
fdiv
cli
jmp
push
xor
outs
xor
retf
cmp
xor
adc
scas
(bad)
xor
lds
xor
sub
jp
add
xor
sti
mov
inc
cdq
push
xor
in
ds
and
je
ffree
add
(bad)
xchg
ror
ret
(bad)
mov
test
mov
pop
mov
gs
js
(bad)
mov
xchg
mov
add
cmp
shl
xor
in
out
mov
mov
fs
jns
cmp
outs
(bad)
cld
push
mov
mov
stc
adc
sti
dec
cmovp
dec
fbstp
(bad)
leave
or
add
add
in
and
mov
dec
sub
rcr
mov
mov
call
pop
pop
xchg
push
into
pop
in
call
sar
mov
rol
movs
dec
arpl
imul
sbb
and
sub
mov
or
push
loop
fisttp
nop
xchg
cli
loopne
cmp
aam
ja
add
mov
lea
xor
xchg
sahf
pop
mov
std
mov
jae
jecxz
call
(bad)
and
test
sbb
(bad)
pop
push
gs
add
cmp
cmp
retf
and
xchg
enter
mov
push
or
and
mov
and
std
out
hlt
mov
fs
pop
dec
adc
sbb
ins
fidiv
xor
adc
pusha
mov
ret
cdq
lds
pop
lods
inc
xchg
mov
push
out
sar
loop
cmc
cmp
mov
push
pusha
jae
sub
in
add
adc
push
inc
sub
xlat
movs
lods
out
es
pop
(bad)
jae
mov
jle
sub
xchg
iret
retf
lods
fmul
jmp
and
stos
mov
mov
ja
mov
pop
inc
scas
cmps
clc
inc
fsub
push
outs
ins
jo
icebp
sub
sub
test
pop
shr
pop
mov
jb
add
adc
jmp
pushf
sbb
cwde
sti
push
shr
sar
test
call
pop
xchg
add
push
je
gs
(bad)
loop
dec
fwait
out
or
call
mov
(bad)
jnp
inc
rcl
retf
and
adc
sti
xchg
sbb
(bad)
xlat
movs
movs
sub
ret
loopne
xchg
mov
jmp
push
jecxz
push
popa
pop
mov
push
mov
call
push
lea
clc
cmc
(bad)
push
call
jb
xchg
xchg
adc
dec
mov
xchg
add
inc
lea
dec
hlt
lea
out
gs
fs
ins
aas
xchg
call
daa
add
jb
push
pop
xchg
lods
dec
jb
pop
ins
push
lock
sbb
mov
and
or
ins
jb
push
fwait
pop
int
mov
mov
xchg
retf
out
aad
dec
adc
enter
ret
imul
inc
mov
popa
mov
movs
or
lock
inc
test
dec
psubusw
cmp
ins
sbb
aad
xchg
inc
mov
xchg
rol
mov
push
or
call
bound
(bad)
sbb
retf
add
cmps
pop
sbb
xor
fs
mov
ficom
jge
(bad)
imul
pop
fwait
xlat
fisttp
ja
xlat
leave
icebp
inc
cmc
sub
or
aas
jg
mov
test
sub
fwait
inc
out
ret
and
lahf
iret
adc
mul
inc
mov
daa
call
lods
push
in
inc
mov
sbb
aaa
xchg
mov
enter
cmp
sbb
push
and
enter
je
dec
adc
in
push
xor
mov
and
jp
dec
fldcw
(bad)
lock
sub
fdivr
xchg
(bad)
jge
jae
arpl
out
imul
cdq
fnsave
push
data16
dec
xor
inc
fucom
outs
xor
mov
dec
dec
xor
inc
and
mov
mov
fldcw
call
push
iret
imul
jo
sar
jnp
arpl
xchg
dec
imul
fld
xor
sbb
shl
mov
movups
lock
mov
sbb
mov
jl
das
test
inc
pop
jbe
mov
dec
jne
shr
push
or
or
inc
add
mov
sbb
sahf
jg
sti
dec
ret
in
and
lods
adc
cmc
es
out
mov
ja
jb
das
(bad)
ds
push
push
or
sub
bound
repz
ds
xor
jmp
stc
mov
lods
jne
(bad)
mov
push
ror
ret
lock
cmp
and
jle
and
cmp
mov
in
pop
popf
jecxz
gs
mov
ror
imul
sbb
xchg
inc
(bad)
jmp
fs
jno
pop
jmp
fild
sbb
pusha
out
lock
cmps
out
inc
pop
push
adc
(bad)
jmp
mov
aas
and
scas
sbb
repnz
retf
inc
and
cmp
fadd
loope
fwait
sbb
outs
ja
sub
dec
mov
ficom
sbb
push
test
shr
in
sbb
cmps
or
not
popa
fcomp
jmp
jge
retf
mov
cmp
push
into
popf
test
add
dec
(bad)
push
ins
aas
xor
xchg
and
je
jl
movs
sbb
push
xlat
es
aaa
fild
cs
mov
stos
cmp
test
or
mov
mov
iret
fisttp
add
jecxz
push
(bad)
sub
(bad)
dec
push
not
dec
hlt
ins
jge
out
xor
dec
mov
loop
frstor
(bad)
repnz
arpl
call
jns
cmp
pop
in
adc
or
mov
pop
sub
mov
jmp
into
sbb
int3
call
sub
out
jl
cmps
sub
jno
add
jae
jle
or
outs
retf
inc
adc
into
xchg
mov
(bad)
cld
dec
daa
cmp
popa
in
into
out
hlt
es
mov
jo
in
scas
cmp
xchg
ror
scas
daa
pushf
mov
mov
cmp
shl
iret
test
cmc
mov
sti
jmp
aas
mov
fldcw
sub
daa
jmp
dec
out
jns
mov
int
and
outs
mov
cld
and
int
mov
or
dec
fbld
adc
fcomp
std
add
(bad)
pushf
add
dec
aad
not
jo
stos
adc
jns
mov
not
xor
mov
add
or
push
lods
in
push
adc
retf
ficomp
lea
add
jmp
mov
adc
in
or
jge
xchg
sub
loope
loope
cmps
pop
mov
add
aaa
jnp
sub
pop
in
cmp
xchg
test
imul
mov
sub
sahf
stc
sub
sbb
adc
mov
cmps
jl
lods
xchg
cmp
inc
stc
sub
sbb
popa
ds
xchg
stc
mov
data16
aam
jg
mov
and
(bad)
(bad)
jmp
jecxz
out
fld
mov
inc
jp
pop
repnz
test
mov
add
js
call
shl
mov
adc
cmp
mov
jle
jle
int3
inc
cmp
inc
retf
inc
cdq
sub
add
lds
sbb
cmp
push
das
push
in
add
mov
push
jmp
(bad)
in
push
movs
xor
scas
into
mov
sbb
and
loope
cmps
dec
mov
dec
lea
adc
sub
fld
lahf
xor
jg
sbb
not
sbb
(bad)
ror
mov
dec
std
sar
jp
dec
dec
dec
xchg
cmp
mov
test
inc
stc
xor
cmp
mov
xchg
dec
dec
fnstenv
inc
movs
xchg
jno
sbb
dec
es
lods
sahf
mov
ret
gs
out
mov
push
stos
movs
lock
enter
lods
sub
push
pop
mov
mov
xor
cdq
lock
fidiv
fnsave
movs
repz
dec
lods
lock
daa
push
and
aad
mov
imul
sbb
cmps
jne
pop
and
inc
push
imul
mov
mov
stos
cmp
bound
loop
jo
popa
mov
cmps
movs
pop
mov
(bad)
in
dec
sub
xchg
cmps
ss
jb
pop
lods
cmp
int
rol
mov
int3
lods
jecxz
mov
out
call
jg
arpl
push
aaa
outs
sbb
sbb
fwait
dec
mov
fnsave
fwait
les
cmp
inc
loope
sbb
add
lea
scas
cli
xor
stc
jns
jns
out
mov
jg
out
pop
sti
jnp
push
stos
call
data16
or
cmp
adc
gs
sub
push
sub
retf
inc
cmp
mov
loopne
es
hlt
dec
add
call
sbb
dec
pop
nop
adc
pop
(bad)
sub
(bad)
popf
pop
jg
mov
aam
dec
inc
out
add
jmp
add
adc
mov
aam
sahf
retf
or
sar
or
pop
(bad)
call
imul
and
add
test
fnsave
xor
add
(bad)
dec
inc
sahf
mov
sub
bound
dec
pop
jl
dec
daa
sar
pop
aad
mov
and
jmp
dec
ds
or
pop
sbb
dec
(bad)
mov
out
je
sti
test
addr16
push
sub
out
bnd
add
xor
inc
mov
ret
data16
mov
xor
cld
adc
fdiv
pop
sbb
and
sbb
inc
add
dec
ror
scas
aam
(bad)
fild
mov
sti
fs
and
cmps
ins
mov
inc
adc
jmp
mov
sub
jb
mov
bound
push
xchg
add
jno
jmp
xor
imul
mov
push
shl
fst
jbe
aaa
push
xchg
out
jmp
loopne
ja
jmp
out
fsub
jmp
fistp
xchg
push
xor
(bad)
shl
iret
ror
jp
shl
cdq
ret
hlt
push
inc
xor
dec
xchg
mov
and
pop
mov
inc
dec
bound
aad
loope
mov
push
dec
shl
rcl
fistp
aam
ret
mov
out
xlat
cmp
jg
add
add
and
jp
aas
aad
or
jns
popa
xchg
add
test
cmp
aaa
mov
sbb
pop
(bad)
das
add
sub
push
cmp
pop
dec
in
test
pop
push
lds
movs
ja
fs
sbb
repz
mov
pop
(bad)
fsub
shr
mov
enter
repz
mov
ret
xchg
dec
or
inc
shl
cmp
(bad)
enter
sub
push
mov
xchg
iret
mov
(bad)
je
jle
mov
inc
inc
icebp
arpl
rcr
js
mov
cli
outs
stos
pop
lahf
dec
js
mov
int3
rcl
daa
int
(bad)
xor
js
fstp
aaa
leave
mov
or
or
movq
mov
sbb
jne
inc
dec
sub
inc
mov
daa
addr16
int
rcr
rol
imul
hlt
sbb
js
sub
fs
lock
add
out
inc
xchg
nop
inc
bsr
inc
mov
sti
div
sbb
ins
cmc
icebp
(bad)
cld
(bad)
sar
sbb
aad
enter
cmps
scas
and
cmps
cmp
imul
repnz
and
into
idiv
jo
cwde
xlat
jg
adc
in
mov
(bad)
into
neg
aam
sub
movs
fmul
(bad)
push
push
test
sub
pusha
outs
mov
push
imul
ds
cli
test
mov
push
(bad)
sbb
or
(bad)
mov
cmp
push
fwait
stos
fwait
enter
nop
jge
retf
addr16
sahf
cmp
fidivr
xlat
jecxz
(bad)
into
loope
mov
add
xor
rcl
rcr
inc
call
mov
and
je
aam
int
cmp
pop
mov
pop
fstp
(bad)
or
outs
mov
fistp
mov
scas
xor
(bad)
arpl
jmp
pop
mov
dec
xchg
test
mov
cmp
in
add
push
dec
adc
pop
out
sbb
mov
lods
sbb
pop
push
pop
out
push
jne
sub
push
push
mov
and
and
cdq
pop
dec
sbb
xor
jmp
mov
mov
clc
div
in
dec
rol
repnz
sub
cs
lods
imul
jmp
push
call
mov
jo
rcr
adc
les
jmp
mov
(bad)
dec
aaa
shl
xchg
outs
push
ror
mov
add
cmp
and
adc
xchg
sbb
ficomp
retf
push
push
or
jecxz
jle
push
adc
dec
and
les
inc
push
sar
xchg
je
enter
out
mov
dec
repnz
cmps
call
lea
shr
mov
sub
lds
dec
test
adc
(bad)
shl
iret
sahf
aam
icebp
xchg
push
data16
and
fwait
mov
lds
out
scas
lods
stos
js
scas
dec
jbe
sbb
push
mov
mov
push
pop
rol
lods
cmp
imul
shr
stc
push
mov
cli
jne
arpl
jo
inc
sbb
ret
dec
mov
jb
out
add
pop
jne
jg
psubw
shl
jg
sub
mov
ret
xchg
cld
add
jmp
leave
pop
ret
jno
and
test
sub
js
jp
lahf
cli
push
out
sbb
sti
inc
xchg
push
adc
and
add
xchg
add
ins
jl
lods
and
in
push
pop
inc
(bad)
imul
lods
pop
in
repnz
imul
adc
push
(bad)
mov
shl
sub
ss
pop
mov
lahf
loopne
sti
xchg
scas
scas
push
add
adc
rcl
call
(bad)
and
adc
movs
inc
clc
inc
idiv
pop
push
mov
mov
mov
dec
sub
pop
xchg
xor
push
jle
pop
jl
stos
push
mov
js
daa
sbb
ret
movs
shr
aas
dec
sbb
add
xchg
lods
sbb
or
je
ret
mov
jg
mov
sub
adc
push
fldenv
pop
out
pushf
std
jo
jo
test
inc
lds
or
push
test
push
(bad)
cld
imul
data16
enter
inc
fidiv
ins
sub
test
xor
xchg
into
into
pushf
jns
cdq
pop
test
and
mov
mov
fsubr
or
pop
shl
fist
jne
sub
dec
lahf
fsub
jg
sub
icebp
cmp
inc
add
leave
push
pop
and
sti
push
cld
mov
out
cmp
ficom
xchg
pop
sbb
sub
push
stc
xor
add
push
in
sub
leave
mov
add
mov
sbb
jmp
gs
jne
cs
mov
mov
pushf
jg
pop
das
push
add
mov
cwde
test
push
es
add
pop
and
xchg
and
call
repnz
xor
mov
sahf
sub
xor
mov
sub
shl
push
adc
pusha
push
sar
push
in
aas
shl
imul
add
and
inc
sbb
shr
jns
or
sub
es
adc
imul
sub
xchg
pop
mov
test
sub
pop
jg
in
test
in
xchg
pop
fistp
ja
add
jbe
mov
mov
(bad)
mov
push
mul
sub
rcr
sbb
mov
ret
loop
inc
or
dec
scas
aas
mov
push
movs
pop
add
call
adc
sbb
test
xor
pop
cli
in
mov
es
lods
loopne
inc
xor
leave
dec
jl
nop
cld
mov
mov
(bad)
push
mov
sub
ret
jne
and
pop
neg
call
xchg
mov
pop
shr
jmp
adc
fs
add
push
js
and
(bad)
cmp
xchg
pop
push
pushf
cli
sbb
sub
jns
addr16
add
pop
adc
loopne
ja
icebp
pop
in
repnz
push
test
adc
es
cmp
inc
or
mov
push
out
jmp
jmp
dec
inc
add
cld
int
(bad)
std
int3
(bad)
daa
push
out
dec
dec
push
dec
push
mov
imul
sahf
scas
shr
shr
rcl
add
es
cmp
out
mov
push
clc
xor
cmp
sub
xor
cmp
xor
mov
xor
pushf
sub
jge
fsub
add
lahf
aam
mov
jo
xchg
sbb
stos
xor
lock
outs
add
test
and
mov
jle
mov
inc
je
push
mov
sbb
test
(bad)
aas
mov
clc
push
add
sti
mov
outs
push
mov
inc
push
test
fist
pop
mov
cwde
iret
cld
aam
sub
mov
popf
dec
imul
mov
jne
pop
faddp
mov
in
inc
icebp
push
sub
adc
(bad)
push
hlt
movs
(bad)
jo
lods
fld
inc
fwait
xor
jge
sub
cld
repz
xchg
ret
cmp
and
push
jmp
or
sbb
(bad)
jecxz
inc
loope
or
hlt
aad
push
add
test
data16
mov
outs
xor
pop
jb
and
mov
mov
sbb
scas
lock
xor
xor
push
lds
mov
dec
pop
mov
jge
dec
out
inc
fisttp
mov
mov
adc
sub
jmp
fst
fdivr
fwait
add
or
cmp
push
sbb
xchg
or
and
(bad)
test
(bad)
shl
fsubr
dec
pop
push
fmul
cld
xor
pop
daa
icebp
jge
xor
aaa
cmps
ja
xchg
pop
cmp
jno
out
(bad)
xchg
dec
jno
jp
xlat
cmp
pop
jae
outs
cld
add
jmp
cmp
push
(bad)
xor
inc
fcom
jae
sti
loope
pusha
jbe
int
outs
dec
ret
dec
xor
cmps
xchg
icebp
pushf
dec
sahf
ror
movs
imul
xchg
sbb
mov
pushf
jecxz
mov
xor
cmps
je
retf
fld
jmp
xor
in
and
aaa
push
cli
inc
rcl
add
adc
xchg
sub
push
les
aad
dec
ins
adc
add
cli
leave
in
movs
mov
fisttp
stos
in
out
dec
sahf
js
dec
call
inc
add
sub
jp
sti
fdiv
mov
shr
pushf
loop
fisub
or
mov
jge
pushf
not
jl
sbb
je
mov
adc
enter
ds
mov
hlt
aas
dec
adc
call
cmp
push
xor
lods
dec
mov
push
sub
jmp
jp
xor
push
stos
retf
xlat
jle
and
fdiv
leave
cmp
sbb
or
out
in
call
scas
int
cwde
fdiv
jb
jl
ret
stc
in
call
jmp
mov
ja
repnz
ret
mov
xor
dec
inc
pop
mov
fstp
adc
cmps
pop
mov
ja
cli
adc
mov
arpl
inc
add
ds
ss
push
inc
lods
aas
cmp
adc
push
lock
dec
pop
pop
fdivr
js
imul
and
scas
imul
adc
mov
cmp
gs
mov
movs
out
ins
cmp
data16
push
test
jmp
clc
mov
jne
fcomip
cmp
cmps
in
adc
out
add
cmp
xlat
inc
sbb
ja
mov
sahf
sub
add
xchg
lock
std
mov
xchg
test
inc
retf
mov
int3
adc
ds
pop
and
lods
mov
pop
scas
push
fld
pop
shl
int
inc
test
mov
int
inc
not
inc
mov
in
push
xor
push
fs
dec
mov
ins
xchg
retf
movs
pop
jecxz
ja
mov
mov
in
leave
jmp
sub
ins
dec
ss
cwde
(bad)
pop
jae
mov
pop
frstor
sahf
(bad)
cs
mov
adc
cmp
sbb
sbb
and
xlat
add
jb
xor
dec
adc
mov
sti
mov
lds
or
xchg
js
cmc
pushf
mov
std
push
ret
adc
popf
xchg
test
call
mov
jl
inc
pushf
jmp
in
jns
jae
repnz
pop
jl
push
jnp
dec
push
push
daa
std
mov
jns
jmp
jmp
das
hlt
pop
sbb
mov
or
adc
cmps
into
inc
stc
or
xchg
dec
push
imul
sahf
jmp
xchg
cmp
ins
cmc
jb
mov
sub
aaa
add
jmp
hlt
ret
popa
or
push
int
dec
les
addr16
jmp
ins
xchg
jbe
outs
test
sub
and
mov
pusha
mov
test
mov
test
jb
in
cmp
pop
mov
aam
cmc
mov
jno
iret
xlat
out
ins
fwait
dec
push
jnp
(bad)
lods
mov
fsub
sahf
add
js
cld
pop
adc
pop
out
add
or
fcomp
push
icebp
adc
loop
dec
ror
shl
sbb
or
dec
xor
repz
cmp
mov
adc
rcl
shl
add
(bad)
jp
and
inc
xchg
(bad)
mov
mov
stos
xchg
xchg
retf
fwait
push
pop
mov
sbb
pop
jb
int
adc
popa
inc
loopne
(bad)
(bad)
sbb
cs
cmps
aam
shl
dec
xchg
inc
sbb
(bad)
enter
int3
pop
and
(bad)
icebp
inc
fist
cmp
fwait
sbb
pusha
jmp
add
sub
movs
dec
enter
mov
mov
sub
pop
or
mov
test
data16
loope
arpl
or
jl
sub
es
enter
pop
pop
lea
fcom
retf
push
cwde
fld
and
push
jae
int
cmp
cs
adc
scas
pop
test
xchg
(bad)
mov
imul
mov
push
test
cmp
pop
xchg
and
sub
cld
jae
and
push
ret
jmp
dec
fisubr
mov
std
repnz
mov
sub
mov
dec
mov
xor
mov
pop
xlat
hlt
sbb
pop
es
pusha
push
lods
jmp
(bad)
data16
dec
rcr
(bad)
out
jns
mov
push
push
and
mov
dec
stc
(bad)
das
in
cli
inc
sar
test
cmp
out
mov
imul
ss
mov
out
rol
inc
jmp
pop
adc
cmp
movs
lock
xchg
mov
or
jb
pop
fnstcw
add
mov
cdq
(bad)
mov
dec
dec
sub
pop
push
jmp
cmps
push
jp
mov
ficom
mov
inc
nop
mov
inc
cmps
movs
loopne
mov
cmp
sub
adc
icebp
cs
dec
mov
jl
jnp
repnz
mov
sbb
cmp
enter
mov
cmp
stos
sub
pushf
and
jecxz
sbb
jmp
je
daa
or
dec
leave
pop
test
adc
inc
xor
add
les
mov
jo
or
imul
xchg
mov
push
and
cli
push
jecxz
dec
lods
sti
icebp
xchg
cmp
pop
cmc
xor
fld
neg
rol
jge
sub
add
sti
cs
mov
sub
ins
jbe
arpl
sub
xchg
xor
inc
xchg
pop
lea
sahf
nop
sub
into
repnz
enter
cmp
shr
outs
mov
jl
fistp
jns
aad
imul
fwait
mov
pop
mov
inc
mov
hlt
xor
pusha
mov
pop
mov
push
pusha
dec
lds
or
cmp
mov
jmp
movs
(bad)
mov
sti
mov
test
push
je
inc
dec
sub
dec
pop
imul
xchg
jb
lahf
cdq
pop
mov
jle
rol
sbb
dec
sub
imul
pop
rcr
idiv
inc
fistp
sub
movs
mov
arpl
shl
mov
scas
and
pop
ja
push
mov
lock
xchg
ret
xchg
push
retf
pop
loopne
mov
shl
push
push
lahf
sbb
jno
loope
sub
mov
aam
mov
test
xor
adc
sub
fstp
sub
mov
into
jnp
xor
stos
sahf
add
int
mov
mov
mov
xchg
pop
dec
and
hlt
arpl
pushf
lds
(bad)
xchg
push
imul
ja
dec
mov
push
jl
cvtpi2ps
popa
dec
push
dec
call
ret
fnsave
lea
jmp
sahf
push
mov
sbb
and
jle
retf
and
test
xor
mov
adc
daa
inc
int3
pop
cmc
add
add
pop
sub
out
outs
fild
push
mov
xchg
mov
add
or
jecxz
mov
loop
xor
lea
add
mov
ds
xchg
fcmovnbe
mov
aad
bnd
jo
cwde
data16
push
sahf
mov
call
jae
inc
lods
popf
jne
stos
or
sahf
lds
add
jg
(bad)
(bad)
jl
push
mov
mov
or
and
xlat
repnz
(bad)
loop
movs
ss
fisubr
out
cmps
out
nop
jno
push
jb
aam
jo
or
cmps
test
repz
dec
inc
imul
mov
aam
jge
mov
aas
fs
sub
add
mov
ret
test
shr
movs
retf
sbb
fistp
inc
aad
das
data16
push
ficomp
nop
(bad)
dec
push
test
outs
adc
pop
pop
lods
mov
imul
cmc
sbb
cld
pop
iret
xor
lods
mov
mov
add
sar
das
out
ja
dec
cmp
cmp
or
ss
jns
xchg
mov
repz
mov
dec
push
push
retf
fidiv
loope
ins
in
mov
mov
push
hlt
ins
add
push
(bad)
sub
call
push
stos
fwait
out
jne
je
jp
xchg
and
int
inc
sbb
cli
aad
dec
imul
movs
jecxz
cs
adc
push
push
inc
xor
mul
mov
out
(bad)
sbb
push
and
inc
clc
or
push
jmp
in
xor
ins
push
cmp
lods
ret
jle
adc
int3
mov
xchg
in
pushf
sub
std
adc
jmp
push
pop
movs
adc
and
ins
popf
add
and
jb
aaa
xchg
jl
adc
and
enter
adc
ins
mov
enter
adc
xchg
(bad)
mov
(bad)
scas
test
jge
mov
rcr
or
mov
jb
add
ret
adc
jle
push
les
cmps
sub
stos
call
in
xchg
jecxz
adc
sbb
pop
leave
fwait
sbb
pop
jmp
mov
in
mov
and
mov
hlt
jnp
mov
push
fisttp
out
cdq
int3
inc
scas
lds
inc
push
enter
call
cld
adc
(bad)
test
fs
inc
sub
pusha
jbe
xor
sub
xor
and
int
imul
push
int
inc
fld
mov
aas
sub
leave
mov
xor
fwait
jbe
xchg
pop
(bad)
sub
sub
int3
jle
mov
inc
lods
adc
xor
sar
mov
pusha
push
cwde
mov
cmp
mov
add
int
lahf
xor
add
test
dec
mov
push
sbb
sub
retf
pop
js
in
dec
aam
push
bound
imul
mov
(bad)
mov
or
push
push
aam
(bad)
pop
test
int3
xchg
dec
or
mov
mov
js
fldenv
mov
leave
out
xor
push
fisub
pop
xor
sub
xor
xor
mov
and
fbstp
or
lock
add
pop
or
imul
mov
sub
dec
inc
push
jl
jge
add
pusha
jae
add
push
repz
popa
sub
sub
or
cmc
pop
sbb
(bad)
fsub
jle
sbb
mov
in
rcr
jecxz
pop
out
jle
jns
dec
dec
pop
adc
and
pop
mov
cmps
lea
mov
and
xchg
cmp
inc
dec
jo
fbld
call
sti
jns
mov
add
(bad)
mov
add
fucomi
outs
sub
fisubr
lds
test
jne
or
mov
pushf
movs
adc
push
push
mov
ror
cmovne
jmp
daa
cdq
mov
mov
push
(bad)
outs
in
mov
and
cmp
mov
pop
out
mov
cmp
aam
sub
aaa
sbb
out
pop
mov
or
into
add
loopne
aas
push
jbe
outs
vpmacssdql
(bad)
xor
popa
jbe
fsubr
aas
mov
dec
mov
jp
jno
push
int
mov
iret
adc
rcl
xchg
cmp
test
mov
jmp
int
cmp
in
pop
aaa
add
cld
ret
mov
lods
movs
add
or
adc
fisttp
leave
mov
ds
cmps
jo
adc
pop
les
cdq
lock
sbb
dec
cs
jp
and
mov
push
adc
js
xor
setbe
fcomi
or
push
pushf
inc
adc
idiv
outs
xchg
sahf
cdq
pusha
cmc
push
jo
jle
lea
gs
push
lods
or
test
ffree
repnz
mov
sbb
adc
mov
inc
dec
xor
stc
sbb
xchg
dec
in
mov
repz
xchg
pop
imul
aam
(bad)
and
jl
imul
push
or
cs
xchg
int3
pop
mov
inc
mov
xchg
jle
fwait
in
mov
jl
iret
xor
rcr
jno
cli
adc
ds
test
xor
pop
call
or
pushf
mov
mov
test
add
mov
sub
jecxz
xor
in
(bad)
sti
add
mov
lods
jb
ins
(bad)
aaa
(bad)
and
dec
mov
cmps
packssdw
dec
pop
into
xchg
sbb
sbb
repnz
sub
es
mov
(bad)
iret
fwait
xor
pop
mov
les
ror
push
mov
ret
jne
add
mov
(bad)
and
jae
dec
mov
in
addr16
out
test
inc
dec
mov
jmp
xor
call
inc
sub
push
push
cmp
stc
pushf
cmp
push
mov
push
and
jmp
mov
fwait
sbb
fldcw
ret
jg
cli
adc
cdq
xchg
adc
ror
jb
pop
(bad)
fild
mov
push
aad
sbb
call
dec
iret
jo
pop
aam
mov
psubsb
sbb
out
jge
pop
icebp
mov
push
ret
leave
in
and
scas
loopne
and
retf
ja
lea
movs
push
pop
repz
sub
loop
mov
mov
ret
arpl
inc
mov
adc
xchg
icebp
dec
push
cmp
jns
movs
mov
jno
lea
jae
dec
daa
mov
jmp
sub
and
or
(bad)
nop
fld
into
mov
(bad)
sub
or
xchg
in
mov
push
jg
nop
inc
repz
adc
xchg
mov
xor
xchg
sbb
adc
inc
mov
jae
fs
aaa
cmc
xchg
sub
add
sbb
push
push
(bad)
enter
ins
and
xchg
mov
or
aas
and
(bad)
mov
stos
sbb
adc
cmp
jbe
mov
arpl
jns
xor
stos
cmp
jns
inc
sbb
jb
jb
fcom
mov
into
rcr
jmp
xchg
and
and
mov
pop
stos
cld
push
push
push
pop
pushf
(bad)
or
mov
sub
test
pop
aad
fwait
push
loope
push
inc
mov
push
ss
out
(bad)
cmp
loopne
push
inc
loope
dec
and
out
test
or
pop
mov
(bad)
fistp
pusha
xchg
mov
stc
arpl
gs
mov
adc
das
(bad)
ficomp
cld
xchg
fst
jno
daa
mov
pop
ss
fmul
and
mov
xlat
lock
mov
leave
pop
mov
call
in
ror
mov
add
push
retf
jns
dec
hlt
cmps
call
jmp
retf
shl
imul
dec
out
sbb
ins
call
imul
push
xlat
je
dec
mov
stos
dec
add
ret
imul
mov
in
add
in
mov
arpl
test
jnp
mov
mov
xor
add
push
jb
xor
daa
sub
fnstsw
ins
aam
cmps
push
sub
jb
push
test
jns
pop
int3
or
jne
(bad)
retf
js
loopne
mov
imul
mov
pop
jne
sbb
(bad)
int3
adc
push
fldcw
jne
jmp
cmps
sbb
adc
rol
fwait
jl
cs
test
jl
setae
jl
inc
repnz
cdq
xchg
xor
sti
jno
out
jecxz
(bad)
xor
push
retf
ds
xor
fdiv
stc
xchg
jg
or
and
cmp
pushf
stos
test
fcomp
int
hlt
sbb
test
icebp
loope
jmp
jecxz
cmps
mov
jo
leave
in
sub
rep
stc
int3
xor
ffreep
mov
sbb
jno
shl
or
or
stos
clc
and
int3
push
push
(bad)
sti
out
addr16
in
iret
aaa
(bad)
cli
ins
push
mov
call
test
aad
retf
movs
push
mov
data16
push
fstp
hlt
inc
mov
fdivr
mov
jge
(bad)
enter
fwait
and
in
mov
dec
pusha
inc
and
rol
push
jne
mov
jo
inc
iret
cmp
jb
mov
push
fisub
hlt
(bad)
aas
push
and
sbb
ds
lea
dec
mov
cli
popa
or
stos
sbb
mov
ss
div
and
jecxz
fwait
mov
fs
ss
(bad)
outs
stc
les
ret
sbb
dec
push
or
icebp
fisub
mov
push
xor
sub
js
stos
mov
outs
leave
mov
adc
sub
dec
movs
sahf
lds
mov
xor
mov
adc
or
dec
or
(bad)
(bad)
(bad)
cwde
mov
mov
pop
xchg
(bad)
lods
es
scas
fisubr
out
inc
call
stos
sub
sti
push
(bad)
jmp
xchg
and
push
jnp
mov
cmp
xor
mov
into
xor
and
mov
push
in
mov
popf
and
aad
mov
jge
pop
gs
icebp
adc
mov
sub
(bad)
jbe
outs
push
add
adc
loope
out
sub
mov
out
add
cmps
adc
ss
test
cmp
or
inc
es
aad
cmp
call
fidiv
test
adc
out
pop
mov
in
(bad)
fmul
mov
sub
sbb
or
sbb
pop
xor
sbb
sub
mov
lds
jnp
lods
in
movs
push
adc
ins
jno
movs
adc
jnp
sub
add
scas
and
cmp
rol
cmp
in
pop
push
retf
cmc
aad
or
sbb
xchg
mov
into
cmp
push
ins
dec
xor
or
mov
pop
daa
or
fmul
mov
test
icebp
push
sbb
mov
outs
and
outs
cmp
rol
test
push
stc
loopne
repnz
or
lock
dec
sub
push
xchg
fsub
fwait
pushf
mov
ja
and
dec
fsubr
clc
mov
xchg
push
inc
pop
test
or
pop
and
leave
arpl
fistp
jp
jae
std
jae
sub
rcr
mov
imul
repnz
push
sbb
aad
xchg
popa
jge
jp
faddp
add
add
ins
out
repz
in
cmp
fcom
sbb
aaa
inc
lods
cld
add
pop
cmps
pop
adc
mov
in
sub
stc
push
jo
sub
test
sub
ret
mov
sub
and
and
mov
push
cmp
jmp
jmp
test
clc
(bad)
std
lods
int
mov
mov
fldenv
lahf
scas
daa
mov
pop
fnstcw
je
inc
mov
mov
sti
mov
xchg
add
fidiv
pop
push
xor
stos
mov
add
pop
mov
or
gs
jmp
gs
(bad)
xchg
pop
xchg
xchg
dec
cld
inc
lods
add
push
xor
mov
jnp
jl
fwait
icebp
cmps
push
xchg
pop
jecxz
jecxz
inc
lock
dec
(bad)
scas
push
shl
cli
adc
or
jg
jb
mov
lahf
outs
cwde
mov
xchg
movd
fsub
mov
aad
sub
adc
jnp
mov
mov
sbb
nop
mov
xchg
jle
push
aam
sbb
mov
cmp
or
dec
shl
movs
add
add
pop
pusha
inc
out
sbb
fcmovnb
aad
xchg
jecxz
bound
push
mov
or
inc
sub
inc
rol
adc
jl
shl
xchg
adc
nop
fsubr
jmp
stos
and
push
jmp
in
ins
mov
int
mov
mov
sti
push
adc
push
inc
dec
mov
pop
mov
loope
stos
in
inc
ret
mov
jne
jmp
jecxz
outs
mov
dec
retf
pop
rcr
sbb
stc
mov
xor
mov
icebp
(bad)
lock
ret
add
pushf
loope
sbb
pushf
jp
adc
rol
fiadd
cdq
mov
cld
fist
aas
and
xor
or
xor
and
sbb
adc
jl
add
cmps
mov
sbb
adc
xor
test
fstp
test
mov
sbb
mov
mov
add
aas
ret
test
aas
das
out
cmps
and
xchg
and
push
xchg
adc
rcr
cwde
push
fistp
mov
xchg
and
mov
(bad)
jmp
adc
hlt
add
retf
hlt
inc
ds
pop
cmp
jno
fbld
fcomp
cmps
leave
mov
lods
jl
fs
mov
and
or
mov
stos
scas
fnstsw
ret
inc
imul
adc
sar
je
push
cmp
jmp
push
xchg
or
outs
jle
push
cmp
int3
test
js
push
sbb
jp
sub
rcr
sub
jecxz
(bad)
lods
out
arpl
pop
inc
cs
pop
xchg
stos
push
ror
jle
rcl
mov
mov
adc
shl
int3
add
add
loope
cmp
xchg
(bad)
inc
daa
ret
outs
mov
stos
xor
sahf
xchg
mov
xor
sar
dec
fsubr
jmp
test
data16
add
fs
pop
psadbw
cmp
mov
ja
push
adc
add
inc
loop
add
ins
add
adc
ja
clc
ins
fisttp
add
xor
repnz
xchg
out
mov
mov
push
xor
pop
das
arpl
dec
push
retf
mov
or
xchg
call
mov
adc
adc
inc
shl
fmulp
mov
push
inc
sub
inc
(bad)
out
cmc
test
jl
jnp
pop
pop
mov
or
and
scas
or
lock
cmps
lahf
loop
sbb
mov
xor
dec
cmp
jmp
mov
das
inc
daa
retf
aam
in
push
xchg
and
rcl
jecxz
push
and
mov
mov
pop
std
in
stos
dec
push
icebp
inc
lods
inc
xor
mov
fist
ret
and
jp
test
add
jno
push
lock
jns
pop
sbb
cmp
or
lods
mov
xlat
push
test
ret
daa
mov
xor
int
cwde
jmp
and
mov
jecxz
or
test
jmp
rol
stos
je
mov
sbb
hlt
and
mov
and
pop
jg
imul
pop
stos
aam
popf
(bad)
adc
add
icebp
outs
sub
shl
inc
fld
cmp
dec
add
retf
dec
mov
leave
cmps
bound
pop
add
jmp
out
cwde
int
pop
ret
pop
ss
fist
and
fldcw
stos
push
imul
int3
into
sar
and
jl
sub
fld
adc
push
mov
cmp
sbb
cmps
popf
lock
mov
cmps
inc
aam
jp
sub
jge
inc
mov
jnp
out
(bad)
das
add
das
inc
(bad)
adc
cmp
adc
lea
loope
and
xchg
xor
gs
stos
adc
cmp
pop
or
or
(bad)
out
add
cmc
push
loopne
xor
sbb
adc
in
addr16
daa
movs
jo
jle
jnp
cmp
test
cmps
xchg
ins
mov
push
je
enter
push
in
add
jns
arpl
jno
dec
xlat
add
pushf
movs
add
ins
std
push
mov
sub
xlat
int
cmc
pop
add
or
jle
out
das
js
or
push
(bad)
js
jnp
jns
xchg
dec
ror
sbb
and
or
(bad)
bound
mov
xchg
push
sbb
xor
shr
pushf
pop
fadd
mov
lds
mov
xchg
ins
cmps
test
enter
and
jecxz
mov
aam
inc
lahf
repnz
push
dec
cmps
pop
xchg
ins
fdiv
dec
nop
dec
ins
(bad)
dec
arpl
nop
pop
(bad)
mov
xchg
ret
jecxz
ja
xchg
loopne
adc
pop
stc
out
imul
sbb
lahf
cmp
movs
mov
xchg
outs
and
dec
pushf
leave
call
hlt
shr
int3
mov
mov
loop
rcr
pop
int3
repz
loope
pop
jae
mov
in
sbb
rep
add
mov
mov
xchg
xor
mov
dec
mov
movs
out
stc
cmps
call
cdq
mov
test
xor
jmp
scas
or
cmp
jns
shr
and
sahf
pop
test
addr16
mov
sbb
or
push
add
add
mov
cmp
repnz
adc
jle
mov
mov
jno
idiv
sbb
lods
and
cs
jae
test
mov
les
enter
repnz
leave
mov
mov
ret
shl
inc
out
dec
fwait
adc
xchg
outs
dec
xor
in
(bad)
cmp
ins
out
aad
xchg
out
lods
push
or
mov
inc
std
and
jg
mov
mov
adc
cli
add
in
xlat
loope
mov
ins
enter
test
lods
inc
cmp
bound
and
or
ins
adc
inc
mov
jge
ins
rcr
push
in
xor
lods
stos
sub
jecxz
mov
pop
jmp
mov
retf
push
mov
inc
sar
or
fucomip
addr16
leave
cmps
stc
inc
pop
xlat
lahf
test
stc
nop
sub
xor
dec
inc
dec
imul
aaa
mov
test
adc
jnp
add
rcl
movzx
test
aad
push
jge
sbb
adc
shr
fimul
sub
fnstsw
jb
jnp
leave
pop
pop
sbb
mov
jns
cs
es
mov
aad
sbb
fsubr
imul
sahf
cld
push
push
in
mov
movs
add
idiv
movs
xor
leave
mov
sub
jl
movs
(bad)
not
cmps
sub
mov
cli
dec
xor
in
pop
cli
mov
nop
arpl
popa
and
out
ins
jne
dec
(bad)
retf
lods
xor
xchg
add
mov
ins
xchg
(bad)
sbb
sar
int3
in
or
out
fwait
cdq
mov
fisub
inc
aaa
imul
into
(bad)
ins
imul
dec
mov
push
(bad)
sbb
inc
(bad)
pop
lea
popa
scas
lea
mov
int3
dec
xor
push
push
rol
dec
lds
push
mov
out
lds
js
nop
cmc
dec
icebp
cdq
add
inc
(bad)
in
(bad)
fidivr
pusha
bound
cwde
sbb
add
outs
sbb
jne
lahf
sub
cdq
test
lea
cmp
scas
aaa
ins
push
(bad)
rcl
and
jge
ret
shl
cld
enter
jne
sahf
retf
lock
xchg
inc
in
sbb
xlat
xchg
mov
inc
mov
inc
sub
and
pop
jb
dec
inc
jmp
pop
ds
data16
or
(bad)
xchg
push
dec
xchg
ds
push
or
push
jb
mov
cmps
clc
arpl
lahf
jmp
push
jg
ss
sub
xlat
fild
or
les
imul
xor
push
xchg
sbb
jge
xor
inc
push
add
or
ficom
in
xor
mov
inc
out
jmp
movs
cmp
(bad)
mov
fbld
and
pushf
in
jno
push
adc
jne
je
or
fistp
(bad)
mov
or
hlt
mov
iret
pop
popf
test
cmps
jo
int
mov
xor
or
out
mov
popf
ja
cmp
cmp
mov
xor
cmp
sbb
dec
add
std
add
test
adc
and
xchg
outs
xor
clc
jbe
or
xchg
xchg
xor
in
clc
and
lds
push
mov
adc
or
sahf
test
cli
dec
gs
pop
xor
rol
sub
push
xchg
sub
or
sbb
push
stc
and
sbb
mov
(bad)
aad
rcl
mov
outs
inc
lock
out
add
sahf
repnz
pushf
adc
icebp
jne
je
xor
mov
outs
sbb
pop
mov
scas
pop
ss
dec
test
(bad)
pop
fs
imul
dec
ss
adc
push
jmp
push
daa
add
stos
pop
and
popa
jle
or
sub
cmp
pop
sbb
mov
jmp
ins
fsubr
lods
fs
jbe
push
in
stc
mov
xor
jg
rcl
imul
stos
loope
aas
outs
imul
(bad)
mov
call
scas
imul
ror
push
leave
jg
call
out
push
fs
arpl
mov
loop
scas
or
mov
sbb
cmp
aas
sbb
sbb
push
(bad)
(bad)
test
add
jbe
js
jge
test
enter
rol
test
jge
push
dec
ret
test
cmp
ret
std
scas
test
fnstcw
add
jl
jmp
sahf
cs
or
jne
nop
or
dec
or
xor
jo
shl
iret
xor
mov
dec
test
daa
xchg
and
and
(bad)
jge
jno
xor
jge
mov
pop
dec
mov
cmp
mov
hlt
xchg
cmp
jns
xchg
outs
sahf
jge
addr16
mov
ret
push
pop
test
rcl
lods
mov
inc
scas
push
outs
jp
push
xchg
jle
sar
dec
mov
ins
out
rol
out
inc
sti
ret
xchg
add
test
dec
jns
xchg
add
cmp
sbb
(bad)
aad
xchg
inc
imul
cld
xchg
dec
jle
inc
retf
inc
test
call
jmp
jecxz
in
lea
pusha
jge
pop
cmp
fsubr
mov
scas
and
popa
call
add
cmp
or
push
jnp
mov
sub
push
inc
xchg
rcr
mov
das
cmp
leave
xchg
jge
iret
cwde
fld
in
jnp
jne
cli
clc
mov
jmp
stos
pop
repz
mov
pop
rcl
out
daa
sub
mov
xor
imul
pushf
ss
sub
add
dec
adc
or
dec
fcom
jo
in
icebp
retf
popf
std
ret
popf
test
inc
int3
(bad)
pop
pop
adc
push
ror
test
add
fsubr
retf
dec
dec
pop
mov
test
ss
mov
out
bound
shl
imul
loop
inc
dec
loop
popf
mov
fiadd
mov
jmp
shr
sub
fsubr
les
shl
and
adc
pop
or
test
jne
aaa
xor
pop
stos
out
push
dec
loopne
stmxcsr
dec
add
mov
or
pop
sbb
scas
(bad)
jno
xchg
scas
push
fbstp
mov
imul
stc
xor
aad
repz
fs
movs
pop
pop
push
sbb
out
jecxz
mov
push
mov
push
push
rol
mov
scas
jo
fstp
mov
mov
daa
(bad)
cld
test
push
repz
ins
imul
js
cld
shl
ins
das
aam
and
jne
in
add
and
dec
pop
popa
cmp
ss
addr16
test
mov
adc
lock
sub
aam
test
mov
scas
es
push
lahf
pop
popf
imul
adc
psadbw
aam
fild
or
lds
shr
pop
(bad)
gs
dec
pop
push
enter
retf
jg
ja
jmp
fs
or
push
jne
pusha
mov
adc
sbb
in
int
enter
lds
dec
xor
mov
xor
nop
mov
add
lods
adc
stos
aad
or
or
repnz
dec
xchg
stos
call
imul
ret
pop
cmps
xchg
mov
mov
cmp
push
add
sub
rcl
push
stc
loopne
aas
push
push
mov
lahf
(bad)
pop
sub
es
gs
push
mov
loope
and
das
sti
and
ja
adc
imul
loopne
xchg
sahf
stc
popf
mov
mov
and
movs
mov
push
and
cmps
xor
stos
movs
pop
add
test
outs
fsubr
in
in
pop
fcomp
clc
jg
inc
xchg
jbe
xchg
mov
xchg
cmps
imul
fisubr
dec
aaa
movs
mov
and
xor
jp
xor
call
clc
or
dec
bound
mov
or
dec
in
ud0
arpl
xchg
loope
mov
add
or
mov
out
mov
dec
aam
sub
leave
fcom
jne
sbb
or
imul
dec
ds
loopne
or
sbb
clc
and
jle
xor
mov
dec
sub
mov
mov
mov
cwde
into
test
push
(bad)
std
xchg
in
or
or
daa
lahf
daa
fmul
inc
sti
inc
sbb
call
sub
lock
xchg
mov
out
test
leave
mov
jno
in
cmp
xchg
xor
aad
mov
fisub
test
mov
fsub
jge
xchg
push
aad
pop
xlat
stos
jbe
enter
lock
or
imul
fwait
dec
into
call
pop
(bad)
mov
mov
mov
push
aaa
cmp
fcomp
xchg
fsubr
inc
ins
shl
movs
mov
int3
lock
or
push
jmp
xchg
cld
into
adc
std
(bad)
sti
mov
lea
lods
xchg
pop
ror
sbb
clc
pop
inc
jp
fild
in
push
lods
loop
sub
icebp
popf
push
in
sub
add
test
inc
mov
mov
rcl
mov
and
add
aad
jg
dec
cmp
fmul
es
test
gs
xchg
and
fisub
lds
jne
pop
fdiv
and
xor
rcr
lods
ror
pop
ret
int3
div
xchg
ss
mov
xchg
test
jno
popf
dec
iret
lods
xchg
in
iret
and
pushf
mov
scas
adc
fxam
xor
shr
and
stos
sub
adc
cmp
dec
inc
pushf
and
and
sbb
xchg
pusha
mov
inc
outs
shr
cmp
add
rol
mov
arpl
iret
call
xchg
and
push
mov
xchg
rcr
inc
xor
xchg
rcr
ror
jnp
sbb
jmp
push
add
inc
ret
and
int3
xchg
shl
mov
jge
sbb
cmp
xor
jbe
aaa
jmp
in
pop
imul
clc
push
es
mov
ds
in
fistp
pop
imul
sub
int3
stc
xor
sbb
sub
sub
mov
retf
xor
adc
xchg
push
mov
adc
mov
outs
call
gs
mov
push
inc
movs
mov
dec
aaa
jmp
aad
je
iret
xchg
xor
sbb
test
mov
xchg
and
dec
add
mov
pusha
aam
xchg
scas
pop
imul
lods
test
out
sub
les
xor
(bad)
aas
xor
push
fcomp
(bad)
rcl
test
cwde
fld
ja
mov
pop
dec
out
(bad)
clc
fbld
js
sbb
ss
fsub
or
stc
inc
add
int
out
das
arpl
pop
mov
inc
int3
int3
mov
adc
out
mov
and
xor
xlat
adc
mov
jge
fdiv
xchg
frstor
mov
loop
enter
popa
sbb
mov
inc
or
adc
inc
jmp
sti
or
jmp
stos
cdq
and
mov
mov
pop
into
inc
or
fisttp
add
mov
inc
in
lock
push
push
sar
sub
sub
add
cmps
pop
jae
sub
sbb
sar
call
aaa
retf
outs
int3
or
pop
add
xlat
imul
jo
stos
int
pop
into
bound
inc
push
test
pop
mov
push
iret
mov
out
dec
pop
pop
jle
mov
and
sub
dec
mov
fcom
push
xchg
in
push
fsubr
pop
movs
cmp
pop
iret
lea
hlt
icebp
fchs
sbb
(bad)
shl
push
adc
inc
xor
out
jl
adc
jg
in
dec
xor
jns
sub
dec
xchg
pop
call
xchg
repnz
idiv
in
hlt
push
add
dec
jb
adc
lea
jle
xchg
rcr
scas
test
leavew
pop
test
push
aad
mov
adc
xchg
ds
sbb
aam
sbb
retf
jne
jne
enter
cwde
xor
loopne
pop
xor
cld
scas
sbb
pusha
add
jecxz
pop
pop
or
xor
(bad)
mov
mov
dec
movs
dec
fmul
adc
int
ins
pop
and
fistp
and
aaa
test
retf
push
jg
enter
pusha
ins
and
xchg
sar
push
xchg
sub
mov
xchg
in
(bad)
xor
inc
cmps
lods
lds
aad
sub
mov
pop
(bad)
sbb
mov
and
(bad)
or
push
in
outs
repnz
movs
icebp
dec
add
les
inc
xchg
push
sbb
(bad)
push
(bad)
aad
cmp
ins
sar
xchg
pop
push
pop
adc
mov
fcmove
aaa
mov
mov
cld
push
inc
pusha
mov
dec
jno
icebp
and
cs
jmp
pop
test
cmp
and
js
out
aad
add
cmp
hlt
mov
bnd
xor
lahf
loope
cdq
les
scas
jno
push
mov
jne
(bad)
or
adc
add
push
fiadd
(bad)
out
cmp
fs
fmul
and
bound
pushf
add
jmp
pop
or
jbe
dec
xor
cmp
jg
mov
dec
pop
fisub
sbb
xchg
mov
or
jmp
inc
inc
call
inc
adc
scas
mov
lea
xor
and
outs
cld
inc
int3
push
mov
xchg
xchg
xchg
arpl
jg
push
arpl
adc
into
retf
lods
mov
lds
xor
cli
push
idiv
mov
sbb
loope
push
rcl
jae
(bad)
sti
out
adc
and
and
cmp
dec
pushf
div
(bad)
out
bound
and
loopne
mul
fs
adc
xor
push
sub
mov
enter
idiv
icebp
push
jecxz
push
pop
xabort
test
loopne
adc
adc
push
sub
enter
fcomp
inc
add
add
imul
jbe
loopne
mov
or
cdq
hlt
(bad)
arpl
pushf
popf
or
pushf
inc
push
nop
pop
or
fdivr
(bad)
and
sbb
xchg
mov
call
cs
and
test
mov
cld
mov
leave
jecxz
cmp
out
pushf
jnp
ror
cmc
push
inc
xor
mov
ja
mov
add
jge
or
das
bound
jb
xchg
cmp
jne
ja
or
es
(bad)
ret
xor
sub
pusha
nop
retf
icebp
movs
clc
sub
cli
stos
aas
cdq
xlat
and
pop
ins
pop
scas
in
into
xor
adc
mov
add
pop
inc
stos
ds
add
out
and
imul
leave
aas
push
or
aad
retf
rcl
(bad)
or
scas
adc
dec
adc
in
dec
adc
lods
sbb
xor
or
inc
jne
add
jmp
xchg
push
dec
mov
add
inc
xchg
movs
mov
icebp
icebp
jg
or
sub
loop
jne
mov
add
into
pop
sub
inc
outs
or
div
mov
mov
fs
mov
push
mov
cmp
pop
pop
call
ss
push
mov
dec
pusha
mov
add
mov
sbb
jmp
add
(bad)
or
cwde
mov
(bad)
push
sbb
lock
sbb
adc
inc
pusha
xchg
mov
mov
out
xor
js
ficomp
or
push
arpl
stos
xor
pop
fsubr
sub
data16
ret
xchg
jge
int3
and
and
(bad)
mov
inc
xor
fcom
(bad)
out
sub
in
pop
cmp
sbb
in
or
jo
loop
(bad)
test
cmp
lods
pop
retf
add
add
adc
or
push
mov
and
xchg
push
or
ret
dec
add
mov
or
ret
jnp
pop
xchg
int
retf
dec
sbb
jle
into
ret
call
mov
inc
out
xor
inc
fiadd
xor
add
xor
(bad)
ror
popa
mov
dec
push
shl
mov
sbb
cmp
shl
pushaw
adc
js
dec
imul
push
adc
mov
shl
sahf
add
jo
cmc
iret
rcl
xchg
imul
out
ds
or
pop
ins
mov
adc
jge
fmulp
cmps
fs
push
in
fwait
xor
lods
imul
scas
shl
imul
es
mov
sub
int
dec
dec
sbb
(bad)
jle
xchg
jg
lock
xchg
add
xchg
xor
mov
lds
loopne
lods
or
dec
sbb
ins
and
add
clc
in
sub
or
xor
sbb
imul
faddp
enter
in
iret
out
xor
(bad)
jnp
and
jle
push
sbb
shr
nop
lods
pop
jmp
sub
jbe
dec
pop
pop
dec
xor
clc
inc
std
(bad)
jge
inc
shl
dec
xor
ds
pop
mov
in
mov
ins
popf
mov
outs
ror
mov
inc
inc
fdivr
cmps
mov
dec
imul
test
xor
adc
and
xlat
add
loop
push
mov
or
add
xor
cmp
sahf
ja
ja
sub
xchg
mov
stos
inc
or
sbb
fidivr
xchg
mov
inc
push
fld
(bad)
push
jle
add
(bad)
add
fldenv
test
xchg
mov
pop
data16
loope
js
out
xor
cld
cmp
push
inc
lea
xor
icebp
rol
cmp
in
outs
js
mov
sub
ret
and
mov
in
inc
leave
mov
mov
or
jo
data16
xchg
jb
shl
stos
and
jg
add
fs
jae
add
mov
test
sti
pop
(bad)
push
enter
sbb
push
jns
rcpps
adc
(bad)
mov
or
stos
pop
imul
bound
fldenv
ins
mov
sbb
push
fs
xor
aaa
loop
sar
adc
ins
ss
add
retf
sar
ret
xchg
clc
mov
adc
mov
dec
aam
iret
repnz
and
and
stc
test
and
jl
xchg
ret
popa
mov
mov
sbb
push
(bad)
(bad)
out
mov
fwait
nop
sti
mov
imul
add
ret
inc
(bad)
int
adc
jge
sbb
aam
inc
mov
call
call
pop
mov
pand
or
pop
dec
leave
sbb
(bad)
rol
int3
cdq
out
and
inc
cmp
daa
mov
rcl
dec
mov
jb
push
jae
inc
neg
mov
pusha
xchg
and
movs
test
rcr
xchg
in
stos
lods
sbb
(bad)
and
inc
lea
push
pop
fnstenv
out
mov
loop
lahf
mov
and
and
pop
call
not
mov
sub
jne
stos
movs
ds
dec
add
xchg
lahf
repz
scas
out
push
pop
in
sub
(bad)
lds
jo
add
jge
mov
rcl
enter
out
(bad)
lods
test
pop
and
cmp
xchg
dec
out
mov
ret
xor
lds
scas
ror
cmp
enter
jecxz
or
loopne
in
push
jne
aad
stos
pop
and
sub
jl
and
pop
add
sar
dec
ins
dec
ret
xchg
aaa
(bad)
popf
into
cmps
pop
dec
add
sbb
sti
inc
scas
fs
pop
add
stos
mov
cmp
fs
es
pop
enter
add
push
sub
jo
pop
repnz
xchg
cmp
and
jg
sbb
int3
and
add
inc
adc
fwait
outs
dec
mov
fist
ror
pop
(bad)
fcom
sbb
mov
movs
push
inc
mul
sub
ins
ror
ror
ds
xor
inc
retf
test
pop
push
mov
pop
add
sbb
lods
cmp
and
in
pop
mov
inc
xor
lock
inc
sub
test
in
push
mov
pop
push
push
imul
sub
loop
xchg
push
adc
je
or
or
(bad)
(bad)
pushf
push
xchg
retf
leave
or
push
cmp
sbb
add
scas
and
ins
cmp
icebp
and
dec
test
lds
push
sahf
jo
mov
ja
js
popa
int3
pop
shr
retf
lahf
or
int3
push
enter
je
scas
dec
sbb
ret
lock
loope
jp
in
fldcw
xchg
scas
mov
hlt
movs
dec
xchg
enter
in
add
shl
lds
test
inc
std
test
scas
xchg
rcl
mov
rcr
mov
mov
ds
mov
jle
fidiv
popf
ss
add
jbe
std
sub
add
ficom
mov
das
inc
ja
ja
xchg
stos
dec
mov
mov
mov
rol
iret
sub
loope
aam
loop
mov
or
fst
test
and
mov
xlat
pop
outs
mov
sub
addr16
jmp
push
lods
jno
ss
(bad)
cwde
mov
rcl
ret
sub
cmp
cmps
mov
loop
leave
xchg
movs
cs
lods
jge
sbb
test
xchg
lea
inc
out
mov
cdq
mov
rol
jnp
fist
dec
push
mov
add
(bad)
fbstp
cmp
mov
adc
shr
jge
or
mov
sbb
mov
xchg
sbb
dec
movs
xor
or
retf
movs
fdiv
in
cwde
dec
out
test
pop
jecxz
pop
push
mov
aaa
inc
fild
jno
pop
loop
pop
mov
test
inc
dec
aas
xchg
lods
mov
gs
(bad)
data16
cmc
aas
and
or
in
add
pop
mov
rcr
(bad)
(bad)
mov
icebp
dec
sub
aas
push
xchg
jl
rdtsc
scas
repz
outs
sahf
dec
inc
and
cmp
fsubr
jecxz
push
inc
jb
aam
jbe
jmp
add
icebp
aad
in
sbb
or
push
jbe
cmps
popf
xchg
cmps
xor
ds
stc
or
scas
(bad)
xor
adc
jno
jecxz
cdq
adc
test
or
ror
mov
mov
pop
icebp
repnz
ins
(bad)
call
dec
mov
fnstcw
dec
fcomip
jbe
mov
popa
jb
add
dec
and
pop
cld
retf
je
push
jbe
xchg
pop
cmc
mov
out
mov
repz
ds
mov
mov
push
push
test
out
fisttp
test
psraw
mov
je
mov
and
in
xchg
addr16
and
je
fadd
sub
sbb
loop
jnp
ins
mov
jcxz
aad
dec
mov
cmc
(bad)
repz
mov
in
mov
adc
cmp
mov
ds
cmp
jbe
and
cmp
mov
std
add
push
and
inc
test
(bad)
cmp
sub
push
push
push
jge
xlat
jp
sub
test
cmps
sbb
cs
or
addr16
cmc
adc
cmp
movs
lds
test
fisubr
cmps
data16
pushf
sub
cmps
retf
push
push
xchg
fimul
ja
mov
push
add
pop
jbe
cmp
sbb
bound
pop
cwde
cwde
clc
ins
jo
bound
and
rcl
inc
or
shl
inc
add
push
(bad)
cmps
sbb
or
add
lods
sbb
int3
xor
dec
xchg
(bad)
mov
inc
mov
mov
das
icebp
push
jo
shr
pop
or
dec
pop
cmps
and
xchg
inc
leave
mov
(bad)
xchg
in
test
push
mov
outs
loopne
add
inc
gs
sbb
shl
jecxz
jno
movs
(bad)
jmp
mulps
mov
mov
outs
push
call
mov
fwait
xor
loop
lahf
and
mov
sub
shl
push
test
dec
ins
pop
xchg
push
or
add
test
add
add
ins
stos
ret
mov
stos
or
push
mov
stc
(bad)
xchg
aad
mov
loope
push
mov
sbb
inc
cmc
sbb
retf
call
push
and
pop
inc
and
xchg
faddp
mov
cmp
xchg
inc
stos
mov
adc
test
loope
retf
xchg
clc
add
mov
ret
pop
into
mov
cmp
cld
xor
push
ja
jl
adc
cli
stc
ret
aaa
loop
ret
sub
mov
popa
sub
stos
cmps
out
pop
push
fdiv
pusha
mov
fsubr
push
xlat
sti
test
mov
(bad)
loop
jmp
push
push
mov
push
adc
out
aas
and
(bad)
ins
in
enter
es
xor
jl
jg
stc
or
stos
or
sbb
rcl
jmp
push
push
fisubr
jmp
inc
popf
(bad)
ins
add
and
lods
mov
adc
les
adc
inc
push
and
adc
es
add
(bad)
jmp
add
sar
add
retf
sbb
add
mov
inc
lahf
imul
mov
out
mov
jns
push
fcomp
dec
cmp
dec
out
pop
push
das
cmp
mov
(bad)
aas
ficomp
idiv
leave
ret
cmc
mov
mov
dec
retf
cmp
fwait
adc
mov
sub
scas
pop
sub
dec
cwde
push
test
jae
cmp
jl
adc
into
inc
or
test
rcl
test
sbb
pop
loope
cmp
xchg
push
daa
sbb
dec
sub
jl
jae
jb
mov
loopne
sub
xor
movs
pop
sub
or
and
mov
mov
frstor
mov
cmp
inc
mov
xchg
data16
cli
or
sub
dec
adc
sub
jnp
dec
add
xchg
pop
inc
out
pop
arpl
dec
imul
fs
sub
dec
mov
inc
push
out
fisub
scas
rcl
pop
inc
push
fsub
xchg
cmp
xor
jge
mov
and
pop
mov
iret
dec
mov
adc
add
jp
fidiv
icebp
or
xor
add
push
jno
xchg
in
pop
mov
xchg
xchg
and
mov
daa
stos
lods
fstp
retf
enter
inc
aam
test
add
pop
xor
push
lock
or
pop
jecxz
jecxz
jnp
mov
add
pop
in
push
pop
or
push
repnz
cdq
cwde
cmp
or
cmps
sahf
cli
shl
xchg
mov
mov
adc
mov
xchg
dec
ss
mov
add
mov
sahf
push
loop
in
icebp
ucomiss
mov
je
dec
sub
out
arpl
inc
mov
dec
xchg
add
mov
ja
inc
addr16
imul
mov
adc
inc
mov
mov
push
push
dec
push
inc
push
ret
leave
in
aas
nop
push
inc
push
mov
mov
sbb
adc
aaa
xchg
pop
cwde
add
outs
fcomip
and
(bad)
cli
inc
adc
pop
push
add
sbb
jne
je
add
pop
enter
inc
sub
in
sub
sbb
inc
pop
fcmovnb
xchg
frstor
xor
mov
mov
lahf
popa
js
fistp
fucom
imul
mov
outs
cmps
cmp
sub
test
mov
fdivr
sti
mov
movs
or
jo
sar
inc
into
jo
mov
ret
add
jge
mov
fstp
mov
cs
addr16
repz
in
cli
add
push
and
ins
jmp
out
adc
outs
popf
rcr
repz
fadd
aam
fist
nop
imul
out
xchg
cmp
xchg
mov
imul
daa
mov
nop
ins
mov
int
out
push
jge
adc
pop
inc
das
ja
call
pop
push
ret
adc
sub
push
fadd
out
inc
push
inc
push
popa
xor
stos
leave
(bad)
sub
adc
pop
int3
or
jne
or
push
jae
mov
sub
je
(bad)
or
push
mov
xchg
dec
jne
arpl
repz
jp
jne
jge
inc
jp
inc
add
adc
and
push
stc
add
cmp
outs
push
cmp
and
xchg
out
push
push
mov
dec
enter
call
add
xchg
out
call
push
cmp
jmp
jg
in
cld
xor
sub
addr16
jns
gs
sub
loop
mov
or
aam
push
(bad)
mov
cmps
and
mov
test
cmps
loop
mov
mov
aam
mov
xor
or
or
xor
inc
sar
sub
bound
push
jle
retf
mov
int
xor
mov
ja
inc
sar
popf
jae
fdiv
mov
rcl
jge
mov
jmp
xchg
xor
adc
pop
and
cmp
sub
hlt
fwait
mov
push
outs
push
xlat
sbb
movs
cmp
outs
pop
(bad)
and
pop
xor
push
loope
pop
xor
out
stc
ret
inc
or
or
sub
mov
xor
push
or
mov
jl
ret
icebp
std
push
xchg
inc
add
cmp
leave
test
xchg
push
jns
call
push
ds
sub
sbb
out
xchg
jmp
ins
int3
dec
loope
pop
cmp
loopne
ficom
popa
xor
in
(bad)
jbe
and
inc
sar
ins
mov
jmp
pop
jp
xchg
push
xchg
push
shl
inc
mov
(bad)
push
mov
iret
cmp
jle
dec
push
aad
test
out
(bad)
rcr
push
(bad)
es
(bad)
and
xchg
mov
ss
outs
xchg
dec
int3
addr16
lods
cmc
sub
popf
sbb
mov
pop
fwait
push
outs
sbb
push
lods
aam
inc
adc
or
cwde
pop
sahf
repnz
push
loopne
div
mov
add
cmc
inc
ficomp
push
sbb
cmp
push
ins
cmps
(bad)
(bad)
daa
inc
xor
or
ficomp
(bad)
stc
cmp
ret
sbb
stos
and
xor
dec
ds
sbb
jmp
nop
aam
inc
inc
sbb
pop
xchg
mov
sub
and
jbe
mov
fldcw
and
sbb
in
retf
mov
fild
jp
dec
jnp
popa
ja
retf
imul
push
int3
xchg
push
jns
movs
and
mov
sbb
lods
pop
loopne
mov
lds
cmps
xchg
fmul
jg
test
mov
repnz
mov
jo
lds
jo
and
lea
push
add
fs
add
enter
movs
pop
jecxz
in
test
mov
fcom
adc
dec
push
inc
sub
add
shl
sbb
in
cmp
mov
xor
rcr
jle
in
repz
test
xchg
test
and
xor
or
cmc
mov
(bad)
hlt
cmc
les
popa
gs
test
mov
jne
and
add
jno
gs
daa
sbb
dec
cmp
pop
push
mov
sub
push
dec
aam
in
loope
sub
cmp
adc
mov
scas
fwait
push
mov
xchg
push
arpl
scas
loop
imul
jne
xchg
xchg
xlat
(bad)
jo
xor
mov
mov
stc
aaa
jb
mov
(bad)
vpcmpeqd
push
dec
fstp
and
call
push
add
fs
inc
test
xchg
sub
sbb
je
ja
fld
repz
repnz
arpl
loope
cmp
jno
shl
adc
mov
adc
mov
mov
xor
mov
pop
add
in
nop
adc
bswap
mov
jmp
test
ins
push
aam
cmc
in
enter
sub
shl
add
mov
ret
in
test
pusha
call
or
sub
mov
mov
mov
scas
je
icebp
xchg
jne
std
or
sub
ficom
(bad)
adc
sbb
jo
and
dec
int
imul
retf
add
inc
fstp
loopne
lds
xlat
jb
inc
jecxz
cld
xchg
and
xlat
pop
out
jae
sub
xor
mov
hlt
add
sbb
aam
inc
lods
xchg
push
mov
adc
stos
iret
xchg
fsub
add
or
stc
stos
mov
adc
int3
dec
and
mov
mov
dec
or
mov
in
pop
add
jmp
add
in
jne
sub
xchg
mov
jno
jo
add
add
jae
or
or
inc
aaa
popa
aaa
in
nop
pop
mov
or
mov
cdq
mov
sbb
ins
jnp
jb
jecxz
xchg
mov
rcl
cmp
add
mov
hlt
popf
(bad)
mov
cmp
bound
pop
adc
mov
fmul
or
cmp
and
jmp
dec
sbb
jne
das
fdivr
imul
inc
rol
outs
dec
xor
sbb
mov
cli
adc
jmp
pop
xor
and
movs
or
mov
jns
fnstsw
hlt
cmp
adc
jae
mov
mov
icebp
or
cs
clc
xor
fimul
xor
xor
ret
push
or
push
rcr
sub
inc
mov
xor
pop
jecxz
pop
aam
pop
mov
jnp
adc
stc
xchg
arpl
dec
dec
or
out
xor
adc
mov
in
fnstenv
shl
xchg
xchg
jl
fdivrp
mov
fisttp
pop
jne
xor
or
cli
mov
sbb
sbb
dec
jnp
mov
loopne
lods
(bad)
in
and
addr16
cs
out
push
(bad)
pop
sti
loope
jecxz
int3
movs
push
add
add
mov
dec
aaa
out
stos
cs
pop
ins
lods
stc
sub
or
mov
fdivr
test
inc
jnp
push
push
dec
loopne
fldlg2
cmps
mov
in
outs
push
push
cmp
mov
adc
stc
dec
mov
xchg
xchg
and
sbb
pop
shl
(bad)
retf
xor
inc
outs
mov
cli
and
aam
mov
sub
cmps
xchg
es
outs
dec
dec
xchg
dec
stc
cmps
int
adc
adc
push
push
fdiv
lahf
mov
dec
sti
pop
push
fdivr
retf
cli
and
or
mov
ret
sub
out
outs
clc
into
inc
xor
loopne
or
mov
ss
add
mov
fdivp
shl
sub
cdq
or
xchg
dec
cld
mov
mov
push
pop
push
ret
aaa
stos
fs
xchg
shr
mov
aaa
bts
cmc
mov
mov
out
add
movs
lahf
xchg
sahf
outs
cdq
jnp
je
xlat
push
sbb
repnz
jp
cld
mov
jb
jns
push
out
jo
inc
jbe
add
pushf
push
dec
cwde
mov
scas
outs
inc
jge
jle
push
out
leave
shl
add
fistp
loop
cld
loop
mov
pop
mov
hlt
inc
hlt
mov
aas
xor
xor
enter
call
sub
xchg
je
jl
push
(bad)
jg
cmps
xchg
imul
and
movs
cmp
movs
in
mov
or
adc
xchg
mov
mov
mov
add
out
adc
std
shl
repnz
in
mov
(bad)
mov
js
inc
pop
(bad)
bswap
or
and
or
shl
enter
rol
adc
inc
jno
in
inc
(bad)
retf
int3
(bad)
push
mov
cwde
rcr
dec
ss
fcom
(bad)
and
pushf
inc
or
mov
cmp
data16
push
les
jl
push
in
pop
mov
jnp
pop
fidiv
gs
push
dec
cdq
(bad)
jle
popf
jns
sbb
popa
and
mov
jb
(bad)
imul
adc
jne
aad
fnsave
(bad)
call
div
ins
stos
push
and
dec
adc
pop
dec
xchg
dec
cmp
stos
jg
mov
jmp
hlt
hlt
addr16
mov
xor
icebp
cmc
xor
adc
or
(bad)
xor
jb
mov
mov
les
lods
cmp
push
inc
add
mov
dec
xchg
aaa
aam
test
pushf
mov
cwde
adc
shl
mov
inc
dec
or
icebp
pop
jnp
test
xor
push
add
into
jge
arpl
push
cmps
mov
and
ins
lock
mov
fsubr
bound
retf
(bad)
loop
fsubr
popf
ret
ins
imul
mov
ret
leave
das
adc
leave
jb
(bad)
mov
or
data16
dec
push
jmp
push
pop
mov
jle
mov
add
ret
jne
sbb
sub
hlt
in
pop
cmp
add
fld
sbb
dec
cmps
or
mov
arpl
ja
jns
leave
dec
xor
data16
test
popf
nop
fistp
adc
add
into
sar
mov
push
ja
dec
ret
stc
clc
and
pop
cmp
mov
xchg
cmp
enter
lds
fsubr
push
xor
(bad)
sbb
sub
aad
out
pop
out
stos
jle
pushfw
dec
lds
fstp
dec
popf
cmps
out
pop
pushf
mov
or
nop
mov
dec
shr
pop
push
jno
cmp
pop
data16
sbb
out
sbb
shl
xor
inc
push
pop
stos
mov
mov
adc
cmp
rcl
stos
lahf
push
mov
rcl
adc
inc
pop
pop
int
push
inc
sbb
loope
imul
lods
pop
push
bound
dec
repz
push
popa
icebp
xchg
adc
js
mov
mov
(bad)
jp
repz
push
or
div
push
in
push
mov
mov
das
pop
jg
mov
dec
cdq
aam
inc
popf
das
sbb
ss
data16
push
push
out
xchg
xor
das
mov
fdivr
mov
cmps
xchg
or
leave
sahf
or
xlat
sar
and
movs
shl
and
sti
mov
jmp
inc
cwde
lods
dec
or
mov
sbb
push
(bad)
out
das
add
lea
inc
pusha
loope
jp
lds
push
leave
je
sbb
sub
dec
adc
cmp
cmp
popf
js
jne
test
fistp
dec
cmps
cmp
dec
cdq
and
cs
cmc
or
out
enter
xor
or
jp
pushf
jmp
ds
jle
stos
and
or
ds
xchg
fldenv
leave
mov
cli
mov
mov
inc
inc
and
loope
(bad)
dec
xor
shl
and
xchg
inc
fsubr
je
mov
gs
xor
ret
sbb
push
cmp
xchg
into
adc
not
push
dec
popa
pop
xchg
mov
aas
inc
loop
push
mov
scas
push
ds
jno
bound
dec
shl
enter
loope
jge
call
popf
pop
or
fld
xor
adc
lods
pop
test
addr16
jle
push
aad
(bad)
mov
bound
cmp
or
lock
ins
pop
pop
(bad)
leave
mov
cmp
dec
lods
loop
xchg
test
dec
push
cmp
ds
mov
push
jns
ja
pop
arpl
fld
repz
jmp
xchg
xchg
inc
inc
jmp
out
mov
ret
in
and
movs
cdq
hlt
not
ret
movs
outs
mov
adc
cmp
pop
movs
mov
mov
xlat
mov
push
sbb
fnstenv
sub
test
xchg
stc
push
cmp
jae
imul
loop
adc
add
pusha
dec
enter
(bad)
aaa
and
push
jmp
lock
shl
pop
and
popf
dec
inc
iret
or
das
mov
xor
pop
mov
fst
mov
sbb
test
push
loopne
nop
addr16
push
xchg
data16
mov
loop
imul
pop
sahf
xor
icebp
sbb
and
lods
mov
(bad)
pop
mov
xchg
imul
or
fld
mov
mov
cmps
lds
cwde
in
mov
add
hlt
mov
sbb
push
iret
mov
movs
xchg
ins
jno
(bad)
push
or
movs
sbb
push
(bad)
xor
adc
ins
inc
jns
and
cmp
sub
aad
jecxz
mov
les
ret
leave
shl
fidivr
add
mov
repnz
fist
mov
mov
outs
xor
movs
popf
(bad)
xor
test
iret
add
out
(bad)
jns
sbb
popa
pop
xchg
xor
shl
retf
and
mov
outs
push
in
jnp
dec
and
test
je
je
lea
lds
rcr
inc
mov
cdq
and
sbb
mov
xor
sti
sub
and
ins
xor
shl
(bad)
test
push
ins
js
fisub
push
aaa
xchg
sub
rcr
pop
scas
add
sar
push
jmp
xchg
mov
add
push
add
stos
cmp
inc
inc
xchg
jle
cmps
adc
add
rol
jns
inc
jecxz
sti
cs
cmc
add
sbb
mov
jmp
mov
sub
sbb
jnp
daa
movs
jae
loope
out
mov
sub
sbb
in
or
cli
xor
inc
pop
pop
ret
mov
jge
mov
fadd
jge
mov
mov
inc
lahf
pusha
ds
adc
add
out
pop
or
cmc
mov
test
sbb
popa
and
sahf
mov
push
jns
ins
addr16
iret
aas
mov
or
mov
gs
(bad)
mov
mov
pop
pusha
or
inc
jg
xchg
aad
fsubr
push
jl
or
xchg
fsubrp
adc
push
pop
cdq
xchg
loope
cmp
xor
add
in
(bad)
js
sbb
retf
repz
jle
push
inc
xlat
int3
cmps
(bad)
in
cmp
pop
and
in
(bad)
or
mov
scas
and
xchg
(bad)
ja
repnz
stos
mov
push
stos
jo
scas
cmc
pop
dec
aas
sbb
ds
and
ror
(bad)
test
jo
push
aas
pop
adc
aas
and
fnclex
jno
fdivr
xor
out
mov
push
popf
inc
ins
inc
push
out
movs
leave
mov
(bad)
stc
out
dec
inc
cmc
xchg
aad
inc
sub
jl
push
stos
jns
mov
mov
mov
pusha
(bad)
add
jne
daa
xor
inc
ja
adc
aam
out
scas
mov
mov
int
loop
ds
cmps
cmp
jle
adc
aaa
sti
adc
out
sbb
add
inc
ss
les
mov
mov
mov
fadd
out
jb
cmps
push
mov
and
or
ja
icebp
add
and
popa
push
sub
mov
add
xchg
cli
mov
mov
pop
data16
loopne
push
xor
sub
sub
mov
adc
(bad)
out
mov
inc
sbb
dec
jns
pop
loope
mov
out
in
(bad)
jo
fld
xor
clc
sbb
dec
mov
(bad)
loop
mov
pop
ds
rol
rol
sub
sub
fistp
adc
test
pop
or
loope
sub
push
cmp
jne
inc
aad
inc
mov
sub
push
fist
push
jno
inc
push
fimul
(bad)
pop
cmc
adc
and
cwde
inc
jg
push
or
dec
mov
and
sbb
pop
fisubr
test
mul
xchg
mov
xchg
push
xor
inc
test
lods
and
sbb
call
pop
adc
lods
adc
adc
cmp
jmp
imul
xchg
fadd
dec
jo
(bad)
sbb
and
daa
mov
sbb
jge
xchg
xchg
cmp
test
and
sbb
mov
jg
jmp
push
repz
hlt
mov
icebp
movs
ins
lea
ins
sub
and
cmp
lods
add
cmp
mov
test
ja
mov
inc
push
test
adc
sbb
adc
aam
mov
(bad)
cwde
ss
(bad)
jl
inc
xor
test
jmp
and
ret
icebp
xchg
jmp
jmp
clc
int3
xor
fisttp
jne
cmc
push
xchg
retf
mov
push
fstp
cmp
mov
fsub
mov
aas
jg
loopne
cmp
stos
dec
sti
jmp
aas
mov
xor
xchg
jnp
jns
inc
fdiv
stc
call
mov
add
and
push
inc
(bad)
cmps
push
cli
sahf
mov
xlat
sbb
jb
test
lods
push
out
inc
adc
pop
movs
in
push
mov
pop
jl
cmps
cmc
dec
pusha
or
icebp
xor
dec
xchg
inc
mov
cmc
fmulp
ja
test
adc
retf
push
bound
test
mov
call
push
mov
xchg
imul
xlat
xchg
and
dec
or
push
push
and
ins
mov
mov
repnz
js
std
movs
mov
xlat
jno
loopne
icebp
mov
mov
xchg
mov
mov
fdiv
mov
mov
sub
and
inc
mov
adc
rcr
lahf
inc
xchg
sbb
int
fmulp
xchg
and
call
jnp
push
repnz
fist
lock
in
fsubrp
mov
aad
lahf
movs
imul
mov
jno
jmp
pop
retf
xchg
sub
repnz
pusha
mov
shr
push
mov
(bad)
dec
adc
xchg
mov
ins
cmp
aaa
add
and
jno
int
pop
pop
xchg
cwde
mov
mov
aaa
outs
sub
xchg
add
repnz
add
mov
pop
jb
pop
add
bound
mov
aas
cmps
pop
add
sar
ss
sbb
pop
sub
in
and
lods
pop
or
inc
out
pop
mov
mov
das
mov
and
push
jno
ins
adc
imul
mov
lods
push
push
mov
pop
out
cmp
add
sti
mov
push
pop
dec
hlt
js
push
nop
jg
inc
sub
(bad)
cmp
or
and
inc
mov
dec
mov
push
ret
mov
xchg
mov
ins
in
into
jns
std
inc
imul
jnp
or
push
xchg
(bad)
shl
add
pop
jp
jae
xchg
leave
aam
popf
gs
fldenv
cmp
rcl
adc
jns
xor
xor
xchg
cmp
pop
pop
mov
mov
stos
(bad)
stos
mov
push
icebp
adc
ins
or
pop
outs
fcom
lods
and
rcl
rcr
das
dec
cmp
ds
iret
sub
mov
push
xchg
sbb
xchg
loopne
or
pop
out
pop
jbe
pushf
imul
add
add
mov
loop
imul
ins
call
jg
and
cld
jmp
leave
ja
push
hlt
dec
scas
mov
jmp
mov
aaa
sbb
mov
jae
ret
adc
pop
in
fs
mov
(bad)
add
xor
movs
mov
jmp
repnz
aad
mov
cmps
push
mov
fist
dec
xor
call
or
mov
inc
clc
xchg
out
frstor
cmp
or
adc
ficomp
jbe
sbb
retf
pop
xcrypt-ctr
cmps
pop
and
bound
push
ror
inc
retf
and
mov
ins
push
ret
(bad)
pop
rcl
movs
out
sbb
cmp
jp
sbb
adc
fld
sbb
mov
ficom
ja
in
sub
sbb
mov
mov
or
inc
ss
xor
mov
ins
sub
icebp
jae
inc
fisttp
dec
lock
mov
loop
clc
cld
xor
adc
add
ret
and
inc
pop
repnz
(bad)
and
sub
fild
neg
pop
cld
mov
sbb
adc
int
mov
jmp
jle
pop
fiadd
pop
test
cmps
mov
movs
xor
ret
mov
ins
stos
cmp
add
cmps
mov
adc
mov
enter
repnz
or
xchg
sbb
cmps
sti
add
bound
shl
sub
cmp
dec
jno
pop
lds
adc
mov
push
and
push
fcomip
pop
(bad)
push
mov
(bad)
push
mov
fsubr
out
hlt
stc
mov
jl
cmp
int3
int
push
int
dec
(bad)
in
mov
xchg
xor
not
je
cmps
jne
fwait
push
inc
shr
fisttp
addr16
outs
lock
ja
jno
pusha
fwait
mov
rol
std
jno
sbb
movs
xor
pop
jae
lea
mov
sub
mov
mov
pushf
or
aad
sahf
dec
adc
push
call
adc
icebp
mov
or
daa
cmps
ins
sahf
stos
inc
xchg
enter
adc
dec
cmp
dec
and
mov
call
lock
fst
int
rol
inc
or
pop
inc
dec
imul
mov
loop
mov
sub
int3
xchg
fcmovb
jp
push
mov
ret
jnp
add
iret
aad
sub
mov
fwait
lods
adc
mov
adc
adc
sub
pop
cmp
popa
out
lock
call
jg
push
pop
out
pusha
sub
mov
mov
retf
(bad)
pop
nop
mov
retf
xor
jle
cmp
popf
sub
add
popa
fidiv
mov
xchg
or
pop
pop
movs
adc
data16
div
push
mov
shl
hlt
bound
push
mov
lea
outs
lahf
or
xchg
cmp
mov
dec
dec
cwde
lds
out
lods
add
mov
fdivr
mov
mov
push
repnz
iret
xor
jp
or
dec
xchg
inc
mov
bound
pop
jge
inc
xor
adc
add
dec
sub
push
lahf
loop
call
jmp
cmp
xor
cwde
xlat
imul
add
out
mov
stos
fwait
mov
popf
(bad)
nop
push
sbb
mov
mov
or
ret
mov
jmp
lods
aas
pop
xchg
dec
lods
enter
stos
rol
mov
loope
push
push
addr16
fwait
addr16
inc
ret
aas
(bad)
mov
out
cmps
inc
and
mov
call
sub
fs
mov
ds
clc
sub
icebp
ret
lock
imul
jmp
mov
icebp
ror
loopne
out
in
sub
jp
jle
out
inc
and
rcl
sbb
loop
or
cmp
mov
out
adc
jmp
inc
retf
mov
arpl
aaa
mov
cmp
mov
pop
ss
inc
not
and
scas
pop
cmc
xchg
in
inc
in
mov
sub
xor
loope
or
in
movs
inc
jnp
dec
mov
ss
sbb
pushf
mov
test
rcl
xchg
enter
sbb
mov
inc
inc
or
xor
es
mul
mov
sbb
mov
cmp
stos
sub
xchg
hlt
test
pop
dec
and
mov
pop
xor
xor
mov
shl
pop
inc
lods
dec
loope
int
pop
imul
fmul
(bad)
jg
ret
test
mov
sub
in
xor
push
ficom
push
call
cmps
lock
mov
xchg
or
xchg
jle
dec
gs
sub
and
std
push
bnd
dec
popa
rcl
mov
xchg
xchg
mov
adc
pop
add
inc
push
xchg
mov
(bad)
adc
scas
or
(bad)
or
mov
imul
push
cmp
fldlg2
out
push
loope
rol
sub
int3
pushf
ret
(bad)
push
fmulp
mov
pop
push
cmc
mov
inc
jecxz
rcl
sub
mov
or
loopne
xor
pop
aam
repz
sbb
adc
push
mov
in
mov
mov
jle
fnstcw
mov
mov
and
adc
sbb
xor
into
outs
inc
add
mov
ja
in
sbb
(bad)
mov
push
fwait
adc
(bad)
test
sti
out
in
mov
cmp
cmp
fdiv
add
jo
lock
call
inc
pop
push
mov
neg
adc
scas
cs
cmp
shl
cmp
inc
repz
mov
out
repnz
push
jno
cdq
loopne
push
and
dec
sub
ffreep
pusha
jae
cmp
sbb
and
(bad)
fnsave
jge
popf
xor
cmps
sar
inc
jne
and
into
pusha
aas
jns
aad
xor
fcom
jg
ins
add
pop
jecxz
in
cmp
mov
das
clc
xchg
gs
pop
xor
xchg
ss
lods
mov
ds
es
int3
or
push
xor
pop
cmc
push
lods
movs
mov
mov
mov
sbb
dec
pop
rcl
mov
fcom
jbe
add
in
push
jne
adc
cmp
inc
pop
ds
das
ss
or
xor
dec
loopne
cmps
jo
loop
jmp
mov
pop
ins
pusha
lods
out
psubb
push
add
mov
jle
mov
jmp
sbb
mov
ret
ins
out
call
jmp
call
push
pusha
xor
sub
ja
xchg
std
js
xor
pop
call
mov
inc
xchg
sub
lahf
xor
cli
enter
add
cwde
gs
mov
sub
push
sbb
push
ficomp
fld
jp
jbe
test
loop
mov
cmp
adc
push
push
sub
push
xchg
sub
xchg
idiv
xor
add
mov
jmp
fisttp
pushf
repnz
iret
ror
call
(bad)
xlat
sbb
(bad)
xchg
sahf
xchg
fucomi
or
inc
and
mov
repnz
and
cdq
adc
aad
aas
pop
sbb
jae
nop
data16
(bad)
cmps
cmps
inc
int
sar
push
add
mov
gs
mov
rol
mov
call
dec
push
loopne
mov
pusha
pop
fsubr
retf
dec
or
lods
xchg
mov
fcomp
(bad)
cmps
imul
xor
jnp
in
jo
js
xor
inc
and
addr16
neg
gs
add
addr16
mov
jbe
fldcw
out
(bad)
jle
xchg
mov
(bad)
fcom
bswap
lods
mov
in
shr
push
inc
and
sar
arpl
jle
add
xchg
pop
inc
scas
jne
lods
and
jmp
into
xchg
adc
jns
push
aad
pusha
outs
shl
aaa
dec
cmp
ror
dec
push
int3
lods
jcxz
(bad)
neg
inc
or
hlt
sub
sub
sbb
js
movs
adc
cmp
call
inc
mov
pop
push
cli
cdq
mov
ror
cmp
lahf
mov
stos
mov
daa
xor
sub
and
mov
sub
aas
ficomp
stos
cmp
adc
(bad)
mov
pop
in
imul
jne
in
call
pop
stc
fisttp
mov
jle
cmp
push
xlat
lea
add
sbb
scas
jg
pop
fisub
push
sbb
adc
shl
and
mov
xlat
scas
sti
add
ins
(bad)
data16
push
ss
and
lahf
inc
lsl
jle
repz
out
test
lods
lods
mov
mov
repnz
inc
mov
cmp
xchg
outs
dec
adc
adc
aas
(bad)
out
add
aam
mov
and
icebp
out
pop
adc
pop
mov
push
stc
push
jne
mov
mov
inc
into
clc
cmp
jg
jnp
xor
std
retf
inc
add
retf
scas
int
lea
mov
xchg
ffree
adc
add
das
scas
and
(bad)
xor
inc
sub
outs
adc
mov
xor
sub
fcmovu
xor
cwde
fcmovnu
stos
js
repz
push
movs
test
enter
data16
lock
sub
imul
and
mov
xlat
jmp
mov
xor
sub
xchg
imul
mov
sub
sbb
inc
xchg
jo
xchg
cmps
jnp
out
inc
icebp
cmovge
jge
stc
cld
inc
mov
inc
mov
dec
cmp
aaa
lahf
movs
mov
mov
outs
mov
xchg
add
arpl
jne
cmp
pop
push
push
pushf
pusha
jbe
imul
pop
jl
mov
jp
(bad)
int
xchg
lock
xchg
mov
lods
add
int3
xor
aaa
sbb
mov
xor
cmp
push
daa
pusha
xor
scas
int
loopne
les
inc
arpl
pop
cmps
outs
popa
pop
adc
push
dec
cs
sar
xor
xchg
fucomi
lahf
(bad)
ror
sub
push
lahf
push
xor
mov
inc
call
fnstenv
lds
push
cdq
retf
jge
mov
adc
mov
mov
jno
(bad)
and
frstor
pop
cmp
push
shl
sub
dec
cmp
pusha
outs
sbb
or
stc
and
xor
call
adc
out
xchg
mov
mov
stos
jp
out
aad
and
cmp
es
inc
sub
dec
pop
cmps
fldcw
add
cld
xor
sbb
and
pop
fadd
mov
mov
pushf
adc
lods
or
retf
mov
dec
and
mov
scas
cmp
scas
dec
mov
mov
jnp
js
aam
xchg
and
jmp
push
popf
dec
mov
rcl
inc
push
popa
or
cmps
dec
or
sub
popf
stc
pop
mov
(bad)
das
and
scas
mov
shr
das
mov
cld
and
test
adc
pop
cmc
std
mov
add
stos
int3
call
mov
or
mov
imul
mul
add
push
inc
xchg
pop
rcr
pushf
push
call
mov
sbb
mov
or
xchg
adc
xchg
sub
out
test
aaa
iret
xchg
ror
dec
sahf
pushf
dec
in
mov
push
cli
rcr
cmp
ror
dec
jle
xlat
and
add
in
xor
jb
push
(bad)
lods
mov
stos
inc
(bad)
jp
in
std
adc
mov
int
xor
or
test
(bad)
or
xor
cs
mov
push
cmp
repnz
jmp
mov
mov
dec
int3
inc
movs
mov
retf
cmp
inc
inc
push
movs
das
stos
mov
push
movs
in
pop
xor
mov
sbb
push
cmp
ss
mov
aaa
(bad)
addr16
mov
(bad)
aam
mov
ficomp
jl
outs
add
push
xor
xchg
fldcw
mov
jne
sub
add
loopne
rol
nop
leave
xor
sahf
add
mov
sti
dec
jno
cmp
and
mov
ins
ins
pop
sbb
arpl
or
xlat
mov
jg
push
adc
mov
jno
mov
(bad)
in
xchg
dec
ss
dec
fcomp
xor
mov
test
jns
pop
adc
sbb
icebp
xlat
leave
out
add
sbb
mov
mov
fiadd
push
xchg
in
mov
arpl
push
inc
mov
test
jp
mov
mov
jmp
imul
inc
cmps
arpl
push
mov
and
scas
or
jb
iret
repnz
mov
push
fcomp
repz
pop
push
iret
fcomp
cwde
xchg
int
sub
xchg
mov
mov
(bad)
ins
(bad)
cmps
clc
cmp
je
cmc
fadd
jp
mov
ret
in
mov
lds
inc
cli
aaa
jo
in
jae
pop
dec
pop
cmp
cmp
into
mov
lods
jbe
(bad)
fmul
mov
push
sbb
rcr
inc
or
cmp
repnz
fidivr
ds
enter
sahf
jbe
(bad)
loop
jmp
jp
xor
and
sbb
sub
das
adc
(bad)
adc
sbb
pop
icebp
retf
push
clc
mov
aam
out
add
inc
push
in
add
mov
add
mov
push
cmp
sub
mov
inc
xchg
movs
pop
mov
mov
mov
jo
mov
ja
xchg
xchg
push
cmps
and
movs
inc
and
dec
ror
int
vmwrite
call
add
pusha
outs
xchg
mov
cld
fbstp
popa
push
jmp
push
inc
js
inc
jge
mov
add
repnz
test
adc
and
ret
jo
mov
out
pop
call
inc
jo
loopne
leave
push
push
pop
cmp
push
ror
xchg
inc
and
jmp
pop
xchg
movs
pop
or
mov
cld
stos
xchg
(bad)
in
and
adc
lea
adc
in
add
js
adc
call
sub
out
push
xor
adc
out
mov
into
fmul
iret
jbe
push
frstor
stos
adc
push
push
enter
ins
lea
hlt
sbb
cli
jno
lods
es
xor
std
out
and
jmp
add
repz
jmp
jo
loope
jo
(bad)
push
adc
adc
xor
xor
jns
xlat
mov
sub
stos
xlat
xchg
ret
sar
or
push
pop
(bad)
or
repnz
pop
push
and
scas
sub
test
bnd
pop
jecxz
fdivr
jecxz
movs
mov
cmp
out
rol
pop
dec
jecxz
cmps
dec
cmp
bnd
xchg
faddp
push
mov
xlat
outs
fsubr
inc
push
ret
call
scas
pop
mov
test
arpl
aaa
fwait
pop
sbb
jl
pop
dec
mov
sub
jecxz
fistp
je
(bad)
adc
cdq
pop
fwait
push
mov
mov
fnsave
mov
cmp
cld
fild
pop
nop
and
mov
shl
jmp
pop
or
test
mov
lahf
push
cld
test
mov
jo
and
xlat
scas
ret
scas
ja
outs
pop
dec
sbb
cwde
xor
cwde
retf
push
nop
ins
jo
icebp
cmc
jp
sbb
neg
ins
lahf
sbb
cmp
push
or
rol
and
cmp
fld
or
cmp
shl
scas
stos
test
(bad)
addr16
jne
or
adc
xchg
cmc
xchg
pop
jg
pop
fs
and
push
scas
cmp
(bad)
into
inc
xor
mov
stos
(bad)
int
sub
cmp
xchg
sub
inc
push
lods
dec
aad
xchg
shl
popf
pop
dec
adc
add
push
call
fimul
(bad)
push
push
inc
dec
xchg
dec
test
out
mov
mov
nop
push
adc
pop
inc
fimul
sbb
sar
jno
xchg
or
retf
in
add
test
xchg
add
imul
mov
loope
es
es
or
(bad)
pop
int3
stos
clc
push
sbb
jg
js
into
pop
gs
xor
daa
pop
cdq
movs
jb
loop
adc
sbb
jge
pop
pushf
pushf
xor
movs
scas
mov
sbb
xchg
dec
jmp
sub
gs
push
popf
jns
mov
xchg
jnp
jmp
js
loopne
sbb
repnz
mov
pop
add
sbb
mov
sti
lahf
mov
rcr
xchg
test
(bad)
(bad)
out
xchg
and
push
sbb
mov
into
mov
lods
dec
fistp
jmp
ins
movs
rcr
push
xor
lds
mov
rol
retf
add
pop
fs
and
dec
imul
adc
je
push
inc
inc
les
cdq
and
push
in
fwait
jl
push
pop
pop
sbb
cdq
sbb
xlat
int3
ins
jae
jnp
ins
arpl
inc
out
mov
jo
in
dec
ror
ss
add
iret
in
adc
mov
add
jecxz
mov
jmp
cs
gs
je
add
cmp
scas
xor
pop
add
cmp
xor
adc
jmp
movs
and
cs
ror
cmp
sbb
pop
adc
adc
xchg
sub
int3
xor
loope
ret
js
leave
mov
gs
jge
cmp
dec
sub
inc
pop
add
dec
and
pop
push
xlat
iret
loope
scas
clc
jmp
sbb
(bad)
lahf
(bad)
rol
in
leave
out
in
es
inc
add
ins
jb
cmp
lea
movs
mov
je
popf
cmp
jo
cmps
test
and
ror
push
and
mov
pop
bnd
aad
push
jnp
inc
jno
ins
xchg
inc
and
jns
outs
fwait
sub
icebp
mov
lods
ins
xor
data16
cmp
jo
jl
mov
mov
xor
adc
cli
jo
gs
scas
movs
and
push
mov
inc
into
adc
sti
fs
push
movs
cmps
and
add
scas
stc
pushf
jge
mov
sub
xor
jb
mov
stos
mov
push
fcom
shr
test
or
dec
sbb
cdq
call
in
xor
jecxz
sub
adc
je
test
ret
fstp
jae
mov
mov
(bad)
jnp
inc
and
stos
pop
dec
cmp
push
xor
mov
repz
fdiv
or
movs
gs
daa
cmp
xchg
dec
shl
add
mov
or
cmp
iret
jo
mov
out
mov
mov
fdiv
imul
mov
cwde
les
push
loopne
in
add
pop
out
mov
mov
aad
adc
inc
sub
inc
cmp
retf
int
add
fisttp
sti
push
and
sub
loope
mov
xchg
cmp
pop
dec
iret
mov
cmc
lahf
(bad)
adc
stc
adc
jp
pop
dec
xchg
in
call
xor
lds
jb
cmp
aas
fcomi
jg
aaa
(bad)
not
cld
scas
xchg
pop
jl
pop
mov
adc
xor
sbb
dec
xor
pushf
jp
ins
xchg
iret
aad
ja
ja
jo
mov
add
and
addr16
jle
test
inc
push
mov
add
out
rol
pop
xor
das
out
mov
dec
push
ret
jno
dec
dec
fisub
rcl
daa
pusha
or
add
ss
dec
ror
and
jns
stos
repz
movs
sub
pop
out
movs
dec
mov
mov
pop
cmc
movs
cmp
imul
mov
ja
cmc
inc
mov
(bad)
popf
inc
ds
fldcw
and
push
or
pop
ins
ror
loope
repz
pop
and
mov
mov
jle
dec
adc
pop
jo
data16
cs
fisttp
paddd
and
movs
dec
int
and
ficom
addr16
jmp
add
push
gs
dec
loopne
push
aam
lods
aaa
arpl
ret
jnp
sbb
lahf
xlat
sbb
xchg
repnz
scas
jl
cli
outs
idiv
fs
in
pop
jecxz
ror
add
push
jge
(bad)
out
jne
das
js
mov
dec
mov
push
imul
jne
popa
push
pop
add
or
jnp
xor
cmp
(bad)
xor
sbb
xchg
add
pop
xchg
add
sub
dec
dec
call
lods
rcr
aas
outs
fidivr
mov
xchg
ins
sub
xchg
and
push
xor
mov
ins
jmp
push
loop
pop
add
xor
push
movs
shl
add
mov
mov
cmp
pop
xor
jl
and
ror
movq
mov
mov
fs
lahf
xor
mov
shl
test
cmps
out
push
loope
or
sahf
lock
out
cmp
retf
data16
int3
(bad)
cmc
mov
xchg
movd
or
or
sbb
cmp
imul
inc
jp
hlt
jne
add
test
mov
outs
adc
xor
push
or
lock
dec
sub
and
push
push
add
xlat
sbb
(bad)
mov
and
cld
inc
ret
and
push
sbb
pop
rcr
cli
sbb
pop
inc
mov
inc
adc
dec
mov
cmp
sbb
dec
mov
cmp
mov
mov
mov
outs
and
mov
mov
and
xor
xchg
ret
sub
aas
ret
inc
pop
movs
stos
sub
in
push
push
xchg
push
xchg
sbb
lods
stos
repz
dec
and
jnp
adc
test
dec
cld
push
ins
adc
ins
jmp
sbb
xor
xchg
push
dec
(bad)
(bad)
and
out
jg
dec
add
push
add
mov
cmpps
mov
es
cli
stos
xor
xor
outs
fild
test
xor
sbb
or
popa
ins
push
mov
movs
addr16
adc
dec
int
xchg
jl
outs
pop
arpl
aaa
push
xchg
adc
dec
xor
daa
and
mov
cmp
inc
mov
jmp
sub
aad
xchg
pop
dec
stos
(bad)
adc
mulps
push
std
xchg
inc
je
adc
sub
jb
xchg
js
lea
int3
add
mov
cmp
cmp
mov
stos
jmp
mov
push
sbb
and
mov
sub
xor
mov
(bad)
xlat
inc
mov
ins
(bad)
out
or
jp
inc
and
std
ja
sub
iret
mov
push
jge
push
xchg
js
push
test
(bad)
out
push
add
js
daa
and
pop
xor
cmps
mov
inc
mov
xchg
mov
xlat
lock
adc
sbb
je
cmc
add
cmps
jne
jge
bound
ja
pop
ins
mov
push
(bad)
enter
out
shl
or
xchg
mov
icebp
repz
mov
xor
test
aaa
rcr
push
movs
cmp
iret
inc
fs
mov
faddp
sbb
pop
mov
pop
out
and
retf
mov
mov
xlat
sbb
push
sub
fcmovnbe
(bad)
das
and
retf
dec
scas
cli
ret
(bad)
xlat
in
outs
arpl
push
mov
ret
cmp
jmp
xchg
push
sub
call
push
retf
pop
xor
fwait
or
jmp
outs
cdq
call
inc
pop
jmp
mov
sar
aad
xor
fstp
int3
mov
cmp
xor
push
dec
push
test
pop
cld
lea
fbld
pop
fwait
gs
stos
mov
test
jb
pop
test
rcr
push
add
loop
push
jnp
lock
ja
popf
popa
add
xchg
lods
and
mov
or
cmps
in
dec
lea
pop
in
cmp
push
test
fistp
add
ins
gs
sahf
jns
adc
xchg
ror
(bad)
sahf
sub
jecxz
cmp
cwde
push
dec
cdq
push
sbb
add
xchg
xchg
inc
sbb
lea
mov
loop
jmp
mov
jnp
pop
or
and
bound
loopne
or
movs
jle
pop
clc
sub
data16
and
ss
xchg
nop
add
mov
xor
pushf
dec
mov
cmp
test
adc
cld
xor
pusha
leave
jbe
dec
fldcw
rol
(bad)
mov
std
pop
jl
shl
dec
jb
dec
jb
lock
mov
add
pop
js
fmul
nop
and
jne
add
out
sub
and
push
pop
jg
mov
popf
inc
jbe
push
pop
aam
adc
lock
mov
push
mov
add
push
pop
inc
aas
out
or
(bad)
mov
(bad)
jbe
push
dec
lea
fsin
cdq
test
lock
inc
retf
loope
mov
cs
outs
fs
xchg
inc
pop
iret
sub
jl
jle
sar
test
pop
cmps
jle
dec
add
push
(bad)
ds
mov
fsubr
dec
ja
loopne
std
mov
or
movs
mov
or
jne
(bad)
ror
sbb
loopne
inc
inc
pop
test
mov
add
clc
js
mov
stos
shr
push
fyl2x
fcmovne
or
add
cmc
ret
js
cdq
pop
and
stos
pop
mov
rol
mov
push
out
test
gs
fisttp
xor
loop
add
xchg
fstp
mov
popf
fidiv
dec
pusha
add
pop
or
and
loop
sbb
popa
mov
jle
dec
push
out
je
xchg
gs
mov
fs
out
or
test
xchg
mov
mov
xchg
aad
xchg
push
mov
push
(bad)
cld
pop
adc
cmp
lea
pop
out
jp
add
adc
cmp
add
pop
add
(bad)
enter
imul
pusha
mul
iret
jecxz
mov
push
fadd
sub
test
data16
add
sub
jns
push
mov
cmp
jmp
aaa
mov
adc
cs
sub
int
int
push
(bad)
popf
push
cmp
mov
mov
(bad)
cmc
xor
lds
inc
sbb
inc
retf
pop
mov
pop
and
lds
push
inc
daa
mov
push
lock
inc
jecxz
sub
jle
repnz
dec
cmp
push
inc
sub
pop
lods
retf
movs
sbb
js
lock
cmp
cli
and
adc
popa
stos
mov
shl
data16
and
sahf
sbb
and
adc
movs
fisttp
je
arpl
loopne
mov
jbe
popa
push
nop
mov
jo
retf
scas
scas
inc
div
popf
or
stos
push
lds
repz
sub
inc
ret
cs
xlat
pop
(bad)
out
mov
xchg
pop
ror
stos
iret
sub
xor
push
fistp
mov
mov
repz
mov
cmc
adc
push
jp
xor
mov
jne
repz
mov
lds
jmp
cmp
mov
aaa
nop
cmp
pop
nop
mov
sub
rcl
push
inc
mov
test
xor
xor
xor
mov
mov
and
out
and
ins
and
sub
into
mov
les
rcr
sahf
cwde
jge
ss
repz
retf
scas
retf
out
dec
jnp
or
or
inc
and
mov
push
sahf
inc
sub
cmps
adc
or
dec
sub
retf
cmp
(bad)
cs
shl
inc
adc
xor
inc
ficomp
lahf
dec
ins
cmps
mov
jo
or
xor
jns
and
scas
dec
and
cmp
xlat
test
mov
dec
rcl
adc
(bad)
aaa
xor
movs
mov
cmp
int3
mov
cs
out
sbb
ja
bnd
pop
add
aam
out
mov
mov
push
jns
push
jle
pop
das
fld
imul
in
dec
inc
(bad)
out
add
mov
stos
in
adc
xor
test
ss
jns
ins
call
aam
push
mov
sahf
(bad)
into
ja
std
iret
mov
stc
push
cmps
retf
in
inc
(bad)
push
in
fidiv
pop
xor
stos
scas
(bad)
xor
mov
and
jb
dec
(bad)
(bad)
out
dec
or
xchg
aaa
or
ins
jbe
ins
hlt
jb
cli
or
repz
rcl
sbb
stos
cmc
push
(bad)
in
fld
mov
iret
mov
int3
les
or
pop
or
xor
or
mov
mov
test
aaa
mov
or
repz
jb
std
add
mov
test
push
dec
das
pop
pushf
(bad)
sub
ficomp
lea
adc
enter
popf
xor
out
or
cmps
pop
xor
popf
or
(bad)
popf
fiadd
cmp
call
sub
jnp
dec
push
sub
jmp
xchg
ror
xor
daa
aam
adc
xor
xchg
int3
rol
mov
fnstenv
(bad)
push
retf
mov
ror
jecxz
mov
jnp
dec
call
adc
cmp
lock
out
or
int
xchg
and
jno
(bad)
(bad)
mov
sbb
ins
js
imul
inc
or
cmp
adc
das
iret
lods
push
sub
xchg
ror
retf
push
inc
loopne
ja
xchg
inc
jb
cmp
mov
push
or
and
retf
js
dec
mov
sbb
fs
mov
stc
mov
aad
mov
jl
ret
mov
xchg
cmc
sahf
mov
inc
push
ror
jp
test
xchg
shl
pushf
jnp
xchg
sahf
popf
mov
and
lock
xlat
inc
or
mov
and
cmc
xchg
ins
icebp
push
nop
ja
std
fisttp
mov
jmp
cmp
inc
jb
push
mov
inc
xchg
retf
sbb
push
jl
push
ret
aad
pop
adc
retf
pop
iret
and
push
or
cmps
cmc
fisttp
jne
jnp
enter
outs
(bad)
cmc
push
stos
icebp
xchg
pop
mov
mov
jne
dec
js
jns
ret
aaa
das
pusha
lea
sbb
leave
mov
in
out
xchg
not
mov
shl
stos
dec
inc
out
sbb
jmp
pop
jp
ss
pop
addr16
xchg
jg
in
sub
cmps
inc
cmp
xchg
popf
sub
add
into
push
fnstsw
stc
imul
mov
and
aas
fs
xor
(bad)
sar
shr
xchg
xor
adc
dec
add
arpl
pop
out
imul
fiadd
adc
sub
cmp
fisubr
mov
loop
fadd
in
sahf
arpl
lds
enter
cld
pop
mov
or
mov
sub
add
repz
retf
xor
jns
test
outs
and
ja
push
test
jno
sbb
jmp
push
jb
or
sete
or
cld
(bad)
bound
jne
cmp
or
ror
sar
and
mov
cs
adc
movs
test
sbb
les
mov
add
sub
sub
xor
sbb
mov
push
into
movs
mov
cmps
ja
fs
cmp
mov
jno
inc
iret
xor
mov
lods
jbe
les
adc
adc
imul
mov
ret
pushf
mov
pop
gs
push
in
ins
int
loopne
ins
iret
out
mov
inc
pusha
jmp
dec
xchg
jmp
lock
test
cmps
adc
(bad)
pushf
imul
xor
sub
sahf
(bad)
fld
out
adc
mov
mov
outs
mov
xor
movs
lds
fs
mov
in
push
std
shr
outs
mov
js
push
outs
inc
and
or
push
dec
dec
inc
pop
mov
inc
add
call
or
ror
clc
jle
sub
outs
cld
push
pop
call
xchg
add
add
retf
scas
xor
rcl
xchg
arpl
aam
add
mov
sub
sti
pop
sti
push
outs
mov
mov
sub
stos
inc
daa
leave
and
scas
clc
(bad)
ja
push
sbb
loopne
sbb
mov
(bad)
jno
pusha
test
mov
addr16
ds
(bad)
mov
nop
clc
aas
sbb
pusha
xchg
(bad)
inc
jge
jns
dec
mov
int3
(bad)
push
jle
ret
ficomp
in
mov
inc
cdq
inc
lds
cmp
push
das
adc
inc
repz
sar
and
(bad)
pop
les
std
mov
icebp
jle
jne
mov
ja
mov
loopne
ret
xor
push
push
in
ss
sub
mov
xor
ja
and
ins
lds
xchg
jecxz
mov
sub
xchg
shl
jae
icebp
push
push
or
push
shr
les
xor
imul
adc
mov
and
fiadd
mov
pop
fistp
pop
aad
aam
fidiv
cwde
int3
out
or
in
and
sub
adc
loop
fadd
or
and
fisubr
imul
mov
xchg
cld
shl
repnz
stos
dec
test
jmp
int3
pop
xchg
jns
cld
add
inc
lea
in
pop
xchg
add
test
fldenv
xchg
inc
pop
rcl
rol
push
sub
cdq
jnp
test
in
mov
(bad)
sti
pop
aad
inc
dec
mov
shr
sub
xchg
cmc
jmp
inc
cmp
ret
jmp
mov
sbb
test
(bad)
sbb
inc
dec
sbb
fwait
cld
push
imul
inc
sbb
jnp
pop
cmps
cmc
stos
cli
xchg
cmp
fwait
call
mov
mov
cmps
add
jno
sbb
rcr
inc
imul
jp
les
mov
lods
and
mov
leave
mov
in
sub
fsubr
and
push
retf
add
in
jb
faddp
loopne
mov
iret
jnp
and
into
mov
mov
cmp
mov
in
in
call
ja
sub
gs
and
adc
mov
dec
pop
rol
(bad)
jnp
clc
dec
dec
lods
out
pop
sub
test
arpl
pop
mov
lods
cwde
pop
sar
mov
mov
(bad)
frstor
sti
cs
out
test
setp
xor
js
pop
loop
push
mov
pop
sbb
mov
jp
bnd
movs
scas
add
mov
iret
data16
gs
xchg
cmp
xor
frstor
mov
mov
icebp
jmp
add
int3
ss
mov
fisttp
cmps
add
cmps
je
movs
push
imul
mov
inc
cmp
js
fisttp
es
sub
mov
int3
dec
scas
mov
add
sbb
sahf
xchg
pop
xchg
jne
sahf
ins
fdiv
ins
push
inc
mov
pop
js
pusha
mov
(bad)
xchg
jo
out
pop
mov
addr16
jmp
xor
pop
adc
cwde
mov
aad
ins
or
imul
fldcw
sbb
call
add
dec
test
fild
add
popf
xchg
sbb
add
int
mov
push
dec
(bad)
ins
sbb
stc
and
rcr
xor
dec
(bad)
fldenv
add
mov
and
out
stos
pop
in
push
inc
jno
mov
jp
dec
cmps
sti
nop
mov
cmp
retf
mov
and
adc
mov
jns
icebp
hlt
xlat
push
mov
push
js
cmps
xchg
imul
or
fs
xchg
ja
and
cmp
(bad)
out
pop
cmp
inc
lahf
das
xchg
jo
push
jns
push
pop
dec
dec
dec
xor
aaa
jge
cmp
aam
sub
mov
jnp
cmps
mov
jg
out
jmp
jbe
not
cmp
push
hlt
lds
mov
dec
and
sbb
add
push
add
loop
fdivr
or
add
push
daa
jne
ficom
adc
mov
fdivrp
cmps
sub
xor
in
loope
and
jmp
mov
inc
mov
std
pop
sbb
pop
add
test
mov
out
adc
addr16
out
pop
retf
jg
jle
das
and
loop
mov
pop
test
mov
pusha
(bad)
and
ins
es
int
pushf
add
pop
xor
or
ins
ja
and
sub
cmp
push
in
jae
cmps
fisub
inc
aad
jae
push
push
push
ret
mov
fs
mov
dec
mov
or
shr
jae
or
mov
mov
mov
ja
dec
inc
sub
jne
in
jns
and
sbb
or
add
mov
in
mov
arpl
hlt
sar
daa
jmp
nop
das
push
xchg
xchg
add
push
push
jmp
in
sub
mov
mov
mov
add
mov
adc
and
mov
sbb
xchg
out
movs
mov
mov
daa
repz
sbb
fild
ss
mov
mov
cmps
scas
push
mov
dec
out
int3
jns
jns
mov
loopne
jp
orps
mov
xor
imul
cmp
enter
jns
mov
add
pushf
or
pop
cs
test
movs
pop
mov
adc
jecxz
sbb
or
daa
popf
push
xchg
outs
mov
(bad)
sub
ja
mov
ds
or
mov
jp
ds
pushf
in
cmps
mov
jp
(bad)
out
jmp
pop
mov
sbb
inc
pushf
push
dec
aam
out
and
lock
cmps
mov
imul
retf
xchg
mov
stos
inc
stc
shr
xor
leave
in
shl
xchg
(bad)
pop
enter
adc
mov
pop
mov
js
enter
hlt
out
bound
fcom
cmc
or
hlt
jne
jp
cmps
fst
cmp
dec
jl
pop
pop
icebp
rcr
repz
shr
add
stos
ss
rol
dec
jmp
or
jo
inc
jmp
jg
mov
int3
pusha
push
out
pop
lds
cwde
loop
xlat
cs
std
(bad)
mov
lods
xchg
(bad)
movs
and
jmp
cmp
popa
icebp
repnz
pop
imul
mov
jle
movs
ret
hlt
mov
mov
pop
cwde
out
mov
cmp
jp
mov
and
sti
xor
in
in
in
(bad)
popf
bound
call
inc
pop
and
ds
dec
mov
repnz
push
push
pop
dec
or
push
data16
mov
in
or
sub
mov
mov
call
push
cmc
mov
add
cmps
arpl
jmp
mov
lds
sar
sti
loop
(bad)
inc
cld
data16
pop
call
aaa
inc
push
jnp
mov
lods
add
fmul
sbb
mov
pop
xchg
inc
cmps
adc
dec
sbb
stos
mov
pusha
retf
xchg
loopne
stc
mov
ss
sbb
ins
and
cmp
(bad)
loopne
jl
mov
(bad)
mov
(bad)
sub
jnp
enter
sbb
cmp
fnstcw
mov
or
das
dec
stc
push
psubw
xchg
je
xor
pushf
test
popa
xor
mov
icebp
das
sub
jmp
test
push
imul
aad
lahf
fmul
or
adc
sbb
jns
stos
add
repz
dec
jmp
add
jmp
or
push
(bad)
push
js
push
shr
popa
jns
mov
cld
jle
out
dec
out
ds
call
sub
cmps
xchg
cmps
fwait
sbb
push
mov
cmp
sub
inc
iret
inc
cmp
push
not
dec
and
lods
inc
sbb
cmp
mov
jl
loopne
sbb
sbb
mov
or
call
push
rcl
inc
xor
or
pop
inc
sbb
lock
mov
xlat
pop
not
mov
je
xchg
stc
jne
mov
adc
out
emms
test
xchg
and
push
dec
adc
push
shl
and
jnp
or
or
std
dec
mov
fsub
jl
xor
mov
sbb
mov
clc
cmp
adc
mov
adc
loopne
cli
bound
push
lock
pusha
mov
add
fdiv
sub
icebp
mov
xchg
cmp
mov
iret
xchg
loopne
movs
pop
int3
cmps
test
adc
movs
push
mov
adc
call
jecxz
ja
(bad)
jecxz
mov
pop
and
fistp
out
ret
pop
mov
push
shrd
scas
xor
push
cmp
pop
test
ins
fwait
cmps
xchg
(bad)
push
inc
aaa
inc
push
pop
mov
into
ror
lahf
xchg
daa
loop
retf
push
(bad)
sbb
js
popf
dec
or
dec
jecxz
(bad)
cmp
test
stos
aaa
and
xor
call
nop
adc
dec
retf
add
push
lock
inc
rcr
mov
(bad)
mov
inc
jo
leave
push
hlt
dec
and
inc
inc
cmp
fcmovne
sub
jmp
push
dec
jno
bound
mov
and
or
int3
inc
iret
xor
adc
dec
movs
fidiv
pop
sub
je
xchg
iret
rol
mov
test
inc
lds
sub
or
add
inc
in
jp
cmp
fadd
icebp
pop
movs
mov
aas
push
loope
jmp
mov
jae
(bad)
rcl
adc
cmps
jge
pop
and
(bad)
xor
sub
inc
add
pop
sub
aam
(bad)
or
test
xchg
and
jg
add
push
xchg
lods
inc
mov
enter
sub
fst
jge
xor
aas
bnd
and
retf
daa
rcr
loop
in
fwait
shl
mov
sub
shr
lea
repz
movs
jo
jl
icebp
outs
jmp
jmp
and
rcl
in
fmulp
pop
jle
fistp
push
int3
into
cmp
mov
hlt
(bad)
adc
je
and
and
jecxz
jb
hlt
test
adc
lods
ret
(bad)
icebp
loopne
cmp
popa
xchg
mov
fisttp
lods
jmp
es
loopne
sar
ret
in
cmp
mov
popa
add
xchg
lds
sub
cmp
stc
nop
in
nop
rcr
iret
fisubr
xchg
sub
xchg
in
jp
sbb
icebp
xor
push
xchg
cmp
out
sbb
xchg
and
in
pop
js
aam
dec
(bad)
jo
pop
mov
pop
scas
fdivr
add
mov
mov
lods
mov
ins
cmp
jp
add
push
sub
inc
add
ja
fild
pop
mov
jmp
retf
sbb
icebp
push
ret
mov
cmp
jno
loope
xchg
pusha
pusha
mov
dec
neg
mov
mul
rcr
fnstcw
out
add
pop
fadd
lahf
call
jecxz
adc
(bad)
mov
iret
push
bnd
and
mov
and
pop
and
xchg
push
mov
fisttp
cli
in
clc
xchg
jl
cld
mov
lods
js
clc
dec
out
xor
adc
mov
xchg
(bad)
or
ficomp
ds
ss
push
(bad)
pop
xchg
(bad)
clc
jge
pop
mov
pop
pop
cli
js
in
shl
out
cmc
retf
adc
cmp
bound
xlat
sbb
cli
loopne
mov
es
jmp
push
call
jno
adc
out
hlt
or
push
and
cmp
in
in
shr
data16
mov
sbb
cmps
and
(bad)
(bad)
loop
push
jb
fs
xchg
pop
xor
repnz
add
aaa
dec
pop
ret
cmps
jecxz
(bad)
addr16
mov
neg
int
mov
or
xchg
xor
push
setl
mov
mov
(bad)
jns
add
pop
pop
and
push
push
arpl
daa
in
xor
ins
out
mov
ficomp
xchg
xor
mov
xchg
adc
outs
xor
dec
sbb
push
gs
(bad)
jl
inc
shr
js
(bad)
mov
xor
mov
test
loopne
pop
call
and
jne
xor
xchg
or
jne
pop
test
(bad)
sbb
mov
or
in
gs
bound
sub
inc
icebp
jmp
mov
jp
imul
pop
ret
lds
cmp
sbb
in
sbb
ret
push
gs
dec
xchg
in
dec
addr16
or
adc
retf
mov
mov
dec
sbb
pop
div
into
pop
cmp
ret
pusha
jns
nop
xlat
jae
dec
sub
push
fdivrp
paddsb
das
aaa
add
ret
dec
push
shr
sub
push
ins
dec
or
add
iret
mov
mov
scas
cmp
xchg
les
jmp
push
push
xor
inc
push
jge
hlt
punpckhbw
or
rcl
xchg
add
fisubr
mov
mov
cli
push
cmp
fsubp
mov
mov
sbb
and
sar
sub
pop
jle
dec
bnd
rcr
test
fbstp
scas
test
enter
dec
pushf
call
test
xchg
ror
mov
popa
cwde
in
pop
mov
repz
test
jmp
jle
imul
add
xchg
shl
mov
out
outs
mov
sbb
cmp
adc
je
mov
sub
jnp
imul
(bad)
xlat
mov
xchg
nop
pop
ffree
and
jae
enter
clc
(bad)
cs
arpl
fsub
mov
in
jmp
leave
cld
rcl
scas
outs
and
fstp
lea
mov
or
push
jne
pop
mov
mov
aam
push
mov
outs
scas
or
jb
icebp
jae
cmps
icebp
je
std
cwde
ss
mov
cs
dec
ret
push
cdq
mov
adc
add
fsubr
push
push
aad
fdivr
stc
pusha
ficomp
jmp
enter
push
iret
pop
mov
aas
test
mov
mov
in
js
in
out
lds
sbb
inc
add
shr
in
inc
test
mov
and
mov
and
int
and
cmps
sub
lea
inc
stos
(bad)
call
add
adc
shl
mov
je
repz
fsubr
das
retf
sub
hlt
lahf
stc
ror
jo
icebp
cmp
and
xchg
inc
inc
ret
mov
out
adc
cmp
imul
(bad)
in
jecxz
sub
and
adc
sahf
fwait
in
lahf
jl
pushf
jge
jmp
dec
adc
push
cmp
and
outs
out
movs
data16
dec
mov
cmps
int3
mov
stos
scas
ror
inc
pop
jnp
inc
jae
inc
push
retf
shr
js
mov
cmp
mov
mov
ja
add
cmp
(bad)
dec
and
repnz
(bad)
lods
stos
outs
cmps
add
int3
fs
sbb
mov
jmp
loop
or
or
pushf
push
nop
xor
and
es
xchg
int
and
cli
mov
jp
inc
out
mov
leave
loop
outs
xchg
fdiv
lahf
(bad)
cwde
popf
lods
jae
pop
inc
retf
or
or
(bad)
push
dec
xchg
sbb
and
(bad)
xchg
(bad)
iret
lds
dec
jmp
adc
sub
sub
iret
or
xor
jecxz
push
jno
pop
sbb
aaa
out
inc
or
push
cmp
stc
(bad)
adc
icebp
daa
jp
retf
cwde
loop
xor
mov
mov
pop
neg
push
push
pop
pop
push
pop
rcr
jle
daa
outs
sbb
push
jge
jmp
gs
jmp
icebp
or
jl
call
jbe
aad
loop
and
push
rcr
jg
and
stos
inc
mov
bound
leave
retf
das
and
mov
inc
sar
push
cdq
mov
test
cmp
cmps
ret
xchg
ss
adc
xchg
out
call
outs
lock
mov
mov
push
cmp
aas
shl
cli
xchg
pop
bound
jg
scas
xor
call
stos
jg
dec
movs
add
xchg
into
push
clc
in
daa
and
inc
inc
jge
in
or
mov
es
sub
hlt
hlt
shr
mov
pusha
jl
push
rcl
push
push
pop
inc
jb
scas
mov
pop
lock
je
cld
es
movs
or
mov
repz
jb
sub
shr
fsub
push
cmp
rol
or
out
xchg
pop
lods
adc
rcl
jnp
loopne
mov
add
gs
push
xor
dec
sbb
(bad)
outs
not
mov
fstp
adc
pop
ret
mov
cmp
push
push
aas
cmp
cmp
inc
int
icebp
leave
pop
lea
ds
inc
add
jl
add
call
ret
xchg
inc
(bad)
rcl
push
add
and
das
mov
jg
inc
xchg
aaa
cld
sub
jmp
add
call
mov
push
mov
pop
jl
pop
mov
push
xor
push
retf
add
inc
ds
dec
pop
sub
mov
sbb
push
sahf
cmp
adc
dec
mov
cmp
pop
mov
in
cli
scas
push
adc
mov
xor
dec
inc
add
in
aas
js
out
cmp
in
inc
ins
mov
ins
jle
(bad)
imul
shld
fild
pushf
mov
je
or
ret
loop
loop
xchg
dec
adc
ret
test
cmp
push
mov
sar
push
add
or
aad
xchg
mov
xchg
js
adc
and
cmp
sbb
out
repz
mov
adc
fmul
test
add
add
vpcmpgtw
sub
call
xor
jnp
xchg
pop
call
ds
push
mov
das
(bad)
mov
fcomp
les
outs
mov
mov
cdq
inc
jecxz
pusha
ins
mov
call
lahf
sti
cmp
dec
adc
or
out
clc
mov
je
mov
or
fidiv
lahf
push
mov
shl
(bad)
push
bound
adc
(bad)
jg
je
lahf
or
push
js
(bad)
adc
out
and
(bad)
jge
(bad)
mov
enter
pop
test
daa
repz
movs
ja
jcxz
mov
mov
mov
outs
ja
fwait
leave
ret
fisttp
add
in
jmp
and
cmps
rcr
add
push
mov
iret
sub
fild
and
mov
fisub
out
out
lods
jle
icebp
dec
lahf
mov
adc
and
daa
jmp
or
gs
inc
add
jg
jb
push
fsubp
bound
loope
push
not
(bad)
mov
ins
stc
inc
fwait
inc
shr
dec
pop
arpl
shl
or
dec
mov
imul
xchg
xor
lock
pop
adc
push
mov
mov
mov
xor
shr
idiv
mov
xchg
jb
mov
or
outs
js
jnp
jmp
les
push
push
mov
mov
pusha
into
sbb
stos
outs
xor
icebp
pop
loop
jbe
mov
jbe
std
mov
cdq
push
(bad)
push
xchg
push
xor
jmp
inc
push
sbb
mov
adc
ror
mov
and
lods
cmp
in
mov
aad
xchg
xchg
aad
loope
daa
mov
or
mov
fst
repnz
dec
out
dec
sub
sti
scas
push
push
dec
fidivr
sbb
es
lahf
and
scas
or
mov
push
ja
sbb
scas
mov
or
inc
xlat
dec
in
ret
mov
sbb
std
xchg
add
cmps
mov
ud1
repnz
or
dec
dec
nop
iret
sbb
push
(bad)
mov
outs
out
das
dec
adc
jno
jnp
test
in
jbe
shl
clc
push
mov
push
inc
push
jmp
mov
fcomp
push
pop
inc
imul
push
into
pop
paddw
ret
aad
dec
xchg
hlt
leave
mov
rcr
and
movs
out
iret
ins
(bad)
retf
sub
popf
shl
mov
mov
fwait
mov
fsubr
sahf
mov
jecxz
test
mov
rol
and
and
cmc
xchg
adc
aaa
stos
sub
sbb
enter
(bad)
mov
cmp
push
dec
pop
xchg
(bad)
loop
cdq
push
inc
inc
nop
cmp
xchg
fisub
xchg
ins
push
xchg
adc
cmps
jmp
push
enter
sub
adc
pop
test
sub
scas
movs
out
repnz
pushf
mov
fwait
fwait
outs
xor
jl
jno
in
iret
xor
jno
or
cdq
repnz
not
mov
repnz
stos
cmps
test
lock
sbb
adc
xchg
jl
aaa
sbb
xchg
popa
ret
jle
pmaxub
out
or
and
out
repnz
xor
stos
sbb
jae
bound
nop
pop
fcomp
mov
inc
push
loope
mov
pop
sbb
inc
test
pop
inc
mov
push
and
retf
dec
push
mov
stc
push
or
sub
test
and
div
pusha
and
retf
cs
jo
in
or
and
cmp
call
cmp
and
sbb
jecxz
add
pop
jp
mov
xchg
cmps
jbe
les
mov
mov
idiv
add
mov
jo
aas
or
or
aam
mov
inc
fs
leave
cmp
clc
out
add
dec
and
clc
cmp
fidivr
fldenv
pusha
jb
fnclex
call
sub
(bad)
cmp
mov
icebp
enter
test
push
jo
scas
jmp
out
gs
nop
sar
jbe
iret
pop
cdq
and
(bad)
les
sbb
out
and
hlt
mov
push
jne
out
les
or
mov
pop
fsubr
loope
add
mov
popf
jge
fidiv
out
(bad)
mov
mov
les
out
loope
sti
outs
lock
add
pop
push
loopne
cmp
mov
dec
imul
inc
daa
or
or
cld
loop
(bad)
jnp
shl
jl
or
sub
xor
jge
inc
jmp
(bad)
push
fsub
fcmovu
mov
ins
in
mov
sub
imul
xchg
retf
or
scas
mov
into
and
mov
fwait
adc
pop
push
push
mov
fnstsw
jmp
add
dec
sbb
or
cmp
shr
cli
dec
mov
pop
sbb
push
retf
cld
cmps
out
cmp
inc
jns
push
call
sub
xchg
inc
xchg
push
or
cs
out
mov
pop
jne
xchg
mov
repz
dec
inc
cmc
mov
iret
int3
out
aam
in
repnz
in
dec
in
cs
sbb
aas
jmp
jmp
mov
in
popa
out
mov
mov
ficom
sub
(bad)
ret
adc
ds
sbb
fld
push
or
ja
pop
retf
movs
cmp
(bad)
ret
js
(bad)
sub
pop
imul
cwde
push
stc
pushf
scas
pop
ss
shl
add
into
mov
mov
loop
nop
sub
cli
das
cli
inc
jo
mov
popf
and
sbb
inc
popa
pop
scas
cmp
jecxz
dec
cmc
add
ins
push
jb
inc
pop
ds
int3
mov
jnp
call
mov
adc
es
pushf
aaa
call
loope
test
mov
inc
cld
call
jbe
jmp
dec
mov
in
ret
fld
mov
stos
push
imul
push
(bad)
and
mov
pusha
sbb
sahf
lods
(bad)
pushf
es
xchg
pop
bswap
stos
movs
pusha
ins
pushf
add
sti
daa
ds
in
add
es
retf
xchg
dec
add
and
(bad)
jle
dec
dec
cmp
int3
je
sub
cmps
lahf
out
test
and
xchg
ins
mov
retw
push
je
push
xor
push
push
ins
js
retf
push
push
sti
ret
loopne
jns
sub
repnz
mov
outs
das
mov
xchg
fninit
jle
and
sbb
sbb
movs
in
scas
jmp
into
es
lock
cmp
sub
mov
stos
or
outs
gs
jnp
shl
sub
scas
sbb
xor
xchg
mov
sub
fidiv
xchg
xchg
scas
adc
mov
inc
stos
cmp
repnz
xchg
mov
add
xchg
jnp
loope
mov
cdq
pop
nop
call
cmp
lds
push
bound
push
neg
push
es
cs
test
aad
ficom
mov
popa
cmp
pop
dec
or
dec
(bad)
out
push
pushf
add
mov
or
loop
rcl
jne
pop
pop
xchg
xchg
in
mov
neg
ins
inc
clc
stc
js
pop
fbstp
ror
inc
cld
cmc
inc
and
call
in
dec
mov
jle
pop
sbb
push
mov
cmc
mov
aaa
jmp
ds
jecxz
cwde
fcomp
cld
mov
fiadd
xchg
jmp
inc
inc
int3
cmps
adc
inc
lods
cs
pop
push
jb
les
push
inc
out
das
adc
adc
push
movs
mov
xor
test
loop
or
fisub
jp
stos
inc
das
test
jmp
ret
cmp
rol
fld
jne
movs
jg
adc
dec
add
sbb
imul
sbb
xchg
iret
idiv
xchg
sar
mov
fadd
popf
xor
mov
mov
inc
cmp
sar
popf
rcl
scas
out
pop
mov
lea
mov
pushf
xchg
nop
mov
or
pushf
ret
(bad)
std
ja
je
xor
xchg
iret
inc
inc
fs
dec
clc
pop
sbb
pushf
jmp
xchg
jns
lock
not
hlt
and
jmp
jns
xor
(bad)
cmp
dec
jns
(bad)
push
dec
enter
pop
jecxz
stc
inc
pushf
mov
jg
ja
pop
lods
cmp
cmp
outs
out
imul
sub
xor
inc
inc
cli
(bad)
fisub
fisttp
inc
cmp
or
emms
lods
mov
mov
int
aam
ret
push
psubusb
and
or
gs
cmp
jb
mov
in
out
inc
mov
mov
(bad)
push
and
test
sbb
lds
mov
imul
mov
imul
pop
dec
xchg
sbb
pop
mov
outs
cmp
sahf
lea
jmp
pop
pusha
xor
cdq
mov
push
xor
mov
test
(bad)
shr
out
imul
push
push
mov
cmp
loopne
mov
jo
mov
outs
test
(bad)
inc
jbe
mov
or
or
pop
jg
das
push
pop
inc
ja
mov
cmc
retf
sbb
inc
inc
dec
shl
jle
(bad)
push
mov
sub
pop
popf
mov
in
dec
pop
cmp
xchg
add
cld
rol
mov
das
cmp
sbb
cmc
sti
int3
or
ret
jns
pop
mov
mov
ret
add
pop
and
outs
adc
gs
(bad)
loop
pop
xchg
mov
add
stc
imul
inc
pop
shl
rol
fmul
sbb
rol
outs
push
iret
arpl
rol
sbb
inc
(bad)
cmp
xchg
sbb
stos
adc
jno
jbe
push
call
mov
inc
clc
add
cmp
pop
outs
and
xchg
jmp
push
jle
stos
shr
xchg
out
cwde
lea
ds
ror
mov
repnz
xor
dec
bound
fldenv
sub
dec
es
or
dec
sbb
stos
or
push
cmp
loop
(bad)
retf
cwde
scas
inc
int3
sar
out
pop
aaa
add
cmp
test
test
into
cmp
fdiv
dec
lahf
lods
retf
rol
jmp
or
adc
mov
and
mov
(bad)
ficom
and
pop
sub
pop
lock
(bad)
inc
aad
stc
mov
ret
mov
xor
jl
inc
test
inc
and
push
shr
mov
pop
jnp
bound
or
enter
in
or
std
pop
test
hlt
inc
jecxz
mov
mov
or
stos
(bad)
xchg
inc
push
fcmovnu
mov
cmps
push
push
sub
mov
add
sbb
sub
fbstp
sbb
aas
push
scas
jecxz
shr
arpl
stos
fld
pop
sbb
js
or
imul
std
out
push
mov
in
js
lea
ds
ins
xor
in
in
enter
lds
add
mov
mov
retf
int3
loop
cli
out
into
adc
adc
pop
cmp
add
repz
(bad)
out
int3
je
adc
mov
ins
sub
pop
mov
pop
stc
repz
jbe
jne
cld
lea
scas
mov
mov
mov
dec
fiadd
cmp
es
cmp
jns
jne
je
jge
inc
jecxz
int3
cmp
or
sbb
and
je
pop
lea
js
mov
(bad)
std
cmp
jl
popa
pop
dec
xchg
sbb
jmp
xor
cmc
rol
mov
or
mov
int
sub
sub
mov
add
pusha
je
dec
retf
dec
jae
xor
in
(bad)
int
push
jl
jecxz
aaa
add
sub
cmp
pop
sub
dec
arpl
cld
je
bound
jg
jns
add
xchg
xor
jl
iret
push
call
out
test
stc
mov
cmps
inc
data16
cmp
out
iret
dec
sbb
addr16
leave
jmp
cmp
mov
inc
(bad)
pop
pop
aad
push
mov
pushf
in
ret
adc
loop
repz
movs
cmp
shl
std
(bad)
pop
push
nop
dec
push
lods
movs
leave
mov
(bad)
test
shl
movs
cmp
rcl
les
pop
dec
clc
pop
sbb
sbb
outs
mov
loop
popf
push
leave
xor
xchg
sahf
add
xor
scas
imul
mov
sub
dec
mov
push
lock
jns
mov
cwde
sbb
mov
ror
pop
cmp
pop
pusha
fcos
mov
out
mov
inc
xor
scas
ins
popa
xor
jns
retf
int
cmp
xchg
push
jno
inc
nop
adc
mov
mov
mov
shl
or
push
cwde
xchg
push
xor
and
xchg
xchg
pop
mov
dec
xchg
out
test
mov
pop
pop
div
jns
and
xchg
ds
movs
dec
push
shl
jns
popf
(bad)
pop
dec
shr
sbb
shl
ret
neg
sbb
jle
mov
cmp
iret
push
les
mov
cmc
mov
imul
mov
jl
fsubr
test
jge
loop
ficom
or
and
lock
arpl
inc
shr
mov
mov
jbe
out
fs
mov
add
jb
fcomp
fidivr
rcl
mov
int
sub
shl
cwde
jl
repz
fs
aaa
mov
sahf
or
stos
nop
xor
sar
in
xchg
aas
jmp
push
xchg
loope
mov
loope
je
scas
pop
cmp
retf
add
aam
and
jnp
xor
push
call
punpckldq
add
loopne
and
jge
sub
inc
shl
aad
into
repz
sbb
in
push
in
fstp
mov
shl
push
mov
stc
push
cwde
push
add
sbb
jno
pop
sbb
stos
outs
jmp
int
xchg
mov
scas
out
mov
push
gs
xor
pop
dec
jno
fldcw
hlt
fsubr
retf
mov
push
jns
in
dec
int3
push
mov
inc
xor
(bad)
mov
loopne
outs
jns
(bad)
test
test
sbb
jae
inc
ret
test
mov
mov
mov
data16
xchg
not
push
cs
fidivr
ds
mov
or
dec
les
cld
xchg
add
lods
jbe
cwde
shl
adc
les
cmp
or
bound
or
dec
dec
xchg
adc
in
aas
pop
xor
ret
add
out
pop
fisubr
push
movs
das
sti
mov
sbb
xchg
rcl
pop
push
mov
pusha
in
inc
arpl
sub
out
xchg
xchg
lahf
cmp
dec
mov
mov
push
out
xor
push
inc
dec
cs
test
xor
sub
xor
mov
ss
jge
sub
scas
call
jmp
sub
push
pop
push
lds
mov
nop
fimul
lock
sub
je
popf
lea
mov
movs
mov
loopne
loop
arpl
mov
pusha
pushf
inc
ds
jmp
call
dec
cmp
jno
add
inc
aas
mov
pop
jg
gs
mov
pop
inc
mov
in
mov
or
repnz
cmp
pop
outs
test
pop
imul
inc
xor
in
jnp
dec
ja
or
inc
movs
je
js
pop
fsubr
nop
test
cmc
scas
loopne
push
sbb
(bad)
mov
mov
and
pop
ss
icebp
inc
push
dec
and
movs
jmp
aaa
add
mov
cmc
clc
add
push
es
mov
and
(bad)
loope
add
inc
jb
bound
enter
hlt
frstor
fcomp
(bad)
cli
(bad)
sub
call
and
(bad)
aad
test
imul
and
cmps
(bad)
pop
ins
int
cmp
adc
mov
mov
sahf
or
aas
out
mov
pop
retf
or
movs
int
or
adc
xchg
push
lods
mov
jb
loop
repz
dec
test
adc
movs
push
out
push
loopne
(bad)
icebp
jge
lahf
imul
or
cmp
mov
shl
add
add
mov
xchg
out
ins
mov
es
xchg
jecxz
or
arpl
xlat
adc
call
xchg
rol
(bad)
mov
aas
pop
ret
adc
ret
pop
pop
cmc
mov
fucomip
loope
stc
pop
jmp
sub
fcomp
popa
push
in
xor
mov
or
jp
inc
sbb
inc
mov
adc
jae
jae
(bad)
or
push
ins
jne
fwait
retf
xchg
test
sub
ins
push
add
sub
push
mov
pop
movs
inc
mov
nop
sahf
push
sub
sub
dec
in
pop
stos
push
bound
and
or
cmps
stos
popf
dec
jae
fwait
cmp
ins
int
xchg
xchg
xlat
dec
movs
div
fnstenv
(bad)
mov
imul
xchg
imul
or
sbb
dec
in
lds
sub
jg
jg
inc
std
sbb
jbe
fst
out
and
sbb
fsubr
mov
cli
dec
jae
mov
mov
std
cmc
jmp
fstp
imul
mov
out
sbb
xchg
in
jb
lods
and
jno
pop
les
jp
inc
inc
mov
xchg
pop
nop
inc
fstp
pop
and
pop
jmp
stc
push
pusha
lods
pop
movs
inc
pop
ja
imul
outs
fwait
cs
pop
and
mov
imul
fdiv
push
xor
imul
add
rcr
es
and
std
jo
cmps
ret
jne
cs
inc
cmp
cmp
call
pop
and
inc
jge
cmc
lds
aad
or
push
jmp
dec
xchg
lods
xchg
cmp
fstp
sbb
push
fcom
and
es
jb
xchg
mov
loopne
and
imul
mov
or
pop
int
inc
dec
mov
cmc
xchg
out
imul
shl
out
fst
lods
bnd
dec
or
sub
fcomp
cld
adc
pop
xchg
std
jns
jno
sbb
xlat
mov
sbb
cmp
mov
fcomi
daa
test
cmc
fidiv
out
in
cmp
pusha
adc
je
push
or
pop
outs
xor
mov
(bad)
movs
xor
mov
mov
fisttp
repnz
jl
pop
inc
inc
jmp
mov
mul
jns
sbb
repnz
or
(bad)
push
dec
into
repz
idiv
out
test
es
push
stos
pop
jge
dec
(bad)
ins
jo
cli
daa
mov
call
adc
mov
jnp
sbb
mov
mov
jg
mov
out
fidivr
cmp
in
mov
xchg
adc
in
iret
(bad)
lea
pop
es
out
xor
and
fisttp
ret
sbb
cmps
dec
lea
mov
ins
jg
nop
xor
jb
shl
bound
dec
stos
pop
or
es
pop
call
loopne
mov
hlt
sub
sub
mov
push
std
pop
fdiv
or
aam
mov
or
xor
push
mov
and
movs
leave
stos
pop
xchg
xchg
jo
(bad)
shl
xor
and
hlt
xor
inc
adc
daa
jl
add
adc
loopne
push
add
xor
lods
sub
sbb
xchg
cmp
or
add
pop
push
lea
cs
in
jge
jae
test
repnz
aam
sahf
xor
push
push
ds
mov
pop
int3
mov
daa
jo
leave
dec
or
clc
inc
addr16
jne
add
mov
leave
mov
dec
pop
mov
add
lods
add
(bad)
xlat
out
leave
das
push
stos
add
mov
xchg
call
inc
cmp
or
stos
rcl
push
adc
sbb
cli
lock
sub
idiv
lods
mov
xorps
sbb
inc
mov
imul
nop
dec
push
out
sbb
mov
imul
jae
xor
mov
fst
in
push
js
fcmovb
mov
lods
sub
lods
cmp
dec
rcl
scas
shr
lods
cmc
mov
xor
pop
jns
jne
dec
jnp
add
xor
jle
stos
fnstenv
cmp
into
(bad)
push
adc
out
lds
jg
mov
push
stc
std
push
fnstsw
mov
test
pop
xchg
gs
gs
push
mov
out
adc
inc
shl
add
into
jl
(bad)
std
inc
test
fs
jno
out
adc
sahf
rcr
jbe
and
dec
es
mov
dec
fwait
sar
mov
shl
add
push
push
mov
inc
les
inc
dec
lock
dec
jmp
mov
cmp
clc
mov
leave
aaa
xchg
jns
not
adc
aas
sti
fisub
(bad)
mov
in
push
ret
mov
les
push
xchg
mov
xchg
clc
dec
cld
inc
out
movs
stos
push
int
pop
(bad)
or
sub
aas
jmp
test
lods
stos
loop
jmp
jnp
sbb
fmul
inc
and
pushf
in
lds
rol
ret
xor
repz
mov
stos
mov
lods
das
ret
cmp
fsub
clc
pop
sub
(bad)
jnp
into
in
sbb
daa
into
mov
cmp
faddp
xchg
adc
pop
xor
inc
pop
push
lea
loope
sbb
dec
jns
hlt
mov
jecxz
jne
fild
mov
sbb
movs
sbb
je
cwde
mov
(bad)
jecxz
pop
pop
aad
sbb
lock
adc
mov
(bad)
ror
and
rcr
and
lds
mov
pop
sub
mov
aaa
cs
fist
xlat
or
je
ins
mov
dec
(bad)
int3
shl
fs
into
xchg
mov
sar
es
ficom
sbb
mov
(bad)
push
ror
add
or
sub
scas
es
cmps
lahf
adc
cmps
mov
dec
int
test
cmp
jnp
aaa
push
aaa
loopne
aas
jg
int
shl
es
rol
jge
arpl
nop
add
and
xchg
jne
sahf
mov
or
stc
or
stc
imul
scas
fs
dec
or
sbb
scas
clc
in
retf
dec
ins
clc
mov
xor
mov
leave
arpl
pop
mov
div
push
sbb
call
jo
mov
cs
adc
in
jmp
inc
outs
jno
inc
lods
sbb
jecxz
test
jecxz
lods
mov
inc
hlt
sub
or
sub
mov
mov
sti
gs
add
ficomp
and
out
mov
ror
mov
cmp
xor
scas
lahf
mul
(bad)
mov
mov
jmp
adc
inc
pop
(bad)
ret
inc
in
cs
cli
cmp
scas
pop
add
out
push
in
not
imul
and
mov
jecxz
sbb
iret
loope
sahf
int3
jns
out
pop
push
jmp
arpl
xchg
enter
pop
pushf
dec
ja
mov
xchg
sbb
xor
xor
jae
pop
mul
sub
into
add
test
fisubr
add
pop
retf
jo
(bad)
pop
lds
and
in
fs
cmc
pop
pop
mov
ja
call
add
sub
stos
dec
add
icebp
mov
in
call
adc
push
xchg
adc
xchg
int3
minps
enter
jle
loopne
js
mov
cli
pop
or
iret
pmulhw
and
xchg
iret
test
xor
adc
dec
loopne
pop
pushf
xchg
pop
and
addr16
cmp
mov
ret
cs
mov
xchg
sahf
cmps
bound
pop
pop
test
retf
mov
xchg
xchg
jmp
mov
std
xchg
add
fbstp
push
ror
daa
sbb
push
lods
bound
outs
loopne
pushf
mov
mov
sbb
aam
mov
xchg
bound
mov
inc
fmulp
ret
(bad)
sub
mov
xchg
fidiv
je
sbb
loope
xor
adc
jecxz
sub
out
jecxz
sbb
sar
cld
shr
cmps
smsw
dec
(bad)
neg
loop
stos
test
cmp
test
outs
pop
(bad)
popa
pusha
mov
fs
sbb
es
das
dec
inc
div
mov
pop
add
repz
inc
stc
cmp
iret
enter
outs
pop
pusha
jg
test
retf
sbb
int
mov
jno
pop
loope
(bad)
mov
scas
jns
(bad)
(bad)
fdiv
pop
push
fist
or
loopne
in
stos
adc
cmp
scas
addr16
adc
scas
sub
(bad)
mov
pop
sbb
je
inc
outs
xchg
push
sub
outs
popf
div
popa
fadd
xchg
jbe
fistp
inc
lods
xchg
hlt
outs
push
pop
data16
jno
into
jmp
sub
ins
mov
mov
jl
retf
shr
dec
xor
mov
dec
adc
pop
inc
test
pop
pusha
out
xor
es
add
mov
repz
mov
inc
test
and
fisubr
cmp
inc
retf
jmp
pop
or
pop
add
jecxz
(bad)
cli
cmp
int3
inc
cmp
xchg
(bad)
fisub
ins
loopne
loopne
std
test
xchg
int
or
movs
mov
mov
push
xor
add
add
sbb
enter
rcr
jmp
js
shr
jno
adc
mov
push
mov
adc
sbb
adc
add
data16
mov
jl
mov
test
mov
call
dec
shr
sub
adc
mov
xchg
cmp
and
int3
call
push
mov
repz
pop
mov
lds
scas
popf
out
or
pushf
cld
lods
mov
or
and
cmp
jo
pusha
ret
jno
jns
out
pop
(bad)
cmp
adc
iret
dec
dec
repnz
int3
pop
or
sub
mov
repnz
ret
mov
mov
sbb
sbb
adc
cwde
xor
imul
mov
mov
push
pop
in
xor
ja
test
iret
sar
scas
les
xor
mov
movs
add
imul
lds
stc
mov
push
test
adc
add
rcl
cmp
aam
into
push
femms
sub
add
push
aas
pop
add
xchg
loopne
fnstsw
jl
fld
aam
mov
movs
cmp
mov
bound
jg
push
inc
or
jp
and
and
xchg
sub
pop
sti
test
cmp
sbb
adc
fdiv
js
adc
mov
in
add
or
int
adc
dec
jmp
das
pop
out
mov
cdq
push
mov
scas
fistp
aam
mov
out
jge
cmps
pusha
mov
jno
sti
mov
pop
fld
add
sahf
mov
data16
call
xchg
dec
ret
pop
out
leave
or
shr
mov
hlt
mov
enter
test
test
loopne
addr16
mov
ds
and
test
mov
or
cmps
inc
loop
xor
aas
inc
enter
aas
pop
(bad)
cmps
gs
push
lea
fild
mov
and
fldcw
cmp
data16
scas
xor
sub
inc
shl
cmp
sbb
dec
ficomp
inc
fsubr
fcomi
jne
add
jecxz
jbe
into
enter
popf
push
mov
mov
mov
push
out
in
shl
pop
pop
cmp
cmp
loope
aaa
cmp
fucomp
and
xchg
pushf
mov
in
cwde
test
outs
mov
sti
add
jmp
mov
lods
jns
mov
rcl
xor
lahf
jle
lds
or
cld
loop
js
xchg
enter
inc
inc
xor
dec
mov
popf
or
loopne
mov
stos
(bad)
and
mov
pop
(bad)
out
sbb
(bad)
leave
jo
jbe
sbb
and
test
aas
or
cmp
inc
mov
push
xchg
loop
cmp
lods
aaa
call
mov
call
sahf
jg
add
in
ins
sar
push
cs
or
das
ret
add
jecxz
mov
and
mov
mov
inc
lods
sbb
xlat
push
push
ins
adc
pop
bound
in
xchg
fwait
imul
add
add
fxch
rol
daa
imul
js
jmp
mov
cs
push
sub
jmp
pop
jmp
cmp
sub
psubq
shr
int
mov
cmp
sub
inc
stc
and
mov
fsub
xchg
mov
xchg
es
sbb
(bad)
fcom
pushf
jmp
adc
cmp
sub
add
call
sbb
hlt
jmp
lods
push
pop
aaa
fbld
or
js
enter
dec
and
fstp
jnp
xchg
mov
mov
push
rol
sbb
sbb
ja
sbb
lea
fwait
jg
pop
arpl
push
mov
or
sub
sbb
sahf
cmp
sbb
das
inc
xor
or
test
dec
fidivr
xchg
rol
bound
push
int
dec
mov
icebp
test
xchg
xlat
sbb
ror
int
dec
lock
icebp
js
nop
icebp
iret
jg
cmp
push
shl
int3
sahf
pop
js
cmp
js
jae
mov
sub
clc
leave
inc
test
sub
and
jno
js
inc
jae
sub
mov
test
in
test
jo
out
pop
xchg
cwde
pop
aad
sub
jmp
add
adc
push
push
jnp
in
arpl
jo
in
mov
sti
jl
xor
popa
mov
cmp
jb
mov
mov
xor
jb
mov
sahf
sahf
sbb
add
mov
sub
or
inc
jmp
movs
test
add
xchg
lahf
mov
mov
sub
cmp
xor
inc
mov
cmps
inc
mov
mov
bound
imul
mov
dec
mov
jmp
mov
dec
cmp
fsubr
mov
rcr
daa
pop
lds
out
cmp
sub
push
in
lods
add
iret
movs
jmp
mov
add
ds
aas
or
rcr
sti
adc
sub
mov
cmp
mov
(bad)
add
std
pop
rol
addr16
(bad)
push
push
push
xor
lock
fistp
ror
icebp
ror
mov
pop
mov
pop
out
lahf
cmps
jne
aaa
push
pusha
xor
xchg
jne
popf
jns
ret
sub
sub
arpl
loope
mov
cli
cmp
adc
pop
add
and
xchg
pushf
adc
inc
shl
fwait
cld
daa
imul
sbb
sub
imul
jae
push
push
aam
xchg
mov
in
xor
cmc
stos
jecxz
test
outs
jnp
outs
dec
call
call
dec
test
adc
jg
call
xor
cmp
jo
lock
aad
nop
or
pusha
pusha
mov
mov
fidiv
adc
shl
icebp
aam
imul
push
loop
scas
mov
inc
mov
nop
ins
dec
in
mov
sbb
sbb
xchg
push
es
cmps
add
gs
push
(bad)
in
ins
adc
push
or
into
test
dec
inc
mov
sub
add
scas
in
mov
sbb
lods
sub
out
cmp
stos
adc
clc
mov
cs
adc
lods
jge
imul
(bad)
pop
pop
adc
or
add
inc
inc
cmp
sub
imul
scas
inc
call
push
xchg
mov
mov
jne
xchg
inc
sub
(bad)
in
sysexit
daa
cmp
adc
icebp
sbb
ins
xchg
test
sbb
ins
jl
mov
jg
ret
dec
mov
cld
out
jbe
mov
test
push
add
scas
pop
push
dec
adc
xchg
add
ret
fwait
xor
in
xor
push
std
sbb
repz
mov
neg
scas
pusha
retf
and
pop
cmps
sbb
popf
mov
retf
dec
xchg
xor
jmp
dec
scas
xchg
and
pop
xchg
mov
ins
bound
xchg
or
dec
lahf
inc
mov
cmc
rcr
mov
pop
and
ss
push
xchg
loope
ins
mov
aas
data16
addr16
push
cmps
pop
jl
sub
add
adc
push
push
cmps
cmps
push
jno
xchg
adc
push
cmpxchg
mov
sbb
movs
cmp
sbb
out
xor
push
data16
imul
jmp
mov
sub
and
mov
mov
mov
mov
jle
mov
cmp
jmp
inc
lods
pop
lods
lods
add
cs
mov
mov
mov
mov
arpl
fmul
bound
jg
mov
out
sbb
addr16
dec
cs
mov
int
fs
jo
aaa
or
into
js
push
xchg
sub
adc
xchg
jae
add
jae
ja
dec
pusha
out
(bad)
xchg
(bad)
leave
or
stos
hlt
data16
mov
fdiv
mov
mov
mov
jp
push
or
es
dec
jb
ins
jbe
jmp
out
pop
outs
push
push
add
cli
sti
int3
mov
es
mov
hlt
out
jb
fldcw
out
add
hlt
lock
fild
pop
jg
xchg
add
dec
push
sbb
adc
push
fwait
(bad)
scas
inc
or
dec
daa
es
add
mov
test
ret
jbe
mov
ins
or
push
daa
enter
mov
mov
iret
mov
push
xchg
jl
xchg
jnp
shl
addr16
daa
ja
rcl
fwait
xchg
mov
fldenv
add
cmp
test
xchg
fistp
outs
dec
pop
lea
cld
jp
aad
pop
mov
jecxz
mov
push
inc
arpl
das
cmps
mov
xchg
or
or
sbb
pop
(bad)
daa
icebp
push
or
movs
pop
clc
pop
icebp
std
das
in
mov
sub
cdq
xchg
xlat
scas
mov
enter
pop
pop
(bad)
pop
cmp
lea
jne
xchg
mov
inc
or
mov
xchg
push
add
xchg
pushf
retf
inc
fdiv
and
popa
ds
retf
sbb
int3
sub
xchg
jmp
(bad)
fadd
int
dec
idiv
cmp
push
fisubr
loopne
push
xor
inc
adc
test
mov
iret
pop
test
jnp
(bad)
popa
xor
pop
fdiv
scas
repz
daa
sub
pusha
add
test
push
mov
adc
(bad)
mov
add
jmp
adc
cs
icebp
in
out
inc
pop
test
arpl
test
cmp
mov
scas
jb
inc
in
sub
aam
pop
dec
dec
push
ds
jbe
sbb
mov
xchg
iret
push
mov
pop
hlt
push
rcr
ror
aas
push
shl
push
sbb
pop
gs
xor
lods
in
xchg
mov
mov
push
imul
cmp
jne
mov
mov
push
jmp
dec
cmps
push
cmp
enter
dec
fstp
adc
sub
and
cdq
fwait
inc
pop
dec
loopne
add
adc
jp
ficomp
scas
mov
int3
addr16
lds
les
jmp
pop
fmul
and
push
mov
xor
cmp
cs
pop
push
xor
int3
inc
jg
mov
adc
adc
cwde
pop
cwde
pop
pop
sbb
sub
sbb
xchg
xor
jo
mov
retf
dec
data16
fisub
inc
pop
ret
push
inc
and
sahf
push
dec
sbb
xor
and
test
pop
pop
(bad)
sar
sbb
out
scas
mov
stos
adc
mov
jne
iret
jl
or
loopne
sbb
jmp
arpl
jmp
repnz
mov
mov
fisttp
xchg
clc
mov
sub
ja
jbe
adc
sub
ror
xor
inc
sbb
xor
int
jp
jae
fld
cmps
out
loopne
cmps
jg
test
in
sub
mov
mov
popa
inc
scas
leave
xor
xor
sbb
mov
scas
inc
xor
sub
outs
jge
cli
scas
xor
cmp
retf
stos
data16
std
pop
jb
sub
push
dec
mov
jno
(bad)
in
mov
(bad)
loope
cmp
lods
mov
or
addr16
repnz
aam
or
mov
(bad)
out
ja
add
jg
and
inc
or
push
hlt
xchg
cdq
imul
push
xchg
retf
popf
int3
xor
sti
mov
mov
mov
outs
movs
push
addr16
xchg
sub
test
dec
jmp
loope
int
fucom
ins
push
out
push
not
lods
out
cwde
iret
push
add
test
arpl
jo
fstp
push
push
out
test
lea
sahf
xchg
jne
fisttp
(bad)
in
ror
add
mov
xor
xchg
movs
cmc
lahf
xor
xchg
dec
test
idiv
mov
dec
cld
or
add
fsubr
cmp
jae
cdq
imul
add
ret
idiv
jmp
cmc
paddb
push
push
pop
and
call
add
or
int
inc
out
push
pop
adc
sub
and
cwde
fs
icebp
rcr
loop
stc
test
ja
xchg
popa
(bad)
repnz
int
int3
jmp
xchg
cwde
sub
or
outs
jns
mov
mov
je
sbb
popf
xor
cmp
pop
hlt
pop
imul
mov
sbb
push
popa
cmps
xchg
outs
or
jne
inc
adc
pop
add
sar
jmp
sar
cmp
(bad)
arpl
out
cmps
cmp
outs
movs
add
test
and
cmp
gs
stos
int
enter
and
add
or
and
cmp
(bad)
and
mov
arpl
dec
xor
push
sbb
fdivr
bound
popa
dec
int
addr16
xor
test
pop
outs
inc
and
rcr
xor
mov
xchg
mov
cli
jno
not
les
lods
imul
mov
sub
jecxz
ret
mov
add
xchg
nop
outs
mov
jns
mov
mov
jns
fstp
aaa
jge
xor
inc
pop
dec
sbb
data16
stc
mov
push
retf
lods
pop
mov
test
pop
retf
into
adc
aam
sbb
pusha
dec
popf
ss
cmp
xchg
add
cmp
pop
jne
sahf
scas
shl
mov
scas
lods
sbb
pusha
mov
test
aas
outs
and
pop
loopne
call
(bad)
and
or
cwde
lahf
scas
clc
and
mov
xchg
or
aad
ins
push
int
dec
cld
cdq
loope
into
pop
jp
dec
pop
lods
daa
pop
xchg
dec
out
lods
fdiv
pop
mov
addr16
leave
out
and
pop
movs
fmul
xchg
lods
movs
fild
mov
push
int
sti
lahf
dec
xlat
mov
mov
mov
jbe
movs
fiadd
retf
pop
mov
sbb
jbe
gs
cmp
inc
jb
dec
daa
cld
nop
fadd
add
pop
mov
shl
xor
ds
push
push
dec
repz
xor
mov
push
repnz
dec
iret
daa
xchg
hlt
repnz
pop
cdq
ret
es
lahf
imul
jne
xor
adc
push
ror
mov
cld
cmc
fsub
mov
push
sbb
mov
imul
xchg
pop
and
mov
nop
add
xor
and
jle
test
sub
xor
or
iret
daa
stos
or
dec
push
out
dec
dec
push
in
dec
(bad)
push
sbb
not
popf
std
adc
mov
sub
and
push
ror
push
neg
ror
mov
(bad)
fucomip
daa
adc
mov
jo
aas
dec
push
cmps
add
arpl
xchg
jae
sbb
dec
sub
aam
enter
sub
stc
cmp
enter
and
dec
sbb
pop
jns
dec
fidivr
pop
je
sbb
sub
and
movs
gs
xchg
or
xor
jb
mov
jecxz
ins
push
out
pop
movs
hlt
mov
jb
pop
loop
xlat
xchg
push
sbb
js
xor
cs
and
fcomp
icebp
mov
sbb
lock
push
dec
xchg
mov
out
sbb
gs
hlt
cmp
aas
sub
retf
fistp
or
inc
pop
jne
cwde
int
jle
mov
add
in
adc
cmc
stos
ins
enter
push
ins
xor
fld
aam
daa
or
aas
mov
or
ins
ret
jne
cwde
popf
xchg
sub
sub
add
cld
pop
das
idiv
add
mov
push
or
inc
cmc
dec
cmp
xor
mov
call
outs
push
(bad)
ins
and
adc
mov
icebp
pop
dec
imul
add
cmp
test
pop
mov
jnp
push
in
mov
sub
call
dec
add
in
push
outs
in
js
jno
adc
inc
sahf
(bad)
vpgatherqq
int3
inc
push
das
cmp
cmp
test
ds
jg
rcl
or
push
das
sub
out
inc
sub
mov
xchg
add
cmp
or
outs
jae
test
cmps
je
fucomp
mul
mov
out
jmp
push
out
call
rol
pop
scas
push
adc
sar
repz
fsubr
sbb
push
sbb
shrd
mov
dec
test
std
jp
test
stc
scas
outs
xchg
loope
mov
sub
shl
jle
xchg
test
mov
(bad)
cmc
xor
sbb
jno
xchg
cmp
lods
add
lods
dec
push
lds
dec
test
inc
clc
jle
inc
add
lock
ret
movs
or
das
push
and
and
int
mov
jp
stos
mov
mov
mov
(bad)
sbb
sub
mov
dec
mov
jl
xor
jecxz
add
pop
inc
mov
rol
imul
mov
xor
dec
push
dec
push
push
adc
mov
mov
fisubr
aaa
rol
icebp
adc
mov
movs
mov
mov
cmp
inc
cli
sahf
push
xor
icebp
pusha
push
jno
out
clc
retf
sar
jp
cwde
mov
scas
mov
mov
and
shl
test
enter
jns
mov
cmps
ret
(bad)
or
fs
adc
push
addr16
out
xlat
scas
sub
jle
jl
in
test
add
aam
sub
push
xchg
scas
xchg
and
les
ins
(bad)
fs
dec
xor
call
inc
ror
leave
push
enter
ror
jmp
repz
sbb
or
pop
push
jecxz
loopne
xchg
jno
fst
jle
cdq
dec
or
cli
pop
scas
mov
cmps
jmp
or
call
test
lods
add
sub
ret
ins
jno
gs
jb
ret
into
enter
ins
int
shl
fst
and
xchg
mov
sbb
je
inc
cwde
ins
jbe
test
ds
paddb
dec
shl
inc
xchg
popf
cli
call
(bad)
jg
sub
jge
jp
jp
mov
test
test
les
jle
cmps
mov
scas
loop
xor
lods
cs
int3
shr
pop
mov
rcl
push
scas
fwait
pop
es
fs
clc
sbb
pop
rol
push
mov
mov
cmp
inc
pop
xchg
in
cmps
mov
fld
push
mov
xchg
add
ret
push
inc
sbb
inc
fld
mov
jmp
fsubr
push
pushf
add
lods
dec
cmp
pop
data16
mov
jg
rol
mov
cdq
sbb
std
out
pop
pusha
mov
pop
std
daa
fisubr
ds
fcom
mov
ror
dec
imul
cs
xchg
mov
dec
jb
adc
cdq
adc
aas
icebp
cmp
das
cmp
and
sub
push
scas
and
movs
mov
mov
popf
arpl
jns
hlt
or
icebp
shr
ret
in
push
and
pop
push
retf
push
mov
xchg
pop
push
add
sbb
out
bnd
inc
mov
imul
(bad)
cld
in
in
pop
in
mov
push
push
mov
fadd
mov
and
js
mov
out
das
out
stos
scas
dec
ins
or
ja
jg
or
fnstsw
sub
pop
and
push
sub
ds
push
sbb
cmp
(bad)
paddsb
loope
inc
or
sti
sbb
mov
adc
or
lock
loop
bound
xchg
mov
pop
and
mov
cmp
jecxz
in
push
or
std
dec
xchg
inc
stos
sti
mov
(bad)
sbb
mov
in
arpl
cmp
mov
retf
movs
test
or
pop
js
aas
dec
icebp
pop
jge
ins
add
mov
ss
nop
push
mov
push
mov
scas
inc
pop
je
mov
cmp
js
fsub
fwait
(bad)
iret
inc
fstp
inc
aas
cdq
sbb
ja
ss
out
jge
cmp
gs
mov
movs
xor
and
movs
mov
vmwrite
jo
and
adc
fbld
dec
pop
pop
loopne
(bad)
xor
dec
daa
xchg
add
push
add
fcomip
lahf
enter
aas
cdq
div
fld
in
ins
ins
add
neg
add
mov
jne
lds
sub
mov
add
repnz
jo
xor
pushf
iret
sbb
(bad)
out
jb
sub
dec
repz
cli
cmp
inc
xchg
dec
inc
repz
xchg
daa
dec
adc
jne
clc
jo
fstp
mov
pop
jns
or
imul
test
fxam
mov
push
dec
inc
adc
mov
js
outs
pop
loop
push
inc
dec
add
rcr
xchg
cs
call
xor
push
xor
push
iret
sahf
adc
loop
jge
adc
jle
push
mov
mov
stc
adc
hlt
push
mov
push
aad
cmp
in
ins
ret
mov
cmps
and
into
jl
dec
pop
ja
jnp
(bad)
push
aas
or
and
xchg
or
or
jmp
mov
repz
clc
popf
popa
enter
cmp
cmp
std
adc
xchg
jl
xchg
adc
or
pop
in
popf
dec
test
or
sbb
lahf
dec
stos
cmc
sub
fsubrp
das
mov
adc
test
clc
mov
daa
fsubr
rcl
and
mov
cdq
das
adc
or
(bad)
jge
ret
addr16
gs
loop
(bad)
out
out
jae
push
push
xchg
mov
in
jmp
inc
jge
mov
mov
div
jne
pop
aad
std
call
leave
sub
outs
call
fnstenv
mov
jmp
dec
enter
je
pop
xor
sub
push
shl
bound
push
add
movs
jl
fcom
mov
(bad)
sbb
cmp
dec
jmp
sub
xchg
sub
jne
rcr
es
ss
rol
mov
xchg
add
jge
pop
fiadd
cmp
push
out
mov
aad
sbb
jecxz
imul
iret
xchg
out
pop
push
and
lods
push
xlat
bound
add
call
xchg
pop
jp
jo
leave
out
(bad)
sub
add
(bad)
pop
popf
add
xchg
std
push
adc
fs
xchg
ret
pop
adc
int
add
push
or
mov
sbb
loope
pop
push
fwait
add
pop
ja
sbb
mov
push
dec
sub
mov
les
add
loopne
cmp
add
cwde
int3
jecxz
cmps
xor
popf
in
inc
sti
mov
cmp
xchg
sub
xchg
xchg
or
and
leave
rol
retf
ret
sbb
je
mov
adc
sub
xor
clc
sub
inc
test
sti
sahf
mov
jbe
pop
adc
repnz
xchg
(bad)
jno
jo
jge
stos
ja
fstp
push
loopne
mov
dec
add
nop
je
inc
push
cmp
mov
xchg
xor
or
dec
clc
mov
mov
jge
(bad)
jmp
and
adc
imul
sub
mov
pop
psrad
nop
jo
sub
aaa
push
sub
fwait
mov
in
in
sub
push
mov
hlt
call
and
lea
jle
mov
fwait
push
mov
fsub
cld
int3
xchg
cmp
hlt
push
repz
hlt
fs
mov
mov
xlat
mov
addr16
cmp
es
add
add
mov
and
dec
arpl
mov
dec
arpl
inc
cmc
jns
pop
push
imul
push
popa
int3
rcr
mov
jno
inc
jb
mov
xchg
inc
jecxz
or
add
fs
int3
add
dec
imul
out
cmp
xor
gs
jp
call
jae
dec
nop
imul
jg
or
or
cmps
push
xor
lods
fcomp
sbb
mov
xchg
and
cmc
xchg
clc
push
sbb
dec
(bad)
lahf
jle
call
cmc
cmp
cmp
fs
dec
shl
dec
loop
mov
xor
mov
dec
mov
sbb
mov
inc
imul
call
sub
dec
pop
push
imul
dec
xor
shl
lea
scas
sub
(bad)
repnz
into
mov
pusha
push
mov
llwpcb
inc
call
pusha
xor
mov
aam
les
sbb
mov
pop
sbb
pop
xor
shl
xchg
cmp
retf
jmp
js
loope
jb
sub
ins
mov
in
mov
mov
sub
pop
outs
inc
dec
xchg
mov
loopne
(bad)
lea
push
xor
out
je
out
fwait
adc
and
lods
pop
add
fs
sahf
add
ins
neg
xor
cmp
lods
dec
lods
fist
daa
push
call
rcl
cmp
lahf
jae
push
out
sub
xor
das
out
ins
xchg
mov
outs
adc
fstp
xchg
movs
fist
stos
or
lods
sbb
pop
int
fwait
rcr
dec
add
push
and
adc
push
repz
mov
xor
out
cwde
jbe
ror
jne
dec
or
inc
dec
jb
jo
jb
mov
test
push
into
mov
clc
push
cld
outs
jecxz
pop
xchg
xchg
push
lea
ss
cmps
pop
mov
imul
and
sbb
cmp
push
dec
and
push
std
mov
cmc
ins
stc
loope
je
fcom
fs
(bad)
push
fs
call
mov
int3
sbb
xchg
cli
movs
pop
cld
sbb
out
sti
dec
outs
mov
js
das
pop
adc
or
test
sar
je
sbb
or
jmp
xchg
(bad)
xchg
mov
scas
aad
test
jmp
stc
sub
stos
sub
add
inc
mov
mov
cmp
jecxz
push
retf
ds
xchg
(bad)
(bad)
push
push
adc
dec
cmp
outs
or
in
fs
les
cs
rcr
jns
adc
or
and
outs
aam
int3
into
jbe
xchg
jbe
sti
pop
fld
mov
sbb
scas
ds
sbb
mov
test
icebp
mov
(bad)
xchg
dec
int
lods
dec
xchg
lods
cmps
xchg
repnz
mov
repnz
pop
fwait
ins
call
dec
mov
jmp
iret
jmp
retf
fist
push
lea
jg
cmps
sbb
push
test
inc
mov
pop
sub
jp
xor
or
xchg
push
add
mov
lods
adc
mov
mov
js
pop
fsubr
icebp
add
mov
cld
mov
add
cmp
pop
lock
pop
mov
std
out
mov
je
inc
enter
scas
push
(bad)
iret
pop
mov
shl
repnz
(bad)
inc
call
imul
jae
jne
in
cmp
or
das
lock
mov
cmps
daa
jp
sahf
mov
pop
jnp
adc
and
pop
push
pop
idiv
mov
pop
mov
fwait
repz
fldenv
adc
pop
out
mov
add
in
mov
test
mov
pop
jmp
iret
pop
lahf
jne
push
data16
fcmovbe
fisttp
ins
jl
sbb
pop
mov
cs
out
lods
push
xlat
ret
xlat
sub
pop
ret
sub
cmps
cmp
gs
jp
sub
sti
add
ds
jl
inc
and
and
retf
pop
loopne
fcomp
mov
push
int3
inc
(bad)
pop
pop
jnp
cmp
mov
push
xor
cmp
std
dec
test
sbb
in
mov
dec
test
push
enter
loop
les
and
rep
dec
or
fsubrp
(bad)
es
scas
inc
sar
repz
mov
pop
in
lea
inc
inc
sti
std
sub
add
leave
jge
call
mov
mov
pop
mov
or
inc
dec
les
pop
outs
ins
mov
ja
stc
cwde
inc
xor
int
lock
lock
sub
sbb
and
retf
loopne
cld
data16
mov
mov
dec
jo
add
mov
cmp
shr
call
mov
adc
imul
or
mov
enter
xor
ss
adc
loopne
xor
popf
pop
adc
fild
push
push
sub
in
scas
loop
cmp
mov
mov
div
stos
sbb
xor
stos
inc
scas
mov
jbe
jle
test
ins
lock
push
frstor
add
nop
mov
(bad)
mov
and
cmps
out
(bad)
ja
adc
mov
ret
mov
inc
sub
ret
sti
mov
or
pop
ret
sub
popa
mov
fild
jae
pop
mov
mov
dec
dec
dec
inc
mov
adc
push
sub
fdivp
or
loop
xchg
pop
ss
std
icebp
mov
out
fisub
pop
int3
outs
mov
aas
inc
arpl
fldcw
xor
cmc
jl
ret
in
cmps
popf
sbb
pop
xchg
and
dec
xchg
push
jl
mov
sbb
ror
or
sbb
mov
imul
not
in
inc
addr16
dec
stos
dec
xor
add
shl
jnp
leave
pop
cmps
or
mov
and
fwait
std
sbb
adc
xor
cmp
loope
arpl
in
mul
inc
mov
loope
out
shr
jl
sub
test
dec
mov
adc
popf
and
cmp
lods
cmps
pushw
mov
push
and
cmp
jmp
loop
dec
xchg
mov
fcmovnu
inc
lea
test
mov
popf
mov
jbe
je
sub
jp
push
in
add
mov
les
inc
mov
mov
or
loope
addr16
inc
pop
dec
dec
mov
or
sahf
in
pop
mov
mov
retf
pop
mov
jnp
cdq
sbb
xor
fwait
out
ret
call
gs
push
or
sub
repz
jmp
(bad)
(bad)
lds
(bad)
call
cmps
cwde
cwde
cmp
mov
jb
je
mov
dec
xor
push
jae
mul
pop
cmps
idiv
stc
inc
jmp
into
dec
adc
mov
mov
pushf
jmp
jo
pop
sub
xor
sub
xchg
cmps
and
xchg
push
call
(bad)
aas
(bad)
nop
jns
call
das
lds
lea
jbe
ficomp
(bad)
pop
clc
ja
repz
frstor
jb
sti
jns
call
or
(bad)
into
es
and
jl
sbb
mov
push
mov
xchg
mov
mov
jp
mov
fmul
in
cmp
test
push
loope
sar
mov
ja
dec
mov
loop
clc
push
fwait
add
mov
cs
xlat
xchg
dec
or
jle
inc
xchg
jnp
cmp
paddd
sahf
movs
and
enter
push
xchg
xor
xchg
sub
shr
pop
out
sub
cmp
sub
sahf
fcomp
leave
cmps
movs
adc
ja
jg
mov
popf
cmp
and
sub
mov
sub
(bad)
pop
aas
addr16
push
push
int
out
jecxz
inc
xor
repnz
and
sub
cmp
and
ja
sub
jmp
cmp
adc
xchg
mov
daa
xor
or
fidivr
push
nop
xrelease
dec
retf
mov
call
adc
sbb
ja
inc
mov
inc
in
js
jno
mov
loope
jbe
mov
cmp
add
imul
pop
lds
add
leave
ror
mov
es
cld
lods
xlat
add
fistp
pop
aaa
sub
fadd
jae
cdq
out
outs
or
int3
mov
pop
not
fnstenv
aam
xchg
loopne
or
out
scas
pop
push
fbld
movs
sub
lods
lahf
sbb
dec
adc
push
jmp
add
dec
mov
ror
pop
xchg
cmp
push
ret
movs
jb
push
or
mov
jo
cmp
and
outs
out
ror
jp
in
inc
fimul
scas
jns
and
push
pop
sub
(bad)
rcl
push
mov
mov
xor
sahf
push
shr
into
push
shl
int
sti
sbb
sar
enter
out
xor
xor
mov
adc
repz
repz
fsub
daa
sbb
inc
or
adc
fcomp
mov
pop
jnp
xchg
xchg
adc
pop
fidiv
sar
(bad)
inc
ins
out
test
das
xchg
repz
cli
mov
stos
and
mov
icebp
mov
rcr
imul
fistp
call
stos
mov
mov
jo
inc
mov
adc
(bad)
fcmovne
sar
std
adc
dec
sahf
sub
movs
or
leave
push
cmps
arpl
addr16
jno
push
adc
xchg
jae
outs
fptan
mov
repz
push
mov
and
test
lea
sub
mov
xchg
cmp
std
out
inc
repz
cmp
frstor
ret
pop
sub
xchg
stc
ficom
pusha
in
ds
pop
ja
sub
push
sub
jne
push
call
mov
pop
enter
sbb
inc
retf
retf
daa
imul
xchg
loopne
sbb
adc
or
(bad)
mov
xchg
fmul
jge
mov
mov
loop
jns
cmp
out
(bad)
mov
cmps
cmp
(bad)
dec
repnz
mov
les
jecxz
xchg
cmp
out
cmp
pop
pop
ret
add
adc
test
pop
fldenv
mov
rcr
sbb
mov
ins
inc
shl
xchg
btc
nop
sahf
sub
cmp
jge
test
repz
loope
adc
push
pop
pusha
xchg
ins
or
or
sahf
rol
mov
fnstenv
mov
mov
mov
jb
sbb
movs
out
(bad)
call
sti
inc
xor
push
(bad)
jecxz
xchg
aaa
xor
loop
add
mov
inc
call
add
leave
sub
ins
xchg
shl
fild
in
sahf
cli
and
rcl
leave
popf
sbb
leave
jbe
arpl
retf
add
es
mov
pop
loopne
mov
sbb
mov
pop
fisttp
cs
fist
adc
or
inc
fcomp
cmp
or
out
fldenv
mul
sub
mov
jno
add
add
sub
xor
xchg
aaa
(bad)
or
add
retf
fstp
rcr
pop
rcl
dec
add
jmp
aaa
push
rol
ds
scas
mov
inc
jb
std
mov
call
es
scas
mov
adc
icebp
out
add
and
and
in
sub
xchg
sbb
xor
mov
outs
or
(bad)
and
test
fdivr
mov
adc
sbb
call
(bad)
out
nop
iret
popa
xchg
or
dec
push
pushf
aam
jle
aad
push
(bad)
sbb
inc
fidiv
adc
push
xlat
jmp
adc
adc
not
xchg
mul
xor
adc
mov
(bad)
push
movs
inc
and
outs
rcr
ins
mov
aaa
sub
mov
jns
shr
pop
es
mov
iret
inc
mov
popa
mov
sbb
mov
mov
popf
adc
sbb
call
aad
pop
sub
dec
push
and
scas
je
mov
es
sub
push
sub
mov
dec
sbb
in
sub
data16
pop
cmc
int3
cli
icebp
pop
stc
push
push
push
dec
xor
mov
ja
bound
mov
jns
cdq
dec
mov
fbld
mov
sbb
jb
push
mov
(bad)
cmp
inc
and
cmp
or
ret
sahf
and
jecxz
ret
jle
adc
cwde
hlt
jecxz
inc
adc
outs
fisubr
adc
nop
xchg
cmp
pop
fnstcw
movs
call
xor
pop
neg
or
pop
out
cmp
ds
xor
daa
push
adc
pop
retf
cmc
pop
or
mov
xor
test
imul
pop
jnp
add
rol
jge
jae
loope
mov
bound
test
pop
pop
test
clc
cmc
ror
sbb
sub
call
adc
pop
in
inc
ds
pop
pop
jbe
imul
push
imul
enter
push
je
inc
cmps
push
push
aam
mov
mov
adc
mov
push
fsub
cdq
sbb
or
aam
jo
jo
(bad)
pushf
push
inc
pop
dec
jp
popa
mov
mov
push
fdiv
inc
pop
add
jns
adc
bound
sbb
ror
add
mov
bound
xor
(bad)
push
mov
sub
xchg
or
fucom
mov
mov
or
mov
lahf
hlt
nop
dec
ffree
lds
int3
(bad)
sub
and
aaa
push
out
jno
mov
mov
sbb
pop
les
les
dec
push
test
or
iret
mov
fld
les
jl
sbb
mov
loopne
icebp
jne
outs
push
push
xor
mov
pop
cwde
sbb
sbb
and
push
dec
jae
pusha
mov
int3
mov
repnz
jle
jns
fwait
ins
arpl
xchg
rol
out
retf
pop
cmp
mov
xor
mov
push
cmps
out
in
sub
mov
xchg
sub
inc
add
loopne
mov
cmps
imul
lds
mov
(bad)
hlt
sbb
cmp
cmp
mov
sbb
popa
cld
mov
mov
sbb
pop
adc
hlt
adc
pop
jmp
nop
mov
cli
je
adc
stos
cwde
leave
jb
or
call
pop
popa
sahf
sub
ds
inc
dec
stos
sbb
sbb
mov
jecxz
add
dec
std
imul
mov
repz
mov
aad
in
shr
jmp
pop
xor
mov
les
xor
pop
outs
(bad)
jp
rcr
add
xor
(bad)
ror
out
rcr
push
aas
and
pop
test
inc
in
push
shr
inc
jbe
loope
adc
push
add
and
daa
adc
(bad)
in
cmp
mov
scas
xchg
(bad)
adc
push
sbb
test
shr
xchg
inc
inc
xor
div
fmul
mov
ins
(bad)
cmp
ret
xor
adc
iret
repz
mov
xor
hlt
or
inc
dec
xor
mov
sar
mov
scas
mov
dec
pop
sbb
jmp
int3
mov
gs
ret
and
fcom
or
cmc
rcr
ret
in
(bad)
fmul
dec
daa
scas
sub
sub
ja
out
add
loop
imul
(bad)
call
out
bound
ret
push
in
inc
out
dec
jnp
sub
push
jecxz
jo
pop
outs
es
dec
mov
jno
test
(bad)
retf
sbb
out
xchg
mov
mov
pop
retf
pop
push
fst
fstp
pop
adc
mov
jp
and
(bad)
ror
add
ins
in
arpl
sub
clc
adc
jnp
lock
add
sbb
enter
mov
xor
inc
movs
enter
push
lock
cli
add
cmp
inc
fistp
mov
stc
(bad)
add
out
xor
pop
push
pop
jmp
int
sar
je
ret
adc
mov
mov
ret
xchg
test
lds
(bad)
sbb
inc
add
in
call
movs
dec
sub
cs
std
xlat
or
jae
(bad)
jge
cwde
enter
dec
or
stc
les
ret
lods
call
imul
jns
movs
mov
adc
stc
mov
mov
dec
mov
sub
xor
and
aad
xchg
out
and
pop
and
cmc
and
stc
or
bound
outs
ins
inc
iret
rcl
xlat
movs
xchg
inc
mov
inc
jmp
pop
add
dec
sbb
pop
mov
mov
pop
xchg
rcl
(bad)
cmc
outs
dec
xchg
mov
lods
aad
mov
add
aam
test
ja
sahf
add
rcl
or
pop
mov
test
mov
outs
outs
pop
loopne
mov
xchg
test
xor
leave
jns
adc
mov
mov
sub
mov
div
xor
sub
push
or
mov
mov
sub
popa
pop
int3
test
sub
lahf
fcomip
xlat
jbe
dec
mov
pop
mov
(bad)
scas
cmp
iret
rcl
popf
add
inc
mov
and
adc
sub
push
imul
xor
xor
out
(bad)
jne
pop
fimul
push
pop
cmp
scas
call
sub
push
stos
lods
xchg
imul
jb
out
shl
add
sub
inc
out
je
jb
adc
clc
bound
cmp
xchg
fidiv
ror
inc
and
ret
call
aas
mov
es
shr
adc
scas
movs
pop
dec
cmp
fcmovu
sub
cli
sub
add
mov
pop
and
and
or
jb
add
mov
adc
xor
jle
sub
sbb
scas
cdq
je
jg
ss
push
mov
popf
in
movs
in
bswap
mov
adc
adc
aad
xor
popf
adc
leave
and
mov
jnp
cmps
in
add
js
outs
and
enter
xor
(bad)
ja
cmp
jle
xchg
imul
stc
movs
and
pop
rcr
cmps
test
sub
mov
jl
pop
and
gs
sub
add
scas
adc
or
xchg
sti
mov
pop
jmp
rcl
xchg
cmp
ror
jl
or
cmp
imul
mov
adc
jns
sar
inc
int3
lods
and
lods
bnd
adc
inc
(bad)
(bad)
jecxz
or
inc
ret
test
sbb
ja
pop
push
dec
or
cmp
push
jb
lods
(bad)
in
scas
jl
imul
(bad)
pop
dec
cmp
jle
jo
and
les
lock
jae
push
pushf
aam
div
shl
cli
sub
push
inc
mov
mov
push
or
adc
stos
aas
cdq
out
in
ds
push
jnp
mov
in
loopne
sbb
retf
sbb
push
into
jmp
std
cld
pushf
lea
mov
dec
inc
in
push
cmp
mov
adc
in
add
pop
cmps
inc
dec
mov
mov
nop
sbb
fsubr
rcl
popa
out
in
inc
xor
mov
pop
mov
fisttp
dec
jb
mov
cmp
add
fwait
movs
mov
sbb
push
popf
(bad)
jmp
mov
aas
sbb
(bad)
push
retf
int3
in
add
fld
out
(bad)
mov
fist
xor
inc
mov
cmp
loopne
fwait
xchg
pop
loope
cmp
enter
xor
imul
ret
lahf
push
add
sbb
jns
int
xor
(bad)
(bad)
jmp
or
sub
ja
pop
xchg
jb
xchg
cmp
adc
and
cmp
inc
dec
push
loop
pop
add
lahf
mov
cmps
pusha
inc
push
imul
test
xor
stos
and
xchg
in
stos
pop
fsubp
lea
xchg
(bad)
and
and
std
pop
js
sti
sub
inc
xor
call
out
popf
inc
xor
in
rcr
(bad)
mov
fdiv
in
pop
push
add
iret
and
call
push
ror
jne
dec
outs
add
aam
cmp
jg
adc
push
enter
xchg
xor
repnz
icebp
xor
mov
xchg
xchg
pop
jp
pop
into
xor
aad
add
mov
or
add
loop
mov
loope
cmp
inc
(bad)
xlat
mov
ficom
dec
jne
or
cmp
ficom
pusha
mov
icebp
hlt
push
mov
pop
daa
imul
sbb
sub
inc
or
dec
rcr
arpl
mov
inc
imul
xlat
into
jmp
hlt
enter
mov
xor
jae
cmp
mov
test
les
jmp
stos
mov
pop
xchg
stos
pop
mov
and
jmp
fist
push
and
sub
pop
mov
cmp
xor
sti
mov
in
dec
and
cld
and
mov
fwait
xor
hlt
adc
push
daa
mov
and
ja
les
xor
jnp
cmp
dec
mov
rol
cld
stc
or
xor
adc
scas
and
clc
(bad)
popa
ror
int
and
cmps
add
sahf
cmp
mov
lea
sub
movs
cmc
or
add
arpl
and
mov
mov
add
mov
stos
fwait
jecxz
mov
xlat
xchg
js
stos
sbb
mov
mov
in
jge
(bad)
adc
outs
dec
rcl
call
mov
aam
add
push
aam
cdq
push
cs
ds
mov
loop
inc
jo
inc
dec
mov
jge
mov
inc
cmc
je
jno
(bad)
pop
pop
fdivr
xor
inc
cmps
pop
mov
scas
adc
push
daa
cli
push
into
jmp
sbb
jg
mov
js
push
in
fistp
repz
mov
cs
int3
lds
test
sbb
xor
jnp
ss
inc
cdq
inc
imul
push
es
add
sbb
outs
das
xlat
cmp
shl
dec
cmp
(bad)
lods
popa
adc
hlt
sbb
sahf
add
and
push
add
arpl
clc
(bad)
add
aam
fs
inc
mul
xchg
mov
fwait
cmp
adc
mov
add
lock
sub
icebp
ins
cmps
sbb
adc
and
jmp
pop
xor
fs
in
fs
cmps
push
icebp
cmp
repnz
imul
push
ror
das
imul
pushf
pop
and
inc
mov
xor
movs
int3
pushf
jnp
jnp
lahf
dec
call
fcmove
out
jnp
retf
inc
mov
jne
pop
cdq
dec
adc
xor
in
or
cmp
lock
cdq
and
stos
mov
adc
imul
fnstsw
and
fwait
or
imul
imul
out
mov
pop
cs
xchg
jl
cmp
inc
mov
jl
retf
pop
pop
mov
mov
jae
outs
stos
pop
pop
fmul
mov
in
jmp
ins
int3
or
adc
ss
jecxz
mov
pop
or
mov
xor
movaps
scas
mov
imul
push
xor
js
mov
test
xchg
sahf
mov
cmp
in
push
rcl
push
fiadd
pop
test
pop
fisttp
or
push
add
cmps
leave
inc
pop
repz
call
cs
and
popa
jle
cmp
dec
or
jl
sub
push
or
push
mov
fs
jge
push
sub
lea
adc
inc
adc
test
rcl
(bad)
mov
and
mov
xchg
sahf
mov
loopne
push
loopne
xchg
loopne
inc
leave
mov
lods
sub
in
out
lahf
xor
jmp
cmps
in
cmc
sbb
shr
ret
inc
adc
loope
aam
adc
stos
xchg
sbb
enter
xchg
pop
addr16
cmp
stc
popa
ficom
fdivr
push
sub
pop
push
pop
retf
cmp
sub
push
xchg
into
hlt
(bad)
push
popf
jmp
lods
scas
dec
rol
test
inc
xor
fmul
pop
cld
mov
pop
vunpcklpd
pop
or
sub
in
dec
lock
fstp
lds
jnp
and
mov
daa
cmp
cmps
pop
scas
(bad)
out
jns
or
jl
add
loop
and
sub
pusha
push
aad
out
jo
iret
mov
add
ins
mov
iret
push
nop
enter
mov
add
aad
imul
clc
dec
mov
in
push
pop
mov
xor
fsub
test
jl
mul
test
pop
imul
dec
mov
(bad)
adc
iret
pop
rcl
xchg
pop
div
mov
dec
push
sbb
mov
(bad)
dec
pop
outs
les
outs
xor
repz
in
call
call
sub
jge
test
xchg
inc
cwde
sti
xor
in
clc
std
mov
pushf
clc
repz
retf
jnp
jb
fstp
nop
sub
sbb
movs
ret
cld
dec
std
xor
sub
(bad)
in
mov
xor
gs
lods
xchg
jnp
jb
test
xor
add
inc
lahf
div
std
scas
mov
mov
fisttp
cs
mov
xor
add
dec
pop
xor
outs
or
xlat
test
cmp
and
inc
xor
retf
or
adc
inc
btc
add
lahf
test
xchg
imul
push
outs
pop
fdiv
scas
inc
push
(bad)
mov
add
cmp
outs
pop
mov
jb
xor
mov
mov
mov
movs
rol
scas
sub
mov
dec
in
mov
sbb
mov
imul
int3
addr16
popf
aaa
mov
inc
sub
adc
ja
jecxz
mov
mov
ret
sbb
int3
push
mov
and
mov
shr
aaa
ror
js
add
xor
sbb
or
dec
cdq
add
xor
cmc
mov
nop
cmp
xor
xchg
pop
aam
adc
inc
push
ficomp
inc
xor
shr
(bad)
xor
in
pop
loop
ins
sub
pop
xor
int
push
clc
push
inc
dec
pop
imul
repnz
idiv
cld
rol
jbe
ins
adc
cmp
(bad)
jnp
jno
out
xchg
retf
mov
ficomp
nop
sub
cmp
push
aaa
push
push
lock
icebp
push
shr
test
and
mov
xchg
cmp
js
mov
inc
mov
dec
pop
push
adc
xchg
jno
dec
cmp
aaa
je
ins
ins
fisubr
adc
xor
inc
jle
idiv
add
lea
std
fs
adc
in
sub
int3
jbe
out
aad
sbb
or
daa
in
push
jg
sbb
pop
icebp
sub
jae
sahf
rcr
pop
pop
xor
push
dec
sub
out
cwde
mov
xchg
sub
push
add
mov
retf
mov
xchg
sub
dec
hlt
in
out
(bad)
stos
push
call
mov
cmc
es
pusha
ins
inc
pop
imul
jle
in
sbb
dec
iret
or
loop
or
xor
hlt
and
inc
xchg
int3
inc
scas
aaa
imul
shl
add
pop
mov
cmp
loop
pop
push
xor
jg
mov
cli
inc
jb
cmp
jo
add
add
mov
dec
(bad)
je
stos
fnstcw
cwde
inc
adc
pusha
loope
cwde
add
sub
fbld
leave
pushf
int
ret
lock
xchg
cmp
sub
cwde
jns
mov
daa
pop
cli
and
dec
les
js
add
adc
retf
push
adc
lea
out
daa
and
mov
pop
cmps
or
outs
cmp
cmp
pop
mov
leave
mov
push
push
mov
adc
add
cli
test
inc
test
push
inc
xchg
xor
push
xchg
sbb
inc
fwait
push
mov
cmps
xlat
test
call
retf
hlt
retf
and
xor
outs
inc
or
aam
dec
cmp
add
xchg
and
int
fs
sub
sbb
pop
mov
(bad)
mov
mov
aad
sbb
leave
sbb
dec
sub
jmp
loopne
xchg
rcl
inc
in
sbb
add
mov
(bad)
icebp
js
xchg
sbb
popf
xor
arpl
(bad)
cld
pop
rcr
sub
aas
cmp
movs
shl
addr16
out
lods
inc
sbb
xor
push
cmp
jge
movs
es
adc
imul
jge
mov
imul
xchg
pop
xchg
sbb
push
stos
repnz
sub
sbb
sbb
inc
sub
js
enter
mov
fwait
popf
inc
iret
movs
sbb
(bad)
inc
and
cmp
add
ins
sub
cmp
or
rcr
sbb
outs
sub
cmp
scas
mov
sub
shr
adc
shr
add
push
and
cmc
dec
and
push
leave
jecxz
cmps
cmp
adc
int3
or
fild
sub
cld
sbb
mov
adc
mov
retf
int
or
adc
jmp
mov
js
in
dec
mov
push
loop
sbb
add
aaa
in
loope
mov
stos
xor
fxtract
xchg
fwait
stc
retf
mov
jb
jb
xchg
shl
mov
sbb
pop
mov
adc
ins
rol
xchg
loope
jl
test
test
xchg
fisubr
frstor
test
shr
lods
out
mov
ins
add
lea
push
ss
ss
xor
ss
fwait
cld
addr16
add
xor
in
mov
pop
out
inc
push
inc
sbb
data16
imul
stos
test
aas
sti
xchg
mov
sub
sub
mov
add
jp
mov
out
pop
rol
xchg
mov
aaa
mov
dec
gs
aaa
outs
mov
xor
test
push
jnp
test
movs
(bad)
repnz
dec
jb
cld
xchg
inc
cwde
mov
mov
shl
sbb
push
adc
shr
and
xlat
xlat
push
test
test
fld
mov
and
shl
aad
add
cmp
les
(bad)
call
(bad)
and
jno
jae
outs
mov
mov
js
clc
push
inc
push
(bad)
test
pop
adc
dec
pop
pop
pop
jg
lods
sbb
sub
sahf
add
mov
mov
add
xor
and
aad
retf
cdq
mov
test
cdq
je
movs
repnz
xchg
xor
jg
inc
xor
data16
mov
push
sbb
mov
sahf
sub
loopne
getsec
dec
hlt
fldcw
test
pop
mov
retf
sbb
or
xchg
cdq
shr
cmp
add
cli
fsub
ds
dec
inc
jno
xor
imul
sbb
(bad)
scas
(bad)
or
pushf
push
test
imul
hlt
adc
adc
adc
and
adc
push
call
sub
fsubr
xchg
or
jmp
jge
adc
repnz
popa
arpl
mov
xchg
mov
sbb
jl
fs
pmaddwd
dec
mov
aad
jbe
call
inc
and
mov
mov
mov
or
in
and
fbstp
mov
adc
sbb
cdq
mov
shl
pop
inc
xor
push
mov
sbb
gs
ins
and
or
std
sbb
inc
idiv
sub
fwait
imul
mov
stc
dec
jge
cwde
push
andps
jnp
mov
mov
shl
mov
inc
push
test
arpl
in
div
in
sub
arpl
xor
mov
cld
lds
ror
leave
sub
mov
pop
xchg
or
or
sbb
or
sub
cdq
in
adc
cmp
leave
cdq
fdivp
pushf
and
pop
mov
stc
mov
movs
cmp
lods
icebp
push
push
cld
sahf
lods
dec
loopne
add
cmps
test
shr
dec
int
pop
bound
mov
push
jno
adc
outs
hlt
ins
pop
fs
mov
iret
mov
inc
xor
sbb
movs
push
inc
xchg
mov
repnz
loope
jmp
pop
fmul
fs
shl
jmp
push
jae
jl
inc
stos
add
sahf
sbb
aaa
mov
push
shr
inc
popa
cdq
adc
ja
adc
rol
loop
leave
mov
sub
js
idiv
jmp
leave
pop
daa
leave
jbe
int3
sub
test
je
ret
cwde
pushf
addr16
dec
loop
into
mov
mov
add
and
push
or
xchg
stc
cmp
xchg
dec
sbb
data16
out
jne
mov
add
xchg
xchg
dec
data16
sti
popa
jp
add
xchg
es
inc
scas
dec
sub
pop
pop
clc
fild
test
or
inc
enter
cli
sbb
aaa
adc
gs
sub
adc
mov
daa
adc
push
lea
or
std
call
movs
and
in
cmp
dec
cmp
mov
movs
push
imul
leave
mov
test
clc
mov
test
mov
jle
jns
popf
sub
inc
pop
jae
je
cmps
sub
ror
jbe
cmp
jecxz
adc
push
outs
js
test
jne
mov
mov
or
dec
push
clc
push
push
iret
xchg
movs
int3
fs
cmc
imul
dec
jmp
sbb
inc
and
data16
xchg
aam
xor
push
lahf
fs
pop
sbb
imul
mov
stos
leave
sbb
pop
out
(bad)
jb
fimul
adc
enter
lea
out
and
xor
cmp
sbb
mov
cwde
mov
inc
rol
xchg
or
fisttp
out
or
rol
movs
leave
jmp
inc
pop
mov
xchg
dec
xchg
mov
out
retf
jb
pop
lock
jp
in
scas
mov
ret
shl
shr
and
jae
xchg
fcom
mov
call
ror
pop
mov
mov
jmp
dec
adc
clc
xor
or
std
fstp
push
xchg
gs
and
test
call
pop
repz
jmp
loope
rcr
jmp
jbe
rcr
or
add
aaa
data16
aad
loopne
inc
inc
rcl
dec
loope
iret
adc
add
sub
pop
nop
add
mov
xchg
sub
cmp
dec
xchg
mov
movs
xchg
adc
rcl
xchg
test
rol
rcl
sub
pop
pminub
mov
jbe
cmp
fiadd
ret
mov
aam
xchg
jg
ins
cmp
outs
sbb
es
mov
mov
(bad)
pop
sub
fisub
sahf
call
das
cs
(bad)
pop
mov
inc
adc
dec
sub
nop
xchg
sub
mov
js
pop
jo
mov
xor
jmp
dec
clc
shl
test
mov
test
fld
jle
sbb
adc
data16
lea
dec
dec
xor
repz
std
in
jge
push
fistp
push
cmp
in
or
icebp
mov
mov
and
test
push
shr
push
fcom
add
jmp
sub
(bad)
push
(bad)
push
sub
js
scas
and
cs
add
jb
movs
imul
mov
cmp
iret
(bad)
nop
out
mov
inc
or
sar
cmp
fld
(bad)
xor
add
ds
jmp
mov
cmp
fprem1
out
imul
leave
mov
popa
mov
out
loopne
xlat
int3
es
jae
scas
add
sar
cmps
mov
inc
repnz
lods
loopne
jge
mov
xor
sub
call
mov
pop
out
fild
ds
stos
daa
rcr
dec
int3
ss
push
jb
and
in
jae
scas
jp
gs
xchg
mov
ror
out
jb
and
pop
dec
into
cmp
outs
mov
mov
push
add
xor
fcom
and
cmp
fisubr
lea
mov
sub
ja
cmps
aad
ss
sub
(bad)
pop
hlt
xor
mov
ficom
xchg
std
in
mov
ja
sbb
pop
pop
rcr
dec
cli
test
pop
pop
xchg
lea
leave
push
(bad)
out
pop
pop
dec
cmps
in
pop
aas
loopne
inc
jmp
xchg
mov
fisttp
and
or
into
xlat
inc
pop
out
lahf
inc
push
inc
rcl
in
mov
pop
cmp
cs
add
fistp
outs
mov
mov
mov
cmp
xlat
std
jb
jo
and
mov
std
push
jbe
mov
test
pop
push
cmp
lock
mov
popf
jmp
in
adc
and
stos
jg
and
push
lods
stc
arpl
mov
mov
inc
div
dec
dec
stos
dec
enter
movs
daa
rol
add
js
inc
das
cs
scas
jo
aam
jns
bound
popf
das
xchg
push
mov
mov
dec
jl
call
test
pop
rcl
and
leave
cmp
and
neg
sbb
jle
loope
fwait
inc
dec
cmp
mov
jno
inc
or
cmp
inc
sti
mov
test
pop
xchg
cli
dec
cmp
ss
lea
cmp
xchg
jnp
dec
imul
lods
and
outs
inc
rcl
add
out
jbe
or
mov
ds
adc
(bad)
xor
in
inc
dec
mov
fsub
push
sub
cmp
push
inc
and
loopne
xor
sub
mov
and
cmp
and
movs
jl
pop
pop
xchg
cmp
adc
dec
dec
cdq
call
popa
jb
(bad)
push
push
push
pushf
xchg
ins
(bad)
pop
pop
xchg
xor
and
fldcw
dec
cmp
ins
inc
fcmovnbe
arpl
or
mov
inc
add
xchg
sbb
push
test
sub
dec
pusha
add
mov
pop
cmp
push
xor
dec
adc
push
and
or
and
pop
bound
icebp
push
and
adc
pop
sbb
nop
or
jne
shl
cmp
ss
dec
pop
inc
sti
test
(bad)
popa
push
or
or
adc
loop
adc
loope
mov
out
loope
mov
and
xor
push
fmul
xlat
add
fldenv
xchg
les
dec
jmp
call
pop
xchg
and
ffreep
repz
and
call
mov
xchg
repz
push
fsubr
cmps
out
cmp
cmps
or
and
shl
mov
loopne
inc
aad
(bad)
xchg
dec
push
mov
or
(bad)
(bad)
xchg
jmp
xor
pop
sub
cmc
cmp
cmp
pop
fdivrp
outs
xor
jge
cmp
inc
(bad)
pop
mov
dec
push
fmul
les
fistp
fldln2
add
shl
adc
inc
scas
cmp
sbb
clc
dec
(bad)
cmp
cs
fstp
pop
test
ficom
mov
mov
inc
ret
dec
test
retf
push
xor
inc
and
inc
mov
jmp
jo
outs
add
and
sub
ss
and
jnp
fucomip
test
outs
test
popa
je
retf
sbb
lods
clc
or
and
aam
xor
sub
int
outs
cmp
and
cmps
(bad)
jmp
sub
into
rcr
push
jbe
bound
sub
aaa
sar
cmp
(bad)
and
lods
test
mov
mov
test
fisttp
jae
pop
sub
loopne
mov
cmp
pop
clc
jne
retf
inc
bound
push
adc
aad
adc
inc
push
fwait
add
jbe
leave
loope
rcr
jnp
outs
pop
(bad)
repnz
cmp
add
out
adc
xchg
or
push
xor
pop
adc
ins
jmp
sbb
ror
jbe
add
cmc
add
mov
into
loopne
push
adc
(bad)
pop
mov
inc
sbb
pop
dec
in
sbb
push
out
inc
mov
sbb
cmp
or
out
mov
idiv
je
inc
movs
push
popf
inc
sbb
or
fisubr
ffree
xchg
pop
mov
mov
push
daa
jmp
ret
or
add
sbb
adc
inc
pop
sbb
add
shl
inc
add
mov
ja
(bad)
call
popa
(bad)
(bad)
adc
fsincos
mov
stc
aad
enter
xor
test
xchg
xor
cmps
stc
push
(bad)
das
aad
outs
js
mov
loopne
cmp
rol
mov
mov
sub
add
pop
mov
xor
loopne
imul
mov
pop
dec
xor
xchg
cmp
jmp
mov
rcl
mov
xchg
movs
jg
or
fsub
pop
xor
daa
xchg
sbb
popa
cmp
mov
jmp
ds
adc
in
cmp
lock
dec
dec
or
test
shl
sbb
cld
pop
sub
iret
into
push
xchg
jmp
fimul
bound
repz
jnp
es
pop
mov
or
popa
jb
test
in
or
jae
pusha
dec
jno
xchg
(bad)
fadd
mov
lock
mov
mov
mov
dec
or
jnp
cmps
mov
in
mov
mov
pop
add
xor
mov
movs
cmp
outs
xor
(bad)
mov
add
aaa
inc
ins
fwait
inc
shl
sahf
xchg
adc
xlat
xor
(bad)
or
sbb
cwde
outs
mov
fiadd
mov
mov
out
loop
and
lea
jmp
rcr
push
dec
push
sahf
sar
jl
jl
call
xor
sar
sub
loope
or
mov
and
in
mov
ja
jmp
lods
cmp
xchg
pusha
shl
cmp
jge
dec
sbb
aad
cmp
cli
inc
cmps
popf
fisubr
int
add
pop
sbb
jnp
jne
daa
ds
dec
mov
add
sub
xor
inc
cmp
cdq
aam
ret
ficom
lods
enter
dec
retf
imul
dec
add
mov
mov
outs
mov
bound
mov
dec
dec
mov
mov
out
stos
mov
pop
sar
call
xlat
inc
std
dec
mov
or
dec
jg
imul
jbe
inc
sbb
add
adc
dec
repnz
jbe
popf
cmp
xor
ror
inc
mov
sti
not
lds
cwde
aas
sahf
call
sub
sub
adc
or
sar
push
lahf
xchg
cmc
nop
out
lods
lea
jno
lock
cmp
jmp
cmp
sti
sar
sub
xchg
sub
pop
mov
push
jmp
imul
repnz
mov
pop
or
pop
imul
xor
popf
and
stos
lea
xlat
jnp
sub
adc
dec
leave
adc
and
shl
popf
daa
xor
mov
and
mov
add
(bad)
ss
xor
dec
sub
or
pop
xor
repnz
bound
ret
outs
cmc
fcom
add
cld
inc
push
xchg
popa
shl
inc
mov
mov
test
xchg
jbe
pushf
jae
daa
das
jmp
enter
rcl
add
push
mov
sahf
ss
mov
adc
xor
adc
int3
data16
repnz
jp
stos
mov
mov
add
sbb
inc
loope
outs
lock
pop
cmp
je
pop
xlat
sbb
xor
(bad)
movs
rol
and
repnz
leave
xchg
aaa
sbb
mov
mov
les
adc
sbb
call
jle
cmp
test
test
loope
mov
cld
push
dec
jne
pop
aaa
mov
mov
pop
jge
dec
or
mov
cmp
and
lahf
ins
mov
(bad)
adc
aaa
xor
repz
and
sbb
xchg
jbe
lock
mov
scas
pop
cmp
push
int3
xchg
add
push
cld
jl
sub
push
inc
push
pusha
mov
cs
test
or
adc
out
add
xchg
imul
push
dec
mov
mov
pusha
inc
mov
pop
cmp
jp
push
xlat
push
call
mov
mov
das
add
mov
enter
jbe
fwait
push
cwde
es
cs
das
mov
push
idiv
adc
add
push
xchg
adc
aas
mov
push
mov
retf
rcl
sbb
cdq
out
aam
ins
mov
lods
adc
inc
adc
je
jb
arpl
cmc
loopne
pop
jecxz
aam
sbb
retf
cmc
push
stos
mov
out
xor
and
add
rcl
pop
movs
ins
or
xchg
movs
aaa
and
mov
pop
dec
mov
cmc
and
les
nop
mov
jmp
cmp
fs
xor
sahf
dec
pop
inc
inc
jno
cmp
jge
or
int3
lods
and
dec
mov
xor
aas
test
push
inc
inc
iret
cmc
jl
mov
jo
imul
mov
sub
adc
sbb
cmp
ins
sbb
cdq
mov
pushf
stos
lods
jle
pop
ret
xchg
aaa
pop
adc
dec
inc
adc
jne
popa
sti
inc
test
inc
lea
mov
lds
leave
dec
push
ins
les
sahf
repnz
ficomp
adc
jmp
xor
mov
out
scas
add
xlat
cmp
(bad)
cwde
fstp
ins
test
dec
sbb
into
adc
add
cmp
fsubr
bound
shr
and
nop
cmps
mov
sbb
in
jmp
adc
and
inc
(bad)
rcl
or
push
pop
and
adc
mov
xor
call
jle
jno
daa
pop
or
jp
jp
dec
jb
fmul
iret
aam
out
sar
sbb
retf
(bad)
sub
sbb
out
je
fild
lahf
inc
clc
faddp
nop
data16
arpl
popa
sar
shr
lods
cmp
fld
fiadd
or
fild
pop
lds
push
ret
loope
mov
or
leave
in
dec
aad
mov
add
push
ds
fwait
xchg
mov
pop
jae
mul
jp
mov
hlt
xchg
push
leave
cmp
and
jmp
sub
or
lds
cdq
fild
bnd
into
push
inc
imul
icebp
and
sub
js
in
repnz
mov
fwait
bound
outs
jge
clc
fwait
sub
in
add
call
rcr
stos
sbb
cmp
cmp
inc
pop
ror
inc
jno
mov
pop
movs
data16
pop
lds
mov
cs
mov
loope
inc
mov
jmp
adc
retf
(bad)
push
and
ds
loopne
push
xor
mov
push
mov
retf
mov
(bad)
ss
scas
mov
mov
xchg
sbb
cli
enter
inc
repnz
xchg
(bad)
int
xlat
repz
std
adc
ret
pop
add
pop
mov
js
imul
push
mov
test
in
not
push
inc
dec
adc
es
seta
dec
dec
push
cdq
es
sar
jnp
imul
movs
dec
push
inc
retf
fcmovu
outs
xor
cmc
aam
push
neg
mov
sbb
add
sub
or
cwde
inc
je
jb
sbb
fldcw
cs
test
or
call
das
fistp
call
leave
fnstenv
and
add
gs
cmp
mov
push
mov
addr16
rcr
ins
push
pop
fdivp
das
bound
and
mov
jmp
lds
sub
test
and
push
outs
test
daa
sbb
sub
push
shr
adc
inc
and
mov
add
lds
sbb
ror
iret
(bad)
push
call
dec
repz
cmp
fdiv
lahf
test
add
loop
add
xchg
out
push
pop
and
add
xchg
daa
in
or
fwait
ss
loop
sub
aaa
dec
test
imul
repnz
in
fnsave
sbb
cmp
test
jmp
scas
pop
mov
lods
push
pop
push
mov
hlt
inc
add
out
int
push
jno
lods
adc
cmps
add
jo
(bad)
jl
cdq
cmp
mov
(bad)
jg
push
je
cmp
cld
jmp
and
cmc
pop
(bad)
push
lahf
xchg
jb
jbe
aaa
scas
push
imul
ins
int3
in
lea
fistp
mov
out
popa
pop
push
scas
mov
add
into
mov
sub
xchg
pop
sub
fist
mov
xchg
or
fnstcw
jg
dec
into
xchg
pusha
mov
movs
leave
unpcklps
ds
loope
sbb
xchg
dec
lods
pop
bound
pop
data16
sbb
jae
and
cdq
shr
cmps
enter
add
adc
rcl
out
jecxz
call
ss
pusha
shl
into
cmp
jge
mov
mov
je
stc
mov
mov
enter
adc
jge
fwait
sub
outs
popf
sub
sbb
sti
in
xchg
push
pop
bound
cmps
or
lods
inc
mov
adc
(bad)
and
imul
jmp
dec
and
movs
jae
ds
(bad)
mov
addr16
(bad)
mov
xchg
add
push
cmc
sti
push
cdq
xchg
scas
call
mov
pushf
mov
jb
arpl
dec
mov
aad
out
mov
mov
mov
jns
push
repnz
mov
ds
fnsave
cmp
jle
pop
xlat
gs
idiv
cwde
int
sub
sub
int
test
cmp
ds
daa
sub
add
add
movs
jle
call
xor
cli
fcmovnb
rcl
lea
cmp
les
inc
sbb
mov
aas
mov
jl
mov
stos
sub
jmp
movs
jae
movs
(bad)
jecxz
pop
cmp
dec
dec
jg
rol
jbe
dec
test
int3
js
xor
xor
or
je
jmp
inc
sub
add
test
call
repnz
lahf
xlat
inc
push
jnp
pop
(bad)
xor
nop
cmc
dec
mov
sar
mov
out
jp
arpl
(bad)
(bad)
pslld
cdq
sahf
nop
mov
add
call
sub
setb
add
movs
imul
mov
(bad)
in
cmp
jne
pop
imul
shl
xchg
pop
ret
dec
xlat
pop
inc
push
movs
call
rcr
xchg
fild
imul
and
inc
and
std
enter
ja
in
les
pop
out
xchg
jge
push
cmps
icebp
mov
mov
pusha
mov
in
push
cmc
dec
push
loope
daa
cs
out
sbb
ins
loop
(bad)
ret
sbb
iret
jmp
xor
ss
cwde
loope
stos
cmp
push
fs
addr16
sbb
cmovp
cmp
push
xor
mov
rcr
pop
sbb
shr
xchg
ds
or
in
fnstcw
jno
sti
dec
leave
(bad)
out
push
fist
mov
out
repz
push
nop
sub
scas
fiadd
ret
mov
push
sub
pop
or
mov
or
pop
sub
test
inc
or
dec
add
add
xchg
mov
popa
cmps
cmp
pusha
scas
jbe
outs
push
add
fistp
and
cmp
iret
ja
jle
cmps
push
jb
xchg
in
mov
fbld
and
(bad)
mov
push
or
inc
sahf
mov
mov
jge
pop
push
adc
xor
push
lea
ss
lea
sub
add
or
mov
push
lock
(bad)
fidiv
fucom
mov
cmp
push
add
stc
jmp
dec
mov
pop
pop
mov
and
cmp
lds
pop
fst
out
cmp
jle
scas
(bad)
test
fdiv
aaa
into
fcmovnb
mov
loope
fidivr
adc
sub
sbb
or
or
cmps
add
pop
inc
add
pop
ror
pop
in
les
xor
cmp
test
in
sub
mov
dec
mov
adc
sbb
loope
out
cli
jns
adc
pop
sub
cwde
mov
ja
adc
xchg
dec
in
movs
mov
inc
in
push
dec
mov
aad
jno
jmp
cmps
jbe
rcr
adc
jb
das
popa
into
pop
and
dec
data16
mov
addr16
mov
xor
add
push
ss
mov
push
sbb
ret
cmp
add
cmp
add
mov
aaa
xor
repnz
push
lahf
sar
jo
sti
push
fbstp
jmp
cs
in
ret
movs
and
das
inc
lea
test
lods
add
pop
xchg
in
sbb
lods
into
dec
outs
pop
jp
cmc
cwde
fwait
adc
mov
aad
test
mov
xor
dec
mov
mov
(bad)
xchg
jg
mov
call
popa
lods
mov
addr16
(bad)
pop
cdq
cmp
cwde
add
aam
retf
dec
or
push
pop
ja
sub
push
ins
mov
test
jg
pop
outs
inc
jns
cmp
dec
fwait
add
leave
sub
or
(bad)
(bad)
add
jg
sub
inc
jle
jmp
mov
addr16
and
aad
cmc
xchg
enter
jne
jne
icebp
jge
jbe
(bad)
mov
test
ds
jge
cmp
dec
push
add
rol
and
imul
scas
adc
mov
les
mov
aaa
jp
push
sbb
jg
mov
outs
test
cmps
xor
cmp
push
cmp
shr
ficomp
push
ins
xchg
pop
dec
lock
xlat
aad
add
dec
jge
pop
es
shl
std
cmp
sub
rcl
jecxz
pusha
xchg
and
adc
and
inc
mov
pop
dec
not
retf
cmp
sbb
lock
pop
std
loop
mov
fadd
das
jno
jp
mov
jle
and
xor
(bad)
push
and
pop
add
dec
scas
pusha
call
inc
(bad)
es
sbb
(bad)
std
push
mov
(bad)
cmps
fidiv
bound
imul
(bad)
pop
loope
mov
sub
shl
enter
sbb
rcl
lahf
or
xor
push
add
inc
jge
mov
cmps
sub
imul
and
add
pop
outs
push
inc
xor
js
mov
mov
sti
sbb
mov
add
jo
dec
outs
sbb
lds
stos
lods
nop
xor
push
mov
clc
add
popa
test
mov
(bad)
in
jecxz
pusha
or
xchg
xlat
cs
mov
(bad)
sti
pop
or
or
leave
pop
dec
mov
ins
mov
xor
cld
push
les
pop
inc
addr16
sahf
lods
cmp
push
xor
push
adc
dec
push
adc
push
push
push
into
jp
(bad)
and
xor
mov
xchg
inc
and
stos
in
cwde
jmp
jmp
and
lock
imul
repz
jmp
cdq
jne
mov
pop
mov
inc
les
mov
xchg
out
xchg
mov
scas
inc
pop
rol
mov
cwde
jnp
mov
sub
xor
pop
dec
add
cmp
push
call
or
cwde
jecxz
ficomp
inc
nop
aad
pop
cwde
xchg
cmp
adc
push
daa
sub
movs
imul
sahf
mov
leave
out
sbb
sbb
movs
popa
mov
ret
xchg
or
or
gs
aas
test
aaa
gs
inc
push
add
adc
push
push
xor
sub
dec
mov
movs
cwde
xor
into
mov
and
sub
ret
dec
jns
js
fidiv
mov
mov
mov
pusha
and
sbb
inc
cmp
imul
mov
xchg
mov
shr
out
cld
test
cdq
add
pushf
inc
cmp
int
push
mov
ror
sub
imul
dec
je
mov
inc
or
jp
push
and
ret
mov
push
dec
fidivr
or
and
es
pop
call
sar
sbb
call
fdivrp
out
dec
jecxz
xchg
(bad)
pop
test
push
shr
add
cmc
jle
xchg
and
push
cwde
clc
mov
sbb
mov
mov
add
sub
or
ret
shl
add
xchg
or
bound
ja
dec
jo
add
stc
adc
mov
adc
sti
push
lea
pop
rep
sbb
push
fistp
mov
in
sub
jmp
ja
sub
test
add
in
test
dec
inc
mov
cdq
shl
cpuid
and
adc
pop
and
xor
add
push
push
dec
icebp
lock
push
cli
leave
rol
and
push
and
mov
test
sub
retf
add
inc
mov
inc
test
out
mov
or
adc
jne
sub
xchg
mov
cmp
mov
mov
mov
in
cdq
daa
stos
out
jns
in
adc
mov
or
fistp
scas
pop
pop
mov
retf
push
inc
pop
mov
icebp
pop
and
pusha
jns
inc
(bad)
pop
pop
jmp
sub
das
and
or
fimul
(bad)
es
and
icebp
retf
push
(bad)
pop
call
add
and
(bad)
lahf
sbb
mov
jp
sbb
jnp
mov
fisttp
add
inc
mov
sahf
add
sub
jne
cld
dec
dec
hlt
cmp
and
push
push
inc
cmp
dec
sbb
jne
jecxz
scas
test
jmp
stos
sbb
inc
(bad)
data16
cmp
jl
xchg
pop
(bad)
mov
xchg
xchg
mov
mov
xchg
out
mov
aas
das
or
xchg
pop
cmp
push
jae
pop
rcr
jge
out
sahf
or
pop
scas
add
push
dec
xchg
sbb
sub
movs
popa
dec
xor
imul
adc
adc
loopne
xchg
pusha
int
xchg
jmp
int
jmp
daa
jmp
push
fs
test
jmp
sbb
es
dec
add
add
pop
and
jnp
push
add
xchg
lods
je
aas
popf
test
pusha
in
es
cmc
cmp
mov
scas
xor
or
stc
adc
mov
dec
push
or
into
pop
xor
jle
imul
ins
inc
(bad)
mov
cld
mov
mov
push
lock
xor
shr
jle
mov
adc
enter
ja
adc
loopne
mov
xor
xchg
push
out
cmp
or
das
stc
sbb
ja
mov
pop
rcr
dec
sbb
rol
mov
pushaw
(bad)
mov
loop
cmp
in
push
and
dec
pop
call
cld
mov
mov
cmp
xchg
sub
fld
dec
shl
shr
popf
call
xchg
push
jl
lock
push
dec
xor
(bad)
jbe
and
and
mov
sbb
push
xchg
sub
inc
idiv
frstor
or
and
cmp
xor
mov
inc
pop
sub
(bad)
retf
dec
push
cmp
inc
sub
or
inc
pop
mov
inc
cmps
push
inc
out
add
xor
mov
or
or
push
ret
xchg
imul
dec
inc
es
xchg
jle
xchg
inc
mov
aad
inc
popf
clc
and
cmp
cmps
sbb
dec
fsin
push
sbb
test
ins
mov
mov
js
lea
in
inc
xchg
mov
xor
test
cmp
aas
retf
out
movs
aam
mov
mov
xchg
jmp
or
inc
inc
or
and
scas
dec
cmp
adc
xchg
clc
sub
push
cmp
test
push
(bad)
imul
dec
mov
dec
cmp
fwait
lahf
mov
retf
mov
call
popa
xor
je
and
adc
add
mov
adc
dec
sbb
out
jge
out
imul
dec
pop
jnp
aam
mov
fimul
clc
push
pop
cmp
in
dec
fnstcw
jae
dec
pop
mov
and
jns
mov
or
sahf
scas
outs
add
add
mov
xchg
lahf
jb
jno
jne
jno
test
repnz
nop
pop
inc
xchg
sar
(bad)
mov
jno
loop
mov
inc
xor
dec
das
scas
add
mov
inc
outs
test
adc
arpl
inc
movs
mov
push
shl
pushf
cwde
lods
sub
inc
ret
mov
xchg
push
ret
in
es
mov
rcr
add
retf
and
xor
into
sub
jmp
xor
gs
or
mov
push
aaa
xor
cmc
and
fidivr
lock
mov
sub
mov
neg
fist
push
pop
and
mov
push
mov
test
retf
arpl
stc
call
or
push
push
hlt
bound
cmp
sub
adc
jb
aaa
movs
xchg
jns
dec
pop
xor
or
adc
in
jbe
fimul
and
pop
cmp
ret
sbb
lahf
nop
and
lock
and
aaa
retf
inc
push
pop
push
inc
int
xor
and
xor
and
pop
cmc
shl
inc
or
xlat
ret
int3
pop
ds
mov
stc
mov
dec
mov
outs
mov
mov
call
out
stos
push
cmp
adc
jns
sub
jbe
scas
fstp
jns
call
push
hlt
icebp
hlt
jnp
xor
sti
sub
(bad)
mov
cmp
jl
cdq
shl
cdq
pushf
inc
adc
mov
sub
imul
into
out
jne
push
xchg
inc
xchg
mov
inc
xchg
pop
xchg
(bad)
imul
push
and
adc
mov
retf
or
test
cdq
mov
rcl
std
les
ja
sbb
or
retf
adc
mov
aaa
mov
xchg
lea
in
add
(bad)
lahf
les
jl
test
fucomip
pop
xor
adc
(bad)
rol
jp
dec
stos
lods
mov
ss
cwde
mov
adc
mov
popf
js
add
xlat
add
(bad)
push
ins
lock
dec
sub
pop
mov
aas
ja
pusha
mov
outs
xchg
(bad)
in
mov
ror
push
add
pop
xor
and
in
fdivp
cld
pop
cmp
push
shl
lds
push
jmp
cmc
(bad)
(bad)
jl
jns
xor
mov
push
sbb
inc
xchg
cwde
arpl
call
inc
cmp
test
aaa
call
push
retf
popf
pop
fdiv
(bad)
xchg
popf
jl
dec
gs
loope
int3
push
xor
push
xor
aaa
or
xchg
(bad)
pop
sbb
loope
iret
ins
cdq
mov
jmp
cdq
sub
xor
hlt
fsubr
add
jl
pop
jge
push
mov
mov
xor
jb
dec
mov
stos
pop
mov
inc
inc
and
aam
sub
mov
cmc
xchg
leave
adc
scas
and
cmps
cmp
fwait
sbb
sbb
stc
ss
push
hlt
push
jo
repz
pusha
dec
ds
aam
scas
inc
aaa
dec
jecxz
mov
push
or
out
mov
and
mov
scas
ret
aam
popf
lahf
lea
nop
outs
fsub
outs
mov
dec
test
sub
mov
jae
dec
out
lock
inc
xchg
jno
dec
cs
push
movs
or
hlt
nop
pusha
adc
xor
imul
lea
fld
add
add
dec
je
mov
push
(bad)
lods
add
jg
jns
iret
hlt
add
in
adc
(bad)
jmp
cs
pop
(bad)
out
mul
sahf
push
adc
rcl
dec
sbb
leave
pop
movs
sub
mov
push
push
test
shr
je
movs
and
inc
mov
sub
xchg
stc
iret
hlt
sub
sbb
push
in
push
xor
mov
xchg
xor
enter
jge
dec
mov
pop
movs
inc
retf
jecxz
lods
lea
out
add
mov
sbb
mov
and
adc
jg
cmc
inc
in
js
push
sub
sbb
or
scas
pusha
adc
movs
jecxz
pop
sub
dec
in
addr16
clc
xchg
sub
(bad)
sbb
outs
fdiv
xor
sar
sub
call
in
sbb
ins
ror
xor
mov
and
pop
test
int
out
ret
leave
repnz
xor
mov
mov
mov
(bad)
loop
xchg
enter
push
pushf
or
lea
lods
sub
jo
add
xchg
(bad)
(bad)
mov
shl
loopne
(bad)
scas
push
mov
mov
sahf
cmp
mov
stos
sub
out
inc
jb
xor
loopne
sub
push
mov
inc
jmp
fldcw
call
mov
leave
fs
mov
inc
inc
jge
popa
ret
cmp
cmp
push
pop
mov
mov
xchg
enter
pop
daa
dec
inc
mov
test
cmp
cmp
repz
push
push
std
mov
adc
xor
adc
adc
mov
cmp
or
mov
das
outs
addr16
xchg
jb
daa
into
dec
mov
shl
add
push
xchg
jmp
ins
push
xchg
fsubr
nop
cmp
jmp
(bad)
popf
dec
ror
movs
inc
pop
outs
xchg
jbe
sub
adc
cmp
jge
out
dec
push
fist
test
cmp
or
pop
(bad)
sub
ins
mov
push
fsub
pop
xor
leave
adc
mov
rol
mov
stos
cwde
jg
xchg
outs
iret
gs
cmps
and
fwait
push
jb
(bad)
sti
push
jp
bnd
les
xchg
and
repz
mov
jle
mov
jle
and
mov
ror
pop
iret
(bad)
sbb
xor
ds
cmp
aad
cwde
jo
mov
mov
sbb
pop
add
ficomp
inc
inc
sbb
imul
sub
imul
mov
and
(bad)
fwait
retf
icebp
mov
outs
xchg
shl
out
lods
xchg
(bad)
sub
and
and
cdq
mov
rol
xor
mov
or
ins
xchg
nop
sub
mov
add
inc
jl
adc
popf
jg
and
test
adc
add
mov
ficom
inc
mov
aad
scas
jge
loop
jl
pop
push
sti
jge
fisubr
retf
push
outs
jmp
scas
ds
cmp
das
ret
aad
imul
ds
std
(bad)
div
mov
or
shl
lods
frstpm(287
cmps
stos
mov
adc
mov
ja
cwde
xchg
xor
inc
mov
or
push
sub
and
push
dec
in
nop
stc
icebp
sub
loopne
(bad)
push
fsubr
call
jge
lods
and
jl
add
out
bound
ds
jecxz
push
mov
pusha
mov
add
lds
int
mov
and
lods
cmp
into
jmp
xor
sbb
jecxz
add
pop
cmp
adc
inc
loope
ja
retf
and
xor
fisub
pop
or
or
rcr
movs
sub
xchg
jbe
stos
lods
in
sub
ds
or
aam
call
lahf
push
ret
xor
add
xchg
sbb
mov
xchg
das
out
lods
mov
fucomip
add
inc
(bad)
pop
xchg
pop
add
inc
out
fmul
js
inc
data16
adc
xlat
scas
xor
push
lahf
cmp
mov
cli
add
rcr
mov
idiv
push
in
pop
cmp
lods
not
jae
pusha
in
xchg
fldenv
jecxz
mov
popf
cdq
xor
adc
push
addr16
gs
cmp
pop
mov
pop
pushf
int
add
push
cmp
mov
pusha
jb
cmps
shr
pop
lds
(bad)
(bad)
mov
sub
shl
(bad)
ja
aas
adc
dec
clc
sbb
cmps
fisubr
gs
xchg
scas
xlat
cmps
in
call
stos
push
repnz
pop
outs
test
sub
sbb
lahf
leave
dec
mov
sub
ret
mov
jb
push
lods
adc
ss
adc
ja
imul
xchg
push
(bad)
fmulp
imul
jb
sub
pushf
cmp
mov
inc
int
mov
cs
and
or
mov
jle
xchg
mov
cmp
pop
mov
jae
aaa
push
das
mov
aad
call
jae
xchg
out
daa
push
or
popa
(bad)
loopne
mov
loop
mov
inc
push
xchg
cmc
test
fdivr
mov
mov
xchg
std
and
push
jecxz
mov
inc
sbb
sbb
pop
enter
push
cdq
ret
lock
(bad)
add
es
mov
daa
imul
adc
and
(bad)
sahf
cmps
std
push
popf
mov
or
or
cli
cmp
jbe
add
fiadd
sbb
bound
pop
lahf
cdq
(bad)
movs
dec
xor
and
sahf
(bad)
xchg
xchg
mov
pop
or
push
inc
and
popa
bound
dec
and
pop
and
mov
push
push
xor
je
and
xchg
aad
(bad)
xchg
xchg
cli
sbb
pop
shl
sub
jo
std
mov
push
dec
fisub
ret
cwde
inc
sbb
mov
push
imul
add
pusha
shl
xchg
add
(bad)
push
aas
push
xor
fisub
jl
pop
mov
add
jle
icebp
repnz
inc
(bad)
(bad)
pushf
aaa
fdivp
retf
xor
pop
call
or
or
repz
sahf
out
sub
neg
hlt
and
sub
movs
ds
pop
cdq
(bad)
and
jo
jne
pop
dec
push
pop
stos
xor
cmp
test
cmps
inc
pop
cmp
aam
loope
fimul
loop
enter
fistp
xor
sbb
and
inc
jmp
mov
mov
pop
leave
mov
mov
dec
dec
xor
dec
data16
into
jp
in
mov
mov
dec
cmp
or
cmp
and
or
(bad)
jmp
mul
dec
sub
jmp
sub
fst
mov
adc
repnz
or
sahf
or
or
daa
call
or
repz
xchg
fistp
loope
mov
jmp
movs
cwde
int
and
jbe
fldcw
(bad)
jl
arpl
jmp
in
sbb
inc
xchg
mov
shr
mov
jbe
pop
sar
jl
mov
aaa
cwde
je
xchg
jno
dec
mov
add
mov
pop
cmp
shl
mov
outs
xchg
fstp
mov
dec
(bad)
movs
scas
add
and
lahf
fdivr
leave
xor
ror
mov
mov
mov
enter
push
xchg
add
cld
xor
and
mov
xor
retf
xor
xor
sub
add
mov
lahf
inc
and
pushf
mov
and
xor
das
cmps
retf
ror
retf
dec
sahf
mov
lahf
fmul
inc
jne
jns
sub
out
test
in
push
xchg
je
pusha
pop
sar
push
jne
test
xchg
jmp
test
jae
fiadd
xchg
xchg
adc
dec
or
or
scas
add
pop
fdivrp
inc
frstor
les
(bad)
push
mov
aad
int3
mov
in
mov
aas
inc
or
jmp
push
inc
adc
ins
sbb
dec
add
push
cmp
pop
xchg
cwde
push
out
cwde
mov
bound
cld
clc
iret
xlat
rol
mov
dec
shl
(bad)
adc
gs
outs
mov
pushf
ror
sub
fs
shl
sbb
aad
jmp
dec
sbb
lahf
outs
adc
mov
or
shl
sbb
or
mov
cli
loope
mov
xor
or
sub
add
push
(bad)
inc
sti
inc
mov
sub
(bad)
mov
arpl
mov
sub
movs
jl
or
ja
mov
and
lods
push
movs
rcl
sbb
cmp
xchg
jns
js
out
rcl
inc
jg
push
inc
in
jl
mov
xchg
fwait
imul
pop
sub
arpl
lods
movzx
(bad)
and
pop
outs
xchg
movs
lds
repnz
int3
mov
test
pop
xor
int3
xchg
xor
pop
jnp
pop
jecxz
jbe
test
adc
sahf
rol
pop
push
push
xchg
mov
aaa
and
pop
in
int3
les
sbb
out
add
iret
popf
icebp
xchg
cmp
loope
movs
ret
(bad)
(bad)
cmp
pop
int3
rcr
jnp
repnz
jg
adc
inc
push
xchg
cmp
push
cmp
sbb
int
lds
call
not
mov
cmps
cmp
sbb
outs
or
inc
pop
or
mov
sub
cmp
pop
push
jns
sahf
push
arpl
push
pushf
lock
jb
dec
bound
or
xor
into
xor
xor
jmp
ins
aad
xor
mov
push
cmp
fcom
mov
mov
add
shl
ret
sub
cli
and
push
daa
test
push
out
in
lock
pop
loope
cmp
jp
dec
icebp
push
dec
out
fsubrp
or
and
mov
loopne
movs
mov
jnp
lahf
or
cdq
movs
loope
imul
inc
mov
cmps
push
popa
retf
popf
test
mov
inc
aaa
xchg
xchg
jmp
cdq
pushf
jbe
and
xchg
stos
popf
fcomi
and
jb
test
cmps
or
cwde
int3
repnz
cmp
imul
add
call
dec
test
inc
cs
jo
int3
lahf
ins
inc
fcom
pop
fcomip
aam
add
sub
jmp
xchg
repnz
mov
test
xchg
rol
mov
out
mov
xlat
mov
loope
or
dec
push
ins
mov
or
sub
dec
xchg
(bad)
std
cmp
pop
and
aad
adc
adc
mov
aas
icebp
es
aaa
add
jge
xchg
sbb
lock
add
xchg
dec
fcomp
mov
inc
outs
and
jmp
repnz
xor
shr
fst
xchg
fidiv
repz
mov
and
adc
int3
stos
xchg
and
std
jnp
test
fwait
cli
mov
add
fnstcw
or
pop
mov
sti
clc
xor
xchg
cwde
push
jno
in
adc
outs
jae
mov
rcl
push
test
movs
sahf
sub
cwde
xchg
lahf
fisub
aas
out
sub
daa
jnp
ins
jmp
divps
inc
aaa
push
push
xor
mov
inc
dec
pop
out
lock
enter
pop
sahf
xor
test
push
aas
jle
cli
out
mov
sbb
out
or
(bad)
adc
mov
pop
push
dec
dec
mov
adc
fild
aaa
or
mov
lods
adc
or
cmps
push
rcr
add
repz
push
gs
and
rcr
mov
sub
ficom
mov
add
push
lods
push
xor
enter
cli
je
sub
inc
in
mov
and
lahf
scas
daa
call
outs
lds
jmp
fs
call
jle
push
jp
sub
sub
sub
jp
mov
daa
jmp
stos
and
mov
int3
pop
bnd
xchg
add
push
fcomp
loop
pop
and
stos
fsub
and
shr
retf
popa
outs
add
mov
aas
mov
shl
dec
ret
lea
cmp
xlat
mov
stos
jecxz
jmp
sbb
lock
dec
inc
push
std
sbb
popa
rcr
mov
cmp
and
(bad)
push
jo
cmp
jb
cmp
xchg
outs
aam
sbb
daa
mov
cmp
mov
adc
(bad)
jmp
lock
cld
jecxz
add
fisubr
lahf
xchg
mov
mov
fwait
jge
sbb
leave
dec
mov
and
mov
and
movs
je
inc
xor
push
push
(bad)
push
pop
jg
mov
int
and
and
push
out
adc
in
mov
aaa
add
pusha
pop
xor
out
sbb
adc
std
mov
xchg
and
push
mov
mov
pop
imul
adc
out
push
ja
mov
xchg
not
ja
jle
les
push
cmp
loop
adc
mov
dec
adc
mov
xor
xor
inc
enter
pop
lea
xlat
add
pop
loopne
shr
out
xchg
inc
mov
ins
in
les
push
push
in
jl
xchg
mov
popa
out
mov
sub
js
sbb
scas
neg
ret
fnstcw
jmp
ffree
mul
cmp
cmps
lahf
adc
inc
sbb
or
inc
lods
pop
(bad)
aas
adc
aad
pushf
sti
add
or
xchg
dec
sti
xchg
jge
mov
das
les
jb
mov
retf
xchg
mov
lock
sahf
retf
push
pop
or
(bad)
cmp
int3
movs
js
es
stos
sub
xchg
push
cmp
push
rol
ins
sbb
or
jbe
jmp
xor
in
lahf
cmps
fs
rcr
pop
mov
leave
jp
mov
sbb
aaa
in
sub
dec
pop
pop
mov
retf
mov
xor
out
in
mov
or
xchg
ret
mov
pop
add
sahf
add
sub
(bad)
mov
in
in
ss
enter
pop
pop
lods
int
xor
outs
das
pop
push
xor
adc
add
in
mov
xchg
(bad)
cs
mov
mov
sub
mov
mov
add
sub
pop
add
fidivr
pop
loope
retf
xchg
mov
stos
mov
push
cdq
hlt
iret
ror
push
adc
imul
cmps
add
xor
inc
dec
mov
cmc
or
jle
mov
out
inc
repz
loope
ss
popf
or
loope
ret
add
rcl
in
mov
mov
mov
lahf
(bad)
push
test
jae
and
xor
out
jne
in
and
in
xor
iret
cmps
push
add
call
xor
and
iret
pop
xor
mov
push
stos
dec
repnz
in
fisttp
mov
fcom
fcomp
repz
add
call
xchg
not
jb
mov
(bad)
test
fisub
xchg
xchg
push
mov
sbb
enter
lods
lds
jge
or
mov
inc
add
or
fld
cdq
outs
push
sar
mov
retf
dec
xor
in
pop
movs
push
push
mov
out
xchg
or
sbb
sbb
and
dec
ins
lds
jae
dec
or
mov
pop
or
mov
scas
add
cmp
jns
inc
or
out
mov
imul
imul
add
inc
pop
daa
jns
jb
push
xor
cwde
sub
ins
iret
jg
xchg
cld
xchg
pop
and
sti
xor
sub
test
call
fmul
icebp
leave
ret
stos
pop
pop
jmp
cmp
xor
imul
nop
loope
add
jg
daa
adc
fcomp
stc
retf
lods
ficom
jg
mov
mov
pop
mov
into
sbb
and
xchg
fstp
mov
out
scas
push
int
adc
fmul
les
movs
sub
mov
mov
fdiv
add
pop
xlat
sub
add
xchg
adc
ins
push
(bad)
outs
or
push
imul
xchg
(bad)
dec
ins
rcpps
pusha
mov
jmp
mov
rol
mov
cmp
sti
sbb
popf
sub
in
movs
cdq
pushf
aas
push
ins
ja
punpckhwd
dec
mov
imul
or
adc
mov
sbb
out
dec
inc
add
shl
retf
sbb
pusha
clc
jae
push
sub
sub
retf
adc
xor
inc
xor
je
jae
lea
inc
sbb
or
dec
mov
out
cmp
ins
ficom
mov
fild
(bad)
jl
fdivr
cli
mov
call
neg
jg
push
pop
xchg
pushf
sbb
test
scas
mov
int
mov
mov
mov
test
dec
dec
sbb
lahf
leave
pop
test
xchg
shl
in
push
mov
test
imul
push
pop
inc
retf
xlat
pop
out
cli
js
xor
stos
fsubr
jb
pop
arpl
out
out
dec
in
jge
bound
test
fidivr
sub
or
inc
pop
pop
ins
iret
xor
mov
dec
loope
inc
aaa
pop
outs
jmp
lea
or
es
mov
data16
imul
cmp
pop
ins
adc
inc
ss
add
rcl
add
add
sbb
fisttp
dec
les
mov
repz
xchg
dec
add
int
inc
leave
sbb
and
mov
xchg
pop
mov
sub
adc
and
movs
mov
stc
sub
ret
stos
mov
jmp
mov
inc
aam
push
(bad)
(bad)
pop
daa
es
xchg
addr16
mov
jns
mov
xchg
retf
mov
and
(bad)
jecxz
(bad)
popf
or
inc
arpl
in
aaa
xor
loopne
jne
imul
(bad)
dec
test
(bad)
cmc
adc
push
out
push
pop
test
ficomp
(bad)
sub
pusha
sub
loop
push
jb
push
mov
scas
jg
push
sahf
popa
or
mov
cmp
mov
push
jmp
xor
test
ss
popa
mov
int
stos
xor
xor
xchg
loop
add
push
push
jecxz
and
femms
test
mov
into
push
pop
cmps
std
mov
mov
mov
pop
dec
scas
imul
fs
mov
out
push
retf
pop
or
push
add
mov
mov
stos
out
lea
xchg
mov
mov
mov
idiv
fsub
sbb
add
movs
ins
bound
enter
xchg
push
pop
sub
int
int
rol
inc
clc
mov
stos
cmp
inc
dec
xlat
js
or
in
fucom
clc
mov
repnz
jbe
jp
enter
hlt
gs
loop
jecxz
add
mov
out
iret
jb
inc
pop
inc
mov
pop
dec
scas
mov
mov
and
retf
adc
sub
add
xchg
sub
rcr
je
pusha
or
ret
retf
xchg
adc
into
push
popa
clc
push
stos
and
sub
push
sbb
shr
mov
mov
(bad)
mov
je
mov
push
inc
mov
and
mov
mov
cmc
xor
inc
rcr
call
dec
je
test
gs
fcmovnb
dec
test
aam
dec
sub
lods
sahf
lds
pop
dec
fmul
outs
sbb
dec
loope
cli
push
mov
daa
js
sub
ins
lods
inc
mov
or
sub
pop
in
add
lock
outs
(bad)
sti
cmp
add
aam
mov
xadd
jl
lds
jmp
repz
jecxz
mov
(bad)
jecxz
cmp
shr
inc
mov
leave
shr
int
xchg
dec
std
or
pop
js
dec
jg
adc
outs
xchg
cmp
cld
push
sub
cwde
iret
mov
nop
pop
jp
cwde
fstp
es
adc
inc
mov
(bad)
xor
cmc
mov
sbb
int3
mov
test
mov
jbe
ss
sbb
cmp
mov
xlat
pop
jno
push
sub
xchg
ficom
mov
lds
fwait
add
jnp
sub
lock
fsub
movs
int3
adc
inc
repnz
mov
js
dec
mov
ins
sub
test
cmps
movs
add
dec
aaa
sbb
or
add
test
bound
inc
cmp
push
in
or
popf
cmp
pop
aam
(bad)
in
cs
mov
lods
xchg
(bad)
mov
xor
and
adc
add
ror
pop
iret
bnd
outs
or
inc
shl
ja
sub
psubusb
inc
rcl
fiadd
rcr
cmps
mov
movs
not
imul
cld
xor
into
mov
sbb
push
mov
js
push
sbb
enter
ret
inc
je
je
mov
jg
mov
sbb
call
(bad)
iret
pop
arpl
push
movs
mov
jge
sbb
dec
je
out
(bad)
cmps
jo
sbb
jno
and
cld
ss
cmp
fistp
cmp
test
fucomip
pusha
mov
leave
dec
hlt
pushf
mov
js
in
(bad)
outs
adc
out
and
loop
pop
in
or
push
mov
movs
dec
xchg
in
not
mov
repz
adc
xor
adc
lds
in
mov
jae
popa
inc
cmp
pushf
inc
adc
lods
push
mov
cmps
xor
sub
fnsave
cdq
pop
sub
or
jno
add
push
ja
loope
mov
mov
sbb
mov
sub
call
jp
loop
jecxz
mov
jl
push
test
pop
into
ins
bound
(bad)
add
adc
mov
xchg
add
push
dec
fwait
movs
inc
push
arpl
or
dec
repz
mov
mov
ficomp
jne
jg
aad
int3
adc
mov
xor
ins
adc
mov
push
scas
mov
repz
jmp
outs
sub
inc
add
pop
mov
out
or
sub
inc
dec
retf
jno
pop
retf
lods
dec
(bad)
jae
dec
or
test
call
dec
add
test
lea
fisttp
xlat
ret
jae
out
cmps
adc
data16
push
xor
shl
cld
or
jb
fist
ss
data16
cmp
mov
sub
sub
xor
dec
loopne
dec
and
pop
sub
stos
mov
xchg
mov
sub
loope
enter
add
mov
movs
bound
inc
loop
enter
cmp
in
or
int
pop
and
js
and
das
add
movs
cmc
jg
mov
call
inc
and
dec
pop
aad
gs
ds
mov
sbb
cld
cmp
outs
and
popa
cld
in
test
push
ja
rcr
(bad)
cmp
pop
loopne
icebp
cdq
call
push
pushf
push
lods
cmc
or
sbb
cld
arpl
jne
imul
mov
leave
call
adc
inc
mov
fbld
in
jmp
cli
and
mov
push
mov
cmc
sbb
cmp
inc
pop
xor
cdq
stos
pop
das
stos
cmps
les
mov
or
adc
push
jnp
clc
scas
cmp
stos
cmp
ss
(bad)
frstor
leave
mov
cmp
nop
cs
sbb
cmc
xor
mov
popf
cmp
ror
pop
adc
sahf
dec
or
xchg
lods
xchg
ss
cmp
es
add
xchg
sub
es
add
pop
(bad)
outs
fadd
xchg
in
nop
leave
test
lea
fs
mov
jae
cdq
inc
imul
cs
enter
mov
test
lds
movs
mov
ins
popa
lahf
ret
aam
js
cmp
je
ins
xor
mov
in
enter
dec
push
add
ss
(bad)
xor
stos
adc
sbb
(bad)
xchg
or
cwde
sbb
cmps
test
shl
mov
pop
mov
push
jp
cli
neg
mov
mov
jmp
sub
(bad)
adc
loope
(bad)
or
mov
mov
int3
(bad)
ins
cmp
movs
les
jns
pop
stc
loopne
fs
cli
add
jl
mov
out
add
gs
aad
xchg
push
call
iret
inc
shl
stc
or
(bad)
mov
in
jno
rcl
mov
les
push
fdivr
out
add
call
mov
jo
or
int3
sbb
stos
fs
mov
addr16
pop
cmp
pop
pop
adc
xor
xchg
sub
inc
sar
ror
aam
mul
or
mov
mov
adc
test
xor
dec
fs
jno
xor
push
out
push
add
dec
in
sub
push
jp
sub
or
stos
push
or
movs
(bad)
out
xor
into
imul
mov
(bad)
ds
adc
push
pop
jp
xchg
push
stos
loop
sbb
mov
inc
xchg
sbb
dec
gs
add
add
(bad)
mov
inc
je
fdivrp
jmp
add
(bad)
es
ds
out
mov
add
push
icebp
fist
outs
rcl
sbb
xor
loopne
popa
pop
push
inc
jg
mov
push
xchg
lods
sub
cmp
mov
mov
push
pop
or
enter
(bad)
jl
imul
nop
mov
mov
xor
jmp
sti
dec
or
add
inc
xchg
movs
fwait
(bad)
lods
dec
dec
pop
cmps
(bad)
sar
(bad)
cmc
sahf
sbb
sbb
(bad)
adc
sti
lea
xor
out
ret
je
push
xlat
pop
mov
mov
out
and
mov
and
jbe
xor
mov
xor
xchg
push
hlt
fs
push
dec
pop
inc
dec
cmc
cmp
lock
inc
rcl
(bad)
pop
adc
movs
scas
popa
div
int3
ds
sbb
js
hlt
inc
ds
retf
or
push
int
sub
dec
cmp
rcl
and
lods
shr
xor
add
pop
ds
xchg
push
push
pop
cwde
jae
and
dec
in
mov
cmps
les
data16
inc
aam
xor
push
sub
push
fcmovb
mov
les
es
mov
push
and
xchg
mov
out
pop
(bad)
fld
inc
adc
cmp
stc
int
pop
fdiv
cmp
pop
push
mov
mov
or
xor
mov
es
fcom
and
jno
rcr
pop
jge
loope
clc
aam
aad
sbb
adc
inc
add
cmps
push
aas
mov
adc
push
push
add
xor
push
mov
mov
test
add
jge
ret
retf
ret
adc
push
adc
rcl
pop
or
outs
das
fwait
add
or
jl
pop
jo
jge
or
inc
and
mov
lods
ret
(bad)
jmp
and
retf
stc
repz
pop
(bad)
sbb
fsub
adc
sbb
mov
sbb
fmul
fnstcw
mov
enter
dec
mov
jo
in
not
int3
es
cmp
xor
loopne
sbb
inc
(bad)
push
aaa
aas
jo
push
retf
(bad)
imul
jb
test
jle
push
lods
jle
movs
loope
push
sahf
push
sbb
mov
int
add
jno
jb
retf
fdivr
sub
icebp
in
mul
in
test
add
aam
add
adc
lods
and
leave
cmps
cmp
jmp
cmp
or
pop
xor
mov
xchg
push
sbb
imul
pusha
es
mov
test
(bad)
sub
in
mov
mov
loopne
adc
mov
inc
xor
sub
inc
mov
shl
call
out
and
push
pop
into
mov
cmp
nop
adc
or
pop
(bad)
push
push
mov
adc
jg
push
xchg
sub
out
cmp
imul
gs
pop
push
mov
icebp
xchg
push
push
cmp
(bad)
xchg
fidivr
push
mov
or
xor
dec
bound
xchg
in
or
jmp
sbb
dec
jmp
cmps
pop
sbb
dec
repnz
sti
adc
add
xchg
data16
ins
lahf
outs
cs
xor
popa
pop
dec
pop
test
mov
cld
and
(bad)
clc
push
test
jg
test
pop
inc
push
out
pop
push
movs
out
mov
pop
add
mov
or
mov
bound
or
mov
popa
xchg
ins
fs
mov
(bad)
xchg
fs
mov
mov
sub
push
fstp
xor
xchg
mov
fwait
test
sbb
or
bound
push
pop
mov
push
add
jnp
add
xchg
push
popf
pop
loop
mov
sub
adc
pop
lahf
mov
pop
push
mov
loope
std
lods
js
es
pop
pop
jo
or
jl
clc
jo
call
push
test
push
pop
adc
xchg
in
sbb
inc
lock
dec
add
pop
pop
(bad)
ds
adc
into
xor
pop
sub
lods
xor
test
mov
lds
cmps
dec
inc
jne
jmp
rol
sbb
outs
aad
std
sbb
add
sub
push
adc
test
push
ret
and
in
mov
ss
ins
test
mov
pusha
mov
out
(bad)
sbb
xchg
mov
mov
fs
inc
repz
sub
sbb
mov
sbb
retf
sub
loopne
out
test
or
inc
cmp
sbb
dec
int
ret
mov
mov
test
loope
lahf
or
into
pop
repnz
mov
aaa
xor
push
jecxz
push
jnp
cmps
out
sar
cli
sub
loope
loopne
std
scas
loop
cmps
fsubr
test
lds
bound
(bad)
jp
shl
jnp
pop
mov
loop
jmp
pop
sbb
cld
push
pusha
pusha
ins
out
add
inc
in
pop
xor
gs
push
push
sub
or
js
leave
and
push
pushf
dec
nop
dec
xlat
push
xor
in
adc
push
inc
shl
add
das
mov
sahf
arpl
sbb
aam
es
cwde
mov
jns
xchg
sub
ret
jl
cwde
cmp
(bad)
mov
fstp
leave
popa
cld
enter
cmp
fdiv
cmp
jl
in
xor
dec
jb
mov
test
(bad)
cdq
fmul
bound
or
and
pop
stc
jp
dec
loope
in
pop
pop
pop
scas
lock
add
jmp
cwde
ins
clc
shl
sbb
fisubr
mov
mov
inc
fs
and
pop
mov
mov
arpl
test
push
fisttp
icebp
adc
ret
sti
mov
int
jl
retf
push
jno
js
dec
add
inc
dec
pop
jbe
inc
dec
sti
add
int
test
jb
inc
call
cmp
pop
mov
and
ins
mov
jo
in
jecxz
or
(bad)
lock
in
jno
lods
mov
adc
ret
loop
mov
cmp
shl
arpl
xor
fs
cli
push
mov
cmc
jg
shr
xor
or
mov
pop
push
jl
sbb
and
call
cmp
rcl
xlat
inc
xchg
retf
xor
inc
sar
ds
cmp
int3
push
sub
sub
pop
outs
je
sar
stos
popa
das
jbe
(bad)
cmps
jne
loopne
sub
sub
mov
cmp
inc
adc
fdivr
push
jmp
add
pop
fsubr
ins
test
sahf
cli
adc
add
sbb
stc
push
jle
push
in
jmp
xor
test
mov
push
push
pusha
cmc
xor
pop
retf
push
sub
or
dec
movs
jae
jmp
push
sahf
and
push
cmc
push
sub
mov
xor
sub
xor
ds
icebp
push
jbe
sub
jge
xor
pushf
sub
(bad)
cld
or
cmp
cmp
jl
in
movs
repz
hlt
out
jns
out
and
fcom
push
inc
loope
mov
(bad)
faddp
mov
sar
pop
cwde
cmp
cwde
sahf
and
jmp
rcr
inc
ret
mov
popa
mov
jbe
(bad)
dec
mov
aam
jecxz
ret
push
inc
shr
cmp
and
retf
fidivr
lea
adc
mov
cmc
aad
and
repz
lods
jbe
jmp
movs
fisttp
pop
ret
test
pop
or
comiss
cmp
test
push
sbb
aaa
jnp
cli
xlat
nop
loop
aas
lock
sbb
xchg
and
push
setnp
mov
xor
popf
mov
jne
sbb
xchg
repz
inc
push
ror
sub
cmp
adc
pusha
(bad)
or
stos
out
adc
dec
mov
imul
leave
ins
test
out
push
imul
jns
stos
div
aam
in
or
dec
and
addr16
and
jmp
push
pop
test
inc
mov
int
mov
xor
adc
neg
push
out
jmpw
lea
mov
cwde
aad
(bad)
(bad)
mov
mov
sub
(bad)
fld
xor
(bad)
les
sub
pop
cdq
pop
dec
mov
mov
cmp
adc
stos
movs
jmp
cmp
ins
xchg
pop
mov
pop
pusha
test
add
shr
jecxz
pop
mov
pop
cmovno
xor
ss
pusha
xor
mov
inc
jbe
imul
or
jbe
popf
and
cmps
gs
pop
daa
retf
fadd
cmp
stos
mov
mov
add
cs
scas
xchg
mov
xchg
adc
lods
lea
in
movs
clc
mov
pop
shrd
adc
and
not
adc
shl
mov
jnp
clc
cdq
and
loope
iretw
add
add
jmp
in
cdq
xchg
adc
scas
inc
pop
jmp
adc
pop
add
out
pushf
(bad)
cmps
and
cmp
mov
mov
outs
push
fcom
test
lahf
lods
(bad)
push
data16
sbb
test
push
push
mov
call
and
hlt
push
fwait
jl
sub
cmp
sahf
mov
push
leave
mov
sahf
jmp
xor
pushf
nop
in
cmps
inc
cmp
pop
mov
aaa
jmp
imul
lea
sub
mov
jns
je
xor
outs
add
xor
mov
ds
scas
mov
mov
stos
dec
xor
mov
mov
push
lods
mov
imul
sub
or
mov
sar
jmp
out
push
xchg
xchg
push
xor
mov
fdivrp
call
fsub
sub
imul
or
jmp
mov
out
sbb
sbb
aas
je
dec
mov
push
mov
int3
sbb
test
retf
mov
gs
adc
mov
pop
movs
enter
ja
in
xor
out
push
sub
xor
and
mov
mov
cs
mov
sar
push
sub
js
xchg
test
xor
and
lods
daa
test
neg
pop
adc
je
shl
pop
inc
or
cmp
pop
inc
jg
repnz
lea
ja
cmp
mov
stc
jge
rcl
mov
lods
jecxz
jmp
pop
sub
pushf
enter
add
fsub
jg
push
stos
cdq
and
retf
repz
popf
(bad)
(bad)
outs
and
movs
sti
movs
or
cmp
repnz
xor
mov
jge
push
cmp
hlt
cwde
push
stos
mov
cwde
xchg
hlt
sub
add
aaa
shl
out
lock
push
add
std
jnp
cld
inc
or
or
iret
jo
stos
stc
push
fs
cwde
les
xor
dec
lock
call
sbb
dec
cwde
stos
pop
or
xor
loopne
sbb
dec
fistp
daa
cs
sub
call
test
jno
iret
mov
pusha
pop
add
fstp
dec
pop
mov
adc
int
push
mov
adc
jecxz
imul
lock
pushf
sbb
dec
xchg
adc
cmp
pop
test
in
xchg
ds
jne
add
cmps
mov
out
jecxz
push
adc
stos
or
xchg
pop
inc
sar
mov
retf
sub
out
(bad)
lock
cmp
inc
cwde
lock
mov
mov
stc
nop
loope
std
jne
inc
mov
imul
sbb
xor
inc
inc
mov
sbb
jg
sub
inc
pop
clc
or
mov
push
cmp
mov
mov
dec
jmp
push
mov
ficomp
or
movs
js
jae
pop
rcl
fadd
xchg
mov
or
dec
enter
mov
fucomip
cmp
out
sar
mov
add
or
mov
add
add
mov
add
push
lds
in
(bad)
repz
mov
ret
das
sti
xor
push
call
mov
adc
lahf
pop
in
push
add
(bad)
cdq
or
pop
cmp
mov
adc
inc
out
cmp
jne
push
xor
es
popa
cwde
clc
cdq
sbb
pusha
sti
or
inc
in
mov
lock
in
fist
outs
aam
and
pop
sar
inc
in
mov
int
mov
or
fnstsw
pop
cdq
lods
jmp
test
ret
cmps
pop
ss
lods
hlt
(bad)
aam
and
push
push
sbb
das
lods
push
popa
sub
sbb
sbb
cmps
mov
and
popf
xor
mov
lea
fcom
mov
out
test
das
mov
lods
inc
sub
jmp
cmps
cmps
sub
dec
es
jae
xchg
lds
jl
xchg
push
stos
call
mov
ret
iret
xchg
adc
inc
cmp
(bad)
jl
pop
mov
sub
jg
xor
xor
out
scas
inc
sbb
pop
(bad)
js
clc
and
dec
js
ins
sbb
pusha
jno
aaa
js
mov
xchg
fisttp
fidivr
lock
ficom
cmp
in
stos
cmp
fiadd
je
ins
mov
mov
jge
adc
cmp
arpl
jl
cld
cmp
adc
xchg
call
into
or
pop
mov
stos
fidivr
or
cli
mov
pop
mov
pop
das
inc
(bad)
retf
adc
or
sbb
cmp
push
inc
loope
and
(bad)
inc
popa
inc
mov
dec
ss
xlat
adc
movs
or
cmps
movs
dec
(bad)
out
cmps
mov
and
sar
fmul
repz
or
xchg
mov
mov
push
mov
inc
in
into
cmp
pop
or
lock
cdq
adc
cdq
or
adc
call
dec
sti
ret
iret
repz
add
in
scas
jp
ja
xor
lahf
js
into
idiv
mov
inc
inc
popa
cmps
(bad)
jne
loop
test
(bad)
cmps
mov
arpl
pop
ins
pop
push
ror
xchg
sub
cmp
dec
pop
lds
xchg
jmp
xor
stc
ins
push
inc
sub
inc
fsubr
ja
(bad)
les
pop
inc
sub
push
sbb
retf
adc
(bad)
in
sbb
jmp
jmp
das
not
jae
arpl
inc
jbe
gs
adc
cmps
sti
mov
pop
pop
stos
jle
repnz
fnstsw
xchg
(bad)
out
xor
xchg
fwait
cdq
jns
inc
and
addr16
push
aad
mov
mov
dec
shl
scas
cmp
sbb
mov
mov
popf
add
clc
xchg
data16
(bad)
xchg
shl
in
popa
out
dec
xor
sbb
sahf
cmp
and
add
pop
or
pop
sbb
ss
bound
inc
mov
out
sbb
ja
jno
and
add
pushf
jo
into
lock
jnp
dec
loop
sar
out
push
mov
jns
inc
sbb
pop
fsubr
lea
adc
mov
(bad)
xchg
out
mov
mov
and
xor
jbe
add
scas
add
cmp
jns
pop
jmp
add
fld
lea
jb
xchg
mov
adc
repz
sbb
or
imul
movsx
or
or
jbe
iret
adc
ds
std
lock
adc
iret
sub
das
mov
(bad)
sub
stc
and
push
jle
fucomip
jmp
lods
repnz
jecxz
sbb
xlat
pop
push
jg
div
cli
xchg
pop
js
ins
fstp
aad
std
jl
adc
out
out
mov
in
daa
push
aaa
fucomi
sub
mov
cmp
in
xchg
adc
(bad)
sub
xlat
and
addr16
aad
dec
lea
sar
sbb
dec
ret
xchg
xchg
xchg
xor
cdq
call
mov
ret
js
add
out
ficomp
jnp
sbb
add
push
sub
pop
lods
pop
xor
sahf
pop
or
ins
push
movs
sahf
xor
and
pop
bound
or
fdivr
test
ins
daa
jbe
mov
jns
and
outs
outs
repz
movs
mov
or
mov
mov
fnstsw
outs
out
mov
sub
cmc
aad
adc
jmp
out
clc
or
sbb
push
ja
adc
mov
jne
mov
xchg
jmp
dec
fnsave
push
enter
gs
and
xchg
or
das
adc
jb
push
cmp
push
in
ja
mov
mov
inc
out
scas
mov
sbb
lahf
sub
mov
test
scas
daa
aaa
out
dec
call
or
std
push
add
jne
aam
push
pop
pop
xchg
(bad)
loopne
add
mov
pushf
xlat
das
jne
int
sub
push
push
inc
jae
fwait
or
fwait
push
push
pusha
dec
std
fild
adc
rcl
jle
sti
cmps
leave
out
repz
shl
into
dec
xchg
or
cmp
xor
rcr
cdq
push
cmps
adc
js
popa
mov
mov
lods
arpl
sti
push
lds
(bad)
aam
in
repz
sbb
out
inc
pop
mov
adc
jg
mov
xchg
add
sub
fnstcw
dec
loopne
xchg
inc
mov
stc
dec
push
cmp
add
test
mov
iret
or
xor
rcl
mov
or
inc
mov
cmp
mov
arpl
cmp
inc
dec
cmp
jg
out
(bad)
cmp
ret
ds
cwde
shr
mov
sub
mov
leave
cld
daa
dec
xchg
add
test
sar
push
mov
cmp
push
and
sub
adc
cli
jns
fild
jae
mov
jl
gs
pop
mov
push
in
icebp
ss
(bad)
inc
or
push
sbb
fmulp
xchg
loop
(bad)
sub
call
xchg
push
xor
dec
cwde
sub
jnp
out
bound
in
sub
mov
jg
gs
dec
mov
(bad)
xor
out
fstp
inc
jg
xchg
rol
xchg
sti
add
popf
jmp
mov
shl
cmp
mov
leave
jecxz
popa
dec
inc
push
pusha
pop
add
push
or
pop
inc
jmp
xchg
sub
ficomp
dec
pop
sbb
adc
inc
push
stc
sub
adc
sbb
inc
xor
jmp
xchg
xchg
(bad)
push
aad
inc
cmp
fcomip
push
(bad)
rol
push
js
mov
push
(bad)
clc
sti
daa
loope
int3
cmc
jg
adc
repnz
sub
xor
sahf
mov
scas
sbb
(bad)
jecxz
mov
test
push
cmps
iret
pop
hlt
fiadd
cmp
sahf
daa
sub
xchg
mov
or
push
in
xchg
imul
sbb
add
bound
push
jg
pop
loop
push
or
test
inc
pop
addr16
ficom
push
sub
imul
ret
jae
repnz
cs
cmovb
fcmovnu
cwde
ja
mov
pop
lds
pop
in
fst
xchg
cmp
ins
pushf
fstp
test
dec
jp
ror
fisttp
add
mov
popa
(bad)
frstor
in
inc
inc
jns
mov
jae
jae
jmp
pop
gs
nop
bound
adc
ja
mov
repnz
add
cmps
xor
dec
pop
sub
xor
and
movs
or
mov
and
push
push
gs
mov
inc
cmp
pop
mov
popa
add
and
fsub
aam
sti
(bad)
pushf
(bad)
ror
movs
mov
sub
(bad)
gs
pop
push
frstor
or
jmp
and
sub
ja
rcpps
cwde
cmp
ds
sub
inc
jge
jmp
sar
mov
cli
hlt
cwde
add
adc
scas
inc
add
push
xor
cmp
xchg
in
add
aas
add
and
leave
or
xchg
sbb
sub
jl
jno
shl
icebp
mov
cmp
inc
iret
xchg
stc
inc
sub
movs
outs
imul
ins
fsubr
shr
and
es
cmp
pop
in
jo
push
or
adc
lds
repnz
inc
inc
mov
(bad)
pusha
mov
movs
sbb
sbb
aaa
lods
sbb
sub
dec
adc
xor
xchg
cwde
pop
shl
movs
into
sub
ret
enter
dec
push
xchg
add
dec
adc
lods
jg
sbb
fimul
clc
addr16
sar
inc
test
dec
sbb
movs
dec
pop
sti
cmp
pop
lea
cld
xchg
mov
shl
cmp
mov
inc
jecxz
push
cmp
jbe
pop
call
(bad)
dec
cli
jne
sub
xchg
or
outs
or
jns
cmp
adc
loop
xor
popa
idiv
xchg
push
mov
lahf
push
xor
rol
cmp
test
mov
mov
mov
pop
add
adc
out
adc
sbb
mov
xor
cmp
fisttp
cmp
cmp
arpl
mov
arpl
sbb
xchg
arpl
pop
(bad)
imul
enter
ds
sahf
add
sbb
repnz
out
lock
int3
jno
rcl
daa
and
mov
and
xor
clc
stos
pop
xchg
pop
fisubr
loop
lds
int3
push
cmc
push
iret
push
cmp
jl
(bad)
sub
add
dec
clc
daa
out
pop
xor
retf
out
cld
and
jns
pop
sbb
push
fcmovnu
test
shl
xor
mov
jle
ret
cmp
ss
dec
xchg
in
push
mov
inc
rcr
mov
daa
mov
jns
(bad)
popf
add
fld
cld
jns
sbb
pop
sbb
ds
fist
iret
outs
in
jns
xchg
repz
int
add
int
rcl
outs
push
pop
shl
sti
ss
jmp
add
jge
rcl
mov
fcmovnu
cli
sub
inc
movs
mov
jge
lock
jae
pop
push
and
movs
mov
mov
dec
pop
jecxz
sub
cmp
in
sub
(bad)
(bad)
jb
pop
xchg
shl
imul
xchg
dec
add
pusha
pop
sbb
ret
psrad
nop
lods
aad
mov
dec
sub
fistp
push
retf
mov
ja
fwait
cmps
adc
or
cmp
push
mov
xor
ja
fwait
aam
push
dec
gs
pop
adc
mov
sub
fst
stc
mov
sub
addr16
test
js
cli
pop
xor
pop
pushf
mov
cld
xor
cmp
dec
ins
mov
js
pop
test
or
xor
cmc
xchg
cli
scas
pop
leave
jg
loopne
jae
pop
lahf
pop
repnz
stos
or
push
or
add
dec
push
mov
mov
scas
pop
fwait
xor
retf
sahf
(bad)
fld
xor
pop
ret
out
cdq
dec
pop
call
xchg
inc
add
ret
push
je
cmp
daa
mov
ficomp
das
mov
enter
lock
and
addr16
xlat
cmovae
mov
push
adc
push
test
shl
jmp
xchg
sub
das
push
lahf
shr
dec
dec
lahf
pushf
sbb
jecxz
dec
outs
pop
pusha
cmp
inc
in
ja
xchg
aad
adc
repnz
inc
fidivr
mov
cmps
repz
cmps
repnz
scas
test
xchg
retf
scas
pop
pusha
push
or
stos
mov
out
push
xlat
in
mov
jg
pop
test
add
call
enter
sahf
add
fst
leave
xchg
push
push
test
(bad)
ficomp
movs
push
xor
cmc
pop
call
xchg
ds
xor
xchg
ss
(bad)
add
dec
(bad)
scas
sbb
std
leave
cmp
cmp
inc
xlat
std
cs
mov
xchg
and
(bad)
push
sti
jp
mov
jo
or
and
(bad)
mov
cmps
inc
mov
xor
fild
mov
xor
fld
inc
jp
aad
pop
jnp
lds
sbb
ror
or
mov
rcl
jae
mov
lea
js
pop
in
(bad)
outs
in
test
adc
xchg
call
mov
mov
fcomp
dec
xchg
jle
push
cmps
mov
or
inc
adc
push
jmp
sbb
add
jp
jl
jmp
lea
sbb
push
jbe
push
repnz
fisub
aaa
mov
leave
pop
sbb
jg
ss
out
mov
jns
and
mov
jns
lahf
ret
loop
in
retf
pop
adc
sbb
push
jp
jmp
cmc
fdiv
adc
inc
cmps
imul
sbb
push
adc
jecxz
ja
loop
dec
inc
mov
(bad)
sbb
sub
pop
mov
push
sbb
adc
ret
fadd
pop
push
adc
xchg
std
and
jle
pop
das
xchg
xor
xor
icebp
xchg
ret
pop
out
and
mov
pop
xor
sbb
outs
push
cli
int
outs
and
xor
or
sub
jbe
cmp
ins
mov
xchg
rcl
xchg
test
jbe
scas
sub
adc
std
inc
xor
ja
shr
or
inc
mov
nop
sti
cmp
push
out
rol
mov
and
xor
hlt
add
sbb
aaa
mov
outs
(bad)
pop
mov
daa
lea
pop
movs
jmp
call
test
jge
imul
lds
push
popf
xor
call
sbb
inc
scas
mov
or
mov
bound
aas
or
icebp
aad
mov
sbb
hlt
push
inc
jecxz
call
fistp
pop
push
ror
hlt
mov
stos
into
add
or
test
adc
addr16
pop
pop
adc
push
bound
or
xlat
sub
adc
sti
clc
sub
inc
xlat
adc
das
dec
sub
push
jge
xor
clc
jp
out
ret
not
js
(bad)
in
jg
adc
imul
push
push
inc
mov
push
(bad)
and
and
or
mov
aas
ins
stos
call
xor
sub
ins
mov
push
mov
mov
imul
push
cmps
not
add
stos
sbb
mov
adc
inc
push
stos
sar
mov
repz
call
xor
mov
pop
mov
cmps
lods
pop
adc
sub
add
stos
mov
mov
scas
sub
xchg
inc
lods
enter
jnp
jmp
adc
sbb
fcomi
inc
adc
fld
cmp
jg
(bad)
dec
or
mov
ins
sbb
jne
sub
inc
mov
outs
sub
repnz
pop
icebp
adc
or
xchg
bound
jb
adc
movs
scas
push
sbb
add
add
dec
and
mov
adc
test
shl
popa
pop
cwde
mov
jg
cmp
mov
pop
xchg
adc
sub
xchg
daa
pushf
inc
or
mov
ret
push
sti
and
xor
(bad)
inc
out
or
cmp
in
imul
push
or
push
sub
not
mov
xchg
lock
dec
xchg
jbe
stos
xchg
pop
imul
ins
mov
xchg
mov
fwait
enter
mov
nop
bound
xchg
cmp
inc
sub
jo
arpl
(bad)
fbstp
cmp
ror
gs
enter
and
out
loop
cmp
xor
cmc
pushf
cmp
jg
arpl
(bad)
imul
(bad)
aaa
mov
leave
push
and
jle
in
jg
retf
xchg
dec
loopne
inc
(bad)
mul
pavgb
(bad)
in
sub
test
xor
push
ret
lahf
cmp
add
push
(bad)
cmp
(bad)
retf
and
mov
dec
jno
int3
retf
pop
lods
sub
or
cmp
jmp
mov
popf
mov
shl
xor
cmp
inc
into
cmp
fld
sub
popa
scas
add
push
lea
std
jg
or
cmp
test
mov
mov
cmp
div
aas
imul
movs
or
jle
dec
aas
add
fld
push
ret
mov
jp
lahf
pop
adc
sbb
stos
sbb
stc
push
dec
popf
in
push
sub
jnp
and
je
mov
cmp
mov
or
pop
(bad)
aas
inc
inc
outs
lods
ret
cdq
push
hlt
mov
scas
test
xor
and
bound
bound
ins
aaa
aam
scas
dec
push
mov
adc
add
mov
xchg
push
push
add
push
xchg
and
dec
imul
mov
clc
push
mov
adc
sub
or
inc
xchg
pop
inc
jb
fld
loopne
das
sub
pop
test
adc
mov
arpl
inc
jmp
mov
mov
xchg
rcr
sub
add
jle
or
add
outs
repz
enter
mov
xor
loopne
push
cld
dec
mov
push
adc
fmul
pop
lods
mov
inc
push
in
xchg
scas
sahf
inc
mov
and
bound
dec
repnz
sub
ret
fcmovbe
pop
push
sub
dec
mov
ins
scas
xchg
push
mov
mov
add
jge
push
cmp
fstp
xchg
gs
fimul
aas
xchg
ret
xchg
push
adc
addr16
mov
mov
jb
jb
pop
(bad)
mov
inc
xchg
outs
ficomp
ins
sbb
pushf
cs
and
or
sbb
add
sar
retf
xchg
loope
test
ins
push
daa
pop
(bad)
push
in
dec
inc
jg
out
xchg
in
cs
sub
popf
dec
das
fcom
mov
loopne
mov
jno
jmp
clc
jmp
pop
jle
add
adc
je
std
adc
ret
in
nop
test
mov
js
sub
js
cld
jo
push
outs
std
leave
aas
xchg
inc
mov
repnz
jnp
aad
inc
add
fisttp
push
sub
sbb
cmp
mov
pop
in
hlt
mov
dec
xchg
imul
dec
or
cs
mov
dec
stos
and
je
mov
nop
lods
mov
or
mov
daa
movs
and
cmps
xor
pop
mov
loope
sub
pushf
sbb
ins
xor
fiadd
fdivr
movs
or
pop
das
cmp
jne
shl
cmp
or
xrelease
(bad)
push
dec
pop
xlat
popf
shl
push
movs
das
in
inc
(bad)
fcomp
imul
fcmovu
push
stos
push
push
cli
repz
pop
mov
ficom
(bad)
cmp
pop
and
call
shl
sahf
xchg
stos
call
cmp
push
jge
push
sbb
xchg
std
sbb
ja
xchg
fld
je
out
or
mov
cwde
clc
push
pusha
xor
inc
pushw
sbb
xor
push
mov
stos
cmp
push
mov
mov
push
sub
jmp
jl
adc
jb
adc
xchg
repz
mov
xchg
push
and
imul
mov
mov
cmp
(bad)
jae
jl
xchg
(bad)
fmul
adc
fwait
or
sbb
shr
arpl
sbb
fwait
mov
fsubr
movs
cmp
pop
stc
and
loope
aaa
shr
shl
pop
lock
ins
inc
inc
imul
mov
jg
ret
loope
jmp
pop
pusha
pop
rcr
inc
call
popa
or
and
dec
push
push
jge
and
ror
adc
push
sbb
test
pop
inc
adc
ds
mov
js
adc
fwait
cdq
popf
ins
inc
xchg
scas
out
sub
rcl
call
pusha
mov
xor
inc
ret
and
push
loop
int
xor
jbe
and
pop
add
cld
popf
or
or
sbb
icebp
inc
in
xor
pop
aad
jl
jecxz
inc
loopne
mov
pop
hlt
mov
jle
clc
or
call
lds
(bad)
sar
push
enter
mov
xlat
sahf
xor
sti
imul
mov
jae
gs
mov
jbe
lea
mov
jne
in
aas
inc
outs
lock
jmp
xor
pop
shr
enter
push
cmp
xlat
test
jle
and
pop
std
aaa
shl
mov
pop
or
adc
fmul
adc
mov
jne
xchg
jg
xchg
fcmove
in
mov
std
xor
sub
cmc
mov
sub
dec
sbb
mov
outs
aad
xchg
data16
lds
mov
cmp
pushf
sbb
jp
lahf
sbb
adc
test
add
xor
cdq
out
bound
and
out
fs
pop
aaa
lds
mov
movs
ja
sbb
mov
dec
dec
sbb
xchg
inc
or
and
xchg
mov
aas
scas
stos
push
push
add
adc
std
cmp
or
cmp
adc
ret
dec
jb
movs
fcomp
inc
fdivrp
scas
vmovhpd
std
les
dec
ret
aam
ret
xchg
test
add
sahf
cmp
xchg
push
in
mov
jmp
stos
mov
cmp
or
dec
jns
rcl
sti
adc
cmc
stos
gs
xorps
and
ins
xchg
pop
outs
or
and
pop
cmovae
xor
pushf
mov
gs
aad
inc
popf
push
out
jnp
imul
dec
add
mov
mov
pop
sub
(bad)
pop
loop
inc
dec
outs
out
bound
stos
icebp
movs
cmp
add
mov
stos
sub
imul
mov
xchg
mov
jmp
mov
or
test
cmps
inc
sahf
mov
pop
imul
jae
sbb
dec
(bad)
xor
push
sub
and
gs
in
test
xor
lds
cs
xchg
fiadd
call
cmp
repz
jmp
pushf
cs
inc
dec
int3
inc
inc
dec
shr
mov
inc
inc
dec
xor
xor
xchg
out
adc
neg
mov
and
xor
and
mov
sbb
jg
cmp
outs
inc
sub
stos
push
ret
dec
rcr
dec
add
lea
mov
or
xchg
pusha
push
daa
mov
and
mov
jmp
leave
mov
adc
sub
push
scas
cli
out
dec
lahf
retf
dec
sub
cmps
pusha
aam
jecxz
aaa
aaa
cmp
daa
pushf
sahf
iret
in
pop
fidiv
xchg
mov
sbb
push
sbb
stc
or
xchg
test
cmc
push
jmp
sbb
dec
fincstp
push
cli
add
sbb
xchg
sub
imul
(bad)
stos
or
mov
push
jle
out
xchg
push
in
add
aas
hlt
loop
push
inc
xchg
and
scas
jecxz
outs
mov
not
mov
mov
mov
test
and
sti
fist
xor
(bad)
adc
jmp
push
stos
xlat
push
dec
add
jmp
or
xchg
(bad)
fldlg2
push
sub
jmp
ss
mov
punpckhdq
push
jmp
dec
dec
inc
add
aad
mov
add
fs
call
jns
xchg
test
push
lods
xchg
mov
ins
sub
adc
mov
popa
(bad)
sbb
dec
aas
pop
cwde
xor
das
shl
mov
add
rcl
(bad)
push
adc
mov
or
or
out
adc
mov
dec
mov
(bad)
pop
adc
adc
or
popf
sbb
lock
cs
mov
loop
cli
pop
lahf
and
ret
cmp
(bad)
test
pusha
pushf
in
jl
int
xchg
xchg
push
in
mov
bound
pop
ja
fs
pop
and
dec
sbb
or
test
push
sub
mov
and
out
mov
fisub
dec
aaa
dec
xchg
int
mov
inc
enter
shl
sub
xchg
adc
jmp
xor
repnz
cmp
jo
sub
outs
cwde
jo
jecxz
xchg
xor
dec
ret
leave
push
in
mov
dec
adc
daa
pop
jnp
inc
mov
xchg
mov
leave
sti
loope
movs
ins
(bad)
cwde
loop
(bad)
sub
(bad)
repnz
xchg
xchg
ret
sbb
test
mov
das
iret
xchg
je
mov
stos
sub
fs
or
fist
xor
mov
mov
ds
xlat
jge
push
test
or
lahf
pop
mov
lock
and
loope
jb
xor
dec
xor
mov
jnp
jle
push
sbb
dec
loop
cmps
ss
in
jns
popa
xchg
js
les
jmp
xlat
ds
call
or
mov
push
pusha
mov
push
iret
or
loope
loope
jl
(bad)
bound
mov
push
fwait
jecxz
cmps
or
mov
in
das
push
je
leave
sbb
shl
push
call
dec
xchg
mov
rcl
ficom
lods
sbb
repz
cmp
ret
fs
fisttp
retf
add
xchg
pusha
das
cmp
push
movs
cli
jmp
mov
les
in
out
dec
outs
out
ss
nop
mov
icebp
cmps
(bad)
rcr
rcr
xchg
cmps
out
int3
leave
jno
mov
add
jmp
mov
pop
lds
xchg
dec
out
pop
scas
xchg
xor
inc
xchg
pop
pop
pop
mov
lahf
sbb
scas
inc
adc
lock
mov
push
addr16
fild
or
cwde
div
loop
inc
ror
and
lea
cmp
in
scas
jns
(bad)
(bad)
push
mov
cmc
mov
icebp
and
xor
and
(bad)
mov
pop
mov
in
sub
in
leave
test
dec
rcl
test
xchg
cdq
adc
push
xchg
adc
pop
pushf
addr16
sub
or
hlt
imul
repnz
das
jns
out
push
mov
fnsave
or
(bad)
cmps
rol
aad
and
fcomp
ins
pop
and
sub
add
daa
imul
rcr
inc
inc
(bad)
mul
dec
jg
inc
and
js
pop
and
scas
xchg
add
xchg
test
shl
jnp
int
mov
hlt
jmp
dec
xchg
push
js
into
mov
sbb
retf
push
fadd
lock
push
(bad)
loope
push
pop
sub
or
jbe
imul
adc
out
(bad)
mov
lods
pop
pop
adc
test
cmp
sbb
sti
push
xchg
and
call
pop
pusha
cmp
cmp
mov
cld
dec
in
and
dec
xor
jp
or
daa
fs
sbb
(bad)
push
ror
ror
(bad)
(bad)
cmps
shl
cmps
and
sahf
mov
or
pop
inc
int
push
mov
mov
xchg
jno
xor
mov
nop
push
cmp
out
xchg
mov
cmp
addr16
(bad)
cmp
ja
cmp
lds
xor
sbb
fs
add
test
imul
push
dec
outs
pop
pop
mov
imul
ret
push
jo
mov
inc
dec
mov
xor
loop
jne
add
lods
inc
div
or
pushf
inc
or
imul
sbb
loope
sahf
shl
int
into
xor
fucomp
js
fld
or
ja
das
inc
imul
mov
lods
mov
div
dec
sbb
push
lods
iret
xor
iret
or
xchg
js
inc
stos
mov
mov
enter
lea
(bad)
lahf
popa
sub
test
inc
dec
mov
int
movs
inc
cmp
mov
scas
call
or
push
dec
ret
push
sub
and
xor
pusha
or
pop
rcr
pop
xchg
and
aas
sar
(bad)
jo
fdivr
popf
push
ror
pop
mov
popa
jnp
xchg
in
pop
rcl
add
and
or
lods
xchg
add
lahf
dec
xor
js
sbb
cmp
pop
or
sub
or
les
shl
out
daa
je
addr16
dec
rcr
adc
inc
repz
xor
fwait
push
addr16
arpl
js
push
daa
mov
cmp
adc
sbb
cs
cwde
cmp
inc
adc
imul
add
bound
int
mov
sub
or
jne
pusha
mov
test
std
sbb
cld
inc
jle
push
sbb
enter
bound
call
sub
or
aam
ss
(bad)
fcom
mov
pop
inc
add
cmp
jnp
sub
sub
and
jge
fisttp
pop
inc
add
(bad)
imul
imul
loope
sar
in
push
mov
call
movs
shr
int3
aas
xor
in
jno
adc
dec
into
inc
pop
cmps
(bad)
mov
xchg
iret
test
add
dec
add
pop
sbb
pop
shl
mov
fimul
push
mov
(bad)
sbb
loope
xchg
push
enter
(bad)
bound
in
mov
retf
mov
push
mov
aaa
and
aam
cmps
aaa
out
cmp
es
fist
in
sbb
jmp
test
mov
cmp
add
jno
and
mov
scas
test
cmp
sbb
mul
je
dec
mov
cdq
jns
iret
outs
cdq
jl
stos
test
(bad)
jmp
and
and
inc
mov
into
dec
push
push
stos
jno
scas
js
mov
xchg
mov
(bad)
shl
xchg
cld
mov
dec
repz
xchg
retf
mov
mov
sbb
fimul
mov
in
test
xchg
(bad)
fadd
aad
inc
add
mov
cs
scas
or
sub
adc
mov
shr
(bad)
shr
repz
test
in
stos
sub
fcos
sbb
aad
mov
jns
mov
leave
ficomp
jo
sbb
fs
std
ja
movs
inc
add
fild
mov
mov
retf
imul
test
xor
pop
imul
fldcw
add
mov
cs
sahf
pop
adc
cld
cmp
pop
sbb
aas
dec
loop
mov
mov
mov
mul
add
adc
call
imul
fldcw
xchg
sub
nop
jnp
push
add
cmp
iret
adc
push
in
(bad)
jae
cmp
sub
mov
add
das
cmp
or
test
mov
pop
mov
lods
aaa
sub
jmp
adc
add
mov
inc
mov
pop
lods
dec
cmp
adc
pop
pushf
jmp
adc
or
or
pop
jg
es
es
je
xlat
mov
mov
(bad)
jb
sub
push
sahf
aam
xor
aaa
lds
les
cmps
mov
mov
es
lods
out
adc
xor
clc
or
cmc
shr
xchg
repnz
es
mov
mov
adc
sub
add
xchg
ss
mov
enter
iret
dec
das
enter
frstor
jecxz
retf
shl
xchg
stos
mov
fst
mov
jne
repz
mov
sub
xchg
das
fidivr
cmc
push
adc
and
addr16
fldcw
cmp
mov
cs
ins
test
mov
fadd
out
pop
std
fdiv
sub
adc
in
cmps
dec
movs
lahf
dec
xchg
sub
pop
mov
add
pop
dec
adc
and
loope
pop
sbb
es
fs
in
loop
js
pop
jb
mov
mov
add
mov
mov
mov
mov
push
cmp
jl
xor
xor
jp
mov
sbb
ret
xchg
or
sub
repnz
fsubr
xor
(bad)
sti
stos
fld
mov
xlat
pushf
das
sbb
xchg
xchg
and
(bad)
jmp
inc
and
loopne
(bad)
leave
out
into
mov
sub
jbe
fwait
jg
add
test
rcl
out
loope
mov
mov
cld
das
cwde
outs
fdivrp
mov
inc
sbb
or
test
jmp
inc
cmp
int
cld
sbb
data16
pusha
add
test
sub
aad
daa
fdiv
mov
ja
test
and
adc
pop
xchg
cmp
sbb
mov
mov
sbb
or
stos
or
leave
fs
shl
push
pop
sbb
mov
mov
fs
(bad)
sti
dec
scas
adc
in
test
arpl
test
scas
arpl
add
sub
aaa
adc
scas
add
ins
neg
sti
(bad)
out
in
stos
dec
jecxz
or
pop
dec
btr
mov
or
cmps
(bad)
xor
push
cmps
rcl
sub
adc
in
xchg
lods
sbb
jb
or
sar
out
mov
loope
scas
mov
inc
fstp
ficomp
and
clc
cli
outs
loope
add
scas
bound
dec
rcr
aaa
pop
rcl
xchg
cmps
sbb
inc
push
cmp
cli
repz
adc
mov
sti
xchg
(bad)
ds
mov
aam
dec
jmp
test
pop
push
lods
dec
ret
lahf
inc
xlat
xor
scas
mov
xchg
jae
xor
int3
adc
(bad)
jle
fucomp
adc
xchg
lods
fimul
push
popa
xor
leave
sar
mov
in
fs
outs
fadd
xchg
outs
inc
mov
loope
in
push
mov
add
stos
jno
cmc
cmp
add
dec
out
mov
out
xchg
push
sbb
push
mov
cmps
jp
(bad)
aad
stos
cmp
sub
jae
jnp
mov
(bad)
sub
add
mov
mov
lods
inc
(bad)
mov
xchg
jle
dec
lea
aaa
lea
xor
not
jecxz
in
ss
mov
inc
cmp
cli
sub
push
lea
xchg
sbb
enter
push
in
adc
sub
test
xchg
mov
cmp
outs
push
or
pop
in
pop
or
fistp
dec
cwde
lds
iret
lds
push
push
mov
mov
mov
aas
push
sub
pop
fdiv
add
jle
push
aas
mov
sbb
lods
add
bound
mov
jbe
in
dec
ret
xchg
hlt
xor
jmp
in
popf
xor
jl
mov
(bad)
out
xlat
nop
push
sbb
mov
call
and
repz
xchg
and
pop
and
outs
xchg
dec
push
stc
enter
push
shl
sub
xchg
imul
int
and
or
dec
movs
pop
mov
(bad)
pop
sub
jmp
xor
fisttp
and
cmps
call
lock
mov
adc
pop
fbstp
loope
test
xchg
xchg
xchg
scas
jnp
pop
pushf
adc
(bad)
push
cwde
out
inc
rcr
jmp
mov
mov
dec
or
mov
push
out
cmp
fnstenv
sub
adc
dec
push
and
stos
cs
(bad)
xchg
ret
dec
mov
aas
mov
jns
adc
sub
cmps
mov
sub
dec
cs
cmp
cli
leave
outs
aad
cmp
xchg
(bad)
imul
mov
pushf
xchg
sub
popf
push
cmp
dec
sub
inc
add
outs
cmp
adc
add
sub
fcomp
xchg
push
push
loope
stos
or
sar
or
mov
ret
out
bnd
out
gs
add
xchg
sub
repz
cmps
outs
xor
jecxz
pushf
lea
lods
sub
jmp
jmp
aad
jg
jecxz
mov
mov
sub
mov
pop
test
arpl
shl
adc
aaa
add
data16
and
add
cmc
jmp
mov
add
cmp
loopne
cdq
jecxz
cmp
(bad)
sti
sub
adc
call
(bad)
(bad)
ja
inc
sub
inc
ret
clc
mov
(bad)
outs
sbb
mov
lods
(bad)
or
out
xor
pusha
popa
push
dec
inc
cmps
add
clc
push
loopne
add
femms
cmps
inc
out
jnp
add
iret
pop
adc
pop
pusha
stc
je
nop
out
add
push
sar
sub
retf
fwait
shl
outs
nop
add
and
fidivr
mov
aas
push
mov
aas
ins
sub
dec
dec
add
cmp
adc
stos
addr16
mov
ds
int3
rcr
and
jecxz
(bad)
mov
inc
dec
jge
sbb
xchg
fdivr
cli
push
cmp
stos
in
and
mov
stos
adc
pop
xor
mov
adc
into
(bad)
push
(bad)
mov
sbb
add
sar
cli
pushf
out
retf
xchg
xchg
sbb
push
xor
out
or
sti
lahf
sub
and
xlat
or
jl
sub
lods
clc
dec
aaa
int3
pop
or
out
jo
ins
inc
gs
in
xor
mov
daa
xchg
fld
iret
add
adc
sti
arpl
pop
and
pop
fadd
sbb
add
imul
fist
add
dec
ss
jmp
pop
xchg
adc
ds
nop
push
imul
arpl
push
and
add
cmp
jle
add
mov
outs
cdq
jne
(bad)
adc
or
jnp
out
cmp
div
(bad)
dec
test
imul
inc
mov
cmps
outs
dec
jl
cmp
sub
sub
xchg
imul
add
int
pop
movs
adc
call
js
ret
jmp
dec
mov
popa
pusha
das
mov
inc
dec
push
test
cmp
call
dec
dec
mov
mov
cmp
in
(bad)
dec
mov
test
in
mov
cmps
aad
cmp
pop
js
rcl
push
adc
(bad)
and
jnp
mov
cmp
fiadd
jg
(bad)
push
fcom
push
pusha
shl
dec
cmp
imul
pop
push
bnd
adc
out
outs
ret
jg
popa
jnp
outs
bnd
inc
imul
cmp
je
inc
mov
pop
hlt
stos
lahf
stos
jb
xchg
rcl
data16
lds
jp
cli
test
mov
xchg
sub
cmp
stos
int3
cs
push
xchg
test
jns
in
xor
imul
or
shr
xor
outs
xchg
daa
adc
push
cld
sbb
mov
fld
cmc
nop
movs
fild
pop
fdivr
sbb
mov
add
lods
out
pop
jl
pop
aad
imul
jg
inc
retf
and
sahf
(bad)
fwait
test
clc
and
test
rcl
dec
stc
pop
lods
fcomi
aam
mov
and
(bad)
cli
jno
push
sbb
int3
mov
sahf
ja
xchg
mov
(bad)
retf
mov
mov
and
mov
xchg
repnz
mov
xchg
cmc
call
push
shl
mov
imul
(bad)
fsub
int3
jns
daa
mov
sub
and
ins
xchg
cs
sub
mov
sbb
dec
(bad)
cld
imul
xor
lea
std
ins
jp
(bad)
jnp
jmp
pop
lahf
scas
punpcklbw
push
dec
jmp
dec
jo
xchg
dec
jg
pop
add
push
push
jge
imul
push
std
add
xchg
test
aad
mov
je
mov
shl
ds
xor
fwait
nop
test
inc
int
xchg
lods
mov
aam
rcl
cmp
fcomi
imul
pushf
imul
mov
inc
and
clc
lods
(bad)
call
push
sahf
jg
nop
pop
cmps
adc
mov
lods
cmp
mov
xor
lods
dec
loopne
call
push
int
xor
and
adc
sbb
push
mov
(bad)
imul
gs
dec
test
das
pop
adc
cmp
sub
jbe
pop
sbb
and
dec
mov
leave
lods
mov
call
push
js
int3
cs
push
out
mov
(bad)
dec
dec
and
mov
sub
ror
xchg
loop
arpl
push
push
retf
hlt
jbe
aam
mov
and
inc
mov
imul
in
nop
jne
inc
dec
pop
cmp
dec
in
cmps
lds
sub
push
adc
inc
test
sti
mov
adc
jle
dec
pop
or
out
or
adc
popf
inc
pop
(bad)
sbb
push
push
call
test
mov
push
xchg
hlt
push
(bad)
or
fidiv
movs
sub
fucomi
cmc
retf
mov
sbb
or
repnz
ficom
inc
ror
pop
ds
push
lods
(bad)
call
mov
sbb
pusha
stos
dec
mov
ret
pop
dec
mov
aas
call
sbb
mov
test
test
cmp
push
xchg
jmp
enter
js
or
retf
in
adc
cmp
enter
in
ret
xchg
imul
add
mov
in
les
adc
outs
js
jno
loop
(bad)
adc
pop
retf
pop
mov
mov
add
repz
pop
inc
dec
mov
cmps
std
or
daa
fidiv
movs
sbb
nop
pop
mov
pop
fist
xchg
xchg
mov
dec
and
adc
(bad)
imul
mov
and
or
sti
(bad)
inc
xchg
push
sbb
cdq
xchg
push
pushf
add
retf
inc
je
ret
(bad)
dec
mov
xchg
adc
es
clc
js
inc
jns
mov
add
inc
push
(bad)
repz
xor
xchg
jge
imul
loope
mov
rol
sti
popa
jae
mov
and
xor
mov
xor
mov
jecxz
push
jge
pop
xchg
stos
sti
psadbw
mov
xor
xor
(bad)
ror
jo
cwde
inc
stc
xchg
ret
fdiv
loopne
call
pop
hlt
mov
sti
cmp
ficomp
inc
adc
in
pop
xor
pop
fadd
arpl
add
fcom
dec
je
addr16
mov
push
lea
sbb
call
jle
arpl
cmp
dec
push
and
aaa
(bad)
cld
stos
arpl
es
push
cmp
out
mov
xchg
xor
mov
in
or
pop
imul
sti
pop
cmps
mov
sbb
jp
or
sub
lods
pop
in
imul
test
sbb
sti
lahf
mov
sar
cli
ins
mov
call
mov
fwait
pop
sbb
xor
out
stc
call
sub
fcom
jo
retf
push
imul
sbb
push
cmp
gs
fbstp
loopne
out
jmp
push
fs
jmp
cwde
xchg
iret
or
ret
(bad)
iret
lock
xor
dec
xchg
cmc
stos
sub
ins
dec
dec
mov
imul
sub
adc
in
fsubr
ins
es
cwde
mul
pop
cmps
enter
xchg
ror
sti
mov
movs
sbb
jbe
or
or
xchg
and
xchg
and
sub
mov
mov
retf
push
xchg
mov
sub
(bad)
push
pop
pop
dec
sub
sub
out
(bad)
dec
xchg
adc
arpl
mov
repz
enter
cmp
sbb
push
movs
daa
shl
jle
or
aas
in
adc
nop
iret
into
mov
push
icebp
dec
test
inc
js
in
dec
adc
and
pop
scas
xor
xchg
mov
or
xchg
add
mov
mov
mov
lahf
imul
cmp
jmp
cmps
dec
pop
ss
arpl
sbb
jge
and
xor
xor
adc
dec
jmp
(bad)
sub
mov
mov
nop
push
ins
pop
(bad)
and
nop
and
sbb
shl
cmps
imul
xchg
mov
adc
cmps
jg
cmps
iret
ss
or
mov
sahf
cmps
arpl
push
neg
xor
xor
stos
inc
jle
hlt
xor
cmc
mov
(bad)
jp
test
dec
xor
fisttp
test
sub
jmp
into
adc
sahf
mov
xchg
mov
ins
aaa
ins
bound
hlt
aaa
cmp
ins
fs
(bad)
fimul
js
push
mov
ins
imul
mov
aad
retf
cs
das
add
outs
aad
mov
inc
loope
xchg
fidiv
out
aad
clc
or
adc
xchg
pop
sbb
mov
dec
rcl
aad
rcl
adc
hlt
adc
stc
out
leave
lds
fstp
mov
sub
jle
cmp
adc
dec
sub
mov
int
out
sbb
movs
je
in
ins
or
mov
push
cmp
shr
push
jno
sbb
xor
addr16
and
sub
loop
pushf
movs
movs
push
or
call
add
sbb
or
dec
dec
out
mov
rcl
mov
sbb
in
sub
fstp
jo
jmp
mov
movs
imul
mov
dec
ja
pop
xchg
jecxz
stos
jbe
cmps
stos
clc
mov
pushf
popa
retf
mov
movs
(bad)
fisub
push
mov
or
mov
ja
std
fdivr
fsubr
jmp
fcomp
out
lock
sub
push
(bad)
xor
les
sbb
daa
popa
xchg
shl
push
in
mov
mov
cwde
mov
ret
add
xchg
test
in
mov
push
mov
xacquire
pop
neg
mov
ret
cmp
mov
jg
(bad)
xor
cmp
mov
out
mov
outs
ins
test
add
out
xchg
and
xchg
sahf
mov
mov
or
mov
std
add
(bad)
jnp
mov
or
sar
jle
bound
dec
mov
movs
push
dec
sbb
or
sub
jle
pushf
jnp
cmp
int
shr
mov
mov
jns
stc
cld
int3
push
mov
leave
sbb
and
imul
mov
mov
ror
(bad)
sbb
cmp
ins
inc
cs
adc
or
in
jmp
jns
pop
jmp
cmp
(bad)
sahf
ins
mov
stc
out
and
je
mov
stos
sbb
das
jg
sahf
cmp
gs
cmp
or
mov
add
repz
test
div
jp
adc
addr16
dec
cmp
jl
cmp
pop
shl
mov
jb
dec
xchg
jge
adc
and
xchg
icebp
mov
je
inc
mov
imul
adc
push
mov
or
xor
(bad)
ss
sbb
jno
nop
sub
icebp
mov
or
pusha
or
aaa
jmp
mov
test
inc
cld
cmps
std
popf
inc
mov
popa
mov
sub
cmps
fstp
xor
adc
stos
mov
fyl2xp1
xor
xor
xlat
sbb
retf
xchg
add
add
and
stos
inc
pop
call
jp
aad
xchg
pop
daa
outs
sub
dec
sub
pop
fidivr
jmp
repz
mov
sub
shr
jmp
loope
inc
inc
test
add
jb
sub
jae
xchg
mov
sbb
sbb
out
xor
rdmsr
mov
(bad)
jl
dec
(bad)
mul
cwde
pcmpeqb
jmp
jbe
sub
rol
mov
and
iret
mov
in
xor
(bad)
pop
add
sub
lods
enter
sub
dec
mov
(bad)
sub
jbe
sbb
fst
out
adc
adc
add
ficom
sub
shl
sbb
mov
inc
in
retf
sub
push
sbb
ret
(bad)
xor
mov
mov
aam
and
call
adc
add
fsub
xlat
pop
sub
mov
test
sbb
repnz
jb
cmp
lods
pop
fcmovne
shl
js
lea
call
aam
pop
mov
mov
push
jmp
and
push
icebp
rol
xor
mov
test
adc
sbb
xchg
popf
retf
(bad)
xlat
cwde
push
lea
aas
scas
push
sub
cmp
mov
daa
imul
ja
repz
sbb
push
leave
icebp
call
clc
call
leave
movaps
jns
sub
icebp
test
adc
mov
sbb
stos
sbb
in
aam
cmp
mov
and
sbb
inc
mov
sti
movs
imul
xor
sti
das
data16
mov
jg
(bad)
ret
int3
and
pop
loopne
mov
stos
inc
(bad)
cmp
hlt
lods
imul
jl
pop
cli
(bad)
jle
mov
jmp
cs
mov
stos
dec
scas
(bad)
loopne
fwait
sub
mov
inc
sbb
cs
mov
jmp
idiv
fisub
std
adc
outs
call
jne
daa
cmp
mov
pop
aas
imul
(bad)
cmp
xor
mov
cdq
ret
xchg
cli
sti
push
enter
xor
add
jmp
mov
dec
ins
pop
dec
jecxz
cld
sbb
dec
push
sbb
add
xchg
adc
pop
inc
outs
pop
pop
imul
mov
aaa
or
adc
add
xor
xchg
dec
lahf
push
fdivr
xor
xchg
push
add
mov
sub
cmp
push
mov
add
and
push
xor
xor
(bad)
sub
fld
rol
(bad)
clc
mov
xchg
sbb
leave
fwait
cs
test
das
das
sbb
aad
out
cmp
outs
stos
cmps
dec
xchg
mov
enter
scas
inc
xor
xchg
push
int3
cs
mov
mov
xchg
xor
sub
pop
xchg
(bad)
mov
mov
cmc
fdivr
xchg
call
and
outs
dec
cmps
in
xor
cdq
or
dec
ds
jecxz
jmp
push
je
and
stos
les
scas
inc
or
sar
out
aad
std
push
cmp
inc
mov
sbb
retf
and
inc
push
lahf
enter
xor
sub
daa
movs
jnp
ret
loopne
mov
xchg
and
pushf
push
popf
in
and
push
inc
mov
push
test
xchg
inc
test
push
sub
stos
in
stos
add
hlt
sti
push
or
add
imul
lods
push
fst
je
lock
les
push
cmc
out
inc
sbb
leave
sub
inc
sub
pusha
sbb
add
inc
inc
lahf
pop
push
loope
cmc
enter
pop
call
fcmovnbe
push
xor
into
ins
mov
jo
stos
scas
push
and
outs
es
dec
call
rcl
push
pushf
ins
mov
push
gs
outs
xchg
jae
pop
pop
jne
outs
mov
inc
pop
adc
pop
and
je
dec
mov
push
in
ror
cmps
mov
or
sub
jg
cs
inc
aad
repz
jno
mov
push
or
lods
adc
add
inc
test
cmc
adc
push
sub
dec
cmps
add
call
ins
stos
imul
dec
sub
mov
cmp
ja
cli
push
loop
ret
ret
cmps
mov
mul
add
cs
lahf
sub
mov
les
gs
push
hlt
xchg
aaa
push
xchg
ss
push
xchg
in
lock
jge
cmp
pop
sti
sub
(bad)
addr16
test
adc
xor
add
push
jge
(bad)
jle
sub
std
xor
repnz
dec
xchg
adc
(bad)
or
out
mov
push
stos
mov
xchg
imul
ret
jg
sbb
xor
mov
out
aaa
mov
inc
loopne
sub
mov
pushf
mov
and
stc
sbb
xchg
xchg
ss
jo
cmp
fdiv
icebp
movs
mov
sti
lea
je
mov
loop
push
push
mov
arpl
fstp
shr
cmp
or
addr16
sti
pop
es
pop
outs
test
mov
ss
pop
je
sub
lds
dec
push
test
mov
jle
call
jecxz
cmp
sub
lods
es
orps
sbb
leave
push
es
jno
pusha
xchg
pop
in
rcl
ds
scas
pop
ret
imul
mov
xor
and
jle
les
and
pop
into
(bad)
in
les
dec
mov
and
ror
mov
ret
push
and
sub
adc
pusha
cld
push
mov
mov
push
xchg
add
inc
or
dec
or
cli
mov
ss
mov
xchg
ror
push
mov
iret
outs
jnp
aam
jg
int
xchg
dec
adc
push
(bad)
std
xor
pop
leave
mov
or
mov
mov
das
(bad)
lahf
or
jnp
cdq
xchg
retf
xor
mov
and
sbb
push
cwde
inc
pop
jo
stos
jg
pop
jecxz
fwait
rcl
jo
mov
or
lock
data16
inc
cmp
mov
jo
pop
mov
fsub
(bad)
std
xchg
jmp
sub
je
mov
data16
push
jge
sub
test
pop
or
lock
into
sub
ror
push
dec
push
xchg
sub
es
repz
mov
ds
mov
scas
sar
sub
mov
push
int3
xlat
cmps
inc
popf
ret
adc
jns
(bad)
pop
cmp
xor
mov
and
int3
out
rcl
cmps
daa
xchg
or
sub
outs
test
dec
sbb
sub
adc
in
jp
cmp
lods
push
fsub
and
inc
adc
jle
fsubr
mov
test
sub
out
mov
test
adc
outs
std
add
and
fcom
test
inc
dec
test
es
jp
(bad)
repz
adc
sub
xchg
and
das
pop
mov
stc
sub
or
sub
mov
rcr
sub
xor
mov
push
ins
cli
add
lock
adc
sahf
pop
mov
call
rcl
xor
stos
(bad)
clc
popa
jl
inc
adc
pusha
ja
inc
and
lea
neg
es
pop
push
test
jle
ret
std
jo
mov
mov
mov
imul
loopne
push
hlt
sbb
repz
push
or
sbb
(bad)
mov
lock
repz
icebp
lods
push
movs
popa
loopne
mov
adc
lds
(bad)
adc
leave
imul
dec
cmp
into
outs
push
inc
lds
(bad)
inc
jns
push
push
inc
arpl
inc
inc
test
jmp
js
mul
mov
cs
(bad)
push
push
daa
nop
push
inc
and
jmp
sub
add
xchg
in
push
(bad)
xor
xor
addr16
aam
xor
jnp
(bad)
aam
jmp
inc
sub
ins
aas
inc
lods
dec
cdq
imul
xchg
xchg
jle
inc
push
cmp
jle
arpl
push
iret
sahf
mov
lahf
call
add
xchg
scas
cmp
inc
jg
and
or
push
xchg
inc
scas
stos
(bad)
sub
cmps
in
enter
rcr
(bad)
ja
pop
aad
(bad)
movs
jbe
mov
movs
mov
mov
xor
fwait
pop
je
ins
add
push
lods
fdivr
xchg
inc
dec
xor
nop
sbb
xor
mov
loope
cmc
or
lods
aam
dec
int3
dec
inc
movs
adc
(bad)
cmp
cmp
inc
ds
into
data16
mov
mov
and
mov
inc
ja
stc
pop
or
bswap
retf
push
cmps
jecxz
out
icebp
icebp
jns
pop
bound
dec
cmc
(bad)
push
cs
jb
push
mov
xchg
scas
call
ss
movs
mov
xchg
inc
push
lods
xlat
inc
fld
mov
dec
movq
loop
inc
lods
stc
cmp
add
sbb
mov
jno
xor
enter
out
mov
inc
mov
and
(bad)
push
adc
inc
lock
jno
je
and
xlat
jb
sub
(bad)
(bad)
mov
xchg
xchg
mov
loop
adc
call
jno
movs
imul
jle
cdq
cmp
stc
xor
or
popa
in
xchg
inc
mov
mov
repnz
loope
inc
outs
pop
add
fs
add
jbe
retf
mov
jl
js
adc
ds
mov
inc
fcomp
dec
dec
xor
jmp
or
sub
std
push
add
sar
pushf
jecxz
jnp
push
addr16
cs
es
fs
fcom
inc
and
rol
jb
fcmovnu
gs
push
daa
ins
and
xor
stc
enter
xchg
addr16
pop
jmp
pop
push
dec
(bad)
jmp
xchg
mov
cld
popa
or
bound
inc
mov
pusha
retf
xchg
add
dec
pop
imul
imul
test
xchg
xchg
and
inc
aam
mov
inc
sub
mov
cmc
push
jb
fcom
clc
mov
mov
mov
in
aaa
dec
inc
dec
repnz
dec
dec
cmps
mov
add
pop
sbb
adc
jne
in
loopne
ss
jmp
jecxz
xor
or
das
push
icebp
call
hlt
xor
and
dec
(bad)
dec
adc
loopne
or
jns
jmp
mov
repz
sub
imul
mov
xchg
test
or
lea
adc
and
mov
inc
mov
cmp
jecxz
cli
dec
or
(bad)
dec
push
shl
mov
sbb
fs
dec
jmp
mov
inc
jnp
aas
and
loopne
nop
xchg
pop
out
jmp
adc
jnp
mov
jmp
nop
pop
cld
popa
add
daa
inc
dec
or
(bad)
push
mov
scas
fadd
fidiv
movs
or
mov
(bad)
push
or
in
pop
or
inc
jae
sbb
push
mov
sub
imul
dec
sbb
mov
jp
test
iret
pop
dec
pop
adc
call
cmp
push
movs
movs
dec
xchg
rcpps
cld
cmp
mov
fsub
jl
cwde
test
mov
and
inc
pusha
jp
aas
mov
cmps
stos
push
rcr
aas
movs
js
scas
adc
scas
jb
jle
test
adc
xor
jmpw
rcl
ins
xor
into
lahf
aas
pop
mov
lods
adc
cmp
(bad)
rcr
(bad)
push
pop
dec
adc
inc
sbb
iret
repnz
stc
dec
xor
stos
int
data16
mov
cmp
adc
mov
iret
jne
test
enter
aad
movs
fild
aaa
test
stos
mov
pushf
cmp
mov
mov
outs
xchg
sahf
sub
or
mov
xor
adc
or
jbe
je
repz
mov
lods
push
fisttp
jb
out
cwde
jne
lods
ret
pop
pop
jmp
adc
out
dec
leave
fsubrp
outs
pop
call
pop
dec
stc
fidivr
imul
(bad)
retf
inc
inc
dec
xchg
call
call
sbb
(bad)
mov
sahf
or
sbb
(bad)
aad
pop
mov
fs
mov
aas
jge
pop
ins
dec
push
in
and
pop
mov
mov
add
pop
into
cmp
push
stos
lods
lods
mov
bound
inc
in
mov
sbb
les
mov
sub
push
jge
mov
or
pop
sub
and
jle
push
in
and
in
sub
dec
icebp
mov
ins
cmps
repz
mov
imul
add
push
push
push
jmp
(bad)
imul
(bad)
cld
push
(bad)
push
mov
pop
pop
xchg
push
pusha
adc
jecxz
es
hlt
add
(bad)
pop
push
mov
lea
daa
test
xchg
mov
cwde
popf
outs
shr
loope
adc
inc
out
xchg
mov
cmps
dec
cmc
pop
pop
(bad)
mov
push
or
adc
add
leave
jb
xchg
lods
shl
shl
jbe
xchg
push
cmp
jnp
or
daa
add
pop
mov
daa
js
adc
jg
inc
or
cmp
jns
fsubrp
dec
dec
je
xchg
jg
cld
mov
int
test
mov
mov
shr
xchg
cvtdq2ps
lods
mov
push
sbb
push
std
sahf
add
jecxz
out
xchg
loopne
xchg
and
lds
mov
movs
cmp
in
inc
mov
mov
or
mov
mov
sub
xchg
pop
ficomp
mov
mov
std
rol
into
xor
mov
lds
aaa
popa
jb
pminub
adc
and
cmp
ror
(bad)
(bad)
sub
fcom
(bad)
es
call
ja
xlat
and
or
jle
jmp
addr16
leave
dec
fistp
sbb
ret
loop
shl
sub
ret
push
xchg
js
movs
mov
test
xor
adc
test
outs
test
in
fcmovnbe
cld
push
test
fst
aam
enter
sbb
nop
call
push
cmps
dec
pop
push
xchg
lock
(bad)
jb
sub
in
mov
xlat
cmp
mov
test
imul
mov
mov
push
in
cmp
sub
mov
fmulp
xor
lods
mov
test
nop
das
jo
or
leave
les
jno
sahf
sbb
jp
out
jp
lea
(bad)
cs
inc
mov
in
adc
jo
iret
jp
call
adc
cmp
fwait
sti
sub
jecxz
sbb
loop
js
and
cdq
add
repz
add
lds
int3
lock
je
cmp
aas
in
dec
mov
dec
xchg
jae
dec
xchg
mov
pop
add
sub
add
and
iret
add
cwde
xchg
(bad)
mov
push
jle
add
mov
sub
pop
mov
and
add
mov
push
inc
inc
pushf
pop
aad
clc
add
ja
bound
icebp
lods
cdq
jne
cwde
ins
dec
adc
imul
ret
mov
push
mov
sub
jne
stos
push
(bad)
fidiv
aad
pop
in
and
cmp
cwde
pop
pushf
ins
loop
das
jne
andps
lahf
mov
pop
mov
pop
ficomp
clc
sub
rcl
mov
js
mov
in
into
out
xor
push
(bad)
cwde
lods
leave
hlt
(bad)
shl
imul
push
sbb
ss
popf
xor
dec
inc
mov
mov
imul
shr
push
or
mov
and
dec
mov
push
push
das
sbb
jmp
pop
xor
sbb
int3
mov
mov
addr16
xor
add
int
mov
test
add
ficom
pop
and
jmp
push
data16
sar
inc
cdq
aam
xor
bound
sub
mov
sar
dec
dec
dec
movs
or
or
(bad)
jge
outs
out
ins
retf
inc
pop
mov
data16
push
pop
ret
add
and
fiadd
push
fsub
fwait
adc
out
sbb
push
movaps
pushf
scas
(bad)
movs
and
fs
aad
dec
dec
push
fst
and
adc
sbb
iret
daa
stc
(bad)
cld
and
lods
jns
jecxz
ret
popf
sbb
loopne
pushf
popf
push
loope
inc
ja
xchg
call
call
add
xchg
push
mov
push
imul
xor
call
sbb
and
shr
jb
fsubr
sbb
jmp
mov
cs
out
out
or
into
mov
cdq
jnp
pop
les
xchg
stc
(bad)
rcr
jb
mov
mov
shl
push
neg
push
mov
dec
push
(bad)
nop
or
add
bound
gs
and
and
add
lods
push
dec
push
nop
sar
shr
mov
out
or
test
hlt
stc
out
leave
push
add
jmp
pop
stc
out
adc
repnz
dec
xor
cmp
ds
push
pop
adc
mov
hlt
fldcw
(bad)
ror
(bad)
mov
cmp
sbb
push
shl
jns
or
xchg
hlt
rcl
jle
mov
movs
mov
push
push
imul
gs
mov
fdivr
xor
xchg
push
fs
sbb
push
mov
mov
dec
dec
or
stc
cmp
mov
mov
adc
jge
mov
dec
pusha
fdiv
scas
jo
std
loop
xlat
std
outs
test
shl
add
rcl
stos
cwde
pop
stos
mov
xchg
addr16
and
movs
js
cmp
fs
dec
cmp
dec
movs
loop
adc
out
leave
jecxz
out
sbb
mov
push
fwait
jge
or
sub
sbb
cli
dec
rcr
fadd
fdiv
push
data16
jae
xchg
adc
cmps
fdivr
jns
cwde
daa
push
imul
mov
into
inc
push
dec
or
push
call
push
shl
mov
pmullw
jbe
lods
(bad)
jne
add
push
call
pop
bound
sbb
test
mov
lods
xor
scas
out
mov
mov
jmp
cmps
push
repz
xor
push
or
fucom
dec
ret
leave
mov
test
xchg
cs
and
faddp
test
dec
ret
lods
popf
cmp
adc
push
sbb
mov
addr16
jge
es
into
int3
sbb
ins
inc
mov
out
fbstp
add
leave
icebp
cs
or
(bad)
jno
mov
(bad)
jle
lahf
xchg
hlt
push
sub
enter
cld
sbb
xchg
fild
push
jge
cmp
imul
inc
outs
mov
in
dec
ins
into
add
push
scas
mov
cmc
mov
dec
rcl
sbb
or
inc
pop
dec
dec
cmp
addr16
pop
das
(bad)
out
mov
cdq
jne
add
add
jno
jns
jbe
test
shr
xor
and
mov
out
adc
or
dec
mov
mov
lea
xchg
sti
idiv
loop
sub
out
das
xor
and
and
ficom
cs
sbb
jns
out
lock
lock
xor
in
popa
jmp
scas
into
mov
dec
scas
jg
scas
push
mov
xor
sub
int
and
addr16
paddq
mov
sub
ficomp
mov
and
mov
jmp
mov
pop
shl
cwde
xlat
mov
adc
inc
pop
out
sbb
out
lods
out
int
aam
iret
stos
pop
rcr
ss
loop
jae
sbb
add
cs
sub
xchg
clc
jl
rcl
les
xchg
lds
sbb
sub
(bad)
ret
repnz
push
inc
inc
fld
popa
into
fadd
cmp
or
push
add
xor
test
add
xor
mov
out
scas
mov
mov
sbb
push
or
add
mov
jb
stos
inc
pop
fisubr
loope
jmp
jmp
and
in
sub
and
xlat
stc
or
sub
xchg
popf
add
lahf
xchg
xchg
xlat
mov
out
sti
cld
adc
addr16
call
leave
xor
aam
lahf
jbe
rcr
add
cmova
retf
test
pop
nop
sbb
pop
adc
fstp
(bad)
jg
adc
mov
inc
inc
mov
sbb
mov
dec
mov
or
sbb
rol
mov
sti
xchg
dec
adc
call
push
add
sar
xor
popf
cmp
cmp
adc
shr
hlt
sub
xchg
fdivr
sub
(bad)
in
mov
outs
mov
adc
inc
ins
dec
push
in
fs
inc
outs
rcr
inc
rcr
pop
lods
adc
jmp
jp
dec
gs
test
ds
cmp
pushw
das
add
pushw
pop
adc
xchg
xor
pop
(bad)
out
jo
clc
inc
cld
jo
ret
shr
leave
das
(bad)
pop
les
mov
xchg
ins
nop
mov
jbe
movs
mov
(bad)
pop
cld
dec
in
in
sbb
push
in
das
add
cdq
stos
leave
rol
shl
(bad)
es
xor
jge
mov
sub
push
and
or
stos
lahf
mov
popf
mov
test
mov
cmp
jne
xor
push
mov
aad
neg
sub
cmp
gs
cmp
es
push
nop
add
jnp
loope
jno
inc
fsubr
jge
ficomp
std
repz
les
repz
lahf
xchg
call
push
cmp
jbe
das
mov
lods
dec
out
sahf
jnp
sub
mov
rcr
outs
inc
mov
stos
cs
add
pop
imul
mov
xchg
(bad)
repz
jmp
lock
sbb
mov
fmul
dec
mov
and
std
enter
ror
outs
and
aam
push
mov
das
and
stos
dec
(bad)
jecxz
sub
addr16
fsub
dec
imul
xor
icebp
pop
sbb
ds
xchg
push
cld
sbb
mov
bound
sbb
inc
sahf
out
fcomi
fsub
jp
in
(bad)
and
(bad)
(bad)
and
stos
pop
lds
(bad)
mov
xlat
ret
pop
mov
es
leave
pop
out
test
movs
lds
mov
cmp
pop
popf
mov
add
mov
mov
pop
or
mov
adc
daa
aas
sbb
fnstsw
xchg
xor
test
call
or
retf
in
jmp
jo
xlat
push
iret
rcr
bnd
icebp
cmp
mov
mov
dec
gs
add
loop
sbb
arpl
inc
dec
jmp
lock
arpl
loopne
jbe
mov
loopne
xor
retf
xchg
test
mov
mov
and
mov
dec
or
lea
inc
mov
mov
cmps
je
or
push
and
mov
pop
mov
pop
jnp
cs
adc
je
and
xchg
mov
inc
sub
mov
push
ffreep
aaa
cld
pop
adc
inc
add
lahf
dec
cmps
xor
inc
push
pop
adc
xchg
xchg
sbb
in
shl
xor
xchg
dec
pop
inc
lods
dec
xchg
dec
shl
inc
dec
push
push
jmp
int3
lods
inc
push
popa
xchg
inc
jge
ss
icebp
xor
xor
(bad)
out
xor
push
inc
push
sub
nop
mov
cmps
jae
push
xchg
nop
jg
js
fild
pop
scas
cmp
push
cmps
scas
cmp
les
lods
and
lds
cmp
out
and
bswap
mov
xor
pop
test
mov
dec
repnz
xchg
push
xor
movs
into
mov
xchg
mov
lea
sub
(bad)
loope
enter
imul
out
lods
mov
sti
imul
xor
dec
setg
push
xchg
or
xor
xchg
les
loopne
inc
adc
ds
call
or
scas
sub
push
cld
mov
fs
mov
dec
lea
hlt
add
pushf
lods
dec
movs
bound
loop
mov
xchg
adc
scas
xchg
fs
outs
int3
in
addr16
sbb
push
retf
mov
push
das
mov
ins
bound
aaa
sub
inc
adc
gs
mov
aas
rcl
pop
jne
mov
(bad)
in
or
aaa
dec
mov
(bad)
fdiv
xchg
data16
xchg
mov
jecxz
xchg
mov
add
mov
adc
push
jne
xchg
and
repz
pop
adc
mov
mov
add
arpl
mov
and
adc
cli
mov
mov
jmp
(bad)
icebp
inc
hlt
mov
mov
and
shl
lods
mov
or
fld
rcl
(bad)
xor
mov
mov
arpl
adc
add
ja
sbb
inc
xchg
xchg
(bad)
push
in
sar
pop
pusha
xor
(bad)
or
push
jno
arpl
out
jl
daa
pop
shl
mov
outs
aad
dec
xor
test
cmps
data16
lods
call
mov
aam
sub
mov
call
fld
in
pop
fnstsw
inc
gs
inc
push
mov
test
mov
in
dec
or
ds
xor
sahf
popa
test
pusha
cmp
jns
xor
add
add
ins
inc
and
nop
adc
mov
or
push
push
pop
stc
and
pop
mov
in
sub
aad
pop
push
jmp
sbb
jo
jle
ds
inc
test
add
sbb
je
cld
adc
inc
inc
pop
movs
cmc
mov
imul
mov
push
imul
std
cdq
popa
dec
rol
jb
mov
or
cs
hlt
adc
pop
mov
push
int
popa
cmps
and
jne
stos
and
outs
call
ins
cmps
pop
pop
arpl
add
push
xchg
mov
pusha
pop
inc
popf
inc
mov
cmp
(bad)
repz
and
dec
fmulp
test
cmp
pop
or
ss
adc
loopne
jae
mov
outs
or
xchg
in
ja
or
xchg
lods
jecxz
repnz
jne
mov
inc
movs
jle
add
fdiv
mov
jo
sub
jmp
cmps
not
mov
int3
pushf
adc
push
iret
mov
mov
inc
fwait
out
jae
lods
jmp
xchg
and
std
jge
sbb
push
(bad)
lods
xlat
test
mov
adc
cmp
outs
pop
ret
fnstsw
inc
aad
adc
mov
xlat
sbb
push
dec
mov
push
frstpm(287
aaa
xchg
inc
sbb
rcr
sbb
ficomp
rcr
xchg
lock
ss
in
pop
and
popf
sbb
cmp
scas
xor
cmp
ss
xor
mov
mov
fld
push
int
mov
(bad)
adc
dec
inc
push
xor
pusha
sub
cs
out
(bad)
lods
add
jl
or
xchg
mov
mov
or
xchg
bound
dec
pop
aaa
inc
add
cmp
jmp
add
or
xchg
mov
outs
(bad)
icebp
inc
mov
fcmovbe
in
sbb
pop
fs
push
inc
nop
iret
lods
pop
dec
and
dec
jmp
dec
xchg
aas
mov
daa
xchg
nop
rcl
pop
cdq
push
inc
clc
retf
ret
shr
addr16
mov
dec
cwde
in
cwde
fdivr
push
retf
cld
inc
cmp
add
and
mov
mov
ret
push
or
loopne
fldcw
enter
xlat
or
push
cli
adc
adc
dec
bound
out
xchg
and
xor
imul
fdiv
pop
ins
aaa
cmp
loopne
adc
inc
pop
and
rcr
not
adc
loope
in
inc
push
retf
push
iret
sbb
les
inc
mov
cmps
sbb
loopne
in
call
mov
mov
jnp
lock
call
xchg
sub
scas
push
inc
jmp
cmp
or
sub
(bad)
inc
mov
jb
(bad)
lods
adc
sbb
jl
lea
xor
push
pop
std
lods
jp
jne
mov
jmp
bound
ins
mov
ins
into
jp
mov
or
out
jmp
and
data16
and
mov
xchg
cwde
sub
mov
sub
stos
or
mov
jno
rcr
add
push
idiv
cmp
cmp
dec
test
int
movq
cmp
dec
js
adc
push
hlt
pop
adc
(bad)
xchg
xor
(bad)
cmp
and
mov
adc
sar
xor
jb
imul
mov
cs
scas
out
sbb
mov
lea
cmp
pop
icebp
pop
fcomip
sahf
cdq
pop
fcmove
aaa
push
fstp
loop
into
hlt
addr16
sbb
push
xchg
add
mov
sub
js
fcmovb
mov
scas
or
mov
or
sub
push
clc
mov
es
clc
pop
out
rol
cmp
pop
je
fnsave
inc
jp
in
aas
lods
add
mov
icebp
mov
pop
fcomi
push
jg
xlat
dec
aad
aaa
ret
ss
xchg
sbb
add
cmps
mov
daa
inc
(bad)
test
mov
ins
leave
and
aam
sub
xchg
dec
popa
mov
sbb
mov
inc
push
sub
sub
clc
pop
fdivr
jae
in
xor
cli
int
xchg
test
inc
mov
cmps
out
fdiv
and
push
outs
jo
ror
arpl
and
and
or
lea
add
test
adc
sti
retf
test
aaa
lods
adc
mov
test
push
popf
ins
mov
sub
xlat
dec
and
bound
out
aaa
sti
push
dec
xchg
cmp
mov
or
add
pop
push
pop
scas
jo
inc
xor
xor
mov
mov
lock
lods
lea
sahf
dec
add
mov
es
pop
imul
sub
je
in
cmp
mov
lahf
xchg
out
and
mov
or
cs
ret
scas
test
(bad)
outs
mov
pusha
jg
adc
mov
mov
dec
js
popf
popa
xor
xor
sub
or
scas
ret
pop
ret
inc
popa
stc
shl
sbb
in
mov
xor
cmp
nop
ss
rol
jae
lock
stc
pop
mov
jo
push
jl
nop
adc
pushf
pop
scas
call
dec
pop
dec
lea
or
repz
inc
dec
loop
test
cmps
cmp
pusha
cmp
shl
mov
cmp
mov
sub
adc
pop
mov
shl
mov
inc
sub
aad
movs
push
pop
dec
scas
sar
push
(bad)
mov
lods
jmp
inc
aad
fwait
xchg
imul
lds
dec
js
sbb
test
inc
xchg
jae
xchg
sub
jne
dec
loop
sub
jp
dec
jmp
dec
shl
clc
push
call
rol
fild
lods
popa
bound
das
popf
xor
inc
mov
fldcw
cld
cmp
popa
dec
aam
or
ret
and
inc
gs
mov
sub
adc
fisttp
dec
mov
mov
aas
and
enter
pop
fistp
rcr
dec
jl
sub
scas
sub
mov
retf
das
xor
lods
jmp
test
sub
xor
add
inc
mov
fisttp
arpl
ror
int3
(bad)
lahf
sub
xchg
inc
adc
shl
leave
inc
mov
repnz
mov
ins
adc
push
dec
mov
in
icebp
cmp
or
dec
aad
xor
and
mov
dec
mov
stos
jp
movs
mov
jo
cmp
ror
mov
(bad)
jns
mul
xchg
xchg
and
push
gs
jmp
scas
hlt
pop
push
xchg
push
and
sahf
leave
ror
push
shl
xor
jno
into
gs
mov
scas
pop
add
cdq
cdq
cmps
popf
push
mov
push
mov
out
ss
push
cdq
or
xchg
sub
fild
mov
js
mov
pop
xchg
cmps
pop
les
fnsave
add
mov
loopne
jg
popa
test
in
outs
xor
out
and
xchg
push
add
popa
jae
jle
pop
and
rcl
into
ins
stc
retf
mov
aam
ins
repnz
pusha
call
cmc
sub
into
fwait
push
push
sub
addr16
sti
fmul
add
cmp
ds
mov
les
cwde
imul
pusha
sub
retf
aas
imul
dec
inc
dec
dec
fst
dec
adc
aas
push
fwait
dec
sub
dec
movs
cmp
add
push
aad
jb
mov
jne
popf
(bad)
scas
add
mov
aaa
adc
leave
xchg
inc
rcr
sahf
and
fsave
cld
rcr
test
sub
fwait
stos
outs
pop
clc
out
int
in
push
jmp
mov
sub
and
aaa
(bad)
jmp
outs
mov
call
add
inc
pop
movs
sbb
pop
arpl
cmp
inc
and
movs
jle
test
int3
jmp
je
nop
shl
nop
sub
cmps
mov
add
or
and
and
(bad)
xor
or
inc
test
xor
cmp
test
sub
rol
sbb
cmps
hlt
pop
(bad)
outs
fidivr
sbb
icebp
loopne
sub
sbb
inc
sub
shl
cmp
sub
sti
cs
es
sub
out
outs
mov
nop
mov
shl
loop
cmp
add
push
sub
jge
jnp
cs
(bad)
outs
mov
adc
dec
and
or
mov
cmp
pusha
inc
loop
inc
shr
mov
xchg
jno
scas
imul
mov
imul
xchg
xchg
adc
pop
xor
or
mov
popa
retf
pop
fdivr
or
loope
jle
add
mov
pop
sbb
scas
in
jb
in
add
inc
add
fsub
pop
push
xor
fst
(bad)
nop
mov
retfw
mov
jg
xchg
dec
mov
xchg
out
movs
retf
and
or
(bad)
cdq
jbe
out
cdq
popf
push
iret
je
(bad)
or
jno
fwait
mov
pushf
outs
fdivr
add
fisttp
fisttp
loope
loopne
push
pusha
mov
mov
push
and
mov
inc
je
jecxz
xor
inc
aad
mov
fwait
adc
xchg
imul
call
dec
test
div
lahf
inc
mov
ins
into
enter
xor
out
cmps
(bad)
in
int3
ss
not
xchg
or
or
shr
mov
add
pop
and
enter
jo
in
jl
iret
xchg
push
test
nop
cmp
pop
or
repnz
retf
cmps
jae
in
jp
push
fsub
sub
mov
push
inc
cmp
cmp
stos
or
xor
cs
in
pop
mov
(bad)
cmp
cdq
push
and
sub
cmp
cmps
fldenv
xchg
sbb
push
pop
dec
and
cmp
nop
mov
dec
inc
cmp
mov
mov
cmp
sub
xchg
or
call
retf
test
arpl
leave
loope
jns
xor
call
cmp
and
repnz
push
lock
pop
or
jae
sahf
and
cs
inc
mov
inc
xor
popf
nop
lods
mov
mov
ret
nop
scas
dec
retf
and
dec
sahf
mov
loope
jmp
into
repz
jg
outs
test
pop
mov
push
xchg
sbb
add
push
or
jnp
mov
shr
push
rcr
test
mov
adc
sub
retf
xchg
cmps
pop
call
imul
pop
mov
mov
pop
call
dec
test
cmp
rol
jo
retf
pop
adc
mov
sbb
xchg
and
packssdw
dec
int3
adc
jmp
and
cmps
jae
pop
hlt
sub
adc
jp
mov
mov
mov
neg
scas
out
xor
js
fsub
outs
(bad)
mov
repnz
stos
cld
stos
push
jecxz
inc
or
fisttp
dec
and
sub
aas
loop
cmps
pop
mov
popf
pop
and
fwait
mov
xchg
mov
imul
inc
add
mul
jg
(bad)
xchg
dec
es
push
loop
ja
pop
or
add
and
outs
pop
inc
jb
push
loope
fmul
push
imul
xlat
in
cdq
xchg
mov
das
mov
mov
pop
push
lods
dec
dec
mov
int3
xrelease
(bad)
dec
imul
ins
lock
xchg
test
mov
push
or
add
mov
rcl
mov
jmp
ins
ficom
ja
cwde
sahf
lods
xchg
mov
pop
addr16
push
bound
ds
jle
and
retf
cmp
aas
test
icebp
outs
mov
stc
in
mov
(bad)
cli
pushf
leave
(bad)
outs
cmp
out
adc
fdiv
arpl
rcl
mov
(bad)
test
icebp
fistp
mov
push
jb
data16
or
outs
movs
add
aam
mov
or
(bad)
cmps
bound
loopne
dec
xor
(bad)
fs
cmc
xchg
xchg
pop
sbb
(bad)
imul
retf
into
int
leave
loope
and
pop
or
pop
and
jo
dec
gs
ss
clc
ds
jae
dec
mov
sbb
sub
sub
push
repnz
fistp
les
inc
xor
outs
leave
cmps
fwait
imul
sbb
aaa
ret
(bad)
ds
inc
or
xchg
mov
sar
xchg
and
or
pop
adc
aas
imul
sti
shr
push
xchg
(bad)
bound
clc
inc
push
movs
fistp
addr16
sbb
cmp
sahf
repnz
js
retf
pushw
and
mov
xor
cmp
xor
inc
es
in
dec
sub
in
stos
aam
push
push
mov
aam
dec
aaa
mov
rcl
mov
out
sbb
pop
pop
les
or
or
push
sbb
sbb
lahf
pop
push
lea
cli
das
mov
jnp
popf
das
mov
dec
(bad)
mov
je
ja
(bad)
repz
scas
lods
call
in
mov
mov
popa
stc
sbb
retf
cli
cmp
mov
pop
out
aas
adc
call
je
mov
adc
xor
jg
pop
push
xchg
inc
stos
xor
movs
mov
int
sti
fimul
pop
lods
mov
icebp
jns
loope
add
loopne
lahf
ret
repz
mov
pop
js
es
pop
out
lea
in
cmp
sbb
aas
rcl
dec
in
push
push
pop
pop
loope
mov
jmpw
in
pop
enter
adc
(bad)
jae
mov
xchg
cmp
in
dec
and
lds
sbb
adc
push
add
imul
jns
push
enter
shl
push
cmc
lods
adc
fsub
pop
test
jmp
sahf
mov
jo
in
xchg
push
jmp
add
(bad)
icebp
mov
jg
mov
inc
fadd
or
ins
aam
cmp
sub
call
scas
sbb
and
jno
and
fs
pop
mov
imul
add
push
sbb
dec
push
in
mov
mov
mov
aas
out
stos
push
bound
dec
pop
rol
nop
xchg
iret
adc
cmp
sub
lea
ins
cmp
(bad)
iret
iret
pop
scas
mov
mov
jl
xchg
fcom
sub
jle
and
pop
jo
mov
int3
leave
popa
test
mov
aaa
out
sar
pop
stc
push
pop
xor
cmp
push
in
mov
outs
add
fsub
jae
adc
pop
jecxz
shr
jae
pop
push
cs
push
push
jle
mov
inc
push
pop
sub
lods
in
cmc
sbb
mov
ficom
data16
js
fwait
jg
aam
mov
out
out
dec
adc
addr16
sbb
inc
mov
lea
pop
or
imul
sub
dec
nop
fld
adc
(bad)
xor
pop
mov
mov
add
push
pusha
xchg
div
push
leave
cmps
xlat
xlat
lea
jo
adc
sub
imul
sbb
mov
cmp
cmps
shl
test
outs
jmp
mov
pop
jno
enter
dec
mov
ins
xchg
mov
dec
jge
xlat
sahf
js
xlat
sbb
mov
pop
sub
pusha
test
add
jno
(bad)
nop
xchg
outs
inc
mov
ret
cmp
xor
iret
sub
adc
push
loope
mov
dec
stos
je
ret
jl
(bad)
sub
pop
sub
adc
dec
or
(bad)
mov
xor
adc
sub
scas
sti
lds
mov
cld
imul
or
jg
js
xor
lods
adc
outs
out
cmp
cwde
mov
jne
xchg
sub
jo
push
jge
jbe
cmp
fidiv
jl
data16
jbe
jae
xor
cmp
push
pop
loop
cmp
cmps
shl
les
inc
rcr
(bad)
lds
cmp
test
push
js
mov
pop
jp
mov
out
sbb
sub
or
mov
adc
arpl
mov
mov
fadd
mov
mov
push
hlt
xor
es
sbb
mov
int3
lods
sbb
mov
aas
xor
xchg
int
ret
mov
pop
mov
and
fdiv
push
js
in
dec
push
pop
mov
or
cmps
test
cld
ds
mov
fdiv
mov
push
inc
popf
mov
xchg
test
ins
test
fidiv
sbb
push
pop
xchg
mov
fnsave
mov
pop
pop
inc
sbb
ret
xchg
icebp
xor
mov
or
dec
in
mov
lds
jns
cmps
mov
lock
ret
je
add
cmps
jmp
lahf
ss
xsaves
pop
popa
lea
(bad)
(bad)
and
je
push
pop
xchg
out
ins
call
jne
mov
inc
movs
mov
mov
and
lea
test
mov
imul
out
inc
cmps
sbb
mov
pop
aaa
std
cmp
daa
adc
cmps
dec
aad
adc
movs
cmp
cs
push
std
mov
lds
fld
shr
js
or
loope
and
pop
ja
stos
in
fild
test
movs
push
stos
sub
dec
outs
mov
push
loope
jp
test
cmp
in
in
out
ret
inc
dec
dec
movs
xchg
mov
mov
cdq
leave
mov
add
lock
pop
adc
jbe
dec
(bad)
cs
xchg
dec
add
adc
sub
jmp
loop
addr16
jmp
dec
mov
sbb
mov
bound
and
adc
imul
sbb
push
pop
lea
outs
js
dec
scas
xchg
push
jl
(bad)
jne
imul
xor
pop
push
xor
shl
jp
lods
fnstenv
ret
ret
add
cmp
lahf
dec
mov
mov
push
adc
add
sti
add
add
mov
sub
pop
mov
jg
test
and
sbb
lods
or
add
(bad)
mov
(bad)
adc
pop
int3
pop
out
out
cmp
and
pop
retf
in
hlt
repnz
inc
scas
aam
ja
(bad)
adc
adc
pushf
loop
sub
mov
jecxz
neg
pop
dec
hlt
cwde
pop
fld
dec
mov
xchg
dec
push
push
mov
push
movs
cld
push
pop
xlat
lock
fdiv
xor
jae
jb
sub
jle
int3
sub
xchg
mov
aaa
mov
rol
sub
sub
nop
xchg
loope
push
test
sub
jge
js
push
sar
mov
fimul
(bad)
mov
loop
inc
and
dec
and
jno
sub
or
and
xor
cmps
fcomp
push
jge
pop
test
cli
pop
mov
mov
xor
and
stc
adc
nop
mov
inc
loope
gs
stos
shl
cmp
dec
jg
push
jge
cmp
mov
les
std
sbb
inc
dec
stos
mov
leave
lahf
repnz
lea
shl
cwde
stos
loope
mov
xor
xchg
pop
and
iret
push
sbb
sbb
out
cmps
xchg
call
arpl
popa
fistp
jg
repz
add
cwde
inc
inc
jl
adc
mov
push
mov
adc
cmp
call
adc
cmps
inc
jo
jo
lds
cwde
in
jno
stos
fidivr
stos
call
pop
fs
je
or
cmp
push
sbb
test
rcr
push
cmps
sahf
adc
adc
add
fsubp
mov
arpl
test
jbe
test
pushf
cmps
jae
push
(bad)
punpckhdq
pop
pop
jle
pushf
sub
jp
or
call
xor
push
and
jle
mov
mov
adc
enter
enter
js
cs
loope
dec
nop
push
or
enter
stos
dec
adc
pushf
fdivr
push
cmp
push
ret
add
adc
repz
jo
mov
pop
sahf
adc
fldenv
and
and
arpl
mov
cld
shl
sbb
int3
cmovae
ja
loop
test
xor
dec
out
dec
stc
outs
cmp
cmp
les
jae
aad
mov
fwait
mov
in
enter
rcl
aaa
mov
xchg
mov
mov
inc
jne
pop
sub
jmp
or
inc
mov
int3
mov
std
addr16
mov
pusha
push
test
test
lahf
jo
aaa
xchg
fldcw
leave
xchg
icebp
xor
popf
and
clc
mov
fmul
or
ret
push
loop
cmps
iret
into
pop
clc
cmps
push
retf
shr
rol
xchg
xor
scas
mov
xchg
xor
dec
cmp
push
pop
das
mov
lahf
lods
add
scas
or
mov
test
scas
and
in
adc
ins
popf
aad
jmp
sbb
xchg
mov
xchg
daa
fwait
(bad)
jmp
pop
jecxz
(bad)
xor
cld
es
jp
ja
lds
int3
sbb
in
mov
rcr
ds
mov
jg
fwait
into
movs
inc
pop
shr
cmp
stc
jp
xor
mov
inc
dec
(bad)
mov
out
lds
cs
xor
inc
shl
lods
popa
movs
xchg
lds
pushf
and
mov
fcmovbe
ins
sub
push
pusha
dec
add
sbb
scas
fsubr
or
ss
arpl
xor
xor
xor
stc
sbb
ror
adc
popf
popf
(bad)
shr
mov
int3
daa
loop
cmp
ins
sub
cmp
push
push
mov
popa
ret
nop
pop
jp
lods
loope
shl
sub
xor
sbb
jns
xchg
leave
ds
adc
les
adc
cs
push
stos
add
xor
std
jle
cmp
out
sub
ret
pop
jbe
(bad)
gs
mov
sbb
fdivr
jnp
fbstp
or
sbb
test
push
ss
push
into
mov
fldln2
gs
dec
call
pop
mov
mov
and
stos
int
mov
mov
idiv
add
push
and
rcl
test
mov
dec
cmp
pop
and
je
dec
fst
getsec
lods
sub
aam
xchg
sahf
daa
push
mov
mov
std
pop
not
mov
push
add
cvtpi2ps
lods
mov
adc
jns
pop
mov
inc
outs
cmp
sbb
out
cmp
scas
stos
addr16
test
es
and
inc
pop
push
pop
call
shr
mov
test
outs
and
movs
mov
(bad)
or
jnp
mov
fyl2xp1
imul
out
and
mov
cmps
shl
pop
and
xor
dec
mov
outs
add
and
in
or
sub
xchg
clc
adc
iret
fisttp
enter
loope
push
pop
add
cli
jnp
add
sbb
loop
xchg
(bad)
inc
jns
jo
add
adc
inc
jge
stos
sbb
cli
iret
dec
ins
lods
cs
iret
jmp
out
xchg
pop
in
test
imul
fwait
shl
and
adc
pop
push
or
mov
pusha
test
jmp
xor
or
bound
mov
or
imul
pusha
mov
add
sahf
mov
mov
jno
scas
out
xor
(bad)
test
cmp
(bad)
je
imul
and
imul
ins
mov
adc
in
and
inc
mov
aas
(bad)
jp
aam
mov
in
in
call
pop
sahf
movs
cmps
jl
les
push
in
adc
dec
popa
icebp
fimul
call
ret
in
sti
clc
dec
inc
mov
cmp
push
cdq
(bad)
or
push
mov
cmps
add
cmp
mov
pusha
xchg
popa
into
nop
sub
cmp
repz
jbe
fild
dec
pop
jl
aad
push
call
sar
adc
cmps
pop
cmc
gs
mov
jmp
shl
push
dec
fsub
loop
jns
mov
ins
mov
retf
outs
dec
push
(bad)
xor
(bad)
out
test
in
js
cli
push
aad
daa
dec
(bad)
jmp
in
xchg
test
inc
xor
pop
or
jecxz
xchg
inc
cld
outs
leave
sbb
sub
dec
inc
dec
xor
clc
push
(bad)
test
scas
arpl
aas
dec
dec
mov
mov
push
mov
nop
inc
push
sub
repnz
out
ja
xchg
mov
(bad)
sti
mov
dec
xor
or
push
xor
adc
popa
es
ja
in
ja
in
inc
fs
dec
sbb
outs
ficomp
mov
pop
cs
test
mov
sub
test
cmps
mov
mov
movs
add
sbb
ror
add
call
cld
ins
cmp
cmc
mov
adc
cli
cs
jmp
add
pop
mov
(bad)
hlt
adc
mov
addr16
pop
or
pushf
and
jecxz
fld
retf
arpl
fiadd
(bad)
in
mov
bound
cmp
pop
cmp
sbb
jmp
pop
daa
xor
loope
test
cmp
stos
fisttp
iret
repz
iret
movs
inc
stos
mov
int3
mov
popf
imul
and
ds
lods
retf
and
shl
lock
fnstsw
adc
enter
test
out
mov
cmps
iret
loop
sub
paddq
jmp
mov
push
icebp
push
xor
pop
mov
in
push
mul
ss
adc
hlt
je
jp
pop
mov
add
pop
adc
out
add
(bad)
pop
cmp
aas
(bad)
sub
ins
add
sub
pusha
jns
dec
out
xchg
daa
and
pop
sub
ret
cmps
pop
stc
mov
or
retf
movs
fsubr
xchg
pushf
mov
sub
xor
jecxz
cmp
inc
add
adc
pop
or
mov
add
pop
xor
push
sahf
lods
sub
xchg
cmp
lock
les
(bad)
sar
sbb
loop
cli
add
mov
pop
jge
enter
ss
fadd
adc
imul
outs
mov
sbb
(bad)
cs
sti
mov
xchg
retf
ja
cmp
mov
sbb
jne
fs
sub
inc
jmp
ret
sar
loop
jnp
jge
push
retf
scas
fild
mov
cmp
adc
mov
jo
sub
xchg
into
cdq
or
add
test
fnstenv
push
fwait
xchg
je
div
adc
imul
icebp
gs
repz
ret
outs
cmc
int
lods
xor
xchg
inc
mov
add
fwait
dec
xlat
jae
paddq
lahf
xchg
adc
sbb
cmp
cmp
sahf
xchg
or
jnp
lea
dec
gs
out
scas
mov
sahf
mov
adc
add
push
or
push
or
and
sbb
lock
xor
in
inc
xor
mov
sub
jbe
ins
aad
pop
xchg
mov
or
or
lahf
inc
or
cmp
add
jmp
or
popa
sbb
aam
cli
test
or
imul
ret
popf
pop
scas
lahf
mov
cmp
(bad)
or
out
mul
dec
test
or
lea
mov
shl
and
fld
aaa
ja
fs
aas
inc
loopne
fmul
(bad)
pop
fbld
rcl
js
mov
inc
mov
sub
xlat
or
mov
jge
mov
loope
mov
loopne
lods
gs
rep
jge
pop
cld
mov
xchg
sbb
cli
repz
das
das
ja
stos
pop
cmp
in
push
pop
lods
loopne
jge
out
rcr
mov
out
mov
retf
retf
mov
test
and
cdq
xchg
or
(bad)
sar
cmp
mov
cli
and
xchg
les
jae
arpl
lods
fld
add
adc
adc
mov
(bad)
jmp
or
sub
in
mov
rcl
mov
bsf
jno
jp
cmova
xchg
pavgb
sub
stos
mov
repnz
sub
push
add
loopne
fst
jo
jno
push
cli
push
out
push
call
lock
jno
enter
addr16
pop
sbb
push
movs
not
push
outs
xor
mov
nop
sbb
out
cmp
ss
nop
dec
imul
sar
(bad)
adc
cmp
fs
das
(bad)
push
icebp
push
xlat
int3
mov
fwait
or
call
retf
ficomp
popf
leave
dec
lods
cwde
cs
mov
jns
pop
(bad)
hlt
iret
ficom
stos
fisub
add
ins
jns
cmp
into
sar
push
mov
pop
pop
or
js
sbb
jno
ret
jo
jne
std
rol
cmp
jbe
adc
shl
pop
push
enter
or
dec
push
inc
or
push
test
in
out
or
adc
sbb
dec
daa
pop
or
dec
sti
ins
mov
xor
(bad)
fnstsw
mov
or
add
xor
adc
call
(bad)
jbe
or
data16
xlat
fsubr
or
pop
and
mov
jg
mov
add
dec
sub
push
outs
imul
scas
jns
jl
fwait
adc
push
or
mov
stos
adc
bound
cmp
jle
jg
loopne
xchg
inc
or
push
inc
or
test
push
jno
adc
mov
bound
sub
push
js
jae
dec
in
mov
sbb
pop
push
xchg
cmp
sub
mov
cwde
js
mov
leave
adc
mov
mov
ret
in
push
das
std
and
jne
mov
xchg
inc
retf
rcl
shr
fild
mov
dec
inc
mov
mov
stos
adc
and
xchg
call
mov
pop
mov
mov
cmps
ins
mov
cmps
out
xchg
imul
out
mov
pushf
add
mov
cdq
fimul
test
xor
pop
xor
ins
fs
call
jae
xor
mov
rol
inc
and
arpl
cmp
cli
jmp
dec
data16
adc
sbb
dec
xor
(bad)
test
lds
dec
lods
mov
cmp
fcomp
sub
cs
mov
fnsave
jnp
cmp
mov
sbb
pop
xchg
jge
or
jae
jmp
mov
mov
hlt
mov
add
and
xchg
pop
inc
idiv
pushf
ret
and
and
int3
fwait
std
xchg
cmp
sub
xchg
lods
ret
mov
addr16
pop
fisubr
loopne
adc
scas
pop
mov
(bad)
(bad)
test
hlt
push
mov
popa
and
les
stos
test
dec
push
cwde
push
cmp
scas
div
test
fst
retf
mov
stos
fld
jns
inc
and
push
sub
jg
cli
add
int3
or
in
cmc
inc
mov
rol
popf
cmps
sbb
mov
int3
aam
mov
and
pop
inc
or
jg
jle
jbe
(bad)
mov
into
push
imul
ficom
jbe
ds
or
cmp
ja
loop
mov
add
ja
loopne
lock
fstp
jb
pop
fsubr
cwde
add
test
out
pop
test
xchg
xchg
repz
jecxz
test
(bad)
scas
jmp
sbb
cmp
adc
mov
daa
mov
(bad)
inc
rcl
mov
jp
dec
jnp
icebp
arpl
add
or
(bad)
imul
add
ins
and
and
add
mov
mov
cwde
dec
and
cli
xor
push
ja
dec
push
arpl
adc
vpaddw
lds
repnz
arpl
mov
ss
lahf
mov
xchg
loopne
xor
neg
loopne
ja
retf
sbb
sbb
cli
test
fs
add
xor
fdivr
push
je
push
or
pop
addr16
not
nop
adc
mov
fnsave
out
pop
jo
sahf
(bad)
push
push
scas
inc
xchg
ror
(bad)
mov
fcmovb
ins
sub
es
or
mov
dec
xchg
out
cmc
cmp
add
loopne
cmp
fs
scas
jg
xchg
xor
fdivr
push
ret
mov
mov
stos
in
adc
mov
jle
(bad)
cmps
int
mov
outs
popa
into
fwait
sbb
or
ss
bound
ja
sti
(bad)
xchg
jg
sahf
add
and
ins
sbb
xor
outs
jg
test
imul
mov
or
popa
pop
fld
fadd
cmps
push
sub
arpl
add
xchg
jp
mov
shl
sar
xchg
mov
dec
dec
and
jle
js
pop
test
or
aam
and
leave
push
push
and
in
jns
popa
push
cmps
bound
aam
adc
sti
cmp
xchg
ror
mov
xor
je
push
iret
cmp
inc
in
sbb
and
inc
mov
int
fcom
cmps
pop
idiv
ins
rol
loopne
xor
xchg
sar
jae
scas
scas
clc
dec
das
add
pop
pop
outs
cmp
mov
adc
cmp
popf
xchg
fld
xor
push
sbb
fdivr
jmp
adc
loopne
data16
adc
xor
mov
push
jo
out
data16
icebp
push
(bad)
mov
neg
jae
pop
dec
or
xor
or
iret
push
cmc
or
sbb
pop
and
retf
mov
rcr
hlt
aad
dec
jno
fadd
mov
cli
test
xchg
scas
les
test
jecxz
(bad)
popf
out
dec
stos
sbb
mov
adc
pushf
dec
xchg
int3
fs
push
stos
test
sbb
outs
jns
mov
and
mov
call
mov
jecxz
inc
cmp
xchg
xor
shl
in
add
inc
call
lods
or
sbb
fld
scas
jns
(bad)
pop
or
adc
movs
fdivp
ds
icebp
ins
mov
jg
repnz
rcr
cmps
pop
xchg
aas
push
aas
(bad)
enter
inc
jmp
push
nop
or
push
jno
adc
mov
xchg
pop
jno
lds
and
int
cmp
les
xor
sbb
and
imul
jns
jno
sbb
mov
xor
mov
push
hlt
mov
mov
inc
dec
or
push
sbb
xchg
cld
sahf
adc
xlat
shl
mov
xchg
(bad)
data16
cmp
mov
inc
sar
xchg
fidiv
cdq
mov
data16
add
add
add
cmp
sub
push
dec
lahf
adc
push
test
mov
shl
movs
out
sbb
mov
xor
xor
shr
ss
push
stos
cmp
or
push
push
pop
mov
stos
fdivr
fist
mov
clc
lods
xchg
cmp
cmp
mov
shl
xchg
sbb
popf
mov
not
cmp
shl
sbb
in
xor
out
push
sub
aad
gs
sbb
or
loope
popa
xchg
pusha
in
mov
stos
sub
fcomp
dec
pop
cmp
inc
mov
xchg
adc
test
fnstcw
sub
out
dec
mov
into
repz
cmp
xchg
jecxz
dec
aas
adc
(bad)
mov
push
call
test
cmp
out
add
jnp
xchg
call
sbb
stos
xor
and
imul
or
push
inc
jge
or
shr
push
in
fsubr
stos
ds
stos
aas
jge
(bad)
outs
xor
sar
or
in
adc
mov
mov
xor
jne
out
hlt
das
jmp
mov
imul
mov
push
adc
gs
jge
adc
popf
rol
mov
mov
jno
mov
je
out
rcr
adc
and
adc
xchg
int3
(bad)
cwde
xchg
aaa
in
shl
mov
xor
fdivr
jo
fld
mov
data16
cld
xchg
mov
outs
cmp
stos
xor
ins
push
add
call
ins
add
(bad)
jno
pop
push
fisttp
ds
ret
cmp
ins
dec
cld
lahf
rcr
pop
fbstp
psrad
pushf
xor
ror
xchg
push
pop
pop
mov
lods
retf
jne
cmp
push
sbb
je
popf
popf
rcl
pop
jae
das
and
movs
or
xor
jns
in
lods
inc
inc
fild
retf
or
daa
rcl
out
pusha
hlt
aaa
scas
push
retf
cmp
dec
or
inc
add
add
jecxz
sti
ja
push
cli
sbb
ss
pushf
jmp
enter
xchg
jmp
daa
xor
pop
mov
jb
ffree
jp
xchg
mov
adc
or
fstp
mov
jmp
fs
sub
jbe
jmp
adc
push
sub
add
mov
std
adc
mov
mov
not
ret
les
fcom
mov
xor
add
imul
xchg
jns
div
fldenv
pop
(bad)
dec
adc
pop
jnp
and
mov
sub
neg
clc
jmp
pop
cmp
lahf
cmc
add
call
shl
sub
jns
sar
test
jle
xchg
or
cld
xor
xchg
push
xchg
test
cwde
test
and
arpl
cmp
add
pop
lods
pop
pop
inc
ret
jno
nop
adc
scas
mov
(bad)
sub
jnp
shr
jno
jl
loop
mov
(bad)
rcr
out
push
cmc
sub
enter
inc
cmp
xchg
retf
mov
pop
sti
dec
push
sahf
call
and
mov
movs
jnp
retf
mov
rol
popa
xchg
dec
int
sbb
cwde
xchg
xchg
dec
call
ins
fmul
mov
nop
and
nop
int
pop
sbb
sbb
dec
pop
xor
retf
cmp
cmp
fst
outs
in
or
mov
fsubrp
pop
stos
inc
push
movs
add
(bad)
xchg
imul
jg
aas
in
pusha
mov
jns
mov
mov
fld
outs
pop
adc
into
cs
xchg
(bad)
xlat
scas
repz
bound
js
jmp
xor
fcom
mov
cmp
adc
jo
nop
pop
add
dec
jle
add
push
jo
inc
stc
push
iret
xor
and
add
jl
jo
pop
js
adc
push
bound
pushf
lds
or
mov
pop
sar
dec
xchg
mov
aam
dec
fcomi
xchg
pushf
and
add
xlat
jnp
or
mov
ss
repnz
js
xchg
mov
leave
jo
gs
dec
push
loope
std
mov
xor
loop
mov
int
push
cmp
mov
jg
outs
push
fidiv
jecxz
loope
fcmovnbe
imul
mov
std
cmp
push
in
mov
sahf
or
mov
enter
sbb
dec
adc
mov
mov
jb
jmp
xchg
inc
in
loop
mov
in
hlt
aaa
add
movs
mov
add
(bad)
mov
pop
inc
add
shl
jbe
out
repz
xor
shl
mov
mov
pop
pop
push
add
jno
sti
dec
out
test
push
adc
stos
and
das
ss
cmp
sub
pop
imul
mov
imul
push
imul
cmp
ret
mov
inc
xchg
mov
push
inc
ins
pop
cmps
idiv
mov
lods
repnz
dec
cs
scas
ja
push
imul
(bad)
outs
mov
sub
imul
jmp
jo
fisub
sub
fisub
jl
dec
ins
in
add
xchg
call
out
pop
retf
pop
mov
dec
enter
cmps
or
pop
adc
(bad)
pop
or
or
cmp
call
loopne
ret
fs
out
push
dec
test
push
sub
out
jecxz
int
and
pop
add
shl
cmps
daa
dec
ja
ret
xor
cmps
xchg
pop
mov
or
mov
xor
push
sbb
dec
scas
cmc
lds
fidivr
dec
or
add
cld
cmp
in
pop
aad
pop
dec
xchg
mov
add
cmp
lock
aad
add
jmp
mov
mov
push
ret
push
test
out
pop
and
xor
ds
stos
mov
test
add
push
lods
call
xor
je
ss
xchg
mov
xchg
iret
mov
jg
inc
cmps
loope
scas
repz
mov
fs
pop
mov
nop
rcl
jne
movs
push
push
fisub
outs
pop
(bad)
in
adc
shl
adc
inc
push
mov
daa
jmp
es
and
(bad)
sti
ror
sbb
nop
aaa
adc
jno
mov
pusha
enter
psubd
or
mov
push
cmps
sbb
rcl
dec
mov
xchg
fild
or
in
mov
sub
adc
sbb
cmp
cli
ins
jmp
add
pushf
xor
js
mov
cmp
int
jp
fwait
loop
ror
or
call
popa
sub
xor
pop
(bad)
and
mov
fistp
ins
pusha
inc
movs
fild
loop
(bad)
mov
mov
rcr
push
(bad)
jno
jbe
adc
jo
ins
or
test
push
xor
push
push
scas
mov
loopne
aam
jns
pop
and
(bad)
popa
ss
mov
into
out
and
popa
(bad)
xlat
add
and
arpl
mov
outs
mov
das
jb
inc
cmp
imul
int3
fmulp
xchg
sub
and
mov
test
int
out
sub
push
adc
test
jmp
xlat
pcmpeqb
dec
jl
js
inc
push
fiadd
xor
mov
add
pop
xlat
push
test
mov
enter
(bad)
and
retf
and
dec
and
dec
mov
vpsrlq
jb
push
push
les
jg
daa
aam
int3
dec
outs
idiv
movs
data16
cmps
(bad)
dec
sti
dec
nop
mov
test
call
fdiv
lea
fisub
pop
aam
or
mov
and
lods
push
rcl
(bad)
cmp
jg
stos
mov
add
cld
pop
pushf
je
(bad)
lock
fist
cwde
adc
xchg
aad
mov
lods
fbld
addr16
pop
mov
aas
(bad)
in
mov
mov
cmc
mov
movs
push
addr16
dec
aaa
mov
pop
lahf
(bad)
mov
pop
jns
xlat
les
sub
xor
xchg
or
sub
mov
in
shr
stos
ret
adc
adc
stos
aad
(bad)
xor
f2xm1
mov
cmps
lea
repz
test
test
call
fnsave
jl
enter
sar
pop
push
sbb
enter
fs
push
(bad)
clc
mov
xchg
icebp
popf
leave
out
pop
aam
inc
mov
inc
sub
dec
outs
inc
jmp
mov
(bad)
ins
out
punpckhwd
push
dec
sbb
bnd
add
xchg
stos
mov
pusha
ins
call
enter
add
push
mov
iret
icebp
xchg
pop
xor
mov
push
jns
jg
daa
ins
pop
mov
cmp
imul
mov
pop
xlat
cmps
jle
jns
test
inc
push
inc
adc
sbb
cmp
pop
xor
mov
test
lock
cld
test
(bad)
mov
xor
cmps
scas
xchg
stos
into
pand
and
xchg
jb
ret
lock
imul
mov
ret
mov
call
and
imul
hlt
mov
push
jns
sbb
(bad)
pop
daa
in
add
add
sbb
dec
pop
fucomp
lds
aad
sbb
mov
cmps
sbb
fadd
sub
rol
push
mov
ja
mov
adc
(bad)
and
fild
clts
mov
sub
mov
lods
int
movs
mov
loope
xchg
pop
loop
or
aad
jl
inc
jl
stc
jmpw
test
pusha
ins
loop
dec
icebp
imul
(bad)
imul
fmul
add
enter
push
push
popa
jecxz
retf
cmps
nop
and
les
sbb
mov
pop
scas
adc
inc
and
stc
mov
outs
sar
cmp
jae
(bad)
retf
lahf
adc
xchg
fst
es
ds
mov
movs
sbb
in
cmc
cmc
push
(bad)
inc
jp
shl
aas
or
inc
dec
inc
jo
movs
xor
xor
dec
pushf
outs
xchg
jle
mov
fsub
dec
push
jl
popf
sti
fistp
mov
bound
mov
sub
pop
fcmovu
sbb
and
outs
je
in
lahf
aaa
add
daa
dec
cmp
mul
movs
xchg
std
xor
shl
or
add
out
and
ins
aaa
xchg
cmp
popf
mov
xchg
and
gs
xor
into
xor
mov
mov
outs
call
cmp
jbe
ror
mov
jge
cmp
mov
xchg
movs
ret
iret
jae
loope
xchg
sub
dec
(bad)
loop
lahf
fcmovnbe
inc
jge
ret
stos
pop
rcr
nop
push
mov
mov
xchg
lock
jmp
lods
fidiv
ret
push
arpl
mov
ret
cld
inc
jns
sti
in
(bad)
sub
sub
fidiv
cmp
xor
xchg
and
cdq
iret
movs
and
xchg
fdivr
mov
mov
jnp
in
adc
imul
xor
mov
les
pop
fnsave
or
inc
inc
jg
les
jle
rcl
mov
cmp
inc
movs
pop
call
push
inc
(bad)
in
mov
push
cli
sub
sahf
lea
mov
daa
push
cdq
sbb
cmp
fwait
cmp
push
mov
jnp
add
pushf
mov
aad
mov
in
pushf
cmp
sub
cmp
xchg
add
sbb
mov
mov
iret
pushf
push
pop
pop
push
push
mov
ds
stc
mov
call
xchg
cmps
je
mov
jl
stos
adc
test
js
jmp
shr
addr16
and
fcom
sahf
xchg
cdq
ins
sbb
mov
cs
rcl
or
mov
stc
aas
pusha
mov
add
test
cmp
das
mov
aam
xchg
xor
push
sti
dec
cld
mov
dec
sti
mov
inc
sub
ror
cwde
leave
cwde
cmp
mov
jle
(bad)
mov
xor
mov
xchg
xchg
or
paddsb
retf
test
cmps
mov
jecxz
sub
adc
in
xchg
dec
sbb
outs
pop
xchg
jmp
push
mov
adc
xchg
js
fmul
js
sahf
movs
inc
sbb
or
jge
pop
and
fnstcw
push
loop
inc
(bad)
in
enter
icebp
ins
inc
imul
pop
ins
xchg
aad
daa
jae
cdq
mov
mov
sti
cmp
pusha
jo
pop
retf
out
fsub
xchg
add
gs
lahf
mov
and
add
fwait
xchg
enter
in
sub
pop
push
dec
imul
jg
add
xlat
cmp
pop
xor
and
loop
xor
adc
inc
jp
(bad)
in
stc
cmp
icebp
mov
cli
dec
rol
outs
ret
xor
fsubr
js
aam
mov
test
xchg
push
out
pop
add
scas
inc
test
ror
push
test
jecxz
mov
mov
inc
cwde
push
fisubr
mov
push
pusha
mov
out
jecxz
rcr
dec
push
pop
das
jnp
in
adc
fld
mov
inc
inc
sub
push
xor
std
mov
dec
xchg
imul
cli
or
fadd
imul
adc
xlat
sbb
je
fidivr
mov
popf
or
mov
sbb
xchg
xchg
int3
ror
push
and
mov
call
popf
nop
cmp
rcl
mov
es
test
cmp
and
jae
ins
mov
bound
push
ds
mov
mov
inc
adc
cli
add
pop
cmps
nop
jl
inc
pushf
jnp
or
push
aad
hlt
es
mov
adc
std
push
sbb
ja
cmps
out
popf
daa
mov
xlat
xor
add
xor
retf
icebp
pop
mov
xor
std
xchg
div
dec
inc
mov
adc
inc
mov
fbstp
cmps
ja
push
ss
pop
adc
daa
add
or
enter
(bad)
scas
clc
mov
xor
fidivr
sub
push
dec
adc
cwde
data16
(bad)
fild
out
mov
mov
mov
ror
jmp
xchg
popf
lock
mov
fimul
sub
add
mov
sub
mov
dec
mov
mov
movs
or
loop
daa
sub
pop
std
add
xchg
dec
sub
rol
aad
inc
mov
rcl
mov
adc
xor
push
sbb
cmp
mov
(bad)
aas
loope
inc
data16
cli
jns
shl
fisub
(bad)
sub
imul
test
lds
lock
jg
stc
xchg
xchg
add
sub
cwde
or
enter
sbb
dec
cs
repnz
sti
sbb
inc
das
mov
and
sub
adc
shl
dec
dec
mov
cmps
imul
push
(bad)
xchg
nop
or
(bad)
fcomp
hlt
les
push
jo
ret
iret
and
es
sahf
out
push
cmc
mov
xchg
int3
cmp
cmp
ret
into
gs
jmp
jns
inc
and
mov
jecxz
in
mov
add
(bad)
add
dec
shl
and
xor
mov
rcr
int3
mov
jl
loope
adc
aaa
loope
dec
adc
xor
fist
adc
loop
push
jmp
pusha
fiadd
lock
push
mov
cmp
mov
xchg
xor
jmp
xchg
xchg
dec
push
lods
pop
push
adc
dec
adc
test
pop
shr
test
pop
cmp
in
es
mov
popa
dec
add
es
adc
cmp
sub
mov
add
fdiv
cli
je
shr
aaa
and
iret
xor
mov
jmp
xchg
sbb
add
and
call
mov
test
scas
scas
inc
bound
push
add
inc
push
fld
lock
and
xlat
pop
es
and
ds
outs
sub
push
or
sub
mov
idiv
jp
inc
(bad)
xchg
out
cmp
fwait
lds
fldenv
ja
and
cld
xchg
sub
popf
test
push
mov
pusha
xchg
shr
stos
xor
aas
dec
jp
pop
mov
hlt
enter
push
shr
xchg
push
adc
repnz
imul
gs
pop
enter
(bad)
mov
xor
out
outs
mov
xchg
lds
not
jecxz
pusha
xor
fs
mov
ds
push
les
ret
and
add
shr
mov
repz
ret
jg
inc
adc
fisttp
das
sbb
sti
push
popf
retf
adc
jge
mov
jno
cwde
outs
outs
mov
and
mov
int3
xor
sbb
je
hlt
retf
dec
jmp
aam
mov
rcl
pop
push
test
push
cmp
mov
stos
push
aaa
and
sub
dec
cmp
adc
std
pop
jbe
inc
daa
shr
cmps
jno
pop
hlt
ja
aas
add
dec
jl
out
sar
push
test
dec
mov
stc
adc
pop
and
fnstenv
pop
mov
mov
call
cs
dec
loop
iret
sub
xchg
xchg
dec
es
jge
push
(bad)
aad
sbb
pop
and
push
inc
fwait
adc
scas
lahf
(bad)
cwde
(bad)
shr
scas
retf
(bad)
cs
shr
iret
push
out
push
mov
sub
dec
sti
ret
sbb
ins
lahf
pop
mov
pop
stos
aam
cmp
shr
or
sub
(bad)
sub
stos
scas
fild
and
inc
stos
icebp
sub
sbb
and
jecxz
push
inc
sbb
jp
inc
shl
xor
ret
sub
dec
loop
mov
stos
test
lods
loop
or
dec
jl
xchg
jbe
or
fwait
cs
fstp
aas
ret
adc
mov
xchg
cli
stc
mov
jmp
icebp
fidiv
in
cmp
hlt
out
jp
inc
ss
aas
cmc
(bad)
(bad)
in
into
pop
fcom
test
sub
aad
ja
adc
ss
add
imul
jae
push
xlat
sar
xor
daa
popa
mov
or
icebp
add
cmp
mov
in
mov
jg
popf
pop
jb
mov
scas
xchg
jle
sub
fs
lahf
ja
sub
cwde
push
lock
lock
lods
jg
out
sbb
adc
(bad)
and
mul
mov
into
lds
mov
jo
enter
in
mov
inc
sub
mov
mov
jbe
cs
imul
hlt
mov
ins
push
xchg
or
jle
sub
jecxz
(bad)
cmp
jle
sub
push
jecxz
xor
pop
mov
jle
jle
test
dec
(bad)
mov
inc
and
pop
sub
pop
ja
xchg
leave
adc
movs
sub
add
mov
inc
add
neg
push
popf
aaa
mov
call
mov
shl
xor
ss
sar
sar
sbb
lock
add
in
mov
or
lds
pop
mov
adc
mov
jg
xlat
push
xchg
mov
xchg
pop
(bad)
add
pop
aam
imul
push
mov
add
adc
push
mov
popa
retf
mov
out
jnp
neg
inc
out
xchg
daa
cmp
mov
and
xchg
jb
xor
dec
int3
lods
loopne
dec
xor
addr16
mov
push
test
retf
ss
and
movs
ret
push
or
jns
rcl
hlt
push
cmc
jge
repnz
loopne
jmp
pop
lock
test
push
fidiv
adc
pop
push
leave
jae
mov
(bad)
clc
cmp
or
or
into
iret
mov
and
or
mov
mov
fldenv
std
fldcw
mov
mov
inc
inc
push
jg
adc
mov
mov
mov
xchg
(bad)
mov
aam
mov
sub
mov
dec
sub
out
mov
or
ins
mov
je
mov
inc
arpl
mov
mov
shl
xchg
sbb
loop
fmul
je
retf
(bad)
out
mov
sub
and
jnp
fs
(bad)
scas
cmps
fsub
mov
imul
inc
xor
int3
(bad)
dec
add
aad
(bad)
cmps
or
xlat
ss
shr
pop
jmp
pop
or
jg
mov
xlat
rol
push
xor
jnp
sub
push
inc
mov
(bad)
mov
add
pop
scas
jnp
out
or
push
mov
mov
mov
add
mov
xor
test
fcmovnu
ins
mov
outs
jne
pop
aam
or
pop
xor
cmp
fs
bound
sbb
sub
(bad)
adc
in
sbb
jne
push
xor
xchg
je
retf
jp
(bad)
stos
pop
scas
test
pop
xor
mov
cld
in
add
sub
fwait
lahf
and
jmp
ins
loop
add
and
test
pop
sub
pop
xor
xchg
pop
dec
sbb
sbb
rcr
adc
sub
pusha
mov
movs
adc
xchg
sbb
xor
push
push
jmp
dec
enter
pushf
jle
out
mov
xchg
mov
xchg
ins
fstp
shr
aam
test
inc
xor
push
xor
jecxz
ss
cld
pop
mov
and
cmc
pusha
js
jecxz
cmp
and
sub
int3
sub
jmp
inc
xor
cmps
inc
dec
movd
cmp
or
fmulp
pop
mov
dec
popf
add
pop
imul
xchg
retf
jnp
movs
add
(bad)
clc
adc
mov
imul
dec
adc
xchg
lods
cwde
les
mov
and
mov
lahf
cld
or
pop
jge
xchg
cdq
xor
pop
mov
sub
xlat
mov
push
out
pop
dec
(bad)
pop
ret
test
test
enter
outs
mov
push
cwde
lds
xchg
test
mov
xchg
mov
sub
pop
xchg
jbe
add
mov
(bad)
ret
(bad)
icebp
xor
out
push
in
add
cwde
hlt
xchg
push
stc
dec
dec
lods
outs
mov
rol
arpl
jb
pushf
sub
adc
mov
test
js
jnp
mov
sub
mov
bound
lods
or
lahf
retf
das
bnd
inc
sar
mov
dec
imul
mov
mov
inc
cwde
ins
or
adc
jmp
xchg
adc
dec
call
and
push
jbe
lahf
jle
(bad)
in
jo
in
mov
xor
push
xchg
imul
shr
fiadd
push
push
lods
test
adc
add
leave
jl
dec
pop
lods
dec
cmp
pop
push
jbe
push
mov
push
jnp
mov
pop
inc
dec
inc
inc
loopne
lahf
loop
pop
xchg
and
mov
popa
and
(bad)
pop
inc
ds
sub
dec
cmp
dec
movs
pop
cmp
jle
pop
and
pop
inc
cmp
mov
movs
je
add
push
jp
mov
dec
cmp
pusha
xor
loopne
xor
paddusw
in
pusha
mov
pop
cmp
mov
dec
or
lods
lea
gs
scas
sti
dec
ins
sub
bound
xor
mov
jmp
push
xchg
adc
movs
das
dec
or
pop
or
xor
aad
iret
popf
adc
or
mov
jmp
fild
mov
push
sbb
jl
call
mov
mov
or
xor
loop
pop
xor
or
push
loop
(bad)
cmp
inc
xchg
mov
xchg
jae
rcr
cdq
dec
xor
cmp
out
xchg
call
gs
pop
or
sar
mov
outs
retf
pop
cmp
jecxz
push
adc
mov
imul
lods
pop
dec
and
mov
cmps
and
rcr
sbb
jp
in
pop
movs
mov
loope
sub
out
sub
sbb
mov
jb
pop
sbb
adc
int3
push
loopne
xor
add
out
jl
push
or
sub
cs
mov
dec
aaa
cmps
mov
sbb
dec
out
and
(bad)
add
push
jge
sbb
movs
(bad)
in
sub
lds
hlt
push
cs
out
inc
les
add
movs
jp
push
daa
sahf
mov
adc
stc
mov
mov
mov
es
adc
dec
xor
cwde
push
add
outs
les
movs
mov
das
adc
sub
ins
cld
shl
aaa
repz
out
cld
sub
scas
loop
sub
test
in
cmps
push
jmp
sub
xchg
inc
xor
fwait
mov
test
call
scas
call
xor
jecxz
pushf
inc
xor
and
pop
push
and
push
add
sub
inc
mov
pop
jo
jl
xchg
mov
scas
sub
xchg
push
inc
or
cmps
cmp
jmp
push
or
sub
push
pop
loop
dec
add
jae
jb
ret
stc
hlt
cmp
mov
and
arpl
xchg
jge
cmp
cmps
sbb
sbb
mov
add
and
mov
xchg
mov
sub
xchg
sub
rol
xor
pop
jb
scas
push
lods
imul
sub
iret
push
cmp
inc
push
jno
sub
lahf
das
or
loop
push
cmps
fcomp
sbb
push
xor
push
mov
leave
mov
xor
call
mov
mov
xchg
fwait
dec
sbb
push
mov
stos
(bad)
out
and
cmp
sbb
xchg
xchg
and
mov
stos
dec
fwait
inc
add
xor
jecxz
lea
push
loope
mov
dec
xchg
dec
fcom
sbb
int3
mov
mov
dec
jnp
test
or
jl
pop
cmp
pusha
xor
test
cmp
test
fs
sbb
cli
retf
sbb
lock
rcr
jae
pop
in
xor
mov
jmp
mov
push
pusha
mov
xor
sub
xchg
sub
add
jl
arpl
pop
aaa
js
cmp
add
cmp
mov
das
dec
sub
cld
loope
sub
das
outs
mov
ins
outs
mov
and
ja
and
mov
(bad)
ret
mov
bound
test
mov
imul
call
test
(bad)
push
aas
ins
sbb
imul
add
jle
inc
jle
mov
mov
ds
in
addr16
pusha
xchg
mov
lock
popf
ss
adc
push
sub
(bad)
icebp
sub
add
push
dec
xchg
jno
cmps
adc
sbb
mov
or
pop
dec
mov
xchg
cwde
aaa
cld
aas
add
es
rcr
rol
inc
jne
push
push
cmp
mov
inc
out
retfw
icebp
mov
movs
int
xchg
imul
(bad)
push
inc
imul
les
jge
(bad)
fstp
xor
add
out
cmp
pop
inc
jmp
push
in
cmp
test
vpshufhw
mov
push
fld
mov
dec
inc
ins
sub
pop
sbb
jge
push
jb
ja
and
movs
or
inc
jmp
and
fcom
rcr
imul
out
jae
lock
jo
lock
mov
(bad)
push
call
lods
pop
jge
jg
xor
enter
stos
fcomp
dec
aam
loope
adc
sbb
pop
adc
and
scas
stos
pop
jg
dec
fadd
pop
and
shr
ins
sbb
sbb
jbe
xchg
dec
in
adc
mov
ins
pop
sbb
stos
pop
in
shl
pusha
cmp
fs
sub
lods
xchg
inc
adc
movs
mov
push
(bad)
or
repz
ins
jecxz
mov
dec
or
(bad)
mul
cmps
cmovnp
mov
leave
mov
cmps
pop
xchg
jmp
xchg
sub
mov
(bad)
retf
pusha
mov
jmp
and
and
(bad)
aad
mov
cmp
lahf
call
es
das
outs
jbe
pop
jo
in
dec
es
cmp
xor
or
outs
inc
aam
dec
pop
jmp
sti
and
xor
xor
mov
dec
cmp
push
jne
mov
xor
inc
and
push
lods
icebp
in
sub
div
add
les
dec
inc
inc
push
pop
push
ss
jnp
jmp
or
stc
lea
lea
ins
and
adc
pop
aas
dec
xor
test
sbb
adc
call
push
nop
or
jb
mov
mov
setle
mov
std
je
adc
call
cmp
cmps
adc
js
xchg
hlt
mov
popa
cs
mov
jo
retf
xchg
push
ins
xor
inc
stc
lds
and
mov
pop
mov
sbb
xchg
outs
mov
sahf
mov
les
ret
dec
aaa
jae
int3
(bad)
xlat
pop
mov
in
adc
inc
push
push
push
sbb
repz
mov
add
int3
dec
aad
add
lock
lea
and
xor
add
push
fisttp
add
add
jnp
icebp
xchg
sub
push
and
pop
imul
stc
scas
xchg
inc
lods
mov
sbb
jp
shl
shl
imul
push
call
cmp
mov
xor
imul
inc
fstp
sbb
or
mov
and
dec
add
fs
repnz
int3
dec
push
das
push
dec
fcom
add
cmps
cmp
bnd
inc
xchg
cmp
fs
ret
aas
loope
pop
scas
and
or
mov
(bad)
loop
push
pop
sub
dec
out
sbb
sub
aas
(bad)
sbb
dec
fwait
xchg
mov
jge
push
cmp
cli
pop
dec
lds
dec
sbb
pushf
shr
jmp
scas
not
nop
ret
repz
(bad)
fwait
and
mov
out
or
retf
into
mov
ss
fst
mov
in
xchg
mov
neg
push
pusha
push
jb
pop
adc
pop
retf
or
or
cmp
popf
pop
jnp
or
inc
in
ins
nop
cld
jl
test
cmc
sub
mov
les
or
call
pusha
mov
jl
dec
xlat
rcl
mov
lds
test
add
repz
inc
adc
sbb
adc
pop
or
dec
xchg
jns
fiadd
adc
(bad)
lock
pop
cmc
xchg
mov
(bad)
rcl
js
rcr
ins
call
sbb
shr
jmp
repnz
push
jmp
sub
jge
loop
mov
call
stos
cld
xor
jmp
mov
int3
and
loopne
push
pop
mov
scas
(bad)
and
mov
push
clc
dec
xor
(bad)
in
out
jecxz
scas
(bad)
repnz
leave
mov
in
fadd
xor
outs
cmp
pop
cmp
jecxz
std
sub
dec
xchg
and
dec
das
(bad)
jne
jmp
daa
movs
test
fucomp
mov
mov
jo
icebp
sti
sbb
repnz
cwde
js
push
sub
out
xchg
(bad)
popf
inc
jp
popf
mov
sbb
jb
call
add
jecxz
int
stos
xlat
cwde
ja
xor
lds
int3
into
adc
pop
lock
mov
or
inc
jne
pop
test
int3
and
xor
(bad)
into
sbb
loop
shl
nop
pop
mov
cmc
nop
or
in
inc
pop
pop
cmp
out
lahf
call
fild
enter
and
jae
sbb
imul
cli
mov
adc
jp
scas
test
cmp
into
add
xchg
mov
into
retf
pop
mov
les
stos
jns
inc
pop
dec
inc
mov
sub
jle
push
cmps
cmp
popa
dec
rol
cmp
xchg
bound
jmp
sbb
ja
adc
jb
push
repnz
mov
out
lods
fldln2
jno
icebp
lods
adc
cmp
push
mov
add
jecxz
daa
movs
adc
iret
fdivr
fnstcw
mov
jno
add
sub
lea
ja
loopne
les
push
push
imul
(bad)
imul
cld
fsub
fs
xor
pop
sub
push
sbb
ret
add
cld
mov
jl
movs
lds
adc
mov
mov
pop
aam
or
lahf
mov
arpl
stc
test
gs
push
ds
jp
popf
inc
push
imul
push
inc
lds
imul
mov
pop
sbb
jmp
push
mov
ins
mov
and
iret
sub
cwde
xor
(bad)
mov
push
xchg
inc
dec
jl
jecxz
push
sub
adc
ss
add
mov
adc
pop
mov
jp
fs
pop
stos
adc
int3
fwait
aas
mov
pusha
or
dec
mov
sub
leave
in
cmc
mov
test
and
xor
fcmovne
ins
out
add
add
jns
cli
rcl
stc
std
push
mov
pop
jmp
test
mov
dec
lods
push
pusha
add
cmp
sbb
add
mov
call
push
push
inc
dec
sbb
sbb
jge
sahf
mov
pop
fwait
out
pop
xchg
mov
push
ss
xchg
hlt
inc
stos
and
je
(bad)
ds
(bad)
fdiv
setae
mov
jl
sbb
popf
in
rcr
push
pop
xchg
pop
shl
jge
jp
aas
sub
mov
inc
fist
xchg
or
dec
mov
dec
cmc
fiadd
into
data16
pop
retf
pop
mov
push
stc
aam
mov
add
movzx
movs
lods
mov
jl
pop
sbb
dec
mov
push
dec
scas
xor
mov
dec
inc
adc
ins
cmp
fsubr
xchg
adc
mov
cld
imul
(bad)
push
mov
pop
aam
cmp
pop
push
dec
or
xchg
jl
or
jp
adc
xchg
mov
aam
jnp
xor
repnz
push
jecxz
sbb
ins
daa
std
adc
or
or
push
sbb
pop
push
adc
addr16
xchg
push
in
jp
mov
inc
cmp
and
aad
pop
lods
and
jge
scas
rol
pop
bound
mov
and
pop
arpl
jecxz
push
sub
aam
in
push
leave
xchg
cmp
xchg
add
and
dec
(bad)
sbb
lock
enter
rol
in
mov
cmp
push
aam
mov
add
push
jge
and
push
and
cli
pop
shr
stc
fwait
sahf
inc
pop
sahf
sbb
mov
lods
add
addr16
xchg
fwait
leave
xor
xor
and
push
jb
fld
cmp
lods
and
xor
xchg
mov
fisubr
mov
(bad)
sbb
and
fcomp
inc
jbe
pop
cwde
jle
out
mov
sub
ins
lods
in
adc
ficomp
shl
iret
adc
xchg
mov
int3
cli
xor
push
rol
adc
int3
rcr
sbb
int
add
cwde
or
div
fwait
cmp
test
fstp
fisubr
sahf
add
scas
scas
mov
outs
in
push
cmp
(bad)
loop
dec
not
jae
cmp
mov
shl
xchg
sar
jne
aaa
push
(bad)
fimul
std
(bad)
imul
mov
add
adc
jae
fs
outs
add
std
xchg
mov
add
cs
ins
pop
pushf
or
jbe
push
pop
into
xor
aad
enter
je
and
xor
(bad)
shl
stos
ins
sub
mov
neg
sar
imul
xchg
mov
xchg
push
(bad)
sub
rep
jp
push
jns
retf
and
pop
mov
cmp
ror
push
leave
loopne
mov
pop
sub
in
test
or
inc
inc
dec
mov
mov
dec
pop
mov
cmp
mov
adc
mov
sahf
add
push
pop
test
pusha
out
imul
test
jmp
rol
mov
loop
pop
icebp
mov
mov
rcl
retf
lods
dec
shl
fidivr
outs
sbb
fadd
loope
and
retf
pop
xor
mov
sub
mov
fs
dec
pop
mov
mov
ret
jecxz
call
fsubr
les
(bad)
movs
aad
xchg
(bad)
or
cmp
xor
jmp
cwde
xor
pusha
add
cli
sbb
mov
mov
mov
pusha
inc
sbb
mov
outs
fdivr
xchg
sti
dec
data16
adc
dec
cld
mov
xchg
jle
xchg
into
rol
add
adc
test
add
shr
jg
out
(bad)
or
in
stos
jb
lods
mov
fst
pop
out
jecxz
push
enter
inc
mov
or
ins
cld
cmp
add
mov
into
(bad)
in
pop
mov
retf
pop
sbb
imul
and
inc
in
addr16
cmp
or
js
mov
mov
jno
in
call
shl
adc
push
fdiv
or
cmp
jmp
inc
mov
add
add
mov
xchg
xchg
jnp
stos
xchg
add
push
xchg
pop
adc
or
in
mov
aas
mov
call
mov
movs
out
sub
cmp
int
mov
jl
xchg
and
repz
repz
jp
xor
mov
adc
out
mov
out
pop
bound
out
lods
les
pop
and
jne
scas
fdivr
mov
repnz
movs
mov
sbb
in
add
sar
dec
int3
inc
pop
mov
push
jmp
or
add
fs
xchg
bound
jnp
aad
xchg
inc
cli
popf
mov
pop
xchg
mov
lock
test
and
xchg
jb
fwait
je
outs
xchg
jb
jmp
daa
mov
aas
std
dec
mov
or
shr
pushf
sbb
xchg
aaa
jmp
push
pop
fnsave
imul
xor
in
loopne
nop
sbb
sub
sbb
test
movs
fnsave
push
mov
mov
fisub
enter
cmp
jnp
dec
pop
imul
adc
push
push
sbb
(bad)
out
add
jle
(bad)
loopne
in
fs
enter
and
out
xor
jecxz
inc
das
jns
into
and
mov
xchg
xchg
dec
(bad)
fld
jl
sbb
in
cmps
leave
adc
mov
push
retf
addr16
or
add
std
clc
push
nop
mov
and
push
je
inc
dec
mov
adc
sbb
test
mov
gs
inc
cmp
fs
repz
test
dec
leave
ret
sbb
adc
dec
or
add
(bad)
cmps
pop
mov
and
aaa
scas
movs
pop
fistp
sar
pop
add
sub
mov
sbb
add
add
push
add
aas
cmp
xor
lods
and
or
test
cmps
shr
xchg
stc
sbb
mov
out
jnp
pop
rcl
add
jae
test
das
outs
add
and
dec
retf
add
adc
sub
adc
mov
in
(bad)
loope
ret
lahf
int
fwait
mov
repz
sbb
je
dec
cmp
clc
push
fsub
mov
das
xchg
daa
sub
mov
and
call
mov
mov
fbld
sub
shr
mov
(bad)
in
pusha
aad
call
mov
fidiv
pop
imul
fnstenv
and
clc
mov
movs
int
jg
xchg
rcl
into
cmp
pop
cdq
dec
imul
fidivr
jle
lahf
bound
mov
pop
ror
cmps
call
rcr
imul
xchg
and
and
xor
jl
mov
(bad)
jno
out
xchg
pop
loopne
movs
test
add
xor
das
push
cmp
call
mov
pop
xchg
mov
movs
xor
aaa
pushf
hlt
dec
sti
push
ror
xor
push
push
mov
js
push
mov
jmp
dec
or
call
shl
dec
js
push
int
xlat
pop
sub
xchg
lods
outs
pop
xchg
push
rol
in
pop
rol
push
adc
xchg
pop
xchg
xchg
jno
mov
inc
mov
xor
stos
data16
sbb
push
pop
inc
add
(bad)
cld
or
push
or
ins
pop
or
mov
jecxz
cmp
xchg
ret
and
pop
cmc
mov
stc
or
push
or
cmp
push
(bad)
cmp
push
stos
jl
and
ins
jbe
cwde
pmaddwd
out
mov
imul
repnz
cdq
repz
mov
and
sub
jbe
jecxz
call
mov
jns
push
sub
imul
jb
push
adc
enter
dec
sub
pop
fiadd
adc
jns
and
or
adc
xchg
or
stos
mov
sub
in
jae
shl
adc
sub
xchg
(bad)
into
pop
mov
sar
push
adc
imul
dec
lods
fdivr
inc
ins
jp
inc
(bad)
retf
xor
jg
mov
xchg
fld
call
cmc
retf
mov
push
fsubrp
(bad)
sub
cli
icebp
nop
xchg
xchg
sbb
push
in
(bad)
stos
pop
or
push
pop
aad
cli
jecxz
jge
push
pop
inc
jmp
call
mov
pop
sar
scas
aad
mov
cmc
pop
cmp
xchg
inc
cmp
mov
pop
sub
push
sbb
lods
push
movs
mov
dec
xchg
popa
xchg
vsqrtsd
push
mov
mov
mov
jg
xlat
(bad)
scas
dec
dec
pop
out
pusha
inc
cmp
mov
adc
xchg
fwait
cmc
ret
pusha
jnp
xlat
cmc
xchg
in
clc
lods
aaa
mov
fst
js
add
jl
lahf
mov
cdq
daa
xchg
sub
inc
push
xchg
imul
movs
in
(bad)
add
cmp
rcr
into
rcr
mov
mov
dec
dec
xchg
mov
mov
jno
imul
push
cmp
dec
stos
div
mov
je
stos
fimul
js
ret
call
aad
jmp
push
pop
xchg
popf
stos
lods
mov
retf
and
xchg
std
push
icebp
push
push
popa
call
cwde
pop
adc
(bad)
(bad)
fld
mov
mov
mov
and
pop
add
arpl
mov
or
cmps
call
shr
cmps
mov
cli
addr16
aad
pop
test
sbb
in
popa
dec
cli
int
and
int3
pusha
ja
dec
or
or
mov
and
sub
mov
push
cmc
xor
jae
ins
sbb
mov
sub
out
cmp
xlat
test
mov
call
inc
retf
push
push
xor
mov
jecxz
popf
jb
mov
jecxz
adc
xchg
aas
rcr
in
cmc
fisubr
pop
ins
pop
dec
cwde
xchg
sbb
or
push
pop
sbb
dec
xor
and
jae
test
addr16
cmps
rcl
adc
lds
retf
in
dec
in
(bad)
push
ret
xor
std
enter
jecxz
repnz
fdivr
mov
or
lods
pop
ja
(bad)
frstor
cs
xchg
dec
mov
lods
loope
adc
cwde
fdivr
repz
call
loopne
rcr
mov
cli
jge
fwait
outs
inc
loop
stos
xchg
mov
xchg
cmps
es
mov
stc
pushf
(bad)
mov
xchg
xchg
(bad)
mov
add
jmp
push
push
mov
adc
shl
dec
mov
ja
fld
push
mov
mov
pusha
iret
movs
add
cs
and
mov
in
daa
outs
mov
push
cmp
add
psubq
sub
mov
imul
mov
fcmovbe
mov
jne
mov
inc
cmps
or
push
mov
lock
add
loope
cmp
std
sar
mov
add
test
int
scas
mov
sub
dec
out
mov
xchg
movs
outs
or
repnz
fidivr
push
xor
push
fisubr
stos
jae
cmps
out
push
xor
jne
push
jg
adc
idiv
sbb
lea
dec
lds
add
stc
inc
pop
(bad)
call
jbe
and
retf
sbb
mov
mov
cmp
fsubr
test
ror
push
sub
jmp
xchg
lods
sub
out
xchg
cmp
(bad)
sub
pop
mov
pop
ds
adc
stc
cmc
popa
in
inc
adc
es
sbb
int
mov
pushf
pop
xlat
dec
sbb
xchg
adc
repnz
push
push
adc
pop
std
cmp
add
fprem1
mov
inc
jmp
sub
cli
popa
xor
mov
(bad)
xor
mov
jns
mov
into
add
adc
adc
jl
jge
into
mov
jmp
clc
int3
mov
retf
lock
cmps
push
hlt
std
mov
pop
in
push
in
sbb
aad
push
ret
int3
stos
adc
test
xor
(bad)
mov
mov
cmps
inc
xchg
mov
jo
mov
dec
jmp
inc
jge
not
jns
sbb
stc
mov
jl
dec
mov
fadd
xchg
in
push
fiadd
in
in
scas
leave
or
mov
push
cs
cli
in
mov
add
popf
mov
aaa
dec
popa
js
movs
push
add
jmp
sbb
dec
push
test
mov
ss
cmp
hlt
lock
mov
adc
or
aad
test
out
gs
outs
popf
mov
and
retf
mov
mov
xor
add
xchg
jle
aaa
dec
(bad)
fst
mov
cmp
test
mov
and
adc
call
dec
mov
dec
or
dec
adc
imul
repnz
fcom
xchg
xlat
mov
sahf
out
mov
add
call
push
dec
push
xchg
add
sbb
fcmovnu
mov
stc
mov
or
jne
pop
movs
cs
jo
dec
jmp
cmp
fcmovb
cld
shl
outs
ret
leave
shl
xor
lock
push
push
retf
pop
dec
pop
js
cmp
dec
int3
mov
mov
arpl
and
fwait
mov
mov
add
retf
sbb
push
test
mov
outs
int3
outs
xor
xchg
dec
ret
mov
xchg
loop
jb
ret
jmp
shl
(bad)
xchg
sub
xor
ret
out
cmp
sbb
test
inc
sub
(bad)
push
cmps
cld
je
adc
mov
in
(bad)
push
push
call
ss
and
lds
and
rcr
dec
stos
data16
mov
push
fsubr
jmp
xchg
or
pop
dec
cmps
sbb
leave
add
cmp
sar
and
dec
mov
sub
enter
pop
jno
es
lods
add
movs
imul
and
leave
out
das
jb
out
inc
scas
adc
sahf
xchg
cmc
outs
pop
aaa
mov
or
push
js
push
out
ins
dec
xchg
outs
push
call
jge
dec
inc
(bad)
xor
fwait
cwde
lea
icebp
arpl
test
inc
out
jge
xchg
fdivr
xchg
cdq
mov
lods
push
xor
(bad)
fcomp
pop
movs
mov
sub
jne
out
inc
(bad)
icebp
xor
gs
pushf
imul
xor
pop
sar
and
jno
stc
mov
sbb
and
imul
data16
mov
icebp
outs
ja
(bad)
mov
push
js
test
mov
mov
push
pop
nop
popf
int
arpl
mov
inc
shl
cmc
cmp
push
(bad)
sub
fistp
mov
out
(bad)
cmc
xchg
mov
fcos
test
movs
in
cmp
mov
ret
pop
cld
xor
pop
inc
xor
hlt
mov
push
push
adc
mov
inc
dec
shr
xlat
adc
or
inc
stc
jns
jbe
cmp
push
fisttp
push
cwde
sbb
loopne
hlt
xor
test
retf
outs
xchg
call
mov
cmp
ja
imul
add
xchg
ficom
daa
jae
dec
mov
sub
bound
or
jo
mov
adc
movs
fidiv
in
cwde
je
popa
lea
xchg
int3
pop
imul
pusha
mov
les
pop
adc
and
int
test
dec
(bad)
push
in
and
xchg
fidiv
cld
push
sbb
mov
pop
xor
xlat
mov
(bad)
fimul
pop
sbb
cmp
sar
nop
inc
jns
and
add
xchg
jecxz
or
inc
dec
test
xchg
jbe
daa
mov
push
out
fstp
cmp
mov
ss
mov
inc
pop
stos
push
cmp
jbe
add
mov
mov
lods
inc
xor
mov
call
jmp
ret
loopne
jns
pop
dec
sbb
imul
shr
push
inc
dec
xchg
fcom
mov
cmc
dec
dec
jle
into
adc
out
jecxz
mov
xor
dec
scas
lds
inc
fs
push
jmp
out
cdq
push
inc
cmp
movs
mov
xchg
xchg
add
retf
popa
push
fist
and
pop
out
push
lods
inc
sub
lock
out
enter
dec
xor
sar
out
stc
jg
and
xchg
(bad)
push
inc
(bad)
xchg
mov
jmp
pop
pop
jmp
dec
outs
mov
(bad)
(bad)
xchg
cmp
int
mov
add
cmp
inc
mov
das
add
jecxz
mov
mov
or
sub
mov
iret
xchg
fwait
push
add
mov
pop
adc
sahf
add
ss
sub
loope
shl
pop
mov
(bad)
pusha
push
cmp
or
xchg
dec
fnsave
mov
fimul
inc
pop
retf
imul
sbb
inc
pop
cs
rcr
shl
or
nop
jo
xor
add
adc
stos
xchg
xor
push
pop
or
add
call
adc
adc
dec
push
mov
pop
mov
jg
and
mov
pop
call
test
in
addr16
mov
outs
mov
das
test
mov
fdiv
es
sahf
add
mov
cmp
push
imul
rcr
jge
and
dec
test
(bad)
add
gs
pop
push
sar
xchg
cmps
cmps
dec
cwde
div
adc
aas
push
jle
pushf
pop
mov
jbe
fdecstp
and
cmp
cwde
ds
sbb
std
or
sbb
in
daa
mov
mov
mov
inc
enter
push
xchg
(bad)
repz
sbb
shl
push
sbb
lock
pop
(bad)
stos
push
fmul
inc
jb
inc
jl
jle
cmp
dec
(bad)
repz
dec
sbb
movs
mov
lods
cmp
dec
dec
icebp
jne
shl
push
and
fistp
ffree
dec
cmp
popf
mov
movs
mov
jne
popf
clc
or
dec
xchg
adc
dec
fisub
cmp
xor
in
gs
pop
pop
add
jo
xor
test
jecxz
dec
imul
xor
leave
mov
cmp
mov
aad
cmps
pop
inc
jp
in
mov
xor
xchg
dec
inc
das
dec
xor
sub
mov
jno
push
xor
adc
or
mov
in
imul
dec
adc
jne
adc
cmp
sbb
sub
pop
fild
gs
push
fs
repz
scas
mov
pop
add
mov
mov
test
(bad)
bound
mov
mov
retf
daa
les
pop
mov
push
dec
jo
inc
xchg
dec
add
lods
add
add
sbb
pop
les
test
sub
lock
aaa
push
sub
mov
adc
pushf
push
dec
dec
int
mov
mov
push
pop
sbb
(bad)
data16
xchg
and
jp
push
lea
mov
aad
adc
dec
or
test
movs
out
sub
inc
push
jbe
add
neg
pop
cmp
xchg
inc
in
scas
sti
cmp
lods
jl
and
mov
dec
loop
(bad)
push
push
ds
es
or
mov
push
arpl
pushf
les
scas
or
add
add
xor
icebp
xor
push
in
sub
call
pop
mov
xor
or
dec
pop
das
cmp
pop
in
dec
and
mov
mov
dec
mov
(bad)
pop
test
and
inc
out
imul
push
pop
and
in
add
mov
sub
xlat
jb
mov
rol
ins
xchg
pop
sub
stos
mov
mov
inc
sub
mov
dec
icebp
in
pop
lods
pop
in
and
xchg
inc
bound
clc
lock
out
push
inc
jmp
ja
loope
stos
jl
mov
dec
loop
(bad)
mov
pop
xchg
nop
jge
ss
mov
das
xchg
adc
push
outs
and
hlt
jle
jp
or
dec
push
call
popa
test
in
loop
scas
mov
mov
fisttp
pushf
pop
lods
popf
xchg
xor
scas
jne
xchg
dec
cmp
dec
sub
cli
jnp
jb
std
pop
(bad)
fwait
jo
mov
adc
retf
jnp
inc
dec
movs
lods
sti
sbb
movs
loope
or
arpl
jnp
shl
cmp
sbb
inc
push
inc
xlat
push
inc
inc
pop
xchg
scas
(bad)
gs
xor
jae
jge
test
fdivr
ins
fiadd
and
sbb
rcl
mov
js
sbb
ret
xchg
jne
test
jg
lods
nop
cmc
push
in
sub
fisttp
xor
mov
ins
jno
inc
xor
sbb
out
inc
mov
xchg
dec
cmps
adc
mov
sub
rcl
xchg
cld
mov
xor
pop
neg
lock
scas
scas
repz
cli
lock
add
push
mov
jl
or
pop
inc
adc
test
imul
mov
div
mov
add
mov
imul
das
cmps
xchg
sub
ds
dec
xor
push
loop
cmp
vunpckhps
icebp
loope
mov
mov
fmul
cmp
mov
pop
lds
psubusb
cmp
rol
out
xchg
rol
xor
sub
out
pop
sub
pop
inc
fcomp
sbb
and
ins
js
in
cmp
jmp
scas
adc
sbb
jbe
ficomp
outs
lods
or
sub
loope
sti
xchg
fcomp
push
jae
test
enter
ss
ror
les
or
xor
fistp
(bad)
aas
push
bound
and
and
push
das
popf
add
fcomp
ds
in
cwde
or
mov
movs
jb
cdq
stos
call
iret
test
daa
lods
jno
push
dec
scas
call
popa
push
add
mov
xor
sbb
inc
mov
popf
in
loopne
push
dec
into
out
sbb
mov
popa
cmps
mov
fnstenv
jbe
inc
and
lds
mov
push
push
add
mov
xor
mov
jb
mov
mov
cmp
aas
jo
add
sub
fdiv
push
push
call
xlat
or
cmp
pop
add
mov
push
mov
lahf
mov
mov
scas
cmc
push
pop
add
mov
imul
iret
jge
movs
inc
test
outs
push
and
add
mov
adc
test
jl
pusha
cmp
jp
rcl
cwde
pop
mov
inc
cmp
es
fwait
fwait
or
sbb
dec
mov
mov
(bad)
les
cmp
add
or
jmp
retf
and
xchg
mov
lods
fisub
in
(bad)
xchg
lods
nop
dec
jns
je
mov
sub
jmp
int
jmp
pop
repnz
es
jle
fmul
shl
jnp
push
leave
cmp
fcmovb
jo
mov
sbb
sbb
xchg
cmps
sbb
add
dec
and
test
in
in
inc
je
push
add
add
imul
push
xor
test
mov
daa
lahf
stos
fs
loope
ja
adc
pop
(bad)
das
adc
movs
jmp
or
xchg
xlat
dec
in
mov
retf
stos
loopne
cs
sub
jae
out
movs
jmp
mov
mov
cmps
mov
outs
cvtps2pd
sub
test
push
and
aam
sub
jno
xchg
mov
add
pop
and
stos
and
xchg
xchg
jbe
add
popf
ds
pop
push
xor
loopne
popf
cld
cli
jne
jbe
mov
cmp
mov
scas
pop
dec
repz
repz
mov
into
jns
or
sar
ds
enter
(bad)
(bad)
aaa
dec
and
nop
idiv
hlt
or
inc
pop
fs
pop
call
mov
sahf
cmp
fadd
nop
mov
mov
fsub
inc
adc
out
jmp
enter
pop
inc
cmp
aaa
mov
xchg
aam
call
int
leave
xor
dec
adc
int
cmc
and
mov
in
lds
in
dec
outs
pop
enter
mov
xchg
dec
test
scas
aad
add
mov
mov
and
mov
jecxz
push
mov
jl
idiv
test
ss
mov
jns
xor
aas
mov
dec
mov
ins
inc
mov
push
cwde
sbb
in
ins
sub
or
ret
or
adc
sbb
adc
xor
jg
mov
jae
pop
inc
test
add
sub
inc
rol
cwde
adc
std
inc
mov
cmp
sub
fwait
or
ss
cmps
cmp
loopne
int
ds
clc
leave
mov
push
cmp
ins
das
(bad)
pop
cli
cs
jb
mov
into
test
mov
or
lds
js
fwait
push
rol
les
jp
sbb
inc
adc
stos
xlat
mov
aad
in
xor
fwait
lea
rcr
mov
jmp
loop
movs
lds
cmp
ret
cmps
pop
jno
jge
jg
add
push
xchg
cmp
rcl
movs
mov
xchg
push
mov
hlt
aaa
cmp
sbb
mov
fld
jnp
idiv
les
ja
aad
xlat
mov
cdq
xor
cld
adc
cs
sbb
pop
movs
std
lahf
into
sahf
xadd
or
mov
sbb
mov
mov
dec
loope
adc
fs
xchg
out
call
out
test
ret
jmp
in
mov
cmps
inc
xchg
sub
daa
movs
arpl
pop
repz
jp
stc
xchg
cmp
xor
inc
and
mov
nop
mov
mov
das
cmp
and
std
mov
ret
(bad)
dec
mov
add
sbb
icebp
inc
btr
xchg
add
push
shr
data16
sub
xchg
xchg
(bad)
xor
jae
push
fisub
or
in
or
and
outs
cmp
pop
or
rcr
cmp
movs
nop
(bad)
retf
or
out
or
lea
stos
add
scas
jg
push
inc
pop
cmp
mov
dec
data16
push
mov
push
sbb
(bad)
les
not
or
push
outs
retf
(bad)
sbb
mov
jmp
movs
mov
push
push
mov
lds
ds
hlt
inc
aaa
fldcw
popf
lods
and
pop
add
mov
cwde
nop
add
push
cmp
mov
mov
(bad)
mov
retf
test
cmp
scas
inc
lds
fwait
mov
and
xor
div
daa
(bad)
in
push
clc
sbb
cmp
stos
sub
inc
fwait
xchg
and
push
dec
pop
mov
or
neg
std
cmps
cmp
mov
lods
sbb
jmp
inc
mov
or
and
xchg
sub
cwde
jge
in
in
cmovbe
xor
lods
mov
cmp
mov
test
shr
inc
jno
aaa
sbb
jge
xchg
sti
sbb
push
out
enter
and
sbb
movs
adc
sti
and
push
test
and
out
push
jg
ss
sub
outs
js
ins
or
pop
int
pop
ja
and
(bad)
out
or
mov
xchg
mov
jge
lahf
aad
dec
scas
(bad)
int3
push
mov
ror
xbegin
or
daa
ss
lahf
or
test
sub
inc
add
jmp
jl
cmp
mov
sbb
add
retf
jae
int
sahf
jecxz
jnp
mov
push
(bad)
aas
or
ss
dec
jmp
fxch
mov
fstp
frstor
not
push
xchg
les
popa
test
hlt
dec
(bad)
cmc
iret
ficomp
inc
mov
(bad)
adc
outs
aaa
psubq
es
mov
or
cmps
pop
test
in
jmp
xor
jmp
out
sbb
mov
mov
test
dec
movs
add
cmp
test
je
loop
pop
mov
mov
bound
mov
cld
xor
mov
xchg
push
cmp
xchg
xchg
pop
or
arpl
and
in
jg
jl
mov
add
adc
nop
fldcw
outs
retf
fmulp
adc
(bad)
jge
out
out
mov
inc
add
mov
xchg
ret
and
pushfw
mov
jp
sbb
jecxz
mov
call
pop
ds
imul
xchg
and
adc
pop
bound
std
xchg
push
mov
sub
es
mov
dec
daa
(bad)
cli
movs
jp
inc
dec
jo
jmp
cmp
inc
and
arpl
and
push
mov
and
adc
ret
jmp
in
loop
push
es
mov
push
(bad)
ficomp
gs
out
loop
lods
sbb
cmps
push
stos
sub
dec
inc
jl
xor
sar
dec
mov
scas
sub
xchg
ret
mov
mov
mov
shr
cmp
hlt
inc
(bad)
ror
hlt
dec
jge
mov
cmp
adc
into
scas
jbe
push
mov
sti
mov
cld
dec
mov
jnp
in
mov
dec
inc
inc
aad
adc
and
push
add
xchg
cmps
or
xor
int3
or
push
(bad)
aas
mov
arpl
fwait
add
add
fstp
push
jmp
ror
xchg
inc
lods
aam
mov
imul
aaa
jbe
call
and
outs
shr
xor
xchg
jle
push
sti
(bad)
pop
jg
stos
lods
dec
pop
or
out
jge
pop
(bad)
and
mov
inc
mov
or
aam
test
mov
and
hlt
dec
pop
cli
rcr
add
les
loopne
fwait
pop
test
mov
jge
jge
call
dec
jbe
scas
dec
cmps
mov
or
aas
fucomp
movs
js
add
cmps
sbb
repz
rcl
dec
stc
jae
nop
and
or
sar
pusha
sahf
in
cmovg
fld
fcmovnu
lods
mov
ds
mov
ret
outs
int
dec
jg
inc
gs
call
jge
fdivr
push
mov
cld
pop
mov
mov
push
jmp
(bad)
cli
push
push
jne
mov
dec
dec
xor
pop
movs
mov
adc
jne
fwait
or
stos
ret
inc
ret
(bad)
repnz
cmp
inc
mov
popa
xor
jne
(bad)
jp
jle
mov
loop
dec
(bad)
jge
push
cmc
rol
adc
cmp
adc
xchg
push
dec
mov
xor
xor
cmp
cli
call
jae
mov
es
ja
idiv
push
or
fcompp
inc
and
(bad)
das
mov
out
cdq
sbb
movs
and
lds
out
mov
pop
adc
mov
dec
pop
xlat
xchg
mov
test
arpl
jo
adc
adc
lods
add
and
aam
stc
inc
mov
cld
out
ja
ins
nop
cvttps2pi
pop
loop
ja
cmp
cmp
cmp
iret
push
and
mul
dec
push
movs
dec
fstp
push
xchg
pop
dec
adc
icebp
fst
bound
loope
sbb
pop
into
in
dec
imul
add
(bad)
es
or
pushf
leave
push
icebp
iret
inc
js
je
in
shl
xchg
xor
push
and
jge
pop
xchg
repz
(bad)
sub
aas
inc
xchg
push
jge
cs
pop
sbb
mov
rcl
loope
imul
fisubr
std
add
cli
sbb
pushf
jmp
xchg
cs
sahf
cmp
and
or
(bad)
stc
xchg
mov
or
setb
and
pop
(bad)
xor
xchg
(bad)
scas
std
push
jg
js
adc
xchg
jbe
daa
ret
jge
outs
in
ss
loopne
push
xchg
cmp
jmp
sbb
xor
jl
enter
sahf
adc
out
daa
sbb
neg
adc
inc
pop
adc
mov
push
test
mov
mov
loope
mul
jg
je
mov
aas
js
ds
fimul
cmpxchg
mov
cmp
dec
dec
push
mov
add
and
xchg
test
sbb
aam
arpl
sub
xchg
inc
push
call
push
lods
mov
mov
xchg
xadd
push
or
inc
bound
cmp
(bad)
xor
nop
mov
jg
in
sar
cmc
inc
in
or
icebp
cmp
jmp
loopne
mov
push
cwde
dec
in
xor
jecxz
pop
pop
fldcw
into
sub
stos
fwait
test
std
inc
jne
icebp
push
push
(bad)
lock
stc
shl
xchg
jmp
es
xor
inc
push
iret
pop
leave
add
sbb
aam
push
dec
aam
lods
push
cmp
outs
adc
sbb
fwait
xchg
daa
jb
push
sti
daa
sbb
mov
or
stos
fidivr
ds
or
mov
mov
push
lds
xlat
scas
(bad)
xchg
stos
movs
jge
xor
push
dec
adc
cmp
mov
pop
inc
jg
jle
fist
movs
daa
xchg
inc
fdivr
mov
adc
ds
add
sti
xchg
loopne
xchg
jbe
xchg
test
addr16
movs
sbb
into
push
mov
sahf
pop
jae
push
mov
in
cmp
or
sahf
in
jp
popf
scas
dec
jecxz
enter
xchg
mov
mov
(bad)
in
(bad)
repnz
lahf
push
jae
pop
int
cwde
outs
mov
lahf
fsubr
cdq
(bad)
test
iret
icebp
cmc
add
jne
es
outs
inc
pop
imul
fcom
xor
inc
add
out
iret
in
stc
add
pop
xlat
leave
mov
jb
mov
xlat
in
dec
or
mov
inc
(bad)
out
pop
fsubr
sub
aaa
pusha
aad
es
cmp
cmp
mov
leave
cmp
outs
stc
ja
push
and
adc
adc
enter
or
hlt
jno
test
aam
or
pop
mov
add
dec
dec
scas
xor
loope
xor
sub
add
outs
jns
loop
cmp
out
movaps
mov
add
dec
(bad)
dec
loop
sbb
loopne
in
jl
iret
mov
adc
shl
push
dec
std
ja
mov
pop
movs
mov
cmc
or
dec
mov
mov
and
jnp
dec
js
push
push
cdq
and
sub
test
cmp
push
sti
scas
es
push
retf
or
mov
neg
mov
js
push
pop
stos
sub
push
call
sub
inc
call
cmp
or
inc
or
mov
mov
xlat
retf
ret
jbe
mov
push
pop
(bad)
(bad)
adc
retf
cwde
push
jne
or
adc
shr
xor
aas
mov
and
test
xor
mov
ins
(bad)
aaa
jne
retf
mov
push
cmp
dec
xlat
enter
lods
stos
jecxz
in
add
mov
out
xor
mov
jns
push
dec
mov
hlt
icebp
mov
movs
mov
fistp
lods
or
sbb
mov
push
mov
mov
jecxz
sub
lods
mov
or
retf
imul
mov
shl
std
cmps
sbb
or
jle
test
loope
xchg
mov
inc
cld
cs
scas
icebp
push
stos
ins
jg
dec
fcomp
cmp
call
mov
cmp
adc
not
ins
icebp
cld
push
push
mov
cs
pop
mov
test
enter
ds
add
fld
push
mov
add
cdq
pop
pop
jb
xlat
push
sysexit
mov
les
mov
sahf
and
cmc
or
bound
or
jmp
mov
test
jne
mov
in
jno
pop
in
sub
mov
lods
fs
sbb
xchg
outs
leave
pop
sbb
dec
in
jmp
fdivr
mov
jl
inc
dec
lock
or
leave
out
hlt
lock
jge
movs
stos
fld
jbe
push
dec
aaa
jae
imul
xchg
sbb
and
hlt
xlat
sbb
or
in
pushf
xchg
pop
jns
add
add
and
add
leave
xlat
loope
adc
push
push
sub
not
and
ins
and
stos
and
in
mov
and
lea
daa
dec
push
adc
mov
loopne
dec
xor
xor
(bad)
movs
adc
out
data16
mov
or
adc
jo
retf
pop
mov
loopne
jge
push
inc
push
lahf
add
or
jno
dec
xchg
in
shl
loope
lods
push
push
bound
mov
gs
jns
out
jl
mov
inc
clc
(bad)
daa
aaa
jae
adc
dec
push
inc
mov
cmp
in
test
mov
les
sub
sar
push
pop
jg
stc
cmc
es
rcr
cmp
imul
mov
sub
out
cmova
arpl
or
test
movs
cmc
pop
sub
dec
call
xchg
xchg
ins
out
mov
inc
(bad)
mov
addr16
ret
inc
sar
jl
movs
sub
call
pop
mov
sar
fimul
iret
call
fldcw
adc
loop
jmp
or
cs
xor
dec
nop
xchg
xor
ins
push
cmp
lock
sti
ins
and
mov
fsubr
fs
pop
lods
loop
and
icebp
in
gs
ficomp
hlt
sub
jae
mov
enter
adc
mov
nop
jae
xchg
mov
retf
int3
jo
div
popa
sub
mov
or
cld
int3
mov
stos
in
mov
pop
not
add
xor
enter
and
mov
js
(bad)
fistp
ret
mov
inc
gs
mov
xchg
fist
test
iret
scas
or
pop
(bad)
lds
movs
or
xchg
pop
mov
pop
ja
lea
dec
sbb
cli
data16
cmp
int
scas
gs
inc
test
fstp
lock
jae
fld
outs
fistp
in
inc
popf
dec
sti
xchg
sub
or
sub
push
mov
div
pushf
dec
xchg
dec
ltr
sub
pop
xlat
popf
inc
in
pusha
xchg
mov
xchg
movs
dec
sbb
sub
stos
mov
xchg
cmp
dec
mov
jmp
xor
loopne
scas
pop
sbb
jl
pop
push
xchg
(bad)
push
mov
in
adc
inc
call
or
xchg
shl
aaa
xchg
cmp
repnz
pop
dec
daa
xor
mov
mov
jge
movs
(bad)
loope
xchg
sub
imul
add
neg
fs
jae
dec
aam
xchg
aaa
push
jge
and
xor
pusha
ss
rcr
movs
xchg
(bad)
cs
test
rcr
retf
ins
xor
add
fwait
stos
fwait
daa
sahf
jmp
pop
cmps
jo
mov
call
jmp
frstor
dec
fadd
loopne
(bad)
hlt
add
mov
ret
lea
leave
cmp
xor
ret
data16
xchg
(bad)
loopne
push
das
scas
pop
enter
pop
mov
jae
adc
mov
mov
mov
pop
lds
adc
pop
cmp
js
out
fsubr
cmps
inc
ins
inc
pop
cmps
fcmove
jb
(bad)
outs
lds
cwde
cmp
out
inc
sub
fadd
adc
or
mov
push
sbb
cmp
sub
push
mov
mov
fbstp
mov
sub
dec
adc
in
dec
cmc
mov
push
push
inc
jb
in
test
jae
repnz
jmp
psubw
or
pop
lea
pop
jge
fsub
std
shr
xor
enter
push
repnz
das
pusha
xchg
push
mov
loope
push
icebp
js
or
xor
ins
dec
add
addr16
ret
shr
movd
ins
jmp
or
sub
cdq
ja
or
push
pop
stc
adc
add
mov
lea
cmp
je
push
jmp
popf
xchg
lahf
imul
cmp
ds
or
xor
xorps
(bad)
retf
bound
mov
retf
aad
or
xor
mov
cmp
adc
mov
inc
cmova
dec
mov
(bad)
sub
test
arpl
jg
cmp
cmp
(bad)
inc
pop
loope
stc
sbb
mov
adc
lods
mov
jle
dec
jmp
xchg
jg
or
(bad)
jnp
add
ja
and
mov
cmps
div
sbb
or
repnz
lahf
push
(bad)
mov
push
and
fist
outs
pop
xor
imul
(bad)
xlat
mov
retf
scas
ss
jnp
hlt
cmp
add
aaa
xchg
cmc
jmp
jae
pop
xor
add
popa
cmp
(bad)
gs
jge
mov
arpl
addr16
iret
lods
loopne
cmp
adc
push
cmp
arpl
dec
fimul
and
pop
rcr
stos
mov
mov
push
gs
xchg
test
jmp
inc
dec
rcr
or
pop
cwde
jo
hlt
jmp
dec
xchg
cmp
sbb
scas
mov
jbe
ss
push
push
cmp
cdq
lock
scas
inc
push
cdq
inc
lock
xchg
xor
ja
out
push
mov
xchg
test
sbb
add
jne
mov
or
xor
in
out
cmps
icebp
inc
pop
xor
mul
out
out
aam
jg
shl
ss
adc
mov
xor
les
iret
mov
push
dec
xlat
cmp
call
mov
xor
scas
bound
xor
cmp
add
sbb
inc
test
jg
out
cmc
ret
mov
mov
mov
or
pop
xchg
pop
fwait
inc
daa
xor
push
rcl
js
int
dec
jl
inc
jbe
jno
push
add
push
or
xlat
test
loop
mov
hlt
(bad)
jle
xor
cli
or
sbb
pop
add
out
mov
inc
or
in
push
mov
outs
sub
cmp
cmp
jns
dec
loope
and
into
mov
shl
ja
cmc
cmps
push
add
mov
mov
or
jno
pop
add
out
sbb
stc
ret
push
clc
add
adc
jecxz
fs
mov
sbb
std
daa
jnp
xchg
mov
iret
cmps
mov
(bad)
aam
adc
mov
jno
jns
sbb
adc
mov
dec
in
push
jnp
jmp
or
push
jp
js
out
pop
lds
add
xchg
push
repnz
ror
das
in
mov
das
mov
jle
sti
mov
xor
shr
sub
arpl
in
sbb
(bad)
lahf
outs
add
push
addr16
mov
(bad)
pop
dec
mov
call
jmp
mov
loop
dec
and
push
or
out
in
std
retf
ret
aaa
retf
xor
jmp
add
sub
jo
or
inc
movs
add
pop
repnz
xor
out
(bad)
xor
imul
fcomp
sub
iret
sbb
loopne
or
or
mov
call
jmp
jmp
lods
lahf
cmp
ss
push
xor
jo
push
add
sbb
cmc
mov
repnz
daa
addr16
mov
mov
lea
ds
mov
dec
mov
or
ds
mov
icebp
(bad)
mov
cmp
jbe
mov
add
push
js
pop
jae
kaddb
je
imul
mov
clc
mov
test
popa
mov
mov
call
cmc
add
cmp
mov
pop
cmp
jmp
jmp
mov
or
paddb
adc
leave
jnp
push
mov
adc
add
jae
jne
ins
mov
ins
retf
dec
test
xchg
popf
pop
mov
sbb
(bad)
push
mov
inc
fs
dec
pop
pop
push
sub
cmp
sub
aad
jge
pop
adc
out
je
cmp
mov
mov
jg
push
or
xor
mov
mov
adc
es
fsub
call
or
mov
jns
fcmovbe
cli
scas
xchg
imul
aam
in
mov
cmps
jno
jge
sbb
and
sahf
cmps
stos
int3
pop
inc
nop
xor
sti
fisttp
push
imul
jle
mov
mov
ss
push
or
push
jl
(bad)
lock
in
stos
shl
xor
mul
sbb
adc
retf
inc
cmp
xor
pop
mov
xor
push
sub
out
sar
outs
and
ins
xor
(bad)
loope
and
sub
(bad)
dec
or
and
lods
pop
jl
fisubr
adc
cmp
out
sub
das
scas
ss
pop
test
inc
(bad)
fisubr
adc
ss
add
xchg
out
inc
icebp
daa
pop
xchg
and
or
mov
hlt
cmps
xor
mov
test
push
jp
and
mov
loopne
in
xchg
aaa
pusha
sub
ret
pop
and
xchg
mov
adc
ret
popf
inc
pop
mov
inc
leave
jge
repz
or
ins
cmp
rcr
scas
in
cmp
sub
xor
push
mov
stos
add
call
mov
test
mov
xor
or
ret
pop
test
stos
sar
pop
jp
add
pop
js
sub
popa
xchg
mov
adc
sbb
ss
jle
xchg
cmps
mov
adc
outs
pop
imul
jns
test
add
inc
pop
inc
hlt
sbb
stos
mov
in
cld
sub
mov
test
push
test
xchg
call
sub
sbb
adc
inc
adc
dec
in
cmp
xor
pop
push
mov
inc
xchg
xchg
imul
add
jno
jnp
push
xor
stos
repnz
inc
inc
stc
sub
xchg
(bad)
lods
xor
sub
sbb
pop
outs
or
inc
cmc
mov
imul
fdivr
loop
loope
sub
pop
pop
cmp
test
xchg
or
inc
scas
cmps
add
adc
adc
mov
jle
and
dec
inc
jo
pop
in
and
push
(bad)
pop
dec
call
dec
push
leave
push
pushf
push
test
add
pop
xor
mov
dec
push
jmp
into
jbe
test
mov
shl
or
or
rol
cmp
and
adc
mov
gs
in
inc
add
inc
jo
xor
push
mov
movs
jmp
mov
sar
in
cmps
cli
enter
or
lock
jmp
mov
imul
dec
or
mov
mov
mul
push
add
daa
pop
mov
pushf
repz
test
push
std
sub
pop
or
mov
xchg
jns
pop
inc
pushf
out
jo
es
out
add
pop
stos
sbb
jnp
daa
pop
adc
daa
jle
xchg
jb
pusha
xchg
dec
aas
jne
sub
sub
adc
adc
pop
in
in
add
sub
idiv
nop
je
mov
dec
ror
cli
xlat
ins
iret
mov
mov
fbstp
push
mov
jo
and
sbb
jo
inc
cwde
push
dec
movs
push
dec
push
add
movs
xchg
call
mov
inc
push
(bad)
loopne
jns
jne
popf
pop
sbb
cmp
pop
xchg
or
dec
xchg
adc
into
mov
mov
cmp
das
jg
sbb
jns
dec
mov
pop
sbb
cld
out
shl
inc
xlat
push
scas
and
pop
mov
lods
pop
pop
xchg
fnstcw
jmp
cmps
addr16
frstor
or
test
pop
sahf
sub
mov
and
scas
push
xchg
jl
aad
xor
mov
or
xor
mov
sbb
jmp
add
icebp
shl
add
shr
jo
xchg
jbe
jbe
ins
shl
shl
int
in
xchg
(bad)
lds
lahf
(bad)
test
stos
cmp
sbb
cmp
push
sbb
mov
jge
dec
pop
repnz
dec
xchg
add
icebp
jmp
dec
out
xchg
xchg
cmp
cdq
arpl
sar
(bad)
aam
dec
scas
jle
jl
add
mov
adc
sub
jno
imul
(bad)
inc
arpl
add
popf
pop
push
adc
hlt
scas
test
ss
mov
jb
and
fisttp
(bad)
enter
dec
ins
retf
jbe
out
pushf
or
call
xchg
popf
sub
and
push
mov
clc
aad
leave
daa
div
out
push
pop
mov
mov
push
clc
stos
mov
repnz
out
div
dec
aam
lods
mov
push
dec
sub
neg
cmp
shl
imul
je
jo
mov
les
call
sti
mov
mov
jp
sub
sub
fsub
out
dec
jb
mov
into
dec
push
inc
dec
js
jb
add
addr16
jb
rcr
test
mov
mov
add
or
scas
cmp
dec
outs
pop
mov
jp
jo
push
in
shr
xor
std
jp
xchg
call
or
mov
jno
leave
or
sub
dec
les
inc
(bad)
sub
inc
shl
cmc
sbb
arpl
mov
push
mov
mov
add
ss
dec
fwait
sar
pop
lea
popa
loopne
cdq
push
cdq
cmp
aad
imul
mov
in
mov
clc
aas
mov
pushf
xchg
div
dec
inc
rol
cmp
rcl
fs
or
cmc
sbb
popf
mov
sbb
xor
mov
inc
shl
pushf
mov
retf
cmp
popa
xor
loopne
pop
pop
call
and
push
stc
mov
inc
sbb
mov
mov
stos
push
repz
popf
add
movs
div
int
inc
pop
les
mov
(bad)
pop
scas
retf
xchg
jmp
xchg
pop
jecxz
dec
retf
ret
add
and
fstp
cld
or
iret
and
gs
mov
int3
mov
or
mov
jmp
test
in
mov
lods
pop
iret
(bad)
addr16
repnz
les
icebp
retf
cmps
repz
fnstcw
mov
xor
in
mov
scas
or
scas
cmp
inc
neg
repnz
jmp
jecxz
loope
(bad)
lock
jb
hlt
lds
pop
clc
(bad)
xor
adc
push
adc
faddp
jg
aas
ret
ror
push
out
mov
mov
mov
or
retf
xchg
add
imul
push
dec
imul
push
mov
inc
pop
mov
inc
(bad)
pusha
push
dec
ja
jge
outs
aad
mov
sub
dec
sub
xchg
xchg
xchg
cmp
dec
jb
sbb
xor
test
mov
add
or
rcl
or
jle
cmc
sub
(bad)
pop
ret
fistp
mov
jno
cmp
sbb
mov
push
push
aas
ja
int3
bound
mov
(bad)
mov
clc
dec
in
mov
dec
movs
add
xor
xor
hlt
cmp
lods
retf
push
cwde
inc
and
fisubr
es
shl
mov
ins
mov
mov
jmp
fsub
or
inc
loop
ror
imul
sar
jge
scas
imul
neg
jo
fsub
inc
xchg
add
push
mov
jp
sti
jmp
(bad)
mov
add
adc
addr16
add
xchg
pop
stos
mov
lahf
jle
out
movs
cmp
jb
dec
add
sub
scas
js
pop
jb
scas
mov
(bad)
retf
es
test
sbb
jno
inc
lahf
lock
and
aaa
jnp
sbb
stos
sub
lods
dec
ss
mov
inc
out
push
leave
add
fsub
test
mov
cmp
add
mov
ror
outs
jmp
fisubr
daa
lds
or
xchg
sub
sbb
jne
loop
cwde
and
jmp
dec
jle
or
(bad)
push
jmp
jb
dec
or
sbb
aaa
push
fucomp
jle
cmp
or
aam
push
xor
shl
jns
std
sbb
fsub
or
hlt
ret
or
dec
jge
dec
sub
mov
mov
(bad)
sbb
sub
xchg
cli
setbe
retf
xor
and
jnp
xchg
jns
(bad)
cld
jns
(bad)
stc
imul
fcomp
sbb
scas
lahf
ins
xchg
add
xchg
mov
in
mov
sti
mov
call
mov
mov
xlat
mul
adc
ins
jmp
aaa
or
push
dec
or
push
cmp
pop
cdq
adc
pop
or
mov
mov
out
jne
iret
mov
pop
retf
lock
shl
ja
leave
jno
pop
mov
in
aas
push
es
add
lods
push
stos
add
js
adc
xor
jbe
add
jmp
xchg
sub
or
adc
test
(bad)
jne
out
sahf
sti
in
retf
pop
test
add
imul
mov
xchg
leave
mov
mov
jge
cli
sbb
xor
retf
int
mov
(bad)
push
add
jmp
pop
mov
mov
dec
jbe
pop
or
xchg
adc
into
and
int
shr
je
sub
jmp
test
add
pop
xor
push
call
push
ja
sbb
adc
and
std
ds
jae
loop
xor
gs
push
inc
test
push
lods
stc
jno
out
ret
idiv
clc
std
sbb
pop
xchg
and
jns
jne
adc
mov
push
push
mov
in
sub
xlat
push
cmp
push
cmp
icebp
xlat
test
mov
ja
aad
rsqrtps
push
mov
out
call
jno
sbb
cmps
retf
adc
not
push
push
fcom
(bad)
loopne
ss
or
inc
xor
fwait
pop
adc
in
xor
inc
mov
xor
lahf
outs
out
cmp
mov
cmp
and
push
shl
das
adc
dec
cwde
out
pop
inc
int
push
movs
(bad)
jecxz
aaa
rcl
out
pop
arpl
and
cmps
daa
cld
jle
sub
stos
jecxz
stos
bnd
scas
shl
inc
gs
and
sub
fwait
iret
test
mov
push
enter
pop
call
sbb
cmp
stos
pushf
outs
ins
sbb
(bad)
and
f2xm1
pop
mov
push
xor
aaa
shl
adc
push
xor
ret
movs
push
mov
pop
fadd
push
or
cmp
shl
mov
push
mov
fild
fist
lock
es
in
ficomp
out
adc
mov
movs
sub
push
jb
mov
mov
cwde
test
shl
mov
push
jmp
adc
cld
add
xor
or
jnp
mov
loopne
(bad)
out
sbb
xor
iret
dec
rcl
lea
loope
popf
push
or
enter
lahf
add
pop
(bad)
sbb
adc
gs
(bad)
mov
sub
in
cmps
dec
ins
inc
outs
xchg
in
and
jge
mov
cld
push
pop
test
hlt
lds
jge
jg
fadd
sbb
in
lods
xchg
push
cli
xchg
popa
sub
add
ins
outs
retf
sub
inc
xor
xchg
push
adc
jge
neg
aad
adc
leave
in
into
xlat
xor
pop
pop
jl
push
add
rol
pushf
dec
aad
jp
lods
mov
jmp
and
mov
sub
xor
fstp
(bad)
popa
aaa
into
pop
pushf
fucom
mov
mov
in
inc
and
iret
add
jmp
sub
idiv
fbld
nop
jns
stos
or
cwde
icebp
push
push
xchg
out
add
arpl
sbb
pop
mov
jmp
and
lods
loope
stos
outs
mov
neg
fdiv
mov
aas
sub
xlat
or
test
or
fcmovne
icebp
adc
arpl
lods
cs
sub
sbb
nop
inc
nop
std
lea
sbb
push
cmp
xor
xchg
and
xor
cli
int3
mov
xchg
sub
sbb
mov
xor
xor
cmp
jg
enter
es
push
retf
retf
repz
jle
and
cli
daa
mov
and
js
sub
arpl
sbb
fcom
retf
inc
stos
and
xchg
ss
(bad)
loopne
popf
cli
sbb
jbe
stos
push
shl
dec
rcl
sub
sub
fwait
cmp
sub
xchg
movs
ficomp
lods
movs
iret
jecxz
scas
jmp
push
mov
sub
repz
shr
mov
sub
jp
cmp
inc
imul
push
fild
fcomp
outs
clc
mov
jp
sbb
dec
cmps
mov
jo
loop
aas
inc
xor
dec
jp
rcr
in
gs
inc
pop
leave
xchg
call
in
icebp
mov
jg
add
push
sbb
arpl
jne
sbb
sub
mov
inc
cmp
pop
xor
stos
mov
ins
cld
scas
arpl
cs
xchg
ds
shr
adc
pop
jbe
les
lods
cdq
xchg
div
lods
add
popf
retf
addr16
aaa
jle
pop
lds
inc
mov
mov
(bad)
pop
lods
ret
mov
(bad)
leave
and
mov
ror
mov
push
mov
ror
xchg
lods
rcl
xchg
push
aad
xchg
(bad)
je
or
(bad)
movs
ja
sbb
outs
repz
xor
test
cmp
sbb
dec
push
imul
out
jl
jno
cmp
jg
jp
pop
xchg
jne
mul
sbb
nop
jmp
or
outs
out
mov
lahf
sti
adc
movs
mov
xchg
bound
loope
movs
in
sbb
adc
repz
mov
or
or
adc
pop
aad
and
lock
jp
in
sti
inc
jne
push
push
mov
xlat
sahf
cdq
jmp
aam
lea
cmps
and
xor
out
addr16
mov
repnz
imul
sub
daa
inc
cwde
ja
mov
(bad)
ins
das
pusha
pop
das
mov
jno
not
xor
lock
xchg
add
test
mov
cdq
mov
fdiv
mov
popf
call
cmp
pop
int3
clc
push
or
cld
mov
js
in
xor
jo
cmovle
xor
push
outs
das
xor
inc
popf
mov
adc
cmp
arpl
lock
dec
add
int3
xchg
stos
xchg
jno
push
mov
int
(bad)
mov
fcom
(bad)
enter
mov
xchg
aad
pop
outs
cmp
mov
jmp
lock
outs
movs
leave
adc
xchg
dec
sbb
out
pop
jne
pusha
scas
repz
mov
sub
mov
adc
or
push
mov
sbb
add
jb
sar
jne
add
iret
rcl
pop
inc
push
xchg
push
or
nop
fdivr
xchg
mov
js
push
call
jo
xor
sbb
ss
or
loope
cmp
fucom
inc
mov
add
xor
jno
mov
lods
out
mov
adc
mov
mov
in
pop
repnz
jae
cmp
push
add
adc
inc
jb
and
pusha
es
out
cdq
scas
xchg
int
nop
sbb
and
out
cli
(bad)
and
ret
sbb
cmps
or
mov
repnz
cmp
cdq
imul
inc
fs
mov
cld
jne
adc
inc
or
mov
add
pop
mov
push
stos
stos
or
dec
(bad)
movs
sbb
pop
es
ret
push
stos
shl
das
test
rol
xchg
adc
cmp
pop
push
clc
mov
xchg
test
push
fsubr
movs
jg
in
dec
cli
scas
mov
inc
pop
cli
ficom
retf
pop
pop
fwait
je
pop
adc
xor
jo
push
stc
sub
push
jnp
adc
jnp
inc
jle
mov
rcl
int3
test
cmps
mov
dec
arpl
adc
mov
cmp
lahf
cmps
mov
inc
mov
stc
fs
mov
mov
xor
outs
xor
std
and
mov
pop
daa
in
retf
rcr
jl
or
push
(bad)
stc
pop
test
ss
xchg
mov
sbb
mov
sbb
cld
pusha
jmp
mov
xchg
push
or
mov
aas
xchg
jb
rcr
sbb
call
lods
xlat
push
and
icebp
push
mov
loope
push
mov
pop
out
jns
stos
sub
out
scas
pop
jae
fisttp
jl
in
inc
xchg
adc
pop
mov
loop
add
scas
or
into
imul
push
adc
clc
dec
add
or
ds
cwde
cmps
cmp
mov
pusha
lahf
xor
mov
xor
mov
mov
adc
sub
test
cmc
push
mov
std
out
fcom
xor
stos
add
pop
mov
dec
test
mov
sbb
pop
out
js
ret
mov
(bad)
sbb
test
test
add
fs
add
imul
fnsave
ins
cmp
cmp
and
mov
jns
adc
retf
xchg
sub
pop
fucomp
jnp
loope
mov
hlt
stos
add
int3
or
clc
sub
or
pop
sub
jns
xchg
mov
scas
dec
fst
pop
mov
xor
pop
sub
rol
pop
and
and
add
push
sub
jbe
in
lods
aas
sub
xchg
cmp
imul
(bad)
and
mov
add
call
(bad)
xor
sub
ja
cs
xchg
loop
in
sbb
scas
retf
hlt
in
daa
dec
sub
lods
push
sbb
push
adc
or
dec
xor
stos
cmp
xor
clc
jecxz
dec
pop
mov
rcr
xchg
adc
cmc
lods
push
cmp
movs
add
fbstp
push
xlat
mov
(bad)
movs
in
push
arpl
inc
mov
loop
rcr
daa
mov
repnz
add
or
mov
js
movs
js
push
test
imul
arpl
leave
jp
(bad)
fistp
sub
je
push
inc
dec
cmps
add
ror
ins
(bad)
dec
cmp
mov
pop
xor
int
jbe
add
ds
push
add
iret
not
pop
jl
or
push
cdq
jle
sub
imul
pop
add
push
xor
push
outs
pusha
aaa
push
push
or
je
cmps
xchg
jecxz
scas
jo
push
mov
xlat
cs
xor
pop
popa
pop
and
hlt
sbb
jns
sub
jno
sbb
push
xchg
mov
std
pop
aad
pop
ins
dec
sbb
xchg
add
fldl2t
std
test
or
cmps
inc
mov
cs
idiv
cmps
xchg
(bad)
mov
mov
imul
aad
mov
dec
push
mov
cmc
push
int
lods
sub
fwait
xor
fild
xchg
aam
je
mov
push
iret
sahf
int3
cmp
cmp
fsub
pop
jae
test
jne
imul
addr16
js
test
imul
push
in
dec
sbb
mov
mov
cdq
sbb
fcmovb
sbb
jg
frstor
jb
imul
outs
xchg
fldenv
(bad)
pop
push
std
bound
outs
inc
dec
sbb
aad
aas
iret
dec
xchg
aaa
xchg
bound
out
ror
addr16
mov
cs
stc
push
lods
xchg
mov
fnstsw
cmc
pushf
dec
add
in
mov
cmp
and
pop
mov
pop
repz
lods
xor
jmp
(bad)
mov
mov
out
push
pop
scas
fcom
xchg
hlt
jge
movs
add
lods
call
fdiv
mov
retf
aam
and
xchg
xchg
push
mov
xor
pop
jb
in
neg
push
bound
dec
pop
add
mov
stos
hlt
enter
fsub
(bad)
xor
aas
add
pop
sbb
adc
sub
sbb
push
or
push
int
rol
cmps
scas
ins
sbb
in
mov
loop
mov
mov
cmp
bound
ins
outs
xchg
mov
inc
push
data16
pushf
imul
adc
scas
std
push
fistp
and
stos
inc
sub
aas
jmp
push
and
sbb
fiadd
sbb
mov
add
popa
das
push
or
pop
push
and
cmp
adc
ror
daa
das
and
push
add
fdivr
ins
sub
pusha
ss
jo
cmps
stc
mov
jl
int3
test
(bad)
nop
or
xlat
add
es
push
pop
ror
retf
cmp
aam
or
popa
into
cmps
(bad)
mov
sti
jp
in
xchg
push
dec
lock
imul
mov
and
fwait
and
into
mov
pop
jnp
out
mov
mov
pop
icebp
test
stos
leave
sbb
(bad)
loop
mov
or
hlt
mov
in
sub
jo
enter
cwde
outs
fucomi
shr
hlt
sbb
adc
mov
sbb
scas
jmp
cs
(bad)
lahf
call
loope
pop
add
ja
cmp
data16
cli
int
push
or
aaa
ins
ja
repz
dec
ffree
daa
adc
cmps
jmp
pop
ins
mov
ds
mov
cmps
outs
or
(bad)
ins
hlt
xchg
test
pop
add
out
dec
and
movs
add
cwde
data16
ss
sti
cwde
push
pop
mov
mov
mov
sahf
clc
das
or
mov
stc
mov
in
jl
xchg
push
clc
add
leave
in
sbb
adc
popf
jno
dec
sbb
jb
into
adc
sub
movs
mov
test
(bad)
rep
jg
sub
ins
scas
sti
lock
and
call
fsub
mov
inc
or
pop
adc
cmps
rol
enter
shl
not
or
xor
mov
loopne
add
mov
loope
imul
bound
rol
add
sahf
scas
fs
test
shl
sbb
mov
sub
mov
and
mov
xchg
fild
push
lds
pushf
test
jno
into
(bad)
clc
push
mov
push
jl
idiv
in
xor
push
int
push
mov
call
mov
xchg
jle
movs
(bad)
mov
dec
inc
and
xchg
enter
and
ror
imul
fadd
fadd
push
pop
aam
mov
shl
jb
icebp
enter
sbb
and
xchg
adc
adc
mov
fstp
jg
mov
cld
je
adc
fldcw
xor
xlat
push
pop
and
je
jge
or
cmp
cld
cld
outs
push
inc
push
mov
out
popf
rol
dec
(bad)
pop
neg
out
cmps
cmp
pop
inc
aas
out
pop
jmp
jmp
jae
mov
mov
cwde
and
loope
stos
push
dec
jecxz
push
xor
or
jae
cmc
cmc
dec
adc
inc
cmp
loopne
and
xchg
push
hlt
dec
mov
mov
daa
fnstenv
xor
pop
pop
aad
test
fiadd
scas
addr16
in
retf
imul
js
xlat
and
mov
xchg
pop
mov
adc
or
adc
push
scas
add
sbb
or
or
out
mov
xchg
or
jne
jl
sub
sbb
cmp
jo
pop
pop
pop
xchg
in
pop
mov
mov
arpl
jp
nop
ja
xchg
mov
and
mov
mov
jp
popf
mov
mov
mov
(bad)
out
icebp
out
ins
mov
mov
call
pop
pop
or
mov
dec
repnz
inc
cmps
cmovbe
sbb
ror
xor
cmps
push
push
aas
pop
(bad)
sbb
sub
aaa
push
fist
cli
test
xchg
xchg
mov
add
movs
ins
ret
mov
cmp
icebp
sbb
push
icebp
dec
aaa
inc
rcr
sbb
push
rol
call
std
jg
outs
mov
test
dec
ins
mov
mov
ret
jp
(bad)
xor
mov
and
dec
xor
ret
push
xor
add
mov
mov
mov
mov
and
inc
int
mov
lea
in
cmp
inc
lea
cmp
mov
lds
push
cmp
jb
xor
pop
adc
ins
cmp
sub
add
xor
xor
sbb
(bad)
retf
or
ficomp
sahf
ror
mov
lahf
sbb
loope
xchg
pop
pop
es
(bad)
push
dec
fidivr
stos
adc
cs
pop
mov
pop
scas
dec
sub
pop
out
sti
mov
les
shl
mov
loopne
fs
aad
pop
mov
jne
mov
aam
fsubrp
adc
xor
add
mov
add
loope
lods
adc
mov
in
cmps
cs
mov
stos
stos
xor
pushf
sbb
jae
nop
push
test
mov
lods
sbb
test
fxch
(bad)
adc
inc
out
fimul
dec
cmps
stc
fsub
sets
mov
cmp
mov
(bad)
cld
adc
(bad)
cli
sbb
xlat
mov
sub
and
jne
inc
sub
inc
mov
pop
mov
and
pop
dec
sbb
add
enter
pop
outs
repnz
icebp
jg
mov
and
mov
add
xchg
dec
loope
leave
mov
xor
push
ror
lods
cmp
out
and
repz
cmc
test
sbb
hlt
dec
mov
(bad)
das
inc
cmp
push
push
cmc
or
test
popa
jnp
cmps
sti
jge
repz
in
sub
inc
push
push
xchg
push
sbb
popa
ds
adc
mov
sar
dec
sub
dec
sahf
or
mov
push
or
repz
cmp
cmps
aad
mov
call
dec
je
mov
mov
bound
fs
movs
add
mov
out
rcr
inc
fistp
call
push
add
xor
xchg
or
in
outs
mov
dec
dec
ins
sub
cmp
adc
es
(bad)
add
arpl
call
dec
sub
cmp
pop
mov
call
popa
fiadd
shl
pop
sbb
push
cld
pushf
popa
xchg
(bad)
adc
loope
ins
(bad)
pop
push
imul
push
repz
mov
je
sbb
rcr
fistp
fdivr
cmp
adc
add
add
icebp
mov
rdpmc
rcl
mov
push
and
pop
popa
or
pop
cmp
int3
jmp
inc
fs
repnz
mov
jl
sub
imul
inc
jp
loop
and
jecxz
ins
sbb
jno
or
ss
pop
loop
repnz
jmp
loopne
pop
jp
outs
inc
mov
nop
pop
jo
out
lahf
inc
mov
inc
std
jmp
cmp
out
mov
push
push
pusha
add
mov
outs
mov
clc
movs
mov
in
lods
mov
pop
add
inc
retf
inc
out
ror
(bad)
mov
jae
push
out
loope
dec
jecxz
out
adc
mov
or
fistp
cdq
cli
lods
(bad)
ins
jnp
cld
fisubr
or
xor
sbb
sub
cmp
xor
push
out
je
sub
jne
add
lods
inc
adc
adc
mov
dec
ret
(bad)
addr16
icebp
call
xor
pop
sub
div
mov
push
xor
xchg
sti
mov
xor
fdivr
int
loope
cmp
jno
adc
xchg
xor
leave
xor
dec
lods
or
pop
or
movs
inc
(bad)
leave
mov
add
(bad)
(bad)
inc
mov
sub
pop
xchg
sub
loop
in
into
cmp
inc
cmp
xchg
inc
(bad)
jmp
ret
fcom
mov
pop
cmps
call
hlt
adc
push
inc
xor
mov
pusha
xchg
dec
shr
imul
mov
cmp
push
inc
mov
out
cmp
jne
(bad)
jnp
outs
jbe
xor
in
xchg
not
xor
adc
inc
adc
mov
dec
popf
adc
int
push
dec
shr
add
ins
shl
test
hlt
pop
das
loope
xchg
or
xchg
ja
push
imul
inc
inc
mov
int
or
movs
or
push
bound
inc
fucom
cli
dec
enter
or
(bad)
std
jecxz
int3
mov
pop
add
push
cmpxchg
xor
sub
shr
xchg
jl
(bad)
jo
in
lds
iret
(bad)
loop
mov
add
xchg
loope
mov
dec
jmp
mov
int
sbb
(bad)
scas
cli
lods
jge
ror
or
call
cld
ror
mov
jbe
mov
movs
mov
pop
jno
cld
sbb
cmp
lods
dec
int3
stos
call
sbb
jl
in
jae
fsubr
in
stos
push
dec
test
push
popa
pop
mov
pop
cld
mov
retf
pop
and
add
fsub
sbb
adc
jno
cmp
addr16
dec
clc
sub
int3
sar
lds
inc
leave
jne
clc
mov
adc
idiv
dec
ss
dec
xchg
jecxz
push
outs
repnz
(bad)
jl
fcom
xor
inc
dec
sub
loopne
xchg
fst
jl
fsubp
mov
lds
adc
push
xchg
adc
push
not
popa
cmp
pop
call
or
aam
add
fimul
dec
adc
addr16
fisub
or
or
stc
inc
sub
std
pop
mov
sti
push
pop
push
out
pushf
jg
dec
mov
adc
adc
pusha
inc
(bad)
jmp
inc
inc
pop
shl
xchg
cmps
xchg
push
mov
repnz
int
shl
and
or
mov
bound
(bad)
mov
dec
add
mov
loope
push
aam
pop
cmp
cwde
xchg
mov
inc
push
call
fcomp
scas
nop
ss
je
out
in
inc
fldcw
sbb
outs
ja
mov
add
mov
test
out
cvttps2pi
sbb
test
xchg
mov
rol
mov
or
xchg
sar
movs
psubusw
fstp
push
ins
daa
stos
xor
pop
in
jne
outs
gs
xor
das
inc
iret
cmps
fucomip
push
mov
arpl
into
iret
cmc
js
push
retf
sbb
test
dec
mov
test
mov
in
inc
sbb
and
push
xchg
ret
pop
mov
mov
shl
inc
test
popa
pop
add
punpckhbw
retf
xor
mov
outs
movs
and
lods
xchg
dec
mov
fld
add
and
xchg
xlat
or
ins
loope
jmp
into
dec
jmp
or
inc
aad
push
ins
xchg
pop
inc
push
cmp
(bad)
cli
jge
or
(bad)
mov
call
rol
mov
cmp
call
out
add
jbe
jne
pop
repz
sar
mov
(bad)
call
mov
retf
pop
std
cli
into
jmp
pusha
scas
or
sub
mov
icebp
xchg
adc
sbb
cmp
mov
jmp
mov
sbb
into
mov
push
mov
sahf
imul
lea
sbb
enter
add
cs
movs
mov
hlt
jl
fiadd
lahf
out
shl
cdq
imul
and
pop
aas
add
nop
in
xchg
lahf
enter
mov
push
fcomip
test
xor
push
movs
ret
ja
cwde
jp
jmp
inc
lahf
idiv
jp
aas
mov
shl
xchg
jne
mov
shr
int3
cli
ss
mov
push
loope
or
les
lahf
xchg
mov
add
jno
fcomp
xor
sub
inc
int3
inc
(bad)
ficom
push
fldl2t
push
push
cmp
fwait
push
or
jne
out
rcl
pop
and
sahf
xchg
test
cmp
xor
sti
and
xchg
xchg
call
aam
xor
add
and
loopne
jb
les
pop
scas
jno
xor
jmp
aad
add
mov
or
daa
aam
inc
aas
jge
sub
je
pop
not
dec
aaa
cdq
pop
cmps
mov
dec
adc
or
push
cmc
enter
jmp
and
pop
ror
mov
into
sbb
mov
push
ins
aas
and
bound
mov
js
mov
es
dec
mov
sbb
push
pop
std
imul
sub
push
xor
mov
das
xchg
pop
movs
and
repnz
cld
xor
push
cmps
ret
aad
add
std
pop
imul
leave
pop
daa
cli
int3
lock
add
mov
pop
aaa
mov
(bad)
call
sub
js
mov
and
jb
add
(bad)
xlat
sbb
fnsave
add
xor
mov
xchg
lea
add
test
movs
cmp
js
aaa
(bad)
test
loope
fiadd
imul
outs
das
aam
push
and
jns
sub
adc
pop
sub
sbb
mov
into
sub
cwde
dec
jns
adc
jae
ret
xor
and
rcr
(bad)
fcmovne
mov
adc
cwde
sbb
nop
cmp
pop
pop
xchg
dec
adc
jl
dec
loope
mov
sbb
cs
sub
jns
push
shl
hlt
lock
inc
aas
pop
pop
dec
xor
push
fld
push
inc
xchg
xchg
jg
out
push
or
sbb
dec
inc
fcmovnbe
jbe
cli
imul
ja
outs
push
fild
cmp
enter
push
mul
or
fdivr
mov
jmp
cdq
das
inc
jg
sub
mov
push
jns
add
xor
fstp
adc
cmc
stc
into
scas
inc
sahf
ins
mov
(bad)
xor
cld
jo
jns
(bad)
leave
and
sbb
cmp
cdq
jmp
out
or
inc
pusha
ins
rcl
sub
retf
and
ds
mov
sub
sub
in
add
mov
pop
pop
mov
and
mov
adc
in
mov
pop
lods
jno
xchg
pop
xchg
mov
sub
iret
mov
leave
cmp
sbb
or
cmps
adc
and
dec
dec
cdq
sub
fild
dec
fisubr
push
mov
fimul
pop
push
jmp
jns
outs
imul
push
in
es
xor
lahf
xor
xchg
push
ins
sti
pop
sbb
repnz
movs
push
pop
cld
push
cmp
push
cmps
inc
add
stos
dec
xchg
out
jns
or
sbb
push
xchg
fisub
push
cmp
cmp
(bad)
fnstcw
aas
or
jbe
(bad)
stc
inc
and
mov
mov
mov
inc
mov
std
imul
loop
out
xchg
scas
dec
repnz
into
scas
or
adc
sti
hlt
call
adc
cmp
icebp
cmp
popf
mov
test
mov
mov
pop
and
mov
cmp
xchg
movs
sbb
cmps
mov
js
lods
pop
stos
inc
stc
sar
cwde
int
cmp
(bad)
cmp
into
scas
sub
cmps
adc
cld
ror
dec
or
ret
int3
mov
add
push
in
pop
xchg
cmp
lahf
dec
pop
mov
rol
leave
xlat
pop
pop
(bad)
ss
xchg
jle
jno
ret
test
pcmpgtw
int
jl
adc
imul
pop
int
mul
pop
mov
movs
or
mov
nop
cmp
test
in
sbb
push
jnp
push
jle
sub
and
fdiv
dec
push
xor
sar
sahf
jb
or
add
lds
cmp
test
xchg
mov
les
inc
sti
aas
into
jp
mov
inc
push
in
cmp
xchg
push
mov
mov
mov
pop
mov
mov
lea
lods
adc
mov
test
ds
jge
cmp
retf
data16
jl
mov
mov
std
ret
clc
mov
aaa
int3
and
repz
lds
mov
mov
call
adc
xchg
push
inc
sub
or
sub
mov
xchg
inc
hlt
ss
jmp
push
sbb
or
pusha
sbb
adc
mov
inc
lea
es
in
rcr
sub
mov
jae
jb
adc
imul
sub
pusha
mov
cmp
or
pop
icebp
lock
add
lods
push
enter
int
mov
mov
xchg
shl
mov
test
fidiv
jmp
aas
cmps
repnz
in
in
enter
add
outs
punpckhwd
pop
in
js
in
movs
js
mov
ins
std
js
xchg
mov
bound
aas
cwde
cmc
fidiv
xlat
xlat
sub
adc
mov
popa
nop
hlt
xchg
adc
xchg
sahf
pop
popa
loopne
inc
jne
xlat
jne
xchg
in
add
adc
ds
pop
mov
push
inc
ret
outs
ret
sub
pop
imul
cmps
cmp
sbb
cmp
or
in
retf
push
lock
pop
stos
scas
ret
outs
jno
cmp
adc
cwde
fdiv
ins
push
imul
lea
add
push
mov
ret
outs
mov
ss
ror
nop
daa
pop
cli
jle
lahf
and
dec
not
pop
scas
in
or
inc
out
arpl
cmp
or
dec
mov
ins
popf
or
jae
das
cwde
repnz
dec
daa
adc
fcom
fs
mov
cmc
fld
push
rcr
sbb
lods
add
test
mov
fstp
sub
scas
(bad)
les
sbb
jg
jecxz
add
test
aam
mov
test
jno
repz
fstp
adc
das
sub
pop
xchg
add
or
ins
cmp
push
in
push
in
sahf
por
mov
mov
mov
add
jo
ss
and
ins
ss
and
xchg
fidiv
adc
dec
sub
pop
fisubr
inc
mov
and
fs
pop
pushf
ins
add
jnp
je
fsubr
aad
(bad)
out
in
jmp
mov
and
xchg
shl
add
cwde
mov
xor
jmp
push
(bad)
retf
in
pop
movs
fdiv
mov
cmc
cmp
adc
mov
or
dec
dec
dec
in
ret
add
xor
sar
lahf
mov
int3
stc
push
movs
cmps
jl
sbb
mov
or
hlt
lds
pop
std
es
xchg
sbb
push
arpl
or
in
loopne
(bad)
mov
mov
sub
data16
pop
mov
popa
ror
(bad)
lods
shr
fimul
dec
mov
jl
sbb
xchg
sub
in
xchg
pop
pop
or
fcmovne
jno
cmp
js
mov
lahf
lds
xor
xchg
mov
test
shl
fld
arpl
dec
dec
test
int
add
out
cmps
loop
mov
jg
mov
call
ins
sub
mov
sub
jne
or
mov
mov
sbb
inc
out
test
cmp
dec
adc
push
punpcklwd
test
jno
sub
cwde
or
add
into
xor
adc
shl
jp
jge
scas
sti
mov
loope
(bad)
fimul
cmp
mov
shl
gs
cs
xor
(bad)
sbb
frstpm(287
mov
movs
ins
xchg
jle
push
adc
loope
pop
adc
and
enter
sti
cwde
jne
mov
dec
xor
jnp
push
xor
dec
outs
or
or
adc
cli
lods
outs
outs
pop
jne
addr16
sub
pop
adc
push
adc
outs
inc
mov
outs
push
ds
inc
mov
icebp
scas
sbb
mov
icebp
test
or
dec
push
mov
mov
lea
mov
in
cmps
sbb
lods
lods
mov
dec
jns
mov
rcl
pop
enter
movs
test
jo
bound
jl
pop
clc
and
hlt
mov
sub
sub
mov
mov
popf
pop
lea
dec
push
jle
ficomp
aas
xchg
jne
cld
xor
or
mov
mov
jmp
adc
outs
pop
fistp
test
in
in
shl
sar
lods
jo
jae
daa
shl
repz
mov
jo
test
or
mov
cmps
push
stc
aas
xchg
or
mov
xor
repnz
adc
je
mov
cs
push
mov
sub
call
sti
lea
frndint
inc
sar
and
sbb
xor
stos
and
mov
xor
(bad)
gs
scas
mov
es
clc
pop
shl
lahf
imul
stc
test
test
xchg
cmp
dec
mov
out
mov
popf
mov
push
add
inc
mov
enter
jnp
rol
sub
clc
(bad)
or
out
jnp
xor
inc
pop
xor
cmp
adc
jne
mov
push
shr
and
inc
or
iret
in
(bad)
adc
mov
xor
sub
pusha
add
es
call
lea
shr
mov
mov
pushf
mov
add
dec
(bad)
jnp
mov
inc
test
jmp
in
dec
inc
outs
xlat
jmp
cmp
xor
mov
xor
test
and
fst
add
nop
and
ror
lahf
ror
pushf
mov
leave
icebp
push
and
sbb
mov
fild
jnp
mov
and
sbb
repnz
test
test
add
cmp
test
test
fdivr
jae
inc
dec
paddsw
ret
ror
pushf
pop
fsubr
mov
mov
fwait
lods
cmp
xor
aaa
adc
mov
mov
xchg
bound
stos
pop
dec
jmp
imul
pop
pop
or
sub
jge
dec
repnz
mov
pushf
mov
lods
lea
adc
mov
pop
dec
out
out
sub
push
xchg
icebp
(bad)
out
fst
in
add
xor
arpl
push
scas
mov
cmc
or
and
shl
rol
stc
mov
fmul
pop
cmc
arpl
pop
xchg
ret
add
xchg
sar
cmp
inc
nop
mov
psubb
sti
movs
jle
loop
(bad)
mov
mov
ret
lock
push
push
inc
aas
outs
fwait
push
(bad)
sbb
pop
jp
jg
arpl
dec
fsubr
jmp
mov
test
shl
(bad)
retf
xor
xor
repz
loop
daa
inc
mov
mov
and
add
cmps
or
pop
jo
sbb
cbw
js
test
cmp
ror
scas
jge
(bad)
arpl
clc
adc
sbb
rol
in
popf
mov
and
dec
pushf
loop
fmul
adc
mov
aam
and
pusha
pusha
sbb
imul
sbb
jp
sub
repnz
jns
jb
push
and
push
popa
mov
xchg
xchg
cmp
call
jne
xchg
sbb
xor
bound
cmp
push
lock
push
sub
ins
fcom
pop
cdq
inc
aam
dec
js
pop
add
dec
inc
push
jge
out
pop
push
push
ret
stos
lods
dec
aas
and
add
jo
mov
cmp
xlat
mov
push
mov
cmps
(bad)
mov
into
pop
inc
push
js
ja
outs
pop
dec
stc
iret
push
mov
std
push
sbb
jnp
fdivr
test
and
out
bound
out
popa
lock
hlt
pop
add
sar
sub
iret
add
mov
int
jg
or
add
push
sahf
shl
sub
xor
mov
jne
je
sbb
jo
dec
rol
rcl
je
rcl
(bad)
(bad)
fwait
push
inc
(bad)
test
fsubr
mov
popa
int3
pop
cmp
outs
cmp
jo
test
sub
jbe
mov
js
push
lock
mov
sub
(bad)
clc
sbb
inc
inc
iret
loopne
push
repnz
push
push
aad
je
sub
push
(bad)
aam
mov
out
scas
pop
sub
fwait
xchg
leave
pop
pop
jnp
jmp
dec
rcl
scas
jmp
mov
dec
jmp
add
mov
mov
pop
jno
pop
mov
inc
push
pushf
pop
xchg
mov
call
(bad)
sbb
shr
rcr
ins
call
bound
into
call
add
sub
jbe
ror
jg
xlat
test
dec
outs
fsubr
pop
std
sbb
sbb
pop
xchg
jle
and
push
xchg
mov
pop
data16
clc
pop
adc
cdq
popa
jae
clc
jae
xchg
mov
shl
adc
sbb
repz
adc
ja
cmp
push
repz
inc
sub
xor
mov
jg
leave
arpl
dec
dec
test
out
mov
xchg
popf
mov
mov
rol
test
sar
(bad)
(bad)
mov
cmp
test
xchg
xchg
out
pop
shl
ucomiss
sub
add
fmul
xchg
pop
or
mov
out
xor
retf
nop
push
and
jo
(bad)
ror
jmp
sbb
sbb
inc
dec
jge
xor
xchg
jle
xchg
add
out
mov
add
dec
mov
xchg
inc
xchg
lea
add
sar
ds
jne
cmp
mov
popa
sbb
and
push
je
out
inc
in
sub
sub
int
or
cld
(bad)
push
push
adc
fmul
inc
push
test
mov
cmp
nop
lea
repz
mov
daa
enter
dec
ja
adc
mov
aaa
or
outs
cwde
xchg
push
or
push
ds
add
rol
push
fwait
aaa
mov
mov
inc
bound
jl
push
mov
mov
retf
das
mov
stc
xlat
xchg
jmp
loope
les
fnstsw
clc
inc
loopne
pop
ds
sbb
cdq
sbb
sub
xchg
cwde
adc
and
mov
xor
jmp
push
jo
xor
stos
add
fidiv
daa
shl
inc
fadd
mov
mov
mov
or
add
scas
fst
iret
push
xchg
fcmovb
pop
sti
jno
in
mov
out
imul
push
cwde
lock
pop
sar
and
ror
sub
xchg
sbb
mov
jp
pop
mov
mov
inc
inc
cmp
mov
imul
pop
mov
es
and
mov
sahf
ds
adc
mov
sbb
xchg
test
(bad)
push
add
enter
adc
les
call
adc
icebp
sbb
js
or
xor
lock
ret
adc
dec
dec
mov
(bad)
or
mov
fist
add
(bad)
push
(bad)
in
jns
add
push
inc
cmp
adc
xchg
xchg
cdq
mov
ja
cmp
sub
sub
adc
je
in
jmp
dec
xchg
xchg
retf
rdpmc
je
jae
jno
pusha
xor
push
pop
loopne
cld
test
inc
loop
jl
fs
ja
dec
popf
xchg
mov
pushf
pusha
dec
int
xchg
enter
cmp
add
or
js
mov
cmp
add
scas
(bad)
sub
shl
outs
lods
lds
push
cmc
and
arpl
push
mov
outs
leave
je
xor
addr16
and
xchg
iret
or
push
cs
push
jnp
shr
mov
cmp
ds
arpl
jno
stc
mov
cli
movs
jg
repz
out
sbb
gs
adc
dec
jge
das
sbb
or
inc
out
stc
les
push
push
or
mov
in
xor
(bad)
mov
dec
mov
cmp
xchg
dec
add
(bad)
xor
inc
pop
mov
es
imul
mov
mov
mov
in
xchg
mov
jns
shr
cmp
pushf
push
popf
call
bnd
aaa
xchg
or
xlat
bound
xchg
sti
sti
pop
adc
xchg
and
xor
je
mov
shl
inc
or
sbb
outs
mov
jmp
ins
xlat
xchg
pop
mov
fadd
add
lahf
inc
push
movs
test
mov
push
(bad)
fwait
ret
sbb
xor
jmp
or
mov
inc
lds
or
xchg
mov
std
cmp
neg
pushf
das
gs
sbb
call
adc
add
and
ins
jg
pop
and
add
add
mov
xchg
xchg
fsin
push
cdq
mov
out
cli
cmps
inc
jae
sub
fwait
lods
jp
xchg
push
mov
pop
push
rcl
pop
ret
imul
mov
out
adc
mov
inc
fucomp
push
or
ins
sti
or
xchg
sbb
jbe
push
and
mov
aaa
mov
mov
sub
xor
in
sbb
addr16
adc
xchg
push
add
xchg
cli
repnz
or
push
mov
jno
imul
stos
mov
and
gs
push
test
(bad)
rol
(bad)
cmp
(bad)
fisttp
or
sahf
ins
adc
sub
mov
enter
retf
(bad)
pop
mov
ds
or
lock
jno
stos
dec
push
(bad)
mov
inc
mov
adc
ror
jmp
repnz
bnd
fs
lahf
je
div
xor
dec
outs
sbb
sti
mov
fnstsw
push
jne
or
or
(bad)
inc
sbb
data16
in
mov
fcmovnb
or
fdivr
sbb
add
cmp
mov
sahf
xchg
jno
dec
retf
mov
sub
aas
adc
add
ret
mov
sbb
sub
push
dec
aaa
sbb
jnp
xchg
fcomp
stos
fnstenv
mov
mov
sbb
mov
sbb
add
data16
sbb
dec
pop
jge
sahf
lods
stos
cmp
dec
es
loope
jmp
imul
(bad)
into
xor
mov
js
les
cs
fcom
xor
add
jp
sub
movs
repnz
(bad)
out
pusha
mov
sbb
and
jb
lds
stos
xor
je
mov
sahf
inc
sub
rcr
mov
idiv
jl
jo
test
movs
repz
(bad)
and
ins
sub
cmc
aas
clc
pop
push
js
pop
clc
cwde
cmp
pop
push
loopne
and
add
(bad)
test
enter
(bad)
data16
out
cmp
pop
ins
mov
enter
jns
popf
xlat
nop
(bad)
shl
pop
gs
cmp
(bad)
cmp
or
mov
xor
sub
inc
and
pop
adc
push
jb
xor
push
(bad)
and
imul
(bad)
daa
dec
aad
jl
mov
mov
outs
mov
(bad)
arpl
fmul
call
shl
jle
inc
loop
out
and
sbb
xchg
loop
mov
mov
in
inc
push
lahf
js
daa
sub
sub
mov
clc
hlt
xchg
push
jns
popf
adc
retf
adc
(bad)
fmul
xchg
mov
imul
scas
mov
and
pop
mov
dec
(bad)
jnp
and
mov
mov
out
ret
scas
xor
call
add
mov
ficom
inc
test
mov
into
sbb
inc
mov
cmps
add
inc
outs
and
mov
nop
add
int
dec
data16
inc
mov
test
xchg
(bad)
in
jp
sub
daa
aad
jmp
cld
cmps
cwde
adc
fs
adc
xchg
cmp
add
out
xchg
(bad)
mov
cwde
jae
js
adc
mov
movs
aam
jns
(bad)
cmp
add
cmps
or
push
push
push
inc
popf
add
cmc
push
jmp
outs
adc
pop
mov
inc
dec
ret
loope
sbb
pop
xchg
imul
aad
cwde
stos
xchg
shl
lods
nop
push
ror
rep
adc
aad
test
jmp
mov
add
idiv
jne
ror
sub
mov
sbb
jle
movs
retf
or
xor
(bad)
(bad)
imul
pop
cld
sbb
mov
xchg
xchg
jle
paddusw
rcl
pop
add
mov
jge
scas
retf
fwait
test
icebp
cmc
ds
xchg
sbb
ins
sbb
into
and
div
adc
cmp
mov
es
repnz
dec
inc
push
push
clc
push
stc
sbb
inc
mov
xor
lock
jnp
into
in
fisubr
sub
dec
or
jge
jo
out
pop
icebp
clc
sahf
outs
ins
loop
aas
xor
clc
mov
sbb
shl
nop
pop
imul
mov
loope
add
pop
sub
inc
imul
out
sub
sub
jns
mov
mov
inc
pop
(bad)
(bad)
rol
mov
cmp
outs
in
into
fisubr
inc
rcr
aad
lahf
std
cmp
adc
push
add
add
jl
add
repz
lahf
cdq
push
neg
out
pop
sub
adc
mov
jns
cmp
push
ret
pop
das
pxor
and
dec
sub
sbb
ja
pop
into
mov
dec
adc
push
pop
fstp
jmp
call
jmp
cwde
out
or
fldcw
aas
push
cld
dec
pop
mov
inc
pop
iret
fist
sub
xor
retf
bnd
and
dec
(bad)
in
mov
dec
xchg
pop
xchg
stos
cmps
(bad)
call
in
icebp
mov
pop
inc
mov
test
nop
call
xchg
sub
gs
and
pop
mov
mov
add
jp
shr
(bad)
sub
xor
adc
mov
es
add
add
int
mov
pop
inc
retf
in
ds
xor
ficomp
add
leave
mov
mov
push
adc
aam
and
push
das
push
add
cmp
(bad)
adc
enter
shl
and
das
xchg
inc
add
aaa
inc
(bad)
jmp
mov
mov
mov
in
jmp
xor
mov
in
pop
dec
xor
inc
xor
or
jle
xor
hlt
aaa
mov
xor
mov
inc
jmp
cli
mov
adc
(bad)
imul
es
xor
and
cli
clc
loop
or
cmp
fld
dec
fiadd
stc
fsubr
test
ss
mov
mov
adc
ret
(bad)
mov
push
arpl
sub
xchg
jns
data16
xlat
sahf
and
push
fmul
sbb
push
inc
cmp
fistp
push
(bad)
in
or
hlt
jns
or
leave
inc
mov
mov
adc
out
xlat
jbe
push
xchg
or
mov
or
dec
les
jmp
ins
stc
(bad)
shr
pusha
pop
cs
jae
test
test
mov
aaa
scas
lahf
cmp
int
je
int3
imul
stc
jg
mov
lods
sbb
xor
cmp
and
popa
pop
frstor
push
sbb
dec
push
cmp
push
add
pop
das
or
xor
mov
ficom
xor
sub
lods
aam
push
xor
and
xor
mov
xchg
xor
xor
lahf
addr16
iret
mov
mov
cmp
test
inc
int3
push
jmp
ret
lock
or
mov
xor
stos
xor
test
sti
pop
(bad)
jmp
cs
dec
jle
mov
cmp
or
or
cmps
sub
aaa
stos
xor
cdq
lods
out
enter
inc
cmp
sub
(bad)
push
xchg
imul
inc
mov
push
in
sub
data16
rcl
les
(bad)
sub
call
push
sub
jne
xchg
in
jmp
cwde
mov
mov
gs
jl
jl
jbe
imul
add
jecxz
dec
dec
outs
fld
jo
xor
adc
hlt
or
dec
sbb
popf
adc
retf
sbb
(bad)
cwde
cld
push
adc
adc
nop
movs
pop
add
and
cmp
popa
xor
adc
pop
xchg
jge
int
inc
sbb
sub
outs
sar
jbe
(bad)
in
lahf
in
push
in
(bad)
push
cmp
dec
xlat
js
add
cmp
cmp
xor
jecxz
enter
push
mov
adc
movs
clc
jmp
icebp
push
xchg
fwait
scas
(bad)
int3
jmp
js
xchg
mov
icebp
inc
mov
push
stos
adc
test
push
pop
retw
dec
dec
ins
pop
pop
mov
imul
cmp
gs
mov
xor
(bad)
in
add
out
jns
dec
pop
inc
outs
movhps
push
dec
pop
xor
icebp
cmps
arpl
cld
cld
dec
mov
pop
aas
push
mov
jb
fwait
push
loop
fwait
push
jge
inc
inc
repnz
(bad)
jo
or
add
add
sub
mov
cli
int3
rol
push
fwait
xor
(bad)
call
pop
int
into
xchg
add
(bad)
jae
sti
out
test
scas
mov
int
test
cmp
push
ret
adc
push
cmp
pop
sub
mov
ins
mov
add
jl
xor
xlat
xchg
mov
hlt
sbb
and
xchg
jl
das
cmp
nop
mov
popf
pop
movs
pushf
dec
xchg
aas
inc
xor
cmp
adc
popf
sub
add
iret
mov
sbb
das
leave
pop
pop
pop
push
mov
mov
sbb
test
dec
xor
adc
push
sbb
(bad)
and
dec
in
cmp
dec
lods
or
push
out
push
mov
shr
loope
mov
jmp
xor
in
jmp
stos
dec
loopne
jmp
loopne
jnp
or
shl
(bad)
jmp
data16
into
mov
stc
mov
jne
add
nop
ds
add
out
jne
arpl
cmp
mov
test
xchg
sahf
pusha
imul
in
dec
add
mov
push
cmp
xchg
xchg
out
jl
pop
push
imul
aad
out
outs
xchg
jne
mov
pop
cmp
or
mov
cmps
or
enter
movs
add
xor
adc
dec
mov
or
xchg
and
pop
and
ins
ds
and
ss
xchg
and
jne
mov
jne
repz
xchg
pop
retf
out
pop
mov
loopne
pop
lahf
add
xlat
jmp
bnd
adc
xchg
xor
(bad)
in
repnz
and
outs
outs
mov
sub
push
mov
add
repnz
cmps
(bad)
sub
rcl
dec
jle
ret
push
inc
jo
push
jae
fisttp
outs
repz
pop
je
mov
scas
cmp
aam
add
add
or
jo
rcl
call
mov
xor
sub
repnz
(bad)
sub
jne
cmps
sbb
pop
xor
push
lods
lods
mov
imul
inc
xchg
xor
aad
xchg
adc
sub
mov
out
rcl
inc
gs
mov
add
xlat
iret
push
push
sbb
sub
push
aaa
cld
ds
outs
ins
inc
push
xchg
xchg
dec
add
(bad)
(bad)
adc
mov
in
adc
mov
mov
shl
mov
pop
pop
or
push
mov
xlat
or
jno
scas
aad
adc
xor
mov
pop
pop
inc
and
daa
push
mov
(bad)
adc
cmp
fdivr
int
js
mov
repnz
dec
or
fs
clc
fild
repnz
xchg
jb
stos
push
dec
clc
fistp
inc
cmps
gs
and
rol
mov
push
enter
sbb
mov
mov
ins
xlat
js
sub
or
xor
adc
cs
xchg
rcr
daa
loop
stos
jnp
inc
sub
inc
cmp
xchg
push
pusha
pop
lahf
or
fstp
push
sbb
das
jbe
ror
mov
cs
inc
or
inc
out
sub
jns
outs
xor
retf
mov
lds
mov
pop
cmps
daa
sub
add
cwde
leave
add
pop
jnp
dec
push
(bad)
sub
retf
pslld
pop
repnz
inc
scas
dec
repnz
mov
call
int3
scas
leave
jnp
mov
test
and
dec
cmps
mov
loope
lock
xchg
adc
int
mov
test
(bad)
xchg
dec
inc
and
mov
cdq
mov
jmp
inc
cmp
fisttp
jnp
cmp
jmp
std
dec
mov
and
jle
pop
add
test
add
xor
ss
enter
scas
cld
cmp
xchg
sub
cs
mov
loopne
ret
aas
xor
xchg
shr
jp
xchg
or
mov
add
fadd
push
shl
and
mov
cmp
inc
jb
mov
retf
cmp
and
adc
(bad)
clc
adc
mov
enter
stos
fwait
inc
mov
aam
sub
mov
jo
dec
jecxz
rcl
je
cmc
mov
das
dec
in
jg
add
sbb
in
iret
xor
shl
lahf
push
fidivr
xor
xor
add
gs
ds
cmp
mov
pop
aas
mov
sbb
nop
div
dec
enter
or
lock
fiadd
jno
mov
clc
lods
mov
not
mov
mov
stc
test
nop
repz
icebp
sbb
js
add
imul
add
push
out
arpl
int3
or
stos
fcom
xor
push
mov
lock
loopne
je
mov
xchg
push
loopne
stos
sub
add
xor
in
rcr
in
test
and
xchg
in
mov
das
mov
xlat
test
sub
in
add
dec
push
xlat
jmp
cmps
lods
xor
and
pushf
ins
psrlq
cmp
enter
sub
popa
ret
daa
or
outs
jecxz
pop
mov
jno
data16
call
es
add
push
stos
mov
sbb
jnp
adc
mov
mov
in
stos
add
shr
pop
xchg
fdivr
(bad)
add
mul
or
out
jle
mov
popa
and
sar
fmul
repnz
xlat
and
inc
jae
jecxz
dec
cwde
std
call
jmp
and
pop
or
es
popf
icebp
mov
cmp
pop
sub
sti
out
in
jl
xchg
mov
loop
push
retf
ror
push
test
aam
mov
pop
popf
lock
cwde
in
fldcw
cmc
pop
sub
pushf
fidivr
mov
adc
aaa
push
outs
test
enter
(bad)
and
mov
inc
and
jp
fimul
ins
sar
(bad)
rcr
in
cmp
loopne
cmp
mov
dec
cmp
push
test
and
retf
rcl
call
or
in
mov
cli
out
mov
sub
mov
iret
dec
dec
dec
sbb
sbb
jle
test
push
shl
sar
inc
and
cs
or
mov
pusha
jle
psubd
loopne
loope
cld
jg
cmc
stos
lea
cli
movs
inc
leave
out
sbb
push
cld
or
dec
jno
xchg
xchg
pop
arpl
push
pop
aam
ror
adc
and
sub
movs
retf
jb
fwait
dec
scas
add
stos
addr16
mov
cli
(bad)
cmp
cmc
or
scas
gs
sbb
mov
sbb
xor
call
mov
and
arpl
mov
cld
in
hlt
outs
in
or
fsub
pop
enter
out
(bad)
mov
sar
and
lods
cdq
dec
(bad)
jne
add
dec
fisubr
repnz
int
pavgw
mov
adc
adc
aad
or
fmul
jg
adc
in
push
pop
test
add
out
pop
and
jp
xor
cmp
push
xor
cmps
jmp
movs
std
adc
cwde
loop
aaa
push
xchg
push
push
add
fmul
cmps
jp
mov
jp
mov
push
add
fs
out
into
ret
and
fisubr
mov
outs
push
enter
lods
mov
je
cli
jp
arpl
fst
scas
sbb
add
(bad)
call
inc
aam
mov
ror
inc
xchg
in
test
stc
dec
and
or
retf
fisttp
mov
shl
int
scas
call
cdq
sub
data16
mov
adc
lods
ffree
mov
push
inc
inc
adc
enter
imul
pop
dec
xchg
nop
xchg
(bad)
push
(bad)
enter
or
mov
jg
cmp
nop
jmp
adc
fnsave
(bad)
jns
stc
sub
cmp
cmps
imul
test
sbb
call
ins
cmps
jp
pusha
fs
or
add
xor
mov
int3
adc
push
jbe
(bad)
mov
sub
popf
and
or
push
(bad)
retf
loopne
outs
mov
mov
(bad)
pusha
xor
push
mov
dec
sbb
dec
jo
push
in
popf
or
xchg
leave
lahf
stos
cmp
mov
add
scas
lods
stos
xor
ds
xor
fwait
add
call
adc
push
fwait
enter
mov
sbb
imul
(bad)
push
inc
cmp
xor
mov
outs
xchg
call
push
push
out
xchg
icebp
fstp
mov
jnp
icebp
stos
or
add
mov
push
mov
fdiv
cmp
dec
or
mov
adc
xlat
mov
cwde
dec
loopne
or
dec
xor
and
loopne
mov
into
add
dec
cmp
jo
xchg
add
dec
and
shr
sub
scas
cmc
inc
test
dec
fisttp
enter
in
ret
push
jl
add
into
les
xor
std
fisubr
pop
push
loope
cld
je
xchg
cmp
or
or
mov
int3
push
pop
or
sbb
lods
leave
lock
dec
jmp
in
out
cwde
jnp
fisub
fnstcw
adc
scas
es
pop
addr16
in
fs
sbb
cmc
mov
xchg
enter
and
addr16
sbb
pop
cmp
stc
fbstp
jae
pop
push
fcom
js
pop
scas
jp
(bad)
xchg
(bad)
jp
into
push
mov
lods
js
sar
add
mov
xchg
rcr
dec
xchg
(bad)
scas
lahf
push
(bad)
int
cmp
cdq
push
sub
adc
leave
mov
push
lods
add
data16
pop
scas
jl
popa
sub
mov
inc
fsubrp
pop
aas
dec
inc
leave
aam
sub
pop
sbb
(bad)
mov
sbb
ror
lods
cmps
sub
lahf
fbstp
xchg
pop
test
cld
es
inc
sbb
or
add
jecxz
adc
sbb
push
cwde
lods
das
xchg
fiadd
je
clc
rcl
jns
push
cs
mov
in
pop
xchg
cmp
push
sbb
pop
xchg
inc
fistp
sub
and
in
stos
push
call
cmps
movs
add
(bad)
(bad)
or
outs
mov
inc
pop
movs
sbb
cmp
mov
pop
dec
push
loopne
or
dec
ss
pop
mov
mov
sbb
push
mov
mov
mov
out
sbb
pusha
into
shr
aas
sub
jns
cmps
(bad)
fadd
cmp
pushf
mov
add
push
icebp
adc
retf
xor
jae
cld
push
(bad)
add
push
pop
out
pop
inc
pop
pop
in
xchg
mov
retf
jl
mov
fdivr
js
mov
enter
stos
test
std
mov
inc
mul
mov
data16
gs
out
stos
pop
mov
adc
into
push
iret
std
sub
sbb
xchg
mov
sbb
(bad)
mov
adc
ja
jp
(bad)
mov
call
xrelease
push
cli
mov
xor
push
(bad)
mov
dec
add
pop
push
loopne
mov
icebp
sahf
enter
jp
jno
bound
(bad)
mov
ss
fst
adc
add
clc
adc
dec
ss
xor
repz
loopne
dec
add
lods
shl
mov
xchg
mov
cmp
lods
loope
pop
adc
mov
sub
xchg
mov
xchg
mov
sbb
push
loope
jl
stc
jne
adc
and
outs
mov
call
push
or
push
push
das
in
xor
pop
out
push
lds
mov
test
jmp
aam
daa
sub
push
pop
lahf
dec
cmps
nop
mov
popa
cmp
sbb
ret
popf
jle
test
pusha
test
mov
movs
dec
scas
lds
jae
les
(bad)
xchg
sub
aaa
pop
sub
mov
jg
leave
push
push
push
frstor
les
je
es
or
pop
stos
adc
pop
mov
sti
xor
les
scas
jge
cs
mov
pop
xchg
xchg
(bad)
mov
xchg
call
push
mov
sbb
push
dec
or
sbb
sub
jecxz
inc
jmp
jg
cmp
clc
sub
adc
add
repnz
fadd
in
fs
xchg
gs
sbb
inc
sbb
pop
or
dec
inc
dec
push
xlat
shr
dec
mov
jmp
jp
adc
ret
adc
call
loope
ret
je
repnz
xchg
push
mov
jmp
cmp
cmp
mov
mov
dec
movs
arpl
out
outs
dec
xchg
push
pop
add
cmc
pop
adc
mov
fisub
dec
push
push
dec
ja
inc
or
lock
and
adc
ins
shr
add
jns
mov
mov
pop
ds
cli
fstp
or
out
push
xchg
in
out
adc
lods
pop
or
test
sub
stos
mov
or
xlat
fidivr
dec
dec
push
mov
or
xchg
sbb
inc
push
pusha
mov
cli
ret
mov
add
inc
add
xchg
mov
inc
and
jle
cmps
and
mov
iret
jmp
clc
mov
stos
in
xlat
dec
jp
lds
popf
popf
lahf
mov
pop
jp
adc
pop
jl
push
jmp
push
cli
dec
aad
nop
loope
or
fsubp
sub
test
es
pop
and
fiadd
lds
push
outs
push
xor
das
inc
loop
scas
sub
push
pop
push
aam
jbe
pop
cmps
popa
cmp
inc
push
and
push
and
aam
inc
inc
push
fs
into
leave
mov
xchg
fnstenv
fidiv
cmp
out
fnstcw
fucom
sahf
xor
mov
cmps
add
push
mov
scas
div
add
rcl
mov
rcr
ret
movs
cmp
push
retf
test
xchg
xchg
(bad)
jo
or
lods
mov
xchg
cmps
sbb
or
pop
das
jae
or
inc
sub
cmp
out
sbb
fbstp
push
add
aam
repnz
sbb
lds
sahf
cmp
inc
adc
popa
in
mov
mov
jmp
adc
or
(bad)
movs
pop
jmp
out
nop
add
outs
push
xor
test
std
xor
sub
inc
iret
push
imul
xchg
push
movs
cs
mov
dec
jp
xchg
outs
pop
jne
repz
rol
mov
cli
int
(bad)
cld
cmc
fiadd
push
movs
in
test
mov
jbe
xlat
cdq
inc
ss
lock
mov
enter
(bad)
aam
jo
test
sti
enter
or
sahf
jo
shr
mov
test
adc
pusha
outs
xchg
lock
add
sti
add
push
inc
sbb
sub
(bad)
out
xor
adc
mov
jge
push
xchg
mov
clc
movs
pop
in
lahf
test
mov
sub
jle
into
adc
mov
outs
sahf
int
or
mov
clc
push
jmp
push
je
mov
fistp
test
inc
inc
out
add
adc
icebp
mov
dec
or
dec
xchg
push
fsubrp
fdivr
inc
stos
ret
jmp
in
or
test
xchg
push
sub
fwait
rol
mov
int
cmps
std
les
adc
push
aad
imul
nop
mov
add
jne
sub
mov
add
adc
out
imul
div
sub
loopne
div
cwde
bound
pop
loop
xchg
sbb
or
shr
mov
(bad)
adc
mov
shl
cmp
and
push
iret
xor
push
add
mov
cmp
cmp
gs
int
xchg
int
lds
fcomp
icebp
imul
int3
cdq
movs
xor
out
push
in
adc
push
out
inc
or
(bad)
cmp
dec
call
retf
sub
or
movups
mov
cmp
rol
imul
jmp
dec
xchg
bound
shl
jne
pop
scas
mov
jmp
xor
cmp
mov
jmp
add
xor
ja
in
ins
test
jecxz
fwait
push
ins
fnstcw
pop
fsubr
fsubr
push
pop
dec
iret
xor
aas
cmp
(bad)
in
aas
cmps
sub
out
iret
out
daa
imul
pop
mov
dec
lea
jle
rcr
cmp
or
neg
adc
data16
fbstp
lods
outs
adc
fsubr
test
mov
push
cwde
imul
add
mov
imul
dec
ror
pop
mov
aad
mov
jno
in
add
loope
mov
aaa
outs
inc
(bad)
movs
xchg
pop
lods
add
mov
push
push
mov
pop
cmp
jb
inc
sahf
loope
mov
cli
aam
imul
xchg
jmp
les
popa
fisub
mov
adc
push
daa
inc
in
les
fidivr
pop
imul
test
cmp
(bad)
dec
cwde
sub
movs
jg
dec
adc
out
or
ja
loopne
(bad)
mov
add
mov
jbe
or
clc
xchg
adc
push
mov
cmp
mov
mov
or
mov
inc
sahf
xor
sub
mov
mov
out
fld
cmp
adc
pop
inc
sub
test
mov
ins
xor
jle
inc
inc
lods
sub
dec
arpl
or
(bad)
imul
inc
xchg
je
pop
adc
sbb
sub
bound
xor
sbb
lds
mov
(bad)
jb
pop
rcl
ins
jmp
loopne
inc
push
adc
jae
dec
jmp
dec
jbe
cmps
rcr
leave
adc
jo
arpl
jae
xor
out
jae
test
call
mov
data16
mov
pop
xor
jnp
in
xchg
lea
xor
mov
pusha
icebp
dec
push
and
xor
stos
sbb
lods
pop
pop
test
(bad)
push
test
ins
jns
add
pop
dec
inc
in
and
xchg
std
inc
cwde
ds
into
(bad)
and
ficom
icebp
xlat
or
scas
ss
xchg
adc
test
sbb
mov
out
(bad)
nop
adc
mov
fist
mov
xchg
jae
mov
js
in
xchg
mov
jge
adc
cmps
pop
sahf
mov
out
(bad)
cdq
xchg
pushf
mov
clc
add
js
jnp
aam
cmp
in
outs
jecxz
nop
scas
or
nop
cmps
hlt
stos
and
add
imul
fmulp
cli
push
rep
(bad)
sub
xchg
push
mov
out
jmp
jns
inc
xor
jmp
aaa
sub
mov
cmc
jns
cmp
movs
lds
mul
out
xor
adc
pop
cmp
cmps
rcr
jmp
sub
sub
inc
adc
fistp
add
ds
movs
sub
ret
out
loope
aad
mov
mov
pop
std
jl
jmp
xor
int
pop
pop
sbb
in
(bad)
xlat
xor
loop
mov
jmp
cld
mov
icebp
das
sub
(bad)
mov
and
add
hlt
leave
stc
dec
and
push
pop
jns
(bad)
outs
adc
push
xchg
clc
jmp
and
and
ret
arpl
test
xchg
js
iret
into
jg
(bad)
(bad)
xor
mov
mov
dec
pop
int3
push
push
dec
mov
(bad)
or
push
sbb
aaa
fwait
shr
fstp
xor
pop
repz
add
mul
pop
push
or
iret
jp
mov
rcr
jno
clc
push
jns
sbb
mov
sbb
jnp
jns
xchg
into
adc
add
popa
sbb
js
mov
sbb
mov
mov
retf
mov
xchg
jne
je
outs
rol
pop
enter
test
fld
hlt
scas
add
outs
repz
push
mov
sub
jle
mov
fisubr
or
test
bound
sbb
les
out
enter
stos
ret
call
hlt
pop
movs
sub
lds
stos
rcr
jne
or
dec
rcl
push
fsub
push
cdq
xchg
push
(bad)
cmp
sbb
call
sar
pop
aaa
movs
xor
adc
or
popa
mov
enter
xchg
(bad)
(bad)
pop
and
lds
mov
xchg
mov
dec
or
and
data16
mov
cmp
mov
pushf
popa
jns
ror
dec
xor
jmp
dec
leave
lahf
in
lds
pop
xchg
cdq
js
movs
add
ins
repnz
add
adc
arpl
or
test
and
retf
mov
pop
cmp
adc
lods
adc
push
outs
add
mov
cwde
fsub
call
mov
add
test
mov
mov
dec
(bad)
xor
jmp
lea
pushf
adc
ror
mov
bound
in
cmp
dec
dec
loop
fwait
leave
push
in
scas
add
cmp
mov
test
retf
mov
lea
das
fld
ja
retf
push
and
ffreep
pop
and
arpl
or
fmulp
(bad)
jl
cwde
jecxz
(bad)
sbb
mov
lea
cmc
cmp
out
(bad)
stos
push
enter
jmp
in
std
mov
into
sbb
cmp
adc
(bad)
rcl
xchg
div
loopne
mov
stos
jnp
ss
enter
(bad)
(bad)
in
iret
retf
loop
jne
ja
rol
and
leave
mov
mov
fnsave
xlat
jmp
retf
mov
fist
dec
jg
and
(bad)
fbstp
aam
jmp
icebp
in
mov
in
cmp
pop
stos
retf
push
jno
and
mov
stos
es
push
imul
jb
fisub
mov
sbb
sub
push
inc
and
mov
movs
sub
repnz
xlat
xchg
rcl
aas
aas
push
clc
mov
fs
out
out
ret
fld
icebp
hlt
pop
popf
cmp
mov
daa
pop
sbb
loop
into
hlt
lods
fld
inc
dec
jp
and
gs
lea
push
retf
test
xor
jnp
pop
dec
outs
je
cmp
sti
lods
xor
test
vsqrtss
mov
aam
pop
mov
das
mov
test
jns
mov
ins
stos
clc
mov
push
xor
ret
sub
sub
cwde
mov
loope
push
jmp
jo
or
cmp
cmp
mov
fild
test
ds
jle
add
inc
mov
mov
ins
lahf
xchg
sub
jae
nop
jae
addr16
sti
or
popf
mov
(bad)
fmul
pop
sbb
dec
pop
cwde
sub
lock
jo
fnstenv
aas
jnp
jl
xor
lods
data16
push
cmp
movq
inc
cmp
outs
fdivr
cmp
cmovo
push
inc
cmp
cmc
and
sti
outs
cmp
dec
xor
cmp
jbe
sbb
sbb
inc
cmp
and
dec
push
gs
repnz
adc
loopne
cmp
jae
mov
mov
push
icebp
mov
stos
jns
sub
fidiv
jae
fsub
jg
mov
fild
cmp
xor
dec
inc
lods
ins
stos
jmp
adc
dec
lds
xchg
mov
jle
movs
pop
sbb
outs
sbb
sbb
push
mov
fadd
jns
iret
test
pop
scas
outs
test
cmp
adc
dec
sbb
sar
mov
dec
js
retf
pop
imul
iret
les
es
xor
(bad)
fdiv
test
jno
(bad)
in
les
and
lock
sbb
pop
lock
xor
xor
or
test
jge
dec
fisttp
xchg
cld
xchg
int3
lock
sub
sub
in
and
enter
push
repnz
les
push
add
sub
inc
repz
test
inc
mov
loope
xchg
inc
mov
xchg
and
sbb
adc
outs
jmp
fsubr
je
fild
repz
out
inc
call
test
fwait
test
pop
int
dec
mov
sub
daa
xchg
push
cmp
push
fwait
outs
jnp
fwait
push
push
ds
movs
inc
mov
push
pop
push
push
sbb
ins
mov
fidivr
sub
call
pop
retf
in
xor
sbb
add
push
mov
shl
lea
push
loop
push
fistp
or
fimul
outs
repz
dec
(bad)
fiadd
add
cmp
xchg
mov
mov
fsubr
pop
jnp
push
fwait
sbb
pop
daa
sub
cmps
jae
(bad)
in
mov
mov
jb
xor
jb
cmps
mov
and
mov
stos
mov
shl
inc
dec
xchg
stos
aam
sbb
sti
ins
mov
inc
add
mov
fidiv
jg
add
xchg
neg
inc
xor
cmp
pop
fisub
das
jg
sbb
push
mov
(bad)
mov
js
aam
into
or
mov
mov
push
pmovmskb
push
add
movs
push
xor
pop
pop
mov
mov
sub
loopne
(bad)
push
jecxz
and
cmp
push
add
test
mov
push
test
mov
push
sahf
mov
ret
shl
sahf
sbb
test
xchg
push
(bad)
mov
add
iret
add
sub
push
adc
jo
add
adc
or
pop
scas
add
dec
jmp
dec
push
cmp
les
icebp
je
sub
cwde
cmp
or
inc
dec
(bad)
out
jle
inc
pop
ret
in
addr16
xchg
mov
dec
inc
pop
mov
inc
jg
ds
ins
dec
xchg
dec
sbb
cmp
aas
rcr
adc
iret
outs
add
cs
inc
inc
cld
push
sahf
iret
sub
sti
xor
pop
dec
sahf
stos
dec
cmp
xor
jbe
push
pop
inc
xchg
push
pusha
(bad)
repz
loopne
frstor
mov
mov
test
movs
or
jp
mov
jnp
fidivr
push
nop
lock
mov
sahf
push
mov
pop
std
xchg
push
jecxz
ins
xchg
inc
mov
es
iret
sub
xor
mov
adc
repnz
xchg
push
arpl
pop
push
dec
xor
pop
pop
popa
push
out
pop
cdq
dec
es
jmp
jg
call
leave
adc
hlt
shr
mov
xchg
in
xchg
mov
fcomp
cdq
call
xchg
sub
popa
pop
jecxz
in
pusha
enter
adc
xlat
xor
push
das
mov
popa
mov
cli
into
repz
ja
push
mov
stos
pop
lods
das
(bad)
mov
mov
mov
cmp
shr
inc
jno
(bad)
fldenv
pop
mov
ret
test
stos
dec
fs
mov
and
in
mov
fsubr
sub
sar
stc
test
mov
fisub
or
push
inc
mov
scas
rep
cmp
xor
jp
pop
push
mov
cmp
push
sbb
outs
cmp
pop
ins
xchg
cmp
in
nop
or
push
lods
fs
jo
addr16
es
mov
pop
inc
pop
outs
mov
sub
adc
stc
jg
(bad)
lock
(bad)
icebp
mov
(bad)
adc
push
stos
mov
xor
imul
dec
ror
and
dec
(bad)
sbb
mov
push
sbb
hlt
outs
mov
mov
push
mov
js
xchg
ins
test
mov
mov
and
mov
gs
enter
mov
enter
push
sub
sar
and
cmp
sbb
dec
and
sbb
mov
sub
sbb
and
cdq
push
inc
add
and
or
data16
movs
or
scas
in
push
stos
add
jmp
push
call
icebp
fisttp
das
mov
jmp
lods
addr16
dec
mov
test
lds
pop
mov
mov
lods
xor
dec
daa
xchg
fimul
bound
or
es
test
xor
xchg
gs
jb
out
cmpps
inc
sub
adc
sub
call
outs
xchg
lock
push
add
push
adc
fiadd
dec
xor
add
hlt
arpl
gs
out
je
in
popa
call
push
mov
inc
xor
cmc
ret
scas
in
mov
rcl
test
add
jo
out
fst
inc
mov
aaa
dec
xor
(bad)
out
hlt
fmul
(bad)
arpl
push
jmp
cld
pop
mov
(bad)
sbb
dec
rcl
sbb
in
and
imul
push
stos
cmc
fcomip
sub
push
push
ffree
cmp
cmp
pop
call
sbb
arpl
xor
ja
add
lahf
mov
fadd
pop
in
xor
mov
cmp
cmps
inc
rcl
repnz
pop
inc
lods
fidivr
les
rol
cmc
sbb
fistp
fcomp
test
pop
iret
call
fst
das
mov
leave
aaa
or
jne
inc
mov
jle
or
mov
push
sub
and
mov
sbb
mov
out
jmp
jmp
adc
in
aas
cmps
aas
jmp
cmp
out
fwait
mov
ret
pop
mov
out
cmp
int
mov
(bad)
pop
jo
pop
xchg
dec
mov
inc
ror
repnz
xchg
xor
dec
retf
pop
repz
mov
sbb
and
push
(bad)
jb
fs
test
xchg
jg
add
pop
or
repnz
push
mov
mov
adc
and
jle
out
sub
xchg
jg
dec
push
mov
fmul
mov
stos
jmp
cli
cmp
jnp
mov
iret
dec
ins
mov
and
test
xor
aas
sub
bound
ins
dec
push
mov
push
pop
pop
inc
mov
fistp
and
(bad)
aam
pop
jmp
pop
rcr
sbb
sbb
add
fisubr
cdq
retf
add
xor
jl
adc
rep
stc
and
add
mov
int3
add
pusha
pop
aas
mov
mov
fisub
loope
call
xchg
add
mov
outs
addr16
ffreep
vpacksswb
sar
jle
mov
sub
cmp
xor
mov
inc
movs
or
sub
ja
stos
mov
push
call
stos
cdq
rol
xor
ja
lods
aad
push
outs
js
jae
idiv
dec
js
cmp
stc
mov
push
inc
retf
mov
nop
fs
sbb
imul
and
mov
push
dec
add
xchg
out
inc
out
enter
jp
rcr
(bad)
push
stc
clc
xchg
adc
enter
bound
xchg
shr
loopne
cdq
xchg
cmc
movs
js
cdq
test
gs
push
sub
adc
sub
mov
das
mov
aad
dec
(bad)
in
movs
push
mov
sub
gs
(bad)
jmp
xchg
mov
imul
xor
push
int3
push
mov
ins
call
sar
push
xor
stos
xchg
dec
lea
mov
loop
push
int3
stos
mov
lds
rol
repnz
sub
les
mov
js
sar
and
inc
sbb
dec
stos
inc
mov
xchg
xor
and
retf
pop
adc
add
fs
js
movs
iret
xchg
fcom
sbb
rol
dec
daa
push
jl
inc
xchg
aaa
(bad)
aam
cmc
sbb
test
mov
ss
pop
pop
lock
pushf
add
inc
neg
ret
push
push
jmp
fnstenv
scas
inc
xchg
dec
popa
pavgw
addr16
sub
mov
jno
imul
in
jnp
push
sbb
adc
dec
das
add
sbb
push
ret
push
inc
popa
mov
mov
sub
rol
in
adc
push
and
in
das
ins
or
shl
pop
aam
cmc
les
jae
mov
or
adc
sbb
xchg
or
lock
pop
js
pop
mov
mov
mov
xor
rcr
mov
cwde
mov
jg
add
movs
mov
push
(bad)
mov
push
clc
shl
jb
ins
cmp
push
int
jno
std
cmc
xor
mov
ins
mov
retf
xchg
mov
jecxz
and
movs
and
hlt
int
gs
jmp
pop
push
pop
ss
aas
sbb
cmc
jmp
movs
leave
inc
movs
dec
jecxz
pop
pcmpeqw
jnp
scas
pop
or
(bad)
jp
stc
mov
adc
push
shl
nop
or
sbb
adc
dec
pop
mov
xchg
and
div
cmp
pusha
stos
mov
mov
sub
loopne
(bad)
clc
add
sahf
(bad)
arpl
test
sbb
adc
pusha
inc
dec
sub
mov
std
movs
mov
adc
repnz
jo
mov
fstp
mov
std
into
lods
mov
cmp
xor
xchg
dec
cmp
rcl
dec
fist
mov
call
add
push
add
in
rcr
fcom
stos
icebp
xor
aaa
adc
in
out
sbb
pop
and
mov
retf
aad
jmp
push
sub
in
(bad)
xor
repz
mov
in
scas
fs
cmps
and
std
xchg
int3
std
scas
in
jb
enter
scas
test
mov
cs
push
jmp
xchg
fnstsw
mov
adc
cld
std
sbb
pop
pop
dec
inc
mov
mov
shr
pushf
out
lods
dec
cmp
sbb
xchg
push
aam
adc
ja
(bad)
fidiv
or
neg
cli
and
jl
scas
imul
dec
push
adc
(bad)
std
std
add
in
in
ror
inc
arpl
nop
xor
or
pop
mov
mov
sub
or
mov
(bad)
mov
or
in
mov
mov
pop
mov
fiadd
lahf
xchg
test
jmp
add
stc
cdq
inc
jge
out
test
movs
inc
test
outs
jge
lods
mov
sbb
or
adc
sbb
aas
ret
in
leave
lock
fisubr
fst
test
xchg
mov
xchg
mov
bound
ins
cld
retf
and
loope
sbb
mov
aam
and
dec
or
inc
cmp
pop
xchg
mov
mov
leave
dec
outs
lds
jo
je
scas
push
(bad)
and
aas
inc
cmps
(bad)
fdivr
(bad)
out
int3
test
fs
je
aas
out
inc
fwait
call
adc
adc
call
in
test
std
(bad)
aaa
sbb
sub
repz
nop
jg
sbb
call
xchg
xchg
and
pop
or
icebp
jl
aam
xchg
xor
gs
lahf
sbb
add
adc
aam
inc
je
xor
and
outs
push
or
pop
mov
sub
lock
jmp
repnz
cmc
ins
xlat
sahf
adc
sti
dec
add
js
test
cli
pop
or
fwait
jl
mov
test
aaa
cmps
daa
dec
test
push
(bad)
jo
arpl
lods
cmp
xchg
imul
sub
xor
pusha
jae
pop
push
push
or
in
loop
cdq
push
shl
clc
lea
inc
lods
mov
sbb
(bad)
(bad)
jmp
repnz
dec
mov
(bad)
inc
push
jp
xchg
mov
(bad)
repnz
lahf
dec
aam
inc
rcr
adc
sub
fcomp
inc
call
and
in
add
aam
jns
mov
sub
mov
cmp
loopne
sub
in
jle
jg
cmps
movs
arpl
and
or
jnp
dec
push
sub
out
lds
push
lods
mov
jbe
mov
stos
out
jl
arpl
xchg
ins
and
aad
xchg
fst
retf
mov
std
aam
(bad)
retf
mov
call
sub
es
test
lahf
repnz
jmp
rcr
push
shr
pop
in
(bad)
pop
dec
or
inc
test
xor
aaa
cli
fcom
mov
cvtpi2ps
inc
jno
aam
test
jbe
sub
push
push
inc
cmp
push
int
xor
jbe
into
adc
or
iret
xor
or
sbb
sti
xor
loope
addr16
add
and
and
sub
ret
outs
sar
rol
call
je
imul
lods
add
aad
xor
in
lahf
and
mov
push
mov
das
in
popa
aas
cmp
stc
push
sbb
fstp
xor
lds
cld
lahf
fwait
push
popa
pop
add
sbb
mov
test
idiv
inc
or
and
inc
sbb
call
xor
adc
push
fcomp
dec
mov
and
loop
cld
pop
cwde
jns
dec
sub
push
ins
mov
fs
mov
adc
mov
fist
sti
fild
cmps
(bad)
out
xor
std
mov
inc
popa
in
cmp
or
inc
fwait
stos
or
mov
out
xor
jns
dec
in
xor
or
aas
pushf
aad
pop
in
jmp
mov
dec
cmps
cli
int
push
mov
dec
clc
adc
push
inc
test
and
cwde
ins
push
loopne
push
or
mov
out
jle
and
jmp
iret
jns
fwait
xor
das
jecxz
ins
pop
pusha
jmp
cmps
dec
jle
and
adc
adc
xor
adc
loop
lahf
sub
hlt
gs
es
xchg
push
xchg
pop
or
cmc
fwait
cmp
cmp
mov
xchg
arpl
(bad)
lock
jmp
pop
xlat
mov
mov
jbe
cdq
das
jecxz
pop
repnz
and
fcmovnbe
jae
mov
pop
rcr
in
inc
dec
fisubr
cmp
mov
(bad)
push
dec
loope
fwait
jg
das
dec
push
out
rol
sbb
movs
push
dec
pop
push
sbb
push
lock
popf
xor
dec
cld
out
es
adc
fisttp
loopne
out
mov
arpl
jge
add
mov
mov
sub
pop
inc
rcl
test
jmp
aaa
xchg
into
sub
je
sub
adc
es
jb
stc
or
mov
icebp
inc
mov
cmp
xor
pusha
pop
ins
ret
mov
xchg
pop
mov
(bad)
ffree
test
inc
shl
and
sbb
jp
add
xlat
pop
cmc
in
scas
sar
cmp
mov
mov
cs
push
pusha
xchg
sar
pop
mov
lds
or
pop
lods
or
dec
jp
repnz
(bad)
cmp
test
mov
ds
in
jle
sti
jge
das
dec
sar
ret
cmp
rcr
mov
aam
sub
xchg
sbb
scas
dec
iret
into
jo
xor
scas
cmc
inc
call
fisubr
push
and
imul
scas
jno
call
xchg
mov
inc
out
sub
nop
cs
fucomp
xchg
pop
mov
pop
adc
inc
dec
std
(bad)
iret
xchg
xchg
neg
je
mov
nop
add
mov
(bad)
and
rcr
cdq
sti
and
xor
aas
shl
mov
mov
movs
mov
aad
cs
cmp
xor
imul
iret
test
loop
sbb
dec
xchg
jae
xchg
jp
jns
mov
pop
jp
pop
jb
test
xor
dec
xlat
push
(bad)
jmp
inc
or
mov
fist
rol
paddq
push
mov
mov
js
xor
push
scas
lahf
cli
neg
daa
xor
push
pushf
adc
shl
movs
lea
pop
xchg
shl
lods
inc
dec
fs
sbb
aam
outs
rcr
repnz
test
aas
dec
loop
jmp
adc
call
push
loope
mov
jno
push
shl
dec
repz
rcr
outs
fnsave
in
ret
cmps
cmp
push
daa
sub
and
mov
dec
into
aaa
mov
(bad)
pop
(bad)
hlt
dec
mov
fstp
push
ret
div
xchg
cmp
cld
out
add
fs
(bad)
loop
sahf
inc
push
sbb
movs
and
stc
std
nop
jne
sti
mov
push
lock
push
pop
mov
fs
stc
movs
loop
mov
pop
adc
push
fwait
pop
test
je
not
xchg
in
jecxz
push
adc
xchg
retf
or
pop
add
jmp
and
pop
out
cs
add
add
dec
out
int
adc
xor
xor
fmul
push
push
pop
sub
movs
jmp
popa
adc
not
cs
(bad)
xchg
mov
jno
(bad)
repnz
adc
mov
mov
imul
cmp
loopne
and
movhps
and
lea
outs
mov
mov
mov
lds
add
cli
out
jbe
jecxz
or
inc
mov
dec
xor
js
ret
pop
and
ror
push
sbb
xchg
pop
fistp
in
cmp
mov
stos
rol
xchg
movs
cmp
or
imul
xchg
lods
mov
or
movs
ins
sahf
push
dec
sar
test
xchg
mov
dec
ret
dec
xchg
ss
jmp
ror
pushf
test
push
int
inc
ins
psadbw
pop
inc
fwait
retf
test
mov
sbb
mov
and
push
fimul
jmp
ins
popf
push
adc
pop
cmp
mov
imul
or
loop
ja
aaa
or
(bad)
in
imul
mov
enter
mov
pop
stos
icebp
mov
lods
pop
cmps
imul
dec
aam
and
loope
pop
pop
cmps
inc
das
fisub
jecxz
push
sbb
in
mov
sbb
aaa
aad
fdivr
lods
push
push
ins
adc
ror
lock
add
dec
cmp
cmp
cmc
stos
pop
mov
mov
ret
fld
iret
adc
jno
aam
cmp
xor
xchg
push
jae
sbb
out
mov
imul
mov
mov
mov
movs
rdtsc
loop
adc
loop
xchg
xor
je
fs
jmp
sti
enter
sti
xor
popf
loopne
rcl
xchg
shr
mov
fwait
icebp
add
call
lods
xchg
jmp
pop
pop
sbb
and
out
in
sahf
in
pop
jecxz
sub
aam
fcomp
je
mov
push
outs
ja
gs
xchg
sub
cmp
aaa
mov
jg
(bad)
test
cs
push
or
pop
fcmovu
call
mov
xchg
jbe
loop
mov
rcr
fwait
push
loop
shr
fisubr
mov
mov
daa
(bad)
nop
daa
ja
mov
dec
pop
or
inc
icebp
push
ins
loop
or
loopne
mov
xchg
or
or
xchg
test
cs
and
out
repnz
sahf
jnp
jo
shl
aam
xor
aaa
mov
pushf
jmp
sub
adc
hlt
test
loopne
sub
retf
xchg
movs
push
mov
push
mov
fcomp
mov
or
push
sbb
and
mov
(bad)
int3
ffreep
je
popa
sub
mov
pop
int3
data16
aas
push
lahf
fsubrp
cdq
adc
ss
movs
iret
lds
(bad)
movs
sbb
out
sahf
(bad)
mov
(bad)
adc
and
xchg
mov
sbb
cdq
sahf
movhlps
fsubr
add
adc
or
cmp
popf
ret
push
adc
test
ins
(bad)
jnp
mov
(bad)
xchg
add
test
movs
push
fwait
jp
mov
push
sbb
and
xchg
jne
mov
retf
jl
ds
pop
cpuid
mov
push
pop
lds
nop
ins
ins
dec
leave
pop
jb
xor
out
shl
or
sbb
mov
ins
arpl
test
xchg
sub
push
push
loopne
pop
inc
add
ror
daa
arpl
loope
neg
ss
js
enter
dec
xlat
jge
mov
fistp
and
sbb
fadd
or
or
mov
in
xchg
push
and
sahf
in
inc
ret
repz
test
dec
js
iret
es
icebp
mov
add
arpl
and
and
clc
ins
les
jg
or
sub
adc
mov
push
xchg
leave
ins
or
xchg
jnp
das
add
shl
les
mov
mov
xor
xchg
push
pop
movs
cli
fld
in
jecxz
xor
ins
shr
jnp
mov
test
retf
jp
bound
sub
div
and
cmp
sbb
aaa
ja
scas
loopne
mov
mov
mov
push
daa
adc
sub
and
dec
push
fmul
and
xchg
xchg
mov
push
xchg
or
ss
inc
outs
outs
sub
and
ret
shl
je
dec
rol
xor
push
std
and
int3
jp
mov
in
scas
jmp
not
jne
mov
(bad)
icebp
pop
(bad)
adc
(bad)
arpl
add
pop
jg
fild
inc
mov
and
xor
in
arpl
mov
xor
pop
push
into
mov
inc
retf
jg
xchg
fistp
dec
mov
sbb
push
psubq
or
mov
test
test
dec
mov
inc
daa
imul
and
xor
fmul
punpckhwd
add
sbb
sub
inc
inc
stc
sti
clc
or
int3
inc
pop
vpsadbw
les
cmc
enter
cmp
out
out
push
jbe
jmp
aad
les
sub
cld
cmp
pop
mov
out
xor
dec
ficom
rcl
cmp
call
arpl
call
mov
dec
inc
mov
push
dec
xlat
(bad)
fcom
cmp
(bad)
je
jecxz
outs
ins
sahf
outs
pop
scas
lock
push
pusha
lea
xchg
or
or
push
out
mov
fld
adc
and
ret
popf
stos
aam
push
jle
push
gs
in
xchg
mov
aad
(bad)
cli
xchg
mov
pop
inc
lock
jg
enter
cmps
mov
push
jecxz
mov
mov
push
cli
int3
and
mov
fild
push
inc
cmp
out
popa
mov
dec
adc
(bad)
out
sbb
dec
cmovns
jmp
ja
or
xchg
and
cmp
mov
push
mov
ins
cmp
xchg
inc
pop
mov
sti
outs
push
push
inc
into
(bad)
cmp
push
sahf
popa
inc
sbb
sti
push
out
fst
mov
cmp
jle
adc
(bad)
mov
hlt
mov
lods
push
pop
xor
xor
enter
push
or
mov
xchg
adc
imul
xchg
push
jmp
mov
and
lods
popa
rcr
fsub
or
inc
xor
mov
push
xchg
xchg
push
mov
push
fiadd
inc
push
sub
push
fild
push
mov
ror
or
pop
add
je
inc
xchg
lods
loopne
and
lods
sub
sbb
iret
inc
popf
stos
mov
std
pop
mov
shr
aaa
(bad)
and
mov
inc
xor
dec
scas
sbb
sahf
lahf
fsub
cmps
dec
xchg
jg
push
adc
mov
mov
pop
iret
mov
cs
push
dec
mov
add
arpl
dec
aam
ja
lock
mov
push
out
iret
imul
or
jno
aam
call
bound
dec
lds
std
ss
loopne
test
stos
out
dec
aad
jae
in
add
mov
icebp
and
pop
rol
leave
add
pop
enter
push
mov
add
scas
gs
mov
in
sbb
sbb
mov
jo
mov
arpl
xlat
int
in
cmc
call
mov
movs
sar
push
xor
ja
sahf
mov
mov
adc
es
call
lahf
jb
outs
adc
js
cdq
and
or
adc
out
inc
cli
add
cmp
pop
inc
dec
adc
and
push
aaa
jbe
movs
xchg
fs
inc
xchg
(bad)
dec
pop
rol
fldcw
add
dec
mov
int
or
jecxz
sbb
bound
jl
daa
clc
shl
cs
arpl
push
cmp
(bad)
in
(bad)
push
inc
stos
cli
fnstcw
xor
dec
xor
cs
adc
add
xor
xchg
pop
mov
mov
add
inc
add
fincstp
jae
fcomp
xchg
ror
lods
jecxz
leave
in
cmp
lahf
sbb
call
mov
push
push
mov
ror
or
inc
(bad)
cmp
jl
movs
or
push
xchg
cmp
aas
aaa
call
icebp
test
retf
daa
shl
or
cmc
sub
push
retf
cdq
xchg
jge
jle
inc
lods
ins
jmp
bound
lds
data16
cli
rcr
cmp
mov
jne
xor
mov
jmp
adc
xchg
and
ret
or
adc
mov
cs
dec
mov
mov
dec
mov
lahf
shr
sbb
jg
add
push
adc
out
inc
cli
dec
mov
xchg
mov
into
fcom
cmp
int
fwait
movs
mov
mov
mov
xchg
jg
and
icebp
fist
rol
data16
imul
cmp
jp
jmp
sub
mov
adc
push
xchg
xchg
retf
in
fisubr
scas
aas
push
or
inc
jno
mov
rcl
and
sar
xchg
sub
fsub
dec
dec
rol
fstp
jbe
xor
pop
fld
mul
dec
mov
pop
jmp
jge
sbb
push
mov
bound
fsub
imul
pop
outs
jnp
mov
int3
xlat
or
sub
add
shr
les
sub
repz
pop
pmulhw
mov
jns
lahf
mov
add
pop
lock
imul
dec
fisubr
mov
sub
leave
mov
push
pop
popf
rol
div
iret
jbe
xchg
leave
leave
pop
call
fstp
push
pop
outs
into
mov
mov
or
xchg
sub
fisttp
lock
mov
pop
xor
test
and
pop
xchg
pop
outs
mov
pushw
mov
repz
sbb
jl
dec
sti
ins
int3
(bad)
lds
dec
adc
cmp
test
test
mov
pop
jg
mov
in
add
push
aas
lahf
adc
popa
inc
or
dec
ret
push
xor
les
les
nop
mov
call
cmp
mov
imul
das
call
xor
sbb
mov
fbstp
xchg
add
shr
sbb
int3
fcom
out
les
lods
inc
dec
fnstcw
push
sti
stc
pop
push
mov
add
jmp
add
(bad)
(bad)
sbb
aad
cmc
cmp
dec
movs
retf
mov
sti
(bad)
pusha
push
sub
cmc
and
rcl
ficomp
(bad)
push
jo
aaa
mov
das
lahf
enter
cmp
jno
mov
imul
nop
cld
bound
popa
into
sub
dec
adc
jmp
cmp
jae
xlat
sbb
(bad)
add
jns
sbb
cld
sbb
test
loope
inc
cmp
aam
lods
dec
pop
and
pop
sti
addps
in
add
in
fcomp
mov
bswap
adc
push
sub
jo
(bad)
not
adc
add
mov
cmp
dec
ret
sbb
inc
jge
sbb
lods
call
aas
(bad)
xor
popa
aaa
out
scas
ins
jmp
dec
mov
mov
mov
mov
add
mov
inc
inc
mov
cwde
and
clc
fstp
add
(bad)
loope
rcl
or
sub
(bad)
std
mov
jnp
cmc
mov
mov
daa
push
mov
jp
push
aam
dec
pop
cwde
adc
push
xchg
repnz
dec
inc
(bad)
loopne
in
call
rcl
mov
aam
cmc
stos
repnz
(bad)
aam
aad
jno
xor
xlat
stos
das
scas
imul
rcr
lods
test
je
pop
das
dec
xchg
mov
(bad)
outs
push
cmp
mov
jle
inc
dec
or
pop
mov
sub
(bad)
data16
sahf
jecxz
iret
xchg
mul
out
mov
das
push
retf
cmc
js
xor
aaa
jecxz
dec
push
push
outs
test
fdivr
mov
lea
or
shl
inc
push
cld
call
out
mov
mov
(bad)
movs
adc
stos
retf
test
push
dec
cmp
xor
test
cmc
push
jae
mov
add
fwait
lods
add
jle
mov
mov
loope
push
out
push
inc
outs
lods
dec
xor
xor
jle
sbb
inc
mov
imul
data16
bound
fsub
outs
mov
jle
fsub
pop
mov
pop
shl
leave
std
ret
popa
pop
jmp
fld
xchg
daa
dec
int
inc
aas
retf
push
xchg
push
(bad)
cmp
out
push
mov
or
(bad)
lods
mov
and
dec
pop
jae
xchg
xchg
adc
or
or
inc
inc
jle
xchg
sub
stos
jb
jne
ret
mov
xchg
inc
into
loopne
adc
gs
fisub
xor
daa
jmp
inc
sub
cmp
or
dec
popa
arpl
fs
or
mov
int
push
(bad)
xor
fsubr
cmp
adc
inc
es
gs
jmp
inc
cmps
gs
or
or
stos
dec
into
shl
fdivr
sbb
inc
jo
aas
dec
jno
cmp
cmps
sub
mov
jg
and
adc
add
in
pop
cmp
xchg
adc
pushf
add
xchg
add
push
(bad)
fcom
pop
and
int3
add
jo
mov
inc
xchg
mov
test
adc
cmp
retf
stos
pop
xchg
xor
or
dec
adc
xchg
xchg
call
inc
popf
xlat
sti
cmp
and
stos
cmc
(bad)
cmp
enter
rol
adc
leave
push
fcmovnbe
inc
mov
or
jns
cmp
add
mov
hlt
xchg
cdq
dec
mov
push
stos
inc
out
sbb
jg
add
adc
mov
mov
dec
push
xchg
addr16
cvtdq2ps
fldcw
dec
pop
dec
xor
(bad)
gs
mov
cmp
mov
cli
popf
push
push
loopne
fisttp
xor
mov
sbb
mov
adc
inc
pushf
clc
mov
inc
imul
jnp
jecxz
dec
out
mov
xlat
and
push
or
cmps
leave
lock
push
div
cmp
xchg
or
mov
pop
add
out
aaa
outs
pop
cmp
push
and
mov
repz
shl
jg
data16
mov
sub
xor
push
leave
lods
sbb
cmp
push
repnz
fwait
adc
adc
retf
push
pop
jmp
ins
xor
mov
hlt
stos
or
push
test
cmp
or
cmp
scas
and
loopne
es
dec
clc
pop
dec
ret
and
outs
sub
mov
dec
add
(bad)
(bad)
jg
sar
xchg
in
cmp
cmps
inc
jne
or
sub
imul
mov
cmp
mov
add
lods
cmps
jns
test
mov
fcom
out
and
fdivr
mov
jmp
inc
jmp
mov
add
(bad)
call
clc
ins
fnstenv
fwait
mov
in
or
xchg
sbb
out
inc
sbb
fisttp
cmp
mov
shl
fbstp
mov
adc
outs
pop
test
out
jb
xor
push
pop
sar
neg
mov
icebp
enter
cmpxchg
mov
and
xchg
and
outs
push
dec
sub
sbb
jg
add
ror
dec
adc
stos
hlt
jns
out
adc
or
push
cmp
and
mov
jmp
retf
adc
popf
mov
das
cdq
int
in
sbb
dec
or
arpl
cs
arpl
dec
adc
loopne
jmp
jge
push
addr16
mov
rcl
nop
and
int3
cli
sub
xchg
mov
lods
cmp
cmp
rcl
adc
in
cmps
sbb
dec
fwait
mov
dec
jnp
add
popf
adc
daa
int
(bad)
lahf
into
sub
cmp
mov
enter
pop
iret
test
fbstp
iret
mov
loopne
xchg
dec
fild
xchg
pop
jge
ret
inc
jle
inc
xchg
adc
(bad)
mov
inc
push
into
js
and
cli
cwde
scas
or
mov
outs
std
dec
ror
ja
mov
sbb
dec
stos
or
data16
stos
pop
jmp
nop
dec
mov
(bad)
cld
dec
dec
sub
(bad)
das
cmps
nop
add
jno
mov
jp
fbld
stos
mov
mov
add
(bad)
aad
cmp
cmp
aam
das
adc
test
into
enter
fldenv
ss
mov
and
fldcw
addr16
in
retf
popa
nop
cmc
and
(bad)
ins
mov
(bad)
cmps
xor
je
(bad)
and
loope
mov
outs
jne
lea
outs
push
push
movaps
iret
movs
mov
clc
adc
pop
out
fcomp
pop
xchg
loope
inc
cmc
stc
mov
mov
stc
lods
aas
jns
add
popf
and
and
dec
stos
loopne
fistp
mov
js
inc
mov
xchg
fistp
ss
stc
mov
adc
mul
fwait
or
in
xchg
test
xor
mov
enter
js
dec
into
xor
repnz
mov
repz
adc
cdq
mov
or
aas
dec
in
jno
add
push
adc
clc
mov
ficomp
dec
fsubrp
ss
ins
cld
mov
cmp
or
lods
push
xchg
lods
mov
inc
scas
les
je
mov
xchg
mov
sbb
daa
sbb
(bad)
bound
pop
mov
jmp
sub
mov
xor
push
dec
xchg
inc
cwde
sar
xchg
int
cwde
cmps
xor
mov
mov
jmp
test
mov
jmp
and
(bad)
les
dec
push
push
jmp
sbb
xchg
xchg
(bad)
xchg
sbb
or
push
jp
mov
int
inc
push
and
into
call
sub
cld
mov
into
push
jge
mov
cmp
ins
ss
sub
and
cmps
mov
sub
sbb
push
cmc
push
sub
push
call
and
mov
in
leave
dec
out
pop
mov
xor
xchg
mov
daa
mov
cmp
xor
inc
in
popa
pop
movs
cmps
and
push
mov
sbb
xor
pop
adc
cmp
aas
mov
sub
push
xor
daa
stc
outs
push
cmp
sub
and
stos
les
push
jle
sub
ror
mov
lea
pop
cmp
jnp
loope
mov
adc
dec
sti
out
loopne
mov
inc
xchg
rcl
aaa
mov
or
jl
push
inc
fisubr
call
psraw
out
sbb
movs
sub
clc
into
jmp
adc
or
inc
call
pushf
ss
xor
xchg
or
aad
dec
test
neg
mov
das
or
pop
(bad)
cwde
stc
stos
cs
adc
fld
fst
inc
inc
test
sar
dec
shl
enter
jmp
push
cmc
test
ds
mov
jg
pop
je
pop
add
out
or
in
or
aam
ins
in
add
mov
dec
cmp
ins
gs
popf
pop
add
popf
push
nop
mov
dec
test
xchg
aas
pop
daa
jb
xchg
cli
inc
stc
vpcmpeqw
loop
sbb
dec
repnz
push
adc
nop
push
in
jns
jo
sbb
rdmsr
cmps
sahf
jl
repz
mov
fdivr
(bad)
cmp
push
call
ss
int3
gs
sar
xor
ret
jp
cmp
shl
fnstenv
rol
mov
adc
lods
nop
sbb
mov
sbb
xor
pop
add
mov
aad
retf
or
sub
shl
and
mov
rol
jne
mov
ja
cdq
data16
shl
push
sbb
hlt
rol
enter
and
adc
and
pushf
lahf
pop
mov
jae
mov
xlat
fldenv
outs
add
xchg
in
ret
imul
movs
jno
sub
inc
das
mov
lahf
(bad)
mov
in
and
mov
dec
dec
dec
mov
ror
cdq
cwde
(bad)
repz
xor
dec
mov
and
sub
sub
and
mul
iret
xchg
jnp
push
xlat
mov
dec
pop
mov
js
cmc
sub
mov
cmps
mov
inc
in
dec
push
or
call
mov
xchg
bound
sbb
pop
mov
lds
xchg
fadd
cdq
sbb
fldenv
in
dec
mov
and
ds
sub
stos
sbb
xchg
icebp
pop
cld
xchg
xor
loopne
jge
cmp
je
std
or
ficomp
lods
lock
int
jmp
es
adc
cs
or
mov
pop
sbb
popf
xor
shl
push
adc
arpl
sahf
xchg
mov
frstor
adc
inc
mov
jmp
xor
add
div
daa
jb
lahf
aam
test
or
xchg
push
shr
sub
fsqrt
out
leave
push
vmovapd
xchg
call
movs
adc
sbb
sub
int3
out
in
adc
je
inc
ins
pop
and
sub
fwait
test
dec
adc
pop
cmp
(bad)
push
mov
jp
pushf
push
out
sti
cmps
pusha
adc
dec
popa
shl
mov
adc
jg
not
fcom
mov
jae
jb
cmp
mov
ins
sahf
pop
mov
ret
outs
pop
loopne
xchg
(bad)
movs
mov
cli
add
aaa
je
out
sub
push
add
dec
nop
jbe
outs
ret
iret
movs
xor
(bad)
xor
cs
ins
daa
push
xor
sbb
xchg
daa
jl
fidivr
daa
pop
int3
gs
jbe
and
push
xchg
sub
sub
sti
mov
mov
push
add
scas
das
cmp
pop
mov
dec
add
sbb
nop
push
pop
cmps
xlat
push
push
mov
jl
mov
dec
mov
xor
cmps
xchg
push
xchg
dec
jmp
mov
xchg
adc
jnp
lods
jb
lea
mov
pop
pop
mov
inc
cmp
push
add
mov
xchg
xor
jmp
sub
xchg
sbb
les
(bad)
addr16
enter
add
scas
mov
xlat
dec
stos
gs
cmp
push
fdivrp
leave
lods
push
enter
push
sub
inc
mov
sbb
mov
xor
push
fimul
imul
mov
sub
lds
jge
adc
jle
lahf
call
into
ss
jge
push
stc
mov
inc
and
stos
jbe
or
mov
cs
paddsw
push
into
pop
xor
pop
pop
mov
test
add
and
mov
add
ja
push
aam
movs
inc
fidiv
cwde
enter
call
jmp
(bad)
outs
pop
push
out
mov
dec
data16
jp
retf
add
mov
sar
imul
jle
inc
or
arpl
mov
jg
cld
fst
and
in
inc
out
mov
jns
jecxz
and
pop
mov
ficomp
mov
push
scas
cmp
xlat
mov
and
add
cmps
fwait
sbb
aad
and
repz
pop
lds
jne
ret
xor
jp
xor
leave
xchg
(bad)
jns
mov
idiv
fwait
stc
xor
inc
mov
out
xor
push
sbb
test
push
mov
cli
sbb
(bad)
(bad)
xor
sub
add
ret
xchg
add
stos
idiv
aam
inc
cmp
(bad)
mov
inc
call
shl
push
pop
ror
adc
xor
je
xor
cmp
mov
imul
retf
fcmovu
push
push
(bad)
push
push
stos
push
test
cmp
mov
cmps
jne
inc
cmp
mov
dec
jle
mov
push
data16
and
mov
cmps
outs
call
dec
sub
mov
xchg
jbe
xor
(bad)
out
xchg
ret
js
mov
lods
punpckldq
shl
adc
dec
add
or
lods
add
jmp
ins
push
sub
js
inc
cmps
scas
std
es
iret
cwde
push
xor
out
fdiv
stos
mov
pusha
jno
fwait
mov
retf
sbb
pushf
jmp
xchg
les
leave
call
adc
test
in
inc
mov
leave
or
add
pop
dec
push
xchg
pop
mov
dec
pop
push
add
js
push
cmp
iret
in
aam
inc
mov
pop
fsubrp
test
mov
dec
mov
hlt
jp
push
mov
push
and
repz
fidiv
ds
pop
cmps
lods
pop
fcomp
inc
cmc
iret
xchg
fdiv
inc
(bad)
aam
ror
out
stos
xchg
jl
and
sbb
pop
xchg
stos
rcr
and
inc
ret
push
lods
ins
iret
jb
push
cmp
cmp
inc
in
into
cmp
or
inc
fcmovnu
lock
sub
xor
xor
cmps
test
fst
fadd
sub
push
push
jo
popf
(bad)
aam
push
jle
and
(bad)
mov
cmp
fst
aas
cmc
fcmovbe
xchg
ins
gs
daa
inc
dec
not
push
mov
xlat
inc
inc
int
mov
aas
mov
stc
push
lock
and
lock
dec
jno
inc
cdq
dec
cmps
aad
add
dec
inc
fidivr
sub
sbb
xor
je
adc
jbe
mov
adc
arpl
ds
jle
or
mov
jnp
outs
fadd
jb
js
shl
dec
adc
mov
mov
scas
repz
mov
add
xchg
les
add
sti
ret
jns
sahf
cmp
mov
mov
mov
lods
add
arpl
sahf
jmp
aas
mov
gs
call
out
sbb
xlat
pop
mov
push
cmp
ja
push
jb
push
les
repnz
push
imul
inc
test
(bad)
mov
mov
out
push
inc
out
retf
mov
(bad)
loop
into
jle
adc
inc
jmp
dec
inc
sti
test
inc
scas
jne
cmp
sbb
stos
add
adc
fdivr
test
pop
push
push
imul
loopne
not
pop
hlt
push
xor
inc
jae
pop
cmp
xor
test
sahf
xchg
add
fwait
retf
pop
(bad)
or
div
sub
jecxz
and
xor
xchg
enter
dec
loop
mov
mov
dec
mov
(bad)
(bad)
lods
dec
dec
mov
sbb
pop
dec
mov
retf
sbb
lods
sbb
dec
repnz
mov
pop
adc
cmp
xchg
call
sbb
pop
push
imul
push
popa
repz
aam
(bad)
jb
test
cld
push
or
pop
and
jns
push
dec
add
inc
push
xchg
sbb
test
out
out
dec
cmp
and
pop
inc
repnz
jmp
lds
or
cwde
push
cmc
aas
and
sub
retf
and
push
mov
fst
inc
jmp
cmp
and
movs
jo
(bad)
out
xchg
hlt
out
fnstcw
cmps
aaa
sub
cli
sub
push
sbb
aam
cmps
xchg
cdq
lods
call
jmp
dec
in
pop
(bad)
into
cld
or
sub
rol
aas
mov
movs
xor
retf
inc
aad
cmp
inc
sub
sub
mov
scas
dec
xchg
gs
js
push
or
in
and
stos
mov
jnp
push
aaa
jmp
adc
cmp
mov
ins
xchg
aam
imul
std
cmps
cmp
xor
xor
dec
push
outs
mov
and
push
push
(bad)
in
imul
jl
mov
in
aas
pop
xchg
cld
movs
sbb
mov
xchg
or
mov
mov
push
cmps
mov
adc
aaa
cmp
adc
int
jnp
mov
xchg
call
sti
push
ficomp
xchg
mov
shl
popa
inc
xchg
dec
xor
inc
mov
mov
(bad)
into
(bad)
or
push
mov
mov
stos
xor
xor
aad
adc
and
in
shl
cmp
fnsave
sar
bndldx
jbe
lds
and
retf
push
jg
out
and
hlt
int
push
rcr
push
push
jge
adc
push
or
mul
je
or
mov
das
(bad)
rcl
mov
aaa
loop
aad
xor
ins
sbb
push
jmp
sqrtps
es
cmp
jl
mov
and
fbld
out
pop
jno
repnz
movs
aaa
inc
jmp
sub
jg
sti
jmp
sbb
xchg
pop
mov
lahf
arpl
add
lahf
add
xor
pop
iret
sbb
or
cmp
pop
scas
push
mov
(bad)
enter
pop
mov
sub
adc
push
or
and
clc
pop
cmp
push
add
shr
or
add
push
and
sbb
mov
jae
inc
ins
iret
std
adc
in
mov
je
jg
stos
fnstsw
lds
test
adc
fiadd
push
fdiv
push
(bad)
mov
and
test
pop
add
cmps
rcl
sahf
rol
bound
enter
jbe
mov
xchg
movs
dec
mov
add
test
sub
lea
or
shl
rcr
sahf
(bad)
jb
dec
pop
leave
out
enter
test
jle
lea
xchg
and
jp
sbb
out
shl
jecxz
xor
jns
mov
mov
into
mov
stos
scas
mov
pusha
xor
fsub
jbe
sub
lods
xor
aaa
push
mov
jp
mov
test
and
ss
rcr
imul
cdq
mov
jecxz
lock
cld
cld
out
add
jne
ds
fadd
mov
mov
scas
mov
jbe
mov
sti
movs
inc
stos
sub
and
fdiv
out
call
mov
inc
and
rcl
inc
xchg
in
gs
cli
arpl
mov
ja
jg
ins
out
sahf
sub
inc
mov
push
out
jg
stos
es
int
sahf
jl
jnp
cmp
out
mov
dec
inc
ror
loope
jmp
jp
rcr
jg
cld
mov
sbb
sti
jb
(bad)
call
call
data16
(bad)
and
imul
call
test
jecxz
call
sub
shl
frstor
sbb
push
repz
retf
out
lds
mov
jmp
push
nop
je
fist
mov
loope
push
cmps
jne
push
push
sub
sub
pop
pop
jmp
sbb
dec
out
cld
mov
jbe
jmp
inc
fcmovbe
pushf
and
mov
adc
jl
xchg
ficomp
ss
out
push
cld
fwait
cdq
jg
adc
sbb
call
cmp
stos
ficom
xchg
fld
stc
into
(bad)
scas
cmp
(bad)
into
cld
ret
(bad)
dec
das
fmul
xor
and
cmp
popf
call
fild
push
mov
test
jmp
dec
cmp
retf
fsubp
into
and
mov
inc
or
int
lds
pop
push
add
pusha
rol
call
mov
sbb
add
push
adc
and
fnstenv
adc
xlat
or
mov
mov
push
push
int
xchg
push
mov
test
or
(bad)
push
out
cs
mov
jnp
cmp
fiadd
retf
and
and
push
cwde
shl
or
mov
and
into
add
shl
in
or
cwde
stos
xor
pop
(bad)
mov
mov
and
in
add
push
stos
mov
test
in
icebp
lds
test
rcr
pop
and
adc
call
imul
in
imul
mov
out
(bad)
sbb
xor
mov
xchg
loope
aad
cmp
mov
clc
bound
push
scas
mov
pop
cmps
or
jmp
adc
xchg
test
sahf
cmp
sbb
and
clc
cmps
or
stos
stos
in
jnp
xlat
dec
es
out
mov
push
ror
pop
test
hlt
cmps
(bad)
push
je
popa
inc
cmps
aad
fdiv
sbb
and
repz
mov
ret
pop
or
retf
jbe
pop
mov
sub
xchg
nop
cmc
addr16
sub
stos
daa
mov
inc
daa
push
ins
hlt
or
add
jmp
outs
cmp
xchg
stc
sbb
retf
or
nop
test
leave
and
(bad)
pop
cdq
cmps
push
xor
(bad)
iret
div
jnp
pop
cmp
xchg
jne
test
clc
hlt
mov
(bad)
hlt
sub
pushf
stc
clc
or
inc
ds
imul
mov
push
add
sub
pop
xor
pop
fidivr
pop
out
cmp
and
scas
push
(bad)
sti
sbb
arpl
jmp
call
sub
test
pop
cmps
inc
shr
xchg
das
movs
bound
push
(bad)
push
mov
xchg
outs
cmp
add
pushf
call
test
loopne
arpl
test
pop
das
shl
pushf
fcomip
aas
data16
and
bound
dec
cdq
push
iret
ficomp
dec
fwait
add
rcr
mov
mov
lds
pushf
inc
dec
movs
xchg
pop
add
movs
lods
jmp
(bad)
sub
dec
aas
inc
ins
stc
cmc
push
(bad)
or
add
rcl
cmps
(bad)
dec
and
and
cmc
xchg
xchg
cs
outs
sbb
popa
nop
mov
cmps
mov
int3
cmp
popf
and
xor
adc
mov
cmps
dec
leave
jmp
pusha
jle
outs
sbb
or
sbb
mov
and
popf
ins
dec
jmp
xor
(bad)
and
jb
in
and
rcl
js
pop
fidivr
sub
test
adc
sar
cmp
inc
mov
push
push
cmp
std
lock
or
dec
mov
enter
jnp
mov
push
mov
or
xor
hlt
push
fwait
data16
(bad)
dec
sub
mov
loope
push
(bad)
or
out
xchg
(bad)
mov
jnp
loopne
inc
cs
sub
inc
arpl
out
cld
mov
movs
shr
out
or
sub
(bad)
adc
mov
xor
adc
push
fidivr
cmc
lds
xor
je
sbb
cs
sub
jmp
cmp
pop
in
mov
pop
add
out
(bad)
retf
ss
(bad)
test
mov
aam
ins
pusha
adc
push
sbb
dec
and
mov
mov
xor
sub
gs
add
in
test
repnz
jg
repnz
or
cmp
sbb
xchg
inc
addr16
and
mov
popa
sar
clc
dec
retf
call
rol
fdiv
add
and
aam
and
and
xor
in
add
(bad)
ror
outs
push
popa
jmp
adc
or
ror
std
jae
idiv
das
sahf
popf
sub
adc
mov
stos
mov
cmc
adc
stos
inc
repnz
lahf
hlt
mov
es
xor
cmc
stc
lods
push
inc
sbb
rol
push
fs
cli
(bad)
mov
jmp
mov
ror
lods
jo
and
sbb
out
cli
cmp
xchg
pop
push
in
fadd
mov
icebp
fadd
jbe
call
lahf
pop
stos
sbb
sbb
mov
inc
jecxz
pusha
neg
sbb
outs
jge
imul
mov
push
fwait
enter
inc
mov
shl
add
gs
out
sbb
ins
popa
adc
(bad)
mov
ss
loope
jae
fsub
xor
ss
out
jbe
mov
mov
mov
jae
movs
psrlw
sbb
pop
dec
test
pop
push
and
or
jns
mov
mov
sahf
xchg
cmc
sbb
mul
test
ror
sub
xchg
in
sbb
ret
ds
std
mov
loop
push
push
shl
or
inc
fisubr
mov
mov
movs
and
fmul
sti
pop
mov
mov
fmul
dec
xor
hlt
pop
push
push
cdq
out
jbe
shr
sbb
pop
adc
add
jo
inc
mov
xchg
xor
in
push
in
and
lods
inc
div
test
nop
sbb
xor
ins
stos
(bad)
push
shl
jge
ds
arpl
in
mov
sub
xchg
mov
icebp
les
sub
popf
and
cmp
push
push
fnsave
xor
add
movs
push
xor
scas
div
inc
out
bound
loope
mov
int3
push
cwde
push
(bad)
sub
adc
js
and
cmp
mov
cmp
mov
(bad)
ss
or
cwde
outs
sbb
mov
cmp
mov
mov
xchg
and
enter
fnstsw
adc
mov
data16
fnstenv
push
mov
adc
(bad)
sub
fwait
xlat
push
jmp
jp
fiadd
sub
ret
dec
mov
loopne
xchg
leave
stc
call
test
adc
fisubr
cdq
sbb
dec
adc
retf
popa
imul
sub
inc
loope
fistp
push
stc
dec
push
in
int3
lea
repnz
jmp
es
add
test
cmp
mov
lea
or
jno
loop
out
inc
mov
jle
xchg
aas
sbb
stc
mov
dec
rol
rol
add
sbb
mov
imul
pop
sahf
mov
loope
sub
fdivp
or
test
jecxz
int3
dec
rcr
and
popa
gs
dec
mov
lea
or
pop
jecxz
add
into
lahf
adc
into
mov
push
ins
outs
aas
xchg
ins
movs
test
cli
(bad)
(bad)
push
jge
or
shr
addr16
(bad)
cmp
jns
cmps
and
sbb
jbe
enter
xchg
movs
inc
xchg
inc
mov
sub
adc
mov
addr16
ins
fcom
in
jmp
das
push
imul
push
push
jecxz
and
xlat
xor
loopne
xchg
add
add
cwde
sub
dec
push
(bad)
xor
add
std
(bad)
mov
inc
loope
je
push
adc
jmp
push
outs
sub
mov
ficomp
int3
mov
cld
int3
test
xlat
jbe
(bad)
adc
xor
cmp
mov
ret
enter
repnz
dec
cld
jb
(bad)
mov
jg
jnp
cmps
(bad)
inc
int3
cmp
mov
or
mov
fs
dec
jb
mov
or
xor
add
enter
and
mov
fnstenv
ret
aas
fld
dec
daa
ds
pop
mov
push
cmps
call
mov
in
std
loopne
mov
jg
seta
(bad)
(bad)
dec
push
mov
inc
test
sub
xor
cmp
push
pop
sbb
frstor
fld
mov
div
pop
leave
sbb
call
adc
adc
adc
call
xor
out
ret
inc
dec
or
mov
sbb
mov
rcl
shr
sbb
test
ds
es
mov
int3
or
mov
cwde
add
push
dec
or
sbb
imul
or
mov
push
aas
mov
loope
jmp
sbb
retf
shl
jmp
jecxz
and
or
push
mul
adc
jecxz
jmp
mov
push
push
mov
jecxz
hlt
dec
das
push
jle
les
push
aam
call
ins
xchg
popf
loope
add
das
jne
outs
and
in
jg
jg
bound
and
mov
ds
and
inc
xchg
jle
es
call
movs
repz
pop
stos
push
add
adc
push
div
mov
xchg
jp
jl
jne
push
out
push
sbb
jo
call
pop
ins
dec
loope
push
sub
jg
dec
pop
scas
inc
dec
or
add
repz
fist
in
leave
sub
fbstp
sbb
out
xchg
shl
out
push
xchg
cmps
dec
in
fs
neg
fisub
or
out
sub
or
jl
pusha
push
dec
clc
cmps
xor
mov
adc
fdivr
and
sbb
popf
enter
xchg
adc
sbb
cld
scas
xor
imul
jne
add
xchg
xlat
jp
in
addr16
jo
xchg
inc
inc
inc
test
into
push
push
mov
aas
mov
inc
adc
push
scas
not
dec
mov
pop
popf
jnp
xchg
add
or
jl
xor
stos
inc
inc
stos
pop
call
push
aaa
fld
test
imul
lea
pop
in
push
mov
je
jecxz
pop
iret
pop
inc
push
cmp
or
test
mov
pushf
pop
addr16
mov
cwde
stos
icebp
xchg
push
cmp
adc
ins
bound
mov
xchg
enter
xor
xchg
adc
sbb
and
sbb
out
test
ins
ss
cmp
frstor
mov
xor
sbb
not
mov
inc
or
xchg
push
push
xchg
out
daa
aad
fist
nop
rol
push
popf
shl
sbb
lds
cmps
cmp
sldt
mov
js
inc
jo
jns
mov
les
repz
pushf
(bad)
repnz
mov
dec
das
fld
mov
imul
repz
fucomi
add
repz
jne
loope
dec
lods
test
repnz
fucomip
pop
fbstp
mov
mov
or
mov
and
add
iret
inc
das
ja
jle
push
or
data16
jl
aad
xchg
ret
out
mov
out
je
pop
imul
movups
out
pop
clc
sbb
pop
and
mov
pop
(bad)
enter
jne
sahf
out
(bad)
pop
sbb
cmp
xor
cmp
pop
cmp
jo
add
xchg
push
dec
arpl
sbb
dec
rcl
adc
inc
ja
lods
mov
in
test
enter
addr16
dec
jnp
aas
jns
or
cli
sbb
dec
fmul
or
xor
test
pop
das
and
sbb
ret
not
loope
jle
add
hlt
add
in
inc
sbb
push
mov
das
arpl
outs
pop
dec
shr
fcomp
mov
mov
(bad)
call
(bad)
push
fldcw
xor
xchg
cmp
adc
aam
popf
and
and
xchg
inc
add
inc
xor
daa
mov
repz
stc
emms
popf
pop
rcl
inc
ror
jmp
nop
mov
and
fdivr
int3
sbb
ret
inc
push
mov
bound
sbb
dec
mov
mov
cmp
jge
xchg
gs
movs
pop
mov
dec
mov
call
xor
jecxz
and
xchg
sub
fimul
loop
arpl
repnz
mov
shr
jnp
mul
adc
cld
ja
pushf
dec
(bad)
xor
pushf
loopne
aaa
mov
dec
or
rcr
push
jge
scas
popf
repz
push
ror
push
das
retf
mov
pop
rol
xchg
lea
adc
and
mov
sub
cmp
fbld
cdq
jo
sub
dec
xchg
push
in
adc
shl
icebp
add
(bad)
ror
cmps
mov
add
or
lods
mov
xor
dec
fcomp
inc
push
lahf
adc
mov
adc
cmps
movs
pop
xor
enter
arpl
add
hlt
mov
inc
dec
fisubr
sub
imul
push
sub
repz
cmp
xchg
enter
call
pop
push
sub
sti
sub
mov
or
les
imul
inc
xlat
jl
sub
mov
fdivrp
push
jmp
sub
enter
das
pushf
dec
adc
loop
adc
jmp
xchg
push
dec
adc
pop
sbb
pop
or
xchg
inc
mov
ins
sbb
or
cwde
cdq
inc
scas
adc
or
ins
cmp
in
or
fsubr
adc
dec
jmp
iret
jle
jo
xor
sbb
push
dec
mov
fwait
jae
or
shl
out
push
js
and
aad
vphaddwq
jns
inc
jns
jae
stos
mov
movs
shr
jne
mov
adc
jl
(bad)
in
and
lahf
sub
or
jge
inc
or
imul
jg
call
add
xor
push
cmp
mov
(bad)
mov
jmp
pop
sbb
int
mov
add
arpl
adc
fnsave
mov
adc
add
add
xchg
or
mov
(bad)
hlt
cmps
or
lea
hlt
pushf
addr16
das
pop
sbb
stc
add
inc
push
adc
cmp
dec
pop
cmp
and
inc
out
xchg
xchg
mov
jae
dec
lods
inc
push
dec
dec
push
and
ins
imul
sbb
push
sub
test
bound
cs
cmc
and
inc
xor
ret
imul
int
mov
add
cli
mov
push
stc
push
nop
pop
mov
push
daa
ins
cdq
call
cmp
push
test
sub
mov
lds
fdivr
gs
in
sub
add
adc
das
pop
sbb
cmps
jb
(bad)
and
shr
or
stos
adc
jbe
xchg
inc
out
pop
aas
out
mov
and
jecxz
cs
inc
dec
adc
or
les
pop
sbb
mov
iret
push
mov
mov
mov
ds
cwde
les
or
xor
and
rcr
cmps
adc
in
call
sbb
push
mov
cmp
ds
lahf
xchg
xchg
je
leave
jmp
adc
dec
arpl
gs
inc
xchg
xchg
fcom
imul
add
mov
int3
ret
add
xchg
or
xchg
mov
movs
jmp
rol
nop
outs
(bad)
(bad)
push
xor
sar
add
adc
pusha
addr16
cmp
ret
outs
xor
sub
ss
push
retf
retf
inc
xchg
ficom
in
pop
inc
inc
pop
or
sub
cld
jne
stos
add
jge
adc
adc
mov
jns
rcl
js
mov
(bad)
xor
mov
xchg
adc
mov
es
scas
inc
cmp
or
cmc
dec
pop
mov
adc
mov
mov
jmp
das
or
ss
pop
xor
inc
jmp
cld
add
retf
jbe
sbb
push
mov
fdiv
xchg
pop
(bad)
sub
jl
aaa
cmps
aad
pop
or
(bad)
push
cmps
cmps
add
in
shl
scas
mov
sahf
sahf
inc
mov
rol
adc
ret
cmp
je
enter
es
je
fld
mov
dec
lds
mov
rcl
mov
mov
mov
jb
jne
or
cwde
mov
sub
mov
pcmpeqw
adc
fdivr
jle
ret
gs
pop
mov
in
cdq
ins
cmp
pop
mov
xchg
and
or
cmp
idiv
rcr
sub
xor
ret
add
mov
adc
movs
(bad)
mov
jmp
jmp
sbb
(bad)
mov
or
stos
sub
leave
adc
cli
xchg
(bad)
mov
xchg
sahf
ret
loope
adc
push
xor
call
jmp
popf
or
sbb
mov
cwde
add
enter
mov
or
sub
mov
xchg
out
dec
jecxz
jo
or
jmp
sub
add
mov
dec
adc
outs
mov
ins
mov
xor
cmps
retf
call
(bad)
pop
inc
jge
xor
retf
mov
adc
aas
jmp
shl
mov
leave
add
mov
pop
rcr
inc
mov
dec
outs
jmp
(bad)
aas
test
aad
imul
fidivr
ins
ins
out
icebp
mov
mov
enter
lea
inc
pop
add
cmps
mov
mov
adc
fst
mov
loope
push
sbb
nop
aam
loopne
xchg
adc
jge
mov
inc
je
jo
cvttps2pi
pushf
test
adc
scas
xchg
mov
cld
jmp
out
xor
inc
leave
and
mov
iret
adc
mov
mov
ins
mov
mov
cmp
es
je
mov
lock
fnstsw
xchg
or
aaa
test
in
cmp
mov
fadd
cli
pop
ja
push
sub
inc
dec
adc
push
xor
xor
rcr
xor
add
mov
dec
imul
call
in
or
mov
cmp
xlat
fcmovnu
xor
aaa
sub
sbb
sub
xchg
cld
pop
sbb
cmp
jns
out
out
out
in
adc
mov
cmp
and
sbb
addr16
dec
repz
ja
push
pop
mov
mov
xchg
push
and
mov
or
ins
sbb
mov
std
cmp
retf
mov
or
pop
xchg
cmp
lds
scas
pop
mov
(bad)
push
and
push
and
add
dec
jo
test
loope
cmp
sbb
imul
fucomi
adc
addr16
cmp
or
out
ror
mov
ins
cmp
xchg
dec
rcl
pop
and
sbb
or
fnstsw
jp
xor
adc
popa
sub
outs
mov
jge
sbb
jnp
int3
fcmovu
aas
xchg
cmp
or
or
das
aaa
sbb
pop
frstor
(bad)
xchg
stos
jmp
enter
outs
cmp
icebp
pop
jno
xor
sub
and
mov
add
sub
push
sbb
ins
div
popf
ror
pushf
adc
mov
aas
jg
cmp
int
pop
mov
inc
ja
adc
pop
sar
loope
call
xchg
jmp
pusha
inc
ret
ss
mov
pop
sbb
movs
js
xchg
pop
push
test
pop
loop
dec
in
stos
sbb
fldenv
loope
or
nop
sahf
es
ins
dec
sbb
gs
inc
ret
shl
pop
pop
in
jp
pop
cmp
daa
(bad)
mov
fisttp
pusha
mov
mov
push
and
imul
jno
push
sub
push
retf
ja
push
mov
xor
push
ins
or
dec
enter
in
cli
mov
aad
mov
dec
dec
cdq
dec
jne
or
xor
stc
mov
daa
leave
jo
add
and
jge
loope
sar
add
stos
cs
inc
jo
js
sti
and
push
mov
fist
cmps
ror
xchg
mov
test
(bad)
jp
pop
repnz
inc
jae
punpckhwd
lahf
neg
pop
dec
cdq
push
and
inc
out
fiadd
cmp
adc
mov
out
jl
les
daa
push
jp
test
je
icebp
inc
pop
rcl
rol
aam
jmp
dec
and
mov
or
xor
dec
shl
adc
adc
stos
(bad)
cmp
pop
pop
ins
pushf
mov
mov
mov
sahf
mov
je
xchg
(bad)
push
ror
cmp
sub
rcr
mov
mov
daa
dec
(bad)
pop
cmc
sbb
iret
inc
ret
mov
out
iret
enter
ss
inc
cmp
(bad)
loop
icebp
enter
ins
pop
and
pop
inc
(bad)
icebp
mov
add
nop
sub
movs
sbb
test
push
mov
das
add
mov
pop
test
int3
out
cmps
loop
xchg
dec
ja
stc
fwait
arpl
sti
push
push
jb
shl
inc
adc
cmp
push
lea
stc
mov
cmps
jae
scas
mov
mov
push
mov
vpmaxub
arpl
inc
jno
adc
xchg
jbe
outs
xor
dec
mov
push
inc
daa
(bad)
cmps
je
int
cmps
dec
xor
xor
retf
fsub
repz
shr
pop
pop
das
outs
outs
lods
mov
push
or
pop
shr
ror
adc
in
(bad)
fidiv
sub
xlat
or
stos
pop
mov
rcl
mov
mov
rcr
jle
stos
nop
adc
retf
adc
fimul
imul
xor
adc
xchg
je
sub
sbb
jae
push
jno
retf
mov
jmp
daa
shr
test
(bad)
out
mov
jae
cdq
xor
mov
not
cmp
pop
pop
mov
push
stc
sub
ss
xchg
in
fisttp
jmp
test
adc
sub
call
and
inc
cmp
jns
cs
pop
jle
mov
cmp
sub
loop
jae
jge
bound
stos
xchg
pop
jno
push
mov
jnp
cmp
pop
mov
xchg
(bad)
pop
js
les
icebp
sub
xchg
push
loope
icebp
sbb
fistp
pop
adc
push
mov
loope
leave
js
jp
adc
and
lds
push
imul
movs
aad
xor
(bad)
pusha
sahf
mov
int
in
or
add
loopne
mov
ret
adc
jmp
call
lds
jmp
pop
ds
mov
sbb
lock
cmp
daa
push
je
cdq
adc
rol
mov
fsubp
xchg
call
mov
(bad)
mov
sub
adc
ds
pop
push
cli
cmp
add
xor
(bad)
and
sub
into
and
pop
mov
cmps
out
push
or
movlps
in
and
cli
jno
(bad)
push
aaa
or
pop
ins
push
jne
es
(bad)
mov
fbstp
inc
je
loop
stos
fcom
or
in
aaa
dec
mov
out
shr
push
mov
ss
sub
sub
ss
push
movs
xchg
imul
shr
and
inc
(bad)
cmp
cdq
push
or
sbb
ret
mov
fisttp
sbb
mov
jnp
add
dec
mov
lods
mov
push
cmc
jmp
and
push
cmp
loope
neg
into
xor
inc
push
into
imul
cld
mov
(bad)
fisubr
xchg
mov
daa
jns
push
jp
sbb
pop
mov
pushf
outs
lods
mov
fcmove
jns
mov
int
push
retf
and
enter
(bad)
jmp
sub
inc
call
fs
lea
(bad)
enter
jns
mov
xor
inc
push
(bad)
mov
stc
lock
adc
bound
repnz
jp
mov
inc
xor
xor
mov
outs
js
sub
jnp
jmp
jnp
imul
jmp
add
mov
call
lods
fcomp
retf
push
xor
bnd
mov
xchg
repnz
sub
sub
fisubr
aad
xchg
sub
mov
cmps
adc
and
mov
pop
pop
mov
push
add
pushf
mov
add
imul
xor
je
mov
bound
or
mov
pop
add
hlt
sti
sub
dec
sub
xor
test
pop
in
sbb
or
out
lahf
jno
rol
add
push
call
pop
mov
adc
js
sub
imul
cmps
sub
pop
push
(bad)
out
icebp
jl
push
adc
aaa
jb
and
sbb
pop
xor
int
inc
xor
pop
push
sti
push
push
rol
and
sahf
sub
and
jne
mov
popa
repnz
scas
rcr
cs
aad
jne
mov
jb
mov
in
or
jno
sahf
jne
pop
test
inc
inc
mov
stos
neg
jbe
or
xor
mov
or
add
push
mov
pop
js
sar
and
aas
icebp
out
mov
adc
xlat
hlt
loope
jo
int
push
scas
sub
enter
in
sbb
mov
mov
fcomp
and
jmp
sub
ds
pusha
xchg
nop
enter
lock
or
fs
lea
push
or
iret
repnz
js
adc
dec
scas
or
jmp
xor
ja
pusha
mov
(bad)
or
sbb
into
and
out
cmp
test
sbb
jns
(bad)
mov
cld
jo
jns
in
push
pusha
das
fldenv
shr
mov
loope
stc
sub
mov
mov
and
(bad)
fs
and
popf
or
pop
fidivr
imul
adc
scas
je
fwait
jmp
(bad)
stc
fwait
out
test
push
outs
pmaddwd
pop
jnp
das
pop
mov
xchg
push
hlt
mov
ins
shl
xor
gs
or
pop
adc
popf
stos
ds
mov
add
add
outs
add
push
jne
sub
addr16
popf
in
ins
in
into
leave
adc
enter
test
imul
addr16
push
xlat
mov
mov
jecxz
push
xchg
push
cmp
nop
adc
dec
loope
mov
push
cmp
or
mov
jp
je
xor
pop
arpl
call
stc
loop
dec
shl
in
mov
mov
ret
mov
add
retf
mov
cmp
mov
subps
movs
sub
dec
mov
jb
ins
inc
je
cmp
clc
sub
in
adc
and
pop
xlat
sub
jg
and
cmp
daa
push
mov
retf
add
and
dec
adc
jp
sub
inc
lods
dec
and
imul
test
push
leave
imul
pop
retf
lea
xchg
push
shl
(bad)
adc
ret
mov
xor
xor
fisub
jmp
cdq
mov
leave
xor
(bad)
push
jp
fwait
mov
add
pop
aam
(bad)
movs
jo
ds
retf
stos
mov
mov
nop
(bad)
lods
mov
int
aaa
repnz
sbb
cvtdq2ps
sub
jle
pop
inc
sti
sub
push
add
adc
and
fiadd
call
mov
gs
mov
test
dec
ss
xor
mov
fs
jo
mov
arpl
inc
repz
jns
cmp
xchg
push
pop
ror
je
in
adc
sti
sbb
lods
(bad)
or
sahf
ja
mov
sub
mov
dec
and
ret
out
mov
les
and
(bad)
out
outs
and
mov
sub
mov
je
lahf
mov
psubusw
push
inc
mov
das
inc
cmp
mov
or
(bad)
inc
dec
and
dec
cmp
add
jmp
adc
sub
cmps
sub
mov
sbb
or
test
jmp
pop
arpl
xor
psraw
mov
add
aaa
int
clc
push
pop
and
xchg
into
in
and
ja
jo
fld
cs
cdq
imul
mov
pop
or
movs
mov
mov
fsubr
and
mov
xor
ret
push
stos
test
and
aam
or
cmps
and
xchg
push
mov
retf
(bad)
xor
mov
arpl
dec
adc
inc
inc
lahf
enter
jecxz
daa
outs
hlt
ds
pop
mov
retfw
arpl
push
jg
fldenv
mov
dec
xor
fbstp
mov
adc
test
and
js
and
add
mov
push
(bad)
lea
mov
je
js
fwait
cwde
loop
pop
cld
es
jmp
mov
hlt
inc
(bad)
fst
sub
or
lahf
adc
add
add
clc
mov
sbb
popa
ins
sbb
repz
mov
and
or
js
cdq
cmp
inc
or
dec
addr16
lahf
aad
push
lds
mov
xor
inc
popf
shr
dec
movs
jo
sub
loop
pusha
lods
mov
jo
mov
aad
pop
int3
mov
or
scas
cmp
xchg
test
jnp
call
pop
call
paddq
jecxz
out
mov
cs
fs
cwde
fistp
xchg
mov
aam
add
and
dec
enter
inc
mov
mov
mov
(bad)
lds
sbb
push
repz
xchg
jae
fcmovb
popa
imul
(bad)
or
cmp
push
push
push
cld
aad
in
aas
mov
stos
imul
rcl
mov
out
pop
mov
add
outs
add
(bad)
adc
inc
loop
jg
inc
fistp
adc
shl
adc
jnp
adc
push
sti
add
test
mov
(bad)
outs
pop
mov
adc
mov
cmp
jnp
cmp
ret
pop
push
rcr
sub
out
cmp
xchg
cs
je
outs
fmul
cwde
je
xor
push
mov
dec
mov
cmp
adc
pop
pop
mov
movs
mov
pop
jg
xchg
xchg
jl
out
clc
jb
fwait
add
dec
out
mov
mov
out
rol
pop
cmp
inc
movs
and
bound
lahf
sub
dec
xchg
fdivr
pop
dec
dec
inc
clc
ds
rol
sbb
ret
and
jno
xor
adc
mov
call
mov
push
inc
pop
outs
test
mov
push
jmp
mov
pop
jo
jno
xor
out
cmp
loopne
in
clc
ret
les
mov
jmp
fisubr
sbb
mov
add
and
add
fsubrp
es
imul
fist
or
sub
div
int3
lock
int3
mov
mov
xchg
out
xor
xor
imul
in
call
enter
jnp
not
loope
or
in
mov
sbb
xor
lods
les
inc
shl
push
stc
xor
or
rol
adc
add
fild
lods
mov
out
or
adc
sub
(bad)
fdivr
out
and
mov
or
xchg
push
lock
sbb
imul
out
mov
mov
adc
ins
nop
xchg
enter
inc
(bad)
jb
or
pop
(bad)
popf
leave
lahf
outs
(bad)
inc
dec
ins
pop
jecxz
jp
arpl
pushf
bswap
push
mov
inc
fxch
ins
xor
mov
outs
xor
div
dec
daa
sub
fcmove
cs
enter
xchg
adc
mov
and
gs
mov
imul
(bad)
dec
mov
mov
add
movs
dec
inc
(bad)
fucomp
outs
movs
ret
jne
and
ins
inc
ins
pop
add
mov
and
call
aam
xor
(bad)
call
sbb
rcr
into
sbb
push
mov
sub
xor
cmp
mov
ins
xchg
xor
mov
or
rep
(bad)
mov
jg
(bad)
nop
or
int3
sbb
xchg
inc
add
movs
mov
mov
fsub
stos
or
int
mov
inc
jns
sahf
add
repz
imul
jmp
jb
pop
xor
mov
jbe
sub
mov
jne
(bad)
jmp
jp
push
rcr
or
or
pop
or
pushf
aam
fild
inc
cld
pushf
jae
or
mov
jl
sub
das
push
retf
nop
pop
inc
lds
leave
arpl
pop
dec
ret
jmp
xchg
call
inc
inc
in
and
xchg
(bad)
div
jl
clc
sub
retf
cmp
psrlw
jle
sbb
out
sbb
ror
push
retf
mov
xor
fadd
inc
jmp
mov
dec
ds
pop
bound
fld
movs
shr
repnz
addr16
inc
or
xchg
mov
mov
xchg
inc
cmps
or
sbb
sbb
mov
ins
cmp
aam
scas
and
or
cs
popf
div
cmp
icebp
pop
clc
sti
test
std
(bad)
sub
rol
sub
sti
pop
sahf
arpl
sub
jg
test
dec
mov
and
jmp
sbb
lahf
inc
adc
arpl
shr
xor
lods
xor
sub
cld
int
fstp
and
sub
mov
add
ss
xor
lock
add
and
loop
pop
into
scas
shl
mov
pushf
ss
in
adc
fcomip
xchg
mov
push
or
adc
xchg
enter
leave
cmp
(bad)
test
push
int3
ret
jl
mov
movs
jb
mov
xchg
mov
imul
dec
retf
sub
enter
sbb
push
sbb
sti
xchg
add
or
xchg
lods
in
fs
mov
jecxz
mov
cmp
scas
jne
xchg
in
(bad)
cmp
scas
cmp
cs
sub
pop
and
mov
dec
mov
mov
mov
jbe
in
cmp
shl
adc
out
(bad)
rol
loope
outs
jo
sar
cli
and
jp
icebp
fwait
out
mov
xchg
and
sub
cli
or
or
xor
and
in
out
mov
add
inc
call
std
(bad)
fstp
loopne
ds
jecxz
ins
fbstp
or
aaa
(bad)
in
data16
mov
jnp
stos
mov
loope
push
aad
jmp
or
or
xchg
jge
and
lock
mov
dec
push
into
daa
mov
aaa
mov
push
int3
mov
inc
dec
cmps
inc
xchg
mov
aas
and
mov
fwait
cs
mov
or
mov
fstp
call
fidivr
xlat
(bad)
push
pop
adc
and
mov
jecxz
ja
sti
xor
ret
jae
lods
js
into
aas
adc
hlt
repz
pop
fsub
aaa
in
cmps
dec
cmp
cmp
fwait
and
mov
adc
xchg
dec
(bad)
popf
inc
fbld
cmps
add
out
sub
cmp
mov
cmp
cmp
ret
pop
mov
sti
inc
jle
fmul
fiadd
xor
sahf
cdq
cs
adc
cld
xchg
and
mov
or
inc
sub
aas
xchg
push
inc
pop
mov
into
ins
xchg
jno
shr
push
sub
inc
push
adc
je
cli
leave
jo
into
es
clc
xchg
sbb
adc
xchg
mov
push
mov
ins
mov
cmp
mov
test
add
inc
or
fs
xor
sbb
shl
ins
or
push
movs
inc
add
or
dec
pop
fs
retf
idiv
pop
inc
mov
scas
dec
pmullw
shl
pop
xchg
lods
(bad)
scas
xlat
arpl
pop
stos
lock
pushf
xchg
mov
xchg
mov
cli
call
lahf
mov
rcr
push
mov
and
dec
jecxz
xchg
cmp
mov
xchg
mov
call
add
aas
and
in
sub
out
cmp
mov
mov
dec
clc
push
jp
xchg
xlat
das
out
push
loopne
pop
xor
xor
dec
cmp
and
int3
jl
mov
repz
fldcw
jns
shr
mov
mov
sar
adc
mov
push
inc
js
daa
push
mul
sbb
cmp
int3
out
xchg
inc
fcmovbe
ds
fnstsw
xchg
movs
push
mov
mov
push
stc
das
sbb
dec
mov
mov
mov
adc
aad
or
ret
xchg
xchg
add
rcr
or
cmp
mov
pop
iret
ds
les
mov
push
jbe
add
sbb
adc
adc
xor
mov
(bad)
pop
pop
inc
adc
stc
in
adc
jge
sti
add
push
call
ret
or
call
pop
push
mov
neg
sar
loop
fild
fs
or
shl
sahf
jg
test
jae
jmp
push
jo
imul
jno
scas
sub
test
push
jae
ret
ja
test
adc
push
sub
in
lahf
mov
retf
mov
mov
or
jns
es
test
push
mov
daa
pusha
imul
cs
sti
pop
xchg
jp
inc
je
and
arpl
cmp
cmp
or
xor
jp
(bad)
(bad)
or
repnz
mov
sub
mov
fnstenv
(bad)
ss
dec
pop
cwde
dec
jne
xchg
mov
or
mov
cs
das
inc
cmps
mov
jl
in
sti
(bad)
mov
xlat
mov
cmps
dec
mov
mov
(bad)
js
cmp
test
lock
stc
dec
dec
and
shr
inc
mov
popa
aaa
sar
push
pop
inc
add
ret
nop
loopne
push
sub
push
mov
je
adc
jle
idiv
movs
pop
aad
add
mov
xlat
push
out
nop
js
mov
shr
xchg
fwait
mov
sahf
dec
xlat
sar
xor
mov
mov
leave
mov
imul
adc
mov
mov
jecxz
loop
call
mov
pop
(bad)
int
cld
jns
imul
stos
adc
or
stc
jge
fyl2xp1
aad
fmul
and
test
clc
ret
into
lahf
ret
xor
arpl
adc
sbb
mov
jne
cli
mov
into
cmp
and
lds
jmp
sub
ror
cmp
or
scas
ja
shl
fadd
shl
vcvtss2si
rcl
(bad)
das
cdq
sar
sahf
jmp
sbb
test
inc
int3
and
leave
mov
fnstenv
ss
jno
sub
mov
mov
js
out
fnsetpm(287
mov
push
xchg
jb
dec
jmp
jle
aad
xor
jno
in
cmp
xchg
cmp
xchg
or
and
stos
pop
ins
rcl
int
ja
xchg
adc
call
retf
ds
fs
xchg
test
mov
stos
call
adc
mov
mov
jne
addr16
inc
cs
jl
adc
hlt
push
(bad)
push
les
scas
xchg
adc
fwait
(bad)
lea
xlat
mov
mov
test
aas
lods
xlat
inc
pop
retf
mov
xchg
iret
fnstsw
pop
clc
and
cmp
mov
call
cmps
bound
jnp
cmp
pop
cwde
fsubr
cs
sbb
jge
shr
popa
je
arpl
test
pop
xor
pushf
(bad)
mov
mov
mov
lods
(bad)
fadd
outs
popa
sub
and
rcl
aaa
xlat
adc
jae
mov
mov
adc
loop
cmp
and
scas
fwait
pushf
cwde
pop
hlt
aas
xor
ins
mov
out
jmp
rol
xor
ror
pop
cmp
mov
cmps
pusha
shl
scas
xchg
data16
iret
je
mov
std
int
call
push
mov
out
or
out
(bad)
call
add
scas
out
pop
adc
adc
push
mov
xor
pop
mov
test
jns
imul
mov
push
mov
sbb
(bad)
adc
pop
mov
aam
adc
rol
or
aaa
mov
fisub
inc
out
jge
xor
mov
(bad)
int
shl
sub
loopne
lods
push
cmc
pusha
mov
push
das
mov
cld
in
add
test
pop
jns
xchg
sbb
ss
ror
xchg
xor
gs
xchg
pop
aad
sbb
shr
jmp
ss
ss
add
dec
or
aaa
inc
pop
shl
mov
mov
push
sahf
test
jns
daa
jle
std
pop
cmp
call
jmp
xchg
adc
add
cmp
popf
fwait
mov
(bad)
in
gs
inc
aad
mov
push
aas
add
into
and
aas
sbb
ret
es
js
sub
mov
dec
mov
retf
push
shl
mov
repnz
and
stos
int
mov
xchg
cld
fldcw
mov
add
outs
adc
push
inc
jecxz
mov
push
dec
push
ret
adc
dec
mov
xor
pop
or
inc
cwde
mov
pop
cmc
stc
xchg
jno
or
dec
and
lahf
or
cmp
mov
dec
mov
mov
les
mov
pop
or
inc
fcmovbe
lock
rcl
jae
push
cmp
fsub
inc
sbb
jne
int3
and
in
push
mov
ror
jae
pushf
adc
add
mov
add
push
or
lods
dec
dec
xchg
sahf
addr16
aam
and
fdivrp
sub
(bad)
fmul
mov
aaa
xor
into
les
retf
or
push
inc
fisttp
adc
shl
fs
or
mov
lods
or
pop
lea
outs
ins
shl
xlat
mov
sub
adc
fcomp
gs
pop
or
mov
push
push
enter
dec
fwait
scas
mov
fucomip
call
cmp
mov
(bad)
es
xor
adc
jnp
shl
sahf
sahf
pop
test
sub
out
dec
jno
xor
test
xor
mov
stos
push
sbb
push
cmp
cmps
fs
jl
inc
sub
outs
jecxz
(bad)
jae
scas
push
out
(bad)
fisubr
sub
sbb
add
adc
add
sub
into
pop
mov
adc
cmp
arpl
in
fisttp
cs
pop
lods
jno
sub
retf
test
sub
in
(bad)
cmp
out
pop
or
popf
arpl
mov
test
dec
mov
cmp
add
cmc
addr16
cmp
dec
popf
shl
and
jae
cld
popf
clc
fcom
gs
sub
or
jecxz
std
xor
mov
xor
inc
sti
stos
pop
ret
(bad)
mov
jge
stos
(bad)
lea
sbb
dec
add
int
in
xchg
xchg
stos
fsubr
fisubr
mov
sub
repz
cmps
mul
mov
lahf
mov
adc
xor
adc
mov
(bad)
cmp
dec
movs
icebp
into
retf
mov
dec
mov
cmps
cmps
fdiv
cmp
out
(bad)
xchg
shl
ja
fs
je
or
(bad)
daa
ror
cmp
mov
unpcklps
test
pop
jmp
inc
ret
int
xchg
or
xor
cmps
(bad)
aad
shr
int
push
cmps
and
push
pop
scas
cmps
or
push
and
sbb
outs
pusha
xchg
sub
adc
or
leave
push
in
test
jns
mov
sbb
jnp
icebp
push
sbb
inc
and
xchg
lds
pop
adc
cli
inc
jno
or
imul
popf
shr
inc
pop
aas
(bad)
jno
lock
leave
mov
nop
xor
mov
sub
aaa
xor
dec
fidivr
ror
out
mov
mov
fiadd
mov
lods
mov
lea
ds
outs
aad
movs
daa
popa
cs
mov
or
out
pop
ror
stos
xchg
in
push
cld
cmc
mov
push
xor
jno
inc
repz
xor
test
push
xor
mov
ror
inc
mov
cmp
add
mov
fiadd
add
leave
movs
cwde
loop
gs
sti
enter
int3
sbb
cdq
ret
test
and
gs
and
int
aaa
es
inc
mov
or
jg
push
jge
jge
fprem
inc
(bad)
fild
xor
and
call
and
dec
aad
adc
cmp
xchg
in
and
push
adc
xchg
sbb
clc
or
jmp
mov
or
(bad)
out
lods
xor
push
dec
jo
hlt
test
hlt
in
adc
ficomp
or
test
ins
outs
lods
ins
push
pop
nop
push
out
pop
dec
cmp
cs
lahf
jns
mov
jg
dec
call
rol
shl
scas
mov
outs
loope
icebp
clc
jns
jbe
cmp
mov
das
push
inc
jecxz
imul
fs
cmps
sub
cli
xchg
(bad)
xor
jno
gs
rol
jl
dec
cmp
or
pop
fs
jno
and
push
imul
push
jp
pop
scas
js
shr
mov
pop
or
aam
mov
or
pop
je
inc
mov
daa
pop
pop
sbb
bound
xchg
mov
xor
sub
pop
or
pop
xor
sub
scas
add
cmp
loopne
repnz
jmp
shr
push
(bad)
sbb
add
mov
mov
cld
in
retf
sub
fwait
sub
xchg
retf
inc
adc
cmp
add
push
and
cs
(bad)
xchg
or
jg
push
adc
lahf
adc
add
push
mov
push
xchg
fistp
pop
dec
stc
pop
cmp
or
add
leave
outs
fild
jb
jmp
xchg
mov
in
sub
in
xlat
push
add
xchg
ds
ret
cdq
in
sub
sub
loopne
not
scas
mov
xchg
cld
push
inc
stos
out
dec
push
xor
xchg
or
fisub
sbb
adc
jae
movs
push
pop
fimul
push
or
cmp
add
xor
jl
xor
ds
dec
iret
add
loope
enter
dec
shl
xchg
xchg
lock
hlt
fsub
jg
push
xchg
dec
cmps
xor
cli
fld
ficom
mov
arpl
mov
push
inc
shr
push
jle
xor
add
cmc
pushf
adc
jmp
leave
jl
stos
outs
pop
xchg
push
dec
or
push
sbb
jae
inc
push
pop
icebp
pushf
pop
js
das
dec
or
sbb
test
out
stos
add
lods
mov
sub
(bad)
das
popa
(bad)
out
(bad)
mov
mov
xor
add
(bad)
sbb
test
mov
fs
into
outs
fst
les
push
mov
mov
push
jl
repz
jns
mov
addr16
mov
outs
repz
xchg
fstp
xchg
ja
and
inc
aaa
(bad)
sbb
cmp
sub
push
gs
sub
addr16
jbe
enter
add
ins
push
cmps
mov
outs
sub
les
sbb
icebp
test
jle
mov
test
sar
or
(bad)
pop
pop
mov
jno
jle
inc
stc
mov
fsubr
mov
test
lds
and
loopne
data16
jmp
add
jle
add
mov
push
popa
test
mov
sti
pushf
and
scas
sub
in
add
and
push
xor
sbb
add
and
ror
push
sub
pop
add
sbb
xor
loopne
or
pop
retf
stos
pop
push
jmp
cli
std
mov
sar
gs
loopne
(bad)
push
ficomp
mov
or
in
aaa
imul
pop
mov
or
push
mov
inc
mov
mov
xor
iret
dec
pusha
cmps
add
nop
fbstp
and
and
test
jmp
push
(bad)
(bad)
int3
and
push
cmp
pushf
lods
cmp
cmp
ret
movs
jns
sbb
js
jno
xchg
or
clc
mov
or
pop
adc
mov
jmp
mov
gs
cmp
shl
adc
jne
or
aam
stos
outs
aas
adc
bnd
stos
sbb
sar
jns
xchg
imul
cli
cmp
fcmovu
movs
mov
aad
cmp
nop
inc
jo
test
sbb
stos
pop
fisub
pusha
sbb
test
dec
je
jbe
or
loopne
jno
imul
das
fist
pop
push
mov
popa
repz
mov
push
mov
and
xchg
xor
mov
ret
pop
iret
sub
mov
dec
inc
cmp
mov
out
icebp
enter
mov
cli
mov
imul
es
sub
and
mov
outs
dec
das
imul
aaa
js
jge
push
add
fstp
mov
xor
(bad)
(bad)
xor
sub
out
dec
pop
dec
aad
scas
int3
adc
lea
rcr
sbb
loopne
and
lods
repnz
sbb
add
mov
cdq
push
xchg
or
xchg
push
mov
jbe
jo
test
leave
add
inc
rcl
ror
pop
fsubp
sbb
jnp
mov
aam
out
(bad)
movs
outs
inc
cmp
pop
jne
popa
inc
inc
out
mov
icebp
jmp
std
fucomi
stos
push
repz
xchg
fiadd
xchg
adc
int3
pop
cmp
cmp
inc
stc
pop
hlt
inc
ins
out
aaa
sbb
xchg
sub
lods
xor
jae
(bad)
out
shr
not
ss
cmp
fcmovnbe
arpl
sbb
adc
jb
add
mov
xor
xlat
mov
cwde
ja
jl
jmp
mov
call
retf
es
push
push
mov
mov
mov
out
cmps
jno
push
sbb
xor
sbb
stos
call
dec
mov
pop
fidiv
jge
push
jge
leave
pop
jb
sar
cmc
popf
xchg
stos
ds
retf
mov
and
mov
pushw
cmp
loopne
xor
sbb
hlt
inc
mov
stos
gs
in
in
jae
pop
lods
ret
fmul
jns
jns
mov
cs
add
stos
imul
push
sub
jmp
jecxz
cs
jle
pop
pop
push
ja
cmp
cmp
sbb
shr
stc
das
mov
push
fiadd
rcl
in
ret
das
or
sub
xor
pcmpeqd
pop
mov
std
and
jnp
shrd
adc
mov
les
adc
fst
xchg
int3
in
jbe
or
lock
cmp
add
bound
in
mov
adc
push
sbb
iret
push
inc
pop
xchg
pop
mov
xchg
(bad)
xchg
jns
rcl
push
inc
or
inc
lea
stc
add
ror
fld
add
fsub
xor
loopne
sbb
xlat
pop
or
dec
jbe
mov
imul
lods
dec
out
je
aam
push
and
outs
div
xchg
pop
fstp
xchg
xchg
jb
les
pop
jle
test
sub
rcl
sub
rol
push
daa
adc
rcl
mov
jg
aam
add
adc
sbb
outs
iret
mov
and
xchg
fadd
mov
push
cmp
sub
pusha
sti
mov
sahf
add
dec
(bad)
pop
and
push
jbe
fisubr
pusha
repnz
shl
cmps
sti
and
loope
xchg
dec
and
(bad)
iret
adc
mov
int
mov
(bad)
(bad)
adc
loop
lds
and
in
pop
push
stc
add
shl
ret
int3
addr16
mov
cmp
sar
retf
dec
mov
sbb
popa
into
mov
inc
jmp
mov
in
inc
xor
pop
sub
fmul
out
ss
dec
mov
(bad)
in
push
jp
jbe
mov
mov
add
mov
in
inc
sahf
xor
test
je
cmp
jo
int
test
dec
jbe
stc
and
dec
(bad)
cld
cmc
or
mov
pop
jp
shl
sub
cmp
es
repnz
jmp
mov
popf
sub
jae
pop
push
add
lds
pusha
mov
xchg
cs
stos
cmp
imul
push
retf
mov
push
loopne
ror
mov
repz
mov
lea
and
xor
nop
int3
dec
sub
test
sar
mov
aaa
scas
mov
cdq
mov
push
pop
adc
enter
call
jae
dec
sub
(bad)
clc
jbe
jmp
pop
data16
sbb
icebp
jge
das
fild
sub
xor
cdq
fs
into
or
xchg
imul
cmps
xor
sub
push
(bad)
and
jae
dec
mov
push
jne
aaa
mov
xor
ja
inc
mov
inc
mov
jbe
fwait
adc
test
test
xchg
out
sub
mov
enter
pop
adc
ss
xor
retf
and
cli
leave
cmp
jecxz
rcl
mov
out
leave
sbb
pop
or
add
dec
icebp
jmp
inc
dec
adc
(bad)
fmulp
shr
cmp
mov
loope
push
syscall
aam
and
(bad)
scas
dec
adc
scas
cs
lods
and
outs
je
push
or
into
test
add
inc
outs
outs
ins
jb
jl
xchg
nop
add
xchg
xor
jmp
mov
mov
and
push
lsl
cmp
sub
aad
push
mov
pop
(bad)
mov
daa
imul
push
dec
fwait
sahf
adc
shl
pop
inc
test
xchg
mov
es
add
jo
call
push
jl
add
js
iret
or
shr
mov
xor
loopne
shl
jmp
jge
or
ds
mov
dec
data16
hlt
out
inc
loopne
mov
dec
or
sbb
or
aas
mov
loop
xor
push
arpl
jge
cmc
ret
add
enter
dec
and
scas
inc
in
aam
nop
call
(bad)
and
je
and
ss
mov
or
dec
call
push
cmps
mov
aad
cmp
sbb
or
sub
imul
mov
add
mul
push
dec
push
sub
cmps
dec
pop
lods
movs
cmp
aad
inc
or
sbb
dec
xchg
int3
and
mov
pop
(bad)
sbb
fwait
cld
push
arpl
scas
call
jae
xor
pop
call
icebp
push
sub
ins
push
das
cli
(bad)
xchg
enter
scas
xlat
inc
jmp
adc
inc
jne
cmp
in
out
ffree
inc
cmps
cmps
fisub
push
mov
movs
sub
daa
and
repz
loop
fsubr
mov
dec
mov
mul
xor
cwde
inc
sbb
sbb
out
icebp
pusha
les
adc
aad
pop
fucomi
pop
jae
bound
or
je
inc
nop
in
aas
sti
loope
fdivrp
ins
imul
cmp
and
jnp
cs
xor
jle
add
inc
ins
adc
mov
gs
dec
mov
fdiv
movs
mov
mov
dec
pop
push
in
fcomp
dec
sahf
xor
jns
fdivr
and
popf
push
aaa
int3
push
dec
out
lods
test
fdivr
push
mov
jl
cmps
ror
jo
std
xchg
leave
cmp
cmp
xchg
(bad)
push
push
mov
test
cmp
adc
and
rcl
xor
sbb
mov
add
(bad)
out
mov
or
dec
push
pop
jecxz
or
sar
jmp
mov
neg
or
outs
dec
(bad)
adc
mov
add
mov
mov
rol
test
xor
sub
dec
push
push
aas
jno
stos
jno
adc
(bad)
adc
popf
fwait
sbb
aam
sub
inc
jo
enter
pop
inc
cmp
popa
sbb
loopne
and
xchg
xchg
mov
icebp
sub
test
out
xor
scas
mov
xchg
adc
adc
in
dec
xchg
sub
pop
stc
sub
shr
aaa
sub
call
sub
mov
jbe
pop
inc
sahf
xor
in
outs
jl
push
call
and
sub
mov
jo
push
pop
xchg
test
push
mov
out
xchg
dec
scas
lock
ret
inc
rol
xor
rcl
add
cmp
inc
adc
cli
push
repz
lods
lahf
inc
xlat
ret
mov
enter
adc
adc
xor
(bad)
loop
movs
gs
js
jl
jo
movs
push
stc
bnd
sub
jo
pop
cld
cdq
or
dec
fisub
sub
adc
leave
pop
test
xchg
jno
xchg
add
pop
gs
(bad)
pop
push
add
pop
fisttp
sub
fstp
test
fwait
mov
jbe
jae
out
add
jg
push
push
add
mov
xchg
int3
in
and
adc
(bad)
jmp
sbb
hlt
call
mov
or
pop
lods
dec
push
inc
pop
push
add
add
fs
pop
mov
outs
out
mov
xchg
stc
sbb
xor
or
test
or
cmp
in
aad
bound
call
aad
add
sbb
add
in
push
mov
mov
add
outs
movs
add
std
fst
add
mov
or
jp
jle
(bad)
fild
jo
jle
(bad)
adc
(bad)
jae
scas
je
retf
inc
ror
lds
pop
inc
sub
or
lock
bound
out
xor
cmps
sti
int3
cmps
stc
fst
(bad)
js
inc
iret
push
je
mov
loop
lods
rcl
cmp
mov
(bad)
or
(bad)
fstp
ret
dec
sbb
(bad)
dec
clc
sbb
push
push
lahf
dec
add
das
mov
add
push
leave
pusha
inc
jg
mov
cmp
movs
shl
jno
arpl
mov
fsub
push
push
retf
ret
cmp
or
xor
loop
add
mov
inc
jp
out
call
sub
ins
(bad)
mov
ds
jp
(bad)
cmp
sub
push
xchg
data16
pop
mov
add
sbb
(bad)
scas
cmp
jmp
push
or
sub
popa
cmp
cmc
movs
in
mov
ins
arpl
mov
xchg
les
popf
fs
inc
test
mov
sbb
and
je
iret
out
das
push
cmp
das
ror
ins
mov
test
pop
xchg
xor
movs
dec
out
fstp
inc
test
mov
gs
fisub
es
ins
arpl
fwait
mov
nop
(bad)
lahf
int
lock
sub
inc
lods
clc
sub
out
inc
mov
aas
or
and
pop
fmul
out
add
jp
jle
jp
xor
jnp
fisttp
sti
imul
fld
icebp
fld
jnp
fstp
mov
jne
pop
mov
into
das
je
push
fucomi
lds
sbb
jb
mov
push
inc
push
or
fisubr
imul
fs
pop
lahf
cwde
in
xor
outs
js
mov
push
fwait
pop
jmp
adc
cmps
mov
ret
dec
dec
sahf
push
out
movs
mov
mov
or
mov
or
xor
movs
repz
xor
js
mov
pop
add
add
mov
sbb
(bad)
lods
inc
(bad)
mov
(bad)
in
push
xchg
pushf
(bad)
ficomp
sub
daa
push
push
cli
adc
push
fdiv
sahf
xchg
pop
(bad)
sub
mov
jb
lods
inc
cmp
mov
rol
pop
(bad)
xor
xlat
pop
aad
mov
lods
jg
(bad)
ret
push
data16
int
jno
push
mov
mov
push
xlat
xor
mov
cmp
je
icebp
in
pop
je
cmp
push
or
stos
es
arpl
daa
pop
test
dec
retf
ret
dec
cmp
enter
mov
xchg
ja
lahf
mov
jl
sub
mov
daa
into
sub
or
push
cmp
rcr
std
in
pop
xor
(bad)
jmp
repnz
xchg
xor
mov
rol
bound
sub
sbb
pushf
dec
ss
inc
nop
sub
jnp
(bad)
(bad)
xor
pop
adc
jg
test
cwde
(bad)
(bad)
shr
fisub
sbb
add
mov
push
jno
sti
mov
jge
cmp
setns
sbb
(bad)
sbb
daa
retf
call
pusha
int3
jns
xchg
xor
lea
ins
push
pop
rep
add
fwait
jb
jle
sti
rcr
imul
(bad)
test
cmp
xchg
ficomp
jns
jns
xlat
movs
pop
sub
retf
mov
sbb
and
xchg
ins
add
mov
jmp
loope
jecxz
push
xor
scas
adc
ror
xor
dec
cmp
mov
pusha
mov
fld
xchg
outs
jbe
test
adc
pusha
inc
push
xchg
sbb
add
popf
push
bnd
sbb
retf
or
in
in
xchg
xor
aad
pop
push
pop
jecxz
ds
adc
or
sub
in
dec
xor
fcom
sbb
xchg
cmp
dec
cmp
int
pop
mov
(bad)
icebp
cmp
and
pop
jl
scas
adc
cmp
int3
jmp
js
mov
cmp
call
mov
jne
inc
fsubr
test
std
add
jo
imul
inc
xchg
test
outs
xchg
in
ja
js
clc
add
mov
movs
or
xor
adc
xchg
sub
pmulhw
sub
daa
xor
jbe
mov
sub
out
xchg
cmps
add
mov
ss
mov
dec
cmp
shr
pop
cmp
add
lods
aam
xor
shl
pop
nop
mov
push
lds
clc
sti
stos
adc
push
sti
bound
adc
scas
mov
or
push
sahf
dec
mov
cmp
push
sbb
sbb
fdivr
mov
outs
fisub
(bad)
push
dec
push
dec
adc
sub
xor
mov
push
cwde
adc
mov
add
push
push
dec
daa
cmp
in
mov
xchg
add
or
es
outs
push
setnp
call
pushf
jle
jmp
add
mov
mov
pushf
in
adc
js
je
stc
mov
or
cdq
inc
fsubr
fidivr
pop
sahf
jl
mov
cli
mov
fadd
push
test
ins
ror
imul
adc
lock
mov
pop
(bad)
cmc
cmp
pop
out
pop
xchg
mov
(bad)
pop
xchg
cli
ret
xchg
xlat
adc
loope
mov
xchg
js
push
sbb
imul
pop
xchg
push
pop
mov
retf
xor
xchg
xchg
not
fs
dec
leave
push
fstp
pop
pop
je
js
dec
jne
xor
jge
mov
das
iret
sti
cmp
shl
repz
cmc
or
lock
imul
outs
lods
in
test
cmp
push
cmp
mov
pop
icebp
stc
and
xor
adc
mov
xor
pop
cmp
sbb
inc
xor
mov
sub
aas
imul
inc
test
push
mov
push
fisubr
push
xor
out
out
fstp
in
sub
js
shr
push
push
call
loopne
adc
or
mov
cmp
daa
imul
(bad)
and
lds
pop
fild
mov
xlat
jbe
pushf
ja
mov
repz
dec
sub
shl
xchg
xchg
dec
bound
icebp
shl
sbb
fs
mov
cld
dec
push
push
adc
cmp
(bad)
adc
shl
adc
pusha
inc
jmp
call
xchg
rcr
fdivr
cwde
adc
pop
sahf
lock
fld
jge
adc
add
xchg
jecxz
jl
clc
dec
push
push
jl
addr16
mov
xchg
jb
out
push
lods
test
push
hlt
dec
or
stos
adc
movs
xor
dec
mov
pusha
pop
dec
call
inc
jecxz
xchg
push
cmps
pop
das
jae
push
ret
ss
clc
add
lahf
repnz
out
jmp
mov
(bad)
lods
sbb
add
mov
and
dec
pop
dec
popf
into
adc
cmp
push
sub
loope
lds
mov
std
add
or
test
push
mov
xchg
lea
push
std
push
stc
out
jnp
pusha
pushf
lock
adc
ja
sbb
pop
dec
mov
sahf
add
xlat
xlat
fisttp
push
jl
call
je
mov
mov
sub
jno
fiadd
mov
cmp
jns
jae
cmp
jecxz
imul
call
jecxz
lods
aam
xchg
mov
mov
push
and
sub
jmp
jl
rol
cmp
jl
dec
dec
nop
clc
ret
lds
mov
ret
inc
jle
pop
adc
aam
dec
test
ficomp
or
push
push
sub
sbb
lea
inc
sbb
test
mov
dec
out
test
jmp
loope
mov
add
adc
mov
aaa
pop
cs
out
xor
pushf
cli
xchg
inc
ins
mov
loope
xchg
jno
nop
ins
jmp
daa
sbb
mov
dec
or
jl
and
dec
adc
adc
sti
add
mov
mov
int
in
sar
aaa
lock
(bad)
push
test
ret
cmp
jns
and
dec
or
mov
pop
xor
lods
out
push
mov
aaa
(bad)
mov
inc
pop
jb
pop
jnp
mov
mov
xchg
popa
and
loopne
test
push
adc
stos
test
sub
xchg
add
mov
mov
inc
scas
imul
jle
mov
jg
pop
or
jns
mov
ds
dec
cmps
icebp
retf
mov
sub
jp
jl
or
pop
jo
mov
mov
cmc
cmp
scas
shl
lock
dec
add
stos
or
or
test
push
xor
mov
mov
cmp
pop
ds
sbb
xor
push
cwde
cmps
test
push
xchg
add
sub
mov
mov
ret
mov
or
enter
in
jp
mov
repz
cmp
mov
pop
jb
adc
arpl
imul
inc
adc
and
loop
or
inc
sub
xor
(bad)
fcom
sub
push
xlat
sbb
fcmovnbe
je
or
xchg
dec
dec
push
imul
iret
xor
pop
(bad)
stos
push
ins
ss
add
push
xor
pop
push
stos
loope
rol
pop
sbb
pop
in
add
lahf
dec
ret
es
xchg
movs
add
jmp
cdq
ins
loop
push
bound
loope
sub
inc
outs
enter
cmp
cmp
hlt
add
dec
sti
sub
jp
loope
retf
int
or
lds
push
popa
cs
call
repz
mov
cs
rcr
add
jmp
dec
das
pop
fiadd
pusha
inc
push
sub
ret
jne
enter
outs
jnp
push
mov
outs
cdq
retf
dec
aam
pop
pop
mov
fmul
dec
cmp
cmp
popa
out
sub
mov
stos
jb
mov
hlt
repz
and
xor
clc
scas
xchg
inc
out
pop
daa
sti
stos
aam
xchg
cmp
sbb
and
push
jmp
popa
xchg
stos
(bad)
pushf
mov
jge
and
(bad)
jp
(bad)
lock
cld
push
stc
into
in
lahf
std
fnsave
fiadd
sbb
jg
arpl
aam
push
aad
jnp
out
lea
mov
ds
int
(bad)
daa
dec
cmp
pop
sbb
stc
in
and
mov
sbb
scas
sub
data16
inc
inc
push
test
xchg
jbe
xchg
jne
lods
and
movs
add
sahf
in
out
adc
push
jbe
icebp
shl
ret
lds
jno
cli
(bad)
mov
xor
arpl
jns
dec
mov
inc
inc
pop
sub
aaa
xor
lods
in
sub
aam
addr16
cmc
aaa
imul
mov
daa
cmp
push
jno
vmovss
arpl
xlat
adc
xchg
test
sub
pop
mov
fnstsw
mov
sbb
cmps
or
sahf
dec
pop
scas
jle
mov
dec
pop
fisttp
mov
pop
mov
xchg
sub
jle
or
sbb
test
jo
push
dec
jg
or
push
jb
add
push
mov
hlt
mov
clc
movs
adc
daa
lea
push
dec
cmp
outs
xchg
adc
xchg
mov
push
mov
repnz
mov
xchg
and
loop
pop
add
cmp
fild
stc
std
mov
test
dec
fild
push
xchg
lods
cwde
jne
fcmove
call
daa
and
pop
push
test
(bad)
iret
cmp
or
mov
push
sbb
inc
shl
dec
xor
cmp
lahf
sti
add
jmp
in
push
into
pop
out
sahf
ds
les
loop
mov
stos
jle
sbb
push
sbb
test
lods
fist
(bad)
stc
adc
(bad)
or
cmp
push
icebp
pop
stos
js
add
jmp
loope
push
popa
jle
icebp
inc
inc
stos
sbb
cmp
lock
jecxz
xchg
inc
or
sub
dec
imul
and
ficomp
xchg
stc
mov
lods
test
cld
pushf
add
pop
adc
js
jg
mov
and
dec
push
dec
mov
fs
lds
fsubr
mov
add
mov
pop
xor
fwait
jne
dec
enter
fucomip
mov
mov
test
add
jae
add
aad
mov
mov
fisttp
std
or
push
push
jno
ja
dec
sbb
shl
pop
dec
pop
or
outs
push
dec
mov
lods
in
inc
(bad)
icebp
pop
mov
hlt
cmp
ins
push
push
leave
pop
mov
sti
add
mov
pop
push
push
movs
mov
(bad)
push
ror
sbb
lea
arpl
sub
jge
fistp
enter
push
mov
je
xor
repz
and
adc
jle
cs
dec
pop
and
repz
imul
jb
sahf
pop
inc
push
mov
fild
cmp
xchg
xchg
rcl
sbb
pop
pop
pop
ds
xor
mov
push
jl
jg
xor
cmp
cmps
sbb
push
mov
xchg
push
fimul
loopne
push
sub
and
mov
in
jg
cmc
dec
pop
sbb
cdq
ss
jmp
call
pop
or
and
daa
jne
lods
xor
inc
push
cmp
adc
and
in
mov
push
jns
cmc
fmul
imul
std
dec
xchg
xchg
nop
xchg
cmp
xchg
cwde
add
add
dec
push
lea
mov
pop
xlat
sub
sub
mov
xor
loop
adc
sub
mov
(bad)
aas
jmp
push
sub
ins
test
cmp
push
push
xor
js
hlt
test
int3
test
fwait
les
inc
(bad)
jbe
xchg
rol
out
fisub
jp
push
jmp
inc
(bad)
jl
in
jp
ins
mov
add
xchg
mov
movs
icebp
sub
inc
addr16
jecxz
mov
sti
ret
mov
sub
inc
pop
stos
stos
mov
and
scas
pop
dec
ds
sahf
mov
mov
or
xlat
ret
sub
call
popf
add
or
pop
adc
repz
mov
out
fsub
and
hlt
mov
pop
fwait
jns
jmp
aad
je
or
add
sub
pop
pop
addr16
dec
into
inc
sahf
dec
jo
sti
in
inc
jns
ds
ret
inc
std
rcr
inc
mov
stos
inc
pop
call
(bad)
lock
inc
mov
mov
inc
push
and
dec
shr
test
sub
adc
(bad)
(bad)
aam
inc
mov
jne
jmp
adc
inc
repz
or
test
xor
mov
movs
and
shr
(bad)
xor
loop
in
dec
int3
sub
stos
lods
popf
push
lods
dec
mov
popf
inc
pop
push
lods
loope
les
adc
nop
into
jg
fild
add
dec
xchg
mov
pop
mov
jb
or
daa
hlt
inc
dec
pushf
cli
or
test
pop
xchg
pop
jmp
(bad)
outs
push
pop
inc
xchg
in
mov
cmp
jb
cwde
aad
fdivp
pop
xor
add
(bad)
pusha
test
popa
dec
call
mov
or
int
addr16
std
mov
mov
mov
pop
jl
xor
push
jg
loope
fld
scas
stos
out
popa
push
xchg
xor
ja
(bad)
sub
xchg
push
cmp
inc
int
pop
dec
xchg
adc
pop
xor
jae
jae
inc
jg
jmp
mov
and
dec
(bad)
pop
aam
fcomp
call
cmps
mov
out
stos
outs
outs
retf
ins
out
pop
inc
(bad)
mov
clc
(bad)
hlt
and
lahf
jns
fild
cdq
cmp
add
enter
bound
fidivr
jb
push
mov
outs
cmp
out
xor
movs
xchg
inc
test
lock
frstor
xor
jg
fsubr
ret
inc
pop
mov
ret
adc
xchg
or
sbb
mov
packsswb
test
dec
cli
sub
dec
test
pusha
(bad)
aaa
mov
push
xchg
mov
or
retf
mov
loope
push
mov
cli
call
cli
repnz
repnz
mov
aad
inc
jle
mov
imul
jmp
sbb
out
bound
lock
aam
rol
jns
hlt
mov
inc
inc
dec
dec
mov
inc
mov
xchg
and
jge
mov
mov
push
loop
push
xchg
xchg
inc
sti
fdiv
in
(bad)
(bad)
mov
mov
sbb
mov
push
out
push
xchg
mov
inc
test
and
cwde
jg
jno
std
xor
shl
cdq
adc
ds
std
jp
mov
stos
fwait
mov
mov
ja
sub
repnz
xlat
mov
fstp
jecxz
imul
js
loope
jb
out
addr16
in
mov
es
cmp
push
and
and
imul
dec
daa
(bad)
iret
loopne
dec
adc
fs
mov
(bad)
cmp
js
xchg
addr16
and
sbb
xor
lea
and
push
cs
add
xlat
adc
ins
(bad)
ficomp
lods
pop
sub
sub
test
push
cdq
stos
cmp
jmp
xchg
imul
mov
cmps
mov
sub
cld
push
jae
xchg
shl
imul
out
push
mov
enter
fsub
scas
loop
ins
rcr
inc
xchg
(bad)
aaa
add
cmps
jbe
in
inc
ds
(bad)
ja
adc
je
sbb
sub
xchg
mov
fild
jl
cld
fistp
xor
ja
sbb
dec
adc
lods
push
mov
imul
push
adc
pushf
(bad)
out
fdiv
push
mov
mov
adc
lods
inc
cli
(bad)
jg
cmp
fisubr
push
mov
dec
fmul
pusha
inc
popa
push
fcom
popa
sub
mov
sub
mov
ss
jbe
inc
lahf
adc
mov
je
(bad)
pop
js
call
cld
inc
clc
sbb
jns
das
jne
repnz
mov
test
fidiv
pcmpeqd
leave
sbb
inc
jmp
es
cdq
repnz
jg
icebp
call
popfw
and
pop
and
psrlq
cdq
xor
inc
imul
sahf
test
jne
popf
test
sub
in
pop
aad
pop
and
fild
pop
sub
mov
xchg
loope
aad
lods
pop
add
adc
rcl
call
repz
dec
(bad)
pop
scas
xchg
xchg
adc
imul
pop
cmp
jl
lahf
jbe
dec
scas
std
add
cmp
add
mov
aas
or
xchg
mov
aad
push
and
(bad)
jnp
push
pushf
pop
or
in
jo
icebp
aaa
adc
and
imul
inc
xchg
push
loopne
dec
outs
and
popf
scas
xor
retf
pop
sbb
sbb
popf
jno
lea
add
popf
imul
mov
add
sti
retf
or
movs
pop
lea
data16
clc
pop
pop
xor
adc
and
mov
addr16
jo
in
loope
imul
add
psllq
dec
jmp
imul
cmp
mul
jno
je
fdivr
xor
mov
push
ss
shr
fnstcw
push
cmp
mov
shr
fisttp
push
fstp
pop
nop
adc
dec
inc
movs
sahf
pop
add
aad
xor
pop
lods
jmp
jmp
jg
mov
enter
mov
mov
js
into
dec
xor
push
xor
aad
jl
push
(bad)
js
sub
imul
and
push
xchg
ja
nop
loope
ds
dec
sahf
adc
loope
push
jmp
xlat
or
fmul
out
jns
iret
outs
xchg
fld
out
into
outs
(bad)
pop
clc
popa
outs
(bad)
test
iret
dec
in
jnp
adc
xchg
xor
jmp
pop
jle
mov
mov
adc
loopne
or
sub
rcr
mov
pop
into
lea
ja
shr
sub
adc
add
fld
jecxz
jnp
std
inc
push
fld
cwde
mov
imul
or
mov
popf
mov
mov
pop
push
push
ret
push
add
fwait
xchg
push
push
rol
bnd
dec
xchg
jno
sti
lahf
in
repz
imul
shl
retf
jbe
mov
mov
ja
xchg
sbb
jns
ja
dec
aas
jle
lods
rol
sbb
push
mov
enter
push
pop
pop
push
adc
movs
daa
xor
pusha
lods
stos
sbb
retf
scas
xor
data16
not
mov
jg
adc
pop
mov
int
sbb
adc
cs
sbb
nop
sbb
dec
mov
mov
sbb
adc
mov
and
ja
movs
sti
xchg
dec
mov
cmp
loopne
or
xchg
fstp
mov
dec
xchg
xchg
adc
cmp
or
outs
mov
xor
fld
and
xchg
and
ror
ret
sbb
push
xor
jp
(bad)
mov
(bad)
out
test
out
je
dec
mov
jae
or
sti
pop
and
idiv
leave
ret
push
and
(bad)
xlat
ins
xchg
xor
loopne
jp
aad
xor
jecxz
pop
xor
clc
jl
scas
stc
and
(bad)
outs
fisub
mov
shl
sti
inc
sbb
adc
fldcw
ss
loop
stos
sub
jne
dec
cmps
movs
sbb
dec
popa
test
jno
pop
jo
arpl
pop
mov
repz
and
pop
xlat
or
sub
jg
pop
jbe
pusha
adc
inc
jns
in
xchg
push
xor
cmp
xor
mov
push
fstp
xor
ins
adc
pop
inc
dec
fadd
and
vmwrite
mov
sub
mov
cmp
jmp
fwait
xor
adc
sahf
cmp
mov
loopne
pop
movs
mov
jg
mov
into
or
push
fadd
push
dec
adc
scas
cmp
sub
cmp
xor
push
ret
xor
sub
push
js
inc
mov
pop
shl
xchg
hlt
fwait
xchg
pop
lock
outs
leave
lock
jle
mov
xor
scas
movs
add
ret
cmp
xchg
mov
pop
in
jge
daa
clc
add
ret
aad
or
push
push
and
out
mov
sub
pop
mov
popa
imul
pop
mov
fmul
sbb
mov
clc
imul
push
or
cwde
data16
ins
fcom
xchg
aad
in
movs
(bad)
ror
sub
stos
sbb
cs
xor
inc
push
dec
sub
pop
ja
mov
inc
cld
arpl
mov
push
mov
push
inc
jmp
cld
loopne
fst
cmp
clc
push
pop
xlat
out
push
push
lods
mov
sahf
stos
sbb
in
xchg
mov
mov
(bad)
in
push
lahf
push
mov
mov
(bad)
repnz
jmp
xchg
icebp
and
inc
iret
push
jl
mov
and
mov
adc
test
fs
adc
retf
mov
push
adc
lods
sahf
stos
mov
sti
inc
push
rcl
in
mov
or
idiv
(bad)
push
in
add
inc
mov
cs
lahf
data16
ret
mov
iret
xlat
sahf
or
gs
test
retf
fs
push
jp
cmp
lds
add
adc
jp
lock
add
in
dec
leave
mov
mov
ja
stc
lods
cmc
ret
idiv
cmc
jmp
fmul
xchg
sbb
retf
mov
arpl
dec
je
inc
cmp
xor
fnstenv
dec
mov
jnp
sbb
sahf
mov
mov
daa
or
or
outs
mov
sub
lods
mov
cmp
jge
jne
test
cmp
pop
call
shl
inc
sahf
jbe
ins
pop
push
jp
mov
mov
movs
mov
jecxz
lods
lods
pop
(bad)
(bad)
rol
pop
or
fidivr
call
and
mov
add
movs
repz
popf
mov
imul
rcl
rol
stc
push
add
push
pushf
mov
sahf
sbb
push
jne
test
jmp
shr
enter
inc
mov
(bad)
stos
sbb
int
mov
cdq
popf
aam
cld
imul
sbb
add
cld
arpl
inc
mov
js
jge
adc
lds
or
cs
dec
push
and
xlat
loopne
into
jl
iret
ins
mov
jecxz
xor
xchg
jmp
test
push
adc
fiadd
js
pop
jno
mov
pop
dec
inc
data16
icebp
sbb
mov
mov
stc
push
inc
lods
call
dec
aas
in
cmp
test
cmp
sub
and
mov
fs
sbb
xchg
ror
cmp
dec
lock
pop
je
jae
sbb
je
imul
mov
imul
mov
les
dec
push
cmp
pop
fsub
xor
sub
sub
popa
lods
pop
xchg
sbb
nop
xlat
jns
cli
push
jb
push
jle
add
xor
inc
ja
outs
fidivr
adc
add
mov
inc
cdq
cmp
scas
(bad)
aad
adc
mov
in
cmps
add
jle
nop
xchg
cmps
in
jmp
sub
mov
pop
(bad)
jle
inc
pop
pop
out
or
xor
sbb
ficomp
push
mov
rol
fisttp
cmps
mov
jge
ds
arpl
aas
aam
scas
sub
cmp
stc
and
(bad)
jno
iret
outs
jnp
inc
(bad)
jge
(bad)
mov
xchg
cmp
push
stos
scas
jl
imul
scas
cmp
jb
scas
or
xor
jne
jp
and
add
mov
inc
xchg
ja
imul
test
es
sbb
or
pusha
pop
(bad)
mov
mov
inc
repz
inc
cmp
lea
shl
sbb
pop
jns
jmp
xor
js
mov
out
hlt
les
pop
mov
inc
mov
outs
ja
mov
pop
pop
push
cmps
outs
sahf
xor
fsub
sub
rol
or
fwait
jo
ret
sub
cdq
mov
sti
mov
jg
sahf
xchg
cmp
mov
mov
retf
jns
xor
clc
pop
mov
jo
les
cwde
ret
sub
std
jno
xchg
cmc
sbb
cmp
arpl
movs
and
or
call
(bad)
mov
inc
push
jb
psrlq
mov
xchg
pusha
sbb
or
xchg
inc
call
shl
mov
inc
jae
or
pop
xor
loop
jmp
aad
push
jmp
in
adc
call
mov
jge
dec
xor
movs
or
stos
icebp
xor
hlt
mov
sub
xchg
les
inc
push
pop
or
cmp
stos
jge
cwde
push
pop
mov
enter
ret
pop
add
(bad)
cwde
aam
mov
push
push
sub
or
cmp
mov
mov
loope
pop
gs
sbb
inc
es
mov
popa
sbb
nop
stos
mov
les
push
inc
in
adc
dec
add
mov
popf
adc
dec
xor
and
inc
(bad)
dec
(bad)
fdiv
dec
aaa
je
js
aad
xor
xor
and
cs
mov
retf
or
enter
push
lds
fstp
xchg
jmp
cmps
lock
in
xchg
sub
fst
div
sbb
adc
cld
jmp
test
ds
(bad)
fld
jne
test
jp
jae
sar
dec
in
mov
fstp
and
add
pop
repz
sub
div
jmp
imul
int
jmp
or
push
pop
xchg
imul
test
push
movs
data16
sbb
out
push
cmps
jae
cmp
retf
shl
ret
or
sti
push
les
cmp
xor
mov
or
das
fdiv
or
in
xor
paddusw
mov
add
push
mov
xchg
push
xor
cmp
push
mov
aad
add
cmps
mov
cli
enter
loope
xchg
inc
sar
or
mov
ins
dec
int3
ret
movs
jno
not
bound
test
cdq
shr
bound
mov
movs
shl
xchg
xchg
js
and
mov
pop
mov
pop
retf
dec
test
call
shl
retf
pop
jmp
es
test
xchg
ins
imul
adc
loop
jmp
mov
lock
pop
mov
stc
add
and
aad
xchg
stc
in
test
mov
test
hlt
pop
and
push
jge
sar
mov
xchg
ins
mov
imul
lahf
or
lea
cmps
(bad)
cmc
lahf
cmp
add
cmc
lea
pop
jo
(bad)
pushf
sub
sti
and
out
xchg
lock
cmp
test
in
ret
call
test
fsubr
dec
mov
sbb
push
test
sub
jb
jae
sbb
hlt
test
leave
nop
fldenv
sbb
inc
iret
retf
shl
mov
pop
or
jmp
adc
adc
scas
jo
push
or
(bad)
fistp
jno
arpl
adc
sub
pop
test
ins
ins
fiadd
push
mov
pop
mov
icebp
lods
jmp
pop
jmp
test
fstp
add
(bad)
out
add
mov
(bad)
pop
pop
in
xor
inc
mov
jp
xchg
retf
outs
pop
ins
push
sahf
in
sub
or
arpl
mov
popa
mov
int3
mov
mov
or
jns
je
pop
xchg
jo
mov
sub
js
and
push
sbb
retf
cmp
and
pop
jno
leave
xchg
loope
and
dec
pop
push
sub
loop
xor
into
xchg
hlt
call
aam
mov
lahf
add
das
in
je
mov
xor
mov
aas
retf
iret
xor
call
ja
push
cmp
hlt
hlt
jns
cmp
mov
jo
(bad)
ss
ds
push
mov
loope
add
sub
imul
daa
ret
xchg
lods
inc
js
ficom
xchg
sbb
mov
sub
loope
mov
es
sbb
xchg
scas
push
aad
add
sbb
mov
js
int
or
add
jp
jmp
lock
sub
pop
inc
retf
aad
xor
add
imul
add
rol
test
dec
dec
mov
push
sbb
ins
adc
pusha
push
mov
sar
ja
and
jp
dec
mov
mov
add
movs
jae
shl
fisub
cmp
sbb
inc
mov
hlt
(bad)
js
mov
aas
push
paddsw
adc
inc
ja
es
neg
push
addr16
dec
mov
xchg
imul
dec
clc
(bad)
sub
fidiv
sbb
test
or
mov
ins
dec
xchg
in
sub
xchg
mov
sub
and
xchg
mov
sbb
dec
sbb
xor
push
xor
mov
fist
inc
in
test
cmp
lock
out
mov
nop
loope
add
jno
inc
jmp
test
pop
cmp
inc
cmp
xchg
aam
mov
mov
or
push
sbb
sub
mov
adc
stc
ret
shr
imul
neg
mov
inc
jb
xchg
shl
pop
push
sub
push
repz
imul
arpl
stos
call
call
in
inc
fs
and
mov
hlt
icebp
push
adc
lea
add
mov
cmps
in
fbld
(bad)
jb
aaa
out
add
mov
mov
jnp
(bad)
mov
add
xchg
arpl
sub
lods
jge
jp
sub
sub
cmp
mov
mov
into
mov
scas
out
aaa
loop
mov
stos
clc
jae
mov
mov
sbb
jbe
out
data16
and
jge
or
push
inc
xchg
mov
into
dec
out
(bad)
bnd
dec
mov
pushf
lds
push
cs
cmp
mov
fdiv
mov
imul
push
pop
push
and
dec
push
jnp
lds
fs
jmp
out
inc
jmp
inc
hlt
loopne
sbb
outs
mov
cwde
(bad)
cs
cdq
cmp
or
shr
mov
clc
mov
adc
push
rol
cmp
pop
ja
cmp
popf
mov
bswap
loope
jecxz
push
inc
mov
jmp
pop
leave
js
jge
mov
repnz
push
sbb
push
dec
loopne
and
adc
xlat
push
in
cmc
xchg
add
(bad)
(bad)
call
cmps
cmps
sub
mov
sti
jnp
rol
mov
push
and
mov
mov
lahf
mov
inc
cmp
jbe
lock
mov
mov
fnsave
dec
test
xor
inc
cmc
xor
ffree
movs
iret
mov
idiv
and
outs
cmp
lods
shl
enter
popa
push
jb
ds
xchg
or
xchg
or
sbb
pop
xchg
pop
repnz
mov
loope
cmc
aad
das
test
sti
jne
sbb
pushf
lds
lock
adc
jmp
dec
mov
add
(bad)
xor
jo
xchg
sbb
sub
push
mov
add
out
mov
ins
jno
sbb
or
fiadd
fisttp
pop
in
mov
fadd
ins
test
xchg
push
popa
pop
sub
or
in
(bad)
push
test
scas
lods
in
daa
xchg
xchg
push
mov
or
add
cli
pop
cli
mov
outs
sbb
xchg
and
add
inc
test
fwait
in
and
es
test
fwait
mov
mov
and
pop
add
les
adc
xor
jne
shr
mov
jmp
rol
(bad)
(bad)
leave
fistp
ret
dec
fwait
in
pop
push
jg
mov
aam
aam
shr
cwde
in
mov
sbb
pusha
in
sbb
push
arpl
or
or
pop
mov
sbb
mov
int
xchg
sbb
repnz
jg
xchg
inc
das
jae
xchg
repnz
inc
(bad)
dec
cmps
add
dec
add
xchg
test
sbb
push
and
jg
sar
mov
adc
mov
movs
inc
and
mov
add
push
xchg
cmp
push
adc
xlat
or
push
fldcw
mov
rol
jo
mov
add
mov
mov
xlat
push
(bad)
adc
idiv
(bad)
in
lods
loope
adc
movs
aam
adc
aad
sub
sub
push
aad
sahf
cmps
in
push
scas
jmp
xlat
push
call
in
xor
addr16
adc
scas
ret
dec
not
sub
adc
sub
retf
xchg
dec
loope
jmp
mul
ds
mov
inc
gs
push
arpl
imul
xchg
xlat
shl
movs
ss
sub
in
je
(bad)
fistp
xlat
mov
mov
add
bound
xchg
pushf
cmp
jno
int3
add
das
into
in
(bad)
mov
dec
out
fs
fst
iret
add
inc
mov
lds
lea
rdmsr
sub
scas
inc
pop
fnstcw
sub
rcl
pop
mov
fcomp
push
out
xchg
xlat
push
pop
aad
test
push
inc
fidiv
push
jle
fidiv
push
inc
sahf
push
mov
inc
call
mov
push
xor
mov
iret
arpl
inc
mul
mov
movs
gs
pusha
mov
mov
inc
or
scas
mov
fsub
jp
ins
sub
mov
addr16
jp
xchg
xor
adc
push
fwait
in
add
jnp
fdivr
push
aad
pop
xlat
pop
sar
into
mov
cmp
jmp
jbe
es
push
cmc
pop
adc
xchg
add
xor
lds
pop
push
lods
or
in
xchg
int3
adc
push
xchg
cmp
stos
out
imul
shl
or
lds
jl
push
js
dec
into
imul
lahf
xchg
add
shl
jne
sahf
test
and
adc
mov
fist
rcr
mov
outs
push
call
hlt
or
jp
pusha
fadd
cmps
data16
aad
or
xor
cmc
sbb
pop
ror
lock
(bad)
cli
jo
jo
sbb
dec
inc
push
movs
push
leave
inc
ret
pop
ins
xor
lea
and
mov
fwait
adc
repz
mov
aad
mov
mov
stc
xor
or
add
sbb
jns
pop
xor
push
(bad)
(bad)
xor
jl
mov
movs
(bad)
iret
xchg
pop
add
sub
rol
cmp
push
scas
and
and
push
cmp
cmps
jbe
mov
(bad)
cld
cwde
popf
loope
sbb
sti
dec
in
pop
lock
and
sti
mov
aaa
cmp
or
inc
mov
out
jge
out
sub
add
and
pop
pop
ja
xor
dec
dec
inc
(bad)
out
leave
out
adc
pop
mov
cdq
fld
mov
ss
xchg
dec
jmp
pusha
in
call
fsub
(bad)
jae
(bad)
push
ins
outs
popf
push
pop
out
cdq
repz
je
sub
leave
popa
cmp
iret
jo
add
xchg
fldenv
push
daa
add
cmp
mov
fcom
mov
lds
pop
xchg
xchg
mov
inc
fldcw
ins
ds
shl
movs
mov
shr
add
inc
adc
(bad)
mov
daa
pop
jo
sub
popa
mov
or
push
sbb
cmp
shl
inc
leave
dec
sbb
sti
dec
push
nop
gs
in
adc
aad
add
mov
rcr
and
push
inc
scas
xchg
gs
inc
jecxz
in
test
out
pop
sar
mov
outs
retf
dec
fs
popa
mov
scas
dec
add
push
jbe
and
test
lods
mov
bound
or
les
inc
lds
cdq
(bad)
mov
adc
mov
and
jge
sub
cld
in
ja
jb
mov
jb
(bad)
std
sbb
cmp
lahf
pop
xchg
(bad)
ficomp
push
cdq
sub
(bad)
jg
xchg
out
loop
test
les
popa
sahf
pop
(bad)
pop
ret
push
enter
leave
lds
scas
addr16
jnp
out
inc
ins
into
je
inc
loope
in
lds
adc
and
das
cmp
icebp
jb
push
mov
call
xchg
sub
daa
push
push
mov
ds
push
pop
gs
add
inc
xor
test
jg
and
movs
and
adc
push
cmps
xchg
lods
out
pop
(bad)
dec
push
xchg
xchg
adc
out
cmps
xor
cmc
bound
retf
repnz
cmp
push
cmp
mov
jb
sub
cmp
adc
jge
mov
fisub
cmp
daa
cmp
data16
xor
lahf
retf
mov
outs
sub
aam
pop
test
imul
retf
test
push
jmp
push
test
iret
or
xor
lods
mov
mov
push
jb
cmp
bound
arpl
or
jmp
ss
sub
or
cli
xchg
jle
sti
cmc
fwait
daa
pop
or
sub
cmp
adc
xor
inc
push
adc
pop
popf
sbb
sub
mov
(bad)
clc
dec
push
and
lods
out
jo
mov
repnz
pop
loope
ror
sub
retf
mov
scas
movs
push
stos
pop
adc
pop
retf
xchg
jb
xchg
in
lock
aas
mov
jno
icebp
fs
jb
add
mov
push
mov
ret
add
in
hlt
nop
cmp
out
push
fst
das
popa
les
xor
int
dec
push
movs
jno
push
sub
fcomi
push
jp
out
mov
dec
mov
sub
loop
dec
call
and
stos
inc
or
cmp
lds
jns
ins
mov
repz
push
add
inc
add
and
pop
mov
jle
scas
lods
pop
int
(bad)
mov
ss
ins
jne
int
inc
gs
adc
ror
lods
pop
cmps
xchg
adc
pop
std
push
sbb
jae
inc
fild
lods
ss
and
or
xchg
xchg
jp
or
loope
push
jmp
add
shl
inc
pop
sbb
sub
push
pop
ins
adc
(bad)
dec
and
mov
ins
mov
jge
mov
fadd
(bad)
mov
push
xchg
or
ret
jb
cmp
jmp
retf
adc
cli
mov
fisub
pop
ins
adc
pushf
pop
xor
inc
ds
xchg
inc
std
out
push
aad
jmp
add
sbb
int3
daa
enter
mov
aaa
aam
loope
push
hlt
ins
cli
bswap
pinsrw
or
sbb
(bad)
jmp
and
pop
jmp
retf
ret
stc
pop
movs
pop
cmp
icebp
or
push
js
mov
sbb
push
fisttp
xor
movs
jo
push
and
inc
(bad)
aaa
fst
push
sbb
das
addr16
outs
cmp
xor
int
into
adc
sbb
or
jl
in
test
jl
mov
pop
sub
adc
sbb
cs
ins
sbb
cmc
push
cli
not
push
inc
mov
fst
or
sbb
mov
(bad)
push
sahf
fsub
dec
pop
cmc
xor
mov
inc
xchg
rol
aam
cmps
in
int
push
xor
loopne
lahf
and
sti
loop
jbe
adc
mov
jo
sbb
int
mov
or
pop
jo
fwait
push
mov
je
sbb
scas
test
jae
test
jp
mov
shl
js
add
mov
repnz
aas
push
ins
std
in
add
xchg
pushf
jl
scas
call
push
mov
out
movs
inc
jnp
inc
and
add
jmp
icebp
mov
dec
mov
imul
inc
sti
cs
cdq
les
into
jp
(bad)
vpsubusb
add
nop
jo
(bad)
fisub
xlat
push
cmp
rcr
cli
fwait
or
mov
clc
cmp
std
pop
cmp
mov
ror
les
add
xchg
aam
jo
cmp
les
shr
cmp
mov
sahf
pop
(bad)
out
mov
or
adc
xchg
pop
add
ss
add
mov
pop
sub
adc
add
add
cmp
adc
mov
les
adc
fiadd
and
cmp
jle
dec
(bad)
push
aas
outs
mov
in
das
mov
mov
mov
arpl
fsub
leave
push
jbe
jmp
sub
lahf
ss
sbb
xchg
ret
mov
xor
jle
mov
cmp
std
in
stos
fldcw
add
inc
aad
jb
cld
cmp
call
ss
fild
push
pop
mov
mov
test
mov
inc
leave
clc
mov
ss
fxch
fisubr
(bad)
push
mov
xor
loope
adc
adc
pop
ret
push
aas
push
adc
mov
and
(bad)
fisttp
arpl
fcom
adc
ja
or
icebp
mov
jne
xor
push
ins
in
jbe
and
adc
(bad)
call
rcr
test
sti
sub
mov
sti
cwde
rcr
lahf
pusha
and
adc
scas
add
cmp
xor
sbb
sbb
cmp
and
mov
xchg
jmp
cli
cs
add
(bad)
sbb
bnd
sahf
into
arpl
xchg
imul
les
or
adc
sub
and
or
fsubp
adc
push
ds
ds
sbb
adc
jp
sbb
jg
xchg
or
push
cmps
int
xor
adc
push
fist
outs
retf
cli
adc
cmp
mov
(bad)
jmp
pop
xor
icebp
jbe
pusha
dec
jp
jl
push
pop
addr16
jbe
ss
adc
push
rcr
in
(bad)
push
outs
test
repz
das
retf
fcomp
daa
icebp
lods
mov
jecxz
xor
pop
push
xor
cmp
push
(bad)
ret
movs
loopne
aam
daa
and
mov
fisttp
aas
jecxz
popf
mov
jno
xchg
in
cmp
cmp
jle
xlat
call
loopne
sub
aas
inc
xchg
pushf
push
repz
leave
jo
mov
enter
mov
dec
pop
cmp
or
or
(bad)
fnstenv
cmp
jmp
out
ins
dec
stos
adc
lods
sbb
sbb
out
pop
ds
(bad)
fwait
aaa
cmp
(bad)
movs
stos
inc
push
or
into
test
inc
stc
inc
sbb
pop
sbb
cwde
aas
xchg
mov
push
lods
std
cli
sti
push
or
push
(bad)
xlat
mov
stc
cmp
adc
lahf
inc
test
pusha
pextrw
aas
cli
psubq
dec
mov
pop
scas
adc
xor
jp
(bad)
and
sub
je
fucom
movs
mov
out
ins
push
add
loop
shl
enter
pop
xor
push
call
enter
ret
adc
push
pop
push
push
sbb
sti
out
xchg
ss
jnp
cld
mov
sahf
add
test
xchg
jo
pushf
in
fwait
nop
(bad)
mov
imul
mov
add
dec
call
cmp
xchg
iret
in
mov
add
push
jle
imul
mov
pop
jb
imul
mov
scas
(bad)
add
addr16
(bad)
or
ret
xor
pushf
pop
xor
sbb
inc
dec
ins
xlat
push
jbe
push
test
adc
lods
mov
xchg
inc
ds
mov
clc
in
(bad)
push
inc
mov
push
repz
dec
sub
pop
and
xor
cmp
fld
inc
mov
and
neg
ja
shr
movs
aam
push
cmp
test
outs
mov
mov
dec
jns
mov
push
pop
ret
xchg
mov
aam
jns
aaa
ja
and
cmp
gs
and
test
dec
in
sbb
mov
lea
xor
rcl
xchg
inc
jge
mov
scas
outs
ds
mov
jo
data16
cmp
arpl
jne
stos
retf
pop
cmp
mov
stos
or
les
sbb
or
pop
jne
scas
shl
ret
cmps
imul
cmp
imul
xchg
sub
mov
push
(bad)
jnp
or
mov
sub
rcr
xchg
ret
pop
mov
dec
jb
js
xor
xchg
inc
cmp
xchg
xor
jge
nop
ss
xor
add
fs
(bad)
loop
xchg
outs
xchg
inc
xchg
out
js
pop
adc
or
icebp
out
jg
mov
out
push
jle
xchg
repnz
jmp
push
mov
xchg
cli
in
stc
popa
adc
test
popa
sbb
sbb
push
outs
mov
aas
bound
push
in
dec
js
dec
mov
xor
jmp
mov
xchg
ins
add
jne
call
xchg
mov
lods
xchg
test
test
pop
xor
jmp
in
int
mov
jb
test
jmp
test
jp
mov
imul
retf
inc
pop
arpl
clc
inc
rcr
dec
in
cmp
stos
mov
call
jb
fdiv
inc
xor
fadd
and
shr
add
out
scas
pop
mov
sub
jae
cwde
push
jl
push
loop
popf
sbb
lock
outs
or
or
adc
push
fld
mov
inc
adc
popf
pusha
movs
jb
lock
ror
push
jg
cwde
pop
sub
inc
xor
inc
outs
fs
push
xchg
pop
jle
push
in
fstp
ds
xor
add
aam
mov
mov
mov
inc
push
movs
jmp
and
xor
jle
js
fcomp
jmp
add
dec
or
add
add
mov
ins
push
xor
dec
out
and
enter
pop
inc
out
push
sar
inc
sub
popf
jno
sbb
inc
mov
fcom
adc
jmp
inc
push
pop
dec
push
and
or
popf
xor
jb
movs
(bad)
test
stos
(bad)
mov
movs
add
(bad)
xor
fdiv
mov
neg
jl
xchg
cmp
mov
fcomp
loope
stc
mov
sub
enter
mov
inc
pop
loope
sahf
xchg
je
mov
outs
out
mov
retf
fisubr
in
inc
cwde
call
ret
mov
push
outs
sub
(bad)
dec
(bad)
vlddqu
jns
iret
fsubr
popf
mov
and
push
inc
loopne
daa
sbb
inc
mov
inc
into
in
shr
loop
and
sub
mov
inc
sbb
into
pop
test
or
fwait
sbb
sub
repz
mov
lods
fstp
sbb
xor
jp
adc
lahf
sbb
inc
shl
in
dec
fimul
pop
sub
mov
inc
dec
not
pop
push
or
pop
(bad)
mov
push
jl
and
sti
sbb
push
int
xor
push
push
sub
mov
xchg
cmp
mov
mov
mov
lods
loopne
loopne
es
mov
clc
or
and
xor
mov
jg
push
pusha
dec
(bad)
sub
pop
or
pop
fild
xchg
sbb
jmp
pushf
test
mov
rol
out
iret
inc
shl
fcomp
jp
push
repnz
pop
mov
add
int3
sbb
into
mov
inc
imul
jmp
call
les
and
ins
rcl
and
fiadd
mov
out
int3
fidiv
loope
test
push
movs
push
add
jmp
mov
enter
ins
sar
push
cld
ror
mov
and
movs
mov
jo
inc
(bad)
mov
fwait
dec
adc
(bad)
sub
retf
or
mov
lea
lods
sahf
idiv
rcr
jmp
sbb
pop
mov
pop
jge
push
push
fldcw
mov
mov
jge
xor
add
mov
xchg
jl
jno
xchg
mov
and
test
jo
and
and
mov
inc
add
fdivr
and
push
pop
daa
xor
add
push
mov
mov
cmp
lea
xor
jl
xor
test
lahf
test
xor
cli
mov
mov
dec
xor
test
sub
push
push
(bad)
mov
in
dec
sub
inc
cwde
ret
mov
mov
jmp
out
mov
lahf
xchg
mov
nop
mov
push
jg
test
or
sbb
ins
sbb
int3
adc
or
div
dec
pop
jbe
inc
das
jecxz
inc
addr16
arpl
mov
inc
nop
pusha
mov
iret
pop
stc
mov
pop
inc
call
fcmovnbe
pop
jmp
dec
cmp
hlt
cmp
and
(bad)
(bad)
cmp
out
data16
mov
mov
aas
lock
mov
in
lahf
sub
test
adc
cmp
jg
cs
es
fmulp
cmp
rol
mov
sub
mov
pop
add
push
imul
push
ja
push
mov
int3
loopne
fwait
ss
and
ja
jne
stos
push
aam
rcr
jmp
test
ja
das
or
xchg
push
pop
push
xchg
mov
cmc
jmp
dec
xor
sub
sahf
dec
aam
cdq
fcomp
push
pop
imul
pop
dec
and
jne
shr
into
into
rcl
outs
stos
push
mov
jae
shr
loop
inc
pusha
mov
push
xchg
test
(bad)
es
adc
fsub
aaa
out
stc
add
out
sub
aas
pusha
outs
mov
or
mov
mov
rol
shr
ds
(bad)
cmp
xor
ret
cmps
mov
mov
jae
mov
sti
gs
ret
nop
das
push
xor
jecxz
movs
mov
gs
out
inc
xor
mov
mov
scas
jnp
dec
lods
inc
sub
and
pushf
mov
idiv
and
mov
ret
fisub
and
sbb
ror
gs
xchg
cmp
mov
aad
stos
out
(bad)
mov
not
adc
rcr
fldcw
sbb
sub
scas
aaa
outs
xchg
loop
cmps
sbb
(bad)
scas
xchg
add
cmps
mov
jp
enter
xchg
loope
or
repz
lock
push
pop
sub
sbb
aad
mov
aas
(bad)
call
sub
icebp
adc
mov
mov
push
mov
mov
loope
scas
jp
enter
xchg
nop
mov
int3
sub
aad
inc
out
pop
out
jmp
std
mov
cmp
inc
jecxz
mov
jg
shl
fiadd
or
aas
ins
pop
fst
pushf
call
sbb
leave
or
inc
xor
inc
std
pop
add
lahf
cli
dec
aam
sbb
push
mov
ror
mov
div
pop
(bad)
lods
dec
sub
popf
test
jno
mov
push
or
adc
mov
mov
add
push
cmp
inc
in
into
inc
ins
fidivr
xchg
fsub
fs
cdq
dec
call
lods
jb
mov
xor
or
lds
mov
pusha
mov
aad
jo
and
sar
add
ror
bound
pop
data16
ins
mov
or
(bad)
pop
int
call
mov
ss
test
in
mov
es
mov
fcom
shl
adc
or
(bad)
in
addr16
lock
outs
add
xor
adc
je
lods
mov
pop
pop
aam
cmp
xchg
jb
or
movs
jo
mov
pusha
and
pop
inc
add
xchg
xchg
add
pop
push
inc
adc
int3
sub
leave
aaa
bound
xchg
dec
pop
inc
or
pop
pop
scas
sub
mov
aas
ret
ror
pop
push
dec
lock
lock
outs
or
imul
lods
push
in
mov
add
xor
fisttp
and
loop
pop
rol
les
shr
cmp
les
xchg
jecxz
dec
dec
jg
clc
inc
xchg
cmp
sbb
lahf
jecxz
cdq
sbb
mov
mov
pop
std
jne
ficom
pop
(bad)
out
adc
or
in
mov
lods
dec
push
add
sbb
mov
or
xor
inc
pop
jns
mov
cmps
lea
xchg
add
aas
jmp
loop
call
les
pop
stos
mov
and
pop
pop
or
pop
arpl
(bad)
icebp
pop
hlt
adc
int
stos
das
push
adc
mov
(bad)
dec
sbb
and
or
mov
xchg
int
outs
cdq
hlt
les
int3
ss
or
clc
ins
pusha
rol
mov
mov
jmp
xor
jnp
xchg
cmc
xchg
adc
cld
in
test
dec
pop
cmp
pushf
stos
sbb
lahf
jge
rdtsc
inc
push
xchg
(bad)
shr
(bad)
sub
pop
stc
clc
push
pop
xlat
mov
adc
push
in
out
or
mov
aad
and
repnz
and
in
xor
int3
jg
lods
xchg
in
retf
lds
sbb
repz
adc
daa
hlt
icebp
fs
add
out
sub
dec
mov
jno
adc
sbb
fidiv
cmps
jle
out
ror
jl
mov
ss
push
mov
push
movs
int
popf
jmp
and
cmp
add
jmp
mov
xchg
inc
mov
sbb
inc
push
div
xchg
mov
jb
into
sbb
in
call
push
lods
push
mov
neg
out
inc
mov
(bad)
push
sbb
and
lahf
inc
ins
scas
in
les
dec
jle
inc
fsub
cmps
test
jno
jne
loop
xchg
mov
jb
sub
retf
(bad)
call
mov
push
cs
(bad)
sbb
cmps
adc
(bad)
enter
pop
push
mov
cmp
sub
(bad)
in
ror
dec
(bad)
in
push
adc
fist
cmc
or
aas
cmp
loope
dec
in
jle
push
push
jmpw
pop
dec
sub
push
mov
jge
jmp
ret
fdiv
mov
jmp
rcr
push
jo
dec
hlt
fidivr
jecxz
push
das
add
jecxz
pop
je
and
mov
test
movs
adc
add
fdiv
sbb
neg
cmp
dec
xchg
or
cwde
int3
fld
ret
cld
pop
jg
pop
adc
dec
ins
adc
lods
push
int
pop
xor
out
jmp
xchg
popa
jns
enter
xchg
cli
fidiv
and
inc
rol
and
(bad)
xchg
and
mov
xlat
retf
inc
jne
loope
cmp
cmovb
mov
jg
mov
movs
fisubr
adc
cmp
clc
mov
jae
mov
jg
(bad)
sub
daa
jne
popf
sbb
xor
ret
xchg
mov
lods
dec
jnp
fs
test
xor
imul
push
gs
inc
call
std
sub
idiv
adc
xchg
(bad)
in
out
bound
(bad)
out
dec
mov
ins
mov
fucomip
push
mov
fwait
arpl
imul
loopne
aaa
arpl
mov
rcl
das
fmul
(bad)
movs
outs
lahf
mov
scas
push
rcl
add
fbstp
dec
icebp
sub
jle
jmp
mov
lods
in
inc
mov
ss
fsub
div
xor
inc
shr
jns
jl
mov
mov
dec
push
mov
mov
xor
sub
ins
movs
inc
arpl
add
call
adc
rcr
push
mov
jg
mov
dec
adc
cwde
dec
or
add
bound
repnz
inc
dec
fsub
pop
popf
inc
int3
cdq
and
rcl
test
stos
inc
inc
aad
sar
inc
push
add
sbb
ret
jmp
mov
and
rcr
loope
out
daa
sbb
sub
std
push
inc
mov
dec
mov
adc
dec
test
and
inc
scas
aas
lea
sbb
stc
cmp
push
mov
jmp
sub
test
out
stos
sub
shl
es
int
mul
mov
aad
mov
inc
pushf
mov
mov
mov
std
xchg
lock
cwde
xchg
loop
ds
test
cmps
cmp
xor
shl
pop
xchg
iret
int3
mov
inc
retf
sub
and
iret
mov
dec
scas
mov
inc
pop
or
push
or
mov
cmp
das
mov
mov
xor
pop
test
sbb
(bad)
ds
jg
mov
movs
movs
pop
sub
femms
jg
and
sub
cmp
dec
mov
cs
jnp
dec
push
inc
sbb
mov
jecxz
jle
dec
mov
push
test
outs
mov
das
cmp
lods
cs
mov
sub
xlat
push
clc
inc
xor
enter
in
add
nop
jbe
hlt
imul
sub
jmp
inc
sub
and
inc
xchg
jns
add
cdq
pop
inc
add
push
dec
dec
mov
or
popa
jne
xchg
xor
hlt
jno
inc
lea
clc
mov
ja
jmp
sub
(bad)
iret
pop
jmp
dec
out
mov
xchg
mov
loope
jge
sbb
or
push
mov
pop
les
shl
sub
pop
sub
xchg
mov
push
lods
lahf
add
loop
je
add
or
push
sar
outs
clc
ins
fst
dec
adc
es
jge
sub
jbe
mov
mov
xchg
push
mov
pop
lods
aam
inc
pop
push
push
jle
ret
sbb
mov
inc
sbb
pop
inc
xchg
dec
nop
rcr
cwde
dec
pop
xchg
fcom
scas
push
ret
pop
retf
icebp
xchg
test
mov
jmp
(bad)
retf
mov
xchg
xor
pop
mov
retf
xchg
pop
into
dec
(bad)
adc
mov
pop
(bad)
imul
out
push
es
fadd
popf
mov
push
xlat
add
out
mov
imul
call
test
dec
xor
jae
call
inc
sbb
gs
mov
pop
hlt
pop
push
fs
push
add
ror
dec
aam
xor
jge
or
outs
mov
jmp
pop
xchg
iret
fwait
push
or
lahf
mov
xlat
push
in
sbb
repz
jno
cmps
push
push
movs
jge
or
int3
ficom
add
es
test
add
icebp
pop
loop
sub
je
(bad)
test
ins
xchg
push
xor
in
add
mov
loopne
cmp
cli
and
daa
fwait
neg
out
dec
mov
mov
sub
jl
xchg
data16
push
jmp
inc
mov
or
cmp
add
repz
add
inc
mov
adc
fwait
jle
dec
les
adc
or
js
inc
add
fisttp
iret
and
mov
xor
adc
in
mov
repz
mov
jbe
movs
sbb
sahf
cmp
ss
test
sub
int
pop
out
mov
imul
inc
or
dec
or
out
loope
push
xchg
loope
or
or
push
sub
sar
mov
mov
xchg
sti
sbb
sbb
push
cmp
mov
jbe
xchg
cmp
out
mov
out
add
add
jo
mov
push
xchg
(bad)
xor
popa
mov
push
pop
test
dec
mov
jb
jns
inc
mov
push
idiv
xchg
repnz
mov
xchg
mov
adc
xchg
cmp
stos
jbe
adc
xor
popf
cmp
cli
(bad)
scas
retf
or
data16
xchg
out
(bad)
mov
push
retf
mov
or
and
fwait
mov
pop
fwait
rcl
ror
jns
add
xchg
(bad)
out
add
outs
jnp
add
out
sbb
jg
inc
pop
cmps
dec
(bad)
push
dec
xor
pop
jo
cdq
les
in
mov
ror
jge
aaa
xchg
jg
pushf
sti
xor
jo
push
das
js
add
cwde
pop
bound
stos
sahf
cs
mov
cmp
nop
push
xlat
add
aad
jmp
adc
and
jbe
pop
xchg
xchg
les
adc
mov
mov
ficom
lea
rol
loopne
or
jp
shl
scas
fldcw
sub
icebp
adc
scas
loopne
fcomi
out
imul
shl
cmps
aad
cmp
add
int
aas
cmp
(bad)
mov
lock
shl
ret
cmp
cld
jge
iret
add
jl
adc
inc
jle
sbb
je
mov
dec
pop
pushf
or
add
cmp
sbb
call
jo
stc
push
xchg
rol
in
push
mov
or
and
in
ss
cmps
jbe
jnp
out
xlat
jnp
fsub
or
mov
lahf
addr16
js
in
repz
cmp
jnp
not
and
ret
dec
cmp
or
xchg
xchg
cdq
pop
jbe
push
jl
cld
jb
pop
inc
aas
mov
jb
or
add
ja
xchg
fmul
xchg
mov
mov
pop
cmp
pmullw
ds
sti
sti
popf
add
xchg
mov
pop
mov
xchg
mov
adc
scas
push
in
jnp
fild
and
aas
inc
mov
loopne
jle
mov
sbb
mov
pop
mov
inc
mov
rcr
out
dec
jns
inc
inc
xor
push
adc
in
xchg
sub
pop
adc
push
push
xchg
jns
lahf
pop
or
xchg
jmp
adc
adc
jl
sar
mov
fild
cld
add
loope
in
sti
mov
popf
xchg
std
sbb
adc
into
sub
dec
inc
in
rol
or
call
and
pop
dec
sbb
add
pop
cmc
daa
mov
jno
enter
les
bnd
fnstenv
outs
jp
jmp
pop
sub
fwait
sbb
dec
iret
out
(bad)
(bad)
cmps
nop
pop
or
aaa
hlt
cmp
push
sub
adc
adc
pop
in
cmp
rcr
pop
fcom
or
call
bound
sub
adc
pusha
in
movs
aas
mov
lods
ror
or
adc
mov
xor
dec
test
mov
jmp
jg
and
sub
out
(bad)
gs
mul
pop
dec
sub
retf
pusha
xchg
addr16
mov
jmp
push
(bad)
push
fist
xor
fadd
mov
fwait
mov
xor
scas
popf
xchg
or
dec
lods
(bad)
sbb
push
test
cld
jae
xor
push
or
add
dec
dec
ror
jmp
sub
in
(bad)
jmp
sub
dec
cmp
pop
pushf
(bad)
sub
hlt
xor
xchg
mov
sub
pop
int
and
xchg
inc
push
xchg
movs
xchg
repnz
jmp
lock
mov
mov
scas
ja
retf
add
test
adc
mov
scas
push
inc
out
repnz
dec
and
jae
daa
sub
imul
outs
lods
push
pop
jmp
mov
mov
aas
push
jle
adc
and
push
fstp
and
idiv
sub
lock
push
inc
aad
icebp
ja
sub
popf
and
mov
cmc
aaa
add
push
sub
lods
push
pop
sub
out
mov
push
jmp
(bad)
sub
out
jmp
adc
loop
push
inc
jns
xor
lods
fbld
loope
push
pop
inc
imul
shr
sbb
push
mov
test
mov
push
sar
jmp
jmp
pop
xor
or
xchg
data16
fisub
aaa
je
movs
or
inc
test
cmp
shr
mov
push
je
mov
push
push
out
pop
cld
mov
push
xchg
ret
xchg
mov
arpl
out
in
cld
inc
pop
jmp
popf
inc
adc
jge
inc
mov
add
inc
xchg
push
lea
jp
movlps
and
sti
cs
mov
mov
xor
sbb
aaa
mov
xor
aaa
bound
xlat
mov
int
aaa
popa
jns
jp
xor
jl
add
mov
mov
xor
pop
cmps
sti
inc
fdiv
push
fstcw
mov
sub
mov
add
test
jo
test
test
in
dec
sub
aam
xor
fs
adc
xor
fbld
dec
jmp
adc
mov
icebp
xchg
adc
int3
movs
cmp
out
add
sub
add
sbb
jmp
sbb
fsubr
popf
xor
(bad)
jns
cmp
out
mov
inc
or
jg
retf
stos
pop
imul
cmp
sbb
add
out
out
dec
fwait
ror
inc
jne
mov
cmp
pusha
inc
outs
dec
sbb
jne
cmp
mov
push
nop
stos
mov
in
lahf
cmp
mov
loopne
iret
push
mov
iret
jo
fistp
lods
mov
les
add
lea
arpl
or
push
lods
push
jp
add
mov
and
js
jb
cdq
jmp
mov
inc
jne
mov
pop
into
mov
add
sbb
es
inc
sbb
out
sub
push
jno
aas
adc
fidiv
loopne
or
and
dec
jge
and
popf
push
mov
xchg
mov
xchg
jl
sbb
daa
jl
dec
dec
out
idiv
pop
out
and
(bad)
shl
pop
xor
jecxz
imul
test
pop
xor
ficomp
inc
or
cmps
loope
out
ins
xor
xchg
push
jge
bound
jnp
outs
stc
push
test
test
cld
or
pop
pop
mov
push
in
loop
cli
ffreep
sub
sahf
scas
sahf
fisttp
stos
push
jno
xchg
jns
outs
iret
pop
or
and
sbb
in
inc
gs
inc
xchg
outs
lahf
or
outs
dec
mov
iret
fadd
repnz
fstp
push
das
cmp
xor
mov
mov
jnp
retf
out
add
rep
push
or
movs
xor
mov
or
hlt
pop
jae
add
sbb
ror
scas
pop
push
jo
and
push
pop
and
pop
jmp
clc
pop
out
fistp
retf
mov
dec
pop
imul
movs
addr16
in
add
loopne
inc
or
ret
sahf
scas
mov
fadd
mov
jbe
es
inc
movs
fsub
mov
jo
pop
xor
repz
data16
inc
(bad)
int
mov
xchg
rcr
fwait
mov
fs
pop
int
fld
xor
arpl
dec
sub
add
mov
imul
dec
pushf
inc
movs
inc
push
out
shl
ror
mov
aas
jbe
scas
sub
jle
retf
mov
js
lahf
loop
pushf
jnp
sub
mov
sub
inc
jmp
jg
add
jg
dec
pop
outs
fsubr
push
retf
std
loop
jecxz
adc
ret
shr
ins
ins
push
mov
inc
jno
inc
int
rcr
mov
mov
adc
aaa
pop
inc
adc
hlt
jns
adc
sub
mov
push
out
add
stos
ds
push
jb
adc
sbb
mov
out
and
xor
rol
repnz
sbb
(bad)
les
cmc
inc
dec
push
jbe
ret
loopne
pop
dec
push
stos
arpl
jae
cmps
test
mov
xchg
xchg
or
out
dec
bound
clc
mov
shl
xor
mov
adc
imul
addr16
test
and
ins
in
mov
or
jbe
(bad)
push
cdq
sbb
sbb
es
pusha
jmp
push
push
in
jae
dec
add
push
pop
add
lods
mov
or
inc
sub
or
mov
test
imul
fsub
jno
sub
add
inc
cli
test
popf
loopne
mov
loop
out
push
xor
sub
inc
sbb
sti
ficomp
jge
cdq
mov
add
int
ror
pop
push
adc
call
and
jecxz
inc
and
pop
adc
and
in
stos
jo
adc
das
mov
idiv
lds
sar
push
inc
cmps
mov
and
adc
xchg
pop
jle
aad
add
clc
mul
sub
call
pop
pavgw
outs
fst
jle
movs
mov
inc
sbb
mov
cmp
push
and
push
mov
inc
(bad)
addr16
in
jmp
push
jmp
push
sar
and
fs
sbb
ret
sbb
nop
(bad)
cmps
sub
inc
xor
xor
(bad)
outs
jge
cli
icebp
lea
jo
ins
sti
test
xor
outs
mov
ja
or
sub
or
dec
shl
je
jo
xor
dec
and
mov
pop
mov
mov
mov
sbb
push
adc
sub
in
dec
xchg
jbe
cmp
sti
sub
jmp
out
lods
cmp
mov
jmp
shl
pusha
jmp
jle
movs
or
adc
in
das
in
mov
lds
mov
mov
push
sbb
(bad)
jns
sbb
rcr
aas
shl
adc
mov
push
adc
adc
retf
js
mov
jmp
mov
xchg
pop
daa
iret
push
sub
cmps
push
and
fcom
jbe
mov
xchg
dec
mov
jae
push
fistp
cmp
in
out
movs
call
mov
mov
inc
or
bt
imul
ss
(bad)
(bad)
fcomp
push
int3
fs
leave
not
loopne
gs
call
mov
out
fdivrp
mov
sbb
mul
or
jae
adc
fidivr
sbb
adc
pop
sub
(bad)
(bad)
cmovp
jmp
movs
mov
repnz
aad
dec
test
test
das
stos
pop
cmc
cmps
or
mov
cs
fild
cmps
mov
les
mov
push
jb
cli
(bad)
(bad)
js
xchg
je
fiadd
and
ins
xor
das
repz
xchg
sub
jmp
push
je
mov
dec
repnz
jge
jecxz
and
cmp
mov
pushf
pop
dec
stc
add
mov
sbb
loopne
iret
pand
cmp
push
rcr
sub
sub
imul
dec
in
mov
daa
add
je
pop
sub
movs
inc
lock
iret
repz
inc
pushf
xchg
pop
cdq
call
rol
shl
fsub
lods
data16
stos
iret
mov
sub
jmp
adc
rcl
out
and
adc
out
pop
stc
pushf
xor
mov
jae
dec
pop
pop
mov
mov
cs
cwde
aad
add
sub
cmp
pop
dec
push
mov
or
daa
pop
pop
xbegin
int3
inc
ret
dec
mov
mov
inc
out
lods
and
in
push
mov
mov
xchg
xchg
or
popf
ja
or
or
add
add
or
mov
pop
lods
inc
sub
inc
add
xchg
sbb
or
outs
mul
pushf
inc
icebp
lods
mov
sub
rol
leave
je
and
push
fwait
(bad)
cmc
add
pop
fs
pop
adc
push
out
pop
xor
daa
pop
scas
mov
adc
sub
int3
cli
adc
pop
jge
aaa
out
aas
pop
push
int3
add
add
cmp
adc
add
inc
icebp
jmp
cld
aas
mov
inc
dec
ins
sbb
adc
imul
lds
jecxz
inc
push
fisubr
call
pop
push
dec
mov
jo
fstp
xor
fs
fsub
jno
mov
in
stos
out
daa
add
add
fs
fstp
imul
(bad)
clc
fcmovb
lahf
dec
fwait
(bad)
dec
or
aad
mov
sar
pop
pop
cmps
addr16
mov
jo
(bad)
sti
pop
cmp
cmc
mov
shl
pop
jge
cmp
test
mov
sti
lea
cmp
mov
movs
int3
mov
out
push
push
push
stos
pop
cli
xchg
clc
xor
cmp
mov
sbb
and
mov
enter
pop
pop
and
je
(bad)
cwde
neg
push
jecxz
adc
cmc
call
adc
neg
lea
push
xor
and
das
mov
dec
(bad)
repnz
and
ja
pushf
xchg
test
or
sbb
add
xchg
mov
and
retf
rol
daa
outs
mov
shr
lods
push
pop
out
shl
jge
stc
(bad)
mov
call
push
and
loope
jb
pop
adc
gs
sbb
sbb
xchg
add
or
lahf
or
and
add
das
push
mov
pop
xchg
call
dec
mov
pop
mov
test
jbe
and
mov
jne
pop
adc
daa
test
imul
xor
push
shl
and
ret
sub
ss
jnp
(bad)
int3
popf
add
pop
imul
dec
int3
lock
push
and
popa
mov
call
fsubr
sbb
pop
repz
fisubr
and
sub
clc
add
mov
cdq
push
dec
pop
lahf
mov
mov
push
je
sbb
pop
xor
mov
cmp
cmp
and
lea
jne
(bad)
stos
lds
ret
sbb
mov
push
jnp
fchs
push
jns
and
push
shl
push
or
mov
jne
adc
adc
inc
stos
dec
mov
mov
retf
std
stos
fstp
and
dec
imul
not
sti
ds
ss
jbe
imul
stos
jge
rol
cdq
aam
pushf
cmp
aam
pushf
fst
es
enter
scas
in
mov
(bad)
jle
out
push
out
push
xchg
jb
fwait
push
jl
dec
adc
rcl
dec
pop
in
lds
rdtsc
gs
outs
iret
mov
lock
scas
adc
lds
mov
(bad)
mov
sub
push
xor
es
and
or
add
jmp
lods
cmp
into
cmp
inc
adc
push
or
jno
popf
push
mov
jo
out
js
mov
mov
pop
nop
pop
adc
and
jl
lahf
jb
sub
mov
stc
sahf
call
cmp
aam
pop
cmp
in
ror
or
vpaddw
or
push
push
lahf
cmp
sbb
xchg
enter
in
pop
jno
push
xor
mov
pusha
jmp
imul
push
bnd
mov
mov
in
lock
sub
xlat
jp
loop
stos
fld
out
aam
or
cli
mov
(bad)
rcr
les
ficom
stos
sti
fist
push
xlat
mov
pop
mov
test
xor
or
in
push
xchg
mov
mov
push
lds
std
pop
out
fisub
std
dec
xlat
aam
jmp
lea
repz
adc
mov
mov
cmp
mov
adc
(bad)
lea
(bad)
clc
mov
dec
hlt
call
mov
in
push
xor
gs
jae
std
xchg
sub
scas
pop
scas
cmp
inc
sub
scas
inc
fnop
les
loop
das
and
ja
mov
cwde
add
cmp
and
pop
dec
push
add
mov
retf
(bad)
mov
mov
adc
adc
lods
test
add
xchg
aaa
cmp
repnz
jle
xchg
xchg
into
and
sahf
call
retf
xor
hlt
mov
and
out
push
cld
mov
xor
mov
pop
cld
gs
or
pop
scas
enter
fld
(bad)
pop
push
sbb
(bad)
test
sar
arpl
sub
cld
cdq
jmp
pop
fdivr
push
stos
sub
aam
inc
mov
fs
mov
fstp
aaa
add
(bad)
fcomp
out
cmp
ss
sahf
fisttp
pop
out
into
inc
or
xchg
mov
dec
jbe
mov
fdiv
sub
dec
sti
loopne
cld
jg
sbb
(bad)
xchg
add
ins
adc
test
data16
out
mov
pusha
daa
adc
dec
push
inc
call
(bad)
aas
(bad)
movs
sub
jl
ja
jo
retf
jne
and
jbe
stos
or
addr16
lahf
push
inc
in
and
xlat
dec
ja
scas
fimul
int3
inc
push
inc
cwde
movs
ret
add
add
jle
and
inc
retf
jno
jbe
outs
xchg
pop
jae
mov
xor
out
sbb
nop
mov
inc
mov
mov
shr
xchg
mov
scas
cmp
xchg
das
or
ins
lds
icebp
or
mov
push
ds
jecxz
shr
cld
xor
or
cmp
jne
mov
fcom
jbe
rcr
cld
dec
ficomp
(bad)
scas
arpl
test
ins
cmp
in
shl
sub
sub
(bad)
retf
and
(bad)
ret
dec
fwait
ins
pop
push
outs
pop
pop
cmp
push
push
jnp
sbb
outs
mov
cmp
xor
sbb
mov
aad
adc
or
mov
xor
xlat
je
or
pop
inc
or
jnp
aam
stc
lods
inc
popa
(bad)
fild
fisubr
mov
add
jg
popf
cld
mov
ds
test
cmp
icebp
jl
sbb
mov
cs
dec
cdq
xchg
rcl
jp
mov
mov
jmp
out
pop
jae
xor
ficomp
dec
push
mov
xchg
test
gs
stc
sub
es
invd
inc
jns
push
ret
sbb
das
movs
mov
loop
push
out
sbb
scas
xchg
dec
aas
pop
or
mov
or
sbb
and
stos
outs
sub
aaa
lahf
stos
xchg
cmp
mov
mov
std
mov
sar
push
dec
inc
mov
push
in
xchg
inc
pop
inc
sbb
mov
cmp
jle
shl
test
je
xchg
daa
add
aas
sbb
cmp
jmp
jecxz
out
repz
xor
and
ins
sbb
repnz
gs
sub
in
mov
dec
inc
push
(bad)
hlt
fcom
ror
lods
mov
dec
imul
popf
aad
jmp
(bad)
and
add
popa
mov
sbb
xlat
dec
xchg
jle
icebp
mov
or
xchg
mov
cs
jae
fiadd
dec
idiv
cmp
mov
call
cwde
in
ss
pop
sbb
jmp
mov
inc
xchg
push
cmp
mov
fistp
sbb
popf
push
or
push
sti
movs
pop
jecxz
mov
xor
add
pop
test
dec
nop
mov
pop
pop
outs
inc
jbe
or
or
dec
xor
mov
je
(bad)
mov
call
pop
fadd
repnz
and
(bad)
stos
fwait
jmp
test
dec
cld
fcmovnbe
xchg
sub
and
movs
or
enter
mov
jne
(bad)
les
cmp
mov
in
mov
fidiv
inc
fld
aam
add
xor
sbb
dec
ret
scas
sbb
adc
imul
sbb
out
cmc
sbb
test
pop
jnp
sub
and
add
ret
push
push
push
lock
stc
das
rol
cmp
sub
xchg
leave
ins
xor
adc
jmp
test
mov
ins
jno
push
xchg
inc
call
add
lods
ds
ficomp
xchg
jecxz
pop
lods
mov
cmp
push
popa
sbb
or
pop
jb
sahf
push
cmp
push
xlat
inc
nop
adc
add
ret
xor
leave
add
pop
inc
jbe
adc
push
mov
call
(bad)
jmp
jp
dec
pop
lods
jnp
aas
mov
(bad)
(bad)
ins
mov
ins
and
push
shr
sahf
lea
js
int
imul
fisub
inc
in
add
scas
cmp
pop
pop
ret
inc
fwait
mov
movq
scas
fisub
push
test
mov
pop
pop
jno
jmp
xor
jae
jno
in
push
xor
jbe
ret
sbb
and
(bad)
out
pop
aaa
ror
mov
test
(bad)
popf
mov
cdq
pushf
push
pop
das
push
aam
dec
push
adc
cmc
retf
fwait
cdq
pop
mov
sbb
or
dec
adc
outs
(bad)
daa
mov
cmps
add
mov
dec
cmps
add
cmp
jg
push
cmps
xchg
adc
mov
paddusb
xor
test
aam
cmc
ja
hlt
lock
inc
imul
jmp
xadd
jb
cld
sub
cmp
jecxz
sahf
and
mov
in
push
sbb
sub
cmp
mov
pop
stos
daa
mov
sahf
sub
sbb
adc
inc
and
out
imul
jmp
push
inc
les
cwde
jno
pushaw
mov
rcl
xor
jmp
arpl
pop
js
inc
cs
and
ja
pop
jl
xchg
int3
(bad)
mov
mov
aas
dec
cmps
leave
fidivr
mov
push
xor
in
xor
xchg
adc
mov
adc
xor
jno
mov
mov
mov
adc
jmp
movs
ret
mov
sti
dec
xchg
aas
and
not
pop
dec
ret
inc
cmp
sub
stos
neg
inc
out
stos
sub
mov
cmp
fild
mov
sbb
inc
push
in
mov
xlat
xchg
push
movs
leave
(bad)
push
adc
pop
cmp
mov
or
test
bound
sub
lock
movs
mov
das
xchg
sub
or
in
mov
(bad)
arpl
or
sbb
aas
jo
out
jl
arpl
fisubr
js
nop
movs
add
xchg
mov
les
mov
sqrtps
adc
js
fisttp
gs
in
pushf
movs
or
dec
stos
inc
push
(bad)
cmps
push
sti
ds
aaa
push
mov
out
test
mov
push
movs
not
pop
stos
xor
into
iret
or
popf
pmaddwd
and
ret
inc
mov
xor
bswap
sub
pushf
adc
mul
dec
test
lds
out
and
icebp
mov
mov
pop
daa
mov
jmp
xchg
xlat
cmc
fild
lahf
sub
aam
aad
cli
or
xor
dec
loope
mov
ins
(bad)
push
mov
mov
loop
out
leave
xchg
movs
stc
lahf
jae
sub
adc
xchg
rol
xchg
outs
aam
jae
shr
clc
je
outs
cmc
sbb
(bad)
cmp
or
fldenv
pop
mov
shr
adc
cmp
cmp
or
jle
and
in
in
push
cld
xor
jp
out
push
jno
push
jp
mov
loope
std
dec
inc
(bad)
or
repnz
adc
imul
pop
jae
sub
push
iret
das
loop
lea
cmp
imul
dec
mov
cli
imul
ror
jmp
add
scas
xchg
inc
jmp
ss
adc
push
retf
inc
or
push
or
inc
sbb
icebp
cld
mov
push
pop
arpl
call
cmc
jns
cmp
mov
addr16
pop
mov
popaw
dec
pop
adc
imul
cli
imul
and
popf
in
fdivr
js
scas
xor
or
xor
cmp
xor
jnp
inc
fstp
mov
mov
add
sbb
add
adc
(bad)
sbb
mov
pop
arpl
mov
xchg
sti
movs
das
stos
pop
mov
cld
cwde
pusha
out
mov
stc
popf
jmp
loopne
pop
sbb
inc
test
sub
inc
xchg
mov
push
or
daa
sahf
sub
push
sbb
xchg
mov
sar
pushf
inc
jge
sbb
int3
and
push
mov
and
add
iret
sti
sbb
test
(bad)
xchg
mov
mov
xchg
(bad)
cld
jne
cmp
mov
xchg
outs
jno
stc
std
xlat
jmp
sub
jb
call
push
mov
jo
mov
sub
cld
xor
loopne
call
cmp
das
mov
stos
aam
and
sti
sbb
sbb
fs
jl
push
sub
cmp
movs
dec
mov
test
xchg
xchg
pop
mov
mov
mov
cmp
outs
jae
cmp
sbb
mov
movs
jo
inc
push
cld
dec
loop
push
vmread
sbb
xchg
(bad)
stc
aaa
pushf
imul
ss
rcr
lods
cmp
mov
imul
sub
enter
movntps
mov
jecxz
cmp
cwde
dec
pop
int3
dec
xor
push
xor
jbe
in
dec
lds
dec
ret
cmps
data16
es
ret
push
mov
jg
out
shr
pop
imul
and
rcl
xor
imul
sub
mov
loope
add
leave
fdiv
dec
das
mov
std
cmp
test
pop
jmp
(bad)
aad
mul
enter
dec
stos
jbe
test
test
out
call
xchg
repnz
test
mov
nop
in
pop
aad
mov
or
sub
iret
(bad)
in
sub
or
pop
push
mov
out
lahf
out
cs
cmp
xchg
addr16
xor
fldcw
int3
movs
sub
add
add
mov
mov
cmps
cmp
jae
mov
pop
xor
adc
fwait
pop
xchg
out
jecxz
xlat
add
inc
out
sahf
inc
fist
sub
jl
adc
inc
dec
dec
into
xlat
shl
loop
test
leave
sub
pop
sbb
mov
push
sbb
iret
daa
jne
sub
popa
test
lock
sbb
sahf
xchg
mov
dec
push
xchg
fwait
stos
clc
xor
mov
(bad)
ficom
pusha
rcr
pop
sub
adc
cmps
shl
lods
retf
mov
in
ret
pop
xor
xchg
inc
jmp
sub
cmp
dec
pop
mov
lahf
repnz
jp
mov
mov
sbb
adc
dec
addr16
or
(bad)
mov
mov
repz
imul
xchg
scas
test
cmp
pusha
test
inc
inc
xchg
or
adc
retf
(bad)
out
scas
sub
pop
and
(bad)
stc
jp
mov
xchg
stos
and
dec
add
mov
aas
iret
xor
ret
ret
pop
cmp
aaa
test
push
sbb
cmp
shr
stc
inc
mov
pop
sahf
fidiv
dec
nop
sbb
inc
lods
lods
mov
ficomp
ret
lods
and
out
je
es
or
ds
mov
push
fwait
adc
stc
add
sub
add
call
inc
stc
lds
mov
jb
cdq
jl
push
inc
xchg
in
je
add
jge
xor
ret
inc
movs
fimul
(bad)
mov
movs
fwait
push
(bad)
mov
lahf
stos
fistp
sbb
ror
push
pop
or
retf
mov
and
stos
scas
mov
je
cmp
or
adc
jl
shl
outs
pushf
enter
fdiv
mov
jb
cs
mov
call
stos
out
ja
fwait
dec
std
cdq
mov
imul
das
push
pop
and
fst
es
sub
lods
xor
push
scas
xchg
xchg
add
jb
ror
sub
fdivr
xchg
test
lods
mov
hlt
push
shl
(bad)
fadd
and
je
adc
jnp
pop
adc
js
push
and
in
ins
add
loopne
cwde
popa
adc
pop
or
shl
test
jmp
or
(bad)
cdq
xor
sub
jle
jmp
jb
call
test
fisttp
adc
mov
neg
jp
mov
or
rcl
pop
mov
imul
jne
xchg
out
aad
test
push
pop
and
test
or
pushf
mov
cmp
sub
dec
mov
inc
jg
les
cmps
add
fbld
jns
add
repz
xchg
sbb
popa
fsubrp
or
push
sbb
sbb
mov
add
or
xlat
jmp
mov
out
not
xchg
dec
lods
mov
inc
mov
(bad)
pusha
test
pop
xor
sbb
push
out
frstor
dec
pushf
je
icebp
sub
iret
xchg
pop
std
cmc
and
int
sub
sub
or
pusha
inc
jp
adc
pop
adc
stos
ins
xor
pop
out
test
shr
pop
and
add
mov
push
cmp
xchg
adc
lock
scas
adc
fistp
sbb
jns
imul
pop
jno
jl
mov
push
xchg
push
enter
pop
push
shl
sbb
in
pusha
lahf
jmp
imul
out
stos
cmp
adc
test
mov
cmp
repnz
fnstenv
mov
jae
mov
fimul
dec
dec
clc
adc
cmc
jl
mov
fstp
add
sub
and
adc
lods
jae
jle
add
fcomp
cli
in
xor
or
mov
cmp
push
push
and
push
ficomp
dec
jbe
xlat
loop
mov
add
xchg
ins
test
mul
in
inc
clc
pop
xor
cs
scas
mov
inc
push
ja
mov
call
mov
pushf
jne
mov
mov
js
ja
fmul
cmc
push
inc
ja
jp
mov
jb
sub
call
sub
lds
(bad)
dec
jnp
push
lods
sahf
(bad)
push
outs
push
push
pop
add
or
out
and
out
pop
lods
shr
iret
mov
inc
stc
mov
test
ror
sbb
add
adc
xor
dec
xchg
mov
push
adc
es
cmp
xor
das
pop
fisubr
(bad)
enter
mov
cmps
cmp
jnp
popa
jle
retf
fs
jg
pusha
push
jle
das
xchg
inc
clc
xlat
das
jne
iret
xchg
xor
and
loop
push
cdq
aas
retf
imul
push
mov
and
or
jnp
adc
push
add
mov
mov
repz
mov
pop
inc
repnz
es
fwait
retf
repnz
scas
xchg
cwde
xlat
dec
aas
arpl
ss
cmp
cmp
or
daa
bound
je
js
fdiv
lea
jmp
push
clc
fs
enter
or
dec
ror
or
sub
mov
loop
repz
push
mov
adc
jbe
mov
push
pop
adc
jo
pop
stc
aaa
scas
dec
mov
dec
mov
or
hlt
aaa
mov
sub
add
cld
xchg
outs
push
leave
icebp
jae
test
ret
stos
ret
test
nop
in
push
out
mov
imul
cmp
add
mov
add
imul
xchg
call
mov
adc
lahf
push
in
repz
push
repz
add
iret
(bad)
aam
scas
dec
and
movs
push
push
adc
rcr
xor
std
pushf
(bad)
(bad)
push
and
push
or
(bad)
xor
sbb
mov
inc
dec
retf
or
movs
mov
gs
and
cs
inc
mov
dec
mov
fbstp
pop
movs
sub
fiadd
sti
inc
arpl
inc
xor
or
adc
stc
fistp
cmp
mov
dec
ja
(bad)
jnp
scas
jmp
add
inc
rcr
jmp
ds
in
pusha
inc
shl
cmp
xor
or
jl
pop
pop
mov
jb
jb
outs
icebp
leave
ins
mov
fwait
jns
xor
pop
sbb
rcl
outs
pusha
add
jg
mov
cmp
xchg
push
jmp
inc
push
xor
js
cdq
ret
push
xchg
stos
inc
dec
dec
call
in
out
dec
mov
xchg
jge
mov
daa
inc
fdivr
adc
xor
sub
movs
fistp
into
sub
mov
stos
mov
loope
cmps
push
mov
push
cmps
jno
push
repz
xchg
pop
daa
out
pusha
xor
sbb
cmc
test
fistp
push
push
pop
push
clc
test
add
jmp
and
mov
xchg
sti
test
cmp
pop
xor
imul
sub
test
adc
mov
cmp
imul
cmc
out
cmp
push
neg
or
retf
int3
sbb
jecxz
cld
jnp
xor
add
xor
retf
push
cmc
push
pushf
jmp
jp
adc
xchg
fcomp
lahf
jbe
dec
or
ja
or
pop
ret
int
mov
push
sub
jo
and
ins
loopne
xchg
das
adc
dec
jmp
enter
inc
sbb
outs
repz
add
cs
ss
imul
lods
and
mov
xor
(bad)
icebp
dec
sub
inc
push
inc
in
ja
or
clc
fcomp
xor
mov
(bad)
mov
xchg
jmp
mov
jno
xchg
ss
adc
dec
es
fistp
mov
int3
mov
sub
sub
cwde
imul
mov
les
mov
jle
dec
bound
mov
xor
cmps
xlat
xor
cwde
jo
mov
icebp
scas
mov
ins
or
sub
sub
cs
push
aam
das
(bad)
aad
js
nop
mov
add
mov
sub
sub
shl
adc
xchg
and
out
mov
test
rol
sub
mov
movs
xor
xchg
cmp
test
jp
bound
enter
cmps
sahf
pop
mov
xchg
retf
scas
popf
jae
mov
lock
cmps
sbb
aam
adc
add
ss
inc
jnp
lea
add
(bad)
arpl
push
or
mov
pop
dec
cmp
and
scas
je
cli
stos
mov
ins
mov
ds
mov
sar
rol
or
xor
or
mov
lahf
scas
pusha
lock
mov
cmp
ds
les
test
ss
sub
rep
sub
imul
cmps
inc
loope
push
sbb
mov
lea
jb
std
adc
cmp
out
jne
sub
popa
fimul
mov
push
pop
cli
repz
cmc
out
fsub
sbb
push
xchg
outs
dec
inc
jle
jl
movs
idiv
lds
hlt
test
add
aad
test
(bad)
into
jno
and
adc
sub
pop
cli
jns
ffreep
inc
inc
sub
scas
fild
xchg
call
xlat
fs
iret
xor
aam
popa
aam
leave
nop
push
sbb
dec
add
lods
jp
sbb
push
lods
fst
adc
repnz
dec
and
inc
adc
add
sbb
push
or
sub
push
or
mov
xchg
test
push
dec
xor
cmp
jno
loopne
inc
inc
dec
(bad)
cmc
jbe
movs
mov
mov
hlt
sub
adc
in
pop
ins
repnz
cmc
mov
add
fcom
call
push
mov
push
test
(bad)
push
retf
cmc
dec
clc
pop
out
mov
inc
xor
xor
push
add
jge
jl
inc
dec
and
call
cmps
outs
mov
add
arpl
loop
mov
sti
ins
push
xchg
cwde
stos
cmp
pop
xchg
lods
repz
ss
xchg
dec
push
cmp
mov
xlat
xchg
mov
repz
push
loop
jnp
ret
outs
xchg
sbb
add
lock
mov
div
push
sti
call
jg
dec
and
mov
clc
stos
(bad)
cli
shr
fsub
push
cmp
or
pop
sub
retf
movs
in
mov
adc
loope
inc
mov
mov
mov
push
rcr
mov
fsub
ss
shr
sub
and
and
std
sar
cmp
pop
mov
call
fdivr
and
xor
mov
add
or
imul
add
mov
data16
and
out
inc
xor
aad
iret
adc
inc
adc
and
push
add
popf
mov
ds
inc
jae
scas
lods
add
pop
je
pop
push
inc
or
ds
xor
lea
sbb
retf
ss
dec
add
repz
or
sub
xor
push
push
ins
int3
push
clc
clc
dec
shl
arpl
stc
sub
aas
arpl
ins
or
int3
pop
movs
xor
jecxz
js
popf
fld
movs
mov
mov
fisttp
pop
rcr
call
dec
fimul
sub
push
inc
add
popf
iret
cmp
mov
ret
jo
and
mov
popf
sahf
mov
adc
and
mov
loope
or
xor
mov
inc
lock
stos
push
mov
add
pop
mov
mov
aaa
neg
push
shl
xchg
pop
sbb
mov
arpl
push
pushf
pusha
sbb
inc
sub
ret
cld
cdq
sub
dec
inc
repz
lahf
mov
sub
pop
jmp
pop
es
jo
jl
sbb
imul
jno
fsubp
inc
imul
mov
pop
in
jecxz
sti
movs
mov
dec
out
jmp
pop
fnstsw
push
icebp
dec
jmp
shl
xchg
hlt
ret
bnd
push
push
clc
jg
or
mov
mov
lea
or
sar
sub
or
cmp
cdq
bound
jecxz
push
jmp
movs
scas
inc
cmp
out
dec
push
xor
dec
arpl
fwait
cdq
xchg
xchg
and
jbe
cmp
jp
pop
mov
dec
inc
mov
pop
push
jno
sar
cmp
and
fisttp
mov
xor
mov
jns
jp
sbb
icebp
xor
and
je
in
xchg
xchg
cmp
fsubp
scas
ffree
cmps
imul
mov
jecxz
inc
inc
pusha
pop
in
test
xchg
in
sub
sub
mov
pop
mov
or
jl
mov
jecxz
mov
pop
call
scas
push
int
add
xor
sbb
rol
mov
jb
xchg
je
xor
mov
add
(bad)
sub
xchg
loope
cmp
mov
or
mov
sub
push
cmp
inc
jnp
jmp
xor
les
jp
int3
cmps
jmp
inc
xor
addps
aam
scas
xor
and
or
sahf
push
mov
dec
sub
ror
iret
addr16
leave
dec
mov
sub
or
ins
sbb
sti
dec
and
imul
int
mov
dec
push
mov
dec
jo
stc
test
or
pop
or
arpl
cmp
dec
rcr
cmp
daa
sti
and
adc
ja
imul
loope
pop
shr
ds
mov
mov
lock
cld
cmp
sub
arpl
iret
sbb
adc
add
push
les
add
call
call
fwait
inc
and
sub
shr
jg
sbb
xlat
or
inc
rol
mov
adc
xchg
jge
call
add
push
sbb
xchg
jae
sbb
push
xor
jp
sbb
push
mov
enter
lea
push
test
in
jmp
jmp
sbb
lods
into
mov
sub
in
imul
inc
into
push
clc
lea
fistp
inc
push
popa
pop
adc
repnz
xor
icebp
push
in
pusha
not
das
mov
or
mov
fs
dec
sbb
popf
sbb
mov
xchg
sub
mov
jmp
je
pop
fwait
push
push
iret
lea
imul
out
pop
pop
push
fisub
mov
pop
(bad)
test
test
(bad)
cmc
adc
int3
mov
xlat
or
sbb
iret
in
pushf
and
mov
mov
sub
pop
adc
or
in
addr16
pop
jne
inc
sbb
out
(bad)
loopne
adc
cmps
sub
outs
adc
movs
popa
xchg
test
and
outs
or
cmp
inc
push
in
dec
(bad)
outs
xchg
inc
arpl
test
or
icebp
and
lea
mov
mov
or
xlat
or
icebp
cwde
push
shl
cwde
mov
dec
jno
and
mov
retf
clc
jno
aas
fsubr
ret
or
inc
xchg
loop
pop
push
push
mov
test
loop
push
ins
dec
pushf
test
mov
rcl
ins
(bad)
ss
call
fwait
cwde
iret
mov
fisub
outs
popf
ss
in
fiadd
sub
out
ror
mov
aaa
mov
ficomp
and
shl
mov
mov
pop
std
xchg
in
sub
pop
rep
popa
les
sub
inc
mov
cmp
pop
mov
shl
dec
jmp
mov
gs
adc
add
ins
popf
jmp
data16
fwait
mov
adc
sti
inc
pop
jle
lahf
enter
inc
shl
or
sub
mov
cld
scas
mov
(bad)
adc
sub
mov
fwait
repnz
test
sbb
sbb
call
xchg
mov
push
leave
into
push
cmc
sbb
and
jo
add
push
mov
mov
lahf
dec
mov
adc
adc
push
push
xchg
add
imul
mov
ror
xchg
or
sub
sbb
mov
sub
dec
aad
jns
mov
dec
leave
(bad)
hlt
mov
aam
push
cmp
mov
fadd
fstp
stos
cld
mov
mov
inc
imul
ja
idiv
and
jno
sbb
and
lods
add
gs
daa
xchg
or
mov
ds
loopne
add
inc
dec
pusha
xor
sub
aam
sub
add
int
inc
xor
stc
push
pop
xchg
lahf
and
cli
push
inc
in
xor
(bad)
test
ja
mov
inc
pushf
and
mov
mov
js
mov
scas
xchg
lahf
mov
cmp
xchg
mov
sbb
adc
xor
jno
xchg
cmp
cmp
cmc
dec
xor
cdq
ins
fadd
sub
enter
test
jb
test
mov
inc
rcr
test
fsubr
js
mov
dec
mov
xchg
nop
scas
(bad)
rcr
aad
mov
clc
and
jg
and
std
sbb
out
sub
in
dec
hlt
xchg
cmp
iret
rol
call
push
fidiv
xchg
lods
or
sub
fsubr
and
cmp
pusha
push
loope
inc
push
jmp
sbb
addr16
sbb
out
cwde
inc
push
add
aam
iret
xchg
(bad)
in
push
out
jo
sbb
jno
out
and
pop
paddb
ds
dec
lahf
movs
push
enter
rcl
push
and
clc
sbb
dec
mov
neg
in
jbe
shl
and
in
retf
push
sbb
rcl
sub
jl
sub
sbb
es
in
aas
test
fisubr
adc
mov
aad
scas
push
pop
cmp
jno
jle
sbb
or
pop
push
movs
pop
cdq
mov
xor
sahf
jg
push
sti
repz
pop
sub
jo
push
movs
sar
dec
idiv
jno
in
cdq
mov
sub
pop
fisubr
pop
(bad)
cdq
addr16
xor
loopne
mov
mov
push
lds
retf
inc
test
or
inc
ja
sub
push
cmps
mov
loopne
cwde
sar
lds
(bad)
in
push
pop
and
push
mov
inc
mov
lahf
rcr
(bad)
test
push
mov
mov
nop
and
sti
sub
dec
or
and
aaa
aam
shr
push
mov
movs
or
fdiv
scas
lds
mov
jbe
pop
ins
add
fucom
cmp
sbb
jge
bnd
and
lods
scas
das
dec
outs
stc
push
test
(bad)
push
or
add
cmp
scas
dec
sbb
cmp
sub
dec
in
xor
cmp
mov
rcl
pop
pop
sub
div
pop
cmc
cmp
repnz
adc
dec
sahf
sub
xchg
loopne
pop
push
jp
cwde
push
push
xchg
dec
dec
and
push
jnp
mov
or
icebp
pop
sbb
xor
sub
sub
cmp
imul
call
outs
pop
cwde
out
or
shl
dec
sbb
push
aam
sub
xor
mov
sub
ja
and
or
xor
push
jmp
movs
ds
push
nop
sub
mov
pop
lods
or
addr16
and
adc
xchg
xor
jb
cmps
inc
cwde
or
popa
jns
cmp
xor
add
imul
in
aaa
and
dec
pop
pop
pop
cli
or
jp
mov
and
(bad)
mov
out
mov
(bad)
shr
imul
adc
jnp
aaa
frstor
xchg
or
add
in
pop
call
out
and
les
data16
and
mov
pop
xor
jo
test
jnp
xor
in
out
inc
push
ds
leave
pop
xchg
sub
adc
jo
int
or
jns
int
push
cmp
adc
or
sbb
loop
dec
lods
das
les
les
fwait
sar
or
into
jle
xchg
out
mov
add
(bad)
int
xor
lods
inc
mov
mov
or
xchg
mov
inc
fadd
add
and
popf
xlat
nop
iret
ficomp
xor
in
pop
loop
jl
mov
add
adc
cmp
lea
data16
imul
jp
imul
sbb
fst
popa
jb
sar
mov
jmp
lea
jo
jmp
inc
mov
loop
loopne
ins
adc
mov
jnp
jp
mov
rcr
and
repz
jne
(bad)
mov
mov
xchg
clc
sbb
inc
(bad)
pop
shl
(bad)
iret
xchg
and
push
mov
jnp
fstp
and
cmp
stos
movs
add
into
out
sbb
cmp
mov
mov
or
retf
(bad)
popa
and
in
fcmove
cmps
les
fst
fstp
sub
add
imul
out
sbb
mov
or
aas
xchg
mov
aas
xchg
push
fmulp
enter
dec
cmp
test
shl
jb
sbb
rol
or
pop
retf
in
pop
test
pop
call
or
adc
sbb
jb
into
mov
ja
add
mov
xor
inc
sar
xchg
mov
dec
and
ror
inc
bound
xor
repnz
mov
mov
fsub
add
cli
jbe
fisubr
jo
mov
dec
add
imul
rcr
daa
ror
push
repnz
inc
pop
adc
rcr
cmp
aam
xchg
hlt
jne
gs
clc
test
(bad)
cs
mov
fisttp
mov
fcmove
shl
cs
js
(bad)
jns
cdq
sub
std
sahf
cdq
and
pop
js
in
inc
jge
jne
xlat
pop
mov
cs
imul
lahf
ret
leave
or
xor
in
mov
xchg
cmp
mov
movs
loop
cli
dec
mov
adc
scas
jo
(bad)
sbb
scas
in
rcr
push
test
mov
ror
popa
movs
sub
mov
fbld
fnsave
mul
in
in
jmp
ret
clc
adc
retf
call
addr16
xchg
xchg
ins
cmp
jae
mov
xchg
lea
or
shr
inc
xchg
sbb
ins
jbe
jg
mov
ja
sub
sub
jge
call
ror
or
lock
out
adc
inc
xor
(bad)
or
ror
out
frstor
(bad)
es
mov
cmp
sbb
enter
pop
loop
stos
clc
rcl
sub
xchg
mov
jno
inc
outs
pusha
retf
addr16
fisubr
cld
or
pop
daa
inc
loopne
in
aaa
mov
(bad)
lock
imul
outs
xchg
fldenv
mov
xchg
(bad)
loop
dec
xor
dec
add
in
xlat
js
push
aas
sbb
shr
or
loopne
adc
shl
mov
pop
mov
out
in
or
lds
adc
pop
adc
cs
jg
in
cmp
mov
daa
mov
xor
popa
dec
addr16
cvtps2pi
out
sub
gs
mov
mov
test
lea
sbb
inc
shr
xor
sub
rcl
mov
hlt
or
cdq
add
mov
inc
mov
mov
es
cmp
sahf
fadd
pop
dec
les
mov
mov
outs
pop
adc
ds
and
inc
xchg
inc
add
cwde
scas
mov
stos
push
jle
les
cmp
addr16
hlt
fs
add
pop
loope
addr16
pop
dec
aaa
xor
popa
jge
mov
test
cs
daa
mov
popf
mov
test
sbb
inc
test
fsubr
leave
test
pop
jmp
dec
pop
jnp
or
in
rol
pop
mov
cdq
sub
add
shl
das
dec
test
inc
cmp
add
mov
mul
dec
jb
fwait
mov
inc
pop
ins
push
push
aas
test
push
in
inc
jge
jecxz
sar
fidivr
push
push
dec
add
and
jp
call
xor
and
dec
shl
dec
adc
add
jmp
scas
fnstsw
int3
xlat
xchg
lgs
mov
xchg
sub
push
repnz
fild
test
cmp
mov
out
add
mov
in
pop
mov
retf
sub
push
int3
add
cwde
in
jecxz
popf
scas
mov
sahf
aad
cmp
es
fst
stos
enter
int
cli
xor
pop
test
mov
mov
fwait
ins
popa
pop
lds
jle
mov
ins
fnstcw
popa
mov
sbb
or
jnp
pop
push
ins
xchg
setl
shr
mov
pusha
inc
push
jne
mov
jne
cmp
out
and
mov
daa
movs
outs
cmp
int
or
mov
and
jne
dec
add
cmc
dec
(bad)
int3
pop
cmps
mov
add
jb
addr16
and
push
lea
cmp
xchg
jne
fs
cmps
pop
xchg
xor
outs
add
js
mov
gs
das
retf
movs
cld
hlt
mov
sar
fucomp
in
or
cdq
sbb
or
lea
cmps
mov
add
mov
in
out
shl
int
push
and
mov
imul
cmp
not
push
dec
js
adc
out
int3
xor
or
adc
sahf
sbb
cli
jle
sbb
xchg
pusha
pop
iret
ja
or
das
fcmovbe
aam
lea
test
adc
lds
imul
ins
inc
push
ja
push
lods
jb
test
cld
js
scas
neg
dec
or
lea
cmp
mov
cmp
mov
and
and
lock
ds
in
adc
and
dec
mov
data16
mov
sub
(bad)
in
les
aaa
jbe
add
std
mov
adc
ds
jmp
lods
aad
sbb
cli
rcl
pop
cmp
cmp
pop
(bad)
lea
test
cmc
xor
dec
mov
je
stos
inc
addr16
pop
cmp
pop
xchg
pop
enter
fnstcw
and
sbb
lods
stos
xor
push
loop
fmul
and
push
scas
or
sbb
jno
pop
or
fidivr
outs
lahf
div
and
or
in
pop
pop
es
clc
add
push
add
shr
xor
adc
adc
jae
in
xchg
shr
xchg
loopne
cmp
cdq
cmps
scas
sar
xor
lds
push
popa
enter
scas
imul
pusha
std
ins
sub
inc
or
xchg
mov
inc
jecxz
loope
jo
outs
inc
jl
out
push
test
hlt
aam
pushf
sub
add
adc
call
cmp
or
pop
ins
pusha
(bad)
cmp
fidivr
(bad)
jmp
lods
jg
shl
pushfw
inc
and
cmps
scas
les
add
or
xor
sbb
jmp
lahf
mov
js
adc
cmp
sbb
inc
xor
fwait
cld
add
sub
cmp
jo
fisttp
ds
icebp
mov
pop
movs
mov
inc
mov
das
jbe
movs
jnp
data16
(bad)
sub
xchg
and
call
sbb
in
pusha
cmp
sbb
(bad)
shl
jne
repz
shr
jo
push
in
push
push
fimul
mov
js
cmps
sub
jbe
mov
jle
pop
retf
dec
movs
dec
inc
jmp
pop
icebp
fs
mov
or
sbb
cmp
ret
push
inc
test
push
nop
es
mov
add
mov
aam
imul
retf
push
mov
imul
int
jp
outs
idiv
test
jno
inc
dec
mov
xor
sbb
xor
xchg
ja
lea
aad
adc
and
lods
pusha
shr
(bad)
js
clc
push
pusha
mov
push
sbb
mov
pop
ret
retf
add
mov
shr
(bad)
sbb
push
push
in
push
mov
test
rcr
out
mov
jp
push
aas
jecxz
pop
mov
pop
sbb
pop
sbb
push
and
cmps
mov
inc
sbb
(bad)
mov
lahf
outs
jmp
int
sub
pop
sti
sub
dec
mov
sti
xchg
fxch
xchg
or
mov
add
dec
lds
push
fdiv
jle
aad
cli
push
inc
adc
lahf
imul
mov
std
shl
cmp
mov
add
movs
jns
fistp
adc
in
inc
push
cmp
sti
push
xchg
dec
aaa
stos
test
jp
gs
inc
pop
sar
pop
xor
cmc
lea
bound
in
jp
adc
inc
xor
jl
dec
int
fist
and
jnp
jmp
(bad)
pop
stc
cmp
xchg
lahf
int
push
jmp
dec
mov
cmc
dec
mov
or
xor
mov
nop
out
lods
iret
or
ss
popf
ror
pushf
lods
mov
pop
sub
movs
jmp
mov
sub
or
xchg
mov
push
ret
rcl
pop
and
mov
shr
hlt
jge
cmps
xchg
sub
test
fwait
xchg
in
add
push
xor
sub
mov
repnz
fsubr
fcmovnbe
stc
fcomp
std
sbb
xchg
dec
(bad)
stos
sar
jb
stc
dec
fwait
addr16
sti
jmp
js
sar
(bad)
lods
movs
push
stos
sbb
pop
sub
xchg
shl
sub
xor
stos
aaa
mov
std
out
scas
xchg
push
sub
add
xor
jbe
lds
int
into
loopne
dec
ss
add
(bad)
mov
cmp
push
jbe
jp
pop
sbb
jmp
es
(bad)
fisttp
jecxz
lds
aam
(bad)
bound
out
xor
or
in
pop
cmps
nop
and
cmc
aas
and
cli
cmps
add
sbb
test
add
xor
jp
cdq
fadd
push
and
pop
xchg
pop
bound
jmp
call
add
ret
loop
ins
dec
pop
iret
dec
mov
inc
push
out
lods
sub
in
push
cmp
mov
and
(bad)
sti
mov
cmp
arpl
sahf
cdq
mov
add
shr
rcl
cmc
push
rol
xchg
xchg
stos
xor
or
add
xchg
(bad)
adc
sti
movs
dec
push
es
out
clc
cmps
pop
int
pop
push
(bad)
aam
xor
sti
movs
mov
hlt
jae
aaa
sub
mov
pop
stc
or
mov
mov
pop
push
xor
fisub
cmc
neg
or
ficomp
xor
and
cmp
test
pushf
xor
aaa
dec
ins
scas
popa
push
cmp
adc
stos
loope
mov
ret
adc
inc
popf
ss
(bad)
icebp
mov
int
pop
xchg
xchg
inc
mov
push
scas
clc
mov
cmp
icebp
xor
sbb
inc
xchg
mov
push
inc
xor
sub
add
mov
test
(bad)
pop
sub
adc
mov
mov
into
dec
sub
xchg
clc
sbb
into
(bad)
ja
sub
sbb
movs
cld
fwait
out
repnz
inc
dec
sbb
cld
adc
shl
pop
in
add
inc
inc
push
and
mov
sbb
and
mov
lea
mov
cmps
cmc
push
sti
xor
test
popf
jb
cmps
ds
in
out
sahf
mov
cmp
mov
mov
sub
(bad)
movs
jl
xchg
inc
shr
cmp
inc
adc
xor
(bad)
jns
loope
fs
aad
jle
div
push
xlat
push
mov
loop
arpl
push
add
add
xchg
sub
aaa
shl
in
repz
rcl
or
cmp
sbb
pop
mov
stos
fst
enter
xor
cmp
sub
ret
cmp
mov
repz
inc
mov
scas
imul
pop
and
pop
jp
cmp
je
ds
sti
ficomp
dec
jno
sbb
retf
les
mov
adc
lods
mov
sbb
inc
pusha
outs
icebp
popf
add
not
pop
call
popf
cmp
ret
cmp
or
sub
(bad)
fwait
test
mov
out
mov
xor
xor
sbb
dec
sub
add
rcl
pop
inc
shr
retf
sub
int
fld
aam
and
dec
sub
sbb
call
or
add
movs
iret
in
dec
jl
jae
xchg
push
pushf
ins
pop
adc
sub
sub
sbb
mov
bnd
xchg
mov
xchg
fld
loop
loop
out
in
lods
dec
add
iret
mov
rcl
add
mov
mov
xchg
sbb
xchg
mov
mov
ret
imul
push
rcr
mov
push
and
outs
repnz
iret
cmp
hlt
adc
sub
sbb
xchg
inc
inc
inc
sbb
test
push
mov
mov
adc
mov
retf
lock
mov
mov
sbb
dec
in
mov
mul
pop
xchg
push
jo
imul
aad
int
dec
sahf
mov
nop
sar
xor
jmp
pop
push
push
fld
call
lock
add
add
ret
mov
lods
jge
or
movs
(bad)
jl
mov
icebp
ds
push
fstp
adc
test
es
fwait
cmps
mov
ss
out
jge
into
cs
xchg
pop
stc
outs
xchg
shl
mov
lahf
test
jle
mov
jb
xchg
sbb
xor
mov
add
int
mov
push
les
jnp
(bad)
aam
aaa
sti
sbb
adc
aas
sbb
cmp
xor
xchg
cmp
and
ret
jno
dec
lods
stos
ror
scas
sub
lds
and
cdq
sbb
lea
or
fadd
not
pop
or
mov
repnz
icebp
popf
and
data16
xchg
cmps
dec
inc
mov
xor
push
aas
sbb
jae
pop
repz
(bad)
repz
js
les
in
mov
sbb
cld
and
mov
lods
addr16
aam
test
js
push
imul
mov
dec
jp
jo
and
sub
pop
mov
lods
out
cmps
jle
mov
adc
push
mov
pop
popf
mov
jle
sbb
xor
leave
(bad)
and
xchg
jno
repnz
sbb
in
loopne
jno
sub
sbb
dec
in
or
or
mov
mov
pusha
js
lds
mov
push
popf
bound
les
addr16
dec
dec
xchg
inc
ss
iret
mov
pop
push
sub
call
int
mov
inc
or
bound
xor
in
add
lea
push
push
mov
sub
pusha
jbe
inc
sub
pop
call
xor
pop
sub
inc
cmp
fmulp
jno
or
cmp
(bad)
push
pusha
fs
mov
adc
adc
lods
adc
xchg
or
mov
loope
mov
test
sahf
sub
dec
mov
jmp
pusha
dec
mov
inc
shl
mov
imul
mov
xor
fwait
adc
adc
dec
icebp
int
je
inc
and
mov
jb
mov
ds
retf
call
es
push
pop
jae
sub
mov
mov
push
fstp
inc
cmps
push
ja
pushf
inc
xor
add
pop
mov
dec
daa
xchg
xchg
in
push
inc
cmp
movaps
ins
aaa
nop
clc
inc
test
arpl
cmc
jp
cmc
and
pop
add
xchg
pop
out
sbb
sbb
mov
pop
sahf
lods
and
xor
pop
push
lahf
mov
ror
and
xor
sub
inc
(bad)
ins
xchg
aam
cmps
jecxz
and
fnsave
(bad)
adc
aaa
xor
jmp
inc
movs
scas
call
cld
es
jo
pop
inc
jmp
mov
pop
add
jle
cmps
mov
and
shl
jno
mov
push
fisubr
pop
clc
push
mov
dec
mov
popf
lods
fidiv
lock
addr16
scas
xor
out
test
adc
out
pusha
mov
xor
gs
pop
or
add
stos
mov
and
pop
stc
cmp
in
fadd
scas
or
dec
push
xlat
mov
push
jb
test
mov
mov
sar
sub
ds
jle
aam
rcr
sbb
adc
xchg
inc
mov
les
and
sub
lods
and
add
test
push
mov
imul
in
push
sub
aaa
xchg
and
mov
mov
and
lods
jns
icebp
jp
add
jge
call
pushw
leave
inc
pushf
add
mov
mov
loope
mov
(bad)
test
mov
jo
push
stos
scas
test
inc
idiv
xlat
xchg
jge
sbb
jp
xor
fisttp
daa
movs
arpl
xchg
jbe
xchg
cwde
jge
mov
jmp
and
mov
push
test
adc
sub
dec
dec
sub
push
fld
mov
shr
inc
stc
(bad)
push
ins
push
fld
movs
repz
adc
jl
int
jp
or
cld
sub
xor
sub
arpl
and
dec
and
cmp
in
aad
cwde
aad
pusha
(bad)
mov
inc
sbb
adc
outs
call
mov
movs
in
fbld
mov
clc
or
xlat
mov
add
pop
push
inc
stos
cmp
js
out
ins
cdq
call
push
push
inc
adc
push
jp
fadd
or
add
adc
or
repnz
adc
sbb
sbb
jge
pop
(bad)
jmp
xor
sbb
inc
pop
(bad)
fidivr
test
inc
xchg
leave
std
cmps
cmp
daa
xor
pop
aam
lods
mov
pop
daa
mul
jecxz
stos
mov
loope
addr16
loop
inc
(bad)
stc
test
xchg
dec
mov
dec
add
jnp
and
jnp
retf
xlat
adc
adc
(bad)
leave
add
add
repnz
lds
bound
xchg
iret
(bad)
(bad)
in
ret
aad
lods
push
ret
neg
mov
inc
dec
or
fwait
pop
cs
idiv
ret
imul
mov
and
(bad)
xchg
jl
push
ins
or
cmp
cli
pusha
inc
lods
or
div
inc
xor
dec
shl
or
nop
loope
addr16
cwde
mov
and
lea
mov
test
adc
je
pop
xor
xor
imul
fs
loopne
ss
jp
stc
fwait
cmps
or
sub
mov
call
and
rol
out
scas
mov
jno
iret
dec
or
mov
leave
scas
cmps
and
bsf
imul
add
stos
(bad)
in
scas
enter
mov
mov
imul
mov
push
adc
jl
push
jnp
int3
push
out
sub
icebp
cmps
scas
scas
sub
js
scas
jns
xchg
xor
jne
pop
popa
aas
movs
rol
pop
out
push
inc
adc
push
dec
and
jp
xchg
shl
push
es
push
adc
scas
inc
jle
jbe
out
std
push
fs
xor
pop
clc
cli
imul
push
mov
cmps
push
mov
or
ret
fwait
pop
jle
fidivr
lds
repnz
div
xor
mov
adc
pop
int
adc
stos
sbb
push
jnp
mov
add
iret
movs
xchg
and
mov
push
ror
sbb
out
inc
sub
jnp
ins
inc
cwde
and
cmc
cs
adc
lds
cdq
fwait
sti
lea
xor
sti
sub
stos
jle
test
fdiv
addr16
cmp
push
call
out
ds
mov
icebp
fsub
jbe
sbb
scas
push
push
mov
scas
daa
je
sub
cli
pop
jg
lahf
and
sub
ins
pushf
jmp
ret
mov
addr16
shl
sub
(bad)
cmp
shr
test
and
and
mov
add
mov
(bad)
adc
clc
jne
jecxz
push
in
retf
inc
push
push
fldenv
and
xor
inc
int
movs
aam
jge
dec
dec
clc
cli
add
jno
lea
outs
mov
xchg
or
popf
or
adc
mul
push
leave
push
cwde
lods
inc
mov
dec
adc
jne
or
cli
cwde
in
icebp
(bad)
push
xchg
in
pop
cmp
out
shr
pop
(bad)
cdq
and
sub
add
mov
test
hlt
pop
nop
sub
jnp
pop
jge
sbb
test
mov
lea
test
xlat
pop
add
xchg
add
sub
jbe
sub
call
xchg
jo
sub
and
shl
mov
retf
test
jne
ss
jns
jge
jp
bound
ret
call
cmps
je
neg
fist
or
cld
fcmovb
mov
mov
jno
xor
mov
jmp
adc
dec
ret
push
add
out
add
push
sti
mov
push
shl
jbe
lds
loope
xor
sahf
mov
loope
jnp
fwait
and
xchg
mov
jae
cmc
call
pop
std
pop
inc
ins
xlat
mov
push
bswap
push
int3
ins
mov
imul
stos
daa
lea
addr16
not
push
adc
ds
call
mov
xchg
scas
mov
mov
movs
stc
push
or
sbb
clc
push
ds
sbb
or
pop
mov
mov
xchg
cs
mov
inc
xor
cmc
add
idiv
add
inc
pop
add
mov
mov
push
fistp
inc
fdiv
bound
jl
loope
int3
mov
out
mov
inc
cmp
mov
in
xor
mov
adc
cld
mov
and
xchg
fs
xchg
das
lock
cmp
inc
out
scas
mov
aad
dec
jns
push
push
jmp
adc
add
push
push
cmp
dec
sti
inc
jle
pushf
jnp
int
adc
xchg
jg
std
repnz
sar
push
xor
iret
aam
dec
test
shr
data16
xor
and
mov
sub
out
stos
sbb
test
add
lods
(bad)
add
enter
dec
dec
rcr
pop
fist
cmp
into
add
sbb
leave
push
push
stos
sbb
mov
mul
data16
sar
cmp
fsubp
jno
(bad)
jmp
hlt
add
inc
and
xor
inc
movs
xlat
sub
xchg
push
mov
push
jg
out
mov
push
ja
push
pop
test
cmp
push
xchg
cmp
inc
push
repz
jg
xor
scas
push
mov
pop
mov
ja
sub
jo
xchg
(bad)
shl
cmc
sub
not
mov
jle
(bad)
aaa
lahf
call
mov
sub
sub
sahf
nop
jg
cli
jns
cli
adc
retf
sub
xchg
xchg
dec
les
ins
and
push
xchg
outs
cmps
xor
arpl
inc
xchg
pop
cmps
jne
pop
iret
mov
cmp
mov
dec
adc
aaa
loop
jg
std
ret
mov
in
movzx
pop
mov
sub
mov
jmp
jle
iret
pushf
into
in
mov
xor
jb
mov
jge
pop
shl
lods
cdq
jmp
stos
fs
or
shl
add
adc
mov
mov
xchg
or
push
mov
lahf
jecxz
shr
adc
xor
fcom
sbb
inc
or
adc
sahf
cmp
adc
nop
push
(bad)
cmp
and
gs
sub
das
stc
inc
fist
mov
pop
pop
sar
mov
and
leave
repnz
test
push
pop
mov
enter
idiv
(bad)
sar
inc
sbb
shl
mov
mov
fwait
pop
bnd
ins
scas
add
inc
push
mov
add
rcr
jg
push
mov
stos
dec
push
mov
mov
mov
add
or
(bad)
pop
sar
cmp
jmp
arpl
popf
or
scas
scas
xchg
push
push
test
push
pop
popa
jno
loop
sub
and
cmp
jle
add
outs
dec
pop
mov
aam
retf
out
xor
mov
xchg
pusha
and
bound
leave
in
loope
cmp
mov
loopne
inc
(bad)
sub
push
xchg
dec
(bad)
outs
mov
sahf
push
cmp
cmp
fwait
adc
popf
push
dec
xor
popa
push
jmp
into
(bad)
or
(bad)
cmc
inc
inc
popa
js
hlt
addr16
je
outs
adc
xchg
push
jne
adc
imul
jnp
daa
push
aam
inc
into
in
push
jle
pop
mov
das
dec
jmp
gs
adc
jno
mov
mov
jne
mov
loop
mov
push
fwait
pop
fdivr
inc
xor
and
and
bound
movups
ins
jge
aas
setle
mov
sbb
mov
mov
popf
scas
shr
add
arpl
stos
test
in
jb
xchg
and
fidiv
mov
cmps
xchg
lea
out
jbe
xor
stos
test
(bad)
cmp
sar
add
call
jnp
jmp
xchg
cs
in
popf
shl
movmskps
shl
test
lock
daa
fld
dec
pop
popf
(bad)
push
adc
push
dec
retf
sbb
push
sbb
ja
les
xlat
dec
or
or
or
fyl2xp1
cdq
test
dec
lods
sar
sub
fbld
and
or
scas
pushf
mov
sti
(bad)
push
cmp
stos
sahf
lds
scas
shl
rcr
add
je
jb
sahf
mov
pop
in
ret
mov
push
add
and
add
popf
add
or
jmp
call
aad
push
test
add
nop
mov
jne
movs
clc
lods
aaa
jmp
jmp
mov
xor
add
jmp
mov
and
xor
(bad)
mov
das
sbb
inc
rol
push
(bad)
in
(bad)
adc
xor
sub
xchg
test
cmp
or
out
pop
faddp
jo
pop
mul
add
sbb
out
mov
jb
jg
adc
mov
mov
popa
push
xchg
xchg
mov
mov
mov
sti
cs
adc
lock
ret
or
mov
adc
sbb
and
out
or
cmc
nop
stos
repnz
retf
test
shr
pop
mov
rcl
mov
or
enter
mov
outs
jmp
aas
jne
repz
stos
inc
out
add
xor
out
xor
call
loope
jae
(bad)
idiv
cmp
jge
push
mov
mov
(bad)
mov
pushf
int3
mov
push
lahf
push
lock
xchg
fwait
outs
push
jl
inc
jmp
adc
fnstsw
fwait
lea
outs
fsub
inc
add
mov
mov
jecxz
jmp
jae
cmp
ds
or
jne
es
(bad)
sub
imul
ins
xor
mov
cmp
inc
dec
lods
mov
add
sbb
dec
adc
inc
aas
push
fmul
push
jl
loopne
adc
popf
cmp
das
push
and
out
jge
(bad)
int3
mov
cmc
ret
mov
xchg
rcr
mov
sbb
add
jle
mov
std
(bad)
(bad)
cmp
lds
mov
xchg
mov
and
pusha
mov
mov
mov
in
dec
xor
add
int
ja
inc
pop
popf
xchg
xor
push
imul
test
sbb
cs
shr
cmp
xlat
fadd
loope
aaa
fist
mov
mov
push
ret
add
popf
push
add
jne
or
mov
sti
pusha
sahf
nop
loopne
aas
(bad)
je
test
add
jmp
cmp
adc
push
jl
jp
shr
and
pop
or
loopne
mov
test
xchg
cld
fisubr
mov
(bad)
in
imul
fdivr
mov
test
fisubr
xor
cli
mov
mov
lea
dec
nop
out
arpl
inc
aas
aad
test
and
pop
lahf
xchg
mov
xchg
into
inc
xor
pop
jne
dec
mov
inc
pop
repnz
js
dec
xchg
or
jl
xor
adc
jnp
cmp
sub
lahf
push
push
div
jnp
push
push
in
pop
xchg
mov
mov
retf
mov
mov
mov
and
adc
xchg
xor
out
mov
sbb
adc
jne
xor
xor
repnz
cmp
loope
ins
mov
dec
add
xor
ins
mov
push
sbb
mov
sbb
test
sbb
add
retf
pop
pop
xor
push
xchg
repnz
jg
lahf
mov
out
xor
mov
or
rcr
jnp
xchg
je
cmp
movs
not
test
gs
and
rcl
rcr
fsub
or
jno
jmp
(bad)
ret
scas
mov
loopne
in
into
xchg
inc
out
cmp
and
cmps
aam
call
lock
stos
repnz
int3
lea
jecxz
push
jg
and
jne
mov
cwde
xor
jno
inc
call
hlt
pop
mov
idiv
sub
retf
push
ror
hlt
jno
adc
adc
repnz
and
add
or
mov
jge
out
or
mov
adc
sbb
push
xchg
mov
out
popa
arpl
lds
enter
push
in
inc
mov
mov
cmp
cmp
push
inc
movs
dec
ret
push
jo
stos
xor
jnp
dec
mov
pop
(bad)
mov
inc
inc
push
loopne
aad
pop
fisub
jmp
call
sub
sbb
stos
mov
push
ss
lock
lea
repz
out
mov
cmp
push
inc
pop
sbb
push
imul
sbb
sbb
fisttp
movs
adc
and
dec
push
das
out
add
xor
jmp
movs
inc
cmps
in
push
shl
out
or
je
mov
popf
(bad)
leave
aad
adc
je
cmp
test
pop
outs
inc
cvttps2pi
int
jl
cwde
jae
pop
imul
(bad)
(bad)
jg
int
stc
dec
call
cmp
dec
adc
mov
sahf
dec
dec
cmp
lds
imul
loopne
retf
push
gs
(bad)
dec
jp
cli
retf
and
push
outs
pop
gs
jne
data16
inc
xchg
push
cmps
jo
jge
jno
test
inc
popa
mov
mov
sti
push
mov
movs
jp
jmp
fs
jl
mov
das
inc
fs
pop
jmp
test
pop
icebp
ins
jmp
call
inc
jb
scas
lods
add
jno
lahf
jle
int3
stos
push
mov
add
ror
xlat
cmp
pop
leave
ja
js
and
and
clc
sub
aas
mov
jb
in
fisttp
jp
cmc
std
fwait
mov
jle
enter
and
add
aam
lods
arpl
xacquire
lea
push
ins
(bad)
mov
mov
inc
xchg
mov
loope
repnz
jmp
sub
xor
aad
cld
pop
das
mov
loope
sub
ja
mov
inc
jo
arpl
es
mov
(bad)
fnstenv
inc
push
aad
jmp
adc
ret
mov
out
or
out
les
xchg
ret
es
fimul
das
imul
mov
retf
addr16
mov
jb
(bad)
icebp
fldenv
je
or
push
xchg
ficomp
aas
inc
xchg
ror
popf
dec
outs
fsubr
add
push
adc
pop
add
jns
and
xor
(bad)
ins
clc
jg
pusha
pushf
scas
xchg
mov
add
dec
inc
mov
push
inc
pop
fsubr
(bad)
adc
xor
or
cwde
lahf
dec
pushf
mov
jno
dec
aam
retf
and
sub
in
push
rcr
inc
test
jl
jmp
and
pop
mov
mov
retf
sub
push
mov
push
xor
and
leave
add
sti
jg
out
cld
xor
pop
push
cmp
in
out
sti
ja
mov
push
in
std
out
sbb
jnp
mov
xchg
out
popf
adc
pushf
jno
icebp
pop
pop
dec
cwde
jecxz
pop
fsubp
loopne
mov
sar
xor
dec
pop
sub
out
adc
adc
mov
sub
jns
add
test
out
mov
test
or
cmp
stos
aam
test
ficom
pop
sub
push
push
or
ds
mov
shl
inc
pop
or
push
xor
sbb
rcl
(bad)
call
arpl
(bad)
dec
cmps
pushf
popf
adc
dec
sbb
cld
adc
cs
xadd
rcr
ds
lea
rcl
loopne
jne
push
in
push
pop
cmp
and
lds
inc
mov
in
xor
lods
mov
pop
push
test
ins
mov
fistp
jle
sbb
outs
sbb
xor
ins
movs
mov
or
cmp
outs
rcl
push
push
mov
xor
mov
into
movs
jnp
or
aad
fnstcw
(bad)
and
adc
leave
into
ss
jb
add
sub
call
mov
add
not
and
test
jmp
pop
stc
pop
in
mov
mov
nop
cdq
lock
adc
jle
scas
add
frstor
imul
xor
sub
mov
int
jmp
int3
int
rol
popa
outs
fisttp
std
cmp
imul
lahf
jb
iret
push
(bad)
ds
push
xor
xor
dec
mov
jbe
cmp
jp
(bad)
mov
mov
mov
inc
xor
or
stos
dec
dec
fwait
stos
aas
shr
mov
test
and
test
fisttp
mov
cld
xchg
jmp
mov
pop
dec
sub
xchg
aaa
push
and
(bad)
(bad)
sbb
sub
add
fdiv
push
ins
cwde
(bad)
sub
xchg
fist
dec
adc
jl
mov
stc
xchg
push
push
pop
sbb
xor
es
cmp
sub
mov
gs
scas
mov
cs
add
fwait
dec
test
xchg
(bad)
ss
loope
push
out
js
leave
pop
test
movs
psrld
fwait
adc
cmp
pop
xchg
cdq
xchg
cs
adc
nop
xchg
in
xchg
jle
sub
out
jmp
xor
(bad)
mov
retf
shr
jo
(bad)
int3
jg
ror
dec
inc
dec
jo
sub
dec
cmp
xor
mov
scas
gs
xchg
mov
cmp
arpl
daa
cs
mov
daa
ins
(bad)
imul
call
sub
xor
xor
loopne
(bad)
out
retf
std
or
mov
inc
jno
repnz
aad
(bad)
mov
sub
adc
mov
sbb
push
sub
or
rcr
jmp
cmc
sysexit
push
outs
jecxz
ins
lock
ret
mov
outs
add
data16
jne
out
dec
scas
add
xchg
sub
loopne
and
adc
mov
repz
test
sbb
mov
test
jo
mov
clc
cs
adc
or
push
sub
and
sub
sbb
(bad)
jb
clc
mov
mov
cmp
mov
loopne
push
mov
imul
(bad)
ret
mov
ins
and
cdq
in
(bad)
shr
rcl
aad
gs
mov
hlt
mov
push
shr
rol
push
cmps
leave
sahf
sub
jmp
and
pop
stos
leave
or
push
shr
dec
into
(bad)
int
xchg
mov
(bad)
cli
fistp
push
in
repz
jnp
test
pusha
cdq
lods
sub
scas
jo
outs
lods
dec
out
mov
mov
inc
push
mov
(bad)
cmp
push
mov
mov
jb
pop
mov
add
cs
movs
mov
mov
mov
inc
mov
enter
jge
sub
mov
es
mov
fs
push
or
fwait
hlt
xor
adc
sbb
pusha
outs
sti
push
mov
movs
fisttp
adc
jge
sbb
js
jle
pusha
pop
mov
out
test
add
dec
es
cld
sbb
popf
movs
pusha
xchg
pop
mov
push
or
mov
mov
add
enter
out
xor
lea
addr16
mov
or
gs
call
imul
mov
shl
add
pushf
sub
leave
push
(bad)
mov
cmp
push
adc
loope
fstp
call
jmp
pushf
pop
add
pusha
ins
inc
out
out
imul
sub
jp
mov
test
mov
sub
adc
adc
ss
fcom
outs
jbe
iret
cmps
push
xor
dec
pop
push
sahf
in
jbe
jnp
xor
pop
int3
add
xor
mov
out
jno
mov
inc
xor
inc
in
push
mov
bound
add
cld
(bad)
mov
pop
jl
scas
(bad)
std
mov
and
enter
push
ins
push
inc
dec
fisttp
jge
std
hlt
cmc
imul
fwait
xor
vmovaps
xchg
xor
repz
mov
retf
xlat
mov
jo
adc
cvtps2pd
add
cli
jne
ror
jb
ds
adc
adc
and
mov
(bad)
in
inc
xchg
push
loopne
dec
pop
rol
mov
mov
sbb
and
mov
out
out
dec
fs
push
loop
xor
and
repz
mov
pushw
cli
leave
xchg
mov
inc
xor
push
sub
cwde
mov
cmp
xor
jae
jge
loopne
loop
cmp
dec
stos
mov
sbb
popa
ins
cs
mov
fcomp
push
jbe
(bad)
push
add
and
(bad)
rcr
mov
lds
and
daa
loop
nop
test
xchg
mov
ins
cmovae
or
int3
inc
or
arpl
mov
mov
pushf
inc
scas
add
mov
push
mov
les
scas
push
mov
adc
cli
dec
add
clc
mov
std
test
popa
cmp
sub
mov
pop
out
bound
mov
(bad)
shl
cmp
pop
xor
mov
adc
xor
test
inc
and
into
jb
fisttp
xor
pop
jmp
lahf
outs
push
nop
dec
pusha
mov
xchg
pop
sub
lea
mov
fucom
ret
push
int3
leave
push
dec
rcl
add
ret
mov
dec
mov
mov
and
cld
push
add
mov
sub
jp
and
cmps
jae
add
mov
scas
aam
int3
iret
mov
out
pop
pop
fwait
cmc
movs
and
das
aam
or
jmp
adc
(bad)
jae
mov
or
push
outs
cmovbe
and
addr16
outs
or
cmc
movs
inc
add
fstp
mov
inc
xchg
scas
cmp
lock
sub
mov
movs
in
les
mov
fbstp
adc
xor
stos
dec
jp
pop
mov
push
xchg
xor
aas
xchg
mov
xchg
ins
mov
imul
xchg
push
jns
in
dec
mov
xchg
retf
call
icebp
aam
fucompp
pop
add
aaa
dec
hlt
sub
jne
ror
js
mov
loopne
out
dec
(bad)
adc
and
stos
sbb
inc
and
ja
(bad)
and
aas
fldenv
and
push
rcr
out
sbb
je
cmps
dec
hlt
push
enter
je
inc
pop
push
mov
pop
ret
cmps
push
dec
mov
mov
xchg
js
sahf
and
inc
lds
xchg
mul
mov
jnp
adc
mov
pop
in
lods
fwait
mov
(bad)
mov
jne
pop
into
jle
inc
push
adc
jl
loope
mov
mov
leave
mov
mov
pop
inc
cmp
mov
xor
push
mov
mov
mov
test
lods
lock
push
push
pop
push
pop
lods
xor
mov
jno
xor
out
inc
sbb
leave
imul
(bad)
pushf
test
mov
icebp
sub
addr16
div
in
cmp
ins
(bad)
daa
sbb
jp
dec
dec
stos
jns
xchg
ja
fsub
mov
cmp
sbb
or
fnstenv
dec
cmp
sbb
xor
jmp
mov
aas
test
test
test
out
jmp
cli
or
sbb
xchg
test
jle
jle
dec
cmp
sbb
cmp
jmp
or
mov
mov
cmp
pop
inc
jle
dec
cmp
sbb
je
dec
cmp
sbb
cmp
sbb
jg
dec
cmp
sbb
cmp
cmp
mov
cmp
bound
push
dec
cmp
sbb
mov
cmp
push
inc
js
test
mov
inc
xor
cmp
sbb
mov
cmp
mov
mov
cmp
mov
xchg
cmp
sbb
mov
cmp
push
inc
js
push
in
out
xchg
xor
cmps
xchg
inc
add
pop
test
aas
ror
pop
mov
cmp
sbb
jle
dec
cmp
or
outs
mov
cmp
sbb
cmp
cs
je
dec
cmp
sbb
call
mov
xchg
fs
sbb
sub
jp
dec
outs
test
mov
aas
test
jmp
lock
bound
cmc
xchg
cmp
add
mov
fucomp
mov
mov
cmp
dec
inc
aaa
loope
cmp
cmp
mov
cmp
push
inc
data16
cmp
gs
cdq
mov
cmp
sub
mov
(bad)
mov
sub
(bad)
cmp
popf
inc
sub
add
jbe
mov
fbld
inc
and
fwait
xchg
cmp
popa
inc
ja
pop
cmp
pop
inc
out
mov
cmp
xor
loope
cmp
mov
cmp
daa
inc
fidiv
pop
fnsave
inc
xor
mov
mov
cmp
sahf
inc
cmp
mov
mov
cmp
sbb
mov
mov
xchg
jle
dec
cmp
pop
inc
jle
dec
cmp
sbb
aas
test
xchg
inc
popf
sub
mov
fisub
lahf
test
jmp
shl
xchg
mov
fimul
xchg
loope
in
inc
xor
daa
mov
fldcw
shl
or
in
fisttp
(bad)
dec
adc
pop
sar
call
sar
push
cwde
in
(bad)
outs
aad
fisubr
mov
sub
adc
call
push
dec
xchg
mov
shl
inc
mov
sub
repnz
loop
mov
cmp
jmp
call
shl
cmp
xchg
or
repnz
jmp
sub
retf
outs
das
sbb
push
cmc
jns
sbb
aaa
ins
test
aas
(bad)
cmp
jmp
aas
sar
pop
sub
ret
das
push
mov
popf
repnz
das
sbb
cmp
retf
jns
sbb
aaa
jns
sbb
fisub
push
mov
popf
hlt
jne
or
sub
clc
call
push
and
(bad)
push
dec
sub
aad
aad
(bad)
and
mov
mov
jb
or
imul
das
pop
fwait
out
test
push
dec
xchg
mov
aam
push
nop
es
jns
jle
aaa
dec
sub
repz
xor
(bad)
daa
push
xchg
movs
stos
jmp
sub
out
fwait
lock
sbb
dec
jle
out
out
jo
or
and
movs
out
test
fs
fidiv
test
popf
repnz
das
sbb
cmp
fstp
or
bnd
pop
fbld
dec
mov
popf
adc
sbb
cmp
mov
dec
rcl
jno
xor
lock
adc
and
(bad)
jmp
out
add
jb
jle
cmp
jmp
(bad)
out
mov
push
dec
test
test
jo
jle
aaa
dec
or
test
jno
fdivr
dec
xchg
out
call
dec
xchg
out
movs
out
daa
sbb
cmp
mov
popf
leave
jle
sbb
cmp
jge
sbb
and
out
call
cmp
sbb
sbb
es
xchg
ret
jae
sbb
cmp
in
hlt
gs
adc
and
test
sbb
das
dec
xchg
mov
(bad)
cmp
ret
jae
cmp
cmp
stc
mov
jns
sbb
cmp
jmp
aaa
dec
xchg
clc
jmp
loopne
dec
xor
(bad)
dec
js
call
sbb
lods
jecxz
daa
or
cmp
xor
ror
dec
aaa
cmp
jns
sbb
es
outs
js
fdivr
dec
xchg
out
call
cmp
sbb
pop
mov
cmp
pop
inc
jle
ja
xchg
mov
xchg
cmp
cmp
inc
ss
cmp
dec
inc
xor
add
stos
xchg
mov
cmp
das
inc
push
mov
cmp
imul
or
push
inc
xor
mov
inc
dec
mov
cmp
jle
cmp
movs
xchg
pop
mov
cmp
jnp
jle
dec
cmp
outs
or
(bad)
fisttp
test
push
stc
inc
stc
(bad)
mov
iret
jnp
dec
cmp
test
xchg
pop
jnp
dec
xor
stos
jmp
mov
cmp
mov
xchg
xor
repnz
jmp
adc
das
mov
xor
pop
inc
pop
mov
popa
in
in
cmps
sbb
cmp
mov
xchg
pop
pop
jnp
outs
cmp
sbb
ins
loop
sbb
add
mov
and
cmp
repnz
shl
jmp
mov
cmp
(bad)
dec
jae
inc
and
xchg
in
fwait
sbb
mov
jmp
popf
jnp
adc
inc
ins
mov
xor
xor
sar
mov
outs
(bad)
stc
test
outs
ds
pop
push
cmps
(bad)
jmp
mov
(bad)
mov
mov
cmp
sbb
jle
dec
sub
sub
div
pop
xchg
sti
popf
out
jae
sub
cmp
cmp
xchg
jle
push
(bad)
fsubr
aam
inc
cs
cmp
inc
es
push
ins
dec
inc
stos
(bad)
gs
cmp
xchg
pop
and
push
shl
sbb
sbb
out
leave
cmc
adc
mov
call
adc
es
dec
cmp
sbb
mov
inc
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
fadd
ja
dec
cmp
sbb
jle
adc
jns
pop
fisub
cmp
outs
and
popf
sub
mov
xchg
adc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sub
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
push
outs
test
test
ret
mov
xchg
sub
mov
pop
cmp
inc
inc
aaa
mov
cmp
sbb
jle
repz
daa
jmp
mov
cmp
sbb
cmp
sbb
jle
dec
cmp
sbb
cmp
sbb
jle
dec
cmp
sbb
cmp
jne
adc
xchg
dec
cmp
sbb
mov
cmp
jb
or
mov
mov
cmp
sbb
into
mov
aas
test
sahf
mov
mov
cmp
push
inc
adc
jmp
mov
cmp
sub
dec
mov
cmp
sub
jle
jp
stc
mov
xchg
adc
mov
outs
cmp
pop
inc
or
pushf
xchg
dec
mov
cmp
inc
inc
sub
out
sbb
cmp
das
inc
inc
mov
cmp
jno
sbb
dec
cmp
fs
or
and
fs
sub
add
cmp
sbb
cmp
pop
inc
sbb
cmp
jne
push
mov
cmp
jb
jle
dec
cmp
outs
inc
adc
xchg
xchg
sbb
mov
mov
cmp
pop
inc
pop
push
and
jns
or
cmp
xchg
jle
dec
cmp
sub
cmp
sub
jle
dec
data16
aaa
mov
cmp
outs
inc
adc
cmps
xchg
adc
fadd
ss
push
inc
jo
dec
cmp
jnp
pop
mov
cmp
ins
inc
pop
mov
cmp
je
or
xchg
xchg
adc
ret
xchg
inc
sbb
mov
mov
cmp
push
inc
sbb
test
das
cmp
jno
pop
mov
cmp
sbb
jle
adc
mov
pushf
data16
cmp
mov
xchg
dec
push
and
sbb
dec
mov
cmp
outs
inc
pop
mov
cmp
jge
adc
cmp
jns
adc
mov
inc
dec
mov
cmp
jns
jle
jb
stc
mov
xchg
mov
cmp
jg
or
test
dec
cmp
imul
mov
mov
cmp
dec
inc
jle
jbe
(bad)
fld1
xchg
loope
cmp
jg
or
fwait
xchg
pop
call
jmp
mov
cmp
xor
test
in
mov
mov
outs
xchg
mov
mov
cmp
outs
inc
pop
mov
cmp
sub
mov
cmp
xor
mov
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
inc
cmp
cld
jbe
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
test
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
inc
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
sbb
lods
mov
xchg
jle
dec
outs
test
test
not
jmp
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
sub
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
dec
inc
and
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
aam
inc
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
(bad)
mov
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
movs
mov
mov
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
outs
test
test
test
test
test
test
test
test
test
test
test
test
test
imul
xchg
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
sbb
jle
dec
cmp
(bad)
mov
jno
pop
adc
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
ins
sbb
add
add
add
add
ins
add
ins
add
add
add
and
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
ins
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
push
or
add
and
add
or
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
