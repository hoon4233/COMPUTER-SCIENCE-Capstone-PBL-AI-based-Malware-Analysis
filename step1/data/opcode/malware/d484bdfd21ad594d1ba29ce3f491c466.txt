cmp
bound
dec
adc
inc
jnp
sbb
or
dec
data16
sbb
clc
dec
push
and
push
jae
push
popw
hlt
jnp
jae
dec
add
cs
data16
lds
push
sub
ds
ds
cmc
mov
push
xor
inc
push
jg
jmp
jge
push
add
jnp
push
push
ja
bound
cdq
cdq
daa
mov
shl
dec
lock
inc
cmp
out
sbb
sbb
es
arpl
cdq
push
add
cmp
lea
lahf
add
cmp
or
xchg
and
adc
dec
dec
xchg
xor
dec
data16
inc
jecxz
or
cli
dec
mov
ss
and
or
and
js
in
or
int
mov
into
jae
dec
jmp
jge
sbb
cmovle
push
pop
sbb
sbb
lds
lahf
or
test
(bad)
xor
lds
lahf
or
or
clc
dec
dec
lds
or
and
or
(bad)
ss
xor
lds
mov
ret
pop
dec
mov
jp
xor
pop
cmp
push
adc
cs
inc
cmps
pop
and
push
clc
jo
xor
mov
pop
xor
jecxz
cwde
mov
int
jnp
inc
adc
xadd
xor
mov
cld
add
sbb
clc
aas
ror
retf
movs
pop
xchg
mov
cmc
mov
lock
inc
or
int3
dec
jbe
dec
dec
ins
jae
dec
or
jecxz
sbb
int
jnp
mov
push
popa
dec
mov
jae
dec
data16
inc
mov
dec
lock
inc
outs
mov
dec
fidiv
dec
cbw
sub
sahf
mov
mov
pop
(bad)
xor
cmps
jl
or
mov
mov
arpl
xor
(bad)
retf
or
jae
adc
sub
jae
ret
dec
dec
pushw
or
addr16
dec
lea
or
jb
dec
cbw
fsubr
(bad)
jae
dec
data16
xor
es
arpl
ss
sub
or
lahf
sbb
mov
shl
adc
or
bound
or
sbb
(bad)
and
arpl
xor
es
ret
dec
dec
mov
dec
data16
data16
xor
mov
push
mov
outs
(bad)
xor
mov
dec
cmp
mov
sub
or
mov
in
data16
dec
movs
jae
mov
jae
sbb
outs
add
repz
mov
sbb
and
sbb
es
into
push
push
fwait
push
data16
jecxz
data16
(bad)
in
hlt
cmp
retf
movs
or
repz
aad
hlt
(bad)
mov
xchg
inc
sub
ret
jecxz
mov
cmps
movs
add
dec
xor
jae
mov
les
or
loop
repz
cwde
mov
jnp
or
mov
jae
mov
dec
adc
mov
cwde
pop
test
dec
xchg
xchg
or
shl
out
mov
mov
mov
cmp
inc
retf
adc
sub
lea
cli
out
int
jg
sbb
pop
sbb
adc
repz
sahf
cli
int3
ret
and
pop
and
sbb
imul
dec
cdq
push
pop
mov
jnp
aad
jae
(bad)
mov
jae
inc
nop
pop
movq
imul
jb
jle
or
hlt
cmp
jle
mov
jb
data16
int
adc
or
pop
movq
mov
cmp
or
jae
inc
out
mov
test
mov
sub
out
pop
xor
or
mov
xchg
call
and
mov
cdq
push
add
out
mov
mov
lea
cmp
jle
cdq
push
pop
and
mov
cdq
push
mul
out
mov
cmp
jae
mov
lea
mov
cwde
or
(bad)
mov
sub
and
cmp
call
stos
or
jae
sub
jae
daa
in
test
mov
dec
adc
dec
dec
push
mov
or
ss
sahf
clc
pop
inc
imul
pop
jo
mov
test
es
dec
pushw
bnd
(bad)
jle
cdq
ss
and
or
mov
js
stos
cld
lods
out
ss
(bad)
movs
xor
mov
out
or
mov
mov
dec
inc
out
mov
xchg
jae
mov
ss
retf
hlt
mov
jae
adc
xchg
mov
data16
cmps
push
pop
or
and
adc
mov
mov
(bad)
hlt
and
ds
hlt
mov
cli
leave
dec
movs
cli
sahf
mov
(bad)
hlt
mov
pop
mov
inc
out
mov
xchg
jae
mov
mov
inc
mov
mov
movs
push
cli
cld
movs
je
repz
clc
pop
inc
in
addr16
bnd
dec
cdq
mov
psraw
jecxz
hlt
mov
cli
leave
movs
cli
sahf
mov
(bad)
hlt
(bad)
mov
jbe
dec
cdq
mov
ret
jecxz
or
scas
mov
mov
stc
add
jne
sti
mov
out
mov
mov
push
jae
lds
jnp
popf
sub
sbb
out
mov
movs
cmps
mov
lahf
ins
and
lock
das
out
addr16
pop
lods
ja
in
add
cmp
ret
cli
out
pop
and
in
cs
mov
pop
ins
mov
jae
mov
sahf
cli
dec
mov
test
push
data16
jbe
fsub
or
mov
push
dec
mov
leave
int
adc
nop
sbb
dec
dec
in
add
and
sbb
sub
adc
and
sbb
clc
jle
in
cs
mov
(bad)
cmp
lahf
sub
dec
data16
cmp
xor
(bad)
xchg
cwde
pop
lds
jnp
lock
mov
add
cmp
retf
push
lea
ja
por
and
sbb
inc
retf
adc
sub
lea
cli
out
pop
xor
cmp
ret
and
or
jae
cmp
push
scas
and
pop
cmps
jecxz
hlt
mov
ss
push
sub
jecxz
fwait
mov
push
in
push
test
cwde
mov
int
push
push
adc
and
in
cs
icebp
in
xor
out
mov
cmp
arpl
data16
mov
popa
dec
push
mov
data16
adc
dec
or
jecxz
adc
(bad)
sahf
jb
(bad)
mov
cli
sti
adc
sub
xor
out
pop
and
in
push
add
mov
adc
fisttp
data16
(bad)
and
xchg
in
and
or
ins
rcl
lds
pop
inc
in
xor
adc
add
iret
jbe
dec
xchg
xchg
or
cli
int3
lds
cmp
inc
mov
dec
data16
adc
xor
outs
xor
jnp
(bad)
bound
inc
dec
lock
adc
jecxz
push
jae
ret
and
dec
dec
mov
enter
or
xchg
or
cli
int3
jg
jp
inc
cli
mov
or
and
or
sbb
ret
and
or
mov
mov
add
cmps
cli
dec
stos
outs
mov
jge
or
xchg
or
pusha
mov
pop
data16
dec
out
mov
mov
push
mov
xchg
imul
add
es
add
mov
mov
push
mov
adc
xchg
mov
data16
cmps
add
dec
xor
js
popa
out
stos
or
sbb
dec
dec
cdq
mov
dec
adc
push
(bad)
dec
dec
data16
and
xor
push
(bad)
or
and
shl
or
mov
stos
hlt
mov
cli
enter
test
data16
push
(bad)
out
test
and
(bad)
mov
lock
xor
dec
push
mov
dec
data16
push
cdq
push
pop
cmps
lods
add
dec
or
arpl
jecxz
hlt
mov
and
and
jg
mov
jae
cmp
cs
xor
dec
(bad)
daa
or
cli
ror
cli
enter
daa
dec
data16
ss
dec
inc
in
xor
push
in
dec
hlt
sbb
dec
mov
push
dec
mul
dec
data16
xor
jb
dec
in
repz
out
ja
and
hlt
mov
jae
(bad)
out
pop
inc
data16
dec
sbb
dec
dec
in
push
movsx
add
mov
xor
xor
(bad)
and
or
jae
pop
out
stos
and
and
repz
and
or
and
mov
bound
dec
xchg
(bad)
xor
clc
je
xor
xor
xor
or
jae
inc
cmps
push
pop
es
ror
push
mov
or
clc
dec
mov
jb
or
jae
or
repnz
adc
scas
hlt
mov
and
push
in
dec
hlt
fptan
jae
dec
out
test
movsx
mov
dec
data16
dec
inc
pop
not
mov
mov
fimul
dec
data16
(bad)
jecxz
hlt
mov
cli
enter
test
data16
inc
(bad)
out
test
and
mov
mov
mov
icebp
and
imul
dec
dec
data16
sar
cdq
(bad)
hlt
(bad)
movs
sub
adc
xor
inc
xor
or
or
out
add
in
test
inc
cmovno
stc
or
jp
cmp
dec
mov
jae
dec
out
add
lea
cmp
arpl
in
ss
and
jb
pop
add
pop
bswap
add
xchg
gs
es
dec
dec
mov
js
lock
inc
out
add
data16
dec
(bad)
ror
data16
sar
adc
sub
mov
dec
adc
stos
sbb
xor
in
add
dec
dec
lea
xor
cli
int3
int
(bad)
or
cwde
pop
inc
mov
push
or
in
ja
jb
or
jb
push
bswap
add
repz
mov
repz
jle
jl
ja
mov
int
(bad)
or
sbb
jle
push
inc
xchg
push
data16
pop
and
loopne
out
mov
mov
mov
dec
or
popa
dec
or
popa
dec
push
jae
dec
sbb
shl
jae
adc
and
popa
dec
ss
jnp
data16
or
retf
mov
pop
jb
cmp
inc
aaa
and
cmp
jle
mov
fs
sbb
ret
and
sti
scas
and
hlt
cmp
jae
mov
cdq
push
repz
pop
sbb
push
xchg
fisttp
dec
data16
outs
and
pop
sbb
enter
cmp
dec
out
stos
or
fwait
mov
mov
sbb
scas
and
jecxz
or
(bad)
jecxz
hlt
mov
dec
push
mov
lock
sub
mov
fiadd
jae
xchg
stos
or
jae
cmps
rcr
dec
out
test
cwde
mov
lea
mov
mov
fwait
or
push
ss
xor
dec
adc
or
imul
mov
mov
cli
ror
ss
xor
call
addr16
or
jecxz
hlt
mov
and
xchg
or
jecxz
hlt
mov
and
dec
data16
(bad)
and
aaa
inc
data16
xchg
stos
or
mov
cli
ror
ss
xor
call
dec
sbb
daa
jae
sti
cmps
mov
mov
outs
icebp
mov
lock
inc
out
mov
(bad)
fisttp
mov
xor
dec
dec
out
xchg
cmp
jae
retf
fmul
in
and
pop
lds
pop
xor
test
jae
sub
into
mov
cwde
mov
inc
loop
or
repz
cdq
(bad)
hlt
dec
imul
popa
dec
push
sub
mov
mov
mov
lock
inc
out
mov
(bad)
fcmovnb
hlt
mov
retf
pop
daa
data16
lods
out
mul
lea
mov
cdq
(bad)
hlt
jae
mov
dec
imul
add
jecxz
hlt
mov
xor
jecxz
hlt
mov
and
(bad)
xor
cmps
sub
or
mov
inc
shl
mov
dec
arpl
stos
pcmpgtd
jmp
mov
mov
lock
xor
dec
imul
adc
jb
fwait
xchg
or
ror
mov
std
mov
lock
inc
pop
mov
dec
popw
sub
addr16
scas
and
xchg
fwait
mov
mov
fwait
js
cdq
mov
mov
jae
inc
mov
mov
dec
data16
dec
push
mov
or
sbb
daa
jae
add
jg
mov
jae
cmp
or
fist
div
push
test
mov
mov
jae
mov
dec
adc
retf
ror
dec
or
arpl
xchg
or
ror
mov
mov
lock
inc
pop
mov
dec
popw
sub
sbb
jae
repz
mov
mov
fwait
in
cdq
mov
mov
jae
inc
mov
mov
dec
data16
dec
push
shr
or
sbb
daa
jae
test
jg
mov
jae
cmp
or
fist
div
retf
xchg
mov
mov
jae
mov
dec
adc
retf
ror
dec
or
arpl
xchg
or
ror
mov
(bad)
mov
lock
inc
pop
mov
dec
popw
add
cdq
jb
dec
retfw
lahf
cs
lods
out
mul
lea
arpl
xchg
or
ror
mov
(bad)
mov
lock
inc
pop
mov
dec
popw
add
cdq
jb
dec
sbb
es
xchg
dec
dec
push
and
mov
push
hlt
mov
jae
or
arpl
xchg
or
fisttp
jecxz
xchg
mov
int
jg
mov
jae
cmp
or
push
xchg
dec
dec
jmp
div
xchg
xchg
mov
mov
jae
mov
dec
adc
retf
ror
dec
in
mov
cmp
push
shl
or
div
mov
mov
mov
cwde
sbb
data16
sbb
xor
in
add
dec
dec
out
mov
data16
retf
fwait
mov
mov
call
xchg
nop
or
mov
mov
mov
retf
mov
clc
mov
in
dec
hlt
sbb
cli
dec
mov
mov
retf
xchg
ja
dec
jmp
mov
cwde
mov
jecxz
hlt
mov
and
(bad)
and
or
div
jmp
mov
mov
cli
ror
cli
enter
hlt
mov
jae
repz
call
lea
dec
adc
(bad)
mov
mov
jae
retf
into
mov
mov
jae
dec
jmp
fwait
mov
mov
jecxz
hlt
mov
and
mov
clc
cmp
mov
or
neg
mov
mov
not
xchg
mov
mov
pop
mov
jae
jae
dec
out
test
jae
ret
jecxz
hlt
mov
and
mov
clc
xor
data16
dec
mov
mov
daa
data16
mov
or
jae
retf
mov
sahf
cdq
(bad)
hlt
push
in
dec
hlt
sbb
dec
mov
mov
gs
int
dec
data16
push
in
not
mov
mov
pop
mov
ss
movs
lock
data16
lahf
gs
iret
xchg
sbb
data16
push
in
mul
mov
mov
pop
mov
test
jae
iret
lea
push
dec
data16
mov
cdq
(bad)
repz
mov
(bad)
xor
ret
jecxz
hlt
mov
and
(bad)
jae
int
jg
jmp
mov
mov
call
mov
addr16
retfw
fld
jae
lods
out
test
cdq
(bad)
out
cwde
mov
mov
sbb
and
xchg
fwait
mov
mov
fwait
xchg
and
mov
test
mov
mov
mov
mov
(bad)
mov
int
arpl
dec
data16
cdq
lock
out
xchg
mov
data16
mov
cdq
(bad)
hlt
sbb
dec
hlt
sbb
dec
mov
stos
and
call
dec
in
cmps
mov
mov
ret
jecxz
hlt
mov
and
xchg
or
jecxz
hlt
mov
and
dec
data16
(bad)
and
or
mov
retf
push
jno
dec
jmp
mov
(bad)
hlt
mov
and
(bad)
and
or
div
dec
data16
jmp
mov
mov
call
mov
pusha
dec
data16
dec
add
dec
data16
mov
cdq
(bad)
hlt
(bad)
jecxz
hlt
mov
dec
push
jmp
jnp
cwde
mov
mul
or
(bad)
xchg
push
mov
mov
lahf
sbb
or
clc
jmp
into
cmps
mov
mov
mov
ss
movs
lock
data16
and
or
ret
sti
hlt
mov
jae
retf
out
mov
mov
sbb
and
or
mov
mov
clc
xor
data16
or
outs
or
lock
cdq
(bad)
hlt
dec
imul
xchg
push
mov
mov
sbb
mov
xchg
mov
clc
mov
cdq
(bad)
hlt
push
in
dec
hlt
sbb
dec
mov
stos
cmp
call
dec
add
mov
cdq
(bad)
hlt
inc
imul
mov
push
mov
mov
jl
mov
or
jecxz
hlt
mov
and
sti
push
mov
mov
fdivrp
mov
lock
inc
out
mov
(bad)
fld
hlt
mov
cli
sar
cdq
mov
(bad)
movs
repz
cdq
mov
dec
imul
int3
retf
xchg
mov
mov
jae
dec
or
hlt
sti
(bad)
mov
mov
div
mov
mov
cmp
div
in
or
mov
(bad)
mov
inc
int
mov
pop
jb
cmp
(bad)
hlt
mov
das
hlt
mov
dec
push
in
div
mov
mov
mov
and
mov
jae
int
jg
dec
jmp
div
ds
dec
dec
jmp
div
inc
sbb
dec
in
sbb
mov
lock
cdq
(bad)
hlt
dec
adc
pop
jnp
or
cdq
(bad)
hlt
(bad)
movs
clc
mov
cdq
(bad)
hlt
push
in
inc
hlt
sbb
mov
cdq
(bad)
hlt
(bad)
hlt
mov
dec
mov
cdq
(bad)
hlt
inc
in
cmc
mov
clc
mov
cdq
(bad)
hlt
push
in
inc
hlt
sbb
mov
cdq
(bad)
hlt
push
in
inc
hlt
sbb
clc
cwde
sub
mov
lahf
hlt
mov
clc
mov
jecxz
hlt
mov
jl
xchg
call
mov
jae
dec
mov
mov
(bad)
hlt
mov
and
int
mov
jg
in
neg
mov
mov
push
mov
fdivrp
sub
test
(bad)
jecxz
hlt
mov
cli
enter
hlt
mov
jae
inc
in
neg
mov
mov
push
mov
in
not
mov
mov
push
mov
in
not
mov
mov
push
mov
out
pop
pop
data16
retf
xchg
mov
jnp
jg
mov
adc
sub
lea
cli
out
and
sbb
aam
xor
sub
jae
dec
and
inc
jae
dec
lock
xor
fwait
int3
or
clc
jbe
out
lea
mov
push
out
mov
(bad)
or
jae
push
fs
cmps
add
or
mov
imul
dec
or
push
out
(bad)
and
jbe
mov
std
mov
lock
shl
or
cmps
loopne
mov
mov
movs
inc
mov
scas
addr16
dec
in
ss
in
push
jecxz
and
mov
mov
cwde
mov
mov
mov
loop
or
jae
fild
int3
loope
or
xor
repz
and
sbb
push
jae
dec
or
jecxz
add
(bad)
mov
jae
adc
lahf
adc
(bad)
dec
xchg
dec
retf
repz
data16
scas
out
ss
shl
or
mov
xor
dec
out
pop
pop
data16
imul
dec
data16
xor
dec
in
add
es
mov
xchg
pcmpgtd
dec
data16
ret
dec
scas
cli
retf
aaa
xchg
pcmpgtd
dec
data16
sti
or
jae
push
push
or
jbe
xlat
daa
jae
mov
jne
data16
mov
jae
inc
jmp
mov
retf
test
dec
out
adc
daa
jae
cmps
push
jno
dec
cdq
jbe
cli
and
cmp
repz
int
ja
(bad)
and
dec
dec
(bad)
dec
or
repz
push
stc
xor
push
nop
jne
inc
jecxz
or
test
push
push
or
jle
mov
arpl
pcmpgtd
xchg
pcmpgtd
ret
scas
cli
retf
jno
dec
cdq
jbe
shl
jae
mov
jae
mov
pop
mov
push
stc
xor
pop
adc
(bad)
dec
or
repnz
inc
jae
into
imul
data16
in
jbe
dec
dec
pop
mov
test
push
stc
xor
dec
adc
(bad)
bound
dec
retfw
mov
data16
scas
out
ss
(bad)
cmps
repz
push
stc
xor
dec
(bad)
jg
mov
test
push
stc
xor
inc
adc
(bad)
call
sbb
into
imul
data16
push
push
or
ror
(bad)
xchg
cmc
mov
test
push
stc
xor
dec
adc
(bad)
into
or
cli
ret
scas
cli
retf
imul
out
dec
dec
fs
dec
pop
cmc
mov
test
push
stc
xor
dec
adc
(bad)
loop
dec
data16
sbb
or
imul
data16
dec
and
dec
dec
fs
dec
(bad)
sti
cmc
mov
mov
cmp
xor
mov
dec
xchg
pcmpgtd
loop
ds
into
imul
xor
dec
addr16
out
mov
dec
dec
addr16
shl
jae
xchg
or
jae
cmps
xor
(bad)
lahf
xchg
pcmpgtd
retf
dec
addr16
shl
jae
lahf
data16
out
and
dec
dec
addr16
fisub
jae
(bad)
data16
out
mov
dec
dec
addr16
shl
jae
jmp
or
lock
jbe
xor
dec
(bad)
in
or
cli
ret
jg
cli
retf
dec
xchg
pcmpgtd
ret
data16
jg
call
jle
dec
dec
inc
repnz
mov
xchg
xor
stos
or
jl
dec
ror
outs
mov
sbb
mov
xor
das
retf
test
dec
pop
repz
cmovp
jae
dec
sbb
push
mov
or
repz
push
stc
xor
push
lea
dec
adc
dec
dec
lea
mov
arpl
pcmpgtd
xchg
pcmpgtd
retf
jae
into
imul
xor
pop
push
mov
adc
or
scas
test
(bad)
and
jg
and
std
dec
jle
dec
dec
es
(bad)
data16
(bad)
xchg
xor
stos
or
cli
ret
jg
cli
retf
jbe
out
and
mov
or
and
or
lock
out
ss
inc
shl
cld
jae
jae
dec
imul
mov
xchg
xor
cdq
jbe
fisub
jae
xchg
cli
retf
ss
jae
jae
dec
adc
or
xor
dec
arpl
push
data16
xor
dec
adc
xor
push
std
dec
adc
dec
dec
fs
ss
sbb
push
push
stc
xor
into
out
mov
cmp
out
dec
dec
imul
or
xchg
nop
repz
arpl
push
into
sbb
inc
div
or
push
pop
fisub
jae
movs
jle
sti
or
popw
fisub
jae
dec
out
ja
jbe
xor
mov
jg
push
data16
fisub
jae
dec
push
dec
dec
adc
mov
in
pop
fisub
jae
movs
jle
sti
or
popw
fisub
jae
dec
out
ja
out
xor
mov
jg
push
data16
shl
jae
dec
push
dec
dec
adc
hlt
dec
adc
dec
dec
out
and
lds
push
inc
retf
push
lea
in
jae
mov
out
mov
adc
and
sbb
cs
ins
repnz
gs
jae
mov
pop
mov
hlt
and
jecxz
cmp
(bad)
mov
jae
cmps
movs
sub
dec
lds
stos
or
cli
repz
out
mov
data16
or
mov
push
dec
data16
shl
jae
jae
xor
sbb
sar
shl
jae
add
mov
push
dec
data16
shl
jae
adc
xor
sbb
rcl
and
xor
sub
out
int
sbb
xor
(bad)
jge
ja
lea
or
jbe
cli
and
arpl
fdiv
or
and
pop
mov
das
stos
or
mov
cmps
jle
or
stos
and
mov
or
cli
dec
mov
data16
int
mov
iret
lea
or
lock
mov
mov
cmp
xor
int
mov
push
dec
data16
call
or
xlat
dec
data16
ret
arpl
mov
data16
dec
scas
cdq
jbe
cli
and
int3
or
jno
dec
data16
sar
cli
enter
or
jae
sub
jae
xor
(bad)
jle
fbstp
dec
data16
data16
dec
jmp
out
push
cdq
call
daa
jae
xchg
push
stos
or
jae
or
and
or
popa
dec
or
hlt
cmp
jae
or
and
cmp
dec
sbb
cmps
xchg
adc
dec
cdq
jbe
cli
and
popa
dec
cdq
push
stos
and
sbb
and
sbb
test
jae
iret
lea
data16
mov
push
dec
data16
cmp
xor
ret
and
xchg
and
pop
xchg
out
dec
dec
in
ss
movs
push
mov
lods
out
ss
(bad)
movs
sub
adc
xor
push
mov
daa
adc
and
sbb
clc
dec
inc
out
ss
lds
arpl
mov
xor
(bad)
sbb
ret
and
pop
mov
mov
jmp
call
or
hlt
cmp
push
jle
xor
lds
xchg
inc
in
ss
xor
out
sbb
ins
inc
jno
cli
repz
cli
int3
mov
pop
mov
inc
or
hlt
pop
jbe
dec
dec
cmp
enter
mov
in
push
add
cmp
dec
adc
dec
dec
push
mov
bound
mov
jae
cmp
mov
mov
jae
cmp
mov
mov
jae
cmp
mov
mov
jae
cmp
mov
mov
jae
inc
loop
or
clc
dec
pop
jmp
or
addr16
or
mov
bound
repnz
add
jb
xor
jae
mov
jl
pop
jo
leave
inc
jecxz
or
cli
icebp
int
jno
clc
jb
xor
cdq
or
addr16
(bad)
sahf
lock
imul
or
push
push
inc
shl
hlt
and
arpl
mov
and
cmc
cmp
inc
shl
hlt
and
jae
mov
and
fsubr
or
ss
mov
pop
arpl
int
ja
sahf
gs
ja
or
aaa
or
mov
mov
data16
movs
inc
jl
or
dec
push
pushf
fidiv
or
jl
or
mov
mov
pop
mov
jo
push
pop
(bad)
sahf
cmp
add
fs
dec
bound
dec
(bad)
sahf
lock
out
or
mov
fwait
cmovno
ja
jb
pop
sbb
jae
dec
adc
mov
fwait
push
into
pop
jne
cmp
ror
arpl
movs
(bad)
lock
dec
out
ja
dec
data16
into
pop
dec
or
add
repz
out
or
mov
fwait
or
pop
jne
cmp
cli
repz
jo
jb
jno
or
mov
dec
pusha
dec
jecxz
data16
dec
pop
call
scas
mov
pop
arpl
int
ja
sahf
stos
mov
in
ss
and
dec
sahf
lock
in
es
jb
or
jae
jb
jb
sbb
mov
pop
jne
cmp
cli
repz
jno
jb
jb
jo
mov
dec
addr16
cmp
sahf
lock
imul
jg
pop
lea
dec
popw
or
cdq
jae
dec
adc
inc
cmp
arpl
mov
cdq
xsavec
or
jae
iret
cdq
jae
dec
data16
stc
fwait
mov
adc
sub
lea
cli
out
int
jg
sbb
mov
cmp
xor
lds
jnp
push
push
mov
dec
out
xor
iret
cdq
fwait
or
add
or
add
or
ss
arpl
mov
xchg
(bad)
call
cdq
jbe
cli
and
add
xor
lods
fs
aaa
pop
inc
loop
dec
push
test
mov
stos
pop
cmps
repz
mov
mov
cmp
xor
inc
shl
jae
jae
dec
adc
data16
cmp
outs
mov
cwde
add
mov
addr16
jb
hlt
or
jae
or
stc
sqrtps
ja
ret
and
data16
dec
mov
or
mov
test
inc
and
lds
xchg
fisub
jae
mov
add
mov
out
mov
xchg
addr16
(bad)
cli
dec
mov
ja
cmps
jmp
adc
(bad)
jbe
push
cmp
xor
int
mov
mov
daa
adc
cmps
(bad)
cli
dec
mov
je
(bad)
bound
dec
data16
sbb
pop
pop
cmps
xchg
or
and
jecxz
call
adc
xchg
mov
inc
jae
cmps
dec
sub
dec
xor
mov
mov
imul
xchg
cdq
mov
cmps
jl
or
jae
dec
out
or
jecxz
aam
cdq
jb
retf
xchg
pushf
hlt
mov
lock
cmp
xor
dec
out
call
cmp
mov
mov
dec
push
fidiv
or
imul
inc
shl
clc
mov
arpl
mov
data16
dec
lea
in
cdq
cli
sahf
out
mov
and
imul
data16
inc
cmp
or
repz
mov
cli
pand
jmp
mov
inc
imul
lods
fs
sahf
jmp
pop
xlat
daa
jae
or
jae
(bad)
aad
cdq
cli
cvtdq2ps
dec
dec
out
clc
mov
shl
clc
mov
js
aaa
dec
mov
jl
add
and
cdq
jae
clc
repz
cdq
mov
dec
in
push
outs
div
or
not
clc
repz
cdq
mov
dec
in
addr16
push
push
or
repz
aam
cdq
mov
cmp
xor
into
fist
add
icebp
jb
dec
mov
repnz
cli
mov
arpl
mov
call
loopne
cmps
nop
sbb
dec
es
retf
xchg
pushf
hlt
mov
mov
outs
push
jae
dec
data16
inc
aas
jae
(bad)
mov
xchg
or
ror
repz
movs
jae
dec
dec
xchg
mov
mov
mov
mov
mov
dec
data16
cmp
xor
int
lahf
in
cdq
jae
ret
or
cdq
mov
dec
cdq
(bad)
out
cdq
mov
sti
mov
push
icebp
mov
lock
inc
out
test
repz
cdq
jae
shl
lods
hlt
mov
xor
mov
test
jmp
lds
mov
sahf
pushf
hlt
mov
jp
iret
cdq
jae
dec
add
iret
cdq
mov
dec
add
mov
jae
retf
out
hlt
mov
cmp
or
mov
mov
cdq
push
mul
aas
repnz
data16
(bad)
aad
cdq
pop
hlt
mov
jae
retf
mov
mov
mov
dec
adc
dec
dec
cdq
(bad)
rcl
xor
cmps
es
dec
imul
hlt
pop
call
mov
int
xchg
mov
jae
fist
xchg
or
mov
xchg
or
pop
pop
mov
mov
fs
ror
fs
mov
mov
mov
fild
cmovle
mov
or
repz
mov
sub
(bad)
or
out
imul
mov
push
jb
jae
(bad)
repz
aad
cdq
lock
ss
retf
(bad)
lods
hlt
mov
imul
(bad)
lods
hlt
mov
mov
dec
fs
mov
mov
rcl
mov
clc
sahf
fidivr
cli
mov
mov
(bad)
mov
clc
mov
jecxz
aam
cdq
sbb
ret
jecxz
aam
cdq
and
sti
mov
mov
dec
data16
mov
jecxz
aam
cdq
push
dec
(bad)
aam
cdq
cli
mov
mov
scas
aam
cdq
repz
mov
mov
dec
data16
and
clc
sahf
cli
mov
jg
(bad)
aam
cdq
mov
inc
xor
push
dec
addr16
fcmovne
lods
hlt
mov
call
dec
dec
imul
hlt
pop
hlt
mov
(bad)
fist
jae
sahf
push
data16
fist
xchg
or
jb
sub
es
fist
jae
dec
and
shl
jae
(bad)
jecxz
aam
cdq
jp
inc
jecxz
or
repz
data16
je
jae
(bad)
in
cdq
jl
dec
pop
call
sbb
inc
loop
or
call
xchg
pushf
hlt
mov
addr16
dec
data16
int
mov
retf
sub
cdq
mov
int
xchg
aam
cdq
jbe
sti
sub
pop
jae
out
or
adc
mov
pop
jae
pop
out
or
adc
mov
pop
jae
inc
sub
mov
fcmovnb
lods
hlt
mov
xchg
or
shl
xchg
cdq
mov
mov
jl
dec
pop
call
bound
dec
data16
cmps
cdq
dec
(bad)
cli
mov
in
cld
movs
imul
hlt
dec
sahf
pop
sti
les
sbb
pop
into
out
xchg
cdq
mov
out
test
cdq
mov
inc
shl
test
cdq
mov
lods
fs
mov
ret
mov
je
into
pop
dec
or
jae
cmp
aaa
jae
jae
dec
pushw
adc
dec
data16
cmp
aaa
jae
jae
dec
pushw
add
pop
dec
push
dec
data16
cmp
loopne
imul
hlt
inc
cmps
or
into
sbb
cmp
mov
mov
mov
mov
cmps
aam
cdq
fwait
jge
cdq
mov
lods
mov
xor
mov
clc
sahf
mov
test
xchg
cmps
call
call
mov
ja
mov
xchg
mov
repnz
mov
cmp
mov
cmp
xor
cmps
dec
(bad)
hlt
mov
idiv
mov
shl
clc
mov
js
aaa
dec
mov
jl
popa
popf
mov
adc
sub
lea
cli
out
int
dec
pop
sbb
clc
push
inc
mov
mov
add
int
cdq
jb
xor
xor
div
or
xlat
mov
sahf
push
dec
data16
jbe
jmp
mov
and
mov
data16
mov
jmp
lahf
repz
mov
data16
mov
adc
iret
and
mov
cdq
jb
or
jo
clc
xor
dec
out
hlt
dec
lea
or
bound
ficomp
dec
data16
out
ss
(bad)
and
loop
data16
les
mov
pop
mov
mov
data16
into
and
jae
jae
dec
sbb
or
cli
leave
dec
movs
cli
pop
mov
lds
inc
mov
dec
lock
adc
or
jb
mov
xchg
or
pushf
ja
inc
in
push
cmp
repz
sbb
or
jb
or
in
or
sahf
jbe
dec
out
hlt
dec
imul
or
dec
mov
jae
dec
out
hlt
dec
in
ss
movs
pop
leave
(bad)
xor
cld
dec
data16
inc
nop
xor
jbe
ja
or
jb
xor
mov
mov
dec
or
aaa
push
adc
mov
cdq
jb
inc
out
dec
push
dec
xchg
or
cli
leave
dec
movs
cli
pop
mov
lds
jae
jae
dec
adc
or
mov
mov
pop
push
xor
jnp
xchg
cmp
and
ss
or
nop
or
cli
enter
or
sbb
cmps
add
or
or
addr16
mov
mov
inc
out
xor
or
or
addr16
(bad)
mov
mov
xchg
ja
dec
data16
jae
data16
sbb
push
and
jg
cld
lods
bound
test
dec
xchg
xchg
or
lods
hlt
mov
mov
cmp
hlt
cmp
mov
mov
push
mov
pop
dec
data16
push
mov
lock
pop
push
test
mov
sub
out
sbb
cmp
gs
and
sbb
mov
jnp
dec
mov
push
lea
cli
out
int
arpl
xor
scas
pop
aas
add
or
jae
into
data16
and
sbb
and
sbb
dec
data16
cmp
jnp
data16
mov
(bad)
hlt
cmp
jbe
popw
or
outs
inc
retf
movs
pop
cli
repz
out
mov
dec
xor
or
xor
pop
xor
or
and
or
out
mov
dec
in
pop
dec
adc
or
dec
mov
sahf
cli
dec
mov
cdq
push
neg
mov
dec
and
aaa
jae
lds
(bad)
loopne
out
les
data16
adc
xchg
mov
fptan
arpl
and
repz
cli
int3
and
sbb
dec
or
popa
dec
push
jae
dec
cmps
mov
mov
int
cwde
mov
push
mov
sub
data16
(bad)
and
popa
dec
or
pop
cmps
mov
ss
(bad)
cmps
lock
mov
repz
dec
pushw
repnz
movs
sbb
ret
xor
pop
sbb
sbb
ret
and
sti
scas
and
pop
cmps
cwde
and
dec
xor
xor
clc
dec
mov
data16
adc
sub
lea
cli
out
pop
ss
pop
jae
mov
mov
mov
dec
push
repz
sbb
and
sbb
es
mov
and
dec
out
mov
mov
push
movq
test
(bad)
and
popa
dec
or
pop
cmps
dec
and
dec
or
xchg
call
inc
xor
pop
cmps
inc
and
dec
push
mov
movs
pusha
cli
repz
cli
int3
adc
mov
pop
sbb
outs
mov
mov
adc
fs
div
addr16
jg
cli
aam
popa
jl
dec
pop
jb
or
pop
xor
mov
mov
neg
daa
xchg
dec
dec
mov
pop
dec
sbb
scas
and
jecxz
xor
arpl
xchg
lea
clc
bound
es
xchg
dec
dec
mov
pop
dec
lock
inc
and
fwait
cmp
pop
jae
dec
mov
dec
jbe
sbb
leave
dec
movs
cli
pop
mov
sbb
scas
and
jecxz
xor
jnp
adc
xchg
pop
sbb
outs
clc
jle
mov
retf
and
arpl
xor
cmps
push
and
dec
aas
inc
hlt
movs
jne
mov
jnp
xor
cmps
inc
and
dec
in
add
pop
test
push
push
jmp
data16
sbb
and
sbb
sub
adc
xor
push
and
cld
pop
out
stos
and
and
out
in
jecxz
in
out
dec
jmp
stc
ret
push
call
or
jae
jmp
stos
cmp
jbe
jle
add
or
mov
mov
pop
mov
or
mov
out
mov
clc
and
int
ins
or
mov
jbe
fs
bswap
or
and
repz
repz
pushw
rol
jg
stc
es
or
mov
mov
or
mov
out
cmc
dec
adc
and
jb
xor
stos
or
push
mov
inc
shl
sahf
btr
data16
stc
xor
dec
stos
in
ds
scas
pop
dec
mov
xchg
xchg
or
jb
stos
in
ss
inc
shl
or
stc
xor
and
imul
mov
in
ss
inc
shl
add
xor
stc
xor
and
and
enter
fdivp
retf
or
jae
cmc
xor
dec
dec
test
cmp
jecxz
fdivp
pop
and
jg
jecxz
fdivp
xor
push
mul
fdivp
xor
push
mul
fdivp
dec
rcr
mul
fwait
cmp
or
and
fwait
cmc
mov
dec
dec
test
pop
rol
retf
cmps
jecxz
fdivp
pop
pop
fdivp
jecxz
jg
jecxz
fdivp
lock
dec
mul
fwait
ja
jecxz
fdivp
push
out
mul
fwait
das
mul
fdivp
adc
(bad)
ja
hlt
lea
jecxz
fdivp
jecxz
cmps
data16
dec
ds
fdivp
jecxz
mov
xor
fimul
aaa
push
data16
push
mul
fsubrp
cmp
fdivp
jecxz
push
outs
jecxz
ficom
fdivp
jecxz
lea
ficomp
fdivp
jecxz
mov
in
pop
fdivp
jecxz
jbe
jecxz
ficom
mov
push
mul
fiadd
call
es
shl
add
call
scas
and
loope
rol
cs
fdivp
retf
or
jae
and
jecxz
fdivp
sub
fdivp
jecxz
int
jae
fdivp
pop
pop
fdivp
jecxz
cmc
xor
dec
dec
idiv
rcr
mul
fwait
cmps
jecxz
fdivp
inc
(bad)
mul
fwait
push
mul
fdivp
cli
ret
fdivp
jecxz
mov
mul
fdivp
jecxz
push
mul
fdivp
int
cmp
jecxz
fdivp
jb
fdivp
jecxz
lods
xchg
jecxz
fdivp
retf
or
and
fwait
int
jae
fdivp
pop
pop
fdivp
jecxz
cmc
mov
dec
dec
idiv
rcr
mul
fwait
cmps
jecxz
fdivp
inc
(bad)
mul
fwait
push
mul
fdivp
cli
ret
fdivp
jecxz
mov
mul
fdivp
jecxz
push
mul
fdivp
int
pop
rol
jg
jecxz
fdivp
jb
fdivp
jecxz
lods
xchg
jecxz
fdivp
adc
sub
mov
sbb
xchg
mov
in
cs
and
(bad)
and
or
clc
dec
mov
ss
and
dec
stos
out
idiv
cli
dec
scas
out
xlat
mov
mov
mov
mov
data16
neg
and
dec
xchg
push
test
call
daa
xchg
mov
pop
out
mov
sbb
push
or
movs
dec
fwait
mov
data16
or
jae
dec
data16
inc
shl
lock
lahf
pop
fcmovbe
xchg
mov
xlat
xchg
mov
les
aaa
ds
aaa
xor
arpl
inc
shl
clc
sub
add
bound
lods
data16
cmp
ror
xor
jbe
mov
(bad)
jbe
dec
mov
mov
mov
mul
sbb
or
or
ss
out
stos
or
imul
pop
cmps
movs
cmp
xchg
xchg
and
cmps
aam
or
mov
idiv
push
or
push
test
call
mov
cs
int
in
hlt
mov
sub
adc
xor
jle
and
inc
cmp
cmp
out
mov
shr
jae
hlt
imul
aaa
cli
retf
jb
(bad)
pushf
jle
mov
pop
rol
sub
int
mov
or
jae
dec
push
mov
js
jae
ret
and
jecxz
sahf
mov
int
jnp
lea
add
jnp
or
lds
cmps
xchg
or
jb
cmps
repz
and
(bad)
add
push
jecxz
imul
or
and
adc
jae
cmps
xchg
or
jg
dec
out
stos
or
into
dec
dec
gs
mov
iret
push
(bad)
mov
dec
mov
mov
out
stos
or
call
jg
lock
mov
rol
repz
or
into
dec
dec
pop
idiv
rcr
repz
or
cwde
sbb
mov
data16
repz
cmp
ss
(bad)
cmps
mov
data16
xchg
(bad)
or
mov
mov
inc
dec
data16
dec
xchg
mov
inc
dec
data16
jbe
imul
mov
inc
mov
ss
(bad)
or
out
shl
in
push
rol
mov
pop
xlat
repz
mov
or
arpl
(bad)
or
mov
xor
push
mov
dec
lock
inc
(bad)
mov
dec
mov
test
out
stos
or
xchg
clc
push
sahf
(bad)
or
lock
mov
and
or
into
dec
dec
pop
ss
cmp
rcr
repz
or
cwde
sbb
xchg
jb
(bad)
mov
add
push
arpl
call
mov
dec
dec
mov
gs
iret
repz
add
xor
scas
(bad)
or
imul
je
lods
or
into
dec
dec
imul
sbb
mov
data16
push
xchg
(bad)
or
push
mov
mov
dec
in
jecxz
out
cmp
out
ss
mov
and
repz
pop
cmps
jmp
mov
and
sbb
and
sbb
and
sbb
dec
xor
cmp
aaa
pop
data16
or
fwait
pop
mov
xchg
pop
mov
xchg
jecxz
das
jae
(bad)
xchg
test
(bad)
and
out
cmps
sub
or
fwait
repz
data16
mov
sub
adc
xor
push
fs
sbb
push
cli
dec
(bad)
xchg
test
(bad)
jecxz
div
arpl
mov
dec
data16
push
mov
xor
test
or
xchg
or
mov
mov
mov
mov
mov
imul
mov
dec
cmps
mov
lods
cli
fist
out
mov
mov
cli
icebp
(bad)
repz
mov
repnz
ins
pop
jae
mov
mov
movs
dec
fwait
iret
add
sbb
pop
out
mov
movs
cmps
mov
lahf
ins
and
lock
das
out
out
mov
mov
into
and
inc
adc
hlt
mov
fwait
add
mov
cmp
mov
mov
jge
test
jecxz
cmc
mov
and
(bad)
xor
es
lods
dec
dec
jmp
lock
mov
or
or
and
out
mov
dec
or
popa
dec
or
popa
dec
push
jae
dec
dec
push
mov
dec
data16
mov
xchg
pop
sti
(bad)
mov
sti
ror
jecxz
sub
dec
push
push
jb
dec
sbb
repz
hlt
sti
xchg
mov
mov
cs
dec
data16
cmps
nop
xor
jg
and
pop
es
div
mov
mov
xchg
cmp
dec
out
jecxz
data16
retf
popf
mov
mov
sbb
xchg
and
xchg
cdq
(bad)
hlt
mov
sbb
dec
data16
data16
mov
pop
mov
xchg
and
arpl
jecxz
cmc
mov
and
data16
cmps
jnp
or
sbb
and
arpl
mov
jae
into
mov
dec
lock
sbb
sub
sub
clc
jle
fst
call
sahf
cli
int3
mov
pop
mov
inc
aas
jae
int
(bad)
or
and
pop
and
sbb
imul
dec
cdq
push
pop
mov
jnp
sub
jae
(bad)
xchg
lock
mov
repz
dec
pushw
repnz
and
or
jb
dec
cdq
push
sbb
das
jae
mov
(bad)
jecxz
das
jae
adc
sub
lea
cli
out
sbb
inc
cmp
sbb
repz
sahf
cli
int3
mov
jcxz
and
and
and
cmp
jle
cdq
push
pop
mov
jnp
jg
jae
int
imul
sub
add
mov
popa
dec
jmp
pop
push
cdq
push
sbb
outs
fwait
or
mov
push
lea
cli
out
pop
ss
lods
dec
(bad)
pop
iret
mov
dec
dec
sbb
es
jae
dec
or
popa
dec
or
hlt
cmp
jle
mov
inc
dec
data16
cmp
retf
movs
push
mov
cdq
push
pop
mov
outs
popa
dec
cdq
push
sbb
cs
inc
cmps
pop
pop
mov
(bad)
jecxz
cs
jg
cwde
sbb
mov
inc
dec
data16
mov
inc
dec
inc
retf
push
cmp
mov
adc
or
or
int3
cld
or
mov
fidiv
dec
data16
(bad)
and
or
and
or
jae
cmp
jle
mov
dec
data16
cmp
retf
movs
pop
dec
ss
hlt
cmp
jle
mov
dec
data16
cmp
jle
mov
dec
inc
retf
movs
jle
es
out
ss
mov
sahf
dec
dec
data16
or
push
xchg
and
(bad)
add
es
repz
cli
int3
int
(bad)
fimul
jae
ins
mov
dec
dec
and
test
and
or
mov
out
mov
mov
mov
mov
cwde
xor
sbb
dec
data16
dec
or
popa
dec
push
adc
or
fwait
stos
or
test
mov
or
push
movq
jb
(bad)
mov
xor
cmps
call
not
cmp
rcl
cmp
inc
ja
pop
pop
lods
dec
dec
out
and
lea
cli
out
pop
and
in
push
add
cmp
or
clc
dec
mov
mov
mov
es
pop
dec
push
cmp
repz
stos
pop
mov
arpl
jmp
mov
stos
sbb
mov
dec
repnz
mov
cmp
dec
out
mov
or
dec
xor
xchg
adc
jb
jae
ins
out
mov
pop
jne
cmp
dec
pop
mov
or
push
test
call
mov
mov
or
mov
and
jp
cmp
sti
dec
mov
fwait
iret
or
jae
or
cli
pop
mov
stos
or
lea
call
adc
xor
pop
xor
jnp
xchg
or
(bad)
xchg
inc
sti
(bad)
mov
jae
(bad)
and
mov
mov
dec
mov
data16
mov
bound
mov
ins
jl
dec
push
lock
aas
out
ja
or
repz
adc
or
cwde
jl
jb
cli
repz
dec
inc
das
xor
repz
dec
fdivr
mov
test
(bad)
mov
sbb
adc
xchg
lods
dec
dec
xor
mov
cwde
jl
or
fadd
adc
or
dec
fs
icebp
daa
jae
sbb
pop
(bad)
das
iret
nop
(bad)
cmp
mov
in
out
fwait
mov
(bad)
xchg
pop
sti
(bad)
mov
(bad)
hlt
push
cdq
push
pop
cmps
out
hlt
mov
mov
(bad)
movs
jp
cmp
retf
cmps
pop
js
dec
in
repz
mov
cmp
jecxz
and
or
call
jb
xchg
mov
push
dec
data16
(bad)
jecxz
hlt
mov
clc
mov
cdq
mov
and
cdq
inc
sbb
mov
mov
iret
xor
jae
sbb
jecxz
and
or
jecxz
hlt
mov
retf
push
test
neg
mov
mov
bound
dec
mov
sti
dec
xchg
cli
int
and
retf
stos
mov
mov
mov
xchg
jae
mov
mov
inc
in
out
mov
mov
mov
fwait
jne
cdq
mov
xchg
and
hlt
cmp
iret
or
mov
and
hlt
sti
call
dec
lock
inc
mov
dec
dec
retfw
data16
mov
sbb
mov
ror
xchg
data16
mov
inc
or
mov
data16
xlat
xchg
mov
cmps
push
or
adc
dec
jmp
mov
cdq
(bad)
hlt
sbb
dec
aam
data16
jge
jae
int
arpl
mov
cdq
mov
(bad)
mov
jae
inc
data16
xlat
xchg
mov
es
xchg
dec
dec
cdq
(bad)
div
and
int
jnp
jns
xor
mov
(bad)
hlt
mov
fwait
sbb
data16
mov
(bad)
or
mov
data16
xlat
xchg
mov
es
xchg
dec
dec
cdq
(bad)
div
and
int
jnp
mov
mov
mov
aad
jae
imul
dec
inc
ins
mov
dec
dec
retfw
data16
mov
call
xchg
and
pop
cmps
loopne
or
mov
mov
push
arpl
or
jecxz
hlt
mov
and
mov
sbb
lock
pop
mov
dec
dec
retfw
data16
mov
sbb
mov
ror
arpl
data16
mov
add
call
dec
lock
inc
out
and
out
mov
inc
and
imul
dec
inc
pop
push
sub
data16
cmps
dec
aaa
or
mov
es
dec
dec
cdq
(bad)
div
and
int
jnp
popf
and
jae
dec
inc
ins
mov
push
mov
call
xchg
and
pop
cmps
fdiv
or
mov
iret
nop
outs
and
or
gs
xlat
xchg
mov
fwait
lods
dec
dec
jmp
aad
fwait
mov
xor
dec
jmp
aad
fwait
mov
adc
retf
call
nop
and
pop
cmps
sbb
or
mov
cmps
cmp
or
jns
dec
jmp
push
xor
inc
or
data16
xlat
xchg
mov
fisttp
arpl
xor
sbb
lock
pop
mov
dec
retfw
data16
mov
sbb
mov
ror
dec
or
outs
repnz
sbb
jae
cmps
pushf
xor
dec
fistp
dec
jmp
push
xor
rcl
mov
mov
push
dec
lock
inc
mov
add
jae
mov
sbb
mov
ror
dec
jae
mov
pushf
nop
and
hlt
cmp
mov
push
jmp
jecxz
and
or
mov
jae
imul
dec
inc
pop
push
mov
mov
cmps
aam
or
mov
test
or
xchg
or
mov
mov
mov
adc
or
ins
jae
dec
inc
pop
push
sub
data16
cmps
sbb
or
mov
cmps
pop
xor
dec
fistp
dec
jmp
push
xor
and
jae
sub
xchg
mov
fisttp
arpl
xor
sbb
lock
pop
in
sub
idiv
data16
jmp
mov
mov
call
data16
mov
repnz
sub
int
retf
hlt
mov
jae
cmp
div
retf
fimul
mov
mov
in
into
mov
fwait
mov
repz
jne
mov
xlat
xchg
mov
mov
imul
mov
cmps
cdq
or
repz
hlt
mov
cli
fmul
mov
jae
mov
and
adc
xor
ret
(bad)
mov
and
shl
or
mov
add
fwait
mov
mov
jae
dec
imul
hlt
sti
xchg
mov
mov
push
adc
jecxz
or
call
nop
and
pop
cmps
sub
or
mov
cmps
dec
xor
dec
fistp
dec
jmp
push
xor
push
nop
and
hlt
sti
call
dec
lock
inc
out
and
out
mov
dec
daa
jae
imul
dec
inc
pop
push
mov
mov
cmps
inc
xor
dec
in
add
fistp
dec
jmp
push
xor
sti
scas
and
hlt
sti
call
dec
lock
inc
out
mov
fwait
mov
retf
xchg
mov
mov
div
mov
mov
retf
fimul
mov
mov
mov
or
out
mov
les
or
and
retf
sahf
mov
mov
sub
dec
data16
mov
dec
imul
cmp
ss
dec
mov
pop
div
mov
mov
in
div
mov
mov
mov
push
pop
es
lods
dec
dec
jmp
push
sub
or
mov
ret
jmp
hlt
mov
lock
mov
repz
dec
pushw
repnz
mov
mov
mov
mov
ja
jae
retf
data16
mov
jl
retf
fmul
mov
mov
xor
dec
push
mov
repz
lock
dec
out
idiv
mov
mov
sti
xchg
mov
mov
push
adc
cdq
clc
mov
push
pop
aad
and
xchg
pop
jae
int
imul
cmp
neg
retf
hlt
mov
cli
int
ror
jns
dec
jmp
push
xor
push
nop
and
hlt
sti
call
dec
lock
inc
mov
xor
retfw
data16
mov
sbb
test
(bad)
hlt
mov
fwait
stos
jno
jae
mov
push
jno
jae
inc
data16
xlat
xchg
mov
es
xchg
dec
dec
cdq
(bad)
div
pop
jae
int
jnp
sti
xchg
mov
mov
call
cmp
mov
xchg
mov
dec
push
cdq
(bad)
repz
mov
data16
mov
mov
(bad)
jecxz
hlt
mov
jp
inc
jecxz
cmc
mov
sbb
nop
and
hlt
sti
call
dec
lock
inc
mov
add
jae
mov
sbb
adc
(bad)
hlt
mov
fwait
add
jae
mov
iret
jo
jae
inc
data16
xlat
xchg
mov
lods
lods
dec
dec
cdq
(bad)
div
pop
jae
int
jnp
mov
mov
xor
dec
data16
mov
sbb
mov
ror
mov
data16
mov
cmp
call
dec
lock
inc
mov
xor
dec
data16
mov
sbb
add
or
add
test
sbb
into
div
pop
lods
dec
dec
xor
mov
data16
inc
data16
xlat
xchg
mov
cmp
div
pop
jae
int
jnp
mov
mov
dec
retfw
data16
mov
sbb
test
(bad)
hlt
mov
fwait
sub
jae
mov
xlat
jae
jae
inc
data16
xlat
xchg
mov
es
xchg
dec
dec
cdq
(bad)
div
pop
jae
int
jnp
stc
pop
jae
imul
dec
inc
ins
mov
ss
retfw
data16
mov
call
xchg
and
pop
cmps
les
dec
in
sbb
dec
lods
dec
dec
cdq
(bad)
div
pop
jae
int
jnp
mov
fimul
sub
ins
jae
dec
inc
pop
push
sub
data16
cmps
in
or
mov
es
dec
dec
cdq
(bad)
div
pop
jae
int
jnp
gs
jae
imul
dec
inc
pop
push
sub
data16
cmps
sub
or
mov
es
dec
dec
cdq
(bad)
div
pop
jae
int
jnp
mov
mov
add
jae
mov
sbb
mov
ror
pop
jae
jae
mov
mov
in
div
mov
mov
lods
dec
dec
ss
(bad)
jb
jae
mov
cmps
jb
jae
inc
data16
xlat
xchg
mov
es
xchg
dec
dec
cdq
(bad)
div
pop
jae
int
jnp
mov
push
jae
or
mov
cmps
aam
or
mov
cmps
or
dec
fistp
dec
jmp
push
xor
sti
scas
and
hlt
sti
call
dec
lock
inc
mov
aaa
dec
retfw
data16
mov
mov
and
repz
xchg
and
pop
cmps
pop
dec
or
mov
cmps
js
or
jns
dec
jmp
push
xor
sti
scas
and
hlt
sti
call
dec
lock
inc
push
lods
(bad)
or
mov
cmps
dec
dec
or
mov
(bad)
xchg
pop
sti
(bad)
mov
jae
inc
data16
xlat
xchg
mov
es
xchg
dec
dec
cdq
(bad)
div
pop
jae
int
jnp
cmc
pop
jae
imul
dec
inc
ins
mov
xor
retf
data16
mov
call
xchg
and
pop
cmps
ror
in
sbb
mov
dec
dec
cdq
(bad)
div
pop
jae
int
jnp
dec
or
popa
dec
or
popa
dec
push
jae
dec
mov
mov
dec
data16
mov
mov
mov
cmps
ror
dec
or
xchg
xchg
mov
mov
and
sti
call
mov
mov
rcr
mov
fwait
hlt
mov
fwait
and
jae
sti
call
dec
data16
sti
mov
cdq
mov
(bad)
mov
jae
(bad)
hlt
mov
sub
adc
xor
dec
addr16
sbb
cs
jg
cli
int3
mov
mov
movs
pop
repnz
repz
jae
inc
shl
hlt
push
push
clc
(bad)
or
dec
push
mov
or
loopne
dec
dec
jmp
hlt
mov
mov
addr16
into
mov
iret
push
out
hlt
dec
in
ss
jb
add
xchg
and
arpl
xor
es
into
mov
sti
mov
sbb
xchg
and
arpl
scas
dec
dec
push
jo
dec
out
jns
cdq
mov
jg
cli
int3
adc
repnz
fs
sbb
jbe
xor
imul
xchg
xchg
or
mov
mov
mov
jmp
mov
mov
clc
dec
inc
out
or
mov
scas
addr16
mov
fwait
mov
lds
jnp
dec
arpl
dec
data16
mov
fwait
mov
(bad)
sahf
pop
repz
mov
jnp
mov
mov
sbb
clc
pop
inc
jmp
or
cli
sahf
out
fwait
mov
sbb
cli
mov
fwait
mov
mov
shl
mov
fwait
inc
jns
jae
sbb
xchg
fwait
mov
ret
xor
ret
xor
or
out
mov
mov
mov
fwait
and
jae
retf
adc
stos
mov
mov
pop
push
jae
(bad)
jecxz
div
fwait
mov
cmps
pusha
inc
or
es
jmp
div
arpl
xchg
fwait
mov
ret
xor
ret
xor
or
out
mov
mov
mov
or
out
neg
pop
or
xchg
ret
mov
fwait
aas
ja
jae
mov
mov
dec
and
and
bound
dec
jmp
mov
es
scas
dec
dec
push
(bad)
xlat
or
sbb
dec
data16
mov
mov
jle
cmps
mov
or
mov
and
jae
cmps
je
hlt
mov
ja
dec
data16
push
jmp
mov
cmps
call
(bad)
lahf
mov
mov
sti
test
mov
mov
sti
out
mov
mov
(bad)
xchg
mov
mov
sti
(bad)
mov
mov
dec
push
mov
mov
lock
outs
out
not
mov
jle
cmps
or
or
mov
dec
fs
es
scas
dec
dec
jmp
div
mov
or
mov
mov
mov
retf
ror
mov
mov
xor
fsub
loop
hlt
mov
mov
sub
popa
or
xchg
fimul
aaa
jbe
jae
mov
mov
cwde
mov
or
or
or
or
xchg
or
mov
mov
mov
retf
or
dec
add
dec
data16
fwait
mov
dec
adc
mov
fwait
cmc
mov
jb
iret
mov
dec
data16
push
mov
xchg
ret
mov
dec
push
or
popa
dec
or
popa
dec
or
popa
dec
jmp
div
data16
pop
jnp
jae
mov
in
data16
sti
into
mov
mov
cmps
cmp
repnz
jle
or
cdq
sbb
xchg
and
arpl
mov
(bad)
cmc
mov
and
mov
or
mov
mov
mov
cwde
and
(bad)
mov
mov
push
push
push
xlat
or
fwait
dec
jnp
jae
lea
jle
push
fwait
or
fwait
cmp
mov
or
stc
mov
arpl
ret
inc
mov
or
dec
mov
aas
dec
data16
fwait
mov
dec
adc
dec
xchg
jae
cmps
xor
dec
fisub
data16
(bad)
jecxz
div
bound
dec
jmp
div
mov
or
or
dec
dec
jmp
div
bswap
hlt
mov
mov
jae
mov
dec
adc
jmp
mov
mov
cli
repz
sahf
cli
int3
movs
jo
scas
rcr
pushf
push
pusha
data16
dec
in
xchg
mov
mov
ret
jecxz
div
push
jae
iret
mov
push
dec
and
push
jae
and
mov
cmps
mov
(bad)
scas
mov
mov
cmc
push
jae
(bad)
div
sahf
inc
repz
mov
mov
dec
xor
out
int
addr16
sbb
clc
push
pop
fst
mov
cli
repz
out
mov
mov
mov
cmp
jecxz
data16
mov
cli
pop
mov
push
pop
cmps
mov
mov
(bad)
xor
(bad)
jge
jae
mov
cli
pop
mov
data16
mov
cli
pop
mov
data16
stc
and
or
addr16
xor
pop
and
fistp
or
jb
fisub
jne
mov
mov
or
cmp
jae
int
jg
cmp
sti
int
jbe
cmps
xor
or
push
pop
inc
shl
cmc
ret
and
push
ss
dec
jg
jae
cmp
mov
dec
arpl
call
imul
repz
mov
lea
stc
xor
pop
mov
ss
movq
xchg
sahf
and
xor
(bad)
sbb
or
jecxz
push
jae
(bad)
mov
cli
int3
and
and
or
and
cmp
and
or
and
enter
mov
jns
or
xor
jnp
mov
sahf
jb
(bad)
mov
mov
push
jns
or
xchg
in
dec
data16
push
jmp
retf
scas
cdq
mov
add
and
data16
int
cmps
jl
xlat
data16
(bad)
sahf
inc
repz
mov
xchg
hlt
mov
ret
lock
inc
outs
mov
ins
cdq
mov
cdq
mov
cmp
pop
jle
jae
(bad)
cmp
mov
xchg
push
lea
hlt
mov
ins
or
div
ret
jecxz
jmp
cdq
and
call
mov
je
test
cmp
pop
mov
mov
mov
fwait
pop
jp
jae
mov
retf
cmp
mov
mov
jg
mov
sahf
test
(bad)
jecxz
jmp
cdq
cli
int3
jg
xor
dec
(bad)
xlat
cmp
movs
sub
fwait
cmps
popa
data16
sbb
clc
push
inc
fdiv
sub
add
cld
test
idiv
xchg
cdq
mov
mov
jae
and
mov
repz
dec
pushw
repnz
mov
jb
sbb
jl
mov
lock
inc
push
es
data16
sbb
or
mov
jae
mov
mov
adc
cdq
cli
int
xchg
inc
sti
(bad)
mov
jae
retf
xchg
hlt
mov
fwait
(bad)
data16
mov
out
jge
jae
inc
data16
xlat
xchg
mov
es
xchg
dec
dec
jmp
or
fs
or
mov
iret
mov
fwait
mov
data16
inc
data16
xlat
xchg
mov
cmps
rol
fist
or
jmp
xchg
or
(bad)
mov
xchg
dec
lock
pop
mov
cmp
retf
data16
mov
sbb
mov
jecxz
jmp
cdq
and
aad
jae
int
jnp
jns
xor
ret
jecxz
jmp
cdq
and
leave
push
jae
int
jnp
mov
mov
jns
jae
imul
dec
inc
pop
push
sub
data16
push
mov
cmp
lock
inc
mov
dec
retfw
data16
mov
sbb
mov
jae
test
into
or
ds
dec
dec
jmp
or
nop
inc
or
mov
mov
arpl
mov
jae
mov
and
mov
jae
mov
and
popf
push
jae
int
jcxz
push
jae
imul
dec
inc
pop
push
sub
data16
push
mov
iret
inc
push
jns
or
dec
push
mov
cmp
lock
inc
out
or
jae
cmp
ins
jae
dec
inc
pop
push
sub
data16
push
mov
cmp
lock
inc
push
jo
or
dec
push
mov
cmp
lock
inc
mov
dec
retfw
data16
mov
sbb
imul
dec
inc
scas
cdq
mov
scas
dec
dec
jmp
or
js
or
mov
es
lods
dec
dec
jmp
or
dec
inc
or
mov
cmps
mov
dec
fistp
dec
jmp
push
xor
sti
scas
and
xchg
xchg
hlt
mov
fwait
add
mov
xchg
cli
int
sub
test
cdq
mov
mov
dec
in
add
fistp
dec
jmp
push
xor
sti
scas
and
xchg
xchg
hlt
mov
fwait
ret
jg
jae
mov
adc
xchg
hlt
mov
fwait
mov
mov
jnp
data16
inc
data16
xlat
xchg
mov
es
xchg
dec
dec
jmp
or
call
mov
iret
mov
dec
data16
jmp
or
dec
scas
dec
dec
jmp
or
and
dec
in
sbb
fistp
dec
jmp
push
xor
sti
scas
and
xchg
xchg
hlt
mov
fwait
dec
jg
jae
mov
or
xchg
hlt
mov
fwait
cmp
jae
mov
rcl
jae
test
mul
xchg
cdq
mov
dec
retfw
data16
mov
sbb
mov
jecxz
jmp
cdq
and
mov
jae
int
jnp
stc
push
jae
test
repnz
pop
inc
jae
sbb
into
or
jo
dec
dec
jmp
or
rol
in
sbb
fistp
dec
jmp
push
xor
sti
scas
and
xchg
xchg
hlt
mov
fwait
scas
jle
jae
mov
aad
and
xchg
xchg
hlt
mov
fwait
fwait
jle
jae
mov
std
jbe
jae
cmps
and
dec
fistp
dec
jmp
push
xor
sti
scas
and
xchg
xchg
hlt
mov
fwait
outs
jle
jae
mov
sub
jae
inc
data16
xlat
xchg
mov
cmps
push
adc
dec
jmp
mov
xchg
or
(bad)
mov
xchg
dec
lock
pop
push
mov
mov
mov
push
mov
dec
lock
inc
or
popa
dec
or
popa
dec
or
arpl
jae
sbb
data16
mov
mov
dec
push
mov
dec
sbb
ret
fisttp
pop
ret
(bad)
mov
and
sti
call
dec
data16
cmps
loopne
or
mov
movs
push
sti
mov
mov
sub
adc
xor
ret
or
xor
push
(bad)
sahf
pop
repz
mov
mov
dec
push
test
dec
in
add
data16
pop
inc
jmp
or
out
mov
mov
mov
popf
mov
(bad)
mov
jae
cmps
pop
pop
or
push
and
jecxz
dec
jae
(bad)
jecxz
div
data16
push
mov
cmovg
xchg
ror
movs
xchg
and
arpl
mov
jae
into
mov
out
mov
lock
push
mov
retf
or
ja
dec
data16
push
jmp
mov
cmps
and
dec
ficomp
dec
data16
(bad)
jecxz
lock
cli
int3
mov
shl
mov
and
mov
fwait
sbb
jp
inc
loop
or
sbb
retf
call
pusha
data16
retf
ror
mov
mov
and
stos
cdq
mov
mov
mov
mov
mov
or
xchg
fimul
adc
jae
mov
repz
cli
int3
mov
retf
cmc
mov
aaa
or
mov
stos
cwde
mov
dec
data16
int
jmp
mov
jae
push
add
dec
data16
repz
sahf
cli
int3
ret
jecxz
cmc
mov
and
sahf
or
cdq
mov
jecxz
cmc
mov
and
or
popa
outs
or
popa
dec
or
xchg
call
cmps
fs
or
mov
retf
or
(bad)
mov
lea
or
or
xchg
or
mov
mov
mov
sti
(bad)
mov
mov
popa
aam
sbb
and
xchg
call
arpl
mov
popf
mov
dec
lea
mov
or
div
mov
mov
adc
and
cli
int
cmps
push
adc
mov
dec
mov
and
repz
popf
mov
dec
in
div
mov
dec
adc
add
data16
dec
xchg
jae
cmps
sub
or
ja
dec
data16
push
xor
xor
jb
and
xor
ret
jecxz
div
aad
hlt
int
jg
mov
jae
inc
loop
or
dec
push
xor
mov
inc
loop
or
sbb
mov
out
mov
dec
push
mov
and
dec
push
cdq
(bad)
lahf
mov
mov
mov
mov
(bad)
mov
jae
mov
out
mov
fwait
dec
fs
inc
mov
pop
or
sbb
xchg
and
pop
cmps
xchg
pop
or
mov
inc
cmps
push
and
ins
scas
dec
dec
mov
xchg
rcr
dec
pop
(bad)
movs
jb
sbb
cdq
mov
mov
mov
not
cmps
push
and
shl
div
cdq
mov
mov
popf
mov
(bad)
mov
jae
mov
out
div
data16
push
mov
and
sbb
mov
xlat
div
data16
mov
mov
mov
mov
pop
dec
jae
(bad)
div
scas
mov
dec
xor
out
int
arpl
xor
push
inc
fst
xchg
pop
cli
repz
out
mov
cmps
sub
dec
out
push
dec
jae
lds
xchg
and
fwait
jg
data16
mov
jae
mul
sub
dec
xchg
xchg
or
cli
int3
sbb
data16
jmp
or
imul
or
neg
or
pop
sbb
popa
dec
mov
dec
data16
int
sahf
inc
repz
mov
ret
data16
ss
or
mov
sub
data16
dec
mov
jne
mov
mov
xchg
ja
dec
data16
sub
pop
sbb
test
fs
popf
dec
data16
test
cdq
mov
cmp
jecxz
data16
mov
mov
mov
mov
mov
lea
arpl
jecxz
sti
mov
and
mov
or
jb
cmp
mov
mov
push
mov
mov
inc
pop
mov
dec
popw
(bad)
xchg
cwde
sbb
mov
sbb
sbb
cli
int
leave
sub
xchg
lahf
pop
sbb
jbe
cmp
cld
add
or
mov
cwde
arpl
sahf
jb
(bad)
mov
and
mov
xchg
rcr
dec
jmp
call
or
arpl
push
rep
or
fwait
pop
addr16
stc
and
arpl
and
or
mov
ret
and
dec
dec
data16
jnp
in
dec
dec
mov
int3
push
imul
inc
shl
cmc
int
jle
sar
enter
int
cdq
push
mov
mov
dec
or
popa
dec
or
popa
dec
or
popa
dec
or
arpl
addr16
and
sbb
and
sbb
cmps
dec
pop
or
mov
dec
xor
cmp
data16
xchg
jae
mov
or
pop
and
mov
cmps
sti
xor
cmps
adc
dec
or
pop
and
mov
into
(bad)
xor
cmps
add
dec
or
pop
and
mov
(bad)
stc
xor
cmps
xor
dec
or
pop
and
mov
push
repz
cmps
and
dec
out
mov
mov
mov
dec
xor
cmp
data16
cmp
jae
dec
xor
cmp
data16
sub
jae
dec
xor
cmp
data16
sbb
jae
dec
xor
cmp
data16
or
jae
mov
mov
and
mov
jle
xor
cmps
mov
or
pop
and
mov
mov
mov
jb
and
mov
fcmovb
xor
cmps
lods
push
or
jb
and
mov
(bad)
lds
or
out
mov
mov
mov
adc
and
test
fcomp
(bad)
sahf
test
(bad)
and
hlt
jnp
out
dec
dec
mov
dec
data16
(bad)
jae
nop
loopne
or
mov
cmps
sti
xor
cmps
push
push
or
(bad)
hlt
jnp
ror
mov
dec
data16
shl
jae
nop
loopne
or
mov
into
(bad)
xor
cmps
push
mov
mov
mov
mov
inc
daa
shl
jae
mov
inc
in
dec
dec
push
lods
lea
sbb
mov
pop
xchg
pcmpgtd
popa
mov
inc
pop
(bad)
jae
test
or
data16
dec
push
lods
lea
sbb
mov
outs
sahf
push
data16
retf
push
cdq
inc
and
daa
jae
jmp
push
ror
push
lods
lea
sbb
mov
pop
xchg
pcmpgtd
popa
mov
inc
sub
daa
jae
int
jae
in
dec
jmp
sbb
mov
push
xchg
pcmpgtd
xor
(bad)
hlt
jnp
ror
mov
sub
shl
jae
nop
loopne
or
mov
retf
or
cmp
mov
mov
sub
mov
pop
data16
mov
adc
fcomp
sbb
xchg
and
pop
cmps
jecxz
hlt
mov
mov
in
outs
in
dec
dec
out
dec
dec
data16
dec
ss
arpl
jae
or
push
or
mov
mov
mov
dec
cdq
inc
aas
shl
jae
dec
xor
dec
mov
call
in
ss
or
data16
push
push
scas
aam
sbb
xchg
and
arpl
jae
cmps
dec
push
or
aaa
stos
pcmpgtd
or
sbb
push
or
or
pop
dec
mov
or
popa
pop
push
jae
into
ss
xchg
and
arpl
fwait
repz
dec
stc
xor
and
mov
jp
xor
and
mov
or
xor
div
dec
in
ss
popa
pop
or
arpl
repz
es
test
or
lds
stos
or
sbb
and
sbb
and
sbb
and
sbb
and
sbb
fidiv
dec
or
popa
dec
or
popa
pop
mov
int
mov
sbb
sbb
hlt
jnp
in
dec
dec
mov
cs
sbb
mov
inc
xchg
pcmpgtd
or
sbb
es
jno
dec
or
popa
pushw
jae
dec
sbb
and
arpl
fwait
inc
imul
xor
xor
and
mov
jp
xor
and
mov
or
xor
and
sbb
dec
data16
ss
arpl
jae
es
dec
dec
push
test
or
(bad)
or
sbb
mov
inc
xchg
pcmpgtd
or
sbb
es
or
ror
dec
sbb
es
push
push
mov
rcl
mov
pop
shl
jae
mov
or
hlt
jnp
in
dec
dec
or
hlt
jnp
ror
or
arpl
addr16
fdiv
dec
or
arpl
jae
es
test
or
lds
pcmpgtd
or
sbb
mov
adc
and
sbb
pop
push
jo
into
ss
xchg
and
arpl
mov
fwait
outs
push
jae
cmps
sti
xor
es
dec
dec
or
arpl
mov
dec
sbb
and
popa
dec
push
xor
dec
data16
cmps
sti
xor
cmps
je
or
jae
jnp
in
dec
dec
or
hlt
jnp
ror
push
pop
or
sbb
es
jae
dec
or
arpl
repz
es
not
or
sbb
cmps
fs
or
rep
or
cli
repz
sahf
cli
int3
and
mov
jp
xor
and
mov
cs
xor
es
jb
dec
or
arpl
data16
es
push
jo
into
ss
xchg
and
arpl
mov
fwait
retf
ins
data16
(bad)
stc
xor
cmps
push
mov
mov
jae
jnp
in
dec
dec
or
hlt
jnp
ror
or
popa
jne
xchg
or
sbb
data16
dec
data16
es
test
or
(bad)
or
repnz
mov
data16
jp
xor
and
mov
or
xor
and
sbb
mov
jae
es
or
jae
dec
sbb
and
arpl
fwait
dec
ins
data16
cmp
xor
and
mov
jp
xor
and
mov
or
xor
and
sbb
jb
dec
push
mov
dec
sbb
dec
and
mov
test
dec
or
jecxz
inc
jae
in
push
jmp
push
in
dec
dec
or
hlt
jnp
ror
or
arpl
push
jb
dec
or
arpl
jae
es
dec
dec
push
test
or
lds
repz
sahf
cli
int3
and
mov
jp
xor
and
mov
or
xor
and
sbb
sub
or
ror
dec
sbb
dec
and
mov
test
dec
or
jecxz
inc
jae
in
repnz
or
hlt
jnp
in
dec
dec
or
hlt
jnp
ror
or
arpl
jae
div
dec
or
arpl
repz
es
jb
or
sbb
dec
data16
sbb
loop
dec
dec
or
hlt
jnp
in
dec
dec
or
hlt
jnp
ror
or
arpl
data16
movs
jae
dec
or
arpl
repz
es
dec
dec
push
jb
or
sbb
dec
data16
pop
inc
jae
in
jp
dec
dec
out
mov
mov
mov
dec
cdq
inc
aas
shl
jae
dec
cdq
inc
imul
jae
push
or
arpl
jb
or
and
mov
test
or
fwait
shr
jae
data16
xor
and
mov
jp
xor
and
mov
cs
xor
and
sbb
xchg
jae
dec
or
arpl
repz
es
jb
or
sbb
dec
data16
rol
or
inc
in
dec
dec
or
hlt
jnp
in
dec
dec
or
hlt
jnp
ror
or
arpl
data16
es
jb
dec
or
arpl
repz
test
ror
sbb
cmps
add
dec
(bad)
or
fwait
bound
inc
jae
mov
out
mov
cmp
mov
mov
mov
and
pushf
jl
data16
mov
adc
ins
xchg
mov
(bad)
mov
jae
cmps
jae
hlt
mov
mov
in
outs
in
dec
dec
out
mov
mov
mov
dec
cdq
inc
add
daa
jae
mov
and
adc
data16
ss
and
mov
jp
xor
and
and
dec
mov
dec
ss
push
or
popa
dec
push
jae
into
ss
xchg
and
arpl
data16
dec
mov
sub
ror
daa
jae
dec
cdq
inc
aas
shl
jae
dec
sbb
lds
mov
or
sbb
and
sbb
dec
out
arpl
mov
jae
int
jae
in
(bad)
in
dec
dec
out
dec
ja
jae
dec
cdq
inc
aas
shl
jae
dec
cdq
inc
dec
out
daa
jae
bound
or
and
jecxz
sbb
jb
add
and
mov
test
dec
or
jecxz
inc
jae
in
push
ror
or
popa
dec
or
popa
dec
or
popa
dec
or
popa
dec
or
arpl
fs
and
sbb
and
sbb
cmps
in
or
mov
dec
xor
cmp
data16
jmp
data16
dec
cdq
inc
aas
shl
jae
dec
cdq
inc
imul
jae
sub
popa
pop
or
arpl
repz
es
not
or
sbb
cmps
mov
or
fwait
xchg
pcmpgtd
repz
cli
int3
es
dec
dec
or
arpl
push
fwait
xchg
pcmpgtd
arpl
mov
sbb
data16
jnp
out
dec
dec
mov
adc
data16
xor
jp
gs
dec
or
arpl
addr16
mov
fwait
xchg
pcmpgtd
loopne
or
popa
dec
push
cmp
cmps
sti
xor
cmps
and
or
hlt
jnp
in
dec
dec
or
hlt
jnp
ror
push
pop
or
sbb
and
sbb
gs
push
push
scas
aam
sbb
dec
mov
dec
data16
mov
or
jae
jnp
in
dec
dec
or
hlt
jnp
ror
push
pop
or
sbb
and
sbb
dec
repz
es
not
or
sbb
cmps
pushf
ins
or
pop
xchg
pcmpgtd
popa
dec
cdq
inc
aas
shl
jae
dec
cdq
inc
dec
out
daa
jae
pop
push
repnz
sbb
jb
or
jae
dec
sbb
and
arpl
fwait
mov
data16
cmp
xor
(bad)
sahf
inc
repz
mov
inc
xchg
pcmpgtd
or
sbb
and
sbb
data16
es
push
push
xor
or
sbb
xchg
and
popa
dec
mov
adc
xlat
daa
jae
dec
cdq
inc
aas
shl
jae
dec
cdq
inc
dec
out
daa
jae
pop
push
mov
dec
sbb
sub
jae
dec
sbb
xchg
and
arpl
fwait
dec
push
data16
mov
data16
jp
xor
and
mov
or
xor
and
sbb
fbstp
dec
push
ror
dec
sbb
dec
and
mov
test
dec
or
jecxz
js
or
repnz
or
hlt
jnp
in
dec
dec
or
hlt
jnp
ror
or
arpl
xor
or
arpl
jae
sbb
ror
sbb
cmps
mov
or
rsm
or
sbb
mov
inc
xchg
pcmpgtd
or
sbb
es
jae
dec
push
mov
dec
sbb
push
push
and
or
sbb
xchg
and
popa
dec
mov
push
dec
data16
dec
cdq
inc
aas
shl
jae
dec
cdq
inc
imul
jae
push
push
icebp
or
sbb
and
sbb
dec
out
arpl
les
or
addr16
or
fwait
imul
test
repz
iret
mov
sbb
mov
inc
xchg
pcmpgtd
or
sbb
and
sbb
jb
or
and
mov
test
or
fwait
das
push
data16
data16
xor
and
mov
jp
xor
and
mov
cs
xor
and
sbb
cmp
pop
es
push
push
scas
aam
sbb
xchg
and
arpl
jae
cmps
mov
dec
lds
pcmpgtd
or
sbb
mov
aaa
stos
pcmpgtd
sbb
std
jae
dec
push
xor
dec
sbb
push
push
nop
ror
sbb
xchg
and
popa
dec
mov
pop
dec
data16
not
pop
repz
mov
mov
mov
mov
add
cs
cmp
jae
dec
push
repz
sbb
and
sbb
es
into
cdq
push
add
out
mov
mov
jl
fisub
or
and
or
movs
cli
repz
sahf
cli
int3
sbb
lock
mov
mov
mov
jmp
sti
push
jmp
call
jmp
neg
cdq
push
sbb
pop
(bad)
dec
dec
push
jb
dec
out
imul
jle
push
mov
ds
dec
cdq
push
mul
xor
dec
dec
push
daa
ror
mov
cdq
push
add
in
adc
and
popa
dec
or
xchg
sahf
and
cmp
ss
and
arpl
jae
cmps
repnz
mov
mov
mul
adc
dec
xchg
xchg
or
cli
int3
adc
sub
lea
cli
out
iret
mov
dec
data16
imul
mov
push
data16
in
(bad)
xor
ret
jecxz
hlt
mov
and
sbb
xchg
jb
(bad)
mov
jae
inc
data16
xlat
xchg
mov
into
sbb
(bad)
and
xchg
mov
mov
fwait
das
push
data16
xor
stos
mov
dec
cdq
mov
push
mov
dec
data16
gs
sbb
xchg
ret
dec
dec
jmp
or
nop
or
popf
inc
push
data16
xor
addr16
dec
cdq
mov
push
mov
jbe
arpl
sbb
push
ret
jmp
or
movs
or
push
hlt
dec
adc
add
jecxz
hlt
mov
and
in
jae
into
sbb
jmp
xchg
mov
mov
fwait
lahf
pop
data16
mov
call
xor
lock
dec
cdq
mov
push
mov
sbb
data16
outs
push
sbb
(bad)
jmp
or
cmp
or
push
hlt
inc
adc
xchg
xlat
xor
ret
jecxz
hlt
mov
and
or
sbb
cld
and
xchg
mov
mov
fwait
daa
pop
data16
mov
out
hlt
inc
adc
outs
aam
or
jecxz
hlt
mov
and
inc
jno
or
sbb
cld
and
xchg
mov
mov
fwait
repz
data16
xor
es
dec
cdq
mov
push
mov
or
sbb
and
arpl
jecxz
hlt
mov
and
clc
xor
cmps
cmps
xchg
hlt
mov
dec
ror
sbb
push
stc
xor
cmps
add
hlt
mov
mov
inc
data16
out
push
data16
mov
sti
mov
cwde
mov
(bad)
mov
mov
scas
mov
dec
xor
out
sbb
outs
int3
scas
pop
idiv
xor
test
sbb
or
das
or
dec
mov
mov
jnp
dec
xor
push
adc
sub
jae
sbb
int
or
push
add
data16
(bad)
jecxz
cld
mov
cli
int
adc
dec
dec
jmp
out
cdq
mov
jo
or
ret
retfw
data16
mov
sahf
mov
into
fild
jle
push
fistp
mov
mov
mov
sahf
mov
dec
adc
mov
xor
ret
jecxz
cld
mov
and
xor
sti
(bad)
mov
mov
dec
adc
test
jecxz
cld
mov
and
loope
jae
into
fild
jle
push
jb
or
dec
push
mov
push
dec
data16
sahf
mov
dec
adc
push
aad
or
jecxz
cld
mov
and
xor
mov
xor
repz
sahf
mov
dec
adc
jp
xor
ret
jecxz
cld
mov
and
adc
fild
jle
push
cmp
or
dec
push
mov
push
dec
data16
sahf
mov
inc
adc
and
xor
ret
jecxz
cld
mov
and
imul
sti
(bad)
mov
mov
inc
adc
(bad)
or
jecxz
cld
mov
and
dec
jae
or
fild
jle
push
fnstcw
mov
mov
mov
sahf
mov
inc
adc
xchg
xor
ret
jecxz
cld
mov
and
popf
jb
or
xchg
test
(bad)
jecxz
cld
mov
cli
int
fild
jle
push
fwait
mov
mov
mov
pop
dec
data16
sahf
mov
inc
adc
dec
shl
or
jecxz
cld
mov
and
fnsave
or
fild
jle
push
push
mov
mov
mov
pop
dec
sbb
and
xchg
mov
mov
xchg
xchg
or
test
mov
mov
ds
xor
es
cwde
out
cdq
lock
pop
out
mul
mov
xchg
mov
mov
pop
push
int
fwait
cld
mov
jae
retf
or
cmp
out
mov
mov
ins
or
test
dec
push
add
mov
cli
mov
cmps
jl
nop
fs
cmps
bound
dec
out
div
loop
or
repz
call
dec
data16
repz
(bad)
hlt
mov
jl
gs
mov
mov
mov
jae
retf
sahf
mov
mov
sbb
xchg
and
xchg
call
push
data16
mov
mov
data16
test
not
mov
in
repz
mov
cmp
xor
jae
(bad)
icebp
push
cld
movs
cmps
mov
lahf
ins
and
xor
repz
mov
mov
hlt
inc
dec
data16
jae
out
dec
dec
fs
cmp
not
dec
dec
push
pop
ror
dec
push
mov
dec
repnz
push
or
not
dec
dec
push
ins
ror
dec
push
mov
iret
push
lea
arpl
jae
ret
jecxz
repz
and
push
jb
or
xchg
test
(bad)
jecxz
cld
mov
cli
int
jecxz
repz
and
mov
(bad)
cmc
mov
and
stc
jno
or
gs
dec
dec
jmp
div
lods
or
mov
ret
jecxz
cmc
mov
and
inc
jae
or
jecxz
div
dec
push
push
mov
or
dec
push
mov
sbb
lock
pop
or
xchg
call
pop
data16
dec
push
xchg
or
dec
push
mov
xchg
mov
lock
inc
outs
mov
retf
(bad)
or
div
mov
mov
cdq
jo
or
out
div
mov
mov
mov
xchg
mov
(bad)
mov
mov
inc
imul
hlt
sti
sahf
mov
mov
jecxz
or
sbb
xchg
and
xchg
call
pop
data16
mov
test
and
xchg
call
pop
data16
retf
call
pop
data16
retf
mov
push
or
test
mov
iret
push
mov
mov
popa
adc
retf
mov
test
dec
lea
mov
into
sar
mov
int
outs
jae
mov
mov
mov
dec
push
push
movs
ror
dec
push
mov
sbb
pop
jmp
div
movs
pusha
or
neg
mov
call
pop
data16
repz
hlt
mov
(bad)
pop
xor
dec
cmps
mov
idiv
mov
mov
mov
xchg
mov
(bad)
mov
mov
push
cdq
(bad)
push
ja
or
jecxz
repz
and
and
fisttp
xor
mov
mov
(bad)
dec
xor
xchg
sahf
mov
mov
sbb
mov
xchg
mov
sbb
dec
or
jecxz
jne
or
mov
mov
xor
mov
cmps
(bad)
mov
pop
(bad)
movs
jp
inc
jecxz
div
sahf
mov
cmps
xor
or
mov
sbb
arpl
adc
cmps
dec
or
call
cmp
sub
fwait
mov
sbb
enter
pop
mov
push
out
or
sbb
es
dec
mov
dec
data16
mov
mov
push
mov
sbb
sbb
cmps
cwde
or
cli
shl
cli
enter
test
stc
xor
mov
xchg
pcmpgtd
or
repnz
mov
jae
es
dec
dec
mov
sbb
sbb
dec
data16
faddp
xor
cmps
js
or
inc
sbb
and
push
jae
or
mov
sbb
dec
data16
retf
xlat
popf
hlt
mov
mov
mov
or
not
dec
dec
jmp
mov
cmps
jnp
hlt
mov
mov
jae
mov
dec
imul
mov
(bad)
dec
dec
outs
mov
or
repnz
or
fsub
or
mov
push
dec
mov
int3
int
xor
mov
rcr
cmp
dec
imul
hlt
hlt
mov
imul
mov
dec
cmps
mov
lods
cli
fist
out
mov
mov
cli
stc
(bad)
repnz
lods
mov
rcr
mov
mov
iret
lea
add
mov
loope
mov
dec
mov
dec
data16
leave
mov
mov
mov
mov
fucom
mov
inc
xchg
rcr
out
and
arpl
jecxz
out
cdq
and
dec
jb
or
dec
push
jmp
mov
cmps
sub
or
imul
cmps
jo
hlt
mov
adc
rcr
mov
sbb
ret
jecxz
out
cdq
and
mov
jae
(bad)
mov
sbb
cmps
dec
jl
dec
push
into
ror
sbb
mov
in
dec
dec
mov
sbb
cli
sar
cli
enter
in
cdq
(bad)
ds
mov
or
inc
jae
dec
xchg
adc
dec
dec
push
jecxz
or
sbb
xchg
and
arpl
(bad)
xor
cmps
or
or
into
and
and
or
sub
fcom
or
sbb
mov
jecxz
dec
mov
dec
data16
sar
cli
enter
out
cdq
(bad)
ds
mov
or
inc
jae
dec
xchg
adc
dec
dec
push
jecxz
or
sbb
xchg
and
arpl
xor
cmps
ins
pusha
or
mov
ret
fcmovne
out
cdq
(bad)
mov
jae
dec
xchg
(bad)
adc
jae
dec
or
popa
dec
or
arpl
jae
es
dec
dec
mov
add
data16
dec
cli
or
popa
dec
or
pop
cmps
les
mov
jae
ret
and
pop
ret
jecxz
in
cdq
and
or
or
jmp
in
cdq
lock
mov
repz
dec
pushw
repnz
(bad)
jle
xor
xchg
rcr
cli
mov
or
and
pop
and
sbb
scas
and
hlt
cmp
fwait
mov
data16
or
mov
data16
dec
push
mov
sbb
inc
int
mov
pop
jb
cmp
retf
pop
push
jmp
mov
mov
(bad)
jecxz
imul
div
sbb
es
xchg
dec
dec
cdq
push
mov
dec
fidiv
call
mov
clc
mov
mov
cli
mov
push
scas
mov
xchg
adc
inc
xchg
pcmpgtd
dec
sub
cli
xor
jae
or
jae
dec
mov
add
data16
dec
call
arpl
jae
and
fwait
mov
or
jae
dec
or
jecxz
jbe
or
and
or
mov
mov
cli
enter
or
jae
or
mov
xchg
or
stos
or
fisub
jecxz
imul
jp
xor
and
sbb
and
sbb
and
sbb
es
dec
push
xchg
ror
sbb
xchg
and
popa
dec
mov
or
daa
jae
(bad)
repz
or
out
or
sbb
and
fwait
pop
inc
data16
dec
mov
mov
lock
dec
mov
push
dec
dec
or
repz
push
out
or
fwait
inc
jae
xor
jb
dec
data16
mov
mov
dec
data16
xchg
inc
data16
dec
mov
mov
(bad)
mov
ja
dec
data16
shl
cli
enter
out
cdq
and
mov
sbb
and
arpl
mov
(bad)
dec
dec
push
jb
dec
out
test
cdq
mov
cmp
cs
xor
dec
mov
jae
dec
data16
imul
hlt
iret
xchg
imul
dec
push
or
popa
dec
push
mov
or
fwait
jecxz
data16
cmps
add
or
mul
and
sbb
es
add
or
popa
dec
mov
jecxz
push
or
sbb
dec
data16
dec
cdq
inc
or
daa
jae
jge
jae
movs
jle
dec
stos
ss
lahf
inc
data16
xchg
dec
stos
or
loop
dec
sbb
and
sbb
ret
and
or
mov
fwait
cmp
or
out
xchg
mov
xor
ja
sbb
das
fs
data16
(bad)
and
pop
int
arpl
repz
dec
sbb
mov
jl
and
jae
cmps
cli
jnp
dec
pop
bound
dec
data16
sub
jae
jb
dec
adc
pop
addr16
inc
jmp
dec
data16
retf
or
sbb
dec
data16
or
neg
dec
data16
mov
push
sbb
stos
cdq
mov
mov
mov
mov
mov
mov
rcr
or
jbe
mov
jecxz
div
or
dec
data16
inc
loop
or
dec
push
cdq
inc
dec
out
daa
jae
test
or
pop
fs
div
fwait
mov
int
ja
fld
out
mov
mov
sahf
adc
xchg
shl
(bad)
clc
sahf
sahf
fwait
mov
gs
fstp
push
sbb
kmovd
mov
pop
mov
in
not
mov
mov
retf
mov
hlt
mov
sbb
and
mov
or
xor
cmps
sbb
dec
out
mov
mov
mov
jae
(bad)
dec
dec
data16
fsub
or
add
dec
dec
lds
mov
jg
cli
int3
int
pop
mov
jae
(bad)
dec
dec
pushw
pop
mov
sbb
movs
cdq
mov
pop
add
retf
aas
je
dec
cdq
inc
arpl
and
jecxz
or
data16
repz
cli
int3
out
data16
dec
dec
pop
add
inc
or
sbb
cmps
mov
or
pop
or
data16
shl
jae
or
add
push
or
sahf
test
(bad)
jecxz
div
arpl
in
ss
(bad)
jecxz
cmc
mov
repnz
or
or
jecxz
or
pop
dec
jne
pop
stos
or
pop
aaa
jne
inc
xchg
pcmpgtd
aas
jne
adc
arpl
test
popw
das
jne
rsm
or
pop
pop
jne
shr
jne
jg
pcmpgtd
pop
jne
addr16
pcmpgtd
pusha
jae
and
mov
mov
pop
dec
data16
mov
arpl
stos
or
pop
sbb
shr
jne
inc
xchg
pcmpgtd
push
es
arpl
dec
cdq
push
sbb
push
mov
mov
mov
mov
pop
dec
data16
xchg
push
jae
int
stos
div
mov
dec
push
mov
pop
dec
data16
mov
pop
jne
dec
out
mov
mov
mov
mov
jae
ret
jecxz
cmc
mov
and
jnp
out
dec
dec
mov
mov
cwde
mov
dec
adc
dec
or
arpl
data16
xor
jae
jnp
out
dec
dec
mov
aad
data16
retf
fwait
(bad)
hlt
mov
idiv
mov
mov
retf
xchg
mov
mov
repz
or
not
mov
jae
ret
jecxz
cmc
mov
and
jnp
ror
mov
add
inc
int
mov
pop
jb
cmp
outs
popa
dec
push
sub
xchg
mov
mov
sbb
cdq
lock
inc
pop
mov
dec
pushw
sub
sbb
es
stos
dec
dec
or
jecxz
ins
jae
mov
imul
inc
data16
sbb
or
sbb
xchg
or
mov
mov
mov
retf
fwait
(bad)
hlt
mov
dec
push
push
pop
ror
dec
push
mov
pop
dec
lock
pop
push
mov
dec
data16
push
cdq
inc
pop
(bad)
jae
popf
outs
jae
into
fisttp
jle
or
popa
dec
push
jge
or
sbb
cmps
pop
jns
dec
cdq
inc
pop
(bad)
jae
movs
outs
jae
cmps
xor
jmp
div
cdq
xor
mov
mov
cmp
or
sbb
cdq
and
popa
dec
mov
dec
data16
push
repz
cmps
sar
dec
(bad)
fmul
dec
data16
mov
mov
dec
lea
clc
jecxz
cmc
mov
stc
(bad)
dec
fwait
(bad)
hlt
mov
inc
ja
pop
dec
jne
or
popa
dec
push
xchg
fmul
sbb
cmps
lods
jp
dec
cdq
inc
pop
(bad)
jae
cmp
or
out
div
jecxz
cmc
mov
dec
sbb
repnz
pop
jg
or
jecxz
cmc
mov
and
mov
sbb
xchg
and
xchg
xchg
mov
mov
fwait
ja
data16
mov
hlt
dec
data16
retf
fwait
(bad)
hlt
mov
mov
into
(bad)
xor
cmps
cmp
out
div
inc
sbb
and
sbb
cdq
and
popa
dec
mov
add
mov
into
(bad)
xor
cmps
cwde
jnp
dec
pop
mov
mov
push
jmp
cli
mov
mov
dec
stos
dec
dec
jmp
cli
mov
mov
jl
or
mov
es
jae
dec
jmp
div
push
pop
xchg
pcmpgtd
mov
fwait
(bad)
hlt
mov
push
sub
sbb
es
movs
dec
dec
or
jecxz
outs
jae
mov
pop
xchg
pcmpgtd
loop
gs
iret
xchg
mov
dec
data16
push
jmp
cli
mov
mov
les
mov
mov
aam
or
mov
es
jae
dec
jmp
div
push
pop
xchg
pcmpgtd
mov
fwait
(bad)
hlt
mov
push
sub
sbb
es
jae
leave
outs
jae
mov
pop
xchg
pcmpgtd
loop
gs
ret
jmp
cmc
mov
lock
mov
repz
dec
pushw
repnz
jo
outs
or
popa
dec
push
pop
fmul
sbb
cmps
xor
or
inc
and
daa
jae
mov
jae
cmps
sahf
jno
dec
mov
mov
movs
pop
jl
retf
popf
(bad)
hlt
mov
test
jb
pi2fd
sub
sbb
es
movs
dec
dec
or
jecxz
outs
jae
mov
pop
xchg
pcmpgtd
loop
fs
into
jecxz
cmc
mov
jb
retf
popf
(bad)
hlt
mov
jo
mul
mov
pusha
data16
retf
fwait
(bad)
hlt
mov
dec
push
push
pop
ror
dec
push
mov
iret
pop
push
mov
dec
data16
push
cdq
inc
sub
daa
jae
popa
popa
jae
into
fisttp
jle
or
popa
dec
push
(bad)
fmul
sbb
cmps
cld
je
dec
cdq
inc
sub
daa
jae
or
or
mov
mov
movs
pop
jl
retf
pushf
(bad)
hlt
mov
test
jb
pi2fd
sub
sbb
mov
jecxz
popa
jae
mov
push
xchg
pcmpgtd
loop
fs
into
jecxz
cmc
mov
jb
ret
fwait
(bad)
hlt
mov
mov
or
mov
repz
mov
dec
leave
cmp
repnz
pop
jae
ret
jecxz
cmc
mov
and
mov
sbb
xchg
and
xchg
xchg
mov
mov
fwait
test
retf
jecxz
data16
test
cdq
mov
mov
mov
dec
or
popa
dec
or
popa
dec
push
jae
dec
sbb
daa
jae
int
jae
(bad)
jecxz
cmc
mov
sbb
and
sbb
mov
xor
cdq
fwait
fwait
dec
data16
jae
(bad)
dec
dec
pushw
dec
ret
imul
lock
mov
repz
dec
pushw
repnz
movs
sbb
ret
repz
div
push
jmp
cdq
mov
mov
or
dec
push
or
arpl
rol
cmps
dec
data16
ret
xchg
mov
mov
mov
or
mov
jmp
out
cdq
mov
jmp
cli
mov
mov
rol
mov
jae
dec
jmp
out
cdq
mov
fs
scas
and
hlt
sti
xchg
(bad)
hlt
mov
push
push
dec
data16
cmps
cwde
jo
dec
cdq
inc
dec
out
daa
jae
in
jae
and
sbb
and
sbb
and
sbb
dec
xor
div
or
out
idiv
mov
mov
mov
popa
dec
or
hlt
sti
xchg
(bad)
hlt
mov
fimul
dec
data16
faddp
xor
int
mov
pop
jb
cmp
(bad)
sahf
mov
xor
jae
sti
xchg
(bad)
hlt
mov
sahf
cmovle
or
jecxz
div
push
lahf
fisttp
mov
cmps
mov
or
mov
mov
mov
sti
xchg
(bad)
hlt
mov
push
or
mov
and
xor
dec
data16
and
sbb
es
dec
dec
push
or
or
sbb
and
arpl
jae
cmps
(bad)
push
mov
mov
and
mov
inc
stc
xor
cmps
test
or
mov
mov
mov
pop
cdq
push
pop
mov
arpl
cmp
jle
mov
push
adc
xor
out
int
jg
sbb
clc
jle
fnstenv
repz
sahf
cli
int3
lds
jg
dec
addr16
inc
jecxz
or
lock
outs
jl
mov
or
imul
mov
fwait
xchg
pcmpgtd
mov
pop
inc
jecxz
daa
jae
inc
cdq
inc
mov
and
jecxz
bound
jne
rep
or
push
add
data16
jg
data16
jnp
in
dec
dec
adc
jnp
out
dec
mov
cmovle
ds
repz
cmp
ds
xor
cmps
sub
dec
out
mov
test
mov
xor
cmp
outs
stc
xor
cmps
push
ja
dec
pop
inc
sub
daa
jae
pop
out
jnp
and
or
ins
mov
cmps
sti
xor
cmps
jo
or
inc
sub
daa
jae
ins
out
jnp
and
or
jg
ds
or
lea
sti
push
or
out
mov
xchg
pop
inc
jecxz
daa
jae
dec
in
outs
sub
es
jnp
ror
adc
push
pop
in
dec
dec
out
mov
mov
mov
jnp
in
dec
dec
adc
push
inc
in
dec
dec
pop
inc
pop
(bad)
jae
dec
in
outs
or
es
jnp
in
dec
dec
adc
push
push
ror
pop
inc
sub
daa
jae
dec
in
outs
daa
xlat
es
jnp
ror
adc
push
jp
dec
dec
outs
test
pop
cdq
push
pop
mov
arpl
cmp
pop
cmps
adc
dec
lea
mov
mov
xchg
hlt
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
mov
mov
jno
push
sub
cli
repz
ss
pop
dec
data16
mov
dec
mov
mov
addr16
mov
movs
addr16
jno
pop
icebp
movs
jp
add
popa
jp
cmp
rep
adc
mov
outs
mov
dec
in
sub
xchg
sbb
cmps
mov
jb
and
and
or
mov
iret
mov
dec
pop
or
jae
dec
inc
dec
or
jae
movs
dec
mov
dec
inc
mov
dec
data16
sbb
cmp
cdq
hlt
icebp
mov
das
mov
lds
push
bsr
in
cdq
in
aaa
das
dec
movs
jnp
dec
data16
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
dec
dec
mul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
jae
imul
or
.byte
