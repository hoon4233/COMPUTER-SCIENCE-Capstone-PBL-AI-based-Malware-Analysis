mov
shl
jmp
out
xor
sar
mov
(bad)
into
pushf
mov
mov
and
test
mov
(bad)
xlat
mov
mov
int
cmp
cmp
sbb
xchg
or
outs
aam
adc
mov
(bad)
leave
push
es
and
in
pusha
jb
pop
mov
add
xchg
xchg
stos
pop
mov
mov
sub
mov
ds
(bad)
jbe
push
jg
mov
dec
adc
icebp
jb
(bad)
jno
mov
mov
adc
mov
fcmove
sub
jle
clc
mov
jmp
xchg
jbe
sub
mov
add
in
inc
retf
dec
mov
data16
hlt
push
mov
dec
(bad)
jl
jmp
jecxz
ins
jne
add
mov
xchg
les
or
jne
stos
adc
sbb
in
jne
fdivr
xchg
gs
sti
out
mov
cld
jmp
(bad)
into
pop
mov
mov
stos
push
icebp
jle
mov
sub
cmps
mov
(bad)
mov
mov
push
push
xor
call
inc
push
rcl
pop
dec
(bad)
cld
dec
jno
inc
mov
push
dec
das
cmp
add
shrd
xchg
rol
retf
outs
sbb
test
push
pusha
and
lock
imul
out
test
daa
mov
jno
leave
aad
xor
or
cwde
adc
push
mov
aad
mov
dec
dec
std
xchg
scas
xlat
jl
add
push
pop
arpl
hlt
xchg
sub
mov
mov
push
sbb
cdq
popa
aas
add
and
ret
mov
into
lea
stos
lods
sti
or
jle
mov
lods
jns
mov
loop
push
inc
rol
xchg
mov
fldenv
mov
mov
sbb
jl
mov
mov
cmc
mov
out
xchg
out
inc
pop
ds
sub
add
mov
or
mov
stc
mov
push
std
and
ins
dec
addr16
push
xor
mov
retf
xor
add
retf
into
mov
cmp
pop
and
sbb
sub
pop
push
out
pop
push
ror
or
sub
std
in
repz
pop
push
js
je
mov
loopne
pop
fnstsw
popf
cmps
sbb
push
push
lds
xor
jmp
xchg
rcr
xchg
inc
iret
push
(bad)
jecxz
push
mov
(bad)
in
mov
mov
fmul
mov
xor
popf
out
(bad)
fnstenv
arpl
call
push
mov
xchg
out
icebp
lock
sti
cmp
imul
mov
js
cmp
jg
cwde
lds
xchg
adc
lea
cwde
cli
mov
mov
jbe
adc
sbb
sub
jp
or
sub
(bad)
dec
in
cmp
push
xchg
inc
fbld
outs
xchg
push
cmps
inc
mov
ror
mov
add
mov
mov
movs
or
pop
scas
dec
sbb
daa
data16
ret
mov
(bad)
xchg
stc
imul
cmp
jle
clc
(bad)
mov
iret
mov
in
aas
scas
stos
cmc
test
je
loopne
stc
fcomp
push
xor
dec
add
mov
int3
(bad)
std
cmc
sbb
ins
adc
dec
dec
call
into
ror
push
cld
cmp
dec
mov
sar
adc
(bad)
out
fsub
push
fistp
in
sti
adc
gs
xor
les
push
clc
mov
jns
addr16
fst
icebp
xchg
and
push
push
jmp
cmps
test
dec
scas
mov
int3
lahf
adc
xchg
and
or
ss
cld
add
fiadd
fdiv
aaa
(bad)
pop
pop
into
and
mov
cmc
pop
ss
lods
add
iret
sti
mov
out
(bad)
test
or
ret
std
mov
cmps
dec
popa
mov
(bad)
jge
iret
call
mov
sbb
jno
or
inc
xchg
fmul
fstp
test
shl
fcmovu
xor
std
ds
inc
repnz
fisttp
ja
fwait
shl
mov
pop
jb
mov
and
icebp
rep
mov
adc
pop
into
xchg
push
push
cdq
xchg
mov
xchg
fcmovne
adc
and
xchg
adc
shl
imul
data16
inc
mov
popa
jmp
js
mov
and
and
xchg
mov
or
sti
dec
in
dec
cli
or
jl
add
es
cmp
test
test
in
nop
lods
and
dec
cmps
ret
sahf
pop
dec
mov
fst
rcr
mov
call
jl
stos
pop
out
mov
and
xchg
sub
ins
add
dec
mov
test
jmp
(bad)
lds
mov
sysenter
jmp
(bad)
fs
xor
pop
pop
mov
stos
scas
inc
leave
xor
call
int
(bad)
pop
popa
fiadd
pushf
loope
rol
mov
jb
cwde
jne
mov
sti
das
xchg
mov
and
ins
push
pop
or
cmp
push
call
sub
sbb
xchg
rcl
pop
fist
cwde
out
push
int
add
xchg
lods
fidiv
pop
(bad)
daa
cmp
mov
repnz
jae
pushf
dec
mov
int
mov
test
mov
pop
stos
xchg
loope
ret
cmp
dec
sar
data16
mov
inc
out
aad
fidivr
das
loope
sar
cmp
add
pop
sub
jecxz
neg
aad
jae
aas
loop
outs
mov
ret
sbb
xchg
int
dec
push
ds
lahf
jg
pop
or
dec
jb
mov
cli
mov
movs
or
xchg
mov
adc
ror
push
test
mov
in
and
cmp
idiv
push
aaa
push
xchg
pop
rcr
(bad)
mov
xor
mov
mov
hlt
sub
out
movs
mov
mov
jge
push
mov
repz
mov
fs
in
neg
jmp
sub
xchg
mov
(bad)
mov
js
mov
ins
ins
add
daa
or
jmp
mov
sbb
mov
retf
fcmovnu
sub
jp
xchg
(bad)
test
mov
and
(bad)
sub
xchg
imul
dec
xchg
into
das
jmp
ret
ds
or
movs
aas
xchg
lea
pushf
xor
mov
xor
xchg
ja
jbe
pop
mov
prefetch
or
shl
nop
fsub
mov
rcr
push
inc
and
adc
(bad)
shl
sub
jns
cmps
aad
push
aam
adc
xchg
cmps
cmp
jle
popf
js
fs
arpl
rol
add
sub
in
aad
push
fdivp
pop
add
mov
call
rcl
pop
pop
mov
push
cmp
push
or
not
shl
push
dec
mov
rol
cmp
xchg
ins
mov
add
ja
mov
mov
imul
adc
int3
mov
jbe
das
cdq
mov
mov
jge
mov
rol
les
sub
(bad)
shl
jle
movs
pop
cmp
pop
movups
outs
xor
ret
jg
lock
mov
cs
ss
sar
idiv
(bad)
pusha
jmp
pop
xchg
adc
add
sub
call
mov
clc
hlt
pusha
mov
fst
and
inc
mov
adc
mov
mov
das
call
not
cmp
shl
gs
sbb
test
mov
sub
xchg
xchg
int
pusha
lods
ins
push
sub
xor
stos
cmc
test
jmp
das
bound
mov
and
int3
mov
add
sbb
push
jne
and
out
enter
push
jmp
jae
xor
stc
jmp
pop
push
xchg
call
sbb
jb
mov
adc
xor
pop
pusha
xor
mov
ret
push
(bad)
sti
mov
sbb
mov
loopne
inc
sbb
cmc
xchg
cld
mov
adc
scas
xor
fild
out
in
jecxz
mov
mov
into
ror
jne
dec
lods
inc
or
int3
retf
add
and
cmps
imul
mov
or
frstor
ss
out
jge
xor
ret
sahf
jno
pop
stc
sbb
jle
jp
fsubr
fild
cmp
pop
sahf
into
dec
mov
retf
mov
idiv
aad
movs
(bad)
sti
adc
lods
adc
repz
(bad)
arpl
popa
mov
pop
sbb
push
push
movs
add
push
inc
jno
cmps
data16
add
push
xchg
add
pop
je
(bad)
shl
mov
lahf
movs
xchg
xchg
sub
mov
and
test
dec
cmp
retf
ret
ret
xchg
jno
fimul
or
shl
shr
mov
pop
mov
(bad)
xor
mov
addr16
daa
add
nop
shl
xchg
fisttp
outs
sbb
retf
scas
sbb
iret
loop
lahf
mov
add
mov
sbb
(bad)
push
bound
and
sahf
sbb
or
pop
add
push
into
or
daa
cli
mov
test
ror
call
jne
xor
int3
lea
jg
adc
enter
add
loope
mov
shl
mov
sti
sbb
lahf
dec
mov
sub
jo
lods
ret
push
sub
add
xchg
mov
mov
push
pop
xor
pop
(bad)
or
stos
lods
in
in
mov
adc
jo
dec
cdq
leave
mov
xchg
mov
enter
pop
push
adc
adc
pop
test
out
out
push
mul
imul
or
lock
mov
xchg
icebp
pop
arpl
mov
fwait
and
mov
mov
aas
lea
cmp
out
test
test
sbb
pop
adc
and
and
dec
jecxz
sets
xchg
arpl
lds
fisttp
neg
lock
loopne
inc
das
dec
pop
inc
jae
push
mov
mov
ins
ret
sbb
out
dec
push
inc
push
pushf
adc
test
mov
jl
bound
jl
cmp
mov
adc
cs
push
cmp
lea
xchg
or
mov
cmp
bound
dec
dec
out
fnstsw
add
xor
push
test
mov
lea
popa
retf
pop
jb
rcl
stc
jmp
xchg
xor
dec
jl
repz
xor
mov
out
add
pop
inc
push
inc
(bad)
fist
stc
cwde
xor
or
cwde
movs
sub
pushf
mov
mov
xor
dec
jo
xchg
aas
and
movs
jl
das
lahf
jl
push
out
lea
xchg
mov
clc
jp
gs
outs
mov
dec
and
test
mov
out
mov
cs
add
cmp
icebp
(bad)
cmps
or
push
ja
(bad)
shr
adc
fucomp
cmp
cmp
push
test
xor
loop
dec
in
jo
xchg
inc
pushf
ss
iret
inc
jp
ins
out
jmp
pop
sbb
jnp
fisubr
or
jl
push
or
inc
fwait
xor
adc
mov
daa
add
(bad)
jmp
rol
cmp
inc
sti
in
and
mov
mov
pop
mov
pop
out
cwde
jecxz
arpl
int3
cmp
loope
cmp
or
push
lds
jmp
repz
cmp
hlt
hlt
add
push
push
sub
aaa
mov
in
inc
dec
repz
mov
popa
test
into
jl
pop
push
shl
add
add
test
cli
xor
psllq
fs
mov
fadd
inc
jns
div
jle
xchg
fstp
sbb
test
movs
xchg
fdivrp
inc
mov
xchg
ins
sar
rol
cmc
aad
(bad)
fsub
pop
pop
pop
je
xor
lahf
jge
bound
or
mov
fnstcw
jp
cdq
test
push
lds
rdmsr
adc
xor
bound
mov
mov
mov
inc
xor
add
sbb
pop
call
xor
mov
mov
mov
sbb
pop
popa
xor
xor
xchg
addr16
js
(bad)
xchg
dec
and
int
arpl
lods
jnp
mov
or
mov
add
xchg
mov
ja
push
push
xlat
xor
xor
(bad)
cli
ror
popa
js
xchg
repz
cmp
push
and
mov
test
cdq
adc
mov
int3
pop
push
bound
je
int3
pop
push
ror
loope
sahf
ss
jl
lods
imul
lods
mov
(bad)
mov
or
xlat
(bad)
mov
int3
xchg
mov
jns
mov
jbe
push
popa
mov
cmp
pop
jo
jb
je
jmp
mov
push
cmp
mov
or
fwait
and
gs
mov
in
mov
sbb
push
(bad)
mov
add
out
gs
mov
sti
clc
add
push
xchg
cld
out
pop
repnz
mov
cmp
loop
add
sub
ins
stos
aad
mov
or
mov
sub
sbb
stc
mov
inc
shl
cli
push
xchg
icebp
jp
adc
mov
cmp
jg
retf
pop
jl
mov
adc
dec
xor
pop
push
sbb
data16
sub
adc
std
addr16
add
jae
in
out
pop
fistp
push
mov
lds
pop
sbb
div
lock
shl
(bad)
imul
mov
mov
int3
xchg
aam
cdq
xor
aad
add
and
iret
mov
adc
sbb
dec
push
loope
inc
adc
repnz
idiv
cmp
cli
int
pop
bswap
xor
(bad)
mov
ins
out
push
mov
not
sbb
add
in
push
push
adc
push
or
sahf
inc
mov
rcl
cmp
xchg
mov
dec
mov
jge
sar
out
mov
popf
stos
fadd
cmc
mov
adc
pop
mov
sub
adc
in
mov
out
loope
mov
mov
mov
xor
pop
dec
ficomp
mov
retf
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
.byte
mov
