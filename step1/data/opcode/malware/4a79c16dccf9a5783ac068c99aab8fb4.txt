mov
push
add
add
add
add
add
add
add
mov
add
add
add
push
push
aas
add
and
add
adc
or
add
add
add
add
sub
add
push
add
add
add
sub
xor
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
adc
or
add
add
add
add
sub
add
push
add
add
add
sub
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
add
sbb
add
add
pop
add
add
add
add
jo
add
add
add
add
add
add
sub
xor
add
add
add
add
add
add
add
adc
add
add
dec
xchg
add
push
add
add
add
sub
xor
add
add
add
add
add
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
sub
add
push
add
add
add
sub
xor
add
add
add
add
add
add
add
add
add
add
imul
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
inc
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
and
add
dec
add
add
add
and
add
adc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
in
add
adc
add
pop
add
add
add
add
add
add
add
sbb
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
add
add
add
add
pop
add
adc
add
add
adc
ja
add
add
add
adc
or
add
add
add
add
sub
add
inc
dec
add
add
add
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
adc
add
add
add
sbb
sub
add
add
xor
add
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
add
add
sbb
add
add
pop
add
add
add
jg
imul
add
adc
or
add
add
add
add
sub
add
add
add
add
les
add
adc
add
add
add
add
adc
add
add
out
nop
jbe
sldt
add
add
fild
mov
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
adc
or
push
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
xor
add
add
add
mov
add
adc
add
adc
or
add
add
add
add
sub
add
inc
dec
add
add
add
mov
add
adc
add
sbb
add
add
add
add
add
aaa
add
add
add
add
add
sbb
add
pop
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
fld
add
ja
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
add
add
add
add
add
add
add
xor
add
add
enter
add
add
add
(bad)
lds
inc
adc
add
adc
or
add
add
add
add
sub
add
add
add
add
add
sub
add
push
add
daa
add
push
sub
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
adc
add
add
add
inc
add
add
add
xor
add
add
add
add
add
add
add
adc
add
add
inc
mov
sbb
add
add
xor
add
add
add
add
add
add
add
sub
add
adc
add
add
add
add
add
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
sub
add
inc
dec
add
add
add
pop
add
push
add
add
add
add
add
ja
add
fild
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
add
adc
add
add
sbb
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
adc
or
add
add
add
add
sub
add
adc
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
adc
or
add
add
add
add
sub
add
adc
or
push
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
sub
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
adc
or
add
add
add
add
adc
add
add
add
add
sbb
sbb
add
add
add
ds
add
add
add
add
dec
add
add
add
add
add
sub
cwde
ret
add
add
add
adc
or
add
add
add
add
adc
add
add
add
add
add
add
add
add
dec
add
add
add
add
sub
pop
add
add
add
pop
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
sub
xor
add
add
add
add
add
add
add
sub
add
sub
add
add
push
mov
pop
add
add
add
push
add
add
add
add
clc
stc
add
adc
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
push
add
add
add
sub
xor
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
add
outs
in
add
add
add
push
add
add
add
sub
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
push
add
add
add
sub
xor
add
add
add
add
add
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
adc
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
sub
add
adc
or
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
adc
or
add
add
add
add
sub
add
inc
sbb
add
add
add
add
add
add
add
sbb
add
add
add
shr
mov
add
sub
cmp
add
cmp
add
or
and
add
add
inc
pop
in
add
cmp
add
add
add
add
add
add
sub
add
add
add
sub
xor
add
add
add
add
add
add
add
add
stos
add
or
push
add
stos
add
or
sbb
push
add
add
cmp
add
jle
add
add
xchg
add
add
pop
add
add
xchg
add
push
and
add
push
jle
add
or
mov
add
adc
jle
add
add
cmp
add
or
adc
adc
jle
add
add
lock
push
sbb
push
jb
adc
jo
jb
adc
jo
sub
out
add
jb
adc
or
add
or
pop
push
jae
add
or
or
or
add
or
add
mov
add
add
ja
add
add
sub
add
sub
add
push
adc
add
push
adc
add
add
cmc
add
push
or
into
add
push
adc
jle
add
add
push
sub
add
push
es
add
add
push
or
add
jo
inc
add
push
adc
jle
add
add
pop
sub
add
push
sub
add
pop
sub
or
add
add
or
add
imul
jle
add
add
or
mov
pusha
adc
add
or
test
jae
add
or
or
mov
pop
sub
add
adc
add
or
add
push
add
add
add
pop
adc
push
adc
sub
or
or
push
outs
mov
add
(bad)
or
add
or
out
add
fcom
or
add
add
add
add
sbb
add
cmp
add
add
add
add
add
add
add
add
add
inc
add
add
add
or
add
add
xor
add
add
adc
scas
add
push
or
jb
adc
add
push
or
add
add
jle
add
add
push
add
add
xchg
add
push
sub
push
je
add
add
add
add
sub
adc
add
add
add
adc
scas
add
push
or
jb
adc
add
push
or
add
add
jle
add
add
push
add
add
xchg
add
push
sub
push
je
add
add
add
add
sub
outs
jle
add
add
lock
push
sbb
add
sub
lods
add
push
sub
xor
add
add
cmp
add
jle
add
add
inc
sub
add
lock
push
sbb
add
sbb
scas
add
push
sub
sbb
mov
add
pop
inc
sub
jle
add
add
bound
add
icebp
add
push
adc
push
mov
add
jae
add
or
pop
add
push
pop
add
add
add
add
add
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
sub
mov
add
sub
jo
inc
add
add
rol
or
add
or
call
inc
add
add
add
sbb
add
add
add
adc
add
add
add
add
add
les
add
sub
add
or
fiadd
es
add
add
and
add
add
add
or
movhps
adc
mov
movups
call
or
add
adc
adc
add
or
pop
adc
test
add
adc
adc
push
pop
and
aad
add
adc
add
xlat
add
or
push
adc
push
sub
add
or
pop
jg
add
add
pop
and
add
or
lds
add
sub
add
or
add
or
push
(bad)
add
add
outs
fiadd
add
sub
pop
outs
enter
or
retf
add
or
add
fisttp
add
add
outs
fild
add
adc
adc
mov
pop
adc
adc
lea
add
adc
adc
push
shl
add
sub
add
or
pop
adc
adc
adc
adc
pop
pop
call
adc
pop
pop
adc
adc
adc
xor
jle
add
or
outs
retf
or
or
pop
jae
add
or
or
or
into
add
or
or
add
or
add
or
or
xor
or
or
add
or
or
xor
or
or
add
or
or
xor
or
or
add
or
or
xor
sbb
push
sub
or
or
push
outs
rol
add
adc
pop
pop
adc
adc
adc
xor
adc
jle
add
or
add
or
outs
rol
add
adc
or
add
or
or
outs
iret
add
or
or
leave
add
or
add
fiadd
adc
pop
pop
adc
adc
adc
mov
push
(bad)
(bad)
jmp
add
inc
add
add
add
sbb
add
jne
add
add
add
mov
add
add
scas
add
rol
mov
add
add
mov
or
add
mov
add
add
les
or
add
jne
add
push
add
rol
or
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
sub
and
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
sub
and
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
sub
and
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
sub
and
mov
add
sub
and
add
add
mov
add
sub
and
add
add
mov
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
mov
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
mov
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
mov
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
mov
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
mov
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
mov
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
and
add
sub
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
jle
add
aas
add
inc
and
add
push
je
imul
add
add
clc
adc
push
add
add
adc
add
and
dec
inc
add
add
add
mov
add
and
outs
bound
add
add
add
add
add
push
pop
mov
add
cli
and
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
cmp
add
add
add
sbb
add
sub
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
push
add
sbb
push
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
jne
push
add
mov
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
xor
push
add
add
add
add
sbb
push
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jne
push
add
add
add
jne
push
add
sbb
push
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
jne
push
add
add
jne
push
add
sbb
push
add
mov
push
add
mov
push
add
mov
push
add
sbb
push
add
sbb
push
add
add
add
rol
sbb
push
add
add
add
add
add
add
add
add
xor
cmp
inc
add
pop
add
mov
fwait
add
cmps
add
mov
jne
push
add
add
rol
loop
imul
add
imul
add
sbb
push
add
jl
push
add
sbb
push
add
sbb
push
add
sbb
push
add
sbb
push
add
xchg
push
push
add
add
add
push
enter
repz
sysret
push
add
pop
sbb
push
add
pop
sbb
push
add
sysret
push
add
enter
fs
enter
jbe
sysret
push
add
add
lods
pop
sbb
push
add
add
add
pop
sbb
push
add
pop
jl
push
add
pop
jl
push
add
pop
mov
push
add
pop
sbb
push
add
sbb
push
add
mov
push
add
or
or
add
add
sbb
push
add
add
or
pop
sbb
push
add
or
or
push
add
dec
or
add
sbb
push
add
add
mov
push
add
add
add
add
add
add
add
sbb
push
add
sbb
push
add
pop
sbb
push
add
pop
mov
push
add
dec
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
or
or
add
or
or
add
pop
or
add
mov
or
lahf
or
or
or
add
or
or
add
or
or
add
or
or
add
or
or
add
or
or
add
les
adc
inc
or
add
add
push
or
add
add
add
add
or
add
add
add
add
add
push
add
add
add
add
ins
or
add
push
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
or
sub
add
adc
xchg
or
add
add
adc
xchg
or
add
add
add
add
add
add
add
adc
mov
add
add
mov
or
add
add
add
add
add
add
or
add
add
add
adc
(bad)
or
add
add
add
add
or
add
add
add
add
or
add
add
adc
(bad)
or
add
add
or
or
add
or
or
add
add
add
or
or
add
add
add
or
add
add
add
add
adc
jno
inc
add
add
or
or
inc
add
add
add
jne
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
lahf
or
add
dec
add
mov
add
rol
add
add
add
mov
add
add
add
retf
add
add
add
add
rol
add
add
mov
add
jne
push
add
add
add
add
add
fiadd
add
add
mov
add
fild
add
add
mov
add
in
add
add
ret
or
add
pusha
add
add
add
add
or
add
bound
out
add
add
add
or
add
arpl
repz
add
add
or
add
fs
add
add
add
or
add
data16
add
add
add
or
add
add
add
add
add
or
add
imul
add
fisttp
add
jne
push
or
add
add
jecxz
add
jne
ins
add
add
add
add
or
add
outs
add
add
add
add
or
add
outs
add
add
add
add
or
add
jb
and
add
add
repz
add
jae
and
add
or
add
js
sub
add
add
sti
or
add
jp
das
add
add
add
or
add
jnp
xor
add
add
add
add
jl
cmp
add
add
pop
or
add
jge
add
add
add
or
add
jle
inc
add
add
add
or
add
jg
dec
add
add
add
or
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
or
add
test
pop
add
add
add
or
add
xchg
popa
add
add
add
or
add
xchg
add
add
add
or
add
mov
imul
add
add
or
add
mov
jo
add
add
xor
add
mov
jne
add
add
aaa
or
add
mov
jp
add
add
cmp
add
lea
jg
add
add
aas
or
add
mov
test
add
add
inc
or
add
nop
add
add
add
jne
xchg
add
add
add
jne
xchg
add
add
add
jne
xchg
add
add
add
jne
xchg
add
add
add
jne
xchg
add
add
add
jne
xchg
add
add
add
jne
xchg
add
arpl
add
cwde
add
add
add
jne
cdq
add
add
add
jne
call
add
add
jne
pushf
add
add
add
add
add
jne
popf
add
add
add
add
add
jne
sahf
add
add
add
add
add
jne
lahf
add
add
add
add
add
jne
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
or
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
or
add
mov
sub
add
add
(bad)
or
add
mov
add
add
add
or
add
mov
add
add
or
add
mov
add
add
or
add
mov
add
add
or
add
mov
add
add
or
add
mov
add
add
or
add
mov
add
add
or
add
mov
add
add
or
add
mov
add
or
add
add
or
adc
test
add
push
or
sbb
sbb
and
es
sub
das
or
xor
mov
or
ds
inc
or
dec
or
dec
or
push
or
push
or
pop
or
or
adc
iret
or
test
push
aad
push
add
adc
dec
push
loop
adc
pop
or
or
push
xor
add
add
icebp
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
push
fild
add
push
fild
add
push
fild
add
mov
bsf
add
movups
adc
mov
or
or
adc
and
sbb
fild
sub
sbb
push
xor
cmp
sbb
push
cmp
fild
add
add
add
mov
mov
adc
push
(bad)
add
sub
sub
rdmsr
add
add
(bad)
add
cmp
mov
(bad)
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
inc
add
dec
add
dec
add
push
add
pop
add
pop
add
bound
bound
bound
bound
bound
bound
bound
bound
addr16
addr16
ins
add
jno
adc
popf
adc
adc
cmps
adc
adc
scas
adc
adc
mov
add
adc
adc
adc
adc
adc
adc
xchg
add
xchg
add
cdq
add
sahf
add
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
rol
add
retf
add
rol
aad
adc
int
fiadd
fiadd
fild
in
adc
icebp
adc
add
jmp
adc
add
repz
repz
clc
add
std
add
add
adc
cmp
pop
push
adc
inc
adc
adc
push
adc
adc
pop
adc
push
adc
arpl
push
push
adc
ins
adc
push
adc
jbe
and
adc
jg
and
adc
push
adc
xchg
adc
push
adc
popf
adc
adc
cmps
adc
push
adc
mov
ds
adc
mov
add
adc
adc
int3
adc
adc
aad
dec
push
adc
ficom
push
push
adc
call
add
adc
add
adc
adc
add
add
adc
adc
pop
adc
adc
and
jo
adc
sub
jne
adc
xor
jne
adc
cmp
jp
adc
inc
adc
adc
dec
adc
adc
push
adc
mov
adc
imul
push
adc
jne
mov
adc
jg
xchg
push
adc
mov
cwde
push
adc
xchg
adc
adc
adc
adc
adc
mov
adc
int3
adc
adc
adc
push
adc
jmp
add
adc
push
adc
sti
adc
push
adc
add
add
adc
push
adc
pop
adc
push
in
add
or
xchg
sbb
adc
add
add
add
add
add
add
add
push
and
add
add
add
adc
add
add
add
or
xchg
sub
add
add
add
add
add
add
add
adc
add
add
add
add
add
das
add
or
xchg
sbb
adc
add
add
add
add
add
add
pop
add
add
add
add
add
or
pushf
and
add
add
add
adc
add
add
out
xor
add
out
xor
add
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
add
add
add
or
mov
add
and
add
add
add
lds
push
add
and
add
add
add
add
add
or
xchg
sbb
adc
add
add
and
add
add
add
adc
add
add
add
or
xchg
sub
add
add
xor
add
add
add
add
add
or
test
push
adc
add
add
add
or
test
pop
adc
add
add
add
or
test
pop
adc
add
add
add
or
test
arpl
add
add
add
adc
cwde
and
add
add
adc
test
add
or
test
ja
in
add
add
add
adc
add
add
push
add
and
add
add
push
add
and
add
add
pop
add
and
add
add
pop
add
add
add
add
add
sbb
add
add
or
mov
add
and
add
add
add
add
and
add
add
sbb
sub
add
or
xchg
sbb
adc
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
or
xchg
sub
add
add
xor
add
add
add
add
add
or
xchg
add
adc
add
add
add
or
xchg
add
adc
add
add
xchg
add
adc
add
loopne
add
or
xchg
sub
add
add
add
add
add
add
add
add
xchg
add
adc
add
add
and
xchg
add
adc
add
add
xchg
add
dec
and
xchg
add
adc
inc
xor
add
add
add
add
add
add
add
add
add
add
add
movs
and
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
sub
add
add
add
or
xchg
add
adc
hlt
add
or
xchg
add
add
add
daa
add
or
xchg
add
rol
add
add
or
xchg
sbb
adc
add
add
add
or
xchg
adc
cmp
cmp
add
or
add
cmp
pop
daa
add
or
add
cmp
and
add
add
add
add
add
add
add
add
add
add
daa
add
or
add
inc
add
sub
add
add
add
sub
add
add
add
adc
add
inc
sub
add
add
add
add
add
add
add
adc
add
sub
add
add
add
pop
xor
add
add
add
js
add
or
xchg
mov
mov
add
or
xchg
xchg
adc
cwde
sub
add
add
add
lods
sub
add
add
add
mov
add
add
shr
add
or
xchg
mov
mov
sub
add
add
add
hlt
sub
add
add
add
add
add
or
xchg
rcl
sbb
add
or
xchg
ficom
sub
add
or
xchg
sub
add
xor
add
or
xchg
sub
add
push
add
add
add
add
or
mov
add
add
add
add
add
dec
add
add
add
add
add
push
add
sub
add
add
add
dec
sub
add
add
add
adc
add
pop
sub
add
add
add
adc
ins
sub
add
add
add
adc
mov
add
or
out
call
add
sub
add
add
add
je
add
or
xchg
sbb
adc
add
add
add
or
mov
add
add
add
add
add
pop
add
add
or
xchg
sub
add
or
add
or
out
call
dec
sub
add
add
add
adc
add
sub
add
add
add
adc
xor
add
add
add
push
add
add
adc
add
js
add
or
out
out
adc
mov
add
or
out
call
add
add
add
adc
test
add
or
xchg
sub
add
mov
add
or
xchg
sbb
adc
add
mov
add
or
xchg
add
adc
add
fsubr
add
or
xchg
sub
add
in
add
or
xchg
add
pop
add
clc
sub
add
add
add
cwde
xor
add
add
add
or
add
or
sbb
adc
add
adc
add
or
xchg
or
push
fadd
bound
and
add
or
xchg
or
push
fld
bound
xor
add
or
xchg
or
push
loop
bound
inc
sub
add
add
add
push
sub
add
add
add
pusha
sub
add
add
add
jo
add
or
xchg
or
push
call
sub
add
add
add
nop
sub
add
add
add
mov
add
add
mov
add
or
xchg
or
call
sub
add
add
add
shr
add
or
xchg
or
add
loopne
add
or
xchg
or
call
sub
add
add
add
add
add
add
add
adc
add
add
add
and
add
add
add
movs
xor
add
add
add
xor
add
add
add
inc
sub
add
add
add
push
sub
add
add
add
pusha
sub
add
add
add
mov
add
add
add
sub
add
add
add
lock
add
add
add
mov
add
or
xchg
sbb
adc
add
clc
sub
add
add
add
add
xchg
nop
push
lods
add
mov
add
add
adc
xchg
sub
add
enter
or
xchg
sbb
adc
add
sbb
xchg
sub
add
aam
add
or
xchg
sbb
adc
add
add
add
or
xchg
sub
add
add
add
or
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
loopne
add
or
xchg
sbb
adc
add
add
add
nop
add
and
add
add
add
push
sub
add
add
push
xor
outs
add
add
add
push
xor
outs
add
add
add
push
mov
add
add
push
mov
sub
xchg
add
pop
cmp
outs
add
add
add
xchg
add
pop
xor
outs
add
add
add
xchg
add
pop
xor
outs
add
add
add
add
sub
add
add
add
loopne
add
add
xchg
add
mov
xor
add
add
add
adc
add
add
xchg
add
inc
add
inc
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
dec
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
push
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
pusha
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
ins
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
js
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
test
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
nop
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
pushf
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
test
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
mov
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
shl
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
int3
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
fdiv
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
in
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
cld
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
adc
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
sub
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
inc
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
push
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
je
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
xor
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
cwde
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
movs
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
mov
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
enter
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
aam
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
loopne
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
in
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
clc
xor
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
adc
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
sbb
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
sub
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
xor
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
inc
xor
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
dec
xor
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
pop
xor
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
fs
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
jo
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
jl
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
mov
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
xchg
xor
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
lods
xor
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
les
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
shl
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
fdiv
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
hlt
xor
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
or
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
sbb
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
and
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
xor
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
cmp
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
dec
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
push
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
pusha
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
ins
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
js
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
test
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
nop
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
pushf
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
test
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
mov
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
shl
add
add
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
int3
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
fdiv
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
in
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
lock
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
cld
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
or
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
adc
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
and
add
or
xchg
sbb
adc
add
add
add
add
xchg
sub
add
add
add
add
mov
push
adc
outs
add
add
add
add
add
add
add
add
add
add
sub
add
or
xchg
sbb
adc
add
add
add
push
add
add
ins
pop
add
add
push
add
add
ins
pop
add
add
push
add
add
ins
pop
add
add
jo
add
add
jo
add
add
push
add
add
push
add
add
jae
add
add
push
add
add
ins
pop
add
add
push
add
add
ins
pop
add
add
push
add
add
ins
pop
add
add
jne
add
add
jne
add
add
jne
add
add
jne
add
add
jne
add
add
jne
add
add
jnp
add
add
test
add
add
jo
add
add
push
add
add
push
add
add
ins
pop
add
add
push
add
add
ins
pop
add
add
push
add
add
push
add
add
ins
pop
add
add
mov
add
add
(bad)
pop
add
add
push
add
add
ins
pop
add
add
fwait
pop
add
add
push
add
add
ins
pop
add
add
fwait
pop
add
add
sahf
pop
adc
add
mov
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
sahf
pop
add
add
scas
pop
add
add
lods
pop
add
add
jae
adc
add
mov
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
ins
pop
add
add
push
add
add
ins
pop
add
add
fwait
pop
add
add
push
add
add
ins
pop
add
add
push
add
add
push
add
add
jne
add
add
jne
add
add
jne
add
add
jne
add
add
jne
add
add
push
add
add
ins
pop
add
add
push
add
add
ins
pop
add
add
push
adc
add
mov
add
add
push
add
add
push
add
add
push
add
add
ins
pop
adc
add
fwait
pop
add
add
jo
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
sahf
pop
add
add
stos
pop
add
add
stos
pop
add
add
jne
add
add
mov
add
add
mov
add
mov
add
pop
add
add
mov
add
add
mov
add
pop
add
add
into
pop
add
add
(bad)
pop
add
add
(bad)
pop
add
add
fst
add
or
add
add
push
add
add
add
lldt
str
add
add
add
add
add
add
add
add
dec
add
or
adc
add
add
add
adc
add
add
pop
mov
or
std
pop
jecxz
adc
cmp
add
add
add
sbb
push
cmp
sbb
lods
add
add
sbb
stc
push
inc
add
sbb
push
inc
add
pop
inc
add
pop
pop
inc
add
mov
inc
add
pop
or
sbb
popa
add
adc
pop
popa
add
add
add
adc
pop
imul
imul
imul
imul
imul
jno
loop
xchg
jno
sub
pop
jno
loop
cmp
add
add
add
add
mov
cli
sbb
mov
and
mov
mov
add
add
adc
add
add
add
pop
cdq
add
adc
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
pop
icebp
add
adc
add
add
adc
add
add
sbb
or
inc
sbb
or
sbb
or
push
sbb
add
mov
or
imul
add
add
add
add
mov
sbb
or
mov
ja
or
and
mov
or
xchg
sbb
sbb
or
mov
add
add
xchg
or
test
add
sbb
sbb
or
rcr
rol
add
sbb
sbb
add
add
mov
adc
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
ins
pop
cmp
sbb
add
add
mov
sbb
add
add
add
add
add
add
add
sbb
pop
inc
add
sbb
pop
push
add
adc
add
fistp
call
sbb
pop
imul
imul
imul
imul
jno
sub
add
cli
sbb
pop
jno
cli
sbb
sbb
pop
add
mov
mov
add
sbb
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
add
or
add
adc
or
add
sbb
push
rol
stos
sbb
or
add
adc
add
add
stc
push
icebp
add
sbb
sbb
sbb
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
or
add
add
sbb
or
add
sbb
adc
or
add
add
sbb
or
sub
add
aas
sbb
or
sub
add
push
sbb
or
pop
sbb
or
push
sbb
or
sub
add
sub
add
or
or
or
add
or
add
add
or
add
or
or
add
add
adc
add
add
sub
add
add
adc
add
add
adc
add
add
sbb
or
add
sbb
add
add
adc
pop
adc
sub
or
add
sbb
add
add
sbb
or
add
sbb
pop
xor
ret
add
sub
add
jmp
sbb
or
add
or
add
add
add
or
or
or
or
add
or
or
or
add
jb
rol
sbb
jmp
add
add
add
add
sbb
rcr
loopne
xchg
or
add
adc
or
add
sbb
rcr
add
les
stc
add
push
retf
or
add
push
ror
adc
sbb
sbb
push
fisttp
sbb
add
push
jecxz
xor
push
jmp
push
lock
cmp
add
inc
add
push
stc
or
push
push
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
popa
add
adc
add
sub
adc
add
add
or
add
add
add
or
add
or
add
add
pop
mov
or
add
or
add
adc
add
add
pop
lods
add
add
adc
add
add
adc
add
add
adc
or
add
pop
ds
add
pop
inc
or
add
pop
dec
or
add
pop
pop
or
add
pop
pop
or
add
add
add
add
add
add
or
sub
add
sub
add
jl
aam
adc
sbb
add
inc
pop
fimul
adc
mov
loopne
adc
je
jmp
adc
add
cwde
pop
jmp
pop
out
or
movs
pop
test
add
or
mov
or
sub
scas
pop
adc
sub
stos
sbb
or
mov
sbb
cmp
scas
pop
and
inc
add
adc
add
adc
add
pop
and
push
add
add
adc
add
adc
add
adc
add
adc
add
pop
aam
je
xchg
sbb
or
adc
add
pop
aam
jl
sbb
add
pop
and
test
ds
add
test
inc
pop
out
or
mov
inc
pop
fimul
mov
sbb
add
xchg
add
adc
add
add
add
or
add
xor
push
add
add
push
add
je
push
add
add
add
or
add
add
add
or
pushf
or
mov
push
add
repnz
add
or
iret
or
jecxz
or
fadd
mov
or
loopne
aam
or
in
(bad)
mov
add
jmp
add
add
or
in
or
pop
add
or
mov
add
add
add
cli
add
or
add
and
add
and
add
and
add
and
add
add
add
or
add
ret
add
mov
popa
add
mov
add
mov
or
add
mov
loope
pop
add
mov
add
cmp
mov
and
cmp
mov
inc
add
add
xchg
or
or
add
mov
popa
add
mov
add
mov
or
add
mov
loope
pop
add
mov
jecxz
push
add
fwait
pop
dec
or
add
mov
add
pop
add
mov
inc
add
mov
pusha
add
mov
popa
add
mov
arpl
pop
add
mov
add
mov
or
or
add
mov
loopne
pop
add
mov
add
add
mov
inc
add
add
mov
add
and
inc
add
popa
add
add
mov
popa
push
pop
add
mov
and
pop
add
mov
pusha
pop
pop
add
mov
mov
or
or
mov
les
cmp
mov
loopne
pop
add
mov
add
pop
add
mov
add
pop
add
mov
and
pop
add
mov
pusha
or
mov
or
add
mov
mov
or
or
mov
loopne
pop
add
mov
test
add
mov
and
cmp
mov
mov
or
cvtdq2ps
mov
mov
or
or
and
cs
xor
inc
push
dec
push
push
push
pop
push
pop
push
gs
imul
push
xchg
push
ror
in
stc
push
add
adc
es
(bad)
rsqrtps
jno
test
mov
mov
xchg
shrd
pminub
loopne
or
adc
inc
adc
adc
xchg
mov
adc
adc
adc
adc
adc
and
sub
xor
adc
push
adc
jg
test
or
add
adc
pop
add
add
add
retf
pop
addr16
add
pop
ins
add
add
pop
jno
add
ficomp
jbe
add
in
jnp
add
jmp
pop
test
add
pop
mov
add
pop
mov
add
pop
mov
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
adc
add
pop
add
add
add
adc
add
pop
add
add
add
adc
add
add
add
add
pop
add
add
add
add
add
test
pop
add
add
add
add
add
add
add
add
lea
das
add
add
add
add
add
add
and
and
and
sub
xor
aaa
add
add
pop
add
jno
js
add
add
add
mov
add
enter
add
push
add
push
add
add
push
add
push
add
add
pop
add
push
add
add
pop
add
push
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
or
les
add
add
add
add
add
cmps
and
add
add
add
add
add
add
xor
add
add
add
and
add
add
add
add
hlt
and
add
add
add
add
sbb
add
sbb
(bad)
inc
cs
add
or
add
or
add
or
add
or
add
or
add
or
or
add
or
push
imul
popa
jb
popa
outs
je
gs
add
push
arpl
jns
je
ins
add
imul
ins
add
jne
add
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
outs
jne
gs
je
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
je
outs
outs
popa
jb
pusha
xor
push
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
je
js
push
jns
je
ins
cs
push
imul
gs
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
jb
popa
ins
push
jb
je
jb
push
je
imul
fs
push
jns
je
ins
cs
gs
add
arpl
je
outs
outs
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
inc
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
je
xor
push
je
imul
arpl
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jo
outs
ins
popa
imul
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
push
popa
je
add
arpl
jns
push
gs
jb
push
outs
outs
add
je
ins
jo
gs
outs
je
fs
js
gs
imul
add
imul
jb
je
jb
push
popa
outs
outs
ins
add
arpl
jns
outs
outs
add
ins
gs
jns
je
ins
dec
outs
outs
add
ins
add
gs
imul
jb
inc
outs
arpl
imul
popa
jns
inc
imul
ins
add
ins
gs
outs
fs
outs
popa
jb
push
jb
je
jb
dec
inc
outs
jne
gs
je
jb
xor
dec
inc
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
imul
inc
imul
jae
inc
imul
add
outs
jae
ins
add
ins
bound
dec
outs
outs
add
ins
bound
push
jns
gs
push
jb
jo
jb
jns
outs
outs
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
outs
imul
jae
inc
jb
jbe
dec
outs
outs
add
imul
jns
je
ins
cs
push
imul
imul
jb
jbe
push
jns
add
je
outs
outs
add
addr16
addr16
je
inc
js
gs
imul
fs
outs
ins
jns
outs
ins
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
outs
imul
gs
fs
je
je
add
jb
popa
ins
imul
je
jb
bound
add
push
fs
gs
dec
popa
outs
popa
gs
jae
gs
cs
arpl
imul
je
addr16
jo
jns
push
jns
ins
gs
imul
imul
push
fs
jb
jo
outs
push
jb
outs
jae
outs
jb
add
ins
outs
jb
push
je
gs
ins
add
jns
je
push
je
gs
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
arpl
cmp
cmp
imul
jae
push
imul
add
imul
jae
push
outs
inc
popa
jae
ss
jb
outs
jae
outs
jb
add
outs
jbe
jb
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
je
imul
jne
je
arpl
je
gs
gs
je
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
jb
push
gs
fs
inc
imul
ins
inc
arpl
jae
push
jne
add
jae
gs
cs
arpl
imul
jae
inc
outs
outs
je
outs
ins
add
ins
gs
arpl
imul
outs
ja
dec
ins
jo
jb
outs
outs
popa
je
outs
outs
inc
outs
outs
je
js
add
jae
gs
cs
arpl
imul
arpl
popa
ins
add
je
je
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
dec
fs
je
je
push
gs
outs
arpl
inc
imul
ins
push
imul
arpl
jae
inc
outs
outs
je
outs
ins
push
jns
add
arpl
imul
imul
imul
ins
push
arpl
imul
outs
ja
dec
fs
je
je
add
gs
je
add
jb
push
jbe
outs
je
jb
jae
inc
jbe
outs
je
popa
outs
fs
gs
push
je
arpl
jb
arpl
push
je
arpl
jb
ins
add
je
outs
fs
popa
jae
add
outs
je
ins
gs
gs
outs
fs
popa
outs
fs
add
fs
add
fs
gs
popa
outs
fs
add
gs
fs
outs
outs
add
je
outs
fs
outs
outs
add
jb
ins
gs
jb
outs
outs
add
popa
ins
imul
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
gs
je
jb
inc
imul
je
jb
dec
jo
outs
fs
dec
jo
outs
fs
data16
arpl
imul
imul
jne
jne
pusha
xor
push
imul
jae
gs
cs
imul
ins
popa
jo
gs
jbe
outs
je
jb
jae
push
jb
arpl
jae
je
jb
dec
outs
outs
add
outs
arpl
jae
imul
jns
add
outs
arpl
jae
push
bound
imul
jae
gs
cs
gs
inc
pop
imul
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
jo
gs
imul
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
imul
jae
bound
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
je
add
outs
popa
gs
outs
je
arpl
add
jae
gs
cs
popa
outs
popa
gs
outs
je
dec
bound
arpl
je
jo
imul
outs
popa
gs
outs
je
popa
je
add
outs
popa
gs
outs
je
ins
popa
jae
add
outs
popa
gs
outs
je
bound
arpl
popa
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
outs
jbe
imul
je
outs
fs
jo
imul
jne
gs
bound
push
jns
je
ins
cs
imul
fs
gs
or
and
ret
ret
loope
add
mov
test
loop
scas
add
sbb
add
and
or
test
or
add
loop
scas
add
loop
lahf
add
sub
inc
xor
xor
inc
outs
ins
ins
outs
outs
cs
outs
arpl
gs
or
or
and
call
add
loop
test
scas
add
mov
ret
sbb
loop
test
loope
and
test
pop
pop
inc
imul
ins
popa
jae
xor
loope
and
scas
add
call
bound
jae
popa
je
fs
jns
imul
gs
je
jb
bound
add
arpl
gs
gs
ins
cs
je
jb
bound
gs
dec
outs
imul
inc
gs
gs
je
add
imul
gs
push
add
inc
xor
xor
inc
sub
sub
sub
sub
aaa
xor
xor
ss
jge
out
mov
out
mov
add
popf
mov
add
popf
mov
add
popf
mov
add
sahf
add
sahf
add
out
add
sahf
test
out
test
out
xchg
out
xchg
out
mov
out
mov
out
mov
out
mov
out
mov
out
lea
out
mov
out
pop
out
nop
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
cwde
add
sahf
cdq
add
sahf
call
sahf
pushf
add
sahf
popf
add
sahf
sahf
add
sahf
lahf
add
sahf
mov
add
sahf
mov
add
sahf
movs
add
sahf
movs
add
sahf
cmps
add
sahf
cmps
add
sahf
test
out
test
add
sahf
stos
add
sahf
lods
add
sahf
lods
add
sahf
scas
add
sahf
scas
add
sahf
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
sahf
mov
add
sahf
mov
add
sahf
mov
add
lahf
add
lahf
add
out
add
lahf
test
out
test
out
xchg
out
xchg
out
mov
out
mov
out
mov
inc
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
sub
add
add
add
or
or
add
loope
add
loope
mov
or
sub
add
loop
scas
add
loop
lahf
add
jecxz
add
ret
or
mov
add
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
inc
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
inc
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
cmp
inc
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
cmp
inc
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
popa
add
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
bound
or
add
add
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
mov
or
add
add
ret
or
or
or
cmp
xor
pop
inc
popa
arpl
outs
addr16
imul
xor
xor
imul
popa
arpl
outs
addr16
imul
xor
xor
imul
popa
arpl
outs
addr16
imul
xor
imul
popa
arpl
outs
addr16
imul
xor
imul
popa
arpl
outs
addr16
imul
add
or
and
and
mov
sbb
ins
jne
pop
pop
add
mov
ret
mov
sub
ret
add
mov
and
mov
loope
or
loope
or
loope
or
gs
bound
arpl
ds
pop
je
imul
gs
outs
je
ins
gs
jae
gs
bound
js
imul
add
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
arpl
outs
jb
or
arpl
add
xor
add
ss
cmp
inc
imul
cmp
cmp
aaa
cmp
bound
xor
loop
test
or
loop
mov
ret
loop
mov
mov
loope
mov
loop
mov
sub
sub
sbb
loop
mov
loop
mov
add
or
or
add
or
mov
or
add
sub
or
add
loop
mov
or
add
or
or
mov
or
sub
add
xor
bound
xor
cmp
xor
bound
xor
cmp
xor
ss
ss
xor
cmp
xor
ss
ss
xor
xor
bound
add
xor
ss
ss
aaa
add
sub
or
add
sub
cmp
je
jb
push
popa
je
push
pop
pop
xor
cmp
je
jb
push
popa
je
push
pop
pop
xor
cmp
aaa
ss
aaa
xor
pop
xor
or
or
or
or
or
or
add
je
inc
xor
je
inc
xor
je
inc
xor
xor
jae
je
inc
xor
xor
addr16
inc
xor
xor
add
je
inc
xor
xor
add
je
push
xor
add
je
push
xor
add
je
push
xor
jae
je
push
xor
inc
aaa
cmp
dec
jo
xor
jo
ss
add
ss
xor
add
bound
xor
cmp
popa
imul
add
out
mov
add
sub
ret
or
ret
add
test
mov
mov
loop
test
sbb
test
add
test
add
mov
or
test
ret
call
test
loope
and
loope
add
add
call
and
add
call
push
xor
xor
xor
inc
imul
add
fs
outs
jbe
imul
outs
jbe
imul
outs
popa
fs
imul
add
je
jb
arpl
fs
jae
add
outs
imul
add
outs
imul
ss
pop
inc
je
js
je
pop
inc
je
js
je
xor
dec
outs
popa
add
imul
push
push
push
addr16
je
add
imul
push
push
push
addr16
je
ss
inc
outs
ins
popa
imul
add
imul
add
jae
dec
outs
imul
add
add
add
add
add
jbe
ins
jne
add
jb
ins
gs
jb
jae
add
jne
arpl
fs
imul
add
add
addr16
jbe
jb
outs
jae
add
jo
jb
imul
outs
jb
popa
je
jo
jb
ins
gs
jb
add
ins
gs
ins
add
jae
popa
add
outs
fs
jo
outs
js
inc
gs
gs
je
push
jns
gs
outs
imul
push
outs
push
je
imul
gs
outs
arpl
jno
popa
ins
jae
push
gs
add
imul
push
jae
add
je
dec
outs
addr16
add
je
js
arpl
imul
ins
bound
inc
gs
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
dec
outs
arpl
imul
fs
imul
popa
jae
dec
jne
gs
push
ins
gs
push
je
jb
add
outs
jb
add
je
push
push
push
je
je
add
je
inc
jne
jb
outs
je
push
add
je
dec
popa
outs
popa
addr16
push
dec
add
je
je
imul
pop
inc
jne
outs
inc
ins
jne
push
outs
fs
imul
pop
dec
outs
addr16
add
je
dec
gs
popa
add
je
push
je
arpl
jb
arpl
addr16
dec
outs
outs
gs
js
gs
imul
ins
popa
je
outs
jo
dec
outs
gs
popa
ins
imul
popa
je
push
outs
dec
outs
ja
jb
outs
jbe
jb
popa
outs
je
inc
outs
fs
imul
popa
imul
je
add
fs
data16
bound
jb
outs
add
jo
popa
arpl
dec
popa
jae
dec
outs
fs
data16
popa
jb
jae
imul
jo
jb
outs
jbe
jb
popa
outs
je
outs
jo
inc
jno
popa
ins
imul
ins
ins
dec
jb
ins
jo
jns
inc
jno
popa
ins
jae
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
addr16
inc
jb
outs
fs
jns
popa
ins
add
fs
inc
outs
ins
popa
imul
add
je
outs
ins
fs
popa
je
add
je
push
jb
arpl
jae
jb
outs
jne
je
addr16
dec
popa
arpl
outs
gs
popa
ins
add
ins
bound
add
je
imul
imul
je
outs
jae
outs
outs
add
je
js
outs
jae
outs
outs
add
je
gs
jo
popa
je
add
je
imul
jae
jae
inc
jb
popa
je
inc
imul
jns
inc
gs
imul
imul
gs
add
jne
gs
je
inc
imul
inc
jne
add
push
popa
jb
add
imul
dec
gs
add
je
inc
js
jae
jae
inc
gs
jb
popa
je
outs
outs
push
imul
inc
jb
popa
je
outs
outs
push
imul
dec
popa
jae
push
jb
je
push
imul
outs
add
outs
push
jb
je
add
jo
add
je
arpl
jae
inc
outs
outs
je
outs
ins
add
je
arpl
jae
inc
outs
outs
je
outs
ins
add
fs
popa
jns
add
je
dec
outs
ja
addr16
push
je
dec
outs
ja
addr16
push
outs
imul
gs
jns
gs
addr16
push
push
inc
cmp
dec
outs
jbe
dec
gs
add
je
dec
gs
bound
push
jns
add
je
dec
popa
ins
add
je
push
jb
jo
jb
jns
jns
add
je
inc
popa
outs
push
jb
je
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
gs
bound
jae
addr16
inc
jae
gs
bound
inc
gs
jb
jbe
jae
addr16
dec
jae
gs
fs
addr16
inc
jb
jbe
push
jns
add
imul
je
dec
outs
outs
gs
js
gs
imul
je
jb
inc
js
je
jae
je
dec
outs
fs
gs
je
inc
arpl
jo
outs
jb
inc
jb
popa
je
inc
outs
arpl
jo
outs
jb
addr16
inc
ins
outs
arpl
imul
jb
popa
jns
inc
ins
jne
push
ins
inc
ins
outs
arpl
inc
jb
popa
je
add
popa
jae
ss
je
imul
fs
jns
gs
push
gs
fs
outs
je
xor
push
outs
outs
add
jb
add
je
push
imul
inc
arpl
jae
push
jne
add
jo
jb
outs
outs
popa
je
add
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
inc
jb
ins
gs
outs
jne
je
inc
gs
jb
ins
add
je
gs
outs
add
je
dec
gs
outs
fs
popa
outs
fs
add
je
push
popa
ins
jne
add
je
outs
fs
gs
addr16
dec
outs
fs
gs
popa
outs
fs
add
jae
ins
jbe
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
dec
gs
outs
fs
popa
outs
fs
add
je
imul
gs
inc
imul
add
je
popa
ins
jne
add
je
push
gs
jb
push
jns
add
gs
je
inc
gs
gs
je
add
je
push
popa
jb
ins
gs
jb
jns
add
je
dec
inc
outs
gs
je
jb
inc
ins
imul
outs
add
outs
ins
inc
popa
jae
ss
je
imul
dec
outs
je
xor
inc
gs
gs
outs
fs
jb
ins
dec
popa
outs
fs
add
je
dec
jae
je
je
arpl
inc
gs
popa
jb
ins
gs
jb
add
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
push
add
ins
ins
add
ins
ins
jbe
jb
add
je
jae
je
inc
imul
jae
je
push
imul
jns
add
je
inc
jb
jne
outs
je
add
je
push
gs
add
je
push
jae
push
push
js
arpl
add
je
push
jb
arpl
jae
popa
ins
add
je
jb
arpl
jae
jae
addr16
dec
add
outs
push
gs
add
outs
outs
arpl
jb
popa
je
dec
outs
jae
popa
outs
arpl
inc
gs
gs
outs
fs
popa
jb
ins
gs
jb
add
jbe
imul
je
outs
add
je
dec
je
ins
add
je
dec
je
ins
add
gs
add
add
imul
arpl
jne
add
jb
je
jb
gs
jne
je
inc
fs
je
inc
outs
jne
je
inc
gs
outs
jne
gs
je
jb
inc
outs
outs
je
imul
addr16
push
popa
ins
jne
jae
addr16
inc
jne
jb
outs
je
inc
outs
jno
gs
add
jne
jne
add
or
loope
add
or
or
or
mov
inc
xor
xor
add
xor
add
xor
push
xor
and
and
add
test
add
test
test
ret
call
test
ret
sub
add
test
ret
add
mov
ret
add
mov
ret
ret
mov
loop
test
ins
gs
outs
je
gs
push
cs
ins
add
imul
je
push
ss
fs
ins
add
jb
gs
xor
cs
ins
add
jb
outs
arpl
popa
jb
popa
outs
je
ins
jae
outs
jb
imul
gs
cs
outs
jb
add
ins
ins
outs
outs
cs
popa
je
bound
add
ins
ins
outs
outs
cs
gs
jne
arpl
imul
ins
outs
arpl
popa
jb
popa
outs
je
jb
ja
je
push
js
add
aaa
xor
aaa
sub
sub
sub
sub
xor
xor
cmp
popa
arpl
arpl
sub
sub
sub
ss
aaa
bound
add
jb
jne
outs
add
adc
dec
add
add
dec
add
push
add
add
sbb
imul
xor
pop
add
jb
outs
add
add
jae
add
push
add
outs
add
add
add
push
add
outs
add
add
jae
push
add
add
je
jne
jo
add
outs
add
push
add
outs
add
add
add
add
je
add
pop
inc
add
ins
add
popa
add
add
add
add
(bad)
add
add
and
jnp
xor
jge
add
push
add
outs
add
add
jae
push
add
add
je
jne
jo
dec
add
data16
jb
ins
add
je
imul
add
push
add
je
jne
jb
outs
add
popa
add
add
add
xor
add
jb
add
add
outs
add
add
popa
add
add
and
jnp
xor
jge
add
add
jb
add
pop
add
jns
je
add
je
jae
pop
add
adc
add
je
inc
add
ins
add
jae
add
pop
add
pop
jae
je
popa
add
je
data16
ins
add
add
add
add
add
push
add
outs
add
add
jae
imul
and
data16
ins
add
jae
and
data16
outs
add
and
jnp
xor
jge
and
sub
and
jnp
xor
jge
add
outs
add
imul
pop
add
popa
add
jae
imul
add
sub
add
add
js
add
or
add
add
add
add
add
pcmpgtb
popa
add
add
jae
je
add
jnp
xor
jge
aas
add
cmp
add
add
jnp
xor
jge
add
popa
add
dec
push
add
dec
add
and
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
inc
add
add
add
add
add
add
add
add
daa
jae
je
popa
add
je
and
and
and
and
das
add
and
jnp
xor
jge
and
jnp
xor
jge
add
add
ins
add
add
xor
jge
add
dec
add
push
add
jae
je
jae
pop
add
arpl
add
popa
add
imul
add
add
add
and
imul
outs
add
je
and
popa
add
add
popa
add
add
add
outs
add
add
jb
and
je
outs
add
add
add
jo
and
jae
arpl
add
popa
add
imul
add
jnp
xor
jge
and
arpl
popa
add
outs
add
je
and
bound
add
add
jb
add
je
add
(bad)
add
add
pop
add
xor
jge
add
add
jb
outs
add
and
jae
add
add
outs
add
and
jb
add
outs
add
jb
arpl
add
add
outs
add
outs
add
add
outs
add
and
jnp
xor
jge
add
inc
add
jb
outs
add
and
add
outs
add
jo
imul
and
jae
arpl
add
popa
add
imul
add
ins
add
outs
add
add
add
outs
add
jb
arpl
add
imul
jae
add
add
je
inc
add
ins
add
jae
add
inc
add
add
imul
add
add
add
outs
add
add
jb
and
jnp
xor
jge
add
inc
add
jb
outs
add
and
add
ins
add
je
imul
and
data16
ins
add
add
and
jnp
xor
jge
add
inc
add
jb
outs
add
and
jae
add
add
outs
add
and
data16
ins
add
jae
add
add
je
jb
jns
imul
and
je
outs
add
add
add
add
add
add
add
and
jae
add
add
and
data16
ins
add
add
jae
add
jnp
xor
jge
and
ja
popa
add
and
outs
add
je
and
arpl
jb
add
je
add
pop
jnp
xor
jge
and
ja
popa
add
and
arpl
jb
add
je
add
and
xor
jge
and
sub
and
jnp
xor
jge
and
cmp
add
xor
jge
add
inc
add
jb
outs
add
and
popa
add
arpl
add
jae
imul
and
jb
add
outs
add
jb
arpl
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
cmp
xor
xor
xor
xor
xor
add
cmp
inc
add
xor
add
inc
add
xor
xor
xor
add
inc
add
inc
add
add
add
xor
cmp
cmp
inc
add
xor
add
aaa
add
add
add
add
inc
add
aaa
add
inc
add
aas
inc
add
jb
outs
add
and
arpl
jb
add
je
imul
and
data16
ins
add
and
data16
outs
add
and
jae
je
jb
add
ins
add
inc
inc
add
ins
add
outs
add
add
add
outs
add
jb
arpl
add
imul
jae
add
add
outs
add
add
ins
add
jbe
add
sub
outs
add
ins
add
outs
add
add
add
outs
add
jb
arpl
add
imul
jae
add
ins
add
outs
add
add
add
xor
jb
outs
add
and
jae
add
add
outs
add
and
imul
outs
add
add
outs
add
and
jnp
xor
jge
add
data16
and
add
jb
outs
add
cmp
and
jnp
xor
jge
and
add
add
and
outs
add
je
and
add
imul
add
inc
add
jo
jns
imul
and
jnp
xor
jge
sub
and
je
outs
add
add
xor
jge
sub
and
jae
imul
and
jnp
xor
jge
add
jb
outs
add
and
data16
and
jnp
xor
jge
and
sub
add
add
add
add
outs
add
outs
add
add
arpl
arpl
add
jae
and
popa
add
add
add
jb
imul
and
jb
add
outs
add
jb
arpl
add
add
xor
jge
add
inc
add
ins
add
outs
add
add
add
add
pop
push
add
add
outs
add
push
add
jae
outs
add
jb
arpl
add
add
push
add
add
popa
add
imul
add
inc
add
jae
arpl
jb
imul
imul
jae
add
jae
jbe
add
jnp
xor
jge
pop
add
xor
jge
add
xor
sub
add
add
add
sub
add
jo
add
add
sub
add
wrmsr
add
add
add
add
add
push
add
jae
je
inc
add
jb
add
je
outs
add
jns
add
add
jae
jbe
add
add
xor
add
xor
add
jae
jbe
add
jo
jb
add
popa
add
add
add
popa
add
pop
das
add
and
das
add
and
and
jnp
xor
jge
and
add
inc
add
ins
add
add
jae
and
popa
add
add
add
outs
add
add
add
outs
add
add
add
add
pop
xor
add
add
add
add
or
add
add
add
xor
add
add
add
add
inc
add
jb
outs
add
and
jb
add
jb
add
push
add
and
arpl
outs
add
data16
add
or
add
add
add
outs
add
imul
and
data16
outs
add
and
arpl
add
push
add
outs
add
imul
add
push
add
add
add
add
jae
jbe
add
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
add
inc
add
jb
outs
add
and
add
je
je
imul
and
data16
ins
add
and
jae
je
popa
add
add
or
add
imul
jnp
xor
jge
or
jnp
xor
jge
add
jnp
xor
jge
pop
add
jae
ja
popa
add
add
add
add
js
add
sbb
jns
dec
add
add
add
ins
add
jae
jae
add
dec
add
and
ja
popa
add
add
add
and
data16
jne
outs
add
sbb
add
outs
add
push
add
and
jnp
xor
jge
add
add
je
arpl
push
add
add
jb
outs
add
add
jae
and
jnp
xor
jge
and
popa
add
add
popa
add
add
add
jne
outs
add
imul
add
push
add
je
arpl
push
add
add
je
popa
add
je
add
sub
jne
ins
add
add
outs
add
add
imul
and
ja
popa
add
add
add
add
jae
je
popa
add
je
imul
and
imul
add
push
add
outs
add
add
jae
imul
and
jnp
xor
jge
and
data16
ins
add
jae
add
add
and
data16
ins
add
jae
and
je
outs
add
add
jb
outs
add
add
jae
add
add
add
ins
add
outs
add
je
imul
and
jae
arpl
add
popa
add
imul
jo
jb
outs
add
add
jae
imul
and
add
jo
jb
outs
add
add
jae
add
add
xor
jge
add
data16
outs
add
jae
push
add
adc
outs
add
add
add
js
jb
add
inc
add
add
popa
add
add
jb
ins
add
imul
add
add
pop
ja
popa
add
add
add
add
js
add
adc
jae
ja
popa
add
add
add
add
inc
add
add
imul
add
add
add
xor
jge
add
imul
outs
add
and
data16
jb
and
jnp
xor
jge
and
je
jae
add
dec
add
outs
add
jb
and
add
add
add
xor
jge
add
inc
add
outs
add
jae
push
add
add
xor
jge
add
push
add
add
je
add
add
xor
jge
add
sub
add
add
inc
inc
add
add
add
add
xor
jge
and
je
outs
add
add
add
jne
ins
add
outs
add
add
add
add
xor
jge
and
jae
outs
add
add
popa
add
sub
add
add
add
add
xor
jge
and
je
outs
add
add
imul
and
sub
jnp
xor
jge
and
jae
outs
add
add
popa
add
sub
add
add
add
add
add
xor
jge
and
je
outs
add
add
imul
outs
add
and
sub
jnp
xor
jge
and
jae
outs
add
add
popa
add
sub
add
inc
add
add
add
add
xor
jge
and
je
outs
add
add
je
push
add
add
popa
add
jae
add
popa
add
imul
data16
add
popa
add
arpl
add
add
add
popa
add
ja
add
bound
popa
add
add
bound
ins
add
add
arpl
add
add
arpl
add
add
arpl
jb
xor
add
arpl
jb
je
add
arpl
jb
ja
add
add
data16
pop
add
jb
add
add
jb
add
add
add
pop
add
arpl
add
add
arpl
ins
add
or
add
js
add
add
add
pop
add
data16
pop
add
add
pop
add
jae
add
add
data16
or
outs
add
add
pop
push
jo
add
pop
push
jo
add
pop
imul
add
add
ins
add
add
pop
ins
add
add
pop
ins
add
data16
pop
ins
add
xor
add
ins
add
ja
add
outs
add
data16
pop
outs
add
ja
add
outs
add
add
pop
outs
add
add
pop
outs
add
add
pop
outs
add
add
pop
outs
add
add
pop
outs
add
data16
pop
jo
xor
xor
add
jo
aaa
add
add
jo
aaa
add
add
jo
add
pop
jo
add
add
jo
add
add
jo
add
add
jo
outs
add
add
jo
data16
add
jo
jo
je
add
jo
jo
je
ins
add
or
jo
je
js
add
jo
jae
add
pop
jo
jae
je
add
jo
je
js
add
jb
xor
add
pop
jb
popa
add
add
jb
popa
add
add
jb
je
data16
pop
jb
ja
xor
add
jb
ja
ins
add
pop
jae
jb
data16
pop
jae
jb
ja
add
ja
bound
xor
add
ja
jo
add
pop
ja
jo
jae
add
js
ins
add
add
js
ins
add
add
js
ins
add
bound
add
js
ins
add
ins
add
or
ins
add
js
add
and
push
add
arpl
jns
arpl
ins
add
add
and
push
add
outs
add
add
jae
add
jns
jae
je
add
and
push
add
ins
add
ins
add
and
dec
add
data16
jb
ins
add
je
imul
add
push
add
outs
add
jb
popa
add
and
inc
add
ins
add
jae
add
push
add
outs
add
add
jae
add
inc
add
jo
inc
add
je
popa
add
pop
push
add
outs
add
jb
popa
add
inc
add
je
popa
add
pop
push
add
add
je
add
xor
xor
xor
add
add
jbe
add
jnp
xor
jge
pop
add
xor
jge
add
jae
jbe
add
jnp
xor
jge
sub
jnp
xor
jge
add
jns
jns
jns
jns
sub
add
add
add
dec
add
add
ins
add
add
jae
add
add
cmp
pop
add
jb
outs
add
jb
popa
add
and
inc
add
ins
add
jae
and
sub
js
cmp
add
add
add
ins
add
jae
outs
add
je
pop
add
add
jo
pop
add
outs
add
ins
add
outs
add
add
js
add
add
sub
ins
add
outs
add
add
je
jb
imul
push
add
jae
outs
add
jb
arpl
add
add
inc
add
arpl
push
add
jb
add
inc
add
ins
add
add
outs
add
popa
add
add
add
inc
add
imul
outs
add
imul
jb
imul
je
add
dec
add
jae
imul
inc
add
jns
jo
je
outs
add
add
dec
add
arpl
imul
add
popa
add
imul
je
add
dec
add
jbe
add
add
push
add
ins
add
jbe
add
add
push
add
jo
ins
add
arpl
add
add
push
add
add
popa
add
add
add
push
add
add
outs
add
inc
add
jns
jo
je
outs
add
add
push
add
add
outs
add
inc
add
jns
jo
je
outs
add
inc
add
jae
je
add
push
add
add
outs
add
inc
add
jns
jo
je
outs
add
dec
add
je
add
push
add
outs
add
push
add
jb
imul
je
add
jb
ins
add
arpl
imul
add
jb
imul
je
add
push
add
popa
add
inc
add
jns
jo
je
outs
add
add
cmp
add
jb
outs
add
cmp
and
jnp
xor
jge
sub
and
jnp
xor
jge
sub
and
jnp
xor
jge
add
jnp
xor
jge
sub
jnp
xor
jge
sub
jnp
xor
jge
sub
jnp
xor
jge
add
jns
jns
jns
jns
sub
add
add
add
push
add
cmp
jae
jae
add
ins
add
add
add
jnp
xor
jge
pop
add
xor
jge
pop
add
xor
jge
pop
add
add
add
jae
jbe
add
jns
jns
jns
jns
pop
add
dec
add
add
add
push
add
jae
add
add
add
add
add
add
add
add
add
xor
sub
add
xor
sub
add
popa
add
add
add
add
add
add
add
add
add
sbb
add
ins
add
inc
add
je
dec
add
je
push
add
dec
cmp
xor
xor
popa
add
add
arpl
sub
add
add
add
add
add
add
popa
add
add
add
xor
add
add
add
add
add
xor
pop
inc
add
imul
inc
add
je
dec
add
je
push
add
add
add
jnp
xor
jge
jnp
xor
jge
pop
add
rcpps
sub
add
add
pop
pop
add
outs
add
je
imul
imul
add
pop
add
outs
add
je
imul
imul
add
add
add
inc
add
add
xor
xor
xor
inc
add
add
add
add
xor
aaa
add
sub
add
add
add
add
xor
xor
aaa
add
add
cmp
xor
cmp
add
jge
add
and
adc
in
cwde
cmp
inc
xor
call
jp
push
sbb
mov
mov
pop
jg
aad
cmp
adc
push
add
push
push
adc
push
push
adc
push
push
adc
push
add
push
push
adc
push
or
adc
adc
std
push
add
push
or
adc
or
adc
adc
adc
sbb
xor
adc
xor
sub
adc
inc
add
add
add
push
add
add
add
sbb
and
adc
sbb
add
add
push
add
add
adc
and
add
adc
and
adc
add
adc
add
sbb
and
add
sbb
and
adc
add
sub
add
dec
add
dec
add
add
or
or
add
sbb
add
add
sub
push
or
add
push
pop
add
add
add
add
sbb
push
push
add
push
pop
add
add
and
push
or
add
push
adc
push
sbb
add
add
push
add
add
cmp
add
push
adc
or
inc
add
add
push
push
add
add
or
add
add
add
push
add
add
push
or
add
push
adc
push
or
adc
xor
add
adc
push
adc
and
push
add
add
add
add
or
or
add
sbb
and
sbb
add
add
cmp
add
cmp
adc
push
add
add
sbb
add
dec
push
sbb
add
pusha
push
pop
add
add
cmp
sbb
and
adc
jge
push
and
add
cmp
add
add
push
add
push
add
add
sbb
add
sbb
add
add
cmp
adc
add
sbb
sbb
and
adc
and
push
push
sbb
or
jns
push
adc
add
push
add
add
sbb
and
push
push
sbb
and
push
push
push
add
xchg
or
add
and
sbb
add
mov
and
add
push
and
adc
add
sbb
and
sbb
add
sbb
or
and
adc
add
sbb
and
add
adc
or
add
or
add
and
push
add
add
sbb
and
or
adc
or
rol
and
sbb
and
sbb
add
add
push
pop
and
push
sbb
sbb
and
sbb
adc
adc
or
and
add
or
add
or
and
sbb
adc
adc
add
sbb
add
push
push
and
adc
add
or
add
or
and
or
leave
push
and
sbb
and
sbb
and
adc
add
sbb
and
adc
adc
add
sbb
and
add
add
and
adc
add
sbb
sbb
and
add
add
dec
sbb
add
add
add
sbb
adc
sbb
and
adc
sbb
and
push
sbb
adc
push
sbb
adc
add
add
xor
inc
sbb
add
or
and
push
push
push
push
push
and
adc
add
sbb
or
or
add
xor
sbb
add
adc
sub
adc
add
sbb
sub
adc
add
add
dec
add
add
or
sub
push
add
add
add
add
cmp
add
cmp
or
adc
push
add
push
adc
push
adc
adc
push
adc
add
adc
adc
add
push
or
adc
adc
adc
adc
adc
adc
add
or
push
adc
or
adc
adc
adc
or
adc
adc
push
add
add
push
adc
inc
add
sbb
cmp
push
adc
add
adc
push
adc
push
adc
adc
add
adc
add
push
adc
adc
add
adc
sbb
push
adc
sub
add
adc
xor
push
adc
add
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
push
adc
sub
push
adc
xor
push
adc
cmp
push
adc
add
add
push
adc
or
add
adc
sbb
sbb
push
adc
and
add
adc
xor
xor
push
adc
cmp
add
adc
or
add
adc
adc
push
adc
and
add
adc
sub
push
adc
cmp
add
adc
add
mov
adc
adc
pushf
add
adc
and
lods
add
adc
xor
mov
rol
add
enter
or
rol
sbb
and
or
and
add
and
or
add
and
add
adc
adc
sbb
adc
push
pop
and
add
push
adc
push
and
add
sub
add
xor
push
adc
push
and
push
push
adc
adc
inc
push
add
add
dec
add
jne
add
push
push
sbb
add
push
add
sbb
add
push
push
push
add
add
push
add
or
add
add
add
or
sbb
add
push
sbb
sbb
add
push
push
sbb
push
sbb
sbb
add
push
push
push
push
add
xchg
push
and
add
add
adc
or
add
sbb
and
mov
sbb
add
push
add
add
adc
push
add
mov
add
add
adc
xor
or
add
or
and
add
add
adc
add
push
adc
add
sldt
sbb
adc
adc
adc
add
push
push
add
add
adc
add
push
adc
adc
add
or
add
adc
sbb
add
or
adc
or
and
add
adc
add
adc
or
add
adc
and
adc
adc
adc
or
add
adc
or
add
adc
adc
adc
add
and
sbb
and
adc
adc
add
add
add
add
sbb
and
add
add
dec
sbb
and
add
add
sbb
adc
sbb
adc
sbb
add
sbb
add
sbb
sbb
and
add
or
add
adc
or
and
adc
add
or
adc
add
fld
and
sbb
and
adc
adc
add
sbb
and
and
sbb
add
in
add
adc
adc
add
adc
in
and
adc
adc
push
and
add
sub
and
add
sub
or
add
adc
add
add
push
push
add
or
add
and
sbb
xor
sub
add
or
adc
adc
push
add
sbb
and
add
sbb
and
add
and
add
adc
adc
adc
adc
add
cmp
cmp
jge
and
add
sbb
and
sbb
pop
adc
add
add
add
push
add
adc
add
adc
add
add
movups
add
add
add
adc
add
add
add
push
add
add
adc
add
adc
add
push
add
or
add
push
add
add
add
or
and
adc
add
add
and
adc
adc
or
add
add
add
and
add
add
add
and
adc
add
add
add
add
and
adc
adc
add
add
add
add
or
push
add
std
add
dec
push
or
adc
add
inc
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
add
add
add
add
add
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
add
inc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
xor
xor
aaa
add
or
add
add
add
add
add
add
ins
add
outs
add
sub
outs
add
ins
add
outs
add
add
add
outs
add
jb
arpl
add
imul
jae
push
inc
add
ins
add
outs
add
add
add
add
add
ins
add
outs
add
add
add
outs
add
jb
arpl
add
imul
jae
add
add
je
inc
add
ins
add
jae
inc
inc
add
ins
add
outs
add
add
add
outs
add
jb
arpl
add
imul
jae
add
add
outs
add
add
ins
add
jbe
add
push
add
add
popa
add
imul
adc
add
add
je
inc
add
ins
add
jae
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
xor
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
xor
add
add
add
add
inc
add
cmp
inc
add
push
add
jae
je
inc
add
jb
add
je
outs
add
jns
adc
je
popa
add
add
add
jae
jbe
add
add
add
jne
add
add
add
add
add
add
and
add
add
add
add
pop
add
add
inc
or
pop
or
sub
ins
adc
adc
adc
sbb
dec
add
add
add
or
or
adc
add
add
add
or
pop
or
or
sbb
adc
add
pop
pop
add
adc
or
or
or
or
or
or
or
pop
adc
cmp
and
adc
adc
dec
add
or
pop
sbb
adc
mov
add
push
adc
sbb
push
push
adc
cmp
adc
adc
adc
add
adc
push
or
pop
or
sbb
or
or
adc
pop
or
sbb
and
add
add
push
pop
add
push
add
adc
or
push
adc
adc
sbb
or
pop
pop
adc
sbb
sbb
dec
add
or
add
sbb
or
pop
or
push
push
adc
or
or
pop
push
adc
adc
adc
push
add
push
pop
femms
adc
push
push
adc
push
or
dec
adc
adc
adc
adc
or
pop
pop
adc
inc
adc
inc
adc
sbb
or
add
or
add
or
pop
add
push
adc
or
sub
add
add
adc
or
pop
or
and
sbb
adc
adc
adc
adc
pop
adc
push
adc
dec
add
or
or
push
sbb
adc
adc
adc
adc
sbb
sbb
add
or
adc
adc
add
inc
sbb
pop
add
sbb
push
add
pop
pop
add
or
pop
add
adc
push
or
push
sbb
push
sbb
sbb
sbb
xor
add
or
or
pop
or
or
add
add
push
sbb
add
or
pop
add
push
adc
adc
adc
adc
add
or
pop
or
cmp
push
or
pop
pop
adc
adc
sbb
pop
add
add
add
push
push
or
inc
adc
add
or
or
add
or
or
pop
push
adc
sbb
or
pop
adc
adc
adc
push
add
or
add
cmp
cmp
or
or
or
push
add
inc
sbb
add
adc
or
adc
add
inc
add
or
and
movlps
adc
test
sbb
adc
adc
adc
sbb
adc
pop
add
adc
and
sub
add
xor
in
adc
or
sbb
or
mov
mov
ficom
and
(bad)
sub
xchg
rcr
(bad)
push
pop
pop
add
pop
add
add
add
push
add
add
test
cmp
sub
les
xor
test
cmp
mov
test
cmp
inc
(bad)
test
cmp
push
(bad)
test
cmp
mov
test
cmp
repnz
test
cmp
jg
test
cmp
ss
test
mov
jnp
adc
test
add
(bad)
scas
rcl
repnz
adc
cmp
and
add
cmp
scas
call
cmp
pop
cmp
(bad)
fadd
xchg
(bad)
or
cmp
sbb
test
jge
imul
loopne
in
jl
dec
xor
test
(bad)
clc
imul
lock
cmp
mov
cmp
(bad)
fadd
xchg
(bad)
outs
adc
test
jl
xchg
cmp
cmp
xor
test
jl
xchg
cmp
xor
cmp
test
(bad)
clc
imul
sub
cmp
scas
addr16
movs
fisub
(bad)
test
int
jp
adc
sti
imul
xor
ds
test
(bad)
clc
imul
test
push
rcl
test
xchg
imul
mov
or
cli
arpl
test
popf
clc
inc
cmp
test
cwde
retf
inc
test
cmp
adc
dec
and
das
cmp
and
(bad)
not
dec
leave
test
lock
fmul
nop
cmp
(bad)
cli
imul
jmp
pusha
pusha
jp
imul
cmp
sub
lods
fcom
cmp
cmp
aad
adc
test
pushf
mul
sbb
test
inc
cli
imul
(bad)
pusha
dec
lods
test
stos
xor
rcl
imul
cmp
inc
test
imul
dec
cli
imul
cli
pop
push
test
test
jbe
stos
imul
cmp
xor
outs
cs
push
adc
inc
add
(bad)
test
cmp
imul
test
(bad)
cli
imul
cmp
dec
sub
imul
test
jle
lds
imul
test
adc
lods
adc
cld
inc
dec
(bad)
test
std
movs
imul
or
adc
test
push
cli
imul
jmp
pop
adc
test
aad
imul
cmp
inc
add
popa
cmp
imul
fdivr
movs
cmps
adc
in
in
(bad)
test
adc
test
cmp
cli
imul
iret
sti
imul
(bad)
cli
imul
popf
clc
inc
ds
test
nop
retf
aam
adc
sub
scas
adc
cmp
adc
sub
sti
pop
adc
mov
in
xchg
cmp
jnp
cmp
xchg
bound
sbb
imul
cmp
pop
(bad)
test
jb
imul
icebp
outs
push
loope
addr16
shr
cmps
jmp
sar
jge
jp
mov
pusha
add
(bad)
(bad)
adc
adc
test
mov
inc
jb
sti
pop
adc
test
stos
push
imul
(bad)
sti
imul
in
xchg
cmp
xor
fld
mov
addr16
test
outs
push
jmp
sbb
push
(bad)
test
mov
imul
(bad)
scas
ins
adc
test
mov
jb
xchg
or
(bad)
sbb
inc
mov
addr16
stos
or
shr
sbb
test
cmp
imul
adc
adc
test
cmp
imul
shl
bound
jmp
xlat
test
jl
cli
imul
xchg
ins
pop
xchg
test
jo
cli
ins
cmp
pop
adc
in
inc
int3
(bad)
test
cmp
ds
xchg
jae
test
imul
xor
cmp
test
add
cmp
and
adc
ds
mov
shr
imul
test
imul
or
adc
test
nop
retf
test
imul
xor
out
test
jl
cli
imul
mov
imul
repz
push
cmp
(bad)
xchg
pop
cmp
(bad)
adc
push
out
test
scas
out
imul
addr16
add
cmps
jmp
xlat
scas
add
inc
cmp
scas
adc
cmp
adc
sub
test
cmp
xor
cld
pop
push
mov
imul
cli
outs
adc
cli
dec
cmp
test
test
imul
nop
inc
(bad)
test
xchg
repnz
mov
fistp
sar
test
outs
pop
xor
xchg
cmp
xor
not
jge
test
stos
inc
imul
xchg
jmp
bound
xchg
mov
cmp
sbb
cmp
inc
add
out
test
aam
imul
cmp
adc
test
stos
mov
shl
jg
shr
inc
cmp
cdq
adc
cmp
shl
cmp
cmp
test
repz
les
inc
cmp
test
cwde
retf
popa
test
test
imul
cmp
(bad)
(bad)
test
loope
imul
test
mov
(bad)
sbb
cmp
dec
leave
xchg
std
pushf
imul
cmp
push
(bad)
test
fs
imul
lock
dec
retf
sbb
test
icebp
aad
cmp
cld
imul
cmp
(bad)
adc
adc
test
std
popf
imul
cmp
dec
ja
arpl
cmp
or
cli
outs
cmp
pop
jb
xchg
add
fisubr
imul
cmp
out
xchg
mov
xchg
test
inc
cmp
xchg
adc
cmp
cli
imul
cmp
adc
mov
adc
test
add
inc
cmp
mov
adc
test
cmp
arpl
nop
retf
fld
imul
cmp
adc
or
retf
fiadd
imul
cmp
adc
mov
adc
test
add
inc
cmp
mov
adc
test
cmp
arpl
nop
retf
fld
imul
cmp
adc
or
retf
fiadd
imul
cmp
adc
mov
adc
test
add
inc
cmp
mov
adc
test
cmp
arpl
nop
retf
fld
imul
cmp
adc
or
retf
fiadd
imul
cmp
adc
mov
adc
cli
imul
test
xchg
xlat
test
pop
cmp
and
test
cmp
adc
test
cmp
cmp
xchg
add
(bad)
scas
mov
cmp
jnp
adc
jnp
sbb
jnp
adc
mov
cmp
jo
adc
test
sub
imul
in
jno
sub
cmp
xchg
std
adc
fisubr
rol
imul
clc
inc
cmp
test
cwde
retf
ret
xchg
(bad)
cli
imul
cmp
xor
test
cmp
sbb
adc
test
stos
daa
imul
or
sbb
adc
push
out
test
nop
idiv
sti
cmps
ins
fdivr
imul
repz
inc
fst
test
push
sti
imul
cmp
out
test
test
xor
(bad)
(bad)
je
xchg
test
push
adc
test
(bad)
repnz
aaa
test
adc
xor
sub
sub
xchg
imul
cli
pop
gs
test
scas
stc
imul
cld
jg
xlat
test
stos
outs
imul
cmp
cmp
(bad)
adc
push
(bad)
test
stos
out
push
adc
xchg
imul
(bad)
mov
sbb
ins
cmp
or
cmp
dec
xor
cmp
xchg
imul
xlat
outs
cmp
addr16
adc
test
nop
cld
pop
push
(bad)
imul
cld
jg
sub
ins
stos
jecxz
cmp
or
cmp
cmp
dec
adc
inc
mov
addr16
test
outs
dec
xor
cmp
lock
(bad)
(bad)
test
test
adc
in
cmp
xchg
imul
xlat
push
cmp
xchg
bound
test
pop
cmp
and
mov
rcl
cmp
lea
fwait
test
cmp
and
div
adc
pop
mov
lock
test
adc
sub
lods
dec
adc
test
xchg
std
js
(bad)
test
adc
xchg
ins
adc
test
add
sti
imul
mov
js
je
push
cmp
test
sub
xchg
aas
add
or
in
xchg
gs
mov
imul
xchg
icebp
sbb
push
sti
imul
cmp
cmp
test
test
mov
adc
test
int
imul
mov
test
cmp
cmp
test
jnp
imul
call
adc
and
(bad)
mul
xor
dec
mov
sbb
pop
(bad)
test
std
sub
or
popa
pusha
stc
imul
cli
outs
sub
cmp
(bad)
(bad)
test
lock
fmul
ins
adc
test
nop
(bad)
pop
push
(bad)
test
xchg
jge
(bad)
xor
outs
add
test
sub
cmp
xchg
inc
and
test
jge
jp
(bad)
xchg
pop
rol
sbb
cmp
adc
repnz
nop
loop
mov
xchg
jmp
mov
mov
or
cmp
and
pushf
jno
mov
and
adc
test
pop
addr16
test
mov
outs
jl
cli
imul
test
xchg
cmp
xchg
jbe
scas
shr
sti
adc
sub
test
imul
xchg
lock
test
add
sti
imul
call
cmp
xchg
je
pop
loopne
cmp
xchg
jg
fucomi
jno
into
xchg
jo
jmp
sub
add
mov
sub
neg
pop
or
adc
test
test
mov
(bad)
test
xchg
add
sub
xchg
jno
cmp
add
sti
sbb
cmp
rcl
test
enter
(bad)
test
mov
test
stos
outs
imul
xchg
cld
jle
lds
ins
sub
xchg
jno
dec
add
(bad)
cmp
xor
jmp
adc
test
nop
in
js
sti
movs
ins
fdivr
imul
repz
inc
fst
test
push
sti
imul
cmp
cmp
fwait
ins
fdivr
imul
repz
inc
fst
test
push
sti
imul
cmp
cmp
mov
stos
retf
imul
xchg
jle
lds
imul
nop
imul
fisubr
jp
test
adc
sub
sti
out
cmp
(bad)
test
or
jbe
cmp
test
cmp
push
xchg
test
xchg
add
sub
xchg
jno
mov
popa
sub
test
cmp
cmp
jmp
adc
cmc
pusha
sub
jmp
xlat
xchg
jno
xchg
xlat
push
cmp
xchg
push
xor
mov
inc
cmp
dec
pop
imul
jl
xchg
inc
(bad)
pushf
adc
test
stos
xor
cmp
xchg
push
std
fwait
imul
mov
test
(bad)
or
cmp
cmp
in
(bad)
test
call
add
xchg
jle
test
push
xor
test
ficom
lds
call
adc
test
sub
sub
lods
xor
xor
sub
jmp
adc
test
nop
in
js
in
add
js
(bad)
mov
stos
retf
rol
imul
cmp
sub
xchg
jbe
std
mov
rol
outs
sbb
addr16
mov
adc
inc
scas
test
xchg
jmp
test
pop
inc
(bad)
test
xchg
jmp
adc
test
cmp
sbb
xchg
add
cmp
cmc
jo
cmp
cmp
pushf
jbe
xchg
jmp
cwde
(bad)
pushf
dec
test
pop
adc
and
fnsave
loop
sub
nop
in
js
in
fistp
push
fld
cmp
xchg
jge
mov
test
nop
out
imul
xchg
jge
jmp
push
imul
cmp
cmp
lahf
dec
add
xchg
jno
push
and
sub
jnp
push
cmp
push
rol
imul
sub
dec
pop
push
test
pop
addr16
test
shl
inc
jno
test
test
jl
(bad)
xchg
jb
ret
cmp
test
pop
cli
imul
jb
imul
xchg
cli
imul
add
imul
mov
imul
xchg
cli
imul
mov
test
repz
imul
xchg
cli
imul
cmp
imul
ins
stc
imul
cmp
cmp
test
mov
imul
cmp
adc
cmp
mov
adc
imul
mov
jnp
sbb
test
adc
test
adc
test
cmp
test
adc
test
adc
test
(bad)
test
adc
test
cmp
cmp
test
adc
test
cmp
test
cmp
test
adc
test
cmp
cmp
test
cmp
cmp
test
adc
test
cmp
sbb
test
jge
arpl
out
jmp
dec
cmp
test
(bad)
lock
sbb
cmp
test
je
jp
add
test
cmp
bound
repz
(bad)
(bad)
cli
arpl
and
shr
jmp
rol
imul
mov
ins
xor
mov
mov
lods
pop
adc
test
mov
jne
(bad)
test
fsubr
jp
adc
movs
adc
test
jge
xchg
xor
adc
and
test
(bad)
lock
sub
bound
xlat
xchg
outs
xor
mov
mov
test
cmp
(bad)
fmul
xchg
(bad)
bound
call
adc
mov
dec
sub
test
(bad)
lock
sbb
cmp
test
sub
adc
(bad)
adc
cmp
test
jl
jp
adc
xor
cmp
mov
cmp
(bad)
fmul
xchg
(bad)
popa
adc
test
jge
xchg
sub
xchg
bound
std
dec
sub
(bad)
lock
xchg
repz
jnp
jp
xor
mov
mov
test
cmp
(bad)
fmul
xchg
(bad)
jo
nop
dec
(bad)
test
(bad)
lock
sbb
cmp
test
test
jp
add
test
cmp
(bad)
fmul
xchg
(bad)
dec
inc
mov
jnp
sbb
jp
add
test
mov
xchg
xor
shl
xchg
xor
test
jle
xchg
cmp
popf
adc
xor
mov
jg
shl
xchg
xor
test
jle
xchg
sub
xchg
bound
std
xchg
cmp
jnp
add
test
or
jp
add
aad
dec
adc
movs
bound
cmp
xor
test
jle
xchg
adc
repnz
daa
(bad)
test
(bad)
lock
xchg
jmp
adc
arpl
out
jno
in
jl
dec
and
test
(bad)
lock
xchg
(bad)
popa
adc
xchg
bound
jge
jg
xlat
scas
add
pusha
sub
test
adc
jns
cmp
xor
cld
jle
(bad)
outs
cmp
sti
imul
jmp
addr16
std
jle
cmp
lods
cmp
cmp
pop
(bad)
test
cmp
cmp
lea
jge
inc
cmp
test
adc
and
shr
jmp
rol
imul
mov
sbb
cmp
push
call
mov
add
cmp
cmp
xchg
popa
add
jmp
jmp
xor
mov
jge
xchg
adc
mov
adc
sti
imul
cmp
push
(bad)
test
stos
in
cmp
xchg
cdq
adc
mov
add
imul
cmp
cmp
popf
adc
cmp
xor
sti
loop
cmp
xlat
test
cld
cli
imul
cmp
inc
push
test
stos
movs
push
push
or
pop
mov
or
sti
adc
sti
imul
xlat
jns
movs
pop
adc
xchg
push
cmp
(bad)
jno
adc
sub
xchg
outs
add
xchg
bound
mov
sub
jne
cmp
test
test
imul
add
imul
xchg
mov
jbe
jge
jp
(bad)
lea
xor
adc
test
add
xchg
jmp
adc
cli
imul
mov
jp
jmp
fsub
imul
xchg
outs
sub
add
jo
xchg
add
sub
xchg
outs
pop
cmp
cli
imul
cld
jge
xlat
xchg
outs
add
test
test
sar
(bad)
and
cli
mov
lds
jne
(bad)
cmc
jno
cmp
cmp
adc
test
imul
ret
cmp
test
mov
test
je
imul
cmp
cmp
test
scas
cli
imul
xchg
sti
imul
cmp
cmp
test
cmp
cmp
test
scas
sti
imul
xchg
cli
imul
push
cli
imul
test
xchg
ss
and
cmp
pop
(bad)
test
cmp
lods
(bad)
test
cmp
mov
test
mov
jnp
adc
fldenv
repz
(bad)
(bad)
cli
arpl
xchg
std
shr
jmp
rol
imul
mov
sbb
cmp
push
call
fisubr
(bad)
test
mov
test
xor
mov
jp
dec
add
imul
(bad)
in
inc
cmp
scas
addr16
push
push
sbb
sub
adc
jnp
adc
jp
adc
(bad)
(bad)
jo
sub
cmp
test
push
cmp
xor
and
int
popa
adc
test
cmp
mov
test
stos
mov
shr
jae
xor
ds
jecxz
pop
in
out
push
adc
(bad)
test
test
inc
adc
add
mov
sti
pop
adc
test
adc
test
mov
inc
cmp
and
fisub
idiv
mov
test
nop
(bad)
js
rol
cmp
and
cli
imul
cmp
sub
xchg
popa
ds
and
sub
xchg
cdq
adc
mov
push
cmp
sub
lods
fst
cmp
out
scas
adc
cmp
test
test
test
cmp
or
cmp
mov
adc
sti
imul
cmp
push
(bad)
test
stos
in
cmp
xchg
cdq
adc
mov
add
imul
cmp
cmp
mul
adc
test
test
cmp
xor
inc
sbb
sti
cmp
cmp
sub
test
adc
xchg
jmp
test
and
cmp
test
add
imul
cmp
inc
pop
test
icebp
mov
cmp
xchg
in
(bad)
test
sti
sti
imul
sti
inc
scas
(bad)
test
std
jbe
cmp
xchg
call
adc
ja
cmp
lea
test
push
test
movs
cli
mov
ficom
js
sti
mov
push
cmp
xor
aas
adc
cmp
stc
jle
into
lods
sbb
cmp
cmp
rep
sub
or
cmp
sti
imul
(bad)
pusha
sub
test
imul
sub
sub
test
ins
(bad)
cli
imul
cmp
out
test
sub
sti
xor
mov
adc
cmp
xor
cli
imul
test
imul
ret
cmp
test
sbb
imul
aaa
cli
imul
cmp
cmp
test
pop
cli
imul
jle
imul
cmp
cmp
test
cmp
cmp
test
fwait
sti
imul
xchg
cli
imul
(bad)
cli
imul
cmp
pop
(bad)
test
adc
cmp
sub
rol
(bad)
and
shl
shl
retf
adc
mov
xlat
test
(bad)
bnd
je
dec
test
adc
in
(bad)
and
cli
imul
cmp
cmp
lahf
cmp
cmp
mov
adc
clc
imul
test
xchg
fiadd
imul
cli
imul
cli
imul
imul
xlat
test
cmp
rcl
xor
and
test
cmp
fst
test
cmp
push
(bad)
test
cmp
cmp
xchg
adc
xor
scas
les
mov
jnp
sbb
and
add
xor
scas
in
adc
dec
in
sti
imul
add
lds
jp
add
test
pop
sub
sub
imul
add
(bad)
mov
jg
shl
xchg
xor
test
jl
xchg
cmp
mov
imul
aam
or
test
fcmovnbe
pop
cmp
or
cli
arpl
mov
jns
(bad)
test
cmp
jp
adc
jnp
sbb
jp
ins
add
imul
repz
mov
test
stos
stos
push
adc
(bad)
adc
xor
mov
js
mov
imul
sub
adc
std
push
adc
test
jge
xchg
add
test
mov
jnp
sbb
jp
cmp
movs
popa
adc
test
jge
xchg
cmp
add
lahf
cmp
bswap
imul
cmp
js
test
jge
jp
test
xor
mov
imul
jge
popa
cmp
mov
outs
pop
jg
imul
cli
xchg
xor
test
jge
xchg
cmp
mov
dec
xor
test
(bad)
repnz
mov
push
mov
sbb
fs
test
icebp
hlt
popa
cmp
cld
jg
xlat
scas
add
outs
sub
test
adc
lea
mov
cmp
(bad)
(bad)
je
xor
ds
cli
pop
push
(bad)
test
xchg
arpl
(bad)
add
cli
imul
xchg
ins
dec
jmp
push
imul
cmp
cmp
xchg
popa
add
jmp
bound
rcl
(bad)
adc
cmp
test
cwde
retf
xlat
test
xchg
cli
imul
cmp
stos
(bad)
test
xchg
cli
imul
test
inc
adc
addr16
std
sti
je
cmp
sub
jnp
sub
test
add
imul
nop
cli
imul
test
jge
(bad)
or
(bad)
test
xchg
sti
imul
xchg
imul
imul
cmp
dec
xchg
lea
stos
popa
push
adc
or
cmp
aaa
std
mov
jl
sti
imul
cmp
cmp
xchg
outs
ins
pop
cli
imul
test
inc
call
imul
cli
imul
mov
ins
sub
test
int
repz
xlat
xchg
arpl
xchg
gs
xchg
test
mov
sar
(bad)
and
cli
mov
rcl
js
sti
mov
push
cmp
cmp
test
mov
cld
test
and
cmp
test
adc
aaa
imul
mov
cli
imul
inc
(bad)
imul
add
scas
icebp
imul
push
add
test
sbb
imul
rcr
(bad)
jno
cmp
cmp
adc
test
pop
fs
test
icebp
jp
cmp
cld
jg
xlat
xchg
imul
xlat
gs
mov
adc
test
icebp
jl
cmp
lock
xlat
xchg
imul
xlat
gs
lods
adc
jnp
test
icebp
push
and
xor
(bad)
xlat
xchg
imul
xlat
fs
lods
push
adc
and
(bad)
cmc
dec
push
cmp
sub
test
test
dec
and
out
jp
adc
test
jge
jp
(bad)
mov
cmp
cmp
icebp
outs
inc
mov
addr16
std
mov
add
retf
(bad)
test
pop
cli
imul
test
cmp
or
or
imul
xor
cmp
adc
xchg
adc
ins
fdivr
imul
repz
cmp
sbb
inc
mov
addr16
stos
or
shr
pop
arpl
test
loope
imul
test
mov
(bad)
or
cli
outs
adc
test
xchg
ja
cmp
test
cmp
cmp
ret
adc
cmp
(bad)
cli
arpl
lea
stos
test
sbb
cli
ins
inc
mov
imul
cmp
out
test
jecxz
imul
xchg
jno
cli
ins
adc
test
stos
daa
imul
cmp
neg
test
cmp
imul
imul
add
imul
nop
idiv
sti
shl
jecxz
imul
or
pop
std
fwait
imul
cmp
pop
(bad)
test
jb
imul
test
cmp
sbb
inc
mov
addr16
stos
or
shr
sbb
fiadd
imul
imul
movs
and
jmp
addr16
mov
dec
inc
xchg
arpl
cli
imul
xchg
loop
cli
outs
adc
test
icebp
push
popa
cmp
cld
pop
gs
test
xchg
imul
cli
outs
push
aad
addr16
std
test
ins
cld
cli
imul
adc
cmp
and
cli
imul
cmp
sub
xchg
imul
cli
inc
sub
xchg
popa
add
jmp
pop
in
xchg
gs
test
add
xchg
cdq
adc
xchg
addr16
lahf
repz
sti
inc
scas
(bad)
test
sbb
cmp
test
cmp
cmp
pop
jle
test
js
movs
shr
repz
in
(bad)
test
adc
test
xor
cmc
jno
cmp
cmp
adc
test
pop
inc
(bad)
test
scas
sti
imul
test
popa
adc
test
nop
repnz
gs
test
jecxz
imul
cld
jg
xlat
test
stos
outs
imul
fdivr
imul
repz
fst
test
push
sti
imul
cmp
inc
push
test
mov
add
(bad)
and
jecxz
cmp
push
imul
sti
inc
lods
(bad)
test
and
test
adc
xor
cmc
jbe
in
repnz
adc
test
push
sti
imul
cmp
xor
jmp
outs
jl
sti
imul
xchg
test
mov
pop
pop
(bad)
test
mov
arpl
rol
cmp
xor
je
pop
in
jno
xchg
test
cmp
and
(bad)
cmc
dec
mov
cli
outs
sub
test
cli
jp
(bad)
mov
or
sahf
cmp
cmp
adc
test
imul
mov
sbb
test
adc
cmp
and
icebp
js
ret
adc
mov
cmp
sub
xchg
imul
add
jne
jge
arpl
(bad)
sahf
or
cmp
cmp
test
pop
cmp
sub
lods
fst
cmp
cmp
pushf
jbe
xchg
add
sub
xchg
imul
test
cmp
xor
rol
imul
cmp
jno
test
test
mov
adc
and
imul
scas
push
adc
cmp
arpl
cli
imul
cmp
(bad)
test
cwde
retf
out
test
call
inc
cmp
xor
xchg
pop
cmp
cmp
sti
hlt
adc
test
cmp
sti
imul
mov
outs
dec
sub
arpl
cmp
test
(bad)
jg
test
adc
sub
sbb
xlat
test
xchg
cli
imul
cmp
adc
test
pminub
xlat
daa
jbe
xchg
repnz
sub
test
nop
out
xchg
cmp
test
lock
cmp
add
inc
cmp
shl
(bad)
scas
jmp
cmp
cwde
mov
je
jge
push
cmp
adc
cli
arpl
test
pop
sub
mov
imul
sbb
iret
lea
or
xchg
cdq
adc
movs
lahf
adc
or
lods
outs
adc
test
xchg
inc
(bad)
test
loop
imul
test
xchg
cmp
xor
not
jge
test
stos
inc
imul
cmp
sub
cdq
lock
sti
inc
lods
(bad)
test
and
cld
test
ret
cmp
test
movs
cli
imul
xchg
imul
cmp
cmp
test
cmp
cmp
test
mov
test
xchg
cli
imul
cmp
adc
mov
adc
cli
imul
std
ins
imul
cmp
and
sbb
imul
xchg
sbb
(bad)
test
sub
imul
sub
(bad)
test
cmp
adc
addr16
(bad)
test
idiv
push
(bad)
xlat
scas
add
inc
cmp
scas
adc
cmp
test
cdq
cli
imul
xchg
inc
out
test
test
outs
adc
mov
adc
test
adc
inc
cmp
mov
adc
test
adc
inc
cmp
mov
adc
test
adc
inc
cmp
mov
adc
test
adc
inc
cmp
mov
adc
test
test
xchg
ss
and
cmp
and
test
cmp
clc
(bad)
test
cmp
rcl
test
cmp
jmp
test
cmp
xchg
(bad)
test
cmp
ss
test
mov
jnp
adc
test
add
(bad)
scas
aam
mov
imul
mov
dec
xor
test
(bad)
stc
imul
cmp
cmp
shl
test
or
test
(bad)
mov
imul
pop
stos
cli
push
adc
inc
cmp
test
adc
test
cmp
and
test
cmp
adc
and
mov
fsub
xchg
xor
test
jl
xchg
cmp
xchg
add
(bad)
mov
imul
rol
push
out
mov
ds
test
(bad)
stc
imul
or
outs
sbb
test
jge
push
out
fs
in
jl
jge
cmps
test
stos
fld
shl
xchg
xor
test
jge
xchg
cmp
test
cwde
retf
and
adc
sub
test
cli
imul
call
adc
arpl
rol
outs
out
pop
scas
adc
mov
test
mov
pusha
mov
lods
in
cmp
ds
jge
cmp
push
mov
addr16
ficom
js
sti
mov
push
cmp
xor
aas
adc
cmp
pushf
jg
std
cli
imul
or
imul
test
mov
test
cmp
xor
rol
ins
sub
lods
fst
cmp
cmp
pushf
jbe
xchg
add
sub
xchg
pusha
mov
push
stos
inc
imul
and
rol
imul
mov
xor
cmc
sbb
cli
ins
sub
lods
mov
ins
(bad)
test
test
mov
(bad)
or
cli
outs
push
mov
cli
mov
(bad)
scas
adc
cmp
test
mov
sub
cmp
or
cmp
test
xor
test
cwde
retf
cwde
xchg
popf
cli
imul
cmp
push
xlat
test
std
xchg
imul
cmp
inc
int
addr16
scas
jmp
adc
cmp
(bad)
out
cmp
adc
sti
jl
cmp
cmp
test
cli
imul
cmp
adc
test
xchg
add
sub
xchg
outs
ds
push
retf
xlat
test
(bad)
cli
pop
pop
(bad)
test
(bad)
imul
xchg
cwde
cmp
or
cli
outs
inc
mov
arpl
cmps
sti
std
adc
test
mov
arpl
(bad)
arpl
cmp
lods
adc
cld
inc
(bad)
(bad)
test
std
xchg
imul
cmp
sub
xchg
outs
sub
cli
imul
cmp
cmp
test
ins
cmp
xchg
arpl
sub
cmp
mov
scas
in
imul
test
or
outs
sbb
fisub
sub
push
fild
inc
cmp
test
push
cli
imul
mov
push
test
movs
cli
mov
mov
push
(bad)
cli
imul
cmp
cmp
test
add
adc
or
adc
(bad)
jmp
cmp
test
call
sbb
ret
xchg
ins
adc
adc
aam
inc
adc
test
inc
lock
cld
push
push
(bad)
test
std
xchg
imul
cmp
sub
test
repz
mov
std
imul
movs
adc
test
nop
out
xchg
cmp
test
lock
cmp
add
inc
cmp
shr
(bad)
scas
dec
sbb
xchg
jbe
jge
jp
(bad)
mov
cmp
sbb
test
fdivr
imul
repz
adc
ror
inc
adc
test
in
cli
imul
cli
imul
(bad)
cli
outs
cmp
xchg
cmp
dec
cld
mov
in
xchg
imul
xchg
jmp
inc
adc
test
jl
cli
imul
shr
xchg
leave
adc
cmp
test
retf
cmp
test
call
adc
test
xchg
cli
imul
call
adc
test
pop
sti
imul
xchg
cli
imul
cwde
retf
retf
adc
cmp
in
adc
cmc
sbb
cli
ins
inc
mov
addr16
stos
or
shr
inc
(bad)
(bad)
test
in
cli
imul
cli
outs
cmp
lods
jg
cmp
mov
test
in
lock
cmp
sub
jnp
pop
cmp
dec
rol
cmp
scas
ins
sahf
cli
imul
test
outs
cmp
scas
ins
adc
sti
cmp
cmp
test
test
adc
fmul
inc
adc
test
in
cli
imul
cli
arpl
test
sub
sub
test
adc
adc
mov
cli
push
cwde
(bad)
test
std
test
shl
inc
jno
test
cmp
xor
test
xchg
movaps
lods
jg
xor
cmp
lods
inc
adc
test
xchg
imul
shr
push
push
(bad)
test
cmp
popa
adc
sbb
cmp
dec
dec
mov
(bad)
or
cmp
sbb
add
xchg
inc
push
xlat
test
std
test
shl
inc
jno
test
sub
adc
test
nop
(bad)
js
sti
or
sub
test
in
(bad)
imul
sbb
dec
(bad)
test
cmp
cmp
lods
inc
adc
test
jl
cli
imul
(bad)
pop
(bad)
(bad)
test
loope
imul
test
mov
(bad)
adc
cmp
imul
jmp
imul
or
adc
jnp
add
sti
and
cmp
adc
adc
or
push
cmp
sbb
test
sar
imul
repz
cmp
sub
test
adc
out
test
dec
cli
imul
fsubr
shl
imul
ret
cmp
test
pop
cli
imul
xlat
sti
imul
cmp
cmp
test
sub
imul
cmp
imul
cmp
cmp
test
pop
sti
imul
xchg
clc
imul
xchg
cli
imul
cmp
cmp
test
pop
sti
imul
xchg
cli
imul
mov
imul
cmp
dec
push
test
mov
bound
iret
neg
adc
sbb
adc
test
push
shr
xlat
mov
sahf
cmp
xor
xchg
outs
popf
jmp
pop
adc
outs
jl
cli
imul
xor
not
jge
test
stos
inc
imul
std
call
cmp
adc
test
fwait
mov
push
add
test
outs
mov
lods
or
cmp
inc
lahf
test
xchg
inc
(bad)
test
std
mov
cmp
xchg
bound
cmp
imul
(bad)
jge
xlat
xchg
pusha
add
addr16
xchg
inc
(bad)
test
pop
cli
imul
cmp
sbb
test
sar
imul
repz
cmp
xor
sar
xor
cmp
cmp
pop
adc
cmp
or
cmp
sbb
pop
bound
(bad)
test
cmp
mov
adc
int
add
cli
imul
mov
imul
cmp
cmp
jp
push
xchg
cli
imul
inc
aas
imul
retf
xchg
test
mov
test
jmp
imul
cli
arpl
test
outs
pop
aad
mov
cmp
xchg
cmp
cmp
pop
bound
(bad)
sti
sub
cmp
and
test
cmp
imul
jmp
test
test
popf
clc
inc
sbb
nop
retf
ret
test
xchg
imul
xor
mov
test
jl
cli
imul
test
mov
adc
addr16
mov
dec
into
cmp
push
loope
addr16
pop
cmp
lock
(bad)
or
retf
lds
imul
or
add
(bad)
or
retf
jg
adc
sub
xchg
cli
imul
xchg
mov
pusha
lahf
sti
imul
xor
cmp
xchg
outs
add
(bad)
test
mov
arpl
cmp
xor
mov
test
jp
dec
test
mov
movs
cmp
cmp
in
xchg
cmp
test
nop
icebp
js
in
push
adc
cmp
xor
imul
addr16
or
sahf
cmp
cmp
mov
xchg
test
cmp
imul
cli
imul
cli
ins
inc
mov
mov
(bad)
adc
cli
arpl
test
sub
xor
jmp
(bad)
rcr
adc
cmp
(bad)
adc
cmp
sub
lea
in
in
cmp
test
pop
cmp
sub
lods
fst
cmp
cmp
xchg
ins
add
jmp
outs
popf
jmp
sub
jmp
mov
je
xchg
icebp
push
scas
(bad)
test
icebp
sub
cmps
xchg
jmp
xchg
imul
movs
adc
ss
adc
test
imul
inc
call
and
rol
push
cmp
in
(bad)
test
(bad)
jmp
sub
and
outs
adc
test
xchg
repnz
sbb
cmp
imul
cli
imul
mov
sbb
shr
push
adc
test
xchg
bound
(bad)
imul
sub
cmp
test
xchg
mov
adc
cmp
test
mov
xchg
push
cmp
xor
inc
cmp
data16
test
stos
daa
imul
xor
inc
mov
mov
(bad)
xor
cli
imul
cli
imul
(bad)
cli
imul
cmp
adc
test
stos
es
adc
addr16
rol
retf
cmp
and
repz
bound
xchg
mov
(bad)
and
or
stos
sti
imul
or
adc
lea
inc
cmp
cwde
mov
jle
xchg
xchg
cmp
xor
not
cdq
(bad)
test
xchg
(bad)
cmp
and
shr
xlat
xchg
adc
cmp
cli
imul
jmp
test
cmp
inc
cmc
test
in
lock
and
xlat
test
cmp
or
jecxz
imul
repz
push
or
outs
cli
imul
in
xchg
cmp
mov
sub
in
test
stos
jecxz
cmp
mov
cmp
data16
jnp
sbb
test
and
sub
scas
adc
cmp
xchg
adc
cmp
cli
imul
jnp
imul
test
xchg
rol
imul
imul
imul
(bad)
test
cmp
ss
test
mov
jnp
pop
adc
cmp
test
add
(bad)
scas
fcom
pushf
aam
add
mov
jnp
pop
adc
cmp
ret
adc
cmp
movs
adc
test
xlat
mov
adc
ins
cmp
add
cmp
arpl
mov
sub
cli
imul
mov
sti
pop
adc
xchg
adc
sbb
test
jge
ins
cmp
int3
cwde
in
jl
push
sbb
test
jge
ins
cmp
mov
jg
fadd
imul
adc
sub
xchg
cli
push
rcr
push
cmp
push
loope
sbb
ss
test
nop
retf
test
adc
sub
cwde
cdq
pop
cmp
addr16
cmp
and
test
cmp
jo
test
cmp
cmp
and
(bad)
scas
mov
neg
imul
cmp
(bad)
fadd
adc
(bad)
test
in
fild
fmul
imul
cs
jle
aad
dec
adc
test
(bad)
clc
imul
stos
mov
cmp
movs
adc
test
shr
int
bound
xchg
sti
imul
cmp
inc
(bad)
test
stos
mov
sbb
push
clc
adc
test
jge
jp
mov
jo
cmp
cmp
xor
stc
retf
sub
lods
repz
xor
pusha
add
adc
xor
adc
xor
push
mov
test
add
shl
dec
shr
cmp
xchg
ins
add
(bad)
(bad)
jbe
sbb
ins
cmp
xchg
bound
cli
imul
xchg
inc
xlat
test
cmp
ds
cli
imul
jge
jp
mov
imul
sti
imul
icebp
jle
lds
out
sub
inc
xchg
(bad)
pop
bound
(bad)
xchg
stos
mov
cmp
test
xchg
repz
lds
push
sub
push
jae
jp
adc
dec
cmp
pop
adc
cmp
cli
imul
popf
cli
imul
call
adc
test
hlt
cli
imul
xchg
imul
cmp
cmp
test
mov
imul
xchg
imul
nop
retf
movs
test
movs
cli
imul
cmp
aaa
(bad)
test
cmp
inc
(bad)
test
cmp
mov
test
cmp
loop
test
cmp
ss
test
cmp
push
test
cmp
adc
test
cmp
cmp
mov
add
(bad)
scas
rcr
mov
movs
adc
test
fisubr
(bad)
test
mov
sub
cmp
scas
addr16
jo
push
sbb
(bad)
movs
outs
adc
test
jl
xchg
add
adc
cmp
jnp
adc
jp
xor
xchg
xor
cmp
(bad)
stc
imul
sbb
cmp
test
or
mov
jnp
adc
jp
adc
test
mov
imul
test
xor
mov
bound
(bad)
test
lds
jp
pop
in
out
imul
cmp
xor
test
jge
xchg
cmp
and
add
cmp
mov
ins
push
rol
sub
xchg
inc
rcl
test
cmp
cmp
test
adc
sub
mov
out
add
addr16
xchg
imul
mov
xchg
cmp
lea
test
inc
cmp
scas
adc
cmp
test
stos
cli
imul
mov
push
sbb
test
jge
jg
xlat
xchg
bound
xchg
fstp
(bad)
test
mov
ss
cld
jnp
(bad)
adc
cmps
adc
mov
sub
sub
test
ins
and
imul
cmp
cmp
test
stos
mov
cmp
mov
fcomi
imul
addr16
mov
jno
sub
sub
test
adc
test
fist
addr16
fsubr
rcl
js
sti
lods
adc
and
adc
sub
xchg
popa
mov
std
jle
mov
jbe
cmp
test
add
adc
cmp
xchg
cmp
xor
in
xchg
cmp
xor
mov
ds
mov
cli
imul
addr16
xchg
add
sub
xchg
bound
stos
mov
aaa
(bad)
cmc
jg
cmp
cmp
xor
cld
retf
sub
xchg
arpl
imul
pop
js
(bad)
adc
test
imul
add
imul
xchg
ins
pop
popf
test
in
movs
imul
jecxz
imul
cli
ins
sub
test
inc
push
push
repz
cmp
test
test
outs
sub
daa
jbe
xchg
inc
gs
test
mov
xchg
pusha
cmp
cli
imul
xor
mov
imul
scas
lock
(bad)
xchg
sub
and
in
(bad)
test
test
outs
sub
daa
jbe
stos
outs
imul
test
ins
adc
xchg
arpl
sub
cmp
test
lahf
ret
imul
nop
retf
rol
imul
xor
cmp
mov
adc
test
or
cmp
mov
adc
add
cmp
(bad)
sbb
cmp
cli
imul
xor
cmp
mov
outs
cmp
(bad)
addr16
cmps
jmp
movs
iret
imul
(bad)
(bad)
addr16
cmps
jmp
movs
fld
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
jmp
outs
cmp
(bad)
addr16
cmps
jmp
movs
stc
imul
(bad)
(bad)
addr16
cmps
jmp
movs
or
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
sbb
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
sub
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
cmp
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
dec
imul
(bad)
(bad)
addr16
cmps
jmp
movs
imul
(bad)
(bad)
addr16
cmps
jmp
movs
jne
adc
xchg
outs
cmp
(bad)
addr16
cmps
jmp
movs
test
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
xchg
push
cmp
(bad)
addr16
cmps
jmp
movs
cmps
push
cmp
(bad)
addr16
cmps
jmp
movs
mov
adc
xchg
outs
cmp
(bad)
addr16
cmps
jmp
movs
(bad)
push
cmp
(bad)
addr16
cmps
jmp
movs
xlat
push
cmp
(bad)
addr16
cmps
jmp
movs
out
adc
xchg
outs
cmp
(bad)
addr16
cmps
jmp
movs
imul
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
pop
push
cmp
(bad)
addr16
cmps
jmp
movs
pop
push
cmp
(bad)
addr16
cmps
jmp
movs
daa
push
cmp
(bad)
addr16
cmps
jmp
movs
aaa
push
cmp
(bad)
addr16
cmps
jmp
movs
inc
push
cmp
(bad)
addr16
cmps
jmp
movs
push
push
cmp
(bad)
addr16
cmps
jmp
movs
addr16
cmp
(bad)
addr16
cmps
jmp
movs
jae
adc
xchg
outs
cmp
(bad)
addr16
cmps
jmp
movs
xor
xchg
outs
cmp
(bad)
addr16
cmps
jmp
movs
xchg
ja
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
mov
outs
cmp
(bad)
addr16
cmps
jmp
movs
mov
adc
xchg
outs
cmp
(bad)
addr16
cmps
jmp
movs
ret
ja
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
shl
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
jecxz
adc
xchg
outs
cmp
(bad)
addr16
cmps
jmp
movs
repz
repz
outs
cmp
(bad)
addr16
cmps
jmp
movs
emms
adc
xchg
outs
cmp
(bad)
addr16
rol
arpl
shl
mov
cmp
test
or
cli
arpl
shl
mov
or
adc
or
cli
arpl
shl
inc
add
test
test
or
cli
arpl
shl
mov
mov
cmp
test
or
cli
arpl
shl
or
or
adc
or
cli
arpl
shl
out
or
adc
or
cli
arpl
sar
inc
adc
test
(bad)
repnz
fld
imul
mov
sbb
test
xor
fcmovu
test
jl
sti
imul
(bad)
cli
sbb
test
xor
retf
pop
jl
sti
imul
mov
sbb
test
xor
dec
fadd
imul
mov
sbb
test
xor
and
test
jl
sti
imul
cmp
cmp
mul
xchg
mov
in
std
push
popa
shl
dec
mov
cli
pusha
inc
hlt
test
or
sbb
test
imul
and
and
cli
js
movs
cmp
outs
cmp
(bad)
add
sub
cmc
or
cli
arpl
mov
sbb
dec
int3
xchg
addr16
std
push
pop
icebp
sar
cmps
jmp
shl
ficom
or
adc
test
jl
sti
imul
mov
test
lock
(bad)
test
lock
push
adc
mov
sbb
xlat
test
movs
cli
imul
xor
adc
mov
adc
test
add
inc
cmp
mov
adc
test
cmp
arpl
nop
retf
fld
imul
cmp
adc
or
retf
fiadd
imul
cmp
adc
mov
adc
test
add
inc
cmp
mov
adc
test
cmp
arpl
nop
retf
fld
imul
cmp
adc
or
retf
fiadd
imul
cmp
adc
mov
adc
test
add
inc
cmp
mov
adc
test
cmp
arpl
fprem
inc
cmp
test
cmp
add
test
(bad)
imul
clc
inc
cmp
test
cmp
adc
clc
ins
adc
inc
cmp
mov
adc
cli
imul
adc
adc
sub
cmc
sbb
cmp
cmp
test
cmp
or
test
cmp
sbb
adc
test
stos
add
sar
dec
adc
xchg
rcr
imul
cmp
adc
mov
adc
add
cmp
(bad)
sbb
cmp
test
test
imul
cmp
xor
test
cwde
retf
or
imul
cmp
mov
fdivr
imul
inc
xlat
test
xor
test
mov
imul
push
imul
jl
imul
(bad)
popa
cmp
cld
inc
ds
popa
push
cmp
call
js
fist
arpl
rol
ins
sub
xor
xchg
inc
mov
test
jp
or
jbe
xchg
add
sub
xchg
outs
mov
push
stos
inc
imul
xchg
xchg
cmp
lea
scas
not
jge
test
xchg
sar
(bad)
and
out
xchg
cmp
lea
scas
not
jge
test
stos
inc
imul
xchg
add
sub
xchg
outs
pop
cmp
cli
imul
shr
xlat
mov
adc
jmp
cmp
cmp
test
adc
test
cmp
addr16
cli
imul
sbb
imul
sbb
cli
imul
xor
cmp
cld
jle
sub
cmp
and
rol
ins
adc
xchg
mov
sbb
xor
sub
mov
imul
jg
pop
in
dec
jge
cli
outs
cmp
repz
adc
popa
adc
push
imul
cmp
cmp
xchg
add
sub
xchg
bound
pop
cmp
cli
imul
sti
jp
mov
dec
test
or
ins
sub
test
ins
(bad)
cli
imul
cmp
out
xchg
cdq
adc
mov
push
cmp
cmp
aas
adc
cmp
or
aam
pop
adc
test
cmp
addr16
cli
imul
out
arpl
(bad)
test
cmp
addr16
cli
imul
popf
sti
imul
test
xchg
rol
imul
(bad)
test
cmp
in
test
cmp
jnp
test
cmp
cmp
and
add
ds
scas
lods
adc
push
imul
cmp
adc
xchg
(bad)
xlat
imul
cmp
xor
test
in
inc
cmp
scas
addr16
cld
fisubr
(bad)
test
lods
sar
adc
cmp
mov
test
nop
clc
imul
in
push
jno
sbb
cmp
test
push
sub
pusha
sub
imul
cmp
xor
test
jl
xchg
cmp
cld
pop
dec
(bad)
test
xor
imul
test
inc
cmp
cmp
loop
cmp
clc
push
adc
test
(bad)
(bad)
imul
add
cmp
adc
ror
mov
cli
arpl
test
ds
mov
outs
aaa
test
ds
mov
inc
cmp
scas
addr16
clc
inc
cmp
test
cmp
inc
out
addr16
adc
cmp
mov
adc
test
cmp
inc
out
addr16
mov
push
(bad)
fwait
adc
xor
xlat
imul
imul
cmp
out
test
std
test
cmp
test
arpl
(bad)
addr16
(bad)
test
test
sbb
test
add
stos
jge
cmp
test
je
cli
ins
xor
mov
sub
cmc
sbb
push
std
jnp
movs
pcmpeqd
repz
cmp
(bad)
cmp
imul
cli
pop
je
test
stos
inc
imul
xchg
repz
xlat
xchg
popa
add
test
mov
sar
(bad)
and
and
sbb
test
cmp
add
popf
test
cmp
sub
jge
jp
mov
(bad)
int
jmp
adc
adc
test
test
lods
adc
cmp
cli
imul
div
imul
cmp
cmp
jl
adc
lds
imul
adc
cmp
mov
adc
add
cmp
(bad)
sbb
cmp
test
cmp
sub
scas
adc
cmp
test
mov
imul
cmp
xor
test
cmp
or
test
cmp
data16
test
cmp
and
test
cmp
jl
test
cmp
cmp
lea
add
(bad)
scas
mov
cmp
jnp
adc
xchg
add
(bad)
scas
enter
imul
adc
cmp
jmp
adc
fadd
jg
and
sbb
cmp
test
dec
sub
adc
repnz
cmp
xor
test
jl
xchg
dec
ja
sbb
cmp
scas
addr16
sbb
outs
cmp
test
jge
jp
adc
fmul
imul
mov
xchg
(bad)
outs
cmp
test
mov
imul
xchg
sub
(bad)
test
cmp
jb
test
cmp
mov
test
cmp
and
test
cmp
ss
test
cmp
cmp
and
add
aas
(bad)
scas
mov
cmp
jnp
push
adc
cmp
xchg
add
(bad)
scas
enter
imul
cmp
xor
test
in
sbb
(bad)
test
mov
jnp
push
adc
cmp
jmp
adc
fadd
xchg
(bad)
adc
test
jl
xchg
dec
ja
sbb
cmp
scas
addr16
sbb
popa
cmp
test
jge
jp
adc
fmul
imul
mov
xchg
(bad)
ins
sbb
xchg
cdq
adc
xor
rcl
cmp
scas
adc
cmp
test
test
imul
cmp
cmp
xchg
cmp
adc
mov
adc
test
add
cmp
jmp
push
cmp
and
test
(bad)
or
(bad)
test
xchg
sti
imul
xchg
imul
imul
cmp
sub
jnp
ins
cmp
dec
rol
shr
imul
test
pop
test
shl
dec
(bad)
push
adc
(bad)
ins
adc
test
xchg
pop
sub
jmp
test
adc
push
stc
jmp
dec
fdivrp
repz
test
stos
pop
push
adc
test
sub
push
push
test
nop
(bad)
js
sti
cmp
(bad)
xlat
xchg
bound
xchg
fs
xchg
test
xchg
inc
(bad)
test
pop
cli
imul
sub
sub
test
ins
(bad)
cli
imul
cmp
out
test
fcomip
aad
or
adc
xlat
cdq
adc
cmp
cli
imul
in
pop
imul
(bad)
test
nop
retf
add
sub
clc
inc
nop
xlat
test
xchg
leave
sub
addr16
std
ins
imul
cmp
adc
addr16
rcl
adc
test
aaa
sti
imul
cli
ins
cmp
shl
(bad)
xor
shr
(bad)
(bad)
dec
adc
mov
adc
test
std
mov
dec
into
cmp
xor
test
test
test
cmp
cmp
mov
adc
imul
test
xchg
ss
and
cmp
mov
cmp
push
(bad)
test
cmp
adc
or
jne
test
cmp
(bad)
test
mov
jnp
adc
test
add
(bad)
scas
fcom
mov
jnp
adc
mov
adc
test
movs
fisubr
imul
test
imul
jge
push
std
add
inc
test
std
imul
push
jo
cmp
stos
xlat
test
sahf
clc
imul
test
(bad)
stc
imul
std
into
imul
cmp
sub
test
test
jg
(bad)
test
imul
mov
sti
push
adc
test
jge
push
out
pushf
cwde
in
jl
imul
fld
imul
cmp
adc
or
retf
fiadd
imul
cmp
adc
mov
adc
add
cmp
or
xchg
xchg
addr16
iret
imul
cmp
adc
or
retf
leave
test
cdq
cli
imul
cmp
mov
aad
imul
ror
(bad)
sub
cld
inc
cmp
mov
adc
add
cmp
or
cmps
xchg
addr16
iret
imul
cmp
adc
or
retf
leave
test
cdq
cli
imul
cmp
mov
adc
imul
ror
(bad)
sub
cld
inc
cmp
mov
adc
add
cmp
or
jp
addr16
iret
imul
cmp
adc
or
retf
leave
test
cdq
cli
imul
cmp
mov
inc
call
adc
cmp
sub
cld
inc
cmp
mov
adc
add
cmp
or
add
addr16
iret
imul
cmp
adc
or
retf
leave
test
cdq
cli
imul
cmp
mov
popa
call
adc
cmp
sub
cld
inc
cmp
mov
adc
add
cmp
or
and
imul
cmp
adc
or
retf
leave
test
cdq
cli
imul
cmp
mov
test
imul
ror
(bad)
sub
cld
inc
cmp
mov
adc
add
cmp
or
hlt
xchg
addr16
iret
imul
cmp
adc
or
retf
leave
test
cdq
cli
imul
cmp
mov
vpunpckhwd
mov
adc
sub
cld
inc
cmp
mov
adc
add
cmp
or
mov
iret
imul
cmp
adc
or
retf
leave
test
cdq
cli
imul
cmp
mov
add
imul
ror
(bad)
sub
cld
inc
cmp
mov
adc
add
cmp
or
dec
xchg
addr16
iret
imul
cmp
adc
or
retf
ret
test
cmp
sub
lahf
sbb
aad
inc
adc
test
test
mov
adc
test
and
(bad)
(bad)
test
adc
cmp
or
cli
outs
cmp
test
nop
retf
push
test
mov
imul
cmp
addr16
(bad)
test
cmp
js
test
cmp
cmp
test
add
(bad)
scas
mov
mov
movs
adc
test
shr
pop
cmp
(bad)
fadd
jle
aad
dec
adc
test
(bad)
clc
imul
xor
cmp
test
(bad)
clc
imul
nop
cli
sbb
addr16
adc
sbb
(bad)
test
outs
inc
in
test
test
imul
addr16
fisubr
fadd
ins
cmp
pop
adc
cmp
(bad)
dec
push
cmp
xor
xchg
sbb
cli
ins
inc
arpl
inc
sbb
stos
push
imul
cmp
adc
mov
adc
cli
imul
sub
inc
je
addr16
std
les
shl
mov
(bad)
and
inc
imul
cmp
(bad)
(bad)
test
popa
jmp
adc
sti
cld
adc
test
xchg
stc
sbb
ret
cmp
cli
imul
cmc
cli
imul
xchg
pop
cmp
or
cli
outs
mov
test
and
jno
pop
popf
adc
and
daa
outs
cmp
adc
xor
jmp
imul
imul
cmp
out
test
stos
bound
rol
imul
and
cmp
test
jg
sub
cmp
cmp
sub
push
cmp
cmp
mov
adc
sti
imul
sub
inc
je
addr16
std
les
shl
inc
fcmovnbe
test
add
sub
cmp
xor
imul
cmp
inc
mov
imul
cmp
out
test
test
imul
(bad)
test
stos
in
cmp
xchg
bound
xchg
cmp
adc
test
or
ins
or
imul
repz
pop
mov
cmp
xor
cmps
jge
cmps
lods
adc
xor
adc
arpl
adc
(bad)
lods
pop
adc
test
sti
sti
imul
test
(bad)
xor
push
mov
pop
add
test
mov
jnp
add
mov
sbb
cmp
inc
add
cmp
lods
mov
aas
xlat
test
add
mov
sti
das
adc
test
cmp
imul
(bad)
sbb
std
arpl
ror
outs
sbb
test
adc
add
sub
test
inc
sti
sub
cmp
pop
(bad)
test
cmp
imul
cli
ins
cmp
pop
jg
xchg
add
sub
xchg
bound
mov
pop
stos
sbb
cmp
test
cmp
cli
imul
(bad)
imul
fwait
cli
imul
push
rcr
cmp
or
cli
outs
cs
mov
jmp
pusha
mov
mov
imul
or
sbb
(bad)
test
mov
test
popf
clc
inc
cmp
test
popf
clc
inc
cmp
test
nop
retf
ret
adc
xchg
cmp
cmp
shl
cmp
and
clc
inc
xchg
(bad)
test
popf
clc
inc
xchg
(bad)
test
cwde
retf
movs
test
mov
and
xchg
or
cli
imul
test
cmps
jmp
addr16
fsubr
jp
test
adc
cmp
sub
out
gs
rcl
inc
xlat
test
mov
sbb
icebp
xor
cmps
mov
sbb
cmp
cli
sbb
ror
arpl
rcl
arpl
fst
xor
sbb
sub
sti
adc
cmp
ds
lods
adc
xor
imul
or
cmp
imul
cld
jp
test
adc
adc
test
movs
test
cmp
xor
(bad)
cmc
dec
push
cmp
or
cmp
cmp
test
push
inc
inc
test
xchg
std
inc
mov
mov
sbb
or
cmp
sti
imul
jmp
adc
adc
cmps
not
adc
xchg
lock
imul
cmp
imul
cmp
fist
cmp
aaa
(bad)
mov
cmp
adc
sub
lods
sub
cmp
cmp
test
pusha
in
xchg
imul
push
and
imul
cmp
out
mov
ret
cmp
test
lahf
cli
imul
(bad)
imul
cmp
cmp
test
lahf
cli
imul
loopne
imul
cmp
cmp
mov
adc
test
stos
push
imul
repz
imul
icebp
pop
test
test
std
imul
push
jns
cmp
stos
xlat
test
xlat
clc
imul
jmp
dec
mov
cli
outs
adc
mov
adc
test
stos
push
imul
or
imul
icebp
pop
test
test
std
imul
push
jns
cmp
stos
xlat
test
xlat
clc
imul
jmp
dec
mov
cli
outs
adc
inc
xlat
test
jge
inc
cmp
sub
test
inc
xchg
(bad)
test
nop
retf
test
imul
xchg
xchg
cmp
int
mov
cli
ins
adc
test
cdq
add
push
ficomp
outs
adc
lahf
dec
mov
sub
cmp
sti
add
retf
(bad)
test
jge
fdivr
(bad)
adc
cli
arpl
pop
sub
(bad)
or
clc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
lods
aad
cmp
mov
test
lods
rcr
cmp
or
cli
outs
adc
ret
push
or
cmp
imul
mov
repz
adc
mov
adc
cmp
cli
imul
xchg
push
dec
stos
imul
xor
in
mov
imul
xchg
scas
cmp
(bad)
je
xchg
jmp
adc
sub
jl
cli
imul
xchg
ins
dec
and
addr16
imul
nop
(bad)
js
ror
adc
xchg
jno
cmps
addr16
mov
jmp
mov
xor
cmp
xor
cli
imul
cmp
sub
movs
adc
test
stos
and
fdiv
sbb
cmp
in
mov
imul
mov
jno
mov
repnz
icebp
(bad)
test
pop
stc
push
sbb
pop
adc
sub
or
add
jmp
push
adc
(bad)
jno
idiv
imul
mov
sub
scas
jo
mov
bound
ficom
not
test
xchg
icebp
jle
lds
pop
fldcw
repnz
lock
test
mov
jle
sbb
js
mov
jmp
mov
jmp
pop
ss
mov
into
cmp
push
push
test
xchg
repz
ficom
xor
jmp
and
mov
std
and
mov
xor
xor
mov
or
mov
repz
sub
jmp
rcr
sbb
in
jbe
xchg
inc
adc
inc
xor
sbb
cmp
(bad)
jbe
std
sbb
fsubr
mov
xor
ss
test
xor
in
mov
pusha
push
pop
test
pop
stc
dec
in
xchg
ja
fucomi
jns
(bad)
xchg
push
les
jp
adc
test
call
adc
and
adc
(bad)
test
adc
test
cmp
cmp
inc
data16
cli
imul
mov
cmp
clc
inc
cli
(bad)
test
lods
fimul
(bad)
test
cmp
adc
movs
inc
adc
test
lods
fimul
(bad)
test
cmp
adc
movs
inc
adc
test
lods
fimul
(bad)
test
cmp
adc
movs
inc
adc
test
lods
fimul
(bad)
test
cmp
adc
movs
inc
adc
test
lods
fiadd
(bad)
test
cmp
adc
movs
dec
adc
test
lods
fiadd
(bad)
test
cmp
adc
movs
dec
adc
test
lods
fiadd
(bad)
test
cmp
adc
movs
dec
adc
test
lods
fiadd
(bad)
test
cmp
adc
movs
dec
adc
test
lods
ficomp
(bad)
test
cmp
adc
movs
push
adc
test
lods
ficomp
(bad)
test
cmp
adc
movs
push
adc
test
lods
ficomp
(bad)
test
cmp
adc
movs
push
adc
test
lods
ficomp
(bad)
test
cmp
adc
movs
push
adc
test
lods
ficom
(bad)
test
cmp
adc
movs
pop
adc
test
lods
ficom
(bad)
test
cmp
adc
movs
pop
adc
test
lods
ficom
(bad)
test
cmp
adc
movs
pop
adc
test
lods
ficom
(bad)
test
cmp
adc
movs
pop
adc
test
lods
fisubr
cmp
test
cmp
adc
movs
adc
test
lods
fisubr
cmp
test
cmp
adc
movs
and
cmp
(bad)
(bad)
test
lods
fisubr
cmps
cmp
adc
movs
and
cmp
(bad)
(bad)
test
lods
fisubr
cmp
test
cmp
adc
movs
and
cmp
(bad)
(bad)
test
lods
fisub
cmp
test
cmp
adc
movs
adc
test
lods
fisub
cmp
test
cmp
adc
movs
sub
cmp
(bad)
(bad)
test
lods
fisub
cmps
cmp
adc
movs
sub
cmp
(bad)
(bad)
test
lods
fisub
cmp
test
cmp
adc
movs
sub
cmp
(bad)
(bad)
test
lods
fidivr
cmp
test
cmp
adc
movs
adc
test
lods
fidivr
cmp
test
cmp
adc
movs
xor
cmp
(bad)
(bad)
test
lods
fidivr
cmps
cmp
adc
movs
xor
cmp
(bad)
(bad)
test
lods
fidivr
cmp
test
cmp
adc
movs
xor
cmp
(bad)
(bad)
test
lods
fidiv
cmp
test
cmp
adc
movs
adc
test
lods
fidiv
cmp
test
cmp
adc
movs
cmp
cmp
(bad)
(bad)
test
lods
fidiv
cmps
cmp
adc
movs
cmp
cmp
(bad)
(bad)
test
lods
fidiv
cmp
test
cmp
adc
movs
cmp
cmp
(bad)
(bad)
test
lods
fimul
cmp
test
cmp
adc
movs
push
adc
test
lods
fimul
cmp
test
cmp
adc
movs
add
cmp
(bad)
(bad)
test
lods
fimul
cmps
cmp
adc
movs
add
cmp
(bad)
(bad)
test
lods
fimul
cmp
test
cmp
adc
movs
add
cmp
(bad)
(bad)
test
lods
fiadd
cmp
test
cmp
adc
movs
push
adc
test
lods
fiadd
cmp
test
cmp
adc
movs
or
cmp
(bad)
(bad)
test
lods
fiadd
cmps
cmp
adc
movs
or
cmp
(bad)
(bad)
test
lods
fiadd
cmp
test
cmp
adc
movs
or
cmp
(bad)
(bad)
test
lods
ficomp
cmp
test
cmp
adc
movs
push
adc
test
lods
ficomp
cmp
test
cmp
adc
movs
adc
cmp
(bad)
(bad)
test
xor
add
push
add
add
xor
add
add
adc
add
add
add
add
xor
add
add
adc
add
or
add
push
add
add
add
add
xor
add
add
adc
add
xchg
add
add
xor
add
add
hlt
add
add
add
adc
add
add
add
or
add
adc
add
adc
add
add
add
add
add
fadd
add
sbb
add
push
add
adc
add
or
add
push
push
add
aam
add
sbb
add
pop
add
adc
add
or
add
sub
add
sbb
add
adc
add
or
add
inc
pop
add
adc
add
adc
add
add
add
pop
pop
add
sbb
add
adc
add
or
add
jo
add
adc
add
adc
add
add
add
test
add
sbb
add
adc
add
or
add
pushf
pop
add
adc
add
adc
add
add
add
mov
add
sbb
add
adc
add
or
add
enter
adc
add
adc
add
add
add
fadd
add
sbb
add
adc
add
or
add
hlt
pop
add
adc
add
adc
add
add
add
or
add
sbb
add
adc
add
or
or
add
add
adc
add
add
add
xor
add
test
add
adc
add
add
or
add
add
add
or
add
add
sbb
add
push
add
adc
or
add
add
sldt
adc
sldt
fadd
add
adc
add
adc
add
lods
adc
add
xor
add
add
adc
add
add
add
xor
add
add
adc
add
rol
add
sbb
add
adc
add
cld
push
add
cwde
add
add
xor
add
add
xchg
sbb
add
add
sbb
add
adc
sbb
add
add
push
add
adc
add
or
add
sbb
add
add
sbb
add
pop
add
adc
add
sbb
add
sbb
add
mov
add
jl
add
sbb
add
sbb
add
sub
add
or
add
xor
add
add
add
xor
add
and
add
add
adc
add
sbb
add
mov
add
sbb
add
adc
add
sbb
add
int3
and
add
add
add
xor
add
add
adc
and
add
add
add
xor
add
add
adc
and
add
add
add
xor
add
add
adc
add
add
add
dec
add
add
xor
add
add
pusha
and
add
sbb
add
sbb
add
test
add
sbb
add
push
add
adc
sub
add
add
pop
add
adc
add
sbb
add
sbb
sub
add
sbb
add
and
add
push
add
add
add
and
add
adc
add
add
sub
add
adc
add
add
sub
add
adc
add
add
add
add
sub
add
sbb
add
and
add
test
add
in
add
add
xor
add
add
adc
add
sbb
add
and
add
sbb
add
add
add
adc
add
and
add
and
add
mov
add
adc
add
and
xor
add
add
xor
add
add
adc
xor
add
xor
add
add
adc
add
add
xor
add
add
adc
add
add
xor
add
add
adc
add
adc
add
sub
add
mov
add
adc
add
adc
add
add
add
enter
je
add
adc
add
sub
add
cmp
add
sbb
add
adc
add
sbb
add
push
cmp
add
adc
add
add
add
push
add
add
xor
add
add
adc
add
add
xor
add
add
adc
add
adc
add
sbb
add
lods
cmp
add
adc
add
add
add
sar
add
xor
add
add
adc
cmp
add
adc
add
add
add
in
cmp
add
adc
add
sbb
add
add
add
adc
add
adc
add
add
add
sbb
add
sbb
add
xor
add
sbb
add
dec
add
push
xor
add
add
add
add
adc
add
add
add
enter
sbb
add
adc
add
sub
add
loopne
add
and
add
sbb
add
sub
add
add
add
add
sbb
add
sub
inc
add
sub
add
adc
add
add
adc
add
add
inc
add
adc
add
dec
inc
add
inc
add
add
xor
add
add
adc
add
adc
add
add
add
pushf
inc
add
adc
add
adc
add
add
add
mov
add
adc
add
adc
add
add
add
rol
loopne
add
adc
add
xor
add
mov
add
add
xor
add
add
adc
add
add
xor
add
add
adc
add
mov
add
add
xor
add
add
adc
inc
add
or
add
or
add
add
xor
add
inc
add
sbb
add
adc
add
sbb
add
mov
add
add
xchg
inc
add
cld
add
add
xor
add
add
adc
add
add
xor
add
add
test
add
adc
add
adc
add
add
add
mov
add
add
xor
add
add
adc
dec
add
sub
add
adc
add
sbb
add
adc
add
sub
add
adc
add
sbb
add
inc
dec
add
sub
add
adc
add
sbb
add
ins
dec
add
sub
add
adc
add
sbb
add
cwde
dec
add
sub
add
adc
add
sbb
add
les
add
add
adc
add
sbb
add
lock
add
sub
add
adc
add
sbb
add
sbb
add
sub
add
adc
add
sbb
add
dec
dec
add
sub
add
adc
add
sbb
add
je
add
sub
add
adc
add
sbb
add
mov
add
add
xor
add
add
adc
dec
add
sub
add
adc
add
sbb
add
clc
dec
add
sub
add
adc
add
sbb
add
and
add
sub
add
adc
add
sbb
add
push
dec
add
and
add
adc
add
add
add
je
add
and
add
adc
add
add
add
cwde
dec
add
in
add
adc
add
xor
dec
add
fadd
add
sbb
add
add
adc
add
add
aaa
add
adc
add
add
dec
add
or
add
cmp
add
add
add
add
and
add
adc
add
add
add
pusha
dec
add
or
add
push
add
add
add
outs
nop
pusha
das
pop
loop
jecxz
je
shr
stc
pop
mov
push
mov
aas
inc
div
cmp
out
shl
outs
inc
lods
push
add
mov
mov
jns
cmp
push
pop
scas
xor
popa
test
push
call
sub
dec
fcom
test
push
push
outs
arpl
out
mov
aad
int3
mov
data16
stos
movs
inc
and
dec
push
retf
pop
psrld
sub
sub
sub
mov
inc
movs
es
std
dec
xor
push
sbb
movs
add
jecxz
xchg
dec
lods
mov
cmp
and
scas
pop
ret
mov
or
pop
rcr
mov
pop
(bad)
sahf
jnp
sahf
jbe
jg
jl
or
pusha
aad
push
dec
iret
cmp
sbb
in
pop
int3
mov
lods
and
cmps
imul
jecxz
cmp
jno
stos
jns
adc
shl
push
or
xchg
mov
push
jge
xchg
js
push
in
add
inc
stos
xor
cdq
mov
adc
pop
ret
dec
dec
int3
xchg
add
fs
pop
inc
add
pop
bound
in
out
repz
mov
retf
inc
ds
cmp
in
rol
push
mov
sub
jl
inc
les
push
mov
mov
jp
pop
bound
lock
cmc
jb
sub
fisttp
fmul
push
cmp
imul
mov
out
push
cmp
xor
ds
mov
add
stos
ins
mov
xchg
ret
popa
sub
push
(bad)
ja
cmp
cmp
test
mov
dec
lock
(bad)
call
or
stos
stos
stos
add
and
xchg
fld
popf
test
lds
mov
cmp
pop
or
pop
out
rol
fdivr
test
xor
(bad)
out
mov
stos
dec
jge
dec
imul
mov
push
jge
mov
daa
pushf
fs
js
push
call
push
(bad)
aad
cmps
adc
cs
jmp
mov
mov
push
jge
mov
add
into
clc
sub
sub
mov
stos
test
sub
ja
in
in
pusha
pop
repz
mov
out
icebp
dec
aam
(bad)
out
pushf
xchg
fstp
push
pop
test
adc
pop
adc
test
sahf
cmp
gs
test
inc
retf
fisub
xchg
fmul
xchg
cmp
call
pop
(bad)
pop
adc
outs
outs
push
adc
adc
imul
(bad)
retf
ins
jmp
ins
fadd
std
mov
sbb
js
push
lahf
call
mov
mov
sbb
xchg
lea
adc
jno
jno
fdivr
fs
mov
inc
and
mov
inc
push
xchg
push
pusha
add
loopne
add
mov
sahf
fsubrp
pop
cmp
mov
stos
push
fsubrp
cmp
xor
jnp
stos
cld
ret
push
dec
loopne
xlat
or
pop
enter
jl
pop
ret
sbb
stos
pop
mov
ins
popf
(bad)
shl
xchg
sbb
mov
mov
pop
out
jae
mov
test
faddp
retf
pushf
dec
mov
jecxz
dec
cli
push
clc
sub
xchg
xor
mov
movs
fidiv
mov
push
in
add
cmp
into
mov
mov
sbb
inc
addr16
in
in
scas
repnz
and
cmps
sub
aam
pop
push
fldpi
stc
push
mov
dec
outs
xlat
pop
or
push
scas
movs
aaa
rcr
inc
cmp
ret
dec
mov
pop
xor
daa
aaa
ror
sbb
jae
and
test
pop
pop
lock
mov
pop
ret
inc
retf
sbb
mov
pop
pushf
or
jae
push
je
push
pop
push
mov
dec
mov
push
fwait
jg
mov
nop
ret
sub
(bad)
dec
ret
jge
pop
or
mov
push
fnstenv
mov
lods
adc
es
inc
shr
jg
mov
jle
sbb
hlt
in
xchg
arpl
dec
out
ret
lds
or
(bad)
add
jae
not
inc
stos
mov
clc
jb
rol
mov
mov
imul
addr16
inc
sub
jne
push
imul
pop
xchg
cwde
aam
mov
jo
push
fimul
stc
inc
inc
pusha
mov
rcl
dec
jns
or
cmp
xchg
cmp
sub
jnp
push
call
enter
in
(bad)
out
mov
lea
inc
ja
add
mov
jp
jae
push
inc
mov
jae
imul
aad
pop
mov
mov
pop
pop
ret
jmp
xchg
jmp
mov
or
mov
jmp
push
in
movs
rol
or
jmp
pop
mov
in
stos
js
adc
sub
jns
call
jns
add
xor
pusha
xor
fs
mov
fwait
arpl
nop
fild
pop
cmovg
je
jbe
cmp
jae
and
les
in
adc
cs
scas
and
pop
and
pushf
inc
fsubp
mov
mov
test
cmp
pop
mov
mov
pop
cmps
xchg
jl
stc
ins
push
push
stos
xor
xchg
inc
out
arpl
test
lods
mov
mov
daa
out
push
mov
int3
enter
ins
mov
shl
ret
xor
jp
fucomi
out
and
in
(bad)
js
aad
xchg
leave
jns
retf
int3
xchg
xor
xchg
cwde
cld
push
and
adc
inc
call
xor
sti
retf
daa
adc
cvtps2pd
and
les
das
sbb
clc
mov
sbb
aad
inc
call
mov
mov
ss
mov
popf
and
(bad)
mov
fmul
mov
push
cli
jae
xchg
sub
lea
into
jle
in
or
mov
idiv
or
mov
js
mov
movaps
sub
xor
fisttp
adc
cmp
mov
push
pop
jnp
test
aam
add
hlt
push
cmps
push
std
fmul
mov
push
rcr
scas
imul
mov
fnstenv
mov
lods
sti
sub
xchg
(bad)
jmp
mov
cmp
mov
clc
mov
sub
lock
sub
test
push
int3
and
pop
in
cmp
and
aam
adc
test
xchg
repnz
push
ins
aad
push
adc
bound
dec
xchg
lds
dec
push
fnstsw
add
jb
jns
movs
mov
loope
rcr
or
retf
or
mul
xor
or
adc
adc
adc
or
cmp
pop
(bad)
jecxz
xchg
fisttp
hlt
xchg
jo
sub
sub
mov
std
pusha
and
pushf
fdiv
cmp
test
jnp
inc
xchg
xor
cmp
popf
inc
sar
mov
test
jmp
retf
mov
jmp
xchg
hlt
or
fcomp
mov
cmp
icebp
in
dec
fst
xor
cmp
jb
dec
add
push
enter
loope
jp
pop
xor
bound
fcmovnbe
jo
push
jbe
push
icebp
rcr
jae
inc
push
or
mov
jo
fst
push
add
in
sbb
mov
call
jo
gs
add
sahf
push
(bad)
pop
(bad)
lahf
jge
mov
js
test
out
mov
xchg
cmp
add
out
mov
std
jne
mov
sub
and
jp
pop
add
rcr
jmp
adc
imul
sub
sbb
xchg
cmps
mov
stc
cmp
dec
inc
add
test
adc
pop
in
in
mov
jb
inc
ret
ins
jbe
iret
jge
(bad)
fisttp
sbb
pop
adc
mov
out
test
retf
xchg
inc
les
inc
mov
out
jno
shl
jecxz
dec
ds
repnz
gs
pop
es
push
js
imul
arpl
daa
push
imul
call
les
jne
hlt
repnz
mov
rol
movs
cmp
rol
jne
retf
je
jb
lods
jbe
std
mov
sbb
daa
in
cmps
mov
dec
sub
xchg
or
push
fwait
or
scas
fistp
jecxz
(bad)
test
xor
ret
jge
stc
int3
jg
and
jne
adc
js
dec
xchg
sub
add
push
shr
(bad)
jne
sbb
mov
xor
jmp
imul
sbb
or
xlat
push
cmc
pop
js
dec
in
aas
dec
lahf
cmp
mov
scas
mov
jmp
out
push
daa
or
mov
jb
dec
rol
int3
fidivr
cmp
in
pop
mov
addr16
sub
mov
and
mov
retf
jl
jb
in
in
jmp
clc
imul
sbb
cmp
sbb
pop
out
out
sub
xchg
mov
aad
cmp
push
stos
loop
test
inc
xchg
test
and
leave
jecxz
sub
xchg
adc
jb
loop
mov
pusha
xchg
and
inc
jecxz
pop
imul
cmps
retf
sar
pushf
mov
dec
sub
and
call
xor
imul
out
test
jp
mov
rol
sub
add
cli
mov
inc
adc
mul
movs
sbb
mov
jg
pop
dec
pop
std
jmp
scas
or
push
ins
and
pushf
mov
stos
nop
add
retf
add
fisttp
sub
mov
in
jns
adc
mov
push
test
lods
ins
out
into
test
or
and
xchg
test
inc
lock
sub
dec
out
lods
mov
outs
repnz
inc
cli
inc
xchg
loop
iret
in
cmp
icebp
fcomip
cld
inc
movs
ret
fsincos
jns
div
bndstx
dec
and
xor
ins
inc
repnz
(bad)
(bad)
aas
cmc
cdq
std
int
nop
lods
push
push
adc
pop
sub
fmul
jp
lahf
sbb
push
cmps
addr16
fstp
mov
into
adc
inc
jle
mov
or
fisttp
int
fstp
in
bswap
sub
out
imul
cmp
mov
loop
sbb
jl
push
or
addr16
cmp
popa
neg
ss
mov
jge
(bad)
jmp
cmp
jge
(bad)
outs
xchg
jp
test
adc
adc
sbb
stc
inc
movs
jae
or
or
and
xchg
sub
mov
js
mov
rol
jne
mov
and
ret
or
ret
outs
adc
fisttp
pop
jecxz
pop
xchg
adc
adc
jmp
loopne
jl
cmp
push
in
add
sbb
mov
nop
fsubr
dec
popa
jbe
push
ins
aad
jge
test
and
test
imul
push
dec
fidiv
jno
mov
out
or
daa
ss
sbb
adc
repnz
test
pusha
pop
dec
xchg
cmp
jle
lahf
jg
cli
inc
aam
in
lods
add
shl
push
test
adc
or
jae
jnp
cwde
and
adc
test
icebp
and
xchg
in
dec
push
popf
pop
pusha
adc
jle
outs
lods
sbb
sbb
sbb
hlt
popa
sbb
fucom
adc
xchg
outs
adc
lods
sti
dec
mov
inc
jl
lahf
sub
sub
es
mov
in
cli
add
cli
sbb
pop
mov
dec
loopne
mov
push
jl
repz
sub
test
xchg
stc
sub
outs
sar
lods
xchg
and
cmp
fwait
rcl
test
push
and
push
mov
xchg
movs
out
sbb
dec
ficom
loope
std
dec
fld
jmp
ret
addr16
inc
mov
push
sub
outs
inc
xor
mov
and
sbb
call
iret
ret
cmp
pop
xor
and
lods
dec
pop
in
mov
xor
dec
shl
xor
push
sub
push
popf
push
push
mov
jmp
and
or
sar
repz
pusha
in
std
xchg
push
lock
xor
sbb
rcr
fcmovbe
push
popa
stos
inc
sbb
lea
cmp
mov
dec
imul
retf
icebp
clc
pusha
and
push
mov
enter
stc
(bad)
into
fnstsw
pop
mov
mov
pop
iret
adc
mov
push
mov
cmp
adc
mov
lock
xor
and
push
in
mov
in
xchg
pushf
out
xchg
sub
mov
mov
sar
ja
addr16
mov
jle
movs
push
adc
dec
mov
or
sar
bound
fsubr
mov
cs
pop
adc
jge
leave
add
in
outs
push
in
xor
sub
sbb
std
or
out
fstp
nop
or
adc
dec
mov
sbb
inc
popa
or
fiadd
cli
push
sahf
xchg
xor
sub
jbe
add
in
cmps
jo
stos
xchg
mov
fadd
dec
push
adc
fld
out
cmp
xor
ja
push
(bad)
mov
sub
add
cmps
pop
in
xchg
dec
push
jns
or
out
sbb
cmp
leave
pop
out
mov
cmp
mov
xor
mov
cmp
int
xchg
ret
pop
into
inc
add
adc
imul
cmp
iret
jne
dec
in
ret
xlat
jle
jno
dec
stc
dec
cmp
and
xchg
daa
sar
jno
call
mov
xchg
mov
les
(bad)
fmulp
jns
(bad)
mov
fbstp
dec
clts
(bad)
xor
stos
pusha
scas
jmp
push
xchg
dec
sti
sti
or
fnstenv
leave
mov
mov
jl
push
fist
addr16
ret
xor
add
iret
dec
xor
aas
sub
mov
ja
call
xor
dec
and
(bad)
jmp
mov
(bad)
rol
outs
in
mov
sbb
int3
mov
ins
mov
cvtdq2ps
scas
pop
arpl
dec
push
pop
pop
jge
pushf
sar
popf
add
repnz
jno
and
sti
dec
int
and
or
pusha
sbb
iret
lock
lock
loop
push
dec
pop
xor
lods
jmp
in
mov
mov
and
shl
and
out
and
mov
adc
jnp
mov
daa
push
push
ror
sub
in
pop
scas
jae
jle
int3
dec
adc
out
imul
fstp
or
mov
adc
ja
bound
mov
pop
std
mov
inc
mov
not
and
or
jmp
add
sbb
and
dec
fcmovb
clc
in
test
mov
ds
push
push
shl
test
mov
pop
mov
dec
ret
mov
out
inc
or
push
dec
in
xchg
je
scas
(bad)
push
add
pop
test
or
mov
cmc
ret
fwait
or
nop
sahf
xchg
mov
push
jmp
adc
sbb
adc
push
mov
(bad)
mov
jp
xchg
jno
xor
(bad)
aaa
repz
call
dec
test
scas
mov
out
jns
jge
dec
adc
in
xchg
ins
xor
push
std
cmp
push
or
jg
mul
mov
adc
(bad)
out
(bad)
rcr
push
sub
mov
xor
loopne
inc
(bad)
outs
adc
enter
mov
cmp
and
add
loop
inc
fstp
and
dec
cmps
in
lahf
dec
or
fdivr
adc
mov
in
mov
push
cs
sub
mov
pop
fadd
or
cmp
jbe
add
(bad)
scas
outs
sub
and
sbb
xor
cld
xor
ja
cmp
mov
jns
adc
dec
enter
sar
mov
clc
(bad)
stos
and
push
add
unpcklps
mov
mov
pop
pop
neg
jae
sub
pushf
pop
lea
mov
sub
int3
or
ror
dec
xchg
fsubr
movs
movs
repnz
sub
mov
xchg
ins
jnp
pop
adc
dec
sub
push
push
ins
pop
retf
aas
xchg
sub
xchg
in
mov
mov
pop
(bad)
imul
mov
mov
xor
inc
or
test
cs
jae
jnp
outs
xchg
xchg
lock
repz
or
or
sti
loope
mov
mov
jge
pop
and
xor
cmps
lds
or
stos
mov
in
xor
(bad)
shl
mov
iret
hlt
push
ja
mov
sbb
in
fnstcw
xor
lds
clc
jg
jge
dec
fild
jns
push
xlat
ror
loopne
loopne
leave
xchg
lds
test
std
jns
aas
faddp
push
sti
rol
mov
in
jmp
adc
add
aad
dec
bound
adc
cmp
mov
xor
mov
sub
test
cmp
dec
push
add
aaa
jae
imul
push
fbstp
sbb
fimul
scas
pusha
mov
cmp
cmp
repz
and
push
cmp
jo
mov
pop
cmp
imul
mov
push
cmp
adc
rol
shr
mov
imul
in
imul
in
jne
lahf
mov
pop
jge
xor
mov
addr16
cdq
shr
int
sub
inc
inc
push
fnstenv
jbe
mov
sub
sub
stc
cmp
fadd
pusha
xchg
outs
(bad)
retf
adc
sub
popa
mov
push
(bad)
cmp
mov
or
loope
xchg
loopne
stos
mov
fs
(bad)
sbb
out
mov
dec
jl
or
repnz
das
ja
or
pusha
inc
lds
push
bnd
mov
imul
dec
jno
ins
pop
jns
mov
add
pop
pop
mov
outs
jecxz
mov
jge
daa
mov
icebp
int
ret
ins
adc
retf
jecxz
addr16
out
mov
pop
xchg
add
push
sbb
and
stos
dec
jmp
jp
cld
gs
jl
icebp
push
pop
repnz
test
inc
(bad)
xchg
adc
sti
inc
sbb
mov
xor
add
js
mov
xlat
les
std
cmp
mov
adc
clc
mov
pop
cmps
or
into
jmp
pop
fiadd
jg
sbb
add
aad
lahf
or
inc
mov
aam
or
mov
sub
add
ins
fmul
pop
inc
popf
(bad)
fisubr
(bad)
into
sti
pop
add
dec
cmp
push
ja
xchg
leave
mov
sti
std
xor
cs
imul
sub
mov
(bad)
mov
sahf
jno
fild
or
stc
outs
xchg
fwait
dec
repz
push
or
xor
sbb
and
cwde
add
lds
jmp
rcl
or
sbb
jmp
out
clc
lock
mov
adc
(bad)
dec
mov
cmp
call
push
push
movs
xor
mov
imul
xchg
add
push
xchg
cld
lods
inc
mov
mov
xchg
int3
movs
shr
jns
jne
nop
mov
in
push
adc
add
xchg
fxch
push
push
loope
(bad)
repnz
push
sbb
ss
sbb
mov
adc
cmp
mul
dec
test
cmp
bound
jo
(bad)
lahf
cld
sti
jns
stos
outs
arpl
jmp
add
mov
gs
pushf
jmp
ins
jecxz
popf
fimul
mov
loope
movs
add
ins
stos
mov
outs
imul
xchg
mov
mov
fwait
and
mov
xor
xlat
jno
add
push
in
in
cmp
cmp
jnp
inc
lock
(bad)
(bad)
push
sbb
pop
repnz
(bad)
pop
rol
loopne
dec
and
inc
imul
push
scas
mov
in
test
sbb
cmp
pop
adc
mov
cmp
lds
aas
and
mov
or
pushf
adc
add
sub
lahf
sti
(bad)
pop
pop
adc
(bad)
int3
shl
out
push
jmp
mov
sub
or
popa
push
xchg
mul
imul
es
cwde
adc
fiadd
and
mov
cmp
(bad)
jl
sub
adc
mov
inc
in
jb
ja
mov
jne
add
movs
les
in
je
push
lods
jae
and
rol
sbb
cmp
in
bound
or
push
mov
(bad)
adc
call
adc
mov
das
jne
jg
aad
fiadd
xchg
sub
outs
mov
xchg
add
repnz
mov
pop
cmps
fisub
add
push
push
mov
or
dec
sub
retf
or
push
fldcw
push
mov
lahf
xor
jnp
add
sti
add
int
sub
add
inc
push
add
aad
xchg
mov
cmp
(bad)
adc
push
mov
sbb
sahf
or
jae
cwde
add
sti
xor
and
pop
jb
sbb
sub
inc
adc
mov
jbe
xchg
movs
sbb
push
sub
pop
ror
call
test
pop
jl
int
jmp
xor
sbb
add
stos
push
pop
aad
jmp
fimul
xchg
loope
jmp
sub
cmp
jns
imul
dec
dec
push
loopne
lds
or
mov
ror
xchg
test
clc
fwait
push
push
inc
xor
test
outs
adc
xchg
call
dec
pop
lds
stos
pop
clc
xor
and
lds
pop
dec
mov
dec
push
lods
inc
in
jmp
out
out
(bad)
sub
cmp
dec
outs
test
into
mov
sub
and
cmp
pop
push
sub
pop
inc
ja
xchg
mov
add
stc
lods
mov
and
add
adc
scas
xor
pop
bound
mov
(bad)
movs
mov
loop
jg
add
(bad)
push
fs
push
data16
jae
ss
fs
(bad)
dec
scas
cld
adc
cwde
test
sub
push
dec
pushf
dec
retf
movs
dec
lahf
lock
inc
cli
jge
outs
or
mov
and
add
enter
mov
(bad)
adc
jmp
mov
xchg
movs
or
mov
push
push
push
in
iret
hlt
clc
mov
fisttp
gs
cmps
div
mov
in
hlt
mov
mov
mov
dec
push
pop
sub
sub
push
ror
into
dec
rol
jo
out
and
es
dec
xchg
lods
sub
dec
mov
ror
aaa
xor
or
jne
in
mov
push
cdq
add
or
cmp
and
pop
add
cmp
push
or
int3
lock
retf
inc
js
stos
lods
inc
je
int
push
(bad)
outs
inc
mov
pop
enter
imul
jmp
out
xchg
nop
cdq
fdiv
ins
or
js
call
mov
cwde
aam
popa
jne
inc
xchg
jnp
aas
jbe
int3
addr16
aaa
mov
call
icebp
mov
sar
and
popf
pop
(bad)
out
cmp
retf
adc
aad
jns
adc
lods
push
lds
arpl
push
mov
push
sbb
add
packsswb
loopne
jae
fwait
mov
(bad)
mov
test
add
adc
sbb
push
xchg
jle
lods
jmp
mov
scas
and
xor
ss
cli
js
adc
inc
jp
or
enter
nop
fcom
test
sbb
add
adc
mov
fdiv
xor
fstp
inc
(bad)
mov
movs
sub
dec
sbb
lds
dec
mov
je
adc
mov
ret
jmp
and
and
lods
jno
clc
add
loope
in
or
sbb
sar
stos
repz
sub
jae
mov
imul
inc
aas
pop
mov
pop
addr16
pop
sbb
mov
out
mov
xchg
mov
ret
push
jbe
loop
jb
adc
adc
xchg
xchg
enter
pop
pop
shl
retf
mov
fistp
lahf
pop
mov
xchg
jge
mov
mov
shr
out
dec
fild
imul
jae
popa
sbb
jb
jmp
test
or
sbb
out
push
test
test
(bad)
out
mov
xchg
fs
iret
cwde
xor
aam
js
iret
scas
dec
sub
shl
test
fwait
cmps
dec
sbb
dec
jg
popf
repnz
sar
inc
lea
sbb
lock
mov
imul
xor
inc
adc
rcr
pop
rcl
cwde
or
aad
and
in
aam
fwait
sbb
cmc
or
sub
fwait
xlat
or
mov
jo
test
or
pop
pop
jno
test
retf
aad
cmp
retf
fcmove
cs
fdivp
(bad)
repz
stos
push
dec
xor
xor
adc
cmp
xchg
sahf
xor
das
rcl
sbb
xchg
cmc
jecxz
(bad)
fist
pop
and
fimul
(bad)
(bad)
push
adc
mov
pop
sbb
add
repnz
retf
jmp
loopne
mul
mov
ins
or
jg
mov
dec
cmp
push
mov
in
inc
in
dec
mov
jge
push
jo
(bad)
out
inc
and
outs
daa
mov
mov
mov
mov
sub
and
inc
clc
push
add
cmp
push
gs
adc
lods
lock
mov
mov
fs
and
jbe
mov
rcl
ret
test
jl
jp
and
call
or
push
cdq
fidivr
dec
call
xor
popa
jb
sub
in
xchg
stos
dec
adc
ror
addr16
mov
js
ret
pop
clc
cdq
push
fistp
mov
dec
sbb
pop
push
stc
mov
js
loope
sbb
lea
xchg
lods
test
aaa
(bad)
mov
adc
or
sbb
push
std
pop
xchg
xor
fsubr
push
sbb
daa
inc
push
jecxz
out
loopne
jb
outs
dec
fcomp
sti
hlt
jnp
lea
fistp
outs
add
repz
xor
xor
in
les
mov
inc
add
loope
aam
xor
sub
or
pop
fsubr
cli
or
scas
rcl
outs
pop
stos
cmps
test
pop
jnp
es
sbb
xchg
ins
mov
in
dec
hlt
aas
gs
adc
scas
add
inc
stc
sbb
jmp
idiv
mov
dec
and
ja
adc
cli
scas
(bad)
loope
aam
in
jp
push
icebp
xor
imul
push
imul
pop
scas
pop
das
mov
jnp
cdq
aad
jmp
or
hlt
xor
sar
inc
mov
retf
add
mov
push
or
push
(bad)
aad
jmp
sub
loopne
ficom
pop
inc
loope
mov
iret
pusha
ret
jg
cmp
loop
dec
bound
lods
and
invd
and
jne
dec
das
sbb
fld
movs
xor
mov
(bad)
rcl
push
mov
shl
vunpcklps
test
cmps
or
jb
out
aam
ror
cmc
(bad)
outs
jne
popa
(bad)
es
(bad)
jbe
pop
xor
inc
or
inc
stc
aam
mov
and
push
push
mov
scas
dec
stos
(bad)
pop
out
je
xchg
cmp
cmp
out
(bad)
pusha
add
cmp
sub
dec
cli
cdq
pop
loopne
jmp
repnz
mov
pop
lods
mov
daa
test
mov
push
mov
mov
mov
sbb
mov
xchg
push
mov
jge
cmc
shl
push
sub
jne
adc
jne
cmp
sbb
cmps
test
add
add
xchg
pop
add
mov
xor
adc
push
jmp
cmps
sub
test
loopne
inc
push
adc
aaa
sahf
push
outs
pop
clc
addr16
cmp
call
popf
xchg
cmps
jns
jmp
mov
pop
cmovg
ins
int
div
ror
movlhps
push
int
test
mov
retf
bound
(bad)
dec
mov
mov
sbb
int3
push
xor
in
iret
sahf
lea
fsubr
cmps
data16
imul
fst
ins
in
sub
and
jp
pop
xchg
jecxz
cmp
aad
mov
jp
push
(bad)
mov
add
or
mov
pop
sbb
mov
inc
and
bound
ficom
scas
jmp
push
add
adc
mov
add
pop
push
fyl2xp1
retf
inc
add
lock
xor
clc
mov
das
adc
inc
aaa
xchg
or
fcmovu
es
mov
or
aam
mov
jae
pop
cmp
sti
push
rol
loope
or
adc
sbb
sbb
retf
hlt
nop
retf
and
les
icebp
fisub
inc
xchg
mov
pop
sbb
imul
push
mov
cli
lahf
out
fsave
push
jbe
and
sub
mov
dec
jo
or
push
sbb
ret
pop
out
fs
and
stc
push
mov
clc
push
sbb
stos
dec
jge
aam
loopne
add
push
pop
xchg
fistp
or
dec
pop
(bad)
pop
ja
out
sahf
dec
xchg
cmp
jmp
sbb
and
push
xchg
xchg
pop
jae
into
fild
pop
mov
leave
outs
push
pop
nop
or
hlt
addr16
enter
ror
pop
xchg
sub
mov
or
sub
add
cmps
cmps
cmp
inc
js
movs
(bad)
shl
mov
stc
add
cmp
in
outs
dec
mov
push
push
xchg
adc
push
inc
and
and
push
fimul
push
out
push
movs
outs
mov
mov
xchg
xor
(bad)
pusha
inc
add
leave
xor
fwait
stos
lds
std
adc
pushf
lds
mov
ret
fldenv
or
loope
lea
or
or
das
cmps
cmp
add
imul
fsubrp
test
icebp
mov
mov
sub
into
xchg
icebp
and
in
mov
ror
xchg
xlat
movs
fdivr
xor
ja
sar
xor
add
rcl
gs
enter
push
xchg
jmp
mov
pop
add
dec
dec
test
int
rcr
mov
jle
loop
test
pop
add
push
jmp
loope
aaa
out
push
mov
sbb
mov
aas
ret
int
mov
mov
call
test
adc
dec
inc
in
push
aad
adc
ds
mov
lds
xor
or
cli
(bad)
fdivr
sti
loopne
(bad)
loope
rcr
jecxz
jp
shl
adc
or
mov
loop
lea
inc
mov
adc
ror
mov
add
adc
ds
xor
addr16
fucomp
add
add
jmp
fist
xchg
fst
es
add
in
pop
call
adc
loop
push
(bad)
sti
arpl
sbb
mov
sbb
mov
std
mov
data16
inc
imul
sti
scas
lahf
in
sbb
pop
and
repz
mov
jl
ins
outs
pop
and
movs
or
fld
push
sti
dec
or
mov
xor
sub
mov
stc
(bad)
out
enter
sub
xchg
movs
imul
(bad)
xchg
cs
icebp
cmp
jns
jp
push
or
mov
push
dec
in
data16
fld
sub
fist
fwait
sub
mov
ss
cmps
pop
ret
xor
fwait
ds
loope
fstp
mov
scas
add
retf
icebp
cld
fld
mov
xchg
gs
retf
shl
loope
adc
sub
adc
jb
sub
dec
enter
xchg
jo
or
leave
lea
sub
arpl
fstp
rcl
mov
cmc
ror
jg
xor
xlat
pop
sub
js
test
push
rol
in
dec
mov
loope
imul
xchg
xor
lahf
mov
popf
cmp
mov
test
dec
arpl
mov
clc
(bad)
jp
cwde
dec
ja
jbe
cli
cmps
cmp
hlt
loop
dec
or
sbb
pop
push
arpl
je
push
mov
push
sbb
aad
stos
mov
inc
pop
sbb
lock
test
pushf
nop
mov
cmp
adc
xchg
sbb
dec
add
dec
adc
inc
lods
cmp
sbb
daa
cmp
xchg
push
push
mov
pop
xchg
mov
adc
add
mov
into
in
dec
xor
rol
xchg
jg
jae
ins
and
cli
mov
and
push
vshufps
fbstp
pushf
jmp
jbe
nop
add
dec
mov
int
cld
inc
mov
jge
test
dec
jmp
xor
mov
popf
cmp
sub
push
call
jl
or
pop
jl
popf
sub
gs
sub
sbb
jmp
push
xor
aad
hlt
addr16
xor
repz
cld
cmp
or
aas
cdq
shl
and
neg
ds
call
push
xor
clc
mov
jb
mov
not
xchg
jmp
pop
inc
mov
mov
adc
mov
push
xor
pusha
xlat
fisub
int3
or
rcr
add
inc
xor
adc
mov
pop
clc
fnstsw
retf
sbb
imul
gs
outs
(bad)
xchg
cwde
push
fisub
iret
dec
lds
call
(bad)
leave
mov
dec
inc
lahf
retf
pusha
mov
and
push
jae
inc
mov
aad
ss
ins
mov
pop
jns
fcom
outs
pop
test
pop
js
add
fs
and
(bad)
sbb
dec
popf
int3
fs
dec
adc
dec
xchg
cmps
push
mov
ins
cwde
and
fist
call
jb
push
rol
cmp
popf
mov
test
xor
ins
mov
dec
dec
push
push
cmp
outs
ror
ins
and
pop
movs
push
inc
fisubr
xor
jg
test
jg
push
lods
sbb
jns
fwait
mov
jecxz
fsubr
loopne
and
jo
pop
fisttp
imul
sbb
or
pop
inc
stos
inc
ror
pop
rcl
push
or
cli
cli
aaa
in
sar
sti
retf
cmps
ins
daa
sbb
xor
repnz
aam
movs
js
shr
mov
mov
mov
repnz
mov
scas
jbe
jmp
pop
and
xchg
jno
jo
dec
dec
dec
repnz
data16
xor
xlat
ret
push
iret
cmp
pop
and
das
inc
imul
sub
cmp
mov
das
sbb
aaa
int3
fdiv
outs
pushf
push
jle
and
xchg
jo
scas
(bad)
(bad)
jg
stos
jne
or
pusha
or
ret
or
(bad)
(bad)
and
test
sbb
xor
call
out
stos
push
mov
cs
push
add
ret
add
pop
lea
dec
push
dec
mov
or
push
shl
mov
leave
js
hlt
fnstenv
mov
jl
adc
pop
sub
xor
inc
cwde
daa
frstor
pop
xor
movs
mov
mov
outs
cmp
add
or
mov
(bad)
pop
mov
jae
or
imul
in
popf
pop
mov
lds
mov
(bad)
push
xor
hlt
mov
or
movs
sti
sub
sbb
(bad)
iret
xor
and
sbb
xor
push
mov
pop
push
outs
lahf
xlat
pusha
mov
pop
xor
push
(bad)
data16
fnstsw
gs
fwait
mov
loope
test
lods
sbb
test
test
mov
rcr
jbe
push
and
ret
fsub
push
push
mov
mov
stos
in
sahf
je
and
loopne
imul
mov
jp
or
mul
(bad)
arpl
xchg
shl
fadd
xchg
push
xchg
xchg
cli
ret
dec
dec
ins
ret
xor
mov
mov
daa
mov
das
pop
ins
mov
mov
mov
hlt
cmps
(bad)
repz
sub
jae
mov
ss
outs
mov
scas
mov
cmp
test
inc
test
jnp
xchg
jb
mov
sub
pusha
inc
pushf
lock
jmp
fisub
popf
call
div
movs
mov
int
xchg
push
pop
fisttp
daa
pop
jle
sbb
pop
xchg
stc
imul
adc
arpl
cld
sbb
bound
inc
mov
mov
xor
lods
sub
mov
fld
inc
or
cmp
(bad)
fsub
mov
pop
cli
push
lea
shr
push
inc
ret
and
cmp
dec
sub
pushf
pop
enter
and
inc
adc
dec
push
out
ficomp
shr
jbe
pop
ds
test
in
ja
cmc
or
icebp
test
cwde
inc
jle
jmp
jae
(bad)
pop
xor
mov
mov
push
call
ret
fild
mov
movs
ret
or
jno
jg
pop
sub
jmp
inc
or
retf
mov
lods
fisub
fs
fist
(bad)
cmp
xor
cmp
sub
and
ss
int
mov
int
pop
gs
dec
out
(bad)
xor
test
les
adc
push
fistp
in
dec
or
or
jl
dec
add
(bad)
jg
pop
(bad)
sub
test
pop
fstp
cwde
pop
jecxz
(bad)
push
add
clc
pop
js
dec
mov
push
mov
lods
scas
addr16
jg
xlat
inc
pop
or
sub
xchg
jle
imul
pop
inc
dec
inc
popa
sahf
cmp
loope
sub
sub
aam
aaa
dec
mov
call
cmc
fisubr
pushf
dec
cmp
fisub
dec
jb
mov
sbb
mov
(bad)
dec
sub
inc
dec
or
cmp
je
cmp
sbb
and
xchg
dec
dec
cmp
mov
sar
push
fist
addr16
(bad)
ret
push
jns
fdivr
jmp
lds
(bad)
jmp
imul
push
test
test
sbb
sti
mov
xchg
cdq
add
es
(bad)
push
inc
stc
push
jno
mov
pop
pop
ins
xor
dec
mov
stc
lock
xor
cmc
pusha
lods
data16
jmp
icebp
jo
es
or
ins
pop
retf
js
in
in
mov
lea
jge
sti
pop
push
daa
sar
iret
sbb
push
add
and
mov
jp
push
aad
push
aaa
push
fsubr
test
jp
xchg
hlt
int
dec
fnstsw
fadd
push
cwde
retf
sub
sub
enter
stc
sbb
jne
lahf
sub
push
xchg
pop
arpl
aas
ficom
mov
pop
lods
mov
mov
push
jp
arpl
mov
cwde
dec
mov
and
outs
into
stc
fld
push
mov
jne
push
ret
fdivr
jge
sub
inc
or
mov
push
hlt
fimul
cmps
mov
aam
or
push
mov
mov
fdivrp
iret
std
out
lock
aam
sbb
lods
or
bound
jle
addr16
lea
icebp
adc
mov
xor
sbb
je
cmps
xchg
adc
leave
cmp
sbb
jo
stos
aas
inc
(bad)
ja
shl
mov
or
mov
pop
inc
cmp
popf
xor
fld
add
dec
ret
sbb
(bad)
mov
mov
push
sub
fsubrp
ficom
push
in
or
loopne
int
mov
mov
stos
imul
inc
mov
out
jb
xor
stc
aam
pop
add
pop
sbb
xor
daa
fld
out
cli
shl
pop
pop
dec
imul
(bad)
test
mov
push
shl
scas
jns
mov
pushf
sub
ret
outs
pop
and
test
fiadd
stc
imul
test
jecxz
xor
stc
stos
push
xor
out
hlt
popf
cmp
sahf
or
sbb
push
xchg
fs
(bad)
sub
or
int3
xlat
or
jns
je
dec
jmp
ss
test
sbb
retf
aas
out
int3
fldz
cld
hlt
scas
and
inc
mov
push
stos
mov
ss
call
pop
jne
sbb
xchg
mov
gs
iret
pop
jne
xchg
mov
xlat
and
mov
or
xchg
nop
cmp
mov
call
xor
mov
cmps
rcl
fwait
popa
neg
cmps
sub
xchg
push
popa
sub
mov
cmp
cmps
fs
ret
stos
jnp
mov
dec
pop
(bad)
adc
sub
sub
jbe
repz
lock
aaa
xchg
fnstenv
fsub
std
push
shl
mov
out
repz
jle
test
repnz
push
add
aaa
and
out
daa
push
jbe
(bad)
xchg
scas
sar
pop
jecxz
push
cmp
jl
jge
push
xchg
sbb
xchg
ficomp
xor
cmp
lds
push
xchg
push
imul
cdq
std
out
or
out
mov
mov
or
cdq
pop
mov
dec
sbb
xchg
ss
dec
out
sbb
outs
or
push
imul
sub
jno
cli
mov
aaa
fwait
aaa
jmp
sbb
inc
fisttp
or
mov
cmp
fs
(bad)
dec
aaa
cmp
jbe
add
adc
xchg
lock
std
add
mov
inc
push
dec
shr
int3
jmp
leave
popf
ret
and
out
pop
dec
aam
and
imul
pusha
lahf
addr16
sub
ins
sub
inc
mov
xchg
xchg
jle
jmp
fwait
out
jnp
add
mov
or
and
mov
aaa
mov
retf
mov
cwde
cmps
in
in
mov
loop
and
sahf
add
dec
pop
nop
add
add
add
add
(bad)
inc
add
add
add
add
or
add
push
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
adc
daa
(bad)
lock
daa
(bad)
lock
daa
in
dec
es
lock
daa
in
dec
es
nop
dec
es
dec
daa
pop
xchg
dec
xlat
lock
daa
pop
xchg
dec
es
dec
daa
pop
xchg
dec
es
dec
daa
in
dec
es
lock
daa
(bad)
lock
daa
call
es
lock
daa
bound
dec
daa
bound
dec
daa
push
imul
push
inc
add
dec
add
pop
loopne
add
or
push
or
sbb
add
xchg
add
add
add
aas
sbb
add
adc
add
xor
add
add
add
add
add
add
push
add
add
add
add
loopne
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
and
add
cmp
add
add
add
loopne
add
add
add
int3
sldt
inc
mov
add
add
mov
add
inc
xor
add
add
cs
js
add
add
add
add
add
add
add
add
add
add
pusha
cs
popa
je
add
adc
add
xor
add
push
add
inc
add
inc
cs
je
add
add
push
add
add
add
add
add
add
cs
jb
add
add
add
add
rol
add
add
add
add
add
jb
ins
outs
arpl
add
sldt
add
add
add
add
add
add
inc
add
inc
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
call
add
lea
push
push
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
lea
push
push
push
push
push
call
push
push
call
or
add
test
cmovs
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
shr
mov
push
mov
cmovne
test
je
push
push
lea
xor
lea
push
push
push
push
push
call
mov
push
or
push
call
or
add
test
cmovs
test
js
cmp
ja
jne
xor
mov
mov
pop
pop
pop
pop
ret
xor
mov
mov
pop
mov
pop
pop
pop
ret
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
mov
push
push
push
push
call
push
push
push
call
push
push
push
call
mov
add
lea
nop
mov
add
test
jne
sub
sar
lea
test
jle
data16
cmp
je
cmp
jae
xor
mov
dec
test
jg
push
push
push
push
call
mov
test
je
nop
nop
push
push
mov
xor
call
test
jne
mov
jmp
push
push
push
push
push
call
add
lea
push
push
call
mov
cmp
je
lea
lea
mov
add
test
jne
sub
sar
push
cmovne
call
test
jne
xor
xor
call
mov
test
jne
mov
xor
jmp
push
push
call
mov
cmp
je
lea
mov
push
push
call
test
je
nop
lea
push
push
call
lea
push
push
call
add
test
jne
lea
push
push
call
test
jne
lea
push
call
push
mov
call
test
je
mov
call
mov
test
je
push
push
lea
push
push
call
lea
push
push
call
add
lea
push
push
push
push
push
push
call
push
push
call
add
push
call
jmp
push
call
mov
xor
pop
pop
pop
xor
call
mov
pop
ret
call
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
push
push
push
mov
xor
push
push
mov
call
add
lea
push
push
call
mov
cmp
je
lea
mov
push
test
mov
cmove
push
push
push
push
call
mov
add
lea
mov
add
test
jne
sub
sar
lea
push
push
call
mov
test
je
push
lea
push
push
call
add
test
je
push
call
xor
jmp
push
push
call
add
test
je
push
push
push
call
add
test
je
push
call
xor
cmp
je
push
push
push
call
test
je
cmp
je
push
call
test
mov
cmovne
push
push
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
bnd
bnd
bnd
push
mov
push
call
push
call
push
call
push
call
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
sub
push
call
test
je
mov
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
mov
push
call
mov
pop
ret
push
push
call
call
push
call
call
mov
call
push
mov
call
add
pop
test
je
fnclex
call
push
call
call
push
call
pop
pop
test
jne
call
call
test
je
push
call
pop
call
call
call
call
push
call
pop
call
test
je
call
call
xor
ret
push
call
int3
call
xor
ret
call
call
push
call
pop
ret
push
push
call
push
call
pop
test
jne
push
call
xor
mov
and
call
mov
mov
xor
inc
cmp
je
test
jne
mov
push
push
call
pop
pop
test
je
mov
mov
jmp
push
push
call
pop
pop
mov
jmp
mov
mov
push
call
pop
call
mov
xor
cmp
je
push
call
pop
test
je
push
push
push
mov
mov
call
call
call
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
mov
call
mov
call
push
push
push
call
add
mov
call
test
jne
push
call
test
jne
call
push
push
call
pop
pop
mov
mov
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
test
jne
push
call
cmp
jne
call
mov
mov
call
ret
call
jmp
push
mov
mov
and
push
pop
sub
mov
ror
xor
pop
ret
push
mov
mov
push
mov
add
movzx
lea
add
movzx
imul
add
cmp
je
mov
cmp
jb
mov
add
cmp
jb
add
cmp
jne
xor
pop
pop
ret
mov
jmp
call
test
jne
xor
ret
mov
push
mov
mov
jmp
cmp
je
xor
mov
lock
test
jne
xor
pop
ret
mov
pop
ret
push
mov
cmp
jne
mov
call
call
test
jne
xor
pop
ret
call
test
jne
push
call
pop
jmp
mov
pop
ret
push
mov
sub
cmp
je
mov
jmp
push
mov
test
je
cmp
jne
call
test
je
test
jne
push
call
pop
test
jne
push
call
pop
test
je
xor
jmp
mov
lea
push
and
mov
push
pop
sub
or
ror
xor
mov
mov
mov
movs
movs
movs
mov
mov
mov
lea
mov
movs
movs
movs
pop
mov
mov
pop
mov
pop
ret
push
call
int3
push
push
call
and
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
push
push
call
pop
pop
test
je
cmp
jl
mov
mov
jmp
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
call
ret
push
mov
call
test
je
cmp
jne
xor
mov
xchg
pop
ret
push
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
mov
pop
ret
push
mov
mov
mov
xor
and
push
ror
cmp
jne
call
jmp
push
call
pop
neg
pop
sbb
not
and
pop
ret
push
mov
push
call
neg
pop
sbb
neg
dec
pop
ret
push
mov
sub
and
lea
and
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
lea
xor
xor
xor
mov
pop
ret
mov
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
call
mov
cmp
jne
mov
jmp
test
jne
or
shl
or
mov
not
mov
pop
pop
ret
xor
inc
ret
mov
ret
xor
ret
push
call
ret
mov
ret
push
push
push
call
add
test
jne
ret
push
call
int3
ret
mov
ret
call
mov
or
mov
call
mov
or
mov
ret
xor
cmp
sete
ret
mov
ret
mov
ret
push
mov
sub
push
push
call
test
je
mov
int
push
call
mov
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
push
mov
lea
push
push
call
mov
add
mov
mov
mov
call
push
lea
neg
lea
mov
lea
sbb
mov
inc
call
lea
push
call
test
jne
test
jne
push
call
pop
pop
mov
pop
ret
push
call
mov
test
jne
xor
ret
mov
cmp
jne
mov
add
cmp
jne
mov
cmp
jne
cmp
jbe
cmp
setne
ret
push
call
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
and
ret
push
push
mov
mov
cmp
jae
push
mov
test
je
mov
call
call
add
cmp
jb
pop
pop
pop
ret
push
push
mov
mov
cmp
jae
push
mov
test
je
mov
call
call
add
cmp
jb
pop
pop
pop
ret
jmp
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
bnd
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
bnd
push
mov
and
sub
push
xor
inc
or
push
call
test
je
and
xor
or
xor
push
push
mov
lea
push
cpuid
mov
pop
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
xor
inc
push
cpuid
mov
pop
lea
mov
mov
or
or
mov
mov
mov
jne
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
or
mov
jmp
mov
cmp
mov
mov
jl
push
pop
xor
push
cpuid
mov
pop
lea
mov
mov
mov
mov
mov
mov
test
je
or
mov
jmp
mov
pop
pop
test
je
or
mov
test
je
test
je
xor
xgetbv
mov
mov
mov
mov
and
xor
cmp
jne
test
jne
mov
or
mov
mov
test
je
or
mov
mov
xor
pop
mov
pop
ret
xor
cmp
setne
ret
push
mov
push
push
and
add
push
mov
mov
mov
sub
push
push
mov
xor
movzx
mov
cmp
jne
mov
jmp
mov
cmp
jle
mov
and
push
pop
cmp
ja
movups
jmp
push
pxor
movzx
pop
movzx
psrldq
pinsrw
xor
cmp
je
add
movzx
sub
jne
mov
mov
mov
and
cmp
ja
pcmpistri
jbe
add
mov
jmp
jae
pcmpistri
lea
mov
mov
mov
mov
and
cmp
ja
mov
and
cmp
ja
movups
pcmpistri
jno
js
mov
add
add
jmp
movzx
xor
cmp
je
cmp
je
add
jmp
movzx
and
cmp
je
cmp
jne
add
add
jmp
add
jmp
mov
jmp
jne
movzx
pxor
mov
push
pop
movd
pshuflw
pshufd
mov
and
cmp
ja
movups
movaps
pcmpeqw
pcmpeqw
por
pmovmskb
test
jne
add
jmp
bsf
mov
shr
lea
movzx
xor
cmp
je
movzx
cmp
jne
mov
mov
and
cmp
ja
mov
and
cmp
ja
movups
movups
movaps
pcmpeqw
pcmpeqw
pcmpeqw
por
pmovmskb
test
jne
add
add
jmp
bsf
mov
and
add
add
movzx
and
cmp
je
cmp
jne
add
add
jmp
mov
add
jmp
mov
jmp
mov
movzx
test
je
and
mov
mov
sub
mov
push
pop
test
je
movzx
test
je
movzx
movzx
sub
mov
mov
jne
add
cmp
jne
jmp
mov
cmp
je
mov
add
add
mov
movzx
test
jne
xor
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
pop
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
push
mov
mov
mov
lea
xor
push
push
mov
mov
call
mov
push
call
mov
add
test
jne
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
test
je
lea
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
mov
push
push
call
call
mov
add
mov
mov
mov
call
cmp
je
jmp
mov
mov
cmp
je
mov
jmp
mov
mov
jmp
test
je
mov
jmp
cmp
je
push
lea
mov
push
mov
call
push
push
call
add
mov
pop
pop
pop
mov
pop
ret
push
lea
mov
push
mov
call
mov
lea
push
push
call
mov
add
mov
mov
call
int3
call
call
call
test
jne
xor
ret
call
test
jne
call
jmp
mov
ret
push
mov
cmp
jne
call
call
push
call
pop
mov
pop
ret
int3
int3
mov
movzx
mov
mov
test
je
imul
cmp
jle
cmp
jl
bt
jae
rep
mov
mov
ret
bt
jae
movd
pshufd
add
movups
add
and
sub
cmp
jle
lea
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
sub
test
jne
jmp
bt
jae
movd
pshufd
cmp
jb
movdqu
movdqu
add
sub
cmp
jae
test
je
lea
movdqu
movdqu
mov
mov
ret
test
je
mov
inc
sub
test
jne
test
je
mov
add
sub
test
je
lea
lea
mov
mov
add
sub
test
jne
mov
mov
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
mov
push
push
call
add
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
nop
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
lea
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
push
mov
mov
cmp
je
mov
mov
mov
cmp
jb
cmp
jbe
push
pop
int
pop
ret
push
mov
mov
cmp
je
mov
mov
mov
cmp
jb
cmp
jbe
push
pop
int
pop
ret
push
mov
mov
test
je
cmp
je
push
call
pop
pop
ret
push
call
mov
pop
cmp
jne
xor
ret
push
push
call
pop
pop
test
jne
call
jmp
mov
ret
mov
cmp
je
push
call
or
pop
mov
ret
push
push
mov
xor
push
push
push
call
add
test
je
inc
add
add
cmp
jb
mov
jmp
call
xor
pop
pop
ret
push
mov
test
je
imul
push
lea
push
call
dec
sub
sub
jne
pop
mov
pop
ret
push
mov
push
push
push
push
mov
jmp
mov
lea
mov
mov
test
je
cmp
je
jmp
mov
push
push
push
call
mov
test
jne
call
cmp
jne
push
push
push
call
add
test
je
push
push
push
call
add
test
je
push
push
push
call
mov
jmp
xor
test
jne
mov
or
xchg
jmp
mov
mov
xchg
test
je
push
call
test
jne
add
cmp
jne
xor
pop
pop
pop
mov
pop
ret
mov
jmp
push
mov
mov
push
push
lea
mov
mov
or
mov
xor
and
ror
cmp
jne
xor
jmp
test
je
mov
jmp
push
push
push
call
pop
pop
test
je
push
push
call
mov
test
je
push
call
pop
xchg
mov
jmp
mov
push
and
pop
sub
ror
xor
xchg
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
push
push
call
mov
add
test
je
push
mov
call
call
pop
pop
ret
pop
pop
jmp
push
mov
push
push
push
push
push
call
add
mov
push
test
je
mov
call
call
jmp
call
pop
pop
ret
push
mov
push
push
push
push
push
call
add
mov
push
push
test
je
mov
call
call
jmp
call
pop
pop
ret
push
mov
push
push
push
push
push
call
mov
add
test
je
push
mov
push
push
call
call
jmp
push
push
call
pop
pop
ret
mov
mov
push
and
xor
push
pop
sub
mov
ror
xor
xor
cmp
sbb
and
add
inc
mov
lea
cmp
jne
pop
ret
push
mov
cmp
jne
push
mov
cmp
je
cmp
je
push
call
and
add
cmp
jne
pop
pop
ret
mov
and
push
pop
sub
xor
ror
xor
mov
ret
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
lea
push
push
mov
jmp
lea
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
push
call
and
mov
push
call
pop
and
mov
call
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
cmp
mov
push
mov
mov
jne
call
mov
call
or
jmp
test
je
test
je
push
push
push
lea
call
mov
lea
xor
xor
stos
stos
stos
stos
mov
mov
and
mov
or
mov
mov
mov
jne
mov
test
jne
mov
push
lea
mov
lea
push
push
lea
push
push
push
lea
call
and
lea
call
mov
test
je
mov
and
or
je
test
jne
test
jne
mov
cmp
jne
test
js
cmp
jbe
jmp
mov
or
je
test
je
test
jns
xor
mov
jmp
mov
cmp
je
xor
mov
lea
call
cmp
je
mov
and
pop
mov
pop
mov
xor
pop
call
mov
pop
ret
test
jne
or
jmp
mov
cmp
jne
push
pop
xor
mov
jmp
mov
push
mov
sub
mov
xor
mov
cmp
mov
push
mov
mov
jne
call
mov
call
or
jmp
test
je
test
je
push
push
push
lea
call
mov
lea
xor
xor
stos
stos
stos
stos
mov
mov
and
mov
or
mov
mov
mov
jne
mov
test
jne
mov
push
lea
mov
lea
push
push
lea
push
push
push
lea
call
and
lea
call
mov
test
je
mov
and
or
je
test
jne
test
jne
mov
cmp
jne
test
js
cmp
jbe
jmp
mov
or
je
test
je
test
jns
xor
mov
jmp
mov
cmp
je
xor
mov
lea
call
cmp
je
mov
and
pop
mov
pop
mov
xor
pop
call
mov
pop
ret
test
jne
or
jmp
mov
cmp
jne
push
pop
xor
mov
jmp
mov
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
mov
test
je
cmp
jbe
push
push
push
push
push
push
push
call
add
test
jns
xor
mov
cmp
jne
call
mov
jmp
call
mov
call
or
pop
pop
ret
cmp
jne
mov
ret
mov
shr
ret
cmp
jne
mov
ret
mov
shr
ret
mov
push
mov
push
or
xor
push
mov
div
push
and
mov
cmp
jae
call
mov
xor
jmp
push
xor
add
cmp
jne
cmp
jbe
cmp
ja
mov
jmp
push
call
mov
pop
test
je
lea
push
lea
call
mov
mov
mov
push
call
pop
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
dec
sub
je
sub
je
sub
je
cmp
je
mov
xor
and
or
mov
jne
mov
cmp
je
cmp
jne
mov
xor
xor
pop
ret
mov
pop
ret
xor
pop
ret
mov
push
mov
push
mov
call
test
jne
add
jmp
add
pop
pop
ret
mov
push
mov
push
push
mov
push
lea
mov
test
jne
mov
call
mov
lea
add
mov
mov
test
jg
test
je
mov
xor
div
dec
mov
mov
lea
movzx
cmp
jbe
cmp
sete
dec
and
add
sub
add
cbw
movzx
mov
movsx
mov
add
jmp
sub
sar
mov
add
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
lea
mov
test
jne
mov
call
mov
mov
lea
add
mov
mov
test
jg
mov
or
je
push
push
push
lea
push
push
mov
call
mov
pop
add
mov
movzx
cmp
jbe
cmp
sete
dec
and
add
sub
add
cbw
movzx
mov
movsx
mov
add
jmp
sub
sar
mov
add
pop
pop
pop
mov
pop
ret
mov
push
mov
push
xor
cmp
jle
push
movsx
push
mov
mov
push
call
test
je
inc
jmp
or
cmp
je
inc
cmp
jl
pop
pop
pop
pop
ret
mov
push
mov
push
xor
cmp
jle
push
movsx
push
mov
mov
push
push
call
cmp
je
inc
cmp
jl
pop
pop
pop
pop
ret
mov
push
mov
push
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
push
mov
mov
mov
test
je
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
jmp
push
call
lea
mov
push
lea
mov
mov
mov
push
mov
call
push
push
call
mov
add
mov
pop
test
jne
or
mov
mov
mov
pop
pop
ret
mov
push
mov
push
call
and
pop
pop
ret
mov
push
mov
push
mov
push
call
mov
and
pop
mov
mov
mov
and
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
call
mov
mov
pop
lea
push
call
mov
lea
mov
mov
mov
push
lea
push
mov
push
mov
push
push
lea
push
call
and
lea
call
lea
mov
call
cmp
je
mov
and
push
push
call
pop
pop
mov
mov
pop
xor
pop
call
mov
pop
ret
mov
push
mov
mov
mov
push
mov
mov
mov
mov
jmp
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmp
je
cmp
jne
dec
mov
inc
inc
mov
test
jne
pop
pop
ret
mov
push
mov
mov
lea
cmp
ja
movzx
movzx
and
jmp
xor
imul
mov
movzx
shr
pop
ret
mov
push
mov
mov
lea
cmp
ja
movzx
movzx
and
jmp
xor
mov
movzx
shr
pop
ret
mov
push
mov
push
mov
movsx
push
call
cmp
jmp
inc
movzx
push
call
test
pop
jne
movsx
push
call
pop
cmp
jne
add
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
pop
ret
mov
push
mov
push
push
push
mov
push
cmp
jne
call
mov
mov
lea
push
push
mov
and
mov
and
sub
push
call
mov
add
mov
cmp
jne
call
mov
mov
cmp
je
mov
cmp
jb
mov
mov
jmp
xor
cmp
jne
test
je
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
lea
call
test
jne
or
pop
ret
push
xor
cmp
jne
call
mov
call
or
jmp
mov
mov
jmp
add
cmp
jl
push
movzx
mov
push
call
mov
cmp
je
cmp
ja
jmp
mov
call
jmp
or
mov
mov
mov
mov
mov
jmp
mov
call
jmp
mov
call
jmp
mov
jmp
mov
call
jmp
mov
call
jmp
mov
call
test
je
mov
movzx
mov
test
jne
add
inc
cmp
jne
mov
pop
pop
ret
mov
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lea
call
test
jne
or
pop
ret
push
xor
cmp
jne
call
mov
call
or
jmp
mov
mov
jmp
add
cmp
jl
push
movzx
mov
push
call
mov
cmp
je
cmp
ja
jmp
mov
call
jmp
or
mov
mov
mov
mov
mov
jmp
mov
call
jmp
mov
call
jmp
mov
jmp
mov
call
jmp
mov
call
jmp
mov
call
test
je
mov
movzx
mov
test
jne
add
mov
call
test
je
inc
cmp
jne
mov
pop
pop
ret
lea
push
cmp
pop
cmp
jno
inc
add
inc
add
cmp
xchg
cmp
call
mov
lea
call
test
jne
or
pop
ret
push
xor
cmp
jne
call
mov
call
or
jmp
mov
mov
jmp
add
cmp
jl
push
movzx
mov
push
call
mov
cmp
je
cmp
ja
jmp
mov
call
jmp
or
mov
mov
mov
mov
mov
jmp
mov
call
jmp
mov
call
jmp
mov
jmp
mov
call
jmp
mov
call
jmp
mov
call
test
je
mov
movzx
mov
test
jne
add
inc
cmp
jne
mov
pop
pop
ret
mov
cmp
add
inc
add
cmp
mov
cmp
retf
add
mov
xor
sub
je
sub
je
dec
sub
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
mov
ret
call
test
jne
call
mov
call
xor
ret
mov
ret
call
test
jne
call
mov
call
xor
ret
mov
ret
mov
push
mov
movzx
lea
push
mov
call
test
je
inc
jmp
or
mov
pop
ret
lea
mov
push
movzx
add
push
call
mov
ret
cmp
je
lea
push
call
ret
add
mov
mov
mov
test
jns
or
mov
ret
movzx
cmp
jne
mov
and
or
jne
mov
jmp
cmp
jne
mov
push
pop
and
or
jne
mov
call
mov
call
xor
ret
cmp
jne
cmp
ja
je
cmp
je
cmp
je
cmp
je
push
pop
cmp
jne
mov
cmp
jne
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
movzx
cmp
jne
cmp
jne
lea
mov
mov
jmp
cmp
jne
cmp
jne
lea
mov
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
push
pop
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
cmp
jne
add
mov
mov
jmp
mov
mov
ret
movzx
cmp
jne
mov
and
or
jne
mov
jmp
cmp
jne
mov
push
pop
and
or
jne
mov
call
mov
call
xor
ret
cmp
jne
cmp
ja
je
cmp
je
cmp
je
cmp
je
push
pop
cmp
jne
mov
cmp
jne
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
movzx
cmp
jne
cmp
jne
lea
mov
mov
jmp
cmp
jne
cmp
jne
lea
mov
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
push
pop
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
cmp
jne
add
mov
mov
jmp
mov
mov
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
pop
push
movzx
pop
cmp
ja
je
cmp
ja
je
cmp
je
cmp
je
cmp
jbe
cmp
jbe
cmp
jne
mov
call
test
jne
xor
jmp
push
push
jmp
sub
je
sub
je
dec
sub
jne
push
mov
call
jmp
mov
call
jmp
cmp
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
je
cmp
jne
mov
call
jmp
mov
call
jmp
or
push
push
mov
call
jmp
mov
call
jmp
mov
call
jmp
sub
je
dec
sub
je
sub
jne
push
jmp
cmp
jne
mov
xor
push
mov
mov
shr
inc
mov
push
pop
test
je
mov
shr
test
je
push
pop
mov
jmp
test
je
push
jmp
mov
shr
test
je
mov
mov
movzx
push
pop
cmp
je
push
pop
cmp
jne
mov
shr
test
je
mov
jmp
xor
cmp
je
push
pop
cmp
je
xor
jmp
mov
push
pop
test
jne
test
je
push
pop
mov
cmp
je
push
pop
cmp
je
xor
jmp
mov
xor
test
sete
dec
and
add
mov
add
mov
sub
sub
test
jne
lea
push
push
lea
push
push
call
add
lea
push
lea
push
push
lea
push
lea
call
mov
lea
mov
shr
test
je
shr
test
jne
push
push
lea
push
push
call
add
push
mov
call
cmp
jl
mov
shr
test
je
push
push
lea
push
push
call
add
pop
mov
mov
pop
xor
pop
call
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
pop
push
movzx
pop
cmp
ja
je
cmp
ja
je
cmp
je
cmp
je
cmp
jbe
cmp
jbe
cmp
jne
mov
call
test
jne
xor
jmp
push
push
jmp
sub
je
sub
je
dec
sub
jne
push
mov
call
jmp
mov
call
jmp
cmp
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
je
cmp
jne
mov
call
jmp
mov
call
jmp
or
push
push
mov
call
jmp
mov
call
jmp
mov
call
jmp
sub
je
dec
sub
je
sub
jne
push
jmp
cmp
jne
mov
xor
push
mov
mov
shr
inc
mov
push
pop
test
je
mov
shr
test
je
push
pop
mov
jmp
test
je
push
jmp
mov
shr
test
je
mov
mov
movzx
push
pop
cmp
je
push
pop
cmp
jne
mov
shr
test
je
mov
jmp
xor
cmp
je
push
pop
cmp
je
xor
jmp
mov
push
pop
test
jne
test
je
push
pop
mov
cmp
je
push
pop
cmp
je
xor
jmp
mov
xor
test
sete
dec
and
add
mov
add
mov
sub
sub
test
jne
lea
push
push
lea
push
push
call
add
lea
push
lea
push
push
lea
push
lea
call
mov
lea
mov
shr
test
je
shr
test
jne
push
push
lea
push
push
call
add
push
mov
call
cmp
jl
mov
shr
test
je
push
push
lea
push
push
call
add
pop
mov
mov
pop
xor
pop
call
mov
pop
ret
cmp
je
lea
push
call
ret
add
mov
mov
mov
test
jns
or
neg
mov
ret
mov
push
mov
mov
cmp
ja
jmp
push
pop
pop
ret
xor
inc
pop
ret
push
jmp
push
jmp
xor
pop
ret
mov
and
and
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
icebp
push
add
mov
mov
test
je
mov
test
je
push
movzx
push
push
push
call
add
mov
test
movzx
je
shr
mov
mov
jmp
mov
jmp
mov
mov
mov
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
push
pop
push
or
mov
pop
test
jns
movzx
cmp
je
cmp
je
mov
jmp
mov
jmp
jne
movzx
cmp
je
cmp
jne
mov
mov
lea
push
mov
mov
add
push
call
test
jne
mov
call
sub
mov
mov
test
jne
mov
and
and
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
test
jne
mov
push
movsx
push
push
push
push
push
mov
call
push
mov
call
push
lea
push
push
call
mov
add
shr
pop
test
je
cmp
jne
push
push
call
pop
pop
movzx
push
pop
cmp
je
push
pop
cmp
jne
mov
shr
test
jne
push
push
call
pop
pop
mov
cmp
jne
or
inc
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
and
push
pop
mov
lea
mov
inc
test
jne
sub
mov
pop
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
mov
push
mov
add
mov
push
movzx
movzx
push
push
push
call
add
lea
test
jne
mov
mov
mov
test
jne
mov
mov
push
mov
push
lea
push
push
call
add
test
jns
mov
jmp
mov
test
jne
mov
mov
mov
test
je
mov
mov
mov
pop
mov
pop
pop
mov
pop
ret
mov
push
mov
push
push
mov
push
call
pop
mov
mov
sub
je
sub
je
dec
sub
je
sub
je
call
mov
call
xor
jmp
mov
add
shr
test
mov
mov
mov
jmp
mov
add
shr
test
mov
je
mov
jmp
mov
xor
jmp
mov
add
shr
test
mov
je
movsx
jmp
movzx
jmp
mov
add
shr
test
mov
je
movsx
jmp
movzx
cdq
mov
push
mov
mov
shr
test
je
test
jg
jl
test
jae
neg
adc
neg
or
mov
cmp
pop
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
mov
push
push
cmp
jne
push
push
mov
call
jmp
push
mov
call
mov
shr
test
je
cmp
push
pop
je
mov
cmp
je
add
mov
mov
inc
mov
pop
pop
pop
ret
mov
push
mov
push
add
mov
mov
call
test
jne
call
mov
call
xor
jmp
push
call
pop
sub
je
sub
je
dec
sub
je
sub
jne
mov
cdq
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
pop
pop
ret
mov
mov
shr
test
je
or
mov
push
push
call
ret
push
push
mov
mov
call
ret
mov
push
push
mov
push
add
mov
mov
mov
mov
cmp
jne
mov
push
movzx
push
push
push
call
add
test
je
test
jne
mov
push
push
mov
call
pop
pop
jmp
test
jne
mov
push
push
mov
call
pop
mov
mov
pop
pop
ret
mov
push
mov
push
push
push
mov
xor
mov
mov
cmp
jle
mov
test
je
movzx
mov
mov
mov
cmp
jge
inc
inc
inc
cmp
jl
pop
mov
pop
pop
pop
ret
cmp
jne
call
mov
call
xor
ret
mov
ret
cmp
je
cmp
je
call
mov
call
xor
ret
mov
ret
mov
push
mov
mov
mov
mov
cmp
mov
jne
cmp
je
inc
jmp
or
mov
mov
jmp
inc
mov
inc
mov
mov
mov
mov
mov
add
mov
pop
ret
mov
push
mov
mov
mov
shr
test
je
mov
cmp
jne
mov
jmp
push
push
call
pop
pop
mov
xor
cmp
setne
pop
ret
mov
push
mov
push
push
push
push
mov
push
cmp
jne
mov
test
jle
mov
xor
test
je
xor
mov
mov
push
mov
push
lea
push
push
call
add
mov
test
jle
push
lea
call
test
je
inc
jmp
or
add
inc
cmp
jne
jmp
or
jmp
lea
push
lea
push
push
lea
push
call
pop
pop
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
push
cmp
jne
mov
test
jle
mov
xor
test
je
xor
mov
mov
push
mov
push
lea
push
push
call
add
mov
test
jle
lea
push
push
lea
call
add
inc
cmp
jne
jmp
or
jmp
lea
push
lea
push
push
lea
push
call
pop
pop
mov
pop
mov
pop
ret
mov
push
mov
mov
mov
shr
test
je
mov
cmp
jne
mov
mov
add
pop
ret
pop
jmp
mov
push
mov
push
push
mov
mov
mov
test
je
mov
push
mov
cmp
jne
cmp
mov
je
jmp
sub
cmp
jb
mov
push
lea
push
push
push
call
mov
add
mov
add
mov
pop
add
mov
cmp
mov
je
add
jmp
cmp
je
or
jmp
add
pop
pop
mov
pop
ret
mov
push
mov
sub
push
push
mov
mov
cmp
jne
call
mov
mov
mov
mov
mov
mov
and
lea
mov
mov
cmp
je
push
mov
movzx
mov
push
call
test
jne
cmp
jne
call
mov
mov
cmp
jne
mov
push
call
test
je
inc
jmp
or
add
cmp
jne
mov
mov
pop
cmp
pop
pop
jne
test
je
mov
mov
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
call
mov
call
or
jmp
test
je
lea
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
lea
mov
push
lea
push
lea
call
mov
pop
ret
mov
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
push
mov
call
add
cmp
jne
push
push
mov
call
push
mov
call
add
cmp
jne
or
pop
ret
push
xor
mov
push
push
lea
push
call
mov
mov
sar
mov
mov
and
imul
mov
mov
cmp
je
cmp
je
test
jne
mov
add
inc
cmp
jne
pop
xor
pop
ret
mov
push
mov
imul
add
pop
ret
mov
push
call
call
xor
mov
push
call
mov
pop
mov
add
push
call
add
cmp
jne
push
call
and
pop
pop
ret
mov
push
mov
mov
add
push
call
pop
ret
mov
push
mov
mov
add
push
call
pop
ret
mov
push
mov
mov
push
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
sub
jne
pop
test
jne
xor
mov
call
push
jmp
xor
jmp
mov
push
mov
push
push
mov
xor
mov
push
call
mov
test
je
mov
mov
push
xor
push
lea
cmp
je
mov
cmp
je
add
cmp
jne
mov
test
je
mov
test
jne
xor
jmp
cmp
jne
xor
mov
inc
jmp
cmp
je
mov
mov
mov
mov
cmp
jne
lea
lea
jmp
mov
add
cmp
jne
mov
mov
cmp
ja
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
call
call
pop
mov
jmp
push
mov
mov
call
call
mov
pop
mov
or
pop
pop
mov
xor
pop
call
mov
pop
ret
mov
ret
mov
push
mov
mov
mov
pop
ret
mov
mov
xor
and
ror
neg
sbb
neg
ret
mov
push
mov
push
mov
call
pop
ret
mov
push
mov
push
mov
xor
mov
push
mov
mov
xor
and
ror
test
jne
xor
jmp
push
mov
call
call
pop
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
call
pop
mov
pop
ret
mov
push
mov
sub
push
mov
test
jne
xor
jmp
push
cmp
je
cmp
je
call
push
pop
mov
call
mov
jmp
push
push
mov
xor
push
push
call
mov
mov
mov
test
je
cmp
jne
mov
mov
lea
mov
push
lea
mov
push
push
push
push
call
push
push
push
call
mov
add
test
jne
call
push
pop
mov
jmp
lea
push
lea
push
mov
lea
push
push
push
call
add
cmp
jne
mov
dec
mov
mov
mov
mov
mov
jmp
lea
mov
push
push
call
mov
pop
pop
test
je
mov
jmp
mov
mov
mov
cmp
je
lea
inc
cmp
jne
mov
mov
mov
mov
mov
push
call
pop
mov
push
call
pop
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
sub
mov
mov
push
push
mov
xor
push
mov
mov
mov
test
je
mov
add
mov
mov
mov
push
pop
cmp
jne
test
sete
add
jmp
inc
test
je
mov
mov
add
movzx
add
test
je
test
jne
cmp
je
cmp
push
pop
jne
test
je
xor
mov
jmp
sub
mov
xor
mov
cmp
je
movzx
cmp
je
cmp
jne
add
jmp
xor
cmp
je
test
je
mov
add
mov
inc
xor
push
pop
mov
mov
jmp
add
inc
cmp
je
push
pop
cmp
push
pop
jne
test
jne
cmp
je
push
pop
cmp
push
pop
jne
add
jmp
cmp
mov
sete
mov
shr
jmp
dec
test
je
mov
add
inc
test
jne
movzx
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
mov
add
inc
add
jmp
mov
mov
test
je
xor
mov
add
inc
xor
jmp
test
je
mov
inc
pop
pop
pop
mov
pop
ret
mov
push
mov
push
mov
cmp
jb
xor
jmp
or
mov
xor
div
cmp
jae
imul
shl
mov
not
cmp
jbe
lea
push
push
call
push
mov
call
add
mov
pop
pop
ret
mov
push
mov
pop
jmp
mov
test
jne
cmp
jne
xor
ret
call
test
je
call
test
jne
mov
ret
cmp
je
xor
ret
push
push
call
mov
test
jne
or
jmp
push
call
pop
test
jne
or
jmp
push
mov
mov
call
xor
push
call
pop
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
push
mov
xor
mov
mov
push
push
movzx
mov
test
je
push
pop
cmp
je
inc
mov
lea
mov
add
cmp
jne
sub
sar
lea
add
movzx
test
jne
mov
lea
push
push
call
mov
xor
pop
pop
test
je
mov
jmp
mov
lea
mov
add
cmp
jne
sub
sar
push
lea
pop
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
push
push
call
add
test
jne
mov
mov
xor
add
push
mov
call
mov
pop
lea
cmp
jne
jmp
push
call
xor
push
call
pop
pop
mov
push
call
pop
mov
pop
pop
pop
mov
pop
ret
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
test
je
mov
push
mov
jmp
push
call
lea
mov
pop
test
jne
push
call
pop
pop
pop
pop
ret
mov
push
mov
test
jne
or
pop
ret
push
push
xor
jmp
push
push
push
push
push
push
call
mov
test
je
push
push
call
mov
pop
pop
test
je
push
push
push
push
xor
push
push
call
test
je
push
push
call
push
call
add
add
cmp
jne
xor
pop
pop
pop
ret
push
call
pop
or
jmp
mov
push
mov
push
mov
xor
mov
push
mov
push
lea
jmp
mov
push
call
call
pop
add
cmp
jne
mov
pop
xor
pop
call
mov
pop
ret
mov
push
mov
mov
mov
cmp
je
push
call
pop
pop
ret
mov
push
mov
mov
mov
cmp
je
push
call
pop
pop
ret
jmp
push
mov
call
push
mov
call
push
call
push
call
pop
pop
ret
mov
test
jne
call
mov
ret
jmp
mov
push
mov
push
push
mov
xor
mov
mov
push
push
mov
sub
add
push
xor
shr
cmp
sbb
not
and
je
mov
mov
test
je
mov
call
call
add
inc
cmp
jne
mov
pop
pop
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
mov
push
jmp
mov
test
je
mov
call
call
test
jne
add
cmp
jne
xor
mov
pop
xor
pop
call
mov
pop
ret
push
push
call
mov
push
call
pop
and
mov
call
mov
call
call
ret
mov
push
call
pop
ret
push
push
call
mov
cmp
jne
xor
inc
mov
xchg
xor
mov
mov
mov
test
jne
mov
mov
and
push
pop
sub
ror
xor
mov
cmp
je
xor
push
push
push
mov
ror
mov
call
call
push
jmp
cmp
jne
push
call
pop
mov
mov
cmp
jne
push
push
call
pop
pop
push
push
call
pop
pop
mov
cmp
jne
mov
mov
mov
call
ret
mov
mov
push
call
add
ret
mov
call
int3
mov
push
mov
xor
cmp
sete
pop
ret
mov
push
mov
sub
cmp
jne
call
test
je
push
call
pop
lea
mov
mov
lea
lea
mov
lea
push
mov
pop
mov
mov
lea
push
lea
push
lea
push
call
cmp
je
mov
pop
ret
push
call
int3
mov
push
mov
call
cmp
je
mov
mov
shr
test
jne
push
call
push
call
push
call
pop
push
call
int3
mov
push
mov
push
push
mov
xor
mov
and
lea
push
push
push
call
test
je
push
push
push
call
mov
test
je
push
mov
call
call
pop
cmp
je
push
call
mov
xor
call
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
mov
and
push
pop
sub
xor
ror
xor
cmp
jne
push
call
pop
mov
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
call
mov
call
push
pop
pop
ret
mov
xchg
xor
pop
ret
call
mov
call
mov
mov
ret
mov
ret
mov
ret
push
push
call
mov
push
call
pop
and
mov
mov
mov
cmp
je
cmp
je
push
push
call
pop
pop
mov
add
jmp
mov
call
call
ret
mov
push
call
pop
ret
xor
mov
inc
xchg
ret
mov
push
mov
sub
push
pop
mov
lea
mov
lea
push
lea
push
lea
push
call
mov
pop
ret
mov
push
mov
push
call
mov
mov
push
pop
mov
test
sete
inc
cmp
je
test
je
cmp
je
cmp
je
call
mov
call
or
jmp
and
jmp
or
mov
jmp
or
pop
pop
ret
mov
ret
mov
push
mov
mov
test
je
cmp
je
call
mov
call
or
pop
ret
mov
xchg
pop
ret
mov
ret
push
push
call
and
mov
push
call
pop
and
mov
call
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
push
push
call
and
mov
push
call
pop
and
mov
call
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
mov
push
mov
mov
and
push
pop
sub
mov
ror
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
mov
test
jne
or
jmp
mov
mov
push
mov
and
push
mov
xor
mov
xor
xor
ror
ror
ror
cmp
jne
sub
mov
sar
cmp
ja
mov
lea
test
jne
push
pop
cmp
jb
push
push
push
call
push
mov
call
mov
add
test
jne
push
lea
push
push
call
push
mov
call
mov
add
test
jne
or
jmp
lea
mov
mov
lea
mov
mov
and
push
pop
sub
xor
ror
mov
xor
mov
mov
sub
add
shr
cmp
sbb
not
and
mov
je
mov
xor
inc
mov
lea
cmp
jne
mov
mov
push
call
push
mov
call
mov
mov
mov
mov
lea
push
call
mov
push
mov
mov
call
mov
add
mov
mov
xor
pop
pop
pop
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
test
jne
or
jmp
mov
push
push
mov
mov
mov
and
xor
mov
xor
ror
ror
test
je
cmp
je
push
pop
sub
mov
xor
mov
ror
mov
mov
xor
mov
sub
cmp
jb
cmp
je
mov
xor
mov
ror
mov
call
call
mov
mov
mov
and
mov
mov
mov
mov
xor
ror
xor
ror
cmp
mov
mov
mov
jne
cmp
mov
je
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
je
push
call
mov
pop
mov
and
push
pop
sub
xor
mov
ror
xor
mov
mov
mov
mov
mov
mov
mov
pop
xor
pop
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
mov
lea
pop
mov
mov
lea
push
lea
push
lea
push
call
mov
pop
ret
mov
push
mov
push
mov
test
jne
or
jmp
mov
cmp
jne
mov
and
push
pop
sub
xor
ror
xor
mov
mov
mov
xor
pop
pop
ret
mov
push
mov
sub
lea
mov
lea
push
lea
mov
pop
mov
mov
lea
push
lea
push
lea
push
call
mov
pop
ret
push
mov
call
mov
ret
push
call
mov
call
pop
mov
ret
call
mov
ret
mov
push
push
and
xor
pop
sub
ror
xor
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
push
call
pop
ret
mov
push
mov
push
push
push
lea
call
push
call
push
xor
mov
call
push
mov
call
push
mov
call
add
mov
mov
pop
mov
pop
ret
mov
push
mov
push
mov
or
mov
lock
jne
push
mov
cmp
je
push
call
pop
mov
pop
pop
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
mov
push
mov
mov
mov
and
and
push
mov
test
je
test
je
push
push
call
pop
pop
mov
call
push
pop
mov
call
mov
jmp
push
push
test
je
call
mov
jmp
call
pop
pop
xor
pop
pop
ret
push
push
call
call
mov
test
je
and
mov
call
call
jmp
xor
inc
ret
mov
mov
call
int3
mov
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
mov
cmp
ja
test
jne
inc
jmp
call
test
je
push
call
pop
test
je
push
push
push
call
test
je
jmp
call
mov
xor
pop
pop
ret
mov
push
mov
mov
push
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
sub
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
mov
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jb
imul
test
jne
inc
jmp
call
test
je
push
call
pop
test
je
push
push
push
call
test
je
jmp
call
mov
xor
pop
pop
ret
mov
push
mov
mov
test
jne
pop
ret
mov
mov
push
sub
je
movzx
test
je
cmp
jne
add
add
jmp
movzx
movzx
sub
pop
pop
ret
mov
push
mov
test
je
mov
pop
ret
test
je
test
je
cmp
ja
xor
pop
ret
cmp
jmp
mov
push
mov
sub
lea
push
push
call
test
je
mov
push
pop
test
je
cmp
jl
cmp
jle
call
mov
call
xor
mov
test
je
mov
mov
pop
mov
pop
mov
pop
ret
push
push
lea
call
mov
xor
mov
mov
jmp
mov
movzx
add
push
push
mov
call
pop
pop
test
jne
movzx
cmp
jne
or
jmp
cmp
jne
mov
movzx
add
mov
jmp
mov
mov
mov
push
pop
push
pop
test
je
cmp
jne
cmp
jb
push
pop
cmp
jae
movzx
sub
jmp
mov
cmp
jae
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jae
movzx
sub
jmp
or
cmp
jne
push
pop
cmp
ja
push
pop
cmp
jbe
lea
cmp
ja
lea
cmp
movzx
ja
sub
add
jmp
or
test
je
test
jne
mov
jmp
movzx
add
mov
cmp
je
cmp
je
test
jne
mov
push
lea
call
mov
jmp
test
jne
mov
movzx
add
mov
or
xor
div
mov
push
pop
cmp
jb
push
pop
cmp
jae
movzx
sub
jmp
mov
cmp
jae
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jb
add
cmp
jae
movzx
sub
jmp
mov
cmp
jae
movzx
sub
jmp
or
cmp
jne
push
pop
cmp
ja
push
pop
cmp
jbe
lea
cmp
ja
lea
cmp
movzx
ja
sub
add
jmp
or
cmp
je
cmp
jae
mov
or
cmp
jb
jne
cmp
jbe
or
jmp
imul
add
mov
movzx
add
mov
jmp
push
lea
call
test
jne
mov
xor
mov
jmp
mov
push
push
call
pop
pop
test
je
call
mov
test
jne
or
jmp
test
je
mov
jmp
mov
jmp
test
je
neg
mov
cmp
pop
je
mov
and
jmp
mov
push
mov
add
mov
mov
test
je
cmp
je
call
mov
call
pop
ret
mov
push
mov
mov
test
je
mov
mov
mov
movzx
jmp
call
mov
movzx
and
pop
ret
mov
push
mov
mov
test
je
mov
cmp
jle
push
push
push
call
jmp
push
push
push
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
push
lea
push
push
call
push
lea
push
push
call
lea
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
call
test
je
mov
test
je
push
push
push
push
push
mov
call
call
mov
add
xor
pop
call
mov
pop
ret
push
mov
mov
push
xor
and
push
ror
push
push
test
jne
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
sub
push
lea
call
lea
push
push
push
call
add
cmp
je
mov
and
mov
pop
ret
mov
push
mov
cmp
je
push
push
call
pop
pop
pop
ret
mov
mov
movzx
and
pop
ret
mov
push
mov
sub
lea
push
push
call
mov
cmp
jae
lea
push
push
call
pop
pop
test
je
cmp
mov
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
xor
mov
mov
mov
cmp
jle
mov
lea
sar
mov
push
movzx
push
call
pop
pop
test
je
mov
mov
xor
push
mov
mov
pop
jmp
call
xor
mov
xor
mov
inc
mov
mov
lea
mov
mov
push
push
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
call
add
neg
sbb
neg
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
cmp
je
push
push
call
pop
pop
mov
jmp
mov
lea
cmp
ja
add
mov
pop
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
mov
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
mov
mov
mov
mov
mov
test
je
mov
pop
ret
mov
push
mov
push
push
push
push
push
mov
push
push
push
call
add
push
call
add
mov
pop
ret
mov
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
mov
pop
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
push
push
mov
inc
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
mov
push
mov
test
jne
test
je
mov
test
je
and
xor
jmp
mov
test
je
or
push
cmp
jbe
call
push
pop
mov
call
jmp
push
lea
call
mov
xor
cmp
jne
mov
mov
cmp
jbe
test
je
test
je
push
push
push
call
add
call
push
pop
mov
cmp
je
mov
and
mov
pop
pop
pop
mov
pop
ret
test
je
test
je
mov
mov
test
je
mov
jmp
lea
mov
push
push
push
push
push
lea
push
push
push
call
mov
test
je
cmp
jne
mov
test
je
mov
jmp
call
cmp
jne
test
je
test
je
push
push
push
call
add
call
push
pop
mov
call
jmp
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
mov
push
push
cmp
jl
mov
test
je
mov
mov
lea
cmp
je
xor
cmp
je
add
cmp
jne
sub
jmp
mov
and
push
pop
sub
neg
sbb
and
mov
shr
cmp
jae
mov
lea
xor
mov
mov
cmp
je
cmp
je
add
cmp
jne
sub
sar
cmp
jne
sub
lea
and
vpxor
lea
jmp
vpcmpeqw
vpmovmskb
test
jne
add
cmp
jne
mov
lea
jmp
cmp
je
add
cmp
jne
sub
sar
vzeroupper
jmp
cmp
jl
mov
test
je
mov
mov
lea
cmp
je
xor
cmp
je
add
cmp
jne
jmp
mov
and
push
pop
sub
neg
sbb
and
mov
shr
cmp
jae
mov
lea
xor
mov
mov
cmp
je
cmp
je
add
cmp
jne
sub
sar
cmp
jne
sub
lea
and
xorps
lea
jmp
movaps
pcmpeqw
pmovmskb
test
jne
add
cmp
jne
mov
lea
jmp
cmp
je
add
cmp
jne
jmp
mov
mov
mov
lea
cmp
je
xor
cmp
je
add
cmp
jne
sub
sar
pop
mov
pop
mov
pop
ret
push
push
call
mov
push
call
pop
and
mov
mov
mov
mov
lock
mov
call
call
ret
mov
push
call
pop
ret
push
push
call
mov
push
call
pop
and
mov
mov
mov
mov
test
je
or
lock
jne
cmp
je
push
call
pop
mov
call
call
ret
mov
push
call
pop
ret
push
push
call
mov
push
call
pop
and
push
mov
mov
push
call
pop
pop
mov
call
call
ret
mov
push
call
pop
ret
push
push
call
mov
push
call
pop
and
mov
mov
mov
push
mov
push
call
pop
pop
mov
call
call
ret
mov
push
call
pop
ret
mov
push
mov
sub
mov
xor
inc
push
mov
mov
mov
mov
mov
mov
pop
push
mov
mov
mov
mov
mov
lea
mov
and
lea
mov
pop
mov
mov
lea
push
lea
push
lea
push
call
lea
mov
lea
push
lea
mov
pop
mov
mov
lea
push
lea
push
lea
push
call
mov
pop
ret
mov
push
mov
cmp
je
push
call
push
call
pop
pop
pop
ret
mov
push
mov
mov
sub
mov
cmp
je
push
call
mov
pop
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
add
lea
mov
lea
push
pop
mov
mov
lea
push
lea
push
lea
push
call
push
lea
mov
lea
pop
mov
mov
lea
push
lea
push
lea
push
call
mov
pop
ret
mov
push
mov
push
mov
cmp
je
push
call
mov
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
mov
pop
test
je
push
call
pop
pop
ret
mov
push
push
call
mov
mov
cmp
je
push
call
mov
test
je
cmp
jne
jmp
mov
push
push
call
test
je
push
push
call
mov
pop
pop
test
jne
push
push
call
push
call
pop
jmp
push
push
call
test
jne
push
push
call
push
jmp
push
push
call
push
call
add
test
je
push
call
mov
pop
pop
ret
push
call
call
int3
mov
push
cmp
je
push
call
mov
test
je
cmp
jne
jmp
mov
push
push
call
test
je
push
push
call
mov
pop
pop
test
jne
push
push
call
push
call
pop
jmp
push
push
call
test
jne
push
push
call
push
jmp
push
push
call
push
call
add
test
je
mov
pop
ret
call
int3
mov
push
push
push
call
mov
xor
mov
cmp
je
push
call
mov
test
je
cmp
jne
push
call
mov
mov
pop
pop
pop
ret
mov
push
push
call
test
je
push
push
call
pop
pop
mov
test
jne
push
push
call
push
call
pop
jmp
push
push
call
test
jne
push
push
call
push
jmp
push
push
call
push
call
add
test
je
push
call
jmp
push
call
mov
cmp
jne
xor
ret
call
test
jne
push
call
pop
jmp
mov
ret
mov
cmp
je
push
call
or
mov
ret
mov
push
mov
push
mov
mov
cmp
je
mov
mov
test
jne
call
mov
pop
pop
ret
mov
push
mov
push
mov
mov
cmp
je
mov
mov
test
jne
call
mov
pop
pop
ret
mov
push
mov
mov
xor
push
push
mov
mov
mov
mov
shr
and
cmp
jne
mov
mov
and
or
jne
inc
jmp
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
push
pop
jmp
and
or
je
push
jmp
push
jmp
xor
pop
pop
pop
ret
mov
push
mov
mov
xor
cmp
jb
ja
cmp
jb
xor
inc
pop
ret
mov
push
mov
sub
push
push
push
mov
xor
test
jns
mov
mov
lea
push
mov
call
lea
cmp
ja
call
push
pop
mov
call
jmp
mov
mov
mov
shr
and
cmp
jne
push
push
push
push
push
push
push
push
push
call
mov
add
test
je
mov
jmp
push
push
call
pop
pop
test
je
cmp
sete
dec
and
add
mov
mov
mov
jmp
cmp
jb
ja
cmp
jb
mov
inc
mov
xor
cmp
push
sete
mov
dec
and
and
add
mov
mov
or
pop
jne
mov
mov
mov
and
or
push
pop
jne
mov
jmp
mov
jmp
mov
inc
mov
lea
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
and
mov
ja
cmp
jbe
and
mov
mov
mov
mov
mov
test
jle
mov
mov
and
and
mov
and
movsx
call
push
pop
add
movzx
cmp
jbe
add
mov
mov
mov
inc
mov
shrd
mov
mov
shr
sub
dec
mov
mov
test
jns
mov
test
js
mov
mov
and
and
mov
and
movsx
call
cmp
jbe
push
lea
pop
mov
cmp
je
cmp
jne
mov
dec
jmp
mov
mov
cmp
je
mov
cmp
jne
mov
add
jmp
inc
mov
jmp
inc
jmp
mov
test
jle
push
push
pop
push
push
call
add
add
cmp
jne
mov
cmp
mov
mov
sete
dec
and
add
mov
mov
mov
call
mov
xor
and
sub
sbb
js
jg
test
jb
mov
jmp
neg
mov
adc
neg
lea
mov
mov
push
pop
mov
test
jl
mov
jg
cmp
jb
push
push
push
push
push
call
mov
pop
mov
add
mov
mov
lea
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
push
call
mov
pop
add
mov
mov
mov
inc
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
push
call
pop
add
mov
mov
inc
push
pop
add
mov
mov
xor
cmp
je
mov
and
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
sub
lea
push
mov
push
push
push
lea
push
mov
push
push
push
call
or
add
cmp
je
mov
xor
cmp
sete
sub
xor
test
setg
sub
lea
push
push
mov
push
xor
cmp
sete
xor
test
setg
add
add
push
call
add
test
je
mov
jmp
push
lea
push
push
push
push
push
push
push
call
add
pop
pop
mov
pop
ret
mov
push
mov
sub
push
push
mov
test
jle
mov
jmp
xor
add
cmp
ja
call
push
pop
mov
call
mov
pop
pop
mov
pop
ret
push
push
lea
call
mov
mov
test
je
mov
xor
test
setg
push
xor
cmp
sete
add
push
push
push
call
mov
add
mov
mov
cmp
jne
mov
lea
test
jle
mov
mov
inc
mov
mov
mov
mov
mov
movzx
xor
add
add
or
cmp
je
mov
sub
add
push
push
push
call
add
pop
test
jne
lea
cmp
je
mov
mov
mov
cmp
je
mov
sub
jns
neg
mov
push
pop
cmp
jl
mov
cdq
idiv
add
push
pop
cmp
jl
mov
cdq
idiv
add
add
cmp
jne
cmp
jne
push
lea
push
push
call
add
cmp
je
mov
and
xor
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
sub
xor
push
push
push
lea
push
stos
stos
stos
lea
mov
push
mov
push
push
push
call
or
add
cmp
je
mov
xor
cmp
sete
sub
mov
lea
push
mov
add
push
xor
cmp
push
sete
add
push
call
add
test
je
mov
jmp
push
lea
push
push
push
push
push
call
add
pop
pop
mov
pop
ret
mov
push
mov
sub
lea
push
push
push
push
call
mov
mov
mov
mov
dec
cmp
je
cmp
jne
xor
cmp
sete
add
mov
cmp
mov
jne
mov
lea
mov
test
jg
push
push
push
push
call
xor
mov
add
inc
add
test
jle
push
push
push
push
call
mov
add
mov
mov
mov
mov
inc
mov
mov
test
jns
cmp
jne
mov
neg
cmp
jge
mov
neg
push
push
push
push
call
push
push
push
call
add
cmp
pop
pop
pop
je
mov
and
xor
mov
pop
ret
mov
push
mov
sub
push
push
push
push
xor
lea
push
stos
stos
stos
lea
mov
push
mov
push
push
push
call
mov
xor
mov
add
cmp
sete
dec
mov
or
lea
cmp
je
mov
sub
lea
push
push
push
push
call
add
test
je
mov
jmp
mov
dec
cmp
jl
cmp
jge
cmp
jge
mov
inc
test
jne
mov
push
lea
push
push
push
push
push
call
add
jmp
push
lea
push
push
push
push
push
push
push
call
add
pop
pop
pop
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
push
mov
movzx
add
cmp
jae
push
mov
pop
mov
xor
pop
call
mov
pop
ret
test
je
mov
inc
dec
mov
mov
mov
mov
xor
cmp
mov
mov
mov
setne
mov
dec
mov
mov
mov
and
mov
mov
mov
mov
push
mov
mov
push
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
inc
test
jne
sub
cmp
sbb
inc
add
add
push
push
push
call
add
pop
pop
test
je
xor
push
push
push
push
push
call
int3
mov
push
mov
mov
test
je
push
mov
mov
push
lea
mov
inc
test
jne
sub
lea
push
lea
push
push
call
add
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
test
jne
call
push
pop
mov
call
mov
jmp
push
mov
test
je
cmp
je
cmp
ja
call
push
pop
mov
call
mov
jmp
mov
cmp
je
cmp
je
cmp
je
mov
cmp
jne
mov
mov
and
or
jne
push
call
mov
pop
test
je
push
push
push
push
call
pop
movzx
push
push
call
add
jmp
mov
and
or
je
push
jmp
push
pop
cmp
jg
je
sub
je
sub
jmp
push
push
push
push
push
push
push
push
push
call
jmp
sub
push
je
sub
je
push
push
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
add
jmp
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
add
mov
cmp
jge
movzx
push
push
call
pop
pop
pop
ret
mov
mov
mov
add
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
mov
shr
test
je
push
push
call
pop
pop
jmp
push
push
push
call
mov
pop
cmp
je
push
call
pop
cmp
je
push
call
mov
push
sar
call
pop
and
pop
imul
mov
add
jmp
mov
mov
cmp
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
mov
push
sar
call
mov
and
pop
pop
imul
add
cmp
jge
push
lea
push
push
lea
push
call
add
test
jne
xor
cmp
jle
movsx
push
push
call
pop
pop
cmp
je
inc
cmp
jl
mov
jmp
mov
jmp
push
push
call
pop
pop
pop
pop
mov
xor
pop
call
mov
pop
ret
mov
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
mov
push
mov
mov
sub
jns
push
push
call
pop
pop
pop
ret
mov
mov
mov
inc
movzx
pop
ret
mov
xor
or
cmp
sete
ret
mov
push
mov
push
mov
push
call
push
call
pop
pop
test
jne
xor
jmp
push
push
push
call
pop
push
pop
cmp
jne
mov
jmp
push
call
pop
cmp
jne
mov
inc
lea
mov
test
jne
mov
lock
mov
test
jne
push
call
push
mov
call
mov
pop
pop
test
jne
lea
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
cmp
je
push
mov
push
lea
mov
shr
test
je
push
call
pop
mov
lock
xor
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
sub
lea
push
call
cmp
je
mov
test
je
push
push
mov
lea
lea
mov
mov
cmp
jl
mov
push
call
mov
pop
cmp
jle
mov
push
xor
test
je
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
sar
imul
mov
add
mov
mov
mov
mov
mov
inc
add
inc
mov
cmp
jne
pop
pop
pop
mov
pop
ret
mov
push
push
push
xor
mov
mov
and
sar
imul
add
cmp
je
cmp
je
or
jmp
mov
mov
sub
je
sub
je
sub
push
jmp
push
jmp
push
pop
push
call
mov
cmp
je
test
je
push
call
jmp
xor
test
je
movzx
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
mov
mov
test
je
mov
mov
inc
cmp
jne
pop
pop
pop
ret
push
push
call
push
call
pop
xor
mov
mov
push
call
pop
test
jne
call
call
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
mov
push
xor
mov
test
je
push
call
and
pop
add
cmp
jb
mov
pop
ret
push
push
push
push
call
add
ret
push
push
push
push
call
add
ret
push
push
push
push
call
add
ret
mov
push
mov
push
push
push
push
mov
jmp
mov
lea
mov
mov
test
je
cmp
je
jmp
mov
push
push
push
call
mov
test
jne
call
cmp
jne
push
push
push
call
add
test
je
push
push
push
call
add
test
je
push
push
push
call
mov
jmp
xor
test
jne
mov
or
xchg
jmp
mov
mov
xchg
test
je
push
call
test
jne
add
cmp
jne
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
push
mov
mov
push
push
lea
mov
mov
or
mov
xor
and
ror
cmp
jne
xor
jmp
test
je
mov
jmp
push
push
push
call
pop
pop
test
je
push
push
call
mov
test
je
push
call
pop
xchg
mov
jmp
mov
push
and
pop
sub
ror
xor
xchg
xor
pop
pop
pop
pop
ret
mov
push
mov
push
mov
xor
mov
push
push
push
push
push
call
mov
add
test
je
push
mov
push
call
call
jmp
mov
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
call
mov
test
je
push
mov
push
push
push
push
push
push
push
push
call
call
jmp
push
push
push
push
push
push
push
call
push
call
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
push
push
push
push
call
mov
add
test
je
push
mov
call
call
jmp
call
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
push
push
push
push
call
add
mov
push
test
je
mov
call
call
jmp
call
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
push
push
push
push
call
add
mov
push
test
je
mov
call
call
jmp
call
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
push
push
push
push
call
add
mov
push
push
test
je
mov
call
call
jmp
call
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
push
push
push
push
call
mov
add
test
je
push
mov
push
push
call
call
jmp
push
push
call
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
call
mov
test
je
push
mov
push
push
push
push
push
push
push
push
call
call
jmp
push
push
push
push
push
push
push
call
push
call
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
call
mov
test
je
push
mov
push
call
call
jmp
push
call
pop
mov
xor
pop
call
mov
pop
ret
mov
mov
push
and
xor
push
pop
sub
mov
ror
xor
xor
cmp
sbb
and
add
inc
mov
lea
cmp
jne
mov
pop
ret
mov
push
mov
cmp
jne
push
mov
cmp
je
cmp
je
push
call
and
add
cmp
jne
pop
mov
pop
ret
push
push
call
and
push
call
pop
and
push
pop
mov
cmp
je
mov
mov
test
je
mov
shr
test
je
mov
push
call
pop
cmp
je
inc
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
mov
push
call
pop
and
mov
push
mov
push
call
pop
pop
test
je
mov
cmp
jne
mov
mov
mov
shr
test
je
mov
push
call
pop
cmp
je
mov
inc
jmp
mov
or
mov
call
call
ret
mov
push
call
pop
ret
push
push
call
mov
push
call
pop
and
mov
call
mov
call
call
ret
mov
push
call
pop
ret
mov
push
mov
sub
mov
push
push
mov
push
xor
mov
lea
lea
shr
cmp
sbb
not
and
je
mov
push
mov
push
mov
call
pop
pop
test
je
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
add
inc
cmp
jne
pop
pop
pop
mov
pop
ret
mov
push
mov
sub
and
lea
and
lea
mov
lea
mov
lea
push
mov
pop
mov
mov
lea
push
lea
push
lea
push
call
cmp
mov
jne
mov
mov
pop
ret
mov
push
mov
mov
test
jne
xor
pop
ret
mov
mov
shr
test
je
push
call
pop
test
jne
mov
inc
jmp
mov
pop
ret
mov
push
mov
mov
mov
and
cmp
jne
test
je
dec
pop
ret
shr
and
mov
pop
ret
mov
push
mov
mov
push
push
lea
mov
mov
and
cmp
jne
test
je
mov
mov
sub
mov
and
test
jle
push
push
push
call
pop
push
call
add
cmp
je
push
pop
lock
or
jmp
mov
shr
test
je
push
pop
lock
xor
pop
pop
pop
ret
mov
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
mov
shr
test
je
push
call
push
call
pop
pop
test
jne
xor
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
push
lea
mov
shr
test
je
mov
shr
test
je
push
call
pop
mov
lock
xor
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
push
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
mov
pop
ret
push
sub
mov
push
mov
cmp
jne
movzx
mov
lea
test
je
sub
jne
jmp
movzx
mov
lea
test
je
sub
je
sub
jne
test
mov
jne
xor
mov
pop
test
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
mov
push
mov
pop
jmp
mov
push
mov
mov
cmp
jbe
or
pop
ret
sbb
neg
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
push
mov
test
jne
call
push
pop
mov
call
jmp
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
je
push
pop
mov
push
pop
mov
xor
mov
lea
push
push
call
pop
pop
test
jne
lea
push
push
push
push
call
add
jmp
lea
push
push
push
call
add
mov
test
jne
add
cmp
jne
mov
mov
mov
mov
sub
mov
mov
add
sar
inc
shr
cmp
mov
sbb
not
and
je
mov
mov
mov
lea
mov
mov
add
cmp
jne
sub
mov
inc
sar
add
mov
mov
add
inc
mov
cmp
jne
mov
push
push
push
call
mov
add
test
jne
or
mov
jmp
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
cmp
je
mov
sub
mov
mov
mov
mov
lea
mov
mov
add
cmp
jne
sub
sar
lea
mov
sub
push
push
mov
mov
sar
sub
push
push
call
add
test
jne
mov
mov
mov
mov
add
mov
mov
lea
mov
cmp
jne
mov
mov
mov
mov
push
call
pop
mov
sub
mov
add
shr
cmp
sbb
not
and
mov
je
mov
mov
push
call
inc
lea
pop
cmp
jne
mov
mov
push
call
pop
pop
pop
mov
mov
xor
pop
call
mov
pop
ret
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
push
xor
lea
mov
add
cmp
jne
mov
sub
sar
mov
inc
not
mov
cmp
jbe
push
pop
jmp
push
lea
add
push
push
call
mov
pop
pop
test
je
push
push
push
push
call
add
test
jne
push
sub
lea
push
push
push
call
add
test
jne
mov
mov
call
mov
test
je
push
call
pop
jmp
mov
mov
add
xor
push
call
pop
mov
pop
pop
pop
mov
pop
ret
xor
push
push
push
push
push
call
int3
mov
push
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
push
push
cmp
je
movzx
lea
push
call
test
jne
sub
cmp
jne
mov
movzx
cmp
jne
lea
cmp
je
push
xor
push
push
push
call
add
jmp
push
lea
call
sub
movzx
sar
inc
neg
push
sbb
xor
and
mov
lea
push
push
call
add
lea
push
push
push
push
push
push
call
mov
mov
cmp
jne
push
push
push
push
call
add
mov
cmp
je
push
call
mov
mov
pop
pop
xor
pop
call
mov
pop
ret
mov
sub
sar
push
mov
pop
cmp
jne
cmp
je
cmp
jne
cmp
je
push
push
lea
push
push
call
add
test
jne
lea
push
push
call
push
test
mov
pop
jne
mov
mov
mov
sub
sar
cmp
je
push
sub
push
push
lea
push
call
add
jmp
mov
push
mov
cmp
je
cmp
je
cmp
je
xor
jmp
xor
inc
pop
ret
mov
push
mov
push
mov
cmp
je
xor
jmp
cmp
jne
push
push
call
push
mov
call
mov
add
test
jne
push
pop
jmp
mov
add
mov
jmp
sub
sar
cmp
ja
push
push
lea
push
push
call
add
test
jne
push
pop
jmp
mov
lea
lea
mov
mov
xor
push
call
pop
mov
pop
pop
pop
ret
mov
push
mov
pop
jmp
push
push
call
mov
push
call
pop
and
mov
call
mov
call
call
ret
mov
push
call
pop
ret
mov
push
mov
mov
push
mov
mov
mov
add
push
push
push
call
mov
mov
push
mov
mov
add
push
push
push
call
mov
add
or
mov
mov
lock
jne
mov
mov
cmp
je
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
pop
ret
mov
push
mov
mov
sub
je
sub
je
sub
je
sub
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
push
mov
sub
lea
push
call
and
mov
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
mov
pop
ret
mov
push
mov
push
mov
push
push
push
xor
lea
push
push
call
mov
xor
mov
add
mov
mov
lea
stos
stos
stos
mov
sub
mov
mov
inc
sub
jne
lea
mov
mov
mov
inc
sub
jne
pop
pop
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
lea
push
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
lea
mov
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
mov
pop
sub
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
lea
or
lea
mov
jmp
mov
mov
lea
inc
cmp
jb
mov
pop
pop
xor
pop
call
mov
pop
ret
mov
push
mov
sub
mov
push
push
call
push
call
mov
add
mov
mov
cmp
jne
xor
jmp
push
push
push
push
call
mov
or
pop
test
je
mov
mov
mov
rep
mov
push
push
and
call
mov
pop
pop
cmp
jne
call
mov
mov
push
call
pop
pop
mov
pop
pop
mov
pop
ret
cmp
jne
call
mov
mov
lock
dec
jne
mov
cmp
je
push
call
pop
mov
mov
mov
xor
mov
mov
test
jne
test
jne
lea
mov
lea
push
lea
mov
pop
mov
mov
lea
push
lea
push
lea
push
call
cmp
je
mov
mov
mov
jmp
push
push
call
xor
mov
mov
mov
test
je
cmp
je
mov
test
jne
call
push
call
pop
mov
mov
mov
mov
cmp
je
test
je
or
lock
jne
cmp
je
push
call
pop
mov
mov
mov
lock
mov
call
jmp
mov
push
call
pop
ret
mov
call
ret
cmp
jne
push
mov
push
mov
call
mov
mov
call
push
push
push
push
call
add
mov
pop
mov
ret
push
call
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
add
xor
mov
inc
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
sub
jne
push
call
add
mov
mov
jmp
mov
xor
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
add
imul
mov
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
inc
movzx
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
push
mov
mov
call
add
mov
mov
lea
push
lea
pop
mov
lea
mov
lea
sub
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
test
jne
xor
jmp
mov
test
jne
call
push
pop
mov
call
mov
jmp
push
mov
test
je
cmp
jb
push
push
push
call
add
xor
jmp
push
push
push
call
add
test
jne
call
push
jmp
cmp
jae
call
push
pop
mov
call
mov
jmp
push
pop
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
je
push
mov
lea
mov
add
cmp
jne
sub
sar
lea
add
cmp
jne
pop
lea
pop
pop
ret
mov
push
push
call
mov
test
jne
xor
jmp
push
push
call
mov
sub
and
push
call
mov
pop
pop
test
je
push
push
push
call
add
push
call
pop
push
call
pop
mov
pop
pop
ret
mov
push
mov
sub
push
mov
test
jne
call
mov
or
jmp
push
push
push
push
mov
call
mov
pop
pop
test
je
cmp
je
movzx
mov
mov
mov
mov
mov
call
mov
xor
test
jne
mov
cmp
je
test
je
call
test
je
call
jmp
cmp
jne
xor
jmp
test
jne
push
push
call
push
mov
call
add
cmp
je
mov
test
jne
push
push
call
push
mov
call
add
mov
test
je
mov
mov
sub
sar
push
push
mov
call
mov
pop
pop
test
js
cmp
je
push
call
pop
mov
cmp
je
mov
mov
mov
jmp
mov
mov
inc
cmp
jne
push
push
push
call
push
mov
call
add
mov
test
je
jmp
cmp
je
neg
mov
lea
cmp
jb
cmp
jae
push
push
push
call
push
mov
call
add
test
je
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
add
cmp
jne
sub
sar
push
lea
push
mov
call
mov
pop
pop
test
je
mov
push
push
push
call
add
test
jne
mov
inc
lea
xor
mov
mov
movzx
neg
sbb
and
push
push
call
test
jne
call
or
mov
push
call
pop
jmp
call
mov
or
push
call
pop
pop
mov
pop
pop
mov
pop
ret
push
push
push
push
push
call
int3
mov
push
mov
push
push
push
mov
test
jne
xor
jmp
push
xor
mov
mov
mov
push
cmp
je
lea
inc
cmp
jne
lea
push
push
call
mov
pop
pop
test
je
cmp
je
mov
sub
mov
lea
mov
add
cmp
jne
sub
sar
push
lea
push
mov
call
mov
xor
push
call
add
cmp
je
push
push
push
call
add
test
jne
add
cmp
jne
xor
push
call
pop
mov
pop
pop
pop
mov
pop
ret
call
xor
push
push
push
push
push
call
int3
mov
cmp
jne
push
call
pop
mov
ret
mov
push
mov
push
push
push
mov
mov
cmp
je
mov
push
push
push
call
add
test
jne
mov
movzx
cmp
je
test
je
add
cmp
jne
sub
sar
neg
pop
mov
pop
pop
pop
ret
sub
sar
jmp
mov
push
mov
pop
jmp
mov
push
push
mov
xor
push
push
push
call
test
je
inc
add
add
cmp
jb
mov
jmp
push
call
pop
xor
pop
pop
ret
mov
push
mov
imul
add
push
call
pop
ret
mov
push
mov
test
je
imul
push
lea
push
call
dec
sub
sub
jne
pop
mov
pop
ret
mov
push
mov
imul
add
push
call
pop
ret
mov
push
mov
push
mov
push
xor
mov
mov
cmp
jl
lea
push
call
cmp
je
xor
inc
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
push
push
push
call
mov
xor
mov
pop
pop
test
jne
mov
jmp
lea
cmp
je
push
lea
mov
push
push
lea
push
call
or
mov
lea
mov
lea
mov
mov
and
mov
cmp
jne
mov
pop
push
call
pop
mov
pop
pop
mov
pop
ret
mov
push
mov
push
mov
test
je
push
lea
push
mov
cmp
je
push
call
add
cmp
jne
push
call
pop
pop
pop
pop
pop
ret
push
push
call
cmp
jb
call
push
pop
mov
call
mov
call
ret
xor
mov
push
call
pop
mov
mov
mov
mov
cmp
jl
cmp
jne
call
mov
test
jne
push
pop
mov
mov
call
jmp
mov
add
mov
inc
jmp
mov
push
call
pop
ret
mov
push
mov
mov
mov
and
sar
imul
add
push
call
pop
ret
mov
push
mov
mov
mov
and
sar
imul
add
push
call
pop
ret
mov
push
mov
push
push
mov
push
test
js
cmp
jae
mov
mov
and
sar
imul
mov
test
je
cmp
je
call
cmp
jne
xor
sub
je
sub
je
sub
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
pop
ret
mov
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
and
sar
imul
mov
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
mov
push
mov
push
call
mov
mov
lea
push
push
call
mov
pop
pop
mov
mov
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
mov
push
push
mov
push
xor
lea
mov
sub
add
shr
cmp
sbb
not
and
je
push
call
inc
lea
pop
cmp
jne
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
call
lea
push
push
call
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
call
push
call
push
call
lea
push
push
call
lea
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
mov
push
mov
mov
xor
push
push
push
cmp
je
mov
movzx
mov
test
je
movzx
mov
cmp
je
add
movzx
test
jne
add
xor
cmp
jne
xor
pop
pop
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
push
push
lea
call
mov
test
jne
mov
mov
xor
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
je
lea
lea
mov
cmp
sbb
test
je
cmp
sbb
and
lea
cmp
ja
cmp
sbb
and
call
mov
test
je
mov
jmp
cmp
sbb
and
push
call
mov
pop
test
je
mov
add
mov
jmp
mov
test
je
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
cmp
je
mov
and
mov
lea
pop
pop
pop
mov
xor
call
mov
pop
ret
mov
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
mov
push
mov
mov
lock
mov
test
je
lock
mov
test
je
lock
mov
test
je
lock
mov
test
je
lock
push
push
lea
pop
cmp
je
mov
test
je
lock
cmp
je
mov
test
je
lock
add
sub
jne
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
mov
push
mov
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
push
call
pop
push
pop
lea
mov
lea
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
sub
mov
jne
push
call
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
test
je
cmp
je
xor
inc
lock
inc
pop
ret
mov
pop
ret
mov
push
mov
push
mov
test
je
cmp
je
mov
test
jne
push
call
push
call
pop
pop
pop
pop
ret
mov
push
mov
mov
test
je
cmp
je
or
lock
dec
pop
ret
mov
pop
ret
mov
push
mov
mov
test
je
lock
mov
test
je
lock
mov
test
je
lock
mov
test
je
lock
mov
test
je
lock
push
push
lea
pop
cmp
je
mov
test
je
lock
cmp
je
mov
test
je
lock
add
sub
jne
push
call
pop
pop
pop
ret
push
push
call
and
call
mov
mov
test
je
mov
test
jne
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
test
jne
call
mov
push
call
pop
ret
mov
call
ret
mov
push
mov
push
mov
push
test
je
mov
test
je
mov
cmp
jne
mov
jmp
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
jmp
xor
pop
pop
pop
ret
mov
push
mov
pop
jmp
mov
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
push
mov
push
test
je
push
call
pop
mov
jmp
xor
imul
push
push
call
mov
pop
pop
test
je
cmp
jae
sub
lea
push
push
push
call
add
pop
mov
pop
pop
pop
ret
call
test
mov
setne
ret
and
mov
ret
mov
push
mov
push
mov
xor
mov
push
mov
cmp
jne
mov
jmp
push
mov
push
mov
test
je
mov
call
call
test
je
add
cmp
jne
cmp
jne
mov
jmp
cmp
je
add
cmp
je
mov
test
je
push
mov
call
call
pop
sub
lea
cmp
jne
xor
pop
pop
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
push
mov
cmp
je
add
push
mov
test
je
push
mov
call
call
pop
sub
lea
cmp
jne
pop
mov
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
call
pop
ret
mov
push
mov
push
mov
xor
mov
push
call
mov
test
je
push
mov
call
call
pop
test
je
xor
inc
jmp
xor
mov
xor
pop
call
mov
pop
ret
push
push
call
and
push
call
pop
and
mov
mov
and
xor
ror
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
and
mov
push
call
pop
and
mov
mov
and
xor
ror
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
mov
push
mov
mov
dec
sub
je
sub
je
sub
je
sub
je
sub
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
push
mov
lea
mov
sub
add
push
xor
shr
cmp
sbb
not
and
je
mov
inc
mov
lea
cmp
jne
pop
pop
ret
mov
push
mov
imul
mov
add
cmp
je
mov
cmp
je
add
cmp
jne
xor
pop
ret
mov
push
mov
sub
push
pop
mov
lea
mov
lea
push
lea
push
lea
push
call
mov
pop
ret
mov
push
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
ret
call
add
ret
push
push
call
xor
mov
and
mov
mov
mov
push
pop
cmp
jg
je
lea
sub
je
dec
sub
je
dec
sub
jne
jmp
cmp
je
cmp
je
cmp
jle
cmp
jg
push
call
add
jmp
call
mov
mov
test
jne
or
jmp
push
push
call
pop
pop
test
jne
call
mov
call
jmp
add
xor
mov
mov
and
test
je
push
call
pop
mov
and
mov
and
mov
test
je
mov
mov
and
xor
ror
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
mov
test
jne
test
jne
test
je
push
call
pop
push
call
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
call
mov
mov
call
mov
cmp
jne
imul
add
imul
add
mov
cmp
je
and
add
jmp
mov
and
push
pop
sub
xor
ror
xor
mov
mov
mov
call
cmp
jne
cmp
jne
call
push
push
mov
call
call
pop
jmp
push
pop
mov
mov
mov
mov
cmp
je
push
call
pop
ret
push
mov
call
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
call
mov
mov
xor
call
ret
mov
push
mov
mov
mov
push
and
mov
push
shl
push
test
je
or
test
je
or
test
je
or
test
je
or
mov
test
je
or
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
pop
and
pop
pop
cmp
je
cmp
je
cmp
jne
or
pop
ret
or
pop
ret
or
pop
ret
mov
push
mov
sub
push
fnstsw
fnclex
xor
inc
cmp
jl
mov
xor
mov
push
mov
test
je
movzx
and
shl
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
stmxcsr
mov
and
mov
ldmxcsr
mov
test
je
mov
and
shl
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
or
mov
pop
jmp
mov
xor
test
je
movzx
and
shl
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
pop
mov
pop
ret
mov
push
mov
sub
fstcw
mov
movzx
and
shl
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
push
push
movzx
mov
mov
push
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
je
cmp
jne
or
jmp
or
mov
test
je
or
mov
mov
mov
not
and
and
or
cmp
je
push
call
pop
mov
fldcw
fstcw
mov
movzx
and
shl
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzx
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
je
cmp
jne
or
jmp
or
mov
test
je
or
cmp
jl
and
stmxcsr
mov
mov
shr
and
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
push
and
pop
sub
je
sub
je
sub
jne
or
jmp
or
jmp
or
mov
and
not
and
or
cmp
je
push
call
push
mov
call
pop
pop
stmxcsr
mov
mov
shr
and
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
sub
je
sub
je
sub
jne
or
jmp
or
jmp
or
mov
or
xor
test
je
or
mov
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
mov
shr
and
mov
test
je
or
movzx
test
je
or
test
je
or
test
je
or
test
je
or
push
mov
mov
push
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
pop
test
je
or
pop
ret
mov
push
mov
push
push
mov
mov
cmp
jne
xor
jmp
mov
cmp
jae
movzx
mov
movzx
jmp
mov
xor
mov
lea
push
push
lea
push
push
call
test
je
movzx
movzx
and
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
lea
call
lea
cmp
ja
mov
mov
movzx
jmp
mov
lea
sar
mov
push
movzx
push
call
pop
pop
test
je
mov
mov
xor
push
mov
mov
pop
jmp
xor
mov
xor
mov
inc
mov
mov
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
mov
xor
pop
call
mov
pop
ret
mov
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
mov
pop
ret
mov
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
push
push
call
pop
cmp
pop
lea
jl
mov
mov
test
jne
mov
mov
mov
mov
xor
cmp
push
push
push
push
setne
lea
push
push
call
mov
mov
test
je
lea
lea
cmp
sbb
test
je
cmp
lea
sbb
and
cmp
ja
cmp
sbb
and
call
mov
test
je
mov
jmp
cmp
sbb
and
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
xor
push
push
push
push
push
push
push
push
push
call
mov
test
je
test
je
mov
test
je
cmp
jg
xor
push
push
push
push
push
push
push
push
push
call
mov
test
jne
jmp
lea
lea
cmp
sbb
test
je
cmp
sbb
and
lea
cmp
ja
cmp
sbb
and
call
mov
test
je
mov
jmp
cmp
sbb
and
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
push
push
push
call
test
je
xor
push
push
cmp
jne
push
push
push
push
push
push
call
mov
test
jne
push
call
pop
xor
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
mov
pop
ret
push
push
jmp
push
call
pop
jmp
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
mov
pop
ret
mov
push
mov
mov
push
test
jne
call
push
pop
mov
call
mov
jmp
cmp
jbe
mov
mov
test
jle
mov
jmp
xor
inc
cmp
ja
call
push
jmp
mov
test
je
push
lea
mov
push
mov
mov
test
jle
mov
test
je
inc
jmp
mov
mov
inc
dec
test
jg
lea
mov
test
js
cmp
jl
jmp
mov
dec
cmp
je
inc
cmp
jne
inc
jmp
mov
lea
mov
inc
test
jne
sub
lea
push
push
push
call
add
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
mov
test
jne
xor
pop
mov
pop
ret
push
mov
mov
test
jne
pop
xor
xor
pop
mov
pop
ret
push
lea
lea
mov
test
jne
mov
mov
cmp
jne
mov
lea
push
mov
mov
lea
push
push
push
call
add
mov
xor
pop
pop
pop
mov
pop
ret
test
jne
mov
lea
push
push
lea
mov
push
push
mov
call
xor
mov
div
add
xor
cmp
mov
sbb
pop
neg
xor
pop
mov
pop
mov
pop
ret
xor
mov
mov
mov
cmp
je
mov
inc
inc
mov
lea
lea
push
push
push
xor
or
push
push
call
mov
pop
mov
mov
xor
lea
add
adc
sub
mov
mov
mov
jne
mov
push
lea
mov
push
lea
mov
push
push
call
mov
add
mov
xor
cmp
mov
mov
mov
sbb
neg
pop
inc
pop
mov
pop
mov
pop
ret
cmp
ja
mov
lea
sub
mov
mov
cmp
jl
mov
inc
sub
lea
lea
add
mov
cmp
jne
dec
sub
sub
cmp
jge
jmp
mov
mov
sub
mov
cmp
jae
inc
test
jne
pop
pop
xor
xor
pop
mov
pop
ret
mov
mov
mov
mov
mov
bsr
mov
je
mov
sub
jmp
mov
mov
mov
sub
mov
test
je
mov
mov
shr
mov
shl
shl
or
mov
cmp
jbe
mov
mov
mov
shr
or
xor
mov
add
mov
js
lea
lea
mov
lea
lea
mov
lea
mov
cmp
ja
mov
jmp
xor
cmp
mov
mov
mov
mov
mov
mov
jbe
mov
mov
mov
xor
mov
shr
mov
call
mov
or
or
mov
mov
mov
shl
cmp
mov
mov
jb
mov
add
mov
mov
shr
or
mov
mov
push
push
push
push
push
call
mov
pop
mov
xor
mov
mov
mov
mov
mov
mov
mov
test
jne
cmp
jbe
push
push
add
adc
push
push
call
add
adc
or
xor
mov
mov
mov
mov
mov
test
ja
jb
cmp
ja
push
push
xor
mov
or
push
push
mov
call
cmp
jb
ja
cmp
jbe
mov
add
mov
adc
add
mov
adc
mov
jne
cmp
jbe
jmp
mov
mov
test
jne
test
je
mov
xor
xor
test
je
mov
mov
add
mov
mov
mov
mov
mov
mul
mov
mov
mul
add
add
mov
mov
adc
mov
xor
cmp
jae
add
adc
sub
mov
add
mov
add
sub
mov
jne
mov
mov
xor
cmp
ja
jb
cmp
jae
test
je
mov
mov
mov
add
mov
lea
mov
lea
xor
lea
add
adc
add
mov
adc
mov
sub
jne
mov
add
adc
mov
dec
mov
mov
xor
mov
add
mov
mov
mov
adc
sub
dec
mov
sub
dec
mov
mov
mov
mov
test
jns
jmp
xor
mov
inc
mov
cmp
jae
lea
lea
jmp
lea
mov
lea
inc
cmp
jb
mov
test
je
mov
cmp
jne
add
mov
jne
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
lea
push
call
mov
and
pop
cmp
jne
mov
jmp
lea
push
call
pop
mov
push
mov
push
mov
push
push
pop
cmp
jb
ja
test
jb
push
pop
jmp
mov
mov
mov
mov
xor
mov
mov
and
or
jne
mov
mov
and
or
jne
mov
xor
push
push
push
mov
call
add
test
je
jmp
lea
push
call
pop
test
je
mov
mov
sub
je
sub
je
sub
je
sub
je
mov
and
and
inc
mov
mov
fld
fst
mov
mov
mov
shr
mov
and
or
jne
mov
xor
jmp
xor
mov
xor
mov
and
add
mov
adc
xor
test
mov
setne
and
inc
add
add
mov
call
push
push
fstp
call
pop
pop
call
mov
mov
push
pop
cmp
je
cmp
jne
xor
mov
mov
xor
mov
test
mov
setne
mov
and
inc
mov
test
js
and
push
pop
mov
mov
cmp
jne
xor
mov
cmp
jne
add
cmp
jne
lea
mov
mov
xor
and
shr
sub
mov
xor
mov
inc
mov
call
mov
dec
and
bsr
mov
not
mov
je
lea
jmp
xor
lea
sub
mov
mov
cmp
jne
cmp
jbe
mov
jmp
xor
cmp
ja
test
jne
push
pop
cmp
jb
mov
mov
mov
mov
cmp
je
mov
mov
sub
lea
lea
cmp
jb
cmp
jae
mov
jmp
xor
mov
lea
cmp
jae
mov
jmp
xor
and
sub
mov
mov
and
shr
mov
shl
mov
or
mov
dec
dec
mov
cmp
je
mov
jmp
mov
mov
mov
test
je
mov
lea
xor
rep
mov
mov
cmp
jbe
lea
mov
jmp
mov
jmp
and
lea
and
mov
push
push
lea
push
push
call
add
and
xor
push
pop
inc
mov
mov
mov
push
lea
push
lea
push
push
call
add
jmp
lea
xor
mov
and
shr
mov
mov
sub
mov
mov
xor
mov
inc
call
mov
dec
and
bsr
mov
not
mov
je
lea
jmp
xor
sub
mov
mov
lea
mov
cmp
jne
cmp
jbe
mov
jmp
xor
cmp
ja
test
jne
push
pop
cmp
jb
mov
mov
mov
mov
cmp
je
mov
mov
sub
lea
lea
cmp
jb
cmp
jae
mov
jmp
xor
mov
lea
cmp
jae
mov
jmp
xor
and
sub
mov
mov
and
shr
mov
shl
mov
or
mov
dec
dec
mov
cmp
je
mov
jmp
mov
mov
mov
push
pop
test
je
mov
lea
xor
rep
mov
mov
cmp
jbe
lea
mov
jmp
mov
jmp
xor
mov
push
mov
mov
lea
push
lea
push
push
call
add
and
xor
inc
mov
mov
mov
push
jmp
cmp
je
and
push
pop
mov
mov
cmp
jne
xor
mov
cmp
jne
add
cmp
jne
and
bsr
je
inc
jmp
xor
mov
sub
lea
cmp
jae
mov
mov
jmp
and
lea
cmp
jae
mov
jmp
xor
mov
sub
shr
shl
xor
mov
dec
cmp
je
mov
jmp
push
pop
cmp
sbb
neg
add
sub
mov
mov
shr
lea
mov
mov
shl
push
push
push
call
mov
xor
inc
and
shl
mov
lea
jmp
mov
and
bsr
je
inc
jmp
xor
sub
mov
cmp
jne
cmp
jae
mov
jmp
xor
cmp
ja
test
jne
push
pop
cmp
jae
mov
mov
cmp
je
lea
lea
cmp
jae
mov
mov
jmp
and
lea
cmp
jae
mov
jmp
xor
mov
sub
shr
add
xor
mov
dec
cmp
je
mov
jmp
mov
cmp
jae
lea
mov
jmp
mov
jmp
and
lea
and
push
push
lea
push
push
call
add
xor
lea
inc
sub
mov
shr
mov
shl
push
push
push
call
xor
and
inc
mov
shl
mov
lea
mov
mov
mov
shl
push
lea
push
lea
push
push
call
add
mov
xor
push
pop
mov
test
js
div
mov
mov
mov
test
je
cmp
jbe
push
pop
movzx
movzx
mov
mov
shl
push
lea
mov
lea
push
push
call
mov
shl
push
mov
movzx
lea
push
lea
add
push
call
mov
add
mov
cmp
ja
mov
test
jne
xor
mov
mov
jmp
cmp
je
cmp
je
mov
xor
mov
xor
mov
mul
add
mov
adc
inc
mov
cmp
jne
jmp
mov
inc
jmp
cmp
ja
mov
mov
shl
push
lea
mov
push
lea
push
push
call
add
test
jne
xor
mov
mov
push
lea
jmp
cmp
je
cmp
je
mov
xor
mov
xor
mov
mul
add
mov
adc
inc
mov
cmp
jne
test
je
mov
cmp
jb
xor
mov
mov
push
lea
jmp
cmp
lea
setb
test
jne
lea
lea
mov
test
jne
mov
mov
test
je
mov
mov
xor
xor
mov
test
je
lea
sub
mov
lea
mov
mov
test
jne
cmp
jne
and
lea
mov
jmp
lea
jmp
xor
xor
mov
mov
cmp
je
cmp
je
cmp
jne
and
inc
add
mov
mov
mov
mov
mul
add
adc
add
mov
adc
inc
inc
mov
mov
mov
cmp
jne
test
je
cmp
je
cmp
jne
and
lea
mov
mov
xor
add
mov
adc
inc
jmp
cmp
je
mov
mov
inc
cmp
jne
mov
mov
shl
push
lea
push
lea
push
push
call
add
mov
test
je
mov
sub
mov
jne
mov
test
je
mov
test
jne
xor
mov
mov
push
jmp
xor
mov
mov
push
lea
push
lea
push
push
call
add
xor
jmp
and
and
push
lea
push
lea
jmp
cmp
je
mov
mov
test
je
xor
xor
mov
mul
add
mov
adc
inc
mov
cmp
jne
test
je
mov
cmp
jae
mov
inc
jmp
neg
div
mov
mov
mov
test
je
cmp
jbe
push
pop
movzx
movzx
mov
mov
shl
push
lea
mov
lea
push
push
call
mov
shl
push
mov
movzx
lea
push
lea
add
push
call
mov
add
mov
cmp
ja
mov
test
jne
xor
mov
mov
push
lea
jmp
cmp
je
cmp
je
mov
xor
mov
xor
mov
mul
add
mov
adc
inc
mov
cmp
jne
test
je
mov
cmp
jae
mov
inc
jmp
cmp
ja
mov
mov
shl
push
lea
mov
push
lea
push
push
call
add
test
je
cmp
je
cmp
je
mov
xor
mov
xor
mov
mul
add
mov
adc
inc
mov
cmp
jne
jmp
cmp
lea
setb
test
jne
lea
lea
mov
test
jne
mov
mov
test
je
mov
mov
xor
xor
mov
test
je
lea
sub
mov
lea
mov
mov
test
jne
cmp
jne
and
lea
mov
jmp
lea
jmp
xor
xor
mov
mov
cmp
je
cmp
je
cmp
jne
and
inc
add
mov
mov
mov
mov
mul
add
adc
add
mov
adc
inc
inc
mov
mov
mov
cmp
jne
test
je
cmp
je
cmp
jne
and
lea
mov
mov
xor
add
mov
adc
inc
jmp
cmp
je
mov
mov
inc
cmp
jne
mov
mov
shl
push
lea
push
lea
push
push
call
add
mov
test
je
mov
sub
mov
jne
mov
test
je
mov
mov
test
je
cmp
je
mov
test
je
xor
xor
mul
add
mov
mov
adc
inc
mov
cmp
jne
test
je
mov
cmp
jae
mov
inc
jmp
xor
push
mov
mov
lea
push
lea
push
push
call
add
xor
jmp
and
and
push
jmp
xor
push
mov
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
test
je
xor
xor
mov
push
pop
mul
add
mov
adc
inc
mov
cmp
jne
mov
test
mov
je
mov
cmp
jae
mov
mov
inc
jmp
xor
push
mov
mov
lea
push
lea
push
push
call
add
mov
lea
push
lea
push
call
pop
pop
push
pop
cmp
jne
inc
lea
mov
mov
mov
test
je
xor
mov
xor
mov
mul
push
add
mov
adc
inc
mov
pop
cmp
jne
mov
test
je
mov
cmp
jae
mov
inc
jmp
xor
push
mov
mov
lea
push
lea
push
push
call
add
jmp
test
jne
mov
dec
jmp
add
lea
mov
mov
mov
mov
mov
mov
test
js
cmp
ja
add
mov
dec
cmp
jb
mov
add
mov
cmp
je
mov
test
je
xor
mov
xor
mov
mov
mul
add
mov
adc
inc
mov
cmp
jne
mov
test
je
mov
cmp
jae
mov
inc
jmp
xor
push
mov
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
call
pop
pop
mov
push
pop
sub
xor
div
add
cmp
jb
mov
dec
cmp
jne
cmp
jbe
push
pop
add
mov
cmp
jne
mov
jmp
push
jmp
xor
push
push
push
push
push
jmp
push
jmp
push
jmp
push
push
mov
push
call
add
test
jne
cmp
pop
pop
pop
je
lea
push
call
pop
mov
xor
call
mov
pop
ret
push
push
push
push
push
call
int3
mov
push
mov
push
push
call
pop
mov
mov
mov
test
jne
call
mov
mov
push
pop
add
lock
or
jmp
mov
mov
shr
test
je
call
mov
jmp
mov
mov
test
je
mov
and
mov
mov
shr
test
mov
je
mov
mov
mov
push
pop
add
lock
mov
push
push
pop
add
lock
mov
push
pop
add
lock
mov
and
mov
mov
test
jne
push
mov
push
call
pop
cmp
je
mov
push
call
pop
cmp
jne
push
call
pop
test
jne
push
call
pop
pop
push
mov
push
call
pop
pop
test
jne
mov
push
pop
add
lock
or
jmp
movzx
pop
pop
pop
ret
mov
push
mov
push
push
call
pop
mov
mov
mov
test
jne
call
mov
mov
push
pop
add
lock
mov
jmp
mov
mov
shr
test
je
call
mov
jmp
mov
mov
test
je
mov
and
mov
mov
shr
test
mov
je
mov
mov
mov
push
pop
add
lock
mov
push
push
push
pop
add
lock
mov
push
pop
add
lock
mov
and
mov
mov
test
jne
mov
push
call
pop
cmp
je
mov
push
call
pop
cmp
jne
push
call
pop
test
jne
push
call
pop
push
mov
push
call
pop
pop
test
jne
mov
push
pop
add
lock
mov
jmp
movzx
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
call
pop
mov
mov
mov
test
je
mov
xor
mov
mov
sub
inc
mov
mov
mov
dec
mov
test
jle
mov
push
push
push
call
add
mov
mov
cmp
mov
mov
mov
sete
jmp
cmp
je
cmp
je
mov
mov
and
sar
imul
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
jne
mov
push
pop
add
lock
mov
jmp
push
lea
push
push
call
add
dec
neg
sbb
inc
pop
pop
pop
ret
mov
push
mov
push
push
push
call
pop
mov
mov
mov
test
je
mov
xor
mov
mov
sub
add
mov
mov
mov
sub
mov
test
jle
mov
push
push
push
call
add
mov
mov
cmp
mov
mov
mov
sete
jmp
cmp
je
cmp
je
mov
mov
and
sar
imul
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
jne
mov
push
pop
add
lock
mov
jmp
push
lea
push
push
call
sub
add
neg
sbb
inc
pop
pop
pop
ret
mov
push
mov
pop
jmp
mov
push
mov
pop
jmp
mov
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
and
sar
imul
mov
movzx
and
pop
ret
call
mov
call
xor
pop
ret
mov
push
mov
sub
push
push
push
xor
mov
mov
mov
lea
mov
cdq
sub
mov
sar
push
pop
mov
mov
mov
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
sub
je
test
je
cmp
je
mov
mov
mov
movzx
movzx
sub
je
test
jns
lea
mov
jmp
lea
mov
cmp
jle
or
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
mov
push
mov
push
mov
test
jne
call
mov
call
or
jmp
mov
push
or
shr
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
push
call
pop
mov
pop
pop
pop
ret
push
push
call
mov
mov
test
jne
call
mov
call
or
jmp
mov
shr
push
test
je
call
pop
jmp
and
call
pop
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
mov
mov
mov
mov
sar
mov
and
imul
mov
test
je
push
call
pop
push
call
test
jne
call
mov
call
mov
call
mov
or
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
mov
push
mov
sub
push
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
mov
and
sar
imul
mov
test
je
lea
mov
mov
lea
lea
mov
push
lea
push
lea
push
call
jmp
call
mov
call
or
pop
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
and
sar
push
imul
push
mov
push
mov
mov
mov
mov
mov
mov
add
mov
call
mov
mov
xor
mov
mov
mov
mov
cmp
jae
inc
mov
mov
xor
mov
mov
mov
mov
mov
test
je
mov
and
mov
lea
push
mov
mov
push
jmp
call
movzx
xor
cmp
jge
mov
cmp
jae
push
lea
push
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
inc
push
push
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
xor
push
lea
push
push
lea
push
push
call
test
je
mov
sub
add
mov
mov
cmp
jb
cmp
jne
push
pop
mov
xor
push
lea
push
push
lea
push
push
call
test
je
cmp
jb
inc
inc
cmp
jb
jmp
mov
mov
mov
mov
mov
or
inc
jmp
call
mov
mov
mov
pop
pop
xor
pop
call
mov
pop
ret
mov
push
mov
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
add
mov
cmp
jae
movzx
push
call
pop
cmp
jne
add
cmp
jne
push
pop
push
call
pop
cmp
jne
inc
inc
add
cmp
jb
jmp
call
mov
pop
mov
pop
pop
mov
pop
ret
mov
push
mov
push
push
mov
push
call
pop
test
jne
xor
jmp
push
mov
and
sar
imul
mov
cmp
jge
call
mov
cmp
jne
mov
cmp
jne
xor
jmp
lea
push
mov
push
call
test
setne
pop
pop
mov
pop
ret
mov
push
mov
mov
call
mov
xor
mov
mov
mov
sar
and
imul
push
mov
mov
push
mov
push
mov
mov
and
add
and
and
mov
mov
jmp
lea
cmp
jae
mov
inc
cmp
jne
inc
mov
inc
mov
lea
inc
cmp
mov
jb
lea
sub
lea
push
push
push
lea
push
push
call
test
je
mov
add
cmp
jb
mov
mov
cmp
jb
jmp
call
mov
mov
mov
pop
pop
xor
pop
call
mov
pop
ret
mov
push
mov
mov
call
mov
xor
mov
mov
mov
sar
and
imul
push
mov
mov
push
push
mov
mov
mov
add
mov
xor
mov
mov
mov
mov
jmp
lea
cmp
jae
movzx
add
cmp
jne
add
push
pop
mov
add
mov
lea
add
cmp
mov
jb
lea
sub
lea
push
push
and
lea
push
push
push
call
test
je
mov
add
cmp
jb
mov
mov
cmp
jb
jmp
call
mov
mov
mov
pop
pop
xor
pop
call
mov
pop
ret
mov
push
mov
mov
call
mov
xor
mov
mov
mov
sar
and
imul
push
push
mov
xor
mov
push
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
jae
mov
lea
cmp
jae
movzx
add
cmp
jne
push
pop
mov
add
mov
add
lea
cmp
jb
push
push
push
lea
push
lea
sub
sar
push
mov
push
push
push
call
mov
mov
test
je
push
lea
sub
push
push
lea
add
push
push
call
test
je
add
mov
cmp
jb
mov
sub
mov
cmp
jae
xor
jmp
call
mov
mov
mov
pop
pop
xor
pop
call
mov
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
imul
mov
mov
test
je
push
call
pop
or
mov
and
mov
mov
test
jne
call
mov
call
and
jmp
push
push
push
call
add
mov
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
test
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
mov
mov
sar
and
push
imul
mov
mov
mov
mov
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
test
je
push
push
push
push
call
add
xor
lea
stos
push
stos
stos
call
pop
test
je
test
je
dec
cmp
mov
ja
push
lea
push
push
call
add
mov
jmp
push
mov
lea
push
push
push
call
add
jmp
mov
mov
mov
cmp
jge
movsx
mov
sub
je
sub
je
sub
jne
push
lea
push
push
push
call
jmp
push
lea
push
push
push
call
jmp
push
lea
push
push
push
call
jmp
mov
lea
mov
xor
stos
push
stos
stos
lea
push
push
push
push
call
test
jne
call
mov
lea
lea
movs
movs
movs
mov
mov
mov
test
jne
mov
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
pop
pop
mov
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
mov
mov
push
mov
cmp
jbe
mov
push
push
lea
mov
mov
cmp
ja
jmp
lea
mov
push
push
call
call
add
test
jle
mov
mov
add
cmp
jbe
mov
mov
mov
cmp
je
test
je
sub
mov
lea
mov
mov
mov
sub
jne
mov
mov
sub
lea
cmp
ja
pop
pop
mov
xor
pop
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
push
mov
cmp
je
push
mov
test
je
sub
lea
mov
lea
mov
mov
mov
sub
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
test
jne
test
je
call
mov
call
mov
pop
pop
xor
pop
call
mov
pop
ret
test
je
test
je
mov
cmp
jb
dec
imul
add
mov
mov
xor
sub
div
lea
cmp
ja
push
push
push
push
call
add
jmp
shr
imul
add
push
push
mov
call
call
add
test
jle
push
push
push
call
add
push
mov
push
call
call
add
test
jle
push
push
push
call
add
push
mov
push
call
call
add
test
jle
push
push
push
call
add
mov
mov
mov
mov
cmp
jbe
jmp
lea
mov
add
mov
cmp
jae
mov
push
push
call
call
add
test
jle
cmp
ja
mov
mov
mov
add
cmp
ja
push
push
mov
call
call
mov
add
test
mov
jle
mov
mov
mov
lea
mov
mov
sub
mov
cmp
jbe
push
push
mov
call
call
add
test
jg
mov
mov
mov
mov
cmp
jb
mov
mov
cmp
je
sub
mov
mov
lea
mov
mov
mov
sub
jne
mov
mov
mov
cmp
jne
mov
jmp
mov
jmp
cmp
jae
mov
mov
sub
mov
cmp
jbe
push
push
mov
call
call
mov
add
test
mov
je
cmp
jb
mov
mov
jmp
lea
sub
mov
cmp
jbe
push
push
mov
call
call
mov
add
test
je
mov
mov
mov
sub
mov
sub
cmp
jl
mov
cmp
jae
mov
mov
mov
inc
mov
cmp
jae
mov
mov
mov
jmp
cmp
jae
mov
mov
mov
inc
mov
mov
mov
cmp
jae
mov
jmp
mov
mov
sub
mov
js
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
call
xor
test
sete
mov
ret
mov
push
mov
push
cmp
push
push
jne
mov
test
jne
call
mov
call
mov
jmp
mov
test
je
mov
mov
cmp
jbe
call
mov
call
mov
jmp
push
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
sub
je
test
je
cmp
je
movzx
movzx
sub
pop
jmp
push
push
push
push
call
add
pop
pop
mov
pop
ret
mov
push
mov
sub
push
mov
test
jne
xor
jmp
cmp
jne
call
mov
call
mov
jmp
push
mov
test
jne
call
mov
call
mov
jmp
push
mov
cmp
jbe
call
mov
call
jmp
push
lea
call
mov
mov
test
jne
mov
sub
push
mov
pop
movzx
push
pop
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
add
sub
je
test
je
mov
cmp
je
movzx
movzx
sub
jmp
push
push
push
push
push
push
call
add
test
jne
call
mov
jmp
lea
cmp
je
mov
and
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
pop
jmp
mov
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
mov
push
mov
push
mov
test
jne
push
call
pop
jmp
push
mov
test
jne
push
call
pop
jmp
cmp
jbe
call
mov
xor
pop
pop
pop
ret
call
test
je
push
call
pop
test
je
push
push
push
push
call
test
je
jmp
push
push
call
cmp
jl
mov
test
je
cmp
je
and
ldmxcsr
jmp
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
and
ldmxcsr
mov
jmp
and
mov
ldmxcsr
call
ret
mov
push
mov
push
fnstsw
fnclex
movsx
mov
pop
ret
mov
push
mov
push
push
fstcw
mov
mov
not
and
and
or
mov
fldcw
movsx
mov
pop
ret
mov
push
mov
mov
sub
test
je
fld
fistp
fwait
test
je
fstsw
fld
fstp
fstsw
test
je
fld
fstp
fwait
test
je
fldz
fld1
fdivp
fstp
fwait
test
je
fldpi
fstp
fwait
mov
pop
ret
mov
push
mov
push
fstsw
movsx
mov
pop
ret
mov
push
mov
mov
xor
cmp
je
cmp
je
inc
cmp
jne
pop
ret
mov
push
mov
push
call
mov
mov
call
mov
xor
pop
pop
ret
mov
push
mov
push
push
push
mov
push
call
push
call
and
lea
and
push
call
add
test
jne
mov
cmp
jne
mov
cmp
jne
xor
jmp
xor
inc
pop
mov
pop
ret
mov
push
mov
push
push
and
lea
and
push
call
pop
test
je
xor
inc
jmp
mov
mov
mov
mov
lea
mov
or
push
mov
call
pop
test
jne
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldlg2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
je
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpnlepd
cmp
jl
cmp
jg
andpd
addsd
movq
fld
ret
fld
ret
cmpnlepd
andpd
movq
fld
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
imul
mov
mov
test
je
push
call
pop
or
mov
mov
mov
and
mov
mov
mov
test
jne
call
mov
call
and
jmp
push
push
push
push
call
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
mov
mov
call
ret
mov
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
mov
and
cmp
je
mov
mov
and
sar
imul
mov
and
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
inc
push
push
mov
mov
push
call
push
mov
call
cmp
lea
pop
pop
je
push
pop
lock
mov
jmp
mov
lock
lea
mov
mov
mov
and
mov
pop
pop
pop
ret
push
push
call
and
mov
push
call
pop
and
mov
mov
mov
mov
sar
mov
and
imul
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
mov
push
mov
sub
push
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
mov
and
sar
imul
mov
test
je
lea
mov
mov
lea
lea
mov
push
lea
push
lea
push
call
jmp
call
and
call
mov
call
or
pop
mov
pop
ret
mov
push
mov
push
push
mov
push
call
pop
cmp
jne
xor
jmp
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
push
call
pop
mov
and
sar
imul
mov
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
mov
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
add
xchg
pop
ret
mov
push
mov
push
call
test
jne
mov
jmp
lea
push
lea
push
push
call
add
test
je
mov
mov
pop
ret
mov
push
mov
push
mov
test
jle
push
push
call
pop
pop
mov
mov
test
jle
push
push
call
pop
pop
test
je
test
je
xor
push
push
push
push
push
push
push
push
push
call
jmp
sub
jne
push
pop
jmp
sar
and
add
mov
pop
pop
ret
mov
push
mov
push
mov
push
mov
mov
push
and
lea
xor
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
cmp
je
mov
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
xor
mov
shr
inc
and
mov
add
shr
and
or
mov
shr
and
shl
or
mov
shr
and
mov
shl
shr
or
shr
and
and
shl
or
shl
or
or
pop
pop
or
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
movzx
mov
mov
and
mov
shl
mov
push
pop
and
je
cmp
je
mov
jmp
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
xor
mov
shr
inc
and
mov
add
shr
and
or
mov
shr
and
shl
or
mov
shr
and
movzx
shl
and
shr
or
and
shl
or
shl
or
or
or
or
pop
pop
pop
mov
pop
ret
mov
push
mov
push
mov
mov
shr
mov
and
and
or
mov
push
push
and
shr
xor
push
cmp
je
cmp
je
cmp
je
mov
jmp
mov
jmp
push
pop
jmp
mov
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
mov
xor
inc
and
movzx
shl
movzx
mov
mov
mov
shr
and
movzx
shl
or
mov
shr
and
movzx
shl
or
mov
shr
and
movzx
shl
or
mov
shr
and
shr
movzx
and
add
movzx
or
shl
or
or
or
pop
pop
pop
mov
pop
ret
mov
push
mov
push
mov
mov
push
shr
mov
push
push
and
and
or
mov
shr
mov
shr
and
push
pop
and
je
cmp
je
mov
jmp
mov
jmp
mov
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
mov
and
movzx
shl
movzx
mov
mov
mov
shr
and
movzx
shl
or
mov
shr
and
movzx
shl
or
mov
shr
and
movzx
shl
or
mov
shr
and
shr
movzx
and
add
movzx
or
or
or
or
pop
pop
or
pop
mov
pop
ret
mov
push
mov
sub
push
push
push
pop
xor
lea
rep
fnstenv
fldenv
mov
and
push
call
cmp
mov
pop
jge
xor
jmp
stmxcsr
mov
and
push
call
pop
mov
mov
and
and
shl
or
mov
shl
and
or
mov
shl
and
or
shl
or
pop
or
pop
mov
pop
ret
mov
push
mov
push
push
push
xor
push
mov
fnstsw
movzx
xor
and
inc
mov
mov
shr
and
shr
add
and
or
mov
shr
and
shl
or
mov
shr
and
shl
or
mov
shr
and
and
shl
or
shl
or
cmp
jge
xor
jmp
stmxcsr
mov
and
mov
mov
shr
and
shr
add
and
or
mov
shr
and
shl
or
mov
shr
and
shl
or
movzx
and
shr
shl
and
or
shl
or
mov
shl
or
shl
or
pop
or
pop
mov
pop
ret
mov
push
mov
sub
push
push
call
pop
push
movzx
lea
pop
xor
rep
fnstenv
mov
xor
and
xor
mov
fldenv
push
call
cmp
pop
movzx
pop
jl
stmxcsr
mov
and
and
or
mov
ldmxcsr
mov
pop
ret
mov
push
mov
sub
push
mov
mov
push
shr
and
push
mov
xor
shr
inc
movzx
mov
and
mov
shr
and
movzx
and
shl
shl
shl
or
or
mov
shr
movzx
and
shl
or
mov
shr
movzx
and
shr
or
movzx
and
lea
add
push
or
xor
pop
rep
fnstenv
mov
mov
xor
and
xor
mov
fldenv
shr
xor
and
inc
mov
mov
shr
and
movzx
mov
shr
and
movzx
and
shl
shl
shl
or
or
mov
shr
movzx
and
shl
or
mov
shr
movzx
and
shr
or
movzx
and
add
pop
or
cmp
pop
pop
jl
stmxcsr
mov
and
and
or
mov
ldmxcsr
mov
pop
ret
push
call
mov
xor
ret
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
mov
movapd
unpcklpd
psrlq
pextrw
movapd
movapd
movapd
movapd
movapd
andpd
orpd
addpd
pextrw
and
movapd
movapd
andpd
subpd
mulpd
subpd
addsd
mulpd
movapd
addpd
and
sub
cmp
ja
sub
add
cvtsi2sd
unpcklpd
shl
add
mov
mov
cmp
cmove
movapd
movapd
movapd
mulpd
mulpd
addpd
movapd
mulsd
movapd
mulpd
movapd
andpd
addpd
addpd
mulpd
mulsd
addpd
movapd
mulpd
movapd
unpckhpd
mulpd
sub
movapd
addpd
unpckhpd
addsd
addsd
addsd
movlpd
fld
add
ret
movlpd
movapd
cmpeqsd
pextrw
cmp
ja
cmp
je
cmp
ja
movlpd
movapd
movapd
andpd
orpd
cmpeqsd
pextrw
cmp
je
fld
ret
mov
jmp
movlpd
divsd
movlpd
mov
jmp
movlpd
mulsd
mov
jmp
add
and
cmp
jae
xorpd
divsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
fld
add
ret
movlpd
movlpd
movd
psrlq
movd
and
or
cmp
je
mov
jmp
lea
jmp
int3
int3
int3
mov
or
jne
fxch
fyl2x
jmp
mov
xor
fldl2e
fmulp
call
fld1
faddp
test
je
fld1
fdivp
test
jne
fscale
or
je
fchs
jmp
call
or
je
xor
cmp
je
not
fxch
fabs
jmp
jmp
jmp
fstp
fstp
fld
mov
ret
fldln2
fxch
ftst
fstsw
fwait
test
jne
fyl2x
ret
mov
fstp
fld
ret
or
jne
ret
fldlg2
jmp
fldln2
fxch
or
jne
fyl2x
ret
jmp
call
fstp
fstp
or
jne
fldz
cmp
jne
or
je
fchs
ret
mov
fld
cmp
jne
or
je
fchs
jmp
fstp
jmp
fstp
jmp
pop
ftst
fstsw
fwait
test
jne
fstp
fld
or
je
fchs
ret
mov
jmp
fstp
fstp
fld
mov
ret
or
jne
fstp
fld
ret
fld
fabs
fld
fcompp
fstsw
fwait
test
jne
fld
frndint
ftst
fstsw
fwait
mov
fxch
fsub
ftst
fstsw
fabs
f2xm1
ret
fld
frndint
fcomp
fstsw
sahf
jne
fld
fmul
fld
frndint
fcompp
fstsw
sahf
je
mov
ret
mov
jmp
mov
jmp
push
sub
mov
push
sub
fstp
sub
fstp
fsave
call
add
frstor
fld
add
pop
test
je
jmp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fwait
mov
shl
sar
rol
mov
and
xlat
movsx
and
mov
add
add
jmp
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fxch
mov
fxam
fstsw
fxch
mov
shl
sar
rol
mov
and
xlat
mov
shl
sar
rol
mov
and
xlat
shl
shl
or
movsx
and
mov
add
add
jmp
call
fxch
fstp
ret
call
jmp
fstp
fstp
fldz
ret
fstp
fstp
fldz
test
je
fchs
ret
fstp
fstp
fld1
ret
fstp
fld
test
je
mov
ret
mov
fadd
ret
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fld
test
je
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fstp
fld
cmp
jg
mov
or
ret
fstp
fstp
fld
or
je
fchs
or
je
fld
fmulp
ret
or
je
fchs
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fld
frndint
fsub
fxch
fchs
f2xm1
fld1
faddp
fscale
fstp
ret
mov
and
or
mov
fldcw
ret
test
je
mov
ret
fadd
mov
ret
mov
and
cmp
je
fld
ret
mov
sub
or
mov
mov
mov
shld
shl
mov
mov
fld
add
test
mov
ret
mov
and
cmp
je
ret
mov
ret
cmp
je
fldcw
pop
ret
mov
cmp
je
and
je
fstsw
and
je
mov
call
pop
ret
fldcw
pop
ret
sub
fst
mov
add
and
jmp
sub
fst
mov
add
and
je
cmp
je
mov
cmp
je
and
jne
fstsw
and
je
mov
cmp
je
call
pop
ret
call
pop
ret
fldcw
pop
ret
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jae
fmul
jmp
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jbe
fmul
jmp
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
jmp
push
mov
add
mov
fstp
mov
mov
mov
mov
mov
lea
lea
push
push
push
call
add
fld
cmp
je
fldcw
leave
ret
mov
push
mov
sub
mov
xor
mov
cmp
push
push
je
push
call
mov
jmp
mov
mov
cmp
jg
je
cmp
jg
je
push
pop
sub
je
sub
je
sub
je
sub
jne
mov
mov
mov
mov
mov
fld
mov
fstp
fld
lea
fstp
fld
push
fstp
call
call
pop
test
jne
call
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
sub
je
sub
je
sub
jne
mov
mov
mov
mov
mov
fld
mov
fstp
fld
lea
fstp
fld
push
fstp
call
call
pop
jmp
mov
jmp
mov
jmp
fld1
mov
fstp
jmp
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
jne
mov
fld
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
fld
mov
fstp
fld
lea
fstp
fld
push
fstp
call
call
pop
test
jne
call
mov
fld
fstp
mov
pop
xor
pop
call
mov
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
call
fld
mov
pop
pop
movzx
mov
and
push
push
fstp
cmp
jne
call
dec
pop
pop
cmp
ja
push
push
call
fld
pop
pop
jmp
fld
fld
push
sub
fadd
fstp
fstp
push
push
jmp
call
fst
fld
add
fucom
fnstsw
test
jp
push
fstp
push
fstp
call
fld
pop
pop
jmp
test
jne
push
sub
fxch
fstp
fstp
push
push
call
add
pop
pop
mov
pop
ret
xor
push
push
push
push
push
push
push
call
mov
ret
mov
cmp
jne
call
mov
xor
cmp
setne
ret
mov
cmp
je
cmp
je
push
call
ret
mov
push
mov
push
push
push
push
push
push
call
mov
test
jne
call
cmp
jne
call
call
push
push
push
push
push
call
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
mov
push
mov
push
push
fld
push
push
fstp
call
pop
pop
test
jne
fld
push
push
fstp
call
fld
fucom
fnstsw
pop
pop
fstp
test
jp
fmul
push
push
fst
fstp
call
fld
fucompp
fnstsw
pop
pop
test
jp
push
pop
jmp
xor
inc
jmp
fstp
xor
mov
pop
ret
mov
push
mov
fld
mov
fabs
mov
cmp
jne
cmp
jne
fld1
fcom
fnstsw
test
jp
fstp
fstp
fld
jmp
fcom
fnstsw
fstp
test
mov
jne
fstp
fldz
jmp
cmp
jne
cmp
jne
fld1
fcom
fnstsw
test
jp
fstp
fstp
fldz
jmp
fcom
fnstsw
fstp
test
mov
jne
fstp
fld
jmp
fstp
cmp
jne
cmp
jne
fldz
fld
fcom
fnstsw
test
je
fcomp
fnstsw
test
mov
jnp
fstp
fld1
jmp
cmp
jne
cmp
jne
fld
push
push
fstp
call
fldz
fld
pop
pop
fcom
mov
fnstsw
test
jne
fstp
fstp
fld
cmp
jne
fchs
jmp
fcomp
fnstsw
test
jp
cmp
jne
fstp
fld
jmp
fstp
fld1
mov
fstp
xor
pop
ret
mov
push
mov
push
push
and
add
push
mov
mov
mov
sub
mov
xor
mov
mov
push
mov
push
movzx
mov
mov
sub
je
sub
je
sub
je
sub
je
sub
je
sub
jne
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
push
lea
push
push
call
add
test
jne
mov
cmp
je
cmp
je
cmp
je
and
jmp
mov
fld
and
or
fstp
mov
lea
push
lea
push
push
push
lea
push
lea
push
call
add
mov
push
push
call
cmp
pop
pop
je
call
test
je
push
call
pop
test
jne
push
call
pop
mov
pop
xor
pop
call
mov
pop
mov
pop
ret
mov
push
mov
push
push
fld
frndint
fstp
fld
mov
pop
ret
mov
push
mov
mov
test
je
push
jmp
test
je
xor
inc
pop
ret
test
je
push
jmp
test
je
push
pop
pop
ret
movzx
and
add
pop
ret
mov
push
mov
push
push
and
add
push
mov
mov
mov
sub
mov
xor
mov
push
mov
lea
push
push
push
push
call
add
test
jne
and
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
add
push
call
pop
mov
call
test
je
test
je
fld
push
sub
fstp
fldz
fstp
fld
fstp
push
push
call
add
jmp
push
call
mov
push
call
fld
pop
pop
mov
pop
xor
pop
call
mov
pop
mov
pop
ret
mov
push
mov
sub
push
mov
push
mov
and
test
je
test
je
push
call
pop
and
jmp
mov
and
test
je
push
call
pop
and
jmp
test
je
test
je
push
call
mov
pop
mov
and
je
cmp
je
cmp
je
cmp
jne
mov
fldz
fcomp
fnstsw
fld
test
jnp
jmp
mov
fldz
fcomp
fnstsw
test
jnp
fld
jmp
mov
fldz
fcomp
fnstsw
test
jp
fld
jmp
mov
fldz
fcomp
fnstsw
test
jp
fld
jmp
fld
fchs
fstp
and
jmp
test
je
test
je
mov
push
mov
shr
fld
and
fldz
fucompp
fnstsw
test
jnp
fld
lea
push
push
push
fstp
call
mov
add
add
fst
fldz
cmp
jge
xor
fmulp
inc
jmp
fcompp
fnstsw
test
jne
mov
jmp
and
mov
mov
and
or
mov
cmp
jge
mov
sub
mov
test
je
test
jne
inc
shr
test
mov
je
or
mov
shr
mov
sub
jne
cmp
fld
je
fchs
mov
fstp
jmp
xor
inc
test
pop
je
push
call
pop
and
test
je
test
je
push
call
pop
and
xor
test
pop
sete
pop
mov
pop
ret
mov
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
mov
push
mov
mov
xor
push
xor
inc
mov
mov
push
mov
mov
mov
mov
mov
test
je
mov
mov
or
test
je
mov
mov
or
test
je
mov
mov
or
test
je
mov
mov
or
test
je
mov
mov
or
mov
push
mov
mov
shl
not
xor
and
xor
mov
mov
add
not
xor
and
xor
mov
mov
shr
not
xor
and
xor
mov
mov
shr
not
xor
and
xor
mov
mov
shr
not
xor
and
xor
call
mov
test
je
mov
or
test
je
mov
or
test
je
mov
or
test
je
mov
or
test
je
mov
or
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
mov
or
jmp
mov
mov
and
or
mov
jmp
mov
mov
and
or
jmp
mov
and
mov
mov
and
je
cmp
je
cmp
jne
mov
and
jmp
mov
mov
and
or
jmp
mov
mov
and
or
mov
mov
mov
shl
xor
and
xor
mov
or
cmp
je
mov
and
mov
fld
mov
fstp
mov
or
mov
mov
and
mov
fld
fstp
jmp
mov
mov
and
or
mov
mov
fld
mov
fstp
mov
or
mov
mov
mov
and
or
mov
mov
fld
fstp
call
lea
push
push
push
push
call
mov
test
je
and
test
je
and
test
je
and
test
je
and
test
je
and
mov
mov
and
sub
je
sub
je
sub
je
sub
jne
or
jmp
mov
and
or
mov
jmp
mov
and
or
jmp
and
mov
shr
and
sub
je
sub
je
sub
jne
and
jmp
mov
and
or
jmp
mov
and
or
mov
cmp
pop
je
fld
fstp
jmp
fld
fstp
pop
pop
pop
ret
mov
push
mov
mov
cmp
je
add
cmp
ja
call
mov
pop
ret
call
mov
pop
ret
mov
push
mov
mov
sub
xor
mov
cmp
je
inc
cmp
jl
jmp
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
push
mov
mov
mov
mov
call
lea
push
call
add
test
jne
push
call
pop
fld
pop
jmp
push
push
call
push
call
fld
add
mov
pop
ret
mov
push
mov
fld
fldz
fucom
fnstsw
push
test
jp
fstp
xor
jmp
push
mov
movzx
test
jne
mov
mov
test
jne
test
je
fcompp
mov
fnstsw
test
jne
xor
inc
jmp
xor
test
jne
add
mov
test
jns
or
mov
add
dec
test
je
mov
mov
mov
and
mov
test
je
mov
or
mov
fld
push
push
push
fstp
call
add
jmp
push
push
fstp
push
fstp
call
movzx
add
shr
and
sub
pop
mov
mov
pop
pop
ret
mov
push
mov
push
push
mov
movzx
fld
and
fstp
lea
shl
or
mov
fld
mov
pop
ret
mov
push
mov
cmp
mov
jne
test
jne
inc
pop
ret
cmp
jne
test
jne
push
pop
pop
ret
mov
mov
and
cmp
jne
push
jmp
mov
cmp
jne
test
jne
test
je
push
jmp
xor
pop
ret
mov
push
mov
mov
mov
mov
and
cmp
jne
fld
push
push
fstp
call
pop
pop
sub
je
sub
je
sub
je
xor
inc
pop
ret
push
jmp
push
pop
pop
ret
mov
pop
ret
movzx
and
test
jne
test
jne
cmp
je
neg
sbb
and
lea
pop
ret
fld
fldz
fucompp
fnstsw
test
jp
neg
sbb
and
lea
pop
ret
neg
sbb
and
lea
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
xor
push
push
push
mov
add
movzx
movzx
add
add
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
mov
push
mov
push
mov
mov
mov
lea
mov
bnd
mov
xor
bnd
bnd
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
xor
mov
or
jge
inc
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
dec
jns
neg
neg
sbb
mov
mov
mov
mov
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
cmp
jae
cmp
jae
shrd
shr
ret
mov
xor
and
shr
ret
xor
xor
ret
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
int3
int3
int3
int3
cmp
jae
cmp
jae
shld
shl
ret
mov
xor
and
shl
ret
xor
xor
ret
int3
cmp
je
push
mov
sub
and
fstp
cvttsd2si
leave
ret
cmp
je
sub
fnstcw
pop
and
cmp
je
lea
lea
push
mov
sub
and
fld
fst
fistp
fild
mov
mov
test
je
fsubrp
test
jns
fstp
mov
xor
add
adc
mov
adc
jmp
fstp
mov
add
sbb
mov
sbb
jmp
mov
test
jne
fstp
fstp
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
bnd
mov
pop
xchg
mov
mov
bnd
sub
test
jmp
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
jae
bt
jb
jmp
bt
jae
rep
mov
pop
pop
ret
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
je
mov
mov
dec
add
add
test
jne
mov
cmp
jb
shr
rep
and
jmp
jmp
nop
mov
inc
add
inc
add
sbb
mov
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
cmp
jb
bt
jb
test
je
mov
and
sub
mov
mov
dec
dec
sub
jne
cmp
jb
mov
shr
and
sub
sub
std
rep
cld
jmp
nop
pusha
sbb
add
inc
add
inc
add
and
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
test
je
dec
dec
dec
mov
mov
test
jne
cmp
jb
sub
sub
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
sub
test
jne
cmp
jb
sub
sub
movdqu
movdqu
movdqu
movdqu
sub
test
jne
test
je
sub
sub
mov
mov
sub
test
jne
test
je
sub
sub
mov
mov
sub
jne
mov
pop
pop
ret
jmp
int3
int3
int3
mov
and
test
jne
mov
and
shr
je
lea
mov
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqu
movdqu
movdqu
movdqu
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
add
add
sub
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
lea
mov
pop
pop
ret
lea
mov
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
jae
bt
jb
jmp
bt
jae
rep
mov
pop
pop
ret
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
je
mov
mov
dec
add
add
test
jne
mov
cmp
jb
shr
rep
and
jmp
jmp
nop
xor
inc
add
inc
add
inc
add
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
cmp
jb
bt
jb
test
je
mov
and
sub
mov
mov
dec
dec
sub
jne
cmp
jb
mov
shr
and
sub
sub
std
rep
cld
jmp
nop
loopne
inc
add
and
clc
and
or
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
test
je
dec
dec
dec
mov
mov
test
jne
cmp
jb
sub
sub
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
movdqu
sub
test
jne
cmp
jb
sub
sub
movdqu
movdqu
movdqu
movdqu
sub
test
jne
test
je
sub
sub
mov
mov
sub
test
jne
test
je
sub
sub
mov
mov
sub
jne
mov
pop
pop
ret
jmp
int3
int3
int3
mov
and
test
jne
mov
and
shr
je
lea
mov
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqu
movdqu
movdqu
movdqu
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
add
add
sub
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
lea
mov
pop
pop
ret
lea
mov
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
cmp
jb
mov
ja
movzx
mov
shl
or
movd
pshuflw
movlhps
mov
and
or
shl
sub
xor
movdqu
pxor
pcmpeqb
pcmpeqb
pmovmskb
and
jne
pmovmskb
and
bsr
add
test
cmovne
or
add
jmp
push
pmovmskb
and
shl
xor
sub
and
dec
and
pop
bsr
add
test
cmove
pop
leave
ret
movzx
test
je
xor
test
je
movzx
cmp
cmove
test
je
inc
test
jne
movd
add
pcmpistri
lea
cmovb
jne
pop
leave
ret
mov
and
pxor
pcmpeqb
mov
and
mov
shl
pmovmskb
and
jne
pxor
pcmpeqb
add
pmovmskb
test
je
bsf
add
jmp
mov
xor
or
repnz
add
neg
sub
mov
std
repnz
add
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jb
movzx
mov
shl
or
movd
pshuflw
movlhps
mov
mov
or
and
shl
sub
movdqu
pxor
pcmpeqb
pcmpeqb
por
pmovmskb
and
jne
or
add
jmp
bsf
add
movd
xor
cmp
cmovne
ret
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
lea
pop
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
push
mov
push
push
and
add
push
mov
mov
mov
mov
sub
cmp
mov
jl
movzx
movd
pshuflw
pshufd
mov
and
cmp
ja
movups
pxor
pcmpeqw
pcmpeqw
por
pmovmskb
test
jne
push
jmp
cmp
je
add
movzx
test
jne
xor
cmp
setne
dec
and
jmp
movzx
cmp
je
test
je
push
pop
add
jmp
bsf
mov
add
jmp
xor
jmp
mov
mov
pop
mov
pop
ret
add
add
xchg
add
out
xchg
add
mov
add
ret
add
xchg
add
in
add
repnz
add
push
xchg
add
push
xchg
add
xor
add
push
xchg
add
pop
xchg
add
loopne
add
jbe
add
xchg
xchg
add
mov
add
les
add
hlt
xchg
add
push
xchg
add
and
add
cmp
add
push
add
jle
add
nop
xchg
add
movs
xchg
add
mov
add
rcl
add
xchg
add
add
add
add
dec
xchg
add
pop
xchg
add
push
xchg
add
adc
movs
xchg
add
mov
add
rcl
in
xchg
add
add
add
es
add
cmp
add
push
xchg
add
pusha
xchg
add
ins
xchg
add
jp
add
mov
add
mov
add
rcl
add
xchg
add
jmp
add
xchg
add
cmp
add
pop
xchg
add
ins
xchg
add
adc
add
xchg
add
mov
xchg
add
add
add
xchg
xchg
add
add
add
rcr
add
add
mov
add
add
add
add
pop
inc
add
dec
inc
add
cld
inc
add
inc
add
or
ds
inc
add
test
add
inc
add
inc
add
jo
imul
jae
sub
add
sub
add
add
add
add
jae
sub
add
add
add
add
jo
imul
jae
sub
add
sub
add
add
add
arpl
push
add
add
add
add
add
add
add
outs
add
ins
add
add
add
add
add
jo
imul
jae
sub
add
je
sub
add
add
add
add
add
jae
ins
ins
outs
arpl
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
ins
jne
add
add
add
add
add
jae
gs
popa
ins
jne
add
add
add
add
add
imul
inc
jb
je
arpl
push
arpl
outs
inc
js
cmp
inc
add
inc
add
inc
add
add
inc
add
add
xor
add
inc
add
inc
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xor
inc
add
inc
add
xor
inc
add
xor
inc
add
ss
add
inc
add
inc
add
ss
add
ss
add
ss
add
inc
add
inc
add
inc
add
inc
add
add
add
add
aaa
inc
add
inc
add
aaa
inc
add
cmp
sub
inc
add
inc
add
inc
add
inc
add
cmp
or
inc
add
inc
add
inc
add
add
inc
add
cmp
sar
inc
add
cmp
add
inc
add
bound
gs
add
add
arpl
ins
add
jo
jae
popa
ins
add
add
pop
pop
jae
arpl
ins
add
add
je
imul
add
popaw
jae
arpl
ins
add
pop
pop
jbe
arpl
arpl
ins
add
add
pop
pop
arpl
popa
ins
ins
add
add
gs
bound
add
jo
jb
xor
pop
pop
jb
jae
jb
arpl
pop
pop
jne
popa
ins
imul
gs
jb
arpl
add
and
ja
add
add
fs
gs
add
add
cmp
add
and
add
cmp
cmp
add
outs
jo
jb
je
jb
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
sub
add
jle
add
pop
add
add
add
add
jl
add
sub
add
sub
cmp
add
ds
add
cmp
add
pop
cmp
data16
bound
add
add
bound
ins
gs
add
add
arpl
ins
daa
add
jns
outs
data16
add
add
pusha
ins
outs
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
jae
jb
outs
addr16
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jbe
arpl
and
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
add
arpl
popa
jb
fs
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
jbe
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
imul
imul
ins
outs
je
ins
popa
jo
add
pusha
gs
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
jbe
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
arpl
jns
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
pusha
jne
je
jb
je
jb
imul
dec
add
push
push
dec
add
add
outs
arpl
and
je
bound
add
outs
arpl
and
je
bound
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
outs
gs
pop
add
and
gs
pop
pop
add
add
ins
outs
imul
jae
addr16
add
pusha
jo
popa
arpl
outs
je
fs
gs
and
outs
jae
jb
daa
add
pusha
jo
popa
arpl
outs
je
fs
gs
pop
pop
and
outs
jae
jb
daa
add
add
pusha
ins
popa
outs
popa
gs
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
popa
outs
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
gs
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
push
je
jb
jbe
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
jns
popa
ins
imul
imul
and
jb
daa
add
pusha
fs
popa
ins
imul
imul
jne
je
jb
outs
jb
daa
add
add
pusha
jbe
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
pusha
ins
popa
outs
popa
gs
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
ins
outs
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
gs
je
jb
and
and
add
add
gs
je
jb
arpl
popa
ja
imul
jo
and
arpl
jo
outs
jb
add
add
inc
popa
jae
and
popa
jae
and
arpl
jo
outs
jb
popa
je
sub
and
jae
and
popa
jae
and
jb
jns
add
and
popa
jae
and
gs
jb
push
jae
jb
jo
outs
jb
add
add
and
ins
jo
gs
and
push
arpl
outs
arpl
outs
jb
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
and
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
js
js
js
or
or
add
add
or
add
or
or
pop
or
pop
add
add
add
add
add
add
adc
add
test
xor
or
sub
cmp
add
add
xor
push
push
mov
add
and
or
pusha
push
or
pop
js
jo
jo
or
add
or
or
pop
or
pop
add
add
jne
ins
add
add
add
add
outs
jne
ins
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
or
add
add
add
or
add
ins
add
arpl
outs
add
add
add
add
add
jb
js
je
jb
arpl
jae
add
add
add
pusha
inc
add
add
add
pusha
inc
add
add
add
add
sbb
add
inc
add
mov
inc
add
add
add
add
jns
add
add
mov
mov
ficomp
add
inc
add
add
test
add
inc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
ins
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
dec
dec
inc
add
data16
dec
add
outs
add
dec
sub
inc
dec
sub
add
outs
popa
outs
sub
popa
outs
sub
add
dec
inc
dec
sub
inc
sub
add
add
outs
sub
sub
add
add
xor
xor
add
push
jne
add
outs
add
add
add
add
imul
push
jne
fs
jns
add
outs
fs
jns
add
jae
popa
jns
push
gs
gs
popa
jns
add
push
push
popa
jns
add
add
imul
je
jb
popa
jns
add
add
outs
add
bound
dec
popa
jb
inc
jo
add
jns
dec
jne
add
ins
add
add
jo
dec
arpl
outs
jbe
inc
arpl
dec
popa
outs
jne
jb
add
bound
popa
jb
add
add
dec
popa
jb
push
jo
imul
add
add
dec
jne
jns
add
add
addr16
je
add
jo
gs
bound
add
add
je
bound
add
jbe
ins
bound
add
add
inc
arpl
bound
add
add
inc
dec
add
push
dec
add
dec
dec
das
fs
jns
add
add
fs
dec
dec
dec
dec
and
and
jns
add
cmp
cmp
add
add
push
add
outs
add
add
outs
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outs
add
add
add
add
dec
add
outs
add
add
add
add
push
add
add
add
jns
add
push
add
add
add
add
jns
add
push
add
jne
jb
jae
add
jns
add
add
inc
add
imul
jns
add
add
push
add
je
jne
jb
add
jns
add
add
dec
add
outs
add
add
add
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outs
add
add
jne
ins
add
add
jne
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
add
dec
add
outs
add
popa
add
jns
add
inc
add
bound
jb
jne
popa
add
jns
add
add
dec
add
jb
arpl
push
add
jb
imul
dec
add
outs
add
add
add
dec
add
ins
add
add
add
inc
add
add
jae
je
add
add
push
add
jo
je
add
bound
add
add
dec
add
je
outs
add
add
add
dec
add
jbe
add
bound
add
add
add
inc
add
arpl
add
bound
add
add
add
inc
add
add
add
push
add
add
add
dec
add
das
add
add
add
jns
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
cmp
ins
add
cmp
jae
jae
add
add
add
sub
add
add
add
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
inc
add
inc
add
inc
add
ds
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
aas
inc
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
aas
inc
add
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
add
inc
add
aas
inc
add
add
inc
add
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
add
add
inc
inc
add
inc
add
inc
add
inc
inc
add
add
xor
mov
inc
inc
add
inc
add
inc
inc
add
inc
add
xor
lods
inc
inc
add
inc
inc
add
jo
imul
jae
sub
add
sub
add
add
add
add
add
add
add
add
add
add
jo
imul
jae
sub
add
sub
add
add
add
add
add
add
add
add
jo
imul
jae
sub
add
sub
add
add
add
popa
add
add
popa
add
add
outs
add
add
add
add
add
jo
imul
jae
sub
add
sub
add
add
add
popa
add
add
popa
add
add
outs
add
add
outs
add
add
add
add
add
add
jo
imul
jae
sub
add
sub
add
add
add
arpl
add
jae
je
push
add
add
sub
add
add
add
add
jo
imul
jae
sub
add
sub
add
add
add
imul
sub
add
add
add
add
jo
imul
jae
sub
add
sub
add
add
add
imul
outs
add
add
add
add
add
add
jo
imul
jae
sub
add
sub
add
add
add
jb
je
sub
add
add
add
add
add
jo
imul
jae
sub
add
sub
add
add
add
add
add
add
add
add
add
jo
imul
jae
sub
add
sub
add
outs
add
add
add
jae
add
sub
add
add
ja
sub
add
add
add
add
add
jo
imul
jae
sub
add
sub
add
jne
jb
imul
sub
add
je
add
data16
outs
add
je
imul
jae
sub
add
add
add
add
add
js
je
sub
add
add
sub
add
jae
add
sub
add
ins
add
add
outs
add
sub
add
add
add
add
add
js
je
sub
add
add
sub
add
jae
add
sub
add
add
ja
jae
je
popa
add
add
outs
add
add
add
add
add
add
add
popa
add
imul
add
add
outs
add
add
add
add
jo
imul
jae
sub
add
sub
add
ins
add
add
ins
add
add
je
imul
sub
add
add
add
add
add
jae
add
xor
xor
add
add
push
add
add
add
add
ins
jo
jb
push
je
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
jo
je
imul
add
add
add
add
add
popa
ins
gs
popa
ins
gs
outs
dec
inc
dec
inc
add
add
adc
add
inc
jo
push
outs
ins
imul
jb
arpl
jae
gs
imul
dec
gs
outs
add
add
rol
int3
inc
inc
add
inc
inc
add
inc
inc
add
popa
add
add
add
push
add
add
imul
add
add
add
push
add
add
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
push
imul
add
add
in
push
add
add
add
adc
pop
(bad)
imul
add
in
je
rcr
add
popa
cmc
mov
ret
icebp
sub
add
add
add
xor
(bad)
rol
cmp
add
add
add
fst
(bad)
xlat
add
call
add
inc
add
and
cmps
cli
lds
enter
lods
jmp
add
add
add
into
fs
mov
out
and
out
fild
ds
add
in
inc
int
or
data16
cmp
add
inc
pop
and
dec
ret
pop
add
adc
mov
jl
and
or
les
xchg
and
add
inc
sbb
ficom
mov
stos
pop
(bad)
or
add
rcl
mov
sub
add
add
add
or
mov
push
test
mov
pop
loopne
fadd
inc
(bad)
imul
add
cmp
(bad)
push
adc
dec
in
and
mov
je
pop
ror
sub
shl
add
add
test
pop
popa
dec
outs
imul
push
add
xor
das
out
daa
push
arpl
jmp
or
outs
outs
dec
sbb
add
add
inc
xor
inc
lods
add
jb
stc
aad
xchg
sub
cmp
lods
push
fidiv
mov
mov
dec
dec
jecxz
add
shl
push
push
sub
mov
repnz
adc
fdivr
cmp
cdq
sbb
sbb
xchg
add
adc
xchg
(bad)
mov
push
or
add
adc
and
xchg
cmp
imul
jmp
es
popf
call
adc
jno
push
dec
mov
push
jg
add
add
mov
shl
pop
lock
(bad)
fld
fbstp
gs
dec
sub
loopne
ins
ret
push
iret
leave
xchg
daa
push
stos
loop
daa
out
pushf
cmps
mov
add
add
inc
dec
shr
hlt
lock
jg
ins
or
add
inc
ret
pop
sub
out
sbb
mov
int
movs
sbb
inc
imul
push
sbb
movs
pop
add
mov
cmp
mov
imul
mov
xchg
push
xchg
xchg
and
adc
push
cdq
out
inc
xor
mov
jno
add
add
sbb
lods
push
xchg
adc
sub
iret
rol
xlat
jge
aas
movs
sbb
mov
fidiv
fidivr
retf
cwde
adc
xlat
nop
cmp
loop
stos
stc
outs
ja
es
or
add
add
xor
or
pop
or
retf
es
push
xchg
xchg
call
mov
leave
ds
mov
out
sar
mov
add
mov
and
and
mov
pop
inc
bound
jp
pop
movs
into
xor
dec
ins
ins
mov
xor
push
adc
and
test
xchg
shl
dec
push
scas
sub
lods
xchg
ror
cli
mov
int
dec
xchg
push
mov
cmp
and
inc
jge
add
inc
sbb
dec
pop
outs
push
scas
(bad)
in
stos
mov
out
(bad)
mov
pop
repnz
mov
ds
mov
or
dec
push
xor
adc
fild
cmp
js
fwait
xor
lds
add
add
hlt
pop
cmp
rcl
test
dec
fwait
clc
push
xchg
stos
or
scas
add
sub
imul
aad
jbe
ror
(bad)
call
lock
je
pop
cmp
adc
lods
mov
adc
retf
xchg
call
jb
mov
stos
nop
pop
and
xor
jmp
outs
call
xchg
or
lock
repnz
inc
mov
leave
popf
xchg
or
jl
add
imul
cmps
adc
pop
rol
inc
jp
in
mov
adc
cwde
int
lds
adc
pop
rcl
mov
mov
add
leave
dec
sbb
dec
jns
or
shr
ins
pop
call
into
jb
(bad)
js
mov
xchg
in
add
add
add
mov
outs
jge
fwait
out
cmp
mov
xor
(bad)
call
fidivr
pop
inc
adc
jne
es
addr16
arpl
std
jecxz
cmp
xor
mov
pop
and
inc
pop
fcom
sbb
push
fs
jge
das
add
dec
mov
cmc
loope
dec
mov
in
out
dec
addr16
mov
test
cmp
ret
int3
xchg
sub
aas
cmp
div
js
fild
rcr
ds
pop
in
ja
retf
pop
push
das
add
add
add
adc
hlt
push
or
loope
mov
cs
mov
outs
jp
mov
ja
dec
ror
shl
clc
test
addr16
lods
mov
enter
popf
xchg
add
dec
pop
cmp
fst
call
sbb
or
stos
xlat
jl
loope
pushf
movs
fwait
jne
mov
pop
add
add
add
aam
icebp
add
jb
sbb
ss
stos
js
sub
jmp
adc
push
add
mov
inc
sahf
mov
ret
jl
bound
and
fld
adc
stos
lea
xchg
xchg
test
shl
rol
add
add
fwait
pushf
push
icebp
lods
fadd
sub
cmp
jae
ins
jmp
add
mov
and
xlat
test
fst
iret
add
xchg
cmp
push
call
sti
pop
pop
das
cmps
dec
mov
dec
in
bound
inc
data16
adc
repnz
test
in
ja
sti
cmc
shl
jbe
jmp
dec
hlt
xor
icebp
mov
adc
dec
jae
(bad)
pusha
inc
adc
cmp
mov
and
fimul
inc
dec
stc
(bad)
ins
add
add
push
les
bound
jmp
mov
aad
lea
add
adc
ss
sahf
sub
hlt
or
dec
repz
cmps
movs
ja
and
int3
das
jb
xor
mov
xor
xor
jbe
and
int
ds
(bad)
jo
fstp
xchg
adc
std
sbb
inc
clc
fnstsw
out
xchg
imul
icebp
mov
scas
stos
mov
sbb
add
add
add
inc
stos
ret
fnstenv
sub
xlat
loope
cwde
das
out
or
jb
sbb
(bad)
into
fadd
sub
fld
lea
daa
lods
shl
mov
mov
push
mov
jmp
inc
fmul
popf
retf
lds
push
ret
mov
push
add
adc
mov
add
std
ss
jbe
loope
bound
add
add
sbb
add
shl
sar
jae
fstp
cs
mov
loop
arpl
mov
aad
popa
xchg
and
or
sub
pop
pusha
push
mov
jae
icebp
pusha
(bad)
retf
fild
aaa
xchg
data16
dec
sbb
lea
ss
lds
enter
and
push
add
add
fs
rcr
fstp
out
mov
cmp
test
std
and
iret
retf
movs
lea
mov
dec
movs
outs
or
je
push
mov
push
(bad)
je
aam
mov
push
int3
pop
mov
jmp
push
les
fstp
icebp
mov
jno
arpl
sub
add
add
add
mov
ja
cmp
rol
je
stc
ret
xchg
out
push
in
lods
pushf
mov
pop
cli
in
mov
lods
rcr
int3
scas
test
pop
popf
shr
call
outs
xchg
imul
cmp
xor
cmp
mov
test
push
es
fimul
cmp
mov
sub
jle
in
cdq
push
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
pop
and
add
or
add
or
add
push
add
pop
add
imul
add
push
nop
add
fxsave
push
adc
add
adc
add
adc
add
adc
add
adc
inc
add
push
pop
add
pop
jo
or
mov
or
mov
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
daa
add
mov
inc
sldt
loope
add
xor
add
xor
dec
dec
inc
add
add
and
inc
dec
add
xor
push
dec
inc
dec
add
xor
dec
dec
inc
add
add
add
add
popa
inc
add
add
add
popa
inc
add
add
add
popa
inc
add
add
and
add
popa
inc
add
add
add
popa
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
push
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
inc
add
add
add
popa
inc
add
add
add
popa
inc
add
add
add
popa
inc
add
add
loopne
inc
add
popa
inc
add
add
add
popa
inc
add
add
add
popa
inc
add
add
add
bound
and
add
or
add
add
add
dec
inc
add
add
add
bound
and
add
sbb
add
bound
add
add
bound
daa
add
add
bound
sub
add
cmp
add
add
add
inc
add
add
add
inc
add
add
push
bound
sub
bound
das
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
dec
add
add
bound
dec
add
add
bound
dec
add
add
bound
dec
add
add
bound
dec
add
add
bound
push
add
add
bound
push
add
add
bound
push
add
add
arpl
pop
add
add
arpl
add
add
arpl
jg
add
enter
add
add
arpl
add
add
inc
add
add
add
arpl
add
add
in
inc
add
arpl
push
add
add
inc
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
add
add
add
add
js
inc
add
arpl
push
add
add
add
add
add
test
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
add
shl
adc
arpl
push
add
add
arpl
sbb
add
arpl
sbb
add
arpl
sbb
add
arpl
sbb
add
fs
add
add
adc
inc
add
fs
add
add
add
inc
add
add
add
fs
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
je
inc
add
fs
add
add
add
add
cwde
fs
add
add
add
add
mov
inc
add
add
add
add
enter
sub
fs
add
add
add
fs
add
add
add
fs
add
add
add
inc
add
gs
add
add
add
add
sub
add
add
add
add
inc
gs
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
jl
inc
add
add
mov
add
add
xchg
gs
add
add
add
mov
add
add
gs
add
add
shl
add
add
fsub
add
add
call
add
add
gs
add
add
inc
add
add
or
inc
add
add
sbb
add
add
and
inc
add
add
xor
add
add
cmp
inc
add
add
dec
inc
add
add
pop
inc
add
add
push
add
add
inc
add
add
add
add
add
mov
or
add
inc
inc
add
or
add
add
mov
or
add
inc
add
add
shl
add
or
add
inc
add
or
add
inc
add
add
hlt
inc
add
or
add
addr16
add
or
add
inc
add
addr16
add
add
xor
add
or
add
inc
add
or
add
add
add
pusha
addr16
add
add
js
inc
add
or
add
or
add
add
mov
or
add
add
mov
or
add
addr16
add
or
add
addr16
add
or
add
addr16
add
add
hlt
addr16
add
adc
add
inc
add
add
adc
add
adc
add
inc
add
adc
add
push
add
xor
inc
add
add
inc
push
add
dec
push
add
pop
push
add
push
adc
add
add
adc
add
adc
add
add
cwde
push
add
movs
push
add
mov
inc
add
adc
add
push
add
fsubr
add
sbb
add
push
add
lock
add
cld
push
add
or
add
sbb
add
imul
xor
add
sbb
add
inc
add
sbb
add
inc
add
sbb
add
add
sbb
add
add
and
add
add
and
add
and
add
add
mov
and
add
and
add
add
enter
cmp
add
imul
in
inc
add
sub
add
imul
cld
imul
or
add
sub
add
inc
add
sub
add
push
add
xor
add
inc
add
xor
add
push
add
xor
add
add
xor
add
inc
add
xor
add
add
xor
add
inc
add
cmp
add
add
cmp
add
cmp
add
add
cwde
push
add
inc
add
movs
push
add
inc
add
mov
inc
add
inc
add
mov
dec
add
enter
or
aam
inc
add
push
add
loopne
inc
add
add
in
push
add
jl
add
push
add
jb
add
add
bound
add
add
add
popa
add
add
add
push
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
jae
add
add
data16
add
add
data16
add
add
push
add
add
jne
add
add
imul
add
imul
add
push
popa
add
add
add
outs
add
add
add
ins
add
add
add
outs
add
add
add
ins
add
add
add
je
add
add
jb
outs
add
add
add
jne
add
add
push
add
add
imul
add
add
jno
add
add
jae
jbe
add
add
je
push
add
add
add
add
jb
add
add
imul
add
bound
add
add
add
ins
add
add
add
je
add
add
ins
add
add
add
ins
add
add
add
popa
add
add
add
imul
push
add
add
jp
add
add
add
add
add
ins
add
add
add
popa
add
add
add
imul
add
add
add
outs
add
add
add
imul
ins
add
add
add
imul
add
add
add
jns
add
add
jae
ja
add
add
jne
jp
add
add
je
je
add
add
jo
popa
add
add
add
jne
add
add
je
popa
add
add
add
add
add
add
outs
add
add
add
jb
add
add
jae
popa
add
add
add
outs
add
add
add
ins
add
add
add
outs
add
add
jae
jns
jb
add
add
jbe
add
popa
add
sub
add
add
add
add
inc
add
add
popa
add
add
add
jae
sub
add
add
add
add
add
add
add
add
ins
add
add
add
imul
dec
add
add
jb
sub
add
add
add
add
add
jne
sub
add
add
jae
sub
add
add
je
sub
add
add
ins
add
add
add
bound
sub
add
add
ins
add
add
add
je
sub
add
add
outs
add
add
add
jne
sub
add
add
jb
sub
add
add
imul
add
dec
add
add
jno
sub
add
add
jbe
sub
add
add
add
add
add
add
add
add
jb
sub
add
add
add
add
add
imul
add
inc
add
add
add
add
add
ins
add
add
add
je
sub
add
add
add
add
add
add
add
add
popa
add
add
add
imul
dec
add
add
jns
sub
add
add
jp
sub
add
add
add
add
add
jne
sub
add
add
imul
add
dec
add
add
add
add
add
push
add
add
jp
jne
sub
add
add
data16
add
add
popa
add
add
add
outs
add
add
add
imul
dec
add
add
je
sub
add
add
add
add
add
jae
sub
add
add
imul
add
pop
add
add
jns
sub
add
add
ja
sub
add
add
jp
sub
add
add
add
add
add
add
add
add
outs
add
add
add
popa
add
add
add
jne
sub
add
add
add
add
add
add
add
add
outs
add
add
add
ins
add
add
add
jb
sub
add
add
popa
add
add
add
outs
add
add
add
jns
sub
add
add
ins
add
add
add
outs
add
sub
add
add
add
jns
jb
sub
add
add
add
add
sub
add
add
add
jne
jp
sub
add
add
add
jae
sub
add
add
imul
pop
add
add
jb
sub
add
add
add
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
je
sub
add
add
ins
add
add
add
outs
add
add
add
je
sub
add
add
jb
sub
add
add
add
add
add
jbe
sub
add
add
jp
sub
add
add
ins
add
add
add
add
add
add
jae
sub
add
add
jp
sub
add
add
ins
add
add
add
jne
jp
sub
add
add
add
jb
sub
add
add
push
add
add
add
sub
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
jb
sub
add
add
ins
add
add
add
add
add
add
jne
jp
sub
add
add
add
jb
sub
add
add
push
add
add
add
sub
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
jb
sub
add
add
ins
add
sub
add
add
add
jb
sub
add
add
push
add
add
add
sub
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
jae
sub
add
add
add
add
add
ins
add
sub
add
add
add
jb
sub
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
jb
sub
add
add
add
add
add
ins
add
sub
add
add
add
jb
sub
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
ins
add
add
add
ins
add
sub
add
add
add
jb
sub
add
add
outs
add
add
add
jae
sub
add
add
ins
add
sub
add
add
add
jb
sub
add
add
outs
add
add
add
jae
sub
add
add
ins
add
sub
add
add
add
jb
sub
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
outs
add
add
add
jae
sub
add
add
jb
sub
add
add
jae
sub
add
add
jb
sub
add
add
jae
sub
add
add
jb
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
push
add
push
add
add
add
jb
enter
inc
add
add
inc
add
add
sub
add
add
or
add
add
add
inc
add
add
add
inc
add
add
add
add
jb
add
jb
add
jb
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
jb
add
add
shl
add
add
add
jb
add
jb
add
add
add
inc
add
add
add
jb
add
jae
add
add
adc
add
add
add
inc
add
add
adc
add
add
add
jae
add
add
inc
add
add
dec
jae
add
popa
inc
add
add
add
inc
add
add
xor
add
add
ins
jae
add
add
js
inc
add
popa
inc
add
jae
add
add
inc
popa
inc
add
add
add
add
add
add
test
inc
add
add
mov
inc
add
jae
add
arpl
inc
add
add
jae
add
popa
inc
add
add
add
jae
add
add
push
popa
inc
add
add
add
jae
add
jae
add
add
add
je
add
inc
add
add
add
je
add
je
add
je
add
add
add
inc
add
inc
add
add
add
add
add
add
inc
add
add
ins
je
add
add
add
inc
add
add
add
inc
add
add
add
add
nop
je
add
add
add
add
test
inc
add
add
add
add
shl
add
add
je
add
add
add
je
add
inc
add
je
add
add
add
je
add
jne
add
add
add
add
and
add
add
add
add
cmp
add
add
add
add
add
add
inc
add
add
add
add
add
add
bound
and
add
push
add
add
inc
add
add
add
add
add
bound
add
add
add
add
inc
add
add
add
add
js
inc
add
add
add
add
add
inc
add
add
add
add
mov
inc
add
jne
add
jne
add
add
aam
inc
add
jne
add
inc
add
add
add
jne
add
bound
aaa
add
add
jne
add
add
jo
inc
add
add
add
inc
add
add
and
das
add
add
jbe
add
add
popa
inc
add
add
add
inc
add
jbe
add
add
js
inc
add
jbe
add
add
dec
bound
sub
add
inc
jbe
add
add
or
add
add
add
add
add
and
push
add
add
inc
add
add
mov
add
add
add
add
jbe
add
add
nop
popa
inc
add
add
add
add
add
jo
inc
add
jbe
add
add
nop
bound
xor
add
xchg
jbe
add
add
fsub
add
add
add
add
add
add
add
arpl
aas
add
add
add
mov
add
add
add
add
jbe
add
add
xor
add
jbe
add
add
sub
add
add
loopne
inc
add
add
in
jbe
add
bound
sub
add
clc
jbe
add
add
add
inc
add
bound
cmp
ja
add
bound
cmp
add
sbb
inc
add
inc
add
add
add
ja
add
ja
add
add
inc
ja
add
add
dec
ja
add
add
mov
add
add
inc
add
ja
add
add
inc
add
popa
inc
add
add
add
add
bound
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
ja
add
ja
add
popa
inc
add
add
add
ja
add
add
enter
pop
add
add
ja
add
add
call
add
add
js
add
js
add
js
add
add
and
inc
add
inc
add
add
add
js
add
add
sbb
add
add
add
inc
add
add
inc
add
js
add
add
add
inc
add
js
add
js
add
add
add
add
add
popa
inc
add
add
add
add
add
push
add
add
add
add
int3
js
add
js
add
js
add
popa
inc
add
add
add
inc
add
jns
add
add
mov
add
add
inc
add
add
or
add
add
cmp
add
bound
cmp
add
dec
jns
add
bound
cmp
add
push
jns
add
popa
inc
add
add
pusha
jns
add
add
ins
jns
add
add
clc
popa
inc
add
jns
add
add
mov
inc
add
jns
add
add
dec
inc
add
add
add
add
add
bound
push
add
add
add
test
inc
add
add
test
inc
add
jns
add
add
inc
bound
daa
add
add
jns
add
add
in
inc
add
add
lock
add
add
add
jp
add
add
add
jp
add
jp
add
jp
add
jp
add
jp
add
add
dec
jp
add
add
popa
add
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jp
sub
add
add
ins
add
add
add
jp
sub
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
jae
sub
add
add
add
add
add
popa
add
add
add
jae
sub
add
add
jns
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
ins
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
je
sub
add
add
jne
sub
add
add
popa
add
add
add
imul
imul
outs
add
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
ins
add
add
add
jne
sub
add
add
add
add
add
imul
outs
add
add
jb
sub
add
add
jb
sub
add
add
jne
sub
add
add
jns
sub
add
add
add
add
add
jae
sub
add
add
je
sub
add
add
je
sub
add
add
popa
add
add
add
popa
add
add
add
imul
add
jp
add
imul
add
add
add
outs
add
sub
add
add
add
outs
add
add
add
jns
sub
add
add
add
add
add
add
add
add
imul
jp
add
ins
add
sub
add
add
ins
add
add
add
outs
add
add
add
jb
sub
add
add
jae
sub
add
add
jae
sub
add
add
je
sub
add
add
bound
sub
add
add
ins
add
add
add
ins
add
add
add
outs
add
add
add
jae
sub
add
add
popa
add
add
add
ins
add
add
add
je
sub
add
add
je
sub
add
add
jne
jp
sub
add
add
add
jne
jp
sub
add
add
add
jne
jp
sub
add
add
add
outs
add
add
add
jne
sub
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
imul
add
ins
add
add
add
ins
add
sub
add
add
add
ins
add
sub
add
add
add
ins
add
sub
add
add
add
ins
add
sub
add
add
add
ins
add
sub
add
add
add
ins
add
sub
add
add
add
jno
sub
add
add
jb
sub
add
add
ins
add
add
add
jb
sub
add
add
add
add
add
jb
sub
add
add
ins
add
add
add
jb
sub
add
add
add
add
add
jbe
sub
add
add
jbe
sub
add
add
ja
sub
add
add
jns
jb
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
popa
add
add
jb
sub
add
add
jp
sub
add
add
ins
add
add
add
jp
sub
add
add
add
add
add
imul
outs
add
add
push
add
add
jp
push
add
jae
add
add
jp
push
add
je
add
add
jp
push
add
add
jp
push
add
add
jp
push
add
add
jp
push
add
add
jp
push
add
add
jp
jne
sub
add
adc
add
add
add
add
add
ins
outs
xor
add
aas
add
add
add
lock
xor
add
add
add
add
add
pop
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
rcr
add
add
add
fstp
adc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
cmp
(bad)
jg
add
cmp
(bad)
jg
js
push
adc
pop
mov
pop
xor
pop
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
into
xchg
(bad)
adc
xor
or
xor
rcl
xchg
fadd
push
aas
neg
push
inc
xor
jp
mov
ins
jp
aas
add
add
add
add
add
xlat
mov
or
add
add
dec
or
sbb
xchg
std
aas
add
add
add
loopne
add
jo
add
and
inc
add
add
das
add
push
add
add
(bad)
push
fimul
leave
(bad)
aas
xor
fimul
leave
(bad)
aas
add
add
add
lock
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
aas
jg
xor
fimul
leave
ds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
add
add
xor
add
add
jo
jo
ja
popa
jae
outs
add
add
popa
arpl
add
add
jae
jb
add
lock
inc
add
dec
add
push
add
add
or
not
cmp
fidiv
add
imul
add
xchg
aas
sbb
cld
cmp
ficomp
sahf
rcr
xor
neg
lods
mov
or
sbb
idiv
mov
icebp
bound
or
push
pop
cmps
aas
fist
sbb
mov
xchg
ror
push
shl
cmp
xor
lods
aas
pop
inc
fprem
fstp
cmp
adc
mov
jbe
scas
sub
pusha
icebp
in
pop
pushf
mov
aam
push
push
aas
loopne
cmp
sbb
mov
loop
cmp
daa
xchg
mov
rep
(bad)
int
les
cmp
jae
mov
lahf
jge
and
ret
pop
cmp
ja
mov
jp
mov
cmp
or
mov
int3
in
cmp
mov
mov
xor
icebp
ss
mov
mov
and
push
sub
es
sub
jmp
add
mov
repz
and
mov
lea
mov
add
cmp
fwait
ins
sar
cli
loope
lea
fisubr
lock
mov
cmp
aas
mov
xchg
icebp
sbb
add
(bad)
push
ret
ja
inc
or
sbb
test
or
add
pshufw
aas
jmp
mov
je
les
xor
mov
cmp
and
les
push
push
cs
jne
lds
sub
fbstp
cmp
sbb
lds
adc
sub
add
nop
push
mov
cdq
xchg
cld
sub
in
cmp
add
ins
pop
and
aas
int
inc
bound
push
sbb
xchg
mov
aas
lds
xchg
push
add
enter
xchg
add
push
or
int3
enter
iret
mov
add
out
fistp
aas
in
(bad)
jp
and
pop
jmp
repnz
push
xor
mov
sub
add
push
lds
stos
fs
imul
stc
jl
mov
aas
jb
js
and
xor
jecxz
int3
aas
jl
push
int
retf
xor
popf
xchg
int3
aas
jb
out
inc
mov
cmp
sti
adc
aas
or
sbb
pop
lahf
int
jae
xlat
mov
add
push
cmp
xchg
repnz
into
aas
xchg
adc
pop
pop
iret
aas
add
pop
cmp
sbb
idiv
and
pop
or
aas
jg
push
and
pop
cmp
or
(bad)
adc
cmp
xor
mov
cmp
jno
sar
xor
xor
add
sar
sbb
cmp
das
inc
sar
mov
xor
xchg
jp
aas
cdq
pop
sub
cmp
jp
sar
jle
jmp
iret
cmp
adc
fisttp
or
cs
daa
cmp
push
sar
stc
pop
movs
sub
jle
cmp
bound
aas
adc
or
sbb
inc
shl
aas
jns
sahf
lods
imul
or
aad
aas
mov
jmp
mov
sar
xor
mov
cdq
xchg
cmp
adc
pop
mov
pop
xor
pop
cmp
add
fstp
add
add
add
fstp
add
add
add
aas
add
add
add
aas
add
add
lock
add
lock
add
loopne
fidivr
add
add
loopne
fidivr
add
add
rcr
aas
add
add
rcr
aas
add
add
mov
add
add
add
add
add
add
add
add
fnstcw
add
add
push
add
aas
add
add
and
add
and
add
loopne
fdivr
add
add
loopne
fdivr
add
add
sub
xlat
aas
add
add
sub
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
ror
xlat
aas
add
add
ror
xlat
aas
add
add
add
aas
add
add
add
aas
add
add
test
(bad)
aas
add
add
test
(bad)
aas
add
add
shl
(bad)
aas
add
add
shl
(bad)
aas
add
add
jo
aad
add
add
jo
aad
add
add
adc
add
adc
add
sub
aas
add
add
sub
aas
add
add
inc
and
aas
add
add
inc
and
aas
add
add
shl
aam
add
add
shl
aam
add
add
pusha
cmps
aam
add
add
pusha
cmps
aam
add
add
push
add
add
aam
add
add
clc
sub
aas
add
add
clc
sub
aas
add
add
js
sar
add
add
js
sar
add
add
cmp
add
add
add
adc
add
add
add
add
clc
dec
sar
add
add
clc
dec
sar
add
add
js
sar
add
add
js
sar
add
add
jo
sar
add
add
jo
sar
add
add
loopne
sar
add
add
loopne
sar
add
add
fdivr
aas
add
add
fdivr
aas
add
add
dec
dec
sar
add
add
dec
dec
sar
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
sar
add
add
jo
sar
add
add
pop
imul
add
sar
add
add
mov
add
add
add
add
add
add
add
add
jmp
add
add
sar
add
add
fadd
sar
add
add
fadd
sar
add
add
cmp
add
cmp
add
adc
aas
add
add
adc
aas
add
add
jo
sar
add
add
jo
sar
add
add
shl
aas
add
add
shl
aas
add
add
cwde
add
aas
add
add
cwde
add
aas
add
add
loopne
iret
aas
add
add
loopne
iret
aas
add
add
sub
add
add
sub
add
add
and
iret
aas
add
add
and
iret
aas
add
add
shl
aas
add
add
shl
aas
add
add
pusha
lahf
into
aas
add
add
pusha
lahf
into
aas
add
add
add
aas
add
add
add
aas
add
add
nop
sbb
aas
add
add
nop
sbb
aas
add
add
xor
int
add
add
xor
int
add
add
rcl
add
xchg
int
add
add
push
pop
int
add
add
push
pop
int
add
add
loopne
int
add
add
loopne
int
add
add
pusha
jecxz
aas
add
add
pusha
jecxz
aas
add
add
lock
int3
aas
add
add
lock
int3
aas
add
add
jo
int3
aas
add
add
jo
int3
aas
add
add
add
int3
aas
add
add
add
int3
aas
add
add
xor
aas
add
add
xor
aas
add
add
add
retf
aas
add
add
add
retf
aas
add
add
add
loopne
adc
add
sar
add
add
jl
add
add
add
add
mov
add
add
xchg
adc
add
sbb
add
and
add
enter
or
jl
add
add
add
xchg
adc
add
xor
add
fdivr
push
add
add
xchg
adc
add
cmp
inc
add
add
add
inc
add
add
inc
xchg
or
add
dec
xchg
adc
xchg
sbb
add
pop
xchg
sbb
add
xchg
adc
add
ins
xchg
sbb
add
je
inc
add
add
add
add
add
add
add
mov
add
nop
xchg
and
add
xchg
xchg
and
xchg
add
add
imul
arpl
push
je
outs
push
popa
je
outs
add
add
popa
je
outs
xor
add
jae
outs
add
jae
je
outs
add
imul
outs
outs
jb
add
popaw
bound
add
add
data16
add
ins
fs
add
add
popa
bound
add
pop
push
add
ins
outs
add
add
data16
js
add
add
xor
pop
jns
add
outs
add
outs
bound
add
pop
outs
gs
popa
data16
jb
add
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
add
add
add
add
add
add
add
imul
add
add
js
jb
add
add
inc
add
add
popa
add
add
jae
ja
popa
add
add
add
add
jbe
je
add
add
popa
add
add
and
and
add
add
inc
add
add
add
add
add
and
and
and
add
add
je
popa
add
je
imul
and
and
add
add
add
ins
add
add
js
add
add
jo
add
add
add
push
add
jae
jne
ins
add
add
add
and
add
add
add
add
add
add
dec
add
add
add
add
add
inc
add
jb
jb
add
je
and
data16
ins
add
add
and
and
add
add
arpl
add
popa
add
imul
and
add
add
add
add
add
push
add
inc
add
push
add
and
dec
add
dec
add
cmp
and
and
and
add
add
xchg
fadd
inc
add
xchg
pop
adc
pop
add
add
add
add
xor
mov
add
add
add
add
adc
pop
add
add
or
add
adc
add
xchg
mov
add
add
pop
adc
pop
add
add
or
add
add
jne
add
add
add
adc
pop
add
add
push
add
add
mov
inc
add
add
add
inc
add
add
add
and
add
sub
add
inc
push
aas
bound
retf
mov
cmp
lds
ja
add
add
pop
push
popa
outs
jae
ins
pop
pop
bound
pop
push
jae
popa
je
push
bound
add
add
add
add
add
add
add
add
add
add
inc
push
dec
add
add
pop
pop
add
cs
js
and
outs
add
add
add
add
xor
add
imul
add
add
add
add
add
xor
arpl
add
cmp
add
add
add
cs
push
push
and
inc
inc
add
add
cmp
add
add
add
cs
push
push
and
inc
inc
inc
add
add
add
add
add
cs
push
push
and
inc
pop
add
add
inc
xor
add
add
cs
push
push
and
dec
inc
add
add
dec
xor
add
add
cs
push
push
and
dec
inc
inc
add
add
add
add
cs
push
push
and
dec
inc
inc
add
add
add
or
add
cs
push
push
and
dec
inc
add
add
pop
xor
add
add
cs
push
push
and
dec
pop
add
add
pusha
xor
add
add
cs
push
push
and
push
inc
add
add
xor
add
add
add
inc
push
push
and
push
pop
add
add
ins
xor
add
add
cs
push
push
and
push
pop
inc
add
add
add
add
add
cs
push
push
and
push
pop
add
add
je
add
add
add
cs
push
push
and
push
inc
add
add
js
add
or
add
cs
push
push
and
push
pop
add
add
xor
add
push
add
cs
popa
je
add
push
mov
add
add
cs
popa
je
and
js
popa
je
add
add
add
add
add
jb
popa
je
and
jp
bound
add
cmp
add
jb
arpl
inc
inc
add
add
cmp
add
add
add
cs
arpl
pop
pop
add
add
inc
mov
add
add
cs
arpl
inc
inc
add
add
inc
mov
add
add
cs
arpl
pop
pop
add
add
dec
mov
add
add
add
js
popa
je
and
add
add
and
add
sub
add
imul
add
add
add
add
imul
add
add
add
xor
add
imul
add
add
add
imul
add
add
mov
add
cs
je
add
add
sldt
bound
add
add
add
add
pusha
add
add
jb
jb
and
xor
add
add
add
add
add
jb
jb
and
xor
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
cld
sbb
adc
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
sbb
cmp
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
sub
add
in
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
pop
inc
add
pop
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
push
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
pop
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
popa
inc
add
popa
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
pop
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
scas
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
fadd
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
fadd
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
in
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
inc
add
add
add
add
add
movs
xchg
add
sub
add
pusha
nop
add
push
xor
add
xchg
add
out
xchg
add
mov
add
ret
add
xchg
add
in
add
repnz
add
push
xchg
add
push
xchg
add
xor
add
push
xchg
add
pop
xchg
add
loopne
add
jbe
add
xchg
xchg
add
mov
add
les
add
hlt
xchg
add
push
xchg
add
and
add
cmp
add
push
add
jle
add
nop
xchg
add
movs
xchg
add
mov
add
rcl
add
xchg
add
add
add
add
dec
xchg
add
pop
xchg
add
push
xchg
add
adc
movs
xchg
add
mov
add
rcl
in
xchg
add
add
add
es
add
cmp
add
push
xchg
add
pusha
xchg
add
ins
xchg
add
jp
add
mov
add
mov
add
rcl
add
xchg
add
jmp
add
xchg
add
cmp
add
pop
xchg
add
ins
xchg
add
adc
add
xchg
add
mov
xchg
add
add
add
xchg
xchg
add
add
add
mov
ins
ins
inc
js
arpl
gs
add
inc
dec
dec
xor
cs
ins
add
imul
je
imul
inc
imul
gs
add
inc
outs
jb
imul
push
arpl
add
popa
ins
inc
ins
ins
outs
arpl
add
add
gs
je
push
outs
outs
ins
push
xor
popa
jo
push
mov
popa
je
inc
jbe
outs
je
add
and
jb
arpl
jae
xor
js
push
add
pop
add
jb
arpl
jae
xor
jb
je
add
jae
dec
popa
outs
fs
gs
add
popa
ins
inc
jb
add
jns
imul
dec
inc
dec
xor
cs
ins
add
popf
add
outs
fs
gs
js
gs
imul
gs
add
push
gs
outs
push
gs
js
gs
imul
gs
adc
inc
gs
jne
jb
outs
je
jb
arpl
jae
jl
push
gs
imul
outs
arpl
jae
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outs
je
inc
add
jne
jb
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
adc
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
add
je
jne
jb
outs
je
push
dec
add
loop
inc
gs
jns
je
ins
push
imul
ins
gs
imul
outs
imul
push
dec
imul
add
dec
jae
bound
addr16
jb
jae
outs
je
leave
add
je
je
jb
jne
dec
outs
outs
push
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
les
je
push
outs
ja
outs
add
inc
gs
popa
jae
inc
jb
outs
jb
add
add
popa
jae
inc
jb
outs
jb
add
add
je
jb
jb
je
arpl
push
arpl
outs
add
mov
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outs
add
or
gs
inc
jb
je
arpl
push
arpl
outs
add
dec
outs
imul
inc
jb
je
arpl
push
arpl
outs
inc
outs
fs
jo
outs
inc
outs
jne
je
mov
ins
ins
outs
arpl
add
inc
gs
popa
ins
jne
add
push
gs
popa
ins
jne
add
inc
jb
add
gs
imul
cmps
add
je
jb
arpl
fs
jae
add
mov
fs
imul
js
add
retf
add
je
je
dec
popa
outs
fs
add
add
je
inc
imul
je
outs
fs
gs
imul
add
loop
dec
jne
je
inc
jns
gs
outs
push
imul
icebp
add
inc
push
dec
jne
je
inc
jns
add
inc
js
je
jb
arpl
jae
jo
inc
gs
outs
fs
gs
popa
outs
fs
gs
js
add
rol
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
gs
inc
push
add
inc
add
popa
jo
jb
add
cmp
jo
ins
ins
outs
arpl
dec
add
je
imul
cdq
add
ins
jo
jb
push
je
imul
add
popa
jo
je
imul
add
outs
fs
imul
gs
js
add
mov
inc
imul
inc
imul
jae
popa
ins
imul
add
gs
inc
dec
inc
push
add
mov
inc
push
dec
outs
outs
add
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
cmps
add
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
add
add
je
dec
popa
outs
fs
add
rol
inc
gs
je
imul
push
add
lods
add
je
jb
arpl
jae
gs
jo
add
jae
inc
imul
jb
add
out
inc
gs
outs
outs
jae
ins
gs
push
add
clc
add
je
outs
outs
jae
ins
gs
outs
fs
inc
add
popa
jo
imul
dec
gs
jo
gs
ins
ins
outs
arpl
adc
push
gs
imul
gs
js
add
add
outs
fs
outs
imul
add
gs
je
inc
imul
jb
je
inc
outs
outs
jae
ins
gs
add
push
popa
imul
jo
imul
add
dec
out
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
(bad)
(bad)
(bad)
(bad)
clc
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
inc
add
inc
add
dec
inc
add
inc
add
mov
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
add
add
movs
add
add
jns
and
add
add
add
cmps
fild
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficomp
and
pop
fisubr
xor
adc
add
xor
inc
add
add
inc
inc
add
add
add
add
add
add
add
inc
add
mov
add
mov
add
mov
add
mov
add
jg
jg
jg
jg
cmps
inc
add
inc
add
inc
add
inc
add
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
rol
jge
add
cmp
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
daa
aas
ds
jae
ins
bound
js
ins
outs
jae
daa
jne
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
daa
and
outs
imul
jb
imul
xor
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
daa
and
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
gs
bound
or
add
add
ins
add
add
xor
xor
bound
xchg
xor
(bad)
xor
xor
xor
xor
xor
xor
xor
ja
test
mov
xor
xor
xor
xor
xor
push
xor
pusha
xor
jl
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
xor
pop
xor
outs
xor
xor
xor
lods
xor
leave
xor
fnsave
add
adc
and
sub
pop
arpl
imul
jnp
xor
ss
ss
ss
movs
lods
ss
mov
ss
fidiv
in
out
add
push
aaa
dec
aaa
je
aam
add
adc
sbb
sbb
cmp
dec
cmp
mov
cmp
pop
cmp
ja
xchg
cwde
cmp
cmp
cmp
cmp
cmp
cmp
outs
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
pop
arpl
stos
ds
mov
or
adc
cs
jo
jle
cdq
aas
movs
aas
add
add
rol
add
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
push
ja
jg
xchg
xor
xor
xor
push
ss
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
imul
cmp
popf
cmp
cmp
cmp
cmp
cmp
cmp
bound
call
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
test
mov
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
add
add
add
push
add
add
xor
xor
xor
xor
enter
das
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
(bad)
adc
pop
cmp
cmp
cmp
cmp
cmp
add
add
sbb
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
les
add
and
cmp
dec
ds
imul
cwde
lods
ds
aas
add
add
add
add
add
push
xor
xor
xor
xor
xor
xor
xor
jb
ja
jge
out
xor
xor
xor
cmp
xor
xor
xor
xor
arpl
jnp
test
ret
fdiv
fnsave
out
in
div
add
getsec
sbb
aaa
mov
movs
aaa
retf
aaa
push
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
xlat
cmp
cmp
cmp
cmp
cmp
loope
out
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
icebp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
ds
ds
aas
sub
aas
lds
add
add
add
adc
push
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jbe
(bad)
cmp
mov
mov
jo
add
add
mov
in
xor
xor
xor
xor
xor
xor
xor
sub
or
adc
cmp
aaa
mov
popf
aaa
lods
aaa
mov
aaa
in
aaa
or
xor
inc
cmp
arpl
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
add
add
mov
enter
fbstp
out
xor
xor
xor
xor
xor
xor
xor
xor
cld
xor
jmp
sbb
ss
jno
test
mov
cmp
jnp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
cmp
mov
sar
or
pop
ds
ds
cmp
push
aas
add
add
add
pop
xor
outs
ss
ss
aaa
(bad)
aaa
in
or
push
cmp
popa
cmp
cmp
cmp
cmp
cmp
cmp
ins
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
popa
lods
ds
add
push
xor
xor
xor
xor
xor
adc
and
jle
xchg
xor
xor
xor
xor
xor
xor
xor
adc
xor
xor
xor
je
jl
movs
xor
iret
xor
aaa
ss
mov
aaa
xor
inc
aaa
push
aaa
data16
js
mov
pushf
aaa
scas
aaa
shl
aaa
in
add
cmp
cmp
retf
cmp
xchg
cmp
cmp
sar
cmp
cmp
fidivr
push
aas
or
aas
dec
aas
jle
test
aas
add
add
or
xor
xor
pushf
xor
xor
xor
xor
xor
shl
xor
xor
xor
xor
xor
xor
xor
ss
cmp
mov
xchg
cmp
cmp
pop
cmp
rol
and
add
push
adc
fstp
jecxz
sbb
and
dec
ds
aas
dec
aas
jg
xchg
add
add
add
push
add
add
xor
fstp
loop
stos
cmp
cmp
cmp
cmp
je
mov
cmp
cmp
cmp
cdq
cmp
test
mov
add
ja
scas
aas
int
jecxz
in
aas
add
add
push
xor
xor
xor
xor
xor
xor
lods
xor
xor
xor
dec
xor
out
inc
xor
xor
xor
div
test
mov
fbstp
cmp
outs
cmp
cmp
cmp
cmp
cmp
cmp
jno
cmp
bound
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
xor
xor
xor
xor
xor
outs
xor
inc
cmp
outs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lea
add
sub
xor
dec
ds
imul
ds
scas
aas
icebp
aas
add
add
add
mov
add
sub
inc
xor
xor
xor
leave
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
and
mov
mov
xor
inc
test
xchg
ss
ss
ss
aaa
shl
fnstenv
fidiv
in
cmc
aaa
add
adc
sub
xor
cmp
arpl
or
imul
cmp
push
cmp
cs
bound
add
push
add
add
xor
xor
xor
(bad)
xor
xor
xor
xor
xor
jle
push
cmp
je
xchg
movs
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
ds
aas
and
add
and
add
add
add
xor
xor
xor
sub
sub
xor
xchg
retf
xor
xor
xor
xor
xor
xor
add
add
add
cmp
dec
xor
xor
xor
xor
xor
nop
xor
xor
shl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
add
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
xor
enter
shl
aam
fdiv
fdiv
loopne
in
call
xor
xor
aaa
mov
push
add
nop
add
add
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movs
cmp
les
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movs
cmp
les
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
xor
cmp
inc
cmp
pop
cmp
je
jl
test
pushf
cmp
mov
mov
cmp
in
in
cmp
add
or
adc
sbb
and
sub
xor
cmp
inc
ds
ds
ds
ds
ds
jl
test
mov
xchg
ds
movs
lods
ds
mov
ds
fdivr
in
in
ds
ds
ds
or
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
ins
aas
je
jl
test
mov
xchg
aas
pushf
aas
movs
aas
lods
aas
mov
mov
aas
aam
fdivr
in
in
aas
hlt
aas
cld
aas
add
add
add
xor
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
movs
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
pusha
cmp
jo
js
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
xor
dec
cmp
pusha
cmp
js
cmp
cmp
mov
mov
cmp
loopne
call
cmp
adc
sbb
and
sub
xor
cmp
inc
ds
ds
ds
ds
ds
cmp
ds
ds
mov
ds
sar
fdivr
loopne
call
add
or
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
pusha
aas
push
aas
cmp
aas
nop
aas
cwde
aas
mov
aas
mov
aas
sar
fdivr
loopne
call
aas
add
add
or
adc
sbb
and
sub
xor
cmp
inc
xor
push
xor
pusha
xor
jo
js
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
add
add
xchg
add
add
inc
xor
pop
xor
je
jl
test
pushf
xor
mov
mov
xor
in
in
xor
add
or
sub
xor
xor
cmp
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
cmp
inc
ds
cmp
sar
add
and
inc
aas
pusha
aas
cmp
aas
mov
aas
add
add
add
sbb
and
add
add
add
clc
xor
xor
xor
pop
xor
xor
xor
xor
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
add
add
pop
mov
add
add
add
in
mov
xchg
and
jnp
dec
cmc
dec
xlat
loopne
mov
and
nop
inc
adc
ror
imul
retf
gs
pushw
inc
int3
in
popf
mov
mov
mov
dec
daa
neg
(bad)
aas
pop
add
dec
fcmove
sahf
and
jle
pop
aas
and
(bad)
xlat
cli
xor
jmp
lea
xlat
clc
jne
(bad)
push
(bad)
std
imul
jg
scas
and
out
test
adc
push
stc
pop
(bad)
sahf
(bad)
xlat
clc
fstp
lahf
call
scas
pop
repz
aas
(bad)
mov
mov
pop
movs
shr
fidiv
cmc
jp
push
retf
hlt
jmp
xor
outs
pushf
cld
outs
or
pop
clc
ins
(bad)
jle
(bad)
std
repnz
stc
call
mov
inc
aas
jg
outs
repnz
sahf
std
iret
cld
(bad)
std
jne
stc
mov
out
cld
(bad)
jmp
cli
idiv
mov
stc
stos
cwde
into
add
loopne
repnz
xlat
clc
xor
shr
(bad)
ja
fidivr
(bad)
call
mov
cld
pop
shr
mov
(bad)
mov
sbb
cld
call
add
jge
imul
mov
cwde
lahf
repnz
mov
jg
pop
jns
imul
out
lock
xlat
cli
xor
sti
cld
inc
aam
scas
dec
out
jl
imul
mov
out
jp
imul
jae
cmc
xlat
clc
add
pop
jecxz
mov
repz
movs
imul
cmp
jbe
sti
jmp
cmps
shl
xlat
xor
jno
retf
(bad)
xlat
clc
xor
push
jecxz
mov
push
dec
adc
dec
cli
fistp
std
sbb
scas
xchg
jle
cmps
loope
icebp
lods
pop
mov
ret
jg
aaa
cli
xor
outs
inc
aas
inc
xchg
jbe
xor
xor
mov
and
jmp
xchg
mov
mov
push
out
inc
or
xlat
pusha
(bad)
iret
daa
popa
mov
out
repz
loope
scas
dec
(bad)
jmp
icebp
jg
jg
jg
std
repz
sar
mov
jg
jle
mov
stc
shr
lahf
(bad)
jmp
(bad)
stc
cmps
dec
cli
out
dec
std
psubsb
jg
icebp
jg
(bad)
stc
add
dec
cli
out
std
ja
lahf
mov
fist
(bad)
push
std
dec
jmp
jle
aas
sbb
dec
inc
mov
xchg
sbb
xlat
jg
add
out
mov
(bad)
jb
out
std
fucomip
lahf
pop
jl
(bad)
cld
jp
cli
out
(bad)
imul
lahf
out
iret
push
out
repnz
inc
(bad)
cld
fld
hlt
iret
pop
cli
(bad)
aas
das
or
out
std
mov
cmps
jg
inc
shl
push
out
lock
sar
mov
(bad)
and
aas
push
lock
xchg
jmp
mov
jle
fild
jmp
call
(bad)
cld
add
arpl
lahf
mov
(bad)
mov
jg
cdq
aas
xchg
stc
jmp
std
repz
popa
cli
out
inc
mov
jnp
fistp
or
(bad)
jne
idiv
mov
cli
pop
sar
mov
mov
cwde
(bad)
stc
lods
push
cli
out
inc
jecxz
mov
(bad)
push
cli
out
cli
jae
lahf
fist
test
dec
xchg
hlt
iret
adc
mov
call
cmp
repz
(bad)
sar
ret
jg
dec
jl
cmps
std
cmps
hlt
iret
fild
hlt
lahf
repz
push
outs
das
call
mov
sti
fucomip
sar
mov
imul
lahf
or
(bad)
sbb
out
fisub
hlt
iret
scas
ret
sbb
inc
test
stc
push
fdivrp
aad
sar
mov
cld
out
clc
adc
loopne
add
add
jmp
hlt
iret
outs
neg
sar
daa
add
pop
and
cmp
(bad)
fistp
aas
dec
(bad)
clc
stos
call
dec
cld
repz
dec
aas
paddd
cli
out
add
iret
(bad)
xor
je
idiv
repz
repz
add
xor
cld
(bad)
hlt
iret
sbb
xor
mov
lds
movs
jg
dec
adc
outs
add
les
jmp
call
mov
in
jmp
std
repz
mov
(bad)
cld
outs
push
in
jmp
cld
out
lock
lea
xchg
sub
outs
mov
and
add
cld
stos
add
hlt
iret
paddd
cli
out
test
cld
inc
inc
jecxz
int3
jmp
inc
mov
lock
xchg
iret
lahf
add
(bad)
(bad)
aas
mov
stc
mov
aad
(bad)
es
mov
jg
cmps
jg
cmp
test
xchg
sar
push
hlt
iret
pop
or
(bad)
cmp
mov
or
out
pop
aaa
sub
iret
jmp
out
push
clc
mov
test
jmp
fwait
inc
jp
cmp
sub
and
pop
add
iret
pop
add
inc
or
cli
in
adc
repz
lea
jae
jmp
inc
hlt
iret
mov
in
fisttp
mov
lahf
push
aas
cmps
jg
xchg
out
sar
lahf
std
movs
hlt
iret
outs
lock
sar
daa
pusha
jmp
icebp
hlt
iret
outs
cmc
xor
mov
xlat
(bad)
fwait
mov
adc
add
loope
dec
(bad)
cld
pop
or
shl
dec
mov
pop
jle
lods
aas
cdq
(bad)
stc
pop
lock
outs
add
xor
jae
lahf
pop
lock
add
xor
imul
stc
fild
push
cmp
scas
add
ffreep
jl
dec
out
xor
and
(bad)
sti
pop
inc
sub
lahf
push
sar
mov
std
repz
psubsw
jle
mov
add
dec
loopne
mov
mov
push
or
daa
cwde
popa
(bad)
jmp
mov
rsqrtps
arpl
fcom
cli
mov
mov
mov
and
jg
addr16
adc
clc
int3
das
mov
fisttp
cld
aad
adc
loopne
inc
clc
in
xor
(bad)
pop
adc
call
jnp
loop
(bad)
lahf
jg
(bad)
stc
xchg
xor
mov
rcl
mov
mov
sar
jecxz
inc
(bad)
cld
sub
pop
adc
xor
jmp
loop
shr
scas
stc
ja
aas
jg
enter
cmc
ja
fnstsw
jg
add
mov
stc
pop
icebp
fistp
xchg
add
shr
pusha
mov
lahf
push
iret
cmps
jg
add
lock
inc
jg
(bad)
fnstcw
jmp
sti
jg
pop
push
mov
pop
cmp
(bad)
ss
arpl
in
ffreep
xchg
std
(bad)
jg
std
repz
(bad)
pop
call
std
jae
mov
out
loop
aas
adc
cmp
dec
idiv
add
sbb
(bad)
jle
cli
out
add
jae
sti
add
(bad)
das
add
add
adc
out
out
js
pusha
mov
stos
add
pop
cld
retf
hlt
iret
lahf
std
cmps
add
mov
retf
inc
or
cmp
cld
call
out
repz
mov
(bad)
stc
out
imul
jl
dec
std
mov
shr
lahf
cli
arpl
mov
std
xlat
clc
lahf
(bad)
out
(bad)
sti
lock
stos
xchg
aas
neg
(bad)
jge
mov
not
clc
mov
pop
(bad)
xor
xlat
clc
ret
jg
push
mov
pop
sti
(bad)
sar
out
std
imul
mov
out
aas
jns
jg
cli
mov
cld
xchg
jg
jg
jg
(bad)
aaa
repnz
jg
push
repnz
(bad)
lods
ja
call
fstp
dec
std
cmps
jg
stc
push
mov
jmp
loope
cmc
fwait
(bad)
loope
add
icebp
(bad)
pop
mov
inc
(bad)
(bad)
dec
lahf
scas
jg
add
jmp
mov
pop
xlat
sti
loop
nop
das
jle
cmc
(bad)
rcl
mov
data16
imul
sbb
jmp
cmc
imul
mov
repz
add
xor
pop
std
cmp
aaa
jge
imul
cmps
inc
out
(bad)
sti
jge
(bad)
std
iret
mov
icebp
jne
mov
std
mov
pop
cld
xchg
cmps
call
shr
aas
cli
hlt
mov
jg
imul
jne
fild
mov
lods
fucomip
(bad)
(bad)
lods
jg
and
pop
jge
aas
std
mov
xor
aas
hlt
pop
call
out
jle
div
jg
jmp
int3
(bad)
(bad)
mov
div
std
mov
xor
je
pop
adc
repnz
lea
(bad)
hlt
jg
stc
sar
(bad)
jle
lahf
std
(bad)
(bad)
std
pop
out
rep
lods
jg
mov
aas
div
aas
sti
mov
out
aaa
and
adc
(bad)
push
cld
repz
mov
jnp
(bad)
pop
imul
aas
std
in
(bad)
fsubr
(bad)
mov
adc
push
add
inc
out
scas
mov
test
xor
sub
(bad)
(bad)
das
(bad)
(bad)
sti
(bad)
std
loop
inc
pop
sti
aad
icebp
jmp
push
inc
das
sti
mov
hlt
jg
xchg
mov
std
in
call
in
call
jg
fwait
call
repnz
jg
(bad)
sti
mov
dec
mov
jb
pop
cmp
add
mov
inc
and
arpl
aas
cli
(bad)
call
pop
mov
ret
icebp
lds
aaa
mov
cld
ja
sbb
bound
(bad)
sar
xlat
cld
mov
pop
std
pop
psubw
out
sbb
mov
in
(bad)
retf
aas
test
(bad)
fcomp
(bad)
and
lahf
clc
scas
call
(bad)
inc
das
(bad)
clc
aas
push
or
cli
retf
or
aas
neg
adc
mov
jmp
(bad)
push
jg
pop
std
cmps
call
sbb
mov
ss
scas
(bad)
fcomip
loop
stc
aas
jle
div
(bad)
repz
jnp
(bad)
sub
ret
adc
dec
cld
push
repnz
xchg
pop
call
jle
mov
mov
repz
jmp
pusha
pop
sahf
(bad)
(bad)
call
dec
inc
mov
mov
lock
test
imul
xchg
cdq
adc
sahf
inc
out
lock
sahf
(bad)
ja
add
xlat
jg
mov
fsubr
push
inc
lahf
(bad)
jnp
in
jmp
popf
mov
mov
xlat
push
mov
xchg
outs
sbb
inc
repnz
sbb
(bad)
xchg
(bad)
rcr
mov
and
fsubr
(bad)
mov
(bad)
call
div
(bad)
or
stos
mov
sar
lods
fcomip
out
cld
imul
pop
jmp
dec
ret
std
mov
inc
lahf
(bad)
imul
mov
jg
pop
jge
iret
std
mov
test
in
pop
cli
arpl
movs
aas
hlt
pop
pop
shl
sub
out
aaa
clc
mov
repz
aas
test
push
xchg
cld
arpl
(bad)
cmp
inc
pop
sub
fcom
jg
(bad)
ds
(bad)
mov
mov
sar
xor
cli
jg
mov
push
mov
call
call
fsub
adc
in
(bad)
call
pop
dec
(bad)
sti
loop
cli
mov
popf
jle
lds
cmc
inc
jg
mul
iret
outs
push
hlt
pop
jg
stc
cld
ja
iret
push
repz
(bad)
jg
dec
jg
jmp
jg
jge
std
ss
jmp
xchg
jmp
(bad)
mov
ret
jecxz
std
mov
mov
sbb
std
in
retf
loope
(bad)
nop
jle
in
sub
not
jg
imul
jg
daa
pop
std
push
jg
push
jg
pop
jnp
fwait
shl
(bad)
mov
(bad)
dec
enter
lods
(bad)
cmps
fcomip
out
cld
lods
mov
test
call
movs
aas
cli
mov
in
mov
mov
mov
inc
nop
rcr
push
push
push
jg
jmp
jg
pop
mov
adc
xor
in
paddw
sahf
rcr
and
push
jmp
std
jmp
dec
mov
mov
call
xor
jg
cld
xlat
fsub
(bad)
cmp
mov
repnz
jmp
jg
out
dec
jp
mov
mov
mov
idiv
mov
jmp
push
pop
outs
jg
lahf
hlt
mov
loop
call
icebp
fistp
iret
lea
inc
std
jecxz
clc
jmp
jg
push
std
xchg
bound
push
(bad)
repnz
push
push
mov
or
mov
repnz
mov
xlat
pop
sti
(bad)
std
loope
cld
cmps
jg
stc
outs
inc
mov
out
or
xor
mov
cld
ror
jmp
jmp
loope
je
jmp
stos
mov
call
outs
call
loopne
mov
jmp
xlat
mov
ret
pop
fadd
jle
mov
mov
out
mov
jmp
mov
lods
jg
pop
sti
paddd
(bad)
loop
mov
stc
jmp
cld
neg
aad
repz
arpl
and
std
std
sahf
cwde
enter
repz
inc
fild
ins
sti
adc
and
clc
jle
mov
dec
sti
pushf
mov
dec
xor
pop
mov
ret
scas
outs
call
cmp
loope
(bad)
imul
sti
mov
add
jp
jle
lahf
cmp
bnd
xchg
cld
clc
in
jecxz
xchg
pop
push
jmp
stc
mov
pop
call
jle
icebp
fs
out
fistp
ss
std
jmp
sti
xchg
std
sub
in
test
jmp
sar
pop
xchg
lods
(bad)
lods
pop
fwait
ins
int
(bad)
fisubr
add
pop
std
lds
dec
call
pop
xchg
dec
neg
ss
fucom
jmp
push
mov
das
(bad)
lods
cli
aas
inc
fwait
(bad)
jmp
icebp
push
leave
jmp
cmc
retf
jg
scas
xchg
jmp
(bad)
(bad)
jg
(bad)
lods
cwde
inc
push
sar
xor
cmp
mov
inc
rol
adc
repz
xor
fucomip
mov
cld
movs
call
jge
inc
call
call
std
cmp
jle
pop
repnz
cld
ja
hlt
push
call
dec
iret
(bad)
out
(bad)
sbb
in
test
icebp
cmp
aas
std
shl
lds
(bad)
jle
push
sbb
push
inc
call
cmc
aas
icebp
(bad)
mov
(bad)
fnstcw
dec
(bad)
cmp
jbe
and
jmp
lock
scas
mov
mov
(bad)
repz
icebp
out
or
sar
jle
inc
dec
push
aas
std
test
clc
scas
(bad)
mov
and
(bad)
fcomp
cli
sbb
cld
sbb
pop
xchg
cwde
(bad)
and
jo
inc
sbb
cld
fistp
dec
push
in
daa
(bad)
clc
das
(bad)
out
(bad)
jmp
sti
xchg
ror
popf
cmc
jg
xlat
icebp
jae
in
ud0
call
scas
cli
dec
sbb
mov
add
ins
clc
xchg
inc
cmps
(bad)
lock
jmp
jne
jbe
icebp
mov
cmps
pop
(bad)
loope
sbb
(bad)
repz
std
lahf
loope
ficomp
jg
lahf
(bad)
(bad)
(bad)
push
loop
cld
inc
aas
sar
clc
jecxz
je
test
pop
jg
ret
cli
stos
or
fisttp
mov
mov
mov
push
aam
out
add
mov
pop
shl
ss
scas
sti
xor
jg
shl
fisttp
jmp
jmp
jmp
out
and
mov
push
imul
aas
std
cmp
xbegin
jg
mov
sbb
jg
fist
adc
pop
and
repz
iret
(bad)
aas
in
call
call
aas
cld
lahf
and
sti
(bad)
(bad)
stos
aad
les
fstp
jge
lods
mov
out
adc
sub
and
mov
add
push
inc
and
fwait
std
sar
xlat
stc
mov
arpl
fnstsw
(bad)
dec
jae
in
or
jmp
jbe
adc
cld
cli
cmps
aaa
jb
dec
imul
fisttp
dec
mov
outs
inc
sti
xor
es
shr
jg
std
scas
mov
sub
push
(bad)
inc
(bad)
iret
out
sbb
pop
icebp
lahf
pusha
js
(bad)
pop
cli
pop
std
push
jno
ja
inc
std
jmp
in
add
rcr
jge
aas
jg
shl
(bad)
std
cmps
(bad)
stos
fisttp
and
lahf
lock
cld
ss
shr
ret
mov
das
les
ja
adc
out
stc
(bad)
dec
rcr
mov
outs
imul
mov
clc
adc
jmp
sti
(bad)
xlat
mov
sti
cmp
inc
mov
mov
pop
dec
sbb
pop
xchg
fistp
jg
aas
stc
int
ret
jg
dec
arpl
adc
retf
rol
(bad)
call
dec
jmp
mov
std
xchg
inc
fwait
int3
pop
cmps
jge
in
jle
fwait
(bad)
sbb
pop
(bad)
(bad)
(bad)
mov
pop
mov
mov
repnz
outs
mov
fcomip
sbb
sar
ins
jnp
in
call
xchg
mov
int3
outs
push
sbb
push
mov
pop
repz
(bad)
loope
nop
inc
inc
paddw
rcr
lock
mov
imul
jp
cli
mov
jp
push
sub
inc
pop
sub
jmp
call
(bad)
add
(bad)
neg
cld
icebp
mov
jge
clc
inc
lods
or
mov
xchg
lahf
cld
xchg
out
jnp
icebp
es
loop
jnp
in
paddd
pusha
pop
pop
pmulhuw
lods
ja
(bad)
in
dec
inc
and
inc
hlt
xchg
mov
repnz
(bad)
clc
das
dec
xor
(bad)
fldcw
mov
call
dec
cmp
xor
aas
jnp
mov
mov
(bad)
sbb
add
scas
sar
(bad)
jg
sar
jg
aas
mov
cdq
aas
hlt
out
inc
int3
cmps
jg
(bad)
jmp
ds
and
es
mov
(bad)
jg
jnp
out
pop
into
jg
jb
sti
mov
repz
mov
mov
aas
stc
fistp
dec
cmp
icebp
push
mov
lds
dec
(bad)
jp
lahf
(bad)
out
(bad)
xchg
(bad)
jg
idiv
idiv
mov
xor
iret
jmp
dec
mov
icebp
scas
(bad)
mov
(bad)
fbld
ss
cmc
repnz
inc
pop
(bad)
sbb
clc
inc
dec
cld
cdq
inc
pop
(bad)
jnp
(bad)
pop
cli
dec
cld
loope
daa
std
clc
add
mov
cld
cwde
jle
adc
add
std
adc
or
cmp
daa
(bad)
lock
hlt
jecxz
(bad)
daa
(bad)
lock
cli
icebp
cmps
std
adc
xor
icebp
(bad)
call
jg
out
arpl
dec
cld
loope
cmps
pop
(bad)
fidivr
icebp
xchg
lahf
clc
ret
mov
jg
ud0
shl
jle
inc
jg
mov
xor
popa
shl
stos
(bad)
jmp
adc
or
xlat
jg
jmp
neg
inc
iret
test
inc
or
cmp
repz
jecxz
cli
or
jmp
pop
dec
shr
and
std
jno
adc
(bad)
fwait
sahf
repnz
push
sbb
jo
mov
jb
(bad)
mov
dec
call
pop
daa
outs
fwait
inc
paddw
jmp
repnz
cmp
daa
jle
aas
not
stc
mov
mov
inc
cli
xchg
jmp
hlt
fcmovu
jg
aaa
and
cmp
shr
(bad)
out
adc
(bad)
pop
mov
(bad)
dec
add
xlat
cld
xor
(bad)
(bad)
lods
jmp
(bad)
add
clc
adc
xor
(bad)
jg
mov
mov
xchg
push
jns
adc
rcr
clc
inc
clts
pop
clc
inc
adc
push
std
sbb
cld
push
pop
cmp
scas
cld
inc
sbb
mov
iret
aas
test
dec
call
nop
cli
lods
and
mov
sub
push
pop
jg
(bad)
cli
pop
(bad)
mov
repnz
xchg
add
mov
outs
in
adc
xchg
imul
clc
add
cmp
cmp
(bad)
cmps
fisttp
sbb
stc
imul
jmp
mov
loope
jl
icebp
outs
mul
inc
test
lods
jg
cld
jl
jmp
mov
icebp
outs
xchg
dec
lahf
cld
dec
cld
or
pop
push
fsubr
cli
ja
mov
cmps
cld
mov
test
cmp
and
jmp
jmp
(bad)
jmp
mov
jg
std
cli
fild
call
fnstcw
jmp
jg
dec
xor
(bad)
icebp
clc
xchg
dec
into
pop
sti
cmps
jecxz
push
call
(bad)
scas
dec
test
int
call
(bad)
ss
daa
stc
daa
dec
les
(bad)
(bad)
call
or
(bad)
cld
inc
xchg
stc
cmps
adc
std
push
jg
shr
mov
push
ror
sti
push
mov
cwde
sahf
iret
gs
mov
test
(bad)
jmp
pop
cmp
xchg
jg
pop
std
movs
sub
cli
inc
jg
fild
cmc
pop
std
retf
jmp
push
loopne
mov
xchg
push
(bad)
ss
mov
or
cmc
repnz
std
(bad)
icebp
sar
mov
cli
sti
xor
test
push
inc
add
push
jp
cld
inc
call
lock
jmp
call
ss
scas
leave
(bad)
jg
jle
jae
jecxz
rcl
fdivp
ret
cmp
jg
jg
imul
push
mov
std
gs
pop
jmp
adc
fidivr
jmp
add
in
inc
icebp
cmc
pop
std
xchg
pop
call
jb
clc
mul
cmc
(bad)
sti
mov
repz
mov
cld
test
cmp
mov
addr16
mov
(bad)
daa
push
adc
movs
jmp
adc
(bad)
lahf
and
cmp
jmp
sub
cli
(bad)
inc
out
rol
adc
jle
cmp
stc
mov
pusha
mov
or
ins
cli
addr16
pop
add
imul
not
call
pop
ret
push
jg
pop
ds
aas
and
not
pop
jg
(bad)
mov
(bad)
(bad)
in
(bad)
sbb
xchg
lods
inc
(bad)
jnp
call
test
in
ss
retf
aaa
std
call
jp
pop
sti
ins
pop
lods
std
idiv
fstp
jecxz
pop
inc
mov
mov
addr16
pushf
nop
xor
xlat
clc
sub
(bad)
movs
cmp
inc
lock
or
call
fwait
call
pop
(bad)
int3
sbb
dec
outs
in
mov
sahf
(bad)
xchg
xchg
(bad)
(bad)
jmp
(bad)
fs
or
xchg
cmc
std
push
jmp
xor
shr
hlt
scas
inc
repnz
and
aas
(bad)
imul
pop
std
push
clc
repz
inc
jb
aaa
clc
mov
por
aas
popf
(bad)
push
call
mov
sti
inc
jg
pop
(bad)
pop
call
dec
pusha
scas
mov
cli
xor
rcr
outs
inc
xchg
add
leave
inc
cld
inc
sar
sub
mov
scas
mov
sbb
add
cld
(bad)
(bad)
mov
mov
fisubr
dec
les
jg
fisttp
cmp
js
repnz
mov
cmps
jmp
inc
mov
(bad)
std
pop
inc
xor
(bad)
sbb
jecxz
cld
cmp
adc
lea
or
ja
ret
(bad)
jmp
mov
loop
cli
and
cmp
push
add
fld
(bad)
mov
jle
repz
out
stc
jmp
fistp
sti
fld
mov
out
hlt
imul
ins
(bad)
fist
and
idiv
(bad)
pop
inc
in
jg
pandn
aas
lds
dec
xor
mov
stos
pop
stc
(bad)
aaa
and
(bad)
out
loopne
(bad)
mov
icebp
jmp
ins
clc
mov
and
outs
or
lahf
clc
ret
jg
mov
inc
repnz
xchg
pop
sub
mov
clc
out
or
pop
std
call
jl
jmp
xchg
(bad)
cld
dec
jle
jl
mov
clc
and
dec
cmp
cld
imul
jg
fbld
sti
inc
(bad)
push
mov
cmp
xchg
cmp
bndstx
imul
mov
ds
jle
shl
xlat
loope
sti
mov
out
jmp
(bad)
ins
push
ins
sbb
movs
or
pop
(bad)
out
and
sar
out
jg
pop
shl
jb
pushf
dec
cmc
(bad)
scas
shr
mov
std
mov
sbb
mul
(bad)
jo
cmps
fnstcw
inc
dec
fcmovnu
push
(bad)
add
imul
stc
fistp
sbb
xor
in
jbe
mov
mov
(bad)
cdq
je
pushf
mov
addr16
dec
ret
mov
pop
arpl
int
mov
jge
imul
(bad)
in
jg
push
adc
imul
scas
gs
jg
pop
fstp
popa
clc
das
jns
in
std
mov
jmp
mov
and
adc
aad
aas
add
pop
outs
out
mov
sub
mov
imul
xor
jle
jg
aas
cmps
pop
add
outs
repnz
inc
push
push
cwde
inc
jp
test
pop
lock
arpl
addr16
jle
cmc
js
repnz
xchg
(bad)
push
push
inc
std
xchg
mov
xchg
jmp
and
mov
hlt
(bad)
scas
cmp
adc
jg
fnstcw
jae
sar
jmp
xor
movs
leave
cmp
les
pop
(bad)
jecxz
cmps
outs
mov
js
(bad)
cli
and
mov
dec
mov
jg
repnz
mov
pop
inc
mov
ss
ret
pop
inc
pop
sub
out
ja
sbb
pop
cli
stos
(bad)
or
pop
sti
cmps
sub
fild
aas
outs
loope
add
push
xor
iret
in
call
jg
idiv
scas
jle
jg
push
(bad)
jg
aas
cld
out
cli
mov
(bad)
pop
std
loopne
xlat
pop
jg
mov
(bad)
cli
pop
inc
jg
dec
sar
xchg
and
pop
(bad)
mov
fnstcw
(bad)
push
lock
outs
mov
pop
sti
inc
std
pop
add
aaa
adc
dec
inc
fild
clc
xchg
xchg
fild
test
std
jecxz
jg
jnp
mov
cmc
jnp
adc
(bad)
lahf
stc
scas
scas
dec
inc
adc
and
sar
imul
ret
jg
push
cli
(bad)
dec
call
(bad)
mov
mov
or
sar
pop
mov
(bad)
ins
(bad)
adc
test
ror
jge
jmp
test
jle
sub
outs
in
cmc
mov
xchg
idiv
mov
call
dec
movs
fild
scas
jle
pop
sti
sub
sti
mov
jmp
jnp
jecxz
jmp
aas
out
scas
std
xor
scas
dec
and
scas
test
repz
shr
aam
xchg
cld
pop
and
mov
or
scas
dec
pop
jg
fwait
std
cmps
jg
outs
inc
sub
aaa
mov
mov
(bad)
pop
cld
stos
pusha
retf
(bad)
loopne
ret
test
scas
icebp
(bad)
add
loop
sub
clc
fbld
mov
scas
jg
push
xlat
cli
outs
call
jge
ja
in
scas
call
(bad)
xchg
dec
mov
jecxz
sti
data16
sti
fwait
jg
scas
sar
xchg
hlt
(bad)
aas
std
sti
and
stc
inc
push
adc
dec
(bad)
sar
dec
mov
call
in
jmp
jge
icebp
push
xor
pop
cld
ret
jo
jle
aas
in
scas
(bad)
xor
push
mov
fild
jmp
jg
std
pop
in
aas
xchg
sar
adc
inc
push
outs
test
(bad)
lock
mov
mov
out
xchg
mov
ret
xchg
jl
jge
xchg
push
jl
jno
inc
push
cli
stc
xlat
jno
inc
mov
shr
jg
pop
inc
jg
aaa
ss
aam
outs
sbb
aaa
clc
data16
cli
repz
xchg
jmp
std
pop
inc
xchg
int3
xlat
outs
imul
and
mov
jg
pop
xchg
push
sar
repz
jb
fwait
add
fisttp
cli
std
daa
(bad)
fdivr
sbb
das
call
sub
fidivr
stc
xchg
dec
js
and
dec
call
sbb
mov
adc
pop
push
stos
stc
scas
ret
mov
stos
call
jle
pop
iret
int
xor
(bad)
jmp
mov
jg
scas
popa
sbb
push
mov
or
dec
cmp
icebp
(bad)
(bad)
jecxz
xor
hlt
rcr
xchg
aaa
jb
(bad)
mov
call
test
sti
xchg
dec
call
adc
enter
sar
xlat
out
sub
ins
xor
pop
sti
scas
push
out
lock
push
pushf
(bad)
sar
xchg
jg
in
mov
inc
aas
add
push
ja
(bad)
mov
mov
pop
clc
fdivr
into
scas
xchg
mov
outs
jg
scas
arpl
in
mov
pop
jmp
js
dec
cld
scas
(bad)
xlat
jg
popf
mov
ins
aas
cli
push
(bad)
mov
cmc
mov
and
jmp
cli
fisubr
(bad)
sub
sar
mov
iret
sahf
call
call
repnz
lock
(bad)
jg
pop
std
cmp
jecxz
repz
(bad)
sar
mov
lahf
lock
(bad)
xchg
jg
lahf
dec
push
pop
lock
outs
dec
(bad)
stc
mov
(bad)
mov
aas
jmp
jg
lahf
cli
or
jmp
in
lahf
(bad)
jmp
clc
jecxz
aad
imul
(bad)
loopne
dec
(bad)
xchg
(bad)
lahf
cld
sahf
jg
lahf
lock
fistp
(bad)
pop
std
outs
jmp
pop
ja
hlt
(bad)
cld
aaa
push
(bad)
aas
call
mov
(bad)
aas
std
lahf
jg
(bad)
test
xor
cld
repnz
out
mov
lahf
stc
(bad)
push
mov
push
mov
fucomip
(bad)
call
push
std
push
jg
out
xchg
jmp
jg
cld
das
(bad)
xchg
es
(bad)
lahf
std
into
aas
neg
cld
jp
pop
mul
(bad)
mov
jg
(bad)
xchg
mov
in
aas
repnz
std
sub
cld
shr
loop
(bad)
pop
jle
jmp
(bad)
sti
imul
push
mov
push
cmc
cli
(bad)
jle
push
pop
std
adc
clc
pop
mul
mov
jg
push
popf
jmp
idiv
push
push
(bad)
and
lahf
std
(bad)
jg
repz
outs
mov
xchg
jmp
jg
xchg
cmp
dec
pop
sbb
(bad)
lahf
repz
(bad)
xchg
(bad)
out
mov
inc
(bad)
popf
mov
jg
xlat
sti
jae
push
(bad)
iret
(bad)
pop
jle
(bad)
sti
(bad)
(bad)
xchg
mov
cmc
(bad)
xlat
aas
clc
aas
stc
mov
out
clc
cmp
fucomip
outs
push
aaa
cmp
loop
mov
call
lahf
cld
inc
jg
jmp
cli
loope
aam
lahf
iret
jg
cmp
imul
sti
out
loop
(bad)
jmp
repnz
vmread
cmps
xor
dec
push
cld
call
retf
(bad)
in
pop
cli
jnp
jmp
fnstcw
jl
(bad)
mov
mov
cld
jecxz
fcos
lock
jecxz
fcomip
aas
(bad)
ds
scas
cld
sar
std
stos
call
enter
push
in
pop
dec
call
cld
cli
pop
call
jmp
mov
cli
(bad)
std
jg
aas
jne
in
(bad)
aaa
cld
xor
push
mov
jle
mov
mov
in
fcomip
pop
clc
adc
pop
std
jge
scas
inc
(bad)
in
jnp
icebp
in
cli
stos
(bad)
hlt
push
(bad)
jge
ja
not
out
aas
dec
(bad)
div
aas
push
jmp
(bad)
jmp
inc
jle
lahf
repz
mov
idiv
xchg
aas
(bad)
out
cmps
out
push
mov
out
(bad)
pop
aas
stc
adc
scas
cld
pop
es
iret
(bad)
std
jmp
jg
outs
pop
(bad)
cmps
mov
das
mov
inc
mov
or
pop
imul
mov
mov
movs
out
fist
(bad)
outs
cli
adc
div
mov
jg
lahf
cmc
out
mov
jge
pop
inc
bnd
jno
sti
cld
in
stc
aas
cli
fwait
std
loope
clc
push
fcomp
(bad)
cld
xor
(bad)
outs
repnz
jle
mov
mov
int3
pop
std
repnz
sti
out
mov
cld
dec
sti
xchg
mov
(bad)
mov
loopne
stc
outs
jle
mov
aaa
jg
lahf
imul
idiv
dec
jmp
(bad)
mov
inc
scas
fdivrp
pop
mov
shl
lds
jp
pop
(bad)
push
mov
xor
ficomp
idiv
lds
fdivrp
in
jmp
outs
neg
cld
mov
int
pop
std
mov
mov
mov
clc
das
cli
aad
call
out
cli
jg
bnd
vmwrite
mov
mov
jge
(bad)
fidivr
fcomip
addr16
pop
jg
mov
dec
sahf
cld
retf
(bad)
cld
outs
imul
std
cmp
out
(bad)
jmp
(bad)
arpl
std
aas
div
dec
fnstcw
stc
pop
cld
das
daa
(bad)
sti
pop
cli
icebp
das
std
sub
push
xlat
mov
out
mov
jg
repz
pop
sti
and
lock
cld
ja
pop
jg
cmc
xlat
std
loope
jg
cmc
imul
dec
jg
pop
lock
inc
retf
(bad)
mov
lahf
(bad)
nop
jg
outs
clc
pop
idiv
into
aas
loopne
jge
fcmovne
(bad)
(bad)
out
scas
(bad)
popf
(bad)
inc
neg
cld
sti
cld
mov
int
sti
mov
out
in
lahf
cld
lahf
inc
lahf
(bad)
aas
out
std
gs
std
scas
jmp
push
out
iret
jg
cli
iret
clc
sub
aaa
jmp
jle
pop
cmc
movsx
xchg
dec
(bad)
clc
pop
js
cmp
std
dec
jmp
vpxor
cld
xchg
jmp
fnstcw
arpl
movs
mov
push
(bad)
fdivr
sar
jg
aad
je
(bad)
aaa
mov
imul
lock
iret
push
sar
jmp
dec
repz
in
jg
fwait
(bad)
cmc
aas
(bad)
mov
(bad)
fwait
std
out
jg
outs
cmc
lahf
jle
das
sbb
(bad)
mov
in
cld
(bad)
dec
out
clc
jmp
(bad)
stc
(bad)
out
std
fbld
cmps
std
dec
leave
sar
pop
test
fucomi
fstp
jg
test
cld
idiv
idiv
mov
(bad)
mov
pop
std
xchg
jg
ficomp
call
das
stc
ins
jle
(bad)
lock
(bad)
cld
es
sub
neg
ret
(bad)
into
aas
cli
imul
ret
jle
aas
cmc
(bad)
lods
jg
jnp
(bad)
(bad)
cld
ud0
mov
cmps
mov
(bad)
out
outs
(bad)
ja
dec
idiv
fbstp
std
inc
cmps
xlat
jg
(bad)
pop
std
ds
in
psubq
aas
lahf
cld
sar
idiv
cmp
pop
test
clc
mov
lods
aas
call
das
stc
(bad)
aas
hlt
mov
dec
inc
out
dec
stc
fcmovnu
dec
addr16
fdivr
cld
pop
cmp
aas
jecxz
aas
stc
movd
xchg
int
repnz
std
sti
jg
pop
stc
pop
jle
aas
jl
idiv
in
repnz
jmp
(bad)
sar
daa
mov
xor
mov
int
sti
iret
stc
leave
push
fstp
push
sti
iret
std
repnz
in
dec
(bad)
adc
xchg
(bad)
in
aas
sti
into
mov
mov
fidiv
out
std
std
jle
(bad)
in
cmc
clc
loope
(bad)
sbb
fstp
jp
sti
std
sub
loop
lds
clc
jge
out
jmp
das
inc
fucomip
clc
pop
std
addr16
addr16
(bad)
dec
iret
jg
mov
iret
push
cmc
out
repz
jg
out
mov
hlt
lahf
call
jmp
jp
(bad)
out
sti
sbb
std
push
mov
sbb
out
aad
(bad)
fwait
inc
jmp
pop
repz
cli
pop
jbe
xchg
mov
dec
(bad)
loopne
pop
sti
idiv
cs
mov
ja
sahf
cmc
lahf
mov
(bad)
cmps
call
call
outs
cli
jg
ds
pop
dec
cs
pop
stc
cmps
jl
sbb
xchg
jg
pop
repz
inc
(bad)
scas
jle
out
(bad)
arpl
mov
stc
mov
xchg
pop
cld
daa
mov
sti
cmc
dec
mov
sar
mov
call
jg
sti
(bad)
cmp
(bad)
cli
jnp
push
jg
mov
mov
jmp
cmc
clc
(bad)
jnp
cmps
call
mov
call
(bad)
in
lahf
clc
or
jb
leave
scas
mul
call
jle
in
addr16
jg
paddb
loope
icebp
push
cld
inc
mov
jmp
(bad)
frstor
in
pop
std
pop
jmp
(bad)
sti
dec
mov
lods
(bad)
stc
not
jns
sti
cs
mov
(bad)
mov
(bad)
loop
aas
icebp
(bad)
(bad)
dec
inc
jg
out
jge
fstp
clc
das
dec
(bad)
xchg
mov
inc
imul
mov
jmp
clc
cmp
repnz
std
xchg
aas
cmc
lds
(bad)
out
int
jg
mov
(bad)
dec
out
dec
jmp
jmp
call
(bad)
mov
sti
mov
in
out
(bad)
jge
sar
je
das
sti
leave
pop
mul
sti
add
hlt
(bad)
cli
icebp
jg
mov
or
mov
(bad)
jg
(bad)
std
pop
mov
pop
pop
cld
(bad)
jmp
dec
lahf
test
xchg
cmp
aas
cmp
xor
(bad)
pop
(bad)
xor
mov
xor
outs
(bad)
fcos
cmc
out
sti
fistp
cmc
dec
inc
loope
aas
(bad)
loop
jmp
mov
sti
into
pop
jnp
iret
stc
neg
out
mov
aas
(bad)
lahf
(bad)
in
dec
push
std
outs
(bad)
stc
lahf
std
repnz
(bad)
clc
(bad)
iret
std
xlat
(bad)
cld
jg
mov
mov
iret
jg
pop
(bad)
sbb
xchg
(bad)
mov
jg
dec
inc
aas
stc
in
repz
stc
fisubr
stc
addr16
cmp
aas
lock
mov
dec
(bad)
(bad)
(bad)
fnstsw
dec
call
mov
arpl
idiv
std
ja
mov
cmc
mov
jg
(bad)
cmps
fbstp
ud0
jg
lahf
repz
cld
jecxz
rcr
jg
out
stc
outs
std
fwait
push
das
sti
adc
mov
push
jg
out
repz
mov
fnstcw
cli
mov
fnstsw
repz
(bad)
xlat
mov
pop
in
(bad)
xchg
dec
fcomip
jg
ja
into
(bad)
(bad)
pop
dec
das
dec
jmp
out
out
sti
xor
lock
out
aas
jge
paddw
(bad)
in
ja
neg
cli
outs
(bad)
xor
sti
scas
repz
in
pop
cmp
or
sar
daa
(bad)
(bad)
ja
out
mov
lahf
(bad)
jecxz
cli
iret
jg
cmc
pop
cli
paddd
jg
jg
cmps
std
inc
aas
clc
cld
aas
std
(bad)
cli
push
fdivr
(bad)
outs
jle
fucomip
(bad)
mov
aaa
stc
pop
jg
fstp
cli
jg
hlt
cmps
jle
xlat
mov
mov
xchg
std
mov
call
out
jg
outs
clc
fstp
repnz
mov
aas
sti
xlat
sahf
(bad)
in
(bad)
push
(bad)
(bad)
lahf
icebp
jmp
(bad)
loop
icebp
scas
(bad)
push
call
push
pop
std
jecxz
lock
pop
cmp
aas
stc
out
fistp
std
in
inc
(bad)
inc
jg
(bad)
mov
(bad)
(bad)
jg
(bad)
inc
fistp
lahf
cld
fsub
(bad)
cmp
pop
sti
inc
jle
cli
(bad)
stc
out
icebp
leave
outs
cli
jg
cmc
aas
(bad)
scas
cld
and
jg
(bad)
mov
jns
fild
pop
lock
call
xlat
pop
cli
std
aas
repz
cld
in
jmp
stc
dec
(bad)
loop
aas
clc
iret
stc
pop
(bad)
stos
mov
sti
std
sbb
mov
call
jg
ja
cmps
pop
cli
sub
cmp
inc
jle
aas
icebp
pop
jmp
(bad)
clc
das
jg
mov
pop
(bad)
repnz
cmp
(bad)
mov
xchg
(bad)
cld
scas
cli
lahf
jle
jg
daa
jle
scas
(bad)
mov
pop
cld
cmp
(bad)
push
jmp
int3
jg
fsubrp
jns
out
mov
fild
(bad)
out
push
jg
add
clc
jg
addr16
out
loope
sub
nop
fnstcw
mov
fucomip
rol
stos
pop
lahf
(bad)
mov
clc
cmc
xchg
jg
cmp
aaa
(bad)
cmps
fcomip
out
cld
mov
fstp
scas
clc
idiv
pushf
push
mov
(bad)
stos
mov
movs
inc
(bad)
fdivr
loop
cld
sub
out
std
retf
(bad)
fistp
jmp
pop
jge
addr16
lock
icebp
jnp
gs
test
aas
icebp
lahf
cld
(bad)
cwde
cld
xchg
ret
lahf
std
push
mov
std
xchg
sti
mov
mov
(bad)
cs
out
push
(bad)
rol
shl
jg
cli
or
scas
cli
in
daa
retf
lahf
jge
jmp
(bad)
aas
stc
cmps
std
mov
cmp
push
fnstcw
daa
inc
(bad)
fsubrp
repz
std
fdivr
(bad)
jnp
iret
jg
mov
jmp
ret
inc
aas
mul
rep
call
in
jg
or
mov
in
pop
std
ud0
pop
clc
scas
inc
jg
mov
hlt
sti
sahf
std
daa
(bad)
sti
call
push
into
scas
(bad)
fstp
(bad)
pop
(bad)
sbb
lods
aas
out
(bad)
cli
dec
(bad)
sar
lahf
call
icebp
daa
mov
jecxz
loop
(bad)
jge
xchg
jecxz
cmc
sti
(bad)
(bad)
fidiv
movs
(bad)
daa
mov
pop
cld
fwait
jg
aas
not
std
push
jg
cld
iret
sti
ins
into
iret
(bad)
mov
pop
idiv
cld
sahf
mov
aas
loopne
cld
(bad)
jmp
(bad)
outs
icebp
mov
pop
push
cmc
pop
call
cmp
std
xchg
jle
pop
pop
cld
or
outs
icebp
pop
call
jg
mov
jg
pop
lock
pop
mov
std
fwait
lahf
std
scas
retf
mov
clc
dec
cld
mov
icebp
out
sti
daa
std
fwait
jg
inc
std
sbb
into
pop
icebp
out
icebp
sar
sbb
cld
sub
cmc
fstp
paddd
jg
iret
call
(bad)
inc
jg
(bad)
xlat
inc
(bad)
xchg
cmc
mov
push
scas
icebp
mov
outs
(bad)
outs
call
in
pop
cmp
xchg
(bad)
out
pop
jae
jg
jg
add
std
(bad)
std
(bad)
mov
cmps
(bad)
fsubr
in
cli
aaa
call
daa
std
stos
(bad)
xlat
(bad)
(bad)
ret
ja
add
push
dec
aas
cld
loop
std
sub
retf
dec
div
movd
daa
(bad)
(bad)
icebp
mov
jg
mov
cld
lahf
outs
jmp
enter
jg
jnp
mov
push
stc
daa
push
mov
xlat
clc
into
pop
icebp
pop
std
mov
outs
push
(bad)
aam
cmc
pop
mov
aas
push
or
lahf
cmc
pop
cmps
aas
neg
fnstsw
ja
imul
in
cmc
repnz
mov
sti
lds
sub
jmp
(bad)
jp
jle
sti
jmp
lahf
cli
das
jge
cmps
cmp
cmp
(bad)
sti
aad
aas
test
aaa
cli
sub
loope
std
fwait
(bad)
(bad)
ins
std
(bad)
ds
mov
lahf
call
mov
mov
(bad)
fistp
outs
stc
paddb
aad
clc
daa
push
pop
sbb
sbb
jg
das
call
(bad)
call
cmc
jg
jg
lahf
inc
ret
(bad)
lods
jg
(bad)
sti
jmp
in
jg
iret
clc
cmp
mov
dec
aas
cmps
(bad)
mov
shr
lahf
cld
(bad)
stos
jg
jmp
ror
(bad)
clc
iret
cld
sar
cmp
clc
jmp
in
mov
cs
shr
std
push
sti
call
out
cmp
add
jns
jg
jg
pop
into
(bad)
jecxz
jg
sbb
mov
inc
jmp
std
lahf
(bad)
(bad)
enter
pop
jae
mov
dec
scas
push
pop
jg
mov
cld
lahf
mov
repz
mov
fxtract
xlat
(bad)
repz
sar
popf
aas
hlt
pop
mov
call
loope
ins
aas
jp
mov
dec
dec
push
std
push
pop
jmp
xchg
(bad)
add
sbb
ds
call
pop
loop
icebp
(bad)
mov
aaa
out
mov
fnstsw
(bad)
clc
xor
add
cli
sbb
push
mov
cdq
stc
sti
(bad)
jmp
out
push
call
aaa
icebp
xchg
into
sbb
imul
cld
sbb
pop
sti
daa
dec
jmp
int
or
mov
and
icebp
vshufps
mov
fistp
fist
dec
(bad)
sbb
pop
sti
imul
aas
cld
outs
inc
sbb
xchg
jg
fldenv
dec
or
push
icebp
mov
cli
ja
mov
jg
fucomip
mov
mov
cld
xchg
(bad)
loope
jmp
scas
(bad)
xlat
(bad)
and
jmp
cmp
sar
into
cmps
mov
jle
jg
(bad)
(bad)
jmp
dec
mov
mov
stos
(bad)
clc
sar
out
in
(bad)
cmp
pop
call
in
jmp
(bad)
std
jg
xlat
adc
push
push
pop
std
ja
cld
pop
mov
pop
cmc
dec
jle
hlt
mov
stc
dec
jmp
in
mov
iret
jle
mov
dec
jle
mov
aas
repz
mov
dec
jg
jg
fwait
std
pop
pop
cld
push
mov
inc
outs
jae
mov
outs
cld
aas
cld
test
cld
jmp
out
or
jg
mov
test
clc
loopne
(bad)
xchg
aas
hlt
mov
in
jmp
sbb
inc
(bad)
sti
(bad)
dec
mul
xor
mov
js
(bad)
aas
sahf
push
das
(bad)
fsubr
(bad)
daa
sbb
inc
leave
icebp
(bad)
jmp
cld
pop
dec
(bad)
mov
xor
jg
out
(bad)
mov
fwait
addr16
mov
in
jns
pop
cdq
sub
jg
pop
(bad)
dec
lock
jae
pop
xor
inc
jg
jmp
inc
hlt
ficomp
sti
jmp
xor
int
xchg
sub
cs
fcom
(bad)
in
xlat
ds
scas
push
sahf
inc
mov
lods
(bad)
loopne
cli
stos
jg
js
enter
cmps
(bad)
fidivr
aaa
mov
std
and
(bad)
xchg
xchg
es
jmp
std
inc
jg
jmp
(bad)
push
jg
jmp
dec
hlt
jmp
(bad)
pop
aas
std
cmp
dec
mov
(bad)
std
pop
call
xchg
push
jmp
fnstsw
(bad)
cmp
test
jg
pop
imul
pop
jg
jg
aaa
clc
inc
jg
pop
jmp
xchg
jg
imul
lahf
pop
rcl
out
inc
stc
(bad)
pop
sti
fisttp
cs
jg
jge
adc
mov
mov
das
dec
sub
push
xlat
cli
pop
retf
cld
clc
stc
imul
(bad)
fild
repnz
xor
mov
imul
stos
pop
std
sahf
call
out
stc
aaa
mov
(bad)
stos
fucomip
scas
arpl
icebp
nop
jg
mov
mov
imul
dec
jmp
adc
mov
cmc
outs
inc
and
out
dec
js
mov
js
std
dec
push
sub
cmp
ficomp
cli
dec
jle
scas
mov
ins
add
push
adc
mov
jl
retf
sbb
out
clc
xlat
add
jae
sti
adc
repz
icebp
(bad)
cli
stos
rcl
adc
(bad)
cmps
jg
or
pop
std
sub
jecxz
int
cmps
and
(bad)
fnstcw
aas
hlt
xchg
cld
ja
out
mov
mov
push
loopne
aad
neg
jg
pop
jne
popa
dec
mov
jmp
jge
test
jg
pop
dec
cld
pop
(bad)
jp
dec
stc
xlat
pop
cli
xlat
and
psrlw
xchg
jg
inc
inc
mov
dec
aas
cld
aaa
sti
fbld
push
inc
clc
ret
(bad)
cli
(bad)
clc
jne
xchg
lds
push
in
loope
pop
ds
push
fild
inc
outs
adc
sub
fadd
scas
std
in
fucomip
(bad)
(bad)
jecxz
cs
sub
clc
leave
js
cli
ds
mov
gs
clc
lock
popa
std
mov
idiv
std
fwait
int
mov
push
lahf
cld
imul
jp
mov
(bad)
cmc
neg
cmp
test
mov
mov
xchg
mov
mov
retf
or
in
sti
in
hlt
(bad)
std
shl
retf
pop
push
stc
mov
jmp
sub
or
sar
aaa
mov
mov
adc
xlat
dec
xchg
mov
mov
std
mov
(bad)
(bad)
loope
clc
xlat
stc
mov
xor
lock
scas
(bad)
jmp
xchg
adc
jg
pop
sahf
mov
inc
stos
(bad)
icebp
clc
in
sbb
or
inc
hlt
jmp
dec
call
call
ud0
clc
(bad)
sti
fild
(bad)
fdivr
push
lahf
cld
les
call
pop
int3
stc
xchg
daa
mov
xlat
fdivr
arpl
je
cli
mov
mov
xor
sub
mov
sub
stos
aas
loope
cmps
aas
movs
int
fisttp
gs
arpl
ja
mov
adc
(bad)
(bad)
imul
jg
icebp
sbb
rcr
(bad)
popf
in
jg
neg
adc
movs
fstp
(bad)
in
push
repz
les
dec
aas
cld
(bad)
shl
bound
add
push
pop
(bad)
icebp
clc
std
lock
dec
xor
(bad)
jle
aas
test
jg
pop
arpl
sbb
cmp
mov
cli
arpl
je
lock
cld
cmp
dec
out
outs
hlt
fwait
leave
mov
push
inc
push
data16
arpl
fistp
cli
(bad)
inc
add
out
(bad)
mov
cwde
push
xor
cld
stc
push
or
xchg
and
mov
fdivr
sbb
pusha
call
jecxz
out
std
sar
cmp
cmc
jle
aas
cli
imul
aaa
mov
lods
jle
push
sbb
stc
inc
jg
xlat
cld
or
psubq
lea
call
adc
cmp
aaa
clc
mov
xchg
inc
mov
cli
cmc
(bad)
inc
jmp
jl
sar
jg
pop
(bad)
movd
sub
pushf
into
(bad)
fsub
inc
clc
icebp
fstp
cli
paddw
add
ficom
hlt
scas
test
push
aas
jle
cli
clc
rcl
inc
fld
jecxz
repz
(bad)
imul
(bad)
out
(bad)
jmp
cld
jmp
(bad)
cmc
adc
pop
leave
jae
mov
loope
mov
xchg
jg
maxps
out
mov
retf
jecxz
sti
loope
lock
(bad)
mov
das
std
sar
leave
(bad)
pop
js
lods
cld
cli
(bad)
pop
jge
cmc
push
mov
pop
inc
scas
aas
in
das
adc
jnp
adc
fwait
mov
cld
call
add
std
pop
arpl
and
fs
xchg
cmp
adc
dec
out
add
repnz
pop
cld
(bad)
out
arpl
mov
fstp
mov
sub
mov
push
push
out
inc
iret
jnp
popf
js
paddw
rdtsc
loope
icebp
(bad)
inc
adc
inc
(bad)
in
outs
mov
mov
mov
jecxz
inc
cmp
mov
sti
loop
xchg
or
jne
(bad)
mov
or
sti
int
push
cld
icebp
pushf
cld
scas
aas
hlt
aas
cli
xor
mov
scas
jns
pusha
pop
sti
lea
lahf
or
push
push
mov
in
ffreep
jnp
xlat
cli
fwait
jle
scas
rol
call
call
dec
loopne
jge
out
jg
(bad)
jg
push
scas
stc
sub
(bad)
ds
pop
ins
push
mov
cld
in
jg
lahf
call
popf
cld
mov
loop
clc
scas
(bad)
fdivr
popa
dec
push
xchg
imul
fscale
pop
jg
mov
stc
aad
lock
push
push
neg
inc
cld
(bad)
jmp
outs
repnz
mov
repz
dec
(bad)
jg
loope
sti
repnz
fild
std
cdq
das
jmp
pop
dec
aas
in
(bad)
jae
out
jmp
addr16
pop
std
ret
imul
imul
jg
aaa
cld
mov
mov
sub
std
xchg
dec
std
out
jmp
jg
ja
in
(bad)
jmp
(bad)
mov
jg
xchg
inc
mov
cld
ins
mov
idiv
sbb
mov
dec
cmps
mov
retf
(bad)
pop
dec
(bad)
fwait
lahf
cld
gs
(bad)
cmps
sar
clc
pop
push
in
hlt
loopne
cld
jge
lahf
push
ja
int
jle
(bad)
cli
dec
pop
(bad)
(bad)
xchg
cmps
jg
repz
iret
cld
mov
aam
(bad)
repz
aas
loope
aas
lock
call
repz
std
ins
jg
pop
mov
stc
inc
jg
dec
jmp
lock
cmc
ja
fcmovbe
in
aaa
sti
gs
(bad)
lock
cli
(bad)
(bad)
pop
jg
pop
fdivr
ins
inc
inc
idiv
(bad)
mov
(bad)
std
clc
mov
cmp
(bad)
loopne
cli
pop
jle
pop
cmc
push
jmp
mov
mov
(bad)
lahf
idiv
ret
pop
lock
aas
stc
sub
inc
fucomip
pop
jnp
pop
(bad)
jae
jg
out
(bad)
repnz
pop
in
std
jne
rcr
(bad)
hlt
idiv
mov
jb
pop
cli
addr16
iret
(bad)
cld
fcomip
aas
push
fisubr
jg
aas
jge
std
pop
(bad)
(bad)
jmp
lahf
icebp
vpmulhw
iret
pop
jmp
jle
loop
sti
mov
outs
mov
inc
dec
lahf
jge
xchg
std
mov
lea
fidivr
mov
fdivrp
daa
ds
in
std
scas
ds
(bad)
sbb
iret
sub
ret
aas
loope
cli
ud0
popf
(bad)
adc
hlt
jmp
(bad)
data16
clc
scas
jne
out
std
std
mov
jg
mov
aaa
inc
jg
sub
popa
(bad)
(bad)
mov
repnz
push
sub
mov
imul
mov
in
xlat
push
mov
hlt
out
clc
loop
sti
inc
jg
scas
xlat
push
es
bound
inc
cmp
pop
jae
push
ins
les
aaa
std
cmp
jnp
rcr
cli
stos
jle
fcomip
dec
sbb
push
push
sti
mov
sub
sti
jmp
in
aaa
std
cmp
pop
out
fs
jne
jmp
in
test
mov
or
aas
cld
test
sar
cld
pop
cli
dec
push
jg
jo
daa
dec
(bad)
fistp
(bad)
(bad)
out
test
jg
lahf
(bad)
pop
std
pop
fs
stos
jg
mov
iret
(bad)
js
not
call
aas
les
sar
xchg
ds
outs
test
pop
cmp
mov
push
(bad)
(bad)
idiv
pop
clc
cmc
test
inc
jg
pop
or
cld
idiv
pop
jmp
sti
jecxz
ror
jmp
idiv
test
mov
std
in
fcomip
ds
lahf
std
sbb
clc
(bad)
loope
inc
sub
xor
das
and
pop
fadd
sar
inc
ret
xchg
dec
clc
mov
sar
cld
outs
xchg
cmp
fucomip
push
bound
push
pop
shr
jg
outs
add
scas
mov
fwait
cld
fistp
out
cld
bound
fcmovb
(bad)
call
or
jle
aas
iret
pop
fiadd
jg
pop
std
jns
shl
mov
dec
aas
sti
mov
iret
fsubrp
addr16
clc
or
fstp
mov
aas
jl
out
aas
popf
jl
pop
jnp
fwait
std
mov
push
mov
repz
cld
jbe
idiv
call
inc
pop
test
jmp
and
sbb
lahf
jl
mov
mov
out
nop
jecxz
jmp
shl
sti
ja
mov
pop
std
fisub
dec
test
jb
(bad)
(bad)
imul
pop
jnp
pop
(bad)
push
(bad)
outs
push
std
mov
(bad)
call
or
aas
hlt
(bad)
dec
inc
out
(bad)
loop
sti
mov
(bad)
stos
jg
aad
xchg
or
imul
pop
std
inc
jg
rcr
cli
lahf
jp
pop
std
div
jg
call
cli
cs
xor
sbb
pop
mov
std
cmps
(bad)
sbb
cwde
std
jge
add
xor
js
jmp
dec
sahf
(bad)
mov
pop
sub
xchg
clc
cli
mov
shr
xchg
shr
outs
xor
push
and
out
clc
or
test
add
sar
out
std
xor
stc
fbstp
lock
cmp
in
pop
stc
dec
dec
cmps
or
jmp
dec
(bad)
fstp
repz
hlt
pop
std
hlt
pop
scas
inc
pop
repz
clc
retf
(bad)
(bad)
pop
push
jg
iret
jmp
jg
jecxz
cli
cdq
aas
in
cli
aas
push
icebp
xchg
inc
pop
jmp
icebp
idiv
icebp
dec
jne
outs
jg
jmp
and
mov
scas
(bad)
mov
jb
das
dec
scas
gs
jmp
jle
aas
in
fxch
jle
jmp
mov
sti
icebp
(bad)
dec
fidivr
outs
icebp
cmp
mov
dec
repnz
std
and
icebp
jmp
std
ja
inc
idiv
fmulp
pop
lock
mov
mov
les
iret
(bad)
fidivr
fidivr
jmp
loopne
inc
sub
mov
out
mov
iret
push
mov
dec
(bad)
fiadd
jg
in
(bad)
out
das
lods
outs
fwait
and
cmp
sahf
outs
sar
leave
sar
ret
dec
in
rcl
imul
lock
aaa
sti
and
in
sar
and
mov
cli
lods
fsubr
mov
mov
mov
scas
shl
cmp
or
sub
add
ins
mov
call
jg
xlat
cli
arpl
scas
(bad)
aaa
call
lahf
sti
push
(bad)
repz
gs
or
repz
out
sbb
cld
aaa
fdiv
into
aas
in
ss
scas
jg
outs
bound
(bad)
stc
mov
fst
sbb
imul
std
add
jg
mov
mov
test
das
addr16
add
cld
repnz
ret
mov
ret
mov
cmp
(bad)
jge
in
mov
idiv
pop
cli
inc
push
(bad)
aas
xchg
cmp
cmps
pop
xchg
iret
jle
shl
cmp
jmp
cli
or
sti
jg
std
mov
mov
(bad)
std
jp
(bad)
mov
repnz
jmp
std
(bad)
aas
enter
lds
(bad)
hlt
sbb
jg
ret
add
or
lahf
pop
inc
jle
clc
outs
or
jmp
mov
imul
jbe
les
stc
push
hlt
sbb
mov
inc
mov
les
pop
(bad)
dec
cmps
std
inc
in
jmp
cli
vpsubq
in
cmps
add
jle
hlt
out
ds
xchg
test
(bad)
sbb
cld
push
mov
inc
stc
and
dec
jmp
pop
cld
ja
in
jg
ja
aas
clc
or
lahf
repz
cs
jg
arpl
mov
minps
jle
add
push
std
fcmovb
mov
inc
test
xchg
out
cld
inc
idiv
popa
in
(bad)
sub
ja
xchg
xor
cmps
loope
add
mov
mov
cli
outs
call
icebp
(bad)
inc
inc
cld
repz
jmp
inc
in
push
or
pop
cli
mov
popf
(bad)
jg
hlt
mov
inc
mov
jmp
(bad)
push
xor
lahf
mov
cmp
sti
stos
dec
cmp
fisub
mov
sar
cld
outs
(bad)
jg
test
or
xchg
(bad)
sbb
dec
cli
retf
aas
je
bnd
cdq
stc
std
out
xor
inc
mov
push
mov
pop
repnz
std
cmp
out
cmc
dec
sahf
(bad)
addr16
dec
pop
repnz
std
cmp
cs
out
(bad)
loope
cwde
inc
repnz
std
ror
push
dec
icebp
mov
dec
mov
pop
std
push
mov
push
mov
outs
dec
adc
jg
test
sar
call
jle
pop
call
clc
xor
neg
jg
aas
cmc
mov
pop
mov
ret
das
(bad)
mov
jle
xor
xlat
in
jg
aas
call
lahf
ret
mov
iret
xor
aas
test
sar
cld
pop
adc
xlat
clc
xchg
jg
cmc
lds
inc
and
sbb
das
std
rcr
dec
out
outs
(bad)
cmp
pop
std
lds
hlt
or
(bad)
(bad)
icebp
cmps
call
lahf
inc
mov
xlat
std
mov
std
push
call
(bad)
sub
aad
cmc
dec
mov
xor
jecxz
fwait
jle
xor
ins
dec
mov
sbb
xor
jmp
xchg
inc
cld
xchg
aaa
ret
sti
outs
inc
push
(bad)
(bad)
fadd
les
or
call
cmp
sbb
mov
push
mov
fsubr
mov
or
jmp
jmp
fist
stc
int
adc
xchg
iret
(bad)
fldcw
mov
jg
in
cmc
(bad)
jmp
(bad)
dec
jmp
cdq
xlat
jg
out
lds
cld
pop
call
and
into
inc
(bad)
fxch
scas
test
(bad)
mov
inc
xor
sub
jb
xor
mov
or
mov
icebp
jmp
mov
clc
idiv
scas
jle
pop
or
jg
clc
(bad)
movs
dec
or
inc
(bad)
mov
xor
ja
and
cld
jge
(bad)
outs
cli
daa
cld
(bad)
cld
fstp
hlt
imul
cmps
jg
pop
retf
push
call
stos
sbb
push
jg
pop
jnp
sbb
ja
aas
(bad)
scas
aas
imul
push
jg
sar
mov
cmp
test
test
jle
pop
jle
xchg
jmp
pop
repz
xchg
inc
xchg
sar
sbb
sar
cmp
test
mov
(bad)
push
outs
std
out
arpl
push
std
mov
sti
mov
neg
fs
push
jp
aaa
cli
arpl
mov
and
in
xor
jg
fucomip
xlat
mov
fild
push
mov
cli
test
jle
cmps
jg
mov
mov
mov
aaa
es
dec
inc
adc
fucomp
(bad)
jg
(bad)
aaa
shr
jg
(bad)
cli
mov
lahf
call
ss
iret
repz
jns
fistp
lods
cmp
loope
cli
hlt
(bad)
movs
xchg
jle
pop
push
stc
xchg
fucomip
(bad)
(bad)
jecxz
js
out
inc
sbb
add
jge
popf
xchg
push
(bad)
xor
in
cmc
mov
out
aam
imul
aas
cmc
adc
aad
test
aas
cli
ud0
(bad)
das
inc
loop
cli
mov
cmps
(bad)
stos
aas
out
mov
jmp
pop
sar
rol
mov
cwde
out
and
outs
(bad)
mov
cwde
(bad)
std
icebp
pop
jnp
imul
aad
stc
push
jmp
jmp
sti
mov
pop
sti
lods
(bad)
call
pusha
fimul
xor
push
mov
mov
jg
aas
imul
mov
icebp
xchg
jle
mov
das
(bad)
test
mov
std
fmul
scas
lahf
(bad)
pop
mov
(bad)
pop
cmp
mov
daa
(bad)
jp
xchg
enter
stos
and
jg
sub
std
cmp
cmp
js
daa
outs
cld
int
out
(bad)
pop
and
lock
ud0
stc
jne
clc
mov
ja
adc
std
loope
adc
(bad)
inc
sti
clc
std
(bad)
dec
call
mov
mov
aas
std
mov
aas
cld
fbld
inc
pop
adc
imul
fnstsw
xlat
pop
jg
dec
test
push
out
jmp
call
aad
jg
sti
imul
out
into
sbb
(bad)
stos
(bad)
jmp
sub
lahf
add
xor
push
arpl
lock
pop
push
call
sar
cmp
xor
sar
aaa
push
hlt
mov
aas
or
push
in
jle
mov
test
jl
(bad)
retf
push
cld
ret
jmp
push
(bad)
mov
xor
or
pop
std
push
inc
cmc
xor
stos
mov
std
movs
shr
pop
inc
lahf
xchg
jg
lahf
mov
pop
sub
and
stos
fnstsw
adc
cli
out
addr16
jg
aas
cld
mul
push
test
iret
jecxz
mov
xchg
enter
out
mov
lea
jmp
(bad)
std
(bad)
jmp
icebp
and
jno
xlat
pop
hlt
cmp
(bad)
lock
cmp
add
in
std
loope
test
jmp
imul
sbb
(bad)
cmp
loop
aas
hlt
pop
dec
dec
in
jmp
inc
stos
(bad)
jmp
out
fcomip
pop
clc
or
repz
mov
ja
sar
es
arpl
and
(bad)
mov
xchg
ret
or
fdivr
rol
daa
(bad)
mov
xchg
jno
jecxz
cmc
xchg
call
dec
(bad)
and
repnz
stc
mov
stc
pop
(bad)
std
clc
idiv
pop
jecxz
cmp
cld
xlat
mov
(bad)
mov
sar
cld
mov
(bad)
xchg
jg
das
jmp
and
pop
rcl
(bad)
pop
jmp
std
dec
lahf
shr
jg
outs
lds
adc
aaa
std
jecxz
test
push
ret
xchg
push
sti
sbb
pop
(bad)
jmp
in
add
dec
out
jecxz
ret
out
jg
sbb
jecxz
shr
cli
out
lea
jle
out
jecxz
aad
pop
cli
jge
pop
jg
sub
icebp
clc
jecxz
(bad)
imul
shl
jg
(bad)
mov
inc
fs
(bad)
ffree
xor
mov
std
sbb
(bad)
(bad)
std
pop
aas
xchg
jg
(bad)
(bad)
out
aas
sbb
mov
aas
(bad)
(bad)
in
out
jg
aas
cli
(bad)
jg
jg
aad
jle
cld
inc
push
clc
in
(bad)
mov
sbb
loope
icebp
jg
outs
lock
jg
pop
inc
push
mov
jg
sub
mov
jg
aas
cli
daa
jle
dec
clc
popf
push
jbe
xchg
lahf
cld
ret
push
das
mov
aaa
adc
call
mov
pop
call
cli
push
pusha
cmp
dec
jg
jbe
xor
cmp
sub
cmp
sar
aas
(bad)
pop
inc
cwde
jg
scas
repz
and
pop
inc
imul
jle
sbb
cli
outs
call
(bad)
nop
sbb
fucomip
xlat
push
cld
(bad)
std
int
call
cmps
jg
aas
je
(bad)
mov
repz
mov
cmps
jg
aas
cmc
xchg
shr
scas
sti
pop
call
mov
idiv
mov
neg
call
jg
aas
cld
(bad)
(bad)
xlat
jg
clc
pop
or
jg
out
call
(bad)
sar
fistp
out
lock
ds
ffreep
lods
ficom
rcl
jle
aas
clc
(bad)
dec
outs
mov
inc
(bad)
cmp
(bad)
cli
ss
aas
call
ret
arpl
push
sbb
dec
jmp
(bad)
out
mov
jg
pop
repnz
push
stc
lahf
js
(bad)
mov
hlt
xchg
cld
outs
mov
sub
repnz
mov
in
mov
dec
addr16
into
adc
shl
cmps
jg
jo
push
repnz
mov
iret
adc
in
cld
sbb
pop
call
xor
cld
or
scas
repz
cld
neg
std
into
repnz
mov
das
mov
push
xchg
xchg
daa
jecxz
mov
(bad)
jle
cli
in
(bad)
jle
fwait
icebp
fistp
xlat
mov
dec
repz
aas
(bad)
mov
call
mov
dec
stc
pushf
jle
arpl
push
call
lahf
jl
or
jl
repnz
outs
scas
fistp
jg
jmp
xchg
(bad)
xlat
xlat
out
(bad)
(bad)
(bad)
push
jp
(bad)
push
pop
cld
inc
jg
(bad)
clc
lahf
stc
mov
aaa
aas
sbb
(bad)
jg
int3
call
pop
pop
out
aad
and
xchg
scas
jg
inc
mul
dec
cmp
fild
repz
mov
xor
mov
cmps
(bad)
push
imul
mov
mov
(bad)
pop
out
pop
call
out
stc
sbb
pop
(bad)
fist
jg
lods
test
push
xchg
outs
fmul
mov
jg
aaa
inc
mov
inc
rcr
sar
std
lahf
mov
std
repz
stos
(bad)
fucomip
lahf
(bad)
pop
loop
pushf
mov
(bad)
stc
stos
jmp
cs
repz
das
fisttp
cld
push
movs
scas
jg
ret
(bad)
jle
repz
(bad)
cld
inc
in
push
jg
xchg
aad
cld
stc
call
cli
cld
(bad)
fistp
stos
(bad)
mov
jg
call
shl
repnz
in
iret
jle
pop
cli
in
aaa
(bad)
jmp
(bad)
jle
cmps
jecxz
daa
dec
push
loope
fild
sub
mov
cmp
jae
std
inc
(bad)
jmp
inc
sti
xchg
call
(bad)
inc
mov
retf
out
push
mov
std
std
mov
adc
inc
jg
(bad)
jg
das
inc
mov
and
call
xchg
jns
std
jg
arpl
aas
cwde
cli
in
dec
call
or
das
xchg
(bad)
pop
cmp
call
jg
nop
xchg
mov
std
outs
(bad)
jmp
out
jmp
inc
sahf
lahf
adc
clc
stc
dec
cli
jmp
aam
pop
repnz
mov
(bad)
cld
jmp
xchg
mov
mov
leave
rep
push
mov
out
dec
iret
aas
jo
pop
jg
repz
dec
jg
out
sahf
ins
pushf
lahf
dec
shl
out
(bad)
(bad)
mov
icebp
jecxz
cmp
jg
aas
inc
(bad)
fstp
inc
xchg
dec
and
jecxz
lock
in
jmp
xor
jg
(bad)
call
imul
sahf
(bad)
addr16
sub
jecxz
lock
cmps
jg
lahf
(bad)
xor
adc
dec
in
int3
addr16
call
sar
add
jmp
or
iret
jg
pop
jnp
call
not
iret
(bad)
in
fisttp
jnp
(bad)
jge
(bad)
retf
addr16
pop
inc
jecxz
lahf
clc
scas
inc
jmp
addr16
iret
mov
mov
sub
cli
xlat
and
jnp
cmp
mov
mov
mov
or
jbe
outs
sti
dec
jg
cli
hlt
das
(bad)
aas
hlt
rcr
xor
std
sahf
inc
cld
aas
hlt
xor
icebp
imul
test
std
daa
jg
(bad)
cwde
sahf
cmp
push
mov
std
imul
xchg
shl
xchg
cld
daa
(bad)
stos
mov
scas
repz
std
jmp
cwde
outs
xor
xchg
mov
aad
push
std
(bad)
shr
daa
movs
aad
(bad)
ins
icebp
xchg
scas
jle
sahf
fstp
sahf
or
xor
in
jg
push
in
adc
xor
(bad)
cmps
push
(bad)
push
outs
std
aas
jno
inc
retf
clc
xor
std
mov
jg
sbb
aas
mov
cld
in
aaa
dec
sar
push
aas
lock
sub
lods
fcomip
pop
cli
jecxz
clc
lahf
jle
pop
cmps
mov
ja
dec
jle
movs
call
pop
call
jg
sti
inc
lock
sub
out
in
inc
xlat
jg
(bad)
mov
(bad)
aas
std
neg
std
dec
dec
dec
hlt
(bad)
lahf
dec
jg
xlat
stc
arpl
(bad)
std
jmp
sti
es
cli
or
sub
adc
xchg
inc
cmps
fnstsw
lahf
cmp
mov
xchg
(bad)
hlt
fbld
cmp
adc
(bad)
fimul
inc
or
jl
call
clc
imul
jmp
inc
adc
xchg
daa
std
mov
mov
(bad)
sbb
int
mov
adc
mov
inc
aad
push
jmp
cmps
hlt
stc
popf
lea
cwde
mov
jg
lock
dec
cmp
ja
and
jmp
test
jmp
sti
imul
icebp
pop
sti
(bad)
jecxz
(bad)
jmp
lock
hlt
xlat
jg
cld
xchg
cld
adc
(bad)
mov
fistp
pop
inc
xchg
std
push
call
lahf
imul
add
std
scas
xchg
fistp
mov
and
sbb
add
push
jmp
ja
cmp
add
outs
outs
inc
cmp
adc
(bad)
(bad)
icebp
clc
cmc
mov
push
sti
sub
sahf
or
aaa
clc
arpl
js
cli
pop
sbb
inc
cld
mov
les
icebp
push
inc
cld
jp
in
pop
(bad)
pop
jmp
cmp
mov
inc
jl
inc
cld
cmp
pop
(bad)
pop
jmp
jge
icebp
jmp
adc
sbb
jae
icebp
mov
out
test
div
aam
push
cmc
xchg
outs
sbb
pop
and
sub
xchg
or
and
sub
cmp
stos
leave
div
cmp
add
pop
add
or
cwde
push
lock
cmc
pop
jl
add
pop
daa
and
inc
cld
fimul
ja
xor
clc
jmp
outs
adc
enter
(bad)
mov
jmp
pop
call
fcomip
push
sbb
std
jge
call
add
hlt
pop
xor
fdivr
push
jg
push
dec
ss
repz
nop
iret
or
xor
xor
test
jmp
addr16
xlat
xor
or
scas
pusha
dec
jle
jae
rcr
int3
sbb
repz
or
repz
lahf
dec
lahf
call
or
out
sub
lds
push
int3
jae
cmp
stos
(bad)
ss
push
dec
retf
pusha
pop
push
repz
mov
scas
cmc
(bad)
(bad)
icebp
clc
jecxz
cli
(bad)
fild
adc
inc
out
lods
inc
fidiv
nop
ja
retf
xor
pop
ret
(bad)
push
jg
movs
cmc
dec
sar
push
int3
iret
xor
repz
mov
rol
scas
mov
cli
dec
inc
popf
inc
call
(bad)
div
(bad)
fsubr
(bad)
mov
hlt
test
push
popa
mov
out
dec
jno
pop
neg
jmp
aaa
mov
popf
out
jmp
(bad)
sub
pop
sti
lds
cmc
pop
std
fstp
fnstsw
std
mov
std
(bad)
jno
aad
aaa
mov
adc
out
lahf
hlt
xchg
xchg
aas
leave
mov
stos
fcomip
mov
in
(bad)
mov
mov
gs
adc
fidivr
pop
ins
jp
pop
xchg
idiv
mov
aam
jmp
sar
dec
jg
(bad)
std
loop
cli
scas
(bad)
rcl
fdivrp
mov
fnstsw
std
mov
fistp
cli
(bad)
repz
stos
aas
jecxz
aaa
mov
jae
(bad)
pop
hlt
xchg
xchg
mov
(bad)
fsubr
(bad)
mov
jge
xchg
ja
out
mov
jg
cli
jle
lods
test
neg
push
fwait
cli
(bad)
cmps
in
(bad)
out
sub
scas
cli
inc
jg
pop
gs
lds
sti
lds
pop
std
in
xor
dec
jns
outs
xor
jne
call
(bad)
div
jmp
dec
leave
pop
jg
jg
cmps
outs
xor
or
aas
hlt
xchg
cld
dec
shl
std
inc
jecxz
fwait
(bad)
stos
pop
fcomip
neg
cmps
jecxz
outs
jmp
call
neg
dec
(bad)
jp
cld
fcomip
pop
std
out
in
(bad)
xchg
mov
xchg
sub
add
aas
std
loop
std
jecxz
(bad)
jg
xchg
mov
adc
jg
add
das
xor
into
aas
std
xchg
jmp
or
ds
add
div
mov
scas
xor
cld
mov
cmp
std
scas
(bad)
in
sbb
dec
add
ja
and
sub
mov
xchg
ins
add
cmp
dec
arpl
call
add
in
gs
fdivr
push
jg
push
jg
es
(bad)
mov
stc
adc
cld
inc
or
fstp
(bad)
aas
jmp
aas
dec
sar
iret
sbb
jg
pusha
jle
lahf
(bad)
ins
xor
icebp
pop
std
pop
fwait
call
xlat
ss
(bad)
sub
repnz
xor
(bad)
fdivr
push
mov
ins
add
mov
xchg
cmp
sbb
jg
and
loop
pop
xchg
(bad)
ud0
out
or
sbb
inc
sar
repz
aas
test
outs
add
push
(bad)
aaa
pusha
jle
cmp
or
xchg
lock
push
adc
and
(bad)
dec
movs
(bad)
in
paddw
dec
mov
lahf
push
sar
sbb
outs
stc
(bad)
(bad)
icebp
clc
in
cli
lods
jecxz
inc
rcr
pop
(bad)
aas
(bad)
call
dec
push
mov
loope
pop
or
mov
jmp
dec
dec
and
cld
scas
push
inc
es
(bad)
sar
ins
pop
icebp
das
sar
movs
jae
adc
lahf
call
push
cwde
pop
std
push
sar
or
xlat
popa
xor
fdivrp
jmp
xchg
arpl
dec
jmp
in
cld
mov
std
fwait
push
jo
cld
hlt
(bad)
push
pop
mov
shr
call
stc
cmps
mov
call
push
(bad)
outs
rcr
cli
mul
mov
push
repnz
nop
fistp
cmp
stc
pop
std
lahf
fwait
in
not
xor
xor
into
xor
pop
pop
(bad)
stos
jb
test
push
inc
std
mov
mov
push
or
ret
adc
shr
mov
push
nop
dec
add
mov
and
pusha
cld
icebp
pop
lea
add
add
scas
add
cmp
nop
fisttp
cld
jp
xor
clc
scas
dec
out
ins
add
adc
(bad)
fisttp
add
cmp
(bad)
sar
icebp
out
cmc
out
fadd
cs
(bad)
jb
out
arpl
mov
jg
adc
add
cld
mov
cmp
cli
scas
jle
dec
mov
retf
bound
or
ret
xor
mov
jecxz
(bad)
jmp
cli
int
mov
mov
jg
push
jmp
fld
and
sbb
repz
jp
hlt
cld
call
aaa
inc
repz
idiv
and
sahf
call
(bad)
mov
inc
call
sti
(bad)
cs
leave
mov
jle
mov
out
std
sar
lods
loop
sbb
jmp
mov
call
loope
push
mov
jg
addr16
mov
cmc
sbb
sar
inc
jg
(bad)
sub
mov
sbb
sar
icebp
jmp
scas
jg
lea
sti
push
std
call
out
pop
mov
dec
js
out
call
iret
scas
jae
jl
fmulp
mov
mov
mov
test
data16
mov
scas
jnp
cld
jle
pinsrw
(bad)
jbe
hlt
dec
cld
pushw
aad
jmp
jmp
add
mov
mov
out
hlt
inc
inc
outs
in
(bad)
in
fiadd
jne
add
jg
push
clc
push
jecxz
hlt
(bad)
dec
(bad)
call
xlat
lods
aas
cli
daa
push
aaa
rcr
jge
sbb
(bad)
fldenv
scas
mov
aaa
std
jne
(bad)
dec
(bad)
dec
inc
inc
mov
cli
clc
(bad)
dec
cld
mov
jge
inc
inc
arpl
cmc
fstp
dec
cld
sahf
cli
jmp
aas
cli
daa
sahf
jmp
mov
cli
out
dec
fist
cli
stos
lods
push
std
xchg
mov
jmp
out
stc
jmp
inc
out
fild
rcr
cld
mov
adc
aad
icebp
jnp
push
jle
lods
mov
hlt
scas
lea
jb
jns
dec
(bad)
push
mov
push
(bad)
mov
mov
cld
scas
jle
adc
mov
push
jg
lahf
cld
pop
std
pop
pop
scas
lds
inc
xchg
(bad)
pop
sti
xchg
and
jmp
gs
dec
push
addr16
mov
cmps
mov
pop
hlt
int3
jg
pop
sbb
mov
div
(bad)
aad
and
jno
shr
jg
movzx
cmc
jg
xchg
jg
out
data16
fisttp
icebp
pop
cmp
aaa
sti
out
(bad)
neg
std
jp
addr16
jo
jl
(bad)
pop
add
rcr
std
inc
std
jbe
neg
in
(bad)
(bad)
mov
jle
iret
jle
sub
sti
(bad)
jge
mov
(bad)
out
inc
sbb
(bad)
jle
icebp
pop
std
lds
mov
(bad)
ficomp
repnz
cli
mov
jmp
outs
pop
jg
fld
pop
std
daa
xchg
adc
cmc
(bad)
in
or
das
aas
jmp
std
jmp
adc
std
lahf
fdivrp
inc
pop
(bad)
int3
jg
fwait
pop
repz
mov
mov
les
scas
std
in
mov
add
call
xlat
jmp
iret
fisttp
stos
fcomi
cmps
std
cmp
call
(bad)
xchg
cmps
mov
std
mov
retf
and
into
outs
inc
in
outs
jg
lock
mov
retf
outs
sub
mov
cmp
add
jg
dec
dec
outs
call
std
(bad)
jg
cld
jbe
hlt
jmp
(bad)
ja
or
mov
mov
call
cmp
out
call
jge
aas
std
shl
mov
out
jns
(bad)
ud0
jnp
pop
std
mov
into
jg
dec
fdivrp
xchg
movsx
xor
jmp
std
iret
pop
into
push
enter
cli
lahf
bound
cmps
call
pop
jnp
pop
(bad)
dec
inc
mov
bound
das
leave
xchg
push
jg
outs
lock
mov
ins
shl
psubb
into
mov
sub
sbb
out
sub
push
(bad)
clc
scas
(bad)
pop
adc
xchg
cld
repnz
arpl
jmp
sti
xchg
jmp
retf
mov
jmp
div
popa
mov
iret
clc
fwait
dec
int
aas
jns
pop
or
std
push
xchg
dec
pop
icebp
(bad)
scas
or
sub
adc
movs
int3
fldenv
std
in
pop
out
(bad)
loop
cli
outs
(bad)
jmp
shl
push
(bad)
inc
push
(bad)
and
jnp
rcr
std
inc
mov
cmp
test
mov
pop
sbb
push
jmp
loop
inc
data16
lea
adc
fsubr
inc
(bad)
cmp
std
jmp
clc
cmp
(bad)
mov
fisttp
(bad)
xlat
jl
(bad)
jg
jg
pop
shr
fs
jg
das
and
sti
loop
clc
scas
push
aas
pusha
mov
jmp
jg
jb
jge
cmp
lock
mov
lock
mov
loop
push
or
lock
cmp
mov
mov
cld
ds
mov
mov
jge
cli
lahf
loope
pop
jge
mov
lahf
dec
sub
std
idiv
aad
call
pop
arpl
pushf
std
mov
dec
lods
push
xor
cmps
jmp
std
shl
out
pop
std
aad
movs
(bad)
mov
std
repnz
jg
jmp
cli
(bad)
paddq
std
dec
cld
sar
dec
pop
call
shr
add
dec
(bad)
fmul
(bad)
jmp
sbb
jg
outs
icebp
sbb
mov
std
dec
mov
xchg
imul
xor
clc
cmps
ds
ss
sti
mov
jmp
add
nop
mov
loop
sti
mov
jmp
mov
cld
aad
jns
nop
(bad)
and
test
mov
dec
aas
div
outs
call
jle
scas
jle
shr
inc
scas
or
xchg
pop
out
std
scas
jle
jg
cmp
out
mov
std
mov
inc
jg
ja
xchg
cmps
jg
jmp
(bad)
ss
in
hlt
out
sti
dec
(bad)
clc
mov
cli
dec
dec
fnstsw
paddd
aas
clc
push
loope
call
aas
mov
fcos
std
fwait
(bad)
sbb
leave
jbe
sbb
outs
cli
mov
sub
cld
jne
fidiv
mov
scas
fst
sbb
out
jbe
push
cdq
pop
ret
sti
in
cli
inc
jmp
add
ja
xlat
adc
std
(bad)
cmc
mov
jne
(bad)
and
dec
jl
jne
(bad)
cli
cmps
imul
fwait
data16
and
jle
(bad)
adc
mov
aas
or
dec
sbb
push
inc
mov
sti
sub
inc
std
outs
fsub
push
aad
scas
pop
xchg
jle
and
ins
adc
scas
fistp
mov
inc
jmp
std
xchg
inc
mov
xchg
imul
push
jo
in
pop
retf
(bad)
js
jle
jmp
pop
(bad)
lods
jbe
pushf
sub
out
(bad)
cmc
pop
(bad)
pop
pop
and
test
hlt
jg
jl
aas
xor
dec
mov
cld
dec
mov
inc
mov
(bad)
(bad)
cmp
mov
xchg
inc
sbb
(bad)
adc
jecxz
test
cld
xor
inc
aam
idiv
jg
into
sub
out
jg
xchg
outs
repnz
icebp
cli
aaa
loop
retf
jg
fwait
shl
(bad)
in
inc
ds
(bad)
popf
dec
mov
sti
cmps
call
mov
hlt
dec
inc
imul
mov
lock
fist
aam
neg
shr
les
sbb
cli
jno
hlt
je
cmp
lods
mov
pop
cld
imul
jle
pop
repnz
and
cmc
pop
jmp
(bad)
fcomp
push
cli
into
scas
add
adc
out
ret
cdq
int3
fcomip
pop
mov
scas
xor
test
les
cmc
fistp
pop
retf
retf
and
iret
cwde
in
sbb
cli
nop
jle
icebp
mov
dec
adc
jg
inc
inc
or
xchg
mov
dec
je
imul
jmp
das
std
mov
mov
xor
jg
fild
dec
dec
(bad)
call
std
mov
sti
lock
lahf
(bad)
not
out
jg
aas
les
and
(bad)
jno
jg
jle
arpl
jg
jle
mov
int3
jg
pop
xchg
jecxz
aas
cld
lahf
cmps
aas
pop
(bad)
push
jg
push
jmp
aas
sahf
sar
jg
fild
icebp
cld
out
dec
or
(bad)
stc
outs
dec
(bad)
(bad)
out
(bad)
iret
and
repz
gs
call
test
repz
push
addr16
stos
inc
(bad)
jmp
push
jg
push
push
jle
aas
test
jg
lahf
mov
call
cmp
add
(bad)
fsubr
outs
lock
pop
mov
cld
rcr
push
dec
in
retf
idiv
jae
xor
fst
jecxz
in
aaa
std
ret
dec
jle
push
out
(bad)
stos
fild
cmp
cmps
dec
(bad)
scas
pop
adc
loop
inc
jmp
pop
sti
paddw
in
jmp
mov
fwait
jecxz
repz
div
and
and
aas
repnz
pop
loope
ror
pop
inc
jmp
test
(bad)
mov
mov
lock
call
out
jno
pop
out
div
repz
int
jmp
pop
std
call
imul
mov
push
shl
outs
cli
paddb
jg
aas
mov
out
jmp
in
std
inc
dec
test
cmps
add
cmp
scas
dec
enter
adc
(bad)
(bad)
std
pusha
lods
pop
not
sar
lock
sub
loop
aas
cli
sysret
pop
std
icebp
cld
outs
xchg
add
mov
xchg
(bad)
jo
sti
fwait
(bad)
sbb
jl
outs
fwait
(bad)
(bad)
sar
mov
into
cld
daa
push
mov
(bad)
aas
stc
xchg
jns
fld
call
mov
add
in
(bad)
mov
add
int
(bad)
push
js
repnz
rcl
pop
fdivr
(bad)
std
sub
out
jmp
sbb
pop
dec
(bad)
stc
jle
jg
mov
mov
jg
(bad)
std
cmp
jmp
fistp
in
aas
cli
ud0
aaa
out
mov
scas
stc
xchg
mov
mov
shl
inc
jg
pop
inc
cmp
cs
idiv
imul
in
aas
hlt
(bad)
repnz
push
(bad)
sar
sbb
mov
cmp
and
sbb
mov
dec
mov
sbb
cli
mov
sbb
sti
pop
mov
pop
call
jmp
outs
call
jecxz
fnstsw
aaa
std
cmp
aas
hlt
aas
(bad)
mov
std
inc
jg
scas
cli
mov
sar
sub
pop
int3
fsub
pop
inc
jmp
out
std
inc
jg
scas
cli
or
cmp
and
mov
(bad)
aam
(bad)
fistp
or
paddw
cmc
jg
pop
mov
mov
pop
jecxz
pusha
sub
dec
repz
fcom
ret
std
inc
jg
push
imul
sti
fistp
xor
outs
hlt
inc
call
cmc
and
pop
repz
adc
mov
jb
into
scas
pop
(bad)
repz
mov
dec
xchg
inc
pushf
inc
and
aaa
push
adc
in
mov
arpl
loope
div
pop
ins
push
pop
(bad)
in
(bad)
push
dec
or
jmp
repnz
and
ret
in
mov
arpl
mov
aam
out
out
and
or
xchg
adc
notrack
xchg
cld
inc
cld
shr
pop
jge
ds
outs
pop
jecxz
out
rep
mov
jmp
(bad)
lahf
hlt
in
jae
std
push
push
adc
pop
enter
lock
lahf
icebp
mov
xchg
xchg
dec
cld
(bad)
fcmovnu
or
sahf
repnz
loop
push
lock
cld
scas
cmp
pop
add
fidivr
cmc
addr16
jae
mul
out
mov
dec
(bad)
push
xor
stc
sbb
push
mov
nop
test
loop
stc
sub
xlat
clc
sub
fs
(bad)
out
fist
lods
sti
dec
std
rcr
push
shl
inc
outs
lock
stos
das
(bad)
sub
cli
in
pop
repz
push
aas
mov
lods
xor
cmp
and
mov
stos
mov
test
call
std
cmps
nop
fistp
test
jmp
fstp
push
or
jns
leave
outs
std
movs
pop
xchg
aaa
jne
loope
repnz
mov
out
fcmovnbe
cmp
imul
neg
repnz
mov
mov
fsubr
js
xchg
pop
ja
std
scas
mov
pop
and
cli
sti
sub
lahf
cmp
jns
jl
dec
repz
jbe
push
test
mov
mov
std
ins
scas
mov
xor
inc
repnz
jg
pop
sti
aad
cmc
jmp
jp
xchg
(bad)
cmp
(bad)
cli
out
adc
mov
pop
aas
daa
scas
lea
bound
or
jg
push
jnp
ds
xchg
fnstsw
daa
mov
loop
arpl
add
fwait
dec
add
mov
dec
(bad)
stos
jg
(bad)
fnstenv
fs
mov
outs
ss
aas
(bad)
xchg
mov
jo
mov
sti
mov
int
aad
cld
inc
outs
inc
or
(bad)
jg
imul
ds
xor
pop
pop
ds
mov
xor
dec
(bad)
pop
xor
pop
dec
retf
cmp
loope
and
jl
es
cld
sbb
jg
je
imul
jg
pop
(bad)
jg
jnp
adc
std
imul
popa
int3
das
jmp
fistp
jmp
cld
push
iret
push
pop
mov
cmp
call
mov
mov
jmp
cld
sub
xor
mov
repz
sti
xor
push
(bad)
call
and
xchg
call
pop
outs
or
dec
dec
dec
jg
inc
adc
in
in
jne
pop
stc
cmp
cs
enter
(bad)
jmp
mov
lahf
rcr
jg
ja
pop
mov
jp
mov
xor
hlt
scas
sar
(bad)
jg
jle
inc
aad
neg
mov
sar
push
in
xor
push
(bad)
in
jg
fild
jg
sbb
mov
in
ret
(bad)
pop
fucomi
scas
inc
(bad)
jle
(bad)
sub
fmulp
(bad)
jmp
call
ret
sbb
dec
xor
std
pop
(bad)
fstp
pushf
jecxz
xor
push
(bad)
pop
(bad)
in
scas
sti
(bad)
fidivr
cmp
jecxz
call
cli
icebp
fwait
or
inc
(bad)
xlat
(bad)
cmp
cmp
adc
rcr
cmps
inc
in
leave
(bad)
and
mov
es
and
repnz
mov
fcomip
out
hlt
imul
cmps
jmp
std
callw
inc
jp
pop
jmp
xlat
outs
inc
or
pop
std
push
retf
fisttp
push
sar
outs
jns
jmp
push
(bad)
add
mov
rcr
out
push
hlt
aaa
push
pop
adc
loopne
push
mov
repz
cmp
jge
daa
jg
aas
mov
loopne
and
push
scas
repz
jecxz
xchg
call
out
cld
cmp
mov
(bad)
mov
xor
jne
inc
call
(bad)
mov
aas
cli
mov
cmp
adc
fwait
sti
mov
sar
jbe
ret
xchg
push
mov
mov
sti
(bad)
cmps
in
mov
scas
es
jbe
push
ss
mov
push
stc
aaa
and
addr16
cmps
(bad)
out
push
cmp
out
call
pop
repz
(bad)
lods
jg
push
and
lea
pop
outs
jg
push
push
(bad)
fistp
ror
pop
js
iret
cld
fmul
nop
cmps
clc
or
fwait
sar
in
ffreep
sub
add
sti
outs
sbb
xchg
out
dec
clc
adc
inc
inc
stc
std
pop
dec
(bad)
test
inc
out
stc
xlat
fcomp
mov
out
xlat
xchg
(bad)
inc
int
adc
xchg
(bad)
aam
std
lods
jmp
shr
fist
(bad)
out
imul
sub
mov
jecxz
clc
xor
addr16
out
js
icebp
out
lock
(bad)
rcr
aad
std
cdq
aaa
div
neg
mov
sub
clc
aaa
mov
mov
loopne
fbstp
(bad)
(bad)
cmp
scas
outs
out
(bad)
sbb
or
outs
cli
out
and
sar
jmp
out
(bad)
mov
jbe
jg
mov
mov
push
mov
fisttp
mov
lock
aaa
imul
cmp
cmp
fild
leave
pushf
scas
call
lahf
and
lahf
push
loop
jg
mov
mov
(bad)
xchg
push
xlat
stc
outs
jmp
fwait
add
push
lahf
jg
hlt
jg
std
jmp
aas
cld
jo
call
jae
(bad)
fistp
repz
inc
mov
sbb
pop
sbb
or
pop
nop
jmp
repz
jmp
ror
mov
xchg
mov
call
push
sahf
inc
cmc
push
sbb
in
paddw
mov
mov
and
loop
add
sqrtps
in
cli
outs
call
(bad)
aaa
mov
mov
xchg
aas
jle
int
(bad)
sub
jmp
fwait
imul
(bad)
jle
sti
pop
loopne
icebp
in
std
pop
dec
int3
push
mov
jg
pop
(bad)
mov
std
pop
dec
repnz
lods
or
outs
lds
jle
psraw
fld
pushf
call
jecxz
std
scas
js
jle
stc
scas
icebp
sbb
js
aaa
xchg
and
out
xor
repnz
dec
dec
arpl
pop
std
xor
mov
aas
icebp
pop
std
xlat
cld
shr
xor
call
aas
cmp
lods
rcr
outs
add
call
mov
int
jbe
cli
jg
(bad)
jbe
repz
inc
(bad)
fnstsw
xlat
push
jbe
aam
mov
adc
push
mov
and
fisttp
mov
inc
enter
jmp
xchg
xor
or
or
jp
pop
mov
mov
jae
adc
outs
movs
mov
jecxz
call
mov
adc
lods
gs
fs
mov
add
mov
fwait
xchg
cld
scas
mov
test
ret
call
dec
cmp
outs
es
out
mov
(bad)
icebp
test
imul
das
repnz
xchg
cmps
inc
adc
or
das
sub
jg
rcl
sbb
stc
clc
lock
jb
(bad)
cmp
jg
push
repnz
outs
cmc
adc
jg
jnp
(bad)
ss
sahf
bnd
addr16
pop
std
dec
jns
cmp
mov
clc
pop
(bad)
pop
(bad)
adc
jno
jmp
jb
push
outs
scas
and
mov
push
dec
cld
out
sub
dec
in
and
mov
das
jmp
mov
(bad)
inc
stc
aaa
cdq
sub
neg
inc
xchg
mov
outs
fnsave
cmps
mov
mov
pop
call
(bad)
jg
retf
jmp
push
adc
ffreep
hlt
ror
call
pop
cli
loopne
xor
cli
loopne
dec
pop
pushf
frstor
jle
cdq
mov
xchg
sbb
andps
jne
imul
sti
out
out
(bad)
mov
jmp
std
mov
jg
xor
imul
jp
jg
xor
imul
(bad)
test
jg
psubb
sub
(bad)
fdivr
not
scas
pop
into
jg
cli
repz
(bad)
sti
(bad)
(bad)
test
pop
pop
ror
lahf
(bad)
cmp
mov
xchg
(bad)
std
ss
sti
pushf
(bad)
jge
(bad)
mov
(bad)
div
in
inc
(bad)
ja
dec
stc
fist
sub
std
sbb
test
(bad)
test
jg
xor
test
(bad)
imul
loop
push
(bad)
imul
(bad)
imul
jg
ss
ja
(bad)
std
sti
clc
fistp
(bad)
std
xbegin
std
out
fistp
(bad)
std
xlat
clc
fistp
(bad)
std
idiv
(bad)
mov
std
iret
clc
(bad)
mov
std
out
clc
(bad)
mov
std
in
out
inc
(bad)
(bad)
pop
cld
out
scas
shl
(bad)
std
(bad)
clc
(bad)
mov
std
lods
clc
(bad)
mov
std
popf
clc
fist
sub
out
lock
jl
clc
shr
jg
dec
dec
cld
test
inc
mov
xchg
mov
outs
lock
popa
push
cli
push
jge
cli
sbb
leave
fbstp
imul
hlt
fwait
scas
jg
fcomip
clc
(bad)
(bad)
loop
pop
push
repnz
jle
mov
xchg
lds
jge
(bad)
xchg
pop
jbe
arpl
call
xlat
cld
cmp
cmps
jle
lds
stc
daa
cmps
mov
std
pop
out
stc
hlt
mov
loopne
aas
hlt
lock
ins
jg
paddw
(bad)
clc
imul
std
sbb
hlt
out
stc
jg
(bad)
cwde
std
adc
out
or
rcr
adc
jg
(bad)
movs
inc
int
in
lock
cmps
fsub
aas
inc
pop
mov
das
jnp
sbb
(bad)
call
pop
mov
hlt
scas
stc
inc
inc
clc
mov
mov
xor
lahf
cld
arpl
daa
retf
or
jg
setge
neg
(bad)
clc
xlat
and
sbb
aas
std
xor
std
jp
out
cli
push
(bad)
jle
aad
aas
div
cld
or
shl
ja
jg
aas
in
pop
cli
inc
fstp
push
cmc
push
jl
(bad)
in
call
sub
loope
dec
(bad)
hlt
pop
jmp
add
cmp
daa
call
push
jle
aaa
clc
arpl
cmp
out
neg
std
(bad)
shl
fcomp
pop
std
(bad)
fld
pop
std
push
jg
dec
(bad)
mov
cmc
imul
jg
mov
dec
add
push
pop
std
dec
jle
pop
jge
(bad)
(bad)
xchg
scas
xchg
dec
and
hlt
fistp
mov
das
(bad)
mov
loop
sti
mov
call
out
repnz
lahf
(bad)
jge
hlt
jmp
jno
xlat
cld
mov
ja
(bad)
lds
hlt
jg
(bad)
nop
fs
cmp
sbb
out
cli
arpl
or
daa
(bad)
call
pop
jg
outs
add
and
lock
mov
paddw
jg
pop
inc
retf
pop
(bad)
fidivr
cld
shl
push
and
out
push
inc
in
outs
inc
jg
idiv
pop
cli
arpl
lods
aas
cld
(bad)
dec
push
iret
or
pop
(bad)
jg
cmps
jg
pop
inc
sub
mov
xchg
aas
dec
jg
(bad)
std
(bad)
lock
jnp
repnz
push
push
outs
or
xchg
idiv
sbb
push
xchg
stc
int
ins
ins
(bad)
mov
scas
xor
movs
push
out
aas
div
(bad)
scas
jg
jne
(bad)
jnp
pop
std
fistp
sbb
xchg
in
das
cld
inc
jg
outs
imul
pop
push
call
stos
jo
(bad)
fistp
mov
mov
pop
std
dec
(bad)
xor
mov
dec
pop
(bad)
jle
push
mov
popf
fisubr
jg
jecxz
lods
in
jg
mov
setg
cld
push
jmp
repnz
not
mov
div
xor
idiv
pop
and
icebp
sar
loop
std
push
jg
sti
push
xor
aas
ror
div
(bad)
sar
(bad)
xor
push
std
mov
test
sub
aas
in
retf
inc
cmp
fsubr
jg
das
cld
mov
mov
data16
jmp
in
std
pop
inc
jge
mov
inc
and
fdiv
daa
jle
(bad)
std
lea
adc
mov
(bad)
(bad)
sbb
out
(bad)
push
shl
cmps
rcr
and
clc
out
test
fidivr
jecxz
data16
test
or
scas
jns
xchg
inc
jmp
inc
mov
xchg
jg
in
(bad)
stc
mov
loopne
dec
mov
clc
iret
lods
jg
jge
cli
jecxz
std
outs
jg
aas
out
jp
jmp
jg
daa
iret
into
(bad)
mov
hlt
out
clc
dec
ds
xchg
in
std
daa
sar
test
xchg
out
(bad)
mov
dec
ret
out
(bad)
cmp
call
jle
pop
jbe
lahf
(bad)
arpl
mov
push
ret
fild
std
icebp
mov
es
idiv
scas
jg
jb
dec
aad
retf
pop
call
sar
jecxz
out
push
fwait
pop
adc
int
mov
jecxz
pop
sti
cmp
pop
jle
jmp
push
stc
ret
dec
sbb
dec
(bad)
cmp
fcom
std
cmp
test
cmp
pop
repnz
das
(bad)
cmps
jg
lahf
inc
ins
jmp
std
ret
(bad)
fnsave
(bad)
(bad)
pop
mov
int3
(bad)
sti
push
arpl
xlat
or
inc
idiv
repnz
xor
jg
loope
inc
or
pop
stc
jne
call
inc
push
mov
repnz
cld
lahf
cld
pop
jg
mov
repnz
aas
stc
(bad)
cld
idiv
out
hlt
sbb
xchg
std
(bad)
inc
pop
test
paddw
iret
(bad)
push
mov
(bad)
fild
push
popf
repnz
(bad)
jle
ins
sti
push
xchg
(bad)
cld
cli
and
out
(bad)
pop
lahf
leave
cli
fwait
(bad)
popa
mov
idiv
retf
lock
(bad)
jg
das
fmul
lea
fdecstp
push
ins
out
(bad)
mov
std
scas
clc
(bad)
mov
std
(bad)
jmp
or
cmps
mov
dec
loop
inc
das
(bad)
jecxz
sahf
pop
cmp
cld
call
out
iret
(bad)
sahf
pop
cmp
cld
call
clc
shl
mov
pop
sahf
jg
xlat
stc
cmp
pop
sar
(bad)
push
call
lds
lods
mov
lahf
rcr
pop
adc
out
jns
xchg
not
int3
jle
xchg
(bad)
sbb
dec
jns
mov
push
iret
dec
(bad)
repz
xor
shl
mov
dec
mov
pop
jl
jns
ds
cld
daa
repz
lahf
mov
outs
fidivr
mov
mov
scas
int3
ja
pop
mov
mov
repz
cld
mov
fdivrp
pusha
jg
mov
inc
icebp
out
clc
loope
push
inc
out
cwde
inc
out
pop
lock
out
push
fcomip
in
jge
out
jge
pavgw
pop
push
enter
iret
sti
ret
push
mov
mov
stc
xor
std
sti
xlat
xchg
pop
hlt
xor
(bad)
cli
out
outs
cmps
mov
getsec
sar
aaa
lock
idiv
int3
sti
sbb
jmp
hlt
call
mov
jge
std
jge
out
jg
cli
jmp
(bad)
jmp
(bad)
call
(bad)
jg
cli
jmp
imul
add
dec
mov
call
dec
stc
sar
jg
xlat
adc
jle
mov
mov
sti
(bad)
clc
mov
(bad)
(bad)
popf
and
scas
lods
(bad)
push
(bad)
mov
sar
or
mov
int3
jg
loop
push
mov
dec
imul
hlt
mov
into
dec
jg
cli
xlat
enter
hlt
imul
pop
jecxz
scas
jno
outs
cmps
mov
sti
xor
mov
jg
mov
fstp
jge
inc
aas
or
lahf
into
call
jmp
aaa
sub
lods
mov
imul
icebp
scas
xchg
shl
das
jmp
hlt
outs
cli
imul
scas
jno
sub
stc
cmp
xchg
hlt
mov
push
and
dec
test
xchg
sub
fwait
scas
repz
xchg
mov
dec
pop
out
push
je
sahf
xchg
inc
sahf
xor
pop
nop
retf
shr
in
cmps
out
leave
std
sub
scas
jmp
hlt
clc
in
rcl
repz
dec
pop
cmps
dec
pop
scas
cmps
push
sub
nop
in
jno
mov
stc
rcr
addr16
push
out
jb
push
repz
mov
(bad)
pop
xor
or
outs
inc
xchg
aaa
dec
inc
int3
(bad)
xchg
and
out
pop
lock
cmp
call
movs
int
ds
jge
cmps
xor
fdivp
jge
fcomp
icebp
add
hlt
dec
pop
mov
dec
daa
out
xor
sar
shl
out
outs
and
jns
popf
or
aas
ficomp
(bad)
mov
shl
out
cmp
outs
daa
popf
lods
mov
shl
not
neg
ds
mov
into
cmp
fmulp
cmps
pop
jmp
sbb
div
jbe
sbb
imul
movs
pop
retf
mov
mov
ins
pop
sub
pusha
pop
mov
std
popf
xchg
sti
xchg
popf
fbstp
adc
dec
hlt
ins
cmp
in
les
lods
xor
cli
outs
test
mov
pop
(bad)
sbb
sti
sub
loope
pop
inc
sbb
(bad)
sbb
sahf
push
pop
repnz
mov
std
icebp
cld
jecxz
loop
(bad)
repz
xor
fwait
jge
sti
clc
mov
call
mov
ror
and
int3
and
(bad)
mov
pushf
lock
retf
retf
lods
sub
jmp
ficomp
jb
retf
outs
xor
test
xchg
cmp
movs
push
pop
xchg
cs
xchg
in
mov
mov
(bad)
mov
inc
out
hlt
pop
stc
int
fdiv
cmps
dec
jg
pop
jecxz
cs
(bad)
mov
(bad)
fidivr
aaa
push
jle
pop
jecxz
cli
repnz
dec
mov
fldcw
cli
lahf
jg
mov
retf
(bad)
push
out
outs
cli
jne
es
sub
adc
movd
sti
imul
fild
clc
test
int
test
hlt
out
pop
icebp
pop
mov
imul
(bad)
jmp
outs
stc
std
pop
jle
std
retf
(bad)
(bad)
xchg
aas
loopne
sti
mov
jecxz
sbb
xchg
jnp
fistp
clc
inc
icebp
fstp
ud0
(bad)
call
jle
loope
loopne
lahf
lock
(bad)
jg
jmp
dec
retf
outs
aas
sti
and
sub
cmp
out
sti
idiv
imul
(bad)
(bad)
mov
shl
jo
hlt
sbb
push
scas
sahf
std
jne
enter
std
movs
mov
loopne
jg
outs
clc
idiv
jg
pop
jg
leave
pop
imul
lock
mov
mov
iret
mov
out
lock
fidivr
repz
addr16
adc
fcmovne
lahf
std
push
iret
dec
inc
retf
jmp
xor
std
fnstcw
outs
idiv
jg
outs
imul
cld
xlat
mov
ds
xchg
jmp
mov
out
pop
call
xchg
outs
call
(bad)
cmp
pop
ins
std
jp
imul
(bad)
in
fscale
xchg
dec
jg
mov
enter
ds
mov
out
in
stos
fucomip
psubw
imul
ret
fild
lahf
std
add
jecxz
(bad)
stc
mov
clc
fucomip
addr16
push
(bad)
in
jecxz
out
retf
pop
clc
call
dec
dec
cli
repnz
cld
push
jns
dec
retf
iret
(bad)
lods
(bad)
lahf
jge
in
psubd
(bad)
mov
call
call
aas
(bad)
jg
mov
loop
push
jmp
jnp
mov
xchg
jg
cld
dec
cmp
rcr
fistp
lahf
cld
push
jg
mov
into
jg
push
std
pop
inc
push
in
lock
hlt
out
pop
jg
scas
neg
std
sbb
jg
jg
shr
std
fwait
cld
(bad)
pop
mov
dec
popf
xchg
pop
dec
jle
hlt
retf
aas
jecxz
dec
repz
cli
jmp
fstp
fwait
std
retf
test
out
cld
jno
jp
loopne
cli
sti
jmp
or
loop
hlt
jb
jnp
jnp
addr16
stc
aas
sti
loop
cli
sti
jmp
jl
lock
repnz
(bad)
cli
sbb
out
das
push
mov
(bad)
cld
cmp
repz
ret
jg
lahf
jnp
in
scas
(bad)
and
xlat
(bad)
push
mov
(bad)
outs
(bad)
jg
cmc
mov
fstp
stc
mov
scas
cli
xchg
loopne
aas
out
aas
fdivrp
daa
jle
cld
fistp
sti
icebp
mov
(bad)
icebp
mov
mov
xchg
cld
sar
mov
outs
jg
idiv
out
sar
es
in
jmp
loopne
std
fwait
call
addr16
iret
cld
cmp
mov
outs
push
cdq
imul
(bad)
rcl
(bad)
idiv
repnz
mov
ja
std
call
pop
icebp
(bad)
cmc
lahf
cld
loop
loopne
cld
mov
pop
cld
and
ja
iret
xchg
jo
jle
mov
popf
mov
sti
push
inc
dec
idiv
loope
sub
mov
dec
pop
std
aas
dec
push
leave
lahf
idiv
jg
std
imul
mov
cld
pop
(bad)
push
mov
inc
pop
mov
shr
lock
lock
std
sub
and
xchg
shr
sbb
test
scas
pop
lahf
std
movs
mov
in
repnz
clc
arpl
xchg
call
cmp
stc
mov
cld
jmp
jg
std
aas
out
jle
iret
(bad)
popf
mov
call
(bad)
dec
cmp
push
(bad)
fdivr
aam
in
das
stc
xor
jmp
loope
cld
loop
jmp
cld
jge
lahf
inc
outs
pop
loope
xchg
jg
call
cmp
cdq
lea
jg
push
ds
(bad)
aas
sti
arpl
cli
fidivr
and
aad
fnstsw
mov
in
jmp
call
fninit
aas
repz
aas
clc
xchg
jmp
lahf
cld
idiv
jg
sti
clc
in
mov
std
in
test
jle
mov
push
or
jge
js
xor
outs
std
clc
(bad)
sbb
sti
jg
jmp
(bad)
lods
jle
jg
xchg
cld
gs
loop
sti
pop
(bad)
push
(bad)
jmp
repnz
(bad)
pop
mov
dec
mov
cmp
push
(bad)
cli
dec
scas
jne
cli
add
enter
into
(bad)
jmp
rcr
daa
call
outs
stc
repnz
clc
jnp
jmp
clc
outs
retf
(bad)
bnd
pop
clc
xor
jg
aaa
call
jg
ret
clc
in
push
clc
in
xlat
std
cmp
jmp
cli
in
mov
lahf
std
ds
push
(bad)
jae
jge
das
jmp
lds
push
jg
push
out
cmp
mov
push
pop
cld
out
mov
repnz
mov
inc
aas
repnz
mov
call
sti
xlat
jg
jl
dec
jmp
lahf
cld
repz
jle
das
cmp
cmp
pop
cmc
(bad)
aas
cld
xlat
(bad)
popf
fistp
lahf
std
mov
fsub
jg
mov
pop
cld
cmp
cld
outs
mov
pop
int
loope
les
call
(bad)
mov
mov
jle
imul
(bad)
jmp
jg
cmps
mov
mov
jg
jg
ud1
xchg
loopne
jg
(bad)
pop
(bad)
sbb
std
scas
(bad)
out
loope
push
sbb
inc
jg
ds
sbb
(bad)
push
jmp
lahf
repnz
fdivrp
(bad)
ja
test
(bad)
stos
pop
cld
jg
cld
(bad)
out
repnz
inc
mov
sar
in
stc
out
lock
(bad)
out
dec
out
fbstp
jg
(bad)
mov
dec
push
xlat
jg
ja
aad
cld
psubq
lea
jmp
sti
fwait
icebp
fldcw
sub
call
aaa
dec
(bad)
fst
(bad)
jmp
jle
pop
(bad)
(bad)
fidivr
sub
neg
in
inc
clc
in
dec
cli
paddd
jg
daa
mov
aad
cld
(bad)
cli
aaa
call
jecxz
inc
jmp
loopne
cmp
sub
(bad)
inc
cld
retf
dec
jg
lahf
std
pop
jge
xor
lahf
stc
stc
pop
cli
(bad)
ins
jg
pop
jno
ja
popf
dec
enter
fstp
pop
iret
(bad)
hlt
(bad)
leave
(bad)
clc
ja
jmp
jecxz
cli
pop
scas
inc
mov
xor
(bad)
pop
jg
ds
sar
lahf
call
xor
jg
mov
jmp
lahf
repnz
call
in
(bad)
(bad)
jmp
hlt
mov
sbb
mov
(bad)
inc
ds
repz
jl
(bad)
(bad)
aaa
jg
scas
idiv
outs
dec
(bad)
aam
aas
cli
or
(bad)
repz
out
psubd
cmp
call
jle
mov
mov
mov
jnp
gs
loopne
xchg
jg
mov
push
mov
es
sbb
inc
mov
stos
jmp
jg
lds
addr16
cli
pop
push
jmp
out
stc
arpl
test
jmp
mov
(bad)
addr16
outs
cld
pop
std
dec
(bad)
fisubr
scas
(bad)
out
jmp
dec
std
(bad)
outs
mov
(bad)
aad
addr16
lahf
jg
out
cli
fstp
call
inc
aas
cmc
mov
test
aas
adc
dec
inc
icebp
in
std
cdq
mov
mov
aas
icebp
dec
(bad)
fsub
push
pop
dec
mov
daa
(bad)
(bad)
daa
inc
fbstp
call
(bad)
std
push
das
std
hlt
dec
and
(bad)
fsubr
ds
imul
jnp
or
jg
cli
aaa
(bad)
jp
out
sbb
lods
jle
jg
out
stc
ja
out
mov
daa
dec
outs
push
push
lahf
mov
in
xlat
cwde
std
aaa
jg
cmc
lahf
inc
(bad)
pop
(bad)
and
(bad)
fcomip
lahf
stc
in
in
scas
clc
addr16
jns
pop
xor
and
mov
mov
fistp
repnz
in
clc
jmp
xchg
mov
scas
pushf
inc
hlt
mov
leave
out
jl
jmp
test
mov
push
std
call
xchg
mov
std
(bad)
mov
(bad)
jg
(bad)
(bad)
mov
cmp
cmps
push
sti
xor
(bad)
fstp
idiv
outs
dec
fist
icebp
sti
lahf
sub
cmc
pop
adc
scas
pop
aas
jge
dec
jmp
mov
iret
cld
ror
fiadd
(bad)
call
xchg
add
(bad)
fcomip
imul
imul
stc
sti
popw
jecxz
fs
idiv
dec
jmp
loop
fnstenv
loop
aam
jge
(bad)
movs
and
hlt
clc
cmc
jmp
out
in
std
mov
xchg
sbb
clc
shl
repz
stc
xor
mov
test
ins
call
jne
jmp
push
scas
jle
sti
sti
pop
repz
cmc
imul
hlt
(bad)
jge
mov
jmp
jg
pop
jecxz
jnp
imul
call
dec
neg
movd
xlat
cli
xor
adc
iret
mov
test
inc
lahf
jns
cld
daa
mov
out
mov
(bad)
mov
cld
push
mov
(bad)
mov
dec
out
std
inc
test
out
inc
call
sar
pop
sar
pop
sar
jg
cli
dec
jmp
jmp
inc
(bad)
jmp
(bad)
jg
std
call
mov
(bad)
inc
(bad)
jg
out
xchg
frstor
jmp
dec
jmp
aas
mov
jmp
sar
(bad)
cmp
call
(bad)
inc
call
(bad)
mov
hlt
(bad)
fisttp
sti
hlt
jmp
mov
std
dec
(bad)
jmp
(bad)
mov
sar
call
(bad)
call
pmaddwd
inc
dec
call
jg
std
call
(bad)
(bad)
jns
(bad)
mov
sar
push
cli
(bad)
mov
call
call
mov
call
sar
lahf
sar
pop
sar
jg
scas
inc
ret
idiv
sbb
xchg
aas
cmp
xlat
sar
call
aad
idiv
inc
mov
jecxz
call
mov
loop
idiv
cs
std
(bad)
mov
bound
xchg
jmp
sbb
rcl
fbld
xor
xor
jmp
das
pop
mov
std
sbb
pop
out
mov
jg
sub
xor
retf
mov
fbstp
call
clc
int
mov
mov
in
out
mov
lock
inc
mov
xchg
std
pop
aam
icebp
ret
jecxz
repz
inc
(bad)
cmp
pop
es
adc
cmp
je
cmp
aad
cmp
stos
ins
cmps
fist
jmp
scas
cmc
in
cmp
loope
pop
jecxz
clc
addr16
mul
cli
cld
sbb
xor
pop
clc
hlt
xlat
clc
xor
push
sahf
int
fdivr
call
pushf
xchg
push
xchg
jg
pop
into
retf
clc
cmp
push
stc
push
pop
cld
sbb
outs
dec
das
jae
inc
(bad)
in
mov
(bad)
int
jle
jle
pop
jecxz
push
(bad)
sub
mov
mov
repnz
out
jp
xlat
dec
mov
xor
mov
mov
xchg
imul
jmp
add
aaa
(bad)
aaa
(bad)
xor
xlat
jns
out
jmp
mov
iret
dec
stos
lds
stos
mov
sar
mov
jmp
(bad)
sahf
movs
adc
xlat
clc
mov
lds
scas
pop
push
bnd
add
mov
test
jle
pop
push
popf
aam
sbb
push
clc
sti
std
call
fs
les
(bad)
(bad)
imul
sub
jl
sub
neg
retf
leave
dec
arpl
jo
test
mov
cld
leave
mov
sub
cld
jne
in
jp
jmp
ret
push
ds
xor
jle
pop
jecxz
stc
jne
scas
sbb
imul
cmp
fimul
jns
inc
repz
sbb
in
stc
xor
(bad)
out
scas
icebp
pop
cld
sbb
mov
jle
imul
jge
mov
add
aaa
neg
pop
sbb
sbb
int3
call
lods
dec
sar
out
stos
adc
scas
icebp
xchg
cmp
(bad)
cmc
xor
hlt
std
out
(bad)
jmp
xchg
out
add
sbb
pop
std
mov
ror
rcr
scas
std
cmp
cs
stc
imul
sub
or
xlat
clc
lahf
add
test
xchg
lahf
push
mov
jg
pop
mov
xor
lods
dec
dec
mov
mov
jle
adc
mov
(bad)
test
ficomp
pop
aaa
mov
sub
sub
jle
fistp
inc
repnz
aam
clc
out
scas
icebp
(bad)
cld
dec
nop
and
cli
in
xor
out
mov
cmps
iret
out
in
dec
sub
mov
mov
jnp
push
movs
jns
jp
cli
retf
ja
cmp
int
je
push
addr16
idiv
sbb
lods
and
(bad)
xlat
cmp
jmp
jg
fst
shl
mul
dec
and
pop
pushf
adc
aas
sub
xor
test
mov
lahf
push
xor
pop
daa
scas
jle
xchg
outs
adc
dec
xchg
jo
fidivr
jp
hlt
cld
jg
inc
mov
clc
mov
aas
cmp
retf
mov
jge
std
push
jge
xlat
shl
call
jge
daa
sar
jg
out
sti
fwait
sahf
xor
jge
cmp
out
fnstcw
jmp
pop
mov
out
cli
dec
fisubr
jmp
hlt
sbb
jae
leave
mov
mov
mov
(bad)
pop
outs
test
mov
pop
lahf
pop
xchg
movs
cld
paddw
pop
hlt
fcmovnbe
iret
add
sbb
imul
push
cmp
mov
popa
out
aas
mov
mov
(bad)
scas
icebp
jg
sar
dec
mov
call
xlat
fsub
js
imul
hlt
out
sub
add
jg
mov
jecxz
pop
jecxz
std
jge
(bad)
ds
xor
clc
sti
jg
push
inc
fcomp
loop
fist
lods
xlat
outs
push
mov
lahf
pop
xchg
loopne
mov
push
cld
sbb
pop
jecxz
mov
imul
jns
imul
fucomi
fdivr
idiv
or
sti
imul
pop
mov
lahf
sar
fwait
pop
arpl
jo
add
mov
fisubr
lahf
movs
call
aam
jge
jmp
and
jmp
push
push
sub
push
rcr
pop
arpl
imul
clc
(bad)
sti
out
sti
add
push
mov
inc
mov
pop
cld
mov
popa
lock
xor
push
in
lods
imul
push
(bad)
(bad)
lock
loope
and
stos
and
xor
outs
call
call
imul
mov
shl
jb
jl
sar
repz
xor
push
dec
jne
outs
dec
stos
lds
ja
dec
leave
in
sub
mov
jge
cmp
stc
call
hlt
jno
scas
fwait
push
xchg
out
sub
call
dec
leave
pop
jmp
hlt
or
rcr
cmp
test
shl
sub
out
gs
cmps
and
lods
cmp
push
outs
repz
mov
loope
jg
sar
ss
inc
inc
(bad)
out
push
mov
jp
aas
mov
scas
sbb
scas
mov
push
aas
jge
mul
repz
xlat
clc
int
int
jecxz
and
sti
cmp
scas
icebp
out
ror
(bad)
sbb
scas
popf
jg
out
(bad)
emms
jle
into
(bad)
in
ds
test
mov
cmp
std
fidivr
(bad)
fidivr
idiv
out
std
idiv
jnp
aam
jg
fisubr
push
scas
idiv
jmp
fdivrp
stos
idiv
sti
mov
aas
mov
shl
jmp
ret
cmps
mov
call
push
dec
(bad)
mov
mov
lock
cmp
xchg
(bad)
pop
ud0
xchg
mov
call
ds
cmps
pop
std
or
mul
hlt
push
(bad)
mov
inc
push
jmp
call
pop
jmp
(bad)
mov
iret
jle
fstp
hlt
fstp
(bad)
fstp
sti
fstp
fstp
fstp
fstp
(bad)
hlt
(bad)
stc
(bad)
neg
aas
cld
fnstcw
icebp
fnstcw
(bad)
fnstcw
hlt
fistp
jge
hlt
xchg
push
std
jne
jg
sar
cmp
cmp
lahf
sti
cmp
push
pusha
ins
cmp
ror
dec
call
jmp
push
ret
cmp
jle
pop
retf
pop
jg
cmp
rcr
outs
jnp
dec
cmp
aaa
push
cld
xlat
test
inc
pop
pop
pop
fistp
clc
mov
cmp
arpl
dec
cmp
aas
cmp
pop
movd
pop
clc
lock
mov
(bad)
jmp
cmp
out
sub
pop
aas
cli
xlat
ud0
(bad)
inc
(bad)
call
jecxz
out
icebp
scas
jp
hlt
mov
adc
sbb
(bad)
inc
mov
cmp
(bad)
cmp
cld
push
(bad)
cmp
fild
dec
mov
cld
inc
hlt
jecxz
fyl2xp1
pop
ja
cmp
ficomp
(bad)
cwde
sub
addr16
inc
fistp
jnp
in
std
jecxz
call
fdivrp
mov
jg
std
mov
mov
call
inc
outs
jge
jecxz
sti
inc
in
lahf
mov
bnd
imul
fbstp
nop
retf
pop
mov
out
lock
push
pop
inc
jg
loope
ja
dec
pop
(bad)
stos
xchg
stc
loope
jb
fwait
aas
inc
jecxz
out
aas
repz
mov
div
mov
jecxz
scas
stc
imul
aam
das
cmps
cmp
test
mov
jmp
cmps
jnp
idiv
mov
(bad)
std
aas
std
adc
std
sbb
std
aas
aas
std
mov
iret
mov
dec
mov
in
xrelease
imul
(bad)
icebp
ud0
xchg
ret
mov
lock
jns
fistp
cld
mov
icebp
call
call
aas
cli
jmp
std
sub
inc
int
das
jg
jg
cli
sbb
pop
xchg
loope
jp
iret
push
(bad)
jmp
(bad)
(bad)
loope
jbe
jg
(bad)
push
(bad)
mov
out
stc
clc
fisttp
jmp
mov
addr16
(bad)
loop
xlat
lahf
pop
jl
pop
jle
inc
rcr
xor
(bad)
clc
addr16
addr16
jne
cmp
mov
ds
or
imul
pop
cmp
jmp
pop
div
clc
dec
jle
fcomip
idiv
xor
xlat
js
arpl
imul
mov
loope
aas
std
fdivrp
jo
(bad)
mov
(bad)
fcomip
(bad)
out
std
fcomip
inc
mov
cli
jmp
jnp
jp
call
ds
jne
fwait
jg
das
lods
jle
fdivr
stc
pop
ja
ja
nop
fnstsw
popa
test
jle
(bad)
fistp
fwait
sti
call
mov
in
out
mov
(bad)
fdivr
or
jmp
dec
std
push
sar
out
pop
jecxz
cli
xor
fidivr
(bad)
je
addr16
stc
inc
(bad)
fcmovbe
mov
icebp
push
jae
daa
std
call
retf
popf
fild
das
fdivrp
xor
fnstsw
idiv
jle
mov
stc
ficomp
std
xchg
fidivr
jg
mov
jg
out
mov
pop
sti
dec
(bad)
(bad)
mov
inc
cmp
(bad)
fbstp
pop
mov
cld
jmp
std
cdq
dec
jg
xchg
dec
pop
(bad)
outs
(bad)
ds
cli
call
lock
adc
(bad)
fnstsw
sti
in
ror
sahf
jg
mov
cli
idiv
or
mov
mov
(bad)
scas
icebp
jg
cld
cmp
mov
jae
jg
ficomp
idiv
mov
(bad)
fscale
(bad)
shl
dec
inc
pop
jg
cmp
jmp
leave
cld
pop
push
std
fisttp
mul
push
inc
mov
jnp
stos
(bad)
xlat
clc
fwait
jle
pop
jecxz
mov
retf
dec
jb
sub
pop
fstp
mov
inc
sbb
or
(bad)
aad
(bad)
(bad)
mov
dec
mov
adc
out
xchg
sti
cmc
(bad)
lahf
mov
inc
aas
fcos
scas
idiv
mov
(bad)
(bad)
fbstp
lahf
mov
not
(bad)
lahf
into
aas
std
(bad)
aas
std
idiv
std
outs
aas
std
in
push
int3
push
cld
sub
inc
pop
mov
cld
add
out
div
loop
pop
inc
jp
out
pop
cli
call
pop
inc
xchg
loope
jo
push
iret
cmp
inc
pop
daa
lahf
jge
fstp
jecxz
(bad)
lahf
dec
xor
fwait
call
aas
icebp
jnp
icebp
mov
push
xor
xlat
clc
ss
arpl
cmp
into
aas
dec
mov
outs
neg
fdivr
sbb
jnp
std
(bad)
mov
fimul
imul
fsin
mov
(bad)
jmp
aas
clc
jmp
rcr
mov
xchg
jle
mov
mov
out
in
jle
sbb
cmc
call
cmp
push
mov
xchg
mov
pop
out
es
clc
fucomip
cld
retf
imul
fscale
sbb
jg
mul
mov
jg
addr16
jmp
pop
std
fldcw
cs
jmp
(bad)
cs
(bad)
jmp
(bad)
mov
icebp
clc
idiv
cld
neg
hlt
shr
cld
inc
cmp
into
jg
adc
mov
fstp
sti
in
cmps
and
aas
jge
inc
je
and
movs
(bad)
in
std
jg
(bad)
mov
(bad)
mov
push
lahf
(bad)
scas
(bad)
mov
inc
jecxz
sti
icebp
pop
cld
clc
(bad)
jp
aaa
aas
(bad)
mov
dec
imul
jne
lahf
push
std
cmp
cmp
jbe
mov
mov
jg
(bad)
mov
div
sti
scas
out
(bad)
fdivp
jg
sti
sar
cmc
std
aas
cld
(bad)
pop
ja
dec
mov
jmp
call
mov
call
mov
pop
out
jmp
(bad)
sar
jmp
(bad)
jg
(bad)
jg
(bad)
mov
(bad)
cmp
lahf
(bad)
ss
dec
jle
jmp
idiv
jge
jmp
dec
lahf
jg
jmp
rcr
cmps
aas
std
jmp
into
aas
in
aas
jmp
sar
out
mov
sar
cmc
jmp
imul
aas
repz
inc
jae
lahf
nop
(bad)
std
pop
ds
in
(bad)
out
lahf
(bad)
sbb
jle
pop
mov
shr
pop
cmp
fstp
cld
push
pop
mov
sbb
cmp
fistp
clc
pop
mov
jg
xchg
jns
cmp
and
(bad)
outs
movq
inc
jnp
jle
shr
jp
dec
push
std
loope
(bad)
cmps
inc
dec
mov
cli
call
push
std
outs
(bad)
into
push
mov
pop
jne
cmps
pop
(bad)
mov
movs
(bad)
push
jg
jecxz
lods
lds
std
or
fcmovbe
lahf
jae
pop
sbb
(bad)
out
jg
cmp
fistp
cli
xor
sti
xchg
cmps
popf
pop
jecxz
iret
(bad)
sahf
pop
cmp
sar
xchg
jg
scas
cmc
fwait
in
cld
dec
mov
call
(bad)
std
jecxz
(bad)
outs
div
outs
test
out
inc
jg
scas
cmc
fwait
std
mov
xlat
cli
int
fdivr
xlat
cli
int
fstp
out
std
stos
mov
lahf
call
int
call
scas
cmc
fwait
std
mov
in
cmc
fwait
std
notrack
scas
cmc
fwait
std
xchg
push
scas
cmc
(bad)
xchg
fucomip
push
ror
(bad)
scas
cli
mov
mov
jmp
movs
mov
jle
mov
fwait
cmp
fucomip
outs
daa
cmp
jle
(bad)
outs
(bad)
mov
mov
loopne
clc
mov
mov
test
(bad)
mov
fwait
mov
fucomip
lahf
(bad)
xchg
jle
fucomip
(bad)
mov
lods
fucomip
ja
fdivr
(bad)
imul
lahf
push
mov
shl
inc
dec
std
movs
mov
dec
xor
(bad)
push
das
cli
mov
mov
hlt
pop
std
mov
mov
pushf
lock
or
mov
jle
pop
cmc
out
fdivr
xlat
cli
int
shl
fcomp
mov
xor
mov
jle
aas
call
mov
test
pop
mov
call
fcos
repnz
adc
cs
std
out
(bad)
mov
mov
mov
into
fcomip
scas
cld
pop
mov
jg
pop
cld
pop
mov
jmp
jno
fistp
cmp
fcomip
imul
iret
push
dec
arpl
addr16
fucomip
scas
std
mov
fucomip
ja
xor
mov
repnz
cmc
fwait
pop
dec
mov
adc
inc
mov
fwait
(bad)
push
xor
push
jmp
fdiv
or
pop
mov
pop
jmp
sti
lahf
test
sti
mov
mov
(bad)
loopne
push
jmp
cmp
mov
jle
pop
mov
call
(bad)
push
mov
paddd
call
out
adc
repz
sti
outs
and
lods
imul
das
mov
call
call
(bad)
mov
das
and
out
clc
sub
mov
xor
mov
xor
jns
mov
int
inc
xor
aas
test
cli
pop
inc
inc
mov
mov
mov
sti
xchg
in
iret
sti
sar
fucomip
iret
and
(bad)
push
add
aas
cmps
cmp
sbb
aas
inc
hlt
cli
pop
call
ror
aas
cwde
out
xor
cmc
xlat
adc
and
fistp
jo
sub
sti
pop
dec
je
out
pop
push
mov
(bad)
(bad)
aam
pop
inc
cmp
mov
cmc
(bad)
out
adc
aas
outs
dec
dec
(bad)
sbb
cld
outs
aas
stc
inc
call
jg
aas
sbb
cli
mov
jg
outs
std
push
dec
cmp
les
sti
jmp
outs
jg
aas
xchg
enter
idiv
mov
in
std
cmp
outs
jg
jg
pop
jmp
outs
stc
mov
jmp
mov
in
(bad)
(bad)
lods
jle
stc
clc
xlat
and
shr
push
cmc
fwait
rcr
mov
(bad)
cmp
(bad)
cmp
dec
jg
cmps
mov
mov
aas
clc
pop
rcr
fdivrp
in
push
mov
ds
fidivr
loopne
(bad)
outs
inc
out
std
out
ja
popf
out
(bad)
lods
jle
fstp
jmp
jp
mov
scas
repz
out
jmp
jle
inc
in
paddw
jle
(bad)
(bad)
push
aas
jp
rcr
jmp
(bad)
retf
out
push
xchg
pop
cld
cmp
xor
jne
fcomp
dec
xchg
std
mov
or
test
(bad)
jg
aas
bnd
cli
mov
stc
sub
mov
cmp
jl
(bad)
std
mov
cld
pop
jg
ja
fninit
cmp
jecxz
cld
dec
loop
pop
dec
popf
jmp
into
sub
icebp
(bad)
imul
push
(bad)
std
mov
outs
in
enter
loope
aad
std
jg
cmc
pop
(bad)
cmp
fild
sti
mov
not
jg
jg
pop
inc
fmul
fucomip
neg
mov
std
xchg
dec
(bad)
(bad)
cmp
aas
inc
(bad)
adc
jg
aas
(bad)
cmc
jle
mov
ret
jg
inc
jg
mov
clc
pop
(bad)
jmp
popf
jg
idiv
(bad)
loope
stc
pop
shr
jmp
mov
lahf
push
outs
jle
(bad)
lock
cmp
cwde
es
dec
in
scas
(bad)
sahf
fbstp
clc
mov
stos
jle
aas
clc
jg
cld
pop
mov
dec
out
repz
jmp
jg
jge
jmp
call
lock
imul
(bad)
call
rcr
cli
loop
(bad)
call
in
out
mov
outs
std
(bad)
not
mov
out
ret
pop
repz
cli
jge
int
fmul
(bad)
std
sar
cld
(bad)
idiv
std
xchg
cmp
popa
or
add
call
mov
and
cmp
ja
cmp
jg
cmps
mov
cmps
jg
mov
jg
push
(bad)
stos
jg
mov
dec
(bad)
fistp
lahf
lahf
and
jmp
out
cld
mov
sar
aas
cli
or
cld
xchg
dec
(bad)
pop
inc
call
scas
mov
mov
fdivrp
daa
jle
pop
repz
clc
out
aas
clc
aaa
jl
(bad)
jmp
call
push
scas
icebp
adc
std
cwde
mov
(bad)
scas
stc
aas
(bad)
fistp
xor
sahf
out
pop
sbb
aad
cli
xor
add
hlt
idiv
mov
or
(bad)
(bad)
(bad)
jg
aas
stc
daa
push
(bad)
cld
mov
(bad)
xlat
cld
mov
int
xchg
ficom
xchg
repnz
cld
sub
pop
repz
stc
ja
iret
jg
idiv
(bad)
pop
jp
test
arpl
les
mov
sub
pop
std
mov
nop
jns
jg
std
dec
pop
xchg
pop
mov
fisttp
mov
pop
cld
aas
cld
jae
cmp
shl
sbb
into
push
sti
call
dec
loopne
xlat
jg
ds
xor
xchg
(bad)
cld
mov
mov
neg
cli
lahf
jle
mov
jmp
repz
mov
fist
fild
cli
ja
repz
jg
fucomip
xlat
stc
(bad)
mov
mov
(bad)
cld
mov
mov
test
push
jg
jg
pop
jmp
cmp
(bad)
test
call
xor
cmc
out
imul
loope
dec
(bad)
fidivr
aas
stc
imul
(bad)
jg
fcomip
mov
int
xor
jmp
out
out
icebp
jmp
sbb
mov
out
std
pop
push
aas
inc
outs
mov
dec
ror
scas
test
dec
or
(bad)
jmp
loopne
scas
icebp
imul
pop
jmp
hlt
retf
idiv
loopne
div
aas
cli
(bad)
fidivr
and
pop
lahf
push
push
repnz
std
cmp
test
mov
xchg
(bad)
mov
aas
repnz
aas
(bad)
scas
xlat
pop
mov
std
xlat
push
mov
inc
(bad)
loope
in
jp
ja
repnz
aas
data16
sub
lods
pop
stc
das
std
retf
idiv
scas
call
std
cmp
aas
cmc
out
xlat
mov
jg
cli
out
cld
inc
(bad)
jmp
test
cld
in
(bad)
push
push
scas
dec
jg
jg
emms
inc
(bad)
cli
fst
or
lock
dec
pop
out
cli
pop
jg
(bad)
jmp
cld
cmp
outs
call
jmp
lahf
adc
cld
xlat
dec
push
jg
fistp
ret
(bad)
std
and
bnd
jmp
xor
scas
mov
jnp
sub
scas
or
neg
outs
inc
mov
jg
cmp
cld
xlat
lahf
rcl
(bad)
scas
inc
(bad)
call
stos
fisttp
pop
adc
mov
idiv
jmp
hlt
fmul
icebp
pop
cli
ud0
retf
into
jg
int3
leave
pop
aam
div
pop
(bad)
sti
test
pop
sti
pop
add
push
jle
push
std
cmps
jle
mov
mov
cld
pop
(bad)
(bad)
movs
(bad)
daa
(bad)
out
loop
cld
pop
out
(bad)
loopne
stc
loope
clc
pop
jg
pop
stc
das
dec
jg
paddd
pop
sti
das
ja
cdq
(bad)
mov
rcl
pop
mov
and
and
retf
push
outs
(bad)
jmp
repnz
std
push
cmps
jg
jg
in
outs
(bad)
jnp
clc
mov
(bad)
scas
mov
test
mov
mov
mov
stc
xchg
(bad)
sar
jmp
std
pop
call
aas
call
jmp
jmp
std
pop
push
pop
mov
std
lods
pop
push
xchg
cld
xlat
cld
cmps
into
mov
lods
ja
cmc
jg
aad
inc
or
pop
test
mov
hlt
out
clc
xchg
sar
in
xlat
dec
mov
out
add
(bad)
aad
mov
jne
lahf
(bad)
mov
in
outs
jmp
dec
jg
mov
pop
stc
daa
jl
xchg
(bad)
mov
call
test
mov
push
jmp
and
fcomip
(bad)
icebp
pop
push
call
pop
lock
push
jg
aas
(bad)
pop
(bad)
mov
hlt
jg
std
cmp
xchg
cmp
jle
(bad)
cli
fbld
mov
cmp
daa
mov
icebp
xlat
and
jb
push
out
dec
dec
call
jg
ds
mov
daa
retf
jnp
cmps
fild
stc
in
cld
(bad)
(bad)
mov
jmp
sbb
cli
xchg
jmp
cmc
push
out
jg
sbb
push
mov
callw
add
repz
(bad)
rcr
and
or
jle
jb
dec
call
movs
jmp
fstp
clc
push
jl
xlat
inc
jg
popf
jmp
sti
mov
jmp
stc
loop
std
add
pop
add
(bad)
mov
hlt
out
out
jnp
jae
mov
push
push
movd
cdq
into
(bad)
cli
(bad)
cld
dec
ror
sar
pop
rol
xor
or
push
mov
in
mov
sub
push
loopne
(bad)
xlat
fs
(bad)
jmp
cdq
pop
call
in
aas
call
jg
es
(bad)
(bad)
xchg
jle
aad
repz
fidivr
std
sbb
xlat
mov
jno
(bad)
jge
fistp
mov
adc
leave
lahf
clc
stc
cld
daa
(bad)
call
sti
pop
jmp
mov
cli
lahf
cld
push
stos
mov
cli
icebp
fsubr
std
inc
jle
and
cli
mov
dec
mov
mov
(bad)
outs
mov
scas
jle
mov
push
inc
repnz
(bad)
xlat
inc
xor
into
mov
pop
jmp
xchg
and
xor
cmp
addr16
out
sti
scas
loopne
xchg
mul
std
inc
jmp
mov
jne
test
jg
adc
cmc
pop
inc
bound
hlt
pop
call
aam
aad
std
pop
sar
shl
xchg
(bad)
pop
cld
cld
mov
cli
repnz
clc
xchg
(bad)
mov
cli
xchg
push
push
fwait
stos
and
xlat
pop
cld
mov
icebp
jnp
sar
push
stos
(bad)
jmp
(bad)
cmp
adc
jmp
jle
cli
div
cmp
in
neg
pop
hlt
(bad)
sbb
clc
(bad)
cli
mov
fistp
out
std
loop
cli
aas
(bad)
sub
dec
popf
repnz
out
not
(bad)
pop
jl
rcr
retf
paddd
out
sahf
scas
ds
xchg
sti
pop
jmp
inc
or
mov
std
pop
jmp
inc
pusha
sub
(bad)
aaa
(bad)
push
jg
cs
sti
mov
(bad)
imul
clc
lahf
std
sbb
xlat
std
cmp
jg
xlat
(bad)
repz
out
cmc
ud0
sbb
mov
std
mov
pop
inc
leave
pop
clc
mov
push
std
aas
cli
push
cld
xlat
dec
push
cmps
jg
das
sti
repz
mov
fcomip
ja
push
repnz
xlat
pop
adc
(bad)
jnp
mov
test
(bad)
(bad)
cmp
jg
jg
pop
jg
push
icebp
xlat
(bad)
mov
fwait
cmp
(bad)
jg
pop
cld
mov
push
lahf
neg
cld
sar
mov
scas
icebp
pop
xlat
mov
call
xchg
mov
mov
std
xlat
jmp
scas
cli
mov
mov
aas
out
push
fsin
mov
shr
xlat
and
mov
jg
inc
xchg
jg
xor
mov
rcr
sub
std
xlat
inc
(bad)
xchg
cld
jecxz
sub
jmp
cld
xlat
(bad)
fisubr
jg
mov
repnz
idiv
cmp
jbe
mov
popf
inc
jg
shl
jle
jg
jnp
lock
ret
adc
pop
call
jg
cmps
(bad)
call
cmc
mov
std
lods
jmp
pop
aas
cmps
aas
out
std
cmp
inc
stc
push
inc
out
mov
sbb
jle
inc
out
fsubr
mov
jmp
(bad)
pop
jle
sbb
pop
cld
dec
mov
out
not
jg
aad
call
mov
ds
iret
cld
int
cmps
int
cld
in
mov
(bad)
ds
jg
sbb
mov
pop
int
std
ds
hlt
jnp
mov
(bad)
sar
(bad)
(bad)
std
jg
ds
pop
sti
mov
std
in
ja
jmp
outs
(bad)
mov
jg
xor
sbb
or
cli
inc
(bad)
out
aas
call
scas
jg
psubd
push
imul
jg
outs
std
(bad)
cld
addr16
call
and
test
(bad)
out
mov
arpl
in
psubd
fnstcw
out
xchg
jb
cmp
fcomip
xlat
clc
inc
jmp
dec
xor
out
cli
outs
call
pushf
push
pop
dec
je
test
scas
jg
or
pop
cld
pop
jmp
sar
pop
xor
xchg
push
out
inc
outs
mov
lods
(bad)
in
jnp
into
scas
call
xlat
jg
out
std
inc
std
sti
(bad)
stc
scas
inc
pop
out
or
lahf
(bad)
cli
aas
cmps
rol
std
lea
aaa
mov
movs
sub
cli
aas
hlt
pop
cld
mov
jg
(bad)
mov
cmps
leave
aas
clc
in
(bad)
cli
arpl
lock
nop
mov
mov
hlt
mul
xchg
jge
(bad)
dec
rol
mov
xor
aas
cli
push
xchg
sbb
scas
dec
jl
call
retf
(bad)
out
lahf
movs
inc
adc
mov
paddb
cmc
mov
jg
mov
daa
cmp
jmp
jmp
stc
ja
sar
fbstp
mov
mov
push
jg
aas
hlt
jmp
daa
mov
adc
adc
pop
mov
out
(bad)
sar
loope
std
stos
shl
cwde
xor
and
mov
pop
push
pop
dec
repnz
inc
in
test
push
jmp
jg
stos
cmp
cli
cmp
mov
(bad)
jg
aas
cld
mov
jl
(bad)
xor
pop
jecxz
jns
clc
in
mov
cmp
pop
sbb
cld
and
call
dec
stc
mov
xchg
jnp
imul
cld
xlat
aas
dec
or
(bad)
jnp
in
aas
push
(bad)
pop
out
lock
icebp
jmp
xchg
repz
clc
pop
js
jnp
inc
inc
outs
cmc
daa
pushf
call
out
test
clc
out
std
mov
jg
mov
sar
jg
pop
sti
pop
pop
xchg
jle
(bad)
hlt
pop
jge
mov
(bad)
mov
in
(bad)
push
das
mov
scas
jle
outs
cmc
mov
test
jg
scas
(bad)
addr16
pop
jecxz
cli
scas
call
cli
cmp
leave
aas
call
jmp
call
cli
mov
(bad)
jle
lock
mov
jg
out
sti
push
ja
out
fild
cmp
pop
jmp
push
inc
lock
inc
call
jg
jg
or
jge
or
paddw
paddb
sti
inc
call
std
repz
dec
jg
jmp
cli
paddd
pop
lahf
mov
xor
or
adc
mov
or
cmc
fcomip
mov
mov
jbe
push
bound
lock
repnz
xchg
inc
out
vandnps
out
repnz
cmp
pop
hlt
lds
int
xor
inc
sti
mov
inc
lods
(bad)
cli
fistp
xchg
repz
or
jmp
jmp
out
clc
out
outs
stc
sbb
xlat
jg
mov
fild
cdq
aas
not
cli
test
std
pop
cli
std
psubd
inc
in
lahf
clc
pop
std
mov
sar
(bad)
in
cli
and
je
jmp
lahf
movs
push
mov
mov
test
(bad)
(bad)
daa
(bad)
in
jmp
cli
pop
movs
jns
mov
dec
jg
call
scas
imul
sti
adc
xchg
pop
repz
imul
cld
xlat
jg
imul
mov
jg
outs
cld
std
mov
pop
mov
jmp
clc
mov
jg
icebp
das
(bad)
pop
inc
(bad)
scas
jg
ja
pop
out
aas
and
push
out
mov
mov
sar
mov
(bad)
pushf
out
(bad)
call
pop
div
sbb
std
pop
stc
out
idiv
jg
paddd
(bad)
pop
not
out
jg
aas
cli
pop
pop
cld
mov
lds
jmp
mov
xlat
scas
inc
aas
mov
pmaxub
stc
pop
mov
(bad)
mov
jmp
cld
movsx
dec
(bad)
xlat
or
out
cmp
scas
jg
cmp
(bad)
xlat
mov
stos
xor
neg
jge
mov
cld
cmp
cld
daa
mov
xchg
std
push
ja
jp
cmp
fucomi
(bad)
cli
dec
daa
shl
xor
mov
(bad)
in
and
imul
out
dec
cmp
push
jmp
out
hlt
pop
inc
movs
ret
cld
xchg
push
rol
and
ret
pop
cld
dec
into
jg
(bad)
out
ja
push
icebp
push
test
push
shl
(bad)
ds
fsub
ja
mov
stc
cli
mov
in
(bad)
adc
jle
pop
imul
outs
mov
es
push
in
(bad)
mov
out
or
addr16
(bad)
mov
inc
icebp
fnstcw
jnp
imul
push
cmc
jg
cmps
movs
and
and
call
cmp
mov
scas
cmc
pop
dec
mov
dec
popf
push
psubd
fstp
call
xlat
push
psubd
jg
popf
(bad)
in
mov
pop
cld
(bad)
cmc
fild
mov
pop
cld
sar
push
stc
(bad)
(bad)
cmp
and
call
repz
das
mov
or
fisttp
(bad)
jg
stos
(bad)
cli
lahf
(bad)
or
clc
pop
scas
mov
(bad)
xchg
je
add
(bad)
jg
aas
clc
pop
xchg
xchg
pushf
ins
std
push
mov
sti
mov
cld
xlat
mov
(bad)
out
mov
std
idiv
outs
mov
or
push
stc
xchg
(bad)
pop
addr16
mov
mov
or
(bad)
scas
jg
jmp
jl
ja
inc
call
push
imul
jmp
test
inc
clc
repnz
clc
in
mov
jmp
stc
in
inc
sahf
out
jl
daa
jmp
mov
jg
adc
cwde
xor
mov
das
rol
scas
add
mul
sbb
test
add
push
(bad)
cmc
iret
dec
stc
jg
dec
cld
dec
in
xor
mov
jecxz
lahf
cld
arpl
rcl
pop
cld
fbld
sar
sti
in
mov
dec
cld
jg
xchg
paddw
jg
(bad)
jp
push
(bad)
jl
out
(bad)
xlat
rcr
mov
dec
in
xlat
add
dec
jg
std
pop
fild
fcmovnu
jp
jmp
imul
repz
aad
stc
mov
pop
out
inc
stos
(bad)
out
push
(bad)
jmp
jmp
lock
scas
jmp
mov
out
popf
(bad)
cli
pop
movs
jno
inc
(bad)
std
out
mov
lahf
inc
clc
out
je
jnp
cld
push
mov
(bad)
mov
cmps
cld
xlat
out
enter
jg
jg
hlt
aaa
fwait
mov
pop
push
fstp
retf
xlat
xchg
iret
dec
jae
repz
jmp
sar
(bad)
call
scas
into
or
lahf
dec
push
lds
(bad)
(bad)
mov
das
jmp
cs
jmp
mov
jg
aas
call
outs
std
jmp
adc
daa
idiv
(bad)
jmp
out
cli
scas
scas
aas
xchg
inc
push
xlat
lds
pop
mov
(bad)
inc
out
ja
push
std
xlat
scas
jg
jecxz
pop
sar
scas
jg
fistp
inc
xor
xlat
shr
scas
(bad)
test
out
mov
jge
push
or
push
xchg
ret
jg
mov
(bad)
fwait
jmp
mov
inc
call
xlat
mov
dec
std
xlat
rcr
(bad)
xchg
push
jg
iret
dec
dec
mov
aam
cli
cmp
jmp
cmp
repz
std
(bad)
(bad)
stc
scas
icebp
mov
outs
pop
std
xlat
mov
xlat
cli
cmp
mov
js
test
xlat
jg
or
std
mov
out
mov
icebp
daa
out
repz
mov
pop
pop
neg
xlat
or
shr
sti
pop
(bad)
std
(bad)
in
retw
cli
scas
(bad)
cmp
(bad)
jmp
push
out
jg
das
sti
jmp
(bad)
(bad)
sti
leave
jg
scas
adc
jle
mov
call
repnz
(bad)
jmp
in
xlat
xchg
pop
pusha
jo
mov
mov
or
cld
xchg
aad
das
std
mov
std
inc
test
mov
push
sti
jg
pop
cld
or
in
mov
repnz
fucomp
aas
xor
repz
mov
std
(bad)
movs
out
(bad)
fdivrp
repnz
clc
hlt
(bad)
push
jg
mov
inc
mov
clc
push
movs
cmp
jg
xlat
std
ret
jle
jg
std
fidiv
rcr
(bad)
loope
repnz
cli
xchg
dec
das
pop
call
jg
pop
mov
aas
xchg
adc
std
not
call
pop
(bad)
scas
jle
(bad)
icebp
scas
std
leave
in
xlat
jge
lock
std
jge
fucomp
mov
jne
sub
mov
jg
mov
pop
mul
dec
fwait
pop
cld
scas
pop
std
pop
retf
cmc
push
(bad)
(bad)
mov
cld
out
pop
cld
sahf
fucomi
fwait
push
(bad)
jg
fwait
std
cs
ja
jle
aas
pop
cmp
(bad)
lods
pop
pushf
fbld
pop
dec
cmp
xchg
std
sbb
(bad)
pop
(bad)
out
sar
shl
xlat
(bad)
jmp
das
in
dec
push
scas
(bad)
mov
(bad)
mov
(bad)
pop
out
jae
pop
pop
(bad)
jmp
mov
cmps
(bad)
fisttp
sub
push
jmp
xor
push
lahf
neg
xchg
adc
outs
mov
inc
jg
icebp
adc
leave
(bad)
sar
cli
idiv
adc
and
aad
aas
bnd
mov
ins
iret
jg
jg
ds
jge
jle
mov
idiv
jmp
loopne
jl
aas
xor
pmaxsw
xlat
mov
mov
mov
das
std
inc
call
scas
mov
iret
(bad)
cli
paddusw
call
adc
icebp
out
mov
jmp
cmps
fnstsw
iret
and
daa
pop
add
pop
jmp
xchg
mov
pop
ret
pop
(bad)
iret
stc
(bad)
std
push
nop
adc
pop
mov
cli
jmp
std
scas
mov
dec
loop
(bad)
jge
ret
jg
jg
or
cwde
outs
(bad)
pop
jmp
loop
adc
(bad)
loopne
jg
in
cld
dec
call
aas
repz
paddd
(bad)
stc
mov
clc
pop
(bad)
pop
inc
(bad)
cli
pop
push
(bad)
call
aas
cld
(bad)
(bad)
cmc
mov
push
in
inc
scas
aas
jmp
push
idiv
cli
fbld
std
add
popf
movs
sub
mov
call
std
push
xchg
sub
mov
daa
inc
cmp
add
icebp
fwait
nop
aas
stc
mov
mov
out
stc
fmulp
mov
and
ja
int
clc
lahf
jl
or
test
cdq
(bad)
(bad)
cli
cmps
mov
or
jle
cmc
scas
cli
xor
mov
fiadd
and
cwde
out
call
jg
das
xchg
push
cld
cmp
(bad)
pop
fs
xchg
gs
inc
icebp
repz
mov
into
cs
dec
jbe
xlat
dec
push
push
icebp
aaa
fst
scas
jle
push
jg
scas
xor
icebp
(bad)
ja
xchg
jg
in
push
dec
push
jg
jmp
sar
lahf
(bad)
jmp
xchg
clc
in
(bad)
test
dec
std
ds
stc
paddb
xlat
cld
gs
(bad)
fwait
rcl
mov
xchg
push
and
xchg
and
lock
loop
and
out
dec
mov
mov
jge
pop
(bad)
scas
jle
(bad)
cli
mov
std
xchg
mov
dec
jg
aas
call
cmc
popf
fisttp
in
add
and
cli
dec
add
scas
inc
rcr
clc
mov
and
sub
jmp
sub
cli
das
jle
aas
call
mov
call
(bad)
das
sti
scas
jg
jb
fldcw
push
mov
jecxz
idiv
xchg
pushf
into
(bad)
cmp
ret
inc
scas
sti
pop
jmp
push
std
fcom
adc
repz
push
(bad)
outs
not
(bad)
jmp
aas
cld
aas
cld
jp
repnz
clc
scas
jg
fild
pop
and
xor
mov
ds
jmp
or
test
loopne
outs
push
int3
clc
idiv
aaa
repz
clc
add
(bad)
pop
(bad)
jmp
loope
push
imul
inc
cmc
jae
enter
or
jmp
jnp
ds
jb
xor
mov
push
jg
cmp
(bad)
jnp
xlat
(bad)
ds
mov
cs
in
mov
jg
fstp
repz
mov
neg
popf
jg
sbb
mov
add
inc
pop
push
ret
cld
pop
jg
mov
(bad)
out
lahf
outs
std
clc
dec
inc
jg
out
push
loope
cld
hlt
hlt
in
(bad)
ja
jb
adc
xchg
dec
fstp
jg
out
scas
jle
pop
clc
jae
cld
xchg
(bad)
xlat
push
fs
mov
mov
ja
idiv
sti
pop
fwait
adc
push
or
dec
sub
cld
xlat
fild
loope
stc
std
jle
sub
xor
(bad)
jmp
jmp
loop
scas
mov
mov
mov
add
call
and
jecxz
stc
lahf
sti
(bad)
in
std
xlat
mov
inc
jne
mov
in
cmp
xlat
push
adc
rcr
fisttp
ins
cmc
fstp
cmc
mov
sbb
xor
(bad)
jmp
call
aas
dec
ret
pop
call
ret
dec
and
inc
std
xchg
xchg
in
jge
ja
popa
add
pop
push
loop
cmps
jo
test
lahf
jp
and
popf
push
(bad)
stc
jg
cmps
clc
cld
idiv
addr16
dec
std
scas
(bad)
out
(bad)
sti
out
clc
sbb
(bad)
jmp
clc
cmp
mov
mov
mov
aam
std
(bad)
inc
out
lods
gs
test
mov
aad
jl
xchg
jecxz
push
in
das
(bad)
sub
xchg
jno
xor
stc
in
dec
jmp
je
jg
sub
repnz
lahf
call
mov
mov
push
in
sbb
in
(bad)
lahf
mov
mov
neg
pop
inc
jg
outs
dec
or
jne
fwait
test
mov
lods
jle
jmp
test
jecxz
std
jmp
push
cld
cmp
lahf
(bad)
neg
inc
(bad)
std
mov
(bad)
std
(bad)
pop
cld
sub
fucomip
out
das
clc
cmp
fucomip
pop
jmp
ret
out
inc
(bad)
in
(bad)
lahf
mov
jge
mov
(bad)
dec
fwait
(bad)
jmp
or
(bad)
adc
(bad)
cmp
repz
sbb
xchg
aam
std
xchg
fs
jg
xlat
jmp
cmp
jbe
mov
sar
mul
lds
mov
pop
movs
and
stc
scas
icebp
jge
add
pop
std
inc
std
xchg
(bad)
scas
lahf
adc
movs
icebp
mov
mov
cli
das
jle
pop
das
mov
lds
cli
fwait
sbb
inc
jge
jmp
xlat
out
push
pop
loopne
fucomip
daa
jle
fild
(bad)
(bad)
scas
dec
inc
(bad)
lahf
cli
jmp
retf
mov
ja
int
aam
sub
lock
mov
idiv
jmp
mov
jle
fistp
(bad)
idiv
scas
jg
pop
or
xchg
popf
inc
(bad)
std
paddd
mov
stc
daa
jg
pop
repz
leave
scas
dec
ds
repz
pop
mov
add
daa
es
cmps
(bad)
fnstcw
icebp
jmp
mov
(bad)
xor
jecxz
cld
std
(bad)
jmp
div
cmc
jmp
loop
cmp
(bad)
jg
(bad)
jg
scas
stc
pop
jle
pop
(bad)
les
arpl
xlat
stc
cmova
popf
cmp
mov
std
lahf
clc
cmp
(bad)
psubd
jg
lods
call
es
enter
dec
mov
cdq
std
mov
mov
jg
mov
and
out
lock
mov
call
inc
pop
out
lock
(bad)
cld
paddd
xor
loopne
cld
repz
jmp
rcl
sub
cld
mov
add
xchg
push
sti
cmp
add
clc
dec
jbe
in
out
and
std
out
call
call
outs
outs
push
popa
mov
lahf
std
div
sbb
jge
icebp
jmp
xchg
mov
das
inc
test
cli
jg
in
mov
sbb
fldcw
cld
fisttp
cld
inc
std
adc
iret
aas
stc
jmp
cli
(bad)
in
in
(bad)
outs
ds
mov
adc
(bad)
jmp
mov
dec
dec
das
xchg
jb
cwde
fsub
push
inc
(bad)
(bad)
xchg
lahf
push
int
repz
cld
inc
call
scas
mov
pop
imul
push
cld
lods
leave
(bad)
adc
out
imul
gs
lahf
xchg
(bad)
cli
inc
jg
into
aas
pushf
(bad)
ss
dec
imul
stc
pop
jmp
jg
lock
jmp
scas
(bad)
call
jmp
call
arpl
mov
mov
(bad)
lods
outs
outs
dec
test
aas
icebp
jnp
xlat
jg
test
jmp
in
xlat
xor
out
cld
dec
mov
repnz
lock
jmp
sti
arpl
(bad)
mov
std
out
out
fidivr
adc
into
jns
ss
outs
das
test
push
movs
(bad)
inc
(bad)
cmp
lods
push
pop
pop
mov
scas
fwait
pop
and
inc
sbb
mov
push
loop
(bad)
out
cmc
xlat
pusha
iret
int
xchg
jg
aas
cld
jmp
fstp
inc
shr
fistp
mov
rol
std
dec
mov
cli
(bad)
and
(bad)
xor
call
leave
das
cld
xor
pop
out
aas
clc
jg
ficomp
lock
ds
cmp
pop
sti
das
jl
sbb
dec
stos
xlat
jg
cmc
fnstsw
pop
mov
neg
in
cld
xlat
inc
scas
ins
push
mov
fs
dec
dec
cld
(bad)
repz
inc
(bad)
in
ds
(bad)
sar
cmc
(bad)
cli
(bad)
jle
push
(bad)
jmp
adc
(bad)
cmp
cld
iret
jle
jg
hlt
lahf
mov
xlat
jg
inc
pushf
pop
clc
scas
push
sbb
hlt
enter
idiv
or
jle
jb
fwait
(bad)
cmps
xchg
stos
std
test
fdivrp
aam
pop
jge
sub
sti
mov
dec
(bad)
xlat
jg
int
out
call
push
movs
and
loopne
icebp
scas
(bad)
(bad)
fistp
mov
jg
ja
push
fisubr
add
(bad)
ins
loopne
(bad)
push
inc
lds
dec
cmp
pop
std
mov
cmpxchg
mov
(bad)
outs
(bad)
cmc
fucomip
outs
retf
jg
jg
jle
(bad)
paddd
retf
aas
lock
sti
ins
(bad)
jmp
cwde
loop
xor
movs
xor
jg
mov
jg
(bad)
scas
sbb
or
aas
(bad)
sti
pusha
(bad)
iret
jmp
sub
out
jg
lods
ins
jae
dec
dec
out
jg
inc
pop
pop
xlat
xchg
repnz
cmps
hlt
rcr
hlt
aas
(bad)
and
xchg
cli
jge
(bad)
xlat
jmp
cmc
clc
xlat
call
aas
repz
pop
push
push
jle
push
cli
outs
std
xor
sbb
add
int
std
jmp
sub
mov
(bad)
repnz
bound
xor
scas
(bad)
(bad)
clc
(bad)
(bad)
mov
movs
cmc
scas
stc
mov
outs
mov
das
and
idiv
scas
pop
cld
aaa
pop
loop
daa
(bad)
jmp
inc
mov
push
pop
inc
int
sbb
sti
aas
icebp
mov
int
cli
aaa
es
std
sar
cld
daa
jg
jg
out
sti
scas
jg
scas
iret
mov
pop
daa
in
mov
nop
in
jmp
lds
out
jg
sbb
pop
pop
jg
ja
(bad)
jg
dec
jle
fcomip
pop
dec
stc
in
jle
cli
out
std
xlat
pop
cld
outs
pop
popf
cld
retf
idiv
cmp
fucomip
lahf
cli
mov
(bad)
push
add
sub
out
cli
lds
(bad)
pop
outs
adc
mov
out
cmc
adc
cmc
(bad)
clc
stos
nop
mov
stos
push
mov
mov
cli
mul
leave
dec
mov
icebp
jg
xor
pop
dec
mov
mov
xlat
(bad)
in
mov
lods
pop
std
or
jne
imul
(bad)
(bad)
pop
retf
(bad)
fbstp
pop
out
inc
out
out
fucomip
xlat
cmp
jge
jmp
lock
inc
hlt
repnz
dec
lahf
(bad)
fidivr
das
sti
pop
movd
pop
inc
sti
std
(bad)
sar
popf
mov
push
mov
jnp
xlat
jg
xor
std
pop
rol
rcr
sti
daa
dec
stos
pop
test
mul
stc
cs
and
jmp
mov
mov
jmp
call
clc
scas
pop
std
sub
dec
adc
popa
enter
push
lock
fwait
(bad)
cli
mov
jmp
mov
or
cwde
add
fisubr
test
dec
jne
out
inc
sub
mov
(bad)
jmp
cld
sub
fwait
dec
int3
jg
fldcw
and
or
pop
dec
jge
pushf
cli
cmp
mov
xchg
cld
sar
loope
jge
pop
jecxz
(bad)
jmp
lock
ja
cli
lea
(bad)
cli
mul
daa
rcr
inc
aad
(bad)
fstp
dec
fcomp
push
clc
scas
inc
fisttp
mov
inc
jmp
das
std
cmp
nop
xchg
jmp
fnstsw
stc
pop
mov
ret
jg
mov
clc
mov
jle
aas
clc
pop
stc
out
mov
cld
pop
call
mov
cld
sbb
out
push
sahf
xchg
fs
pop
jg
(bad)
cli
scas
and
jmp
shr
std
push
cmp
lock
imul
(bad)
outs
idiv
mov
out
pop
jmp
jmp
fild
fcomip
idiv
mul
(bad)
out
mov
inc
pop
xchg
push
jae
retf
iret
jle
sar
aad
std
sti
cld
lahf
dec
frstor
ins
mov
jg
jg
jae
pop
(bad)
(bad)
mov
les
sub
loopne
hlt
aas
mov
sar
mov
bsr
jecxz
sti
cmp
jg
out
std
daa
(bad)
jmp
pushf
and
xlat
mov
mov
dec
out
repz
jg
jg
idiv
cmp
mov
sbb
adc
(bad)
(bad)
fcmovb
mul
fcomip
out
std
test
stc
(bad)
jns
addr16
jle
cmc
outs
clc
xor
test
cwde
fstp
dec
hlt
in
repz
aas
movs
dec
jo
mov
repz
pop
push
sbb
std
aad
std
stos
dec
add
idiv
pop
(bad)
imul
xchg
xchg
std
std
jg
out
div
xchg
aas
clc
lahf
inc
sti
paddd
paddd
push
in
iret
addr16
outs
les
call
sar
jmp
movs
in
repnz
addr16
inc
mov
jno
inc
out
ret
cmp
pop
out
mov
mov
ret
(bad)
std
scas
call
xchg
pop
clc
std
jmp
(bad)
call
mov
das
mov
adc
sbb
aas
hlt
fwait
rol
(bad)
cli
nop
retf
sbb
ja
jge
outs
pushf
mov
fldcw
dec
jmp
sub
icebp
pop
call
imul
push
sti
shl
lock
cmc
paddw
aam
std
fist
jge
das
cld
ds
push
repnz
jg
add
sub
loope
mov
ja
outs
xchg
sub
mov
out
scas
(bad)
jle
clc
jne
std
in
shr
das
jle
aas
jmp
clc
xor
aas
mov
sar
fist
and
fidivr
pop
jle
ud0
sti
jg
mov
jmp
int
clc
(bad)
dec
idiv
jmp
sahf
mov
fist
(bad)
jmp
add
out
in
cmc
call
cmp
iret
cld
outs
mov
or
cld
xlat
jg
mov
inc
sub
cmp
lahf
stc
scas
pop
std
xchg
shr
and
jmp
add
fucomip
xlat
cld
cmps
pop
(bad)
mov
(bad)
cmp
mov
mov
paddb
aas
clc
lahf
clc
pop
jle
pop
jg
paddd
out
jmp
jmp
loope
cld
pop
jle
mov
fidivr
(bad)
jmp
push
addr16
pop
cld
mov
cld
sub
cld
dec
call
imul
call
pop
cld
aas
loopne
out
aas
push
add
(bad)
cli
push
jmp
xor
fucomip
aad
mov
sti
(bad)
aad
xor
cld
int3
jg
dec
cmps
(bad)
loopne
icebp
pop
(bad)
mov
leave
jg
(bad)
clc
ins
jmp
shl
pop
(bad)
scas
xchg
fnstsw
mov
idiv
fidiv
repnz
add
pop
inc
(bad)
pop
scas
inc
imul
clc
idiv
in
std
daa
inc
add
ret
jg
lahf
ja
paddd
lods
adc
call
(bad)
cli
cli
fbld
popf
jge
loopne
(bad)
gs
outs
cli
jg
je
pop
jmp
inc
std
ret
dec
adc
ja
dec
jg
push
iret
push
std
xlat
jg
(bad)
jmp
out
stc
outs
lds
aad
mov
repnz
repnz
jg
mov
iret
in
aas
call
cli
mov
jecxz
scas
dec
(bad)
jmp
xchg
inc
clc
paddd
std
pop
sti
stc
jg
pop
adc
push
mov
lods
jg
sbb
jae
paddw
inc
(bad)
cmp
(bad)
mov
cli
cmp
imul
(bad)
fidivr
call
(bad)
cwde
data16
xor
push
call
fucomip
mov
aas
mov
ja
cmp
fistp
out
idiv
aas
lock
jg
jmp
dec
inc
push
test
mov
adc
cld
xchg
mov
(bad)
jmp
xchg
add
in
cld
fdivrp
cmc
pop
cmc
lahf
imul
into
call
movs
(bad)
cli
lahf
clc
ins
nop
dec
sti
jge
sar
fs
dec
jg
inc
xchg
xchg
clc
(bad)
call
mov
mov
mov
cmp
fs
arpl
cmp
shr
aas
cli
pop
dec
mov
aas
call
std
fwait
inc
sar
adc
sbb
xchg
std
xlat
jg
scas
daa
push
sar
into
sar
mov
neg
(bad)
(bad)
pop
jmp
(bad)
repz
mov
(bad)
scas
jmp
cs
jg
outs
(bad)
xor
push
dec
add
mov
mov
imul
(bad)
cli
xor
(bad)
jmp
fwait
out
paddd
dec
cmp
sti
out
jg
pop
stc
scas
dec
leave
add
mov
mov
shr
aas
loop
call
sub
cmp
aas
out
dec
jmp
jg
pop
test
daa
retf
sub
scas
out
scas
ret
mov
jbe
cld
scas
push
jno
in
jg
xchg
jle
repnz
std
outs
std
sar
enter
pop
push
lea
loopne
jmp
jg
aas
cli
mov
cld
sti
mov
in
xor
retf
std
scas
mov
(bad)
mov
mov
neg
imul
popf
jg
jg
xlat
mov
aas
dec
push
repz
int3
push
out
jmp
mov
sub
inc
dec
jg
aas
mov
pop
fld
aas
jae
jnp
xlat
jg
jg
retf
lock
stc
cld
aas
sti
in
dec
mov
dec
sahf
cld
mov
call
in
mov
stos
(bad)
cli
aas
sti
fisttp
cld
sub
hlt
retf
scas
(bad)
aam
stc
stos
(bad)
out
jnp
cmc
lahf
inc
cmp
mov
push
repnz
inc
sub
xchg
rcr
dec
dec
call
idiv
jmp
out
xor
repz
push
mov
std
mov
aas
xchg
clc
mov
repz
repz
cli
jg
fmul
stc
dec
cld
inc
vorps
sar
jg
mov
mov
call
jg
adc
mov
jmp
sti
and
jae
imul
repnz
imul
push
clc
jg
js
call
pop
jg
fucomip
mov
jecxz
std
les
lahf
mov
int
stc
inc
jle
(bad)
cli
mov
(bad)
sbb
adc
push
(bad)
fcomip
lods
mov
sbb
pop
stc
das
std
xlat
jg
scas
int
xchg
cli
scas
and
xchg
daa
(bad)
sub
jg
aas
int3
mov
pop
jle
hlt
xchg
std
or
sbb
retf
jg
pop
pop
std
leave
jg
mov
mov
jg
jg
and
stc
(bad)
ja
rcr
jmp
cld
cmp
(bad)
fdivr
mov
pop
out
(bad)
out
jecxz
(bad)
scas
stc
outs
outs
call
aas
inc
out
cld
inc
jmp
scas
stc
pop
jmp
push
xlat
jle
ja
pop
(bad)
cdq
(bad)
ja
sbb
adc
popf
xor
idiv
(bad)
pop
xor
xor
pop
and
cmp
aas
in
(bad)
std
std
pop
repz
clc
out
aas
clc
(bad)
fidivr
push
aas
stc
pop
push
and
cmp
out
std
ins
ret
sar
in
fbld
sti
cld
xlat
call
jmp
pushf
sub
dec
iret
jle
int3
sub
jmp
fild
fisttp
(bad)
scas
mov
clc
stos
mov
ins
sub
call
(bad)
cli
iret
stc
pop
pop
jg
adc
(bad)
dec
lahf
jp
pop
scas
(bad)
jmp
xchg
sub
and
js
(bad)
pop
call
lea
fstp
call
(bad)
pop
cmc
imul
push
mov
xchg
push
cmps
inc
push
jmp
inc
add
idiv
lods
xchg
neg
std
aaa
jg
(bad)
(bad)
aas
jg
fcomip
mov
lahf
cwde
(bad)
jmp
stc
sti
cld
xlat
mov
xchg
aas
icebp
ja
(bad)
(bad)
fistp
pop
not
sbb
call
int
jmp
into
enter
sbb
nop
mov
mov
in
lock
jg
pop
jge
mov
loop
dec
jg
int
sub
outs
cld
out
jg
jg
stos
and
cmc
fisttp
call
int3
cli
shl
push
cmp
sbb
dec
(bad)
xlat
jg
mov
pop
cld
(bad)
cld
(bad)
call
rol
stc
scas
(bad)
aam
sub
mov
fidivr
dec
out
cmp
repz
loope
(bad)
lahf
dec
hlt
repnz
std
(bad)
into
(bad)
(bad)
mov
movs
pop
leave
push
cmp
(bad)
xor
scas
(bad)
cmp
jg
(bad)
cli
addr16
jg
mov
cs
jb
jae
adc
call
or
(bad)
lock
pop
adc
shl
das
std
daa
xor
mov
sti
push
sub
mov
jmp
fcomip
ja
(bad)
das
(bad)
jmp
jmp
repz
pop
out
jle
out
jo
stc
pop
dec
mov
sbb
mov
and
mov
sub
int
mov
out
dec
(bad)
(bad)
jmp
fs
jg
or
idiv
fistp
jbe
pop
dec
mov
(bad)
pop
jmp
push
sar
sti
jle
out
aad
xor
pop
dec
lea
jmp
push
mov
sti
jmp
in
out
cld
mov
lock
xchg
lock
and
(bad)
addr16
cmc
fucomip
into
mov
clc
aas
stc
sub
xlat
std
cmp
xchg
cmp
pop
jmp
les
(bad)
jge
in
pop
icebp
(bad)
cli
out
cli
aaa
dec
paddw
(bad)
mov
(bad)
clc
imul
inc
sub
fcomip
addr16
mov
lock
lahf
cld
scas
out
pop
pop
icebp
ds
mov
leave
outs
add
xchg
cmp
stos
xchg
stos
inc
ja
repnz
icebp
clc
cmp
xchg
ins
sbb
(bad)
cli
mov
inc
out
or
aam
(bad)
adc
scas
icebp
pop
std
cmp
jg
mov
dec
xchg
fadd
(bad)
fnstcw
mov
aas
call
shr
(bad)
in
aas
dec
or
call
inc
xchg
adc
or
aas
sti
in
(bad)
jmp
scas
add
sar
clc
jg
jg
sar
add
mov
not
jbe
lods
dec
(bad)
mov
ss
(bad)
clc
sbb
call
(bad)
stc
push
(bad)
scas
call
ins
push
jnp
loopne
mov
lods
sti
mov
jle
mov
out
(bad)
out
mov
das
imul
outs
fs
(bad)
loope
cli
aaa
jl
arpl
inc
mov
(bad)
cli
scas
cmps
idiv
and
sub
jecxz
cli
dec
daa
xor
inc
mov
aas
loop
cli
(bad)
call
add
add
xor
inc
inc
lock
pop
cld
mov
scas
stc
fwait
in
jmp
mov
and
aad
mov
inc
jg
scas
nop
test
(bad)
call
rol
pop
mov
jnp
loopne
in
lahf
call
(bad)
clc
out
in
stc
xor
cmp
hlt
dec
stc
pop
stos
fisttp
xchg
call
jg
in
call
and
stos
mov
dec
pop
(bad)
jmp
dec
dec
std
mov
and
add
inc
ds
pop
retf
retf
retf
repz
leave
cmc
daa
call
das
xor
dec
ss
and
in
xlat
inc
fdivp
pop
cld
cmc
push
jecxz
in
call
mov
cmc
outs
inc
pop
std
jle
mov
retf
js
adc
push
lock
cld
scas
jg
xchg
loop
mov
push
jg
das
cld
and
stc
pop
stc
outs
call
push
cld
retf
adc
push
fsub
rcl
or
stc
pop
inc
xchg
cld
mov
pop
and
clc
aaa
rcl
sahf
mov
call
cld
std
out
cld
mov
mov
lahf
cli
cmp
aas
xchg
rcl
mov
(bad)
scas
jmp
push
retf
xchg
mov
cld
aaa
dec
jmp
mov
mov
fcomip
out
test
xor
scas
jg
aad
paddd
xchg
pop
(bad)
mov
loop
inc
push
aas
clc
jg
iret
lahf
cli
cmp
shl
pop
cld
test
inc
(bad)
xor
pop
jne
retf
lahf
mov
in
clc
jne
jmp
jmp
fdiv
pop
jmp
es
xor
paddb
jg
fild
(bad)
cld
lahf
ins
jb
paddw
lods
(bad)
cli
ja
xlat
jge
jo
fwait
(bad)
mov
loop
call
mov
ret
lock
arpl
int
repz
inc
pop
inc
call
scas
repz
out
xchg
movs
jge
daa
inc
in
inc
inc
mov
pop
cld
adc
das
mov
cld
or
cld
aaa
mov
pop
stc
outs
cld
sar
ja
(bad)
test
sub
pop
repz
std
ja
push
rol
jg
mov
(bad)
clc
out
std
pop
pop
inc
adc
call
pop
sti
scas
call
sar
fucomip
outs
dec
jmp
in
push
sahf
lock
mov
imul
js
call
sar
jg
psubb
inc
aas
clc
push
(bad)
xor
stos
(bad)
jmp
clc
aas
mov
dec
jbe
mov
out
std
xlat
sbb
mov
mov
mov
pop
ja
sub
jmp
test
(bad)
jmp
(bad)
xor
fistp
mov
call
aas
loopne
fcomip
mov
test
jg
fadd
mov
outs
dec
call
icebp
out
addr16
sti
scas
inc
xchg
fs
jmp
pop
adc
xchg
jecxz
jmp
pop
lods
sbb
pop
mov
loopne
in
std
das
adc
popa
inc
cmc
add
cli
mov
es
clc
scas
dec
jg
stos
fdivr
stc
pop
hlt
(bad)
add
jg
pop
vunpckhps
add
cld
les
mov
lahf
cld
xlat
mov
(bad)
mov
(bad)
scas
inc
mov
out
adc
mov
(bad)
mov
std
push
push
inc
cwde
movs
das
(bad)
stos
pop
retf
sbb
push
xor
add
jg
(bad)
(bad)
mov
scas
movs
xor
pop
xchg
sbb
jae
mov
mov
jp
addr16
pop
(bad)
fcmovb
rcr
mov
xlat
pop
cmc
pop
call
adc
pop
sar
lea
cld
neg
mov
aad
mov
mov
shl
repz
(bad)
xchg
push
idiv
jmp
sti
xchg
jno
xor
(bad)
push
jmp
mov
cmp
xlat
jg
jg
cmp
out
jge
ja
xchg
jg
sbb
mov
lahf
dec
enter
retf
loopne
lahf
addr16
push
jmp
pop
std
pop
sbb
fstp
pop
inc
xchg
xor
int
sar
icebp
ja
hlt
out
cmc
fisttp
gs
pop
push
and
jmp
jge
pop
jmp
lods
cmp
icebp
pop
(bad)
out
hlt
repz
cli
out
xlat
jg
mov
dec
add
mov
cld
fisttp
std
sar
out
aas
(bad)
xlat
jle
outs
xchg
std
stc
(bad)
call
jae
mov
je
ja
fnsave
cmps
fucomip
push
sbb
loope
pop
sbb
int
mov
int
icebp
(bad)
(bad)
mov
jmp
jl
idiv
mov
(bad)
(bad)
lds
in
and
in
sbb
cld
sub
fwait
(bad)
jae
aaa
sbb
call
aas
(bad)
pop
or
jae
hlt
mov
ja
stos
fucomip
outs
mov
jg
(bad)
jmp
sub
xlat
pop
pushf
jg
xlat
clc
mov
jmp
sti
cmps
outs
std
pop
fistp
repnz
rcl
ja
test
loopne
(bad)
imul
(bad)
cli
lahf
clc
mov
cwde
sbb
cli
jge
jmp
mov
shl
out
(bad)
mov
add
cmc
scas
neg
xchg
mov
mov
in
(bad)
xchg
jg
iret
push
jmp
xlat
pop
std
fistp
or
out
std
push
push
lahf
cli
out
sbb
icebp
sti
mov
mov
cmp
repnz
jg
push
cmc
jnp
mov
jg
(bad)
cmc
scas
inc
sub
stos
mov
mov
pop
(bad)
mov
cmps
std
push
(bad)
jmp
nop
pop
(bad)
mov
icebp
inc
loopne
push
cld
out
call
cld
push
mov
popf
push
jge
or
fs
fadd
mov
lea
xchg
psubq
call
leave
out
aas
cmc
repnz
cmp
aas
cmc
pop
call
mov
xlat
(bad)
std
aas
mov
pop
push
mov
popf
jle
lahf
repnz
xlat
cld
(bad)
loopne
add
(bad)
fcomp
cmps
into
(bad)
out
popf
(bad)
cli
lahf
mov
mov
(bad)
xchg
jg
pop
cli
dec
jle
(bad)
mov
sub
xlat
jg
xlat
stc
fld
sti
scas
repz
(bad)
(bad)
call
and
aam
hlt
retf
dec
jg
aas
std
cmc
jmp
mov
mov
std
out
push
sahf
xor
xlat
jg
das
(bad)
aas
jg
xchg
aas
clc
lahf
std
inc
(bad)
repz
xlat
aas
std
outs
inc
iret
std
xlat
and
sti
repnz
cli
scas
sub
(bad)
mov
hlt
and
icebp
mov
sub
pop
out
fwait
jecxz
fistp
and
dec
adc
ror
mov
jg
xchg
jg
xchg
jg
mov
and
mov
sub
jg
mov
and
stc
mov
enter
std
out
(bad)
shl
and
push
(bad)
out
(bad)
call
push
jg
neg
(bad)
jg
pop
cld
sub
(bad)
(bad)
stc
or
ja
(bad)
(bad)
fcomip
sub
stos
jge
mov
jp
int3
scas
icebp
bswap
jmp
(bad)
clc
pop
mov
aas
clc
jg
sbb
(bad)
cmps
jg
mov
dec
scas
std
sbb
outs
jg
aas
cld
out
pop
mov
mov
sar
in
mov
or
lods
fucomip
ja
jnp
mov
jg
(bad)
jg
sub
mov
aas
dec
(bad)
jle
lock
jg
ja
stc
(bad)
inc
dec
(bad)
sti
push
mov
cld
out
fisubr
mov
(bad)
sti
sbb
idiv
lahf
jl
idiv
cmp
std
retf
paddd
std
sbb
(bad)
gs
lahf
dec
ficom
lods
fstp
push
(bad)
mov
pop
dec
mov
xor
mov
mov
nop
dec
cli
ja
and
std
iret
mov
(bad)
cli
ja
dec
les
push
and
mov
sti
std
ss
mov
(bad)
cli
das
jmp
pop
inc
cmc
fcomip
imul
mov
(bad)
pop
shr
idiv
dec
shr
lahf
inc
das
shr
mov
std
push
cwde
xlat
(bad)
sahf
aas
in
pop
idiv
in
push
cmp
jg
fwait
in
paddd
out
push
and
push
xchg
ds
pop
mov
repnz
mov
hlt
call
mov
cld
sbb
outs
dec
rol
cli
jmp
add
jmp
xchg
pop
clc
inc
popf
call
mov
std
xor
sub
xchg
aas
repnz
aas
std
cmp
mov
iret
(bad)
scas
mov
pop
aad
scas
jg
call
(bad)
(bad)
outs
leave
call
fidivr
fst
jg
jecxz
dec
call
cli
push
push
pop
imul
mov
(bad)
in
dec
(bad)
jmp
and
push
jg
sbb
test
adc
xor
aas
jp
ja
repz
cld
mov
xlat
stc
and
nop
fist
aas
sbb
cli
(bad)
cmps
sub
std
test
(bad)
cli
out
and
aas
jmp
aam
repz
pop
(bad)
xchg
adc
stc
das
jecxz
jle
stc
outs
clc
jnp
iret
hlt
mov
mov
popf
push
daa
push
ja
in
ja
push
jg
jnp
mov
hlt
pop
(bad)
cmp
ss
mov
fnstcw
sub
iret
(bad)
xlat
(bad)
scas
jg
call
icebp
jmp
stc
cmps
(bad)
call
jg
pop
rcl
jle
out
(bad)
xchg
jg
out
das
sti
std
(bad)
jmp
in
mov
mov
ss
das
(bad)
cmp
mov
jmp
mov
lds
xchg
jg
xlat
mov
stc
iret
inc
(bad)
clc
fs
aas
cmp
adc
mov
stc
scas
jnp
(bad)
in
out
dec
jge
test
in
sub
arpl
call
stc
scas
call
jg
jno
(bad)
(bad)
xchg
push
or
pusha
jg
dec
repz
fdivr
pop
fist
stos
int
lock
clc
stc
in
mov
popa
pop
std
xlat
out
cmps
mov
sti
(bad)
fsubrp
add
ja
fisttp
out
icebp
lahf
mov
repz
adc
aas
icebp
lds
push
mov
aaa
(bad)
sti
scas
inc
cmp
push
and
jp
ud0
dec
(bad)
call
(bad)
pop
(bad)
pop
fs
push
xlat
sti
cmp
out
inc
jmp
pop
mov
sbb
lods
push
pop
mov
stc
das
(bad)
jmp
xchg
in
adc
(bad)
jmp
xlat
jg
inc
jnp
call
jg
mov
scas
ja
test
addr16
(bad)
aam
push
pop
push
push
mov
dec
cld
clc
imul
xchg
and
xlat
imul
test
pop
cld
jecxz
icebp
aas
cmc
sti
nop
(bad)
fisub
sahf
and
retf
dec
ret
jg
aaa
std
ret
jle
pop
add
fiadd
data16
inc
aas
repnz
mov
out
aad
std
out
adc
icebp
(bad)
std
mov
sub
stc
sbb
(bad)
sar
sahf
cmp
std
pop
test
cmps
jmp
(bad)
icebp
mov
arpl
outs
xchg
leave
add
outs
cmp
mov
ja
push
(bad)
lock
clc
(bad)
enter
fwait
(bad)
cli
aas
xor
fistp
jg
mov
mov
pop
mov
paddd
xlat
and
or
test
mov
std
outs
das
jmp
(bad)
mov
lea
push
cmp
hlt
jmp
loope
jmp
lahf
stc
mov
icebp
out
cli
or
aas
jecxz
jg
idiv
mov
mov
(bad)
jmp
jmp
lahf
fwait
aam
or
std
jmp
scas
cld
jnp
call
(bad)
cli
iret
clc
lahf
popa
(bad)
int3
pop
(bad)
call
ret
in
icebp
loop
jg
dec
mov
aad
dec
mov
jmp
dec
imul
(bad)
cmc
iret
push
pop
mov
pop
cld
lahf
cld
and
outs
jmp
lock
inc
mov
stc
das
std
aam
(bad)
cmp
outs
jg
pop
idiv
pop
(bad)
scas
inc
mov
test
xchg
jecxz
jmp
(bad)
lahf
enter
(bad)
jmp
repnz
xor
icebp
jmp
sti
mov
inc
push
(bad)
jmp
out
hlt
das
outs
std
xlat
jg
sbb
mov
aaa
ins
jo
xabort
call
(bad)
test
xchg
(bad)
jmp
(bad)
das
cmp
xor
xchg
jg
xor
jg
jg
mov
out
dec
shr
int
(bad)
xchg
fisttp
or
aas
mov
adc
idiv
loopne
lock
(bad)
out
jg
cli
mov
pop
jecxz
aas
cli
aaa
cld
jge
test
inc
jg
xchg
and
out
mov
push
jns
call
fucomip
ja
iret
neg
mov
cld
shl
outs
lock
fnstsw
cmc
fistp
push
cmc
inc
cli
add
(bad)
aas
icebp
dec
fdivr
scas
(bad)
jmp
nop
les
cmp
mov
jg
popf
dec
loop
pop
(bad)
jp
test
or
inc
jbe
aas
std
or
cld
(bad)
mov
data16
sub
pop
xor
cmp
bnd
stc
sub
mov
out
shl
ficomp
jg
neg
pop
cld
dec
dec
(bad)
cli
mul
push
clc
into
push
sti
inc
(bad)
pop
cld
fdivrp
repnz
cli
lahf
std
cmps
mov
cli
adc
adc
les
jg
imul
xor
inc
outs
lock
icebp
mov
mov
ret
aas
cli
aas
push
push
inc
jg
aas
clc
pop
test
and
dec
mov
inc
les
mov
cli
push
mov
hlt
pop
call
dec
data16
jmp
stc
xor
out
jecxz
xor
mov
cmps
das
(bad)
mov
jg
xlat
pop
cmp
cmp
jg
(bad)
cld
(bad)
push
cmp
xchg
movs
test
mov
std
xlat
(bad)
rcr
or
scas
pop
(bad)
dec
xchg
mov
sub
pop
push
inc
pop
call
into
repz
pop
sti
paddd
mov
jb
repz
scas
mov
aam
stc
pop
jmp
dec
idiv
jmp
pop
fldcw
jg
push
repnz
mov
mov
mov
mov
cli
std
rcr
jg
pop
mov
xor
xlat
clc
and
popf
push
pop
std
and
popf
aas
call
std
daa
jg
jg
xchg
das
loopne
push
aaa
stc
outs
mov
loopne
div
jp
scas
ds
jmp
jle
sar
ds
idiv
ret
jmp
stc
scas
call
mov
sti
(bad)
call
jg
aas
inc
jmp
ja
cmc
loope
(bad)
test
mov
pop
cld
ud0
cld
xor
mov
cmc
out
dec
and
fldl2t
mov
jne
or
pop
dec
call
xor
out
mov
jg
xchg
adc
push
cli
jecxz
(bad)
pop
push
lahf
call
(bad)
dec
cmp
test
inc
into
jg
iret
inc
imul
cli
out
std
push
dec
jg
xchg
or
pop
jmp
dec
repz
test
jmp
xchg
call
imul
(bad)
cli
jg
sbb
sar
jg
aaa
std
ret
jle
inc
xor
push
call
lock
xlat
jg
jg
out
pop
(bad)
cld
jecxz
aaa
cmp
push
fisttp
icebp
pop
jmp
jg
repnz
sti
in
(bad)
jmp
repnz
add
inc
pop
mov
pop
inc
push
out
mov
jmp
xor
out
mov
pop
std
dec
jg
outs
lock
mov
hlt
xlat
not
jg
cmps
or
call
push
jg
mov
inc
jg
aas
xor
mov
(bad)
sti
(bad)
(bad)
sti
(bad)
sti
lods
jg
jmp
inc
mov
fucomip
paddd
jg
hlt
ds
mov
std
sahf
push
out
icebp
sub
cmps
das
jle
jg
shr
push
mov
cld
aaa
call
mov
(bad)
mov
les
mov
jge
idiv
(bad)
mov
jg
aas
xchg
mov
mov
ds
sbb
pop
out
mul
test
stos
ret
sub
adc
xchg
xor
out
pop
sti
pop
ret
adc
xchg
pop
aaa
xchg
jg
jg
sar
clc
pop
mov
ud0
call
(bad)
lods
(bad)
cli
paddb
dec
cwde
sub
lock
jg
aas
bnd
dec
and
in
xlat
jg
nop
and
fstp
popf
jg
out
sar
xchg
repz
jmp
(bad)
ja
cdq
inc
(bad)
pop
dec
pop
jg
aas
mov
mov
or
loop
dec
cld
mov
jmp
repz
inc
pop
add
fld
sti
sti
fst
popa
jmp
add
loope
loop
stc
cmp
fcomip
repnz
inc
mov
fild
dec
sbb
push
(bad)
fwait
lahf
inc
mov
(bad)
loopne
cmc
mov
cld
sub
cli
test
cld
pop
out
icebp
aaa
call
mov
sti
cld
cmp
bnd
xlat
jg
jg
pop
ds
(bad)
out
jg
mov
fistp
aas
clc
mov
ret
movs
push
out
outs
lock
out
aas
stos
cmp
std
into
jmp
jmp
xlat
(bad)
scas
(bad)
call
mov
ret
repz
dec
dec
jmp
iret
dec
cmp
jg
pop
cld
in
(bad)
aaa
mov
jle
jg
hlt
out
addr16
sar
ja
jg
out
stc
pop
jmp
dec
mov
enter
mov
cld
icebp
mov
fisub
inc
fstp
xchg
jg
fidivr
mov
out
xchg
scas
dec
sbb
(bad)
cli
jmp
movs
(bad)
loopne
sti
xlat
jle
pop
inc
sbb
sti
push
leave
scas
cld
mov
std
daa
jle
sub
dec
out
daa
(bad)
jmp
test
push
in
pushf
cld
cmp
xor
cli
pop
jg
adc
stc
cld
sti
jnp
gs
scas
jmp
leave
stc
mov
in
cld
xchg
jb
sub
aad
stc
aas
std
cmp
lock
loopne
pop
xchg
adc
mov
jmp
mov
call
iret
(bad)
jmp
loope
xchg
push
aam
pop
int3
cld
idiv
movs
xchg
cli
push
rcr
movs
loope
call
mov
adc
fdivr
mov
mov
pop
sub
dec
push
test
xchg
xchg
pop
or
out
pop
mov
push
add
or
jmp
hlt
not
jmp
fcomip
mov
mov
pop
sahf
(bad)
cmp
jmp
test
mov
mov
scas
sahf
push
rcr
mov
outs
push
scas
inc
(bad)
xlat
std
in
lahf
cmc
pop
cld
mov
pop
dec
hlt
aas
(bad)
pop
jg
ss
xchg
(bad)
int3
(bad)
sahf
repz
clc
pop
stc
fwait
out
push
xchg
cmp
daa
call
pop
repz
std
jle
jg
paddd
jmp
cld
fnstsw
jecxz
cli
mov
xchg
into
cld
daa
jle
jnp
mov
inc
(bad)
(bad)
mov
xchg
lock
cmp
mov
sbb
cld
xlat
and
mov
sti
and
imul
mov
mov
aam
(bad)
fdivrp
jg
lahf
dec
ret
into
jg
xchg
rcr
inc
push
cli
mov
fcmovnu
cli
or
mov
mov
mov
dec
xchg
scas
cld
scas
jmp
push
scas
jmp
in
cld
gs
repnz
aas
mov
loop
mov
div
adc
std
dec
mov
nop
xchg
inc
pop
das
jmp
out
jg
std
repz
mov
mov
fld
(bad)
hlt
rcr
(bad)
mov
(bad)
call
out
cmc
pop
jle
idiv
scas
scas
call
js
pop
idiv
out
aas
clc
jg
fucomp
pop
xor
adc
cli
jne
(bad)
in
aas
mul
jb
dec
stc
aas
aaa
adc
or
inc
or
pop
cli
(bad)
hlt
mov
mov
(bad)
fstp
pop
xchg
dec
and
fwait
xchg
add
inc
scas
cli
(bad)
pop
clc
icebp
idiv
jmp
sti
aas
and
in
div
cld
pop
sti
sbb
aas
int
mov
out
jg
daa
(bad)
cmps
dec
push
ret
mov
aad
sar
aam
repz
std
ja
xchg
aas
clc
lahf
(bad)
xor
aas
std
ja
std
idiv
push
xchg
(bad)
out
out
cmc
sub
aad
clc
aas
movs
inc
jmp
aas
mov
jns
jb
pop
xchg
loopne
(bad)
jmp
call
jg
mov
(bad)
ja
jnp
pop
dec
(bad)
call
std
pop
(bad)
xchg
call
or
scas
cmc
pop
std
iret
aas
idiv
ret
jg
(bad)
cld
in
cli
xchg
or
cmc
pop
hlt
(bad)
repz
call
jg
xchg
cmc
das
daa
sub
call
fisttp
repz
mov
ins
inc
mov
jnp
(bad)
xchg
out
(bad)
out
inc
std
jnp
ret
jmp
scas
repz
aas
cld
aas
(bad)
pop
mov
paddd
push
(bad)
outs
(bad)
mov
aas
into
or
push
std
mov
dec
(bad)
mov
pop
sbb
(bad)
cmc
jmp
lock
arpl
inc
jg
aas
hlt
jmp
cld
scas
push
test
ud0
mov
lock
lahf
rcl
cld
xlat
push
fild
cmp
arpl
jmp
sub
pop
cld
iret
dec
(bad)
jg
std
pop
dec
pop
(bad)
out
(bad)
cli
pop
movs
xchg
loopne
aas
cmps
rcr
inc
outs
retf
(bad)
das
sti
scas
jg
mov
clc
scas
jg
repnz
jmp
mov
push
pop
mov
mov
inc
mov
lahf
cld
cmps
mov
test
idiv
fidivr
out
mov
fild
scas
push
mov
lock
std
xlat
mov
(bad)
clc
mov
jecxz
cmp
mov
(bad)
jmp
(bad)
mov
lea
cmp
cld
clc
mov
out
call
(bad)
in
(bad)
scas
mov
dec
mov
jmp
pop
push
hlt
not
cmp
push
cmps
loopne
leave
jg
call
mov
jmp
paddd
jg
sub
lock
jge
daa
jmp
jmp
sti
mov
cdq
movs
ss
out
fcomip
xlat
std
xlat
jg
(bad)
cli
xchg
sar
std
retf
daa
(bad)
jmp
cmc
lahf
inc
cmps
adc
stc
cmp
mov
mov
push
aas
out
adc
push
paddd
jmp
(bad)
cli
xchg
dec
lock
iret
xchg
jg
jmp
cli
jmp
(bad)
jmp
cli
ja
cmps
loop
inc
jg
(bad)
das
and
imul
daa
popf
(bad)
stc
jmp
add
jmp
stc
mov
sub
into
call
gs
jmp
push
xchg
inc
mov
(bad)
fwait
pop
div
outs
cli
idiv
ret
fwait
sbb
fucomip
pop
(bad)
scas
jle
fnstsw
xchg
mov
pop
in
adc
jmp
std
pop
neg
std
fistp
out
inc
mov
push
out
std
sti
std
div
mov
mov
jmp
outs
cmp
cmps
jg
aas
clc
pop
mov
std
sub
int
stc
pop
inc
jmp
pop
imul
out
inc
out
cmc
sti
retf
pushf
stos
loop
fdivrp
scas
mov
(bad)
out
retf
mov
mov
repnz
stc
idiv
dec
sbb
iret
push
pop
cld
imul
jg
push
sbb
call
std
aam
cld
fistp
aam
jle
(bad)
cli
(bad)
es
xchg
mov
imul
stos
push
call
adc
pop
std
mov
cli
das
std
aam
std
(bad)
outs
sar
das
sti
pop
jg
jmp
repz
aas
clc
xchg
std
sbb
leave
repnz
std
fsubr
(bad)
cmp
xlat
mov
mov
aas
icebp
lock
daa
jg
(bad)
cld
mov
stc
fnstcw
imul
sti
cmp
dec
test
mov
lahf
jb
pushf
mov
cmps
ret
xchg
sar
push
jg
popa
repz
push
sar
inc
shl
cld
xlat
xor
call
xor
sub
cli
pop
std
movsx
jg
fwait
adc
std
std
shl
cmc
out
repnz
push
inc
ins
test
jmp
stc
pushf
jg
pop
mov
cli
scas
jg
test
dec
lds
(bad)
pop
lahf
jo
dec
lods
idiv
call
xlat
jg
jmp
push
jg
mov
sahf
inc
(bad)
std
outs
lock
call
dec
mov
jg
pop
cld
pop
std
cmps
aas
clc
scas
inc
(bad)
lods
pop
cld
inc
jecxz
clc
jg
jge
mov
das
and
inc
jo
adc
das
xchg
loop
(bad)
cld
jg
scas
(bad)
mov
scas
hlt
ja
sti
lock
jle
out
sti
jnp
idiv
das
sti
fsubp
fistp
std
pop
jg
aas
cli
xchg
in
aam
pop
mov
mov
inc
or
sub
gs
iret
enter
(bad)
jmp
cli
(bad)
and
std
add
mov
dec
or
cmp
pop
gs
pop
cld
xor
or
jle
inc
mov
pop
jmp
mov
out
xlat
mov
mov
movs
(bad)
pop
jg
ja
xor
jecxz
cli
mov
std
mov
cmp
jmp
cld
cld
paddd
call
pop
cld
sub
nop
pop
imul
(bad)
xor
out
sub
pop
xchg
call
cmc
pop
(bad)
scas
jle
fnstsw
(bad)
in
aaa
arpl
les
retf
jmp
popf
cld
cmp
stc
cmp
pop
popa
pop
or
imul
jmp
pop
ins
jg
retf
repnz
mov
hlt
pop
call
xchg
jmp
pushf
stc
mov
neg
dec
lods
or
jg
xor
scas
mov
(bad)
arpl
(bad)
mov
push
loop
stc
lahf
hlt
lahf
call
fnstcw
lahf
dec
pop
shr
ss
int
sub
in
pop
les
sbb
(bad)
jmp
std
jmp
xlat
inc
inc
aas
div
ja
xchg
mov
xchg
inc
mov
pop
lock
cs
fcomip
out
std
rcr
loop
inc
jmp
jmp
(bad)
out
daa
aas
jge
idiv
sbb
jle
cli
in
lahf
inc
(bad)
jmp
scas
push
(bad)
hlt
jnp
test
xlat
aas
jmp
(bad)
pop
(bad)
fcom
jmp
xchg
inc
mov
cld
stc
push
mov
ja
dec
(bad)
in
cmp
xor
mov
xchg
mov
clc
pop
clc
outs
mov
jg
(bad)
pop
pop
jle
mov
sti
mov
pushf
aas
cld
jge
int
std
pop
push
cld
pop
jg
fcomip
paddw
aas
(bad)
das
out
jl
fmul
mov
repz
(bad)
dec
jmp
push
inc
rcr
jno
in
(bad)
lahf
stc
or
loope
idiv
jp
out
mov
repz
std
(bad)
cmp
(bad)
cwde
addr16
aad
cld
cmps
push
(bad)
(bad)
cmp
xchg
jmp
mov
repnz
pop
std
repnz
lock
(bad)
hlt
jg
xchg
cld
(bad)
out
cld
pop
aas
cld
aas
lock
pop
jg
sar
repnz
jg
mov
aas
out
jmp
in
(bad)
stos
dec
out
sub
mov
call
(bad)
sti
(bad)
stos
jle
(bad)
jmp
jle
daa
pop
cld
(bad)
(bad)
clc
lahf
cmp
jg
retf
jg
xlat
jg
(bad)
jle
idiv
add
fild
sti
pop
(bad)
push
(bad)
fmul
(bad)
mov
cli
jge
cmps
pop
hlt
pop
inc
pop
out
std
mov
jmp
in
fistp
mov
outs
stos
(bad)
jg
aas
stc
(bad)
inc
mov
dec
ret
push
jg
fcomip
pop
out
(bad)
jge
cld
jno
aam
(bad)
mov
scas
push
aas
jg
rol
aas
neg
std
mov
lahf
dec
std
std
(bad)
cli
pop
(bad)
scas
jmp
rcr
pop
(bad)
fidivr
jmp
out
xchg
jg
pop
push
jle
jg
fnstenv
mov
sti
jg
stc
pop
(bad)
scas
dec
(bad)
fidivr
aad
cld
(bad)
std
push
mov
jmp
mov
(bad)
mov
lock
dec
pop
push
jmp
jg
(bad)
lods
(bad)
out
inc
pop
bnd
sahf
inc
(bad)
(bad)
pop
mov
std
dec
mov
iret
push
das
call
aaa
call
jg
pop
inc
lods
push
(bad)
out
sahf
ins
jmp
xchg
mov
(bad)
cdq
pop
(bad)
clc
mov
loope
stc
pop
jle
jg
xchg
(bad)
in
mov
pop
mov
std
dec
push
call
dec
loopne
(bad)
out
cmps
(bad)
xchg
call
aas
mul
(bad)
jg
fcomip
icebp
std
pop
push
iret
(bad)
std
inc
leave
into
mov
js
outs
(bad)
es
cmc
jecxz
pop
lock
out
outs
cli
cdq
std
pop
dec
mov
jmp
repz
loop
stc
sbb
lock
dec
ret
neg
sti
(bad)
dec
movq
pop
mov
repz
inc
jg
pop
(bad)
cmp
out
hlt
aas
cld
aaa
jg
cli
mov
(bad)
xchg
pop
inc
(bad)
in
(bad)
pop
repnz
push
(bad)
fstp
xlat
dec
(bad)
out
repz
cld
(bad)
(bad)
cld
pop
hlt
mov
push
lahf
cli
dec
inc
in
(bad)
cld
scas
sti
mov
out
icebp
cmps
jle
in
(bad)
xlat
clc
adc
pop
mov
mov
aam
mov
stos
(bad)
jl
loop
stc
xor
sbb
inc
jg
das
stc
aaa
idiv
sahf
jmp
outs
dec
mov
int
in
clc
xlat
mov
dec
(bad)
sti
pop
stc
out
clc
rcr
(bad)
icebp
lahf
repnz
call
(bad)
std
fadd
dec
cld
xor
inc
jmp
jecxz
repnz
cld
pop
(bad)
test
out
pop
std
loop
(bad)
das
inc
lahf
(bad)
mov
push
loopne
std
pop
(bad)
mov
cld
in
(bad)
clc
push
(bad)
loop
(bad)
fnstsw
mov
in
fnstcw
out
inc
jg
pop
repz
cld
dec
(bad)
fisubr
cmp
(bad)
rep
dec
iret
jns
or
sahf
jge
mov
sub
dec
mov
inc
jg
aaa
sti
retf
mov
mov
out
mov
call
jg
cmc
jg
out
mov
fld
push
jle
neg
pop
jl
(bad)
cli
scas
(bad)
fwait
dec
jg
aas
in
cli
in
(bad)
fnstsw
(bad)
fimul
out
clc
(bad)
push
jge
idiv
xor
mov
in
out
repz
(bad)
jle
(bad)
fcomip
inc
std
mov
out
lock
std
cmp
xchg
sbb
fucomp
stc
xlat
std
loop
cmc
das
(bad)
scas
jg
mov
(bad)
fidivr
(bad)
sti
inc
cli
ins
repnz
rcr
pop
sti
(bad)
in
mov
scas
jle
repnz
mov
call
in
ja
in
mov
jnp
retf
fcomip
(bad)
in
inc
out
into
out
test
mov
retf
aas
icebp
pop
jmp
clc
mov
hlt
cld
aas
std
sbb
shl
mov
loopne
pushf
(bad)
icebp
(bad)
cli
(bad)
cld
sti
ds
idiv
fidivr
pop
std
das
push
call
mov
xchg
pop
dec
(bad)
(bad)
(bad)
ins
mul
ja
push
std
jmp
lock
clc
in
loope
jl
sbb
popa
inc
scas
cli
pop
(bad)
mov
cld
xchg
ds
jmp
cli
mov
jg
aas
cmp
sti
out
sti
sub
loopne
imul
dec
clc
imul
(bad)
aas
sub
(bad)
mov
cmp
in
ja
cmp
pop
jg
aas
repnz
pop
aas
(bad)
mov
mov
repz
dec
pop
out
cli
push
(bad)
cwde
fucomip
pop
inc
mov
repz
pop
jg
(bad)
mov
leave
lahf
idiv
std
xchg
pop
imul
(bad)
out
mov
cmp
jle
pop
repz
(bad)
in
fbstp
pop
dec
fcomip
out
pop
std
mov
std
jne
loop
std
fwait
dec
stc
outs
cmc
imul
mov
dec
push
das
dec
retf
cld
and
sahf
(bad)
ss
pop
repnz
(bad)
fnstcw
pop
imul
test
repnz
out
push
in
cmc
xchg
imul
out
(bad)
test
lahf
jmp
stos
inc
jg
idiv
call
(bad)
pop
jg
mov
in
(bad)
das
sti
mov
cmc
xchg
xchg
jmp
(bad)
call
cmp
or
out
sti
idiv
pop
inc
pop
div
aaa
clc
ja
(bad)
mov
inc
call
dec
mov
int3
mov
jg
in
fldcw
xchg
inc
jnp
pop
xchg
ds
std
(bad)
pop
cli
push
(bad)
fwait
inc
icebp
(bad)
mov
(bad)
stos
mov
aad
cld
jno
ret
out
cmc
std
pop
cld
jmp
xchg
mov
sbb
call
fidivr
fbld
pop
jg
jg
imul
or
xlat
lahf
repnz
cld
scas
cmp
outs
jle
paddd
push
aaa
push
call
das
cmp
(bad)
xchg
fcomip
outs
clc
sbb
aas
stc
arpl
in
(bad)
ja
std
aaa
mov
cld
mov
hlt
lahf
std
adc
cld
inc
mov
cld
(bad)
cli
xchg
dec
(bad)
jmp
paddb
pop
cld
push
jle
lahf
cli
and
repz
(bad)
xchg
inc
(bad)
pop
jle
xchg
jmp
pop
jmp
out
cmp
iret
jg
jg
pop
clc
mov
int
imul
(bad)
jmp
lahf
icebp
mov
cs
mov
jg
outs
cli
jnp
(bad)
out
cli
dec
cld
jno
fcomp
mov
pop
push
jg
lahf
std
sub
int
idiv
out
xchg
(bad)
ja
shl
ja
ins
shl
lock
jg
das
cld
aas
(bad)
mov
retf
(bad)
loop
fucomip
cli
aas
(bad)
stos
out
cmp
cld
in
sar
lock
(bad)
ds
mov
out
jo
mov
(bad)
jecxz
pop
std
cdq
jg
jg
push
cld
mov
xchg
fsub
dec
stc
into
das
clc
iret
inc
push
cs
movs
pop
jl
cld
fist
mov
inc
xlat
pop
cld
idiv
repnz
dec
or
ret
jg
dec
cli
and
std
sti
fdivrp
test
mov
jg
pop
sti
(bad)
jnp
mov
xchg
push
jg
outs
clc
hlt
dec
sti
idiv
fdivr
jle
fistp
inc
stos
mov
mov
lea
cli
fidivr
jmp
sar
out
icebp
mov
lods
jmp
aas
sti
pop
std
jne
(bad)
inc
int
std
fidivr
popf
fucomip
aas
es
repz
pop
jg
push
mov
fwait
jg
loope
mov
jg
clc
mov
jmp
cmc
fdivrp
cli
out
std
(bad)
jmp
loope
cmc
jnp
sbb
(bad)
ja
push
aas
imul
pop
cmc
cmp
mov
cld
outs
imul
call
aas
lock
cld
cmc
jg
dec
clc
mov
jmp
jl
out
daa
pop
pop
(bad)
cs
fcomip
jmp
jg
lahf
jmp
aas
test
jg
(bad)
clc
sbb
adc
std
push
cmp
cmc
call
std
aad
clc
pop
lock
cdq
xchg
icebp
call
mov
into
pop
icebp
das
call
clc
scas
stc
inc
inc
mov
clc
pop
das
dec
xlat
push
mov
popf
jg
pop
dec
scas
cli
fisubr
jmp
or
retf
idiv
lahf
std
cli
mov
xchg
aas
loopne
stc
adc
(bad)
mov
scas
jmp
(bad)
inc
jg
jg
outs
call
mov
stc
outs
out
std
push
outs
lahf
std
xchg
(bad)
cld
push
(bad)
addr16
jle
pop
cli
out
std
imul
inc
icebp
neg
stc
movs
jg
movs
adc
mov
push
fnstsw
loopne
aas
stc
out
cld
cdq
jg
das
clc
pop
inc
aas
cld
outs
clc
(bad)
daa
jmp
scas
cmc
ja
fisubr
aad
test
repz
std
stos
retf
fucomip
rcr
addr16
paddd
std
outs
cld
push
jg
das
(bad)
cmp
int
hlt
mov
push
(bad)
mov
lods
imul
jg
dec
stos
jle
call
loop
sti
(bad)
mov
jg
push
push
jl
aas
cld
gs
mov
aas
repz
cmp
mov
dec
call
jg
hlt
inc
mov
cmps
repz
ja
std
jnp
push
std
jp
shr
jmp
iret
jle
jnp
push
call
mov
idiv
cmp
(bad)
ja
jnp
in
clc
imul
sti
jmp
popa
std
popf
jg
xlat
jmp
xlat
cld
and
inc
repnz
(bad)
cmp
cld
pop
cli
sbb
xchg
mov
std
dec
(bad)
jmp
idiv
(bad)
icebp
pop
clc
or
enter
(bad)
(bad)
call
cmp
jg
icebp
dec
(bad)
(bad)
fisubr
jnp
pop
jg
mov
out
in
out
stc
clc
aaa
clc
xchg
mov
repz
jle
cli
or
lods
jle
fucomip
(bad)
inc
inc
movs
aas
clc
xor
fidivr
call
pop
jle
out
cmps
mov
rep
in
cld
arpl
outs
neg
in
(bad)
cmp
outs
sti
cmps
(bad)
xor
jnp
mov
mov
mov
std
adc
addr16
jmp
fucomip
dec
leave
out
in
cld
(bad)
mov
pop
cmp
lds
mov
inc
jg
dec
jg
xchg
in
jg
iret
js
mov
sar
sbb
iret
(bad)
adc
(bad)
std
jae
les
jmp
jg
repnz
scas
imul
iret
sti
pop
cs
mov
(bad)
in
aas
clc
pop
(bad)
sar
iret
out
call
push
outs
hlt
scas
cld
pop
mov
cmp
xlat
cmp
movs
cmp
jb
retf
dec
jmp
idiv
imul
pop
push
std
sar
sti
jg
cmc
arpl
pop
lock
dec
out
rcr
das
movs
jg
pop
push
nop
pop
stc
jnp
dec
clc
out
jmp
scas
imul
into
jg
mov
fcomip
scas
cmp
neg
cli
lahf
xchg
aaa
repz
dec
dec
out
xor
movs
lahf
cld
or
gs
aas
cli
fnstsw
inc
(bad)
jnp
hlt
lahf
jne
lahf
jl
pop
(bad)
sti
idiv
cld
aas
icebp
aad
icebp
fwait
(bad)
(bad)
mov
(bad)
fnstsw
jle
aas
arpl
mov
(bad)
aas
(bad)
out
(bad)
jg
dec
call
jmp
(bad)
sbb
fmul
mov
jle
jmp
push
dec
test
jg
cmps
jle
push
or
sti
inc
inc
iret
jle
(bad)
(bad)
scas
xlat
jg
mov
jg
fcomip
jnp
stc
xchg
retf
idiv
stc
int
mov
jg
cli
xchg
outs
jle
out
(bad)
ds
aas
std
popa
mov
iret
sti
out
loope
repnz
test
or
repnz
sti
repz
outs
div
call
xchg
lahf
(bad)
das
jle
mov
mov
clc
call
dec
(bad)
cmc
pop
ror
leave
jmp
cmps
mov
mov
and
push
(bad)
xchg
jmp
pop
mov
jg
pop
jmp
lds
outs
std
aaa
outs
(bad)
mov
repnz
pop
repz
dec
jg
jmp
sar
dec
cld
fisubr
popf
pop
inc
scas
repz
push
jg
(bad)
imul
inc
in
lock
xchg
lahf
inc
xlat
jg
sbb
push
cld
(bad)
(bad)
inc
(bad)
aas
mov
inc
(bad)
cli
aas
hlt
dec
dec
call
mov
repz
int3
mov
jge
aam
sti
retf
adc
std
mov
div
push
fdivr
dec
mov
in
xlat
stc
ud0
aas
std
cli
lahf
dec
das
std
das
jmp
jg
ja
(bad)
inc
cmp
(bad)
in
cwde
(bad)
cld
jnp
mov
(bad)
mov
push
das
dec
jle
aas
repnz
stc
jge
sar
in
xchg
aas
xor
ja
imul
outs
jno
sar
lock
push
jle
in
iret
(bad)
fdivr
out
fnstsw
mov
addr16
arpl
in
sti
ja
jmp
pop
repz
(bad)
fist
sar
data16
ins
(bad)
call
jmp
retf
(bad)
std
jg
(bad)
jmp
adc
adc
(bad)
cmp
dec
(bad)
cmps
mov
repz
(bad)
xlat
cli
xor
fucomip
(bad)
(bad)
xacquire
jg
aaa
cli
and
mov
jns
jg
rcl
out
lahf
std
adc
(bad)
mov
cli
stos
(bad)
mov
icebp
scas
cmc
das
cld
xor
loope
std
mov
nop
(bad)
mov
mov
inc
fldcw
cld
jnp
repnz
idiv
lods
call
das
dec
arpl
fcomip
loop
cwde
cmps
mov
in
psubd
xchg
repz
sti
inc
(bad)
xchg
(bad)
(bad)
pop
dec
call
cli
xchg
call
jg
mov
pop
std
out
std
pop
(bad)
jg
outs
cli
mov
je
out
hlt
sti
(bad)
gs
cmp
(bad)
xchg
mov
jle
neg
dec
dec
lahf
(bad)
popf
mov
cmp
outs
jg
addr16
addr16
mov
(bad)
std
jbe
loope
mov
leave
outs
out
(bad)
dec
cmp
scas
(bad)
test
iret
jg
jg
jg
cld
iret
std
xlat
push
inc
jg
out
push
jg
mov
repz
lahf
repnz
std
mov
in
div
std
mov
(bad)
fcomip
outs
cld
fs
jg
add
lahf
(bad)
fst
(bad)
std
pop
cld
sbb
pop
cld
sub
pop
mov
sti
(bad)
dec
dec
icebp
sti
cld
sti
mov
addr16
mov
dec
div
mov
div
in
inc
cld
outs
pop
cld
jbe
fsin
das
sti
popf
inc
pop
repz
cld
imul
(bad)
mov
dec
stc
daa
jle
outs
std
xchg
aam
xlat
clc
aas
dec
jg
mov
icebp
lahf
cld
mov
sar
lock
jg
paddd
xchg
mov
mov
daa
jl
pop
cld
loopne
jle
mov
(bad)
mov
loop
(bad)
jmp
mov
mov
in
in
jg
mov
mov
xor
scas
ins
ds
mov
fsubr
das
clc
addr16
nop
jmp
outs
sti
das
inc
(bad)
aaa
inc
fistp
jecxz
cli
(bad)
stc
(bad)
(bad)
mov
repz
psubb
jg
ja
cdq
dec
idiv
scas
mov
mov
jno
fidivr
outs
jg
push
dec
jmp
out
dec
(bad)
fdivr
cmc
outs
repnz
std
fild
mov
pop
jg
fcomip
in
mov
jg
cld
mov
std
lea
inc
leave
rep
(bad)
jnp
int
jle
scas
mov
mov
jle
fcomip
iret
pop
jg
psubb
pop
repnz
cld
hlt
fcomip
imul
push
lahf
cld
mov
dec
(bad)
sar
(bad)
inc
fbstp
fucomip
aas
cld
fwait
(bad)
jmp
repz
(bad)
imul
cld
pop
jg
cmc
fwait
jmp
mov
(bad)
pop
call
sti
dec
sti
jecxz
pushf
xchg
push
jmp
cmps
(bad)
cli
pop
not
ja
jle
mov
dec
jg
icebp
mov
repnz
cld
mov
and
out
jmp
mov
xchg
jg
pop
xor
xor
out
aas
test
sar
not
dec
int3
jg
dec
sti
idiv
in
jmp
aad
repz
in
(bad)
push
(bad)
movs
fistp
inc
(bad)
cmp
pop
std
sti
push
pop
(bad)
cdq
call
(bad)
clc
pop
jns
scas
std
idiv
lds
mov
mov
inc
lahf
cli
and
pop
(bad)
fxch
fdivr
pop
jmp
pop
jecxz
cld
int
stos
mov
lahf
stc
popf
push
fucomip
outs
clc
xchg
aas
(bad)
jecxz
xchg
fucomip
das
add
jg
aas
push
jle
scas
cmc
scas
xchg
sahf
stc
stos
jmp
jg
pop
clc
xchg
jg
rcl
imul
cld
sbb
jmp
clc
(bad)
mov
or
jg
aas
out
sahf
std
ins
inc
outs
div
jg
call
sbb
std
pop
(bad)
fistp
jnp
pop
dec
icebp
hlt
call
jbe
outs
bnd
jg
pop
cld
jmp
test
mov
hlt
dec
(bad)
mov
fistp
jg
out
das
clc
mov
call
jg
iret
cld
lahf
sti
jg
out
mov
inc
jle
mov
mov
sar
jg
(bad)
dec
ja
addr16
mov
(bad)
stc
aas
lock
sub
aaa
jp
jmp
cmp
out
sti
push
jle
mov
jg
scas
std
mov
cmc
cmp
mov
stc
clc
sti
call
pop
cmc
imul
push
jnp
(bad)
sti
mov
dec
mov
jmp
pusha
call
clc
mov
iret
(bad)
xlat
jmp
sti
pop
mov
mov
lock
repnz
sti
jecxz
aas
bound
in
jg
jg
jg
aas
(bad)
jmp
neg
(bad)
fdivrp
shl
call
loopne
out
std
xchg
xchg
aas
std
out
mov
pop
jg
xlat
std
xor
psubq
(bad)
aas
idiv
std
mov
pop
call
pop
mov
pop
stos
(bad)
lock
dec
fstp
cmc
mov
aas
jmp
jmp
jg
mov
xchg
in
jbe
in
pop
sti
pop
(bad)
mov
addr16
out
cli
jb
dec
std
fwait
(bad)
mov
loope
std
pop
aas
stc
(bad)
dec
(bad)
xor
jmp
(bad)
xchg
aas
stc
scas
jp
mov
push
(bad)
clc
cmp
cmc
mov
cmp
in
aas
sti
aas
cmp
mov
(bad)
cli
into
jg
xchg
cld
pop
(bad)
out
out
inc
mov
and
std
out
(bad)
pop
(bad)
cld
mov
mov
(bad)
mov
(bad)
jg
or
fsubp
sbb
loopne
jg
sbb
in
icebp
cmp
stos
jg
jg
fidivr
fwait
call
xor
inc
mov
shr
or
sbb
not
loope
pop
jmp
shr
push
jle
pop
jg
std
test
mov
jg
(bad)
adc
imul
pop
dec
mov
stc
scas
mov
pop
shr
not
cmp
not
in
psubd
hlt
fisttp
imul
jmp
jg
mov
ret
mov
(bad)
das
cli
ins
or
scas
std
fwait
std
xlat
mov
mov
loope
aas
std
(bad)
call
ss
loopne
jg
aaa
mov
nop
jle
mov
mov
outs
inc
mov
mov
in
call
std
pop
mov
loopne
aas
clc
ja
(bad)
xor
neg
inc
mov
(bad)
aas
cmps
(bad)
es
neg
outs
shr
add
hlt
fistp
pop
cli
in
dec
shr
add
in
pop
outs
jg
add
test
out
clc
cwde
jle
jmp
jmp
pop
adc
jmp
sti
mov
or
out
lock
adc
jbe
icebp
aas
call
std
mov
std
sbb
(bad)
inc
jg
repnz
fcomi
in
lahf
push
jle
(bad)
push
jmp
call
int
hlt
pop
std
jne
loop
cli
out
inc
dec
out
mov
outs
(bad)
fyl2xp1
out
cld
aas
std
add
repnz
cli
pop
jg
mov
je
pop
xchg
cmps
sti
jmp
hlt
retf
pop
lock
cld
aad
cmc
das
mov
jg
std
(bad)
sub
outs
repz
pop
jg
das
cli
pop
pop
(bad)
sar
repnz
idiv
mov
hlt
xchg
scas
(bad)
xchg
cld
es
aas
inc
dec
das
adc
not
ret
idiv
push
scas
aas
sti
popf
jg
outs
std
mov
pop
mov
dec
cli
loopne
sti
in
aam
cmc
(bad)
(bad)
fcmovu
std
dec
call
mov
mov
jmp
jg
aas
ss
push
hlt
xlat
inc
scas
fcomip
das
clc
dec
leave
pop
adc
ror
aas
cli
iret
push
jg
scas
not
push
inc
(bad)
lahf
jl
lahf
(bad)
stos
aas
jmp
xchg
jmp
jnp
jg
pop
stc
(bad)
std
cmp
pop
div
mov
iret
jle
das
pop
fdivrp
out
jmp
call
stc
pop
lock
paddw
pop
hlt
in
call
ja
cld
xchg
std
cmp
inc
stos
das
(bad)
sahf
mov
aas
mov
xchg
xchg
leave
dec
std
idiv
jmp
(bad)
out
(bad)
jle
push
in
pop
test
mov
dec
push
ds
ret
(bad)
mov
cld
add
mov
adc
std
cmp
out
cli
push
jg
loop
mov
(bad)
fyl2xp1
pop
repnz
(bad)
fld
and
(bad)
xchg
fist
push
jg
std
clc
outs
dec
pop
call
(bad)
test
pop
(bad)
neg
shl
(bad)
call
sub
fild
enter
lds
repz
jg
jns
lds
dec
pop
cld
and
aam
mov
aas
stc
lahf
cld
cmp
repnz
dec
outs
out
(bad)
addr16
jle
(bad)
das
mov
fild
jmp
stc
sti
std
ds
(bad)
(bad)
aaa
cmp
aaa
jmp
(bad)
sbb
ret
pop
cld
fwait
(bad)
sub
std
adc
fcmovnu
std
jbe
jb
sbb
loopne
aaa
mov
cld
in
jg
paddd
nop
fwait
stc
pop
xchg
mov
(bad)
fdivrp
std
pop
(bad)
stc
jg
std
repnz
ja
outs
cld
and
sub
fsubrp
(bad)
call
iret
jg
push
fimul
(bad)
aas
lock
data16
(bad)
iret
mov
pop
clc
idiv
inc
std
rcr
xchg
int3
out
(bad)
iret
sahf
rol
dec
aas
mul
xchg
cld
outs
jmp
pop
dec
iret
scas
fidivr
xlat
cld
(bad)
leave
pop
cmc
in
std
cmps
cmps
mov
push
push
(bad)
jg
inc
cmp
(bad)
jg
xlat
cld
stc
jg
outs
std
xor
rcr
jle
idiv
(bad)
scas
sti
aaa
std
or
scas
jg
scas
dec
aad
cmc
xchg
nop
xchg
std
iret
push
jmp
mov
sti
inc
scas
std
lahf
xchg
lahf
test
in
ret
jecxz
cld
idiv
(bad)
std
sti
adc
(bad)
(bad)
in
outs
repnz
std
cdq
mov
mov
das
cli
imul
ror
dec
into
(bad)
mov
icebp
xchg
cld
aam
(bad)
sub
call
dec
(bad)
mov
call
out
mov
mov
jg
cld
iret
pop
cld
ss
aas
test
addr16
cli
mov
aas
out
jg
lahf
std
inc
mov
stc
repz
ja
mov
aam
in
sti
cmps
bnd
pop
push
jg
lahf
xchg
std
jno
clc
aas
clc
lahf
cld
pop
mov
cdq
jg
div
(bad)
(bad)
mov
clc
adc
xchg
mov
(bad)
lods
out
std
xchg
cmps
aas
jle
lahf
cli
sub
cld
loope
mov
cmp
xchg
mov
iret
jle
in
jg
jg
call
stc
ja
retf
ret
jg
int
cld
addr16
jae
rcr
stos
fcomip
(bad)
(bad)
cld
jg
pop
call
ins
push
push
jge
adc
aam
icebp
iret
std
popa
mov
xchg
jg
fistp
jnp
aaa
aas
stc
(bad)
xlat
mov
(bad)
fwait
call
mov
mov
ja
sub
(bad)
idiv
clc
leave
in
(bad)
lahf
jg
aas
out
stos
aas
(bad)
das
stc
sbb
dec
jg
(bad)
mov
add
jmp
(bad)
mov
jmp
cld
aam
cld
mov
stos
mov
iret
fucomip
pop
sti
mov
(bad)
cld
out
mov
jmp
(bad)
pop
jmp
cli
shl
jg
pop
cld
fwait
lahf
xchg
inc
ja
xchg
sar
test
dec
pop
add
std
xchg
les
test
dec
cld
pop
mov
call
das
aas
sti
cdq
mov
into
inc
push
outs
stc
movq
fistp
iret
jge
icebp
ja
mov
(bad)
(bad)
jl
dec
jle
mov
dec
(bad)
std
dec
jnp
idiv
cmp
pop
jg
mov
jae
jmp
cld
pop
(bad)
mov
imul
jg
aas
(bad)
xor
mov
(bad)
xchg
out
neg
cld
mov
test
lahf
clc
mov
jmp
cli
xor
pop
cld
out
mov
inc
mov
idiv
xor
iret
cli
inc
jle
loop
aad
xchg
(bad)
in
(bad)
sti
cld
hlt
mov
stos
jg
cmp
iret
clc
(bad)
jle
fist
lahf
inc
xchg
sahf
jmp
jg
idiv
std
(bad)
scas
adc
in
call
cld
inc
call
jg
pop
inc
(bad)
stc
das
(bad)
hlt
mov
fstp
dec
dec
outs
lock
jmp
inc
dec
jmp
out
cld
add
pop
dec
in
(bad)
mov
inc
(bad)
pop
dec
aas
clc
test
jp
fwait
call
das
jle
pop
jg
mov
std
cld
mov
dec
call
pop
std
imul
in
clc
pop
inc
push
popf
fcomip
(bad)
pop
jg
iret
jmp
mov
in
mov
(bad)
(bad)
mov
pop
(bad)
xchg
lahf
clc
jg
mov
mov
(bad)
(bad)
(bad)
pop
(bad)
push
(bad)
std
pop
repz
das
inc
in
out
push
paddw
scas
icebp
imul
(bad)
mov
mov
lea
daa
mov
imul
xchg
(bad)
jmp
mov
int
in
cld
jge
sti
mov
push
jmp
lock
mov
(bad)
(bad)
sti
sub
outs
stc
jmp
(bad)
loope
cli
ja
sub
shl
cmc
iret
(bad)
fnstcw
(bad)
jmp
pop
hlt
mov
adc
jg
pop
cld
das
nop
ret
lahf
std
fcomp
(bad)
scas
(bad)
out
mov
cli
ja
in
stc
sti
jg
xchg
ds
mov
ja
ja
stos
fld
icebp
mov
sbb
cwde
(bad)
repz
repz
cld
dec
cmp
pop
(bad)
out
in
(bad)
mov
(bad)
inc
mov
popf
jg
aas
sub
(bad)
mov
iret
mov
mov
mov
mov
mov
fdivr
daa
into
jle
pop
mov
std
fdivrp
fstp
pop
mov
sar
dec
dec
mov
std
xor
xor
dec
mov
inc
movs
xchg
lods
aas
in
stc
xchg
call
cmp
jns
jecxz
in
pop
cli
(bad)
mov
loopne
stc
movs
inc
movs
mov
jg
(bad)
cli
mov
dec
push
test
cli
jg
mov
jns
imul
movsx
lahf
jle
out
cmc
imul
cmp
rol
retf
mov
loop
loope
std
fisubr
test
fstp
(bad)
hlt
fcomip
dec
jle
sar
mov
aas
out
clc
mov
mov
jg
pop
sti
dec
lahf
push
(bad)
mov
repnz
xchg
pop
lahf
push
aas
jmp
outs
(bad)
xchg
mov
(bad)
cld
dec
mov
movs
stc
das
jg
cmps
mov
dec
jle
mov
pop
jmp
ins
repnz
out
idiv
popa
mov
cli
ins
ja
push
popf
in
dec
call
mov
jmp
fistp
aas
dec
std
ja
xor
pushf
add
scas
pop
std
mov
fld
out
cld
(bad)
cmc
sar
iret
pop
cld
sbb
repnz
clc
cmp
mov
jg
lahf
std
aas
cld
inc
mov
(bad)
cld
in
iret
(bad)
std
out
aas
and
sti
outs
sti
aaa
jle
lds
dec
jg
stc
(bad)
mov
fbld
jecxz
cmc
cmps
std
adc
std
in
dec
pop
mov
jmp
(bad)
mov
pop
js
(bad)
(bad)
mov
aaa
jmp
das
stc
call
dec
(bad)
(bad)
jmp
outs
cli
pop
jmp
cli
outs
jg
xlat
cld
iret
(bad)
sbb
aas
jg
out
jg
xchg
cli
test
push
xlat
(bad)
mov
pushf
jmp
mov
adc
sti
fist
gs
lahf
hlt
cmps
dec
sbb
jmp
jle
fucomip
scas
clc
inc
sub
call
(bad)
iret
jg
mov
idiv
outs
cli
jecxz
clc
jge
jge
pop
(bad)
lods
inc
pop
repz
cld
jle
push
add
fbstp
jg
pop
fistp
out
inc
push
mov
cld
sti
jg
mov
mov
pop
push
jle
pop
out
xchg
call
cmp
popf
(bad)
paddd
ud0
jle
lahf
lods
inc
mov
sti
sub
pop
stc
arpl
call
stos
mov
call
mov
cmc
mov
iret
(bad)
out
jg
jg
aad
loopne
cmc
sbb
mov
in
cli
ja
mov
das
jg
out
(bad)
outs
mov
shl
inc
std
push
jg
cdq
xchg
out
dec
jg
lahf
lock
(bad)
in
xchg
or
aaa
jg
fcomip
in
(bad)
cmp
stc
ins
inc
mov
(bad)
stos
pop
div
sbb
lahf
clc
stc
aad
cli
mov
fucomip
(bad)
(bad)
cld
xlat
clc
xor
cmp
mov
sar
inc
cld
jp
(bad)
stos
fldcw
sti
iret
jl
dec
mov
dec
loop
(bad)
repz
hlt
push
dec
daa
aas
std
stos
sub
mov
scas
dec
push
jg
push
mov
repnz
imul
dec
push
mov
inc
(bad)
mov
jg
out
clc
(bad)
jle
fcomip
iret
clc
(bad)
(bad)
(bad)
loop
(bad)
aas
sub
clc
into
in
(bad)
jmp
cld
xchg
mov
xchg
leave
(bad)
jnp
popa
aas
xor
fistp
imul
std
xchg
jg
mov
cmp
push
mov
pop
(bad)
jmp
(bad)
cld
dec
jmp
aad
in
jg
retf
pop
repz
in
jle
(bad)
mov
addr16
xchg
xor
cld
xlat
mov
(bad)
stc
aas
(bad)
ja
idiv
cmps
mov
dec
inc
imul
repnz
cmc
mov
pop
aas
repz
std
mov
call
icebp
xlat
push
(bad)
mov
(bad)
aas
xor
jmp
sti
in
jle
das
sahf
lea
(bad)
cmc
out
jle
cli
mov
jmp
in
jg
lahf
sti
sub
sahf
std
inc
jg
pop
dec
dec
jg
scas
sti
aad
cld
pop
std
sub
jmp
(bad)
jle
clc
out
push
imul
aas
in
clc
and
clc
mov
idiv
idiv
leave
push
out
clc
repnz
jmp
idiv
aaa
retf
ss
jmp
das
std
imul
mov
idiv
repnz
stc
out
in
stc
aas
jmp
jmp
stc
(bad)
outs
repnz
cmc
inc
outs
aam
push
in
jno
out
mov
inc
xlat
lahf
jmp
lahf
clc
loop
jmp
jg
push
mov
das
(bad)
loop
loopne
iret
dec
jmp
idiv
lahf
(bad)
das
std
jae
jecxz
dec
cld
add
(bad)
pushf
push
pop
std
movs
mov
out
push
cmp
mov
lock
(bad)
jmp
xchg
jmp
lahf
clc
iret
(bad)
(bad)
(bad)
out
pop
repnz
std
ja
pop
jmp
cmps
pop
int
(bad)
idiv
stc
mov
(bad)
sti
pop
es
(bad)
xchg
xchg
lahf
sahf
std
cmp
jg
std
dec
call
push
pop
stc
xlat
std
sbb
test
sti
sbb
lds
fistp
lahf
jle
psubw
jmpw
mov
fwait
jg
(bad)
(bad)
call
cld
std
dec
jg
cmc
hlt
aas
ds
cld
lods
mov
aaa
into
jle
ja
imul
clc
cmp
hlt
leave
cld
(bad)
div
sti
std
pop
jmp
clc
call
pop
(bad)
pop
mov
jg
mov
xchg
cld
jmp
jl
clc
idiv
mov
call
sahf
addr16
(bad)
sahf
aas
loop
aaa
jmp
hlt
out
std
call
pop
push
cld
idiv
mov
sahf
cli
fldcw
pop
mov
into
scas
(bad)
aas
(bad)
mov
mov
std
lds
inc
mov
repnz
in
dec
(bad)
cmps
dec
dec
aas
cmc
outs
cld
cmc
(bad)
test
xor
pop
pop
(bad)
pop
dec
pop
cli
dec
(bad)
jmp
(bad)
cmp
mov
scas
std
dec
jg
(bad)
cli
pop
cli
adc
dec
jmp
jmp
aaa
clc
in
psubb
pop
std
dec
(bad)
in
out
scas
(bad)
jnp
mov
jg
jg
mov
mov
std
ins
mov
mov
mov
sti
pop
(bad)
jge
(bad)
not
lahf
cmps
mov
dec
icebp
(bad)
std
imul
stc
popf
(bad)
cli
out
daa
jne
out
sti
push
jg
xchg
std
arpl
std
mov
inc
call
xor
into
out
mul
xchg
mov
repnz
std
(bad)
cli
clc
xlat
clc
mov
stos
pop
test
push
fdivrp
pop
call
aas
lock
push
rol
loope
stc
jmp
ret
(bad)
jmp
cwde
std
icebp
mov
inc
inc
iret
std
pop
call
in
cld
xchg
pushf
and
ror
(bad)
outs
lock
push
mov
xchg
sahf
aas
icebp
sbb
int
aaa
cld
xor
jg
scas
repz
inc
fidivr
mov
inc
(bad)
sti
stos
aas
loop
shl
leave
jg
ror
jg
cmp
aas
jg
mov
(bad)
rcr
lock
out
fsincos
lahf
mov
mov
loopne
mov
jmp
pop
repz
pop
std
cmp
mov
mov
pop
std
cmp
daa
aas
std
jnp
mov
pop
clc
inc
inc
inc
cmps
out
cli
and
icebp
mov
push
pop
mov
aas
cmc
mov
(bad)
pop
(bad)
mov
mov
inc
or
jle
call
push
sti
dec
call
ret
outs
cmc
clc
(bad)
(bad)
idiv
mov
jns
cwde
jl
mov
std
jae
clc
mov
scas
cld
ins
dec
(bad)
stc
jg
pop
daa
mov
call
mov
pop
mov
cwde
cmp
push
mov
nop
mov
xchg
clc
mov
shl
lock
cld
fistp
icebp
outs
mov
jmp
xchg
jg
aas
(bad)
je
out
mov
out
in
aas
ss
and
mov
mov
in
(bad)
cld
(bad)
(bad)
in
jg
mov
cmp
jg
inc
jmp
sti
jae
mov
out
das
std
lods
sahf
std
cmp
in
lds
repnz
adc
clc
pop
inc
jmp
cld
sbb
cli
(bad)
cmp
icebp
pop
clc
repz
fstp
lahf
(bad)
sar
xchg
(bad)
std
psubb
jg
in
lahf
std
adc
aas
and
jg
int
xor
xor
mov
aad
idiv
loope
stc
(bad)
inc
mov
jg
mov
cld
push
jg
std
mov
(bad)
mov
mov
(bad)
cmp
mov
out
aaa
clc
retf
jg
cmps
retf
inc
repnz
cld
out
sub
idiv
sti
sar
sahf
(bad)
sbb
cld
sahf
mov
jmp
push
or
out
std
or
out
inc
sbb
outs
(bad)
jmp
mov
pop
into
jle
outs
mov
cli
mov
clc
out
jle
pop
(bad)
scas
std
out
repnz
xchg
jecxz
call
in
xchg
add
(bad)
out
neg
sub
inc
hlt
ja
xor
fcomip
imul
into
out
bnd
cdq
mov
xchg
stc
pop
inc
das
mov
outs
mov
jg
(bad)
xor
in
scas
(bad)
out
pop
idiv
(bad)
xor
loopne
jns
daa
cld
addr16
scas
std
mov
(bad)
std
out
push
(bad)
in
out
stc
imul
inc
add
(bad)
clc
ja
icebp
xchg
dec
repz
cmp
or
cwde
jmp
mov
cmps
mov
pop
jecxz
ja
cmp
xlat
clc
test
iret
cs
jg
lahf
cld
push
aas
dec
sahf
stc
out
imul
aas
xrelease
xor
lahf
icebp
lods
inc
cmps
inc
pop
push
cld
push
(bad)
fdivr
repnz
sbb
leave
into
(bad)
pop
hlt
pop
push
pop
adc
and
cld
imul
pop
cld
xchg
mov
sti
push
cli
out
xchg
std
out
jae
pop
(bad)
lods
mov
(bad)
(bad)
xchg
fucomip
xlat
stc
std
mov
std
sub
in
cmc
hlt
cmps
(bad)
stc
jg
dec
cli
cmp
cli
dec
(bad)
mov
mov
aas
std
xchg
inc
mov
aas
in
aas
mov
mov
(bad)
mov
mov
dec
mov
call
std
mov
movs
stc
and
fwait
mov
xchg
jle
pop
hlt
not
pop
cld
sub
scas
stc
sti
cld
out
push
outs
repnz
call
dec
out
jg
cmp
das
sbb
push
(bad)
test
jmp
mov
pop
mul
ret
pop
std
retf
jg
lahf
inc
jmp
jg
inc
add
movs
(bad)
outs
inc
icebp
iret
aas
aaa
stc
jmp
sbb
xchg
jg
scas
repz
(bad)
xchg
jg
out
cmc
mov
inc
mov
(bad)
in
aas
jne
push
(bad)
mov
cmps
jg
in
xlat
sti
arpl
movs
aas
out
pop
cld
lods
jg
das
std
jge
jg
outs
icebp
out
cld
or
cmc
scas
(bad)
daa
(bad)
in
aas
jmp
int3
aas
(bad)
ja
pop
(bad)
cwde
jg
mov
(bad)
inc
pop
cld
fsubp
mov
jg
(bad)
ud0
fistp
jmp
inc
mov
stc
mov
dec
jle
inc
pop
cld
add
jp
fild
clc
das
(bad)
pop
mov
inc
(bad)
in
pop
mov
inc
ds
sbb
cwde
jmp
(bad)
cli
imul
jg
cmp
in
std
loopne
leave
outs
jns
xlat
sti
or
idiv
mov
jmp
sti
gs
call
dec
cld
scas
clc
sbb
jecxz
out
sti
stos
inc
xchg
call
mov
aas
cmc
mov
pop
dec
test
aas
push
int3
cmc
icebp
aas
xor
(bad)
inc
aas
cmc
aaa
std
das
jg
leave
push
push
aas
stc
out
cld
pop
aas
test
xchg
(bad)
jmp
pop
std
ja
in
call
fcomip
pop
std
int3
aas
mul
(bad)
fidiv
hlt
sar
xchg
sub
fcomip
call
jmp
(bad)
cli
push
loop
stc
cmp
jmp
aas
neg
int
in
out
stc
cmp
push
mov
sti
xlat
push
(bad)
dec
jmp
cli
inc
icebp
or
sti
movs
mov
cld
imul
stc
lahf
lahf
cld
hlt
mov
mov
fwait
mov
jg
pop
mov
repz
movsx
out
(bad)
jns
jmp
repz
in
cld
stc
mov
xlat
sti
mov
jmp
mov
neg
jnp
out
jg
scas
(bad)
daa
(bad)
xchg
fistp
jg
(bad)
cli
push
mov
xlat
jle
out
(bad)
mov
dec
jg
cmc
lahf
repz
stc
addr16
jg
lahf
sti
xchg
ror
iret
call
dec
out
int3
jg
mov
cld
(bad)
mov
jg
push
jmp
lock
idiv
test
add
pop
aam
icebp
aas
jmp
mov
nop
aas
cli
pop
(bad)
xor
jp
fisubr
sbb
inc
cmovg
or
lahf
lock
or
pop
inc
aas
idiv
mov
jg
dec
ret
cmps
in
shr
js
mov
stc
cmp
jmp
dec
mov
(bad)
std
std
mov
scas
cli
mov
loope
in
rcr
das
cld
(bad)
aas
clc
xlat
jmp
pop
dec
sar
ret
cmp
ds
leave
in
hlt
jmp
jb
fistp
inc
(bad)
jle
pop
lock
(bad)
sar
out
lock
(bad)
dec
imul
(bad)
call
jg
xchg
std
cmc
fwait
inc
(bad)
push
jg
aas
sti
iret
jl
jg
std
push
mov
loope
(bad)
(bad)
repnz
push
fs
imul
repz
repnz
mov
(bad)
aas
mov
idiv
xchg
jmp
push
in
(bad)
fnstsw
xchg
(bad)
inc
repz
jmp
sub
cld
cmps
jg
pop
jnp
sbb
adc
fcomp
(bad)
jmp
in
repnz
cld
aad
fstp
xchg
scas
mov
(bad)
std
out
std
fistp
inc
sar
xor
mov
aas
hlt
jmp
in
(bad)
xchg
pop
(bad)
and
repz
mov
(bad)
push
mov
mov
in
scas
ds
aas
jg
pop
call
inc
hlt
rcr
std
int
cld
scas
jg
pop
mov
call
out
cli
sbb
icebp
push
lahf
lock
outs
dec
mov
pop
(bad)
cmps
aas
(bad)
xchg
xlat
sbb
mov
std
fisttp
cld
xchg
mov
not
cmp
outs
cmps
jg
pop
repnz
cld
jmp
mov
jmp
cs
mov
fucomi
cmp
sti
push
(bad)
jmp
lahf
hlt
pop
std
movs
xchg
xor
aas
jle
pop
sti
iret
out
icebp
(bad)
cld
sbb
fucompp
push
lahf
std
pop
(bad)
jae
(bad)
in
ja
imul
out
clc
aaa
(bad)
mov
xlat
std
jle
cld
out
(bad)
mov
mov
(bad)
je
cmp
arpl
in
inc
sub
inc
nop
add
scas
sti
imul
jg
out
inc
xchg
and
scas
aas
clc
pop
jg
(bad)
dec
mov
cli
das
outs
jg
jecxz
jmp
sbb
pop
inc
mov
cmc
(bad)
and
cld
arpl
cmps
aas
inc
(bad)
loope
in
(bad)
jle
std
addr16
lods
jg
out
jg
mov
cli
neg
sti
sbb
retf
in
icebp
xchg
fdivr
div
jge
push
ret
mov
push
mov
out
ja
not
(bad)
std
pop
push
std
aaa
aas
stc
out
in
push
and
icebp
ud0
pop
std
mov
cld
xchg
mov
(bad)
jmp
mov
(bad)
stos
in
push
cld
dec
xchg
aad
addr16
jg
fcomip
in
jg
iret
(bad)
rol
enter
adc
inc
lahf
stc
(bad)
jle
aaa
movs
lods
ror
hlt
cmps
jg
jg
das
mov
mov
xchg
pop
cld
sub
fcomip
stc
fbstp
sahf
into
jg
fistp
cld
cmc
pop
cld
stos
aas
std
pop
call
stc
cld
hlt
mov
out
jg
mov
cmp
idiv
push
fbstp
sub
bt
jmp
scas
stc
xlat
dec
jg
pop
mov
mov
push
scas
mov
lea
loope
std
inc
(bad)
lods
fcos
div
(bad)
sahf
xchg
mov
loope
stc
xchg
inc
pushf
aas
dec
mov
pop
repnz
lahf
and
cmc
fwait
jmp
jg
mov
fldcw
pop
cld
push
inc
mov
jg
in
ds
dec
jg
dec
sti
xchg
jle
push
in
pop
cli
aas
xchg
mov
mov
stc
xlat
std
jmp
cli
sar
loop
stc
in
(bad)
jle
dec
cld
pop
idiv
retf
cs
aas
std
(bad)
jmp
(bad)
jmp
addr16
push
mov
(bad)
fidivr
jle
std
ins
(bad)
jp
xchg
hlt
jecxz
stc
sbb
inc
js
mov
(bad)
(bad)
(bad)
xchg
mov
inc
cwde
mov
repz
mov
cld
push
call
push
inc
mov
cmc
aad
inc
int
cmp
int
(bad)
mov
push
in
mov
mov
std
jmp
jg
mov
pop
lahf
add
out
std
retf
jmp
mov
sar
repz
cld
aaa
sub
cli
cmp
inc
fistp
leave
outs
repz
mov
stc
iret
jmp
out
mov
pop
xchg
jg
mov
push
call
pop
clc
(bad)
push
scas
pop
dec
(bad)
fwait
push
loop
mov
inc
aas
clc
repz
ja
xchg
or
aas
repnz
cld
cmp
xchg
jg
mov
out
mov
pop
js
jmp
cmc
mov
xchg
iret
push
xlat
sti
mov
fdivr
(bad)
cld
(bad)
ds
pop
(bad)
xchg
(bad)
call
data16
jnp
mov
retf
jle
mov
mov
repz
clc
xlat
inc
aam
idiv
out
call
jg
fnstsw
cli
out
inc
(bad)
ficomp
jnp
jg
(bad)
jmp
jns
vcomisd
push
(bad)
idiv
int3
jg
ja
mov
inc
sti
aas
cld
aad
stc
inc
std
push
inc
push
aas
jmp
les
call
push
out
clc
pop
and
xchg
mov
inc
dec
pop
jmp
jne
stc
jp
xlat
cld
out
cmps
outs
dec
jg
scas
stc
leave
retf
add
test
pop
jg
mov
(bad)
mov
pop
pop
push
jmp
lahf
pop
mov
(bad)
data16
mov
cld
jmp
leave
repnz
stc
(bad)
cmps
stc
lahf
idiv
lahf
stc
pop
mov
pop
icebp
out
mov
mov
icebp
dec
jmp
mov
in
jnp
jmp
push
push
aas
lock
fsqrt
in
fstp
hlt
xchg
(bad)
stos
aas
jbe
push
jg
scas
repz
test
les
lahf
std
in
mov
cli
js
outs
(bad)
data16
out
bnd
ret
dec
(bad)
(bad)
aas
loopne
mov
(bad)
lahf
lock
mov
lahf
cld
jecxz
int3
das
(bad)
in
loope
cld
cmp
into
jg
pop
clc
aas
cld
daa
call
pop
lock
push
jg
push
mov
sbb
sbb
(bad)
aas
sti
repz
push
call
addr16
mov
mov
jnp
cmp
(bad)
inc
mov
inc
call
jg
cli
mov
dec
out
jge
mov
lahf
clc
mov
mov
in
cld
in
ja
cli
in
aaa
sti
aas
mov
cmp
mov
pop
(bad)
cdq
outs
inc
cli
push
int3
jg
fs
in
xchg
(bad)
pop
mov
xchg
dec
ins
hlt
aaa
pop
std
ficomp
cld
xchg
adc
mov
ret
mov
(bad)
sti
cmps
idiv
jg
mov
dec
jg
sar
aaa
mov
out
(bad)
in
jg
push
cli
jecxz
(bad)
fucomi
push
push
dec
ja
sbb
std
push
mov
outs
hlt
mov
mov
aaa
jle
lods
pop
cli
sti
push
(bad)
sar
out
mov
sti
and
int3
mov
push
mov
std
ins
jg
pop
std
out
scas
push
out
jg
mov
(bad)
dec
data16
ja
mov
sti
or
xchg
cmp
xor
pop
pop
mov
fucomip
loopne
daa
xor
(bad)
scas
cli
mov
out
cld
cmp
xlat
jmp
xlat
jg
iret
lahf
std
pop
jg
pop
sti
fnstsw
jle
psubb
jg
pop
(bad)
fcos
repz
outs
inc
movq
jg
pop
(bad)
fcomp
push
pop
lock
mov
std
pop
cld
iret
fistp
pop
cld
scas
jg
pop
hlt
pop
push
leave
mov
aas
icebp
out
std
jg
xchg
mov
lock
std
gs
jmp
idiv
out
loop
clc
xchg
dec
jg
aas
jge
lahf
(bad)
icebp
mov
fucomip
mov
das
cld
hlt
ja
dec
jle
fbstp
or
jg
stos
jle
das
cld
mov
aas
sub
pop
mov
(bad)
mov
std
bswap
cs
push
aaa
std
dec
sahf
sbb
clc
scas
imul
lahf
std
aas
(bad)
fbld
sahf
in
jg
add
(bad)
xor
pop
(bad)
mov
repnz
stc
xlat
jg
(bad)
call
in
mov
hlt
lahf
clc
jae
mov
aas
clc
int
cld
fcomip
xchg
sbb
(bad)
std
mov
retf
retf
inc
lahf
sti
iret
(bad)
(bad)
mov
cmps
popf
mov
(bad)
repnz
repz
stc
std
jle
(bad)
push
stc
fisttp
outs
inc
mov
xchg
xchg
aas
push
fstp
push
mov
ja
xchg
push
das
clc
(bad)
mov
cmp
jg
sub
hlt
sti
out
repz
cli
outs
push
out
jle
cmps
mov
adc
pop
push
fcos
cli
(bad)
cld
in
call
cld
jmp
cld
pop
mov
icebp
cld
mov
ja
out
(bad)
dec
sub
lahf
(bad)
scas
mov
jg
mov
jg
ja
dec
sbb
dec
icebp
loop
jg
das
(bad)
mov
pop
(bad)
jecxz
mov
mov
(bad)
sti
inc
xlat
std
sbb
dec
cmp
mov
jg
sub
(bad)
jmp
push
int3
pop
jge
cmp
inc
enter
mov
inc
daa
dec
(bad)
lock
inc
dec
push
jg
xchg
mov
repz
pop
cld
push
stos
mov
mov
jnp
(bad)
scas
fbld
repz
loope
out
fisubr
jns
jg
hlt
out
stc
inc
leave
movs
(bad)
call
jg
out
lahf
jle
pop
std
(bad)
retf
scas
cmc
mov
sti
aas
dec
jg
aas
cld
pop
jmp
mov
in
idiv
adc
(bad)
(bad)
cld
pop
cli
jmp
test
jg
fcomip
xlat
clc
xchg
(bad)
sar
xlat
sti
xchg
inc
fucomip
shr
mov
idiv
or
mov
mov
pop
shl
(bad)
loopne
jnp
test
mov
scas
jg
loop
dec
hlt
fistp
(bad)
or
fsub
(bad)
xlat
(bad)
ds
xchg
call
movs
mov
mov
scas
ror
sahf
mov
(bad)
call
jg
scas
cmc
cli
(bad)
inc
mov
add
(bad)
ficomp
fstp
lock
pop
std
leave
(bad)
(bad)
int
(bad)
xchg
aas
clc
(bad)
(bad)
lods
repnz
cld
sar
xchg
mov
(bad)
and
das
(bad)
xor
push
jg
mov
int
(bad)
lahf
clc
add
cdq
cld
int
mov
jg
(bad)
jle
pop
sti
xor
idiv
loopne
sti
das
jmp
in
xlat
mov
jnp
sti
cmps
(bad)
pop
cmps
jmp
cmp
jle
jg
or
xchg
jecxz
cld
sub
psubb
jg
lahf
inc
mov
dec
mov
mov
mov
iret
(bad)
aad
out
clc
idiv
jb
inc
fucomip
lahf
jl
gs
dec
movs
sar
jmp
out
pop
std
xor
sahf
aas
loope
stc
or
repz
cmps
jg
aad
cld
addr16
cmc
std
pop
push
out
neg
call
pop
jg
popf
dec
jg
pop
jecxz
es
scas
jmp
lahf
std
out
(bad)
idiv
(bad)
out
(bad)
sub
call
jle
idiv
sbb
ds
push
cmp
push
jg
outs
neg
std
popf
jg
in
iret
std
pop
mov
repz
cmp
paddd
(bad)
cli
ret
ds
call
stc
(bad)
pop
aas
cld
xchg
(bad)
in
aas
out
jg
std
dec
call
outs
cmc
aaa
rol
int
icebp
arpl
xchg
cld
xchg
mov
pop
cld
mov
idiv
mov
(bad)
xlat
cli
jae
mov
jg
cmc
outs
cld
das
mov
pop
cmc
lahf
jl
jnp
xchg
(bad)
out
(bad)
(bad)
in
dec
mov
pop
repz
cld
aad
loopne
cli
ja
stos
pop
out
(bad)
in
les
repnz
jg
bound
hlt
out
cmp
aad
mov
outs
(bad)
jnp
inc
mov
imul
aas
fidivr
or
scas
call
int
jle
mov
(bad)
(bad)
stos
stos
aas
xchg
call
xor
std
or
and
jg
jg
jle
scas
(bad)
xor
jg
jg
loop
bnd
cli
xor
pop
(bad)
cmp
jmp
ja
dec
(bad)
fnstsw
mov
call
hlt
arpl
jle
aaa
push
(bad)
out
neg
push
out
hlt
inc
std
mov
ja
mov
pop
jg
std
aas
(bad)
jg
and
repnz
jg
mov
sti
mov
in
fbld
(bad)
cli
mov
ja
xlat
push
xlat
xor
sub
inc
repnz
lahf
push
(bad)
call
leave
pop
hlt
mov
dec
mov
adc
fucomip
retf
(bad)
jge
psubb
dec
(bad)
cmp
loop
xchg
mov
cld
adc
fxam
(bad)
std
in
frndint
cli
push
addr16
into
(bad)
js
shr
cmp
jg
(bad)
jle
pop
lock
(bad)
push
aas
icebp
arpl
jg
jmp
inc
(bad)
clc
aas
cmc
aaa
(bad)
cmp
cld
(bad)
xlat
(bad)
mov
sar
jne
ja
push
imul
(bad)
in
repz
push
sar
out
inc
pop
call
aas
mul
std
mov
lahf
(bad)
(bad)
cli
cmc
and
jg
(bad)
stc
ins
dec
(bad)
fs
idiv
outs
(bad)
movs
adc
xchg
sub
jg
scas
icebp
jg
mov
stos
inc
jg
jg
mov
sti
jecxz
jmp
jg
aaa
clc
fwait
(bad)
mov
dec
xor
jmp
icebp
outs
clc
xor
lahf
std
clc
(bad)
mov
repz
scas
test
hlt
aas
in
clc
test
inc
jg
(bad)
(bad)
(bad)
mov
aas
jmp
push
lahf
mov
mov
sbb
aaa
(bad)
imul
cmps
(bad)
mov
fidivr
std
(bad)
stc
aas
stc
mov
stos
repz
out
sbb
int
in
jle
scas
cld
sub
sahf
inc
jmp
lahf
hlt
iret
cld
and
jns
das
(bad)
push
ud0
sti
cmp
xor
aas
(bad)
(bad)
jnp
(bad)
scas
xchg
(bad)
in
cld
add
daa
jb
inc
(bad)
(bad)
ja
std
icebp
mov
cld
pop
ss
call
mov
mov
dec
jmp
jg
cld
pop
out
push
and
loope
mov
jg
pop
jno
stc
outs
stc
jmp
dec
(bad)
psubd
(bad)
sar
loop
jmp
nop
jne
cld
es
aam
sti
mov
cld
dec
dec
outs
inc
out
lahf
repnz
mov
cld
pop
sti
aaa
jg
jmp
(bad)
jge
(bad)
in
pop
stc
idiv
aam
jle
cmc
lahf
dec
(bad)
in
das
cmp
mov
neg
cmc
mov
xchg
jmp
std
call
pop
das
clc
sbb
jo
dec
jg
outs
div
loope
jmp
out
stc
out
out
clc
das
call
cli
xchg
dec
(bad)
sub
pop
lock
cld
cmc
lahf
std
jmp
jle
std
mov
das
stc
jecxz
mov
sar
fcom
iret
fisubr
mov
(bad)
pop
jg
dec
push
mov
cmp
lock
pop
jle
aas
sti
pop
stc
call
loope
rol
jg
and
pop
imul
std
dec
jg
aas
jns
clc
sub
(bad)
out
std
sar
pop
in
cld
stos
pop
neg
(bad)
cdq
aas
mov
cmc
pop
std
ins
jmp
pop
sti
push
ds
xchg
(bad)
push
retf
jmp
add
les
inc
push
pop
icebp
cmp
scas
(bad)
mov
pop
in
call
int
mov
mov
imul
out
(bad)
out
inc
in
jbe
jmp
repnz
fdivr
fld
xlat
outs
cli
out
(bad)
and
daa
std
lds
int
call
(bad)
stc
(bad)
dec
bound
cli
xor
cmc
ja
jmp
pop
std
xlat
(bad)
test
clc
in
ftst
out
fdivr
repnz
(bad)
cmp
daa
jge
sti
jmp
cld
idiv
jmp
inc
jl
jecxz
jmp
hlt
jecxz
(bad)
in
pop
inc
out
pop
sti
mov
out
stc
icebp
aas
xor
stc
cmp
jg
into
lahf
jp
aaa
cld
aad
stc
cli
clc
aas
cmp
push
jg
stc
das
jmp
mov
not
jg
mov
jg
retf
aas
loope
stc
clc
mov
pushf
add
shl
xlat
mov
pop
ss
jg
xor
jmp
std
cmps
std
stos
aas
pusha
test
mov
(bad)
repnz
adc
stc
outs
cld
loopne
and
cmps
shl
mov
fsubr
std
mov
mov
jge
loope
sti
fcmovne
(bad)
movs
xlat
jg
pop
(bad)
sti
cld
int3
loop
and
cmp
outs
cld
imul
push
(bad)
shr
(bad)
sbb
movs
push
mov
int3
icebp
paddw
in
(bad)
idiv
(bad)
sti
jg
out
repnz
std
lods
jg
pop
icebp
(bad)
pop
sti
jg
push
mov
jg
mov
dec
es
mov
(bad)
das
lahf
cld
ret
mov
ja
(bad)
jg
(bad)
cld
xor
iret
clc
dec
(bad)
mov
aas
cld
push
mov
sub
ja
(bad)
cld
aas
out
dec
std
ja
dec
jg
popf
aas
std
(bad)
imul
xchg
loop
mov
jg
das
(bad)
fnstsw
dec
sti
xor
mov
stc
push
call
mov
(bad)
(bad)
cmps
jle
aas
out
mov
fcomip
paddb
jle
push
mov
dec
mov
jmp
cld
call
adc
std
cmp
jmp
scas
cld
in
clc
pop
xchg
add
push
jle
popf
(bad)
cld
dec
(bad)
in
(bad)
scas
aas
pusha
cld
loopne
(bad)
ror
lods
jg
iret
(bad)
(bad)
pop
sti
inc
call
out
(bad)
imul
mov
sahf
push
cli
stc
hlt
stc
outs
mov
mov
jmp
mov
jg
(bad)
cli
mov
fdivr
mov
hlt
popf
(bad)
aas
clc
jae
adc
cld
sahf
mov
ins
cmp
pop
clc
mov
jg
lahf
cld
xchg
mov
jmp
jnp
aad
pop
repz
cli
dec
repnz
mov
mov
(bad)
repnz
std
sub
lods
(bad)
mov
pop
out
clc
mov
cmc
jg
icebp
jg
xchg
(bad)
popf
adc
aas
mov
sti
push
jge
iret
stc
cmps
jmp
jg
mov
dec
(bad)
out
popf
pop
jecxz
clc
(bad)
nop
popf
ret
paddd
iret
aas
stc
aaa
jle
pop
and
aas
out
jb
mov
pop
jg
std
jmp
outs
or
lahf
sti
out
mov
push
out
data16
daa
jg
stc
retf
jg
outs
test
cld
push
mov
std
ror
clc
jnp
call
(bad)
mov
cld
inc
jg
scas
dec
cdq
lds
std
out
cli
or
in
jmp
movs
aas
repz
dec
dec
(bad)
hlt
pop
cld
xlat
inc
push
mov
call
out
cli
(bad)
test
jg
jg
das
stc
daa
cmps
inc
cmc
pop
std
out
pop
mov
cld
or
std
or
imul
pop
cmc
adc
aas
(bad)
fstp
xchg
mov
scas
jg
stc
icebp
pop
cld
(bad)
cld
in
outs
jle
(bad)
(bad)
cld
ja
cmp
xchg
out
enter
jmp
stc
iret
dec
mov
and
mov
aaa
lods
imul
jg
(bad)
in
pop
cli
fidivr
sti
pop
cld
imul
in
mov
jecxz
pop
xor
add
scas
stc
jne
lea
mov
dec
fistp
push
addr16
lods
aas
(bad)
icebp
addr16
lock
loop
xlat
stc
jnp
xchg
push
jg
aas
jno
pop
(bad)
push
jg
aas
repnz
inc
out
mov
out
(bad)
mov
jg
aas
sti
addr16
xchg
jg
jg
mov
pop
dec
call
clc
loope
cli
jmp
cld
out
(bad)
outs
pop
cld
aam
hlt
sbb
das
lahf
cld
pop
mov
mov
jmp
jecxz
cli
sbb
aad
stc
aas
std
ja
jmp
adc
daa
std
outs
mov
inc
pop
scas
pop
jmp
call
pop
cld
(bad)
std
ret
push
pop
jge
clc
cmp
(bad)
in
fist
pop
(bad)
imul
sti
mov
dec
das
push
leave
aas
lock
sti
jae
cmc
pop
mov
xor
mov
mov
scas
out
fsubr
cli
pop
std
and
stc
shr
icebp
(bad)
std
fs
leave
(bad)
aas
js
imul
ja
sar
xchg
xchg
dec
out
(bad)
mov
fcomip
xlat
fadd
call
jo
pop
cli
jg
out
jg
sub
out
fcomip
out
cmp
icebp
mov
aam
fs
dec
outs
repnz
fistp
inc
mov
dec
jg
jnp
jg
cmp
clc
fdivrp
inc
xchg
cli
in
fcomip
pop
std
xor
outs
dec
(bad)
jne
cmps
fucomip
outs
dec
lock
cld
data16
mov
hlt
aas
pop
std
cmp
jne
out
mov
outs
mov
movaps
mov
repz
(bad)
sub
repnz
cld
test
loop
clc
sar
xchg
hlt
jmp
repz
in
dec
sti
dec
jle
outs
dec
out
(bad)
cld
or
scas
stc
das
std
and
hlt
fstp
pop
jb
push
inc
jnp
clc
idiv
mov
out
jp
cld
mov
push
jg
aas
cld
clc
mov
repz
(bad)
jmp
pop
ds
imul
out
(bad)
xlat
push
pop
out
(bad)
in
in
hlt
outs
std
sbb
mov
pop
repz
inc
mov
(bad)
das
fdiv
lock
(bad)
mov
jle
push
pop
jg
xchg
test
aas
neg
cmps
pop
sbb
paddb
jg
repnz
(bad)
push
inc
inc
mov
ds
std
jbe
cld
aas
jmp
(bad)
push
jg
jg
out
out
clc
ins
inc
jmp
(bad)
pop
mov
int
mov
scas
lahf
dec
jg
repnz
dec
paddd
mov
jnp
cli
sub
push
jle
rcl
ja
pop
iret
mov
(bad)
(bad)
aas
repz
pusha
repz
adc
(bad)
ja
(bad)
rol
jmp
(bad)
cli
scas
cld
aaa
jmp
jg
xlat
clc
sub
icebp
repnz
cmp
mov
jne
adc
in
cmc
popf
pop
dec
aam
aas
jmp
aas
call
cli
(bad)
iret
push
cs
dec
(bad)
and
(bad)
cmp
(bad)
jg
scas
idiv
call
idiv
out
mov
mov
fcomip
aaa
popf
cld
fnstcw
push
addr16
(bad)
jmp
out
fistp
jge
xchg
aas
(bad)
(bad)
(bad)
cmc
dec
aad
repnz
mov
fild
pop
mov
jg
lods
and
sahf
mov
dec
jg
aas
sti
sti
inc
cld
xchg
(bad)
outs
mov
cld
xor
cmc
mov
aas
(bad)
std
call
mov
clc
scas
fst
pop
daa
mov
inc
(bad)
test
mov
std
clc
mov
sti
mov
sar
out
(bad)
fucomp
repz
std
jecxz
pushf
mov
daa
mov
std
fisttp
(bad)
cmc
pop
mov
dec
xchg
std
aaa
mov
jmp
clc
outs
std
fwait
dec
idiv
imul
sbb
dec
mov
idiv
(bad)
jmp
out
jmp
std
sbb
xchg
call
dec
mov
fcmovu
lea
cdq
mov
(bad)
jle
cmc
dec
jle
fstp
(bad)
(bad)
jnp
push
ja
sti
outs
cld
pop
(bad)
in
out
imul
call
pop
inc
dec
fstp
idiv
jp
dec
std
push
mov
dec
(bad)
fnstcw
gs
icebp
mov
pop
cmps
mov
ret
ja
outs
jle
mov
call
(bad)
mov
(bad)
mov
aas
clc
out
pop
(bad)
pop
mov
xlat
pop
(bad)
jns
loopne
into
cmp
jmp
cli
xchg
jl
jg
pop
cli
arpl
mov
mov
dec
jg
out
cmc
out
call
fucomi
repz
ficomp
stc
lods
mov
icebp
(bad)
in
dec
mov
mul
addr16
(bad)
fdivr
lock
out
(bad)
jle
(bad)
fcomip
inc
std
pop
mov
mov
dec
cmp
lahf
clc
daa
(bad)
scas
(bad)
std
mov
pop
mov
scas
jmp
xlat
clc
xchg
lock
(bad)
jge
in
mov
stos
jle
xchg
rcl
movs
xchg
in
test
dec
jg
out
mov
and
(bad)
xor
in
stc
mov
push
cmc
clc
fs
fwait
pop
(bad)
adc
std
jbe
sub
inc
out
(bad)
mov
dec
scas
cli
jg
aaa
call
jg
lahf
(bad)
ja
sbb
pop
cld
jmp
fwait
jmp
push
cs
lds
sar
dec
jg
(bad)
jmp
jg
mov
dec
(bad)
and
(bad)
icebp
aas
dec
call
jmp
(bad)
pop
cld
mov
clc
aad
cli
daa
cld
cs
ficomp
repnz
jg
mov
mov
xor
pop
cld
out
pushf
(bad)
xchg
aas
mov
xlat
sub
lods
paddd
pop
mov
loopne
jg
iret
(bad)
jecxz
jle
jmp
add
jg
xlat
std
mov
cli
push
inc
jmp
sar
dec
std
mov
mov
arpl
mov
and
retf
mov
ja
(bad)
mov
jmp
pop
in
stos
pop
icebp
jg
loop
jmp
jecxz
call
scas
jg
hlt
(bad)
(bad)
imul
repz
xchg
std
mov
aas
jecxz
inc
jg
pop
push
(bad)
addr16
sbb
in
outs
cld
aaa
jle
(bad)
jmp
pop
hlt
stc
jg
xchg
mov
std
(bad)
pop
mov
(bad)
sti
mov
pop
std
mov
shl
fldcw
cli
in
std
xchg
mov
cmp
jmp
stc
ffree
mov
dec
cmp
fucomip
aas
cld
mov
call
pop
sub
lea
(bad)
icebp
in
cmc
paddb
aas
dec
sbb
dec
jg
(bad)
idiv
pop
xchg
(bad)
(bad)
pop
cmp
leave
out
clc
test
hlt
(bad)
std
and
pop
clc
(bad)
std
or
(bad)
popf
push
in
outs
cli
idiv
pop
(bad)
fwait
(bad)
xlat
jg
leave
das
(bad)
addr16
aas
in
retf
fist
sti
jne
popf
out
inc
(bad)
aas
icebp
arpl
lock
(bad)
ja
sar
leave
push
sub
cld
cmps
das
jg
hlt
ja
jnp
stos
lahf
cli
call
fbld
fnstsw
mov
std
(bad)
(bad)
push
jg
pop
hlt
das
std
mov
mov
imul
call
jg
pop
lock
dec
das
jg
mov
jae
fwait
aas
mul
enter
jle
lahf
(bad)
stc
mov
jmp
mov
test
cmp
pop
jg
fcomip
sbb
fdiv
lahf
inc
aas
jle
(bad)
sti
lahf
stc
daa
(bad)
mov
repz
ds
repz
cmc
(bad)
pop
cmc
(bad)
jge
mov
lahf
cld
(bad)
(bad)
(bad)
lock
mov
stc
test
fwait
pop
(bad)
cmps
jg
mov
dec
xchg
xchg
out
mov
aas
test
(bad)
(bad)
mov
cld
mov
cld
xchg
inc
pop
call
(bad)
movs
out
(bad)
test
jle
iret
stc
sti
jg
pop
(bad)
jge
(bad)
pop
cmp
push
(bad)
call
jg
lahf
repz
cld
test
std
iret
inc
(bad)
cld
loope
jge
idiv
cmc
lahf
sbb
div
cld
sbb
fwait
jmp
int
clc
lahf
pop
leave
xchg
int3
xchg
call
dec
(bad)
lock
das
(bad)
jge
jbe
(bad)
(bad)
fnstcw
out
fwait
std
data16
popf
aas
cld
daa
jle
pop
jmp
call
(bad)
std
scas
popf
jge
pop
(bad)
xchg
mov
cli
into
pop
mul
dec
(bad)
jmp
(bad)
sub
cli
aas
clc
stc
xchg
fucomip
aas
sti
cmp
out
retf
aas
jmp
std
fdivrp
int3
jg
outs
(bad)
xor
aas
in
clc
sbb
ss
mov
hlt
call
ret
jecxz
jl
fwait
cld
mov
ficomp
in
push
pop
cld
mov
addr16
cmp
std
xchg
jg
outs
jnp
lahf
fsubp
pushf
leave
lahf
cmc
not
fist
(bad)
mov
jmp
shr
push
call
jg
inc
std
gs
pop
clc
or
jmp
pop
(bad)
(bad)
dec
pop
or
cli
movs
mov
test
bnd
stc
mov
in
jecxz
out
pop
cmp
ja
outs
pop
std
lahf
mov
jg
xlat
std
jb
jmp
hlt
stos
call
aas
mov
std
jmp
div
cli
dec
(bad)
fsubr
dec
stc
mov
(bad)
adc
retf
mov
test
jnp
sti
cmp
std
movs
inc
outs
stc
aaa
std
push
fldcw
sti
out
test
(bad)
(bad)
loop
repz
pop
dec
loop
cmc
scas
std
cli
push
inc
(bad)
fild
sbb
xor
aas
jmp
jge
mov
stc
in
idiv
(bad)
mov
(bad)
(bad)
fidivr
pop
cli
fnstsw
(bad)
fistp
(bad)
(bad)
arpl
jmp
out
sar
mov
std
xchg
lahf
xor
pop
aas
std
push
jg
stc
xchg
(bad)
movs
jg
scas
std
clc
out
cld
pushf
xchg
sub
sub
out
aas
cli
das
push
cmc
out
dec
jmp
(bad)
xlat
(bad)
push
(bad)
sti
lahf
test
std
leave
stc
pop
cmp
adc
enter
cmp
repnz
(bad)
popa
jg
outs
dec
aas
das
jmp
aas
loope
clc
mov
mov
sbb
mov
jle
jmp
mov
ret
pop
jmp
jp
fwait
inc
(bad)
fisubr
scas
call
jmp
std
pop
call
jg
fstp
out
mov
scas
stc
call
(bad)
pop
hlt
lods
fbstp
aas
repz
std
sub
cmps
jg
iret
std
jnp
push
into
rcr
jmp
mul
leave
cmps
jg
mov
inc
(bad)
(bad)
call
xlat
clc
or
mov
dec
inc
cli
aas
(bad)
mov
das
std
movq
cmps
in
jg
fsub
jg
iret
inc
inc
stc
aas
mov
pop
push
clc
test
lahf
dec
lock
rcr
lods
jge
sti
cld
call
push
xchg
dec
pop
std
push
(bad)
fldcw
xchg
ror
retf
leave
iret
cld
scas
mov
push
outs
and
in
cld
(bad)
mov
cld
push
inc
fcomip
fstp
std
ficom
iret
push
imul
aas
dec
jg
cmps
call
int3
cld
dec
clc
cmp
mov
imul
outs
std
loopne
clc
inc
call
aas
dec
jmp
(bad)
push
push
(bad)
out
mov
cli
icebp
lahf
dec
jle
daa
hlt
jecxz
retf
fucomip
idiv
sub
jg
addr16
icebp
arpl
xchg
leave
das
dec
push
jg
das
int3
imul
dec
paddd
mov
jg
outs
cld
(bad)
xor
iret
std
retf
leave
movs
sti
out
dec
push
xlat
cli
xchg
call
aas
jecxz
clc
std
(bad)
xchg
mov
retf
jg
std
icebp
pop
mov
(bad)
xchg
(bad)
in
pop
icebp
repnz
jae
bnd
lahf
clc
cmps
jmp
mov
stc
mov
jg
stos
aas
(bad)
xlat
std
jmp
jmp
jo
arpl
(bad)
std
out
jle
lahf
(bad)
xchg
fdivr
clc
vhaddps
pop
movs
(bad)
jmp
push
mov
jg
fcomip
cli
(bad)
imul
clc
inc
dec
ret
pop
imul
std
aad
jae
(bad)
cli
scas
(bad)
fwait
dec
jg
aas
in
cli
cmp
pop
cmp
cld
outs
std
(bad)
cli
iret
cld
pop
scas
es
jnp
les
(bad)
mov
stc
outs
jmp
std
xchg
(bad)
pop
cld
(bad)
mov
mov
jg
dec
stos
call
scas
jle
(bad)
out
(bad)
imul
dec
jl
aas
in
lahf
clc
test
pop
repnz
dec
pop
cld
jnp
xchg
lods
jg
daa
jg
movs
xchg
or
push
shl
std
ss
fistp
sahf
aas
icebp
(bad)
call
mov
(bad)
loop
(bad)
out
out
dec
xchg
(bad)
fstp
outs
cli
lock
inc
jo
out
std
jle
xor
mov
push
xchg
es
add
jae
sbb
outs
cli
imul
out
cwde
cld
(bad)
jnp
out
push
mov
lahf
cld
cmps
jg
mov
shr
adc
push
scas
cli
jne
stos
jg
lahf
cli
(bad)
jg
push
jg
in
jo
mov
jg
bsr
arpl
xchg
hlt
(bad)
jg
jg
fistp
clc
push
(bad)
test
jg
inc
out
aas
clc
xor
stos
aad
clc
mov
lahf
lock
(bad)
sub
idiv
mov
jle
mov
jl
iret
cld
leave
jg
jg
sub
mov
(bad)
out
(bad)
mov
mov
pop
call
sub
out
(bad)
mov
sti
ja
(bad)
out
(bad)
in
cld
cmp
(bad)
cdq
out
xlat
scas
stc
pop
cld
lahf
call
mov
jg
addr16
(bad)
repz
fdivr
in
jle
daa
(bad)
mov
push
std
test
xchg
mov
loop
neg
cmp
(bad)
imul
mov
jge
mov
xchg
hlt
cmps
fidivr
in
jns
lahf
jl
pop
(bad)
cmp
(bad)
aas
sti
pop
ds
cmps
aas
cmc
idiv
fnstsw
std
sbb
test
std
jmp
ret
(bad)
(bad)
daa
xchg
std
cdq
aas
jno
iret
cld
sub
dec
dec
add
sar
rcr
xlat
stc
aaa
(bad)
adc
iret
imul
jmp
repnz
(bad)
pop
out
push
lods
mov
mov
jg
mov
cli
adc
(bad)
loopne
(bad)
jmp
scas
jg
mov
dec
repnz
call
stc
jge
std
(bad)
cld
ud1
imul
mov
cmps
dec
pop
lock
inc
je
pop
mov
sub
(bad)
stos
(bad)
fsubr
hlt
mov
iret
clc
cmps
mov
lds
retf
dec
jg
cmc
scas
cli
lods
jmp
sti
outs
dec
mov
sub
jg
shr
pop
xchg
mov
ja
jmp
cld
pop
(bad)
cli
mov
ins
lods
(bad)
mov
stc
sbb
mov
out
push
call
jg
out
hlt
leave
out
sti
pop
pop
scas
jg
pop
out
cld
cmp
rol
(bad)
sti
pop
clc
mov
fwait
jg
xchg
mov
std
and
(bad)
cmp
leave
jg
das
jmp
std
loop
cld
(bad)
sub
inc
cmp
sar
repz
fidivr
cs
jg
mov
daa
dec
push
scas
(bad)
and
iret
pop
jmp
cmp
aad
jg
cmp
inc
dec
(bad)
movs
(bad)
jmp
clc
das
das
sub
or
fucomip
pop
jl
(bad)
std
jnp
fstp
repz
sti
jnp
ret
aaa
xchg
dec
fisubr
jmp
loopne
(bad)
mov
mov
dec
inc
(bad)
fldcw
sub
fucomip
aas
cld
jae
and
vpandn
imul
push
in
pop
cli
mov
sti
pop
call
mov
(bad)
test
in
call
sub
jle
shr
aas
sti
xchg
sahf
cld
xchg
aas
and
ds
jmp
jl
or
fstp
hlt
jmp
in
out
mul
push
(bad)
jle
ja
movs
leave
loope
popf
pop
cmps
jne
pop
jmp
cld
mov
mov
lahf
jle
push
lock
(bad)
mov
test
mov
cmp
mov
aaa
stc
mov
cld
pop
(bad)
fst
jg
mov
pop
stc
xchg
(bad)
xchg
adc
icebp
out
fnstcw
pop
repnz
idiv
(bad)
cli
pop
notrack
mov
sti
iret
pop
cld
fcomp
hlt
mov
inc
jg
mov
(bad)
jge
std
mov
sar
paddw
leave
fcomip
das
call
leave
fbstp
pop
pop
jg
das
std
sar
movs
jmp
mov
out
call
mov
loopne
call
lds
xor
pop
sub
(bad)
jle
sti
(bad)
xor
cld
std
call
mov
mov
and
and
xchg
dec
std
cld
das
movs
xchg
into
jle
pop
sar
(bad)
mov
std
mov
adc
mov
cli
clc
(bad)
xlat
jle
(bad)
out
ja
cmp
sti
jg
std
std
sbb
cli
(bad)
jmp
popf
mov
xlat
jg
push
adc
push
aaa
cdq
std
(bad)
aam
cwde
shl
fdivr
stos
jg
icebp
xlat
inc
(bad)
cmp
nop
jle
(bad)
(bad)
out
inc
mov
cmp
(bad)
jle
jmp
pop
std
sti
push
jg
push
jg
pop
(bad)
aaa
(bad)
mov
mov
push
mov
jge
lock
pop
xchg
mov
out
jo
notrack
jle
aas
(bad)
ja
cld
idiv
lahf
(bad)
in
not
scas
cmc
paddw
mov
jae
mov
(bad)
sar
das
retf
mov
xchg
jg
(bad)
das
std
mov
jmp
stc
outs
call
addr16
imul
jg
jg
sub
jecxz
add
add
jg
pop
cld
fist
idiv
lock
(bad)
xchg
mov
in
clc
out
(bad)
loop
and
ja
inc
inc
mov
out
scas
stc
in
pop
repnz
jge
out
mov
xchg
jmp
outs
stc
mov
pop
stc
icebp
(bad)
out
sti
sbb
pusha
push
dec
jg
popf
aas
loopne
push
lea
nop
clc
lock
into
xchg
jg
jmp
std
mov
(bad)
in
outs
mov
clc
jg
mov
cli
aas
call
jg
mov
jnp
fild
(bad)
scas
rep
jb
cld
pop
std
pop
(bad)
fdivr
jmp
imul
std
in
dec
sub
popf
(bad)
jge
(bad)
cmp
pop
cld
xchg
pop
mov
std
mov
sti
into
outs
idiv
std
or
jg
push
cld
xchg
cmc
out
clc
jnp
retf
xchg
sahf
iret
push
pushf
adc
pop
aad
jno
cmps
jge
push
cld
std
dec
aas
cmc
mov
mov
jae
lods
jmp
daa
jg
aaa
paddd
mov
(bad)
out
jg
pop
int
movs
pop
cli
(bad)
(bad)
push
(bad)
fsubr
inc
jle
jg
pop
pop
std
out
aas
imul
shl
loop
sti
call
aas
inc
cs
out
cld
scas
mov
(bad)
cmps
(bad)
sbb
out
idiv
test
paddd
(bad)
hlt
in
fucomip
iret
(bad)
in
sub
cld
daa
jge
jg
jle
push
enter
jg
dec
jg
in
jg
dec
outs
in
jge
out
pop
pop
cld
aam
icebp
jecxz
cld
mov
aaa
std
into
jg
std
(bad)
call
std
arpl
adc
cmp
test
retf
cli
or
mov
pop
jle
aas
out
pop
clc
lahf
aas
call
rcr
dec
inc
mov
(bad)
fdivr
mov
(bad)
hlt
out
aas
std
icebp
clc
(bad)
call
sbb
stc
xchg
(bad)
mov
loope
into
jg
or
sbb
iret
dec
mov
jg
pop
(bad)
push
pop
(bad)
(bad)
enter
(bad)
(bad)
int3
out
std
das
push
sar
xchg
mov
ds
repz
jg
fstp
mov
push
(bad)
out
call
sbb
imul
jg
fcomip
jmp
mov
jg
dec
(bad)
scas
jle
aas
(bad)
scas
(bad)
and
mov
xchg
mov
in
cld
jns
out
std
sbb
iret
(bad)
shl
inc
call
xor
dec
jg
ja
add
(bad)
mov
inc
dec
std
xchg
neg
xor
push
jle
lahf
cld
call
fdivr
push
inc
(bad)
jmp
jecxz
sbb
iret
adc
jle
fstp
rol
jmp
fdivr
out
jle
jmp
push
ds
mov
mov
jg
out
stc
cmps
sahf
(bad)
fsubr
inc
std
jne
neg
std
jmp
push
mov
lods
fbld
cmp
pop
(bad)
mov
mov
push
(bad)
xor
das
jg
imul
call
outs
ss
icebp
stc
scas
icebp
aaa
(bad)
mov
std
inc
jle
push
aas
dec
(bad)
mov
sub
(bad)
aam
pop
jg
neg
call
imul
das
stc
inc
jle
(bad)
dec
cld
imul
push
repnz
sar
(bad)
stos
push
(bad)
mov
lahf
jg
(bad)
(bad)
pop
jmp
dec
imul
pop
scas
(bad)
cmc
pop
nop
cld
ja
mov
mov
repnz
cld
scas
push
fdivrp
cmp
(bad)
les
(bad)
fucomp
lahf
dec
xchg
cld
ret
xchg
cld
ja
(bad)
push
(bad)
std
push
jmp
aad
jg
pop
mov
aaa
(bad)
mov
or
aas
or
std
fwait
(bad)
jmp
(bad)
cmps
jg
scas
icebp
push
jl
inc
push
push
div
jg
cld
ja
ret
cld
and
aas
jmp
sar
fdivrp
gs
aas
std
daa
inc
call
jg
ja
in
neg
out
hlt
mov
(bad)
leave
lahf
dec
repnz
sbb
(bad)
adc
jge
in
icebp
aaa
cld
mov
mov
cmp
pop
daa
stc
jg
paddb
jg
(bad)
sbb
inc
(bad)
inc
aas
sub
mov
aad
xor
scas
jg
fisttp
paddd
jg
fisttp
fwait
pop
neg
pop
neg
std
stos
xchg
leave
stc
inc
(bad)
jg
scas
sti
sbb
and
ja
push
dec
jg
jg
outs
mov
(bad)
outs
icebp
orps
sub
loop
pop
push
call
pop
lock
mov
xchg
test
out
jmp
jmp
(bad)
std
push
aas
sti
xchg
jg
mov
jmp
fcomip
xlat
ds
mov
pop
cld
idiv
pop
test
std
popf
das
(bad)
scas
(bad)
std
ja
(bad)
in
std
popf
das
dec
lahf
call
add
cld
test
iret
(bad)
mov
(bad)
pop
std
inc
push
pop
mov
out
idiv
mov
sbb
lahf
pop
ins
gs
aas
out
stc
xchg
mov
cld
mov
inc
pop
jg
imul
jg
(bad)
jg
(bad)
(bad)
pop
inc
mov
mov
mov
aaa
jmp
in
push
jmp
jne
mov
in
sti
and
adc
pop
mov
(bad)
shr
stc
imul
push
pop
std
std
aas
call
mov
in
sti
fdivp
(bad)
pop
cld
pop
dec
jmp
outs
push
(bad)
inc
cld
xchg
jmp
pop
test
(bad)
cld
fucomip
scas
call
jmp
fldcw
lahf
fnstsw
scas
std
push
jg
fcomip
sbb
dec
mov
aas
jle
sbb
jle
jnp
outs
mov
(bad)
in
icebp
(bad)
cld
mov
cmp
outs
cmc
das
inc
icebp
mov
mov
(bad)
in
aas
stc
out
(bad)
std
jmp
popf
pop
std
stos
(bad)
in
jg
(bad)
mov
outs
sti
cmp
inc
movs
in
mov
jg
(bad)
aas
jl
retf
aas
cli
sti
jle
jmp
ja
cmc
jg
xlat
mov
mov
dec
loopne
repnz
pop
in
cld
lahf
(bad)
repz
fucomip
iret
sti
xlat
jg
jecxz
jo
out
fdivr
das
(bad)
cli
jg
cmp
rol
in
outs
repz
(bad)
pop
jg
aas
cmc
daa
(bad)
push
fstp
dec
cld
dec
(bad)
fsub
mov
ror
sar
in
cld
lahf
inc
ret
pusha
dec
(bad)
bnd
iret
sti
xor
(bad)
cmp
iret
jg
call
inc
(bad)
cmp
dec
(bad)
fstp
(bad)
mov
pop
jnp
int3
jg
outs
call
shr
cmp
pop
addr16
int
stc
das
std
jecxz
leave
fcomip
xlat
clc
xor
inc
push
(bad)
sub
jg
dec
stc
test
fistp
dec
xchg
xor
sub
jb
pop
dec
(bad)
clc
lahf
jle
aas
jle
aad
hlt
fwait
dec
jg
xchg
mov
iret
(bad)
in
ja
repz
out
outs
inc
sar
in
pushf
std
cmp
neg
retf
inc
hlt
scas
cld
pop
mov
mov
or
daa
lahf
jmp
hlt
xlat
out
cld
(bad)
fucomi
mov
inc
mov
xchg
aas
jmp
out
idiv
and
(bad)
mov
(bad)
in
scas
dec
fsubrp
lahf
cmc
cmp
xchg
inc
jg
pop
neg
jg
lahf
hlt
idiv
es
jg
jg
pop
(bad)
mov
scas
(bad)
test
jle
xlat
jmp
pop
je
cld
daa
push
xor
push
mov
mov
pop
jg
(bad)
jg
pop
mov
aam
(bad)
pop
mov
sbb
aam
jmp
jg
jmp
fcos
int
jl
idiv
aas
out
std
(bad)
mov
in
jl
aas
push
call
(bad)
lock
repz
icebp
jmp
call
cld
push
dec
mov
(bad)
sti
fwait
jle
(bad)
ja
lds
pop
repnz
sti
(bad)
repz
(bad)
fnstsw
lock
fwait
(bad)
mov
repz
cli
(bad)
fnstsw
icebp
push
dec
push
pop
cld
aad
cli
hlt
iret
mov
pop
cmp
push
rcr
aas
clc
fwait
jmp
jmp
cli
(bad)
and
std
xchg
call
(bad)
xlat
std
jbe
sar
jg
jbe
sti
das
stc
pop
jg
push
(bad)
sbb
jle
out
sub
cld
outs
jle
mov
(bad)
jmp
cld
or
scas
sti
std
jg
pop
jecxz
clc
(bad)
call
jg
sub
jnp
cmps
inc
cmp
inc
aas
(bad)
jg
icebp
(bad)
jl
cmp
fucomip
(bad)
clc
xchg
nop
es
fdivrp
xchg
idiv
sub
ds
(bad)
(bad)
nop
jg
aas
std
ins
(bad)
(bad)
in
out
(bad)
clc
idiv
sub
out
stc
pop
std
inc
cmp
jg
call
std
cmp
fnstsw
neg
(bad)
mov
mov
pop
cld
cmp
add
sti
xlat
aaa
jecxz
push
mov
jg
stos
pop
dec
popf
aas
in
stc
jmp
jecxz
aas
pop
(bad)
pop
stc
aas
cld
(bad)
std
add
cld
out
or
jg
jg
outs
sti
sub
jmp
mov
mov
xchg
repnz
mov
cmps
mov
mov
lahf
cli
arpl
sbb
repz
sti
outs
mov
mov
clc
ja
idiv
sti
mov
std
cmp
out
clc
xchg
pop
jg
shl
xchg
(bad)
lahf
cld
repnz
inc
in
fucomip
scas
std
sbb
fistp
jg
xchg
aas
repz
std
inc
jg
(bad)
call
repz
stos
fucomip
mov
dec
lock
mov
inc
(bad)
in
ja
(bad)
jg
cmps
jg
repz
(bad)
pop
call
in
xlat
and
icebp
lock
jmp
inc
cld
mov
dec
jg
idiv
sbb
aas
shl
(bad)
jg
dec
std
popa
jg
popf
pop
mov
lahf
mov
(bad)
mov
mov
(bad)
xchg
retf
stc
pop
cld
loop
lock
cli
aaa
mov
cmp
fbstp
fstp
adc
mov
lds
out
(bad)
ds
std
jbe
icebp
pop
(bad)
std
xchg
fnstcw
pop
cld
mov
hlt
pop
icebp
dec
fisubr
jg
daa
std
xor
jg
or
xchg
pop
clc
movsx
mul
mov
sahf
cld
cmp
outs
stc
mov
cli
(bad)
pop
test
std
jg
retf
pop
mov
imul
mov
clc
fist
fbld
inc
cli
outs
(bad)
jmp
mov
jg
scas
cld
das
jg
mov
clc
mov
cmc
mov
dec
(bad)
mov
idiv
jmp
adc
stc
push
call
(bad)
out
call
(bad)
fmulp
pop
repz
jle
dec
adc
hlt
push
push
std
int3
pop
mov
cld
std
dec
jg
aas
cmc
jnp
jle
loopne
pop
jmp
std
jmp
std
or
rcr
std
aas
cmc
xchg
mov
clc
sub
mov
jg
fcomip
idiv
(bad)
mov
in
hlt
das
stc
movq
sti
jg
(bad)
out
cld
repnz
cdq
aas
cli
jnp
pop
cld
adc
cmps
xor
(bad)
xchg
jg
dec
das
enter
clc
popf
repz
ds
lock
jg
mov
fsubr
outs
clc
addr16
cli
in
scas
sub
imul
cld
cmp
xchg
cmp
xlat
(bad)
stc
outs
lock
icebp
aas
mov
mov
mov
cld
inc
jg
inc
aas
sti
popf
pop
jg
mov
push
dec
pop
dec
jg
(bad)
inc
mov
(bad)
in
out
cli
xchg
sahf
(bad)
and
ds
daa
jg
mov
xchg
(bad)
cdq
(bad)
(bad)
pop
std
sar
mov
cli
iret
std
cdq
jmp
movs
addr16
outs
sti
in
jg
(bad)
clc
iret
into
(bad)
jmp
lods
jg
jg
daa
into
call
push
push
or
push
les
div
pushf
push
fadd
cmps
mov
repnz
sti
in
(bad)
lods
out
popa
cmp
mov
out
std
and
aas
es
dec
das
out
cmp
ins
jg
pop
jecxz
sub
in
loope
jl
mov
lahf
xchg
(bad)
(bad)
aas
icebp
push
(bad)
jnp
fstp
dec
cli
scas
call
out
push
mov
fcomip
das
(bad)
mov
inc
dec
call
fistp
mul
cld
mov
repnz
out
shr
outs
(bad)
out
gs
retf
pop
scas
(bad)
fstp
lock
std
imul
inc
outs
mul
std
loop
cmc
push
jl
in
pop
test
outs
std
lahf
mov
(bad)
scas
jg
pop
std
push
jg
outs
repnz
cld
adc
in
push
cld
sar
fstp
sti
xlat
inc
stc
fnstcw
(bad)
cld
xlat
cld
jmp
sar
pop
and
inc
jg
xchg
dec
hlt
imul
arpl
cmp
and
test
out
cli
jmp
push
iret
clc
fwait
nop
push
stc
xlat
jle
fmulp
cld
cmps
cmp
(bad)
jns
in
lahf
(bad)
out
dec
mov
aas
cli
jmp
jns
mov
(bad)
mov
sti
(bad)
inc
imul
mov
dec
pop
std
sti
xchg
repz
jnp
cdq
inc
jg
pop
(bad)
imul
jg
jg
mov
std
(bad)
mov
mov
fidivr
dec
adc
clc
gs
mov
mov
cld
lahf
jg
out
cld
out
pop
(bad)
cmps
fbld
sti
(bad)
(bad)
in
(bad)
outs
cli
ret
jg
(bad)
lahf
call
mov
mov
in
pop
mov
lahf
call
lahf
jg
pop
cld
std
(bad)
aaa
jnp
sti
cld
ja
in
jg
pop
(bad)
cmp
jle
pop
jecxz
std
sti
(bad)
cld
(bad)
push
adc
xchg
sbb
std
aas
std
popa
mov
jg
iret
cld
in
and
jg
dec
mov
xchg
cmp
into
(bad)
mov
(bad)
hlt
pop
jmp
jns
push
ret
scas
std
lds
(bad)
in
out
cld
xor
scas
std
aaa
std
inc
jg
outs
sti
lds
repnz
std
adc
out
(bad)
repnz
fwait
cld
xchg
(bad)
jmp
hlt
setae
jle
(bad)
jmp
add
out
cmc
mov
jg
aas
stc
cmp
pop
hlt
sub
mov
jg
aaa
push
(bad)
cld
leave
jg
test
das
pop
(bad)
daa
lahf
(bad)
xor
lds
setp
lds
movd
xchg
std
sahf
jg
sub
icebp
iret
inc
inc
cld
mov
std
mov
out
(bad)
addr16
fcomip
xlat
(bad)
jecxz
stc
(bad)
jmp
jns
imul
mov
push
aas
sti
sti
aaa
mov
mov
test
call
loopne
cld
sbb
mov
stc
sub
cli
daa
mov
mov
push
inc
pop
jmp
(bad)
scas
mov
mov
sar
movs
fcomip
mov
cmp
fnsave
stc
or
(bad)
(bad)
cmc
sbb
mov
jg
psubw
add
popf
aas
div
cld
(bad)
inc
scas
icebp
pop
(bad)
test
out
jg
std
push
jg
jg
(bad)
(bad)
sub
jg
repnz
retf
jle
push
idiv
iret
dec
dec
push
pop
mov
cli
jg
into
mov
pop
jmp
dec
inc
retf
call
popa
jg
out
cld
fwait
push
(bad)
sub
outs
(bad)
imul
cmc
mov
in
scas
cmc
(bad)
hlt
neg
lock
lahf
hlt
in
fucomip
neg
stc
ror
les
ds
jmp
stc
sar
jge
cli
xlat
lahf
std
dec
jg
pop
repz
dec
pop
clc
push
mov
(bad)
fcomp
pop
jmp
or
(bad)
stc
lahf
inc
jg
cld
push
jg
fisttp
cli
idiv
ja
cli
jg
aas
(bad)
xchg
mov
(bad)
mov
lea
jp
cli
scas
jmp
inc
mov
xlat
inc
fwait
std
daa
inc
clc
jg
repz
or
(bad)
jle
jmp
cmps
(bad)
aas
xchg
ins
out
std
sbb
imul
inc
mov
in
ja
cld
xlat
jmp
jg
ja
cli
aas
dec
out
jge
(bad)
cld
sub
jg
clc
idiv
push
pop
addr16
pop
jle
aas
in
cli
mov
(bad)
cld
sbb
cdq
jge
imul
jg
jne
idiv
mov
fild
ja
repnz
jnp
dec
data16
aas
push
jg
mov
aas
sbb
dec
mov
outs
fwait
xor
jg
stos
inc
(bad)
repnz
xchg
mul
std
iret
sti
setp
jmp
mov
stos
mov
mov
das
(bad)
xchg
aas
clc
fistp
std
mov
cld
loope
out
aas
cli
jg
(bad)
dec
jbe
mul
std
mov
dec
cmc
fdivrp
outs
jg
aas
sti
iret
cld
mov
das
push
sub
sbb
int
out
ucomiss
in
inc
icebp
sbb
ja
retf
sub
inc
jg
sub
pop
clc
mov
lea
(bad)
jmp
push
fdivrp
xor
repnz
cld
fcomp
ja
cmp
cli
cmc
(bad)
repnz
lock
idiv
std
mov
fcomip
cmp
rcr
xchg
(bad)
scas
shr
std
mov
out
out
sti
fldcw
and
mov
dec
aam
lea
mov
cmp
icebp
jmp
scas
(bad)
fwait
push
mov
push
jg
xchg
jg
fcomip
cmps
inc
pop
aas
icebp
addr16
daa
cld
hlt
mov
stc
(bad)
pop
repz
cs
das
jp
pop
jmp
sbb
mov
icebp
cmp
jmp
cmc
aas
not
std
bnd
mov
aaa
mov
ja
std
out
cld
cmc
xchg
ret
clc
mov
sti
jnp
outs
in
lahf
hlt
pop
(bad)
stc
mov
cld
jmp
push
xchg
scas
(bad)
mov
cli
ja
jle
pop
sti
lahf
inc
sbb
cmc
jmp
mov
(bad)
fcomp
cmc
xchg
cmps
jg
fldl2t
cld
icebp
mov
std
push
jmp
scas
dec
aas
sti
outs
dec
jmp
jg
jg
xchg
aas
pusha
jmp
sti
iret
out
inc
aas
hlt
inc
dec
jg
jg
push
jge
outs
sub
aad
sti
pop
(bad)
mov
repnz
jle
(bad)
(bad)
std
pop
jecxz
dec
(bad)
aas
std
sbb
call
dec
(bad)
push
daa
stos
mov
(bad)
inc
mov
cld
ret
sar
cld
(bad)
(bad)
mov
pop
sti
push
mov
inc
repz
mov
std
(bad)
mov
dec
neg
das
pop
cld
dec
jg
(bad)
out
retf
aaa
cli
mov
jb
or
jecxz
pop
dec
fstp
pop
mov
and
jg
out
test
pop
repz
jle
outs
std
jne
pop
dec
xchg
and
repz
loope
aad
cmc
mov
jmp
(bad)
cld
jnp
jne
mov
mov
pop
clc
stos
(bad)
mov
jg
dec
cli
xor
out
aas
std
mov
loop
pop
std
std
push
cld
daa
mov
mov
out
idiv
ins
das
mov
cmp
lahf
and
call
aas
std
dec
sahf
std
out
jg
(bad)
mov
cli
adc
jg
pop
mov
stos
ret
pop
mov
movs
cmp
pop
hlt
cmp
push
mov
cmp
in
mov
clc
xchg
(bad)
fidivr
std
dec
fdivrp
adc
jg
xlat
fstp
cs
retf
fcomip
paddw
inc
mov
fbstp
scas
std
outs
in
das
pop
jg
scas
std
cmp
repnz
and
push
jg
(bad)
jmp
cmp
aas
loopne
daa
mov
cld
test
jnp
(bad)
dec
std
imul
std
sbb
jle
jmp
scas
sti
sbb
jg
idiv
xchg
jg
pop
fistp
mov
cs
(bad)
xchg
std
std
(bad)
jmp
repnz
inc
outs
push
std
cs
pop
mov
leave
jmp
idiv
cli
pop
icebp
fwait
(bad)
jge
jb
pop
(bad)
xchg
(bad)
jmp
dec
jg
std
repnz
jg
addr16
cmp
fld
hlt
aad
fdivrp
repnz
out
jg
leave
scas
std
or
add
jg
xchg
dec
out
loop
mov
lods
es
pop
(bad)
jmp
inc
jg
pop
jl
repz
or
(bad)
in
pop
nop
das
cli
out
aas
jmp
cmc
ja
movs
fistp
dec
jg
(bad)
xchg
adc
outs
repz
std
stc
jg
lahf
cld
(bad)
(bad)
ds
stc
mov
(bad)
(bad)
fdivr
retf
push
adc
std
mov
out
clc
pop
jg
jmp
scas
stc
fwait
(bad)
aad
call
stos
pop
sti
cmp
mov
(bad)
stc
aas
lock
stc
add
mov
repz
sti
(bad)
popa
cmp
jle
paddd
pop
mov
sti
jg
jg
std
fist
jmp
jo
mov
fst
idiv
ret
(bad)
lods
aas
push
lahf
cmp
arpl
cli
iret
inc
out
loopne
call
push
neg
dec
jnp
scas
jg
mov
jg
lahf
sti
mov
aas
test
jl
mov
aaa
jmp
in
mov
pop
(bad)
in
das
dec
(bad)
in
mov
fdivr
clc
outs
(bad)
cmp
ss
fcomip
jg
ret
adc
cld
jbe
jg
xchg
ret
enter
jmp
fcomp
xlat
cld
cmps
xchg
in
push
mov
jmp
inc
stc
imul
mov
jg
addr16
lods
call
mov
repnz
std
movs
lahf
std
mov
icebp
(bad)
in
sti
fldcw
mov
mov
popf
inc
shl
mov
(bad)
jg
idiv
dec
call
out
std
lods
jmp
movd
jmp
jecxz
lock
sbb
fbstp
(bad)
fcmovnu
hlt
sbb
mov
clc
lahf
inc
out
cli
fbld
neg
pop
arpl
xchg
fcomip
psubw
mov
jecxz
sar
mov
stc
int
retf
sti
ins
mov
(bad)
cmp
fwait
xchg
pop
(bad)
pop
std
jns
loopne
std
scas
(bad)
(bad)
in
idiv
jmp
add
(bad)
xlat
cld
mov
(bad)
jg
retf
call
imul
mov
aas
hlt
aas
(bad)
mov
cld
ss
aas
dec
dec
hlt
mov
out
lock
lds
mov
dec
jg
movsx
fidivr
mov
idiv
pushf
std
or
(bad)
std
xchg
jmp
mov
iret
repz
repnz
xchg
mov
iret
sti
std
(bad)
mov
ja
xchg
retf
sub
call
call
out
cli
jnp
mov
(bad)
hlt
stos
sub
std
cmp
clc
out
pop
stc
(bad)
inc
lahf
inc
mov
jg
out
cli
or
mov
cdq
out
iret
clc
ja
sub
sar
and
std
enter
psubd
repnz
(bad)
sti
call
push
cli
cmc
ja
in
push
call
hlt
jecxz
clc
dec
jbe
mov
cmc
(bad)
stc
or
cld
idiv
mov
jg
fwait
cld
sbb
(bad)
pop
(bad)
loop
hlt
lahf
add
outs
jmp
neg
adc
out
jmp
xor
mov
iret
mov
retf
pop
dec
jns
pop
cmp
imul
ja
mov
sti
fist
pop
idiv
std
xchg
push
outs
(bad)
out
std
sbb
repz
std
jns
div
shl
repnz
(bad)
adc
out
(bad)
cmps
dec
(bad)
xlat
dec
call
mov
(bad)
arpl
loopne
std
pushf
pushf
jmp
(bad)
test
cld
outs
inc
out
inc
jmp
(bad)
cld
jae
aad
repnz
mov
aad
sti
fwait
cld
outs
(bad)
in
aas
cli
cmps
cld
ja
xlat
jg
idiv
jg
cmp
lahf
inc
jg
lahf
jns
jmp
xor
(bad)
fidivr
stos
xlat
mov
cmc
jmp
arpl
aad
clc
cmp
inc
jg
(bad)
fwait
(bad)
es
das
sti
imul
dec
(bad)
jg
pop
(bad)
popa
xchg
addr16
sub
(bad)
call
ja
clc
fistp
out
cld
(bad)
(bad)
int
loopne
mov
outs
(bad)
jmp
sbb
pop
std
into
outs
pop
into
mov
dec
mov
cli
xchg
pop
pop
std
sbb
aaa
jg
mov
jg
fcomip
rol
(bad)
mov
(bad)
in
repz
(bad)
stc
pop
cli
ud0
sub
aam
call
aas
idiv
aas
sti
and
loop
iret
idiv
movs
aas
cmc
pop
(bad)
mov
iret
std
sbb
pop
lock
or
sti
setl
sbb
in
clc
sti
jge
arpl
push
inc
ins
std
mov
in
fnstsw
cmc
inc
outs
std
lahf
jg
mov
fucomip
(bad)
stos
push
repnz
std
ins
dec
mov
mov
iret
jg
pop
cld
inc
mov
dec
aaa
(bad)
jns
(bad)
outs
mov
jg
(bad)
in
icebp
addr16
sbb
pop
dec
not
jg
pop
(bad)
jmp
std
test
call
std
cmp
(bad)
fcomip
(bad)
push
inc
popa
jmp
cmp
cld
fwait
jo
(bad)
xchg
(bad)
out
cli
jne
push
std
jne
stc
pop
lock
std
jne
aam
cld
loop
jmp
sti
clc
cmp
jg
daa
cmp
movs
scas
inc
push
clc
pop
jle
xchg
jnp
cmps
xor
loop
mov
addr16
pop
imul
(bad)
out
(bad)
outs
dec
mov
das
aas
(bad)
(bad)
jbe
lea
aas
in
lahf
call
in
scas
(bad)
cmc
jle
pop
jg
das
clc
adc
fstp
lahf
(bad)
xchg
cmp
mov
stos
mov
mov
call
scas
dec
int
mov
repnz
lock
neg
dec
inc
call
aaa
dec
push
nop
pop
imul
cld
ins
jg
out
mov
std
stos
mov
stc
scas
(bad)
in
call
cld
dec
(bad)
mov
xchg
fucomip
pop
push
jle
mov
inc
in
mov
mov
add
pop
jg
popf
aaa
jg
mov
(bad)
cli
mov
das
clc
mov
push
inc
pop
test
jmp
daa
jg
outs
(bad)
(bad)
sar
mov
cld
inc
push
hlt
jmp
imul
inc
aas
loop
cld
in
pop
dec
fwait
mov
(bad)
std
mov
jecxz
aam
lock
sti
out
std
add
sti
ja
jecxz
in
(bad)
adc
jg
out
cmc
jmp
jno
and
in
call
imul
das
cmp
or
xchg
imul
cmps
cld
fcos
pop
cmc
(bad)
(bad)
rcr
sti
outs
fidivr
clc
pop
jmp
vpsrlq
out
push
inc
pop
aas
cmc
xchg
cld
sbb
jg
cdq
call
pop
std
fwait
jmp
(bad)
stc
fcomip
push
push
pushf
hlt
outs
and
sti
std
idiv
in
mov
jg
out
and
jg
cmps
(bad)
xor
ja
push
(bad)
cdq
aas
jne
shl
popf
jle
mov
(bad)
out
repz
stc
(bad)
(bad)
stc
aas
(bad)
ja
retf
jmp
(bad)
das
jmp
mov
frndint
cmps
xchg
in
jge
dec
mov
stc
(bad)
cli
xchg
lds
mul
mov
hlt
adc
sti
push
(bad)
std
jmp
sar
outs
cld
aas
mov
fstp
clc
into
jg
cmp
lahf
dec
mov
or
ret
mov
ret
neg
lock
jge
stc
outs
stc
push
dec
inc
jecxz
in
push
mov
dec
mov
(bad)
hlt
mov
xchg
push
mov
test
fsin
mov
call
imul
repnz
cld
stc
mov
inc
lahf
cli
pop
bound
in
das
cli
idiv
(bad)
(bad)
aaa
jns
cmp
or
outs
xor
pop
repnz
jl
stc
dec
iret
ja
jle
out
iret
fcomip
out
into
(bad)
cli
mov
(bad)
fstp
jns
(bad)
std
lahf
dec
jg
aad
sti
(bad)
xor
jg
das
das
push
jle
pop
mov
pop
mov
aas
inc
daa
jmp
scas
mov
push
jmp
pop
std
(bad)
sub
mov
sti
(bad)
cli
outs
jg
xlat
(bad)
fbstp
(bad)
(bad)
out
icebp
out
std
sub
aas
std
(bad)
sbb
fwait
dec
leave
pop
hlt
retf
ja
cld
xor
arpl
std
mov
(bad)
xlat
dec
sti
cdq
lahf
(bad)
pop
ds
das
(bad)
adc
dec
pop
sbb
hlt
jecxz
mov
(bad)
mov
mov
jg
fcomp
arpl
jmp
shr
rcr
outs
inc
jg
aas
test
jmp
aam
stc
dec
std
sub
sti
push
cld
and
aas
repz
std
loop
jmp
sti
fidivr
hlt
inc
std
mov
jmp
(bad)
out
jmp
stc
icebp
jg
inc
std
loop
cli
fild
(bad)
mov
in
jp
pop
cmp
das
(bad)
xchg
mov
dec
push
std
dec
aas
jmp
dec
mov
scas
(bad)
in
fbld
xlat
sub
cli
sti
(bad)
lods
xor
xor
outs
mov
mov
inc
adc
std
es
dec
sti
jnp
sti
hlt
out
mov
inc
imul
aas
icebp
in
aas
(bad)
outs
cli
cmc
inc
ja
in
(bad)
mov
mov
sub
push
lahf
cld
popa
mov
(bad)
(bad)
daa
mov
in
call
neg
jg
pop
div
std
jle
push
push
std
jecxz
aad
(bad)
(bad)
jmp
(bad)
fnstsw
icebp
addr16
imul
mov
out
jg
(bad)
fcomp
jg
outs
jno
(bad)
std
mov
cli
xor
jg
pop
call
jg
popf
mov
repz
jecxz
inc
sahf
cld
loop
div
(bad)
out
call
push
mov
jge
push
cld
and
mov
stc
stc
(bad)
out
std
retf
icebp
jg
repnz
cld
mov
cli
outs
dec
mov
das
(bad)
fnsave
xchg
mov
hlt
(bad)
mov
fucomp
std
imul
jg
sbb
jg
xchg
jle
(bad)
xchg
jg
(bad)
repnz
(bad)
pop
dec
ret
neg
sti
(bad)
sahf
std
mov
xchg
pushf
sbb
jg
iret
lahf
pop
(bad)
jnp
(bad)
aas
imul
movs
dec
(bad)
fdivr
test
std
imul
retf
fcomip
(bad)
xchg
(bad)
lds
iret
shr
xor
(bad)
movq
scas
cld
outs
dec
fucomip
pop
std
pop
(bad)
mov
arpl
push
dec
(bad)
dec
imul
(bad)
xchg
in
call
jle
cld
out
jle
aas
loopne
cli
or
lahf
(bad)
jecxz
stc
(bad)
jg
xor
jmp
mov
(bad)
clc
out
repnz
call
in
jle
mov
stos
jmp
(bad)
out
cli
sti
(bad)
fwait
push
aas
std
movq
cmp
sti
int
jmp
cli
dec
jg
pop
lock
jle
pop
cld
dec
(bad)
fcom
pop
(bad)
jne
aad
div
(bad)
mov
(bad)
out
neg
clc
adc
sti
(bad)
lahf
cld
scas
jle
(bad)
out
das
(bad)
mov
fnstsw
jmp
(bad)
push
push
cmc
xchg
jmp
das
(bad)
mov
outs
dec
pop
(bad)
repnz
out
cld
out
clc
rcr
(bad)
aas
mov
inc
das
jge
fstp
outs
cld
retf
std
out
mov
clc
std
jmp
(bad)
mov
mov
std
(bad)
fnstcw
pop
cld
xchg
leave
aas
mov
daa
leave
hlt
pop
sti
xchg
sar
cli
pop
test
ds
(bad)
mov
idiv
idiv
(bad)
out
(bad)
jle
adc
dec
push
push
in
(bad)
fdivr
(bad)
cld
push
movs
cwde
jle
lahf
(bad)
arpl
nop
push
outs
std
jne
lea
jmp
jmp
scas
fisub
das
mov
mov
push
jmp
pop
(bad)
pop
jg
outs
(bad)
idiv
gs
jg
pop
icebp
push
jmp
das
ins
(bad)
jle
jno
aas
stc
out
add
call
in
ja
cld
jae
jle
jg
out
std
or
xchg
loopne
jg
cli
iret
pop
jmp
jg
cld
loope
fnstcw
pop
ror
out
call
push
mov
mov
stc
fistp
sti
jg
outs
cld
jg
mov
retf
iret
(bad)
out
jg
jg
(bad)
xlat
jge
pop
mov
lahf
stc
push
idiv
jg
outs
(bad)
xlat
push
call
jmp
xchg
mov
push
inc
dec
shr
cld
in
(bad)
cld
xchg
ins
jg
out
sti
pop
ins
ror
addr16
jecxz
jg
lahf
cld
pop
std
retf
aad
sti
in
cmps
mov
paddd
hlt
sti
aas
cmc
sub
(bad)
jnp
idiv
idiv
sub
out
hlt
pop
into
(bad)
fdivr
imul
dec
scas
jle
cmps
inc
lods
ss
aad
out
test
dec
jg
fcomip
lahf
mov
clc
dec
jle
jg
aas
jl
xchg
lahf
cmps
shr
iret
stc
ds
gs
aaa
std
in
dec
jge
mov
aas
cld
(bad)
in
rep
clc
cmps
in
(bad)
(bad)
not
addr16
(bad)
out
(bad)
fldcw
cmp
cld
out
mov
inc
sar
jo
inc
push
leave
das
inc
mov
iret
jg
outs
pop
pop
dec
mov
cld
jae
pop
jne
xlat
call
retf
(bad)
cmp
add
aas
jecxz
scas
jg
(bad)
clc
jnp
push
jmp
retf
lahf
(bad)
cli
jg
mov
push
mov
mov
das
jg
mov
dec
(bad)
fmul
aas
cli
(bad)
mov
call
daa
out
mov
rcr
ret
aas
jecxz
clc
jnp
jg
pop
cmps
in
cli
xchg
repnz
out
inc
jg
(bad)
cmps
aas
stc
repnz
daa
jmp
leave
aas
call
mov
dec
scas
(bad)
xchg
(bad)
sti
(bad)
dec
mov
out
push
push
hlt
aas
ret
lahf
icebp
(bad)
std
fidivr
imul
idiv
iret
aas
stc
aaa
jle
pop
pusha
dec
sbb
cld
cmp
jne
pop
cld
inc
jg
out
std
aaa
std
jae
mov
xchg
fucomip
mov
dec
cld
outs
lahf
rcr
push
(bad)
inc
pop
das
(bad)
mov
idiv
fwait
jg
psubb
mov
jg
out
clc
aas
cld
out
out
(bad)
stc
out
jmp
mov
(bad)
xchg
jmp
xlat
cld
mov
dec
(bad)
fdiv
(bad)
cdq
mov
cld
aaa
jmp
xchg
aaa
jg
(bad)
stc
mov
lahf
stc
mov
mov
and
call
jg
popf
ja
fnstcw
hlt
(bad)
(bad)
(bad)
fisub
inc
retf
jmp
addr16
das
cli
jne
lea
scas
clc
(bad)
hlt
outs
std
pop
call
std
dec
iret
mov
(bad)
sbb
clc
fwait
jg
jg
pop
cli
pop
dec
(bad)
out
aas
clc
jmp
dec
bnd
or
cld
jle
cli
rol
repz
cmps
das
(bad)
cld
jg
(bad)
jbe
(bad)
jge
(bad)
mov
(bad)
fwait
in
dec
aas
(bad)
das
jge
dec
dec
aas
in
scas
stc
addr16
push
aas
stc
fwait
(bad)
call
(bad)
sahf
mov
dec
dec
cld
fwait
std
jnp
pop
cmc
retf
inc
aas
rep
jmp
mov
cld
push
(bad)
cmp
dec
jmp
jle
idiv
gs
cld
out
mov
repz
test
(bad)
std
out
inc
adc
fcomp
jg
cmc
mov
(bad)
in
xchg
(bad)
aas
cld
jae
mov
call
test
jg
jg
sbb
lahf
inc
dec
(bad)
stc
aas
cli
out
push
mov
jg
jg
cld
mov
mov
call
cli
test
cwde
(bad)
hlt
repz
dec
call
fisttp
hlt
sti
jg
out
(bad)
stc
jnp
inc
ja
sti
dec
jb
xchg
cld
loope
cli
pop
inc
in
fdivrp
(bad)
pop
(bad)
pop
sti
outs
call
aas
lock
std
xchg
leave
out
sti
idiv
mov
stos
call
cmps
jle
fild
mov
xchg
lds
pop
jae
fwait
push
loop
std
dec
(bad)
in
pop
in
(bad)
jnp
ret
outs
sti
push
scas
jmp
jmp
(bad)
out
(bad)
fdivr
out
inc
nop
mov
stc
idiv
mov
scas
cld
movs
sti
jg
add
daa
fs
mov
int
mov
jle
iret
std
pop
lahf
in
push
ud0
jg
push
(bad)
sahf
call
jecxz
mov
cmp
(bad)
(bad)
inc
call
(bad)
out
jne
jns
cmp
std
daa
jle
jmp
aad
out
(bad)
push
ud0
ret
loope
aas
cmc
(bad)
std
icebp
mov
cmc
das
cld
mov
jmp
lods
push
idiv
call
fistp
retf
jg
shr
pop
daa
mov
xlat
std
or
sub
cdq
pop
fdivr
cld
out
(bad)
clc
pop
mov
lock
push
mov
sbb
enter
mov
jmp
dec
(bad)
mov
xchg
cld
cmp
repz
pop
std
xchg
call
(bad)
stc
iret
cld
cmp
jg
jge
stos
(bad)
cld
aas
in
iret
jmp
(bad)
(bad)
mov
cli
out
cli
imul
sti
jg
out
(bad)
sti
(bad)
push
pop
mov
mov
mov
out
(bad)
jnp
mov
mov
clc
iret
(bad)
cmp
fistp
addr16
pop
aas
cmc
icebp
scas
jae
push
ins
std
xor
clc
aas
cmc
cmps
cld
jle
lock
jg
mov
jl
addr16
push
mov
jg
mov
scas
jg
(bad)
cld
dec
dec
mov
das
clc
pop
ds
jg
cmp
mov
jg
das
jle
(bad)
push
fdivrp
icebp
pop
cld
xchg
dec
mov
imul
pop
mov
aas
in
aas
stc
jne
(bad)
and
xchg
pop
jg
aas
hlt
pop
cmp
adc
inc
(bad)
fstp
push
(bad)
aas
push
jmp
shr
pop
cmp
xor
jmp
popf
add
mov
cld
push
cmc
pop
idiv
(bad)
cwde
(bad)
call
and
scas
dec
ud0
sbb
idiv
xor
(bad)
das
jle
aas
cmp
xlat
(bad)
xchg
stos
aas
addr16
mov
mov
jae
sti
std
jmp
xlat
jg
xrstor
push
clc
sbb
out
clc
cmc
pop
cld
hlt
aas
dec
jg
sahf
shufps
mov
js
daa
pushf
popf
std
jmp
sbb
call
call
jg
pop
hlt
mul
jnp
in
aas
clc
lahf
int3
(bad)
mov
idiv
fwait
mov
mov
aas
lock
push
jg
pop
clc
movs
(bad)
jmp
sti
adc
dec
jg
jg
das
cli
pop
cs
(bad)
std
ja
outs
dec
cmc
mov
iret
das
retf
jae
dec
jle
das
jg
push
pop
push
(bad)
loope
paddd
stos
fstp
repz
imul
(bad)
cli
mov
jg
sub
fidivr
jbe
clc
xlat
lahf
jmp
jg
fcomip
cli
(bad)
(bad)
mov
mov
int3
push
shl
jg
out
dec
adc
pop
jg
aas
nop
pop
je
outs
jmp
(bad)
cli
jg
mov
scas
jle
push
inc
cld
adc
scas
(bad)
jmp
retf
aas
sti
iret
clc
aas
jle
mov
add
stc
adc
(bad)
ss
xchg
sti
mov
rcr
out
int3
jg
pop
cli
pop
(bad)
lock
in
paddd
in
iret
pop
cmp
xchg
mov
pop
out
push
in
cmc
xchg
fdiv
repnz
jns
dec
cmp
repnz
pop
jg
pop
(bad)
xlat
call
fsin
out
imul
jg
out
(bad)
fistp
or
push
or
(bad)
sti
(bad)
aas
jns
mul
ja
inc
(bad)
fld
jg
push
xchg
cld
sahf
das
jle
jg
iret
call
cmc
mov
cmp
call
cmc
cmp
push
jg
fwait
ret
(bad)
(bad)
imul
mov
imul
jle
mov
jmp
div
leave
aas
cli
inc
std
inc
jg
pop
neg
sti
push
push
mov
fcomip
pop
cmp
fnstsw
mov
std
ins
jle
(bad)
mov
cli
icebp
vmovdqa
mov
ret
aas
repz
lahf
lock
cld
aaa
mov
jmp
xor
call
dec
mov
jg
test
leave
push
(bad)
std
push
pop
std
retf
jg
pop
js
jg
es
(bad)
sti
pop
es
jg
add
mov
(bad)
hlt
outs
xor
jmp
jge
scas
mov
js
stc
popf
mov
pop
aas
stc
pop
push
aas
(bad)
das
out
jl
out
cld
jae
loope
clc
idiv
(bad)
cmp
cld
mov
jg
lahf
not
sub
repz
(bad)
fcomip
aas
call
pop
sbb
push
das
stc
lahf
jle
mov
cmp
repz
jmp
mov
cld
fsubrp
pop
stc
iret
std
dec
jg
jb
mov
fdivrp
loopne
sti
paddd
cmps
jg
jg
cmc
idiv
aam
mov
pop
std
sar
retf
lahf
and
lahf
(bad)
jae
int3
das
(bad)
fcomp
out
pop
clc
sti
dec
aas
icebp
xchg
jl
(bad)
mov
mov
jg
xchg
sti
ja
lock
jmp
shl
aas
out
ja
das
and
cld
sbb
scas
stc
jg
sub
in
(bad)
cmps
addr16
jmp
jmp
xchg
(bad)
cli
pop
jg
mov
pop
icebp
jmp
adc
fcomp
(bad)
call
xchg
fist
mov
retf
aas
icebp
ja
xchg
out
mov
cld
mov
icebp
scas
repz
(bad)
jnp
fstp
xchg
mov
in
jg
(bad)
clc
outs
(bad)
(bad)
mov
mov
stos
pop
jecxz
call
(bad)
fcmovne
jle
jg
das
cld
gs
mov
(bad)
mov
fild
jle
(bad)
in
dec
inc
jg
dec
repnz
dec
ss
aas
mov
fucomip
mov
mov
pop
jno
ret
sti
pop
(bad)
mov
(bad)
and
pop
(bad)
cmp
add
xchg
push
cld
(bad)
xor
mov
icebp
hlt
cmps
(bad)
dec
push
ja
ja
mov
in
aas
repnz
(bad)
inc
cli
mov
repnz
cld
jmp
jge
iret
retf
(bad)
jmp
das
ud0
aas
push
xchg
aas
call
dec
cld
cmp
lahf
cli
pop
(bad)
sbb
pop
clc
(bad)
cld
xchg
mov
std
dec
mov
push
fstp
pop
neg
ror
lds
cmp
sub
imul
das
jg
mov
or
add
dec
push
into
(bad)
cld
icebp
jg
cmps
aam
pop
stc
std
out
dec
mov
sub
out
pop
mov
cld
xor
fstp
jmp
(bad)
mov
out
jg
iret
sti
(bad)
jle
jg
mov
mov
xchg
jg
out
icebp
cmp
stos
fbld
(bad)
scas
(bad)
mov
cmc
out
iret
vlddqu
sar
out
out
std
xchg
jmp
retf
lahf
jmp
cmp
(bad)
jae
mov
push
cld
aam
std
daa
(bad)
mov
call
cld
xchg
jg
mov
jg
out
dec
(bad)
cmp
into
scas
cmc
scas
(bad)
std
jg
icebp
(bad)
std
fistp
mov
cld
pop
stos
aas
in
iret
(bad)
out
(bad)
cld
jg
iret
stc
fcmovnu
out
cmps
jle
(bad)
cld
scas
sti
stos
jmp
(bad)
mov
out
(bad)
xor
(bad)
jmp
std
mov
pop
aas
icebp
xchg
int
in
cli
aaa
(bad)
fistp
cld
fstp
push
repnz
dec
sar
(bad)
mov
stc
out
push
xchg
lahf
jl
jecxz
out
(bad)
mov
dec
aas
cld
outs
(bad)
sti
(bad)
out
jg
idiv
pop
imul
(bad)
out
pop
std
push
jmp
dec
xchg
fistp
clc
xor
pop
std
mov
mov
pop
repnz
cld
leave
fistp
jg
inc
jg
scas
jmp
cli
pop
(bad)
hlt
aas
hlt
cli
pop
std
dec
jg
dec
(bad)
push
jnp
xchg
add
test
in
(bad)
aas
repnz
mov
sub
pusha
mov
sub
leave
xchg
mov
scas
icebp
scas
stc
(bad)
call
(bad)
aas
mov
dec
sub
in
jg
jg
pop
cmp
jl
xchg
push
xor
retf
mov
sar
stc
mov
jb
pushf
(bad)
cld
push
inc
mov
jle
call
cmp
mov
jnp
stc
inc
jmp
in
fwait
jg
push
ins
inc
stos
inc
jg
fcmovnu
in
sar
ud0
xor
pop
clc
pop
sar
fist
in
std
adc
fmul
retf
(bad)
les
les
js
addr16
cmps
rcr
in
aas
cmps
and
stc
cmps
(bad)
lock
call
aaa
sti
mov
repnz
sar
xchg
cmc
push
pop
sbb
adc
mov
(bad)
mov
fidivr
jno
sti
in
(bad)
mov
in
mov
push
popa
(bad)
mov
clc
out
cli
hlt
hlt
pop
(bad)
stos
(bad)
jecxz
jle
lahf
lock
fdivrp
jmp
jmp
fwait
(bad)
xchg
mov
out
(bad)
imul
(bad)
(bad)
stc
cmps
jmp
mov
stc
daa
fnstcw
cld
cmc
jg
rcr
pop
(bad)
pop
shl
popf
push
jg
aas
repz
call
jmp
repnz
leave
adc
push
iret
(bad)
scas
jg
sti
mov
mov
mov
std
pop
out
shl
push
mov
push
inc
(bad)
scas
clc
std
jle
aas
cld
paddd
jg
cli
icebp
mov
dec
mov
rcr
aam
icebp
idiv
sti
jg
stc
jg
or
mov
jmp
out
std
in
imul
repz
xchg
and
clc
out
stos
aas
(bad)
jnp
cld
scas
lahf
cmp
out
retf
aas
cli
das
dec
repz
cld
icebp
push
dec
dec
cld
pop
(bad)
jg
aas
hlt
lahf
ds
jmp
pop
std
into
in
jg
mov
hlt
addr16
std
sbb
mov
std
jmp
std
inc
jmp
jmp
out
(bad)
(bad)
rcr
jmp
mov
iret
std
mov
(bad)
out
inc
lahf
(bad)
ds
cwde
jle
leave
jg
jmp
in
push
std
int
fsubr
ins
lods
lods
adc
cmp
(bad)
pop
call
(bad)
loope
jl
xchg
leave
mov
push
cld
iret
aam
mov
xchg
pop
cld
loop
(bad)
lahf
clc
lahf
std
jmp
cmc
lahf
call
jmp
and
aas
std
mov
jg
pop
hlt
xchg
jle
sti
outs
and
retf
shr
cli
lahf
movs
xchg
jmp
imul
xchg
jle
out
(bad)
jmp
call
jg
pop
repnz
ror
cwde
fisttp
xor
and
(bad)
mov
cli
ins
mov
(bad)
stos
outs
shr
movd
mov
icebp
fld
jnp
outs
cmps
clc
in
ffreep
outs
xchg
in
scas
std
cmp
outs
dec
or
in
arpl
mov
dec
mov
jg
lods
sbb
sahf
push
(bad)
jmp
sbb
outs
test
std
mov
xchg
xchg
out
(bad)
es
mov
inc
sbb
jg
aas
cmp
call
(bad)
fstp
xor
cmc
mov
ja
jae
ret
mov
or
out
idiv
lods
mov
cmps
cld
mov
std
das
cld
inc
jg
lahf
pop
std
mov
div
sar
cld
pop
std
pop
mov
jg
push
cld
(bad)
int
jmp
std
ud0
inc
std
loope
xchg
(bad)
mov
out
jle
(bad)
push
(bad)
jle
fcomip
aas
mov
das
rcr
xlat
ds
call
int3
push
psubd
dec
dec
adc
aas
hlt
dec
jg
outs
jle
(bad)
xchg
leave
mov
mov
call
retf
jg
out
out
std
fdiv
push
pop
call
pop
mul
cld
or
cld
cmps
jg
xchg
in
xchg
out
(bad)
jmp
out
sti
test
fist
imul
lahf
lock
cld
or
pop
push
lahf
(bad)
int
mov
inc
mov
icebp
mov
sar
xchg
repnz
adc
cmp
stc
push
popf
fucomip
repnz
(bad)
sar
pop
mov
lods
jmp
out
clc
inc
push
std
es
cli
aad
ds
sti
push
icebp
dec
cld
fnstcw
call
cmp
pop
(bad)
mov
jg
add
stc
aas
sti
pop
aas
std
aaa
jle
outs
std
sbb
retf
stc
dec
repnz
sbb
stc
ret
(bad)
mov
es
out
(bad)
daa
(bad)
jg
(bad)
push
sub
ret
(bad)
jmp
stc
cmps
(bad)
mov
cld
ud0
fisubr
jecxz
shl
cld
pop
sar
std
sti
idiv
sbb
(bad)
pop
pop
lods
(bad)
mov
mov
cli
jecxz
call
jmp
in
aaa
cdq
(bad)
push
(bad)
dec
jmp
(bad)
jmp
jmp
pop
in
push
jg
std
mov
(bad)
push
mov
in
sbb
mov
cmps
mov
aas
std
icebp
xchg
mov
push
mul
(bad)
inc
and
dec
aad
hlt
mov
outs
pop
inc
cli
int
aas
lock
jmp
dec
jmp
std
gs
lahf
outs
(bad)
mov
(bad)
dec
dec
jle
pop
out
(bad)
out
(bad)
(bad)
mov
(bad)
(bad)
cdq
pop
in
in
mov
clc
mov
clc
dec
(bad)
xchg
(bad)
jg
icebp
stos
mov
std
pop
(bad)
(bad)
lods
pop
cli
imul
mov
xlat
mov
idiv
std
daa
mov
(bad)
in
mov
fdivr
dec
inc
pop
not
in
adc
idiv
dec
jmp
pop
repnz
adc
out
repz
jl
std
das
jg
pop
(bad)
leave
into
in
clc
test
stc
fcomip
idiv
dec
push
pop
mul
das
out
dec
mov
(bad)
cmc
aas
dec
push
call
std
lods
jle
jg
(bad)
(bad)
jmp
mov
fstp
iret
cld
pop
jg
das
clc
retf
(bad)
mov
stos
jg
cli
icebp
pop
(bad)
loop
mov
lods
sub
push
push
pop
dec
adc
test
(bad)
xlat
aas
call
dec
cmp
jg
outs
cmc
mov
cld
inc
jg
(bad)
cmp
popf
(bad)
cmps
mov
(bad)
(bad)
(bad)
das
stc
mov
jmp
fdivrp
or
fstp
out
neg
std
ja
les
dec
retf
sub
(bad)
(bad)
mov
add
ins
std
push
outs
jg
fnstsw
(bad)
loopne
test
xchg
icebp
pop
repnz
hlt
out
outs
xchg
aas
in
mov
call
(bad)
fcomp
mov
sar
aad
icebp
cmps
mov
repnz
jmp
(bad)
mov
(bad)
inc
jle
(bad)
mov
push
ss
add
idiv
jg
cmc
outs
test
xlat
jle
icebp
outs
cmp
pop
cld
out
std
mov
clc
cmc
(bad)
jmp
sar
cmc
jecxz
sti
ja
in
mov
mov
jle
mov
(bad)
std
loopne
ja
pushf
jmp
das
jmp
aas
cmc
mov
idiv
pop
push
pushf
adc
paddb
jg
std
fnstsw
into
das
in
jmp
std
jg
jg
pop
(bad)
adc
cli
jmp
cmc
aaa
push
push
idiv
out
(bad)
sti
sub
(bad)
out
neg
shl
sub
jnp
mov
cli
xchg
pushf
std
fnstcw
cli
sti
jg
fistp
lahf
std
ins
dec
cli
in
neg
cld
addr16
(bad)
in
(bad)
mov
cld
in
push
iret
cld
mov
(bad)
(bad)
push
shl
(bad)
xchg
cld
test
hlt
test
aas
stc
ja
out
call
(bad)
icebp
pop
ja
loop
call
push
pop
hlt
outs
call
call
rcr
sti
or
jmp
(bad)
cmp
leave
iret
cld
sar
das
(bad)
and
scas
jle
pop
test
fstp
cld
adc
fcomip
inc
mov
pop
jmp
sti
mov
xchg
jg
dec
cli
daa
jg
aas
out
outs
std
xlat
jle
pop
sti
mov
idiv
out
jg
(bad)
pop
std
pop
dec
lock
jp
out
dec
dec
pop
cli
out
(bad)
ror
jg
pop
jmp
pop
sti
jecxz
mov
out
loope
aas
push
cld
fnstsw
push
std
(bad)
push
into
(bad)
clc
dec
cld
test
sti
iret
jge
pop
das
push
(bad)
aas
push
stos
out
js
adc
push
cdq
movs
fcomip
xchg
aas
icebp
aaa
sti
(bad)
out
out
call
adc
or
jp
paddb
out
pop
call
retf
jmp
icebp
lock
cmc
dec
mov
(bad)
retf
jnp
aas
jmp
std
(bad)
(bad)
fistp
cld
lds
inc
cld
imul
cmp
cmc
fwait
addr16
in
cld
je
idiv
aad
jmp
stc
sbb
jne
mov
mov
in
cli
inc
(bad)
out
mov
mov
xlat
jle
(bad)
cli
imul
std
cmp
sti
jnp
jecxz
je
lock
iret
jle
xlat
clc
xor
dec
pop
(bad)
in
repz
aad
cld
fnstcw
or
mov
(bad)
fcomip
outs
cld
imul
jg
addr16
inc
jle
std
jmp
test
mov
cwde
(bad)
repz
rep
std
ins
(bad)
aam
repnz
stc
jnp
ret
call
inc
rcl
repnz
jg
jg
ja
jnp
push
scas
cli
(bad)
(bad)
ds
in
jle
mov
(bad)
stos
mov
sub
dec
(bad)
cmp
sti
(bad)
mov
inc
sbb
(bad)
jmp
dec
inc
leave
(bad)
out
mov
(bad)
(bad)
jg
addr16
hlt
(bad)
cld
retf
(bad)
fdivr
jg
mov
out
call
stos
aas
cmc
lahf
cld
push
call
mov
mov
jecxz
in
out
(bad)
js
jmp
xlat
pop
div
(bad)
fcos
clc
in
das
sti
arpl
idiv
stc
pop
(bad)
scas
dec
call
fcomip
push
std
add
(bad)
jmp
jg
pop
repz
(bad)
repnz
(bad)
std
jg
scas
cld
ret
mov
cmp
psubd
imul
lods
ds
mov
mov
pop
(bad)
daa
(bad)
mov
call
clc
daa
cld
fcomp
jb
push
std
and
call
jmp
(bad)
mov
mov
(bad)
pop
stc
iret
dec
lahf
(bad)
and
(bad)
sub
out
stc
xchg
jle
lahf
cli
sub
pop
sbb
imul
mul
(bad)
aas
icebp
out
(bad)
aaa
push
outs
lock
jmp
xor
or
movs
aaa
loopne
jl
fdivrp
sub
jbe
mov
jg
mov
stc
outs
sub
xor
into
scas
repz
std
inc
mov
mov
pop
(bad)
pop
mov
jmp
stc
fstp
(bad)
aas
std
aas
std
xchg
(bad)
ins
stc
pop
dec
movq
call
inc
jge
pop
mov
out
std
scas
mov
(bad)
addr16
aam
das
cld
jnp
mov
pusha
call
shr
cld
in
cld
scas
push
fdivrp
idiv
cld
push
aas
dec
scas
aam
std
hlt
lds
mov
in
mov
mov
dec
stc
sbb
loop
std
(bad)
fdivr
jl
(bad)
mov
(bad)
cs
fcomip
pop
adc
(bad)
repz
or
jle
jg
jnp
dec
xchg
out
mov
out
xlat
cli
mov
jb
jg
outs
xor
jae
dec
jg
xlat
stc
ror
std
gs
fstp
out
(bad)
pop
outs
dec
stc
pop
jb
imul
ja
pushf
lahf
cli
adc
jg
mov
inc
mov
dec
dec
hlt
mov
(bad)
lods
(bad)
in
aas
cmp
jmp
cmc
pop
dec
test
out
pop
dec
jg
scas
(bad)
pop
xchg
mov
(bad)
ficomp
mov
imul
ins
shl
pop
pop
mov
loopne
cmps
xor
pop
inc
or
cld
scas
mov
jg
mov
popf
jle
jle
cmc
or
cmp
jmp
lods
pop
(bad)
jge
loopne
clc
addr16
nop
jg
iret
(bad)
mov
dec
mov
ins
(bad)
std
jg
in
das
(bad)
xor
(bad)
hlt
jmp
mov
(bad)
in
cld
pop
jecxz
add
push
dec
jmp
leave
lahf
inc
or
mov
jp
cli
jae
jmp
neg
xlat
push
mov
jle
mov
mov
std
pop
jbe
(bad)
jmp
stc
loop
outs
repz
in
(bad)
lock
ror
out
stc
jg
jle
retf
pop
repz
aas
idiv
sar
loop
jg
in
jg
iret
dec
retf
dec
ja
std
cli
jg
mov
jg
cmp
mul
out
pop
call
inc
pop
(bad)
call
cli
out
dec
fwait
mov
jg
pop
(bad)
mov
cld
ss
cli
jg
div
jl
dec
jle
jns
(bad)
pop
jle
dec
cmp
ja
pop
call
inc
out
std
mov
in
mul
pop
(bad)
sub
out
mov
call
pop
xchg
pop
neg
cld
aaa
inc
jg
mov
out
std
xchg
jg
xchg
mov
dec
dec
jl
imul
jg
pop
xor
xchg
jg
aaa
cld
jae
icebp
clc
out
and
xor
repz
sti
pop
sti
pop
dec
jg
jnp
(bad)
mov
jle
out
inc
(bad)
cld
pop
(bad)
cli
pop
call
(bad)
ficomp
idiv
xchg
aas
icebp
push
(bad)
in
push
out
idiv
jmp
popf
aas
mov
popf
(bad)
stos
lahf
shl
out
(bad)
nop
xchg
(bad)
call
paddd
mov
outs
cld
aad
cli
idiv
cmp
push
jl
jmp
std
jg
idiv
jg
out
icebp
sbb
xlat
cmps
mov
stos
jg
push
dec
cli
mov
(bad)
ds
icebp
arpl
hlt
fistp
cmc
sbb
sbb
loopne
dec
out
cmp
mov
jg
outs
(bad)
out
(bad)
fstp
outs
(bad)
out
xor
sub
in
cld
push
(bad)
test
dec
or
call
cld
sub
pushf
jg
int
cli
xchg
fwait
outs
jg
cld
jg
and
mov
rcr
fcomip
iret
cld
in
out
cld
mov
aas
repz
jg
daa
call
jp
inc
jmp
fcomip
fst
(bad)
jnp
into
jmp
arpl
jmp
cli
jmp
out
iret
(bad)
adc
mov
pop
stc
sbb
jmp
add
mov
scas
clc
mov
pop
rol
sar
pop
cld
xor
dec
(bad)
cmps
mov
aas
(bad)
gs
in
out
(bad)
in
inc
ror
(bad)
hlt
in
out
imul
std
(bad)
(bad)
jmp
nop
adc
imul
out
jg
mov
xlat
call
call
ret
lahf
cmc
(bad)
out
ds
jnp
xchg
(bad)
sti
out
std
jmp
clc
lock
or
fnstsw
dec
add
mov
daa
push
push
push
loope
cmp
pop
jg
(bad)
aaa
inc
movs
or
pushf
mov
mov
out
mov
scas
jge
pop
popf
std
xchg
pop
xchg
push
loope
(bad)
aas
stc
sti
jg
aas
std
pop
shl
jg
lahf
repnz
cld
in
in
outs
std
dec
(bad)
aad
stc
iret
std
pop
inc
mov
repnz
lahf
dec
jmp
jg
cmp
inc
(bad)
outs
std
and
sub
xchg
or
(bad)
mov
xchg
(bad)
(bad)
in
jle
(bad)
call
inc
pop
jle
(bad)
out
out
aas
jns
sbb
xchg
mov
dec
push
dec
mov
std
(bad)
idiv
dec
call
pop
cld
in
sar
pop
(bad)
mov
cmps
pop
push
test
fistp
mov
addr16
std
xor
jg
pop
sti
adc
shl
ret
jg
clc
pop
cld
loopne
lahf
push
sbb
cmps
std
popf
jg
out
stc
out
mov
repnz
aaa
enter
aas
inc
jle
aaa
std
jne
daa
jb
mov
lock
stc
sbb
(bad)
in
iret
clc
(bad)
jle
mov
sti
icebp
(bad)
cld
mov
mov
hlt
scas
fdivr
pop
push
pop
std
fwait
jg
pop
hlt
(bad)
(bad)
idiv
repz
out
sti
and
idiv
stos
pop
jmp
mov
inc
dec
aas
cld
out
jnp
cli
sub
cmp
or
xor
jle
(bad)
jnp
call
idiv
in
xlat
clc
jmp
jecxz
mov
pop
cld
hlt
fcomip
imul
pop
movs
fistp
pop
cld
fistp
(bad)
cli
pop
sti
jnp
std
jnp
rol
(bad)
std
jg
scas
dec
imul
dec
push
scas
stc
iret
cs
mov
(bad)
adc
lods
mov
mov
movs
mov
int3
mov
mov
jl
mov
cld
aaa
and
ds
mov
pop
jmp
mov
aas
in
aas
cmp
jecxz
mov
mov
mov
cld
jnp
mov
lahf
jge
(bad)
(bad)
(bad)
cli
ja
(bad)
(bad)
stc
adc
sar
clc
iret
cld
rcl
lods
(bad)
jmp
in
pop
ins
jmp
rcr
cli
scas
sahf
shl
adc
(bad)
repz
mov
jg
(bad)
(bad)
scas
mov
sub
fs
sar
jg
mov
inc
cmp
movsx
jg
mov
stos
lahf
jl
jg
sbb
fdivr
idiv
out
jle
lahf
cld
pop
jle
(bad)
mov
stos
div
jg
inc
(bad)
out
neg
jg
das
sti
dec
call
imul
aaa
cld
sar
mov
call
test
(bad)
fdivr
adc
(bad)
push
mov
mov
jg
outs
inc
ds
icebp
imul
jg
(bad)
outs
clc
cmps
(bad)
fnstsw
idiv
scas
aas
in
jp
mov
jmp
mov
pop
sti
mov
jg
lahf
cld
add
sahf
movs
fldenv
push
mov
mov
out
call
sbb
jge
and
sbb
(bad)
inc
jg
in
rcr
div
iret
and
out
mov
jle
(bad)
fisttp
sub
jg
outs
stc
add
xor
scas
cld
mov
repz
push
(bad)
in
movs
adc
(bad)
xchg
push
stos
xlat
jg
out
jne
outs
pop
(bad)
cmp
mov
hlt
retf
aas
lea
lods
std
mov
outs
clc
xlat
(bad)
mov
cld
das
dec
cmp
lahf
icebp
pop
pop
ds
jmp
stc
add
dec
sbb
out
(bad)
das
jle
pop
icebp
fwait
std
call
imul
std
push
jg
hlt
into
out
aas
jle
cmp
xchg
in
cli
ret
mov
ror
sbb
mov
dec
dec
cmp
std
pop
(bad)
sar
aam
sti
out
jg
mov
jg
out
mov
stos
out
dec
jg
mov
iret
in
loope
cmps
push
out
jle
cli
stc
(bad)
cld
add
xchg
aas
out
stc
popf
jle
mov
(bad)
popf
push
jg
sar
mov
out
(bad)
cmp
sar
(bad)
and
std
test
push
push
cld
loopne
jmp
call
push
xlat
dec
pop
std
stos
inc
loop
(bad)
mov
jmp
std
(bad)
push
mov
stc
pop
mov
scas
cld
das
(bad)
mov
jg
arpl
(bad)
loop
pop
clc
lahf
inc
fistp
lahf
std
call
xlat
mov
xchg
(bad)
jmp
call
std
outs
std
inc
jg
pop
jo
mov
std
mov
test
jmp
jecxz
std
pop
fild
jmp
std
sbb
out
(bad)
jecxz
or
adc
sbb
(bad)
(bad)
(bad)
(bad)
mov
iret
(bad)
scas
(bad)
(bad)
aas
std
jmp
lea
paddb
sbb
xchg
stos
(bad)
idiv
(bad)
(bad)
lods
aas
mov
call
scas
icebp
(bad)
bound
std
(bad)
(bad)
movs
jg
mov
inc
pop
jg
outs
repz
jmp
rcr
jge
int
hlt
das
cmp
xor
jns
adc
mov
(bad)
pop
jmp
aas
cli
addr16
neg
out
(bad)
imul
jg
stc
pop
std
inc
cld
inc
dec
push
mov
ins
(bad)
mov
call
cld
inc
and
dec
inc
je
stos
(bad)
iret
cld
movq
dec
shr
dec
cld
imul
jnp
cwde
movs
cmc
(bad)
cmp
xchg
jle
(bad)
scas
mov
out
outs
call
cmp
(bad)
out
std
inc
pop
(bad)
scas
push
out
ds
adc
stc
out
(bad)
in
stc
out
dec
jmp
(bad)
mov
fdivr
sbb
or
outs
sti
mov
loopne
cli
pop
cli
sti
inc
cld
lds
cld
stos
in
push
cld
dec
mov
dec
mov
lds
lds
test
jg
idiv
(bad)
fstp
call
sti
icebp
push
or
mov
cwde
std
xor
adc
bnd
stos
sub
iret
sahf
das
pop
push
pop
sti
in
icebp
(bad)
std
jg
fpatan
jg
sub
mov
daa
(bad)
mov
(bad)
out
and
inc
mov
(bad)
push
pop
js
pusha
adc
(bad)
out
fdivrp
sti
xlat
(bad)
cld
jg
xchg
cli
inc
out
call
std
clc
(bad)
push
cmp
jle
fcomip
das
cmps
sub
jmp
je
sti
lahf
push
cld
into
outs
aas
std
jge
scas
jg
test
pop
dec
sahf
inc
outs
(bad)
mov
dec
shl
sti
cmps
fdivr
out
das
push
sar
cli
leave
scas
stc
paddw
iret
into
dec
clc
out
(bad)
fstp
jg
push
std
jne
repz
(bad)
mov
aas
hlt
idiv
retf
jg
out
or
hlt
mov
pop
mov
mov
jle
jmp
cld
(bad)
mov
shr
hlt
(bad)
mov
xchg
mov
(bad)
(bad)
mov
mov
stc
mov
in
cld
outs
jg
pop
cmp
xchg
inc
jg
(bad)
loop
repz
repz
xlat
jns
out
mov
aas
sti
xchg
jle
pop
jmp
cli
jge
std
test
loope
(bad)
scas
inc
call
icebp
fwait
dec
jg
aas
repnz
cmp
jge
xchg
mov
(bad)
jg
das
idiv
dec
jb
(bad)
stc
aas
in
(bad)
jnp
enter
scas
loopne
repnz
sti
das
(bad)
xchg
sti
mov
out
jmp
cld
out
lock
jmp
cmc
(bad)
jmp
movs
pop
clc
mov
jl
jmp
sahf
(bad)
xor
leave
in
pop
cld
idiv
(bad)
stc
(bad)
ins
jmp
pop
clc
xchg
(bad)
(bad)
in
(bad)
out
cld
or
mov
cmp
imul
repnz
sti
mov
jmp
pop
(bad)
xor
test
stc
std
(bad)
mov
popf
mov
jmp
sti
xchg
lahf
dec
std
jecxz
jg
mov
fnstcw
cld
sar
jmp
out
(bad)
mov
(bad)
sar
outs
push
inc
fsubrp
repnz
sbb
fadd
mov
scas
cld
jge
sar
xlat
(bad)
adc
leave
lahf
cli
aaa
(bad)
pop
mov
cld
xchg
jmp
pop
cmc
cmps
in
and
cmc
idiv
sahf
push
ja
enter
rcr
push
xchg
sti
sub
cmp
cli
add
call
(bad)
aas
(bad)
in
(bad)
pop
stc
mov
(bad)
imul
push
push
mov
std
push
aas
jne
std
pop
mov
xchg
pushf
xchg
in
pop
jg
dec
jl
cli
test
(bad)
and
push
xchg
add
jmp
loope
stc
dec
cs
(bad)
mov
repz
(bad)
out
cli
in
outs
cli
(bad)
outs
call
fcomip
sbb
stc
paddd
addr16
repnz
jg
aas
std
out
scas
(bad)
repz
xchg
inc
jg
pop
lock
dec
aas
mov
std
imul
out
sti
iret
(bad)
fldcw
jmp
pop
stc
retf
jg
(bad)
std
mov
aas
cli
xlat
std
jmp
cmp
(bad)
fwait
push
pop
mov
jnp
imul
jmp
pop
repnz
jle
mov
std
adc
repnz
mov
clc
iret
jmp
pop
dec
clc
mov
mov
pop
inc
aas
imul
jg
push
dec
cmps
jmp
stc
xor
sub
cld
out
jmp
rcl
call
xchg
cld
mov
lods
jg
fucomp
mov
arpl
ret
(bad)
cld
cmps
mov
dec
jmp
jmp
sub
out
jmp
mov
mov
repz
clc
add
idiv
push
out
(bad)
test
xchg
jg
cmc
lahf
xor
sar
scas
(bad)
(bad)
std
push
jle
aas
lock
dec
aad
(bad)
sub
sti
pop
std
jge
sub
stc
xor
lds
repnz
shr
jmp
cmps
mov
lahf
cld
push
jg
out
repnz
cld
out
jg
mov
(bad)
inc
std
aas
stc
das
push
jne
lahf
sbb
call
dec
sti
cmp
inc
leave
jg
mov
stc
movs
lahf
cld
inc
jg
pop
inc
dec
cli
scas
not
fnstcw
imul
(bad)
xlat
push
into
popf
push
mov
fucomip
bsf
sub
ja
not
in
(bad)
cli
xchg
(bad)
imul
cmc
pop
jg
scas
std
mov
out
cmc
pop
(bad)
idiv
cmc
pop
pop
cld
int
jmp
inc
fcomip
scas
cld
cmp
push
jg
(bad)
clc
test
in
cli
pop
cld
mov
icebp
(bad)
stc
cmc
pop
jmp
jg
bnd
dec
rcl
daa
out
jl
ud0
(bad)
push
(bad)
popf
push
xor
test
int
mov
pop
inc
mov
jle
aas
stc
scas
pop
pop
cld
(bad)
mov
push
es
lahf
sti
sub
imul
(bad)
mov
icebp
fwait
jmp
loopne
cmc
pop
inc
push
outs
adc
(bad)
mov
cmps
jg
dec
(bad)
jmp
aas
sti
repnz
cld
push
jle
ja
daa
in
lock
xlat
push
mov
push
daa
jle
out
cld
or
aad
cmc
daa
cld
aaa
xchg
push
dec
out
sti
(bad)
inc
(bad)
fwait
jg
mov
jg
mov
aad
(bad)
(bad)
gs
fnstenv
jg
mov
neg
out
pop
clc
std
jle
mov
inc
daa
(bad)
cld
mov
scas
mov
outs
cld
mov
rcl
sbb
jg
lahf
stc
stos
jg
fcomip
aas
std
or
and
popa
jle
pop
clc
ja
push
das
imul
cld
push
jg
jge
outs
cld
sub
test
jmp
(bad)
mov
(bad)
jmp
stc
in
lahf
call
aam
cli
scas
clc
xlat
jle
repz
inc
aas
sti
fistp
pop
std
addr16
das
dec
stc
or
cmp
sbb
shr
(bad)
(bad)
mov
aas
std
pop
(bad)
jge
pop
jmp
mov
aas
(bad)
das
dec
sbb
bound
mov
mov
movs
fucomip
(bad)
(bad)
and
push
jg
mov
jle
mov
neg
sahf
cld
fwait
jg
jns
adc
jl
sar
arpl
daa
call
repnz
sti
lods
repz
dec
jne
pop
jmp
dec
jg
ja
cmp
jb
idiv
aad
clc
pop
(bad)
loop
mov
idiv
jmp
call
jecxz
cld
loope
retf
cli
ja
cmp
mov
clc
jnp
pop
(bad)
xchg
inc
(bad)
cld
das
push
or
mov
(bad)
in
xlat
clc
xchg
(bad)
cdq
(bad)
mov
jg
aaa
std
lahf
(bad)
fidivr
xlat
(bad)
fwait
jg
pop
icebp
das
cld
aaa
lahf
call
repz
repnz
stc
cwde
(bad)
std
add
(bad)
jmp
call
aaa
mov
icebp
(bad)
jns
mov
out
pop
stc
xchg
dec
lds
(bad)
std
imul
idiv
(bad)
das
(bad)
daa
(bad)
xchg
(bad)
jl
mov
sub
jg
ret
iret
jle
mov
std
aas
jmp
aas
push
mov
inc
xchg
xchg
fwait
mov
paddd
jg
pop
call
push
(bad)
clc
xchg
(bad)
popf
aad
cmp
sti
mov
cmp
fsubp
aaa
stc
mov
js
jmp
loopne
inc
mov
mov
mov
call
pop
(bad)
loop
outs
idiv
idiv
(bad)
jmp
in
(bad)
cli
das
cli
mov
out
mov
xor
mov
repz
(bad)
out
outs
mov
lds
(bad)
lods
push
cld
icebp
cmp
outs
repnz
mov
lock
lahf
jle
mov
das
std
jecxz
add
popf
push
lahf
jl
cmp
sahf
lahf
std
les
cli
sti
cld
aad
clc
scas
jne
iret
(bad)
icebp
mov
dec
(bad)
lock
lahf
clc
scas
inc
cli
mov
call
lahf
(bad)
aas
call
fnstsw
in
pop
stc
loopne
push
repz
push
pop
neg
mov
scas
out
jle
cli
adc
outs
clc
stos
(bad)
in
clc
jmp
push
push
pop
test
repnz
(bad)
pop
lock
pop
cld
mov
jg
xchg
(bad)
push
pop
mov
jg
(bad)
std
jg
mov
jg
outs
inc
call
fstp
repz
mov
int3
aam
hlt
ja
add
jg
dec
test
sti
aad
mov
repz
(bad)
scas
cmc
fwait
std
xlat
pop
frstor
(bad)
outs
mov
mov
xor
retf
jle
cli
in
add
sub
clc
in
push
and
sti
jecxz
(bad)
out
(bad)
sti
inc
in
cmp
add
jo
add
mov
add
add
add
in
mov
xchg
and
jnp
dec
cmc
dec
xlat
loopne
mov
and
nop
inc
adc
ror
imul
retf
gs
pushw
inc
int3
in
popf
mov
mov
mov
dec
daa
neg
(bad)
aas
pop
add
dec
fcmove
sahf
and
jle
pop
aas
and
fdivrp
mov
lea
jle
dec
cli
xor
xlat
clc
xor
(bad)
std
jg
sbb
enter
iret
dec
iret
inc
dec
jle
mov
(bad)
mov
sti
out
xlat
mov
iret
jmp
scas
jmp
pop
cs
ss
in
mov
jge
in
je
int
icebp
outs
cld
sbb
mov
das
std
cmps
mov
push
fbstp
jmp
popf
pop
fwait
jle
fdivr
std
or
jg
ja
lock
in
jle
cli
stc
cmp
popf
fisttp
imul
aas
jg
(bad)
stc
stos
cwde
into
sbb
jns
cli
imul
mov
loop
sti
xor
out
clc
scas
sbb
inc
jmp
mov
rcr
cmp
fnstcw
mov
std
call
sbb
jle
div
xlat
pop
std
pop
dec
mov
mov
xchg
fcomip
xlat
xor
cdq
pop
std
mov
ja
xor
lahf
mov
mov
inc
jg
jg
jno
jg
xchg
mov
jns
fdivrp
stc
xor
push
sti
jmp
mov
repz
clc
add
fisttp
aas
jg
mov
mov
xlat
loope
in
xchg
(bad)
sbb
addr16
fwait
std
sbb
loopne
sbb
out
hlt
imul
jnp
out
dec
call
dec
mov
jecxz
(bad)
cmc
icebp
loop
leave
mov
xor
sbb
and
push
push
fsubr
imul
mov
cmps
sahf
shr
dec
adc
mov
jns
push
ret
xchg
loop
mov
cld
sbb
lock
aas
out
mov
icebp
(bad)
inc
mov
std
pop
std
outs
iret
(bad)
call
or
notrack
(bad)
outs
mov
movs
das
jle
daa
jmp
cld
(bad)
std
popf
jle
fisttp
ss
cld
lahf
cld
sbb
rcl
jg
lahf
sti
imul
push
(bad)
jge
dec
cld
(bad)
je
aas
cmp
aas
xchg
fdivrp
neg
cli
(bad)
std
data16
call
jl
adc
outs
dec
iret
(bad)
adc
jle
jg
xlat
(bad)
cmps
jle
out
std
fdivrp
sub
ficomp
stc
neg
cld
(bad)
fidiv
jmp
rcr
sub
popf
fisttp
(bad)
cld
ja
stc
mov
jg
xor
pop
cli
dec
push
inc
jg
ja
cmp
ud0
xlat
std
pop
outs
std
fwait
ror
sbb
fstp
cld
hlt
xlat
xchg
dec
jg
sti
jmp
lea
dec
shr
ja
stc
scas
sub
cmp
mov
jg
stc
sbb
(bad)
fistp
jge
jo
test
sub
movs
cmp
test
sub
cmps
sbb
std
(bad)
cmps
(bad)
mov
(bad)
xchg
call
(bad)
cli
jg
(bad)
neg
dec
outs
adc
add
fld
std
fstp
outs
cld
sbb
iret
movs
mov
jmp
loopne
mov
stc
ins
push
loope
pop
(bad)
cli
jnp
sar
aas
enter
pop
mov
(bad)
call
inc
inc
fsub
mov
call
test
ds
outs
jg
cli
loop
mov
mov
hlt
repz
stc
add
cmp
jle
ja
mov
sub
cli
xlat
sti
pop
xor
jmp
push
pop
clc
mov
fist
(bad)
arpl
mov
outs
or
or
fdivr
daa
jle
jg
mov
aas
push
jle
sahf
mov
cld
pop
cmp
loop
dec
jmp
mov
clc
rep
xchg
pop
(bad)
cld
adc
iret
mov
or
(bad)
outs
mov
out
nop
jg
jg
cmps
test
jg
psubq
jbe
loope
inc
pop
clc
stc
cld
(bad)
jmp
clc
xor
mov
or
(bad)
std
outs
sub
in
(bad)
dec
imul
ret
call
scas
lods
arpl
and
sti
xchg
jmp
pop
xchg
daa
jbe
fstp
pop
idiv
and
(bad)
cmp
jmp
pop
sti
pandn
push
mov
push
outs
std
jmp
test
hlt
jg
sub
jmp
retf
call
mov
sbb
test
mov
out
loop
stc
out
add
leave
jg
cs
(bad)
cli
mov
cmp
push
aaa
sti
arpl
(bad)
(bad)
sti
pop
cli
mov
loopne
outs
cld
sub
fdivr
push
(bad)
fdivr
out
dec
jg
inc
clc
jmp
mov
icebp
fisttp
cmps
leave
add
or
cwde
(bad)
fdivr
add
xor
cwde
in
mov
sahf
mov
rcr
ret
call
push
mov
push
(bad)
out
push
mov
sti
(bad)
(bad)
mov
sar
ss
outs
std
das
jne
dec
idiv
rep
adc
pushf
enter
xchg
(bad)
pop
shl
or
ret
pop
ret
mov
cld
popa
mov
loop
jmp
std
popf
mov
xlat
dec
mov
cld
cmps
jg
pop
mov
js
fbld
call
scas
and
cld
xchg
fwait
out
fisttp
lahf
adc
das
xor
scas
mov
dec
call
(bad)
mov
adc
cmc
adc
sti
fistp
add
aas
xor
(bad)
cld
mov
test
inc
lock
repz
fistp
or
pop
push
jg
jg
push
cld
xlat
iret
inc
mov
add
xchg
or
je
test
aaa
std
cmp
iret
mov
xlat
push
ja
sbb
inc
jecxz
add
mov
mov
out
movd
sbb
jg
push
repz
ja
fistp
jnp
(bad)
and
cld
imul
(bad)
std
xchg
cmc
mov
cmc
mov
loopne
clc
pop
inc
inc
mov
hlt
mov
out
mov
dec
dec
fcomip
mov
in
aaa
and
pop
jmp
div
mov
or
cs
jmp
add
in
inc
inc
fwait
mov
shl
ins
shl
psubb
or
xor
(bad)
std
cmp
dec
push
xchg
cmps
jns
call
imul
fcomip
mov
push
mov
outs
cli
xchg
inc
mov
pusha
mov
icebp
hlt
std
cmp
adc
mov
pop
sub
dec
loope
aas
out
xlat
adc
mov
test
retf
(bad)
arpl
cdq
outs
push
jg
mov
sbb
add
mov
mov
retf
fdiv
dec
cli
jg
(bad)
jg
jg
or
add
push
cmp
fisttp
out
(bad)
nop
in
rcr
add
cli
xchg
(bad)
(bad)
mov
arpl
(bad)
pop
cld
adc
test
jle
mov
in
call
stc
cmp
ins
in
std
outs
ret
in
(bad)
mov
in
iret
repnz
scas
(bad)
mul
push
mov
mov
jg
inc
mov
pop
(bad)
push
data16
(bad)
fistp
out
jmp
clc
das
jnp
cld
in
fs
sub
fwait
jle
sbb
ins
inc
das
(bad)
fisub
idiv
aas
fwait
sub
(bad)
mov
into
pop
mov
and
cmps
std
outs
jo
ror
jg
push
cmps
call
imul
add
cwde
jmp
int3
ret
push
cmp
add
sti
jmp
xlat
imul
cwde
(bad)
movs
jmp
sbb
jmp
hlt
(bad)
hlt
(bad)
inc
add
mul
and
std
adc
lock
outs
fs
mov
jns
mov
mov
aad
jg
fisttp
arpl
push
mov
shl
jae
or
(bad)
cmp
xchg
jnp
das
mov
xlat
popf
mov
push
mov
scas
mov
add
inc
into
(bad)
push
adc
stc
cmp
daa
mov
std
cli
mov
jg
jb
mov
xlat
jg
psubq
push
cld
cli
cld
(bad)
xchg
xchg
loop
nop
cdq
dec
jmp
xchg
std
idiv
sbb
in
mov
jmp
or
cld
jmp
add
mov
fsubr
jecxz
aas
push
call
in
test
pop
inc
jbe
out
dec
fsubr
call
and
sti
or
aas
mov
clc
scas
(bad)
mov
or
movups
xlat
xor
std
fistp
inc
jnp
(bad)
aam
xlat
and
cdq
push
in
call
pop
push
jl
(bad)
std
lea
jle
pop
xchg
cmp
jg
add
inc
push
dec
sbb
mov
ss
inc
aas
and
fcmovnu
pushf
pop
call
jp
lods
(bad)
fcmovnu
call
out
mov
(bad)
adc
jae
ret
push
xchg
std
xchg
mov
xlat
fs
sti
xchg
pop
test
sbb
es
cld
arpl
sahf
out
mov
push
std
xchg
int3
icebp
outs
mov
(bad)
cli
aaa
aam
inc
repnz
dec
pop
mov
fisttp
std
icebp
xchg
pop
hlt
mov
pop
cli
mov
std
(bad)
inc
(bad)
jg
arpl
jecxz
sbb
scas
test
test
in
jg
hlt
fidivr
jge
out
pop
cli
jnp
lds
lods
ja
push
dec
out
sti
lahf
cld
cmp
out
xchg
outs
(bad)
movs
(bad)
aaa
jmp
jg
(bad)
add
rcr
jg
scas
sti
not
out
fbld
or
test
and
sbb
mov
ins
js
adc
adc
mov
mov
sar
mov
mov
push
cmps
scas
jg
jnp
repz
jl
cmc
jg
(bad)
cmp
adc
and
pop
dec
sub
cmps
mov
xchg
hlt
fstp
push
in
(bad)
(bad)
lods
pop
push
stos
dec
jmp
cmp
and
push
lock
outs
std
retf
jmp
or
add
cld
mov
ret
jg
jg
sbb
outs
push
cmc
jg
mov
inc
iret
cmp
add
jae
dec
(bad)
mov
mov
cli
lea
pop
and
je
aas
std
cmps
jg
outs
dec
push
cli
(bad)
(bad)
stos
scas
shr
hlt
scas
sti
or
sbb
mov
pop
push
retf
(bad)
das
jns
mov
xor
iret
loopne
aam
xchg
sub
mov
std
call
in
pop
adc
dec
mov
cld
cmps
xor
inc
xor
neg
cli
fstp
imul
cli
mov
fistp
jo
pop
sti
sbb
sbb
shr
iret
inc
mov
(bad)
mov
xchg
scas
jle
jg
sub
ja
stos
aas
cmp
or
pop
fist
sahf
imul
vmovdqa
or
push
dec
clc
xchg
sub
jmp
inc
ja
rcr
mov
and
mov
dec
or
mov
xor
fstp
xchg
(bad)
call
out
paddd
(bad)
sub
xor
aad
clc
mov
xlat
inc
xchg
mov
(bad)
call
les
adc
sub
jmp
add
out
hlt
imul
lods
sti
xor
hlt
out
idiv
in
jg
mov
repz
push
pushf
dec
pop
fs
dec
mov
std
pop
int3
xor
in
xchg
call
shl
nop
fistp
mov
aas
enter
bound
xor
(bad)
arpl
aad
imul
jg
mov
push
adc
leave
iret
pop
cld
(bad)
push
hlt
cli
jg
scas
std
lahf
dec
mov
add
jae
or
mov
in
cwde
dec
adc
sub
or
loope
sahf
sub
pop
in
cld
std
xchg
fbld
std
arpl
add
std
scas
jle
jg
cmp
int
stos
in
xchg
pop
cld
ds
rcr
das
dec
mov
or
jmp
pop
jle
mov
repnz
xor
fcomip
imul
std
xlat
jg
(bad)
cmp
scas
dec
rol
outs
cli
xchg
in
dec
push
(bad)
(bad)
in
fstp
sti
mov
mov
stc
gs
jle
xor
(bad)
das
call
std
sahf
dec
fistp
cli
jnp
out
hlt
pop
mov
and
sar
push
and
in
lods
(bad)
jmp
cmc
sbb
fdiv
fisttp
mov
jo
into
jg
fild
(bad)
stc
pop
std
std
mov
cld
mov
xor
fldcw
lods
(bad)
jmp
jle
ror
push
cld
scas
jle
pop
rcl
std
not
sti
dec
std
push
aas
and
mov
clc
jnp
push
(bad)
(bad)
xlat
hlt
icebp
pop
sti
wbinvd
outs
mov
sar
in
push
std
sub
jle
iret
pop
shl
adc
jmp
xchg
sub
inc
push
out
pop
(bad)
cld
ins
in
mov
sbb
iret
mov
jmp
dec
pop
(bad)
aas
jle
jg
aas
dec
jle
test
imul
push
mov
std
sbb
sbb
shr
inc
scas
mov
cmc
mov
pop
(bad)
repz
std
(bad)
dec
ret
(bad)
fs
xchg
outs
mov
leave
pop
xchg
(bad)
in
scas
dec
mov
fadd
mov
jmp
sbb
sbb
cmp
pop
ret
hlt
inc
rcr
sub
sub
mov
out
(bad)
aas
add
sar
clc
aaa
xchg
sub
mov
int3
enter
xchg
mov
(bad)
(bad)
ret
xor
cmp
stc
pop
std
ins
inc
xchg
jnp
out
sti
mov
cli
push
stc
cli
out
leave
scas
cld
ret
call
scas
and
in
lods
pop
rcr
add
(bad)
inc
std
cmps
mov
int3
pop
ret
scas
adc
out
push
sub
out
paddd
loopne
and
repnz
mov
mov
lock
repnz
push
cli
sti
icebp
fcomip
(bad)
sbb
scas
(bad)
in
jg
pop
jns
int
js
mov
cld
icebp
call
aas
push
lock
pop
hlt
imul
cmp
jecxz
shr
cmp
jge
jmp
add
or
and
ja
(bad)
(bad)
out
(bad)
psubd
jg
fdiv
pop
push
aas
jle
fcomip
ud0
add
inc
sti
sbb
(bad)
idiv
mov
rcr
(bad)
test
dec
pusha
f2xm1
jmp
std
pop
jg
pop
cld
push
out
mov
mov
mov
icebp
pop
mov
(bad)
sub
lds
lds
jnp
cmps
je
shr
push
outs
std
pop
call
shl
out
loop
mov
pop
mov
aaa
hlt
stos
mov
clc
mov
fnstsw
lods
rcr
(bad)
xchg
sub
iret
mov
icebp
mov
jmp
push
movs
jmp
xlat
sbb
icebp
jmp
jg
sti
loop
loop
jle
std
loop
jb
cld
push
cld
lds
test
jnp
xchg
call
push
mov
push
(bad)
clc
push
jmp
hlt
imul
(bad)
fnstsw
xchg
sub
ficom
mov
hlt
mov
retf
inc
icebp
pop
mov
fcom
jg
jg
jmp
(bad)
idiv
outs
mov
sbb
jg
pop
std
dec
push
int3
ffreep
pop
cld
jmp
sbb
int3
fwait
out
out
inc
jg
(bad)
fidivr
jbe
(bad)
jnp
mov
and
and
jmp
std
loop
jb
cld
push
cld
lds
pop
cld
push
out
mov
hlt
mov
mov
push
das
call
in
ffreep
ins
add
cld
(bad)
cli
aad
les
inc
clc
xchg
(bad)
push
es
xchg
adc
jg
dec
sar
fnstcw
dec
dec
cli
addr16
dec
jmp
jmp
jg
std
jae
es
cmps
hlt
iret
cld
pop
cmps
jg
aas
(bad)
(bad)
stc
jmp
cmp
(bad)
pop
cld
adc
iret
bnd
clc
out
cli
int
call
leave
sahf
out
lock
ins
(bad)
std
sbb
es
std
xlat
call
scas
and
lock
mov
inc
push
pop
cld
cli
jg
(bad)
mov
mov
loop
shr
(bad)
sub
lds
pop
cld
ret
cli
lds
in
clc
cmps
clc
mov
cmp
retf
(bad)
adc
jmp
loop
(bad)
push
je
add
and
xor
(bad)
std
adc
mov
mov
sub
cmp
or
mov
mov
clc
push
cmp
and
inc
mov
cmp
cmp
jl
aas
stc
imul
mov
dec
jl
cli
arpl
ja
jmp
std
push
jg
dec
pop
(bad)
(bad)
jle
jns
adc
fstp
pop
std
pop
add
pop
call
push
loopne
aas
div
cli
xor
(bad)
stc
push
cmp
xchg
(bad)
(bad)
fsub
jg
pop
push
outs
xchg
rcl
jg
jl
cmp
int
sar
aaa
test
(bad)
inc
iret
(bad)
fsub
fnstsw
out
stc
in
pop
adc
and
(bad)
cli
ja
popa
mov
(bad)
sti
mov
int
gs
loopne
cld
scas
call
imul
out
(bad)
mov
pop
jp
jg
pop
cli
xchg
hlt
std
mov
mov
std
(bad)
(bad)
push
clc
ret
sbb
enter
xchg
cld
loope
neg
push
pop
(bad)
neg
sbb
jne
jmp
loopne
aaa
push
loop
stc
aas
retf
retf
add
add
cli
aaa
jmp
call
mov
pop
dec
sub
(bad)
push
push
xor
aas
out
pop
xchg
test
jecxz
inc
int
jg
out
cld
in
loopne
iret
add
inc
mov
push
jae
iret
push
mov
icebp
aam
imul
cmp
enter
out
stc
pop
jb
(bad)
movs
pop
paddd
scas
mov
(bad)
jmp
xlat
jg
cli
test
call
sti
das
dec
cs
arpl
jbe
push
hlt
or
jmp
xor
cmc
inc
cld
lock
push
movs
mov
add
sub
xor
ror
push
aaa
add
imul
stc
popf
jb
jg
dec
jg
iret
cld
cmp
cmp
ja
idiv
std
pop
int
cmp
mov
pushf
sub
cmc
sub
mov
add
or
test
addr16
fild
mov
cmc
mov
scas
jg
cmc
jmp
xchg
aad
div
mov
jle
fs
leave
ja
scas
(bad)
clc
fild
stc
outs
jg
vaddss
(bad)
mov
mov
imul
loopne
aas
div
(bad)
out
daa
sar
sub
inc
mov
pop
add
mov
in
jg
mov
and
iret
lds
jg
outs
push
fmul
out
loopne
out
fstp
fst
leave
(bad)
cmp
sbb
cli
add
out
jg
stc
jmp
out
lods
out
std
pop
ficom
test
out
jg
xlat
loopne
stc
outs
jle
out
sbb
scas
lea
popa
or
in
in
jl
dec
lea
dec
loope
cli
mov
iret
mov
clc
fistp
jg
ret
pop
inc
rol
jg
out
neg
sbb
loope
jg
out
(bad)
gs
xchg
xor
out
movs
in
outs
(bad)
imul
mov
add
arpl
xchg
lds
out
lea
inc
xchg
sbb
stc
iret
leave
add
out
lods
sbb
(bad)
call
add
fcomp
iret
leave
loopne
add
jno
pushf
je
or
jg
xor
rcr
mov
ret
pusha
jo
sahf
cmp
(bad)
jle
sbb
jbe
test
mov
mov
add
cld
cmps
jg
pop
int3
je
scas
jg
push
add
mov
cmps
jg
pop
shl
pop
jmp
stos
hlt
fstp
bound
stc
imul
fwait
std
jp
fist
aam
dec
sub
jae
jb
pop
sub
clc
dec
adc
pop
cli
movsx
mov
sbb
jmp
arpl
jle
(bad)
cli
pop
push
inc
push
mov
inc
mov
(bad)
(bad)
jmp
cmp
add
popa
dec
sbb
xor
sbb
jg
mov
or
push
mov
mov
mov
fdivr
mov
scas
clc
fldenv
(bad)
mov
aas
cld
addr16
sar
iret
test
lock
call
into
idiv
std
mov
jmp
push
push
ror
into
jg
xchg
cmp
movs
cmps
sub
pop
or
sub
jmp
fistp
std
(bad)
aam
jmp
sti
hlt
xlat
push
jge
jmp
(bad)
jmp
mov
repnz
aas
test
std
jecxz
adc
aas
dec
jae
jecxz
cmc
aas
mov
std
ins
(bad)
(bad)
clc
dec
cmp
idiv
(bad)
mov
pop
test
stc
mov
arpl
lahf
cli
cmc
xchg
test
xchg
sti
imul
aas
cli
aaa
loopne
xchg
aas
(bad)
call
daa
mov
jg
ins
or
sbb
std
lahf
cmps
aaa
enter
jg
(bad)
sti
mov
cld
shr
dec
and
jg
call
and
push
fild
aas
pop
mov
hlt
mov
aas
stc
jnp
outs
mov
scas
sbb
pop
enter
aas
and
js
dec
mov
imul
jmp
push
jmp
repz
stc
jnp
jbe
inc
jbe
mov
xor
aas
ret
and
sub
mov
mov
xchg
clc
(bad)
in
cmc
addr16
ins
mov
out
and
cld
lock
adc
mov
lds
in
(bad)
jmp
sbb
mov
fistp
stc
adc
repnz
(bad)
push
lods
adc
out
(bad)
(bad)
lods
inc
stc
add
pop
ror
scas
add
add
lock
std
sbb
adc
mov
test
pop
inc
adc
xlat
xchg
lahf
mov
jg
std
stc
jg
jae
cld
xchg
lock
(bad)
jle
lods
inc
inc
cli
ret
jge
jmp
das
add
jmp
aaa
xor
mov
repz
inc
add
aas
hlt
fucomp
imul
cmps
jg
cwde
adc
cmps
xchg
scas
in
imul
sub
pop
retf
mov
jne
in
ins
stc
jmp
pop
(bad)
(bad)
fild
(bad)
jp
rcr
inc
mov
jmp
fucomip
xlat
test
clc
in
pop
std
(bad)
sub
pop
setl
sbb
jmp
in
inc
push
sbb
mov
enter
(bad)
sahf
sub
aad
and
(bad)
mov
sbb
mov
retf
jg
imul
jnp
outs
(bad)
mov
cmp
ins
push
pop
stos
out
std
lahf
jge
jg
out
jnp
pop
xor
mov
lods
push
mov
(bad)
fwait
(bad)
clc
aas
out
sbb
mov
adc
aas
(bad)
xor
mov
hlt
jmp
data16
dec
(bad)
outs
inc
or
icebp
das
jle
sti
test
fldcw
inc
cmp
cmc
aaa
jmp
pop
mov
cmp
imul
ret
stos
pop
fstp
adc
(bad)
std
cmp
stc
ret
jg
pop
add
repnz
arpl
cs
lahf
pop
sbb
mov
hlt
pushf
(bad)
mov
out
push
lods
stc
dec
xchg
jmp
dec
add
xor
(bad)
outs
sti
(bad)
jns
hlt
sar
push
fwait
and
stos
(bad)
push
scas
aad
icebp
(bad)
neg
aam
or
aad
pop
dec
xor
mov
push
fs
jbe
test
jg
xor
push
inc
int
or
pop
jg
(bad)
out
(bad)
aas
sub
or
repz
lahf
cmps
mov
fstp
mov
call
mov
popf
xor
cdq
jmp
adc
popf
(bad)
idiv
sti
call
(bad)
mov
aas
int
in
lahf
fbstp
sbb
xchg
inc
jl
hlt
jmp
inc
ins
mov
or
div
out
aam
aaa
xor
adc
(bad)
cmp
(bad)
(bad)
popa
cmc
or
cs
aam
stos
fadd
stc
pop
and
icebp
jg
out
(bad)
mov
sbb
scas
lods
push
out
or
sbb
pop
das
loope
std
mov
cmps
js
pop
cdq
xchg
xchg
test
mov
lods
dec
jg
rcr
pop
sar
inc
outs
call
je
fild
std
in
dec
jecxz
repz
dec
cwde
xchg
jmp
jg
dec
imul
cld
push
call
aam
hlt
pop
jmp
jg
jle
cdq
sti
call
in
cli
scas
hlt
mov
xchg
scas
jle
popf
outs
js
ror
pop
inc
xchg
std
inc
out
jg
cmpps
scas
jmp
neg
rol
call
xor
jl
lahf
test
xchg
ud0
jo
repnz
adc
dec
ret
popa
leave
xchg
stc
lock
cld
cmp
in
sti
int
iret
jecxz
imul
scas
loop
icebp
inc
push
lahf
(bad)
pop
clc
outs
ds
not
pop
movs
pop
std
sbb
and
repnz
gs
xchg
sti
ror
inc
vpavgw
and
fnstsw
sub
lock
(bad)
cmp
cmps
clc
cmp
pop
(bad)
(bad)
call
mov
mov
int3
outs
cli
ja
inc
leave
loope
cld
fwait
(bad)
loope
pushf
fisub
repnz
std
mov
lock
cmc
fwait
(bad)
jno
loope
rcr
stc
xor
and
inc
repz
add
in
inc
mov
jmp
dec
(bad)
test
hlt
mov
into
int3
jae
push
int
dec
pop
adc
lods
movs
rcl
sub
loope
mov
shr
out
sar
lock
xchg
(bad)
fstp
call
stc
lea
shl
bound
(bad)
cli
and
inc
and
(bad)
pop
(bad)
in
mov
push
or
pop
sub
jle
outs
(bad)
(bad)
lock
jmp
xlat
(bad)
cmp
mov
std
inc
fisttp
jmp
(bad)
out
iret
ret
in
xchg
dec
idiv
call
xchg
frstor
out
repz
daa
mul
in
in
popa
or
push
repz
jbe
out
add
and
pop
mov
stos
inc
dec
int3
popa
mov
mov
cdq
xor
ja
xor
mov
pop
(bad)
clc
(bad)
xlat
inc
aad
stos
dec
(bad)
push
cmp
clc
mov
call
popf
call
jne
xchg
js
inc
jecxz
enter
dec
aas
idiv
sti
sbb
jecxz
or
jge
add
or
jle
shl
in
addr16
call
imul
in
xchg
add
arpl
mov
xchg
int3
sbb
repz
sti
imul
sbb
out
fiadd
repz
and
jg
(bad)
jg
fisttp
dec
xchg
(bad)
fwait
std
cmp
shr
or
call
xor
push
xlat
jg
push
hlt
fldcw
gs
int3
gs
clc
lea
push
pop
cmp
sar
xchg
out
fild
aam
xchg
push
pushw
lahf
jg
lock
cli
dec
call
pop
push
js
jmp
out
(bad)
jne
mov
in
ja
inc
dec
jg
fwait
jg
jnp
sbb
das
xchg
xchg
idiv
(bad)
mov
pop
movs
test
lahf
(bad)
pop
loopne
fcomip
and
pop
pop
jnp
cld
ficom
push
std
pop
push
fbld
aas
jmp
loopne
xor
test
cmp
jg
(bad)
call
adc
aas
out
ja
xchg
inc
(bad)
jg
scas
adc
sub
bnd
xchg
jb
jne
jmp
inc
xor
pop
in
cmps
jnp
jmp
adc
mov
aaa
movs
sub
cmc
lahf
stc
mov
shr
(bad)
mov
out
pop
jo
cld
mov
xlat
jg
(bad)
std
mov
jecxz
dec
(bad)
mov
out
sti
test
mov
lahf
cli
leave
mov
jecxz
icebp
aaa
cmp
ja
mov
std
pop
ja
mov
inc
jg
ja
(bad)
jmp
stc
dec
cld
mov
mov
sar
in
mov
jb
hlt
outs
std
push
jg
iret
jle
das
(bad)
neg
sar
aas
jo
xchg
mov
iret
push
dec
hlt
icebp
mov
cld
push
jg
(bad)
lahf
cld
adc
pop
call
fnstcw
cmc
jg
std
inc
out
std
mov
icebp
addr16
jge
(bad)
cmps
mov
jle
outs
call
jg
jg
lds
jg
(bad)
clc
lahf
in
cmp
sub
cld
clc
pop
clc
test
std
jecxz
pop
cli
sti
push
cld
mov
loopne
das
(bad)
sahf
sti
call
fcomip
mov
sar
sti
inc
jg
aas
sti
dec
(bad)
fidivr
out
cld
pop
cld
jns
ret
pop
cli
aaa
cld
fidivr
mov
jmp
out
lock
add
(bad)
pop
call
aas
std
fwait
inc
(bad)
inc
dec
outs
sti
xlat
aas
stc
in
inc
jg
pop
std
out
dec
std
jae
fdivr
in
lahf
cld
cmp
xlat
dec
jg
fild
push
fistp
out
cld
iret
push
das
sti
xchg
inc
push
je
lahf
std
add
icebp
pop
dec
mov
icebp
pop
jmp
mov
cld
(bad)
aam
hlt
inc
cli
(bad)
call
mov
pop
(bad)
jmp
std
sub
mov
inc
(bad)
(bad)
mov
(bad)
imul
(bad)
daa
jge
xlat
cli
in
retf
aas
std
ja
fimul
dec
mov
pop
jmp
mov
aas
push
(bad)
gs
pop
hlt
jmp
sti
(bad)
clc
pop
std
jmp
retf
(bad)
cld
dec
mov
pop
icebp
addr16
cmp
pop
fistp
dec
jg
pop
stc
aaa
cld
push
(bad)
jmp
out
fcomip
imul
jmp
idiv
shl
call
fwait
jmp
mov
cmc
pop
div
cld
iret
(bad)
stos
jg
xchg
data16
stc
das
cli
mov
cmp
sti
xor
loope
fdivr
stc
pop
std
push
mov
std
push
cmc
aas
leave
mov
xor
sti
movs
repnz
int
ret
dec
xchg
retf
lahf
std
popf
jg
pop
jecxz
clc
xlat
push
std
jbe
in
cli
fwait
lods
inc
fucomip
(bad)
jl
dec
dec
jg
call
jmp
clc
lahf
jle
jg
lahf
(bad)
pop
mov
iret
ror
test
(bad)
(bad)
in
jle
jg
mov
mov
xchg
(bad)
std
jmp
in
(bad)
pop
(bad)
mov
mov
cli
xor
(bad)
clc
(bad)
clc
aas
sti
out
(bad)
out
aas
in
pop
pushf
cmp
xor
aaa
std
jecxz
std
mov
(bad)
mov
(bad)
mov
in
dec
(bad)
cld
pop
jnp
jecxz
rcr
stos
dec
lds
jl
cli
ja
ja
(bad)
aas
imul
jns
jmp
cmc
addr16
ins
push
movd
fbstp
jg
ja
or
lock
(bad)
jae
(bad)
pop
not
xchg
(bad)
xchg
aas
cmc
outs
push
mov
loope
aas
out
pop
out
cs
popf
jg
das
cmp
call
(bad)
jmp
dec
call
scas
call
std
xlat
iret
sar
out
(bad)
fucomi
repz
pop
repnz
out
cld
std
jg
mov
(bad)
call
out
std
xor
std
cmps
pop
std
adc
std
pop
call
pop
inc
mov
les
idiv
les
aas
cld
xor
clc
(bad)
inc
(bad)
in
mov
scas
mov
jmp
out
sti
(bad)
std
xor
stc
fcomip
retf
jg
dec
fidivr
int
std
mov
iret
jg
fcomip
mov
mov
inc
int
icebp
pop
sti
iret
das
jg
jmp
aaa
jmp
jle
aas
out
icebp
pop
clc
sti
aas
clc
xlat
(bad)
sti
mov
xchg
dec
cmps
mov
das
cld
test
inc
cmps
pop
dec
jg
mov
push
cmp
dec
push
pop
mov
jmp
std
pop
mov
stc
popf
inc
pop
bnd
lods
jg
repnz
in
in
lock
std
xlat
jg
(bad)
std
mov
iret
jg
xlat
(bad)
xlat
jg
pop
repz
std
out
jg
aas
stc
xchg
retf
(bad)
fnstcw
into
push
fwait
inc
pushf
cld
loope
jb
xlat
std
fcmovnu
(bad)
(bad)
in
dec
cs
cmp
call
jg
out
repz
std
(bad)
jg
push
aas
(bad)
jbe
enter
lds
icebp
push
pop
jg
(bad)
cmps
sar
cmc
xchg
aad
hlt
xchg
mov
(bad)
inc
iret
jle
pop
hlt
(bad)
dec
jg
aas
cli
pop
jmp
inc
pop
hlt
aas
cld
sbb
mov
(bad)
imul
cli
out
aam
hlt
push
std
mov
aas
cli
sbb
pop
dec
(bad)
out
mov
fnstsw
jmp
(bad)
test
stc
jae
xchg
hlt
jnp
jg
fldcw
dec
cld
pop
mov
jg
xor
shr
clc
xchg
mov
jle
das
std
push
iret
mov
(bad)
fstp
(bad)
aaa
sti
sbb
dec
sbb
mov
push
sti
cli
scas
cld
movq
(bad)
jg
pop
repnz
pop
cld
jbe
int3
out
(bad)
scas
cld
outs
mov
(bad)
imul
stc
(bad)
cld
lods
loop
sti
icebp
pop
std
sti
(bad)
data16
fnstcw
jmp
das
dec
mov
lock
cld
ret
aas
(bad)
cmp
jg
hlt
shr
sti
pop
aas
(bad)
call
(bad)
fsub
jg
cmps
cld
fstp
fcomip
(bad)
fcos
(bad)
aad
pop
std
cmps
(bad)
jmp
repnz
sub
mov
icebp
cmp
daa
pop
(bad)
ss
(bad)
fdivr
push
push
cmc
jg
(bad)
sbb
jne
pop
repnz
scas
jbe
pop
das
jle
jmp
lahf
cld
frstor
(bad)
in
aas
std
andnps
jg
pop
call
jg
jg
xlat
(bad)
outs
jmp
das
sti
idiv
mov
sti
outs
clc
leave
mov
jle
jg
pop
stc
fcomip
xchg
in
stc
addr16
dec
aas
sti
(bad)
stc
out
scas
(bad)
stc
popf
ret
jg
outs
cli
dec
jno
ret
das
int3
jmp
aas
jne
xchg
dec
pop
sti
mov
in
icebp
inc
(bad)
repz
jg
push
icebp
outs
lock
(bad)
xor
out
(bad)
cmp
fucomip
outs
cli
cmp
pop
icebp
lahf
std
int
dec
stc
ja
std
inc
(bad)
std
mov
mov
out
dec
(bad)
out
outs
cli
std
(bad)
dec
mov
out
cli
ud0
(bad)
mov
(bad)
in
iret
std
pop
mov
ja
inc
inc
daa
jg
inc
jg
das
inc
lahf
sti
pop
pop
jge
pop
cli
fisttp
psubb
dec
dec
push
fdivrp
pop
scas
call
lahf
stc
call
rcr
test
mov
iret
lahf
(bad)
mov
mov
imul
hlt
in
mov
fwait
std
jge
jg
fucomp
ja
ja
xchg
push
mov
fld
std
(bad)
(bad)
fcomp
icebp
out
hlt
daa
pop
jge
ja
aas
sti
fcomi
push
jg
(bad)
sti
in
dec
aas
loop
(bad)
aad
fisubr
(bad)
fidiv
clc
stos
(bad)
in
das
jle
pop
icebp
xchg
jmp
jg
out
idiv
jl
paddd
(bad)
pushf
(bad)
cld
out
sti
inc
push
out
imul
(bad)
in
jg
fcomip
jg
aam
lahf
dec
(bad)
cdq
xchg
dec
lahf
stc
iret
cld
retf
mov
pushf
cmp
jmp
(bad)
in
jg
iret
jle
iret
(bad)
sti
xchg
stos
jmp
aaa
jns
das
aas
scas
jg
(bad)
mov
jle
mov
jg
mov
jnp
xchg
(bad)
mov
mov
dec
retf
dec
mov
xchg
jg
fcomip
(bad)
outs
(bad)
jge
mov
ds
xchg
mov
scas
repz
in
popf
(bad)
adc
hlt
std
mov
(bad)
jle
mov
jle
out
icebp
dec
std
in
mov
out
fdivrp
mov
aad
fistp
das
(bad)
sbb
mov
pop
(bad)
sbb
in
repnz
outs
cmp
dec
jg
lahf
cld
aaa
cld
jle
(bad)
jg
std
out
in
lock
cld
das
jg
scas
clc
repnz
std
mov
cmps
aad
out
cld
lods
inc
push
stos
pop
(bad)
clc
ret
mov
pop
std
mov
cmps
jg
daa
lahf
std
daa
mov
jg
or
mov
out
mov
(bad)
lds
lock
jg
pop
mov
(bad)
sbb
lahf
repnz
pop
(bad)
popf
jnp
fnstsw
pushf
(bad)
xlat
jg
aas
sti
pop
jge
imul
std
pop
icebp
imul
mov
std
outs
(bad)
fcomp
out
cmc
dec
call
jnp
lods
aas
sti
outs
(bad)
out
das
js
std
out
loopne
lock
std
adc
aas
cli
hlt
retf
(bad)
xchg
mov
cld
addr16
mov
pop
cld
ja
mov
mov
loop
sti
lds
aas
cld
push
mov
sub
idiv
sti
jmp
std
mov
ud0
outs
repnz
cld
fsubr
push
mov
mov
jns
pop
std
pop
ja
lods
fucomip
(bad)
cli
lea
mov
std
aas
call
jmp
neg
jg
mov
mov
(bad)
fst
sub
call
out
(bad)
mov
repz
cli
mov
neg
repz
inc
(bad)
fidivr
aas
sti
and
nop
iret
(bad)
(bad)
inc
mov
stc
push
mov
pop
jg
push
aas
ds
out
jg
jg
mov
(bad)
in
(bad)
pushf
fcomip
pop
(bad)
(bad)
faddp
cli
repz
in
push
push
aas
cmc
mov
ds
inc
jg
fucomip
paddd
mov
jmp
(bad)
call
std
repz
aad
std
mov
fist
(bad)
repz
out
mov
loop
clc
add
jle
(bad)
std
std
out
std
cmp
pop
jge
sar
pop
repnz
mov
jmp
mov
cld
dec
aas
icebp
cmp
scas
inc
jae
retf
outs
jle
(bad)
fistp
in
std
fcomip
(bad)
jecxz
clc
inc
jg
(bad)
stc
aas
cmp
fcos
sar
lock
idiv
lahf
hlt
sub
cmps
jg
lahf
std
mov
popf
jg
sti
lahf
jle
aas
(bad)
mov
call
push
fcomip
out
(bad)
mov
(bad)
jecxz
shl
(bad)
sti
or
stc
mov
iret
(bad)
out
std
(bad)
repnz
lock
pop
inc
mov
jg
mov
inc
jg
ret
xchg
retf
jg
pop
stc
sti
jg
(bad)
mov
inc
jmp
test
sbb
fcom
mov
popf
sub
pop
std
mov
in
outs
repz
mov
push
push
xchg
sti
repz
jg
(bad)
out
fcomip
lahf
inc
fwait
jnp
(bad)
cdq
pop
jo
mov
stc
mov
imul
paddd
cli
popf
(bad)
(bad)
pop
cld
push
jmp
mov
out
(bad)
fsub
scas
push
(bad)
pop
jg
(bad)
cmp
(bad)
(bad)
push
(bad)
fidivr
push
daa
jg
mov
sti
pop
push
mov
jle
xchg
std
xchg
(bad)
in
lahf
lock
std
jno
dec
sar
mov
or
aas
lock
std
inc
jg
(bad)
(bad)
gs
jmp
xor
imul
fidivr
stc
aaa
pop
cld
xor
int
jae
mov
sbb
jg
idiv
out
fucomip
cmp
xchg
push
aad
imul
std
jp
aad
mov
jge
cli
pop
jg
idiv
lahf
mov
inc
pop
std
clc
paddd
das
(bad)
icebp
jg
out
(bad)
xchg
lahf
in
cld
pop
push
outs
cli
inc
(bad)
cli
mov
addr16
mov
(bad)
(bad)
fcomip
aaa
stc
(bad)
mov
sti
outs
mov
inc
(bad)
icebp
(bad)
xchg
std
mov
mov
notrack
scas
cli
sbb
mov
call
neg
out
mov
not
cmp
(bad)
(bad)
out
sti
jmp
std
xlat
push
cmps
mov
pop
mov
(bad)
mov
into
outs
imul
xchg
std
jle
(bad)
mov
addr16
fcomip
scas
std
mov
jg
inc
(bad)
fcomp
pop
std
pop
aas
sbb
cdq
jg
out
imul
(bad)
cwde
mov
dec
icebp
cmp
int3
aas
stc
mov
arpl
(bad)
inc
(bad)
idiv
call
inc
(bad)
iret
dec
outs
std
jnp
jmp
(bad)
jge
(bad)
in
cld
pop
jbe
xchg
das
mov
aad
repnz
out
jg
(bad)
jge
lahf
std
outs
(bad)
jmp
sti
dec
(bad)
repnz
out
aas
stc
add
repz
pop
mov
(bad)
(bad)
in
jp
lock
daa
(bad)
pushf
lds
(bad)
out
stc
mov
retf
(bad)
ja
dec
(bad)
scas
in
cli
mov
cli
mov
pop
jmp
(bad)
sub
in
outs
sti
out
std
pop
mov
mov
(bad)
push
jg
pop
hlt
(bad)
std
dec
jg
lahf
lock
aas
jg
sti
sub
dec
mov
popf
mov
call
jg
cmp
push
mov
std
daa
pop
call
cmc
addr16
and
pop
clc
inc
cld
movs
scas
inc
sar
cld
ja
out
(bad)
mov
loope
fcomip
(bad)
(bad)
mov
jmp
(bad)
pop
inc
(bad)
pop
jmp
xchg
std
stc
push
das
fdivr
cmps
jle
aas
jmp
sar
jg
out
std
arpl
lods
mov
or
push
lahf
cmp
push
jle
iret
jl
cmc
retf
jg
push
lahf
std
pop
dec
out
cld
into
mov
into
dec
stc
lahf
jg
daa
idiv
sar
lock
adc
scas
repz
lahf
inc
repz
std
mov
inc
pop
clc
fwait
call
push
das
cld
aad
call
cld
mov
jg
lahf
dec
push
inc
(bad)
push
mov
cld
jmp
mov
(bad)
jle
(bad)
(bad)
mov
lods
das
inc
pop
push
(bad)
cs
scas
stc
or
stc
cmp
jg
fistp
mov
dec
mov
mov
cld
sub
xlat
ds
stos
jg
fstp
clc
out
cli
and
push
addr16
mov
or
neg
(bad)
das
cli
std
(bad)
call
jmp
(bad)
mov
jbe
iret
clc
std
jg
inc
pop
mov
cld
pop
mov
(bad)
mov
(bad)
cli
(bad)
pop
(bad)
adc
sbb
jns
into
scas
pop
push
mov
iret
cli
pop
jg
loopne
cld
jne
sahf
repz
mov
icebp
outs
std
mov
ja
icebp
jg
paddw
jle
leave
paddd
pop
clc
sti
call
out
outs
icebp
sti
cld
sbb
mov
das
fstp
ja
in
clc
inc
pop
inc
sbb
mov
addr16
sbb
mov
out
(bad)
scas
(bad)
mov
(bad)
mov
loope
(bad)
(bad)
jmp
(bad)
cld
clc
mov
mov
dec
(bad)
mov
rep
cli
outs
(bad)
adc
in
inc
inc
jg
call
popf
aas
cmc
(bad)
cld
jne
out
jg
daa
(bad)
scas
aas
lock
(bad)
das
(bad)
mov
(bad)
pop
repnz
fidivr
in
(bad)
movd
aaa
cld
sub
clc
cmc
jle
fdivrp
hlt
(bad)
inc
push
push
dec
outs
lock
pop
pop
std
out
(bad)
popf
jg
loopne
jg
aas
std
repz
clc
psubd
(bad)
jg
das
std
mov
neg
(bad)
scas
icebp
xlat
cld
(bad)
jg
pop
sti
lahf
jmp
cmp
pop
std
mov
iret
push
jg
push
ja
lahf
std
mov
(bad)
(bad)
cli
(bad)
(bad)
pop
clc
mov
scas
mov
(bad)
call
mov
jg
pop
stc
pop
int
test
mov
sti
cmp
fmul
pop
cld
repnz
jmp
stc
mov
fwait
ja
cmc
outs
jle
bnd
mov
mov
stos
jg
iret
cli
retf
(bad)
aam
dec
(bad)
mov
fcomip
out
aad
jge
addr16
mov
fcomp
jne
loop
(bad)
cli
outs
test
or
loopne
in
dec
(bad)
stos
out
(bad)
mov
jnp
pop
jg
out
enter
ret
mov
out
aas
div
mov
jg
cld
idiv
scas
call
mov
(bad)
outs
clc
inc
jle
out
(bad)
std
(bad)
sti
(bad)
cld
cmp
std
jg
xchg
std
jbe
inc
jg
aaa
cli
idiv
repz
(bad)
(bad)
shl
mov
jle
(bad)
jmp
push
cld
cld
loopne
push
jle
aas
loope
mov
pop
cmc
mov
push
mov
das
std
cmc
jg
outs
mov
sti
cld
cs
pop
idiv
call
shl
iret
ins
std
(bad)
mov
pop
aas
std
cmp
(bad)
std
sti
mov
std
(bad)
cmps
push
aas
repz
outs
push
cli
scas
push
in
cmps
mov
std
stc
mov
(bad)
(bad)
inc
cld
cmps
jg
scas
clc
test
lds
(bad)
cmps
(bad)
(bad)
jecxz
pusha
cmc
lds
icebp
dec
mov
fstp
pop
mov
paddw
les
repz
cmp
fcomip
(bad)
(bad)
push
mov
icebp
arpl
(bad)
inc
jmp
fcmovne
jle
mov
call
jle
jb
(bad)
inc
(bad)
mov
lock
cld
push
dec
(bad)
(bad)
push
call
int
test
stos
pop
sti
jg
cli
inc
(bad)
stc
fucomip
dec
imul
das
jg
(bad)
(bad)
xlat
imul
icebp
jg
out
push
lahf
inc
jg
out
fidiv
jle
(bad)
out
fstp
cmc
(bad)
pop
std
test
mov
stos
aas
jecxz
stc
xchg
pop
call
loop
aaa
dec
out
cld
popf
jle
std
(bad)
std
dec
enter
aas
cli
outs
clc
and
call
stos
aas
push
cmps
jle
jg
(bad)
dec
pop
cld
sub
repz
clc
mov
pextrw
jg
outs
push
repz
jg
mov
stc
xor
das
clc
stos
(bad)
sar
imul
(bad)
mov
out
(bad)
loope
retf
fcomip
ja
mov
out
push
inc
outs
clc
mov
je
(bad)
imul
mov
neg
out
dec
cli
(bad)
inc
leave
rcr
lock
pop
repnz
retf
int
(bad)
rcr
std
mov
dec
pop
(bad)
mov
cld
ds
jg
out
(bad)
pop
(bad)
jg
jg
pop
std
out
(bad)
out
mov
iret
sahf
cld
jecxz
(bad)
pop
repnz
std
into
fnstcw
rep
push
mov
(bad)
out
out
in
mov
jecxz
jmp
std
shr
icebp
scas
std
jmp
aas
std
sbb
(bad)
cld
sub
mov
(bad)
jmp
pop
sti
(bad)
stc
pop
(bad)
fdivr
(bad)
mov
(bad)
sub
mov
jecxz
jmp
cmp
adc
cmps
neg
jmp
stc
pop
sti
paddw
mov
repz
jg
cli
xor
arpl
and
xor
adc
pop
push
dec
xchg
(bad)
mov
cli
xchg
pop
mov
gs
or
call
mov
dec
mov
in
ja
into
scas
mov
dec
mov
daa
dec
(bad)
mov
adc
cmc
(bad)
call
cli
xchg
loopne
fld
imul
xor
xlat
push
repnz
mov
adc
cdq
xchg
arpl
fisttp
int
adc
fcomip
adc
push
jg
fwait
std
pop
mov
cld
sub
out
xchg
(bad)
das
sar
loop
cld
in
call
std
mov
out
(bad)
bnd
out
pop
call
retf
aas
jg
addr16
cld
dec
ja
mov
(bad)
lea
jg
cmps
inc
jg
scas
sti
scas
jle
pop
pop
inc
dec
loop
cmp
sbb
std
fistp
rcr
jg
idiv
pop
call
add
aaa
stc
int
xlat
mov
mov
(bad)
aas
jmp
sti
xchg
sti
outs
hlt
mov
(bad)
pop
cld
xchg
jge
dec
jns
jmp
pop
dec
(bad)
adc
cmc
outs
cli
fwait
sahf
dec
lahf
ds
cmps
call
mov
push
repnz
lods
stc
ja
(bad)
movs
(bad)
cld
pop
mov
xlat
scas
jbe
stos
mov
jbe
ins
cli
jge
pop
jle
jmp
inc
mov
cs
lahf
test
xchg
stos
call
jne
fwait
leave
xor
cmp
(bad)
std
jg
sar
lds
or
fistp
inc
imul
call
loope
daa
imul
call
stc
or
aas
xor
idiv
cld
pop
std
fcmovb
cwde
push
cmp
(bad)
in
leave
into
cmp
(bad)
pop
cld
stos
and
cmp
shl
fcom
inc
jecxz
lock
sar
dec
add
cli
xor
adc
xlat
pusha
and
sbb
syscall
sub
outs
push
jnp
sbb
add
inc
and
(bad)
and
nop
or
jecxz
shl
inc
jae
mov
xlat
xchg
and
jmp
cli
push
dec
push
sub
jg
fs
in
jg
arpl
push
and
(bad)
ss
outs
std
mov
(bad)
test
push
inc
sti
in
aas
sahf
xchg
xor
rcr
mov
mov
loope
pop
into
(bad)
cmp
in
(bad)
lods
inc
jb
sbb
inc
sbb
cmp
mov
dec
cld
and
sub
out
cli
paddb
jg
push
vmovhps
repz
fistp
std
pop
cwde
movsx
test
dec
xchg
jg
jmp
std
pop
jle
jnp
jg
into
jp
call
not
cmp
stc
(bad)
cmps
pop
mov
lahf
push
sub
add
sar
dec
push
pop
iret
js
mov
jg
shr
das
lods
inc
pop
cld
jecxz
scas
(bad)
sub
pop
movs
lds
lea
ud0
lods
shr
jns
sbb
jp
add
(bad)
cmp
add
sbb
fistp
rcr
call
test
(bad)
mov
call
lahf
lock
push
fucomi
arpl
call
pop
cmps
add
jmp
repz
xor
ret
xchg
ds
ja
jmp
fist
mov
test
mov
mov
cmps
call
pop
inc
mov
scas
inc
out
xchg
pop
xlat
aas
not
rcr
cs
in
scas
sar
inc
shl
cmp
in
aas
leave
lock
cs
shl
mov
jo
sub
stos
cli
jmp
(bad)
out
idiv
cmc
mov
push
in
cld
xlat
xchg
call
add
(bad)
aas
jmp
jecxz
jmp
mov
lahf
cmps
xor
std
outs
jg
scas
paddw
jmp
(bad)
jmp
clc
in
jg
psubq
jle
cli
adc
mov
(bad)
cli
(bad)
cmc
pushf
mov
mov
jg
fucomi
mov
daa
adc
fld
jg
fisttp
fdiv
hlt
aaa
std
jp
dec
mov
inc
jnp
pop
push
das
bnd
cmp
in
psrad
cld
data16
das
fisttp
jnp
in
mov
add
mov
pop
(bad)
push
lock
mov
or
(bad)
jmp
add
jg
mov
push
sti
in
push
xchg
jnp
jle
fbstp
imul
pop
cld
jmp
cmp
pop
cmc
mov
push
ret
repnz
xchg
mov
out
or
fcomp
les
mov
mov
std
jno
sbb
add
xlat
fiadd
inc
hlt
mov
xlat
cmc
out
imul
mov
shr
dec
pop
cld
cli
adc
(bad)
cld
das
xchg
cs
xchg
mov
jmp
pop
sub
in
mov
stc
scas
(bad)
mov
or
clc
xchg
jge
repz
push
pop
jmp
(bad)
jnp
pop
in
std
xchg
repnz
hlt
mov
add
(bad)
std
pop
pop
std
lds
call
pop
(bad)
jle
rcl
movs
les
pop
call
jg
(bad)
test
jg
jecxz
mov
lock
jge
pop
adc
popf
pop
arpl
cmp
mov
fcom
(bad)
std
mov
inc
call
(bad)
test
aaa
ror
imul
sbb
dec
in
jg
neg
xchg
adc
div
fucomip
idiv
mov
and
idiv
jmp
mov
fcmovnu
in
(bad)
xchg
aas
(bad)
outs
sub
loope
outs
add
retf
jmp
icebp
repnz
jg
dec
and
inc
call
es
fist
(bad)
mov
frstor
jg
lods
mov
clc
in
mov
jle
pop
call
mov
pop
mov
jle
bound
pop
lods
ins
repz
addr16
hlt
(bad)
(bad)
lods
jle
out
sbb
push
jle
cmps
jg
(bad)
jo
sahf
fistp
(bad)
arpl
pop
std
xor
jne
shl
aaa
mov
sbb
inc
aam
aaa
jmp
stc
sbb
sbb
inc
mov
cmp
push
jg
(bad)
cmc
aas
popa
pop
jg
push
sub
pop
std
jp
sub
stc
(bad)
clc
int
mov
(bad)
mov
das
call
mov
xlat
cli
or
adc
retf
pop
(bad)
mov
and
mov
mov
mov
(bad)
loopne
mov
pop
clc
mov
ret
inc
xor
mov
pop
xchg
imul
clc
dec
jmp
in
or
loop
lds
cwde
push
sar
not
js
jg
cmps
jg
aas
mov
push
jmp
or
leave
icebp
aam
cli
imul
call
add
and
repnz
repz
mov
(bad)
adc
ror
(bad)
aas
neg
mov
add
mov
jnp
aad
cli
ud0
mov
or
fcomip
xlat
adc
(bad)
shl
push
xchg
inc
ret
(bad)
loop
test
paddd
jle
pop
aas
or
(bad)
(bad)
in
jl
xchg
lods
sar
std
pop
call
sub
xlat
fsincos
xchg
(bad)
paddd
xor
cld
xor
mov
mov
push
(bad)
mov
retf
int3
std
icebp
dec
jg
(bad)
cmp
and
add
xlat
and
loope
std
(bad)
jle
xor
int3
mov
jmp
(bad)
xlat
cli
mov
lea
dec
clc
xor
aaa
clc
popf
jg
push
(bad)
sub
paddb
jle
aas
out
scas
popf
ins
dec
cld
outs
mov
out
mov
push
jg
pop
out
mov
push
jg
loop
cld
icebp
pop
out
aaa
stc
pop
mov
jg
(bad)
outs
std
jmp
pop
arpl
lods
out
cld
pop
mov
(bad)
pop
mov
jg
mov
inc
int
jg
out
jge
pop
call
lock
cli
out
jle
out
sti
in
clc
loop
retf
mov
push
pop
(bad)
out
jg
aas
clc
dec
std
sbb
rcl
jg
sar
int
ds
push
sahf
std
iret
jg
pop
imul
(bad)
aam
cmc
fistp
sahf
inc
cmp
jne
cmp
xchg
repz
out
(bad)
inc
icebp
pop
pop
cld
push
(bad)
cld
pop
icebp
out
push
div
jg
out
repnz
mov
hlt
pop
std
out
icebp
out
(bad)
mov
repnz
cli
ins
call
jg
(bad)
(bad)
daa
aas
std
sbb
fistp
popf
jmp
repnz
std
test
push
push
std
mov
cld
push
jg
scas
cli
pop
jg
xchg
xchg
shr
(bad)
out
xor
fnstsw
(bad)
mov
jg
out
cmc
out
inc
(bad)
movs
dec
cs
lahf
call
sti
aaa
cli
jnp
push
loop
int
cli
cmps
dec
(bad)
test
jg
pop
ds
aad
ja
jg
mov
std
jnp
xchg
jg
mov
out
cli
fstp
leave
das
jg
aaa
dec
pop
jg
jg
icebp
dec
inc
jg
lahf
(bad)
out
das
cld
mov
idiv
arpl
fcomip
(bad)
retf
rcr
jmp
dec
jg
hlt
pop
std
cmp
cld
into
call
in
cli
scas
fistp
jg
fwait
cld
xchg
jg
addr16
xchg
retf
(bad)
loopne
sti
(bad)
mov
push
cld
out
(bad)
jg
das
jmp
aas
icebp
idiv
dec
mov
fsubr
cmp
sti
pop
jge
outs
aas
cld
or
icebp
in
aas
clc
addr16
push
jg
hlt
out
std
xchg
jg
pop
call
jle
xor
cld
pop
(bad)
movs
das
(bad)
cmc
push
jg
mov
jmp
jl
aaa
jg
cli
pop
std
addr16
xchg
jg
idiv
cwde
aas
loop
cli
mov
xchg
pop
lock
jmp
das
(bad)
rcr
lock
mov
jmp
das
sbb
(bad)
das
jle
(bad)
(bad)
push
lahf
push
sbb
sbb
cmp
das
push
(bad)
mov
(bad)
(bad)
pop
outs
(bad)
stos
jg
xlat
fcos
sbb
stos
jle
mov
call
out
idiv
imul
mov
sti
(bad)
jle
js
or
mov
inc
xchg
xor
sbb
jg
mov
fisttp
sti
cmc
fiadd
icebp
ffreep
sub
adc
mov
push
dec
or
std
xchg
mov
(bad)
fistp
jle
xor
xchg
pop
sti
in
add
pop
test
ja
dec
test
jg
sbb
aad
mov
mov
fsubr
cli
jne
jmp
loop
adc
std
or
arpl
jns
push
pop
stos
arpl
iret
call
arpl
mov
dec
clc
jne
mov
out
sub
out
cld
push
push
aas
repz
fistp
mov
repnz
inc
out
push
sar
pop
inc
(bad)
lods
inc
scas
(bad)
mov
sbb
cld
push
jg
cld
lahf
aas
(bad)
mov
lahf
(bad)
jl
mov
dec
ds
std
jbe
adc
jbe
ja
and
aas
xchg
mov
jnp
hlt
(bad)
std
pop
jmp
imul
mov
(bad)
push
and
outs
inc
test
out
dec
xchg
mov
inc
mov
push
mov
cmc
imul
jg
aas
lds
ja
push
xchg
fsubr
neg
pop
call
jmp
cwde
lea
jg
hlt
test
mov
or
pop
inc
fndisi(8087
cmps
cld
std
pop
idiv
jo
das
sbb
push
pop
retf
aas
(bad)
mov
sub
retf
addr16
(bad)
addr16
pop
out
imul
mov
xchg
or
sar
sub
lods
(bad)
sub
icebp
jg
push
xor
push
jmp
es
xchg
(bad)
sub
std
jg
neg
mov
loopne
pop
not
xlat
test
(bad)
std
fistp
out
fsub
cld
cmp
ds
cmps
(bad)
fdivr
push
xor
cmp
dec
repnz
mov
stc
jmp
mov
dec
push
popf
sbb
mov
mov
lods
lahf
(bad)
pop
add
push
add
cli
(bad)
mov
inc
or
mov
retf
jns
jg
loope
lods
mov
cli
mov
inc
inc
out
icebp
cli
mov
ds
xor
mov
jg
cmps
lea
inc
jp
movs
das
jg
outs
aas
inc
cmp
mov
hlt
mov
std
sbb
fmul
movs
add
jmp
(bad)
stos
aas
sti
mov
push
std
in
in
jmp
bound
xchg
mov
and
sbb
jmp
rcr
mov
pop
push
out
mov
mov
pop
add
pop
cli
ja
data16
jne
dec
dec
mov
xlat
cld
outs
jg
std
in
xlat
push
sbb
in
xchg
out
xor
(bad)
adc
xlat
(bad)
xchg
(bad)
fdivr
(bad)
std
cmps
cmp
adc
int3
xor
pop
icebp
retf
ret
mov
iret
js
(bad)
fiadd
jbe
add
push
or
mov
xor
scas
xchg
cld
xlat
mov
cld
out
cli
xor
(bad)
jnp
pop
call
cli
xlat
cld
xor
loop
stc
xor
cwde
mov
pop
inc
repnz
call
outs
std
imul
xlat
stc
std
(bad)
fst
lahf
mov
mov
push
jg
dec
mov
dec
inc
std
out
imul
mov
(bad)
in
mov
popf
lds
(bad)
in
std
xlat
cld
inc
jmp
lahf
idiv
jno
lock
jle
jmp
mov
aas
in
clc
mov
mov
out
(bad)
out
jg
(bad)
(bad)
jmp
jle
(bad)
(bad)
int3
jle
fstp
out
cmp
(bad)
movs
repz
aas
(bad)
pop
push
jmp
jecxz
push
pop
cld
or
in
pop
clc
out
loope
pop
repnz
std
movs
fisttp
fcmovu
call
jge
jg
int
(bad)
(bad)
pop
cli
fidivr
mov
call
scas
cmc
push
jg
ret
push
(bad)
jae
jmp
dec
jle
fild
lds
ja
push
jg
mov
(bad)
mov
repnz
in
push
icebp
std
jbe
xor
fcmovnu
loopne
std
jne
aaa
loop
pop
out
and
fdivr
jmp
outs
mov
xchg
sbb
hlt
ja
or
ja
inc
jmp
pop
neg
sar
jb
into
add
xor
add
jno
pop
sti
xchg
mov
cli
sbb
outs
pushf
adc
and
imul
pop
xchg
mov
jg
cli
in
sub
loopne
adc
sar
xlat
cli
div
cmp
adc
(bad)
in
aas
xlat
xor
xchg
push
lods
fdivr
jg
sbb
outs
cli
(bad)
call
jecxz
loopne
inc
sub
jle
sbb
inc
(bad)
aaa
jecxz
mov
xor
shl
std
sahf
dec
mov
lds
mov
xchg
pop
js
mov
pop
loop
pop
jp
xchg
jmp
lods
ss
inc
ins
clc
aaa
push
mov
cli
retf
fwait
inc
out
fadd
push
mov
clc
call
jg
jle
aaa
shl
dec
icebp
imul
fbld
and
cwde
(bad)
push
cmp
lea
fcmovne
rol
mov
dec
sbb
dec
int
iret
xchg
std
neg
aas
and
in
dec
repnz
cmp
pop
sub
add
jae
cmp
stc
mov
cld
cld
fcmovu
enter
add
jg
out
pop
ins
jle
aam
pop
test
scas
fidivr
jle
outs
fs
push
jp
push
jmp
add
dec
add
aam
(bad)
pop
leave
retf
scas
idiv
bnd
das
add
repz
out
jl
repz
and
repz
xchg
cwde
setl
(bad)
scas
mov
sti
cmc
mov
jae
xchg
pop
mov
ds
pop
jle
repnz
mov
xchg
xchg
fwait
call
add
repz
pop
std
mov
hlt
sbb
push
jg
jmp
pop
std
mov
daa
or
xchg
mov
imul
(bad)
(bad)
clc
in
fisttp
dec
jg
xor
shr
dec
mov
(bad)
cmp
clc
ja
test
inc
clc
rol
ret
outs
mov
sar
data16
cmc
cmp
loope
call
cmp
fld
add
xlat
mov
imul
les
cmp
add
push
sub
mov
pop
(bad)
scas
jg
loopne
jnp
fcmovu
stc
(bad)
call
sbb
dec
cld
sbb
neg
test
push
cmp
loop
ret
cmp
data16
or
adc
pop
pusha
mov
mov
cld
inc
scas
call
(bad)
jne
out
mov
cmp
(bad)
mov
sbb
add
jbe
cli
lea
xchg
enter
jmp
imul
outs
movs
mov
jmp
ja
or
lea
jecxz
adc
call
xchg
gs
jge
pusha
cmp
cmp
add
jl
in
aas
hlt
jg
jne
or
fdivr
cwde
mov
repz
(bad)
fdiv
(bad)
jge
xchg
ret
call
outs
add
cmp
mov
repnz
inc
sub
imul
cld
outs
cli
ja
inc
jg
call
(bad)
xor
cmp
stc
stc
(bad)
xchg
(bad)
mov
mov
mov
jb
in
aas
hlt
aas
stc
cmc
jg
jg
paddw
xchg
aas
push
push
ja
sbb
jmp
(bad)
mov
icebp
ins
test
jnp
daa
and
jmp
aaa
arpl
jnp
(bad)
mov
call
jl
fldenv
xchg
jle
mov
cli
ins
and
jnp
jp
test
mov
jg
or
dec
std
jmp
hlt
fisttp
mov
lea
das
icebp
(bad)
jmp
call
jp
sbb
mov
pop
jnp
cld
mov
inc
dec
ror
(bad)
mov
repnz
xor
(bad)
test
jmp
call
adc
je
sar
mov
mul
(bad)
xor
std
(bad)
aaa
add
mov
aam
mov
dec
mov
(bad)
arpl
test
(bad)
rol
sahf
jg
mov
cmps
mul
mov
imul
pop
mov
jmp
push
movs
lods
aas
loopne
cli
xor
es
data16
hlt
addr16
pop
pop
enter
jnp
mov
mov
jg
scas
(bad)
inc
out
cmc
mov
lods
ror
shl
(bad)
cld
jecxz
mov
cmp
das
(bad)
xor
jg
retf
adc
dec
nop
test
push
call
fwait
dec
scas
fsubr
xlat
std
mov
sub
cli
dec
mov
add
sbb
aaa
std
ret
jle
pop
fwait
push
mov
xchg
in
lds
fist
aas
jle
fcomip
ud0
sti
xlat
jle
jns
pop
jge
inc
into
mov
dec
(bad)
loope
jg
mov
arpl
and
in
cmp
(bad)
mov
pop
pop
jg
sub
icebp
mov
sar
(bad)
jle
pop
push
std
ret
jle
fcomip
xlat
in
dec
in
jg
pop
push
push
jnp
push
lahf
sub
notrack
gs
out
ret
sub
es
xor
loopne
ss
sbb
(bad)
jg
aas
pop
push
out
imul
pop
jae
adc
jns
cmp
sahf
movs
add
fisttp
test
mov
or
(bad)
clc
out
outs
pusha
(bad)
clc
arpl
fwait
(bad)
(bad)
(bad)
jle
push
sar
in
xchg
fist
rcl
jg
lahf
adc
add
call
data16
leave
aas
call
jo
arpl
popf
adc
xchg
retf
push
xor
iret
jg
imul
outs
cld
xlat
xor
xor
push
int
mov
pop
out
xor
idiv
aas
dec
mov
xor
inc
mov
sub
add
mov
cmp
call
and
pop
dec
cmp
jbe
mov
popa
xchg
mov
dec
call
loope
cmps
adc
jne
inc
ins
iret
dec
ss
pop
stc
pop
mov
jge
fcmovne
xchg
bswap
(bad)
call
(bad)
sbb
mov
out
out
(bad)
std
jg
fld
hlt
imul
jmp
or
sar
jg
cld
in
pop
sbb
(bad)
aas
retf
pop
add
mov
aas
out
ja
test
mov
(bad)
mov
sahf
dec
scas
jg
inc
mov
out
(bad)
jns
neg
cli
in
pop
jg
mov
in
jmp
jg
fstp
or
std
sahf
in
fdivrp
xchg
sbb
data16
cmc
jle
enter
cmc
jmp
sbb
call
fcmovnu
cli
idiv
jg
scas
stc
or
jmp
popa
mov
add
pop
idiv
lock
pop
(bad)
enter
(bad)
(bad)
dec
jg
cmps
test
mov
and
adc
dec
and
stos
call
imul
xlat
pop
inc
push
outs
std
iret
adc
cld
outs
std
pop
xor
icebp
aas
mov
cli
cld
in
jle
shl
out
jecxz
mov
cmp
sub
aas
(bad)
cmp
mov
test
mov
popf
cld
xchg
fsub
mov
jnp
(bad)
idiv
mov
clc
(bad)
out
iret
or
jg
(bad)
adc
test
mov
jl
mov
std
cmp
mov
pop
aam
mov
mov
jmp
pop
sti
por
imul
(bad)
push
cld
jmp
sahf
ret
mov
cdq
lahf
push
fs
sub
in
jg
(bad)
dec
inc
test
inc
mov
xor
push
repnz
out
cmp
imul
jnp
imul
jg
cmp
test
cli
pop
aas
and
(bad)
lods
pop
jle
sbb
mov
bound
xchg
inc
mov
out
cmp
call
inc
pop
idiv
out
outs
enter
and
int
outs
fwait
push
push
fadd
outs
cli
xchg
sub
sub
aas
hlt
pop
dec
inc
lahf
outs
inc
lods
test
xlat
clc
inc
push
cld
std
lock
arpl
mov
jle
lea
push
hlt
jg
aaa
cwde
aaa
adc
outs
jmp
xchg
jmp
in
leave
jg
pop
dec
pop
iret
mov
std
cmp
cmp
out
dec
sbb
mov
(bad)
jge
jecxz
cmps
(bad)
dec
push
mov
or
adc
idiv
add
adc
fimul
aas
inc
dec
cld
arpl
hlt
jg
call
mov
ret
and
xchg
jnp
rcr
cli
mov
lods
rol
mov
stc
movs
inc
inc
jg
or
movs
psubw
std
outs
pop
fxch
cmp
cli
mov
push
es
inc
add
fistp
(bad)
ds
mov
std
mov
test
lods
dec
and
pop
js
dec
jecxz
fidivr
test
jl
dec
mov
cld
out
neg
retf
xchg
aas
cli
xchg
stc
dec
fdivrp
jecxz
out
aas
cli
fstp
shl
fisttp
inc
scas
jmp
loope
jg
mov
and
ja
pop
jo
(bad)
mov
jmp
(bad)
jle
pop
fisttp
jg
push
push
jecxz
clc
or
push
int3
xlat
sub
jns
scas
jl
pushf
xchg
dec
inc
call
mov
out
pop
cli
ja
call
mov
or
jmp
sar
cmp
ja
fmul
lahf
std
push
int
sar
cld
out
cmp
lock
(bad)
popf
mov
inc
loop
add
icebp
outs
jae
stc
pop
std
or
jg
ud0
(bad)
addr16
lahf
(bad)
outs
mov
cld
cmp
fwait
(bad)
pop
call
add
cmc
dec
jmp
mov
call
out
jle
pop
jecxz
stc
dec
jg
jg
cld
aaa
(bad)
addr16
jg
mov
or
(bad)
adc
lock
into
xchg
add
sub
adc
(bad)
push
repnz
pop
jle
adc
fcmovnu
push
and
add
into
mov
xchg
loop
lods
outs
call
mov
(bad)
mov
daa
and
cli
clc
aaa
and
cld
mov
lock
mov
or
sub
xchg
xor
adc
ins
std
xchg
xchg
mov
popf
aas
test
mov
mov
fsubrp
mov
int3
out
jg
pop
(bad)
out
(bad)
out
(bad)
mov
mov
clc
(bad)
imul
(bad)
fstp
mov
clc
xor
(bad)
pop
pop
cmp
imul
js
adc
(bad)
addr16
fistp
ins
jbe
stos
inc
push
div
push
sar
psubb
loop
pop
mov
pop
enter
lock
fadd
cld
lock
cld
jp
jle
ret
or
mov
std
cmp
push
cmp
jbe
outs
ficomp
sub
jmp
out
leave
jns
std
std
aaa
clc
mov
out
mov
dec
jle
repz
clc
in
fnstsw
xchg
cmp
ds
jg
aas
sar
jg
std
in
cli
jecxz
(bad)
sbb
jmp
std
dec
jmp
sti
ja
sbb
call
scas
int
ss
add
push
repz
shr
stc
in
aas
cli
xlat
in
iret
(bad)
fdivr
pop
xor
(bad)
dec
jbe
outs
inc
(bad)
mov
ret
ret
scas
cmps
shl
mov
cld
push
fdivr
jg
fwait
call
inc
push
mov
xor
leave
stc
mov
cmc
(bad)
pop
(bad)
in
mov
clc
stc
pop
cld
sbb
loop
in
(bad)
xchg
je
mov
(bad)
aas
inc
mov
imul
mov
adc
neg
std
lahf
jmp
xchg
(bad)
ss
pop
jle
cmps
scas
(bad)
jmp
rol
stc
repz
ret
lahf
(bad)
stc
scas
imul
ja
fndisi(8087
iret
pop
rep
iret
lahf
mov
cli
out
jns
cmps
jmp
mov
cmps
push
int3
dec
sbb
push
pop
xchg
cdq
cmp
xor
ret
call
or
sti
xor
push
lods
jg
into
out
pop
pop
push
pop
mov
inc
push
cmp
cmp
xchg
dec
call
ja
cdq
iret
cmp
(bad)
cmp
xor
addr16
bound
inc
es
bound
je
into
or
mov
mov
aaa
int
mov
sti
pop
sub
cld
fdiv
jl
je
mov
in
test
outs
loopne
sti
pop
sbb
std
mov
popa
pop
jmp
cmp
loop
loopne
sub
jne
je
adc
pop
cmp
xchg
dec
pop
test
pop
call
out
jae
xor
pushf
nop
dec
in
xchg
lock
cld
cwde
popa
(bad)
fimul
aaa
inc
jg
fs
dec
add
xchg
jmp
sti
jg
jg
(bad)
std
sub
fidiv
push
cmp
inc
mov
fwait
(bad)
icebp
jg
or
mov
loopne
and
(bad)
out
dec
and
jg
jg
repnz
nop
jle
mov
shl
cli
mov
retf
rol
sbb
lds
cmp
aas
add
(bad)
popa
push
sbb
cmp
sbb
aad
hlt
pop
sti
mov
jns
adc
popf
mov
pop
in
(bad)
icebp
lock
cli
ja
fcomp
jne
es
sub
cld
xchg
mov
test
test
mov
or
cmp
(bad)
jmp
mov
test
shr
in
pusha
add
mov
cmps
scas
cdq
sar
mov
push
(bad)
sub
call
jle
jmp
std
scas
icebp
stos
sti
in
mov
ins
pop
pop
inc
fbld
mov
out
xchg
mov
jmp
(bad)
aam
repnz
hlt
in
aaa
nop
out
and
in
retf
pop
inc
mov
fs
ss
outs
loopne
mov
dec
fdivr
lock
cli
sub
mov
js
mov
repnz
sti
out
std
pop
push
adc
jmp
add
out
(bad)
iret
sahf
loop
aas
out
ja
leave
jg
mov
cli
lods
xor
aas
sahf
xchg
push
stos
sbb
out
cld
outs
cld
das
(bad)
xor
ret
inc
nop
dec
stc
out
fstp
shr
jbe
dec
std
dec
aam
mov
lahf
cld
(bad)
jg
dec
dec
idiv
fstp
xor
iret
(bad)
push
dec
int3
xchg
pop
(bad)
(bad)
repnz
sti
test
in
pop
and
popa
ins
or
jg
(bad)
sbb
push
cli
mov
nop
out
(bad)
(bad)
jne
(bad)
aas
adc
pushf
gs
pop
into
data16
fs
in
aas
std
xchg
test
std
jne
in
paddd
inc
fist
hlt
mov
mov
std
sbb
iret
out
jle
mov
jg
mov
stos
out
pop
lods
clc
xchg
sti
sub
pop
cld
push
inc
xchg
loop
out
adc
sub
adc
outs
mov
call
dec
enter
pop
inc
fwait
push
mov
clc
mov
test
cmp
jae
iret
inc
xchg
pop
repz
mov
adc
jmp
out
cmps
and
daa
out
jg
aas
in
scas
pusha
adc
out
push
outs
cli
xchg
cmp
pusha
jg
and
out
or
out
stos
jge
pop
test
div
xchg
mov
leave
std
adc
adc
(bad)
out
fistp
sti
mov
rcr
xor
xor
retf
add
es
jle
push
sahf
(bad)
xchg
ret
out
ret
outs
aas
addr16
dec
cld
(bad)
sti
xor
or
jl
int
cmp
jecxz
pop
aam
push
cld
or
jne
enter
jle
cli
sti
iret
push
movs
les
add
or
inc
repnz
mov
nop
adc
jecxz
stos
jge
js
paddw
out
mov
hlt
out
clc
cmp
(bad)
mov
sub
fsubr
outs
lock
(bad)
lahf
fld
dec
cmps
js
(bad)
sti
mov
mov
(bad)
aaa
pavgb
pusha
inc
jno
icebp
fist
sbb
daa
fucomp
jo
sbb
sbb
jg
jg
jnp
xlat
push
inc
or
popa
test
or
call
(bad)
cmp
rcl
cld
pop
outs
(bad)
pop
in
jmp
(bad)
out
sbb
in
mov
add
(bad)
jmp
xlat
mov
cld
sbb
outs
inc
mov
mov
inc
jg
out
div
xchg
jg
(bad)
cld
xor
scas
arpl
stc
mul
pop
movs
sbb
jmp
xchg
cmps
pop
sar
jg
outs
call
(bad)
call
add
inc
or
aas
jg
div
xor
idiv
xlat
out
dec
mov
mov
cwde
jg
sar
sub
pop
mov
mov
dec
cld
std
pop
std
ds
das
mov
jmp
(bad)
pop
and
jg
or
lahf
stc
pop
call
xchg
lea
rol
call
scas
stos
xor
sub
repz
repnz
(bad)
push
add
scas
cli
movs
push
out
ret
adc
jle
out
mov
cmc
aaa
out
dec
mov
fwait
cmp
jg
sar
mov
popa
inc
adc
add
xlat
push
cwde
clc
sti
mov
mov
cmp
or
aas
leave
ret
sahf
dec
repz
loop
pusha
mov
jg
arpl
repz
mov
jmp
(bad)
aas
and
inc
push
out
adc
jmp
jg
test
daa
mov
test
out
mov
fdivr
cmp
(bad)
jg
(bad)
sti
ja
pop
retf
xor
rol
aas
gs
stc
cmps
cmp
(bad)
sub
out
mov
cld
aaa
cmps
sar
jg
jl
repz
push
add
lock
js
and
loopne
dec
add
ret
adc
repnz
or
ja
iret
icebp
idiv
(bad)
fist
stc
outs
jns
jmp
mov
or
xor
inc
std
mov
sub
mov
ja
in
enter
jns
cld
inc
or
ins
icebp
stc
sub
icebp
stc
int
lahf
sbb
dec
test
xchg
sbb
std
cld
push
pop
aas
call
jle
mov
fisttp
stc
in
mov
lds
cmps
call
das
sbb
dec
inc
(bad)
lahf
cmp
call
mov
cld
lahf
popf
dec
repz
and
das
sub
mov
call
(bad)
jmp
std
outs
push
(bad)
jmp
sar
add
lahf
icebp
add
dec
push
clc
pop
or
rol
sbb
pop
lahf
sti
lock
fnstsw
(bad)
loope
clc
mov
cmp
jmp
cld
fisttp
out
sub
popf
adc
mov
jmp
adc
mov
push
mov
jg
paddd
lock
jnp
int
adc
inc
or
mov
scas
jle
test
fwait
pop
clc
mov
adc
dec
or
lock
test
jnp
jl
pop
test
mov
(bad)
cmp
hlt
mov
jmp
jbe
in
dec
and
pop
enter
mov
(bad)
mov
cld
sbb
stc
mov
jecxz
(bad)
jmp
ror
jg
into
sar
mov
xchg
loope
inc
(bad)
pop
(bad)
sbb
imul
clc
out
out
inc
sbb
(bad)
jmp
in
mov
std
std
inc
jbe
(bad)
mov
fistp
sti
mov
sar
jg
cmp
cld
sbb
call
scas
or
jg
not
add
inc
fwait
pop
int3
icebp
jmp
and
add
aas
sub
sti
jne
sbb
stc
rsqrtps
jae
cmp
nop
cmp
fs
pop
fst
mov
jp
jg
cmp
sub
clc
hlt
mov
dec
mov
cmp
cmp
jle
imul
enter
jl
neg
xchg
movs
pop
jmp
das
adc
jmp
xchg
div
jnp
pop
cld
cmp
mov
outs
fcmovne
out
in
cmc
repz
aas
inc
movs
jmp
(bad)
sub
out
loop
mov
cmp
(bad)
push
jg
sbb
enter
stc
movups
jg
test
xlat
sbb
repz
dec
and
dec
outs
add
ret
scas
loope
dec
add
repz
std
sar
jae
iret
fsubr
addr16
cld
jge
ror
adc
out
sar
lods
pusha
add
inc
loopne
(bad)
jmp
mov
repnz
rcr
enter
sar
das
push
enter
ror
cwde
cmp
push
dec
test
pop
aas
out
movs
lahf
lahf
mov
clc
xor
mov
push
clc
jg
ret
xlat
jno
inc
push
(bad)
pop
in
inc
xchg
sub
mov
or
test
push
jns
idiv
xor
loope
(bad)
jmp
test
std
(bad)
push
(bad)
movs
stc
fbld
pop
das
sbb
(bad)
mov
sub
stos
push
arpl
dec
mov
jmp
(bad)
lahf
and
call
or
fisttp
call
push
clc
call
jg
pop
ret
jecxz
jl
pop
std
xchg
or
iret
mov
jmp
(bad)
lahf
and
call
mov
(bad)
aas
(bad)
pop
jp
scas
std
jno
jmp
inc
imul
xchg
pop
stc
das
adc
jg
test
daa
sub
jg
and
dec
or
ins
add
cmp
clc
jns
ja
mov
(bad)
jmp
in
out
scas
repnz
sti
stos
movs
mov
(bad)
jle
div
outs
imul
std
cmp
mov
(bad)
scas
jle
fistp
std
dec
push
out
in
cld
fwait
add
jle
pusha
(bad)
xor
xor
and
fidivr
cmps
call
pop
test
jmp
or
out
repnz
pop
add
xchg
test
(bad)
scas
sbb
xchg
xchg
aaa
adc
push
add
std
push
jg
ret
sub
jg
cmp
or
jmp
loopne
data16
jg
clc
call
push
sbb
std
push
pop
sub
jg
ret
cmp
call
jmp
push
clc
call
ret
daa
retf
mov
shl
sar
inc
(bad)
xchg
cmp
call
out
test
dec
and
daa
out
test
jecxz
out
(bad)
jmp
pop
cwde
call
cwde
mov
sub
fild
inc
or
mov
and
cmp
jmp
iret
xchg
cmp
ret
(bad)
jmp
std
(bad)
mov
ja
xor
(bad)
xor
sar
aaa
sar
xor
xlat
into
xor
dec
aad
lods
jecxz
scas
sub
dec
cmp
or
jg
imul
jbe
push
clc
sti
mov
call
xor
daa
cmp
inc
lahf
xchg
or
imul
mov
push
xchg
or
stc
mov
adc
xlat
mov
cmc
pop
cld
pop
xchg
inc
ins
scas
call
sub
mov
(bad)
pop
icebp
shl
pop
sub
sub
mov
jecxz
add
loope
(bad)
jmp
adc
es
(bad)
mov
popa
dec
in
mov
repz
cmp
scas
fild
lock
jle
(bad)
jecxz
(bad)
stos
pop
test
sbb
mov
adc
xor
dec
clc
pop
or
aas
jg
fcomip
psubq
jg
es
inc
aas
mov
hlt
arpl
std
xchg
call
pop
inc
aas
jle
cld
cli
pop
ror
jg
ja
cld
pop
std
mov
jae
cmp
iret
aas
loopne
xchg
lahf
mov
pop
(bad)
mov
repz
jg
stc
jns
enter
xchg
lahf
pop
mov
cmp
mov
and
sbb
pusha
call
(bad)
push
std
aaa
repz
fwait
leave
sar
outs
retf
xchg
jg
jge
(bad)
jnp
shl
xchg
adc
lds
call
inc
(bad)
in
add
pop
or
xor
ins
xchg
xor
ins
or
jmp
push
cld
push
loopne
fwait
or
(bad)
(bad)
xchg
out
adc
push
dec
sub
sbb
and
(bad)
push
mov
in
outs
retf
jmp
dec
cli
stos
ins
jg
in
out
not
(bad)
jle
out
iret
test
fisttp
sar
jmp
enter
sbb
add
mov
enter
inc
or
jo
popf
pop
jl
pop
std
push
mov
enter
add
jg
cmp
jae
cdq
test
(bad)
push
dec
test
jnp
enter
stc
not
mov
adc
sbb
int
fs
xchg
sbb
nop
pop
(bad)
jecxz
mov
clc
fbstp
push
cld
(bad)
jnp
call
iret
cs
popf
jecxz
fwait
out
out
ret
(bad)
cwde
sbb
test
pop
jp
mov
cmps
mov
xor
aas
sub
jg
inc
je
ja
xchg
mov
cmc
(bad)
jno
jmp
mov
(bad)
jmp
not
leave
mov
xchg
aas
dec
cmp
mov
xchg
icebp
jmp
dec
retf
repnz
loopne
inc
add
(bad)
(bad)
rol
ja
loopne
sar
loopne
in
(bad)
jmp
mov
sbb
cmp
std
(bad)
sbb
call
shr
ins
pop
mov
inc
lahf
aas
sti
loopne
or
cmc
addr16
loopne
or
gs
mov
js
int3
mov
retf
or
addr16
cmc
(bad)
loop
call
jg
jecxz
shl
div
mov
call
mov
scas
adc
lock
push
mov
ss
jg
loopne
(bad)
addr16
jg
test
(bad)
pop
dec
push
stc
jae
in
cmp
ja
sub
jmp
retf
cmc
aaa
mov
sbb
fsincos
jae
cld
repz
sar
jg
out
sbb
ins
dec
outs
xchg
dec
jns
(bad)
(bad)
std
(bad)
bound
mov
inc
pop
data16
add
jno
hlt
pop
xchg
jp
shl
cwde
(bad)
fisubr
xor
jg
cmp
cwde
ja
arpl
or
mov
test
lock
pop
les
jl
sbb
mov
out
aas
cli
xlat
stc
(bad)
fcomp
ja
xor
jg
stc
cli
aaa
ret
xlat
mov
(bad)
stc
out
jge
(bad)
nop
jg
fisttp
cmps
repnz
(bad)
std
jg
(bad)
jae
jnp
dec
dec
fcomip
xlat
cmp
mov
fstp
or
xor
xchg
(bad)
mov
jg
jns
pop
std
retf
hlt
xor
cld
mov
mov
jg
aas
cld
mul
adc
aas
(bad)
mov
lock
sbb
scas
scas
or
(bad)
mov
jmp
outs
fwait
in
fcomip
mov
addr16
xor
(bad)
mov
sti
cmp
ins
push
jmp
jmp
std
in
cmc
stos
fild
and
sbb
inc
(bad)
mov
(bad)
stos
jg
dec
fcomp
test
xchg
sbb
fwait
push
add
jle
pop
push
and
dec
mov
shl
fstp
aas
neg
xchg
movs
jbe
jmp
(bad)
cli
pop
xchg
dec
shl
out
iret
and
outs
jg
push
out
in
std
fistp
ss
loope
not
stc
ret
inc
jne
fucomip
fdiv
mov
mov
(bad)
jmp
inc
int
cmps
pop
jge
sbb
dec
stc
std
aas
loopne
out
jecxz
push
adc
add
popf
or
ss
cli
pop
popf
xchg
and
mov
(bad)
cmc
out
std
inc
push
add
(bad)
adc
call
std
lods
in
daa
jg
sub
push
inc
and
enter
mov
out
inc
shl
js
push
push
psllq
call
in
aas
mov
cli
arpl
jbe
add
jno
cmp
jg
pop
pop
and
xchg
cmp
in
ffreep
hlt
cmps
pop
inc
jbe
cdq
lea
outs
call
or
dec
jg
jg
stos
out
outs
cli
xchg
lock
in
xor
add
aam
rcl
or
or
hlt
mov
mov
sbb
pop
sbb
mov
mov
cmps
(bad)
arpl
push
jo
pop
jle
mov
lahf
data16
aam
stc
test
mov
paddd
(bad)
sub
mov
scas
retf
inc
clc
adc
mov
pop
cld
pop
cli
add
dec
std
aaa
or
sbb
mov
test
mov
cld
imul
sub
adc
sbb
mov
inc
cld
(bad)
in
add
repz
mov
ins
mov
fdiv
xor
nop
jmp
and
dec
clc
or
push
xor
push
push
cmps
fwait
mov
dec
inc
std
sub
mov
adc
outs
icebp
mov
das
outs
jmp
outs
dec
neg
pusha
(bad)
fld
inc
addr16
imul
mov
enter
lods
jnp
in
jecxz
add
xor
dec
pop
(bad)
fiadd
popf
stc
xchg
mov
ret
xchg
aas
pop
sti
pop
dec
mov
iret
jle
jmp
cli
scas
jle
out
into
bnd
int
iret
loope
dec
out
into
int3
cld
xor
xor
mov
icebp
addr16
aas
(bad)
lahf
sbb
jmp
jmp
jae
mov
cli
inc
sbb
push
push
out
push
in
enter
in
sbb
add
ret
(bad)
leave
(bad)
inc
jmp
ret
(bad)
xchg
push
pop
lods
ins
sbb
lahf
not
mov
xor
loopne
add
sub
cmps
jg
das
push
dec
adc
sar
jg
mov
ds
aas
xor
(bad)
cmp
cwde
(bad)
stc
dec
push
jg
xlat
or
clc
mov
hlt
aas
lods
xchg
outs
cli
ja
jno
jmp
jmp
sub
cmps
jg
pop
out
jge
daa
push
mov
jg
jg
push
sub
std
mov
pushf
aaa
xchg
xchg
inc
add
repz
cld
xor
push
inc
sbb
sub
pop
and
mov
scas
idiv
not
cld
int
pop
stc
neg
cld
(bad)
std
push
mov
inc
loop
js
aas
xchg
mov
ret
dec
call
push
xchg
push
mov
or
mov
int
add
imul
(bad)
stc
cmps
test
xlat
jecxz
mov
std
cmps
jg
mov
mov
std
rcr
sti
daa
jg
fisttp
jmp
das
xor
std
lea
aas
cli
pop
sub
(bad)
cmp
hlt
aaa
shr
repz
xlat
stc
mov
clc
xlat
rol
mov
clc
lea
aas
cli
pop
jbe
xchg
in
es
jmp
imul
cmp
jo
push
shl
and
gs
inc
(bad)
out
or
stc
and
mov
mov
fcomp
sti
dec
dec
pop
out
xchg
mov
fwait
(bad)
popf
outs
jle
jge
shr
clc
xor
dec
(bad)
fstp
cmp
dec
ret
and
(bad)
fwait
inc
push
jb
sti
pop
call
out
jg
pop
call
(bad)
ja
hlt
sbb
daa
clc
out
lahf
movsx
jle
jle
push
stc
paddw
jecxz
push
(bad)
popa
lock
sbb
pop
cmp
retf
cmc
lahf
or
jg
add
fs
rol
pop
int3
(bad)
shl
(bad)
cli
or
jno
sahf
scas
out
cmp
sti
push
(bad)
(bad)
ret
clc
mov
pop
jmp
push
inc
test
cmc
ins
repz
stc
jns
fnstenv
inc
mov
jg
lahf
mov
fcomip
imul
cli
mov
retf
(bad)
xor
popa
fmul
in
fstp
jmp
cld
(bad)
imul
xchg
jae
loopne
(bad)
cli
pop
stos
mov
aas
(bad)
aaa
dec
jle
popa
adc
fincstp
js
sub
js
sub
lahf
sbb
(bad)
cmps
into
add
jg
ret
es
and
xor
aaa
std
pop
jmp
cmp
pop
(bad)
in
fbld
repz
stc
add
mov
dec
mov
mov
arpl
idiv
mov
enter
xchg
xchg
add
test
dec
push
aaa
push
lahf
xor
jo
xchg
test
lea
cmp
xor
fist
(bad)
lods
adc
mov
(bad)
icebp
(bad)
retf
sti
jg
pop
xchg
repnz
sbb
loopne
hlt
(bad)
jg
aas
test
call
dec
or
and
cwde
aas
and
inc
daa
add
xchg
sahf
sub
pop
(bad)
dec
or
out
bound
loop
std
mov
push
call
adc
std
jns
es
(bad)
icebp
das
(bad)
out
mov
cmc
out
std
(bad)
mov
jg
aas
push
stos
aas
push
pop
loopne
stc
sbb
mov
xchg
inc
inc
aam
mov
xor
sub
add
xchg
xor
jmp
cld
daa
sahf
(bad)
outs
iret
sar
sub
mov
mov
and
jecxz
push
test
clc
sti
lahf
cli
scas
jle
fist
jg
(bad)
pop
sub
push
loopne
call
out
xor
and
ret
outs
loopne
cli
dec
inc
mov
push
aas
les
mov
mov
std
enter
jge
int
imul
aas
pop
or
int
imul
sbb
ja
(bad)
stc
ret
jle
mov
(bad)
retfw
pop
mov
cmp
sbb
adc
(bad)
mov
xchg
fnstcw
aas
pop
ins
(bad)
jle
mov
cmps
call
or
pop
adc
mov
push
inc
aas
out
sti
dec
or
xor
xor
dec
test
sub
mov
das
jns
inc
loopne
nop
cmp
inc
sub
push
mov
fcomp
aad
sti
pop
cld
sar
scas
mov
in
xlat
xor
aas
iret
(bad)
fstp
retf
jmp
jl
call
es
jecxz
out
sbb
mov
fnstcw
daa
gs
fmul
call
cmp
jmp
test
das
cli
out
lahf
inc
mov
pop
js
mov
out
not
mov
std
imul
sti
mov
retf
test
idiv
js
mov
xlat
cmp
push
mov
(bad)
and
test
(bad)
sbb
dec
or
xlat
jmp
les
clc
pop
xor
(bad)
in
(bad)
fdivrp
sbb
pop
std
fidivr
push
imul
mov
sub
dec
dec
retf
sbb
nop
and
clc
sub
sub
popf
inc
loopne
stc
xor
adc
cmc
pop
push
ror
mov
enter
jle
lds
imul
cmp
push
fild
cli
cmp
xchg
sbb
(bad)
cmc
scas
jae
pop
cli
outs
jg
mul
cmovs
jmp
and
sar
scas
mov
(bad)
mov
pop
inc
hlt
lahf
fsub
jo
jp
loope
mov
movs
sbb
out
adc
push
out
cli
lock
popa
test
lds
cmp
jg
sbb
cmp
outs
xchg
hlt
or
dec
inc
std
lahf
(bad)
lahf
cmp
aas
and
jecxz
dec
pop
out
out
sub
xor
cmc
out
std
imul
cmps
fcomip
out
cmp
idiv
pop
std
sbb
mov
inc
mov
fbld
add
cdq
sub
ret
add
add
sub
lods
cmc
jmp
jmp
xlat
(bad)
clc
pop
sti
mov
(bad)
sbb
or
dec
movs
sahf
jmp
add
scas
(bad)
aas
jl
jg
pop
(bad)
xchg
ud0
shr
or
inc
inc
stc
jmp
pop
(bad)
mov
add
std
cmp
mov
sub
and
outs
inc
dec
cld
popf
outs
(bad)
(bad)
enter
(bad)
in
jg
xchg
fldenv
call
icebp
pop
cli
mov
(bad)
clc
cmp
jg
test
cmp
cmp
cmp
call
pop
jnp
push
jo
jnp
xchg
aas
sbb
loopne
hlt
clc
jecxz
jne
les
nop
(bad)
(bad)
inc
jg
fist
jmp
or
mov
jg
stc
jmp
stc
das
inc
adc
jg
mov
aas
mov
std
mov
mov
adc
ficom
mov
loope
inc
icebp
outs
pop
(bad)
out
stc
sti
mov
cwde
or
xor
sub
cmc
inc
mov
xchg
pop
xchg
es
jg
stc
push
jae
xor
call
cmp
dec
jg
mov
dec
inc
es
(bad)
jg
pop
mov
pop
sub
push
jno
icebp
outs
adc
add
cld
arpl
sub
fs
addr16
mov
std
lods
in
and
pop
lock
sub
(bad)
bound
(bad)
jmp
mov
pop
stc
lods
outs
mov
cmc
repnz
(bad)
imul
iret
test
ficomp
test
cld
out
std
inc
jg
dec
mov
cld
or
out
mov
lahf
out
(bad)
xchg
or
(bad)
repz
mov
dec
cmp
std
out
jg
lahf
adc
pop
std
in
fild
jp
ud0
pop
or
cld
out
(bad)
(bad)
imul
sbb
loopne
jle
jmp
out
mov
clc
iret
ja
hlt
mov
cmp
cmps
inc
mov
mov
fsub
dec
(bad)
sub
inc
adc
scas
cmp
fucomip
call
jecxz
dec
(bad)
and
in
repz
mov
xchg
sub
aas
sbb
cld
push
cld
leave
mov
leave
ffreep
lahf
in
jnp
cld
pop
cld
leave
xor
cmp
ds
cmps
clc
xchg
(bad)
sti
in
loop
sahf
jp
cld
pop
cld
leave
mov
dec
(bad)
and
in
addr16
fnsave
pop
mov
out
push
outs
std
pop
jg
mov
outs
out
lods
mov
push
push
outs
std
inc
rcr
fucomip
scas
mov
jg
cmps
std
dec
(bad)
fild
jmp
in
in
cld
sbb
out
bnd
(bad)
sti
cld
xor
in
jl
jg
and
out
mov
(bad)
mov
fadd
cli
int
stc
mov
sub
sar
fcos
std
pop
push
adc
(bad)
std
xchg
sahf
fild
or
je
mov
and
fdivrp
jg
cmps
or
out
(bad)
sti
mov
ficomp
fisttp
aas
cmp
lods
bnd
in
xlat
loopne
(bad)
(bad)
lods
jg
pop
std
rcr
mov
sub
mov
dec
jg
mov
in
or
sahf
push
outs
std
das
cmps
xor
fist
sbb
mov
xlat
cmp
mov
(bad)
xor
lds
test
iret
pop
lods
imul
jo
retf
jne
and
mov
mov
pop
clc
retf
outs
jp
jg
jno
mov
gs
adc
mov
dec
or
neg
loopne
cli
shr
jmp
jmp
or
fist
add
sbb
call
jmp
sub
rcl
or
inc
loopne
sub
jecxz
pop
retf
dec
jne
loope
and
jmp
(bad)
in
in
rcl
xlat
jg
sbb
div
arpl
pop
lds
jae
cli
gs
(bad)
cmc
add
mov
and
dec
(bad)
mov
dec
shl
in
lahf
and
jle
div
jg
ja
push
std
mov
xor
(bad)
cmp
mov
stc
fstp
daa
call
jg
push
aas
xor
adc
icebp
jecxz
mov
and
inc
pop
call
dec
in
cwde
sbb
outs
outs
jmp
dec
jg
jg
(bad)
out
sti
add
(bad)
in
aas
push
or
pop
and
jg
mov
pop
pop
mov
cmp
add
mov
addr16
xor
(bad)
jle
(bad)
out
cmps
cdq
sbb
mov
scas
and
loopne
mov
lock
push
push
xchg
outs
fld
mov
aaa
mov
xor
scas
push
mov
aas
or
adc
call
add
aas
jmp
cmp
neg
(bad)
pop
xchg
(bad)
jge
dec
mov
pop
idiv
dec
sub
pop
inc
xor
and
fdivr
ja
std
xchg
cld
sbb
scas
iret
mov
jle
cmpxchg
sub
and
pop
xor
(bad)
mov
icebp
imul
call
call
cmps
mov
hlt
scas
sti
addr16
inc
in
test
test
mov
out
das
mov
pop
dec
push
pop
jg
scas
fneni(8087
lea
div
inc
clc
(bad)
sbb
and
jmp
call
push
hlt
xchg
jb
mov
in
xchg
jne
inc
clc
cld
mov
mov
mov
cld
clc
jecxz
aad
(bad)
std
xchg
call
cli
scas
jle
xchg
mov
sbb
cld
push
jg
add
adc
fistp
outs
ret
(bad)
fld
(bad)
(bad)
lods
(bad)
in
pop
cmp
jg
fstp
push
cmp
stc
fnstsw
mov
(bad)
out
or
jnp
(bad)
sub
mov
ds
cli
outs
jg
into
push
jp
mov
icebp
(bad)
std
or
repnz
cld
dec
jg
push
aas
sub
dec
dec
jecxz
dec
out
mov
cld
sahf
int3
(bad)
cmp
aad
adc
adc
std
sbb
push
jg
sub
cli
sti
xor
dec
jns
ret
jl
cmc
dec
jg
cld
enter
cld
rcr
or
ds
(bad)
mov
pop
mov
jg
(bad)
sti
lock
stos
push
(bad)
std
icebp
or
(bad)
rcr
fstp
std
mov
hlt
out
(bad)
fsubrp
dec
sar
scas
outs
sar
add
mov
lock
ins
std
fcomi
pop
dec
xchg
cmp
dec
add
jmp
mov
pop
aaa
test
inc
jnp
inc
call
(bad)
fnstcw
cld
jle
popf
xchg
fmul
push
fsubr
jmp
xchg
xchg
out
mov
js
mov
aam
test
fwait
xor
push
add
mov
hlt
pop
std
outs
(bad)
mov
in
push
ja
fsub
aas
(bad)
mov
loope
not
stc
outs
call
push
push
jp
std
mov
enter
inc
jg
xchg
outs
mov
sub
sar
jbe
lds
sti
sbb
outs
cmps
jnp
push
(bad)
test
loopne
std
pop
add
dec
scas
fwait
imul
(bad)
fwait
adc
xchg
jg
sar
sub
sahf
pop
(bad)
mov
push
jl
test
arpl
(bad)
cmps
add
(bad)
int
retf
jae
push
in
lods
push
pop
clc
outs
jg
fisub
in
mov
iret
xchg
cs
jmp
repnz
cli
cmps
mov
dec
sub
push
popf
loop
fbstp
mov
bound
idiv
cmps
std
pop
jl
sti
pop
aam
call
aaa
mov
out
mov
adc
(bad)
aas
(bad)
out
(bad)
iret
stc
lods
and
xchg
push
add
imul
(bad)
dec
outs
adc
jecxz
push
push
or
dec
cmc
mov
popa
fst
sub
out
mov
cli
call
ja
sbb
(bad)
ss
push
add
adc
jnp
cmp
scas
icebp
sbb
sub
pop
push
cmp
cmp
iret
repz
push
mov
adc
stc
std
in
pusha
xlat
je
retf
rcl
jg
pop
sub
jl
hlt
sub
outs
cmp
clc
push
(bad)
mov
mov
call
mov
es
in
lods
mov
pusha
daa
js
pop
lahf
push
in
push
ja
popa
aaa
mov
stc
iret
std
out
lds
into
iret
mov
mov
and
cld
jle
push
mov
clc
outs
jns
(bad)
jmp
pcmpeqw
push
cmp
pushf
push
cld
fbstp
(bad)
adc
das
xor
popf
add
mov
mov
movs
scas
xchg
jmp
ja
mov
in
adc
cmps
(bad)
das
push
dec
jle
cdq
xchg
mov
dec
cli
imul
mov
es
out
test
mov
retf
pop
add
rol
sar
mov
cmc
dec
out
and
fist
cs
cmps
(bad)
stos
pop
icebp
stos
fnstcw
sub
jg
xor
loope
std
pop
aaa
(bad)
das
movs
(bad)
outs
jp
jle
in
and
enter
sub
(bad)
outs
enter
das
jbe
or
scas
repz
inc
sbb
and
mov
push
or
std
add
lea
out
rol
pop
loopne
hlt
ret
outs
je
std
mov
ins
lock
inc
sbb
clc
cmps
mov
(bad)
outs
cli
sbb
sub
std
cmp
(bad)
mov
test
and
mov
and
mov
out
adc
adc
stos
sbb
and
call
icebp
mov
push
pop
mov
or
outs
rcl
fidivr
sub
dec
cmp
(bad)
lock
xchg
mov
sbb
ret
outs
lock
jae
movs
adc
lahf
jnp
jecxz
xlat
jmp
mov
cmc
mov
xlat
push
sbb
pop
push
imul
sub
fild
mov
fst
in
jp
loopne
push
lods
mov
clc
jmp
icebp
fwait
test
sbb
sbb
std
mov
push
out
inc
fild
fild
cld
sti
lahf
cld
xchg
pop
div
(bad)
scas
icebp
imul
mov
xchg
outs
cmps
aas
mov
aaa
std
add
inc
cli
xchg
test
call
das
sub
mov
jmp
or
fsubr
mov
add
sahf
push
cmp
js
(bad)
sbb
idiv
jg
out
jg
popf
pop
jecxz
and
call
out
push
mov
daa
(bad)
mov
mov
mov
mov
(bad)
sahf
(bad)
mov
outs
lock
(bad)
std
mov
call
xchg
mov
sti
dec
jg
aas
imul
aaa
jnp
(bad)
(bad)
das
(bad)
jecxz
jmp
in
clc
mov
hlt
aas
(bad)
xor
jmp
iret
jg
(bad)
std
stc
scas
std
fistp
mov
xchg
outs
(bad)
(bad)
int3
pop
sti
xchg
mov
sar
call
cmps
outs
jmp
(bad)
aas
cli
pop
dec
jmp
aas
jmp
imul
popf
(bad)
popa
push
cli
ja
fcomip
(bad)
aas
std
stos
sahf
push
pop
mov
stc
xor
sbb
jp
hlt
and
mov
push
outs
dec
dec
repz
not
mov
mov
loop
dec
(bad)
xchg
mov
clc
(bad)
clc
mov
(bad)
fdivr
in
cmp
scas
repz
repz
mov
std
shl
outs
cmc
in
std
jne
arpl
shr
dec
call
xchg
sar
sbb
jge
pop
shr
(bad)
arpl
xlat
ja
out
mov
jle
(bad)
(bad)
jmp
hlt
jmp
cmps
jg
pop
clc
imul
mov
jg
(bad)
std
fwait
(bad)
loope
adc
xor
jecxz
cld
xor
(bad)
mov
das
(bad)
mov
mov
mov
dec
sahf
xchg
cmp
sar
mov
cld
push
jecxz
mov
or
push
das
xchg
sar
fdivrp
imul
(bad)
xor
(bad)
pop
sbb
cmp
xor
mov
jg
das
std
in
jle
neg
fild
aad
(bad)
jg
movs
push
adc
jmp
test
pop
mov
clc
inc
(bad)
mov
mov
imul
aas
neg
mov
xlat
out
int3
stc
mov
mov
mov
(bad)
dec
push
aas
mov
jp
sti
std
push
in
daa
movq
fistp
jle
lock
(bad)
and
sti
lds
or
out
addr16
arpl
std
xchg
hlt
into
cli
idiv
neg
sti
aad
les
cmp
add
jmp
(bad)
out
(bad)
xlat
std
or
ins
jg
mov
mov
inc
push
cld
pop
sub
(bad)
dec
bound
dec
push
mov
jle
aas
xor
scas
jle
(bad)
cli
xlat
std
xor
idiv
and
fistp
fcomip
test
call
cmps
jg
pop
jle
cmp
inc
mov
out
and
std
test
movs
aas
jp
mov
jle
(bad)
stc
jnp
iret
(bad)
hlt
out
cmps
aas
jg
std
stc
(bad)
idiv
mov
jg
(bad)
std
push
call
lahf
jg
(bad)
cld
xor
out
cmps
aas
dec
std
stc
dec
call
inc
cli
repz
lahf
mov
jg
std
cdq
jmp
pop
jmp
sbb
stc
addr16
dec
repz
rcr
ja
out
mov
stc
fwait
cld
mov
scas
(bad)
(bad)
lahf
(bad)
lahf
aas
test
(bad)
push
std
stc
daa
call
(bad)
sub
lahf
call
out
movs
aas
jg
fisttp
(bad)
outs
cli
repz
jg
xlat
lahf
mov
iret
aas
dec
jg
dec
cli
repz
rcr
inc
hlt
out
mov
stc
retf
cmc
out
movs
repz
fwait
call
mov
out
std
stc
pop
jg
fdivrp
repz
cmc
out
(bad)
cld
inc
hlt
out
mov
jg
sar
jl
aas
jmp
push
cli
div
xchg
into
sti
call
out
movs
aas
outs
jp
mov
jle
xchg
(bad)
sbb
dec
jns
dec
cs
stos
int
aam
div
out
xchg
push
mov
jmp
shl
das
es
cmps
outs
or
(bad)
mov
cmp
push
int
stos
repz
aas
cli
jge
out
iret
repz
retf
push
aas
cdq
xlat
dec
push
sub
das
pop
out
fwait
iret
pop
lods
xchg
ins
mov
iret
xchg
out
ds
xchg
mov
sbb
in
out
mov
out
fstp
jg
ficomp
clc
repz
jle
cld
idiv
(bad)
sbb
fdiv
loopne
(bad)
pop
push
enter
iret
sti
ret
push
mov
sbb
sbb
mov
jg
cmps
mov
inc
mov
fdivrp
sbb
mov
and
xor
jg
jmp
inc
lods
hlt
xlat
test
lea
imul
xor
cmps
mov
sti
xor
mov
jg
mov
fstp
jge
inc
aas
or
lahf
into
call
jmp
aaa
sub
lods
mov
imul
icebp
scas
xchg
shl
das
sbb
mov
jmp
clc
xor
int3
sbb
pop
xchg
lea
xor
out
xchg
jle
aam
fdiv
(bad)
imul
fwait
xor
add
or
jne
xchg
gs
hlt
cmp
jns
movs
out
popf
sahf
mov
push
mov
jle
jge
cli
cli
cmc
jmp
cmc
aam
test
mov
push
lods
bound
stc
mov
pop
sub
cmp
ins
xchg
xlat
jecxz
pop
ds
outs
je
mov
pushf
into
cwde
inc
mov
(bad)
jmp
dec
fwait
xor
xor
push
aad
adc
jmp
cs
in
sub
xchg
sar
or
shl
xchg
icebp
or
xor
stc
aaa
dec
loop
icebp
mov
aaa
imul
dec
repz
dec
xlat
jne
iret
hlt
test
pop
arpl
mov
jmp
dec
mov
push
das
ins
mov
sub
in
fist
iret
out
sti
mov
je
hlt
xlat
out
mov
addr16
repz
push
pop
mov
in
addr16
out
fiadd
not
lods
ficomp
sbb
into
into
into
popf
outs
mov
lahf
js
fisubr
xchg
mov
sub
lahf
(bad)
mov
push
in
popf
mov
retf
pop
aas
dec
lahf
std
ficomp
jnp
cli
pop
icebp
neg
fnstsw
xor
sti
sar
imul
call
out
xor
mov
ds
jl
dec
iret
(bad)
xlat
pop
jmp
(bad)
test
(bad)
pop
or
mov
cmp
jmp
and
mov
push
cmps
jns
std
ja
sahf
sub
movs
shr
jnp
retf
aas
dec
call
mov
cmps
in
and
mov
jnp
dec
ret
and
pushf
mov
(bad)
das
iret
(bad)
dec
lahf
xor
xchg
mov
scas
sub
cld
call
cmp
jg
pop
jecxz
push
adc
fwait
add
(bad)
xlat
cld
jecxz
lea
mov
mov
(bad)
(bad)
xlat
cld
popf
jg
pop
repz
xor
and
cld
aaa
(bad)
xor
xadd
pop
jmp
clc
lea
pop
sti
mov
int
sti
xor
rcr
clc
stc
xchg
ret
hlt
out
loop
std
sbb
call
repnz
mov
(bad)
mov
(bad)
mov
icebp
fwait
std
and
add
adc
jmp
repz
cli
mov
(bad)
fucomip
xlat
jl
mov
pop
jecxz
stc
inc
mov
jmp
add
mov
dec
scas
icebp
imul
icebp
jmp
sbb
sbb
jle
repnz
jle
rol
sar
jg
sbb
pop
imul
jp
cmp
fucomip
jns
jg
jnp
in
(bad)
xchg
mov
(bad)
pop
mov
(bad)
mov
scas
shl
iret
movs
mov
mov
xor
push
arpl
jo
adc
sbb
mov
ins
jle
fisttp
xor
cmp
in
mov
jne
(bad)
fist
jo
adc
push
imul
mov
icebp
(bad)
out
cld
jmp
sbb
(bad)
sbb
add
jmp
xchg
aas
sub
(bad)
outs
stc
lods
push
adc
loopne
je
mov
scas
inc
jecxz
inc
mov
dec
inc
retf
xor
rol
test
mov
imul
jg
mov
dec
hlt
repz
ficomp
aas
cdq
xlat
mov
stc
jae
lahf
call
ins
jle
ror
dec
cmp
daa
repz
call
icebp
xchg
iret
loopne
rcr
and
ja
aas
loopne
mov
clc
dec
jg
outs
out
inc
loope
out
iret
test
test
fistp
fcmovb
xlat
jmp
stc
jecxz
mov
int3
idiv
cmp
loopne
xor
popf
scas
push
int3
out
js
fbld
addr16
daa
stc
jg
(bad)
icebp
mov
mov
mov
aas
repnz
cmp
(bad)
aas
dec
cs
je
cli
lock
xchg
pop
jecxz
or
xor
push
(bad)
ror
jg
jle
push
aas
imul
push
dec
outs
cld
aas
std
xchg
ror
aas
hlt
jmp
jle
aas
loopne
fdivrp
mov
jp
xchg
mov
into
(bad)
mov
movs
mov
std
out
out
icebp
pop
cld
out
les
adc
xchg
mov
xchg
mov
out
jmp
jge
loopne
(bad)
out
ss
jae
push
sbb
mov
sahf
scas
pop
stos
out
(bad)
inc
fwait
jecxz
into
jnp
out
repnz
inc
sub
cmps
sub
mov
ret
(bad)
std
idiv
mov
call
jge
inc
push
mov
into
mov
xchg
not
enter
in
jle
pop
add
cmc
dec
in
aas
(bad)
xor
xchg
push
inc
cwde
repnz
xlat
lea
clc
inc
(bad)
fstp
daa
dec
pop
mov
jnp
mov
int
gs
and
repnz
fld
adc
pop
jecxz
mov
sub
mov
(bad)
loopne
jae
mov
out
mov
fwait
mov
loopne
shr
fdiv
mov
mov
pop
stc
mov
jmp
xchg
and
mov
pop
jge
imul
je
cli
xchg
xchg
int
jnp
repz
mov
popf
sub
cld
sbb
sub
jle
(bad)
les
jp
lahf
xchg
sbb
fisubr
(bad)
dec
mov
aad
jno
push
dec
(bad)
in
ins
cmp
repz
jecxz
stc
mov
pop
in
ins
icebp
imul
repz
xor
in
outs
sti
xor
repz
jae
xor
xor
xlat
inc
(bad)
or
mov
iret
into
call
icebp
dec
test
pop
std
imul
mov
jb
lahf
push
cwde
inc
jmp
ror
sub
pushf
pop
call
jg
xor
dec
fbstp
xchg
jecxz
out
cdq
out
pop
jecxz
pop
cmp
aad
cli
jnp
xchg
xor
pop
jecxz
repnz
adc
jnp
outs
dec
loope
je
cli
mov
jp
mov
inc
pop
push
je
cmp
je
inc
das
mov
mov
sahf
mov
push
retf
scas
icebp
mov
fisubr
popf
out
cdq
(bad)
fnstsw
xlat
std
outs
push
mov
out
xor
in
cmps
xor
and
int
out
jmp
xor
(bad)
cmp
ss
das
sub
(bad)
js
jne
out
shl
cmps
cmp
clc
xor
cmc
mov
sar
jmp
shl
cmp
lods
nop
cmp
mov
mov
cld
add
gs
fistp
lar
loopne
jecxz
jle
inc
jmp
pop
jecxz
xchg
cmp
inc
inc
mov
dec
rol
jl
dec
inc
pop
mov
in
aad
lods
popf
shl
sti
mov
cld
xor
ja
(bad)
inc
cmp
(bad)
loope
std
cmp
cs
stc
imul
int3
jmp
xchg
rol
inc
add
dec
enter
out
jecxz
clc
mov
arpl
sub
and
ficom
dec
loop
and
call
pop
cmps
aaa
mov
(bad)
xor
inc
and
sub
(bad)
hlt
sti
pop
pusha
cli
mov
addr16
lea
push
inc
mov
call
aad
shl
div
and
(bad)
in
jg
in
daa
adc
lahf
mov
inc
iret
jmp
sti
inc
jae
lods
nop
aad
loop
clc
xor
jmp
pop
jecxz
clc
xor
fistp
xchg
loope
jno
addr16
inc
outs
jae
popf
jg
mov
lock
repnz
jl
int
jl
mov
xor
xlat
stc
cmp
fwait
mov
pop
mov
scas
lods
(bad)
jmp
(bad)
dec
sar
jmp
fs
test
cs
(bad)
aas
in
mov
mov
push
sti
xor
jg
xlat
clc
std
(bad)
pop
int3
xlat
scas
icebp
sti
cmp
je
xlat
stc
iret
repz
aam
(bad)
ds
mov
jmp
int3
(bad)
jg
sbb
(bad)
jmp
loopne
icebp
pop
(bad)
scas
mov
cmc
dec
cld
stos
lock
pop
cmp
std
data16
sar
jg
in
cld
xor
xor
std
dec
mov
inc
(bad)
out
call
std
cld
addr16
pop
jecxz
clc
in
call
inc
fild
mov
pop
hlt
sti
pop
inc
aas
push
cli
dec
std
(bad)
aas
ror
fucomip
ja
xor
mov
push
les
dec
dec
mov
mov
jg
pop
inc
jno
std
push
cmps
(bad)
and
mov
movs
fistp
cli
stc
outs
sar
out
cmp
jge
iret
jg
(bad)
dec
xor
out
idiv
mov
outs
cli
call
add
(bad)
jno
xchg
rol
(bad)
aas
(bad)
ror
mov
add
ror
pop
inc
(bad)
(bad)
jmp
out
out
dec
xchg
in
xchg
iret
jg
cli
jns
mov
aas
stc
frstor
mov
aas
cmp
hlt
(bad)
mov
jg
lahf
out
push
ret
(bad)
pop
cli
cli
add
out
clc
mov
inc
aas
(bad)
in
ins
rcl
pop
jmp
inc
mov
xor
movs
lahf
fbld
lahf
jle
jmp
in
jmp
aas
dec
inc
paddd
add
daa
mov
lahf
mov
add
hlt
repz
frstor
pop
mov
les
outs
inc
clc
ror
mov
shl
jg
std
cld
cld
cmp
and
mov
and
stc
push
sbb
cmp
out
mov
cld
sbb
mov
aas
mov
call
std
jl
jnp
cld
shr
jg
std
cld
out
jmp
fs
dec
cli
dec
mov
mov
push
test
adc
int
pusha
ror
outs
jg
repz
out
jno
repz
mov
jle
repz
mov
clc
sub
aas
not
jle
dec
hlt
(bad)
aas
or
xchg
lds
sar
jmp
cli
std
mul
test
ror
pop
push
movs
jns
jnp
stc
inc
nop
push
clc
test
cmp
jg
in
jmp
pop
lock
push
lahf
sar
jmp
loopne
aas
jg
loop
clc
xor
lahf
mov
mov
jmp
inc
mov
lahf
call
jns
out
hlt
repz
and
jecxz
ret
out
hlt
repz
pop
sar
out
sub
cld
imul
or
(bad)
aaa
ror
inc
repnz
repz
hlt
repz
xchg
call
hlt
repz
jl
je
mov
es
out
call
std
cld
into
das
es
pop
cli
stc
out
dec
sbb
ror
pop
cld
dec
mov
hlt
sti
lahf
inc
aas
jg
aas
mov
dec
mov
idiv
or
cmc
xchg
popf
icebp
cmp
cld
adc
jle
push
std
xlat
clc
xchg
jmp
xor
(bad)
pop
ror
pop
clc
(bad)
cld
sbb
mov
dec
mov
(bad)
and
xchg
pop
shl
jae
daa
adc
pop
sar
push
loopne
aas
jg
aas
inc
js
aaa
mov
loope
fist
dec
sti
fist
call
cli
(bad)
aas
xchg
out
mul
jle
xchg
jg
int
(bad)
dec
aas
dec
aas
push
(bad)
dec
hlt
repz
std
pop
and
mov
mov
and
aas
push
aas
xchg
(bad)
fsubr
out
jg
mov
cmp
out
push
call
std
cld
adc
out
cwde
(bad)
jns
pop
hlt
rep
sti
repz
call
std
cld
dec
cmc
idiv
mov
repnz
pop
pusha
(bad)
sbb
cmc
repz
rcr
hlt
sti
mov
stc
hlt
(bad)
inc
out
pop
inc
mov
repnz
repz
(bad)
fisttp
lahf
std
lds
clc
popf
jle
(bad)
hlt
(bad)
fisttp
adc
inc
mov
aas
cmps
dec
jle
stc
dec
leave
out
sbb
mov
(bad)
and
stc
xchg
sar
lahf
shr
jg
std
cld
mov
push
mov
jmp
sahf
(bad)
jge
int
out
sub
stc
push
jg
lods
iret
shr
jg
std
cld
dec
jmp
lahf
mov
fistp
js
(bad)
(bad)
out
jg
std
cld
pop
call
inc
and
dec
inc
pop
hlt
repz
xchg
pop
jecxz
add
hlt
repz
(bad)
jmp
dec
aas
inc
cli
call
aas
mov
sti
outs
test
sbb
sar
hlt
repz
sbb
std
pushf
std
xchg
xor
js
jle
jp
adc
add
fwait
(bad)
dec
shr
jg
std
cld
push
(bad)
pop
call
mov
jmp
mov
outs
movs
(bad)
push
cmps
lahf
mov
cmps
fist
pop
sar
jg
int3
cmp
cld
icebp
jg
push
iret
lahf
cmps
(bad)
call
sti
mov
(bad)
stos
inc
jae
std
and
(bad)
mov
ror
fnstsw
pop
and
std
sub
(bad)
sti
add
ret
jg
push
mov
(bad)
aas
(bad)
repz
jmp
cli
stc
lds
inc
cli
stc
psrlq
jg
cli
std
xlat
clc
aaa
jg
pop
mov
jmp
cli
stc
jmp
pop
ret
sbb
cld
imul
and
cmc
outs
retf
out
jg
std
cld
in
call
call
iret
push
(bad)
fucomip
out
cld
out
retf
out
call
std
cld
in
call
jge
pop
xor
cli
dec
pusha
mov
(bad)
jmp
sti
lahf
inc
aas
inc
call
inc
mov
xlat
cli
punpckhwd
add
cmp
(bad)
(bad)
jns
sti
out
dec
aas
addr16
(bad)
mov
mov
ret
mov
(bad)
jmp
sti
aas
inc
aas
jmp
inc
repz
mov
pushf
jle
and
mov
sub
(bad)
mov
outs
repnz
xchg
mov
hlt
(bad)
dec
movs
lahf
jg
std
(bad)
mov
inc
inc
iret
out
(bad)
inc
ins
call
jne
push
mov
jmp
(bad)
das
ror
pop
idiv
jg
cli
cmp
sti
out
dec
aas
xchg
hlt
(bad)
fisttp
xchg
call
(bad)
ja
(bad)
jge
std
xlat
clc
scas
test
std
push
std
mov
cli
call
jge
aas
(bad)
cmp
push
std
das
mov
dec
iret
fucomip
mov
push
cli
stc
jge
dec
jmp
rcr
call
mov
(bad)
push
js
jle
(bad)
rcr
cmp
iret
(bad)
mov
jle
cmp
(bad)
aas
or
jecxz
and
std
cld
(bad)
call
ror
pop
dec
(bad)
(bad)
jmp
repz
arpl
cdq
jle
mov
sti
pop
inc
aas
call
(bad)
aas
inc
mov
outs
mov
sti
aas
inc
aas
call
(bad)
mov
outs
stc
aas
adc
shr
std
cld
pop
call
dec
jg
mov
push
std
call
(bad)
sar
dec
loopne
aas
lahf
std
dec
inc
(bad)
fisttp
(bad)
fisttp
out
dec
fistp
cli
cmp
sti
mov
push
dec
loope
mov
(bad)
aas
ret
mov
(bad)
out
shr
jg
std
cld
lods
jg
rcr
ins
call
adc
ror
mov
jle
xchg
out
dec
(bad)
jg
mov
icebp
retf
mov
js
jle
mov
(bad)
imul
retf
dec
dec
aas
call
dec
mov
fcos
dec
hlt
cmps
(bad)
adc
stc
stos
call
(bad)
jmp
dec
mov
jle
aas
mov
push
call
je
pushf
pop
cmp
cld
out
scas
cmc
imul
hlt
outs
mov
cmp
sub
jl
icebp
stc
retf
enter
std
cmp
mov
popa
out
aas
mov
mov
pop
repz
clc
aas
or
jg
pop
cld
sbb
xchg
pop
repz
clc
sub
out
jmp
xlat
fsub
js
imul
hlt
out
sub
sub
sbb
(bad)
xchg
mov
mov
jge
mov
popf
push
inc
fcomp
repnz
and
and
jg
scas
fistp
jg
psubd
xor
aam
inc
icebp
imul
or
scas
xchg
adc
in
jno
imul
outs
mov
(bad)
(bad)
xor
call
lahf
fwait
test
int
xor
sub
out
arpl
xlat
clc
xor
imul
push
xlat
sbb
int3
adc
sbb
sbb
popa
add
lea
call
(bad)
cmp
jle
fistp
int
pop
shr
push
mov
popa
sbb
push
xchg
hlt
cmc
xchg
ficom
gs
rcr
pop
scas
daa
loopne
arpl
(bad)
loope
ret
std
dec
adc
xor
(bad)
mov
jge
shl
pop
inc
aaa
retf
cmp
es
cli
outs
push
cs
iret
ds
xlat
retf
inc
int
sahf
das
mov
jnp
dec
jmp
test
mov
xchg
xor
inc
sub
xor
cmc
iret
ficomp
sbb
imul
mov
imul
int
lahf
scas
sub
daa
pushf
cmps
cmps
sbb
and
cmp
sar
cli
hlt
sbb
repz
xor
rcl
(bad)
jle
push
(bad)
pushf
sub
std
push
mov
es
sar
ss
inc
inc
(bad)
out
push
mov
jp
aas
mov
scas
sbb
scas
mov
xchg
(bad)
dec
lahf
sahf
mov
xor
clc
lea
hlt
push
std
inc
dec
clc
pop
cmp
or
cmps
(bad)
ficomp
jb
iret
jae
stc
xchg
dec
repnz
stos
in
das
stc
retf
in
lahf
bnd
iret
(bad)
out
outs
xchg
lahf
jg
pop
sub
inc
jmp
xchg
lahf
jg
fild
aas
ja
adc
stc
outs
call
repnz
stc
stc
pop
dec
in
pop
lods
aas
jg
pop
sub
(bad)
xchg
repnz
(bad)
in
(bad)
pop
leave
iret
addr16
repnz
mov
jg
jle
dec
aas
nop
lahf
jmp
push
stc
stc
outs
cld
sub
(bad)
in
sub
loop
xchg
lahf
inc
and
repz
aam
jle
std
stc
das
(bad)
mov
movs
repnz
jmp
fnstsw
movs
repnz
cld
dec
repnz
stc
stc
out
inc
enter
jle
cs
cld
cld
scas
inc
out
jmp
lahf
mov
push
cmp
cdq
cld
jl
pop
retf
iret
(bad)
lahf
xchg
lahf
(bad)
jmp
in
pop
test
xchg
lahf
push
pop
and
aas
call
in
pop
scas
lahf
pop
jmp
dec
in
out
cmp
lahf
jg
into
xlat
aas
repnz
push
cmp
mov
aas
jg
movs
shl
inc
das
std
mov
lahf
outs
jne
pop
sub
aas
out
xchg
lahf
aas
lods
jl
pop
dec
mov
je
cli
repz
mov
(bad)
imul
xchg
sub
mov
cli
repz
aam
std
ja
mov
mov
cmp
cmp
fwait
in
(bad)
clc
aaa
retf
iret
out
inc
bnd
aas
call
mov
icebp
std
cmp
jmp
iret
fild
jne
jecxz
lods
xchg
outs
call
mov
sub
jge
aas
jg
movs
xlat
fild
iret
xlat
aas
sub
push
jle
imul
jl
lock
xchg
push
aas
cmps
jl
movs
repnz
sub
out
movs
jecxz
(bad)
jge
mov
jmp
stc
stc
dec
push
inc
push
stc
xchg
pop
inc
dec
mov
sub
jecxz
sub
cmp
movq
std
and
jg
sti
cmp
(bad)
or
scas
clc
or
out
push
mov
jmp
mov
repnz
mov
cld
push
sub
dec
je
inc
out
movs
aas
(bad)
(bad)
xor
stc
cmps
cld
xor
inc
repnz
stc
inc
in
mov
jg
cmc
(bad)
scas
scas
in
inc
aas
inc
icebp
push
mov
stc
stc
addr16
mov
cld
pop
push
jg
adc
into
out
jmp
std
repz
repnz
sub
call
ds
jg
movs
cld
cld
adc
test
cld
cld
test
or
cmps
aas
push
js
popf
mov
jle
jg
popf
(bad)
ja
xor
out
movs
cld
sti
pop
sub
in
pop
jg
repnz
pop
cs
aas
xlat
lahf
jg
pop
jle
xchg
retf
dec
(bad)
ja
cld
idiv
cmp
repz
push
jge
fucomi
iret
out
test
cmp
stc
iret
std
xchg
bnd
cmp
outs
test
pop
mov
pop
sbb
cld
jmp
fstp
pop
(bad)
jns
(bad)
jg
pop
(bad)
sbb
icebp
dec
imul
call
(bad)
(bad)
xchg
(bad)
std
imul
fistp
cld
and
cli
jne
imul
mov
(bad)
cmc
out
cmps
ins
fldcw
in
outs
hlt
in
pop
repz
pop
jg
cli
loopne
(bad)
cmps
(bad)
(bad)
jmp
loope
aas
imul
(bad)
and
icebp
inc
push
(bad)
mov
int
loop
(bad)
addr16
in
fcomip
outs
(bad)
adc
js
retf
(bad)
jmp
mov
(bad)
and
call
(bad)
jmp
in
es
aas
sti
(bad)
mov
jg
outs
hlt
mov
cmps
in
popf
aas
in
mov
dec
pop
jg
aas
cmc
pop
inc
lahf
adc
hlt
std
outs
jo
inc
dec
cmps
jg
aas
jae
sub
xchg
(bad)
cli
rcr
sbb
sar
inc
jmp
hlt
out
(bad)
std
(bad)
pushf
fdivrp
xchg
(bad)
jmp
lock
fcomp
ja
out
jg
aas
std
pop
call
mov
idiv
outs
jmp
pop
dec
mov
das
push
idiv
cmc
out
or
(bad)
sar
outs
je
pop
call
repz
cld
lods
sti
(bad)
jg
jg
sti
cld
fwait
mov
(bad)
mov
jg
iret
pop
cld
call
popa
xor
stc
cmps
mov
les
mov
push
cli
cmps
mov
out
(bad)
jmp
scas
push
(bad)
cmps
lahf
call
push
nop
cld
loop
pminsw
scas
stc
das
rcl
pop
in
(bad)
push
(bad)
and
sub
cmp
icebp
into
out
aas
hlt
cld
(bad)
cld
xchg
sahf
push
dec
cld
scas
push
icebp
(bad)
std
(bad)
fdivr
cli
repz
mov
dec
arpl
scas
jmp
sti
mov
mov
jge
imul
or
mov
sub
movs
(bad)
cli
mov
xor
jmp
mov
mov
fsubr
scas
fldenv
sub
jmp
or
out
hlt
aas
add
call
loopne
fcomip
lahf
and
cmps
mov
cmps
ja
int3
fucomip
xlat
add
dec
jmp
xlat
stos
fisttp
and
stc
test
xchg
inc
stc
(bad)
mov
(bad)
xor
sub
movs
jecxz
repnz
cli
xchg
(bad)
push
aaa
std
scas
jg
lahf
les
out
stc
mov
jmp
fwait
dec
jns
cmc
scas
std
add
adc
call
icebp
pop
cmp
mov
sti
xor
aas
icebp
pop
mov
dec
fs
xor
mov
dec
jmp
(bad)
jmp
inc
(bad)
jne
cmc
aas
dec
jecxz
jle
pop
inc
shl
ins
neg
(bad)
adc
and
into
pop
add
mov
std
jns
cmc
das
sti
mov
mov
sub
jmp
xchg
xchg
fndisi(8087
retf
jg
sub
fld
mov
iret
mov
cld
pop
loope
cmps
inc
cmps
fldcw
je
inc
inc
dec
mov
cmc
test
repz
jmp
ss
sar
lahf
cmp
(bad)
movs
sar
jmp
retf
aam
jb
mov
dec
rcl
aas
hlt
xchg
inc
mov
push
mov
cmp
inc
dec
pop
lock
call
xchg
xlat
and
in
inc
int3
cmp
les
call
in
fnstsw
inc
cli
lahf
(bad)
jmp
jo
leave
or
mov
cmp
in
mov
xor
or
jnp
(bad)
ds
mov
cmp
aas
lock
xchg
(bad)
jmp
jmp
(bad)
in
out
fs
lock
adc
pop
mov
inc
inc
std
cmp
pop
jecxz
cli
lods
jle
aas
clc
pop
(bad)
pop
fwait
aas
inc
(bad)
loopne
cli
cmps
(bad)
mov
lock
cld
fwait
cld
xor
call
sbb
xor
(bad)
cli
pop
(bad)
pop
rcl
mov
dec
cmp
xor
call
mov
xchg
jle
call
(bad)
mov
(bad)
ins
cwde
lods
mov
cld
push
push
shr
pop
inc
mov
std
call
pop
aas
popa
xchg
(bad)
cmp
mov
aas
icebp
xlat
cli
scas
inc
jmp
(bad)
std
jg
in
ins
std
mov
xchg
(bad)
cli
idiv
or
call
jmp
ud0
inc
push
push
cmp
rcr
and
scas
pop
inc
jl
test
cmp
jg
iret
(bad)
std
jg
paddd
inc
fcomip
aaa
cli
cmp
(bad)
addr16
mov
std
mov
add
retf
adc
(bad)
jns
cmc
lahf
lea
and
(bad)
(bad)
std
aas
mov
int
push
cmp
sar
out
cld
rol
mov
idiv
ret
iret
jg
jg
in
(bad)
(bad)
push
dec
adc
add
imul
push
mov
xchg
cmc
es
std
adc
idiv
arpl
sahf
out
sbb
pop
(bad)
scas
idiv
push
push
lahf
cld
inc
push
sub
pop
call
xlat
jmp
loop
das
pusha
mov
mov
xchg
imul
push
push
movs
std
jno
push
add
jno
fild
pop
dec
jle
push
movs
(bad)
xchg
push
xor
fldz
mov
jg
movs
repnz
cld
jne
leave
(bad)
cli
pop
jmp
cmp
jge
cli
pop
push
dec
inc
movs
push
(bad)
jmp
scas
in
mov
xchg
mov
jge
sar
leave
fist
sar
call
jg
xchg
std
ds
sbb
in
(bad)
inc
ror
ret
jg
mov
xor
inc
jmp
(bad)
das
jle
push
mov
out
je
jmp
pop
jecxz
clc
push
jmp
xchg
(bad)
jmp
(bad)
div
inc
stos
jmp
sti
jno
movsx
(bad)
(bad)
pop
inc
jmp
int
pop
xor
(bad)
(bad)
cmp
dec
jg
jg
movs
xchg
leave
cli
pop
jg
mov
pop
repz
iret
xor
jg
(bad)
neg
scas
(bad)
cmp
cld
stos
mov
call
mov
clc
xor
mov
cld
pop
jg
stc
outs
cli
ja
jae
aas
icebp
pop
dec
sar
dec
es
shl
mov
jg
inc
jmp
jle
jg
mov
(bad)
cld
xchg
jmp
nop
or
pop
retf
in
sahf
inc
jge
out
xor
(bad)
jbe
ja
cmp
cli
scas
sub
imul
xchg
std
cmp
pusha
inc
and
shl
dec
cmp
jmp
cmc
cmp
mov
cmc
pop
stc
xchg
push
lock
xchg
xor
retf
dec
(bad)
std
inc
(bad)
sahf
sbb
fisttp
es
jge
jg
mov
dec
add
and
push
sbb
jg
adc
push
jle
(bad)
(bad)
pop
out
(bad)
jmp
das
fstp
ret
fdivrp
retf
outs
sbb
and
push
jg
mov
push
push
daa
lds
cmps
push
inc
dec
dec
clc
mov
in
test
cld
lahf
(bad)
jmp
cld
pop
clc
js
lock
cli
cld
xlat
dec
xchg
jo
into
call
adc
test
jle
scas
inc
idiv
or
cld
jg
and
cli
jg
jmp
call
cmp
add
(bad)
jmp
aas
movs
inc
lock
cli
mov
cmp
(bad)
in
jg
jle
(bad)
cli
mov
(bad)
paddw
lods
pop
idiv
paddd
daa
jle
jb
dec
inc
jg
xlat
movs
mov
stos
pop
mov
inc
popa
shr
std
dec
popa
movs
(bad)
xchg
pop
je
iret
pushf
std
sar
adc
xlat
clc
scas
jg
jnp
mov
mov
mov
push
fnstsw
test
jmp
fild
nop
sub
test
cmc
mov
sbb
mov
clc
pop
iret
mov
lods
mov
jmp
cmc
fwait
or
das
daa
ja
mov
(bad)
fs
pop
mov
jmp
(bad)
jmp
mov
cmp
fist
dec
mov
sti
(bad)
sti
mov
test
out
out
mov
(bad)
call
sub
pop
std
sbb
xchg
push
fimul
or
jg
lahf
adc
mov
aas
stc
scas
jg
pop
out
sub
jecxz
stc
cmp
std
cdq
push
adc
and
mov
mov
cmc
out
xchg
jnp
repz
(bad)
cld
cmps
(bad)
lock
mov
nop
loop
and
pop
pop
jmp
int3
cld
xlat
mov
dec
sbb
cli
movs
sbb
or
and
mov
loopne
add
adc
std
scas
call
mov
sar
into
outs
jmp
clc
pop
dec
or
(bad)
cld
cmps
(bad)
jmp
(bad)
(bad)
clc
mov
and
hlt
(bad)
sar
cmp
(bad)
int
pusha
(bad)
in
paddw
mov
mov
jo
jle
fcomip
psubq
dec
sub
loopne
mov
inc
cld
xor
cmc
mov
and
repnz
pop
(bad)
in
scas
add
sub
xchg
sub
outs
in
retf
xchg
dec
in
neg
ficomp
sbb
stc
das
call
(bad)
mov
icebp
scas
stc
das
popf
mov
and
push
lock
pushf
cld
xlat
dec
jle
cmp
aam
sti
ins
or
sbb
(bad)
ds
sti
mov
jnp
push
das
push
out
repz
cmp
jnp
xlat
(bad)
pop
imul
inc
loopne
mov
mov
fbstp
push
es
mov
repz
and
mov
imul
movs
out
addr16
in
jle
cmp
sub
scas
jg
pop
(bad)
scas
jle
xor
scas
jle
jmp
std
or
sar
scas
inc
in
jg
out
lds
aad
mov
xor
daa
cmp
out
call
popa
jbe
(bad)
jmp
out
ja
(bad)
mov
rcr
call
pop
pop
stos
aas
call
sbb
jg
add
and
push
rcr
or
cmp
shl
aad
sbb
scas
mov
jg
das
xor
loope
and
fst
rcr
std
std
pop
sub
inc
xor
inc
std
out
xor
jg
xchg
jl
(bad)
mov
stc
sti
and
jmp
(bad)
stos
dec
and
mov
cdq
cmps
(bad)
cli
fbld
inc
jo
jnp
inc
jno
or
neg
adc
xchg
mov
idiv
sub
sbb
add
mov
and
fisttp
dec
mov
jns
sti
scas
push
jmp
(bad)
xchg
aas
push
mov
fnstsw
or
ds
mov
jg
popa
call
mov
stos
add
jg
hlt
xlat
nop
leave
(bad)
cld
jle
xor
jg
ret
inc
in
nop
cmp
fsincos
xor
(bad)
xlat
jecxz
or
xor
(bad)
jg
inc
in
inc
out
imul
or
hlt
scas
or
clc
loopne
mov
(bad)
std
and
call
mov
adc
dec
cmc
out
aas
xchg
fdivr
(bad)
lods
(bad)
cmp
js
lods
hlt
pop
push
mov
push
fs
data16
icebp
aas
std
inc
call
jg
push
(bad)
mov
jmp
sahf
cmps
mov
inc
push
lahf
jne
mov
mov
in
std
pop
scas
popa
daa
mov
mov
(bad)
(bad)
jmp
repz
out
jg
jg
jmp
mov
movs
lahf
loop
pop
ins
mov
scas
jg
outs
popa
mov
loop
(bad)
cld
or
iret
sti
mov
jbe
jmp
stc
and
jmp
std
or
pop
dec
pusha
jmp
(bad)
(bad)
xchg
shl
mov
or
pop
(bad)
jmp
aas
outs
lods
cli
jg
jmp
test
(bad)
iret
inc
jno
and
xor
cmc
sti
sbb
sti
cld
xlat
cld
xor
(bad)
cld
jmp
mov
(bad)
lahf
stos
cmps
repnz
jg
mov
das
clc
test
jne
mov
cmps
in
jb
jl
and
fistp
ud0
cmc
pop
dec
in
(bad)
jmp
ins
fwait
out
clc
lods
out
mov
mov
mov
test
mov
cli
mov
cmp
scas
(bad)
pop
mov
repz
sti
imul
jae
repnz
outs
push
outs
clc
inc
shl
mov
add
mov
mov
cmp
scas
cmps
stc
js
into
int
mov
sar
mov
fs
aam
(bad)
xlat
jg
mov
pop
std
iret
cmp
mov
(bad)
mov
out
aas
dec
push
mov
loop
std
rcr
adc
out
(bad)
jge
cmp
stc
(bad)
and
call
xor
scas
test
(bad)
out
xlat
clc
mov
jl
(bad)
scas
test
outs
and
sti
pop
inc
mov
fwait
repnz
std
adc
push
stos
push
mov
jg
add
adc
aas
mov
pop
mov
jmp
loope
mov
ss
mul
sbb
pop
jbe
shl
xlat
cmc
ficom
clc
stos
jg
xor
and
hlt
in
dec
inc
push
or
pop
add
out
aaa
aaa
mov
call
(bad)
std
jg
xor
sub
mov
(bad)
cli
aas
and
retf
jmp
(bad)
out
(bad)
cmp
jecxz
aas
repnz
push
sar
dec
(bad)
into
jg
pop
(bad)
jg
pop
(bad)
pop
add
push
add
(bad)
mov
enter
or
in
daa
xor
cwde
jle
cmc
dec
ret
call
in
and
dec
jne
test
(bad)
scas
sbb
mov
jmp
and
add
pop
outs
std
es
call
add
pop
jg
fldenv
or
icebp
jmp
jns
outs
std
push
pop
adc
mov
out
lea
fbld
aad
sti
sbb
movs
sub
retf
arpl
mov
jmp
ror
(bad)
jmp
cli
mov
mov
push
pop
sti
sub
(bad)
jmp
(bad)
div
fild
(bad)
sbb
fistp
in
jg
mov
cdq
mov
push
dec
push
sbb
or
adc
inc
push
jg
inc
std
xor
mov
mov
in
mov
repz
mov
mov
mov
mov
jmp
icebp
cmp
push
leave
pushf
add
cli
jge
or
jmp
push
xchg
xor
gs
(bad)
sub
adc
sar
stos
jle
repnz
int3
test
(bad)
jmp
jp
arpl
sahf
fdivrp
xchg
out
pop
fs
pop
(bad)
cli
scas
dec
test
aas
clc
pop
jp
jmp
mov
sbb
mov
jmp
out
or
mov
paddd
div
into
(bad)
jmp
call
push
icebp
pop
cli
scas
inc
or
scas
stc
psubsw
add
adc
mov
aas
popf
test
repnz
jg
outs
cmc
dec
(bad)
xlat
jg
adc
(bad)
jmp
hlt
mov
push
inc
cs
mov
(bad)
imul
push
lods
jle
jb
dec
(bad)
jg
scas
pop
es
push
cmp
jmp
cwde
mov
jmp
ror
call
adc
pop
cmp
mov
pop
dec
or
daa
(bad)
xchg
pop
mov
call
xor
pop
pop
cmp
jle
and
popf
jg
jmp
jg
pop
std
add
out
fucomi
out
mov
jle
int3
in
pop
neg
xor
fnstsw
repnz
int3
jg
iret
cld
cmp
push
aad
out
pop
xchg
and
gs
imul
aas
dec
mov
neg
mov
adc
imul
xor
push
mov
inc
leave
mov
mov
aas
ror
ret
pop
loopne
stc
scas
jg
out
add
jg
jle
or
repz
cmp
enter
jle
(bad)
cli
pop
sti
cmp
(bad)
jmp
call
lods
hlt
pop
int
xchg
xchg
mov
sbb
cli
dec
std
sbb
scas
sub
lahf
(bad)
aam
jg
mov
add
mov
imul
and
dec
mov
movs
jecxz
loop
jp
cld
pop
std
push
inc
jg
dec
jmp
cmp
cmc
clc
jnp
pop
data16
(bad)
das
(bad)
xlat
ds
aam
scas
cld
lahf
iret
pop
and
xchg
sub
dec
or
mov
(bad)
ins
jnp
mov
jg
lds
cmp
dec
xchg
(bad)
inc
outs
outs
sahf
push
sub
push
lea
shr
js
cmc
pop
(bad)
stc
mov
cld
stc
scas
dec
aas
call
popa
jg
xor
jg
mov
scas
jg
xor
aas
test
mov
sar
(bad)
jg
enter
jnp
push
(bad)
dec
sti
mov
data16
out
ja
jge
pop
cdq
es
push
mov
jge
inc
xor
(bad)
in
sub
arpl
les
loop
push
and
cld
xlat
(bad)
(bad)
stc
stos
jle
jecxz
clc
lahf
pop
std
sbb
std
inc
jg
lahf
icebp
fwait
ror
out
jg
jbe
xor
test
add
sub
(bad)
cld
xlat
inc
out
adc
imul
jmp
dec
retf
mov
push
popa
add
retf
test
sub
test
popf
pop
(bad)
and
stos
dec
push
stc
popa
fstp
(bad)
gs
mov
pop
aas
add
dec
xchg
adc
call
stos
das
cmp
inc
pop
(bad)
xlat
jg
jg
lods
retf
movs
jo
jge
mov
add
lea
adc
push
loop
jp
in
mov
aaa
iret
fs
xor
jmp
(bad)
std
jg
mov
das
std
cmc
idiv
sar
mov
ds
scas
jg
fistp
push
es
retf
loopne
mov
(bad)
shl
adc
jae
jmp
pop
jge
loope
mov
or
inc
cmps
div
jg
daa
cld
xchg
cli
fistp
push
cs
out
mov
pop
call
jmp
(bad)
std
jg
mov
fwait
(bad)
loope
inc
int3
ret
cli
jmp
sbb
into
jg
and
std
iret
mov
icebp
cmp
push
push
jno
push
mov
(bad)
(bad)
xchg
pop
scas
lahf
push
fs
xor
xchg
std
pop
jmp
in
(bad)
mov
into
aas
leave
popf
cld
data16
push
(bad)
std
sub
add
mov
adc
cli
ja
xlat
mov
mov
test
cld
jmp
mov
dec
inc
(bad)
in
outs
hlt
pop
push
xchg
inc
push
pop
dec
cmp
cmc
cmp
push
(bad)
pop
mov
(bad)
test
or
lahf
and
mov
repnz
(bad)
jmp
clc
cmc
lea
clc
scas
das
inc
jo
mov
idiv
(bad)
jmp
xor
sahf
test
sub
scas
fucomip
mov
cwde
cmp
std
xlat
jg
scas
sbb
sti
mov
cli
add
and
scas
jg
pop
fwait
sub
pop
call
xchg
in
imul
push
fidivr
or
pop
inc
inc
loop
(bad)
movs
xchg
dec
sti
icebp
lock
adc
std
push
push
inc
aas
into
jns
shl
aaa
cli
int
dec
push
(bad)
sbb
outs
push
aas
idiv
inc
bnd
movs
out
adc
mov
xor
aam
jb
mov
repnz
push
out
repz
xchg
mov
(bad)
cmp
and
(bad)
mov
fwait
cld
cmp
fisttp
in
pop
cld
xlat
mov
es
pushf
std
sar
mov
lods
jg
pushf
(bad)
(bad)
cli
outs
jg
repz
xor
xchg
dec
adc
call
jg
jns
mov
and
pusha
mov
cmp
lahf
lock
push
sub
(bad)
jmp
out
aaa
repz
or
dec
dec
add
xlat
mov
sub
cmc
out
retf
add
aas
lods
loope
mov
cld
mov
add
dec
jmp
adc
fdivr
jbe
jb
stos
jg
mov
stc
xor
stc
scas
dec
arpl
aas
cli
jg
mov
jg
outs
retf
xchg
xlat
push
sbb
std
push
mov
cld
pop
inc
jg
(bad)
(bad)
addr16
cmp
cmc
out
jg
movs
cmp
jmp
xchg
adc
jg
pop
ds
(bad)
cmc
out
idiv
cli
pop
call
call
outs
cld
(bad)
ins
fnstcw
mov
repz
cli
iret
std
(bad)
ret
jg
shr
sub
inc
leave
idiv
lock
jle
jns
out
leave
mov
lahf
jmp
aas
cld
retf
lahf
std
stc
mov
jmp
idiv
std
sub
aad
hlt
push
xchg
sbb
pop
in
std
xlat
jg
scas
lock
cmp
bound
jbe
enter
jg
or
cmp
jl
lock
and
xlat
add
jg
(bad)
clc
scas
dec
jg
aas
daa
cmc
pop
(bad)
cmp
mov
inc
push
lock
outs
sub
adc
mov
jmp
mov
test
es
loop
(bad)
mov
(bad)
jp
test
mov
add
sti
neg
dec
jmp
ret
and
(bad)
cli
cld
jmp
(bad)
push
push
inc
icebp
hlt
xlat
cld
push
(bad)
jmp
(bad)
cmp
ror
call
and
lods
add
scas
mov
inc
(bad)
out
xchg
cmps
push
mov
outs
jmp
nop
jg
shl
mov
mov
(bad)
cmp
adc
fstp
cmc
pop
jg
not
out
call
in
xchg
sar
jmp
out
(bad)
ja
mov
call
pop
cli
in
xor
cs
or
jne
into
jg
mov
adc
cmc
push
in
xor
cli
mov
iret
es
lock
and
pop
mov
js
dec
nop
mov
bound
xchg
clc
mov
dec
cmc
ud0
jmp
xchg
call
lds
push
ret
pop
cld
pop
out
push
das
jg
adc
xor
dec
xchg
mov
sub
out
jg
xor
xor
std
push
pop
arpl
enter
or
cmp
(bad)
cdq
(bad)
cli
dec
call
mov
scas
call
fild
std
retf
dec
sub
xlat
jmp
sti
dec
sbb
in
std
xlat
xchg
dec
cmp
repnz
mov
sub
cmc
out
loope
jae
cmc
jmp
jg
mov
test
(bad)
jmp
cmp
(bad)
mov
dec
sar
mov
jle
adc
mov
jle
(bad)
cli
psubq
cld
pop
dec
push
sbb
cdq
int3
xor
mov
mov
xchg
xor
outs
lods
call
xchg
cwde
xchg
pop
cmps
mov
mov
sbb
cli
imul
and
push
out
repnz
aas
sti
and
jo
add
sbb
pop
cli
mov
pop
dec
xchg
(bad)
xor
inc
push
scas
dec
out
(bad)
jmp
add
std
sbb
stc
scas
jg
dec
je
pop
mov
(bad)
jle
lahf
inc
aas
and
imul
iret
jg
jg
cs
les
repz
inc
inc
jb
mov
mov
pop
outs
stc
clc
xchg
dec
push
out
std
sbb
push
cld
ret
out
nop
ins
cld
jge
(bad)
call
call
adc
jae
push
sti
dec
push
lods
mov
xlat
arpl
or
sar
nop
arpl
mov
jg
das
push
mov
jg
pop
dec
cli
fistp
arpl
pop
sbb
cmp
jg
xchg
pop
mov
push
and
push
mov
cld
iret
jo
gs
in
and
imul
loop
(bad)
cli
xlat
movs
movaps
cld
mov
cmps
icebp
mov
push
add
aaa
out
(bad)
fdivr
xchg
(bad)
call
mov
sti
scas
jg
fisttp
pop
mov
(bad)
xchg
(bad)
cli
mov
xor
cmc
sbb
(bad)
cli
jg
lods
cli
imul
or
(bad)
jg
(bad)
pop
std
imul
mov
jle
lock
lods
push
out
inc
or
fisttp
xchg
inc
xchg
test
call
push
or
jns
sub
call
and
xchg
(bad)
cld
ja
cld
sbb
jg
xchg
(bad)
jmp
mov
or
(bad)
cli
fsubrp
data16
xlat
sar
lds
mul
(bad)
stos
pop
sti
scas
jg
fild
mov
addr16
call
push
xchg
jae
jg
cld
jno
cdq
sub
inc
idiv
cmp
mov
(bad)
clc
paddw
jg
outs
loopne
cmc
jle
pop
inc
push
repz
call
mov
(bad)
adc
mov
ins
xor
out
jl
dec
mov
mov
std
scas
inc
and
cmp
xchg
xlat
mov
xchg
dec
outs
or
dec
adc
pop
jecxz
(bad)
(bad)
sti
scas
dec
ret
fdivrp
daa
(bad)
jmp
outs
xchg
in
and
retf
enter
jg
cs
pop
mov
jg
out
lds
ret
lds
imul
sbb
push
pop
xor
mov
adc
sti
imul
add
sbb
sahf
or
adc
clc
ffreep
add
aas
hlt
jnp
inc
(bad)
cmc
push
pop
mov
mov
and
fild
sub
gs
call
jl
adc
xlat
xchg
shl
pop
repnz
jg
adc
sar
fild
(bad)
shr
std
xlat
adc
fs
sahf
dec
(bad)
and
and
iret
add
jmp
add
ret
mov
xlat
in
sub
movq
ret
jmp
icebp
outs
and
(bad)
scas
stc
iret
clc
cdq
xchg
cli
mov
mov
adc
dec
mov
out
fcomip
xlat
(bad)
push
lahf
hlt
imul
imul
in
(bad)
cli
(bad)
jg
add
lahf
loop
cmp
fistp
jo
or
in
push
lock
popf
shr
push
push
mov
mov
xchg
cmp
stos
fcomp
jno
mov
xor
jb
sbb
inc
push
pop
cld
jmp
out
mov
cmc
pop
jmp
lahf
loop
jg
fdiv
cmp
addr16
or
idiv
push
in
dec
out
xor
(bad)
out
shl
dec
out
punpckldq
scas
jg
jo
lea
xchg
push
stos
(bad)
popf
lods
call
nop
dec
cld
xchg
and
mov
add
fcomip
fbld
rcl
call
mov
scas
xchg
push
pop
lods
leave
(bad)
inc
repnz
jle
push
clc
pop
cli
or
leave
pop
jmp
movs
or
in
test
shr
test
aas
xchg
mov
mov
fisttp
(bad)
lock
(bad)
cmp
arpl
xlat
aas
test
jg
pop
out
sbb
mov
push
or
jmp
les
jg
dec
test
imul
loop
mov
dec
neg
mov
jl
jnp
sti
pop
cld
scas
call
sbb
idiv
xlat
clc
xor
ds
(bad)
pop
push
and
inc
out
pop
cli
retf
jmp
aas
jecxz
sti
scas
pop
(bad)
jbe
xchg
std
mov
jg
aaa
nop
fdivr
mov
int
call
out
out
rcr
fucomi
std
inc
push
das
push
ins
inc
in
cld
test
or
cmc
das
inc
sub
and
push
call
jle
mov
dec
popa
movs
xor
push
xchg
mov
leave
jle
cmp
lahf
and
xor
into
jg
jmp
iret
stc
(bad)
loope
call
sar
dec
leave
daa
jmp
push
xchg
jg
jg
xchg
pop
mov
dec
push
addr16
fsubr
dec
inc
and
jb
das
cmp
(bad)
arpl
(bad)
aas
pop
std
pop
dec
scas
pop
fcomip
out
lahf
clc
jg
xlat
(bad)
cmp
jp
push
pop
(bad)
aas
xchg
fdiv
or
xchg
int
out
add
xchg
fstp
ss
push
sbb
(bad)
(bad)
popf
stc
mov
sub
out
push
cmc
jmp
test
repnz
pop
jecxz
aas
dec
mov
mov
scas
dec
ret
fucomip
scas
pop
aaa
mov
stc
scas
call
ds
js
repnz
push
scas
(bad)
fcmove
jg
aaa
jg
and
mov
das
dec
hlt
or
pop
adc
fdiv
cmovb
(bad)
out
inc
push
add
dec
mov
jmp
push
fistp
mov
arpl
and
sub
fstp
xlat
jg
or
jg
jecxz
dec
sahf
std
outs
dec
movs
mov
inc
cld
scas
jg
fist
stc
jle
cli
mov
repnz
idiv
popa
add
sti
scas
adc
outs
(bad)
sti
outs
add
rcr
dec
inc
(bad)
loope
push
ins
dec
push
lahf
dec
fucomip
ja
scas
jg
imul
sub
jg
or
inc
fcomip
or
iret
loop
stc
arpl
in
mov
mov
(bad)
pop
call
fild
ds
fnstenv
scas
jg
daa
mov
pop
mov
popf
js
adc
jne
pop
(bad)
pop
ss
mov
push
ss
into
(bad)
fldcw
dec
ret
mov
or
lock
inc
cmp
xchg
fldenv
gs
call
dec
adc
(bad)
in
push
jmp
cli
into
outs
vpsubsw
sub
cmp
cmp
call
dec
ret
(bad)
sub
sub
(bad)
fisttp
jmp
(bad)
scas
jg
pop
out
cmp
mov
cmp
iret
cld
outs
jmp
or
(bad)
sti
scas
dec
repz
loopne
rcr
pop
(bad)
into
icebp
pop
inc
mov
in
jg
ja
jmp
loop
push
inc
lods
pop
jg
pop
(bad)
xor
jg
cld
pop
mov
jg
(bad)
add
into
and
jg
adc
pop
cli
mov
fcomip
paddd
icebp
fucomi
pop
(bad)
outs
mov
aas
clc
bnd
scas
jmp
in
ins
adc
ss
scas
jg
(bad)
cmp
movs
jg
mov
cmps
(bad)
xchg
lahf
or
push
dec
inc
jmp
xchg
or
scas
call
xchg
mov
pop
jmp
mov
rol
push
out
cmp
hlt
mov
pop
gs
dec
jle
and
and
mov
scas
cmc
mov
mov
mov
sub
std
pop
cmp
idiv
or
and
pop
(bad)
xlat
jg
adc
jg
jb
aas
shr
clc
ret
push
call
mov
add
(bad)
and
(bad)
addr16
out
pop
jge
sub
jle
add
mov
inc
sub
adc
popf
cmps
aam
dec
cmc
(bad)
(bad)
cdq
(bad)
cli
dec
cld
(bad)
(bad)
out
(bad)
sti
aaa
std
pop
xor
adc
aas
clc
scas
(bad)
cmp
stc
pop
dec
dec
xchg
clc
sti
das
cld
jno
xchg
fxtract
std
jg
idiv
sub
ins
jb
cmp
repz
call
(bad)
in
outs
sar
dec
out
(bad)
cmc
outs
cmc
or
dec
call
aas
repnz
inc
mov
std
xchg
inc
sub
clc
out
inc
pop
jg
jg
jg
stos
(bad)
cli
dec
(bad)
aas
xor
jg
out
std
call
fldcw
or
(bad)
mov
loopne
(bad)
jg
into
shl
mov
fld
ret
aas
sahf
push
test
lock
in
addr16
sub
pop
call
daa
mov
mov
dec
mov
(bad)
(bad)
test
fwait
cmp
xor
call
mov
xlat
jg
imul
xchg
pop
stc
add
mov
(bad)
and
jg
out
outs
sbb
pop
test
jnp
or
int3
dec
call
cld
cmp
mov
mov
and
jg
sti
std
pop
sahf
scas
lock
inc
mov
lds
sub
pop
call
mov
(bad)
out
ja
dec
mov
call
(bad)
jmp
jmp
jno
call
mov
cli
out
out
xchg
retf
cld
imul
call
mov
clc
push
dec
mov
jp
aam
scas
icebp
das
imul
jmp
test
das
jge
test
daa
(bad)
mov
jg
push
sbb
pop
std
cmp
sub
xor
jmp
inc
mov
mov
jmp
aas
neg
fstp
xchg
mov
push
adc
es
sti
pop
inc
pushf
dec
xor
sub
repnz
(bad)
mov
daa
dec
(bad)
rcr
(bad)
mov
jne
int
dec
(bad)
mov
mov
call
ss
fcomip
mov
fdivr
aas
cli
das
mov
aas
clc
lahf
std
jecxz
aad
mov
xchg
or
dec
pop
das
jmp
jg
lods
jbe
mov
mov
icebp
aad
imul
(bad)
jmp
add
dec
es
cld
ja
adc
js
or
add
add
mov
clc
push
aam
jge
ins
(bad)
jmp
pop
(bad)
(bad)
cmp
inc
std
mov
jmp
scas
dec
mov
(bad)
(bad)
xchg
mov
call
mov
jmp
clc
fst
sub
loopne
push
fbstp
jmp
call
hlt
loope
(bad)
mov
mov
in
mov
cmp
fucomip
pop
jg
daa
dec
jmp
(bad)
repz
fsincos
scas
jg
dec
outs
std
xor
int
cmc
outs
dec
(bad)
pop
(bad)
scas
jg
mov
mov
out
mov
dec
mov
lahf
cld
(bad)
popa
out
jecxz
call
pop
cld
outs
mov
jecxz
adc
cmc
outs
repnz
xchg
cmc
push
pop
mov
and
and
imul
das
sbb
cmc
cmp
cmc
pushf
add
cmc
(bad)
sbb
imul
sti
scas
jmp
enter
les
leave
add
fbld
push
in
psubb
icebp
xchg
mov
les
out
cld
xchg
dec
pop
dec
and
xchg
aas
cmps
jge
push
test
xchg
inc
push
cmp
cmc
outs
dec
jp
xchg
inc
fcos
cli
das
inc
push
cli
inc
jmp
mov
cld
xlat
mov
jno
not
stos
idiv
push
cmp
jg
jg
out
cmp
mov
fadd
xchg
(bad)
pop
xchg
mov
cmc
pop
jmp
sti
xor
cmp
scas
jg
jg
jge
imul
scas
mov
mov
cmp
or
icebp
jg
std
xlat
jmp
sub
pop
jmp
add
dec
test
out
add
in
jp
cdq
(bad)
jmp
sbb
lods
loope
icebp
mov
mov
aaa
sti
dec
cmp
xchg
data16
hlt
cmps
(bad)
cwde
lods
jp
add
aam
dec
cld
xlat
jg
scas
ss
aas
add
(bad)
in
cli
aas
clc
or
imul
out
mov
sub
jle
push
inc
(bad)
xchg
cmc
(bad)
mov
stc
hlt
and
pop
jge
fcomip
xlat
(bad)
clc
jns
(bad)
pushf
call
dec
push
xor
stc
dec
xchg
(bad)
clc
mov
out
(bad)
sub
call
xchg
inc
stc
scas
dec
nop
stc
nop
lds
sub
std
push
mov
mov
ret
(bad)
jmp
daa
push
inc
jnp
dec
dec
js
mov
lahf
adc
sar
clc
xlat
lods
repnz
iret
mov
imul
fild
call
mov
sti
paddw
jg
pop
inc
cmp
dec
(bad)
mov
mov
stos
push
(bad)
out
fistp
dec
cdq
mov
mov
std
xchg
inc
sbb
jg
lock
push
fdivr
sub
(bad)
cli
push
mov
or
pop
call
xchg
pop
cmp
xchg
and
or
push
ror
adc
mov
sti
daa
(bad)
outs
int
pushf
jp
repz
cli
outs
rcl
inc
std
xchg
jo
jle
jg
or
push
mov
cmc
push
pop
jb
(bad)
(bad)
jmp
lahf
xchg
pop
outs
adc
sbb
out
int3
mov
jg
out
xlat
pop
cmp
pop
inc
jmp
shr
mov
pushf
icebp
pop
das
jg
aas
jmp
fwait
rcl
jmp
rol
cmp
xchg
or
es
sbb
xchg
out
sbb
or
cmps
push
(bad)
loope
dec
push
jg
sub
std
data16
aad
std
pop
ret
inc
div
xlat
dec
push
enter
or
lahf
xchg
in
mov
rcr
mov
push
in
(bad)
pop
std
dec
fld
sahf
cld
mov
icebp
(bad)
retf
jg
out
retf
xor
outs
(bad)
pop
arpl
enter
jg
jg
pop
xchg
push
aas
popa
mov
mov
loopne
or
cmc
pop
xchg
or
fwait
(bad)
popa
ud0
mov
lods
pop
clc
scas
call
inc
cmp
popf
jg
mov
fadd
(bad)
jmp
xlat
dec
dec
(bad)
sti
(bad)
fdivrp
inc
dec
outs
std
inc
hlt
out
jns
pop
std
push
jg
jg
adc
xor
gs
mov
sub
(bad)
cmp
cmp
jmp
jno
jae
cmc
mov
scas
(bad)
loope
add
jmp
adc
(bad)
cld
pop
dec
inc
mov
push
(bad)
cli
ud0
fsubp
inc
jecxz
lahf
(bad)
hlt
loope
into
jle
mov
retf
inc
push
std
xchg
or
pop
clc
jg
inc
cmp
ja
clc
jns
loop
sbb
test
repz
clc
lahf
inc
mov
add
dec
(bad)
aas
hlt
das
call
(bad)
das
lahf
cld
xlat
aas
dec
pop
xor
aas
inc
jg
mov
out
(bad)
sar
jne
(bad)
retf
push
jl
pop
stc
scas
dec
dec
dec
jg
mov
das
and
xor
push
aaa
or
dec
arpl
pop
retf
push
jge
sub
jg
icebp
jecxz
or
jg
add
aas
mov
lahf
dec
cmp
std
xlat
lahf
(bad)
mov
cmp
lods
mov
stos
(bad)
cli
mov
mov
and
sub
jp
nop
cmp
call
(bad)
mov
inc
retf
std
fisttp
inc
test
push
dec
(bad)
(bad)
mov
out
int3
dec
dec
pop
cmp
rcr
repz
dec
jmp
test
clc
dec
ds
fnstsw
cmp
push
pop
sti
cmp
sbb
scas
sub
jmp
stc
mov
(bad)
jmp
dec
xchg
or
rcr
mov
ret
add
xchg
cli
mul
jnp
scas
sub
mov
mov
push
and
aaa
jmp
test
jg
xor
in
loop
xlat
(bad)
jmp
xchg
out
(bad)
clc
jnp
jnp
pop
pusha
adc
push
xor
mov
test
pop
aad
popa
popa
and
loop
cld
inc
mov
jmp
out
push
setno
jmp
clc
mov
call
pushf
aam
jmp
sahf
sbb
scas
mov
add
cld
dec
pop
xchg
icebp
xchg
jmp
jge
fld
dec
xchg
data16
iret
mov
jmp
jecxz
adc
push
ins
xor
ret
cmp
es
outs
push
mov
mov
retf
push
ss
lods
(bad)
cmp
dec
xchg
pop
call
dec
out
mov
add
push
pop
cwde
adc
pop
or
popf
fnstsw
(bad)
test
aam
in
pop
stc
scas
jg
ffreep
repz
jmp
(bad)
jg
push
jg
jecxz
nop
xchg
pop
scas
push
dec
imul
fs
jle
fist
mov
std
or
xchg
out
(bad)
jmp
jb
call
fisttp
pushf
(bad)
aas
add
jmp
fisttp
call
(bad)
dec
loope
jg
aas
cld
iret
push
outs
dec
aas
ds
lods
(bad)
(bad)
pop
icebp
pop
aas
stc
outs
and
mov
adc
(bad)
stos
repz
sbb
xchg
pop
jecxz
(bad)
sbb
dec
mov
repz
and
cmc
push
inc
ins
movs
xchg
jae
(bad)
push
std
xchg
cmp
fisttp
loop
fild
jecxz
(bad)
cli
push
sbb
sbb
jg
mov
jmp
jmp
mov
(bad)
xlat
(bad)
cli
outs
arpl
mov
(bad)
mov
fistp
jg
fcomp
inc
popf
scas
pop
stc
scas
cld
retf
dec
jg
inc
(bad)
pop
push
pusha
cmp
cmp
std
(bad)
jnp
(bad)
scas
jg
cmp
les
hlt
mov
call
imul
push
cmp
mov
pop
inc
and
rcr
(bad)
out
dec
push
(bad)
cli
dec
inc
enter
repz
cld
inc
(bad)
jmp
sub
scas
jmp
jg
xchg
mov
cmc
dec
std
xchg
data16
fsincos
mov
out
pop
cmp
and
lea
loopne
out
sbb
and
jmp
cmp
pop
hlt
pop
cli
retf
cdq
adc
ds
mov
(bad)
push
sub
ror
mov
aaa
clc
scas
jg
pop
(bad)
jb
je
add
sub
les
cld
scas
jg
mov
xor
sub
(bad)
in
pop
inc
mov
das
pop
dec
cld
pop
jmp
sbb
xor
leave
(bad)
cli
scas
sub
xor
push
fisttp
scas
test
cmp
arpl
fdivrp
lods
cwde
fnstsw
(bad)
jmp
jmp
jne
sub
cmps
push
shr
in
jmp
scas
add
mov
dec
jecxz
cmp
das
stc
xor
and
inc
cli
or
xchg
repnz
repnz
push
cli
scas
ret
mov
pop
(bad)
fdivr
(bad)
hlt
xchg
mul
cli
pop
dec
mov
clc
mov
jg
pop
inc
aas
jo
js
mov
cld
jg
and
adc
scas
(bad)
mov
dec
dec
jmp
or
(bad)
ror
push
sbb
add
dec
add
in
ret
sbb
movs
mov
cmc
or
cmp
scas
rol
(bad)
scas
jg
jg
xor
push
push
stos
or
dec
es
(bad)
pop
jle
(bad)
cli
cmp
sub
(bad)
imul
jg
outs
and
pop
dec
push
stc
cld
lahf
lock
xchg
and
mov
adc
pop
fistp
sbb
jg
aas
adc
lock
ffreep
or
xor
jmp
cmp
push
jmp
sti
mov
or
fcos
cli
outs
push
outs
fsub
jo
nop
adc
xor
in
leave
(bad)
jmp
xchg
inc
out
loope
ja
sbb
dec
popa
push
jmp
cdq
xchg
or
fdivr
dec
pusha
jnp
inc
jns
pushf
repnz
pop
xlat
int
in
(bad)
mov
mov
jle
sub
fmul
sub
pop
pusha
mov
loope
jmp
cld
jp
sbb
mov
cmp
neg
sti
fisttp
jg
(bad)
jnp
repz
xlat
jmp
leave
xchg
xor
pop
cdq
xlat
sub
rcl
ds
mov
mov
jg
clc
(bad)
mov
adc
jle
or
pop
clc
int
js
out
clc
jnp
lea
lahf
cli
scas
jg
cmp
cmp
add
dec
cmp
(bad)
call
cli
cli
pop
push
jg
pop
ror
loopne
cli
(bad)
(bad)
jnp
jl
sub
or
mov
mov
idiv
(bad)
lahf
sub
mov
std
or
dec
movs
push
aaa
shr
jg
arpl
pop
jle
mov
dec
fimul
jmp
mov
test
jmp
loope
gs
and
(bad)
xlat
dec
outs
push
cmp
pop
std
cmp
out
(bad)
sti
cmps
jle
(bad)
cli
lahf
clc
fnstsw
(bad)
or
das
clc
mov
lea
fisubr
fidiv
pop
xlat
repnz
sbb
add
or
cmc
cmp
call
sub
std
sbb
iret
mov
stc
lea
std
retf
(bad)
inc
aas
repnz
xchg
mov
movs
jg
mov
mov
jg
cmp
push
push
push
fdivr
std
pop
das
rcl
cli
cs
shl
jg
mov
das
xor
call
(bad)
stos
jg
cmp
adc
ds
cdq
mov
xchg
(bad)
jecxz
sub
adc
pop
cli
xchg
lds
pop
out
mov
mov
cmp
call
inc
push
loop
pop
cli
scas
jmp
push
jbe
sub
aam
inc
cmp
adc
push
repnz
jnp
sub
(bad)
cli
scas
cld
outs
dec
xchg
(bad)
cmp
jmp
pop
sub
outs
(bad)
std
mov
pop
and
or
int
rcr
outs
inc
mov
call
cmp
cmc
pop
inc
mov
aas
push
aam
std
popa
dec
inc
cdq
cld
call
xlat
jle
mov
clc
pop
pop
and
or
jnp
cmps
jg
push
in
icebp
ffreep
lods
stc
cmp
outs
cmp
cli
xlat
sti
cmc
dec
add
js
fnstcw
(bad)
jmp
repz
stc
jecxz
(bad)
xor
loopne
push
mov
into
idiv
and
dec
dec
aas
jmp
push
pop
div
out
push
paddsw
inc
or
push
std
mov
xor
jmp
out
pop
pop
iret
mov
inc
cli
fistp
jmp
cmp
fwait
(bad)
imul
lea
(bad)
cli
ja
or
cwde
cmp
and
(bad)
jmp
icebp
pop
mov
retf
jg
sbb
dec
rol
aas
dec
faddp
jg
fwait
std
sar
dec
jmp
and
aas
call
adc
sub
inc
(bad)
jmp
nop
aad
inc
std
adc
and
jmp
mov
push
adc
jmp
cli
iret
sbb
xchg
nop
sti
std
mov
mov
inc
and
jg
sub
(bad)
ret
(bad)
adc
scas
adc
or
sbb
sar
push
push
xchg
add
xor
imul
lea
mov
mov
jmp
pop
and
jg
mov
outs
mov
stc
test
cli
cmc
into
jg
aaa
clc
scas
pavgb
shl
mov
cli
inc
(bad)
mov
jbe
xlat
and
mov
xchg
mov
sar
pop
cld
out
mov
inc
mov
(bad)
fimul
xor
jmp
stc
out
stc
adc
jg
xchg
mov
std
pop
push
(bad)
fstp
push
jae
call
jg
jmp
fild
(bad)
out
paddd
(bad)
(bad)
aad
pop
retf
scas
(bad)
cli
in
aas
or
mov
jns
scas
aas
and
into
call
cld
mov
js
and
test
mov
sahf
retf
clc
and
pop
out
lahf
jp
retf
mov
add
retf
adc
std
and
das
pop
jo
in
(bad)
scas
jle
(bad)
cli
xchg
ret
push
(bad)
movs
stc
mov
jmp
mov
cli
xchg
push
out
repnz
es
cmp
inc
stos
aad
(bad)
jmp
in
xchg
and
or
dec
mov
and
jg
lds
lds
scas
jmp
and
retf
adc
test
(bad)
mov
jg
(bad)
jp
dec
(bad)
call
clc
out
(bad)
sar
div
jo
dec
(bad)
stos
fild
test
and
cld
aaa
inc
inc
pop
cld
sub
(bad)
add
sub
and
popf
jle
mov
mov
neg
outs
out
mov
outs
movs
out
dec
mov
aas
add
dec
sbb
(bad)
cli
dec
cld
aaa
cmp
mov
cmp
jg
jg
lahf
call
sahf
xor
push
dec
adc
outs
and
sti
mov
xor
mov
jg
scas
hlt
mov
cwde
hlt
scas
sti
adc
and
push
scas
retf
or
mov
cmp
jg
fistp
call
idiv
(bad)
test
ret
jle
jge
dec
(bad)
xchg
mov
std
inc
mov
mov
jecxz
cli
scas
pop
cld
(bad)
fstp
fdivr
dec
hlt
push
lahf
ror
call
jg
(bad)
dec
cmp
sbb
cmp
hlt
aaa
std
sbb
inc
mov
push
(bad)
jmp
adc
sbb
idiv
lea
lock
fisttp
mov
clc
jg
sub
paddb
out
std
data16
cmp
clc
pop
(bad)
fsubr
lds
aaa
mov
push
(bad)
stc
rcr
ret
and
stc
in
hlt
jg
xchg
in
mov
xchg
and
add
adc
(bad)
mov
push
dec
mov
jg
mov
popf
or
into
aas
add
jno
hlt
mov
sti
imul
psubd
mov
xchg
(bad)
jg
mov
jl
inc
std
cmp
cmc
lahf
inc
pushf
neg
fsubr
repnz
jle
les
std
xchg
or
jle
cmc
dec
inc
call
mov
jns
lahf
cli
scas
push
push
cmp
mov
cld
xlat
xlat
jmp
jg
inc
jmp
push
inc
dec
mov
loopne
pop
jecxz
stc
scas
jmp
push
pop
jmp
push
inc
jle
leave
mov
loope
jmp
xchg
push
cmc
inc
or
test
push
scas
adc
mov
aaa
cli
dec
(bad)
(bad)
jmp
retf
ds
xchg
pushf
(bad)
icebp
ja
pop
repnz
icebp
pop
std
outs
arpl
icebp
jg
cld
out
fdivr
jp
mov
std
sbb
mov
adc
cld
xlat
jg
int
into
in
jb
push
jg
pop
mov
cld
in
jg
ja
outs
mov
push
mov
mov
out
lahf
cld
sti
lock
out
cmc
mov
mov
(bad)
mov
(bad)
jne
dec
nop
add
in
cld
xchg
into
jb
daa
jmp
std
sti
pushf
xlat
mul
jle
mov
push
ret
punpckldq
scas
jg
jg
popf
sbb
imul
or
jmp
push
push
sbb
loope
in
cmp
jmp
aam
repz
or
das
stc
xchg
stc
push
jmp
inc
mov
xlat
pop
std
add
jmp
test
xor
xlat
jg
std
clc
scas
mov
pop
inc
mov
xor
call
pop
jg
pop
test
mov
outs
imul
mov
fld
add
mov
movs
sub
push
push
mov
jns
sub
outs
cmp
sub
push
ret
int
int
stos
jg
pop
adc
cli
sar
stc
fucomip
mov
outs
in
mov
iret
sar
xlat
mov
lds
and
(bad)
cli
(bad)
es
pop
push
mov
popf
test
(bad)
fistp
fild
jle
out
mov
push
sbb
(bad)
and
cmps
jg
aas
bound
test
add
int3
in
jmp
pop
sub
scas
cld
xchg
lahf
out
inc
push
jg
sbb
(bad)
jmp
lahf
cld
ret
in
jo
fdivrp
inc
loopne
push
mov
aas
or
out
aas
icebp
mov
(bad)
scas
jg
jns
jmp
aas
repnz
cmp
cmc
jg
aas
clc
jg
push
jmp
jmp
jmp
mov
cmp
push
scas
and
int
inc
daa
lods
clc
xchg
rcr
scas
cld
push
sub
xlat
dec
aas
jmp
jmp
clc
pop
inc
push
jle
mov
or
(bad)
mov
jne
lahf
cs
jp
dec
(bad)
imul
xor
clc
pop
inc
jg
stc
pop
dec
dec
and
pop
cmp
fistp
(bad)
jmp
pop
or
scas
ret
or
mov
adc
iret
push
fcomip
iret
add
dec
(bad)
jns
jge
ret
mul
inc
test
jle
dec
sub
sti
and
pop
repz
dec
js
pop
(bad)
mov
sbb
in
(bad)
cmps
(bad)
cli
sar
xchg
sar
push
xlat
scas
inc
nop
xor
inc
inc
call
dec
cld
retf
cld
aad
call
scas
neg
and
in
mov
push
les
add
sti
xor
push
stc
stos
(bad)
cli
xlat
inc
out
jl
aas
call
idiv
repz
dec
imul
xchg
pop
jg
cmp
bound
ins
jle
mov
pop
and
dec
and
(bad)
in
sti
inc
jle
mov
enter
stc
mov
(bad)
mov
rcl
jg
xor
test
pop
cld
adc
jg
imul
into
aas
lods
sbb
enter
ss
adc
jg
aaa
std
(bad)
div
jg
lahf
enter
fsubr
mov
pop
shr
pop
mov
call
(bad)
stc
inc
out
outs
lock
cli
sar
mov
sti
mov
(bad)
jge
xor
pop
(bad)
lock
add
jecxz
cmc
jg
jmp
mov
or
or
and
nop
lods
shr
mov
jg
daa
stos
mov
ja
cmps
sbb
std
adc
repz
(bad)
cmp
pop
(bad)
inc
sahf
(bad)
(bad)
repnz
add
dec
fidivr
fcomip
mov
sti
ja
aad
(bad)
cli
loop
mov
push
outs
dec
daa
(bad)
jmp
jmp
test
mov
jns
cmc
pop
(bad)
outs
push
cmps
and
mov
jmp
sti
adc
dec
movs
scas
fst
inc
adc
dec
jg
ja
test
mov
call
sahf
pop
(bad)
push
(bad)
out
(bad)
sub
cli
xchg
(bad)
mov
stc
mov
adc
cmc
(bad)
mov
mov
ret
pop
mov
fs
(bad)
sub
stc
pop
push
call
out
and
xor
call
aas
sub
xor
adc
call
or
mov
jg
cld
pop
sbb
(bad)
sbb
(bad)
push
daa
cli
std
mov
jge
dec
cld
dec
push
retf
push
jg
jmp
xchg
test
pop
push
pop
cld
(bad)
lahf
gs
or
test
mov
cli
stc
xchg
push
addr16
cmps
shr
jbe
scas
call
mov
inc
sbb
mov
xchg
arpl
xchg
pop
lds
and
(bad)
mov
xchg
dec
in
lods
jg
xchg
xchg
(bad)
scas
adc
lock
inc
in
(bad)
xlat
jg
stos
or
(bad)
loopne
sbb
in
out
std
aad
mov
jle
mov
push
or
pop
jmp
jge
iret
sub
inc
(bad)
push
movs
repnz
sbb
pop
mov
(bad)
xlat
stc
scas
neg
mov
push
jecxz
cld
stos
and
mov
out
xchg
push
(bad)
mov
jmp
imul
adc
(bad)
dec
(bad)
mov
push
cmp
(bad)
cli
idiv
sti
int3
dec
arpl
xlat
ret
aaa
lahf
xor
inc
aas
int
cmp
pusha
push
aas
dec
sbb
rol
cld
ret
jg
imul
loop
call
mov
imul
sub
sar
bound
(bad)
jmp
cmc
xlat
adc
inc
call
(bad)
push
(bad)
jmp
or
xor
fwait
loopne
cld
sbb
or
jb
mov
mov
sti
pop
jmp
or
mov
dec
adc
into
in
or
jg
xchg
call
inc
arpl
scas
std
dec
test
jmp
mov
inc
mov
clc
mov
ins
out
scas
(bad)
scas
(bad)
mov
dec
xchg
cmp
sti
xlat
movs
sar
les
cmc
fisttp
lock
sar
cld
popf
or
jle
mov
jmp
out
pop
repz
stos
and
retf
in
mov
cld
xlat
imul
or
jg
pop
sbb
jg
pop
out
std
inc
ss
into
in
aas
cli
(bad)
fwait
mov
add
sbb
jl
mov
loope
cld
and
hlt
ret
jg
push
nop
xchg
stc
dec
cld
xlat
push
shr
cld
xlat
std
inc
out
popf
(bad)
idiv
test
ins
out
mov
cmc
fdivrp
gs
cs
inc
clc
add
sbb
cmc
in
leave
jmp
call
sbb
fcomip
ja
xor
lea
(bad)
out
mov
lahf
xchg
pusha
clc
scas
jg
frstor
popf
jo
repnz
cld
xlat
sub
add
inc
fdivr
jo
or
fwait
adc
std
ins
push
and
pop
icebp
aas
dec
dec
aaa
mov
jg
leave
popf
std
xlat
jg
vpshlb
xchg
in
cld
fild
inc
add
dec
mov
cld
aaa
inc
lods
add
cmp
lods
(bad)
push
push
pop
dec
xabort
(bad)
scas
jg
les
add
pop
dec
fsubr
sar
lock
popa
jae
sub
in
mov
dec
nop
idiv
xchg
pop
call
aas
call
aas
(bad)
pop
push
(bad)
xchg
call
call
scas
(bad)
fldcw
jbe
jle
pop
leave
mov
mov
add
neg
cld
pop
dec
into
pop
lock
mov
lahf
inc
mov
pusha
out
nop
pushf
stc
out
jg
sub
fdivr
xlat
in
scas
retf
push
shr
aaa
mov
stc
fist
adc
jg
(bad)
fst
scas
(bad)
mov
jmp
pop
frstor
jmp
jae
or
push
test
stos
pop
cwde
std
or
jmp
cli
or
(bad)
lods
pop
(bad)
in
jg
pop
and
xchg
push
push
(bad)
xlat
jg
mov
lahf
mov
call
push
std
pop
jmp
ss
inc
(bad)
jmp
data16
xchg
or
call
(bad)
jp
cmp
pop
dec
inc
(bad)
out
call
pop
scas
add
outs
and
stc
cmp
out
cld
or
in
jmp
dec
add
cmps
inc
popf
jns
lahf
(bad)
sar
je
jmp
dec
bnd
jg
pop
push
dec
fmul
sbb
cmp
shl
clc
jnp
jne
(bad)
and
imul
aad
xchg
ja
inc
jns
and
and
mov
retf
in
inc
ss
mov
popa
mov
xor
dec
xchg
shl
pop
idiv
(bad)
adc
cld
xlat
push
fild
out
mov
fbld
(bad)
jp
das
icebp
fadd
rol
push
scas
cld
inc
lea
cld
and
jmp
fnstsw
mov
push
dec
mov
(bad)
fidivr
stos
cmp
cld
mov
rol
fsub
add
scas
ret
dec
mov
pop
(bad)
pop
call
mov
test
(bad)
in
mov
jp
jg
out
dec
cmp
push
jmp
imul
bound
ins
inc
imul
test
push
mov
leave
lock
call
scas
ds
(bad)
push
sub
data16
imul
jno
mov
aas
loop
xchg
inc
gs
into
call
mov
int
fimul
aaa
std
(bad)
pop
inc
jmp
out
jecxz
sub
in
clc
xchg
enter
(bad)
jnp
xlat
(bad)
fisttp
out
cld
stos
cdq
neg
aad
(bad)
cli
add
sbb
imul
push
pop
mov
xchg
fistp
or
push
or
loop
adc
fbld
xor
xchg
fwait
in
sar
sub
adc
cli
scas
push
pop
pop
fsub
int
adc
dec
ins
dec
addr16
mov
adc
pop
(bad)
pop
cwde
mov
xchg
jns
arpl
(bad)
aad
cli
(bad)
xchg
jns
push
ins
leave
adc
push
mov
push
jg
sub
rcr
sar
scas
jmp
cwde
retf
mov
je
rol
retf
fs
fnstcw
std
inc
inc
pushf
out
cs
mov
mov
mov
retf
mov
mov
inc
enter
push
cld
add
movs
and
pop
jecxz
mov
adc
sub
enter
lahf
inc
mov
sub
or
xchg
inc
fxch
stc
cmc
enter
cmc
pop
push
(bad)
ds
cmp
mov
enter
inc
adc
out
(bad)
arpl
addr16
add
or
jg
(bad)
sub
mov
daa
mov
test
daa
push
stc
scas
cld
push
push
dec
and
repnz
(bad)
xor
lahf
(bad)
mov
push
cld
xlat
pop
jg
cs
aaa
aas
stc
dec
mov
jmp
std
jne
sar
and
jecxz
jle
push
cmps
cs
jge
push
dec
cli
pop
push
ret
jb
dec
icebp
setno
cli
scas
(bad)
cmc
xchg
call
jmp
mov
jb
out
mov
or
inc
mov
sub
enter
dec
cmp
xchg
xchg
push
jmp
adc
sar
mov
not
or
scas
mov
mov
(bad)
cli
mov
and
cli
dec
call
dec
or
dec
daa
inc
sbb
dec
jg
mov
adc
popf
nop
cmp
mov
shr
movd
(bad)
cli
mov
hlt
in
pop
dec
xchg
in
std
pop
jns
ins
jg
pop
(bad)
out
in
push
fiadd
xor
lea
mov
aad
inc
and
inc
popf
std
cmc
(bad)
sti
lahf
xor
add
stc
popf
(bad)
daa
and
mov
inc
mov
movs
push
aaa
push
imul
sub
cmp
clc
xor
mov
(bad)
jg
jnp
in
mov
jle
repz
not
rcr
(bad)
jae
push
(bad)
jmp
xor
dec
cld
scas
shl
xor
mov
iret
pop
imul
cmp
or
mov
in
dec
adc
xchg
das
xor
scas
jmp
les
jecxz
mov
imul
in
push
pusha
retf
jmp
fnstsw
stos
out
out
pop
xor
dec
jg
mov
fs
cli
test
jg
aas
repz
jg
ja
or
jmp
mov
sbb
psrad
std
sub
pop
cli
repz
in
(bad)
outs
repz
std
repz
and
add
cmc
jg
fbstp
pushf
jg
dec
adc
dec
mov
int3
int
jg
jecxz
push
push
inc
call
stos
jle
aas
ret
aaa
out
idiv
xor
inc
mov
cmc
dec
xchg
sbb
pop
sbb
retf
icebp
idiv
pop
test
popf
fnstsw
mov
out
(bad)
mov
(bad)
mov
add
jle
fucomip
push
sub
cli
aas
(bad)
cmp
inc
adc
aas
repnz
out
sub
pop
jmp
mov
sti
(bad)
inc
xchg
add
les
mov
push
xchg
jmp
out
std
iret
dec
push
(bad)
jle
sub
inc
ins
sub
aaa
std
aaa
into
cwde
(bad)
xlat
jg
jl
leave
paddb
jmp
dec
addr16
pop
fsin
call
leave
retf
(bad)
xchg
push
mov
dec
aad
(bad)
pop
sub
jg
jmp
jae
jg
pop
and
gs
jle
jg
sub
mov
stc
lahf
outs
ins
aaa
or
dec
(bad)
jns
cld
and
mov
pushf
(bad)
xchg
add
std
or
retf
aas
hlt
(bad)
xchg
xchg
aaa
call
outs
cmp
sar
repnz
movs
(bad)
clc
dec
cld
mov
jmp
loopne
(bad)
mov
push
push
pop
add
std
aaa
cld
jmp
mov
cmc
mov
jg
mov
loope
pushf
fdivr
push
imul
fidivr
sbb
push
aas
(bad)
mov
repz
mov
push
idiv
lahf
es
and
movs
add
repnz
jle
out
pop
(bad)
fdivrp
jne
out
sub
popf
pop
inc
mov
outs
or
inc
and
(bad)
and
fcom
sub
and
pusha
cmp
or
(bad)
std
mov
pop
cld
xlat
scas
sub
cmc
pop
or
repz
(bad)
imul
in
and
cld
scas
inc
das
mov
inc
jg
jmp
(bad)
(bad)
fstp
icebp
scas
push
jmp
xlat
cli
jne
fdivr
jl
xor
jbe
lds
idiv
std
cmp
xor
xor
std
pop
jmp
lods
sar
adc
fild
enter
jp
fs
(bad)
nop
(bad)
frstor
lods
add
jae
or
cld
dec
addr16
dec
int3
cmc
mov
inc
ja
test
(bad)
je
arpl
mov
add
pop
mov
push
xchg
call
out
lahf
or
daa
push
rcr
jo
enter
jae
fnstcw
jecxz
clc
scas
lahf
inc
inc
into
(bad)
out
cli
idiv
push
or
stc
imul
imul
(bad)
fisubr
dec
push
dec
dec
shr
das
std
xlat
jg
cmc
mov
rcr
cli
cmpps
in
mul
call
add
dec
pushf
push
xchg
retf
aas
cli
inc
ins
mov
dec
push
mov
pop
xor
sub
add
pop
jmp
push
(bad)
(bad)
or
mov
cmp
aam
pop
(bad)
outs
fs
(bad)
and
(bad)
in
adc
stc
(bad)
and
(bad)
jmp
inc
inc
push
rcr
bnd
stos
out
(bad)
mov
sahf
(bad)
jmp
jg
jmp
ja
scas
add
jmp
mov
neg
std
pop
cld
xlat
in
lahf
add
inc
jmp
call
jg
outs
(bad)
in
in
and
sti
adc
cmc
scas
icebp
div
(bad)
fild
jo
repnz
mov
inc
pushf
cli
test
xchg
mov
lahf
std
outs
add
stc
scas
pop
mov
jmp
add
jecxz
dec
dec
lea
stos
push
sbb
mov
push
(bad)
icebp
mov
cli
(bad)
jae
mov
jmp
cdq
aas
clc
jg
or
(bad)
adc
push
arpl
pop
repz
mov
push
jg
jle
pop
dec
std
cmps
jg
jg
out
mov
es
adc
(bad)
jg
scas
jae
push
pop
fdivrp
cmc
(bad)
jns
and
jmp
std
fild
xchg
cli
das
(bad)
push
into
div
cli
(bad)
cli
(bad)
sti
lahf
in
fsub
lahf
cli
dec
add
stc
scas
jg
js
push
aas
repnz
xlat
cld
push
(bad)
jmp
popf
jo
scas
call
aas
mov
xchg
mov
(bad)
(bad)
cli
ja
jae
or
xchg
lock
dec
xchg
lock
mov
out
repnz
xchg
inc
call
mov
cmp
sub
aas
(bad)
jmp
mov
cli
sub
fdivr
jg
jbe
(bad)
jmp
jb
cwde
sahf
outs
std
push
rol
mov
pop
das
pushf
sti
jge
das
ret
clc
iret
fstp
aas
add
pop
or
iret
jg
mov
stc
(bad)
cli
aas
cld
lahf
rol
cmps
loope
clc
dec
or
outs
stc
cmps
cld
(bad)
idiv
call
mov
jecxz
mov
dec
in
das
lds
sar
clc
in
ffreep
outs
jg
std
imul
jmp
inc
xchg
pop
cdq
(bad)
jmp
dec
clc
xchg
aas
dec
ds
pop
lock
pop
cli
in
scas
(bad)
test
lea
jg
pop
repz
sbb
std
dec
jg
push
daa
xchg
(bad)
clc
mov
sahf
fucomip
xchg
mov
aam
out
cli
in
xlat
cli
ret
jg
aas
pop
dec
repnz
stc
xor
call
shl
cld
bnd
(bad)
jle
imul
sti
stc
addr16
outs
add
pop
stc
repz
aas
cld
pop
jmp
call
scas
and
mov
mov
lahf
clc
sbb
icebp
pop
cli
aas
xor
dec
jmp
lock
std
ins
call
(bad)
(bad)
ds
dec
(bad)
xor
pop
std
cmc
ja
leave
out
aas
neg
cli
inc
fwait
ss
(bad)
(bad)
hlt
pop
(bad)
xor
xchg
(bad)
mov
inc
xlat
mov
(bad)
icebp
mov
xor
jg
out
push
mov
call
dec
jmp
call
ret
jg
sbb
cmp
bnd
mov
ret
pop
call
daa
std
(bad)
outs
imul
cld
cdq
out
aaa
push
scas
std
pop
std
pop
mov
mov
mov
xor
dec
jg
xchg
(bad)
call
sub
cmc
(bad)
cld
std
in
call
scas
mul
adc
neg
cld
pop
mov
jecxz
test
cli
stos
jle
outs
push
call
dec
and
aaa
inc
jg
std
out
call
daa
cmps
shr
repnz
std
stos
push
xchg
call
in
jg
mov
jg
pop
std
xor
outs
(bad)
mov
inc
in
scas
std
inc
jg
mov
idiv
jg
push
das
push
xchg
mov
aad
(bad)
jmp
jg
out
mov
lahf
std
and
jg
pop
jl
stc
mov
jmp
stc
pop
(bad)
sbb
in
dec
std
jg
hlt
icebp
inc
cld
bnd
idiv
push
cld
xchg
jg
or
shr
push
call
call
pop
leave
jle
aas
xor
lds
jmp
mov
(bad)
repnz
clc
out
jle
jg
pop
cld
cmp
sbb
(bad)
push
(bad)
mov
mov
pop
ud0
pop
stc
aaa
std
and
sub
jmp
cmps
jg
das
(bad)
outs
(bad)
fidivr
out
cld
aaa
jle
mov
aas
loopne
std
sahf
(bad)
outs
cli
add
push
lahf
jle
adc
gs
mov
cld
scas
(bad)
fstp
clc
pop
call
aas
ja
call
dec
cld
jge
sbb
cld
inc
xlat
outs
dec
(bad)
inc
das
cld
rcr
(bad)
xchg
jg
out
repz
jg
pop
(bad)
mov
inc
stos
(bad)
mov
inc
fscale
pop
inc
jg
dec
call
pop
or
in
out
clc
inc
pop
(bad)
jmp
ja
ret
in
int
std
(bad)
pop
cld
mov
fwait
mov
cmp
clc
scas
(bad)
jmp
jge
das
std
idiv
out
test
std
sbb
lock
cld
sbb
(bad)
fbstp
pop
cli
sbb
in
iret
std
sbb
(bad)
pop
aas
repz
pop
aas
push
(bad)
stos
jg
out
lock
test
fcomip
lahf
(bad)
hlt
jg
daa
(bad)
out
out
lahf
stc
pop
jle
daa
push
std
lock
cld
jne
mov
adc
xor
aas
mov
ja
jmp
jmp
int
idiv
icebp
jmp
popa
cli
cmp
das
mov
das
mov
(bad)
jg
aas
repz
(bad)
loope
pop
movzx
(bad)
out
fidivr
(bad)
mov
outs
push
call
cmc
stos
(bad)
cmps
push
jmp
in
lock
push
idiv
pop
cmp
lahf
clc
xchg
add
pop
notrack
call
jne
ja
mov
in
cmp
pop
(bad)
cwde
(bad)
std
pop
mov
cmp
jmp
outs
jg
stc
std
fstp
out
repz
mov
aas
clc
mov
std
mov
jg
fnstsw
aad
(bad)
sar
jmp
(bad)
mov
xchg
(bad)
jbe
ret
lahf
cld
xchg
ss
jg
idiv
jmp
jle
outs
repz
(bad)
out
lahf
cld
inc
jg
repz
std
xchg
ret
call
stc
cmps
das
out
fidivr
std
out
jg
dec
mov
hlt
iret
jg
iret
call
cmp
xchg
idiv
pop
cld
mov
mov
push
jg
mov
out
mov
(bad)
nop
addr16
std
lahf
cld
(bad)
call
mov
aas
hlt
aad
fistp
(bad)
jnp
(bad)
call
cmp
rcr
loop
dec
push
(bad)
jmp
out
jg
(bad)
cli
mov
std
xchg
in
pop
jg
outs
(bad)
mov
repz
cld
add
jg
std
lahf
cld
pop
pop
std
and
std
pop
in
in
mov
in
stc
fldcw
clc
jecxz
idiv
jle
push
outs
dec
(bad)
mov
in
jg
idiv
pop
sti
iret
pop
imul
cld
fnstsw
dec
std
ror
(bad)
jmp
(bad)
in
aas
cmps
dec
lods
jg
sbb
das
cmc
xlat
jg
loopne
jmp
cld
(bad)
aas
sub
lods
push
jmp
jae
jg
mov
jnp
aaa
mov
repz
cmc
out
std
(bad)
(bad)
cmp
cmc
(bad)
out
dec
jg
fldcw
mov
cmp
cmc
xchg
jmp
outs
clc
aaa
aas
xor
jnp
fcompp
fcomip
lock
dec
(bad)
idiv
lahf
clc
sar
aad
jmp
sti
mov
mov
cmps
cld
in
jg
into
scas
call
(bad)
push
inc
dec
int3
mov
outs
repnz
dec
cmp
repz
or
in
das
cli
sub
scas
std
mov
(bad)
inc
cmp
call
jmp
std
sar
pop
jmp
sti
arpl
jnp
(bad)
(bad)
clc
push
lahf
(bad)
jmp
jg
call
idiv
repz
(bad)
stc
shr
cld
xor
(bad)
fstp
out
cmps
lahf
jmp
das
sti
and
call
idiv
dec
(bad)
fisubr
xchg
outs
(bad)
aaa
dec
int
(bad)
out
std
aad
imul
in
std
dec
jg
pop
clc
aas
jl
iret
push
push
std
(bad)
sti
pop
mov
jg
out
xlat
aas
jle
mov
pusha
cld
retf
dec
out
(bad)
cmp
out
std
mov
aas
cli
ja
push
mov
cld
xor
(bad)
ja
call
out
stc
(bad)
pop
repnz
ret
stc
scas
lahf
(bad)
loope
retf
pop
repz
aas
out
fistp
ja
std
jae
jmp
dec
(bad)
dec
mov
jmp
aaa
(bad)
in
jg
sti
aam
hlt
cmps
jg
pop
mul
adc
pusha
icebp
push
(bad)
fisubr
mov
adc
jg
push
(bad)
mov
retf
outs
idiv
std
mov
idiv
mov
clc
test
(bad)
iret
jg
scas
repz
mov
sti
std
adc
das
std
das
cmps
jg
push
shl
stc
std
cld
pop
mov
fcomip
lds
(bad)
repz
cld
xchg
out
inc
cdq
das
aas
sti
imul
cli
jmp
icebp
icebp
outs
hlt
imul
jg
scas
and
jmp
(bad)
scas
cli
xor
call
lahf
in
(bad)
arpl
jl
lahf
(bad)
aas
dec
dec
repnz
std
call
push
in
aas
sti
loop
fnstsw
aas
push
clc
jg
jg
(bad)
in
call
jmp
mov
or
std
addr16
in
(bad)
sti
cld
repz
pop
outs
push
xor
jmp
call
xchg
jg
aas
loop
(bad)
fdivr
pop
inc
push
call
push
clc
(bad)
cmc
jmp
inc
fcomip
scas
call
jmp
repnz
dec
(bad)
jg
clc
out
jle
fnstcw
(bad)
mov
jae
loop
in
iret
mov
mov
into
push
(bad)
lahf
stc
xchg
mov
cld
gs
dec
mov
xor
ja
mov
sti
jg
call
jmp
cli
jge
fstp
in
mov
jg
pop
repnz
std
pop
jg
scas
clc
inc
test
jg
ja
adc
jge
imul
push
dec
mov
(bad)
sti
icebp
jg
repnz
jg
mov
sti
jg
(bad)
aaa
cmp
jecxz
aad
jl
dec
mov
outs
retf
mov
xchg
daa
mov
arpl
clc
xlat
fidivr
pop
std
push
pop
cld
call
pop
(bad)
jbe
fdiv
lds
rol
std
fcomip
out
(bad)
aaa
xchg
mov
mov
jg
sbb
in
stc
jecxz
cmc
lahf
repnz
mul
jg
cdq
out
hlt
push
jb
add
stos
jle
out
cli
stos
cld
or
ins
jmp
(bad)
in
inc
pop
mov
add
cmps
out
mov
(bad)
cld
push
aaa
cld
fwait
jle
mov
sahf
stc
aaa
cli
std
jle
lahf
cld
sar
mov
imul
(bad)
jmp
jne
leave
jg
xchg
sti
out
stc
ins
inc
dec
(bad)
aas
test
mov
stc
loope
dec
jle
pop
xor
or
neg
in
iret
aas
(bad)
fwait
jg
pop
clc
(bad)
xchg
(bad)
clc
aas
imul
out
push
sti
ja
outs
jg
lahf
std
(bad)
inc
sbb
sti
in
jg
and
mov
pop
call
jmp
(bad)
jmp
(bad)
(bad)
out
mov
aaa
sti
cmp
(bad)
aas
mov
cmps
std
jne
and
fcomi
stc
pop
cmc
mov
das
sti
inc
(bad)
xchg
jmp
cmps
mov
push
retf
fcomip
scas
call
aam
cld
scas
push
cmp
aas
repz
jmp
out
jg
pop
(bad)
std
mov
mov
stos
jg
lahf
popa
mul
xor
mov
js
ins
icebp
mov
imul
arpl
push
jl
(bad)
dec
jmp
(bad)
lahf
inc
push
mov
sti
pop
inc
(bad)
xor
das
call
repz
mov
dec
outs
(bad)
ins
jle
mov
leave
cmps
sti
into
jg
cli
dec
(bad)
imul
xchg
cld
add
jg
outs
jb
scas
and
les
call
call
sti
cs
jmp
xlat
cmps
mov
xchg
jg
addr16
cmp
jecxz
jg
jge
addr16
(bad)
jp
lock
push
(bad)
scas
jg
cmps
jg
push
stc
fcomip
sbb
std
cmc
das
jg
jg
out
cld
imul
mov
push
aaa
std
ds
(bad)
std
std
movs
xor
pushf
aas
jmp
scas
call
lahf
and
addr16
shr
ja
int
(bad)
hlt
or
data16
shl
aas
call
outs
ins
data16
aas
mov
jecxz
test
(bad)
cld
mov
lahf
jle
inc
mov
fstp
cmc
outs
xor
jmp
cld
mov
cli
xchg
out
loope
push
aad
gs
inc
inc
jg
das
cli
(bad)
(bad)
xchg
fdivr
stc
rcr
inc
ja
lock
jmp
sub
jg
lahf
mov
cmp
sbb
push
pop
mov
lahf
jmp
(bad)
and
repnz
cld
fnstsw
in
dec
cld
cmp
retf
hlt
lahf
pop
fwait
test
jg
fistp
add
out
cli
jg
mul
paddw
jle
aas
loop
std
dec
or
(bad)
ja
popa
std
(bad)
inc
lahf
std
fs
adc
fwait
std
clc
pop
icebp
(bad)
ins
jg
repnz
stc
adc
std
idiv
(bad)
pop
jmp
jg
repz
std
mov
sti
jne
test
std
lahf
daa
xchg
push
std
imul
jg
pop
shl
mov
cld
jecxz
scas
clc
(bad)
dec
mov
add
inc
jmp
pop
mov
jg
dec
call
rcr
stc
leave
ret
mov
jle
jns
daa
(bad)
pusha
cmc
imul
cli
cmc
scas
and
std
pop
in
cld
add
pop
(bad)
mov
dec
jmp
mov
pusha
std
cmp
std
imul
jmp
ins
mov
(bad)
ficomp
mov
aas
jge
out
dec
sbb
mov
pusha
sahf
aas
(bad)
lahf
jle
push
rcr
cmps
std
mov
hlt
icebp
(bad)
jp
(bad)
sti
aas
stc
outs
call
lock
(bad)
clc
fld
mov
repz
inc
stos
jmp
call
clc
mov
(bad)
ds
jnp
call
jmp
cli
push
dec
movs
xchg
push
hlt
sbb
xchg
add
add
(bad)
ud0
fcomip
jg
clc
mov
sti
pop
inc
cld
dec
jns
cmovle
fwait
jg
pop
enter
call
xchg
jg
aas
mov
(bad)
mov
stc
idiv
mov
loope
cli
mov
mov
jle
jle
(bad)
push
jg
(bad)
std
push
jmp
push
mov
std
dec
in
inc
in
dec
call
icebp
jg
out
pop
(bad)
mov
out
or
rcr
jmp
(bad)
out
(bad)
mov
xlat
dec
or
jle
lahf
cli
mov
stc
idiv
push
fstp
daa
mov
cld
ja
pop
mov
(bad)
cli
(bad)
ja
(bad)
fidivr
icebp
mov
jmp
sar
std
sbb
cmp
mov
(bad)
out
repnz
cmp
stc
inc
or
clc
mov
(bad)
mov
cmp
jg
mov
mov
repz
or
jg
lahf
call
pop
(bad)
fcompp
loope
mov
dec
in
pop
jne
mov
in
outs
(bad)
cld
imul
out
outs
jg
cmps
mov
icebp
mov
jmp
aas
(bad)
aas
mov
enter
cli
das
std
fwait
inc
das
and
inc
(bad)
(bad)
paddd
mov
mov
out
std
repz
int
lahf
std
out
into
jg
addr16
pop
cld
retf
(bad)
push
mov
jle
xor
mov
repz
std
movs
mov
sub
out
std
cdq
(bad)
sti
pop
std
in
inc
cld
sub
repz
stc
(bad)
(bad)
stc
jmp
(bad)
xchg
cmp
(bad)
dec
int
lds
mov
call
arpl
push
add
lock
sti
(bad)
fmul
cli
add
xchg
push
mov
push
aaa
std
push
jle
mov
inc
scas
(bad)
test
out
aas
clc
imul
in
stc
lods
(bad)
(bad)
aas
call
vmaxps
or
in
ja
pop
push
jecxz
sar
fst
jmp
jmp
int
lods
aas
pop
add
(bad)
aas
cdq
out
(bad)
loope
jecxz
cld
lahf
push
mov
jmp
sar
jl
cmps
call
lds
pop
dec
out
(bad)
xchg
jg
outs
cli
seto
ja
(bad)
addr16
lahf
clc
pandn
mov
std
xor
(bad)
aas
bnd
fwait
sbb
push
out
pop
jg
xor
jmp
add
das
mov
jle
fucomip
(bad)
cmp
jne
mov
imul
pop
std
out
pop
mov
xor
xchg
push
mov
xlat
pop
stc
aas
jmp
hlt
scas
jecxz
mov
out
cld
mov
loop
bnd
stos
pop
cld
cdq
(bad)
sti
lahf
dec
lahf
std
mov
int
out
(bad)
mov
jle
loopne
std
lods
(bad)
jmp
sar
xlat
call
push
sbb
xchg
(bad)
neg
cmp
scas
jmp
inc
push
fnstsw
sti
das
clc
xchg
dec
(bad)
mov
stos
jg
mov
addr16
xlat
mov
(bad)
hlt
(bad)
inc
inc
(bad)
inc
out
out
test
mov
fidivr
idiv
xlat
rcr
(bad)
cli
aas
out
jns
in
scas
outs
jle
(bad)
jbe
cmc
aas
hlt
mov
aas
jle
mov
cli
mov
jg
jmp
repz
jg
std
pop
repz
std
ds
aad
push
mov
and
jg
in
hlt
mov
(bad)
scas
fsin
or
stc
(bad)
(bad)
mov
(bad)
pop
jne
test
jg
repz
aas
jb
ja
lahf
into
jle
ja
repz
popf
daa
pop
(bad)
jmp
(bad)
jge
jg
outs
fwait
(bad)
push
mov
iret
dec
jg
(bad)
cld
aaa
(bad)
cmp
sti
iret
movs
(bad)
stc
pop
or
addr16
(bad)
in
mov
repz
int
mov
jmp
aas
clc
outs
inc
fistp
das
cli
icebp
fucomip
jg
add
(bad)
mov
sbb
call
mov
fstp
psubd
dec
pop
(bad)
out
cli
lds
icebp
outs
cmc
xchg
xchg
std
mov
jg
pop
icebp
dec
inc
(bad)
mov
push
pop
jecxz
sti
lds
cli
in
pop
outs
jg
jg
mov
fnstcw
mov
push
jg
mov
(bad)
(bad)
outs
mov
(bad)
jnp
in
add
fist
test
hlt
(bad)
cld
test
(bad)
hlt
fisttp
jle
movs
call
std
test
(bad)
test
jle
cld
imul
das
hlt
fld
(bad)
push
cld
neg
loopne
(bad)
push
shr
xlat
psubsb
std
jb
test
hlt
fstp
(bad)
lock
out
cli
cmp
dec
mov
std
imul
mov
out
(bad)
call
std
retf
mov
loopne
pop
clc
pop
shr
pop
jle
movd
in
outs
shr
out
inc
mov
sti
add
outs
jl
mov
lahf
call
std
test
mov
clc
in
neg
mov
mov
mov
jns
mov
hlt
xor
in
or
or
(bad)
pop
icebp
mov
outs
lock
(bad)
jmp
imul
aam
idiv
(bad)
lock
test
aad
xchg
aam
fwait
push
pop
std
daa
in
(bad)
xchg
mov
fist
mov
sti
lds
jmp
dec
repz
aas
jb
jecxz
cmp
(bad)
jg
addr16
in
mov
xchg
and
jge
jmp
aas
loopne
cld
and
dec
push
stos
test
(bad)
jg
jg
jg
ja
and
stc
jg
jmp
sbb
xchg
sti
xchg
aas
(bad)
ins
jge
repz
(bad)
clc
xor
repz
fist
icebp
xlat
pop
sti
jnp
dec
cdq
mov
mov
ins
idiv
js
sti
cld
add
mov
out
fistp
stc
add
sti
jg
int3
out
cli
mov
loope
bound
mov
(bad)
ror
shl
cld
popf
jg
pop
(bad)
jp
jmp
je
pop
jnp
inc
cld
int
jg
outs
std
sub
retf
pop
cld
data16
fld
sub
stc
arpl
push
hlt
sbb
lods
pop
lock
std
data16
stc
call
std
push
mov
mov
call
push
(bad)
call
cli
dec
(bad)
(bad)
scas
mov
jne
aas
jmp
(bad)
das
pop
lahf
fdivrp
cmps
int3
cmps
jg
dec
fidivr
call
cld
sbb
lds
out
iret
push
(bad)
in
call
xlat
xchg
push
jmp
call
pop
sbb
int
out
push
iret
fdivrp
clc
out
pop
(bad)
cmp
addr16
std
cmp
int
lock
std
popa
mov
pop
cmps
mov
(bad)
dec
daa
mov
(bad)
mov
call
(bad)
jg
pop
(bad)
fidivr
idiv
sbb
mov
call
in
jg
not
dec
(bad)
mov
repz
std
adc
fist
jle
cmp
aas
ret
repnz
std
push
(bad)
fstp
std
aas
aas
std
dec
(bad)
jecxz
jmp
fcomip
xlat
push
cmp
jg
iret
jg
xchg
cld
and
jg
aas
(bad)
mov
test
lock
(bad)
out
mov
pop
(bad)
das
daa
jmp
aas
cld
xlat
cld
inc
neg
retf
call
idiv
outs
std
pop
mov
rcr
(bad)
mov
jecxz
push
popf
fcomip
iret
sti
cdq
mov
ja
stos
pop
jecxz
(bad)
ins
inc
fucomip
hlt
lock
aas
jae
fwait
(bad)
xchg
aas
stc
mov
cwde
push
or
out
jle
jg
ret
int
dec
inc
mov
dec
aas
imul
outs
not
sbb
fcomp
stos
inc
cmp
idiv
hlt
das
fwait
xchg
scas
dec
scas
(bad)
jmp
clc
daa
(bad)
in
cmp
paddd
xchg
jle
cli
idiv
lods
in
mov
into
mov
test
retf
mov
std
into
push
scas
sti
sub
neg
daa
pop
jge
out
sbb
std
out
mov
call
into
inc
std
jecxz
clc
xchg
(bad)
mov
in
xchg
clc
into
jmp
stc
out
jmp
popf
jbe
mov
aas
imul
fucomip
mov
retf
or
scas
and
loope
(bad)
out
das
cld
cmps
(bad)
sahf
das
dec
jmp
mov
in
(bad)
aad
ret
cmps
call
mov
sar
std
cld
xlat
inc
sar
cmc
dec
pop
std
inc
call
(bad)
outs
cld
lea
mov
pop
mov
jg
jg
inc
dec
mov
icebp
call
cld
jecxz
jmp
dec
ja
aaa
inc
repnz
cli
pop
(bad)
loope
in
pop
cmc
out
dec
mov
fucomip
aaa
push
cmps
(bad)
mov
jg
cli
mov
xchg
jmp
sbb
and
lahf
std
imul
cmc
(bad)
call
and
mov
inc
idiv
mov
repz
arpl
mov
cmp
sti
aas
cld
addr16
jae
jge
das
mov
leave
jg
das
std
adc
div
cli
sbb
cld
ja
stc
lahf
inc
jmp
aas
stc
(bad)
cmc
outs
out
std
loop
repz
stc
jae
out
in
idiv
repz
movs
std
mov
adc
retf
mov
iret
cmp
cmc
inc
pop
jg
popf
mov
jmp
jmp
cmps
jg
dec
cld
aam
icebp
imul
push
inc
arpl
outs
sti
test
lahf
xchg
aaa
(bad)
out
dec
dec
sti
repnz
dec
loope
jge
arpl
push
(bad)
xchg
idiv
std
push
sti
icebp
aas
imul
lahf
cli
xchg
jge
addr16
shl
(bad)
cli
jg
jmp
pop
dec
dec
mov
in
lahf
dec
cmps
retf
pop
imul
aas
cmc
mov
cld
mov
pop
std
popf
jg
scas
jno
aas
cld
jle
int3
scas
cmp
dec
(bad)
mov
and
test
stos
jle
pop
icebp
sbb
int
fnstsw
scas
std
dec
push
retf
dec
ret
retf
pop
xor
fucomip
paddd
mov
out
iret
out
std
test
stos
(bad)
xlat
jmp
fistp
pop
inc
(bad)
scas
call
ds
xchg
or
jle
mov
(bad)
jg
rcr
cli
stc
(bad)
cli
repnz
push
std
xor
stc
cld
outs
jnp
adc
iret
push
dec
mov
(bad)
in
(bad)
fcomp
mov
pop
sbb
sub
mov
inc
cli
(bad)
lahf
jns
xlat
(bad)
scas
mov
cld
xlat
adc
cld
movs
lahf
std
jbe
mov
leave
aas
lock
fild
push
(bad)
inc
cld
sbb
aam
jmp
movaps
jbe
cld
pop
jno
iret
mov
mov
out
fist
mov
or
cmp
add
outs
loop
dec
lahf
std
ja
(bad)
sub
leave
fcomip
fst
mov
(bad)
std
lahf
cli
lods
dec
mov
(bad)
(bad)
fstp
ja
cmp
out
cld
push
jg
pop
sti
mov
in
jle
jg
aad
aaa
stc
add
mov
jmp
enter
cmp
pop
addr16
icebp
in
clc
pop
jmp
xchg
jg
jmp
(bad)
(bad)
(bad)
ret
aas
jmp
jnp
lea
xchg
push
out
(bad)
repz
lahf
hlt
push
dec
mov
gs
cmp
lahf
jl
cmps
call
push
std
xchg
jg
jg
(bad)
call
jg
jg
test
loop
shl
dec
mov
cmp
mov
(bad)
out
jno
sti
(bad)
cmps
(bad)
cli
(bad)
cld
loop
ds
cdq
mov
adc
jg
pop
(bad)
sbb
loopne
cli
in
(bad)
out
push
jmp
pop
jl
mov
cmps
and
jg
lahf
clc
pop
cld
popa
lahf
shl
out
pop
lock
jle
jb
(bad)
hlt
stc
pop
(bad)
ins
jg
scas
(bad)
mov
cmp
inc
mov
imul
aas
cmp
pop
(bad)
cdq
xchg
outs
stc
addr16
rcl
cli
lahf
fdivr
test
mov
popf
jmp
arpl
(bad)
and
jmp
repnz
std
mov
clc
scas
mov
dec
mov
sar
xchg
inc
(bad)
fisub
(bad)
retf
outs
cmps
loopne
clc
jg
call
jg
push
and
push
dec
sub
(bad)
in
daa
xchg
mov
inc
inc
fcomp
out
xor
jmp
outs
iret
pop
(bad)
cmp
ds
aas
inc
aas
dec
xchg
(bad)
(bad)
jg
stos
(bad)
gs
push
cld
jmp
jmp
cdq
dec
mov
loope
cld
retf
jmp
pop
jecxz
and
cli
daa
cli
loope
icebp
xchg
dec
dec
idiv
(bad)
das
ss
(bad)
jge
test
mov
lds
xchg
aas
repz
jp
pop
(bad)
mov
sbb
mov
cmp
out
(bad)
(bad)
lods
out
call
jecxz
inc
sti
out
clc
in
ds
sar
mov
fidivr
std
das
jge
retf
(bad)
sar
into
(bad)
mov
int
leave
mov
dec
xlat
sub
dec
sti
jle
jg
pop
mov
and
jmp
call
shr
cmc
pop
cwde
xchg
(bad)
(bad)
loopne
mov
out
std
dec
dec
mov
(bad)
fcomip
neg
(bad)
lahf
imul
(bad)
je
jmp
(bad)
int
mov
cmc
(bad)
ins
xor
arpl
outs
mov
scas
repz
push
lahf
clc
jmp
inc
mov
outs
sti
scas
nop
leave
dec
sar
(bad)
std
jmp
cli
scas
sti
stos
sahf
(bad)
fsub
daa
(bad)
neg
scas
cld
sar
scas
mov
jl
(bad)
dec
jg
(bad)
xlat
(bad)
loopne
jns
jmp
in
cld
mov
call
test
(bad)
jg
push
jo
aam
xor
(bad)
adc
cwde
pop
(bad)
cmp
aaa
cld
xchg
jg
sbb
mov
inc
mov
dec
jg
push
sbb
ror
sub
in
repnz
pop
xchg
sti
jne
jg
(bad)
and
jle
xor
scas
xchg
cmp
sub
sub
test
ret
mov
sub
jg
pop
icebp
shl
cld
mov
push
push
cmps
inc
jns
inc
jg
(bad)
std
iret
das
inc
stc
fwait
jg
dec
jle
cli
mov
jae
or
std
retf
adc
fucomip
aaa
clc
sti
mov
es
scas
std
(bad)
rcr
icebp
scas
jl
dec
(bad)
fistp
(bad)
and
mov
pop
test
or
mov
jg
mov
cs
cli
rcr
jnp
loop
outs
dec
mov
hlt
aaa
dec
out
pop
cld
ja
outs
call
(bad)
cmp
std
ret
fwait
xchg
jg
push
int
and
cmc
(bad)
sti
pop
inc
jle
aas
repnz
das
jmp
imul
inc
hlt
sbb
dec
dec
jle
(bad)
ud0
(bad)
fnstsw
inc
std
idiv
cmc
dec
(bad)
fnstsw
sbb
lahf
cli
mov
movs
dec
jg
xlat
call
sar
out
scas
jle
mov
call
adc
cld
idiv
icebp
push
pop
xchg
xchg
push
(bad)
mov
cmps
jg
pop
stc
enter
int3
repz
scas
stc
in
dec
cmc
ja
(bad)
std
mov
std
int3
jg
(bad)
mov
std
in
mov
in
aas
(bad)
push
mov
enter
(bad)
scas
sti
jg
daa
mov
sub
pop
pop
cld
sbb
sub
dec
cmps
mov
pushf
fisttp
mov
dec
(bad)
out
jg
jg
idiv
sti
fstp
(bad)
jns
or
clc
jmp
mov
add
call
(bad)
pop
(bad)
aad
int
mov
imul
clc
mov
ja
(bad)
jmp
dec
aas
movs
shr
das
std
sub
dec
cdq
push
lahf
adc
std
mov
stc
(bad)
xchg
mov
pusha
js
mov
aas
loop
das
mov
cld
mov
cli
jnp
jg
lahf
test
lock
jge
idiv
add
dec
inc
std
mov
scas
es
outs
std
out
(bad)
jmp
cli
imul
jg
call
outs
jmp
jnp
loope
jg
lahf
jmp
mov
(bad)
in
lahf
dec
xchg
pop
cld
iret
xchg
in
pop
(bad)
mov
stc
jae
mov
(bad)
cld
out
addr16
(bad)
cmp
out
pop
mov
aas
(bad)
in
jnp
(bad)
ds
jg
outs
std
xchg
in
push
std
in
out
cli
lods
ds
cmc
pop
stc
hlt
rcr
scas
std
jne
call
dec
adc
sti
push
mov
jne
mov
mov
stos
int3
fsubr
jle
mov
leave
lahf
xor
(bad)
fdivr
arpl
push
aas
repnz
fbstp
pop
std
adc
jmp
icebp
cli
pop
cli
pop
jle
fcomip
aas
push
call
(bad)
cld
xchg
sbb
out
call
jg
rcl
leave
mov
(bad)
jle
pop
stc
(bad)
cwde
ds
(bad)
fstp
in
aas
(bad)
mov
(bad)
out
jg
sub
loope
jge
ja
clc
scas
jle
mov
clc
lahf
(bad)
imul
ja
cs
in
pop
sti
mov
lods
dec
stc
jg
std
lds
repz
clc
arpl
mov
ret
in
aad
ror
fdivr
cmp
ja
xor
and
dec
sub
cmps
dec
inc
cmp
call
lahf
ins
xchg
fdivr
add
inc
jg
out
scas
dec
jg
xchg
(bad)
jg
pop
test
idiv
lock
dec
push
inc
jg
out
hlt
cmp
sbb
scas
std
xchg
(bad)
stos
pop
out
cld
dec
call
(bad)
outs
pop
in
dec
pop
(bad)
jns
retf
imul
push
jmp
mov
inc
(bad)
mov
pop
clc
idiv
std
sbb
(bad)
pop
scas
dec
jg
cld
scas
mov
lods
(bad)
scas
aaa
ins
jg
xchg
jno
xchg
outs
std
out
fidiv
aad
mov
int
std
(bad)
push
inc
(bad)
std
pop
dec
fnstcw
ja
push
(bad)
(bad)
or
sbb
mov
(bad)
cli
stos
jmp
pop
inc
movs
or
aas
cld
hlt
out
clc
lea
stc
sbb
mov
jmp
daa
mov
jg
idiv
movq
pop
hlt
fldcw
std
aaa
jge
pop
(bad)
pop
mov
cld
mov
idiv
mov
(bad)
(bad)
jns
test
pop
call
aad
js
fnstsw
cmp
aas
jmp
sti
(bad)
outs
std
(bad)
(bad)
lods
stc
ins
imul
mov
loopne
imul
call
adc
idiv
das
jg
(bad)
pop
or
sub
std
pop
enter
lahf
pop
cld
fstp
lock
scas
cld
add
(bad)
fcomp
test
mov
leave
jae
mov
aaa
sti
inc
jle
(bad)
in
pop
lahf
(bad)
mov
scas
sti
(bad)
(bad)
fidivr
js
(bad)
push
cld
inc
out
std
lahf
cld
xchg
jbe
mov
cli
xchg
call
(bad)
stc
cmp
outs
lahf
(bad)
sar
dec
std
iret
xchg
xchg
icebp
outs
rcr
jle
jmp
getsec
stos
jmp
pop
(bad)
xchg
fdiv
(bad)
cmp
dec
mov
ret
jns
(bad)
pop
mov
popa
jg
lahf
dec
stos
pop
(bad)
cld
dec
loop
and
jmp
xchg
call
enter
scas
sbb
out
std
pop
cld
jae
(bad)
add
mov
out
(bad)
jmp
jge
jmp
aam
das
adc
daa
shl
mov
adc
sar
scas
(bad)
jmp
lock
cmp
jmp
add
mov
fbstp
retf
scas
es
stc
stos
(bad)
std
mov
mov
out
pop
clc
pop
std
mov
div
pop
cld
sub
mov
repz
aas
clc
jmp
xchg
mov
push
jg
jp
aaa
dec
(bad)
sti
into
push
ud0
addr16
jecxz
jg
lahf
sti
xchg
fnstcw
jne
jecxz
cmc
fucomp
repz
inc
mov
stos
call
daa
inc
mov
jg
(bad)
dec
pop
cld
fwait
mov
cld
inc
scas
jmp
mul
cld
scas
out
jmp
neg
or
mov
aas
cld
in
(bad)
and
cld
in
jp
imul
mov
jmp
lds
imul
pushf
jle
sub
call
mov
jle
or
popa
popa
jg
jb
loopne
xor
call
(bad)
in
(bad)
cwde
pop
mov
or
icebp
fcomip
pop
jmp
in
cdq
lods
jmp
idiv
mov
add
add
mov
outs
sar
das
cld
mov
sbb
dec
jmp
(bad)
jmp
das
enter
aad
xor
call
push
pop
jb
jl
imul
(bad)
fstp
dec
leave
(bad)
add
or
(bad)
enter
(bad)
test
cld
mov
jmp
ret
aas
test
add
imul
daa
jg
call
cld
mov
les
jle
mov
loop
cli
scas
sahf
fwait
push
(bad)
(bad)
cld
loop
(bad)
jmp
xlat
pop
inc
mov
jmp
ret
fcomip
inc
(bad)
shl
push
mov
pop
push
jg
das
sti
add
test
jo
jle
mov
call
jg
(bad)
imul
xlat
aas
arpl
mov
jg
or
xor
scas
jle
fcomip
pop
(bad)
pop
dec
adc
(bad)
(bad)
ja
adc
(bad)
jb
shr
loope
movs
dec
xchg
pop
cs
(bad)
in
cmps
gs
(bad)
xlat
clc
inc
jg
aas
inc
imul
mov
iret
call
jecxz
in
dec
std
jne
xchg
pop
hlt
retf
iret
mov
xchg
ret
popf
ds
mov
mov
stc
stc
out
stc
ja
movsx
aas
cli
call
loop
dec
out
cld
call
in
outs
div
aas
inc
cwde
mov
lahf
sub
push
std
sub
and
imul
std
pop
mov
dec
mov
mov
mov
mov
jmp
mov
std
fild
or
bnd
cli
(bad)
not
mov
stos
leave
xlat
jle
mov
mov
ds
push
pop
cdq
pop
cld
dec
scas
(bad)
mov
dec
std
lea
lock
mov
push
cmps
test
(bad)
aas
jg
sti
jmp
test
mov
scas
jmp
ja
lods
call
dec
xchg
mov
mov
das
(bad)
(bad)
outs
std
pop
(bad)
jmp
loop
(bad)
pop
test
scas
cli
xchg
push
std
and
cld
in
clc
add
aad
(bad)
xlat
push
stos
(bad)
call
hlt
int
jmp
div
fistp
lock
call
or
jmp
jg
out
dec
std
gs
scas
repz
xor
sti
std
or
(bad)
loope
lock
push
jg
ja
scas
(bad)
pop
mov
out
stc
lahf
ror
retf
out
aad
sbb
icebp
outs
cli
paddd
idiv
stc
not
jp
scas
inc
cld
pop
jg
add
lahf
call
jecxz
aaa
repz
std
(bad)
xlat
lahf
cld
(bad)
jle
shr
(bad)
ja
rcl
lahf
(bad)
xor
out
xchg
cli
stc
scas
icebp
mov
cli
or
lods
adc
mov
ds
in
jle
mov
mov
pop
neg
hlt
loop
inc
pop
mov
icebp
mov
jne
test
cld
iret
add
inc
stos
cld
pop
(bad)
aas
mov
(bad)
mov
int3
jmp
(bad)
jg
fcomip
pop
std
inc
jg
pop
clc
fnstsw
cmps
lahf
push
cld
gs
cmp
aad
loope
jg
mov
xchg
(bad)
(bad)
stos
fucomip
xlat
stc
xor
lock
scas
stc
in
iret
cli
jne
adc
inc
(bad)
sti
aas
icebp
mov
jmp
scas
clc
jne
movs
jg
(bad)
jmp
mov
iret
(bad)
jmp
mov
pop
jmp
(bad)
clc
jb
iret
cld
jne
dec
call
mov
int
jecxz
push
pop
dec
inc
(bad)
hlt
iret
adc
cld
mov
adc
cld
mov
outs
cmp
push
repz
dec
in
jle
aas
xor
out
cmp
and
stc
sbb
popa
icebp
mov
setle
retf
les
lahf
mov
movs
iret
push
in
idiv
inc
(bad)
cli
mov
das
(bad)
mov
jno
jnp
xchg
outs
hlt
paddb
int
sti
idiv
icebp
mov
lods
jmp
scas
cld
jno
mov
fidivr
repz
std
movs
(bad)
in
mov
fstp
dec
jae
pop
xor
std
lahf
cld
imul
movs
push
mov
mov
jle
pop
lock
cld
pop
cmc
mov
jle
jg
sti
jg
mov
mov
mov
jmp
(bad)
clc
lahf
neg
pop
jg
mov
out
jg
pop
sti
pop
out
shl
jmp
lods
jg
jg
fucomip
(bad)
icebp
aas
(bad)
jmp
jg
(bad)
aas
jno
ja
in
fistp
repnz
jle
mov
rcl
(bad)
jbe
retf
fs
out
cli
dec
jbe
or
out
mov
loopne
jo
aaa
cld
shr
dec
(bad)
in
pop
neg
scas
jg
fscale
jg
imul
repz
std
mov
in
jmp
(bad)
stos
dec
jmp
mov
scas
cld
lods
(bad)
loopne
cmps
jmp
push
lahf
cld
or
idiv
xchg
jg
sub
icebp
outs
icebp
pop
(bad)
clc
outs
sti
xlat
mov
or
fstp
aaa
dec
jle
jg
aas
sti
xchg
mov
call
aas
jge
jl
pop
cmc
aaa
std
sbb
pop
dec
std
dec
dec
popf
pop
sti
fisttp
psubb
idiv
std
mov
mov
jg
pop
jnp
(bad)
scas
jg
in
mov
clc
inc
jg
repz
mov
lods
mov
mov
dec
mov
xchg
stc
repnz
fdivrp
ret
inc
aas
icebp
iret
jmp
and
jmp
jmp
mov
(bad)
mov
inc
pop
cmp
mov
das
stc
outs
(bad)
repnz
outs
cmc
xchg
dec
dec
mov
stos
mul
(bad)
frstor
mov
lahf
jg
imul
jg
jg
stc
sbb
scas
(bad)
sbb
stc
fistp
cli
jae
int
mov
outs
std
std
(bad)
dec
jg
pop
inc
cmps
add
jg
ror
pop
inc
aas
stc
(bad)
(bad)
mov
pop
cwde
dec
sub
stc
(bad)
out
shl
xor
(bad)
inc
std
sar
out
clc
(bad)
scas
stc
mov
mov
(bad)
(bad)
xchg
(bad)
cli
aas
stc
jge
iret
aas
in
call
ret
mov
jmp
aas
loop
sti
pop
jle
mov
aas
icebp
jmp
(bad)
cmp
data16
scas
inc
std
addr16
test
fistp
mov
aas
dec
pop
push
call
pop
hlt
fwait
dec
sbb
push
push
pop
adc
sbb
std
pop
call
out
and
lock
test
sar
jnp
leave
outs
div
mov
out
jl
mov
jmp
aaa
movs
jg
pop
lahf
out
cld
inc
jg
fcomip
xchg
sahf
(bad)
mov
jp
(bad)
dec
adc
(bad)
cli
daa
std
inc
(bad)
fnstsw
aam
(bad)
addr16
mov
push
movs
jle
iret
std
repz
aas
jns
(bad)
(bad)
cmps
jmp
fcmovb
mov
xor
lock
aas
mov
popf
jg
jg
jnp
cld
jmp
aas
jns
paddd
movs
inc
jmp
out
std
pop
jg
outs
stc
mov
std
cld
ja
test
pop
icebp
pop
call
(bad)
mov
(bad)
mov
xchg
push
jae
mov
jg
cmc
sub
outs
mov
xor
xchg
(bad)
repz
out
mov
sub
stc
fcomip
dec
mov
idiv
scas
xlat
cld
mov
sti
jg
scas
mov
push
cli
jmp
(bad)
jne
iret
jmp
jmp
aad
hlt
cli
pop
js
dec
fdivr
push
adc
jle
iret
fdivrp
cmc
mov
pop
mov
std
xchg
(bad)
xchg
scas
ins
hlt
repnz
xor
(bad)
ds
(bad)
scas
icebp
out
mov
repnz
(bad)
jmp
jbe
mov
cmp
(bad)
push
cmps
jb
mov
cs
call
std
or
lea
scas
dec
dec
lar
rcr
repz
cld
mov
push
movs
jmp
pop
inc
scas
fidiv
std
xor
xlat
mov
inc
mov
pusha
std
sbb
psubb
(bad)
ret
dec
mov
mov
jecxz
dec
(bad)
popa
data16
out
hlt
retf
retf
in
jg
aas
(bad)
addr16
in
jg
neg
stc
out
(bad)
pop
push
jle
pop
not
push
dec
enter
shl
stc
fild
lods
(bad)
std
jg
das
enter
(bad)
pop
(bad)
xchg
xchg
jl
fcomip
mov
pop
cld
data16
in
cli
mov
mov
jmp
cli
add
inc
pop
push
cmp
push
out
push
sar
mov
inc
imul
(bad)
clc
out
(bad)
mov
clc
jnp
mov
hlt
setl
mov
ficomp
(bad)
call
mov
std
aaa
inc
das
xor
jmp
mov
jg
fcomip
(bad)
cld
scas
jg
ss
lahf
(bad)
mov
jle
mov
jg
pop
cld
mov
iret
std
jecxz
aad
nop
(bad)
fdivr
outs
(bad)
adc
retf
push
mov
(bad)
stos
in
(bad)
gs
(bad)
out
(bad)
in
daa
jle
paddd
cli
ud0
xor
pop
or
cld
sub
sbb
cld
sbb
jns
(bad)
jg
pop
xchg
test
(bad)
cs
cld
mov
pushf
out
(bad)
arpl
(bad)
jnp
dec
xchg
jno
addr16
hlt
pop
std
and
dec
jle
pop
jecxz
inc
xchg
xchg
push
xor
das
sub
push
jle
aaa
std
cmp
test
lock
cmp
lahf
(bad)
loop
mov
mov
adc
std
icebp
mov
(bad)
cli
stc
jg
mov
pop
clc
(bad)
jmp
fidivr
out
pop
aad
inc
pop
(bad)
test
or
jg
push
lea
jg
pop
mov
jecxz
(bad)
scas
(bad)
push
das
dec
icebp
xchg
lahf
std
push
jmp
(bad)
(bad)
(bad)
dec
mov
std
das
sbb
pop
rep
into
(bad)
jmp
in
lahf
stc
(bad)
pop
mov
in
rcr
jo
mov
xchg
(bad)
mov
(bad)
aas
dec
dec
jno
jle
mov
push
in
(bad)
call
lahf
cli
pop
cld
outs
(bad)
call
cld
int
jg
mov
(bad)
sti
pop
std
(bad)
jg
(bad)
std
pop
cld
imul
icebp
inc
std
push
mov
push
call
inc
into
jg
mov
call
(bad)
cmps
and
jg
loopne
mov
jg
(bad)
(bad)
cld
mov
mov
cmc
das
cld
push
(bad)
jmp
dec
into
icebp
jmp
(bad)
mov
push
inc
mov
mov
repz
jns
mov
mov
lahf
fs
(bad)
cld
pop
mov
outs
bnd
(bad)
cmc
ror
test
jle
jg
aaa
movs
dec
call
daa
rcr
cld
arpl
rcl
jl
(bad)
icebp
(bad)
sti
pop
lock
(bad)
sahf
(bad)
(bad)
out
jmp
cld
out
icebp
stos
jg
outs
(bad)
popf
push
aas
cmc
push
lods
or
and
dec
(bad)
mov
cmc
mov
(bad)
mov
idiv
test
outs
or
std
jmp
mov
stos
jg
aas
cld
sti
iret
push
dec
jecxz
aad
sti
out
(bad)
xor
std
loope
loopne
stc
jge
addr16
std
iret
jmp
fcomip
loopne
jg
dec
inc
fdivr
sub
sti
dec
jle
imul
fmul
pop
hlt
lods
(bad)
dec
cli
lds
nop
(bad)
mov
jle
pop
stc
repnz
sti
ret
jle
sar
pop
cmp
iret
jmp
std
jmp
inc
ja
repz
jmp
retf
out
cld
(bad)
pushf
xchg
out
cmp
push
(bad)
mov
arpl
pop
xor
dec
mov
jg
jns
(bad)
idiv
xlat
(bad)
jbe
mov
test
(bad)
std
pop
cli
in
clc
dec
jg
mov
fcomip
addr16
icebp
jmp
(bad)
cmp
and
std
mov
adc
std
das
(bad)
call
shl
cli
pop
mov
std
div
push
jmp
leave
aas
ror
std
cmps
pop
cld
test
mov
retf
ja
push
xchg
arpl
jmp
(bad)
aas
repz
cld
push
jg
out
ret
mov
(bad)
neg
std
jmp
icebp
out
test
mov
xchg
mov
aam
outs
sar
imul
pop
jmp
jg
inc
cmps
cli
out
xor
dec
add
das
pop
std
out
mov
cwde
aas
mov
shr
add
dec
jg
jge
stc
push
sti
push
shl
int3
(bad)
jg
(bad)
fdivr
mov
stc
mov
pop
lahf
(bad)
in
mov
(bad)
mov
cmc
jg
xchg
push
mov
jmp
(bad)
sub
movs
ins
sar
ds
xor
fcomip
mov
sar
lock
(bad)
mov
pusha
iret
sub
repnz
cmp
(bad)
mov
test
in
dec
pop
jg
jle
setg
fnstsw
out
movs
retf
std
xlat
mov
jecxz
iret
jg
repnz
(bad)
pop
scas
dec
dec
push
lahf
(bad)
pop
jg
aas
bnd
add
(bad)
(bad)
hlt
lds
sti
xchg
dec
(bad)
out
paddd
jg
aas
ja
cmps
jl
out
aaa
das
cld
loopne
jl
in
fbstp
xchg
(bad)
xor
pop
icebp
lahf
mov
dec
sahf
std
sti
cli
jmp
icebp
mov
lahf
bound
cmps
pop
in
push
sbb
fwait
std
pop
inc
pop
repnz
push
push
pop
call
mov
inc
pop
icebp
popf
mov
repz
cmp
idiv
cld
das
std
repnz
jg
pop
mov
jge
sub
pop
dec
pop
retf
cmp
ret
dec
jmp
std
jge
sar
in
idiv
mov
cld
mov
repnz
std
(bad)
addr16
out
lahf
push
dec
neg
cmp
fwait
(bad)
xchg
(bad)
pop
cli
add
push
das
ds
out
mov
int
hlt
out
sti
(bad)
sbb
xlat
(bad)
sub
neg
iret
dec
mov
loopne
mov
inc
xlat
scas
mov
retf
fs
rcr
retf
cli
cmp
imul
jg
outs
hlt
xchg
add
jg
lahf
cld
xor
mov
mov
in
jmp
(bad)
test
iret
mov
imul
jg
fcomip
push
std
pop
mov
cmp
int
popf
in
in
sti
iret
inc
sbb
(bad)
sbb
push
dec
fstp
jge
mov
and
inc
daa
mov
fistp
mov
jg
scas
cli
cmp
in
cmc
sbb
loopne
stc
lods
dec
jmp
jg
ret
imul
loope
cmps
(bad)
sti
push
call
pop
cmc
mov
aam
(bad)
outs
cli
jg
std
mov
jmp
jg
mov
sti
lea
(bad)
jae
and
pop
jmp
in
scas
cld
mov
pop
clc
sbb
mov
daa
cld
popa
mov
mov
pop
test
(bad)
inc
mov
(bad)
mov
(bad)
inc
out
idiv
cmps
jg
mov
pushf
loop
rcr
(bad)
out
in
imul
mov
dec
mov
(bad)
(bad)
jmp
fbld
mov
fistp
push
das
(bad)
fdiv
jnp
aad
cld
aas
cld
aad
hlt
das
jge
out
ja
stc
call
jmp
xlat
inc
add
pop
div
sar
mov
(bad)
cld
daa
fdivrp
adc
fnstsw
iret
fnstenv
scas
push
mov
cld
xchg
cdq
mov
(bad)
call
repz
setp
jle
mov
loopne
push
jg
xor
mov
std
(bad)
mov
fstp
in
(bad)
cmps
aas
stc
mov
dec
cld
pop
push
in
lahf
loop
retf
mov
jle
cld
cmc
pop
jge
aas
push
iret
(bad)
scas
(bad)
ja
clc
push
jg
out
mov
xchg
aas
pop
std
outs
mov
and
(bad)
inc
jmp
pop
call
out
cs
std
in
clc
loop
dec
aas
dec
(bad)
loop
in
dec
(bad)
shl
push
out
cli
jne
mov
push
je
iret
std
jge
jg
lahf
mov
adc
jbe
stc
inc
cdq
mov
cdq
dec
push
iret
jg
vmovdqu
xchg
push
call
ud0
(bad)
mov
sti
idiv
repz
scas
movs
test
inc
sbb
test
out
fldcw
std
in
mov
icebp
aas
mov
addr16
jmp
aas
int3
xor
(bad)
sbb
mov
icebp
outs
sti
jmp
cmp
xchg
mov
ret
mov
(bad)
mov
sti
xor
retf
jmp
aas
cli
out
scas
inc
ret
mov
out
dec
sti
jg
repz
std
(bad)
inc
out
cld
push
std
dec
jg
jns
cld
mov
sbb
outs
icebp
ja
out
dec
stc
ja
fnstsw
pop
mov
leave
pop
push
(bad)
stc
stos
call
sti
xor
into
lahf
imul
and
jnp
ja
leave
jg
fwait
push
out
adc
call
pop
out
(bad)
(bad)
call
loop
std
jmp
icebp
pop
dec
push
aad
pop
repz
aas
and
sub
call
xlat
ins
inc
adc
mov
(bad)
mov
psubd
std
stos
nop
fdivrp
imul
std
in
mov
icebp
dec
std
sti
pop
sar
shl
aad
std
stos
lahf
mov
clc
xor
out
mov
in
pop
hlt
sbb
sbb
cmc
outs
cli
daa
std
sahf
pop
cdq
aas
(bad)
and
mov
pop
std
pop
push
mov
fldcw
dec
pop
clc
iret
cld
xchg
xor
jg
lahf
dec
adc
aas
cmc
scas
push
xor
aaa
(bad)
in
pushw
jg
push
std
jno
xchg
mov
jecxz
inc
lahf
mov
in
mov
(bad)
cmps
fild
in
int
stc
add
xchg
inc
jg
lahf
std
jmp
inc
jg
scas
cmc
out
scas
jg
mov
pop
fs
inc
in
cmp
(bad)
cmp
xlat
(bad)
fnstcw
add
cmc
mov
out
(bad)
(bad)
sbb
(bad)
aas
les
cld
jne
push
movs
dec
dec
cld
mov
repnz
push
ja
dec
(bad)
pop
repnz
jg
sar
xchg
bnd
idiv
dec
fidivr
pop
mov
inc
pop
out
lahf
movs
(bad)
push
xchg
ret
imul
(bad)
js
sub
mov
stc
mov
jg
fbstp
jg
jmp
mov
pop
sti
lds
push
jg
sub
xor
iret
jg
das
sbb
fnstcw
jle
mov
jmp
fucomip
lahf
mov
xchg
dec
call
add
in
xlat
clc
sar
mov
std
stos
(bad)
out
clc
cmp
(bad)
jg
(bad)
addr16
fidivr
inc
mov
xor
std
cmp
mov
jmp
std
cmp
hlt
pop
mov
leave
jg
adc
out
cli
jg
xchg
iret
call
xor
dec
aas
sti
sub
in
jnp
cmp
(bad)
stos
jg
(bad)
xlat
(bad)
xor
jmp
fucomip
ficomp
cmps
cld
pop
(bad)
(bad)
out
jg
pop
sbb
jg
outs
clc
subps
pop
jg
outs
cli
pop
lahf
std
ud0
pop
xor
pop
call
push
pop
std
pop
jg
in
out
out
cli
aas
std
cmc
push
push
mov
push
inc
jmp
repz
inc
mov
dec
jg
xor
fsub
dec
jae
(bad)
rol
(bad)
jmp
cmc
out
(bad)
ja
push
out
mov
mov
inc
pop
repz
cs
retf
fucomip
pop
dec
rcr
and
mov
imul
pop
(bad)
clc
lahf
mov
ja
xor
inc
(bad)
cs
sti
aas
inc
mov
in
popf
aas
aas
pop
(bad)
pusha
imul
int
(bad)
mov
cmc
mov
add
pop
hlt
pop
mov
cmp
cmp
jmp
jecxz
std
mov
jg
xchg
sbb
aas
stc
(bad)
cld
pop
retf
fild
mov
repz
jg
jg
dec
jg
cld
aaa
cli
xor
addr16
(bad)
(bad)
aas
std
xlat
std
xchg
scas
fnstcw
aas
mov
in
mov
mov
add
pop
push
mov
idiv
icebp
aaa
jl
mov
sbb
stos
jne
jg
adc
icebp
push
dec
aas
std
in
inc
mov
jmp
lahf
icebp
(bad)
std
int3
outs
push
push
(bad)
std
das
jle
fcomip
cmps
cld
adc
fnstsw
in
out
cld
(bad)
test
mov
push
sti
hlt
scas
clc
icebp
fucomip
mov
xchg
mov
call
idiv
std
cmp
imul
jg
sti
std
pop
(bad)
stc
mov
pop
cli
popf
out
fidivr
std
sti
popf
std
aad
hlt
(bad)
clc
ja
sar
cmc
repnz
jmp
add
scas
sti
pop
cld
cmp
outs
retf
loope
fild
(bad)
sahf
(bad)
repz
idiv
jmp
call
neg
sbb
jecxz
sti
add
sbb
cmp
paddd
xchg
sar
hlt
imul
mov
lahf
(bad)
test
int
jg
scas
hlt
and
jecxz
repz
xor
icebp
idiv
jle
jg
inc
xchg
fdivrp
xchg
cs
lock
jmp
lock
std
cmp
cli
out
stc
daa
inc
fstp
stc
scas
dec
jg
in
pop
cld
icebp
mov
xchg
mov
cmp
mov
push
call
retf
push
and
(bad)
std
pop
repz
std
into
jg
jg
lods
jmp
idiv
dec
out
xor
(bad)
pop
repz
ja
adc
cmc
mov
cld
int3
pop
cld
icebp
aas
mov
rcl
push
test
call
leave
jge
mov
dec
push
xchg
aaa
in
(bad)
aaa
mov
mov
pop
mov
(bad)
fcomip
ja
sub
lods
fdivr
jg
push
sub
mov
sub
ja
std
lds
outs
inc
(bad)
sahf
hlt
fnstcw
mov
aas
std
cmps
or
sti
cmps
jmp
daa
daa
inc
std
neg
inc
(bad)
std
adc
loope
call
(bad)
aas
push
jg
outs
and
call
cld
jno
ret
loope
jne
jg
mov
cld
dec
sub
sti
arpl
jle
mov
mov
jmp
ins
jle
and
(bad)
stc
pop
repnz
addr16
pop
jae
popf
(bad)
jg
stc
pop
push
pop
cld
xchg
(bad)
adc
mov
adc
jg
cli
in
(bad)
std
dec
jg
jg
inc
out
call
fcomip
icebp
fbld
xchg
sar
push
pop
popf
std
or
ds
mov
mov
lds
stc
outs
mov
stc
mov
(bad)
jg
jl
or
dec
(bad)
clc
xor
(bad)
(bad)
jmp
(bad)
sub
aaa
dec
dec
pop
push
in
std
ret
xlat
ja
mov
cld
hlt
jg
xor
imul
icebp
aas
lods
or
out
stc
jg
pop
call
dec
(bad)
fidivr
jg
pop
repz
aas
cmc
(bad)
cmc
inc
sbb
mov
mov
(bad)
in
std
pop
dec
jle
aas
jmp
std
outs
mov
cld
sbb
aad
(bad)
jmp
aad
inc
std
cmp
std
sti
inc
(bad)
sbb
sti
pop
(bad)
pop
mov
cld
stc
lahf
neg
xchg
(bad)
scas
(bad)
push
jg
pop
ja
adc
not
(bad)
out
xchg
jg
out
and
int
(bad)
dec
stc
fwait
jg
mov
aas
out
jmp
dec
push
outs
aas
jnp
jae
adc
outs
clc
icebp
(bad)
jle
fnstsw
jg
arpl
inc
out
pop
cmp
or
mov
imul
aas
repz
aas
cmp
in
xchg
cld
sbb
mov
cwde
mov
imul
loopne
clc
dec
(bad)
out
popf
jg
jmp
les
clc
dec
fist
inc
jg
pop
icebp
popf
mov
cld
or
into
aas
outs
fdivrp
inc
inc
(bad)
(bad)
(bad)
fimul
cld
dec
jg
sub
(bad)
jle
jnp
cmps
jg
das
dec
cmp
(bad)
cli
push
(bad)
sahf
mov
mov
std
dec
mov
(bad)
sti
fistp
das
call
push
jg
add
lahf
rcl
push
cmp
pop
int
stos
mov
aad
xchg
fcomip
das
xor
neg
cmps
jg
mov
mov
(bad)
mov
jmp
outs
(bad)
stos
dec
mov
(bad)
clc
std
jle
fucomip
xlat
inc
jbe
mov
and
mov
div
mov
xor
out
lahf
lods
cmps
jmp
cmp
fstp
imul
inc
std
push
std
add
mov
call
dec
cmc
aad
lahf
std
(bad)
(bad)
loop
repnz
jle
lods
aas
sti
xlat
inc
das
pop
cld
std
fcos
data16
(bad)
dec
(bad)
in
push
aas
jp
dec
cli
dec
aas
push
jmp
icebp
iret
std
or
xor
into
(bad)
jmp
les
hlt
pop
scas
jg
aas
dec
mov
pop
jg
das
(bad)
outs
mov
push
out
cli
arpl
(bad)
in
pop
and
mov
jo
arpl
xlat
jg
lahf
jmp
pop
push
out
cmc
xlat
aas
(bad)
jmp
xchg
jg
gs
(bad)
cli
pop
(bad)
cmp
sar
lock
(bad)
jns
cmps
dec
cmp
mov
jecxz
std
pop
jle
(bad)
jmp
sbb
clc
xlat
clc
idiv
mov
add
loope
jle
dec
push
cmp
dec
(bad)
sti
ja
retf
(bad)
icebp
mov
(bad)
fucomi
push
or
xchg
icebp
scas
sti
push
jmp
out
aas
lock
xchg
dec
jg
in
leave
pop
repz
mov
clc
aas
test
inc
(bad)
scas
cld
push
mov
stc
jle
cmp
retf
pop
ss
jmp
mov
out
jb
loop
std
iret
imul
jecxz
jecxz
(bad)
cmps
out
dec
dec
xchg
pop
and
loope
clc
or
leave
outs
repnz
jg
(bad)
mov
mov
mov
(bad)
mov
lock
call
cli
hlt
push
std
dec
inc
xchg
aas
ror
iret
(bad)
sti
mov
jle
mov
sbb
cmc
(bad)
popf
cld
cmps
push
pop
xor
or
inc
jg
leave
pop
jns
lahf
and
cld
mov
std
push
sbb
icebp
push
call
jg
pop
repnz
mov
retf
fbstp
mov
jle
jg
das
(bad)
mov
aas
dec
cmp
pop
stc
xlat
std
popa
mov
mov
(bad)
in
repz
cmc
xchg
fs
in
add
(bad)
shl
sti
dec
add
pop
in
sbb
aas
(bad)
pop
(bad)
adc
aam
sti
mov
fwait
mov
(bad)
gs
repz
xlat
(bad)
gs
imul
jecxz
in
in
push
add
xlat
cld
(bad)
jmp
jge
push
dec
fcomip
outs
std
ret
iret
jle
aas
push
std
jnp
fisttp
inc
into
pop
jg
dec
mov
pop
repnz
aas
stc
imul
xlat
or
cs
jg
stc
pop
hlt
neg
std
or
cmc
scas
cdq
pop
jg
idiv
dec
jle
jg
stos
idiv
cmp
pop
out
clc
cmp
mov
xor
(bad)
xor
sub
(bad)
mov
out
fdivrp
cmps
neg
stc
(bad)
mov
cld
daa
jg
mov
mov
std
popf
mov
(bad)
std
movs
sti
inc
imul
jnp
mov
cmc
pushf
inc
inc
sti
or
pop
adc
(bad)
fist
fdivr
call
stc
push
(bad)
cli
aas
inc
(bad)
shl
inc
aaa
cmps
shr
(bad)
lock
(bad)
cmp
pop
xchg
std
or
dec
clc
aas
jmp
(bad)
outs
sti
arpl
stc
xchg
movs
int3
dec
(bad)
(bad)
push
jg
fcomip
push
mov
pop
clc
sti
std
mov
cmp
cld
and
int
(bad)
cli
out
rcl
outs
cli
xor
cmc
mov
setge
out
daa
jg
(bad)
cli
out
jmp
fwait
cld
in
cmc
stc
pop
clc
jecxz
(bad)
mov
push
(bad)
(bad)
aaa
cli
mov
fcomp
ja
mov
ja
xor
jae
fcomp
jecxz
mov
or
lock
sti
xlat
jg
(bad)
clc
cmc
xor
cmp
out
(bad)
out
fnstcw
fcomp
iret
xchg
and
(bad)
(bad)
lahf
std
xchg
mov
dec
stc
mov
aas
add
fidivr
jge
stos
sahf
cld
jecxz
(bad)
cwde
mov
int
push
cli
xor
cmc
jg
fistp
(bad)
jge
fild
lds
jmp
repnz
clc
mov
xor
inc
sar
imul
outs
sti
ja
movq
cld
sti
cmc
imul
popf
(bad)
mov
cld
retf
mov
cli
aas
mov
xor
mov
(bad)
test
std
das
dec
mov
add
mov
(bad)
sti
jg
xchg
sub
sbb
dec
mov
(bad)
pop
cld
pop
cli
cmc
pop
lahf
and
loopne
stc
retf
(bad)
fdiv
pop
mov
adc
cld
repz
daa
pop
xchg
std
inc
scas
sub
sbb
call
call
sar
repz
cmp
mov
jg
aas
icebp
fwait
std
cmp
jg
pop
stc
sti
dec
std
cmps
jle
jecxz
out
idiv
not
es
clc
dec
jmp
ds
imul
pop
dec
aam
jle
jg
lahf
push
shl
fcos
idiv
aas
repz
dec
mov
in
(bad)
sti
mov
xor
std
mov
aas
ds
daa
pop
(bad)
jmp
mov
inc
mov
(bad)
cld
mov
and
jg
jecxz
loope
cld
popf
inc
(bad)
out
mov
neg
(bad)
fdivrp
out
aas
icebp
idiv
inc
neg
sbb
pop
sti
jnp
outs
dec
dec
(bad)
hlt
aas
mov
xchg
push
cli
loop
into
mov
(bad)
(bad)
push
in
aas
call
fstp
in
out
std
in
aas
mov
(bad)
clc
das
clc
jecxz
movs
out
neg
out
cli
(bad)
fcom
xchg
inc
in
fnstcw
(bad)
sbb
cld
sbb
sti
stc
in
pop
sti
outs
mov
xchg
(bad)
jmp
(bad)
call
fisttp
inc
sbb
sbb
outs
push
pop
jmp
enter
jle
pop
mov
std
push
cmp
(bad)
jg
shl
lahf
int
xchg
jl
out
call
mov
sahf
das
dec
aaa
leave
push
adc
pop
mov
mov
out
shl
sar
pop
jmp
cmp
dec
cli
inc
jmp
stos
pop
jge
loopne
sti
(bad)
in
mov
jg
sub
popf
jl
pop
call
aas
sti
mov
std
pop
call
out
not
push
pop
cld
fwait
std
xchg
pop
jecxz
popf
jg
iret
(bad)
mov
clc
repnz
test
(bad)
mov
jg
repz
out
jmp
(bad)
stc
pop
cld
mov
in
out
out
inc
jg
aas
in
out
cld
adc
pop
jmp
aas
stc
cmc
jg
jmp
mov
mov
xor
mov
jmp
aas
cli
scas
jle
xchg
repnz
cld
iret
out
cld
xor
cmp
cmp
sti
pop
mov
ja
(bad)
fnstcw
data16
loop
ss
inc
push
addr16
add
mov
mov
mov
push
std
add
out
pop
call
jg
out
cli
sbb
pop
outs
dec
push
cld
jp
stc
shr
mov
out
mov
out
fdivrp
or
out
jmp
fstp
xchg
fcomip
push
int
mov
mov
jg
bswap
ja
sbb
xor
call
sbb
mov
mov
mov
repnz
(bad)
xchg
mov
cli
mov
jnp
cmps
push
(bad)
call
repz
xlat
mov
jg
sub
stc
push
ror
cld
push
dec
push
lahf
push
jg
aas
stc
stos
jg
aas
cld
rcr
push
popf
jmp
sub
mov
cld
sbb
shr
sti
outs
(bad)
das
cmps
mov
dec
sbb
call
pop
mov
movzx
jecxz
repz
scas
icebp
imul
mov
scas
jg
and
mov
mov
cmp
(bad)
std
add
outs
aas
cli
sub
(bad)
out
push
sub
clc
xchg
inc
imul
or
mov
xchg
mov
std
dec
(bad)
fstp
out
das
(bad)
or
xchg
mov
cmc
ficomp
neg
(bad)
xchg
mov
call
aas
add
ja
mov
sti
jne
ret
das
jg
aas
jo
daa
dec
mov
pop
cld
fnstcw
out
clc
jmp
outs
jg
pop
lock
(bad)
jmp
aas
repz
std
xchg
call
sub
retf
pop
jle
iret
fisub
test
jg
outs
test
lock
mov
jg
lahf
cld
jnp
fdivr
cmp
mov
(bad)
fwait
inc
(bad)
(bad)
inc
mov
leave
dec
cld
imul
mov
popf
sub
movs
lock
(bad)
das
jmp
movs
pop
shl
ret
cmps
std
mov
xor
std
(bad)
jmp
in
xlat
mov
iret
cld
mov
aaa
icebp
jb
jg
hlt
(bad)
int
(bad)
lods
pop
and
jg
daa
mov
(bad)
lods
pop
imul
jg
out
repz
(bad)
fcos
(bad)
(bad)
mov
cld
xlat
std
mov
push
lahf
(bad)
frstpm(287
pop
mov
retf
jmp
jg
loop
dec
scas
jmp
loop
(bad)
gs
rcr
je
idiv
test
mov
stc
dec
xchg
frndint
mov
stos
aas
cmc
mov
jl
fstp
fldcw
cmp
push
dec
pop
hlt
daa
(bad)
or
outs
inc
call
dec
pusha
mov
mov
mov
cld
into
cli
out
icebp
fwait
(bad)
loop
(bad)
fstp
test
rep
cld
ud0
pop
push
push
sub
out
repz
inc
aas
stc
jae
loopne
in
shr
(bad)
daa
idiv
fild
mov
test
fwait
mov
sub
(bad)
xchg
pop
jg
outs
mov
pop
and
ds
(bad)
mov
pop
pop
and
jmp
aas
clc
daa
std
add
loope
outs
push
and
xor
or
cli
pop
jp
repnz
gs
xchg
pop
sahf
std
mov
outs
sahf
std
sbb
ja
sar
ins
out
std
xchg
mov
outs
std
std
jg
inc
stc
add
int3
sub
inc
mov
cld
scas
std
test
addr16
in
fistp
cmps
int
neg
dec
mov
in
aaa
out
cld
sub
not
inc
cld
int3
outs
cli
(bad)
imul
cmp
outs
cli
add
idiv
(bad)
test
pop
scas
(bad)
inc
lahf
icebp
jmp
aad
call
stc
fcomip
(bad)
std
jmp
cmc
idiv
or
adc
lahf
repnz
jmp
mov
fdivrp
out
jle
mov
jg
pop
scas
sahf
std
fstp
cld
fisubr
xor
inc
std
mov
(bad)
jmp
jg
pop
icebp
clc
idiv
inc
jle
shl
pop
mov
rol
jg
pop
std
pop
jecxz
inc
pop
jmp
(bad)
pop
mov
hlt
in
jg
add
out
cld
mov
(bad)
aam
pop
test
in
std
daa
imul
push
fcmovne
jg
jg
outs
jge
(bad)
fisubr
dec
jg
outs
std
push
fbstp
cmp
popf
jg
dec
shl
jle
mov
div
movs
dec
xlat
mul
(bad)
lds
jl
(bad)
std
sbb
loopne
lock
(bad)
cmps
push
pop
out
mov
push
jg
push
add
xor
mov
add
mov
movzx
dec
xlat
out
(bad)
mov
pusha
mov
(bad)
out
pop
call
lahf
mov
push
aas
push
jne
add
pop
cmc
out
(bad)
(bad)
jmp
into
jg
dec
jg
(bad)
and
cmc
cld
pop
(bad)
call
repz
dec
imul
std
xor
pop
jecxz
stc
pop
jle
pop
jmp
pushf
aas
cld
cmps
jle
pop
jecxz
cmp
pop
jle
lahf
clc
jne
std
ud0
dec
inc
ds
das
sti
test
std
mov
add
cmc
dec
push
icebp
in
outs
stc
in
jle
jg
stc
das
std
mov
fistp
jg
dec
cmps
div
mov
aas
in
jmp
jg
mov
retf
jmp
sti
ja
retf
sub
outs
pop
std
xlat
mov
or
call
jg
xor
popf
addr16
fistp
lods
mov
fdivrp
pop
jg
scas
cmc
daa
std
push
jg
gs
push
mov
scas
jmp
dec
iret
call
push
mov
(bad)
mov
mov
xchg
loopne
data16
mov
hlt
outs
aaa
mov
mov
int
leave
jg
out
jge
pop
sti
cmc
(bad)
xlat
leave
idiv
lea
cld
aaa
call
ja
jle
inc
mov
std
lods
(bad)
mov
add
xor
cmp
stos
jle
fucomip
xchg
xchg
push
out
mov
lahf
stc
jns
mov
div
sti
inc
cli
adc
(bad)
jno
icebp
pop
repnz
(bad)
mov
test
int3
push
sub
cld
xor
clc
sbb
lods
jg
out
test
sbb
icebp
xlat
jg
jg
cli
mov
mov
scas
mov
rcr
clc
ins
repz
(bad)
in
(bad)
(bad)
push
mov
enter
(bad)
fwait
mov
(bad)
(bad)
sti
iret
stos
addr16
push
repnz
mov
pop
inc
jg
scas
clc
xchg
cmps
mov
shl
jg
aas
retf
mov
stos
jg
outs
sti
retf
(bad)
mov
int
(bad)
fldcw
clc
ja
scas
aas
lock
cli
imul
xchg
pop
std
pop
jge
(bad)
jmp
lahf
cld
jbe
cld
mov
jecxz
xchg
loop
cld
xor
fcmovne
push
fdivrp
iret
pop
std
mov
retf
(bad)
out
sub
dec
movs
jg
stc
jg
(bad)
out
(bad)
push
test
das
(bad)
(bad)
jp
hlt
aas
std
into
(bad)
std
mov
(bad)
jbe
(bad)
hlt
pop
std
inc
jg
jg
out
inc
loope
adc
imul
cld
sbb
(bad)
sar
loop
(bad)
mov
cld
lahf
dec
test
in
das
sti
sar
fdivr
cmc
scas
imul
jg
hlt
(bad)
fucomip
(bad)
es
outs
repz
test
cli
arpl
mov
jne
movs
mov
pop
dec
jle
pop
and
fsubr
dec
jle
std
in
xlat
js
paddw
sti
jg
daa
mov
daa
pop
jmp
clc
das
pop
aaa
mov
sti
jmp
iret
(bad)
fnstcw
mov
(bad)
aas
mov
jge
pop
push
(bad)
iret
cmp
aas
mov
(bad)
xor
mov
lahf
inc
scas
jg
mov
mov
mov
retf
out
dec
fmulp
mov
and
jae
outs
(bad)
clc
das
cmps
fs
scas
repz
(bad)
stos
jg
(bad)
repnz
std
leave
jg
jg
cld
pop
jbe
fdivrp
clc
outs
cmc
addr16
fdivr
mov
(bad)
pushf
in
xor
push
(bad)
(bad)
fs
in
ja
ins
(bad)
in
fcomip
out
clc
cmp
rcr
std
jmp
loopne
cli
xchg
(bad)
daa
xor
stc
(bad)
push
pop
cdq
aas
inc
cmp
neg
jmp
das
shl
ret
(bad)
pop
mov
(bad)
lahf
push
lock
iret
(bad)
jmp
cmc
addr16
sti
cmps
push
add
sbb
inc
jg
outs
pop
fs
jmp
call
sub
inc
pop
(bad)
jle
out
(bad)
pop
cli
(bad)
pop
repz
std
cli
adc
jb
aas
(bad)
in
imul
call
mov
out
push
es
jg
jle
and
pop
cld
out
(bad)
call
jmp
sti
ja
(bad)
(bad)
dec
fucomip
out
xor
(bad)
clc
sar
jp
das
cli
lea
sbb
cmp
pop
clc
(bad)
popa
mov
das
(bad)
fnstsw
lock
stc
repz
add
clc
paddd
sti
lahf
nop
ror
mov
xor
mov
(bad)
adc
(bad)
push
call
mov
js
push
iret
(bad)
jmp
mov
fwait
jmp
(bad)
dec
cmp
lahf
cld
(bad)
addr16
scas
mov
idiv
sbb
(bad)
std
cmp
icebp
mov
mov
and
sub
(bad)
dec
jg
lods
loop
(bad)
and
inc
(bad)
sub
mov
lods
push
cld
sahf
jmp
(bad)
cld
push
hlt
mov
jecxz
imul
test
mov
stc
imul
iret
jmp
jle
jg
jecxz
icebp
int
inc
out
cld
xlat
xchg
aas
stc
aas
std
inc
iret
call
std
cmp
jg
xchg
jle
ret
pop
(bad)
aad
mov
cld
cmps
(bad)
mov
scas
(bad)
sahf
call
ja
inc
(bad)
mov
(bad)
aas
pushf
cld
push
(bad)
jg
pop
cdq
scas
aas
sti
imul
stc
das
dec
idiv
stos
mov
sar
mov
outs
std
ins
jg
(bad)
das
xor
call
pop
cld
outs
push
jmp
out
lock
pop
cld
push
(bad)
jmp
std
cmc
jg
(bad)
jmp
aad
push
cmp
add
mov
jg
pop
movs
fucomip
xchg
dec
jg
push
repz
aaa
jmp
mov
aad
sti
hlt
cpuid
xchg
ret
cld
fwait
jmp
jns
jg
scas
repz
lods
imul
call
mov
out
clc
ud0
int
imul
(bad)
in
stc
jae
jge
pop
std
push
mov
(bad)
fld
(bad)
xchg
mov
mov
inc
lahf
cld
(bad)
std
jg
cmp
jmp
scas
(bad)
fdivrp
jmp
and
and
push
retf
(bad)
call
push
push
sahf
jmp
mov
and
retf
aas
repz
(bad)
cli
jg
imul
mov
stc
into
pop
clc
in
loopne
xor
icebp
addr16
into
loopne
dec
cwde
(bad)
jle
aas
out
push
std
retf
(bad)
jg
jns
fldcw
jg
pop
jg
(bad)
push
(bad)
xchg
jg
pop
(bad)
std
jg
rcr
inc
lahf
repnz
cld
test
pop
out
cld
dec
call
aas
out
rcr
jmp
repnz
fucom
mov
cld
push
mov
das
cmps
push
and
fidivr
retf
cmps
mov
xchg
jg
movsx
pop
inc
cmps
cwde
(bad)
pop
ret
test
jmp
cld
lea
pop
repz
jg
dec
jg
ja
xlat
jg
stc
in
outs
(bad)
call
(bad)
hlt
mov
repz
push
sbb
mov
enter
repz
mov
push
pop
icebp
outs
into
jle
pop
stc
cmc
mov
pop
pop
mov
pop
jmp
jg
pop
xor
push
(bad)
cmps
iret
jg
jg
psubw
mov
int
jge
fbstp
pop
(bad)
cmp
(bad)
mov
outs
jg
imul
fild
cld
cmp
mov
aas
std
imul
jmp
jg
jg
xlat
clc
addr16
jg
std
jnp
(bad)
idiv
cmp
cli
push
mov
mov
repz
std
ja
ja
(bad)
call
cmc
fistp
rcr
jle
pop
std
(bad)
push
rol
and
jbe
movs
push
pop
push
mov
dec
int
cmp
mov
mov
(bad)
lock
push
stc
cmp
xchg
xor
sahf
push
inc
(bad)
fucomi
cmps
jg
mov
outs
jmp
jl
cli
repz
and
xchg
and
ja
cs
cld
scas
(bad)
(bad)
scas
pop
sbb
movs
cdq
jp
(bad)
clc
paddd
lahf
mov
sar
ja
mov
jnp
retf
jmp
push
jg
cld
ja
push
pop
cld
jge
retf
pop
cld
iret
cld
jle
lock
pop
jg
loop
(bad)
jg
out
push
std
out
adc
clc
lahf
sub
jecxz
mov
pop
ds
ja
mov
dec
push
pop
jle
retf
push
lahf
cld
hlt
das
std
test
push
std
stc
sti
cmp
repnz
lds
outs
neg
cld
jge
loopne
cli
(bad)
repz
mov
(bad)
jnp
leave
jmp
xchg
jg
cmps
jg
scas
imul
iret
mov
icebp
aaa
std
inc
jg
imul
dec
mov
cld
test
push
pop
cmp
pop
sahf
cmp
jno
mov
push
mov
outs
repz
cld
jle
jg
das
daa
xlat
jmp
clc
dec
jg
(bad)
jg
std
sbb
pop
jmp
sbb
iret
sti
jmp
fstp
clc
aas
js
pop
cmp
clc
pop
inc
push
pop
jne
ja
cdq
dec
jmp
jbe
(bad)
loop
outs
cli
popf
jmp
(bad)
int3
clc
outs
std
xchg
mov
sbb
jmp
lds
in
mov
sbb
mov
mov
xchg
mov
int3
jecxz
cmps
dec
dec
mov
jnp
cmps
jg
lahf
ja
xor
out
jle
push
out
sti
sbb
add
jg
cld
test
lock
ds
ins
jg
ret
push
scas
jl
mov
aas
jge
jmp
leave
out
hlt
cmp
arpl
cdq
fucomip
scas
clc
cdq
aad
icebp
je
pop
(bad)
lods
(bad)
cld
das
xor
cld
sbb
repnz
cld
lods
in
idiv
fwait
aas
inc
xchg
dec
mov
in
ds
sti
(bad)
jecxz
sahf
cld
in
ja
pop
repz
push
ds
pop
ds
popf
(bad)
mov
(bad)
cld
mov
movq
sub
std
add
sti
std
cmps
jg
ja
jmp
jmp
icebp
cli
(bad)
fcomip
jnp
cli
in
fcomip
fistp
std
pop
jle
out
in
lahf
mov
pop
cmp
(bad)
clc
outs
or
test
ins
test
stc
(bad)
jbe
xor
lahf
mov
cli
xlat
push
ja
fdivr
imul
into
jle
mov
(bad)
xchg
popf
pop
jmp
sti
(bad)
fidivr
lods
jle
xchg
fnstcw
fcomip
(bad)
(bad)
pop
jle
jg
(bad)
fidivr
std
scas
jmp
repz
jg
(bad)
(bad)
hlt
pop
jmp
imul
(bad)
pop
(bad)
pop
cld
xchg
cwde
and
(bad)
pop
(bad)
adc
sti
pop
(bad)
sub
popf
aas
jecxz
fdivr
in
imul
jg
jg
out
(bad)
jmp
out
jg
loop
jg
or
jbe
xchg
and
in
jmp
push
call
add
lahf
cli
retf
xlat
outs
jmp
jnp
jle
mov
xchg
jg
fcomip
iret
lea
(bad)
mov
mov
shl
jbe
sti
xchg
cmps
idiv
jg
pop
stc
imul
out
cld
ja
pop
aas
cli
jmp
stc
jmp
lahf
(bad)
mov
jge
jg
lds
es
lahf
cli
lahf
pop
(bad)
xlat
fucomi
dec
repnz
(bad)
cmp
hlt
fcomip
out
jns
retf
pop
imul
hlt
das
std
dec
outs
(bad)
mov
out
(bad)
out
jg
cmc
ja
arpl
sti
pop
inc
mov
std
inc
inc
mov
fcomip
popf
(bad)
outs
std
dec
(bad)
cmps
loope
mov
mov
call
jg
pop
stc
push
jmp
iret
mov
lods
mov
jg
pop
inc
xor
fisttp
out
icebp
pop
cli
aas
dec
out
jg
dec
cld
mov
ja
sub
pop
jae
rcr
(bad)
icebp
mov
cld
out
out
mov
out
inc
icebp
pop
cdq
dec
push
push
mov
mov
xlat
dec
icebp
fistp
in
ins
xchg
mov
jmp
repz
(bad)
(bad)
jecxz
xor
test
sti
int
int
cld
iret
push
pop
(bad)
push
jg
ss
pop
sub
xor
clc
xchg
ins
jg
pop
std
clc
das
shr
jle
stc
out
std
in
mov
(bad)
xchg
xchg
(bad)
popa
cmps
aad
jmp
jle
dec
mov
retf
mov
mov
stos
out
rcr
ret
in
scas
cdq
push
or
jecxz
dec
jbe
xor
std
(bad)
scas
jle
mov
lods
stc
fisttp
(bad)
(bad)
lahf
mov
mov
pop
sbb
out
call
cmc
fsubrp
(bad)
daa
(bad)
jne
mov
jmp
loopne
mov
into
mov
lahf
clc
outs
(bad)
xchg
mov
jmp
icebp
sub
test
cmp
clc
dec
inc
mov
scas
(bad)
in
daa
jg
push
aas
mov
daa
jmp
ret
dec
jg
aas
jg
hlt
fwait
jmp
push
(bad)
das
mov
cld
loopne
jg
outs
mov
cld
cmps
out
jmp
paddb
mov
das
std
test
ins
jg
aas
repz
push
cld
pop
aas
repz
pop
mov
(bad)
out
clc
scas
dec
iret
jle
inc
call
out
not
imul
int3
aas
in
(bad)
lahf
mov
pop
cld
in
or
out
movs
shr
outs
cli
popf
(bad)
es
cs
dec
pop
cld
cmp
in
out
cli
clc
lahf
cmp
fbstp
std
(bad)
jg
mov
mov
pop
lock
cld
sahf
mov
sar
ret
mov
dec
(bad)
jmp
clc
daa
jg
jmp
aaa
call
jle
push
aas
jl
jg
jle
jg
iret
ins
out
std
mov
popf
(bad)
std
das
std
das
dec
scas
dec
dec
(bad)
clc
(bad)
std
das
clc
dec
(bad)
mov
(bad)
test
icebp
jmp
dec
jg
jg
out
scas
or
in
(bad)
jmp
clc
mov
xchg
(bad)
cld
aaa
sti
mov
in
lahf
mul
jl
stos
dec
(bad)
mov
aas
(bad)
push
ror
mov
or
paddd
jmp
ja
aam
ins
xchg
sti
mov
aas
repz
clc
push
setae
hlt
(bad)
mov
test
sub
sub
inc
stc
repz
pop
clc
push
dec
pop
cld
fist
cld
xchg
cli
iret
imul
jmp
daa
(bad)
mov
out
stc
ret
idiv
cmps
xor
rcr
(bad)
mov
jg
(bad)
stc
das
xchg
jmp
out
icebp
jnp
sub
sbb
test
ret
fbstp
scas
jns
retf
(bad)
xor
(bad)
paddd
mov
lods
push
jmp
pop
ja
(bad)
jg
addr16
mov
in
fwait
jg
scas
cli
or
ins
clc
aas
jl
mov
inc
repz
mov
int
icebp
daa
call
out
test
push
jecxz
fimul
(bad)
fdivr
adc
cmp
mov
xchg
cmps
dec
scas
jnp
(bad)
imul
mov
jmp
out
(bad)
repz
out
jg
(bad)
imul
pop
push
mov
jns
mov
ret
(bad)
xchg
jg
dec
sub
cli
pop
inc
sti
jg
pop
clc
repz
push
(bad)
cli
inc
(bad)
sar
jg
outs
(bad)
(bad)
retf
(bad)
scas
push
cmp
aas
std
xlat
out
(bad)
clc
scas
cdq
pusha
out
leave
pop
cli
neg
stc
cmc
(bad)
and
hlt
hlt
mov
xor
call
clc
scas
cld
xchg
daa
(bad)
stc
ja
inc
sbb
dec
(bad)
fidivr
push
dec
mov
cld
(bad)
(bad)
mov
loop
clc
retf
mov
pushf
cmp
retf
call
(bad)
fistp
xchg
inc
xor
jae
call
hlt
pop
test
mov
in
pop
clc
lahf
lahf
cld
push
jg
idiv
data16
icebp
jmp
(bad)
clc
fnstsw
jmp
jmp
jecxz
stos
iret
jg
mov
fisttp
ds
mov
fsubr
jle
rol
jecxz
pop
not
xor
test
aas
cld
mov
fsubrp
lock
leave
pop
fidivr
ret
pop
lock
retf
(bad)
xchg
daa
mov
cli
imul
mov
retf
fs
xlat
aas
stc
(bad)
(bad)
mov
icebp
imul
mov
inc
push
outs
jge
sti
cld
push
mov
pop
inc
cmp
jg
cmc
(bad)
popa
dec
js
out
aaa
stc
jne
aad
lock
(bad)
push
jg
pop
push
jmp
(bad)
sbb
sar
out
repz
cld
sbb
loop
fcomip
pop
cld
out
push
ret
aas
stc
scas
clc
movs
in
inc
(bad)
pop
(bad)
jnp
int3
inc
dec
inc
idiv
daa
jg
out
hlt
stos
(bad)
sbb
ds
fwait
sub
sti
jg
mov
push
cld
leave
mov
jb
inc
push
call
ja
out
jge
ja
cli
mov
jmp
xchg
(bad)
(bad)
jl
mov
fild
(bad)
mov
hlt
dec
icebp
out
ret
jne
add
jg
ds
xlat
jg
jg
pushf
mov
shl
imul
xchg
(bad)
paddb
(bad)
call
pop
mov
jg
clc
(bad)
(bad)
jecxz
mov
jmp
test
sbb
xor
xchg
(bad)
jl
iret
aas
sbb
and
lahf
stc
scas
(bad)
clc
out
test
xchg
dec
sub
inc
jle
mov
jmp
(bad)
mov
cmp
mov
add
jg
loop
mov
mov
hlt
scas
clc
fnstsw
aas
jecxz
stc
cld
iret
sti
hlt
aaa
cli
cdq
xchg
pop
(bad)
popf
(bad)
jmp
(bad)
fbld
fnstcw
jg
hlt
sti
pop
(bad)
ja
sar
(bad)
jmp
je
jo
ins
(bad)
repz
cld
(bad)
cli
mov
in
div
sbb
pop
jle
jo
adc
cld
rcr
(bad)
out
jmp
(bad)
neg
mov
(bad)
fucomp
lock
jl
jg
sbb
int
cld
aaa
jg
lahf
clc
cld
ins
call
clc
xor
sub
inc
cld
popf
mov
mov
div
inc
std
out
icebp
iret
(bad)
sti
jg
fcomip
cmp
in
jg
scas
(bad)
pop
out
in
loope
pop
icebp
(bad)
aaa
mov
pop
std
dec
aad
cld
jecxz
data16
(bad)
jmp
push
outs
inc
rcr
dec
dec
(bad)
std
adc
clc
addr16
jg
lea
out
dec
(bad)
fidivr
movs
pop
dec
(bad)
call
(bad)
pop
pop
(bad)
out
je
mov
stc
jne
mov
mov
pop
sti
push
cld
out
sar
push
in
ins
inc
cld
inc
jecxz
pop
test
cld
xor
(bad)
(bad)
je
pop
shr
loopne
cmc
xchg
fucomip
cli
in
mov
jmp
aas
std
lock
jmp
enter
sti
mov
jmp
neg
retf
aas
in
cld
daa
pop
cld
jmp
icebp
sbb
push
jg
pop
icebp
retf
jmp
jmp
clc
sub
inc
call
cmps
pop
std
xchg
mov
loopne
jns
add
std
clc
scas
(bad)
pop
inc
jmp
lds
(bad)
in
dec
std
xchg
jg
dec
dec
(bad)
call
mov
imul
pop
scas
(bad)
mov
add
(bad)
cld
and
pop
std
jmp
(bad)
int3
mov
xlat
pop
std
sti
jg
outs
jns
jg
in
addr16
mov
data16
outs
dec
call
aas
jmp
sti
xchg
out
cld
fstp
call
(bad)
icebp
pop
cld
xor
xchg
add
hlt
idiv
bswap
lahf
mov
repnz
cmc
ja
sar
(bad)
cld
and
cmps
xchg
clc
(bad)
lods
test
out
fsin
hlt
jmp
(bad)
out
stc
arpl
cmp
mov
sub
sti
cmps
adc
scas
jmp
out
push
sub
pop
stc
pop
(bad)
sub
cli
(bad)
push
repnz
scas
std
rcr
pop
std
pop
(bad)
outs
mov
push
cld
fnstcw
pushw
(bad)
cld
aas
icebp
push
push
out
jns
jg
das
xor
dec
mov
in
aas
dec
jg
out
clc
(bad)
dec
(bad)
fst
dec
xchg
pop
jecxz
ins
jle
(bad)
scas
std
sbb
shr
lahf
mov
ins
inc
out
loopne
hlt
imul
and
outs
and
sti
leave
pop
cld
out
into
jg
mov
aas
(bad)
imul
stos
add
pushf
aas
out
outs
cli
dec
sub
sti
int
jg
(bad)
call
xchg
(bad)
pop
mov
jo
ja
push
lahf
cld
or
loope
scas
cli
cdq
jmp
fistp
sti
xor
and
clc
pop
movs
iret
cs
mov
(bad)
sar
fucomi
icebp
(bad)
cld
cmc
sahf
sub
std
pop
mov
(bad)
jmp
fstp
in
outs
fwait
jl
push
repnz
cmp
pop
cld
jne
in
outs
repnz
cmp
shr
(bad)
cmp
or
pop
std
inc
dec
das
stc
jmp
cld
add
scas
test
(bad)
out
cld
mov
aas
repnz
int
mov
std
sub
jg
pop
cmps
std
das
jb
std
ja
hlt
lahf
cmc
aas
std
and
jecxz
mov
out
cli
cli
lahf
cmp
lods
(bad)
scas
jmp
stc
xlat
dec
mov
leave
push
pop
sti
lea
iret
push
(bad)
and
scas
sar
dec
jg
xor
(bad)
sub
out
out
dec
cld
add
std
test
cmp
jae
shl
aaa
(bad)
jnp
sar
(bad)
jg
xor
pop
movs
jae
outs
ds
hlt
lahf
ss
loopne
icebp
retf
(bad)
repz
clc
and
xchg
aas
repz
stc
inc
addr16
pop
std
pop
into
jle
push
scas
clc
into
lahf
neg
out
cmps
pop
(bad)
cmps
jg
mov
push
(bad)
clc
xchg
jg
xchg
std
fbld
mov
fsubr
sti
in
fistp
jecxz
pushf
fdiv
aas
lock
rcl
jle
scas
paddd
(bad)
sbb
ret
(bad)
(bad)
(bad)
pop
aam
lock
std
sbb
jne
jmp
mov
pop
std
xor
dec
(bad)
pop
jge
xlat
pop
cld
(bad)
dec
dec
mov
cmp
imul
jmp
(bad)
aaa
inc
sti
dec
out
(bad)
xchg
aas
popa
hlt
hlt
xlat
pop
shr
xchg
jns
(bad)
std
xchg
jmp
popa
and
out
out
mov
repz
inc
paddd
neg
shl
xchg
std
repnz
and
push
ficomp
cmp
add
or
pop
jge
mov
xlat
outs
mov
scas
call
mov
out
cld
cmps
(bad)
jno
(bad)
call
leave
mov
(bad)
aas
std
imul
mov
neg
push
in
movs
(bad)
jg
mov
jg
pop
or
xor
mov
out
jle
push
xor
pop
mov
iret
pop
(bad)
in
push
xchg
stc
(bad)
dec
inc
fmulp
jg
stc
imul
cli
(bad)
jmp
in
stc
stc
jg
mov
scas
jg
loopne
call
jmp
repnz
or
pop
fwait
ror
scas
clc
mov
out
psubb
mov
clc
pop
lahf
fwait
xchg
jle
aas
in
sbb
(bad)
mov
fcomip
push
or
mov
lahf
(bad)
or
mov
psubd
das
xchg
dec
xor
rcl
std
mov
jg
stc
mov
std
in
dec
aas
out
push
popf
std
test
stos
inc
jg
pop
repz
sub
jnp
or
jg
cmp
adc
ja
cmps
scas
inc
pop
jae
mov
std
call
out
(bad)
jmp
cli
int
cmc
daa
mov
mov
pop
(bad)
addr16
daa
mov
cwde
(bad)
clc
pop
(bad)
in
dec
cmps
adc
cmps
in
mov
fild
out
sti
inc
mov
cld
daa
mov
fcomip
xlat
std
push
push
(bad)
out
out
cli
mov
(bad)
mov
mov
xchg
jmp
jecxz
pop
jmp
xchg
std
cdq
jecxz
inc
fisttp
jnp
(bad)
mov
cmc
std
lds
(bad)
out
dec
jmp
cmp
pop
mov
jmp
cld
rcr
jno
iret
(bad)
cli
rsqrtps
ret
pop
into
push
pop
icebp
push
cld
inc
aas
(bad)
addr16
cli
in
jmp
clc
jnp
(bad)
hlt
jg
in
cld
fwait
(bad)
xchg
sti
inc
pop
call
outs
mov
(bad)
outs
cli
iret
cld
inc
mov
lahf
jmp
dec
fistp
dec
cmc
scas
cld
addr16
mov
dec
(bad)
neg
jno
out
cmc
xchg
mov
mov
(bad)
mov
cmps
std
movs
mov
(bad)
xchg
mov
popf
cld
dec
or
test
push
(bad)
fbld
aaa
jg
ja
out
std
mov
aas
cli
leave
(bad)
das
sti
int
mul
cmps
iret
aas
loope
call
ds
xor
outs
(bad)
std
(bad)
xchg
pop
hlt
(bad)
inc
call
mov
(bad)
mov
sti
scas
cmp
xchg
or
(bad)
cmp
mov
std
lahf
aas
call
icebp
fnstsw
imul
jp
pop
std
dec
(bad)
inc
pop
cld
xlat
lahf
push
push
repz
mov
sar
jg
ret
mov
fwait
mov
icebp
lahf
mov
sbb
popf
aas
repz
jmp
jg
jg
scas
cld
cmc
in
cld
xchg
in
inc
(bad)
fcom
xchg
inc
daa
jmp
out
int
xchg
std
xor
ficomp
or
fwait
inc
aad
mov
outs
dec
jg
icebp
scas
cld
out
iret
dec
sub
call
stc
out
icebp
xlat
sbb
jle
cmp
out
mov
pop
mov
sti
(bad)
aas
imul
cld
cdq
es
jne
push
lods
imul
lock
mov
dec
(bad)
call
call
loop
stc
pop
jle
jg
mov
jmp
stc
outs
(bad)
outs
dec
xchg
aas
jmp
mov
icebp
jmp
dec
dec
stc
mov
jg
in
in
mov
inc
inc
xlat
mov
push
stc
mov
std
mov
jmp
sub
xlat
push
pop
fdiv
clc
(bad)
dec
inc
ds
outs
repz
mov
xor
push
mov
fwait
push
std
repnz
stc
inc
jmp
pop
xor
mov
xlat
inc
jg
loop
stc
das
scas
int
outs
dec
mov
out
std
neg
jecxz
in
inc
dec
iret
mov
jmp
mov
dec
aas
cld
lahf
and
das
aam
or
jg
leave
pop
imul
pop
dec
cli
or
enter
(bad)
jae
out
jmp
mov
jp
dec
jns
std
outs
stc
ja
push
nop
(bad)
fnstcw
pop
cld
mov
mov
popa
adc
mov
int3
aas
cli
mov
mov
iret
lods
inc
std
das
jl
test
jle
aas
repz
popf
jg
fdivr
mov
mov
shr
pushf
push
jg
pop
test
std
scas
(bad)
in
aas
(bad)
mov
lahf
push
fistp
div
push
jno
icebp
out
clc
and
enter
scas
cmp
lds
loope
(bad)
mov
mov
jmp
mov
sti
(bad)
adc
jmp
dec
xor
ror
(bad)
fwait
ins
dec
sar
iret
(bad)
popf
in
aas
sti
leave
mov
sbb
ss
inc
jg
lahf
clc
sbb
(bad)
ins
stc
sti
std
xor
(bad)
idiv
push
jnp
(bad)
std
jle
(bad)
sahf
(bad)
into
aas
(bad)
jmp
inc
pop
(bad)
sti
dec
jg
mov
addr16
cld
in
repz
lock
into
aas
test
inc
stc
pop
jg
cmps
outs
jle
pop
into
cmp
std
pop
mov
int3
sbb
mov
and
(bad)
std
out
cmc
xchg
jge
fisubr
clc
ja
mov
(bad)
mov
test
loop
mov
ud0
mov
mul
clc
jecxz
jmp
pop
jge
sti
cld
ins
pop
call
(bad)
(bad)
sbb
mov
jg
mov
fstp
dec
mov
std
mov
lahf
jns
idiv
cld
pop
fdivr
pop
or
pop
cld
pop
std
fs
in
(bad)
es
shl
scas
cli
mov
jmp
adc
std
iret
(bad)
fdivp
mov
call
stos
jle
mov
jle
mov
in
(bad)
mov
dec
mov
xlat
and
inc
jb
xlat
jmp
(bad)
jg
fcom
les
push
rcr
std
pop
shl
xchg
sbb
inc
fistp
lahf
cld
pop
outs
dec
pop
pop
fistp
aaa
std
xchg
aas
(bad)
pop
std
jp
cli
in
inc
cmps
pop
(bad)
cli
scas
jp
or
clc
(bad)
adc
paddd
icebp
mov
jg
loope
aas
add
aas
mov
dec
call
lock
cmp
mov
imul
std
std
(bad)
cli
xchg
jmp
daa
fstp
xchg
dec
into
idiv
in
aaa
(bad)
jnp
sti
jg
scas
sti
jne
fcomp
std
fbld
inc
jg
pop
dec
std
test
pop
out
stc
mov
into
fucomip
lahf
cli
std
or
(bad)
jg
das
clc
sbb
scas
xor
call
addr16
mov
fdivr
imul
imul
(bad)
sti
fdivr
dec
aas
dec
jle
aas
into
sti
mov
int
push
out
imul
xchg
test
cmp
jnp
out
scas
sti
daa
cld
leave
mov
std
(bad)
ficom
clc
mov
mov
out
std
std
paddd
xchg
lahf
adc
cmp
push
fnstsw
lahf
bound
inc
(bad)
daa
std
ds
inc
adc
(bad)
fnstsw
pop
(bad)
out
push
popf
fcomip
pop
std
mov
std
xchg
(bad)
scas
jg
mov
xor
out
and
jg
jmp
sti
scas
sti
lahf
jle
aad
sti
xchg
(bad)
push
jg
lahf
std
inc
cld
daa
pop
std
cmp
repnz
push
pop
daa
jg
outs
fwait
(bad)
movs
mov
mov
in
mov
and
mov
aas
(bad)
aas
push
pop
add
cmp
xchg
mov
jnp
(bad)
hlt
lahf
cmc
fwait
cld
std
das
repz
repnz
pop
ja
(bad)
in
loop
cld
xchg
xchg
ja
icebp
fild
cmps
std
movq
sbb
inc
push
std
call
into
aas
inc
std
out
dec
das
cli
paddd
jmp
inc
jmp
call
(bad)
pushf
aas
aas
std
or
inc
aas
cld
mov
call
dec
add
out
inc
imul
jg
mov
mov
leave
fidivr
outs
(bad)
cli
inc
(bad)
cmps
jg
idiv
out
test
push
popf
pop
std
or
int
hlt
xlat
cld
jmp
jl
mov
aad
icebp
imul
aas
repz
mov
xchg
(bad)
jmp
jle
mov
xchg
test
jmp
lahf
cld
jecxz
js
cmp
jno
out
(bad)
push
inc
adc
std
mov
dec
ja
(bad)
scas
jg
(bad)
in
mov
dec
lds
leave
fbstp
iret
js
inc
jge
mov
pop
sti
scas
cld
outs
(bad)
fnstsw
loopne
out
cli
in
fdivr
lock
sub
mov
das
pop
cld
fstp
hlt
pop
out
fwait
xor
iret
jmp
call
jbe
sbb
call
cli
xchg
cld
lahf
fstp
mul
cld
cmps
iret
(bad)
out
aas
stc
xlat
clc
retf
jle
popf
jmp
lock
cli
dec
call
call
aas
icebp
mov
mov
sub
pop
clc
mov
pop
and
clc
mov
lahf
mov
call
jl
xchg
std
out
hlt
daa
mov
lahf
cld
mov
jg
jle
(bad)
mov
lock
xor
in
(bad)
retf
dec
(bad)
cmps
out
push
sub
das
cli
or
cli
jnp
out
loop
jno
fstp
repz
add
mov
clc
idiv
adc
lahf
not
std
jno
in
pop
cli
retf
(bad)
in
jmp
das
std
(bad)
clc
jmp
sbb
jg
outs
push
aad
cld
ds
dec
std
popf
(bad)
cli
aas
out
inc
iret
(bad)
fwait
lds
fistp
sar
mov
pop
std
sahf
mov
imul
pop
inc
stos
neg
(bad)
cmc
dec
sbb
ds
aas
jmp
iret
push
mov
(bad)
jg
cld
sti
dec
or
cli
aas
(bad)
jg
leave
(bad)
mov
jmp
(bad)
push
das
(bad)
mov
scas
jle
aas
inc
fwait
inc
mov
das
sti
cmc
push
jmp
ret
lahf
jns
paddw
pop
cld
sti
cld
sar
out
(bad)
mov
pop
outs
dec
jmp
test
test
push
cmp
fistp
jg
jge
aad
cli
mov
rcr
(bad)
xchg
mov
jp
sub
stc
(bad)
mov
pop
mov
ja
pop
out
jmp
std
(bad)
(bad)
out
popf
aas
jnp
xlat
outs
jg
mov
(bad)
out
int3
dec
jmp
cld
(bad)
(bad)
loop
jmp
jg
xchg
mov
aas
(bad)
in
pop
std
das
cli
or
mov
jmp
dec
jne
fwait
jg
(bad)
popa
iret
(bad)
out
pop
pop
cld
fisubr
cli
addr16
(bad)
rcr
cli
(bad)
cld
dec
mov
mov
addr16
lds
(bad)
std
sysexit
mov
js
fnstcw
loope
scas
neg
nop
pop
stc
out
push
(bad)
call
aam
jmp
(bad)
clc
leave
jg
xlat
fdivrp
repz
mov
jg
sti
push
jle
aaa
sti
cmc
jmp
lahf
clc
imul
push
(bad)
cld
cmp
std
mov
repnz
dec
cmp
neg
call
push
cld
iret
dec
lock
xchg
jecxz
(bad)
hlt
pop
pop
cld
jae
fldcw
aaa
cld
rcr
push
jp
ror
pop
push
sub
sti
(bad)
(bad)
fimul
fstp
jecxz
cmp
fidivr
aaa
dec
psubd
(bad)
(bad)
mov
inc
fidivr
(bad)
cwde
and
repz
mov
out
sti
mov
mov
scas
(bad)
xor
aas
idiv
sub
stos
jg
mov
scas
es
addr16
ret
outs
lock
(bad)
lahf
inc
jge
stc
mov
fistp
xchg
nop
jg
pop
jne
lock
fbstp
or
(bad)
aaa
cli
or
and
in
dec
(bad)
aas
(bad)
mov
jo
std
jg
dec
xchg
fistp
aas
std
cmc
mov
std
push
aas
(bad)
mov
add
fwait
(bad)
sti
inc
daa
data16
out
lds
fcmovne
(bad)
pop
std
jecxz
clc
popf
(bad)
call
not
sti
in
cld
outs
not
cld
xchg
scas
(bad)
jmp
jmp
stos
in
pop
jl
jg
mov
aaa
mov
lahf
inc
sar
div
ins
inc
or
idiv
push
dec
mov
out
fisttp
sti
(bad)
mov
mov
icebp
pop
cld
data16
repz
in
pop
jmp
clc
clc
psubw
(bad)
jmp
stos
(bad)
in
(bad)
cli
pop
test
xchg
mov
stos
cld
xlat
stc
int
xchg
xchg
mov
push
inc
pop
cli
pop
mov
clc
mov
(bad)
push
call
loop
(bad)
sbb
mov
dec
aas
jecxz
clc
(bad)
xlat
jg
(bad)
mov
pop
in
(bad)
mov
inc
ja
xchg
jmp
stos
jg
scas
pushf
push
clc
pop
or
xlat
mov
iret
cli
jne
sbb
in
xlat
clc
idiv
loope
repz
cli
sti
scas
mov
fstp
cli
pop
stc
retf
(bad)
aad
jg
mov
scas
clc
ins
dec
mov
cmps
dec
retf
push
std
mov
lds
repz
ror
jecxz
mov
in
jmp
lahf
std
addr16
std
push
jg
cmps
jg
das
clc
pop
push
push
std
xchg
adc
(bad)
out
out
std
out
jle
pop
sti
cmc
jbe
mov
cmps
and
mov
iret
jle
call
jg
pop
jmp
aaa
enter
mov
out
(bad)
push
inc
mov
(bad)
test
std
call
int3
cmp
fistp
repnz
in
cld
adc
ins
hlt
std
mov
(bad)
fwait
aas
clc
idiv
dec
popa
cli
data16
mov
mov
pop
(bad)
cmps
movs
mov
(bad)
clc
aas
cld
std
(bad)
fcomp
das
cld
inc
addr16
mov
ja
xchg
ja
iret
cld
and
int
call
jmp
cld
sub
cmp
pusha
xchg
fild
ret
stos
mov
mov
dec
stos
jg
aad
idiv
clc
jnp
pop
fdivr
jae
dec
(bad)
aam
neg
mov
pop
fnstcw
arpl
repnz
iret
das
stc
xor
xor
sahf
jg
popf
(bad)
outs
stc
xchg
hlt
iret
jmp
mov
imul
je
mov
psubq
dec
(bad)
(bad)
fbstp
mov
dec
inc
das
(bad)
mov
xor
(bad)
inc
jmp
icebp
pop
out
inc
ret
stc
xchg
cld
pop
sti
je
dec
(bad)
or
push
ret
popf
leave
divps
out
(bad)
(bad)
aam
sti
xor
(bad)
mov
fsubr
mov
hlt
pop
cld
(bad)
cld
inc
mov
mov
cmp
arpl
enter
push
fdivr
lods
xchg
retf
pop
(bad)
std
aas
mov
mov
inc
(bad)
jmp
popf
fbstp
sub
inc
lahf
dec
in
lock
pop
lahf
std
inc
mov
pop
cld
dec
aas
cmp
push
(bad)
mov
arpl
ja
jecxz
std
sbb
(bad)
out
in
pop
bound
inc
push
repz
jg
mov
ja
(bad)
dec
aas
leave
cmp
out
std
mov
mov
jle
out
cli
stos
fcomip
add
sti
sti
cdq
outs
jle
aas
mov
fstp
push
cld
(bad)
loope
jnp
(bad)
cld
loopne
ss
(bad)
cdq
pop
call
cmps
xchg
outs
test
push
out
jg
icebp
pop
std
out
or
cmc
(bad)
ss
push
push
out
fistp
aas
clc
out
stc
push
jle
in
repnz
jge
out
stos
(bad)
cmps
mov
dec
jbe
(bad)
(bad)
(bad)
js
stos
inc
(bad)
mov
jmp
mov
(bad)
mov
aaa
(bad)
fidivr
(bad)
mov
imul
(bad)
aaa
fst
loopne
inc
push
movs
cmps
scas
imul
retf
out
call
mov
mov
(bad)
mov
jg
cli
cmps
(bad)
mov
cld
setnp
add
jae
mov
(bad)
mov
pop
cmc
pop
(bad)
fstp
pop
cld
scas
push
fstp
jnp
enter
std
(bad)
jg
pop
jae
cmp
dec
push
ja
lods
(bad)
out
(bad)
jnp
pop
jg
mov
mov
adc
outs
mov
pop
shr
repnz
fistp
sub
in
mov
sbb
in
aas
lds
fst
fstp
out
shr
and
div
cld
xchg
mov
icebp
push
dec
mov
aas
cld
mov
cmc
scas
jg
pop
push
fcom
rcr
daa
(bad)
push
jg
arpl
and
ins
and
lds
mov
leave
cld
stc
jg
out
cli
cmps
jle
imul
(bad)
jmp
dec
lahf
adc
aas
sti
xchg
pop
iret
fsin
test
(bad)
(bad)
repz
cmp
aas
dec
in
push
es
repnz
pop
jg
imul
(bad)
(bad)
fld
cld
out
pop
cli
or
dec
sar
icebp
pop
jg
fcomip
pop
cld
out
hlt
scas
cli
jne
inc
push
aam
(bad)
(bad)
and
jp
(bad)
mov
loopne
stc
aas
pop
(bad)
ja
xchg
(bad)
(bad)
mov
mov
inc
std
jnp
xchg
das
cld
push
fist
in
and
stc
dec
sbb
pop
repnz
(bad)
jle
fdivr
jp
(bad)
push
mov
mov
jne
(bad)
(bad)
sti
jmp
outs
cmp
(bad)
out
(bad)
test
in
jg
aaa
jmp
int
mov
cld
shl
(bad)
loop
scas
inc
sar
out
stc
jnp
cmc
xchg
cld
fnstcw
das
jbe
cmps
cmp
iret
hlt
mov
jge
xlat
cld
push
cli
fld
fcomip
mov
mov
(bad)
jg
(bad)
stc
das
dec
shl
pop
cs
(bad)
loope
add
mov
mov
sbb
outs
repnz
call
out
icebp
jg
in
fwait
xor
inc
das
jmp
icebp
(bad)
(bad)
push
(bad)
cmps
jg
ret
push
(bad)
inc
jg
pop
push
mov
add
cdq
(bad)
icebp
add
clc
popf
dec
(bad)
xchg
jg
movsx
xchg
and
or
(bad)
(bad)
repnz
(bad)
(bad)
idiv
out
fstp
in
pop
pop
std
pop
out
jg
hlt
jg
pop
jg
(bad)
idiv
lea
jg
mov
clc
outs
jmp
retf
in
out
(bad)
jmp
std
add
cmc
aad
mov
idiv
in
call
cmps
mov
(bad)
cmps
in
jns
jmp
jg
imul
movs
daa
jg
mov
mov
xchg
dec
out
cld
pop
mov
lahf
dec
fistp
pop
sti
sbb
loop
(bad)
jmp
(bad)
jmp
clc
sbb
mov
ja
(bad)
sar
jle
das
mov
sar
xchg
call
inc
outs
test
fsub
sti
jnp
inc
popa
mov
scas
icebp
xlat
std
adc
stc
retf
(bad)
sbb
std
xlat
js
(bad)
sub
out
std
xchg
jle
clc
lahf
(bad)
jmp
jg
sar
imul
push
aas
stc
(bad)
scas
stc
in
(bad)
mov
jecxz
jg
(bad)
cmps
mov
add
xchg
mov
stc
idiv
and
scas
aas
jmp
and
repz
in
cmc
sub
mov
scas
(bad)
push
retf
fisttp
clc
retf
pop
cld
out
aam
das
sbb
das
cwde
(bad)
dec
inc
out
rcr
les
inc
iret
jle
aas
lock
stos
aas
out
adc
jg
mov
repnz
daa
lahf
cld
pop
push
(bad)
std
(bad)
jmp
sar
cmp
mov
std
pop
sbb
(bad)
push
jle
fstp
(bad)
in
(bad)
clc
pop
jmp
pop
cld
cmp
xchg
rol
into
mov
stc
scas
leave
daa
xor
stc
aas
out
mov
fucomip
cmp
cmps
aas
std
and
movs
jg
(bad)
pop
inc
fsubrp
stc
outs
sbb
jg
jg
in
enter
clc
or
sub
sub
inc
fistp
lahf
(bad)
stos
jg
out
shl
jg
das
jns
out
lahf
call
pop
idiv
std
call
das
mov
jmp
mov
std
jbe
in
lahf
mov
retf
inc
int
push
pop
pop
cwde
jmp
aaa
popf
cmp
cmp
cld
std
es
call
out
mov
call
xchg
mov
jnp
fst
cmps
(bad)
(bad)
stc
push
jge
mov
js
push
cld
scas
mov
(bad)
jg
out
repnz
aas
(bad)
mov
repz
cli
aaa
jnp
int
lods
jg
outs
(bad)
fist
inc
mov
(bad)
mov
xchg
jg
das
cld
int
jmp
sti
pop
cmps
in
aas
mov
call
leave
or
cld
pop
jg
mov
fcomip
lahf
cli
jne
cld
mov
add
mov
inc
cld
das
(bad)
(bad)
icebp
mov
jle
jg
pop
jge
pop
jl
xlat
cld
jns
dec
mov
cmc
jg
cli
or
std
loope
xchg
jg
pop
xchg
cwde
(bad)
jp
dec
repnz
cld
mov
(bad)
dec
jg
(bad)
sar
(bad)
ret
ja
outs
jle
in
scas
sar
imul
pop
jp
iret
(bad)
hlt
pop
mov
or
(bad)
jg
fcomip
inc
std
retf
dec
cld
enter
(bad)
mov
pop
std
outs
mov
push
add
jg
ret
int3
outs
(bad)
jg
fstp
hlt
dec
jmp
add
imul
mov
jg
mov
jg
popf
(bad)
jg
(bad)
aas
repz
rcr
cmc
mov
popa
cld
(bad)
inc
das
mov
mov
cld
mov
fidivr
fcomip
aaa
call
out
push
push
ror
mov
sub
jmp
in
jg
shl
outs
daa
std
pop
dec
(bad)
xor
jg
(bad)
(bad)
mov
aad
stc
pop
std
jp
jb
sti
pop
mov
out
aas
test
mov
dec
pop
aad
scas
stc
call
fwait
xchg
gs
repz
in
mov
mov
loopne
cmp
(bad)
(bad)
fistp
(bad)
mov
clc
clc
out
xor
pop
std
addr16
iret
cld
cmps
das
mov
scas
stc
das
std
cmp
retf
scas
std
push
push
or
mov
scas
jg
lahf
xor
aaa
jg
outs
popa
pop
call
jmp
std
cs
sti
(bad)
xlat
(bad)
mov
fstp
cmp
sahf
jmp
jg
das
stc
dec
(bad)
mov
repz
idiv
(bad)
fdivr
daa
push
mov
dec
jle
pop
jmp
(bad)
out
das
and
and
int
(bad)
aas
jmp
ds
(bad)
pop
dec
jg
lahf
(bad)
cld
xlat
jg
pop
xor
dec
sti
adc
in
(bad)
sub
fistp
lahf
pop
(bad)
cmp
shl
(bad)
pop
out
stc
adc
repz
jg
sahf
xlat
outs
hlt
jg
xor
(bad)
std
jg
aas
jmp
aad
sti
sub
mov
dec
mov
jg
jnp
sbb
or
aad
aas
jge
jg
dec
jg
std
(bad)
aaa
std
mov
retf
mov
jp
jmp
(bad)
clc
shr
jmp
cli
into
outs
cli
cmps
cld
cmp
enter
(bad)
cmp
pop
jle
aas
jb
pop
movs
call
(bad)
push
cmc
dec
push
std
push
mov
jg
jmp
cmps
mov
movs
pop
std
imul
fld
adc
test
std
adc
out
pop
inc
ja
mov
jmp
stc
jg
(bad)
shr
in
scas
sti
in
(bad)
(bad)
lahf
stc
scas
jmp
pop
pop
pop
std
sti
jle
call
test
lods
shl
pop
std
dec
dec
jg
fcomip
xlat
clc
xor
ror
xor
pop
(bad)
das
inc
xchg
lahf
(bad)
cmps
lahf
inc
mov
ja
repz
jmp
sar
xor
jnp
dec
cld
lahf
inc
push
mov
(bad)
mov
hlt
fnstcw
pop
dec
inc
gs
adc
outs
dec
fst
lds
std
pop
push
das
repz
imul
lahf
fcmovnu
jmp
ud0
(bad)
xlat
pop
std
mov
clc
mov
call
mov
pop
jmp
(bad)
push
out
dec
jg
aas
out
ja
xchg
jnp
cli
dec
test
arpl
push
pop
out
outs
repz
mov
mov
(bad)
jle
pmaxsw
jmp
cwde
(bad)
xchg
jg
outs
lock
pop
call
retf
push
xchg
mov
shr
xchg
cld
cmp
fucomp
clc
pop
adc
inc
mov
cli
in
shld
outs
div
pop
repz
push
out
(bad)
dec
hlt
cmps
push
jmp
(bad)
push
aas
ss
js
in
dec
push
jecxz
jg
lahf
jl
fwait
std
ds
div
outs
cli
jmp
(bad)
mov
icebp
aas
cld
inc
paddd
mov
(bad)
stos
aas
jmp
jle
(bad)
jmp
clc
das
stc
inc
stos
dec
jbe
sar
jp
mov
jns
jle
fbld
lahf
clc
jnp
xor
ds
jg
lahf
std
mov
jecxz
sti
call
lahf
stc
jmp
fsqrt
leave
scas
icebp
out
(bad)
xor
std
jae
fstp
scas
pop
push
adc
mov
dec
jg
pop
sti
das
cld
jge
in
outs
add
out
inc
aas
sti
(bad)
dec
lahf
in
std
stos
aas
dec
aas
(bad)
jmp
mov
neg
stc
or
mov
sar
clc
inc
imul
cld
dec
mov
call
aas
std
pop
cld
sbb
icebp
jg
movq
outs
cmps
cmp
jns
hlt
fbstp
std
imul
scas
test
cmp
(bad)
(bad)
sub
int3
fucomip
aas
cmps
paddd
jle
aas
loope
clc
cmps
fdivrp
movq
popa
fld
test
aaa
cli
adc
jg
std
xchg
(bad)
lahf
sahf
call
int
call
sub
sub
cld
out
(bad)
movs
mov
call
(bad)
or
sar
jmp
sti
jg
cmps
jle
aas
repnz
dec
adc
das
dec
std
push
pop
call
das
jle
lahf
(bad)
mov
sti
dec
xchg
jl
daa
sar
cmp
bnd
sbb
in
lock
cld
clc
addr16
fdivr
push
push
call
lock
repz
xchg
lahf
clc
imul
call
das
inc
push
ds
cmp
std
jg
aaa
cld
jno
xlat
aas
std
push
std
fst
sub
ret
out
sar
xchg
std
inc
cli
cmc
into
jg
(bad)
jg
call
fnstsw
iret
sti
outs
push
aaa
clc
dec
pop
std
loopne
jle
call
(bad)
jg
aaa
(bad)
jmp
pop
stc
dec
cld
dec
(bad)
push
aas
jae
clc
das
cwde
paddd
(bad)
in
iret
sti
fidivr
dec
retf
xchg
aas
repz
cmp
jg
ins
repz
(bad)
cmps
jg
das
std
xor
dec
pop
sar
cli
(bad)
fldcw
movs
sti
movs
retf
(bad)
(bad)
sbb
stc
aas
(bad)
in
(bad)
cmp
ja
(bad)
int
stc
cmps
std
mov
hlt
addr16
inc
(bad)
and
lock
sbb
cdq
jg
daa
jg
out
dec
xchg
out
aas
aam
scas
repz
std
inc
sar
xchg
lahf
cld
adc
jg
jge
icebp
outs
cmc
addr16
fcomp
cmc
pop
(bad)
pop
(bad)
mov
stc
jnp
stc
pop
push
inc
push
sbb
aas
jmp
mov
cmps
xchg
aas
fbstp
jmp
stc
repz
mov
mov
inc
adc
out
call
jmp
(bad)
std
mov
std
mov
iret
push
xchg
mov
outs
cld
xlat
dec
(bad)
stc
jecxz
test
stc
cmp
aas
cmc
xlat
inc
dec
jne
(bad)
jecxz
out
iret
cld
sar
pop
push
push
mov
retf
inc
mov
(bad)
(bad)
mov
xchg
(bad)
jmp
(bad)
mov
popf
jle
imul
stc
mov
inc
out
lahf
mov
(bad)
inc
hlt
mov
(bad)
(bad)
sti
aad
test
mov
cdq
fbld
call
paddb
(bad)
stc
ret
aas
pushf
pop
dec
fdivrp
clc
das
cld
and
lea
clc
mov
outs
outs
adc
mov
xchg
aas
test
(bad)
div
mov
aaa
lahf
dec
fsub
mov
idiv
sbb
pop
lock
call
fucomip
hlt
hlt
mov
aas
dec
sub
(bad)
xor
out
cmp
in
clc
add
out
sti
idiv
(bad)
pop
scas
inc
(bad)
call
inc
pop
sahf
jp
stos
jle
jg
(bad)
movs
(bad)
retf
(bad)
jge
ja
repnz
(bad)
cmps
out
push
pushf
hlt
iret
shr
pushf
ror
hlt
fstp
jg
mov
jecxz
jmp
(bad)
cli
das
popf
std
push
mov
push
pop
cli
shl
mov
mov
(bad)
jle
fstp
jnp
cmp
outs
lock
fldcw
std
jg
xchg
jg
(bad)
lahf
imul
(bad)
idiv
movq
lahf
cld
or
pop
cld
jmp
std
das
std
mov
(bad)
daa
cld
sar
xchg
fcmovbe
jmp
in
fistp
pop
std
popf
jg
push
xchg
cld
sbb
std
call
(bad)
scas
hlt
mov
adc
notrack
jg
repz
dec
aas
lock
pop
jmp
fucomip
(bad)
(bad)
(bad)
in
jg
fstp
dec
mov
(bad)
aaa
sti
mov
(bad)
cdq
ja
mov
repnz
in
ret
jg
cld
xchg
and
std
xchg
push
ficomp
repz
add
cmp
shr
in
fcomip
inc
(bad)
jns
(bad)
mov
call
int
mul
test
jg
pop
rep
(bad)
cld
out
(bad)
xchg
mov
scas
stc
ins
jg
iret
xor
scas
dec
xor
mov
rcr
(bad)
popa
xchg
aas
mov
out
lods
jg
in
stc
xlat
std
cs
ret
test
pop
cld
fnstsw
or
jo
mov
out
clc
jg
repz
addr16
inc
inc
cmps
jg
(bad)
fild
jg
lahf
mov
pop
jmp
(bad)
(bad)
scas
call
(bad)
cli
movs
mov
scas
jle
(bad)
or
int3
std
pop
(bad)
aas
jl
mov
cmp
pop
scas
addr16
cmc
fistp
push
cli
imul
icebp
neg
or
rcr
arpl
pop
push
inc
dec
jmp
aas
cmc
daa
(bad)
stc
pop
hlt
sbb
fucomip
mov
or
jg
mov
add
(bad)
stc
(bad)
call
retf
retf
jg
out
std
imul
jmp
fcmovnu
in
dec
mov
cmp
pop
std
(bad)
(bad)
in
retf
daa
jg
out
xchg
(bad)
outs
pop
mov
cli
stos
jg
mov
jbe
leave
dec
aas
cli
jno
mov
out
scas
sti
add
push
dec
xchg
out
dec
mov
cmp
out
stc
mov
push
lahf
cld
or
jge
mov
pop
cmps
or
(bad)
sti
(bad)
cmp
pop
jbe
int3
aas
out
ja
xchg
loope
cld
mov
add
imul
stc
daa
(bad)
push
lahf
cld
fisub
(bad)
lahf
cld
idiv
jnp
popf
inc
aas
div
xlat
cli
pop
(bad)
les
jg
jg
scas
push
dec
neg
lea
pop
lock
ss
add
aas
std
jge
call
iret
jg
aas
stc
and
loopne
xchg
jg
inc
clc
push
(bad)
out
mov
jg
(bad)
icebp
lahf
(bad)
cdq
mov
fnstsw
enterw
or
inc
(bad)
jp
dec
std
jbe
jmp
aas
stc
loop
clc
xchg
(bad)
xchg
(bad)
daa
(bad)
xor
loop
cld
fwait
cld
sbb
jmp
jg
pop
call
cmp
pushf
repnz
mov
cld
idiv
std
adc
mov
pop
jg
pop
stc
addr16
das
(bad)
loopne
in
pop
std
push
jg
sahf
push
jbe
loope
ins
sub
fwait
pop
out
out
xor
aas
clc
xlat
mov
jg
and
(bad)
repz
leave
fisttp
loopne
(bad)
fld
mov
pop
(bad)
mov
cld
pop
nop
test
xchg
push
out
cmc
pop
shl
adc
jg
outs
std
imul
das
(bad)
jmp
arpl
fnstsw
jg
imul
pop
sti
and
and
(bad)
cmp
mov
dec
dec
push
xor
xchg
clc
xor
jg
jg
xor
lahf
clc
inc
mov
xchg
jg
cmps
ins
add
(bad)
stc
in
jmp
jg
xor
ins
push
fsubrp
stc
jmp
test
jg
scas
call
inc
inc
data16
sub
lahf
(bad)
lds
std
test
leave
pop
movs
dec
jle
repz
dec
cmp
aas
ror
inc
cld
xlat
jg
xchg
aas
loop
aaa
jg
sbb
jg
pop
mov
hlt
lahf
std
xchg
jg
dec
inc
jg
in
call
iret
out
std
pop
pop
(bad)
fmul
(bad)
(bad)
out
ret
daa
mov
std
stos
repz
addr16
sub
dec
repz
leave
lahf
cmc
cli
pop
push
adc
fisubr
ret
push
(bad)
inc
dec
pop
jg
call
int
(bad)
nop
push
psrlq
jle
jg
scas
std
mov
neg
cli
scas
(bad)
aam
mov
daa
inc
sbb
icebp
test
cmp
std
sub
push
(bad)
cld
bswap
inc
jg
idiv
sbb
(bad)
cld
jecxz
aad
sti
dec
dec
inc
stos
aas
loopne
cdq
pop
mov
call
xchg
jmp
aaa
in
jle
jg
sti
out
cli
sbb
mov
mov
mov
jle
mov
lock
in
mov
fxch
inc
mov
mov
outs
cli
aaa
std
mov
cld
scas
retf
jmp
aas
stc
mov
sbb
(bad)
cli
(bad)
scas
and
jge
mov
(bad)
fidivr
repnz
shl
sub
(bad)
mov
jne
cmc
lahf
pusha
jp
mov
push
jg
pop
std
das
into
jg
retf
mov
outs
out
pop
jp
add
sti
ins
std
mov
mov
fstp
aas
mov
std
(bad)
addr16
neg
das
and
lahf
clc
sbb
repnz
sbb
dec
sti
cmc
(bad)
mov
(bad)
adc
out
aas
bound
std
add
mov
mov
xchg
(bad)
fisttp
pushf
add
div
jmp
cmc
cmp
mov
(bad)
fpatan
mov
shr
in
aas
imul
(bad)
jle
sti
scas
sbb
dec
cld
add
out
cld
imul
mov
jmp
xlat
ror
test
aaa
jg
jle
outs
inc
mov
jns
jg
jmp
cld
sub
outs
jmp
std
es
das
(bad)
mov
sti
sti
std
dec
inc
out
icebp
(bad)
in
jmp
jg
into
pop
repnz
int3
(bad)
std
mov
pop
call
(bad)
add
(bad)
pop
cld
lds
aas
mov
lahf
std
int3
aas
clc
in
mov
clc
out
cld
out
iret
jmp
lahf
aas
cmps
and
out
jg
mov
std
fistp
std
cld
stos
leave
mov
out
call
jmp
cld
outs
mov
in
das
dec
cmp
std
pop
sti
out
mov
jmp
cli
sbb
aas
sti
idiv
ja
rcr
stos
mov
aas
(bad)
fstp
mov
jg
jg
cmp
idiv
jg
psubd
lahf
sti
inc
jg
jg
sti
push
jg
fs
das
(bad)
out
in
jmp
fild
dec
imul
lock
std
pop
mov
std
clc
xlat
clc
repz
mov
jg
stos
jg
inc
jg
(bad)
jmp
dec
jle
not
xchg
rcr
std
jne
mov
fcomip
xlat
cli
fbld
out
mov
jg
pop
(bad)
aam
cli
cmp
das
cmc
retf
fcomip
scas
lahf
push
test
inc
xchg
loope
repz
call
rcr
dec
jnp
ret
xchg
cwde
dec
(bad)
fcmovb
cli
sub
(bad)
std
jg
inc
push
repz
fcomip
cmp
cmp
call
clc
aas
hlt
aad
cld
pop
cld
mov
aaa
out
(bad)
push
fwait
pop
repz
pop
cld
ds
mov
jne
ret
mov
sub
cli
in
stc
mov
aas
test
cli
xchg
dec
rcr
(bad)
leave
(bad)
push
push
jnp
in
idiv
inc
out
arpl
(bad)
fs
jle
cli
in
stc
sar
push
inc
in
(bad)
clc
fisttp
(bad)
call
loope
imul
dec
(bad)
(bad)
shl
jmp
aas
bnd
pop
cmps
scas
fnstsw
mov
test
cli
jnp
lahf
iret
(bad)
(bad)
aas
not
retf
aas
std
fistp
push
jg
pop
inc
ins
repz
mov
scas
cli
movd
lods
push
aas
in
(bad)
jae
cld
aas
ror
dec
repz
clc
repz
sbb
clc
jnp
cli
(bad)
scas
stc
adc
ud0
mov
test
repz
call
dec
(bad)
sahf
jg
out
inc
sti
(bad)
mov
(bad)
push
pop
xchg
scas
cmc
pop
(bad)
es
(bad)
cmps
pop
cld
jp
ss
idiv
sub
pop
jg
popf
mov
mov
pop
(bad)
pop
call
cld
sar
in
iret
cld
cdq
aas
cmc
jg
fsincos
or
outs
std
jmp
cmp
lods
out
(bad)
arpl
jg
xchg
push
sbb
nop
cli
mov
stc
pop
addr16
(bad)
scas
icebp
push
cld
push
jg
mov
sti
icebp
pop
repnz
mov
icebp
outs
call
stc
in
neg
xchg
jge
das
dec
jmp
fldcw
lods
aas
std
lock
jmp
in
(bad)
fwait
jge
inc
mov
(bad)
inc
in
out
cld
out
jge
aaa
std
mov
sysenter
lahf
aas
(bad)
stos
mov
in
aas
test
mov
dec
jg
outs
test
lods
test
fnstsw
xchg
stc
cmc
push
and
push
cld
out
lea
aas
jmp
fistp
lock
xlat
pop
jecxz
pop
(bad)
icebp
outs
cmc
das
push
call
jg
inc
jg
leave
iret
nop
mov
(bad)
cmps
rcl
call
arpl
mov
dec
retf
jle
pop
adc
out
(bad)
cld
popf
jg
xchg
test
inc
mov
cld
int3
push
pop
cmp
leave
out
(bad)
test
fcmovb
pop
dec
dec
les
(bad)
jge
in
pop
std
xor
cmp
popf
push
(bad)
(bad)
cli
pop
cld
outs
mov
jmp
mov
std
(bad)
cld
ins
jg
dec
cld
sbb
pop
std
imul
or
gs
imul
fwait
shr
std
das
cld
fdiv
scas
stc
(bad)
pop
dec
outs
inc
jnp
mov
jmp
outs
mov
cld
int
arpl
pop
js
call
std
scas
adc
std
sahf
mov
std
loopne
jg
mov
adc
data16
les
lock
dec
cld
mov
cmps
mov
addr16
add
xlat
cld
ror
outs
aas
inc
mov
mov
inc
cmp
ja
imul
sbb
(bad)
jmp
std
clc
xlat
cli
jne
pop
mov
mov
jmp
shr
jmp
jl
dec
cmps
mov
xchg
clc
sub
push
in
and
mov
(bad)
inc
mov
int
jg
out
dec
lahf
std
fnstsw
scas
jnp
popf
(bad)
jle
cmp
(bad)
cmps
cmp
lahf
clc
shr
lods
jg
xchg
sar
lahf
icebp
jmp
(bad)
jnp
mov
inc
adc
dec
mov
(bad)
call
sar
cmp
push
jg
pop
jbe
xchg
int
and
ret
(bad)
mov
addr16
icebp
neg
stc
xor
lods
cmps
jg
(bad)
xchg
jle
rcr
cli
shl
jle
mov
push
idiv
fbld
sbb
push
mov
cdq
mov
mov
fild
pop
out
scas
stc
or
mov
loope
call
mov
jl
aaa
ds
das
iret
dec
outs
jg
aad
cli
imul
fstp
push
mov
pop
das
jmp
jg
fstp
pop
std
pop
inc
loop
cld
or
(bad)
repnz
lock
jge
idiv
fsub
pop
jmp
div
(bad)
aam
(bad)
sti
fcomip
(bad)
(bad)
pop
mov
arpl
jmp
sbb
xchg
pop
stc
sti
aas
stc
or
in
cmc
idiv
cmps
pop
aas
std
push
cmp
adc
push
fldcw
aaa
loopne
push
cli
aaa
jg
rcr
pop
stc
in
lahf
sti
pop
(bad)
jno
retf
pop
(bad)
cmps
(bad)
jp
cmp
imul
scas
mov
cld
data16
rcr
out
(bad)
call
sbb
xchg
cmp
mov
mov
cmp
std
cmp
in
jns
nop
lea
push
pop
cld
out
fprem1
aas
jb
ja
fstp
in
dec
das
push
outs
repz
adc
stc
cmp
aaa
dec
int3
aaa
fldpi
inc
cld
cli
xchg
push
mov
imul
sub
xlat
mov
jmp
jg
out
jle
(bad)
std
out
mov
add
sar
jle
jg
xlat
movs
xchg
mov
stos
jmp
aaa
jmp
or
lahf
push
adc
ja
mov
in
cli
mov
xcrypt-ecb
cmps
mov
outs
dec
jb
aaa
cld
loope
ror
imul
mov
pop
shl
cmc
das
cld
stos
jg
mov
push
cli
xor
cld
addr16
or
std
push
jg
pop
idiv
das
dec
cmp
test
repnz
cld
cmp
(bad)
call
addr16
in
out
cmp
adc
xchg
(bad)
jmp
(bad)
icebp
mov
(bad)
mov
repz
inc
jg
das
std
adc
stc
cmp
mov
lahf
jle
aas
push
repnz
(bad)
std
jg
out
imul
aaa
stc
movs
iret
(bad)
fstp
gs
pop
xchg
push
push
dec
jmp
stos
jns
pop
aad
jg
aas
lea
fistp
(bad)
stos
pop
dec
inc
lahf
sti
inc
mov
or
loope
std
das
scas
int
lahf
(bad)
movs
in
das
cld
daa
push
mov
aas
lods
popf
std
dec
repz
mov
scas
icebp
xchg
sbb
neg
cld
in
cli
inc
(bad)
pushf
pop
sti
or
xlat
mov
repnz
dec
jle
pop
(bad)
sub
xchg
test
or
cld
stc
jnp
fld
fst
pop
stc
inc
jge
call
idiv
repz
loope
jg
btr
jmp
jmp
adc
mov
(bad)
mov
hlt
iret
cld
push
(bad)
(bad)
jg
loop
xor
(bad)
mov
leave
cld
dec
push
call
cmc
out
std
pop
mov
scas
(bad)
jecxz
jge
das
sti
out
call
jg
(bad)
scas
cwde
mov
loop
icebp
daa
fwait
mov
jmp
sti
adc
dec
xor
push
call
pop
stc
mov
clc
stos
jg
retf
(bad)
movs
add
jg
loopne
mov
scas
mov
pop
rol
out
scas
icebp
xchg
mov
xchg
loopne
jge
jmp
call
lock
xor
test
cli
(bad)
call
in
std
sbb
rcr
out
mov
(bad)
cld
paddw
(bad)
std
hlt
cmps
jg
iret
adc
lock
std
mov
stc
das
movs
add
adc
out
das
cld
or
xor
jge
inc
and
icebp
popf
mov
out
jg
cmps
out
xchg
pop
jge
outs
sbb
jg
scas
std
push
into
sub
cld
xor
aas
jp
dec
stc
jmp
lock
ds
inc
mov
xchg
jecxz
out
iret
std
test
scas
cli
lods
dec
aas
in
idiv
lahf
call
mov
icebp
popf
mov
daa
cld
jmp
inc
mov
fistp
sti
outs
jle
cld
push
push
aas
in
xchg
cld
in
cld
jmp
das
jg
jmp
cld
xlat
(bad)
mov
lahf
repnz
xchg
jg
popf
fcomip
outs
xor
ficom
repz
jns
retf
ja
push
xchg
push
jg
inc
xchg
mov
cli
seto
(bad)
sub
push
out
fs
(bad)
sub
clc
stos
imul
jg
std
mov
pop
dec
(bad)
xor
jns
pop
jmp
jmp
inc
or
mov
adc
call
push
pop
(bad)
fdivrp
pop
cmps
cmp
scas
dec
clc
sti
out
cld
jne
(bad)
lahf
pop
gs
dec
dec
or
ds
jne
cmc
aas
repz
(bad)
(bad)
adc
dec
aas
jmp
stc
pop
inc
lahf
std
(bad)
jg
clc
(bad)
jle
jg
out
cs
sti
jg
jg
sti
cmc
(bad)
(bad)
addr16
fwait
sbb
call
aas
cli
(bad)
cmp
pop
(bad)
cdq
xchg
ja
test
mov
fs
(bad)
pop
dec
xor
fsubrp
cli
daa
cld
mov
cmp
inc
pop
push
mul
(bad)
cli
pop
jle
(bad)
cmps
jmp
fucomip
aas
inc
jg
(bad)
std
(bad)
inc
std
lahf
cld
aaa
aas
icebp
sbb
les
dec
fsubrp
hlt
xlat
cld
imul
cmp
repz
pushf
push
or
(bad)
jmp
cmc
pop
rcr
ret
mov
jg
jle
imul
mov
pushf
(bad)
jmp
jg
popf
mov
div
out
lock
(bad)
out
stc
inc
jmp
(bad)
xchg
mov
(bad)
pop
std
cdq
jg
scas
clc
xchg
stos
iret
dec
test
sbb
cmp
bnd
inc
dec
pushf
fsub
sbb
sti
pop
jg
(bad)
jp
sti
cld
cmp
out
cli
daa
in
std
iret
mov
out
jmp
cmp
les
push
ret
repz
pop
ins
std
cmp
dec
leave
call
xchg
loop
dec
dec
retf
pop
icebp
ja
(bad)
sbb
pop
jmp
jle
mov
scas
mov
jmp
pop
inc
lahf
std
ss
adc
fcomip
(bad)
cli
in
in
mov
(bad)
out
out
std
jecxz
(bad)
aas
call
dec
(bad)
mov
mov
aas
lock
std
push
jg
xor
pop
cld
mov
sti
(bad)
jle
mov
das
cli
pop
enter
(bad)
hlt
lds
ss
mov
mov
jg
mov
imul
out
cmp
xor
mov
repnz
jle
sti
xchg
outs
sti
push
retf
stos
ret
xor
pop
jle
dec
cmp
retf
(bad)
stc
pop
repz
scas
jg
xchg
std
pop
push
cld
out
sti
psubsw
fistp
std
push
adc
std
or
imul
mov
jbe
shl
jg
pop
jecxz
aaa
mov
in
cli
mov
fmul
add
add
add
add
add
mov
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
add
add
pop
add
add
add
add
in
add
inc
push
add
ret
bound
mov
scas
mov
xor
add
add
inc
cmp
outs
jae
ins
pop
pop
bound
pop
bound
fs
gs
push
imul
popa
jb
popa
outs
je
push
arpl
gs
push
imul
popa
jb
popa
outs
je
jo
bound
