cmps
icebp
hlt
mov
adc
mov
xchg
xor
xor
jne
xor
xor
xchg
xor
rcl
fdivr
xchg
pop
imul
mov
xor
mov
in
xor
into
rcr
inc
nop
pop
loop
cmp
loopne
mov
xor
xor
and
mov
mov
push
cmp
loope
jae
loop
ret
pop
mov
xchg
pop
es
xor
sahf
fptan
inc
xchg
xor
fs
retf
repnz
outs
pop
aam
xlat
sahf
(bad)
jmp
cwde
sbb
idiv
pop
sub
sti
aam
inc
jnp
aaa
mov
xchg
xor
ror
aas
jle
mov
je
xchg
mov
dec
mov
cmp
dec
les
xor
aaa
loopne
enter
rol
cmp
mov
aas
cmp
mov
pop
orps
mov
xor
mov
shl
xchg
xor
xchg
mov
mov
xor
mov
add
jmp
imul
call
dec
xor
into
dec
les
and
push
imul
aas
js
into
loopne
sahf
mov
ret
mov
dec
or
lds
pop
movs
push
imul
mov
push
xor
sti
aam
mov
xor
retf
cmp
icebp
rcr
xor
xchg
idiv
sahf
xor
jmp
cmp
cmp
mov
(bad)
les
fst
call
jae
shr
mov
adc
xor
pop
fucomp
clc
adc
xor
xchg
xor
aaa
sbb
mov
cmp
push
adc
outs
pop
aam
(bad)
(bad)
sub
cs
xor
pop
pop
adc
cmp
(bad)
pop
imul
pop
pop
cmp
cwde
pop
adc
pop
mov
mov
adc
xchg
sti
aam
pop
es
sbb
into
sbb
mov
mov
mov
fimul
cmp
mov
xchg
inc
xchg
xor
repnz
mov
xchg
xor
ret
mov
mov
jle
int
xchg
(bad)
retf
les
xor
xchg
pop
mov
xchg
pop
mov
xchg
mov
sbb
jno
shl
mov
pop
repnz
cld
adc
add
pop
mov
adc
pop
lds
fdiv
fidiv
mov
adc
pop
lds
out
inc
dec
mov
pop
(bad)
es
xchg
xor
sar
mov
cmps
(bad)
fidivr
(bad)
mov
xor
outs
or
fstp
call
xor
cmps
icebp
hlt
shl
xor
bound
test
jge
or
mov
mov
jno
xor
and
outs
jmp
mov
sub
or
cmc
rcr
mov
(bad)
push
mov
lds
cld
sbb
sbb
cld
xor
add
ds
xchg
pop
mov
xchg
into
shl
inc
mov
cmp
idiv
sti
jge
dec
dec
mov
shr
inc
test
xchg
into
shr
inc
dec
shl
dec
mov
pop
test
xchg
xor
sti
jge
aaa
inc
outs
xor
cmp
xor
outs
(bad)
push
mov
sar
enter
pop
aam
ins
ror
ret
cmps
leave
cmp
imul
mov
xchg
pop
mov
jecxz
dec
dec
sahf
fld
std
lahf
mov
or
lods
vblendvpd
mov
jecxz
dec
dec
push
xchg
inc
xchg
xor
rcl
mov
xor
mov
or
xor
pop
aam
xlat
xchg
ins
sbb
leave
jnp
ds
cld
cmp
jae
mov
repz
sar
add
ror
cmp
outs
outs
into
mov
push
jae
or
lock
int
ret
sbb
xor
mov
inc
inc
mov
pop
shl
imul
ret
shr
je
mov
and
mov
int
jo
cmp
cmp
je
mov
leave
repz
mov
(bad)
(bad)
mov
cmp
inc
sbb
ror
aas
jle
mov
hlt
mov
outs
or
(bad)
cdq
mov
les
or
imul
icebp
ret
pop
repz
pop
fs
fs
ret
mov
mov
jle
ret
cmp
inc
mov
cmp
pop
repnz
ds
cmc
idiv
pop
jmp
aas
jle
mov
hlt
mov
outs
or
lahf
div
cmp
pop
cmp
ret
mov
mov
mov
xchg
into
dec
jl
dec
movs
inc
jg
ins
or
ja
shl
popf
retf
push
mov
cmp
mov
cmp
pop
cmp
pop
bnd
int
ja
pop
aam
push
call
sub
sbb
ret
int
int
pop
pop
add
xor
fist
push
lock
rcl
mov
outs
cs
icebp
pop
loope
mov
mov
pop
push
and
enter
dec
mov
add
ret
int
jle
div
pusha
pop
repnz
jae
out
sar
xchg
call
mov
jnp
xor
out
xor
fist
push
lock
rcl
mov
outs
cs
icebp
pop
loope
mov
mov
pop
push
and
enter
int3
call
xor
jle
div
mov
outs
out
repnz
fs
ins
sbb
and
rol
icebp
(bad)
fs
mov
imul
int3
jge
aas
jle
or
scas
mov
stc
aaa
cdq
(bad)
mov
cmps
icebp
hlt
rol
sar
jle
mov
loope
cmps
icebp
jmp
int
ja
pop
aam
imul
jecxz
jecxz
or
add
mov
sbb
into
mov
push
jae
(bad)
mov
jle
dec
les
icebp
(bad)
sbb
pop
xor
aam
loop
cmc
int3
dec
(bad)
(bad)
mov
loop
mov
dec
les
mov
add
je
mov
outs
jmp
(bad)
mov
or
leave
popf
ret
pop
test
fptan
dec
xchg
xor
cmp
into
stos
cmp
cmp
cmp
xor
xor
xchg
div
fs
ret
mov
aas
dec
sahf
mov
mov
leave
cmp
mov
xor
aam
in
mov
out
sbb
xor
mov
mov
mov
lods
(bad)
lds
pop
(bad)
in
mov
enter
ret
mov
out
sar
cmp
mov
dec
(bad)
xor
mov
push
mov
cld
xor
xor
scas
ret
jle
(bad)
cmp
xor
cmp
ds
pop
je
xor
loop
(bad)
jmp
mov
xchg
mov
(bad)
dec
xchg
xor
loopne
lods
je
rcr
mov
retf
adc
stc
inc
jns
mov
movs
les
xor
imul
mov
sar
icebp
hlt
rcr
mov
dec
les
test
leave
outs
out
repnz
fs
cmp
xor
ins
ror
jecxz
jmp
xor
aam
dec
les
adc
call
xor
scas
je
xor
jmp
cmp
dec
jo
xchg
mov
ja
stos
lods
pop
jns
xor
and
xchg
popa
aas
or
mov
jns
xor
mov
pop
repnz
cmp
into
dec
cmp
iret
dec
imul
shl
inc
mov
cld
xor
and
mov
adc
dec
lds
pop
arpl
dec
mov
imul
xchg
cmps
and
push
mov
xchg
mov
ja
rol
in
sar
aas
jnp
popa
aas
add
test
ror
aaa
inc
bound
mov
cmp
mov
cmp
xor
cmp
mov
loop
cmp
clc
imul
jle
or
dec
xchg
mov
mov
aaa
mov
jns
mov
test
pop
repnz
cmp
xor
xor
xchg
(bad)
push
mov
jmp
ja
push
je
cmp
je
cwde
push
cmc
idiv
sbb
sbb
jp
cmp
cmp
cmp
inc
xchg
data16
add
xchg
mov
int
ror
icebp
rcr
pop
jns
pop
pop
enter
jle
popa
aas
add
mov
xchg
xor
popa
sar
les
repnz
inc
push
ror
push
call
mov
add
icebp
(bad)
pop
fisubr
xchg
xor
ds
cmc
idiv
imul
mov
lds
mov
xchg
mov
cmps
and
cmp
imul
icebp
ret
pop
jmp
les
cmp
add
leave
mov
les
xor
ret
mov
out
ror
ret
xchg
leave
cmp
enter
cmp
cmp
mov
cmp
cmps
xor
mov
lahf
jmp
xchg
xor
xchg
xor
pop
je
mov
fcmove
mov
sbb
leave
movs
dec
cmc
mov
mov
stos
add
sar
push
dec
cmp
xor
jns
fldcw
call
mov
push
jns
xor
into
dec
xor
mov
mov
(bad)
push
mov
lds
cmp
gs
cwde
(bad)
cmc
idiv
jge
cmp
cld
adc
jmp
xchg
xor
enter
sub
add
or
xor
xor
cmp
mov
test
cdq
mov
les
aaa
pop
push
aaa
inc
push
shr
inc
mov
cmp
les
xchg
fdiv
xchg
xor
jle
mov
mov
xchg
pop
mov
xchg
pop
mov
xchg
jno
cmp
jo
ror
je
push
xchg
pop
mov
xchg
popa
pop
or
xor
adc
or
cmp
jbe
pusha
out
jecxz
dec
dec
(bad)
fxch
dec
xchg
xor
mov
mov
pop
mov
pop
mov
rol
in
xchg
pop
lods
enter
dec
(bad)
(bad)
dec
xchg
xor
(bad)
fld
xchg
xor
gs
ja
pop
aam
cmps
xchg
xor
lds
and
and
repnz
ds
xor
clc
push
mov
les
mov
call
cmp
iret
dec
mov
cmc
dec
lds
pop
jbe
into
dec
bound
cmp
xchg
(bad)
push
mov
test
imul
mov
mov
mov
jle
(bad)
cmp
iret
dec
imul
jo
push
retf
adc
lods
pop
jns
xor
hlt
pop
repnz
dec
xchg
xor
mov
pop
repnz
(bad)
nop
sub
scas
into
jecxz
pop
je
xor
adc
xchg
mov
dec
imul
inc
jns
mov
dec
imul
mov
xchg
mov
mov
cmp
ret
xchg
xor
mov
(bad)
nop
sub
scas
into
jecxz
pop
je
xor
xor
xor
imul
mov
sar
dec
mov
add
mov
dec
cwde
ret
cmp
ret
xchg
xor
mov
(bad)
nop
sub
scas
into
jecxz
pop
je
xor
xor
sahf
xor
push
lds
(bad)
imul
mov
cmp
mov
jns
mov
dec
imul
les
jo
pop
not
mov
fwait
dec
lds
pop
fwait
les
mov
and
les
mov
adc
add
(bad)
popa
cmp
(bad)
pop
in
xlat
xor
xor
adc
mov
mov
xchg
imul
in
xchg
(bad)
push
mov
xchg
dec
lds
ja
stos
inc
jo
xchg
xor
cmp
xor
cmp
mov
mov
les
jo
stos
into
dec
cmp
pop
dec
leave
aam
cmp
rcr
int
into
aaa
call
xor
xor
sbb
push
xor
clc
cld
xor
xlat
fs
push
mov
les
jo
stos
into
dec
cmp
pop
push
leave
aam
cmp
rcr
into
imul
dec
les
mov
les
mov
xchg
xor
cmp
jmp
in
xlat
xor
into
dec
mov
imul
mov
jb
idiv
sbb
rcr
les
adc
into
mov
loop
jae
cmp
dec
les
xor
cmc
fs
push
mov
les
jo
stos
into
dec
cmp
pop
push
leave
aam
cmp
rcr
into
imul
dec
les
mov
les
mov
xchg
xor
cmp
xor
test
push
mov
les
jo
stos
into
dec
cmp
popf
dec
lds
mov
xchg
pop
mov
cmp
idiv
(bad)
popa
add
xchg
(bad)
imul
dec
les
mov
les
mov
xchg
xor
cmp
xchg
inc
jns
pop
in
xlat
xor
into
dec
mov
imul
mov
jb
idiv
sbb
shr
cmc
mov
cmp
sub
cmp
stos
inc
jns
mov
dec
ins
jle
inc
les
jo
stos
into
dec
cmp
popf
dec
lds
mov
xchg
mov
pop
mov
les
cmp
les
mov
xchg
pop
xor
aam
fsubr
jo
shl
lds
adc
into
mov
loop
fidivr
inc
jns
pop
in
xlat
xor
into
dec
mov
imul
xor
xchg
xor
xchg
mov
xchg
imul
jb
loop
idiv
xchg
mov
dec
imul
les
pop
sub
sar
xor
cmp
mov
not
int3
dec
lds
pop
adc
add
mov
ja
adc
dec
lds
aas
mov
(bad)
mov
cmp
xor
into
mov
xchg
mov
dec
imul
in
scas
into
jecxz
pop
je
mov
xchg
cmp
(bad)
mov
xchg
mov
out
imul
popf
jecxz
repnz
sahf
inc
into
dec
les
iret
dec
cmp
xor
jne
xor
push
push
jae
ss
dec
les
into
dec
les
mov
les
in
adc
aas
mov
(bad)
mov
cmp
clc
sbb
push
cs
sbb
into
in
scas
into
mov
cmp
je
xor
xor
xor
imul
(bad)
(bad)
mov
mov
xchg
mov
inc
fcomp
mov
les
cmp
cmp
xor
mov
(bad)
mov
dec
imul
icebp
(bad)
lahf
icebp
mov
cmp
repnz
sbb
push
in
dec
lds
aas
add
mov
xchg
jmp
dec
cmp
xor
cmp
mov
les
in
adc
dec
lds
aas
add
nop
mov
int
sti
cdq
mov
cmp
adc
push
leave
dec
lds
in
xlat
xor
mov
(bad)
fnstcw
xchg
xor
call
iret
dec
cmp
mov
xchg
pop
mov
adc
cmp
jmp
dec
mov
dec
les
mov
les
in
repz
idiv
sbb
ror
mov
adc
xor
push
jae
push
into
dec
les
dec
les
mov
les
cmp
(bad)
mov
dec
mov
das
xor
adc
imul
mov
xor
dec
ins
sbb
mov
mov
pop
repnz
inc
push
mov
cmp
into
mov
dec
xor
mov
dec
imul
inc
jns
mov
dec
imul
mov
xchg
mov
mov
cmp
fisub
mov
(bad)
mov
dec
imul
icebp
(bad)
lahf
icebp
mov
cmp
into
mov
dec
xor
sti
xor
pop
repnz
pop
repnz
adc
lds
mov
adc
xor
adc
cmp
adc
mov
sahf
sbb
xlat
xchg
mov
gs
aas
xchg
into
dec
(bad)
(bad)
jle
mov
ja
jmp
mov
adc
xchg
mov
mov
iret
dec
cmp
mov
les
in
push
ret
sbb
into
in
scas
into
mov
cmp
je
mov
xchg
cmp
daa
mov
xchg
mov
mov
iret
dec
cmp
xor
mov
(bad)
pop
mov
and
dec
lds
xor
sbb
mov
mov
pop
repnz
inc
push
mov
cmp
mov
push
imul
jns
xchg
xor
xchg
into
dec
les
xor
imul
les
inc
les
jo
pop
div
mov
push
dec
(bad)
imul
dec
(bad)
imul
mov
push
mov
les
mov
xchg
xor
clc
cld
xor
dec
les
mov
les
in
retf
ret
idiv
sbb
shl
pop
mov
adc
int3
dec
lds
jl
(bad)
mov
cmp
leave
dec
lds
add
int3
dec
mov
pop
dec
(bad)
imul
les
mov
(bad)
imul
fdivr
xchg
mov
aaa
pop
jmp
fidivr
sbb
push
into
ret
idiv
sbb
rol
pop
mov
adc
add
mov
mov
iret
dec
cmp
xor
mov
(bad)
mov
dec
mov
sbb
into
lea
cdq
mov
lds
aas
mov
(bad)
mov
cmp
mov
pop
repnz
mov
(bad)
mov
dec
mov
sbb
into
lea
cdq
mov
(bad)
imul
dec
les
int3
dec
lds
xor
cmp
into
in
cmps
into
loop
adc
into
mov
call
imul
ja
stc
xor
imul
pusha
les
in
cmps
into
loop
sbb
into
in
cmps
into
loop
sbb
into
in
cmps
into
loop
pop
jmp
aas
mov
(bad)
mov
pop
xchg
dec
fs
ret
mov
cmp
aam
fsub
aaa
xor
mov
mov
xchg
mov
and
jcxz
repz
jb
fisubr
mov
test
pop
inc
push
cld
ror
mov
xchg
xor
inc
jb
dec
cmp
rcr
imul
call
into
aaa
push
adc
idiv
xchg
inc
mov
fdivr
mov
pop
inc
push
rcr
icebp
(bad)
imul
jae
jbe
mov
xchg
mov
rcl
push
je
mov
jmp
cmp
jle
mov
push
out
data16
push
je
les
dec
fs
rol
rcr
pop
clc
jbe
xchg
jcxz
and
sub
pop
neg
mov
xchg
pop
mov
cmp
cmp
xor
cmp
sar
xchg
mov
sar
xchg
mov
jae
enter
jae
pop
pop
lds
data16
mov
ja
or
jle
mov
jo
xchg
mov
adc
xchg
xor
jle
mov
lods
xchg
xlat
xor
add
jo
cwde
sahf
xchg
hlt
cmp
stc
mov
pop
lock
jp
cmc
cmp
xor
xchg
xlat
xor
retf
sar
cmc
cmp
jo
xor
cmp
imul
cmp
xchg
xor
adc
mov
jnp
inc
mov
xchg
into
mov
push
jae
or
mov
cdq
movs
je
adc
je
cmp
fsub
cmp
sahf
cmc
cmp
(bad)
mov
cdq
mov
cmp
cwde
cmc
cmp
pushf
cmc
cmp
xor
imul
int
xor
pop
lock
sub
xor
xchg
fdivr
ds
cmc
idiv
pusha
xor
xchg
xlat
xor
les
mov
cs
cmp
fnstcw
xchg
xlat
xor
xor
adc
xchg
fcomp
mov
mov
push
fcom
jae
mov
push
cmp
xchg
xlat
xor
les
lods
xchg
xlat
xor
push
fmul
dec
xchg
xor
mov
hlt
xchg
xlat
xor
jnp
jo
ror
les
lods
xchg
xlat
xor
rol
cmp
fmul
fs
xor
mov
mov
cmp
cmp
xor
fcomp
mov
mov
push
fcom
xchg
xor
mov
jl
pop
mov
sbb
cmp
into
dec
ds
cmc
idiv
imul
ror
dec
mov
push
cmp
xchg
xlat
xor
rcr
sbb
xor
adc
mov
popa
sar
mov
xchg
jno
fcom
pushf
cmc
cmp
or
jp
fsub
xchg
xor
cmp
fdiv
xchg
xor
cmp
fadd
cmp
cmc
idiv
adc
xor
cmp
ror
xor
ds
sahf
cmc
cmp
xor
cmp
jo
sbb
stc
mov
pop
lock
cdq
mov
imul
mov
push
dec
loopne
outs
cmp
cmp
adc
mov
push
xor
xchg
xor
push
div
cmp
cmp
xchg
xlat
xor
shr
jae
shl
xor
cmp
dec
ds
sahf
cmc
cmp
stc
test
pop
lock
mov
cmps
or
fdivr
xchg
xor
mov
mov
ja
icebp
out
lock
ds
cmc
idiv
pusha
xor
xchg
xlat
xor
xor
sti
mov
xchg
mov
push
dec
daa
jae
mov
xor
add
out
idiv
mov
mov
xchg
mov
mov
daa
jae
mov
fs
or
cmp
xor
jecxz
dec
ds
xchg
hlt
cmp
fcom
rol
mov
popf
nop
lock
xlat
xor
cmp
xor
enter
mov
les
mov
jge
xor
fs
lods
xchg
xlat
xor
cmp
mov
popa
sar
mov
ja
cmp
add
jb
cmc
cmp
ret
xor
fs
ss
dec
inc
cmp
ss
ds
xchg
hlt
cmp
xor
xchg
xor
pop
shl
cmp
mov
and
xchg
xlat
xor
call
jnp
or
dec
dec
mov
icebp
retf
pop
lock
push
call
mov
ja
cs
aas
sbb
aaa
ss
call
mov
loopne
xor
call
xor
aas
ss
or
pop
cmp
pop
lock
inc
int
fidivr
jae
xchg
dec
jo
xchg
pop
mov
cli
div
mov
push
pop
mov
rcr
mov
xor
mov
jae
mov
fld
pop
xchg
xor
sub
jo
push
xlat
sti
idiv
rcr
pop
xchg
xor
iret
cmp
push
fsincos
idiv
rcr
pop
xchg
xor
or
jo
mov
xor
pop
(bad)
icebp
aam
loop
push
push
mov
xor
outs
jmp
inc
out
ror
jecxz
jmp
int3
call
xor
mov
jae
mov
cdq
in
sub
xchg
div
ror
fidivr
xchg
xor
pop
jp
cmp
mov
inc
jnp
xor
dec
xor
mov
(bad)
xchg
into
mov
push
jae
mov
jae
mov
popa
sar
mov
shr
mov
xchg
xor
les
mov
jne
icebp
scas
pop
bnd
dec
xor
pop
jae
mov
ror
out
cmc
idiv
push
je
cmp
ror
xchg
xor
pop
jmp
cmp
mov
mov
xchg
ret
rcr
in
xchg
xor
imul
xchg
xlat
xor
ret
xor
pop
repnz
popa
fidivr
sbb
cld
xor
cmp
xor
push
ror
mov
sbb
imul
xchg
fst
xchg
xor
out
cmc
idiv
cld
xor
ss
mov
xchg
pop
mov
nop
into
rcr
mov
cmp
mov
pop
push
div
mov
xchg
dec
jo
xchg
mov
ror
and
xchg
xlat
xor
jle
fidivr
mov
mov
out
repnz
fs
cld
ror
mov
jle
mov
push
int3
repz
jle
mov
mov
jbe
mov
inc
cmp
mov
fidivr
cld
xor
jle
popa
cmp
popa
dec
dec
outs
pop
mov
rol
in
imul
test
fidivr
cmp
dec
mov
jmp
ja
pop
aam
test
leave
mov
pop
test
cmc
idiv
imul
cmp
mov
xchg
outs
jmp
mov
sar
les
add
and
mov
jecxz
mov
push
imul
mov
push
imul
mov
push
imul
mov
push
imul
mov
jle
mov
mov
std
ror
mov
and
and
mov
and
xor
jnp
lea
mov
cmp
(bad)
add
mov
mov
cmp
repz
aaa
rcl
or
cmp
xchg
(bad)
std
icebp
mov
not
xor
ror
outs
mov
cdq
xchg
(bad)
std
jecxz
mov
and
not
xor
imul
cmp
stc
dec
mov
and
outs
test
adc
icebp
ret
adc
lds
jle
mov
dec
mov
bound
mov
jge
mov
sti
xor
cmp
into
mov
mov
xor
call
xor
test
shr
cld
mov
fnstsw
xor
nop
xor
aaa
rcl
inc
xor
stos
pop
shr
(bad)
mov
xchg
inc
mov
ds
or
cmp
mov
or
sti
xchg
mov
mov
push
or
cmp
cmp
outs
mov
cmp
or
cmp
mov
sar
mov
rcl
or
cmp
stc
dec
mov
and
outs
test
adc
ins
mov
outs
mov
mov
xchg
leave
aaa
rcl
and
mov
stos
lgs
mov
mov
jecxz
cmp
mov
test
dec
mov
nop
xor
or
leave
aaa
rcl
or
dec
cmp
into
mov
xchg
inc
lods
sar
mov
sbb
and
aas
pop
xor
mov
pop
into
mov
xchg
xor
(bad)
leave
outs
out
repnz
fs
push
out
cmc
idiv
sbb
add
xchg
mov
add
pop
into
pop
cmp
into
pop
cmp
mov
mov
xchg
or
dec
fcomp
xchg
xor
std
pushf
into
mov
push
jae
xor
movs
cli
je
aas
pop
adc
jnp
add
outs
xor
push
dec
ds
cmc
idiv
cdq
xchg
cmp
xor
push
pop
xor
push
mov
(bad)
ror
adc
add
int
sar
ds
mov
stos
cmp
mov
fs
xor
inc
mov
stos
cmp
xor
mov
adc
xor
inc
mov
fs
outs
div
and
pop
and
out
cmc
idiv
adc
mov
fs
outs
div
cmp
add
lock
cmp
mov
shl
int
les
push
clc
ret
mov
mov
jle
out
cmp
ror
imul
dec
cmp
out
cmp
mov
cmp
mov
in
into
mov
adc
pop
les
aaa
ds
cmc
idiv
xchg
mov
fmul
dec
cmp
and
les
mov
repnz
idiv
xchg
inc
scas
mov
imul
xor
jns
dec
mov
aam
mov
xchg
(bad)
xor
movs
inc
aam
into
cmp
(bad)
std
sti
mov
not
xor
sar
mov
sbb
into
cmp
jp
add
std
sti
stos
mov
cmp
lock
in
je
cmp
les
mov
sar
movs
adc
imul
adc
enter
cmp
into
dec
push
push
das
xor
xchg
sar
xchg
xor
les
inc
aam
into
mov
and
fst
hlt
cmp
xor
imul
mov
cmp
movs
pusha
in
into
dec
ds
cmc
idiv
push
mov
imul
mov
xchg
fld
mov
imul
scas
inc
out
dec
les
loop
rol
jmp
mov
adc
pop
les
dec
shl
xor
shl
mov
pop
div
int
lock
cmp
test
ret
jns
dec
jl
repnz
xchg
xor
(bad)
loopne
cmp
(bad)
fst
popa
xchg
xor
out
cmc
idiv
adc
into
mov
sbb
mov
dec
dec
cmp
into
dec
les
jmp
mov
call
icebp
rcr
xor
imul
push
imul
outs
cli
jl
jne
xchg
xor
(bad)
sbb
xor
pop
les
mov
aas
xchg
xor
out
into
dec
cmp
jmp
mov
adc
cli
mov
xchg
mov
cmp
mov
and
rol
and
imul
les
mov
in
into
cdq
les
mov
adc
pop
les
xor
into
dec
les
into
add
dec
into
dec
shr
push
mov
xchg
add
push
shl
call
dec
les
into
mov
add
pop
les
push
cmp
call
push
cmp
and
les
and
jns
dec
cli
je
cmp
cli
ja
mov
push
jle
pushf
xor
(bad)
fimul
pop
mov
imul
(bad)
mov
int3
call
xor
jne
dec
les
cld
idiv
jle
in
cmp
into
dec
mov
xor
cmp
movs
sub
imul
mov
adc
xor
add
jbe
xchg
xor
les
into
aas
scas
add
dec
les
out
dec
les
mov
in
into
aas
mov
pop
mov
in
into
fisub
sbb
les
in
imul
fst
bound
out
dec
les
into
sar
jo
imul
dec
les
into
xor
jne
dec
les
xor
scas
and
dec
les
mov
in
into
jne
call
les
popf
imul
fisubr
les
add
push
shl
les
cmp
dec
into
dec
mov
and
sahf
(bad)
xor
les
push
cmp
jno
mov
lds
imul
rcl
imul
cdq
mov
cmp
xor
cmp
into
mov
cmp
dec
mov
cmp
xor
imul
dec
mov
xor
les
xor
adc
into
mov
and
imul
mov
mov
mov
xor
xchg
inc
stos
mov
mov
cmp
or
jle
xor
xchg
inc
mov
ds
or
imul
lea
xchg
push
imul
mov
mov
imul
pop
cmp
xor
mov
jle
cmp
xor
dec
les
cmp
mov
xchg
leave
popf
retf
sbb
cmp
ror
or
dec
into
dec
dec
jg
sbb
cdq
xchg
cwde
dec
into
dec
cli
je
aas
xchg
div
cmp
sbb
stos
xor
push
or
mov
jecxz
xor
stos
xor
shl
or
mov
loop
repz
add
lahf
icebp
retf
sahf
push
dec
mov
lea
ret
imul
les
pusha
in
into
pop
dec
outs
into
dec
mov
jne
dec
les
lds
imul
dec
les
mov
dec
lock
cmp
mov
fcmovne
aas
mov
imul
xor
les
loope
ds
cmc
idiv
jg
dec
les
xor
jns
dec
cmp
into
dec
push
push
das
xor
xchg
sar
xchg
xor
(bad)
leave
outs
out
repnz
fs
push
sahf
div
(bad)
test
inc
inc
pop
je
fwait
test
mov
ror
mov
jmp
cmp
out
cld
idiv
das
and
ror
cmp
outs
push
leave
jecxz
add
not
xor
enter
jmp
or
enter
(bad)
pop
repz
stc
pop
fs
mov
aad
icebp
rcl
mov
push
je
cmp
cmp
jne
fsub
aaa
xor
ins
xor
dec
cmp
dec
dec
sub
aad
jle
mov
icebp
ret
add
cmp
jne
jecxz
mov
cmp
xor
rcl
je
xchg
xor
push
cdq
xchg
cmp
mov
jnp
xor
aas
jle
mov
loope
cdq
xchg
cmp
repz
fst
cmp
rcl
leave
aas
push
je
cmp
jb
sti
jecxz
aaa
fist
xor
aas
jle
mov
loope
cdq
xchg
cmp
or
cmp
je
aas
pop
pop
dec
and
xor
xchg
xor
scas
inc
mov
ror
mov
ror
mov
jmp
mov
les
icebp
ret
xchg
fisub
outs
outs
or
cs
inc
mov
ror
mov
pushf
mov
ret
xchg
mov
ret
xchg
inc
push
mov
int
jle
mov
js
shl
cmp
cmp
inc
mov
ror
mov
and
enter
ret
mov
loop
sbb
pop
fmul
jmp
dec
mov
pop
dec
cmp
fstp
retf
dec
jnp
or
cmp
pop
test
sar
cmp
fidiv
inc
jnp
(bad)
arpl
je
mov
outs
jmp
mov
push
lds
mov
ror
ret
popa
(bad)
cmp
les
div
cmp
inc
mov
mov
xor
popa
pop
or
xor
imul
mov
mov
(bad)
cmp
cld
leave
outs
jge
ret
mov
stc
jg
mov
repz
pop
mov
jecxz
fidivr
jle
loope
xchg
outs
jmp
mov
ror
ret
mov
xor
mov
xchg
pop
mov
xchg
pop
mov
xchg
mov
dec
sahf
fld
std
adc
mov
aaa
xchg
inc
mov
sar
pop
pop
mov
mov
push
fcmovbe
push
xchg
addr16
lds
mov
push
mov
fcomp
je
mov
mov
in
(bad)
fnstcw
xchg
xor
cmp
jae
xchg
mov
aaa
xchg
inc
mov
jle
fidiv
jle
into
ror
into
rol
fldenv
xchg
xor
shl
mov
sbb
mov
icebp
xlat
pop
imul
gs
ja
pop
aam
push
mov
les
xchg
pop
mov
push
xor
cld
xor
cmp
cmp
xor
outs
mov
sar
icebp
pop
ins
cld
xor
cmp
xor
rcr
bound
xchg
xor
jle
mov
hlt
mov
outs
mov
loope
les
dec
call
push
xchg
mov
mov
mov
idiv
rcr
push
into
arpl
xchg
xor
xchg
xor
ret
mov
jecxz
add
leave
test
pop
test
xor
pop
neg
cmp
mov
cmp
pop
mov
xchg
xor
dec
arpl
imul
xchg
pop
mov
xchg
addr16
rol
xor
push
pop
mov
ror
in
jecxz
dec
dec
call
ins
jle
in
xchg
mov
jae
push
jno
gs
repnz
jae
out
sar
xor
sub
mov
xchg
xor
mov
xor
ret
int
les
mov
clc
ror
leave
aaa
jmp
jp
jae
shl
fs
dec
inc
jns
(bad)
outs
xchg
xor
inc
add
mov
push
fs
rol
fs
adc
ins
mov
(bad)
pop
repz
pop
fs
or
mov
dec
xchg
div
inc
call
jns
fldcw
call
repnz
jae
in
shl
sahf
mov
dec
dec
lock
repnz
mov
popa
push
dec
mov
leave
cmp
leave
aam
pop
rol
xor
cdq
xchg
leave
aam
pop
out
ret
mov
popa
inc
pop
mov
xchg
xor
sbb
sub
cmp
outs
jmp
mov
or
jcxz
fldcw
pop
cs
ret
(bad)
push
mov
in
cmp
fst
xor
pop
jle
aaa
pop
jb
cmp
mov
mov
xchg
xor
pop
inc
mov
push
dec
movs
cmp
aaa
sar
rcl
lods
cmp
jno
mov
into
pop
adc
ret
xchg
xor
(bad)
shl
jle
mov
les
mov
dec
add
mov
les
inc
gs
cmp
cmp
push
xor
add
add
shl
mov
icebp
rcl
dec
dec
cmp
xor
or
cwde
xor
pop
repnz
push
xor
lock
cmp
jmp
mov
outs
sahf
add
mov
xor
cdq
sahf
jbe
rcl
aas
jbe
mov
mov
ficomp
je
cmp
aad
jle
add
mov
out
mov
sar
fild
mov
push
mov
loope
clc
sbb
jno
mov
cmp
jmp
je
mov
aad
cmp
pop
bnd
int
ja
push
mov
mov
(bad)
xor
retf
cmp
mov
pop
sbb
mov
push
inc
call
mov
and
push
mov
and
push
jno
stos
push
mov
and
push
or
mov
and
push
mov
outs
ret
push
mov
push
mov
test
push
mov
and
push
mov
aas
push
mov
and
push
inc
pop
stos
push
mov
and
push
push
pop
mov
int3
dec
clc
mul
rcl
xchg
xor
push
mov
mov
mov
mov
and
sbb
mov
and
cmps
and
push
mov
and
scas
cli
and
push
mov
and
adc
mov
and
jecxz
and
push
mov
and
icebp
fadd
cmp
mov
(bad)
xor
stos
(bad)
xor
pop
sbb
sti
aam
dec
enter
jle
pop
ja
push
mov
mov
(bad)
xor
xchg
mov
and
push
mov
and
push
inc
out
push
mov
hlt
cmp
mov
and
push
mov
stos
push
mov
and
push
mov
and
popa
mov
and
push
mov
and
push
pop
pop
sbb
or
xor
mov
and
push
mov
outs
xor
push
inc
out
push
mov
idiv
push
mov
and
push
mov
stos
push
mov
and
push
mov
and
popa
mov
and
push
mov
and
push
(bad)
lods
jle
pop
and
cmps
mov
dec
stos
push
mov
and
push
push
and
push
mov
mov
imul
aaa
xlat
and
sbb
je
and
jecxz
repnz
pop
jmp
sar
rol
mov
jg
mov
xchg
mov
aas
cli
xor
(bad)
(bad)
mov
mov
dec
cmp
aaa
jb
push
push
in
xchg
mov
retf
cmp
xor
ret
sub
mov
shr
ret
iret
aas
jle
mov
(bad)
cs
dec
ret
sub
jno
lea
sbb
xchg
mov
stos
shl
sar
mov
(bad)
add
cdq
xchg
lds
repnz
dec
xchg
xor
xor
mov
icebp
int
fldcw
imul
in
sar
mov
(bad)
mov
loope
xchg
loope
shl
popa
mov
pop
jmp
fidivr
sbb
popa
pop
data16
xor
popa
sar
mov
rol
mov
add
ss
enter
ret
mov
out
ror
aad
cmp
xchg
mov
mov
(bad)
pop
cmp
ss
enter
mov
cmp
jns
inc
adc
jb
stos
stc
jns
xchg
xor
cmps
icebp
pop
jns
xor
push
mov
shl
dec
dec
les
jo
pop
repnz
cmp
fidiv
xchg
mov
idiv
mov
jae
mov
jle
inc
jle
mov
fcom
idiv
pop
out
mov
pop
cld
idiv
rcr
je
xor
aaa
cld
xor
not
xor
mov
xor
pop
jae
mov
int
sub
fbld
xchg
xor
mov
in
jns
add
pop
cld
idiv
xchg
xor
not
xor
call
dec
rol
leave
aas
cs
idiv
cmps
and
std
adc
jmp
mov
pop
jae
add
leave
(bad)
loop
jbe
cmp
push
sti
cmp
xchg
push
ds
push
shl
pop
jae
mov
xchg
fldcw
jle
fldenv
inc
dec
ds
pop
repz
sub
cld
idiv
cld
jno
xchg
mov
dec
xor
imul
cmp
std
jns
xchg
mov
cmp
jle
mov
icebp
iret
sbb
xor
aas
aaa
std
jns
xchg
xor
add
(bad)
aaa
jmp
icebp
retf
jge
cmp
mov
sar
xchg
add
dec
cld
idiv
xchg
xor
not
xor
mov
xor
xor
fs
jmp
idiv
sbb
xor
adc
xor
pop
jae
xor
fs
jmp
idiv
sbb
xor
aam
inc
mov
sti
fldcw
pop
jmp
idiv
(bad)
fldcw
(bad)
imul
mov
xchg
pop
mov
xchg
pop
mov
xchg
xor
jbe
mov
pop
je
mov
xchg
pop
mov
rcr
in
jecxz
out
jecxz
pop
outs
fnsave
mov
jecxz
pop
retf
mov
jle
(bad)
cmp
mov
test
(bad)
outs
jmp
mov
and
or
jg
cmp
cmp
les
div
cmp
mov
sbb
retf
xor
cmp
stc
cmp
and
mov
(bad)
pop
cli
ins
ss
mov
jle
inc
push
cmc
mov
mov
dec
mov
xor
div
les
jl
cmp
loop
pop
xchg
cli
popa
(bad)
xchg
lock
and
sti
cmp
mov
stos
into
dec
les
icebp
les
cmp
lock
mov
les
mov
mov
repz
stc
xchg
inc
mov
les
jb
nop
into
dec
les
jb
adc
dec
les
fsubr
arpl
idiv
sbb
rcr
xor
cmp
xor
cmp
xor
cmp
retf
imul
mov
lds
imul
push
out
xor
xchg
pop
mov
adc
dec
les
fdivr
mov
mov
push
idiv
imul
les
lds
imul
dec
ds
cmc
idiv
lds
retf
cmp
(bad)
fldenv
ja
xor
cmp
mov
(bad)
imul
idiv
sbb
push
xchg
xor
xchg
into
mov
push
jae
push
push
shl
(bad)
cld
inc
jns
mov
dec
imul
mov
push
fstp
enter
int3
jo
xor
imul
mov
(bad)
fcom
jae
push
jmp
idiv
(bad)
xor
xchg
xor
inc
outs
jmp
mov
sub
jcxz
jecxz
or
mov
mov
mov
push
jae
mov
(bad)
push
mov
lds
cmp
je
imul
dec
imul
fadd
ds
xchg
pop
mov
xchg
into
shl
inc
mov
cmp
int3
mov
mov
sar
imul
ret
dec
(bad)
push
xchg
pop
mov
jecxz
dec
dec
push
dec
jno
xor
push
jp
xchg
xor
cmp
outs
out
repnz
fs
outs
test
aam
jp
cmp
mov
cmp
xor
vblendvpd
shl
inc
mov
cmp
repnz
jae
or
cdq
mov
push
jle
cmp
mov
shr
inc
mov
xor
push
sub
pop
imul
push
fs
ins
sub
(bad)
sbb
mov
xchg
xor
pop
je
mov
mov
test
mov
ror
in
ror
in
xchg
pop
mov
xchg
xor
cmp
xor
cmp
mov
fdiv
mov
push
inc
mov
push
fimul
dec
or
daa
cld
xor
xchg
rol
push
(bad)
cmp
into
rol
(bad)
std
cmp
into
rol
(bad)
cmp
xor
pop
je
mov
add
clc
ja
pop
aam
xlat
xchg
mov
and
cmp
add
and
cmp
cmp
sar
ror
in
(bad)
xor
dec
call
cmp
add
mov
fidivr
cld
xor
xchg
rol
mov
je
call
cmp
mov
jae
jecxz
pop
data16
mov
and
enter
pop
aam
xlat
call
jge
leave
test
pop
div
push
xchg
fdecstp
cmp
je
cmp
(bad)
jae
xor
pop
xchg
xor
pop
je
mov
nop
mov
aam
lea
inc
fwait
or
pop
add
xchg
xor
xchg
pop
aad
aam
pop
xor
xor
pop
enter
(bad)
mov
sti
jge
cmp
cld
imul
retf
mov
ror
jmp
pop
repnz
jae
or
mov
(bad)
push
mov
int
cli
sbb
push
inc
jns
mov
ret
xor
ret
mov
out
sar
cld
ror
sub
in
xor
cmp
mov
add
outs
sbb
shl
jle
cld
cmp
leave
popf
jecxz
movs
std
xchg
xor
xchg
xor
rcl
xor
xchg
inc
jbe
dec
inc
pushf
mov
mov
dec
jae
or
aas
jle
div
xchg
(bad)
rol
pop
je
mov
int
jecxz
(bad)
mov
xor
push
repnz
int
stc
cmps
repz
dec
mov
dec
dec
xchg
mov
jle
mov
loope
pop
jmp
test
jge
aas
jle
mov
inc
int3
repz
cmp
(bad)
leave
outs
out
repnz
fs
push
sahf
div
retf
push
sbb
mov
fnstsw
xlat
pop
je
mov
shl
pop
je
cmp
je
mov
loopne
mov
(bad)
(bad)
xchg
xor
retf
stc
dec
mov
cmps
(bad)
pop
sub
adc
inc
mov
mov
movs
ja
dec
outs
inc
push
pop
push
je
cmp
dec
dec
xor
or
scas
cmp
mov
loop
outs
mov
je
cmc
cli
int3
je
pop
cmp
fs
mov
mov
pop
sar
retf
jecxz
bound
cmp
je
xor
je
add
leave
(bad)
xchg
sbb
in
cmp
out
je
mov
sar
bound
pusha
pop
repnz
jae
cld
cmp
mov
shl
fnstenv
into
cmp
iret
dec
cmp
into
mov
data16
mov
dec
imul
shl
dec
les
cmp
xchg
add
cmp
push
bound
xor
xchg
xor
std
imul
pop
mov
les
or
xchg
xor
imul
dec
(bad)
imul
or
into
cmp
xchg
data16
xor
xchg
mov
dec
mov
xchg
into
shl
xor
mov
jle
mov
dec
mov
mov
(bad)
(bad)
mov
cmp
pop
mov
(bad)
imul
jg
imul
fsubr
jae
vfmaddsubps
xor
addr16
les
int
lds
add
xor
call
xor
mov
xchg
dec
cmps
push
mov
idiv
imul
mov
shl
mov
pushf
xor
ins
xor
sbb
repnz
xor
xchg
dec
(bad)
retf
jecxz
retf
cmp
fidiv
jge
xor
mov
xchg
dec
cmps
push
mov
idiv
imul
mov
addr16
les
int
lds
idiv
xor
call
xor
mov
xchg
dec
cmps
push
mov
idiv
imul
mov
jns
mov
jle
icebp
cmp
xor
ds
pop
cli
shl
mov
cmc
xor
sbb
into
jecxz
test
idiv
rcr
jle
xor
inc
and
xchg
mov
dec
imul
inc
jns
popa
pop
call
xor
cmp
icebp
cmp
xor
ds
fsub
gs
les
int
lds
cs
xor
call
xor
push
dec
les
icebp
cmp
jb
cmp
xor
ds
fsub
gs
les
int
lds
(bad)
jle
xor
call
xor
imul
mov
shl
mov
pushf
xor
ins
xor
sbb
lock
xor
xchg
dec
(bad)
retf
jecxz
data16
cmp
add
fnstcw
xchg
xor
mov
imul
cmp
mov
imul
rcr
mov
sbb
(bad)
mov
(bad)
pop
fs
aam
in
cmp
cmp
jne
cmp
cmp
adc
fxch
jg
xor
mov
sub
dec
lds
fadd
jle
lock
not
push
xor
shufps
xor
sub
sub
xchg
into
add
imul
mov
adc
jne
cmp
cmp
adc
pop
jg
aam
dec
mov
dec
les
lock
lock
xor
ds
fsub
gs
les
int
lds
xchg
jg
xor
call
xor
imul
imul
imul
cmp
mov
cmp
xor
ds
fdiv
data16
les
int
lds
push
xchg
xor
call
mov
dec
mov
fnstcw
js
xor
mov
xchg
dec
cmps
push
mov
idiv
imul
mov
aad
mov
pushf
xor
ins
xor
sbb
idiv
xchg
mov
cmp
arpl
xchg
dec
(bad)
retf
jecxz
ret
cmp
adc
xchg
mov
repz
mov
xchg
div
cmp
rcr
push
into
dec
les
stc
dec
(bad)
imul
dec
add
leave
dec
lds
iret
xor
mov
popa
xlat
cmp
les
idiv
xchg
dec
les
into
mov
ret
das
sub
adc
leave
or
sbb
shl
xchg
mov
dec
mov
mov
pop
sar
(bad)
imul
mov
dec
ins
jle
idiv
xchg
mov
das
imul
les
xor
imul
dec
les
lods
mov
xor
push
dec
(bad)
(bad)
pop
ror
aam
in
loop
mov
adc
add
push
into
dec
les
neg
xor
shufps
xor
sub
ins
inc
jns
into
add
imul
mov
adc
jae
cmp
cmp
adc
pop
jg
aam
dec
mov
dec
les
idiv
xchg
mov
xor
cmc
cmp
xor
ds
fsub
gs
les
int
lds
scas
jns
xor
call
int3
dec
mov
adc
dec
lds
xor
imul
dec
(bad)
imul
dec
mov
fisttp
imul
mov
sbb
leave
dec
lds
loope
xchg
xor
xchg
xor
xchg
xor
xor
xchg
mov
jl
xchg
or
ret
imul
mov
xchg
mov
dec
mov
fisttp
imul
inc
jns
mov
dec
imul
cmp
mov
aaa
repz
ret
shl
imul
dec
mov
cmc
dec
(bad)
imul
mov
(bad)
imul
pop
xchg
xor
mov
(bad)
fld
ret
imul
xor
imul
dec
lds
shl
test
into
aas
mov
(bad)
pop
ror
aam
in
jp
mov
adc
add
fnstenv
xchg
xor
mov
xchg
dec
cmps
push
retf
shl
imul
mov
(bad)
xor
shufps
xor
sub
cli
inc
jns
into
add
imul
mov
adc
jno
cmp
cmp
adc
pop
lods
enter
mov
dec
les
hlt
cmp
rcr
data16
dec
les
mov
xchg
into
xor
imul
mov
imul
(bad)
vmovd
imul
xor
imul
xor
shl
imul
mov
(bad)
xor
shufps
xor
sub
ins
inc
jns
into
add
imul
mov
adc
xor
fldcw
xchg
xor
mov
xchg
dec
cmps
push
pop
shl
imul
mov
test
xor
ins
xor
sub
sub
xchg
into
add
imul
mov
adc
shl
imul
mov
cdq
xor
imul
mov
or
mov
xchg
dec
xchg
shl
push
mov
das
push
mov
xchg
test
ret
or
imul
inc
jns
pop
test
mov
test
xor
ins
xor
sub
ins
inc
jns
into
add
imul
mov
adc
push
mov
das
cmp
adc
pop
jg
aam
dec
mov
dec
les
mov
xchg
mov
xor
rol
mov
les
cmp
cmp
xor
ds
fsub
gs
les
int
lds
mov
xchg
xor
call
xor
mov
xchg
dec
xchg
shl
lfs
das
push
mov
xchg
test
ret
or
imul
inc
jns
pop
xchg
test
mov
push
and
adc
mov
and
dec
lds
or
sahf
mov
jb
loop
mov
das
cmp
adc
pop
lods
enter
mov
dec
les
mov
xchg
mov
xor
sub
add
imul
mov
adc
lfs
das
cmp
adc
pop
lods
enter
mov
dec
les
mov
xchg
mov
xor
sub
into
add
imul
mov
adc
or
push
into
dec
les
neg
xor
shufps
xor
sub
sub
xchg
into
add
imul
mov
adc
out
dec
(bad)
imul
(bad)
(bad)
pop
mov
aam
in
inc
or
cmp
or
cmp
cmp
adc
pop
lods
enter
mov
dec
les
mov
xchg
mov
xor
shl
data16
les
int
lds
push
push
xchg
xor
call
xor
mov
xchg
dec
cmps
push
mov
idiv
imul
mov
stos
xor
shufps
mov
sub
mov
push
fdivp
cmp
fptan
push
xchg
xor
inc
mov
mov
das
cmp
adc
pop
lods
enter
mov
dec
les
mov
xchg
mov
xor
out
pop
jns
into
add
imul
mov
adc
or
mov
xchg
test
ret
mov
test
enter
mov
dec
les
mov
xchg
mov
xor
(bad)
sub
xor
shufps
xor
sbb
mov
xchg
mov
cmp
arpl
xchg
dec
(bad)
retf
jecxz
ds
movs
push
inc
fdivp
cmp
dec
les
pop
sub
fidivr
cld
xor
cmp
xor
cmp
xor
jle
lea
xchg
mov
dec
mov
xor
into
add
imul
mov
cld
xor
xchg
dec
(bad)
mov
dec
les
pop
les
pop
stos
scas
xor
imul
dec
mov
dec
les
mov
xchg
mov
xor
mov
les
cmp
add
into
dec
les
cmp
mov
pop
imul
gs
ja
pop
aam
xlat
sahf
xor
sub
ret
popa
(bad)
cmp
les
div
imul
popf
ret
pop
idiv
push
sbb
mov
lds
in
pop
or
jns
mov
adc
dec
les
fdivr
xchg
xor
rol
dec
les
into
mov
ror
mov
in
fidivr
dec
pop
jns
pop
(bad)
aam
xor
cmp
ror
out
jns
pop
outs
aad
xor
sar
mov
xchg
xor
imul
jmp
push
fs
cmp
mov
jge
pop
or
loopne
mov
jno
xor
push
mov
cmps
imul
cmp
xor
cmp
mov
(bad)
imul
mov
cmp
mov
xor
cmp
div
cmp
gs
aam
and
outs
add
addr16
jle
xor
imul
dec
shl
fs
les
loopne
xchg
mov
cmp
(bad)
rcr
add
int3
dec
les
adc
imul
mov
adc
les
add
bound
mov
sbb
inc
dec
les
loopne
xchg
mov
dec
mov
cmp
jns
movs
cmp
imul
mov
jno
xor
into
dec
mov
pop
mov
aam
pop
repnz
movs
dec
les
dec
adc
jae
xchg
mov
xchg
dec
les
pop
lods
xor
(bad)
fsin
add
xor
imul
push
and
idiv
(bad)
xor
imul
je
test
mov
fmul
cmp
push
mov
jle
dec
les
dec
or
jae
xchg
xor
imul
dec
les
pop
pop
mov
movs
dec
les
add
and
add
and
add
sbb
shl
dec
les
lods
dec
les
je
test
push
mov
sbb
add
xor
xchg
mov
dec
imul
cmp
mov
dec
les
cmp
(bad)
fnstcw
add
into
dec
mov
mov
les
dec
adc
jae
rcr
mov
mov
imul
mov
cmps
leave
cmp
lds
lock
iret
dec
les
div
shr
dec
cmp
mov
dec
mov
mov
mov
loop
sar
adc
dec
les
mov
outs
sbb
mov
dec
imul
les
cmp
(bad)
mov
dec
imul
fidivr
cld
adc
cmp
xor
cmp
mov
lds
in
xchg
fldcw
xchg
xor
cmp
int3
dec
les
cmp
mov
sub
xor
imul
inc
js
mov
adc
dec
les
pop
stos
scas
xor
icebp
int3
dec
les
pop
lods
cmp
into
dec
imul
pop
jns
fnstcw
clc
lahf
icebp
shl
fnstenv
push
xchg
xor
icebp
int3
dec
les
into
dec
pop
xchg
inc
jl
dec
inc
out
push
xchg
dec
mov
jle
cmp
cmps
xor
imul
inc
cmp
xor
aas
xchg
xor
imul
cmp
xor
push
js
mov
adc
dec
les
pop
jnp
into
dec
mov
imul
adc
jge
aaa
sahf
or
dec
les
xor
imul
cmp
test
xor
mov
(bad)
(bad)
ret
popa
(bad)
cmp
les
mul
rol
add
dec
mov
int3
dec
les
cmp
mov
jae
and
or
int3
dec
(bad)
leave
outs
out
repnz
xor
aaa
xlat
mov
ins
sbb
adc
xor
leave
inc
fcomp
je
mov
mov
imul
pop
mov
into
shl
sahf
cmp
mov
dec
vfmaddsubps
push
cmp
int3
jno
icebp
rcr
test
fnstcw
setbe
cmp
int
fxch
setbe
cmp
iret
pop
fiadd
ror
mov
jmp
xchg
int
loope
mov
lds
jg
sbb
push
xchg
fldenv
or
test
xchg
xor
cmp
aad
cmp
mov
retf
(bad)
popa
pop
stos
mov
cmp
inc
mov
xchg
mov
pop
leave
mov
pop
test
add
mov
in
outs
add
and
shl
mov
and
shl
mov
jle
test
xchg
bound
jg
xor
mov
int
jmp
xchg
int
jne
cmp
fnstenv
xchg
xor
jle
popa
fidivr
rcr
(bad)
xor
cmp
xor
xor
outs
mov
pop
inc
movs
xor
jle
xchg
xchg
addr16
or
dec
mov
mov
out
repnz
fs
cmp
xor
ins
sar
cs
mov
push
xchg
xor
pop
mov
fld
cmp
cld
push
mov
fld
hlt
and
xor
mov
(bad)
mov
dec
imul
pop
jns
fldenv
or
icebp
mov
cmp
leave
popf
ret
pop
mul
les
cmc
push
les
(bad)
push
xchg
xor
call
into
add
jbe
dec
vfmaddsubps
xor
push
add
push
jae
sub
dec
(bad)
(bad)
cs
pop
test
xor
mov
(bad)
mov
dec
imul
test
xor
les
cmc
push
les
mov
call
into
add
jbe
dec
vfmaddsubps
sbb
add
cmp
pop
cmp
xchg
xor
gs
ja
pop
aam
sbb
add
retf
cmp
cmps
scas
test
mov
sbb
mov
xchg
xor
pop
mov
in
into
cmp
cmp
xor
push
mov
hlt
mov
outs
mov
outs
cmp
loopne
into
dec
mov
addr16
push
xchg
mov
xor
rol
mov
in
into
aas
mov
pop
neg
jne
jae
mov
xor
popa
pop
xchg
cmp
xor
shufps
xor
das
(bad)
sub
xchg
mov
dec
imul
cmp
mov
push
mov
(bad)
imul
mov
xchg
test
ret
mov
mov
xor
mov
sub
push
les
fsub
jae
mov
xor
pop
jbe
xor
mov
xor
ins
xor
das
(bad)
sub
xchg
mov
dec
imul
cmp
push
inc
jns
mov
dec
imul
cmp
rol
movs
xor
shufps
xor
das
(bad)
sub
xchg
mov
dec
imul
cmp
test
xchg
xor
ds
pop
mov
xor
sbb
push
into
fcomip
cmp
mov
cmp
mov
adc
and
sub
mov
adc
push
les
fcomp
addr16
mov
xor
popa
pop
mov
xor
xchg
push
mov
jle
xchg
xchg
mov
int3
outs
mov
ds
fsub
gs
mov
xor
popa
pop
mov
push
cmp
xor
mov
adc
push
les
pop
push
movs
xor
loop
mov
jle
xchg
xchg
mov
int3
outs
mov
ds
fsub
gs
mov
xor
popa
pop
jp
xor
addr16
mov
xor
popa
pop
push
movs
xor
movs
xor
shufps
xor
adc
xchg
xchg
mov
cmp
arpl
xchg
pop
in
aad
xor
xchg
fnstcw
xchg
xor
inc
xor
mov
(bad)
fldcw
xchg
xor
call
xor
pop
mov
in
into
cmp
cmp
xor
ds
fsub
gs
mov
xor
popa
pop
xchg
movs
xor
js
mov
adc
push
les
pop
scas
movs
xor
movs
xor
shufps
xor
das
(bad)
sub
xchg
mov
dec
imul
cmp
sub
mov
dec
imul
cmp
rcr
movs
xor
shufps
xor
das
(bad)
sub
xchg
mov
dec
imul
cmp
inc
mov
les
fcom
adc
push
les
pop
(bad)
cmps
xor
cmps
xor
shufps
xor
das
(bad)
sub
xchg
mov
dec
imul
cmp
xor
mov
dec
imul
cmp
rol
cmps
xor
shufps
xor
das
(bad)
sub
xchg
mov
dec
imul
cmp
push
test
xchg
mov
xor
mov
xchg
cmp
rcr
aam
cmp
rcr
or
fld
xor
enter
dec
mov
cmp
mov
fld
in
ret
cmp
(bad)
push
mov
aad
les
jb
dec
fdivp
cmp
mov
fld
in
mov
cmc
mov
cmp
cmp
adc
pop
lods
enter
mov
(bad)
fnstcw
call
xor
mov
xchg
dec
popf
shr
add
xchg
test
ret
or
jbe
dec
ins
(bad)
imul
jbe
dec
ins
jle
test
xchg
mov
sub
loope
jns
mov
dec
imul
cmp
xor
cmp
xor
cmp
xor
cmp
or
(bad)
dec
into
dec
mov
xchg
mov
dec
imul
cmp
leave
imul
data16
sub
push
les
dec
mov
dec
les
cdq
cmp
into
dec
shl
lock
xchg
(bad)
push
mov
shr
imul
mov
pop
imul
gs
ja
pop
aam
xlat
adc
jecxz
cmps
adc
sbb
adc
jae
xor
cmp
cld
cmps
(bad)
aas
data16
bound
xor
xchg
xor
les
fidiv
ret
popa
(bad)
cmp
les
neg
xor
xchg
(bad)
ret
cmps
leave
cmp
jns
fldenv
mov
cld
and
cmp
mov
(bad)
imul
mov
(bad)
xor
xor
(bad)
sahf
pop
jns
pop
add
aam
fdivr
xchg
xor
push
aad
les
xor
xchg
xor
imul
dec
les
pop
out
mov
xor
into
add
sbb
shl
dec
les
xor
xor
sbb
rcl
push
mov
sbb
mov
int
les
pop
or
aad
les
mov
(bad)
imul
cmp
cmp
mov
lds
in
es
mov
adc
xor
div
sub
jg
xor
imul
or
loop
sar
adc
dec
les
mov
jns
repz
into
dec
imul
les
cmp
(bad)
mov
dec
imul
fidivr
cld
adc
cmp
xor
cmp
mov
lds
in
xchg
fldcw
adc
mov
cmp
int3
dec
les
sahf
cmp
xor
imul
inc
js
mov
adc
dec
les
pop
jbe
xor
jmp
ficomp
cmp
into
dec
imul
pop
jns
fnstenv
xchg
xor
and
fnstenv
adc
retf
xchg
mov
dec
pop
xchg
inc
jl
pusha
xor
xchg
xor
jle
sahf
cmp
mov
mov
sbb
ins
jle
lahf
cmp
fcomip
cmp
mov
(bad)
imul
dec
les
into
mov
cdq
mov
cmp
retf
(bad)
bound
into
dec
mov
cdq
mov
cmp
test
(bad)
imul
dec
(bad)
(bad)
fstp
xchg
xor
cmp
mov
(bad)
imul
dec
les
data16
imul
dec
and
int3
dec
les
sahf
cmp
xor
xor
xchg
addr16
mov
xor
jecxz
fdiv
js
mov
add
mov
sbb
into
aaa
shr
out
and
jle
imul
stos
mov
lods
dec
les
pop
or
addr16
mov
int3
dec
les
(bad)
les
jo
pop
idiv
push
xchg
xor
ror
sbb
imul
xor
cmp
mov
(bad)
imul
mov
pop
leave
mov
pop
neg
cmp
adc
imul
mov
and
sbb
xchg
xor
mov
jge
cmp
cld
leave
outs
out
repnz
xor
aaa
xlat
call
test
fdivp
dec
xchg
xor
shl
mov
pop
je
vfmaddsubps
xor
xchg
and
push
(bad)
fnstcw
std
pop
imul
xchg
xor
ins
jle
xchg
cmp
xor
nop
xor
ror
push
mov
vcvtpd2ps
push
fidivr
rcr
(bad)
xor
cmp
xor
xor
xchg
xor
pop
je
mov
pop
dec
ins
jle
popf
cmp
addr16
out
mov
mov
jle
xchg
cmp
mov
jmp
int
ja
pop
aam
cmp
push
mov
shl
mov
stos
mov
xchg
pop
mov
jecxz
pop
mov
xor
xchg
add
mov
jae
imul
mov
imul
popf
cmp
cmp
dec
(bad)
(bad)
fstp
imul
dec
les
rcr
leave
popf
ret
pop
neg
cmp
(bad)
std
jge
jmp
pop
repnz
jae
pop
das
ror
ret
popa
(bad)
cmp
pop
push
je
cmp
add
add
popa
fdivr
rcr
in
ret
cmp
je
imul
fdivr
xor
xchg
fld
adc
iret
aaa
sti
xchg
popa
fadd
jnp
mov
rcr
in
mov
cmc
lods
mov
(bad)
push
xchg
pop
idiv
xchg
xor
mov
mov
cmp
xor
and
outs
cmp
mov
clc
ja
pop
aam
imul
or
outs
xor
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
pop
mov
push
xor
cld
aaa
fisubr
jle
popf
cmp
not
ins
cld
add
adc
popf
cmp
add
jle
cmc
cmp
popf
cmp
mov
fimul
imul
ret
mov
xchg
fimul
imul
sar
fimul
imul
loop
xor
push
pop
mov
cld
add
mov
repnz
cmp
add
mov
cmc
cmp
pushf
cmp
add
push
xor
jle
pushf
cmp
add
loop
idiv
jle
pushf
cmp
xor
imul
inc
mov
fimul
imul
push
mov
(bad)
push
mov
int
cld
cld
xor
push
cmps
into
sub
cld
xor
push
cmps
into
and
cs
cmp
leave
cmp
clc
ret
mov
cmp
and
cld
cld
int
push
jle
cmc
cmp
xchg
cmp
xor
out
pop
jno
push
push
adc
cs
mov
cld
int
push
push
xor
jle
xchg
cmp
xor
out
pop
jno
push
push
cmp
pop
leave
inc
fcomp
je
mov
pop
dec
les
fld
sbb
xor
pop
cmp
push
inc
mov
dec
push
mov
push
xchg
cmp
sub
cli
sbb
xor
cmp
jno
push
inc
mov
dec
push
mov
cmp
sbb
jp
fstp
inc
daa
jae
push
inc
mov
dec
push
mov
cs
cmp
xor
cmp
rcl
sbb
popa
mov
xor
(bad)
imul
into
mov
mov
push
cmp
xor
pop
popa
mov
xor
(bad)
imul
jmp
dec
mov
outs
jge
ret
mov
loop
sub
test
clc
mov
jae
arpl
idiv
imul
pop
neg
xlat
jnp
mov
jle
dec
les
jo
xor
mov
adc
popa
pop
fidiv
nop
(bad)
cmp
addr16
loop
xor
cmp
push
xchg
addr16
jle
sbb
iret
(bad)
mov
inc
imul
fidivr
(bad)
xor
aam
(bad)
jnp
mov
xchg
xor
xchg
xchg
lock
xor
cmp
adc
mov
data16
pop
(bad)
pop
mov
cmp
popa
fdiv
jnp
mov
je
idiv
cld
xor
xor
pop
leave
inc
fcomp
je
mov
pop
mov
mov
pop
mov
mov
pop
and
xchg
xor
jle
sbb
retf
adc
pusha
fisubr
(bad)
cmp
aam
(bad)
jnp
mov
xchg
fstp
pop
es
push
xchg
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
pop
or
xchg
xor
cmp
xor
xor
and
mov
push
pop
mov
cld
add
xchg
sahf
cmc
cmp
xchg
cmp
add
mov
mov
pop
movs
push
mov
push
ficom
(bad)
xor
aam
(bad)
jnp
mov
xchg
fnstenv
xchg
xor
inc
daa
jae
mov
xchg
pop
mov
mov
pop
mov
mov
pop
movs
push
mov
mov
cld
dec
ficom
(bad)
xor
aam
(bad)
jnp
mov
xchg
fnstenv
push
xchg
xor
fwait
and
into
or
xchg
into
cmp
pop
cmp
xor
xchg
popa
fsubr
jp
mov
je
idiv
cld
xor
xor
cld
xor
mov
xor
rol
fadd
xor
cld
sbb
cmp
(bad)
cmp
rcr
xchg
pop
mov
adc
xor
pop
mov
mov
pop
mov
mov
pop
rcl
pop
push
cmp
xor
aam
fdiv
xchg
fldcw
xchg
xor
sar
jo
mov
xchg
pop
xlat
aam
fidivr
(bad)
jb
cmp
xor
cld
xor
js
xor
xchg
fnstenv
pop
xchg
xor
cmp
adc
aam
aam
fcom
xchg
xor
xchg
xor
inc
(bad)
xor
aam
fdiv
xchg
fld
pop
xchg
xor
mov
xchg
into
or
xchg
into
sbb
xor
xchg
xor
(bad)
xor
aam
fdiv
xchg
(bad)
pop
cmp
add
cmp
rcl
dec
push
mov
xor
rol
fiadd
(bad)
xlat
mov
xchg
pop
fdivr
xchg
xor
cmp
(bad)
cmp
rcr
xchg
pop
mov
data16
xchg
mov
cmps
xchg
xor
cmp
push
xchg
into
cmp
pop
xor
les
xor
(bad)
pop
out
xlat
aam
(bad)
jnp
mov
xchg
fstp
sbb
jae
push
xchg
into
or
xchg
into
cmp
pop
rcl
xor
xchg
pop
mov
xchg
popa
fdiv
jae
push
je
idiv
cld
xor
xor
cld
xor
mov
xor
rol
fadd
xchg
xor
cld
push
fdivr
xchg
xor
push
(bad)
(bad)
cmp
rcr
xchg
pop
mov
stos
adc
xchg
mov
jae
xchg
into
or
xchg
into
cmp
pop
loop
fdiv
mov
(bad)
xchg
mov
xchg
pop
mov
xchg
popa
fdiv
je
idiv
cld
xor
xor
cld
xor
mov
xor
test
pop
xchg
xor
cld
and
in
dec
shl
(bad)
cmp
xchg
pop
mov
xchg
xor
xor
cld
xor
mov
xor
test
mov
push
xor
xchg
mov
push
push
xor
(bad)
cmp
xchg
pop
mov
xchg
xor
xor
pop
leave
popf
ret
pop
neg
cmp
adc
aam
aam
fisub
cld
sbb
out
xor
push
popa
fsub
addr16
push
lahf
(bad)
cmp
xor
sbb
jo
push
xchg
into
or
xchg
into
sbb
pop
rcl
xor
xchg
mov
push
dec
shl
(bad)
cmp
xchg
pop
mov
xchg
xor
xor
cld
xor
mov
xor
rol
fsub
aas
xor
xchg
mov
push
jge
idiv
(bad)
xor
xchg
pop
mov
inc
adc
xchg
(bad)
out
mov
mov
pop
pop
outs
into
dec
fs
pop
aam
xlat
mov
test
or
pop
not
xchg
xor
into
jnp
mov
jecxz
pop
ret
pusha
into
dec
mov
pop
pop
(bad)
aam
loop
jge
dec
les
sahf
cmc
cmp
leave
popf
ret
pop
neg
cmp
mov
pop
mov
mov
outs
(bad)
push
mov
fnstsw
imul
out
xchg
xor
cmp
adc
icebp
(bad)
mov
je
adc
shl
xchg
pop
mov
xchg
xor
(bad)
in
inc
jns
pop
pop
(bad)
aam
fdivr
xchg
xor
xor
pop
mov
mov
pop
mov
cld
or
icebp
retf
adc
and
mov
(bad)
pop
gs
xor
fnstcw
mov
xchg
fstp
xchg
xor
aas
cmp
mov
sbb
pop
mov
mov
pop
mov
mov
pop
cwde
cmp
sbb
retf
adc
pusha
fisubr
(bad)
cmp
aam
(bad)
jnp
mov
xchg
fstp
sbb
jae
push
xchg
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
pop
or
xchg
xor
cmp
xor
xor
and
mov
push
pop
mov
cld
add
xchg
sahf
cmc
cmp
xchg
cmp
add
mov
mov
pop
rcl
pop
mov
cmp
popa
fsub
addr16
push
sbb
idiv
cld
xor
xor
pop
leave
mov
pop
neg
mov
xchg
pop
idiv
xchg
xor
jle
cmc
cmp
stos
cmp
xor
cmp
jb
cmp
jo
shl
mov
push
or
mov
xor
push
xchg
pop
cli
cmp
pushf
cmc
cmp
stos
cmp
pop
mov
fdiv
mov
imul
mov
into
or
xchg
into
sbb
xor
cld
dec
fdivr
xchg
mov
push
dec
shl
(bad)
mov
mov
xor
mov
xor
mov
xchg
xor
pop
je
mov
pop
mov
mov
pop
mov
mov
pop
cwde
cmp
and
mov
xchg
xor
(bad)
in
inc
jns
pop
cmp
aam
fidivr
jle
stos
cmp
xor
into
dec
push
xchg
into
or
xchg
into
cmp
pop
xor
push
(bad)
and
mov
xchg
popa
fsub
jae
push
je
idiv
cld
xor
xor
pop
(bad)
dec
inc
xchg
xor
cmp
adc
lock
xor
sub
push
fdivr
xor
(bad)
pop
(bad)
xlat
aam
(bad)
jnp
mov
xchg
fst
xchg
xor
or
jo
push
xchg
into
or
xchg
into
cmp
pop
dec
cmp
xor
xchg
popa
fsub
jp
mov
je
idiv
cld
xor
xor
pop
div
xor
add
xchg
xlat
xor
cmp
lock
xor
sub
fadd
mov
xor
(bad)
pop
mov
fnstcw
mov
xchg
(bad)
and
and
into
or
xchg
into
cmp
pop
push
cmp
xor
xchg
popa
fdivr
je
idiv
cld
xor
xor
cld
xor
mov
xor
rol
fadd
xchg
xor
cld
das
fdivr
xchg
xor
push
leave
(bad)
cmp
rcr
xchg
pop
mov
outs
sub
cmp
pop
mov
mov
pop
mov
mov
pop
lods
push
adc
mov
cld
sbb
das
(bad)
xor
aam
fdiv
jp
mov
xchg
xor
xchg
xchg
test
(bad)
xor
cld
cld
xor
mov
xor
test
adc
ja
das
(bad)
xor
aam
fdiv
jp
mov
xchg
xor
xchg
xchg
pushf
xchg
xlat
xor
cmp
adc
aam
aam
fisub
cld
push
fisub
fdivr
xchg
mov
push
dec
shl
(bad)
cmp
xchg
pop
mov
xchg
xor
xor
cld
xor
mov
xor
rol
fsub
(bad)
xor
xchg
mov
push
jge
idiv
(bad)
xor
xchg
pop
mov
sub
xor
fxch
enter
ret
cmps
leave
cmp
les
jmp
frstor
hlt
ja
mov
xchg
pop
mov
push
xor
cld
xor
cmp
cmp
xor
cdq
mov
cmp
fstp
xchg
xor
or
sub
push
je
aas
xchg
xor
xchg
mov
icebp
iret
(bad)
mov
shr
push
jo
xchg
pop
mov
xchg
mov
xchg
into
dec
mov
push
repz
xchg
into
rol
imul
pop
call
dec
call
les
jo
pop
je
xor
xchg
push
xchg
pop
mov
ror
in
jecxz
fadd
jae
push
xchg
xor
imul
jmp
int
ja
pop
aam
xlat
xchg
xor
int3
jmp
sbb
cmp
cmp
les
div
cmp
stos
je
xchg
mov
dec
imul
cmp
xor
mov
push
ins
dec
mov
xchg
cli
aam
cmp
(bad)
fxch
and
xor
sub
lods
jne
xchg
mov
dec
imul
cmp
mov
mov
xchg
cli
aam
cmp
(bad)
fptan
and
xor
jbe
xchg
mov
dec
imul
cmp
inc
movs
push
stos
repz
sbb
ror
imul
je
xor
imul
jbe
xchg
mov
dec
imul
cmp
inc
movs
push
dec
lock
sbb
shl
mov
push
dec
dec
xor
and
rcl
mov
xor
imul
mov
xchg
sti
aam
cmp
(bad)
fld
sub
xor
cmp
dec
dec
xor
and
leave
push
jae
mov
xor
imul
mov
xchg
cli
aam
cmp
(bad)
fnstenv
sub
xor
imul
xor
imul
mov
xor
into
mov
cli
aam
cmp
(bad)
fsqrt
sub
xor
imul
jne
xchg
mov
dec
imul
cmp
pop
(bad)
rcl
xor
push
adc
dec
les
fdivr
cmp
rcl
aad
(bad)
(bad)
jb
jns
pop
gs
aam
fdivr
jo
ror
int3
dec
(bad)
(bad)
icebp
xchg
xor
xor
(bad)
mov
mov
dec
(bad)
enter
xchg
xor
mov
pusha
in
shl
sahf
mov
xor
xor
pop
idiv
ja
xor
rcr
mov
sbb
cmp
fs
push
imul
je
cwde
pop
mov
jle
lods
cmp
xor
xchg
xor
mov
mov
adc
data16
(bad)
push
mov
aad
les
jb
data16
pop
pop
stc
aam
cmp
(bad)
fldl2e
sub
mov
mov
cdq
xor
add
dec
les
or
outs
into
dec
cmp
and
sbb
jae
mov
fadd
imul
mov
add
mov
enter
cmp
and
jp
jae
mov
fadd
imul
mov
imul
ja
xchg
mov
dec
imul
cmp
into
dec
aas
jecxz
fadd
jae
mov
fadd
imul
sbb
cmp
cmp
les
div
gs
dec
les
repnz
sbb
shl
and
cmp
mov
imul
sbb
aam
cmp
(bad)
fldcw
cs
xor
gs
dec
les
repnz
sbb
rcl
and
cmp
rcr
gs
dec
les
repz
sbb
shl
and
cmp
mov
imul
es
aam
cmp
(bad)
fptan
cs
xor
gs
dec
les
idiv
sbb
sar
shl
gs
dec
les
repnz
sbb
rcr
mov
imul
mov
aam
cmp
(bad)
fld
xchg
xor
gs
dec
les
cmc
idiv
sbb
ror
mov
push
mov
imul
fs
aam
cmp
(bad)
(bad)
das
xchg
xor
dec
es
mov
fadd
imul
mov
xchg
pop
les
push
jae
shl
cmc
movs
mov
fld
imul
aaa
xchg
dec
les
xor
xchg
xor
cmp
neg
retf
cmps
sar
inc
jns
(bad)
cli
imul
xor
outs
into
dec
xor
xor
xchg
xor
push
mov
imul
mov
xchg
mov
(bad)
push
dec
add
xor
imul
xor
xchg
xor
imul
cmp
ret
imul
idiv
sbb
rcl
mov
adc
leave
dec
les
rcl
dec
lods
cmp
push
in
push
(bad)
pop
cli
ins
ss
mov
jle
inc
push
or
outs
into
dec
xor
push
mov
xchg
mov
pop
cmp
cmp
push
fsubr
movs
(bad)
cmp
mov
lds
in
ret
cmp
fucomip
cmp
jae
push
mov
idiv
sbb
shr
cmc
lods
rcl
pop
mov
xchg
xor
mov
(bad)
(bad)
das
xchg
xor
cmp
mov
ret
imul
idiv
sbb
rcl
cmp
xchg
mov
dec
imul
cmp
mov
lds
in
retf
cmp
mov
(bad)
imul
cmp
(bad)
pop
mov
aam
cmp
(bad)
fnstenv
xchg
xor
inc
int
les
pop
(bad)
xor
mov
(bad)
push
mov
in
inc
les
jb
xchg
pop
dec
rcl
xor
mov
(bad)
fldenv
imul
je
adc
cmp
into
dec
mov
mov
mov
iret
mov
dec
mov
xchg
mov
xor
xor
outs
leave
dec
(bad)
(bad)
mov
pop
rcl
xor
mov
(bad)
fptan
sub
xor
inc
xor
mov
(bad)
fxch
sub
iret
dec
(bad)
(bad)
fxch
das
xchg
xor
les
aas
mov
push
lea
adc
and
mov
push
mov
(bad)
push
ds
mov
(bad)
dec
les
into
mov
inc
mov
jb
and
dec
les
xor
push
out
pop
jns
mov
dec
imul
cmp
mov
ret
imul
mov
pop
mov
int3
imul
dec
(bad)
sub
(bad)
dec
les
dec
mov
rcr
mov
mov
ret
imul
dec
(bad)
(bad)
into
add
outs
into
dec
rcr
mov
pop
rcr
push
dec
(bad)
(bad)
fnstenv
xchg
xor
xchg
dec
(bad)
iret
outs
into
dec
mov
ss
jle
movs
cmp
into
dec
imul
dec
mov
dec
(bad)
(bad)
pop
sar
mov
xchg
fst
sub
and
imul
pop
ret
imul
dec
mov
lahf
icebp
mov
les
pop
ret
imul
mov
data16
pop
hlt
dec
lea
pop
mov
jg
dec
les
jmp
mov
mov
jle
movs
cmp
in
(bad)
push
aam
ins
adc
ja
gs
in
xchg
pop
and
aam
fidivr
(bad)
xor
xchg
xor
les
fldenv
sub
jle
cmp
pop
mov
sbb
sahf
cmc
cmp
in
xlat
xor
cmp
jmp
sbb
fstp
sub
xor
jle
movs
cmp
xor
sar
and
cmp
jmp
fdivr
xchg
xor
imul
sub
mov
xor
jle
sub
imul
xor
xchg
xor
xchg
cmp
out
cmc
idiv
imul
jns
xor
jp
dec
mov
fst
xchg
xor
call
pop
lock
rcl
mov
outs
cs
icebp
pop
loope
mov
mov
jp
retf
cmp
xor
dec
les
add
imul
add
xchg
xor
les
addr16
and
mov
(bad)
pop
cli
ins
ss
mov
jle
inc
push
aad
fs
dec
les
mov
(bad)
imul
pop
les
mov
xchg
jnp
dec
cmp
mov
int
xor
xor
imul
pop
les
xor
cmp
mov
(bad)
imul
idiv
(bad)
in
jns
mov
dec
imul
cmp
xchg
pop
les
cmp
(bad)
fldenv
sub
fisttp
(bad)
fstp
clc
imul
dec
(bad)
(bad)
fld
dec
xor
jp
dec
imul
cmp
mov
(bad)
xor
xor
clc
(bad)
cmc
pop
jns
pop
and
aam
fdiv
jl
mov
(bad)
sahf
cmc
cmp
cmps
cmp
into
dec
mov
cmp
mov
pop
xor
mov
sub
idiv
(bad)
mov
jp
aam
fmul
jae
sar
and
imul
idiv
das
sub
cmp
test
cmp
test
imul
add
rcl
xor
sbb
jno
shl
and
imul
idiv
das
adc
pop
fisubr
popf
jl
mov
push
xor
(bad)
call
xchg
pop
mov
xlat
xor
xor
sub
dec
les
add
rcl
xor
enter
or
mov
(bad)
imul
fidivr
cld
xor
fdivr
xchg
xor
push
xchg
lahf
cmc
cmp
mov
(bad)
pop
repnz
or
xor
cmp
fnstenv
xchg
xor
cs
mov
add
xor
jle
mov
mov
dec
mov
stos
xor
jecxz
loop
sbb
vfmaddsubps
xor
(bad)
pop
mov
mov
idiv
imul
pop
ret
xchg
xor
cs
mov
add
xor
jle
movs
cmp
into
dec
mov
stos
xor
jecxz
loop
sbb
vfmaddsubps
mov
mov
mov
idiv
imul
imul
cs
sahf
cmp
popf
pop
les
xor
push
mov
mov
rcl
adc
mov
std
cmp
and
je
dec
add
pop
mov
xchg
xor
cmp
mov
out
(bad)
xor
cmp
ds
pop
je
cld
shr
mov
xchg
xor
clc
cld
xor
xor
sub
mov
xchg
div
call
repnz
jle
xor
(bad)
fst
xor
xor
cmp
adc
fidivr
cld
xor
cmp
xor
cmp
fdiv
cmp
fcomp
xchg
pop
mov
mov
mov
xor
pop
and
aam
fidivr
cld
xor
xor
imul
xor
xchg
xor
dec
mov
xor
xor
(bad)
(bad)
mov
pop
jmp
pop
out
call
scas
fmul
push
mov
aad
into
mov
xchg
xor
cmp
mov
(bad)
imul
pop
les
fmul
jae
push
jmp
idiv
(bad)
arpl
xchg
pop
mov
xchg
mov
repz
sub
push
out
idiv
xchg
fincstp
popf
imul
cmp
aad
into
in
xchg
pop
mov
loope
hlt
cmp
xor
cmp
mov
sahf
call
les
fidivr
cld
xor
test
jno
push
xchg
pop
mov
call
aaa
xchg
xor
cmp
lds
les
fld
xor
sbb
jle
mov
add
xor
inc
aas
mov
cld
xor
cmp
xor
jle
popa
pop
dec
cwde
xor
enter
xchg
loope
jae
pop
pop
xchg
xor
jmp
mov
cmp
leave
movs
xor
test
cmp
xor
cmp
mov
cmp
xor
xchg
inc
scas
push
xchg
mov
cdq
mov
mov
xchg
xor
xchg
fcom
xor
cmc
idiv
xchg
ds
xchg
xor
imul
jmp
into
dec
mov
fisttp
imul
idiv
(bad)
(bad)
inc
into
dec
mov
xor
mov
dec
imul
(bad)
imul
mov
push
xor
adc
dec
les
dec
push
rol
mov
dec
jecxz
xor
imul
adc
jmp
pop
aas
sbb
into
lahf
scas
pop
int3
dec
les
mov
(bad)
imul
dec
les
in
les
and
imul
add
adc
xor
imul
adc
in
dec
les
aas
mov
mov
into
in
xchg
pop
mov
mov
fnstenv
xchg
xor
mov
pop
div
push
(bad)
cmc
idiv
xchg
ds
xchg
xor
xor
mov
mov
xor
xchg
xor
loop
idiv
xchg
inc
mov
jle
pop
les
xor
loop
idiv
xchg
inc
mov
jns
fst
mov
sbb
fmul
cmp
xor
cld
aaa
xor
jp
or
xor
xor
cmp
mov
cmp
xor
push
mov
jno
xor
imul
mov
nop
mov
xlat
xor
add
xor
fwait
xor
pop
leave
inc
fcomp
mov
(bad)
imul
mov
les
mov
and
or
dec
stos
or
dec
mov
jo
dec
mov
jae
dec
mov
mov
daa
jae
dec
mov
mov
and
or
dec
call
xor
loopne
cmp
and
xor
imul
mov
xchg
mov
and
or
dec
fwait
pop
add
xchg
dec
dec
xchg
jbe
xchg
xor
les
mov
jecxz
pop
xchg
call
cmp
into
dec
cmp
into
mov
outs
xor
mov
dec
imul
cmp
into
dec
ror
aaa
mov
pop
idiv
xchg
xor
imul
cmp
mov
cmp
dec
cmp
adc
cmp
xor
ins
jl
mov
xchg
(bad)
xor
pushf
cmc
cmp
mov
ds
xor
cmp
mov
imul
dec
les
inc
(bad)
imul
jo
xchg
xor
cmp
into
mov
xchg
mov
dec
imul
mov
xor
xor
imul
dec
mov
cld
xor
mov
or
dec
les
pop
pop
push
into
dec
mov
imul
mov
xchg
pop
adc
xor
cmp
mov
mov
push
cmp
xchg
mov
xchg
xor
pop
mov
(bad)
imul
mov
imul
dec
les
fmul
jl
mov
adc
dec
les
pop
scas
call
les
xor
imul
cmp
mov
cmp
dec
cmp
adc
cmp
xor
sub
push
xchg
(bad)
xor
xchg
hlt
cmp
mov
aas
xchg
xor
mov
into
dec
les
or
aaa
ret
xchg
push
xchg
pop
mov
jge
idiv
cld
xor
xor
xchg
fst
xchg
xor
xchg
xor
imul
xor
imul
mov
imul
mov
call
xor
sar
mov
xchg
fld
xchg
xor
mov
cmp
xor
xchg
into
dec
les
into
dec
pop
xchg
mov
xor
mov
dec
imul
inc
(bad)
imul
idiv
sbb
sar
cmp
imul
mov
imul
add
xor
into
dec
les
pop
mov
pop
fdiv
cmp
xor
xor
xchg
fstp
aaa
xchg
xor
adc
dec
les
jae
adc
dec
les
cmp
(bad)
pop
test
aam
cmp
(bad)
(bad)
inc
xor
mov
(bad)
into
adc
xor
mov
push
mov
dec
mov
mov
xchg
pop
sbb
aam
fidivr
jle
mov
pop
cmp
shr
cmp
xchg
mov
jae
adc
dec
les
cmp
(bad)
pop
adc
aam
cmp
(bad)
fldenv
xchg
xor
inc
xor
mov
(bad)
into
adc
stos
cmp
imul
mov
xchg
pop
fcmovnbe
aam
fidivr
jle
mov
adc
jo
rol
cmp
xchg
mov
dec
mov
stos
xor
loop
fidivr
cld
xor
or
mov
xchg
fld
xor
sahf
cmc
cmp
mov
cmp
iret
dec
les
mov
lds
ds
imul
mov
xchg
pop
test
aam
fidivr
jle
mov
adc
jo
shl
mov
jg
mov
xchg
mov
les
dec
cmp
dec
lds
mov
in
cmp
cld
sbb
mov
les
imul
mov
les
imul
mov
xchg
xor
imul
cmp
mov
xchg
mov
cmp
dec
cmp
adc
cmp
xor
cs
mov
xchg
(bad)
cmp
xor
mov
cmc
cmp
mov
xchg
fdivr
cmp
iret
dec
les
mov
lds
ds
imul
mov
xchg
pop
inc
rcl
xor
cmp
mov
xchg
into
sbb
mov
cmp
lds
dec
cmp
mov
aaa
repz
ret
and
push
inc
sbb
jns
call
into
dec
imul
inc
(bad)
imul
idiv
sbb
ror
cmc
movs
push
xchg
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
jno
jnp
jo
shr
xor
cmp
mov
lds
cmp
mov
sbb
into
cmp
cmp
xor
(bad)
iret
dec
les
mov
xchg
mov
dec
push
jae
cmp
jbe
cmps
cwde
hlt
cmp
or
cmp
scas
data16
dec
(bad)
les
or
jno
les
lds
imul
fidivr
sbb
push
xchg
pop
lods
enter
mov
dec
les
mov
xchg
mov
dec
mov
stos
xor
add
dec
les
in
or
dec
les
dec
mov
dec
les
mov
xchg
pop
mov
adc
dec
les
fidivr
(bad)
sub
xchg
into
add
push
xor
cmp
(bad)
push
add
iret
dec
les
mov
xchg
into
cmp
aaa
mov
cld
xor
cmp
xor
fdivr
xchg
xor
push
mov
hlt
cmp
mov
xchg
mov
dec
mov
xchg
pop
mov
xchg
pop
mov
and
dec
les
jle
xchg
xor
ss
xor
adc
or
cmp
scas
data16
dec
(bad)
les
stos
and
mov
and
dec
les
mov
cmp
mov
(bad)
imul
inc
rcl
xor
(bad)
iret
dec
les
mov
xchg
mov
jae
and
dec
les
cmp
cmc
idiv
xchg
xor
xchg
xor
aas
cld
xor
mov
jmp
idiv
(bad)
arpl
xchg
pop
mov
xchg
mov
mov
into
dec
mov
imul
ficom
(bad)
push
mov
in
dec
les
jae
xchg
shr
inc
movs
vblendvpd
inc
ds
xor
gs
jbe
xchg
fs
push
sahf
mov
adc
(bad)
cmp
mov
cmp
mov
adc
mov
xchg
mov
jae
jmp
mov
cmp
jae
dec
popf
into
adc
ds
popf
ret
pop
test
jecxz
dec
push
push
xor
jle
mov
xchg
or
dec
popf
into
adc
jmp
xchg
xlat
xor
xor
test
(bad)
xor
xor
push
or
dec
popf
into
adc
(bad)
xor
pushf
xchg
xlat
xor
xor
xchg
xchg
xlat
xor
xor
popa
(bad)
cmp
add
inc
mov
jns
xor
xor
pop
xchg
xlat
xor
xor
xchg
inc
test
stos
inc
jo
xchg
xor
sub
xor
xchg
xor
outs
mov
adc
nop
mov
mov
outs
xor
or
dec
nop
mov
mov
mov
inc
mov
mov
dec
cmp
jae
mov
inc
mov
mov
adc
xchg
or
dec
nop
mov
mov
mov
inc
mov
mov
cmp
cmp
xor
cmps
vblendvpd
shl
bound
xor
outs
mov
jge
xchg
mov
imul
stos
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
rcr
cmp
push
xchg
dec
mov
xchg
mov
jno
rol
xor
cmp
int
sti
loop
cmp
jl
push
xchg
dec
ins
fisubr
xor
mov
outs
adc
enter
xor
ss
ret
mov
inc
push
xchg
fnstenv
xchg
xor
cmp
pop
mov
jle
pop
les
jge
iret
mov
cmp
and
xchg
and
adc
mov
sbb
icebp
or
mov
dec
mov
nop
xor
mov
adc
mov
jbe
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
xor
aad
and
xchg
.byte
mov
