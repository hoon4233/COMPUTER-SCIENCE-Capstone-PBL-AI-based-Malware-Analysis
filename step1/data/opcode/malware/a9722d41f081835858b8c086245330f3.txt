mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
inc
outs
jae
inc
push
sar
inc
nop
inc
or
add
mov
add
dec
outs
je
addr16
sub
shl
data16
add
jns
test
push
outs
jb
adc
cwde
daa
or
imul
out
das
add
pop
add
lods
pop
into
fcom
push
shl
in
jae
jb
addr16
or
push
imul
int
in
or
xchg
adc
or
push
fcomp
je
sbb
or
shr
data16
cmps
stc
call
push
jo
push
mov
mov
(bad)
cmp
pop
push
dec
bound
arpl
pop
sbb
push
push
jns
push
ins
test
(bad)
dec
fwait
lods
clc
push
mov
gs
add
pop
jg
jo
inc
add
or
imul
div
movs
sbb
add
add
sbb
call
add
jmp
adc
out
int3
add
out
cmc
(bad)
out
popf
mov
push
xor
add
adc
adc
test
leave
dec
ss
dec
test
push
jle
xchg
std
fs
outs
jmp
cmp
cmp
(bad)
and
cmp
ficomp
adc
cmp
cmp
add
in
jb
add
cld
clc
pmuludq
in
in
in
call
in
(bad)
aam
in
in
ror
enter
in
js
(bad)
in
in
sar
fs
rol
ret
mov
lahf
pop
dec
ret
dec
mov
jg
cmp
mov
and
fwait
cmp
push
add
sub
je
movzx
mov
dec
mov
inc
inc
pop
ret
xchg
mov
in
in
add
cmps
push
pop
add
dec
and
and
mov
imul
and
xor
xor
sub
imul
jb
and
imul
(bad)
mov
jmp
inc
inc
gs
ins
outs
jo
mov
push
mov
mov
gs
push
gs
imul
es
enter
imul
jmp
fidiv
and
push
test
jae
stos
out
outs
imul
mov
js
in
ins
call
popa
dec
leave
adc
scas
sub
outs
and
test
jnp
jnp
and
jae
jo
sar
imul
outs
add
fcomp
push
mov
es
adc
sti
out
mov
mov
iret
mov
mov
mov
mov
dec
add
inc
or
or
ds
in
push
dec
ror
cmp
xor
shl
adc
adc
mov
mov
fild
fild
add
sbb
cs
jp
(bad)
int
sbb
sub
aas
inc
and
pusha
cmps
imul
into
xor
dec
dec
sub
xor
shr
rcr
cmp
pop
cmp
ror
imul
ins
mov
add
add
neg
jns
fistp
add
jl
push
cmp
ins
(bad)
adc
and
mov
inc
pop
mov
mov
or
mov
add
xchg
push
or
mov
mov
jmp
int3
jp
mov
shr
movzx
mov
and
jge
jne
pop
mov
and
cmp
xor
mov
inc
sbb
and
add
adc
push
add
retf
push
lods
inc
xor
add
mov
jnp
jnp
loopne
(bad)
sbb
loopne
cmp
mov
outs
mov
cld
add
or
sbb
idiv
lea
mov
push
add
cmp
sti
jge
addr16
pop
mov
cld
sub
in
mov
xor
loopne
in
jmp
pusha
push
mov
inc
loopne
add
into
push
dec
adc
push
and
push
test
fcmovu
xor
enter
push
mov
mov
(bad)
pusha
xchg
sar
push
mov
jle
sub
mov
mov
sub
cdq
mov
xor
mov
cmp
outs
add
sub
js
and
outs
ds
mov
add
mov
sbb
outs
aas
js
xor
jle
push
push
mov
adc
sbb
and
push
adc
push
xchg
mov
push
cld
sti
mov
or
ja
pushf
or
mov
add
cld
or
sbb
add
clc
cmps
ret
mov
pop
pop
pop
pop
faddp
add
mov
sub
loop
mov
jle
adc
mov
push
and
or
push
ret
sbb
sub
jns
mov
xor
jmp
or
cmp
in
push
push
lea
jnp
mov
enter
add
mov
adc
out
jbe
sub
add
jmp
test
jne
lods
(bad)
lock
push
in
scas
jle
retf
pop
dec
mov
add
nop
inc
loopne
repnz
ror
outs
imul
call
jecxz
jmp
(bad)
jle
fstp
loope
pop
shl
add
cmp
jbe
jmp
out
mov
adc
xchg
es
sar
or
or
cmp
test
jo
fs
mov
stos
inc
push
out
into
popa
jle
shl
mov
add
dec
and
neg
cmp
jae
fdiv
pusha
ror
lea
push
inc
pop
push
mov
shl
aaa
xchg
jecxz
pop
or
pusha
or
(bad)
push
push
std
sub
add
jbe
ret
push
addr16
mov
inc
adc
xchg
dec
push
hlt
and
fstp
push
in
shr
cmp
jb
add
das
mov
sahf
cmps
dec
(bad)
and
pusha
xchg
out
(bad)
mov
add
ret
call
push
add
pusha
bound
fisttp
xchg
test
je
in
(bad)
rcr
outs
clc
sbb
jo
push
xor
mov
inc
or
mov
cmp
mov
sub
or
scas
idiv
je
(bad)
and
add
ja
call
movzx
add
cmp
ja
dec
mov
cmp
ret
lods
in
inc
adc
es
mov
and
sbb
xor
loopne
xchg
retf
aas
je
ret
in
jmp
cmp
cmp
xor
aad
cmp
je
xchg
outs
rol
movsx
xor
push
push
mov
add
rol
das
inc
leave
cld
mov
cmp
add
cld
push
shr
push
test
add
cmp
jne
mov
jns
and
mov
push
jle
pusha
or
ins
mov
dec
jnp
fsub
add
add
mov
pop
mov
mov
cmp
jb
mov
jle
sbb
add
inc
jp
fucomi
mov
jmp
ds
sbb
(bad)
call
sbb
mov
and
lea
mov
(bad)
sti
mov
xor
das
mov
mov
mov
icebp
pop
mov
inc
and
adc
push
or
imul
iret
mov
xor
cmp
addr16
fisttp
push
sub
mov
mov
or
fadd
mov
cmps
lea
jbe
inc
add
shr
mov
push
pusha
fbstp
loopne
ror
jmp
mov
mov
add
push
cmps
shl
bsf
mov
shl
xor
add
in
sbb
jp
sub
mov
jmp
mov
dec
test
loopne
pop
or
add
rcr
cmp
(bad)
adc
adc
test
push
pop
xor
sbb
push
mov
(bad)
not
add
mov
test
dec
sub
mov
cli
nop
and
mov
test
cld
iret
xchg
stos
rol
test
add
mov
jne
sub
jge
inc
jmp
xchg
sub
data16
xchg
movs
jns
dec
dec
pop
mov
jb
xor
aad
stos
ins
test
sub
outs
xor
mov
iret
test
pmulhw
xchg
scas
into
xor
push
mov
pop
leave
outs
pop
sbb
repnz
jmp
aaa
inc
or
xor
jle
(bad)
out
loop
fmul
outs
sbb
jne
test
jne
or
xchg
loope
adc
inc
cld
or
cmp
inc
faddp
ret
xchg
xchg
mov
xlat
mov
test
je
xchg
pop
clc
lock
cmp
pop
cmps
xor
test
into
sub
adc
mov
lahf
pop
mov
cmp
sbb
or
retf
add
inc
cld
xchg
fld
mov
loopne
add
call
ret
loopne
pop
push
in
or
in
movs
pop
ja
or
cmp
jb
sbb
add
jle
cmp
jb
jns
jb
loopne
mov
mov
ret
jg
or
lahf
push
lea
push
mov
sub
mov
sar
and
add
hlt
fwait
mov
lock
mov
call
test
mov
xchg
xor
dec
xchg
sahf
mov
mov
add
jecxz
cmp
cld
dec
aad
push
xchg
cvttps2pi
cmp
jb
sbb
jmp
jb
pop
outs
mov
lea
xchg
in
xor
cmp
mov
push
jge
inc
mov
mov
or
cmp
imul
push
mov
add
or
shl
pop
data16
mov
rol
xlat
out
icebp
mov
pop
clc
add
sahf
sub
xor
push
scas
inc
mov
out
pop
repnz
lock
call
imul
add
pop
ret
or
dec
fistp
iret
leave
xor
enter
out
shl
push
sar
sbb
je
iret
ja
cmp
rol
mov
call
jmp
shl
rol
add
mov
push
ret
and
push
add
push
xchg
push
lea
(bad)
js
ret
jl
mov
push
pop
add
adc
jae
pop
xchg
mov
rcl
dec
iret
push
imul
pop
loop
cmp
shr
push
hlt
xor
and
neg
push
lea
jecxz
pop
aad
jp
(bad)
lea
or
jae
clc
idiv
adc
fcmovnu
out
fst
add
js
or
rcr
outs
mov
das
ss
mov
hlt
mov
in
ror
mov
sbb
ror
aad
xlat
je
mov
adc
cmp
jae
rcl
sbb
(bad)
add
(bad)
mov
mov
cmp
jne
mov
cmp
jbe
mov
mov
sub
mov
and
mov
add
fmul
jno
jb
mov
scas
mov
add
mul
ins
push
mov
loop
sbb
cld
push
pop
shr
mov
or
mov
out
scas
ins
(bad)
cmp
(bad)
inc
sbb
wbinvd
shr
sbb
inc
xchg
dec
aaa
sbb
push
nop
retf
add
add
in
sbb
dec
and
dec
add
js
ins
xor
inc
add
icebp
mov
pop
inc
mov
dec
inc
and
ret
add
mov
mov
fstp
mov
inc
inc
ds
jg
mov
and
inc
xor
rcr
xor
rol
push
test
pop
jbe
sub
fsubp
jne
mov
push
in
cmp
ja
pop
or
mov
jle
add
push
push
jae
ss
mov
(bad)
(bad)
fild
adc
mov
js
add
push
sti
out
xor
hlt
sahf
jne
push
test
je
adc
pop
and
xchg
call
add
test
push
push
mov
dec
cmp
mov
iret
jge
push
(bad)
shr
inc
xchg
push
and
xor
cmp
jne
test
daa
dec
mov
div
lea
mov
and
clc
sbb
pop
pop
inc
jle
cld
sbb
mov
push
xor
mov
mov
outs
sbb
in
pop
in
or
popf
jl
mov
add
add
xor
not
push
hlt
push
fidivr
sub
aas
inc
sbb
mov
adc
add
jp
adc
dec
mov
out
inc
mov
push
jae
lock
push
jmp
jl
inc
pop
mov
cmp
jne
in
(bad)
adc
add
push
mov
and
mov
sahf
add
dec
jne
mov
shl
aam
(bad)
cld
mov
inc
add
add
out
(bad)
jmp
lea
lea
lea
inc
in
adc
cs
or
call
cmp
add
or
dec
lahf
or
cmp
je
aaa
pop
sub
clc
or
test
pop
inc
scas
add
scas
sti
lods
in
jge
hlt
adc
inc
add
sub
in
les
or
outs
mov
xchg
repz
inc
imul
ror
hlt
add
mov
ror
cmp
pmaxsw
sub
inc
jecxz
jg
dec
sahf
arpl
jl
or
fwait
cwde
jle
adc
cmp
mov
imul
cmp
jae
add
dec
sub
out
aam
loope
mov
add
adc
jmp
xchg
in
fcmovb
outs
push
or
adc
in
cdq
fild
xchg
das
mov
in
aas
add
jae
sti
test
in
movq
ret
adc
(bad)
inc
fiadd
add
test
das
(bad)
fmul
xchg
jle
or
mov
cs
mov
push
dec
jne
bound
loopne
stos
lea
jnp
mov
ds
mov
pop
inc
add
clc
push
dec
push
das
push
mov
test
pop
adc
jmp
jb
call
cld
ror
sbb
add
or
sbb
jmp
fmulp
adc
jge
and
xor
mov
and
int3
mov
loope
xchg
cmp
je
jmp
mov
push
dec
retw
ds
or
mov
aaa
dec
adc
xor
scas
mov
pop
stos
or
je
dec
rcl
in
jge
mov
mov
xchg
mul
cmps
sbb
cmp
lea
sar
mov
adc
jb
mov
js
outs
cld
dec
out
in
loope
outs
add
mov
ret
mov
inc
sbb
scas
cmp
cli
mov
xchg
cmp
xchg
div
mov
imul
push
not
add
outs
push
or
ja
mov
fsub
sub
mov
add
xor
push
sub
imul
or
add
add
je
dec
je
jmp
std
pop
jb
mov
jmp
mov
mov
and
inc
cld
and
sbb
adc
shl
mov
or
xchg
sbb
and
fwait
pop
or
loope
sub
pop
cmp
loope
iret
ja
fnstsw
test
mov
push
pop
push
sub
push
mov
inc
inc
xor
sbb
push
cmp
mov
inc
xor
add
jb
(bad)
jge
or
aaa
add
jne
mov
outs
mov
push
sbb
rol
cmp
add
shl
dec
in
mov
xor
mov
fwait
mov
add
jne
mov
mov
fmul
add
clc
jbe
mov
cmc
(bad)
sti
scas
bound
ret
(bad)
aaa
jne
nop
scas
mov
pop
mov
bound
mov
jg
std
lea
mov
or
repnz
lock
push
sahf
out
rol
add
add
popf
xchg
fnsave
mov
jmp
inc
call
jbe
pop
scas
enter
loop
push
in
loopne
lods
push
stos
mov
inc
data16
(bad)
xor
inc
cli
in
(bad)
loope
lea
add
shl
jae
xor
jne
mov
or
idiv
sub
mov
xor
div
imul
mov
jb
push
data16
(bad)
jmp
push
push
adc
(bad)
xor
add
push
pop
adc
mov
jbe
inc
mov
mov
mov
ret
repz
retf
inc
adc
mov
push
push
mov
add
adc
sub
jmp
push
mov
cmp
jne
mov
fwait
mov
adc
add
inc
or
dec
or
and
mov
stos
sbb
dec
mov
in
ror
mov
jnp
fistp
push
fistp
fimul
dec
or
fstp
cmp
mov
jecxz
rol
mov
push
fdivr
popf
or
sub
and
je
popf
lock
cmps
pop
sbb
pop
jo
idiv
popa
(bad)
test
call
add
ret
mov
dec
call
cs
push
push
cs
xor
adc
addr16
jne
jl
dec
je
test
je
push
mov
inc
pop
pop
or
inc
ins
mov
inc
mov
xor
neg
bound
rcr
arpl
ss
jnp
cmp
xchg
bndstx
pop
daa
int3
ret
aas
add
loope
pop
lods
and
or
or
pop
xchg
mov
and
ret
out
jmp
lahf
idiv
and
gs
mov
xor
aas
cld
out
fadd
mul
(bad)
jge
cmp
idiv
or
jmp
cmp
ja
movzx
add
ds
adc
and
or
jg
cmc
jl
scas
pop
lock
push
push
push
lea
pop
pop
jne
lahf
sbb
pop
call
dec
sub
rcl
mov
shl
stc
and
sub
jg
iret
cmp
jmp
sub
or
imul
push
or
adc
adc
add
dec
jns
test
idiv
adc
jge
jmp
inc
add
or
adc
fld
lock
aad
cmc
pushf
sbb
ret
jle
pop
pop
fistp
ja
sub
or
adc
add
add
and
sub
pop
inc
cmc
pop
inc
ins
or
or
fucom
ja
inc
add
mov
cmps
and
add
mov
into
dec
add
pop
cmp
push
add
stos
mov
adc
ret
mov
jmp
fdivp
mov
in
pushf
adc
push
inc
cli
and
fwait
lods
ins
fimul
cmp
jne
js
or
cmp
loopne
sti
mov
or
jmp
and
and
pop
jmp
inc
imul
daa
shl
fsubr
pop
mov
and
stos
push
sbb
(bad)
jmp
pop
jmp
push
in
out
add
fisttp
call
fistp
push
jb
push
mov
sbb
push
fs
test
lea
popf
jecxz
fsub
and
adc
pop
mov
jge
stos
add
jmp
pop
pop
pop
pop
adc
jo
or
jno
xor
aaa
sbb
lock
or
push
add
push
imul
jo
arpl
jne
push
sub
sbb
push
cs
push
int3
jmp
xor
add
add
inc
sti
jne
sub
jmp
punpcklbw
(bad)
clc
push
leave
adc
or
or
mov
sbb
inc
xor
imul
or
adc
mov
(bad)
sbb
loop
sub
cmp
pop
(bad)
jg
lahf
fld
fldl2e
fmulp
fld
frndint
fsubr
(bad)
lock
faddp
xchg
sti
outs
(bad)
fscale
fstp
pop
ret
aas
in
cs
fwait
and
pop
mov
js
pop
pop
scas
push
or
fnstcw
mov
or
ins
fistp
add
fldcw
pop
cmp
movs
jmp
mov
dec
lods
test
sub
add
jmp
ins
jmp
scas
jae
(bad)
rcr
jmp
cmp
sub
sahf
pop
cmp
cmc
xor
and
lea
hlt
lds
pop
aas
mov
sbb
jl
mov
mov
cmp
mov
ja
and
outs
icebp
icebp
call
lock
adc
and
(bad)
lahf
jmp
cmp
das
gs
or
(bad)
fist
mov
add
jb
cmp
ja
mov
mov
jmp
pop
inc
add
rep
or
enter
test
or
fld
sbb
retf
jbe
addr16
(bad)
cld
mov
mov
inc
inc
leave
xor
push
mov
aas
std
into
shr
je
lock
fnstenv
dec
je
out
test
sbb
cmps
or
std
jg
adc
add
and
je
mov
cmp
jne
push
adc
aaa
dec
adc
sahf
adc
add
jne
stos
outs
jnp
sbb
js
cmp
cmp
jmp
adc
jmp
sbb
push
outs
mov
mov
jmp
fs
push
add
jmp
add
adc
fst
shl
nop
stos
add
neg
sub
jo
jl
sbb
push
add
push
mov
pop
inc
push
mov
aaa
jmp
repz
repz
adc
adc
or
inc
cmp
xchg
mov
push
push
or
or
cmp
movs
mov
int
pusha
mov
add
cmp
je
mov
push
sub
repz
je
js
outs
pop
je
pop
das
(bad)
xor
arpl
push
push
pushw
jmp
sbb
or
sub
ja
cmp
ja
lea
aaa
push
add
gs
dec
sar
aaa
fmul
or
jmp
and
neg
jle
js
pop
sub
jmp
push
cmp
fsin
lds
xchg
iret
cmp
std
sahf
popa
jb
mov
mov
add
ja
ret
or
mov
retf
outs
or
pop
xor
shr
mov
aas
jg
mov
retf
mov
sub
sub
inc
mov
rcr
rcr
jae
or
add
jle
mov
movs
lahf
xchg
call
sub
scas
mov
cs
dec
fld
movs
and
fidiv
pcmpeqb
mov
cmp
popa
add
inc
aas
cmp
sbb
jge
mov
and
stc
sbb
fdivr
fstp
fld
adc
out
fs
and
fwait
bound
aas
jb
daa
lahf
mov
cli
or
daa
lahf
jl
pushf
or
ret
mov
adc
and
stc
adc
sbb
imul
rcl
xchg
and
inc
mov
out
ja
repnz
push
es
test
out
sub
out
jle
pop
jecxz
add
leave
sbb
mov
jg
inc
jbe
imul
cmp
mov
(bad)
mov
bound
fwait
jg
outs
cmp
xlat
fadd
outs
xor
xchg
push
(bad)
(bad)
(bad)
or
push
push
int3
into
sbb
ror
mov
push
pop
test
enter
(bad)
call
nop
mov
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
(bad)
(bad)
call
pop
(bad)
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
popf
imul
pop
js
inc
mov
stos
mov
cmp
or
(bad)
(bad)
(bad)
(bad)
mov
pop
out
sub
imul
(bad)
div
jl
xor
cmp
call
mov
dec
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
(bad)
(bad)
jmp
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
(bad)
(bad)
push
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
(bad)
(bad)
inc
or
add
cmp
xor
in
cmp
sahf
xchg
pop
cmps
call
push
mov
mov
popa
mov
mov
(bad)
repz
mov
dec
pop
fld
mov
push
pusha
les
outs
bound
xor
jle
stos
ds
xor
lea
mov
add
pop
fidivr
and
or
jmp
fwait
sahf
mov
sub
adc
in
inc
clc
jle
push
test
cmp
add
repnz
mov
ss
cmp
ins
dec
jl
inc
hlt
hlt
pop
hlt
push
data16
pop
mov
mov
pop
scas
or
out
jecxz
stos
test
and
push
clc
repnz
or
sar
push
add
push
add
inc
add
dec
lock
jg
add
inc
add
add
jb
ins
add
outs
add
inc
cmp
out
add
jo
push
dec
add
mov
push
add
jae
imul
popa
inc
jne
add
fwait
mov
mov
sbb
cmpxchg8b
pop
add
mov
push
jp
das
test
xchg
dec
clc
mov
nop
sbb
js
mov
lea
addr16
icebp
inc
in
adc
push
sbb
call
clc
aam
fdivr
loope
xor
xchg
ret
outs
nop
or
ins
mov
cmp
jmp
pop
cmps
mov
inc
rol
add
sahf
and
sbb
adc
aaa
cs
or
and
test
call
xor
movups
out
mov
add
jle
je
push
stos
test
pop
mov
or
push
jmp
adc
cs
cli
xlat
stos
mov
xor
push
shr
dec
pop
mov
pop
and
rep
mov
mov
sub
sar
xchg
add
sub
in
cmp
je
pop
mov
std
pop
fmul
sbb
sahf
push
mov
mov
fild
loop
push
sbb
jne
jne
imul
std
mov
mov
sub
pop
lock
pop
mov
or
add
(bad)
jb
(bad)
add
add
jmp
and
jl
adc
adc
les
add
push
scas
push
fisttp
clc
adc
or
loope
mov
sub
das
fs
xor
mov
stos
add
ds
je
mov
mov
pop
sub
pop
lea
push
sbb
xchg
ins
clc
push
out
call
xchg
cmps
pop
aas
xor
int
add
adc
lods
sub
outs
fcmovu
mov
xor
jb
cmp
jne
push
or
jne
cmp
mov
inc
push
pop
xor
xor
lds
and
or
cmp
ss
cmps
outs
call
cmp
je
mov
leave
jne
mov
or
nop
push
xchg
jmp
bnd
mov
pop
mov
mov
mov
or
test
movs
js
rol
sub
inc
cld
pop
xchg
push
mov
cmp
call
out
mov
test
(bad)
xor
das
mov
dec
or
es
lods
mov
or
xor
cmp
pop
clc
sbb
xor
jl
cmp
push
mov
rol
add
pop
fdivrp
and
cmp
lock
add
adc
inc
(bad)
mov
mov
dec
pop
loopne
push
inc
pop
push
cwde
mov
cmp
dec
data16
push
inc
add
ret
dec
lods
mov
inc
fcom
push
fsub
mov
rcl
push
adc
push
ja
leave
xor
mov
adc
jo
rcl
sub
cmp
mov
dec
jne
or
pop
cld
neg
jmp
push
jmp
push
lea
popa
mov
out
(bad)
mov
jmp
xor
test
jne
xor
lsl
jecxz
jne
lock
inc
add
rcr
pop
int3
jmp
jmp
pop
addr16
sub
add
loopne
and
dec
inc
shr
fcomp
cmp
or
xor
call
daa
cmc
dec
in
jecxz
iret
push
pop
add
daa
sbb
pop
xchg
rcl
jg
scas
push
mov
xor
lea
into
sbb
je
dec
mov
inc
or
or
in
aam
pop
pop
xor
xchg
sub
mov
xor
adc
pop
xor
cmp
(bad)
adc
push
jg
aas
cmp
ror
xor
push
test
inc
xor
and
in
retf
or
scas
sub
jbe
stos
out
popf
or
popf
inc
cmp
es
push
and
push
pusha
sbb
or
pushf
imul
iret
xor
cmp
adc
add
and
or
cmp
push
add
add
adc
ret
adc
inc
ret
and
sub
add
cwde
outs
xor
(bad)
(bad)
(bad)
in
push
call
pop
and
adc
push
cmp
sbb
pop
imul
add
add
push
pop
jae
xor
pop
div
and
aam
or
sbb
jmp
or
mov
ret
push
das
sahf
rol
cmps
push
cdq
std
jno
in
jecxz
pop
xchg
in
xor
adc
loop
cmps
dec
xor
test
adc
lock
loop
lock
sti
jecxz
adc
cmp
inc
mov
fdiv
loop
je
cmp
adc
je
or
rcl
jg
adc
push
aam
add
je
dec
inc
xor
xor
sub
ja
lea
fmul
lea
sbb
nop
arpl
xor
mov
xor
push
(bad)
cli
push
jns
ret
cmc
sbb
jo
dec
xor
push
push
mov
push
sub
(bad)
or
mov
in
mov
push
idiv
jp
outs
jo
add
inc
add
push
add
sti
lods
paddusb
jmp
cs
xlat
mov
(bad)
idiv
adc
xor
or
xchg
dec
loope
cmp
or
add
mov
stos
ret
xchg
js
push
or
aad
gs
lea
mov
jl
xchg
sbb
inc
mov
ins
aas
dec
clc
cmp
loope
push
int3
cmp
mov
mov
xlat
rcr
inc
pop
xor
mov
mov
call
mov
dec
jne
pop
out
test
adc
inc
icebp
cs
inc
jmp
sbb
and
enter
bound
mov
adc
adc
test
add
inc
mov
lds
pop
adc
mov
dec
sbb
jmp
jno
push
push
movd
sbb
mov
loopne
ret
sub
mov
or
inc
or
call
std
lods
adc
add
in
nop
lahf
jecxz
and
sbb
sub
push
dec
test
dec
sti
jecxz
in
loopne
push
out
mov
in
xchg
stos
add
sub
retf
je
cdq
pusha
das
daa
inc
mov
je
jg
adc
mov
and
dec
jb
test
cli
imul
jg
or
mov
rcr
icebp
sbb
push
loopne
push
mov
ins
sub
fs
pop
pop
lea
pop
jmp
lahf
icebp
push
mov
adc
cmp
push
adc
loopne
pop
jg
jmp
sbb
cmp
jo
pusha
call
or
pop
data16
and
dec
push
pusha
aam
shr
aam
add
nop
into
add
mov
or
add
dec
lahf
loop
stos
lods
and
mov
or
pusha
add
jno
add
pop
or
int3
add
pop
mov
loop
mov
or
sbb
rcr
jb
pop
pop
test
xor
sub
xor
sbb
aas
or
inc
pop
scas
xor
stos
mov
push
add
stos
ds
je
cmp
push
sub
test
xchg
jmp
add
pop
in
inc
jb
je
jmp
cmp
cmp
adc
mov
jmp
sub
cmp
mov
jmp
mov
jmp
mov
(bad)
(bad)
dec
jmp
mov
jmp
push
sbb
into
or
fsubr
push
mov
jmp
test
or
dec
icebp
xchg
mov
pop
ret
fs
(bad)
mov
push
and
es
loop
shl
or
cmp
mov
or
inc
sbb
std
ror
cli
and
jno
fst
inc
push
mov
cmp
rcl
fld
mov
inc
stos
gs
mov
inc
push
push
inc
lock
or
fmulp
jo
mov
sbb
mul
inc
inc
sbb
loope
icebp
inc
cmp
bound
push
out
or
inc
pop
cmp
jne
and
or
out
mov
mov
imul
add
mov
adc
dec
mov
je
add
cmp
inc
sbb
mov
adc
mov
pop
or
push
pop
or
dec
fisttp
leave
idiv
xor
ds
jl
cs
cmp
jle
and
xor
inc
xlat
iret
cmp
jg
mov
add
mov
aam
jmp
call
sbb
fst
mov
mov
or
add
cmc
jp
cld
in
push
xchg
adc
mov
jbe
xchg
ret
std
mov
pop
and
add
push
sbb
je
cmp
dec
nop
aas
mov
sub
push
sub
sbb
cmp
jbe
add
push
add
mov
mov
inc
sub
dec
je
add
int3
pop
cmp
jmp
or
mov
(bad)
or
jne
pop
pop
jl
or
mov
inc
or
jg
and
xor
push
cmp
inc
inc
inc
inc
inc
inc
and
mov
stos
out
mov
mov
cdq
fnstcw
add
sbb
pop
ficom
dec
movs
fdiv
loopne
adc
and
xchg
fistp
mov
mov
jl
pusha
xlat
addr16
mov
outs
adc
ins
mov
(bad)
add
mov
mov
cmp
mov
neg
sbb
inc
leave
jmp
iret
fistp
rcl
cmp
xlat
jne
cmp
loopne
or
push
sbb
push
fild
fsubr
add
dec
inc
cmp
inc
xor
adc
in
jb
test
add
xor
outs
add
sbb
mov
sbb
sar
inc
outs
daa
or
rol
add
sbb
jg
mov
ds
jle
xor
imul
std
es
pop
call
sbb
icebp
xor
jne
lock
mov
xchg
add
xor
xor
aad
push
adc
or
ins
es
jne
lds
imul
or
outs
adc
pop
loope
jbe
cmp
js
or
pop
pop
repz
imul
(bad)
ja
sub
call
adc
add
ins
pop
ds
xchg
cli
lods
in
popf
rcl
mov
popa
xor
clc
dec
mov
cmp
mov
mov
ror
pusha
or
jne
mov
jnp
push
jl
cdq
inc
adc
sub
cmp
leave
push
push
cmp
mov
push
push
cmps
cmps
fild
pop
pop
call
xor
in
mov
pop
loopne
jmp
fldenv
sbb
mov
or
or
xchg
sbb
(bad)
pushf
adc
sbb
add
push
push
or
push
mov
popa
je
rdpmc
add
pushf
mov
cmp
lahf
adc
cmp
in
aas
pop
adc
dec
clc
dec
jl
lock
or
inc
hlt
pop
mov
adc
add
test
push
fmul
push
retf
fcmove
rol
loope
dec
cmp
jp
add
or
call
inc
jg
movs
(bad)
inc
inc
xor
addr16
aam
ret
dec
cld
inc
xor
add
cs
rcr
xchg
inc
clc
xchg
adc
test
and
pop
mov
jle
push
cmc
scas
push
xchg
jle
push
add
jo
out
(bad)
test
loopne
bound
mov
les
jmp
cld
inc
push
add
mov
hlt
data16
and
xchg
das
rcl
mov
mov
jne
xor
xchg
or
stos
pushf
(bad)
jge
call
outs
dec
jns
jo
sub
xor
repnz
outs
or
push
aad
shl
xchg
mov
or
push
test
arpl
mov
sub
es
imul
inc
mov
aaa
call
out
adc
fist
add
daa
fdiv
or
push
xor
cwde
ret
inc
pop
mov
in
mov
test
jmp
cmp
inc
add
xlat
add
jg
push
lock
sti
cmp
cmp
jg
(bad)
adc
push
add
xor
pop
inc
sbb
xor
ret
xchg
dec
outs
test
loopne
lds
xor
out
fadd
push
jle
dec
pop
dec
in
outs
loopne
das
dec
pop
sub
sbb
pop
scas
mov
hlt
lods
cmps
lahf
push
mov
push
mov
cmp
pop
ret
pop
inc
cmp
ret
inc
mul
push
cmp
je
push
je
or
mov
or
je
add
jmp
inc
(bad)
or
outs
add
jmp
cmp
cmp
or
or
push
push
scas
mov
jmp
or
add
mov
imul
push
jbe
push
sbb
scas
fcom
pop
add
shl
pop
cmp
loopne
loope
cld
(bad)
push
in
pop
cld
cmp
fnstcw
mov
inc
outs
test
push
add
dec
out
add
cmp
cmp
into
dec
fist
push
dec
dec
rol
sub
push
lahf
mov
mov
cli
adc
mov
dec
adc
imul
jle
push
cmps
mov
push
stos
inc
adc
mov
add
cmp
fs
outs
xor
sub
test
loopne
push
mov
shr
jo
cld
add
jo
and
dec
hlt
xor
cs
mov
adc
push
loopne
ror
push
jmp
or
adc
mov
shl
jo
mov
inc
arpl
mov
pusha
ss
ret
(bad)
rol
mov
(bad)
inc
fstp
adc
enter
or
xchg
fild
rcl
mov
ror
dec
add
aad
ins
jle
jnp
out
loopne
hlt
xor
xchg
sbb
push
mov
dec
aad
mov
sbb
outs
clc
add
jo
inc
inc
aam
outs
dec
sbb
push
jmp
push
sbb
jb
jp
or
mov
inc
or
add
dec
sbb
ins
sbb
sub
jmp
aas
sbb
in
mov
sbb
xor
sbb
pop
xchg
loopne
mov
sub
sub
lea
fwait
dec
sub
test
jno
pop
lea
cld
cmp
jne
iret
mov
dec
jmp
jmp
push
push
data16
add
add
arpl
jmp
sbb
test
xchg
mov
ins
jne
iret
(bad)
inc
ret
loopne
jne
mov
push
mov
ja
xchg
dec
jge
push
add
dec
jmp
lahf
clc
push
jnp
add
adc
mov
add
or
in
call
add
xchg
mov
mov
sbb
inc
inc
lea
pop
pop
test
jp
push
jmp
jns
cmp
push
mov
xchg
adc
jno
sbb
ret
pop
pop
dec
jge
push
in
(bad)
xor
pop
pop
test
or
lock
std
and
sub
push
adc
and
sub
movs
icebp
mov
sbb
xor
jne
bnd
fdiv
mov
xchg
pop
aad
pushf
(bad)
or
or
test
add
ret
bsf
shr
add
jns
jo
(bad)
fmul
adc
jmp
mov
call
sar
push
cld
ret
cmp
out
xchg
in
sub
inc
cli
inc
clc
popa
adc
add
scas
add
stos
mov
inc
daa
js
dec
test
push
lahf
pop
es
add
ss
into
sub
adc
dec
dec
sub
push
push
cmovs
rcpps
mov
aas
inc
dec
jl
cmp
jge
sub
sti
xchg
pop
jg
mov
(bad)
pop
loopne
xor
es
sbb
push
mov
add
push
jmp
mov
jmp
xor
pop
xor
sbb
sbb
xor
dec
sub
xor
or
dec
dec
jl
push
jge
add
add
sar
stc
add
lea
vdivps
aad
cmc
dec
hlt
push
sub
mov
lahf
jle
and
or
mov
je
fidivr
xor
dec
add
add
clc
add
stos
clc
loop
add
fcmovne
mov
adc
js
lock
out
add
jle
dec
std
push
add
or
or
jns
push
cmp
xor
pop
cs
and
in
or
jo
xchg
sub
retf
test
xor
inc
push
or
dec
push
add
and
daa
and
sub
xchg
push
sbb
cmp
fcomp
fadd
jmp
sbb
jne
sbb
arpl
je
stos
pop
and
mov
jns
ins
jp
jl
push
xchg
movs
mov
mov
clc
push
pop
mov
xacquire
mov
jmp
push
movs
dec
jecxz
mov
add
das
mov
inc
cmp
push
loope
adc
retf
retf
sub
lds
cli
dec
or
icebp
or
fldcw
jno
mov
xor
fnop
add
jmp
mov
xor
daa
push
push
das
loopne
and
push
sub
lahf
jmp
or
sbb
cmp
call
icebp
cmp
mov
or
data16
pushf
(bad)
dec
cmps
ins
arpl
cld
call
mov
sbb
hlt
jmp
lea
cmp
mov
mov
out
test
cld
mov
sub
jle
lea
xchg
(bad)
retf
dec
add
xor
fst
ret
fdiv
dec
shl
(bad)
in
sub
add
lahf
cmp
(bad)
ror
xchg
(bad)
clc
ja
cmps
mov
test
pop
push
mov
jns
and
nop
(bad)
dec
hlt
adc
les
cmp
mov
les
inc
mov
retf
and
fstp
cmp
int3
mov
cli
retf
cvtps2pi
or
pop
sub
dec
shl
inc
mov
add
adc
jl
cmp
push
and
pop
push
mov
ja
pusha
push
shr
jns
stc
cmp
mov
inc
dec
dec
add
pop
xor
(bad)
or
into
or
add
pop
and
stos
cli
or
pop
inc
and
push
sbb
imul
push
cmps
or
pop
das
or
mov
fst
call
jg
or
cmp
jge
xor
jmp
dec
cmp
movs
mov
sti
pop
iret
enter
mov
sub
cmp
and
in
add
jno
add
ins
mov
xchg
aas
add
cmp
jg
mov
xor
inc
xchg
push
(bad)
pop
pop
add
xchg
popa
push
cmp
fs
cmp
call
into
rol
fistp
in
dec
xchg
stc
out
inc
(bad)
xlat
sbb
movs
push
stos
push
mov
mov
jle
daa
mov
sbb
lods
pop
mov
push
loop
nop
out
mov
sahf
test
cmovno
push
js
xor
mov
push
sub
pop
and
push
loop
shl
xchg
push
cmps
les
lods
fidivr
cmp
ret
mov
stos
into
data16
dec
sub
es
stc
add
jmp
push
sbb
and
pop
sub
mov
cmp
dec
or
je
mov
pop
push
sbb
pop
pop
int3
pop
out
sub
int3
xchg
inc
dec
lods
das
scas
dec
jno
pusha
xor
fist
mov
pop
idiv
inc
push
loop
sub
jno
cli
or
(bad)
das
or
pop
xor
dec
in
inc
or
pop
mov
fbld
lds
jecxz
dec
sbb
std
xchg
mov
jns
(bad)
lock
cli
bound
cmp
or
pop
punpckhwd
sub
mov
pushf
mov
mov
cmp
jg
rcr
std
add
dec
mov
xor
jge
push
mov
lea
lea
add
loope
add
je
lods
and
pop
jbe
inc
paddusb
movs
adc
je
mov
mov
sub
mov
jo
frstor
add
add
mov
push
loope
sbb
dec
repnz
ins
nop
adc
and
mov
sti
inc
or
sub
mov
xor
pop
sbb
sub
cs
xlat
jo
and
ret
pop
xlat
sbb
push
jb
movs
jno
inc
in
hlt
outs
dec
fwait
or
dec
xchg
mov
jbe
or
lods
mov
push
mov
adc
repnz
ret
mov
pop
pop
ss
ss
in
in
and
jbe
and
or
push
or
fisub
inc
cmp
mov
arpl
sub
mov
mov
in
imul
and
ror
inc
aas
xchg
(bad)
je
cmps
mov
je
push
movs
sti
ror
or
int3
rcr
sbb
inc
movs
xchg
std
jge
push
shl
sub
inc
xchg
pop
sub
adc
jb
repnz
jecxz
push
in
call
pop
and
push
dec
sbb
test
out
cld
fwait
sbb
jp
jge
or
jo
cmp
ret
jg
popa
xor
test
sub
or
or
jmp
push
lock
xchg
add
sbb
add
pop
adc
pop
add
stc
cmp
mov
jmp
dec
cmp
fadd
test
cmp
(bad)
fdiv
pop
call
add
mov
test
daa
pop
add
cmps
and
(bad)
arpl
pinsrw
and
xchg
push
add
xlat
repnz
jo
sub
adc
or
pop
movs
inc
add
(bad)
jl
cmp
dec
push
outs
push
cmp
(bad)
sub
mov
call
adc
sub
loop
inc
or
leave
push
xor
xchg
and
lods
pop
sbb
and
repnz
shl
mov
jne
push
add
add
jmp
(bad)
(bad)
cmp
jge
loopne
cdq
jb
js
mov
jo
jp
dec
test
jge
sub
out
mov
jnp
imul
inc
mov
dec
sub
cmp
adc
push
add
ficom
mov
sub
lods
mov
outs
mov
test
jno
dec
add
xor
push
test
or
xor
pop
mov
mov
cmp
jo
sahf
sub
add
push
stos
push
adc
xchg
fsub
outs
call
pop
lock
test
pop
push
ss
mov
push
adc
mov
(bad)
and
sub
jle
retf
sti
mov
shl
cmps
mov
ss
pop
jo
pop
mov
sub
lock
sbb
test
je
gs
and
out
push
mov
add
push
dec
inc
shr
icebp
adc
fiadd
sbb
inc
push
or
(bad)
sub
(bad)
lea
xlat
fidivr
mov
xchg
faddp
out
mov
cld
mov
sbb
ins
or
push
ins
cmp
mov
xchg
js
mov
push
cmp
or
xor
sar
sub
cmp
jne
hlt
sub
push
mov
je
xor
leave
dec
dec
fmul
scas
movs
arpl
dec
push
sbb
or
leave
push
and
ret
call
test
adc
in
pop
sbb
js
out
sbb
mov
mov
enter
or
mov
xlat
jmp
adc
adc
xor
and
(bad)
jl
mul
ins
dec
mov
pop
adc
cmp
xor
mov
push
xchg
xor
nop
ins
xor
push
mov
push
cmp
jmp
jl
push
mov
js
push
inc
test
test
fstp
push
adc
cdq
loop
push
(bad)
(bad)
jg
push
mov
xchg
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
es
test
je
mov
ror
fwait
mov
add
mov
(bad)
jmp
or
adc
jmp
push
mov
mov
mov
add
mov
out
push
add
pop
cmp
pop
mov
xchg
imul
sbb
sbb
pop
inc
scas
pop
inc
mov
dec
mov
mov
call
adc
mov
call
add
push
jmp
sub
jns
out
inc
jb
pop
push
imul
adc
sar
pop
aas
js
out
cmp
fdivr
mov
int
xchg
rcr
dec
imul
xchg
push
pop
or
jmp
es
jo
sub
jmp
jb
xchg
adc
inc
lock
inc
mov
sub
inc
fcomp
shl
jmp
mov
loopne
dec
unpckhps
pop
jns
add
inc
jg
movs
and
adc
cmps
(bad)
and
cmp
or
cmp
repz
pop
outs
jp
bswap
pop
mov
xor
xor
add
pop
dec
pop
mov
xchg
adc
pop
movs
xor
pop
sbb
je
or
push
ins
xor
sbb
and
pusha
and
mov
add
mov
dec
jo
loop
add
pop
movs
sbb
add
add
xor
inc
add
mov
cmp
cmp
jae
jae
or
je
or
popa
or
popf
(bad)
test
sete
(bad)
mov
pop
sub
dec
jb
adc
jnp
jb
iret
push
es
sahf
dec
nop
jmp
and
dec
mov
xor
push
pop
mov
retf
add
je
sub
popa
pop
ror
inc
popa
ror
in
fcomp
add
sar
xor
mov
xchg
enter
ds
lock
shl
test
sbb
mov
inc
pop
or
sbb
and
inc
stos
add
mov
mov
and
fs
dec
jl
stos
mov
mov
and
outs
(bad)
jle
dec
jne
sub
int
xor
jns
dec
nop
jmp
inc
inc
movs
imul
push
lds
cmp
cmp
mov
cmp
inc
call
jecxz
mov
xor
add
cmp
add
fcmovne
push
cmp
jmp
iret
jae
adc
sbb
cmp
push
sub
mov
push
mov
(bad)
lahf
in
adc
pop
lock
pop
bound
dec
and
xchg
pop
push
xchg
aam
mov
push
and
bound
mov
pop
and
push
pop
inc
dec
sbb
or
(bad)
out
(bad)
rol
or
popf
inc
jmp
cmp
ss
sbb
xor
push
inc
jne
mov
gs
inc
and
xchg
sub
push
fldcw
je
out
ror
sbb
or
test
sbb
or
jmp
pop
aas
or
cmp
clc
dec
dec
test
push
popa
add
sub
pop
loope
add
loop
mov
pop
repnz
and
aaa
dec
hlt
cmp
inc
call
stos
pop
xchg
call
push
cmp
dec
ds
sub
lods
test
in
add
jns
jne
mov
les
fcom
mul
mov
sti
or
(bad)
frstor
add
adc
push
jmp
mov
jmp
jno
(bad)
pop
xor
xor
sub
xchg
(bad)
push
sbb
sar
(bad)
xor
xor
sub
sbb
jne
cmp
jb
nop
loope
fidivr
xor
div
xchg
add
retf
out
bound
push
ror
shr
rcr
fcomp
div
mov
add
shl
(bad)
push
mov
mov
scas
clc
in
add
cli
sub
cwde
or
sbb
cwde
(bad)
loope
xchg
cli
call
nop
jmp
sbb
leave
jne
or
je
or
jg
and
push
jns
neg
neg
sbb
or
xor
neg
neg
and
sbb
fld
mov
mov
std
pop
and
rcl
(bad)
rcl
cmp
jb
mov
fidiv
sub
sbb
inc
loop
sbb
mov
test
pop
fmul
pop
fcom
hlt
repnz
sbb
push
ror
push
jnp
jns
ror
inc
lock
jns
or
cmp
imul
inc
dec
mov
js
and
inc
out
iret
fbld
jne
add
push
in
inc
jmp
push
sub
mov
pop
mov
cwde
and
inc
push
movzx
dec
xor
dec
add
add
mov
jae
and
or
pop
mov
je
jcxz
cmp
mov
push
or
xlat
or
lea
stos
ss
fiadd
movups
jg
stc
imul
jbe
adc
stc
push
jb
cld
std
mul
inc
icebp
sub
jmp
getsec
jmp
add
(bad)
mov
fisttp
(bad)
idiv
push
lods
and
cld
jbe
jmp
jg
pushf
cld
jmp
movs
ret
add
adc
sub
add
das
outs
inc
xor
hlt
push
je
icebp
loope
rcr
(bad)
fimul
lock
inc
(bad)
xchg
add
popf
push
jae
and
jecxz
popf
out
aas
hlt
mov
js
mov
lock
sbb
jg
bound
mulps
mov
cmp
sbb
aam
rcl
ja
inc
fbstp
xchg
test
pushf
sar
je
(bad)
push
ret
add
add
in
pop
sti
jmp
in
mov
icebp
jns
cs
jg
fist
mov
pop
imul
or
retf
or
dec
(bad)
loopne
pop
add
and
cmp
pop
mov
lods
or
cwde
es
aad
mov
mov
or
lock
mov
add
(bad)
fcom
add
call
add
mov
mov
idiv
cmp
je
js
das
test
dec
in
shr
mov
xor
xchg
jge
add
xlat
or
scas
add
mov
sub
sbb
loopne
pop
add
pop
jmp
jmp
loope
je
ins
ret
out
push
int
xchg
in
mov
mov
test
xchg
sub
movs
adc
into
stos
or
push
push
dec
rcr
or
mov
cmp
ins
fwait
or
push
lock
sahf
or
add
cmps
je
ror
cs
add
dec
xor
and
adc
cmp
test
add
in
sub
push
dec
jne
enter
and
scas
call
cmp
jne
mov
dec
clc
jne
xchg
push
adc
add
jp
mov
inc
push
adc
std
pop
outs
loopne
out
sbb
scas
js
shl
retf
clc
jo
cmp
pop
pop
pop
mov
inc
sbb
cs
in
inc
sub
add
adc
push
cld
daa
je
out
inc
sbb
ins
inc
jg
dec
pop
aam
sub
jne
push
test
dec
mov
test
les
jle
adc
mov
(bad)
inc
sbb
das
outs
in
add
out
int3
sbb
mov
and
jae
or
je
lds
retf
ins
jo
clc
jmp
push
cmps
add
mov
repnz
fld
adc
data16
fstp
sahf
(bad)
pop
jne
push
push
xor
dec
xchg
sti
and
and
jle
add
scas
cmp
jg
inc
push
pusha
mov
jecxz
movs
push
push
das
icebp
test
add
shl
mov
sub
cmp
sbb
cmp
adc
pop
jne
add
lock
fsubr
mov
daa
adc
(bad)
stos
sbb
mov
sub
sar
jns
adc
cmps
ins
aaa
nop
aam
in
mov
aad
mov
pop
shr
or
imul
xor
pop
nop
jge
push
push
and
mov
mov
push
cmp
inc
int3
std
out
dec
jle
lea
jle
jg
mov
ins
out
and
ret
dec
push
push
fld
loope
inc
add
push
pop
test
(bad)
mov
mov
jb
cmps
xor
xor
cs
mov
add
inc
gs
outs
outs
addr16
popa
je
add
std
push
push
daa
xchg
aam
mov
(bad)
push
lock
dec
mov
je
es
push
push
push
add
dec
mov
je
cmp
inc
ja
pusha
inc
xor
and
cld
pop
sbb
in
inc
xor
repnz
dec
and
add
pop
cmp
pusha
pop
aam
adc
add
ss
adc
mov
aas
into
cmp
mov
xor
push
leave
and
or
movs
and
dec
and
sbb
add
pop
xlat
add
jo
dec
xor
jl
inc
dec
mov
out
mov
stos
adc
js
repz
fisttp
nop
adc
add
pop
lock
or
mov
cmp
add
fdiv
adc
ffree
cmp
xchg
or
sub
sar
jl
js
(bad)
ror
ret
sub
push
retf
js
jnp
dec
push
pop
div
jg
add
bnd
cmp
push
add
ja
jb
out
out
mov
adc
and
inc
cmp
jae
mov
inc
movs
cmps
arpl
ud2
cld
xchg
pop
adc
dec
mov
lea
jmp
xchg
sar
test
sti
dec
jne
sbb
lds
mov
mov
add
or
and
(bad)
aam
fild
inc
inc
sbb
or
nop
push
mov
dec
push
retf
or
fstp
mov
adc
xchg
cs
push
jmp
xchg
test
mov
inc
xchg
push
add
mov
and
inc
add
mov
cmp
jb
stos
cmp
jno
or
loope
mov
mov
pusha
pop
clc
cmp
jne
mov
cmps
addr16
mov
call
mov
js
add
fisubr
sbb
add
or
or
push
cdq
mov
inc
sbb
outs
mov
add
push
mov
dec
add
ds
pop
and
mov
pop
ret
sbb
and
add
out
cmp
add
pop
sub
adc
push
sub
sub
xchg
pop
add
push
out
pop
push
xchg
mov
cmps
in
push
test
js
inc
fistp
or
arpl
push
aas
ins
jns
sub
mov
inc
mov
cld
call
mov
fcmove
adc
scas
jge
fndisi(8087
std
jbe
cdq
pop
or
push
cs
gs
loope
mov
xchg
shl
cmp
push
(bad)
push
jmp
pusha
jbe
cmp
jb
sub
add
adc
and
clc
out
mov
and
jbe
test
adc
mov
push
loop
lds
rol
(bad)
sub
sbb
mov
jl
inc
fsubr
push
push
and
div
push
push
cwde
dec
imul
sub
push
call
and
or
add
shr
or
cdq
push
shr
xchg
repz
(bad)
adc
daa
and
add
dec
fmul
adc
into
mov
cmp
sub
(bad)
data16
or
xor
push
and
stos
add
and
mul
in
mov
ror
jmp
sbb
lock
push
pop
lahf
mov
fiadd
push
xor
push
das
xchg
dec
or
jnp
xor
and
xchg
data16
(bad)
femms
inc
adc
sub
dec
mov
jb
push
mov
jb
pop
mov
xchg
mov
hlt
ins
je
dec
sbb
or
in
outs
enter
mov
xor
jecxz
sbb
in
hlt
dec
jmp
or
dec
push
adc
mov
(bad)
pop
(bad)
push
push
sbb
sbb
jle
sub
xchg
clc
xor
sbb
and
scas
dec
nop
push
dec
sub
popa
test
(bad)
je
dec
xor
test
dec
add
jne
dec
jp
add
sbb
dec
add
xor
cmp
(bad)
cld
inc
pop
add
lock
aam
out
ins
(bad)
push
mov
adc
test
and
add
push
or
mov
sub
add
add
add
add
mov
loopne
add
dec
and
cwde
mov
test
and
xor
push
push
push
and
mov
add
inc
sbb
cmp
jne
mov
jae
adc
mov
or
push
sub
cmp
les
mov
cmp
cld
push
clc
or
dec
es
fld
jg
lods
(bad)
adc
ret
or
cmp
jge
cmp
cmp
push
push
sub
jo
mov
hlt
(bad)
mov
ins
(bad)
cmp
dec
mov
loop
jnp
jo
cmps
adc
or
mov
inc
mov
dec
inc
and
shl
mov
mov
cmps
jge
je
push
mov
neg
and
ret
mov
aaa
nop
sti
rol
mov
mov
push
mov
mov
or
sar
cmp
cmc
mov
sub
mov
mov
clc
lea
sub
jb
je
dec
je
push
sbb
and
pop
inc
mov
sub
loopne
and
or
or
and
cmps
cld
push
add
cmp
les
mov
mov
aam
call
jns
lock
lods
sbb
call
add
dec
mov
fadd
cmp
ror
fucomi
cmp
xor
inc
nop
sbb
push
cmp
mov
scas
ss
add
repnz
pop
lock
or
xchg
push
sahf
push
adc
jmp
inc
mov
dec
sar
xlat
add
mov
cwde
or
push
adc
std
sbb
popf
dec
push
test
(bad)
(bad)
(bad)
(bad)
aad
je
xor
pop
mov
ror
mov
ins
scas
cmp
add
dec
or
dec
or
cmp
sbb
push
jmp
push
bound
outs
mov
mov
in
in
add
daa
lods
add
push
or
ins
data16
fcmovnb
ret
push
or
adc
mov
mov
add
or
add
push
mov
pop
stos
push
outs
idiv
and
or
xchg
push
push
or
or
push
jge
xor
int3
xchg
cli
push
add
or
movs
mov
bound
shl
adc
pop
add
sub
dec
add
push
push
add
ror
add
or
jge
aad
add
xlat
jle
push
add
add
repz
push
push
adc
add
pop
mov
daa
mov
adc
aas
mov
add
cmps
add
fcomp
mov
cmp
sub
or
xor
ss
xor
add
push
add
push
or
inc
adc
pop
jp
inc
and
pop
add
cmp
and
out
dec
jmp
gs
adc
ficomp
or
jb
jns
es
ins
ficom
adc
inc
push
fistp
inc
outs
arpl
inc
gs
jne
je
dec
outs
je
imul
mov
imul
arpl
or
sti
imul
sbb
jb
xor
sbb
call
push
(bad)
outs
ins
bound
outs
js
das
clc
(bad)
fiadd
push
imul
or
cmp
andps
outs
dec
inc
add
xor
je
dec
add
cmp
jle
and
(bad)
js
cmp
cmp
jo
push
cmp
pop
push
cmp
cmp
push
dec
inc
inc
xchg
xchg
xchg
or
xor
mov
adc
jge
add
rol
aam
sbb
add
cmp
rcl
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
loopne
xor
lock
leave
loope
nop
or
xor
dec
call
pushf
pushf
pushf
(bad)
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwde
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
dec
jp
xchg
pop
mov
cmp
ret
jb
or
sbb
add
js
and
test
out
mov
xchg
ret
and
xchg
xchg
nop
mov
daa
daa
mov
loopne
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
mov
xchg
daa
cld
(bad)
hlt
pop
lock
daa
daa
daa
in
call
daa
daa
(bad)
aam
daa
daa
daa
daa
int3
enter
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwde
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
jo
pusha
pop
mov
xchg
daa
adc
push
push
cmovl
daa
daa
daa
dec
inc
inc
cmp
daa
daa
daa
cmp
sub
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
cld
xchg
xchg
xchg
xchg
fdivrp
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
(bad)
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
ins
push
xchg
xchg
pop
pop
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
xchg
xchg
xchg
xchg
sbb
or
leave
enter
(bad)
hlt
pop
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sar
mov
test
(bad)
jb
jb
pushf
cwde
xchg
daa
daa
pop
jb
mov
daa
cmp
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
fdivr
xchg
xchg
xchg
xchg
hlt
lock
call
in
(bad)
daa
mov
xchg
aam
int3
mov
daa
daa
sar
mov
test
cs
movs
push
pushf
cs
in
xchg
nop
mov
dec
dec
mov
inc
js
je
leave
leave
leave
leave
jo
fs
leave
leave
leave
leave
pop
pop
push
push
leave
leave
leave
leave
dec
dec
inc
inc
leave
leave
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
enter
sbb
adc
cmp
mov
add
mov
(bad)
hlt
pop
lock
cmp
in
call
cmp
(bad)
aam
daa
daa
mov
bswap
enter
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwde
xchg
nop
jb
and
mov
jb
jl
je
add
push
fs
pop
pop
retf
leave
leave
leave
push
push
dec
dec
sbb
or
jmp
or
inc
(bad)
fwait
add
cmovge
cmps
pusha
mov
call
out
or
adc
sbb
mov
shr
pusha
jae
pop
inc
add
adc
test
aaa
(bad)
mov
fstp
add
or
mov
in
mov
or
add
lahf
sbb
adc
and
mov
lock
push
push
push
gs
in
jae
cwde
or
or
aas
inc
inc
cmp
inc
popa
jge
(bad)
mov
(bad)
ins
add
push
or
inc
sub
imul
lock
dec
add
inc
fisubr
mov
dec
pop
pop
cmps
push
rol
pop
sahf
dec
fistp
mov
cmp
push
push
add
out
mov
push
xor
or
fsubrp
pop
inc
(bad)
pop
push
dec
add
push
push
lods
inc
into
lods
call
inc
retf
sahf
ss
icebp
or
movzx
jnp
lods
pop
mov
push
adc
or
and
loopne
or
sub
ds
dec
lods
ins
add
and
mov
mov
or
scas
push
add
(bad)
pushf
sub
or
or
or
xchg
xchg
add
inc
push
mov
and
xchg
xor
or
dec
addr16
xchg
xor
dec
inc
imul
gs
pushf
pop
clc
and
xchg
pop
push
inc
arpl
add
test
(bad)
arpl
xor
lods
sub
and
ret
test
dec
adc
bound
cmp
adc
lods
and
or
add
add
dec
mov
psllw
hlt
cmc
pushf
pushf
pushf
pushf
div
clc
stc
pushf
pushf
pushf
pushf
cli
sti
cld
std
pushf
pushf
pushf
pushf
(bad)
jmp
loope
pushf
pushf
pushf
loop
in
pushf
pushf
pushf
pushf
out
call
pushf
jmp
pushf
out
out
rcl
pushf
pushf
pushf
pushf
rcl
aam
pushf
pushf
pushf
pushf
(bad)
xlat
fcomp
pushf
pushf
pushf
pushf
fcmovu
(bad)
pushf
pushf
pushf
pushf
(bad)
rol
pushf
pushf
pushf
ret
lds
enter
pushf
pushf
retf
int
pushf
pushf
pushf
into
iret
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
cmps
cmps
test
pushf
pushf
pushf
pushf
stos
stos
lods
lods
pushf
pushf
pushf
pushf
scas
scas
nop
xchg
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
xchg
cwde
cdq
pushf
pushf
pushf
pushf
call
pushf
sahf
lahf
add
add
xchg
pushf
mov
pushf
pushf
mov
pushf
pushf
jb
je
pushf
pushf
pushf
pushf
jbe
js
pushf
pushf
pushf
pushf
jp
jl
pushf
pushf
pushf
pushf
jle
pusha
popa
xor
sub
jae
add
add
jb
sub
jne
ret
add
scas
int3
cmp
rcl
mov
lea
dec
cmp
xor
and
mov
mov
or
push
pop
dec
dec
or
add
imul
shl
jo
loopne
shl
adc
sbb
cmps
sti
adc
inc
sti
nop
mov
loopne
ss
mov
cwde
xchg
retf
and
push
inc
fs
or
sub
add
and
add
nop
sbb
or
jg
mov
out
adc
rcl
pop
mov
push
mov
mov
(bad)
std
mov
cdq
test
sub
in
or
cmp
mov
sbb
add
mov
adc
adc
dec
call
aam
cmps
cmp
jl
push
adc
adc
push
(bad)
(bad)
cli
dec
xor
sub
add
add
inc
(bad)
aas
fisttp
xor
sub
je
ins
dec
adc
cli
fmul
jne
fstp
sbb
adc
cmp
add
mov
dec
sti
dec
add
fstp
cmp
cld
fcom
cmps
lods
and
pop
repnz
inc
mov
xor
sub
ftst
fisubr
push
gs
fmulp
sbb
push
add
sahf
sbb
add
and
push
jne
mov
loop
mov
cmp
popa
xchg
clc
or
add
add
(bad)
lods
(bad)
or
sub
in
ret
cmp
sbb
test
add
in
add
add
les
xchg
cli
fcomp
jne
ss
sbb
jge
fwait
adc
xchg
push
loopne
add
aaa
jbe
ret
mov
ror
hlt
aam
and
push
fsubr
adc
loopne
call
mov
cld
paddd
sar
adc
jge
fwait
jp
inc
rcr
les
les
push
enter
ror
loopne
call
aas
shr
lea
sbb
and
setae
jmp
sub
mov
xor
shr
sti
and
add
into
leave
rcl
push
stc
pushf
pop
fld
jg
stos
xchg
inc
fld
pop
movd
das
in
subps
sub
sbb
pop
pusha
sub
pop
mov
icebp
aas
dec
cmp
inc
fstp
or
fcomp
cmc
adc
gs
or
dec
shl
adc
or
cdq
nop
push
ins
xor
push
push
clc
jae
aaa
fistp
adc
add
push
je
push
fcmovu
shr
xchg
dec
adc
push
inc
sbb
sar
push
or
aam
push
mov
sub
ins
cwde
stc
pop
nop
cs
sbb
add
pop
inc
shl
ins
daa
xor
and
mov
mov
lock
cmp
mov
dec
inc
cmp
push
push
add
add
or
arpl
js
mov
push
inc
mov
sbb
pusha
and
mov
aas
rol
inc
int
idiv
push
inc
inc
bound
je
and
iret
sub
and
jo
and
ss
mov
or
sahf
inc
dec
add
xlat
nop
nop
fild
xchg
mov
dec
dec
out
xor
sbb
(bad)
imul
outs
loop
jb
fisubr
inc
leave
inc
je
xchg
push
xchg
or
xchg
rcl
cdq
and
loopne
adc
adc
push
or
dec
adc
push
or
mov
pop
xor
(bad)
out
xlat
rcl
nop
pushf
hlt
or
imul
pop
ficom
adc
in
adc
popa
outs
addr16
xlat
push
sub
dec
outs
inc
inc
in
jbe
jb
ins
outs
ja
addr16
inc
mov
dec
mov
add
call
leave
xchg
je
adc
outs
jbe
ins
imul
nop
fsub
fstp
push
mov
inc
fisub
push
sub
mov
add
test
popa
push
xlat
push
stos
loope
mov
repnz
sbb
pop
and
rol
push
maxps
imul
xchg
inc
jns
mov
inc
idiv
fild
add
inc
outs
outs
jb
adc
ins
sbb
je
call
pusha
jae
push
imul
popa
and
test
call
ins
inc
add
dec
sbb
dec
loope
leave
sbb
inc
fisub
jp
imul
mov
cs
or
je
in
(bad)
mov
sub
push
xor
xchg
xchg
push
test
mov
cwde
fbld
push
push
xor
inc
popa
ror
push
or
cmps
xchg
cmp
jns
sbb
jbe
test
jl
or
xchg
fld
in
hlt
js
and
or
push
ror
adc
xchg
pop
sbb
pusha
sbb
inc
(bad)
push
popa
data16
pop
xchg
pop
mov
out
dec
mov
das
mov
je
sbb
adc
je
adc
dec
(bad)
lds
rol
mov
sbb
outs
repz
jne
jo
dec
mov
mov
add
cmp
ins
dec
mov
je
psrlw
cld
inc
xor
mov
add
add
and
cmpxchg
mov
cmps
and
dec
stos
adc
jb
popa
fs
add
dec
outs
xchg
jne
int3
add
je
jbe
jmp
(bad)
pop
popf
test
inc
push
cmp
jns
xchg
aam
push
ret
push
int
mov
test
adc
sbb
fisttp
jno
cmp
pop
adc
(bad)
ins
pop
hlt
xlat
aas
add
test
lods
mov
fwait
lods
data16
dec
mov
push
push
mov
jne
jle
and
xchg
outs
arpl
data16
dec
mov
mov
push
mov
stos
inc
dec
popa
jns
out
pop
inc
daa
or
pop
sbb
aaa
and
inc
inc
inc
outs
arpl
imul
rcr
movs
adc
adc
cld
push
fs
test
adc
and
and
push
push
cmp
sbb
push
dec
pusha
cmp
iret
mov
or
xchg
push
pop
cwde
fiadd
leave
shl
out
jl
mov
pop
jb
bswap
test
push
push
inc
aaa
sub
push
jb
inc
push
and
adc
jo
js
xor
cmp
lds
pop
fsub
loopne
cld
jnp
cmps
stc
or
es
pusha
jmp
enter
push
inc
and
and
jb
in
and
pushf
les
push
inc
imul
ins
sub
movs
and
out
add
mov
les
outs
xchg
xchg
add
sbb
shr
fwait
push
test
or
lods
test
add
ins
or
femms
retf
mov
mov
or
(bad)
jns
cmp
mov
pop
iret
push
aas
lock
mov
pop
cmp
fs
push
push
adc
pop
adc
or
mov
setns
rcr
or
leave
mov
je
adc
mov
(bad)
mov
in
dec
inc
mov
add
jae
xor
js
icebp
bt
jb
inc
push
or
(bad)
push
or
xchg
mov
in
dec
test
hlt
pop
xchg
pop
out
cli
add
xor
mov
icebp
and
and
add
jne
pop
or
cli
sbb
or
mov
xor
and
mov
fcomp
push
mov
inc
inc
(bad)
dec
sar
imul
push
(bad)
jmp
cmps
xor
out
add
lock
add
out
add
pop
out
(bad)
cmp
leave
mov
push
sbb
mov
xor
pushf
pop
ss
daa
add
mov
push
arpl
mov
sub
or
pop
pop
cld
pop
pop
sub
jmp
jecxz
fdivr
push
xor
pop
shl
std
das
shl
and
loope
adc
push
add
xchg
bndstx
add
(bad)
pusha
div
and
mov
adc
shl
ja
sub
ret
ins
pop
gs
push
cwde
xchg
sub
mov
sub
clc
add
(bad)
(bad)
jge
or
inc
fdivr
jb
push
fiadd
jg
(bad)
mov
sub
pop
add
pop
adc
pop
sub
and
rol
aaa
sub
stc
push
jg
and
sbb
pop
hlt
push
mov
pop
jg
mov
pop
cmp
jne
inc
adc
mov
sbb
dec
ret
loopne
lea
idiv
add
into
xor
pop
push
push
push
mov
push
mov
shl
mov
sub
push
jmp
and
xor
fdiv
je
adc
pop
shl
cmp
cmp
je
data16
and
mov
popa
jl
or
mov
and
and
fdiv
pushf
mov
outs
and
or
inc
push
mov
jl
mov
pop
ins
xor
cmp
jmp
push
dec
sbb
stos
and
cmps
sbb
pop
or
and
dec
cld
jne
cmp
mov
nop
sbb
iret
and
inc
or
sub
and
int
xor
xor
jmp
or
push
jecxz
xor
mov
fild
add
in
sub
mov
enter
mov
mul
push
mov
es
and
and
call
lock
or
sahf
imul
ss
aad
lea
pop
sub
sbb
sbb
bound
ins
in
mov
push
sub
mov
nop
xchg
mov
pop
test
lahf
add
je
clc
inc
cmp
jl
and
and
iret
sub
es
je
jmp
dec
sub
sahf
imul
cmp
sub
inc
mov
or
adc
mov
pusha
and
adc
shr
outs
dec
add
inc
rcl
mov
shl
mov
daa
fldcw
cmp
push
inc
mov
pushf
add
pop
cmp
add
(bad)
pop
add
cmp
test
adc
add
mov
call
test
add
sbb
aam
imul
adc
inc
xor
or
test
mov
xlat
out
(bad)
mov
fadd
jle
aad
test
mov
or
adc
nop
sbb
xor
and
xor
mov
push
cmp
or
(bad)
ins
mov
mov
das
inc
xlat
and
cmps
call
sbb
xchg
inc
and
add
mov
inc
or
jecxz
prefetcht1
or
retf
retf
add
lock
in
inc
cs
int3
cli
inc
mov
pop
jne
xchg
ds
enter
add
out
add
mov
mov
pop
(bad)
jg
(bad)
shl
int3
adc
sbb
or
cs
mov
jne
jmp
repz
jmp
js
cdq
or
fcmovb
mov
aam
leave
and
mov
pop
jmp
(bad)
fcomip
or
jne
or
jns
neg
mov
inc
dec
mov
ret
mov
or
fnstsw
cmp
push
pop
mov
push
jne
pop
pop
sub
out
(bad)
jmp
retf
add
mov
sub
jmp
mov
dec
jne
push
sbb
adc
sub
mov
shl
add
sbb
stos
mov
scas
in
jmp
xor
add
jbe
inc
mov
mov
aaa
mov
shl
in
adc
leave
push
mov
mov
pop
rcr
xchg
mov
scas
cmp
inc
push
add
or
adc
pop
mov
cmp
pop
push
sub
retf
mov
mov
jbe
inc
cmp
repz
xor
mov
neg
xor
add
and
data16
cmps
mov
movs
add
add
xor
xor
mov
mov
push
in
movs
mov
xchg
daa
and
push
fbld
push
outs
pop
fadd
faddp
adc
sbb
ins
shr
loop
loope
push
mov
dec
add
in
xchg
push
cmp
ror
(bad)
jp
sbb
loope
add
ret
ffree
ffree
ffree
pop
jne
sar
jge
push
inc
sbb
jge
or
inc
push
(bad)
xor
inc
mov
(bad)
in
inc
jmp
lods
rol
ror
mov
and
add
scas
loope
data16
xchg
aad
(bad)
add
enter
sbb
cld
call
and
test
(bad)
add
push
ins
sub
lds
mov
xchg
mov
mov
dec
mov
cmp
or
scas
adc
dec
mov
adc
fadd
stos
loopne
les
and
test
add
sti
push
repnz
mov
sahf
mov
adc
outs
sub
mov
aad
fs
inc
data16
int3
xchg
nop
retf
and
or
or
mov
ss
mov
adc
dec
shr
inc
fs
mov
xlat
push
or
ins
add
cs
das
in
sub
or
mov
xor
mov
imul
push
mov
pop
mov
inc
xor
dec
mov
xor
cmp
dec
jb
clc
pushf
sbb
pop
sub
and
mov
sahf
add
add
loope
push
aam
and
push
adc
xchg
xor
or
test
ins
cld
add
push
push
push
dec
test
sub
xor
or
mov
cmp
add
cmp
jne
sbb
jo
cwde
dec
in
jge
sbb
pop
xor
popf
or
enter
push
icebp
loopne
xor
je
bound
jmp
ret
push
call
dec
sbb
xor
sub
enter
test
adc
xlat
push
lock
dec
pusha
inc
cmp
mov
sub
jbe
jle
lea
and
push
or
dec
pop
rcr
pop
add
cwde
pop
imul
nop
dec
pushf
add
sub
sub
call
add
cmp
sub
fdivr
add
bound
(bad)
adc
sti
or
and
pushf
jmp
mov
xor
sar
inc
xchg
ficomp
in
cmp
ja
mov
and
lock
jl
call
add
or
sub
push
add
test
push
mov
(bad)
test
cmp
hlt
sub
inc
sbb
out
pop
pop
sbb
mov
xchg
mov
push
add
push
retf
push
xor
jae
fnstenv
lahf
mov
jne
mov
xchg
pop
loope
ret
test
cmps
cmps
dec
rcl
jle
push
vpsadbw
xchg
ins
sub
imul
jne
xlat
cdq
js
push
in
xor
rcr
repnz
(bad)
hlt
dec
jne
cld
in
add
xchg
pop
mov
and
jl
jmp
test
push
mov
inc
cmp
mov
out
adc
cmp
sbb
das
jge
pop
sbb
retf
and
test
or
mov
sti
sub
into
push
cmps
out
je
jnp
int
hlt
sti
es
or
pop
ret
sbb
push
add
jecxz
mov
mov
mov
or
arpl
cmp
sbb
add
fst
stos
and
clc
(bad)
push
call
and
mov
xchg
and
dec
sbb
adc
sbb
sti
jmp
jne
cmp
into
push
inc
aaa
lock
mov
cmp
pop
sbb
inc
bnd
cmp
mov
lds
fist
add
or
add
sbb
sbb
push
inc
or
lock
xor
inc
sbb
push
inc
xor
xchg
ret
push
ins
push
adc
jecxz
inc
push
pusha
mov
inc
xor
push
jp
or
dec
or
fld
mov
or
adc
data16
push
dec
mov
push
addr16
pop
mov
scas
scas
xchg
loop
pop
sbb
cmp
adc
xlat
jl
mov
(bad)
(bad)
cmp
fsub
pop
or
jmp
pusha
mov
rcr
jmp
fisttp
cmc
scas
xchg
lea
mov
je
nop
scas
xchg
cmp
pop
jl
xchg
and
dec
cld
jg
and
jle
cmp
(bad)
mov
fbstp
jnp
add
jb
ud0
ja
fwait
or
mov
jmp
and
fwait
push
jno
mov
xor
push
mov
jae
add
imul
inc
cli
push
ja
in
push
inc
adc
mov
movs
mov
and
adc
mov
hlt
scas
push
sbb
hlt
stos
sbb
push
fistp
inc
loopne
cmp
int3
sub
jbe
xabort
aas
pop
(bad)
cs
add
hlt
add
mov
dec
imul
push
je
and
add
push
hlt
out
adc
or
xlat
add
mov
cmp
pcmpgtd
or
pop
lock
out
ficomp
dec
jae
dec
xor
add
cmp
sbb
cmp
add
pop
push
or
cli
imul
dec
and
inc
mov
adc
sbb
jl
mov
xchg
jl
mov
add
xor
adc
dec
push
mov
and
lods
loope
cdq
cmp
cmp
jg
xor
mov
aaa
je
sbb
mov
add
stos
clc
stos
push
add
jo
jp
pop
stos
dec
jae
jmp
and
ror
aas
mov
and
jb
aas
test
inc
cmps
adc
scas
leave
sub
add
sbb
push
les
rol
(bad)
stos
or
sbb
cdq
mov
daa
int3
pop
inc
xchg
outs
push
cmp
and
cmp
xchg
add
cmp
mov
push
test
inc
loopne
push
hlt
clc
mov
and
add
fwait
imul
cdq
inc
sub
call
inc
imul
lock
adc
ret
push
cld
popa
or
enter
(bad)
call
dec
loope
adc
cs
(bad)
add
int3
push
mov
add
rcr
pop
call
cld
push
add
push
in
xlat
cmp
jge
mov
aas
mov
or
fsubr
xor
fcom
fld
lock
test
mov
out
sub
ficomp
or
cld
dec
and
push
shl
neg
cmp
sbb
sbb
les
adc
cld
je
test
jne
fiadd
inc
or
dec
cmp
in
inc
pusha
push
push
data16
adc
shr
push
sub
adc
dec
lds
mov
xchg
inc
add
add
arpl
add
rcl
sbb
mov
xor
cld
cs
pop
xor
inc
sub
mov
mov
or
mov
out
pop
sub
mov
movs
lock
pop
pop
shr
fwait
sub
push
mov
inc
mov
ret
inc
cwde
jbe
enter
ss
and
mov
call
sbb
pop
sar
jbe
loopne
and
mov
sub
jg
add
xor
fldpi
xchg
and
jbe
xor
outs
test
mov
sbb
cmp
cmp
inc
add
cmp
jne
rcr
pop
jb
clc
ret
aam
ja
add
add
jmp
fisttp
jo
ja
mov
xor
movs
imul
sub
pop
push
movzx
popf
xor
pop
jp
clc
call
fs
and
pop
mov
pop
pop
pushf
push
cdq
dec
jmp
clc
jmp
push
sbb
and
mov
shr
or
inc
js
add
in
xor
sub
add
mov
fiadd
cmp
dec
push
idiv
ins
lock
icebp
les
inc
test
inc
add
push
hlt
data16
mov
scas
sahf
not
dec
je
mov
mov
and
icebp
jbe
push
lea
mov
lods
and
mov
mov
cwde
add
and
jmp
add
jp
nop
pop
lock
add
jne
cmp
mov
sub
push
cs
mov
dec
fadd
cmp
and
test
adc
(bad)
lods
mov
ds
or
inc
pop
loopne
je
test
dec
popa
xor
push
jnp
cmp
add
mov
or
ss
sub
dec
mov
or
jne
push
push
xor
nop
add
jmp
mov
sub
int3
jbe
movs
ss
adc
cs
adc
jbe
mov
call
push
sbb
pop
inc
jo
or
aaa
pop
cwd
nop
jne
dec
pop
imul
cmp
sbb
es
imul
xchg
or
sub
not
arpl
jmp
mov
rol
clc
adc
test
push
ror
and
shl
mov
sub
mov
cwde
dec
sub
sbb
fsubr
push
shl
retf
lods
jmp
adc
mov
mov
mov
fcom
sbb
sbb
fnstsw
mov
fild
sub
jge
scas
pop
mov
shl
shl
xchg
pop
mov
rep
mov
lea
push
xlat
stos
cmp
pop
jmp
jmp
mov
mov
je
cmp
jb
cmp
ja
imul
sub
inc
mov
fsub
add
sbb
out
dec
sub
push
cmp
jg
dec
test
out
ret
fdivr
je
(bad)
ret
and
mov
push
call
pusha
mov
xor
push
call
cmps
stc
mov
push
lea
dec
jmp
test
das
pop
pop
ss
cmp
mov
sub
movs
popa
xchg
pop
jnp
xor
cmp
mov
sbb
jno
sub
ins
test
std
iret
add
push
fmul
mov
sub
je
push
sub
cmp
sbb
or
in
rcr
jmp
jo
add
sub
bound
shl
inc
or
sbb
mov
into
xlat
add
sbb
pop
clc
add
mov
jecxz
sbb
cmp
mov
enter
mov
lods
xor
jmp
mov
sti
mov
popa
or
mov
cld
dec
adc
sti
shl
(bad)
call
pop
xchg
mov
jle
clc
inc
stos
add
add
ja
rcr
fdiv
pop
xor
es
jne
or
mov
movs
pop
ds
push
cmp
pushf
mov
or
jmp
mov
push
mov
je
push
inc
je
mov
fsubp
fwait
outs
or
je
mov
inc
je
mov
dec
je
dec
lock
rol
adc
ret
movs
add
jne
stos
adc
lea
adc
cli
jbe
clc
adc
(bad)
lods
shl
xchg
test
repnz
iret
daa
adc
adc
inc
fcomp
sbb
cmp
sub
or
push
retf
or
pushf
xor
cdq
or
adc
or
jl
nop
pop
cmp
nop
and
sbb
pop
test
shl
push
push
add
int3
cdq
aam
pop
scas
jg
je
push
or
pop
arpl
es
fimul
mov
sti
push
lea
push
outs
rcl
xchg
pop
mov
jmp
add
rol
les
hlt
dec
adc
retf
ret
je
dec
mov
mov
cmp
lds
dec
cld
and
repz
fistp
dec
loope
pop
inc
and
add
xor
cmp
jmp
add
loope
jno
test
or
add
sub
mov
das
call
jle
sti
lock
dec
inc
jg
dec
lock
add
in
leave
dec
mov
fbld
in
iret
inc
dec
inc
cs
mov
adc
call
lea
mov
sub
dec
clc
and
shl
dec
hlt
pop
leave
inc
push
es
popa
pop
popa
in
xor
push
jmp
xor
nop
aas
pop
lock
mov
adc
outs
mov
lods
cmp
adc
dec
jne
aas
jns
xor
add
lds
cmp
jecxz
pop
cld
push
cs
cmp
aam
cmp
or
or
es
adc
xchg
ja
adc
cs
stos
int
mov
fsub
int
pusha
mov
sub
mov
movs
dec
mov
mov
xchg
movs
and
repz
neg
mov
or
add
sub
cmp
xor
cmp
popa
add
loopne
cmp
or
rcl
clc
dec
mov
ret
jns
dec
or
fisttp
out
jl
sub
loope
push
pop
dec
dec
gs
push
sbb
push
inc
push
and
stc
cmp
lea
sub
arpl
and
push
loope
loope
shld
lea
jno
jo
jb
loopne
sbb
cmp
or
push
inc
ins
push
addr16
and
nop
inc
xchg
xchg
xor
iret
cmp
pop
sub
mov
mov
loope
jo
aas
or
push
jg
pop
jnp
mov
push
stc
ss
daa
fstp
inc
cmp
cmps
loopne
pop
sbb
or
es
retf
dec
and
xchg
xchg
es
adc
xchg
xor
je
sub
cmp
ror
cmps
movs
dec
leave
pop
repnz
lock
hlt
inc
push
nop
push
xor
clc
dec
aam
stos
out
add
shr
mov
push
mov
neg
jecxz
pop
lock
or
outs
mov
inc
xchg
push
push
mov
add
inc
ins
fs
mov
push
js
pusha
or
xchg
jbe
mov
jg
cmp
add
xor
push
cmp
sbb
das
iret
pop
ss
mov
data16
dec
rcr
mov
not
clc
sti
adc
xchg
pslld
dec
test
pop
cmp
cmp
add
or
dec
jge
cmp
pop
inc
xor
mov
push
sub
int3
je
sbb
inc
fcom
loope
mov
lds
dec
lds
test
(bad)
jmp
inc
(bad)
outs
rol
add
ja
movsx
fsubr
mov
mov
add
outs
ret
add
in
sti
in
shr
sub
push
push
xchg
push
push
inc
adc
push
inc
lods
or
mov
js
dec
xor
jbe
(bad)
rol
push
jge
ret
or
dec
fidivr
add
and
and
movs
das
sbb
cmp
not
fldenv
ss
outs
inc
movs
je
sahf
and
cmc
adc
mov
stos
xor
inc
or
gs
fisttp
int
scas
mov
dec
and
div
xchg
pushf
(bad)
leave
mov
mov
fidivr
es
cmc
dec
je
pop
cli
adc
xchg
add
xchg
shl
mov
div
enter
cs
jecxz
mov
lock
jne
loop
faddp
data16
sbb
cmp
in
and
pop
xor
push
add
or
dec
js
jne
mov
outs
test
adc
push
repz
inc
ja
sbb
mov
fbstp
lea
sub
cmp
cmp
and
cmp
or
xor
lock
stos
idiv
mov
pop
pop
inc
loop
ret
push
mov
test
fld
pop
pushf
push
in
cs
inc
add
and
fcmovnu
sahf
out
and
adc
and
sub
inc
sub
jne
into
mov
sub
sbb
and
out
mov
sub
or
iret
mov
xor
sub
xor
leave
add
dec
push
cmp
adc
dec
stos
loopne
aaa
ins
cmp
mov
lock
fwait
das
icebp
lock
cmps
cmp
ror
inc
repz
push
inc
inc
in
mov
sub
dec
mov
in
inc
or
call
add
push
xchg
adc
jg
add
dec
inc
dec
inc
dec
cmp
(bad)
pop
fsubr
cmp
sbb
dec
stos
ins
pushw
sub
mov
stos
and
or
sbb
mov
stos
loop
movlps
retf
outs
jb
pop
inc
clc
dec
pop
push
mov
inc
out
mov
add
jbe
xchg
xchg
cmp
xlat
xor
aam
repz
hlt
cmp
aam
add
rcl
push
repnz
push
lock
cmps
call
or
or
pop
mov
div
(bad)
lock
rol
and
shr
push
mov
or
inc
xchg
cmps
jb
hlt
add
sub
pop
nop
call
mov
add
sar
mov
gs
test
dec
add
jmp
shr
adc
or
jge
push
mov
dec
or
add
mov
mov
add
adc
clc
cmp
push
(bad)
mov
adc
adc
jne
push
push
jle
jno
inc
punpckhdq
jnp
cmp
gs
jmp
sbb
cmp
xor
rcl
repz
dec
push
jecxz
ss
rcr
push
je
or
sub
dec
pop
mov
push
adc
out
in
cs
inc
call
and
clc
ret
mov
call
dec
(bad)
mov
daa
sbb
int3
jmp
add
(bad)
and
shl
cmp
idiv
cmp
inc
dec
gs
mov
je
mov
jmp
inc
jmp
fiadd
es
mov
dec
jmp
cmp
or
mov
lods
imul
test
inc
iret
add
mov
movs
adc
fsubr
pop
je
addr16
pop
jmp
and
inc
lea
sub
sti
test
dec
push
jle
xchg
add
scas
jnp
mov
sub
and
aad
out
sbb
pop
fdivr
pop
ret
out
mov
adc
jg
push
test
popf
int
jb
dec
push
jp
loope
jmp
sti
or
add
jne
icebp
cmp
in
out
and
xor
cmp
fidiv
dec
shr
lds
add
es
out
sbb
sub
in
retf
push
dec
inc
les
cmp
je
cmp
mov
mov
ds
mov
jmp
sbb
(bad)
ja
mov
in
dec
jne
jmp
inc
mov
push
jle
jmp
mov
inc
daa
xor
pop
test
add
rol
xor
or
je
mov
repnz
jne
xchg
add
je
mov
int3
mov
(bad)
iret
loopne
popaw
dec
add
add
fadd
cmc
aaa
xor
fmul
pop
add
dec
imul
mov
inc
mov
adc
cmp
add
mov
mov
mov
dec
ins
fld
sub
dec
inc
dec
stos
or
loope
clc
lahf
mov
leave
sub
scas
cwde
fstp
sub
ds
jge
fwait
mov
idiv
mov
cld
add
or
mov
call
call
or
dec
cld
call
mov
shr
and
inc
xor
daa
mov
out
in
mov
or
rcl
fwait
or
daa
cmp
jb
mov
mov
movs
or
ja
push
outs
push
ja
pusha
xor
jmp
mov
pop
push
loope
call
jmp
add
out
mov
sub
add
cmps
add
or
je
or
pop
xor
or
(bad)
mov
call
jl
mov
cmps
sbb
and
sti
or
sbb
mov
xchg
in
ins
or
mov
adc
(bad)
fidiv
setnp
shl
mov
sbb
push
mov
and
fsubr
dec
jne
cmp
aas
and
or
jmp
pusha
xor
rol
pop
sbb
bound
mov
jmp
mov
sbb
add
mov
hlt
aas
pop
jbe
jecxz
out
mov
(bad)
fwait
inc
test
outs
out
rcr
clc
dec
pop
mov
cmp
or
add
mov
daa
sub
cmp
jnp
stos
push
inc
sbb
dec
and
fistp
cwde
inc
push
sub
add
jg
test
mov
push
add
pop
xchg
nop
inc
ja
push
mov
add
aas
jmp
fcmovnu
movs
mov
test
push
test
ins
mov
sub
jmp
mov
cmp
mov
clc
outs
mov
sub
add
jae
fimul
je
push
inc
cwde
aaa
mov
mul
aas
adc
push
inc
imul
or
cli
hlt
js
jmp
sub
push
cmps
jno
out
mov
aam
xlat
mov
lock
mov
dec
dec
push
(bad)
pop
inc
or
sbb
scas
xor
push
sbb
lods
push
pop
and
jmp
sub
and
pop
mov
or
add
test
mov
xor
ficomp
les
cmp
mov
les
ins
jmp
inc
aam
pop
pop
out
pusha
sbb
xor
popa
mov
inc
pusha
adc
jne
test
sbb
xor
fld
cmp
out
jge
jg
rcl
hlt
add
das
xor
adc
cwde
fdiv
out
(bad)
and
sub
sti
and
fld
std
nop
out
ja
and
jae
xor
dec
push
jmp
ret
push
fwait
mov
xchg
xchg
fstp
mov
ret
pop
inc
add
dec
pusha
inc
scas
in
push
pusha
fld
idiv
shr
data16
leave
(bad)
jle
pop
mov
div
cmp
jp
lods
call
adc
fstp
mov
xor
push
adc
mov
pop
cmps
clc
iret
ror
daa
loop
inc
jmp
sbb
(bad)
or
cmp
inc
stc
inc
add
(bad)
mov
cmp
or
inc
outs
adc
shl
lods
or
fnstenv
(bad)
or
pop
xor
fdiv
fstp
fwait
movs
add
in
es
call
or
dec
enter
fbld
sbb
repz
and
sub
nop
outs
pusha
fucom
pop
dec
mov
sar
adc
or
cli
jp
mov
dec
(bad)
mov
lods
push
retf
ja
push
(bad)
push
cmp
xor
and
call
inc
js
enter
loopne
lock
fcmovbe
add
cs
mov
sbb
nop
add
jmp
xor
cmp
(bad)
imul
mov
repz
movs
add
dec
inc
sbb
add
sar
sub
xchg
fcomp
(bad)
ja
and
jb
sub
ja
push
sti
ins
je
pop
dec
fcomp
bound
inc
jle
cs
push
ja
add
inc
dec
jne
sub
dec
mov
loopne
clc
(bad)
cdq
idiv
imul
call
add
cli
add
repnz
ds
ffree
jbe
ds
add
or
pop
sti
jne
inc
std
js
add
mov
add
popa
xchg
jno
push
add
or
pop
les
dec
xchg
ror
sub
dec
in
test
jg
and
leave
pushf
data16
push
clc
shl
lods
xchg
inc
push
jbe
push
aas
cmps
pop
inc
add
cs
data16
call
inc
add
and
pushf
aad
repnz
xchg
lods
mov
(bad)
lock
or
dec
lock
imul
scas
mov
push
sub
mov
mov
add
mov
cmp
xchg
sub
mov
fsub
add
push
cmps
fs
or
jp
cmp
(bad)
dec
add
jb
adc
sbb
(bad)
nop
pop
adc
sbb
clc
pusha
rol
hlt
or
sbb
mov
popa
mov
or
add
pop
lahf
clc
cmp
mov
cld
mov
xlat
shr
dec
sub
loope
in
and
or
sub
sbb
test
ret
push
loopne
cmp
mov
sbb
fidiv
out
sbb
pop
rcl
je
push
xchg
and
push
paddb
sub
sar
rol
ficomp
lods
mov
push
add
jp
or
mov
or
cwde
aaa
pop
ja
test
and
pusha
fcom
jne
jle
inc
jb
jmp
setne
pop
rcr
push
push
ins
push
xchg
inc
aam
aam
pop
fmul
mov
popf
mov
lods
add
ss
sahf
add
enter
jbe
leave
mov
or
mov
or
inc
add
and
jmp
scas
push
in
or
out
mov
add
adc
in
jle
mov
cli
or
dec
sti
fucomi
cmps
rcl
mov
outs
loop
enter
push
aam
hlt
jae
pop
cs
push
ins
loop
nop
jns
daa
in
cwde
or
xchg
push
fabs
fsubr
inc
push
mov
inc
in
adc
cmp
cli
repnz
movs
pushf
mov
loope
dec
fld
sbb
pop
les
cmp
push
xchg
fdivr
in
xor
mov
sub
test
add
je
or
div
add
mov
sbb
std
adc
pop
pusha
add
sub
pop
rdtsc
sub
mov
ficom
mov
aam
clc
cmp
stos
lock
xchg
add
mov
lock
in
loope
cmp
sbb
add
jge
mov
push
and
add
sub
das
pop
call
and
inc
mov
mov
imul
sbb
das
je
sub
pop
xor
or
xor
shr
dec
and
add
push
repnz
imul
sbb
daa
test
fsubr
push
mov
dec
dec
push
aam
fcom
mov
and
add
and
mov
mov
sub
inc
jns
pop
inc
push
loop
or
dec
cmp
jmp
sub
pcmpgtw
dec
push
dec
push
data16
mov
sub
rcl
call
jo
sbb
fld
jne
mov
fs
pop
cmp
ja
mov
jno
inc
enter
and
stos
or
mov
(bad)
or
or
add
ret
retf
pop
or
or
or
jo
dec
sti
int3
mov
xchg
clc
call
ins
fisttp
outs
inc
sahf
data16
jmp
xchg
or
ds
mov
pop
pop
adc
je
ds
and
psrlq
loop
mov
or
mov
or
das
popf
je
mov
dec
push
lea
in
aam
push
dec
neg
pop
push
inc
sahf
pusha
aam
dec
add
dec
mov
shr
in
sub
sahf
call
movs
mov
jl
je
add
and
jg
aad
push
sub
rol
xchg
mov
stc
mov
and
pushf
fwait
daa
pop
mov
and
hlt
jne
in
xor
mov
call
cwde
shr
inc
and
data16
je
and
and
add
fnstsw
je
jmp
or
je
sub
jmp
cmp
xchg
adc
jne
mov
xor
sub
mov
cmp
jne
rol
push
or
or
xor
mov
in
jo
(bad)
aaa
pop
test
movs
push
cmp
rcr
inc
push
(bad)
out
or
cmps
or
fmul
sbb
push
and
or
and
ret
xchg
sbb
or
xor
inc
popa
mul
mov
add
cmp
mov
sbb
push
xchg
test
xor
in
xchg
push
mov
loope
cmp
adc
or
loope
inc
cdq
nop
retf
mov
add
add
ja
and
xor
jae
inc
mov
gs
and
push
ins
xor
aad
lea
xchg
lea
sbb
push
add
inc
and
out
push
rol
loope
in
pop
push
sub
sub
div
jmp
imul
popf
pop
cmp
push
xor
in
push
imul
(bad)
jmp
jmp
mov
test
adc
push
sub
add
add
pop
sub
call
jmp
(bad)
ret
inc
icebp
fs
cmc
pop
sbb
xchg
sbb
jmp
dec
mov
test
jmp
sar
cwde
mov
sbb
inc
inc
jno
fidiv
dec
add
add
add
outs
sti
out
push
adc
dec
and
add
mov
and
clc
loope
pop
pop
xor
sbb
push
sbb
mov
adc
lea
fld1
lea
(bad)
(bad)
pop
inc
add
inc
pop
es
inc
aas
jb
dec
cmp
in
jg
cmps
icebp
mov
je
mov
scas
inc
jb
inc
call
lds
jecxz
jae
arpl
xlat
sbb
popa
rcr
retf
fbstp
inc
mov
pop
(bad)
clc
jmp
jp
aas
sbb
push
cmp
cmp
jle
add
pop
js
sub
add
shl
push
cmp
in
bound
jns
jae
sub
aam
in
push
add
sub
lock
pop
je
rcl
out
add
lock
movs
movs
cmp
bound
cmc
icebp
call
test
and
inc
adc
hlt
shl
cmps
outs
fxtract
and
pop
jne
nop
hlt
add
pop
add
jle
xchg
je
and
mov
dec
out
cmp
aas
stc
and
cmp
in
mov
adc
cmp
jl
fucom
je
sub
add
push
mov
adc
fadd
imul
push
dec
mov
inc
int
sbb
and
mov
pop
dec
je
adc
je
or
push
jmp
aad
mov
push
sbb
sbb
adc
push
enter
mov
test
or
das
addr16
(bad)
jbe
push
cmp
add
jmp
jl
jbe
sub
aam
cmp
dec
adc
rcl
add
xchg
adc
outs
jbe
push
add
mov
into
mov
or
cli
shl
vpunpcklwd
xchg
cli
cvtps2pd
xor
(bad)
jmp
mov
dec
jne
mov
movs
std
test
jne
cmp
xchg
les
adc
mov
sub
add
scas
add
fs
mov
cld
add
div
adc
cld
gs
mov
out
aam
jno
xor
aam
xor
lock
js
or
fwait
inc
test
(bad)
not
out
xchg
aaa
shr
loopne
push
std
mov
shr
pusha
test
js
ins
ja
sbb
mov
mov
addr16
rcl
jbe
jmp
test
mov
cmp
mov
pop
fld
add
mov
add
jo
mov
mov
movs
sub
movs
adc
popf
cmp
bound
adc
add
cmps
popf
retf
fs
dec
(bad)
jb
cdq
nop
jmp
cmps
loope
add
xor
cli
out
sub
jb
and
pusha
cmp
or
call
mov
mov
push
jmp
xchg
xchg
jmp
sub
call
in
lock
and
pop
cmp
mov
loopne
ja
cmp
(bad)
and
xor
add
jnp
mov
jbe
jl
enter
(bad)
fs
jno
add
movs
or
sub
(bad)
ja
fdiv
sbb
adc
loop
pop
pushf
and
dec
fadd
pop
fs
arpl
leave
adc
aad
movs
or
clc
rcl
and
pop
hlt
and
jmp
fs
dec
sbb
fcom
fisubr
js
mov
fcomp
sbb
xor
aam
aam
lods
(bad)
into
rcl
lock
dec
push
out
push
add
xchg
retf
popa
inc
out
mov
es
cwde
add
xchg
xor
push
pop
gs
sub
(bad)
mov
repnz
xor
adc
or
loopne
sub
adc
int3
jl
adc
mov
and
sub
inc
rcl
loopne
mov
ror
push
or
mov
mov
hlt
and
dec
add
xor
or
or
pusha
cmp
imul
in
add
in
dec
push
xlat
add
push
test
lea
mov
and
cmp
pop
cs
(bad)
ja
jne
adc
jnp
sbb
xor
loopne
ror
lds
js
adc
or
mov
mov
inc
add
add
daa
push
loope
jp
push
or
int
or
ins
sbb
or
mov
nop
pusha
movups
inc
mov
cmp
(bad)
fdivrp
retf
and
shl
and
imul
pushf
cmps
pop
push
cmp
movs
jge
xchg
dec
add
ins
xchg
adc
or
push
pop
bound
repnz
jle
enter
mov
aam
inc
mov
inc
sahf
call
add
daa
test
or
scas
inc
test
push
sub
aam
popf
push
sub
pop
(bad)
xchg
popf
aam
stos
and
inc
jmp
mov
fwait
jmp
adc
sub
jg
pop
inc
or
pop
lahf
(bad)
push
test
retf
pop
add
and
sbb
lock
je
mov
xor
and
outs
mov
or
mov
out
adc
(bad)
push
rcl
xor
std
daa
xor
cmps
pop
push
xchg
add
dec
adc
sbb
xor
das
lock
sbb
(bad)
in
adc
add
push
pushf
or
sub
adc
xchg
add
xlat
xor
or
push
test
add
test
or
or
mov
cmc
sti
push
inc
inc
dec
retf
pop
aam
(bad)
and
in
cmp
or
repnz
inc
sub
sahf
mov
test
or
pushf
xor
pop
add
aas
ds
mov
sbb
in
shr
mov
loope
dec
call
cs
call
fistp
push
adc
retf
aas
xor
fsubr
add
push
jl
je
xchg
cmp
and
in
add
(bad)
and
pop
add
sbb
fwait
je
std
adc
js
inc
(bad)
mov
jmp
dec
mov
jp
cmp
pop
cmp
pop
jmp
in
clc
cmps
loope
cmp
mov
clc
push
mov
idiv
sub
jbe
or
sbb
mov
pop
adc
xor
mov
and
dec
jne
push
push
lock
in
sub
and
xor
test
pop
mov
cmp
out
inc
lods
hlt
ins
test
or
adc
or
repz
dec
jmp
inc
jmp
fist
dec
inc
je
or
je
pop
add
test
sbb
mov
jle
cmp
lea
shl
sbb
das
pop
pop
aam
ja
outs
inc
adc
aaa
push
or
jle
inc
mov
fiadd
adc
inc
inc
add
in
add
jp
mov
jo
cmp
dec
imul
xor
ja
outs
mov
adc
leave
add
movs
add
jmp
vmwrite
fdivr
jmp
lods
cld
mov
inc
push
je
jne
popf
cmp
sbb
aad
or
xchg
mov
push
test
pop
inc
in
neg
mov
cmps
daa
sbb
scas
sbb
sub
aas
add
data16
push
pushf
mov
shl
dec
test
pushf
stc
cmp
xor
pop
pop
mov
xchg
test
cmp
xor
fcomp
mov
adc
dec
outs
daa
dec
rol
sahf
bound
and
mov
outs
xor
int3
sub
mov
mov
icebp
mov
nop
mov
adc
mov
rcl
mov
dec
dec
pop
jl
ror
das
test
and
fmul
into
or
scas
adc
lods
rcr
pop
pop
movs
dec
stc
inc
es
add
push
aas
add
mov
pop
and
(bad)
pushf
and
or
test
pop
aam
lods
nop
push
mov
mov
mov
rcr
lea
add
cmp
int3
imul
fwait
xchg
adc
and
int
inc
cs
mov
cmps
mov
sub
dec
sbb
(bad)
js
ins
stc
mov
or
sbb
mov
and
adc
pop
aam
mov
gs
push
add
mov
push
in
sbb
jb
das
mov
sbb
dec
enter
adc
clc
popf
or
hlt
aas
push
pop
ret
das
int3
not
loop
sbb
mov
mov
mov
add
fst
mov
mov
xor
mov
pushf
mov
(bad)
jmp
or
cmps
gs
mov
sub
mov
dec
mov
test
mov
aad
sub
push
mov
sub
or
jmp
xor
or
sti
movs
or
ja
dec
adc
ja
cmp
mov
push
test
dec
shl
mov
ret
rcr
sbb
rcr
adc
jg
add
dec
add
sub
cmc
test
hlt
call
rol
nop
sub
and
xor
ret
iret
xchg
loopne
cs
jo
adc
adc
les
cwde
mov
lock
push
(bad)
in
push
adc
push
push
popa
scas
mov
xchg
cs
ss
push
test
xchg
gs
pop
cmc
ret
inc
dec
ror
or
dec
push
adc
shl
or
dec
pop
jae
sbb
inc
sub
adc
or
xchg
or
push
inc
push
addr16
popf
inc
sbb
scas
jmp
(bad)
sti
push
jg
cmp
sbb
aam
add
add
jmp
add
dec
popf
dec
(bad)
into
push
ficomp
(bad)
mov
or
pop
jns
stos
mov
or
sbb
xchg
add
nop
ror
stos
push
call
dec
sub
jb
push
adc
shr
dec
shl
lea
sub
pop
adc
ret
rol
js
cmps
loopne
add
ins
je
cld
shl
push
loop
mov
in
pushf
mov
ficomp
cld
mov
mov
or
jge
bnd
sar
pushf
in
loopne
inc
bound
pop
push
dec
loopne
inc
sbb
in
mov
pop
add
add
ret
mov
sub
stos
add
aaa
lahf
out
sub
or
movs
mov
and
fucomi
xchg
xor
add
pop
enter
push
push
cmp
je
jmp
push
cs
aas
xor
inc
xor
jnp
js
and
retf
shl
or
or
xor
or
shr
call
(bad)
std
retf
fsub
adc
mov
lods
xchg
xor
nop
mov
cmps
or
pop
cld
adc
dec
setns
xor
sbb
add
pop
or
xchg
aad
sbb
retf
(bad)
mov
mov
mov
dec
fs
mov
loopne
std
sub
adc
jo
(bad)
cmp
(bad)
out
shl
rcl
in
jb
push
(bad)
enter
lods
shl
inc
xchg
mov
outs
adc
cmps
jl
push
jmp
sub
xchg
xchg
retf
cwde
pushf
mov
imul
jae
mov
loopne
enter
xor
aad
adc
inc
mov
(bad)
std
sub
xchg
sbb
std
sub
mul
lods
aam
dec
sbb
imul
loope
cmp
sbb
rcr
in
(bad)
clc
ret
hlt
add
femms
jns
mov
adc
push
pop
test
adc
aaa
and
sbb
mov
pop
sbb
mov
mov
or
xchg
ja
dec
push
add
out
inc
data16
sub
xor
retf
in
les
shl
cmp
sbb
pop
inc
xchg
rcr
out
bnd
outs
mov
rcl
repz
mov
popa
push
add
sub
int3
pop
outs
cld
(bad)
jnp
pop
mov
sbb
adc
add
inc
shr
dec
rcl
push
dec
jl
out
pusha
push
nop
test
popa
add
sbb
mov
push
test
pusha
adc
adc
push
xor
add
daa
mov
pop
mov
in
cmp
add
push
sub
mov
inc
xchg
pop
xor
push
mov
cmp
mov
(bad)
push
sbb
bound
adc
(bad)
mov
out
jmp
sub
jne
fimul
int3
test
cmp
mov
push
outs
add
mov
mov
jne
or
jne
ficomp
cwde
or
inc
dec
retf
cs
nop
xchg
mov
jo
adc
lods
pop
add
mov
add
sub
jnp
xor
outs
mov
mov
jne
sub
out
nop
les
ret
or
or
js
fcmovne
sub
sbb
aam
mov
push
push
and
push
sbb
pop
cmovb
mov
mov
adc
xor
xor
rcl
cdq
fld
daa
add
pop
test
sbb
sbb
jl
inc
cwde
(bad)
push
popf
add
pop
mov
daa
cwde
push
push
or
sub
push
sbb
cmp
add
fldenv
xor
pop
adc
adc
mov
(bad)
cld
adc
clc
or
or
inc
add
and
mov
add
jmp
pop
adc
nop
push
xchg
rcl
add
fidivr
add
jne
cmp
inc
inc
mov
test
push
push
xchg
xchg
add
test
int3
pop
dec
inc
pusha
or
pop
adc
retf
stos
lods
adc
test
inc
shl
pop
pop
in
mov
push
outs
sbb
push
shl
adc
sub
cmp
add
fdivp
xchg
inc
imul
or
push
mov
and
mov
add
setge
push
sub
dec
or
jo
pop
push
sub
bound
cmp
pop
jp
sub
(bad)
fisttp
xchg
mov
add
add
inc
jb
xchg
push
mov
enter
or
dec
mov
dec
mov
or
mov
push
mov
cwde
jg
sbb
cmp
jo
sub
sub
push
mov
cmp
jg
cmp
jae
pusha
popa
inc
adc
outs
sbb
fsub
inc
hlt
nop
jle
dec
mov
stos
ror
rol
addr16
aad
test
and
dec
and
leave
add
addr16
mov
pop
lock
dec
dec
dec
adc
outs
xchg
test
or
sbb
mov
pop
adc
pop
sbb
cmp
dec
dec
nop
jo
inc
sub
cmp
sbb
fcomp
mov
cmp
mov
pop
sub
push
jae
ret
add
lds
dec
mov
jle
mov
mov
jmp
jle
call
call
mov
int
jge
(bad)
rcr
push
or
pop
push
ret
jge
stos
or
jno
sbb
add
shr
pop
adc
(bad)
fldenv
xchg
das
mov
movs
pusha
repz
inc
adc
ja
js
movs
xorps
pop
push
xadd
jns
push
mov
dec
dec
inc
mov
adc
add
add
rol
push
sub
dec
add
scas
outs
nop
push
(bad)
mov
ret
inc
jmp
sbb
pop
es
pusha
or
bound
push
rcr
addr16
ins
jae
and
inc
xchg
and
add
xchg
jmp
sub
in
mov
xor
xchg
adc
and
sub
mov
ret
add
leave
stc
sahf
fwait
mov
add
je
pop
aaa
mov
hlt
mov
loopne
push
add
or
jo
add
fisttp
push
outs
jnp
ror
mov
je
pop
cmp
push
lahf
(bad)
cmp
div
xchg
sbb
cmp
push
xor
cmp
dec
and
(bad)
xlat
xor
jne
out
jbe
mov
and
rcl
add
add
xor
cwde
cdq
adc
repz
inc
fstp
add
fdivr
in
pop
add
sub
inc
movups
xchg
xor
cmps
in
push
dec
cmp
mov
cmc
(bad)
enter
sub
inc
mov
jecxz
cmps
nop
pop
push
stos
add
pop
add
sbb
retf
jne
dec
cdq
sbb
jne
mov
add
and
cmps
add
xchg
mov
add
add
sub
lahf
loopne
mov
data16
push
xor
jle
call
sub
cmp
push
jmp
outs
in
out
cmp
aas
add
call
inc
or
mov
and
rol
or
out
test
outs
loopne
mov
xchg
add
call
sbb
xchg
dec
jne
push
and
movs
xchg
xchg
or
jo
push
mul
aam
jmp
dec
adc
pop
or
(bad)
push
push
lock
dec
ja
rcr
sbb
pop
mov
dec
inc
call
xor
test
sub
sar
pshufw
xchg
sub
push
sbb
and
aaa
enter
das
sbb
cwde
(bad)
pop
aaa
setle
sbb
mov
and
pop
in
and
fcomp
mov
retf
xor
rol
js
jg
mov
movs
rol
sub
mov
push
test
mov
enter
dec
into
(bad)
movs
nop
xchg
mov
dec
sbb
shl
sbb
aas
ret
adc
stc
inc
cs
pusha
pop
and
js
jne
cld
push
fistp
push
hlt
mov
cmp
mov
pop
xchg
adc
pop
pushf
test
retf
lods
movs
sar
lahf
pop
mov
out
ins
fs
mov
fld
and
aad
fsubr
fild
popa
fld
jbe
daa
jo
push
inc
push
push
or
add
xor
(bad)
sub
pop
cmp
mov
daa
or
ss
and
add
xor
xchg
dec
in
lods
dec
push
int
pop
cmps
test
lods
add
sbb
sbb
adc
adc
sbb
sbb
(bad)
jbe
sub
sub
lock
adc
clc
mov
in
mov
adc
xor
in
jecxz
jo
jmp
sbb
add
shl
popa
pop
ins
and
and
in
mov
dec
pop
add
adc
(bad)
out
sbb
jge
mov
cmp
leave
movs
xor
in
clc
daa
sub
inc
dec
shl
mov
push
push
or
sbb
or
pop
adc
jo
adc
xor
jae
adc
dec
or
fistp
push
or
fs
mov
outs
outs
and
lods
movaps
and
imul
sbb
adc
or
mov
sbb
or
int3
cmp
add
add
imul
lock
and
push
lock
adc
mov
sbb
pop
and
repnz
add
retf
mov
cdq
aam
cdq
jbe
xor
inc
dec
lods
das
add
sti
cmp
and
popa
loopne
dec
jge
shl
push
rol
mov
jnp
or
mov
jg
inc
jl
pop
jg
or
xor
inc
jmp
pop
pop
pop
ret
pop
push
nop
fisubr
pop
mov
clc
cmp
dec
push
pop
(bad)
aam
push
adc
xor
fwait
sub
lea
ins
or
jp
int3
lods
jmp
adc
lods
mov
cs
scas
or
loopne
fisttp
lea
cmp
dec
xchg
cdq
adc
mul
int
sub
adc
test
dec
pop
push
push
inc
ret
dec
(bad)
jle
push
mov
in
sahf
xchg
push
(bad)
mov
add
inc
cmp
fisttp
in
ret
popf
sub
dec
mov
xchg
cmp
outs
(bad)
mov
xchg
adc
inc
in
adc
mov
inc
outs
hlt
or
pop
test
cmps
and
add
bound
push
loope
or
push
mov
mov
add
pop
paddsb
xor
stos
aaa
push
(bad)
dec
sub
mov
popf
xchg
cld
adc
add
adc
inc
adc
pop
adc
lock
mov
popa
cmps
jb
ja
imul
iret
dec
stos
in
mov
push
adc
repnz
pop
mov
inc
mov
xor
and
dec
ss
stos
and
add
icebp
mov
ds
or
add
iret
and
jns
shr
push
fld
clc
inc
loope
outs
cmp
mov
lahf
xor
gs
je
scas
jae
adc
gs
inc
cli
arpl
inc
add
dec
lahf
mov
xor
adc
adc
dec
js
iret
xchg
retf
adc
movs
mov
jbe
mov
mov
xor
add
(bad)
push
mov
icebp
rcl
stc
adc
push
mov
xchg
cs
push
cmp
add
mov
xchg
(bad)
pusha
push
xor
and
ret
or
jae
mov
add
clc
dec
or
ins
xchg
add
sub
add
hlt
adc
push
pushf
inc
sbb
mov
shl
push
mov
outs
repz
fimul
mov
stos
lock
xor
ret
mov
daa
mov
jo
fist
cli
add
dec
or
sub
pop
add
in
lea
mov
adc
push
mov
and
outs
pop
lods
push
or
pusha
mov
pop
cwde
xchg
(bad)
jmp
cmp
daa
inc
add
ret
inc
sbb
jbe
jne
(bad)
sahf
jbe
sub
xchg
pop
cmp
aam
sub
mov
adc
mov
adc
pushf
add
jmp
(bad)
mov
test
sub
fcom
push
aaa
mov
mov
sbb
imul
call
pop
xchg
and
push
pop
mov
and
xchg
add
pusha
scas
sub
cmp
and
mov
or
xchg
ret
les
mov
sub
sbb
mov
rcr
je
mov
push
test
xor
das
scas
dec
fiadd
dec
cmp
test
jo
jo
inc
sbb
or
lds
add
push
or
in
pop
test
sbb
jnp
xchg
mov
jo
add
ret
mov
or
popa
stos
dec
ja
xor
enter
mov
inc
or
jg
adc
and
dec
xor
test
jne
(bad)
fs
popw
cmp
jecxz
xchg
pop
xor
cmp
dec
sub
push
shl
int
jg
dec
or
sub
adc
dec
in
inc
xor
cs
push
test
enter
mov
inc
fst
jmp
sub
pushf
(bad)
jmp
inc
push
dec
pop
xor
jb
jge
(bad)
dec
loopne
out
dec
add
and
inc
sub
push
pop
adc
xchg
mov
jg
lods
adc
cmc
xor
adc
sbb
push
jne
cmp
mov
lods
test
add
cmp
mov
repnz
inc
xor
sub
xchg
pop
scas
xor
pop
jle
or
movs
outs
inc
adc
stos
xchg
adc
adc
loope
xchg
mov
mov
pushf
or
pop
or
push
cmp
in
mov
lods
nop
xchg
inc
dec
lods
movs
movs
jl
xchg
push
xchg
cmp
ret
retf
in
and
adc
mov
cmps
(bad)
cmc
mov
or
xchg
imul
(bad)
adc
fdivr
mov
ror
adc
fdiv
shr
dec
push
inc
push
add
sar
jmp
inc
test
add
pop
or
pop
lock
mov
sbb
and
aas
pop
fidiv
pop
test
inc
pop
adc
pusha
(bad)
imul
mov
or
and
and
lods
dec
inc
hlt
hlt
mov
out
sub
popa
mov
test
inc
add
pop
enter
xor
xor
inc
sub
loope
dec
in
jbe
push
xor
pop
inc
push
repnz
or
push
adc
hlt
call
or
or
test
inc
jge
movs
pop
push
or
fisub
pop
jg
and
sub
cwde
pop
pop
push
add
pop
sub
add
mov
lea
in
and
add
imul
ja
inc
mov
mov
mov
adc
int
setns
xor
(bad)
jns
movs
adc
adc
sub
cmp
pop
adc
mov
xor
xchg
ins
push
pop
cmp
push
outs
stc
cmp
jge
lock
test
sub
add
cdq
(bad)
mov
or
mov
popf
push
pusha
aaa
fs
pop
push
aam
mov
ud0
mov
cmp
jle
or
xchg
(bad)
mov
add
ret
or
enter
lea
add
or
dec
xchg
cmp
add
cmps
fcomp
add
or
addr16
and
aam
cld
pusha
test
sub
aas
lock
hlt
xor
jns
dec
mov
ins
push
xchg
popa
push
jp
gs
and
xchg
pop
add
aas
dec
adc
test
aaa
jbe
xchg
dec
js
sub
mov
stos
bound
test
jnp
ss
push
push
test
sar
mov
pusha
push
xchg
or
push
push
mov
cmps
test
(bad)
(bad)
rcl
mov
test
xchg
pop
stc
inc
or
nop
dec
push
pusha
lods
lods
inc
push
ror
mov
and
or
mov
add
mov
and
sbb
or
mov
xchg
pusha
rcr
mov
call
fwait
jmp
add
fist
fcom
sub
lea
add
xor
push
inc
lea
in
and
test
pop
mov
dec
hlt
push
mov
inc
loopne
inc
ins
dec
add
add
pop
or
add
loopne
popa
in
pop
or
push
add
ror
mov
push
pusha
stos
push
mov
and
das
out
das
(bad)
gs
arpl
aas
pop
js
adc
mov
mov
addr16
addr16
imul
ret
add
fcmovb
sub
mov
inc
mov
pusha
inc
rol
scas
outs
pop
xchg
and
and
xchg
int3
push
add
dec
pop
rol
lock
enter
push
rol
pop
nop
mov
or
lea
add
shl
add
add
inc
add
repz
mov
add
adc
shr
sub
push
rol
add
outs
fld
ret
icebp
nop
adc
popf
and
jbe
or
pop
push
outs
mov
data16
and
fchs
or
add
jnp
(bad)
lock
xchg
icebp
dec
mov
sbb
mov
shr
mov
jo
je
push
sbb
dec
jne
xchg
(bad)
pusha
jno
xlat
xor
jbe
sub
call
sbb
pop
xor
shl
mov
or
mov
push
adc
and
pop
dec
jmp
push
das
(bad)
call
mov
mov
lahf
mov
mov
push
dec
jg
sub
mov
sub
xchg
mov
xlat
sahf
dec
pop
mov
add
inc
movs
pop
cmp
mov
xor
pop
sub
pop
and
push
int3
adc
popf
or
add
retf
lock
test
stc
dec
fsubrp
clc
ja
inc
or
mov
sbb
add
mov
ja
dec
sahf
shr
push
mov
inc
repnz
mov
hlt
mov
ja
lods
nop
push
mov
repnz
pop
js
inc
mov
js
push
repnz
pop
and
push
add
pop
repnz
cs
popa
inc
mov
inc
push
int3
pop
cmp
cmp
repnz
cmp
xor
sbb
xor
leave
repz
call
sub
sub
pushf
pusha
in
cmp
and
and
mov
lahf
xchg
out
adc
hlt
pop
adc
(bad)
popf
cmp
adc
popf
mov
sub
pop
pusha
daa
int
out
add
pop
cld
leave
sar
repnz
add
lods
pop
lock
enter
pop
in
pop
pop
call
xchg
(bad)
in
loopne
(bad)
dec
sahf
xchg
out
or
mov
addr16
repnz
sub
test
int3
jns
iret
enter
add
mov
in
rcl
sbb
out
cmp
adc
xchg
inc
xchg
adc
dec
pushf
int3
test
and
jne
std
mov
fnstenv
sbb
ret
test
mov
mov
test
cmp
arpl
enter
adc
test
mov
push
push
jb
mov
jmp
nop
out
adc
sbb
xor
loopne
sub
cwde
mov
sbb
pop
clc
pop
mov
dec
rol
adc
mov
or
inc
sub
add
mov
movs
jne
pop
das
imul
push
push
pop
aad
lods
dec
sahf
shl
mov
pop
and
xor
sub
xor
je
addr16
push
dec
push
dec
pop
push
dec
or
iret
pop
dec
inc
movs
adc
invd
dec
push
gs
imul
xor
or
xchg
pop
inc
test
adc
lock
or
pop
inc
inc
push
dec
dec
and
add
or
mov
jns
cmp
sbb
leave
add
adc
sbb
dec
pop
lahf
mov
and
nop
adc
fcomp
inc
cs
adc
push
pop
les
lock
push
ins
push
add
jmp
dec
daa
test
add
add
add
in
mov
lods
std
call
pop
mov
sbb
mov
add
arpl
cld
adc
push
popa
ins
jmp
push
les
aad
pop
dec
sbb
scas
sub
(bad)
adc
cmp
jbe
push
fdiv
(bad)
outs
or
push
ja
outs
addr16
stos
shr
inc
cmp
clc
mov
test
icebp
nop
je
aas
imul
jne
push
or
jnp
mov
or
xor
pop
push
in
push
sub
loope
lock
in
in
call
in
in
aam
int3
in
in
enter
in
in
mov
lods
test
in
in
mov
xor
sbb
sbb
inc
mov
adc
je
or
pop
or
outs
xchg
push
or
gs
sbb
xchg
mov
or
xchg
dec
pop
loop
retf
adc
sbb
enter
ror
or
and
fist
icebp
pop
or
sbb
out
or
and
inc
scas
in
dec
in
mov
push
leave
jl
mov
jb
enter
mov
enter
in
daa
xor
jae
in
pushf
or
pop
retf
jl
dec
clc
clc
lea
and
(bad)
ds
mov
cmc
sbb
adc
mov
std
mov
xchg
retf
pop
rcr
push
or
and
sbb
cmp
push
cld
dec
adc
sbb
test
retf
fisttp
nop
pop
inc
retf
sbb
xlat
popa
xor
jb
sub
dec
retf
(bad)
adc
or
pop
not
push
lea
lds
jns
and
retf
mov
dec
xlat
adc
into
or
daa
sub
leave
add
jl
in
pop
test
jmp
push
rol
mov
jl
cmps
jne
cmp
pop
(bad)
out
push
inc
loope
or
in
push
mov
jne
enter
mov
xchg
dec
sub
adc
mov
mov
inc
sar
push
enter
fs
int3
fs
fs
shr
cdq
fs
dec
fdivr
xchg
dec
es
mov
enter
cdq
movs
jb
pushf
in
inc
enter
in
lock
mov
hlt
sbb
int3
clc
jb
movs
jb
fdivr
lock
pushf
movs
in
add
pop
mov
iret
or
pop
push
retf
sbb
mov
mov
shr
or
inc
xor
pop
daa
mov
jmp
push
mov
inc
js
dec
add
outs
je
(bad)
mov
push
jne
das
dec
jne
inc
imul
imul
stc
repnz
jb
pop
outs
jb
ins
jo
inc
jb
inc
mov
pop
push
pop
cmp
xchg
xor
and
(bad)
cmp
add
mov
jno
in
inc
push
iret
adc
push
jb
inc
pop
iret
pop
arpl
inc
scas
inc
pop
mov
sbb
add
adc
and
out
pop
pushw
je
dec
(bad)
mov
or
push
mov
in
xchg
mov
inc
rcr
clc
sub
inc
cwde
cmp
lock
and
jge
jnp
push
inc
push
in
pusha
cmp
cwde
jnp
cdq
mov
push
cmp
xor
(bad)
sahf
push
loopne
adc
inc
inc
push
jnp
aas
xor
ins
xchg
mov
jle
sub
dec
mov
dec
pop
push
and
rcl
sbb
inc
fucomp
inc
sti
rol
shr
push
jo
in
rcl
adc
mov
inc
cs
ret
fild
out
inc
ror
das
mov
inc
jb
jb
mov
(bad)
cmovb
adc
out
xor
pop
add
iret
cmp
out
inc
mov
gs
lods
out
and
inc
leave
mov
jecxz
or
xor
fs
pop
add
xor
ins
xchg
add
je
test
xor
adc
dec
ins
jo
out
cmp
aad
stos
gs
test
mov
sbb
add
xchg
jl
adc
sbb
push
in
mov
(bad)
sub
pusha
or
idiv
ror
(bad)
or
pop
in
test
imul
retf
inc
mov
daa
call
cmp
es
mov
in
nop
pop
in
dec
enter
xlat
outs
popa
and
ins
in
in
cmp
fild
loopne
test
and
and
repnz
ror
fcomp
inc
rcl
push
or
popa
fcom
daa
or
test
jno
cmp
jg
inc
push
ror
add
std
mov
ds
sub
pop
add
retf
cmp
int3
mov
je
sbb
push
call
es
dec
mov
loopne
jbe
add
sub
inc
ss
bound
leave
test
clc
mov
xchg
arpl
clc
pop
dec
hlt
mov
nop
popa
hlt
(bad)
lock
nop
arpl
push
shr
mov
nop
pusha
in
dec
aam
mov
nop
pop
call
stc
inc
and
in
jnp
jae
inc
push
pop
bound
inc
jecxz
push
sbb
test
lock
cli
enter
pop
cwde
push
xor
xchg
int3
(bad)
les
fmul
cmp
fmul
pop
shl
enter
rcl
mov
add
mov
popf
les
loopne
or
adc
mov
pusha
push
sbb
jmp
or
or
or
pop
push
mov
aad
jmp
adc
inc
push
mov
sub
and
adc
icebp
mov
outs
mov
dec
repnz
adc
in
jmp
inc
movs
pop
add
push
or
add
dec
not
cmp
push
enter
aad
(bad)
push
imul
test
add
pop
ja
jg
dec
add
add
adc
lock
jecxz
mov
setg
dec
dec
sub
test
xor
test
fsubr
mov
adc
(bad)
xchg
jne
pushf
xchg
lahf
push
ja
test
add
mov
or
mov
into
int3
adc
add
sbb
pop
mov
call
cld
test
adc
and
sti
push
mov
mov
ret
sub
mov
sbb
add
pop
les
add
xchg
clc
jmp
and
mov
clc
sbb
popf
or
sbb
inc
mov
mov
(bad)
push
call
sub
xchg
data16
inc
int3
and
sbb
aaa
aam
adc
dec
inc
dec
jmp
add
jmp
inc
rol
aas
dec
mov
xchg
pop
mov
push
dec
jnp
loopne
sub
xor
out
test
fdivr
mov
push
ins
int3
adc
pop
bound
push
cld
mov
shl
fisttp
(bad)
adc
or
or
add
xchg
out
xor
sub
int
xor
pop
or
inc
add
mov
sub
jmp
mul
and
loopne
or
ins
jl
test
mov
shl
adc
inc
xchg
and
or
and
icebp
or
mov
mov
int
es
sbb
pop
out
pop
xchg
pop
fild
jmp
aaa
xchg
loopne
mov
jle
or
add
cwde
inc
adc
mov
cs
nop
add
mov
fild
add
cmp
sbb
or
dec
jmp
sub
add
adc
jnp
in
push
test
dec
shr
sub
jmp
pop
iret
pop
inc
sbb
iret
inc
push
retf
jb
in
jbe
dec
add
add
xchg
data16
outs
adc
(bad)
shl
(bad)
stos
stos
mov
push
aas
popf
pop
loopne
mov
test
add
pop
popf
jae
or
scas
ficom
sbb
pop
push
loopne
in
pop
xor
in
loopne
retf
and
std
lock
add
push
jno
in
mov
dec
cmp
adc
data16
adc
stos
leave
iret
pushf
dec
imul
cmp
sub
sti
outs
cmp
out
clc
inc
call
xchg
jmp
xchg
pop
xlat
adc
ins
data16
mov
jmp
mov
push
dec
mov
add
dec
xlat
jmp
push
push
sub
imul
dec
sbb
mov
or
into
add
mov
aas
add
in
pop
add
fcomp
dec
stos
lods
ds
add
or
pop
cmp
sti
cmp
add
and
hlt
sbb
dec
ret
mov
shr
and
in
clc
mov
lods
adc
aad
or
lock
push
das
mov
push
jne
call
inc
das
inc
ins
jge
cmps
or
and
ja
rol
cld
(bad)
mov
lock
or
jecxz
xor
lock
iret
out
mov
(bad)
gs
fs
jmp
ret
enter
add
adc
out
out
out
adc
fcomp
sub
lock
push
cmp
scas
xchg
es
pop
mov
leave
mov
xchg
push
jns
push
jb
cmp
sbb
arpl
sar
xchg
push
jns
push
mov
repnz
inc
lds
enter
or
sbb
or
in
clc
and
daa
mov
adc
sub
sbb
fwait
xchg
(bad)
cmp
jo
lahf
push
push
mov
jbe
call
pusha
adc
in
nop
popa
(bad)
cmp
jae
pop
push
push
mov
rcl
pop
inc
mov
sub
sbb
jae
std
or
jmp
inc
mov
push
nop
std
out
stos
push
adc
call
xor
jmp
mov
adc
rcl
lahf
das
rol
cmp
add
jns
jne
loope
call
shr
adc
(bad)
xchg
or
adc
add
adc
jns
sbb
int3
fsubr
add
sbb
iret
repz
push
push
call
jge
out
or
loopne
iret
repz
mov
fdivp
outs
loopne
sub
cmp
ret
shl
rcl
div
adc
ja
retf
int3
stc
popf
lock
ffreep
sub
and
xchg
daa
daa
fldlg2
pop
ins
neg
jae
pop
stos
cld
fld
pop
movs
xor
fstp
pushf
fs
add
and
cmp
hlt
cli
sub
xchg
and
stos
rcr
adc
sub
pushf
xchg
daa
daa
jns
cmp
push
pop
lods
nop
xchg
or
loopne
int3
loope
jle
cld
jnp
jmp
mov
js
fs
lods
std
movs
add
push
aam
jmp
ror
xchg
jmp
or
sbb
and
in
inc
aas
enter
jmp
mov
sub
add
xchg
fdiv
or
push
pop
sti
call
push
or
das
add
xor
(bad)
lods
test
xchg
or
sti
(bad)
std
jg
sub
xor
das
pop
hlt
lea
ret
sub
sbb
xor
or
inc
les
cmp
add
hlt
xor
aaa
xor
lahf
push
pop
lea
push
mov
push
arpl
cld
inc
xchg
addr16
pushf
xor
push
sub
in
and
shl
fisub
sbb
rol
das
pop
fsubr
les
addr16
xchg
or
mov
add
sbb
mov
leave
cmp
adc
ficomp
clts
aam
sbb
and
push
aas
jmp
jno
inc
add
pop
jae
aad
hlt
and
jnp
test
jns
mov
jecxz
jmp
call
adc
int
leave
in
pop
imul
mov
cmp
repz
scas
into
push
bound
arpl
and
mov
shl
fld
inc
add
push
sar
cmp
pop
mov
sub
inc
fnstsw
pop
or
jle
xor
(bad)
pusha
push
jo
ins
nop
or
sbb
mov
inc
sub
inc
adc
lods
loopne
add
pop
jmp
pop
lea
fdiv
je
dec
je
or
jmp
mov
mov
lea
mov
push
lea
mov
icebp
repnz
test
inc
out
pop
xlat
in
repz
cmps
call
rcl
mov
inc
call
out
mov
adc
adc
adc
add
mov
mov
fild
jge
dec
fild
ja
lods
adc
mov
movs
and
sbb
jmp
jmp
sub
sbb
inc
adc
cmp
test
daa
or
jg
sbb
adc
fidiv
xchg
shl
push
xlat
pop
pop
pop
jge
fcmovnbe
retf
(bad)
data16
and
mov
ins
mov
or
rcl
and
repnz
mov
add
jg
mov
mov
mov
inc
test
rcr
jmp
adc
out
outs
sbb
test
add
add
sbb
test
outs
cmp
sub
push
jbe
in
adc
xchg
push
push
dec
fstp
pop
adc
pusha
dec
cmp
add
arpl
lock
ja
cs
ror
add
iret
repz
jnp
lea
aas
in
(bad)
repnz
mov
ret
sahf
push
pop
jp
mov
adc
inc
sahf
push
aas
mov
cs
nop
lock
jbe
(bad)
(bad)
out
add
retf
sub
ja
out
icebp
sub
out
cmp
add
jnp
inc
push
inc
cmp
repz
imul
adc
lds
or
in
and
xor
or
iret
repz
push
imul
push
cs
push
add
arpl
stos
loop
iret
jns
pop
jb
imul
mov
inc
mov
xchg
lods
xchg
repnz
test
push
or
adc
sub
inc
pop
call
popa
cmc
sbb
pushf
dec
or
mov
sub
cmp
adc
dec
mov
and
hlt
les
aaa
sbb
adc
jb
mov
inc
and
push
xchg
sbb
fmul
xor
push
jle
mov
fmul
sar
cli
mov
pop
int
mov
js
or
in
jmp
dec
loopne
pusha
adc
push
in
adc
ss
push
shr
mov
jmp
cmp
pop
hlt
fmul
jns
call
call
ret
or
and
cwde
(bad)
les
inc
sbb
cdq
mov
dec
sub
test
add
pop
movs
sahf
and
pop
fist
jbe
jecxz
repz
mov
es
mov
sahf
out
mul
cmp
repnz
jge
push
mul
sahf
out
iret
nop
mov
repnz
stos
inc
jno
push
jmp
jb
push
adc
aas
and
ins
xor
int3
mov
push
arpl
or
and
jecxz
sub
cdq
sub
mov
and
and
int3
push
je
inc
rol
arpl
mov
cmp
add
bound
sub
cmps
xor
mov
es
stc
pop
push
adc
sub
ds
repz
pop
jbe
clc
inc
mov
push
sub
mov
push
loope
mov
jns
push
es
dec
xor
cmp
mov
pop
arpl
inc
and
cmp
inc
imul
or
sub
sbb
mov
or
and
std
cmp
and
push
inc
dec
jmp
inc
test
sbb
les
call
inc
and
mov
ret
movs
add
push
clc
xchg
adc
jecxz
enter
pop
cmps
cli
cld
jns
out
push
and
jb
push
loope
cmc
xchg
cli
(bad)
jmp
out
stos
push
sbb
and
xor
push
jne
mov
inc
cmc
stos
jne
jo
jmp
xor
inc
jle
(bad)
cmp
mov
sbb
adc
ja
sti
and
push
(bad)
enter
mov
cmp
mov
dec
fmul
aad
add
dec
enter
int
mov
xor
xchg
or
mov
sbb
and
mov
call
xchg
xchg
dec
push
ins
cld
out
out
pusha
push
loopne
out
sub
enter
jae
out
or
popa
cmp
dec
shl
and
ret
lahf
test
xchg
mov
sbb
dec
sti
cld
cmp
push
inc
bound
out
cmp
xchg
test
out
stc
sahf
jb
push
push
(bad)
daa
hlt
cmp
repz
add
push
sbb
ds
in
dec
dec
fiadd
push
or
xor
out
sbb
rol
inc
fcom
sar
addr16
and
push
push
or
pop
xchg
jmp
mov
xchg
or
sbb
pop
xchg
sbb
add
sub
fadd
nop
sbb
jg
adc
and
es
dec
popa
sbb
cmp
xor
and
sub
jge
out
dec
fs
lods
push
ins
repnz
inc
mov
mov
push
in
(bad)
adc
shl
mov
mov
iret
mov
pop
int3
push
sbb
pusha
es
fld
loop
xor
lods
mov
sub
pop
fdivr
fs
pop
ja
add
xor
stos
mov
jmp
lahf
sbb
pop
jo
in
or
movs
popf
js
test
test
test
push
repnz
lock
stos
inc
cmp
cs
jge
jmp
addr16
imul
push
pushf
jmp
add
add
movs
test
je
out
add
shl
or
mov
adc
inc
repnz
das
aad
inc
popf
and
addr16
add
mov
push
sub
pop
and
pop
add
jo
sar
iret
repz
loop
cli
jge
cmps
stc
or
push
xor
add
fst
pop
push
add
sahf
out
jg
scas
mov
dec
imul
push
xchg
fs
or
or
cmp
(bad)
xchg
mov
fxch
add
xor
xor
mov
lock
inc
movsx
mov
adc
push
sub
and
cmp
movs
cli
fild
dec
(bad)
push
inc
dec
push
push
or
mov
push
pop
fadd
sbb
in
ret
push
icebp
xor
add
or
pop
inc
pop
pusha
enter
movs
out
(bad)
push
rol
jns
into
fsubr
(bad)
adc
es
inc
ss
fld
dec
into
repz
fs
test
ror
add
inc
sbb
fxch
mov
shl
add
and
dec
pop
adc
add
jb
or
shr
pop
and
jmp
out
cmp
jmp
loopne
rcr
dec
xor
adc
sbb
into
sti
inc
adc
rcr
fucomip
push
mov
iret
repz
call
ins
add
pop
lock
push
out
sahf
out
sbb
dec
pop
imul
int
add
and
aas
fistp
sbb
rcr
nop
add
sbb
push
mov
in
sub
lock
xor
jb
pop
data16
or
push
push
pop
cli
push
adc
inc
into
mov
fsub
pop
inc
xchg
mov
cdq
pusha
add
adc
loopne
popa
ret
sub
es
inc
leave
ror
pop
push
movs
arpl
mov
in
in
fisttp
mov
xor
push
xchg
enter
or
sbb
pop
sbb
and
mov
pop
xor
adc
(bad)
push
cdq
test
stc
sbb
xor
xor
pop
lock
push
ret
inc
mov
sub
hlt
test
clc
repnz
push
jp
out
stos
nop
sub
cmp
pop
leave
ror
outs
call
pop
mov
or
scas
rcr
out
jl
cmp
cli
push
or
push
cli
dec
mov
cmp
fstp
pop
xor
iret
repz
jo
movs
or
cdq
in
idiv
cld
pop
rcl
fist
adc
sub
mov
or
inc
mul
mov
add
mov
xchg
mov
std
cld
ins
mov
xor
clc
int3
ret
or
lods
ror
push
inc
rol
mov
or
rcl
pop
stc
js
pop
dec
sub
mov
repnz
fwait
or
or
aam
mov
inc
or
int
iret
repz
pop
pop
ss
adc
out
std
cld
and
lods
sub
mov
mov
sub
mov
test
test
or
in
scas
out
sub
sub
fdivr
mov
and
sub
cmp
or
push
jb
push
fsub
cmp
das
jmp
out
pop
sub
cmp
ret
push
in
dec
scas
mov
push
inc
enter
fild
cmp
sub
inc
jb
int
jne
add
jge
cmp
xchg
aam
fild
dec
nop
dec
push
repz
xchg
inc
cmp
repz
repnz
imul
ins
repnz
daa
dec
push
lahf
out
push
test
cdq
in
test
in
adc
or
sbb
mov
and
stc
jmp
push
pop
pop
rcr
cmovae
dec
enter
mov
sbb
push
mov
adc
push
or
imul
rol
add
pop
and
adc
inc
pop
push
nop
push
imul
xchg
dec
mov
sti
and
pop
out
adc
adc
jns
ds
cmp
inc
pop
push
cmp
daa
ja
push
mov
xor
or
ret
cmp
inc
xor
xor
add
or
cmp
and
sbb
inc
fbstp
fistp
jb
aam
fistp
loopne
add
and
rol
fnsetpm(287
(bad)
fdiv
add
xchg
(bad)
ins
jle
in
shr
push
es
cmps
data16
mov
mov
daa
outs
nop
or
sub
inc
(bad)
mov
pop
icebp
pop
ins
repnz
lods
adc
mov
xor
add
or
jbe
je
and
add
clc
mov
pop
mov
adc
inc
call
push
push
hlt
push
sbb
nop
rol
add
jmp
push
inc
mov
fmul
loope
loope
or
imul
add
clc
loope
pusha
push
in
or
sbb
xor
repnz
push
inc
cmp
push
dec
or
ins
test
js
inc
jb
mov
dec
mov
fcomp
sar
add
push
ret
and
push
adc
xchg
or
retf
push
inc
nop
xchg
adc
in
pop
loope
ret
sub
push
add
test
icebp
in
xlat
movs
jns
rcl
sti
and
sub
movlps
sbb
dec
cmps
add
sub
jns
out
dec
push
mov
fnstcw
int
cli
sbb
cmp
push
or
repz
fs
test
jmp
inc
cmps
or
out
mov
sub
call
cmps
pop
rol
aaa
repnz
pop
jo
and
dec
mov
dec
add
pusha
neg
and
scas
fild
aad
loopne
hlt
pushf
pop
jb
(bad)
lock
add
mov
cmps
add
sub
and
mov
mov
pop
mov
imul
inc
xchg
lock
popa
test
fsubr
xor
xchg
arpl
fmul
sub
and
jbe
xor
shl
jl
int3
inc
imul
(bad)
rol
and
add
mov
cmp
mov
jp
sbb
imul
push
(bad)
adc
pop
jge
pop
dec
sub
add
inc
jl
push
and
adc
cmp
cmps
cmp
dec
sbb
jp
outs
(bad)
jns
out
adc
sub
push
test
xchg
dec
jnp
dec
adc
dec
dec
or
into
enter
mov
dec
imul
sub
imul
scas
mov
mov
mov
and
add
xlat
mov
xchg
or
mov
fnsave
and
sub
shr
mov
jge
and
popf
movs
repz
movs
mov
dec
push
mov
fld
inc
cwde
pushf
int3
je
dec
add
xchg
xchg
or
inc
nop
ret
add
jmp
psrlq
jmp
xor
nop
cmps
add
dec
bound
push
sbb
in
pop
stc
aam
rol
repnz
test
add
cmp
add
test
js
jne
or
cmp
mov
ret
push
(bad)
fiadd
add
fwait
mov
pop
call
cs
(bad)
push
movs
push
xchg
add
stos
or
dec
dec
(bad)
mov
add
das
inc
jbe
add
jnp
enter
cmp
popa
xor
xchg
sbb
call
fmul
pop
sub
fild
and
imul
pop
popf
and
nop
sub
inc
fadd
fcom
or
mov
sbb
mov
mov
mov
cs
repnz
es
dec
repz
imul
hlt
push
and
repz
das
push
ins
mov
out
stc
sahf
nop
mov
mov
fadd
repz
and
and
dec
ss
gs
hlt
adc
les
adc
pop
and
pop
xor
and
inc
movs
and
sub
repnz
cmp
pusha
adc
pop
cmp
add
pop
mov
or
add
(bad)
loopne
(bad)
fdiv
mov
xchg
aam
mov
cwde
fimul
or
push
mov
int3
scas
dec
mov
pop
enter
movs
enter
add
mov
dec
xchg
inc
sbb
imul
inc
shl
and
and
shl
es
and
retf
leave
jo
push
and
cmps
daa
push
pop
cs
cmp
call
inc
es
ret
shl
sbb
mov
or
and
mov
xchg
mov
mov
mov
ret
pusha
dec
pop
test
rol
push
or
mov
mov
cmp
mov
pusha
jmp
cmp
nop
adc
adc
pop
fucomi
dec
mov
sbb
je
ds
mov
add
(bad)
xchg
mov
sbb
dec
mov
nop
clc
pop
test
in
xchg
dec
mov
addr16
adc
into
and
xchg
pushf
push
es
pop
cmp
cmp
loopne
mov
daa
and
(bad)
mov
jo
loopne
dec
xor
add
stos
je
loope
mov
adc
ss
push
pop
jbe
into
push
fadd
out
call
jl
repz
scas
sub
ficomp
sahf
sub
jae
daa
cmc
adc
push
inc
mov
or
sbb
dec
adc
push
inc
dec
fcom
push
fadd
fadd
inc
fmul
pop
dec
push
cmp
push
imul
push
pop
dec
dec
imul
loope
imul
imul
cmp
imul
pop
loopne
mov
inc
adc
rol
outs
push
fidiv
sbb
xor
jmp
xor
cmp
sub
xchg
shr
jge
out
stc
sbb
aas
pop
jge
cmp
or
sbb
push
xchg
ins
xchg
inc
adc
ror
ret
pop
aaa
mov
bound
inc
lods
sub
aad
push
lods
sub
test
xchg
inc
dec
sub
lods
and
lods
lea
lods
imul
movs
cmp
dec
cdq
cmp
(bad)
cmp
out
das
push
dec
pop
cmp
adc
sbb
outs
dec
sbb
test
xor
cmp
sub
leave
mov
es
imul
push
xchg
ja
lahf
loop
push
pop
scas
sbb
pop
mov
ss
add
dec
jae
mov
enter
sub
sahf
jno
or
add
push
cli
stc
aas
mov
out
aas
jmp
sub
or
add
je
rol
dec
arpl
jmp
cmp
cmp
rcr
data16
push
clc
test
imul
mov
cmp
ret
cs
mov
test
jmp
jmp
pop
push
mov
xor
add
inc
cmps
in
inc
ins
or
xor
nop
sub
das
or
inc
loop
mov
mov
test
dec
adc
ret
mov
inc
ret
inc
pushf
sbb
pop
loop
pop
and
and
or
ds
popf
test
jae
into
aas
fisttp
lods
ret
dec
jno
push
mov
pop
sub
cmps
fadd
scas
out
aas
adc
mov
sbb
(bad)
pop
adc
add
push
pusha
add
bound
dec
or
mov
loop
push
push
dec
xor
add
add
or
adc
adc
inc
dec
(bad)
jnp
outs
or
fstp
fwait
push
daa
adc
xchg
dec
pop
push
add
js
daa
sub
scas
(bad)
js
lods
sub
in
ret
push
or
push
sbb
sbb
mov
mov
dec
nop
jb
sub
pop
enter
add
or
or
(bad)
dec
push
mov
or
xor
push
in
and
lods
nop
push
jb
sbb
xor
add
out
xchg
xor
and
inc
cmovb
cdq
xor
and
pop
add
in
iret
popa
xor
inc
push
imul
adc
add
or
je
je
clc
ss
jb
je
dec
je
sbb
shl
cmp
dec
pop
fs
(bad)
mov
fwait
mov
je
xor
push
push
or
mov
add
and
pop
ins
sti
and
jl
jno
cmp
add
add
and
aam
push
dec
jne
push
mov
or
cmp
push
ja
mov
cld
sub
mov
mov
and
lmsw
jo
lods
or
leave
mov
push
(bad)
retf
and
sub
push
push
clc
dec
or
or
or
fisttp
inc
mov
leave
mov
retf
(bad)
xlat
inc
xchg
test
dec
inc
bnd
mov
ins
adc
aaa
pop
jbe
iret
jae
push
popa
xor
outs
outs
aas
inc
loopne
push
pop
dec
sub
xchg
imul
xor
or
add
mov
out
xor
gs
arpl
popa
(bad)
cmps
jbe
cmps
dec
fwait
push
ss
in
mov
jae
push
das
jecxz
xchg
neg
inc
es
sti
ficomp
outs
aaa
push
es
imul
jnp
push
imul
ja
rol
ret
mov
mov
mov
mov
add
ret
xchg
inc
push
scas
sbb
inc
inc
add
push
imul
mov
cs
pop
(bad)
sub
add
mov
push
fiadd
or
cmp
add
xchg
lds
ja
sbb
xlat
test
sub
dec
shl
cmp
mov
add
addr16
xchg
shl
jne
ret
and
shl
cwde
ins
sbb
mov
push
stos
or
cli
(bad)
jmp
and
jmp
(bad)
and
sub
repz
rol
imul
xchg
jmp
daa
add
xor
pop
sub
das
push
aas
inc
pop
jnp
inc
es
inc
ja
arpl
aaa
push
inc
rol
data16
mov
movs
or
mov
iret
bound
sub
jb
xor
add
rol
xor
int
mov
add
push
xchg
push
or
mov
dec
or
sbb
add
cmp
push
add
or
push
popa
ja
imul
pop
cmp
out
xor
retf
adc
call
addr16
inc
adc
add
imul
or
dec
jge
idiv
retf
je
push
adc
dec
in
pop
inc
into
test
bound
aaa
and
inc
(bad)
imul
mov
adc
add
sbb
aas
(bad)
xor
rol
fwait
cmp
add
mov
add
retf
and
(bad)
jg
sbb
jb
jo
pushf
std
ret
cmp
fistp
lods
add
pop
shl
movs
mov
push
mov
jmp
jns
dec
mov
retf
pop
xor
mov
xchg
clc
pop
jle
sbb
rcl
sub
ror
sub
lods
add
push
ret
mov
pop
mov
jbe
bswap
js
test
aaa
adc
add
js
cmps
loopne
push
xor
shl
std
add
ret
sar
sti
inc
inc
(bad)
rcl
jle
xchg
rcl
jns
push
sti
cmp
inc
lahf
jno
inc
mov
lods
mov
adc
xor
cmp
inc
outs
or
push
loop
aas
lock
dec
repnz
add
push
jo
ret
jl
adc
push
or
inc
sbb
add
sbb
or
sbb
xor
test
add
sub
add
dec
jne
jno
sbb
loope
out
adc
dec
mov
adc
dec
or
xchg
sub
fiadd
jmp
mov
adc
inc
js
push
nop
mov
lock
inc
call
cmp
and
sub
sub
dec
xor
inc
js
popf
shl
aas
lea
adc
pop
add
mov
cld
inc
pusha
jecxz
daa
push
ror
sub
mov
adc
nop
test
(bad)
clc
xchg
and
add
nop
fdiv
xor
cmp
inc
adc
push
and
cwde
mov
shl
clc
and
fistp
jge
stos
gs
dec
add
adc
push
mov
add
and
daa
push
mov
(bad)
out
pop
jne
mov
add
xor
push
mov
(bad)
movups
fbstp
dec
jne
jmp
mov
inc
das
xor
mov
jb
cmp
jle
jle
loopne
push
mov
cmp
inc
or
and
bound
ret
xchg
sub
shl
shl
dec
and
adc
aaa
sub
push
shl
and
enter
adc
test
enter
ret
inc
inc
push
adc
nop
sbb
lods
iret
movs
ror
mov
sbb
hlt
xchg
test
dec
sbb
mov
and
push
sub
sbb
out
xchg
pop
mov
test
sub
in
push
test
dec
rcr
out
or
out
cmp
je
mov
push
sbb
jne
sbb
loopne
in
ss
in
scas
fistp
in
cmps
sbb
loop
mov
imul
ins
sbb
dec
jle
jo
mov
dec
jne
jmp
mov
ds
retf
int
and
dec
(bad)
out
pop
je
mov
mov
sbb
xor
and
nop
xchg
int3
inc
add
icebp
xchg
pop
mov
xor
sbb
ins
test
or
stos
mov
and
add
add
push
or
(bad)
xchg
sbb
pop
sbb
call
or
bndstx
jmp
mov
mov
push
jmp
outs
xchg
or
cmp
aas
pop
je
xchg
push
jle
xchg
and
dec
mov
adc
shr
sbb
add
stos
dec
mov
cmp
fdivr
add
add
adc
add
mov
mov
loopne
dec
rcr
add
scas
mov
in
fisttp
inc
outs
push
adc
mov
mov
cmp
ja
jb
out
or
test
call
(bad)
out
sbb
mov
or
and
mov
inc
inc
movs
mov
xor
or
jmp
sub
adc
pop
popa
ins
sub
mov
push
xchg
sbb
daa
add
sub
fbld
push
leave
ror
jnp
inc
inc
or
aas
sbb
pop
(bad)
mov
jle
jge
sar
jb
inc
cmp
pop
cmp
xlat
or
cmp
jmp
into
lahf
mov
lods
cmp
push
xchg
lock
mov
xchg
dec
sub
sub
fld
jle
aad
and
mul
adc
cwde
sbb
dec
mov
mov
cmps
cmp
xchg
adc
ins
sub
inc
mov
jmp
jmp
in
pop
mov
mov
dec
inc
sbb
pushf
in
mov
inc
icebp
mov
sub
mov
fisubr
and
or
(bad)
mov
jmp
and
or
test
mov
iret
lock
jecxz
sbb
sar
xchg
cmp
xchg
push
push
or
push
call
jo
push
jnp
test
out
hlt
lea
jp
dec
dec
jb
lock
mov
jp
jmp
pop
pop
loopne
and
adc
cmp
(bad)
mov
mov
loopne
shl
inc
jne
ret
cwde
adc
xor
xor
iret
lods
pop
and
lock
shr
pop
clc
hlt
sub
das
fiadd
push
dec
or
cmp
add
mov
bound
xchg
inc
ror
mov
out
jp
push
pop
lock
test
inc
out
rol
mov
mov
test
hlt
hlt
or
rol
pop
and
rcl
jge
in
or
in
gs
cwde
and
cmps
cmp
push
(bad)
adc
jb
dec
xor
pop
mov
fimul
jecxz
push
inc
lea
imul
nop
imul
into
icebp
pop
adc
out
and
dec
nop
add
or
pop
sbb
lea
loopne
mov
and
pop
and
add
ja
test
push
je
sub
sbb
cmp
adc
stc
dec
call
inc
add
(bad)
push
jnp
or
cmp
or
data16
pop
retf
add
xor
xchg
repnz
mov
jge
mov
push
lahf
xchg
or
sbb
bound
ja
inc
pop
(bad)
std
jbe
fcmovnb
gs
mov
or
push
push
fistp
daa
dec
sub
ja
out
call
mov
iret
loope
dec
pop
inc
shl
sub
jmp
dec
or
adc
shl
sub
xchg
dec
jo
(bad)
outs
mov
jp
clc
inc
cmp
cmp
jno
push
cmp
dec
xor
mov
push
mov
sbb
add
adc
rcl
or
ret
sbb
jne
pop
pop
adc
imul
or
clc
jbe
add
(bad)
leave
in
inc
dec
dec
movs
fld
or
retf
and
cmp
or
mov
int
idiv
out
push
call
mov
dec
gs
sbb
jg
sub
popa
(bad)
iret
push
pop
mov
push
icebp
sbb
das
in
fisttp
lea
sbb
or
imul
xchg
jle
push
leave
xor
data16
xchg
data16
sbb
push
(bad)
imul
jb
inc
ins
popa
data16
inc
push
fst
inc
imul
xchg
add
bound
not
outs
test
nop
adc
mul
rcr
outs
sbb
sub
fimul
jle
inc
fsubr
cmps
dec
ficom
push
push
inc
cmps
(bad)
cmps
pop
xchg
cmp
dec
inc
or
dec
clc
mov
jo
adc
adc
inc
cwde
sbb
test
fcomp
pop
movs
pop
xor
push
in
je
push
mov
inc
je
ins
or
mov
cmp
push
dec
imul
mov
bound
push
add
add
clc
fwait
dec
add
dec
gs
jo
gs
mov
add
nop
xor
add
cmp
inc
pop
(bad)
sbb
scas
sub
or
dec
gs
xlat
or
jae
push
enter
xor
je
fadd
pusha
fiadd
inc
jbe
cmps
loopne
call
clc
fs
enter
xor
jmp
adc
in
dec
or
mov
daa
pop
js
xchg
(bad)
leave
inc
xor
data16
dec
or
popa
(bad)
push
push
fisttp
push
or
pushf
push
cmp
dec
xchg
or
sub
inc
jb
inc
xor
push
cmp
inc
std
aad
cwde
xlat
cmps
add
xchg
mov
sahf
inc
fld
xlat
or
pop
pop
popf
sub
inc
popa
push
inc
hlt
mov
nop
je
jl
xor
or
out
fisttp
fucomip
mov
adc
je
push
xlat
sbb
push
leave
pop
push
inc
imul
les
gs
xchg
xor
push
aad
popa
dec
(bad)
ins
jo
outs
mov
in
fild
push
cmp
syscall
fisttp
arpl
adc
lods
mov
shr
xchg
inc
stos
popa
ret
pop
cmps
test
xchg
adc
popf
mov
jl
push
pop
jl
int
xor
test
push
xchg
inc
sahf
mov
xor
test
or
mov
test
push
(bad)
aas
adc
sub
test
sub
in
les
shr
or
xchg
push
add
mov
sub
call
inc
or
mov
lods
mov
fild
and
push
or
pop
push
ret
pop
inc
loope
or
ja
adc
loope
not
int3
or
pop
push
and
or
push
inc
mov
cmp
jb
xchg
idiv
push
in
scas
rcl
mov
out
movs
xchg
sar
add
inc
aas
xor
ret
adc
sub
pop
xor
js
sub
add
mov
nop
push
sahf
pop
jg
mov
mov
mov
clc
lock
mov
les
sbb
retf
or
dec
push
ins
or
cmp
sahf
mov
sub
adc
cmps
xor
addr16
shl
jnp
cwde
pop
outs
mov
sti
es
je
loopne
cmp
dec
cmp
and
mov
adc
add
repz
pop
ds
(bad)
cld
(bad)
sti
ret
adc
and
pusha
add
dec
pop
and
sbb
mov
ins
mov
push
inc
push
and
or
mov
mov
adc
sbb
mov
pop
xor
sbb
(bad)
lock
cmps
mov
(bad)
cmovns
jo
out
ins
popa
dec
xor
in
push
rcl
sahf
cmps
and
cmp
pop
jnp
push
push
pop
fbld
inc
adc
mov
nop
cwde
inc
mov
or
xor
out
sbb
dec
popf
jl
addr16
push
mov
mov
fiadd
data16
addr16
test
mov
push
mov
call
fwait
ja
out
imul
jl
mov
add
test
jmp
nop
test
stc
sbb
lock
push
or
mov
outs
rol
in
test
cmps
push
adc
mov
call
stos
and
stos
popf
loope
xor
aam
cmps
xor
inc
fs
cmps
push
mov
cmps
dec
and
clc
xor
push
stos
ficom
ffreep
push
shr
lods
ds
push
out
test
jno
test
push
cmp
pop
setl
lods
aaa
rol
mov
(bad)
cmp
sahf
and
call
push
ja
and
or
sbb
mov
adc
pop
pop
or
pop
inc
pop
inc
sub
repz
or
xchg
push
adc
inc
repnz
fcomp
out
jl
repnz
in
mov
sub
imul
(bad)
pop
xor
xor
jo
adc
das
sqrtps
mov
nop
mov
xchg
inc
or
mov
xchg
cmp
rcr
pusha
adc
xor
sbb
pop
and
repnz
inc
sbb
enter
lods
shl
mov
pop
ss
in
into
pop
sub
mov
mul
inc
ds
pop
sbb
pop
inc
pop
add
jl
jmp
dec
jo
imul
nop
push
popa
cmp
adc
cs
call
inc
shl
movs
(bad)
fmul
hlt
inc
adc
clc
sbb
xchg
mov
push
pinsrw
xchg
or
in
cmp
or
add
nop
add
nop
add
nop
sbb
and
bound
cmp
push
add
ins
mov
rcl
sbb
bound
xchg
jns
out
or
and
sahf
out
pop
imul
xchg
dec
enter
adc
arpl
cmp
cs
daa
pushf
arpl
sub
inc
out
jl
add
loopne
or
xor
cmp
inc
push
pop
push
cmp
lods
and
mov
or
loopne
ja
inc
jne
push
push
inc
imul
mov
and
outs
add
scas
push
sbb
mov
scas
(bad)
or
sbb
xchg
adc
inc
jo
mov
jl
ror
or
lods
enter
stc
sahf
lock
jmp
sbb
loop
pusha
xlat
push
add
popa
and
jl
xlat
jmp
gs
inc
mov
pop
nop
mov
adc
mov
sub
bound
add
sub
push
add
jmp
pop
push
adc
mov
call
dec
inc
pop
inc
cmp
mov
mov
fprem
cli
xchg
loop
jae
dec
lock
sub
adc
or
mov
shl
ror
repnz
out
pop
call
rcl
stos
mov
ror
mov
fdivr
jmp
xchg
das
mov
adc
inc
aam
repz
(bad)
aam
add
aam
cmp
mov
in
test
out
pop
sbb
inc
(bad)
int
dec
add
add
add
jmp
ss
shl
mov
inc
in
push
call
aas
pop
mov
(bad)
xlat
retf
jo
inc
pop
add
adc
call
push
je
js
add
xor
es
dec
adc
fist
jmp
(bad)
stc
(bad)
clc
push
push
push
push
jns
mov
push
push
ss
push
dec
adc
sbb
jns
out
fs
inc
jns
repz
dec
clc
out
or
dec
sbb
push
cmp
or
or
nop
out
xor
popa
lods
pop
and
cmp
movs
loop
scas
xor
data16
or
push
push
inc
pop
neg
inc
add
cmc
add
and
and
aaa
cmps
rol
cs
sahf
out
sahf
jl
mov
add
pop
inc
sub
das
in
lea
push
lods
adc
mov
adc
imul
cmp
test
ds
popf
inc
hlt
or
or
or
or
aas
out
imul
add
call
or
pop
imul
or
fs
jp
cmp
xchg
dec
fs
dec
add
inc
add
or
arpl
adc
push
popf
test
jle
scas
fsubr
push
imul
dec
dec
loopne
cmp
cmp
jne
jle
xor
pop
dec
inc
xchg
dec
aas
sbb
jle
pop
js
ins
scas
and
jb
jne
inc
sahf
mov
out
nop
(bad)
nop
sub
jo
jae
sbb
ins
clc
js
cmp
clc
cli
daa
nop
push
add
in
bound
jo
dec
pop
cmp
xlat
lock
mov
fcomp
and
je
popa
cld
cmp
aad
and
mov
inc
sub
retf
mov
cmps
jae
mov
addr16
pop
pop
mov
fistp
xor
mov
shr
fcomp
cli
jne
test
ins
out
jmp
imul
outs
jmp
jno
jbe
(bad)
(bad)
add
rol
dec
mov
mov
mov
shl
fst
or
cmp
push
mov
inc
test
push
sub
stos
scas
mov
ss
push
or
xlat
mov
es
mov
sbb
jbe
xor
pop
dec
mov
sbb
and
or
adc
mov
jno
xchg
jmp
mov
pop
or
adc
loope
inc
test
(bad)
rcr
adc
push
pop
mov
mov
loop
adc
mov
mov
dec
hlt
pop
dec
outs
pop
xor
sub
pop
mov
mov
daa
dec
icebp
in
xchg
adc
mov
push
scas
xor
sbb
pop
add
sbb
and
sahf
lahf
rol
cmp
test
mov
and
or
pop
mov
jae
or
imul
(bad)
(bad)
jle
shl
mov
call
loopne
push
or
std
shr
or
retf
add
adc
rol
sbb
ins
mov
clc
sbb
cmp
jecxz
call
and
xor
test
push
pop
cmp
mov
cmp
sbb
loop
xchg
pushf
aas
jo
xchg
rcr
pop
and
jo
jo
jecxz
das
jno
mov
cmp
cmp
adc
(bad)
stos
xor
jo
outs
scas
or
push
in
fisttp
rol
cmp
or
jmp
imul
inc
mov
dec
pop
inc
inc
pop
jmp
nop
(bad)
mov
mov
inc
and
scas
je
ficom
add
and
sbb
inc
jmp
ret
(bad)
pusha
mov
inc
mov
inc
push
fbld
inc
pop
xchg
mov
ins
mov
or
lock
pop
je
(bad)
jmp
inc
adc
push
sub
dec
jmp
add
stos
sbb
push
inc
push
push
pop
and
out
add
adc
in
and
leave
(bad)
mov
pusha
inc
pusha
cmps
mov
mov
les
xchg
mov
stos
xor
enter
cmp
scas
ins
add
dec
jnp
jmp
(bad)
sahf
jne
inc
xchg
pop
lock
xor
jb
mov
or
clc
(bad)
aad
xor
(bad)
not
les
aaa
sub
or
push
retf
cmc
add
jne
add
and
test
shr
adc
rol
mov
mov
pop
call
mov
test
je
inc
test
lea
cmps
or
mov
or
loopne
mov
out
fsub
jne
push
dec
xor
movs
pop
clc
mov
movs
dec
cmp
(bad)
call
mov
jmp
iret
add
or
xor
add
shr
xchg
xchg
mov
and
cmps
aas
pop
pop
and
imul
jge
outs
jnp
nop
jle
lods
idiv
and
cmp
ror
and
adc
xor
jle
sbb
cmp
sub
or
dec
outs
inc
stos
cvttps2pi
outs
retf
push
fistp
mov
stos
ins
jne
movs
or
adc
add
call
pop
jne
add
xor
or
rcl
cmp
adc
mov
test
jmp
pop
jl
and
sti
xor
xchg
sub
mov
mov
cmp
dec
jae
cmp
or
mov
jge
jmp
cmp
dec
imul
xor
push
jmp
push
sub
mov
clc
clc
mov
cmp
sub
and
fwait
lds
or
and
cli
jmp
push
pop
test
push
cdq
in
xchg
hlt
mov
mov
or
mov
dec
test
es
fs
mov
jbe
lea
xchg
pop
out
ret
retw
lea
pop
sbb
mov
inc
lahf
in
ja
lock
or
sbb
dec
mov
xchg
ins
cmp
dec
dec
mov
test
push
fbstp
mov
inc
enter
inc
jb
add
enter
fcomp
pushf
jbe
mov
dec
sub
stos
and
in
mov
repnz
add
mov
aas
adc
or
mov
adc
jo
cwde
dec
jae
jg
xor
pusha
cmp
add
or
or
xchg
or
or
mov
scas
mov
js
imul
ror
lahf
jae
daa
add
fcom
cmp
nop
loope
jns
jns
sub
sbb
or
jl
push
push
or
push
(bad)
fnstcw
xchg
sbb
push
ret
aas
(bad)
dec
lea
mov
mov
popa
and
std
sub
jmp
imul
add
fs
jle
cmp
pop
push
test
dec
idiv
jmp
sub
pusha
cdq
or
or
sbb
adc
fs
pop
pop
imul
adc
or
mov
or
push
(bad)
ja
xor
les
xor
clc
push
data16
sub
jle
push
clc
(bad)
jmp
adc
mov
mov
mov
or
jnp
sub
push
jno
inc
ins
xor
jg
pop
sbb
mov
push
pop
and
mov
pop
pop
test
neg
test
sub
leave
cwde
jnp
jg
and
mov
mov
sub
push
xchg
imul
stc
push
es
fdivr
mov
mov
(bad)
nop
(bad)
jl
or
push
aas
daa
arpl
pop
xlat
adc
xchg
sub
pop
pop
xor
adc
jo
std
int
out
mov
push
or
sub
dec
jne
sbb
daa
mov
add
jge
clc
lods
lahf
xor
cmp
cmp
add
jo
mov
add
mov
mov
ja
lea
cmp
ins
push
add
pop
cld
pop
push
enter
imul
inc
(bad)
inc
push
rcl
inc
pop
(bad)
movs
xor
(bad)
mov
fucomi
pmulhuw
jge
and
fmul
push
and
test
pop
outs
in
imul
mov
fdivr
sub
xor
add
ins
sub
aas
int3
cmps
push
cmp
bound
or
mov
ret
iret
jae
sbb
pusha
push
fst
or
test
add
push
imul
out
fsubr
push
inc
cld
adc
outs
outs
loop
lods
ficomp
popa
into
les
cmp
hlt
fsubr
gs
sub
sbb
add
mov
imul
adc
or
and
nop
sbb
inc
ins
mov
popf
mov
xchg
push
push
popf
mov
fisttp
mov
mul
sar
sub
into
jb
movs
mov
mov
comiss
int
add
inc
inc
daa
ret
xor
add
push
adc
sub
xchg
jno
and
cmps
adc
out
cmps
rol
stc
add
adc
dec
cld
add
sti
add
mov
pop
adc
cmp
jo
shl
push
cmp
inc
inc
push
mov
mov
or
sub
pop
rol
stc
add
cmp
cmp
add
sbb
fcomp
aaa
push
sub
jle
stos
fs
test
rol
fcom
stos
aas
jge
test
loopne
mov
mov
cmp
fwait
mov
rcr
sub
cmps
into
je
push
sbb
push
mov
bound
push
mov
mov
inc
pop
add
inc
fs
imul
lods
fwait
or
(bad)
fstp
jbe
clc
wrmsr
cmp
rcl
mov
pop
adc
inc
rcr
out
sbb
mov
cs
cmp
test
cmp
jge
sbb
test
aaa
ins
xchg
scas
ret
inc
rol
cwde
std
mov
lea
test
outs
or
and
inc
lahf
xchg
mov
add
in
and
stos
jbe
(bad)
add
add
clc
inc
adc
mov
push
pop
cmp
xchg
cmp
jle
(bad)
cli
adc
xchg
add
jmp
mov
pop
xor
sti
leave
dec
(bad)
sub
jg
dec
mov
dec
inc
jne
ficomp
add
add
out
mov
inc
and
ins
dec
pop
dec
aam
adc
push
or
add
es
sbb
add
push
push
(bad)
and
mov
cmp
mov
test
paddusw
push
pusha
cmp
adc
pop
ins
sbb
inc
cmps
or
mov
mov
mov
inc
repz
icebp
push
inc
cmp
jg
in
fmul
add
dec
dec
imul
sbb
push
mov
inc
xchg
inc
nop
inc
jle
(bad)
clc
es
bswap
push
inc
enter
push
xor
icebp
and
adc
idiv
je
inc
sbb
retf
movs
rcr
clc
add
pusha
ss
add
sbb
call
jns
js
out
je
xchg
push
inc
call
and
jne
cmp
jbe
aad
push
es
push
pop
vpmullw
sub
outs
pop
ja
aad
and
movs
add
jecxz
jo
jbe
jae
jb
leave
je
stos
adc
btr
pop
adc
sbb
mov
pop
js
pop
xchg
push
push
inc
adc
leave
(bad)
and
adc
push
dec
retf
test
and
adc
je
sbb
pop
rol
rcr
inc
std
and
bt
pop
(bad)
shl
mov
inc
ret
ret
cdq
mov
push
inc
cmp
jne
inc
dec
jne
les
outs
retf
aaa
movs
nop
inc
mov
add
adc
ins
shl
push
outs
xor
xor
xchg
and
push
xchg
repnz
xchg
dec
xor
call
mov
pop
in
or
pop
inc
dec
imul
ja
mov
and
xchg
xor
xchg
mov
mov
and
push
add
das
ret
mov
push
imul
cwde
xor
rcl
dec
inc
out
pop
neg
inc
inc
shr
mov
push
mov
push
fs
mov
jp
add
in
pop
add
shl
and
push
push
lods
jnp
test
lods
call
push
dec
popf
or
(bad)
clc
adc
add
jmp
mov
xchg
sub
sti
outs
xor
adc
push
push
sbb
dec
pop
and
jmp
inc
nop
retf
rcr
adc
add
test
stos
xor
shl
push
mov
(bad)
cwde
push
lds
cmp
mov
lods
add
rol
adc
jl
mov
addr16
add
(bad)
in
test
rcl
cmp
xchg
cmp
sahf
clc
xchg
jne
das
outs
inc
or
mov
push
fisub
xlat
jp
test
or
inc
in
sub
inc
aas
cmp
dec
fadd
mov
stc
les
mov
jns
jge
retf
lods
push
fimul
sub
or
xchg
mov
mov
cmp
jne
pop
or
mov
cdq
out
loopne
and
xchg
jne
int3
es
add
xor
fs
jae
les
enter
cmp
dec
pop
pop
into
cmp
enter
outs
test
mov
jle
sbb
dec
sar
mov
popa
adc
aas
ficomp
add
mov
lea
mov
push
repz
out
clc
repnz
jo
cmps
and
jb
mov
pusha
dec
inc
fiadd
pop
jl
pop
fcomp
rol
and
popa
and
outs
mov
sbb
adc
or
xor
jnp
jg
push
sti
jg
in
and
push
or
mov
cmc
or
jecxz
sahf
inc
jno
xor
or
add
sub
sub
add
(bad)
add
mov
inc
add
mov
addr16
nop
or
mov
sub
add
not
push
jp
cld
icebp
mov
and
dec
dec
pop
inc
icebp
xchg
push
fisub
jge
repnz
and
loopne
popa
ss
pop
dec
mov
sbb
sbb
adc
push
xor
sahf
mov
pop
jo
(bad)
rcl
mov
movs
push
cli
lea
sub
or
inc
imul
push
pop
in
push
adc
clc
mov
xchg
cmp
es
int
js
sbb
pop
mov
test
call
adc
mov
repnz
cli
hlt
sub
ds
nop
jge
xor
pop
jae
add
and
hlt
sub
add
ins
(bad)
and
add
stos
pop
jne
sub
cwde
(bad)
xor
pop
jne
dec
or
and
bound
and
dec
jne
test
pop
stc
test
and
pop
(bad)
and
cmp
xchg
dec
stos
cmp
xchg
cmps
movs
hlt
jmp
push
push
mov
jns
out
add
movs
push
addr16
stos
dec
sub
hlt
unpcklps
addr16
mov
mov
pop
aas
iret
pop
jmp
pop
xchg
sub
dec
dec
xor
push
pusha
dec
pop
arpl
inc
jno
or
mov
push
addr16
mov
cmps
test
adc
daa
cmps
sub
jb
dec
je
jmp
adc
cmp
sub
cwde
sbb
sbb
out
or
fild
popa
pop
(bad)
sbb
loope
(bad)
ret
(bad)
(bad)
nop
daa
retf
sub
lea
mov
or
pusha
out
adc
cmp
add
movs
jnp
xchg
pushf
jl
inc
pop
hlt
hlt
retf
je
shl
xchg
sub
clc
repz
xor
xor
dec
js
aam
popf
enter
mov
(bad)
lds
dec
sbb
and
add
xor
aad
cmc
or
imul
js
xchg
xchg
push
repz
mov
ror
movs
outs
inc
push
adc
adc
adc
iret
or
push
jg
xchg
pop
sub
jo
jae
(bad)
loopne
pushf
mov
rcr
xchg
or
mov
in
inc
adc
jne
jo
inc
sar
mov
mov
sbb
mov
mov
dec
clc
shl
ins
outs
dec
sbb
aam
js
sbb
imul
dec
inc
stc
adc
push
lods
pop
mov
sbb
test
and
pop
jae
into
lds
xchg
(bad)
jno
lahf
in
repnz
add
ins
pop
or
sbb
and
xor
cld
lock
mov
sbb
cld
or
jne
mov
add
adc
fsubr
das
push
pusha
and
inc
push
and
add
cmps
mov
imul
cmp
add
cmps
xchg
das
jbe
sbb
repz
mov
sub
arpl
cmp
repz
cmp
jne
push
aad
(bad)
inc
sub
and
call
add
ins
xchg
clc
adc
xchg
fs
and
sbb
and
xchg
or
(bad)
out
sub
int
jo
adc
jb
push
ret
push
aad
xchg
cmps
or
mov
mov
jno
lea
in
icebp
add
mov
cwde
retf
js
jo
or
dec
push
cmps
pop
jb
dec
leave
xchg
repz
imul
cmp
nop
inc
rcl
sub
fcomp
mov
mov
lock
arpl
cwde
hlt
shl
in
loop
push
mov
inc
in
mov
jne
iret
pop
inc
dec
lea
xchg
adc
stos
inc
sub
mov
jne
dec
inc
fadd
add
add
scas
mov
push
push
inc
dec
call
or
jl
inc
rcl
jne
xor
or
inc
in
add
push
add
push
add
or
clc
or
push
sub
adc
lods
adc
aas
lahf
hlt
hlt
popf
(bad)
in
sbb
cdq
inc
daa
pop
loope
rcr
dec
shl
inc
push
adc
push
xor
push
add
push
add
or
stos
lea
hlt
nop
pusha
(bad)
or
cdq
dec
or
push
test
pop
test
and
clc
hlt
mov
push
jb
sar
hlt
sbb
or
sbb
in
test
pop
xor
enter
in
mov
ret
mov
pop
and
scas
mov
hlt
pop
ret
jns
cmps
xor
dec
mov
cs
add
mov
test
ins
xor
pop
test
mov
movs
les
jle
dec
add
add
mov
jg
jecxz
push
mov
adc
cmp
loopne
add
out
or
and
test
pop
sub
scas
mov
dec
pusha
mov
pop
pop
sub
mov
push
retf
pop
loop
pushf
or
xor
pusha
cmc
xor
icebp
sbb
mov
cmp
daa
ins
xchg
and
cmp
leave
mov
sub
adc
and
lods
fldenv
in
or
out
lea
sub
int
call
lahf
test
jno
adc
retf
shl
cmp
movs
addr16
adc
ret
push
icebp
into
add
push
inc
mov
test
sub
imul
xchg
pushf
pop
dec
fsub
das
sub
or
and
popf
loopne
jo
ret
push
lea
and
cmp
or
sub
fcmovne
sbb
jg
daa
outs
mov
inc
pop
xor
call
ins
hlt
push
aad
jecxz
mov
mov
xchg
sbb
xor
fdivrp
push
sahf
and
push
pop
sub
dec
daa
xchg
clc
mov
fisub
jns
mov
add
adc
dec
xchg
jb
les
das
pop
lahf
outs
inc
sub
mov
add
add
lock
cmp
les
jmp
adc
retf
in
or
push
mov
sahf
inc
test
pusha
lahf
hlt
cwde
nop
mov
dec
test
sub
sar
push
xchg
cmp
test
cld
inc
pop
cld
xor
cld
sbb
xor
mov
push
jno
loopne
pop
mov
and
das
das
in
pusha
mov
mov
push
sub
mov
lds
leave
mov
mov
sbb
outs
mov
sbb
xlat
popa
cmp
cmp
xor
inc
pop
or
cli
jne
xor
or
mov
lods
ret
add
pop
inc
push
test
retf
sub
and
and
xchg
mov
mov
cmp
iret
jns
or
jne
test
and
stos
sub
xchg
xor
hlt
jmp
repnz
in
push
mov
or
jmp
inc
movs
inc
sbb
add
repz
mov
nop
(bad)
cmc
mov
fwait
jne
inc
xchg
push
scas
cmps
mov
push
movs
sbb
push
and
mov
sbb
dec
ds
cmps
ins
mov
jno
(bad)
jge
pop
dec
retf
popa
push
mov
jns
test
mov
jp
add
out
and
or
std
sbb
and
add
je
loop
shr
dec
(bad)
cwde
je
je
imul
mov
mov
push
loop
push
jl
or
mov
mov
scas
mov
and
mov
mov
add
je
imul
add
xchg
idiv
outs
or
dec
inc
call
pop
pop
popa
sbb
adc
mov
add
in
sbb
jmp
mov
add
imul
inc
and
and
dec
pop
and
fwait
lods
loopne
mov
mov
bound
and
dec
lahf
cmp
sbb
dec
fnstenv
fs
ficom
inc
or
loope
jmp
addr16
stos
or
mov
mov
inc
add
ins
or
es
rol
sub
cmp
movs
inc
aas
add
loope
out
mov
mov
xchg
jns
sub
test
outs
or
loopne
jne
call
outs
pop
adc
jne
sub
dec
or
push
ja
cs
add
(bad)
cmovnp
jne
mov
sbb
adc
mov
add
mov
pop
adc
add
pop
or
push
(bad)
mov
inc
dec
xchg
push
retf
and
clc
loope
or
mov
xchg
add
cmp
cmovns
add
xchg
push
pop
hlt
push
pop
movs
sar
(bad)
cmp
add
and
adc
mov
cmp
test
and
mov
loopne
xor
pop
inc
jge
out
or
sub
lds
pop
push
add
mov
cmp
jmp
sub
sbb
mov
fwait
jl
cmps
je
pushf
mov
sbb
cmp
xchg
movs
sub
xor
lock
inc
push
(bad)
(bad)
clc
or
fistp
ss
adc
es
xor
jmp
cld
xor
cmp
inc
aam
xor
mov
inc
popa
xchg
ror
sbb
sub
ret
xchg
dec
and
inc
ret
les
daa
and
and
cmc
sub
ret
jle
lea
pop
push
push
fsubr
xchg
inc
push
lock
add
das
pop
test
cs
add
xchg
iret
and
dec
cdq
inc
mov
pop
pop
not
mov
push
ins
push
inc
mov
in
dec
inc
cmp
inc
jb
popa
mov
daa
ds
mov
dec
shr
mov
icebp
fidiv
mov
jge
loop
je
sub
in
lods
jl
or
(bad)
jmp
mov
xor
and
aam
inc
dec
pop
dec
loope
sub
add
cld
imul
cmp
stos
repz
jle
in
fadd
call
inc
das
pop
cmp
lock
mov
repnz
scas
sub
add
ret
jg
shl
in
mov
dec
fidivr
mov
repnz
mov
(bad)
mov
mov
sbb
push
(bad)
cmps
shl
fiadd
loopne
sbb
inc
jbe
not
push
fs
mov
and
jle
dec
arpl
sar
inc
sbb
dec
hlt
adc
jg
dec
and
or
fmul
push
seto
jno
sub
mov
xchg
call
pop
xchg
(bad)
add
movs
xchg
cwde
loop
jl
cmp
lock
adc
rol
xor
pop
sahf
fwait
call
sahf
adc
dec
(bad)
jg
xchg
inc
dec
push
mov
leave
dec
mov
jne
mov
or
or
or
sbb
dec
inc
inc
(bad)
fcmovnbe
jge
ss
int3
into
aaa
pop
loop
pushf
cmp
je
jl
and
adc
je
enter
addr16
inc
clc
pusha
ret
sub
add
stos
sub
jge
cmps
mov
loope
pusha
and
in
adc
dec
sbb
xchg
das
call
cli
push
rol
sub
or
inc
xor
rcl
clc
xchg
cwde
push
std
sub
jo
adc
push
retf
xchg
pop
out
sar
inc
test
sbb
adc
scas
cmp
inc
xchg
fisubr
inc
hlt
sahf
nop
sbb
add
lock
and
daa
lock
add
push
pop
push
pop
rol
fbld
aas
xlat
push
mov
push
sub
or
bound
adc
(bad)
mov
in
mov
sbb
add
sti
push
pop
jle
in
jbe
bound
ins
ret
jno
jl
and
fwait
retf
into
cmp
xor
sub
pushaw
ins
(bad)
xchg
aaa
xor
and
pop
xchg
jge
add
movs
div
cld
lods
bound
and
fs
adc
xchg
and
jecxz
cmps
mov
mov
cmp
mov
mov
add
jo
arpl
and
loope
es
push
data16
xor
hlt
adc
mov
imul
add
add
mov
cmp
add
hlt
and
sbb
mov
movs
mov
in
or
test
(bad)
js
push
inc
pusha
cld
out
ror
jnp
pushf
add
cdq
sbb
push
fs
mov
push
xor
sub
sub
jl
test
and
fdiv
(bad)
aam
xchg
or
sub
leave
retf
push
pusha
inc
push
cmp
xor
pop
inc
lods
ins
sub
sbb
sbb
inc
or
sti
loopne
dec
jmp
or
sbb
bound
mov
call
clc
sub
sahf
es
mov
add
push
jae
jbe
add
add
push
ror
(bad)
sti
stc
mov
jno
pusha
ins
cdq
sub
push
mov
mov
mov
scas
pop
imul
push
sbb
movs
push
and
pop
push
fnsave
push
scas
in
lods
fsubr
xchg
pop
xor
xchg
add
aad
xor
stc
dec
(bad)
int
jmp
jge
ja
xor
adc
and
aaa
adc
pop
es
popa
lods
retf
cmp
dec
fwait
xchg
out
mov
sub
loope
loopne
push
jg
xchg
test
test
sbb
inc
jge
jne
xor
jb
add
jmp
call
in
icebp
mov
dec
push
pushf
xor
mov
xchg
or
jle
add
ja
into
adc
repnz
(bad)
and
mov
jno
pushf
mov
lods
inc
xchg
inc
loope
xor
xor
xor
push
in
fucom
nop
adc
push
mov
dec
jle
mov
cli
xlat
xchg
and
vpcmpeqw
loopne
retf
nop
pushf
dec
(bad)
pop
ret
nop
cld
movs
push
iret
and
dec
and
daa
std
pop
mov
push
loop
push
sub
inc
or
xor
pop
das
mov
jnp
clc
push
push
inc
dec
outs
loop
sub
add
mov
dec
add
pop
or
dec
cmp
and
sbb
fcmovne
or
adc
add
sbb
ret
ds
je
shl
fwait
adc
popa
mov
push
pop
pop
mov
call
push
pop
leave
inc
push
mov
adc
bound
cmps
dec
pop
jecxz
mov
les
and
mov
loopne
test
adc
jno
movs
push
add
prefetchnta
pop
cmps
jns
or
addr16
mov
push
out
jle
fld
fcom
(bad)
or
in
dec
or
loope
adc
repnz
movs
rcl
pusha
xchg
test
rol
cld
cmps
ficom
adc
push
dec
inc
xchg
push
add
push
jmp
inc
xor
adc
jmp
daa
jl
cmp
je
xchg
psraw
jp
ret
mov
shl
sub
and
(bad)
xor
jne
hlt
rcl
adc
pop
pop
cdq
mov
stos
lea
jne
cmp
push
les
jnp
or
jle
xchg
and
mov
lds
and
push
pop
or
inc
int3
adc
mov
push
jge
out
add
push
adc
inc
adc
mov
cmp
xchg
(bad)
jle
mov
push
or
imul
push
adc
add
add
lea
gs
mov
inc
sbb
inc
mov
test
sbb
push
scas
into
mov
adc
adc
jne
pop
push
dec
mov
mov
push
jae
inc
and
xor
dec
test
sbb
xchg
leave
and
mov
test
mov
jmp
pop
cmp
add
and
fisub
das
aaa
push
mov
mov
shr
and
cmps
cld
lock
mov
(bad)
mov
and
retf
pop
mov
and
mov
adc
jp
adc
inc
pop
(bad)
jmp
arpl
push
aam
mov
icebp
dec
int
sbb
xchg
call
(bad)
mov
mov
or
xlat
or
sbb
adc
lahf
sar
add
sub
xchg
movs
adc
fs
or
arpl
xor
addr16
bt
or
je
pop
inc
icebp
ret
push
fidiv
mov
add
dec
push
scas
dec
ja
pop
les
jg
loopne
(bad)
jae
imul
mov
ret
test
pop
lods
pop
and
sbb
cs
add
inc
cmp
add
(bad)
pop
adc
js
jo
mov
xor
mov
cmp
adc
pop
xchg
mov
mov
xor
xchg
adc
or
or
cmp
add
mov
adc
loope
dec
dec
nop
mov
dec
sub
inc
adc
xlat
and
out
dec
loope
or
mov
sub
sbb
loopne
push
mov
(bad)
out
push
adc
pushf
(bad)
inc
push
inc
arpl
cmc
pop
sbb
add
test
scas
retf
sub
cwde
xlat
xchg
push
pop
je
mov
loope
les
fld
add
sub
mul
loope
mov
enter
imul
mov
test
cld
rol
or
mov
fwait
add
(bad)
mov
pusha
pusha
adc
inc
or
shl
mov
clc
dec
add
jle
hlt
sbb
sbb
dec
mov
xor
cmc
or
mov
pop
or
sub
imul
cs
or
cld
fild
and
or
in
push
push
inc
ja
fcomip
lea
pop
lahf
ja
xor
push
and
jl
inc
sbb
xor
pop
or
push
rol
aaa
xchg
or
clc
xchg
pop
pop
loope
mov
ret
(bad)
mov
jg
mov
into
daa
jl
lea
mov
xchg
sbb
cmp
adc
icebp
xchg
adc
cmp
add
xor
loope
xor
je
test
test
dec
test
jne
push
cmps
pushf
jne
jns
nop
mov
ret
(bad)
in
xchg
jmp
push
imul
inc
sbb
or
or
lock
push
cmp
jl
cmp
es
sub
xlat
loope
xchg
shl
and
nop
retf
mov
fldenv
and
in
push
or
lods
cmps
add
dec
int3
pop
cmp
dec
xchg
loope
sbb
and
mov
push
cld
jne
sub
push
push
adc
dec
movlps
pop
shl
js
push
mov
push
jp
push
shl
adc
pop
jb
inc
sti
sub
sub
add
xlat
add
test
les
retf
sbb
xchg
pop
mov
ss
shr
adc
sbb
adc
push
mov
mov
ret
xor
dec
push
push
scas
adc
fistp
mov
push
adc
data16
xor
das
push
or
xlat
cmp
fdiv
fisubr
out
dec
adc
fmul
xor
push
and
xchg
shl
aam
sar
in
push
adc
push
adc
in
fmul
mov
mov
je
jbe
mov
add
cdq
sbb
sub
fnstsw
popa
sbb
mov
sbb
(bad)
lds
mov
and
cmp
hlt
aaa
scas
cli
add
test
lea
ffree
sahf
jo
rol
xor
jne
jo
mov
push
aam
lea
inc
bound
retf
call
and
sysenter
fwait
adc
inc
arpl
cmp
push
xor
cwde
cld
push
xchg
inc
not
aaa
in
push
xchg
push
push
sahf
inc
inc
jmp
jnp
pop
sbb
cmp
push
cmp
test
sbb
test
dec
or
jecxz
sbb
mov
sbb
push
cli
inc
adc
(bad)
cmp
cmc
dec
js
jle
add
lock
xlat
jmp
xchg
pusha
mov
jg
fld
pop
xchg
mov
inc
nop
or
jne
cmps
in
loope
push
or
jne
mov
nop
dec
rcl
mov
or
(bad)
cwde
sahf
enter
rol
ds
sub
enter
lods
lods
pusha
neg
push
loopne
add
adc
mov
stos
sbb
sbb
xor
in
and
popa
pop
xchg
inc
jl
js
adc
jecxz
or
scas
xchg
pusha
or
sbb
icebp
rcl
jg
cmp
movs
xchg
js
sti
inc
add
loope
xor
leave
stos
push
test
enter
inc
lea
add
mov
out
push
mov
xchg
sub
dec
outs
xor
sub
in
cld
xlat
mov
inc
xor
jecxz
and
dec
loope
ror
mov
jmp
sbb
jp
pusha
gs
mov
popf
push
add
sbb
or
loopne
or
xchg
mov
clc
cli
cmp
loopne
cli
shl
xchg
cmp
test
mov
add
addr16
fisttp
xchg
sbb
pop
pop
or
mul
rol
lock
adc
ret
jge
mov
sub
inc
pushf
push
hlt
mov
lock
add
inc
dec
jbe
adc
push
clc
mov
fnstcw
add
test
push
fst
retf
mov
lahf
es
les
dec
pushf
add
mov
pop
or
jne
and
test
loopne
(bad)
adc
or
push
sbb
mov
lds
push
into
jmp
xor
add
(bad)
retf
dec
jle
test
mov
mov
pop
and
and
and
pop
retf
cld
mov
fwait
and
ret
dec
enter
dec
hlt
xchg
push
nop
retf
push
jne
xchg
(bad)
sub
jp
or
test
jmp
in
add
sub
jae
sbb
hlt
(bad)
pushf
fisttp
jp
jmp
enter
leave
mov
je
cmp
fild
cwde
daa
adc
sbb
adc
sub
pop
cmp
rcl
mov
push
sbb
clc
mov
xor
mov
lock
ror
fnstsw
daa
jno
sub
jae
or
mov
add
pop
sub
inc
mov
inc
push
jecxz
sbb
test
push
push
or
jle
cmps
inc
push
cmps
stos
pop
push
mov
or
mov
xor
and
cmp
enter
or
fs
mov
pop
pusha
xor
not
and
aaa
int3
mov
out
xchg
in
inc
cdq
dec
push
push
push
addr16
add
push
cmps
sub
out
pop
cmp
adc
push
pop
retf
pop
push
popf
movs
test
jae
sub
pushf
mov
rcl
into
pop
in
in
das
sbb
jns
jne
mov
jb
gs
xchg
int
xchg
jo
imul
pop
je
jo
add
pop
sbb
hlt
stos
dec
ror
pop
mov
dec
sbb
adc
cmp
pusha
dec
call
dec
lea
cld
sub
pop
bound
add
mov
mov
push
jae
clc
addr16
popa
xor
jp
adc
sub
mov
sbb
mov
fisttp
shl
add
pop
hlt
dec
add
cmp
in
inc
dec
inc
sub
rcl
sub
adc
shl
add
inc
cmp
mov
sbb
sub
inc
sub
or
setne
fsub
(bad)
ret
cli
add
xor
mov
leave
js
push
hlt
out
call
fcomip
aam
adc
cmp
inc
sub
imul
xchg
sub
or
test
or
adc
inc
jbe
push
cmp
jae
sar
into
xor
push
je
mov
in
outs
aad
add
mov
hlt
pop
lahf
jne
and
in
in
sbb
in
rcr
sub
and
pop
aam
add
inc
xchg
sbb
xor
rcr
mov
adc
xor
and
push
out
push
inc
cs
cwde
push
stc
sbb
cs
ret
fld
xor
popa
xor
inc
pop
aaa
scas
retf
push
test
sbb
mov
mov
cmp
mov
sbb
repz
out
pop
jb
or
(bad)
add
cdq
push
repz
pop
add
jnp
mov
sbb
add
dec
lea
out
xchg
hlt
or
mov
mov
adc
sub
pop
or
jmp
cmp
sysexit
jmp
and
adc
xor
xor
nop
mov
xacquire
fwait
mov
sub
sbb
sub
add
fs
shl
out
mov
lods
rcl
sub
hlt
xor
out
dec
push
jmp
aam
or
dec
jmp
and
lods
shl
push
fnsetpm(287
fld
xchg
mov
adc
dec
sbb
or
clc
xor
ins
cmp
xchg
(bad)
sahf
and
add
or
and
and
fld
adc
daa
nop
and
or
shl
mov
add
inc
mov
scas
adc
push
or
(bad)
adc
mov
or
or
fild
inc
jecxz
mov
cmp
out
test
push
out
add
out
imul
scas
cmps
test
mov
imul
stc
or
cmc
sbb
push
dec
mov
push
dec
daa
movs
mov
loope
(bad)
out
mov
and
enter
and
mov
push
and
sbb
cmps
mov
cmp
inc
add
mov
mov
nop
mov
cmp
push
ss
loope
pusha
cmp
popf
movsx
int
mov
mov
mov
sub
fist
xlat
fidivr
mov
or
mov
dec
mov
mov
test
clc
cmp
loopne
push
mov
pushf
in
fbstp
into
mov
mov
jne
ret
loope
sub
push
enter
rcl
sar
push
and
fadd
and
adc
sbb
cmp
add
dec
mov
mov
aaa
mov
cs
inc
sbb
cmp
mov
fldenv
xchg
pop
pop
ret
or
aad
add
dec
bound
test
outs
pop
movs
pop
mov
add
movs
aaa
fisttp
jl
inc
hlt
ficom
xchg
pop
mov
jg
dec
push
mov
retf
(bad)
sbb
nop
dec
ror
fsubr
ds
cs
inc
adc
cmp
outs
mov
mov
and
mov
add
xor
lods
jne
push
inc
in
out
sub
cmp
xchg
push
sbb
or
cmps
cmp
test
adc
lea
jmp
in
(bad)
and
add
rdtsc
fs
push
in
enter
or
leave
push
jge
mov
add
iret
or
movs
adc
push
shr
jnp
sbb
xor
sub
or
daa
dec
cmp
mov
inc
ja
push
repz
dec
push
add
sbb
push
icebp
rol
and
out
imul
stos
mov
call
mov
dec
cld
or
in
pop
jnp
data16
or
xchg
mov
xor
mov
and
mov
push
sub
fcmovnu
lock
mov
fisubr
stc
loope
icebp
adc
cmp
pop
xor
enter
add
push
ficom
shl
fisttp
or
and
aad
push
ret
sbb
and
shl
dec
clc
jo
test
aam
add
das
in
fdiv
cmps
add
imul
loopne
or
push
imul
sbb
dec
add
call
sub
les
cmp
loopne
(bad)
inc
mov
sbb
hlt
inc
ja
arpl
cmp
jp
fiadd
iret
sar
inc
mov
cmp
jecxz
daa
imul
push
pusha
test
leave
lahf
xchg
retf
xchg
mov
mov
fiadd
inc
xor
xor
dec
mov
xor
mov
mov
imul
inc
in
jmp
ret
mov
adc
cmp
loopne
shr
scas
ins
loopne
dec
mov
cmp
dec
aaa
in
cld
cmp
test
cmp
adc
cmp
inc
aam
aad
(bad)
push
lea
movs
dec
arpl
dec
mov
daa
sbb
popf
lods
adc
fisubr
xor
add
adc
int3
in
rcr
dec
dec
pop
xor
bndstx
push
cmp
movs
sub
enter
movs
sub
test
add
mov
ins
outs
imul
iret
mov
fcmovb
lock
push
push
aas
mov
pop
movs
retf
in
add
cmp
mov
aaa
stos
fcomp
loopne
aam
inc
or
cmp
and
jge
mov
cmp
add
dec
pushf
lea
push
das
xor
pop
cmps
lea
add
(bad)
dec
sub
pushf
mov
dec
mov
jbe
or
cmp
retf
xor
xor
lock
xchg
xchg
cld
mov
add
out
sub
push
sub
mov
adc
mov
(bad)
cmp
jne
test
sub
psubw
and
add
rcr
aam
ror
mov
mov
shl
push
dec
lods
arpl
pop
rol
or
fist
fisttp
nop
ds
cmp
xor
cmps
call
xor
mov
or
pop
in
lds
sub
xchg
in
and
leave
adc
or
adc
xchg
inc
and
pop
es
cmc
sub
sar
lahf
jns
bound
lods
adc
mov
sbb
fistp
cmp
and
scas
add
or
nop
push
sub
mov
and
cmp
cld
xchg
jmp
scas
xchg
mov
nop
inc
jge
mov
mov
hlt
arpl
push
nop
cld
sbb
inc
fwait
jecxz
mov
mov
aaa
shr
push
in
dec
pop
arpl
and
push
loope
or
loopne
movs
cwde
pop
repnz
shl
dec
cmp
inc
push
push
cmp
ja
psubb
lock
ret
jmp
adc
lock
pop
in
xor
jmp
popa
nop
cmp
inc
add
dec
je
pop
test
sbb
call
or
sti
aam
adc
push
test
sahf
cmps
mov
(bad)
jno
js
test
mov
sub
adc
cld
imul
mov
sub
je
sub
jne
outs
daa
jo
inc
adc
les
cli
mov
push
adc
xchg
sub
adc
adc
and
mov
loopne
clc
hlt
in
or
(bad)
iret
shl
addr16
dec
xor
push
push
jne
cmp
sar
adc
xlat
add
and
inc
pop
es
inc
daa
mov
mov
shl
ss
imul
lods
lds
test
dec
xor
xchg
in
in
stc
ins
mov
xor
adc
aas
adc
xor
mov
into
or
(bad)
nop
out
cmp
inc
in
lock
test
sub
cmp
add
scas
add
outs
mov
out
adc
rol
mov
pop
lahf
(bad)
adc
mov
and
scas
rcl
fcomp
cmp
in
push
mov
retf
popa
pusha
repz
test
and
(bad)
xchg
push
popa
pop
(bad)
cmc
jmp
(bad)
loopne
xchg
cmp
dec
in
lock
add
xchg
xchg
out
es
dec
push
pop
jns
ja
arpl
jp
cwde
sar
out
mov
rcl
push
pop
outs
neg
fist
cwde
pop
pop
xchg
leave
xchg
int3
push
mov
lods
nop
sbb
jmp
je
mov
(bad)
mov
cmp
jmp
xor
lock
aas
pop
gs
jmp
mov
dec
shl
cmp
or
or
xchg
sbb
jmp
inc
push
cmp
push
xchg
and
inc
jmp
hlt
mov
loopne
sub
jle
das
push
mov
ds
rol
hlt
adc
fadd
add
jmp
or
das
adc
xchg
shr
shl
and
jne
add
loope
jmp
mov
xor
sub
(bad)
outs
loope
inc
sbb
sbb
pop
push
lods
mov
sti
pop
call
cmp
int3
jp
ins
xchg
mov
mov
jmp
or
sub
shl
call
push
adc
add
adc
mov
mov
inc
dec
call
mov
and
xchg
mov
push
sbb
or
inc
jnp
mov
sbb
jns
cmp
inc
sbb
push
cmp
shr
push
js
je
mov
imul
push
pop
les
and
xor
adc
dec
lahf
pop
mov
push
and
and
ss
jg
js
xchg
sbb
in
dec
out
cmp
cmovb
adc
push
les
xor
call
cmp
pop
mov
fisubr
and
inc
or
rol
shr
mov
out
es
(bad)
pop
enter
cmp
fadd
lock
sbb
sub
cmp
lock
or
mov
adc
mov
xchg
xchg
or
retf
ja
cmp
das
cmp
out
imul
sub
and
gs
call
or
inc
pop
sub
aas
sbb
xor
pop
cmps
sub
mov
out
jle
retf
in
ins
shl
imul
loop
out
push
inc
pop
and
cmp
outs
iret
jo
das
add
sbb
pop
cs
mov
lods
out
shr
dec
fmul
cs
push
xchg
or
je
sbb
loopne
jl
mov
inc
mov
xor
xor
(bad)
xlat
jle
in
cld
ret
mov
and
in
push
xchg
sub
dec
jo
mov
or
pushf
ror
dec
add
aad
jmp
movs
dec
popa
add
jno
out
movs
lahf
or
inc
push
lea
mov
mov
pop
jmp
rcl
movs
sub
or
mov
adc
(bad)
pop
(bad)
outs
repz
sub
loopne
sbb
inc
aas
and
retf
push
scas
add
cdq
mov
mov
cmp
pop
inc
dec
inc
sub
adc
aam
cmc
jnp
mov
(bad)
cmp
and
adc
mov
movsx
nop
adc
scas
cmp
jg
movs
les
dec
jbe
mov
sbb
mov
cmp
sbb
and
xor
cdq
idiv
mov
push
add
add
pusha
and
mov
dec
and
jb
adc
inc
dec
jnp
cdq
sbb
push
clc
cli
add
dec
or
repnz
pop
and
or
mov
rdmsr
lock
stc
push
mov
inc
or
or
adc
push
pop
push
in
ret
jae
or
loope
adc
xchg
scas
popa
mov
sbb
adc
dec
xor
push
repnz
call
test
clc
xlat
cdq
les
add
inc
nop
push
test
repnz
std
pop
add
cs
rcr
pop
sbb
dec
jnp
call
push
mov
bound
lods
push
(bad)
and
popa
dec
xchg
sbb
push
or
lock
(bad)
or
mov
out
popa
iret
rol
mov
xor
out
adc
repnz
cmps
mov
add
sbb
and
or
sub
daa
icebp
bound
inc
dec
jne
pop
or
rol
sbb
ins
and
dec
cs
add
push
mov
popa
add
adc
sbb
sub
sar
imul
das
dec
add
inc
sbb
jle
push
push
shl
jae
inc
sbb
in
movs
iret
dec
push
add
adc
loopne
dec
add
add
dec
add
mov
inc
mov
dec
fdivr
sub
xor
clc
jmp
aaa
push
stc
mov
inc
mov
mov
div
cmp
or
addr16
clc
mov
movzx
mov
mov
inc
mov
push
and
int
adc
int
xchg
ror
scas
cmc
push
shl
outs
loop
test
sbb
mov
pop
mov
repz
clc
xor
mov
push
adc
mov
mov
and
inc
jmp
cld
sub
lods
adc
pop
xchg
adc
das
add
or
idiv
push
cmp
iret
mov
dec
popf
jg
xchg
mov
ret
mov
xor
test
hlt
mov
jbe
sbb
int
stos
jno
or
xchg
xor
jne
push
or
or
or
test
sbb
pop
xor
sbb
pop
std
aad
mov
test
sub
mov
jmp
js
mov
jo
(bad)
std
sbb
sbb
out
gs
in
sbb
and
jecxz
(bad)
or
fmul
nop
hlt
cmc
stc
outs
jecxz
adc
mov
mov
ret
ret
movs
xor
add
inc
cmp
add
xor
daa
push
jbe
lods
jb
cld
into
jne
adc
ret
fcomp
add
push
retf
scas
and
sar
hlt
xchg
inc
xlat
and
and
lock
xchg
stc
dec
cmp
mov
jle
mov
jbe
push
and
push
push
pop
(bad)
loopne
pop
mov
mov
add
push
dec
das
ret
inc
lock
daa
data16
shl
sbb
loopne
xchg
xchg
mov
xchg
pusha
and
retf
or
push
rol
inc
and
loopne
and
add
lock
je
xor
or
dec
and
test
jecxz
mov
mov
push
in
ins
inc
cmp
and
or
xchg
xor
xlat
add
imul
mov
cli
je
and
pop
add
pop
jae
xchg
sbb
int
cli
dec
pop
sbb
inc
call
cs
jmp
repnz
xor
add
sub
mov
sahf
push
in
nop
mov
ror
xor
data16
xor
(bad)
sbb
(bad)
sbb
sub
pop
push
push
push
cmps
cmp
mov
fld
gs
cmp
adc
add
and
rcl
test
or
mov
mov
xchg
add
aaa
xor
mov
rol
cmp
push
hlt
xlat
jmp
push
jge
or
jns
cmp
add
add
jp
push
fstp
mov
mov
mov
fadd
leave
je
push
dec
and
or
pop
hlt
loopne
nop
pop
mov
pop
pop
inc
dec
repnz
std
mov
test
bswap
dec
ret
jo
into
daa
inc
scas
adc
jne
test
scas
clc
ins
data16
pop
neg
scas
addr16
add
inc
or
xor
push
sub
imul
cmp
adc
jne
mov
scas
lea
adc
fidiv
inc
adc
ins
cmp
mov
outs
sbb
add
hlt
sub
inc
xor
push
ss
jecxz
mov
repz
xchg
lahf
shl
(bad)
out
nop
jne
fwait
or
xchg
xchg
cdq
popa
add
nop
les
sub
inc
(bad)
push
popa
cmp
mov
inc
jns
sbb
sar
pop
bound
mov
(bad)
pop
stos
and
or
push
fsubr
or
adc
leave
mov
xor
sbb
leave
lock
sbb
inc
xor
cmp
cmp
jg
ret
dec
jne
mov
das
mov
xchg
mov
das
shl
inc
or
mov
push
or
push
jb
pusha
je
cmp
(bad)
(bad)
retf
pop
xor
xlat
shr
or
cmp
adc
dec
aad
cli
push
and
les
push
test
nop
inc
sub
setne
sbb
call
push
out
mov
or
popa
adc
push
movs
dec
push
adc
jle
enter
mov
arpl
inc
outs
add
sub
inc
and
xlat
icebp
cwde
or
out
add
xchg
lods
pop
mov
pop
ins
mov
dec
popa
jne
enter
and
add
dec
mov
inc
sbb
rcl
xor
push
int3
test
add
sub
ret
adc
xchg
xor
xchg
add
cmp
hlt
adc
or
dec
cli
xor
mov
in
(bad)
(bad)
mov
test
adc
pop
jnp
mov
mov
lock
cmps
(bad)
cmp
(bad)
imul
iret
jo
int
sbb
sbb
mov
push
push
adc
imul
sub
inc
add
jno
mov
pop
or
inc
dec
push
xchg
adc
and
cmc
outs
lea
(bad)
adc
mov
das
inc
push
sub
inc
cmp
loopne
or
sbb
xchg
nop
pop
jle
mov
fwait
mov
xchg
add
and
xor
fwait
sub
sbb
jo
out
push
mov
jecxz
rcr
out
fcom
xchg
mul
inc
sbb
adc
cs
cld
jmp
jo
das
adc
adc
mov
push
adc
loope
xor
loopne
add
sbb
pushf
push
mov
ds
adc
pushf
aam
mov
into
lds
adc
scas
shl
sbb
mov
int3
adc
add
pop
pop
mov
and
and
push
cmps
mov
push
repnz
sub
je
psubq
sbb
dec
xor
fstp
inc
jl
push
push
jge
xchg
ret
dec
test
lds
jmp
call
or
or
fisttp
enter
pop
xchg
sar
push
pop
add
sbb
mov
ins
pop
inc
inc
add
and
xchg
scas
call
dec
cmps
je
lea
add
mov
jo
out
and
dec
into
xchg
pop
daa
jae
or
jnp
(bad)
aaa
inc
fld
sbb
inc
daa
pop
arpl
mov
xor
jo
mov
(bad)
cmps
outs
imul
sub
cmp
pop
add
xor
or
les
push
fdivr
or
dec
not
push
jb
adc
add
inc
push
cmp
and
sti
mov
pop
ret
xchg
pusha
add
arpl
pop
int
add
fsub
inc
xchg
jl
inc
pop
aam
add
adc
mov
arpl
inc
dec
jne
xchg
rcl
rol
das
push
cli
stc
push
outs
sbb
adc
test
sahf
jnp
jmp
or
xchg
inc
sbb
(bad)
jne
sysret
pop
aad
push
cmps
jg
daa
add
adc
inc
mov
(bad)
adc
mov
dec
clc
jb
mov
cmovno
jb
pop
adc
xor
and
xchg
push
or
add
mov
(bad)
mov
cld
nop
mov
addr16
push
pop
pop
pop
fst
nop
dec
mov
sbb
es
test
call
sub
jl
inc
and
jmp
mov
rcr
inc
xor
sbb
inc
call
lods
inc
adc
pop
inc
in
mov
and
loope
xor
inc
or
cdq
push
popa
xchg
outs
in
inc
and
call
and
jge
outs
loope
shl
pop
jne
pop
mov
adc
or
dec
inc
pop
inc
and
or
add
add
int3
mov
mov
adc
lods
cdq
cmps
adc
and
inc
pop
and
cmps
inc
pop
cmps
rcl
cmc
cli
test
push
in
cmp
or
mov
cmc
cli
les
ret
test
and
int
pop
fwait
dec
aad
js
lock
adc
cmps
inc
adc
push
cmps
inc
aas
add
add
aam
test
and
nop
pusha
or
add
sub
push
xor
in
jp
mov
imul
pop
dec
dec
ror
ja
and
mov
out
inc
push
adc
ret
(bad)
iret
pop
jae
sub
pop
mov
pop
es
or
ja
call
xchg
sub
jmp
pushf
cmp
inc
lahf
and
dec
dec
dec
and
xor
pop
jbe
inc
inc
test
cmp
dec
push
int
ror
sbb
xlat
stos
xor
jge
add
sar
mov
pusha
xchg
gs
and
sub
cmp
push
and
push
(bad)
adc
clc
neg
or
ror
cmp
jne
pusha
adc
js
into
fdiv
das
xor
adc
jbe
dec
ins
pop
out
pop
adc
lods
or
adc
mov
mov
adc
cmp
adc
pusha
inc
mov
xlat
enter
pop
ds
or
jmp
add
pop
or
xor
mov
ret
cmp
outs
test
mov
mov
in
push
(bad)
iret
inc
jb
jb
or
xor
sub
add
add
test
nop
(bad)
mov
push
jle
add
loopne
adc
retf
ss
lods
sbb
and
adc
add
adc
add
xchg
mov
adc
mov
sti
adc
xchg
xchg
mov
clc
sub
cmps
push
xchg
push
or
add
retf
(bad)
inc
pop
and
jbe
xor
int
(bad)
adc
mov
sar
push
jnp
cmps
mov
push
aas
push
loopne
retf
call
and
and
add
adc
movs
fwait
push
pop
in
clc
jne
add
xor
add
pop
mov
mov
call
cwde
mov
mov
fisubr
test
jle
push
sbb
cmps
lock
in
add
cdq
add
sub
add
push
in
test
fsub
push
push
inc
xchg
adc
rol
add
dec
cld
inc
cmps
jne
fcomp
pop
loopne
inc
clc
jle
push
and
fsubr
shl
jo
or
adc
sar
sbb
(bad)
push
jp
or
ja
loope
adc
adc
(bad)
xor
xchg
or
sbb
jo
dec
xor
in
sub
dec
aaa
call
push
retf
push
int
rcl
sub
inc
or
mov
dec
(bad)
pop
div
and
push
stc
mov
sbb
xchg
mov
jge
idiv
retf
pcmpeqb
test
inc
cmp
mov
dec
movs
ror
sbb
and
sub
xor
mov
jns
or
pop
loope
mov
jge
bound
mov
mov
or
push
adc
pop
sbb
inc
pop
std
and
addr16
xor
adc
sub
fisubr
inc
add
adc
fwait
sub
es
or
and
mov
push
into
ins
data16
mov
loop
int
jl
call
jo
rol
lea
mov
outs
fist
cs
add
mov
mov
sub
(bad)
dec
fsub
or
nop
in
es
cmp
fisttp
enter
mov
pop
mov
xor
test
or
xchg
fmul
sbb
adc
paddq
xor
mov
das
je
and
fs
jns
pop
pop
dec
or
xchg
cld
dec
jnp
sbb
mov
daa
push
loop
adc
mov
mov
mov
cmp
xchg
je
xor
not
mov
push
lea
test
push
xchg
mov
nop
jnp
adc
scas
lock
unpcklps
fsubr
or
inc
sub
push
ss
jo
mov
sub
cmp
test
rol
pop
lods
jae
mov
fs
cmp
in
xchg
dec
push
jae
mov
push
xchg
outs
scas
push
adc
ins
popa
ins
push
pop
mov
mov
add
adc
xor
mov
and
cmp
jo
jo
and
sub
mov
push
add
push
mov
pop
popa
loop
pop
outs
pop
push
push
jne
push
in
(bad)
stc
or
adc
pop
inc
pop
add
push
rol
aas
mov
inc
leave
xchg
pusha
adc
jecxz
leave
enter
push
push
out
ins
inc
leave
nop
int3
xlat
aam
repz
xchg
push
mov
adc
imul
push
retf
loopne
mov
loopne
jg
pop
mov
ss
cmc
jno
mov
cmp
jne
pushf
pop
adc
adc
std
push
jle
adc
inc
cli
push
xchg
mov
cs
popf
adc
mov
mov
std
xor
inc
les
cmc
sbb
(bad)
push
loopne
sti
cmc
aad
popa
mov
popa
adc
jae
dec
js
add
cmp
push
pop
push
adc
lods
hlt
push
xor
jne
xchg
add
jo
fs
sub
ficomp
lea
pop
jmp
test
xor
out
add
inc
adc
fstp
mov
jmp
sbb
add
xor
and
(bad)
fidiv
sub
and
push
lock
call
fcom
inc
dec
loope
xor
pop
push
(bad)
or
mov
outs
mov
ret
cmp
push
mov
add
outs
dec
neg
dec
shl
pop
dec
cmp
ret
pop
ret
cmps
aad
pop
sbb
loop
pushf
shr
pop
fsub
call
add
pop
pop
or
xor
ret
mov
pop
adc
mov
and
jmp
mov
dec
push
sbb
or
mov
sub
cvtps2pi
(bad)
(bad)
jg
fucomi
push
mov
jmp
pop
loope
or
dec
mov
jnp
sbb
inc
ds
push
mov
mov
dec
je
sub
jnp
or
sbb
push
adc
add
push
or
adc
or
js
xor
loope
add
sbb
add
out
inc
push
push
adc
and
lock
nop
je
shl
xor
int3
or
pop
adc
aaa
add
xor
dec
cmps
lahf
jo
shl
iret
push
enter
xchg
fsub
inc
and
add
dec
lods
aam
(bad)
lahf
xchg
lods
or
lahf
pop
push
icebp
add
sub
pop
pop
fist
or
sub
sbb
dec
inc
ja
add
dec
inc
arpl
rcr
jge
pop
test
addr16
cmp
stos
or
sbb
cli
inc
loopne
add
adc
(bad)
aas
loopne
out
int3
bound
and
mov
clc
xchg
ss
xor
dec
enter
and
pop
dec
add
pop
je
push
xor
add
jp
pause
dec
jmp
rcl
rol
clc
ret
jl
sub
clc
sub
nop
clc
pop
add
jmp
ror
into
inc
rol
test
add
repnz
clc
and
cmps
iret
adc
outs
out
add
fucom
mov
add
cmp
ret
jne
cs
shl
jne
or
cs
cmp
add
sbb
sbb
outs
sub
inc
out
retf
push
enter
cld
lea
es
sbb
sub
or
sbb
or
(bad)
neg
mov
and
loopne
ins
dec
mov
test
pop
mov
gs
jmp
fnsave
inc
jmp
push
or
push
fidivr
or
mov
mov
fnsave
push
outs
out
test
xlat
repnz
test
or
sbb
and
test
clc
fsub
xchg
ror
xor
in
mov
sbb
dec
rcr
scas
push
xchg
dec
test
sub
add
adc
repz
sahf
mov
lods
fcomp
push
push
add
dec
test
daa
push
out
(bad)
xor
jp
es
xchg
(bad)
loop
push
dec
daa
lods
and
mov
push
inc
jmp
push
imul
ficom
add
push
fnstcw
loopne
pop
frstor
pop
xor
push
inc
mov
pop
popf
cmp
out
ds
bound
xor
mov
push
dec
jb
gs
(bad)
mov
cmovb
mov
mov
push
ret
inc
cmps
cwde
mov
jp
nop
movaps
add
sub
inc
enter
(bad)
lea
mov
rol
lods
dec
jmp
xor
dec
movups
or
mov
in
dec
or
not
push
mov
sub
mov
mov
mov
shr
push
je
pop
pop
fist
fild
jb
jae
xchg
mov
in
in
jl
in
cmp
in
in
ins
push
in
pop
pop
push
in
in
push
dec
dec
inc
in
in
inc
cmp
xor
in
in
sub
and
imul
shl
(bad)
jno
mov
call
adc
inc
ficom
nop
mov
jb
xor
and
push
xor
push
mov
inc
sbb
inc
ret
add
adc
addr16
xchg
and
arpl
test
dec
fs
in
addr16
in
in
imul
in
outs
outs
push
push
in
in
push
push
push
push
in
in
push
push
pop
pop
in
in
pop
pop
pop
pop
in
in
pop
pop
inc
inc
in
in
inc
inc
inc
inc
in
in
inc
inc
dec
dec
in
in
dec
dec
dec
dec
in
in
dec
dec
xor
in
in
xor
xor
in
in
ss
cmp
in
in
cmp
cmp
in
in
ds
and
in
in
and
and
in
in
es
sub
in
in
sub
sub
in
in
cs
adc
in
in
adc
adc
out
in
push
pop
sbb
lea
test
lods
and
jno
mov
xchg
jo
fbld
es
xchg
xchg
or
mov
dec
das
je
jle
fnstenv
fcmovnb
sub
sbb
fdiv
push
push
ror
push
mov
sub
out
jns
das
nop
lock
dec
jg
mov
pop
pop
clc
ds
push
adc
fild
or
in
cwde
(bad)
jae
push
popa
nop
enter
cld
adc
cmp
add
or
or
daa
bound
test
data16
lahf
fimul
pinsrw
or
test
dec
in
(bad)
sub
jo
pop
sub
inc
and
add
and
inc
add
add
aaa
inc
adc
gs
iret
lds
xor
pop
inc
ja
add
add
dec
hlt
or
in
sub
and
hlt
pop
cmps
call
cwde
aas
inc
mov
inc
je
mov
push
or
dec
mov
dec
sar
sub
or
mov
adc
jae
jae
call
dec
aad
int
loopne
xor
fs
or
inc
adc
dec
fiadd
pop
add
add
not
inc
adc
ret
jle
xchg
or
imul
js
es
mov
ror
sbb
push
mov
mov
sbb
sbb
or
adc
movs
jns
sub
inc
popa
or
jno
daa
push
inc
adc
dec
sub
mov
std
add
lgs
sub
mov
xchg
push
mov
xchg
outs
xchg
fisttp
mov
mov
adc
stos
lods
in
sub
and
std
fs
popa
mov
jmp
sbb
adc
add
fld
or
pop
add
push
adc
hlt
rcl
or
call
inc
outs
movs
sub
in
outs
ins
mov
test
and
pop
and
dec
nop
and
cmp
das
fs
mov
ins
test
adc
cli
cmc
sbb
inc
pop
dec
mov
xor
and
fst
mov
popa
add
jbe
scas
add
loope
mov
xor
ret
call
cmp
fiadd
or
xchg
dec
inc
ret
mov
fcomp
mov
nop
pusha
mov
je
outs
or
pop
xor
add
popf
adc
ret
sbb
retf
sbb
scas
lahf
hlt
mov
jmp
push
xor
mov
cmp
xor
pop
(bad)
push
inc
xchg
xchg
jmp
xchg
test
adc
adc
push
push
inc
mov
add
push
aas
in
jmp
jmp
fwait
cmp
add
inc
lock
ret
jae
pop
inc
inc
push
jmp
and
cmp
jp
fmul
mov
out
push
retf
stos
xchg
add
inc
cmp
pop
or
popw
adc
in
mov
movs
bound
je
jecxz
or
fs
add
lea
xchg
loopne
xchg
sub
test
mov
xor
mov
push
sub
icebp
lds
loopne
imul
movs
mov
xchg
jno
pop
test
fmul
add
adc
or
ds
sbb
xchg
and
fdivr
mov
or
adc
fiadd
sub
in
xor
sbb
mov
and
adc
je
sub
adc
iret
lea
pop
jb
das
xor
mov
fsubr
push
sti
jno
jne
dec
sub
fst
loop
(bad)
call
xchg
xchg
inc
adc
and
sbb
jmp
and
xor
and
imul
jl
repnz
inc
aam
retf
lds
js
pop
and
(bad)
adc
inc
push
int3
in
pop
fbstp
test
push
in
popf
or
jbe
mov
jne
adc
cmp
jg
xor
inc
scas
(bad)
lahf
add
lds
rol
mov
xchg
sahf
adc
xchg
ins
(bad)
fsubr
scas
popa
fdivp
pusha
cmp
aad
and
adc
in
mov
retf
inc
mov
mov
and
and
adc
stc
push
add
(bad)
in
les
sbb
addr16
icebp
inc
jecxz
retf
in
push
xchg
cmp
ja
es
jnp
xchg
test
pop
add
or
mov
dec
inc
mov
lock
ret
xchg
add
cmp
cld
fidiv
xchg
(bad)
jmp
and
inc
xor
jle
std
aaa
test
cmp
and
jmp
or
add
sbb
(bad)
xor
inc
pusha
loopne
test
dec
stos
sub
jg
mov
or
adc
add
(bad)
sbb
pop
push
aas
xchg
(bad)
mov
push
push
add
loope
push
(bad)
adc
and
adc
call
inc
jmp
cmp
cmp
call
daa
mov
sar
push
in
(bad)
sbb
add
cmp
pushf
fadd
cmc
fild
add
and
jb
dec
cld
mov
inc
mov
addr16
cmp
push
mov
shr
sbb
popa
(bad)
pop
mov
movs
adc
xchg
push
ss
call
mov
mov
lock
adc
icebp
lds
or
cmp
dec
in
out
in
movs
pusha
adc
in
adc
push
xchg
stc
pop
and
aaa
and
hlt
jne
xchg
add
cmp
push
enter
sub
dec
ret
dec
mov
lock
dec
mov
jl
inc
or
and
mov
frstor
(bad)
iret
sub
clc
mov
stos
mov
in
or
lock
mov
and
add
adc
enter
mov
sub
nop
xor
out
bound
jmp
inc
or
pop
sub
test
daa
inc
loopne
lds
and
mov
add
push
pushf
ret
outs
ret
pusha
jmp
add
enter
cmp
fmul
call
xor
pusha
popa
ret
mov
mov
rcl
mov
pop
dec
sbb
pop
pusha
or
(bad)
cmp
(bad)
icebp
jecxz
outs
ja
in
dec
inc
ja
ss
mov
or
xor
push
xchg
jge
loope
pop
inc
inc
sbb
adc
xchg
jno
xchg
cmc
mov
movs
retf
and
xlat
outs
add
inc
arpl
aad
and
inc
xlat
out
jmp
xchg
out
int3
and
cmps
push
jl
data16
icebp
cmps
cmp
push
and
dec
adc
push
call
vpackuswb
int3
push
or
loopne
sbb
jne
mov
push
add
xlat
or
shr
cmps
inc
enter
ds
loopne
pop
add
rol
mov
pop
cwde
ror
pop
mov
test
out
cmp
inc
cwde
and
out
mov
inc
mov
movs
pusha
ja
xor
xchg
hlt
and
add
push
leave
adc
stos
(bad)
in
adc
bound
mov
rol
cmp
(bad)
adc
imul
sub
lahf
popa
ja
dec
push
inc
mov
and
aad
addr16
sub
sbb
xlat
cmp
mov
push
xchg
lea
sahf
add
fs
cmp
shl
dec
cmp
and
rol
mov
popf
add
shl
xchg
dec
and
cli
or
movs
fdivp
xlat
push
add
pop
mov
scas
lea
xchg
or
adc
and
jnp
aas
loopne
in
es
add
mov
(bad)
fsubr
pop
fdivr
in
popw
xor
add
and
and
sub
in
nop
daa
mov
inc
adc
and
(bad)
cmp
sub
jmp
add
sbb
stc
xchg
rol
mov
sub
aas
mov
shr
sbb
adc
cmp
jne
xor
add
push
sub
xor
cmp
mov
dec
add
push
in
add
pop
cmp
or
xchg
fdivr
out
mov
sub
jge
test
jb
push
xor
mov
add
imul
jle
sbb
mov
popf
push
push
or
cmps
in
popf
dec
rcl
aam
lock
push
jmp
jne
test
add
stos
shr
pop
imul
dec
aaa
pop
inc
hlt
popf
cmp
or
in
push
and
add
dec
pop
jmp
push
mov
inc
inc
xchg
imul
mov
xor
int3
sub
push
and
rep
pop
dec
lea
push
loopne
sbb
dec
ins
mov
stos
(bad)
and
jne
rol
fdivr
xchg
xchg
sbb
mov
xor
test
mov
cmp
pop
xchg
movs
mov
dec
or
mov
fucomip
mov
mov
lahf
test
push
adc
fdiv
push
test
mov
push
and
or
repnz
repz
mov
cmp
cld
inc
inc
(bad)
xor
add
lock
mov
cmps
pop
clc
jmp
pop
and
push
dec
das
or
mov
cmp
inc
add
and
inc
imul
sub
push
es
int3
add
int
adc
lds
shl
jno
sti
pop
je
daa
mov
jmp
in
ss
add
add
adc
fistp
in
mov
dec
mov
or
in
js
ret
dec
jnp
les
in
test
hlt
pop
pop
call
mov
xchg
leave
push
(bad)
cmp
and
out
cmp
dec
das
imul
or
xor
adc
add
imul
pop
dec
mov
sbb
inc
in
dec
inc
pop
lock
lock
nop
mov
dec
adc
inc
add
push
pop
sub
lock
jns
mov
call
cmc
out
push
or
inc
adc
loopne
add
dec
loopne
pop
in
sub
dec
jns
fmul
dec
pop
scas
push
lods
push
loopne
mov
mov
xor
aaa
jae
and
shl
add
cs
mov
loop
inc
add
nop
out
fsubr
mov
dec
jp
add
jg
dec
mov
mov
aam
mov
xchg
sub
aas
push
repnz
push
imul
pop
cmp
inc
fadd
and
cs
daa
adc
push
sti
pop
pushf
stos
sub
adc
push
enter
and
mov
iret
inc
dec
inc
and
sub
xchg
add
add
jg
add
leave
clc
jns
push
push
adc
adc
sbb
xchg
out
arpl
mov
and
push
or
mov
mov
adc
add
jmp
add
push
retf
stc
dec
adc
or
sub
test
idiv
test
push
xchg
xor
call
add
mov
and
adc
out
cmp
inc
fild
icebp
or
mov
jp
lea
pop
dec
loope
ret
ja
lods
cmps
or
sbb
or
pusha
xor
mov
mov
(bad)
pop
sub
mov
cmps
dec
xor
test
rol
loopne
shl
lods
jg
and
mov
nop
push
in
dec
inc
push
push
pop
sbb
cmp
scas
jne
jb
inc
xor
shr
push
aad
ror
cdq
add
ror
jecxz
dec
rcl
js
inc
cli
jmp
fdiv
pop
add
inc
mov
into
cli
fadd
jle
mov
xchg
bnd
or
cli
cmp
and
dec
loope
dec
push
or
subps
mov
test
xor
mov
and
call
add
dec
jmp
dec
sub
ds
and
add
loopne
inc
and
fisttp
cmp
dec
nop
xor
jmp
(bad)
lds
out
xchg
cmps
mov
inc
push
enter
or
mov
mov
sbb
mov
push
mov
or
adc
cmp
push
cmp
add
adc
add
cmps
or
sbb
(bad)
fsubp
push
imul
push
mov
in
push
inc
test
push
pop
movs
dec
ret
hlt
inc
adc
mov
stos
lahf
push
inc
pop
xchg
pop
jmp
inc
xor
dec
dec
or
(bad)
pop
push
xor
pop
rcl
int3
fdivr
xchg
push
retf
jne
cmp
push
(bad)
push
lods
sar
les
mov
and
adc
or
pop
in
add
fcom
dec
push
cdq
push
(bad)
enter
mov
movs
and
jge
pusha
fnsave
sbb
push
xor
pop
lea
nop
ja
ds
mov
pop
jb
mov
inc
clc
mov
jb
adc
mov
nop
push
and
shufps
enter
daa
movs
outs
inc
mov
add
mov
retf
(bad)
outs
lods
push
repnz
sbb
and
adc
fs
(bad)
mov
jo
imul
mov
adc
add
jg
ds
outs
outs
je
imul
push
pop
adc
xor
mul
add
inc
xor
sub
jae
clc
xchg
or
retf
mov
(bad)
or
add
ins
cld
add
jae
je
inc
jmp
fist
jns
int
jg
mov
xor
data16
sbb
fadd
adc
jmp
outs
gs
xchg
imul
dec
sub
push
je
sub
add
jge
nop
jbe
outs
int
mov
pop
jo
sbb
mov
push
inc
inc
add
or
je
sbb
or
push
cmp
or
inc
cmp
push
sbb
or
push
lods
addr16
clc
pop
jb
push
inc
ins
and
or
or
dec
sub
xor
paddb
push
ins
inc
int
cmp
push
push
pop
out
dec
outs
jo
sbb
inc
jns
sbb
fst
je
or
nop
and
mov
imul
adc
xor
sbb
xor
aas
pop
shl
mov
loopne
out
or
fdiv
loope
cmps
enter
jb
cmp
imul
push
(bad)
fcomp
xchg
dec
jl
jp
dec
push
mov
data16
jmp
or
inc
inc
imul
mov
jae
es
les
pop
rcr
push
lods
and
(bad)
jmp
or
mov
jb
movs
mov
ficom
inc
cmp
xlat
pop
sub
cmc
dec
add
fucomp
sub
aam
shl
addr16
(bad)
and
mov
cmps
inc
xchg
pusha
dec
inc
arpl
js
out
mul
pop
xchg
sahf
stc
or
sub
push
inc
or
inc
scas
inc
addps
call
loopne
jecxz
add
add
mov
add
hlt
mov
inc
sar
add
pop
lahf
lods
jb
add
js
push
add
fwait
mov
aas
sahf
sub
xchg
mov
dec
gs
hlt
inc
pop
repnz
add
in
cmp
(bad)
jge
adc
(bad)
les
dec
aam
jb
add
jge
nop
dec
cwde
ja
rol
add
neg
ss
add
push
push
and
ins
test
push
jl
push
sub
xchg
cmp
icebp
pop
ins
and
cmp
xor
pushf
jge
push
add
jmp
js
push
mov
sbb
out
pusha
dec
pop
and
jle
add
push
enter
add
and
jg
icebp
add
pusha
in
xor
fdivr
rcl
sbb
ins
ds
add
push
push
fs
shl
pop
dec
inc
or
lds
cmp
pop
aaa
xlat
fwait
in
add
push
in
mov
stc
jo
pop
sbb
sbb
add
xchg
ins
pop
cld
add
add
sbb
cmp
xor
add
pop
hlt
pop
ins
and
pop
sbb
mov
inc
inc
dec
mov
push
and
push
popa
mov
scas
or
jae
pop
sbb
push
jno
clc
mov
inc
pop
xchg
adc
xchg
add
int3
pop
and
pop
aas
push
int3
push
or
mov
push
pusha
frstor
ins
gs
add
jmp
add
mov
add
(bad)
lock
and
addr16
jae
repz
add
or
add
loopne
int3
test
out
ins
push
jne
outs
adc
xchg
jbe
outs
adc
inc
repnz
add
rcr
push
inc
arpl
or
fadd
(bad)
mov
mov
dec
outs
ja
sub
aaa
mov
push
xchg
add
addr16
mov
hlt
pusha
bound
or
mov
dec
sub
nop
into
fcom
sti
and
add
xchg
ret
sbb
sub
mov
nop
(bad)
add
lahf
out
iret
popf
stos
pop
jg
adc
mov
fiadd
call
pusha
mov
fsubr
and
out
jno
jg
push
push
add
pop
loopne
dec
pop
fsub
pop
fistp
rcr
inc
mov
mov
out
jge
pop
pop
es
mov
in
lahf
fst
rol
mov
pop
jle
push
js
pop
or
add
call
or
(bad)
loopne
cmp
lods
or
push
push
ret
ins
xchg
cmp
fadd
rcl
fcomp
xchg
repz
pop
xchg
das
push
cmp
sbb
ja
mov
shr
pop
jle
pop
pop
inc
loopne
pusha
iret
inc
jmp
push
xor
fldcw
push
sar
stos
mov
test
scas
push
mov
sbb
pop
movs
or
add
and
add
add
and
xchg
jbe
dec
pop
js
add
add
pop
inc
es
movd
inc
dec
mov
iret
sar
and
adc
xor
dec
push
inc
or
leave
lods
jb
cmp
or
push
mov
dec
ins
iret
inc
jnp
clc
jbe
xlat
movs
sub
sub
dec
mov
inc
lock
push
push
fstp
nop
or
jae
fadd
xlat
mov
jl
ja
in
test
ret
mov
cmp
mov
cmp
aaa
aad
push
int3
pusha
mov
mov
jb
rol
hlt
push
dec
ret
in
jge
xchg
mov
mov
mov
push
sub
js
lds
scas
push
scas
push
imul
mov
(bad)
or
mov
ds
xor
push
test
pop
ins
rcr
jo
clc
pop
in
daa
jns
ret
inc
(bad)
sub
push
and
outs
push
pushf
fcmovb
mov
fnsave
mov
aam
push
xor
imul
out
pshufw
and
hlt
mov
into
aam
fisub
es
push
sbb
mov
shl
mov
inc
ret
and
dec
and
jbe
fs
sbb
cmp
call
arpl
adc
mov
pop
dec
xchg
pop
adc
fimul
jb
mul
imul
test
jo
xor
cwde
cli
inc
fiadd
aam
add
jnp
fld
clc
push
aaa
sti
mov
mov
pop
add
rol
mov
sbb
mov
jle
xchg
or
cmp
or
popa
xchg
fsub
das
and
jmp
in
sub
leavew
adc
mov
ret
inc
sub
call
(bad)
push
out
pop
data16
inc
sahf
out
gs
mov
sbb
mov
xor
ja
adc
add
jne
push
hlt
add
inc
mov
add
loope
xchg
cdq
sbb
or
dec
or
adc
or
push
jecxz
add
aaa
push
ins
pop
adc
adc
shl
jne
(bad)
xor
sbb
aam
mov
pop
je
jmp
sbb
fcom
cmp
loope
jp
out
cmp
xor
inc
popa
fwait
test
add
add
jbe
or
sub
fidiv
ss
adc
out
inc
inc
push
sbb
cmp
(bad)
dec
lods
shl
lock
cmp
ds
movs
inc
push
(bad)
xor
push
push
xchg
sub
lock
adc
add
push
sub
cmp
add
and
loopne
or
das
outs
push
xchg
daa
mov
dec
inc
pop
es
movs
mov
pop
jne
(bad)
and
pop
and
or
out
jnp
xchg
aaa
clc
jno
sahf
or
std
xlat
push
repnz
cmp
dec
adc
and
aad
lahf
not
icebp
jl
xchg
or
inc
jle
sbb
das
dec
cld
pusha
iret
cmp
inc
sbb
pushf
fsubr
aaa
inc
outs
dec
adc
lahf
pop
jl
repz
dec
add
adc
or
shl
add
lods
nop
inc
nop
add
mov
and
jmp
out
mov
push
sbb
pop
ss
jne
pop
jmp
jnp
popa
(bad)
mov
jg
mov
mov
lea
sbb
popa
jg
cmps
dec
jp
or
loopne
jle
ror
or
mov
scas
or
arpl
cmps
fisub
imul
dec
xchg
ret
xor
mov
aaa
dec
jbe
scas
frstor
add
push
dec
xor
test
add
fst
jle
add
cmp
popa
scas
mul
add
push
ins
pop
jb
scas
test
push
xor
sbb
push
mov
cmps
pop
sbb
or
jne
in
ja
mov
ja
sar
jae
pop
ins
dec
cmps
ja
add
inc
sahf
scas
xchg
lds
loop
addr16
xor
loopne
push
pop
call
imul
scas
mov
mov
fdiv
jo
push
(bad)
(bad)
aam
push
and
inc
ret
add
movhps
push
inc
sahf
jo
push
mov
add
imul
movs
push
div
or
(bad)
sbb
outs
xor
je
inc
xchg
ins
xor
out
dec
es
push
push
pcmpeqb
sub
mov
fisttp
bound
jns
out
push
inc
xor
jne
je
aam
cs
inc
fadd
or
add
ja
test
popa
jg
sbb
stos
or
jnp
in
push
mov
or
outs
pusha
jb
icebp
cs
aas
adc
in
call
rol
add
pop
ja
mov
inc
inc
or
aas
lahf
adc
push
ret
cmps
ins
aaa
daa
jb
push
cmp
push
bound
push
or
dec
pop
cld
mov
sub
or
ins
je
adc
or
mov
pop
dec
xchg
scas
dec
or
sub
scas
push
xor
aas
or
inc
ins
cmps
dec
inc
add
pop
and
or
push
mov
jbe
leave
push
cs
dec
cmps
and
imul
add
or
cmp
sub
adc
arpl
fistp
out
add
icebp
xor
push
sbb
sbb
scas
push
out
pop
inc
sub
push
cmp
js
rol
pop
cmps
sbb
mov
push
scas
or
(bad)
out
dec
ss
lahf
adc
dec
sbb
dec
push
push
push
aaa
pop
mov
mov
mov
pop
adc
in
mov
inc
xor
out
jecxz
xor
xor
call
ja
pusha
mov
out
adc
dec
jp
cmova
inc
mov
dec
mov
push
xor
or
cmovs
sti
scas
ret
mov
push
xor
(bad)
sbb
dec
push
inc
ss
imul
push
retf
adc
mov
repz
je
dec
mov
loop
push
add
push
adc
jmp
sub
push
mov
jmp
xchg
and
mov
inc
mov
push
mov
lea
sti
mov
adc
nop
sahf
hlt
push
dec
movs
push
push
cmp
pop
popa
sahf
outs
es
mov
xor
outs
jge
jge
mov
dec
or
adc
mov
xchg
mov
inc
push
lea
popa
lea
xor
xchg
mov
and
cld
int3
fild
adc
jl
ins
jmp
pcmpgtw
ds
or
add
add
call
(bad)
mov
push
cwde
cmp
mov
xor
das
dec
adc
test
sbb
lea
push
(bad)
pop
jb
outs
dec
sub
xor
aam
sbb
(bad)
fadd
add
jb
daa
sbb
push
out
cmp
lods
outs
movs
je
xor
pop
hlt
out
adc
mov
js
jns
xchg
movaps
js
ret
das
div
into
add
dec
push
xor
mov
jo
sbb
sub
xor
je
mov
ins
add
and
sbb
add
and
mov
gs
sub
or
ficom
inc
adc
inc
add
nop
adc
aas
mov
mov
jae
mov
jmp
add
cmp
xchg
dec
popa
sbb
or
(bad)
(bad)
mov
in
test
push
(bad)
or
pop
cmp
popa
popa
js
fst
not
push
addr16
inc
inc
or
add
mov
test
xchg
jp
test
dec
dec
popf
mov
cwde
pushf
sbb
ror
inc
imul
popf
cs
mov
nop
jge
adc
lods
out
jb
sbb
push
dec
push
push
cmp
adc
fild
fnstsw
scas
jmp
or
sbb
add
cli
xchg
mov
sbb
and
sbb
pop
(bad)
sbb
jmp
jp
in
pop
pop
inc
clc
clc
cli
mov
sbb
jmp
cmp
lods
adc
test
push
push
jo
loopne
movs
sbb
or
mov
dec
jge
jle
mov
jmp
mov
aad
fwait
add
push
push
or
inc
xlat
into
push
in
mov
or
dec
mov
test
je
sbb
jo
jp
sbb
mov
dec
or
dec
leave
jp
xchg
sub
mov
xchg
scas
sar
jbe
add
xchg
rol
push
jbe
fldenv
ror
pop
dec
imul
stos
xor
arpl
dec
pop
test
lahf
xchg
xchg
cdq
lahf
jnp
pop
pop
repnz
add
or
(bad)
sub
or
push
pop
sub
scas
jge
and
outs
dec
or
xor
dec
xchg
and
imul
or
dec
mov
fstp
mov
inc
push
das
mov
mov
push
sbb
test
push
sbb
cmps
rcl
push
ror
(bad)
and
mov
and
sbb
mov
adc
or
(bad)
arpl
loope
ins
jecxz
popa
cmp
out
(bad)
mov
pop
or
push
sbb
jg
add
push
nop
mov
ins
or
adc
enter
dec
mov
mov
mov
inc
test
pop
daa
inc
pop
push
leave
sbb
int3
and
fs
pop
test
ret
fs
push
push
jle
mov
icebp
outs
mov
xchg
pushf
inc
cmp
pop
out
cmp
jne
sbb
mov
jle
sbb
add
jle
pop
movs
push
inc
test
outs
in
outs
test
fsub
jne
icebp
mov
mov
adc
adc
cmps
add
scas
jg
cmps
pusha
mov
les
inc
hlt
clc
jbe
and
js
imul
aas
and
lahf
mov
dec
repz
sbb
test
jb
cmp
cmps
inc
call
xchg
cmp
shr
mov
adc
aas
jo
or
sbb
pop
out
or
and
and
and
pop
je
fistp
xor
adc
mov
push
fadd
xchg
and
repnz
and
sbb
push
mov
sar
mov
push
gs
jno
mov
je
sub
jno
fimul
icebp
jmp
push
adc
adc
inc
jno
xchg
rcr
add
je
xor
les
and
dec
inc
pop
and
inc
imul
daa
js
xor
and
pop
cmp
mov
je
jmp
sub
add
cmc
in
push
adc
adc
add
jp
out
hlt
lock
lods
nop
out
sub
dec
xor
jae
jne
adc
xor
xchg
cmp
xchg
(bad)
dec
mov
xor
lods
inc
add
jmp
jne
sub
xchg
outs
add
add
push
inc
bound
or
mov
inc
enter
pop
ins
dec
xchg
xchg
sbb
adc
mov
pop
jo
and
xchg
inc
adc
mov
push
push
test
dec
or
sbb
mov
and
test
push
(bad)
imul
or
fnstcw
divps
push
adc
lea
stos
clc
loope
pop
das
ds
and
lods
test
test
ja
jmp
mov
push
mov
sub
or
sub
or
imul
push
push
or
cwde
push
sub
push
push
dec
je
sbb
mov
sub
or
push
xor
add
jo
ds
call
mov
cmp
psrlw
sbb
sbb
sub
add
int
adc
pop
xor
mov
jge
dec
inc
outs
icebp
add
loopne
dec
cmp
xchg
jle
cmps
pop
and
in
add
cmp
fmul
xchg
sbb
pop
push
ins
xchg
outs
or
mov
push
inc
sbb
mov
retf
sub
aaa
mov
add
les
xchg
sub
or
xchg
jge
xchg
push
sbb
movs
mov
nop
lods
lea
(bad)
jbe
or
xchg
mov
iret
sbb
maxps
pop
and
fdivp
inc
cmp
push
push
sbb
and
lock
add
cmp
ins
repnz
sub
std
cli
fisub
ja
retf
neg
ficom
add
test
xchg
xchg
mov
loopne
sub
push
(bad)
jo
xchg
sub
or
xchg
add
dec
cmc
xchg
rol
dec
sub
adc
fnstcw
inc
clc
add
sbb
aad
mov
cmp
loopne
jae
shr
test
cli
adc
and
xchg
add
push
shr
fst
cmps
clc
rol
pop
pop
pusha
mov
mov
sub
xor
sub
fstp
nop
cdq
mov
cmp
sbb
mov
call
inc
add
push
push
lods
sub
adc
pop
xchg
push
sub
aaa
jns
adc
in
inc
xchg
data16
xlat
or
movs
pop
mov
fdivr
test
ret
movs
(bad)
pop
dec
jb
dec
test
and
cmp
dec
(bad)
(bad)
mov
fisub
jb
push
inc
sbb
repnz
mov
stos
and
cld
out
dec
xor
std
lea
add
push
adc
or
push
and
sub
scas
mov
mov
pop
or
xchg
sbb
xchg
sub
mov
push
int
iret
xchg
or
push
inc
lahf
fdivr
cmp
sbb
call
and
push
or
shl
adc
ds
jns
mov
iret
sbb
inc
or
add
push
sub
dec
mov
bound
lds
sbb
jp
outs
sbb
dec
inc
arpl
inc
adc
ins
das
adc
retf
iret
sti
stos
and
or
shl
sbb
(bad)
in
cmp
inc
cld
ret
je
test
(bad)
out
adc
jne
in
ficom
push
add
imul
inc
or
imul
or
or
daa
sub
sub
or
push
mov
and
ins
and
pop
idiv
and
mov
jne
xor
dec
jo
push
movs
sub
dec
scas
sub
xchg
xor
pop
dec
pop
idiv
jno
cmp
add
repnz
add
mov
push
repnz
add
das
les
imul
mov
jle
inc
mov
xchg
xchg
out
mov
pop
dec
dec
and
push
inc
cmc
mov
inc
inc
push
addr16
rcl
add
lahf
loope
add
add
xlat
ds
scas
sub
adc
lea
xchg
lock
sub
aaa
jmp
xchg
add
sbb
add
jo
push
inc
cmp
push
bswap
mov
(bad)
retf
lea
or
retf
mov
nop
xchg
and
ins
(bad)
nop
jecxz
xchg
cli
int3
push
push
cmps
dec
mov
and
je
add
sub
jb
and
ins
cmp
mov
fwait
ins
imul
dec
icebp
pop
aas
ja
sub
mov
shr
mov
je
xchg
cmps
pop
hlt
mov
(bad)
sbb
in
test
(bad)
lock
rol
ins
fisttp
out
pop
push
mov
imul
push
xchg
loop
push
(bad)
mov
xchg
inc
adc
cmp
or
neg
shl
fmul
or
push
or
or
sbb
enter
sub
test
and
shl
fldcw
cs
or
aad
xchg
sbb
rcr
add
aaa
mov
aam
cmp
adc
xchg
popf
jne
xchg
sbb
xor
jge
or
sbb
push
imul
ret
shr
cmp
adc
and
mov
or
mov
sbb
fstp
pop
and
sbb
or
sub
loopne
and
cmps
sbb
nop
inc
pop
fsub
arpl
sub
dec
jecxz
ins
mov
pop
xchg
adc
(bad)
loopne
add
fadd
mov
cmp
push
jae
mov
das
inc
int3
psubw
xchg
loopne
push
sbb
push
movs
mov
pop
rol
inc
les
dec
jmp
dec
inc
dec
adc
pop
call
add
mov
push
adc
fimul
push
dec
lea
lea
add
test
mov
pop
add
add
mov
add
hlt
push
and
neg
mov
mov
adc
xor
sub
xor
fist
mov
lea
pop
pop
loope
dec
repz
pop
push
inc
dec
jne
jbe
add
cmp
mov
mov
xlat
pop
push
sbb
rcl
and
aam
dec
pop
lea
mov
and
ret
dec
js
fiadd
sub
push
psraw
inc
add
or
jmp
inc
cld
mov
(bad)
mov
add
inc
ret
mov
jmp
(bad)
sti
mov
and
mov
and
nop
xchg
add
or
aaa
sbb
cwde
sub
or
je
mov
add
jne
ds
ds
int
test
movzx
sub
test
push
(bad)
pop
movs
lea
push
cs
jmp
dec
shl
data16
in
or
in
xchg
cld
lea
aas
push
icebp
test
adc
push
jp
ja
sbb
dec
xchg
lock
jbe
push
icebp
inc
das
push
movzx
lea
repnz
xchg
or
test
test
or
cld
xchg
mov
pop
pop
mov
add
push
push
push
xor
inc
sub
inc
adc
xchg
cmp
push
inc
mov
add
or
ins
pop
pushf
clc
int
es
pop
xor
int3
inc
push
cmp
in
cld
sar
sar
mov
test
xchg
addr16
xor
dec
daa
retf
mov
cmp
push
push
jecxz
sub
ret
and
dec
outs
jge
inc
push
outs
push
dec
mov
push
movs
hlt
sbb
xor
clc
inc
cs
in
shr
loope
fmul
sbb
pop
add
jnp
or
sub
sbb
das
adc
xor
stc
add
cmp
je
jp
shr
ret
and
retf
add
mov
(bad)
inc
dec
jnp
out
ins
pusha
imul
add
cmp
adc
cwde
test
add
push
mov
add
or
shr
pop
add
mov
test
and
stc
rol
inc
nop
xchg
cmp
cdq
mov
sub
(bad)
movs
add
cdq
or
arpl
inc
lock
mov
jne
daa
call
mov
or
dec
or
cs
xor
sbb
pop
shr
pusha
jne
sbb
fcomp
(bad)
mov
shr
mov
cmp
jg
test
jle
cmp
jl
cmps
inc
cmp
int
enter
jg
jno
ret
cmp
jle
jl
test
xor
xchg
stos
hlt
loopne
or
jo
push
adc
inc
mov
pushf
das
add
and
sub
or
jne
push
push
dec
arpl
ins
push
pop
and
adc
add
fcomp
inc
jae
pop
aad
test
cwde
ins
lods
xchg
sbb
scas
(bad)
push
sbb
jbe
in
inc
mov
scas
or
lds
jns
das
fcomp
sar
sub
mov
pop
xchg
add
jge
mov
js
sub
in
das
push
fld
hlt
in
sub
loopne
cdq
loope
jl
push
cmp
dec
sub
ror
fcmovu
mov
dec
jne
cmp
push
xchg
add
out
jo
push
xor
inc
aaa
sub
(bad)
lds
push
clc
add
sub
jnp
cmp
sbb
jmp
test
pop
aam
mov
dec
enter
cmp
sbb
xor
inc
mov
pushf
nop
pop
outs
(bad)
enter
inc
mov
ins
mov
push
mov
outs
add
add
aas
je
retf
shl
sahf
pop
inc
rol
repz
test
in
push
xchg
sbb
mov
mov
das
sbb
mov
cmp
adc
add
loope
add
jl
jp
push
imul
test
arpl
arpl
sar
pop
or
test
mov
dec
ret
test
xor
mov
out
sahf
out
push
or
or
sub
inc
lods
adc
call
or
das
lods
gs
lock
int
mov
xchg
jl
aas
bound
sbb
stos
mov
sbb
jb
cmp
or
push
mov
sub
add
out
add
test
xor
cmovs
push
jle
lock
jmp
mov
push
push
mov
cvttps2pi
pop
push
add
and
sbb
sub
adc
ins
and
mov
xor
inc
push
and
pop
or
scas
xor
push
push
sub
ins
enter
inc
or
pop
sbb
push
or
xor
(bad)
retf
enter
icebp
pop
stos
lea
out
adc
cmp
imul
add
add
es
pusha
push
outs
pop
sar
push
pusha
add
cwde
inc
mov
stos
xor
loop
push
pop
add
imul
js
mov
add
test
repnz
mov
clc
pop
xor
xchg
enter
dec
sub
sub
call
repnz
mov
lahf
clc
clc
mov
hlt
jmp
dec
add
pop
xchg
mov
dec
loope
(bad)
or
nop
mov
dec
(bad)
xor
test
es
sbb
adc
mov
add
pop
sub
mov
and
hlt
int3
sbb
mov
aad
outs
fadd
imul
hlt
loopne
or
push
loop
fcmove
nop
cmp
and
jp
dec
movs
loopne
nop
push
add
ret
(bad)
jp
sub
adc
fmul
xor
or
xor
mov
out
in
outs
add
push
lods
or
xchg
call
out
adc
mov
daa
loop
push
and
xchg
mov
in
jb
lods
mov
cli
mov
or
push
push
xchg
dec
hlt
lods
rcr
mov
fsubr
in
scas
add
cmp
hlt
loopne
fcom
shr
lock
int3
movs
add
shr
ins
dec
adc
aas
test
mov
adc
and
adc
daa
mov
sti
mov
dec
loopne
aaa
pop
mov
adc
cmp
sbb
sar
lahf
sbb
nop
ja
ins
retf
ds
dec
mov
xchg
movs
ret
jle
xor
adc
cli
xor
add
or
push
push
test
or
stc
iret
add
cmovp
lock
cmp
leave
cwde
inc
sbb
xchg
arpl
sub
adc
int3
outs
adc
int3
and
cdq
mov
sbb
dec
dec
mov
dec
gs
jl
mov
rcr
fs
dec
hlt
adc
push
inc
mov
sbb
cmp
dec
aam
rcl
nop
out
jmp
inc
aam
pop
mov
scas
sub
adc
fld
jecxz
call
sbb
mov
inc
and
pop
push
and
dec
sbb
pop
xor
movs
pop
in
and
int3
pop
shl
fcmovb
and
out
mov
scas
addr16
add
ret
sbb
pusha
retf
cmp
push
cmp
rcl
inc
jecxz
addr16
cmp
rcr
or
pusha
and
shr
inc
outs
(bad)
push
adc
jb
popa
je
add
xor
das
pop
aaa
mov
ds
inc
and
or
inc
adc
jae
dec
lods
scas
jne
jmp
sbb
cmps
inc
push
sub
sub
ja
xchg
pop
mov
xchg
fs
psubw
mov
in
and
mov
mov
cmp
xchg
arpl
mov
cmp
inc
mov
and
add
daa
popa
add
mov
jbe
dec
bound
adc
jb
leave
outs
or
jle
fcomp
inc
sbb
xchg
sub
test
(bad)
in
inc
jno
adc
or
push
and
ins
fcom
jg
xchg
cmp
jmp
push
push
imul
ficomp
sbb
and
add
cmp
sbb
xchg
add
add
das
ins
clc
add
cmp
movs
dec
xchg
ret
adc
mov
lods
retf
adc
xor
inc
(bad)
push
jmp
fidiv
fist
enter
test
inc
and
push
das
pop
sbb
movs
(bad)
repz
xchg
add
lods
xchg
inc
sahf
or
fdiv
test
retf
add
add
mov
xor
mov
fstp
adc
lds
pop
in
dec
add
and
xchg
pop
outs
shl
test
jle
or
stos
inc
add
imul
inc
inc
or
iret
adc
sbb
mov
call
and
arpl
enter
xlat
add
lods
xor
push
imul
rcr
test
stos
sbb
popf
gs
mov
je
push
je
bound
ret
adc
mov
rol
rcl
inc
xlat
or
cdq
jbe
sar
(bad)
jl
add
mov
push
das
push
mov
xor
icebp
outs
cld
mov
shr
cdq
call
pop
neg
mov
les
imul
pop
test
test
xlat
push
fwait
jo
sbb
or
and
jecxz
stos
jg
push
or
xchg
cmp
xlat
inc
popf
jo
stc
or
push
or
jbe
(bad)
outs
call
adc
dec
mov
ins
and
push
push
mov
ret
inc
pop
int3
lea
mov
sbb
push
dec
sub
xor
rcr
adc
sbb
imul
and
inc
mov
inc
xor
and
les
xchg
adc
aaa
or
mov
push
pop
lahf
push
adc
mov
lea
cld
sbb
xchg
lods
sbb
adc
inc
lea
push
cmc
push
mov
or
scas
lock
imul
jl
push
and
iret
arpl
inc
daa
jmp
sub
stos
test
jno
pop
push
xchg
pop
sub
clc
out
jnp
add
add
add
mov
cmp
test
aas
jne
aam
or
popa
sub
inc
in
pusha
es
or
xor
sbb
mov
and
inc
push
jge
(bad)
and
dec
mov
popf
add
xor
js
das
push
or
push
test
cmp
and
es
aaa
outs
add
inc
sbb
icebp
loop
arpl
mov
inc
xor
nop
es
sub
mov
rol
cdq
or
xlat
(bad)
xchg
outs
sub
inc
inc
sbb
retf
mov
mov
push
inc
(bad)
mov
and
push
and
lock
xchg
call
aad
mov
clc
movs
xchg
sub
cmp
cmps
cmp
cwde
nop
and
enter
aad
pop
popf
sti
mov
dec
(bad)
push
jns
push
popa
lods
sub
xor
mov
xor
hlt
jo
xchg
and
dec
mov
popf
push
push
fild
repnz
and
cmp
inc
jl
in
mov
pop
popa
push
movs
mov
mov
or
pop
scas
fs
ret
std
adc
sbb
ins
and
dec
aam
add
sbb
push
xor
xor
aad
fimul
adc
ficom
out
rcr
or
sahf
push
daa
add
and
push
or
jmp
pop
stc
xchg
push
mov
sub
pop
sbb
clc
adc
jns
mov
add
push
cmp
or
sub
jnp
das
and
sbb
and
fcom
mov
push
ins
add
and
in
adc
sub
pushf
cmps
adc
add
test
sbb
push
and
mov
mov
add
add
dec
xchg
push
pop
repz
dec
sub
mov
inc
nop
mov
xor
jae
mov
adc
dec
loopne
mov
jl
repnz
mov
push
(bad)
add
sbb
mov
sbb
fs
jnp
(bad)
(bad)
mov
jmp
push
xor
push
dec
les
hlt
sahf
cli
ret
lea
shl
repnz
and
adc
pop
push
and
xor
dec
sbb
(bad)
jle
push
or
or
or
daa
push
or
push
or
scas
lods
sub
pusha
add
push
scas
adc
mov
push
ror
inc
loopne
rcr
sub
lods
mov
push
sub
je
pusha
sar
es
pop
mov
pusha
and
dec
or
loope
or
mov
push
add
push
mov
(bad)
pop
ins
jne
sbb
ins
popa
test
pop
inc
scas
jo
push
cwde
clc
aaa
je
adc
xchg
add
add
and
add
sahf
jno
sbb
aaa
sub
call
xor
mov
adc
ret
cs
sub
div
xchg
push
sub
jle
lock
inc
sub
adc
daa
popa
ins
mov
sub
sub
repz
xchg
inc
pop
adc
adc
adc
mov
mov
adc
sbb
lahf
mov
add
sub
or
and
pop
fwait
adc
jmp
xchg
or
test
test
dec
adc
adc
cmp
arpl
test
push
xor
pop
ror
push
sub
push
hlt
out
add
mov
daa
rcr
jle
and
arpl
jecxz
push
rcl
or
movs
xor
xor
inc
addr16
popa
dec
mov
add
add
inc
pop
or
aad
adc
loope
jle
fisub
enter
inc
ret
sbb
imul
sub
sbb
jle
or
xor
push
sahf
xchg
sbb
push
push
loopne
adc
adc
in
jmp
mov
pop
test
ss
jae
das
or
dec
pop
xchg
push
imul
sub
push
xor
pop
dec
adc
aaa
and
(bad)
jle
and
mov
jg
pushw
mov
or
add
stos
test
push
popa
imul
push
pop
xor
ret
shl
add
adc
or
and
push
mov
aam
lods
xor
sbb
push
adc
enter
fidiv
lods
add
daa
xor
out
push
mov
sub
mov
push
sti
cmp
fnsave
adc
sub
aas
dec
daa
cmp
add
sahf
push
adc
push
outs
aam
and
cdq
cmp
or
scas
add
or
jg
jge
and
inc
je
xor
push
xchg
nop
in
mov
ret
cmp
clc
mov
sti
adc
adc
ret
dec
shr
inc
push
and
out
or
jmp
adc
adc
and
(bad)
mov
pop
adc
adc
call
pop
fmul
imul
xlat
int
call
fiadd
hlt
daa
add
retf
sub
sar
hlt
fnstcw
and
adc
mov
adc
arpl
adc
data16
popa
jl
or
adc
das
mov
push
retf
ss
call
ret
cmp
je
mov
into
or
ror
(bad)
jns
sub
clc
mov
adc
lea
mov
repz
pop
mov
pop
mov
inc
js
cld
add
jle
clc
pop
pop
js
push
das
jb
daa
jmp
xor
lahf
inc
sti
das
xadd
ss
mov
nop
test
mov
icebp
or
pop
rcr
or
sbb
xchg
push
icebp
push
xchg
push
mov
test
xchg
cmp
add
fsub
out
cs
pop
adc
sub
out
call
adc
mov
jmp
fsubr
mov
in
push
cli
push
cmp
cmp
les
xor
adc
pop
out
add
nop
mov
mov
and
sub
out
sbb
adc
sbb
or
rol
add
pop
xor
leave
push
(bad)
cmp
jo
jb
and
aas
pop
push
sub
jecxz
ds
fs
push
mov
int3
aaa
inc
aaa
adc
fxam
pop
loope
xor
xchg
cmp
xchg
or
adc
or
adc
sbb
add
and
or
fild
dec
push
dec
scas
nop
and
mov
gs
cmp
jle
bound
scas
or
xchg
xchg
shl
mov
lea
sbb
pop
sbb
xchg
push
push
sbb
and
outs
mov
ret
dec
mov
mov
sub
gs
xor
icebp
test
mov
xchg
jno
dec
adc
mov
data16
sbb
dec
xor
mov
outs
les
mov
push
cmp
inc
inc
jno
jo
add
popa
jmp
adc
jle
cmp
mov
xor
sub
sub
mov
sub
lahf
and
pop
mov
(bad)
adc
clc
inc
fnsave
add
and
and
dec
iret
dec
ret
shl
and
sbb
pop
js
ret
cmps
clc
cmp
imul
mov
jno
test
push
bound
in
push
add
inc
ret
pop
mov
loopne
or
out
push
clc
mov
test
cld
sbb
ss
jecxz
ret
push
xacquire
les
in
xchg
inc
sub
jmp
inc
mov
test
jbe
iret
xor
jae
ret
es
cmp
dec
leave
push
inc
cld
and
les
jecxz
imul
mov
push
add
mov
inc
mov
test
test
sbb
imul
in
inc
jo
inc
rol
and
fist
add
call
mov
xchg
test
sub
adc
push
add
stc
or
sar
js
jmp
adc
es
push
xor
imul
inc
and
pop
inc
inc
loopne
xchg
ins
out
cmp
xor
cld
cs
xor
add
fild
sub
xor
or
(bad)
sbb
mov
push
popa
push
dec
or
dec
add
sbb
jp
xor
push
mov
inc
xor
ja
xor
fs
dec
arpl
adc
sub
pushf
jno
das
es
dec
imul
dec
xchg
push
add
call
inc
and
(bad)
es
rcl
push
or
sbb
dec
cli
(bad)
or
out
jg
mov
nop
mov
push
add
out
stos
je
movs
sbb
inc
call
dec
and
stc
sbb
stos
cmc
and
lock
xor
and
not
ins
xchg
push
gs
add
sbb
xchg
sbb
dec
mov
in
pop
test
push
inc
xchg
mov
sbb
cmp
inc
rcr
lods
pop
sub
cmp
mov
and
push
rcr
adc
inc
les
(bad)
push
pop
mov
cmp
xchg
int3
add
mov
dec
adc
int3
push
sbb
xor
pusha
push
push
pop
pusha
vmwrite
and
leave
shr
and
test
jmp
xchg
cmps
dec
xchg
cmc
dec
xchg
adc
mov
add
mul
dec
inc
addr16
inc
jne
movs
mov
mov
es
ins
adc
pop
mov
cmp
(bad)
cs
or
jo
xor
adc
inc
sbb
inc
aaa
rcl
jmp
dec
sahf
add
outs
inc
xchg
jns
or
xchg
rol
(bad)
inc
add
in
es
pop
frstor
pcmpeqb
xchg
push
imul
es
xchg
ret
jg
retf
jnp
mov
xlat
not
call
jne
scas
cmps
fs
cli
adc
int
rol
jle
lods
retf
dec
mov
sbb
and
mov
push
add
add
or
mov
pop
push
inc
movs
mov
cmps
out
je
adc
and
inc
fsubp
sbb
sub
mov
lock
jae
movs
sub
xchg
or
cmp
hlt
inc
xor
jl
movs
ss
fldpi
xchg
popa
add
and
inc
cmp
adc
fsub
xor
jg
mov
pop
pop
and
and
bound
dec
or
cmp
les
inc
mov
adc
fmul
sub
cdq
cwde
xchg
ins
xor
add
inc
js
nop
jge
not
add
arpl
imul
lahf
mov
mov
dec
mov
out
push
fmul
or
jl
or
cld
pop
and
lods
ss
fistp
pop
lods
jge
int3
sub
sbb
fsubr
jecxz
sub
mov
push
sbb
adc
mov
xor
cmps
hlt
push
pop
push
fdivr
cwde
stos
add
push
movs
sbb
in
nop
add
mov
push
mov
pop
scas
mov
xchg
xchg
or
jmp
loope
pop
inc
sub
mov
xchg
aas
dec
outs
cmp
je
mov
pop
daa
rol
adc
imul
cs
inc
mov
dec
rol
in
sbb
fs
or
jbe
inc
push
mov
test
mov
cmp
jne
adc
jbe
xchg
test
ins
jl
mov
ret
mov
ret
jecxz
iret
das
inc
and
dec
lock
xchg
pop
adc
movs
daa
rcl
retf
dec
sbb
shl
cmc
loop
fld
outs
jg
je
add
pusha
dec
add
pop
or
push
mov
(bad)
out
dec
pusha
ror
sbb
add
xchg
(bad)
push
sub
(bad)
outs
sub
clc
xor
pop
pusha
pop
adc
adc
bound
mov
add
or
and
cmp
into
inc
xlat
xor
int3
dec
repnz
pop
sbb
rol
fld
mov
es
cmps
sbb
cs
xchg
ja
xor
and
nop
loopne
inc
add
loopne
dec
and
(bad)
sub
and
bound
push
xchg
dec
add
loope
sar
movs
mov
std
sub
jb
xor
loope
or
inc
cmp
fs
pop
fmul
call
es
and
add
ja
pop
pusha
into
(bad)
lock
outs
push
adc
int
jle
sbb
push
inc
or
xor
add
je
cdq
ret
cmp
lods
sbb
pushw
out
or
nop
jmp
sbb
test
or
(bad)
rcr
inc
dec
sub
cmps
ret
scas
aam
test
pop
iret
mov
mov
dec
dec
jle
loopne
ds
in
stos
inc
call
inc
jle
fisub
lock
les
movs
rcl
hlt
and
add
push
mov
cmp
jo
add
mov
rcl
push
psubsb
mov
sbb
xchg
push
sub
or
ins
ret
ins
inc
lods
imul
ss
mov
imul
mov
(bad)
shl
js
in
popa
mov
sub
cmp
or
lea
aaa
sbb
push
sbb
test
mov
and
inc
cmp
ins
lods
bound
add
in
cmp
mov
sbb
ret
dec
jge
sub
inc
mov
and
xlat
test
ret
cmps
or
nop
outs
xor
dec
scas
push
add
(bad)
push
(bad)
repz
fidivr
sub
mov
pop
sahf
dec
stos
and
xor
cmp
push
add
imul
cmp
mov
mov
rcl
ins
cs
mov
es
cmps
fmulp
aad
(bad)
lea
nop
mov
jo
lods
and
sub
sub
dec
imul
adc
sub
ret
stc
dec
ja
adc
xlat
dec
jmp
fadd
test
dec
inc
inc
dec
or
cmp
sub
jno
loope
test
or
xchg
aaa
adc
movs
(bad)
test
mov
push
std
push
or
loope
sbb
hlt
adc
add
xor
xchg
add
xor
icebp
movs
sub
add
dec
fidiv
ss
push
or
loopne
sbb
(bad)
fcmovu
push
inc
or
xchg
push
jne
(bad)
call
pop
inc
sbb
xchg
fcmovb
xchg
in
movs
or
add
test
in
adc
sbb
mov
add
sbb
jmp
addps
mov
mov
push
dec
in
scas
sar
jne
add
cmp
gs
push
loope
cmp
dec
xchg
push
xchg
inc
mov
add
imul
fisubr
pop
ja
or
std
dec
sbb
sbb
call
sub
daa
cmp
push
call
add
inc
loopne
pop
dec
xchg
fwait
jns
or
inc
retf
dec
inc
inc
mov
and
nop
dec
or
sbb
movs
retf
fcom
add
popa
fisub
cwde
push
mov
mov
add
es
rcl
mov
loop
repnz
inc
sbb
sub
rcr
pop
xor
adc
xchg
mov
dec
add
or
cmp
clc
fwait
and
adc
mov
in
push
push
push
fst
fst
adc
add
sbb
or
and
dec
fldcw
adc
mov
add
fstp
test
int
or
lock
add
mov
pop
pop
cmp
test
adc
add
inc
(bad)
movs
dec
ins
push
rol
mov
pop
add
and
jb
mov
push
sbb
hlt
sbb
add
or
gs
or
ins
add
es
sub
jge
add
sbb
cld
cld
sub
mov
pop
pop
imul
sti
sub
mov
xor
rol
jbe
ins
mov
(bad)
cmp
js
aas
cmps
push
scas
adc
sbb
jne
test
scas
mov
or
add
es
iret
push
jge
sub
rcr
push
movs
sbb
push
imul
pop
call
repz
mov
into
inc
cmp
sbb
and
and
test
cwde
sbb
fcmovb
add
stc
adc
call
pop
sub
inc
or
je
or
je
jmp
add
add
mov
push
xor
adc
retf
shl
sbb
sar
or
sub
cmp
cmp
or
(bad)
pusha
cmp
fild
xchg
je
jge
jl
mov
mov
rcr
mov
ficom
add
clc
loopne
mov
daa
mov
sub
sub
out
add
or
pop
hlt
mov
cmp
js
or
cmp
pusha
inc
cwde
popa
add
and
js
call
sbb
sub
leave
dec
add
pop
lea
in
pop
dec
ins
lods
sbb
cmp
std
or
push
push
add
push
mul
push
ds
mov
sub
addr16
xor
inc
cmp
ja
test
and
push
js
adc
sbb
push
and
mov
dec
jns
(bad)
push
rcr
push
sub
jg
or
inc
xor
lds
sub
jg
xor
mov
cmp
je
sar
pop
jne
inc
dec
push
loopne
adc
cmp
std
xor
enter
sbb
ins
mov
pop
add
mov
cmp
shl
add
mov
adc
rcr
cld
mov
dec
or
xor
pop
add
add
sbb
xor
call
sbb
rcr
in
pop
xchg
xchg
dec
xor
sub
sbb
mov
xchg
dec
fmul
cmp
adc
test
xor
sub
ret
rol
out
movs
jno
dec
sbb
imul
ins
xchg
push
sub
adc
hlt
into
jecxz
jbe
xchg
loop
cmp
xchg
push
and
pop
dec
ins
adc
inc
dec
addr16
pop
sub
sub
jmp
cmc
and
bound
(bad)
inc
jp
xor
xor
dec
cmps
adc
rol
cmps
or
les
out
inc
out
lea
adc
mov
mov
in
inc
xor
push
xor
dec
push
mov
js
cmp
mov
loop
adc
out
mov
adc
add
sbb
adc
adc
ins
xchg
lods
push
popa
or
mov
push
push
add
nop
test
adc
cmps
lock
mov
imul
sahf
cdq
and
jle
mov
(bad)
push
pop
sbb
jl
inc
adc
inc
inc
mov
add
xchg
dec
sub
ja
dec
fdivr
test
pop
push
lods
jecxz
xchg
mov
sti
cmp
mov
(bad)
and
and
mov
jmp
pop
cmps
xor
or
push
aam
add
mov
fld
enter
jae
or
cmp
xor
xchg
ret
ins
fnsetpm(287
mov
ret
and
(bad)
mov
mov
aaa
or
jo
frstor
test
inc
jp
lea
xchg
stos
and
in
jbe
sbb
push
or
xchg
es
test
int3
daa
ins
jns
inc
dec
xchg
jno
sbb
outs
movs
pop
pop
push
and
enter
xchg
sub
push
cmp
adc
mov
push
or
sbb
push
aad
lds
xchg
pop
add
call
test
hlt
adc
add
aad
sub
add
ss
add
mov
je
sbb
dec
mov
mov
mov
cmp
sbb
mov
dec
or
or
pushw
pop
lods
aas
dec
or
push
sub
pop
xlat
repnz
ss
call
and
jge
push
std
pop
clc
add
aam
inc
add
sar
mov
(bad)
and
mov
or
or
les
and
xor
pop
daa
jb
mov
(bad)
jae
adc
fcmovbe
fst
pop
inc
adc
dec
out
and
and
add
cwde
clc
inc
xchg
add
push
sub
loopne
adc
push
push
push
sbb
cmc
adc
jne
mov
mov
sub
je
inc
xchg
jne
add
sbb
ins
or
xchg
mov
xor
push
cs
xor
xor
mov
inc
sbb
mov
add
lds
fistp
and
sub
inc
add
or
jp
cmp
gs
mov
push
dec
mov
into
mov
mov
imul
or
pop
aam
int3
jmp
jbe
daa
or
cvttps2pi
add
rcr
int3
std
add
out
push
push
adc
adc
jmp
add
int3
sub
loope
adc
inc
dec
jno
adc
mov
xchg
and
ins
int3
mov
xchg
or
inc
in
enter
imul
xor
fcom
or
in
js
pop
fdiv
jp
sbb
shl
dec
and
push
xor
push
xchg
inc
ret
pop
fcom
sbb
adc
and
xor
and
sub
adc
push
inc
movs
out
sbb
fs
push
shl
lods
ror
into
mov
adc
ins
sbb
dec
sbb
mov
or
add
mov
shl
or
push
add
ja
and
aam
and
repnz
xchg
jbe
bound
enter
or
iret
pop
add
cwde
pop
fbld
cwde
dec
add
and
jbe
loop
mov
fld
fcomp
dec
call
push
jle
xchg
adc
or
sbb
dec
mov
dec
into
test
in
add
ja
adc
pop
cld
dec
add
xchg
test
fcomp
add
xor
pusha
or
(bad)
sub
add
dec
(bad)
push
rcl
cmp
inc
jle
in
cmp
fcmovb
or
cmp
sub
push
(bad)
enter
movups
sbb
sbb
push
jno
cwde
int
lea
adc
jbe
mov
jmp
ror
add
stc
add
and
lea
or
test
jmp
xlat
or
or
pop
ss
inc
adc
add
(bad)
sbb
mov
push
or
int3
dec
pop
clc
xchg
test
dec
sbb
retf
aaa
jecxz
sbb
xchg
push
ja
(bad)
sar
inc
xor
sub
mov
ds
mov
push
pop
rol
sub
adc
push
adc
dec
adc
adc
dec
mov
push
ins
and
inc
js
adc
dec
xlat
paddq
jl
arpl
sbb
xchg
iret
inc
or
add
jl
shl
pop
and
add
cld
inc
lea
add
sbb
xlat
inc
loopne
inc
je
inc
shl
add
pop
mov
aas
rol
shl
jecxz
push
pop
ja
adc
mov
pop
js
loope
fld
loopne
mov
inc
in
dec
mov
retf
add
scas
ins
mov
inc
xchg
mov
inc
mov
cmps
xor
push
es
retf
fstp
mov
add
(bad)
sahf
adc
leave
xchg
mov
or
dec
add
xor
dec
rol
jmp
jnp
push
adc
add
jl
push
cdq
add
(bad)
retf
add
iret
leave
push
addr16
out
jmp
add
(bad)
ror
mov
lock
ds
mov
push
sbb
xchg
or
inc
test
push
push
pop
jmp
xor
inc
cmp
cmp
and
add
pop
adc
stos
lahf
outs
shl
dec
mov
dec
loope
push
in
test
nop
mov
adc
fsub
(bad)
shl
and
mov
dec
dec
adc
ins
xchg
xor
add
dec
mov
xor
sbb
cli
adc
pop
ins
(bad)
jbe
gs
fsub
inc
push
push
jle
push
sbb
sub
mov
retf
call
push
push
sar
pop
les
rcl
jno
add
jmp
ds
push
or
mov
mov
ret
sar
(bad)
mov
hlt
out
push
imul
add
mov
les
sbb
or
mov
dec
mov
or
or
ss
inc
gs
or
jno
dec
mov
sub
adc
sar
and
mov
shl
or
or
sbb
adc
rcr
retf
sub
stc
loopne
inc
popf
out
daa
and
fdiv
dec
cmp
mov
(bad)
or
and
pop
test
dec
jbe
mov
pop
jae
inc
and
or
(bad)
xlat
add
jne
inc
push
cmc
sub
xor
adc
add
dec
sti
ror
cmp
xor
sti
daa
fist
je
ss
jns
(bad)
fmul
sub
mov
or
add
ficomp
jb
add
pusha
hlt
ja
push
retf
add
dec
or
sub
adc
mov
mov
cmp
xor
gs
mov
xchg
adc
les
sub
inc
ror
and
or
and
shl
dec
inc
ja
jnp
add
adc
cmp
xchg
retf
sbb
les
or
xor
add
test
pslld
jne
cmp
je
and
pop
push
int3
mov
push
imul
ret
movs
adc
inc
xor
cmp
popf
cdq
pop
mov
das
or
sbb
test
test
jg
inc
and
jo
fs
and
and
imul
and
imul
das
sti
mov
popf
push
rcr
add
dec
xor
inc
ds
jmp
sub
adc
and
add
out
inc
xor
mov
jne
or
xor
xor
mov
and
push
sbb
mov
sbb
jp
cmova
shr
push
or
sbb
add
push
add
ja
adc
add
cld
add
pop
sub
sub
dec
add
xor
in
out
xor
adc
dec
sub
and
jbe
inc
cmp
inc
or
loopne
sbb
js
loopne
call
sub
ja
pop
inc
fdiv
xchg
xchg
rol
in
or
cld
xchg
push
aas
sbb
mov
(bad)
mov
sub
data16
or
push
imul
popa
icebp
adc
mov
dec
cdq
(bad)
pop
test
inc
or
outs
addr16
movs
and
cmp
stc
in
xor
daa
pop
sub
mov
lock
stos
pop
retf
dec
adc
push
(bad)
sbb
mov
pop
jno
and
test
push
mov
test
outs
out
inc
xchg
or
outs
shl
add
inc
out
jo
or
cmp
add
push
aas
shl
xchg
pusha
xchg
xor
(bad)
jle
or
push
(bad)
push
cmc
popa
sub
pop
inc
cmp
ss
clc
inc
gs
test
aam
sbb
mov
mov
mov
stc
out
jecxz
xchg
sti
dec
sar
fs
in
mov
inc
inc
pop
adc
(bad)
sti
push
imul
or
xor
push
xlat
ss
ja
and
push
call
push
rcl
mov
daa
repnz
jo
push
cmp
pop
mov
adc
mov
mov
popa
ret
(bad)
cmp
icebp
or
in
pop
ss
ins
mov
int
bt
push
xchg
loopne
call
adc
lods
add
add
and
movs
or
xor
js
mov
loop
or
nop
cld
dec
std
push
add
dec
and
or
out
jb
ins
cld
cld
inc
xor
push
imul
lahf
pop
loop
sbb
(bad)
rcr
sbb
ins
aas
or
aad
sbb
mov
shr
in
push
or
and
and
mov
or
xchg
sbb
cmp
test
mov
push
push
inc
das
cmp
dec
loope
inc
dec
add
jae
xor
add
pop
xor
jle
xchg
sub
add
pop
test
dec
pop
dec
push
push
jb
out
jge
sub
outs
das
push
dec
bound
dec
mov
push
jne
jae
lock
dec
dec
and
push
aaa
push
inc
push
xor
(bad)
adc
inc
mov
aas
and
mov
ret
daa
andpd
xor
dec
sub
adc
adc
push
dec
pop
push
cmp
out
mov
sbb
inc
xor
adc
loop
inc
loop
jne
pop
sbb
add
into
add
push
push
(bad)
mov
fadd
inc
cmc
mov
ror
add
retf
cmps
aad
daa
pop
sbb
or
leave
les
push
mov
xor
cmp
aam
loope
pop
clc
das
mov
out
or
adc
jb
add
dec
mov
sbb
jge
push
push
jne
jbe
and
pusha
jns
dec
or
inc
add
iret
inc
jl
dec
or
inc
inc
sbb
sub
std
push
call
jne
inc
cmp
imul
sub
popa
add
dec
(bad)
mov
pusha
in
and
add
popf
rcl
inc
hlt
les
inc
retf
ins
lock
add
xchg
sub
arpl
pushf
dec
push
or
jnp
xchg
ret
psadbw
popf
je
pop
mov
inc
xchg
add
fnstcw
xor
add
imul
stc
adc
cwde
mov
mov
sbb
push
sbb
sbb
aam
int
adc
push
test
or
adc
jmp
push
iret
mov
imul
add
add
sbb
mov
add
mov
push
in
in
imul
add
push
sub
add
inc
xchg
mov
or
or
push
ret
inc
or
stc
xchg
iret
sbb
and
cld
aas
into
mov
xor
sbb
inc
add
jo
(bad)
inc
or
inc
(bad)
add
mov
or
je
in
push
cmp
xor
ror
rcl
add
add
sbb
dec
outs
or
scas
mul
fscale
add
push
inc
repnz
jmp
mov
dec
das
sbb
dec
jno
mov
mov
sti
push
push
or
sub
xchg
aaa
popa
dec
mov
adc
dec
inc
out
iret
lock
adc
loopne
iret
cmp
push
mov
sbb
in
sub
xor
fs
inc
dec
fs
push
push
pop
fs
pusha
fs
ins
jo
js
fs
test
mov
fs
mov
fs
mov
mov
mov
fs
rcl
fadd
loopne
mov
push
push
dec
push
add
inc
pop
and
repnz
or
add
jnp
pop
arpl
int3
jbe
add
xor
pop
in
clc
push
in
add
mov
and
gs
sub
fs
add
aam
dec
aaa
and
dec
add
mov
dec
gs
sub
xchg
add
in
mov
and
or
and
je
push
movs
xor
mov
nop
retf
sar
jge
push
call
adc
dec
sub
push
sbb
dec
gs
nop
test
and
clc
test
sbb
mov
add
movs
mov
mov
mov
retf
add
push
sbb
dec
gs
sub
xchg
add
cld
pop
mov
and
sub
fsub
xchg
add
push
movs
xor
shl
or
(bad)
push
or
xchg
dec
ret
rcl
fiadd
rcl
dec
push
and
xor
(bad)
retf
pusha
pop
pop
dec
jb
cmp
mov
xor
mov
ret
(bad)
add
sub
push
adc
addr16
jbe
mov
inc
and
sbb
mov
jb
rol
jnp
inc
ins
xchg
dec
dec
das
stos
ret
inc
imul
in
dec
sbb
ja
out
xor
aaa
dec
xchg
adc
jo
adc
mov
push
or
add
out
outs
lods
xchg
push
out
or
std
pop
mov
mov
xchg
or
jnp
ret
mov
aaa
mov
(bad)
gs
idiv
call
push
sub
push
pop
mov
aad
mov
and
mov
lods
add
aaa
mov
scas
push
push
dec
inc
sub
fist
sub
(bad)
push
ins
loop
mov
jnp
inc
push
into
jae
fwait
push
xchg
inc
inc
push
jne
push
push
jnp
lods
sbb
add
jnp
inc
lods
cmps
xchg
pop
xchg
and
mov
xor
imul
xlat
lods
sub
xor
stos
jne
mov
cmp
xorps
fs
loop
imul
pop
scas
mov
hlt
cmps
mov
dec
imul
xchg
arpl
popa
fwait
xor
and
rol
adc
cmc
sbb
je
add
mov
sbb
add
xchg
nop
out
adc
dec
jne
jne
loope
and
repnz
in
adc
mov
pop
fadd
xchg
test
cmp
fisttp
jp
jo
imul
adc
jno
sub
je
fidivr
cmp
pop
fs
sbb
add
dec
xchg
xor
add
xchg
adc
rcr
pop
scas
std
js
les
sub
(bad)
mov
xor
add
dec
inc
out
mov
add
enter
mov
and
test
dec
sub
rcr
inc
ds
push
nop
jg
xor
mov
pop
in
rcl
jmp
inc
inc
stos
mov
sub
jb
stos
dec
call
dec
adc
adc
mov
or
cmp
cmp
movs
sbb
push
adc
adc
je
pop
push
clc
pop
xchg
push
loopne
iret
jge
inc
xor
and
push
sub
add
push
adc
xor
push
fisub
mov
or
mov
add
push
pop
push
sbb
inc
add
add
xor
xchg
loop
jae
sbb
ins
mov
mov
dec
in
xor
mov
rcl
or
mov
inc
xchg
out
pushf
(bad)
test
jmp
push
out
inc
popf
or
sbb
fcom
or
lock
push
adc
rcl
or
retf
or
mov
adc
adc
inc
mov
mov
es
and
ret
movs
add
sbb
movs
inc
imul
nop
sub
push
adc
inc
xchg
inc
cmps
outs
cmp
jne
jge
rcl
stc
dec
pop
sbb
add
outs
cmp
pusha
cmp
lahf
or
test
lahf
push
add
xchg
int3
lea
jb
inc
out
or
xchg
adc
push
adc
movups
jle
lods
pop
jecxz
(bad)
call
ds
add
out
dec
mov
mov
add
sbb
inc
jo
lock
dec
or
movs
push
jns
xor
pushf
and
sbb
loopne
or
or
inc
ss
sub
and
and
or
and
pop
int3
cmc
je
aam
push
aaa
and
mov
lods
lea
push
fucomi
sbb
fsubr
ss
cmp
or
retf
sbb
in
sbb
loop
cmp
hlt
cmp
clc
sbb
cmps
mov
outs
out
dec
sub
mov
sbb
mov
mov
ss
sub
mov
and
nop
sahf
pop
sub
sbb
push
push
add
popf
adc
sbb
pop
cmovl
adc
fistp
mov
ds
mov
xchg
inc
push
fstp
adc
cs
in
adc
adc
fs
cmps
repnz
add
js
pop
sahf
and
and
lock
push
test
outs
cmp
fdiv
aaa
lds
sbb
loopne
sub
int3
sbb
sbb
cmp
inc
stc
punpckhbw
daa
add
aam
mov
xchg
inc
ss
pop
sbb
inc
inc
adc
push
sbb
pop
daa
mov
dec
outs
inc
cwde
es
add
fwait
fs
mov
and
outs
and
and
neg
aas
call
dec
xor
stc
adc
dec
add
daa
push
jae
jge
or
and
mov
adc
adc
mov
push
sbb
mov
adc
nop
push
ds
dec
aam
cdq
in
out
push
xchg
cmps
sbb
push
inc
lock
ja
ins
fwait
in
sbb
scas
sbb
adc
lock
mov
outs
mov
cld
add
push
std
mov
pop
rcl
mov
lods
cmp
inc
sbb
and
dec
pop
mov
idiv
inc
mov
sbb
sti
out
add
adc
xor
gs
fistp
or
dec
and
dec
sbb
or
(bad)
js
jnp
sbb
data16
mov
mov
hlt
sbb
adc
or
fwait
cmp
(bad)
and
sbb
mov
mov
xchg
fcom
adc
sbb
and
das
and
inc
mov
xor
ror
pop
or
enter
mov
rcr
cmp
nop
out
mov
fcomp
fmul
dec
xchg
xor
add
cwde
repz
data16
push
cmp
adc
jae
iret
repz
or
repz
pop
into
repz
arpl
rcr
sar
mov
or
or
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
cs
jg
mov
pop
call
xlat
dec
rcr
sub
lds
jno
inc
mov
cld
stc
adc
dec
sahf
(bad)
inc
dec
and
pop
and
sub
in
push
dec
xor
sahf
push
pop
or
xchg
(bad)
dec
pop
inc
xchg
add
out
lock
stos
or
and
(bad)
ss
jno
fidiv
out
inc
push
xor
push
ret
xor
outs
cld
andps
dec
in
push
leave
leave
leave
ins
sbb
sbb
push
loopne
cmps
leave
pop
hlt
hlt
push
xrelease
cmp
pop
push
inc
and
adc
xchg
mov
fdivr
nop
dec
(bad)
push
outs
dec
je
fiadd
push
or
inc
dec
inc
shl
ins
and
mov
je
push
dec
or
popa
ror
(bad)
xlat
or
add
inc
sbb
add
or
(bad)
hlt
sbb
pushf
cmps
mov
xor
inc
out
or
test
test
sbb
cmp
dec
jne
inc
cmp
cmp
xor
jmp
push
cmp
pop
lahf
cli
repnz
pop
adc
inc
iret
dec
pop
pop
push
sbb
cmps
je
pop
mov
jcxz
dec
pop
and
fnsave
dec
jl
push
inc
jge
push
add
inc
xor
jp
lds
mov
jns
inc
aad
and
loopne
jmp
pop
outs
add
and
or
cmp
xlat
push
call
sbb
das
add
fidiv
mov
dec
rcl
xor
cdq
repnz
outs
ja
adc
out
fmul
sbb
push
and
inc
xchg
lock
and
and
and
ds
sbb
sbb
pop
in
popa
shr
or
push
mov
shr
sub
into
push
push
jo
cmp
dec
and
jnp
scas
push
adc
(bad)
cmp
clc
div
(bad)
rol
(bad)
push
and
sub
xchg
jo
or
inc
mov
js
and
loopne
ftst
xchg
inc
es
xchg
aad
and
jl
inc
fsubr
mov
push
xchg
pop
add
fdiv
push
mov
sbb
push
xchg
shl
pusha
fmul
loope
or
movs
lea
xchg
sbb
loope
mov
push
sub
sbb
fxch
and
aaa
gs
sbb
imul
out
xor
push
mov
ja
xlat
nop
cmp
arpl
add
into
push
pop
sar
test
jbe
jae
retf
sbb
cmp
push
or
stc
fild
add
loop
xchg
dec
frstor
test
aaa
cli
inc
jg
in
sar
stos
call
push
xchg
cmp
inc
pop
jae
jns
cld
jmp
pop
dec
xor
xchg
dec
pop
xor
in
inc
call
add
adc
ror
add
lock
add
add
les
xchg
and
inc
sbb
je
test
add
dec
cmp
jl
int3
int3
jge
push
rcl
popa
jo
cwde
jb
in
sub
dec
outs
retf
sahf
xor
mov
mov
fcomp
call
add
dec
sbb
(bad)
fild
fdiv
mov
xchg
push
adc
in
rcl
dec
imul
hlt
push
inc
clc
loopne
mov
mov
lods
adc
imul
js
call
or
and
add
jnp
or
test
adc
mov
xchg
xchg
cmps
and
loopne
leave
and
xor
adc
lahf
ret
fmul
test
stos
aam
push
popf
push
scas
movs
leave
je
int
sub
adc
das
lock
sbb
lods
loopne
sbb
dec
mov
aad
iret
int3
push
ret
push
xchg
int3
pop
jmp
pop
rcl
mov
out
or
jno
in
add
dec
add
cmp
movs
aas
inc
lock
bt
sar
lds
or
add
hlt
push
loop
sar
ret
sbb
outs
pop
push
test
add
pusha
ins
sub
ror
inc
inc
jae
xor
outs
lds
retf
mov
call
test
sbb
sub
nop
and
arpl
push
clc
xchg
add
push
lods
mov
dec
inc
pop
and
test
pop
movs
es
inc
daa
push
mov
and
dec
pop
xchg
retf
std
xchg
sub
mov
or
adc
mov
repz
sbb
or
inc
mov
ret
sbb
call
adc
sub
push
adc
mov
or
jns
mov
xor
and
adc
jmp
cmp
adc
cmc
imul
fwait
das
or
xor
das
add
xlat
(bad)
cld
(bad)
fstp
mov
ret
pop
sub
pop
push
and
add
hlt
hlt
adc
or
loopne
into
or
cmp
cmc
mov
sub
mov
icebp
mov
adc
and
ret
push
inc
mov
pop
or
inc
inc
add
pop
ror
mov
jmp
dec
mov
push
ret
cmp
sub
inc
imul
lahf
jecxz
dec
jne
inc
shl
jno
jb
push
mov
push
es
cs
bound
in
in
das
stos
or
mov
xor
call
and
mov
pop
lock
dec
push
sbb
xchg
stos
(bad)
mov
call
ret
push
dec
ret
add
pop
mov
call
adc
and
lods
cmps
xor
xor
das
sub
xchg
mov
sub
dec
push
and
inc
lock
dec
cli
pop
xchg
add
jecxz
enter
daa
xor
in
fdiv
inc
mov
push
call
in
cmp
je
loopne
pop
adc
xchg
or
inc
dec
jne
sbb
(bad)
fwait
xor
popa
shl
cmp
xor
stc
xchg
or
fsub
pop
jnp
add
xor
repnz
add
jg
inc
out
sbb
retf
dec
xchg
test
xchg
xchg
test
fprem
test
lds
dec
xchg
pop
lds
xor
pop
inc
dec
adc
(bad)
pop
(bad)
enter
sbb
call
or
adc
cmp
add
push
mov
inc
push
xor
pop
(bad)
cs
cmp
adc
jne
or
imul
fiadd
xor
or
sahf
dec
or
ret
pop
fdiv
xor
outs
mov
ss
push
push
mov
add
mov
das
add
xchg
sar
inc
mov
dec
sahf
(bad)
shl
in
nop
das
pop
fdiv
inc
push
cmp
sti
push
sbb
cmp
aam
adc
push
pop
inc
arpl
jo
pop
xor
rcr
xor
mov
inc
mov
imul
leave
shl
inc
adc
cmp
inc
ret
out
bound
push
jb
ss
scas
and
or
sub
xor
xchg
sbb
push
push
les
call
mov
and
adc
pop
xor
cs
test
aaa
bound
or
lea
ja
cmc
push
out
push
(bad)
and
ins
sub
(bad)
repz
jns
mov
add
push
inc
pop
cmp
bound
jbe
mov
ret
xchg
push
xlat
xchg
popf
out
mov
adc
cmp
inc
rcl
iret
daa
into
movs
pushf
and
add
sub
sbb
cmp
xor
sbb
mov
xor
aaa
repz
rcr
jmp
mov
jmp
mov
xor
push
inc
xchg
add
cmp
add
add
xchg
sbb
adc
aad
cmp
pop
xchg
push
xor
cmp
xchg
ds
jl
cwde
add
mov
xor
js
push
mul
inc
sub
or
sub
dec
adc
mov
cmp
push
ins
mov
jge
pop
adc
jmp
loop
out
or
adc
(bad)
xchg
mov
test
call
out
mov
xor
push
dec
xor
xchg
test
jmp
je
add
mov
add
sub
push
adc
xchg
sbb
aam
push
inc
sbb
sub
retf
rol
sbb
fisttp
sbb
ret
test
jecxz
fdiv
dec
inc
adc
inc
xor
inc
dec
dec
das
movs
mul
out
lea
sbb
sub
imul
nop
sub
pop
retf
sar
sub
inc
push
scas
sbb
shl
xor
xor
pop
adc
ret
jle
mov
xchg
dec
jne
xlat
inc
sbb
imul
pop
imul
das
movs
mov
add
ror
mov
dec
jge
cwde
shl
sbb
les
push
nop
push
stos
pop
pop
sbb
xor
pop
cwde
and
mov
xor
inc
div
shl
xor
aaa
out
jmp
inc
imul
mov
cdq
movs
(bad)
test
cli
mov
push
push
add
sub
add
(bad)
mov
call
sub
xor
inc
nop
jne
jns
add
je
dec
sbb
dec
push
add
ds
cld
fbstp
cmp
out
mov
and
dec
or
fwait
adc
jmp
enter
jne
(bad)
pop
arpl
fidivr
outs
inc
inc
lods
xchg
mov
xor
pop
jg
mov
mov
push
shr
mov
adc
popa
add
xchg
adc
xor
add
icebp
in
scas
loopne
jb
jmp
add
cmp
sbb
add
or
jl
arpl
loopne
je
or
push
xchg
cwde
mov
jb
movs
gs
pushf
add
inc
outs
and
jmp
mov
cmp
mov
pop
(bad)
fucomi
xlat
fwait
cmp
jl
sbb
fldln2
pop
mov
xchg
lahf
pushf
xor
or
outs
xor
and
and
xor
and
and
and
or
or
enter
and
xor
dec
loopne
rol
xchg
ret
shl
add
ss
add
test
cmp
adc
adc
fild
push
push
rcl
fcom
push
pop
or
pop
dec
inc
movs
fdiv
sbb
sub
sub
pop
bound
sub
lods
adc
sbb
rol
inc
push
iret
rcl
mov
jo
repz
sbb
sub
push
mov
sub
out
sahf
in
or
jmp
sub
lds
jae
push
cmc
xchg
jbe
loopne
push
stc
(bad)
loop
add
push
sbb
out
mov
(bad)
push
jg
(bad)
sbb
push
ins
mov
or
push
mov
sbb
lds
gs
push
dec
rcl
jge
cmp
xchg
dec
xchg
pushw
xor
sbb
push
and
and
rcl
inc
fmul
cmps
imul
jbe
mov
ret
pop
mov
outs
addr16
add
(bad)
neg
jmp
push
movd
xor
sbb
mov
or
jg
movs
or
or
je
fnstsw
jg
cld
or
loopne
retf
movs
addr16
lock
and
sbb
leavew
xor
and
cmps
jo
cmc
inc
sub
add
or
cld
rcr
mov
push
sbb
int
repnz
enter
ffree
lods
ins
sub
push
xor
inc
ret
loope
je
push
dec
push
jmp
xor
dec
dec
cmp
mov
fisub
cmp
and
inc
aaa
xchg
fcom
mov
push
inc
add
pop
sbb
cs
xchg
sub
loop
inc
cmp
js
dec
xchg
inc
or
inc
mov
sub
jo
sbb
adc
call
in
cmp
inc
adc
dec
les
dec
add
inc
stc
dec
or
test
cld
mov
mov
mov
xchg
xor
mov
sub
xchg
and
add
pop
je
cmp
cwde
(bad)
ins
cmps
stos
ficom
sbb
inc
adc
push
add
sbb
mov
inc
mov
sub
or
xor
xor
mov
pusha
push
and
cmp
shl
mov
cmp
test
or
xor
cs
push
mov
push
pop
mov
pop
mov
adc
ss
pop
xchg
movzx
pop
(bad)
std
add
ret
push
es
cmp
jbe
dec
jp
xor
add
xor
and
and
stos
ficomp
inc
inc
push
or
and
mov
scas
scas
dec
movzx
mov
and
inc
mov
mov
ret
jne
add
push
into
retf
mov
and
or
inc
mov
dec
mov
dec
adc
or
sub
fmul
inc
adc
call
adc
mov
test
xchg
and
mov
and
mov
add
test
pop
jmp
sbb
js
ret
arpl
or
add
fcmovnu
jb
or
mov
mov
nop
push
inc
into
mov
sbb
dec
adc
push
ja
sbb
mov
cmp
or
js
add
push
inc
loopne
cs
cwde
mov
iret
mov
ss
ins
and
add
sbb
mov
sbb
push
mov
jg
mov
lea
in
icebp
xor
sbb
cli
mov
lods
aad
pusha
sub
les
sbb
rol
ret
sar
sahf
addr16
mov
fild
sub
sbb
daa
xchg
fcmovne
lods
add
mov
or
sub
mov
xor
and
add
cmps
add
icebp
or
(bad)
jmp
jl
push
lea
pop
ror
fmul
arpl
out
retf
cmps
or
sbb
pcmpeqw
pcmpeqb
fsubr
push
fwait
cmp
(bad)
adc
lods
mov
or
icebp
pop
out
pop
mov
sub
ret
stos
cmp
not
add
and
adc
repnz
repnz
mov
cld
aaa
push
dec
add
and
sub
add
cmp
not
add
add
sub
mov
lods
daa
jmp
and
dec
rcr
and
xchg
wbinvd
ss
adc
xchg
ds
mov
sub
cmp
mov
jb
adc
fdiv
nop
adc
sub
adc
test
mov
xchg
sub
ror
daa
fnstcw
js
inc
faddp
add
out
out
pop
outs
sbb
mov
mov
add
out
mov
enter
pop
jno
push
cmp
add
sbb
out
ffree
push
pop
add
xor
sub
sar
leave
mov
scas
or
jno
cmp
mov
add
sbb
jo
shl
adc
add
xor
jns
xchg
inc
dec
push
or
fisttp
push
or
imul
cdq
dec
cwde
imul
ficom
adc
add
or
add
mov
xor
jnp
push
adc
je
cmp
push
push
or
cmp
add
rol
arpl
mov
in
loope
sub
lock
inc
jl
cmp
and
jo
xchg
mov
inc
dec
xor
jb
fmul
or
and
jge
and
out
cmc
adc
jne
sbb
in
jmp
push
or
jl
pop
xor
sbb
arpl
adc
ret
test
ret
pop
sbb
out
sub
mov
sbb
add
mov
ret
add
xor
sti
xor
ret
mov
imul
adc
sar
sbb
sub
xor
sub
add
add
mov
clc
bound
ins
push
imul
add
int
adc
xor
adc
cmp
ja
xchg
mov
addr16
jne
stos
fcmovne
rcl
dec
dec
pop
adc
cmp
mov
ds
cs
and
fsubr
jae
dec
outs
sub
mov
add
stos
test
mov
(bad)
shl
js
xchg
pop
pop
nop
addr16
pop
mov
in
or
or
or
xchg
inc
push
ficom
mov
adc
xchg
addr16
scas
pop
out
add
jbe
xor
mov
or
inc
outs
mov
int3
mov
mov
pusha
inc
push
retf
cmc
loopne
ins
cmps
call
mov
mov
xor
test
add
sbb
mov
ins
sbb
test
je
ss
add
imul
adc
or
popa
cmp
xchg
dec
mov
call
mov
mov
(bad)
mov
movs
retf
or
add
xor
add
jns
push
cmp
pop
cmp
push
ja
add
or
mov
sbb
xor
cmp
mov
and
dec
fcmovnbe
dec
add
aam
dec
mov
mov
jmp
(bad)
push
dec
ins
nop
pop
in
jg
(bad)
in
mov
clc
add
dec
inc
mov
sub
pushf
daa
adc
and
in
scas
or
or
adc
shl
sbb
pop
push
jae
mov
fmul
getsec
je
rcr
jnp
jb
(bad)
sub
aaa
mov
or
and
je
pop
je
addr16
sbb
lds
jno
adc
inc
fsub
push
and
xchg
and
and
mov
js
adc
into
mov
les
xchg
cmp
dec
iret
lock
call
inc
add
pop
or
adc
and
call
inc
push
push
inc
mov
arpl
push
stos
fwait
jne
jo
add
iret
mov
push
dec
adc
mov
mov
sahf
dec
cmp
xchg
cmp
inc
adc
inc
inc
dec
repz
inc
inc
or
or
mov
enter
sub
mov
(bad)
shr
lods
shr
popa
mov
lea
fbstp
dec
and
(bad)
push
add
cwde
and
pushf
out
push
cmp
push
mov
or
mov
gs
push
jbe
cmp
jae
mov
push
dec
sub
sbb
loopne
mov
pop
popa
xlat
add
inc
xor
pop
sbb
jmp
lods
rdpmc
sbb
jae
pop
push
sahf
push
call
iret
pop
dec
and
cmp
xor
or
mov
add
xchg
fild
and
sub
xchg
add
sub
das
xchg
mov
or
adc
xchg
lea
inc
jl
rol
mov
dec
pop
inc
imul
push
js
pusha
push
push
aam
ja
pop
jge
or
ins
mov
js
mov
mov
fisttp
mov
pop
sub
jmp
shl
mov
sbb
sub
jnp
mov
mov
cmp
adc
ja
imul
pop
cmp
add
cmp
mov
push
mov
push
cmp
ins
fiadd
push
je
outs
sti
popf
loop
add
mov
add
pop
cmp
mov
call
sbb
push
cmp
test
pop
pusha
jl
mov
xchg
pusha
inc
inc
sbb
cmp
jne
setae
and
pusha
dec
xchg
xchg
adc
jmp
mov
sub
push
mov
mov
ins
lock
std
dec
cmp
jge
bound
mov
inc
jge
loopne
push
sbb
and
add
fidiv
pop
mov
xor
pop
cli
or
or
es
das
push
jae
mov
jb
pop
xor
mov
sbb
pusha
lea
mov
ret
sbb
into
dec
sbb
sub
or
sub
idiv
stc
mov
stc
add
test
sbb
jns
jae
dec
shl
sub
rcl
nop
mov
stos
pop
jae
jnp
sub
add
jmp
cmps
xchg
adc
cmp
in
sub
mov
test
sub
mov
add
add
cmp
ja
push
sub
jp
pop
out
add
push
loope
jo
xchg
imul
ss
ret
dec
leave
or
outs
or
xchg
mov
ja
mov
into
rcl
dec
jne
stos
loope
and
dec
inc
add
mov
cmp
xchg
jb
(bad)
pusha
test
or
add
push
dec
sbb
add
and
movs
xchg
pop
jmp
push
lahf
and
adc
add
loopne
jg
pushf
rol
mov
or
sbb
adc
popa
enter
ret
lds
not
test
and
in
push
xchg
or
je
pop
pop
push
cmc
scas
inc
retf
ja
sub
cs
push
cmps
imul
add
fidiv
push
push
pop
and
add
cmp
mov
sahf
stos
nop
inc
ins
je
cmps
inc
and
movs
jb
or
sbb
inc
push
xor
mov
adc
xchg
pushf
xchg
js
add
fimul
xchg
movs
adc
mov
pop
loop
shl
mov
or
sbb
and
dec
cmps
lods
mov
pop
push
popa
lods
dec
mov
loope
xor
push
xor
and
je
xlat
lods
push
lock
push
push
inc
xor
sbb
inc
mov
shr
pop
mov
mov
xor
cmps
or
call
es
and
movs
imul
cmp
(bad)
inc
inc
cwde
xor
call
mov
mov
outs
inc
(bad)
mov
pusha
int
(bad)
or
jmp
or
inc
aas
mov
sub
jnp
cmp
inc
mov
scas
adc
in
pop
and
rol
pop
mov
rcl
sub
or
add
xchg
loop
(bad)
jmp
mov
ja
jae
jmp
call
sbb
out
sbb
add
xor
add
lock
in
repnz
ins
and
mov
mov
dec
std
ror
pusha
pop
jns
jo
adc
xchg
pop
pop
mov
add
push
push
cmp
cmp
and
cmp
es
jp
inc
jns
xchg
cmp
sbb
xchg
xlat
dec
adc
mov
cmp
hlt
sbb
inc
scas
cmps
jns
cmps
push
add
inc
mov
push
mov
out
xor
adc
dec
add
mov
xor
sbb
or
mov
fs
push
mov
test
jae
dec
retf
cmp
ja
dec
xchg
dec
rcr
adc
hlt
jo
stc
mov
pop
lock
push
push
adc
adc
inc
cmp
dec
rcl
jl
dec
int
dec
call
jle
sar
(bad)
sub
mov
cmp
jecxz
shl
inc
cmp
daa
int
enter
jae
jo
xor
retf
int
jne
fcom
push
jecxz
xchg
xchg
test
dec
pusha
call
mov
mov
stos
jmp
call
xchg
push
in
cld
lock
dec
jne
push
xor
mov
rcl
dec
imul
or
inc
(bad)
out
stc
cmp
mov
or
daa
mov
sub
add
and
or
cmp
jp
mov
or
sub
ret
cmp
mov
retf
jnp
sahf
inc
sub
dec
sub
sbb
rol
fist
pop
and
fiadd
inc
and
sub
xchg
addr16
dec
xor
xchg
mul
xor
push
shl
dec
push
lea
cdq
mov
cmp
sub
out
mov
(bad)
call
call
cmp
add
loopne
outs
and
and
cmp
jbe
ss
je
jo
shr
push
call
sbb
or
sbb
add
push
out
test
mov
and
mov
cmp
imul
jbe
fist
(bad)
movs
jge
pop
xor
sub
jne
inc
call
cmp
mov
add
inc
push
pop
cmp
adc
xchg
test
cli
cmp
jae
mov
xlat
mov
lods
or
fistp
mov
mov
pop
femms
and
sbb
into
add
cmp
jbe
sub
cs
inc
inc
inc
mov
mov
dec
cmp
sub
jmp
mov
push
pop
mul
jbe
inc
add
and
loop
dec
fwait
cmp
cmp
sbb
and
mov
rol
inc
and
sbb
mov
js
ja
push
cld
push
out
mov
sbb
add
nop
mov
mov
ror
cmps
push
adc
hlt
cmps
xor
fild
dec
mov
jae
(bad)
inc
cmp
in
xchg
add
jno
pop
lea
mov
repnz
jmp
pop
and
push
in
test
or
inc
loopne
inc
scas
pop
inc
sbb
jmp
xchg
sbb
and
mov
adc
xor
mov
rol
aam
ds
xlat
ins
inc
div
cli
les
inc
mov
dec
dec
in
jnp
push
les
sub
dec
not
xchg
(bad)
jmp
mov
adc
sub
push
cmp
jl
dec
loop
ret
add
or
or
and
adc
or
sbb
cmc
mov
xchg
clc
jb
les
nop
mov
sub
and
leave
inc
sbb
adc
sbb
call
mov
call
add
sbb
dec
sub
mov
xor
fmul
add
dec
xchg
adc
and
fnstcw
cli
adc
cmp
retf
not
cmps
mov
retf
out
and
cmp
pop
call
jecxz
pop
cmp
push
cmp
mov
lea
outs
pop
js
xchg
fimul
outs
repnz
fistp
je
add
call
lahf
dec
sub
and
sub
and
mov
dec
mov
add
neg
jg
call
add
cmp
dec
push
add
add
cmp
nop
div
inc
xchg
xor
jb
pop
mov
cs
cmp
fild
sti
xchg
sub
clc
hlt
popf
adc
dec
or
cwde
or
loop
xor
sbb
lahf
push
push
xor
call
adc
cmc
fadd
mov
mov
imul
data16
xor
jg
dec
mov
imul
jno
add
sub
and
inc
xor
sbb
jo
xor
pop
mov
ret
or
dec
inc
push
sahf
fsubr
mov
sub
fcomp
(bad)
push
arpl
push
xor
add
cdq
inc
je
out
or
bound
mov
dec
pushf
push
push
sbb
jnp
xor
mov
sbb
mov
cmp
add
push
lea
and
and
sbb
out
je
or
mov
loope
jp
pop
or
cmp
jno
outs
(bad)
xor
fcmovbe
or
cmp
mov
push
xor
push
lods
mov
cmp
stos
out
xor
je
sub
es
test
adc
cmp
mov
or
jmp
test
pcmpgtd
int
jmp
push
push
int
shl
xchg
imul
mov
out
test
outs
int
repz
icebp
je
cmps
stc
xor
jne
jbe
pop
ja
into
repz
cmp
icebp
sti
pop
sbb
add
push
das
or
loopne
inc
inc
bound
mov
and
xchg
dec
cwde
cmp
loope
and
sti
cmp
fld
mov
lea
(bad)
pop
xor
mov
lea
cmp
add
inc
test
repnz
adc
add
adc
popf
add
call
sbb
jns
xchg
and
mov
mov
ret
int3
inc
stos
adc
in
mov
sbb
or
aam
dec
inc
mov
retf
inc
shr
ficom
ror
bound
jbe
out
adc
fadd
inc
adc
add
inc
stos
mov
or
or
add
lock
sub
or
or
enter
adc
inc
nop
shl
ds
xor
inc
sbb
adc
pushf
or
fdiv
pop
xor
mov
mov
mov
(bad)
xor
push
nop
xchg
add
loopne
popa
and
pushf
(bad)
or
cmp
in
jno
iret
and
add
inc
enter
xor
xor
inc
enter
les
nop
push
or
or
or
cmp
les
mov
or
sbb
add
jb
cmp
add
ds
sbb
or
add
jmp
lea
movs
or
sub
add
fucomip
pop
inc
cmp
push
loope
in
sahf
pop
or
dec
sar
xor
sub
js
jno
and
inc
outs
mov
or
mov
mov
sub
sub
rol
cld
pop
adc
inc
push
in
jnp
or
hlt
adc
fadd
jne
loopne
ins
sub
inc
out
xor
dec
repz
inc
push
push
pop
xchg
xor
push
jo
mov
add
pop
pusha
dec
push
inc
fild
and
jl
jo
jmp
push
mov
rol
loopne
sub
push
mov
or
mov
inc
sbb
pop
mov
push
and
and
jb
and
push
jmp
fmul
add
cmp
inc
int
rcl
add
jecxz
mov
sbb
mov
dec
rcr
pusha
xor
ret
pushf
or
out
mov
mov
pop
mov
imul
fcmovnu
mov
and
mov
pop
imul
sub
loope
shl
add
es
int3
push
xor
fcom
xor
xor
cmc
sbb
movs
inc
adc
add
ror
cmp
adc
lods
or
and
sub
mov
mov
mov
or
(bad)
adc
mov
sub
sub
in
or
or
add
dec
or
out
jo
add
inc
add
jl
xchg
push
dec
in
add
(bad)
xchg
int3
adc
sbb
and
das
cmps
or
les
test
sbb
cmpps
add
leave
cmp
pop
push
and
lock
xor
enter
jns
cmp
mov
aas
ret
add
aam
xlat
cdq
xor
adc
sbb
cmps
loopne
popf
or
push
das
imul
jo
xchg
dec
bound
jo
xchg
sub
mov
push
mov
or
adc
cli
popa
mov
pop
mov
add
sbb
in
mov
and
test
pop
jecxz
jnp
push
jb
and
frstor
fs
jbe
push
push
test
adc
pop
add
add
add
fadd
data16
dec
inc
mov
or
pusha
mov
push
jge
jb
jmp
push
dec
adc
inc
push
jo
lock
jb
lea
aaa
rcr
dec
mov
push
xor
add
push
add
cmp
dec
sub
xchg
in
fld
jb
adc
bound
cmp
xchg
inc
dec
mov
add
or
jae
js
and
xlat
pop
or
shl
add
jmp
daa
cmp
scas
sbb
outs
mov
xchg
jle
enter
repnz
pop
in
loopne
and
jo
movs
jne
mov
jbe
pop
icebp
cmp
pop
push
bnd
stos
enter
jb
sete
bound
adc
jmp
dec
fdiv
jb
pop
stos
adc
arpl
and
mov
cmps
pop
pop
push
mov
ret
xchg
or
or
inc
call
mov
lods
xor
lds
add
add
enter
xchg
je
mov
dec
loope
les
push
push
inc
out
cmp
lods
leave
lods
rcl
cmp
inc
(bad)
rcr
cmp
dec
pop
repz
mov
ins
lea
cmp
xchg
std
push
or
push
(bad)
jle
seta
jp
mov
pop
push
test
gs
mov
inc
mov
jo
aas
and
adc
test
icebp
push
jb
xor
inc
sbb
(bad)
icebp
gs
inc
sub
xchg
push
call
jge
fcom
(bad)
dec
lods
xchg
adc
cmp
sar
mov
or
movs
out
test
sub
mul
movs
(bad)
jne
sub
and
and
xchg
pop
pop
sbb
adc
shr
int
mov
ins
add
cmps
adc
mov
jmp
out
mov
and
mov
and
shl
lock
cmp
and
leave
pop
dec
and
pop
pop
inc
xor
loopne
sub
pop
setbe
adc
dec
sub
ins
mov
add
jae
dec
dec
cmps
adc
and
adc
jo
jae
adc
pop
push
nop
inc
push
and
rcr
push
aaa
add
lock
and
nop
cld
stc
and
or
add
and
adc
or
xchg
push
sbb
les
or
bound
fdiv
cmps
mov
push
add
(bad)
sub
clc
cmp
es
sub
or
jg
push
xor
adc
inc
sbb
sub
jmp
adc
jae
dec
sub
pop
cld
fsubr
add
sub
mov
dec
loope
dec
movs
dec
push
and
outs
pop
jb
push
mov
mov
clc
sahf
add
ss
sar
enter
out
pusha
adc
ins
das
das
addr16
mov
mov
gs
test
inc
pop
repz
mov
and
jp
sub
add
xchg
and
clc
pop
inc
or
dec
or
push
(bad)
sub
fucomip
adc
fwait
adc
inc
sbb
in
loope
inc
jmp
or
mov
sbb
addr16
icebp
jae
inc
loope
cmps
shl
add
test
test
and
sub
fdivr
scas
mov
or
mov
sti
sbb
xor
add
cmp
aam
enter
push
push
sbb
sbb
and
add
mov
lea
jne
jmp
add
adc
adc
js
jecxz
aam
xor
xor
sbb
jae
sub
adc
mov
out
lea
cmp
inc
rcr
push
ror
sbb
sub
jl
inc
mov
mov
ins
cmp
jbe
popf
mov
or
cmps
ficomp
stos
cmps
or
push
add
jp
adc
and
add
inc
test
mov
in
and
cmp
and
sub
xchg
or
push
cmp
xor
push
inc
cmps
xor
or
jnp
loop
xchg
icebp
xor
ror
dec
sub
neg
sbb
addr16
adc
call
pop
imul
pop
pop
add
mov
add
das
sbb
and
fld
dec
js
int
mov
(bad)
adc
jmp
sbb
out
sub
scas
xor
pop
adc
daa
push
sub
push
sub
sub
inc
adc
not
inc
pusha
loopne
sti
sbb
inc
or
sbb
add
mov
adc
sub
ja
movs
sub
mov
test
cmps
sar
add
movs
jbe
aas
or
fild
cmp
dec
call
pop
add
retf
mov
jo
(bad)
dec
xchg
pop
jle
popa
ret
ret
hlt
cmp
jae
sti
inc
sub
and
sbb
popa
mov
test
arpl
jne
sub
retf
movaps
lahf
xor
inc
shr
imul
pusha
mov
ret
inc
rcl
aam
or
lea
dec
or
sbb
xor
add
inc
push
push
rcl
sbb
mov
ficom
xor
inc
mov
mov
jo
scas
dec
mov
cmp
cmp
shl
jge
addr16
loopne
rol
jo
push
and
add
adc
(bad)
lods
inc
cld
call
loop
sub
shl
and
mov
sbb
ja
pop
cmp
cmp
dec
push
inc
push
test
inc
in
inc
lea
mov
rcl
aam
xlat
add
rcl
cmp
inc
das
outs
enter
fdiv
cmp
and
je
push
jae
add
push
push
aas
outs
xor
sbb
sub
jl
or
rol
pushf
loope
pop
pop
add
jbe
std
xlat
test
cmp
sbb
inc
inc
rcr
test
adc
jle
gs
sub
stos
mov
fmul
pop
pop
(bad)
div
cmp
in
fstp
int
ds
xor
rol
rol
rol
les
ins
jae
adc
add
sub
dec
cld
cld
push
or
js
cmp
push
lea
loop
inc
mov
fisttp
lock
into
repz
lock
pop
pop
pop
in
fwait
dec
sahf
add
sub
mov
xor
jmp
iret
loope
jle
add
inc
outs
mov
push
or
popf
dec
and
data16
cmp
xchg
sahf
sbb
jb
mov
xor
push
jae
inc
xchg
les
shl
stc
data16
mov
push
adc
inc
jge
inc
or
mov
adc
xor
push
les
ret
adc
rol
enter
adc
mov
ins
enter
les
pop
dec
add
adc
sbb
sbb
or
pop
add
adc
mov
inc
ror
(bad)
mov
and
out
imul
call
adc
sub
sub
cwde
ds
cmp
and
ds
mov
sub
sub
push
in
mov
and
or
scas
stos
dec
mov
aam
dec
je
sbb
mov
cmp
mov
mov
adc
push
shl
xor
dec
pusha
pop
dec
hlt
sub
add
ud0
dec
(bad)
jp
push
adc
mov
shr
xor
mov
dec
cmp
(bad)
mov
fldenv
je
jno
add
jmp
jg
mov
and
add
xchg
aaa
test
xchg
pushf
rcr
sbb
and
js
mov
push
jo
or
test
fidivr
fcom
jbe
and
push
fcom
sbb
xchg
or
cmc
repnz
sbb
hlt
sub
pop
shr
jmp
nop
mov
inc
clc
je
enter
call
inc
add
mov
mov
jle
popa
inc
mov
fmul
jmp
int
nop
pop
mov
clc
sub
mov
jne
adc
sbb
jo
mov
inc
push
push
mov
scas
cmp
or
or
and
xchg
cmp
fdiv
(bad)
and
dec
or
mov
or
bnd
lock
mov
(bad)
lock
loopne
add
scas
jle
xor
pop
test
inc
lea
lea
and
cmp
aas
mov
shr
and
mov
dec
idiv
adc
pop
xchg
jnp
and
jo
jmp
aaa
or
mov
push
jp
rol
mov
lods
cli
xchg
jl
xor
mov
jl
sub
sbb
out
imul
mov
mov
dec
out
hlt
mov
out
or
inc
dec
test
xor
mov
or
daa
or
sti
mov
lea
push
jae
cmp
mov
mov
mov
cmp
out
push
bound
pop
out
out
out
or
pushf
cmp
outs
fcmovbe
pop
sbb
jg
push
sbb
sub
pop
(bad)
sbb
and
loopne
adc
inc
mov
inc
pushf
aaa
jle
cmp
mov
arpl
pop
mov
xor
add
dec
add
or
cmp
jb
dec
daa
outs
cmps
loope
ds
movd
jne
cld
loopne
jb
push
adc
xchg
xchg
test
test
xchg
inc
jge
aam
sub
lahf
loope
sub
xor
fst
ja
sahf
add
outs
xor
jge
rcl
xor
sub
xlat
add
xor
mov
sub
add
sub
inc
ins
pop
jl
add
push
sahf
data16
test
cwde
and
loop
int
imul
inc
add
ins
jno
lock
xor
aas
mov
sbb
ror
add
out
jl
in
pop
test
fcmovne
pop
adc
(bad)
retfw
add
or
sub
adc
add
sub
sbb
jg
(bad)
mov
enter
mov
out
je
sbb
cmp
and
out
adc
test
mov
cmp
ror
push
jle
jg
mov
xor
ins
(bad)
adc
mov
out
mov
scas
mov
mov
lds
mov
push
and
mov
xor
fsub
rcl
scas
or
or
mov
fistp
inc
(bad)
test
stc
shl
add
pop
add
call
aam
pushf
inc
and
or
add
pop
pop
aam
mov
dec
out
mov
add
jle
(bad)
pop
mov
jbe
mov
mov
or
pop
inc
ror
fwait
(bad)
outs
mov
and
inc
adc
ret
lds
push
(bad)
(bad)
(bad)
pop
int
rcl
movs
sar
fmul
mov
ja
loopne
loopne
bound
sub
int
sbb
sub
or
call
mov
cmp
test
cs
mov
add
add
adc
sub
mov
add
xor
and
int
adc
outs
or
sbb
dec
and
xlat
in
dec
dec
or
repz
adc
ficom
mov
in
pop
xor
and
in
push
or
mov
mov
popf
jmp
mov
test
mov
add
xchg
xchg
pop
sbb
add
fisttp
xor
mov
loope
test
sub
call
mov
xor
add
out
or
add
or
mov
pop
ret
inc
sbb
sbb
sbb
adc
inc
sub
sbb
shr
push
or
test
and
fild
push
adc
mov
inc
push
es
jge
jge
inc
xchg
sbb
into
jle
fidiv
jmp
jmp
add
clc
dec
cmp
jle
fisub
mov
dec
jmp
pop
std
add
or
test
sub
inc
sbb
jg
aaa
sbb
and
cmp
test
ja
cmp
jmp
aam
push
aad
or
or
and
mov
push
inc
call
lods
repnz
daa
jge
outs
xor
add
pop
mov
dec
mov
push
push
and
or
lods
xor
inc
ins
ss
jle
cmp
adc
sub
or
jg
cmp
add
ss
push
cmp
or
mov
xor
push
(bad)
call
cmp
in
or
iret
in
or
pop
mov
mov
mov
stc
or
aad
cmp
sar
enter
stos
or
add
push
jmp
icebp
add
ret
mov
xor
xor
aaa
sub
add
xchg
test
movs
adc
ins
cdq
or
sbb
jae
sbb
ss
enter
mov
mov
add
cmp
add
pop
mov
dec
fcmovnbe
sti
in
(bad)
xchg
adc
cwde
and
out
jmp
dec
xor
jecxz
aas
jns
mov
dec
arpl
(bad)
ret
in
rcr
inc
xor
shl
push
add
mov
and
leave
add
and
int
dec
and
je
in
inc
and
sbb
add
fcomi
xor
enter
mov
dec
and
stc
sub
aaa
dec
mov
or
cwde
xlat
and
stos
pusha
fadd
adc
inc
or
repnz
add
mov
cld
add
dec
cmps
jmp
cli
adc
xchg
or
aas
mov
jge
ror
xchg
jge
(bad)
jge
mov
add
ror
jo
(bad)
out
das
cmps
push
push
(bad)
clc
push
push
pop
mov
push
sbb
ror
pop
xor
mov
sar
in
pop
cmp
xchg
call
or
data16
add
pop
call
or
clc
dec
inc
clc
scas
in
inc
push
rcr
pop
leave
and
or
xor
mov
loopne
cmp
mov
adc
into
cmp
mov
enter
dec
mov
call
push
sub
ins
xchg
pop
rdtsc
adc
cpuid
sar
cmp
mov
and
fisttp
mov
sbb
inc
inc
inc
jge
inc
sar
dec
ds
cmps
dec
arpl
jns
and
mov
data16
inc
mov
clc
jne
mov
rol
mov
add
cmps
jle
clc
imul
sbb
or
jae
or
adc
(bad)
push
nop
int
cwde
sub
scas
retf
cwde
push
mov
inc
(bad)
outs
das
push
jge
cld
xor
jbe
in
das
add
dec
push
jb
add
add
push
jge
cli
push
mov
xlat
sbb
pop
inc
iret
push
dec
std
ret
test
push
inc
jae
shl
sub
push
inc
adc
cmp
mov
push
mov
(bad)
adc
ja
or
(bad)
dec
fimul
bndldx
xlat
call
mov
push
leave
xor
mov
xchg
dec
xchg
aam
jecxz
add
adc
leave
pop
mov
mov
pop
xchg
push
xor
xor
das
adc
inc
(bad)
stc
jle
test
jbe
jb
outs
test
pop
fisttp
or
dec
ficomp
and
cmp
mov
mov
ret
sar
sbb
jb
fistp
lea
or
dec
add
shl
mov
jno
inc
cmp
bound
cmp
add
or
test
xor
out
dec
loop
push
add
shl
pusha
mov
fstp
sbb
inc
jecxz
pop
xor
add
lea
and
add
push
xor
xor
or
pop
mov
sub
inc
mov
nop
ret
mov
mov
shr
pop
movs
test
mov
xchg
cwde
movs
fst
adc
dec
outs
ret
xor
sbb
push
inc
add
movs
jmp
inc
pushf
cmp
mov
mov
dec
or
xchg
or
adc
test
mov
nop
nop
nop
push
or
sbb
mov
xor
or
nop
neg
adc
sbb
mov
sbb
in
push
loopne
adc
push
hlt
out
jp
mov
pop
(bad)
out
in
mov
lock
not
(bad)
push
aas
test
(bad)
push
dec
cmp
jl
jbe
jl
call
je
outs
iret
xchg
or
adc
loopne
adc
sub
mov
rcl
and
stc
dec
aas
ret
sbb
mov
push
jl
jmp
imul
mov
add
jno
adc
jmp
mov
xor
push
mov
mov
lock
adc
mov
mov
cdq
add
mov
cdq
mov
mov
cld
popf
mul
scas
pushf
pop
adc
cdq
xor
sub
dec
dec
movs
and
sub
jo
sbb
xor
pop
xchg
mov
sahf
mov
retf
dec
and
sbb
ins
inc
dec
xchg
mov
add
jo
mov
iret
movs
adc
mov
jo
adc
dec
xchg
adc
mov
(bad)
shr
and
pop
add
jne
xchg
or
mov
pop
dec
push
ret
mov
add
sub
xor
mov
jle
mov
popa
mov
jg
xchg
xchg
mov
sub
cwde
icebp
adc
mov
out
xor
sub
sti
or
xor
sbb
xor
xchg
lea
jl
adc
lea
shr
test
or
adc
fldpi
sbb
jle
and
add
adc
cmp
sub
inc
add
enter
mov
or
jge
pop
not
pop
and
push
pop
lock
not
push
leave
xor
lods
add
rdtsc
mov
push
inc
mov
add
dec
or
dec
inc
mov
or
outs
(bad)
aam
sub
push
enter
or
dec
mov
aam
rcr
sti
addr16
in
daa
or
or
mov
sub
mov
shr
cmp
mov
mov
pop
pop
es
(bad)
fimul
mov
fdiv
mov
aaa
repnz
xchg
sbb
out
nop
nop
and
(bad)
cmp
mov
mov
push
and
add
pop
mov
jo
fist
adc
cmp
sti
sbb
or
xchg
sub
sub
das
xor
sbb
inc
call
xor
inc
or
or
mov
sub
xor
xor
add
sbb
xor
push
enter
rcl
push
fsubr
pop
mov
push
shl
or
data16
inc
call
lock
pop
and
inc
aas
mov
xchg
inc
cmp
sbb
mov
sub
xor
cmp
adc
and
enter
mov
dec
mov
add
jae
arpl
push
pop
daa
xchg
or
out
sbb
std
mul
adc
mul
sbb
add
sbb
cmp
movzx
mov
ret
shr
adc
fstp
pushf
inc
outs
(bad)
leave
sub
add
sbb
lods
adc
mov
outs
sbb
add
mov
or
xor
or
rcl
rcr
adc
cwde
xor
enter
shl
xchg
adc
loope
xor
test
ror
inc
inc
inc
das
ja
data16
mov
or
jmp
in
je
nop
stc
push
mov
xor
jl
xor
out
and
push
inc
retf
mov
lods
add
inc
xchg
fiadd
mov
outs
ret
loop
cdq
imul
test
mov
gs
push
sub
adc
rol
xchg
xchg
ficomp
pusha
jl
lea
push
pop
(bad)
and
mov
adc
pop
mov
xor
rcr
outs
mov
push
adc
pop
xor
hlt
pop
jne
xor
sbb
xchg
adc
push
mov
push
test
adc
xor
inc
stos
pop
bound
ss
adc
xchg
(bad)
and
sbb
nop
imul
adc
loopne
in
mov
dec
mov
dec
fld
or
inc
inc
outs
pop
imul
or
fist
inc
(bad)
jns
inc
mov
and
mov
cmps
mov
add
mov
pop
jb
ins
mov
mov
dec
mov
lahf
inc
xor
mov
outs
add
or
sbb
inc
jae
mov
sub
test
inc
mov
push
stos
jo
jns
adc
movs
jecxz
mov
cmps
push
test
inc
(bad)
(bad)
lock
outs
mov
fidiv
jp
push
jns
add
in
push
lods
push
jp
out
push
loopne
mov
pop
imul
pop
jbe
imul
out
sub
outs
out
ret
outs
or
gs
cmp
add
adc
mov
xor
fs
scas
int
(bad)
jg
or
mov
scas
jae
call
and
stos
push
outs
jo
xchg
mov
push
push
mov
adc
add
mov
inc
cs
fmul
fisttp
fwait
cmp
movs
mov
lods
adc
mov
dec
das
adc
mov
punpckhdq
lahf
mov
cmp
pop
cmp
test
jle
push
ja
lock
ins
xlat
outs
pop
inc
retf
gs
pop
cwde
dec
xchg
ja
jle
sbb
je
xchg
outs
push
arpl
mov
jae
rcl
mov
mov
(bad)
mov
and
inc
push
mov
or
out
sbb
ja
and
ret
imul
fs
or
out
adc
jmp
inc
sbb
push
xchg
jne
push
cmps
test
loopne
mov
sbb
aaa
inc
cmps
push
lahf
gs
and
lds
dec
imul
mov
pop
adc
cmp
test
add
mov
xchg
push
pop
push
adc
inc
inc
cmps
fiadd
mov
push
shl
mov
adc
pop
and
add
ins
mov
bound
cmps
lahf
retf
pusha
mov
dec
sbb
imul
sub
pop
inc
inc
bound
mul
pop
mov
lahf
sub
push
or
push
ffreep
imul
sub
pusha
adc
add
inc
xor
push
pop
stos
and
xor
rol
ss
cmp
jo
ins
lds
lahf
push
fbstp
push
add
adc
dec
dec
sub
(bad)
adc
or
add
lahf
mov
pop
adc
pop
push
sbb
dec
adc
sbb
or
gs
or
or
push
or
outs
mov
popa
test
xor
or
pop
repz
and
add
or
mov
mov
pop
inc
stos
inc
mov
dec
push
imul
out
mov
shl
push
inc
sbb
adc
pop
mov
shl
xor
jae
adc
mov
cmp
addr16
bound
cmp
push
jb
mov
outs
lea
(bad)
loop
pop
xchg
es
icebp
fisub
pop
dec
stos
ins
sub
or
cmps
xor
push
add
and
aaa
adc
push
ret
mov
aas
pop
mov
fild
or
ficom
out
stos
and
rcl
div
fbld
xchg
ins
pop
push
sub
js
ret
push
mov
lods
jmp
mov
adc
lock
xchg
je
fwait
loope
push
(bad)
not
ficom
push
lahf
xlat
imul
and
rol
push
retf
jns
aad
lea
pop
aas
or
not
or
jecxz
punpckldq
or
imul
stos
mov
dec
(bad)
mov
mov
push
out
sbb
jns
inc
test
pop
jg
pop
adc
addr16
mov
and
inc
stos
or
stos
hlt
lods
push
jg
sbb
add
(bad)
stc
rcl
icebp
xor
push
cwde
pop
rcr
dec
(bad)
idiv
mov
dec
enter
shl
rcr
pop
shrd
enter
add
jb
mov
or
add
popa
out
mov
jne
push
xor
je
test
ins
adc
ins
adc
or
xchg
jg
push
inc
ins
mov
and
push
outs
or
jl
adc
add
gs
and
push
or
add
push
or
cwde
cmps
sbb
pop
dec
loope
mov
ror
in
sar
ret
pop
in
add
int3
add
inc
aas
inc
jmp
and
add
rol
sub
fcmovne
ret
out
xchg
icebp
inc
add
cdq
clc
movs
inc
(bad)
test
aas
cmp
ss
mov
lock
sar
loopne
div
xchg
rol
mov
xchg
data16
(bad)
lock
cwde
push
push
sbb
fwait
test
mov
lods
(bad)
sbb
imul
mov
or
mov
mov
inc
call
cmp
push
enter
pushf
out
mov
pop
xchg
push
pop
bound
lea
pop
sub
fisub
fisub
dec
or
mov
(bad)
cmp
inc
sahf
loope
pop
sub
(bad)
hlt
rol
stos
out
sbb
iret
pop
sbb
adc
cmp
mov
call
cmp
mov
jl
pop
inc
test
loope
lods
add
icebp
sbb
adc
or
dec
inc
xchg
cwde
dec
add
ror
hlt
inc
adc
rcr
jae
cmp
push
lods
mov
dec
adc
push
outs
fs
out
mov
jo
adc
mov
adc
or
lock
or
fsub
clc
iret
inc
adc
inc
popa
and
jp
mov
mov
in
jo
jnp
inc
fidiv
aam
rol
jo
jb
out
ret
sub
add
jp
dec
ins
and
sbb
ror
inc
addr16
mov
sbb
mov
mov
inc
pop
dec
dec
nop
outs
add
inc
lods
push
pusha
jmp
xchg
xchg
sbb
gs
cmps
nop
pop
pop
xchg
sbb
inc
and
pop
bnd
sub
test
sbb
and
dec
cmps
sbb
(bad)
pop
xchg
in
dec
fs
add
jl
in
retf
sbb
xor
push
inc
ins
outs
ja
pusha
add
or
pop
add
les
rep
js
arpl
hlt
push
mov
and
or
dec
inc
mov
and
or
rcr
sub
rcl
cmp
dec
jl
mov
pop
dec
enter
cmps
and
outs
jo
push
mov
jne
mov
or
xchg
add
dec
push
cs
mov
or
sbb
inc
adc
adc
ret
inc
les
jo
ret
pop
push
cmp
pop
push
pop
daa
push
out
lea
push
icebp
sbb
xor
sub
scas
pop
je
imul
push
je
fdiv
dec
inc
ins
fst
popf
dec
inc
pop
cwde
mov
sub
mov
imul
jl
pop
loop
add
jmp
and
dec
xchg
sbb
xor
enter
or
pop
mov
fsubr
dec
sub
les
xchg
cmp
fs
nop
loopne
test
dec
clc
clc
cmp
add
das
add
dec
inc
outs
fiadd
add
fs
or
xor
mov
inc
sub
xor
packssdw
xor
repnz
shl
push
shl
xor
push
out
outs
xchg
dec
enter
in
xor
jbe
rol
leave
pop
repnz
shl
or
xchg
das
in
cmp
cmp
out
test
dec
xor
fsub
xor
in
fsub
sub
lock
pop
pop
add
arpl
cwde
add
dec
sub
les
or
daa
(bad)
out
popa
(bad)
or
inc
std
or
arpl
ins
or
mov
inc
push
dec
outs
ja
es
popf
push
aaa
ins
cmp
pop
add
retf
push
pop
int3
pop
push
push
(bad)
icebp
mov
push
pop
pop
(bad)
cld
shl
loope
inc
add
fdivr
popa
jae
lahf
iret
mov
fisubr
push
xor
clc
repnz
pop
add
push
dec
lock
push
push
jl
pop
cwde
iret
xchg
adc
add
inc
dec
mov
jmp
das
cs
sahf
in
ror
int3
or
ds
out
mov
mov
fldcw
cli
clc
push
sbb
push
mov
faddp
sti
mov
inc
sti
jle
outs
xor
in
pop
adc
data16
outs
sub
repz
aam
pop
push
shl
dec
repz
push
mov
xchg
sbb
push
mov
dec
(bad)
mov
pop
adc
jnp
outs
loop
retf
std
sub
call
mov
test
and
pop
fstp
pop
mov
lods
pop
and
ror
gs
mov
jbe
popa
bound
sti
push
push
enter
into
pop
hlt
and
jns
int
movs
retf
jbe
icebp
add
sbb
inc
mov
scas
push
push
dec
lea
repnz
sbb
pusha
add
inc
adc
or
mov
lea
add
xchg
mov
ins
add
inc
jnp
adc
pop
mov
or
fwait
jle
mov
gs
pop
dec
cmps
enter
repnz
add
dec
outs
outs
cld
mov
test
jmp
xchg
test
xor
xchg
sbb
lods
add
sbb
mov
push
inc
sbb
and
mov
shr
or
dec
or
lds
push
inc
mov
jno
lods
sbb
sbb
add
xchg
add
push
inc
es
jae
mov
add
pop
mov
imul
and
mov
mov
data16
push
jb
and
jb
mov
shl
and
sub
dec
imul
les
call
imul
mov
pop
add
or
inc
popf
(bad)
mov
lock
sub
dec
popa
js
in
cmp
inc
mov
sub
ins
bound
cmp
and
inc
dec
xchg
or
in
repz
and
add
push
mov
cs
dec
mov
out
int3
jmp
mov
xor
cs
xor
push
rol
push
jae
ja
xor
jmp
in
enter
inc
xor
adc
sbb
xor
sbb
inc
pop
les
stos
or
xor
inc
sbb
bound
xor
jne
jg
push
leave
mov
mov
mov
or
cmp
js
pop
mov
aam
pop
fdivr
mov
or
push
leave
push
jb
aas
inc
or
ins
clc
or
clc
inc
add
in
push
inc
and
test
inc
inc
add
nop
les
js
je
dec
pop
inc
adc
push
test
in
fisttp
inc
add
adc
and
and
pop
push
jo
add
inc
mov
add
enter
and
and
dec
dec
add
mov
add
dec
nop
nop
xlat
inc
enter
fbld
inc
add
inc
pop
mov
inc
lods
xchg
inc
fs
inc
fst
loope
xor
xor
adc
inc
pop
mov
les
js
in
push
aam
push
clc
lahf
idiv
push
cld
das
push
clc
cmp
fistp
imul
sahf
in
push
cmp
xchg
cmp
imul
adc
mov
and
add
push
call
push
mov
ins
daa
sbb
sbb
add
aaa
cld
dec
and
test
movs
inc
lods
add
les
or
xchg
xchg
ds
aaa
dec
hlt
inc
and
test
add
mov
retf
jmp
mov
push
add
shr
sub
scas
pop
sub
and
sbb
add
push
sub
add
mov
scas
cmp
push
imul
imul
inc
adc
add
pop
xor
daa
lods
into
js
shl
pushf
pop
mov
push
adc
mov
cmps
or
mov
pop
ja
iret
pop
sub
or
and
in
adc
and
adc
dec
xchg
xor
xchg
into
loopne
sar
aaa
js
add
cmp
xchg
out
popa
mov
or
push
push
arpl
repnz
cvttps2pi
cmp
inc
pop
and
inc
xchg
add
adc
add
add
push
push
cmp
pop
dec
mov
shl
arpl
out
sub
popa
ins
call
fs
lahf
pop
(bad)
outs
fs
sbb
outs
je
sbb
cld
ins
add
fnstsw
ficomp
inc
enter
(bad)
cmp
inc
and
push
cmp
les
xlat
enter
in
add
or
jnp
repnz
inc
in
push
push
jl
pop
and
rol
js
push
shl
dec
mov
loopne
daa
jmp
(bad)
dec
push
sub
jge
cmp
push
dec
adc
sbb
lock
mov
icebp
mov
lods
lds
pop
and
add
clc
pop
rcr
outs
cmp
mov
fbld
mov
jne
jmp
pop
sbb
and
cmps
jecxz
lock
cmp
sbb
clc
pusha
int3
cwde
cmp
add
pop
test
push
and
and
imul
push
mov
push
add
pop
mov
pop
cmp
pop
in
(bad)
jne
pop
setns
adc
fld
repnz
out
fwait
cmp
js
lock
pop
pop
cmp
add
pop
xchg
push
ja
nop
or
or
sbb
xchg
or
sbb
nop
js
push
adc
or
movs
xor
cmp
lock
outs
push
cmp
cli
push
gs
imul
pop
and
ds
and
inc
sbb
mov
test
or
sub
inc
stos
shr
mov
or
popa
cmps
in
sbb
nop
bswap
cwde
ficom
mov
je
in
xor
repnz
cmp
sahf
mov
loopne
ins
push
inc
jo
lea
add
test
jb
jb
mov
mov
pop
mov
inc
mov
int
dec
pop
bnd
movs
mov
pop
sbb
cmp
or
cs
test
loopne
movs
and
adc
add
xor
pop
add
popa
add
xor
or
cmc
xor
stos
ss
mov
aaa
sub
push
sub
inc
and
cdq
dec
cmps
cmp
cmps
xchg
mov
ds
add
inc
in
in
inc
inc
nop
test
xor
nop
add
pusha
mov
test
(bad)
ret
pop
mov
mov
jle
aas
test
mov
mov
mov
sub
inc
xor
hlt
mov
cmc
cld
xchg
clc
xor
cmp
xchg
not
and
sbb
push
ja
jmp
inc
mov
and
mov
xchg
in
ins
mov
push
cmps
xchg
stos
add
jmp
mov
jmp
add
ret
push
and
(bad)
sbb
or
imul
sti
pop
inc
jmp
add
mov
sbb
adc
mov
mov
ins
adc
ins
push
push
dec
mov
js
or
loopne
(bad)
in
inc
pminsw
adc
fistp
add
scas
add
pusha
or
xor
mov
mov
(bad)
in
dec
push
daa
popf
and
mov
hlt
push
stos
in
inc
(bad)
aaa
xor
icebp
je
fadd
rcr
test
arpl
js
fisttp
xchg
shl
and
dec
xchg
repnz
pop
aas
loope
fild
or
fstp
ret
fs
mov
mov
sbb
cs
and
movzx
je
push
mov
imul
xor
add
inc
xchg
cli
icebp
push
arpl
movs
pop
mov
add
repnz
(bad)
or
arpl
jnp
xchg
pop
mov
call
jge
jae
pusha
inc
call
mov
rcr
das
clc
jle
mov
in
inc
ss
push
and
imul
cdq
xchg
xchg
dec
dec
loopne
xor
clc
mov
sbb
inc
cmp
je
btr
adc
adc
and
push
dec
cli
sbb
mov
push
add
jae
mov
mov
push
add
xchg
std
adc
jmp
inc
retf
inc
or
mov
inc
xor
sub
or
retf
pop
and
or
sbb
and
call
pop
adc
and
lea
pushf
or
imul
adc
out
fild
mov
mov
dec
repz
sti
push
retf
out
mov
xor
mov
rcl
(bad)
cmp
pop
jne
pop
inc
jecxz
(bad)
iret
inc
mov
jae
test
add
sub
jne
(bad)
sbb
cmps
push
cwde
push
push
dec
sbb
in
mov
(bad)
imul
lods
or
xor
pop
push
pop
sub
out
pop
pop
into
nop
pushf
jbe
or
fbld
dec
lds
and
pop
adc
and
and
iret
xchg
or
mov
inc
movs
sti
imul
mov
rcr
inc
push
mov
test
xchg
hlt
add
push
iret
sbb
in
jmp
loopne
jmp
or
jmp
and
sub
xor
inc
add
mov
jae
jmp
mov
gs
pop
inc
mov
jno
popf
(bad)
pusha
pop
xor
dec
lea
pop
xor
add
test
dec
sub
fcom
outs
xchg
jno
dec
inc
sub
ror
stc
ja
or
xlat
cmp
setnp
xor
sub
mov
shufps
cmp
je
dec
ret
in
mov
inc
xchg
(bad)
jmp
iret
push
dec
xchg
shl
cmp
or
arpl
ja
or
mov
mov
sub
mov
pop
add
or
sub
movs
icebp
fwait
mov
or
and
cmps
adc
adc
dec
dec
call
mov
aaa
sbb
call
xchg
clc
jns
mov
mov
jne
and
pusha
xchg
pop
sbb
push
fidiv
and
mov
movs
dec
ja
jmp
mov
and
loope
aas
inc
mov
(bad)
call
dec
fdiv
and
jae
push
jmp
adc
sbb
aam
fsubr
push
add
repnz
les
pop
jg
sub
mov
faddp
inc
cmp
xchg
inc
or
in
lahf
jns
mov
and
mov
ret
add
xchg
ins
outs
or
shr
aam
xchg
adc
mov
repnz
xchg
add
add
push
scas
jmp
outs
xor
push
mov
sbb
aas
mov
xor
add
jno
(bad)
(bad)
loope
test
push
mov
add
popa
mov
inc
cs
out
mov
repnz
ret
es
sbb
sbb
dec
mov
cwde
mov
mov
xchg
(bad)
jno
leave
adc
inc
or
lock
jge
lea
push
fadd
daa
ins
mov
outs
outs
dec
rcr
cmp
psrlw
cmps
aaa
ficom
mov
nop
xchg
jo
sub
shr
(bad)
sbb
mov
mov
inc
mov
gs
push
push
jmp
mov
nop
aaa
popa
mov
ret
sbb
or
sub
mov
jmp
dec
and
or
(bad)
jmp
cmp
shr
mov
imul
mov
ins
push
sub
xchg
xchg
sbb
push
push
sub
pop
xor
push
enter
push
mov
and
xchg
mov
js
imul
fidivr
xchg
sub
push
adc
xchg
gs
add
mov
jnp
(bad)
(bad)
xchg
and
adc
cmp
cmp
inc
inc
push
ss
cdq
xor
xchg
movs
xchg
mov
addr16
std
adc
push
fcom
in
mov
xchg
jl
push
xor
mov
clc
fbld
sub
cmp
retf
inc
call
or
mov
sub
add
jo
mov
jno
xor
pop
inc
sbb
clc
(bad)
shl
and
push
in
imul
mov
mov
cld
cld
pop
add
ror
dec
movs
cdq
dec
rcl
pop
sub
xlat
nop
fistp
fmulp
les
dec
repnz
add
test
mov
ins
(bad)
dec
cld
retf
add
retf
ret
or
add
ins
ins
mov
clc
rcl
scas
fisubr
xor
xor
mov
mov
xor
jo
push
ret
add
mov
es
xchg
add
adc
cli
stos
int
addr16
jg
or
xchg
pop
inc
mov
and
ror
dec
mov
dec
mov
inc
int
mov
(bad)
(bad)
cmp
je
fdivr
mov
rcl
push
pop
mov
mov
push
dec
cmc
mov
inc
and
pop
inc
ror
stc
pusha
popa
inc
adc
and
or
imul
mov
test
cmp
mov
adc
pop
nop
das
or
add
push
cmp
mov
or
or
push
mov
sbb
xor
mov
stos
push
xchg
loopne
sub
jmp
fmul
cmp
dec
or
inc
push
jno
loopne
or
daa
push
arpl
xchg
pop
add
call
iret
ds
gs
add
mov
sbb
cmp
popa
sub
daa
and
js
adc
cmp
and
xor
push
enter
mov
ror
movs
ror
add
sub
inc
sbb
dec
push
xor
cmp
or
xchg
jns
mov
jge
cmp
ins
rcl
fdiv
(bad)
pop
mov
fnsave
fbld
xlat
xchg
mov
push
ret
add
sti
add
icebp
ret
add
mov
add
mov
lock
xchg
add
jp
mov
cmp
fld
js
scas
retf
ins
inc
enter
lods
adc
sub
cmps
out
jb
sub
and
mov
fstp
xchg
add
mov
xchg
outs
or
mov
jmp
jmp
dec
je
pop
push
fld
dec
arpl
jge
and
xor
sbb
adc
div
jno
pusha
popa
xchg
sub
(bad)
test
inc
lds
int3
in
cmp
pop
je
ins
inc
emms
dec
shl
adc
ret
xor
push
sbb
xor
add
rcl
pop
pop
scas
in
test
out
cmp
movs
inc
or
sub
mov
xchg
mov
and
mov
out
clc
push
xchg
pop
movlps
xor
pop
xor
stc
je
mov
sub
jl
retf
cmp
ins
pop
xchg
ret
call
ja
adc
add
movs
sbb
cwde
out
mov
push
mov
or
cmp
call
movs
test
fcmove
push
jno
into
dec
pop
les
ins
xlat
xchg
xor
imul
test
ss
inc
lea
loopne
sub
and
out
pop
shr
jmp
pop
pop
mov
clc
sub
nop
mov
loopne
push
imul
jge
aam
mov
cmp
call
sbb
cmc
cmp
sbb
cmp
dec
rcl
xchg
adc
dec
mov
cmp
mul
adc
in
jle
adc
sub
push
imul
pop
bound
les
sbb
sub
mov
sub
jmp
mov
jne
in
mov
scas
xor
cmp
fisttp
or
(bad)
into
mov
lds
pop
out
cld
pop
(bad)
std
push
inc
or
mov
push
(bad)
movs
add
iret
adc
cli
push
jno
jae
stos
and
lods
iret
icebp
jl
mov
sahf
dec
xor
mov
adc
ret
cmc
jbe
rol
cmp
bound
(bad)
inc
(bad)
repnz
dec
or
test
jbe
add
mov
into
bnd
jl
nop
sbb
inc
ins
adc
and
mov
adc
or
jno
rcr
inc
or
call
test
cmps
ret
cmc
int
loope
mov
cmp
fdivr
fcmovnu
xor
or
and
int
xor
add
push
add
je
or
lods
or
push
and
dec
dec
movs
imul
dec
xor
inc
popa
cmp
js
or
pop
adc
inc
fidivr
inc
inc
jl
xor
clc
mov
xchg
ss
ret
mov
sub
and
daa
push
mov
mov
daa
and
mov
ins
cs
nop
sbb
loopne
mov
ja
sbb
(bad)
dec
punpckhdq
cmp
xchg
xchg
inc
test
push
movs
dec
test
out
inc
and
rcl
ds
dec
mov
or
in
ss
pop
imul
adc
and
xchg
pushf
add
aad
inc
xchg
call
cmp
xor
dec
stos
mov
push
inc
dec
dec
and
out
je
mov
jbe
adc
mov
jmp
lods
shl
mov
sub
in
jb
test
push
(bad)
call
inc
sbb
push
inc
xchg
xchg
arpl
push
lock
test
pop
data16
scas
fisttp
enter
ret
mov
sub
xor
xor
aaa
popa
pop
in
add
adc
out
hlt
mov
pop
fs
jo
inc
dec
sbb
loope
test
in
mov
jo
movs
jnp
dec
stc
test
xor
sbb
pop
push
test
push
mov
xchg
out
mov
or
ret
dec
or
enter
sar
jmp
ins
mov
je
nop
pop
add
pop
les
je
test
adc
add
test
jmp
hlt
das
push
ror
jmp
test
lock
loopne
inc
xchg
inc
and
(bad)
adc
or
cmp
inc
push
push
push
in
(bad)
xchg
pmaddwd
or
sub
scas
fst
sub
or
mov
mov
xchg
dec
and
bts
jl
mov
mov
out
push
daa
(bad)
stos
and
cmp
push
mov
mov
add
dec
pop
ret
cmp
add
push
pop
push
mov
add
jl
sub
scas
icebp
sbb
jl
cli
or
or
push
or
(bad)
sub
nop
gs
cmc
sbb
push
adc
inc
mov
sub
jns
add
push
test
mov
mov
imul
mov
add
or
cmp
fild
scas
ret
mov
lods
retf
or
inc
jne
pop
imul
mov
cmp
(bad)
jg
jg
aam
out
das
xor
test
pop
pusha
outs
push
ror
dec
inc
pushf
inc
mov
test
sbb
xor
sbb
xor
jg
jp
add
aad
ins
add
ret
mov
loope
les
add
stos
and
xchg
mov
pop
add
les
xchg
sbb
xor
jnp
sub
lods
bound
jne
mov
xchg
mov
xchg
xchg
movs
movs
dec
xor
test
sbb
mov
inc
jmp
test
jno
cwde
xor
fs
jle
xchg
dec
dec
jne
fucomip
movs
sub
sbb
cwde
push
sbb
ror
jle
fidiv
pop
xor
xchg
fwait
adc
or
stos
mov
or
jecxz
cdq
jne
fadd
or
adc
adc
cdq
push
loopne
leave
fistp
das
ja
mov
or
push
push
cmp
imul
adc
loopne
jle
cmp
js
scas
jge
mov
add
fnstsw
repnz
cmp
adc
and
inc
imul
mov
inc
xchg
inc
addr16
mov
(bad)
rcl
xor
adc
movs
out
jo
or
inc
cmp
xchg
push
jnp
daa
addr16
int
push
cmp
dec
cmps
add
(bad)
cli
test
shr
xchg
jo
and
add
dec
and
or
mov
and
stc
movs
test
nop
mov
test
sar
and
xor
and
sub
xchg
xchg
out
or
mul
fwait
push
pop
dec
(bad)
mov
pop
mov
xor
out
push
mov
mov
cwde
push
ins
mov
sbb
cld
mov
(bad)
sub
mov
add
push
xchg
or
cmps
push
adc
push
scas
push
out
pop
pop
push
add
aaa
lock
jmp
mov
pop
or
jge
or
enter
call
imul
inc
sahf
movs
or
xor
inc
pop
call
and
hlt
mov
inc
mov
adc
fisttp
scas
inc
jb
inc
mov
(bad)
sub
fadd
in
cwde
push
inc
and
arpl
pop
mov
dec
push
sub
inc
or
lock
daa
jp
enter
cmp
xor
jmp
nop
or
dec
or
hlt
push
jmp
in
ins
loop
les
lods
mov
ja
mov
fld
es
xor
aas
dec
add
mov
push
cmp
loopne
push
sbb
daa
ins
outs
je
pop
cmps
jb
mov
mov
mov
loope
imul
or
or
clc
lea
aam
pushf
adc
pusha
and
sub
or
xchg
or
test
mov
enter
icebp
pop
pop
adc
dec
mov
or
ja
dec
(bad)
and
mov
ins
movs
xor
inc
add
mov
shl
xchg
mov
aaa
dec
rol
daa
das
add
pusha
cmp
sub
dec
mov
inc
mov
cmp
xchg
rcr
push
inc
nop
sub
xchg
test
imul
mov
pop
xchg
in
das
xchg
mov
sbb
mov
adc
or
lods
pop
sti
xacquire
jb
mov
shl
cld
push
add
mov
les
or
iret
mov
call
sub
fdiv
inc
in
push
enter
inc
cmp
mov
mul
cmp
fdivr
(bad)
inc
xor
push
fcomp
sbb
add
pop
sbb
pop
sbb
add
push
ror
xor
sub
add
add
add
add
add
inc
xor
jge
adc
jae
add
pop
adc
leave
push
mov
adc
and
cwde
lods
cmp
out
dec
ins
cld
xor
xor
mov
ins
add
ins
popa
jns
push
cmp
sbb
data16
pop
push
pop
push
dec
stos
pop
add
mov
sbb
cdq
lods
clc
push
or
dec
jns
outs
jb
mov
sbb
jae
or
push
sub
add
mov
pop
xor
sub
jmp
nop
mov
dec
scas
and
cmps
xchg
test
inc
xchg
xor
push
sub
dec
push
inc
push
sub
sub
dec
ror
arpl
or
cmp
nop
or
jmp
add
adc
icebp
fidiv
cmp
inc
push
dec
icebp
inc
dec
es
xor
inc
mov
cmps
inc
pop
pop
loopne
dec
xchg
xor
mov
mov
pop
sbb
loopne
push
inc
add
adc
inc
add
xor
inc
rcl
xchg
inc
xor
pop
repnz
mov
pusha
ins
adc
mov
inc
call
xchg
adc
sub
aas
dec
sbb
push
xor
mov
jp
test
mov
sub
test
dec
adc
inc
or
in
xchg
inc
add
inc
push
sbb
cmp
xor
je
es
(bad)
std
pop
or
add
mov
mov
mov
mov
mov
dec
jns
cmps
xchg
pop
add
int3
cmp
xor
xchg
push
popa
outs
mov
js
arpl
js
jno
pop
in
sbb
sbb
movs
sbb
add
dec
aaa
rcr
inc
mov
clc
pusha
lods
test
add
xchg
inc
push
push
ret
inc
out
pusha
lods
mov
inc
inc
xor
add
adc
pusha
nop
enter
inc
push
mov
sbb
or
jb
and
imul
pop
ins
dec
and
push
pop
ds
xchg
push
sbb
fisub
imul
xchg
pop
enter
je
xor
mov
push
fs
fs
add
inc
push
pusha
sbb
pusha
jmp
leave
xor
push
(bad)
add
sub
or
push
in
mov
and
or
mov
std
mov
nop
or
and
push
jb
or
and
xor
inc
and
xor
add
ins
or
retf
mov
nop
push
jmp
jbe
mov
call
aad
dec
lock
mov
or
pop
leave
add
inc
leave
ret
out
mov
push
sub
adc
popa
adc
popa
loop
jb
add
sub
inc
scas
xchg
sub
dec
adc
xor
lock
in
and
enter
xor
sbb
pusha
add
xor
sar
cmp
add
fmul
or
in
and
aaa
sbb
sub
aad
nop
adc
xor
dec
outs
(bad)
adc
data16
test
or
repnz
add
sbb
or
or
mov
movs
inc
mov
sub
dec
jp
rol
mov
and
and
or
cmp
call
sti
cmp
arpl
dec
dec
lock
jb
rcr
inc
xchg
inc
inc
popf
and
inc
jns
cwde
or
xchg
int3
inc
or
out
inc
add
push
jb
or
add
add
dec
dec
or
dec
fiadd
inc
call
dec
mov
add
mov
add
push
mov
stos
sbb
push
fst
aas
jmp
ror
nop
es
inc
add
sub
inc
ins
outs
jae
fdivr
xchg
mov
inc
add
bound
push
or
add
or
mov
or
add
clc
xchg
xor
mov
push
lods
pop
mov
hlt
mov
dec
push
and
leave
cmp
mov
mov
movs
mov
(bad)
dec
inc
push
fadd
inc
leave
ins
in
inc
add
cmp
xor
pop
pusha
cdq
or
jns
jg
clc
nop
inc
push
sub
push
sub
xlat
or
lds
jo
neg
es
jbe
shl
and
cmp
ins
test
adc
add
scas
jno
inc
adc
add
ins
dec
fist
cmp
popa
xchg
mov
ins
cmovae
inc
ss
add
enter
cmp
jl
sub
cmp
inc
shl
push
add
xchg
pop
jnp
ins
inc
jl
jo
mov
push
int3
push
dec
pop
mov
add
cmp
ins
adc
cmp
lahf
adc
enter
cmps
dec
jbe
inc
or
or
shl
ins
cmp
aas
adc
or
add
push
scas
and
and
aas
rcr
pop
in
enter
pusha
mov
jns
mov
or
mov
test
push
lods
mov
iret
push
jo
cmovb
js
repz
int
dec
dec
mov
nop
nop
pop
dec
xor
adc
xor
adc
xchg
cwde
adc
mov
xchg
dec
mov
lea
pop
jmp
adc
test
xchg
inc
fimul
pop
imul
in
sub
xor
push
fsub
test
hlt
imul
or
mov
and
jae
jp
fwait
add
xchg
or
and
and
cs
loopne
imul
pop
call
hlt
mov
xchg
inc
pushf
lods
mov
mov
jo
pusha
or
and
or
sbb
sbb
mov
push
sbb
in
xchg
pop
mov
or
outs
sub
pop
nop
add
fwait
inc
adc
pop
mov
(bad)
fwait
mov
test
add
adc
xor
and
clc
in
dec
(bad)
and
lea
je
pop
push
loope
out
dec
sub
sbb
cmp
cmp
nop
sbb
bound
aaa
jno
sub
fcom
(bad)
fsubrp
arpl
in
sub
lahf
add
les
nop
hlt
arpl
rcr
leave
outs
xchg
push
dec
imul
cdq
ret
cmp
pop
mov
mov
je
idiv
mov
jbe
fist
dec
inc
sbb
call
fdivrp
fstp
fwait
cmp
dec
pop
imul
je
ret
jle
aaa
mov
inc
mov
push
add
dec
fidiv
jmp
sub
jle
xchg
push
fdivr
adc
ins
add
jb
fs
div
mov
iret
or
sbb
iret
adc
rcl
test
lds
inc
sbb
fdivr
xchg
inc
mov
call
cmp
dec
inc
add
test
sub
inc
dec
jl
cs
pop
rol
adc
ins
dec
ja
jnp
adc
stc
xor
inc
popa
test
inc
pop
xor
das
mov
cwde
mov
outs
fsubr
xchg
hlt
rcl
adc
cmp
push
or
dec
push
mov
push
ds
mov
mov
and
push
sbb
push
cmp
daa
sbb
scas
fwait
push
scas
movs
adc
stc
sbb
mov
mov
sbb
push
inc
in
xor
movs
in
rcl
aaa
fdiv
xor
inc
aad
aam
scas
jne
jno
jle
push
imul
mov
push
dec
ins
and
pop
inc
lds
cmp
inc
dec
sub
cmp
adc
sete
pop
sbb
mov
push
sub
push
mov
and
mov
mov
adc
inc
(bad)
fiadd
pop
sahf
mov
adc
adc
pop
cmova
cmp
arpl
push
inc
loop
sub
pop
inc
sbb
shr
xchg
or
and
in
dec
ins
xor
lods
fbstp
pop
and
xchg
dec
mov
inc
cs
in
mov
xlat
fs
xor
fwait
inc
aaa
scas
pop
jnp
sbb
xor
or
pop
add
add
popf
leave
xchg
(bad)
fs
pop
and
mov
inc
icebp
cmps
js
popf
cmps
fld
sub
dec
mov
sbb
mov
inc
dec
jl
adc
es
jl
mov
jmp
ror
inc
and
sbb
pop
pop
xor
loop
inc
jne
ja
xor
add
add
jmp
inc
test
and
or
mov
stos
pop
pop
inc
add
sub
jae
push
aad
push
test
movs
adc
in
add
mov
inc
add
fstp
ret
movs
push
push
push
add
xor
add
adc
jle
xchg
xor
xor
add
and
xor
and
mov
xor
mov
xor
lods
or
test
push
xchg
xchg
push
ins
loope
push
mov
lock
fist
or
cmps
outs
dec
sbb
or
addr16
int
inc
xor
mov
push
inc
test
sbb
and
fdiv
and
ja
mov
enter
or
cmp
add
jb
loope
or
cmp
mov
lods
cmp
cmp
or
sbb
sub
or
bound
mov
cmp
aas
inc
sbb
mov
push
icebp
in
xor
lock
shl
ror
imul
sbb
jns
clc
add
mov
sub
fsubr
pop
clc
aad
jmp
lahf
pushf
mov
sar
pop
cmps
cmps
je
enter
inc
pop
adc
jmp
les
fistp
pop
lea
sub
dec
mov
data16
inc
adc
dec
sti
out
pop
ret
es
enter
test
inc
jns
mov
es
lods
(bad)
mov
cwde
daa
lods
aaa
inc
enter
sahf
jne
sbb
js
mov
lahf
xchg
jmp
dec
pop
(bad)
daa
mov
or
movs
std
leave
add
and
imul
je
inc
mov
xchg
mov
adc
and
adc
(bad)
cmp
call
call
sub
push
adc
lock
mov
shl
jo
les
test
adc
int3
or
adc
ss
adc
inc
clc
mov
das
push
les
jbe
and
je
jns
mov
ss
call
aaa
ret
sbb
push
dec
cwde
jle
lea
sbb
sub
push
add
xchg
fistp
inc
ins
pop
xchg
jo
enter
xor
sbb
fadd
(bad)
xchg
jp
fisubr
adc
push
adc
dec
mov
xor
retf
jno
stos
cmp
mov
inc
pop
jp
mov
jns
test
pusha
and
cs
repz
jae
popf
adc
jl
aad
loopne
pop
loopne
mov
push
ret
aam
fdivr
test
mov
and
movs
ins
pop
xchg
(bad)
push
mov
mov
mov
ins
jo
cdq
or
nop
je
je
cmps
loope
lds
movs
sbb
js
push
retf
add
sub
or
dec
push
adc
push
je
adc
arpl
scas
push
jge
call
or
sbb
add
jo
xor
arpl
jle
iret
sub
pusha
push
jne
and
mov
into
xchg
dec
dec
sub
addr16
lock
mov
xor
jb
xor
dec
std
in
jbe
dec
push
or
sub
dec
imul
dec
inc
xchg
hlt
in
(bad)
mov
sbb
xor
daa
jno
xlat
adc
in
jns
push
push
xchg
sub
ffreep
ficom
sub
inc
fsub
fwait
sub
repnz
dec
add
mov
mov
popa
mov
iret
mov
mov
cld
fwait
test
(bad)
jl
lea
cmp
mov
and
sbb
jns
add
cmp
call
adc
jmp
and
add
in
pop
and
xor
push
cmp
mov
rcl
or
inc
dec
sbb
outs
iret
sbb
add
call
test
sar
or
das
push
les
cmp
jne
mov
push
mov
movs
jecxz
lock
add
inc
jbe
sub
add
add
sub
adc
jnp
push
test
in
cld
cmp
cwde
out
sbb
jnp
xor
push
or
and
jno
add
popf
pop
jle
cmp
int
dec
test
or
add
hlt
xor
and
or
cmps
or
movs
repnz
in
sbb
hlt
dec
sub
push
sti
mov
jne
mov
mov
inc
jle
(bad)
cmp
inc
dec
jecxz
pushf
fmul
push
inc
pop
and
mov
xchg
ror
mov
cmp
shr
adc
mov
xor
or
out
or
in
mov
sbb
inc
jge
pusha
mov
imul
aas
jno
pop
cld
rcr
fst
xor
mov
in
enter
pop
loope
xchg
dec
xor
or
and
(bad)
aas
inc
add
or
dec
and
das
or
mov
(bad)
rol
pop
sub
mov
sub
loop
ret
test
pop
pop
pop
sub
inc
iret
je
lea
shl
in
cmps
push
ror
pop
outs
xor
aad
dec
or
pusha
or
mov
inc
push
add
cmovne
imul
je
push
leave
aas
mov
js
imul
adc
push
imul
dec
jne
movs
(bad)
dec
and
sbb
mov
aam
or
mov
data16
pop
jbe
outs
add
sbb
and
add
retf
push
pop
cmp
sbb
or
movs
cwde
xor
mov
pop
out
cmp
nop
cmc
add
sbb
xor
into
cdq
cmp
xchg
bound
pop
cmps
push
loopne
add
cld
sub
dec
fwait
div
out
push
aam
adc
mov
gs
xor
cmp
sub
in
scas
rol
or
stc
add
inc
test
adc
in
xor
sbb
dec
int
xchg
mov
daa
shl
fwait
cmp
popf
lea
cwde
mov
jno
out
imul
clc
sub
stos
lods
movs
adc
or
jns
cmps
aad
mov
sub
cmp
and
adc
pusha
add
ror
xchg
xchg
mov
add
test
nop
pop
jne
or
mov
mov
lods
xchg
and
push
call
je
xor
scas
shl
xchg
jns
pushf
xchg
mov
shr
pop
cmp
mov
or
jp
xchg
js
xchg
mov
add
inc
push
add
ins
and
mov
jae
jmp
add
call
jmp
xor
mov
ins
push
loop
add
ret
or
or
imul
add
or
fadd
cmp
shl
push
inc
fisub
and
cmp
cmps
sbb
out
sub
inc
fwait
ret
sbb
sbb
je
xchg
xchg
dec
dec
pop
test
add
loopne
or
addr16
nop
aad
pop
pop
jb
add
adc
fist
lea
inc
dec
or
xor
shl
adc
adc
stc
leave
aad
xor
lea
add
pop
loopne
inc
loopne
push
add
pop
or
dec
iret
jmp
mov
nop
xchg
std
lods
shl
mov
nop
cmps
push
cwde
pushf
pop
mov
scas
cmp
jne
cmp
push
sbb
mov
add
or
push
mov
pop
pop
addr16
movs
popa
pop
pop
pop
jb
sbb
cmp
test
cmp
dec
inc
inc
js
jo
repnz
inc
inc
pop
push
fs
and
inc
popa
jb
add
mov
jo
jae
or
sub
popa
adc
cmp
or
(bad)
clc
push
neg
add
push
add
inc
pusha
outs
cwde
hlt
add
repz
hlt
or
in
cmp
and
xchg
inc
ret
xlat
and
jb
fs
neg
inc
add
scas
xchg
push
(bad)
sahf
retf
ins
xor
dec
push
add
jecxz
dec
mov
dec
or
add
inc
gs
or
mov
push
nop
push
aas
dec
adc
push
push
leave
inc
dec
test
mov
je
mov
shl
pop
or
add
add
sbb
(bad)
cmp
fwait
pop
adc
dec
jne
sub
test
and
pop
adc
dec
xor
test
mov
movs
cmp
xlat
pop
lock
les
lods
daa
dec
mov
test
add
pop
enter
adc
call
push
inc
jno
test
fdivr
xor
jle
push
and
inc
popf
push
jle
inc
mov
add
ss
hlt
sahf
out
in
(bad)
fadd
or
mov
imul
and
ja
sub
call
mov
mov
or
ds
jecxz
mov
or
inc
mov
or
retf
test
jae
mov
xor
(bad)
add
or
aad
test
sbb
ins
int3
dec
and
push
data16
mov
sbb
test
adc
add
sahf
push
push
push
(bad)
out
pusha
fnsave
jno
xlat
pop
cmp
lds
das
loopne
add
int
xchg
pop
or
pop
or
or
popa
jb
jne
gs
jo
push
call
mov
js
movs
push
test
cmp
adc
ss
pusha
pop
dec
in
pusha
and
push
andps
add
jg
ror
add
dec
adc
sub
sbb
cmp
pop
sub
mov
faddp
les
pop
es
cwde
test
sbb
lds
adc
and
sbb
enter
test
movs
lock
cmp
bound
movs
sbb
add
xchg
pop
pop
pop
adc
lods
sbb
ss
outs
sti
jb
cwde
pop
and
mov
and
bound
fst
mov
add
dec
sub
dec
inc
mov
push
dec
ss
test
sub
xor
mov
dec
js
nop
pusha
xor
jno
ret
mov
popa
pusha
out
or
adc
add
cmp
xchg
xchg
scas
imul
stos
mov
ret
jae
int3
pop
lods
and
push
hlt
cmp
push
int3
pop
push
sbb
jl
pop
push
popa
fs
sbb
nop
daa
pop
inc
xchg
cmp
jl
add
adc
dec
mov
sub
nop
call
ds
sbb
jae
push
add
mov
outs
fcmovbe
pop
push
out
sub
pop
pop
sub
js
cmp
xchg
adc
pop
pop
pop
inc
mov
xchg
sbb
cli
jmp
test
xor
(bad)
pop
dec
mov
add
or
rcl
mov
in
psrad
mov
pusha
scas
or
xor
push
ja
pop
dec
dec
dec
dec
outs
andps
test
sbb
(bad)
fld
outs
paddsw
in
call
out
out
and
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
fsub
pushw
fs
repz
inc
test
imul
push
mov
fsubr
outs
repz
ss
iret
les
xor
sub
nop
dec
cmp
sti
sbb
shl
jecxz
je
pop
imul
pop
test
xor
call
mov
sub
imul
bound
out
push
cmp
repnz
pop
daa
add
adc
dec
jo
add
scas
movs
int3
pop
rcl
xor
xchg
adc
aas
xchg
mov
inc
hlt
jmp
or
test
sbb
nop
dec
push
or
ja
call
cmc
jle
xor
rol
sbb
jnp
dec
adc
mov
add
jbe
sub
sbb
push
or
enter
iret
or
inc
test
mov
jecxz
sbb
adc
jae
pop
(bad)
dec
or
or
or
aas
push
out
movs
and
pop
pusha
sbb
cmp
call
mov
mov
cmp
push
cdq
mov
sub
test
mov
inc
lods
dec
ror
jno
cmps
clc
mov
ret
(bad)
fwait
add
or
js
jmp
mov
sbb
inc
movs
mov
in
fist
add
fs
cmps
punpckhwd
or
and
or
xor
cmp
xlat
or
mov
xchg
push
cmp
mov
int3
data16
lds
into
fwait
push
cmp
xchg
sub
sub
ret
test
ds
inc
or
push
clc
dec
test
inc
sbb
jl
mov
mov
shl
push
test
outs
or
sahf
dec
loopne
jge
loop
and
or
push
xchg
aad
and
cmp
and
inc
test
int
cdq
or
fisubr
rol
and
ret
add
repnz
imul
rcl
cdq
sub
jle
and
xchg
sbb
pop
pop
rcr
add
je
(bad)
xor
cs
gs
sbb
sub
jp
pop
and
mov
das
ins
mov
ror
add
pop
sub
jb
test
mov
push
pop
pop
lock
sbb
add
retf
sbb
shl
and
push
ins
cs
push
in
push
daa
sbb
cmp
mov
xor
cld
push
lea
jo
cmp
ficomp
sbb
adc
lods
fcmovnbe
jbe
cmp
jp
jnp
dec
ret
imul
xor
shr
rcl
mov
push
mov
mov
inc
sbb
ins
cmp
xchg
pop
xor
addr16
push
adc
cmps
mov
(bad)
pop
es
sub
adc
xor
fsubr
shl
sbb
pop
lods
adc
sub
aad
icebp
in
and
xchg
add
xchg
xor
sub
and
data16
add
dec
adc
cmp
aam
test
add
mov
pop
sub
mov
aas
das
and
add
xchg
mov
and
rol
jo
or
lahf
movaps
xlat
mov
jb
adc
xchg
adc
jo
or
xor
and
adc
cmps
data16
adc
add
lods
cmc
push
adc
sbb
mov
add
pop
and
push
icebp
dec
rol
mov
push
cmp
mov
push
fisttp
push
leave
arpl
push
cs
cmp
inc
and
add
dec
and
cmp
xlat
and
dec
push
das
inc
adc
dec
push
jg
adc
hlt
dec
mov
hlt
aam
mov
add
ss
jmp
xor
or
and
dec
pusha
or
cmps
movs
cmp
cmp
mov
xor
and
jo
push
repnz
nop
pop
cdq
dec
xchg
cmps
outs
jo
mov
and
in
add
add
popf
ja
sub
dec
or
pavgb
xchg
sar
add
and
adc
outs
jnp
das
fstp
sbb
mov
or
cld
dec
inc
cmp
and
idiv
arpl
jp
repnz
jp
xor
add
hlt
nop
movs
add
loop
or
mov
sbb
popa
shl
inc
jo
bound
mov
int3
mov
dec
sub
sub
(bad)
pushf
sbb
ds
xor
rcl
cmp
(bad)
imul
ret
cld
cmps
scas
loope
lods
xchg
xor
push
inc
inc
dec
call
mov
or
int3
add
jo
push
cld
adc
or
and
in
repnz
jecxz
pusha
cld
cld
or
dec
or
scas
and
outs
push
cwde
jl
add
pusha
shr
mov
cmps
xor
inc
xchg
xor
mov
push
data16
hlt
pop
or
iret
jmp
dec
add
stos
mov
sbb
jl
pop
adc
xor
outs
jae
lds
inc
je
inc
or
dec
pop
jmp
xchg
push
das
mov
bound
stc
xchg
cmp
or
xchg
jg
cmp
sahf
neg
push
xor
push
push
mov
out
jns
inc
push
(bad)
jbe
push
stc
and
lea
sbb
je
(bad)
pop
fsubr
sbb
rol
mov
inc
push
test
pop
xchg
imul
cmp
mov
mov
es
scas
add
imul
test
xchg
in
fdiv
jns
jno
jmp
dec
jmp
xchg
outs
xor
call
mov
dec
inc
jg
pop
lods
imul
call
inc
xchg
mov
stc
sete
in
dec
adc
inc
and
adc
aam
enter
inc
call
mov
pop
cs
adc
retf
in
mov
mov
mov
test
scas
add
xlat
inc
jge
xor
lea
lock
lock
or
adc
xchg
imul
dec
inc
enter
pop
jne
je
cmp
sub
pusha
pusha
imul
push
adc
dec
pop
or
mov
xacquire
ja
push
pop
lds
or
inc
or
in
jns
adc
adc
pop
push
sbb
cmp
push
cmp
mov
inc
xchg
sbb
in
lea
and
ins
pop
call
mov
jp
sbb
push
add
xchg
ret
inc
cmp
ret
inc
add
xor
xor
sub
fs
mov
imul
bound
in
mov
mov
dec
in
repnz
dec
pop
nop
cmp
mov
leave
gs
mov
and
retf
movs
repnz
pop
push
inc
pop
pushf
pop
cs
dec
pop
dec
pop
inc
sbb
xchg
dec
push
out
xlat
popa
jecxz
jle
repnz
push
inc
cmp
ror
dec
add
jl
and
mov
adc
jmp
ins
cmp
out
adc
inc
sub
push
sbb
push
leave
mov
in
jecxz
sbb
ret
mov
jne
call
ins
cld
(bad)
jge
dec
pop
inc
hlt
add
push
in
mov
sar
test
adc
pop
add
add
push
dec
inc
cld
call
(bad)
pop
pop
mov
ins
cmp
sub
add
or
xchg
push
push
es
arpl
jmp
mov
cmp
or
gs
lods
test
sbb
mov
mov
push
push
inc
mov
push
adc
and
fisubr
nop
pop
(bad)
dec
mov
shl
push
jno
mov
nop
popa
outs
es
pop
in
jo
or
mov
loop
mov
adc
arpl
mov
push
aaa
scas
ret
mov
retf
cmp
adc
cs
mov
retf
rcl
fidivr
out
loop
pop
(bad)
jmp
arpl
in
cmp
(bad)
mov
or
pop
arpl
push
jo
cwde
cmp
cmps
jmp
fstp
or
loopne
jo
repz
loopne
jne
add
fild
fld
in
movs
xchg
xchg
jg
mov
jle
test
(bad)
std
movs
add
and
push
sub
mov
xor
in
leave
jmp
mov
pop
cmc
mov
cmp
in
add
add
adc
jno
inc
cmps
(bad)
sahf
inc
and
cwde
pop
mov
cmp
outs
retf
ficom
push
test
mov
mov
call
dec
sub
adc
add
add
imul
jb
jg
xor
test
inc
push
mov
xor
push
pminub
daa
jo
cs
in
js
cmp
mov
add
(bad)
fidiv
fidivr
aas
or
(bad)
pop
nop
push
xor
pop
imul
imul
xor
push
popf
(bad)
dec
inc
xchg
popa
pop
jne
shl
push
hlt
dec
or
jg
cwde
dec
cwde
leave
mov
lea
inc
add
inc
inc
clc
sbb
dec
sub
pusha
and
xor
popa
or
push
push
push
repnz
xlat
sub
(bad)
mov
sbb
add
sahf
push
mov
dec
ins
pop
cmp
test
pop
or
sub
push
jb
mov
enter
mov
imul
retf
push
xor
inc
inc
jle
popa
mov
daa
inc
add
in
mov
xor
inc
xlat
inc
rol
jnp
jb
and
cmp
clc
ss
and
cmp
add
inc
rol
push
movs
repnz
cli
push
mov
(bad)
mov
dec
std
inc
call
mov
sub
inc
push
mov
mov
int
fldcw
shl
ins
push
or
test
mov
fwait
inc
and
aad
dec
and
push
or
or
loope
ds
mov
or
adc
mov
pop
jo
mov
mov
jmp
or
mul
sbb
loopne
dec
shr
and
push
lods
dec
popa
push
imul
xor
add
outs
je
sbb
in
cmp
pop
add
inc
jne
in
sbb
xchg
aaa
xor
add
inc
fld
cmp
inc
sar
jmp
pusha
and
pushf
(bad)
ds
pop
ret
nop
movs
outs
add
pusha
movs
rcr
pop
push
and
adc
add
sub
cs
push
pop
sti
in
push
adc
add
adc
mov
mov
or
popa
ja
sar
test
and
fadd
jle
dec
repz
stos
sbb
xchg
push
fisttp
add
in
adc
add
lock
mov
loop
mov
jno
add
add
ja
lods
xor
xchg
mov
inc
es
call
and
js
inc
sbb
adc
and
xor
pushf
xor
fs
shl
lods
inc
mov
call
push
movs
js
fs
push
cld
popa
adc
jbe
push
lds
mov
pop
xchg
add
fst
mov
(bad)
nop
add
nop
pushf
mov
adc
test
push
lods
dec
and
fsub
xor
fcomp
mov
mov
rol
adc
call
aam
fsub
repnz
or
add
bound
inc
mov
mov
adc
mov
adc
shl
rol
xchg
(bad)
xchg
(bad)
fiadd
push
dec
dec
mov
inc
scas
mov
adc
and
outs
les
and
mov
dec
add
add
sub
shl
inc
xchg
xchg
add
das
push
dec
rcr
dec
add
cmp
mov
pop
inc
mov
push
push
aaa
or
ins
add
cmp
add
mov
jo
repnz
(bad)
dec
xchg
mov
push
mov
xchg
cwde
rcl
sub
sub
jns
fmul
data16
or
fsubr
ins
pop
add
xor
inc
dec
sub
jo
add
pop
shld
cmp
cmp
add
in
push
cmp
data16
adc
mov
adc
jle
es
lea
add
adc
push
or
and
in
add
add
mov
cmp
imul
pop
dec
push
cwde
or
pop
les
mov
mov
clc
loopne
stc
jae
or
add
pushf
push
aas
adc
pop
popf
xor
pop
ret
sbb
and
add
xchg
push
and
dec
fmul
cwde
or
mov
xor
mov
outs
pop
push
jbe
push
cmp
jle
addr16
mov
or
jbe
xchg
or
inc
gs
fisttp
adc
aas
pop
xchg
mov
pop
cld
and
rcr
retf
lea
cwde
mov
xchg
pusha
iret
push
mov
push
inc
dec
imul
jo
adc
movs
mov
test
adc
sbb
xor
jge
or
pop
in
ror
inc
inc
fdiv
xor
ret
inc
pop
fadd
xor
mov
rol
fdivr
fidivr
into
inc
jmp
ss
push
or
pushf
gs
les
add
test
mov
add
das
das
mov
pop
rcr
imul
sub
sbb
mov
rcr
sbb
add
and
add
push
xlat
add
cld
or
shl
cwde
test
push
nop
aaa
hlt
and
add
fdivrp
pop
sbb
mov
mov
cmp
push
dec
frstor
or
pop
imul
xchg
in
call
lahf
aas
and
mov
ret
inc
add
xor
mov
lock
add
mov
fistp
rcl
push
mov
imul
scas
out
nop
mov
jo
mov
jne
(bad)
dec
inc
repnz
or
adc
pop
and
pop
test
inc
dec
call
cmp
test
push
mov
data16
add
ret
add
cmp
adc
inc
lock
mov
cmp
xchg
fdivp
call
mov
shr
cmp
fisttp
lods
pop
mov
mov
jecxz
in
or
pushf
cmp
mov
mov
lock
mov
add
lods
or
add
into
enter
push
cmc
cmp
add
xor
add
les
sub
lods
jecxz
sbb
lods
and
push
pop
mov
inc
or
(bad)
ins
not
jmp
jae
jmp
or
idiv
dec
mov
add
jmp
pop
jmp
sub
movs
(bad)
cli
push
or
mov
imul
lock
inc
fldcw
or
xchg
in
dec
and
shl
les
pusha
xor
scas
lods
repnz
stos
int
and
sbb
shl
cmp
or
push
ds
mov
sub
and
add
and
add
dec
sub
push
adc
in
das
or
sub
pusha
loopne
adc
cmp
xchg
add
pop
push
push
jno
push
shl
lods
(bad)
in
and
test
add
sub
jne
nop
(bad)
ins
add
adc
loope
xchg
xor
ret
data16
call
ret
mov
xor
pusha
push
movs
inc
loop
scas
pop
jb
hlt
cmps
sbb
inc
add
inc
and
rcl
cs
push
int3
push
loopne
jl
push
xchg
test
outs
pop
xor
mov
mov
push
inc
xor
xchg
xor
enter
jo
cdq
mov
cli
daa
sar
and
sub
imul
sub
adc
push
mov
movs
aam
jo
push
hlt
sub
sub
mov
xor
and
or
mov
sbb
xor
push
sub
adc
pop
sub
clc
test
dec
fs
add
xor
jmp
push
cmps
mov
cmp
pop
pop
dec
inc
and
jbe
sub
add
xchg
jmp
adc
loopne
mov
test
dec
inc
adc
sahf
sbb
push
sbb
jne
mov
repnz
push
fadd
nop
dec
mov
or
loopne
cmps
inc
jge
pushf
sbb
hlt
sub
enter
lods
mov
and
sbb
sub
pop
clc
and
dec
imul
inc
ds
pusha
jg
dec
movs
lods
ins
jno
jp
add
in
ds
sub
mov
sbb
cmp
out
loope
sbb
jbe
adc
add
cmp
js
pop
and
xchg
inc
mov
add
or
pop
scas
lods
dec
adc
xchg
lea
jle
sub
test
adc
sar
outs
jge
fst
adc
cmp
loope
out
es
cmp
adc
inc
adc
sub
cs
push
lds
or
mov
push
pushf
lea
push
test
xchg
loope
mov
fadd
not
(bad)
mov
push
pop
pop
les
adc
add
in
mov
jno
xchg
adc
xchg
test
add
shl
cwde
inc
dec
sbb
sub
lock
dec
push
test
je
push
les
or
jmp
test
nop
(bad)
push
hlt
mov
dec
push
mov
les
xchg
push
mov
xchg
ret
adc
dec
ins
add
call
dec
sub
jo
clc
or
pusha
repz
iret
jmp
mov
add
lods
mov
test
fs
ins
nop
xor
aaa
add
sub
cmp
jo
fwait
push
sub
pop
sbb
mul
lods
ret
xor
xchg
ficomp
call
out
push
add
xchg
outs
repnz
arpl
push
add
cs
pusha
sbb
dec
sahf
inc
test
inc
test
jl
out
in
cmp
cmp
inc
mov
in
stc
mov
in
pop
sub
xchg
xchg
out
sub
pop
and
xlat
or
mov
add
add
pop
or
dec
pop
scas
or
bswap
sub
adc
push
mov
xor
loopne
xchg
sbb
pmulhuw
(bad)
je
fs
nop
das
clc
sub
xor
mov
pop
cs
add
push
and
leave
cmp
mov
ss
push
xor
xchg
cmp
cmp
or
adc
xor
dec
pop
adc
adc
sub
stos
add
das
outs
call
push
jl
cmp
jg
sub
ja
sbb
inc
pusha
icebp
mov
inc
push
imul
mov
es
push
cdq
(bad)
imul
rcl
dec
in
in
lock
test
ins
and
enter
enter
sahf
sbb
popf
int3
je
cmp
adc
sbb
aam
aam
enter
fadd
sbb
movs
fdiv
(bad)
fs
push
sahf
pushf
fcomp
loopne
movs
push
sbb
loopne
in
in
inc
fcomp
fld
push
or
cmovbe
jl
xor
inc
inc
push
dec
or
pusha
test
adc
cmp
or
push
shl
push
test
rcr
fisubr
inc
dec
add
addr16
mov
sbb
pop
push
add
mov
dec
pop
dec
jae
or
push
cmps
xchg
inc
into
and
sar
repnz
push
or
(bad)
out
sub
add
push
pop
cld
les
ror
add
loope
adc
faddp
cmp
sbb
jne
sub
push
adc
je
or
and
shr
imul
jae
xchg
mov
dec
mov
or
pop
jmp
and
pop
xor
or
adc
clc
xor
int
xchg
scas
adc
dec
cmp
xor
dec
pusha
adc
add
xor
add
aas
and
lock
inc
push
and
sbb
push
mov
sub
mov
(bad)
ins
mov
or
mov
add
je
mov
dec
or
mov
stos
mov
push
ins
outs
jl
(bad)
sub
xor
or
scas
lds
jo
sbb
cmp
add
mov
push
push
jle
pop
sbb
fmul
enter
call
fmul
or
rol
xor
lea
inc
or
pusha
xchg
mov
movs
or
fsubr
ja
mov
adc
popa
js
xchg
and
aaa
in
sub
push
jl
mov
dec
out
mov
and
xor
push
add
es
test
mov
pop
enter
push
pop
cmps
or
inc
mov
add
xor
adc
int3
push
and
mov
ror
cdq
ss
xor
xlat
pop
xor
xor
adc
test
dec
pandn
nop
or
jl
pusha
dec
sar
adc
jno
bound
or
or
push
in
dec
or
cmp
jo
adc
add
rcr
or
call
imul
ins
mov
outs
mov
call
push
and
and
or
mov
xchg
inc
dec
movs
sbb
out
mov
das
mov
popa
mov
iret
les
xor
mov
(bad)
imul
pop
add
hlt
dec
rcr
push
mov
or
mov
or
and
div
sbb
mov
cmp
push
or
pop
jo
or
or
sub
mov
shl
jo
or
ret
cmp
in
mov
sbb
and
into
or
adc
mov
aas
fsubr
and
or
add
aaa
or
rol
jo
mov
cmp
adc
mov
and
and
outs
gs
loopne
or
jge
dec
les
or
leave
mov
xchg
lods
jo
xor
imul
inc
sbb
or
outs
sti
sbb
ins
mov
push
jb
ins
popa
jb
or
or
faddp
cdq
sti
aas
sbb
outs
ds
mov
les
xor
xor
mov
inc
add
rcl
(bad)
dec
and
stc
sub
stos
inc
or
nop
arpl
dec
imul
or
cmps
adc
mov
pop
mov
or
add
push
rcr
cmps
sub
shl
dec
in
pushf
adc
jo
xchg
ret
sbb
inc
dec
(bad)
lock
leave
mov
nop
loopne
mov
out
and
cmps
jo
not
outs
mov
clc
add
or
adc
fsub
test
jbe
jmp
outs
add
add
dec
rcl
add
pop
pop
add
popa
shl
push
leave
or
or
hlt
loopne
xchg
pushf
or
je
iret
push
out
lods
ins
dec
or
or
js
arpl
cwde
jo
dec
or
dec
cmp
sbb
test
mov
and
ss
jl
xchg
adc
jp
pop
and
and
inc
cs
push
push
mov
mov
sub
adc
inc
inc
pusha
ins
aaa
bound
inc
inc
arpl
nop
mov
adc
push
add
sbb
sbb
sbb
inc
xor
aas
push
add
bound
add
sub
(bad)
or
mov
mov
cmps
push
xor
pop
call
outs
lods
mov
(bad)
pop
add
mov
and
push
sar
mov
add
add
adc
mov
add
jp
mov
(bad)
push
adc
adc
out
add
adc
push
cmp
sbb
cmp
mov
mov
mov
pop
or
add
mov
mov
mov
mov
(bad)
jmp
test
or
inc
mov
mov
mov
jmp
inc
scas
jmp
jmp
jmp
sti
jg
hlt
call
(bad)
stc
pop
into
dec
(bad)
std
jmp
mov
repz
or
push
nop
xor
aam
or
mov
jl
out
sar
hlt
cld
jo
cmps
stc
out
sar
movs
nop
sub
lock
xor
dec
adc
pushf
and
int3
adc
and
call
fist
push
push
add
xor
imul
push
inc
add
out
iret
repz
in
movs
pop
clc
push
xor
cmp
sti
into
pop
sbb
fimul
push
fistp
shr
push
jl
aam
ret
div
push
adc
cwde
dec
loop
sub
imul
lods
in
push
fs
in
jnp
add
pop
inc
pop
or
or
rol
pusha
popf
dec
outs
dec
pop
and
test
sub
add
sbb
aam
inc
test
add
adc
and
add
stc
adc
inc
xchg
das
adc
add
movs
bound
xchg
sub
jecxz
test
cmp
js
push
cli
hlt
cwde
outs
add
inc
push
out
cmp
imul
adc
cmps
add
cs
mov
inc
ins
or
xchg
cld
pop
repnz
call
add
push
mov
ins
jne
cmps
sbb
test
popf
mov
or
sbb
cmp
jno
loope
in
xor
mov
loope
cwde
mov
es
mov
pusha
jecxz
test
sbb
add
(bad)
mov
dec
or
int
push
nop
(bad)
aam
pop
test
cmp
rol
in
add
add
sub
jbe
ret
clc
mov
jo
js
or
pop
repnz
pop
and
pusha
pop
and
sar
jnp
xchg
pop
push
pop
and
adc
rcr
and
push
sbb
shl
pop
mov
fidiv
mov
sub
xor
sub
pop
int3
adc
sbb
sub
ja
cs
or
and
cmp
push
and
cmp
or
je
fs
push
out
xor
jo
into
jecxz
dec
push
scas
jecxz
lods
sahf
shl
mov
fwait
inc
lods
xor
repz
movs
pop
and
jge
lahf
push
inc
enter
cwde
or
inc
out
xor
das
test
test
jecxz
(bad)
loope
push
inc
push
ja
add
fsub
enter
retf
ja
shr
pop
lea
fcmovnu
pop
aaa
ins
lea
aam
mov
cmp
fwait
loopne
jo
add
cmp
loopne
call
dec
cmp
js
mov
mov
push
add
or
aad
sbb
call
mov
test
push
sti
add
inc
call
imul
and
ds
sbb
or
fimul
xchg
mov
mov
mov
dec
nop
cmps
ret
xlat
sub
aas
fs
push
shr
cdq
mov
push
ds
sbb
add
mov
inc
sub
cmp
and
push
out
cmp
add
mov
inc
std
enter
iret
inc
dec
js
mov
pop
add
pop
rol
shl
adc
lods
push
pop
pop
enter
dec
test
pop
fmul
fmul
out
ret
or
(bad)
dec
aas
or
add
pop
push
out
test
dec
sub
add
push
add
or
jns
cwde
inc
call
arpl
xor
and
add
dec
dec
cmps
movs
dec
or
push
add
test
sub
jmp
aas
(bad)
cs
push
pop
inc
push
or
lock
push
inc
popa
movs
leave
add
add
and
out
push
push
leave
push
xor
out
push
push
jb
and
stc
push
test
push
jo
repz
add
out
call
clc
pop
inc
int3
cmp
push
out
pop
popa
pop
ins
and
das
test
push
out
pop
test
or
push
out
pop
test
or
pusha
or
cmp
popa
dec
call
xchg
pusha
inc
loopne
arpl
sahf
mov
sub
dec
sbb
rcr
push
push
add
gs
adc
pop
pop
push
add
sahf
test
push
xchg
and
out
or
fmul
or
mov
xor
pop
repnz
in
dec
ret
cmp
int
mul
inc
dec
movs
outs
pushf
cmps
pop
inc
xor
mov
add
cs
aam
inc
(bad)
jg
or
or
(bad)
(bad)
mov
imul
cld
xor
mov
out
cmp
shr
sub
mov
and
inc
xor
inc
push
jns
inc
adc
or
and
adc
cmps
jbe
adc
or
mov
push
hlt
out
push
lods
inc
sahf
mov
(bad)
xchg
xor
jno
xchg
pop
sub
inc
add
push
inc
pop
sub
mov
daa
pop
sbb
xor
push
nop
shr
(bad)
or
dec
addr16
or
add
fist
cmp
inc
dec
mov
dec
ret
fistp
adc
pop
shr
test
cmp
in
mov
inc
xchg
mov
or
mov
fs
cmp
sbb
dec
push
jmp
test
cmp
push
add
out
nop
lahf
pop
sub
loop
push
inc
inc
dec
xchg
dec
cmp
hlt
es
sbb
mov
enter
js
out
add
sub
pusha
repnz
mov
mov
cmp
not
adc
jne
or
inc
jp
je
and
addr16
inc
mov
push
sub
and
inc
out
mov
and
or
and
shl
and
xchg
inc
mov
pop
push
sahf
out
and
adc
fnstenv
add
pop
cmp
addr16
push
in
and
adc
push
push
das
jmp
imul
lahf
push
sti
jmp
xor
add
mov
cmp
or
jmp
mov
les
pop
daa
adc
in
test
in
mov
les
pop
pop
les
mov
sbb
add
nop
xor
push
mov
(bad)
sbb
(bad)
adc
and
and
xorps
shl
and
xchg
cmp
or
test
arpl
hlt
cmps
fstp
imul
hlt
mov
mov
in
stos
sbb
out
stos
sbb
mov
add
mov
lock
cmp
xchg
inc
cld
mov
sub
pop
outs
cmc
xchg
mov
js
and
add
or
sub
mov
lods
xchg
adc
aaa
call
loopne
xor
mov
aam
xchg
and
cmp
jnp
ss
pop
iret
aaa
fsubr
je
or
jne
mov
adc
and
push
popa
sbb
or
adc
lods
dec
inc
mov
mov
je
jp
dec
sbb
hlt
mov
cdq
mov
xor
cmp
scas
mov
retf
sbb
dec
push
adc
dec
push
xchg
mov
sbb
mov
and
(bad)
fld
jmp
mov
fdivr
and
mov
stc
push
add
mov
sbb
cmp
sbb
out
mov
jmp
sbb
cld
lods
xchg
mov
and
add
lock
shl
and
jne
adc
adc
pushf
fist
(bad)
lds
je
jb
mov
sbb
jae
add
ins
add
push
loopne
fild
push
push
int3
jl
dec
add
sub
add
into
inc
add
aaa
add
loopne
movs
scas
mov
retf
jae
or
or
loopne
pop
sahf
or
adc
and
lea
popf
push
add
jge
in
and
cwde
mov
aaa
das
xor
sub
movs
mov
or
adc
cdq
outs
sub
sbb
movs
fmul
inc
nop
lods
push
repz
pop
sbb
inc
cmp
pop
dec
and
fwait
scas
inc
pop
in
imul
cmp
sbb
xchg
inc
push
mov
cwde
loop
je
test
pusha
(bad)
lahf
ins
ins
mov
lahf
mov
pop
hlt
or
pop
lds
jb
in
add
adc
mov
test
or
mov
mov
stos
and
pop
mov
cli
sbb
push
jb
or
xor
rcl
sbb
inc
and
or
add
or
pop
or
add
inc
add
into
inc
pop
xor
jnp
sbb
xchg
mov
inc
pop
imul
adc
mov
cmp
test
pop
test
dec
ret
dec
sbb
imul
inc
add
push
mov
push
dec
enter
add
adc
mov
mov
mov
adc
xchg
pop
mov
sub
push
jp
add
jmp
cs
add
loop
mov
inc
popa
mov
mov
repz
xor
clc
add
add
and
jp
cmp
jl
ret
jo
inc
cld
inc
inc
add
clc
ret
add
dec
fist
retf
in
inc
fcmovbe
add
and
inc
dec
je
and
daa
cwde
push
ret
out
or
pushf
repz
add
dec
adc
test
xchg
sub
cmc
hlt
add
pop
fst
pop
cmp
inc
mul
test
pop
in
aas
or
jmp
sub
dec
add
cmp
push
mov
inc
int3
clc
fwait
pushf
cmp
fs
inc
pop
aaa
fdivr
adc
inc
push
js
jmp
lmsw
fild
lock
lahf
mov
mov
xchg
outs
fadd
aad
aaa
pop
scas
sub
sti
pusha
adc
adc
fisubr
loope
shl
mov
mov
cmp
outs
jmp
pop
hlt
neg
jmp
arpl
je
cmp
inc
jmp
dec
cli
inc
cs
add
ret
push
mov
mov
test
lock
int
pop
stos
ins
jb
add
jp
jmp
jns
and
das
inc
nop
hlt
fwait
sbb
sbb
ror
call
int3
adc
push
cmp
clc
sbb
aas
mov
ror
je
jo
mov
shl
rol
adc
bound
iret
mov
hlt
test
out
int
cmps
aaa
add
pop
shl
jmp
or
sbb
nop
lods
jmp
aam
add
sub
xchg
in
mov
xor
(bad)
inc
xchg
loope
stc
jmp
inc
inc
or
ins
cmps
popf
add
sti
adc
mov
cs
jmp
xor
ret
or
in
clc
add
sbb
jg
(bad)
sub
cmp
and
jge
sbb
sbb
shr
push
add
mov
out
sub
retf
std
popa
inc
(bad)
push
sti
test
aaa
and
dec
xor
pop
push
add
inc
aaa
pop
mov
lock
mov
fld
sub
inc
shl
or
add
rcl
push
jmp
pop
ja
jns
out
cmp
push
push
mov
dec
ins
inc
jbe
out
aad
cdq
cmp
lods
sub
rcl
aaa
add
and
sti
add
inc
sbb
mov
cmp
push
adc
(bad)
mov
jbe
out
fs
push
push
and
lods
jmp
jno
and
xor
sbb
sti
gs
adc
xchg
add
mov
push
and
xor
add
pusha
lds
mov
gs
ror
xor
push
add
sahf
and
push
sub
inc
or
dec
mov
inc
cmps
cmps
push
add
mov
ret
jge
jnp
cld
cmp
fcomp
push
push
mov
pop
fisttp
push
dec
sar
loopne
push
jo
adc
dec
outs
xchg
add
test
ins
call
pop
das
leave
or
push
test
sbb
(bad)
enter
cwde
inc
mov
ficomp
pop
nop
push
dec
sbb
push
xor
out
add
mov
mov
(bad)
(bad)
push
xchg
mov
jp
push
adc
cmp
nop
xor
out
data16
xor
sti
xchg
xor
xor
js
xor
mov
leave
(bad)
pop
pop
hlt
adc
or
fnstenv
out
mov
loope
xor
inc
fs
jo
int
loopne
mov
jbe
sbb
mov
inc
add
or
push
pop
jb
inc
xor
shl
rol
test
jb
and
jmp
pushf
xor
xor
xchg
cmp
jb
adc
xor
mov
or
push
sub
and
jae
pop
cmp
mov
inc
xlat
div
and
sbb
fist
stos
call
cmp
(bad)
es
hlt
push
jbe
or
mov
mov
pop
stos
push
add
sbb
ins
fidiv
pushw
or
or
adc
jmp
or
inc
and
inc
or
jmp
push
mov
retf
test
mov
outs
sub
xchg
fcomp
mov
scas
test
ret
add
mov
test
in
cld
mov
adc
jge
inc
add
add
add
mov
mov
xchg
scas
push
add
mov
inc
(bad)
and
sbb
pop
js
iret
pusha
add
mov
sbb
gs
pop
jl
arpl
(bad)
pop
adc
pop
iret
jne
dec
and
test
push
or
inc
xchg
inc
cmp
scas
stos
das
xchg
shl
pop
sti
pop
(bad)
inc
neg
cmps
fidiv
in
adc
sub
xchg
je
add
gs
in
je
outs
lock
push
mov
hlt
sub
out
aas
mov
mov
cmp
xlat
out
ds
stc
cvttps2pi
(bad)
or
popa
mov
enter
pop
aaa
daa
mov
dec
ss
sar
fs
test
dec
and
stos
add
adc
or
mov
mov
pop
cmp
push
push
nop
loope
and
xchg
fs
lock
les
or
inc
xor
inc
iret
ss
sub
mov
cmp
ins
adc
movs
xor
pop
aaa
test
sbb
seto
mov
sbb
pusha
popa
pop
iret
pusha
add
xchg
jl
adc
bound
test
fwait
adc
or
mov
mov
mov
icebp
jbe
loope
xor
add
stos
in
inc
or
sti
pop
mov
pop
dec
outs
lods
sbb
xchg
xchg
mov
sar
jo
add
push
rol
cwde
lock
or
dec
jb
in
mov
cmp
loopne
mov
xchg
loope
jno
shl
sub
adc
xchg
loope
inc
or
sbb
cmp
dec
or
popf
dec
data16
xchg
cmp
adc
adc
push
lea
push
mov
xlat
sbb
test
icebp
pop
js
dec
enter
mov
in
cmp
jge
pop
mul
mov
or
pop
mov
fstp
jle
cmps
(bad)
dec
ja
xor
mov
mov
inc
xchg
cmp
imul
or
sbb
ins
scas
add
fistp
jnp
enter
jns
mov
fidivr
adc
out
lods
nop
mov
js
sub
or
stos
inc
fcomp
adc
dec
cmp
ds
sub
mov
icebp
mov
add
sbb
pop
scas
in
gs
inc
xor
js
mov
leave
push
add
jmp
dec
adc
mov
data16
add
frstor
or
mov
mov
repnz
jo
cmc
sub
ret
dec
jb
inc
rol
popa
jp
xor
popa
jl
psraw
or
fwait
or
sub
in
mov
popa
jns
or
in
push
push
outs
hlt
icebp
jmp
ret
inc
fs
xchg
pop
fs
mov
xlat
aas
imul
cmp
ret
lock
lock
clc
cli
push
shl
mov
fisub
cmp
sahf
into
inc
mov
jae
add
and
xor
pushf
mov
es
imul
sub
fst
xor
mov
add
inc
loopne
test
std
push
add
mov
fcmovb
sub
push
add
sbb
mov
fsub
scas
adc
ret
ret
xor
sub
out
mov
or
add
arpl
cli
pop
pop
pop
leave
push
int
cld
mov
mov
(bad)
das
add
ficomp
mov
add
cmp
pop
mov
xchg
jg
retf
lahf
fadd
cmp
jge
adc
or
pop
rsqrtps
xor
push
mov
scas
xchg
xor
call
cmp
(bad)
jmp
fisttp
arpl
mov
pop
sbb
imul
sbb
inc
or
cmc
sbb
lea
mov
fs
jmp
out
mov
cli
stc
jne
mov
xor
adc
mov
pop
movs
xlat
mov
aaa
jne
sub
arpl
add
shl
cwde
xor
mov
push
daa
or
inc
(bad)
das
cmp
sub
adc
mov
mov
(bad)
retf
jae
jecxz
add
aaa
test
jg
mov
sbb
cmp
mov
fisubr
sbb
add
loop
mov
mov
nop
inc
push
ins
int3
dec
mov
cs
call
add
adc
outs
test
xor
dec
mov
test
pop
adc
test
retf
adc
cdq
lock
sbb
inc
int3
mov
pop
adc
fcom
mov
inc
ret
data16
stos
lock
xchg
or
mov
mov
fs
fldcw
or
pop
xlat
pop
into
cmp
sar
cmp
or
popf
push
(bad)
(bad)
xchg
or
push
shl
and
enter
test
outs
icebp
fsubr
ins
retf
inc
mov
or
addr16
sub
(bad)
nop
imul
cmp
sub
xor
inc
mov
xchg
add
bound
or
fimul
loope
sbb
mov
push
cmp
frstor
sti
dec
dec
push
cmp
fxch
pop
xchg
push
and
xchg
jecxz
and
push
pop
popa
sub
mov
push
adc
sub
add
retf
sub
imul
inc
enter
push
retf
and
push
mov
mov
jo
mov
jnp
xor
xchg
mov
test
test
mov
ror
jecxz
aas
lods
dec
cmp
pop
mov
(bad)
xchg
xor
popa
sahf
in
mov
xor
cli
outs
aam
jecxz
sbb
aaa
pop
xlat
inc
mov
and
inc
sub
ror
lods
dec
and
adc
mov
sub
inc
mov
out
jle
adc
dec
and
add
jg
sub
xchg
add
mov
shl
sub
lods
nop
xchg
int
xor
ins
cmp
(bad)
mov
(bad)
fsub
mov
mov
and
dec
pop
dec
adc
push
inc
mov
adc
dec
add
adc
int3
add
jl
loopne
in
(bad)
xchg
gs
js
mov
push
mov
es
into
sub
ins
mov
rol
fisttp
jl
aaa
fwait
sub
dec
push
clc
and
sub
ja
fcomi
mov
adc
mov
outs
mov
shl
rcr
les
mov
adc
cmp
das
daa
push
mov
out
or
push
and
fwait
icebp
imul
sbb
pop
iret
call
neg
cmp
addr16
clc
stc
mov
enter
repnz
jns
mov
fbld
rcr
pop
add
and
arpl
sbb
pop
nop
or
and
je
pop
mov
inc
pop
sbb
xor
adc
mov
pop
fld
nop
or
data16
mov
mov
inc
les
fnstsw
pop
and
mov
shr
add
test
test
cmp
xchg
xor
pop
push
dec
pop
xor
mov
enter
int3
sbb
iret
pusha
fs
out
or
sbb
das
imul
js
sbb
sbb
jae
dec
inc
fs
scas
xchg
sbb
add
adc
and
xchg
cmp
add
mov
adc
cmps
xlat
adc
jno
xchg
or
pop
test
inc
loope
add
fdivr
pop
add
inc
sbb
adc
cmp
add
cmp
adc
ffreep
nop
aas
adc
aad
fstp
loopne
cmp
shl
inc
mov
movs
hlt
fsubr
pop
ja
inc
movs
dec
jg
frstor
shl
call
clc
int
faddp
pop
inc
int
cs
and
imul
and
xchg
lods
mov
sbb
loope
sbb
cmp
clc
std
mov
inc
cmp
hlt
enter
rcl
fild
inc
cdq
movs
push
ret
xor
pop
sbb
je
imul
mov
call
cmp
push
jno
mov
js
outs
xlat
dec
rcr
movs
cmp
sbb
sub
ins
jo
mov
sub
add
loope
data16
jl
lock
xchg
xor
add
or
add
xchg
iret
sub
pop
add
add
xor
sbb
cs
(bad)
frstor
add
in
xor
loop
mov
mov
jae
cmp
jp
lods
jle
jae
adc
(bad)
push
push
mov
mov
fs
add
jbe
and
push
cmp
cwde
sub
inc
in
ins
xor
clc
and
clc
mov
aas
or
mov
inc
clc
jne
sbb
dec
sub
clc
dec
fisttp
push
push
addr16
out
add
mov
nop
stos
add
add
or
xchg
xchg
movs
mov
div
mov
sub
arpl
adc
lds
mov
pop
adc
sbb
add
cwde
std
aaa
inc
add
xor
add
push
cmp
into
into
and
dec
cmp
xchg
xor
xor
int3
stos
adc
cmp
cmp
mov
loopne
lock
jne
add
add
adc
or
xchg
sub
push
add
sbb
fiadd
mov
icebp
sub
adc
jb
test
jge
pushf
or
test
je
add
inc
imul
and
idiv
pop
adc
add
test
and
add
adc
shl
sub
int3
inc
jne
cmp
adc
mov
repnz
fild
pop
mov
xor
aas
inc
inc
call
cmps
test
bound
fadd
cmp
adc
xchg
iret
clc
data16
ss
in
aad
aam
jp
ins
mov
push
inc
les
jns
push
out
int
mov
mov
jns
jmp
adc
fbstp
pop
arpl
and
mov
hlt
je
out
les
add
mov
and
xor
add
pop
rcr
movs
int
lock
aam
fistp
ret
and
sub
movs
jl
or
add
inc
mov
inc
add
mov
pop
add
jecxz
jmp
add
popa
mov
sub
add
and
and
lock
and
xlat
add
stos
jmp
lds
iret
inc
out
xor
lea
pop
lahf
push
inc
and
cmp
push
xchg
add
leave
add
cmp
arpl
jmp
jne
add
push
ret
cwde
sub
iret
je
inc
and
movs
js
or
pusha
adc
jmp
repz
lahf
scas
add
adc
pop
add
ret
mov
jne
ja
push
inc
add
pop
mov
lahf
lock
arpl
pop
inc
rol
mov
jne
xor
adc
cmp
mov
mov
ss
popa
inc
or
xchg
scas
daa
ret
mov
rcr
xor
movs
xchg
add
test
add
fild
fild
jbe
pop
(bad)
(bad)
test
mov
jo
adc
cmp
inc
add
xchg
movs
cmp
dec
mov
sbb
add
add
loopne
sbb
idiv
mov
pop
fs
mov
dec
cmp
or
mov
test
pop
xlat
or
jb
adc
add
fidivr
and
lods
add
cmp
jmp
and
pop
(bad)
jne
xchg
add
imul
push
lea
loope
in
mov
fist
fadd
xor
dec
pop
(bad)
fild
movd
or
fld
push
out
sbb
mov
popf
test
xor
es
inc
push
or
icebp
ficom
and
loope
lea
lea
adc
sub
(bad)
adc
fisub
pop
ret
xchg
lock
leave
adc
mov
pop
jmp
jg
add
and
and
and
xor
xor
adc
adc
in
rcr
sbb
and
and
enter
fidivr
gs
iret
add
inc
and
dec
add
xor
adc
xor
and
push
jno
inc
mov
dec
mov
mov
inc
add
sbb
push
cmp
retf
fcomp
pushf
mov
mov
loope
into
inc
je
inc
or
aaa
mov
xor
push
xchg
daa
sbb
les
mov
push
hlt
adc
imul
mov
ret
adc
mov
ins
lea
ror
or
push
mov
mov
mov
and
sahf
xor
xor
fild
or
and
rcl
das
or
pop
mov
or
(bad)
aad
stos
sbb
test
dec
test
fst
add
pop
leave
sbb
pop
cmc
jo
retf
adc
mov
xor
(bad)
in
aas
icebp
pushf
stc
push
mov
into
add
nop
push
push
inc
call
les
push
adc
sub
push
push
push
push
stos
sub
and
pop
icebp
popa
or
adc
fisubr
mov
arpl
sbb
and
inc
movs
push
push
add
cmp
inc
sbb
adc
or
ins
das
dec
lock
ret
or
gs
call
lea
sar
fnsave
enter
xchg
or
mov
out
fidiv
pop
mov
cmp
jl
adc
inc
push
out
add
out
loop
test
test
lahf
push
inc
call
ins
jae
popa
jl
dec
pushf
and
inc
push
arpl
mov
xor
add
push
pop
or
test
and
ret
and
inc
pop
ret
ret
pop
mov
ins
lock
or
shl
fcomp
dec
inc
fdivrp
dec
adc
je
clc
and
lea
inc
das
leave
sub
adc
daa
bound
mov
sbb
push
push
pop
clc
xlat
inc
fbstp
and
add
or
xchg
rol
test
dec
lods
sub
in
adc
adc
sub
dec
pop
adc
mov
sbb
push
fs
sbb
in
call
add
sbb
or
ins
inc
in
mov
pcmpgtb
add
hlt
mov
or
jmp
push
push
dec
sti
pop
ror
push
xor
pop
mov
fidivr
push
adc
jno
cmp
shl
add
sar
ret
cs
xor
adc
adc
pop
mov
fisubr
and
add
adc
push
xor
stos
call
rol
stc
jbe
jno
jmp
popf
xor
jmp
and
fimul
movs
bound
jg
cmp
sub
pop
or
push
inc
jae
or
pop
and
sub
pop
push
inc
adc
cmp
cmp
not
(bad)
adc
mov
push
fld
xchg
nop
xchg
mov
jge
or
jmp
xadd
jmp
pop
sub
dec
les
push
popa
je
mov
out
or
jnp
dec
scas
jae
mov
mov
(bad)
cmp
fwait
jo
out
adc
or
retf
js
pop
or
imul
cld
pop
shrd
push
mov
fdiv
sbb
cmp
ja
les
fs
mov
imul
sub
cmp
scas
or
inc
out
push
cmp
jg
cmps
xor
add
jmp
xchg
pop
scas
or
mov
dec
jae
push
fnsave
pop
mov
push
mov
push
(bad)
jl
fwait
cmp
je
popa
(bad)
push
mov
mov
cld
pop
cmps
push
mov
(bad)
scas
ins
and
das
push
mov
fs
and
aad
sbb
pusha
dec
sbb
inc
cmp
add
add
int3
imul
adc
mov
xor
adc
cmp
jbe
push
sbb
daa
sbb
outs
imul
outs
adc
jmp
sbb
add
shr
es
sbb
shr
cmp
adc
pop
loop
pop
adc
aaa
cmps
or
fadd
sbb
xchg
dec
add
sbb
es
pop
mov
xchg
cmp
fs
push
xor
inc
jae
test
(bad)
les
adc
call
dec
adc
rcl
or
jno
gs
mov
cmc
ret
mov
push
fcom
fsubr
pop
clc
fbld
inc
loop
or
sub
cld
ins
adc
inc
bound
sbb
mov
and
push
sub
inc
inc
push
add
das
ds
mov
pop
xor
cmps
test
movq
xchg
mov
jmp
aam
cmp
push
rcl
outs
or
add
jne
and
iret
mov
mov
int3
pop
sub
(bad)
je
push
adc
sbb
add
cld
sbb
jmp
add
adc
dec
push
daa
dec
fcmovnu
je
dec
mov
add
call
mov
mov
(bad)
pusha
cmp
outs
inc
sbb
adc
fimul
pushf
fcmovnu
test
cdq
pushf
xchg
inc
add
inc
ja
in
sub
out
call
mov
mov
stos
xchg
pop
mov
xor
inc
xor
jmp
ins
test
clc
add
cwde
lds
out
mov
push
push
push
nop
add
push
mov
inc
mov
cwde
mov
mov
jecxz
mov
imul
cmp
jmp
nop
push
lods
fdiv
lahf
sbb
or
push
pop
cwde
mov
jo
mov
popa
inc
int3
imul
test
mov
inc
daa
imul
dec
or
fwait
cmp
inc
cld
movs
icebp
or
and
and
push
test
popa
xor
mov
pop
cmps
cld
xor
daa
les
je
mov
and
mov
loop
test
pop
mov
push
jno
ret
loop
mov
jo
cmp
add
adc
aaa
cs
push
pusha
jmp
stos
ss
mov
inc
sbb
repz
jmp
aaa
xor
enter
sbb
xlat
sar
gs
jge
and
adc
cmp
sbb
outs
adc
xlat
jmp
test
repnz
jo
adc
and
adc
add
xor
push
sub
cs
sti
dec
inc
inc
mov
fimul
inc
cmps
sub
(bad)
and
adc
inc
push
out
mov
mov
adc
mov
lock
or
mov
cmp
ins
adc
jo
cmp
or
mov
pushf
out
adc
or
and
or
adc
fadd
dec
mov
sub
dec
es
pusha
fld
adc
xor
leave
mov
inc
xchg
shr
fisttp
jle
mov
not
and
mov
or
jge
adc
das
cli
out
fld
mov
or
sub
add
ja
pop
and
sar
je
pop
mov
ret
add
jne
mov
clc
inc
mov
mov
inc
push
inc
test
inc
xchg
mov
imul
cwde
js
lea
sbb
add
rol
mov
retf
fsubr
lea
sbb
add
mov
adc
mov
inc
xor
add
jp
push
jns
add
loopne
test
xchg
adc
cmps
fcomp
icebp
inc
jns
in
push
jo
adc
fbld
adc
je
inc
ss
pop
fsubr
mov
xor
and
add
adc
adc
jge
sub
sbb
rol
inc
add
sub
bound
jge
sbb
icebp
xor
scas
inc
jno
pop
bound
push
push
mov
sbb
shr
pop
ror
mov
dec
adc
sar
test
mov
push
scas
ins
mov
jge
xor
(bad)
and
scas
test
push
sub
sub
sub
inc
sub
pop
jae
js
(bad)
dec
loope
pop
xor
xchg
ror
ins
push
and
pop
adc
add
xor
and
test
mov
pop
sub
sti
sub
push
inc
sbb
mov
sub
push
jecxz
call
add
dec
sub
mov
sub
cmc
lods
loopne
ror
iret
adc
inc
mov
pop
or
mov
loopne
inc
dec
and
pop
mov
push
dec
call
ja
mov
cmp
popa
adc
jno
stc
dec
pop
sbb
push
(bad)
or
xor
inc
test
or
add
sub
and
mov
mov
push
fld
sar
movs
loopne
cmp
inc
inc
and
inc
adc
data16
out
and
test
mov
int
cdq
lock
sbb
cmp
dec
test
xor
or
add
mov
xchg
or
sub
stos
(bad)
addr16
mov
je
pop
pop
dec
add
xor
push
jle
mov
gs
stos
setle
out
cmp
cmovp
xor
bound
push
ds
sbb
mov
or
rcl
fsub
ficom
fwait
(bad)
fcomi
xchg
adc
dec
int3
dec
pushf
ins
clc
sub
rcl
cmc
mov
mov
jmp
jg
xchg
push
push
or
cmp
pop
pop
call
sub
adc
jge
fcomp
or
jg
jnp
fild
pop
jne
mov
inc
mov
adc
push
inc
(bad)
scas
(bad)
fs
push
pop
loopne
dec
mov
add
cmp
and
and
mov
sbb
xchg
push
arpl
pop
popa
xchg
dec
sbb
popf
je
pop
call
call
rcl
rol
sub
arpl
cmp
rol
or
ror
inc
imul
in
push
push
and
aaa
sbb
(bad)
cmp
jae
or
rcl
inc
shl
cld
mov
arpl
xchg
rcl
or
retf
mov
add
xchg
das
push
mov
int
sbb
or
pop
movs
jns
or
lea
lea
std
pop
sar
push
mov
mov
and
(bad)
xor
xchg
out
jne
arpl
rcl
sub
mov
dec
mov
or
sub
mov
test
xor
sbb
pop
inc
cmc
movs
adc
and
and
jmp
mov
sub
pusha
xchg
sub
or
xor
xor
loopne
adc
inc
sbb
mov
adc
jne
in
push
mov
add
imul
out
and
sbb
pop
add
or
loop
ret
(bad)
fisttp
adc
in
xor
add
test
enter
mov
mov
das
add
pop
jp
shl
ret
jl
or
iret
mov
in
jmp
mov
or
inc
in
jnp
es
inc
mov
adc
popa
test
aas
into
push
mov
mov
test
mov
push
movs
fsubr
adc
jo
cld
lods
aad
sbb
mov
enter
ja
cmp
mov
push
adc
ret
push
sbb
jge
jmp
mov
jge
jmp
jae
add
je
les
fsub
and
sub
lock
push
add
push
ficomp
and
rcl
mov
inc
or
and
mov
or
push
and
fidivr
mov
mov
push
pop
and
add
sbb
jno
daa
lea
mov
mov
sti
lea
pop
add
test
inc
loopne
pusha
inc
or
call
adc
sbb
add
and
test
in
dec
cld
pusha
das
sub
mov
xchg
or
hlt
movs
movs
(bad)
mov
daa
fdivr
sbb
add
inc
ret
pop
sub
iret
popa
add
sbb
retf
sti
or
dec
pop
xor
in
or
pop
or
push
jno
loopne
ins
dec
jne
nop
mov
mov
jl
push
sub
movs
dec
mov
sbb
inc
(bad)
(bad)
cmp
adc
popa
pusha
xor
pop
ja
pop
xor
ror
daa
sbb
xor
dec
pop
mov
popf
mul
lods
ins
ret
push
clc
xchg
das
(bad)
cld
lock
shl
dec
adc
enter
push
xor
arpl
std
inc
(bad)
addr16
mov
out
xchg
push
add
movs
mov
popa
lods
popf
or
hlt
add
test
adc
or
and
cdq
push
daa
dec
(bad)
in
sub
xor
mov
xchg
xlat
xchg
inc
adc
inc
cmp
jne
shr
sti
sub
cmp
pusha
das
mov
mov
sbb
(bad)
cli
xchg
movs
dec
je
and
and
and
mov
mov
popf
xor
fistp
bound
adc
pop
aas
pop
repnz
scas
or
dec
inc
sub
cmp
int3
lea
mov
scas
into
sbb
loope
ror
xor
in
loopne
xor
push
mov
retf
mov
lahf
sub
add
xor
das
mov
js
cmp
popf
shl
daa
mov
repz
pop
mov
test
adc
or
add
pop
jmp
pusha
mov
lock
sbb
or
cmp
mov
jbe
xchg
movs
leave
jmp
test
pop
adc
dec
shl
in
mov
sbb
sbb
in
jbe
in
sub
dec
mov
jmp
and
fsub
test
and
and
inc
add
scas
jo
add
jo
test
test
push
cmps
aad
add
xor
and
pushf
fsubr
ret
add
adc
jo
movs
popa
mov
dec
add
adc
mov
push
inc
lock
sar
jmp
and
sbb
nop
mov
sbb
hlt
sbb
test
dec
xchg
fwait
cli
mov
jmp
mov
sti
adc
xor
lahf
inc
and
fdiv
add
dec
sbb
jne
aaa
or
and
xchg
pop
lods
mov
mov
pop
push
mov
ret
aad
dec
fadd
add
ror
cmp
or
xchg
and
inc
jge
mov
loope
inc
enter
mov
lods
xchg
out
add
clc
sub
sbb
xchg
and
rcr
es
pop
inc
inc
mov
bound
sub
sbb
shl
xchg
icebp
mov
push
pop
adc
xchg
movd
mov
jle
inc
aaa
cmp
pusha
cmp
mov
cs
inc
adc
add
lock
push
adc
pop
xor
out
ror
ins
lods
and
adc
add
jl
sbb
btc
or
or
jns
pop
mov
cmp
loope
and
inc
inc
je
jg
adc
test
cmp
dec
stos
arpl
or
xor
sbb
mov
mov
sbb
in
movs
sub
cmp
jecxz
out
adc
sub
mov
pop
add
sub
mov
cmp
ds
cmp
sub
push
inc
or
data16
mov
pop
push
jb
pop
sub
inc
pop
cld
arpl
nop
push
fcmovu
(bad)
leave
mov
fcomp
repnz
mov
shl
pop
jmp
dec
push
mov
add
jbe
push
je
pop
repnz
inc
nop
add
xchg
clc
pop
hlt
jno
mov
les
inc
sbb
iret
adc
fisubr
jnp
push
add
sub
cmc
push
sub
in
shl
add
test
jmp
cmp
mov
and
jo
dec
lds
ret
push
lock
pop
mov
je
pop
cmp
and
pop
ins
mov
pop
das
in
xchg
adc
and
push
sub
in
push
jg
popa
mov
push
fistp
or
push
push
std
sub
ss
fisttp
mov
icebp
mov
arpl
mov
push
into
(bad)
(bad)
pop
cmp
pusha
cmp
pusha
movs
add
ror
outs
fwait
ja
int3
ins
mov
inc
jae
pop
ins
mov
shl
clc
cmp
arpl
ror
fdivr
jnp
pop
pop
dec
jne
gs
or
ins
mov
bound
es
shr
mov
or
cmp
push
xchg
cld
lock
fcomp
jmp
push
ja
dec
call
fcomp
xchg
loop
xchg
inc
or
add
xor
adc
fisubr
cdq
sub
aad
adc
dec
or
popa
das
in
in
movs
cdq
jne
and
mov
and
dec
adc
pusha
mov
adc
daa
cmp
rcl
add
test
xlat
cld
mov
cmp
add
int3
jns
push
mov
and
push
(bad)
mov
mov
mov
or
aas
push
xor
xchg
sub
add
movs
fwait
sbb
add
push
lods
loopne
fwait
jmp
dec
rol
jbe
test
test
aaa
add
inc
xchg
fild
mov
seto
ja
sbb
movs
adc
aam
sub
movlps
or
test
cmps
mov
dec
pop
inc
add
test
jmp
ret
inc
popa
push
push
stos
pop
cli
add
adc
and
mov
and
mov
jae
repnz
and
lahf
mov
pop
and
sti
add
and
dec
pop
push
jmp
sub
repz
xor
fiadd
loopne
and
cmp
dec
fcmovne
fld
xlat
jno
(bad)
push
ror
(bad)
lock
lock
nop
pop
inc
ins
mov
jne
pop
test
push
push
and
lea
xor
aaa
inc
push
or
sbb
cmp
test
mov
jae
dec
scas
ret
inc
pop
push
jns
xchg
pusha
and
cld
stos
and
jg
mov
xchg
mov
cmp
sar
adc
adc
inc
and
(bad)
imul
and
sub
(bad)
call
xlat
(bad)
adc
test
sub
rol
dec
(bad)
aam
xlat
fwait
sbb
fistp
add
push
pop
and
mov
or
or
(bad)
dec
jp
and
inc
mov
add
inc
ds
push
sbb
mov
loop
or
dec
inc
(bad)
loopne
nop
fst
pop
xchg
cmps
pop
cli
rol
dec
outs
mov
jmp
sbb
and
xchg
(bad)
pop
push
mov
cmp
jbe
je
xlat
add
data16
hlt
inc
es
ret
mov
jbe
outs
or
cli
(bad)
in
push
mov
or
rcr
mov
push
inc
or
xchg
outs
sbb
dec
js
xor
pop
(bad)
and
stc
dec
pop
mov
daa
adc
inc
cmp
lods
jae
xor
ret
dec
repz
sbb
scas
loopne
pop
sub
pop
adc
dec
pop
inc
(bad)
shl
mov
leave
or
or
dec
adc
cwde
inc
sub
sti
add
or
mov
rcr
adc
adc
or
fs
call
or
adc
sbb
lock
and
xor
adc
or
ss
ret
jo
ret
mov
add
mov
mov
sbb
lock
inc
aaa
cmp
inc
mov
cli
cmp
xchg
add
sbb
adc
mov
push
lea
mov
cli
sbb
add
xor
dec
dec
jns
dec
jecxz
sbb
cmp
test
and
cmp
mov
into
inc
xlat
xor
xchg
add
push
test
mov
jbe
and
xor
leave
pop
mov
pop
add
and
cmp
dec
sub
add
pop
add
adc
cmps
popf
leave
jp
fisubr
add
jne
sub
outs
adc
xchg
rcl
loopne
call
adc
ror
inc
or
xchg
mov
add
sub
push
push
or
leave
fmul
pop
xor
or
mov
sbb
inc
cmp
fisubr
sbb
xchg
movs
(bad)
outs
sbb
loopne
call
cmp
inc
stos
push
xchg
loopne
jmp
aad
mov
sub
and
xchg
cmp
test
fadd
add
mov
cmp
cli
push
in
push
or
jmp
jae
mov
stc
cwde
jl
xor
adc
sub
xcrypt-cfb
cmps
movs
sbb
inc
adc
push
and
adc
add
push
cmp
ins
add
cmp
ds
pop
ror
test
jbe
mov
adc
add
fsubr
and
leave
mov
push
xor
dec
loop
icebp
stos
imul
add
shr
sbb
dec
jge
cmp
icebp
mov
test
push
test
bound
and
jnp
or
add
or
mov
js
imul
push
sar
inc
xor
ss
adc
sub
adc
repz
mov
fwait
nop
fs
repz
lea
sbb
retf
mov
ja
dec
imul
aam
dec
and
cli
push
cmp
inc
sub
shl
ror
jle
push
in
mov
sub
loopne
imul
jo
inc
mov
(bad)
xchg
ror
mov
(bad)
fisubr
jp
sub
imul
fiadd
mov
mov
and
daa
xchg
push
call
retf
test
jg
ins
jle
loopne
fs
or
push
mov
adc
add
pop
call
loope
cmp
inc
xchg
in
mov
add
sbb
jle
(bad)
pusha
add
call
int
(bad)
jge
fsub
test
test
adc
(bad)
loope
fldenv
or
js
or
mov
das
and
jecxz
retf
and
add
lock
fadd
lods
fsubr
adc
loopne
cmc
add
call
shl
mov
loopne
fwait
and
repz
in
les
add
sar
pop
dec
add
xchg
add
adc
adc
addr16
inc
pop
jl
mov
test
sbb
popf
rcl
push
inc
jmp
dec
jae
xchg
or
pop
sub
xchg
cwde
aaa
dec
mov
adc
or
sub
dec
fisub
inc
sbb
repz
addr16
loop
nop
or
call
jg
ret
push
add
adc
sub
aaa
test
push
out
daa
out
loop
pop
add
push
movs
popa
leave
mov
xor
int
dec
movs
mov
jne
ins
outs
and
pop
jne
fild
push
xor
pop
mov
and
sbb
cmp
cmp
jo
jmp
push
jg
aam
pop
(bad)
hlt
pusha
fwait
ds
in
jnp
jne
jne
and
cdq
add
imul
sbb
xor
mov
lock
jmp
and
xchg
xchg
jp
rcr
and
sbb
test
jo
(bad)
fbld
cmp
sbb
rol
jge
ret
dec
fld
jne
mov
inc
loope
push
push
sub
dec
lahf
out
cmp
js
mov
dec
cli
sub
gs
inc
retf
fdiv
mov
dec
stos
cmp
xchg
shl
pop
push
nop
adc
dec
or
cmp
test
xchg
je
repz
pop
ja
push
leave
fadd
xchg
sub
or
mov
int3
mov
retf
add
dec
lock
cmp
mov
arpl
imul
and
xchg
sub
(bad)
je
cs
jmp
test
in
popf
xor
rcr
arpl
mov
imul
and
call
mov
nop
add
jmp
mov
adc
or
pop
xchg
or
jecxz
fldenv
sbb
rol
push
mov
icebp
aaa
fistp
push
adc
sub
adc
ret
pop
inc
aam
mov
or
mov
fs
das
ret
and
movd
lea
pop
xlat
sbb
mov
and
clc
add
inc
and
jns
sbb
sti
push
mov
jae
cmp
rol
nop
call
mov
jp
pop
scas
jecxz
outs
cmp
pop
inc
loope
dec
dec
add
sbb
adc
scas
push
cmp
pop
jmp
sbb
movs
and
(bad)
enter
xchg
sub
(bad)
and
test
or
jecxz
test
adc
jae
xor
popf
aas
push
add
pop
push
sbb
jbe
pop
stos
add
or
add
add
aam
inc
shl
xchg
cmp
(bad)
or
push
lock
ss
loopne
inc
cmp
push
push
cwde
fdivr
fiadd
adc
add
loopne
add
cs
invd
jp
scas
adc
sbb
xchg
sbb
arpl
pop
pop
(bad)
and
das
pusha
sub
int3
push
dec
xchg
dec
jp
call
ins
dec
(bad)
fiadd
xor
fstp
inc
scas
or
add
adc
ret
repnz
xor
mov
jmp
xor
cdq
jmp
and
adc
aad
inc
cdq
push
nop
test
inc
mov
aas
sbb
mov
sbb
add
addr16
push
xchg
cmp
or
lods
repz
stc
and
sbb
push
xchg
scas
pop
adc
jg
jb
mov
mov
and
in
arpl
mov
and
popf
dec
cvtps2pd
xchg
daa
sub
int3
(bad)
add
adc
mov
add
loopne
int3
pop
ins
pusha
and
loopne
cmp
adc
sbb
inc
or
pusha
jo
in
pop
or
daa
fadd
cdq
or
rol
lahf
sub
icebp
sub
jo
das
popa
test
test
mov
test
adc
or
jmp
shl
ret
ins
ror
xchg
mov
into
xor
dec
push
or
jmp
pop
or
xor
sub
movs
and
pop
cs
sbb
sbb
shl
jae
jmp
je
rcr
mov
or
or
lock
inc
aam
push
repnz
bound
xor
fadd
shl
sub
popf
movs
jno
mov
cmp
adc
fiadd
dec
ret
push
out
xor
sbb
inc
ret
popa
pop
je
add
ss
bound
add
pop
addps
bound
in
jo
pop
aaa
xor
ret
bound
retf
or
pusha
mov
adc
adc
or
xchg
dec
sub
and
cmp
jle
jne
mov
cmp
ds
movs
retf
in
xor
or
add
addr16
ficom
pop
and
sub
mov
adc
pop
xor
jne
pusha
mov
cwde
push
add
adc
dec
or
ret
dec
sbb
and
mov
adc
add
enter
mov
rol
loope
loope
sbb
dec
aam
xor
adc
xchg
sub
adc
cwde
fst
hlt
add
cmp
add
xchg
push
(bad)
or
xchg
fdiv
inc
xor
or
loopne
pusha
xchg
addr16
mov
adc
jne
adc
and
hlt
sbb
jb
add
ret
pop
iret
sub
push
jo
(bad)
pop
pop
(bad)
mov
push
inc
adc
xchg
or
out
adc
pop
lods
sub
pop
adc
lods
test
push
call
jo
mov
imul
imul
mov
cdq
iret
sbb
xor
(bad)
jmp
mov
add
pop
cdq
mov
je
and
in
enter
les
sbb
lea
repnz
les
inc
mov
jns
inc
pop
rcl
ins
jne
sbb
add
sub
les
sbb
sbb
aam
lock
fwait
push
fcomp
cmp
sbb
cmp
(bad)
arpl
adc
lea
xor
dec
stos
cmp
not
out
adc
lods
or
icebp
adc
push
scas
cdq
push
push
xchg
fimul
adc
and
lock
or
rol
or
push
loop
test
add
inc
loope
test
popf
movs
sub
shr
not
sar
mov
or
pop
lea
mov
lock
pop
pop
pop
sahf
mov
or
inc
and
test
xchg
test
xchg
dec
and
pop
out
cmp
add
sbb
adc
ror
mov
add
pop
and
xchg
pop
hlt
test
xchg
mov
das
repnz
lods
ret
xor
cmp
out
mov
daa
scas
pop
leave
sbb
leave
sbb
sub
or
xor
or
sub
pop
xor
xchg
pusha
loope
ret
and
mov
sub
rol
sub
dec
inc
dec
popf
jge
retf
cmp
loope
(bad)
ror
ja
sub
and
jge
pop
les
pop
ja
dec
retf
xlat
es
adc
(bad)
push
out
pop
or
or
pushf
inc
sbb
rcl
adc
or
sbb
pop
push
jmp
idiv
mov
or
mov
dec
jae
pusha
sub
and
les
push
mov
(bad)
pop
in
jmp
pusha
daa
adc
sbb
mov
or
inc
add
adc
or
add
jne
jl
movs
into
clc
clc
cmc
xchg
fs
mov
(bad)
aam
sub
jmp
retf
mov
es
jb
push
fs
aas
lock
xchg
aad
mov
loope
push
bound
fwait
inc
outs
sbb
jl
add
jg
imul
pop
xor
lods
(bad)
pop
sub
inc
and
addr16
sbb
jmp
adc
mov
fisttp
push
mov
or
xchg
mov
sub
add
pop
(bad)
mov
or
mov
pop
or
inc
jne
pop
and
ror
inc
cmp
add
rcr
or
dec
cwde
loopne
adc
pop
jns
xchg
mov
inc
mov
push
out
inc
add
adc
ror
pop
pop
nop
sbb
popa
mov
add
pop
jo
push
xchg
jne
pop
inc
adc
and
retf
xlat
mov
jmp
or
pop
int
jo
fsub
loope
or
pushf
push
aam
jge
mov
and
and
out
add
ret
add
in
ror
jne
ja
call
(bad)
inc
xor
cmp
mov
lock
daa
and
fisttp
aam
mov
sub
jecxz
lock
add
test
add
and
xor
dec
and
push
cmp
je
ins
pop
adc
les
jle
mov
pop
icebp
nop
dec
mov
add
cli
sub
(bad)
ret
xchg
pop
sbb
inc
mov
inc
cmp
push
pop
cwde
cmp
ret
leave
sbb
sub
cmps
xchg
(bad)
jb
imul
cwde
dec
adc
xchg
pop
shl
inc
sub
cmps
add
(bad)
sub
add
jo
pop
mov
inc
sub
es
stc
xor
add
into
adc
and
mov
push
rol
mov
or
fwait
scas
or
dec
pop
aaa
inc
sub
inc
adc
daa
lds
pop
imul
pop
sbb
add
push
push
shl
or
scas
ficom
sub
scas
cmp
push
jnp
aaa
das
or
lahf
xchg
xchg
sbb
(bad)
xor
dec
sub
inc
mov
(bad)
into
sub
or
pop
push
ja
imul
adc
fdiv
mov
cmp
cmps
adc
dec
adc
cmc
cmps
daa
or
dec
and
xor
push
push
add
je
mov
ret
xor
in
es
rol
pop
push
mov
(bad)
out
ja
push
pusha
lods
lods
lods
retf
and
pop
jl
mov
sbb
mov
call
dec
mov
adc
or
or
(bad)
fmulp
jne
jo
test
rol
gs
test
adc
mov
js
inc
add
and
inc
cs
dec
xor
inc
cs
je
rol
adc
adc
push
xor
pop
lds
mov
mov
xchg
cmc
mov
jno
xchg
xchg
and
inc
sub
add
and
dec
dec
nop
xchg
pop
jb
dec
test
arpl
jb
pop
jp
sbb
push
push
call
dec
inc
dec
pop
mov
aaa
push
xor
push
sub
imul
xchg
in
xor
push
mov
pop
iret
cmp
cmps
adc
les
test
mov
aas
outs
mov
adc
in
adc
adc
test
shl
sbb
aam
pushf
or
push
call
fst
jg
neg
inc
test
movs
jb
imul
call
mov
out
jl
or
jle
clc
cmp
into
adc
cwde
jg
inc
call
xchg
sbb
sub
icebp
add
jbe
mov
shl
jae
(bad)
mov
inc
fadd
mov
aas
add
cmp
test
mov
sbb
push
pop
aaa
cmp
test
xchg
push
lea
(bad)
(bad)
dec
xor
nop
cli
jnp
jne
cwde
fadd
lea
lods
rcr
push
ja
mov
pop
xchg
push
mov
lods
sbb
jg
gs
mov
ret
aas
cmp
pop
jecxz
jo
mov
add
adc
mul
xlat
pusha
cld
jb
adc
inc
cmp
ret
adc
aam
out
add
push
mov
out
pop
inc
cmp
rcl
test
(bad)
stos
inc
xchg
sbb
cmc
pop
add
xor
xchg
or
and
jmp
retf
(bad)
push
push
popa
int3
fs
fcmovu
mov
mov
pop
popa
pop
ins
adc
push
xchg
test
push
outs
sub
xchg
mov
add
movs
sbb
sub
mov
in
cld
adc
sbb
or
cmp
loope
int
mov
push
jge
jne
repz
sub
std
rcr
push
or
cmp
mov
outs
sbb
lods
dec
and
xchg
cmp
mov
and
stos
and
mov
aas
sub
pop
sub
xlat
scas
push
dec
xchg
popa
es
dec
adc
jne
inc
scas
cmp
add
imul
push
rcr
loope
or
dec
add
(bad)
pop
nop
cmp
jne
sbb
test
sub
test
adc
pop
push
clc
retf
inc
push
push
xor
cmp
sub
test
dec
add
add
cmc
adc
xchg
out
sub
add
add
je
xor
and
data16
movs
pop
cmp
pushf
xchg
xchg
xor
pop
mov
mov
or
or
call
stos
and
push
retf
mov
adc
fisttp
shl
loopne
es
and
(bad)
mov
(bad)
loop
sub
jne
ror
lods
std
data16
lahf
aas
bswap
mov
mov
sbb
cmp
inc
outs
sbb
mov
cs
mov
adc
jl
mov
jmp
push
in
and
mov
or
cmp
mov
outs
sub
xchg
les
mov
xor
or
adc
xor
or
pop
fstp
ins
imul
fst
pop
pop
test
xor
sub
popa
xor
pop
repz
pop
or
or
mov
inc
add
out
or
add
and
mov
mov
and
dec
jmp
jle
pop
sub
mov
dec
cmps
fimul
sub
pop
dec
inc
data16
inc
add
cmp
sbb
mov
sbb
sbb
inc
dec
push
xor
sub
das
cmps
lods
xor
clc
add
push
sbb
xor
or
dec
movs
or
mov
sbb
fnstsw
fadd
jp
push
cmps
ret
jne
xchg
ret
mov
loop
nop
cmp
adc
cmp
aad
pop
mov
or
int
hlt
scas
add
mov
cs
or
int3
pop
push
lock
cmp
sub
inc
leave
js
add
sbb
xor
loopne
push
pushf
sbb
jo
cld
rcl
and
sub
sub
or
test
adc
sub
dec
retf
arpl
and
push
dec
cmp
(bad)
cs
mov
mov
aas
inc
jns
jnp
aas
inc
push
jmp
and
cmps
dec
push
sub
inc
and
inc
or
xor
lock
sub
xor
sbb
imul
mov
repnz
add
jecxz
(bad)
pop
pop
inc
pop
jne
pop
adc
push
test
mov
xor
mov
into
xchg
inc
imul
pop
xchg
ffree
in
xchg
fnstcw
xchg
inc
dec
dec
jnp
inc
mov
sbb
sbb
sbb
imul
cmp
cmp
or
in
mov
(bad)
in
pop
js
push
cs
(bad)
cmp
sub
lea
jo
jne
sub
sub
push
xor
sub
mov
fimul
mov
(bad)
lock
sbb
xor
(bad)
scas
or
clc
lock
pop
aam
mov
dec
xchg
mov
push
fcmove
mov
js
or
push
jmp
mov
jp
xchg
addr16
lahf
pushf
push
xor
push
mov
push
xor
or
add
add
nop
mov
sub
ja
lds
add
rcl
mov
cmp
push
shl
test
or
push
jns
in
cmp
in
out
not
in
idiv
xchg
mov
out
xchg
fmul
fidiv
add
(bad)
and
sbb
adc
sbb
jo
sub
ret
sbb
mov
mul
or
push
pusha
xor
cmp
and
push
test
(bad)
loop
test
push
add
mov
and
cmp
lods
mov
or
adc
and
mov
push
add
ret
adc
dec
add
push
mov
sar
gs
xor
dec
ja
adc
sahf
mov
mov
popa
jp
mov
or
js
call
out
in
ret
mov
adc
ins
ds
pop
push
inc
clc
punpckhdq
lea
pop
xchg
or
cmp
retf
ja
and
mov
or
cs
loopne
idiv
dec
lock
je
fistp
mov
lock
jmp
call
mov
adc
and
adc
push
sbb
out
ret
mov
loope
push
adc
cmp
mov
cmp
test
adc
test
not
push
dec
jne
xchg
sar
(bad)
sub
ins
xor
push
mov
sbb
xor
and
push
inc
pop
mov
pop
push
push
mov
addr16
cld
or
add
ss
in
test
ficom
mov
cdq
mov
pop
rcl
sub
lea
mov
retf
xchg
pop
lds
ds
or
(bad)
and
sbb
jmp
leave
cmp
or
fnsave
mov
fcom
add
sub
sub
or
mov
pop
mov
adc
dec
popf
pusha
xor
mov
mov
cmp
mov
xor
cmp
leave
pop
popa
pop
popa
pushf
addr16
pandn
(bad)
cmp
cmp
mov
lea
adc
or
sbb
cmps
mov
call
ss
jae
cmp
or
or
inc
imul
dec
push
in
add
push
push
cs
add
rcl
inc
sbb
test
pusha
ret
cmc
daa
and
mov
lea
sub
xor
inc
rcr
xor
or
inc
push
into
sbb
cli
or
cs
push
inc
dec
xchg
lahf
stos
pusha
inc
and
je
iret
xor
or
loope
ss
gs
xor
push
push
push
add
mov
lahf
mov
nop
scas
rcr
cdq
shr
pusha
hlt
or
push
nop
jne
add
push
enter
mov
pop
jo
push
mov
scas
mov
enter
fdivr
cmps
sub
sbb
pop
dec
ret
arpl
mov
mov
inc
sbb
sbb
xchg
sub
xchg
or
cmp
cmp
fs
shr
push
not
push
inc
popa
push
cmp
jo
cmp
inc
add
mov
call
(bad)
retf
push
cmp
rcl
je
dec
ficom
adc
adc
pushf
test
imul
mov
int3
add
cli
hlt
push
dec
dec
aaa
push
shl
les
mov
retf
jb
sar
sbb
push
inc
scas
push
xor
lea
sub
push
imul
sub
cmp
or
dec
jmp
test
mov
leave
and
push
add
fwait
cmc
xchg
mov
fiadd
and
dec
mov
arpl
popa
arpl
cs
rol
push
out
int
mov
popf
jo
in
imul
loopne
jbe
fimul
xor
(bad)
jmp
enter
nop
xor
or
retf
mov
sub
ds
sub
mov
dec
add
adc
dec
add
call
fxch
fnsave
sbb
push
pusha
or
loop
inc
jo
pop
add
push
popf
std
add
add
inc
(bad)
jecxz
push
push
inc
sbb
dec
bound
push
lock
lods
sbb
pusha
mov
jmp
hlt
xchg
mov
push
add
sbb
xor
push
mov
adc
fisttp
data16
dec
and
xor
(bad)
std
mov
test
xchg
mov
loop
addr16
pop
jmp
ins
xor
stc
pop
pop
imul
sbb
xchg
mov
add
mov
int3
cmp
(bad)
pop
sbb
shr
xchg
push
enter
(bad)
inc
cmc
jo
sbb
add
test
shr
pop
mov
mov
xchg
lods
mov
add
mov
dec
cmp
add
or
sbb
ret
and
sar
push
sub
lahf
aaa
or
add
xor
xor
mov
sar
mov
int3
xchg
pop
loopne
enter
mov
pop
loopne
inc
adc
jg
or
pushf
jo
pop
scas
sbb
sub
ret
add
pop
(bad)
adc
fsubr
inc
pusha
xor
ja
add
movs
mov
adc
or
ret
pop
les
cld
or
aam
xchg
popf
adc
pop
inc
sahf
and
stos
add
scas
shl
jne
je
push
jnp
or
mov
jge
stc
scas
add
and
stc
sub
and
and
mov
dec
adc
movs
inc
and
push
xchg
in
or
icebp
imul
dec
dec
push
xchg
mov
jle
aaa
push
sub
mov
sub
cmp
pop
mov
lea
rol
dec
js
jnp
adc
lods
hlt
sub
lods
enter
xlat
das
push
clc
(bad)
in
adc
inc
out
sub
and
pusha
shl
loope
add
sub
and
inc
arpl
pop
mov
xor
das
inc
dec
call
or
jg
cli
mov
add
push
test
inc
dec
(bad)
xchg
test
cmps
std
add
xchg
les
push
icebp
mul
pop
push
xor
xor
or
test
push
push
sub
ficomp
xchg
rcr
cmp
mov
push
addr16
movs
xchg
jmp
push
inc
shl
sub
push
or
dec
dec
add
hlt
mov
sbb
cli
and
xor
pop
push
nop
and
push
push
inc
add
or
adc
mov
dec
push
rcl
push
xor
icebp
xchg
and
test
aam
and
or
push
mov
mov
pop
clc
les
lea
xor
push
lock
bound
test
sub
pop
pop
test
mov
xlat
(bad)
cmp
mov
ins
loop
adc
sbb
pop
and
jg
ins
aas
fdiv
adc
adc
add
ja
fs
push
test
push
push
daa
iret
aam
jb
push
fist
fadd
mov
out
push
mov
add
adc
bound
jmp
mov
pop
mov
sbb
pminsw
cmp
sub
sahf
cmps
pop
dec
mov
sub
pop
loop
shl
mov
mov
ins
add
cmps
pop
sub
cmp
pop
add
les
gs
add
pop
xor
sub
repnz
and
xor
repnz
add
retf
cmp
sub
(bad)
popf
mov
cld
dec
mov
fnstsw
rol
adc
clc
push
retf
adc
add
dec
add
fsubr
das
sti
pop
inc
in
(bad)
xchg
or
push
pop
mov
pop
jmp
mov
and
and
and
icebp
stc
mov
push
fadd
mov
pop
movs
into
ret
call
dec
ret
cwde
add
adc
inc
cmp
mov
fiadd
stos
dec
mov
sbb
add
stc
pop
inc
cmp
(bad)
ins
in
or
int3
les
cmp
jle
leave
ins
mov
add
adc
sti
push
pop
add
pop
and
daa
and
or
addr16
pop
fadd
rcl
jbe
jne
pop
mov
inc
ins
mov
sbb
mov
adc
xor
cdq
and
pop
dec
test
or
or
jecxz
lods
sub
inc
push
test
test
movs
cmp
sub
cmp
cmp
dec
add
inc
lods
ds
pop
add
sbb
in
fld
xor
mov
inc
sbb
jecxz
mov
add
inc
out
lds
sbb
gs
jp
lods
jno
adc
add
adc
cwde
pop
and
pusha
jns
mov
adc
lods
sbb
jl
add
add
out
or
jbe
(bad)
(bad)
add
add
push
add
aam
dec
(bad)
pop
movs
daa
jl
pop
xchg
push
mov
inc
loopne
mov
push
fsubr
push
cmp
jne
aas
mov
sti
ss
ja
push
pop
sahf
pop
shl
js
inc
test
sbb
xlat
std
cs
ret
and
mov
cli
mov
pop
fadd
xchg
sub
mov
std
mov
jmp
sbb
jmp
mov
jo
daa
inc
rcl
imul
mov
pop
inc
in
popf
mov
xchg
popf
fs
xor
add
(bad)
xor
add
std
aam
xor
add
ins
pop
dec
loopne
fdiv
push
dec
pop
adc
adc
dec
push
sub
cmp
sbb
sbb
test
xor
movs
push
stos
mov
pop
mov
and
das
mov
loope
inc
out
push
or
shl
movs
jae
dec
mov
in
adc
push
dec
add
inc
mov
aam
sub
movs
rcl
nop
nop
or
add
ret
push
std
and
sub
push
unpckhps
cs
or
cmp
imul
or
mov
or
dec
add
dec
pop
es
jbe
push
push
sbb
adc
adc
cmp
les
cmp
cmc
sbb
adc
mov
jne
push
and
es
mov
rol
xor
test
mov
push
adc
add
push
or
adc
mov
mov
sahf
jmp
sbb
and
adc
dec
rol
jmp
xor
pop
lea
adc
add
movs
mov
popf
sbb
pop
mov
clc
mov
dec
xor
loopne
rcl
pop
sub
adc
adc
or
and
nop
xchg
inc
rol
int3
mov
cmps
xchg
ja
cmp
adc
aas
lea
(bad)
cdq
div
inc
cmp
repnz
fst
(bad)
out
sub
mov
mov
sbb
test
rol
pusha
jne
iret
fs
sar
mov
mov
ins
pusha
jmp
sub
and
jne
cs
xor
es
or
dec
fs
repz
ds
retf
les
xchg
sbb
jg
daa
jmp
inc
fwait
rol
jg
call
mov
sbb
and
jne
lock
or
test
mov
ins
sub
aad
sar
shl
test
mov
and
push
pop
or
arpl
and
xchg
test
das
movs
add
mov
adc
and
js
xchg
cwde
mov
pop
mov
ds
or
fidiv
mov
xchg
sub
or
lods
test
popa
cmp
ins
mov
mov
or
jmp
sub
dec
imul
int3
test
lods
fwait
jmp
inc
arpl
pop
in
cmp
ins
not
or
or
jb
stc
add
inc
cmps
(bad)
fild
popf
jmp
sbb
add
pop
in
or
jbe
xor
xor
je
push
cmps
retf
movs
or
int3
lods
movs
rol
shr
imul
adc
sbb
or
dec
sbb
jmp
call
enter
and
cmps
pop
sbb
push
add
jne
fdiv
idiv
dec
adc
xor
xchg
push
imul
out
fisttp
sbb
cmp
or
mov
push
repnz
in
pop
xchg
and
das
sar
push
or
pop
sbb
dec
sbb
cmp
inc
imul
jp
or
mov
or
xor
dec
mov
fcmovu
repnz
inc
adc
into
add
in
ret
pop
add
push
adc
fs
sbb
fdiv
cmp
sbb
mov
add
nop
call
cmp
cli
mov
sbb
adc
in
les
pop
mov
mov
mov
cmp
adc
cmc
mov
ins
sbb
ja
adc
cli
push
clc
and
fcom
cmps
std
sub
add
jo
nop
cmp
shl
lock
in
daa
adc
or
les
hlt
xchg
add
lods
adc
push
xchg
fs
jl
pop
mov
sbb
dec
add
ret
add
xlat
lock
or
pop
sub
enter
gs
hlt
xchg
push
(bad)
or
and
and
pop
fcmovb
mov
adc
rol
ror
xchg
or
and
inc
ror
and
dec
fst
mov
test
ins
and
jne
mov
ja
retf
jle
add
sbb
push
push
cwde
and
pushf
dec
inc
inc
jmp
repnz
mov
mov
gs
dec
jecxz
test
lock
shl
scas
ins
nop
push
shl
das
call
cmc
call
add
aad
push
push
xor
and
pop
push
fcom
adc
pop
or
clc
push
shr
test
and
sbb
mov
ja
shl
push
sub
loopne
hlt
mov
inc
pushf
jecxz
into
rol
xchg
inc
inc
mov
mov
loopne
jns
and
mov
loopne
daa
adc
lock
cmc
xor
(bad)
ficomp
xchg
push
cmps
xchg
scas
movs
push
(bad)
or
cdq
inc
pop
clc
jmp
pop
xor
or
jo
mov
ret
inc
cmp
pop
dec
sub
add
add
cmps
sbb
inc
jecxz
sbb
and
retf
pop
pop
addr16
(bad)
pop
add
inc
inc
adc
jg
pop
add
sub
cmp
or
dec
loopne
cmp
add
das
ins
dec
xchg
add
or
in
pusha
hlt
scas
and
sahf
pop
and
and
out
dec
push
jle
jbe
sbb
add
int
lea
xchg
mov
adc
jp
sub
push
push
sbb
mov
mov
popf
add
cdq
test
inc
loop
add
test
adc
in
dec
pop
push
jle
xor
je
add
cdq
in
shl
cmp
clc
or
in
ret
or
data16
sub
sahf
sub
mov
push
sbb
push
sub
pop
cwde
add
mov
adc
outs
dec
mov
fstp
es
(bad)
call
shl
data16
and
lock
adc
add
js
add
dec
rcpps
out
mov
or
dec
clc
pop
scas
adc
adc
add
mov
cmps
in
dec
sbb
ins
out
add
loop
and
sub
push
xor
pop
cs
fbld
xchg
jno
mov
lock
xor
push
inc
xor
or
loope
jb
and
and
jne
pop
dec
inc
sub
sub
sub
jae
mov
jne
mov
or
les
jl
cmp
add
inc
xchg
push
stc
ins
sbb
pushf
mov
mov
push
inc
and
mov
sub
xor
nop
xchg
add
pop
mov
call
ror
mov
inc
es
pop
inc
push
xor
or
hlt
rcl
sub
mov
pop
mov
add
lds
cmp
rol
popa
and
xchg
xor
jl
jmp
cmp
cmp
push
mov
mov
iret
outs
push
fdiv
push
jae
cdq
push
xchg
push
sbb
sbb
or
int3
cmps
inc
add
call
inc
fdiv
and
xor
pop
dec
cmp
add
bound
and
dec
pop
test
xor
push
jmp
rsqrtps
in
cmc
jo
sbb
push
xchg
dec
pop
shl
das
aaa
jmp
movs
push
inc
mov
sub
and
dec
adc
push
sbb
loop
sti
mov
mov
enter
pop
sub
sbb
addr16
jb
or
mov
push
cmp
mov
sbb
ds
dec
ins
cmp
cmps
mov
sub
fist
push
xor
ins
sub
xor
loope
out
mov
cld
mov
ror
jbe
aaa
bound
push
(bad)
ins
iret
push
xchg
dec
push
aaa
mov
int3
and
add
daa
xchg
inc
mov
push
rol
pop
int3
push
mov
rcr
xor
test
or
mov
aaa
les
pop
mov
lock
mov
jo
lahf
test
mov
mov
cmps
and
test
int3
adc
data16
sub
add
int3
or
fs
popf
arpl
push
mov
rcl
adc
sub
enter
(bad)
sub
jmp
mov
add
mov
jge
mov
jle
(bad)
das
test
sbb
push
sbb
lods
setbe
jo
es
xor
push
jnp
jo
push
loopne
dec
je
call
inc
aaa
inc
and
imul
mov
pusha
aam
popa
cmp
add
data16
sub
test
stos
(bad)
adc
loope
or
xchg
jb
jecxz
mov
clc
not
adc
jmp
xor
dec
pop
inc
jecxz
outs
bound
jae
test
pop
test
inc
push
mov
in
inc
jbe
sub
jbe
fild
shld
shl
xor
jo
adc
imul
lock
xor
jg
outs
xor
xchg
mov
and
pop
dec
mov
std
repz
mov
mov
xchg
sbb
and
xchg
(bad)
fmul
add
arpl
test
es
xchg
sbb
cmps
mov
js
jecxz
xchg
push
push
push
cmp
inc
jne
and
xor
add
cmc
lock
inc
nop
mov
jo
fs
push
mov
loop
inc
jmp
nop
cmp
mov
cs
mov
sub
mov
and
rol
fs
xchg
inc
and
and
add
inc
sbb
pop
adc
sub
movs
xlat
inc
jb
icebp
or
push
sub
cli
sub
xchg
xchg
push
dec
pop
iret
push
test
mov
aaa
gs
inc
inc
call
and
fimul
add
dec
dec
fcomp
pop
sub
scas
sub
ret
cmp
cmp
cmp
push
js
mov
add
(bad)
fmul
mov
cs
aad
pop
and
jmp
pop
push
cvtss2sd
fdivr
fist
add
out
call
or
cmp
adc
push
add
cdq
push
add
in
cmp
rol
dec
in
rol
stos
add
je
push
mov
inc
cmp
jo
sub
mov
es
dec
sub
idiv
sbb
pop
jl
sub
mov
les
sbb
adc
inc
retf
in
push
into
xor
push
adc
xor
mov
inc
pop
das
sbb
add
and
mov
les
fucomi
je
push
xlat
sub
sbb
push
pop
aaa
or
cwde
lea
sahf
aam
sub
adc
mov
test
jo
jg
into
sub
movs
pop
jmp
cs
sbb
push
(bad)
jne
and
aam
mov
int3
fistp
fadd
or
movs
sub
xor
pop
cmp
xchg
cmp
(bad)
movs
mov
xchg
jo
outs
dec
out
adc
dec
xor
jmp
push
and
push
adc
xor
mov
push
push
sub
mov
add
mov
(bad)
jge
inc
enter
ja
aas
pop
mov
xchg
adc
xchg
xchg
xchg
ror
ja
sub
push
mov
shr
sub
int3
cmp
xor
adc
shl
fmulp
pop
repz
test
fidivr
push
xchg
fcom
push
pop
jmp
ja
xchg
ret
adc
jmp
mov
pop
pop
sub
retf
xor
cwde
mov
iret
lea
xchg
movs
push
pusha
adc
sbb
dec
fsubr
or
hlt
or
push
sar
arpl
lea
lock
dec
cmp
pop
xor
or
in
ror
jmp
pop
in
cmps
xchg
sbb
inc
pushf
inc
mov
std
outs
mov
shl
lds
rol
or
lock
pusha
and
sub
shl
ins
mov
cmp
rcl
push
and
inc
sbb
les
push
jmp
cmp
sbb
or
inc
xlat
adc
sbb
outs
or
pop
push
data16
mov
xlat
mov
arpl
mov
add
lea
out
or
imul
pusha
dec
add
test
inc
mov
mov
sbb
dec
pop
out
outs
leave
push
inc
inc
pop
mov
mov
mov
sbb
mov
jns
or
add
add
pop
or
sub
add
ret
or
or
(bad)
sbb
adc
adc
adc
hlt
add
dec
cdq
imul
and
outs
inc
cmp
je
test
aaa
lds
and
inc
sbb
jp
aas
and
lods
sbb
adc
cmp
jnp
pop
sub
xchg
maxps
loopne
mov
loop
cmp
mov
in
loopne
push
dec
jmp
push
sar
jo
inc
or
inc
test
xor
aas
jb
pop
dec
xchg
push
mov
bound
inc
scas
mov
inc
cmp
bound
movs
sbb
(bad)
push
adc
adc
jno
outs
push
mov
sbb
pushf
push
and
cmp
repz
and
mov
mov
pop
ret
jl
cmp
mov
addr16
lds
or
rol
dec
bndldx
pop
prefetcht0
das
pop
and
sbb
adc
sbb
movs
test
sub
mov
mov
and
lock
mov
mov
out
xchg
push
and
inc
rcl
push
neg
adc
add
inc
xchg
sub
push
or
dec
inc
ss
sbb
sbb
fadd
es
add
xor
pop
retf
xor
add
mov
inc
mov
dec
enter
and
cwde
add
push
sub
pop
es
adc
imul
or
adc
(bad)
pushf
popa
dec
and
das
or
jg
add
loopne
or
push
jl
push
ficomp
into
sbb
and
into
movs
out
(bad)
fwait
jge
sbb
add
jmp
cmp
je
mov
inc
jne
mov
out
sub
jmp
and
je
adc
and
je
adc
nop/reserved
imul
mov
es
adc
cmps
imul
push
jecxz
test
add
push
dec
pop
shr
sub
inc
push
add
jne
rol
push
inc
or
inc
pop
adc
mov
cwde
lods
inc
push
add
rol
sub
sbb
and
add
or
in
outs
jne
xchg
pop
sbb
lock
add
ins
bound
or
or
popa
jb
add
sub
call
push
repnz
xchg
add
pop
or
movzx
push
bound
adc
inc
add
popf
sub
leave
int3
popa
mov
pop
inc
mov
and
adc
mov
rcr
mov
cmp
push
sub
fisttp
(bad)
lods
xlat
sbb
js
arpl
out
sub
xchg
rol
(bad)
and
adc
push
xchg
sahf
add
inc
sub
fucomi
cmp
rcl
adc
scas
out
sub
or
(bad)
ins
popa
das
or
or
jne
ins
adc
pop
inc
push
in
fmul
or
fwait
sub
ficomp
(bad)
aam
and
and
jle
sub
in
xchg
inc
inc
cdq
inc
mov
iret
jnp
test
fsubr
mov
out
jns
(bad)
cmp
test
fcom
jbe
push
mov
neg
inc
in
push
add
or
jns
jae
scas
sub
dec
ins
dec
sahf
cmova
pop
in
inc
cmp
ficomp
push
fcomp
sahf
mov
sahf
retf
ins
outs
sti
mov
hlt
mov
mov
push
loopne
xor
fild
push
lock
enter
stos
(bad)
out
jo
shl
inc
out
jne
(bad)
xor
push
imul
mul
pop
mov
jmp
imul
int3
push
ins
cmp
sbb
inc
push
pop
add
sbb
push
xor
jg
(bad)
fmul
inc
add
imul
xchg
fwait
or
mov
adc
xchg
fdiv
enter
inc
and
gs
dec
cmp
pop
jne
cmp
add
cmp
sbb
jne
pop
push
lock
arpl
sub
push
and
xor
lock
in
imul
cwde
dec
int3
inc
dec
add
jecxz
ds
inc
aad
sbb
xor
add
and
int3
add
pop
add
and
nop
mov
xchg
xor
inc
cvtpi2ps
inc
out
add
xchg
ss
and
xor
xor
cmp
or
xchg
sbb
int
or
pusha
nop
sbb
gs
out
or
mov
arpl
mov
sub
pop
movs
cmc
packsswb
sbb
xor
into
repnz
ss
icebp
xor
popa
cmp
call
sbb
sbb
push
dec
add
mov
cmp
add
rcl
cdq
add
sbb
mov
adc
fsub
adc
div
test
cwde
cmp
nop
cwde
push
add
push
test
mov
repz
add
pop
dec
pop
dec
xchg
into
jae
aam
inc
mov
inc
and
sahf
jbe
fstp
in
test
ds
je
or
outs
cmp
cmps
push
out
stos
retf
cmc
iret
cs
ds
inc
and
lock
push
mov
jle
mov
outs
pop
sbb
dec
add
loope
pop
add
out
pop
pop
aaa
rcr
fwait
sub
xchg
mov
(bad)
xor
cmp
repnz
lock
cmp
mov
fsubr
push
sbb
or
jmp
add
jo
lea
in
add
xchg
add
add
inc
xor
rol
add
imul
mov
icebp
je
jp
shr
dec
pop
push
leave
inc
sub
mov
mov
or
jmp
or
cmp
adc
stos
dec
xchg
add
and
or
xchg
adc
jb
out
add
mov
push
jo
in
repnz
or
movs
fld
jg
push
loope
xchg
cmps
das
daa
fwait
mov
xor
je
imul
cmp
mov
fdiv
add
xchg
dec
jns
sub
and
arpl
sbb
and
outs
fstp
adc
fdiv
inc
int
test
into
push
push
add
fisub
pop
test
das
and
fild
in
xor
fcomp
cwde
sti
jo
sbb
xor
imul
and
adc
pop
pusha
jle
xchg
add
inc
push
inc
add
outs
leave
popa
clts
cmp
xchg
inc
sar
jge
pop
adc
cmp
lock
clc
cli
mul
cmps
adc
out
nop
or
push
imul
sti
xchg
stos
fs
or
add
test
fs
pushf
xor
xchg
add
xchg
icebp
push
stos
push
push
(bad)
ja
sbb
dec
pop
pop
mov
call
nop
mov
cwde
mov
xchg
add
adc
push
jge
mov
and
xchg
adc
push
mov
(bad)
xor
push
inc
add
or
dec
sbb
sbb
dec
sbb
out
nop
call
aam
sbb
(bad)
jmp
adc
xchg
pop
xlat
add
sub
inc
mov
outs
push
inc
mov
sbb
xor
popf
cmp
sub
es
mov
(bad)
(bad)
cs
push
test
in
ror
daa
push
sbb
push
in
add
adc
inc
add
xor
ret
push
or
(bad)
shr
faddp
sub
mov
adc
add
xchg
cmc
xchg
pushf
inc
mov
jmp
jg
repnz
pop
ret
xchg
fild
int3
sub
push
and
mov
or
je
mov
mov
fdivr
fimul
jb
push
inc
jge
pop
mov
mov
or
fwait
movs
imul
cli
push
sbb
dec
adc
xlat
loope
lods
add
popf
pop
and
push
add
jg
(bad)
fs
jmp
sub
mov
add
and
or
mov
xchg
push
inc
inc
cmp
enter
cmp
call
das
scas
adc
mov
or
jno
pop
push
test
pop
das
fst
add
jo
xchg
out
dec
mov
daa
inc
mov
add
sbb
lods
retf
or
dec
ja
add
pop
mov
mov
xchg
inc
pop
add
mov
lea
xchg
add
mov
rol
stos
pop
mov
inc
push
adc
adc
dec
inc
lock
aaa
mov
pop
(bad)
xchg
and
dec
sbb
sbb
and
mov
mov
enter
xchg
inc
ret
xchg
ror
lock
sar
dec
xlat
jecxz
dec
xor
cs
out
cwde
data16
in
bound
inc
jmp
mov
pop
leave
movs
xor
rcr
clc
dec
cmps
cmps
and
and
and
add
sub
pavgb
sbb
in
add
dec
icebp
adc
mov
sbb
mov
or
jne
jmp
inc
jmp
dec
cmp
xchg
mov
aaa
jg
add
es
inc
mov
mov
pop
mov
and
add
xchg
shl
(bad)
and
enter
dec
inc
or
or
loopne
dec
mov
test
push
sbb
or
xor
and
mov
or
inc
mov
lock
jg
in
push
dec
mov
jmp
clc
push
dec
mov
inc
mul
mov
mov
add
mov
or
mov
sbb
jmp
arpl
jmp
and
sbb
cmp
add
jne
jle
mov
sub
cmp
test
pop
cmp
cmp
jmp
cmp
je
in
rcr
imul
jmp
adc
jbe
cmp
fist
retf
test
cmps
in
jbe
dec
or
inc
push
inc
pop
daa
pop
add
add
test
and
xchg
pop
push
sar
sbb
sub
pop
and
push
push
mov
and
add
xchg
fild
imul
outs
xor
aad
ins
in
out
inc
imul
pop
dec
mov
xor
cmp
sbb
pop
cmp
and
pusha
nop
(bad)
cwde
push
cmp
mov
sbb
pop
sbb
add
jnp
inc
push
cmp
ret
push
rol
daa
sbb
cmp
add
je
rol
int3
ss
add
stos
paddq
adc
add
fadd
hlt
or
les
(bad)
push
jne
add
cld
sbb
pop
(bad)
xchg
mov
sbb
fdiv
and
fisttp
out
enter
jb
mov
popf
lea
add
mov
aaa
cmp
and
cmp
add
inc
sbb
cmp
dec
push
jo
mov
aas
pop
mov
enter
sub
movs
jg
or
mov
mov
mov
neg
ins
ds
pop
mov
push
xor
push
cwde
test
mov
(bad)
nop
pop
adc
inc
loopne
fxch
je
xlat
push
and
dec
(bad)
push
jne
xor
sub
xchg
lock
rcl
jmp
fsub
rcr
jg
cmp
and
in
adc
add
push
inc
push
or
mov
mov
adc
sub
(bad)
or
jae
call
std
mov
mov
ins
fcomp
gs
and
in
adc
or
adc
and
dec
adc
mov
dec
cmp
pop
inc
test
jne
sbb
retf
and
fst
inc
xor
movs
mov
inc
mov
es
das
or
and
aam
mov
call
cmps
jge
rcl
or
aas
cmps
ss
loopne
ret
les
test
sub
mov
dec
mov
sbb
push
fdiv
cmp
stc
add
mov
or
add
pushf
or
aas
jg
sbb
das
shl
inc
je
leave
cmps
inc
jo
inc
mov
mov
jg
xlat
cmps
xor
or
pop
inc
adc
adc
test
out
inc
enter
or
adc
pop
jle
test
adc
jnp
outs
adc
sbb
je
xor
seta
ss
int3
int3
sahf
dec
mov
aam
fcomp
mov
dec
cmps
pop
or
add
daa
jmp
mov
into
add
sbb
mov
inc
dec
shl
movs
std
xor
sub
fadd
call
push
or
push
in
js
aam
cmp
push
xor
imul
imul
int
inc
or
sti
addr16
and
rol
mov
lahf
stos
mov
ds
and
mov
adc
enter
cmp
fucomp
bts
jne
jmp
sbb
adc
dec
aaa
xor
loop
adc
mov
add
loopne
enter
ret
pop
jmp
adc
sub
inc
mov
data16
pop
xlat
das
scas
and
xchg
mov
ins
mov
fist
nop
fs
sub
jbe
retf
hlt
push
mov
or
fcomp
retf
inc
xlat
pop
jnp
loopne
cdq
psubsb
inc
mov
jecxz
mov
jo
xchg
cwde
cmp
out
pop
and
cmp
push
in
push
mov
(bad)
ret
mov
add
or
mov
dec
push
inc
jnp
and
hlt
repnz
loopne
mov
add
sar
dec
in
cmp
ins
push
xor
inc
gs
iret
pushf
jne
dec
arpl
sti
dec
sbb
ror
sahf
dec
(bad)
and
cmp
push
inc
or
fst
(bad)
and
jmp
pop
inc
cmp
jge
aad
paddb
add
pop
cmp
mov
cmp
xor
cdq
arpl
jbe
sbb
pushf
ret
pop
mov
mov
xchg
inc
popa
or
inc
add
jae
inc
sub
je
aas
or
or
adc
sub
fisttp
inc
xchg
jmp
(bad)
lahf
rep
push
push
xchg
xor
scas
add
inc
or
rcr
ss
dec
adc
push
xchg
adc
xor
(bad)
adc
jo
mov
aam
arpl
(bad)
jecxz
inc
jmp
test
pop
stos
add
push
and
mov
xchg
or
arpl
leave
xlat
test
je
adc
dec
stos
add
rcl
mov
(bad)
retf
cmp
pusha
fsub
call
lods
xor
sub
test
in
call
adc
dec
and
xchg
(bad)
aam
movs
xchg
lahf
out
mov
cmp
dec
jecxz
js
inc
cmps
ins
jbe
sub
adc
inc
xor
or
sar
mov
sub
xor
and
test
inc
push
popa
rcr
sub
addr16
outs
enter
mov
mov
add
cdq
pusha
adc
adc
and
shl
cs
loopne
(bad)
push
mov
js
in
add
fidivr
or
rcl
test
(bad)
es
je
sar
adc
lods
inc
pop
mov
iret
ins
iret
xor
xor
add
call
add
outs
sbb
aas
mov
aaa
or
mov
jmp
xchg
enter
lds
and
jle
inc
push
xchg
cmps
pop
enter
pop
call
jno
ret
sbb
add
fsubr
ins
push
lea
push
mov
and
cmc
or
or
xor
jge
lock
test
push
repnz
dec
out
ins
sbb
and
inc
mov
(bad)
adc
push
leave
fsub
add
and
lock
fisttp
pop
push
stos
sbb
test
loope
and
imul
repz
pop
(bad)
sub
mov
clc
ret
bound
fsub
inc
mov
test
fcmovne
add
iret
add
pop
cmp
mov
lea
or
inc
cmps
or
inc
pushw
mov
inc
and
and
jnp
jp
xchg
fimul
hlt
add
ret
lsl
add
daa
jno
add
pop
sub
lods
jmp
dec
or
test
int3
push
repnz
ret
clc
sbb
lea
outs
test
and
jae
mov
mov
push
jo
(bad)
fcomp
xor
dec
sub
add
add
add
fcom
sbb
inc
loopne
in
fimul
in
sub
dec
pop
pusha
nop
push
mov
mov
jl
sbb
mov
(bad)
leave
loopne
add
add
fcom
popa
ret
call
enter
fsub
jmp
and
sub
fmul
shl
iret
pop
cli
jne
push
mov
inc
stos
rol
fwait
mov
clc
pop
mov
ror
cld
lock
sbb
jo
inc
iret
jg
jp
push
pop
cmp
mov
test
push
cwde
jge
call
jle
aam
push
lar
enter
mov
jg
pop
xor
push
sub
sbb
dec
loopne
xchg
mov
into
in
mov
ins
push
push
ret
xor
dec
xchg
jbe
cmp
sbb
jnp
imul
push
jl
pop
mov
sub
shl
fwait
sub
push
push
inc
cmp
sbb
popf
bound
push
pop
dec
call
bound
pop
fisttp
enter
pop
icebp
or
or
popf
pop
sbb
and
movs
sub
inc
aad
or
or
mov
cmp
adc
fcmovnb
ret
bound
(bad)
jae
rcr
cmp
sar
call
add
test
push
call
cmps
mov
and
xor
in
xchg
pushf
pushf
aaa
je
movs
or
loop
movs
idiv
cli
jo
xor
int
inc
cmc
add
add
sbb
push
xor
add
push
jp
mov
and
mov
jnp
cwde
cmp
jl
inc
test
push
add
sti
mov
lock
push
jmp
dec
mov
cdq
pop
mov
jne
cmp
and
mov
je
jo
dec
pop
push
push
push
jecxz
cli
enter
out
add
push
dec
lock
(bad)
scas
fwait
ja
outs
out
(bad)
or
dec
and
lods
test
mov
sbb
push
std
cmp
pop
loop
or
sbb
ficom
imul
fimul
dec
les
dec
mov
cmp
(bad)
dec
mov
movups
out
cmc
stos
and
add
push
fidivr
ret
sbb
adc
popa
inc
sbb
xor
sub
fsub
jno
ss
adc
add
add
mov
xor
sbb
jo
and
(bad)
mov
inc
jmp
mov
rol
cmp
adc
psubq
bound
sbb
sub
push
cmc
xchg
mov
pop
or
(bad)
enter
push
adc
movs
and
adc
cli
movs
pop
jns
pop
sbb
pop
dec
aas
adc
cmp
mov
dec
sbb
out
or
je
adc
or
mov
push
lock
mov
push
test
xor
inc
shl
sti
pop
loopne
hlt
in
fwait
or
xchg
das
dec
stos
jnp
xchg
jne
xor
adc
sar
cdq
pop
cmp
sti
add
sub
iret
add
dec
fcom
rol
retf
es
fdiv
or
add
adc
lock
sbb
add
mov
call
jmp
pusha
inc
fmul
push
mov
pop
sbb
enter
mov
pusha
int3
sahf
jns
dec
push
fcomp
mov
inc
jns
mov
cmp
movs
add
(bad)
lock
loop
stos
aam
dec
aam
loopne
cmps
jecxz
pop
and
(bad)
in
push
bound
mov
jb
pop
adc
in
pop
sbb
add
dec
jge
ret
xor
push
push
cmp
js
loope
cs
dec
jp
add
imul
cmp
pop
lods
dec
or
sbb
rcl
pushf
fcom
(bad)
pusha
add
rcl
adc
or
out
push
mov
sub
cmp
(bad)
inc
repnz
push
xor
pop
loopne
rcl
inc
aad
cmps
cmp
inc
cwde
or
dec
mov
or
cmc
in
and
push
scas
jno
or
sbb
mov
cmc
lahf
loopne
inc
mov
dec
cmp
shr
sbb
mov
push
mov
and
(bad)
outs
iret
cmp
push
sbb
in
pop
into
in
sub
and
mov
inc
mov
mov
stos
cmc
imul
call
sbb
outs
cs
and
push
inc
xor
mov
loopne
mov
add
or
xchg
pop
sbb
ds
jecxz
push
xor
pand
or
shl
fcomp
fs
stos
mov
jl
push
aad
lock
pop
cmp
ret
addr16
popa
inc
adc
ja
gs
leave
ror
push
bound
adc
and
jmp
mov
xchg
xor
add
or
lock
call
stos
jl
xchg
pop
das
addr16
push
xchg
bound
add
test
dec
sub
pop
test
fisttp
jp
xchg
xor
aaa
dec
push
hlt
imul
and
(bad)
test
cmps
lea
lods
adc
cmp
or
daa
adc
je
mov
test
or
or
mov
mov
clc
jmp
out
or
sbb
jne
push
stc
pop
and
popa
les
sbb
enter
sbb
das
psubb
and
xor
xchg
fild
test
leave
mov
mov
call
sbb
call
fimul
push
inc
jb
dec
call
cmp
mov
in
mov
inc
xor
ret
arpl
cmp
mov
test
pop
sbb
or
icebp
inc
pop
sbb
dec
clc
push
mov
test
xchg
pop
mov
mov
leave
add
and
jns
pop
xchg
sbb
int
lock
cwde
jne
repz
adc
add
adc
push
and
cmps
test
push
adc
rcl
mov
repnz
mov
(bad)
adc
mov
adc
mov
cwde
popa
fld
mov
jo
cmp
lds
mov
jge
adc
arpl
sbb
push
aaa
sbb
mov
test
jb
mov
inc
rol
and
pop
pop
and
cmc
fadd
or
inc
adc
pop
(bad)
fsubr
stos
inc
inc
aad
pop
jp
fwait
cmp
mov
pop
mov
ins
xor
rcl
mov
test
add
push
adc
jns
and
or
pop
repnz
dec
sbb
and
jmp
aas
adc
cmp
mov
je
xchg
push
push
out
adc
push
pusha
cld
xlat
sub
push
sar
repz
or
or
pop
inc
jmp
(bad)
mov
call
call
or
dec
test
pop
push
popf
sbb
cmp
sub
in
jl
xor
jl
or
in
mov
adc
cmc
in
mov
in
test
add
jg
adc
adc
sub
inc
sbb
inc
add
jmp
mov
xchg
aas
and
add
hlt
jle
sbb
int
int3
mov
lock
xchg
jmp
pop
push
push
sbb
add
loopne
mov
ror
popa
pop
icebp
shl
cmp
std
cwde
adc
icebp
punpcklwd
push
loope
mov
xchg
cmps
jge
add
sbb
in
pop
and
inc
add
or
lds
sub
jecxz
or
loopne
and
imul
stos
inc
add
adc
add
cmps
sbb
movq
adc
adc
mov
jmp
or
fcom
or
fcom
sbb
bound
pop
mov
jo
xchg
mov
and
gs
fild
sub
push
xor
rol
nop
sbb
es
test
iret
loope
cmp
sahf
or
inc
push
and
push
add
inc
add
jo
jmp
arpl
(bad)
rcl
enter
xchg
and
clc
lock
cmps
mov
inc
jbe
nop
xor
punpckhdq
les
sub
pop
stos
enter
dec
call
add
xor
or
pushf
push
dec
cwde
pop
fwait
add
xor
push
addr16
jecxz
icebp
rcl
add
(bad)
fcmovnb
inc
inc
sbb
push
neg
loope
in
(bad)
sub
cmp
popf
xor
push
jle
inc
rcl
in
(bad)
xchg
jno
pop
pop
shl
das
pop
iret
jg
imul
push
stc
scas
popa
enter
and
fmul
sbb
adc
cmp
and
movs
repz
out
sbb
pop
gs
sbb
pusha
or
stc
push
push
push
sub
add
mov
mov
adc
mov
push
repz
fsub
shl
add
cmp
xlat
test
pop
xor
outs
ret
les
mov
ja
les
jmp
mov
xchg
ret
adc
sahf
pop
test
mov
or
mov
mov
loopne
sbb
outs
sbb
sub
in
in
(bad)
or
mov
sub
(bad)
rol
sub
cmc
not
cmp
and
(bad)
xchg
ret
pop
xchg
lahf
fsubr
xor
lea
add
les
(bad)
dec
xchg
push
repz
pusha
cmp
adc
repnz
inc
sub
call
and
lock
cmp
push
cmp
mov
sub
rol
icebp
push
or
sub
nop
xor
and
push
sbb
or
rcr
stc
or
add
cmps
add
inc
repz
fimul
and
pop
mov
sbb
or
mov
mov
dec
sbb
outs
dec
pusha
test
cmp
adc
push
and
xchg
shl
cmp
ds
ja
ret
add
cs
mov
cmps
cs
add
aaa
icebp
mov
push
cmp
daa
fadd
mov
mov
dec
movs
loop
ret
outs
out
cmp
sub
cmp
lods
loopne
mov
je
outs
(bad)
jecxz
bound
jne
out
push
inc
sbb
stc
sbb
add
popf
pop
and
fs
xchg
push
sub
rol
dec
or
arpl
adc
jae
dec
adc
nop
movs
push
cmp
stos
mov
pop
outs
imul
ds
cmp
cmp
fstp
xchg
pusha
test
and
pusha
fisttp
pop
mov
adc
push
fimul
(bad)
sbb
xchg
or
loop
ret
and
icebp
bound
arpl
shld
sti
mov
fsub
mov
push
xor
aam
mov
inc
dec
imul
inc
cmp
and
mov
adc
cmp
add
(bad)
adc
ror
xchg
xor
in
add
inc
jg
imul
add
cmp
das
jl
pop
sbb
ins
push
jo
(bad)
imul
data16
outs
inc
out
pusha
or
in
or
inc
repz
mov
xor
imul
ins
xchg
cli
pop
and
jne
xor
push
xor
scas
push
data16
inc
cdq
and
outs
or
or
inc
dec
mov
fucomi
fdivr
xchg
std
push
inc
mov
mov
push
arpl
and
movs
outs
adc
jo
xor
mov
inc
cmps
out
int
into
adc
mov
and
mov
jbe
push
sar
or
movs
inc
add
or
cmp
mov
lock
shl
lods
inc
sub
mov
mov
xchg
popa
mov
sub
push
(bad)
add
or
pop
outs
adc
sbb
sgdtd
sub
push
fcom
pusha
cmovnp
pusha
pop
mov
push
bound
loopne
or
dec
mov
adc
dec
hlt
movups
xlat
dec
mov
and
fcom
sbb
mov
push
add
dec
test
mov
xchg
enter
lahf
(bad)
aad
xor
jg
cli
int3
out
iret
pusha
or
add
js
ins
ret
out
in
pop
lds
ror
sub
enter
movs
push
push
xor
js
sbb
(bad)
or
mov
imul
cmp
pusha
jb
cwde
in
pop
add
je
mov
inc
adc
repz
lahf
jecxz
loopne
jo
shl
cmp
dec
xchg
test
movs
xchg
mov
add
out
mov
in
daa
enter
adc
loop
sub
int3
es
add
sbb
push
int
test
push
pop
push
inc
lock
sti
jb
inc
push
mov
and
jg
cmp
out
push
xor
scas
dec
push
jle
pop
ja
in
sub
mov
test
and
cmp
cs
xchg
xchg
or
xor
lods
dec
mov
sbb
inc
jge
and
mov
sbb
sub
(bad)
dec
xor
inc
dec
push
rcl
jb
inc
and
pop
and
leave
and
cmp
inc
jb
xor
pop
and
inc
inc
rcl
xor
int
push
xor
sub
mov
(bad)
sar
fwait
loope
push
daa
sub
xor
xor
xor
adc
mov
mov
(bad)
icebp
xor
inc
mov
jg
xchg
(bad)
retf
outs
pushw
outs
xor
or
mov
test
push
cmp
pop
(bad)
xor
push
fs
stos
je
sbb
ja
ss
sar
je
dec
mov
lods
cmp
js
sar
(bad)
mov
scas
rol
push
ss
push
rcr
adc
cmp
js
add
xchg
inc
cmp
fisub
add
ret
movs
pop
mov
pusha
xchg
mov
icebp
test
xchg
rol
mov
aaa
adc
test
in
pop
dec
and
push
sbb
inc
jne
in
mov
inc
mov
push
(bad)
in
inc
inc
dec
dec
enter
inc
jo
push
push
repz
sbb
push
or
and
jle
mov
rcr
push
xchg
mov
cmp
xchg
(bad)
or
mov
add
cli
movs
test
movs
pop
dec
xor
pop
mov
pop
mov
popa
iret
sub
sbb
xchg
fwait
adc
fisub
loop
mov
and
jne
push
mov
out
call
mov
test
ss
inc
add
adc
js
mov
cmp
pop
nop
repnz
lods
outs
inc
pop
addr16
enter
sub
sub
inc
loope
mov
imul
xchg
repz
fcmovb
bound
push
sbb
add
add
shl
movs
and
cli
call
shr
hlt
jl
rcr
sub
and
or
aam
mov
mov
adc
add
fisubr
sub
cmp
jl
daa
dec
sbb
fsub
int3
popa
cmp
fwait
xchg
dec
and
rsqrtps
aam
imul
outs
call
shl
outs
das
cmp
jno
ror
pop
push
sbb
mov
mov
sti
shl
out
call
sub
pop
iret
fild
sbb
enter
lahf
sti
sbb
fwait
jl
mov
ds
dec
cld
fcom
es
fcmovb
ror
xor
in
data16
add
cmp
pop
es
icebp
xor
or
sbb
dec
sub
xor
xchg
cmp
loopne
push
loopne
cmc
fs
or
inc
cli
dec
sbb
sar
(bad)
ins
mov
sbb
dec
rol
(bad)
sbb
cmp
or
ins
cli
imul
xchg
add
add
ins
icebp
das
dec
jmp
rol
add
or
dec
ds
jbe
pusha
add
jo
or
es
aaa
(bad)
in
and
or
push
movs
pop
jmp
inc
push
in
lods
idiv
adc
pop
(bad)
rol
push
std
mov
rcl
dec
jne
pop
jb
xor
jmp
and
xor
and
xchg
mov
lods
loopne
test
or
(bad)
cli
retf
fdivr
cwde
call
test
push
sbb
jne
push
mov
jo
sub
add
pop
ror
repz
adc
shr
ja
lahf
adc
aas
xor
push
push
xor
in
add
fsubr
inc
add
sub
fcmovnbe
sub
inc
sahf
cmc
cmp
xchg
aaa
das
push
xlat
fmul
enter
test
push
pusha
rcr
fdiv
sbb
sbb
clc
push
add
mov
pop
xor
sub
jl
inc
shl
sbb
mov
add
inc
ror
loopne
popa
ror
rol
pop
inc
adc
ret
cmp
popa
sub
xor
inc
fadd
daa
add
pop
jne
not
fsub
sbb
jle
aaa
xchg
and
add
add
dec
inc
jne
mov
arpl
cmp
push
inc
inc
fstp
inc
aaa
cli
sbb
dec
sbb
sub
pop
aam
mov
es
inc
cmp
pop
cmps
adc
sub
cmp
adc
inc
pop
mov
test
sti
push
mov
pop
jle
adc
mov
loop
and
adc
or
test
and
adc
jg
cmp
cmp
or
rol
xchg
add
nop
mov
sub
pop
pop
pop
ja
or
or
(bad)
jne
ret
mov
or
cmp
ret
push
movlps
inc
push
fild
inc
test
cs
sub
add
or
mov
add
pop
mov
adc
hlt
pushf
ret
sub
imul
and
push
xchg
mov
cmp
out
xchg
push
cli
fs
call
movs
cmp
mov
shl
cwde
or
jp
mov
add
mov
mov
nop
or
pop
shl
(bad)
fstp
dec
add
and
cmp
pop
jmp
and
sbb
inc
pusha
test
js
adc
adc
mov
movs
movs
xchg
jmp
inc
and
and
add
push
xor
jl
and
or
sub
pop
shr
jne
and
sbb
adc
cmp
lods
sub
push
mov
cmp
xor
test
cmp
sbb
add
pop
lock
mov
or
es
ret
(bad)
test
adc
psubusb
add
lods
aaa
adc
xor
ins
loopne
bound
xchg
test
mov
add
fnstenv
movs
data16
cmp
xchg
dec
or
add
dec
pop
or
dec
or
fcom
fnstcw
ss
inc
in
xchg
sbb
sbb
ins
add
push
mov
in
aam
sti
cmps
add
lods
and
call
out
add
cmps
test
add
dec
xchg
xchg
in
sub
out
or
inc
mov
cmp
sbb
jg
inc
into
push
aam
repz
xchg
clc
push
into
mov
out
cmp
push
add
and
dec
daa
and
es
adc
push
(bad)
mov
push
dec
ins
bound
inc
arpl
ss
sbb
push
jmp
mov
js
inc
cmps
push
sar
outs
lock
xor
shr
mov
movs
adc
movs
ins
bound
dec
and
and
or
(bad)
call
pop
push
jo
hlt
aad
mov
mov
cmps
add
mov
xlat
xchg
pop
push
mov
add
mov
push
mov
out
cld
cmp
cli
mov
push
push
cli
cmpxchg
add
sub
stos
test
dec
inc
fcomp
sub
mov
pop
cmps
mov
les
dec
cwde
cmp
xor
popa
div
call
xchg
xchg
pop
stos
test
push
add
lea
adc
inc
pop
mov
scas
mov
ret
ins
lea
ret
push
pop
adc
pop
out
xlat
retf
(bad)
fist
add
xlat
xor
loope
mov
xor
push
in
inc
in
lods
sub
jle
jmp
or
pop
bound
test
cld
cmp
outs
pushf
mov
arpl
add
(bad)
addr16
out
aad
sbb
mov
(bad)
mov
sbb
test
add
xor
adc
pusha
push
xchg
adc
in
cmp
dec
jge
aam
add
cmp
icebp
in
shr
xor
(bad)
ror
xor
mov
or
sub
jmp
jo
mov
xchg
inc
shl
pop
std
xchg
xchg
call
add
mov
cmp
or
cmp
arpl
jmp
and
test
ret
movs
ds
mov
cli
imul
(bad)
in
xchg
mov
adc
inc
inc
jg
push
loope
mov
sub
push
mov
clc
ds
test
mov
add
push
ds
enter
and
cmp
cs
clc
shl
scas
jb
adc
aas
sti
shl
cli
pop
test
dec
and
mov
(bad)
pop
cmp
add
dec
loop
inc
push
loope
or
mov
jg
adc
dec
push
rcl
inc
pop
dec
js
xor
mov
pop
cmp
add
movs
add
(bad)
stos
pop
iret
je
std
push
lods
inc
or
push
cmp
xor
enter
jmp
mov
sbb
mov
aad
int
test
loop
push
adc
sar
imul
sbb
jnp
push
data16
std
pop
(bad)
dec
and
enter
add
adc
lods
in
mov
add
dec
adc
test
adc
aas
int
inc
inc
je
inc
or
inc
(bad)
push
mov
add
sbb
jge
nop
lahf
nop
retf
and
and
pop
pop
xchg
js
loop
inc
jne
or
push
loope
loopne
or
xor
mov
fisttp
ss
adc
je
jo
not
js
add
cmc
jmp
xor
mov
adc
xor
test
loopne
out
push
xor
xchg
xor
(bad)
aad
add
add
adc
in
enter
out
test
push
adc
in
add
jmp
and
xchg
or
jge
call
sbb
xchg
push
stos
add
repnz
popf
mov
and
sbb
sub
cmps
push
leave
push
(bad)
push
jmp
sub
aam
xchg
and
inc
(bad)
aam
pop
and
add
or
lock
in
or
push
mov
xlat
icebp
push
lods
or
out
cwde
sbb
add
ror
or
and
or
sub
fiadd
inc
xchg
psubq
(bad)
jmp
sbb
or
(bad)
lock
mov
add
adc
pop
mov
add
lock
into
mov
jl
add
mov
jb
ss
sbb
popf
jmp
stos
pop
inc
and
xchg
mov
mov
iret
sbb
xchg
fild
push
dec
in
push
add
aaa
in
push
and
cmp
test
sbb
jbe
sbb
cmp
inc
or
ret
test
inc
in
mov
adc
mov
and
dec
loopne
fimul
and
push
or
rdtsc
nop
jmp
into
adc
pop
xchg
cmc
test
push
das
cmp
outs
inc
aas
dec
xor
mov
pop
push
cmp
adc
aaa
sbb
xchg
xchg
dec
xchg
mov
xchg
sbb
adc
fst
iret
push
or
xchg
int3
shl
mov
xor
xor
inc
cmp
xchg
cmp
and
inc
cmp
ret
jg
je
pop
mov
and
add
sbb
xor
or
push
sbb
cld
xchg
xchg
ds
fist
arpl
sub
test
loopne
pop
mov
shl
and
push
inc
push
loopne
add
(bad)
in
push
div
mov
adc
cmp
jne
xor
dec
test
mov
mov
mov
push
and
rcl
xchg
push
adc
inc
ret
dec
mov
test
clc
cmp
add
icebp
push
je
aad
pop
out
inc
cmp
xor
ins
dec
mov
add
sbb
sbb
and
mov
push
adc
les
xor
pop
add
mov
mov
jbe
retf
jl
inc
js
add
or
inc
div
push
xor
lock
shl
sar
push
dec
add
add
mov
adc
popf
sub
(bad)
clc
repnz
push
das
push
aas
jbe
and
cmp
fild
or
add
daa
sub
sti
addr16
jmp
je
imul
inc
jl
das
test
mov
jl
shl
dec
cmp
or
sbb
imul
fist
js
mov
outs
sub
test
arpl
test
sti
sub
popf
repz
out
adc
push
sti
js
jb
aam
sbb
and
xlat
pusha
push
push
fisub
inc
pop
and
add
loopne
call
adc
fdiv
shl
mov
adc
add
add
cli
cmp
jle
pop
pop
lods
sub
int
and
mov
or
xor
cmovb
add
sub
adc
ret
adc
mov
pop
or
or
mov
add
or
add
fdiv
loopne
fmul
lock
mov
pop
and
mov
add
popf
add
aam
mov
inc
and
ret
in
repz
enter
call
mov
sub
aad
mov
aam
cdq
scas
inc
aam
(bad)
inc
sub
mov
push
(bad)
in
mov
adc
xchg
add
push
mov
aaa
arpl
in
ret
nop
push
gs
dec
das
cmp
sub
lahf
pop
dec
adc
iret
sbb
in
shl
ins
loopne
inc
pop
js
mov
mov
push
outs
and
ja
xor
ret
sub
stc
jge
sbb
push
in
loope
pusha
mov
mov
push
xchg
pop
mov
call
cmps
jmp
add
xchg
ss
fsubr
push
inc
and
sbb
and
sbb
mov
fst
fninit
adc
in
enter
or
jnp
push
push
movs
push
adc
cmc
(bad)
cmp
pop
jno
push
enter
es
mov
push
popa
or
inc
pop
inc
enter
dec
mov
pusha
pusha
and
pop
nop
cwde
cmc
push
add
sbb
es
or
js
add
pop
arpl
adc
outs
adc
push
cwde
ror
inc
(bad)
je
jo
xor
push
inc
mov
das
and
aaa
les
(bad)
cmp
inc
inc
jl
or
push
inc
add
jmp
and
jnp
shr
fist
or
in
cmp
ror
shl
inc
cld
push
pop
xor
sahf
adc
cmps
and
addr16
inc
int3
sub
xor
jbe
jle
xchg
mov
mov
inc
mov
in
outs
add
inc
xor
xor
fimul
xchg
cmp
out
and
inc
pop
adc
pop
sub
cli
mov
add
or
sbb
shl
or
js
retf
aad
mov
or
movs
lea
imul
and
cmps
pusha
rol
sub
sar
xchg
xchg
inc
daa
sub
sbb
xchg
loopne
(bad)
popa
movs
or
icebp
dec
mov
ins
cwde
jge
ss
pop
or
sub
or
inc
sahf
add
fist
dec
or
xchg
data16
aas
push
(bad)
movs
not
or
add
mov
push
je
add
dec
es
aaa
pop
pop
mov
dec
inc
into
hlt
dec
call
or
xchg
and
mov
push
adc
fadd
push
add
out
mov
mov
retf
faddp
jmp
dec
es
loope
nop
add
cmp
jle
cmp
hlt
mov
jo
and
out
and
daa
sbb
lds
sub
retf
je
dec
add
jbe
jle
or
mov
sub
xor
or
add
cmp
or
lock
or
ret
cmc
add
pop
mov
add
jmp
pusha
fistp
addr16
inc
xchg
add
cld
mov
or
add
inc
xchg
lock
movs
rol
add
call
xchg
movs
jl
jb
mov
mov
jg
push
sbb
jno
adc
xor
pop
cmp
push
ret
dec
jl
and
cmp
xchg
jbe
pop
jb
adc
xor
push
xor
pop
jg
add
add
inc
pop
leave
jp
ret
jg
jmp
scas
inc
dec
dec
xchg
(bad)
int
inc
cmp
iret
ret
sub
lods
sbb
fisub
dec
pop
in
mov
jne
and
xor
sbb
aam
jo
xchg
mov
adc
inc
fsqrt
es
pop
mov
mov
push
mov
mov
ja
add
pop
adc
and
daa
js
pop
je
pop
xchg
ja
mov
ins
push
loopne
in
mov
and
jns
ds
pop
push
arpl
dec
fmulp
cmp
push
push
je
cmps
xchg
xor
mov
add
sub
cmp
push
xor
adc
rcr
or
movs
cmp
fcom
and
test
add
dec
test
push
adc
in
mov
ins
gs
gs
imul
sbb
pop
add
shl
outs
push
(bad)
fwait
xchg
(bad)
test
adc
add
add
(bad)
jnp
pop
imul
out
xchg
pop
add
je
ss
mov
add
push
or
mov
mov
aas
rcl
setg
jo
jb
ucomiss
bound
ins
inc
imul
pop
shl
ja
test
cmps
jo
pop
inc
add
push
add
nop
and
push
mov
sub
daa
push
jg
idiv
sub
ins
das
je
icebp
(bad)
mov
and
mov
daa
mov
cmp
pop
mov
jne
push
pop
jb
arpl
sbb
sbb
outs
dec
pushw
das
gs
add
pop
ja
outs
inc
mov
out
or
ror
mov
mov
xchg
mov
sbb
les
cmp
and
shl
xor
arpl
adc
cmp
inc
and
mov
push
aad
outs
nop
cmp
inc
jg
add
inc
add
sub
dec
pop
scas
and
mov
mov
dec
pop
pop
xor
lea
lods
sbb
nop
mov
sub
imul
push
dec
jmp
jl
cld
mov
and
test
add
mov
test
dec
lds
movs
hlt
add
dec
mov
dec
jp
lods
or
push
daa
add
movs
xchg
or
ret
sub
and
retf
mov
jp
mov
dec
jne
mov
js
jne
pop
(bad)
and
inc
cmp
int
lods
dec
mov
xchg
hlt
xchg
repnz
add
dec
jns
add
aad
push
push
xor
pusha
ror
pusha
dec
nop
add
xchg
pop
dec
xor
cmp
repz
add
push
mov
ins
adc
daa
and
ja
sbb
loopne
push
mov
pop
jmp
push
inc
xor
inc
add
fdivr
rcr
mov
test
nop
sbb
nop
retf
push
or
dec
js
or
add
or
add
rol
add
pop
push
mov
or
ret
ja
mov
and
arpl
ds
or
add
sahf
out
out
shr
push
mov
push
jbe
aas
add
xor
mov
and
add
movs
xor
add
push
scas
adc
push
ja
xor
mov
pop
es
dec
dec
dec
inc
push
pop
ins
enter
jp
pop
and
movs
xor
and
add
lea
mov
push
ret
(bad)
into
mov
add
push
push
add
pop
or
or
or
or
or
repz
or
push
movups
adc
repz
adc
push
pop
repz
repz
sbb
sbb
mov
pop
and
and
and
adc
fdivr
iret
sar
dec
or
xor
iret
repz
fs
xchg
repz
repz
retf
out
call
inc
sahf
out
sahf
push
arpl
movs
jns
out
mov
into
fsubr
cvtps2pd
out
push
or
or
add
dec
sub
xchg
retf
push
adc
mov
or
or
test
sbb
dec
sub
xchg
retf
or
jb
in
sub
sub
pop
push
mov
sub
adc
retf
dec
adc
in
inc
pop
dec
sbb
movs
dec
sbb
xchg
push
cs
dec
cmps
dec
sub
pusha
jb
test
popa
imul
movs
bound
arpl
adc
and
and
addr16
push
das
mov
push
or
xchg
rol
push
add
fisttp
fsub
ss
pop
dec
dec
cmp
and
jle
inc
push
lea
rcr
js
lock
test
jp
popa
or
pop
push
dec
js
ss
clc
push
adc
and
pusha
add
jp
jp
jmp
enter
iret
pop
push
or
mov
push
pop
pop
enter
dec
call
fidiv
add
add
pop
push
pop
lea
add
sub
adc
push
mov
ret
ins
xchg
test
inc
clc
mov
inc
stos
and
inc
pop
loop
dec
pop
adc
fmul
pop
jmp
test
jae
shl
and
add
sub
mov
lahf
jbe
sysenter
dec
or
lea
sbb
cld
and
adc
inc
cmova
adc
movs
push
dec
call
sub
dec
clc
push
xchg
push
or
loope
sub
sub
sub
addr16
inc
sub
mov
pop
fs
xor
or
cs
push
movs
add
ins
or
xchg
outs
dec
js
dec
adc
xchg
test
pop
ret
imul
xchg
xor
xor
(bad)
jns
js
inc
fstp
or
xchg
test
dec
add
and
xor
arpl
push
jb
mov
gs
jmp
and
imul
rdmsr
xor
xor
out
fcmovb
lock
out
js
pop
push
pusha
adc
push
js
je
push
jo
(bad)
adc
and
push
cmps
add
inc
sbb
lahf
data16
mov
or
ja
dec
dec
out
out
call
adc
push
push
dec
movs
pusha
xor
pop
xor
inc
mov
and
hlt
lods
sbb
dec
push
movs
pusha
js
dec
leave
pop
je
dec
jle
sub
mov
jmp
cmp
imul
cmovae
retf
in
sub
test
imul
lahf
or
pop
punpckhbw
dec
inc
mov
dec
adc
sbb
dec
inc
push
(bad)
push
sbb
aaa
daa
cwde
add
jmp
jecxz
add
jl
mov
jg
xor
jge
adc
mov
pop
pop
mov
sbb
add
fsub
push
dec
and
push
inc
dec
mov
push
push
add
mov
sahf
and
and
psllq
imul
dec
shl
xchg
mov
or
ins
pushf
ret
push
(bad)
shr
or
xor
xchg
popa
push
push
ret
sub
xchg
dec
ret
cmp
sub
push
mov
lds
inc
or
sub
add
inc
xor
idiv
cmp
hlt
mov
mov
lea
push
daa
cwde
mov
inc
je
or
ror
sbb
cmp
sub
pop
pop
ret
mov
loopne
mov
mov
aad
sub
xchg
sub
cmp
cmp
inc
sbb
fisub
dec
pop
ret
push
and
pop
inc
inc
mov
cmp
mov
mov
das
inc
ret
xchg
sahf
jmp
and
or
sub
push
adc
inc
mov
cmp
cmps
lea
xchg
xor
mov
add
(bad)
jle
das
jl
cdq
jae
push
push
lahf
inc
and
jo
adc
adc
mov
stos
adc
or
add
shr
and
jo
push
cmps
adc
inc
cmps
aaa
mov
lea
stos
cmp
pop
ret
cmp
inc
add
mov
sbb
or
retf
cmp
xchg
(bad)
stos
rcr
add
cmp
inc
sbb
ja
ds
mov
push
xchg
cmp
(bad)
not
push
fiadd
fs
push
mov
push
ins
sahf
adc
cs
or
inc
icebp
jl
push
or
adc
dec
test
(bad)
pusha
int
push
mov
push
or
pop
(bad)
and
cmc
mov
pop
sbb
pop
mov
jmp
cmp
jbe
retf
push
push
int
int
inc
push
lds
dec
popf
xchg
push
out
jg
cld
xchg
mov
loop
push
dec
call
sbb
inc
dec
das
push
xchg
sub
xchg
leave
xchg
pop
out
sbb
inc
pop
mov
mov
jg
repz
adc
cmps
add
leave
push
mov
inc
outs
fsubr
mov
push
and
mov
dec
leave
inc
or
call
out
in
push
or
es
push
jmp
jbe
add
push
and
add
push
xor
call
xor
push
ds
sbb
je
add
add
push
pop
pop
xor
inc
ds
or
adc
in
test
shl
and
inc
adc
mov
or
mul
push
and
inc
fimul
pusha
fld
loop
push
je
repz
test
adc
sbb
imul
gs
xchg
sahf
pop
or
cmp
add
add
pop
sub
es
pop
(bad)
jo
movs
mov
push
(bad)
and
push
adc
pop
jl
or
and
hlt
cmp
jge
dec
jne
sub
sbb
fwait
out
stos
dec
outs
pop
pop
push
mov
gs
sbb
cmc
imul
mov
fbstp
int3
fsub
pop
call
in
pop
test
mov
popa
or
call
fs
mov
and
test
inc
push
add
sbb
cmp
sub
adc
mov
mov
xchg
and
test
adc
dec
popf
(bad)
or
and
clc
sbb
mov
cmps
jmp
es
add
jecxz
dec
(bad)
aam
ret
or
dec
mov
inc
mov
repz
mov
add
and
jb
pushw
ret
sub
test
jbe
sbb
call
sbb
cmp
data16
jl
pop
xor
sbb
push
test
or
adc
pusha
sbb
test
xor
int
icebp
push
les
pop
or
pushf
dec
sahf
das
inc
jnp
js
xchg
aad
mov
test
mov
push
sub
outs
jmp
add
and
sbb
cs
pop
dec
fild
dec
fwait
ins
iret
inc
dec
xor
jl
bound
lea
arpl
pop
mov
ins
dec
jecxz
nop
dec
pop
or
or
push
and
and
retf
dec
lods
adc
cmc
ficom
fcmovnb
mov
(bad)
adc
and
or
out
movs
cmp
je
add
leave
in
clc
dec
hlt
shl
cs
xchg
inc
jle
adc
xor
inc
stos
mov
bnd
inc
ja
xor
xchg
mov
mov
ss
adc
add
jb
frstor
push
add
es
cmp
jnp
mov
push
enter
cmps
hlt
xor
ret
test
popa
and
cli
jo
dec
sbb
test
add
add
sbb
ret
sbb
push
mov
add
mov
cdq
push
pop
inc
inc
stos
inc
pop
adc
imul
jo
leave
add
in
enter
cmp
xchg
rol
xor
enter
add
dec
or
ror
call
fwait
stc
aad
push
xor
ret
lea
xchg
push
or
retf
movs
add
push
jp
scas
xlat
pop
adc
and
ja
hlt
cdq
mov
lea
pop
je
mov
mov
inc
push
in
dec
in
repz
dec
in
pop
xchg
inc
nop
icebp
sub
push
sub
shl
or
and
loopne
lock
and
call
test
movs
stos
cmp
inc
hlt
ret
push
movaps
nop
ret
mov
jmp
data16
or
inc
sub
in
es
lock
jmp
jo
sub
pop
sub
out
or
cmp
dec
jne
sahf
mov
cmp
mov
mov
fdivr
bound
fcmovnb
daa
mov
pop
cmp
add
jmp
adc
popa
pusha
mov
sub
add
int
sbb
sbb
inc
ins
fistp
add
dec
retf
sbb
popa
bound
add
xlat
cmp
jge
enter
sbb
int3
sti
dec
jne
lods
dec
add
pop
adc
jmp
adc
fiadd
sbb
mov
sbb
xchg
push
sub
or
daa
outs
inc
mov
mov
fsub
inc
mov
sar
or
jb
push
gs
xchg
push
push
add
adc
cdq
sub
cld
mov
movs
enter
dec
ret
jae
shr
and
adc
aam
push
add
(bad)
xor
outs
(bad)
ror
mov
mov
pushf
mov
mov
adc
les
cld
or
mov
inc
ret
push
and
pop
or
add
dec
pop
add
adc
jp
or
add
leave
je
add
punpckhbw
pop
dec
xor
add
dec
stos
adc
inc
ss
aam
sahf
push
imul
inc
bound
(bad)
mov
inc
sub
pop
out
out
mov
cmp
adc
sub
fstp
and
mov
out
rol
cmp
or
in
or
push
or
outs
and
and
out
call
pushf
xor
imul
add
jl
sub
sub
pusha
add
cwde
pop
push
mov
jo
bound
sbb
xor
les
xor
xor
ja
push
pop
repz
and
pop
add
push
popa
test
int
pop
sub
sub
and
adc
xchg
sub
aam
inc
ss
rcr
stc
add
test
add
or
or
loope
xchg
sbb
pop
frstor
outs
push
sub
push
adc
pop
(bad)
aam
jl
enter
sub
xchg
pop
xor
fwait
vmread
xlat
sub
(bad)
jl
or
jne
call
aam
std
test
add
aam
mov
fs
ds
and
xchg
push
les
push
dec
pusha
out
sahf
out
mov
sahf
fsubr
lock
clc
cld
cmp
sar
add
or
daa
mov
repz
or
or
sbb
pop
and
or
or
stc
xor
push
pop
jnp
mov
add
mov
add
ret
lock
sbb
mov
add
xor
and
sbb
push
adc
ror
sub
dec
dec
jp
xor
aas
pop
mov
nop
or
jb
daa
pop
push
pop
mov
add
lods
push
sub
xor
repnz
and
pop
and
dec
sub
sbb
adc
(bad)
movs
jnp
sub
(bad)
and
sbb
imul
jmp
nop
loop
rcl
cld
mov
sbb
pop
scas
lock
ins
or
aas
mov
popa
sbb
dec
or
scas
sbb
xor
adc
ret
cmp
psraw
in
xor
inc
or
inc
xor
pop
and
shl
shl
xchg
ret
pop
or
dec
add
loopne
test
push
outs
outs
aam
outs
and
lea
adc
xlat
xchg
(bad)
rcr
mov
pop
pop
dec
xchg
imul
sbb
add
and
aam
push
jne
jle
test
xor
jle
mov
inc
imul
aam
sbb
dec
mov
iret
push
and
fcmovnu
push
dec
add
push
inc
repnz
test
or
dec
xchg
(bad)
mov
sub
scas
jne
ret
dec
pop
inc
xlat
mov
adc
inc
sub
nop
mov
sub
pusha
xor
xchg
sbb
dec
push
add
push
push
push
inc
call
or
stos
rcr
out
ret
push
bound
inc
loopne
jecxz
push
and
icebp
pusha
push
sbb
xchg
push
or
(bad)
xor
stos
test
sbb
movs
push
cmp
aad
sub
jo
pop
push
(bad)
or
and
rcr
scas
mov
addr16
mov
push
sbb
movs
cmp
push
push
push
jmp
aaa
fnstsw
lods
js
sub
fadd
inc
mov
or
je
mov
push
out
cmp
inc
sbb
aas
add
(bad)
sub
sbb
or
(bad)
rcl
dec
jmp
inc
sbb
ds
push
xchg
imul
xchg
xor
add
bound
or
pop
and
adc
or
add
push
push
push
gs
in
pusha
enter
mov
add
cwde
inc
cmps
push
dec
mov
je
jle
or
cmp
or
(bad)
cwde
loope
add
pop
outs
xchg
xchg
xchg
(bad)
cdq
es
sbb
imul
adc
adc
mov
js
dec
push
jo
and
jl
ins
call
mov
dec
sub
test
fadd
popa
cmp
inc
sbb
ret
push
push
add
pop
adc
(bad)
(bad)
fmul
or
cmps
imul
cmp
push
or
out
xor
in
je
xor
sar
push
xlat
xor
pop
fwait
fs
adc
sub
fild
out
ror
pusha
ins
setno
psllw
(bad)
movs
xor
or
push
add
push
xchg
shl
cmp
das
mov
(bad)
enter
dec
pop
or
scas
ss
sub
or
mov
icebp
push
inc
push
in
mov
sub
pop
imul
int3
fldcw
and
movlps
rcr
or
stos
hlt
pop
and
pop
out
push
jnp
xor
mov
clc
movs
inc
pop
jle
mov
pusha
cld
je
jb
pop
add
jp
ret
ins
mov
sar
rol
shl
mov
dec
fisttp
icebp
scas
pop
adc
pop
push
ins
inc
push
stos
inc
jp
arpl
clc
pop
mov
test
dec
sbb
mov
cmps
mov
or
jnp
mov
imul
pop
push
leave
pop
lods
mov
cmp
mov
je
xor
sub
shl
mov
and
enter
mov
sub
aad
ss
push
sbb
and
or
jo
pop
pop
push
push
xchg
je
cmps
jl
mov
push
pusha
outs
movs
add
inc
jne
ins
loopne
in
jns
mov
shr
mov
outs
sbb
movs
xchg
call
lock
fnstenv
hlt
xchg
cmp
outs
mov
push
mov
add
sbb
sbb
mov
pop
pop
das
sbb
popf
aad
xor
add
or
pinsrw
dec
adc
cmp
dec
daa
idiv
sub
sbb
ret
imul
enter
imul
push
inc
stos
and
xchg
popa
in
add
shr
sbb
jmp
mov
es
pop
push
imul
fist
adc
cld
xor
xchg
leave
and
xchg
cmps
dec
pushf
xchg
cmc
or
jbe
xchg
neg
iret
sbb
inc
jmp
sbb
jmp
(bad)
(bad)
cmp
and
cmp
fucomp
push
(bad)
push
sbb
xor
not
push
jecxz
xor
cmp
and
push
or
or
inc
cli
dec
sbb
test
push
sub
xor
outs
cmp
push
(bad)
in
mov
push
or
adc
push
xchg
mov
xor
or
(bad)
add
push
div
mov
adc
inc
out
push
adc
push
push
jns
push
fld
ja
sar
dec
repz
je
js
mov
imul
cmp
sub
xor
mov
mov
jle
int3
dec
cwde
ds
lock
sub
and
or
add
push
push
je
push
int3
loopne
or
arpl
jo
push
outs
and
popf
in
add
inc
mov
adc
jp
jp
leave
xchg
adc
push
push
jo
xchg
or
xor
sub
sbb
out
sub
sahf
aaa
bound
in
addr16
and
pop
push
imul
push
push
js
jo
cmp
maxps
clc
push
pop
sub
in
scas
js
enter
cmps
mov
adc
sub
sub
push
and
dec
sar
add
pop
adc
mov
xchg
ss
push
push
push
fld
lds
es
je
push
mov
bound
inc
inc
pop
and
rcl
(bad)
clc
sub
rol
or
cmp
cmp
test
jmp
sub
add
xlat
cmp
pop
inc
inc
sbb
push
cmp
inc
je
xchg
cmp
inc
sbb
adc
push
nop
jo
add
jne
xor
inc
ins
xchg
lods
and
cmp
inc
inc
jns
out
sbb
test
sbb
mov
add
ins
popa
cmps
or
inc
adc
and
or
ins
imul
and
cmp
(bad)
fbld
inc
or
outs
mov
jno
sub
ins
aam
in
mov
or
sbb
push
pop
ja
mov
pop
xor
fs
mov
sub
add
pop
fcomp
pop
test
dec
imul
movs
cs
imul
imul
mov
stos
and
adc
push
sbb
dec
add
push
mov
mov
popa
imul
or
or
imul
(bad)
pop
or
pusha
or
andps
xor
cmp
inc
pop
pop
not
loop
jbe
add
call
or
xor
adc
das
(bad)
out
test
fild
xor
loopne
arpl
or
mov
pop
sub
int3
js
inc
adc
je
xor
inc
or
push
or
jl
cs
imul
add
imul
mov
mov
in
pushf
nop
dec
pop
dec
dec
dec
sti
push
jns
sub
nop
push
sbb
push
in
or
neg
pop
and
lahf
xchg
inc
fmul
mov
mov
cmp
push
xor
adc
enter
add
dec
xchg
aas
adc
pop
dec
mov
push
dec
inc
push
cmp
daa
jl
ins
dec
aam
inc
and
arpl
movs
xor
(bad)
fild
and
xchg
sbb
add
dec
and
add
pop
enter
dec
add
jle
rol
fistp
add
push
xchg
stos
cmp
add
and
inc
sbb
call
clc
dec
inc
sbb
jmp
movhps
int
sbb
xchg
lds
sbb
mov
pop
dec
imul
xchg
jmp
nop
lods
pop
mov
daa
or
add
out
add
mov
add
ja
loopne
inc
inc
mov
add
xchg
(bad)
push
add
ins
xchg
adc
pop
cmp
imul
pop
mov
pop
inc
dec
arpl
push
mov
pop
(bad)
or
fiadd
sbb
das
les
inc
jb
jo
fiadd
push
cmp
and
pop
xchg
dec
jp
adc
or
mov
mov
ins
(bad)
or
aas
and
popa
jb
gs
dec
sahf
loope
dec
pop
outs
arpl
inc
ret
or
pop
hlt
inc
inc
stos
mov
out
push
adc
inc
jne
adc
lea
mov
jmp
sub
js
gs
push
push
bswap
push
test
push
mov
push
push
adc
xor
inc
fsub
outs
sbb
fmul
xchg
lods
add
in
xchg
adc
mov
or
ins
sbb
jnp
or
dec
es
mov
test
mov
or
loop
mov
add
add
rcl
adc
and
push
or
ret
(bad)
popf
add
retf
adc
xchg
push
sbb
fist
push
add
add
lods
sub
and
enter
mov
imul
push
mov
add
adc
push
leave
psubusw
jno
add
push
cmps
or
ret
sub
clts
push
jno
push
push
sub
cmc
repz
ja
jmp
push
out
add
dec
jmp
adc
pop
mov
cmp
mov
add
xor
sub
imul
inc
ret
adc
aaa
lea
outs
pop
xchg
ja
subps
dec
in
pop
ror
mov
add
push
add
inc
mov
add
pop
add
inc
sbb
add
or
or
or
xor
mov
mov
mov
mov
mov
sub
inc
sbb
mov
shr
or
inc
adc
jg
(bad)
fdivrp
(bad)
fdivr
fld
les
sar
int3
(bad)
call
call
mov
rol
sar
iret
int
retf
dec
stos
mov
pop
leave
dec
es
jmp
rcr
lds
mov
sahf
out
cmp
push
test
add
out
cmp
and
pushf
fmul
mov
int3
or
cmp
dec
sti
xor
push
rcr
mov
cs
pop
int
dec
ds
neg
out
ins
into
jle
mov
sbb
sahf
movs
les
sbb
mov
mov
shl
or
jbe
mov
test
ds
push
push
or
into
ss
fnstcw
fcom
xchg
cmps
(bad)
pusha
lods
cmp
push
xor
fstp
cdq
fisubr
cmp
jnp
cmps
mov
jo
test
sbb
fdivr
jl
inc
add
xchg
pop
sbb
jno
emms
or
cmp
pop
rol
adc
xor
pop
aas
push
sbb
int3
and
adc
loopne
or
inc
cmp
xor
sbb
adc
imul
ds
add
push
loop
cmp
add
jl
js
pop
mov
mov
jb
cmp
inc
or
xchg
xchg
pop
or
ins
movs
lods
or
xor
pop
or
pop
or
dec
pop
xchg
lahf
ins
adc
and
nop
pusha
dec
fs
pop
(bad)
xchg
jmp
je
xor
mov
nop
(bad)
cmps
sub
ins
cld
mov
mov
adc
ret
fcom
in
add
test
test
push
push
pop
outs
pop
and
add
inc
dec
adc
adc
and
xlat
adc
aad
cmps
pop
out
lods
sub
mov
jmp
sub
ins
inc
sbb
das
frstor
gs
push
push
lock
sub
in
loope
inc
mov
xchg
sub
mov
jae
jae
popa
je
xchg
inc
push
push
cmp
push
les
imul
adc
shl
mov
inc
adc
int3
pop
movs
push
push
lods
mov
inc
and
popa
pop
ret
int
cmp
add
pop
bound
dec
cmp
or
mov
or
adc
pushf
adc
push
jo
mov
xchg
push
cmps
xor
enter
xor
mov
sub
gs
bound
test
je
or
fsubr
jae
js
mov
mov
mov
dec
sbb
scas
cld
or
imul
or
mov
mov
add
in
ss
dec
push
push
sub
jns
test
std
sbb
das
jmp
call
pop
push
ret
and
and
shr
scas
lea
add
xor
xor
cmp
push
push
test
pop
int
push
nop
pop
mov
sbb
xor
add
push
cli
mov
push
pop
js
jno
jge
aaa
bound
inc
pushf
sbb
cwde
xor
cvtdq2ps
nop
lods
pop
pop
mov
xor
mov
sub
mov
lods
mov
pop
adc
inc
add
mov
adc
cmp
call
aaa
loope
dec
add
adc
dec
add
fild
mov
ficom
lds
add
inc
and
add
das
jb
push
fadd
add
add
mov
add
mov
push
xor
mov
add
sbb
rcr
adc
mov
add
mov
mov
dec
add
or
xchg
push
rcr
pop
adc
clc
push
mov
and
mov
mov
inc
or
push
mov
dec
sbb
add
add
cmp
mov
mov
es
jg
(bad)
inc
inc
inc
inc
cmp
push
loop
(bad)
mov
(bad)
mov
mov
stc
sub
mov
push
mov
hlt
or
repz
add
je
call
call
call
mov
inc
adc
adc
sub
mov
cmp
push
push
aam
jnp
ja
and
and
movs
les
jl
scas
xor
push
adc
enter
out
jl
clts
fdiv
jbe
ins
jns
sti
cmp
clc
inc
data16
inc
pop
fidivr
out
jo
adc
popf
iret
jnp
push
hlt
xor
push
mov
fdivr
push
push
mov
test
jns
jnp
push
mov
sub
jecxz
mov
push
test
cmp
repnz
jle
sahf
repz
mov
and
int
pop
xor
mov
jl
movs
mov
(bad)
xor
out
sbb
sbb
ds
outs
hlt
imul
mov
sbb
sbb
inc
into
sbb
data16
dec
pop
jo
sbb
test
call
jmp
cmps
adc
cs
adc
xchg
add
and
sub
rcr
enter
pusha
mov
ins
push
mov
jnp
je
lods
push
pop
push
mov
lea
add
in
inc
dec
adc
xchg
xchg
push
test
ds
adc
pop
sub
pop
or
jnp
pushf
add
call
pop
js
out
mov
sbb
mov
add
push
enter
idiv
mov
nop
or
mov
pop
sub
and
sub
enter
arpl
fs
xchg
push
je
mov
mov
dec
test
dec
dec
push
fldcw
dec
mov
je
pop
push
jge
mov
add
adc
ret
retf
call
or
ror
and
mov
pop
mov
mov
mov
xchg
mov
push
or
inc
fld
mov
sub
mov
inc
lods
add
cld
in
mov
inc
data16
jb
or
xor
js
or
lahf
or
xchg
adc
adc
add
adc
out
sbb
je
ins
mov
out
dec
add
inc
imul
sub
pop
pop
mov
nop
arpl
add
cmp
jle
add
clc
hlt
push
add
lds
xor
adc
ja
cs
add
and
dec
lods
add
pusha
loop
push
mov
fs
add
add
pusha
pop
jb
lea
mov
fstp
shl
jae
xor
or
lods
push
inc
sub
lods
outs
aas
sub
dec
mov
pop
shl
sub
dec
sar
jb
push
cmp
xor
push
scas
or
adc
xor
add
sub
add
and
xor
push
sbb
int3
fdivr
cmp
in
pop
gs
jne
cmp
repz
pushf
test
gs
shr
imul
cs
imul
add
test
inc
pushf
out
pop
push
pop
add
and
jle
jb
retf
ds
sbb
sbb
cwde
sub
hlt
jne
add
cmps
test
jae
jle
(bad)
stc
mov
ins
dec
inc
push
jb
mov
shl
pop
push
aas
xor
scas
xor
xor
mov
nop
pop
push
adc
adc
clc
sbb
push
push
test
in
call
loopne
cs
pop
mov
iret
xor
adc
out
in
and
enter
mov
xchg
dec
fsubr
push
pushf
fld
pcmpeqb
mov
es
mov
push
test
test
sbb
outs
mov
ins
cmps
mov
pop
sbb
gs
xor
push
clc
fwait
ss
ss
fs
mul
add
jle
ins
and
les
jnp
or
dec
pop
pop
cmp
or
xchg
and
sbb
dec
mov
stos
or
adc
and
fst
(bad)
aam
inc
retf
in
icebp
add
je
inc
add
xor
cmc
xchg
add
dec
test
ficom
mov
xchg
popa
jo
test
or
adc
jl
or
or
adc
push
outs
push
ret
xor
(bad)
mov
sbb
dec
out
sahf
or
adc
(bad)
add
adc
test
pop
mov
and
pop
dec
mov
out
and
in
and
xchg
mov
mov
and
(bad)
hlt
in
popa
ja
(bad)
pusha
or
call
inc
mov
adc
dec
aaa
push
test
sub
neg
push
adc
sub
ins
mov
push
add
pop
or
adc
imul
dec
jne
xor
push
or
pop
cmp
ror
shl
imul
leave
pop
pop
mov
and
mov
pop
mov
fist
push
rcl
adc
adc
push
or
aaa
add
sub
lahf
or
push
jno
xchg
hlt
xchg
pop
mov
jecxz
test
pop
aas
inc
ja
sbb
ja
inc
xor
mov
adc
and
cld
(bad)
add
push
scas
or
inc
or
fimul
add
leave
inc
push
aas
or
add
or
add
fimul
jne
inc
xchg
test
push
jb
out
sub
mov
stos
aas
mov
sbb
je
push
or
or
rcl
mov
add
pop
or
add
rcl
add
iret
mov
popa
ja
adc
aaa
stos
and
and
(bad)
and
sbb
aas
add
mov
jg
adc
pop
imul
xlat
mov
and
(bad)
pop
shl
jmp
inc
retf
dec
lea
leave
and
(bad)
sub
inc
scas
sbb
push
or
xchg
sub
(bad)
aam
test
pushf
sub
or
inc
push
leave
sar
xchg
adc
inc
xor
movs
mov
dec
dec
inc
aaa
xor
push
(bad)
push
dec
(bad)
jmp
out
cmps
je
sbb
sub
dec
aas
cmp
pushf
jbe
adc
test
mov
sbb
sub
lock
inc
cs
mov
add
xchg
fs
pop
dec
mov
fwait
inc
sbb
add
mov
inc
add
and
pop
dec
pop
mov
cmps
sub
out
push
add
push
mov
dec
enter
(bad)
adc
js
sbb
ds
inc
(bad)
repz
jbe
es
ror
push
push
test
push
push
pop
lods
fidiv
pop
pop
mov
push
jbe
clc
or
pop
mov
push
test
push
inc
rcl
call
ror
jne
int3
mov
mov
sub
mov
rcr
sahf
mov
xor
xor
push
inc
sbb
mov
mov
xor
dec
add
inc
retf
xchg
mov
sub
mov
cmp
push
sbb
fcom
sti
xor
call
outs
sub
aam
fbstp
xchg
or
jne
shl
add
jmp
xor
jp
je
add
adc
std
in
sub
add
push
or
push
dec
sbb
add
or
(bad)
lahf
fcom
xor
add
xor
rcl
adc
sbb
sub
sub
xor
inc
shl
xor
scas
push
adc
add
clc
jl
or
clc
fstp
push
xchg
pop
push
ret
cli
mov
pop
movs
add
sub
test
aad
ds
or
cmp
scas
adc
sbb
mov
and
sahf
inc
je
pop
arpl
push
lea
mov
inc
fidiv
(bad)
sar
push
or
repnz
mov
sbb
cmp
dec
ins
ret
mov
(bad)
cld
addr16
jb
jmp
hlt
adc
jmp
mov
pop
xor
and
fadd
mov
in
mov
mov
outs
sub
add
or
pop
cwde
xchg
xor
jmp
push
addr16
push
retf
popa
sub
xchg
rol
sbb
(bad)
test
mov
popa
xor
gs
push
xlat
xchg
lahf
push
pop
or
mov
cmp
loopne
enter
push
pop
test
stos
sbb
daa
inc
popf
push
adc
das
push
mov
aaa
inc
inc
adc
inc
mov
test
retf
add
inc
ficom
dec
add
(bad)
xchg
mov
icebp
loopne
push
add
pop
xchg
gs
invd
jge
loop
push
sub
jp
and
push
in
leave
(bad)
fisubr
fs
sbb
mov
mov
sysret
imul
add
sbb
cmp
mov
pop
xor
mov
mov
pop
mov
inc
and
mov
pushf
imul
adc
cmp
push
mov
push
pusha
add
(bad)
xchg
test
je
push
stos
jnp
movs
mov
push
fs
dec
xchg
add
mov
inc
sbb
jle
mov
push
mov
mov
jmp
ret
add
cmps
add
xchg
or
cmps
test
lahf
mov
or
mov
add
jmp
outs
dec
or
adc
rol
lods
sub
push
hlt
neg
xchg
lea
popa
adc
arpl
adc
inc
dec
pop
push
dec
xchg
mov
sbb
jle
push
jne
js
sahf
push
or
xchg
or
cmps
test
sbb
enter
mov
xchg
jle
add
cmp
ins
adc
fs
cs
fs
jne
inc
add
push
ror
les
xor
jnp
push
add
inc
sbb
shr
mov
popa
pop
sbb
pop
add
xchg
cmp
jne
xor
scas
inc
imul
aaa
cmp
inc
inc
add
add
std
inc
mov
sar
movs
in
sub
mov
sub
shl
pmulhuw
pop
push
jo
outs
les
test
add
cmp
inc
jmp
cmps
retf
xor
ret
dec
or
mov
push
fld
daa
nop
cmp
inc
lock
sbb
push
sbb
mov
mov
push
mov
and
addr16
mov
sub
aaa
pop
mov
in
mov
inc
rol
cmp
jle
xchg
lock
dec
add
es
hlt
sbb
test
or
xlat
xor
sbb
mov
sbb
lock
scas
add
ror
pop
and
daa
add
imul
add
push
inc
jo
sbb
dec
es
lods
outs
test
js
mov
inc
cmp
push
inc
inc
xchg
fadd
mov
sbb
fmul
or
inc
in
ins
(bad)
hlt
ret
jp
jl
push
sbb
xor
pop
or
popf
sub
pop
fdivrp
ss
sbb
push
xchg
adc
dec
jnp
mov
jg
cmp
inc
jne
push
(bad)
dec
ins
and
sti
and
shl
mov
lahf
jge
js
and
cmp
sbb
(bad)
push
add
pop
add
lods
jnp
pop
aad
or
lock
xchg
cli
ror
mov
push
push
push
push
popa
and
addr16
pop
mov
mov
sbb
shr
push
wbinvd
jmp
sub
jp
rcl
inc
pshufw
mov
xlat
ret
push
dec
(bad)
gs
sub
retf
popf
ds
mov
dec
push
mov
scas
mov
sbb
and
lods
or
push
ret
cmp
cmp
lahf
lds
(bad)
and
xchg
mov
icebp
or
movs
je
(bad)
ds
mov
cmp
imul
mov
ins
out
das
mov
adc
aas
xchg
inc
in
jns
popa
std
ds
jl
and
rcl
enter
outs
(bad)
jmp
jne
sar
add
repz
jg
test
test
mov
lds
scas
dec
(bad)
jge
mov
sub
add
js
jne
movs
mov
xor
in
push
scas
daa
mov
sbb
sar
mov
or
gs
sub
add
adc
int3
into
mov
push
sbb
add
ins
je
repz
(bad)
je
addr16
add
mov
sub
lods
adc
or
test
pop
fwait
pushf
rol
inc
pop
push
add
fwait
leave
es
movs
sub
rcr
adc
test
sbb
fist
call
push
xor
stos
(bad)
pop
aaa
sub
or
test
jne
pop
dec
enter
xchg
push
and
adc
sub
or
cmp
or
movs
test
inc
dec
movs
clc
mov
pop
adc
inc
pop
pop
les
mov
push
arpl
test
sub
leave
test
adc
push
imul
push
imul
lock
inc
xchg
loope
push
retf
movs
fmul
movs
jne
pop
(bad)
hlt
daa
mov
push
mov
sub
xchg
xor
pop
cmp
(bad)
dec
add
ficomp
test
push
es
nop
mov
sub
xor
and
dec
in
js
dec
sahf
jnp
ins
mov
dec
pusha
aam
push
outs
push
fwait
aam
fs
add
test
ret
adc
pop
mov
xchg
push
mov
pop
add
push
fwait
(bad)
lock
dec
xchg
mov
sub
adc
jle
mov
adc
xor
mov
pusha
add
outs
mov
sub
add
sub
cmp
xchg
mov
hlt
lock
into
mov
sub
imul
push
push
ins
pop
xor
xor
push
adc
push
jbe
add
sbb
fwait
pop
adc
or
nop
sub
or
xchg
mov
jne
pushf
sub
adc
ds
sbb
in
in
mov
rcr
dec
and
mov
and
inc
(bad)
jne
sub
pop
ficomp
and
daa
cwde
iret
(bad)
or
push
and
inc
cmp
jne
pop
xchg
in
sbb
and
mov
mov
inc
rol
sahf
cmps
and
ins
or
pop
fwait
das
sub
test
(bad)
sbb
repz
retf
pop
loop
ret
push
call
in
adc
js
add
imul
fwait
push
inc
dec
add
pop
jno
push
test
or
adc
push
fs
int3
test
push
or
add
mov
ins
jne
fidiv
out
sbb
or
outs
push
(bad)
js
daa
jmp
or
sub
mov
ins
mov
sub
xor
enter
fwait
pop
ret
pop
sbb
lock
idiv
fwait
and
fisubr
scas
mov
inc
add
mov
(bad)
test
jl
test
xor
int3
xor
dec
pop
arpl
call
and
add
xchg
adc
das
inc
int
sbb
mov
in
adc
adc
xchg
push
jmp
ret
rcr
adc
adc
and
ret
mov
stos
mov
dec
sub
je
sahf
mov
sbb
(bad)
fist
and
clc
test
mov
lahf
add
in
jbe
dec
or
jae
xor
test
lods
fisttp
loop
mov
popa
ret
jae
add
cli
aad
xchg
and
or
test
or
adc
lock
clc
pop
push
sub
inc
push
adc
dec
jb
adc
add
and
rol
sbb
mov
psrld
pop
daa
cmp
inc
out
add
retf
repnz
and
inc
nop
adc
out
adc
adc
mov
sahf
jns
mov
mov
xchg
inc
(bad)
mov
sub
outs
push
inc
add
adc
and
and
je
dec
dec
sub
jecxz
pop
daa
mov
mov
sbb
and
stos
mov
scas
push
out
push
and
pop
add
ret
in
es
inc
cli
push
mov
(bad)
in
popa
and
cwde
jae
cmps
mov
gs
jg
mov
and
(bad)
nop
mov
nop
dec
add
lods
pop
sti
add
sbb
das
push
aaa
pop
inc
and
popa
add
push
or
xor
aaa
mov
mov
mov
add
call
xchg
je
pop
lock
aas
jnp
sbb
or
xor
jg
por
out
cmp
ror
pusha
inc
xor
push
into
mov
jb
jne
dec
idiv
or
inc
pop
leave
hlt
call
pop
jb
hlt
imul
inc
add
mov
mov
ret
out
pop
jmp
jmp
pop
push
push
shl
call
fisubr
add
dec
jge
inc
inc
mov
pusha
dec
or
jp
sub
or
or
jb
pop
add
sub
xor
les
add
aaa
test
daa
ret
dec
add
mov
pop
addr16
sbb
add
xchg
aaa
test
dec
ds
inc
jge
jae
js
mov
inc
or
push
pop
mov
lahf
lea
or
push
dec
jecxz
cmp
shl
cdq
sub
add
mov
dec
sub
inc
and
push
adc
or
adc
sub
mov
test
sub
xor
movq
fwait
out
pop
jmp
cmp
je
mov
movs
out
add
push
adc
adc
retf
or
or
push
or
inc
sub
adc
je
mov
fstp
sar
fs
jbe
or
xchg
mov
cmps
xchg
and
mov
inc
movs
mov
xlat
in
mov
pop
sub
cmp
xchg
dec
and
mov
je
cmp
push
test
mov
xchg
jp
add
shl
adc
or
popf
stos
inc
jno
ins
pusha
push
repz
loopne
lock
dec
popa
add
add
xchg
movs
jne
add
test
xchg
sub
(bad)
or
and
sub
or
fst
movs
sub
mov
push
xor
aam
and
pop
sahf
call
js
sbb
xchg
inc
mov
jmp
jmp
mov
dec
inc
push
(bad)
nop
arpl
mov
lea
pop
sbb
popf
and
rcr
sbb
xor
(bad)
add
push
sub
adc
add
and
dec
dec
daa
pop
cwde
ud0
movs
pop
sbb
or
and
rol
pusha
pop
pop
pop
add
jno
syscall
add
movs
push
(bad)
scas
jb
inc
repnz
xchg
sub
add
mov
imul
mov
pusha
dec
jne
cmp
xchg
mov
inc
jo
xchg
xchg
in
and
pop
sahf
pop
nop
je
pusha
xor
xor
int3
popa
dec
push
pop
add
add
xchg
shr
js
icebp
mov
mov
lods
cmps
xchg
jbe
mov
and
pop
xchg
add
mov
dec
mov
xor
mov
ds
jo
scas
cld
add
in
cmp
dec
or
add
mov
(bad)
mov
(bad)
cli
push
pop
shl
jns
pop
add
cmp
pop
add
jp
jmp
push
sub
sub
(bad)
fisttp
add
push
push
xor
aaa
test
pop
nop
xlat
cmp
xchg
dec
pop
inc
and
data16
push
das
mov
and
in
cmp
cmps
mov
push
adc
outs
adc
dec
or
and
sbb
push
and
xchg
out
dec
je
and
rol
sbb
or
or
pop
ret
pop
jo
or
and
clc
mov
cmp
ja
pop
cmps
in
and
xor
pop
push
adc
enter
cdq
fsubr
dec
jg
sbb
and
xor
mov
daa
adc
mov
lock
cmp
dec
jo
shl
xor
push
mov
dec
or
pop
and
push
jg
imul
cmp
or
pop
popa
sbb
mov
neg
nop
enter
adc
push
jne
dec
mov
inc
inc
jne
adc
dec
jae
pop
or
xchg
fmulp
xchg
out
jne
cwde
dec
je
push
and
push
outs
test
sub
sub
pop
mov
inc
jg
(bad)
fld
fisubr
arpl
push
jmp
or
mov
enter
push
sub
mov
retf
sbb
or
add
test
or
sub
jno
sub
sbb
out
js
add
dec
sbb
pop
push
push
sbb
mov
mov
push
xor
adc
or
js
pop
inc
mov
sahf
fmul
ficom
in
dec
dec
push
je
sub
lds
aad
jp
mov
push
test
in
cs
and
cmp
and
mov
inc
rol
sbb
mov
push
jmp
arpl
cmp
mov
jmp
cmp
in
jb
jne
xchg
xchg
and
movs
dec
adc
popa
loopne
js
adc
fcom
mov
push
ret
pop
nop
(bad)
pop
jg
dec
mov
leave
test
lds
push
jo
mov
adc
outs
adc
scas
mov
setb
add
test
ret
xor
sub
ins
add
push
out
push
mov
rol
dec
dec
inc
mov
or
movs
cwde
mov
xchg
xchg
pop
or
and
frstor
outs
pop
mov
mov
out
add
mov
shl
daa
push
(bad)
mov
jns
pop
jmp
fisub
out
rcr
mov
(bad)
icebp
mov
(bad)
dec
mov
mov
push
add
fcmovnb
or
or
bound
imul
cmp
fist
add
add
pop
inc
es
adc
add
mov
adc
shl
je
dec
jnp
ret
add
add
or
xchg
jb
inc
inc
add
or
ret
sub
repnz
xchg
jmp
lahf
test
mov
or
rol
jge
shr
mov
inc
mov
outs
out
push
shr
mov
das
push
push
in
add
js
dec
or
sbb
sub
daa
fcomp
mov
mov
test
dec
ss
push
aaa
or
test
dec
or
repnz
outs
fiadd
cmp
addr16
mov
retf
inc
imul
aad
rcl
sbb
dec
xchg
push
addr16
xor
add
dec
cwde
pusha
in
mov
in
in
scas
pop
adc
push
aad
cwde
jno
loope
outs
je
adc
sub
pop
and
and
dec
cmc
ret
push
inc
and
mov
adc
mov
ins
inc
xchg
dec
popf
clc
add
aaa
stc
sub
adc
push
or
pop
pop
sbb
dec
xor
mov
shr
arpl
inc
js
imul
fisttp
push
mov
push
cli
pop
(bad)
mov
inc
add
aaa
pusha
push
xchg
mov
(bad)
(bad)
sti
sub
sbb
xlat
or
and
repnz
outs
lods
add
mov
call
lds
jns
adc
retf
mov
ins
lea
(bad)
mov
jb
dec
pop
and
mov
push
add
or
dec
dec
add
sbb
dec
mov
sbb
add
xor
jp
cmp
cmc
scas
iret
lods
mov
idiv
cmp
xchg
lock
xor
rcr
es
xchg
popf
mov
add
pop
xchg
cwde
pop
leave
aam
pop
xchg
hlt
imul
nop
inc
ds
inc
pop
repnz
mov
xor
cld
inc
ins
pop
sbb
or
jmp
push
call
imul
inc
hlt
fld
mov
jge
fild
xchg
cmp
add
rol
jb
addr16
jo
pop
add
enter
push
rol
shl
enter
mov
cmp
sahf
add
adc
push
dec
stos
xor
xchg
pop
pop
or
sub
add
cs
jo
scas
cmp
enter
sub
rol
dec
scas
pusha
pusha
xor
dec
xor
jne
out
push
dec
or
pop
add
stc
in
sbb
add
or
push
and
add
adc
mov
push
dec
add
imul
cmp
inc
sub
mov
and
adc
cmc
add
adc
or
inc
push
add
fmul
inc
xchg
adc
inc
cmp
mov
jb
adc
cmp
and
sbb
es
xor
lds
retf
sbb
xor
cmp
sbb
outs
rol
dec
es
xchg
adc
add
xor
dec
loopne
jecxz
ins
adc
scas
adc
(bad)
bound
add
sbb
or
fstp
push
fsub
xchg
sbb
mov
in
xchg
jne
mov
je
inc
add
jbe
fs
sub
mov
jmp
pop
pop
fwait
js
xor
out
adc
ds
mov
add
dec
xchg
ret
(bad)
ds
cmp
cmps
inc
test
je
es
aam
or
inc
or
push
mov
in
or
test
mov
dec
pop
or
ins
adc
scas
xchg
loop
bound
inc
inc
scas
call
rcr
loopne
cmp
cs
adc
add
mov
and
push
sbb
cmp
repnz
popa
adc
dec
mov
dec
into
mov
mov
inc
(bad)
clc
cmp
(bad)
into
cmp
fisubr
mov
push
sbb
cmp
xor
xchg
and
push
pop
dec
inc
jle
cmp
or
pop
push
add
adc
jecxz
mov
loopne
icebp
mov
movs
jns
jo
jb
es
pop
ret
push
push
dec
fistp
imul
add
mov
xor
and
inc
adc
imul
and
ror
inc
mov
fs
jne
mov
int
push
pusha
xor
dec
or
gs
add
xor
inc
pusha
add
mov
inc
xchg
cmp
or
fisub
pusha
loopne
iret
mov
xchg
jmp
sub
shr
nop
push
cmps
fs
push
push
mov
test
adc
test
cmps
pop
je
mov
dec
test
and
aas
or
nop
mov
idiv
ja
shufps
sub
mov
mov
fwait
and
ins
and
push
push
test
inc
(bad)
cmp
je
mov
adc
out
mov
xlat
and
js
inc
or
loope
mov
retf
scas
pop
pop
pop
dec
movs
and
pusha
fld
js
in
sbb
xor
xor
(bad)
fist
fs
fdiv
sar
pop
call
sbb
and
push
and
mov
adc
rol
xchg
aaa
fidivr
or
loopne
adc
add
or
inc
loop
mov
or
hlt
imul
iret
dec
xor
dec
xor
or
adc
mov
sbb
sbb
call
addr16
dec
push
sbb
je
mov
inc
je
das
pop
push
and
lods
mov
dec
sbb
das
pop
dec
or
or
or
je
xchg
pushf
js
lods
cmp
and
and
fsubr
scas
ins
sub
mov
popa
mov
dec
dec
and
sub
sub
loop
cmovge
push
inc
imul
call
popa
pusha
sbb
push
adc
jae
retf
push
mov
(bad)
jb
js
jle
push
or
push
add
pusha
xchg
push
cmp
inc
rdtsc
aas
cmp
dec
ret
jo
fs
bound
aaa
lods
xor
pop
jo
(bad)
and
inc
loopne
fld
or
dec
or
lock
mov
mov
jle
mov
add
inc
or
pusha
and
or
jmp
jecxz
sbb
ins
push
je
aas
inc
mov
(bad)
mov
mov
push
jb
and
mov
pop
jg
rcl
div
push
cmp
nop
xchg
xchg
cmp
popf
and
dec
ret
sbb
and
or
sbb
stc
ins
xor
mov
adc
aam
sbb
je
sbb
aad
inc
sbb
xor
pop
test
sub
pop
mov
scas
inc
push
inc
cmp
dec
jmp
pop
cld
add
push
popa
xchg
dec
and
xchg
sbb
cmp
mov
push
xor
pusha
pop
lods
mov
add
or
jbe
cmp
jg
das
add
push
dec
push
pop
aaa
xchg
stc
xchg
xchg
dec
shl
and
cmp
daa
mov
add
xchg
sub
mov
ja
fcom
scas
jg
movs
adc
test
mov
lods
and
push
les
ret
repnz
xchg
inc
push
xor
xor
popf
jae
add
pop
out
ss
or
add
inc
mov
shr
or
rcr
or
jbe
sbb
aaa
enter
inc
lods
pop
push
push
or
push
jmp
and
add
add
ror
das
mov
push
popa
scas
in
test
pop
(bad)
push
adc
mov
test
add
sub
dec
leave
fucomi
xchg
or
or
or
inc
xlat
push
dec
aaa
jb
or
adc
and
ins
sbb
ins
fwait
leave
cmp
les
push
adc
jp
push
lods
jmp
fmul
fild
fsubp
dec
xor
retf
adc
cli
pop
and
jae
pop
popa
add
push
daa
push
lea
gs
call
test
sbb
sub
dec
pop
sub
inc
lea
adc
adc
mov
int3
pop
push
outs
push
mov
and
push
ror
xchg
push
movs
aaa
pop
xacquire
pop
and
xlat
(bad)
xchg
pop
scas
in
cld
clc
retf
pop
dec
add
mov
sub
and
cmp
adc
in
mov
add
push
xor
or
xchg
lds
(bad)
pop
inc
sbb
jp
dec
daa
adc
inc
add
clc
loopne
push
repz
in
push
xchg
adc
(bad)
push
inc
cmp
sbb
xchg
and
into
push
cmp
push
pushf
ret
inc
adc
fidivr
sub
mov
inc
cs
mov
lahf
pop
mov
mov
pushf
add
or
jmp
sub
xor
cmp
out
xor
add
adc
arpl
or
push
enter
pusha
xor
dec
pop
in
lods
sbb
push
sub
sub
es
and
inc
mov
jge
or
sbb
mov
mov
push
xchg
sub
je
mov
xchg
or
sbb
fwait
push
or
jb
loopne
push
fld
cmp
repnz
dec
xchg
jbe
es
ss
cmp
fistp
mov
inc
mov
inc
loopne
in
sar
add
adc
mov
clc
push
bound
jo
pop
inc
pop
out
push
mov
pop
shl
xor
stos
mov
lock
ja
outs
add
jae
xor
inc
or
pop
or
aaa
sbb
push
inc
sbb
aaa
sub
xchg
add
outs
pop
je
pop
push
mov
sbb
add
add
xchg
or
or
ret
repz
dec
mov
cmp
mov
(bad)
gs
xor
or
movs
pop
pusha
daa
sbb
pusha
xor
dec
arpl
add
ret
and
inc
and
pop
xor
pop
js
sub
dec
inc
mov
add
cwde
mov
test
sub
cmps
fst
or
or
mov
jp
mov
mov
enter
inc
fadd
call
push
pop
lods
adc
adc
inc
jg
lea
jle
xor
test
push
xor
inc
dec
jo
inc
sbb
jo
xlat
mov
inc
test
mov
inc
hlt
sub
mov
popa
or
xor
xchg
push
out
jp
cmp
in
or
sbb
enter
hlt
es
shl
inc
jne
pop
stos
inc
(bad)
xor
fiadd
xchg
xchg
in
xor
and
jbe
jmp
iret
xor
and
es
mov
aad
clc
lahf
or
and
pop
test
push
(bad)
stc
sbb
and
mov
adc
adc
sbb
movs
shr
test
push
repnz
jmp
and
sub
and
aaa
and
xchg
(bad)
out
(bad)
frstor
or
mov
push
jg
sbb
or
arpl
dec
aaa
fwait
pop
inc
jnp
pop
add
stos
dec
push
addr16
xor
sti
adc
or
rcr
imul
pop
cmps
mov
mov
(bad)
or
add
lods
and
test
mov
sub
push
lahf
rcl
xor
and
cmp
or
mov
adc
ror
xchg
mov
xor
fisub
lahf
(bad)
jo
jg
sbb
int3
dec
stos
das
inc
and
xchg
test
push
dec
add
xor
test
add
sub
push
mov
daa
bound
jo
test
jbe
adc
pop
ror
adc
xchg
jmp
sub
sub
in
in
or
or
xchg
or
jg
rol
or
call
sub
add
sub
repnz
faddp
jge
rcl
or
call
sub
push
add
push
xchg
test
or
push
jb
jb
lock
test
and
popa
pusha
fsubr
jb
jno
aas
xor
dec
mov
jmp
xor
movs
xor
fadd
ret
bound
lea
mov
xor
sbb
test
mov
jne
xchg
jbe
out
inc
add
or
inc
jmp
dec
inc
xchg
inc
add
ins
stc
cmp
add
loop
movs
inc
inc
xchg
mov
sub
ficomp
sub
bound
and
call
or
sbb
dec
add
rcl
sbb
add
cmc
(bad)
fcomp
push
sbb
adc
jb
(bad)
ja
and
lea
mov
jb
fmul
pushf
outs
jle
dec
dec
scas
add
jo
lahf
int
push
sbb
or
mov
jne
sub
add
or
bound
loope
and
test
mov
pusha
push
push
mov
and
dec
or
and
add
popa
cmp
pop
and
mov
or
push
sbb
dec
cdq
fadd
push
call
and
jmp
inc
add
cmc
adc
scas
jnp
shl
xchg
push
imul
jne
(bad)
into
push
xor
inc
xor
pop
mov
out
sub
add
sbb
adc
enter
ror
pop
sub
xor
aas
cmp
mov
and
aas
test
xchg
add
mov
jge
sbb
jb
xor
cmp
jne
lea
cdq
mov
hlt
xchg
jnp
test
push
hlt
fild
adc
sub
mov
mov
and
xor
push
mov
jle
inc
div
add
cmp
and
mov
sti
cwde
xor
mov
and
xchg
add
push
dec
push
and
mov
push
or
inc
rcr
jl
mov
mov
adc
das
mov
jmp
ja
cmp
pusha
mov
clc
mov
pusha
shl
xor
inc
adc
js
add
loopne
dec
pop
lods
add
and
add
add
inc
inc
cld
dec
cmp
or
cdq
xchg
pop
jae
outs
sbb
sbb
test
pop
cwde
pshufw
or
test
inc
scas
sbb
stos
cmp
sub
movs
jne
ret
cmp
adc
jb
popf
popf
adc
ret
sar
mov
inc
pop
jmp
adc
pause
adc
adc
nop
sbb
and
xchg
xchg
add
and
mov
xor
and
cwde
cwde
pop
enter
and
int3
and
cs
dec
mul
add
sbb
add
mov
out
mov
push
enter
enter
push
ret
jp
dec
xor
mov
add
int3
(bad)
setne
sbb
add
jb
adc
add
xchg
add
mov
pushf
sbb
(bad)
hlt
add
mov
sbb
outs
push
and
add
shl
sub
add
fwait
ror
ja
nop
xchg
or
les
fld
xchg
test
ficom
or
sub
push
push
mov
pop
movs
adc
jle
adc
add
shl
bound
adc
and
add
inc
mov
push
xchg
push
push
inc
shl
movs
or
adc
ret
or
movs
jmp
mov
pop
es
sub
mov
dec
adc
clc
test
cmp
adc
or
dec
jle
mov
in
sahf
push
jbe
fbld
mov
xchg
or
xor
add
int
jns
movsx
xor
dec
sbb
and
in
popw
xchg
push
inc
add
fs
xchg
lock
inc
sbb
dec
push
add
movs
adc
push
mov
or
mov
in
xchg
scas
lea
sub
sbb
xor
int3
inc
test
cmc
daa
fadd
ret
addr16
sub
add
je
inc
xchg
jne
adc
mov
sbb
cmp
cwde
lods
inc
cmp
pop
aam
aad
sub
dec
in
dec
(bad)
repnz
nop
(bad)
jne
or
scas
pop
pop
fild
xchg
mov
in
jo
(bad)
mov
add
sbb
fcmove
add
add
aad
scas
(bad)
push
retf
add
push
out
lea
or
out
(bad)
sbb
mov
cmp
sub
shl
(bad)
cmp
adc
jns
mov
mov
inc
icebp
out
and
shr
xor
(bad)
pop
pop
add
cdq
push
rol
mov
shl
dec
pop
jbe
sbb
arpl
ret
inc
push
inc
or
and
inc
mov
sbb
arpl
dec
jecxz
jnp
xchg
jmp
mov
int3
in
pop
adc
das
inc
aas
dec
popa
and
daa
xchg
xchg
inc
or
jne
int3
pop
loopne
mov
shl
js
inc
mov
adc
sub
dec
jl
pop
addr16
add
adc
das
dec
jp
mov
pusha
mov
push
add
pop
ret
mov
outs
das
pop
fld
test
mov
jle
lahf
aam
inc
ficom
or
loope
dec
jge
bnd
mov
adc
adc
jle
imul
or
or
es
jecxz
jge
je
inc
pop
out
pop
inc
xor
xchg
add
dec
fs
inc
jge
test
out
add
fstp
xor
push
adc
test
mov
cmps
pusha
mov
pop
xchg
test
daa
adc
js
xor
lods
dec
mov
inc
pusha
mov
sub
and
sahf
xchg
dec
adc
cdq
and
aam
jmp
push
xchg
rcl
mov
sahf
add
pusha
int3
cmp
pop
push
and
adc
ss
(bad)
mov
pop
fwait
dec
loopne
or
and
xor
and
mov
enter
(bad)
sbb
sbb
cwde
inc
and
xchg
jne
dec
int
jle
mov
pop
test
push
xor
inc
adc
push
or
inc
pop
sbb
mov
cdq
cmp
or
ja
pop
inc
and
inc
cwde
mov
push
sbb
test
mov
jl
and
mov
dec
push
cmp
mov
inc
add
cwde
ret
push
mov
mov
sbb
or
retf
sub
mov
adc
adc
xor
xchg
sbb
adc
xor
dec
dec
pop
hlt
xchg
(bad)
aaa
icebp
test
push
xor
movs
push
outs
push
adc
xlat
or
je
sbb
adc
push
push
mov
inc
cmp
push
out
adc
sub
xchg
sub
sbb
and
out
xchg
outs
xor
fwait
mov
push
inc
or
cmp
nop
dec
out
push
xor
adc
add
repz
add
lea
stos
push
test
mov
cwde
push
sub
in
in
icebp
sbb
or
dec
dec
push
xchg
les
dec
or
add
push
cld
ins
add
jecxz
loopne
inc
clc
lahf
push
loopne
and
xchg
mov
and
adc
int3
xor
into
push
popa
sub
syscall
push
dec
xor
or
pushf
and
sub
(bad)
mov
ret
repnz
scas
bound
lds
add
xchg
(bad)
je
(bad)
inc
fist
push
clc
fst
inc
dec
dec
fcmovnbe
pop
popf
rcl
into
push
mov
mov
dec
in
dec
adc
sbb
std
mov
inc
push
inc
or
sbb
adc
xchg
xchg
push
icebp
ret
iret
inc
(bad)
mov
add
mov
push
mov
dec
push
leave
mov
repnz
and
cmp
pop
leave
inc
jb
or
push
call
sub
adc
and
jno
cmps
(bad)
sar
mov
sub
xor
or
ror
adc
out
inc
cmp
add
add
push
pop
pop
aad
rol
mov
add
jns
cmps
int3
mul
and
sub
fcomp
mov
mov
inc
es
jp
ins
push
adc
jmp
dec
jle
(bad)
lds
mov
ret
cmp
jg
ret
stos
fcom
dec
cdq
dec
add
cmp
add
jmp
mov
neg
add
fisttp
cmp
fwait
push
js
pop
aam
sbb
repz
xor
xor
and
xor
sar
and
cld
gs
das
and
enter
adc
push
ds
in
iret
mov
push
fist
ret
sahf
cmp
gs
adc
jo
or
mov
and
sub
sbb
push
dec
dec
inc
or
cmp
sbb
dec
fidivr
sbb
sub
add
add
jae
sbb
mov
adc
test
dec
xchg
pop
mov
or
mov
xchg
(bad)
push
hlt
cmp
dec
pop
(bad)
ins
mov
pop
jae
fild
ins
lds
fs
rcl
and
inc
mov
inc
pop
pop
out
cwde
aad
rol
stos
push
xor
add
sbb
xchg
jno
popf
sbb
adc
mov
push
dec
dec
adc
aaa
paddq
mov
xchg
push
and
sub
ror
jne
(bad)
adc
adc
add
rcr
or
jmp
sbb
adc
cmp
call
or
loope
mov
cmp
aaa
sbb
xor
out
xor
popa
inc
xchg
rcr
adc
cmp
aad
or
and
sbb
cmp
cmp
dec
add
sti
div
dec
or
jg
inc
loopne
mov
test
cmc
sub
ins
add
retf
ror
adc
push
xor
xchg
test
mov
fild
cwde
jns
add
inc
add
stc
mov
loope
jmp
add
add
inc
add
add
sub
mov
push
call
inc
inc
or
call
call
pop
enter
cmps
sbb
mov
arpl
rol
mov
enter
(bad)
je
dec
jl
add
outs
ret
mov
call
movs
and
pop
cld
push
inc
ret
dec
jg
rcr
adc
leave
and
imul
adc
call
inc
mov
adc
enter
cwde
mov
mov
pop
xor
xchg
nop
pop
and
or
cwde
mov
adc
js
test
add
or
movs
test
outs
js
mov
sub
sti
inc
retf
and
and
sub
adc
out
lods
xchg
cmp
jb
push
add
fisubr
out
in
sbb
sahf
sbb
pop
out
push
add
jge
push
inc
add
sbb
and
mov
sbb
mov
push
fadd
dec
outs
movs
jns
test
or
dec
add
cmp
pop
mov
ins
inc
dec
push
sub
jecxz
out
mov
push
dec
test
and
sbb
xor
(bad)
mov
in
mov
cmps
xor
jo
lea
and
test
cld
sub
dec
(bad)
push
or
(bad)
ror
mov
or
sub
sub
enter
pop
or
pop
pop
jae
pusha
xor
enter
ret
xchg
mov
sbb
ds
xchg
addr16
fcom
cmps
add
sbb
dec
mov
or
mov
lea
enter
xor
pop
fadd
nop
pop
addr16
cmp
add
addr16
sub
outs
sbb
sti
outs
adc
xor
or
fs
and
pushf
ret
xchg
stos
add
sbb
and
dec
sbb
sbb
shr
mov
lahf
xlat
mov
sub
cmp
xchg
test
adc
adc
cmp
mov
jge
inc
or
add
adc
ror
xchg
adc
dec
or
adc
inc
pusha
xchg
mov
sub
sub
inc
inc
jge
hlt
and
inc
ret
mov
pop
mov
cmp
fist
mov
push
movs
inc
addr16
and
or
pop
out
test
mov
add
xor
pop
and
and
leave
sub
test
or
pop
jmp
sub
jmp
pop
or
pop
repnz
cmp
lock
not
mov
push
in
dec
iret
and
loopne
cwde
mov
pop
or
cmp
sub
jne
dec
cs
iret
inc
(bad)
js
rep
mov
hlt
push
jne
or
inc
fld
and
adc
in
nop
add
adc
nop
mov
jno
in
mov
movs
jae
mov
fmul
adc
xchg
dec
mov
push
mov
jb
sub
or
mul
das
rcr
dec
push
mov
jl
add
in
pop
mov
add
test
cwde
ja
or
push
jo
push
mov
mov
sar
jmp
sub
loopne
inc
punpckldq
jmp
aam
sub
or
lea
pop
mov
arpl
push
adc
cmp
ss
cmp
xchg
cmp
cmp
xchg
daa
xchg
sbb
nop
movs
out
pop
cwde
mov
adc
push
xchg
push
test
mov
adc
sub
outs
sub
push
test
pop
lock
jmp
sub
ins
shr
jmp
sub
xor
outs
pop
dec
or
pop
sbb
and
mov
add
das
shl
gs
xchg
push
inc
int
or
inc
into
xchg
pop
xor
pop
dec
scas
pop
sub
pop
xchg
adc
push
sbb
push
(bad)
bound
add
mov
aam
data16
repz
cmp
or
xchg
into
(bad)
loopne
sahf
idiv
jl
mov
dec
lahf
sub
loopne
je
and
sub
xor
jnp
pusha
mov
outs
adc
dec
inc
or
inc
rcl
or
and
movs
fstp
xchg
push
jbe
xlat
ds
retf
xlat
fimul
lds
xchg
dec
or
mov
jns
add
pop
push
daa
call
jmp
push
sahf
jg
iret
inc
add
(bad)
push
retf
xor
shr
(bad)
fmul
inc
sbb
cmovae
adc
xchg
sub
ror
mov
pop
pop
jne
movs
xchg
pop
(bad)
cdq
push
inc
xor
xchg
and
cli
xor
mov
dec
test
mov
pushf
dec
dec
adc
xchg
gs
pop
sub
mov
jne
imul
je
hlt
and
ficom
je
ss
sbb
movs
sar
iret
sahf
sub
adc
or
xor
fild
hlt
mov
or
test
mov
xor
sti
clc
rcl
pop
cmps
jne
or
xchg
add
mov
inc
aaa
mov
gs
cmps
pusha
xor
arpl
sbb
mov
cld
loop
popa
sbb
xchg
sub
cmps
fst
dec
sub
in
push
sar
sbb
out
and
inc
in
push
adc
imul
push
stc
xor
or
in
in
jmp
add
and
cwde
mov
ds
movzx
(bad)
push
popf
fwait
mov
push
cmp
or
lea
sub
call
outs
cmp
dec
mov
xor
nop
hlt
jno
repnz
sub
add
mov
adc
add
pop
or
ret
loop
dec
xchg
enter
mov
xchg
ror
mov
shr
lods
jnp
pop
ret
sbb
and
add
ins
or
(bad)
cmps
neg
add
or
loopne
das
inc
add
pop
push
mov
test
adc
jg
aam
jo
(bad)
in
in
jno
and
loope
pop
mov
jg
sbb
lock
mul
or
mov
xor
or
jle
aam
xchg
mov
icebp
cmp
xor
adc
pop
adc
cmovbe
icebp
mov
jp
push
pop
push
imul
sbb
cdq
loopne
mov
xchg
lds
gs
fs
inc
mov
retf
je
aaa
pop
(bad)
data16
adc
repz
call
dec
repnz
clc
out
mov
out
mov
push
inc
jne
mov
cld
jmp
lea
sub
in
mov
movs
dec
nop
outs
and
cmps
push
out
sbb
rcr
adc
add
xchg
inc
push
add
sbb
sub
and
nop
out
jmp
daa
aad
pop
cli
popa
jae
out
rcr
jle
sar
pop
mov
test
mov
iret
inc
rcr
jmp
jno
push
xchg
fwait
mov
mov
jmp
add
ret
ins
std
push
jns
pop
movs
or
dec
push
adc
push
sbb
call
imul
mov
mov
push
and
inc
mov
int3
sub
add
std
xchg
or
and
or
push
or
ins
out
bnd
popf
push
hlt
(bad)
jmp
add
inc
jns
lds
inc
sub
xlat
dec
or
or
shr
jo
pop
and
cdq
adc
test
xchg
jmp
pop
aas
mov
pop
inc
and
pop
sbb
popa
pusha
leave
mov
out
arpl
movs
jo
inc
push
lea
shl
sbb
mov
aaa
aam
xchg
mov
cmc
dec
add
mov
mov
ins
int
xchg
pop
pop
mov
add
inc
mov
outs
inc
sbb
pop
mov
mov
inc
ins
pop
xor
xor
dec
imul
sub
into
xchg
xor
xchg
or
(bad)
pop
rcr
or
xor
stos
popa
jmp
je
lock
mov
and
les
shr
or
adc
push
(bad)
jne
es
test
adc
and
and
dec
sar
add
add
bound
mov
cdq
cmp
mov
mov
mov
mov
in
lods
ror
repz
in
scas
and
add
sbb
add
(bad)
ja
dec
xor
adc
pop
cwde
add
je
inc
inc
pop
dec
xchg
call
cli
cmp
fldcw
je
pushf
int
mov
pop
mov
xchg
(bad)
out
mov
and
push
jmp
pop
push
faddp
(bad)
rcl
mov
mov
sub
test
mov
sub
sub
sbb
cmp
and
and
sub
add
aam
lods
pop
inc
mov
xor
jb
btc
sahf
and
pushf
imul
add
push
or
fadd
mov
mov
and
sahf
fidiv
std
cmp
sub
loopne
push
cmp
scas
pop
mov
lock
add
mov
mov
mov
mov
xor
out
ficomp
or
xlat
mov
sbb
pop
mov
sub
jnp
lea
or
xor
add
mov
push
sti
push
mov
xchg
push
push
enter
je
addr16
rcr
inc
adc
in
cmp
test
stos
sti
sub
mov
adc
rol
add
jo
lahf
daa
lock
mov
cld
movs
mov
inc
dec
inc
lea
aam
jl
fidiv
imul
sub
es
dec
test
fstp
xor
add
ficomp
loopne
pop
dec
shl
inc
adc
add
dec
dec
sbb
mov
sub
dec
add
loopne
add
and
rol
jbe
xchg
sbb
xor
adc
cld
push
mov
jb
cmp
xor
lock
adc
add
loope
sbb
xchg
adc
adc
or
loopne
fst
pushf
jnp
inc
sub
test
icebp
inc
je
mov
gs
movzx
ins
jl
or
push
adc
or
sbb
outs
movs
test
inc
test
fmul
cmp
mov
cmps
or
push
add
pusha
push
outs
mov
fistp
(bad)
je
int
arpl
out
(bad)
dec
and
add
jbe
test
xchg
test
mov
cmp
mov
add
pop
cmp
hlt
sub
adc
nop
outs
js
je
pop
mov
enter
mov
or
adc
or
adc
and
and
sbb
movs
jns
popf
sbb
inc
add
test
jnp
cmp
repz
or
adc
sbb
dec
mov
add
and
lea
pop
and
mov
lock
gs
fadd
or
jno
mov
and
pop
mov
imul
faddp
sbb
mov
mov
xchg
pop
sbb
xor
call
or
or
inc
inc
(bad)
add
inc
add
(bad)
mov
test
stos
pop
add
mov
xchg
add
movs
cs
cmps
jp
mov
pop
bound
cs
cmp
cmp
mov
repz
jne
push
xchg
popa
popf
adc
xchg
fcomp
sub
cmp
and
push
movs
in
dec
add
ins
pop
pop
mov
repz
add
pusha
repnz
cwde
repnz
adc
repnz
loop
xor
inc
xor
mov
xchg
dec
push
push
pop
add
pop
adc
aad
adc
je
xlat
pop
jmp
nop
inc
sub
add
test
inc
mov
sbb
add
or
xor
add
add
add
mov
cs
popa
add
inc
jne
jns
push
sbb
cmp
or
std
ins
push
pop
push
aaa
outs
jg
lods
inc
inc
rol
imul
fadd
jnp
ss
sbb
ret
in
dec
mov
jno
scas
jecxz
add
xor
ds
repz
inc
arpl
test
and
and
adc
ins
jmp
add
sub
sbb
add
enter
push
dec
movs
xor
sub
or
cmps
pop
or
aad
lock
mov
daa
push
mov
xor
test
xchg
xchg
cmp
mov
mov
adc
clc
popf
add
mov
leave
into
or
adc
and
sbb
sub
aaa
add
repz
push
inc
push
and
xchg
ret
into
sbb
cld
push
push
(bad)
mov
iret
push
xlat
and
lmsw
mov
inc
inc
push
std
mul
rcl
add
pop
cwde
div
adc
lahf
dec
add
inc
xor
cmps
sbb
bsr
sub
clc
mov
sub
push
imul
and
and
sbb
and
inc
jb
inc
leave
pop
mov
pop
imul
stos
cmp
pop
and
out
adc
mov
cmp
out
aam
mov
or
mov
pop
repnz
inc
out
movs
adc
repnz
mov
xchg
sahf
jnp
stc
inc
imul
test
out
adc
push
bound
fwait
cmc
out
xchg
push
call
loope
ss
mov
aas
jne
ins
ret
mov
loopne
and
test
js
(bad)
outs
jae
stc
sub
sub
push
xchg
inc
and
adc
repnz
jmp
das
cmp
add
dec
cmps
push
ja
test
cwde
mov
loopne
cmp
je
dec
cwde
icebp
dec
mov
mov
adc
inc
ins
lods
mov
push
mov
adc
daa
add
jmp
cmps
cmc
cli
nop
push
shl
push
mov
jmp
sti
sbb
loopne
pop
call
or
ss
xchg
xor
sub
test
imul
mov
and
inc
or
push
inc
or
ja
or
aas
pop
push
add
mov
hlt
mov
or
pop
fxtract
iret
push
loope
cmc
cmp
int3
or
pop
cmp
xor
test
dec
and
lahf
mov
repz
add
loope
cmp
sar
jge
xchg
push
push
fdiv
push
pop
or
push
add
mov
pop
in
addr16
dec
repz
cmc
fiadd
rol
xor
mov
aas
sub
push
sub
(bad)
push
add
popa
sub
add
inc
mov
shl
xor
add
xchg
sub
je
in
fwait
adc
pop
mov
daa
rol
enter
aam
cmp
or
ret
sahf
jmp
mov
xchg
pop
popf
mov
mov
nop
sbb
adc
xor
inc
pop
adc
outs
sbb
cdq
add
fwait
(bad)
je
pop
sbb
jle
dec
sbb
sub
xchg
(bad)
and
lock
mov
shr
dec
adc
add
dec
dec
push
jb
sbb
sbb
pop
add
pop
or
jae
or
pop
daa
or
mov
jecxz
xor
dec
add
je
or
test
daa
sbb
ja
sbb
cmp
sub
(bad)
adc
jl
dec
out
sub
cmp
add
pop
add
sar
es
or
in
imul
std
das
push
sbb
mov
jmp
mov
test
mov
mov
shr
adc
sti
xchg
sbb
sub
push
ja
jb
adc
mov
arpl
dec
push
add
inc
inc
mov
jg
cmp
sbb
pop
dec
push
inc
add
cmp
pop
es
hlt
or
(bad)
(bad)
xor
ret
or
xor
ds
and
cli
xchg
jg
pop
cmp
ret
not
cs
call
ret
imul
in
add
or
and
cmps
test
lds
push
lods
xchg
push
leave
mov
xor
xor
inc
lods
mov
popa
lock
lods
adc
and
pop
pusha
inc
push
inc
mov
mov
(bad)
xor
cmp
out
test
add
adc
sahf
mov
or
and
mov
add
lods
cmp
xchg
test
push
or
out
and
cmp
ss
rcl
sbb
jo
dec
fsubrp
test
dec
add
sub
repnz
jns
add
psrad
(bad)
loopne
and
pop
test
std
sub
push
xor
xor
jecxz
mov
xor
mov
jne
test
pop
xchg
push
dec
sahf
lahf
lock
inc
add
and
cmp
adc
cmp
sub
pushf
add
ins
mov
sub
xor
invd
leave
inc
jo
pop
outs
mov
mov
or
sbb
jecxz
das
pop
xor
cmp
bound
cmp
cmp
aam
nop
inc
inc
sub
cmp
jecxz
or
ror
mov
out
pop
add
mov
adc
inc
add
or
loopne
mov
lods
jnp
xchg
lods
mov
mov
add
add
add
sbb
and
iret
shr
aas
nop
mov
loop
ret
dec
sti
jno
test
jbe
pop
sub
mov
xchg
jl
loop
sbb
add
mov
jae
or
fnsave
stc
cmp
add
adc
push
sub
lea
(bad)
jnp
and
push
(bad)
inc
or
adc
int3
adc
hlt
shl
mov
inc
adc
add
push
pop
xchg
push
sub
add
cmc
inc
pop
imul
xchg
inc
xor
ret
xchg
outs
jo
jmp
(bad)
arpl
pop
mov
or
adc
in
xchg
lods
mov
or
and
dec
shr
scas
sbb
repnz
cwde
ret
add
hlt
adc
js
adc
outs
mov
xor
xchg
shr
sub
cmp
sahf
mov
xchg
xor
rol
dec
add
fisubr
aam
adc
(bad)
and
cdq
cmp
xchg
mov
out
pop
push
prefetch
aam
or
pop
pmaddwd
jae
pop
aaa
pop
inc
cmp
sub
je
sahf
lea
add
push
repnz
loopne
adc
push
push
push
add
mov
test
dec
je
push
or
popf
push
dec
lock
pop
adc
xchg
loope
or
xchg
(bad)
mov
fisttp
shl
inc
loopne
add
or
mov
sbb
add
bswap
adc
sub
call
call
mov
add
sti
test
call
test
movs
xor
pop
ret
push
(bad)
rcl
test
ret
jle
js
stos
je
mov
or
mov
int
dec
fld
loopne
sbb
xlat
inc
je
and
mov
add
adc
add
mov
aam
sub
jl
ins
xlat
mov
movs
xor
push
pop
in
and
xchg
or
inc
call
stc
jge
sbb
in
or
sub
lds
cmp
clc
mov
push
adc
les
mov
call
pop
pop
xchg
ja
les
ret
pop
mov
out
hlt
and
push
xor
mov
adc
xchg
pop
push
push
sub
cmp
mov
xor
fdivp
xchg
xor
add
and
dec
sub
call
out
fiadd
xchg
inc
mov
push
inc
in
mov
xchg
or
adc
inc
mov
test
nop
push
add
xchg
xchg
vmwrite
jmp
or
rcl
int
sbb
or
(bad)
stc
idiv
jl
sub
ins
mov
ins
test
mov
ins
lea
inc
dec
out
mov
ror
cmps
int
cld
push
dec
cmp
test
adc
in
sar
(bad)
jmp
out
dec
nop
stc
fdivp
je
mov
test
sar
add
test
push
lea
xchg
push
nop
sbb
jp
push
sbb
in
jmp
push
or
enter
xadd
out
shl
mov
jmp
shl
sbb
fisttp
jmp
movs
(bad)
sub
adc
cmps
sbb
mov
adc
mov
(bad)
and
adc
xor
sub
sub
pop
xor
xor
adc
sahf
xlat
mov
fmul
cld
mov
or
sub
daa
lods
and
and
jne
xor
pop
loope
jg
xor
jo
bound
sbb
test
inc
lods
xor
sub
(bad)
push
xchg
jnp
mov
out
xor
repnz
push
and
jne
add
mov
add
ins
loopne
cmpps
enter
imul
or
dec
in
xor
cmovs
xor
mov
dec
dec
pop
lahf
push
mov
xchg
dec
repz
andnps
push
cmp
mov
dec
dec
pop
pusha
cmp
xchg
mov
test
xor
add
cld
jns
or
xor
pop
pop
retf
enter
movs
loopne
inc
iret
adc
lock
xchg
fcom
cmp
jmp
and
inc
enter
inc
or
outs
lods
neg
inc
xchg
aas
mov
inc
or
adc
and
dec
loopne
jb
push
add
and
add
es
pop
adc
addr16
sbb
rcl
adc
pop
nop
mov
rol
add
bound
(bad)
adc
jns
pop
sub
mov
and
and
pop
push
pop
(bad)
stos
clc
inc
xor
push
jmp
cmp
xchg
and
xor
xor
nop
xor
sbb
aaa
ret
or
inc
push
adc
inc
adc
push
add
and
mov
mov
inc
or
mov
dec
xor
scas
dec
frstor
adc
or
(bad)
and
cs
cmps
not
mov
stos
sbb
aad
mov
pusha
nop
pop
jne
shl
popa
mov
cvtpi2ps
xchg
mov
nop
adc
clc
pop
adc
or
sbb
lea
mov
add
or
add
leave
mov
jbe
out
out
add
or
(bad)
mov
jmp
cwde
rcr
xor
dec
add
adc
les
inc
rcl
adc
out
pop
xchg
mov
push
rol
add
cmps
mov
pop
or
adc
les
loope
inc
imul
cmp
jne
nop
add
(bad)
stos
ret
daa
adc
lods
jo
adc
xchg
addr16
or
sub
shr
inc
jnp
pusha
(bad)
sbb
jmp
cmp
pop
and
adc
sub
add
(bad)
clc
loop
inc
mov
dec
lea
inc
sub
dec
jle
jg
xor
push
xor
sub
sub
xor
test
inc
jg
outs
scas
mov
ret
pop
call
xor
xor
(bad)
sbb
test
bound
popf
adc
mov
popa
in
lahf
adc
push
xor
xchg
enter
nop
call
and
cmp
add
ins
loopne
jb
out
push
je
jmp
adc
dec
pusha
aas
dec
js
cmp
fcmovbe
ror
adc
add
movs
aaa
adc
mov
push
jnp
jae
or
jge
dec
iret
repnz
pop
retf
test
xchg
rcr
adc
jl
xchg
mov
mov
xchg
add
mov
push
jne
xchg
dec
push
shl
sbb
pop
sbb
leave
mov
pop
jg
cli
xchg
frstor
add
imul
push
ja
(bad)
js
or
pop
jbe
or
scas
sbb
jl
movs
inc
arpl
out
sbb
fsubr
call
addr16
push
and
popa
stos
or
xor
push
mov
cmps
shl
dec
inc
cld
cmp
dec
xchg
sbb
test
(bad)
stc
sub
loopne
push
push
push
ror
push
sub
dec
sar
fist
push
add
mov
daa
mov
pop
pop
(bad)
push
pop
sti
inc
cmp
xchg
add
xchg
add
ins
push
mov
adc
repnz
cmp
or
les
mov
icebp
or
retf
rcl
inc
xchg
sbb
and
les
push
jg
push
sbb
fbstp
inc
sahf
shl
(bad)
xor
fidiv
mov
add
jl
adc
add
cmp
and
dec
dec
das
mov
(bad)
push
enter
sbb
lods
sbb
or
(bad)
or
es
mov
jnp
aam
sbb
push
pop
sbb
fucom
and
lahf
push
je
mov
(bad)
sbb
inc
(bad)
xchg
test
rcr
xchg
mov
lods
hlt
sbb
push
jmp
sub
test
dec
ins
shl
fwait
lds
sbb
sub
or
pop
sbb
imul
push
add
sbb
out
dec
dec
pop
xor
add
or
retf
dec
adc
push
add
xor
mov
pop
pop
jne
ror
test
popa
push
jo
sbb
add
sti
sbb
push
pusha
push
sahf
mov
pop
or
imul
jnp
leave
ret
sub
dec
sub
sbb
sub
or
jo
mov
pop
xor
add
std
push
cmps
pop
mov
sub
push
imul
push
jmp
jne
mov
stc
gs
and
sbb
out
dec
loope
or
push
int3
enter
inc
and
lods
inc
fnstcw
outs
mov
sub
mov
sub
sbb
stos
popa
rcl
pop
dec
sbb
lahf
hlt
or
lock
inc
stos
push
cmp
jp
test
or
cvtdq2ps
sar
sti
test
cmp
ins
or
ret
cdq
and
push
jae
mov
ja
inc
add
add
and
out
sub
sbb
xor
or
mov
ss
or
arpl
push
inc
jg
mov
das
xor
(bad)
(bad)
push
xchg
jb
aaa
jg
and
or
sbb
push
jnp
add
add
add
sahf
add
mov
sbb
pop
push
mov
mov
sbb
adc
jns
sbb
mov
sub
setle
mov
xchg
rcl
ror
jg
(bad)
punpckhbw
and
das
and
and
test
and
je
cmps
jnp
jo
je
and
and
out
retf
mov
and
pop
mov
ret
pop
dec
lock
cmp
xchg
add
mov
(bad)
cmp
or
add
and
sub
data16
push
adc
xor
cmc
sbb
jmp
mov
jo
add
xchg
lea
adc
test
sub
or
xchg
jne
scas
pop
mov
loop
sub
outs
(bad)
outs
push
or
shr
popa
faddp
stos
lods
xcrypt-cbc
cmps
(bad)
xchg
sbb
enter
cmp
and
inc
shr
movs
bnd
jne
sbb
pop
mov
sbb
mov
xchg
cld
fadd
mov
pop
xchg
xor
mov
out
ud2
ffreep
test
mov
jge
inc
clc
out
xchg
jmp
sbb
jne
sbb
pop
and
or
mov
ins
sbb
sbb
lar
mov
or
inc
or
push
movs
add
cmp
adc
jg
pop
jno
jp
out
pop
mov
add
or
pop
add
ret
inc
nop
outs
dec
dec
lahf
push
mov
adc
add
aam
adc
pop
push
dec
add
jo
push
aaa
(bad)
outs
je
or
pop
cmp
and
add
push
ds
add
adc
dec
sbb
push
sbb
inc
jb
xchg
mov
lahf
rcpps
icebp
ret
(bad)
push
mov
add
jl
(bad)
xchg
xor
and
dec
pop
dec
push
fadd
dec
call
jne
popf
cld
push
(bad)
lods
rcl
and
jbe
sbb
push
add
mov
sbb
mov
sbb
add
and
mov
sbb
test
js
push
push
xchg
mov
sub
mov
fdiv
push
nop
xchg
mov
clc
push
mov
imul
dec
push
dec
pop
pop
xor
(bad)
rol
out
inc
jge
xchg
mov
dec
and
pop
sbb
pop
add
pop
aam
jle
add
sahf
add
add
add
or
loopne
add
xlat
ror
lock
and
in
jg
jno
mov
push
push
cmp
pop
mov
push
rcr
inc
add
add
and
fldenv
adc
cmp
aas
and
retf
pop
movs
fs
dec
daa
mov
stos
(bad)
jl
movs
xchg
or
dec
enter
fild
inc
outs
mov
rcl
inc
xchg
adc
add
ret
imul
pop
jle
ret
or
inc
dec
test
pop
cmp
mov
out
sbb
movs
dec
sbb
inc
loope
pop
rol
push
adc
shr
mov
jne
mov
fisub
imul
adc
pusha
push
sbb
mov
jmp
and
loopne
popa
dec
cmp
inc
cmp
jg
je
sub
cdq
enter
icebp
cld
fist
adc
pop
jmp
add
jb
gs
push
gs
jo
por
gs
add
pop
sbb
push
jne
dec
or
ins
xchg
daa
sbb
das
push
cmp
sub
gs
(bad)
in
inc
push
jle
push
es
sbb
ret
pushf
pop
por
add
xor
iret
adc
fild
aas
jns
sbb
add
add
xchg
mov
(bad)
xor
jne
add
add
add
outs
xchg
out
das
ret
enter
pop
xchg
pop
jno
jne
cmp
es
jmp
add
mov
push
test
push
cmp
pop
sub
addr16
or
mov
xchg
cmp
sub
push
call
add
and
pop
enter
lock
mov
test
add
dec
sub
dec
xor
mov
fistp
icebp
pop
adc
lea
xor
pusha
add
push
shl
data16
adc
pop
pop
inc
mov
dec
sub
push
inc
dec
sub
push
push
aaa
pop
sbb
mov
shr
pop
xchg
adc
sbb
ins
sub
mov
ror
pop
pop
mov
sub
jg
xchg
(bad)
jge
pop
loopne
je
inc
or
or
rol
ins
mov
or
in
dec
test
mov
out
inc
add
xor
jmp
retf
jne
add
xchg
repnz
rcr
inc
adc
loopne
in
rol
pop
xchg
inc
mov
add
pop
sbb
jecxz
lea
add
mov
rcl
jb
ins
or
or
loopne
idiv
cmp
inc
or
inc
sbb
aaa
cmp
ret
inc
sub
dec
test
cmp
and
dec
test
jge
gs
mov
mov
and
sahf
ins
(bad)
push
adc
jle
and
daa
inc
push
add
pop
int
add
sub
sbb
push
out
jo
mov
adc
ret
test
sbb
ja
(bad)
nop
mov
loop
fmul
arpl
jnp
ret
fist
or
jecxz
pop
lahf
fwait
(bad)
sbb
ret
add
ret
push
sbb
xchg
xor
iret
xor
jbe
data16
or
cmp
sbb
nop
daa
adc
xchg
int3
and
fld
lahf
xor
jne
push
pop
aad
mov
sar
push
enter
inc
pop
mov
daa
jb
out
mov
in
gs
test
pop
mov
xor
cmp
add
dec
mov
mov
or
mov
mov
lea
and
inc
mov
mov
mov
push
lock
push
sbb
(bad)
adc
or
xchg
and
sbb
dec
das
dec
push
xchg
push
sub
cs
add
(bad)
and
sub
sub
or
xor
outs
fsubr
or
ja
or
jns
lds
ret
pop
inc
jne
cmp
inc
pop
aaa
add
jp
xor
nop
bound
push
or
mov
leave
shr
and
add
mov
mov
std
pop
adc
add
in
mov
addr16
push
jge
sbb
push
cmp
jge
and
bound
fstp
xchg
pop
in
aas
add
cmp
jle
aas
call
and
inc
fiadd
pusha
mov
popa
or
jne
les
push
imul
add
stos
and
push
addr16
addr16
push
daa
or
das
jae
push
push
push
or
and
nop
mov
adc
in
inc
cmp
int3
int3
repz
add
add
dec
adc
in
dec
and
push
out
in
xchg
pop
leave
in
inc
adc
sbb
xlat
jno
and
rol
ficom
ds
arpl
iret
xor
cmp
jge
stos
test
(bad)
stos
aad
mov
test
push
ins
ds
and
je
pop
mov
ret
fiadd
xcrypt-ofb
cmps
outs
cmp
xadd
sbb
inc
dec
cmp
fdiv
push
cmp
out
xor
scas
mov
or
mov
stc
icebp
test
nop
inc
loopne
je
mov
sbb
and
jbe
imul
mov
cmp
add
sbb
sbb
mov
push
adc
lods
or
ror
pop
push
and
pusha
xor
ins
or
outs
adc
or
mov
ficomp
sbb
pop
push
push
push
pop
mov
repnz
pop
jle
inc
adc
inc
inc
inc
inc
and
dec
ins
sub
retf
sub
push
lock
sbb
add
jp
inc
adc
movs
push
xor
movs
idiv
pop
fdiv
(bad)
xchg
adc
pop
test
pop
inc
iret
int3
ret
or
push
sub
sub
cdq
jle
jae
in
sub
pop
xor
inc
sbb
ins
sub
xlat
sar
cmp
inc
xor
inc
pop
shl
xchg
xor
push
xchg
xchg
dec
arpl
loopne
ins
and
daa
jmp
adc
adc
mov
fsub
jge
add
dec
stc
add
lock
jecxz
aaa
mov
hlt
popf
or
add
xchg
push
push
je
and
dec
out
ret
shl
and
and
imul
(bad)
test
jo
std
rol
inc
in
leave
ret
iret
mov
call
mov
(bad)
pop
inc
jo
mov
bound
mov
sbb
pop
imul
adc
mov
shl
sbb
or
fmulp
push
call
pop
sub
xchg
adc
loop
fs
ret
add
data16
sbb
push
xor
cld
fisttp
jb
add
cmp
jle
add
in
cmp
add
or
int3
scas
repnz
cmp
mov
cs
ins
fbld
imul
dec
xchg
test
nop
push
mov
sub
add
fist
and
mov
pop
fnstcw
xchg
mov
lods
movs
pop
enter
pop
in
call
fidivr
jmp
in
sub
push
clc
clc
xchg
out
shl
or
in
or
leave
xor
or
mov
dec
add
movs
ror
fmul
fmul
aam
adc
sub
pop
ins
pop
inc
add
cmp
sub
test
addr16
add
adc
ret
dec
mov
clc
mov
push
rol
and
push
xor
and
mov
cmp
ds
cmp
fwait
sbb
outs
ror
dec
call
daa
das
cdq
push
add
sub
mov
jae
jmp
add
add
and
mov
retf
jae
enter
mov
dec
or
adc
scas
loopne
sub
or
loopne
jmp
mov
fs
and
pusha
xor
loopne
add
inc
cs
lds
out
push
and
jle
loop
fdivr
jmp
sbb
cwde
ficomp
int3
add
mov
clc
mov
sub
mov
call
or
test
adc
(bad)
jmp
xor
pop
inc
mov
add
cmp
arpl
mov
cmp
and
and
adc
dec
fmul
or
mov
fistp
dec
fadd
popf
pop
mov
or
dec
ins
xchg
cmps
dec
les
sbb
dec
mov
cmp
repz
cs
add
out
sub
xor
les
or
mov
push
pop
test
xchg
pop
mov
xchg
jno
in
je
lar
mov
add
shr
pop
pop
loopne
dec
xchg
jge
dec
mov
cmp
and
pop
mov
xchg
mov
add
mov
inc
daa
dec
add
shl
nop
push
sub
cs
sbb
shr
inc
xor
in
pop
push
mov
push
jle
push
add
pop
xlat
and
ins
pop
fcmovnbe
cli
mov
jne
sub
sar
adc
imul
jge
jmp
push
jmp
(bad)
adc
loopne
jne
inc
push
or
sysexit
aas
dec
fcom
ret
ror
push
(bad)
adc
dec
cld
add
or
sub
or
push
cmps
add
inc
inc
xor
jae
mov
sub
jg
loopne
movs
imul
dec
inc
cdq
nop
add
pushf
dec
sub
(bad)
out
cwde
stc
cmp
sar
cmp
mov
cmp
xchg
dec
nop
push
ret
pop
retf
xchg
adc
imul
inc
mov
pop
pop
pop
call
push
cmp
popa
mov
(bad)
pop
sar
or
pop
gs
and
fidivr
mov
cmp
bswap
cmp
push
sahf
fsubr
ins
mov
or
add
adc
jb
xor
pop
add
inc
or
mov
ret
push
sti
in
jne
out
or
push
xchg
and
sbb
es
mov
xchg
or
push
and
(bad)
mov
out
xchg
(bad)
mul
lods
imul
in
shr
push
cli
hlt
inc
cmp
push
jge
jo
push
shl
add
dec
jnp
cmp
aam
and
ret
adc
fild
test
adc
adc
test
push
iret
inc
nop
or
or
int
stc
jge
lock
loopne
clc
cs
adc
sbb
cwde
push
add
xor
test
fild
pop
adc
add
push
and
or
gs
mov
sbb
aad
adc
lock
add
mov
hlt
cmp
fidivr
push
fdiv
xchg
(bad)
in
call
adc
aam
inc
loop
adc
push
inc
imul
rcl
xchg
add
and
mov
ret
pop
xchg
inc
jns
dec
pop
sbb
rcr
lds
mov
les
and
mov
jnp
inc
or
enter
push
xor
imul
adc
mov
cmp
or
adc
aad
fild
mov
stos
inc
imul
in
or
enter
sub
test
ret
je
(bad)
or
shl
cmp
dec
lock
call
in
retf
data16
add
and
and
pop
mov
mov
shr
and
mov
pop
mov
dec
icebp
mov
outs
cmp
or
xor
dec
xchg
or
sub
dec
add
jecxz
(bad)
aaa
or
fs
sub
popa
and
mov
add
xchg
xchg
xor
dec
xor
add
imul
inc
les
mov
mov
pop
xchg
sbb
fdiv
or
aaa
add
leave
fwait
sub
pusha
add
dec
sahf
fnstenv
push
push
jg
or
dec
jg
addr16
or
xchg
fcmovnb
xchg
add
push
add
xchg
out
(bad)
gs
(bad)
fisttp
inc
(bad)
(bad)
(bad)
sbb
sub
sbb
pop
call
fwait
cmc
mov
sbb
scas
shr
mov
push
pop
xchg
dec
loope
cli
cs
enter
dec
ja
or
jo
pop
clc
sbb
sbb
nop
adc
add
clc
xchg
push
and
jb
cmp
movs
xchg
xchg
loopne
inc
dec
dec
xor
or
js
mov
cmp
clc
add
cmp
(bad)
cmp
mov
cmp
dec
mov
test
push
(bad)
and
aaa
or
mov
fisubr
jl
dec
dec
push
add
jl
xchg
dec
enter
dec
nop
in
jno
ret
addr16
push
(bad)
push
cmovns
adc
adc
gs
push
inc
push
mov
xchg
fwait
js
mov
rol
lea
ror
imul
xor
adc
mov
fnstenv
adc
inc
test
test
hlt
test
scas
jae
nop
adc
inc
dec
cs
(bad)
mov
or
adc
shl
pusha
shl
mov
add
arpl
push
sbb
int3
cmps
inc
fwait
or
mov
push
add
lock
pop
push
push
loopne
xchg
jo
pop
cmc
clc
ror
sbb
mov
xchg
sar
xchg
loopne
mov
ins
add
hlt
add
mov
addr16
add
daa
das
jg
jge
push
mov
sub
sub
(bad)
shl
push
add
jge
mov
cmps
and
adc
test
add
xchg
inc
push
xlat
pop
jbe
sub
jmp
inc
push
add
cmp
pushf
dec
in
sub
add
jb
push
ficom
push
or
mov
les
mov
ret
ss
and
dec
cwde
and
cdq
shl
cwde
add
inc
(bad)
xor
ret
mov
dec
inc
or
test
hlt
test
jp
pop
lahf
xchg
inc
add
fsub
mov
cmp
mov
test
dec
pop
xor
add
ror
xchg
dec
add
ret
sbb
lods
cmps
scas
mov
push
add
sub
and
xchg
and
and
inc
dec
jge
sbb
push
mov
push
outs
es
xchg
test
xor
clc
mov
dec
add
jge
cmp
sub
mov
jae
test
add
jo
cmp
mov
mov
xor
push
jle
adc
ins
sar
jle
pop
jbe
xor
ins
fwait
popa
jmp
add
push
(bad)
pushf
push
rcl
in
pop
dec
call
rol
jbe
add
fwait
sub
dec
jmp
and
ins
mov
mov
push
adc
lea
in
callw
sbb
sub
and
sbb
mov
and
loopne
push
mov
cwde
retf
cmp
adc
mov
gs
and
xor
cmp
es
aaa
inc
pop
int
pop
xchg
inc
(bad)
lock
ror
pusha
pop
mov
add
iret
movs
add
sti
xchg
aas
mov
or
push
push
sti
gs
push
inc
cld
fist
inc
or
push
adc
add
fs
lea
jo
jae
mov
mov
push
xchg
enter
push
addr16
xor
push
stc
cwde
push
ds
xor
inc
sub
imul
lahf
js
dec
and
pusha
mov
pop
dec
sub
iret
cmc
jecxz
cmp
cmps
lock
hlt
adc
adc
sbb
mov
or
test
in
jb
sbb
mov
pop
inc
xor
mov
inc
idiv
add
sbb
scas
mov
mov
aad
cmps
jl
push
and
test
stos
push
mov
inc
adc
mov
fs
mov
xor
mov
and
rcl
pop
invd
in
cmp
test
cwde
in
dec
or
cmps
jbe
cmp
cmp
jl
push
fucomi
inc
js
in
inc
or
stos
inc
mov
pop
inc
enter
inc
jecxz
pop
sbb
xchg
push
jo
lods
sbb
(bad)
jmp
repnz
cmp
ja
je
outs
and
jne
fimul
hlt
dec
out
or
push
cmps
stos
inc
je
mov
xor
pop
xchg
push
(bad)
mov
inc
popa
sub
and
add
push
aaa
and
lock
imul
jae
in
popa
mov
imul
pop
repnz
nop
das
(bad)
xor
nop
add
iret
cmp
sub
xchg
(bad)
frstor
jo
inc
cs
(bad)
js
cmp
(bad)
dec
pop
cmp
mov
scas
(bad)
jl
add
mov
out
retf
loope
sub
mov
das
add
int
inc
inc
cmp
es
mov
int3
mov
in
push
dec
aaa
rcr
inc
cmp
pop
xor
mov
add
sbb
or
ds
sub
or
inc
sub
pop
pop
adc
xchg
pushf
and
xor
cmp
leave
sbb
fs
sbb
aam
nop
stos
sbb
jno
cmp
dec
inc
pop
jo
aaa
xor
cmp
or
or
and
or
sbb
inc
gs
dec
xor
push
jmp
mov
popa
lock
mov
xchg
mov
cmp
mov
rol
dec
adc
pslld
popf
ins
lock
push
add
mov
push
mov
enter
cmp
inc
dec
inc
je
lods
and
add
adc
mov
out
and
cmp
jne
inc
clc
push
cmc
popa
or
stos
xor
inc
jmp
xchg
push
add
sbb
push
jne
scas
adc
or
cmp
jl
aad
adc
xchg
cmps
not
add
shr
xor
jae
jne
adc
add
lea
dec
jne
dec
inc
repz
(bad)
ins
sbb
and
jmp
adc
call
mov
dec
mov
and
stos
mov
push
pusha
sub
jmp
shl
es
jmp
xchg
loope
cmp
bound
aam
popa
lds
enter
shl
test
xchg
pop
out
nop
adc
jbe
ins
scas
mov
leave
sub
or
jmp
cmp
pusha
adc
sbb
ss
mov
cmp
inc
bswap
pop
xor
(bad)
jo
sbb
mov
daa
or
(bad)
push
test
jg
jge
cmp
xor
out
rol
pop
add
mov
not
or
mov
dec
retf
mov
addr16
cmc
fnstenv
inc
nop
mov
mov
dec
push
mov
and
xsha256
cmps
push
popa
cwde
dec
sub
dec
mov
sub
xlat
lock
dec
sti
xchg
sbb
sub
hlt
xor
adc
jecxz
cs
sub
adc
xchg
test
pop
add
dec
mov
cld
adc
stos
sahf
ins
push
test
movs
push
adc
retf
inc
js
(bad)
push
push
inc
fadd
dec
or
mov
int3
push
call
pop
sbb
pop
or
adc
add
push
jne
push
cmc
xchg
jge
push
xchg
je
and
inc
adc
add
push
pop
mov
not
jl
mov
dec
and
in
ror
aaa
or
dec
push
dec
jae
loopne
mov
sbb
cmps
scas
sub
pop
cdq
arpl
loopne
std
clc
lds
inc
fs
pop
push
dec
loope
(bad)
aas
mov
sbb
pop
je
outs
and
sub
or
inc
imul
xchg
mov
or
js
call
mov
push
pop
imul
sub
sbb
adc
(bad)
mov
jle
adc
sbb
push
add
pop
ror
enter
adc
iret
pop
sbb
sub
add
xor
add
mov
and
or
xor
sub
pop
into
push
and
pop
mov
add
test
sub
js
addr16
mov
dec
call
inc
inc
push
cs
adc
mov
dec
xor
movs
inc
cmp
ins
pop
hlt
sub
ror
cli
push
mov
xchg
jmp
(bad)
fsubr
in
inc
dec
call
inc
aaa
jle
sub
pop
xchg
hlt
out
stos
dec
xor
cmp
and
and
push
jmp
stos
or
mov
xor
mov
movs
or
push
sti
mov
out
enter
shr
lods
call
add
add
xor
sub
ret
dec
or
jg
ins
and
add
rcl
xor
es
fidiv
cmp
out
dec
enter
retf
jo
add
scas
in
jo
xor
or
inc
or
inc
(bad)
mov
dec
ret
js
push
fsub
clc
ja
xor
pusha
or
push
adc
push
add
pop
mov
sbb
sbb
mov
xor
mov
loope
xor
stos
or
add
push
sbb
inc
mov
mov
das
(bad)
mov
xlat
sbb
push
add
movs
jae
retf
dec
xor
xchg
cmps
rol
dec
cdq
test
jo
rol
(bad)
adc
sbb
lods
mov
loopne
test
cmp
mov
mov
xor
test
and
cmp
sbb
rcl
mov
rcr
daa
loopne
mov
xchg
push
lock
push
ja
cmp
dec
pop
aad
sbb
inc
adc
push
stos
or
push
xchg
mov
adc
loop
cmp
sub
and
add
aam
adc
pop
dec
loope
push
push
sub
fs
sub
cmp
(bad)
xlat
jo
(bad)
cmp
ins
xchg
and
jmp
push
add
push
sbb
lods
call
test
inc
(bad)
adc
add
idiv
add
sbb
adc
push
ret
fcom
imul
xor
push
cmp
push
enter
add
and
fcomp
add
adc
rcl
inc
arpl
jnp
pop
push
inc
mov
adc
inc
int3
or
pop
and
or
add
mov
call
cmp
jl
ins
xor
and
and
pop
dec
sbb
dec
inc
mov
xor
inc
add
cld
test
dec
xor
push
mov
push
dec
jecxz
add
lea
push
adc
jne
or
sbb
js
adc
push
mov
push
mov
or
jmp
mov
daa
sbb
imul
or
adc
dec
fcom
dec
or
loopne
unpckhps
sbb
adc
sbb
pop
ss
inc
ror
fiadd
or
xor
or
pop
faddp
mov
sbb
jno
pop
aas
mov
div
movs
dec
sbb
adc
mov
(bad)
mov
mov
add
cmp
and
add
and
xchg
adc
xchg
mov
sub
add
inc
sub
test
mov
sub
mov
adc
sbb
push
stc
cmp
add
jl
or
ja
adc
sbb
push
xchg
jg
idiv
xor
add
and
sub
fwait
call
scas
ret
mov
pop
adc
call
ja
adc
mov
jnp
adc
xchg
mov
adc
mov
or
mov
test
jmp
rcr
arpl
mov
fimul
bound
cmps
add
dec
addr16
outs
icebp
push
ret
jg
outs
(bad)
in
dec
mov
inc
mov
fcom
repnz
add
add
je
(bad)
xor
inc
xchg
sbb
or
cmp
in
inc
sbb
jne
stc
neg
push
pop
cli
jb
or
dec
test
cs
push
enter
cmc
fcomip
mov
arpl
fst
inc
push
in
sub
cld
sub
test
add
loope
jmp
or
mov
jmp
add
lahf
xchg
push
in
adc
push
sbb
mov
lock
push
or
data16
inc
add
lods
xor
test
add
outs
xor
nop
test
or
(bad)
jl
movs
mov
mov
mov
mov
push
mov
mov
enter
call
and
lods
leave
(bad)
stc
out
mov
mov
push
pop
(bad)
jne
ret
xchg
outs
mov
mov
adc
or
jo
jne
adc
push
je
addr16
push
lods
xchg
pop
jmp
pop
xor
jl
pop
add
les
xchg
mov
or
ror
imul
xchg
daa
lock
add
lock
push
sbb
adc
cmp
lods
or
rol
clc
pop
inc
sbb
xor
cld
lock
add
test
mov
jnp
cwde
jle
mov
push
add
and
fidivr
xchg
enter
cmp
sbb
push
pop
imul
cmp
xor
je
push
outs
ins
clc
mov
ins
mov
push
and
add
adc
cs
mov
dec
call
sbb
stc
in
pop
(bad)
lock
imul
or
xchg
xchg
xlat
and
pop
sub
icebp
push
mov
sbb
sbb
cmp
mov
inc
data16
adc
or
mov
ficom
fdiv
rcr
inc
lods
sub
jb
test
and
or
or
lods
jae
sbb
repz
pop
in
imul
mov
adc
sbb
or
test
add
mov
icebp
enter
mov
mov
pop
in
jne
cwde
push
js
add
mov
jmp
inc
daa
xor
je
repz
ds
xor
addr16
dec
test
add
dec
dec
inc
pop
adc
dec
lock
daa
and
mov
sbb
iret
int
leave
(bad)
mov
fstp
and
sbb
jbe
xlat
and
repnz
or
adc
ins
cmp
inc
(bad)
retf
dec
and
mov
aaa
stc
cmp
dec
or
adc
test
cmp
mov
adc
neg
dec
pop
gs
adc
int3
or
shl
stos
push
inc
mov
inc
mov
mov
add
or
or
mov
dec
addr16
sbb
sub
mov
fs
xor
test
ficom
add
ss
dec
push
sbb
add
and
push
mov
cmp
stos
shl
inc
xor
sub
out
sub
mov
enter
lods
fsubp
test
dec
push
aaa
add
jns
jo
and
add
add
or
(bad)
int
sub
pop
inc
jno
enter
dec
or
push
and
sbb
xchg
out
ins
inc
mov
add
das
inc
fidiv
xlat
mov
movs
cmc
cs
mov
add
arpl
mov
xor
push
xchg
retf
pop
cmps
cmp
push
add
dec
dec
pop
or
xchg
ins
loopne
ror
retf
inc
mov
sub
cmp
lds
cmp
outs
jl
adc
lahf
in
lock
sbb
cmps
in
jge
sbb
test
mov
lea
retf
ins
pop
sbb
push
add
fisttp
lea
mov
and
cmp
repz
push
cmps
pop
jb
and
add
or
ror
and
pop
int3
ret
pop
or
xor
imul
ja
clc
sbb
add
or
popa
pushf
retf
xchg
or
hlt
sbb
xor
dec
add
cmp
mov
jne
add
ins
imul
les
xchg
pop
shl
mov
sti
pop
push
mov
inc
dec
punpckhwd
loop
and
cmc
mov
xchg
mov
inc
fsub
lea
mov
mov
push
outs
cmp
mov
xchg
cmps
sbb
push
or
sbb
fdivr
aaa
mov
fs
mov
mov
inc
cmp
gs
aaa
mov
inc
pop
xchg
dec
test
jb
cmp
gs
cs
mov
xchg
adc
pop
mov
(bad)
push
mov
mov
xor
mov
mov
ret
push
sbb
rol
adc
stos
mov
adc
movs
cmp
push
lds
cli
push
clc
xor
push
inc
in
pop
sahf
sub
sub
cmp
(bad)
sbb
pushf
out
sbb
jb
das
jb
xchg
push
rcr
push
add
div
xchg
out
(bad)
mov
out
jle
jecxz
test
inc
mov
cdq
mov
ror
mov
sbb
and
rcr
pusha
sub
test
and
sahf
(bad)
shr
cdq
inc
pop
mov
adc
push
sub
inc
push
adc
and
ret
jmp
mov
xor
push
sub
out
or
adc
sbb
ja
outs
dec
pop
jns
add
sub
push
add
add
ds
les
adc
mov
xor
jl
mov
or
ficom
test
hlt
mov
outs
or
ss
push
jo
(bad)
and
push
sbb
adc
adc
push
push
(bad)
xor
ds
nop
mov
sbb
push
add
call
addr16
lock
push
loopne
push
outs
push
cmp
out
(bad)
imul
add
sub
pushf
cmp
test
mov
dec
sbb
push
les
ret
fild
stos
adc
sbb
add
ins
xor
add
clc
xchg
test
dec
es
test
cld
in
xchg
stos
sbb
push
adc
jmp
adc
push
fld
fld
fisubr
or
inc
pop
out
dec
js
lahf
iret
(bad)
js
cwde
push
sbb
dec
lea
sbb
lds
sbb
dec
call
pop
add
and
xor
adc
sub
pop
test
push
inc
and
cli
sub
ins
xchg
jno
aam
fs
push
push
leave
repz
push
inc
sub
or
(bad)
repnz
xchg
pop
fcmovbe
daa
in
and
movs
in
int3
(bad)
ja
stos
rcl
adc
in
je
hlt
scas
sub
dec
push
fldln2
(bad)
dec
mov
mov
or
mov
cmp
cwde
sub
inc
inc
adc
sub
pop
cli
push
xlat
xchg
loop
xchg
jle
xchg
mov
dec
call
and
in
movs
sti
pusha
inc
or
es
into
mov
push
out
stos
arpl
clc
in
loop
and
loope
dec
ja
movs
and
stc
daa
jecxz
imul
lods
test
xor
clc
jmp
add
push
cwde
push
push
jo
mov
dec
inc
or
cmp
sub
push
mov
mov
jbe
jne
and
sub
fistp
adc
cmp
jne
cwde
push
sbb
pop
adc
sbb
loopne
and
pop
or
sub
sbb
push
or
xchg
mov
imul
imul
out
mov
or
leave
and
or
(bad)
adc
pop
lock
add
cmp
dec
icebp
xchg
sbb
sub
ins
push
xor
lods
add
ja
daa
xchg
add
push
lods
inc
and
pop
outs
lock
or
mov
fld
scas
mov
xchg
cmp
add
sbb
dec
sbb
jne
dec
jb
movs
lock
push
mov
jo
arpl
pop
popa
fisub
push
mov
pop
sub
mov
jo
daa
minps
js
add
cmp
jo
bound
mov
ret
sbb
and
mov
add
add
cmp
popa
xchg
fsub
or
inc
rol
pusha
lea
add
outs
dec
shl
and
inc
test
jbe
dec
inc
outs
mov
adc
cmp
mov
(bad)
add
push
(bad)
or
sbb
lods
jmp
xchg
push
arpl
mov
mov
add
mov
xchg
loope
sub
mov
push
mov
sub
xchg
add
cmc
push
(bad)
sbb
push
js
push
rol
and
push
and
adc
mov
sub
(bad)
mov
xlat
mov
push
pop
(bad)
jbe
daa
mov
mul
jg
mov
and
mov
cmp
sbb
daa
cwde
gs
nop
je
sbb
in
pop
sub
jle
jl
xor
lock
daa
ss
ss
test
or
es
push
lahf
jb
push
sub
mov
or
add
cli
cmp
and
inc
and
dec
adc
int3
jl
retf
adc
and
adc
ins
fwait
cmps
and
(bad)
leave
adc
jle
sbb
dec
mov
les
sub
and
jo
mov
aad
aam
adc
out
sub
and
mov
jmp
ins
loopne
inc
sbb
add
icebp
movs
test
add
(bad)
cmps
pop
ins
inc
cmp
sub
push
call
pop
xchg
push
adc
jge
jbe
ins
out
pop
sub
je
add
ins
retf
(bad)
cdq
jae
inc
imul
inc
lods
inc
push
jnp
bound
loopne
sub
add
push
gs
push
add
inc
and
sbb
pop
adc
push
mov
inc
cmp
rcl
inc
ret
rol
sub
(bad)
xchg
add
in
into
push
add
enter
xor
aaa
aas
call
rol
fwait
outs
fdivr
cmp
cmp
je
sbb
call
inc
arpl
sub
pop
sub
add
scas
and
xchg
add
into
mov
fild
mov
jne
ret
scas
cmp
jmp
popf
outs
or
popa
add
lea
dec
pop
cmp
pushf
add
pushf
xor
sub
add
adc
mov
enter
pop
or
and
enter
dec
adc
not
jl
cwde
push
imul
ds
jge
jno
or
jne
push
adc
inc
cmp
fild
loope
xor
push
xor
jnp
add
or
cmp
xor
ins
xor
in
xchg
ins
add
ret
or
add
call
push
pop
in
xor
xor
ret
enter
outs
sub
aaa
ins
test
sbb
pop
pop
jbe
mov
xchg
jp
cmc
outs
add
mov
(bad)
fstp
fadd
ret
and
fdivr
pop
test
jbe
mov
or
adc
or
mov
adc
push
pop
dec
sub
and
or
sub
adc
push
jb
and
stos
add
mov
sub
pop
adc
test
sub
sub
pop
outs
inc
dec
push
aad
add
test
pop
cmps
test
xchg
aam
and
inc
xchg
jbe
int3
loop
adc
jge
and
push
push
into
adc
ret
fcmovnu
jae
add
dec
cmp
sahf
mov
xchg
lea
sbb
sbb
ss
adc
jmp
shl
fs
mov
jnp
pusha
add
test
or
adc
stos
sub
or
xor
loopne
adc
imul
xor
mov
or
xor
adc
sahf
cmps
std
xchg
cmp
jl
or
in
scas
jns
push
pop
xor
sub
xor
and
jmp
push
push
push
js
rol
jg
add
sbb
fst
les
pop
test
sbb
mov
mov
sub
push
repz
ret
jne
sub
inc
pop
dec
lea
pop
inc
rcr
xor
cwde
or
inc
or
push
and
add
mov
jne
add
lock
mov
movs
xor
cs
addr16
xor
repnz
lock
or
sbb
jne
cmp
dec
rcl
push
ds
mov
loopne
push
imul
arpl
adc
sbb
push
movs
inc
in
cmp
fadd
call
daa
and
or
test
fdiv
jae
dec
pop
xchg
enter
test
and
xor
push
xchg
(bad)
icebp
add
daa
fcomp
add
jge
icebp
fisub
loope
or
hlt
cli
jge
inc
je
or
ret
push
ret
mov
and
or
mov
mov
leave
push
inc
mov
rcl
aaa
lea
jmp
or
or
mov
xchg
(bad)
mov
aaa
retf
push
inc
add
push
xchg
popa
sbb
outs
arpl
push
mov
dec
movs
mov
dec
cmp
add
mov
sti
(bad)
inc
adc
sub
push
lea
cld
mul
push
lea
lea
lea
or
adc
data16
sbb
mov
pop
cmp
jp
aaa
jbe
jmp
jmp
lock
adc
ins
dec
call
inc
pop
push
bound
out
adc
mov
xchg
dec
int
or
push
mov
addr16
sbb
ret
inc
xchg
sub
pop
das
cmp
imul
inc
jmp
push
sbb
xor
int3
adc
xchg
shr
lea
push
ret
sub
mov
stc
inc
mov
div
(bad)
in
xchg
mov
dec
inc
adc
xchg
(bad)
(bad)
push
test
adc
test
int
mov
push
jnp
sub
fdivr
or
test
mov
movs
jb
enter
retf
lock
loopne
imul
rol
add
out
mov
push
pop
xor
lods
fiadd
dec
cs
inc
scas
lods
xchg
sub
add
dec
add
ins
adc
lea
cmc
daa
jmp
data16
xchg
aaa
js
push
sub
call
ins
imul
aaa
pop
push
pop
adc
xchg
push
mov
pop
mov
retf
push
mov
test
imul
jae
daa
imul
aaa
nop
adc
popf
sbb
dec
push
mov
ret
or
sub
call
or
pop
add
dec
iret
cwde
add
ss
mov
pop
out
sbb
push
stos
or
dec
mov
jnp
movs
sbb
mov
aam
or
mov
add
fidiv
loopne
imul
inc
inc
loope
ret
lock
mov
mov
jo
popf
xor
int3
add
(bad)
movs
enter
jle
xor
dec
aas
sub
test
mov
and
cmp
cmp
movs
adc
in
pusha
cmp
imul
and
sbb
mov
xor
push
fdivr
mov
ins
cmps
hlt
fisubr
aas
ret
mov
pop
add
jp
aam
sbb
and
xor
pop
inc
das
inc
sahf
jbe
sbb
nop
mov
ficomp
xchg
push
push
push
mov
jp
pushf
push
jb
mov
xchg
jne
jge
std
mov
push
and
jns
jge
mov
sub
aaa
sbb
popa
outs
or
dec
mov
test
add
mov
xchg
push
jae
add
ins
xor
adc
mov
or
cmp
enter
or
loope
pop
mov
mov
xchg
or
push
adc
fwait
xchg
adc
pusha
cmps
jno
dec
mov
sub
sbb
jmp
sbb
mov
aad
gs
fbld
mov
sub
xchg
xor
aam
xor
popa
xchg
movs
pop
dec
dec
or
dec
out
popf
lods
scas
push
xlat
mov
movs
or
or
inc
xchg
and
add
or
aas
sub
mov
dec
stos
and
sub
rol
call
mov
adc
or
and
xchg
xchg
push
inc
pop
xlat
nop
fnstenv
movs
pop
sti
(bad)
sbb
add
add
pop
inc
sti
push
xchg
adc
adc
adc
push
sub
test
dec
call
add
xor
mov
and
push
cmps
cmc
ficom
rol
push
dec
adc
add
mov
(bad)
fcom
push
mov
imul
pop
pop
xchg
xchg
daa
push
push
xor
xchg
inc
js
dec
pop
ja
aad
push
iret
and
inc
adc
test
inc
dec
mov
std
mov
inc
fcom
sbb
adc
add
popa
dec
and
jae
dec
or
into
xor
leave
dec
popa
add
ins
popa
popa
imul
adc
jmp
ret
xchg
lea
imul
gs
(bad)
jmp
and
dec
adc
ja
sbb
push
xchg
xchg
and
cmp
ret
fiadd
mov
push
outs
shl
in
shl
sbb
imul
addr16
xor
inc
or
sub
inc
adc
inc
inc
fisub
out
dec
and
jo
xchg
jge
dec
push
cmps
dec
dec
inc
xor
xor
je
clc
or
lods
mov
pushf
les
or
icebp
mov
or
icebp
inc
and
(bad)
inc
sub
inc
inc
xor
adc
mov
imul
pop
and
sub
movd
ret
add
and
test
aas
jns
xor
push
jb
icebp
xchg
js
lods
or
in
adc
mov
arpl
pop
sub
adc
cld
cmp
and
or
xor
pop
cmp
ss
fsub
cmp
jl
rcr
adc
and
mov
lds
div
shl
rol
ret
ds
xor
lods
(bad)
cmp
sahf
jg
cmp
xor
mov
push
jae
shl
mov
call
dec
hlt
jecxz
repz
cmp
sbb
scas
pusha
sbb
(bad)
or
(bad)
sbb
adc
add
inc
mov
push
aad
cmp
cmp
inc
push
dec
adc
mov
add
xor
push
jnp
pop
pop
jp
mov
xchg
adc
xor
push
jne
xchg
nop
mov
add
scas
add
pop
push
or
sbb
popf
xor
jge
ret
mov
jl
inc
add
sub
dec
fcmovnu
rcl
mov
adc
gs
jecxz
or
cli
mov
(bad)
push
icebp
jnp
sbb
xor
or
fmul
xor
inc
and
fnsave
adc
mov
jmp
movs
jmp
pop
enter
push
jo
mov
add
and
xlat
mov
mov
lea
sbb
movs
std
add
push
in
movs
mov
dec
cs
je
dec
xor
and
inc
mov
loope
mov
popaw
fisub
test
and
out
add
inc
pop
retf
sbb
xchg
sbb
pushf
cmp
rcr
shl
xchg
mov
and
cmp
fs
shl
xor
adc
mov
mov
ror
inc
add
sar
pushf
call
and
into
jle
jmp
inc
cmp
and
mov
pushf
rcr
pop
fndisi(8087
mov
pop
or
mov
mov
outs
dec
inc
sub
sbb
add
or
daa
add
sahf
push
std
fmul
mov
or
sbb
(bad)
pusha
xchg
aam
and
aad
add
xor
shr
mov
sub
and
sub
or
mov
aaa
sar
hlt
clc
push
movs
push
mov
or
or
js
pushf
xchg
and
add
push
push
call
push
sub
or
or
sbb
inc
add
clc
and
loopne
add
sbb
mov
pushf
push
mov
push
clc
push
and
shl
dec
lods
fxch
ret
pop
jmp
dec
push
ins
aaa
adc
jnp
dec
sbb
ins
sbb
in
scas
test
fild
jae
mov
xchg
mov
mov
cmp
popf
lds
xor
cs
jae
sbb
xchg
cmp
dec
outs
xchg
xor
add
pop
outs
arpl
inc
and
push
lock
and
mov
(bad)
jmp
dec
push
push
sahf
in
nop
add
sbb
loope
push
mov
aad
sbb
loopne
xchg
jmp
inc
out
add
sar
adc
inc
aam
(bad)
repnz
pushf
pop
xchg
out
cmp
shl
sbb
iret
sub
and
xchg
lahf
push
repz
stc
and
mov
mov
lahf
and
xchg
sbb
sub
rol
lock
inc
inc
mov
ins
or
jmp
sub
call
add
test
or
inc
add
or
push
push
rol
lahf
call
push
adc
dec
add
sub
fidivr
into
adc
inc
mov
jne
dec
add
xchg
or
jb
dec
sbb
pop
or
nop
push
sbb
mov
mov
fmul
push
enter
shr
sbb
dec
outs
hlt
dec
jnp
loopne
je
sub
xchg
and
jbe
enter
dec
inc
or
test
in
push
inc
sbb
or
push
enter
mov
push
scas
dec
dec
push
out
std
stc
jb
cmp
inc
pusha
xchg
in
add
inc
adc
pushf
sti
mov
push
dec
mov
imul
fchs
scas
inc
mov
sahf
and
(bad)
pop
or
jno
arpl
sub
fnstenv
loopne
inc
jne
jnp
or
out
adc
pop
bound
aad
sub
and
jg
fwait
movs
add
push
or
mov
sbb
cwde
clc
xor
jl
mov
test
cdq
aam
sub
adc
and
sbb
add
mov
loopne
push
mov
daa
jle
push
pop
clc
add
push
imul
mov
xor
or
clc
push
js
push
add
mov
dec
scas
xchg
or
jbe
aad
push
test
and
jle
sbb
dec
es
popa
jb
ins
mov
call
je
xor
(bad)
adc
jnp
fdiv
adc
push
push
add
dec
mov
fwait
sub
jg
into
xchg
icebp
or
bound
mov
adc
movs
fsub
outs
add
add
movzx
(bad)
and
jne
and
mov
pop
int3
jne
mov
aas
dec
mov
add
push
xor
xchg
lock
in
and
xchg
ret
xor
or
dec
dec
arpl
xchg
out
adc
pop
sub
movs
lock
cmp
pop
outs
dec
ja
push
push
inc
push
dec
lahf
mov
mov
pop
fmul
sub
add
loope
push
push
aas
clc
and
jg
movs
dec
mov
inc
dec
daa
mov
add
adc
cmp
gs
movs
popa
dec
inc
lods
xor
add
pop
adc
sbb
jl
dec
mov
fcom
pop
xchg
pop
in
addr16
jmp
mov
in
in
mov
mov
movs
daa
in
mov
leave
sub
movs
dec
or
outs
imul
cmps
lahf
add
rol
in
popa
pop
ja
and
or
dec
mov
enter
or
sub
or
push
pusha
and
not
popa
mov
rcl
sub
push
dec
mov
cmp
data16
push
xor
add
add
sub
inc
test
and
test
aaa
adc
and
xchg
adc
aam
and
jle
pop
mov
stos
push
add
in
xor
aas
cmps
or
mov
pop
aam
pusha
cmp
push
shr
loopne
adc
gs
leave
xchg
lahf
or
(bad)
jmp
xor
push
sbb
mov
push
sub
adc
xchg
add
call
das
and
ins
or
les
and
or
je
pop
fdivr
xor
cmp
pop
cmc
lods
push
sub
loopne
xlat
clc
ret
adc
mov
push
add
enter
jbe
fwait
dec
js
or
xlat
les
das
in
shl
adc
shl
xchg
iret
dec
xor
xor
and
dec
leave
sar
sub
loopne
dec
or
pop
adc
mov
cs
dec
xchg
jl
ss
or
ds
test
mov
dec
(bad)
and
sub
stos
mov
jno
add
imul
mov
stos
or
xor
and
jmp
mov
punpcklbw
or
add
(bad)
add
loope
fld
inc
mov
xor
ja
adc
outs
or
xlat
xchg
add
xchg
stos
jmp
scas
sub
pop
ds
sub
cli
(bad)
les
loope
add
push
mov
push
jge
test
mov
jge
mov
sbb
and
adc
dec
or
and
cmp
inc
inc
dec
pop
push
or
pop
add
cld
dec
pop
jns
rol
mov
dec
fmul
mov
das
mov
mov
sbb
and
das
ss
or
xor
sbb
pop
or
push
dec
jecxz
jmp
inc
daa
stos
fdivr
or
and
add
xor
fs
cmp
inc
add
ja
add
test
daa
dec
mov
repnz
mov
adc
jl
cmp
sub
sub
jb
je
dec
je
add
test
rol
inc
in
xor
inc
cs
or
mov
pop
inc
mov
xor
ret
or
fcom
xchg
jg
jle
les
mov
pop
cmp
out
pop
push
sti
fwait
dec
dec
repz
mov
sub
jo
xchg
sub
in
pop
mov
fdiv
add
nop
or
push
cmp
retf
and
ja
fwait
ins
sbb
add
adc
inc
jmp
ds
and
inc
xchg
jns
jae
sbb
call
movs
call
cmp
xchg
jge
scas
or
adc
pop
jge
push
dec
or
dec
cwde
hlt
adc
dec
std
fimul
nop
mov
xor
hlt
adc
xor
mov
push
in
ds
lock
or
in
pop
mov
rcl
dec
jge
repz
or
xor
adc
pop
repz
pop
adc
fs
lods
mov
pushf
sub
or
or
jge
cmp
enter
sahf
dec
and
je
pop
cmp
xchg
ins
ficomp
int3
mov
call
or
sbb
ffree
rol
xchg
mov
imul
sub
xchg
sbb
jmp
push
adc
or
gs
stos
or
push
push
mov
cmp
dec
adc
lock
hlt
pusha
icebp
push
add
pop
jne
and
dec
rcl
ficom
or
inc
rol
xor
mov
push
adc
sar
inc
test
cld
cmp
(bad)
ss
pop
rcr
or
xor
or
loopne
retf
add
inc
adc
rcl
and
pop
mov
cmps
retf
lock
push
push
add
dec
ins
sbb
adc
mov
or
sub
(bad)
out
jb
adc
push
test
or
add
xchg
push
repnz
ret
pop
xchg
mov
popa
loopne
stc
adc
adc
(bad)
aam
dec
xchg
adc
inc
sub
adc
add
jmp
(bad)
mov
or
aam
shr
jmp
pop
xchg
add
or
mov
pop
shl
xchg
cmp
mov
es
fild
adc
mov
or
mov
push
or
scas
adc
in
int
adc
leave
loop
adc
push
mov
int3
dec
mov
enter
adc
clc
cmp
xor
enter
mov
hlt
in
inc
push
mov
or
arpl
push
cmp
push
lahf
adc
jb
add
enter
sbb
cwde
mov
in
inc
enter
cmp
ss
(bad)
rcl
dec
je
jb
ins
jb
loopne
rol
mov
sbb
iret
repz
imul
iret
repz
inc
dec
push
pop
repz
repz
sahf
out
mov
sbb
repz
loope
cmc
dec
sahf
out
sahf
pop
arpl
xor
inc
inc
call
and
mov
mov
inc
lock
sbb
cmp
test
cmp
cmp
add
in
xchg
sub
aaa
and
mov
pop
daa
cs
push
(bad)
sub
dec
test
xchg
sub
mov
or
out
dec
adc
enter
and
iret
repz
and
sub
or
ja
mov
scas
sbb
pop
xlat
and
sar
and
cld
inc
adc
(bad)
sbb
sub
and
mov
ret
and
mov
cmp
std
std
mov
loopne
push
shl
push
cs
mov
mov
and
rcl
mov
or
and
ror
adc
fadd
push
aaa
cmc
ret
inc
fdivr
push
or
loop
mov
mov
push
imul
or
js
push
xchg
add
enter
mov
xchg
mov
mov
mov
call
cmps
inc
pop
cmovs
push
jmp
add
mov
mov
mov
cmp
xchg
mov
adc
dec
add
dec
fist
sbb
mov
mov
int3
xor
shl
pop
aaa
cvtps2pd
ret
cmp
fs
fcomp
mov
pop
cmp
mov
call
push
add
mov
aas
pop
and
pusha
out
ins
imul
or
xchg
pop
fmul
sbb
push
mov
jnp
iret
or
sub
int3
adc
jp
inc
call
pushf
mov
mov
pop
nop
add
or
add
mov
xadd
movs
push
mov
adc
push
push
inc
loope
test
mov
in
dec
mov
and
ins
xchg
fs
push
pop
std
inc
mov
mov
push
adc
pop
lock
dec
adc
pop
ss
movs
ins
xor
add
les
call
jbe
mov
sbb
dec
sub
jmp
adc
cmp
hlt
(bad)
fld
pop
dec
mov
cmc
and
push
or
call
nop
and
mov
shl
int3
push
xor
add
jns
jne
ret
mov
mov
pop
fiadd
adc
dec
rcr
pop
or
jmp
pop
mov
les
xchg
inc
inc
dec
mov
arpl
sbb
clc
aas
jno
mov
rcl
xchg
dec
or
inc
push
(bad)
lods
dec
cmp
bound
dec
add
shl
and
cmp
ror
mov
das
sbb
mov
mov
gs
dec
jmp
jns
(bad)
fdivr
ss
jmp
cmp
xchg
sub
ins
sub
popa
loope
mov
or
movs
push
cmp
cwde
jl
mov
sub
out
outs
cmps
xchg
mov
pop
shl
pop
in
jmp
push
adc
jo
mov
pop
leave
lahf
pop
cmps
add
dec
add
cmp
add
fs
mov
call
push
shl
clc
scas
rcl
sub
dec
adc
xor
cs
jmp
push
call
adc
test
xchg
xchg
pusha
add
add
dec
fwait
pusha
jg
xchg
and
mov
dec
adc
inc
push
xchg
cmps
pop
adc
or
fidiv
dec
sbb
sbb
outs
adc
xchg
and
sbb
pusha
test
jl
shr
jo
jbe
ror
push
and
adc
xchg
dec
cs
cmp
or
and
test
ins
jo
lods
cmps
rol
mov
add
lea
mov
outs
pop
jnp
adc
xor
pop
ficom
or
xor
inc
and
nop
mov
out
adc
es
out
hlt
push
shl
push
ins
inc
and
fsub
or
jle
ret
test
add
mov
cwde
loope
inc
inc
popf
sbb
mov
or
cmps
retf
inc
push
loop
nop
mov
mov
add
mov
data16
sub
mov
and
push
xchg
(bad)
dec
in
jp
push
sub
jp
sub
rcr
scas
stos
ror
or
mov
mov
(bad)
icebp
pop
rcl
clc
ret
das
test
sub
adc
mov
add
push
or
xchg
xchg
out
sbb
fs
xchg
mov
out
sub
test
mov
lahf
inc
iret
push
leave
lea
add
jnp
pop
dec
pop
add
call
fcmovnu
call
movs
dec
jp
or
cmc
push
pop
aam
pop
jne
mov
fs
loopne
add
data16
ins
pop
fsub
push
or
add
push
test
in
fsub
pop
mov
ins
xchg
mov
pop
mov
fwait
add
adc
mov
cmp
mov
adc
push
add
ins
and
or
out
fdiv
push
sbb
or
inc
sub
lahf
jae
addr16
arpl
outs
add
adc
xchg
push
push
into
adc
add
fisttp
add
add
adc
test
nop
add
and
or
xchg
retf
and
or
adc
or
cmp
sbb
fsubr
cmp
ret
test
and
lds
cmps
add
fld
or
inc
cmp
fs
pop
data16
stos
add
sub
imul
ss
dec
and
xchg
pop
rcl
pop
dec
clc
inc
xor
movs
sbb
shl
mov
punpckhdq
cmp
or
jae
adc
ret
or
ja
(bad)
dec
add
sub
jo
adc
jne
cmp
dec
or
inc
aas
mov
cmp
jg
lahf
mov
mov
mov
jne
add
nop
push
and
push
or
jle
lea
pop
(bad)
push
inc
shl
or
aad
retf
sub
xchg
aaa
retf
pop
mov
outs
push
test
int3
test
jbe
cmps
add
cmp
mov
jmp
mov
pop
mov
jg
and
gs
dec
rcr
add
xor
sub
sub
cld
dec
sub
or
add
enter
add
das
sub
inc
cmp
je
call
int3
sub
xchg
jbe
in
sub
xchg
lea
sub
je
jg
lds
or
fidiv
push
inc
or
nop
pushf
sub
mov
jb
add
sub
jb
add
or
es
xor
jmp
daa
or
outs
sub
ins
sub
xchg
push
and
mov
mov
mov
pusha
adc
xchg
add
xchg
cmps
loopne
push
je
fld
push
cmps
jmp
fs
outs
jmp
dec
xor
mov
lock
mov
out
(bad)
pop
leave
cld
adc
fsub
mov
mov
or
push
fcomp
sub
push
add
or
sub
sub
cmps
movs
lea
mov
add
shl
or
pop
ds
mov
cmc
and
mov
pop
sub
rcl
fcmovbe
mov
or
push
shr
and
sbb
das
add
dec
sbb
push
mov
cmp
test
adc
dec
mov
fdivr
in
or
movs
imul
loop
retf
add
add
inc
loope
pop
call
aam
movs
imul
rcl
pusha
pop
retf
leave
rcl
pop
sub
mov
jae
rol
aas
xor
add
or
loop
adc
lea
mov
xchg
clc
clc
add
and
pushf
add
add
cs
jecxz
pop
jb
jp
int3
jae
inc
lods
cdq
mov
call
or
jno
xchg
push
call
and
dec
xchg
inc
mov
lock
cmp
bound
add
dec
adc
retf
inc
mov
outs
das
cmp
out
mov
dec
or
or
jns
and
(bad)
inc
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
(bad)
mov
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
inc
mov
jp
sub
sub
into
test
push
test
in
out
popa
push
jne
add
dec
outs
test
push
jne
aas
push
gs
pop
in
push
imul
and
outs
mov
push
jge
shl
mov
mov
inc
add
jns
push
sub
lahf
cmp
inc
sbb
addr16
push
jo
nop
rol
xchg
push
shl
inc
push
rol
and
or
mov
ins
ror
es
imul
fild
mov
sti
fbstp
ss
(bad)
and
push
rcr
stos
pusha
push
push
dec
mov
ja
or
jp
shr
in
mov
daa
ficom
stc
inc
add
add
daa
dec
jbe
sbb
mov
test
cmp
cmps
arpl
out
pop
add
repnz
fadd
in
add
rol
imul
sub
jmp
dec
push
jbe
fs
adc
mov
loopne
loopne
mov
rcl
fild
dec
inc
jge
add
cmp
rcl
or
daa
nop
ret
mov
adc
inc
adc
pushf
cmp
rcl
mov
into
(bad)
int
mov
rol
mov
and
inc
mov
or
sbb
jae
shl
push
xlat
or
add
add
call
adc
jl
adc
aam
gs
add
adc
jle
nop
or
jmp
cld
fldenv
adc
add
in
and
imul
add
adc
(bad)
retf
enter
or
lock
dec
and
add
add
jecxz
cmp
jno
mov
pop
adc
dec
inc
int
fld
inc
sub
cmps
cmp
xchg
jbe
fistp
jo
test
inc
test
(bad)
sub
cmp
int3
rcr
(bad)
add
jg
mov
xor
xchg
cld
and
or
cmc
dec
mov
sub
and
jp
dec
pop
stos
or
sar
inc
(bad)
xchg
push
xor
cwde
add
sbb
mov
adc
icebp
arpl
push
add
lea
div
or
shl
out
shl
or
pop
xor
lods
mov
cmp
iret
pop
movs
jl
cmp
inc
pop
inc
enter
adc
add
sbb
and
mov
inc
or
adc
out
adc
mov
or
repnz
je
daa
add
mov
repnz
pop
aad
test
(bad)
add
or
repnz
xchg
adc
loope
mov
push
je
cmps
cmp
aad
adc
rcl
and
stos
or
add
enter
inc
dec
bound
add
push
js
(bad)
les
add
lds
iret
sbb
mov
adc
or
xchg
int
fs
mov
add
fadd
imul
and
arpl
xlat
pop
pop
rol
xor
sub
add
dec
dec
or
leave
lods
stos
lea
and
pusha
test
les
movs
daa
and
or
test
sbb
cmp
cmps
fidivr
xor
sbb
dec
cmps
jge
mov
mov
sub
icebp
adc
mov
fisub
push
jmp
pop
dec
enter
push
sar
xchg
or
xor
(bad)
lahf
repnz
dec
(bad)
mov
and
mov
jmp
xchg
mov
pop
dec
jmp
scas
popa
adc
and
fcom
add
fsubr
cs
jns
mov
aam
js
fiadd
call
mov
fst
dec
call
stos
and
lock
push
inc
sbb
pushf
outs
ja
repnz
mov
dec
xchg
retf
add
lock
add
add
adc
enter
fadd
stos
js
scas
les
cmp
lock
lock
dec
mov
shl
ror
rcl
sbb
jp
sbb
or
mov
cmp
push
sbb
mov
xor
mov
mov
xchg
sub
test
push
nop
sub
mov
pop
dec
add
or
and
jo
add
idiv
add
add
mov
add
mov
push
xor
xor
je
inc
fist
mov
xor
nop
or
sub
cmps
pop
or
ins
pop
ins
fld
sub
mov
movs
movs
mov
and
ffree
or
dec
popf
retf
add
inc
cmp
iret
push
add
int
jo
clc
clc
or
jae
lock
and
ret
and
mov
clc
sbb
cmps
mov
mov
dec
js
and
mov
dec
push
inc
inc
or
add
pop
lods
add
mov
int
fmul
add
add
jnp
pop
hlt
sbb
retf
dec
pushf
push
(bad)
push
jo
xor
push
inc
lock
stos
aam
imul
or
add
ss
fnstenv
or
mov
sbb
dec
imul
push
loope
fiadd
jl
mov
dec
or
movs
stc
add
inc
add
(bad)
(bad)
movs
ret
es
cdq
or
pop
adc
enter
jecxz
mov
sti
popf
fisubr
(bad)
mov
daa
xchg
push
(bad)
iret
ret
pop
loopne
rcl
loopne
dec
adc
or
or
adc
test
icebp
mov
ss
xor
into
mov
push
les
das
inc
fmul
fisttp
sbb
push
and
jg
sbb
loopne
add
cs
cwde
jne
ret
ss
in
(bad)
push
dec
popf
div
inc
or
push
mov
dec
sar
dec
in
ds
sbb
and
or
mov
xlat
sbb
jmp
das
or
stos
or
xor
push
xchg
inc
cmp
aad
cdq
add
push
pop
or
mov
pop
jns
loope
mov
sbb
fdiv
cmp
and
cmp
jne
xor
mov
inc
jns
loope
and
cmc
mov
loop
dec
test
add
popa
inc
dec
mov
jmp
loop
and
pop
pushf
add
sbb
mov
(bad)
cmp
outs
pop
and
mov
jne
inc
and
push
sub
mov
cmp
mov
mov
adc
loop
lea
rcr
sbb
jbe
mov
adc
push
xchg
mov
rcl
add
xor
or
outs
ret
(bad)
inc
dec
rcr
dec
loopne
(bad)
xchg
sar
xchg
aaa
jge
sbb
pushf
sub
jecxz
shl
adc
add
outs
jecxz
xchg
push
clc
dec
mov
(bad)
dec
(bad)
in
movs
and
adc
in
add
push
test
lock
inc
ficom
sahf
inc
clc
retf
imul
leave
fcmovb
sar
cmp
movs
adc
xchg
or
dec
loopne
jmp
and
pop
nop
aad
xchg
inc
in
test
inc
mov
cmp
cmps
test
jne
push
dec
dec
and
mov
or
add
je
mov
mov
and
xor
ins
adc
cld
imul
push
add
push
cdq
add
cmc
cmp
jg
push
jo
dec
add
in
sub
xchg
dec
dec
and
adc
push
xor
(bad)
out
ret
movs
pop
fisub
sub
lock
adc
xchg
push
and
mov
sub
mov
push
addr16
inc
movlps
inc
(bad)
push
ret
jg
inc
jge
mov
(bad)
(bad)
pop
xchg
loopne
ficomp
in
sbb
sub
dec
or
mov
jmp
or
mov
or
mov
test
in
adc
ins
push
push
cs
adc
ss
mov
daa
fst
(bad)
shl
cmps
dec
neg
push
test
dec
mov
or
pop
shr
push
test
pop
dec
cmps
lea
cdq
fadd
je
inc
(bad)
lahf
push
push
enter
out
shl
mov
nop
pop
test
mov
das
pop
mov
push
xor
cmp
addr16
test
sub
adc
jg
cmp
jae
sub
das
add
pusha
push
push
push
push
fisttp
mov
(bad)
adc
fwait
adc
clc
pop
mov
adc
aaa
test
rcl
fcomp
nop
pop
add
sub
jmp
enter
sub
mov
lds
pusha
loope
cmp
aaa
shl
scas
inc
cmp
xor
daa
jnp
pop
jne
(bad)
outs
out
jnp
outs
movs
pop
adc
sbb
ins
test
sbb
cmp
pop
sbb
js
lods
clc
mov
aam
sbb
das
and
cmp
loopne
or
push
and
fcmovnu
sbb
xor
add
call
cmp
or
xor
dec
ins
adc
jnp
dec
xor
xor
shr
mov
adc
dec
push
jmp
and
cli
jl
(bad)
xlat
(bad)
fadd
dec
ret
push
mov
mov
or
imul
scas
xor
dec
cs
push
sbb
adc
mov
mov
mov
dec
cmp
fsubr
pop
cmp
imul
pop
out
call
adc
lds
in
(bad)
mov
cmp
jmp
jae
push
mov
std
mov
inc
jne
sbb
mov
hlt
xchg
stos
dec
add
or
ret
mov
inc
rcr
dec
or
rol
and
cmp
or
jp
mov
pusha
xlat
mov
out
ja
or
pop
ss
pop
sbb
xlat
stos
adc
xchg
shr
lods
lods
adc
adc
mov
lea
sar
xlat
loopne
sti
lea
cmp
shl
sub
push
cmp
mov
into
adc
mov
imul
popa
je
mov
leave
test
jbe
xor
add
fcomp
xchg
sub
lock
mov
adc
pop
xor
je
jne
mov
fsubr
gs
pop
jo
test
shl
in
ret
push
scas
fwait
pushf
(bad)
cmpxchg
sub
mov
ret
jge
rol
in
rcl
jne
xchg
add
fs
mov
sub
cmps
and
add
cwde
cwde
add
outs
sub
cmc
imul
std
ja
add
cmp
cld
lods
sbb
out
push
inc
push
add
test
push
adc
mov
push
add
lahf
add
call
test
loop
add
imul
mov
add
rol
mov
and
adc
stos
xchg
out
inc
pop
xor
sub
xchg
sub
(bad)
shr
rol
inc
xlat
lock
aad
ins
sbb
adc
xchg
iret
or
rcl
ret
mov
ins
add
xchg
addr16
dec
test
in
mov
dec
sub
call
mov
in
mov
add
jnp
mov
in
sbb
lods
sbb
clc
repz
cmc
nop
xchg
cmps
and
cwde
clc
cwde
pop
mov
js
pop
sbb
test
push
cmp
mov
in
in
ret
ror
or
pop
lock
xchg
jnp
(bad)
cmps
push
push
icebp
xor
(bad)
retf
lahf
pop
pop
add
sbb
frstor
ins
mov
push
push
shl
cdq
adc
dec
mov
pop
rol
in
lock
push
cld
fnstenv
adc
cmp
(bad)
jbe
rol
cmp
movs
jb
shr
cmp
and
add
and
icebp
dec
sub
mov
add
popa
or
jge
and
loopne
cmp
push
xor
in
std
cmp
jnp
sbb
jp
adc
xchg
fst
jl
push
imul
shr
xor
mov
and
xchg
add
int3
or
xor
repz
pop
lds
sbb
retf
std
sar
test
mov
mov
in
xor
push
loopne
and
sbb
lock
jle
mov
aam
jge
dec
leave
rcl
int3
or
push
mov
mov
add
inc
test
adc
inc
cwde
jge
mov
or
pushf
or
ret
mov
lds
mov
fistp
mov
sub
mov
inc
mov
les
sbb
(bad)
hlt
in
mov
mov
leave
iret
test
or
dec
xchg
add
js
mov
and
and
movs
xor
nop
xor
retf
cmp
dec
sub
push
sbb
pop
and
or
gs
cwde
ins
xchg
and
jl
push
movs
xor
nop
retf
mov
push
test
mov
or
gs
je
xor
xchg
add
adc
fs
sbb
hlt
gs
sub
mov
mov
or
dec
gs
sub
dec
and
add
cmp
movs
xor
cmp
xor
retf
pop
cmp
add
sub
xor
inc
pushf
movs
and
mov
lods
mov
test
or
rcr
je
in
cmp
(bad)
stc
(bad)
mov
shl
push
lock
jae
jmp
add
sub
dec
or
sbb
pusha
cmc
and
cmp
cmp
add
mov
and
fistp
sub
push
inc
dec
outs
arpl
pop
sbb
dec
inc
xlat
inc
or
scas
sbb
imul
pop
cmp
outs
dec
jl
pop
inc
sbb
xchg
aas
jne
lahf
inc
xchg
sbb
inc
cmp
stos
lahf
pop
add
std
rol
js
gs
ins
gs
stos
pop
outs
data16
push
mov
pop
sub
jae
ret
cmp
pop
push
shl
shl
xchg
pop
outs
push
(bad)
pop
jb
jbe
pcmpgtd
pop
cld
push
into
adc
pop
pcmpeqb
mov
push
aas
outs
(bad)
rcr
push
call
imul
les
and
and
sbb
jbe
pop
nop
ss
call
call
jbe
sbb
or
js
cmps
mov
cmps
push
add
leave
xor
in
shl
pop
lods
sbb
jp
ss
mov
mov
xor
and
nop
rol
push
rol
add
fidivr
enter
mov
enter
dec
ret
inc
or
aam
dec
sti
ss
xor
popa
add
jmp
dec
jne
jl
inc
pushaw
or
sbb
sar
jb
add
xor
sbb
loope
nop
call
mov
xchg
out
ins
sbb
pop
pop
fsub
and
mov
or
iret
sbb
iret
test
hlt
hlt
push
mov
lock
sub
enter
adc
xlat
cmps
add
dec
add
shl
and
xchg
jae
test
cmp
push
call
sub
in
jo
or
call
repnz
(bad)
mov
add
add
out
test
mov
jo
test
mov
adc
jg
xchg
dec
adc
popf
mov
ret
push
mov
mov
pop
enter
jg
push
nop
cmps
std
dec
sar
push
in
mov
sbb
mov
sbb
add
and
mov
sar
jp
and
in
pop
aam
xor
xchg
cmp
pop
mov
pop
and
pop
push
test
dec
pop
(bad)
scas
lock
cwde
(bad)
mov
loopne
ss
or
adc
in
push
enter
dec
cmp
mov
pop
jecxz
push
and
je
xchg
mov
sbb
cmp
hlt
mov
shl
pop
dec
call
cmp
xor
inc
mov
cmp
cmp
(bad)
adc
in
ds
inc
xchg
pop
inc
fldcw
ret
rcl
mov
loopne
inc
sub
pop
enter
inc
scas
cs
iret
and
sahf
retf
enter
hlt
sbb
jns
inc
or
test
outs
inc
pop
dec
push
jbe
aas
cmp
nop
ret
xchg
fcomp
test
test
sub
dec
mov
sbb
mov
sbb
loop
cmc
push
nop
cmp
jbe
data16
in
out
jo
leave
das
push
dec
sub
jmp
cmp
fld
mov
js
fst
push
mov
pop
in
cs
rcl
fsub
jo
(bad)
jg
jae
(bad)
fwait
jb
bound
loopne
inc
cmp
test
jo
lahf
rol
mov
cmp
inc
add
mov
sub
fcomp
(bad)
pop
aaa
inc
dec
inc
or
nop
push
ret
cwde
scas
in
mul
pop
sbb
add
ins
push
or
adc
int
pop
and
shr
or
ficomp
test
push
adc
dec
sar
add
add
push
jmp
cmp
stos
inc
lods
(bad)
push
iret
out
adc
dec
pop
sub
jmp
or
sti
or
or
mov
dec
sar
add
int
push
pop
repz
je
and
push
cwde
into
imul
sbb
push
inc
cwde
mov
add
movs
push
push
mov
outs
std
add
enter
xchg
mov
mov
or
add
jl
mov
sbb
push
cs
pop
lds
push
cmps
nop
mov
adc
not
cwde
add
outs
push
jo
add
xchg
dec
scas
pop
jnp
and
dec
pop
add
push
and
jo
adc
daa
nop
stos
fild
mov
lea
xor
icebp
fbld
cdq
pop
pop
and
rcr
pop
pop
or
arpl
push
add
rcl
or
mov
push
sbb
add
fcomp
sub
nop
mov
daa
scas
inc
push
int
dec
(bad)
cmp
inc
dec
js
xchg
adc
sub
pop
sub
ins
jbe
inc
gs
xor
push
pop
jge
neg
out
sbb
imul
adc
dec
add
or
push
jp
dec
add
or
imul
push
sbb
(bad)
loope
call
add
scas
or
jne
and
add
jecxz
add
pop
sub
jmp
sbb
sub
por
add
pop
sub
and
push
(bad)
lock
ret
or
cmp
inc
ins
sti
sub
dec
inc
dec
movs
pop
push
fstp
add
pop
cmp
add
data16
push
shrd
add
xor
cdq
add
lods
nop
int3
daa
adc
mov
pop
orps
imul
or
fild
outs
push
dec
cs
cwde
xor
nop
pusha
push
cld
mov
aas
inc
popa
ins
imul
pop
ss
or
dec
push
xor
adc
sub
je
or
sbb
xor
push
push
pop
xor
push
scas
ja
or
jae
call
pop
bound
cld
retf
or
jbe
adc
push
dec
push
jbe
or
outs
imul
int
mov
and
or
mov
ds
or
sar
sbb
pop
and
add
dec
neg
push
xor
pop
and
sbb
int3
add
mov
mov
test
dec
ds
js
sub
and
sub
and
stc
sahf
repz
daa
test
mov
repz
mov
sub
push
adc
sub
fwait
int
xor
movs
xor
cmps
stc
into
test
ins
lahf
hlt
and
inc
out
pop
push
fcompp
ds
je
sbb
je
mov
push
les
sub
mov
or
add
cmc
out
daa
adc
inc
inc
or
div
arpl
lods
cmp
fs
ins
mov
push
xor
lahf
pop
sub
push
mov
das
adc
add
shr
mov
push
xchg
mov
dec
mov
mov
xchg
test
and
jne
repnz
inc
fldcw
mov
int3
dec
sub
push
ja
fs
aam
inc
sahf
add
out
push
add
dec
cmp
mov
or
dec
add
or
cmc
push
sbb
ror
mov
icebp
scas
xchg
add
(bad)
test
(bad)
xchg
(bad)
(bad)
push
jb
popw
bnd
ds
xchg
xchg
or
pusha
add
dec
loop
popa
loope
nop
sub
stos
sbb
pushf
stc
jg
add
or
cli
add
xchg
loop
sahf
test
or
jl
cmp
in
xchg
lods
inc
lods
or
dec
ja
ds
bound
mov
add
adc
push
nop
adc
popa
and
lock
adc
inc
adc
adc
or
or
pop
jg
lods
lods
sub
nop
out
adc
push
and
mov
or
xor
jmp
sub
ror
adc
shr
or
ja
out
cmp
dec
les
and
mov
dec
mov
push
cld
add
and
push
add
push
add
or
mov
or
add
int3
aam
pushf
pushf
pushf
pushf
in
in
lock
lock
pushf
hlt
clc
adc
jae
pop
sub
sbb
push
and
pop
mov
popf
jmp
int3
int3
or
repnz
add
push
mov
xchg
pop
sar
jae
dec
fcomp
pop
enter
cmps
aad
inc
(bad)
mov
dec
retf
add
fstp
sbb
hlt
cmps
std
test
ds
(bad)
out
ins
div
aas
cmp
push
adc
jbe
sub
pop
or
fs
push
gs
pop
hlt
pop
xchg
outs
mov
sbb
mov
fistp
ins
pop
in
out
and
inc
pop
push
or
movups
jb
sbb
and
dec
mov
loope
push
push
xor
pusha
ret
out
adc
es
and
clc
push
dec
and
dec
dec
outs
or
inc
mov
fadd
jle
xchg
push
mov
sub
xor
push
xor
test
push
cmp
push
pusha
push
imul
pop
adc
and
push
ins
enter
xor
and
push
es
cmp
lock
adc
adc
and
add
ins
jae
fnstenv
lahf
push
push
mov
lock
inc
repz
repz
dec
push
pop
pusha
adc
mov
int3
sti
cmp
repz
enter
or
scas
dec
ds
adc
cmp
mov
xor
xor
cmp
inc
xor
dec
outs
pop
inc
sahf
cmp
subps
cmp
cmp
push
mov
inc
loop
jbe
push
xor
and
jp
push
push
retf
outs
xor
ror
leave
or
add
push
add
mov
pop
or
pop
repnz
pop
pop
inc
pop
add
mov
fmul
mov
inc
fild
inc
pop
cvttps2pi
adc
(bad)
fnsave
xchg
movs
in
jo
push
idiv
pop
xor
jb
xor
movs
ss
mov
popf
dec
sub
shl
or
jl
push
inc
pop
mov
loopne
or
movs
or
mov
mov
dec
jb
pop
pop
inc
dec
mov
adc
mov
push
fild
dec
inc
inc
inc
test
jmp
loope
jne
rcl
leave
or
dec
les
add
cmps
ja
inc
ficomp
adc
call
xor
dec
adc
jge
mov
push
cmp
mov
sub
sbb
pop
arpl
bound
adc
push
stos
adc
pop
or
movs
sbb
pop
cmps
dec
dec
dec
add
or
inc
pop
(bad)
pop
and
les
dec
xor
or
mov
loopne
aaa
mov
push
(bad)
outs
pop
and
or
arpl
sbb
jmp
add
adc
and
and
push
add
popa
(bad)
adc
loopne
out
rol
cmps
out
pop
and
cmp
push
mul
dec
push
jo
loopne
or
sub
imul
fcom
xor
dec
jmp
add
leave
add
or
dec
push
nop
push
sub
and
das
add
gs
call
aad
enter
call
inc
mov
or
pop
or
pop
sbb
push
xchg
push
pop
sub
mov
jge
mov
inc
push
inc
ins
in
inc
call
mov
pop
adc
or
xor
test
cdq
lea
mov
out
pop
xchg
jae
add
ror
dec
data16
into
movs
inc
and
popa
mov
les
xor
sbb
add
mov
pop
dec
aam
mov
or
mov
sbb
pop
push
mov
mov
adc
into
mov
push
call
add
dec
add
enter
cli
je
clc
call
sbb
test
iret
cld
and
iret
repz
push
push
jle
mov
or
add
pop
adc
les
add
fisttp
push
scas
xlat
sub
push
pop
lea
in
(bad)
adc
ins
or
push
or
add
jg
dec
mov
in
or
dec
leave
xchg
bound
add
loope
add
imul
pop
cmp
sub
sar
sub
add
xchg
fldpi
pop
xor
inc
shr
pop
leave
ror
push
xchg
dec
pop
and
stos
jne
mov
xor
rol
or
push
or
fistp
and
std
mov
push
xchg
xchg
shr
sbb
add
jecxz
cmp
dec
sbb
sbb
(bad)
xor
add
ror
xor
or
jl
inc
mov
cmps
jae
js
aas
jmp
xchg
or
aas
addr16
in
sbb
mov
jg
ss
push
lahf
cdq
xchg
loopne
fmul
dec
push
jmp
cmps
dec
xchg
adc
(bad)
hlt
push
jp
pop
fnsave
mov
adc
sbb
mov
cli
pushf
call
sub
or
sub
inc
push
bound
bound
or
loope
lock
leave
test
cmp
adc
nop
push
add
dec
fstp
ret
or
or
add
loopne
pushw
aas
repnz
je
or
xchg
cld
bound
pop
addr16
inc
cmp
je
add
mov
out
icebp
loop
mov
adc
movs
sbb
faddp
popa
fs
xlat
ds
lods
ret
shl
in
and
rcr
inc
inc
jne
mov
sub
bound
sbb
mov
adc
cld
push
jg
es
mov
and
mov
jmp
mov
adc
int3
inc
inc
and
push
add
or
cmp
xor
push
in
cmps
comiss
mov
push
add
or
push
and
sbb
aad
inc
add
adc
pop
mov
rcl
mov
add
add
outs
push
aam
fadd
test
xchg
scas
mov
dec
push
clc
add
cmp
mov
push
leave
aaa
in
push
stos
inc
and
sbb
pop
ss
and
push
jno
sbb
cmp
adc
adc
in
rol
ret
adc
aas
inc
adc
and
mov
(bad)
fadd
je
xor
inc
rcr
push
dec
sbb
sbb
add
enter
pop
fadd
lock
ret
nop
add
dec
(bad)
xchg
xor
xlat
pusha
sbb
ds
mov
inc
jle
pop
jno
repnz
lock
or
push
add
daa
mov
daa
mov
xchg
mov
mov
dec
ds
test
out
add
push
adc
loopne
cmp
and
add
rcl
idiv
xchg
adc
or
adc
xchg
fdiv
mov
cld
jns
or
push
dec
or
mov
xlat
mov
push
or
imul
es
and
dec
dec
xor
mov
xchg
xchg
ins
or
(bad)
aaa
js
nop
or
movs
mov
xor
cld
es
add
aaa
dec
push
xchg
adc
ror
test
mov
jae
or
add
sub
and
lods
push
fcmovb
sar
cmp
es
mov
or
ret
mov
inc
or
and
jge
call
jne
mov
das
inc
xchg
fld
dec
push
and
dec
add
fdiv
add
imul
outs
sbb
(bad)
pop
push
test
push
fistp
sti
mov
ret
xchg
sub
mov
sub
mov
pop
inc
test
push
xchg
inc
test
add
fwait
jns
neg
add
sub
mov
inc
add
push
mov
sbb
ret
test
(bad)
jg
mov
in
cmp
mov
inc
dec
push
in
inc
adc
sbb
or
inc
mov
push
cmp
jmp
adc
aaa
and
add
add
add
rol
fild
call
mov
popa
xor
call
dec
add
dec
sub
pop
(bad)
jb
sub
arpl
mov
enter
push
push
(bad)
cmp
or
pop
mov
or
add
icebp
shl
fild
push
and
inc
adc
movs
push
enter
sub
sub
loopne
in
scas
push
repnz
in
lock
retf
or
jo
push
add
nop
add
jge
retf
les
jbe
shl
in
arpl
mov
inc
gs
sbb
sub
add
sbb
int
pop
rcr
loop
je
ss
jle
test
mov
mov
fptan
jle
pop
xchg
sbb
stc
jl
add
adc
or
sbb
ret
push
add
add
jp
aam
(bad)
jecxz
sub
cld
xchg
sbb
and
daa
shl
popa
lods
jb
sub
dec
pop
dec
or
inc
jmp
sub
or
add
jecxz
jle
push
add
enter
jmp
or
lods
arpl
cwde
jge
mov
loopne
sub
loope
sub
call
xchg
sbb
dec
out
and
and
jnp
rcl
cdq
and
into
vsqrtsd
mov
push
ficom
or
sbb
retf
mov
hlt
jnp
test
ret
popf
fisub
out
mov
popa
outs
cmp
cmp
fidivr
push
and
addr16
adc
(bad)
cmps
mov
(bad)
pop
das
gs
dec
lea
fwait
mov
ins
aad
nop
xchg
inc
out
sub
push
mov
sub
mov
xor
pop
cld
xchg
pusha
cmp
push
adc
pop
jae
sbb
push
add
lds
jbe
loopne
ins
pop
rol
adc
ss
fsub
sub
rcl
or
inc
aaa
jl
mov
mov
out
xchg
mov
dec
sub
inc
fisub
nop
push
xor
cmp
rcl
lods
movs
sbb
mov
leave
and
adc
es
pop
mov
and
pop
mov
nop
lods
mov
sahf
inc
xchg
sbb
pop
or
cmp
or
outs
add
push
dec
adc
movzx
cmp
jmp
das
pusha
rol
clc
retf
stos
add
lods
aaa
push
xor
aaa
mov
add
dec
lods
push
(bad)
dec
scas
sub
pop
xchg
add
lock
add
jmp
adc
leave
test
nop
test
inc
imul
jo
fstp
mov
mov
loopne
jl
xor
cmp
xchg
ret
mov
rol
(bad)
ret
pop
mov
dec
out
add
xchg
arpl
add
add
mov
cmp
test
jo
add
iret
xchg
xchg
fwait
push
shl
push
mov
mov
add
mov
mov
cmp
mov
xchg
int
adc
sbb
add
iret
inc
cmp
dec
jb
xor
(bad)
fsubr
(bad)
cmps
ss
mov
pusha
stc
in
idiv
popa
or
loopne
test
cmp
out
hlt
sbb
jp
sub
sbb
outs
je
movs
adc
add
pop
sbb
jae
or
dec
outs
push
mov
jl
lds
xchg
sbb
fist
xor
mov
fcom
push
pusha
cwde
or
push
xor
inc
inc
push
dec
nop
and
cmp
ja
pusha
or
sbb
sbb
rcl
and
ja
das
and
sub
mov
or
loopne
add
add
adc
mov
xchg
and
inc
fcmovb
xor
mov
cwde
push
addr16
inc
dec
xchg
inc
adc
jg
test
shr
inc
imul
arpl
or
leave
adc
ret
and
(bad)
outs
pop
xchg
dec
in
movs
jg
add
adc
jno
rol
xchg
adc
jg
or
mov
add
sbb
mov
pop
push
lds
adc
pop
push
test
adc
mov
inc
mov
test
cmc
inc
adc
sub
out
mov
inc
loopne
pop
movs
mov
cmp
(bad)
xchg
or
xor
and
popf
pop
mov
xor
xchg
cli
ret
xor
cmp
rcl
mov
cs
sar
je
sub
jge
push
xchg
ss
add
call
fisttp
sub
mov
cmp
and
jno
test
dec
dec
lock
ja
les
dec
cs
cwde
mov
imul
pop
adc
xor
or
and
pop
and
or
sub
inc
add
add
nop
inc
leave
cmp
dec
je
xlat
mov
and
movd
cmc
outs
add
add
adc
pushf
sbb
jbe
cmp
fadd
adc
loope
aam
ins
add
ja
imul
pop
stc
scas
cmp
fld
ret
mov
jnp
sbb
or
push
add
adc
xor
ret
out
jg
or
add
scas
push
int3
lods
add
mov
push
popa
rol
cmp
push
popa
xchg
adc
fist
test
inc
or
mov
scas
mov
js
lock
ins
or
pop
aaa
cmp
and
push
(bad)
and
mov
cmp
and
xchg
cmp
aas
aaa
sub
or
xor
lea
aam
xchg
xor
pop
shl
test
jp
inc
movs
dec
or
push
dec
popf
add
fst
mov
mov
enter
es
or
popf
aam
sahf
or
jb
xchg
(bad)
dec
rcl
iret
xor
push
xlat
add
mov
push
mov
int
popa
inc
gs
pslld
test
cmp
xor
fisub
sub
xchg
popa
cmp
and
nop
push
prefetcht1
imul
push
xchg
jne
mov
das
sub
sub
lea
in
xchg
lock
mov
call
cmp
sbb
fisubr
test
daa
inc
rol
dec
sbb
xor
and
sbb
scas
hlt
loopne
and
imul
xchg
or
hlt
xchg
inc
mov
push
inc
xor
dec
sub
inc
ret
mov
test
les
xor
movs
movs
aaa
push
dec
loope
sahf
enter
or
dec
loope
stos
clc
sti
and
(bad)
cmp
imul
mov
mov
and
add
lds
in
test
jae
and
gs
iret
jb
dec
jne
bndldx
mov
lods
mov
xchg
dec
and
aaa
lock
sbb
lea
cmp
jnp
adc
mov
mov
pop
aad
jp
xchg
xchg
pop
les
test
add
jne
push
sbb
lods
and
aas
pusha
dec
rol
jne
push
push
add
and
leave
sub
jmp
rol
inc
add
in
mov
clc
lods
nop
xchg
aas
and
call
jmp
push
cmps
loopne
loopne
imul
xchg
and
test
ror
or
add
out
movs
cmp
mov
mov
ret
push
enter
dec
add
xor
stc
add
popf
test
(bad)
aam
adc
outs
mov
xchg
dec
add
sub
adc
adc
xchg
pop
fcmovnb
jle
sub
or
mov
std
ret
inc
mov
inc
cdq
arpl
stos
sti
fmul
jecxz
add
push
xchg
sub
push
fadd
sbb
push
jle
lahf
mov
push
bnd
rcr
xor
adc
pop
add
add
pop
lods
mov
out
inc
sub
cmp
les
sbb
scas
xchg
sub
psllw
inc
movs
(bad)
(bad)
and
ja
sbb
arpl
cmp
sar
iret
retf
mov
sbb
addr16
movs
sbb
sbb
inc
pushf
cmp
aas
inc
ds
aaa
mov
push
xor
movs
pop
imul
fdiv
sub
out
lahf
cmps
in
mov
inc
push
loopne
add
inc
call
or
out
imul
jns
iret
repz
fwait
lods
mov
sub
jb
dec
enter
shl
iret
and
push
inc
push
addr16
repz
call
int
mov
inc
call
inc
add
cmps
push
adc
xor
inc
push
inc
or
sub
retf
mov
add
jne
adc
push
lds
adc
dec
sub
or
and
sub
inc
nop
or
nop
jo
in
or
(bad)
hlt
sub
fs
cs
mov
dec
xor
cmp
xor
sbb
test
hlt
cmp
test
in
or
or
cmp
fs
je
xor
jb
dec
pop
cwde
or
and
fcomp
dec
xchg
and
xchg
push
test
push
je
inc
push
leave
nop
aam
push
fs
xchg
inc
je
pop
jb
xchg
or
pop
stc
push
xor
jmp
sbb
push
jns
jns
imul
dec
xchg
aas
call
xor
push
and
push
mov
cld
cld
push
ror
adc
not
xor
popf
xchg
das
pop
jb
sub
sub
movs
xchg
jae
int
and
pop
cmovb
pop
ja
push
xchg
jge
dec
test
adc
daa
ins
push
ret
and
push
jae
and
and
imul
or
push
sbb
adc
add
out
or
adc
outs
inc
dec
pop
ret
xchg
jns
outs
cmc
or
add
pop
or
xchg
aas
push
ja
in
mov
out
xchg
mov
outs
push
ja
lea
pop
js
sti
addr16
xchg
rcr
push
mov
daa
jns
mov
push
outs
stos
aaa
bt
xor
jge
sbb
outs
jnp
adc
ret
aaa
and
jno
imul
or
neg
pop
je
ins
lahf
addr16
push
push
mov
arpl
ins
lds
pop
jb
jnp
mov
xchg
aaa
fist
push
outs
pop
mov
add
jge
xor
jo
je
inc
lds
adc
outs
add
jno
and
mov
loopne
and
ins
out
jns
push
dec
sbb
pop
inc
out
mov
ins
mov
pop
mov
mov
inc
retf
pop
sub
add
stos
jmp
stos
out
mov
rol
push
imul
adc
xchg
jp
ins
push
push
jne
jb
add
sub
and
lock
and
jo
xor
outs
arpl
call
xchg
movs
push
push
data16
xor
inc
das
fisubr
shr
xor
loop
popw
inc
xchg
fistp
(bad)
lods
xchg
mov
call
ret
dec
scas
imul
das
cmps
mov
in
sub
pop
xchg
add
shl
scas
jecxz
scas
ja
outs
jg
pop
ret
(bad)
mov
rol
push
push
push
pop
(bad)
lahf
out
fidivr
push
xor
out
cmp
shl
aaa
mov
ins
or
push
sbb
scas
adc
push
xlat
(bad)
pop
push
and
sti
rol
clc
shl
ins
lahf
addr16
cs
jae
xchg
adc
dec
arpl
pop
mov
or
pop
dec
shl
ret
and
mov
adc
xlat
(bad)
jbe
mov
cmp
inc
out
and
aad
or
adc
ret
lahf
jae
push
ins
pop
cmps
addr16
jb
adc
jge
aam
jae
jae
ja
push
or
adc
(bad)
push
aaa
push
(bad)
iret
test
outs
mov
add
div
push
ror
mov
outs
pop
pop
les
sub
daa
and
mov
and
add
iret
and
outs
ins
push
push
(bad)
mov
jb
stos
enter
sbb
or
adc
scas
sub
push
or
cmp
shl
je
in
loop
jbe
sub
push
mov
(bad)
or
sub
aad
cmp
scas
pop
sub
or
mov
adc
jb
add
aas
dec
rol
mov
loop
out
pop
mov
or
nop
add
add
or
imul
mov
push
aam
pop
fiadd
aam
sbb
fwait
jnp
xchg
int
fld
aas
fadd
in
sbb
nop
add
in
lock
(bad)
xor
cld
std
push
push
or
push
out
mov
adc
mov
iret
pop
pop
dec
popf
jno
mov
mov
and
je
sub
inc
add
inc
loopne
cld
gs
test
push
dec
add
fsub
bswap
and
add
je
sub
jmp
sbb
call
js
mov
jne
add
ror
dec
ret
cmp
add
push
mov
je
xlat
cdq
push
outs
pop
jmp
inc
pop
addr16
aam
mov
lods
sbb
nop
mov
data16
stc
popf
iret
lods
sub
cld
push
mov
call
xor
lods
jae
ss
mov
call
cs
inc
out
pop
jmp
mov
fnstcw
xor
sub
jne
add
lds
test
jl
sbb
dec
scas
dec
pop
movs
inc
mov
call
xrelease
pop
add
cmp
push
mov
nop
mov
fadd
inc
add
outs
adc
or
mov
and
(bad)
aad
jo
and
fcomp
mov
push
test
stc
or
push
push
inc
call
inc
mov
push
jae
out
fsubr
and
cmps
aam
mov
adc
fdiv
or
adc
inc
shl
in
and
pop
mov
xchg
xchg
jecxz
sub
add
bound
pop
mov
ins
pop
push
mov
pop
pop
stc
mov
outs
jno
mov
pop
daa
repz
hlt
pop
pop
dec
xchg
push
pushf
hlt
add
mov
dec
fistp
lahf
cs
xor
hlt
cmp
sbb
jnp
in
pusha
add
test
pushf
adc
add
and
ret
rcl
pop
dec
mov
lahf
mov
push
dec
clc
cmp
and
dec
dec
mov
in
nop
in
or
mov
and
stos
rcl
sbb
adc
imul
mov
push
imul
leave
add
cld
or
test
fst
xor
test
jne
xor
or
push
cs
hlt
inc
lods
add
xor
add
fcom
push
jns
pop
hlt
xchg
cmp
xchg
cmp
push
gs
in
inc
fimul
repz
or
je
inc
fistp
imul
cmp
cmc
ja
pop
test
mov
sub
jne
clc
cmp
jns
xchg
fnstsw
shl
dec
mov
in
enter
and
add
adc
aam
mov
push
adc
mov
enter
jnp
pop
dec
push
call
push
in
inc
enter
add
rol
add
nop
sub
leave
(bad)
idiv
pop
mov
dec
mov
dec
fisubr
jmp
adc
cmp
dec
aam
cmp
adc
jno
jge
mov
pop
fnstcw
xor
shl
mov
push
repnz
lods
cli
inc
inc
push
movs
lock
add
sub
test
clc
test
loopne
mov
sti
lods
int
adc
imul
pop
rol
add
aam
sub
fldenv
push
jno
xchg
pop
les
sub
xor
inc
add
push
add
sbb
mov
add
cmp
push
pop
out
les
cmp
and
mov
cmp
inc
movs
nop
ret
sbb
add
dec
ret
fdivr
retf
add
adc
add
xor
rol
outs
and
call
push
rol
cmp
pop
jl
lock
or
popf
loopne
in
or
push
repnz
rcl
pop
test
(bad)
cmp
stos
or
inc
and
and
ret
clc
inc
sub
movs
push
pusha
adc
cmp
ret
(bad)
outs
mov
push
dec
cld
push
jl
inc
mov
inc
mov
mov
clc
mov
jge
or
inc
jmp
sub
push
jl
shl
outs
nop
movs
adc
jne
dec
jae
dec
pop
call
mov
jb
or
mov
mov
pop
add
mov
scas
inc
lods
push
jnp
(bad)
and
jo
mov
adc
mov
or
or
test
or
or
jns
sbb
mov
ins
inc
sbb
and
ds
and
xchg
add
lock
int3
mov
mov
and
stos
push
push
dec
pop
push
or
inc
push
push
out
je
and
imul
dec
cmp
push
xor
das
cmc
sbb
bound
dec
dec
out
push
das
jo
cs
lods
repnz
inc
sbb
sub
add
adc
mov
push
adc
dec
(bad)
adc
enter
and
add
outs
fwait
clc
mov
daa
enter
mov
ret
xchg
pushw
jp
sbb
sbb
mov
test
lods
data16
push
and
fwait
push
call
repnz
fist
or
push
sub
or
(bad)
adc
es
push
sub
sub
mov
js
hlt
lahf
cdq
mov
sbb
adc
and
call
mov
dec
mov
push
enter
dec
or
inc
pop
pusha
test
stc
cmp
dec
bnd
clc
les
dec
push
lods
lea
into
lahf
and
add
mov
xor
xor
(bad)
and
or
mov
sbb
stos
xchg
and
stc
popa
pop
outs
push
cld
shl
push
retf
or
mov
push
out
sbb
jnp
add
jmp
call
cmp
xor
xchg
xlat
add
hlt
mov
or
pusha
call
adc
xchg
scas
mov
outs
imul
imul
lods
pop
pusha
pusha
push
(bad)
add
test
add
jne
rol
adc
xor
mov
sbb
push
test
dec
jns
dec
push
mov
jmp
pop
cmp
and
sub
push
shr
and
inc
stos
and
or
ss
jge
hlt
loopne
push
jmp
popf
retf
mov
pop
mov
add
jb
pop
cmp
hlt
pop
or
imul
and
sbb
shl
adc
sar
push
and
dec
imul
jp
jo
pop
shr
add
mov
push
mov
adc
and
in
push
lahf
xchg
imul
sub
push
dec
(bad)
popa
or
aad
ins
mov
aas
or
add
or
adc
mov
lea
mov
and
das
xchg
mov
retf
fisttp
popa
aaa
push
scas
es
and
js
sub
fisubr
or
and
jns
and
cmc
xchg
pop
and
or
daa
jmp
or
pop
mov
lahf
in
shr
in
add
add
inc
push
sbb
pop
test
hlt
lods
mov
prefetchnta
lods
fcom
test
mov
jnp
add
aas
jo
xlat
add
adc
pop
sbb
jp
jnp
pop
lods
add
stc
mov
outs
dec
rol
or
(bad)
cs
jmp
xchg
jnp
push
lea
sub
inc
sbb
ror
repnz
mov
enter
hlt
clc
clc
inc
push
fistp
jmp
fstp
sbb
(bad)
(bad)
add
outs
or
jmp
ror
movs
mov
cmp
pop
call
jo
nop
out
push
sub
mov
cmp
clc
cmp
enter
in
fs
data16
xchg
out
xor
or
mov
xor
mov
jo
mov
dec
jecxz
push
add
lahf
or
js
cmp
sub
mov
mov
xchg
sub
adc
adc
and
xchg
sub
sub
adc
sub
cmp
inc
pop
inc
pop
add
dec
jae
sbb
dec
adc
jbe
rcl
sub
sub
nop
inc
push
xor
jb
movs
pop
or
cmp
in
cmp
inc
pusha
adc
dec
inc
ins
inc
ret
aad
jo
pop
or
mov
push
pop
push
adc
pop
mov
std
sub
or
and
call
sub
movs
cmp
xor
dec
dec
mov
movs
out
inc
out
dec
adc
daa
in
movs
popf
push
inc
push
xor
xor
out
cmp
cmp
inc
scas
and
add
mov
unpcklps
jo
mov
clc
inc
sbb
lods
jb
pop
ret
(bad)
or
push
or
push
push
jecxz
(bad)
inc
popa
sub
fs
mov
rcr
outs
pop
xchg
jae
cmp
cmp
aad
dec
scas
adc
mov
push
sbb
outs
test
aas
addr16
push
inc
inc
sub
pop
xor
(bad)
pop
imul
xchg
mov
sub
outs
mov
popa
inc
popa
adc
pop
dec
jne
pop
add
sbb
xor
adc
daa
jae
clc
adc
in
cli
xor
je
push
push
mov
inc
mov
cmp
fsub
je
nop
scas
inc
pop
hlt
push
mov
inc
xchg
scas
xor
and
inc
pusha
or
outs
outs
xor
mov
add
push
aam
cwde
jne
mov
mov
push
fcomp
pop
push
add
sahf
push
xor
inc
es
call
rcl
pusha
and
mov
(bad)
adc
or
imul
jo
sub
jno
ficom
jl
sbb
rcr
mov
arpl
scas
data16
repz
data16
js
push
xor
adc
add
inc
push
pop
les
stos
pop
pop
and
add
es
es
xchg
lock
(bad)
popa
sbb
pop
pop
sbb
push
sbb
ja
adc
js
or
sbb
(bad)
mov
int
mov
adc
xchg
pop
mov
(bad)
mov
movs
push
fadd
hlt
imul
mov
push
add
xchg
call
fwait
int
mov
push
jo
push
ins
cdq
clc
fwait
js
sti
into
div
int3
push
dec
popf
push
sub
lds
fild
push
enter
cmps
xor
cmps
(bad)
lods
inc
nop
aas
pop
sbb
sbb
push
(bad)
lahf
sub
add
cmp
stc
push
inc
xor
pop
add
pop
cmp
popa
in
sub
cmp
cmp
mov
bound
mov
mov
adc
or
jo
or
sub
or
adc
jmp
dec
in
push
or
push
aad
shl
dec
xor
adc
add
jp
cmp
sub
aas
push
lods
movs
popa
cmp
fs
inc
or
ins
mov
mov
adc
push
dec
push
pop
in
jmp
or
add
inc
inc
xor
or
outs
sub
nop
fwait
push
pusha
cli
fdiv
data16
scas
jne
imul
or
push
jle
push
xchg
ins
arpl
out
or
inc
xor
cwde
or
dec
lock
sbb
je
push
leave
sbb
ins
mov
sbb
inc
std
call
rcl
or
dec
jno
or
inc
pop
enter
inc
jne
push
cmp
ds
jb
mov
cmp
dec
jae
jae
test
mov
add
inc
cmp
ss
outs
dec
das
leave
sub
mov
sbb
push
adc
inc
cmp
or
and
inc
in
xor
dec
or
push
out
add
push
pop
fs
cld
jne
xor
ins
int3
ror
or
xchg
adc
jno
mov
add
adc
adc
add
sbb
inc
sub
inc
outs
pop
and
xor
mov
inc
nop
aaa
(bad)
ss
imul
cmp
rol
xchg
mov
cmp
xchg
and
dec
push
mov
and
sahf
div
jb
je
and
loope
add
push
sub
ret
push
or
fs
popa
ret
jle
inc
scas
pop
data16
or
sub
push
fild
in
sub
sub
aam
jmp
dec
or
add
mov
inc
adc
pop
push
ror
xor
and
shr
push
out
and
and
or
add
or
xor
das
aaa
cld
inc
inc
or
call
push
and
jbe
into
sub
sbb
pop
test
adc
push
dec
mov
dec
sar
enter
sahf
dec
sub
imul
dec
call
mov
push
and
and
call
and
lds
mov
xor
stos
(bad)
pop
and
xchg
and
sahf
sbb
add
mov
in
inc
or
xor
loopne
aas
lods
ret
sbb
xchg
rol
pop
ja
sub
push
in
dec
mov
in
adc
dec
mov
sbb
push
nop
in
dec
and
sbb
ja
push
jo
add
and
mov
aad
or
(bad)
mov
aas
adc
jp
push
mov
push
cmp
sti
push
lea
lea
pop
or
pop
clc
jb
push
mov
or
fs
jl
add
push
inc
call
cdq
nop
inc
xor
and
adc
enter
xor
xor
mov
jbe
xor
fs
repz
jns
mov
call
pop
xor
lahf
xchg
test
push
imul
sbb
add
inc
sub
jge
xlat
adc
and
jle
pusha
sub
xchg
adc
mov
mov
clc
lahf
ins
add
or
movs
retf
push
in
jmp
stos
push
imul
in
push
sub
rcl
push
add
sbb
(bad)
jecxz
(bad)
lock
adc
push
add
dec
sbb
add
jle
adc
cmp
adc
mov
pop
push
push
add
loop
add
jmp
das
push
(bad)
out
das
push
inc
inc
das
dec
js
fst
xchg
and
dec
xor
daa
jecxz
dec
pop
and
cwde
sub
mov
dec
cmp
pop
adc
mov
add
add
mov
rcl
test
sbb
jmp
pop
mov
int
adc
add
inc
push
pop
add
and
mov
jmp
or
inc
jb
jae
mov
pop
pop
xchg
xchg
fdiv
dec
cmc
mov
cld
cdq
jno
jnp
push
inc
dec
cmp
mov
aad
and
and
int3
and
movups
clc
aam
bnd
cmp
adc
mov
mov
je
mov
mov
fmul
mov
rcr
mov
or
jb
dec
push
fcom
push
bound
mov
hlt
pusha
add
cdq
or
dec
cmp
jmp
jmp
iret
push
inc
pop
repnz
div
aaa
push
pop
push
ss
inc
sbb
adc
neg
dec
fidiv
dec
(bad)
push
jb
ss
cmp
outs
push
scas
nop
ja
push
cs
xor
adc
pop
xchg
sbb
mov
out
pop
sbb
mov
and
xchg
inc
add
jmp
push
nop
cwde
int3
or
hlt
or
es
jl
dec
sbb
inc
push
push
jne
xor
retf
dec
inc
add
adc
add
ins
fsubr
adc
dec
sub
jl
adc
mov
dec
js
inc
in
sub
jbe
push
shld
jne
jg
test
call
mov
pop
rcl
mov
sub
fwait
leave
loopne
pop
cdq
adc
loopne
data16
je
imul
(bad)
sub
adc
xchg
iret
cs
xchg
dec
mov
dec
dec
cmp
les
into
in
in
call
cmp
gs
add
gs
xchg
and
(bad)
jecxz
(bad)
ficom
adc
fadd
es
push
outs
jae
fsubr
add
push
loopne
cmp
dec
inc
into
inc
test
adc
dec
(bad)
adc
arpl
int3
pop
dec
xor
add
add
dec
add
xchg
leave
and
xchg
add
test
jbe
test
mov
adc
dec
shr
rol
(bad)
push
jbe
lods
ret
les
xor
mov
shl
and
jnp
pop
sub
mov
cmp
cld
js
cmp
stc
or
sbb
(bad)
daa
lock
dec
cli
loope
xchg
pop
pop
cmp
push
and
xchg
cmp
outs
mov
push
and
lahf
les
movs
lea
cs
cmp
mov
mov
test
sahf
mov
ret
inc
jmp
pushf
call
imul
or
push
out
in
mov
and
jb
inc
scas
fld1
jmp
push
pop
or
push
outs
jns
not
dec
push
pcmpeqd
and
pop
jecxz
and
add
cmc
mov
xor
cs
js
imul
lahf
or
loopne
mov
je
out
jno
add
push
add
test
mov
xchg
mov
neg
dec
fsub
std
cmp
or
fcom
push
dec
pop
bnd
scas
mov
jmp
xor
add
shl
imul
xor
inc
mov
and
inc
add
xor
scas
xor
cmps
push
addr16
dec
jb
jg
lahf
sub
js
xor
cs
dec
xchg
sbb
pop
adc
or
aaa
lods
cmp
pop
mov
push
adc
xor
cmc
clc
adc
or
inc
jne
inc
xlat
push
push
js
jmp
(bad)
nop
push
neg
adc
lods
jmp
test
mov
outs
sub
stos
nop
icebp
fstp
(bad)
inc
pop
aad
push
push
mov
inc
enter
outs
jmp
push
and
cmp
adc
(bad)
in
cmps
dec
mov
or
nop
daa
pusha
mov
sbb
push
xor
daa
add
adc
(bad)
and
imul
inc
push
xchg
sub
add
sbb
jg
jecxz
stos
inc
test
frstor
cmps
dec
adc
add
mov
cmp
push
xchg
add
and
ss
pusha
hlt
int3
and
imul
jle
enter
lock
cmps
pusha
enter
jne
adc
add
inc
test
cmp
add
lahf
movs
inc
or
jo
fsub
fsub
scas
stos
adc
cmp
xchg
dec
lock
pop
aaa
sub
cmp
enter
ret
push
das
dec
add
sub
dec
and
mov
adc
fcom
jo
in
mov
enter
inc
stos
or
dec
cmp
pusha
add
fcom
in
or
bound
sbb
and
jmp
and
outs
aaa
or
or
jo
mov
ja
sbb
or
sbb
dec
xor
and
mov
adc
and
push
and
cld
in
in
pop
xor
pop
sub
jb
test
or
hlt
xor
add
pop
inc
into
mov
ja
inc
dec
jnp
cmp
aas
fidiv
je
jno
or
inc
cmp
cwde
nop
hlt
mov
add
adc
setl
pop
mov
xor
test
mov
aas
and
mov
fmul
lock
sbb
rcl
sub
add
gs
add
(bad)
loope
cmps
dec
jne
xchg
in
inc
dec
mov
mov
xor
dec
mov
mov
or
or
lea
jle
inc
cmp
dec
les
fucom
fcomp
jp
cmp
jbe
bound
add
mov
xchg
imul
repnz
les
and
mov
fcomp
xchg
fsub
fsub
inc
sub
sti
pop
jns
adc
xor
scas
add
and
jb
inc
push
and
shl
add
push
push
dec
add
mov
sbb
and
sbb
adc
sub
addr16
mov
or
jge
test
and
bound
jmp
mov
or
aam
adc
or
push
(bad)
mov
pop
addr16
dec
out
test
jnp
mov
xchg
mov
mov
push
call
adc
pop
adc
neg
pop
pusha
cdq
push
cld
mov
mov
dec
cdq
dec
pusha
lds
push
outs
xor
leave
ror
stos
cdq
fadd
fadd
xchg
dec
scas
movs
add
(bad)
outs
cmp
call
clc
dec
call
jne
sub
pop
push
arpl
push
dec
dec
jo
cmp
ror
test
sbb
popa
jb
and
call
call
iret
call
es
pop
cmp
push
pop
btc
ins
hlt
jb
cmps
loopne
in
fcomp
push
jne
push
hlt
fwait
mov
imul
cld
xor
es
push
xchg
loopne
xchg
cdq
movs
fcompp
in
xor
and
mov
test
ret
shl
cwde
lock
mov
add
and
mov
pushf
add
nop
aaa
frstor
movs
pushf
stos
xor
pop
(bad)
enter
and
ret
cmps
das
sub
inc
popf
ins
repnz
add
adc
shr
enter
dec
pop
repnz
xchg
dec
mov
jo
sub
gs
mov
test
and
mov
jnp
dec
mov
and
popf
mov
pop
and
and
gs
sub
ins
jl
rol
mov
or
push
mov
cld
and
bnd
sbb
neg
dec
rol
into
rcl
in
cmps
pop
rcr
popf
or
sub
imul
and
call
add
bound
bound
sbb
and
or
cwde
mov
xchg
sbb
clc
pop
mov
xor
dec
mov
push
in
movs
pop
or
pushf
fsub
add
in
sbb
sbb
add
shr
ins
pop
fs
push
lods
in
sub
or
test
nop
add
les
and
and
enter
add
in
add
and
pop
in
lods
add
(bad)
xchg
bound
stos
cmp
and
and
sub
out
push
push
add
inc
and
push
jbe
shl
pop
add
push
mov
adc
mov
sbb
and
adc
push
add
mov
and
adc
cmp
sbb
jo
pop
in
dec
add
cmp
and
cmp
stos
fwait
mov
and
das
jmp
and
and
bound
mov
fisubr
mov
(bad)
fsubr
loop
push
jbe
bound
addr16
xchg
ins
aad
mov
out
mov
xor
outs
add
retf
stos
xchg
arpl
push
jne
pop
aaa
stos
outs
jg
adc
scas
jg
pop
mov
or
fs
push
mov
pop
jg
adc
fdiv
daa
jg
aas
cmp
sub
stos
sub
scas
push
jg
and
jbe
dec
ins
xchg
sbb
ss
sub
add
(bad)
add
frstor
or
sub
imul
and
xchg
mov
cmps
sbb
add
adc
mov
fbstp
dec
addr16
add
add
adc
push
and
xchg
mov
fcom
sub
fbstp
and
dec
cmp
mov
xchg
inc
shr
inc
pop
mov
xor
cmp
sub
ror
sub
push
pop
add
sbb
mov
arpl
mov
lods
inc
cmps
add
push
xchg
adc
inc
sub
add
push
dec
pop
jmp
add
(bad)
fld
aad
(bad)
sbb
or
inc
fadd
dec
mov
or
leave
push
add
bndstx
push
fistp
or
or
xchg
cmps
inc
adc
ja
movs
pop
add
sbb
imul
add
daa
cmp
nop
ret
xor
mov
cmp
xor
enter
mov
out
xchg
ret
in
push
inc
mov
jmp
dec
fwait
xchg
aas
push
jmp
stc
sbb
movs
cdq
movs
or
adc
in
mov
push
and
sbb
sbb
enter
sub
enter
xor
cmp
xchg
inc
jae
push
cmp
mov
or
add
add
inc
add
ins
or
push
jns
loop
mov
push
adc
jecxz
sahf
out
mov
adc
cmps
dec
call
mov
and
imul
fdiv
jne
fcomp
inc
xor
ffree
pop
xor
pop
loopne
or
scas
adc
mov
test
(bad)
and
adc
aaa
jmp
test
or
push
xor
jb
mov
mov
jmp
fild
popa
add
mov
mov
imul
sbb
and
xor
push
or
sbb
push
pop
dec
or
pushf
ror
ja
add
daa
mov
xor
push
dec
adc
loop
add
repz
jnp
mov
iret
neg
mov
pop
jge
repz
mov
sbb
cmps
lea
push
jmp
stc
enter
add
in
dec
imul
cmp
les
mov
nop
push
jmp
ror
rcl
cmps
mov
rcl
loope
xor
repnz
mov
sbb
mov
leave
sbb
xchg
dec
push
in
lods
lods
cmp
test
and
popf
add
xchg
iret
ja
ret
inc
inc
lock
mov
fs
cs
cwde
movs
sbb
dec
xchg
inc
cmp
xchg
push
nop
int
daa
mov
jge
and
dec
or
pushf
add
xchg
fwait
add
lock
and
gs
mov
push
rol
repnz
shl
(bad)
int3
mov
cmp
jne
push
mov
dec
cmp
lahf
push
xchg
retf
cwde
outs
mov
movs
xor
ins
mov
mov
sbb
ja
pop
pusha
call
(bad)
test
jne
cmp
jb
addr16
cmps
and
pop
stc
and
xchg
in
sahf
xor
retf
mov
xchg
ret
and
outs
mov
ficom
ins
inc
movs
and
imul
xchg
dec
aad
and
sti
push
loop
or
jne
jnp
rcl
jne
or
pop
push
cs
add
mov
jecxz
mov
popa
sub
imul
or
xor
inc
mov
or
or
(bad)
mov
lock
dec
aad
dec
or
arpl
push
sub
mov
popa
mov
inc
push
adc
(bad)
and
sub
xor
sti
and
xor
cwde
sub
ins
hlt
fsubrp
xor
inc
popa
cld
sub
jmp
shr
adc
add
imul
xchg
daa
fbstp
popa
pushf
sbb
test
or
mov
imul
mov
daa
add
inc
or
cdq
cs
std
test
mov
xor
mov
xchg
sub
cs
mov
call
sbb
xor
and
sbb
sub
add
jle
push
mov
pop
sub
xor
fdivr
ja
mov
(bad)
mov
add
pop
or
inc
dec
jne
xchg
xor
sub
fs
push
add
mov
sub
fist
pop
jg
xchg
dec
call
cs
test
lahf
cmp
dec
call
cs
outs
jo
mov
imul
push
inc
push
sub
imul
add
scas
xor
int
inc
in
inc
in
inc
call
bswap
dec
jae
outs
dec
call
jns
and
loopne
xlat
add
push
(bad)
push
jno
mov
in
xchg
rcl
imul
pop
outs
pop
stos
(bad)
dec
(bad)
add
add
jbe
and
jl
(bad)
dec
imul
test
sar
push
xor
dec
and
and
xor
rol
push
xor
fwait
push
jecxz
cmp
fmul
ins
jle
mov
fmul
mov
push
mov
lods
jb
or
rcl
sbb
jp
mov
jmp
cmp
mov
sar
adc
in
call
cmp
test
out
xchg
add
call
sar
sar
add
nop
dec
cmp
loope
cs
jg
adc
aam
jle
mov
jge
jmp
aas
sub
and
jmp
xor
add
sub
jl
or
jae
adc
add
ror
sbb
sub
ror
addr16
inc
pop
rcr
sub
inc
adc
nop
icebp
push
adc
or
push
pop
shl
pop
add
inc
mov
sbb
push
out
sar
cmp
cmp
adc
daa
clc
adc
sub
push
sub
push
mov
or
adc
add
dec
add
push
mov
sbb
and
add
lea
and
fdiv
xchg
aad
mov
add
mov
adc
or
(bad)
test
fisttp
fcomp
daa
nop
lock
aam
lea
push
push
adc
and
xchg
imul
sub
xchg
xchg
xchg
mov
sub
mov
enter
sub
sub
push
jne
push
pop
das
mov
retf
jmp
addr16
in
pop
stos
push
jbe
(bad)
adc
retf
cli
pop
cli
arpl
xor
add
or
aaa
aad
daa
loopne
ja
pop
retf
mov
sub
ret
mov
mov
sar
xchg
xchg
imul
mov
rcl
fs
sbb
pop
cmp
and
iret
jnp
sub
hlt
test
cmp
fwait
rol
fld
push
inc
dec
cli
jmp
(bad)
rcl
shl
ins
es
dec
lock
inc
shl
or
and
xor
clc
adc
add
and
sbb
test
inc
ror
dec
push
jl
hlt
or
or
(bad)
lock
xchg
fstp
fwait
pushf
push
inc
sub
push
pop
cmp
fsubr
lods
fisub
dec
or
xor
dec
mov
push
xor
mov
or
fisub
push
cwde
push
jle
call
xchg
or
ffree
cwde
add
rcr
int3
dec
mov
cwde
xchg
(bad)
inc
aaa
inc
loop
add
push
jo
xchg
push
mov
xor
push
retf
add
imul
ret
popa
push
xchg
inc
loopne
add
mov
sti
sub
test
dec
gs
xor
lock
(bad)
(bad)
mov
int
pushf
push
or
les
or
xchg
inc
sub
mov
aas
or
pop
adc
das
je
mov
adc
je
pop
pop
popf
cmp
das
sbb
outs
ins
add
xchg
sbb
in
or
aaa
pop
adc
push
mov
ins
cli
ror
add
fucomip
jb
cmps
add
loopne
push
lods
mov
jmp
cmp
movzx
add
xor
sbb
aaa
or
xor
stos
cmc
xchg
je
and
pop
mov
push
sar
mov
cmp
push
ins
jge
adc
push
xchg
push
sub
jle
mov
mov
sbb
sub
mov
cmps
inc
and
mov
and
push
sub
xlat
add
pop
ret
daa
cs
add
add
test
dec
das
cs
add
dec
add
sbb
movs
(bad)
xor
dec
or
rcl
push
call
or
cmp
jle
adc
pop
les
and
jmp
ss
and
inc
add
adc
rcl
ror
sub
int3
int3
and
fcom
and
in
inc
(bad)
fdivr
add
aam
inc
fmul
add
push
add
daa
dec
xchg
pop
pop
movs
hlt
adc
dec
push
cmps
pop
nop
add
jp
push
mov
add
fwait
test
int3
int3
or
enter
in
enter
push
fldenv
cs
(bad)
adc
sbb
shl
retf
or
inc
add
outs
jmp
jbe
and
dec
ror
cmp
add
add
les
mov
mov
jle
push
dec
add
jg
daa
mov
(bad)
lods
(bad)
mov
dec
shl
dec
or
dec
sub
adc
cmp
pop
shl
imul
dec
(bad)
pop
and
jmp
add
(bad)
int3
push
fsub
push
push
rcr
pop
aas
mov
push
push
dec
leave
aam
loopne
push
call
nop
(bad)
outs
pop
sbb
inc
pop
cld
push
icebp
imul
cwde
imul
shl
jae
fs
pop
retf
inc
xchg
imul
hlt
repz
ins
mov
inc
jne
mov
or
and
div
push
sbb
aam
les
xor
pop
rcl
ss
ins
das
or
push
or
jmp
mov
jae
fs
or
xchg
or
retf
xchg
ja
js
lods
xor
dec
dec
das
sub
stos
mov
pushf
dec
xor
push
(bad)
xor
xchg
adc
retf
jb
xor
xchg
(bad)
adc
stos
retf
lea
inc
mov
dec
xor
push
adc
aam
fst
xchg
mov
test
imul
adc
pop
push
xchg
push
dec
pop
push
mov
js
ins
outs
(bad)
imul
sub
ins
sbb
dec
xchg
sub
push
sbb
add
or
sbb
fs
leave
mov
push
dec
mov
xchg
addr16
push
jns
in
push
push
xchg
fs
push
inc
cs
inc
ficomp
in
cmp
sbb
adc
nop
pop
add
pop
adc
mov
fwait
and
dec
std
cmp
cmp
mov
pusha
mov
test
ins
xor
loopne
rol
jmp
lds
addr16
jbe
inc
add
cs
pop
cwde
push
pop
outs
add
imul
inc
dec
ja
add
cmp
mov
add
fld
fs
jmp
(bad)
sbb
xor
test
call
inc
jo
je
pop
xchg
dec
inc
xor
into
xor
clc
inc
xor
add
jno
or
ror
mov
das
mov
ret
data16
cmps
(bad)
sub
dec
movs
ror
xchg
hlt
nop
xchg
(bad)
fnstsw
hlt
cs
xchg
cld
lock
ins
(bad)
leave
(bad)
mov
call
(bad)
lds
push
mov
test
jne
sub
or
push
icebp
fmul
les
icebp
jmp
test
scas
jp
sbb
es
mov
sbb
pop
and
inc
sub
test
daa
pop
aaa
push
mov
dec
dec
adc
inc
js
ja
push
xor
inc
push
mov
or
lds
push
cmp
retf
sub
pop
or
sbb
dec
int
cmp
sbb
push
xchg
sbb
es
push
mov
pop
mov
mov
adc
fldcw
mov
pop
mov
jl
rcl
xor
dec
lea
arpl
or
or
lods
dec
aaa
lds
jg
lods
and
in
and
outs
jnp
mov
sub
stos
jecxz
ins
and
daa
or
div
mov
or
(bad)
jno
sub
loope
in
int3
mov
add
mov
aam
shl
ins
pop
sub
push
retf
pop
add
add
mov
and
adc
aaa
or
mov
mov
mov
xor
lock
sbb
xor
test
dec
and
data16
push
adc
xor
outs
lock
xor
xchg
inc
mov
fs
fdivr
pop
pop
inc
sbb
and
popf
or
jae
or
and
or
and
idiv
or
dec
jmp
scas
and
add
pop
je
dec
mov
mov
adc
dec
cmps
popf
out
jmp
xchg
add
(bad)
outs
or
and
mov
not
es
pusha
pusha
loope
lds
sub
fdivr
sub
je
inc
adc
shr
(bad)
pusha
ret
cli
or
lods
loope
xchg
mov
jge
push
jge
sub
xor
and
in
fcomp
fs
cmps
push
xchg
pusha
pusha
and
mov
nop
pop
dec
mov
movs
mov
imul
cmp
popf
mov
je
inc
push
test
sti
inc
mov
and
mov
fimul
fld
jmp
lea
in
out
xchg
mov
cwde
inc
add
fnsave
mov
loopne
xchg
sub
inc
ror
push
mov
js
sbb
jne
jecxz
outs
push
add
test
sub
out
adc
jo
mov
xor
mov
mov
fs
(bad)
js
and
mov
je
mov
outs
fsub
pop
adc
dec
fdivr
mov
cmp
mov
xchg
mov
inc
xchg
push
jb
xor
inc
and
mov
xor
sub
jmp
ret
jecxz
mov
into
sbb
mov
push
push
mov
into
imul
sub
xor
xchg
push
or
xor
push
push
jecxz
push
cmp
out
rol
sub
(bad)
sbb
push
sub
in
and
cmp
pop
cmp
inc
je
dec
cs
inc
inc
inc
fild
adc
pushf
inc
or
(bad)
in
push
fwait
aam
jecxz
mov
adc
in
repz
scas
pusha
mov
mov
fwait
add
test
mov
movs
cmp
pop
call
ror
ror
pop
aam
adc
and
repnz
dec
and
cld
and
adc
cld
mov
jo
cdq
in
sbb
xor
stos
mov
and
or
jmp
mov
xor
nop
cmps
sub
in
cs
cmp
mov
ins
lods
push
inc
push
xor
cli
xchg
add
add
push
shr
add
xchg
or
and
and
add
inc
call
icebp
jmp
inc
inc
test
popa
pop
inc
add
inc
lods
adc
enter
lea
jg
mov
sti
(bad)
mov
add
(bad)
cld
(bad)
adc
xor
es
mov
mov
ins
loope
jmp
sub
push
xor
mov
outs
imul
cmps
dec
call
mov
int3
and
dec
xor
add
push
adc
pop
leave
mov
sti
into
jne
pop
je
dec
hlt
(bad)
pop
or
mov
sar
xor
push
rcr
push
and
xchg
lods
(bad)
mov
pop
mov
das
inc
add
clc
jo
inc
inc
leave
and
retf
and
pushf
aaa
dec
imul
jmp
jl
push
jb
or
pop
or
out
shl
in
sub
jo
or
rol
loop
sbb
movs
cmp
pop
arpl
fisttp
adc
or
aam
loop
or
cmp
pop
cmp
push
movs
loopne
in
add
xor
add
xor
aaa
int3
loop
inc
rcr
fld
and
pop
inc
push
fcomp
sbb
sbb
dec
je
adc
dec
(bad)
adc
test
sbb
rcl
pop
push
ret
test
test
in
mov
dec
push
xchg
js
dec
lea
pop
inc
jne
rcl
mov
pop
mov
mov
push
fst
add
or
aad
pop
sbb
and
es
popa
enter
mov
dec
out
jb
sar
add
mov
icebp
cmps
into
cmc
je
push
adc
jp
shl
and
enter
push
mov
daa
rol
xchg
retf
cmp
rcl
imul
push
pop
cmp
dec
mov
dec
push
shl
pop
test
test
je
ins
or
dec
sbb
sub
shl
jmp
clc
lods
lods
in
in
call
pop
enter
jbe
cmp
adc
pop
cmp
jno
test
inc
nop
sbb
xchg
push
dec
jb
xchg
cwde
cwde
cmp
out
push
xor
ret
outs
icebp
add
dec
xchg
retf
mov
ins
outs
inc
test
jo
sub
jmp
nop
sbb
es
xchg
inc
jl
aad
and
out
ins
or
outs
mov
adc
mov
sbb
inc
clc
(bad)
mov
sub
loopne
xchg
movs
mov
mov
mov
adc
xchg
pop
or
cmp
xor
cmp
inc
push
js
and
or
inc
add
jmp
and
add
jmp
dec
int3
scas
cmp
pushf
add
or
jno
add
das
adc
les
jge
out
pushf
add
fcomp
das
loope
push
jmp
in
ret
add
imul
and
mov
dec
jae
and
and
in
pop
ret
int
inc
inc
aas
mov
cdq
movs
add
and
jbe
mov
or
dec
jge
mov
out
or
push
cdq
xchg
es
je
push
sbb
dec
test
pop
adc
add
dec
cmp
mov
pop
xor
sub
adc
adc
imul
addr16
push
mov
and
ret
or
jae
ja
add
mov
lods
push
test
mov
adc
jbe
pop
mov
add
daa
cmp
pop
loop
add
or
cmp
js
pop
add
push
js
sub
ja
jge
push
or
mov
bound
or
cwde
sbb
dec
inc
inc
pcmpgtw
ins
adc
arpl
test
sbb
inc
xor
adc
inc
(bad)
mov
ja
movs
mov
add
pop
add
lds
push
mov
movs
pop
out
das
nop
mov
stos
mov
add
adc
pop
add
pop
inc
mov
pop
inc
pop
out
bsf
in
push
or
adc
dec
pusha
lods
jbe
xchg
or
fsub
dec
ins
adc
inc
cmp
sub
arpl
mov
inc
out
pop
push
add
inc
cmps
xchg
adc
(bad)
pop
fisubr
dec
dec
sbb
inc
call
scas
ja
ror
loopne
inc
add
retf
jp
xchg
dec
push
out
fwait
or
loope
mov
shr
xor
push
cmp
sub
cmp
cmps
cmp
rcl
test
dec
pop
out
movlps
jmp
mov
imul
push
xor
int3
es
and
mov
ins
popa
dec
dec
shl
lahf
ret
cmps
add
int3
inc
and
out
or
and
inc
scas
popf
je
mov
test
jmp
cld
out
adc
inc
jecxz
dec
es
add
(bad)
rcl
or
imul
pop
test
clc
sbb
jnp
dec
inc
shl
loopne
rcr
not
test
btr
sub
aaa
sbb
out
out
call
call
pop
mov
pop
and
loopne
dec
pop
push
mov
inc
sbb
cs
xchg
js
das
adc
and
mov
pop
xchg
ds
mov
in
push
sub
and
xor
xchg
nop
jmp
mov
mov
fdivr
mov
jg
aam
sub
dec
aam
in
xor
jmp
jl
pop
repnz
inc
inc
jmp
and
pop
pop
push
scas
(bad)
xchg
(bad)
dec
imul
lahf
cmp
call
pop
out
lods
sbb
mov
inc
sub
(bad)
out
mov
adc
xor
inc
adc
and
jge
mov
fsub
push
(bad)
adc
jmp
cs
or
jg
push
pop
clc
gs
(bad)
or
or
ror
mov
push
jb
pop
mov
out
fcomp
scas
xor
fild
faddp
fdiv
adc
stos
nop
xlat
push
movs
adc
dec
jmp
xchg
xchg
jmp
jmp
add
inc
dec
daa
pop
sub
retf
push
imul
fist
cdq
enter
adc
stc
call
fld
sbb
repnz
sahf
jb
sbb
push
fstp
cld
or
gs
xchg
add
mov
jnp
std
adc
(bad)
sub
loope
sub
(bad)
(bad)
adc
fidivr
push
add
dec
or
push
xlat
(bad)
in
inc
lock
pop
xor
sub
aas
pop
les
or
xor
xor
cmp
movs
adc
mov
and
xor
mov
pop
pop
jmp
sub
dec
and
inc
push
sbb
adc
jle
imul
dec
call
mov
inc
jne
add
xchg
inc
xor
or
fild
sbb
test
dec
loope
loopne
add
stc
mov
xor
rcl
adc
cmp
add
shr
add
popa
adc
mov
sub
imul
or
mov
jl
(bad)
ret
pop
add
mov
(bad)
arpl
shl
mov
mov
sar
inc
cmp
mov
add
mov
rcr
inc
jmp
or
jle
sub
sbb
and
rcr
dec
xor
inc
cdq
call
out
loop
mov
mov
xchg
test
or
lock
inc
sbb
mov
cmp
stos
sub
or
add
jae
cmp
in
cdq
call
or
stc
dec
add
cld
ds
push
daa
movs
xchg
sysret
setb
je
test
sbb
xor
adc
int3
fdivp
pop
mov
pop
or
mov
add
loop
cmp
sar
test
push
test
push
push
out
pop
imul
sub
sbb
daa
inc
sub
repnz
inc
xor
imul
or
mov
mov
stc
call
sub
(bad)
popf
cmp
push
lods
pop
cdq
add
int
mov
mov
jnp
or
inc
pop
(bad)
or
(bad)
sahf
or
mov
imul
dec
pop
push
dec
cmp
push
xchg
in
sub
inc
inc
sub
pop
cmp
sub
inc
cmps
sbb
add
xchg
hlt
dec
xor
inc
jge
cld
adc
adc
lahf
data16
mov
jbe
add
call
in
clc
in
sahf
out
jl
stc
push
adc
xchg
pushf
int
sar
lock
push
call
fwait
iret
aas
inc
add
movs
ret
add
add
cmp
mov
sbb
jge
aam
xor
push
sub
and
or
popf
dec
adc
cmp
call
mov
not
push
add
add
rcl
mov
dec
add
or
push
outs
scas
shl
loop
or
pop
or
add
cmp
shr
push
add
add
cmps
jne
add
inc
enter
loope
fst
cmps
add
mov
jne
xor
adc
and
lock
cdq
add
xchg
daa
lea
jge
xchg
inc
aam
jne
adc
adc
cmp
xor
mov
adc
mov
push
jne
test
adc
daa
inc
adc
stos
cmps
add
clc
cmp
inc
push
adc
fnsave
xor
sub
xchg
and
outs
dec
stc
scas
sub
je
and
sub
dec
sub
pop
adc
push
dec
sahf
stos
sub
jne
pop
call
dec
dec
sti
ror
loop
push
pop
test
sub
jp
sbb
cmp
das
or
call
pop
dec
inc
push
cmp
stos
push
jne
pop
call
ror
in
or
out
cmp
or
ja
pop
call
enter
or
dec
dec
mov
inc
ja
ins
popw
push
or
push
dec
or
add
push
sbb
pop
adc
icebp
cli
sbb
enter
sbb
ficomp
mov
mov
sub
dec
loope
sub
je
dec
je
jmp
cmp
add
pop
add
jne
cmps
scas
sub
pop
or
pushf
mov
pop
nop
pop
js
pop
(bad)
dec
aam
add
xor
jbe
retf
xor
and
ret
xor
mov
ret
mov
cmps
add
push
imul
in
mov
or
pcmpeqd
jmp
push
dec
push
(bad)
popf
outs
outs
sub
push
cmps
xor
das
xor
or
pop
dec
pop
test
jmp
jmp
and
sub
scas
sub
out
dec
jmp
jecxz
and
inc
mov
lea
mov
mov
lea
mov
sub
or
or
mov
fwait
adc
out
pusha
icebp
in
fdivr
mov
inc
lock
add
ud2
lods
and
rcr
add
inc
sub
mov
repnz
fist
cmp
mov
or
xor
out
stos
dec
mov
push
inc
outs
and
movs
leave
call
or
sbb
and
add
shl
mov
pop
or
inc
xor
pop
or
jg
call
shl
inc
call
dec
rcl
sbb
sbb
pusha
or
inc
dec
add
and
and
or
xchg
and
shr
out
xchg
shr
push
(bad)
add
out
mov
and
sub
call
add
cmp
or
fisttp
mov
adc
xchg
hlt
repz
or
jmp
adc
in
adc
mov
dec
outs
and
test
test
or
outs
or
dec
sbb
icebp
mov
adc
pop
or
add
mov
shr
mul
fbld
es
call
adc
stc
or
les
shl
lock
pop
fwait
and
and
pusha
call
and
sbb
adc
and
and
fsub
aaa
add
adc
dec
loope
outs
or
inc
mov
jmp
dec
push
adc
jbe
mov
enter
push
add
(bad)
push
rol
push
or
add
mov
and
add
stos
or
and
add
add
mov
scas
sbb
pop
cdq
jecxz
jp
sub
mov
adc
cmp
fs
cmps
push
sub
adc
adc
push
sub
push
or
jno
jo
stc
xlat
pop
push
pusha
add
mov
push
xor
push
pop
add
xchg
ins
or
mov
mov
daa
xchg
push
or
call
scas
mov
loope
cmp
sbb
adc
xor
mov
cmp
add
je
sbb
pop
push
push
(bad)
cmc
mov
and
pusha
sub
pop
sub
mov
and
mov
sub
mov
jne
adc
add
add
pop
and
add
sbb
or
mov
into
jge
or
jl
jnp
imul
dec
adc
or
add
pop
and
and
or
pop
(bad)
sub
adc
rcr
dec
dec
and
rol
aad
mov
add
fcomp
push
pop
pop
mov
and
sub
pop
cli
jb
add
fild
retf
loopne
add
test
add
iret
sub
sub
das
mov
xor
inc
pop
mov
inc
and
adc
add
sub
inc
jb
add
inc
adc
jmp
popa
mov
out
add
xchg
add
or
xor
cmp
mov
add
xor
or
dec
xchg
or
es
nop
cmp
xlat
or
dec
pop
dec
sahf
jg
stc
dec
cmp
pop
or
jns
stc
nop
dec
or
dec
or
inc
and
mov
and
or
mov
jl
jl
(bad)
pop
mov
or
lods
mov
mov
inc
xlat
xchg
jle
(bad)
test
fiadd
add
add
mov
jge
pop
add
mov
out
inc
cmps
cmp
adc
sbb
inc
dec
adc
push
mov
or
push
pop
fwait
add
and
movhps
add
pop
inc
adc
add
loopne
sbb
inc
inc
and
ja
test
mov
call
call
push
mov
adc
hlt
xor
sub
enter
add
add
bound
sbb
xchg
sar
dec
hlt
mov
cmp
jne
inc
jae
test
movs
inc
xor
add
cmp
in
jb
loop
in
jae
inc
ss
xor
mov
(bad)
call
retf
stos
xor
add
(bad)
leave
push
je
sbb
jp
popf
add
jle
add
add
add
cmps
xchg
ins
jb
sub
cmp
push
data16
jg
mov
mov
add
xchg
mov
push
mov
or
out
mov
inc
and
push
add
bound
add
adc
push
and
mov
or
fdiv
add
rcr
mov
jne
push
test
push
ror
sub
pop
sub
int3
or
movs
fsub
ja
sbb
jne
sbb
or
push
loop
dec
inc
inc
icebp
xchg
push
lea
mov
sub
mov
ror
mov
mov
push
retf
inc
mov
mov
ins
fild
jge
dec
add
xor
dec
aaa
or
lock
jns
inc
add
aam
push
jmp
(bad)
inc
adc
pop
fcom
jmp
daa
les
cmp
out
jecxz
dec
jae
mov
push
in
push
fdiv
add
dec
and
add
rcr
push
xchg
dec
cmp
xchg
jmp
call
jne
clc
dec
popf
cmp
inc
cs
push
retf
pusha
add
js
dec
nop
sbb
mov
inc
mov
or
jg
xlat
test
in
push
add
pusha
xor
add
xchg
ret
push
inc
div
mov
or
imul
rcl
dec
or
rcl
rcl
pop
push
cwde
inc
mov
or
rcl
ror
dec
test
or
les
sub
inc
cmp
sub
mov
lea
pop
xchg
and
xor
or
cmp
jmp
xor
in
adc
xor
xor
movs
es
sti
(bad)
movs
sbb
and
mov
xor
cmp
and
enter
dec
xor
jp
sqrtps
dec
push
bound
js
not
sub
pop
push
imul
cmp
push
loopne
sub
jg
add
cmps
lods
loop
es
es
add
mov
gs
cdq
push
and
or
rol
adc
add
add
mov
outs
cdq
iret
dec
mov
ret
add
xor
xor
in
lea
mov
mov
mov
mov
push
cwde
add
popa
xor
call
mov
out
nop
dec
cwde
push
adc
or
xor
or
adc
retf
add
lahf
mov
pop
sub
add
lahf
inc
xchg
(bad)
inc
mov
in
or
in
or
ror
push
rcl
push
rcr
mov
dec
fdiv
adc
sbb
movs
fcom
or
add
movs
fsub
add
or
push
and
and
adc
or
add
stos
popa
sub
cdq
cmp
popa
adc
adc
mov
sbb
pop
add
scas
repz
or
add
enter
sbb
loope
(bad)
jle
or
ret
psubusw
mov
lock
xor
lods
add
jb
mov
and
xor
sar
fsubr
add
cs
aaa
and
ds
push
mov
and
and
sub
or
mov
sub
in
mov
pop
(bad)
outs
shr
out
push
inc
adc
sub
sub
add
inc
adc
xchg
jl
or
add
movs
xchg
in
rcr
loopne
in
test
pusha
xlat
ja
mov
fs
jg
add
(bad)
sbb
inc
dec
adc
sbb
dec
adc
stc
and
pop
fucom
sbb
pop
bound
and
cmps
loopne
xchg
out
inc
mov
dec
les
(bad)
ins
es
shrd
sar
retf
push
pop
sti
je
add
pop
int
into
cli
add
cld
dec
test
cmp
cdq
mov
add
sahf
shl
ja
and
(bad)
retf
ret
adc
mov
jecxz
and
and
mov
ds
pushf
pop
mov
lods
xlat
mov
ror
call
push
xor
sub
mov
mov
cmp
push
or
push
mov
or
xchg
aaa
push
and
adc
mov
dec
lahf
pop
and
rcl
ret
dec
xor
loopne
and
sar
outs
ret
out
inc
push
mov
xchg
adc
xor
xor
stc
adc
dec
cs
mov
jge
push
mov
inc
call
sbb
or
enter
sub
stos
out
or
adc
adc
xchg
xor
fstp
mov
les
(bad)
and
xchg
add
jl
aaa
pop
adc
push
cmp
je
mov
xchg
retf
daa
sbb
and
cld
mov
mov
push
inc
lods
jmp
mov
xor
sub
push
cmp
in
test
inc
scas
add
add
adc
hlt
jp
xchg
out
ficomp
out
sub
mov
cmp
xchg
or
jno
sbb
or
push
lahf
ret
retf
test
or
or
push
daa
or
mov
sbb
or
xchg
daa
sub
add
pop
mov
push
retf
mov
or
outs
sub
in
test
mov
pusha
pop
mov
adc
mov
xchg
xor
jmp
push
nop
fld
adc
dec
dec
mov
sbb
movs
ret
xchg
dec
sub
test
xor
add
push
jmp
mov
retf
loopne
xor
rcr
les
into
shl
pop
xchg
daa
retf
xor
fisttp
das
jmp
adc
or
or
cdq
pop
leave
and
sahf
jmp
and
xor
push
dec
mov
add
xchg
and
(bad)
es
sbb
fcomp
fsubr
pusha
add
adc
xor
mov
pop
jmp
data16
or
push
add
xlat
mov
js
int3
mov
ins
pusha
fimul
push
pusha
mov
pop
jbe
jle
call
xor
add
clc
and
in
into
mov
ja
adc
cs
push
les
add
and
add
cmp
jmp
and
out
cwde
ret
adc
daa
or
and
popf
xor
popa
mov
ret
popa
or
outs
sahf
(bad)
jb
retf
and
lock
nop
movs
sbb
mov
clc
sbb
jmp
ja
inc
pop
push
jl
add
ins
adc
push
mov
fadd
nop
or
fldenv
pop
fild
sbb
jbe
adc
imul
push
sub
gs
inc
call
or
repz
adc
fwait
sbb
xchg
test
pop
cmp
jb
inc
sub
ds
cmp
sbb
xchg
and
daa
test
(bad)
out
push
cmps
xchg
mov
mov
pextrw
push
push
xor
dec
loop
pop
or
dec
xor
clc
push
xor
jmp
sub
xchg
inc
and
push
and
push
stc
scas
in
ret
mov
adc
js
mov
cdq
pop
shl
mov
push
sbb
mov
cli
xchg
outs
cmp
adc
pop
sub
inc
mov
loop
dec
mov
fcmovb
jne
movs
or
bound
or
retf
adc
dec
outs
popa
dec
cmp
add
in
cld
cs
or
jp
dec
pop
(bad)
in
mov
add
dec
pop
pop
xor
pop
out
clc
cdq
in
loopne
test
imul
adc
add
adc
and
mov
add
and
dec
dec
sbb
lock
add
adc
call
mov
je
cmp
xchg
sub
(bad)
or
ret
xchg
xchg
push
jne
sub
push
sub
mov
adc
jmp
push
pop
imul
gs
jo
and
arpl
dec
xchg
hlt
jle
or
fmul
pop
adc
xchg
adc
ds
adc
jne
pop
ret
push
add
inc
lock
sbb
adc
popa
and
fsub
mov
cs
add
xchg
add
push
cmp
pop
scas
ret
push
mov
xchg
xor
add
or
addr16
mov
clc
sar
xor
test
es
jmp
push
sbb
mov
push
add
and
aaa
or
lahf
mov
fimul
int3
lock
cld
and
jl
das
dec
xchg
or
mov
sbb
lea
mov
pop
je
ins
adc
sub
pop
or
push
fisubr
jns
cld
jmp
cwde
in
lds
nop
in
mov
mov
pop
or
add
add
out
das
inc
mov
cmp
arpl
ror
sbb
mov
ins
gs
xchg
adc
adc
imul
lahf
fwait
cmps
in
inc
push
dec
enter
fsubr
jmp
pop
out
rol
sbb
or
shr
push
push
inc
fsubr
or
push
jmp
cmp
daa
xor
inc
dec
push
sbb
xchg
sub
je
shl
push
push
sub
(bad)
enter
inc
push
jmp
ins
shr
adc
dec
sub
jnp
add
int3
(bad)
cmp
sbb
imul
adc
pushf
loop
sub
mov
(bad)
sub
inc
(bad)
sbb
add
adc
mov
les
outs
outs
fmul
mov
xor
es
lea
les
add
add
jl
sbb
add
push
pop
jbe
imul
xchg
push
push
cmc
sbb
dec
fistp
sbb
and
retf
dec
jae
lock
int3
gs
loopne
(bad)
xchg
add
sbb
mov
fist
sbb
mov
cmp
adc
bswap
adc
cmc
cmp
xor
push
mov
inc
add
aam
out
xor
test
les
pop
and
sub
sbb
stc
or
sbb
add
stos
add
sub
or
sub
dec
and
push
popf
fcom
push
mov
mov
adc
stc
pop
push
inc
cld
je
pop
sbb
mov
jns
xor
fwait
inc
sbb
dec
mov
add
mov
mov
daa
add
dec
aam
push
push
push
(bad)
sub
mov
lea
mov
iret
and
jle
test
jl
inc
inc
xchg
jno
push
inc
adc
loop
mov
pop
xchg
adc
(bad)
xchg
sbb
fcomp
pop
pop
lods
inc
ins
xlat
or
loope
int3
ss
test
stos
inc
arpl
fst
fldcw
dec
cmps
dec
cmp
imul
push
sbb
out
data16
movs
ret
mov
xor
add
or
xchg
test
test
int
adc
xor
popa
adc
aaa
mov
movs
sub
xchg
push
pop
jmp
inc
gs
or
call
dec
outs
inc
or
movs
or
ss
mov
adc
rol
int3
mov
and
and
or
lea
rol
pushf
sbb
pop
dec
sbb
pop
and
inc
cmp
enter
and
fcomp
movs
xlat
cmp
arpl
sti
and
loopne
inc
lods
ret
adc
pop
fwait
clc
push
mov
push
lock
cmp
and
in
cmc
sub
jmp
inc
add
adc
add
ins
dec
xchg
icebp
mov
(bad)
jecxz
inc
sbb
add
pushf
mov
push
adc
add
sub
mov
mov
dec
or
in
fisubr
dec
or
fs
or
adc
adc
ds
jl
jp
and
sub
ja
mov
pop
loopne
push
inc
mov
xor
push
adc
or
mov
xor
dec
cmp
in
arpl
push
scas
frstor
sub
mov
adc
fistp
add
push
movs
repz
cmp
push
cmp
movs
cmp
cld
arpl
pushf
or
jbe
jo
(bad)
and
mov
pop
adc
ret
xchg
enter
pop
call
repz
cmp
inc
repnz
jo
push
pusha
inc
sti
sub
sub
in
sub
xor
stos
adc
stos
or
cs
repnz
lahf
xor
sub
test
ret
sahf
xchg
push
sub
(bad)
gs
mov
loopne
mov
cmp
test
int
loop
ror
xor
sub
push
pusha
inc
xchg
pop
jecxz
fidiv
add
xor
shl
xlat
cmp
jno
cmp
mov
nop
jbe
ficomp
add
sbb
lock
ds
mov
ins
mov
ret
and
std
mov
xchg
dec
imul
in
inc
dec
mov
jbe
aas
xor
sbb
idiv
popa
clc
mov
dec
push
push
call
xchg
outs
leave
dec
clc
in
in
push
xor
inc
aaa
stos
repnz
fidiv
fcomp
inc
jbe
fcom
mov
add
or
mov
icebp
shr
jbe
jle
push
push
push
mov
inc
ret
ja
and
xor
xor
cdq
ss
and
les
mov
ins
mov
xor
daa
shl
mov
inc
sbb
sbb
cmp
jno
cmp
movs
pop
sbb
inc
outs
cmp
mov
add
push
add
dec
repz
dec
mov
mov
ret
pop
cmp
fsub
mov
mov
cmp
push
push
mov
pop
daa
pop
sub
loopne
pop
data16
adc
pushf
cwde
sub
daa
pcmpeqw
data16
mov
cmp
out
aas
and
xor
das
dec
pop
push
adc
aas
int
inc
sbb
test
xor
fcmovnb
pop
pop
adc
dec
mov
or
push
cmp
and
sti
inc
stos
inc
outs
pop
cmp
inc
cmp
cmp
or
xchg
dec
sbb
mov
cmps
push
dec
dec
push
dec
mov
pop
fidivr
ds
inc
inc
adc
xchg
add
clts
pop
add
jno
cdq
rol
or
inc
loopne
hlt
lahf
fadd
push
and
sub
push
or
iret
int3
das
(bad)
inc
and
imul
aad
dec
cmp
add
ror
xor
inc
mov
adc
add
jae
popf
in
sub
aaa
mov
mov
(bad)
jo
pop
cmp
add
jge
pusha
ret
adc
pusha
push
xchg
fadd
cdq
cmp
jge
inc
sbb
aam
imul
xchg
enter
(bad)
lds
adc
leave
and
push
stc
imul
pusha
jno
scas
or
xor
imul
add
(bad)
mov
inc
add
dec
stos
pop
or
idiv
mov
dec
scas
dec
dec
mov
xchg
out
bound
lahf
clc
lock
lock
adc
cmp
sar
jo
push
or
pop
push
adc
add
mov
sbb
and
frstor
adc
push
jae
sub
adc
inc
adc
inc
sahf
dec
or
or
cmp
inc
or
nop
dec
sahf
mov
xor
adc
inc
adc
dec
leave
and
aaa
adc
sbb
and
push
xor
xchg
and
and
or
and
sub
mov
dec
sub
adc
sbb
jns
inc
dec
xchg
and
push
leave
(bad)
pop
jae
sub
fwait
or
add
or
push
and
inc
scas
bound
fnsave
sub
xor
fbstp
or
sub
sbb
add
adc
nop
cmp
cmps
cmp
adc
add
xchg
inc
dec
leave
push
jo
cmps
cmp
xlat
and
xchg
push
pop
ins
add
outs
sub
add
pop
dec
xchg
dec
jb
dec
dec
dec
aaa
repnz
ja
push
push
push
dec
dec
adc
imul
pop
in
mov
dec
int3
test
or
xchg
xchg
xchg
stos
and
mov
in
add
pop
pop
je
and
je
test
repz
cmps
dec
and
inc
add
dec
jl
sbb
cmp
sbb
cmp
cmp
adc
mov
inc
leave
and
mov
nop
nop
sub
xchg
and
push
inc
xor
popa
sbb
dec
jg
cwde
sbb
jmp
jno
mov
daa
rcl
pushf
dec
push
xchg
cmp
lock
imul
adc
xchg
pop
push
xor
mov
adc
enter
test
jb
sbb
lods
lods
in
add
add
cmp
push
adc
adc
out
neg
jno
and
pop
inc
retf
loopne
lock
and
stos
xchg
mov
dec
hlt
movs
inc
add
add
add
ja
cmp
sbb
adc
(bad)
xor
dec
cld
push
cld
out
mov
inc
mov
inc
add
ja
sbb
or
sbb
xchg
inc
or
not
pop
enter
inc
sbb
cmp
mov
sbb
sbb
sbb
and
and
fs
test
and
push
mov
add
and
push
mov
cmps
mov
xor
lods
dec
sbb
stos
sub
cmp
adc
jb
jp
mov
aas
aaa
dec
daa
or
and
mov
push
adc
nop
inc
sub
sub
ss
or
jo
add
add
mov
push
and
pop
dec
or
mov
xor
push
push
enter
cmp
push
dec
iret
pop
mov
dec
scas
in
push
xor
shl
fidivr
push
pop
adc
push
adc
ss
stos
push
mov
ins
add
pop
fsub
enter
inc
sbb
xchg
in
mov
push
adc
add
xchg
and
or
enter
stos
pop
aas
cmp
sub
pop
movs
out
inc
inc
xchg
dec
jb
mov
cdq
rcl
aam
sbb
jg
dec
dec
jb
mov
inc
jb
inc
push
pop
inc
es
ins
sub
loop
push
mov
sbb
adc
cdq
call
or
das
stos
jg
or
xlat
inc
or
leave
and
mov
loope
or
adc
fcomp
dec
mov
mov
into
mov
push
in
pop
adc
jg
and
pop
pusha
mov
inc
aas
mov
adc
ins
dec
sbb
dec
adc
and
inc
sbb
clc
inc
push
movs
ret
add
jo
mov
int
adc
xor
loop
neg
add
jne
add
sub
push
fild
icebp
xchg
mov
or
ret
add
adc
nop
dec
pop
mov
popa
repnz
or
scas
popa
lock
mov
arpl
loope
rol
mov
mov
sub
fsub
mov
xchg
pop
adc
fld
inc
into
mov
shr
sub
xchg
dec
sahf
xchg
add
add
in
retf
mov
dec
mov
dec
fcom
add
xchg
push
cs
and
and
and
shr
or
dec
in
xor
xor
fdivr
and
xchg
push
es
inc
mov
inc
cld
dec
mov
popa
dec
mov
push
call
and
pop
dec
dec
in
retf
fs
push
mov
ins
fcom
test
sbb
retf
dec
js
xor
xchg
cmp
in
mov
and
nop
test
cwde
fadd
push
pop
push
sbb
(bad)
retf
mov
mov
in
retf
and
fs
call
cs
pusha
mov
mov
les
xchg
xchg
les
addr16
movs
jb
push
ror
aam
fdiv
retf
xchg
fcomp
push
xchg
inc
in
in
pop
push
mov
lock
push
cs
xchg
retf
clc
push
cld
jl
jb
repz
fcom
mov
jo
dec
sub
in
retf
fcomp
mov
dec
clc
and
imul
cs
cs
xor
loopne
adc
xchg
retf
inc
jo
mov
dec
rcl
test
and
and
pop
jb
in
sbb
pop
mov
outs
push
dec
ins
js
stc
fs
jo
add
mov
cmps
adc
std
pop
bound
dec
xchg
test
pop
mov
mov
or
add
jo
int
push
inc
adc
leave
retf
cld
or
adc
ins
xchg
adc
push
mov
mov
cmc
fsubr
sub
or
push
test
and
or
dec
add
test
mov
add
inc
cmp
pop
mov
push
dec
sub
xlat
or
pop
shl
scas
inc
dec
aas
adc
or
add
jb
call
mov
outs
push
fs
dec
inc
push
popa
leave
mov
pop
dec
popa
xor
pop
pop
aaa
arpl
mov
xchg
adc
or
ret
and
pop
leave
or
outs
mov
pop
ror
jmp
cmp
inc
xchg
jbe
xor
push
leave
adc
xor
imul
mov
add
lahf
push
mov
popa
dec
xchg
loope
jnp
mov
push
scas
jbe
or
daa
dec
imul
sub
dec
mov
xor
mov
adc
mov
icebp
sub
sbb
adc
pop
push
or
xchg
and
jg
cmps
scas
pop
leave
add
imul
rcr
(bad)
sbb
push
lahf
sbb
push
(bad)
mov
xor
bound
or
add
inc
imul
outs
outs
jns
pop
pop
push
fs
push
test
ins
fild
rcl
mov
sub
popa
push
add
pop
mov
or
push
movs
push
nop
pusha
cmps
pop
mov
aas
pop
jb
pop
inc
imul
ja
xor
outs
mov
dec
sbb
jb
add
dec
cmps
jg
adc
iret
adc
mov
adc
call
or
ja
and
dec
movs
fist
sub
push
xchg
mov
jl
mov
iret
jae
push
mov
adc
push
out
mov
xchg
aas
mov
and
cmp
aas
or
aas
adc
mov
adc
pusha
leave
ror
pop
adc
xchg
jecxz
retf
xor
or
adc
rcr
mov
aas
cli
jne
pop
push
push
fisubr
push
(bad)
into
add
es
inc
or
fadd
and
adc
mov
cmp
pop
subps
loope
jo
pop
sbb
or
(bad)
sbb
mov
mov
bound
test
(bad)
xchg
xor
pop
mov
or
mov
add
enter
push
push
add
cmps
adc
gs
jne
jecxz
imul
add
dec
call
mov
not
push
cwde
fisub
cmps
dec
push
pop
aaa
or
dec
inc
cmovg
rcl
div
mov
push
inc
adc
adc
scas
adc
jle
pop
pop
or
push
addr16
ds
lea
daa
push
repz
mov
cs
in
cmovg
jb
outs
ins
pop
jb
mov
or
pop
sbb
jbe
mov
rol
or
daa
aam
adc
packuswb
icebp
xchg
mov
imul
cmps
push
cmp
inc
cli
pop
cmps
pop
pop
test
push
mov
stos
es
jae
loop
lahf
or
lock
mov
outs
arpl
push
bndldx
addr16
push
fucomi
lahf
dec
jae
jb
outs
pop
ins
aas
adc
pop
les
leave
or
fbstp
push
bound
or
shr
dec
inc
push
xor
mov
sbb
pop
outs
xlat
inc
in
(bad)
imul
push
lea
adc
clc
jo
out
outs
lahf
jb
je
adc
pop
maxps
mov
mov
dec
adc
inc
ins
rcr
dec
inc
jge
sub
inc
inc
dec
mov
stos
pop
add
out
imul
mov
pop
dec
push
jl
sub
or
mov
pop
dec
add
jmp
cmp
push
and
pop
adc
daa
call
push
push
outs
sar
scas
push
sti
jns
or
sti
fiadd
push
packuswb
cdq
or
aas
bound
mov
aaa
adc
sub
xor
inc
xchg
sbb
pop
push
push
sub
call
scas
jmp
sbb
or
xchg
repnz
cmp
add
jmp
jns
add
pop
dec
dec
ficomp
xor
in
hlt
cs
inc
inc
clc
cld
add
mov
adc
mov
mov
xor
mov
mov
push
mov
mov
je
mov
mov
xchg
pop
mov
mov
movs
or
sbb
sbb
sbb
(bad)
enter
sbb
sbb
fcomp
loopne
sbb
sbb
in
call
sbb
clc
cld
add
sbb
sbb
sbb
adc
sbb
sbb
sbb
and
sub
sbb
sbb
xor
cmp
sbb
sbb
inc
dec
pop
dec
sbb
sbb
pop
pusha
fs
ins
jo
or
push
jb
jno
sar
or
mov
ret
mov
jb
ds
pop
lods
ja
ror
add
arpl
fcom
fsubr
inc
imul
jb
jb
jae
les
lock
sub
cmps
xchg
mov
dec
dec
jbe
add
dec
cld
int
mov
push
dec
jne
je
clc
adc
lods
scas
push
push
pusha
sahf
addr16
les
test
fldenv
adc
mov
fadd
mov
push
test
or
pop
and
add
mov
adc
ins
adc
(bad)
pop
outs
sub
outs
outs
popa
jne
and
mov
or
icebp
inc
je
and
push
or
sbb
and
dec
inc
imul
retf
movs
mov
(bad)
push
rcr
mov
mov
mov
cld
imul
daa
(bad)
ja
inc
and
mov
adc
js
adc
add
aam
sysret
fs
mov
hlt
shr
jo
in
xchg
pop
aaa
lods
pop
cmp
mov
push
and
shl
out
loop
cmc
xor
inc
dec
and
nop
xchg
dec
leave
seta
dec
or
mov
movs
rcr
das
add
test
sbb
dec
cdq
inc
outs
adc
cmp
pop
jo
cmovnp
popa
mov
movs
pop
inc
add
rol
test
mov
fxch
mov
in
adc
imul
cmp
fmul
leave
jmp
add
nop
mov
dec
cmp
cwde
mov
xlat
js
inc
addps
mov
iret
or
xchg
enter
sbb
cmc
sbb
push
scas
mov
cwde
cmovb
mov
lss
mov
das
ja
sub
and
and
adc
and
dec
add
jl
mov
pusha
mov
mov
fadd
cmp
les
int3
(bad)
add
cmps
and
xchg
shl
mov
add
xor
and
int3
pop
inc
sbb
mov
push
inc
pop
mov
mov
push
sub
push
jecxz
mov
jo
movs
and
sub
cmp
arpl
dec
or
cmp
sub
inc
sub
mov
pushf
pop
jb
add
test
cmp
sbb
push
fimul
push
(bad)
inc
add
cmp
pop
push
adc
jns
fadd
movaps
or
inc
pop
call
push
add
dec
ret
or
push
dec
inc
xor
pop
(bad)
xor
pop
sti
add
call
inc
jp
aas
cld
cmp
xor
mov
jmp
mov
mov
xchg
jp
fwait
rol
shl
and
ds
and
repz
add
lock
test
mov
xchg
lock
adc
sub
mov
inc
xor
mov
cmp
pusha
cmp
lock
cmc
sub
jmp
xor
sbb
inc
add
sti
sbb
bound
in
jle
mov
test
or
push
push
aas
or
sbb
pusha
and
pop
jmp
fidivr
aam
je
ds
sbb
jl
push
pushf
in
dec
call
inc
xchg
mov
or
add
pop
dec
das
push
xor
leave
pop
gs
dec
xor
or
movs
shr
sub
jg
add
in
or
xor
xor
fcmovu
push
fmul
enter
push
cmp
cmp
xchg
ja
dec
cmp
jl
push
push
push
in
call
in
inc
push
fmul
pop
int3
and
pop
cmp
jge
add
fld
and
repz
and
dec
aam
out
mov
addr16
pusha
sub
add
pop
adc
pop
push
rcr
dec
aam
ja
and
inc
jmp
dec
and
outs
mov
mov
dec
dec
push
pop
stos
xlat
ds
jle
jns
stos
pop
adc
dec
sub
popa
mov
xor
push
rcr
or
dec
test
addr16
xchg
punpcklwd
push
xchg
clc
jg
jns
leave
xor
mov
pusha
sub
add
jns
stos
(bad)
loopne
push
movs
mov
scas
jnp
sahf
shl
inc
xor
or
jo
and
pushf
cmp
sub
sbb
xchg
push
in
or
jl
jecxz
ror
outs
shr
mov
lahf
hlt
push
sub
dec
sbb
dec
(bad)
ds
cmp
test
pop
outs
retf
sub
push
or
aaa
fidivr
sbb
shr
and
adc
rcr
fsubr
or
shl
daa
xor
cmp
or
or
inc
inc
push
inc
add
xchg
mov
imul
inc
mov
mov
js
rol
mov
jg
adc
arpl
mov
cmps
mov
retf
and
jl
cmp
ins
ja
adc
imul
or
add
outs
inc
pop
bound
pop
pop
pop
add
push
(bad)
shl
mov
imul
inc
mov
repz
std
dec
push
inc
mov
xor
cmp
ret
jno
xor
push
cs
sub
push
mov
add
cld
fnsave
jg
daa
aaa
mov
int
fimul
push
jno
div
push
mov
push
xchg
inc
pushf
mov
fiadd
jnp
xchg
push
call
mov
add
aaa
xor
inc
je
mov
ret
push
(bad)
ss
(bad)
jmp
cmp
sub
shl
loop
push
inc
sbb
inc
pop
jecxz
(bad)
jmp
pop
jmp
ret
mov
or
inc
fcomp
push
mov
xor
mov
aaa
mov
and
push
and
sbb
mov
xchg
cmp
sub
aaa
es
sbb
sub
mov
inc
or
arpl
iret
sbb
dec
mov
mov
test
mov
or
jp
push
mov
mov
div
add
pop
test
mov
push
mov
cwde
pop
push
jns
mov
mov
jnp
xor
ins
or
jmp
pusha
add
jae
stos
ins
fnsave
mov
xor
ret
test
ret
push
js
call
jg
ret
adc
fmul
call
adc
mov
cwde
or
rcr
or
pop
xchg
mov
adc
mov
push
inc
pushf
test
cmp
dec
xor
test
xor
sub
pop
(bad)
in
dec
pop
xor
xchg
out
jo
cwde
pop
adc
leave
(bad)
cmps
test
test
adc
push
lods
in
mov
aam
adc
sbb
mov
arpl
add
pop
sar
pop
or
aaa
es
cmps
and
das
sahf
mov
mov
pop
fistp
jmp
mov
xchg
pusha
js
mov
dec
scas
cmp
dec
and
in
adc
xchg
sbb
pop
inc
xchg
or
adc
dec
xchg
pop
rcl
mov
and
nop
imul
(bad)
mov
xor
das
inc
mov
(bad)
push
add
add
dec
adc
fsubr
adc
scas
hlt
or
push
jo
sti
fs
push
push
pop
lods
clc
addr16
sbb
xor
das
inc
hlt
cmp
ret
cmp
imul
mov
mov
xchg
mov
dec
test
ds
jge
in
in
cld
hlt
cld
add
ins
xor
jo
sbb
cdq
push
jo
mov
daa
mov
dec
add
or
das
push
daa
iret
mov
add
pusha
mov
dec
enter
push
enter
mov
or
add
js
mov
or
or
test
inc
and
dec
or
adc
out
inc
cmp
mov
cmp
xchg
xor
mov
clc
nop
adc
mov
sub
jmp
pop
sahf
pop
or
push
push
jns
dec
loopne
mov
mov
mov
int
cmp
jo
lods
pop
daa
bound
jo
dec
movs
xchg
mov
or
leave
and
jl
jmp
cmp
je
dec
jne
loopne
push
push
dec
fld
adc
(bad)
leave
push
mov
sub
ins
mov
xor
xor
or
std
adc
inc
pop
xchg
adc
lahf
pop
sub
sub
pusha
push
mov
adc
sub
mov
enter
inc
sub
and
or
dec
sbb
and
imul
sub
pop
xchg
cwde
call
fild
push
pop
push
jmp
or
xchg
into
sbb
xor
xor
test
and
xchg
and
push
mov
inc
cmp
xor
jl
(bad)
xchg
dec
inc
les
mov
mov
add
jg
mov
jb
mov
ds
nop
xor
mov
dec
nop
popa
adc
push
aas
lock
add
sbb
adc
mov
and
push
call
sub
call
and
add
sbb
loopne
mov
fs
call
imul
xor
and
mov
call
sub
fcomp
adc
sbb
inc
retf
xor
add
jne
dec
ror
sub
inc
jo
aam
sar
and
aam
aam
imul
rcl
mov
adc
cmp
leave
xchg
enter
movs
xchg
push
add
test
imul
xor
cmps
xor
shl
cmps
imul
jbe
int
enter
pushf
pushf
or
popf
pop
pushf
pushf
adc
or
or
in
lods
add
mov
(bad)
sar
les
xchg
xchg
xchg
jo
int
(bad)
les
cs
nop
nop
nop
js
out
dec
ror
mov
js
mov
mov
rcl
cwde
cwde
adc
in
dec
sar
pop
or
add
in
push
mov
es
cwde
or
data16
xor
push
add
addr16
adc
pop
shl
xlat
es
push
aaa
ins
scas
cwde
sar
mov
inc
cmovge
inc
inc
sar
inc
ins
mov
push
aam
scas
cdq
lahf
dec
daa
push
mov
mov
cmp
cmp
(bad)
adc
mov
inc
pop
jg
mov
fiadd
push
xor
xchg
add
push
cmp
adc
addr16
test
xchg
dec
in
mov
mov
test
popa
jb
imul
inc
in
add
daa
fcomp
es
and
fwait
ror
xor
leave
push
(bad)
xchg
lock
cmp
sub
adc
push
cmp
pop
jl
sbb
ret
cmp
aam
jo
test
mov
cmp
pop
popa
leave
popa
fist
daa
fidiv
adc
out
lods
lods
ret
adc
sbb
or
mov
jl
add
sub
cmps
push
sub
mov
setg
mov
push
mov
dec
bound
or
pusha
bound
(bad)
add
adc
fs
cld
outs
nop
pop
add
mov
sub
pop
ja
add
push
sahf
push
push
jo
adc
add
out
pusha
xlat
pop
inc
or
and
pop
loopne
dec
mov
js
sbb
jmp
sub
xor
inc
cld
pusha
xor
in
push
and
add
inc
cmp
cmp
and
movs
setae
mov
sbb
push
cmp
test
lods
sbb
gs
mov
jnp
mov
xchg
inc
popf
xor
jns
lods
(bad)
add
imul
pop
aaa
xor
ss
cmps
shl
dec
and
or
test
sub
mov
sbb
or
xchg
in
inc
sub
ins
loop
call
and
stc
adc
pop
or
push
dec
jns
shl
inc
(bad)
loop
xchg
inc
and
dec
mov
xor
or
cmp
and
sub
ficom
adc
in
dec
dec
cmp
out
sbb
inc
mov
je
inc
dec
dec
inc
xchg
and
and
cld
or
xor
fs
and
sbb
add
cmp
stc
int
and
repz
movs
jo
push
add
mov
ret
mov
or
and
lods
cmc
mov
push
call
dec
aaa
cwde
sahf
xchg
rol
call
fld
cmp
and
or
inc
or
mov
push
sub
daa
xor
inc
xchg
mov
fs
mov
mov
mov
lods
es
nop
aaa
in
bound
adc
push
test
sbb
imul
out
and
shl
fcom
shl
dec
and
pop
inc
sub
inc
outs
inc
push
push
repnz
ret
sbb
mov
pop
xchg
jo
pop
cmp
cld
pop
adc
dec
push
dec
movs
push
adc
out
test
sar
cmp
add
loopne
test
or
js
rcr
mov
fwait
adc
cmp
imul
inc
add
cmps
jnp
adc
nop
push
add
jge
add
addr16
push
add
sar
test
fld
mov
mov
sub
sbb
add
add
rcr
mov
cli
cmp
(bad)
rol
adc
loope
fimul
repz
pusha
loop
or
fadd
push
dec
add
dec
push
shl
or
add
daa
aas
imul
out
add
push
in
add
adc
inc
or
mov
js
lock
push
pusha
xor
je
loopne
mov
jmp
std
fcom
js
push
std
sbb
adc
shr
jne
push
jle
sbb
adc
push
adc
sub
call
add
or
adc
push
or
mov
and
out
mov
dec
enter
dec
push
call
add
loope
or
inc
xchg
and
and
jmp
lods
mov
jo
and
push
fstp
mov
or
test
or
imul
adc
jb
add
or
(bad)
and
jae
pop
psubsb
sbb
sub
mov
pop
add
stos
sub
xor
xchg
xor
bound
mov
ror
es
idiv
retf
jae
jg
cmp
push
ficom
dec
pop
ret
cmp
mov
pop
adc
ds
ror
lods
retf
jnp
sbb
and
pop
mov
push
push
rcl
dec
cmps
and
je
mov
fdivr
ret
or
ss
mov
dec
jmp
and
test
jle
mov
(bad)
xchg
xchg
pushf
mov
push
movs
inc
and
inc
push
add
jl
test
sub
lea
inc
inc
ins
(bad)
mov
jo
adc
dec
or
mov
lods
cmp
pop
sub
loope
cdq
and
dec
mov
cmp
das
or
dec
inc
lea
das
ret
mov
pop
ret
daa
ss
dec
push
test
jno
(bad)
jo
push
scas
add
scas
fldenv
mov
sbb
adc
cmps
fs
popf
xchg
lock
ficom
rol
icebp
dec
mov
daa
clc
ret
movs
in
sub
mov
cld
or
pop
sahf
sbb
aam
jecxz
repnz
adc
cld
xor
push
inc
rol
outs
clc
xchg
inc
push
add
xor
sbb
adc
sbb
in
cwde
test
mov
dec
ja
push
aad
push
jb
ret
pmuludq
xor
cli
mov
add
mov
and
or
inc
es
pushf
test
sbb
std
sbb
xchg
add
inc
mov
and
pop
fiadd
dec
sub
aam
xlat
sbb
or
mov
inc
sub
cmp
sub
and
xor
retf
clc
outs
mov
cmp
xchg
fwait
cld
aas
ins
test
fiadd
rol
inc
adc
test
inc
mov
ja
shr
(bad)
jne
inc
clc
xor
sbb
jmp
sub
and
or
pusha
xchg
nop
jae
add
dec
(bad)
or
popa
push
dec
push
jae
dec
dec
scas
test
add
or
xchg
fs
adc
xor
cli
xchg
icebp
cmps
fs
call
xor
add
out
test
aas
popa
push
fimul
cmp
push
cmp
add
mov
je
imul
or
(bad)
mov
int3
xor
add
mov
push
ds
fadd
je
jge
(bad)
xchg
ss
mov
in
stos
aaa
push
enter
stos
push
stos
and
pusha
(bad)
data16
add
xchg
xor
adc
imul
inc
data16
ss
shl
clc
add
fwait
mov
cmps
stos
cld
dec
add
jge
or
ret
mov
lock
lods
dec
add
das
mov
sub
sub
add
inc
or
push
dec
push
inc
aaa
or
test
scas
or
lock
sbb
imul
add
xlat
inc
aaa
movs
or
pushf
or
mov
test
jmp
dec
fcom
mov
inc
dec
cmp
sub
xchg
mov
or
mov
and
mov
xlat
sub
loopne
adc
mov
mov
dec
and
push
inc
(bad)
mov
scas
(bad)
mov
cdq
data16
and
call
call
loopne
jle
pop
pop
xchg
add
clc
iret
ss
movs
xchg
and
cmps
cwde
cdq
jne
mov
push
sub
and
mov
jo
lea
inc
add
mov
rol
mov
sub
pop
push
push
or
in
pusha
test
add
scas
aas
daa
and
pop
mov
and
push
or
push
jo
outs
adc
or
adc
or
xchg
or
ins
and
sbb
mov
pop
inc
adc
aaa
and
cmps
neg
push
test
adc
(bad)
sub
fistp
(bad)
mov
add
mov
xchg
adc
ret
xlat
lea
jmp
pop
pop
or
loop
inc
lods
es
inc
test
shl
mov
lods
or
fldenv
cmp
xor
sbb
and
in
jne
push
push
xor
or
sbb
mov
inc
arpl
dec
stos
or
outs
sbb
outs
mov
and
inc
or
mov
xor
push
in
or
inc
sub
test
add
add
cs
fadd
fidiv
movs
fwait
pop
cmps
and
scas
stos
fldenv
js
mov
ficom
retf
or
xor
cdq
test
push
xchg
mov
push
ret
xor
rol
or
bound
bound
inc
lahf
cwde
mov
push
push
jb
mov
les
jb
stos
mov
in
adc
add
and
add
cmps
jp
test
and
test
adc
and
nop
inc
lods
test
or
int3
jecxz
in
push
iret
sar
fldcw
mov
cmp
cmp
adc
(bad)
jmp
or
(bad)
push
sbb
mov
add
sub
sbb
and
outs
add
sub
aaa
mov
mov
push
je
dec
add
es
cmps
lea
mov
inc
add
cmps
mov
inc
add
inc
sbb
(bad)
inc
test
add
sbb
scas
and
sbb
ins
aaa
lock
jae
xlat
clc
and
sub
and
out
mov
fidiv
mov
jns
mov
push
ficomp
pop
pop
inc
xchg
lods
mov
jmp
fwait
or
fstp
or
pusha
inc
inc
cwde
mov
mov
bound
cwde
ret
and
sub
loop
sbb
mov
or
push
cmp
inc
inc
imul
pop
inc
pop
xchg
inc
adc
and
cmovno
pop
hlt
adc
cmp
aad
rcr
dec
jns
jge
add
je
push
int3
stos
popa
xor
mov
inc
cmp
mov
hlt
xor
loopne
mov
and
jne
imul
pushf
cmp
loopne
lea
mov
das
inc
inc
push
dec
dec
push
bound
sbb
outs
push
sbb
push
movs
nop
push
sbb
adc
mov
xor
(bad)
stos
ins
adc
in
mov
nop
jo
and
sbb
std
js
sti
inc
or
xor
sbb
push
mov
xor
push
pop
push
cdq
sbb
push
inc
clc
and
jmp
mov
xchg
test
je
mov
int3
sti
cmp
dec
sub
and
sbb
lock
(bad)
mov
add
add
sub
and
rol
or
ss
cmp
lods
or
iret
setnp
int
xchg
xchg
or
add
mov
pop
loop
jb
push
lock
inc
call
push
js
mov
inc
adc
and
(bad)
jle
repnz
repz
pop
and
sub
mov
mov
xor
loope
jb
adc
push
mov
mov
in
jbe
cmp
cli
sbb
or
mov
mov
cdq
mov
inc
sti
shl
lock
add
pusha
mov
test
pop
ffree
pop
in
mov
ret
jecxz
and
xchg
xor
shl
adc
(bad)
inc
test
jno
or
mov
add
stos
push
jge
imul
mov
clc
push
or
rcr
pop
inc
add
fidiv
jbe
in
pop
add
push
shl
cld
lahf
aam
add
mov
arpl
mov
mov
mov
test
fild
add
repnz
mov
popa
xchg
mov
rcl
cdq
xor
xor
ror
scas
xchg
loopne
es
or
clc
pop
mov
fadd
sbb
adc
in
dec
sbb
mov
push
adc
add
and
ins
jg
aas
mov
lock
or
movs
xor
and
add
enter
icebp
dec
inc
aam
adc
and
out
push
mov
daa
sbb
mov
xchg
xor
fst
les
das
movs
int3
gs
xlat
retf
enter
shl
push
or
xlat
push
mov
and
or
and
cs
test
fld
test
shr
loope
dec
cld
sub
xchg
cli
mov
faddp
jp
mov
scas
or
lock
sbb
pop
fsubr
and
in
adc
cmps
xchg
mov
rcl
pop
or
cmp
call
fild
leave
adc
jmp
call
sub
adc
or
sti
and
and
xor
jg
leave
ret
or
stos
cmp
mul
lock
add
push
and
je
jns
push
dec
or
mov
xchg
dec
and
mov
jno
mov
jns
popa
sbb
nop
stos
aaa
add
movs
or
cdq
add
pop
pop
les
and
cmp
and
jbe
das
add
jns
add
leave
mov
std
push
ja
push
pop
test
pusha
push
in
pushf
jno
inc
pop
cld
movs
lods
dec
repnz
add
add
ret
popf
dec
sub
inc
or
(bad)
mov
movs
test
fs
and
and
cdq
add
popw
ins
lea
xor
push
fisub
test
pop
adc
cmps
add
push
loopne
(bad)
dec
add
cmps
movs
jae
push
dec
jae
ror
sbb
in
call
cmc
dec
adc
shr
push
sub
call
aam
shr
js
push
push
or
push
and
lock
adc
and
dec
loopne
or
stos
mov
or
inc
sbb
dec
sub
push
mov
push
addr16
xor
fsub
adc
adc
rol
jmp
xor
jle
xor
inc
cmp
mov
sbb
or
int3
fcom
test
in
push
test
rol
cmp
sbb
and
mov
push
inc
mov
adc
std
push
retf
mov
cmp
je
push
fild
push
xchg
aad
std
nop
push
les
out
mov
das
pop
dec
mov
and
inc
add
or
loope
cmp
inc
dec
in
sahf
nop
sub
les
push
add
pop
(bad)
call
repz
inc
cli
or
and
ret
sbb
div
iret
ror
sbb
in
jl
sub
jae
jo
or
ds
test
inc
rcr
pop
and
xor
ror
not
adc
adc
or
ja
test
pop
fcom
aam
adc
and
pop
inc
icebp
fcomi
dec
add
addr16
cmp
xchg
test
test
ror
sahf
mov
jge
pop
outs
popa
mov
mov
mov
sub
sbb
cmp
jne
mov
mov
mov
jmp
inc
adc
les
lods
dec
sbb
adc
iret
or
mov
push
inc
movs
test
push
sbb
push
cmp
ds
or
loop
rol
dec
lea
jne
jmp
mov
or
jns
mov
addr16
xlat
dec
retf
addr16
adc
test
and
or
jnp
inc
add
rcr
lock
mov
test
or
push
push
in
cmps
daa
mov
jp
add
cwde
mov
in
pop
sbb
scas
call
jmp
add
shl
sub
mov
sub
xor
push
sbb
dec
jecxz
sub
(bad)
in
scas
or
push
(bad)
mov
cmps
sbb
xlat
ins
sbb
sbb
and
mov
sub
inc
jmp
cmp
inc
mov
cmps
in
dec
shr
cmp
shl
bound
jle
add
jl
xor
dec
pusha
aam
into
pop
add
jnp
inc
jbe
arpl
xor
or
push
pop
sbb
sbb
jno
loop
and
mov
outs
and
inc
add
movs
or
les
add
push
mov
adc
add
pop
mov
aaa
dec
pop
adc
push
inc
and
sbb
jmp
rcl
add
sar
or
inc
repz
rol
and
or
inc
outs
or
aad
jg
pop
jp
mov
push
jmp
push
ret
mov
sub
rol
stos
shl
inc
sbb
adc
call
pop
or
shl
xor
cmp
fdivp
pusha
dec
push
xor
pop
loopne
cmp
je
cmp
jb
cmp
ja
(bad)
mov
push
je
push
or
or
mov
and
mov
push
inc
dec
jne
mov
test
ds
push
or
enter
cmp
sub
mov
shl
fisub
add
or
or
adc
push
push
xchg
mov
cmp
(bad)
mov
push
push
cmp
rol
mov
bound
xlat
mov
fisub
jae
aas
sbb
rcl
sbb
and
adc
inc
add
call
(bad)
fs
and
inc
int3
pop
push
stc
outs
dec
repz
mov
mul
jecxz
outs
(bad)
pop
fisttp
push
fild
loope
dec
mov
(bad)
loope
daa
sbb
sbb
fmul
and
imul
mov
xchg
std
bound
dec
mov
inc
leave
(bad)
adc
mov
mov
jnp
and
jle
jae
adc
mov
aam
jge
test
fsubr
inc
mov
ret
sbb
add
movs
jge
lahf
inc
into
or
int
dec
(bad)
leave
ret
add
or
outs
dec
jle
aam
pop
adc
cmp
xchg
adc
xchg
adc
mov
fs
not
imul
and
sub
add
dec
outs
add
(bad)
or
or
push
or
mov
adc
push
adc
mov
mov
enter
adc
or
gs
or
out
into
mov
sbb
jns
sbb
push
into
div
push
adc
or
sbb
sbb
mov
mov
jae
clc
mov
pop
sub
xchg
pop
into
cmp
aas
push
add
mov
leave
ror
dec
xor
imul
bound
sbb
push
cs
push
ja
or
fmul
add
sub
push
or
fwait
pop
aas
dec
pushf
xor
pushf
sbb
pop
sahf
pop
mov
xchg
or
mov
add
cmp
xor
mov
adc
jne
adc
out
test
test
mov
loop
sbb
sub
ds
fcmovne
dec
jae
es
adc
adc
inc
mov
and
test
mov
adc
xchg
adc
or
jne
or
pop
jnp
mov
sub
je
rcl
aaa
je
aaa
adc
shl
pop
aad
sahf
test
mov
or
inc
push
mov
push
test
cmps
dec
loope
ret
xchg
or
jno
repz
cmp
ins
fsubr
fs
cmp
xlat
cmp
sbb
jl
aam
fnstsw
cmp
pop
jne
and
fldcw
js
sub
ss
addr16
stos
call
jo
push
outs
(bad)
push
sub
pop
call
cwde
nop
out
pushf
cwde
fcomp
push
iret
div
push
enter
enter
int
or
mov
jo
sub
dec
ins
cmp
and
adc
mov
push
xor
inc
loop
sbb
jnp
ins
loope
jne
sbb
cmps
xor
push
fisub
pop
sbb
mov
jp
cmp
adc
xchg
std
dec
xchg
and
push
(bad)
add
sub
pop
pop
cmp
mov
dec
and
nop
in
sbb
inc
or
dec
add
inc
mov
inc
fs
retf
jae
jl
dec
fstp
push
push
mov
add
out
sti
test
sub
cs
adc
call
rcl
gs
push
icebp
outs
or
imul
pop
push
imul
gs
xor
mov
pop
inc
cmp
adc
jae
add
in
ins
inc
or
inc
outs
sbb
xor
add
mov
mov
xchg
dec
add
adc
add
lea
lea
dec
sub
mov
arpl
pmuludq
aad
leave
and
lahf
cli
aad
nop
or
fld
mov
into
in
inc
push
shl
std
or
lock
icebp
and
fadd
fdivr
ror
sbb
and
les
adc
sbb
ret
loop
retfw
sbb
sbb
xor
ret
cmp
jmp
xchg
call
xchg
mov
or
xchg
out
(bad)
call
inc
and
sbb
enter
mov
add
movs
pop
stos
fwait
mov
and
sbb
daa
push
xchg
push
add
mov
shl
loopne
daa
or
and
mov
cmp
mov
cmps
mov
lahf
and
addr16
adc
or
and
out
dec
dec
mov
sub
test
and
or
mov
adc
inc
and
sti
(bad)
ins
movntps
xlat
inc
push
jbe
add
sbb
inc
in
fs
fs
xchg
push
xor
jbe
enter
dec
in
jmp
in
xor
inc
mov
dec
and
addr16
setg
or
in
sbb
es
adc
sbb
test
lock
mov
and
xor
xor
sbb
rol
sbb
cmp
xchg
and
sar
leave
mov
ss
mov
hlt
fs
dec
es
in
in
inc
dec
es
lock
call
and
popf
pop
pop
ss
sbb
call
(bad)
(bad)
inc
xchg
ret
in
sbb
xor
sar
adc
call
push
pop
clc
ret
int3
sbb
jne
mov
stc
rol
push
jp
mov
inc
push
ja
cmp
xchg
add
(bad)
enter
cli
es
in
shr
jecxz
in
inc
inc
and
(bad)
shl
mov
pop
ret
push
lods
dec
adc
test
mov
pushf
push
movs
lods
xor
dec
clc
das
pop
(bad)
je
inc
xchg
and
mov
xchg
sbb
mov
fimul
int
fild
and
ret
int
or
(bad)
fild
clc
out
mov
xor
in
or
popa
xor
add
jg
imul
jae
cmp
jbe
push
in
mov
call
jae
lea
ret
aad
fimul
dec
or
outs
and
int
jmp
ds
cmp
int3
push
call
jb
and
and
or
inc
pusha
jae
fild
mov
add
xor
cmp
shl
inc
mov
aaa
mov
jge
add
mov
inc
mov
ret
adc
push
out
dec
push
mov
shl
and
add
adc
test
or
es
lea
jbe
add
and
and
cmp
inc
ja
or
(bad)
je
es
jb
or
xchg
xor
(bad)
js
push
fsubr
xor
xor
and
xor
data16
pop
(bad)
(bad)
stc
shl
shr
or
add
jp
outs
jle
fild
(bad)
call
and
xor
(bad)
mov
or
call
cld
or
add
mov
or
jo
mov
dec
scas
xchg
jmp
test
clc
mov
or
xlat
mov
out
into
mov
and
sti
in
int
push
shr
or
add
mov
adc
scas
(bad)
cmc
add
fwait
adc
outs
push
xchg
aaa
adc
test
add
or
and
cwde
sub
mov
inc
mov
repnz
pop
(bad)
jmp
xlat
pop
mov
and
nop
imul
leave
fwait
xor
jno
std
cmp
push
xchg
cmps
cmp
or
add
bound
mov
pop
add
inc
rcl
or
adc
repnz
jmp
dec
pop
retf
(bad)
es
adc
stos
(bad)
mov
xor
dec
adc
push
xchg
aaa
pop
adc
(bad)
sub
inc
add
or
cmp
out
fadd
add
sti
shl
pop
and
push
xchg
aaa
out
loope
cmp
pop
aaa
ret
dec
fimul
or
or
mov
pop
inc
xor
data16
jmp
mov
int
sbb
add
stc
inc
repnz
inc
mov
inc
cmp
inc
add
sbb
(bad)
adc
jno
ins
or
jle
adc
imul
or
cmp
in
jle
jae
gs
or
movs
and
or
adc
inc
fimul
dec
mov
test
(bad)
jle
sub
or
daa
mov
xor
in
adc
add
cmp
aam
adc
sub
push
in
(bad)
fwait
sub
int
clc
jl
pop
or
aaa
outs
inc
enter
ds
and
hlt
not
or
int
add
add
jmp
inc
inc
nop
cld
xchg
xchg
jmp
push
cmps
and
inc
adc
movups
mov
inc
out
cmps
add
adc
adc
in
inc
rcr
or
int3
or
add
fwait
sub
add
push
xchg
aaa
rcr
test
dec
jle
outs
dec
fimul
cmp
out
(bad)
xor
inc
add
jns
adc
dec
adc
in
inc
sub
repnz
or
push
ret
(bad)
xchg
rol
and
outs
xlat
add
adc
loop
rcl
and
add
or
or
inc
or
gs
mov
test
movs
and
push
jle
ins
mov
retf
(bad)
cmps
add
daa
retf
mov
pop
ror
(bad)
hlt
mov
sbb
push
ret
adc
cmp
sub
or
add
hlt
adc
xchg
dec
and
ins
sub
sbb
in
fwait
pop
or
add
(bad)
fadd
jns
ins
or
out
dec
dec
int
rol
pop
adc
push
aaa
ja
xor
add
lea
sub
pop
je
or
fistp
arpl
ret
adc
aaa
adc
pop
push
xchg
das
call
cmp
test
ret
mov
out
jno
mov
inc
add
je
sub
add
xor
leave
ret
inc
pop
(bad)
jne
(bad)
stc
mov
sbb
and
jl
aaa
inc
pop
jne
jmp
aaa
adc
repz
js
jge
dec
dec
and
xor
test
scas
cmp
add
adc
mov
dec
sbb
retf
inc
sbb
mov
or
fdivr
fwait
sub
jle
mov
mov
sub
test
call
cmps
nop
(bad)
psubsw
add
xor
sub
and
test
jg
pop
lock
test
or
xchg
jle
or
aam
xor
jnp
add
dec
add
jle
mov
jmp
das
bound
cwde
adc
push
add
(bad)
std
fwait
and
sti
bound
fdiv
jge
aaa
retf
cs
add
popa
loop
jg
jns
movs
fwait
cmp
dec
cld
mov
clc
jecxz
cli
lock
cmp
jl
mov
cs
cmp
add
cwde
(bad)
inc
dec
fmul
lock
ret
iret
xor
inc
push
inc
jmp
cmc
dec
adc
push
ja
lds
xchg
ror
cmp
lahf
dec
leave
or
addr16
call
test
js
dec
ss
loope
adc
sbb
(bad)
xchg
jg
nop
cmp
ret
lods
add
cmp
adc
in
movs
ins
in
lock
jge
je
dec
rol
add
fcmovnb
loope
sbb
jne
lods
add
push
sbb
je
daa
or
es
(bad)
jnp
and
fadd
in
test
sub
add
nop
jo
js
push
and
xchg
or
push
sbb
or
dec
push
xchg
hlt
jo
cmp
xlat
jge
sbb
mov
xchg
push
fidiv
pop
mov
mov
mov
push
mov
mov
add
and
mov
sub
push
and
movs
and
shl
add
or
jl
jo
push
fsubr
inc
add
fst
sbb
sbb
or
dec
sbb
mov
dec
cmp
retf
xchg
cmc
jmp
sbb
(bad)
sub
(bad)
hlt
jmp
iretw
daa
mov
adc
cmps
cs
jb
test
daa
lods
test
xor
test
stc
ret
or
and
enter
inc
fwait
xlat
and
in
push
je
and
out
jmp
(bad)
cmp
or
mov
and
addr16
mov
adc
stos
or
(bad)
jmp
pop
sbb
inc
add
pusha
push
arpl
or
xchg
cmp
sbb
mov
mov
dec
iret
and
(bad)
and
mov
fisttp
lea
mov
lods
out
cmps
popf
xchg
int3
stos
sub
stos
out
push
loopne
popa
pushf
mov
cmp
cmp
(bad)
jg
sbb
jo
ret
clc
inc
sub
dec
or
jo
lock
popa
rcl
pop
aaa
out
icebp
sbb
and
or
xor
scas
xchg
cs
mov
adc
ror
nop
xchg
sbb
dec
movs
retf
xor
push
hlt
std
in
mov
jl
mov
fwait
aam
(bad)
jo
call
push
mov
stc
and
xor
call
mov
test
xor
cwde
repnz
inc
fs
pop
adc
jmp
sub
cli
(bad)
push
sub
idiv
pop
(bad)
cmp
or
je
or
push
retf
js
jnp
dec
cmp
mov
dec
jmp
bound
jno
nop
jge
add
and
and
retf
mov
repz
dec
inc
repz
sub
xchg
pop
fisubr
sub
mov
pop
mov
or
and
mov
jge
xor
inc
fwait
or
xchg
lock
add
add
imul
sar
dec
shl
adc
mov
add
imul
mov
je
scas
dec
inc
push
adc
add
add
shr
data16
mov
daa
pop
mov
pop
ds
jg
pusha
dec
lds
jmp
jmp
fwait
in
(bad)
repz
ja
cmc
ins
sbb
dec
stos
or
fidivr
add
aam
hlt
pop
mov
bound
das
pop
cmp
xor
mov
pop
push
add
and
dec
or
push
cmc
cli
es
ror
in
sub
push
or
adc
add
mov
hlt
xchg
mov
push
(bad)
sub
xor
mov
(bad)
(bad)
cmc
sar
and
clc
push
in
fmul
push
jno
mov
cs
aaa
test
sbb
int3
pop
ds
icebp
add
int3
ins
sub
xchg
xchg
add
aad
mov
mov
mov
add
xchg
mov
pop
jl
xchg
in
fild
or
inc
ss
push
pop
test
(bad)
das
xor
dec
(bad)
(bad)
and
ret
xor
ja
cmp
mov
dec
fiadd
pop
sbb
dec
in
xor
stos
adc
call
out
aaa
sub
mov
jge
cmc
jns
pop
lea
movs
mov
rol
mov
cdq
out
inc
jp
ret
or
test
xor
iret
loope
adc
packsswb
in
or
and
xchg
inc
pmulhw
loope
pop
add
into
(bad)
clc
push
mov
nop
das
jle
fbld
addr16
dec
ins
gs
test
rcr
add
push
add
fimul
ret
sub
cli
dec
add
push
adc
xor
aam
mov
pop
cmps
or
push
xor
or
retf
arpl
xor
pop
jo
ins
ja
add
add
inc
mov
inc
and
out
jg
lfs
sbb
ins
fild
jmp
dec
addr16
or
call
dec
fadd
mov
ins
adc
lods
pop
jne
xor
inc
xor
or
fild
adc
rol
nop
cld
push
mov
(bad)
out
and
sub
and
ss
ds
push
clc
stos
call
add
add
xchg
add
icebp
push
push
mov
pop
pop
inc
xchg
adc
js
mov
ja
js
addr16
push
adc
add
and
push
cmp
or
push
test
xchg
ins
jno
fild
sbb
sub
enter
push
inc
push
loopne
xchg
cld
xchg
sar
test
shl
(bad)
popf
shl
cmp
cmp
mov
jmp
add
adc
xchg
inc
cmp
dec
xchg
pcmpeqb
rcl
pusha
in
pop
dec
cmp
sub
add
push
mov
cmp
test
jnp
pop
inc
fiadd
xchg
jne
sub
mov
jge
imul
or
fistp
fst
jo
fadd
pop
sub
adc
hlt
or
mov
and
jae
fldcw
call
adc
and
mov
fucomp
mov
or
sub
stos
fcmovb
add
out
add
adc
push
dec
fild
xchg
mov
inc
jbe
sbb
mov
sti
and
cmps
and
sbb
icebp
or
inc
fsubr
ror
std
adc
mov
xchg
hlt
lock
mov
mov
std
dec
dec
pop
test
sub
push
std
or
xchg
mov
sub
dec
add
mov
xor
ja
mov
outs
push
push
sub
stc
nop
out
add
adc
cli
or
push
outs
mov
xchg
aas
fld
inc
or
mov
(bad)
out
cmp
adc
push
xor
dec
repz
es
push
pusha
nop
rol
imul
loopne
add
mov
jmp
cmc
dec
(bad)
sub
mov
cmps
pusha
inc
mov
add
inc
int3
inc
xchg
pop
into
test
mov
ret
dec
hlt
add
es
sbb
shr
hlt
mov
push
push
outs
cld
add
add
inc
dec
mov
pop
aad
mov
movs
add
dec
cmp
xchg
add
and
push
inc
ja
out
aam
inc
mov
add
test
rol
xchg
test
dec
rol
leave
add
sub
sub
add
frstor
lahf
or
cmp
cmps
in
add
jmp
adc
ret
add
mov
jo
retf
ret
or
nop
and
dec
(bad)
pop
test
dec
pusha
std
imul
cmp
pop
xchg
mov
push
inc
sbb
in
push
sub
les
jp
test
cwde
pop
or
cmps
push
nop
aaa
xchg
inc
mov
imul
mov
mov
sub
add
add
f2xm1
ja
ins
je
xchg
mov
fmul
test
ss
jo
sbb
jnp
mov
sub
jo
xlat
sbb
inc
(bad)
addr16
imul
dec
jne
xor
pop
out
call
mov
aaa
rcr
add
ds
or
jb
enter
retf
sbb
ja
ror
fadd
xor
pusha
fmul
and
mov
jno
sbb
les
pop
aas
push
fild
push
iret
test
imul
inc
push
and
pop
mov
add
fadd
dec
loopne
repnz
test
add
outs
test
leave
jne
fdiv
pop
lock
ret
push
mov
and
rcr
cmc
and
lods
pop
inc
add
pop
clc
inc
jb
imul
and
pop
dec
sub
sbb
add
add
out
movs
and
in
xor
nop
inc
adc
lods
loope
push
add
dec
lods
jne
sbb
mov
xchg
or
push
fstp
pop
pop
push
sbb
sbb
mov
call
adc
fbstp
add
xchg
shl
stos
aad
nop
outs
add
dec
push
stc
pop
cmp
push
and
add
(bad)
xchg
or
nop
add
jl
popa
outs
mov
sub
rcr
adc
jb
lods
icebp
xor
add
mov
addr16
jle
or
pop
or
or
jo
imul
push
inc
push
push
or
bswap
xor
push
adc
(bad)
xchg
xchg
addr16
jo
lods
aaa
add
test
sahf
sub
jbe
psubw
sbb
iret
pop
js
or
jle
stc
xchg
xlat
add
xchg
dec
lods
nop
dec
xchg
jns
das
jo
dec
mov
and
xlat
sbb
jmp
add
sub
(bad)
in
dec
or
in
add
adc
xor
sub
or
ins
jl
mov
outs
imul
jl
enter
jle
aam
dec
scas
cmp
jne
out
sbb
cmp
nop
sbb
pusha
test
pop
sar
add
hlt
fldcw
push
push
pop
pop
test
jb
lahf
ins
inc
pop
or
dec
xor
ror
add
add
inc
jne
aas
sub
mov
(bad)
pop
mov
mov
rol
stos
jl
add
pop
mov
je
(bad)
nop
bound
std
lock
mov
cmp
pop
and
popa
leave
mov
mov
mov
sub
xchg
push
test
aaa
adc
je
add
retf
pop
or
pop
cs
repnz
mov
mov
test
fs
mov
cmovbe
fbstp
xor
dec
int
pop
pop
into
xchg
idiv
xor
sub
(bad)
and
popf
pop
inc
sbb
sar
movs
inc
push
cmp
fcomp
loopne
pop
and
clc
and
leave
mov
push
enter
movs
xchg
ror
fs
xlat
push
es
in
ret
enter
or
hlt
pop
and
or
xchg
lock
ret
std
cmp
and
sbb
jne
sub
push
add
and
arpl
ret
(bad)
cmps
jne
push
jmp
push
fidiv
pop
xchg
mov
mov
pusha
test
adc
xor
inc
jp
aas
or
loop
mov
lds
xchg
mov
imul
add
pop
cs
lods
push
or
imul
outs
or
mov
in
shr
add
xchg
je
lahf
sub
dec
shl
adc
mov
shl
or
cwde
test
mov
call
movs
mov
jmp
inc
or
or
jmp
and
int
inc
jnp
test
lock
cld
(bad)
mov
data16
or
dec
push
idiv
(bad)
push
test
lea
out
in
xor
jne
or
add
cdq
jl
(bad)
adc
aaa
pop
mov
imul
sub
fnsave
adc
je
out
or
nop
add
shr
mov
inc
push
sti
adc
jo
adc
mov
push
sub
xchg
out
mov
jge
add
push
xchg
add
adc
int3
xor
leave
push
and
mov
loopne
into
fdiv
in
sbb
pushf
mov
popf
dec
push
test
rcl
xchg
xlat
dec
jmp
mov
fcomp
sbb
jmp
ins
mov
mov
stc
movs
nop
nop
push
xor
and
je
push
sbb
mov
inc
dec
sbb
xchg
add
(bad)
aaa
in
test
sbb
push
add
and
pop
pop
dec
sbb
enter
mov
jmp
push
mov
mov
arpl
movs
sbb
xchg
xchg
add
xchg
adc
pop
shl
loope
xor
sub
pop
and
bound
repz
int
mov
sub
(bad)
rol
fwait
gs
fcom
push
adc
dec
add
cs
pop
inc
pop
movs
and
adc
adc
adc
push
and
jg
xor
call
punpckhwd
mov
adc
add
rcr
icebp
ficomp
adc
out
sahf
dec
call
xor
adc
jge
mov
movs
and
dec
adc
inc
test
pop
lock
je
mov
lods
adc
pop
and
je
mov
inc
jge
adc
and
pop
call
xchg
mov
add
(bad)
push
push
push
xor
push
scas
sbb
adc
addr16
pop
pop
ret
daa
sub
(bad)
repnz
adc
and
fsub
leave
adc
mov
dec
or
nop
xchg
jl
and
or
fdiv
fwait
movs
push
sbb
dec
fwait
adc
push
lock
or
in
push
hlt
push
loopne
xchg
xor
push
inc
pop
(bad)
add
pusha
and
mov
add
pop
(bad)
sti
add
and
mov
xor
cmps
sar
test
out
loop
or
mov
sbb
je
out
shr
xchg
movs
rol
(bad)
add
ror
mov
ins
jae
jbe
push
add
mov
bts
push
pop
or
ret
mov
or
ret
sub
push
mov
je
dec
or
adc
inc
les
adc
add
adc
cmp
imul
sbb
mov
push
push
and
push
inc
inc
cli
aam
les
out
push
mov
ins
lods
inc
mov
call
xlat
jns
adc
dec
xchg
popa
add
dec
pop
lods
cmps
pop
out
jmp
lahf
jo
mov
push
and
and
es
add
rol
inc
repnz
jl
push
ss
dec
xchg
jmp
push
push
dec
sbb
test
pop
add
sbb
pop
mov
xchg
rol
add
shufps
sub
xor
jg
adc
std
call
xor
test
cli
or
and
xchg
cli
cld
pop
ins
ss
in
mov
xor
xor
test
or
adc
fistp
inc
sbb
mov
and
and
out
mov
cmps
and
mov
dec
cmp
xor
sub
fsub
sub
ror
mov
setge
or
imul
shrd
or
dec
inc
pop
ins
add
cmp
test
push
xor
ror
add
push
cmps
dec
dec
cmc
out
sbb
or
retw
adc
mov
or
jg
push
adc
aad
and
or
mov
add
cli
or
(bad)
cmc
cli
movs
aam
add
sbb
push
cmps
add
nop
inc
or
lahf
dec
xor
in
stos
add
adc
add
dec
fsub
add
inc
rcr
pop
leave
sub
sbb
shl
or
add
ss
stos
or
mov
(bad)
cwde
inc
pop
add
inc
and
lds
dec
cs
add
push
outs
mov
jmp
js
or
scas
sbb
shl
(bad)
cmps
jbe
out
add
xor
xlat
jb
add
cdq
pop
dec
das
jecxz
or
push
dec
cmp
neg
mov
sbb
push
jo
add
dec
or
mov
ja
jo
js
test
add
push
test
or
movlps
fisttp
adc
jmp
pusha
popa
(bad)
nop
fadd
sub
sbb
xchg
push
imul
jo
mov
cld
mov
icebp
inc
mov
shl
push
add
adc
mov
or
pop
loopne
pop
ss
pop
adc
stc
adc
pop
mov
js
mov
clc
xchg
rcr
dec
shl
lods
fs
mul
or
pop
inc
add
mov
sbb
enter
bound
add
or
adc
pushf
push
mov
cmp
out
add
cli
bound
pop
mov
xchg
shr
add
mov
pop
dec
and
mov
outs
gs
nop
cmps
xchg
pop
push
and
push
inc
loopne
adc
dec
cmp
loop
not
hlt
sub
add
push
mov
jle
pop
xor
xchg
dec
or
add
fnsave
pop
or
cmp
add
(bad)
ja
pop
or
mov
out
sbb
ins
pop
pusha
punpckldq
mov
dec
sub
or
jno
adc
push
cmps
(bad)
js
cli
into
jo
adc
sbb
and
retf
ret
xchg
mov
xchg
fimul
push
sbb
push
test
in
pop
cmps
inc
sub
aaa
icebp
pop
pop
and
adc
mov
dec
mov
lahf
xchg
test
aaa
(bad)
fdecstp
dec
jne
xor
or
mov
out
adc
or
or
mov
adc
and
xchg
div
lahf
and
movzx
adc
adc
dec
hlt
cmp
pop
loop
push
inc
mov
repz
mov
cld
push
shl
push
dec
push
xor
test
sbb
je
in
push
jns
and
and
add
or
add
rol
and
out
or
add
les
je
and
mov
or
sub
sub
das
mov
and
imul
imul
xchg
(bad)
cld
and
add
push
test
or
sub
jmp
mov
add
add
and
and
dec
dec
jg
arpl
cdq
in
and
test
in
lock
adc
sbb
aaa
in
cmp
imul
push
scas
pop
xor
sub
mov
(bad)
inc
sahf
and
outs
in
repz
lods
add
ins
push
xchg
adc
add
sub
and
and
jmp
xchg
loope
mov
add
xor
and
dec
lods
out
adc
jmp
push
jno
in
int
jns
inc
xor
vfrczps
jp
pop
inc
pop
fistp
dec
pop
jne
add
cmp
inc
scas
pushf
shl
mov
cmps
(bad)
jg
daa
loope
xor
add
outs
inc
ret
xor
inc
leave
stos
sbb
xor
inc
jp
xchg
xlat
hlt
xchg
sub
mov
nop
sub
mov
adc
ds
(bad)
lods
jne
push
jo
push
mov
dec
xchg
cmp
sbb
and
lods
xchg
adc
cs
push
adc
lock
jns
cmp
push
lock
or
and
pop
rcl
sub
and
xchg
or
and
imul
mov
pop
mov
pusha
push
push
xlat
add
dec
das
pushf
fwait
inc
or
(bad)
jnp
mov
in
jns
aaa
sbb
mov
mov
cli
data16
sar
xchg
(bad)
jo
push
or
fidiv
pop
movs
mov
add
push
mov
pop
enter
add
sbb
mov
push
xchg
add
cmp
cli
imul
push
pop
out
mov
ins
mov
or
aaa
inc
pop
jo
push
ss
out
adc
xchg
dec
pop
data16
adc
jae
mov
(bad)
and
and
or
xchg
pop
or
cmp
mov
jbe
dec
add
outs
sub
mov
sbb
adc
or
pop
ss
mov
cmovg
push
push
inc
or
dec
test
das
dec
iret
push
ret
bound
dec
xlat
sub
fist
adc
or
push
xor
lahf
daa
shl
outs
dec
fisttp
jns
mov
gs
pop
leave
mov
add
push
xchg
push
pop
div
(bad)
pop
xor
add
das
cdq
ret
adc
mov
cmps
adc
xor
mov
push
pop
xor
mov
(bad)
cmp
adc
xor
jne
pusha
ins
and
imul
call
push
rcr
dec
adc
xchg
test
nop
scas
jecxz
sub
dec
inc
or
and
sbb
add
test
mov
add
mov
pop
jecxz
mov
cmp
dec
clc
mov
dec
fimul
push
fild
retf
les
add
ret
test
and
xchg
add
push
in
xor
pop
ins
cmp
xchg
mov
into
frstor
das
stos
cmp
adc
lock
out
imul
fs
ss
jp
xor
dec
(bad)
xor
mov
dec
xchg
les
repnz
sbb
ss
ins
repnz
jecxz
xor
popa
and
mov
or
test
adc
jle
adc
ss
or
in
fnstenv
mov
add
inc
xchg
and
jb
popa
xchg
movs
push
jl
mov
push
and
inc
mov
retf
imul
hlt
imul
lock
call
mov
pop
xchg
and
dec
daa
fsub
loopne
popf
pop
dec
cmp
aam
aam
xchg
inc
es
mul
les
push
mov
add
test
dec
popa
xor
pop
sti
shl
inc
test
aam
sbb
outs
adc
(bad)
push
adc
bound
stos
sub
dec
inc
xchg
loopne
jmp
jecxz
cmp
xor
nop
mov
retf
add
cwde
cmp
test
pop
push
movs
mov
mov
mov
popf
pop
or
cmps
pop
rcr
xchg
cmps
ror
add
lock
in
nop
mov
rol
xchg
inc
mov
mov
inc
jmp
inc
je
scas
loopne
(bad)
sahf
xor
inc
fmul
inc
fmul
test
ds
fsub
inc
push
push
dec
jmp
sbb
sub
sub
(bad)
adc
ud2
fld
push
inc
(bad)
sub
gs
jg
sub
mov
loopne
add
ret
test
loope
mov
add
sar
ror
push
sahf
mov
outs
inc
adc
sar
rol
add
mov
pusha
mov
ficom
adc
or
shr
and
das
out
enter
outs
mov
cmp
retf
dec
push
stos
dec
daa
lock
and
adc
movs
jmp
jo
nop
or
call
inc
pop
lock
js
jno
push
fsubr
pop
cmp
xor
addr16
sub
or
mov
xor
pop
(bad)
cld
cmp
push
xchg
dec
cld
clc
xchg
pop
sbb
fidiv
sbb
sbb
and
pop
adc
arpl
mov
xlat
xchg
xor
hlt
fwait
pop
test
movs
hlt
movs
inc
dec
cmc
call
mov
add
mov
or
sbb
rcr
mov
mov
pusha
les
adc
ja
std
or
jno
aam
mov
add
push
inc
call
mov
cld
mov
adc
add
dec
xor
push
mov
shl
add
add
sbb
shl
sbb
mov
in
shl
xor
imul
inc
mov
inc
add
sub
aam
sahf
fsub
push
xlat
mov
xor
cmp
int3
in
les
cmp
xchg
xchg
ror
sbb
push
movs
loopne
test
idiv
mov
and
fmul
in
shl
and
push
hlt
jo
cmc
push
test
in
cmp
inc
gs
jns
xor
inc
or
add
xor
mov
mov
dec
in
dec
dec
inc
in
or
adc
push
ins
cmp
push
sbb
xchg
and
cmps
fst
ins
xchg
push
jno
jnp
nop
out
ins
fsub
movs
fcomp
inc
push
js
and
repnz
aam
rcl
sahf
and
enter
ins
rcr
dec
inc
inc
jmp
(bad)
xchg
call
mov
sub
test
cmp
dec
jle
ins
test
xchg
cmp
mov
aam
les
add
icebp
sub
outs
inc
(bad)
ficomp
scas
or
dec
inc
dec
sub
add
dec
cs
xor
jb
scas
mov
popa
mov
int
adc
push
mov
jg
jl
mov
and
inc
push
dec
rcl
mov
inc
and
pop
and
retf
lock
and
push
(bad)
pop
jbe
and
fisttp
daa
shr
das
inc
cmps
lods
test
or
pop
sub
xchg
dec
int
fisub
cmp
adc
jnp
and
or
sub
pop
gs
or
and
mov
dec
push
call
add
jbe
pop
mov
pop
push
add
add
push
inc
push
inc
inc
rcl
stos
jge
aam
adc
xlat
pop
jb
cs
xlat
arpl
inc
or
pop
or
stos
(bad)
mov
add
data16
sub
pop
dec
imul
ror
inc
das
and
and
arpl
sub
outs
cmps
dec
sub
jle
inc
sub
jmp
dec
punpckhbw
inc
push
cmps
push
xchg
scas
lea
xchg
(bad)
stos
mov
xchg
je
pop
in
xchg
aas
cmovbe
pop
and
dec
addr16
jp
mov
cmp
xor
das
fnstsw
imul
cmp
cmps
mov
pop
sub
nop
shr
outs
fwait
and
ins
adc
mov
pop
jg
out
nop
push
adc
add
mov
loope
call
sbb
adc
dec
sub
and
jbe
sbb
add
ja
and
inc
mov
(bad)
jnp
push
jbe
xchg
sbb
cmp
jge
pop
cmp
pop
xchg
ret
dec
mov
adc
and
add
and
je
std
dec
push
mov
dec
or
cmp
fadd
sub
push
jbe
inc
data16
call
mov
sub
lea
loope
cdq
add
pop
push
imul
jno
cmp
jmp
stos
std
jp
jne
adc
add
aam
xchg
sahf
inc
shr
(bad)
shl
mov
fwait
push
je
(bad)
jo
pop
pop
push
pop
sub
or
jle
sub
mov
xlat
adc
mov
add
aad
push
push
outs
inc
adc
add
inc
xchg
cs
mov
lds
out
ins
imul
test
xor
cmp
pop
mov
bound
outs
sbb
fld
sbb
and
inc
loopne
pop
test
or
jecxz
mov
mov
ja
in
mov
adc
call
jno
cmp
and
dec
sub
cs
add
xchg
dec
cmp
in
and
jle
dec
mov
in
leave
dec
es
push
sbb
sub
pop
add
mov
xor
or
pop
add
sub
fimul
jmp
call
inc
(bad)
mov
mov
shl
sbb
inc
in
les
adc
dec
das
jns
push
dec
push
je
loopne
sub
mov
enter
sar
mov
lahf
fadd
inc
icebp
into
push
xchg
pop
or
pusha
xchg
outs
and
cdq
fdivr
jb
cmp
aam
enter
aam
rcl
hlt
sahf
inc
sub
mov
add
and
cmps
mov
inc
xor
push
push
pop
out
call
ror
addr16
and
(bad)
cld
es
sbb
stos
fimul
mov
inc
push
leave
shl
pop
nop
fsubr
mov
and
mov
(bad)
xchg
xchg
fsubr
jmp
or
push
inc
inc
mov
rol
cli
or
adc
bound
and
pop
cwde
mov
push
pop
mov
sbb
jae
mov
scas
ja
fcmovb
mov
pop
add
mov
(bad)
xchg
not
mov
pop
push
add
and
stos
mov
stos
out
fiadd
push
inc
xor
push
ins
add
dec
out
nop
mov
mov
jb
lahf
or
push
push
inc
push
aaa
xchg
xor
nop
push
push
cmp
or
sub
cmp
sbb
push
das
pop
out
(bad)
call
dec
dec
mov
or
inc
inc
call
push
addr16
mov
or
adc
add
retf
or
push
add
adc
add
sbb
in
addr16
inc
sbb
add
adc
jmp
les
test
pusha
inc
sub
aaa
or
sub
xchg
push
scas
xchg
sbb
scas
inc
hlt
or
adc
jecxz
inc
or
inc
pop
add
push
adc
push
xor
ror
and
mov
xor
push
rol
test
rcl
jmp
clc
or
push
mov
neg
(bad)
outs
test
test
push
inc
mov
push
xor
pop
fwait
or
cmps
aas
fst
in
std
add
imul
add
push
test
imul
repnz
in
fdivr
sbb
loope
add
dec
push
loopne
mov
sbb
sbb
call
arpl
mov
(bad)
ins
iret
cmp
inc
add
cmp
les
mov
cmp
les
add
inc
sbb
retf
ret
pop
mov
mov
mov
push
retf
inc
cmp
ins
mov
ffreep
add
push
mov
push
ins
pusha
add
sub
and
sub
sbb
call
xor
jmp
loopne
add
xor
inc
or
lea
scas
pop
xor
dec
lock
add
pop
push
test
pop
adc
(bad)
xor
mov
push
or
retf
pusha
test
jb
test
push
test
and
dec
dec
lahf
add
nop
mov
jbe
pop
sti
add
js
jb
push
add
mov
cmp
sub
xchg
sub
inc
add
hlt
test
and
sub
push
retf
call
jne
repnz
pop
jg
in
repnz
ret
imul
lea
push
cmp
pop
xor
shl
jnp
dec
push
dec
sub
call
adc
xor
cmps
rcl
jmp
push
lods
stos
push
push
xchg
fbstp
shr
or
sbb
or
clc
retf
imul
lea
xchg
mov
mov
add
adc
jno
mov
add
pop
inc
gs
push
mov
inc
dec
pop
hlt
push
es
or
(bad)
mov
jne
(bad)
cli
add
dec
fistp
pop
mov
scas
imul
adc
mov
mov
mov
mov
scas
xor
mov
adc
sub
adc
fcomp
popa
lods
or
push
cld
js
add
sbb
ret
cmp
jns
mov
sub
add
arpl
jmp
push
add
mov
pop
cmps
aam
sub
or
test
inc
add
sbb
xchg
and
and
ret
push
call
cs
ror
ret
call
add
(bad)
icebp
xor
xor
sahf
or
je
adc
ss
pandn
dec
sub
cmp
push
loopne
aad
and
gs
loopne
and
lea
mov
ja
pop
adc
fsub
sbb
jne
and
sub
jmp
aaa
and
daa
adc
pop
or
or
adc
mov
mov
inc
mov
enter
xchg
pop
ja
loope
lahf
(bad)
adc
add
sti
mov
dec
cwde
int
adc
mov
mov
sub
lods
xchg
int
adc
mov
inc
mov
int3
rcl
fcomp
inc
push
cmp
loopne
call
add
cmps
add
fst
sub
push
in
inc
fistp
pop
dec
and
mov
cld
and
adc
jg
add
xchg
scas
and
push
dec
dec
adc
jnp
add
cmp
(bad)
mov
or
and
mov
jne
mov
mov
movzx
(bad)
mov
push
leave
xchg
in
aas
stc
movzx
rol
ret
inc
adc
cs
xor
(bad)
rcr
xor
adc
jg
lds
(bad)
push
pop
or
pop
stos
sbb
inc
add
aaa
outs
or
push
mov
mov
mov
xor
sbb
stc
or
int3
adc
and
dec
inc
mov
adc
and
(bad)
ins
xor
ss
pop
ror
(bad)
sar
jnp
and
lods
or
pop
fcomi
je
ss
xor
sbb
imul
xchg
push
dec
pop
imul
lahf
movs
pshufw
retf
xlat
pop
sbb
daa
push
dec
movs
pop
(bad)
or
jno
daa
mov
sub
push
push
add
fadd
and
hlt
rol
ret
mov
add
pop
fimul
push
mov
push
push
xchg
inc
(bad)
mov
add
sbb
test
inc
cld
xchg
scas
xchg
es
fmul
(bad)
sbb
push
sub
arpl
push
mov
dec
ja
cdq
pop
push
jnp
push
or
or
mov
and
ret
mov
jb
movs
or
scas
lods
pusha
push
or
or
push
mov
mov
adc
sbb
and
aad
push
shl
retf
add
shl
sbb
pushf
mov
aas
rcr
add
test
pop
enter
push
inc
je
or
adc
cmp
sbb
fild
(bad)
leave
daa
enter
mov
jb
in
nop
rcl
shl
and
push
mov
or
xchg
das
shr
leave
daa
movs
test
je
(bad)
cli
add
pop
dec
jge
aam
(bad)
mov
xor
movs
repz
nop
ror
dec
jge
rcl
and
jbe
mov
jns
pop
xor
pop
sbb
lock
sti
fbstp
add
ss
sbb
push
lock
jmp
dec
adc
ds
js
add
adc
jo
mov
je
push
mov
imul
fs
sbb
loop
fadd
add
lods
ja
pop
adc
retf
jge
mov
daa
mov
sahf
inc
ja
arpl
popf
push
mov
push
int3
inc
xchg
jl
mov
inc
xchg
adc
fs
sbb
push
add
xchg
popa
xchg
dec
pop
dec
push
sbb
add
movs
lock
xor
ds
adc
push
pop
mov
mov
addr16
push
sub
and
push
ror
popa
lea
shl
pop
mov
and
dec
and
and
dec
fs
adc
fs
dec
cmps
lds
sub
out
push
in
add
or
xor
and
and
mov
cmp
cdq
js
dec
outs
jne
test
and
movs
jb
aam
fcom
xor
gs
cs
add
out
jg
test
mov
add
fadd
mov
mov
sbb
push
adc
push
fwait
fs
or
adc
cmp
xchg
or
sbb
or
jg
inc
pop
cmp
push
add
xchg
jns
push
es
test
mov
aam
pop
inc
and
and
(bad)
jae
xor
add
inc
inc
bound
pop
in
mov
scas
xor
xor
mov
clc
mov
cmps
lock
fcom
adc
inc
sbb
hlt
enter
popf
adc
movups
out
arpl
and
cmp
sub
pop
mov
or
push
add
std
dec
dec
fld
adc
idiv
mov
ret
in
mov
test
jl
add
inc
nop
and
loope
cmc
cmp
jle
push
in
dec
xor
adc
jge
add
inc
sbb
mov
jmp
cwde
dec
cmp
jge
sbb
xchg
push
pushf
push
or
mov
add
push
cmp
add
xchg
push
cmps
test
or
clc
retf
clc
dec
push
mov
add
ins
ror
fmul
jae
std
je
mov
call
pop
push
addr16
pushf
or
push
mov
and
sbb
dec
dec
and
or
cmps
jg
jmp
cmp
js
adc
jle
add
inc
hlt
xchg
xor
mov
fidiv
push
cmp
sub
mov
pop
loop
push
inc
pop
xchg
loop
or
xlat
mov
add
dec
lods
loope
fadd
push
clc
fs
push
mov
mov
and
shl
ret
imul
xor
retf
mov
lock
retf
pusha
mov
stc
pop
scas
fcmovnu
icebp
test
dec
jp
sub
xor
div
and
add
in
mov
push
das
fbstp
dec
(bad)
jmp
(bad)
mov
sub
and
inc
adc
stos
xor
xor
imul
into
dec
sub
xchg
sub
(bad)
in
lea
shl
loope
enter
in
bound
cmps
nop
adc
jno
js
or
dec
pop
inc
add
or
rol
fdivrp
jle
fwait
jmp
and
adc
imul
imul
sub
lds
or
push
cmp
pop
sub
sub
jmp
lock
xor
nop
and
adc
adc
pushf
push
and
cmc
data16
test
push
adc
cs
pop
lock
or
jg
and
adc
aas
cmp
add
jbe
and
and
ret
lock
dec
imul
sub
leave
out
pop
in
add
adc
sub
and
add
xor
inc
enter
push
in
pop
addr16
pusha
and
jb
jmp
popa
add
jo
mov
adc
in
fisub
mov
arpl
pop
add
adc
and
and
fs
inc
cmps
inc
aas
push
nop
or
dec
inc
fs
or
inc
inc
adc
aaa
mov
jae
add
test
inc
repnz
or
dec
das
shl
add
les
xchg
add
pop
div
and
mov
imul
xor
call
call
clc
aam
and
je
je
cmp
push
int3
adc
ror
les
(bad)
shl
mov
test
push
in
add
adc
mov
mov
mov
mul
mov
add
mov
dec
gs
lods
inc
lods
cmp
test
les
mov
pop
(bad)
repnz
mov
in
pushf
hlt
mov
adc
fiadd
fnstcw
jl
or
push
pop
push
xchg
add
jb
jmp
mov
shr
cmp
cmp
(bad)
rcl
inc
mov
or
mov
dec
and
inc
call
or
adc
sahf
or
adc
out
repnz
push
dec
je
xchg
add
popf
sub
sbb
fwait
add
punpckhdq
in
adc
jbe
adc
mov
mov
pusha
mov
fs
inc
cs
jb
sub
enter
cmp
test
adc
adc
mov
fist
imul
mov
dec
xchg
test
aaa
jbe
jbe
popa
dec
addr16
addr16
mov
pop
or
ins
movs
dec
int
inc
push
sub
jo
jbe
sub
mov
sub
add
stc
inc
mov
add
or
aaa
push
test
cmps
fs
(bad)
addr16
enter
dec
bound
iret
lds
mov
xor
dec
dec
xlat
aas
faddp
or
pushf
outs
mov
push
and
(bad)
push
and
xchg
inc
sbb
(bad)
mov
ja
(bad)
xchg
rcr
sbb
jo
dec
and
mov
cmp
retf
jb
and
lea
inc
movs
ud1
or
inc
sbb
dec
cmp
loopne
sbb
clc
jl
pop
dec
ret
sar
mov
xor
in
lods
push
fsubr
push
in
loopne
fnstcw
sbb
xchg
add
fcompp
loope
in
fwait
xor
or
adc
xor
push
dec
mov
jnp
js
and
xor
cmp
in
dec
repz
xchg
xlat
gs
fsubr
ja
jge
add
ret
dec
shr
adc
adc
mov
cwde
int
inc
inc
sub
fdivr
xor
jg
loop
adc
fmul
cmp
popa
loop
je
jecxz
popw
adc
mov
loopne
fdivr
push
jo
push
sbb
mov
push
loopne
aaa
add
push
cmp
sbb
and
pop
push
(bad)
push
(bad)
cs
pop
xchg
add
jae
or
mov
mov
fstp
and
sbb
pop
dec
push
add
(bad)
sbb
hlt
dec
dec
mov
lock
in
cmp
call
pop
call
in
in
dec
mov
loopne
mov
cmp
in
dec
es
test
xchg
and
inc
sub
jp
or
inc
sar
and
lahf
pop
ss
or
sub
and
mov
xlat
adc
sub
dec
(bad)
sti
add
dec
xor
mov
mov
sub
dec
ss
and
jne
cmp
or
scas
sub
add
dec
jns
div
in
dec
and
lea
rcl
(bad)
fsub
push
fbld
enter
mov
ss
or
add
fwait
add
jge
(bad)
jle
inc
stos
push
or
add
loop
leave
and
add
in
mov
sbb
loopne
push
fcom
push
lock
leave
fsub
scas
mov
mov
jb
test
or
push
or
push
add
imul
popa
pop
ins
cs
add
inc
mov
or
inc
mov
cs
fcom
jg
add
cmovno
jle
mov
pop
add
or
outs
gs
pop
hlt
scas
cmps
std
dec
or
sub
retf
sbb
pushf
xor
push
js
ret
scas
dec
sub
jmp
call
nop
xor
sbb
je
sbb
ficomp
je
loopne
adc
xor
lea
lea
sbb
popa
lods
pop
test
je
adc
jbe
ins
and
pop
xor
or
jg
or
jns
hlt
loope
pop
mov
or
ins
push
dec
ret
(bad)
and
inc
pusha
and
push
js
test
popa
sbb
mov
xchg
jl
imul
dec
les
mov
popf
jg
mov
jg
adc
jno
adc
ffree
ret
add
shl
pusha
add
add
sub
pop
xchg
or
sub
add
xchg
clc
push
call
adc
xlat
jo
mov
out
(bad)
add
aaa
sbb
je
pop
add
pop
push
and
add
cld
jb
push
inc
or
in
push
sub
nop
add
test
jns
xor
lods
adc
add
or
or
repnz
or
shr
sbb
shl
adc
mov
or
dec
rcl
push
or
ror
mov
lock
add
call
push
push
xor
sbb
pop
imul
push
loopne
mov
cmp
in
in
imul
mov
nop
nop
lods
and
jecxz
popa
cmp
xchg
adc
mov
imul
xlat
dec
xchg
cmp
inc
add
sub
ficomp
das
data16
sub
or
xchg
mov
popa
or
scas
clc
cmp
pop
xchg
push
mov
pop
mov
and
jne
jmp
cmp
mov
je
ss
jns
xchg
xlat
dec
fwait
ds
jl
or
out
dec
sbb
xchg
add
xchg
and
cmp
xchg
cmc
call
cli
(bad)
call
lock
xchg
add
fadd
mov
inc
je
mov
cmp
mov
jl
fldenv
or
pop
fisttp
and
cmp
jmp
add
aaa
or
dec
xchg
cli
pop
cs
test
sbb
int
and
cmc
jmp
popa
cdq
pusha
pop
sbb
call
xor
ss
push
rol
and
fs
aas
mov
and
sbb
lea
mov
enter
nop
xlat
dec
hlt
scas
mov
and
inc
ror
sbb
xor
xor
adc
dec
iret
or
jbe
addr16
je
add
adc
and
add
adc
and
sub
mov
push
jecxz
retf
mov
dec
retf
push
inc
in
fmul
fadd
fwait
shl
cmp
sbb
cld
inc
clc
mov
ret
pop
dec
lea
(bad)
xor
and
dec
sub
and
js
movs
dec
jo
inc
test
mov
sbb
push
cmp
fwait
jmp
dec
pop
dec
lea
mov
and
sub
bound
add
inc
dec
pop
sub
inc
dec
test
pop
mov
jbe
and
mov
sbb
and
imul
mov
or
leave
fmul
popa
xchg
stos
inc
cmp
dec
jbe
inc
push
std
lods
mov
bound
mov
mov
pop
add
test
inc
jg
add
test
mov
dec
sub
lods
aad
das
xchg
lea
les
sub
jae
jge
adc
pusha
loop
loop
or
movs
dec
dec
push
mov
mov
xchg
data16
(bad)
enter
arpl
push
in
dec
sar
pop
cmp
inc
cmp
inc
movs
out
push
popf
sbb
pop
fcom
push
outs
mov
lea
les
cmp
lea
add
sbb
jo
nop
jg
lds
or
loop
ja
in
add
dec
rcr
and
add
jbe
mov
pusha
and
loope
dec
pop
inc
pop
mov
add
jb
xchg
dec
nop
and
mov
mov
inc
and
loop
and
jnp
jns
mov
xor
or
fadd
dec
cdq
jmp
add
rol
xor
ja
add
xor
inc
pop
mov
and
pop
dec
adc
or
cmp
xchg
nop
outs
cmp
shl
loop
add
push
fneni(8087
xchg
int
ret
adc
ds
jg
sub
xchg
push
dec
or
lock
dec
push
rcl
push
iret
push
sub
sub
adc
push
mov
mov
add
jg
push
mov
jno
inc
mov
xor
pop
mov
or
arpl
ins
aas
adc
add
pusha
test
jne
arpl
bound
mov
jmp
or
sub
mov
inc
aas
shl
mov
pop
mov
mov
sub
inc
sub
sbb
cmps
test
popa
ins
imul
lds
mov
js
fsub
addr16
(bad)
shr
inc
fwait
xchg
or
cmp
inc
stos
aas
frstor
xchg
call
clc
mov
aam
pop
pop
pop
icebp
jae
loopne
xchg
inc
mov
xor
mov
sti
mov
inc
jne
sbb
push
xchg
add
push
add
fdiv
ins
push
outs
add
sbb
dec
jne
fnsave
dec
daa
sti
clc
lock
mov
jmp
xchg
jae
dec
pusha
lds
hlt
xchg
add
add
test
xchg
dec
jb
push
push
or
hlt
push
syscall
and
sub
mov
pop
or
dec
inc
leave
add
adc
dec
shr
add
adc
imul
movs
dec
das
cmps
ror
call
or
mov
jno
xchg
and
ins
(bad)
mov
rol
fcmovu
mov
lea
ret
sub
fisubr
jne
call
lods
pop
fidivr
add
and
sbb
test
xor
push
jg
inc
outs
fimul
ja
rcl
rcr
cmp
xor
xchg
cmps
push
div
mov
aaa
sub
daa
fs
in
add
push
stc
jmp
lea
loopne
lock
xchg
add
sub
or
fmul
jns
les
test
ds
mov
dec
and
mov
inc
xchg
add
and
adc
mov
jmp
mov
clc
xor
fs
add
mov
inc
jae
ror
add
sub
pop
xor
or
sbb
mov
es
(bad)
(bad)
jp
(bad)
scas
add
mov
leave
xchg
xor
adc
dec
fmul
loopne
movs
push
mov
add
mov
lea
inc
in
sub
clc
xchg
and
and
pop
in
mov
jae
mov
jmp
cmp
xchg
test
out
clc
pop
sub
es
fdivr
int
lock
and
or
sub
inc
dec
push
ret
or
xlat
mov
and
nop
mov
loopne
cmp
xchg
pop
imul
add
outs
call
mov
scas
test
pop
dec
adc
push
dec
xchg
addr16
call
les
icebp
sub
sub
cmp
adc
rsqrtps
std
inc
cmc
xor
or
cmps
nop
adc
ficomp
test
dec
fwait
aas
add
inc
mov
inc
mov
inc
adc
adc
sub
and
shl
mov
ins
cmp
mov
imul
mov
lahf
inc
call
das
fmul
sbb
ret
pushf
retf
sahf
imul
daa
jge
nop
xor
xchg
dec
out
and
xor
(bad)
push
add
mov
dec
aaa
add
aaa
push
sahf
cmp
dec
mov
add
jmp
adc
mov
lea
mov
rol
repnz
and
or
or
add
ja
popa
lds
cmp
mov
inc
daa
xchg
loopne
xchg
in
add
add
mov
nop
dec
call
imul
aam
fsub
jl
sbb
xor
idiv
add
mov
push
mov
xchg
lock
sahf
popa
aad
pop
or
orps
rol
pop
sbb
add
jo
add
xor
cs
je
mov
add
lds
adc
ds
pop
inc
popa
sub
pop
dec
enter
push
enter
mov
aam
(bad)
dec
ror
lods
jle
pusha
sbb
cwde
mov
jno
test
pop
mov
mov
arpl
fmul
adc
shl
lods
add
mov
(bad)
movs
mov
aas
lock
adc
enter
jns
mov
adc
shl
rcl
loopne
dec
xor
lock
or
adc
stos
ss
mov
lods
aam
stos
das
mov
(bad)
sbb
inc
jae
popa
add
cmp
mov
and
xchg
mov
mov
jg
ins
ins
test
popa
ja
cmps
mov
push
imul
or
das
je
cdq
mov
xor
pop
pop
push
add
ins
cmps
jne
outs
jne
pop
outs
mov
jmp
out
push
mov
lea
js
dec
jb
pop
rcl
jae
jb
and
push
not
(bad)
push
retf
push
xchg
dec
or
or
ins
popa
out
pop
sbb
aaa
ja
mov
sbb
push
ja
xchg
add
in
aaa
mov
sbb
enter
mov
hlt
jmp
push
pop
dec
inc
dec
pop
inc
fs
bound
dec
popa
add
int
rcl
aad
lds
sub
pusha
punpckhbw
xchg
or
pop
je
outs
in
outs
jl
push
dec
push
in
ins
lock
xchg
adc
cmp
sbb
or
xor
call
and
cmp
mov
or
add
add
call
xchg
jp
fstp
les
in
test
das
jo
cmp
cmps
dec
repnz
leave
mov
fstp
cli
push
outs
sub
xor
call
or
pushf
fsub
adc
dec
test
and
xor
mov
ror
jecxz
(bad)
ss
cmps
out
mov
outs
xchg
dec
add
nop
pop
ss
mov
bound
fadd
sbb
jns
and
xor
pop
int
add
xor
push
aaa
jo
das
mov
inc
ror
and
mov
(bad)
leave
mov
inc
or
xchg
add
pop
push
push
or
addr16
add
movs
bswap
pop
adc
jo
es
mov
xlat
add
add
cld
ror
lea
je
mov
movs
loopne
mov
movs
shl
cdq
jmp
adc
inc
test
bound
push
test
pop
call
(bad)
fwait
sbb
cmp
lahf
test
dec
out
leave
cmp
in
sahf
mov
xchg
cmp
adc
push
movs
xchg
add
sub
pop
sub
pushf
xor
pop
cmp
stos
and
jecxz
mov
adc
xor
and
outs
leave
pop
and
mov
shr
pop
idiv
push
push
pop
lock
jb
dec
mov
sbb
inc
test
sub
or
dec
sub
sub
ret
mov
push
loope
or
and
and
cmp
and
lods
retf
retf
mov
and
cmp
lods
or
lods
call
lods
mov
or
ror
or
jne
and
xor
inc
lea
fimul
and
stos
dec
lods
jae
addr16
mov
xchg
test
icebp
stc
lods
retf
inc
add
sbb
aaa
lock
daa
or
int3
lock
nop
add
imul
cmp
popa
push
jb
xchg
scas
test
cmp
rol
pop
clc
mov
scas
fsub
push
retf
imul
xlat
or
repnz
das
fiadd
adc
fcmovne
jg
sahf
cwde
sbb
inc
and
or
pop
add
leave
inc
ror
bound
repnz
lea
sub
arpl
or
or
inc
dec
adc
jno
std
jge
inc
mov
mov
dec
or
dec
cmp
mov
sbb
add
xchg
ret
shl
push
(bad)
(bad)
pop
imul
imul
pop
aaa
or
aas
(bad)
and
sub
inc
xchg
xchg
scas
mov
add
dec
inc
mov
ror
inc
mov
retf
adc
or
dec
mov
mov
xlat
mov
shl
add
and
cmps
aaa
aad
mov
adc
ds
and
push
or
push
push
jnp
add
push
and
shl
cmp
sbb
iret
(bad)
inc
xchg
mov
inc
popa
add
nop
in
dec
sub
add
in
add
pop
mov
movs
mov
add
and
movs
mov
adc
lock
mov
rcr
and
add
rcr
cmp
xchg
jp
popf
jne
jns
sub
jb
dec
fistp
sub
lds
js
mov
cmp
dec
and
aam
pop
call
sub
fwait
rol
fmul
jb
in
xor
cmp
mov
lahf
pop
dec
mov
loop
stos
pop
add
xchg
ins
aam
mov
adc
mov
sbb
and
inc
dec
ds
or
dec
sub
mov
cdq
lock
lock
dec
in
push
adc
and
fsubrp
mov
mov
stos
adc
xor
aas
dec
jae
ret
dec
test
inc
mov
aaa
add
mov
daa
or
sbb
(bad)
cmp
pop
push
fwait
test
lea
push
push
or
push
ds
popf
add
dec
fisubr
(bad)
lock
movs
leave
arpl
sbb
(bad)
int
mov
pop
cmp
adc
adc
xchg
shl
and
sti
mov
xchg
cmp
mov
mov
movs
loope
in
sar
dec
xchg
outs
adc
dec
rcl
fst
out
xor
rol
inc
pushf
aam
jp
popf
xchg
lods
xor
shl
push
mov
jp
mov
add
push
xor
sub
inc
jl
xor
stos
ja
pop
lds
xor
cmp
add
bound
sub
add
xchg
cmp
dec
popa
stos
out
ja
mov
stos
cmps
push
fisub
sar
loopne
sub
cld
sbb
call
mov
and
clc
fmul
push
jbe
jmp
sbb
mov
or
dec
jae
xor
and
xor
test
cmc
imul
(bad)
sbb
aas
mov
(bad)
cmp
pop
inc
dec
test
mov
xlat
cmps
mov
div
xchg
sbb
jl
and
aad
iret
cmp
or
imul
adc
pop
push
pop
mov
in
add
sar
pop
rol
not
sbb
jb
inc
inc
add
add
fmul
sti
lds
mov
jne
mov
jmp
mov
mov
sbb
in
xchg
lods
mov
mov
mov
leavew
lods
fwait
mov
js
outs
out
jns
(bad)
aas
arpl
ins
push
cmp
cmp
fwait
jne
outs
pop
add
mov
add
out
outs
fcomip
mov
pop
fist
je
call
xchg
aaa
xchg
loop
iret
cmps
and
movs
mov
and
adc
xchg
sub
xor
mov
cmp
mov
sub
lea
mov
aaa
ss
(bad)
push
clc
movs
xlat
pop
pop
ja
mov
or
push
or
xchg
add
push
cmp
lea
outs
inc
mov
mov
adc
xor
sar
xor
jl
in
movs
imul
sub
add
dec
movs
adc
xor
sahf
mov
aaa
fcom
sbb
add
imul
sbb
ret
rcl
ja
test
outs
(bad)
mov
das
dec
mov
sbb
fdivr
out
mov
and
cmp
sub
fsub
inc
inc
mov
mov
and
add
xor
sbb
cmp
mov
jno
add
dec
and
push
push
jno
dec
adc
jp
mov
and
or
jle
push
jae
test
push
fldcw
popf
cmp
daa
push
and
out
pop
fadd
and
fdivr
push
or
test
xor
and
dec
jmp
sti
or
push
(bad)
retf
rcl
push
movs
dec
dec
dec
mov
lea
add
data16
scas
data16
inc
add
cmc
and
ret
(bad)
cmp
fucomip
mov
and
dec
sbb
or
xor
lods
fnstsw
inc
and
fiadd
mov
sbb
push
and
mov
jecxz
test
push
xchg
xor
repnz
aaa
or
or
imul
test
retf
cmp
xchg
push
fsubr
ins
nop
ret
push
mov
mov
push
or
or
xor
jmp
repz
jne
xchg
or
cmp
jnp
inc
in
sbb
or
jae
mov
cmps
and
or
ret
adc
xchg
or
outs
fs
and
inc
sub
test
mov
push
cli
and
mov
add
imul
sub
xchg
xchg
or
add
mov
dec
sub
dec
fbld
pop
add
rcl
loopne
adc
pop
add
aam
xor
nop
sub
lods
in
ret
nop
sub
sub
repnz
jp
daa
xor
mov
pop
jb
gs
mov
outs
xchg
pop
pop
jne
aaa
add
out
mov
test
out
test
test
sub
cli
xchg
test
adc
dec
rcr
movs
mov
jno
push
imul
and
sbb
xchg
mov
or
mov
mov
xchg
cmp
ret
lock
ret
in
retf
adc
icebp
fcom
shl
(bad)
in
inc
les
int
xchg
jle
pushf
or
mov
loopne
cmps
call
fcmovnu
clc
mov
shl
shl
aaa
push
aad
mov
mov
iret
cmp
addr16
mov
xor
mov
lods
dec
mov
and
getsec
mov
xchg
ss
cmps
movs
movs
push
test
inc
push
ins
push
mov
popa
and
sbb
push
(bad)
(bad)
ja
(bad)
fnstenv
jne
sub
and
repnz
ret
and
sbb
dec
cmp
mov
cli
sbb
pushf
(bad)
dec
and
lds
sbb
or
add
movs
sahf
cwde
cwde
xchg
nop
icebp
rol
bound
pushf
fadd
mov
inc
jne
dec
repnz
mov
in
call
and
xchg
mov
and
adc
push
ja
out
add
in
sub
ins
sbb
lock
push
xor
push
imul
sub
cmp
jne
sub
cmps
adc
(bad)
inc
sub
(bad)
pop
stos
xchg
inc
leave
push
call
retf
mov
inc
cld
retf
sub
sbb
test
adc
repnz
mov
mov
sbb
enter
call
inc
pop
xchg
jl
jns
outs
fdivr
dec
adc
and
push
push
lea
es
int
int3
sbb
es
into
js
xor
call
sbb
rol
stos
add
movups
and
(bad)
clc
cmp
dec
lods
adc
cmp
pop
mov
or
inc
dec
ret
or
cmp
cmps
out
pop
or
jne
ficom
jl
push
adc
add
mov
cmp
sub
jg
mov
add
imul
call
stos
shl
retf
cmp
add
push
jecxz
jns
xor
and
mov
mov
or
mov
mov
xchg
xor
lds
sahf
jnp
inc
(bad)
sar
dec
dec
add
int3
int3
rol
inc
and
mov
lahf
adc
mov
fs
bound
pop
adc
push
push
jp
dec
popa
mov
das
ins
outs
or
inc
add
xchg
test
and
aaa
inc
add
push
sub
mul
inc
mov
adc
push
or
dec
lea
call
ds
test
ret
lock
mov
dec
mov
jne
lahf
mov
mov
xchg
mov
mov
sbb
pop
xchg
scas
jns
aaa
mov
and
ja
ret
mov
inc
shl
or
xor
out
xchg
push
jnp
mov
rol
sbb
mov
leave
push
sub
cld
cmp
and
or
lods
in
(bad)
mov
iret
pop
xor
add
out
mov
add
and
add
daa
and
or
jbe
inc
scas
xchg
ins
sbb
mov
mov
jecxz
cmc
imul
jg
pop
fdiv
sbb
enter
mov
bound
pushf
int3
xchg
or
and
(bad)
dec
sub
lock
sub
es
sbb
dec
rcr
bound
adc
movs
push
int3
int3
jno
ins
movs
and
and
xchg
enter
push
movs
pusha
inc
(bad)
(bad)
les
mov
xor
rcl
into
or
cmp
rol
loope
pop
fist
ja
cs
test
mov
push
fsubr
sti
stos
ss
jno
and
or
jnp
adc
fwait
jge
pop
jnp
fidiv
mov
xchg
pop
or
jbe
or
retf
add
cmps
scas
and
add
lahf
xor
movs
jg
jmp
adc
sub
sub
es
xchg
mov
add
and
bound
xchg
nop
ud2
xchg
lea
retf
fisubr
jecxz
fcom
add
sti
call
call
pop
xchg
jmp
pop
rcl
adc
ror
sbb
loopne
mov
mul
mov
pop
dec
mov
mov
mul
push
cmp
shl
and
and
rcr
or
rol
mov
mov
je
in
packuswb
pop
nop
push
push
add
push
inc
popf
inc
ds
rcl
xchg
add
add
pop
aam
jecxz
add
mov
jne
adc
mov
cmp
xor
or
jg
inc
jl
test
ror
xchg
sar
cmp
xchg
mov
xchg
and
jns
aaa
sub
rol
fwait
sbb
adc
mov
je
icebp
xchg
test
xchg
and
in
sahf
pushf
mov
sub
clc
push
dec
xchg
stos
and
xchg
out
aam
pusha
shr
shr
adc
lods
push
int3
fnstsw
(bad)
push
psrld
jmp
sbb
inc
aam
shl
mov
gs
adc
loope
inc
(bad)
leave
xor
or
inc
or
mov
mov
xor
push
push
pop
sub
ds
mov
fs
ss
mov
pop
push
dec
inc
cmp
das
xor
test
inc
jnp
mov
outs
or
adc
push
push
dec
sbb
gs
dec
jo
jbe
mov
add
(bad)
fnsave
push
adc
leave
dec
stos
jmp
xlat
sbb
stc
imul
cld
or
clc
mov
cdq
es
(bad)
lock
(bad)
mov
mov
and
test
push
xlat
adc
mov
cmp
pop
fdivr
fmul
leave
fwait
push
js
call
pushf
fsub
rol
or
mov
push
xor
shl
arpl
lods
add
daa
out
add
pusha
sub
fstp
inc
inc
sbb
repnz
mov
(bad)
popa
call
mov
sub
or
mov
mov
test
(bad)
sbb
xor
(bad)
xor
xchg
lods
neg
push
adc
imul
jle
push
mov
or
cmp
loopne
nop
or
sbb
test
pop
(bad)
sti
jmp
fcomp
out
add
mov
mov
test
mov
popa
stos
sub
in
add
and
inc
xchg
inc
(bad)
mov
cmp
inc
inc
mov
or
add
xor
mov
sbb
dec
cmp
push
fisubr
inc
stos
mov
or
int3
ret
sbb
dec
xor
retf
sbb
and
and
mov
or
xchg
call
inc
fmul
sub
sub
cld
outs
inc
mov
jae
sbb
mov
jns
jno
fcom
adc
push
xchg
shr
xchg
xchg
popa
jne
sub
loopne
fwait
sbb
sub
inc
aad
retf
enter
or
push
and
ins
test
adc
add
xor
push
xor
dec
daa
inc
and
das
or
xchg
fisttp
jecxz
pop
jae
jnp
xor
and
or
cmp
push
lea
or
sbb
mov
inc
push
adc
jecxz
add
das
movs
push
mov
jne
test
pop
enter
xchg
mov
mov
sbb
cdq
xor
dec
mov
call
in
push
and
rcr
inc
push
into
mov
sub
fwait
(bad)
popa
loopne
hlt
fistp
and
or
in
jbe
(bad)
dec
loopne
ins
xchg
daa
and
push
inc
je
cld
ret
bound
push
jns
xchg
jne
aaa
fdivr
mov
dec
jmp
xchg
fmul
loope
or
mul
and
push
fist
push
dec
das
lahf
imul
jns
mov
add
(bad)
inc
jle
in
sbb
ret
mov
test
fs
test
pop
shl
das
jnp
rcl
add
sbb
fisttp
sub
sbb
adc
push
push
dec
mov
lahf
xchg
sub
setg
inc
gs
or
xor
pop
xchg
sub
jo
ins
sbb
ficomp
mov
adc
les
sub
lahf
mov
xor
or
push
inc
outs
cmp
xchg
test
mov
add
adc
pop
movs
sbb
pop
lods
push
or
loope
xchg
pop
rcl
sub
dec
sub
ja
fmul
add
mov
and
or
mov
ret
shr
mov
stos
sub
loope
xchg
jl
inc
sahf
mov
push
aam
and
mov
out
ror
xchg
xor
pushf
pop
call
imul
call
(bad)
lock
in
jbe
jl
in
push
add
rol
add
in
and
dec
cwde
pop
outs
xor
call
sahf
inc
imul
sbb
sbb
and
push
or
push
mov
(bad)
jo
push
pop
and
test
push
add
sbb
and
in
xadd
add
mov
cmp
or
je
cmp
in
sbb
push
adc
pop
mov
push
push
enter
mov
call
movs
ret
shl
mov
adc
mov
in
out
cld
push
inc
enter
sbb
sub
out
pop
or
in
add
jno
xchg
test
stc
mov
push
and
in
in
xchg
in
add
call
jo
pushf
aam
fdivr
push
stc
xchg
xor
fidivr
retf
popa
and
(bad)
aam
pop
sahf
add
mov
popa
or
daa
daa
inc
lods
sub
sbb
pop
xchg
outs
loope
out
mov
xchg
rol
jb
sub
jl
push
dec
hlt
test
add
adc
out
loopne
add
push
sbb
mov
(bad)
or
add
adc
leave
syscall
and
retf
or
and
and
or
or
add
sub
mov
push
in
mov
test
ja
jno
mov
imul
pop
les
mov
inc
test
pop
or
xor
adc
in
scas
mov
adc
sbb
xor
dec
test
cmp
cmp
mov
jbe
mov
mov
out
fnstenv
cld
xchg
add
or
in
ficomp
mov
sar
sar
ins
stos
adc
push
daa
(bad)
loope
or
or
fdiv
enter
es
nop
outs
cmp
aaa
add
imul
neg
movs
mov
dec
jmp
and
call
mov
xor
in
pop
push
dec
loop
dec
push
xchg
pushaw
pop
(bad)
enter
xor
dec
int3
push
xor
int
mov
mov
push
mov
out
mov
arpl
les
jo
jl
(bad)
lods
lods
add
leave
add
nop
adc
or
jne
hlt
in
and
mov
cmp
mov
enter
jns
cwde
fld
or
test
std
shl
jne
push
push
push
iret
and
js
cmc
push
jns
mov
test
ss
loopne
imul
in
jo
mov
shl
add
mov
dec
pop
xchg
jnp
in
cmps
inc
test
pop
ins
in
push
xchg
imul
es
jae
cmp
aas
es
aaa
xor
pop
jo
sub
or
mov
sbb
mov
xor
(bad)
inc
xlat
inc
ror
shl
pop
ds
in
add
fwait
jno
faddp
pop
push
aas
mov
rol
xlat
fiadd
jno
cld
or
mov
scas
test
inc
xchg
or
pushf
dec
std
or
and
adc
adc
xchg
dec
mov
mov
adc
jle
xor
inc
dec
sub
xchg
or
jle
mov
jb
lahf
sbb
push
test
xchg
adc
mov
or
rcl
pop
(bad)
and
or
inc
js
mov
push
loope
mov
push
push
in
lock
adc
imul
test
loopne
inc
mov
icebp
fs
pop
add
adc
addr16
add
in
call
test
or
fsub
dec
loope
inc
icebp
cmp
and
xor
retf
repnz
popa
repnz
sbb
sbb
inc
add
sbb
jmp
push
or
out
xchg
lods
lock
sub
sub
add
icebp
and
sbb
lods
call
pop
dec
and
and
add
or
xchg
push
inc
repz
add
loopne
or
loope
je
add
movs
inc
xor
ficomp
cmp
bound
add
sbb
mov
in
xor
imul
mov
push
add
adc
jo
add
scas
inc
inc
pusha
adc
daa
mov
jno
inc
sbb
cmp
lock
jb
das
in
mov
daa
icebp
or
pop
call
dec
mov
add
in
adc
cmp
cmovns
push
je
cmp
sbb
stc
psubsb
lds
push
fs
test
inc
leave
jecxz
jnp
push
data16
jge
and
sbb
push
push
loop
or
popf
push
jbe
aaa
mov
or
pop
aas
jecxz
push
xchg
(bad)
and
xchg
sbb
lods
xchg
jle
jecxz
push
das
jp
xor
imul
cmp
add
and
push
loopne
sub
call
sub
cmp
xor
pop
or
adc
je
mov
xchg
call
or
and
push
in
xor
in
push
jmp
cs
sbb
push
stc
jge
in
xor
or
mov
out
inc
add
adc
cld
dec
add
lds
inc
lea
dec
std
jmp
dec
push
jne
stc
push
adc
mov
stc
mov
sub
out
fcom
lods
in
xor
fs
xor
mov
pop
xlat
outs
xchg
pop
dec
inc
adc
fsub
adc
push
inc
push
call
adc
icebp
jge
rcl
add
mov
sahf
xchg
pop
jb
pushf
sbb
inc
popa
test
dec
aam
popf
movs
inc
push
sub
inc
xor
sti
nop
inc
or
xchg
aas
sbb
inc
out
cld
cmp
mov
mov
or
add
xor
js
push
fmul
(bad)
xchg
inc
jbe
mov
std
sti
mov
test
hlt
mov
dec
call
ret
arpl
mov
jbe
dec
sahf
lock
and
sub
push
mov
jo
mov
sbb
les
push
dec
xchg
ins
pop
dec
push
adc
ret
aas
js
cmovb
arpl
bnd
sahf
sub
inc
cmp
mov
sub
inc
and
das
fisttp
es
add
stos
push
mov
daa
idiv
and
clc
mov
push
fadd
dec
xchg
jo
sbb
xchg
mov
test
dec
xlat
enter
push
pop
sbb
add
loopne
dec
adc
add
dec
sub
les
leave
push
cwde
pop
add
dec
jecxz
inc
test
ja
inc
add
mov
xchg
icebp
mov
mov
mov
in
mov
mov
push
mov
js
add
movs
mov
push
mov
or
xor
sub
add
pop
and
adc
mov
mov
nop
add
aas
jmp
push
lods
lods
enter
add
push
push
shl
das
push
add
push
jp
mov
jb
pushf
dec
mov
cmp
arpl
and
dec
mov
cmc
int
or
cmp
lahf
test
xchg
or
int3
fcom
and
(bad)
js
and
dec
mov
retf
int
cmp
aaa
lea
push
xchg
dec
xchg
xor
nop
mov
jmp
movs
mov
mov
movs
jne
push
jbe
mov
popa
rol
sub
ror
nop
pop
and
je
sbb
mov
inc
xchg
adc
imul
data16
pop
rcr
aaa
mov
sub
cmp
push
add
push
pop
jo
shr
ret
lock
mov
xchg
cmps
inc
iret
(bad)
mov
adc
ss
es
push
push
mov
dec
pop
test
lds
fsub
scas
imul
push
push
push
or
or
push
inc
sbb
movs
daa
ins
mov
sub
test
inc
mov
push
sbb
inc
cwde
or
push
je
push
mov
jbe
cmp
leave
jne
and
mov
push
mov
xor
sub
ins
jo
xchg
push
sahf
call
or
adc
push
pop
push
lock
mov
adc
enter
fcom
jl
dec
cmp
or
xor
fdivr
xor
pushf
shl
icebp
sbb
sub
fs
push
adc
int3
or
push
movs
jb
inc
popa
push
jbe
fdiv
mov
scas
sar
mov
mov
pusha
gs
dec
and
push
inc
xor
adc
xor
aad
or
xor
movs
dec
add
sbb
add
or
test
imul
jo
mov
or
inc
mov
push
bound
push
fnstenv
sbb
and
or
in
aad
stos
out
pop
aas
inc
scas
add
cmp
push
ja
or
xor
jg
inc
pop
xor
sub
cmp
xor
sbb
outs
dec
(bad)
ss
(bad)
or
ret
cmps
mov
add
scas
cmps
xlat
dec
mul
add
push
ret
adc
jae
or
add
sub
mov
mov
pop
sub
dec
rcr
jl
or
jmp
pop
in
push
inc
data16
dec
add
push
cdq
loopne
cmp
fdivr
cmp
scas
call
hlt
mov
jecxz
aas
sbb
inc
or
movs
pop
fist
jns
add
call
(bad)
add
popf
loope
sbb
fdivr
cmc
dec
add
or
xor
fdiv
div
xor
repz
xchg
imul
push
add
jmp
add
dec
scas
jg
lods
out
xor
je
out
sub
outs
out
or
sbb
add
add
xlat
push
jg
adc
sahf
dec
push
push
aaa
(bad)
xor
mov
jl
aas
dec
and
inc
aaa
and
xchg
in
adc
call
or
adc
ja
lea
nop
outs
mov
fsubr
mov
cmp
sar
push
shl
pop
mov
cmp
jne
sub
adc
(bad)
bound
icebp
push
clc
ins
clc
sbb
cmp
add
xor
jne
das
daa
mov
xchg
inc
mov
bound
or
ficom
mov
icebp
sbb
sahf
popf
ret
out
or
dec
loopne
mov
pop
inc
and
adc
or
pop
pop
or
adc
or
push
or
mov
mov
pop
jb
nop
dec
cmp
leave
in
cwde
shr
nop
pop
xor
push
pushf
mov
sbb
mov
jb
xchg
sub
dec
xchg
pushf
int3
sub
mov
and
pop
and
mov
mov
fdiv
jo
and
setno
sub
add
aas
push
add
xor
imul
pop
or
xchg
push
jae
push
push
inc
push
inc
(bad)
cs
jae
xchg
or
inc
and
adc
imul
xchg
mov
shl
cmp
mov
push
ins
mov
sbb
movs
shl
push
mov
jge
out
test
add
pop
xchg
das
or
movs
pop
sub
sbb
sbb
pop
add
div
mov
setp
enter
test
out
mov
movs
ret
cli
mov
dec
or
sbb
enter
jmp
sbb
push
add
xor
jecxz
xchg
dec
mov
in
fs
popf
mov
adc
xor
mov
and
enter
inc
enter
dec
jb
mov
js
xchg
dec
cmp
(bad)
cld
jecxz
mov
mov
xor
enter
sub
dec
mov
and
xchg
xchg
sbb
add
inc
mov
mov
pop
mov
add
popa
mov
es
or
mov
popf
sub
int3
shl
stos
ror
jmp
in
sbb
sbb
and
movs
xor
enter
enter
sbb
xor
popa
xchg
add
sbb
xor
xor
mov
das
or
loopne
and
clc
pop
jle
xchg
lock
mov
adc
inc
dec
dec
inc
das
add
xchg
cmps
(bad)
mov
rcl
neg
pop
mov
movs
lods
rcr
iret
jge
cmps
ficom
add
or
pop
cmc
and
add
lea
inc
fs
jo
jae
test
add
push
push
shl
enter
add
imul
xchg
add
adc
lea
loop
scas
push
push
ror
and
mov
or
int
or
adc
jno
add
and
sahf
ja
mov
(bad)
fild
add
xchg
xor
xchg
mov
xchg
sub
pop
out
in
fcom
inc
cmp
into
inc
dec
jb
test
mov
pop
or
push
cmp
inc
nop
adc
push
iret
test
inc
xor
cs
leave
and
and
popa
cmp
loop
and
fdivr
mov
cmp
adc
lea
(bad)
movs
inc
lds
mov
rol
fnstcw
aam
xor
pop
or
xor
sbb
mov
sub
jns
sbb
mov
enter
xor
out
scas
or
inc
nop
ja
jae
sti
sbb
mov
gs
icebp
aaa
out
mov
mov
jle
mov
daa
jle
pop
add
sbb
nop
out
jno
xor
(bad)
pop
and
jnp
ficomp
sbb
cwde
push
pop
inc
jl
mov
lods
sbb
pop
push
test
dec
xchg
mov
xchg
sub
xchg
push
loop
rcr
xor
dec
dec
add
loopne
inc
push
and
out
xor
pop
push
or
nop
xchg
add
dec
movs
ret
in
repz
lahf
enter
cmp
adc
pop
lock
push
setne
pop
jns
xchg
mov
or
or
cli
dec
or
das
lods
stc
cmp
and
adc
mov
mov
rol
cwde
gs
cli
mov
mov
cmps
es
cmp
pop
mov
(bad)
outs
test
push
and
mov
or
stos
push
inc
cmp
cmp
dec
jb
xchg
xchg
push
aaa
jne
imul
xor
inc
adc
push
ja
jge
pusha
leave
je
push
daa
outs
adc
aaa
push
js
mov
pop
stos
pusha
jb
push
(bad)
cmps
cmp
jmp
sbb
enter
outs
and
inc
rol
cmp
sbb
jo
pop
adc
or
or
cmp
dec
nop
cmp
vpmadcsswd
pop
cwde
add
sub
mov
mov
adc
in
xchg
cli
outs
mov
das
jbe
mov
rcl
sbb
mov
cmp
es
adc
mov
in
push
fsubr
cmp
test
sbb
sar
(bad)
nop
jle
sbb
sbb
shl
call
inc
pushf
test
and
or
push
jns
pushf
sbb
aas
mov
push
icebp
mov
jno
or
jno
dec
push
(bad)
repz
pop
das
rol
xor
push
fwait
je
jmp
pop
je
and
getsec
icebp
leave
jae
and
add
scas
lock
adc
xchg
sub
enter
sbb
cdq
add
pushf
ins
adc
je
je
les
inc
data16
addr16
push
jp
mov
or
xor
cmp
inc
es
dec
sbb
and
sbb
sbb
pop
mov
inc
mov
jmp
movs
retf
adc
add
sub
aam
jmp
lock
mov
test
push
jecxz
movs
movs
push
scas
stc
nop
inc
fdiv
inc
push
and
repz
or
adc
xor
aam
jmp
inc
cld
jns
in
test
mov
mov
xor
test
sbb
dec
rcr
fmul
cmp
jmp
push
pop
pop
and
leave
or
enter
xchg
pop
jb
pop
aam
inc
xor
and
dec
or
or
imul
pop
cdq
xchg
cmp
addr16
sbb
mov
movs
test
ds
mov
ja
retf
cmp
sub
rol
dec
sbb
mov
mov
stc
movs
add
xor
dec
cmps
in
cmp
add
adc
xchg
dec
xchg
or
dec
mov
push
das
adc
xor
mov
lahf
push
push
adc
fstp
push
push
das
sahf
aaa
xchg
add
daa
xchg
das
sub
add
inc
sbb
es
inc
inc
ins
arpl
adc
ret
gs
sub
dec
mov
or
xchg
mov
push
mov
pushf
mov
shl
in
and
sub
dec
dec
inc
sub
sub
adc
sub
and
cs
daa
add
and
enter
sbb
cs
xor
and
sbb
and
loopne
mov
lods
sub
outs
mov
sub
ret
inc
pop
lods
or
out
jne
stos
aas
(bad)
or
lods
inc
(bad)
push
inc
shl
aam
fsub
arpl
pusha
adc
ja
mov
pushf
retf
in
pusha
pop
fs
and
out
sub
loopne
add
inc
cs
repz
push
push
sub
push
test
nop
pop
test
in
push
nop
mov
mov
jbe
addr16
sahf
pop
pusha
pop
repnz
sbb
cmp
xor
push
sbb
bound
sbb
mov
sbb
sbb
ins
movs
sub
mov
movs
aam
rol
or
and
out
ins
pop
lock
imul
test
enter
xor
cwde
inc
stos
push
stos
sbb
mov
cmps
xchg
push
xchg
rcl
sub
in
pop
retf
popf
mov
add
and
pop
ins
inc
push
mov
dec
mov
sbb
jo
or
sub
sahf
push
fidiv
push
adc
add
lods
add
inc
inc
ffree
stos
clc
mov
dec
push
movs
xor
cld
mov
sub
enter
sub
push
sahf
and
aam
mov
mov
scas
fcom
or
or
cs
sub
je
push
pop
retf
sub
push
pushf
jns
fsubr
add
lods
int3
mov
add
pop
and
adc
sti
pop
pop
push
xor
popf
jns
ins
aam
outs
leave
mov
sbb
ret
push
sbb
jp
jp
pusha
sub
cmps
sub
push
pop
das
push
cs
sbb
ins
fs
lods
sahf
ss
push
and
or
sbb
pop
xor
or
jno
jnp
pop
or
adc
and
adc
sub
sbb
sbb
imul
add
dec
push
jp
and
mov
sbb
movs
sti
cmp
sub
and
add
fisttp
jne
hlt
mov
movs
jnp
iret
pop
mov
mov
in
bound
push
xor
es
fadd
sbb
in
scas
adc
push
push
add
xor
xchg
mov
sbb
fwait
xchg
(bad)
pop
cmp
data16
jg
pop
jae
lock
sbb
mov
adc
push
je
daa
ins
ficomp
std
(bad)
fstp
xchg
loope
outs
pusha
and
or
xchg
ins
push
clc
push
outs
(bad)
sbb
inc
imul
xor
les
daa
ret
push
dec
cmp
mov
lahf
cmp
push
add
pop
pop
cdq
add
add
cwde
adc
xor
mov
push
bound
pop
sbb
sbb
pop
and
xchg
mov
aaa
test
xor
pxor
inc
push
xor
push
mov
test
jne
or
inc
rol
push
movlps
das
(bad)
lock
mov
arpl
pop
addr16
shl
sub
pop
xchg
add
xor
dec
loope
xor
pop
and
or
xor
sub
dec
xor
inc
jae
inc
movs
add
and
arpl
adc
push
and
in
out
xor
xor
cdq
dec
dec
in
xor
and
xor
jns
or
fdiv
call
push
mov
mov
add
dec
add
inc
and
out
cmp
daa
sub
test
enter
xchg
xor
cmps
(bad)
adc
dec
imul
push
sub
jmp
vfmsubaddpd
or
sub
or
cmp
push
mov
cwde
int
xor
out
or
imul
add
dec
ficomp
sub
loopne
mov
imul
xchg
dec
push
pop
inc
jg
fnsave
mov
or
(bad)
sub
or
inc
xor
leave
ins
pusha
(bad)
cmp
in
sbb
mov
inc
nop
jns
aam
fcmovu
aaa
adc
add
stc
aam
xchg
popf
inc
je
adc
dec
mov
jo
les
stos
loop
sbb
push
dec
mov
jmp
lock
cmp
push
lock
shl
loope
xor
push
dec
fcomi
fs
push
mov
jae
ror
fnstsw
fwait
ins
add
fs
sub
lds
shl
adc
mov
ret
add
call
xchg
int3
int3
enter
fs
pop
stos
jecxz
xchg
ret
xor
inc
lock
dec
enter
repnz
add
lea
mov
test
ror
rol
mov
dec
rol
and
or
sbb
int
mov
inc
sti
iret
adc
add
pop
sbb
out
je
add
jbe
cmps
cmps
adc
pop
mov
inc
arpl
mov
inc
dec
xor
adc
ja
bound
(bad)
dec
loopne
scas
jae
rol
jg
pop
inc
call
fidivr
inc
idiv
(bad)
cmp
xor
inc
jl
and
jb
addr16
fdivr
cmp
sub
fidivr
aaa
arpl
jns
das
or
fiadd
add
loope
xchg
aas
xor
ja
mov
in
xor
mov
sub
xchg
popf
pop
cmp
or
xchg
ins
add
adc
es
mov
jmp
and
imul
lea
xor
add
(bad)
call
adc
lds
jg
cmp
sbb
adc
jmp
adc
adc
aam
cmp
adc
leave
(bad)
and
xor
sub
xchg
adc
inc
mov
aaa
dec
xchg
mov
xor
sbb
adc
mov
ret
inc
sub
xor
ja
cmp
in
push
inc
loope
dec
imul
sbb
clc
or
nop
das
idiv
aas
inc
inc
dec
fisubr
inc
lock
lods
xchg
inc
xchg
in
sub
test
retf
std
cmp
push
xchg
or
sub
dec
inc
mov
bound
mov
dec
mov
jns
mov
inc
bound
inc
cmp
inc
js
push
add
jne
dec
popf
inc
call
and
pop
push
(bad)
or
cdq
sti
ds
(bad)
sbb
dec
cmps
mov
popf
add
adc
xor
jg
jno
mov
loopne
nop
push
sbb
dec
ins
aaa
push
nop
out
lds
adc
and
or
or
hlt
test
aas
sub
retf
push
cs
hlt
ficom
mov
xor
adc
(bad)
sar
jg
dec
jnp
xchg
jo
fdivr
ret
icebp
sub
ds
mov
aas
fld
call
pop
push
inc
add
out
pop
scas
retf
cmp
imul
push
adc
jl
push
mov
into
leave
mov
out
push
push
push
test
push
cmps
pop
cmp
xchg
pop
aad
cmc
inc
pop
adc
xchg
sbb
adc
inc
mov
inc
xor
inc
dec
and
xchg
sbb
mov
xchg
outs
ins
and
sbb
mov
xor
inc
xchg
and
push
cld
inc
and
mov
es
or
stos
mov
add
cmps
das
push
or
bound
dec
jns
add
push
xor
mov
sbb
dec
enter
mov
xchg
les
cmp
lea
pop
or
iret
shl
mov
nop
inc
push
pop
inc
dec
cmp
add
retf
sahf
adc
fstp
daa
dec
stc
int
ret
pop
daa
lock
pop
dec
js
sub
sbb
movs
sti
add
mov
lods
pop
cmp
les
adc
xchg
jecxz
mov
dec
daa
mov
push
dec
jno
cmp
add
in
xor
jmp
outs
or
out
mov
call
aad
stos
(bad)
das
xchg
cld
lods
dec
pop
ins
add
sbb
das
addr16
loop
mov
popf
mov
sub
bound
xchg
inc
cmp
push
test
in
sbb
jne
ret
outs
iret
sub
aaa
adc
lea
mov
imul
mov
dec
adc
cmp
cmp
out
adc
adc
mov
or
ret
sub
sub
mov
sbb
dec
sub
sti
int3
jmp
push
(bad)
fmul
stos
sbb
dec
aam
sbb
rcl
add
sbb
mov
call
adc
mov
and
call
xor
xor
push
hlt
mov
movs
das
cld
jle
xchg
(bad)
jmp
jp
jp
cmp
xor
jb
xlat
cs
add
ret
test
push
in
sub
jb
xchg
push
push
movs
add
mov
push
sbb
adc
shl
shr
push
jle
shl
repz
mov
push
xchg
fiadd
mov
(bad)
aaa
nop
mov
or
test
add
jb
ds
cmp
xchg
cmp
retf
ret
push
pop
cs
mov
pushf
push
in
mov
sbb
xchg
mov
fs
retf
int3
mov
sbb
jp
pop
mov
push
dec
rol
mov
xchg
dec
cmps
fs
mov
cdq
in
je
lods
add
lock
inc
push
lods
adc
dec
fiadd
sub
test
repnz
je
dec
mov
movs
or
xchg
fs
inc
nop
cmp
imul
mov
add
movs
popf
stos
loopne
bound
lahf
adc
sbb
cwde
push
je
sbb
adc
dec
push
nop
daa
xchg
cmp
nop
mov
test
xchg
jno
shl
jno
movs
cdq
(bad)
sub
jecxz
push
je
sbb
mov
jecxz
push
in
test
bound
call
and
mov
push
adc
getsec
push
lds
(bad)
cmp
xlat
test
(bad)
arpl
or
sbb
fisttp
pop
mov
cmp
cmp
inc
adc
add
shr
mov
(bad)
pop
ins
in
inc
iret
cmp
ins
sbb
add
test
rol
outs
jg
dec
ins
test
mov
push
inc
sub
ins
sub
push
ret
mov
push
iret
cdq
shl
sub
add
sbb
mov
enter
mov
sub
movs
lea
xchg
mov
cmps
sub
(bad)
imul
mov
lock
jge
pusha
xchg
mov
inc
dec
inc
push
cmc
and
test
data16
push
sub
add
sub
add
mov
cmp
in
(bad)
push
int3
jl
(bad)
fsubr
call
xchg
es
or
sbb
add
cmps
or
inc
fiadd
mov
mov
inc
jmp
test
mov
ret
jne
pop
xor
mov
dec
or
leave
xchg
xor
cli
call
movs
mov
adc
add
mov
xchg
push
and
aam
pop
jns
mov
xchg
cmp
(bad)
jmp
xor
jo
mov
dec
xor
iret
adc
pop
mov
add
mov
xchg
fwait
cmc
or
xchg
push
iret
xor
xchg
adc
rcl
hlt
out
fwait
pop
addr16
fs
mov
and
mov
mov
dec
push
std
pusha
pop
cmp
mov
setp
mov
call
loopne
and
cmp
xchg
or
lods
out
sub
and
mov
mov
daa
mov
add
cmps
pop
mov
retf
dec
aaa
xlat
test
pop
sbb
nop
mov
repnz
sbb
inc
aad
js
icebp
cmp
pop
mov
leave
dec
sub
test
sub
in
inc
mov
popa
lea
mov
mov
js
push
mov
shr
stos
sbb
fldcw
push
js
add
scas
jno
or
mov
mov
cmps
outs
fisttp
daa
cwde
retf
sbb
out
out
mov
adc
and
and
xchg
or
sahf
push
gs
sbb
add
fwait
jnp
das
push
xor
cmp
add
shl
mov
mov
xchg
cdq
int3
scas
sbb
shr
test
xchg
add
or
pop
pop
out
dec
cmp
mov
and
out
pop
aas
add
inc
cmp
jge
adc
pop
push
pop
mov
pop
pop
mov
loopne
mov
sbb
stos
push
xor
add
dec
sub
enter
push
aam
add
addr16
shl
mov
add
addr16
test
rcr
test
inc
xor
add
fdivrp
push
rol
jmp
mov
mov
idiv
cmp
add
add
ror
pop
stc
mov
mov
push
rcl
les
rol
add
ins
pusha
imul
add
ret
rcl
int3
pop
loope
pusha
test
mov
(bad)
mov
sti
pop
and
adc
and
retf
push
xchg
add
push
fsubr
add
repz
inc
ja
sete
sub
sar
ja
pop
adc
cli
pop
pop
stos
in
daa
test
inc
repnz
mov
add
lods
or
and
loopne
mov
or
xor
sbb
sbb
fadd
(bad)
lea
push
add
rol
lods
or
inc
in
mov
cmp
and
xchg
sar
mov
stos
movs
dec
fcomp
add
jo
pop
xor
mov
cmp
sub
outs
stos
mov
add
xlat
bound
fbld
(bad)
es
cmp
dec
sbb
pushf
rcr
jnp
push
pop
and
inc
cmp
push
sbb
xchg
pop
push
inc
add
(bad)
and
and
enter
cmp
xchg
rol
(bad)
add
mov
clc
mov
ins
shl
loopne
icebp
mov
hlt
(bad)
jno
xor
push
jnp
outs
sub
and
and
inc
lods
leave
rcr
jae
or
xchg
pusha
push
call
push
mov
and
cwde
das
pop
jmp
add
pop
and
sub
sub
fbld
cmp
or
(bad)
(bad)
retf
push
adc
cwde
in
and
lea
in
and
xlat
pop
jg
jb
hlt
daa
inc
in
xchg
xchg
gs
push
add
pop
add
pop
xlat
push
inc
and
dec
or
or
pop
and
addr16
cmp
xor
fsubr
mov
push
push
call
es
push
sahf
imul
xchg
loopne
adc
pop
aad
and
inc
fmul
push
fsub
mov
xchg
fcom
and
cdq
aam
and
fs
dec
ror
sbb
inc
xor
outs
pop
adc
mov
pop
and
and
pop
sbb
xor
nop
sub
enter
in
dec
je
push
sbb
fadd
dec
pop
dec
sub
pop
addr16
dec
and
jb
and
daa
mov
pusha
inc
add
data16
ficom
push
aas
fs
pop
in
dec
ds
imul
add
das
test
and
or
adc
popa
xchg
retf
mul
cmp
sbb
or
mov
mov
out
or
pop
daa
js
vcvtdq2ps
mov
and
pushf
jg
push
mov
pop
in
adc
xor
push
in
sub
inc
xor
pop
jb
leave
mov
int3
mov
and
or
adc
sub
add
test
rcr
cmc
sub
dec
hlt
and
stos
ret
adc
inc
bound
add
pop
dec
jns
in
fisttp
mov
mov
cmp
or
push
leave
rcr
mov
loope
push
mov
or
xchg
aad
cwde
lock
add
movs
not
sub
cwde
cwde
lea
xchg
cmp
mov
and
push
out
inc
cs
cld
je
pusha
pop
jno
stc
pop
jmp
cs
add
cmp
lahf
xlat
das
ret
dec
fnstsw
out
mov
xchg
and
pusha
jmp
jo
mov
jo
and
aad
or
test
dec
aam
jl
mov
sbb
and
jo
mov
push
push
sub
lea
nop
mov
mov
push
cmovle
sub
mov
nop
outs
out
sub
out
and
imul
test
ret
gs
enter
shl
gs
nop
jl
inc
add
adc
jle
pop
leave
movs
mov
fs
sbb
inc
adc
(bad)
fcom
mov
mov
or
or
inc
jne
not
pop
add
fs
sub
nop
cmps
xor
dec
dec
dec
out
in
pop
dec
retf
inc
add
sub
xor
or
add
in
movs
push
sub
jmp
addr16
stc
push
ins
in
shr
or
mov
gs
ins
pop
push
mov
test
je
add
jnp
(bad)
sbb
call
jb
xor
pop
push
and
and
je
inc
ficom
dec
call
dec
pop
mov
addr16
nop
push
xlat
pop
inc
pop
les
cmc
aaa
dec
add
inc
mov
lahf
pushf
or
imul
push
push
push
ja
or
push
retf
loope
cdq
and
or
cmp
jne
dec
xor
mov
popa
mov
imul
das
jo
jmp
fs
mov
xor
jb
std
dec
imul
xor
sbb
das
xchg
pop
cmp
sub
mov
xchg
push
imul
push
add
ja
lods
push
dec
pop
inc
sub
cmc
and
dec
xchg
pusha
or
loope
dec
rol
jmp
je
push
out
and
dec
dec
add
sbb
(bad)
pop
stc
movs
or
ror
jnp
ins
mov
ja
jno
xchg
dec
cs
push
add
imul
sar
in
add
sbb
inc
xchg
iret
jns
not
jno
outs
sub
xchg
push
adc
xchg
in
nop
pop
and
mov
add
cmps
test
adc
leave
and
sbb
cmp
ins
imul
pusha
in
mov
ret
or
xchg
and
fdiv
inc
adc
loope
xchg
fadd
pop
add
or
inc
aas
jnp
aas
and
and
inc
pop
cld
test
mov
mov
mov
adc
xchg
jl
add
cmp
fwait
dec
cmps
fidiv
iret
addr16
les
sub
xchg
jns
pushf
mov
ins
xor
mov
lock
sbb
daa
mov
inc
xchg
sti
dec
test
xor
sub
xchg
loope
je
imul
call
sub
outs
inc
mov
or
xchg
ins
push
xchg
scas
or
ds
cmp
mov
dec
xchg
mov
dec
cmp
ret
fmul
ins
jne
leave
rcl
retf
dec
push
popf
push
scas
cmp
outs
xchg
inc
dec
call
or
mov
(bad)
movs
sbb
div
xchg
mov
popa
cmp
pop
or
in
fsubr
les
adc
or
mov
es
repnz
pop
adc
mov
jno
inc
or
mov
std
out
and
sbb
mov
retf
sub
pop
xlat
lock
dec
push
fiadd
sahf
sar
sti
pusha
jmp
sub
hlt
push
nop
retf
cld
js
inc
sahf
add
(bad)
xchg
add
test
shl
hlt
adc
xchg
add
pusha
push
movs
xor
sbb
and
and
sub
push
sbb
cld
sub
jae
nop
retf
dec
xor
cmp
push
jl
(bad)
js
xchg
add
mov
int
not
add
fnstenv
repnz
jo
inc
inc
nop
lock
je
add
mov
mov
cmp
xchg
adc
inc
aad
mov
xchg
or
or
sbb
aaa
lahf
push
add
push
add
shl
aaa
data16
movs
shl
inc
movs
adc
mov
and
or
js
sub
jmp
pop
les
lods
jg
push
add
add
jo
dec
cmp
or
aad
add
adc
mov
dec
les
xchg
xchg
aas
repz
rcl
push
daa
call
mov
(bad)
jbe
cmps
lods
popa
xchg
xor
push
mov
xchg
dec
and
dec
push
and
pop
add
push
aaa
mov
outs
inc
mov
ja
aaa
mov
not
(bad)
jb
imul
add
and
in
lds
mov
mov
mov
adc
sbb
jo
jne
ins
mov
jbe
les
mov
cmp
mov
mov
bsf
call
rcr
out
xor
jle
shr
test
add
sub
sub
xlat
loopne
or
add
adc
ja
cmp
mov
in
and
jge
inc
repnz
sbb
aad
push
dec
hlt
sbb
lea
pop
cwde
add
add
cmp
add
seto
outs
cmp
ds
fwait
cwde
jbe
(bad)
cld
jo
(bad)
mov
in
fst
add
cmp
add
jb
jbe
call
ja
jmp
pusha
inc
ror
or
nop
and
addr16
and
add
mov
adc
mov
jle
std
out
xchg
or
add
add
push
pop
lock
add
es
or
pop
or
stc
mov
movups
js
(bad)
xchg
out
clc
or
jns
cmps
sbb
cmp
pop
sahf
out
sahf
data16
nop
sahf
lods
pop
call
in
mov
and
adc
fs
sub
in
fs
je
jl
xchg
in
in
outs
mov
aam
cmp
cmp
inc
or
repnz
or
xor
dec
repnz
sbb
fs
shr
or
mov
sub
ja
xchg
out
mov
addr16
in
adc
push
cli
pop
xchg
dec
xor
lea
imul
addr16
dec
xchg
jge
or
jb
ficomp
call
dec
inc
inc
xchg
push
fs
(bad)
or
gs
test
and
push
cs
xor
push
mov
jecxz
push
je
push
push
push
xor
ins
sbb
scas
in
dec
mov
dec
jge
sub
cmp
push
add
sti
dec
mov
gs
mov
jecxz
(bad)
push
mov
pop
cmp
or
lahf
jmp
add
popa
jbe
xchg
aad
das
pusha
cli
mov
adc
je
jnp
fs
or
gs
sbb
popa
ins
dec
imul
in
lea
add
mov
mov
fimul
cmps
sub
cmp
pusha
outs
jle
out
out
pushf
inc
cld
mov
cmp
shl
loopne
xchg
jecxz
sbb
nop
fstp
imul
cmp
cmp
inc
ins
cdq
or
shl
int
dec
pusha
cli
sbb
test
ja
dec
cmp
add
dec
cmps
xchg
pusha
sbb
or
leave
rcr
mov
push
cmp
jbe
mov
aas
fcom
sub
push
pop
ins
adc
dec
cmp
inc
outs
push
dec
inc
sub
frstor
or
arpl
inc
push
mov
pop
lss
movs
adc
jb
add
adc
fs
mov
mov
sbb
and
jne
jns
jae
cmp
nop
xor
cmp
nop
ret
push
int3
mov
aam
xchg
div
ja
dec
dec
in
arpl
(bad)
js
je
js
inc
mov
mov
iret
shl
enter
rcl
adc
rcl
jle
sbb
dec
repz
and
pop
jle
iret
shr
out
stc
add
jns
out
pop
and
xor
out
push
pop
addr16
out
sahf
jnp
(bad)
cdq
mov
jns
ror
fistp
inc
xor
in
(bad)
xor
dec
jge
dec
inc
xchg
fnstcw
(bad)
or
push
mov
add
movs
cmp
jg
push
push
fld
outs
cmps
push
popa
jo
jb
scas
jne
test
fisub
jg
test
daa
push
push
inc
sub
mov
push
sub
mov
adc
lods
lods
push
mov
xchg
cmp
nop
scas
sub
push
mov
adc
adc
xchg
and
inc
pop
scas
sbb
stos
and
or
je
push
push
cmps
test
pushf
dec
std
mov
mov
das
push
jl
(bad)
mov
or
test
dec
xlat
sbb
(bad)
xor
dec
hlt
and
sub
lea
and
sub
test
sbb
lods
call
mov
sub
xor
sbb
daa
int
shl
hlt
call
popf
xor
in
ins
inc
add
xor
(bad)
call
push
loopne
loopne
mov
mov
call
xor
clc
dec
inc
jb
ja
mov
push
test
imul
add
test
jo
xchg
or
call
fst
pusha
mov
ins
sub
pushf
and
mov
xor
clc
es
jp
aaa
es
jno
push
jne
adc
push
dec
mov
por
lock
push
in
loopne
das
fmul
rol
fdivr
nop
cmp
xor
add
and
ss
mov
call
pop
nop
mov
jmp
or
call
ds
sub
test
and
in
aad
lock
and
in
or
xor
inc
jno
test
add
push
adc
loopne
xor
ins
push
jb
in
test
sub
fist
sub
xchg
and
add
and
pop
xchg
push
sub
in
ja
dec
in
jmp
add
outs
xchg
or
(bad)
(bad)
or
test
movs
push
outs
pop
das
fwait
sbb
ins
inc
push
jae
adc
xor
repz
ins
fs
test
movs
push
out
mov
or
scas
xlat
mov
popa
pop
dec
das
mov
mov
inc
cld
test
or
push
dec
lahf
or
add
push
add
enter
sub
bound
mov
jmp
iret
or
pop
retf
and
or
pop
js
add
or
dec
dec
xchg
or
xchg
sub
inc
sbb
sbb
out
mov
dec
out
mov
pop
daa
pusha
sar
cmp
and
ja
xlat
sub
or
inc
xchg
dec
cld
out
xchg
sbb
call
xchg
mov
jb
pop
jecxz
(bad)
adc
pop
mov
add
lods
xlat
pop
xor
mov
lock
mov
bnd
add
pop
jge
dec
adc
hlt
and
sub
ja
add
push
sbb
nop
sub
fistp
add
or
dec
pop
pop
and
sbb
imul
adc
add
aam
inc
xchg
cmps
je
adc
and
stc
mov
mov
and
adc
cmp
xchg
mov
inc
popa
je
dec
jmp
add
push
lock
loop
pop
jno
dec
and
pop
daa
xor
xchg
pop
jmp
adc
add
xchg
js
fild
cmps
bound
ss
jb
cmp
and
es
or
scas
stos
mov
xchg
mov
stos
cmp
inc
cmp
ins
idiv
dec
addr16
pop
sub
scas
and
arpl
add
fs
mov
adc
movs
or
add
inc
fidivr
xchg
test
scas
add
and
cmps
bound
xlat
scas
cmps
mov
adc
mov
fs
inc
jne
test
push
jns
stos
cmp
(bad)
rcl
data16
jb
mov
jb
pop
pop
cmp
fs
lods
ror
imul
dec
or
lahf
mov
jo
arpl
mov
fs
cmp
cmps
jo
fiadd
and
outs
dec
mov
and
push
push
ins
sbb
cmp
mov
pusha
and
sub
jo
mov
outs
mov
(bad)
arpl
mov
jo
ins
mov
jb
addr16
enter
mov
and
rcr
push
pop
popa
aas
pop
ror
xor
xchg
arpl
ret
je
fs
add
lds
pop
xor
cmp
push
mov
xchg
ret
push
leave
inc
leave
pop
xchg
ja
mov
xchg
mov
retf
inc
dec
cmps
add
and
int
inc
mov
into
dec
mov
rcr
adc
dec
cmps
and
cmp
lahf
dec
cmp
xchg
pop
dec
rcr
push
sbb
aam
mov
in
aad
nop
mov
jg
cmps
xor
mov
(bad)
inc
rcr
cmps
xor
jae
push
mov
add
push
fsub
cmp
mov
sbb
xlat
push
jo
mov
or
add
jg
jbe
sbb
loope
sbb
jecxz
scas
test
sub
and
out
and
xor
out
inc
jb
or
xchg
push
mov
jmp
sbb
inc
gs
inc
rcl
gs
outs
imul
and
out
imul
lock
in
ds
gs
push
mov
daa
popa
mov
in
repz
inc
mov
hlt
outs
push
or
cmc
mov
imul
or
sbb
fdiv
mov
or
inc
add
inc
jb
(bad)
jne
pop
inc
xor
mov
sti
jne
xor
and
das
jne
inc
rcl
vmwrite
movs
and
mov
mov
jmp
nop
push
mov
cmps
add
addr16
call
jl
mov
mov
pop
add
pop
add
mov
sub
mov
sbb
mov
or
add
pop
push
jge
mov
rcr
adc
sbb
or
je
or
or
bound
je
loope
das
pop
test
add
nop
mov
sahf
sub
aas
nop
aam
add
or
test
mov
add
iret
push
adc
mov
adc
and
jbe
xor
rol
sub
popf
stos
xor
or
mov
out
sahf
push
ja
test
inc
mov
shl
add
cmps
sub
pop
mov
dec
add
jmp
jnp
out
cmp
adc
pop
sub
ds
jne
sub
add
pop
xor
adc
jo
bound
jbe
jo
jne
into
sub
fs
mov
gs
add
cmp
add
push
bound
pop
daa
and
inc
xor
(bad)
adc
pop
pop
ja
pop
retf
clc
and
ins
mov
jb
test
xor
or
jo
push
mov
push
sbb
ins
scas
imul
cs
add
jg
aad
jbe
nop
mov
adc
xor
or
into
xchg
mov
cmps
imul
mov
sbb
sub
sub
mov
or
sub
add
out
push
ret
fs
lea
fs
dec
and
and
mov
lock
sub
inc
les
clc
aam
and
mov
xor
xchg
lea
shl
call
jne
fild
fild
xor
add
sub
das
sti
cli
mov
inc
sbb
scas
sbb
jmp
dec
add
dec
enter
cmp
add
jg
add
clc
icebp
xlat
leave
iret
retf
cmps
(bad)
jo
ret
leave
jmp
sub
inc
push
(bad)
into
adc
xchg
add
scas
mov
(bad)
clc
dec
stos
cmp
add
dec
scas
inc
das
sbb
mov
adc
sub
jne
cwde
and
rcr
sub
call
(bad)
test
adc
les
lock
adc
or
xor
add
fidiv
or
scas
xchg
inc
fiadd
adc
cmp
and
sub
add
enter
cmp
inc
cmp
jmp
sub
rcr
call
je
xor
jne
nop
and
sbb
retf
add
adc
bound
adc
ror
dec
fistp
add
adc
adc
in
pop
cmp
mov
adc
loope
fadd
dec
lock
and
js
jns
mov
inc
sbb
ret
inc
inc
push
dec
xor
shl
push
loopne
test
jne
mov
add
or
(bad)
mov
adc
add
xor
push
inc
xor
xchg
xchg
xor
push
jnp
pop
cmc
leave
hlt
mov
sub
push
sub
nop
xchg
ja
inc
in
push
cmp
push
popa
and
das
iret
jbe
inc
inc
jbe
pop
stc
inc
not
ja
sub
ret
gs
or
jbe
and
jmp
adc
push
xchg
xor
pusha
sbb
push
sahf
call
jle
test
fdivr
mov
fimul
inc
mov
add
xchg
test
sar
das
sbb
in
bswap
bswap
sub
jmp
int
call
or
je
cmp
xor
ds
xor
mov
or
sub
in
ss
xor
sub
retf
pusha
stos
ss
js
mov
xor
xchg
add
lods
scas
or
jecxz
aam
pop
mov
push
aad
lea
aam
shr
jmp
pop
sbb
push
jae
sub
gs
mov
ret
push
xchg
sbb
(bad)
jl
jge
(bad)
mov
sub
xor
mul
and
push
cld
call
mov
and
jne
call
pop
pop
add
cli
mov
jne
in
pop
sub
jmp
push
adc
sub
js
pop
icebp
movs
jmp
sub
pusha
pusha
mov
sub
inc
popf
xchg
xchg
mov
in
jmp
pusha
inc
icebp
or
jbe
jle
ret
mov
jmp
stos
popa
mov
fiadd
push
jg
mov
ss
xor
repnz
lds
fwait
and
mov
pop
xchg
clc
jb
or
cld
sub
sbb
repz
mov
cmc
lds
ss
rcr
test
fstp
fwait
mov
mov
pusha
mov
cld
pop
xor
test
cmp
inc
out
outs
push
add
loope
and
cmp
pop
jmp
cwde
sahf
push
and
loopne
lods
sub
fsub
cli
fsubr
or
sub
pop
retf
cs
ins
sub
dec
jmp
lods
test
xchg
das
add
adc
add
mov
int
dec
scas
fdivp
arpl
push
push
fsubp
jecxz
pop
sar
sbb
and
inc
add
mov
lods
sti
pop
fcomp
arpl
mov
stos
js
leave
xchg
or
daa
or
inc
add
movs
and
loopne
and
popf
outs
clc
psllq
pop
cwde
inc
and
cld
xchg
loopne
jne
jne
js
add
imul
push
clc
xchg
pop
jmp
pop
adc
popa
enter
test
add
sub
adc
xchg
or
or
cmp
or
mov
lods
xchg
jns
loopne
or
push
mov
cmp
aaa
call
adc
cli
xor
mov
sub
add
lea
add
ja
and
out
jle
shl
sbb
inc
xchg
or
lds
retf
pusha
push
xchg
xchg
push
test
pop
mov
nop
in
cmp
and
lock
clc
mov
test
js
ss
js
test
ror
imul
into
arpl
je
push
outs
pop
pop
xchg
or
pop
repnz
nop
dec
pop
push
je
ret
rcr
pop
arpl
or
arpl
js
pop
jbe
and
dec
push
pusha
jle
sar
div
push
add
xchg
ss
hlt
push
xchg
xchg
xchg
pop
repnz
test
xor
cld
imul
mov
xchg
adc
or
push
loopne
call
cs
call
fcom
mov
stos
mov
or
inc
rol
cmp
pop
movs
mov
sub
inc
pushw
sub
in
xor
clc
lock
jbe
xor
cmp
inc
out
dec
adc
sbb
add
dec
adc
fbld
cmp
cmp
aam
scas
or
or
adc
push
mov
push
cmp
pop
in
mov
shr
dec
int
and
sbb
add
in
push
cmp
nop
add
push
xor
in
jne
mov
(bad)
mov
push
cli
imul
fst
mov
jmp
jae
std
xor
add
push
pop
or
mov
mov
jne
pop
jmp
out
mov
inc
inc
xchg
rol
xchg
and
and
cmps
adc
mov
add
pop
test
daa
in
mov
dec
rcr
(bad)
adc
push
inc
std
movs
xchg
mov
sahf
shl
fadd
xor
or
lods
sub
adc
aam
add
mov
stc
fisttp
adc
add
addr16
dec
push
push
(bad)
mov
je
scas
mov
das
xchg
push
adc
or
imul
sahf
dec
adc
jo
push
cmp
cmp
jmp
out
jmp
dec
inc
pop
cmp
fist
and
xchg
jg
je
xor
mov
add
lea
enter
rcr
fwait
pop
xor
mov
jmp
or
gs
scas
jbe
jnp
adc
leave
adc
push
movzx
or
push
jg
add
mov
fs
pop
or
and
dec
dec
and
xchg
ins
xor
aaa
fdivr
outs
dec
std
bswap
mov
add
imul
add
movs
push
add
cmps
ins
pusha
mov
add
cmp
push
sub
fisttp
cmp
jbe
mov
xchg
sub
or
mov
or
push
add
shl
add
rcl
les
and
push
repnz
pop
xor
or
pop
shr
cmp
jb
mov
ja
sahf
sub
mov
or
lods
pop
xor
and
inc
push
adc
xor
xchg
sub
mov
mov
sub
add
and
inc
test
movs
sub
add
shr
and
fiadd
push
or
mov
xor
mov
and
jne
(bad)
mov
jle
or
mov
cmp
movs
lods
mov
mov
mov
adc
(bad)
ja
sub
lds
(bad)
sub
mov
movs
mov
jae
loope
cmps
out
aam
lahf
pop
cdq
inc
or
daa
dec
mov
pop
sub
jp
xchg
pop
test
xchg
mov
lods
inc
ret
jle
je
repnz
outs
pop
add
sbb
cdq
sbb
sahf
add
mov
retf
fisub
and
xchg
cdq
dec
in
es
movs
push
out
push
mov
call
jne
add
or
adc
and
and
inc
sbb
jg
sbb
dec
push
ins
mov
jae
dec
or
cmps
addr16
jbe
jmp
iret
rol
adc
cdq
or
push
sahf
push
add
adc
outs
fnsave
pop
lods
ror
dec
pop
or
mov
loop
addr16
lods
sub
ja
dec
aam
pop
or
(bad)
addr16
mov
(bad)
push
stc
nop
xchg
mov
mov
(bad)
and
mov
add
(bad)
sub
dec
adc
inc
add
cmc
mov
and
push
mov
add
jo
dec
ret
std
or
push
push
inc
and
test
xlat
pop
ficomp
cdq
mov
pop
(bad)
adc
aam
test
mov
mov
rol
mov
sbb
xlat
mov
stc
inc
dec
jae
outs
mov
and
lahf
mov
add
mov
mov
push
(bad)
repz
pop
fisub
stc
bound
ja
jmp
mul
les
pop
push
mov
and
and
jnp
in
cmp
push
sbb
cld
les
(bad)
into
inc
enter
call
push
pop
push
int
ret
mov
call
inc
xor
lahf
inc
ins
inc
dec
nop
xor
sub
add
and
mov
lahf
adc
or
ins
(bad)
fwait
push
dec
or
in
in
or
in
lock
icebp
repnz
sub
sub
mov
mov
and
xlat
ret
stos
pop
and
inc
bound
stos
inc
imul
mov
or
jg
xchg
or
inc
aas
inc
push
add
mov
nop
mov
stos
mov
es
and
mov
fst
inc
xchg
inc
pop
pop
push
add
sub
nop
add
sti
outs
mov
int
jg
push
in
and
sub
mov
or
sar
mov
test
pop
(bad)
les
addr16
shl
push
inc
or
dec
mov
jnp
movs
cmps
mov
sub
(bad)
lods
movs
fbld
sub
and
gs
cdq
cmp
or
mov
cmps
jno
in
ret
retf
test
cmp
and
cmp
vmovdqu
popf
or
mov
lock
xchg
pop
mov
jo
dec
repnz
(bad)
push
rcl
jecxz
lds
pushf
cmp
loopne
pop
mov
add
mov
lods
call
je
pop
mov
add
lds
dec
sbb
sahf
inc
adc
xor
(bad)
dec
fwait
ja
add
inc
or
jne
mov
or
mov
in
mov
jae
mov
jns
add
add
jmp
sub
std
arpl
cmp
je
or
and
mov
jge
adc
and
inc
and
or
dec
dec
mov
outs
dec
dec
dec
dec
jb
pop
jne
pop
cmp
jle
pop
add
test
xchg
sbb
inc
movs
and
jbe
aam
and
pop
or
xchg
test
out
push
fcomp
jge
fcom
in
inc
and
adc
aad
cmps
add
adc
imul
or
stos
cmc
pop
mov
sbb
addr16
xchg
sbb
push
jmp
jg
je
xchg
dec
push
sub
cmp
or
push
or
jmp
mov
movs
movs
shl
sbb
fisttp
and
mov
mov
inc
pop
jae
mov
jmp
cmp
pop
jo
jmp
pcmpeqd
sbb
mov
mov
mov
mov
pop
mov
jae
bound
add
xor
sti
out
dec
jne
push
xor
jno
(bad)
jmp
pop
push
xchg
xchg
or
sbb
ins
adc
in
and
adc
inc
sahf
inc
movs
and
cld
push
mov
push
inc
push
xor
jns
and
add
shl
adc
pop
xor
adc
mov
adc
(bad)
lahf
data16
jne
das
adc
ds
ins
dec
add
mov
adc
jge
mov
sbb
sbb
mov
je
scas
pop
dec
je
sub
and
rcl
fstp
or
and
xor
adc
and
or
add
mov
and
xor
or
xor
or
aaa
jne
inc
and
or
imul
sbb
or
add
loopne
cmp
mov
or
daa
push
add
(bad)
retf
ret
pop
and
xchg
pushf
inc
push
mov
pusha
push
mov
and
in
inc
pushf
jl
inc
jo
mov
lock
loop
jmp
inc
das
jmp
in
cmps
push
xchg
js
push
mov
or
fadd
xor
fmul
(bad)
jns
push
dec
xor
fist
hlt
adc
push
test
out
mov
popw
cmp
daa
cwde
bound
bound
sbb
or
dec
and
mov
jae
lods
dec
lock
and
xchg
mov
inc
cmp
sub
jo
add
sub
lock
xlat
inc
adc
adc
push
xchg
hlt
popa
(bad)
out
and
jno
mov
push
fstp
out
add
add
jp
xchg
push
adc
push
xor
pop
cli
movs
lods
mov
jno
sub
pop
sbb
repnz
dec
xchg
sbb
ror
(bad)
cmps
sub
push
sbb
or
sub
inc
pshufw
and
sub
or
gs
xchg
retf
or
pop
int3
lds
mov
add
add
push
pop
loopne
ins
sub
or
in
adc
and
mov
cmp
pop
js
cmp
lds
pusha
or
or
and
daa
pop
add
jno
sbb
mov
(bad)
mov
lea
lahf
pushf
add
xor
cmps
sbb
cmc
sbb
sbb
inc
mov
mov
cmp
cld
cli
push
(bad)
inc
adc
inc
dec
and
test
inc
cwde
pop
add
inc
fs
sub
imul
dec
pop
sub
pop
lea
sub
jbe
sahf
je
ret
inc
adc
mov
bound
inc
add
outs
or
fldenv
push
fwait
in
(bad)
push
mov
push
and
mov
pop
loopne
jne
add
cmp
in
add
or
or
lahf
inc
popa
sbb
in
imul
movlps
and
enter
cmp
lock
loopne
int3
enter
out
xchg
hlt
and
lock
xchg
dec
mov
pop
xchg
fsubr
call
jge
lock
call
jo
fcomp
scas
pusha
xchg
in
test
adc
sub
fild
lock
dec
xchg
inc
icebp
movs
arpl
inc
retf
enter
fs
jb
dec
retf
adc
sub
add
jno
add
movs
xchg
push
or
xor
xor
or
xchg
fsub
mov
and
pusha
stos
xor
mov
mov
pop
int3
dec
and
inc
adc
repnz
xor
int3
mov
inc
test
inc
sbb
test
and
xchg
fimul
mov
sar
(bad)
js
mov
call
cmc
(bad)
ins
cdq
inc
std
retf
mov
mov
or
icebp
loopne
mov
xor
xor
dec
leave
add
popa
clc
clc
add
xchg
and
(bad)
fsubp
inc
xor
(bad)
adc
hlt
sbb
and
in
sub
push
stc
and
imul
inc
jg
(bad)
inc
sbb
push
xchg
int
jnp
lods
fisttp
sbb
iret
jnp
jae
lods
or
push
sbb
or
cmp
stos
das
fld
cmp
add
and
in
adc
push
cld
adc
loopne
ja
adc
jmp
fcom
adc
sub
test
pop
push
dec
mov
sub
xchg
add
cmp
aam
or
mov
or
pop
push
scas
je
sub
push
movs
pop
movs
add
xchg
adc
int
mov
mov
mov
inc
fsubr
(bad)
das
sbb
sbb
jmp
dec
dec
cmp
ret
add
mov
add
xlat
cli
call
iret
dec
inc
sub
push
xchg
push
stos
fcomip
and
daa
mov
outs
stos
adc
jns
pop
jae
mov
mov
mov
mov
jecxz
adc
arpl
call
sbb
mov
or
dec
sbb
adc
sub
sub
mov
inc
add
add
jnp
dec
test
scas
or
push
jns
out
iret
xor
xor
call
push
imul
jecxz
jmp
adc
sbb
jnp
and
jmp
sbb
mov
(bad)
jmp
or
xor
jmp
bound
les
retf
test
shl
pusha
or
mov
lea
jge
add
sub
sbb
xchg
sub
pop
adc
hlt
dec
aaa
sub
jb
arpl
int3
inc
shl
sbb
mov
maxps
and
(bad)
lock
inc
imul
imul
add
mov
jbe
lds
jmp
and
cs
adc
sub
fs
dec
aam
sub
xchg
scas
mov
popa
adc
xor
xlat
and
sbb
or
jne
adc
and
fcmovnbe
ds
xor
jp
imul
pop
je
inc
mov
je
push
and
retf
test
adc
or
and
movs
and
push
sub
pusha
push
(bad)
jne
stc
push
stc
into
xchg
xor
ror
push
push
jbe
add
outs
je
(bad)
rol
jnp
jns
pop
mov
out
rcl
out
pop
ret
js
xchg
into
xor
push
xchg
add
daa
je
dec
adc
xor
dec
lds
jl
lock
retf
retf
mov
sub
or
(bad)
lea
inc
das
shl
jle
add
xchg
dec
int
inc
push
dec
inc
cmp
in
push
retf
shl
sbb
aas
imul
ret
not
popa
cmp
into
xor
or
add
pop
pop
jb
ins
push
hlt
in
arpl
pop
adc
rol
mov
add
setbe
loopne
sbb
fs
cmp
dec
push
dec
inc
inc
dec
pop
in
push
adc
mov
mov
ja
sbb
fcomp
ja
mov
add
or
call
mov
cwde
pop
jmp
call
icebp
jae
daa
iret
push
inc
add
add
sub
adc
je
fcmovbe
dec
sbb
aas
fdivr
dec
test
or
pop
add
cmp
cld
push
scas
or
fstp
sub
aas
add
test
call
xor
mov
jne
jne
and
and
cwde
sub
gs
imul
sar
push
mov
mov
dec
test
sub
hlt
inc
xchg
ret
fisttp
lock
sub
lods
(bad)
xchg
test
mov
imul
dec
cmps
or
push
add
inc
inc
jg
neg
push
sub
aad
int3
outs
mov
pop
popa
sbb
push
mov
test
inc
mov
and
mov
and
jo
add
push
push
mov
mov
cmp
and
scas
shl
cmp
fadd
arpl
add
idiv
jne
loopne
pop
pushf
in
retf
xor
in
sbb
fcomp
mov
add
in
les
mov
shr
push
sub
jno
outs
push
dec
aam
dec
mov
(bad)
xor
stc
mov
cmp
fcom
cmp
bound
add
fstp
int
dec
das
xor
pop
cmps
in
shr
je
pop
sbb
jno
int3
xchg
jb
add
xchg
jmp
mov
push
fs
hlt
je
ror
or
push
sub
sbb
(bad)
mov
je
xor
xchg
add
inc
sub
xor
(bad)
jp
add
sti
sub
or
cmps
sbb
inc
shl
add
mov
shr
xchg
and
sub
mov
sbb
mov
into
push
or
dec
add
pushf
pop
ror
(bad)
xor
and
xchg
les
fstp
or
call
and
fimul
xor
pop
mov
cmps
mov
mov
sub
mov
jnp
cwde
add
prefetch
fnstsw
adc
inc
cdq
(bad)
(bad)
fmul
or
jmp
mov
and
sbb
push
sar
mov
jge
adc
stos
pushf
ds
push
mul
jle
dec
lods
pop
push
xchg
lock
ins
mov
inc
retf
loopne
pusha
xor
out
(bad)
(bad)
mov
xor
sbb
ins
and
add
rcr
xchg
push
cmp
ffreep
cmp
or
adc
cmp
cmp
mov
xchg
sub
mov
and
stos
or
push
sub
es
lods
fidiv
clc
cmp
cmp
jns
inc
sub
lea
icebp
fmul
xor
or
and
call
(bad)
cmp
xor
xlat
icebp
pusha
enter
lods
fstp
pop
mov
sub
sbb
pop
mov
xchg
outs
stc
add
add
sub
pop
pop
in
xor
imul
ja
jne
push
adc
into
jp
push
adc
push
push
fldcw
mov
and
adc
ret
mov
push
fadd
fild
cmp
(bad)
cmp
test
xor
xor
push
mov
rcr
fwait
sub
adc
adc
add
je
sbb
into
xor
push
mov
mov
cmp
ret
cs
(bad)
push
arpl
(bad)
call
loope
and
push
cmp
adc
dec
and
call
sub
enter
out
arpl
push
test
cmp
xor
ja
aas
mov
pop
movs
inc
(bad)
jmp
inc
adc
sbb
popf
not
sbb
adc
push
cdq
es
test
xlat
sub
xchg
loop
nop
pop
adc
lock
jno
add
stos
sub
loope
rcl
sbb
push
adc
xchg
jbe
adc
shr
inc
or
pusha
mov
inc
mov
inc
or
sahf
xor
xchg
push
addr16
rcr
lock
or
or
adc
loop
rol
mov
popf
loop
sub
movs
call
mov
push
xor
ds
(bad)
push
and
iret
repz
(bad)
push
or
stc
movs
out
ds
outs
cmps
push
loope
dec
adc
or
inc
adc
jmp
cld
push
jmp
fs
jne
loopne
jne
and
fidiv
jne
fs
sahf
and
loopne
out
mov
add
dec
cs
fcomp
aam
dec
es
sar
dec
jle
int3
enter
jle
(bad)
in
jmp
outs
(bad)
sar
rol
xchg
dec
jle
mov
sbb
(bad)
in
mov
cmp
mov
cdq
out
repz
dec
test
or
mov
(bad)
loope
push
mov
xor
push
xchg
call
popa
xor
jo
add
mov
or
popf
pop
stc
and
push
dec
mov
aas
and
jne
out
arpl
dec
inc
dec
xor
inc
adc
adc
inc
lahf
rcr
or
mov
mov
cmps
pop
and
mov
sahf
add
or
imul
(bad)
add
xlat
scas
add
inc
sbb
mov
xchg
call
pop
ret
sbb
jb
mov
adc
add
out
out
and
inc
rcl
repnz
jae
or
adc
mov
sbb
out
adc
retf
inc
inc
cmp
sub
sbb
(bad)
mov
adc
or
loopne
xor
mov
jecxz
sub
daa
or
or
push
loope
xor
fsub
jmp
icebp
inc
jmp
dec
mov
ins
and
add
add
out
mov
mov
je
mov
jne
push
push
fs
pop
mov
sbb
mov
mov
and
scas
ins
ret
dec
and
sub
movs
shl
aas
xchg
rcl
xor
cwde
mul
outs
or
inc
icebp
and
sub
gs
stos
retf
jmp
loopne
sub
jnp
ret
pop
gs
aad
or
xor
cmp
stos
mov
gs
jno
mov
jl
mov
add
push
outs
fstp
or
aas
xor
jmp
cmp
stc
adc
push
sbb
neg
or
ins
add
imul
cs
adc
sub
or
jg
call
sub
es
outs
xor
sahf
sbb
add
sahf
adc
mov
add
xchg
ins
jo
adc
clc
and
sub
fucomp
fld
adc
ror
outs
xor
popf
fadd
test
or
cmp
mov
sbb
fadd
lahf
sbb
sub
jns
mov
mov
imul
jo
cmp
push
and
test
je
leave
or
stos
test
adc
sbb
mov
or
mov
mov
mov
loope
test
dec
pop
xor
adc
jnp
inc
mov
lock
inc
inc
sbb
sub
fiadd
push
jbe
add
scas
dec
fild
push
aad
inc
(bad)
push
js
add
sub
pop
popa
and
(bad)
and
xchg
mov
and
out
xor
adc
fld
adc
dec
cdq
sub
gs
fidivr
add
mov
xor
mov
in
in
(bad)
xchg
sbb
inc
pop
call
or
out
and
xor
out
dec
js
add
sbb
and
pop
mov
ret
cmc
in
neg
xchg
lea
pop
push
mov
xchg
(bad)
jae
mov
nop
inc
loopne
(bad)
aaa
mov
and
(bad)
pop
cs
paddw
(bad)
mov
push
sub
call
mov
fcom
or
cmp
add
push
jge
ret
repnz
pop
mov
sub
cld
into
add
mov
add
pop
and
pop
push
adc
(bad)
jne
jmp
mov
push
in
mov
push
mov
in
push
lods
jmp
dec
mov
push
push
gs
jnp
xor
sbb
aas
retf
loopne
pop
pop
and
xchg
adc
mov
and
add
loop
and
add
dec
dec
lock
out
dec
mov
xchg
add
adc
in
clc
and
ds
call
add
mov
mov
ret
inc
inc
xchg
out
adc
adc
xchg
mov
cmp
outs
jae
adc
fstp
inc
push
clc
cmps
or
out
pusha
(bad)
nop
arpl
dec
pop
adc
xchg
dec
dec
dec
push
xchg
enter
pusha
sbb
enter
ins
je
and
adc
xor
or
sbb
lock
inc
dec
movs
test
aaa
mov
das
cmps
or
dec
pop
mov
into
mov
pop
sub
inc
mov
push
mov
or
outs
outs
jns
outs
jne
add
call
add
dec
shr
mov
movs
inc
inc
cmps
popa
mov
in
lock
shr
dec
test
push
jg
inc
adc
in
rcl
dec
sbb
ror
mov
movs
out
std
pop
and
inc
mov
aas
loop
jae
and
jp
jo
xor
dec
add
fstp
inc
jb
push
in
ret
dec
add
imul
pusha
xchg
or
mov
je
xchg
xchg
mov
mov
jmp
sub
cmp
push
pop
stc
cwde
sbb
stos
je
dec
call
inc
outs
xchg
inc
inc
ja
outs
pop
in
call
in
in
inc
in
adc
arpl
loopne
iret
repz
push
ret
movs
jmp
ds
repz
loope
xlat
adc
jns
out
sbb
pusha
jno
out
cmp
(bad)
mov
add
pop
fs
inc
sahf
add
and
cmp
fdiv
hlt
push
mov
add
sub
or
push
aaa
jp
mov
or
loopne
cli
pop
das
inc
test
inc
dec
dec
scas
sbb
dec
or
ficom
pop
add
xor
push
mov
pop
ss
(bad)
push
and
inc
addr16
cmc
stos
xor
push
neg
pushf
sbb
outs
and
push
outs
mov
pop
inc
jl
add
sbb
push
data16
dec
xchg
push
ins
jne
imul
pop
call
xlat
pop
out
hlt
pop
dec
add
in
lahf
enter
movs
repz
adc
movs
cmp
sbb
les
ror
cmp
arpl
mov
sub
dec
pushf
pushf
and
adc
test
sbb
enter
out
sub
xchg
sbb
outs
xchg
ret
adc
loopne
xchg
jb
out
xchg
nop
out
js
out
jo
jns
push
in
clc
cmp
in
hlt
pop
movs
ins
pop
hlt
adc
adc
add
(bad)
mov
movs
and
pop
cmp
cmc
cld
test
in
fmul
dec
in
stc
add
clc
hlt
xor
nop
nop
repz
mul
test
sahf
out
fidivr
push
inc
sbb
sahf
out
ins
dec
test
sahf
out
lahf
ja
mov
in
(bad)
shl
xor
mov
push
iret
repz
pop
and
xor
repz
pop
outs
jns
cmp
repz
rcr
and
jae
outs
call
inc
and
add
(bad)
in
outs
and
cld
xor
stc
jg
xchg
xchg
ins
stos
outs
test
sub
into
fist
xchg
push
sub
test
(bad)
leave
xor
cli
push
test
jae
cmp
cli
movs
push
and
mov
ins
jp
cdq
push
push
push
imul
pop
adc
test
aad
sar
cmps
or
lods
ins
inc
dec
cli
in
and
loope
imul
fisttp
adc
(bad)
mov
(bad)
pop
clc
mov
movs
sub
jo
and
loopne
add
jecxz
or
sub
jne
and
bound
push
shr
add
mov
push
sub
sbb
add
test
fincstp
adc
mov
xlat
dec
inc
mov
pop
pop
push
push
mov
les
test
dec
ds
xchg
jp
cld
dec
rol
push
adc
outs
fdiv
cmp
idiv
pop
int
int
push
scas
mov
dec
cmp
mov
inc
or
test
test
pop
dec
dec
cmps
add
nop
bound
fnsave
sub
xor
inc
mov
push
sbb
or
leave
push
fnstsw
fadd
add
or
pusha
lock
inc
imul
adc
test
dec
pop
in
nop
shr
test
and
adc
dec
and
cmps
sbb
jecxz
imul
jo
mov
pop
ja
les
add
sub
xlat
mov
ret
loopne
mov
ret
in
or
(bad)
cmps
in
add
push
call
inc
stos
or
repnz
pop
ret
pop
hlt
jg
adc
mov
or
xor
lea
and
jae
push
xor
fwait
cmp
sbb
fs
fsub
mov
das
dec
or
or
(bad)
int
adc
sahf
in
scas
test
jnp
add
dec
nop
addr16
inc
cld
or
leave
add
clc
std
inc
clc
adc
leave
cld
or
sbb
loopne
aas
aaa
or
xchg
add
or
sub
imul
pop
sbb
xchg
adc
inc
add
push
test
sub
inc
aas
ss
lock
sbb
sbb
aam
add
push
jg
sbb
jmp
push
add
add
pop
mov
sub
cmps
inc
loop
sbb
repnz
test
xchg
in
adc
pushf
popa
pop
(bad)
xchg
loope
add
sahf
movs
das
mov
jecxz
and
and
mov
xor
lahf
pop
lock
mov
imul
imul
or
jmp
xor
add
scas
jb
push
test
jnp
sbb
or
dec
(bad)
aad
add
inc
dec
ret
mov
sti
dec
dec
and
cld
inc
pop
jge
fld
dec
sahf
inc
stos
xchg
add
or
inc
daa
cmps
jno
sub
iret
xor
loope
aaa
data16
push
push
cmp
cmp
cmp
jmp
push
(bad)
fld
mov
adc
adc
push
mov
nop
ja
mov
dec
shl
sbb
ja
dec
inc
xor
popf
ins
cld
cmp
jmp
dec
xor
or
jae
adc
cld
pop
push
test
mov
push
and
mov
mov
imul
(bad)
sub
and
dec
mov
lods
adc
ins
pop
aaa
xchg
dec
push
cmp
addr16
add
or
dec
(bad)
xor
pop
pop
outs
inc
mov
adc
(bad)
or
add
das
push
mov
mov
movs
stc
aad
sbb
rcr
jb
push
fs
add
cmps
scas
pop
push
push
mov
jne
push
mov
push
jns
add
inc
repnz
call
sbb
arpl
test
cmp
leave
and
ret
out
aaa
adc
xor
or
stc
push
add
push
jmp
ins
xor
cmp
leave
and
xor
push
add
ss
or
daa
mov
ret
nop
movs
cmp
lea
rol
pop
scas
adc
inc
mov
adc
jne
xchg
hlt
jmp
scas
(bad)
or
push
pop
and
mov
xor
or
imul
mov
inc
popa
add
repnz
inc
adc
jg
inc
ror
push
and
repnz
pop
leave
inc
sub
(bad)
jb
or
add
lods
sub
or
mov
pop
pusha
test
nop
or
sbb
inc
fwait
fs
call
lea
bnd
push
es
repnz
and
movs
add
mov
ins
pop
ja
xchg
or
daa
mov
add
push
mov
mov
xchg
xchg
fistp
adc
adc
xchg
sbb
inc
(bad)
cmp
mov
repz
mov
fsubr
mov
push
dec
adc
retf
daa
lock
or
xor
in
push
xchg
or
aas
jo
ror
sub
mov
imul
adc
ins
add
pop
pop
push
jnp
addr16
jo
and
popf
push
stos
dec
test
movs
push
inc
out
sub
jbe
inc
add
cmp
arpl
cmp
neg
outs
inc
push
aaa
adc
add
push
cmp
jb
(bad)
sbb
push
cmp
neg
jp
push
ss
das
xor
arpl
xchg
add
xlat
jp
mov
mov
rcl
push
fist
xor
or
ss
(bad)
fbstp
or
(bad)
repnz
xor
xor
xor
rol
or
aaa
aaa
dec
in
aaa
sbb
inc
xor
xor
xor
xor
xor
inc
xor
xor
inc
cmp
daa
jnp
xchg
lahf
xor
xor
xor
fstp
pop
ss
es
add
cmp
inc
mov
sahf
ins
push
dec
adc
sub
shl
or
cmps
inc
stos
push
push
out
test
les
shl
stos
inc
add
loop
adc
mov
push
mov
sub
dec
adc
nop
mov
and
jno
push
push
add
pop
aam
push
pop
call
imul
pop
inc
inc
push
inc
add
sub
inc
lahf
jmp
cmps
sub
ror
push
mov
cmp
stos
int
imul
sbb
mov
je
mov
xor
dec
in
imul
fdivr
ins
fmul
push
in
mov
xchg
in
outs
dec
ud0
lahf
push
push
call
jmp
dec
cmp
call
hlt
repz
test
loopne
push
pop
in
aam
xor
scas
adc
inc
les
les
les
or
cmp
add
dec
movs
fsub
add
in
pop
mov
outs
cmp
mov
sub
dec
adc
or
inc
aad
fdiv
arpl
cs
push
jns
jmp
adc
xchg
pop
and
inc
pop
mov
add
jo
lods
xchg
or
test
mov
pop
mov
fstp
mov
in
adc
hlt
cmp
enter
popa
dec
dec
jle
add
push
push
rcl
dec
adc
xor
pop
jb
cmp
adc
push
enter
adc
adc
and
aam
lahf
adc
mov
sub
mov
push
cwde
lock
outs
adc
dec
add
out
mov
sahf
adc
push
adc
ja
pop
or
ins
add
popa
mov
(bad)
mov
dec
dec
out
cmc
push
add
push
and
add
iret
xor
sar
out
in
or
mov
jmp
mov
mov
fisubr
cmp
mov
in
sbb
test
or
in
outs
pop
jle
dec
or
fadd
dec
pop
mov
xchg
mov
stos
jmp
or
nop
dec
stc
or
fild
sub
clc
ja
js
mov
pop
mov
push
clc
jne
mov
jns
je
into
test
fdiv
xchg
push
pop
xchg
xor
pop
inc
lods
outs
aas
loopne
xor
das
xchg
cmp
mov
sbb
cmp
outs
loopne
jmp
shl
mov
sub
adc
or
add
push
push
xchg
add
adc
loopne
pop
push
outs
dec
call
je
ret
frstor
push
sub
add
and
scas
pop
add
int3
xor
(bad)
sahf
inc
add
add
or
adc
addr16
inc
inc
xor
arpl
inc
cmps
imul
inc
push
ins
int
ror
das
pop
or
sub
cmp
inc
pop
imul
xchg
stos
push
xchg
aaa
test
mov
mov
es
popa
sbb
inc
es
sub
and
ins
cdq
test
jb
in
fisub
cmps
ins
movs
jne
inc
xchg
pop
test
ins
rol
leave
mov
sbb
ret
xchg
sbb
jp
and
shl
push
mov
(bad)
push
(bad)
push
stos
add
or
test
dec
stos
xchg
and
into
in
ret
push
sbb
add
call
push
mov
movs
or
and
add
or
xchg
and
and
sub
cmp
ins
dec
mov
scas
mov
adc
mov
mov
adc
stos
(bad)
nop
outs
bound
inc
adc
mov
pushf
dec
nop
sub
xor
add
jo
add
sbb
cmps
enter
imul
lock
sub
lock
cmp
mov
pop
mov
mov
dec
mov
les
jo
or
mov
add
jmp
dec
add
inc
loopne
(bad)
add
dec
mov
nop
pop
movs
lea
imul
xor
adc
fist
pusha
aaa
call
dec
add
dec
pop
movs
jmp
daa
lods
bound
test
pop
dec
xchg
xchg
fidiv
call
pusha
fs
in
cmps
retf
or
pop
cld
sbb
mov
call
lods
push
aam
test
pop
add
fs
aas
push
mov
push
hlt
(bad)
movs
ror
mov
test
sub
jno
push
clc
or
xchg
clc
dec
leave
push
out
jnp
jg
or
jbe
lds
dec
push
test
je
into
push
outs
xor
sbb
add
add
in
push
sbb
push
lahf
adc
sub
xchg
push
push
fs
aaa
lods
ja
js
cld
in
sub
sub
cmps
and
fld
xchg
xchg
ror
and
pop
out
xor
sub
pop
and
das
sbb
popa
mov
in
push
dec
ret
jmp
and
arpl
jmp
inc
push
and
adc
mov
or
pop
frstor
sub
clc
mov
icebp
push
stos
dec
lods
ja
mov
xchg
inc
and
call
mov
mov
rol
cmp
rcr
or
or
lods
movs
mov
xchg
imul
adc
push
mov
outs
bound
push
ins
dec
xchg
scas
sub
sub
or
lahf
xor
adc
or
adc
dec
lods
lods
sub
and
test
add
inc
xchg
cmp
or
pop
push
mov
xchg
push
xor
and
or
fs
push
and
imul
nop
inc
inc
sub
jo
and
popf
out
ins
loopne
rol
rcr
nop
pop
or
jnp
test
fs
imul
push
cs
sbb
push
mov
dec
sbb
in
addr16
jl
mov
out
add
push
push
xchg
cmps
dec
xor
arpl
test
mov
xchg
cmps
fwait
scas
sub
push
cmps
push
les
mov
mov
movs
ins
jge
test
add
int3
scas
fwait
add
xchg
xchg
mov
mov
cmps
lock
clc
mov
adc
pop
or
sbb
loopne
outs
outs
add
lock
pushf
dec
enter
sbb
xor
in
dec
jo
sbb
in
shl
adc
scas
daa
and
mov
dec
or
add
and
mov
jmp
std
mov
mov
jb
in
aaa
shl
mov
and
mov
mov
sbb
inc
sbb
fdiv
sbb
sub
(bad)
pop
pop
(bad)
mov
inc
push
imul
xor
in
stos
add
add
fimul
or
lds
stos
outs
inc
push
adc
sub
mov
das
add
nop
fdivr
or
data16
dec
(bad)
cmp
test
nop
es
shl
jno
xor
cmc
and
inc
or
int3
popa
cmps
sbb
add
rcl
popf
or
mov
aam
sbb
push
aas
add
push
mov
sbb
push
mov
jmp
and
arpl
xchg
add
push
aam
in
inc
adc
mov
lods
pop
mov
xlat
dec
lods
dec
lods
push
pop
pop
cwde
rcl
xor
aad
add
nop
cmc
fbstp
rcl
fisubr
bound
out
ret
and
xor
mov
les
mov
lods
sbb
jl
arpl
cmps
mov
sub
sub
addr16
mov
mov
sbb
add
or
inc
or
xchg
mov
(bad)
or
loope
lods
push
adc
add
xchg
fist
mov
sub
loopne
test
dec
rcr
jbe
pop
ins
push
pop
(bad)
(bad)
jae
pop
mov
(bad)
lahf
or
ss
sub
adc
das
xchg
cmp
outs
(bad)
fs
mov
inc
fmul
adc
inc
mov
shl
jo
and
test
fwait
sub
fild
and
imul
mov
(bad)
mov
fdiv
xchg
icebp
mul
cmp
push
repnz
jmp
push
hlt
xor
iret
adc
adc
cmp
and
test
xlat
lods
cmps
xchg
inc
jne
test
add
cmp
pop
lock
mov
cmps
ins
and
sbb
cmps
fldcw
dec
jp
je
or
popa
sbb
das
shl
inc
pop
mov
add
sub
or
lea
add
sbb
adc
addr16
loope
fstp
cwde
das
shl
jns
(bad)
dec
mov
or
test
pop
mov
mov
cmp
or
cmp
cld
add
dec
inc
adc
sahf
sub
fidivr
test
mov
jl
sahf
adc
inc
jl
or
cs
adc
push
je
and
ss
dec
sub
out
pop
dec
dec
pop
push
in
lods
or
inc
aad
aam
jo
je
inc
mov
ret
dec
outs
push
inc
mov
ret
lods
jne
mov
add
add
daa
stc
sbb
inc
push
out
or
add
mov
mov
xor
in
or
inc
adc
dec
push
pop
icebp
mov
or
xchg
cmc
ins
leave
test
in
push
inc
dec
clc
or
inc
push
or
and
les
push
mov
(bad)
les
adc
adc
scas
push
xor
gs
mov
xlat
jp
inc
add
xor
sub
pop
test
sbb
add
inc
or
cli
xor
(bad)
pop
or
inc
push
pop
mov
les
push
sbb
inc
jmp
mov
xchg
(bad)
int
retf
test
xlat
int3
push
adc
inc
push
test
cmp
cli
dec
jb
sar
cmp
stc
jecxz
jbe
rol
lock
pusha
sub
ficom
mov
add
das
push
xchg
push
jle
loopne
dec
push
mov
adc
cmps
enter
std
pop
adc
sbb
je
cmp
inc
out
fmul
sbb
ins
cvtps2pd
scas
inc
neg
or
lods
leave
inc
push
test
dec
xchg
and
or
inc
inc
mul
dec
sar
out
pop
fidivr
(bad)
das
retf
mov
jo
icebp
add
scas
add
xor
xchg
cs
jnp
popa
enter
sti
cwde
or
outs
icebp
mov
push
nop
jbe
and
call
loope
and
fild
xchg
dec
push
jmp
mov
call
adc
dec
sbb
aam
dec
(bad)
sub
aam
pop
push
ret
xchg
xchg
pop
adc
dec
fmul
sbb
jns
(bad)
movs
or
mov
pusha
dec
mov
(bad)
dec
inc
gs
int
enter
adc
out
xor
fcomp
sub
dec
push
lods
sub
data16
ror
pop
les
test
mov
push
sbb
ins
pusha
inc
jl
ror
or
xchg
cmp
xchg
movs
adc
mov
dec
cmp
adc
fstp
add
pop
mov
sahf
or
int3
test
sbb
and
add
cwde
push
mov
jo
push
cdq
fst
push
sti
adc
xor
mov
adc
mov
pop
cmps
in
mov
xor
and
out
sub
jp
and
out
jge
das
cmp
mov
ins
loopne
daa
dec
and
sbb
outs
or
jmp
ds
push
add
pop
xchg
fsubr
mov
(bad)
and
sub
mov
adc
cmp
cmp
pusha
dec
mov
inc
xchg
or
bound
push
aas
adc
xor
ror
mov
mov
cmps
pop
pop
inc
cmp
jl
mov
hlt
inc
xchg
adc
leave
and
fcmovnu
mov
mov
xchg
fisub
xor
adc
mov
ds
out
stc
mov
pop
xor
fbld
in
lock
sar
mov
cmovs
mov
jns
sub
add
nop
movs
mov
nop
push
pop
mov
mov
inc
mov
cwde
xchg
push
(bad)
dec
lods
push
mov
shr
pop
xchg
cmp
mov
add
in
aas
movs
and
pop
inc
int
pop
add
pop
jbe
add
push
and
jae
mov
mov
popa
cmp
je
and
sub
int
or
js
cs
inc
push
out
pop
sub
mov
sub
inc
and
or
daa
cmps
arpl
and
pop
xor
pop
adc
xor
adc
mov
jo
ret
add
mov
mov
cmp
cs
dec
mov
pushf
jnp
stc
bound
cwde
mov
push
cwde
mov
or
pop
sbb
xchg
mov
ss
gs
mov
mov
mov
pop
xchg
pop
adc
mov
bswap
xchg
jle
adc
enter
cmp
xchg
and
adc
pop
inc
sbb
jo
or
mov
inc
fnstenv
inc
mov
in
ins
addr16
sub
mov
mov
push
test
out
inc
mov
sub
xor
or
test
xchg
mov
call
popf
loopne
pop
ss
add
dec
out
jge
fwait
scas
test
sub
ins
cmp
mov
(bad)
inc
imul
nop
pushf
cmp
or
movs
push
mov
sub
pusha
sub
repnz
add
dec
aas
mov
and
in
xchg
and
and
sbb
adc
sub
add
dec
jnp
mov
ds
jmp
mov
pop
pop
sub
xor
test
or
mov
xchg
es
push
adc
or
sbb
int3
xchg
add
ja
xchg
rol
xchg
and
into
(bad)
jg
sub
adc
sub
jmp
test
add
loope
jg
mov
xlat
xchg
nop
data16
pop
fcom
or
das
jp
adc
dec
mov
push
adc
ins
add
and
and
lock
add
fwait
or
jb
aaa
push
mov
shl
outs
shl
cmp
das
aaa
rcl
xor
inc
and
pop
sbb
aaa
rol
sbb
add
xor
xor
or
inc
sub
pusha
ja
inc
mov
push
push
or
cwde
push
aaa
icebp
sahf
mov
sub
fnstcw
adc
mov
call
int3
fistp
(bad)
jle
cmp
adc
cmps
cmp
pusha
shl
dec
hlt
data16
jle
call
jbe
addr16
adc
dec
push
xchg
pop
call
inc
mov
call
jmp
bound
adc
out
sbb
pop
mov
mov
bound
bound
add
bound
push
cmp
sbb
std
dec
jp
or
dec
outs
jg
xchg
clc
ja
cwde
jnp
lds
pop
nop
(bad)
sbb
aaa
mov
mov
add
jnp
or
jnp
pop
pop
sahf
pop
inc
xchg
ds
adc
jbe
lahf
xor
xchg
push
and
pusha
aad
pop
push
jbe
jg
mov
mov
aas
pop
sbb
int
jo
fldcw
dec
mov
mov
sub
xchg
add
jae
dec
dec
enter
and
mov
daa
movs
adc
cmp
in
(bad)
enter
ror
sti
jl
pop
neg
mov
xor
push
xor
sub
daa
nop
push
nop
ja
xchg
xchg
push
out
sub
jbe
jbe
sub
add
pop
xchg
sub
and
mov
aaa
mov
cmp
dec
bound
adc
mov
fdiv
dec
rcl
push
imul
mov
pop
dec
jae
ins
cmps
pusha
fisttp
ins
popa
jae
mov
icebp
add
mov
aas
pop
cmp
lea
int3
and
test
shl
xor
jecxz
cs
add
jl
and
leave
inc
addr16
fsubr
sbb
add
shl
mov
xchg
jo
push
add
pop
dec
mov
cmp
fst
mov
add
dec
and
or
mov
or
test
inc
icebp
in
stos
adc
mov
mov
mov
mov
ss
mov
mov
sub
push
mov
data16
nop
inc
rcl
ins
aam
mov
xor
imul
sbb
test
and
mov
cmp
sub
push
mov
push
xchg
loopne
ins
jno
mov
sbb
sbb
(bad)
mov
adc
adc
jo
push
or
(bad)
mov
movs
inc
pusha
xchg
adc
(bad)
jmp
bound
fbstp
push
add
xor
xor
enter
loopne
mov
push
mov
scas
mov
dec
shl
push
mov
inc
or
mov
or
sbb
test
outs
push
xchg
add
jno
cli
push
jo
std
mov
mov
in
fcom
add
or
push
or
lods
fs
mov
ret
outs
arpl
test
xor
lock
lock
pop
push
sbb
lock
out
icebp
aad
jecxz
aad
mov
(bad)
cld
adc
test
or
add
dec
mov
ret
dec
and
imul
rol
push
and
mov
dec
adc
push
lds
mov
pop
pop
xor
push
pop
push
and
mov
jae
add
das
adc
retf
cs
and
outs
fs
nop
xchg
lods
aas
push
out
test
inc
int3
movs
inc
scas
push
mov
es
les
sbb
dec
xor
mov
push
data16
lods
jmp
add
out
dec
sbb
xor
fcomp
xchg
push
es
sbb
add
popf
dec
mov
mov
xchg
enter
in
xor
ins
jl
sbb
pusha
add
xchg
push
mov
test
push
lahf
mov
adc
add
dec
xor
rol
xor
and
adc
push
shl
stos
mov
and
mov
shl
cwde
or
add
mov
xor
adc
nop
(bad)
mov
scas
xor
mov
mov
sbb
sbb
or
inc
dec
add
and
mov
dec
ret
sbb
xor
sbb
aas
arpl
push
push
jo
mov
mov
push
pop
xchg
add
dec
and
cld
sbb
mov
sbb
mov
icebp
inc
mov
outs
ror
adc
out
lea
dec
jg
jle
fimul
pop
sbb
pop
or
or
push
test
out
and
xchg
aaa
pop
bound
sbb
je
xor
ins
jnp
ss
cld
mov
mov
or
pop
loope
out
add
pop
cmp
inc
shl
aam
xchg
xchg
and
adc
nop
push
or
xor
daa
out
les
aaa
dec
push
imul
clc
sub
add
jmp
jmp
adc
inc
jmp
mov
jne
push
sbb
pop
sbb
ror
fdiv
loopne
pop
pop
cmp
ds
push
fs
daa
movs
adc
mov
jnp
or
test
xchg
adc
xchg
repz
push
xor
fistp
fwait
icebp
out
sbb
test
mov
inc
cmp
and
adc
pop
lock
mov
push
loopne
mov
push
push
add
push
dec
leave
add
or
xchg
outs
repz
icebp
dec
sti
push
add
pop
loope
jmp
movsx
jg
add
push
rcl
mov
cmp
inc
sbb
lds
sti
push
ss
icebp
cmps
nop
int
cmp
cld
ss
and
hlt
inc
push
sbb
es
sub
cmp
push
call
and
push
out
scas
add
sahf
out
sahf
or
cmp
iret
jg
add
xor
jns
inc
xchg
push
cmp
cmp
cmp
cmp
cmp
mov
(bad)
cwde
inc
xchg
scas
mov
nop
cmp
cmp
mov
cmp
push
xor
daa
and
outs
add
jns
dec
dec
mov
dec
dec
mov
(bad)
adc
jns
dec
push
mov
add
or
dec
add
je
dec
in
repz
rcl
push
xchg
(bad)
adc
cmp
call
add
xchg
mov
out
scas
pop
and
icebp
stos
pop
inc
js
jno
and
push
push
shl
inc
aaa
rcl
(bad)
rcl
mov
and
pop
je
aam
fisttp
outs
out
push
inc
rcr
add
add
sbb
xchg
icebp
mov
das
add
mov
lahf
sbb
cmp
pop
sbb
mov
movs
mov
iret
aam
jno
push
pop
jge
test
femms
sub
add
loope
addr16
or
pop
cmp
pop
(bad)
enter
and
movs
sbb
mov
jo
adc
lahf
outs
(bad)
inc
enter
push
ds
adc
ja
in
pop
ds
je
das
clc
lea
adc
xchg
add
scas
xor
dec
pop
adc
mov
add
imul
cmps
mov
mov
adc
xchg
jg
or
add
push
sub
aas
(bad)
jle
adc
mov
out
mov
mov
add
pop
dec
or
ret
aas
push
pop
push
ss
retf
and
add
adc
inc
outs
add
push
pop
xor
add
sbb
push
inc
outs
adc
(bad)
into
sbb
inc
and
jno
add
gs
stc
or
jp
iret
xor
or
sub
inc
clc
call
sbb
cmp
or
mov
xchg
sub
add
enter
xor
and
and
loop
and
dec
mov
sub
and
nop
push
mov
mov
dec
xchg
xor
xor
es
push
ins
mov
pushf
hlt
fs
pop
mov
das
ins
jbe
adc
shl
pop
aam
inc
push
xchg
xchg
loopne
adc
pushf
arpl
jmp
imul
add
test
jecxz
je
mov
dec
add
add
in
inc
fisttp
xor
imul
test
sbb
inc
pop
lock
sub
or
sub
mov
inc
sbb
arpl
movs
inc
ins
add
sbb
pop
xchg
fmul
outs
stos
inc
dec
sbb
add
sbb
imul
and
add
add
add
and
or
ror
loopne
dec
in
dec
dec
push
dec
inc
clc
add
fmul
add
push
sub
lock
mov
aas
aaa
adc
aam
cmp
sub
add
retf
ret
add
xchg
aam
aam
sbb
add
pop
dec
pop
ror
fnop
ror
xchg
fistp
mov
das
mov
sbb
jmp
seto
xor
xor
and
shl
in
add
sbb
enter
push
mov
out
sbb
loopne
scas
and
ds
jmp
movs
xor
loopne
and
xor
jb
popa
jle
daa
es
add
inc
aas
inc
or
mov
cld
fwait
lock
pop
xor
adc
inc
inc
lahf
xchg
push
mov
xchg
pavgb
dec
cmp
dec
xchg
pop
imul
pop
repnz
inc
jbe
sub
cld
adc
jb
push
xlat
test
leave
or
or
sbb
aam
ins
add
sub
sar
fnsave
or
adc
sbb
push
or
mov
inc
test
pop
loope
and
lea
js
mov
push
call
inc
dec
cmp
sbb
add
and
xor
gs
repz
xor
sub
enter
inc
ficomp
or
sub
cmp
movs
sar
pop
aad
pusha
xchg
mov
or
sub
mov
loope
(bad)
pusha
or
inc
scas
movs
stc
push
mov
fdiv
shl
test
add
push
div
sbb
dec
and
cwde
mov
jae
pop
sbb
dec
dec
aad
rcr
or
push
add
das
xor
adc
inc
mov
rcl
or
aaa
or
add
nop
daa
movs
push
jmp
dec
dec
fiadd
xor
clc
and
xor
and
push
jo
and
xor
inc
dec
dec
adc
sbb
dec
or
sbb
jmp
push
mov
cmp
fcom
ins
(bad)
dec
(bad)
aaa
or
inc
out
sub
xchg
nop
add
and
add
or
sbb
adc
dec
xchg
xor
xchg
dec
dec
test
sbb
inc
mov
popa
pop
adc
xor
push
in
mul
jnp
push
add
dec
push
mov
cmp
neg
add
add
mov
cmp
mov
mov
int3
inc
shl
cmp
xchg
pop
pop
push
push
adc
cmovp
push
stc
pop
in
sbb
daa
aaa
sbb
mov
xchg
jge
aam
ret
imul
inc
neg
ret
popa
and
cs
inc
ror
and
add
xchg
dec
dec
fcom
pop
mov
xor
sub
iret
dec
orps
retf
push
jmp
nop
or
cli
pop
(bad)
xlat
push
nop
push
push
mov
inc
enter
pop
jo
dec
mov
adc
adc
aas
ja
(bad)
add
push
sbb
ficom
dec
out
pop
xchg
add
push
je
test
in
xor
popf
out
push
inc
ror
dec
sbb
add
pop
mov
xchg
pop
dec
or
and
es
sbb
xor
cmp
mov
imul
mov
call
stos
mov
inc
dec
sub
inc
sub
fs
add
pop
dec
pusha
ins
ret
and
test
jb
outs
(bad)
sub
dec
aaa
xchg
add
mov
mov
mov
(bad)
out
sbb
and
or
push
addr16
and
mov
add
xchg
xor
add
pop
fimul
retf
outs
ds
psubsw
jmp
dec
iret
shr
test
cmp
sbb
fnsave
inc
push
push
call
lahf
push
push
dec
inc
not
(bad)
addr16
cdq
dec
xor
fwait
push
jne
retf
inc
xor
ss
adc
inc
add
push
sub
jecxz
fs
or
es
ss
dec
dec
add
pop
pop
or
fild
cmc
dec
jae
jb
div
clc
stc
(bad)
lods
add
dec
js
mov
(bad)
and
inc
dec
in
adc
ds
loopne
sbb
dec
es
xor
dec
sti
rol
dec
repz
mov
or
mov
in
push
pop
push
mov
ss
mov
pop
outs
push
bound
cmp
int3
and
test
arpl
fsubr
ins
rcr
cmp
sub
jbe
mov
cmp
sbb
loopne
lock
daa
hlt
push
fs
movs
cmp
xor
fs
into
sbb
adc
mov
inc
xor
add
sbb
add
and
jl
fsub
hlt
fadd
push
in
lock
dec
or
repnz
add
adc
outs
in
and
lea
xor
and
sub
outs
sbb
pop
xor
add
push
fs
inc
push
mov
mov
sbb
sub
repnz
add
ins
lock
outs
or
xor
add
ror
sub
push
fs
sub
lock
cmp
adc
add
nop
sub
dec
or
icebp
and
out
in
add
push
push
cmps
pop
push
sub
out
sahf
add
jno
inc
jns
out
cmps
mov
jle
imul
push
and
push
fdivp
xor
out
clc
int3
push
fucomp
iret
repz
mov
jle
cwde
movs
cmp
repz
cmp
sahf
out
jno
push
movs
mov
sahf
idiv
adc
push
sub
out
cmp
pop
ins
imul
sub
mov
sahf
out
in
dec
iret
repz
xchg
mov
adc
repz
js
or
jnp
mov
ins
ss
adc
shr
jmp
mov
out
add
sub
sbb
xchg
dec
rcr
les
in
enter
int3
sar
dec
push
add
adc
rcr
push
aam
jns
add
jg
outs
fadd
lahf
or
sbb
add
push
or
push
lock
or
in
mov
xor
push
pop
xchg
sub
repnz
dec
cmp
xchg
jg
push
lods
outs
dec
pushf
jl
add
pop
dec
dec
push
in
xchg
jo
jl
dec
add
jns
outs
dec
fsub
loope
add
dec
je
cs
cmp
loope
outs
sbb
xchg
lock
jns
lods
loopne
les
add
clc
lds
push
test
js
sbb
mov
test
dec
mov
not
sub
(bad)
repz
mov
jmp
cmp
out
push
cld
pop
jns
push
cmps
fld
push
sbb
or
bound
or
fsub
sub
adc
push
arpl
push
jns
out
mov
sub
repnz
pop
dec
jae
rol
add
jne
lods
pop
mov
fldenv
mov
adc
shl
shr
das
lea
xor
mov
(bad)
fiadd
out
imul
pusha
pop
lahf
mov
mov
xchg
add
pushf
(bad)
xor
adc
xchg
mov
sahf
jmp
inc
xchg
arpl
cs
fwait
pop
pop
pop
cmp
rcl
out
call
fs
daa
fadd
scas
test
adc
pop
adc
adc
inc
xchg
and
imul
sbb
dec
(bad)
jg
loope
dec
inc
dec
sbb
and
push
mov
pop
cmp
add
out
sub
les
mov
or
sar
mov
dec
and
sub
mov
aas
xchg
sub
sbb
add
cwde
or
and
mov
or
mov
cmp
arpl
sbb
cmp
pushf
gs
inc
cs
cmp
dec
cmps
test
pushf
and
outs
push
mov
ins
lods
in
retf
mov
xchg
dec
fistp
in
inc
push
xchg
jo
shr
ret
mov
fwait
les
outs
mov
jnp
xor
pop
ins
lods
(bad)
xor
inc
inc
add
test
cmp
ins
jl
je
xor
jbe
jnp
scas
je
add
aam
push
rcl
adc
xchg
add
xchg
sbb
leave
mov
movs
and
sbb
pop
mov
pop
pusha
loope
add
loopne
push
call
mov
fld
mov
cmc
add
pop
adc
jmp
(bad)
xchg
xchg
sub
mov
mov
sub
(bad)
cmp
mov
push
call
jl
mov
inc
push
call
(bad)
loopne
adc
addr16
inc
fimul
jo
push
fisttp
sar
mov
cwde
adc
inc
pop
and
and
xchg
adc
adc
dec
rol
xlat
addps
cmps
in
dec
mov
push
or
mov
leave
pop
or
sbb
xchg
test
int
jno
leave
or
clc
or
jae
mov
adc
xchg
cmp
cmp
gs
xor
jnp
cwde
ins
data16
gs
das
inc
push
pop
je
inc
call
pop
outs
mov
adc
cld
mov
and
push
add
js
hlt
pusha
pop
sbb
cld
push
cmp
xor
pushf
pop
imul
and
popa
dec
cmp
es
mov
dec
hlt
jge
shl
add
adc
into
inc
mov
clc
das
mov
repz
pusha
lea
xor
aaa
push
bound
push
add
or
std
add
add
inc
sahf
sub
jmp
and
fadd
addr16
jne
imul
xor
les
sub
mov
and
fistp
sub
nop
sbb
pop
jecxz
stc
or
add
jne
add
cld
retf
ror
sub
xor
pop
lods
mov
pop
jle
dec
pop
jg
into
bound
add
cmc
aad
enter
jns
mov
pop
ss
jno
sub
fdiv
rcl
add
push
cwde
mov
in
inc
jb
outs
mov
test
add
sbb
test
aas
jl
mov
cmp
popa
xor
adc
in
bound
fld
mov
or
(bad)
iret
adc
adc
aaa
xchg
jb
popa
push
xchg
stos
into
arpl
mov
mov
std
enter
inc
and
add
xchg
adc
mov
jmp
mov
std
xchg
cmp
push
xchg
pusha
adc
loope
xchg
inc
fcom
aad
dec
and
adc
cmp
xor
fmul
inc
iret
push
cmp
in
cmp
mov
or
test
dec
sbb
sahf
movs
add
sub
push
nop
in
pop
mov
aaa
mov
ja
stc
loopne
outs
ror
dec
(bad)
mov
pop
shl
sub
mov
cmp
or
pusha
pop
in
add
movs
cmp
jo
and
inc
dec
cmp
hlt
xor
sbb
add
lea
push
or
mov
in
gs
jecxz
push
mov
ins
pop
cmp
xchg
jo
sar
cwd
add
push
cmp
xor
dec
mov
add
and
sbb
test
mov
push
adc
nop
xchg
inc
pop
pop
dec
xchg
xor
cwde
inc
lahf
mov
enter
sbb
js
inc
test
push
out
mov
xchg
adc
inc
dec
test
cmovl
mov
dec
adc
sub
aas
cmp
addr16
lds
fnstsw
fwait
ss
in
sub
and
or
or
icebp
pminub
cmps
push
mov
outs
dec
rcl
cwde
xchg
xchg
(bad)
call
je
inc
cmp
jne
stos
jmp
adc
cld
sub
xchg
sub
inc
push
sbb
movs
inc
adc
lock
rol
clc
add
pop
mov
xor
(bad)
cli
sbb
inc
(bad)
jge
pop
nop
cdq
pop
mov
cmp
cmp
lods
mov
(bad)
xchg
sbb
outs
add
add
mov
loope
inc
or
sbb
fild
in
mov
popf
xchg
scas
iret
movzx
nop
sbb
jl
xchg
(bad)
dec
outs
push
push
sbb
push
or
xor
mov
dec
push
pusha
mov
cmp
xchg
sar
push
frstor
xchg
dec
ins
push
imul
push
push
loopne
leave
mov
sbb
mov
inc
movs
or
add
xchg
sbb
shl
xchg
cdq
es
xor
inc
rol
daa
adc
inc
push
lds
jns
dec
mov
xchg
das
or
xchg
xchg
cmps
lock
add
mov
jle
or
or
dec
je
nop
les
mov
pop
and
mov
push
mov
jo
or
or
ins
mov
pop
xchg
xor
retf
and
getsec
sub
mov
pop
inc
add
ins
add
aas
sahf
lea
mov
cmp
ja
and
fmul
mov
(bad)
sbb
sub
add
dec
repnz
call
call
mov
pop
inc
inc
sbb
std
out
das
add
push
lea
push
push
cld
cmp
repnz
inc
je
sti
imul
outs
cs
ins
mov
lock
adc
icebp
add
dec
xchg
push
rcl
sbb
or
jp
jmp
mov
and
and
jmp
inc
(bad)
stos
mov
test
call
push
xor
dec
pop
xchg
mov
aaa
fs
aaa
inc
loop
dec
jle
jmp
sub
sub
pop
mov
xor
dec
push
outs
pop
dec
dec
pushf
dec
or
jb
dec
in
mov
scas
add
jmp
adc
jnp
xor
fisttp
jmp
outs
xlat
mov
xor
push
fisub
je
sbb
inc
mov
call
cmp
jne
icebp
loope
xor
scas
xchg
cmp
mov
dec
call
or
fild
dec
adc
or
dec
xor
test
test
dec
pop
js
sbb
dec
shl
sub
clc
dec
jae
js
sub
jge
cmps
add
nop
inc
pop
or
sub
pop
cmp
lea
mov
dec
(bad)
jg
ins
cs
dec
dec
sar
inc
mov
mov
or
or
add
aaa
adc
dec
arpl
sahf
ja
daa
test
jo
xor
jne
mov
inc
test
call
fcom
or
pop
fsub
std
push
test
or
mov
call
repz
or
inc
lods
rcl
push
and
fs
fild
or
or
xor
xchg
clc
pusha
movs
sahf
inc
les
lds
inc
ror
mov
jl
ret
ss
dec
xchg
loopne
pop
div
pop
pop
mov
jmp
mov
into
xchg
and
ret
mov
or
iret
jbe
bound
outs
or
adc
arpl
xchg
lock
mov
mov
and
ins
mov
nop
into
sub
movs
jo
pop
xor
sbb
sti
xor
imul
jg
push
lea
or
cmp
bound
nop
shl
dec
mov
jmp
push
xor
add
inc
mov
pop
dec
dec
pusha
loopne
je
inc
mov
jae
fwait
jo
ror
jo
sub
cmc
sub
or
inc
mov
sbb
out
pop
nop
adc
or
adc
bound
inc
jb
xor
add
jns
dec
sub
push
jo
loopne
push
cs
xchg
hlt
xchg
push
lock
push
push
xor
inc
sub
xor
inc
ja
repnz
mov
dec
xlat
sahf
sti
or
mov
adc
cdq
sub
dec
repnz
rol
arpl
jns
jo
pop
cli
add
add
or
mov
jo
pop
adc
loope
push
mov
adc
das
sbb
stos
push
aaa
int
shl
mov
sbb
clc
cld
clc
loopne
dec
cs
sbb
xchg
inc
int
adc
or
enter
jno
pushf
loop
and
or
adc
icebp
xchg
push
mov
xchg
cmp
pushf
retf
push
cmp
daa
inc
inc
add
fimul
adc
xor
rol
adc
adc
xchg
test
add
js
movs
inc
and
adc
or
pop
cmp
pushf
inc
pop
and
dec
cld
test
mov
aam
shl
jns
fadd
adc
xlat
and
dec
repz
les
dec
push
mov
push
dec
and
mov
pop
bound
inc
inc
lock
cmp
pusha
push
sahf
pop
ins
jae
inc
mov
pop
xchg
shl
jae
inc
add
xchg
gs
jo
inc
shl
and
cmp
xor
sbb
test
jmp
out
mov
adc
ins
xchg
xor
shl
sbb
and
pop
adc
cmp
cmp
pop
sub
and
das
mov
mov
adc
xor
inc
stos
lds
imul
sbb
xor
leave
pop
jbe
pop
stos
fiadd
add
pusha
fmulp
pusha
jmp
pminub
leave
jge
sbb
push
pop
repnz
cmp
ins
sub
fcomp
in
stos
sub
loope
adc
sub
push
pop
and
xlat
xor
add
repnz
mov
jmp
xor
inc
add
push
and
popa
in
mov
(bad)
in
sbb
dec
js
and
mov
rol
add
push
mov
add
and
sbb
mov
adc
mov
je
sti
outs
adc
loopne
std
pusha
fsub
add
jne
push
dec
jns
movs
and
test
xor
(bad)
cs
or
cdq
pop
nop
aam
rol
ja
cmp
mov
ret
add
mov
ja
or
call
cmps
aam
push
or
jp
or
or
adc
xchg
test
pop
adc
sbb
pusha
cmp
mov
push
or
cmp
es
or
or
inc
push
nop
cmps
mov
sbb
push
or
out
adc
jecxz
loop
mov
dec
imul
leave
inc
inc
cmp
and
mov
xor
cld
inc
push
clc
sbb
pop
add
jl
sub
sub
imul
sub
push
add
test
inc
js
test
or
xchg
adc
push
rol
cmp
in
mov
push
add
fisttp
cmp
ins
or
mov
adc
rcr
inc
inc
push
push
jne
sub
sbb
sbb
or
mov
xchg
sub
lock
adc
call
(bad)
xlat
add
stos
adc
sub
xor
clc
add
add
mov
(bad)
or
pushf
mov
adc
pop
or
bound
cmps
shl
imul
adc
mov
sar
ins
mov
and
retf
ret
or
jns
mov
and
adc
or
retf
and
mov
pop
jp
sbb
fild
mov
pop
bound
mov
xchg
jp
movs
inc
xchg
push
pop
jnp
xor
rol
push
push
or
jo
inc
mov
clc
cdq
mov
push
mov
inc
movs
shl
cmp
(bad)
push
mov
sbb
nop
std
nop
dec
aam
and
dec
cmp
add
sbb
out
add
arpl
push
jbe
add
mov
in
fs
in
add
pop
add
add
xchg
add
stc
add
leave
(bad)
sub
dec
jnp
adc
push
xor
sahf
and
cs
sbb
mov
sti
ss
sbb
adc
inc
adc
push
rol
mov
mov
mov
xor
add
(bad)
jb
frstor
sahf
push
sub
push
push
sbb
js
stos
and
inc
pop
nop
and
jecxz
icebp
inc
or
and
outs
inc
pop
(bad)
cmps
rol
jo
arpl
lods
add
xchg
out
mov
outs
add
and
cmps
pop
xor
xor
jo
cmc
out
push
inc
(bad)
and
mov
pusha
loopne
mov
add
imul
xor
xchg
dec
outs
test
and
inc
add
dec
inc
fild
fstp
fwait
inc
add
data16
divps
jmp
fld
fmul
(bad)
add
add
inc
add
aam
mov
xchg
add
lock
rcr
lahf
or
lods
and
inc
fs
sbb
add
inc
mov
jmp
add
xlat
jne
inc
dec
sub
je
mov
rcl
add
mov
js
nop
cs
mov
sbb
ja
outs
push
sub
cdq
arpl
sbb
test
mov
lock
add
test
or
retf
jle
jg
in
loopne
mov
jle
pop
add
or
xchg
cmp
lea
pop
or
aaa
(bad)
push
xchg
push
push
test
mov
ret
add
lods
xchg
cmp
shl
sbb
cmp
and
cmp
adc
pusha
sub
dec
add
mov
out
inc
mov
fdiv
sbb
dec
dec
out
aas
mov
and
push
nop
add
fisubr
and
pop
sub
sahf
popa
and
ins
jecxz
sbb
jnp
es
std
pop
fild
dec
push
jl
in
and
adc
cmp
sub
or
or
(bad)
push
or
and
fmul
push
mov
jmp
les
punpcklbw
add
sbb
ret
and
xor
xor
xor
dec
add
sub
sbb
iret
repz
jne
pop
es
stc
cmp
aaa
pop
cmp
sbb
add
pushf
cmps
rol
enter
push
or
push
jae
iret
inc
es
(bad)
push
lahf
dec
mov
aaa
xor
push
add
or
add
loopne
cmps
mov
adc
xchg
xchg
mov
mov
xor
jmp
jge
pusha
pop
fldcw
inc
punpcklwd
pop
pop
adc
inc
inc
shr
xor
dec
pop
cmp
jge
icebp
adc
shl
mov
sbb
retf
xor
adc
dec
add
mov
aas
pop
arpl
scas
sbb
sub
cwde
je
dec
mov
or
cmps
or
test
push
push
jae
cmp
mov
test
inc
mov
xchg
jl
adc
jno
repnz
movs
test
enter
adc
mov
inc
sar
out
xchg
dec
in
sbb
lds
mov
test
push
and
mov
popf
inc
cmps
(bad)
xchg
and
mov
nop
mov
popf
stc
xchg
adc
xor
sub
test
pop
and
push
aas
pop
(bad)
test
test
sbb
daa
push
imul
or
sub
xor
test
adc
and
dec
(bad)
jno
dec
jo
(bad)
outs
inc
sahf
js
dec
sbb
or
xchg
mov
movs
push
adc
or
cld
sbb
daa
aas
mov
add
or
cld
call
push
arpl
cmps
and
mov
jb
gs
sbb
data16
dec
enter
or
adc
and
xor
je
adc
inc
je
arpl
outs
imul
fsub
das
hlt
jp
adc
fmul
jae
aas
in
mov
dec
xchg
call
and
dec
mov
fisub
mov
inc
aaa
sbb
push
mov
add
cmp
inc
adc
add
arpl
mov
loopne
fidivr
sbb
jg
adc
sahf
idiv
sbb
xor
add
fmulp
mov
push
fs
js
mov
xchg
and
push
dec
inc
or
dec
push
or
dec
mov
call
out
mov
mov
pop
dec
pop
lea
cld
adc
(bad)
mov
lods
or
pop
xchg
not
mov
ret
retf
xlat
xor
add
cs
enter
or
fisttp
ins
xor
adc
xor
das
leave
(bad)
cmp
inc
jnp
clc
pop
pop
inc
aaa
dec
xor
sub
adc
adc
xor
movs
shl
mov
cmp
mov
ins
les
sbb
nop
nop
jns
dec
ret
test
aas
sbb
dec
in
sbb
adc
cmp
inc
or
and
sub
cs
xchg
mov
push
popa
adc
dec
and
cld
dec
add
sti
jl
inc
ficomp
lea
cdq
das
mov
and
out
test
movs
inc
dec
jne
jmp
imul
daa
or
popa
push
fcom
pop
stos
or
cmp
inc
cdq
xor
not
mov
cmp
mov
add
pop
cmp
mov
fnstsw
retf
jmp
xor
lods
sub
inc
sar
push
sbb
push
or
pop
jne
sub
aas
inc
and
loop
push
and
in
jmp
ret
bswap
inc
pop
sbb
mov
inc
or
push
jmp
jns
mov
daa
(bad)
jl
xchg
outs
jl
push
(bad)
fidiv
jp
jp
push
mov
dec
cmp
adc
pop
rol
and
sbb
enter
fnstsw
pop
mov
mov
add
je
add
cdq
xor
and
ja
mov
push
pop
or
jmp
mul
iret
jmp
sti
daa
call
dec
dec
sub
stos
jl
xor
and
mov
push
adc
xchg
xchg
pop
adc
adc
jmp
or
mov
push
pop
lods
push
imul
stos
cmp
jae
fdiv
lods
ret
jno
lods
sbb
mov
inc
ss
loopne
jmp
mov
fdivr
mov
ret
cs
push
outs
popf
cmp
adc
ss
ret
xchg
xlat
mov
and
loope
les
push
(bad)
push
in
xchg
fs
aaa
and
push
daa
or
pop
push
dec
retf
xchg
fild
pusha
(bad)
adc
ss
dec
ins
jns
sahf
sbb
ror
mov
popa
and
nop
add
data16
push
cmp
sbb
mov
push
lods
iret
jecxz
or
inc
inc
dec
adc
test
popf
adc
aaa
loopne
add
push
lahf
sbb
inc
jb
mov
or
or
adc
retf
mov
into
mov
sbb
inc
jge
xlat
pop
dec
sbb
push
adc
stos
outs
mov
lods
xchg
into
push
push
add
and
or
xchg
jo
aaa
int3
cdq
cmps
xchg
jge
add
fcom
jae
dec
fbstp
cmps
sbb
sbb
and
call
inc
jg
adc
add
dec
add
and
or
mov
and
add
cmp
pop
mov
add
xor
fsubr
les
jns
inc
xlat
aam
adc
in
or
adc
cmps
cmp
ins
adc
or
jo
jmp
lods
jg
xchg
mov
inc
jae
jo
add
sub
push
shr
mov
mov
ds
adc
outs
lods
cmps
cmp
std
add
aaa
sub
adc
(bad)
fild
inc
call
fs
pop
dec
outs
jne
push
fild
(bad)
movs
push
and
dec
ins
in
or
xchg
lock
popa
or
out
push
fadd
ret
xchg
sar
push
retf
adc
enter
je
aad
inc
pop
mov
fisub
fld
rol
add
cmp
in
cmps
add
inc
add
lods
arpl
add
lea
sbb
mov
xor
sbb
xchg
push
dec
add
pop
pop
dec
in
sbb
add
pop
cdq
push
ret
or
fisubr
or
dec
xor
jne
loopne
or
mov
jmp
bound
pop
pop
je
xchg
push
(bad)
stos
xchg
sbb
fld
or
scas
add
inc
pop
gs
pop
xchg
push
fisubr
mov
sbb
and
jle
ins
pushf
and
and
inc
adc
stos
iret
sub
fstp
sub
je
nop
sbb
fild
mov
dec
test
pop
xor
inc
test
or
inc
or
loopne
jmp
sbb
and
push
add
stos
ins
push
lock
add
imul
je
and
pop
add
mov
enter
fs
push
popa
mov
test
adc
stc
shl
mov
inc
outs
outs
xor
sahf
inc
call
popa
arpl
mov
push
or
jbe
add
mov
in
fwait
icebp
fdiv
daa
(bad)
in
add
push
dec
xchg
es
xchg
(bad)
xor
or
push
sar
pop
and
outs
mov
addr16
in
pop
mov
punpckhdq
mov
in
or
std
adc
xchg
or
xor
leave
leave
adc
xchg
nop
or
sbb
addr16
and
inc
mov
mov
sbb
sbb
adc
jae
sub
adc
inc
cs
cmp
pop
inc
pusha
jo
push
sbb
dec
pushf
or
inc
xchg
pop
gs
enter
inc
cwde
imul
and
and
sub
jecxz
not
ds
mov
xchg
and
stos
(bad)
leave
aad
xchg
and
clc
xor
dec
add
data16
dec
fwait
mov
es
and
or
leave
rol
es
dec
xlat
mov
mov
xchg
dec
xchg
add
mov
pop
sub
adc
sub
dec
add
sar
les
sub
xor
jno
mov
fimul
and
xlat
add
nop
out
push
pop
call
and
and
inc
sahf
ja
push
lock
test
cmps
mov
stc
inc
add
and
aad
or
cdq
popa
das
xchg
scas
rcr
push
add
mov
or
add
jecxz
dec
adc
xor
cmps
dec
or
push
xor
sbb
add
dec
pop
enter
xchg
push
and
xor
or
ss
xor
xchg
dec
sub
and
stc
inc
xor
adc
and
out
fs
xor
xor
add
pop
cmp
in
jne
ss
xchg
xlat
test
lds
dec
jnp
xchg
inc
dec
dec
cmp
ja
aaa
pop
inc
push
push
cmp
sub
cmp
mov
imul
cmp
pop
in
dec
movs
pop
enter
pusha
cmp
mov
cmp
mov
push
cmp
mov
jo
fs
cmp
iret
cmp
pop
js
cmps
sbb
sub
mov
push
jb
pop
scas
pop
jo
mov
pusha
nop
dec
mov
bound
pop
enter
xchg
push
cwde
cwde
inc
cmp
or
sub
aad
inc
pop
dec
jb
inc
outs
int3
pop
test
test
shl
xchg
and
or
mov
inc
mov
jo
mov
jbe
xchg
cdq
push
rol
les
push
test
mov
ins
enter
(bad)
repz
add
sbb
in
sahf
xchg
ror
cmps
loopne
fld
sub
fmul
xor
dec
cmp
mov
fucom
mov
ss
popf
icebp
nop
loopne
mov
pop
adc
inc
jmp
mov
mov
test
shl
push
pop
ins
int3
push
pop
nop
cld
xor
sar
xor
push
push
add
push
sub
lahf
cmp
mov
mov
dec
cmps
add
xchg
sub
push
mov
(bad)
int3
lods
pop
jp
mov
int3
or
dec
push
jno
dec
movs
je
add
jmp
push
(bad)
or
sar
add
aad
sbb
and
sbb
call
inc
pop
xor
enter
(bad)
rol
sbb
mov
sbb
pcmpgtd
sub
sbb
add
cld
or
cmp
es
cmps
push
pop
ins
jns
out
jns
xchg
mov
out
(bad)
aam
out
cli
out
gs
sti
test
aas
mov
mov
test
mov
sbb
or
out
mov
adc
push
jl
add
sub
fdiv
hlt
(bad)
pushf
call
mov
test
add
pop
dec
adc
push
inc
adc
mov
outs
loope
xchg
xchg
pop
mov
or
mov
jg
xchg
nop
or
mov
out
fiadd
adc
pop
xor
adc
xor
sub
loope
ins
jne
jns
cs
nop
inc
and
movs
pop
mov
jnp
pop
sbb
dec
jne
and
mov
xlat
jmp
lahf
sar
push
dec
pop
jnp
xor
movs
add
push
xchg
fmul
jns
sbb
nop
add
or
rcl
jns
fld
cmps
or
lods
xor
and
mov
(bad)
shl
or
dec
movs
mov
cmp
dec
sub
or
push
fcmovne
enter
fld
sbb
adc
pop
mov
add
test
dec
repz
int
mov
int
imul
add
sbb
lods
daa
xor
lods
cmp
repz
ins
jp
xchg
repz
repz
cmps
stc
cmp
loop
cld
or
sahf
xchg
aam
or
ja
sub
fbld
ja
pusha
jns
xor
fdiv
imul
xchg
cmp
and
xchg
cmp
scas
push
push
add
lods
out
or
push
inc
push
pushf
test
inc
push
shl
mov
mov
popa
adc
add
addr16
aaa
sub
xor
rcl
clc
test
xchg
cld
imul
jbe
add
call
add
fstp
push
sub
iret
call
jecxz
sub
or
add
pop
push
mov
inc
push
mov
add
and
(bad)
shr
mov
add
iret
retf
repz
push
pop
mov
jnp
repz
clc
or
push
inc
add
xor
add
mov
jnp
ret
retf
and
adc
lahf
and
test
add
or
arpl
mov
adc
sub
(bad)
mov
jmp
inc
xor
cs
cmp
leave
adc
add
cwde
cwde
ror
arpl
(bad)
iret
sbb
mov
ja
xchg
sub
cmp
add
adc
sbb
(bad)
cmp
sbb
int
fist
pushf
and
arpl
xchg
fnstsw
mov
imul
dec
lock
out
xor
movs
mov
sar
into
push
inc
push
fs
pusha
pop
sbb
add
add
lea
test
or
add
sbb
push
or
retf
retf
out
or
lock
add
repz
inc
and
nop
and
xchg
xchg
push
dec
pop
inc
ret
xchg
and
inc
dec
pop
mov
add
sub
iret
jns
jo
push
add
mov
or
aam
daa
sbb
test
ds
pop
add
int3
add
jae
fsub
mov
nop
adc
cdq
jmp
mov
xchg
pop
mov
inc
dec
fst
mov
xor
ja
pop
sbb
xor
in
div
pushf
sub
push
sub
ror
je
sbb
test
mov
xor
cmps
xor
xor
sub
stos
loop
inc
je
adc
movs
enter
mov
test
pop
pop
movs
mov
das
sbb
mov
dec
fcmovnb
mov
outs
adc
inc
fisubr
add
sbb
add
sub
xchg
and
cmp
adc
mov
daa
add
add
pop
cli
rol
xor
pop
rol
or
push
fisub
pop
test
rol
add
sbb
and
fdiv
enter
test
add
push
and
sub
push
ins
or
add
xor
mov
and
mov
les
loopne
mov
pop
test
pop
and
push
mov
push
add
push
jne
fist
out
mov
clc
or
js
movs
mov
jne
pop
or
inc
cld
adc
add
daa
ins
sub
cld
mov
imul
add
jmp
or
or
fld
add
enter
out
fdivr
je
push
sbb
mov
lock
sbb
and
push
sbb
or
adc
fnstenv
or
gs
mov
retf
lahf
imul
mov
add
or
xor
or
sti
jge
shl
clc
out
mov
pop
mov
mov
xchg
imul
pop
data16
mov
or
push
cmp
js
and
push
mov
aaa
mov
or
prefetchw
mov
daa
xchg
scas
in
mov
out
sahf
out
pop
mov
push
mov
inc
adc
dec
aam
dec
push
mov
dec
and
or
inc
push
ins
(bad)
dec
add
call
jo
fdivr
sahf
aas
push
add
jbe
mov
(bad)
push
inc
leave
(bad)
not
mov
push
mov
add
retf
sub
adc
inc
dec
add
jo
mov
push
pusha
adc
cmps
pop
inc
stc
xrelease
add
fcomp
mov
sbb
and
mov
daa
mov
adc
sub
ins
into
xchg
ret
push
dec
dec
outs
addr16
nop
(bad)
sub
pop
jo
xor
mov
sub
inc
dec
ja
jne
rol
ret
and
add
pop
or
jle
in
cs
xor
es
inc
and
rol
xchg
mov
shl
adc
cmp
inc
or
mov
(bad)
shr
sar
pushf
cmp
add
sub
add
std
imul
cwde
test
xor
push
sbb
add
mov
(bad)
or
lock
adc
fs
push
and
out
mov
nop
add
xchg
or
rcr
pop
and
push
sbb
(bad)
leave
fisttp
hlt
pop
mov
in
push
sbb
lock
cs
pop
mov
aas
cdq
movs
mov
mov
xor
in
push
fisubr
mov
inc
mov
std
retf
cmp
adc
pop
sbb
js
inc
push
xchg
mov
adc
nop
jmp
cmp
into
or
push
aam
sbb
jo
enter
mov
mov
jae
add
and
mov
lods
shl
jl
icebp
jae
jno
add
in
sbb
sar
and
aad
bndstx
dec
sbb
xchg
je
bound
ss
aaa
push
xchg
lods
cmp
push
or
push
in
mov
scas
dec
cmps
js
jne
les
inc
and
fs
and
aas
or
iret
jnp
adc
jnp
jnp
cmp
cmp
pop
repnz
popf
pushf
mov
pop
mov
xchg
(bad)
xchg
sbb
mov
cmps
or
test
lea
add
adc
add
inc
movs
nop
popa
or
mov
jb
popf
rcl
cmp
pop
or
rcl
xchg
les
fisttp
inc
addr16
mov
push
imul
pop
imul
mov
mov
xchg
push
fisub
push
stos
inc
repz
or
mov
in
mov
jle
imul
sbb
xor
xchg
ret
pop
adc
xchg
push
add
sbb
or
mov
mov
sbb
or
mov
jmp
das
arpl
inc
fs
mov
push
add
sbb
les
mov
mov
setne
in
lods
arpl
inc
ret
or
mov
mov
ss
mov
xor
and
push
ds
loopne
fs
push
push
cmp
jae
pop
xchg
aaa
pusha
cs
call
jo
add
adc
les
outs
aaa
mov
push
pushf
scas
pop
inc
fwait
sahf
sahf
ja
sbb
or
push
add
cmp
lock
rcr
sbb
arpl
cmp
add
shl
add
xor
cwde
or
fwait
cwde
or
mov
xor
or
rol
inc
xchg
leave
daa
or
(bad)
nop
les
pusha
jo
add
outs
mov
hlt
sbb
xchg
adc
xor
fs
adc
jge
or
add
dec
call
xor
jb
push
movs
mov
jl
gs
fmul
add
mov
in
inc
sbb
test
sub
inc
fcom
aaa
xchg
test
ds
mov
push
xor
xor
daa
fdiv
jns
test
enter
cmps
retf
push
test
outs
or
lea
bound
pop
mov
push
daa
dec
leave
js
mov
cmps
outs
add
adc
mov
sub
xchg
popf
in
and
push
sbb
fcomp
aam
sub
xchg
test
out
or
jmp
clc
call
leave
inc
lods
adc
sub
mov
push
fcmovb
sub
pop
sbb
fwait
in
mov
push
push
pop
cdq
mov
or
and
loope
pusha
sbb
out
and
adc
push
or
out
pop
inc
mov
cmp
test
mov
mov
sbb
add
mov
int3
ret
inc
mov
mov
or
js
fdiv
lock
xchg
popa
(bad)
in
in
jo
rol
ins
mov
push
adc
add
mov
pop
adc
and
inc
test
fisubr
(bad)
loop
(bad)
push
test
adc
xchg
and
mov
call
test
sbb
fcom
retf
out
mov
lahf
or
adc
mov
and
mov
shl
test
push
dec
inc
inc
push
inc
push
push
fadd
inc
add
iret
fcmovnb
mov
inc
dec
imul
or
add
nop
jno
mov
or
adc
gs
inc
jp
dec
add
xchg
test
mov
add
sbb
mul
and
or
retf
pusha
retf
mov
inc
xor
lea
out
jo
xchg
mov
(bad)
ror
inc
and
retf
adc
sbb
adc
cmc
sti
nop
or
sbb
mov
sub
sbb
sub
aad
scas
lods
cli
xor
pushf
jmp
or
sbb
popf
cmp
fwait
lea
or
sub
and
mov
mov
or
vmulps
inc
mov
inc
movs
xchg
imul
jge
shl
call
mov
into
inc
cwde
sbb
mov
dec
jns
add
daa
cmp
hlt
jno
iret
cwde
int
into
nop
pushf
inc
ss
and
aad
inc
dec
sbb
cmps
movs
lahf
push
or
fld
push
addr16
sub
in
enter
or
jns
add
in
inc
outs
adc
jl
mov
or
mov
test
iret
leave
ins
in
jbe
sti
paddb
leave
leave
leave
std
(bad)
jmp
leave
leave
leave
leave
loope
jecxz
leave
leave
leave
leave
in
out
add
jmp
and
adc
in
in
out
out
inc
nop
les
jg
inc
inc
or
add
les
sbb
nop
aaa
pop
xor
sbb
dec
retf
sub
jnp
sub
or
mov
int3
push
pushf
and
pop
xor
les
or
add
pop
imul
daa
push
pop
iret
and
nop
xor
inc
pop
adc
rcl
ror
in
sub
ror
xchg
in
ror
movs
dec
cmp
fist
ror
dec
pop
dec
adc
lods
inc
mov
(bad)
fs
outs
fs
shl
push
jb
sub
push
std
push
nop
sub
in
in
fistp
mov
add
pop
or
and
mov
mov
push
xor
ja
dec
inc
inc
push
js
adc
in
out
clc
push
pop
dec
dec
inc
ja
movlps
sub
and
cld
xor
push
popa
(bad)
je
gs
pop
aad
xor
fs
adc
shl
mov
addr16
arpl
jb
push
je
(bad)
outs
push
(bad)
call
rol
rcr
mov
mov
and
jmp
mov
(bad)
mov
xor
idiv
push
inc
es
push
and
push
rcr
xchg
dec
mov
bnd
arpl
fadd
stos
in
sub
xchg
push
sahf
add
retf
push
icebp
mov
pushf
fdiv
mov
or
ss
push
adc
(bad)
sbb
loop
pop
xchg
push
clc
push
inc
repnz
mov
out
mov
fnstcw
mov
xchg
nop
cld
out
fisub
fcom
scas
out
cmps
jno
daa
fisubr
jo
lahf
call
push
(bad)
push
mov
leave
inc
jnp
push
fcom
fcomp
dec
or
cs
outs
inc
fcmovne
pop
mov
inc
add
shr
loop
cs
xchg
dec
mov
stc
inc
scas
sub
cmp
scas
sbb
fs
pusha
push
jl
(bad)
dec
les
mov
jbe
(bad)
imul
sub
inc
dec
into
fadd
add
push
out
jl
out
data16
ds
xor
adc
rcr
and
sub
movs
fucomp
jo
imul
xor
push
fcomp
nop
lock
out
les
sub
pop
aam
int3
ficom
clc
push
push
add
mov
dec
or
inc
dec
inc
nop
sub
out
inc
fnsave
fstp
adc
test
nop
fs
stc
fdivr
retf
mov
mov
pop
mov
push
sub
out
jo
pop
and
shl
jae
sbb
iret
xor
or
sub
sub
hlt
iret
lock
mov
addr16
dec
inc
nop
xchg
out
test
outs
inc
pop
push
fist
sub
and
pushf
dec
inc
dec
push
inc
nop
or
and
sbb
inc
repnz
add
inc
repnz
in
add
push
nop
test
inc
inc
iret
cwde
push
lahf
loopne
out
jl
mov
nop
cld
out
in
dec
repz
and
int
pushf
jbe
repnz
push
iret
je
dec
je
fidivr
data16
(bad)
mov
mov
cmp
pop
push
hlt
push
jbe
add
pop
adc
pop
cmp
sbb
inc
pop
mov
cmp
mov
daa
sbb
ret
jle
and
push
call
pop
rol
push
nop
addr16
push
push
dec
mov
ror
push
popa
mul
(bad)
nop
cdq
push
push
sub
adc
and
xchg
or
jl
adc
ins
inc
pop
mov
inc
mov
lahf
sub
retf
les
shl
and
and
and
popa
sbb
cmps
pop
loopne
jno
call
xchg
aam
in
fcomp
jae
xor
enter
dec
les
or
sub
or
dec
add
mov
test
jb
ret
mov
dec
dec
ins
aaa
lahf
sbb
rol
fcom
fisttp
repz
call
and
aam
fsubr
fcom
ror
movs
inc
outs
movs
fistp
dec
jl
and
cwde
mov
push
mov
arpl
ins
shr
xor
test
clc
pop
add
jmp
inc
adc
into
(bad)
jae
mov
pop
inc
add
cmp
daa
push
sar
mov
inc
cli
and
jg
or
xor
daa
mov
aad
jmp
jne
adc
mov
add
ins
push
stc
sub
fistp
ret
clc
add
add
dec
outs
or
sar
sub
mov
cmp
jl
mov
cli
push
add
xchg
fld
out
bswap
pop
shr
xor
push
ja
jmp
out
pushf
push
jmp
shl
(bad)
ja
imul
and
psllq
int3
push
push
test
rol
sub
xor
xrelease
enter
sub
test
fldlg2
mov
mov
mov
push
div
fisub
xor
mov
xor
sbb
add
and
jae
das
jge
dec
cmps
das
pop
fsub
mov
(bad)
(bad)
call
fbld
cmp
enter
(bad)
fnsave
movs
arpl
adc
pop
add
dec
arpl
sbb
test
imul
test
or
mov
inc
xchg
adc
leave
dec
pop
add
push
mov
and
adc
popa
xor
adc
add
and
retf
jle
inc
adc
xchg
out
lds
mov
inc
sbb
add
inc
rcr
mov
dec
ret
jbe
dec
or
cmp
movs
inc
xor
repnz
jnp
mov
test
adc
mov
mov
stos
xor
or
std
cmp
mul
push
dec
and
fcom
sub
or
shl
out
push
ror
mov
sbb
popa
mov
mov
or
ret
stos
sbb
mov
dec
adc
fist
ss
xlat
add
cmp
loope
xor
push
out
pop
sbb
mov
inc
sub
push
test
xor
push
(bad)
sar
add
outs
sbb
xchg
and
inc
or
repz
inc
add
jmp
adc
rcl
jmp
rcl
es
inc
xchg
jl
or
ja
ret
jmp
loopne
das
jge
jg
pushf
dec
mov
jmp
mov
sub
scas
xchg
xchg
jmp
xchg
enter
sbb
xchg
push
push
arpl
mov
inc
in
int3
inc
in
sbb
mov
mov
(bad)
pop
sub
lahf
aad
mov
in
dec
test
or
inc
mov
inc
dec
int
ja
das
mov
outs
pop
xchg
add
and
(bad)
mov
arpl
sbb
dec
mov
cmp
jge
mov
lea
clc
not
mov
dec
test
xchg
dec
movs
lds
fwait
and
sub
cmp
sub
push
xchg
sub
sbb
or
imul
xchg
lods
mov
inc
shr
dec
or
ja
jns
sub
adc
xchg
aas
fwait
mov
mov
clc
outs
in
not
stc
sub
sub
dec
xor
or
sbb
cmp
test
shl
enter
js
mov
inc
or
adc
xor
ins
jbe
adc
test
(bad)
or
or
push
test
or
js
pop
pusha
dec
out
(bad)
cmp
jns
sbb
sub
adc
or
pop
mov
das
cmp
out
and
sbb
ror
sbb
fisttp
cmp
pop
fidiv
ins
(bad)
fst
in
loopne
pushf
xor
pushf
sub
xor
mov
mov
xor
bound
inc
call
fst
in
pop
fcomp
or
jnp
aam
jge
mov
shl
pusha
push
das
pop
das
data16
xlat
sbb
or
ret
or
sbb
lods
dec
dec
mov
or
xchg
or
rcr
lock
arpl
or
inc
push
sub
inc
pop
mov
jg
sub
sub
jp
xchg
xchg
enter
mov
adc
pop
ret
xchg
xor
aaa
sub
ins
xor
sub
mov
inc
xchg
es
xchg
aaa
push
mov
push
addr16
push
adc
clc
inc
jns
loope
leave
sub
pop
pop
test
loope
daa
push
adc
rcl
or
and
rol
ret
mov
push
xchg
ret
cmp
aaa
pop
inc
cdq
sar
mov
rcr
adc
movs
xchg
pop
pop
sub
gs
pop
mov
xchg
sar
jmp
push
mov
lock
inc
or
jge
aad
xor
push
test
lock
cmp
(bad)
pusha
shl
or
in
cwde
cmp
inc
sbb
xchg
cs
ds
mov
mov
add
or
adc
mov
adc
retf
jns
loope
test
add
mov
or
pop
fsub
test
mov
dec
mov
div
icebp
cmp
xchg
clc
adc
data16
cmp
nop
mov
or
test
dec
adc
(bad)
mov
sbb
shl
push
mov
xor
add
xchg
or
inc
mov
imul
shl
push
and
adc
xchg
repnz
push
mov
test
dec
lea
jbe
dec
or
cmps
add
(bad)
hlt
cmc
push
mov
add
cwde
push
dec
push
outs
and
(bad)
dec
and
jne
stc
adc
xchg
xor
mov
das
enter
or
dec
retf
call
pop
mov
pop
std
pop
mov
fisttp
test
shl
fs
std
int
push
jb
inc
(bad)
add
mov
ja
add
sub
xor
cs
retf
add
add
add
sbb
sbb
jle
cmps
retf
pop
adc
pop
adc
pop
push
mov
out
sahf
out
pop
pop
sbb
sbb
fwait
sbb
mov
dec
lahf
fidiv
ss
jl
adc
pop
mov
sbb
pushf
cmp
adc
add
add
cmp
leave
jae
sbb
sbb
cmp
adc
enter
mov
call
sbb
pop
clc
out
lss
aad
ins
(bad)
mov
inc
dec
or
nop
bound
ins
gs
inc
in
out
fs
test
lods
shl
add
push
mov
call
add
mov
cwde
not
sub
jmp
(bad)
push
pushf
xlat
pusha
and
sub
adc
add
cdq
lock
cvttps2pi
dec
cmps
fcomi
dec
xor
xchg
sbb
and
in
mov
or
inc
xchg
push
ins
inc
bound
cmc
mov
push
pushf
pop
xchg
call
mov
test
sbb
sbb
add
or
dec
sbb
les
pop
push
popa
es
and
adc
imul
ss
adc
xchg
fiadd
mov
add
popa
mov
add
imul
inc
call
xlat
and
inc
(bad)
pop
or
xchg
in
and
test
push
or
ret
mov
jae
mov
push
jecxz
ret
sbb
pop
adc
push
ja
je
adc
jl
pop
sub
inc
or
mov
dec
inc
or
cmps
outs
leave
les
ins
add
lahf
sub
les
jne
push
add
dec
pop
adc
or
sbb
and
xlat
inc
ins
mov
and
dec
scas
sub
fld
adc
sbb
inc
sbb
and
fist
add
or
lock
movs
in
loopne
xor
bound
or
fwait
loop
and
dec
lea
pusha
add
mov
cld
std
add
mov
scas
mov
movs
jnp
xchg
push
or
nop
retf
adc
dec
pop
dec
test
lea
add
loope
xor
cmps
inc
sbb
loope
sub
outs
or
push
mov
mov
cld
mov
and
(bad)
popa
call
loopne
sbb
imul
ss
pop
sub
sbb
mov
pop
test
sbb
paddb
mov
dec
pop
(bad)
adc
hlt
aaa
add
stos
lahf
ficom
and
(bad)
pop
scas
clc
mov
icebp
in
jmp
sub
mov
jne
fidivr
adc
jmp
stos
ja
push
pop
jbe
fist
mov
jmp
pushf
mov
bound
jnp
enter
push
dec
sar
jecxz
sub
es
popa
fnsave
pop
push
xlat
popa
pop
adc
jne
xchg
mov
retf
and
cli
dec
dec
add
movs
add
mov
daa
cmp
mov
ret
jae
dec
xchg
test
and
inc
add
dec
lea
xchg
inc
xor
inc
pop
aad
aad
pop
pop
cld
jmp
call
sub
pusha
nop
xchg
adc
add
mov
retf
daa
inc
rcl
loopne
mov
es
mov
cli
jl
js
add
jno
call
push
out
test
cmp
ficom
mov
or
inc
fld
mov
or
iret
pop
sbb
or
mov
adc
push
pop
scas
imul
and
in
mov
or
dec
imul
dec
dec
ds
aad
inc
inc
and
jmp
push
and
into
push
aam
add
pusha
loopne
fmul
sbb
add
or
adc
lea
outs
and
add
sub
add
(bad)
out
and
xor
fyl2xp1
jle
fadd
adc
jl
pusha
or
in
xchg
fs
push
xchg
jmp
push
test
mov
loop
jnp
fwait
sub
sahf
out
std
push
sbb
push
pop
rcl
mov
pop
jmp
push
adc
(bad)
and
das
pop
push
or
push
xor
mov
inc
sub
mov
test
loopne
loopne
mov
and
push
mov
cmp
btr
push
arpl
ret
ds
pop
mov
nop
pop
outs
scas
nop
lock
cmp
adc
push
enter
in
push
dec
push
jo
hlt
add
js
cld
sub
ins
loope
int
js
and
fisub
jne
dec
sbb
jl
or
ficom
sbb
inc
sub
repnz
ss
inc
sbb
cld
xor
inc
adc
in
xchg
mov
sbb
inc
rcl
dec
sub
mov
xchg
adc
xchg
adc
pop
inc
(bad)
jo
or
icebp
add
add
movs
ret
pop
ret
fisttp
mov
mov
data16
neg
aas
mov
imul
push
adc
inc
or
or
aas
xchg
pushf
pushf
pop
adc
jmp
mov
into
pop
and
inc
mov
or
inc
inc
imul
xchg
jb
inc
es
mov
lock
xchg
add
fldenv
dec
cmp
shl
mov
and
outs
mov
in
inc
in
in
rcr
pop
das
adc
inc
not
push
lea
retf
push
cmp
mov
mov
jns
add
sbb
test
cmp
(bad)
mov
test
ins
loope
lahf
clc
das
xor
xor
sbb
test
xlat
cld
or
ins
mov
inc
(bad)
and
lock
pop
push
pusha
iret
mov
pop
nop
inc
nop
or
pop
dec
cld
mov
mov
pop
and
loope
mov
mov
popa
cdq
sbb
push
pop
mov
adc
or
pop
add
test
cmp
mov
lock
faddp
nop
aam
dec
icebp
or
or
ins
or
sbb
jne
or
or
sub
push
dec
je
aas
pop
pusha
xchg
leave
or
cmp
push
sbb
lods
dec
test
pop
adc
cmp
add
lods
es
js
adc
mov
or
jge
dec
das
ret
or
sbb
jno
or
daa
pop
fmul
and
and
fcmovnbe
inc
inc
push
sahf
loopne
sar
fiadd
sahf
mov
test
sbb
mov
mov
mov
and
rcl
inc
pop
or
test
or
inc
mov
or
and
push
add
imul
out
into
cmc
and
dec
out
adc
popa
pop
cmp
or
push
add
adc
test
fadd
dec
mov
mov
repnz
push
dec
cmps
sub
in
in
adc
jno
add
shl
xor
lahf
dec
and
cmps
xor
mov
cmp
in
sub
pusha
fsubr
es
aad
popa
or
inc
(bad)
pop
test
sbb
ins
fild
or
cwde
pop
push
and
rcpps
and
sub
cmp
fldcw
jge
jmp
pop
mov
test
mov
push
cs
sub
sub
add
arpl
daa
mov
mov
fdiv
popa
sbb
xor
jno
push
xchg
xor
push
mov
and
pushf
xor
cmps
pop
leave
xchg
xor
xor
pop
add
push
mov
aaa
jmp
adc
dec
dec
xchg
xchg
mov
aas
cmp
aas
add
ror
jp
or
outs
fstp
fs
pushf
pop
push
inc
sub
nop
xchg
nop
and
(bad)
jns
int3
scas
sahf
pop
sbb
or
pop
sub
add
cmp
jl
inc
sbb
and
aaa
mov
call
or
movs
adc
add
or
push
add
jbe
fstp
inc
sub
inc
daa
jmp
xchg
adc
push
add
cmp
mov
das
and
shr
mov
dec
mov
test
cwde
inc
inc
xchg
clc
repnz
mov
imul
or
iret
out
pop
sar
dec
adc
ror
shr
and
cmp
ficom
and
loopne
fs
into
clc
inc
sub
rol
jbe
push
dec
inc
adc
fild
mov
jns
(bad)
bnd
inc
push
jno
jmp
hlt
shl
pop
sub
mov
and
mov
hlt
and
cmp
adc
add
jle
leave
clc
inc
push
popa
pop
sub
push
or
and
xor
sbb
or
mov
jmp
cmp
movs
das
add
inc
rol
fild
push
fs
mov
clc
sar
sub
mov
adc
add
lock
sti
jge
mov
and
cli
loope
daa
fsincos
dec
(bad)
mov
retf
adc
adc
fidivr
xor
lock
or
or
fld
out
or
add
mov
jnp
arpl
jmp
add
stos
pop
jb
push
clc
push
cmp
xchg
or
mov
js
dec
inc
mov
and
mov
mov
ret
dec
jno
cmps
adc
mov
cmps
shl
mov
add
cmp
mov
inc
lds
cmps
fstp
push
test
in
les
popa
sbb
adc
pop
repz
or
lea
dec
add
push
mov
pop
test
bound
cmp
mov
pop
movs
inc
or
adc
cld
test
mov
sbb
add
or
test
add
(bad)
test
scas
or
out
rol
adc
icebp
fsubr
jns
in
cmp
mov
or
mov
push
out
or
dec
pop
div
push
push
jmp
cmp
xor
or
push
cmp
or
ret
jl
ret
pop
push
or
rcr
aam
mov
or
push
dec
(bad)
dec
shr
or
mul
inc
rol
dec
out
leave
mov
fnstsw
ins
call
and
retf
inc
push
popa
iret
mov
icebp
cmp
fs
dec
sbb
sub
add
add
movs
xchg
mov
rcr
adc
sub
hlt
add
push
add
loopne
push
or
push
or
int3
jne
inc
es
add
mov
fndisi(8087
mov
repnz
frstor
add
mov
push
inc
lea
jl
cld
adc
pop
mov
push
add
sub
cmp
and
imul
dec
cmp
lock
stc
inc
sbb
mov
sub
add
aam
fcomp
add
mov
xor
pop
jne
int
pshufw
fidivr
push
adc
inc
and
pusha
sbb
jne
iret
rol
xor
add
rol
add
dec
add
push
sub
daa
mov
jmp
or
aad
ja
scas
inc
or
hlt
inc
and
xor
call
rol
fdiv
lock
mov
inc
and
and
mov
inc
or
jl
adc
ret
push
aam
stos
push
add
ffreep
jmp
jecxz
or
mov
inc
mov
shl
daa
mov
xchg
adc
xlat
mov
mov
jb
and
js
mov
push
xchg
mov
jle
fsub
jns
or
pop
fmulp
inc
out
push
mov
pusha
dec
sub
and
or
or
jne
ins
or
mov
mov
(bad)
imul
or
mov
or
inc
inc
inc
out
mov
inc
adc
push
or
dec
ins
add
imul
and
movs
push
call
pop
lods
stc
or
jnp
loop
push
xchg
adc
in
push
pop
aas
push
lods
sub
je
mov
jg
or
lar
lock
ds
push
cmp
or
cli
adc
mov
push
push
xor
rol
or
dec
sbb
pop
or
adc
dec
pop
mov
push
mov
into
sub
or
or
mov
and
add
pushf
mov
adc
and
mov
(bad)
nop
mov
push
xchg
clc
cld
lock
add
mov
push
call
aaa
lds
fld
stos
add
clc
inc
cdq
out
adc
sub
push
jmp
cmc
pmaxsw
pop
cld
lds
add
mov
dec
jnp
sub
jb
fs
call
jge
dec
mov
xchg
add
or
add
lods
sub
or
sub
je
xchg
xor
jg
push
xchg
jnp
rol
mov
push
cwde
mov
call
add
xor
and
retf
sbb
retf
jmp
fmul
sub
add
ins
test
add
and
sbb
mov
cdq
mov
lods
jp
in
mul
loope
jnp
(bad)
jo
xchg
dec
cmp
or
mov
mov
dec
cmp
xor
jge
mov
adc
sbb
movs
mov
and
mov
mov
jmp
lods
lods
push
adc
out
std
adc
xor
jg
xchg
(bad)
cmp
mov
stc
sbb
pop
pop
sbb
or
push
ret
push
arpl
push
pop
inc
mov
cmp
mov
and
test
jbe
mov
mov
pusha
jb
push
inc
rcl
adc
push
lods
popf
ror
out
add
sub
mov
(bad)
ret
add
sub
fiadd
sti
inc
push
mov
dec
stos
pop
mov
inc
xor
mov
sbb
loopne
jmp
cs
lods
lods
or
inc
outs
push
dec
lods
adc
call
xor
aam
popa
and
xchg
push
push
js
pop
in
sub
(bad)
sub
mov
sub
(bad)
pop
cwde
repnz
lods
sub
add
sbb
or
mov
jb
cmp
add
mov
or
xor
(bad)
fmul
xchg
outs
push
inc
psrlw
lods
xor
sbb
les
pusha
cmp
sub
sub
dec
enter
or
retf
leave
test
cmp
call
or
or
adc
cmps
push
and
scas
into
inc
adc
scas
arpl
inc
ret
xchg
(bad)
call
mov
jmp
mov
sub
fimul
clc
or
fwait
xor
jbe
jg
and
or
jno
adc
jbe
sub
pop
xchg
popa
hlt
daa
dec
jne
xor
cmc
sahf
pavgb
inc
add
cmp
jg
enter
out
pop
pop
sub
in
adc
xchg
arpl
enter
mov
jo
add
ss
pop
das
je
hlt
xor
push
daa
and
int
test
daa
les
enter
dec
sbb
and
nop
and
jo
scas
inc
adc
sbb
push
push
pusha
inc
mov
xor
pop
dec
pop
int3
pop
repnz
dec
jne
iret
popf
js
jb
or
inc
daa
in
dec
fiadd
(bad)
fld
jbe
xor
inc
inc
pop
jmp
daa
stc
inc
xlat
xchg
aas
add
xchg
jp
dec
pushf
mov
push
bound
pop
xor
imul
std
push
or
mov
scas
sub
sbb
mov
data16
dec
je
ins
mov
mov
dec
js
or
mov
sbb
fsubr
sbb
fistp
push
sbb
dec
cmp
xchg
retf
test
scas
push
loop
or
and
pushf
mov
dec
movd
or
mov
pusha
and
stos
pop
xchg
cmc
dec
cmp
dec
test
push
test
sbb
pop
and
aam
inc
and
dec
lods
jne
sub
jae
(bad)
sub
dec
ins
movs
stos
cmps
cmp
hlt
cmp
lahf
out
in
mov
imul
and
sbb
scas
pop
add
add
inc
ins
cmp
mov
and
ins
ins
jmp
icebp
scas
pusha
adc
dec
adc
mov
and
sahf
je
mov
scas
inc
add
xchg
dec
ss
adc
mov
rol
gs
push
dec
xchg
inc
cld
int3
push
pop
fiadd
retf
clc
cmp
pusha
rol
pop
lock
xchg
and
cmp
jl
sti
iret
sub
cmps
mov
sahf
(bad)
pop
xchg
(bad)
lods
or
scas
or
push
rol
jns
push
into
push
or
pop
jne
pop
sbb
sub
add
lods
push
adc
pop
or
add
adc
or
loope
inc
sub
pop
pop
(bad)
xor
nop
or
inc
fadd
adc
push
(bad)
adc
sub
sub
mov
xor
daa
test
or
sbb
and
cmp
(bad)
retf
push
nop
lods
add
mov
outs
int3
push
cmp
loopne
daa
fadd
xlat
retf
test
loopne
cli
xor
push
mov
cld
pop
xchg
pop
and
add
sbb
stos
hlt
fwait
cmp
add
and
aaa
inc
push
push
add
or
scas
add
push
neg
sbb
jmp
sbb
ins
xchg
pop
inc
cmp
xchg
cmp
sub
cmp
sub
push
and
sbb
retf
mov
js
and
xor
add
or
punpckhwd
ret
mov
add
(bad)
dec
inc
mov
pop
add
pop
dec
and
add
int3
je
mov
sbb
clc
add
sub
ret
dec
jbe
jmp
xor
mov
adc
or
mov
sbb
or
ret
add
das
push
add
add
or
rcr
jl
(bad)
sub
jle
sbb
and
cmp
xchg
fsub
out
fist
cmp
sub
in
cmp
xor
cmp
jb
mov
xchg
adc
loop
add
mov
outs
lock
pop
push
sub
add
retf
leave
mov
data16
dec
sub
pop
xor
in
dec
and
push
dec
sub
sahf
adc
or
mov
lods
push
adc
sub
mov
mov
cwde
fisubr
or
add
sbb
jb
pop
pop
dec
sub
in
jmp
add
in
and
xlat
lods
hlt
sub
or
icebp
cmp
ja
test
sahf
mov
mov
inc
ins
dec
mov
push
scas
cmp
sbb
push
jne
gs
movs
jns
adc
test
or
js
out
(bad)
mov
mov
ret
cwde
push
inc
jl
test
cmp
xor
push
orps
jb
inc
mov
add
push
cmp
or
ins
loopne
dec
push
mov
out
push
mov
or
or
pushf
mov
mov
adc
imul
pop
mov
mov
in
shl
dec
jmp
adc
push
sbb
dec
adc
pop
mov
hlt
nop
dec
inc
add
call
push
mov
ret
inc
ja
sti
adc
xor
mov
daa
push
mov
shr
xor
inc
mov
push
dec
cmp
or
sub
pop
or
adc
xchg
pop
pusha
mov
pop
js
dec
sub
fistp
and
test
mov
add
adc
sbb
inc
adc
(bad)
xchg
out
repnz
sar
sbb
cmp
and
add
and
(bad)
jne
push
retf
jo
inc
mov
jb
cmp
xor
in
ret
les
shl
dec
cmps
icebp
adc
js
xor
or
inc
inc
int3
(bad)
lea
inc
sbb
inc
mov
sub
and
and
popa
add
mov
or
and
cmp
(bad)
or
pop
mov
or
xchg
clc
mov
shr
or
fild
sbb
adc
mov
push
adc
inc
mov
push
out
mov
or
movs
test
inc
jbe
cmp
sub
cmp
or
push
add
(bad)
or
and
sbb
addr16
dec
iret
es
fst
and
inc
inc
bndstx
sti
sti
mov
mov
push
or
test
inc
call
mov
mov
xchg
mov
lods
mov
push
sub
lock
xchg
dec
jne
sbb
pop
gs
add
(bad)
aas
jmp
inc
adc
xor
dec
in
arpl
mov
clc
dec
dec
jmp
mov
fcomp
push
sbb
and
inc
inc
pop
add
and
mov
mov
jmp
es
pop
ret
sub
fdivr
and
dec
lock
nop
rcr
fdiv
or
out
cs
dec
mov
lock
or
lea
adc
push
sub
push
xchg
shr
mov
add
inc
cmp
mov
repnz
push
add
add
inc
int
mov
jb
popa
inc
cmp
test
adc
and
xchg
xchg
sbb
mov
arpl
sub
xchg
sub
call
push
inc
mov
push
xor
nop
(bad)
cs
and
nop
mov
xchg
pop
nop
mov
dec
loope
jecxz
outs
pshufw
xor
aaa
pop
cmp
call
leave
ss
sub
dec
fild
and
enter
sub
add
push
adc
cdq
movs
int
sub
mov
push
or
sub
pop
pop
or
xchg
inc
nop
mov
clc
and
pusha
mov
nop/reserved
and
mov
iret
lods
idiv
add
(bad)
fcom
jne
or
xchg
mov
pop
movs
fxch
fiadd
dec
dec
push
add
mov
cmp
rol
rcl
aam
shl
sbb
pop
inc
push
pusha
mov
add
add
cmp
repnz
popf
cmp
iret
leave
popa
out
mov
sub
sbb
bound
sub
adc
retf
sbb
and
and
push
pop
inc
xchg
mov
push
call
dec
pop
or
or
mov
push
xor
rol
pop
cmc
popf
add
shl
into
push
les
repnz
or
js
jecxz
mov
sub
outs
pop
dec
inc
sbb
shl
int
sbb
push
retf
cwde
sub
es
ins
xchg
repz
loop
push
das
in
int3
ds
or
and
pop
cmp
loopne
lea
mov
cmps
inc
push
add
sub
push
sbb
add
jl
cmp
add
sub
inc
xor
or
mov
scas
add
mov
sub
jmp
sbb
inc
dec
(bad)
paddq
pusha
mov
fisttp
dec
jp
mov
mov
leave
pop
xor
fwait
call
mov
movs
movs
aas
ret
icebp
push
or
mov
adc
xchg
sub
sbb
rcl
popa
mov
lock
fsubr
pop
jno
in
mov
arpl
lods
jmp
mov
aaa
mov
and
cmp
jle
mov
xchg
mov
sbb
push
sub
lock
mov
mov
gs
mov
cwde
test
pop
in
adc
adc
js
movs
cmc
sbb
lea
popa
enter
mov
push
and
pop
xchg
js
inc
cmps
outs
fwait
loop
add
adc
inc
push
xchg
stos
mov
stos
test
mov
jb
(bad)
(bad)
lods
sbb
cmp
sbb
stc
fstp
fwait
mov
mov
aas
fwait
lods
daa
push
enter
cwde
pop
mov
and
dec
mov
sub
dec
or
not
mov
add
mov
repz
ss
fldenv
icebp
sbb
aaa
jp
pop
xor
js
xchg
sub
mov
inc
fwait
enter
cmps
std
nop
(bad)
fcmovnb
push
cwde
lock
fnstenv
movs
enter
xchg
add
lds
jno
inc
pop
fsubr
xchg
outs
popa
dec
xchg
xor
inc
mov
in
add
or
imul
pop
jnp
mov
mov
dec
sub
aas
add
mov
mov
mov
xchg
dec
imul
push
or
mov
mov
rol
sar
(bad)
cmps
lea
add
adc
xor
push
add
mov
mov
inc
nop
xor
jno
sar
inc
sbb
or
jne
(bad)
and
cmp
mov
lods
push
mov
lea
adc
(bad)
ror
mov
out
aas
sbb
mov
mov
xor
inc
mov
fisubr
mov
pop
jmp
rcr
push
mov
jg
not
or
mov
clc
push
fwait
mov
mov
mov
popa
sbb
mov
jb
outs
inc
cmp
add
ins
or
imul
rcr
retf
jbe
pop
push
add
cmp
mov
mov
aam
and
sub
or
or
test
aad
mov
enter
mov
retf
mov
mov
mov
enter
cmp
inc
xchg
push
ror
add
jbe
dec
add
adc
mov
or
push
xor
test
add
mov
add
inc
mov
nop
sub
mov
add
das
mov
sub
cmp
inc
test
icebp
push
add
mov
push
or
mov
push
pusha
adc
and
dec
mov
and
stos
jge
inc
cmp
mov
call
xor
lds
xchg
retf
retf
sub
push
wbinvd
sbb
test
ss
or
les
push
sub
call
rol
in
cmc
jle
in
and
dec
push
mov
xor
add
xor
(bad)
sbb
popa
push
inc
das
cmp
enter
cmp
adc
adc
or
add
xor
mov
in
pusha
sbb
add
in
inc
cmp
xor
mov
outs
cmp
jmp
dec
imul
and
movs
mov
and
aaa
add
inc
(bad)
inc
xchg
iret
push
call
xor
lea
push
push
dec
test
sbb
test
shl
add
fwait
fs
jge
xchg
pop
pop
ret
and
js
pop
mov
cmp
push
mov
es
test
(bad)
imul
rcl
and
js
jl
shr
jg
pop
scas
add
popa
push
loope
inc
add
jne
dec
(bad)
stos
push
sub
xor
adc
mov
sbb
cmp
jae
pop
test
aaa
stos
jl
jle
mov
dec
or
fsub
rol
sbb
pop
xchg
shl
xor
or
fdivr
aam
push
bound
call
sbb
sar
enter
int3
int3
mov
xor
in
lods
mov
mov
and
jb
enter
cmp
mov
enter
inc
lock
mov
mov
cmp
mov
xchg
stos
test
lods
inc
adc
or
das
jge
sub
mov
ins
push
shl
or
jp
mov
mov
and
addr16
inc
push
repz
or
stc
mov
ret
and
daa
pop
mov
ja
fs
xlat
ins
mov
mov
or
xchg
lds
mov
mov
add
popa
jl
push
add
in
loop
xor
(bad)
xchg
push
ja
and
add
div
sub
inc
add
pop
sub
mov
daa
and
adc
ins
add
ret
pop
fwait
inc
mov
add
and
leave
dec
adc
jns
ds
jl
adc
dec
push
inc
fwait
(bad)
fs
inc
lods
addr16
sub
inc
icebp
jo
or
fild
xor
lds
rol
or
iret
or
xchg
ret
and
lea
dec
mov
ret
push
dec
cmps
mov
add
or
inc
in
adc
test
mov
cmp
jb
daa
or
popa
cwde
inc
adc
sub
add
dec
imul
xchg
jp
push
pop
(bad)
add
push
fnsave
faddp
adc
inc
xlat
fucom
sbb
xor
inc
sbb
inc
push
push
xor
dec
push
xlat
in
pop
add
clc
arpl
cmps
add
lods
jl
cmp
mov
jae
cmp
leave
shr
dec
leave
mov
cmp
xchg
xchg
push
or
mov
sahf
ins
jmp
adc
add
add
pop
push
xchg
inc
add
fisubr
movs
push
test
je
sub
dec
mov
inc
test
cmps
adc
sub
push
xor
sub
jmp
popa
pusha
mov
sub
adc
push
pop
xor
jno
jae
jmp
pushf
fst
stos
mov
mov
lods
pop
ins
test
xor
ret
jbe
jo
pop
pop
push
mov
aas
sar
adc
sub
ins
mov
xchg
pop
xchg
pop
push
stos
push
nop
xchg
lock
xchg
mov
or
mov
push
outs
jge
rcl
dec
adc
dec
movs
sbb
fld
cli
in
mov
xchg
lock
loop
mov
xchg
inc
cmps
dec
lea
sub
aam
pop
retf
and
jae
sub
out
mov
and
sbb
sbb
dec
add
jnp
clc
lahf
mov
adc
mov
xor
xor
cwde
jmp
cmp
iret
ins
loopne
rcl
xchg
loopne
les
fdivr
fadd
aaa
dec
call
inc
cmp
or
jmp
enter
adc
mov
dec
test
das
sub
add
stc
sbb
hlt
jge
add
outs
rcr
int
mov
xlat
mov
daa
popa
in
inc
xchg
clc
hlt
test
or
dec
xchg
iret
inc
call
sbb
push
gs
(bad)
and
ins
movs
mov
and
test
fimul
cmovns
inc
pusha
xchg
cmp
les
jne
push
xor
pop
lods
outs
out
psadbw
dec
arpl
cmp
test
fisttp
sub
or
sub
inc
mov
mov
test
xchg
pusha
in
cmps
jle
mov
pop
lds
retf
jl
(bad)
jl
ins
in
fdiv
sub
lea
add
xor
jmp
jnp
mov
mov
(bad)
mov
lods
cmp
je
xchg
js
sbb
imul
mov
outs
inc
ret
cdq
scas
lahf
sbb
aad
jge
pop
in
dec
adc
sub
in
mov
ror
push
sub
cmp
sete
and
mov
and
inc
stos
or
jmp
loop
or
adc
pop
mov
fcomp
push
sahf
aas
inc
inc
in
sahf
sbb
xchg
sbb
or
lock
add
add
jecxz
add
in
mov
pop
in
adc
sbb
ss
mov
sub
adc
xor
add
adc
inc
mov
or
cmp
inc
inc
push
xor
mov
pop
out
mov
jbe
arpl
inc
or
inc
mov
xor
cwde
mov
arpl
mov
clc
shl
mov
sbb
pop
inc
out
inc
aaa
sbb
shr
rcr
out
adc
das
mov
push
sub
sub
or
pop
aam
movs
and
xchg
or
inc
in
out
jae
xchg
push
nop
push
xchg
adc
ret
jo
pusha
push
adc
clc
daa
jnp
jne
cmp
sub
and
aam
ret
pop
pusha
jmp
mov
mov
ins
out
cmp
mov
out
fucomip
leave
adc
push
lods
scas
das
or
lahf
push
inc
jb
scas
bound
out
out
out
ror
out
lea
inc
aaa
arpl
inc
mov
pusha
dec
lds
and
(bad)
fsubr
mov
jp
or
mov
pop
in
xchg
dec
bound
ret
add
loope
push
mov
dec
mov
cmps
lock
pop
bound
leave
or
pop
add
cs
adc
nop
aaa
pop
push
xor
sbb
fistp
pop
sub
(bad)
hlt
push
mov
adc
and
mov
pop
pusha
or
push
mov
add
mov
repnz
xlat
add
in
add
test
adc
adc
cmp
popf
pop
xchg
xchg
jno
and
(bad)
adc
das
fcom
lock
ins
arpl
xchg
pop
pop
mov
scas
gs
xchg
imul
adc
push
push
pop
clc
mov
fmul
test
rcl
retf
mov
retf
das
push
fs
pop
sahf
int3
lock
jp
fidivr
adc
dec
aad
in
imul
xor
xchg
dec
adc
dec
enter
adc
mov
or
je
pop
sub
mov
in
mov
sub
and
retf
or
fsub
in
dec
inc
or
or
push
pop
clc
fmul
es
movs
sar
(bad)
mov
pop
and
call
adc
xor
pop
xor
mov
aam
mov
xchg
aam
scas
mov
fmul
movs
inc
call
push
pop
hlt
or
fcom
outs
aam
jnp
adc
loopne
jmp
mov
mov
and
push
and
mov
dec
mov
inc
mov
ret
pop
dec
in
jl
arpl
xor
fsub
and
jl
ja
xor
dec
das
adc
mov
xchg
jmp
dec
inc
sti
aam
sub
inc
cmp
daa
cmp
test
addr16
inc
test
nop
retf
nop
jbe
bound
in
adc
sbb
cld
sub
inc
inc
push
or
aas
cmp
cmp
pop
fsubrp
jno
push
gs
xchg
sub
mov
pop
adc
xor
adc
push
pop
adc
retf
imul
or
mov
pop
or
inc
mov
pop
inc
sbb
enter
sub
or
fisttp
pushf
jns
jmp
fidivr
imul
add
mov
sub
mov
popa
enter
data16
mul
(bad)
sbb
xor
pop
adc
and
mov
jle
mov
(bad)
jbe
sub
js
in
sti
xchg
test
sub
pop
jo
add
enter
cmps
cmps
adc
nop
sub
call
nop
push
(bad)
dec
jno
or
lods
pop
push
sahf
shr
fadd
psrld
dec
add
xor
dec
pop
add
xchg
in
in
es
push
inc
inc
fs
iret
in
or
add
das
jmp
fs
dec
add
push
test
adc
repz
repnz
add
fs
lock
out
imul
scas
sbb
push
in
push
test
cs
in
das
inc
dec
push
call
and
dec
sbb
mov
or
mov
mov
add
jo
add
xor
pop
inc
arpl
shr
(bad)
pop
mov
and
xchg
sysret
mov
scas
and
adc
sbb
lods
pop
xchg
adc
rol
push
(bad)
lea
jbe
sbb
or
xchg
inc
cld
push
dec
inc
dec
scas
cmp
dec
les
add
push
cmp
rol
stos
loope
adc
das
dec
sub
push
adc
ret
dec
sbb
pop
nop
mov
inc
add
fiadd
test
das
loop
mov
xchg
add
sbb
sbb
mov
xchg
xor
mov
push
mov
cmps
jns
sbb
or
add
cmps
jns
add
add
add
jns
inc
pop
cmp
or
fst
cmp
test
xor
pop
xchg
or
dec
push
inc
ja
cmp
or
sbb
jg
push
mov
out
call
push
add
push
sub
or
xor
or
dec
mov
push
(bad)
push
fadd
push
xchg
(bad)
jge
fnstsw
adc
fwait
or
push
cmps
enter
push
mov
push
test
sbb
lods
gs
ror
mov
ja
and
enter
enter
sar
mov
and
adc
cmp
call
add
dec
jo
dec
adc
add
addr16
pop
lods
and
sbb
cmp
or
test
mul
inc
fild
add
fdivrp
cmps
sbb
mov
fmul
adc
jbe
test
shl
xchg
push
xor
sub
mov
mov
mov
push
dec
push
mov
cs
inc
sub
fs
sbb
mov
inc
rol
xchg
push
mov
mov
lea
cwde
shl
cmp
aas
mov
sub
sub
add
cmp
push
jb
sahf
mov
cmp
or
in
ud1
into
add
push
les
pop
pop
or
inc
push
aam
lahf
mov
push
mov
sub
cmp
mov
sub
mov
mov
lods
jo
sbb
dec
ret
cvtdq2ps
(bad)
mov
dec
inc
mov
movs
inc
fcmove
pop
pop
cmp
call
test
sbb
dec
pop
push
push
mov
push
mul
das
idiv
dec
idiv
and
ret
jo
(bad)
jns
enter
pusha
add
inc
cmp
mov
fs
stos
pusha
sbb
fs
lar
dec
pop
test
cmovs
push
pop
add
js
mov
repnz
clc
leave
sbb
pop
pop
xlat
(bad)
xor
jp
add
sub
mov
call
ret
fs
ret
inc
push
fdivr
xchg
inc
push
pop
shl
push
xchg
and
or
shr
rcr
sbb
mov
mov
sub
inc
cmp
or
push
dec
adc
fs
mov
push
mov
mul
mov
mov
shr
xor
test
inc
fnstcw
xlat
daa
push
outs
or
sbb
pop
sub
jecxz
mov
icebp
pop
fimul
push
sub
test
mov
add
xor
fwait
xor
dec
cmp
iret
repnz
adc
dec
inc
and
push
scas
pusha
or
inc
xor
adc
cmp
sbb
cmp
inc
imul
mov
adc
shl
iret
cmps
adc
mov
fld
fwait
aas
and
addr16
sbb
mov
adc
adc
inc
cmp
shl
loopne
dec
xchg
sbb
iret
test
ror
cmps
push
pop
clc
outs
add
adc
ret
add
ret
(bad)
frstor
dec
dec
push
xchg
imul
add
and
add
imul
xor
and
sbb
cmp
and
cmc
pop
test
or
out
cmp
xor
(bad)
leave
cmp
jb
enter
jns
addr16
movs
mov
mov
not
mov
into
mov
push
aaa
mov
inc
inc
inc
fdiv
inc
inc
mov
or
and
push
push
push
and
sbb
xchg
xchg
mov
fbstp
xor
pop
cs
and
daa
inc
adc
jp
sti
and
or
call
xchg
ret
or
xor
or
sub
mov
pop
adc
dec
push
lahf
push
mov
add
repnz
jo
rcl
or
shl
push
and
mov
mov
xchg
pop
pop
jl
fdivr
leave
jb
nop
dec
jne
jmp
pop
inc
retf
mov
test
popa
sbb
data16
xchg
mov
stos
add
fdiv
push
clc
mov
jnp
ror
xchg
cld
dec
dec
clc
call
mov
mov
pop
iret
xor
dec
cmp
ins
dec
mov
cli
dec
cmp
lea
(bad)
mov
mov
and
rep
pop
cdq
add
test
fimul
push
pop
mov
in
push
mov
mov
pop
cwde
add
movs
mov
arpl
sbb
aad
inc
in
push
lea
add
mov
dec
inc
lahf
mov
adc
jmp
sbb
and
or
call
rol
cmovg
shl
dec
jp
js
dec
jmp
sti
cwde
and
jecxz
jo
cs
das
mov
dec
call
xor
sbb
shl
cmp
fdiv
add
lock
test
fs
popf
sub
sbb
xchg
mov
or
movs
push
cwde
mov
or
js
mov
jae
shl
pop
test
clc
adc
ror
mov
ins
and
and
mov
pop
lods
bound
add
dec
jmp
sub
push
js
push
mov
xchg
lods
xchg
fldcw
je
adc
pop
lea
mov
push
sbb
dec
add
clc
cmp
stc
ret
add
leave
fdiv
and
out
mov
push
xlat
xor
enter
cmp
inc
jmp
fs
inc
es
cmp
and
fsub
cdq
add
xchg
cdq
push
push
loopne
inc
sub
and
fs
push
mov
xchg
jae
add
fstp
outs
push
dec
and
xlat
not
clc
or
inc
push
cmp
cmp
bound
jo
ss
push
push
jl
xchg
pusha
loop
push
push
call
call
or
or
adc
xchg
in
xor
mov
sbb
or
and
inc
dec
fiadd
pop
or
or
dec
test
test
lock
mov
cmc
or
stos
es
sbb
jno
sub
add
shl
cmp
sub
iret
orps
scas
test
jecxz
fisub
(bad)
pop
add
daa
or
movs
push
dec
inc
fld
pop
xchg
imul
mov
sub
jge
jbe
push
mov
adc
push
mov
(bad)
cmc
mov
ins
mov
iret
xchg
dec
into
mov
jb
shr
std
lea
shl
addr16
pop
push
arpl
mov
jne
jno
jle
movs
icebp
inc
adc
je
and
cld
or
mov
pop
add
(bad)
push
std
inc
jb
repnz
cmp
inc
imul
mov
ret
shl
(bad)
iret
push
jg
dec
add
andnps
dec
jb
das
mul
cmp
(bad)
shl
shl
call
outs
cmp
mov
mov
and
stos
add
lods
ins
sub
and
inc
arpl
cld
xor
mov
adc
scas
aas
xchg
adc
lea
adc
daa
test
push
or
es
jmp
pop
and
or
arpl
xchg
pop
fcom
nop
pusha
imul
mov
ss
push
adc
adc
push
loop
adc
cli
ds
into
jbe
push
adc
cld
or
sbb
add
cmp
mov
jo
xor
scas
dec
je
and
adc
cmove
mov
(bad)
es
add
cmp
jmp
mov
pop
adc
inc
cmp
jne
fisubr
mov
push
dec
adc
out
jle
sub
push
call
ins
xchg
fdivr
into
scas
movs
or
movups
xchg
les
jmp
je
neg
dec
imul
jne
inc
int
push
mov
push
mov
sbb
pop
dec
jo
call
or
dec
inc
add
retf
push
inc
sub
lock
jb
test
dec
mov
push
loop
sbb
enter
mov
push
sub
or
ins
fcomp
or
cs
inc
fcom
push
inc
add
fiadd
mov
or
outs
mov
xor
push
xlat
bound
xchg
and
out
daa
pop
push
add
aaa
mov
add
shl
jno
jg
xchg
xchg
xor
mov
or
xchg
xor
ficom
push
test
cmp
inc
inc
and
push
dec
push
and
cmp
mov
and
test
push
sar
sbb
leave
or
clc
sub
jno
adc
add
verw
popa
ins
lods
es
jmp
push
fwait
jnp
addr16
mov
sahf
lahf
jae
movs
aad
xor
add
jo
or
mov
mov
add
add
add
xor
out
sbb
push
retf
or
push
cli
aam
mov
push
pusha
sub
or
jge
mov
sbb
push
pop
clc
cmp
add
dec
and
mov
push
cmp
cmp
jbe
mov
addr16
inc
mov
int
into
mov
xor
xor
pop
and
jae
or
adc
adc
rol
adc
jns
and
push
je
inc
or
cmp
in
loop
cmp
or
mov
cmp
dec
mov
add
fcom
(bad)
scas
jecxz
sub
hlt
nop
icebp
fdiv
leave
call
sbb
or
sbb
scas
pop
pop
adc
fidiv
mov
inc
ret
test
add
dec
mov
adc
(bad)
xlat
mov
aas
movs
inc
jmp
jo
inc
add
or
dec
pop
repz
jo
inc
retf
lea
mov
stos
lods
in
fsubp
ins
adc
cld
neg
sahf
out
mov
test
mov
cld
or
fdiv
in
mul
dec
add
sub
nop
and
in
cmp
adc
xor
js
jae
mov
add
jmp
inc
or
retf
add
nop
into
mov
add
sbb
ins
aas
add
pop
or
jne
dec
imul
xor
and
or
cmp
daa
dec
nop
loopne
add
push
add
adc
add
pop
add
scas
dec
or
lds
inc
dec
call
push
cmp
dec
add
add
mov
sub
adc
xchg
scas
sbb
pop
pop
xor
pop
pop
loopne
sbb
out
dec
fcomp
mov
jne
mov
loope
jnp
inc
mov
add
jge
push
add
cmp
outs
inc
push
push
shl
pop
pop
and
imul
xchg
xor
cmp
jae
fisttp
adc
jbe
dec
jns
cmp
mov
push
cmp
test
mov
jne
push
(bad)
lods
in
jg
dec
or
jbe
mov
es
leave
jbe
add
dec
push
ja
and
jb
add
pusha
sub
nop
cmps
mov
rol
push
mov
adc
pop
mov
pop
mov
pop
pop
nop
and
fild
push
jecxz
leavew
jmp
mov
dec
mov
inc
mov
cmp
adc
push
jo
cmp
js
mov
adc
or
xor
inc
repz
in
sbb
outs
adc
mov
adc
inc
add
aam
lods
iret
adc
add
or
cmp
jl
and
inc
sbb
je
hlt
(bad)
dec
and
sbb
sbb
pop
movs
repnz
sub
fist
sub
adc
push
callw
adc
mov
mov
dec
cmp
add
adc
cmp
pop
mov
add
hlt
lods
(bad)
js
aad
mov
pop
mov
sbb
loop
or
jl
dec
sbb
imul
shr
(bad)
cmp
push
xor
out
pop
pop
cmp
inc
xchg
xor
push
dec
or
pop
hlt
repnz
cmp
sbb
jmp
dec
mov
outs
jecxz
push
add
loop
and
jmp
rol
inc
add
pop
and
mov
mov
cmp
jle
xchg
loope
imul
fimul
neg
sar
sbb
or
add
xor
jl
pop
push
push
cmps
call
mov
push
xor
hlt
or
int
not
push
xor
sub
js
push
movs
add
adc
push
sub
(bad)
pop
dec
adc
pop
or
pop
mov
pop
add
mov
pop
out
push
mov
scas
ja
repz
movs
jle
clc
jbe
mov
stos
inc
or
es
inc
or
adc
xor
icebp
xlat
out
adc
jl
sbb
add
mov
cli
sbb
sub
iret
sbb
pushf
dec
jmp
mov
sbb
jne
cs
sbb
add
outs
aaa
mov
pop
shl
(bad)
jbe
pop
pop
sbb
pusha
add
cmp
enter
mov
and
jmp
test
inc
xor
je
sub
mov
push
and
nop
mov
mov
adc
test
add
repz
add
sbb
in
inc
mov
dec
push
sbb
inc
add
mov
sbb
popf
cmp
inc
imul
xlat
ror
rcl
dec
add
pop
cli
lock
dec
xchg
aaa
push
js
pushf
pop
and
add
add
fwait
add
pop
inc
dec
sub
mov
mov
mov
ins
xchg
xor
dec
enter
xor
mov
dec
aaa
lock
(bad)
bnd
adc
push
jge
movs
push
loopne
icebp
xchg
adc
mov
and
jp
jo
mov
setno
pop
das
rcr
test
jne
pop
cmp
clc
pop
add
sbb
hlt
shl
jo
push
lds
and
shr
imul
sub
mov
retf
test
or
jo
pop
mov
adc
jb
sbb
xchg
sub
and
or
int3
adc
cmp
sbb
mov
mov
push
imul
out
pop
inc
dec
add
dec
pmaddwd
and
mov
add
lods
dec
mov
popf
push
sub
shl
xor
sbb
mov
inc
cmp
(bad)
fdivr
jbe
dec
or
das
mov
and
mov
mov
cmp
push
cmp
or
cmp
inc
outs
out
bound
sbb
add
cmp
cmp
jle
sbb
pop
add
mov
jle
push
or
popf
pop
movs
jle
adc
out
and
add
in
or
mov
or
cmp
xor
push
dec
or
adc
fiadd
idiv
pop
ins
ja
outs
mov
loop
inc
retf
ss
cdq
ss
retf
test
das
gs
and
or
xchg
mov
daa
sub
arpl
sub
dec
and
inc
outs
dec
ficomp
add
mov
scas
push
mov
inc
mov
inc
or
push
and
cmp
rcl
mov
pop
pop
(bad)
push
pop
jno
outs
test
pop
data16
sbb
push
and
mov
xlat
or
cmp
add
inc
sbb
stos
outs
cld
or
test
push
fisub
push
ins
ins
shl
bound
jle
out
xchg
das
cmc
add
mov
sbb
aaa
rcl
pop
pusha
mov
in
call
xchg
dec
pop
jmp
mov
sub
or
push
xor
dec
mov
and
imul
sbb
inc
call
and
xchg
loopne
ins
dec
push
push
jb
daa
ja
inc
jle
iret
or
in
jnp
inc
div
leave
shl
or
in
add
mov
jl
int3
add
jns
xchg
jge
adc
pusha
jmp
mov
scas
adc
add
jle
loopne
cmp
pop
ret
fdivrp
jge
cmp
ins
dec
or
call
pop
jnp
or
imul
mov
dec
cwde
jno
and
or
jnp
in
mov
or
xchg
ret
lea
jmp
aam
bound
adc
stos
add
mov
outs
ins
sbb
outs
push
fiadd
clc
(bad)
push
xchg
jle
ja
xor
jo
cld
cmp
push
repz
into
fsubr
pop
into
jne
and
outs
pusha
jmp
pusha
adc
fs
rcr
and
cmp
sub
mov
or
mov
cli
add
test
add
xchg
cs
mov
pushf
xor
cmp
mov
push
push
mov
(bad)
add
or
or
pushf
xlat
mov
repz
(bad)
xor
cmps
aas
sbb
xchg
je
push
pop
and
sub
push
and
imul
sbb
cmp
sub
scas
and
push
mov
pop
(bad)
pop
fscale
sahf
xor
out
mov
adc
mov
test
inc
jmp
cmp
jle
jmp
sub
add
inc
in
pop
add
sub
add
aas
mov
jmp
sti
aaa
or
inc
push
add
outs
adc
dec
ror
push
push
and
mov
and
jg
jg
repz
pop
sbb
mov
mov
ds
pop
pop
xor
(bad)
jo
out
and
jnp
into
cmp
pop
sbb
push
retf
mov
sbb
push
retf
and
inc
mov
pop
mov
and
cmp
inc
(bad)
xchg
dec
push
or
js
dec
fild
in
lea
or
in
sub
mov
lea
int3
cmp
inc
jno
(bad)
pop
sub
repz
pushf
movs
mov
add
lock
sahf
je
jnp
ja
outs
mov
push
arpl
arpl
sbb
mov
jb
mov
loope
ss
jo
out
movs
dec
ss
add
pop
push
int3
ror
mov
dec
mov
test
mov
in
mov
dec
pop
aas
jnp
retf
xor
pop
cmp
dec
shl
rcl
ror
je
sub
ret
add
es
shl
mov
sub
iret
ins
inc
adc
add
repnz
pop
push
mov
into
cli
or
mov
loope
repz
scas
mov
cmc
jbe
mov
push
imul
mov
pop
mov
add
add
adc
lea
es
rcl
add
div
jo
sbb
or
adc
push
shl
in
jae
push
std
or
jg
pop
cmp
aam
pop
les
jo
cmp
or
push
sbb
and
cmps
out
hlt
sub
js
scas
nop
fcom
call
pop
imul
bound
sub
cmps
jns
add
pusha
or
mov
jmp
js
rol
int3
out
out
les
xor
loope
pop
pop
add
xor
das
mov
loop
not
mov
je
into
or
pop
lds
jae
add
test
add
div
add
imul
sbb
add
push
mov
jo
cs
dec
and
out
dec
mov
jmp
add
cmp
add
add
mov
inc
into
pop
jp
sar
xor
jmp
(bad)
push
loope
lods
inc
mov
aaa
clc
or
outs
and
imul
int
sub
cmp
lea
dec
dec
leave
lods
es
adc
pop
arpl
pop
js
sbb
add
mov
push
mov
sub
push
dec
call
mov
cmp
cli
iret
je
mov
or
stos
cmps
inc
or
cmovno
add
adc
(bad)
jmp
bound
sar
fisttp
outs
(bad)
or
inc
inc
cmp
(bad)
vpunpcklbw
mov
adc
jl
push
pop
aaa
mov
push
call
fild
adc
shl
mov
mov
mov
pusha
cmovle
nop
adc
and
hlt
sub
clc
inc
push
sub
fs
push
loopne
sub
inc
addr16
out
out
mov
fs
jmp
jle
adc
or
mov
sbb
push
push
fs
sbb
cs
ja
fs
pushf
mov
int3
cmp
fldenv
cwde
inc
ins
or
enter
pop
jne
mov
aaa
cdq
cld
jmp
sahf
pop
or
sub
push
ins
adc
xor
fcomp
loopne
leave
int3
mov
or
lahf
sub
jmp
xchg
push
gs
jg
loopne
add
or
rol
pusha
jmp
and
mov
xlat
adc
xor
dec
in
or
enter
stos
inc
movs
jmp
add
inc
xor
sti
mov
cld
add
or
push
dec
sub
add
fadd
scas
out
int3
adc
and
jp
pop
inc
add
mov
jne
pop
sbb
scas
pop
fadd
(bad)
cmps
jns
mov
or
sub
pop
and
pop
cs
rcr
sbb
ja
xlat
add
inc
enter
pop
adc
in
mov
outs
add
popa
cdq
pop
test
dec
sbb
loope
iret
add
add
inc
data16
mov
scas
adc
fs
sbb
lods
add
(bad)
push
sbb
test
(bad)
adc
cmp
loopne
test
cmp
sub
cwde
and
dec
sahf
mov
lods
xchg
lods
or
aaa
push
stc
hlt
test
cs
daa
je
add
adc
outs
lods
int3
mov
add
mov
(bad)
xlat
mov
scas
xchg
xchg
jge
fsubr
in
lock
movs
ja
imul
jno
inc
fisubr
js
push
ss
add
or
push
cmp
push
jp
inc
sub
inc
or
shl
js
je
xchg
cwde
cs
mov
push
pushf
add
mov
jle
sub
mov
xlat
shl
mov
and
adc
shl
add
mov
ret
cmp
inc
fild
shl
add
xchg
scas
in
add
nop
sub
int3
das
loop
inc
aas
mov
lea
test
or
jo
dec
push
das
or
test
add
mov
mov
pop
jle
add
imul
cmc
xor
or
cld
mov
mov
sub
pop
add
mov
adc
nop
push
pop
jl
(bad)
das
jo
pop
push
add
and
sub
add
lea
and
xor
adc
into
lea
add
std
pop
ror
call
mov
movs
adc
add
or
gs
add
jl
mov
push
inc
popf
jbe
nop
inc
cmp
dec
and
ret
test
div
and
jne
mov
lea
pop
test
data16
push
mov
enter
pop
fadd
lock
or
rcr
shl
test
mov
cli
mov
test
xchg
pushf
inc
push
out
test
cmp
mov
jns
sahf
es
std
xor
jle
hlt
pop
je
aad
and
mov
ins
and
mov
jp
mov
dec
test
idiv
or
imul
ret
test
aaa
xchg
inc
jl
mov
retf
and
test
sbb
pop
and
jmp
push
xchg
add
push
push
test
(bad)
fild
xor
sub
adc
jge
or
push
mov
lea
(bad)
sub
stc
xchg
dec
mov
pop
aam
pop
cmp
scas
mov
add
xchg
sub
(bad)
fiadd
je
sub
not
fisttp
sub
or
into
push
cmps
clc
sahf
jge
sbb
fsubr
sub
mov
xchg
jge
xchg
inc
cmp
jle
push
cmp
repz
or
or
cmp
(bad)
popf
sbb
dec
(bad)
adc
shr
popa
push
scas
test
pop
pop
pop
mov
add
add
push
pop
mov
mov
or
xchg
fs
sbb
lahf
hlt
jg
daa
je
inc
mov
sub
icebp
inc
cmp
cmp
sub
les
adc
shr
arpl
ins
daa
sub
or
cmp
mov
cmps
push
sar
ja
mov
cmp
or
mov
adc
jmp
aas
call
dec
mov
in
inc
out
and
fs
push
sub
push
mov
inc
xchg
pop
cmp
(bad)
repnz
nop
mov
mov
je
jo
sti
nop
cs
push
adc
mov
mov
ss
test
fsubr
pop
dec
pop
mov
lds
retf
xchg
sbb
mov
sub
push
pop
out
and
mov
add
mov
or
outs
ss
(bad)
(bad)
jge
test
cmp
scas
and
jno
je
sti
xchg
jg
or
sub
cmp
sar
mov
cmp
dec
adc
lock
gs
jg
push
push
and
sbb
cmp
jmp
push
movzx
mov
cs
pop
sub
lods
xor
inc
sub
in
or
lock
dec
sub
(bad)
mov
js
(bad)
push
out
push
imul
pop
mov
lea
xchg
nop
adc
sbb
mov
pop
jle
mov
mov
stos
dec
adc
push
xor
push
or
pop
popf
pop
jo
mov
xchg
mov
pop
cmp
cmp
xchg
js
test
(bad)
int3
icebp
jle
xchg
adc
mov
xchg
or
cmp
push
or
stos
jge
sbb
xchg
pop
vfrczps
test
int
sbb
or
inc
(bad)
cmp
pop
fcomp
add
jl
mov
into
mov
rcl
sbb
cs
or
jbe
int
mov
or
sbb
and
nop
ss
fimul
inc
adc
in
repnz
js
test
push
in
pushf
addr16
add
test
xchg
xchg
dec
push
jo
cmp
mov
ud0
and
xchg
stos
push
dec
int
clc
sub
sub
mov
(bad)
sbb
lea
cmp
inc
mov
add
sub
es
stos
xchg
cmps
cmp
cmp
and
inc
mov
cmp
test
lahf
and
push
mov
stos
jle
mov
out
sar
push
dec
lods
add
pop
push
jbe
adc
push
ja
xchg
jl
jge
push
and
pop
popf
mov
cmp
push
pop
or
push
(bad)
fucomip
pop
or
jmp
cmp
je
mov
sbb
lods
jmp
jmp
push
movs
push
pop
dec
push
rol
lods
(bad)
and
test
mov
xchg
push
add
and
adc
or
pusha
dec
fistp
inc
push
jl
xor
xchg
movsx
and
sti
push
xlat
ror
call
inc
test
or
add
pop
jmp
je
xchg
mov
nop
loopne
jmp
je
push
push
add
test
push
cld
std
outs
xchg
cdq
fisttp
mov
pop
pop
enter
add
pop
xor
enter
add
sub
cs
and
or
les
sbb
shr
(bad)
xchg
dec
jle
aam
(bad)
retf
cmp
popa
sbb
clc
pop
and
out
sbb
sub
pop
call
add
mov
xor
or
dec
out
cmp
stc
sub
shl
xchg
xor
push
pop
mov
out
jmp
jl
fs
inc
js
leave
dec
icebp
inc
xor
movs
in
fsubr
out
scas
cmc
inc
addr16
pop
jne
das
aas
sbb
mov
or
cwde
hlt
jp
cmp
adc
or
mov
or
mov
pop
add
in
jp
mov
adc
cmp
bound
iret
pop
xor
add
loope
aaa
mov
fistp
js
xor
lea
jmp
mov
in
mov
out
dec
xchg
jmp
sub
ja
adc
xchg
dec
int3
pusha
inc
nop
gs
mov
push
adc
push
js
(bad)
jp
cmc
mov
add
sub
sbb
dec
mov
add
pop
sub
adc
pop
jecxz
xchg
dec
push
and
test
dec
xor
enter
mov
icebp
add
push
or
sub
mov
inc
loop
push
mov
xlat
mov
mov
xor
je
add
push
imul
mov
test
test
add
mov
cmps
pop
add
sbb
popa
add
fiadd
mov
sub
jle
or
out
test
adc
cwde
and
es
xchg
push
mov
in
inc
inc
mov
aas
sbb
neg
mov
xadd
loop
mov
sub
cld
fst
xchg
push
clc
(bad)
lea
(bad)
sbb
mov
icebp
je
loopne
inc
add
cmp
jg
repnz
loopne
sbb
fild
cmp
into
jp
call
push
dec
jmp
out
push
add
sub
pop
sub
in
mov
add
sub
dec
mov
inc
mov
and
inc
stos
mov
cmp
jbe
inc
add
and
es
push
add
inc
cmp
pop
fiadd
adc
ror
xor
js
out
fadd
add
sbb
sbb
(bad)
push
sub
outs
xor
retf
mov
add
mov
enter
or
xchg
lods
xchg
jle
mov
into
les
mov
ror
out
inc
jg
ins
call
pushf
jae
adc
add
mov
mov
pushf
inc
push
loopne
mov
push
rol
movs
inc
mov
ss
add
lods
jne
jge
movzx
(bad)
movd
fisttp
pop
jl
dec
enter
lock
fmul
(bad)
rcr
lock
int3
fwait
mov
out
pop
test
sbb
pop
or
hlt
push
jo
mov
fcomp
mov
fild
push
inc
pop
cs
inc
mov
imul
movs
or
cs
push
inc
sbb
sub
push
or
adc
ins
jle
mov
daa
push
xor
jbe
loope
and
test
mov
pop
sbb
shl
test
jg
popf
xchg
(bad)
xor
jb
sbb
pop
frstor
aas
dec
or
or
pop
sub
hlt
push
sbb
outs
xchg
push
iret
adc
ins
mov
(bad)
jae
dec
inc
cmp
dec
fst
je
or
mov
lock
je
push
mov
add
jo
pop
or
clc
push
or
inc
push
loopne
dec
cmp
xor
cmp
sar
ins
mov
les
or
sbb
or
adc
xor
inc
inc
rcl
add
sbb
xor
sbb
or
adc
(bad)
ror
pop
mov
nop
or
and
jl
dec
push
jb
dec
add
addr16
inc
xchg
sub
dec
mov
je
xchg
js
dec
mov
lea
aam
mov
and
sub
xchg
mul
or
adc
movs
rol
hlt
and
daa
inc
cdq
arpl
xor
dec
mov
test
(bad)
mov
adc
mov
sub
adc
test
(bad)
ss
push
and
push
test
sbb
retf
nop
xchg
das
jmp
push
mov
push
inc
out
adc
(bad)
aam
push
inc
add
je
inc
mov
les
xor
adc
sub
nop
push
pop
ja
sub
push
or
cmp
scas
adc
pop
xor
sub
inc
dec
or
mov
rol
inc
shl
add
push
add
sub
aaa
xchg
xor
jle
cmps
shr
scas
(bad)
sti
daa
lds
inc
cmp
clc
call
jecxz
dec
push
push
nop
and
sbb
and
or
shr
jne
fistp
and
sub
arpl
aad
(bad)
xlat
mov
sub
call
lods
and
dec
fnstenv
js
repnz
and
dec
mov
xlat
push
jg
xchg
xchg
mov
push
mov
xor
add
mov
fs
lock
repnz
add
mov
data16
les
lea
in
or
daa
adc
pusha
leave
xchg
sbb
es
ficomp
add
stc
and
xchg
mov
mul
cs
xor
pop
out
sbb
xchg
mov
scas
(bad)
loopne
sbb
xor
push
inc
xor
inc
not
call
pop
imul
or
sub
in
add
add
or
retf
mov
or
loope
dec
fimul
lahf
sub
add
or
mov
mov
add
sub
sub
fs
add
and
xor
iret
dec
stos
sbb
hlt
(bad)
fdivr
xor
add
sub
push
dec
fwait
inc
loop
dec
add
jo
dec
adc
dec
dec
dec
pusha
dec
mov
cmp
dec
imul
pop
outs
aaa
or
inc
push
jecxz
outs
inc
daa
rol
or
jo
leave
adc
mov
mov
jne
mov
add
sbb
mov
mov
add
call
push
or
jg
add
mov
dec
jo
sub
test
xchg
add
cdq
inc
inc
or
push
fwait
imul
lock
fs
jge
sub
fistp
or
sar
fs
mov
sub
jge
out
sti
sbb
pop
add
lea
xor
pop
xchg
adc
add
icebp
add
adc
je
inc
jo
je
adc
dec
pusha
ja
or
push
js
out
add
out
je
jns
adc
outs
fsubr
sti
add
je
test
xor
mov
adc
sbb
push
cmps
ror
sbb
je
sub
xor
and
push
jl
into
in
and
loopne
inc
add
add
pushf
fmul
fst
adc
mov
imul
xor
call
jmp
ror
call
push
fsub
shr
xor
rcr
in
xchg
enter
mov
jbe
stc
jae
das
mov
lea
rcr
mov
lea
popa
xor
pop
lock
and
pop
push
loopne
mov
call
adc
ss
adc
imul
sbb
imul
cmp
aam
repz
sub
inc
xchg
dec
daa
push
daa
adc
or
push
imul
mov
sub
jno
add
shr
movs
pop
add
sbb
inc
or
or
pusha
int3
fdiv
pop
out
xlat
xor
and
mov
loopne
mov
mov
imul
aas
or
jp
cmp
in
fst
jno
or
cmps
js
inc
adc
fisubr
js
adc
dec
inc
jmp
inc
sbb
ret
out
or
sub
xchg
mov
xlat
fs
es
or
fs
cmps
adc
add
inc
sbb
fs
push
cwde
in
(bad)
int3
push
lea
cmps
pinsrw
imul
loope
pop
pushf
daa
aaa
clc
nop
test
adc
dec
sbb
adc
xor
dec
sbb
ret
cwde
add
add
push
ficomp
jae
mov
jp
mov
mov
jno
xor
push
and
inc
jge
clc
jns
sub
add
sar
xchg
push
gs
mov
test
jo
lods
fbstp
mov
(bad)
mov
mov
dec
iret
pop
and
jb
lock
aam
sbb
outs
ret
add
add
fisttp
fiadd
mov
jbe
mov
push
adc
inc
sbb
(bad)
push
xor
or
aam
add
and
xor
int
repz
jg
adc
jmp
dec
das
add
loopne
paddb
sub
mov
loope
mov
cmp
stos
femms
add
fadd
sub
sar
jb
ror
(bad)
sbb
mov
jae
pop
(bad)
aam
aas
loop
add
or
movs
fmul
les
push
movs
mov
loop
push
pop
retf
lock
sbb
loopne
or
add
and
cli
aam
iret
(bad)
ins
icebp
aas
inc
fadd
rol
adc
mov
sbb
push
les
pop
inc
cmp
or
sub
sbb
dec
jo
or
sbb
xlat
iret
(bad)
mov
pop
inc
sub
or
pop
push
or
jmp
cmp
je
inc
or
ficom
icebp
add
sub
in
je
adc
pop
sar
jnp
add
je
cmp
add
pop
lahf
in
xor
inc
adc
pop
xor
dec
das
mov
lods
cmp
pop
pop
adc
retf
and
imul
add
adc
mov
dec
imul
in
in
mov
adc
das
daa
pop
inc
or
cmp
ja
jl
xor
jne
rcl
and
out
add
inc
jmp
add
or
jne
sbb
jmp
js
aaa
(bad)
mov
shl
cmovb
ucomiss
sar
add
mov
adc
in
ss
js
dec
rcr
pusha
jns
pop
or
ja
imul
inc
adc
inc
jle
dec
or
or
push
dec
adc
jb
sar
mov
adc
inc
mov
or
jns
mov
repz
repnz
mov
inc
retf
push
mov
push
js
or
inc
sbb
fldenv
xor
test
enter
mov
xor
mov
call
out
pop
push
fwait
push
lock
xchg
adc
movs
retf
mov
fild
push
nop
mov
push
loopne
and
shl
sti
pop
lsl
dec
dec
sbb
mov
ret
add
xchg
outs
aam
lods
inc
out
shr
int3
js
ror
ret
mov
jo
test
push
inc
mov
add
test
shl
in
pushf
push
add
mov
sub
xor
pop
xlat
sub
fisubr
mov
jae
inc
cdq
pop
call
mov
add
jmp
mov
std
call
add
dec
and
inc
cwde
pushf
inc
mov
test
fcom
addr16
sbb
ds
popa
pop
jge
dec
push
pushf
sbb
sbb
ja
in
(bad)
mov
sbb
push
pop
rol
cmp
sbb
dec
cmps
pop
lock
sbb
fld
fadd
fistp
and
mov
add
jo
adc
jl
jge
rcl
pushf
inc
cs
inc
movs
dec
in
hlt
dec
js
adc
mov
jg
push
popa
cs
test
xor
dec
xchg
pavgb
and
adc
xchg
ror
int3
sbb
loopne
cmp
mov
push
mov
loope
imul
or
lods
adc
adc
jmp
xchg
xchg
jge
movs
jae
mov
pushf
adc
push
mov
or
mov
test
mov
adc
mul
pusha
xlat
push
into
mov
(bad)
fld
(bad)
or
neg
pop
mov
mov
dec
retf
cs
fld
xchg
inc
nop
sbb
xchg
ja
repz
(bad)
call
lahf
sar
neg
add
mov
sbb
xchg
mov
inc
jns
inc
mov
cmp
cmp
jl
and
pop
js
je
pop
lods
cmps
cmp
test
or
and
push
or
pop
push
cmp
or
adc
je
fadd
inc
and
push
add
mov
or
dec
or
(bad)
mov
neg
cmp
or
sub
inc
sahf
jl
movs
cmp
or
or
imul
clc
sahf
jb
jmp
mov
pop
sbb
inc
cmp
jle
cmp
scas
dec
pusha
sbb
dec
mov
dec
inc
test
sub
mov
clc
(bad)
ins
pop
js
mov
jg
pop
icebp
xor
pop
sbb
lock
xchg
mov
push
mov
out
push
or
push
sbb
es
push
jecxz
jmp
xor
cmp
sub
push
cmp
shr
sub
mov
clc
mov
imul
retf
adc
add
in
ror
push
push
les
inc
sbb
jae
and
mov
mov
push
push
outs
es
lock
lock
sbb
add
rcl
mov
cmp
sub
cmp
push
adc
adc
inc
sbb
rcl
inc
inc
push
lds
ja
lock
fadd
xor
aaa
sub
xor
js
in
(bad)
rol
pop
sub
sar
jge
pop
ins
cmp
out
fbld
inc
xor
lea
push
ror
add
dec
loopne
ror
in
jge
add
fs
test
inc
stos
jecxz
or
jecxz
jo
rcl
loop
lock
call
mov
dec
lea
ja
mov
hlt
pop
mov
loopne
xadd
push
push
ret
xor
fadd
ja
(bad)
mov
add
in
jl
and
scas
jo
jo
jns
add
fmul
jmp
sbb
pop
add
mov
sbb
xor
xchg
lock
loopne
jns
mov
push
in
jno
pop
dec
xor
adc
sbb
xor
mov
je
pop
sub
das
dec
cmp
sub
rcr
lahf
sub
lock
mov
hlt
lea
or
mov
and
xchg
loopne
sbb
outs
and
out
call
lock
addr16
ins
push
xchg
(bad)
mov
inc
jmp
sbb
jmp
xor
inc
fdivr
ret
sbb
sub
mov
(bad)
cmps
mov
ret
enter
push
jmp
rcl
push
test
enter
mov
and
push
mov
shl
mov
pusha
fcmovnbe
adc
add
inc
aad
jno
adc
and
pushf
add
int
pushf
fadd
fadd
out
or
inc
cmps
stos
clc
mov
cmp
jmp
pusha
jecxz
mov
xor
jl
jne
popa
aam
in
adc
dec
mov
sub
mov
push
int3
ror
outs
ins
movsx
add
or
mov
and
dec
aaa
or
cwde
mov
xchg
dec
clc
mov
add
or
mov
adc
pop
xchg
dec
sbb
fdiv
pop
and
push
jle
retf
push
sbb
dec
add
dec
mov
fsubr
add
jecxz
das
mov
fstp
dec
pop
and
rcl
mov
ror
mov
push
mov
repz
jo
enter
ret
jo
inc
and
add
jmp
js
in
pop
mov
jge
adc
bound
clc
and
jmp
mov
clc
stos
scas
lods
ins
lea
stos
mov
push
xchg
mov
or
mov
es
pop
jle
rol
mov
rcr
test
sbb
movs
sub
dec
dec
inc
ficom
hlt
mov
inc
push
inc
(bad)
jmp
lea
add
(bad)
lds
add
ror
out
jmp
xor
ret
xlat
cs
enter
pop
int3
lods
in
or
enter
jmp
xor
add
movs
gs
pop
aaa
fwait
xchg
fwait
xchg
cmc
cmp
sbb
cmp
adc
mov
das
mov
pop
sbb
adc
dec
pop
js
dec
push
retf
ror
outs
jbe
or
add
(bad)
sub
in
ss
out
xor
(bad)
sub
inc
add
adc
add
sar
add
xchg
dec
lods
push
jl
ror
mov
xchg
outs
mov
or
inc
sti
mov
out
xchg
jo
cmp
jge
cld
nop
sahf
ins
mov
jbe
inc
pop
or
sub
jg
(bad)
push
xchg
sbb
push
xchg
mov
xor
es
cmp
add
in
les
mov
aaa
or
adc
and
iret
adc
jno
or
sbb
loop
in
lea
sbb
div
fs
cmp
pop
js
enter
addr16
adc
aas
jmp
ret
sbb
lock
xchg
mov
addps
cli
sbb
cmp
jge
xchg
or
sbb
sahf
rcr
sub
inc
jge
rol
cmp
jbe
jle
fdivrp
dec
jne
fist
nop
mov
or
xchg
xchg
pusha
sub
inc
sub
cdq
or
or
inc
pushw
adc
in
dec
scas
icebp
(bad)
out
inc
cld
mov
jle
cwde
in
jae
mov
fld
in
or
sbb
fldl2t
pop
or
xor
add
inc
cs
jl
xor
and
xor
push
(bad)
fisttp
jge
cmp
jns
in
int3
fisttp
inc
hlt
pop
sbb
fmul
xor
sbb
cmp
das
cdq
mov
add
xor
adc
icebp
jmp
inc
add
loope
sbb
add
(bad)
cmp
cmp
adc
jb
(bad)
sbb
(bad)
fst
sbb
out
cmp
rcr
pop
push
inc
mov
push
ret
pop
rcl
shl
sub
dec
add
cmp
loopne
pop
pusha
rcl
xor
cld
add
adc
loop
jb
jecxz
inc
push
std
inc
inc
and
loop
sub
imul
sahf
inc
cmp
pusha
movs
repnz
inc
addr16
xor
fimul
pop
push
add
cmp
push
inc
adc
or
sbb
iret
sbb
sbb
inc
inc
addr16
dec
fiadd
or
mov
rol
dec
or
call
or
adc
inc
sub
mov
pop
(bad)
aaa
cli
dec
sub
sub
les
push
adc
inc
out
push
add
stos
push
js
sbb
je
xchg
add
out
pop
jge
xor
je
dec
cli
ds
add
es
push
inc
inc
les
adc
fdiv
sub
out
jo
imul
adc
xor
adc
loopne
sbb
in
mov
push
(bad)
dec
pop
test
adc
mov
mov
sahf
sbb
sbb
jb
sub
(bad)
pop
jns
or
xor
xor
push
loope
icebp
shl
stos
mov
jg
je
jg
and
retf
adc
push
and
push
cli
jae
jl
inc
mov
ret
test
or
add
jmp
in
inc
fild
sbb
cmp
cmp
test
xlat
arpl
add
push
pop
adc
sar
mov
add
test
or
adc
test
loop
mov
jl
and
sub
hlt
push
sbb
sub
mov
fisttp
out
add
add
(bad)
adc
cmp
mov
inc
addr16
push
(bad)
push
or
xor
mov
xor
int3
xor
dec
push
mov
sbb
jp
cmp
sbb
add
add
mov
inc
sub
mov
mov
or
sahf
mov
dec
adc
push
add
dec
(bad)
repz
push
arpl
cmp
sbb
mov
push
es
xor
sar
sbb
clc
in
cmps
adc
or
leave
sub
sbb
call
xchg
imul
ret
mov
into
sbb
xor
int3
mov
fdiv
fcomp
cld
popa
mov
adc
fisubr
sub
push
loopne
push
adc
enter
xchg
ins
jmp
xor
jle
cld
dec
pop
xor
in
pop
or
sbb
movs
cmp
jge
pusha
loope
push
clc
sub
cli
rcl
fdiv
mov
imul
retf
jmp
inc
in
jle
clc
pusha
dec
out
and
sbb
inc
movs
fcmove
or
ror
sbb
fild
outs
es
call
jg
xor
dec
adc
cmc
inc
adc
dec
aam
into
or
push
inc
stos
sbb
fcomp
mov
ror
pop
not
mov
jo
or
jle
aam
pop
mov
inc
(bad)
cmp
cmp
jl
or
xchg
inc
sar
or
xor
(bad)
std
jbe
adc
aaa
mov
xor
add
cmp
arpl
jge
pop
xchg
add
push
fsub
or
xchg
data16
xchg
or
add
sub
pushf
pop
sub
jne
jo
test
movs
xchg
jle
inc
pop
cmp
(bad)
out
call
dec
test
in
add
sub
mov
mov
xchg
add
mov
dec
or
nop
fdiv
enter
add
sbb
mov
add
adc
jge
inc
xor
xor
push
shr
mov
push
push
sub
jle
loopne
pop
add
mov
sti
mov
add
jae
fistp
shl
imul
in
mov
mov
sub
add
js
inc
adc
repz
mov
pushf
mov
xchg
mov
out
stos
adc
(bad)
in
rol
mov
jle
dec
xchg
jge
add
clc
add
add
(bad)
aad
pop
or
add
out
js
or
sbb
in
rcl
fistp
es
mov
sbb
test
cmp
sti
inc
arpl
gs
and
push
fs
ds
sbb
shl
or
add
inc
push
ss
dec
je
add
add
mov
retf
out
enter
nop
add
fwait
aaa
jo
cmp
enter
push
out
in
adc
adc
mov
sbb
or
or
in
xchg
cdq
cmp
jbe
into
pop
fsub
sbb
fimul
add
js
xor
mov
xchg
mov
pop
icebp
repnz
or
idiv
jnp
sbb
sbb
sub
inc
pop
lock
hlt
mov
xchg
leave
or
hlt
jp
lahf
ja
jge
sbb
rcl
loopne
ja
nop
inc
stos
xor
movs
inc
jl
retf
add
int
bnd
mov
inc
lods
sub
mov
add
arpl
(bad)
stos
adc
nop
call
loopne
inc
mov
data16
push
cmp
popa
jl
push
shl
add
xchg
and
mov
dec
test
or
std
sub
or
or
mov
mov
dec
js
loopne
paddusb
ds
and
pop
and
push
mov
sub
mov
add
jne
fsubr
adc
or
cmps
int3
mov
jbe
add
xor
add
ror
call
add
movsx
repnz
pop
add
cmps
mov
add
sbb
sar
pushf
push
inc
sahf
jo
(bad)
adc
sti
cmp
sbb
mov
aad
call
inc
stos
js
dec
(bad)
xlat
lods
mov
fistp
adc
cmp
adc
push
adc
cwde
sbb
mov
ss
loope
inc
jmp
cmp
mov
(bad)
out
cmp
xor
add
pop
out
inc
mov
add
in
adc
push
loopne
scas
call
sub
mov
push
push
jge
fsub
dec
test
lods
mov
pop
adc
pushf
add
dec
(bad)
sub
cmp
out
xchg
and
jne
push
fadd
lock
(bad)
shr
push
mov
sbb
retf
push
ret
push
in
pop
aam
fdiv
jnp
xchg
rcr
ss
adc
ret
pop
ja
dec
rcr
shl
cmp
shl
sar
push
jmp
daa
mov
mov
shl
call
cli
mov
pop
pop
mov
pop
xchg
or
aaa
push
into
add
inc
in
sub
adc
fimul
cmp
inc
inc
bnd
jnp
outs
push
xor
cmp
cmp
aaa
inc
test
add
xchg
ret
dec
fistp
jmp
cmps
call
call
lds
mov
test
shl
add
add
pop
add
inc
mov
movs
movs
sub
sbb
lods
lods
inc
jo
or
xor
mul
andps
inc
add
leave
push
rcl
retf
test
xor
test
fdivr
push
jns
add
(bad)
sti
push
mov
mov
jle
add
lea
push
xor
cmp
sub
xlat
sub
inc
sub
or
cmp
push
and
test
pop
and
fidiv
mov
add
pop
js
add
sbb
cmps
adc
pop
adc
out
loop
pusha
(bad)
mov
jmp
stos
mov
retf
push
arpl
adc
xor
sahf
inc
into
or
pminsw
mov
pop
ret
mov
jnp
stos
push
fidivr
and
jmp
and
cs
inc
xor
stos
mov
pop
cmp
mov
push
mov
xchg
cmp
jmp
add
mov
sub
pop
jle
imul
mov
add
push
sbb
and
pop
push
or
and
adc
xor
or
sbb
jmp
jb
xchg
cmp
push
cmp
dec
and
xchg
mov
mov
sbb
cs
mov
mov
mov
mov
adc
inc
pop
aaa
not
mov
cmps
cli
mov
test
sar
push
mov
push
inc
scas
loopne
movs
ret
cmp
mov
movs
dec
loop
mov
dec
rol
ins
pushf
or
push
push
or
pop
and
scas
xchg
cwde
pusha
cdq
mov
adc
dec
sbb
fs
add
pop
daa
loope
mov
jo
pop
retf
inc
cmp
int
ins
sbb
inc
cmp
adc
cmps
and
xchg
dec
jle
jp
jl
jl
sbb
mov
inc
adc
push
xor
jmp
and
add
mov
jp
cli
dec
adc
inc
enter
add
add
(bad)
pop
mov
retf
push
adc
int
push
pop
dec
inc
ss
rol
cmp
jle
cli
repnz
ret
dec
fcom
clc
mov
sbb
lods
rcr
pop
out
js
and
inc
fadd
or
popf
(bad)
enter
pusha
jne
dec
pusha
mov
pop
cmp
mov
or
jle
mov
mov
repnz
sub
in
xor
add
in
dec
and
inc
in
rol
shr
retf
inc
sbb
call
arpl
leave
push
jg
cwde
je
cmps
sbb
pop
loopne
jno
ins
pop
or
(bad)
jmp
xchg
mov
pop
div
add
int3
retf
xchg
mov
adc
push
lea
inc
inc
sbb
dec
cmp
daa
mov
ret
sbb
call
jmp
lea
sub
pop
push
or
mov
dec
mov
dec
add
ds
push
scas
inc
outs
add
sbb
add
dec
shl
add
inc
div
adc
int3
jl
into
jmp
xor
xor
and
aad
add
add
dec
or
cmps
sahf
out
sub
mov
shr
arpl
fs
mov
add
test
push
push
(bad)
rol
jl
and
mov
add
cmp
or
dec
out
test
sti
and
cmp
pop
gs
pop
pop
sub
cs
shl
xchg
sar
dec
repz
push
pusha
inc
push
(bad)
pop
push
xchg
mov
sbb
js
sub
jecxz
inc
sub
pop
or
jb
mov
pop
adc
xchg
fimul
inc
(bad)
cmp
into
cld
push
push
out
push
fisub
shl
xlat
jb
cmps
dec
add
sar
retf
xor
out
xor
mov
or
sbb
pusha
retf
mov
mov
dec
iret
dec
fiadd
mov
push
adc
mov
mov
and
or
lahf
pop
adc
cmps
jns
or
lods
mov
or
mov
ret
cmp
lahf
jmp
lea
clc
jmp
mov
sub
dec
pop
pop
mov
jo
add
add
and
ja
nop
call
inc
and
mov
sar
dec
retf
xor
or
jl
sub
fistp
xor
dec
cmp
add
inc
cs
mov
aas
sti
jl
cmp
inc
dec
ret
leave
stc
in
test
fcomp
scas
pop
mov
ret
fbstp
push
sub
int3
loopne
add
fnsave
pop
xchg
stc
adc
(bad)
pushf
dec
dec
mov
add
retf
or
add
scas
sbb
popf
mov
bound
add
scas
or
ret
fist
xchg
out
shr
push
xchg
fs
inc
cmp
mov
push
rol
outs
inc
dec
xchg
scas
xor
mov
mov
retf
sbb
sbb
push
dec
loopne
push
jmp
retf
nop
dec
cmp
lods
cmps
sbb
nop
cmp
jecxz
aaa
ret
jno
adc
daa
push
inc
xchg
add
xchg
adc
add
push
inc
pop
jb
adc
add
scas
push
stc
jo
push
les
popf
test
mov
mov
sbb
sub
xchg
adc
or
imul
dec
test
or
sub
mov
(bad)
pop
dec
xchg
sbb
mov
es
jnp
inc
dec
jl
adc
mov
add
lock
mov
jl
ds
cmp
jg
inc
fidivr
dec
retf
xchg
in
dec
icebp
xor
cmp
adc
push
mov
loop
mov
adc
push
or
cmp
jge
ds
add
sub
or
cmp
pop
test
(bad)
frstor
in
sbb
cwde
scas
test
push
dec
inc
mov
jnp
push
ud0
jp
push
push
sbb
ror
mov
(bad)
mov
mov
or
add
dec
scas
mov
inc
fmul
mov
ror
ss
or
xchg
fisttp
pop
xchg
push
and
jp
mov
lds
movs
sbb
push
fadd
xor
adc
jno
cmps
or
mov
jge
xchg
mov
clc
pop
mov
lea
fild
sbb
cwde
inc
or
and
inc
jl
jl
les
dec
xor
jmp
jo
mov
icebp
mov
jge
inc
pop
in
mov
jae
sub
jl
loop
or
mov
or
ret
cld
(bad)
pop
dec
inc
xor
or
or
pop
pop
adc
pop
pop
add
fsubrp
mov
cmp
cdq
inc
inc
sbb
lods
add
push
jns
push
adc
(bad)
div
pop
mov
or
sbb
xchg
push
jbe
cli
adc
or
(bad)
lea
into
bound
stos
cdq
frstor
mov
mov
xor
test
jp
jne
or
push
ret
sbb
push
jb
mov
pushw
shl
xlat
test
inc
dec
loop
sbb
push
je
mov
xchg
test
push
mov
nop
add
sub
add
dec
fistp
push
mov
ror
aad
lock
into
aam
jmp
jmp
aad
pop
fwait
or
push
inc
add
xor
jmp
adc
stos
push
and
push
jne
and
or
xor
pushf
mov
push
xor
push
dec
lahf
hlt
fwait
cwde
xlat
xchg
pop
cmc
xchg
adc
mov
jmp
fidiv
sbb
div
shr
ret
lea
mov
jae
add
jbe
sub
fldenv
dec
das
mov
loope
in
imul
imul
(bad)
outs
mov
jo
retf
clc
ss
mov
inc
inc
mov
sbb
cmp
adc
pop
fld
add
test
add
sub
inc
fmul
and
ss
or
push
add
ins
sub
inc
aam
out
arpl
ds
bndstx
pop
lahf
fild
cmp
retf
adc
xor
mov
fimul
loopne
jl
jmp
jnp
inc
sub
jbe
pop
xor
adc
ret
(bad)
jge
das
push
ret
fstp
pop
loopne
push
(bad)
sub
jae
push
xchg
inc
jo
add
and
cmps
out
mov
inc
and
add
icebp
or
inc
or
jae
sti
cld
push
push
push
mov
dec
push
pushf
aad
mov
add
push
sub
and
sti
push
loopne
or
and
nop
lea
jmp
movs
in
sbb
xchg
cmp
sub
sub
push
mov
pop
push
dec
mov
xor
add
mov
jo
add
pop
out
int
dec
adc
inc
push
fsubr
sub
mov
add
pop
inc
push
sahf
pop
aaa
jmp
fs
inc
mov
inc
adc
imul
jmp
call
or
icebp
sub
xor
push
mov
and
sysenter
add
mov
add
not
pop
or
push
das
lods
mov
xchg
hlt
mov
dec
xor
out
dec
mov
push
xor
in
test
push
mov
std
xor
mov
jo
and
dec
aad
(bad)
mov
mov
daa
mov
push
adc
into
lock
pop
popf
dec
pop
test
pop
adc
cmp
in
adc
xchg
push
pop
cwde
jo
ja
cmc
ret
loop
xor
sbb
jae
jp
mov
setp
adc
and
gs
ja
mov
and
fmul
sub
jno
pop
mov
or
mov
mov
inc
hlt
push
loope
pop
pop
push
rol
jle
daa
cmp
mov
fnstcw
mov
in
sub
or
in
neg
inc
call
test
or
xchg
cmp
rol
ins
into
enter
adc
sbb
xor
shl
mov
add
shl
pop
dec
sar
out
ins
arpl
mov
and
stos
lea
mov
js
inc
add
sbb
sbb
adc
out
stos
adc
cmp
sbb
or
stos
shr
je
div
or
pusha
pusha
arpl
and
jl
dec
dec
sbb
push
mov
pop
rol
dec
push
push
push
pop
in
cmp
push
test
inc
add
jmp
je
(bad)
add
leave
xor
and
xlat
xor
fs
cmp
dec
cmp
or
ficom
mov
inc
call
movs
jb
sti
sbb
(bad)
das
stc
sub
pop
lock
mov
dec
add
adc
jo
icebp
mov
sbb
iret
outs
test
mov
(bad)
jo
movs
test
xor
in
movs
lahf
xor
(bad)
pop
add
fst
bound
and
xor
popf
mov
xchg
rcl
and
add
sbb
inc
sar
ins
clc
adc
movs
pop
inc
stos
ja
pushf
adc
popf
or
fstp
(bad)
fdiv
dec
and
inc
push
mov
adc
cmp
fadd
fldcw
loopne
jne
jl
push
shl
and
pushf
sub
pop
fidiv
sahf
mov
dec
je
add
jmp
sbb
into
and
movs
sbb
inc
test
jo
push
pop
inc
mov
pop
mov
call
or
inc
outs
and
add
cld
inc
cmp
mov
fidiv
pop
push
xchg
dec
or
fisubr
xor
sub
dec
mov
fcom
sub
push
lea
pop
mov
dec
movs
je
pop
ret
add
adc
mov
inc
sub
xchg
jecxz
ret
add
imul
gs
sbb
sub
jmp
push
fcom
jae
int3
or
xor
adc
ror
mov
pop
xchg
jl
jbe
sub
or
je
push
int3
in
cmp
int3
add
xchg
push
sub
fidivr
fs
or
inc
adc
sbb
push
fwait
aas
sbb
nop
push
dec
cmp
jno
(bad)
xchg
lock
test
repnz
jae
jo
mov
sbb
cmp
or
es
daa
add
add
mov
xchg
sbb
adc
pop
dec
xchg
test
mov
out
dec
adc
je
cmc
cld
retf
fdivr
jnp
jge
js
hlt
or
outs
js
xor
sbb
mov
stos
adc
sbb
and
inc
dec
adc
js
or
mov
in
push
popf
push
repnz
mov
or
dec
xchg
xchg
arpl
push
add
(bad)
pop
mov
je
jmp
out
cmp
push
push
xchg
push
fidiv
rol
(bad)
jmp
(bad)
aad
cld
or
mov
fstp
mov
dec
je
add
jmp
cmp
not
xlat
sbb
and
fst
push
jne
gs
sbb
add
cdq
mov
dec
xor
es
cmp
lahf
add
xor
add
inc
sub
or
push
add
push
fisttp
add
xchg
popa
sub
in
sub
movs
(bad)
fnclex
add
leave
dec
cld
and
sbb
jmp
xchg
outs
out
dec
cmc
xor
sbb
mov
lds
push
movsx
inc
fiadd
retf
fsub
sti
rcr
jmp
push
jp
inc
lods
std
not
jmp
cmp
cmp
std
or
lea
mov
pop
xchg
in
mov
sub
ret
jl
cwde
fstp
inc
inc
fmul
add
test
or
sbb
fistp
addr16
jl
xchg
sub
mov
mov
and
lods
xchg
mov
mov
or
add
(bad)
and
pop
dec
hlt
and
mov
mov
add
jmp
adc
sub
mov
adc
sbb
inc
add
adc
dec
push
loope
daa
lock
sbb
stos
rcl
jl
pop
dec
jae
sub
xchg
dec
aam
pop
cmps
pusha
in
jbe
inc
sub
pop
cmp
mov
(bad)
or
in
test
cmp
wbinvd
inc
xchg
loop
push
stos
xchg
sahf
and
mov
xchg
xor
jp
pop
sbb
cmp
fidiv
push
and
dec
inc
mov
sbb
jmp
pusha
daa
jmp
or
sub
div
or
retf
enter
jmp
push
(bad)
fxch
and
data16
sub
mov
mov
pop
inc
rol
jecxz
cmp
mov
daa
mov
arpl
mov
inc
clc
les
mov
(bad)
jne
rcl
scas
test
stos
inc
ret
sub
in
lea
pop
and
dec
add
test
jo
cld
or
push
inc
mov
mov
inc
or
dec
mov
sub
pop
xchg
jmp
addr16
mov
leave
outs
test
mov
and
mov
and
inc
push
mov
jg
inc
arpl
jno
mov
dec
or
add
mov
push
cli
cmp
jbe
mov
inc
mov
sbb
xchg
ja
mov
jg
ss
inc
cmps
mov
push
ss
adc
ror
add
clc
dec
sbb
ins
dec
mov
imul
jo
jb
or
cmp
int3
dec
or
fcom
inc
mov
fadd
sbb
jge
jb
rol
push
hlt
lock
push
aam
or
hlt
jg
push
jo
jne
push
or
lock
js
adc
or
and
push
retf
out
and
sub
shr
lea
jno
sub
and
mov
scas
(bad)
cmp
mov
push
add
inc
loop
sbb
imul
sahf
test
jbe
mov
nop
enter
popa
pop
adc
mov
push
rol
inc
sbb
push
and
and
arpl
loope
dec
and
aam
push
adc
ror
ficom
add
je
pop
and
or
test
fsub
lea
adc
ins
xor
in
dec
push
sub
cmp
(bad)
xor
mov
popa
popa
imul
sbb
popa
dec
in
mov
call
pop
in
adc
xchg
mov
out
es
pop
in
jp
mov
loopne
ds
pop
fucom
stos
rol
ja
push
dec
jecxz
arpl
or
jecxz
mov
jge
jge
jl
mov
dec
sub
pop
ret
pop
cmps
mov
mov
add
mov
or
mov
adc
sar
jmp
inc
test
sbb
mov
cmp
jg
and
add
add
mov
sahf
rcr
std
lea
or
mov
jg
dec
and
jmp
lahf
mov
and
enter
inc
push
cmp
(bad)
sbb
mov
mov
loopne
popa
adc
pop
mov
in
dec
or
shr
jp
sbb
mov
(bad)
push
push
cmp
pop
call
mov
cwde
sub
jbe
pop
js
sar
cmp
mov
xor
fisubr
mov
jge
sub
dec
pusha
ret
out
sub
jae
movs
iret
jnp
push
jle
jmp
mov
sbb
(bad)
iret
and
sar
iret
ficomp
push
mov
cmp
dec
loopne
or
adc
loope
and
push
pop
dec
fadd
jecxz
movs
pop
adc
mov
dec
addr16
lock
sti
(bad)
ds
loope
jb
iret
dec
imul
lahf
mov
or
mov
dec
(bad)
aam
add
push
push
dec
repz
jne
or
jae
xor
repz
inc
gs
pop
adc
dec
repz
push
jo
fild
fsubr
in
in
cs
or
dec
and
inc
pusha
inc
push
stc
pop
mov
adc
pushf
loopne
add
ret
pop
fwait
div
xchg
cld
fild
fmul
adc
inc
fdiv
shl
shl
jnp
int
push
les
fsub
and
pop
imul
lock
fidivr
fcom
cld
and
in
fistp
mov
adc
and
in
dec
shl
push
mov
in
jo
loopne
in
lods
imul
and
loopne
les
sub
and
mov
mov
mov
fcmovbe
loopne
ror
fld
gs
sbb
(bad)
jo
fmul
cmps
mov
jl
jns
cmps
in
in
call
out
in
cld
sbb
inc
fnstsw
sbb
and
frstor
pop
inc
adc
call
cs
push
and
xor
pusha
push
jp
push
inc
test
(bad)
js
lock
xor
jne
imul
adc
adc
cmps
test
arpl
repz
xor
adc
nop
stos
popa
movs
adc
arpl
or
mov
rcl
test
and
inc
dec
mov
retf
cmp
push
xchg
pop
in
add
dec
jno
push
aaa
cmp
add
mov
push
sbb
add
sub
out
stos
mov
inc
inc
add
xor
stos
sbb
mov
repz
aas
pop
sub
aam
mov
jne
daa
rcr
mov
xchg
aad
pop
sbb
sbb
pop
dec
push
add
inc
add
mov
gs
pop
cmp
sar
push
inc
push
push
sar
jo
or
cmps
pop
pop
lahf
inc
scas
or
(bad)
mov
or
shl
rcl
mov
outs
pop
push
rol
sub
cmp
add
inc
pop
and
pusha
mov
push
dec
sbb
shr
sahf
add
ds
js
push
and
fcmovnu
sub
imul
add
sbb
add
push
stos
lock
in
sbb
sub
ins
ss
xor
loopne
fucomp
cmp
js
mov
or
aam
mov
and
lahf
jns
push
arpl
test
xor
(bad)
loopne
loopne
xchg
jle
(bad)
fs
repnz
sub
push
es
push
mov
fiadd
arpl
sti
enter
mov
fisttp
add
inc
movs
aam
adc
adc
add
data16
push
cs
mov
inc
into
add
rcr
add
sub
sbb
xor
jbe
add
mov
push
sub
push
mov
sub
and
or
stc
call
sub
shl
loopne
push
sub
sbb
mov
(bad)
jmp
(bad)
std
push
jnp
icebp
aam
nop
dec
add
adc
je
add
push
cmps
add
shl
or
add
sbb
mov
fistp
and
mov
mov
add
shl
push
pop
iret
add
push
hlt
and
out
pop
retf
fisub
call
add
or
mov
xchg
fdivr
(bad)
xor
dec
inc
fnstenv
sti
push
sbb
dec
add
dec
sbb
pop
or
add
adc
adc
and
pop
dec
sub
sbb
in
mov
sub
push
int
enter
outs
sub
sub
loop
cmp
inc
call
add
xchg
cmc
push
dec
fdiv
push
les
dec
and
out
pop
in
loopne
inc
cmps
push
ss
(bad)
fmul
(bad)
mov
out
fidivr
or
cmp
xor
popf
out
sub
dec
sbb
test
mov
and
mov
retf
pop
and
pusha
retf
sti
push
in
out
(bad)
cmp
xchg
push
into
inc
and
sub
in
icebp
shl
or
fistp
or
add
neg
lea
shr
mov
cmp
pop
mov
imul
loop
shr
jp
lods
sub
call
dec
jae
and
push
mov
jns
push
pusha
sbb
adc
dec
or
retf
cs
(bad)
sti
add
xor
imul
adc
or
lock
jns
cmp
inc
call
repz
cmp
hlt
neg
and
inc
ins
imul
push
in
int
cwde
push
outs
add
cdq
add
push
ja
cld
add
and
aam
lock
dec
pop
repnz
jbe
sub
and
out
clc
add
add
sub
adc
xchg
in
and
dec
xor
fdivr
pop
(bad)
fsub
add
push
push
xchg
retf
push
in
aas
cmp
ret
nop
cs
xor
sbb
xor
loop
sar
sbb
mov
mov
add
add
push
pop
pushf
aas
out
movs
mov
mov
retf
sbb
stos
pop
jne
mov
neg
(bad)
sub
push
pop
fadd
and
arpl
aam
cmps
imul
add
pushf
jns
adc
nop
sub
push
pop
fxch
retf
imul
pop
retf
pop
sti
jmp
or
dec
lods
or
mov
push
test
push
xor
cmc
shr
add
out
ret
cmp
vshufps
add
cmp
popa
stos
imul
test
fsubr
add
(bad)
mov
jp
mov
jp
dec
cmp
xor
add
jnp
stos
add
jns
or
sar
pop
add
int
push
sbb
jecxz
ins
jno
test
pushf
lock
pop
dec
xchg
or
sahf
scas
ins
dec
lock
push
and
fidiv
out
push
mov
pop
pusha
and
xlat
(bad)
inc
add
sub
add
or
iret
xchg
pushf
adc
or
enter
out
scas
clc
and
adc
cmp
clc
dec
shr
dec
push
sub
mov
mov
jbe
push
lods
loope
pop
repz
sub
pop
add
sbb
ss
loopne
pop
adc
imul
inc
lock
add
sahf
(bad)
adc
or
mov
cli
aaa
push
popf
push
add
inc
add
or
movs
jnp
xor
add
push
mov
xor
popa
mov
ret
loopne
ror
clc
cmps
test
jbe
push
mov
mov
ficom
xchg
adc
xchg
int
leave
fimul
and
cmp
(bad)
xlat
int
loope
or
and
call
mov
add
loope
sub
xchg
sbb
pop
cli
imul
or
sub
(bad)
and
adc
add
mov
std
data16
test
add
mov
pop
arpl
sbb
cld
mov
test
xchg
fcom
loopne
js
inc
xchg
mov
pop
idiv
fisttp
dec
movzx
shl
inc
js
add
xor
pop
rcr
call
out
fsub
ror
rcr
mov
sub
sbb
rol
js
mov
inc
add
pop
adc
nop
popa
pop
test
push
clc
xchg
or
and
inc
sub
repnz
pop
add
xor
cmp
or
sbb
enter
sub
and
cmp
jmp
(bad)
nop
or
push
inc
sub
data16
push
mov
call
aaa
xchg
(bad)
retf
dec
inc
adc
cmp
sar
inc
iret
mov
dec
popf
sar
int3
sub
pop
mov
inc
or
push
ja
jp
in
xor
push
adc
and
dec
adc
push
arpl
(bad)
icebp
xchg
push
pop
mov
xor
xchg
push
xor
mov
cmps
and
cmp
gs
icebp
call
dec
mov
mov
outs
jne
out
test
in
sbb
stc
pop
ja
mov
dec
add
into
inc
pop
aas
movs
nop
retf
jl
rol
add
add
ror
mov
rol
mov
not
adc
mov
sbb
out
jb
adc
std
sti
or
shr
or
pusha
movs
mov
mov
ss
pop
add
xchg
and
mov
pop
sbb
(bad)
movhps
mov
adc
bound
inc
icebp
leave
add
add
mov
push
cmovnp
leave
dec
inc
and
or
lods
cld
nop
dec
adc
sbb
inc
loop
adc
pushf
mov
add
rcl
sbb
add
push
xor
test
or
cmp
mov
dec
jb
test
nop
pop
add
adc
or
xor
or
sbb
dec
(bad)
cmp
push
sbb
sbb
cld
cs
ja
xor
test
cmps
fcompp
stos
push
lock
call
cld
xchg
dec
mov
dec
pop
jl
outs
add
inc
xor
sub
ins
and
jmp
pop
push
or
sub
(bad)
das
mov
and
push
pop
add
aas
lds
outs
push
popa
(bad)
xor
inc
mov
mov
add
adc
adc
push
add
jbe
adc
cmp
rcr
adc
sub
and
cmp
sbb
pop
call
push
xor
out
sbb
sbb
push
adc
or
xor
xor
and
and
xchg
lock
es
lock
xchg
sub
pop
mov
or
in
fs
add
and
or
jno
adc
adc
rcr
inc
push
(bad)
scas
sub
pop
aaa
sub
ins
or
add
inc
jmp
les
and
daa
jl
iret
push
test
or
add
add
(bad)
repz
dec
push
xor
inc
or
shr
adc
push
jg
xor
(bad)
(bad)
fiadd
cmp
(bad)
aad
cmovno
loop
jo
js
ret
arpl
cmp
iret
call
scas
dec
int
or
call
es
push
and
inc
stos
popa
fbld
pop
mov
cmp
loopne
(bad)
pop
je
xor
ret
enter
sbb
jg
adc
jmp
cmps
leave
jp
sbb
jns
sti
jmp
pop
(bad)
popf
ficomp
push
in
cmp
cmp
cmp
in
js
nop
popf
add
lock
aam
pop
dec
adc
and
and
adc
test
push
add
push
jmp
mov
pusha
add
xor
lock
push
shr
adc
push
dec
ret
call
push
add
imul
movs
or
mov
ja
push
adc
adc
sbb
or
dec
mov
or
(bad)
adc
jmp
push
sti
mov
jp
mov
vpmuludq
mov
xor
jl
test
push
add
inc
push
jbe
cmp
add
(bad)
adc
lds
inc
or
iret
add
pop
fiadd
xor
adc
adc
and
adc
adc
add
add
xchg
xchg
cs
mov
(bad)
daa
arpl
or
and
cmp
push
push
jp
rol
lds
nop
loopne
mov
ja
sbb
inc
(bad)
or
push
push
jge
sbb
jle
push
jb
test
adc
das
in
jnp
inc
adc
dec
es
add
daa
call
fadd
ja
mov
mov
mov
ja
ror
push
leave
inc
or
or
jle
cmp
data16
and
ss
cmps
cld
cs
loope
enter
mov
iret
test
mov
ja
xchg
sub
call
mov
enter
push
inc
scas
fiadd
xchg
iret
in
mov
call
ins
xchg
adc
push
or
inc
ficom
and
mul
cmc
out
or
xchg
out
add
cmp
pushf
add
mov
aad
or
jns
jns
dec
add
push
mov
stos
add
sar
push
mov
add
xor
xchg
mov
je
dec
je
ss
push
enter
ins
jmp
xor
dec
xor
push
outs
and
pop
xlat
xor
inc
pop
cmp
sbb
mov
sbb
loopne
cmp
ror
inc
inc
fwait
cmp
int
repz
xchg
add
add
stc
mov
das
add
jne
test
inc
add
sbb
add
push
cmp
or
and
dec
or
or
xchg
addr16
xchg
cld
clc
hlt
jl
sbb
fs
dec
popa
test
push
cmc
mov
and
pop
pop
cmp
inc
mov
push
sbb
adc
inc
ins
pop
sysenter
scas
jecxz
xchg
js
push
pop
scas
pop
mov
add
mov
imul
dec
ins
jno
pop
loope
fadd
int
jl
rol
cmp
push
pop
mov
push
dec
(bad)
je
pop
ror
mov
xor
cmp
pop
adc
or
jle
mov
jb
xchg
sahf
shr
xchg
sahf
pop
(bad)
ret
sub
push
sbb
and
inc
push
lea
aad
cwde
add
aaa
mov
push
das
(bad)
xchg
xchg
xor
scas
jmp
mov
(bad)
movs
or
in
cmp
inc
rol
lods
pop
sbb
mov
aad
adc
and
push
mov
sbb
xor
shl
mov
dec
repnz
ss
pop
mov
hlt
inc
pop
ror
push
jl
push
pusha
gs
jbe
adc
retf
xchg
repnz
pop
cmc
cmp
imul
pusha
add
mov
xor
sub
mov
cmp
rcl
add
adc
push
fild
lock
or
inc
xor
mov
repnz
jmp
aas
nop
cmc
shl
sbb
add
adc
add
sub
in
jmp
hlt
mov
je
arpl
mov
movs
xor
out
cmp
ficomp
push
xor
dec
(bad)
mov
call
or
and
dec
inc
fwait
or
in
adc
shl
cmp
add
push
jbe
push
cmp
mov
adc
xchg
clc
or
push
dec
or
mov
lfence
adc
and
xor
jmp
aam
mov
aad
inc
xor
sub
xor
pop
(bad)
pusha
push
adc
xor
cmp
ret
call
xor
and
lock
fcomp
mov
in
sub
call
cmp
cs
mov
and
nop
daa
ret
pop
test
xchg
or
mov
mov
or
loopne
cmps
cmp
push
add
jno
arpl
jg
mov
inc
dec
cmp
rcr
inc
sbb
outs
jne
mov
dec
pop
lds
add
leave
ja
shl
cmp
jmp
je
push
shr
cmp
push
sbb
popf
adc
imul
mov
scas
shl
mov
jb
das
arpl
ror
push
cmp
inc
icebp
retf
add
or
add
push
repz
arpl
jno
and
lea
jge
xor
or
test
xchg
push
sbb
jns
jle
push
push
nop
js
adc
sti
jle
jns
xchg
dec
cli
int
jge
push
add
fwait
dec
lds
add
(bad)
ds
xchg
dec
or
add
and
add
sti
lock
jbe
jo
out
stc
sub
or
push
fldcw
push
cmp
sub
sub
mov
sbb
call
dec
sbb
(bad)
cmps
push
push
nop
test
fmul
add
sbb
movs
loopne
outs
addr16
and
push
fcom
into
enter
pop
inc
sbb
or
push
pop
icebp
cmp
or
or
repnz
dec
lds
and
imul
add
fidiv
lahf
clc
(bad)
movs
push
cmp
xchg
cmp
cmp
mov
mov
push
add
outs
xchg
mov
imul
mov
pop
enter
stc
pusha
daa
test
cld
xchg
xchg
push
frstor
mov
aad
loope
mov
popa
call
dec
bound
or
pop
adc
cwde
sub
sbb
mov
cmp
sbb
xadd
cwde
sub
add
dec
jle
adc
mov
mov
ins
stc
mov
ss
test
sub
imul
ss
adc
adc
xor
loop
rol
and
or
add
mov
pop
mov
sbb
and
ins
call
sub
shl
inc
jl
sub
jle
push
(bad)
hlt
pusha
and
add
push
add
add
pop
dec
dec
jae
pop
fidiv
sub
(bad)
in
test
inc
push
sbb
mov
sbb
je
add
cs
cmp
add
or
daa
or
mov
adc
push
dec
cdq
mov
mov
seto
mov
and
ds
std
adc
shl
add
mov
adc
mov
neg
lea
fiadd
mov
mov
int3
pop
cwde
pusha
mov
mov
out
stos
fdivr
pop
adc
and
or
sahf
add
pop
dec
cld
jg
aaa
cwde
mov
jbe
sub
cmp
jge
mov
push
js
or
sub
xor
or
push
jae
mov
lods
cs
es
and
jnp
mov
inc
add
cmp
jae
jo
dec
mov
sbb
out
adc
icebp
adc
xchg
jo
push
sbb
sar
sbb
mov
xchg
adc
mov
ja
add
adc
pop
pop
ret
pop
enter
add
sti
or
fimul
sub
lahf
add
mov
sub
inc
cld
xchg
icebp
mov
aam
cmp
add
movs
mov
add
or
adc
push
dec
add
fdivr
add
pop
mov
int
fcom
add
fdivr
mov
adc
pop
xchg
call
adc
ins
push
and
aam
add
xchg
cmp
adc
or
das
add
xchg
(bad)
les
jl
cmp
sub
and
ins
jle
mov
test
push
inc
mov
ret
add
push
dec
daa
cmp
cmp
push
(bad)
shl
xchg
inc
sbb
popa
adc
xchg
or
maxps
mov
jbe
test
push
mov
rcr
add
add
add
ds
xor
outs
dec
das
sbb
ret
std
add
mov
outs
or
or
cwde
adc
add
test
cmp
mov
test
xchg
or
int
ja
popf
adc
pop
mov
lea
jb
jecxz
lock
ret
pop
push
add
pop
imul
shl
add
call
ret
push
or
cmp
dec
add
push
clc
sbb
add
mov
outs
add
icebp
mov
popf
xchg
mov
out
aaa
out
adc
push
mov
xor
and
fwait
shl
mov
fs
jg
pop
fdivr
jmp
add
mov
cmp
outs
and
pusha
rcl
add
inc
jp
aas
and
xor
stc
xor
dec
push
push
xor
sub
shl
push
popa
inc
push
fmul
inc
clc
add
cmp
mov
adc
or
dec
into
xchg
jne
or
or
mov
mov
add
sbb
mov
call
xchg
fst
inc
mov
cmp
sub
retf
retf
pop
out
sbb
es
(bad)
les
ret
popf
and
xchg
je
dec
add
or
xor
loope
popf
(bad)
cmovnp
dec
(bad)
mov
test
rcr
pop
imul
mov
mov
popf
inc
inc
mov
mov
ret
push
mov
xchg
mov
add
push
ffree
xor
fidivr
rol
aam
adc
cmps
dec
cmp
dec
adc
iret
sub
fisub
mov
into
repz
xchg
mov
add
dec
xor
movd
fnstenv
cwde
sub
sbb
stos
push
test
addr16
and
mov
add
inc
sub
fs
xor
dec
repz
(bad)
jg
push
mov
cmp
pop
cdq
mov
dec
or
dec
sub
not
push
iret
jae
push
cwde
xchg
data16
jb
dec
loopne
je
scas
push
jb
mov
cmp
sti
cmps
inc
push
jo
dec
sbb
and
sbb
push
mov
pusha
ret
enter
and
sbb
adc
dec
add
test
and
inc
std
dec
sbb
and
shld
test
fadd
xor
pop
mov
retf
xor
pop
fidivr
adc
aam
fist
jb
sub
add
jbe
xor
mov
inc
mov
or
inc
cmp
and
loop
mov
add
or
dec
enter
cmp
dec
and
mov
push
outs
fbstp
and
xchg
jge
imul
bound
jg
mov
push
mov
(bad)
jbe
sti
fisttp
jg
mov
add
or
xor
push
call
dec
jmp
or
xor
inc
(bad)
xor
sbb
fist
mov
fidivr
rol
pop
test
add
or
add
jecxz
sbb
inc
pop
test
pop
or
xor
(bad)
jecxz
movs
push
pop
mov
in
jg
push
dec
xchg
jo
adc
jge
jmp
or
mov
add
xchg
outs
or
xor
lea
popf
fistp
or
cmp
dec
and
leave
out
or
adc
add
mov
or
add
jmp
jp
push
daa
sub
mov
cmc
add
add
mov
sbb
mov
add
adc
fbstp
lock
mov
and
sub
mov
mov
push
sub
sub
push
dec
xchg
sbb
js
or
pop
xor
jnp
sub
js
nop
arpl
sbb
mov
mov
jl
gs
and
ja
(bad)
cli
jmp
xchg
(bad)
and
xchg
mov
call
pop
cmp
icebp
sbb
data16
push
xor
pop
xchg
adc
orps
mov
cmp
fdivr
xchg
sbb
cli
pop
adc
adc
ins
addr16
bound
mov
add
retf
push
add
adc
xchg
leave
xchg
or
je
je
jecxz
dec
adc
xchg
xor
inc
xchg
push
push
xchg
pop
or
xlat
xor
imul
and
xor
push
mov
inc
es
mov
xor
ret
xchg
stc
jmp
mov
xchg
adc
adc
inc
mov
fidiv
cs
push
mov
daa
cmp
push
lods
sub
addr16
imul
es
pop
and
jmp
out
adc
mov
mov
push
jecxz
scas
xor
push
or
sbb
mov
imul
push
adc
movs
pop
or
adc
push
pop
and
(bad)
adc
rcr
fstp
or
sbb
not
and
mov
push
pop
loopne
and
pop
xlat
mov
loop
and
inc
add
in
pop
xor
sbb
ja
and
inc
cwde
fist
xchg
sbb
pusha
inc
or
sbb
sub
cmp
ret
xor
push
mov
pop
pop
dec
xchg
push
inc
aas
cmp
mov
mov
mov
or
adc
mov
(bad)
pusha
xor
dec
jbe
and
inc
push
ss
pop
and
mov
aas
sbb
xchg
pop
dec
add
lock
pop
push
sbb
xor
mov
dec
mov
adc
aas
daa
sar
or
sub
sbb
call
loopne
xchg
xor
jb
and
inc
sbb
mov
bound
movs
pop
rol
pop
inc
xor
inc
sbb
mov
cmp
mov
test
ins
sbb
adc
add
inc
sbb
mov
add
rcr
or
and
dec
push
add
inc
idiv
pop
jmp
pusha
pop
inc
add
add
ror
lds
nop
(bad)
call
jl
fimul
jb
loopne
xchg
sbb
xor
mov
jmp
mov
adc
jmp
lea
(bad)
mov
and
xchg
jne
or
out
push
ret
xor
add
push
inc
jae
mov
adc
pop
dec
or
jo
jg
jg
mov
sbb
push
movs
jge
xchg
int
xchg
les
int3
mov
push
fistp
jle
popa
mov
aas
pop
dec
dec
cmp
and
push
(bad)
stos
adc
out
push
and
dec
sbb
cmp
jae
pop
add
pop
push
or
outs
and
jmp
pop
adc
test
pop
cdq
or
jl
ja
sbb
inc
movs
fimul
sbb
and
retf
and
in
lea
aad
movs
in
hlt
push
mov
retf
inc
inc
cmp
mov
add
cmp
lods
adc
outs
inc
push
xchg
out
(bad)
shl
movs
je
stos
(bad)
jl
mov
xor
cmp
(bad)
jnp
adc
(bad)
pop
repnz
loopne
pop
je
shr
nop
dec
and
inc
dec
das
or
adc
inc
scas
sbb
dec
fisttp
(bad)
mov
adc
push
jb
xchg
dec
inc
fs
outs
fisubr
pop
bound
repz
cmps
adc
mov
test
out
sbb
xchg
xor
mov
icebp
sbb
ret
pop
cmp
and
mov
mov
inc
mov
cdq
clc
jg
iret
pop
or
xor
mov
enter
int3
mov
outs
and
mov
inc
or
movs
xlat
jno
pop
rcl
movs
mov
arpl
ret
loopne
push
(bad)
mov
je
inc
ret
stc
(bad)
je
jnp
jle
ss
add
push
inc
bound
mov
or
mov
in
ins
push
mov
sbb
nop
jmp
aad
ret
shr
push
mov
ror
sbb
and
or
fnstenv
ret
or
fimul
loope
int
je
pusha
js
xor
pop
mov
add
rcr
adc
test
sub
and
mov
pusha
sbb
cmp
pop
pop
xlat
std
popf
xchg
pushf
lods
enter
adc
sub
and
ret
pop
mov
sbb
push
pop
mov
inc
jno
lods
rol
fsubr
xchg
sar
lock
xchg
push
or
es
inc
inc
test
sub
outs
shl
lds
push
es
aaa
push
loopne
push
scas
cld
or
js
adc
cmp
sbb
mov
shr
add
mul
push
push
leave
sbb
mov
inc
xor
imul
and
test
adc
and
xchg
mov
pop
jns
in
in
aaa
cmp
out
add
add
add
ins
cwde
(bad)
pop
xor
in
in
repnz
add
add
add
lea
js
pop
xor
icebp
mov
or
sti
in
lds
pop
cmc
ror
push
jg
cmovbe
lods
xchg
adc
push
arpl
mov
and
lods
or
std
push
es
aas
je
mov
adc
out
adc
imul
inc
cmc
daa
mov
inc
sub
jmp
xchg
loopne
and
xor
adc
cmp
mov
add
dec
in
out
js
mov
clc
test
sub
mov
test
xor
lahf
dec
xchg
sub
sub
jnp
jne
add
push
push
call
pop
and
mov
loopne
adc
ret
cmp
jg
aaa
test
adc
or
loop
lods
aaa
adc
or
scas
adc
xchg
int3
in
push
test
call
out
dec
ret
pop
jl
and
jge
lods
pop
push
adc
inc
push
jns
sbb
sbb
pop
adc
push
inc
sub
pop
stc
popf
pusha
das
gs
or
je
dec
ret
add
jp
jp
sbb
jge
hlt
(bad)
sbb
cli
dec
add
(bad)
cmp
jge
pop
lahf
nop
pop
imul
inc
add
loop
aaa
and
(bad)
and
sub
sbb
push
imul
lods
add
push
xchg
ret
adc
ds
mov
repz
jne
inc
cmp
and
mov
pushf
and
xchg
and
sub
mov
sbb
idiv
mov
pushf
inc
into
push
pop
push
dec
(bad)
stc
cmp
loopne
popf
inc
pop
mov
dec
dec
inc
pop
push
jne
fsub
xor
fdiv
rol
lahf
xchg
sub
mov
test
ins
cs
(bad)
lods
lea
xchg
adc
mov
fsubr
popf
and
out
jp
jl
add
mov
out
add
mov
enter
jl
or
inc
mov
adc
cmc
inc
adc
cwde
pop
mov
push
push
push
push
or
xor
and
out
xor
push
add
inc
inc
dec
out
push
cs
cmp
addr16
or
add
jecxz
sub
data16
test
(bad)
lahf
punpckhbw
add
mov
add
fs
or
or
inc
jecxz
or
sbb
adc
stos
in
inc
ret
fistp
add
add
add
or
add
xor
es
add
call
leave
or
or
dec
ret
in
lock
xor
push
sbb
stos
mov
data16
in
mov
test
out
inc
push
adc
dec
or
mov
xor
cmps
das
clc
cmp
jno
xor
and
push
pusha
ret
push
adc
adc
aas
fs
and
sbb
jle
mov
jb
dec
dec
lea
into
xor
je
daa
adc
fisttp
mov
sub
daa
inc
fist
lahf
or
mov
not
fidiv
test
mov
outs
pop
test
inc
jnp
sbb
mov
dec
test
pop
ret
mov
or
pop
and
stc
dec
sbb
dec
sbb
add
rol
(bad)
outs
arpl
or
jb
test
cs
push
push
cs
ror
cmp
sahf
xchg
xor
arpl
dec
lods
sbb
and
xor
rcr
cmp
sbb
or
add
into
push
ret
cmp
push
icebp
ret
sub
mov
lea
and
cwde
inc
push
rcr
add
inc
or
sbb
mov
test
pop
or
ret
adc
inc
out
(bad)
xor
stos
xor
and
or
pop
test
sub
shl
jmp
pop
add
xor
push
sub
call
mov
push
movs
add
sub
inc
sbb
or
add
outs
push
bound
add
inc
add
inc
push
sub
pop
and
xchg
xchg
jmp
mov
xor
or
loopne
add
hlt
or
push
ins
cdq
push
mov
fsubr
pop
add
dec
jne
inc
inc
pop
push
push
add
adc
add
and
or
cmp
or
jmp
es
add
sbb
int
fadd
lock
xor
or
xchg
cmp
mov
(bad)
push
inc
repnz
pusha
or
fild
mov
sbb
dec
jmp
jmp
jecxz
test
loopne
fs
and
rcr
loop
push
push
(bad)
call
xchg
shr
jo
and
cmps
lds
xor
cwde
test
cmp
mov
fist
sbb
imul
push
xchg
fld
mov
data16
out
jb
lods
rol
sub
cmp
xchg
dec
xor
sbb
push
es
add
jmp
sub
dec
pop
jmp
and
push
lock
div
popf
add
dec
add
mov
cmp
mov
xor
inc
push
js
xor
add
push
ins
pop
cli
aaa
push
add
bound
adc
rol
pushf
or
out
fisttp
(bad)
iret
jl
jne
hlt
imul
or
push
or
pusha
addr16
adc
cld
or
je
or
enter
imul
inc
jecxz
jmp
loopne
fs
push
xchg
or
inc
mov
cmp
mov
fs
add
loope
shl
cmp
jmp
xor
push
dec
inc
or
inc
imul
mov
mov
cwde
stos
mov
fwait
mov
rcl
fwait
ret
add
push
test
xor
movs
dec
lock
test
mov
sub
mov
aam
mov
sub
and
fwait
nop
test
cld
xor
jmp
jg
clc
add
push
adc
push
inc
enter
jle
inc
and
sub
add
lahf
cmp
add
jo
mov
mov
push
mov
xor
inc
push
sbb
movs
xor
mov
xor
retf
ret
adc
cmp
mov
mov
mov
xor
and
cmp
dec
jmp
xchg
or
xor
dec
sbb
dec
add
pop
push
ficom
add
sub
out
adc
mov
rcl
push
hlt
mov
mov
pop
sbb
sbb
rol
stos
sbb
push
fst
mov
adc
pop
adc
imul
adc
push
mov
jle
popa
or
xor
push
push
es
fwait
call
cmp
sti
jmp
mov
mov
push
cwde
ret
mov
adc
inc
mov
imul
scas
jo
cmps
pop
xchg
mov
test
jo
sub
or
sbb
imul
pop
adc
inc
push
pop
fmul
stos
mov
fbld
push
adc
inc
push
(bad)
pusha
push
jmp
dec
push
cmp
pop
sbb
push
push
inc
push
or
mov
jmp
stos
ror
or
adc
jae
sub
sub
cs
push
rcr
xor
aam
cmp
cwde
hlt
add
xchg
xchg
iret
adc
add
adc
add
xchg
push
and
sub
mov
adc
jmp
dec
and
dec
je
dec
sbb
mov
add
add
or
(bad)
inc
fidivr
test
sub
add
adc
leave
xchg
push
push
vandps
add
enter
in
add
pop
ret
cmp
or
loopne
inc
mov
(bad)
cmovae
mov
push
stos
hlt
or
xchg
xor
popa
lods
sbb
mov
push
inc
inc
inc
imul
pop
adc
lock
lahf
or
push
jb
mov
fisttp
jge
add
packsswb
sbb
push
mov
xor
mov
test
push
and
or
mov
add
dec
xchg
push
shr
adc
das
pop
mov
jne
jmp
rol
in
outs
ja
les
mov
mov
cmp
out
aaa
out
mov
sbb
pusha
lods
std
jmp
lea
adc
cmp
enter
push
mov
jo
call
imul
xor
push
call
xor
cmc
clc
test
idiv
and
push
xchg
inc
push
lahf
push
push
push
loop
inc
adc
and
mov
inc
sahf
xor
jbe
and
cwde
and
inc
or
and
mov
and
ds
or
je
inc
movs
push
nop
sbb
sbb
mov
add
lea
es
mov
inc
arpl
xchg
add
sub
dec
cmp
shl
add
pop
jmp
mov
and
xchg
xor
jbe
push
pop
jae
je
mov
lea
enter
repz
push
mov
xor
adc
std
adc
rcr
cmp
and
xchg
mov
dec
popf
(bad)
pop
es
test
mov
sub
movs
int3
mov
push
mov
xchg
jbe
sbb
sbb
lock
pop
jle
ins
pop
add
mov
sub
sub
stos
and
and
inc
add
sub
nop
mov
dec
mov
outs
loopne
pop
mul
add
dec
and
lock
sti
movs
inc
inc
jmp
and
or
adc
out
sbb
inc
pop
add
push
push
push
cmp
test
fsub
push
inc
fcom
das
xor
pop
rcl
ret
lds
add
(bad)
imul
jp
add
dec
or
mov
inc
sbb
cmp
jecxz
pop
jge
std
ins
or
popa
cs
iret
inc
call
pushf
sub
or
sub
mov
xchg
retf
enter
adc
inc
and
adc
hlt
add
sub
lock
mov
nop
out
dec
add
xchg
in
or
(bad)
inc
test
sar
les
mov
loopne
dec
scas
xchg
inc
cmp
push
xor
pop
inc
sbb
mov
rsm
pop
xor
movs
dec
adc
push
mov
jecxz
shl
int
jg
add
mov
push
cdq
mov
cmp
mov
sub
aas
push
mov
push
adc
jecxz
mov
jmp
lea
outs
mov
imul
inc
xchg
dec
fmul
les
add
and
int
xchg
xchg
cmps
cli
push
or
stos
jb
cmps
jo
int3
movmskps
jg
clc
mov
rcl
mov
icebp
jmp
push
lea
or
dec
push
jecxz
jmp
xor
inc
jb
sub
pop
jne
cmp
jno
cmp
sub
lods
adc
xchg
out
push
xchg
sbb
or
pop
or
(bad)
sbb
lock
adc
adc
fisub
dec
shr
pop
mov
hlt
mov
xchg
xor
push
enter
fisttp
leave
and
mov
in
mov
pushf
xchg
iret
aas
adc
loopne
dec
in
xchg
sbb
add
dec
aaa
dec
adc
sar
adc
pop
add
xor
es
mov
call
sbb
shl
popf
and
pop
add
cmps
fldenv
sbb
dec
ins
rol
in
int
loopne
les
shr
push
mov
pop
fdiv
adc
mov
sub
daa
push
pop
repnz
cmps
mov
or
xlat
shl
in
inc
push
scas
fcomp
(bad)
mov
std
pop
sub
jo
dec
push
sbb
loopne
sub
iret
add
sti
xor
inc
adc
push
sti
sbb
sub
in
fsubr
fsub
fsub
nop
push
jmp
cmps
clc
sbb
push
cvtpi2ps
mov
xor
ror
adc
cwde
xchg
push
mov
inc
mov
test
xor
mov
xchg
lock
cmc
mov
aaa
and
dec
xchg
xor
lods
shl
push
push
xor
jae
or
xchg
loop
push
mov
hlt
jb
call
retf
mov
mov
push
out
pop
sbb
pop
add
xchg
pop
push
pop
push
or
pop
enter
add
in
stos
in
rol
adc
adc
sub
mov
push
test
add
or
mov
push
inc
adc
nop
rol
int3
sbb
sub
push
add
es
or
xor
ror
cdq
adc
inc
mov
mov
add
or
push
add
pop
mov
push
push
add
adc
into
inc
and
xchg
mov
dec
pcmpeqw
out
hlt
lods
sbb
xor
adc
popa
das
push
jle
dec
es
pop
mov
push
call
les
add
inc
shl
add
inc
cmp
jl
out
mov
sbb
dec
xchg
ror
test
daa
ds
mov
ss
cwde
lock
ret
pop
add
fld
lods
jb
or
dec
inc
outs
pop
rcr
lock
shr
jge
(bad)
call
or
mov
jmp
or
push
sbb
enter
sub
dec
and
enter
test
or
sahf
cvttps2pi
jle
and
call
adc
cdq
inc
inc
test
dec
push
in
push
loopne
add
sub
sbb
mov
jle
sbb
int3
jmp
adc
jbe
xor
and
out
push
adc
aam
push
jle
out
mov
test
jge
data16
call
mov
push
jge
fsubrp
mov
inc
inc
push
jl
inc
dec
jl
pop
shr
pushf
shr
jge
mov
aam
mov
dec
shl
add
sub
sahf
sub
pusha
cdq
ins
jo
shl
jl
pusha
xor
or
and
fnstsw
imul
push
xchg
in
fisttp
pusha
fst
mov
lahf
add
or
xor
adc
leave
or
cvtdq2ps
pusha
out
mov
mov
das
sbb
outs
cs
add
cmp
adc
or
inc
xor
dec
(bad)
dec
adc
mov
cmp
inc
ret
pop
xor
inc
(bad)
xor
add
sti
push
cmp
bound
jecxz
jecxz
or
les
clc
jg
push
dec
xor
daa
lock
xchg
inc
fbld
xchg
test
adc
add
call
adc
xor
inc
sbb
or
pop
sbb
or
test
sub
cmp
and
jb
inc
or
and
adc
xchg
cmps
shl
inc
retf
aam
icebp
lea
push
lods
call
push
adc
jnp
mov
jae
push
push
adc
cmp
(bad)
(bad)
jb
pop
movs
test
aam
les
dec
adc
pop
push
xchg
(bad)
sahf
sub
mov
xor
(bad)
nop
or
test
mov
dec
cld
dec
out
xor
sbb
or
or
or
mov
sbb
push
adc
data16
cdq
data16
outs
test
xchg
mov
add
jge
mov
scas
jge
push
pop
loopne
and
or
not
adc
lods
jmp
icebp
add
push
add
or
pop
adc
push
jp
push
pop
(bad)
js
ror
jle
pop
dec
xchg
add
dec
xchg
dec
xor
mov
pushf
cli
movs
add
(bad)
cdq
imul
inc
ins
in
adc
xor
repnz
or
adc
push
add
rcl
push
inc
inc
dec
xor
into
xor
ret
cmp
ret
sbb
fsubr
int
dec
clc
out
das
rol
or
sbb
pop
inc
sbb
mov
mov
in
sub
(bad)
int3
sar
sbb
int
sub
stos
cs
movs
pop
dec
lods
cld
cmp
mov
add
ret
cs
movs
sbb
push
add
dec
in
add
and
push
xor
cmp
cmp
xor
repz
dec
jmp
mov
mov
rol
add
loop
leave
xor
jmp
adc
enter
mov
push
mov
hlt
mov
ja
loop
inc
push
cs
inc
dec
es
or
int
js
jae
dec
pop
sbb
sbb
sub
fld
xor
test
out
inc
push
xchg
cmp
movs
pop
push
clc
pop
push
mov
mov
jae
dec
adc
dec
ficom
(bad)
cmp
inc
mov
jp
into
adc
(bad)
adc
mov
gs
sub
rol
push
add
dec
push
mov
rcl
and
sahf
in
sub
inc
js
pop
cmp
in
cmp
lods
enter
or
jl
js
xor
mov
pop
or
xchg
sbb
adc
sbb
inc
adc
jl
push
pop
lods
pop
jle
and
sbb
imul
test
inc
add
xor
rcr
pop
retf
nop
cld
pop
add
push
test
ins
push
rol
or
popf
inc
or
xor
sbb
push
stos
mov
jmp
inc
call
idiv
xor
push
inc
ficomp
int3
and
fild
adc
mov
jmp
and
inc
or
daa
fnstsw
pop
and
mov
mov
dec
jecxz
inc
ins
and
pop
pop
out
xchg
lea
mov
sbb
xor
adc
add
mov
and
pop
push
sbb
mov
or
or
cmp
inc
adc
pusha
sbb
inc
or
and
and
or
lods
(bad)
cmp
sbb
sub
and
mov
jmp
push
mov
rcr
push
push
nop
adc
and
jmp
addr16
in
add
add
add
icebp
add
inc
dec
xor
mov
fadd
pop
inc
xchg
loope
adc
or
std
(bad)
aas
inc
es
cwde
in
adc
xchg
sbb
pop
enter
inc
in
mov
aaa
mov
test
mov
cmp
jg
sub
ins
push
mov
xor
shl
sbb
into
clc
and
mov
cmp
stos
adc
or
push
sbb
cmps
cmp
cmp
inc
cmps
ret
dec
push
call
inc
xor
sub
xchg
div
fcom
fcomp
xchg
and
sbb
aam
xor
sbb
in
outs
dec
das
test
dec
enter
inc
push
test
addr16
lock
sub
outs
lea
push
jnp
cs
push
push
inc
add
add
cmp
add
sbb
rcr
inc
ret
adc
shl
and
pop
mov
xchg
dec
dec
sub
push
add
arpl
dec
shr
pop
mov
test
jae
pop
stc
sbb
push
fsub
and
mov
les
or
xchg
(bad)
mov
or
xor
out
adc
sbb
xor
and
adc
push
les
scas
(bad)
in
test
jl
ffreep
add
jae
repz
enter
je
rol
fbld
adc
add
xchg
jle
add
repz
jb
add
pop
adc
push
and
sbb
xor
push
ror
pop
cs
add
test
xor
jecxz
jno
adc
push
jle
xor
fnstcw
es
xor
(bad)
std
mov
sub
test
inc
mov
adc
xchg
outs
(bad)
push
mov
push
shr
xchg
or
fmul
adc
(bad)
loope
(bad)
push
movs
inc
push
cmp
pop
and
cs
mov
mov
inc
and
das
push
je
loop
inc
fst
sbb
jno
push
mov
inc
rcl
dec
adc
movs
mov
leave
mov
pop
sub
outs
jnp
out
mov
dec
push
sub
shl
or
sbb
lods
stos
fldcw
enter
push
mov
imul
mov
adc
(bad)
pop
pop
shr
scas
adc
add
add
add
xor
pusha
clc
inc
cmps
nop
jge
fidiv
xlat
ss
push
xchg
cwde
adc
mov
test
or
lock
std
rcr
mov
push
nop
stos
sbb
movsx
xchg
bound
ins
sub
or
es
inc
adc
pop
ffreep
dec
inc
(bad)
ja
xchg
push
inc
ret
mov
sti
test
aaa
add
or
test
pop
push
push
mov
push
test
xchg
push
movs
sub
inc
inc
jl
test
lods
cmp
sub
ds
xor
sar
or
ret
adc
lea
mov
sbb
arpl
xchg
jne
in
dec
sbb
test
movs
test
call
scas
or
xor
pusha
and
jecxz
sar
jp
cmp
push
dec
retf
mov
lea
jb
xor
iret
mov
lods
aam
stc
adc
call
cmp
cmp
lock
ror
inc
xchg
int3
push
sbb
jmp
push
add
mov
lahf
test
sti
or
push
loope
in
mov
inc
call
iret
lock
xchg
add
mov
mov
out
test
sbb
mov
add
test
xchg
sbb
inc
dec
pop
dec
sub
xchg
pusha
push
test
or
xchg
in
adc
xchg
imul
loopne
inc
jmp
mov
xchg
popa
mov
xor
cmp
mov
es
adc
shl
mov
jecxz
xor
inc
add
icebp
pop
sub
adc
fild
cs
not
ja
pop
(bad)
cmps
inc
or
jne
inc
jmp
in
inc
hlt
jb
pop
or
mov
push
cmps
sub
adc
aaa
std
cmps
pusha
add
std
or
inc
inc
xchg
push
div
popa
jp
ja
add
jns
int
sbb
(bad)
sbb
xchg
jns
aam
cmp
fist
jne
loopne
add
and
sub
retf
repnz
in
inc
inc
arpl
inc
add
sbb
mov
pop
fs
loop
daa
jle
sahf
mov
cmp
or
mov
add
cli
addr16
add
jmp
dec
sub
call
loopne
adc
les
icebp
fimul
and
dec
add
ret
sub
and
arpl
lahf
push
mov
sub
int3
test
fcomp
int
xor
movs
or
outs
and
out
daa
jge
neg
sbb
imul
cmp
fld
inc
popf
jle
jecxz
cmp
imul
repz
sbb
dec
xchg
and
and
aam
sbb
dec
cmp
repnz
inc
or
out
clc
cmp
(bad)
aad
push
rol
call
enter
mov
loop
mov
sbb
fxch
jne
hlt
and
inc
fstp
call
inc
stos
lahf
fld
mov
fcom
movs
xor
rcr
fist
sub
mov
pop
out
jae
xchg
xor
mov
cmp
add
push
adc
shl
cli
xchg
ret
aaa
fwait
inc
cmp
mov
ins
or
(bad)
in
add
in
inc
iret
xlat
and
dec
xchg
and
jo
mov
mov
mov
in
scas
lea
xor
ss
adc
cs
sbb
and
stc
push
lea
jmp
and
fs
call
or
inc
jnp
call
xor
xor
add
data16
ins
enter
fadd
mov
add
push
lods
adc
mov
aam
mov
sbb
jmp
jno
outs
aaa
pusha
test
adc
out
(bad)
(bad)
xor
add
add
lods
cmp
dec
cmp
dec
add
push
adc
jmp
mov
jmp
js
sub
sub
int
mov
cmp
lea
sub
pop
imul
pop
mov
xchg
add
or
ins
lea
sub
dec
int3
movs
mov
int3
test
ficomp
mov
cli
sub
add
push
jge
dec
(bad)
fmul
std
test
add
add
push
jmp
push
fdivr
add
lea
pop
sbb
sub
sti
sub
les
add
or
loope
loop
or
clc
test
test
or
cmp
or
(bad)
sbb
dec
or
inc
bound
stos
xor
popa
cmp
inc
xor
nop
or
jbe
sbb
add
gs
repnz
pusha
pop
or
add
sti
mov
inc
addr16
mov
or
mov
jb
cdq
loope
pushf
and
loopne
add
fcmovb
cmp
daa
(bad)
js
xor
rcr
jns
adc
fld
fadd
sbb
bound
push
inc
add
sbb
add
push
pop
shr
sbb
or
or
jns
stos
adc
or
adc
jns
push
cwde
push
cmp
clc
adc
out
mov
fstp
sub
push
and
out
cs
and
sbb
or
out
pop
adc
sub
or
and
xor
sub
pop
or
sbb
(bad)
adc
jmp
ja
rcr
push
sbb
lods
sub
inc
inc
fld
icebp
inc
and
ja
ror
push
sti
retf
in
iret
cmp
push
inc
fs
mov
dec
jle
adc
fs
mov
cmp
add
or
mov
and
add
pushf
nop
in
or
fiadd
and
rcr
dec
cmp
mov
popf
push
mov
sbb
push
dec
sub
mov
call
call
pusha
and
cmp
lea
(bad)
clc
cmp
je
ss
aas
adc
mov
cmps
aas
xlat
lock
mov
push
inc
hlt
pushf
cmp
aam
lahf
dec
das
pop
push
push
loopne
lock
lea
or
test
arpl
stos
add
cwde
jnp
sbb
mov
inc
or
xor
movs
xchg
pop
or
jb
inc
mov
int
xor
push
pop
dec
les
outs
push
test
sub
iret
retf
mov
imul
add
pusha
call
xor
mov
add
frstor
loope
imul
sar
cli
cdq
adc
inc
mov
mov
push
adc
jb
add
xchg
mov
pop
and
mov
add
jle
or
cmc
aad
stc
lea
dec
loopne
inc
pushf
ret
push
jb
shl
inc
nop
adc
mov
inc
jns
xchg
add
xor
movsx
xor
cmps
fsubr
jmp
lea
add
lock
pop
add
pop
call
(bad)
ins
mov
nop
das
inc
in
(bad)
mul
ins
mov
cmp
pop
test
lods
int3
in
cmp
pop
adc
dec
rol
push
or
add
shl
cmps
loopne
xor
jns
jge
clc
aaa
imul
hlt
adc
jne
mov
retf
xchg
add
ins
imul
sbb
ss
mov
mov
test
adc
mov
(bad)
push
and
push
inc
enter
mov
or
mov
or
in
aam
mov
(bad)
push
imul
(bad)
sbb
push
ret
sbb
mov
sbb
fild
dec
mov
gs
inc
fcomp
clc
adc
cmp
outs
mov
ficomp
pop
dec
movs
xor
sahf
inc
idiv
or
ret
dec
add
lea
imul
imul
outs
in
add
mov
sbb
aaa
dec
imul
mov
push
mov
adc
dec
adc
mov
loop
inc
dec
and
jno
mov
in
sbb
icebp
xchg
shl
mov
shl
rol
jg
jp
add
inc
mov
or
cmp
or
out
xchg
jb
ret
adc
lds
push
or
je
xchg
sub
outs
inc
xor
ret
and
pop
adc
sbb
add
imul
sbb
pop
scas
ins
movs
daa
jmp
movs
repnz
mov
xor
mov
mov
adc
xor
or
pop
and
mov
imul
sahf
scas
fcom
push
lea
lea
xor
(bad)
adc
ret
loopne
popa
sbb
jnp
push
sub
adc
clc
add
nop
push
(bad)
bound
jl
xchg
fiadd
mov
cmp
data16
sbb
xchg
sub
sbb
imul
nop
mov
sbb
fcmovnb
push
ins
mov
push
jmp
jge
fs
push
jae
jge
or
or
jo
je
ret
mov
icebp
jge
inc
mov
les
pop
lods
jmp
(bad)
pop
xchg
xchg
jae
add
icebp
pusha
sub
add
(bad)
call
int
fwait
dec
jo
jb
sub
sbb
repz
jno
xchg
sub
jge
add
movs
fs
jbe
cdq
fist
mov
scas
inc
or
inc
jo
inc
mov
stos
add
dec
cmps
add
dec
dec
ja
mov
mov
popa
add
fptan
int
xchg
xor
ins
or
rol
repz
mov
jl
loop
and
mov
sbb
(bad)
out
mov
mov
sub
fiadd
mov
mov
sti
sub
mov
add
cmp
or
test
add
cli
mov
inc
xor
fiadd
ret
sbb
adc
jno
mov
xchg
add
push
fwait
add
mov
icebp
ret
jg
add
jo
stos
das
xlat
(bad)
push
imul
push
fcmovb
push
popa
and
sub
mov
lods
jno
xchg
fs
iret
mov
cmp
cli
repz
or
enter
xor
cmp
mov
jl
dec
ret
test
in
out
retf
add
inc
xor
popf
inc
lahf
ret
je
dec
test
addr16
add
mov
in
xor
cmp
jnp
fist
jnp
out
mov
cmp
sar
test
retf
push
push
xor
test
push
adc
daa
ins
cmp
dec
push
inc
adc
sar
jle
sub
into
ins
and
mov
add
jmp
dec
dec
or
jmp
(bad)
inc
add
dec
mov
sub
jbe
rol
in
cld
xor
dec
cmp
sbb
adc
add
dec
add
and
in
imul
cmp
cmp
dec
rcl
cmps
cli
inc
and
add
push
push
in
inc
movs
pop
int3
add
adc
add
sub
push
inc
jmp
xchg
call
and
iret
xor
scas
or
add
stos
mov
mov
movs
push
addr16
ret
push
jb
pop
(bad)
mov
jns
das
fwait
pusha
lods
sbb
fs
pop
pop
in
sub
add
sbb
mov
test
push
ja
add
push
inc
push
mov
sub
(bad)
adc
lock
daa
daa
xchg
and
pushf
int3
mov
inc
es
daa
xchg
aam
pushf
pushf
fmul
aad
xlat
fcomp
fcmovnu
pushf
pushf
pushf
pushf
fstp
ffreep
pushf
pushf
pushf
pushf
rol
les
(bad)
enter
pushf
leave
retf
pushf
pushf
pushf
pushf
int
iret
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
jl
add
add
cmps
scas
enter
rcl
clc
inc
leave
xchg
inc
dec
inc
ss
dec
cmps
cmp
fwait
js
push
or
xlat
dec
push
ja
pushf
xchg
inc
or
and
or
in
sti
xchg
xchg
fild
and
mov
push
and
(bad)
fadd
test
mov
fcomp
fcomp
movlps
and
pop
add
and
inc
sub
adc
test
test
dec
popa
jo
bound
test
mov
dec
mov
test
enter
xchg
pop
and
fimul
mov
lock
pop
push
ret
add
or
out
add
mov
pusha
nop
sysret
and
sub
push
add
call
loopne
(bad)
mov
adc
pop
shl
push
ins
jmp
pop
dec
xlat
nop
fild
and
adc
and
or
loopne
fadd
pop
xor
fiadd
mov
cmp
or
push
adc
loope
call
sub
push
mov
push
leave
je
outs
jae
adc
adc
inc
sub
pop
add
dec
les
add
iret
ror
fsubp
retf
or
pop
push
test
adc
mov
test
les
mov
or
lds
movs
pop
xchg
cmp
repz
clc
or
sbb
addr16
es
ins
rcl
push
push
or
mov
addr16
xor
in
fbld
and
sbb
iret
in
and
punpckldq
push
add
ins
jecxz
ds
adc
gs
outs
sbb
rol
push
cmps
ror
leave
sub
jns
push
xchg
shl
pop
and
les
lahf
xor
pop
adc
enter
mov
shl
call
ds
ds
sbb
pop
xor
pop
pop
inc
jns
clts
in
sahf
inc
mov
cld
in
out
repnz
inc
add
sbb
clc
mov
inc
lahf
aad
stos
xchg
and
addr16
mov
dec
in
xor
dec
enter
pop
pop
enter
movs
adc
movs
inc
movs
repnz
fdiv
aam
or
ins
cld
outs
push
push
add
outs
lea
and
mov
lea
pop
sub
je
(bad)
ficomp
fs
push
pusha
xor
cmovne
inc
push
push
sbb
mov
cmp
cmps
xchg
nop
inc
sbb
sub
sub
ret
pop
inc
pop
add
ucomiss
loope
in
push
add
nop
bswap
lds
mov
jbe
(bad)
xchg
push
leave
sub
dec
popa
shl
test
in
pop
daa
rcr
sub
inc
xor
sbb
inc
lods
pop
cmp
adc
xchg
jg
pop
or
pop
pop
jno
enter
push
xor
aad
add
push
dec
push
dec
outs
outs
jo
pop
pop
xor
xor
push
sbb
cmps
dec
xchg
xor
in
cmp
sub
dec
push
push
dec
rol
ins
push
or
stos
adc
retf
(bad)
xchg
sub
dec
sbb
xchg
les
dec
xchg
pop
cmp
add
and
rcr
add
push
in
outs
push
xchg
outs
push
fdiv
aam
neg
nop
fsub
scas
cwde
push
cmps
jge
int
movs
push
pop
push
in
test
ds
cmps
mov
pushw
fs
jae
jne
jmp
mov
add
xchg
lods
inc
aam
call
stos
cs
dec
adc
push
push
dec
mov
push
and
xor
push
or
mov
data16
push
ror
jnp
neg
push
inc
or
push
cwde
push
inc
mov
push
inc
push
sbb
bound
(bad)
xor
es
outs
enter
outs
or
ins
xchg
hlt
fisubr
add
xchg
push
outs
push
pop
push
loopne
ds
popf
push
push
sub
in
push
outs
xor
push
ins
cs
pushf
push
xchg
xlat
cmp
or
movs
jmp
jge
mov
jne
fisub
test
inc
fcom
pop
cmps
push
int3
ficom
dec
dec
lods
fdiv
adc
sbb
lahf
ja
ror
out
lock
fs
(bad)
aaa
adc
dec
gs
arpl
mov
mov
clc
cmps
enter
xlat
mov
mov
xor
out
cwde
outs
jmp
xor
js
adc
or
jmp
xor
shr
rcr
push
push
mov
push
mov
mov
pop
sbb
sbb
ret
(bad)
je
imul
sbb
sti
and
(bad)
test
aad
push
inc
bound
inc
and
mov
clc
sbb
(bad)
xchg
add
sbb
ret
(bad)
cmps
pusha
shr
(bad)
mov
clc
adc
mov
cdq
push
ins
cmp
add
movs
out
clc
repz
push
cmp
aad
add
(bad)
cmp
xchg
lea
fild
push
loopne
adc
ret
adc
inc
popa
leave
cmp
jge
inc
and
xor
jl
cs
inc
xlat
fimul
push
and
ret
(bad)
push
test
shl
test
call
push
adc
(bad)
nop
and
push
dec
mov
call
xchg
lock
xchg
xchg
xor
retf
and
jmp
mov
add
inc
mov
add
call
shl
sahf
cmps
adc
cmp
movs
sahf
ins
sbb
add
sub
retf
rol
push
dec
repz
aaa
fwait
push
lock
inc
push
fidivr
in
or
inc
or
xchg
add
popf
add
xor
jl
jbe
add
sti
jp
sbb
nop
add
xchg
mov
pushf
lods
cmp
arpl
pusha
mov
or
mov
or
lock
mov
sbb
add
dec
dec
leave
push
ret
add
hlt
pop
inc
cs
fwait
mov
addr16
ret
mov
stos
sbb
test
push
(bad)
xchg
sub
je
and
test
les
cmp
dec
mov
and
inc
push
imul
adc
mov
je
ret
cdq
nop
xchg
gs
sti
push
or
aaa
sbb
pop
xor
ss
lea
jne
js
les
mov
dec
sar
jecxz
add
out
inc
cmp
rcl
and
std
push
adc
adc
push
aas
and
adc
pop
add
and
inc
sub
mov
aaa
loopne
and
xor
mov
mov
mov
add
inc
dec
jl
xchg
mov
cmp
add
(bad)
push
mov
pop
lahf
iret
pusha
ds
fnstcw
mov
test
or
and
outs
ror
dec
(bad)
cli
shl
adc
loope
mov
sbb
lea
popf
aaa
sub
mov
call
adc
lock
inc
cmp
jmp
je
or
hlt
mov
retf
dec
sub
cmp
mov
sti
imul
push
push
sub
inc
xchg
inc
sahf
adc
mul
add
xlat
pop
and
mov
jg
or
inc
xchg
mov
push
pop
sbb
mov
mov
adc
mov
cld
jae
xor
rcl
in
cdq
inc
sub
dec
jns
add
push
add
push
cwde
and
and
and
into
mov
clc
add
mov
or
and
adc
stos
sbb
jno
pop
or
and
icebp
xor
jbe
and
test
jbe
pusha
push
sbb
push
xchg
call
mov
and
inc
mov
mov
cmp
add
movs
push
push
or
aam
adc
sub
int
or
fadd
iret
loop
cmp
or
sbb
sub
je
dec
retf
and
dec
inc
mov
lock
add
fwait
sub
or
(bad)
inc
arpl
imul
ss
jne
mov
xchg
xchg
sbb
out
mov
and
ds
push
es
cli
add
add
adc
xor
and
cmps
movs
adc
adc
and
loop
lods
add
ror
out
cli
push
retf
sub
add
rcr
inc
(bad)
fdiv
fld
sub
push
sbb
mov
es
retf
push
xchg
addr16
mov
mov
xchg
cmps
pop
add
test
or
mov
or
adc
sbb
movs
lds
ret
dec
movs
mov
ds
(bad)
data16
lods
jo
mov
jns
add
pushf
test
cld
(bad)
icebp
add
add
add
dec
sar
or
inc
ins
shr
push
out
inc
leave
clc
mov
push
inc
dec
cld
inc
mov
push
push
out
mov
cld
xor
sub
adc
inc
(bad)
and
pop
mov
jns
imul
adc
movs
cld
shr
pop
add
xor
pop
fild
scas
daa
(bad)
into
and
ss
xchg
add
shl
or
jle
mov
into
add
mov
pusha
pop
xchg
dec
push
mov
out
or
xlat
nop
push
nop
inc
retf
add
xor
jle
xor
sbb
adc
into
shl
add
lods
and
retf
push
or
sbb
mov
push
push
sar
add
or
add
addr16
xor
fdiv
push
iret
aaa
mov
test
push
push
adc
cmp
and
in
push
adc
push
shr
std
add
adc
fistp
xlat
adc
add
push
imul
mov
push
push
nop
push
imul
push
adc
stc
xchg
add
push
sbb
imul
xchg
cmp
rcl
dec
add
sub
pusha
jnp
dec
movs
test
scas
sbb
pop
(bad)
jg
mov
call
imul
sbb
repnz
push
mov
out
or
pop
in
add
jmp
mov
add
ret
test
(bad)
xor
adc
pop
mov
inc
daa
test
mov
sar
inc
or
push
in
push
mov
rcr
cmp
scas
(bad)
js
mov
pushw
cmp
outs
jns
mov
sub
cld
addr16
inc
jmp
test
ret
mov
mov
shl
mov
mov
test
jnp
bound
repz
leave
lods
les
mov
ret
dec
cld
jne
imul
stos
mul
daa
dec
dec
sub
jg
mov
jb
nop
nop
pop
and
movs
sub
push
lds
popa
dec
jne
imul
pushf
dec
sbb
jl
fldcw
mov
lds
sbb
int
adc
sbb
push
mov
dec
mov
cmp
xchg
(bad)
int3
dec
out
retf
aam
and
gs
mov
jg
push
inc
or
ja
add
test
or
jne
popf
add
add
sub
or
inc
pop
sbb
jbe
(bad)
cmc
popf
pop
dec
(bad)
jmp
fcomip
fiadd
inc
mov
leave
push
push
and
adc
adc
getsec
add
nop
pusha
aad
sbb
aas
pop
and
or
test
pop
xor
cmps
fistp
repnz
aam
inc
inc
mov
fistp
mov
movs
fsub
dec
bound
cld
mov
push
xor
jge
pop
sub
into
nop
outs
jl
sub
push
cs
jo
nop
mov
mov
xchg
ja
mov
inc
adc
sbb
adc
inc
add
sub
sbb
sbb
and
imul
(bad)
out
and
ffreep
cdq
cmp
mov
call
and
sbb
xchg
sbb
xor
sub
pushf
sbb
and
xor
enter
xor
xor
add
push
push
jnp
xor
jnp
inc
mov
push
and
(bad)
cmp
inc
add
cmp
aaa
xor
dec
mov
ss
scas
add
pop
cs
add
sub
xchg
outs
xor
cmp
pop
cs
xor
mov
dec
xor
frstor
cmp
dec
cmp
and
inc
pop
add
movs
std
dec
add
and
xchg
pop
pop
xchg
rcr
pop
ror
rcl
popa
(bad)
jb
and
test
repnz
mov
mov
cmp
cmp
lods
inc
mov
es
adc
pop
and
and
dec
mov
aam
scas
(bad)
int3
pop
fcmovnu
ss
addr16
add
out
jmp
and
inc
enter
xor
or
(bad)
jb
in
cmps
mov
leave
and
inc
inc
loope
jb
dec
add
add
dec
inc
daa
or
push
jb
jb
add
add
shr
sbb
xor
and
enter
inc
or
inc
pop
into
pop
or
or
ins
outs
aaa
fs
dec
pop
adc
and
jb
cwde
sub
imul
iret
add
rol
cs
pop
scas
mov
ror
mov
inc
pop
cmp
sub
add
gs
mov
xchg
cmps
rcl
aad
iret
sahf
sbb
or
adc
add
jae
repz
adc
hlt
pop
nop
retf
hlt
hlt
adc
pop
dec
and
hlt
fsubr
ror
inc
std
mov
inc
add
sub
fnstenv
in
cmp
in
out
inc
push
or
dec
jmp
outs
push
dec
inc
cmp
jb
sbb
dec
nop
leave
cmp
inc
and
or
cmp
inc
retf
or
xchg
xchg
fst
sub
stos
add
xchg
xchg
stos
stos
sub
imul
or
xchg
es
xchg
xchg
pop
sub
(bad)
pop
and
add
fstp
or
pop
xor
adc
adc
jl
dec
test
das
rol
punpckldq
xor
outs
fld
cmp
inc
add
and
nop
retf
and
dec
sbb
xor
sub
xor
pop
sbb
ins
sub
sub
mov
cmp
pop
and
(bad)
push
push
and
mov
and
jb
and
test
sub
or
adc
imul
add
jle
rcr
adc
xchg
mov
pop
cmps
add
pop
sbb
dec
out
in
push
lea
fild
sbb
adc
ficom
mov
sub
or
jne
mov
cmp
sbb
enter
add
nop
and
jbe
xchg
and
ins
inc
mov
pop
lea
prefetchnta
add
jne
rol
inc
mov
ins
add
inc
add
and
add
loopne
push
cmp
dec
and
lds
ins
lea
stos
js
add
pop
clc
sub
add
inc
mov
and
and
adc
and
enter
sbb
or
add
and
enter
sub
xor
xchg
call
or
jg
jb
and
add
popa
add
inc
stc
jmp
mov
jbe
mov
add
sbb
fldenv
ror
mov
and
imul
mov
jbe
fwait
sbb
pop
fcmovnu
dec
shl
and
or
fnstenv
sbb
sub
mov
hlt
lds
lahf
adc
xor
sub
retf
rcl
mov
jmp
jmp
adc
cdq
out
test
(bad)
cmp
inc
mov
(bad)
jns
loope
cmp
das
test
add
outs
js
(bad)
(bad)
mov
stos
arpl
std
mov
mov
call
adc
dec
imul
pop
imul
or
pop
push
xor
add
sbb
mov
push
pusha
push
dec
or
dec
inc
shl
fild
xlat
(bad)
jp
add
inc
xchg
enter
push
sbb
enter
pusha
jno
and
xchg
js
test
xchg
enter
test
jb
and
and
push
(bad)
ss
sbb
xor
pop
test
xor
xchg
push
sub
xor
push
test
cmp
push
(bad)
idiv
cmp
mov
pop
push
je
xor
jo
mov
pop
pop
outs
(bad)
sbb
or
gs
retf
and
sbb
xor
sub
xor
mov
cmp
sbb
push
mov
or
and
shl
mov
ins
and
pop
pop
fwait
and
mov
stos
jno
fs
leave
xchg
push
adc
fist
and
push
sbb
and
xchg
xor
or
inc
cmp
push
shr
push
popf
daa
jmp
ror
inc
jo
iret
pop
inc
xchg
add
pop
inc
rol
sub
leave
add
adc
mov
add
aaa
and
sbb
adc
test
das
pop
rol
adc
movs
icebp
push
pop
push
sub
add
sbb
sahf
out
dec
dec
jbe
(bad)
inc
jae
add
pop
xor
add
and
dec
inc
inc
js
push
inc
mov
sub
arpl
mov
xor
inc
or
gs
push
cmp
sub
sbb
enter
xor
ds
sub
xor
and
xor
movs
pop
sub
nop
inc
push
sbb
xor
sbb
cmp
mov
into
sbb
jmp
push
xchg
dec
cmps
outs
xor
test
add
push
cmp
cmp
dec
scas
in
sub
in
mov
xor
inc
lods
fisttp
rcl
stc
push
xchg
ret
dec
into
xchg
inc
ja
iret
push
inc
jmp
in
inc
lea
mov
out
in
mov
mov
pxor
enter
pushf
jp
into
push
dec
dec
push
leave
or
xchg
or
std
mov
shl
ins
add
jb
sbb
dec
sbb
icebp
jp
mov
pushf
lock
and
xlat
std
or
inc
mov
sbb
dec
or
icebp
or
inc
mov
cmp
mov
add
add
xchg
xchg
sub
xor
stos
fild
dec
cmp
and
int3
cmp
sub
sbb
inc
rol
aaa
rol
inc
dec
leave
inc
cmp
test
add
mov
and
popf
and
push
dec
adc
inc
or
sbb
pop
jns
adc
adc
jo
sbb
cli
es
lods
pop
inc
fmul
push
sti
sahf
shr
ins
int
xor
and
dec
sbb
inc
shr
inc
cmp
sbb
xchg
jo
test
sbb
or
inc
push
dec
adc
push
adc
cmp
retf
sbb
scas
or
test
bound
test
mov
push
pop
adc
loop
jno
js
xchg
xchg
iret
jl
inc
or
je
inc
add
add
popf
or
and
dec
hlt
pusha
mov
adc
add
ret
add
nop
sti
push
cdq
adc
rol
push
add
or
fwait
ror
ja
mov
lock
sbb
jne
rcl
mov
loop
sbb
sbb
inc
push
xor
retf
push
mov
int3
push
adc
sub
ret
fisttp
lock
add
fld
dec
loop
bound
add
pop
or
cmps
mov
adc
repz
(bad)
outs
pop
ror
data16
or
add
sub
sar
bound
add
add
fidivr
dec
mov
aam
push
or
retf
xchg
sub
out
mov
xchg
lea
ror
sub
out
mov
enter
rcr
push
sar
and
xor
fnsave
and
pop
dec
js
push
jo
sub
add
lock
test
dec
cwde
shl
mov
add
cmp
fisub
jne
xor
adc
sub
jl
dec
test
in
sub
mov
push
adc
push
xchg
add
mov
sbb
inc
js
nop
rcl
sub
or
add
je
dec
dec
jae
sti
mov
sbb
shl
int3
pop
xor
fs
ror
pop
adc
dec
push
and
pop
mov
add
rcr
dec
pop
rol
aad
fldenv
ds
in
adc
mov
adc
push
arpl
mov
ret
xchg
cdq
sbb
popa
lea
push
push
mov
or
sbb
mov
shl
cld
(bad)
adc
mov
idiv
(bad)
adc
inc
or
sbb
xchg
loopne
mov
lea
stos
shl
xor
fs
test
movs
jns
add
inc
outs
pop
aaa
(bad)
ja
mov
mov
xchg
add
aad
mov
inc
(bad)
xchg
rcl
sub
or
loope
cmps
bound
xchg
sub
sbb
ss
mov
mov
aad
pop
xchg
or
pop
jecxz
dec
sbb
cmp
and
add
xchg
aad
push
imul
out
sub
or
xchg
sahf
out
sahf
addr16
push
dec
inc
jmp
ja
dec
jecxz
jle
inc
iret
push
jns
adc
jl
int3
pop
lds
mov
dec
nop
nop
pop
and
aas
mov
pop
or
sbb
pop
add
and
aaa
jns
xor
or
(bad)
and
adc
cmp
cmp
adc
mov
sbb
xor
xchg
mov
cwde
sub
and
xchg
xchg
dec
cmp
repz
stos
pushf
mov
repz
stos
rcl
or
stc
cmp
inc
test
stos
pushf
and
push
xchg
out
sub
add
mov
push
push
mov
iret
ror
icebp
xor
xchg
mov
sti
cs
mov
jg
or
adc
lock
loope
xor
mov
dec
add
xchg
inc
fsubp
pop
push
aam
movs
and
retf
pushf
sahf
(bad)
mov
lea
and
je
sub
aad
mov
call
(bad)
xchg
jl
inc
jns
lds
lock
loopne
shl
add
enter
mov
inc
pop
outs
nop
data16
dec
popa
inc
and
add
cmp
(bad)
sub
popf
mov
lahf
nop
xor
and
call
repnz
push
iret
shl
sbb
aas
popa
pusha
aaa
aam
pop
or
pop
fadd
jo
aam
sub
pushf
cmp
mov
mov
sbb
lea
push
ror
mov
es
popf
cmp
inc
jmp
jg
hlt
invd
xchg
inc
adc
sbb
lock
sub
dec
xor
push
pop
pop
cmp
sbb
call
loopne
(bad)
pop
xchg
popa
arpl
pop
sub
mov
xor
jmp
stos
not
or
cdq
mov
mov
mov
and
movs
add
sbb
cmp
or
push
lods
add
jns
pop
pop
sub
cmp
out
mov
adc
xchg
push
jns
add
or
imul
add
push
jo
ret
out
xchg
xor
retf
push
or
mov
test
loopne
sub
mov
adc
pushf
leave
or
push
dec
sahf
add
or
xor
add
ret
jecxz
int3
ror
mov
int3
jbe
popf
mov
pop
int3
jnp
jp
push
add
cmp
jmp
shl
fmul
add
punpckhwd
cmp
adc
cmp
sahf
mov
lock
cmp
cmp
aad
push
test
jbe
cmp
lods
clc
or
jge
pop
dec
dec
movs
hlt
add
lock
push
pop
inc
sar
adc
inc
push
jmp
ror
add
mov
push
lea
inc
(bad)
and
pop
iret
mov
push
mov
sub
(bad)
push
fisub
xchg
pop
mov
sbb
xchg
push
add
pop
cmps
add
pop
or
mov
mov
test
sub
xchg
and
add
mov
dec
jbe
gs
and
inc
and
gs
aas
bound
and
xchg
pushf
js
popf
test
mov
xor
jge
sbb
sub
push
add
outs
mov
sbb
sub
movs
push
xor
sti
pop
mov
mov
call
push
or
pop
pop
ja
and
or
ret
add
clc
jno
mov
or
ficom
repz
adc
and
repz
xchg
or
push
test
js
add
sub
inc
xchg
sub
addr16
inc
sub
fwait
pop
xor
mov
push
pop
pop
add
adc
gs
inc
pop
les
or
jno
out
fs
jb
fild
inc
mov
outs
dec
pop
or
jl
xchg
inc
cmp
in
cmps
ret
mov
add
mov
or
cli
mov
adc
mov
xor
push
outs
xchg
scas
fist
add
mov
retf
mov
mov
add
or
mov
xchg
(bad)
jmp
or
push
sub
stos
xchg
adc
dec
add
push
jle
(bad)
(bad)
cli
rcr
jo
pop
or
loopne
adc
test
and
push
sbb
test
mov
dec
pusha
xchg
push
push
ret
movlhps
test
loope
test
xor
push
ror
add
dec
cli
loopne
sbb
inc
and
imul
push
mov
ret
push
scas
pop
mov
sbb
(bad)
cld
pop
imul
js
push
inc
add
jmp
jne
add
xlat
mov
add
mov
mov
mov
test
sub
sub
(bad)
pop
pop
out
and
lock
cmp
jl
and
xchg
adc
ror
mov
(bad)
sub
pop
pop
pop
dec
fdiv
jo
test
mul
push
xor
neg
into
jecxz
and
pop
idiv
mov
dec
or
int3
stos
(bad)
pop
(bad)
in
test
push
or
popa
mov
into
(bad)
bnd
ret
dec
cmp
jne
test
je
adc
cmp
je
lock
pop
push
lock
sbb
mov
call
or
stos
ins
or
jbe
push
mov
push
(bad)
dec
push
add
in
push
imul
and
xchg
inc
adc
or
mov
mov
mov
sub
mov
pop
js
cwde
loopne
pop
ss
cmp
adc
pusha
pusha
push
add
inc
sbb
jo
xchg
mov
loop
add
jae
jecxz
add
movs
pop
rcr
xchg
adc
adc
and
(bad)
ins
push
mov
sub
inc
rcr
fld
push
jge
mov
jno
test
in
jo
mov
sbb
imul
cmp
repz
out
adc
push
lock
popa
ins
scas
clts
stos
jne
pop
xor
adc
outs
dec
and
mov
retf
ja
imul
nop
push
add
add
sbb
mov
mov
jne
add
rcl
adc
adc
icebp
adc
test
ja
addr16
sbb
mov
xchg
pop
cmp
adc
sub
mov
pop
in
mov
sub
jp
and
ret
jbe
pop
xor
movs
rol
mov
sbb
icebp
adc
mov
pop
xor
fsubr
jbe
xlat
jge
xor
lock
adc
mov
dec
fnstcw
sub
push
jns
std
dec
adc
lods
rcr
out
jmp
ror
xor
mov
aam
xor
ficomp
mov
inc
pop
inc
mov
xor
push
and
dec
and
lods
inc
icebp
inc
loopne
adc
xor
dec
adc
js
xchg
push
inc
pop
scas
lods
in
add
mov
in
call
aam
xlat
mov
adc
test
call
or
rcl
dec
push
or
cli
push
xstore-rng
cmps
ret
(bad)
adc
add
and
mul
data16
mov
or
movs
mov
mov
add
xlat
sub
(bad)
shl
cmp
add
out
sar
jle
mov
cli
push
and
aas
add
(bad)
mul
nop
cwde
and
or
sbb
cld
dec
and
or
inc
cmp
xchg
fcomp
xchg
jmp
nop
mov
xchg
popa
fisub
pop
xchg
test
icebp
adc
rol
std
pause
dec
pop
push
push
stc
mov
fdiv
xor
adc
pop
adc
pop
call
mov
sub
clc
and
cmp
inc
inc
popa
sub
out
add
in
jmp
jne
ja
mov
adc
push
movs
shr
inc
ja
and
stc
aas
cmps
add
push
pop
add
push
push
xor
mov
mov
or
call
mov
mov
jnp
xor
or
enter
dec
mov
aam
or
shl
jl
sbb
xchg
sbb
xchg
loopne
add
loopne
xchg
mov
xchg
outs
pop
shr
jmp
adc
xor
add
dec
push
cmova
dec
add
retf
or
jbe
sbb
dec
mov
out
lods
jbe
shl
pop
ins
aam
leave
xacquire
jns
mov
lods
jmp
jmp
cmps
cmp
and
enter
jns
sub
outs
fwait
leave
and
xor
imul
push
sub
iret
scas
imul
loopne
sub
pop
nop
gs
icebp
pop
adc
xor
xor
mov
inc
lock
inc
shl
cmp
jbe
xchg
sub
add
add
inc
adc
cmc
push
lahf
jbe
fisttp
sub
fisubr
sar
shl
pusha
or
mov
inc
sbb
adc
mov
sub
push
sbb
jg
push
int3
jno
fist
mov
in
fild
out
sbb
and
fimul
mov
test
jp
mov
out
movs
push
add
mov
scas
popa
adc
xor
pop
adc
and
por
lea
sbb
adc
inc
xchg
push
sub
out
push
push
mov
in
aam
nop
xchg
cmps
and
out
push
scas
inc
cmps
and
or
aaa
lock
ffreep
sub
ficom
fsubr
dec
and
inc
icebp
mov
jmp
out
mov
pop
add
fs
les
sub
test
push
fst
dec
and
es
xor
sbb
inc
adc
out
pusha
inc
es
js
adc
call
mov
xor
jbe
mov
xchg
cmp
clc
imul
jl
xor
adc
(bad)
pusha
add
aaa
hlt
push
jno
push
ja
icebp
sub
ret
inc
push
adc
xchg
sub
pusha
and
xor
cmp
mov
(bad)
in
shl
(bad)
mov
mov
sbb
inc
rcl
daa
dec
loopne
adc
mov
push
or
push
in
popf
cmp
ficom
popa
jmp
xlat
sbb
mov
sub
rol
add
xchg
inc
gs
pop
jle
adc
xchg
or
pushf
test
hlt
push
(bad)
push
mov
dec
call
inc
push
movs
fnsave
into
lock
add
mov
(bad)
iret
sbb
and
add
sbb
popf
inc
lods
nop
outs
leave
mov
jecxz
push
fcom
add
add
cmp
into
in
jle
cmp
fisubr
push
not
cmc
push
xor
adc
ja
call
inc
fidivr
jp
xor
jmp
fisttp
xor
push
cmp
ds
and
inc
ss
mov
push
xor
xchg
push
repz
les
sub
and
je
cs
dec
aas
jecxz
pusha
mov
or
mov
aad
push
retf
dec
push
xor
xor
inc
mov
pop
mov
sbb
mov
aas
sub
pop
sub
sub
(bad)
cmp
adc
lea
or
cwde
adc
pop
dec
in
ficom
sti
mov
jle
xor
mov
jae
push
es
dec
xlat
mov
sub
(bad)
hlt
ja
hlt
sbb
hlt
push
add
es
cmps
and
mov
sbb
fsubr
fistp
mov
adc
pop
adc
lods
pop
xor
sbb
and
xchg
dec
neg
sub
lds
cmp
test
cmp
mov
pop
and
stos
inc
mov
icebp
cld
add
push
shl
jb
dec
loope
out
mov
loopne
arpl
sbb
ret
mov
xor
nop
out
test
inc
jmp
xchg
pop
ja
sbb
sub
jl
clc
lea
enter
adc
out
in
hlt
mov
(bad)
stc
or
push
loopne
shl
ret
sub
dec
inc
inc
sub
rcr
adc
dec
and
push
add
sub
cmp
iret
cmp
adc
lds
out
and
loope
jns
xor
neg
adc
(bad)
push
fcomp
add
add
mov
cmps
dec
xor
(bad)
pop
ss
xchg
sub
in
nop
or
adc
pop
sbb
or
or
pop
stc
ds
fdivr
repz
lea
stos
cmc
mov
sub
and
pushf
inc
add
in
movs
popa
arpl
inc
sar
sbb
add
inc
pusha
fbld
push
adc
push
ins
push
mov
sbb
jl
inc
lock
retf
mov
push
enter
clc
fadd
jne
jmp
popa
push
std
jne
inc
xchg
daa
cwde
test
pop
mov
loopne
(bad)
loope
add
cmp
pop
into
ret
add
sub
pop
mov
out
nop
arpl
adc
lea
xor
inc
iret
xchg
sub
pop
push
daa
xchg
out
adc
in
sub
add
xor
cld
iret
sub
pop
aas
fsubr
mov
int3
daa
dec
fdiv
lods
jmp
or
into
and
add
loopne
sbb
mov
fcmovnu
(bad)
out
pop
adc
rcr
cmp
lock
mov
sub
sahf
cmp
push
cs
jg
push
fadd
inc
gs
xor
fs
loopne
pop
sub
lahf
sti
cmp
xor
in
vmwrite
les
fstp
add
cmps
sub
xor
or
lods
std
inc
push
cmp
adc
add
adc
push
hlt
js
fwait
dec
rol
jb
mov
mov
xchg
push
cmp
push
mov
xchg
iret
loopne
test
pop
sub
sub
xchg
imul
push
and
out
jle
xchg
mov
or
pop
iret
imul
pop
cld
test
mov
test
xchg
mov
mov
sbb
sbb
adc
in
push
call
xchg
(bad)
shr
stos
jo
in
in
cs
jnp
int3
jge
adc
xchg
sub
lods
sub
or
push
adc
pusha
push
xlat
sar
adc
push
(bad)
pushf
(bad)
or
cwde
inc
xor
aad
push
jecxz
jmp
sbb
mov
inc
movs
popa
ja
lea
shl
int3
lock
sbb
pop
push
pop
inc
push
pop
cmp
scas
dec
ret
nop
test
add
retf
cmp
jg
out
jmp
cmp
jae
dec
push
pop
adc
sub
add
add
jle
cmp
clc
shr
cmp
pop
fs
popa
adc
das
mov
repnz
adc
mov
icebp
and
mov
pop
loope
pop
push
movs
or
cld
adc
popf
dec
or
(bad)
push
push
sub
jmp
add
xchg
xchg
dec
jp
mov
pushf
or
push
sub
(bad)
out
sbb
pop
lea
out
pop
mov
lea
movs
push
mov
sub
nop
fcomp
dec
and
test
push
(bad)
fist
out
dec
test
add
aam
and
jge
and
pop
and
outs
push
ret
mov
sub
data16
ins
push
add
ret
cs
mov
mov
loopne
xchg
inc
add
out
shl
dec
adc
xor
and
jg
and
pop
add
xor
dec
(bad)
out
xor
pop
pop
and
icebp
out
sbb
and
jne
shl
and
(bad)
cmp
or
inc
mov
inc
mov
lds
sar
and
es
cmp
cmc
jne
xor
pushf
imul
jne
loopne
jp
repnz
data16
add
push
inc
jle
dec
jg
push
add
mul
xor
lods
xor
pop
mov
jecxz
sub
icebp
and
and
les
clc
js
inc
xor
or
sub
call
data16
inc
xor
clc
test
int3
shr
imul
shl
(bad)
lfs
jg
iret
sub
inc
cmp
pop
push
inc
bound
ror
(bad)
sub
inc
lea
dec
jl
push
sbb
mov
fs
jg
and
xor
in
jg
or
or
push
cmp
jl
inc
(bad)
sbb
mov
das
sub
retf
push
sbb
adc
popa
fisttp
add
fisttp
scas
fiadd
push
add
test
pop
adc
iret
in
mov
leave
or
add
imul
xchg
push
adc
sub
pop
out
dec
unpcklps
ja
add
pop
ds
adc
push
inc
sbb
push
icebp
inc
popa
cmps
rcl
cmp
icebp
sbb
pop
xor
dec
shl
sub
sub
inc
loopne
push
xor
dec
cmovp
mov
inc
mov
sysenter
cmpxchg
fstp
stos
mov
div
push
daa
popa
push
shufps
pusha
adc
adc
int3
movs
sub
xlat
add
sbb
cmp
xor
cmp
jns
jae
xlat
xor
jle
sbb
ret
pop
fmul
or
cld
dec
sbb
add
push
pop
stc
pusha
rol
nop
and
popa
cmp
and
retf
mov
mov
outs
mov
pop
ds
fisub
in
jbe
add
(bad)
repz
in
dec
pop
push
pop
test
and
bound
inc
inc
fild
sbb
or
sub
dec
adc
popa
cld
dec
sbb
xor
fsubr
xor
imul
ret
dec
xor
add
aas
mov
rcl
data16
pop
inc
and
inc
bound
pop
and
(bad)
mov
loope
out
push
mov
mov
push
push
jge
icebp
test
lahf
pusha
sub
out
mov
pusha
or
mov
pusha
jnp
mov
push
cmps
not
xchg
test
inc
neg
sbb
ret
outs
mov
pusha
addr16
mov
pusha
iret
lock
cmp
lock
or
lock
mov
sahf
or
or
mov
inc
fisttp
and
dec
jge
fsubr
inc
cmp
cmp
adc
or
popf
ins
test
call
push
push
fadd
lods
xchg
pop
xor
pop
jb
push
or
and
fisttp
xabort
fsubr
adc
add
rcl
xchg
rol
stc
cmp
bound
sbb
clc
push
dec
loopne
nop
fadd
push
or
test
sbb
pop
pushf
loop
xor
push
cmp
xor
inc
and
and
push
inc
mov
push
(bad)
adc
pushf
add
xchg
xchg
push
or
test
push
add
fadd
sub
jmp
mov
sub
clc
and
shl
iret
shl
or
lods
adc
and
xchg
sub
jae
arpl
sbb
inc
stc
add
or
pop
gs
xchg
sub
xor
sbb
sub
ins
xor
pop
jo
cmp
jne
cmp
or
mov
cmp
sub
cmp
mov
or
adc
lock
(bad)
jns
stc
cdq
mov
mov
or
cmps
lea
adc
adc
or
cmps
xchg
cmp
xor
in
cmps
xor
iret
popa
imul
dec
and
adc
shr
inc
and
(bad)
inc
retf
in
or
or
sub
inc
xchg
dec
mov
xor
sbb
or
mov
inc
cmps
ds
add
jno
push
cli
push
enter
pop
and
mov
addr16
es
jo
mov
sbb
mov
hlt
lahf
rcl
or
popf
rcr
pop
push
test
rcl
or
or
push
movs
sbb
enter
fs
js
fcmovnb
inc
jp
icebp
pusha
push
sub
xor
push
jbe
inc
cmp
(bad)
jmp
js
push
push
adc
add
into
mov
push
lods
dec
js
add
lods
mov
mul
xor
and
outs
(bad)
mov
sbb
or
xchg
scas
aas
(bad)
or
rol
mov
enter
cmp
pop
enter
aas
into
or
ret
test
fwait
test
dec
js
sub
xor
pop
enter
jbe
aaa
inc
cmps
jo
lea
dec
hlt
cmp
test
and
pop
add
jmp
sbb
gs
mov
sbb
mov
adc
cmp
xchg
adc
mov
xchg
or
sub
mov
add
mov
xchg
jle
push
shl
hlt
push
repnz
rol
sbb
popa
add
leave
test
add
inc
loope
inc
dec
push
sub
jmp
mov
nop
clc
cmp
and
js
sub
fst
cmp
(bad)
xor
fldcw
xchg
adc
mov
fisub
add
push
jg
out
xor
sub
and
xchg
test
add
dec
add
ss
les
dec
cmp
fcmovnbe
add
inc
xchg
test
xchg
adc
adc
clc
ins
pop
rol
inc
adc
inc
(bad)
add
rcr
sbb
cmp
pop
push
(bad)
inc
enter
stos
push
fmul
(bad)
out
mov
dec
fisttp
dec
xor
push
push
push
adc
adc
fadd
frstor
inc
mov
and
pop
leave
push
rcr
or
xadd
add
dec
or
cmp
push
movs
xor
loopne
sub
rol
add
pop
or
ret
ins
enter
sub
cmp
enter
jmp
loope
ret
add
jmp
ins
inc
cwde
push
aam
int3
mov
inc
jle
cdq
and
jne
iret
cmc
sbb
mov
enter
movs
sbb
pop
or
sub
push
xchg
xchg
xlat
add
add
inc
xchg
loopne
in
ss
ret
add
xor
gs
js
ror
jmp
push
add
fld
nop
ret
dec
add
data16
add
or
and
fisttp
aaa
iret
and
pop
fdivr
add
dec
pop
jg
push
ror
popf
pop
jmp
call
(bad)
mov
jns
fst
pop
or
or
cdq
xor
ror
ins
xchg
shr
and
xchg
jne
pop
in
dec
pop
xor
add
pop
add
pop
repz
add
adc
loope
jnp
xchg
or
mov
mov
loopne
xor
jg
movs
jbe
mov
cmp
(bad)
pop
(bad)
popa
and
fisubr
dec
cli
cmp
test
les
jle
inc
or
add
sar
aad
cmp
ss
outs
inc
hlt
dec
mov
sbb
add
shl
or
pop
mov
sbb
mov
add
add
leave
in
inc
and
cld
cmp
xor
cld
cld
add
leave
add
add
xor
dec
enter
sub
sbb
xchg
jmp
push
mov
jmp
cmp
add
leave
pop
push
aad
add
int
in
in
add
shr
das
ja
imul
in
ins
push
mov
aaa
sub
cmp
clc
mov
mov
adc
mov
(bad)
cmc
add
mov
xor
and
push
or
fidiv
inc
xlat
in
cmp
jne
or
loop
test
inc
xchg
sbb
jb
adc
loopne
xchg
jmp
jmp
inc
(bad)
in
popa
ja
jne
dec
je
(bad)
add
mov
jmp
fild
int3
jb
xor
sar
jmp
xchg
adc
in
(bad)
dec
and
push
mov
cld
add
adc
mov
addr16
fsubr
enter
mov
xor
and
sub
jle
adc
mov
push
push
xchg
add
dec
xchg
mov
ftst
in
and
push
lds
(bad)
mov
jo
mov
mov
add
fdiv
jns
mov
add
pop
inc
xor
ins
(bad)
hlt
cld
jno
push
out
sbb
dec
sahf
xor
mov
inc
and
inc
adc
mov
aas
fs
cmp
add
enter
jne
sbb
(bad)
data16
outs
inc
xchg
add
mov
and
loop
push
mov
jne
sub
pusha
popa
jae
and
cmp
ret
cmp
adc
js
xor
add
mov
mov
or
sbb
jae
add
or
and
lahf
cmp
aam
icebp
ret
nop
faddp
das
and
sub
in
sub
push
mov
push
neg
xlat
push
enter
enter
cmp
xlat
add
leave
(bad)
lea
sbb
add
push
and
int3
inc
fist
push
and
(bad)
shr
outs
xlat
in
pop
xor
and
sbb
dec
pop
cwde
sbb
or
pop
cmps
lea
ja
jbe
xor
fcomp
lods
ror
adc
addr16
scas
out
or
sti
sub
push
clc
fwait
sbb
push
and
iret
clc
daa
push
jae
jnp
jb
sbb
adc
(bad)
and
pop
shl
xor
(bad)
cli
enter
ret
pop
fdivr
and
add
sub
in
pop
inc
mov
and
add
cmp
jge
and
ins
sub
push
cmp
test
sbb
pop
push
popa
adc
or
adc
and
pusha
cmp
and
mov
test
jp
xor
cwde
or
sbb
xchg
out
sub
popa
test
test
mov
sub
out
add
fsubr
jmp
sbb
fadd
xor
pop
das
js
shl
sub
stos
das
jle
or
sbb
sbb
lods
pop
clc
dec
mov
and
push
xor
mov
std
clc
or
mov
outs
div
call
dec
xchg
jne
test
push
mov
and
(bad)
jns
or
or
adc
ins
aaa
cmp
ss
aad
jns
mov
fs
jg
inc
push
sub
rcr
test
mov
cmp
inc
and
and
push
ret
nop
bound
cmp
lock
retf
mov
jbe
jb
add
adc
pusha
adc
cs
inc
fisubr
inc
daa
sub
xchg
jl
adc
push
nop
and
jb
add
dec
not
jae
fsubr
xor
out
lea
or
sub
mov
xchg
mov
fcom
jecxz
or
dec
daa
sbb
mov
test
push
movs
fwait
sbb
sub
mov
push
mov
out
cmp
ror
xchg
ret
mov
adc
pop
cmp
scas
mov
inc
(bad)
sub
into
push
arpl
sbb
dec
adc
sbb
arpl
sti
test
jne
cmp
test
in
sbb
cmp
adc
push
popa
or
sar
jb
aam
aad
jmp
clc
inc
dec
jb
pop
sbb
in
xchg
loop
dec
pop
or
not
sbb
(bad)
bound
add
cmp
ja
mov
pop
dec
lea
or
sbb
retf
xchg
cmps
inc
rol
in
mov
stos
pop
ret
das
pop
sbb
mov
push
push
fst
or
hlt
pop
xor
cdq
nop
cmp
mov
push
in
jl
(bad)
mov
mov
ret
test
adc
jp
or
or
and
inc
pop
push
jecxz
inc
frstor
lea
mov
cmp
inc
jbe
jns
loopne
pop
out
push
imul
in
mov
cdq
xchg
clc
clc
(bad)
push
leave
xor
ror
cmp
dec
sub
and
xchg
mov
ret
in
jecxz
push
rcl
push
nop
sbb
cld
inc
shl
mov
dec
dec
jg
xchg
jne
sbb
xchg
outs
or
loopne
cdq
sbb
iret
xchg
xchg
in
aam
stos
loope
jnp
mov
mov
mov
or
sub
int
adc
call
pop
xor
cwde
cwde
push
or
xchg
xchg
xor
sbb
ins
jo
or
shr
ins
sub
mov
icebp
add
or
push
ins
cmp
rcl
mov
and
dec
fs
lods
ins
imul
and
pop
mov
jne
dec
popa
test
push
std
dec
sub
inc
(bad)
jg
lods
mov
inc
xchg
test
jae
or
xchg
dec
retf
jne
outs
add
cmp
mov
imul
adc
or
pop
or
adc
pushf
push
sbb
sbb
cmp
aad
sub
adc
mov
and
mov
pop
xor
mov
push
sub
ficomp
lea
lock
adc
dec
pusha
xchg
lea
cs
loop
(bad)
inc
cmps
adc
mov
adc
loop
sbb
inc
or
xchg
xchg
cmc
inc
xchg
jne
es
inc
ret
push
jmp
cmp
inc
cld
sub
dec
cmp
inc
sar
sbb
popa
outs
imul
or
gs
adc
hlt
adc
sti
popa
sbb
in
push
(bad)
and
leave
and
inc
and
ds
push
in
(bad)
adc
sbb
jmp
test
aam
and
rcl
jnp
sbb
or
and
add
jp
sub
sbb
out
pop
inc
clc
and
(bad)
jl
add
cmc
inc
xor
jbe
pavgb
xchg
fisttp
or
sub
(bad)
sbb
daa
jecxz
and
std
sbb
mov
and
jae
or
inc
je
imul
mov
xchg
aaa
hlt
xchg
mov
cmp
jno
dec
loopne
push
cmp
adc
dec
mov
mov
arpl
nop
pop
and
mov
jo
xor
aam
js
xchg
cmp
push
dec
pushf
xchg
inc
paddusw
xor
inc
outs
or
sub
shl
add
mov
add
jnp
ins
inc
pop
lods
push
inc
sbb
mov
dec
outs
outs
and
jmp
dec
add
cld
add
xchg
sub
fld
mov
xchg
or
dec
pop
inc
sbb
(bad)
fcmovb
and
dec
sbb
shl
call
outs
stc
ds
addr16
xor
xor
(bad)
iret
cld
pop
test
adc
mov
or
inc
xchg
fadd
out
jae
popa
popf
xor
enter
mov
and
sbb
cli
xchg
into
jge
push
retf
ss
movs
retf
ss
jle
push
push
imul
or
or
popf
cmps
add
cs
sbb
loop
adc
mov
jmp
add
add
mov
sar
cmc
(bad)
dec
lea
add
addr16
cmp
sub
pusha
and
mov
adc
pop
clc
push
cmp
(bad)
fadd
shl
rcr
push
jmp
gs
mov
push
fs
jns
test
cmc
test
add
fwait
sub
aas
push
stc
jb
sub
je
and
or
aaa
lods
dec
cmc
mov
dec
(bad)
cdq
ins
or
std
mov
fcomp
sbb
push
mov
xchg
movs
adc
mov
adc
pop
dec
xor
dec
push
mov
icebp
sbb
sbb
inc
push
or
add
push
pop
cmp
dec
iret
pop
sbb
sbb
xchg
(bad)
dec
test
sbb
sahf
mov
int
xor
(bad)
mov
test
call
stos
xchg
xchg
jmp
inc
call
adc
fst
fild
mov
leave
movs
sub
and
pop
dec
xchg
ins
add
adc
add
arpl
rcl
rcl
adc
not
fidiv
dec
xor
retf
adc
cmp
aas
jae
not
mov
push
fsubr
test
push
jbe
cld
add
adc
pop
(bad)
cmp
fwait
in
icebp
adc
js
adc
push
dec
sbb
jmp
xchg
or
mov
je
and
(bad)
movs
dec
movs
(bad)
sbb
push
popf
adc
pusha
dec
or
sub
int3
test
add
(bad)
sbb
or
sbb
jmp
sub
repz
popa
adc
sbb
rcr
es
mov
adc
sbb
and
jmp
pop
ror
call
cmp
dec
mov
repnz
cmp
lock
ror
rol
push
imul
jle
push
adc
test
popa
sbb
loopne
cwde
cmc
ret
add
or
adc
mov
and
aam
test
ins
mov
es
pop
pusha
sub
test
in
lds
ins
adc
iret
loope
fldcw
fadd
dec
fsubr
sbb
dec
mul
adc
lock
push
or
ins
push
xchg
xchg
push
pop
mov
add
mov
and
mov
sub
push
aaa
arpl
push
rcr
push
call
icebp
shr
add
mov
icebp
pushf
push
dec
in
das
in
mov
punpckhdq
adc
or
rol
push
stos
mov
mov
pop
repz
popa
icebp
fiadd
inc
or
push
cmp
adc
mov
and
and
add
mov
js
test
in
lea
sbb
dec
fisubr
(bad)
sbb
adc
xchg
xchg
mov
jge
es
inc
xor
xchg
es
clc
jnp
ins
push
fwait
dec
pop
add
cmp
push
inc
ss
inc
and
pop
mov
sub
and
cmp
daa
inc
adc
xor
loopne
and
pop
mov
inc
inc
ret
jbe
mov
iret
add
in
jne
sbb
mov
cmp
cmps
adc
(bad)
cmp
jg
inc
(bad)
arpl
inc
or
inc
(bad)
data16
mov
sub
jl
mov
leave
adc
xlat
cs
(bad)
icebp
fisttp
out
or
arpl
sbb
mov
jmp
jge
loope
mov
ja
imul
in
sbb
jg
jmp
popf
push
or
(bad)
test
adc
xchg
movs
adc
mov
xor
adc
push
or
movlps
add
or
not
(bad)
dec
mov
or
and
fiadd
adc
gs
xor
pop
addr16
jae
je
push
sar
(bad)
sbb
xchg
add
js
ret
sbb
and
call
or
inc
add
mov
inc
ins
cmp
sbb
popf
ret
lock
je
inc
pop
test
add
jl
xor
jg
(bad)
nop
or
fs
or
nop
or
pop
lock
sahf
fistp
(bad)
fld
pop
ret
adc
adc
cmp
sub
jle
pushf
iret
dec
jle
rcl
mov
push
xor
jne
int3
xor
jl
ins
dec
jl
mov
sub
ret
inc
data16
cmp
pop
fcomp
adc
test
push
pop
or
adc
pop
(bad)
jo
inc
out
imul
leave
or
in
inc
jecxz
lds
cld
pop
aad
or
lock
sub
rcr
add
test
pop
(bad)
dec
leave
pop
dec
cdq
pop
push
movs
jae
add
gs
sbb
inc
sbb
mov
and
sub
add
adc
gs
les
lods
mov
(bad)
loop
shr
arpl
daa
sbb
bound
sub
jge
mov
sbb
test
cmp
push
mov
inc
jmp
dec
cmp
and
add
das
mov
sbb
mov
sbb
mov
sbb
and
push
jne
pop
mov
jns
xor
inc
loopne
cmp
into
push
and
push
cmc
pop
sahf
sub
lock
adc
xor
mov
call
push
ins
lock
lods
jnp
cmp
shl
adc
and
popf
add
add
mov
xchg
es
sub
add
jbe
les
jecxz
dec
in
cmp
cmps
jne
cmp
ja
xor
test
xchg
add
fmul
call
fiadd
cld
xor
mov
sub
add
and
mov
and
stos
or
push
cdq
or
jne
jecxz
sub
jne
fs
loope
fidivr
(bad)
push
mov
jo
and
or
add
xor
pop
xchg
sbb
arpl
push
dec
mov
inc
loop
cmp
je
sub
clc
add
and
or
pop
xchg
imul
jno
fnstcw
mov
mov
inc
adc
jp
jmp
push
lock
lds
sub
popf
outs
dec
xchg
push
and
not
sub
mov
xor
loopne
add
rcr
scas
push
cmp
mov
repz
xor
es
push
cmp
call
pop
es
and
jbe
mov
int3
pop
clc
pop
mov
push
jo
or
xchg
js
enter
and
inc
inc
dec
cmp
push
and
adc
or
mov
sbb
adc
xchg
xchg
(bad)
stc
and
(bad)
movs
jb
(bad)
in
call
adc
je
sbb
add
sbb
push
dec
jmp
iret
xor
ror
(bad)
adc
add
jle
jbe
adc
aad
adc
mov
je
inc
enter
das
adc
mov
pop
pop
xchg
stos
sub
or
aam
daa
mov
sub
ret
daa
cli
in
push
cs
js
into
xor
adc
arpl
inc
push
and
push
pop
sub
cs
sub
jmp
inc
sbb
and
push
xor
mov
shr
arpl
pop
out
adc
mov
mov
nop
cmp
lea
mov
cmp
mov
push
mov
add
mov
add
add
leave
mov
mov
enter
(bad)
pop
xchg
popa
dec
enter
(bad)
and
pop
jns
das
push
or
sub
pop
sbb
clc
add
push
pop
pop
cmp
je
fcom
shr
nop
mov
adc
pop
scas
mov
dec
add
sbb
repz
mov
sahf
and
lods
enter
in
adc
add
sub
pop
xor
and
stc
xchg
adc
mov
shl
outs
enter
cmp
ficom
xlat
adc
mov
mov
dec
add
add
and
xor
or
test
jo
mov
arpl
data16
dec
add
jns
push
xor
test
fld
mov
sar
ret
and
nop
inc
jne
call
and
fsubr
inc
iret
fwait
lock
clc
popa
jno
(bad)
jmp
cli
enter
dec
(bad)
(bad)
fisttp
inc
pop
mov
push
mov
bswap
or
getsec
add
sbb
sbb
xchg
or
shl
mov
fwait
scas
fs
mov
ror
call
pushf
mov
and
test
sub
mov
push
sub
mov
adc
push
ins
pop
test
or
adc
movs
push
adc
dec
push
shl
sbb
push
and
xchg
and
xlat
push
jns
stos
mov
adc
add
or
rcr
inc
imul
pop
mov
or
sub
pop
xchg
dec
mov
(bad)
jg
and
or
push
adc
inc
call
scas
cs
jo
addr16
xchg
xchg
cmp
adc
dec
movs
inc
push
sub
adc
hlt
movs
movs
sbb
inc
lods
popf
mov
add
fucomi
jle
or
or
or
push
or
mov
push
jge
lea
loopne
popa
push
sti
sub
pop
stos
jno
out
and
add
mov
add
retf
popf
push
push
adc
mov
fsubr
xchg
or
jmp
nop
push
adc
add
push
jle
pop
or
xor
mov
dec
sub
xor
imul
shr
clc
or
dec
or
cwde
sar
rcl
shr
scas
lds
dec
popa
int3
adc
xchg
dec
aas
test
lods
repz
test
or
push
dec
cmc
dec
inc
test
cmc
retf
xor
push
or
adc
mov
or
mov
or
mov
sub
or
adc
jo
or
div
inc
jb
dec
cmps
sbb
ja
xchg
scas
dec
stos
or
int
sbb
jg
or
sub
sub
test
xlat
pop
ffree
dec
loop
cmp
cli
lods
adc
or
mov
les
and
inc
xchg
pop
dec
sbb
adc
mov
or
sub
xor
adc
lahf
sbb
loop
inc
add
mov
out
sbb
stos
es
pop
push
push
fst
imul
dec
inc
sbb
leave
mov
movs
ss
es
cs
sbb
aas
enter
adc
aam
add
cmp
mov
and
jo
and
inc
pop
jmp
lods
ror
ret
ret
nop
mov
xor
push
dec
xchg
or
(bad)
mov
cmc
adc
pop
scas
hlt
or
(bad)
jno
mov
pop
jle
sub
add
push
iret
add
lock
arpl
push
sbb
add
inc
xchg
inc
jbe
mov
dec
add
outs
dec
adc
out
sub
push
cmp
dec
(bad)
dec
xchg
inc
stos
daa
and
mov
sub
mov
add
iret
xor
pusha
or
leave
push
pause
bound
jmp
movs
shl
lock
add
inc
scas
mov
shr
adc
cmps
adc
pop
test
iret
es
push
sub
sub
ret
mul
cmps
rcl
sbb
pop
inc
pop
cmps
jl
popa
mov
arpl
call
not
mov
mov
push
(bad)
cwde
dec
xchg
xor
sbb
pop
lods
add
push
xor
pop
jmp
mov
sbb
cmp
inc
cmp
loopne
je
loopne
lea
xchg
dec
call
mov
sar
mov
enter
dec
cmp
jne
ret
and
in
or
icebp
cdq
push
fdiv
adc
add
call
inc
hlt
and
add
test
ret
shl
mov
cdq
popa
jecxz
push
pop
xor
inc
or
mov
inc
push
or
or
nop
jmp
or
and
test
and
test
xor
add
sbb
push
push
mov
xchg
add
cmp
pop
xor
gs
adc
imul
aas
sub
xor
outs
cmp
or
pusha
cmp
inc
fadd
push
cmp
push
sub
lea
popa
or
add
shl
dec
or
fldcw
mov
or
push
mov
xchg
addr16
mov
or
xchg
adc
aam
mov
push
(bad)
sub
pop
or
loope
jo
das
leave
inc
mov
adc
(bad)
cmps
sub
xor
jns
sub
xchg
pop
add
aaa
sub
sub
and
add
out
ror
push
cmp
mov
loopne
adc
push
inc
push
push
jnp
push
test
jnp
ret
push
and
adc
ret
push
add
js
add
ror
sub
enter
xor
call
xor
inc
dec
xchg
or
dec
aas
ds
ror
lahf
or
out
push
jne
or
iret
js
jno
mov
in
add
fstp
scas
mov
jmp
add
xchg
adc
int3
sub
loope
rcr
push
push
inc
ret
in
push
outs
or
(bad)
sti
mov
push
and
dec
mov
add
and
loope
and
ins
in
mov
imul
jmp
dec
adc
int
sub
aas
ds
mov
dec
xor
mov
in
sub
inc
sbb
out
xlat
add
and
(bad)
int3
push
pop
movs
add
dec
adc
fild
(bad)
jmp
sbb
daa
aas
cmp
ja
sub
(bad)
xor
mov
or
push
sbb
movs
imul
sbb
xchg
adc
out
inc
push
cdq
std
fs
adc
adc
or
adc
cmps
jae
mov
cmp
push
mov
ins
xchg
ret
dec
mov
mov
sbb
aas
adc
mov
jne
inc
cmp
(bad)
retf
cmp
mov
loopne
push
push
fadd
ds
pop
sti
call
xor
add
inc
add
stos
add
inc
mov
fadd
pop
rol
stos
ret
ret
jbe
clc
aam
ret
add
and
add
jo
jno
call
out
jae
xor
ret
mov
es
mov
pop
fwait
and
fcmovnb
(bad)
sub
mov
ins
mov
and
shr
fwait
or
cmps
push
sub
push
push
nop
test
ror
mov
inc
fmul
add
cmps
sbb
es
add
dec
jae
dec
pop
or
inc
dec
pop
dec
call
dec
shl
mov
push
dec
and
test
and
push
iret
test
cwde
mov
nop
xor
inc
add
shl
xchg
sbb
push
mov
test
mov
sub
(bad)
mov
movs
cmp
jecxz
push
es
adc
cmp
add
cmp
sbb
out
cmp
cwde
pushf
jle
mov
jmp
push
push
imul
dec
or
xchg
hlt
movs
or
fcom
retf
call
mov
xchg
jae
fstp
clc
cmps
loope
pop
cmp
je
mov
xchg
call
movs
sub
ins
in
fcom
inc
pop
aaa
cmps
and
mov
nop
fldcw
test
inc
and
int
cs
inc
es
dec
push
movs
pushf
(bad)
inc
rol
loope
sub
mov
push
pop
leave
test
sbb
cmp
mov
(bad)
mov
adc
mov
dec
call
mov
mov
or
xor
inc
inc
fistp
cli
sbb
pop
jge
test
std
or
mov
push
(bad)
or
out
pop
sbb
jo
jmp
sbb
aam
sub
les
push
fstp
inc
push
mov
inc
pop
mov
fsubr
push
or
(bad)
lea
stc
ins
gs
xchg
adc
adc
xlat
inc
cld
mov
cmp
movs
inc
sub
push
push
jns
pop
cmp
jo
mov
je
add
js
push
rcl
xchg
pop
(bad)
jmp
ret
dec
dec
aad
inc
adc
mov
and
sub
xor
mov
pop
ins
or
mov
mov
add
lock
sub
mov
push
or
addr16
jmp
or
dec
clc
lods
pop
mov
adc
dec
mov
ss
rcl
add
lods
int3
jmp
push
sbb
aad
mov
jecxz
cmp
ret
pop
xor
ins
mov
sahf
adc
mov
xchg
add
cli
fwait
in
xchg
inc
xchg
xchg
(bad)
repz
xchg
add
leave
mov
push
jmp
jne
mov
mov
sub
adc
out
ja
add
lods
and
and
cmps
arpl
lock
jae
or
pushf
dec
push
sbb
add
jb
fwait
mov
push
dec
ret
pop
mov
mov
shl
adc
jecxz
or
ret
jae
sbb
pop
push
push
fidiv
jle
cmp
push
fimul
test
add
dec
pop
push
hlt
test
mov
nop
push
push
mov
pop
ss
pop
mov
push
xor
inc
stos
retf
ret
dec
lods
xchg
mov
inc
inc
sbb
pop
jo
mov
push
dec
and
or
mov
add
daa
daa
retf
movs
jmp
xor
ret
mov
ret
sub
test
mov
les
mov
xor
or
rcr
push
mov
sar
gs
call
mov
add
and
dec
xor
mov
mov
mov
xchg
mov
inc
add
xor
rcl
int
test
add
pop
shr
dec
xor
jle
xchg
(bad)
fisttp
mov
je
pop
jl
or
or
adc
daa
inc
pushf
pushf
push
mov
call
sbb
push
rcr
push
rcr
mov
ja
xor
inc
cs
pop
(bad)
adc
xor
enter
push
mov
dec
or
cmp
movs
stos
sar
sub
lock
outs
lea
fcmovbe
je
push
inc
sub
sub
or
cmp
xchg
movs
fs
mov
pop
dec
add
jle
outs
in
std
test
add
loope
mov
sub
lock
mov
pop
pop
dec
es
adc
dec
pop
sub
(bad)
xchg
mov
xor
mov
mov
and
sub
das
push
xor
or
mov
test
cdq
jo
xchg
xchg
inc
rcl
jmp
cmp
and
call
and
cdq
cwde
mov
rcl
sbb
scas
nop
lahf
nop
leave
ret
inc
or
fs
push
enter
mov
jno
es
sbb
std
and
mov
lods
mov
mov
or
push
les
adc
cmps
add
(bad)
push
or
iret
or
fadd
sbb
stos
ins
or
add
push
add
or
ror
shl
mov
not
or
xor
pop
add
inc
mov
cwde
movs
ja
mov
pop
sbb
shl
xchg
rcr
mov
push
push
pop
and
pusha
xchg
add
pop
inc
adc
fadd
push
imul
inc
addr16
push
shr
pusha
retf
push
fcom
(bad)
fcom
xchg
adc
shl
and
xlat
push
mov
sub
mov
inc
push
prefetcht2
adc
and
inc
dec
es
push
jb
sbb
enter
xchg
or
push
cmp
popa
nop
sbb
mov
xlat
sub
cs
arpl
inc
xchg
out
stc
movs
imul
(bad)
std
mov
add
test
js
add
mov
mov
movs
and
push
mov
sub
gs
jle
out
and
sub
xlat
movs
dec
xor
leave
xor
and
inc
imul
or
imul
ds
or
mov
xchg
fidiv
inc
cmp
jne
adc
sbb
jo
push
sub
imul
lods
mov
or
sbb
test
fimul
add
das
test
or
push
pop
enter
xchg
imul
ins
shl
(bad)
jnp
push
cmp
or
sub
dec
cmps
or
stos
jne
push
push
sub
pop
ins
add
shr
dec
jne
jp
aas
push
leave
add
fwait
je
loope
pop
in
test
xlat
retf
(bad)
shr
pop
enter
mov
adc
nop
imul
mov
dec
sub
add
test
popa
and
cmp
imul
xor
(bad)
jge
add
cwde
pop
scas
xor
inc
(bad)
imul
invd
out
push
add
adc
and
hlt
loope
add
dec
pop
ret
mov
aaa
xchg
int
ins
push
stc
ror
test
pop
and
xchg
cmp
loopne
adc
xchg
inc
push
sahf
mov
inc
movs
pop
mov
int3
xchg
lock
inc
inc
add
add
xchg
add
adc
sub
inc
cmp
or
rcr
out
into
mov
inc
add
xor
shl
(bad)
xor
pusha
nop
shl
or
pusha
jg
and
cmp
test
cmp
je
scas
push
rcr
retf
add
nop
add
mov
sahf
xadd
dec
daa
rol
inc
cmp
jmp
add
daa
pop
adc
and
add
shr
mov
stos
and
aam
push
and
inc
loopne
push
xor
or
or
pop
or
neg
and
add
or
push
pop
ds
add
enter
mov
pop
inc
cmp
js
ja
pop
push
lock
mov
mov
sub
loope
xor
cmp
mov
push
or
rcl
imul
jne
push
(bad)
add
pop
clc
fiadd
jecxz
lea
ror
dec
das
cmps
add
dec
inc
imul
dec
sub
or
fs
inc
clc
xchg
push
mov
rol
lds
jmp
clc
fadd
clc
adc
ins
add
in
push
cmp
mov
int3
inc
inc
cmps
pop
dec
push
jmp
fs
sbb
and
dec
dec
movs
mov
dec
fs
in
xchg
mov
or
xor
scas
inc
mov
xchg
lods
and
inc
sub
add
xchg
ja
xor
sub
sub
cmp
sbb
ins
xchg
mov
add
shl
hlt
add
xchg
fninit
fstp
cmp
or
sbb
mov
imul
sub
or
pop
jmp
mov
cdq
test
rcl
fs
aad
cdq
stos
gs
mov
adc
push
adc
ja
xor
and
jge
adc
cmp
add
xor
inc
pop
and
mov
aaa
or
cmp
sahf
ret
out
jb
test
push
mov
push
xchg
ins
pop
mov
leave
popa
ins
xor
leave
js
xor
jae
test
enter
pop
push
in
mov
and
xor
jae
sar
dec
div
fstp
dec
push
inc
jne
loopne
sub
xchg
mov
clc
sbb
(bad)
fadd
loopne
cmps
cmp
or
pop
or
inc
fdiv
xchg
cmps
xchg
je
pop
and
and
xor
(bad)
stc
popf
mov
xor
sbb
xchg
imul
fist
jg
add
outs
sub
pop
sub
xor
ins
movs
cld
hlt
or
mov
repnz
popa
stos
cmp
cmp
add
jne
xor
sub
std
dec
add
or
arpl
iret
movs
data16
icebp
sub
test
jbe
clc
hlt
mov
pusha
leave
adc
or
add
pop
jl
dec
jb
gs
jecxz
or
je
pop
sbb
and
aaa
inc
xchg
cmc
inc
rcl
inc
add
sbb
push
jnp
add
in
mov
sbb
loope
jg
sbb
loop
scas
mov
add
test
cmp
push
mov
lahf
push
cmp
cmp
ret
push
les
dec
call
popa
fld
add
or
or
mov
les
loopne
mov
cmp
into
repz
dec
cmc
adc
inc
retf
sub
int
xor
div
div
div
jb
gs
dec
inc
arpl
and
inc
ins
repnz
dec
jo
test
xchg
dec
push
cld
pop
pop
jnp
out
and
leave
inc
lods
outs
push
xor
xor
and
pop
(bad)
aad
div
push
sub
bound
stos
sub
ficom
adc
ret
mov
add
js
or
xchg
mov
jne
push
jl
mov
shr
dec
es
mov
out
lea
mov
or
pop
or
adc
rol
dec
and
rcr
js
mov
jmp
sub
ret
push
add
xlat
xchg
mov
stc
loop
ss
ficomp
xor
push
addr16
mov
and
test
jp
aad
xchg
js
cmp
jns
je
adc
ss
push
fistp
push
cmc
les
add
in
iret
loopne
test
adc
js
and
push
or
test
and
mov
push
fimul
inc
sbb
mov
clc
xor
cmp
jne
(bad)
sar
push
lock
add
mov
pop
mov
pop
dec
mov
pop
inc
pop
add
inc
adc
xchg
dec
or
into
add
dec
in
jb
mov
add
ins
xor
lds
xor
xchg
shl
push
sbb
mov
dec
and
inc
lds
pop
xor
ret
or
jmp
inc
test
enter
mov
jbe
sbb
in
pop
sub
jbe
mov
mov
xchg
loopne
pop
add
fbld
add
stc
xor
mov
xchg
int
inc
loopne
retf
push
xchg
fidivr
ror
jmp
xchg
mov
mov
push
(bad)
in
sub
stos
sahf
push
call
dec
mov
add
je
push
mov
rcr
xchg
sbb
and
push
adc
seto
jle
xchg
imul
adc
dec
int3
cmps
test
add
push
fisubr
mov
mov
test
das
push
test
stos
cmc
jo
lods
ret
nop
inc
pop
and
sar
push
and
retf
das
fiadd
dec
(bad)
jge
clc
pop
dec
ds
fcom
loopne
add
(bad)
jnp
fidiv
add
xchg
sahf
add
add
dec
push
into
pusha
mov
pop
xor
mov
mov
popa
cmps
xchg
or
jno
call
ror
mov
ins
mov
dec
mov
add
dec
pushf
mov
loope
mov
ret
add
mov
inc
int3
and
mov
xchg
dec
cmc
pop
and
lock
adc
jae
mov
mov
sbb
outs
jae
pop
cmps
pop
loop
lahf
in
push
sbb
pop
adc
xchg
fild
mov
mov
stos
dec
inc
push
xchg
add
add
ror
leave
jne
pop
imul
sub
xchg
sbb
inc
call
cdq
ds
pushf
adc
xchg
icebp
pop
add
cmp
jne
rcl
mov
call
fld
sbb
call
arpl
dec
fadd
call
mov
sbb
ret
cli
lahf
and
ficom
xchg
dec
pop
(bad)
aam
test
add
imul
int
mov
mov
mov
inc
add
adc
xor
xor
xchg
or
mov
push
rol
or
and
call
cmp
les
movs
or
test
jns
sub
lods
(bad)
mov
shrd
jmp
mov
push
ja
jo
or
fs
cmps
inc
xor
in
(bad)
enter
and
rcl
lock
in
jmp
dec
xlat
sbb
mov
enter
push
xchg
pop
inc
add
outs
pop
xor
fwait
add
dec
and
xchg
scas
retf
jge
adc
sbb
mov
add
call
adc
jmp
cmp
daa
jns
cmp
stos
xchg
(bad)
xchg
xchg
adc
pop
inc
jae
sub
addr16
addr16
ret
aaa
and
daa
int
les
or
or
popa
and
add
inc
xor
ja
test
dec
or
popf
popa
pop
pop
adc
mov
pushf
mov
mov
(bad)
fisub
dec
mov
imul
jl
das
dec
das
nop
xchg
inc
ins
iret
mov
and
pop
push
push
add
push
clc
lock
retf
xor
xor
les
(bad)
cmc
adc
push
jl
mov
xor
pop
enter
cld
pop
jns
outs
ret
call
and
mov
mov
daa
sbb
sbb
pusha
out
jne
adc
ins
sahf
sbb
loope
mov
retf
and
add
mov
mov
mov
inc
ss
cs
dec
adc
push
cs
jne
sbb
or
lea
xor
and
ins
mov
loope
fadd
cwde
push
xchg
es
pop
iret
test
xchg
not
sahf
cmp
push
nop
(bad)
nop
mov
mov
nop
xchg
mov
aam
in
mov
movs
outs
lods
das
pop
cmp
lock
mov
mov
daa
pop
rol
and
pop
jb
mov
push
(bad)
hlt
fsub
jb
and
into
test
and
inc
pop
xchg
ret
dec
adc
lods
cmp
cs
addr16
inc
add
mov
cwde
(bad)
daa
fsubr
sbb
push
xor
in
or
push
hlt
xor
in
sti
xchg
test
cmp
aaa
aad
cmp
xor
js
out
daa
(bad)
ficomp
jle
mov
ret
push
cld
sub
neg
sbb
inc
add
mov
ss
add
out
seta
mov
js
jmp
sbb
add
dec
jmp
pushf
nop
inc
push
sbb
xlat
or
and
pop
outs
or
dec
xchg
ret
or
or
xor
push
pop
and
shl
push
(bad)
shl
cmps
fidivr
inc
daa
xchg
data16
sub
pop
imul
(bad)
dec
mov
arpl
loopne
in
add
add
rol
mov
cmp
push
dec
int3
inc
sub
sub
jno
jne
jbe
stos
and
dec
inc
mov
xchg
in
jge
jmp
sub
pop
dec
inc
adc
pop
aam
mov
jecxz
pushf
inc
shl
sub
gs
adc
lods
das
fisubr
push
fcomp
lahf
push
mov
mov
jecxz
mov
cmp
xor
inc
add
xor
fcmovne
cmp
add
int
ror
(bad)
add
mov
mov
ins
ret
sbb
adc
ss
repz
aam
enter
fsubr
out
jno
and
jecxz
add
mov
adc
loopne
dec
mov
and
scas
xchg
and
mov
lods
in
adc
test
arpl
loope
sti
or
adc
les
test
sar
dec
jb
xchg
int3
xchg
cmp
scas
adc
jb
inc
aam
imul
aaa
xor
pusha
inc
fist
or
mov
dec
sar
push
jmp
ret
adc
aad
shl
daa
dec
lea
inc
stc
and
cmc
mov
and
cmp
cmp
call
sbb
es
push
pusha
push
adc
adc
movs
mov
mov
sbb
mov
xlat
pop
sbb
test
inc
xor
enter
mov
mov
dec
in
and
nop
pop
jl
mov
or
jge
jge
cmp
mov
xchg
push
mov
fs
pushf
(bad)
in
nop
daa
and
push
cwde
xchg
push
sbb
xchg
push
loopne
int
mov
push
xchg
fcom
shr
cmp
mov
xchg
les
ret
push
mov
pop
push
les
into
mov
or
sbb
and
(bad)
std
mov
xor
add
pop
nop
or
test
inc
add
lods
out
push
and
jne
xchg
add
or
dec
das
jno
xchg
adc
mov
dec
or
pop
xchg
xchg
push
xchg
adc
or
clc
inc
xchg
and
fwait
aaa
in
pusha
pop
enter
mov
cmp
mov
and
jl
dec
xchg
push
mov
push
mov
inc
lods
xlat
adc
add
and
adc
nop
inc
xor
iret
lea
dec
add
push
lahf
sbb
add
add
pop
adc
das
push
adc
out
jns
jno
xchg
pop
add
jno
cs
(bad)
mov
in
push
adc
push
pop
cwde
push
mov
pop
inc
cmp
inc
ins
pop
add
mov
mov
push
adc
and
ret
pop
and
cli
dec
or
int3
icebp
pusha
push
dec
aam
adc
xlat
and
adc
adc
inc
bound
and
dec
push
mov
das
xchg
push
pop
lods
xchg
push
inc
push
dec
push
clc
add
push
test
push
adc
dec
push
dec
gs
stos
leave
sbb
xchg
mov
xchg
mov
dec
inc
fsubr
pop
hlt
dec
test
(bad)
dec
xchg
push
jno
rol
(bad)
inc
mov
je
ret
sub
adc
and
xchg
fucom
and
jl
add
fld
sbb
mov
sbb
mov
mov
adc
adc
sub
inc
in
cmp
sbb
sbb
nop
push
dec
mov
and
xchg
push
mov
pusha
out
sbb
push
or
inc
pop
cmps
and
or
loopne
adc
aas
adc
mov
sbb
aas
dec
fwait
mov
pop
int3
add
dec
sbb
mov
pop
fs
stos
pusha
sbb
sub
dec
xchg
xchg
inc
push
dec
inc
dec
inc
and
xor
inc
inc
sbb
inc
inc
xchg
add
add
xchg
ds
repz
cmp
push
repz
repz
xchg
repz
sahf
stos
mov
stos
inc
aaa
cs
pop
cmp
int3
dec
fdiv
call
cmp
or
cmp
jbe
pop
push
mul
enter
sub
add
adc
ins
jg
add
out
push
push
jmp
cdq
cli
mov
lods
add
xchg
sti
adc
jle
add
pop
sbb
push
mov
and
jle
dec
aaa
fld
and
mov
jp
aaa
dec
sahf
aaa
jnp
scas
inc
je
jmp
fld
test
dec
mov
ss
or
rcr
or
push
leave
nop
mov
push
dec
add
inc
es
jge
aaa
cmp
imul
cmp
add
mov
inc
rcl
sbb
nop
mov
into
shr
push
sbb
aam
(bad)
mov
push
neg
jg
std
push
pop
inc
in
retf
adc
mov
or
cmp
mov
and
cs
ins
mov
je
add
sbb
or
jmp
loopne
push
or
sbb
jnp
add
fs
dec
(bad)
add
and
sbb
dec
jnp
inc
retf
pop
xchg
mov
and
xor
xor
mov
js
(bad)
push
push
pushf
push
lea
inc
mov
mov
sbb
fcmovnu
pusha
xor
jns
mov
mov
cmp
adc
repz
push
dec
das
dec
push
mov
cmp
fcomp
add
mov
scas
and
push
jnp
pop
fstp
add
push
mov
rcr
cmps
jge
xor
sub
sbb
pop
cwde
xchg
push
(bad)
xchg
mov
or
fsub
stc
adc
test
fmulp
mov
or
pop
shr
dec
adc
sti
addr16
push
addr16
jo
cdq
sub
add
or
hlt
jl
scas
ret
pusha
or
test
fld
fmul
push
sub
xor
int3
mov
ret
inc
or
xchg
leave
jo
mov
es
adc
add
shl
(bad)
cmp
nop
addr16
jmp
and
adc
pop
mov
jne
arpl
call
call
pop
sub
sti
gs
loope
jno
repz
std
and
mov
push
cmp
retf
sbb
dec
pushf
pusha
sub
add
xchg
inc
mov
jne
xchg
pop
mov
sbb
ret
mov
outs
nop
push
gs
and
pusha
dec
icebp
and
and
dec
imul
and
(bad)
retf
dec
jne
(bad)
imul
inc
xchg
mov
inc
mov
mov
mov
dec
(bad)
and
fnsetpm(287
das
movs
cmp
add
pop
mov
and
jo
push
movsx
lds
adc
cld
enter
ror
inc
jbe
add
shl
jb
mov
cmp
pop
es
mov
ja
add
and
jbe
stos
mov
int3
pop
adc
xor
mov
add
mov
test
inc
push
rcl
sub
fwait
dec
and
pushw
and
pusha
iret
push
daa
pop
mov
ret
adc
dec
outs
adc
cvtps2pd
inc
pop
(bad)
(bad)
cmp
inc
inc
xlat
das
popa
gs
push
(bad)
lock
or
sahf
js
mov
leave
outs
inc
hlt
mov
dec
sahf
fidiv
mov
mov
(bad)
mov
leave
dec
adc
add
(bad)
fisttp
mov
push
adc
outs
mov
xor
or
push
fcmovbe
icebp
dec
test
repz
xor
loope
shr
and
rcl
xchg
cmp
fisubr
mov
mov
or
or
mov
xchg
mov
push
clc
ins
xor
imul
ins
adc
sub
mov
mov
push
push
es
or
test
enter
out
mov
ins
push
(bad)
and
bts
idiv
cmp
retf
ror
call
ret
mov
xchg
je
inc
ds
sahf
inc
lock
pushf
fdiv
leave
jmp
adc
or
dec
pushf
add
loope
fwait
outs
bound
outs
xchg
or
daa
test
lods
sbb
mov
sbb
push
or
cmp
mov
jnp
ja
jle
sbb
adc
sbb
movs
cmp
cmp
adc
ror
test
push
add
inc
mov
push
sahf
and
arpl
add
mov
dec
cmp
shl
movs
inc
xor
jmp
enter
retf
movs
stos
lock
xor
dec
inc
rol
push
jb
or
adc
mov
pusha
aas
cmp
and
dec
cmps
push
iret
repz
mov
ret
int
mov
jmp
inc
mov
cmps
and
and
(bad)
sub
mov
pop
call
dec
adc
push
add
sbb
inc
and
(bad)
leave
pop
or
dec
inc
adc
or
or
(bad)
push
test
sbb
mov
xor
scas
or
fwait
mov
in
xchg
sbb
scas
mov
shl
pop
mov
cmp
dec
enter
stc
sub
stos
xchg
xlat
stos
nop
out
add
dec
cwde
nop
xlat
inc
xor
jl
repz
or
mov
mov
call
call
ror
cs
aas
or
popa
cwde
jl
jno
dec
ja
fstp
push
jbe
imul
and
adc
cmp
bound
xor
and
inc
arpl
aaa
in
sub
or
(bad)
xchg
sbb
mov
cwde
retf
mov
or
pop
outs
sbb
lods
call
cmp
mov
shl
jp
and
sub
sahf
shl
fild
ins
sbb
rcr
mov
cli
pop
sbb
add
inc
sbb
arpl
retf
iret
pop
fcomp
inc
mov
adc
push
fisubr
dec
fstp
fwait
sub
add
ins
sbb
enter
sar
mov
cmp
ficom
fsubr
sub
jne
xchg
sbb
inc
cmp
sbb
jmp
jbe
inc
push
adc
fs
mov
out
cmp
add
fwait
add
pop
jae
int3
inc
adc
jge
mov
pop
add
inc
pop
sbb
xor
js
sti
mov
rcr
retf
mov
add
mov
push
adc
(bad)
sub
xchg
adc
and
xor
cmp
sub
imul
sbb
fst
push
inc
lea
(bad)
pop
call
fmul
and
pop
repnz
cmp
test
inc
push
jmp
loop
dec
mov
cmp
mov
sub
xor
mov
xchg
sbb
or
outs
dec
ins
lods
or
daa
pop
push
cmp
shl
in
bound
cmp
pop
jl
inc
js
test
add
adc
sbb
xchg
and
add
or
pop
adc
and
shl
sbb
cmps
and
(bad)
dec
sbb
mov
xlat
sbb
inc
sar
pop
cmp
int3
or
mov
cdq
das
xor
in
ret
popf
xor
test
jp
mov
push
lock
rol
lods
sbb
ja
inc
test
mov
add
fwait
sub
add
push
dec
push
cmp
add
push
outs
dec
sbb
lahf
outs
jmp
ror
jnp
data16
dec
ins
mov
hlt
or
pop
pop
es
sub
jg
int
mov
pop
push
test
add
sub
or
cmps
sahf
pop
arpl
adc
scas
stos
fistp
dec
cmp
jae
adc
fsub
fdivr
inc
fs
sar
out
jmp
das
cmp
jbe
mov
mov
(bad)
mov
dec
pop
xor
pop
outs
pop
xchg
rcr
sub
or
ret
lahf
movs
jne
or
int3
adc
imul
inc
dec
or
into
(bad)
ret
adc
adc
dec
out
xor
imul
or
in
sti
loopne
stos
and
mov
and
sub
and
sbb
pop
or
xor
or
or
sbb
xor
frstor
cmp
or
pop
adc
dec
mov
fnstsw
push
mov
add
inc
popa
add
(bad)
mov
test
fild
fstp
mov
mov
scas
cmps
mov
mov
or
fld
add
xchg
mov
(bad)
fld
dec
sbb
push
pop
js
dec
sub
lock
or
dec
mov
mov
xor
jmp
cs
dec
loopne
cmp
push
and
pop
dec
push
fwait
push
inc
mov
mov
enter
cmp
dec
retf
pop
test
leave
shl
adc
sbb
mov
pop
and
je
or
sub
aas
pop
or
dec
cmovne
xor
lods
inc
cmp
or
mov
add
cwde
inc
ins
or
push
ret
or
adc
dec
movs
dec
pop
or
push
daa
or
adc
dec
adc
cmps
and
leave
lds
jmp
mov
cmp
pusha
adc
aad
int
xor
mov
dec
xor
hlt
push
pusha
add
mov
cdq
pop
xchg
movs
or
cdq
dec
push
or
sbb
jne
movs
sti
push
jmp
push
je
xor
mov
xlat
(bad)
adc
jecxz
inc
cli
pusha
dec
or
and
ins
(bad)
sub
shl
movs
(bad)
mov
inc
jmp
pop
adc
push
nop/reserved
(bad)
pop
sub
jecxz
push
fsubr
retf
je
adc
sahf
adc
adc
sub
ficom
sbb
or
push
xchg
add
and
not
aaa
fstp
or
ins
or
mov
pop
daa
xor
out
call
sbb
pop
adc
mov
dec
cmp
jecxz
xor
inc
arpl
dec
lea
dec
cdq
inc
xor
mov
and
mov
fmul
sbb
sub
(bad)
push
push
xchg
fst
cmp
les
sbb
cmp
popa
nop
cdq
ret
ja
mov
dec
add
add
aaa
shl
push
loopne
push
das
mov
ins
jecxz
lds
add
scas
add
test
push
cmp
sub
mov
movs
add
fwait
pop
pop
jmp
push
push
stc
mov
pop
test
mov
push
and
test
inc
push
jmp
shl
shl
xchg
dec
xor
pop
add
fs
jno
adc
and
mov
ins
arpl
adc
sub
mov
and
int
and
pop
sbb
mov
mov
push
jp
mov
jae
clc
inc
stos
add
repz
inc
sbb
pop
pop
(bad)
(bad)
aaa
mov
sbb
ins
push
xchg
aad
fnsave
outs
xor
or
inc
adc
inc
push
outs
add
fidiv
nop
adc
or
sar
mov
cmp
add
sub
and
call
repnz
cmp
out
inc
fistp
xchg
inc
mov
in
mov
cmp
mov
out
pop
mov
dec
loop
add
or
sahf
popa
mov
imul
push
jl
fadd
add
nop
pop
mov
adc
mov
adc
inc
push
xchg
or
fcmovnb
cmp
xchg
pop
test
add
lock
push
into
and
call
aas
mov
pop
push
jge
adc
xor
out
add
retf
dec
add
ins
dec
fwait
push
test
cld
lahf
popa
repnz
movs
icebp
ret
jecxz
and
jae
or
add
(bad)
cld
and
add
xchg
adc
inc
and
aam
xchg
push
add
adc
xor
push
fsub
xchg
or
xchg
mov
add
shl
add
lahf
fsubr
mov
pop
cmp
mov
loopne
loope
ja
add
adc
repnz
push
jnp
(bad)
adc
and
mov
adc
mov
mov
push
add
cs
and
and
add
sub
xchg
adc
ret
ret
mov
adc
mov
gs
xchg
add
push
ins
sub
cmc
adc
mov
sbb
mov
mov
icebp
fwait
movs
sub
sbb
jne
mov
pop
sti
clc
add
aas
sub
push
add
popa
mov
inc
sahf
retf
aad
add
inc
add
mov
and
lsl
sbb
(bad)
retf
clc
stos
fcom
stos
pushf
xchg
or
inc
imul
add
jns
ret
pop
cmovb
sbb
outs
xor
xor
xor
xchg
mov
pop
add
rcl
loop
mov
lea
nop
js
and
pop
(bad)
mov
inc
int3
inc
sbb
test
ins
addr16
jecxz
add
mov
push
mov
std
leave
repnz
imul
add
retf
mov
cdq
xchg
sub
sub
sbb
cmp
or
rcr
and
and
or
and
fcom
fadd
add
xchg
add
jae
add
int
push
or
(bad)
xlat
mov
nop
je
inc
inc
mov
in
xor
mov
inc
add
jle
je
xchg
call
pusha
or
adc
mov
into
scas
mov
jne
gs
aad
or
sbb
add
sti
call
inc
in
loopne
xor
rol
cs
mov
push
sbb
imul
es
add
jmp
test
push
sbb
mov
jl
push
dec
iret
xor
lds
adc
pushf
add
stos
mov
xor
xor
dec
cmp
sub
iret
dec
push
add
lds
test
xchg
inc
cmp
cmc
test
mov
bound
jns
aad
rcr
cld
lds
inc
es
imul
mov
sbb
sbb
in
jnp
fidiv
pop
mov
mov
sar
retf
lds
pop
cmps
dec
mov
xor
mov
inc
(bad)
adc
shl
enter
dec
xor
add
and
and
out
add
inc
dec
lock
in
daa
xor
lock
adc
xor
ret
push
dec
push
dec
je
pop
or
xor
loop
push
cmp
add
dec
dec
mov
sub
enter
push
dec
jnp
add
add
xchg
jbe
xchg
fsub
loop
sub
jle
cli
enter
inc
sbb
in
mov
push
adc
test
and
es
mov
inc
lock
push
call
pop
jo
jecxz
inc
lods
jne
push
(bad)
push
icebp
movs
add
je
paddusw
xlat
dec
and
idiv
mov
loope
gs
adc
loopne
jns
or
lods
mov
clc
and
and
mov
les
and
test
adc
push
adc
pop
loop
pop
jne
push
xor
inc
shl
pop
xor
ja
xor
sbb
adc
shl
jle
pop
gs
dec
pop
ins
and
xchg
or
mov
and
add
outs
pop
adc
jbe
das
inc
inc
inc
mov
or
push
shl
adc
pushf
iret
sub
adc
adc
dec
inc
movs
xor
test
sbb
push
jle
mov
push
out
push
adc
lods
adc
sbb
push
popa
je
adc
jg
pop
fdivr
imul
setge
mov
sysret
rol
xchg
enter
and
jp
add
jo
imul
pop
push
sahf
popa
jbe
mov
sub
test
call
add
cmp
adc
inc
leave
aam
push
mov
sub
xor
arpl
sahf
mov
push
cmp
or
rcl
fs
or
mov
out
pop
or
mov
aaa
xchg
call
sub
fadd
cmc
or
cwde
je
in
push
push
mov
cmp
mul
push
add
lea
hlt
add
adc
mov
(bad)
jge
shr
mov
xchg
or
sbb
dec
nop
mov
or
outs
outs
dec
dec
in
rcl
ds
mov
sub
inc
inc
push
icebp
test
fld
and
cmp
retf
sbb
outs
enter
imul
in
inc
inc
dec
stos
shl
je
in
ins
nop
mov
jb
xchg
or
jmp
add
movs
push
xor
nop
cwde
xor
push
fiadd
and
jmp
dec
add
adc
jne
adc
inc
add
inc
sbb
mov
sbb
addr16
clc
pop
jle
push
push
sbb
shl
jp
pushf
imul
sbb
inc
jmp
fild
pushf
push
test
or
push
adc
push
add
push
and
mov
repnz
iret
jle
rcr
and
aas
jp
pop
inc
jbe
mov
nop
mov
and
mov
and
aaa
add
add
mov
fbstp
push
adc
and
and
mov
cmp
pop
sbb
or
sbb
(bad)
call
push
cld
shl
sbb
rol
dec
mov
push
mov
test
push
stc
add
push
and
pop
test
repnz
sub
arpl
ins
ja
pusha
jl
sar
cs
stc
mov
pop
rcl
mov
rol
push
adc
stos
adc
dec
sahf
mov
adc
iret
cmp
inc
and
adc
pop
mov
pop
push
out
sub
adc
retf
mov
add
pop
cmps
loope
push
jae
lds
ret
push
mov
and
jl
cld
push
dec
or
shl
imul
sbb
and
push
(bad)
repz
xchg
adc
mov
sbb
sbb
loope
push
(bad)
jmp
movs
push
jecxz
retf
mov
rcl
cmps
adc
xchg
adc
xchg
and
or
or
mov
cmc
mov
jge
jecxz
add
lock
in
or
hlt
hlt
mov
out
sete
xchg
and
inc
or
push
jne
nop
add
push
add
pop
jmp
xor
pop
rol
cmp
jns
dec
sub
dec
mov
cwde
lods
loop
imul
fistp
push
clc
call
outs
fs
pop
dec
push
pop
out
in
jle
and
movd
inc
sbb
cmp
or
das
es
inc
pop
push
and
jg
jg
call
sbb
push
outs
push
or
pop
loope
cmp
or
jne
push
cmp
sar
popf
call
stc
in
js
sbb
adc
pop
mov
inc
push
or
(bad)
fisttp
add
mov
cmps
xchg
adc
int3
cmp
fwait
xchg
(bad)
lods
jns
ret
sub
stc
in
mov
fst
xchg
add
xchg
inc
enter
push
add
mov
mov
dec
fwait
inc
inc
xor
loopne
fwait
sbb
inc
cmp
xchg
push
iret
dec
fcom
hlt
cwde
push
leave
xlat
push
push
jne
hlt
(bad)
fwait
jmp
and
popf
movs
and
nop
inc
fcom
adc
out
and
(bad)
adc
sub
mov
push
mov
add
dec
repnz
int3
rcl
add
mov
test
out
xor
sbb
push
test
jg
mov
pop
test
je
(bad)
inc
ins
shr
sbb
loop
or
fbld
or
mov
pop
add
rol
cmp
and
mov
sub
ret
dec
mov
jl
rcr
es
push
push
add
pop
and
pop
xchg
loopne
mov
ins
add
sbb
or
ror
fmul
adc
daa
mov
push
sub
push
mov
dec
cmp
enter
adc
add
or
outs
push
add
scas
sub
push
mov
or
add
dec
scas
aas
clc
in
fistp
fs
or
lock
aas
hlt
and
dec
push
(bad)
fcomi
call
pop
sbb
and
pop
daa
add
dec
cmps
add
pop
sbb
push
pushf
mul
js
mov
jmp
sub
test
cmps
mov
or
in
pop
and
push
mov
and
mov
and
xchg
ds
hlt
or
cmp
jmp
push
xchg
xor
inc
mov
jbe
mov
test
cs
sti
aaa
(bad)
lods
in
inc
(bad)
or
dec
das
mov
xchg
cld
push
pop
das
mov
and
xor
sahf
ret
inc
sar
fisttp
mov
add
jge
adc
inc
jl
ret
cmp
fisttp
ret
aad
test
mov
and
pop
pop
mov
cmps
jp
inc
sub
sbb
pop
mov
ins
sbb
and
inc
jmp
cmp
and
inc
sbb
jns
jl
push
mov
fcomp
push
xor
out
push
shl
popa
(bad)
sti
in
sbb
leave
sbb
int3
test
adc
cdq
in
or
add
sbb
test
pop
sbb
mov
ja
push
mov
dec
fs
and
push
pop
or
and
popf
xchg
rcr
push
sub
stc
div
in
cmp
test
loope
pop
es
das
inc
and
nop
es
xchg
sub
repnz
pop
cmp
pop
dec
cmp
enter
add
push
xor
push
jno
(bad)
mov
mov
pop
ret
cmp
leave
and
and
aaa
cmp
pop
xchg
cmp
out
out
inc
inc
loope
popa
adc
adc
add
enter
loope
push
dec
dec
inc
fsub
sbb
and
adc
add
pop
push
xchg
add
xlat
sub
adc
sbb
xor
xor
sbb
inc
xchg
cmp
sub
rol
and
pop
(bad)
push
cmp
xchg
or
dec
adc
pusha
sbb
sbb
dec
cmp
cmp
ret
enter
xchg
and
mov
test
inc
sbb
mov
push
in
sbb
dec
test
mov
push
in
push
nop
in
cmps
pop
in
in
pusha
mov
sbb
adc
pusha
pop
jns
inc
add
xor
add
je
xchg
add
push
mov
add
inc
cs
jb
pushf
call
or
fld
mov
leave
lea
imul
jl
add
add
enter
fcomp
lods
and
mov
add
adc
mov
dec
ror
jno
fmul
jb
dec
and
pop
or
or
std
or
ds
adc
enter
pop
and
pop
add
and
xor
mov
inc
adc
rcl
dec
mov
inc
test
sbb
add
mov
enter
inc
out
adc
repnz
inc
icebp
mov
sbb
jae
fimul
aaa
sbb
and
fisubr
mov
push
adc
mov
sub
cmps
add
shr
pop
ror
adc
rol
es
push
outs
cmp
pop
cdq
cmp
fs
mov
int3
int3
in
and
push
add
inc
dec
fmul
or
sbb
sub
sub
inc
cmp
or
cmp
popa
cdq
movs
dec
das
and
push
enter
mov
jo
xchg
int3
mov
mov
mov
add
ficom
xchg
repz
jmp
mov
scas
daa
pop
pminub
dec
in
pop
sbb
das
mov
arpl
pop
stc
add
in
xchg
mov
les
mov
xor
cmp
aas
xchg
mov
push
fs
jg
xor
xchg
dec
repz
jno
inc
sbb
ds
add
movs
add
xchg
sbb
xchg
mov
bound
cld
push
idiv
fwait
xchg
mov
inc
add
nop
adc
add
cs
push
stc
out
sub
or
in
add
arpl
mov
mov
sub
xchg
ins
sar
dec
mov
pop
data16
das
daa
push
loopne
push
outs
push
push
mov
cs
mov
push
add
sbb
push
push
mov
sbb
mov
repnz
or
jmp
sbb
push
cmp
ret
mov
stos
cmp
xor
dec
pop
fimul
mov
jns
pop
pop
(bad)
sub
xor
je
cwde
sbb
test
test
dec
cs
in
in
cdq
add
in
jecxz
sbb
loopne
fsubr
xlat
mov
cmps
pop
daa
sub
xor
and
repnz
aaa
outs
lock
bound
out
push
movs
xchg
out
inc
push
pop
fs
xor
ret
mov
xchg
dec
xchg
call
jb
(bad)
lock
mov
xor
push
dec
cmp
xor
cwde
popa
nop
sub
cmp
adc
sub
mov
inc
add
adc
test
sbb
add
and
xor
add
add
push
daa
aas
push
push
sbb
add
mov
out
dec
es
pop
adc
jbe
sbb
rcl
inc
pop
sub
push
or
dec
fisttp
mov
or
fadd
call
push
mov
or
mov
cmova
add
mov
inc
mov
popa
sub
push
pop
sbb
mov
mov
mov
xor
daa
in
call
pop
cmp
sub
add
or
dec
out
or
lahf
pusha
push
mov
adc
mov
push
lea
add
ds
sti
icebp
xor
es
(bad)
and
sti
ret
sbb
into
or
or
or
fnstsw
fist
inc
inc
leave
js
mov
push
pushf
push
and
pop
sahf
repz
xchg
loop
mov
shr
push
sbb
sar
inc
clc
daa
ja
adc
(bad)
hlt
cmp
push
mov
lock
outs
popa
or
inc
cwde
cmp
adc
cmp
cmp
popa
fs
pop
loope
loope
dec
inc
stos
ins
mov
and
push
cld
ins
mov
fild
fmul
mov
inc
rcl
movs
repz
and
(bad)
jg
hlt
mov
or
test
mov
add
loopne
push
mov
or
adc
xchg
sbb
pusha
ja
ds
cwde
sbb
and
add
enter
(bad)
in
inc
push
stc
es
push
jbe
push
les
jns
dec
mov
mov
in
adc
test
push
sbb
push
and
sahf
or
in
hlt
or
adc
xchg
popa
dec
neg
dec
pop
sbb
jo
pop
and
neg
dec
pop
ss
mov
add
(bad)
fdiv
je
stc
push
add
inc
cmp
lea
adc
setp
fdivr
test
stc
enter
sub
(bad)
xor
ret
fs
cmps
int3
call
std
stos
add
enter
std
in
lods
std
(bad)
xor
ins
loopne
mov
int
loopne
std
(bad)
std
dec
add
stc
xchg
xchg
idiv
int
cmp
sbb
loope
push
cmp
mov
xchg
test
adc
cmc
repz
daa
sub
icebp
out
sbb
push
mov
loopne
jg
push
arpl
jle
pop
sbb
inc
daa
adc
dec
pop
add
sub
mov
ss
mul
sub
jl
xchg
and
popa
inc
stc
mov
push
pop
call
jne
jo
sbb
or
fwait
shl
lods
cwde
add
jo
jne
outs
data16
or
push
pop
lahf
push
cmps
dec
adc
sbb
or
xor
adc
mov
mov
mov
mov
xchg
lock
inc
shr
sub
(bad)
jo
adc
xor
bound
jg
popa
sbb
pop
add
fiadd
sbb
stos
xchg
inc
mov
jmp
dec
mov
push
adc
es
mov
jmp
push
fdivr
cmp
mov
fimul
ret
jno
or
jmp
inc
add
and
ins
jbe
or
push
inc
dec
add
push
add
adc
ins
add
mov
jns
enter
and
fnsave
or
sub
pusha
or
jg
adc
daa
inc
or
punpcklwd
jne
bound
pop
(bad)
mov
push
scas
mov
adc
dec
dec
xor
aam
inc
pop
jnp
mov
add
daa
pop
cwde
test
push
xlat
cmp
int
int
jb
dec
sbb
dec
int
add
fwait
xchg
int
sub
stos
scas
add
add
cmp
mov
inc
sti
dec
add
in
jne
mov
enter
ins
leave
in
pusha
jge
sub
js
mov
sbb
mov
retf
inc
push
rcr
xor
cmp
cmp
jno
dec
push
add
sar
shl
enter
jmp
push
dec
mov
dec
add
inc
stc
call
jo
xor
xor
test
call
call
and
int
int
jb
sub
cmp
mov
les
jns
mov
jns
imul
ins
pop
int
inc
adc
push
jmp
nop
fsubr
push
cmove
fnsave
int
sbb
les
cmp
in
sbb
pop
outs
sbb
cmp
mov
inc
mov
(bad)
and
pop
inc
add
inc
inc
dec
adc
nop
push
add
or
bound
pop
bound
shr
rcr
cdq
dec
mov
dec
xchg
inc
scas
add
loopne
jp
mov
push
int
pop
pop
inc
xchg
dec
fdiv
int
sub
push
fimul
cmc
aam
or
adc
mov
outs
int3
ficomp
push
daa
jge
out
cmp
mov
dec
jmp
ins
lods
and
ret
cmp
ss
in
fisub
ins
sbb
inc
adc
retf
sub
xor
xor
scas
ror
xchg
pop
mov
cmp
push
jo
xchg
pop
push
cmp
xor
mov
push
jmp
sbb
jmp
hlt
jnp
shl
push
lock
inc
rol
les
ret
push
xchg
add
test
or
lock
adc
clc
adc
scas
pop
xor
or
adc
push
add
in
inc
pop
or
or
and
sub
or
xor
sbb
outs
push
jns
aad
popf
pop
pop
test
push
pop
(bad)
xlat
push
or
push
xchg
push
add
in
xor
cli
and
mov
inc
push
dec
xor
es
rol
pop
pop
loopne
inc
fucomi
push
and
test
pop
and
add
and
lods
or
or
adc
dec
mov
push
popf
or
inc
pop
test
push
cld
jbe
or
ror
fmul
retf
retf
mov
jbe
jbe
push
dec
jle
add
adc
jbe
pop
inc
adc
cmp
push
jb
sbb
inc
jb
in
mov
cmps
nop
adc
and
mov
(bad)
iret
push
(bad)
add
ds
adc
mov
ficom
ins
push
hlt
push
add
jns
mov
jns
xchg
unpcklps
push
xor
push
das
inc
mov
xor
setb
push
push
adc
fs
push
fs
or
adc
adc
xchg
das
das
push
int
adc
mov
push
call
xchg
daa
add
push
jo
mul
inc
and
repnz
adc
adc
call
push
pop
inc
leave
push
mov
push
aam
push
add
xchg
cmp
in
adc
sbb
sub
xor
xchg
int
pop
leave
or
int
int
adc
inc
leave
adc
das
and
pop
mov
sub
or
dec
dec
repnz
sbb
inc
into
sbb
retf
rcr
int
or
daa
sbb
(bad)
div
pushf
cli
dec
and
cli
dec
cmps
mov
sar
pop
jmp
icebp
imul
in
nop
push
xchg
sbb
xor
dec
jp
mov
scas
sbb
adc
sub
dec
test
mul
dec
repnz
and
int
adc
push
pop
push
push
sbb
inc
add
jns
or
cwde
and
jns
pop
sub
sbb
add
nop
pushf
sub
sub
repnz
leave
xchg
or
int
and
add
add
sbb
mov
sbb
sbb
lods
xchg
or
sbb
pop
rol
add
enter
int
in
stc
lock
sbb
jns
mov
nop
xchg
adc
push
in
inc
push
dec
sbb
sbb
pop
in
cmp
push
(bad)
sbb
add
fstp
push
sub
enter
sbb
sub
inc
test
inc
dec
shl
pop
movs
and
sub
pop
pop
and
pop
xor
and
movs
sub
sub
enter
sub
sub
sub
pop
or
push
sub
inc
inc
dec
xor
jns
dec
enter
and
int
nop
xchg
cmp
int
int
int
and
push
and
mov
xlat
shl
add
jns
sbb
inc
jmp
ja
inc
or
pop
inc
push
dec
dec
movs
bound
mov
repnz
sub
nop
xchg
pmulhuw
int
push
push
and
xchg
push
mov
or
sti
les
pop
jns
sub
mov
sbb
xor
ret
leave
cmp
cwde
sbb
ss
adc
inc
jbe
xor
add
dec
pusha
sub
inc
inc
cmps
repz
and
mov
int
sub
xchg
cmp
adc
test
ss
int
aam
in
inc
and
and
or
das
in
int
and
inc
push
movs
nop
mov
and
adc
inc
xchg
jmp
cmp
ud2
mov
mov
inc
push
enter
int
push
pop
cmp
cmp
inc
jne
cmp
aas
cmp
inc
adc
lds
add
inc
and
data16
mov
dec
test
push
repnz
int
ja
ins
dec
dec
dec
int
xlat
imul
dec
xlat
dec
scas
inc
outs
or
scas
pop
push
or
stos
cmp
sbb
stc
dec
sbb
inc
pop
nop
inc
pop
leave
xor
inc
shl
iret
jne
mov
adc
sub
pop
push
call
ins
adc
iret
mov
aas
(bad)
mov
ror
inc
lock
enter
movups
sub
inc
cmps
(bad)
lea
or
(bad)
fsubr
scas
sub
add
and
xor
mov
mov
(bad)
movs
bound
adc
lock
lock
add
test
inc
dec
mov
xchg
(bad)
mov
mov
push
mov
sub
or
daa
ret
sbb
sbb
mov
leave
inc
ins
sub
(bad)
or
mov
sbb
add
popf
das
ret
mov
and
cs
sbb
inc
test
retf
out
sbb
paddsw
bound
or
lods
ret
adc
pusha
pusha
pop
test
sahf
cmp
pusha
pusha
sti
dec
mov
xor
sbb
inc
mov
and
or
add
fadd
mov
adc
sbb
dec
push
add
inc
xchg
sbb
sub
bound
xchg
stos
test
movs
cmp
and
mov
or
nop
xchg
adc
sbb
and
or
sbb
ins
in
sbb
nop
sbb
sbb
cwde
xchg
frstor
or
jle
and
dec
inc
add
push
inc
pop
and
xchg
sub
push
and
dec
int
and
cmp
dec
int
or
dec
int
int
int
pushf
in
dec
int
int
push
repnz
dec
int
sub
add
sub
jl
pop
inc
pop
dec
imul
ins
xchg
inc
xchg
mov
nop
retf
and
xchg
das
fs
xchg
test
push
mov
cs
mov
inc
push
mov
adc
ror
das
aad
xchg
xor
push
add
cmp
mov
xchg
lock
cld
inc
add
jns
cmp
push
mov
xor
xor
test
xor
push
inc
push
mov
inc
or
out
xchg
mov
push
push
xchg
cmp
fs
stos
xchg
adc
jp
push
ds
xchg
mov
neg
pop
inc
or
jnp
dec
push
xor
and
test
adc
xlat
inc
nop
mov
push
in
dec
call
rol
inc
ja
das
fs
jne
sub
jno
or
add
inc
cmps
dec
sahf
rol
jae
xor
sbb
add
cmp
in
sub
pop
push
xor
add
xchg
das
push
test
addr16
inc
cmp
jo
inc
sub
push
xor
mov
mov
pop
push
push
add
je
test
sbb
adc
xchg
fsub
stc
nop
push
in
push
mov
(bad)
enter
xor
movs
test
nop
and
call
rcl
push
stos
rcl
shr
stos
sbb
inc
test
add
es
inc
leave
xchg
out
mov
xor
jl
js
jb
push
movs
cwde
and
enter
xchg
or
adc
(bad)
les
push
leave
xchg
xor
mov
leave
and
leave
mov
and
cmps
or
test
test
sbb
leave
mov
movs
cmp
outs
sub
in
leave
inc
xor
cwde
cwde
and
cwde
xor
enter
cwde
cwde
and
sbb
movs
and
movs
movs
ss
or
mov
lods
dec
nop
pop
adc
psubw
mov
lods
fs
xchg
lods
pop
mov
fcom
dec
nop
sbb
xchg
leave
lods
nop
pushf
sbb
movs
movs
movs
in
dec
xor
cs
dec
push
xchg
test
and
enter
or
xchg
nop
and
pusha
mov
mov
add
repnz
out
nop
pushf
dec
push
xor
out
ds
adc
pop
adc
adc
pop
dec
add
hlt
jns
pop
cmp
aas
in
aas
in
aas
push
add
and
mov
add
push
jo
inc
push
and
sub
jae
adc
cs
ror
and
rol
pop
leave
adc
pop
add
inc
xchg
inc
sub
and
jge
xchg
aas
nop
int
stc
adc
push
mov
inc
sub
repnz
adc
inc
and
xchg
push
in
inc
leave
inc
adc
mov
push
add
test
add
jb
adc
and
xor
loope
repnz
adc
cmp
shr
or
xchg
inc
dec
inc
push
add
inc
dec
pop
inc
repnz
inc
or
add
leave
hlt
inc
adc
push
test
inc
adc
push
cmp
inc
mov
mov
dec
dec
add
or
add
nop
dec
lods
dec
dec
pop
sbb
in
shl
ror
enter
enter
cmp
dec
enter
pop
and
dec
dec
dec
inc
leave
xchg
dec
jge
mov
jecxz
test
inc
loope
mov
xchg
push
or
or
pusha
mov
xchg
or
mov
sub
fild
or
dec
pop
js
cs
js
pop
enter
js
dec
sbb
fld
sub
pop
dec
lods
jge
loopne
dec
retf
pop
mov
dec
js
jmp
in
dec
mov
dec
add
or
xchg
dec
jmp
mov
xor
push
sbb
icebp
mov
and
(bad)
adc
mov
inc
and
dec
les
mov
push
nop
mov
push
mov
push
xor
cld
jno
daa
push
jecxz
adc
cli
hlt
ret
sti
sysexit
or
mov
lods
adc
xor
jb
imul
nop
sub
adc
adc
sbb
cmp
add
sub
add
fstp
add
push
in
pop
int
lods
test
mov
call
push
add
repnz
xchg
mov
pop
repnz
leave
test
adc
sbb
and
nop
sbb
xor
pop
mov
mov
sub
sbb
mov
and
dec
add
and
add
adc
push
pop
leave
inc
pop
ror
or
cmp
inc
enter
nop
push
add
call
cmp
push
adc
sbb
mov
dec
test
(bad)
shr
pop
retf
hlt
es
imul
dec
push
add
adc
test
movs
inc
mov
enter
lods
das
lock
and
in
mov
dec
leave
leave
and
lock
xor
lock
xor
push
mov
mov
cmp
inc
push
(bad)
jecxz
iret
cmp
pop
push
dec
cmps
in
push
aam
adc
(bad)
out
pop
call
inc
push
call
and
retf
xchg
in
in
pop
jb
jo
in
add
inc
cs
jmp
outs
cmp
popf
sbb
add
or
push
and
inc
xchg
mov
or
(bad)
js
xor
fcmovnb
(bad)
js
sbb
inc
je
xlat
or
sub
xlat
aam
add
scas
and
leave
add
les
popa
shl
or
fs
ficom
and
inc
ins
loopne
and
sbb
adc
inc
mov
nop
or
and
leave
xor
push
lea
push
iret
sub
sub
cmp
fidivr
cdq
push
inc
xor
cmps
sub
test
cmp
in
test
test
pop
test
enter
test
test
aam
inc
scas
adc
test
test
leave
and
test
or
mov
and
shr
shl
dec
xchg
cld
call
int
popf
shl
and
add
xchg
push
jb
add
and
nop
push
repnz
nop
or
es
in
mov
add
inc
mov
cmp
dec
xor
push
cmp
xor
mov
movs
cdq
fs
retf
pushf
pushf
pushf
pushf
cdq
in
es
pushf
pushf
inc
inc
inc
push
movs
movs
pushf
pushf
inc
push
in
pushf
pushf
mov
jns
mov
loop
cs
mov
and
or
push
enter
mov
add
inc
mov
pop
sbb
loopne
lock
xchg
or
movs
add
movs
cmp
gs
jb
and
mov
enter
mov
and
adc
cmp
inc
repnz
inc
lock
cld
inc
push
and
jl
add
jl
nop
sbb
fs
inc
push
adc
aaa
cmp
inc
push
adc
cmp
pushf
fcom
cmp
movs
sbb
add
movs
movs
nop
pop
xor
jb
frstor
mov
je
sbb
jge
scas
sar
xchg
push
sar
xchg
inc
cs
enter
xlat
or
jbe
shr
fidiv
cmovns
cmp
loopne
jo
jle
or
fld
ins
jo
pushf
jo
out
dec
leave
and
jl
jle
nop
pop
repnz
push
add
and
push
enter
test
xor
push
xchg
mov
repnz
adc
aaa
and
cmp
daa
je
imul
dec
push
in
rep
and
push
and
adc
add
test
jecxz
sub
jnp
icebp
and
enter
ins
sub
nop
pushf
stos
dec
out
je
jb
add
nop
outs
mov
adc
outs
int3
outs
inc
mov
cmp
outs
mov
xchg
jb
and
xchg
sbb
loop
adc
push
enter
xor
add
mov
dec
leave
add
ror
test
test
aad
into
dec
dec
repnz
pop
imul
xchg
pop
repnz
and
adc
enter
and
inc
jo
enter
into
push
jo
outs
mov
imul
test
xlat
sbb
adc
push
sbb
jns
ja
aam
dec
scas
inc
sar
sbb
dec
scas
lock
add
in
sub
enter
sbb
sbb
leave
xchg
sbb
clc
hlt
add
and
in
call
add
sub
inc
aaa
add
repnz
call
or
jp
cdq
jbe
sub
vmwrite
into
adc
rcr
shl
js
fs
xlat
lock
adc
inc
cmp
fs
lock
nop
inc
inc
push
lock
cld
repnz
es
cld
or
push
into
add
leave
and
jne
xchg
cmp
jns
into
add
add
or
jb
into
add
add
scas
nop
push
jb
into
add
cld
push
xchg
xchg
inc
cld
cld
fcom
lea
jb
enter
fmul
mov
inc
and
mov
cmp
cmp
into
cld
add
cld
cld
xchg
mov
ja
enter
jns
jns
and
mov
inc
jb
xchg
add
or
shl
jns
vmwrite
xlat
sar
jp
add
jns
sub
adc
imul
xchg
test
pop
cdq
jge
in
js
dec
movs
pop
sub
inc
xchg
fwait
jnp
jp
xlat
dec
scas
sub
jnp
or
aam
daa
jns
repnz
add
nop
add
and
(bad)
sub
mov
ins
ret
in
pushf
rcl
ins
ret
push
(bad)
xlat
sub
jns
lock
or
xchg
aam
aam
sub
inc
aam
pop
lds
adc
mov
push
and
repnz
jg
jg
add
jns
leave
and
add
pusha
jg
cmp
jb
add
and
into
dec
and
and
into
cld
sbb
pop
sbb
test
cmps
(bad)
sbb
(bad)
xor
xor
dec
cs
add
into
and
nop
pushf
add
sbb
pop
test
adc
xchg
cmp
xor
shl
pop
adc
xchg
sbb
and
and
or
and
in
inc
rcl
in
rcl
jb
pop
mov
cmp
pop
rcl
ins
dec
cmps
rol
and
dec
push
fs
rcl
rol
fs
rcl
or
in
push
in
movs
nop
dec
or
xchg
loopne
jns
sbb
je
or
inc
pop
and
add
fs
add
add
push
or
cmp
loopne
xchg
enter
in
xchg
scas
or
mov
mov
xor
xchg
movs
shl
mov
sbb
fs
js
cmp
inc
add
xchg
mov
add
jg
cmp
xchg
inc
enter
xchg
jno
nop
loopne
xchg
cmp
in
sbb
js
mov
push
enter
mov
add
push
gs
add
pop
push
in
sbb
sbb
and
test
and
(bad)
or
inc
rcl
and
fmul
add
ror
push
add
xor
dec
add
in
sub
xchg
add
pop
je
inc
or
sub
mov
and
loopne
mov
and
adc
cdq
in
adc
inc
mov
fsubr
fcom
fcomp
leave
fdiv
and
nop
xchg
push
push
ja
in
imul
cmp
aam
pop
add
and
fsubr
jg
push
cdq
inc
es
fadd
in
(bad)
leave
and
repnz
xchg
(bad)
xor
pop
(bad)
fcomp
xor
inc
(bad)
xor
aam
dec
rcr
fdivr
(bad)
sub
and
(bad)
xchg
add
add
lahf
xchg
in
sbb
cmp
xchg
dec
jb
call
adc
clc
and
clc
sbb
sbb
xor
in
es
cld
pop
and
add
xchg
dec
xor
hlt
hlt
hlt
hlt
or
hlt
cld
and
and
cld
hlt
hlt
inc
and
jb
hlt
or
add
mov
push
xchg
add
and
leave
inc
push
dec
or
or
or
in
leave
out
fwait
or
ror
daa
jns
pop
or
or
or
enter
and
xor
and
add
cld
push
add
or
or
adc
jo
sbb
adc
ror
pop
jns
dec
ins
fwait
adc
adc
enter
adc
adc
add
into
adc
xchg
cmp
inc
fs
jl
and
jle
sbb
push
leave
aam
aam
pop
cmp
xchg
and
cmp
jno
sbb
lock
inc
push
cmp
cld
inc
or
pop
and
or
inc
enter
xchg
sbb
xchg
cld
cld
xchg
jns
sahf
mov
int3
dec
test
in
sub
stc
pop
movs
adc
enter
xchg
sbb
sbb
imul
hlt
xor
xor
xchg
sahf
adc
mov
nop
xchg
mov
shl
mov
(bad)
mov
fsub
xchg
pushf
inc
sbb
js
jns
das
in
mov
mov
scas
nop
adc
mov
test
xor
mov
repnz
mov
and
push
xor
mov
jb
aaa
jl
jo
pop
xchg
cmp
and
xor
mov
cmp
and
xlat
cmc
imul
or
pop
test
in
xlat
gs
test
mov
jns
inc
repnz
int3
pop
mov
loop
mov
daa
cmp
cld
movs
sub
cmp
in
mov
mov
mov
into
jb
inc
push
into
les
pop
push
cmp
(bad)
inc
pop
aam
jne
fisttp
inc
es
retf
mov
mov
xchg
sbb
mov
and
nop
inc
pop
and
cmps
pusha
daa
in
mov
pushf
mov
xlat
and
ins
arpl
sub
sub
cmp
push
into
dec
into
or
leave
sub
into
cmp
or
add
cmp
cmp
adc
adc
push
and
je
inc
leave
sub
push
into
dec
into
inc
xchg
push
enter
into
inc
into
mov
pop
push
push
fsubp
push
out
add
pop
dec
pmulhuw
sub
cmp
dec
into
shr
cmps
add
dec
into
dec
into
in
pop
rol
ret
dec
inc
ins
fild
je
pop
je
dec
push
fst
or
adc
push
into
push
into
ss
or
fs
pusha
dec
xchg
pop
pop
mov
arpl
into
pusha
pusha
pusha
xchg
fs
pusha
leave
add
fs
cmp
add
into
push
into
dec
push
repnz
xor
daa
daa
jns
cld
lods
xor
xor
xor
add
xchg
into
xor
js
xchg
inc
pop
sti
lods
js
nop
add
push
into
push
into
add
push
into
push
sub
inc
ss
sub
scas
clc
scas
sub
enter
adc
retf
lock
pop
sub
xor
(bad)
inc
mov
mov
add
inc
test
enter
push
es
fdiv
cmps
dec
mov
fiadd
adc
pushf
mov
mov
fbld
jns
leave
scas
mov
into
sub
jb
mov
mov
in
enter
mov
mov
inc
push
nop
movs
xor
pop
cmp
movs
and
xchg
xchg
xor
jo
fbld
(bad)
fild
mov
into
xchg
cmp
into
sub
jb
cmp
sub
sub
add
xchg
push
cmps
dec
xor
mov
adc
vmwrite
add
in
mov
mov
add
add
sbb
cmp
mov
mov
jb
jns
mov
mov
nop
ins
mov
pushf
fidiv
add
mov
sar
mov
and
js
js
add
add
pop
nop
pushf
movs
mov
and
mov
cmp
sub
mov
(bad)
sub
push
pop
jno
push
fwait
sar
into
push
and
into
in
repnz
cmp
bound
ja
inc
arpl
or
sbb
in
repnz
sub
sub
add
inc
sahf
pop
leave
sub
sub
sbb
xchg
pushf
push
sub
leave
inc
test
sbb
into
add
es
leave
push
mov
sbb
xchg
sub
jns
and
push
dec
rol
push
push
sbb
mov
add
pop
and
leave
push
lds
inc
out
pop
mov
call
sub
inc
sub
das
into
mov
adc
leave
cmp
leave
retf
retf
into
stos
and
leave
in
or
into
pop
call
adc
xchg
xor
gs
scas
test
add
cmp
fst
call
in
cmp
sbb
sub
in
mov
enter
into
mov
leave
cmp
cdq
sub
(bad)
xchg
or
mov
push
dec
cs
sbb
or
add
adc
stos
ins
mul
jo
cs
jmp
add
repnz
pop
fs
cmp
adc
into
push
adc
and
push
(bad)
in
cmp
xchg
retf
sbb
push
and
mov
inc
lds
or
vpsrlw
arpl
dec
dec
sub
cmp
retf
add
sub
inc
sub
sub
push
add
and
jmp
cmp
xor
mov
rol
sbb
sbb
or
into
test
into
push
push
fdiv
inc
test
sbb
stc
xor
xor
cmp
pop
in
into
xor
hlt
retf
leave
or
xor
xor
nop
mov
xor
fsub
pmulhuw
xor
xor
test
xor
fiadd
gs
adc
push
inc
stc
xor
dec
pop
enter
push
leave
push
push
jg
sub
pusha
xor
add
pop
adc
(bad)
jmp
pop
dec
push
add
das
dec
inc
or
cmp
das
mov
and
inc
nop
add
push
sbb
pop
sub
push
into
dec
jns
retf
into
inc
into
inc
into
cmp
jb
inc
into
clc
int
mov
into
and
jns
push
into
push
into
push
into
add
push
push
into
push
into
push
ror
push
nop
into
push
xlat
or
dec
push
into
push
into
push
or
in
into
pop
inc
pushf
or
dec
push
into
xchg
dec
jo
dec
stc
dec
dec
mov
pop
cmp
shl
iret
(bad)
shl
sub
call
dec
sbb
out
and
pop
or
je
add
fwait
push
add
nop
add
xchg
into
adc
push
repnz
rcl
into
(bad)
inc
ror
push
push
xchg
adc
xchg
jle
pop
xchg
or
inc
adc
pop
fist
das
inc
(bad)
push
lock
cwde
adc
or
inc
shl
pop
jno
enter
pop
lods
add
inc
shl
jae
xchg
scas
js
int3
mov
cmp
(bad)
fdiv
or
adc
nop
sbb
into
sub
lods
jo
daa
sub
mov
into
inc
cmp
adc
jg
inc
push
adc
into
sbb
push
and
dec
into
dec
jb
sahf
push
into
push
into
cmp
mov
adc
xchg
push
push
into
push
into
cmp
mov
push
into
push
into
push
into
in
jb
push
into
in
push
push
jb
ja
and
cmp
popf
ins
add
les
cmp
shl
xchg
inc
je
js
pop
enter
mov
push
enter
xlat
or
push
xlat
(bad)
cmp
inc
xchg
(bad)
push
adc
int
fistp
push
xchg
or
pop
jb
push
dec
jmp
in
lods
cmp
out
xlat
and
enter
inc
ins
jne
xor
xor
inc
dec
nop
mov
pop
or
aam
push
add
xor
leave
enter
fadd
push
add
dec
inc
fdivr
pop
adc
outs
popa
aas
(bad)
fnstenv
in
dec
mov
ret
sbb
and
fimul
add
push
fidivr
in
sbb
aas
inc
movs
xor
inc
rol
sbb
enter
fcmovb
push
ficomp
leave
adc
outs
mov
ins
sbb
jp
and
xchg
mov
pop
(bad)
repnz
mov
fsubp
mov
and
jo
jo
mov
mov
and
inc
inc
xchg
nop
loopne
movs
cmp
enter
push
push
cdq
in
mov
add
dec
sub
call
cdq
jns
ins
mov
pop
adc
jb
cmp
pop
enter
cdq
daa
xor
clc
inc
mov
sub
add
jg
mov
sub
test
xor
cmp
pop
cdq
fldenv
mov
mov
push
inc
nop
clc
cmp
cmp
inc
inc
xchg
pop
repnz
add
adc
fst
into
les
sub
mov
call
mov
or
mov
lahf
and
sbb
adc
imul
leave
push
stc
push
faddp
test
push
xchg
add
fimul
imul
sub
pushf
int3
inc
cmp
ss
sub
aam
inc
lds
daa
fcmovnbe
add
in
mov
mov
xor
mov
and
ja
ds
xchg
aam
and
pop
jp
fild
and
les
out
enter
test
ret
ret
in
cmps
xchg
add
scas
mov
mov
adc
sub
xchg
inc
cmps
xchg
movs
pushf
pushf
scas
in
push
cwde
mov
push
sbb
dec
mov
and
lock
jb
rdpmc
xor
xor
sbb
mov
js
add
pop
imul
mov
xchg
outs
fwait
test
and
mov
adc
jne
xchg
or
and
mov
or
lods
mov
jb
lods
lods
fiadd
enter
dec
dec
pop
test
xchg
cs
fs
xor
mov
nop
add
sbb
sbb
and
pop
and
leave
nop
rol
out
or
cmps
inc
push
lods
lods
dec
scas
add
lods
sub
sub
cmps
sub
mov
int3
call
xchg
call
jb
sahf
call
adc
(bad)
call
xor
call
jmp
shl
jmp
jb
nop
pop
pushf
jmp
rol
push
frstor
or
fimul
call
imul
mov
pop
scas
sub
adc
sub
nop
xchg
cmp
cmp
adc
or
in
nop
add
inc
jmp
fstp
in
push
in
ins
in
bnd
adc
push
fld
inc
push
cmps
mov
repnz
push
(bad)
mov
xor
sbb
adc
bound
pop
rcl
xchg
mov
sbb
and
sub
sub
push
or
test
mov
or
sub
sbb
icebp
icebp
dec
cdq
fsub
data16
and
pop
(bad)
or
test
and
or
mov
adc
sbb
ffreep
shr
jbe
push
adc
add
cmc
out
neg
and
nop
jg
out
push
add
movs
out
adc
movs
adc
cs
dec
jmp
pop
mov
or
pop
jmp
or
mov
pusha
out
das
adc
mov
inc
lock
fistp
fwait
sbb
xchg
inc
jecxz
cmps
xchg
mov
inc
rcr
and
add
dec
push
xchg
inc
cwde
lock
add
jb
xor
icebp
icebp
and
leave
inc
icebp
repnz
(bad)
(bad)
icebp
test
push
icebp
or
dec
ins
mov
pop
mov
cmp
xor
das
popa
movs
addr16
dec
xchg
inc
and
cmc
retf
and
vmwrite
in
inc
cmc
pop
cmc
aad
fisubr
sbb
or
xor
mov
js
xchg
sbb
mov
test
ror
cdq
in
sbb
ror
mov
add
and
inc
and
les
cwde
fmul
cmps
xchg
or
adc
imul
inc
cmc
adc
push
stos
jo
and
xchg
mov
pop
inc
jg
sub
and
retf
test
xchg
and
(bad)
(bad)
jmp
test
lahf
mov
and
xor
dec
inc
int
popa
jl
lds
xchg
mov
or
jb
(bad)
test
in
in
mov
add
mov
cs
xor
fwait
add
add
dec
mov
add
call
mov
or
jl
sbb
jb
adc
cmp
xor
push
mov
jmp
mov
and
cmps
add
adc
cdq
in
or
mov
bound
mov
xchg
inc
push
daa
and
pop
add
aam
push
xor
lods
push
jmp
add
jle
push
hlt
or
gs
aaa
jge
add
pop
popa
enter
xlat
cmp
push
jnp
sbb
push
jecxz
adc
cmp
dec
xor
in
or
and
push
leave
add
cdq
test
and
(bad)
enter
add
adc
add
or
or
movs
in
retf
(bad)
leave
sbb
ficomp
mov
in
lods
popf
inc
sbb
sbb
or
fadd
adc
retf
leave
mov
ds
mov
loop
and
pop
cmp
pop
or
mov
mov
sub
push
adc
add
push
cmp
pop
push
adc
sub
push
dec
jno
push
outs
sbb
fs
adc
aaa
or
dec
and
cwde
cmp
fs
jg
movs
jb
mov
mov
out
xchg
mov
dec
pop
daa
and
lds
cmc
and
or
add
outs
mov
inc
adc
push
rcl
aad
outs
xor
mov
inc
hlt
mov
stc
mov
inc
out
mov
inc
push
push
mov
sub
or
cdq
sbb
repnz
push
ror
fisubr
cmp
and
das
xor
pop
mov
mov
fadd
or
or
aas
(bad)
sbb
mov
adc
xor
sub
and
adc
nop
or
pop
nop
adc
xchg
and
in
or
nop
popa
sub
mov
dec
jb
nop
sbb
pop
cdq
pop
test
mov
inc
nop
mov
inc
nop
adc
inc
and
in
nop
icebp
push
sub
or
add
adc
jmp
(bad)
xor
xor
mov
ja
inc
dec
mov
(bad)
ins
ret
pop
sbb
imul
jecxz
mov
lea
jp
hlt
xchg
cmp
dec
adc
daa
adc
mov
inc
or
inc
cs
iret
add
pop
xor
push
ret
scas
push
fild
bound
pop
fmul
(bad)
gs
pop
mov
adc
in
or
into
pushf
into
leave
add
or
into
xchg
inc
rcl
nop
mov
mov
push
sub
test
test
jb
pop
test
test
mov
lods
add
nop
dec
lods
lods
push
leave
push
ret
cdq
inc
cmp
and
dec
jb
movs
movs
es
sbb
movs
movs
movs
neg
push
xor
(bad)
test
movs
sbb
pop
xor
iret
mov
cmp
push
leave
inc
(bad)
(bad)
(bad)
jle
sbb
pusha
loopne
adc
mov
jg
pop
sbb
or
pop
and
mov
mov
sbb
or
rol
adc
stos
stc
lods
into
lods
into
or
push
mov
mov
cmp
loopne
rcr
ret
and
das
and
pusha
loopne
jnp
stc
leave
add
rol
leave
add
rcl
push
xor
adc
jmp
push
add
mov
cwde
js
mov
lea
(bad)
sub
mov
dec
and
daa
in
call
dec
jmp
mov
fisub
lahf
lods
in
call
add
xchg
xchg
out
test
test
popa
pop
pop
and
sbb
mov
and
push
sbb
push
add
adc
sub
mov
mov
cmp
add
or
xchg
aad
mov
imul
cmp
in
dec
mov
icebp
in
hlt
rol
add
icebp
loop
pop
outs
or
ror
movs
adc
jno
push
iret
mul
or
mov
inc
mov
sub
cmp
push
shl
lods
lods
leave
adc
and
lods
lods
lods
pop
and
and
lods
repz
or
xchg
in
nop
pop
jmp
pop
lods
mov
ror
hlt
inc
mov
push
rcl
sbb
push
in
es
push
push
les
add
adc
hlt
push
push
cmp
add
sub
push
inc
fwait
int
pop
dec
inc
cld
inc
xlat
test
cmp
push
mov
repnz
and
push
enter
rcpps
or
adc
js
push
xor
and
xlat
and
mov
(bad)
in
addr16
push
or
inc
aaa
sub
pop
push
inc
xlat
xor
adc
push
or
push
add
adc
jno
repnz
cmp
push
stc
or
nop
push
dec
push
push
pop
push
push
fimul
push
je
shr
in
cs
push
iret
enter
cwde
rcpps
in
adc
iret
sbb
xor
pop
and
stc
sub
push
sbb
sbb
jns
cmp
sub
sbb
ret
add
or
iret
shr
in
pop
or
in
test
aad
xlat
sbb
nop
daa
dec
and
adc
sbb
fsubr
in
mov
sub
fist
push
inc
mov
pop
enter
adc
and
push
in
in
repnz
add
mov
repnz
mov
scas
dec
mov
pop
push
fcom
fcomp
mov
xchg
or
sub
and
iret
and
repnz
add
or
hlt
hlt
ficom
jmp
push
nop
aaa
sub
adc
outs
adc
in
and
sub
jb
call
iret
cmp
add
cmp
clc
push
rcr
xlat
inc
jb
or
clc
dec
adc
clc
mov
xor
clc
clc
clc
ss
xchg
push
rcr
or
xlat
add
cmp
and
iret
or
adc
dec
xlat
pop
xor
pop
sbb
in
dec
pop
or
or
adc
sbb
sbb
enter
or
add
jb
sbb
add
add
call
call
leave
leave
and
daa
xchg
pop
sub
mov
push
add
add
sub
add
add
push
enter
iret
add
leave
add
loopne
push
nop
jl
pop
push
pushf
and
mov
and
shl
push
add
dec
mov
push
mov
adc
cmc
mov
mov
lods
cs
mov
push
add
adc
adc
push
mov
add
lods
and
and
push
pop
xlat
xor
inc
outs
and
and
repnz
sub
push
add
push
cmp
repnz
and
and
xchg
and
adc
push
sar
sub
pop
add
pop
and
adc
and
xchg
repnz
inc
leave
inc
push
xlat
adc
mov
push
or
and
dec
mov
fsub
mov
jne
dec
sahf
adc
mov
es
push
add
loope
(bad)
out
or
nop
push
sbb
add
stos
sub
xlat
sbb
in
sub
daa
push
in
xchg
sub
and
(bad)
push
ret
sub
nop
das
inc
fsubr
push
mov
xchg
push
cld
sub
iret
inc
mov
test
push
xchg
and
retf
in
inc
sahf
and
jl
push
sub
add
sub
push
inc
sahf
and
sub
(bad)
xchg
daa
xchg
sub
adc
or
and
iret
sub
and
iret
dec
sub
add
sub
inc
cmp
test
push
in
in
leave
and
add
das
push
fadd
in
xor
enter
dec
xchg
jl
mov
mov
aaa
push
or
sbb
add
push
jb
inc
enter
or
and
fcomp
fmul
and
fcomp
fdiv
sbb
neg
push
enter
je
push
adc
dec
pop
ds
adc
sub
rol
daa
inc
push
cmp
add
and
fadd
cmp
in
in
dec
push
js
sub
sub
daa
dec
in
test
dec
push
arpl
mov
mov
add
sbb
in
sahf
nop
dec
in
daa
push
in
and
in
leave
stos
dec
fsub
sar
push
push
in
mov
cmp
pop
cmp
or
cmp
push
leave
inc
leave
add
retf
adc
fs
add
call
xor
call
enter
jb
adc
call
sbb
xor
adc
or
and
call
dec
sub
mov
test
add
xlat
adc
add
pop
or
xchg
hlt
fmul
inc
leave
sbb
xchg
lock
leave
mov
cmp
iret
nop
xchg
add
add
add
add
and
add
add
call
iret
add
or
pop
add
add
stos
test
jb
iret
xchg
add
add
dec
jb
inc
cld
cld
cld
sbb
and
cld
cld
cld
pop
lock
cld
iret
jne
xor
or
cld
cld
cld
jns
jb
cld
adc
sub
mov
iret
mov
push
pop
fdiv
rol
adc
adc
cmp
inc
sbb
imul
pushf
adc
adc
adc
inc
and
sahf
lods
inc
adc
mov
inc
add
add
mov
iret
adc
cmp
or
sbb
sbb
je
sbb
pop
cmp
daa
daa
sbb
clc
inc
sbb
and
nop
sbb
sbb
jns
or
sbb
sbb
sbb
add
xchg
xchg
xchg
pop
push
cmp
push
mov
dec
cwde
and
dec
cmps
dec
(bad)
xchg
push
leave
mov
std
add
mov
pop
rcr
or
or
pop
fdiv
inc
adc
mov
inc
in
xor
clc
add
adc
and
add
add
sub
xchg
pushf
dec
into
pop
add
add
add
and
nop
iret
add
add
xchg
add
dec
add
add
nop
inc
and
sbb
int3
in
in
fcmovnbe
retf
and
mov
cwde
and
in
mov
mov
sbb
push
inc
push
inc
add
cmovns
ins
mov
inc
mov
push
cs
push
push
mov
ficom
pop
pop
pop
cmp
in
pop
pop
inc
rol
pop
and
punpckldq
xchg
or
adc
mov
mov
xchg
mov
fcom
dec
add
push
sbb
fisubr
lahf
dec
sub
lahf
xchg
cmp
dec
jne
lahf
imul
das
add
mov
dec
or
mov
in
nop
xchg
mov
cmp
jno
pop
loope
dec
jns
fidivr
mov
movs
sbb
and
mov
ins
and
dec
push
inc
sbb
loopne
mov
dec
xor
mov
dec
je
pop
xor
pusha
aaa
jns
imul
iret
xor
xchg
and
mov
inc
push
jl
sbb
inc
iret
inc
iret
jl
and
jg
inc
add
iret
xor
inc
jg
mov
adc
lods
pop
mov
mov
clc
push
js
in
push
iret
xchg
pop
enter
jl
pop
dec
rcr
iret
jge
imul
out
mov
nop
ins
shl
jl
dec
push
jl
test
dec
ret
adc
inc
or
daa
fs
mov
dec
mov
inc
or
int3
dec
inc
push
mov
pop
jl
and
jl
imul
rcr
ins
les
xor
jmp
mov
mov
or
and
mov
mov
aam
mov
iret
imul
cmp
or
iret
inc
pop
push
inc
sahf
mov
iret
sub
and
iret
and
leave
pop
iret
cmp
inc
iret
and
inc
pop
inc
iret
inc
iret
enter
inc
iret
test
and
test
test
adc
dec
iret
dec
leave
sub
iret
pusha
iret
pop
iret
inc
sahf
cmp
push
iret
push
iret
leave
aam
mov
xor
xchg
pop
js
je
(bad)
or
test
mul
dec
into
and
repz
mov
mov
mov
fs
iret
mov
sbb
iret
pop
iret
shl
sub
dec
xchg
and
pop
pop
pop
dec
push
jns
pop
add
nop
popa
test
fs
dec
es
imul
dec
repnz
aaa
aas
push
push
xor
fs
sbb
shl
pop
jo
xchg
fcom
xor
cmp
cmp
mov
iret
fcom
iret
in
xchg
xchg
cmp
cmp
cmp
es
xchg
or
fs
push
test
fs
fs
add
sbb
fs
mov
pop
push
mov
sbb
fcomp
pop
and
xchg
sbb
pop
stos
pop
mov
and
dec
rol
pop
or
adc
cmp
adc
in
repnz
pop
push
add
pop
and
push
enter
mov
aad
fild
jmp
leave
push
dec
hlt
pop
jl
add
push
repnz
pop
sbb
pop
push
cmp
dec
pop
repnz
pop
and
jns
cmp
pop
add
adc
xor
fst
aas
mov
adc
in
adc
mov
in
test
mov
and
add
xor
inc
push
add
in
jb
iret
xor
adc
or
pop
shr
in
pop
hlt
pop
pop
out
sbb
enter
push
add
push
dec
mov
add
iret
pusha
push
sub
call
mov
adc
popa
nop
das
dec
mov
iret
adc
test
pop
pop
inc
repnz
dec
fs
adc
add
fs
dec
mov
jp
mov
sbb
mov
mov
mov
and
mov
mov
xchg
xchg
daa
test
aam
push
push
fs
mov
enter
inc
iret
mov
sbb
push
inc
iret
inc
iret
mov
iret
ja
push
push
repnz
jae
xor
xor
xchg
push
enter
xor
in
jl
xor
fdiv
xor
and
and
xor
xor
enter
xor
xor
xor
jns
mov
xor
adc
xor
xor
xor
aaa
and
mov
xor
xchg
push
inc
xor
mov
iret
and
jle
inc
iret
adc
add
mov
sbb
dec
es
aaa
repnz
push
repnz
iret
xor
jb
cmp
iret
inc
iret
jns
in
inc
iret
dec
je
sub
jns
outs
push
xor
mov
loope
mov
leave
add
xchg
aaa
inc
iret
das
nop
adc
inc
iret
inc
iret
mov
push
nop
push
pop
ins
push
adc
iret
add
jns
ins
push
lods
je
inc
push
sub
in
push
jmp
push
or
push
shl
ins
push
enter
jns
push
inc
iret
xchg
sbb
push
xor
inc
iret
leave
and
cmp
iret
inc
iret
in
in
inc
iret
hlt
je
push
movs
or
imul
adc
jns
scas
inc
iret
inc
iret
inc
iret
lods
dec
pop
and
dec
pop
outs
(bad)
xor
enter
push
cmp
cmp
daa
das
in
cmp
cmp
cmp
cmp
mov
ror
cmp
cmp
mov
xor
lods
fcom
(bad)
xor
movs
ss
add
mov
mov
sub
bnd
xor
cmp
ds
iret
cmp
cmp
jb
inc
enter
iret
dec
iret
in
dec
push
dec
iret
cmp
dec
iret
mov
push
ja
pop
dec
push
cmp
out
jb
xor
push
repnz
int
iret
dec
iret
dec
iret
cs
iret
cmp
adc
leave
stos
xchg
cmp
nop
pop
xchg
outs
sub
cmp
dec
mov
repnz
sahf
cmp
iret
cmp
cmp
retf
inc
cmp
pop
nop
xor
aam
mov
dec
pop
cmp
pop
pusha
sbb
mov
iret
cmp
push
stos
in
shl
shl
iret
repnz
int3
xlat
push
iret
xor
retf
add
iret
push
iret
jb
jns
push
iret
push
iret
push
iret
sub
adc
js
leave
and
mov
enter
pusha
pusha
cs
and
dec
fs
xor
inc
nop
cdq
mov
xchg
or
pop
stc
pop
pop
xor
js
test
shl
iret
popa
sti
push
and
xor
(bad)
pop
inc
scas
pop
pop
sbb
repnz
(bad)
xlat
jo
dec
pop
sub
inc
and
cmp
iret
push
push
and
jecxz
xchg
pop
scas
je
je
jb
out
jnp
xor
je
sbb
je
inc
cs
sbb
xor
adc
lods
enter
fs
xor
enter
mov
call
js
js
nop
inc
mov
dec
jl
js
nop
dec
push
js
js
adc
dec
push
mov
mov
push
pop
pop
push
inc
push
xchg
xchg
fld
xor
xchg
iret
adc
mov
adc
pop
or
adc
and
mov
hlt
jb
dec
call
iret
xchg
inc
enter
iret
sub
push
leave
pushf
shl
fs
adc
and
leave
and
xchg
and
fimul
push
aaa
sub
inc
repnz
ins
or
mov
pop
mov
push
mov
add
and
dec
pop
enter
dec
call
lds
pop
xchg
arpl
dec
jb
sub
repz
mov
mov
lahf
les
dec
add
inc
add
cwde
cmp
outs
mov
outs
push
mov
ds
cmp
and
inc
add
jecxz
push
jno
inc
dec
lock
cmp
cmps
(bad)
or
aas
push
or
inc
push
shl
push
fwait
inc
lods
add
cmp
outs
fbstp
dec
mov
push
and
push
repnz
fs
(bad)
adc
call
push
mov
adc
cmps
stc
mov
sbb
mov
shl
and
stc
dec
leave
jbe
inc
lods
dec
je
add
outs
push
jg
out
ficomp
inc
es
and
dec
add
lock
ret
and
dec
pop
call
dec
div
fwait
inc
punpckhbw
int3
dec
add
mov
add
(bad)
fsubr
ror
jle
dec
scas
sbb
xchg
sbb
add
inc
sahf
jo
out
das
ss
inc
(bad)
in
aas
cmp
inc
mov
mov
dec
lahf
pop
mov
test
inc
push
test
(bad)
in
fs
lock
into
inc
outs
ins
in
mov
mov
outs
dec
adc
inc
ss
mov
add
out
pop
dec
push
sbb
push
in
adc
ins
dec
psubw
in
dec
mov
xor
push
sti
xor
hlt
push
xor
xchg
in
adc
dec
and
inc
push
fmul
mov
enter
mov
xchg
lds
jns
push
ror
and
lock
dec
fbld
(bad)
outs
jo
enter
cmps
stc
cld
xor
je
push
add
call
ds
sahf
call
or
add
xor
add
or
pushf
xchg
sub
add
retf
cmps
mov
cld
push
call
or
push
add
xor
into
dec
or
adc
dec
jp
adc
xor
xor
dec
jne
imul
add
adc
or
data16
xlat
adc
jae
std
sub
jbe
add
mov
sub
sub
mov
sar
or
pushf
cmp
mov
arpl
pop
pop
fwait
push
(bad)
mov
adc
xchg
cmp
adc
push
clc
mov
repnz
cmp
fwait
cmp
add
push
jl
xor
and
add
add
mov
adc
and
add
fist
mov
mov
cmp
je
push
push
js
dec
push
xchg
add
jge
(bad)
std
add
mov
adc
test
test
inc
add
nop
test
push
adc
jmp
retf
and
adc
add
scas
xor
mov
cmp
je
gs
cwde
ss
les
dec
in
jne
push
jmp
sbb
hlt
nop
lahf
or
mov
or
fs
ds
in
in
and
call
mov
xchg
loopne
mov
fdivr
in
inc
lock
and
aam
adc
leave
aam
cmp
jae
xor
xchg
adc
test
xchg
jne
mov
add
dec
or
add
test
push
mov
ret
mov
enter
les
jo
push
gs
xchg
js
xchg
inc
ins
ins
or
mov
xchg
outs
jb
gs
sub
adc
add
jno
or
mov
mov
stos
push
gs
or
fisub
pop
push
jo
sub
adc
cwde
push
pop
loop
cmp
sub
push
fbld
jo
dec
push
mov
sub
(bad)
xlat
or
pop
bound
or
ss
xchg
xor
push
outs
add
outs
pop
sbb
mov
push
add
lods
lea
jno
mov
xchg
sbb
daa
mov
jae
inc
inc
push
push
rcl
outs
loop
push
or
icebp
pop
es
mov
cmp
sub
mov
adc
dec
add
outs
dec
mov
mov
push
xchg
push
add
push
cmp
test
lahf
mov
push
sub
ds
adc
lahf
mov
adc
mov
jmp
inc
jns
aas
xchg
and
add
mov
jl
out
mov
std
sbb
and
adc
mov
ror
xchg
sbb
xor
jp
pusha
jo
inc
sbb
retf
out
in
pop
in
loop
xor
pop
mov
fbstp
sbb
pop
xor
inc
sub
mov
push
outs
push
mov
or
aas
fs
xchg
lock
je
movs
mov
test
lods
and
pop
(bad)
enter
mov
mov
dec
push
or
aaa
cmp
dec
cmp
push
les
enter
in
push
test
sqrtps
cmp
loope
mov
adc
lds
xchg
fldcw
pop
fmul
or
mov
sbb
test
movs
fnstsw
mov
sbb
out
dec
clc
and
sar
adc
and
mov
sti
ins
mov
mov
sub
mov
stc
jl
add
mov
jne
push
sbb
cmp
pop
call
in
out
xor
aaa
sub
outs
add
fcmovne
retf
cmp
dec
andps
jl
jo
xchg
xchg
sbb
sbb
nop
add
nop
and
sub
nop
add
xor
mov
pop
jnp
cld
mov
fs
ins
daa
push
add
imul
pop
push
es
je
addr16
add
and
xchg
adc
ret
out
js
test
dec
dec
cmc
add
jb
rol
xchg
nop
push
push
jo
ss
pop
pop
mov
and
fs
cmps
jl
or
mov
sbb
imul
adc
mov
pusha
sbb
and
cwde
add
sub
mov
xor
sub
jg
repnz
inc
out
add
lahf
das
mov
add
clts
ins
xor
inc
test
gs
cmps
ficom
repnz
mov
lock
fadd
inc
in
dec
ss
jl
add
mov
mov
in
add
mov
cmp
inc
and
pop
paddusb
jno
xor
out
rol
push
and
aam
inc
movs
sub
dec
pop
add
xlat
pop
inc
aaa
xchg
cmp
sbb
pop
and
or
add
add
ret
pop
pop
inc
push
bound
pop
push
dec
adc
aad
adc
pop
repnz
cmps
jl
pop
aas
pop
shl
dec
push
jne
and
in
xchg
and
pop
mov
sub
mov
rcl
popa
adc
sub
(bad)
adc
addr16
dec
mov
imul
inc
add
jne
push
(bad)
mov
sti
xchg
dec
es
jo
cmp
sbb
out
(bad)
pusha
push
dec
mov
and
sub
movs
and
sub
xchg
mov
ss
and
movs
push
ins
adc
mov
sub
and
sub
sub
ret
pop
adc
adc
cli
or
(bad)
call
sbb
mov
retf
lock
cld
aaa
sub
cmps
in
clc
aaa
add
jg
les
ins
test
cmp
pop
inc
and
inc
mov
mov
cmp
lods
sbb
fstp
adc
push
adc
iret
push
out
sti
fwait
fs
inc
sbb
ins
push
or
adc
cmp
adc
sbb
and
scas
ins
dec
and
and
xchg
pop
inc
add
adc
(bad)
int
and
movs
sti
cmp
in
ret
nop
cld
inc
push
xor
jmp
das
inc
sub
ret
jnp
imul
shl
pop
jne
mov
inc
in
sar
lds
popa
setp
mov
pop
aas
inc
cwde
or
adc
test
aaa
ret
test
js
enter
add
dec
jo
in
cmps
adc
mov
dec
pop
mov
imul
adc
push
fs
cmp
dec
inc
cwde
sub
repz
fbstp
or
adc
sbb
daa
daa
sbb
(bad)
pop
jg
gs
scas
inc
adc
dec
sahf
les
imul
and
cmp
idiv
sbb
dec
(bad)
in
sub
cld
mov
pop
or
mov
rol
add
cmp
adc
adc
mov
je
mov
or
ja
jae
ins
dec
mov
push
arpl
push
pop
repz
into
inc
cs
sub
(bad)
pop
(bad)
lea
dec
ins
push
es
les
pop
jbe
sub
xor
pop
pop
or
mov
jge
mov
push
or
fs
adc
out
sbb
retf
dec
mov
adc
imul
pusha
and
xchg
sub
cli
daa
xchg
cwde
hlt
sbb
int
adc
inc
(bad)
push
adc
sub
nop
(bad)
xor
ret
push
push
add
pop
adc
push
sbb
mov
pop
in
or
daa
inc
hlt
xor
and
ins
ror
mov
cmc
mov
enter
xchg
in
lock
(bad)
outs
in
iret
test
ret
or
push
add
cmp
gs
in
fistp
or
loop
xor
push
dec
es
loopne
and
mov
test
sub
enter
ret
push
sti
cmpxchg
push
mov
jg
je
inc
enter
adc
adc
push
adc
and
test
fdivr
cmp
mov
or
dec
add
sbb
and
mov
xlat
adc
test
xchg
xchg
push
dec
xor
and
cwde
mov
jmp
test
inc
test
sub
lods
sub
inc
dec
ins
adc
imul
xor
sub
nop
nop
test
dec
xchg
hlt
enter
pop
fiadd
daa
out
mov
push
cmp
jo
iret
and
push
dec
pop
in
mov
je
mov
outs
push
sub
push
add
xchg
test
or
or
enter
fidiv
lods
frstor
push
pop
push
mov
or
inc
or
pop
push
and
add
(bad)
cmp
push
xlat
and
(bad)
and
xchg
or
adc
pushf
int3
pop
xchg
jno
lock
push
and
mov
popa
and
clc
inc
ret
clc
mov
xchg
lds
test
sub
add
imul
ins
shl
push
and
into
inc
and
inc
pop
mov
mov
clc
ins
in
mov
iret
shr
out
xchg
aam
or
sbb
loopne
and
shl
rol
jle
or
sub
sbb
int3
rcr
jno
push
or
or
test
sbb
jmp
cmps
xor
iret
outs
and
push
(bad)
mov
int
daa
daa
and
into
or
xchg
xchg
jl
sub
mov
mov
jg
call
or
push
mov
dec
adc
add
mov
xchg
addr16
inc
cmp
mov
pop
add
and
imul
xor
aad
enter
xchg
mov
jl
inc
test
sub
enter
in
mov
fcomp
inc
sub
add
inc
add
mov
loopne
(bad)
inc
fs
add
cdq
mov
call
mov
dec
xor
js
mov
push
xor
push
adc
lds
mov
jecxz
mov
or
add
or
aam
push
push
fdiv
and
fdivr
jae
cmc
and
xchg
add
xor
jbe
adc
(bad)
mov
adc
add
xchg
movs
or
mov
cmp
or
adc
fst
aaa
loop
adc
or
bound
fdivrp
jmp
add
jmp
mov
inc
loopne
mov
add
xor
enter
movs
add
int3
inc
inc
inc
and
push
add
or
sub
pop
nop
mov
cmps
mov
mov
inc
push
shr
ret
ins
or
mov
fadd
js
xlat
stc
mov
sbb
xor
rol
adc
shld
mov
push
mov
inc
mov
nop
cmps
ins
or
mov
or
bswap
adc
push
cmp
mov
in
ins
pop
adc
and
add
test
cmps
mov
sub
or
add
ins
test
push
add
push
dec
mov
icebp
inc
inc
cmc
cmp
test
enter
add
xchg
sbb
push
sbb
push
arpl
mov
in
in
mov
sub
xor
pop
add
fsub
stos
ins
loopne
or
lea
pop
js
add
lds
push
enter
test
xor
adc
jl
mov
xchg
add
mov
and
jg
and
inc
cmp
and
fdiv
sbb
inc
push
inc
mov
and
inc
fmul
add
test
ror
arpl
sbb
nop
mov
add
add
adc
ret
(bad)
imul
ins
push
push
adc
mov
push
enter
pop
in
stos
jmp
xchg
or
call
push
dec
adc
das
add
inc
push
mov
inc
mov
mov
jne
das
adc
(bad)
and
lahf
mov
xor
mov
nop
or
enter
lahf
xor
xor
and
xor
bound
addr16
inc
add
or
add
and
lea
adc
rcl
in
popf
add
dec
jl
fadd
iret
repz
add
sub
js
mov
(bad)
adc
inc
enter
sbb
and
jb
inc
hlt
sub
inc
dec
in
push
xor
adc
inc
fs
pop
mov
push
in
pop
push
or
pusha
dec
cs
mov
mov
and
cs
mov
and
cs
xchg
mov
loopne
add
jb
dec
and
and
leave
inc
xor
jb
pop
pusha
sbb
mov
jns
adc
inc
dec
cs
mov
mov
inc
mov
repnz
add
pop
leave
inc
xor
cdq
dec
pop
pusha
add
bnd
adc
dec
and
xchg
rol
pushf
dec
xor
imul
loopne
mov
and
daa
or
out
retf
int3
enter
dec
clc
(bad)
dec
int
fcmovnu
fcmovu
retf
(bad)
loopne
jecxz
in
jmp
nop
jmp
jg
cmc
mov
push
jne
je
ins
and
and
mov
fwait
mov
ds
dec
inc
mov
(bad)
fldenv
add
xor
push
push
adc
or
pop
adc
or
adc
repnz
sbb
(bad)
jle
std
fist
add
sbb
sbb
sbb
(bad)
sbb
les
std
sbb
div
loope
sbb
sahf
pop
fild
hlt
xor
xchg
pop
or
push
push
adc
das
add
push
in
rcl
fidivr
add
inc
pop
xchg
shl
and
or
aas
mov
adc
fimul
push
sub
cmp
cmps
push
add
repz
fs
je
repz
repz
cmp
lods
mov
(bad)
int3
aam
iret
repz
in
hlt
cld
jns
cmps
stc
add
or
sbb
out
sahf
out
xor
inc
dec
add
jns
push
pop
fs
jb
jb
inc
add
add
fs
push
adc
adc
inc
sahf
mov
push
data16
and
pavgb
sbb
in
xchg
mov
cmp
cmp
sbb
sbb
sahf
cmps
cmp
pushf
enter
pop
add
pop
out
(bad)
sysret
ffreep
add
or
jns
(bad)
sahf
adc
mov
shl
cmp
out
or
sub
repz
jl
mov
out
call
pushf
popf
out
movs
(bad)
fdivr
add
adc
push
fcomp
push
push
inc
mov
xor
add
jecxz
add
add
push
and
mov
add
or
add
sub
add
or
addr16
pop
jmp
ss
add
enter
pop
and
pusha
push
inc
jge
add
push
and
outs
jae
call
fucomp
jle
int3
push
xchg
call
push
jae
jne
push
and
inc
pop
add
jae
rcr
jl
push
cwde
rol
push
iret
cmp
aas
adc
pop
push
or
push
and
push
inc
jg
sti
xchg
fs
sub
cmps
retf
xor
sti
push
in
mov
or
repz
bound
push
add
add
repz
bswap
adc
jns
out
adc
outs
adc
iret
cmp
and
pop
idiv
adc
out
sahf
out
push
out
jns
mov
jo
sbb
cmp
jo
pop
push
push
ds
repz
sbb
jns
ror
pop
and
add
adc
pusha
push
mov
sahf
push
enter
push
jb
sahf
out
push
add
lahf
out
and
adc
pop
jae
jae
sahf
cmps
stc
cmp
mov
mov
sahf
out
pop
mov
mov
out
(bad)
or
je
cmp
xor
fs
test
push
ret
ret
addr16
fidiv
add
out
frstor
adc
or
or
out
cmovle
push
or
add
adc
sbb
nop
pop
pop
or
sbb
xchg
(bad)
arpl
pop
mov
sbb
jns
fisubr
mov
jns
cld
sbb
jae
jge
sbb
or
lods
push
pop
add
jp
pop
push
mov
pop
add
sbb
pop
inc
cmp
das
pop
aas
mov
pop
and
add
add
push
jae
add
es
and
add
sti
fsub
sbb
push
ret
push
cmp
xor
(bad)
xor
xor
sub
and
ret
push
ins
jns
imul
cld
aas
fwait
and
and
jb
mov
movs
mov
cmp
ss
sub
fidiv
das
ins
lds
pusha
pop
(bad)
mov
or
jae
pop
pop
push
jns
fdivr
push
push
pusha
repz
out
mov
cmps
out
iret
loopne
push
pop
sbb
fiadd
cmp
cmp
add
pop
adc
jns
out
mov
mov
(bad)
jns
lock
adc
adc
jns
out
xor
or
sahf
and
add
inc
call
lahf
pop
push
sbb
add
push
jl
out
loopne
cmp
sahf
pop
(bad)
ins
sub
cmp
repz
iret
repz
add
mov
repz
les
bound
repz
rep
add
cmp
pop
pop
sbb
cmp
aam
push
repz
repz
mov
cmp
aas
iret
add
or
xor
cmp
repz
pcmpgtd
iret
repz
lods
push
xchg
or
repz
push
pushf
arpl
jns
repz
push
outs
sub
push
push
mov
call
(bad)
adc
out
jns
popa
and
jns
inc
loop
sbb
jns
rcr
sub
in
cmp
push
adc
jns
sub
jne
retf
jns
out
stos
add
sahf
xchg
jmp
xchg
out
fisubr
mov
or
jns
xchg
out
ret
jae
(bad)
jns
out
arpl
cmps
add
inc
out
sbb
jnp
(bad)
imul
sahf
out
mov
mov
out
in
push
pop
ja
out
sahf
xchg
into
addr16
scas
pop
out
jns
xchg
pop
pop
cmp
xchg
sahf
jg
fisubr
jp
ja
das
mov
dec
(bad)
nop
or
mov
xchg
shl
mov
in
cs
test
cs
fnstcw
stc
lds
in
or
in
cs
cmc
int
cs
cs
popf
fisttp
in
mov
mov
mov
in
mov
cs
cs
jmp
inc
cs
fstp
sti
(bad)
cmps
or
xchg
or
cs
cs
scas
out
inc
cs
lahf
fist
cs
(bad)
jle
sahf
pop
push
inc
ins
adc
sbb
adc
je
mov
mov
push
add
add
ficomp
push
mov
outs
jle
adc
and
sbb
adc
add
push
inc
push
jle
sbb
sbb
push
popa
pusha
imul
xor
or
or
xlat
rcr
xor
popf
push
pop
or
pop
loop
arpl
or
and
and
sub
call
dec
icebp
and
and
mov
xchg
repz
xor
pop
pop
mov
dec
ins
arpl
push
addr16
xchg
jo
lods
pop
add
jae
es
xlat
sbb
je
jo
jae
outs
cmp
adc
xor
dec
sbb
jns
and
std
inc
pop
jae
ins
bound
jae
(bad)
popa
cmps
sbb
imul
loop
or
shr
sub
les
ret
mov
mov
fs
cmp
mov
ins
repz
inc
ret
es
cmovge
call
jle
sub
je
dec
dec
cmp
push
dec
cs
adc
jecxz
test
push
jp
adc
dec
dec
adc
adc
and
add
ret
ins
adc
lahf
or
stos
inc
sbb
into
adc
add
inc
and
loop
stos
pop
adc
sti
jecxz
mov
push
add
sbb
repz
sbb
sbb
cmp
es
dec
dec
(bad)
cmp
pusha
inc
fs
(bad)
test
in
add
add
test
add
sub
cmps
xchg
cmp
or
cmp
cmp
or
or
fild
test
mov
dec
int3
sub
iret
repz
ins
in
sbb
pop
fdivr
repz
mov
cmp
repz
mov
(bad)
adc
repz
mov
repnz
cmp
repz
sub
push
sbb
repz
mov
cmp
xrelease
cmps
iret
repz
data16
xchg
push
(bad)
cmp
repz
mov
test
cmp
repz
cs
iret
repz
outs
out
push
sahf
pop
fidivr
repz
mov
cmp
repz
cmp
popa
loope
xchg
push
sar
repz
mov
icebp
or
cmp
xrelease
sub
imul
cmp
repz
mov
cmp
repz
and
iret
gs
xchg
push
aad
iret
repz
mov
cmc
or
lea
sub
iret
ins
in
sbb
iret
repz
mov
or
xlat
xor
xchg
push
xchg
push
push
out
sahf
out
shl
xor
mov
jae
repz
out
or
jns
out
retf
sub
stos
sahf
out
sahf
stos
imul
sbb
out
sbb
jns
out
fstp
cmp
mov
pop
jns
out
pop
xchg
sahf
out
(bad)
daa
daa
cmps
sahf
out
sahf
cmps
addr16
pop
jns
out
pop
xchg
xchg
push
push
out
sahf
out
xlat
aaa
aaa
mov
out
sahf
mov
ja
test
jg
jns
out
iret
das
das
scas
sahf
out
sahf
scas
outs
outs
out
out
pop
jns
out
pop
lahf
lahf
pop
pop
out
sahf
out
fistp
aas
mov
mov
cmp
repz
inc
push
and
push
repz
repz
dec
sub
repz
push
add
iret
repz
and
adc
iret
jnp
repz
add
cmp
repz
mov
dec
jnp
inc
push
or
add
cmp
repz
sbb
adc
repz
or
push
push
push
push
cmp
repz
adc
sbb
adc
xor
pop
pop
sub
push
xchg
cmps
pop
push
daa
or
or
dec
lods
cdq
test
sbb
sub
adc
outs
dec
jecxz
sub
xor
jo
in
push
call
outs
mov
or
sbb
shr
sub
push
push
cvtps2pi
cmps
jne
jecxz
cld
add
add
je
daa
adc
adc
sbb
(bad)
jg
or
or
or
cmp
pop
dec
add
add
or
or
mov
and
mov
sub
movs
adc
add
sbb
pop
and
leave
sbb
sbb
xchg
pop
xchg
sbb
(bad)
cli
push
pop
daa
daa
daa
fld
adc
adc
pop
jb
adc
jb
sbb
mov
sbb
push
xor
ja
popa
push
out
mov
les
(bad)
(bad)
(bad)
(bad)
push
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
(bad)
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
(bad)
(bad)
(bad)
jmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
(bad)
(bad)
(bad)
call
add
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
(bad)
(bad)
call
iret
or
shr
cmp
ficom
push
xlat
enter
mov
and
(bad)
(bad)
inc
mov
cdq
xchg
mov
mov
or
or
and
or
adc
(bad)
(bad)
dec
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
scas
(bad)
push
mov
call
xor
mov
test
xchg
sbb
(bad)
(bad)
mov
cmp
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
(bad)
(bad)
(bad)
(bad)
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
(bad)
fistp
ficom
gs
aam
pop
popa
mov
into
pop
cmp
(bad)
push
jmp
inc
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
(bad)
(bad)
(bad)
dec
pusha
fidiv
add
in
add
pop
dec
or
cmp
add
daa
(bad)
(bad)
dec
and
and
test
or
mov
popa
into
push
stc
ficomp
(bad)
(bad)
call
cwde
shl
pop
cmp
mov
cmp
lods
ins
mov
xchg
(bad)
mov
mov
add
inc
(bad)
(bad)
(bad)
call
jmp
fild
push
fdiv
or
test
fs
ds
or
or
(bad)
(bad)
(bad)
dec
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
(bad)
test
ss
sbb
push
imul
aam
loopne
ror
jmp
outs
fistp
mov
mov
aad
mov
call
call
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
(bad)
(bad)
(bad)
dec
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
jmp
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
(bad)
mov
mov
pop
mov
add
mov
cmps
call
ret
shl
sbb
ret
(bad)
jmp
repnz
pushf
mov
ins
add
(bad)
(bad)
jg
mov
adc
add
adc
mov
jnp
sbb
or
mov
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
(bad)
(bad)
call
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
(bad)
(bad)
(bad)
call
call
(bad)
clc
sar
imul
ins
push
js
or
push
add
mov
(bad)
(bad)
(bad)
(bad)
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
(bad)
(bad)
(bad)
push
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
jmp
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
lahf
(bad)
jmp
aaa
mov
or
sbb
add
sub
and
ret
push
(bad)
jmp
mov
hlt
ja
xchg
inc
dec
or
(bad)
dec
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
(bad)
(bad)
call
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
cmp
(bad)
call
test
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
std
(bad)
(bad)
jmp
adc
mov
popa
ja
mov
out
repz
gs
fisubr
mov
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
add
hlt
div
sub
(bad)
(bad)
push
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
(bad)
jge
lds
sub
pop
add
jle
jmp
(bad)
sbb
adc
call
call
cmp
dec
hlt
mov
or
xchg
lea
or
int3
mov
dec
xor
inc
mov
outs
retf
push
pop
mov
mov
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
les
(bad)
call
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
jecxz
std
gs
out
and
cmp
dec
mov
mov
xchg
call
and
cmps
xor
mov
lods
out
sar
mov
adc
stos
and
(bad)
(bad)
dec
jmp
sti
push
jns
das
mov
and
je
or
repnz
push
dec
mov
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
ss
(bad)
(bad)
dec
call
cmps
test
cwde
cmp
test
mov
mov
scas
adc
(bad)
(bad)
(bad)
(bad)
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
(bad)
(bad)
(bad)
push
xchg
push
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
(bad)
(bad)
(bad)
jmp
or
sub
add
adc
cwde
mov
nop
bound
xchg
push
lds
cld
(bad)
push
fst
out
les
fdecstp
jmp
lea
inc
xor
out
sub
dec
jo
outs
sbb
sub
loope
fisub
(bad)
call
lds
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
(bad)
jmp
stc
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
(bad)
(bad)
jmp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
push
mov
mov
stc
dec
xlat
loopne
adc
mov
(bad)
(bad)
(bad)
push
popf
mov
test
and
pop
ins
cmp
les
adc
sub
dec
add
sar
(bad)
(bad)
cli
jns
or
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
(bad)
(bad)
(bad)
jmp
xlat
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
movs
(bad)
(bad)
(bad)
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
inc
test
(bad)
jg
aas
sbb
adc
jns
movs
dec
mov
movs
daa
sub
(bad)
call
cld
repnz
in
and
out
mov
shl
es
call
cld
call
jo
adc
out
sar
mov
gs
pop
jle
aaa
lods
(bad)
(bad)
dec
push
out
jbe
dec
div
lahf
adc
jb
and
push
jmp
jmp
add
test
pop
mov
mov
ret
mov
lea
in
(bad)
(bad)
mov
cmp
(bad)
test
or
stc
sbb
sub
(bad)
(bad)
mov
es
leave
in
push
ja
pop
sub
das
sbb
(bad)
in
sbb
fild
sbb
repnz
adc
dec
jae
adc
cmp
and
(bad)
(bad)
(bad)
(bad)
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
ds
cmp
cmp
push
add
outs
jge
aaa
ss
fidiv
test
inc
push
(bad)
call
xor
add
xor
(bad)
mov
fsub
(bad)
(bad)
(bad)
dec
pop
sub
and
mov
and
mov
sub
fidivr
sub
(bad)
(bad)
push
ds
sbb
sub
call
das
ror
jno
pop
(bad)
(bad)
push
cdq
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
std
(bad)
(bad)
(bad)
jg
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
cmc
ja
ins
fdivrp
cmp
nop
es
xchg
pop
in
ja
(bad)
fcomip
inc
push
xor
cmp
imul
ins
arpl
sub
shr
aam
cmps
stos
(bad)
(bad)
jmp
mov
and
imul
dec
pop
mov
outs
jns
(bad)
jg
push
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
std
(bad)
inc
inc
test
shl
inc
xor
inc
jae
cmovo
out
inc
(bad)
(bad)
jg
inc
push
push
xor
mov
mov
mov
clc
push
mov
(bad)
cmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
lock
(bad)
(bad)
jg
pop
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
(bad)
(bad)
push
(bad)
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
loopne
jmp
das
call
mov
stos
jmp
pop
imul
fcom
cld
sahf
(bad)
(bad)
(bad)
jmp
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
(bad)
(bad)
(bad)
(bad)
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
(bad)
dec
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
(bad)
(bad)
(bad)
(bad)
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
les
(bad)
(bad)
jmp
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
retf
lahf
lds
push
leave
enter
leave
je
inc
int3
inc
ins
xchg
sbb
ror
mov
(bad)
call
xchg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
(bad)
(bad)
(bad)
(bad)
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
xor
(bad)
(bad)
(bad)
push
xor
dec
mov
or
(bad)
in
popf
or
dec
add
mov
(bad)
mov
(bad)
(bad)
dec
push
pop
and
push
adc
fadd
arpl
pop
xchg
(bad)
(bad)
jmp
mov
data16
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
(bad)
(bad)
(bad)
call
xor
cmps
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
call
jae
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
(bad)
(bad)
(bad)
jmp
xlat
mov
push
not
xor
mov
ficomp
mov
(bad)
call
pop
addr16
stos
out
scas
mov
push
xchg
bound
mov
or
mov
lds
(bad)
(bad)
jmp
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
call
adc
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
(bad)
(bad)
(bad)
sti
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
(bad)
(bad)
(bad)
push
add
das
or
in
xchg
loop
pop
test
xchg
frstor
dec
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
mov
xor
sub
les
and
loop
outs
dec
jg
sub
xchg
or
(bad)
jge
aad
shl
mov
(bad)
lds
ja
(bad)
call
daa
sbb
mov
xchg
(bad)
hlt
adc
call
fwait
pop
(bad)
(bad)
(bad)
(bad)
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
push
shl
pop
mov
(bad)
(bad)
call
sbb
pop
mov
adc
shl
cmp
das
retf
jnp
dec
ja
(bad)
(bad)
(bad)
jg
or
jae
mov
cmc
cwde
outs
inc
nop
call
cld
jle
data16
sbb
ficom
(bad)
(bad)
dec
mov
mov
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
(bad)
push
add
cmp
inc
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
dec
(bad)
(bad)
call
mov
fist
inc
addr16
fwait
push
add
in
mov
(bad)
(bad)
(bad)
dec
cmp
push
out
arpl
adc
push
mov
aaa
pop
in
push
pop
(bad)
(bad)
jmp
pop
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
(bad)
call
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
inc
(bad)
(bad)
(bad)
call
sbb
jmp
bound
inc
xchg
out
xor
or
sub
push
in
outs
(bad)
(bad)
(bad)
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
sub
(bad)
(bad)
dec
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
xlat
sub
(bad)
std
shl
pop
xchg
idiv
sub
sbb
repnz
and
sar
(bad)
jg
imul
xlat
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
call
retf
mov
mov
mov
stc
(bad)
and
push
(bad)
(bad)
(bad)
(bad)
mov
rol
outs
mov
push
or
adc
jmp
into
movs
adc
(bad)
ud0
(bad)
dec
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
(bad)
(bad)
(bad)
jmp
icebp
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
call
call
das
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
mov
lock
(bad)
(bad)
call
pop
imul
ss
test
(bad)
cs
mov
call
(bad)
push
dec
cs
out
add
add
pop
std
(bad)
(bad)
(bad)
call
dec
cwde
ds
icebp
and
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
(bad)
(bad)
dec
retf
(bad)
sbb
loope
push
adc
cmp
adc
jg
(bad)
jmp
jle
cmp
pushf
in
adc
add
sbb
cmps
push
data16
(bad)
(bad)
inc
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
(bad)
(bad)
jmp
neg
jmp
pop
test
or
xchg
popa
mov
fdivrp
(bad)
jmp
ja
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
xor
(bad)
(bad)
(bad)
dec
fisttp
movs
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
hlt
(bad)
(bad)
call
mov
repnz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
(bad)
(bad)
call
test
adc
imul
mov
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
(bad)
(bad)
(bad)
jmp
or
enter
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
(bad)
std
movs
or
cli
inc
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
iret
stos
sar
lods
push
mov
enter
mov
mov
mov
mov
(bad)
(bad)
inc
and
mov
movs
movaps
mov
or
or
mov
or
and
outs
jl
pop
push
dec
adc
popa
sbb
cmp
add
jno
cwde
shl
mov
jno
test
add
mov
xor
leave
les
(bad)
(bad)
(bad)
out
and
or
sbb
or
sub
out
pop
add
push
hlt
(bad)
(bad)
(bad)
call
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
(bad)
mov
jmp
jmp
sbb
mov
jl
sti
aam
(bad)
mov
mov
test
into
mov
mov
movs
inc
cmp
fcom
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
(bad)
call
rol
xor
sbb
pop
fisttp
jno
daa
mov
inc
stos
mov
or
xchg
mov
and
mov
aam
into
popa
in
(bad)
(bad)
(bad)
call
stc
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
and
mov
loop
mov
call
ja
add
jmp
fcom
and
or
xchg
cmp
pop
test
push
iret
or
(bad)
call
jge
sahf
mov
setae
mov
push
mul
pop
and
(bad)
jmp
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
jmp
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
fadd
les
repnz
sar
jmp
sar
aas
mov
fisttp
ss
fmul
sbb
jmp
inc
add
fbld
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
(bad)
inc
and
push
mov
lds
or
sub
add
xlat
jmp
(bad)
(bad)
push
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
ss
(bad)
(bad)
(bad)
aas
jb
test
add
xchg
mov
jp
jnp
sub
xchg
ror
(bad)
(bad)
dec
or
fbld
xchg
rcl
icebp
aam
inc
push
fiadd
ja
call
int
mov
ja
sbb
out
punpckhdq
push
cmp
adc
(bad)
(bad)
inc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
adc
(bad)
inc
mov
cmps
addr16
shl
test
ja
scas
shr
(bad)
pop
fadd
or
(bad)
(bad)
(bad)
(bad)
fdivr
lock
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
(bad)
mov
cmps
mov
xlat
push
xchg
push
ficom
and
addr16
jp
les
mov
pop
push
sub
or
mov
sub
call
call
sbb
inc
xor
bound
lods
lds
pop
cmps
xchg
xchg
(bad)
(bad)
(bad)
inc
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
(bad)
(bad)
dec
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
(bad)
call
fwait
add
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
(bad)
(bad)
(bad)
call
mov
inc
and
call
shl
ret
fiadd
(bad)
(bad)
push
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
jmp
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
mul
(bad)
(bad)
dec
pop
mov
sti
push
test
jns
mov
cmp
jns
push
dec
(bad)
(bad)
jg
push
lds
jge
fisubr
cmp
jns
add
ret
xchg
push
sbb
(bad)
(bad)
(bad)
call
mov
cmp
lds
or
xchg
into
fist
call
or
xor
cli
bound
pop
push
mov
jmp
lea
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
(bad)
jmp
sbb
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
add
or
add
lahf
loop
cmps
int3
and
mov
jmp
and
scas
mov
shr
lahf
adc
ins
leave
dec
and
rcl
jmp
ja
(bad)
(bad)
jmp
aas
jns
ss
mov
or
je
adc
xor
push
dec
lea
pusha
jle
(bad)
(bad)
(bad)
push
out
repz
(bad)
std
ret
rcl
cmp
call
js
cmps
gs
(bad)
(bad)
(bad)
cmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
(bad)
(bad)
dec
inc
and
shr
ja
adc
out
movs
add
(bad)
(bad)
(bad)
inc
pop
mov
cwde
pop
ins
(bad)
adc
ss
daa
sbb
(bad)
(bad)
(bad)
(bad)
fnstsw
xor
mov
push
rcr
hlt
lds
(bad)
out
hlt
push
out
ret
neg
xchg
(bad)
cld
call
scas
pop
mov
test
xor
imul
dec
lods
push
push
cld
(bad)
clc
pop
sbb
inc
sub
data16
loope
lds
mov
lods
mov
in
test
xchg
sub
in
scas
mov
(bad)
(bad)
(bad)
stc
(bad)
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
icebp
push
sub
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
ja
ror
stc
add
xlat
push
scas
xchg
adc
lea
or
idiv
enter
mov
and
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
(bad)
(bad)
jns
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
das
cli
(bad)
jmp
cdq
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
sub
(bad)
(bad)
push
mov
xchg
push
mov
repz
inc
gs
dec
xchg
outs
jne
mov
call
and
pop
test
adc
gs
jns
(bad)
mov
sbb
mov
(bad)
jg
jmp
repnz
mov
mov
out
and
loope
or
mov
aas
aas
xchg
mov
jo
and
imul
inc
cmp
ja
fsub
push
loopne
(bad)
(bad)
jle
hlt
out
push
or
test
mov
adc
xor
hlt
jg
and
test
outs
add
pop
lods
test
push
retf
ret
sub
into
mov
dec
push
test
adc
(bad)
(bad)
(bad)
call
cmp
or
out
loope
sbb
fs
xchg
push
or
(bad)
(bad)
jg
cmp
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
(bad)
(bad)
jmp
cmc
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
(bad)
(bad)
(bad)
jp
dec
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
add
ss
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
jmp
frstor
in
mov
cmps
daa
aam
es
dec
(bad)
(bad)
(bad)
dec
daa
jnp
out
and
and
adc
sub
pusha
inc
sub
or
jno
(bad)
(bad)
(bad)
push
sub
jbe
cs
enter
mov
shl
div
pop
scas
jb
xor
(bad)
(bad)
call
push
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
xlat
(bad)
jmp
add
retf
retf
mov
xchg
cli
fdivrp
call
jbe
nop
jmp
ja
pop
push
repz
(bad)
(bad)
jg
arpl
popa
sub
push
cmps
xlat
aam
fs
mov
loopne
dec
dec
adc
dec
dec
fs
(bad)
inc
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
(bad)
(bad)
(bad)
dec
inc
and
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
(bad)
(bad)
(bad)
mov
or
ror
adc
push
mov
cmp
pop
and
pop
data16
(bad)
(bad)
(bad)
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
jg
out
clc
iret
out
jecxz
movs
movs
cmp
pop
out
fldcw
jp
add
out
es
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
adc
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
(bad)
(bad)
push
add
dec
bnd
lock
adc
or
cmc
retf
sub
test
(bad)
(bad)
(bad)
(bad)
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
(bad)
(bad)
call
imul
test
fdiv
shl
add
mov
jo
shl
pop
(bad)
(bad)
(bad)
inc
pop
(bad)
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
(bad)
jg
dec
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
pop
je
xchg
iret
rcl
call
sbb
add
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
push
and
repnz
loopne
jo
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
(bad)
call
xor
jge
mov
pop
mov
mov
xor
imul
mov
(bad)
(bad)
inc
and
sbb
sbb
out
(bad)
rol
cmps
arpl
(bad)
(bad)
(bad)
call
jb
test
and
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
and
cmps
xor
das
movs
jne
jbe
mov
inc
mov
cmp
mov
(bad)
(bad)
(bad)
(bad)
mov
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
mov
mov
outs
mov
inc
call
xor
loopne
mov
cwde
xor
out
(bad)
(bad)
jg
gs
or
mov
mov
out
(bad)
bound
xor
std
outs
push
cmp
jl
jge
dec
mov
loopne
xlat
(bad)
(bad)
jmp
add
mov
fucom
fbstp
pop
arpl
push
push
sbb
call
(bad)
(bad)
(bad)
cli
adc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
call
xchg
rcr
mov
(bad)
and
xor
sbb
addr16
xchg
shr
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
push
loopne
iret
(bad)
dec
pop
loop
aas
jmp
jecxz
in
fmul
lock
movs
sub
les
xor
loop
push
dec
jg
adc
test
or
rcr
lahf
ror
and
sub
sub
mov
inc
and
(bad)
xchg
test
call
cmp
(bad)
(bad)
call
sbb
not
adc
iret
push
retf
mov
ret
pusha
test
jo
out
pop
call
test
fistp
ret
imul
ret
ja
imul
(bad)
(bad)
inc
(bad)
popa
add
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
(bad)
(bad)
(bad)
(bad)
fidiv
sbb
mov
inc
sub
mov
cmp
jg
sar
xchg
(bad)
(bad)
cmp
outs
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
(bad)
(bad)
call
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
xor
inc
out
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
scas
fcomip
(bad)
dec
inc
call
mov
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
loopne
inc
push
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
push
mov
sbb
bound
and
inc
sbb
jmp
sub
sahf
aam
inc
mov
in
pop
cmp
cmps
(bad)
xor
or
cmp
ins
mov
cld
sbb
dec
sub
scas
cmc
test
and
mov
(bad)
(bad)
call
mov
sbb
ror
sar
add
push
movs
not
call
sub
jns
and
dec
imul
cmc
xlat
jle
out
ror
call
inc
or
aaa
push
add
arpl
and
(bad)
aaa
call
stc
popa
call
rcr
mov
ss
(bad)
jg
jb
call
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
and
(bad)
data16
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
(bad)
(bad)
dec
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
(bad)
(bad)
dec
jmp
sbb
push
bound
fwait
push
mov
xchg
xchg
(bad)
(bad)
(bad)
call
push
es
mov
cld
mov
adc
push
ja
ss
adc
(bad)
(bad)
(bad)
jmp
inc
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
(bad)
(bad)
dec
stos
jle
test
cmp
es
jl
mov
pop
sbb
mov
repz
test
call
in
test
adc
ja
mov
jmp
std
mov
cmp
cdq
in
or
pushw
(bad)
(bad)
(bad)
jmp
sub
fisubr
sar
lock
out
mov
mov
push
inc
sar
std
(bad)
(bad)
dec
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
jmp
xchg
fist
add
add
jns
(bad)
std
cmc
repnz
push
bswap
mov
add
jl
cli
jmp
add
fidiv
inc
hlt
clc
and
out
cli
add
out
add
add
aad
int3
fisubr
add
lods
mov
pop
repz
fidivr
(bad)
jl
cmc
and
or
lahf
mov
cmp
mov
out
cli
int
sbb
add
aaa
ins
fidivr
mov
int
jmp
adc
repz
pop
add
iret
add
dec
jg
cs
addr16
xlat
outs
sbb
arpl
fcom
add
repz
aas
movs
sub
add
lods
hlt
movs
pusha
add
mov
mov
sub
or
xor
jmp
into
push
mov
(bad)
cld
repz
add
fsub
mov
test
lahf
jg
sbb
add
(bad)
pop
jl
call
stos
add
lods
mov
call
push
lods
jmp
add
aas
pop
(bad)
sbb
out
nop
add
aam
clc
mov
lahf
mov
push
fisub
mov
js
scas
ret
stc
imul
push
call
or
mov
cwde
sti
cwde
push
data16
add
iret
aas
cmp
jno
lods
mov
mov
mov
fwait
mov
(bad)
push
imul
fs
xor
pop
push
int3
movq
in
cli
cld
imul
call
push
and
pop
cmp
scas
out
out
add
fsub
(bad)
cmp
int3
dec
mov
into
cli
push
fs
in
add
loop
pop
mov
(bad)
iret
mov
int3
add
inc
loopne
add
mov
test
ss
jl
jmp
push
jmp
pushf
call
aas
and
push
in
jg
sbb
jo
sub
mov
mov
loopne
mov
movsx
mov
mov
add
iret
aas
xchg
add
add
cmp
push
mov
sbb
faddp
adc
dec
(bad)
add
mov
(bad)
fisub
jle
sahf
add
adc
add
xchg
sub
sub
fidiv
add
mov
(bad)
fsub
out
jg
jmp
add
add
fsubp
cld
out
es
out
add
ja
cdq
add
mov
cs
rol
fimul
aas
(bad)
cld
jnp
test
inc
xor
shl
nop
sbb
pusha
iret
add
cmc
add
mov
xlat
lahf
push
push
imul
clc
cld
imul
add
das
dec
enter
push
rcr
mov
addr16
popf
into
push
jmp
add
stc
pop
arpl
cmp
xor
or
add
mov
outs
stos
adc
add
and
pusha
mov
inc
or
fs
pop
xor
stos
nop
dec
xchg
cmp
add
inc
nop
dec
xchg
in
and
aam
or
sub
addps
adc
push
(bad)
popa
out
fiadd
(bad)
std
cld
aas
push
mov
push
inc
cmp
das
cmp
hlt
bound
les
jbe
aam
stc
inc
cli
fsub
dec
add
add
jnp
jns
add
ss
push
hlt
cld
sahf
out
ds
adc
and
out
out
xor
cmp
jb
add
jns
pusha
je
test
fdivr
dec
repz
or
sub
inc
sbb
movs
pop
scas
push
or
or
test
mov
ds
xchg
outs
lds
mov
jno
mov
iret
inc
mov
push
cdq
bound
outs
leave
in
pop
pop
add
jg
out
fiadd
mov
jns
cld
std
push
(bad)
(bad)
ds
repz
add
test
lahf
out
xchg
push
add
ins
inc
inc
add
stos
pop
sbb
sbb
inc
xlat
aaa
(bad)
clc
add
inc
aaa
xchg
dec
mov
push
jge
mov
add
inc
sub
or
imul
in
pop
ins
and
imul
pusha
jmp
mov
das
add
sbb
outs
das
jns
cmp
xchg
xchg
and
xchg
sar
push
hlt
add
adc
cmp
repz
pop
ins
js
repz
repz
movs
mov
ds
in
hlt
or
sub
out
sahf
cmp
pop
mov
jmp
bound
(bad)
loop
fst
icebp
iret
je
imul
push
lsl
out
(bad)
xchg
je
std
nop
cld
lods
jns
out
cli
enter
repz
repz
div
not
repz
cmc
jo
xchg
repz
iret
repz
shl
lock
cmps
stc
adc
xor
push
movs
jmp
in
push
in
int
push
jmp
push
pusha
inc
aaa
or
scas
in
adc
or
push
pushw
cld
xor
retf
icebp
push
dec
dec
inc
or
or
add
popa
stc
push
mov
xor
adc
xchg
dec
loope
add
sbb
(bad)
pop
and
mov
mov
push
mov
outs
ret
out
in
ss
es
push
pop
ins
jl
jns
out
pushf
lods
rcl
repz
out
adc
and
dec
dec
lds
iret
pusha
je
int
pushf
repz
out
mov
fsubr
add
iret
repz
adc
cmp
fs
es
mov
pop
mov
mov
mov
pop
enter
add
imul
pop
add
cmp
repz
dec
sub
inc
push
push
pause
movs
mov
(bad)
into
hlt
add
add
inc
add
mov
fild
push
add
inc
cvttps2pi
push
jbe
push
dec
pop
or
imul
add
movs
push
or
pop
aaa
daa
push
(bad)
or
sbb
ss
dec
or
sub
jns
out
outs
inc
push
ins
nop
movs
enter
out
adc
dec
jo
adc
sbb
push
cmp
sub
jne
lods
inc
and
sub
mov
jmp
mov
lods
and
xor
push
sub
das
inc
inc
push
inc
adc
sub
jns
out
mov
std
cld
sti
cli
dec
inc
dec
add
mov
push
xchg
add
test
pop
mov
ds
aas
cmp
repz
xor
cmp
repz
cmp
pop
or
(bad)
jns
test
adc
adc
out
sahf
out
adc
push
pop
iret
mov
sbb
sbb
iret
repz
push
pop
and
repz
repz
and
es
repz
daa
sub
sub
sub
iret
repz
cs
xor
stos
pop
enter
jl
mov
out
mov
and
out
mov
or
xor
mov
(bad)
clc
and
movs
mov
mov
or
push
cmp
(bad)
bound
mov
mov
aas
out
push
push
pop
add
scas
or
jns
push
sbb
jo
test
(bad)
pushf
sub
push
mov
add
jns
out
add
add
sahf
out
lahf
add
pop
test
(bad)
fadd
sub
iret
repz
shr
cs
int
out
dec
inc
push
push
push
in
jns
out
push
clc
push
adc
cmp
mov
cwde
dec
xchg
loop
xlat
pop
sbb
addr16
ins
pushf
loope
pusha
retf
push
xor
inc
mov
mov
push
adc
add
sub
mov
dec
outs
daa
out
mov
and
sahf
out
adc
in
iret
sar
and
je
jns
iret
repz
call
jns
cmps
sbb
push
push
jl
movs
mov
repz
or
mov
lock
sahf
out
sahf
cmp
mov
mov
mov
and
pop
ins
or
cmp
xchg
lods
rcl
add
adc
inc
pop
jo
mov
lahf
pop
inc
ins
push
sahf
out
sahf
mov
cmp
sar
sbb
inc
pop
repz
repz
out
ds
fsubr
or
sbb
sahf
out
sahf
inc
fs
mov
jns
in
adc
repz
fs
iret
repz
pushf
mov
loopne
or
sbb
dec
fs
sahf
out
nop
mov
repz
cld
push
xchg
push
sub
cmp
repz
mov
sahf
cmps
stc
add
out
sahf
out
mov
jl
in
adc
and
push
cmp
repz
sbb
fdivr
or
sub
out
sahf
out
fs
lods
dec
repz
mov
sbb
cmp
repz
push
ds
repz
add
out
push
pusha
jl
int
jns
test
fsubr
add
adc
iret
repz
inc
pusha
jo
repz
repz
out
sahf
out
cwde
sub
lahf
out
sahf
test
cmp
repz
sub
pop
ins
repz
repz
imul
and
jo
sahf
out
and
int
cld
or
sub
pop
iret
repz
push
call
clc
adc
and
push
jl
out
jo
pushf
lods
and
xor
pop
jo
iret
repz
cwde
lods
rcl
cld
jns
imul
mov
push
dec
repz
jle
push
xor
repz
push
fs
xchg
lods
out
in
(bad)
fdivr
out
sahf
movs
rcr
adc
sub
cmp
sub
inc
iret
repz
dec
push
pop
fs
js
out
ds
mov
sub
(bad)
jbe
in
icebp
dec
ret
ror
pop
xor
add
and
jb
pop
or
pop
jb
out
jecxz
xor
loop
hlt
mov
cmc
and
into
repz
push
push
repz
add
or
push
adc
sub
iret
repz
push
mov
dec
pop
sub
inc
push
pop
jo
repz
test
repz
ds
sahf
push
cmp
push
daa
adc
fs
add
mov
cmp
sti
xor
xlat
xchg
add
push
dec
in
repz
sbb
push
jecxz
push
mov
add
and
sub
cmp
xor
imul
push
or
add
(bad)
jns
aaa
imul
out
sahf
out
or
or
test
jns
or
push
psraw
loop
bound
push
jb
cs
mov
xchg
add
fstp
dec
and
cmps
mov
fld
sbb
adc
push
xor
mov
iret
dec
add
ror
loope
ds
mov
adc
and
sub
inc
outs
add
or
or
add
adc
dec
add
add
dec
push
scas
maxps
add
xchg
daa
outs
sub
add
sbb
sub
or
or
pop
out
cmps
outs
xor
push
pushf
mov
movs
add
adc
sub
sbb
inc
mov
sahf
out
fdivrp
push
stc
icebp
loope
cmp
cld
clc
lock
repz
adc
push
jmp
int3
cmp
(bad)
(bad)
fcomip
xor
bswap
aas
inc
dec
mov
jae
dec
mov
shr
sbb
(bad)
(bad)
(bad)
fsub
jecxz
shr
out
pop
fbld
ins
pushf
pop
mov
outs
lahf
pop
or
cmp
add
xor
(bad)
(bad)
push
or
cmp
pop
(bad)
aaa
test
dec
mov
ja
(bad)
(bad)
jmp
fcomp
and
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
(bad)
(bad)
call
ret
push
into
inc
shl
or
inc
mov
mov
jle
inc
mov
lea
(bad)
(bad)
(bad)
(bad)
jge
loop
shr
out
push
fisub
loope
shr
bound
pop
mov
ins
popf
(bad)
(bad)
(bad)
call
retf
push
(bad)
test
cmp
add
dec
mov
jbe
dec
mov
(bad)
(bad)
(bad)
push
jmp
sub
sbb
and
push
pop
cmps
xchg
push
test
gs
sbb
xchg
cmp
pop
lahf
push
inc
neg
outs
mov
and
cld
jae
push
xor
fldcw
sbb
push
bound
mov
inc
sub
sbb
pushw
fisubr
and
mov
or
cdq
cdq
std
ss
and
sbb
or
cdq
cdq
fstp
mov
inc
cmps
mov
(bad)
jmp
mov
aas
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
jg
push
aas
stos
adc
shl
aas
aas
cmp
jmp
jnp
push
je
xchg
jmp
aas
pop
stos
jb
push
test
add
xchg
push
cmp
shl
ficom
or
imul
and
xor
call
or
adc
cmps
and
xor
jne
jl
(bad)
and
sbb
imul
xor
adc
xor
sub
dec
shl
xor
sub
aaa
ds
mov
push
adc
out
sub
or
push
dec
cmp
iret
mov
or
cmp
pop
sbb
outs
mov
push
adc
and
pop
outs
daa
iret
addr16
and
inc
push
mov
aaa
dec
push
pop
xor
pushf
cmp
jmp
jns
js
dec
pop
push
daa
iret
repz
arpl
iret
das
daa
pop
aaa
adc
out
inc
aas
sbb
cmp
fcomp
scas
arpl
in
add
add
jl
sbb
or
mov
dec
push
int3
add
add
add
(bad)
push
xor
add
add
push
adc
pop
and
xor
inc
mov
dec
inc
adc
xor
adc
sbb
sbb
sub
or
add
push
jecxz
(bad)
(bad)
call
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
(bad)
(bad)
push
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
sbb
jmp
call
repz
cmc
div
clc
stc
cli
add
add
or
adc
fwait
outs
inc
pop
popa
jno
and
adc
xchg
mov
lock
shl
xor
and
add
imul
adc
popa
or
stos
retf
jecxz
scas
mov
addr16
sub
pop
xlat
sub
jmp
mov
call
(bad)
ins
add
or
add
pop
clc
jbe
dec
pop
(bad)
nop
out
pushf
jg
(bad)
(bad)
(bad)
fidivr
out
(bad)
(bad)
(bad)
jg
outs
or
push
inc
inc
add
lock
inc
xor
lods
dec
dec
dec
inc
pop
sbb
adc
jl
jl
aaa
nop
test
push
fild
sub
push
or
and
jo
mov
add
ds
ret
(bad)
movs
dec
jo
adc
mov
(bad)
and
dec
fadd
mov
fs
test
xchg
pushf
push
jmp
not
into
xchg
push
inc
lods
xchg
ret
xor
push
cld
out
test
mov
fmul
push
int3
push
cmp
iret
movs
ss
add
mov
xchg
in
lods
stc
fisub
push
fdivr
xchg
xchg
cmp
les
pop
mov
adc
scas
in
ja
push
push
mov
mov
jnp
push
add
push
lods
push
mov
rcl
push
mul
push
adc
(bad)
mov
jbe
cs
inc
push
fidivr
cs
push
les
ins
push
dec
inc
repz
push
and
push
push
pushf
adc
in
and
push
ss
mov
jnp
push
scas
js
xchg
and
push
pop
outs
repz
push
ss
mov
setle
das
push
jo
pop
jl
cs
(bad)
jnp
in
mov
push
cld
out
push
mov
je
or
push
and
push
push
fwait
popw
out
cs
add
jl
inc
jae
and
cs
hlt
call
loope
push
pop
sbb
ss
or
push
movs
iret
jnp
jle
clc
enter
or
xchg
data16
fidivr
pop
jbe
pop
inc
or
push
sbb
mov
cwde
sahf
enter
add
push
in
xor
mov
push
out
cld
sbb
cmps
sub
sar
outs
and
pusha
xchg
jle
mov
dec
or
xor
movs
add
jnp
out
in
ror
push
pop
cmp
mov
test
push
lods
xchg
leave
out
movs
(bad)
jl
mov
xchg
pop
(bad)
js
es
out
xchg
aam
lods
int3
fmulp
lock
dec
add
mov
mov
pushf
jbe
rcr
iret
mov
cs
and
push
xchg
xchg
out
call
push
xor
int
outs
or
xchg
data16
push
cdq
pop
push
lahf
movs
dec
or
push
inc
mov
out
push
sub
and
dec
push
mov
icebp
push
cld
push
pop
data16
xor
enter
cmps
scas
xchg
ins
dec
add
fsub
int3
not
int3
xchg
jbe
out
sbb
adc
mov
in
jnp
cmp
xchg
jl
and
pushf
push
sahf
rol
dec
mov
adc
pushf
push
adc
cmp
sbb
add
adc
jns
cmp
mov
outs
mov
mov
hlt
fsubr
add
pusha
lock
mov
out
jns
jnp
mov
(bad)
jle
jg
sub
add
inc
out
ds
dec
cmps
sbb
scas
loopne
push
hlt
mov
xchg
and
neg
data16
aam
cld
(bad)
iret
cmp
scas
sbb
es
and
push
js
popf
and
adc
in
mov
(bad)
femms
cmp
push
pop
daa
mov
out
scas
push
lods
and
cmp
xchg
add
xchg
and
(bad)
adc
push
iret
test
cmp
nop
push
clc
push
mov
pop
and
dec
mov
add
mov
into
sub
in
rcr
cmp
pushaw
push
or
and
fs
sub
adc
dec
out
clc
lds
pop
pop
dec
lock
(bad)
lods
jge
in
retf
mov
push
push
lock
je
addr16
mov
js
ss
into
sbb
sub
jb
pop
out
inc
aam
dec
pop
add
cmp
inc
cmps
cmp
movs
fiadd
call
outs
je
push
ins
sar
xor
xlat
mov
xchg
xor
jl
cmp
dec
add
cmps
push
je
aas
ss
cmp
push
int3
cs
outs
sbb
pop
scas
pop
push
pop
inc
(bad)
mov
adc
cld
test
jl
es
add
lock
jl
dec
pop
cmp
dec
push
movs
out
add
fistp
nop
(bad)
push
mov
ja
sbb
sub
pop
out
push
push
in
or
pop
neg
jle
add
xchg
push
hlt
fidiv
es
pop
out
ret
jg
les
pop
pop
cmp
fiadd
sub
cmp
(bad)
xchg
cwde
push
pushf
xchg
sahf
repnz
test
dec
mov
fs
and
inc
mov
adc
nop
push
add
add
rol
add
pop
add
pop
add
ret
repnz
pop
movs
push
and
jns
inc
inc
add
sub
test
pop
add
add
adc
enter
nop
inc
add
and
add
push
xchg
test
mov
mov
xchg
mov
dec
sar
inc
sbb
cmp
add
nop
ficomp
push
adc
fist
aas
pop
xchg
push
adc
dec
xchg
pop
jnp
inc
adc
in
jge
fisttp
xor
push
push
adc
or
dec
xor
inc
sbb
adc
dec
sti
inc
sbb
lods
add
dec
(bad)
fdivr
or
push
mov
aad
das
inc
adc
mov
adc
bound
(bad)
adc
push
dec
add
out
pop
repnz
dec
inc
push
or
ficom
dec
rdpmc
push
mov
push
or
es
sub
or
and
push
loop
push
adc
ret
mov
sub
dec
or
add
popa
adc
in
add
jb
(bad)
pop
inc
out
xchg
cmps
inc
add
rol
call
add
or
add
xchg
or
xchg
push
inc
cld
jg
repz
(bad)
clc
aas
push
pop
jmp
shr
sub
(bad)
cld
add
pop
or
push
aas
or
in
and
jg
add
mov
add
fwait
int
jbe
test
or
pop
jo
pusha
mov
sub
dec
add
add
imul
psubb
addr16
sbb
fwait
neg
out
mov
lock
out
ja
add
loopne
shl
add
pop
sbb
pop
push
(bad)
imul
xchg
aas
pop
cs
pop
pop
shl
xchg
int
mov
push
pop
std
lock
fld
repz
imul
inc
add
jle
mov
out
rol
jnp
sub
jo
iret
rol
jl
xor
inc
lock
push
leave
div
xor
push
add
nop
in
aas
es
push
add
enter
nop
into
push
add
mov
inc
jno
sub
out
and
cmp
out
ficomp
add
comiss
dec
pop
mov
(bad)
ja
daa
add
pop
int
repz
std
clc
lock
aas
shl
stos
xchg
pop
clc
dec
add
push
imul
inc
pop
outs
clc
pop
and
or
add
mov
add
loopne
pop
sbb
fwait
stos
dec
test
inc
nop
pop
jle
sbb
int
fwait
int
adc
adc
xchg
fcmovu
jae
pop
cs
pushf
or
addr16
cld
pop
cmp
fmul
aaa
pop
stos
into
add
lock
cmp
sub
inc
std
or
jle
or
popf
int
cmp
sub
inc
add
inc
add
inc
shl
xor
sbb
push
and
aad
push
sbb
ss
ret
shl
data16
ins
cmp
push
sbb
fdiv
fwait
int
sbb
or
test
jbe
inc
xor
enter
loop
or
push
inc
leave
and
or
pop
push
adc
push
sbb
test
pop
xchg
add
outs
or
xor
or
ret
je
fld
ficomp
ins
lods
les
add
mov
add
or
dec
inc
jnp
(bad)
fbstp
cmp
or
or
loopne
outs
call
push
scas
pusha
outs
shl
push
xor
scas
push
add
cmp
sbb
fld
rcr
mov
int3
push
add
sbb
jae
inc
adc
fisubr
jp
add
mov
push
aaa
mov
js
adc
arpl
or
ins
jecxz
sub
xchg
pusha
jecxz
inc
scas
gs
(bad)
pop
xor
cmp
bound
ins
test
movs
jnp
push
and
ror
xchg
test
stos
and
or
fadd
das
push
pop
add
xchg
(bad)
push
or
das
jmp
sbb
adc
dec
ror
sbb
push
rcl
mov
push
or
jg
je
xchg
inc
fisttp
and
and
es
add
addr16
bound
imul
mov
das
movs
rcr
inc
stos
daa
data16
cmp
mov
ss
and
fild
arpl
mov
pop
retf
push
ja
pop
test
sbb
loope
jecxz
sbb
push
adc
sub
adc
or
and
loopne
cmps
jae
xchg
and
bound
fmul
scas
push
adc
je
pusha
mov
(bad)
dec
mov
mov
sbb
jne
dec
push
adc
popa
push
dec
in
pusha
call
push
sub
push
and
(bad)
dec
aaa
sbb
scas
inc
adc
mov
add
sbb
imul
mov
pop
ins
jecxz
fbld
imul
imul
sub
adc
sub
pop
or
jne
imul
pop
adc
dec
daa
movs
shl
mov
test
outs
push
sahf
jle
push
inc
jae
jo
imul
stos
push
xor
fild
fcmovnbe
sub
adc
sub
aaa
pop
add
pop
repz
mov
xor
rol
jmp
bts
rcl
cmps
test
fiadd
daa
and
xor
cwde
xor
pop
jne
sub
out
sbb
fwait
push
popa
dec
fs
jmp
das
jmp
and
mov
jbe
push
ja
iret
jp
cmps
inc
pop
mov
adc
cmp
push
push
xor
adc
jl
sbb
inc
push
lock
push
sub
xchg
mov
mov
add
xor
daa
xchg
ins
js
fdiv
and
mov
xchg
outs
sbb
daa
jp
sub
imul
add
push
push
mov
fdiv
push
mov
ins
rcl
pop
stos
xchg
and
dec
packsswb
push
mov
in
mov
add
xor
jo
stos
stos
jmp
imul
sbb
ss
outs
fild
fbstp
xchg
mov
ja
add
scas
outs
mov
push
push
jae
dec
enter
ins
ret
arpl
inc
mov
push
jecxz
das
ins
cmps
imul
adc
inc
and
aad
call
inc
imul
fdiv
pop
add
push
pusha
ja
imul
mov
or
stos
rcr
pop
push
xchg
shr
or
xor
push
add
imul
cmp
je
loopne
bound
jmp
mov
iret
pop
or
out
mov
ja
dec
adc
add
jae
or
das
ja
sbb
dec
arpl
sub
sub
mov
ins
adc
push
(bad)
jb
sbb
inc
ret
and
gs
ss
dec
and
mov
inc
sub
test
inc
shr
cmp
ret
xchg
inc
jg
arpl
mov
inc
ja
lods
movs
call
dec
xchg
fidiv
mov
aaa
mov
and
inc
xlat
mov
mov
pop
aaa
popa
lds
imul
jle
cmp
pop
pop
or
aaa
xor
or
(bad)
(bad)
jg
scas
or
dec
das
add
ins
retf
inc
mov
add
test
loop
push
push
mov
ror
pop
adc
cmp
ins
cld
jg
fcom
xchg
mov
dec
pop
imul
mov
(bad)
cmp
dec
mov
es
xor
xor
pop
add
(bad)
mov
push
sub
xchg
dec
mov
pop
push
int3
(bad)
cmp
sub
pop
and
ficom
popa
push
das
mov
mov
or
les
push
add
pusha
(bad)
adc
nop
ret
sbb
add
(bad)
sub
adc
rcl
sub
adc
bound
mov
jmp
sub
aaa
and
inc
mov
xor
jg
pop
inc
xchg
dec
push
xchg
call
and
sub
cmp
bound
inc
sub
adc
imul
dec
cwde
mov
cmp
js
shl
jecxz
popa
dec
outs
or
xor
outs
lahf
outs
lahf
jb
jne
test
xchg
das
rol
pusha
mov
aas
aaa
add
push
jle
push
test
arpl
pop
add
push
xor
push
mov
imul
ret
mov
mov
sbb
fistp
jae
mov
push
mov
ss
xor
fsub
push
inc
mov
mov
lahf
scas
sub
test
cmp
(bad)
fisub
(bad)
xchg
xchg
push
mov
jmp
and
sub
inc
sbb
jbe
cmps
add
iret
dec
mov
or
pop
mov
push
movs
sub
sbb
mov
jmp
and
aaa
dec
xchg
cwde
mov
test
dec
xchg
outs
test
xor
retf
mov
add
(bad)
lock
dec
push
push
dec
jge
daa
and
sbb
jmp
outs
dec
sub
das
mov
add
leave
movs
outs
iret
xor
pop
mov
aaa
push
jo
pop
scas
rcr
ins
jecxz
pop
adc
cmps
fisub
aaa
out
ret
mov
fisubr
(bad)
(bad)
repz
cmp
xor
add
inc
jnp
jnp
mov
add
test
mov
hlt
xchg
lock
mov
cmps
push
xor
cmps
push
or
cmp
arpl
das
(bad)
adc
call
pop
dec
push
call
adc
or
add
push
dec
xor
jo
les
(bad)
stc
pop
popa
mov
adc
fwait
fwait
das
push
xor
fsub
cmp
dec
pop
rcl
mov
add
xchg
pop
in
push
(bad)
out
push
push
cmp
mov
rcr
add
jle
add
xor
and
cmp
out
or
in
xor
dec
cmps
or
scas
push
arpl
js
xor
push
out
jbe
xchg
mov
sub
xor
push
and
push
add
inc
jae
xchg
fadd
int
mov
sbb
jo
dec
dec
dec
pop
ins
mov
add
js
push
inc
out
inc
mov
imul
aaa
mov
cmps
sbb
mov
cmps
jp
add
dec
inc
xor
xchg
and
adc
movs
inc
cwde
shl
jg
cs
and
mov
or
out
mov
ins
sbb
sbb
addr16
inc
or
lds
aaa
pop
and
mov
aaa
bound
cs
bound
pop
(bad)
imul
inc
cwde
xlat
sub
xor
arpl
mov
rcr
retf
adc
xchg
push
aaa
cmp
mov
rol
adc
pop
push
retf
jb
and
cmp
push
retf
das
inc
cli
(bad)
ficom
add
lahf
pushf
test
fnstsw
daa
sub
and
pop
sub
rcl
sbb
xchg
mov
add
add
push
ins
inc
jbe
mov
js
ja
add
and
or
mov
outs
sub
pop
mov
sub
push
sub
and
push
add
bound
and
clc
push
jnp
fadd
mov
dec
pop
push
mov
mov
sbb
aaa
arpl
push
call
dec
inc
jne
sub
xchg
mov
mov
test
in
scas
add
dec
shl
mov
pop
jae
ret
mov
push
mov
sbb
arpl
ret
lods
add
jecxz
movs
adc
push
fisttp
inc
pop
mov
imul
push
fist
sbb
sub
sub
jb
pop
add
in
(bad)
stos
daa
mov
inc
jae
mov
sti
push
inc
out
es
imul
push
jmp
inc
lea
fisttp
scas
arpl
dec
addr16
mov
imul
mov
push
mov
les
xor
fwait
aas
(bad)
bound
mov
sbb
mov
xlat
xor
inc
add
dec
int3
mov
adc
(bad)
push
add
cmps
arpl
loope
repz
or
adc
pop
scas
mov
scas
arpl
sub
iret
adc
fisub
dec
or
popa
and
or
stos
test
cmp
(bad)
inc
imul
adc
pop
rcr
dec
add
inc
(bad)
jmp
arpl
dec
call
add
or
outs
dec
jae
cs
xlat
sub
pop
jnp
in
or
cmps
push
mov
or
imul
(bad)
arpl
lahf
jo
je
add
push
sbb
or
jg
rcl
bound
mov
test
ret
and
(bad)
xlat
sbb
imul
and
sub
pop
aaa
ret
fwait
cmp
bound
lds
outs
xchg
outs
daa
(bad)
pop
add
mov
sbb
dec
aad
jge
shr
jmp
push
inc
adc
loope
sub
(bad)
fisttp
cmps
mov
jb
scas
inc
cmps
or
push
leave
xor
sub
adc
inc
ins
ret
jae
pop
jb
pop
adc
xor
adc
ja
dec
mov
add
xor
cmp
das
push
jno
or
sub
xchg
scas
mul
and
xor
aaa
imul
mov
adc
pop
imul
aaa
retf
arpl
add
mov
test
add
test
cmps
pop
push
adc
and
sub
jnp
push
add
mov
gs
mov
dec
mov
dec
inc
mov
push
or
jmp
jnp
adc
and
adc
xor
les
inc
xor
xor
xor
mov
stos
pop
imul
dec
ret
gs
cwde
imul
cwde
cmp
fsubr
cli
xor
ret
xchg
es
sub
stos
pusha
inc
xchg
stos
push
mov
ret
sub
shr
pusha
outs
jae
and
push
inc
push
outs
aas
ficomp
cmp
xor
into
add
push
pop
xchg
aaa
imul
and
popa
adc
sub
and
cmps
push
mov
and
mov
pop
pop
out
lds
arpl
sbb
and
cmp
dec
inc
movs
movs
adc
sub
ret
add
rcr
inc
loop
xorps
adc
jno
scas
stos
fs
jmp
push
jmp
push
jae
mov
ins
sub
out
repz
(bad)
arpl
and
inc
mov
xor
mov
nop
mov
add
jnp
add
add
sub
fbstp
sbb
cdq
adc
lds
lahf
sub
push
sub
dec
sbb
and
adc
mov
sub
xor
mov
fisttp
inc
jmp
jbe
sbb
jle
addr16
adc
imul
leave
sbb
pop
arpl
imul
pop
fwait
or
add
ins
jne
adc
or
sub
mov
repz
pop
mov
pop
push
jmp
xor
and
adc
adc
sub
sbb
ret
ins
adc
sub
outs
sbb
and
push
pop
sbb
push
scas
jnp
add
stos
sbb
(bad)
mov
inc
adc
sbb
sbb
xor
stos
cmps
rcl
fwait
mov
push
les
inc
dec
ja
pop
pop
imul
xchg
sub
fwait
dec
lods
inc
pop
popa
daa
mov
xor
movs
pop
inc
shl
dec
inc
push
pop
(bad)
and
mov
(bad)
jg
arpl
mov
mov
adc
inc
(bad)
pop
into
js
dec
mov
pop
adc
jmp
test
sahf
(bad)
adc
push
and
cmp
add
pop
test
push
stos
jne
push
dec
js
jo
shl
xlat
sub
inc
push
add
add
sub
scas
stos
mov
sbb
call
in
daa
push
push
gs
and
mov
fidiv
add
out
jnp
outs
fs
push
jnp
pop
xchg
ret
jbe
xchg
outs
daa
or
fiadd
pop
push
adc
aaa
push
pusha
adc
adc
pusha
xchg
mov
pop
packuswb
add
and
arpl
das
add
shl
jb
add
xchg
rol
popw
(bad)
jne
add
jg
ins
sub
dec
pxor
cmp
enter
pop
lahf
inc
pop
jo
loopne
pop
outs
pop
or
inc
or
push
dec
or
sbb
int
sbb
cmp
(bad)
pop
adc
add
mov
in
stos
xor
or
xor
lds
sbb
sub
jno
pop
cvttps2pi
cmp
xchg
pop
xor
fwait
aas
mov
ret
outs
sub
loope
jecxz
mov
pop
and
shl
xchg
retf
fild
(bad)
pop
xchg
push
pop
or
jp
inc
mov
retf
stos
sub
push
(bad)
shl
dec
push
xchg
mov
mov
add
inc
mov
mov
pop
add
xor
es
inc
mov
push
add
jbe
xor
fwait
xchg
pop
inc
mov
dec
push
push
pop
call
cmps
jae
int
lods
ja
daa
test
inc
sub
pop
and
sbb
in
test
xlat
and
mov
aad
fdivr
xor
ror
mov
sub
jae
outs
cmp
inc
pop
cmp
adc
jno
in
aas
not
iret
sub
adc
mov
adc
pop
inc
adc
retf
sbb
xchg
push
cmp
adc
sub
aaa
push
sub
scas
inc
rol
gs
or
movs
and
push
cmp
popa
popf
push
mov
push
iret
push
mov
mov
outs
sbb
out
arpl
sbb
push
add
mov
or
or
dec
and
and
adc
stos
daa
inc
dec
xor
xor
movs
add
jae
mov
ds
pop
sbb
dec
jmp
pop
mov
sbb
outs
imul
imul
aaa
and
das
pcmpgtd
mov
int
cwde
mov
fstp
sahf
test
(bad)
inc
sub
fidiv
add
sub
push
dec
inc
(bad)
jecxz
xchg
inc
pusha
mov
and
cmps
(bad)
out
rcl
cs
rol
sbb
pop
adc
add
rcl
mov
mov
push
or
add
rcl
scas
or
jle
jmp
adc
dec
outs
push
dec
out
ret
inc
pop
jo
adc
mov
xchg
outs
movs
test
dec
arpl
rcr
inc
dec
(bad)
shr
adc
xchg
jae
cwde
push
shl
mov
arpl
fwait
scas
test
sbb
and
pop
addr16
sub
push
sbb
pusha
xchg
dec
rcl
nop
mov
lock
xchg
loope
adc
aaa
sti
call
pusha
add
add
add
add
add
add
sti
jmp
and
xor
inc
add
pusha
add
sbb
dec
cld
call
add
add
add
add
cwde
and
mov
add
ret
pop
cmp
and
xor
add
not
pusha
movhlps
jo
or
mov
add
add
add
ds
aas
repnz
add
add
add
add
pop
fdivr
stos
add
pusha
add
add
dec
mov
add
add
add
add
add
add
mov
add
or
add
or
aad
cmp
and
cmp
add
inc
test
loop
add
pushf
add
or
out
sub
push
adc
fbstp
out
rol
(bad)
mov
in
sub
pop
add
jbe
ret
rol
add
data16
into
add
sub
push
out
shl
cmps
xor
push
cmp
lock
pushf
scas
adc
add
adc
rol
or
mov
pop
jle
out
cmp
mov
std
add
cwde
push
repz
and
ja
add
add
and
push
and
fist
mov
add
add
outs
mov
jo
add
add
add
or
and
xor
inc
push
pop
push
push
pusha
push
push
jo
pop
sti
imul
push
nop
push
fisub
sbb
mov
retf
pop
pop
lock
add
adc
push
pop
jg
loopne
xor
inc
pop
sbb
out
mov
sbb
add
jmp
pop
rol
loopne
aaa
cld
push
inc
add
xor
inc
or
sbb
jo
mov
out
or
or
add
in
jne
daa
ror
xor
or
add
sub
or
adc
and
movq
repnz
or
pop
xor
push
or
adc
jo
cmps
or
add
inc
mov
or
or
or
or
and
out
(bad)
or
or
push
or
jo
or
or
ja
or
pop
inc
mov
ror
es
ror
std
jmp
sbb
loop
dec
les
add
or
out
jo
jg
or
inc
or
pusha
or
lods
shr
out
sub
add
div
mov
shr
pop
sub
shl
loopne
(bad)
jg
scas
mov
or
push
and
add
push
or
or
or
or
mov
fcos
or
or
or
or
or
ds
fisttp
or
jbe
pusha
or
or
or
ror
and
sar
cmp
xor
inc
push
xor
push
dec
(bad)
mov
add
sub
sub
nop
push
fs
jnp
add
or
rcr
in
in
ror
sbb
add
push
or
ror
or
call
(bad)
push
and
xor
inc
(bad)
cpuid
pusha
sbb
add
fstp
sysenter
inc
mov
lahf
loopne
in
inc
mov
ror
xchg
shr
inc
mov
loopne
mov
adc
invd
push
jns
mov
adc
and
xor
adc
adc
inc
xchg
add
lahf
push
adc
or
cmp
pslld
(bad)
cmps
adc
adc
(bad)
fcmovbe
cmp
adc
adc
cmp
shl
jns
add
lahf
out
mov
gs
ret
adc
adc
repnz
rcl
aas
adc
test
rol
jg
adc
(bad)
arpl
scas
add
adc
call
pusha
add
out
mov
mov
lahf
std
retf
add
add
jae
not
adc
adc
adc
dec
adc
adc
push
mov
aad
inc
pop
adc
ror
adc
push
adc
jo
xchg
adc
stos
ja
adc
rcl
adc
add
cmps
popa
push
xchg
lea
adc
out
sbb
push
add
stos
pop
xor
or
sti
and
xor
pop
repz
pusha
jg
inc
adc
xchg
(bad)
pminub
rcl
adc
add
pop
ret
mov
cmps
into
pusha
or
in
mov
mov
ja
add
dec
add
push
sbb
aas
sub
or
adc
inc
ds
mov
and
mov
inc
adc
pusha
xchg
repz
mov
fiadd
mov
shl
in
adc
or
or
loopne
adc
adc
add
adc
adc
(bad)
push
aaa
mov
imul
cmp
cmp
jo
adc
ins
adc
mov
sub
rcl
sub
mov
cmp
rcr
loopne
inc
adc
popf
push
add
pop
inc
xchg
add
or
add
adc
sbb
popf
or
adc
fstp
and
sbb
movs
lods
gs
pop
in
mov
or
add
les
fwait
cmp
cmp
in
pop
add
mov
rol
and
outs
add
sub
mov
ficom
add
sub
xchg
and
add
addr16
js
add
pop
or
xlat
aaa
sbb
or
xchg
xor
scas
mov
mov
add
add
add
dec
mov
fld
add
fcmove
mov
call
mov
scas
pop
dec
and
mov
adc
icebp
sub
sahf
cmp
or
push
push
mov
jg
sbb
sbb
and
add
add
mov
sbb
xchg
lahf
or
lods
test
cmp
add
pusha
lock
add
xor
sub
pop
fiadd
movs
pop
fisttp
mov
call
push
adc
(bad)
jmp
sub
mov
(bad)
mov
or
pop
adc
inc
jmp
imul
mov
push
xchg
pop
sbb
jg
inc
add
mov
jae
mov
ror
and
xlat
daa
xchg
cmp
in
push
dec
div
mov
adc
add
sbb
icebp
(bad)
add
fisttp
fisttp
movaps
jg
jg
mov
sbb
dec
add
sti
jg
inc
pop
inc
outs
mov
imul
jae
and
test
push
mov
ins
int
fneni(8087
pop
inc
cmc
ret
inc
ret
fs
jbe
mov
dec
dec
setnp
fstp
add
adc
add
xchg
phaddsw
pop
or
popf
or
rol
sbb
add
fnstcw
cmps
adc
add
xchg
fisubr
pop
mov
xchg
and
jns
mul
push
pusha
pop
jge
inc
adc
adc
pop
xor
das
or
sgdtd
sbb
inc
push
popa
ins
adc
inc
xor
add
mov
pop
pop
pop
loop
enter
pop
adc
shl
les
stos
mov
fsub
clc
mov
inc
sbb
adc
mov
or
gs
and
inc
push
fidiv
lods
dec
add
jnp
sbb
shl
mov
push
push
mov
adc
cmp
jo
add
or
sub
sub
pop
mov
and
or
popa
imul
rcl
inc
data16
or
or
js
ins
add
and
fmulp
(bad)
pop
sbb
pop
jmp
dec
jnp
push
mov
ret
push
cdq
add
out
adc
push
adc
outs
sti
push
xchg
mov
sbb
jbe
adc
sbb
sub
leave
adc
imul
push
outs
add
ficomp
add
mov
add
mov
or
test
or
add
out
and
pop
out
pop
(bad)
cdq
add
sub
sbb
movs
add
jnp
push
and
jg
or
sbb
push
jmp
sbb
ret
pop
fsubr
sub
ins
xor
dec
and
pop
push
pop
mov
mov
daa
jg
das
xchg
fsub
cmp
daa
sbb
mov
add
arpl
pop
pusha
or
stos
fst
test
clc
push
pop
or
and
shl
loope
xor
out
popa
aas
sbb
pop
ss
push
(bad)
mov
mov
and
push
adc
fst
mov
(bad)
sahf
xor
loopne
add
pop
push
mov
data16
lea
mov
sbb
lock
dec
icebp
pop
pop
adc
loop
loop
adc
pop
mov
push
sub
and
mov
or
inc
mov
aaa
sbb
pushf
aad
and
add
mov
and
add
xor
(bad)
outs
fwait
scas
dec
lods
xor
inc
adc
adc
sti
xchg
push
mov
adc
dec
sbb
test
sub
push
loop
add
(bad)
jg
mov
pop
sub
lds
pop
pusha
shl
test
dec
sbb
xor
cld
daa
lahf
xchg
mov
cmp
jg
repz
mov
imul
fmul
xchg
inc
adc
mov
mov
pop
pop
rol
adc
dec
aad
(bad)
inc
cwde
je
add
ins
add
pop
inc
push
cmps
fsubr
mov
mov
in
add
mov
dec
ficomp
outs
mov
test
ins
fcmovnb
ins
xor
dec
scas
lods
out
ins
sub
cmps
inc
add
push
adc
mov
sbb
outs
in
mov
nop
retf
mov
push
ss
and
add
jo
lods
fwait
push
repnz
xor
outs
push
ja
rcr
mov
fbld
fisubr
and
xor
inc
out
pop
fimul
pop
repz
nop
add
mov
add
adc
cwde
xchg
(bad)
(bad)
out
pop
lock
and
or
cmp
adc
fiadd
leave
and
adc
mov
or
xor
or
mov
add
dec
dec
adc
pop
xor
mov
jnp
push
add
mov
jbe
out
repz
adc
or
jbe
dec
cmp
fcomp
add
sbb
xlat
inc
dec
in
inc
push
inc
jae
dec
shl
adc
inc
fnstcw
idiv
fisub
add
rol
add
jb
sub
jae
adc
das
jo
add
loopne
add
jo
pop
mov
das
pop
push
ins
xchg
add
mov
and
dec
push
jnp
mov
data16
adc
or
adc
dec
dec
dec
sbb
and
ins
add
(bad)
jg
fadd
das
shl
bound
fimul
call
xchg
inc
adc
xor
loop
xchg
and
inc
pop
jbe
or
iret
clc
add
in
in
or
push
sbb
adc
in
and
add
jb
jb
and
xor
inc
cmp
jb
dec
dec
adc
jb
cmp
mov
xchg
xchg
add
rdtsc
inc
xor
mov
xor
add
pop
or
dec
inc
pop
mov
out
push
push
aad
pop
push
dec
or
in
call
xor
(bad)
jg
add
pop
jmp
and
lds
mov
stos
jmp
psubusb
in
aas
rol
pop
outs
aas
es
or
mov
mov
pop
or
pop
sub
inc
pop
push
push
mov
(bad)
aas
push
aad
or
inc
test
pop
mov
mov
scas
lahf
and
inc
fwait
mov
rol
or
push
or
adc
dec
xchg
pushf
pushf
pushf
fmul
aaa
cmp
cmp
pop
pushf
pushf
cmp
cmp
aas
pop
inc
add
mov
outs
ud0
inc
inc
dec
dec
dec
outs
pop
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
daa
dec
dec
dec
inc
dec
dec
fist
add
js
and
shl
or
enter
test
das
dec
lahf
dec
jo
scas
sbb
or
jo
(bad)
pop
mov
jns
ror
in
in
jecxz
call
push
nop
pushf
jmp
or
lock
push
sub
enter
fisubr
fistp
mov
outs
ret
out
push
dec
lods
fistp
(bad)
(bad)
sar
xchg
dec
pop
dec
(bad)
scas
adc
pop
lds
loopne
stos
sub
or
rcr
jge
mov
loopne
stos
(bad)
mov
cmp
scas
adc
aas
mov
adc
iret
and
inc
lods
dec
fbstp
pop
lds
inc
aas
pop
(bad)
(bad)
add
fbld
aas
jg
mov
sbb
and
mov
and
andps
stos
outs
aas
pop
test
das
push
pop
movs
inc
aas
rcl
shl
pop
aad
and
and
mov
cmp
xor
repz
add
fwait
cmp
mov
lods
push
add
ja
push
cmp
adc
jae
test
jns
mov
rcl
xor
ins
sahf
adc
in
movs
xor
jbe
adc
cmp
add
and
dec
sub
add
and
pop
mov
popf
mov
popa
dec
fisttp
add
mov
push
xchg
adc
test
pop
push
mov
mov
in
inc
mov
adc
stos
and
push
das
and
test
jnp
cmps
jecxz
inc
cmp
inc
xchg
adc
jg
pop
push
jno
in
sub
das
cmp
inc
dec
dec
iret
mov
dec
jb
retf
sbb
mov
push
js
add
outs
arpl
push
adc
ins
in
outs
pop
add
sub
jo
adc
dec
jl
pushf
adc
outs
pusha
leave
cmp
jbe
and
iret
fisubr
cld
and
shl
movs
popfw
add
mov
adc
add
adc
js
repnz
shr
xor
adc
push
push
adc
out
push
xor
aas
ror
lods
sbb
sbb
sub
fstp
outs
dec
gs
ins
inc
push
dec
mov
es
mov
adc
sub
sub
gs
fs
jo
push
rol
popa
test
or
and
pop
or
fs
adc
inc
js
mov
mov
add
pop
sub
or
and
fidivr
xchg
ds
adc
pusha
or
icebp
jle
pop
push
inc
adc
jmp
xchg
mov
adc
pushf
adc
xlat
ds
push
dec
dec
mov
cmp
out
adc
in
cmp
xchg
xor
push
inc
cmp
mov
adc
or
jno
fild
adc
outs
arpl
sti
shl
xor
and
cmp
add
jnp
xor
inc
push
xor
in
adc
(bad)
nop
mov
inc
dec
rcr
cld
add
sbb
jo
jb
mov
rcr
pusha
sub
cld
inc
gs
add
(bad)
int
inc
add
sub
clc
es
fisub
adc
jno
(bad)
loopne
nop
sbb
movs
jnp
adc
aad
add
out
dec
push
push
mov
push
xchg
adc
(bad)
rol
sub
sub
rcl
add
jae
popa
jmp
adc
or
and
push
call
imul
xlat
(bad)
adc
call
mov
push
mov
adc
jge
mov
adc
push
std
pop
jle
ins
jmp
push
ret
adc
dec
push
push
aas
pop
pop
push
or
push
dec
and
imul
jae
jae
mov
out
sbb
and
fwait
inc
out
sbb
dec
ja
pop
retf
xor
inc
jne
outs
pop
dec
push
pop
fwait
std
dec
jmp
ficomp
inc
ins
outs
cmp
sbb
inc
popf
out
(bad)
sbb
mov
inc
inc
ins
sbb
loopne
and
popa
ja
and
or
jg
dec
dec
cmps
sub
inc
icebp
int3
pushf
dec
sbb
imul
inc
xor
jae
aad
push
outs
adc
cmps
push
cmovb
dec
inc
dec
(bad)
fidiv
sbb
push
aas
rcl
sub
sahf
jo
mov
imul
lock
fwait
push
lock
or
aaa
add
jge
xchg
add
loope
add
dec
fs
sbb
cld
ja
add
add
mov
and
push
dec
cmp
push
outs
jne
push
cmp
inc
push
push
sub
test
fwait
sub
push
add
(bad)
dec
and
cdq
mov
adc
xor
mov
data16
add
inc
push
hlt
mov
mov
inc
mov
and
cmps
ja
mov
add
cwde
push
out
cmps
cmp
push
add
sbb
and
inc
pop
dec
inc
dec
(bad)
ficomp
and
ret
fcom
cwde
or
dec
xchg
in
sbb
out
sbb
xchg
test
retf
jns
xor
xor
daa
xchg
lds
or
and
sub
push
or
xor
pop
dec
sbb
ret
adc
fidiv
jae
sbb
sar
loopne
push
ins
mov
add
push
gs
dec
pop
add
outs
aad
adc
int
loopne
mov
push
mov
or
loop
xchg
add
add
inc
daa
mov
and
leave
gs
or
mov
push
pop
dec
dec
cmp
popa
inc
cs
cli
mov
pop
sti
aas
js
jmp
jmp
push
and
scas
cmp
and
imul
xor
inc
gs
dec
jp
push
jp
push
arpl
ins
out
jmp
cmp
and
cmp
push
ins
pop
ja
cdq
mov
push
sub
add
inc
je
xor
cld
push
and
and
xor
xor
aaa
cmp
xor
and
int
pop
outs
das
xor
sub
cmp
outs
sti
fild
fidiv
data16
inc
xlat
sbb
(bad)
retf
test
cmp
das
ja
cs
cs
addr16
loopne
mov
add
sub
sub
and
cmps
jb
mov
pop
popa
ins
mov
(bad)
bound
xchg
and
sbb
pusha
das
js
dec
mov
outs
mov
dec
dec
push
and
aas
out
pop
jae
push
data16
add
das
cdq
dec
push
out
pop
and
or
or
or
outs
and
jo
inc
and
xchg
push
lock
sub
cmp
dec
inc
pop
and
imul
inc
inc
cmp
ss
xor
inc
xor
les
inc
xor
xor
inc
cmp
leave
mov
add
aaa
and
mov
mov
push
retf
and
cmp
xor
sub
vmovupd
xor
xchg
repz
and
mov
fdiv
jecxz
inc
stos
add
icebp
outs
(bad)
mov
xchg
xor
xor
inc
arpl
xchg
adc
add
(bad)
(bad)
jp
out
add
sub
sbb
cmp
sub
sbb
ins
and
sbb
ret
(bad)
(bad)
(bad)
inc
stc
mov
aas
inc
inc
xor
xor
xchg
jno
stos
icebp
jecxz
xor
cs
dec
fld
outs
xchg
(bad)
(bad)
(bad)
call
push
sub
jmp
mov
add
mov
out
jge
dec
fnsave
dec
(bad)
jmp
mov
loope
add
adc
and
cmp
cmp
mov
inc
(bad)
and
fisubr
loopne
outs
cli
gs
mov
pop
adc
push
jg
or
(bad)
(bad)
call
pop
gs
pop
mov
fdiv
repnz
mov
fwait
mov
(bad)
(bad)
(bad)
inc
outs
fcomip
cmp
cmps
icebp
adc
pop
mov
cmc
ds
in
push
into
outs
mov
add
(bad)
cli
in
jae
mov
imul
scas
inc
pusha
xor
stc
in
cmp
ror
xor
fisub
adc
push
ins
(bad)
jge
add
arpl
dec
jp
and
data16
or
(bad)
jmp
ret
aaa
add
push
cmp
lds
(bad)
(bad)
cld
add
outs
ret
and
xor
adc
into
xchg
mov
adc
xchg
dec
ins
addr16
daa
pop
and
inc
xchg
xchg
xchg
inc
shld
xchg
pop
or
out
(bad)
(bad)
inc
mov
pushf
jnp
js
push
clc
out
xlat
cmc
scas
rol
inc
add
idiv
sti
(bad)
push
je
in
adc
jp
xchg
or
std
lea
cmps
sar
sbb
fs
(bad)
(bad)
(bad)
fisttp
dec
out
lods
push
cmps
xor
ja
or
mov
lahf
jmp
retf
mov
mov
(bad)
push
add
lahf
fimul
xchg
pop
mov
mov
mov
xlat
adc
jae
(bad)
(bad)
(bad)
call
sahf
outs
mov
xlat
imul
scas
add
(bad)
dec
stc
jmp
mov
(bad)
inc
fdiv
adc
mov
push
jp
arpl
getsec
and
inc
movs
mov
ins
xor
jecxz
pusha
and
inc
cmps
(bad)
(bad)
lods
int
sar
call
fs
jae
add
mov
fisub
in
xchg
int
aas
sub
cmp
(bad)
(bad)
jmp
push
pusha
push
aas
shl
inc
adc
xchg
adc
imul
data16
(bad)
(bad)
(bad)
mov
inc
inc
leave
int
imul
aaa
scas
and
and
fist
loope
scas
(bad)
(bad)
call
push
mov
or
popf
repnz
cmp
cmp
iret
jbe
inc
mov
jmp
add
add
call
test
pop
mov
outs
pop
sbb
pop
jle
xchg
loop
mov
(bad)
and
imul
inc
mov
(bad)
cld
pop
and
test
push
mov
lods
inc
sbb
clc
pop
stos
add
xor
das
pop
scas
call
lock
rcl
call
out
shr
fnstcw
popf
(bad)
hlt
xor
lahf
xchg
inc
xor
(bad)
(bad)
inc
test
or
pop
push
in
lds
add
xchg
or
call
or
mov
xchg
sbb
xchg
adc
jl
test
pop
dec
enter
push
(bad)
(bad)
(bad)
(bad)
aas
into
mov
retf
out
push
mov
cdq
sar
clc
out
lea
mov
in
out
mov
sbb
sub
add
pop
test
call
mov
pop
and
lahf
xchg
sbb
dec
or
ss
cld
call
aaa
xor
xor
xor
xor
cmp
mov
or
or
xor
add
and
jae
ins
inc
adc
xchg
inc
inc
mov
enter
mov
arpl
in
in
shl
das
gs
test
push
loope
loopne
xor
and
mov
test
ds
xor
pop
xor
js
xor
pop
cmp
push
mov
xor
gs
add
fidivr
sti
sar
ja
ss
xor
sub
cmp
(bad)
rcr
pop
xor
imul
xor
xor
cmp
aaa
push
inc
push
fidiv
cmp
sbb
mov
ds
xlat
(bad)
(bad)
xor
cmp
bound
sub
imul
xor
aaa
arpl
mov
xchg
sbb
repz
pop
inc
inc
cmp
xor
ss
ss
xor
imul
test
inc
sub
xor
push
stos
les
test
movs
jo
jecxz
mov
cmp
inc
mov
pop
imul
push
add
shl
mov
cmp
sbb
aad
pusha
push
ret
cmovg
lods
popa
ins
ins
mov
or
dec
es
xor
push
gs
xor
mov
adc
movs
or
xchg
cmp
aaa
jae
loop
adc
imul
jge
sub
mov
push
ins
mov
adc
sbb
aad
ins
mov
cmp
jno
xchg
loop
pop
inc
das
inc
xor
mov
cld
adc
arpl
xor
xor
rol
test
sbb
sbb
dec
push
pop
cmp
adc
pop
sub
xor
(bad)
add
push
sub
inc
sar
ds
rol
xor
pop
leave
out
ret
mov
jne
aaa
call
jb
mov
jne
add
push
enter
fisubr
adc
sub
ret
int
jmp
xor
inc
or
sub
dec
jae
xor
cmp
jae
sbb
rol
pop
push
movs
sbb
xor
test
add
inc
push
adc
mov
or
ja
jg
push
add
adc
jne
pop
lock
mov
cmp
imul
or
sub
and
mov
mov
sub
popf
jno
xchg
retf
sti
(bad)
(bad)
call
sbb
pop
inc
inc
inc
test
cmp
lods
or
dec
pop
dec
xlat
xor
push
jg
call
inc
(bad)
pop
lahf
out
cmps
dec
lahf
daa
cmp
sti
retf
(bad)
sahf
jae
idiv
push
jno
dec
pop
and
lea
inc
mov
or
(bad)
(bad)
(bad)
jnp
retf
add
and
adc
inc
aam
inc
mov
and
xor
jo
and
adc
jl
lock
mov
sar
add
int3
or
sahf
adc
dec
or
into
pop
jo
pop
sbb
xchg
jg
vsubps
push
pushf
cs
(bad)
(bad)
call
adc
xor
inc
mov
rol
dec
xor
xor
call
dec
cwde
sbb
mov
enter
mov
xchg
push
int3
or
dec
idiv
mov
and
das
movs
fdivr
out
mov
(bad)
out
les
mov
bound
push
inc
(bad)
popf
aaa
pmullw
add
adc
jmp
push
pusha
pop
movs
inc
sar
dec
sub
mov
pop
in
fimul
cld
repz
cwde
sbb
mov
(bad)
call
push
enter
jb
mov
ret
stc
xor
stos
mov
in
cmp
idiv
jmp
and
test
jnp
xchg
xchg
push
pop
jmp
imul
and
or
cmp
or
and
jo
dec
sbb
pushf
icebp
dec
fdiv
adc
daa
bound
(bad)
inc
adc
sub
sti
imul
pushw
loope
jp
(bad)
(bad)
push
out
jg
or
aad
scas
leave
sbb
xlat
arpl
repz
mov
(bad)
(bad)
push
adc
mov
mov
lahf
xchg
inc
lsl
movs
ror
mov
jge
nop
cmp
lock
xchg
hlt
mov
(bad)
(bad)
(bad)
out
mov
lods
or
ret
jbe
adc
mov
xchg
inc
data16
les
das
movs
call
cmc
imul
or
hlt
cli
jle
(bad)
stos
add
scas
mov
push
xlat
fmul
(bad)
(bad)
cmp
xlat
sbb
stc
adc
stos
or
xor
inc
(bad)
(bad)
(bad)
jg
cmps
fstp
mov
punpckhdq
sub
pusha
ror
icebp
aad
sub
adc
(bad)
(bad)
(bad)
dec
jecxz
fwait
icebp
rol
outs
xlat
adc
jbe
out
call
aas
cs
icebp
clc
(bad)
(bad)
(bad)
out
sub
dec
adc
in
aam
or
dec
leave
sbb
dec
das
push
or
(bad)
jmp
jno
mov
mov
lahf
into
into
cmp
aaa
(bad)
ficom
inc
mov
xchg
leave
shl
sbb
mov
icebp
enter
(bad)
(bad)
(bad)
dec
mov
movs
and
mov
(bad)
jge
xchg
sub
(bad)
inc
sub
(bad)
(bad)
call
pop
jo
(bad)
mov
cmp
xor
dec
fwait
push
cwde
xor
sub
les
add
(bad)
jmp
add
adc
or
lock
pop
lock
lahf
sbb
out
gs
iret
mov
xor
shl
jbe
adc
add
push
jno
pop
stos
fcomip
fwait
clc
mov
cld
adc
(bad)
(bad)
(bad)
out
stos
jecxz
add
inc
shl
hlt
out
dec
pop
adc
pop
jle
push
sti
fdivr
out
and
fisub
loop
pmulhw
leave
mov
inc
mov
mov
out
mov
test
adc
mov
cmp
in
pusha
inc
jl
mov
sub
add
mov
aad
adc
(bad)
pop
jecxz
addr16
cld
call
(bad)
mov
ret
push
add
sub
push
jo
adc
test
mov
mov
je
xlat
cmp
ja
cmp
mov
aas
xchg
jecxz
xchg
mov
jl
xchg
adc
shl
push
adc
sar
dec
jmp
mov
inc
jo
inc
add
or
mov
add
das
cli
dec
neg
fwait
rcl
pop
and
jns
loope
(bad)
mov
cmc
mov
pop
sar
not
iret
mov
call
(bad)
push
pushf
gs
xor
lds
aad
nop
sub
loope
iret
and
jle
(bad)
(bad)
(bad)
(bad)
mov
sbb
(bad)
ds
test
mov
pop
xchg
retf
into
sti
pop
nop
sbb
or
mov
out
shl
icebp
fsubr
jo
cdq
pop
jmp
sub
loop
cmps
popf
jae
inc
in
sbb
push
mov
mov
add
in
inc
lods
popf
(bad)
(bad)
(bad)
(bad)
jg
scas
mov
scas
jno
mov
pop
inc
lods
adc
nop
sub
pop
xchg
or
addr16
add
(bad)
(bad)
clc
adc
inc
test
test
jecxz
add
jns
outs
lods
fisubr
mov
jg
jbe
adc
jg
pop
jl
pop
out
fs
and
inc
(bad)
(bad)
(bad)
jmp
div
jnp
aas
xlat
clc
cmp
push
jle
adc
inc
inc
sbb
call
jmp
pop
mov
mov
cdq
mov
mov
jg
stos
or
sar
(bad)
dec
add
pop
scas
mov
ins
add
lods
repz
(bad)
adc
xor
(bad)
(bad)
jg
and
fstp
pusha
or
out
push
cmp
xor
cmp
xor
std
js
(bad)
dec
lock
dec
enter
pop
call
ins
repz
pop
inc
pop
mov
dec
cmps
stos
or
pop
cmp
(bad)
cmp
ins
test
add
out
mov
repnz
pusha
loopne
in
and
lea
hlt
and
jbe
mov
sar
xchg
in
test
je
pop
call
loopne
jb
jl
adc
sbb
xor
sbb
ret
cmp
xor
mov
nop
cmp
lods
push
push
stos
jbe
push
(bad)
jg
mov
xchg
jmp
sbb
retf
mov
inc
cmc
xchg
sbb
test
jo
sub
dec
(bad)
(bad)
(bad)
(bad)
(bad)
in
imul
xor
loop
into
lahf
pop
mov
ds
push
pop
and
inc
call
jmp
fmul
in
out
mov
adc
xchg
icebp
mov
pop
out
or
icebp
(bad)
dec
xchg
and
pop
(bad)
pusha
arpl
mov
stc
repz
xlat
(bad)
call
ins
jo
cmp
fdivr
inc
push
or
cli
(bad)
enter
(bad)
(bad)
(bad)
jmp
imul
mov
or
sbb
test
iret
scas
out
cld
stc
mov
push
loop
mov
(bad)
call
jmp
jb
loop
mov
jns
or
(bad)
mov
test
scas
(bad)
(bad)
jmp
mov
mov
jae
add
xchg
mov
(bad)
call
push
pusha
in
mov
adc
pop
lea
fsub
jmp
sub
(bad)
(bad)
inc
push
push
ret
inc
retf
lahf
repz
push
cmp
xor
lods
inc
xchg
dec
add
sbb
(bad)
(bad)
push
jne
ret
mov
jmp
(bad)
(bad)
(bad)
mov
and
mov
sub
in
das
dec
xor
xlat
cmp
adc
inc
jno
enter
stos
ret
lods
mov
cmc
mov
push
jb
xchg
call
jne
mov
mov
test
(bad)
push
js
aaa
cmp
and
stos
ins
fimul
pusha
fisub
clc
(bad)
mov
js
add
mov
inc
call
cmp
popa
fst
out
clc
xlat
cmp
cmp
sub
jne
dec
push
mov
shl
mov
adc
pop
push
pop
cmps
retf
lea
(bad)
(bad)
(bad)
call
lds
cmp
cdq
fcomp
mov
dec
bswap
mov
fiadd
mov
(bad)
out
sub
jl
jns
ret
icebp
scas
mov
out
and
int
shl
je
popa
out
(bad)
(bad)
(bad)
call
mov
and
push
mov
pop
pop
mov
dec
mov
lahf
sub
stos
mov
sub
adc
call
cmp
test
ja
jmp
fwait
cdq
or
(bad)
(bad)
push
jle
adc
cmp
mov
cmp
jns
das
mov
mov
xor
stos
cmp
fist
fsubr
clc
fisttp
lahf
xor
adc
push
(bad)
(bad)
call
gs
adc
lods
into
das
ret
fcmovnbe
mov
adc
xlat
(bad)
(bad)
dec
pop
fcom
outs
cmp
cli
sbb
push
lahf
icebp
ror
fidivr
ins
in
add
fmul
xchg
add
movs
shl
test
rcr
mov
into
in
dec
shl
push
loop
pop
in
xlat
add
addr16
sbb
fdivr
add
retf
pushf
xchg
add
xor
(bad)
call
loope
cmp
and
dec
fdivr
inc
or
loopne
pop
mov
push
mov
mov
cld
adc
pop
mov
test
inc
add
sub
jo
add
sbb
sub
neg
cmc
dec
(bad)
(bad)
(bad)
dec
pop
or
and
inc
je
movs
adc
and
in
pop
movs
daa
jmp
pushf
adc
cld
in
(bad)
xor
pop
test
(bad)
lock
sub
dec
inc
jne
jmp
iret
mov
jb
jg
(bad)
mov
and
dec
test
outs
pop
xlat
icebp
call
push
loope
and
(bad)
(bad)
(bad)
std
pop
push
imul
add
mov
inc
xchg
sbb
fldenv
into
mov
(bad)
jmp
add
enter
xor
stos
gs
cld
out
push
and
hlt
mov
std
push
sub
jnp
mov
(bad)
or
sbb
dec
and
(bad)
(bad)
jg
jl
add
jp
mov
lahf
jg
sbb
in
nop
and
push
cmc
(bad)
jmp
cli
sub
xchg
adc
jp
adc
cdq
pop
(bad)
(bad)
(bad)
fistp
rcl
movs
pop
jle
repnz
shr
loop
dec
mov
scas
imul
(bad)
call
sbb
mov
cmp
mov
pop
out
pop
out
xchg
(bad)
(bad)
inc
in
pop
out
mov
(bad)
ret
out
xchg
in
jge
arpl
sahf
fld
sar
paddb
inc
xchg
and
(bad)
adc
enter
mov
xchg
pusha
(bad)
(bad)
(bad)
(bad)
jmp
and
jge
cmps
out
and
push
xchg
xchg
push
in
jmp
jns
jg
xchg
pop
adc
aas
scas
fwait
popf
sbb
in
mov
jg
dec
fisttp
sbb
xor
test
or
das
mov
(bad)
fwait
mov
pusha
mov
popa
shr
mov
jmp
sbb
(bad)
bound
sbb
ficomp
repnz
mov
lods
pop
xchg
xchg
fist
fdivp
jecxz
fmul
pusha
imul
(bad)
(bad)
(bad)
fcmovnbe
jmp
enter
cmp
test
jo
sub
sbb
xor
aad
in
(bad)
(bad)
(bad)
inc
add
mov
pop
nop
cdq
fs
inc
mov
and
xor
mov
nop
sub
(bad)
jg
xchg
pop
xchg
pop
out
dec
dec
ss
test
fcmove
jo
(bad)
(bad)
jg
pop
push
or
xchg
les
sbb
mov
fwait
pop
fld
jg
dec
(bad)
repz
pushf
pop
cmp
jl
sub
(bad)
(bad)
clc
dec
(bad)
xor
pop
enter
(bad)
and
or
imul
sbb
(bad)
(bad)
(bad)
(bad)
stc
scas
(bad)
retf
loope
gs
adc
shl
xchg
mov
pop
mov
inc
and
jno
pop
sub
(bad)
xlat
adc
fist
scas
cmp
mov
(bad)
(bad)
push
ss
hlt
xor
inc
cmp
imul
jne
push
int
sahf
mov
or
xor
(bad)
(bad)
dec
adc
adc
ins
pop
xor
mov
xor
popf
sub
mov
xchg
jno
in
sbb
push
jle
xlat
(bad)
call
fwait
lods
test
ins
mov
(bad)
inc
movs
cs
push
mov
arpl
(bad)
dec
not
mov
mov
ins
sbb
cld
(bad)
mov
cwde
loope
adc
add
pop
push
push
sub
push
js
clc
jg
(bad)
adc
aaa
adc
and
cmp
ins
(bad)
(bad)
jmp
test
fisubr
inc
dec
adc
(bad)
loope
cmp
push
push
sahf
pop
jb
xchg
movs
jnp
lods
mov
push
sub
and
test
pop
test
pop
push
pusha
fimul
push
pop
rol
(bad)
inc
hlt
lea
push
imul
cwde
cmp
push
adc
jmp
icebp
aam
adc
addr16
out
mov
iret
dec
dec
les
call
pop
lods
(bad)
pop
pop
inc
push
xchg
xlat
pop
pop
daa
and
or
(bad)
(bad)
(bad)
push
jbe
cmp
adc
mov
test
stos
pop
adc
jno
in
sub
popa
ret
in
mov
mov
std
inc
jno
sbb
push
xchg
stc
ret
pop
mov
fadd
(bad)
call
cmp
mov
push
jl
cmps
add
add
push
mov
dec
xchg
or
mov
scas
(bad)
(bad)
(bad)
(bad)
aas
jp
scas
sbb
xor
mov
jmp
mov
aaa
push
das
(bad)
jle
push
pop
mov
xchg
gs
push
cld
fwait
add
fucomip
stos
mov
in
cmc
int3
mov
cmp
push
cmp
ja
dec
call
mov
add
mov
(bad)
(bad)
push
mov
or
loopne
es
mov
push
push
cs
cmps
add
(bad)
(bad)
(bad)
fisub
in
scas
sub
xor
sub
jle
push
arpl
(bad)
popf
test
cmp
(bad)
(bad)
(bad)
(bad)
jmp
dec
push
out
(bad)
lods
add
push
jmp
(bad)
and
xor
xchg
pop
ins
(bad)
(bad)
(bad)
call
pop
sti
dec
(bad)
stc
mov
cwde
adc
mov
mov
ja
shl
sub
call
push
push
mov
dec
cmp
add
retf
sub
jl
ds
repnz
jmp
push
or
mov
xlat
jle
cmp
or
(bad)
(bad)
inc
clc
(bad)
jmp
fild
stos
sub
adc
fcomp
mov
mov
test
jnp
lock
call
pop
(bad)
push
xchg
loopne
mov
in
add
(bad)
(bad)
jmp
push
mov
fbstp
jg
push
mov
out
scas
dec
shl
(bad)
inc
xor
int3
push
js
cmp
test
jg
adc
mov
rcr
cmp
dec
mov
leave
cmp
cli
outs
push
push
mov
fs
(bad)
(bad)
jmp
(bad)
test
dec
and
popf
std
jle
scas
cmps
data16
lock
mov
(bad)
out
cmps
cli
retf
cmp
jge
in
lea
inc
outs
xor
lods
arpl
push
rol
mov
outs
mov
(bad)
ins
pusha
adc
jmp
lds
test
call
inc
jge
or
(bad)
(bad)
(bad)
(bad)
mov
inc
dec
xor
gs
adc
jns
fldlg2
mov
xlat
rcr
neg
jbe
push
mov
dec
mov
add
js
or
rcr
and
push
xor
and
xlat
ret
imul
inc
lods
xlat
and
mov
outs
stos
ret
and
inc
xor
rcr
add
(bad)
(bad)
call
lock
rcl
mov
cli
jp
mov
stos
mov
movs
(bad)
jg
mov
sbb
sbb
jmp
enter
fwait
or
and
pop
icebp
sbb
and
jmp
(bad)
call
inc
in
pop
mov
and
nop
pop
mov
xchg
pop
into
and
jmp
(bad)
push
xlat
jo
aaa
adc
outs
and
add
mov
call
sub
leave
(bad)
mov
or
xor
mov
dec
jp
loope
adc
add
shr
stos
jg
scas
(bad)
out
cmps
xor
cmp
adc
retf
test
sti
mov
push
push
fnstenv
call
retf
sub
pushw
push
nop
iret
popa
adc
jp
xor
mov
push
ret
push
sbb
adc
xor
pop
cli
mul
or
xor
dec
push
in
ins
mov
mov
sub
adc
ret
cmp
lock
pop
mov
or
xor
add
loop
outs
fdivr
repnz
xor
cmp
xor
cmp
xor
lea
(bad)
mov
xor
data16
test
sub
arpl
xor
jg
xor
pop
inc
inc
cld
call
inc
cmp
aaa
inc
inc
xor
xor
inc
cmp
aaa
inc
nop
or
xchg
pop
cmp
dec
movs
(bad)
mov
test
test
push
xor
stos
(bad)
jge
test
push
leave
adc
add
inc
repnz
cmp
or
adc
sub
push
cmp
xor
pop
ja
adc
xlat
jle
pop
pusha
cmp
mov
out
mov
(bad)
push
xor
rcr
fsub
mov
add
fstp
lds
and
add
inc
lea
idiv
arpl
jne
or
repz
pop
out
cmp
cmp
neg
mov
add
and
sahf
aas
jp
sbb
nop
(bad)
(bad)
mov
adc
push
sbb
dec
and
adc
push
imul
jmp
mov
inc
mov
sub
and
and
call
cmp
push
in
add
sbb
std
in
imul
sbb
jnp
ss
add
outs
(bad)
and
sti
xor
mov
mov
cvttps2pi
add
xchg
ss
(bad)
mov
ss
pop
sbb
adc
inc
(bad)
(bad)
jmp
or
sbb
inc
test
sbb
movs
jl
sub
mov
(bad)
and
(bad)
(bad)
(bad)
inc
mov
fbstp
pop
add
inc
fdivr
cmps
fcmove
pop
test
add
inc
bound
push
xchg
in
clc
pusha
mov
in
cmp
sbb
xlat
cdq
dec
xor
ins
add
jne
jmp
mov
adc
sub
xchg
call
mov
icebp
lds
(bad)
(bad)
push
cmps
in
rol
pop
mov
leave
mov
sub
mov
mov
ins
gs
aaa
cmp
fisttp
sti
dec
or
iret
outs
jg
push
inc
stos
(bad)
fdiv
and
(bad)
(bad)
(bad)
(bad)
fdivr
adc
sub
call
ss
or
(bad)
push
(bad)
popf
adc
and
pushf
mov
aad
cmp
inc
jbe
in
jecxz
push
(bad)
jmp
imul
mov
cmc
sbb
mov
div
cmp
ret
repz
retf
(bad)
(bad)
(bad)
push
xor
xchg
and
test
lods
xchg
sub
push
xchg
xchg
popf
and
rcl
imul
rcl
and
ret
popf
out
or
movs
nop
push
jmp
cmc
jle
call
sbb
mov
add
sbb
xor
jg
xchg
cmp
retf
fiadd
jae
push
mov
(bad)
aas
push
out
out
push
xchg
fdivp
scas
pop
adc
sbb
push
adc
(bad)
(bad)
(bad)
push
cmp
cmp
inc
mov
mov
sti
pusha
dec
call
cmc
fbld
(bad)
call
stc
psrlw
push
xchg
sbb
jl
inc
retf
test
sbb
push
into
hlt
dec
rol
cmp
dec
test
aaa
pushf
push
add
mov
jae
adc
jmp
(bad)
mov
call
jle
fwait
out
ins
stos
adc
arpl
xchg
xchg
(bad)
fbstp
push
(bad)
iret
sub
fdiv
inc
jecxz
loopne
mov
(bad)
(bad)
call
ret
addr16
test
ins
icebp
jle
push
repnz
aam
mov
fnstsw
jae
lahf
cmps
idiv
(bad)
(bad)
jmp
xchg
mov
push
dec
dec
cmps
cmps
and
ror
std
pop
loopne
add
(bad)
(bad)
(bad)
jmp
clc
je
adc
xor
push
test
lock
popa
loop
out
push
mov
cli
jns
idiv
jmp
cmps
cmps
(bad)
push
enter
jecxz
hlt
mov
or
cld
mov
cmp
(bad)
(bad)
adc
call
xchg
mov
mov
nop
xor
test
add
std
(bad)
(bad)
jmp
inc
adc
or
sub
stos
fcomp
or
inc
daa
call
neg
pop
xor
or
cli
ja
mov
jmp
pop
loop
mov
cmp
dec
mov
(bad)
inc
push
scas
call
push
mov
mov
popf
add
ins
imul
(bad)
jne
ss
sti
add
cmps
int
in
mov
xchg
lock
sub
mov
std
(bad)
push
mov
fist
arpl
daa
sbb
cli
ins
(bad)
jp
push
pop
mov
xor
loope
cmp
mov
out
in
sub
cmp
es
mov
into
cwde
shl
jo
loopne
pop
iret
mov
(bad)
in
sbb
imul
sbb
(bad)
jmp
xor
sbb
ret
cmps
jmp
mov
mov
xlat
xchg
ss
outs
xor
clc
(bad)
jmp
pusha
fsub
retf
and
xchg
push
movs
jp
icebp
cmc
dec
mov
(bad)
(bad)
(bad)
(bad)
call
bound
pop
out
mov
cli
sti
push
inc
repz
cli
and
push
xor
(bad)
(bad)
mov
inc
in
mov
pop
out
mov
das
cwde
mov
cli
mov
out
or
mov
push
sbb
push
call
or
jmp
sub
jne
add
push
add
imul
mov
pop
jnp
pop
jns
cmp
mov
pop
addr16
(bad)
(bad)
push
sub
dec
xor
and
rcr
cdq
fimul
mov
(bad)
retf
xchg
stos
xchg
(bad)
in
(bad)
push
cmp
mov
or
jl
jns
enter
(bad)
mov
sbb
(bad)
(bad)
out
fstp
or
mov
push
(bad)
cs
outs
cmps
add
cdq
lahf
cmp
(bad)
(bad)
dec
jg
lahf
mov
into
inc
adc
push
fnstenv
stos
ja
sahf
test
mov
sbb
cli
call
repz
cli
imul
mov
adc
jne
mov
xor
in
retf
ret
sub
add
sar
inc
mov
pop
xchg
mov
imul
push
mov
call
cmp
scas
lods
xchg
xchg
fimul
cmp
xlat
mov
add
sbb
pop
(bad)
(bad)
(bad)
(bad)
jge
push
jmp
jmp
int
imul
gs
dec
push
add
jb
(bad)
(bad)
(bad)
jmp
rcl
imul
jmp
xor
in
cmp
mov
add
cmp
fist
shr
or
(bad)
cmp
push
int3
or
pop
out
jmp
stos
add
std
call
xchg
push
push
jo
sub
jmp
mov
pop
popa
rcl
dec
hlt
out
inc
lahf
sub
xchg
popf
push
add
movs
repz
cli
mov
imul
retf
ja
outs
sti
(bad)
(bad)
(bad)
fdivr
pop
mov
int3
push
mov
neg
jbe
sti
sub
rol
sbb
inc
or
push
xchg
xchg
(bad)
adc
movs
int
rcl
and
inc
pop
jg
sar
xchg
cwde
push
jnp
and
sbb
dec
mov
push
mov
(bad)
push
loope
sbb
in
sub
ss
add
mov
(bad)
das
sbb
(bad)
(bad)
push
dec
dec
inc
daa
pop
jne
sbb
fcom
les
ret
xlat
dec
aad
sub
test
pop
xor
adc
xor
mov
repz
(bad)
hlt
(bad)
inc
mov
mov
lods
push
fld
out
movs
out
xchg
mov
push
(bad)
jmp
mov
push
imul
mov
popf
(bad)
stc
in
jmp
or
push
retf
(bad)
(bad)
mov
pop
cmc
dec
je
push
and
loopne
out
(bad)
(bad)
(bad)
jmp
cs
pop
movs
in
call
popa
dec
jge
sbb
jmp
mov
adc
mov
outs
push
cmp
xchg
retf
pushf
pop
std
dec
jle
popf
pop
pop
mov
inc
out
sub
mov
sbb
cmp
lahf
pop
cld
pop
push
retf
mov
cdq
js
aam
int3
add
fcomp
hlt
(bad)
loopne
test
xchg
leave
mov
jo
mov
(bad)
mov
dec
ja
fwait
mov
repnz
mov
jns
mov
dec
retf
dec
out
fnstsw
mov
jmp
inc
je
mov
jp
daa
pushf
rcr
xor
cmc
(bad)
inc
add
repnz
pop
out
cmps
xchg
xor
dec
loop
adc
aam
mov
out
ret
(bad)
cs
dec
out
fcom
enter
mov
repz
sti
cmp
fdivr
xlat
aas
clc
(bad)
out
cs
out
mov
out
in
mov
mov
push
pop
mov
std
jg
xlat
sbb
fisttp
sub
sbb
jp
cli
stos
and
jnp
jmp
mov
add
cmps
shl
jns
(bad)
(bad)
jg
inc
fidivr
sbb
cmp
loop
(bad)
cmp
fcmovnu
cwde
(bad)
(bad)
(bad)
jmp
mov
adc
iret
or
mov
xor
leave
cmp
jmp
sub
gs
(bad)
(bad)
(bad)
call
call
adc
fcmove
cmp
sub
xchg
push
sub
out
call
nop
mov
(bad)
fcomip
inc
shl
jo
out
and
in
dec
jbe
mov
adc
mov
jmp
add
mov
clc
imul
scas
loope
out
xor
mov
call
sbb
mov
je
mov
(bad)
fcomip
or
cld
push
sub
inc
js
jg
hlt
movs
cmps
loope
sahf
movs
es
jmp
scas
cld
push
loopne
fld
mov
add
jb
or
shl
ins
movs
clc
lods
(bad)
push
pushf
jp
adc
lods
test
call
(bad)
call
mov
test
xor
mov
sbb
mov
push
rcl
dec
add
mov
sub
(bad)
imul
inc
ret
ret
(bad)
(bad)
jmp
rcl
fneni(8087
nop
mov
movs
cmp
push
mov
ins
mov
xor
pop
jl
rol
cli
cmp
test
imul
jle
jg
jmp
adc
adc
jae
dec
fst
repz
aam
mov
jae
adc
pop
mov
icebp
(bad)
(bad)
out
add
and
movs
sub
out
sub
sub
inc
fs
add
(bad)
push
adc
or
in
xlat
pop
fcom
(bad)
retf
dec
push
dec
das
rcr
push
jnp
ins
int
sahf
xchg
(bad)
mov
push
push
dec
jne
in
push
mov
adc
cmp
rcr
or
mov
fsub
les
sbb
(bad)
inc
xor
bnd
jge
sbb
sbb
cmp
lock
xor
(bad)
(bad)
(bad)
(bad)
jle
fs
cmp
pop
rol
stos
sbb
cli
cld
in
cmc
jmp
inc
lahf
cld
or
clc
(bad)
(bad)
(bad)
(bad)
cli
int3
jo
push
fisubr
(bad)
add
adc
jle
add
outs
out
gs
mov
aaa
cld
(bad)
call
dec
inc
xchg
arpl
fistp
cli
and
xchg
imul
(bad)
(bad)
aas
js
cmp
imul
jp
in
cwde
inc
out
out
loop
dec
retf
retf
pop
stc
xor
adc
jbe
pop
mov
push
test
daa
ins
mov
lods
sub
ret
int
(bad)
(bad)
dec
imul
retfw
ins
add
sbb
inc
seta
lock
pop
movs
inc
(bad)
(bad)
(bad)
(bad)
(bad)
lea
mov
(bad)
sar
test
fs
push
pop
push
loope
xor
xchg
add
fstp
push
(bad)
jmp
mov
inc
sbb
fdivr
xchg
cmovle
cmp
push
(bad)
(bad)
(bad)
jg
xchg
hlt
sar
cmc
sbb
dec
xchg
daa
xchg
test
dec
pop
setbe
cmp
(bad)
(bad)
(bad)
jmp
or
adc
push
cmp
xchg
jmp
(bad)
pop
push
xchg
les
jg
pop
jge
pusha
push
mov
jb
test
(bad)
in
mov
inc
int3
psrad
push
pop
mov
fiadd
jbe
mov
loope
xor
mov
lock
jmp
sub
jecxz
mov
mov
aaa
fnsave
mov
je
jg
mov
jp
mov
outs
xor
jne
push
test
jmp
(bad)
jnp
mov
icebp
or
mov
das
ins
inc
and
add
jmp
or
push
ret
push
lock
(bad)
(bad)
(bad)
jmp
xchg
test
push
xlat
in
jb
shr
adc
call
mov
add
fstp
lock
sbb
mov
enter
arpl
mov
std
(bad)
jmp
(bad)
in
test
and
icebp
xchg
cmp
aam
pop
pop
out
jmp
(bad)
(bad)
call
cmps
outs
mov
les
aad
out
push
adc
test
cld
inc
rcr
in
ja
sar
jg
jmp
fdivr
hlt
push
pop
inc
bound
jmp
mov
outs
(bad)
fstp
call
lods
push
xor
xchg
fsub
iret
addr16
adc
mov
push
daa
dec
mov
fist
xchg
mov
push
(bad)
xor
push
cwde
sbb
dec
jmp
mul
sbb
(bad)
call
jnp
mov
mov
nop
iret
push
push
pop
out
test
in
dec
push
pop
and
mov
inc
dec
sub
retf
push
xlat
scas
out
jmp
dec
sbb
(bad)
(bad)
(bad)
std
btr
jg
pop
push
push
cmp
adc
scas
xchg
xchg
sub
test
rol
(bad)
(bad)
dec
sbb
cmp
retf
mov
outs
aas
xor
cmp
lods
sbb
cmc
jle
sbb
cld
fadd
xor
lock
(bad)
cmp
scas
mov
cmp
cmps
mov
ficomp
scas
sbb
popf
mov
neg
ret
lods
(bad)
mov
dec
cwde
sbb
and
or
call
(bad)
xor
mov
(bad)
(bad)
jmp
push
cmp
popa
lock
aaa
pop
inc
loopne
(bad)
cmp
(bad)
cld
cmp
and
sbb
jmp
push
test
cwde
cmp
sbb
jmp
fild
arpl
(bad)
(bad)
(bad)
call
cld
and
das
sub
sub
les
add
sbb
jp
and
(bad)
(bad)
dec
cmps
aam
xchg
xchg
fwait
sub
sub
ss
jno
dec
daa
das
(bad)
(bad)
call
das
jl
shl
push
cmp
xchg
jae
xchg
jne
scas
dec
pusha
xor
out
ret
inc
cmps
movs
inc
mov
jmp
clc
call
inc
push
mov
retf
mov
sbb
test
fsubr
(bad)
call
div
popf
(bad)
jge
in
in
add
push
jmp
xchg
mov
and
mov
add
mov
push
xchg
not
clc
dec
or
call
sub
push
and
mov
(bad)
call
add
inc
sbb
cld
xor
leave
mov
sbb
inc
mov
out
push
or
or
outs
clc
fwait
push
xchg
add
xlat
mov
ja
mov
mov
push
pop
mov
mov
popa
scas
popa
fdiv
xor
jg
cmp
jge
(bad)
(bad)
inc
(bad)
fucomi
shl
(bad)
leave
rcl
enter
cmp
xor
int
xlat
(bad)
(bad)
(bad)
call
in
scas
fwait
jae
ficom
sub
clc
adc
adc
jns
pop
xor
push
jb
or
sar
sti
lock
test
nop
mov
je
push
stos
stos
test
mov
pop
xor
inc
out
sub
xchg
sub
pusha
mov
cwde
js
add
mov
iret
mov
pop
sbb
pop
push
mov
imul
outs
jbe
(bad)
(bad)
(bad)
call
dec
(bad)
fldcw
call
inc
fadd
sbb
jmp
mul
out
(bad)
dec
(bad)
(bad)
(bad)
call
or
push
lock
fild
mov
in
dec
dec
fs
aas
and
bound
push
mov
(bad)
call
in
inc
cwde
jnp
loop
(bad)
popa
cli
jmp
(bad)
jg
adc
jb
stos
mov
jl
mov
push
jp
stos
mov
(bad)
(bad)
jmp
adc
cdq
leave
ja
in
ror
mov
jp
xor
arpl
mov
xchg
jae
xchg
sub
xor
dec
or
outs
(bad)
lock
out
pop
jmp
sar
movs
pop
jle
pop
imul
push
and
stos
or
movs
fisub
sub
(bad)
(bad)
call
or
in
popa
in
(bad)
int
arpl
lea
cmp
cmc
inc
mov
loop
dec
dec
fmulp
(bad)
(bad)
call
dec
lods
ins
push
xchg
(bad)
es
or
jg
push
daa
repnz
and
(bad)
fldcw
retf
into
(bad)
fdivr
and
aas
push
sti
add
das
scas
pop
xchg
mov
test
fisubr
pop
cli
(bad)
call
sub
mov
sub
jb
in
loopne
in
fbld
(bad)
dec
or
sub
(bad)
cli
mov
or
or
add
(bad)
(bad)
mov
mov
and
xor
xor
sbb
xor
outs
inc
cs
in
sbb
(bad)
xlat
mov
xor
les
loope
jo
cwde
nop
ss
outs
and
(bad)
(bad)
dec
jp
retf
and
(bad)
ficom
hlt
dec
pop
scas
int
mov
or
push
in
aad
(bad)
call
xchg
fcmove
rcr
inc
arpl
clc
push
mov
adc
(bad)
jg
xor
xchg
fist
ja
push
(bad)
mov
ret
adc
(bad)
(bad)
(bad)
call
aas
or
xor
test
push
jg
movs
sub
hlt
mov
mov
jmp
std
ret
mov
(bad)
(bad)
cld
cmps
gs
iret
dec
lods
dec
pop
outs
lods
ja
(bad)
jl
mov
sbb
addr16
(bad)
jmp
hlt
stc
jo
jb
cmps
(bad)
mov
fcmovu
xchg
es
jl
arpl
(bad)
(bad)
(bad)
call
jmp
adc
shl
nop
jecxz
div
(bad)
push
mov
ss
retf
xchg
cmp
mov
loopne
pop
cmp
push
jbe
shl
out
mov
pop
cwde
(bad)
(bad)
call
cmps
ja
mov
dec
pop
push
out
dec
mov
jecxz
jp
in
cld
(bad)
call
cwde
mov
dec
mov
xor
fdivr
in
jl
xor
rol
aam
hlt
push
test
frstor
into
jae
mov
inc
adc
push
pop
(bad)
(bad)
(bad)
(bad)
jnp
aas
mov
mov
mov
aas
pop
inc
in
in
test
mov
mov
cld
cmp
xchg
shl
pop
mov
push
push
push
cmp
cmp
(bad)
jg
(bad)
jns
pop
push
fcomp
push
fwait
sbb
outs
mov
mov
dec
add
xor
sbb
pop
dec
bound
(bad)
mov
(bad)
call
loopne
sbb
jl
xor
adc
xchg
cmp
push
xchg
mov
xchg
jmp
lahf
mov
inc
xchg
inc
hlt
fst
mov
push
call
inc
mov
es
xchg
fsubrp
ss
(bad)
(bad)
(bad)
jge
shl
xchg
mov
or
xor
xchg
pop
xor
iret
sub
out
inc
cld
call
mov
inc
push
test
sbb
ficom
dec
pop
call
pop
pop
js
push
shr
addr16
and
mov
aam
push
jecxz
ins
ins
mov
jmp
pcmpgtw
aam
ret
xchg
daa
aas
ret
add
adc
add
mov
cmp
mov
sub
push
(bad)
(bad)
dec
ror
mov
retf
hlt
pop
out
ficom
xor
push
(bad)
(bad)
(bad)
push
and
inc
popa
js
adc
sub
xor
out
mov
retf
add
scas
je
jg
(bad)
(bad)
fcmovnb
fadd
dec
dec
mov
xchg
pop
shl
in
shl
out
mov
cmp
(bad)
in
(bad)
(bad)
fsub
inc
in
pop
pop
neg
jle
cli
and
cwde
dec
mov
push
inc
out
test
inc
xchg
cmp
cwde
scas
xor
sti
jg
inc
stos
push
pop
inc
pop
ficomp
xchg
push
add
test
jbe
int
pop
jg
inc
std
inc
js
push
imul
cmp
call
fisub
xchg
std
out
out
sub
dec
xchg
xchg
jl
(bad)
shl
and
xor
retf
out
sub
and
jno
inc
sub
jmp
jg
push
adc
inc
aam
(bad)
fist
rol
cmc
scas
rol
mov
jmp
push
sub
mov
inc
rol
inc
mov
fbld
mov
div
mov
shr
cwde
imul
ret
inc
inc
retf
sbb
mov
xchg
xchg
dec
(bad)
stos
sbb
jg
(bad)
(bad)
inc
cmp
sub
aas
sti
sbb
movs
push
bound
dec
cs
(bad)
(bad)
(bad)
jmp
in
leave
data16
mov
xlat
sahf
or
(bad)
test
xor
lds
jg
vmptrst
(bad)
dec
in
or
shl
lea
cmp
xor
jmp
movs
xor
in
sub
mov
mov
xchg
(bad)
adc
lock
sbb
add
jmp
retf
test
sbb
jne
sub
(bad)
mov
out
xor
test
mov
xor
cld
je
(bad)
pop
setns
lods
sub
(bad)
(bad)
(bad)
jnp
pop
xchg
cmc
fdivr
ins
sbb
fst
repnz
test
cmp
(bad)
jmp
mov
mov
lods
test
mov
inc
sub
sbb
es
call
dec
pusha
mov
gs
jne
idiv
js
jo
jns
stos
push
push
pusha
out
lahf
call
loopne
mov
xchg
xor
inc
loop
push
xchg
add
(bad)
(bad)
(bad)
inc
icebp
addr16
jecxz
std
fild
fsubr
scas
inc
stc
jp
(bad)
daa
push
(bad)
(bad)
fcmovnbe
mov
ret
push
jge
jp
or
lods
and
test
inc
(bad)
(bad)
mov
movs
sub
sub
add
jmp
push
ret
inc
sar
(bad)
(bad)
(bad)
jg
movs
jl
lea
cmps
cwde
sbb
shl
mov
pop
xchg
push
data16
mov
int
cwde
push
jmp
xor
jnp
fldcw
jne
pop
sbb
pusha
inc
mov
(bad)
(bad)
(bad)
jmp
mov
fwait
dec
pushf
sbb
jb
clc
iret
retf
popa
out
pop
xor
sti
dec
cmps
jl
lds
clc
(bad)
jmp
pop
in
movs
push
rcr
xchg
stc
dec
pop
int
inc
xor
es
ror
test
es
aaa
pop
pop
scas
movs
xor
(bad)
fcomip
mov
mov
sbb
inc
imul
mov
test
add
add
mov
(bad)
mov
lods
mov
inc
lods
xor
dec
imul
xlat
jnp
(bad)
(bad)
ds
test
out
add
(bad)
cmp
sar
fstp
imul
ret
int
mov
(bad)
(bad)
fbld
shl
lea
shl
lods
adc
xchg
sub
cli
jmp
adc
pusha
mov
ja
inc
cdq
xlat
pop
cmp
sbb
sub
(bad)
jmp
xchg
pop
sti
push
sub
into
test
xor
test
arpl
inc
test
dec
(bad)
(bad)
(bad)
fistp
dec
sar
mov
retf
adc
mov
mov
dec
dec
stos
and
(bad)
and
aaa
jmp
mov
add
out
int
lahf
adc
popf
cli
jmp
out
outs
mov
shl
jo
out
test
(bad)
jg
lock
jl
cmp
mov
pop
stos
nop
sbb
sbb
(bad)
stos
xchg
adc
(bad)
jmp
fwait
loope
pop
sub
adc
mov
data16
mov
mov
(bad)
and
lds
pop
jmp
(bad)
cmps
jg
(bad)
jmp
pop
and
cmp
es
mov
dec
rcr
inc
loop
add
add
(bad)
(bad)
jmp
jns
mov
sub
inc
push
jae
push
pop
sbb
pop
ja
xlat
xchg
mov
ret
pushf
jae
fisub
push
(bad)
(bad)
inc
lods
push
in
scas
loop
inc
in
retf
adc
test
mov
std
jg
aaa
push
jg
and
push
call
jge
push
int3
jns
mov
inc
push
scas
add
mov
inc
test
mov
push
sbb
dec
pop
fild
aam
or
xchg
addr16
add
cmc
aaa
cld
push
cs
imul
and
adc
adc
test
cmp
(bad)
imul
or
push
out
sub
rol
scas
or
(bad)
(bad)
(bad)
(bad)
cmp
outs
jp
pusha
arpl
mov
pushf
repz
xchg
repz
jp
bound
sar
ficom
lea
add
ja
stos
(bad)
(bad)
jmp
mov
dec
fs
sar
jg
mov
or
sub
movs
(bad)
(bad)
(bad)
jmp
enter
fadd
test
dec
xor
cmp
sbb
jo
in
clc
dec
test
pop
call
cld
(bad)
jns
jns
xchg
jae
jle
mov
pop
and
xor
gs
idiv
(bad)
call
leave
fstp
add
pop
xor
push
ret
or
fwait
jp
fxch
ss
(bad)
(bad)
call
jnp
ins
shr
fdiv
mov
mov
and
push
addr16
fadd
jnp
inc
out
inc
in
xor
lods
outs
nop
cmp
push
mov
xor
adc
shr
pause
repz
jb
sub
(bad)
js
imul
test
or
jmp
ins
push
fcom
ja
cmp
rcr
enter
scas
std
inc
rcl
loop
(bad)
jg
mov
mov
outs
int
jmp
je
xor
jmp
adc
adc
jle
pop
jnp
cmp
mov
push
popa
push
into
push
sub
test
scas
in
xchg
pop
mov
imul
add
fiadd
sub
bound
push
movs
inc
xlat
mov
call
mov
jg
(bad)
fild
fiadd
test
shl
arpl
(bad)
(bad)
jmp
outs
mov
inc
add
push
mov
hlt
cmp
mov
loopne
xor
in
call
or
mov
loop
mov
mov
mov
mov
(bad)
inc
xchg
in
movs
data16
or
shr
pop
inc
fadd
and
dec
std
xchg
pop
push
mov
push
or
pop
mov
int
sub
mov
xor
imul
test
fcom
arpl
sbb
popf
pushf
or
aas
dec
inc
stos
call
(bad)
(bad)
(bad)
(bad)
cli
and
sub
ds
dec
push
dec
cld
dec
inc
push
outs
out
fiadd
sub
cmp
(bad)
(bad)
mov
sahf
repnz
xor
sti
scas
out
movs
inc
neg
or
lea
lahf
(bad)
fdivr
(bad)
(bad)
inc
sbb
jno
or
or
pop
xor
mov
out
jb
in
pop
push
ficom
jge
add
(bad)
inc
movs
sub
clc
(bad)
call
sbb
mov
inc
cmc
(bad)
(bad)
push
adc
dec
or
lods
jl
inc
jb
sub
push
add
call
mov
xor
xor
cdq
mov
cmp
jg
or
fwait
inc
cld
fdiv
in
fild
test
pand
pusha
mov
dec
cmp
fs
pusha
fld
push
imul
ret
es
sub
popa
shl
icebp
enter
nop
and
dec
inc
int
jg
add
dec
movs
mov
cwde
mov
daa
enter
(bad)
(bad)
(bad)
inc
pop
add
xor
test
add
pop
clc
mov
(bad)
into
ins
call
das
sbb
mov
clc
xchg
imul
das
push
out
call
cmps
and
jg
inc
enter
jmp
pop
add
call
das
sahf
enter
xor
(bad)
cmp
dec
mov
xchg
xchg
adc
add
(bad)
push
xor
int3
ror
clc
mov
add
and
shr
mov
sbb
(bad)
(bad)
jmp
xor
jecxz
nop
xchg
cdq
xchg
xchg
cli
arpl
jge
mov
adc
jne
jnp
jl
mov
dec
inc
xchg
add
jmp
daa
mov
rcl
sub
dec
cli
gs
jb
(bad)
xor
clc
(bad)
push
sbb
movs
adc
mov
xor
or
inc
cmps
(bad)
call
shr
in
jle
mov
xor
mov
pusha
(bad)
mov
sbb
or
(bad)
(bad)
jg
xchg
cdq
add
mov
adc
xor
dec
cmp
outs
(bad)
mov
(bad)
jmp
pop
lock
pusha
pop
lahf
add
and
sub
push
mov
imul
jmp
jmp
inc
ret
lea
outs
ret
mov
pop
and
(bad)
dec
ror
out
ja
and
jbe
xor
std
loop
xlat
lahf
mov
and
fs
dec
cld
icebp
in
or
aam
jmp
fimul
add
push
sar
cmove
(bad)
(bad)
push
dec
jbe
sub
mov
imul
ret
(bad)
data16
push
sbb
(bad)
inc
repnz
clc
push
jg
clc
(bad)
idiv
mov
imul
repz
(bad)
ds
(bad)
jmp
and
jns
adc
mov
cmp
dec
pop
cli
iret
and
jl
(bad)
(bad)
jmp
out
test
cdq
nop
icebp
fs
dec
dec
inc
mov
stc
xor
(bad)
(bad)
(bad)
(bad)
mov
scas
and
and
aaa
xor
aas
mov
xor
test
(bad)
(bad)
cmp
push
loopne
addr16
jae
add
imul
push
hlt
mov
adc
dec
mov
sbb
mov
ret
xchg
arpl
jmp
je
movs
fist
push
ret
mov
push
movs
cs
ds
call
shr
fmul
jb
(bad)
(bad)
(bad)
jmp
outs
movs
pop
(bad)
in
mov
loopne
mov
push
pop
inc
popa
jp
sbb
cmps
cmps
pop
push
cmps
push
sar
(bad)
push
ficomp
cmp
mov
scas
in
sbb
xchg
xor
pusha
or
(bad)
(bad)
(bad)
jmp
loopne
les
loop
in
retf
and
cmp
xor
imul
cmps
les
call
mov
dec
jno
jne
retf
ud0
(bad)
jg
sub
jp
mov
sbb
cmp
xor
or
adc
(bad)
dec
sbb
imul
mov
adc
stos
call
dec
ret
mov
retf
mov
fcmovu
repz
lods
mov
(bad)
jnp
xchg
mov
xor
shl
leave
mov
lock
and
jmp
(bad)
push
inc
stc
and
or
jae
and
push
and
mov
call
pop
ret
adc
mov
adc
int3
rcl
pop
jae
adc
ret
(bad)
(bad)
inc
jo
xor
add
test
xor
adc
(bad)
(bad)
(bad)
jg
pop
gs
vprotq
shl
inc
fsubr
sbb
and
cmp
(bad)
dec
shr
aas
repz
adc
ret
ror
dec
jl
xchg
xchg
pop
imul
push
(bad)
jmp
fistp
lahf
enter
and
jns
test
pop
(bad)
call
out
or
cmp
jmp
xor
ins
inc
pop
test
and
mov
pop
rol
mov
gs
rol
jbe
pusha
iret
(bad)
mov
inc
into
(bad)
leave
mov
pop
jle
mov
and
dec
loopne
loopne
push
sub
cmp
mov
bound
mov
add
(bad)
call
adc
cmp
dec
(bad)
rol
dec
lock
into
call
ins
jo
out
ins
(bad)
idiv
sub
sbb
stc
mov
push
or
push
pushf
(bad)
(bad)
(bad)
jle
sbb
fwait
inc
ja
shl
arpl
in
mov
(bad)
stc
jge
imul
and
xchg
jg
cli
add
push
mov
mov
mov
jae
in
(bad)
(bad)
mov
jg
(bad)
jae
or
push
fdivr
sub
(bad)
(bad)
inc
mov
fsubr
mov
mov
popa
adc
mov
adc
(bad)
jmp
lahf
sbb
retf
je
jmp
lock
popf
pop
mov
add
call
jns
(bad)
dec
pop
mov
cs
arpl
mov
mov
call
pop
loopne
mov
aaa
and
rol
in
jo
sbb
in
adc
call
sti
mov
dec
adc
pop
lock
sub
(bad)
(bad)
dec
adc
sub
adc
stc
in
call
ret
jecxz
daa
sub
aam
(bad)
(bad)
(bad)
(bad)
js
sub
outs
and
inc
nop
jnp
and
and
pushf
int3
cmp
outs
lock
jmp
aaa
inc
(bad)
call
sti
ss
mov
stos
cmps
dec
sub
daa
sar
mov
(bad)
jp
or
add
fcmovnb
inc
dec
pop
stos
inc
sub
inc
lock
jl
repz
pop
jle
lods
(bad)
(bad)
(bad)
call
(bad)
jmp
dec
adc
or
adc
lods
mov
mov
xchg
pop
(bad)
ret
jge
das
out
aas
cld
mov
cmps
lods
inc
fbld
nop
lahf
push
cmp
pop
adc
pop
icebp
(bad)
(bad)
call
outs
jae
movs
xor
and
outs
es
vdivss
jnp
pop
add
xchg
scas
(bad)
(bad)
call
jno
daa
das
xchg
mov
mov
repz
mov
mov
call
test
(bad)
(bad)
jmp
cwde
lahf
cmp
mov
out
ds
and
xor
mov
(bad)
push
sub
cmp
inc
out
and
fisubr
mov
aad
hlt
xor
ds
or
outs
scas
add
enter
fsub
call
dec
inc
cs
add
or
sbb
lock
cmps
fs
xor
out
sub
pop
cmp
cmp
rcl
ja
adc
fstp
(bad)
mov
jle
std
and
add
adc
dec
in
push
xlat
call
add
lods
push
mov
loop
mov
je
pop
sbb
test
mov
inc
xchg
xlat
jnp
pusha
imul
fdivr
(bad)
jmp
mov
push
xchg
fsub
jbe
cs
xor
gs
mov
aas
xchg
aas
cmp
jbe
xchg
lds
test
adc
pushf
cmc
or
mov
mov
sar
shr
cmc
xchg
rol
gs
sub
add
mov
push
dec
aas
aas
mov
mov
push
test
aas
pop
cmp
adc
imul
stos
pusha
xchg
popf
jb
stos
xor
shl
clc
lods
std
bound
retf
pop
hlt
jbe
fild
ror
or
(bad)
jp
push
jmp
jno
stos
cwde
fimul
loopne
add
fs
mov
mov
fcom
cmps
jg
add
(bad)
dec
dec
cli
adc
frstor
add
pop
xor
cmp
(bad)
(bad)
jnp
int
or
aas
xor
inc
out
jo
loopne
sub
in
mov
das
rcr
mov
cmp
(bad)
(bad)
inc
jp
pop
or
repnz
cmp
(bad)
clc
out
mov
fisttp
(bad)
jmp
clc
cmp
or
aas
mov
mov
or
(bad)
(bad)
jg
ficom
jb
mov
ins
pop
idiv
push
or
std
or
and
cmp
adc
or
shl
adc
jg
jne
jg
push
(bad)
call
pop
mov
push
dec
bound
mov
out
xchg
(bad)
push
mov
xchg
fxch
rol
mov
cmp
add
call
repnz
or
xchg
xor
pop
mov
out
adc
fistp
xor
enter
pop
and
in
cmp
xor
dec
cmp
ins
mov
push
inc
in
cmp
add
and
(bad)
jl
fstp
test
jl
in
lods
scas
repnz
pop
mov
(bad)
(bad)
(bad)
call
mov
jp
psadbw
test
ins
or
push
(bad)
push
sbb
(bad)
dec
ret
add
iret
xor
pop
and
je
(bad)
pusha
(bad)
(bad)
(bad)
inc
cs
dec
imul
and
leave
mov
mul
push
test
jno
out
push
sub
es
add
pop
scas
sar
sbb
inc
cmp
or
dec
mov
mov
fs
(bad)
(bad)
(bad)
mov
aad
(bad)
cmp
mov
dec
mov
outs
jg
mov
cld
bound
sbb
cmp
sub
into
push
loope
sbb
xor
push
and
repnz
fnstenv
in
xchg
ficomp
sub
xchg
inc
cld
fdivp
mov
push
jno
xor
idiv
xchg
pop
aaa
aam
arpl
mov
jns
cmp
adc
or
hlt
stc
gs
test
sbb
mov
mov
(bad)
call
push
loope
clc
(bad)
retf
fisub
aam
cld
pop
jg
push
popa
cmp
xor
ret
(bad)
(bad)
jnp
loopne
mov
loop
jecxz
imul
mov
jmp
mov
retf
jge
(bad)
jg
push
fwait
es
sub
pusha
(bad)
xchg
arpl
lods
(bad)
mov
push
mov
adc
test
fidiv
sbb
cdq
imul
(bad)
out
dec
outs
cmp
out
scas
pop
and
jle
rol
sub
(bad)
(bad)
mov
pop
mov
mov
scas
clc
mov
imul
mov
jmp
pop
sub
sbb
jb
xor
adc
arpl
jg
(bad)
fldenv
mov
jecxz
xchg
aas
icebp
mov
(bad)
(bad)
(bad)
(bad)
out
and
cmp
cmp
push
lahf
cmps
pusha
lds
lock
adc
xlat
push
(bad)
(bad)
inc
jge
cmp
imul
lds
test
and
xor
or
les
jne
mov
xchg
xchg
jb
cmp
(bad)
jmp
leave
(bad)
xor
imul
add
call
jle
adc
stc
push
inc
sbb
sti
(bad)
(bad)
jmp
out
les
in
mov
imul
daa
pop
inc
mov
(bad)
(bad)
mov
out
xchg
data16
fidiv
retf
sbb
lods
leave
pusha
repnz
(bad)
(bad)
dec
mov
fnstsw
add
sub
fsubr
es
(bad)
(bad)
jmp
outs
mov
jbe
xor
je
cs
pushf
ret
lock
ret
nop
xchg
dec
jmp
arpl
(bad)
(bad)
(bad)
(bad)
jns
push
mov
sar
es
(bad)
pop
test
xchg
and
hlt
fldcw
jbe
mov
mov
push
std
mov
sub
pop
xor
rol
sbb
fld
mov
std
in
cmp
call
sub
mov
pop
das
inc
into
ror
bound
and
push
hlt
clc
call
ins
pushf
(bad)
cmp
fiadd
pop
lock
mov
or
iret
ret
jmp
cmp
mov
or
sub
sbb
cmc
out
(bad)
(bad)
(bad)
call
(bad)
mov
dec
cmp
mov
sahf
test
cmps
adc
fbld
outs
inc
aas
add
rol
fstp
retf
inc
push
mov
hlt
mov
mov
cmp
stos
mov
adc
lods
rcr
mov
out
ss
jns
or
das
clc
pop
adc
adc
(bad)
(bad)
call
mov
call
pop
xor
sbb
sub
(bad)
(bad)
(bad)
jmp
ja
data16
mov
mov
or
adc
rcr
loope
retf
xor
movs
pushf
push
sub
sbb
pushf
fisttp
cld
(bad)
jmp
test
retf
icebp
psllq
cld
pop
jbe
pop
mov
(bad)
stos
cmps
fstp
(bad)
sub
xchg
pop
nop
ss
(bad)
(bad)
aas
jecxz
out
test
lods
xchg
loopne
jns
sahf
mov
ja
mov
les
(bad)
(bad)
(bad)
fldenv
test
pop
sbb
adc
xchg
add
leave
mov
push
and
or
(bad)
std
lahf
or
push
fucomp
mov
fdivr
hlt
pop
stos
mov
mov
and
(bad)
(bad)
inc
popa
add
pop
(bad)
and
test
jns
stc
sbb
xor
pop
push
int
idiv
and
inc
cld
call
push
imul
add
rcl
jne
es
jg
ror
adc
call
mov
dec
enter
std
call
pop
scas
ja
test
out
add
sti
jle
out
stos
push
xchg
mov
in
(bad)
(bad)
jmp
sub
add
xchg
inc
retf
mov
dec
mov
hlt
cmp
clc
fs
xor
jmp
sub
call
jg
loopne
pushf
inc
mov
cmp
push
pushf
pop
mov
pop
push
jmp
xchg
loope
repnz
clc
hlt
inc
sub
stos
fst
jb
sar
int3
dec
add
dec
nop
std
out
imul
data16
cli
push
(bad)
(bad)
mov
(bad)
(bad)
dec
ret
sbb
scas
inc
dec
fwait
test
fcomp
jns
neg
(bad)
int
loop
sub
(bad)
(bad)
jmp
(bad)
pusha
or
test
and
nop
lahf
pop
add
test
(bad)
aaa
pop
icebp
(bad)
(bad)
(bad)
mov
shl
pop
lock
adc
lldt
rol
mov
mov
loopne
scas
imul
stos
outs
nop
adc
cmps
out
out
scas
pop
repnz
mov
sub
mov
dec
and
scas
mov
not
(bad)
(bad)
cmp
shl
loopne
mov
sbb
cmps
out
push
call
fcos
mov
mov
or
xor
fiadd
xor
dec
push
xlat
das
add
add
js
out
add
sbb
jbe
cld
jmp
add
and
cmp
and
call
adc
dec
cmp
bound
clc
enter
repz
jnp
push
dec
mov
add
(bad)
out
ficom
add
inc
xor
daa
or
(bad)
jmp
or
inc
dec
enter
xlat
enter
inc
retf
rcl
(bad)
(bad)
jg
mov
dec
jmp
cmps
or
fdivr
pop
push
(bad)
add
leave
inc
ins
mov
mov
mov
aaa
or
jne
cwde
cmp
mov
and
push
adc
(bad)
fbld
mov
(bad)
test
mov
ja
out
fdiv
pop
(bad)
(bad)
(bad)
(bad)
(bad)
out
scas
cmps
mov
rol
pop
jnp
(bad)
xlat
jmp
pusha
xor
sub
sub
dec
inc
mul
pop
out
in
les
jb
fcomp
(bad)
jg
into
and
aad
cwde
cld
out
fdiv
fs
cmp
jnp
movs
mov
mov
mov
in
xchg
movs
inc
(bad)
stos
jl
(bad)
(bad)
call
sbb
sbb
and
push
jg
(bad)
push
in
cmp
bound
(bad)
(bad)
call
fsubr
dec
test
push
xor
into
jns
mov
mov
jg
loope
sar
aaa
rcl
(bad)
(bad)
call
push
or
dec
mov
adc
data16
dec
mov
and
dec
fndisi(8087
sti
cmp
push
fs
sub
jnp
lahf
mov
jb
out
push
and
mov
ret
loope
jmp
clc
jmp
mov
pop
fwait
popf
pop
retf
xor
in
stc
test
add
cmp
mov
dec
lock
fst
fcomp
dec
loopne
adc
(bad)
(bad)
out
clc
mov
in
in
pop
sub
cmp
xor
jle
add
jmp
(bad)
xchg
ja
(bad)
inc
jns
shl
and
enter
punpckldq
cs
adc
std
jmp
jecxz
cmc
add
(bad)
jmp
add
je
lock
push
jmp
imul
(bad)
call
repz
xor
stc
xor
ret
jl
stc
add
sbb
retf
ja
mov
push
mov
pop
aas
mov
(bad)
mov
sbb
out
sbb
mov
sbb
push
pop
(bad)
jmp
int
daa
sti
inc
push
pop
cmp
cmps
imul
stc
jmp
mov
cld
nop
lds
xchg
xchg
aam
hlt
mov
and
push
(bad)
push
lock
cmp
test
mov
push
ficomp
pop
imul
cmc
or
fdivr
(bad)
cmp
add
jmp
push
xchg
mov
test
imul
lock
retf
jmp
add
int3
mov
jno
repnz
js
adc
mov
jmp
or
cmc
into
lea
das
fdiv
in
adc
or
mov
mov
and
inc
sbb
xlat
(bad)
dec
cmp
fst
jbe
pop
not
mov
ins
aaa
cld
(bad)
(bad)
cmp
(bad)
and
imul
mov
imul
push
mov
cmc
int
imul
rcl
jmp
add
fisubr
adc
(bad)
in
cmp
sti
test
ss
jecxz
dec
jns
call
pop
cmc
xor
repnz
or
(bad)
(bad)
mov
test
movs
fxch
mov
fild
sub
push
(bad)
jg
push
pop
lea
sub
out
mov
mov
sbb
(bad)
jg
dec
pop
in
in
cmc
mov
sub
adc
cmp
pusha
adc
call
(bad)
call
mov
cmc
xchg
rol
jle
in
mov
fisttp
and
test
mov
inc
cld
jmp
gs
icebp
push
xchg
sbb
je
inc
push
cwde
mov
sbb
dec
inc
adc
cmp
bnd
rcl
mov
jmp
or
sbb
nop
xchg
cdq
pop
push
xchg
or
lahf
and
rcr
xchg
es
and
(bad)
call
dec
push
jo
fild
iret
mov
push
les
fsubp
ss
cld
(bad)
(bad)
inc
jle
sbb
cwde
popf
ficom
or
call
(bad)
push
cmp
inc
lock
aad
jbe
cmp
xchg
add
dec
inc
(bad)
(bad)
(bad)
inc
aam
movs
fbld
enter
sar
movs
cmps
adc
add
and
jbe
cld
(bad)
mov
icebp
dec
ret
inc
jmp
fyl2xp1
inc
pop
(bad)
(bad)
(bad)
(bad)
sub
mov
mov
inc
pop
bts
pop
mov
pcmpeqb
dec
leave
iret
rcr
retw
xchg
ret
cmp
sbb
pusha
push
xchg
movs
mov
mov
mov
clc
(bad)
call
pop
inc
scas
std
cmp
outs
(bad)
mov
add
mul
mov
(bad)
(bad)
(bad)
jmp
imul
or
xor
push
mov
mov
mov
inc
mov
in
jg
push
sbb
lods
dec
dec
fwait
movs
retf
dec
repz
jb
mov
(bad)
(bad)
push
mov
jl
fmul
in
shl
sub
iret
jae
cwde
push
add
(bad)
mov
call
stos
dec
mov
sahf
pop
or
inc
addr16
inc
lock
popf
js
adc
and
and
mov
(bad)
adc
adc
mov
arpl
lods
inc
jle
add
ja
hlt
push
loope
in
ins
or
add
sub
push
or
adc
data16
(bad)
mov
dec
cmp
fild
es
jmp
int3
(bad)
movs
mov
jno
sub
cwde
pop
add
sub
hlt
(bad)
jg
mov
inc
or
inc
outs
and
mov
(bad)
(bad)
jg
mov
sahf
sbb
pusha
push
aad
movs
mov
(bad)
(bad)
inc
outs
shl
jmp
dec
jmp
dec
(bad)
jmp
mov
retf
mov
jl
cmps
enter
mov
and
lods
outs
(bad)
mov
ret
xor
xor
std
and
and
popa
movs
enter
(bad)
(bad)
inc
inc
fimul
stos
xchg
pop
cmp
test
in
jge
mov
test
(bad)
(bad)
inc
cdq
movhps
inc
ret
push
pop
addr16
fild
cmps
lock
(bad)
push
std
mov
in
retf
sti
lock
mov
cmps
cmp
(bad)
jg
arpl
mov
inc
lods
test
rol
push
add
setl
add
jmp
mov
(bad)
mov
mov
sar
add
xchg
xchg
ror
add
mov
int3
das
adc
dec
ins
ficom
or
cmp
push
(bad)
jg
imul
js
dec
sbb
ins
add
retf
adc
inc
pop
lea
fwait
ror
into
cmp
mov
ins
repnz
movs
stos
sbb
out
jp
add
pop
sub
push
lock
(bad)
mov
(bad)
push
inc
xchg
pusha
sub
or
cmp
cmps
dec
pop
sbb
ret
(bad)
(bad)
push
fisttp
fist
out
pop
jae
pop
ficomp
retf
sbb
stos
xchg
and
in
jecxz
cmp
jmp
lahf
and
jmp
or
imul
mov
dec
dec
lods
(bad)
mov
imul
cli
in
or
xor
cdq
cmp
test
jmp
(bad)
call
xor
jnp
cld
mov
jnp
(bad)
jnp
popf
inc
sub
or
(bad)
jg
xor
mov
(bad)
ror
out
jecxz
add
std
mov
in
mov
sbb
sbb
or
push
push
or
add
adc
icebp
stc
aaa
sub
jg
dec
ds
mov
or
sub
sbb
shl
mov
idiv
sub
int3
leave
adc
sub
pop
sbb
fistp
pop
xor
jns
(bad)
int3
out
ss
and
mov
push
jbe
xchg
les
shl
dec
inc
push
out
daa
out
(bad)
fist
jge
adc
jns
mov
and
iret
cmp
mov
xor
sbb
cdq
pop
dec
fwait
adc
(bad)
call
push
or
rol
cmp
or
jp
pushf
adc
jl
mov
call
pushf
mov
push
dec
call
push
add
ficom
in
mov
frstpm(287
fild
jl
fist
xor
ss
inc
dec
add
jmp
loopne
outs
out
stc
inc
daa
push
out
inc
into
push
loope
retf
maxps
jo
fcomp
call
sbb
(bad)
pop
or
mov
mov
dec
(bad)
xlat
xor
pop
rol
test
aad
(bad)
(bad)
jmp
and
jns
or
sahf
mov
shl
(bad)
clc
in
pop
mov
test
(bad)
jmp
pop
push
pop
add
aas
aas
sub
dec
rol
cs
xor
hlt
inc
xor
sbb
jle
mov
sub
(bad)
(bad)
(bad)
(bad)
fbstp
movs
shl
in
xor
mov
gs
and
xchg
div
(bad)
pushf
push
cli
(bad)
jmp
xchg
mov
repz
sahf
jle
pusha
shl
jo
jae
outs
clc
(bad)
push
inc
mov
jp
or
addr16
idiv
xchg
hlt
mov
sahf
sbb
cld
mov
add
jns
jmp
(bad)
mov
popa
jmp
push
push
or
mov
jecxz
call
sbb
mov
and
vorps
daa
fwait
sbb
push
mov
ja
pop
sar
xchg
xchg
or
test
ret
xor
clc
jg
add
in
adc
sti
push
sub
in
xor
cmps
jl
sahf
cmp
jl
(bad)
(bad)
(bad)
jmp
and
xor
push
jle
jns
adc
data16
adc
sar
ret
test
(bad)
(bad)
call
repz
dec
fst
or
in
and
mov
(bad)
(bad)
(bad)
scas
push
dec
or
push
cld
jmp
mov
adc
loopne
fist
jmp
(bad)
inc
retf
gs
xor
cmp
cmc
int
push
loope
cmps
or
pop
pop
adc
(bad)
jmp
pop
dec
xor
fs
rcl
loop
cmp
push
or
clc
aad
imul
adc
xor
shl
xchg
pmaxsw
sbb
test
or
into
(bad)
fcomip
(bad)
jp
sar
call
in
(bad)
jmp
fs
inc
mov
aas
clc
(bad)
jmp
sub
sbb
mov
adc
dec
ja
fnsave
daa
inc
pop
ins
mov
lahf
fst
push
(bad)
dec
cmp
mov
or
mov
test
jg
pop
adc
inc
stc
push
lahf
ss
icebp
sahf
cmp
inc
dec
lock
mov
jns
or
inc
add
mov
jg
(bad)
(bad)
cld
dec
jp
pop
das
mov
(bad)
xchg
pop
mov
repnz
cli
mov
(bad)
mov
xchg
push
jp
sub
loopne
ret
clc
mov
retf
inc
xchg
enter
mov
sbb
clc
ror
call
std
(bad)
out
ss
cmp
adc
hlt
mov
cmps
push
adc
outs
jmp
xchg
adc
mov
cdq
mov
movs
jmp
add
xchg
cld
mov
or
repz
je
adc
ds
(bad)
(bad)
fucomip
(bad)
jns
pop
pop
jae
ja
pop
push
dec
push
stos
cmps
das
sbb
fdivr
(bad)
jg
enter
jge
repz
push
dec
mov
fld
neg
push
hlt
jmp
jmp
call
cdq
iret
push
dec
shl
and
mov
div
jg
inc
sti
ror
cmp
scas
cmp
inc
(bad)
popa
lahf
aaa
out
ud2
push
cdq
loopne
(bad)
retf
and
(bad)
jmp
shl
xor
pusha
cwde
push
inc
mov
in
dec
xchg
inc
jg
(bad)
inc
mov
push
daa
push
sbb
rol
fs
dec
je
xor
jmp
mov
push
bound
imul
call
(bad)
(bad)
jmp
hlt
jecxz
ror
pshufw
in
add
sbb
push
lods
xchg
inc
das
add
mov
xor
push
cmp
es
scas
stc
push
mov
jo
jbe
leave
cmps
ds
in
jo
scas
and
add
sti
dec
js
ds
add
cmps
and
mov
dec
cmps
ja
in
push
cmps
push
cs
movs
in
cwde
adc
ret
xchg
dec
xor
jg
(bad)
dec
outs
scas
scas
sub
push
adc
out
or
jno
sahf
dec
(bad)
jmp
ins
cli
add
push
ins
inc
or
mov
adc
sub
das
pop
sbb
dec
icebp
mov
outs
scas
outs
pop
sub
cs
(bad)
(bad)
call
jo
out
es
lods
fs
jnp
arpl
movs
int3
mov
sub
adc
(bad)
inc
popf
ficom
fidivr
arpl
int
push
lods
imul
mov
mov
aas
test
nop
sbb
adc
push
xlat
inc
inc
iret
cli
cs
pop
outs
popa
jae
sub
sub
loop
iret
mov
stos
mov
call
clc
aaa
xchg
mov
or
dec
test
mov
cld
pop
jmp
lock
out
repz
into
test
(bad)
pusha
mov
xor
shr
jmp
nop
pop
mov
jbe
fmul
xchg
lds
outs
(bad)
call
or
iret
sub
xor
in
inc
cmp
stc
popa
dec
ror
pop
movs
lahf
retf
cli
cmp
fcomip
inc
repnz
mov
(bad)
xor
ins
pop
aam
(bad)
(bad)
(bad)
jg
sbb
and
rol
fadd
and
xor
mov
in
and
fs
xchg
fldcw
jmp
xchg
pusha
pusha
fmul
rcr
mul
into
pop
pop
jmp
fs
inc
fnsave
stos
ins
mov
(bad)
(bad)
(bad)
(bad)
mov
push
scas
cmp
mov
and
lock
imul
shl
dec
mov
add
jmp
push
loope
test
popa
shl
popa
ror
mov
outs
push
add
sbb
outs
mov
sahf
cmp
jne
or
xchg
fcomip
jno
or
std
std
(bad)
jg
sar
loopne
xchg
push
repz
rol
repz
mov
dec
call
mov
inc
daa
add
push
iret
fdiv
pop
sahf
xor
std
jg
call
jge
mov
or
cmp
and
sbb
je
xlat
mov
clc
(bad)
call
or
iret
aaa
sahf
sub
cmp
inc
fisttp
pop
sub
pop
xor
inc
es
add
pop
inc
fnsave
daa
mov
ja
aam
dec
pop
cmp
pusha
jo
sub
jb
(bad)
fcmovnu
ins
scas
and
fwait
in
mov
add
popa
(bad)
(bad)
mov
mov
arpl
xor
sbb
in
ins
mov
(bad)
(bad)
push
es
xor
sbb
dec
and
jmp
sbb
(bad)
repnz
scas
ja
and
fwait
sbb
mov
in
push
push
pop
push
mov
sub
add
xlat
clc
cmp
imul
jle
(bad)
(bad)
aas
push
dec
xor
jp
sar
or
or
push
clc
rol
or
mov
cmp
cdq
(bad)
lock
xchg
xchg
clc
push
aad
sbb
cli
(bad)
dec
rol
ret
in
cmp
jl
sub
stc
data16
jmp
cmp
mov
shr
jmp
(bad)
(bad)
inc
pop
cmp
mov
push
loopne
outs
cmp
out
xchg
dec
push
mov
mov
retf
xor
int3
dec
xchg
in
(bad)
dec
(bad)
dec
mov
fisttp
or
(bad)
xchg
cmp
push
push
push
fidivr
pop
sbb
mov
popa
cld
cmp
iret
stos
ret
sub
(bad)
cli
and
daa
lods
ja
lea
xor
(bad)
(bad)
(bad)
jg
fwait
jns
shl
adc
adc
xchg
popa
out
jmp
sbb
mov
mov
(bad)
ja
cmp
jmp
(bad)
jmp
jg
jg
xchg
fimul
(bad)
(bad)
jns
sbb
push
inc
sbb
enter
jmp
jp
dec
jne
jecxz
pop
push
mov
aam
jb
scas
xchg
push
mov
out
jmp
pop
loop
repnz
xchg
(bad)
cmp
push
fwait
xchg
out
fbld
mov
cld
push
jne
fiadd
jle
call
fldenv
aaa
jp
cli
mov
cs
inc
(bad)
jg
daa
pushf
test
(bad)
std
xchg
ret
iret
out
xor
mov
std
pop
call
cmp
push
sbb
or
enter
sub
pop
mov
and
movs
and
popf
js
add
(bad)
pop
push
into
(bad)
(bad)
(bad)
inc
popa
out
add
scas
out
inc
mov
xchg
paddb
xor
(bad)
dec
lock
adc
mov
xrelease
mov
aad
(bad)
(bad)
call
test
xlat
iret
outs
inc
mov
or
mov
jg
or
mov
sbb
hlt
lods
adc
div
push
cmp
add
test
idiv
push
aad
(bad)
(bad)
call
stos
or
or
out
or
repz
or
push
mov
std
fwait
jecxz
sub
adc
push
arpl
jnp
fdivr
clc
dec
sbb
pop
adc
push
jmp
fimul
(bad)
(bad)
(bad)
(bad)
fidiv
sbb
cmp
dec
add
sub
cli
add
jns
xor
add
retf
xor
(bad)
mov
je
sbb
inc
pop
mov
(bad)
cmp
jnp
mov
cmp
dec
arpl
or
(bad)
lea
out
xchg
in
aas
jmp
out
jp
call
add
xchg
out
mov
retf
mov
push
mov
pop
cmp
mov
(bad)
mov
xchg
mov
or
xchg
lock
test
stos
fild
adc
sbb
adc
aaa
pusha
hlt
jg
aam
adc
sbb
add
mov
mov
mov
test
(bad)
stc
xchg
lds
mov
jle
inc
xor
loop
lds
ret
push
or
(bad)
call
lods
sbb
mov
jns
retf
in
jne
aas
js
fsubr
dec
mov
(bad)
mov
and
mov
das
mov
mov
pushf
aaa
sbb
jg
xor
scas
mov
and
in
and
fadd
mov
ins
div
xor
dec
cld
bnd
cld
(bad)
(bad)
(bad)
cmp
popf
ds
ror
out
sub
jne
arpl
loope
lock
sub
retf
or
jo
rcl
jecxz
mov
pop
sbb
mov
pop
mov
mov
inc
cld
jg
xor
pop
loope
pop
fidivr
cmp
add
call
iret
dec
mov
mov
mov
(bad)
mov
mov
(bad)
cwde
push
cmp
pusha
ror
enter
arpl
jnp
push
inc
xchg
outs
iret
enter
sub
push
and
cld
jmp
jno
test
fdiv
cmp
mov
mov
adc
(bad)
inc
mov
cmp
cmp
push
or
inc
stc
cmp
aaa
mov
fs
pushf
cmp
pushf
mov
pop
adc
(bad)
call
fs
cmp
popa
shl
sub
sub
stc
xor
add
xchg
add
(bad)
jg
out
xor
add
mov
(bad)
movs
cmp
ror
sbb
xor
scas
repz
(bad)
sbb
dec
mov
pusha
mov
int3
xchg
addr16
dec
das
(bad)
jg
push
jl
std
ss
(bad)
xchg
loope
loope
pop
sub
retf
(bad)
jg
sti
sbb
ret
add
pop
call
movs
jae
mov
dec
sbb
enter
dec
jne
mov
push
pop
pop
mov
sbb
(bad)
stc
inc
push
jbe
cmp
stc
mov
cdq
xor
fimul
(bad)
(bad)
(bad)
call
scas
push
push
mov
out
mov
popf
clc
xchg
adc
pop
daa
outs
adc
add
add
or
pushf
pop
sbb
ret
imul
(bad)
(bad)
jmp
add
mov
int3
call
adc
jmp
jecxz
xchg
cmc
popa
sbb
mov
mov
jmp
jne
jns
and
lock
xchg
outs
enter
jno
push
mov
aas
das
clc
(bad)
dec
pop
fmul
out
cwde
push
lds
aaa
push
in
cli
(bad)
mov
jbe
pop
xchg
sbb
les
pop
mov
pop
js
xor
dec
cld
push
lock
mov
shl
add
das
mov
sbb
push
fwait
pusha
nop
in
repz
sbb
inc
xchg
fisttp
sbb
jg
adc
fist
adc
int3
fsub
or
mov
mov
push
adc
push
adc
and
sbb
adc
clc
mov
(bad)
jg
(bad)
cmp
or
pop
into
pop
mov
cld
call
shl
dec
add
push
push
xor
push
sub
call
hlt
lahf
repnz
outs
mov
mov
daa
xor
loopne
(bad)
call
mov
sbb
scas
pusha
sub
mov
or
push
push
in
repnz
lock
or
xlat
mov
cmp
cmps
in
movs
(bad)
shl
and
xor
mov
fcomp
mov
cmp
or
mov
fwait
daa
popf
lahf
dec
out
ret
test
mov
lds
push
int
cli
jmp
(bad)
(bad)
out
jp
add
cmovne
rol
sbb
(bad)
(bad)
cli
add
cdq
inc
out
jbe
push
icebp
in
sbb
(bad)
aas
mov
call
(bad)
aas
int3
ss
cmps
and
ret
add
(bad)
imul
mov
(bad)
cmp
je
xor
pop
jmp
mov
test
lods
dec
lock
jg
add
and
mov
push
sbb
mov
cli
push
ds
stos
rcl
lods
or
mov
je
sahf
mov
jmp
(bad)
cmp
push
mov
add
push
test
xor
and
clc
pop
xor
cmp
ins
xor
shl
nop
add
mov
adc
sub
scas
clc
ja
and
and
ret
stos
jle
int
cli
or
jmp
inc
pusha
sbb
push
jmp
repz
mov
pop
aad
dec
add
or
shl
or
adc
shl
mov
xor
push
or
aad
cli
xor
jne
das
hlt
fst
jg
pop
cmps
jmp
pushf
lods
jnp
(bad)
(bad)
dec
xchg
repnz
xchg
ins
sbb
inc
jbe
mov
repnz
lea
cld
dec
rcr
cmp
(bad)
jmp
inc
sahf
sbb
into
push
repz
imul
jle
(bad)
lock
lahf
xlat
cld
push
xchg
fucomp
retf
mov
or
jecxz
jmp
fidivr
cmp
jne
inc
mov
into
mov
pop
fistp
repnz
add
cmp
in
(bad)
mov
pop
aaa
jp
mov
ins
pop
(bad)
enter
popa
sbb
cmp
pop
mov
aaa
std
psubusb
pop
inc
dec
ficom
out
jbe
pop
sar
pop
hlt
dec
and
aaa
movups
lock
inc
(bad)
push
(bad)
inc
test
imul
scas
xchg
and
add
cmp
cs
sbb
retf
pop
push
dec
rcl
xchg
mov
lock
cld
push
dec
xchg
push
mov
(bad)
push
test
xor
ds
jg
mov
int3
jnp
test
sar
pusha
jo
add
push
xchg
call
dec
mov
loopne
das
sar
enter
and
push
mov
mov
pop
pop
test
cwde
xchg
hlt
loop
mov
call
sbb
mov
adc
pop
aaa
retf
xor
in
test
loop
cmp
sub
push
fdiv
pop
out
fwait
push
dec
pop
ins
cs
pop
dec
pop
pop
ins
and
(bad)
dec
arpl
cwde
imul
push
lods
iret
dec
aad
or
addr16
std
xchg
data16
push
outs
popf
push
int
enter
inc
add
retf
aaa
shl
add
mov
call
pmuludq
cmp
idiv
mov
inc
cld
xchg
ret
mov
idiv
cmc
sbb
jg
scas
(bad)
clc
add
leave
in
fstp
mov
dec
loop
push
aad
mov
mov
jmp
mov
cmp
and
(bad)
repnz
fistp
pop
add
xchg
(bad)
ficom
mov
sub
(bad)
jg
mov
ds
cmp
test
test
mov
imul
outs
clc
inc
sub
sub
js
sahf
dec
call
cld
add
pop
adc
sbb
nop
movs
hlt
fbstp
cli
call
pop
pop
ret
jo
or
retf
sbb
bound
and
stos
mov
stc
test
jmp
fstp
cld
push
and
xchg
test
stc
inc
aaa
pop
dec
mov
inc
adc
retf
dec
loop
mov
inc
cs
jmp
std
inc
shl
call
xchg
pop
pop
aam
and
xchg
dec
mov
jl
push
xor
push
jne
dec
pop
push
js
das
fprem
mov
cli
out
leave
pop
mov
fisttp
mov
mov
sahf
lahf
mov
adc
(bad)
(bad)
dec
or
and
dec
dec
iret
adc
jns
jl
lock
(bad)
inc
jmp
jo
dec
dec
ret
out
or
mov
xor
(bad)
dec
push
or
jno
push
inc
ins
add
sbb
inc
lock
dec
adc
idiv
repz
sbb
(bad)
(bad)
inc
pop
adc
or
inc
lods
hlt
std
fld
dec
lock
(bad)
jmp
arpl
cmps
int3
jecxz
jle
out
call
add
aaa
scas
test
mov
inc
jg
inc
cld
sub
and
or
(bad)
(bad)
call
iret
sub
add
icebp
cld
cmp
push
retf
inc
fsub
xchg
clc
(bad)
(bad)
push
cmps
test
inc
popa
mov
mov
add
retf
iret
add
xor
lock
or
push
cmp
pop
push
sbb
enter
(bad)
jmp
in
sub
repz
pop
mov
push
or
std
(bad)
mov
push
push
push
sub
shl
cwde
jae
xchg
jg
adc
stos
lods
loopne
(bad)
sub
outs
rcl
repnz
pop
js
xchg
pcmpgtb
retf
pop
mov
xchg
sti
jle
cmp
outs
outs
shr
loopne
inc
inc
or
pop
out
push
iret
dec
pop
lock
or
push
lods
(bad)
jg
shl
xchg
and
neg
ss
jmp
outs
ds
or
mov
jl
sub
loopne
das
ror
movs
test
push
test
cld
(bad)
(bad)
jmp
sti
fist
jge
inc
and
xchg
mov
sar
jo
sbb
(bad)
cmp
(bad)
cmp
(bad)
icebp
jbe
popa
cdq
dec
(bad)
mov
enter
xor
xor
test
or
cmp
(bad)
adc
mov
inc
mov
mov
rol
pop
mov
idiv
test
push
dec
out
and
xchg
in
imul
xchg
(bad)
(bad)
(bad)
(bad)
jnp
js
fs
add
add
inc
add
cmp
hlt
dec
ret
jno
mov
mov
mov
or
and
pusha
sbb
sbb
test
xchg
loop
(bad)
inc
fcom
retf
sub
repnz
or
sbb
mov
sub
and
or
test
(bad)
inc
inc
adc
and
cld
lds
sbb
(bad)
enter
adc
out
clc
or
and
xor
jb
outs
or
js
adc
or
sahf
in
js
jg
ret
shl
ins
pop
stos
cmps
das
movs
mov
add
fs
nop
sub
pop
lock
shr
mov
in
dec
mov
outs
shl
scas
or
jno
pop
mov
inc
adc
mov
ja
icebp
xor
outs
cmps
movs
int3
fadd
in
cmps
mov
(bad)
mov
fs
jmp
xor
icebp
adc
jg
sbb
ins
push
add
ds
mov
ror
fsub
nop
dec
jge
(bad)
mov
hlt
fwait
sub
jnp
mov
cli
jmp
cmps
or
sbb
cmp
enter
cmp
mov
add
mov
mov
mov
mov
dec
sub
test
sbb
fnstsw
out
shr
xchg
jl
shl
push
mov
jmp
clc
sbb
std
fmul
ins
ds
mov
or
push
jle
pushf
test
mov
mov
push
dec
pop
dec
punpcklbw
and
inc
cmp
scas
(bad)
(bad)
(bad)
dec
xchg
jmp
jne
xor
xchg
daa
outs
in
jno
dec
pop
mov
push
aad
rol
stos
mov
ror
dec
adc
push
mov
add
push
mov
(bad)
jmp
cmps
movs
ret
pop
js
or
dec
std
jmp
mov
mov
push
jno
add
ins
mov
dec
pop
push
pop
mov
push
jmp
xchg
repnz
cwde
jmp
nop
sub
lea
(bad)
(bad)
(bad)
jmp
cmp
pop
jmp
xchg
das
push
xchg
sub
mov
push
cdq
add
ret
gs
mov
or
nop
imul
sbb
mov
inc
add
fadd
jmp
repnz
inc
retf
(bad)
cwde
(bad)
mov
xlat
jg
test
leave
fucomip
adc
fs
call
(bad)
call
div
cs
pop
movs
out
inc
or
push
fimul
or
dec
stc
cmp
int3
sbb
add
adc
push
jg
xchg
mov
push
(bad)
mov
jmp
sub
mov
jmp
mov
lock
jmp
ds
jge
hlt
push
jne
push
pop
dec
(bad)
fcomip
mov
and
outs
ret
loope
dec
mov
into
sbb
mov
jp
imul
cli
adc
stos
(bad)
adc
ror
add
mov
pop
test
jmp
jg
inc
gs
cmp
jle
xchg
out
mov
inc
mov
(bad)
(bad)
call
push
push
inc
aad
aas
jo
jecxz
inc
xchg
cmp
cmp
cmp
shl
pusha
daa
shr
jo
cmc
pop
loopne
pop
shr
call
cli
sti
(bad)
and
sub
mov
ss
add
xchg
mov
hlt
or
and
out
and
adc
cmp
adc
mov
or
push
cmp
ja
mov
sub
stos
ret
mov
xor
clc
dec
jle
mov
add
push
(bad)
(bad)
jmp
add
fcom
jp
and
mov
push
push
mov
mov
jg
sbb
xchg
das
fisttp
sbb
icebp
rcr
pop
adc
test
ss
sub
dec
inc
ins
or
pusha
add
lahf
shr
mov
out
out
fstp
popa
test
fcom
(bad)
cmc
sar
adc
cmc
inc
js
add
mov
add
aaa
adc
inc
add
push
loop
sti
je
pop
fnstenv
(bad)
(bad)
dec
int
add
mov
inc
hlt
jecxz
shl
popa
cld
jecxz
out
mov
call
icebp
popa
shr
jp
lock
pop
xchg
and
inc
(bad)
clc
(bad)
ffreep
js
push
mov
pusha
xchg
repnz
xor
or
in
outs
clc
or
add
dec
add
ja
(bad)
(bad)
(bad)
inc
cmp
daa
nop
dec
aad
es
sub
out
shr
mov
hlt
add
adc
pop
and
fwait
mov
mov
sbb
add
shl
rcl
shr
cli
add
pop
aad
fcmove
adc
popf
(bad)
(bad)
(bad)
out
adc
rol
mov
pusha
test
push
and
fst
push
xor
call
or
or
xchg
test
mov
xchg
scas
(bad)
inc
add
pop
fdiv
adc
int
in
mov
ss
clc
(bad)
(bad)
jmp
sub
sti
mov
shl
add
inc
mov
pop
inc
cwde
aas
cmp
adc
(bad)
mov
movs
movs
aad
outs
cdq
mov
mov
push
hlt
mov
xor
int
jbe
scas
cmp
push
push
pop
ja
adc
sti
jns
cmc
scas
and
mov
xor
add
and
mov
push
push
retf
dec
push
sbb
pop
add
mov
xor
pop
icebp
retf
jg
clc
lds
xor
shr
mov
stos
and
(bad)
fistp
les
inc
mov
add
rcl
jnp
xor
cmp
fwait
icebp
adc
or
dec
rcl
stos
jbe
mov
adc
stos
call
popf
(bad)
pusha
pop
xchg
pop
and
jo
(bad)
(bad)
push
xchg
add
mov
jp
rcr
xchg
push
xchg
mov
es
(bad)
in
test
stc
call
(bad)
(bad)
jle
sar
xor
ins
sbb
repz
sbb
dec
gs
shl
ror
xor
sbb
aam
mov
and
test
adc
cmps
enter
mov
outs
push
pushf
xor
fisttp
popa
push
pop
add
ror
ffreep
push
pop
(bad)
cld
(bad)
call
imul
sub
jb
xchg
imul
add
(bad)
call
inc
jmp
xchg
pop
into
pop
pop
xor
jns
loop
pusha
scas
mov
jge
popa
hlt
add
xchg
js
leave
jmp
add
std
and
add
arpl
inc
outs
pop
out
leave
or
push
jecxz
add
cmp
pusha
addr16
(bad)
(bad)
dec
add
scas
lock
cs
ret
setl
mov
adc
pop
mov
push
ds
fisub
pop
mov
or
pop
xor
and
fbld
and
xor
mov
push
sbb
sar
fbld
mov
jg
ins
out
out
lock
mov
jmp
mov
adc
xchg
iret
outs
cmp
retf
cli
cmp
out
cmps
dec
jge
xchg
std
neg
addr16
pop
inc
or
lea
in
mov
xchg
popa
mov
mov
or
or
and
dec
and
xchg
mov
call
push
xor
xchg
push
movs
jmp
or
pop
mov
adc
and
rcl
mov
cld
push
push
inc
cmp
aaa
inc
aaa
inc
inc
xor
cmp
ss
xor
inc
inc
inc
xor
enter
inc
mov
pop
and
and
ja
nop
ds
xchg
mov
push
pop
push
sub
stc
jle
and
(bad)
(bad)
dec
and
or
or
jmp
imul
mov
push
sub
imul
scas
sub
adc
mov
add
enter
(bad)
(bad)
inc
out
(bad)
jb
in
sti
gs
sti
cld
jle
mov
into
sar
(bad)
cmp
(bad)
movs
inc
ficomp
addr16
inc
sbb
fimul
xchg
ror
(bad)
out
jp
adc
xchg
push
ins
(bad)
(bad)
cmp
mov
(bad)
(bad)
fild
jmp
mov
mov
cli
xor
jmp
fisubr
lock
sbb
push
(bad)
(bad)
(bad)
call
pushf
in
out
imul
and
aam
push
sar
lods
mov
mov
and
(bad)
cld
mov
sub
pop
mov
push
(bad)
(bad)
jg
cld
call
fcomi
dec
mov
jnp
cmc
dec
mov
(bad)
(bad)
dec
enter
pop
sub
sub
mov
mov
fwait
test
cmps
xchg
not
call
out
loop
fidivr
xchg
ss
push
ror
mov
jp
push
adc
jns
mov
dec
dec
jp
not
std
(bad)
jmp
daa
xor
into
out
xchg
inc
out
dec
mov
cwde
push
push
or
(bad)
(bad)
dec
inc
jno
xor
jb
cmp
outs
das
mov
push
dec
(bad)
xchg
dec
inc
(bad)
(bad)
(bad)
mov
push
mov
sub
popf
cmps
push
dec
bound
into
pusha
js
adc
test
mov
pop
ins
jmp
jle
loopne
fistp
fldcw
cld
add
(bad)
inc
in
aaa
add
push
fucomip
stos
movs
inc
mov
sub
push
(bad)
(bad)
cli
mov
cmp
push
and
call
es
ds
cld
lods
xor
es
stc
into
jb
pop
cld
dec
sti
in
add
push
stos
mov
add
cmp
push
pop
clc
inc
mov
sbb
(bad)
cdq
lock
lahf
mov
(bad)
(bad)
(bad)
fnsave
push
lock
mov
stos
repz
das
adc
xor
popf
sbb
pop
fcomp
(bad)
(bad)
jmp
outs
mov
push
cld
jmp
fld
dec
jmp
mov
or
jle
outs
mov
idiv
xor
adc
jb
push
sbb
ja
xchg
cmp
cmc
in
xor
(bad)
(bad)
mov
xchg
mov
int
ret
test
ficom
loopne
js
(bad)
sub
mov
hlt
(bad)
(bad)
(bad)
(bad)
jne
js
adc
ja
int3
and
jg
or
mov
loopne
push
cmp
dec
or
and
xchg
scas
nop
pop
jns
lock
lahf
fiadd
pusha
fdivr
(bad)
(bad)
push
sub
jmp
pop
jnp
fdiv
jp
in
xchg
fdiv
lea
iret
pusha
je
adc
fnstenv
scas
and
xor
dec
pop
inc
test
or
or
(bad)
inc
sti
inc
jp
push
ret
popa
mov
or
icebp
imul
xchg
or
sahf
xor
iret
adc
pop
test
ror
push
sbb
jmp
(bad)
(bad)
dec
lock
int3
sbb
mov
sar
cmps
movs
xchg
in
mov
mov
fcomp
call
cli
jmp
push
mov
pop
(bad)
movs
xchg
std
sbb
daa
inc
lock
inc
stos
into
addr16
(bad)
push
jo
jg
push
ficomp
test
and
shl
retf
aaa
std
push
adc
dec
sti
inc
push
movs
aaa
test
jp
loop
or
or
rcl
cmp
jno
adc
fcomp
jg
(bad)
(bad)
(bad)
(bad)
mov
aaa
jmp
ins
pop
ret
mov
add
ud0
sahf
neg
sbb
fiadd
mov
idiv
outs
(bad)
jmp
hlt
fidiv
cmc
lock
mov
inc
mov
aaa
(bad)
(bad)
(bad)
in
ja
pop
or
fdiv
neg
movs
mov
jo
mov
push
retw
jle
sti
(bad)
jg
call
out
out
(bad)
jae
sbb
and
cmps
dec
jae
and
(bad)
(bad)
jg
(bad)
repz
ret
mov
and
clc
mov
sbb
and
(bad)
(bad)
dec
dec
or
cmp
ins
adc
jne
mov
out
(bad)
jo
jg
mov
(bad)
fadd
fcom
fild
repz
push
cmp
test
xchg
pop
test
inc
cmovg
sub
jecxz
out
inc
and
aam
repz
push
xchg
(bad)
jmp
stc
out
in
xor
and
jb
ja
jecxz
mov
(bad)
push
cmp
pushf
inc
rol
(bad)
(bad)
(bad)
fabs
loop
dec
xor
(bad)
idiv
or
inc
movs
mov
push
xchg
neg
std
shl
jmp
or
(bad)
outs
xchg
adc
inc
(bad)
cmps
adc
mov
or
dec
xchg
jg
aam
inc
and
jecxz
jmp
mov
cmp
cmc
push
sbb
cmc
pop
out
and
daa
pop
xor
cmps
lahf
or
jmp
jmp
imul
xchg
jb
fwait
pop
xor
add
sti
je
mov
inc
or
shl
cli
inc
cmps
call
push
cld
(bad)
aas
inc
mov
xchg
hlt
(bad)
sub
xor
xchg
adc
jg
call
mov
(bad)
outs
mov
cwde
xor
rol
sbb
(bad)
mul
pop
mov
cmps
push
call
mov
cmp
sub
mov
sahf
repz
(bad)
(bad)
(bad)
fcomp
in
movs
push
xor
retf
loopne
sub
xlat
cmps
and
add
ficomp
cmp
loopne
(bad)
(bad)
push
mov
pop
sbb
or
movs
stos
xchg
icebp
xor
sub
jg
jno
sti
xor
xor
adc
jbe
pop
xor
test
(bad)
(bad)
call
mov
call
pop
or
mov
repnz
mov
imul
(bad)
call
pop
adc
adc
mov
aad
push
xchg
pop
adc
and
leave
repnz
fwait
mov
(bad)
(bad)
push
pop
call
sahf
aas
ret
mov
lahf
pop
xor
sub
imul
sahf
rcr
(bad)
(bad)
inc
dec
stc
inc
xlat
pop
mov
loopne
inc
mov
mov
jmp
mov
(bad)
push
not
inc
xlat
and
enter
cmp
pop
jmp
pushf
dec
xchg
adc
(bad)
(bad)
jmp
gs
xchg
out
sub
lahf
out
dec
fld
into
cld
iret
mov
test
(bad)
call
scas
jnp
add
and
inc
pop
nop
mov
ud2
mov
popa
dec
lods
cmps
inc
inc
ins
test
(bad)
call
not
jmp
(bad)
icebp
cli
sbb
pop
xchg
ret
scas
(bad)
(bad)
(bad)
fild
cmp
jle
mov
(bad)
stc
pop
stc
jmp
xor
popa
fstp
inc
xchg
fwait
push
sbb
cs
cmp
js
mov
lods
ror
into
inc
sbb
imul
call
mov
mov
outs
call
in
jmp
jmp
or
addr16
fdivr
adc
inc
pop
sbb
(bad)
push
aam
or
adc
call
push
aad
push
pop
inc
int3
nop
repnz
jo
les
test
(bad)
ins
ja
xor
push
push
out
mov
mov
sbb
jmp
mov
jge
lock
les
imul
paddsb
or
lds
in
dec
in
sub
pop
mov
dec
loop
cmp
mov
cmp
fucomi
cmp
(bad)
xchg
outs
repz
call
cld
pop
lds
jge
pop
xor
or
sbb
fs
sahf
scas
mov
(bad)
(bad)
(bad)
push
shl
imul
inc
adc
mov
or
cmp
lods
mov
pop
xchg
cmp
push
jnp
mov
and
inc
add
(bad)
jmp
jb
cmp
addr16
fdiv
dec
cwde
push
mov
data16
adc
sub
(bad)
dec
pop
pop
mov
xchg
mov
hlt
js
stos
pop
jnp
(bad)
(bad)
jmp
or
dec
dec
data16
out
out
addr16
fistp
clc
aaa
fadd
repz
clc
out
in
(bad)
(bad)
push
out
cdq
adc
or
shl
out
test
scas
mov
inc
pop
mov
(bad)
inc
rol
leave
movs
jp
(bad)
div
dec
mov
enter
leave
dec
cmp
(bad)
(bad)
(bad)
(bad)
js
cwde
les
jle
cld
sbb
iret
addr16
rcr
arpl
popa
or
lahf
hlt
mov
add
(bad)
(bad)
push
inc
add
push
dec
xor
xor
xchg
mov
jp
jno
xlat
(bad)
xchg
sar
rcr
stos
loop
add
loopne
not
add
stc
cmps
push
ficomp
stos
sti
mov
xchg
lds
mov
clc
(bad)
(bad)
out
icebp
aaa
out
sbb
pop
mov
jecxz
inc
cmp
sub
ficom
pop
(bad)
(bad)
(bad)
push
sbb
stos
and
(bad)
imul
out
lock
sahf
jmp
sub
cld
or
sub
jmp
ds
add
(bad)
push
and
inc
adc
icebp
div
test
pop
cmp
jge
test
and
in
cs
cmc
push
nop
inc
hlt
repz
fisub
xlat
add
movs
mov
loop
and
push
mov
aas
iret
sub
(bad)
(bad)
(bad)
jmp
or
adc
pop
cmps
ret
ret
adc
push
sbb
cld
(bad)
(bad)
call
mov
das
hlt
stc
xchg
shl
mov
es
sbb
hlt
gs
addr16
(bad)
(bad)
push
scas
ret
ss
xchg
inc
sbb
stos
sbb
es
in
cmp
(bad)
(bad)
(bad)
(bad)
push
dec
inc
cmp
int
pop
popa
inc
ret
repz
xchg
xor
test
mov
daa
movs
add
outs
pop
dec
push
(bad)
dec
enter
imul
ret
cdq
mov
sbb
(bad)
(bad)
(bad)
(bad)
out
test
sbb
jg
xor
out
mov
aam
jecxz
xor
sub
xchg
call
dec
jl
pop
loop
daa
sub
push
mov
add
add
jl
(bad)
mov
sbb
pop
rcl
mov
adc
pop
jo
(bad)
(bad)
push
inc
fisub
adc
(bad)
mov
xor
jno
dec
das
in
ss
test
(bad)
push
inc
in
mov
sub
mov
mov
push
in
adc
mov
push
out
enter
mov
mov
mov
js
in
jb
xor
test
(bad)
mov
pop
sbb
pop
clc
ins
adc
(bad)
(bad)
call
push
mov
xor
jb
adc
sbb
repz
inc
sub
mov
in
cmp
jmp
inc
call
adc
xchg
out
dec
push
dec
mov
pop
cli
std
(bad)
call
mov
mov
mov
int
mov
mov
sbb
ret
mov
xchg
cmc
dec
fidivr
jle
imul
stos
neg
adc
pop
(bad)
(bad)
jmp
push
jmp
push
push
hlt
movs
xchg
sbb
in
xor
mov
jge
and
retf
sbb
clc
xor
cld
outs
jbe
mov
sub
(bad)
(bad)
dec
dec
cmp
pusha
test
ja
ret
jno
ins
dec
mov
mov
dec
aaa
mov
ror
call
int3
push
hlt
(bad)
mov
xor
mov
shl
inc
(bad)
ret
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
xchg
int3
lods
bnd
js
pusha
cmp
mov
inc
jbe
lods
jecxz
(bad)
(bad)
call
imul
fs
sub
jns
shl
call
sbb
outs
(bad)
jns
cmps
fcomp
(bad)
(bad)
aas
cli
push
jnp
lock
adc
sahf
push
xor
xor
xor
jg
jle
call
cmc
sbb
dec
aas
test
and
retf
jmp
shr
ins
dec
(bad)
cli
(bad)
(bad)
call
mov
or
pop
mov
test
xchg
inc
or
push
inc
inc
xor
fist
mov
das
(bad)
clc
mov
jecxz
mov
xor
outs
mov
pop
sahf
push
loopne
fmul
(bad)
call
mov
or
and
aam
cld
inc
repz
pop
push
dec
cmp
(bad)
(bad)
mov
dec
xchg
aad
and
mov
inc
cmp
es
hlt
fscale
rcr
(bad)
(bad)
jg
hlt
jae
xor
jne
sahf
xlat
aam
dec
(bad)
cmp
jns
lea
jecxz
dec
shl
int3
pop
and
or
addr16
jmp
std
stos
and
push
jns
ds
rcr
int3
in
(bad)
repz
(bad)
(bad)
(bad)
jmp
inc
jbe
fnstsw
mov
stos
in
mov
push
in
addr16
movs
xor
ins
xlat
fidiv
sub
adc
add
in
in
push
ret
sar
add
xchg
pop
fadd
push
xor
les
add
(bad)
push
sahf
out
pop
xor
pop
dec
or
jb
popf
test
fiadd
adc
mov
cmp
(bad)
inc
pop
push
add
pop
mul
pop
push
(bad)
dec
into
jl
mov
out
jmp
pop
in
fldpi
fisttp
add
push
fdiv
push
mov
scas
(bad)
(bad)
(bad)
call
enter
add
ins
jae
(bad)
cmc
inc
cmc
test
pop
pop
aam
jg
popa
dec
jle
(bad)
call
jmp
lock
xor
jmp
mov
notrack
(bad)
jmp
cli
stc
into
dec
movzx
aas
fidivr
dec
cmovns
mov
repnz
(bad)
(bad)
inc
icebp
test
stc
push
push
rcl
pop
gs
pop
fisttp
xor
cmps
or
lock
or
add
loope
movs
cmp
and
in
mov
add
mov
test
adc
retf
std
(bad)
jmp
xlat
xchg
bound
int
loope
int
mov
pop
push
call
stc
jns
in
and
jl
out
imul
popf
mov
(bad)
xor
dec
loope
jmp
aaa
out
jns
aam
inc
fidiv
jnp
shr
add
(bad)
(bad)
dec
push
add
sub
add
xchg
mov
test
aam
jno
xor
popf
adc
aas
std
jmp
out
add
in
loop
out
cmp
pop
push
(bad)
sbb
mov
jnp
test
xchg
test
(bad)
inc
jl
iret
mov
popf
mov
mov
push
push
pusha
(bad)
jmp
mov
enter
sbb
dec
gs
loopne
and
xlat
(bad)
inc
repz
fist
movs
pop
mov
mov
add
(bad)
(bad)
push
adc
mov
iret
js
mov
and
sub
loop
cld
test
(bad)
(bad)
(bad)
jmp
mov
repz
rol
cld
ins
mov
mov
les
ins
jl
mov
jmp
(bad)
push
cmp
lahf
mul
jmp
mov
lock
(bad)
(bad)
mov
leave
pop
jge
fst
jnp
lahf
mov
int
and
mov
jnp
retf
xchg
in
fbld
int
scas
cs
ret
mov
jns
dec
in
(bad)
(bad)
(bad)
push
inc
popa
xor
call
ficomp
shl
(bad)
(bad)
aam
jle
(bad)
(bad)
jmp
(bad)
push
clc
sbb
jno
lock
add
in
or
iret
pop
ret
(bad)
jmp
movs
mov
dec
retf
lds
mov
addr16
jge
mov
push
mov
mov
arpl
inc
ror
out
mov
(bad)
(bad)
call
sbb
sbb
out
lods
or
das
clc
pop
and
push
fst
mov
(bad)
sar
(bad)
push
xchg
rcl
pop
ja
dec
jle
jmp
dec
push
inc
jbe
test
mov
xor
scas
or
call
mov
call
mov
outs
sti
jnp
push
push
or
xor
and
mov
lahf
aaa
cld
idiv
test
adc
mov
lahf
inc
addr16
cmps
in
scas
cld
or
(bad)
(bad)
(bad)
inc
mov
repz
mov
outs
repz
jae
inc
jp
inc
dec
mov
(bad)
(bad)
mov
cli
movs
inc
shl
cmp
int3
clc
xor
pop
mov
mov
loop
cmp
sbb
add
mov
sbb
dec
repnz
mov
(bad)
(bad)
(bad)
call
jb
or
addr16
cs
movs
jg
daa
mov
xchg
fimul
shl
idiv
(bad)
jmp
sbb
stos
aam
mov
mov
inc
xlat
adc
cs
(bad)
(bad)
(bad)
dec
aam
repnz
pop
pop
lods
mov
pop
rcr
je
add
push
in
(bad)
call
sbb
adc
fbld
mov
popa
dec
sbb
inc
inc
add
(bad)
(bad)
(bad)
push
fidivr
shl
and
loope
add
(bad)
fiadd
call
cmps
xchg
jne
into
sbb
pop
mov
inc
mov
rol
jmp
dec
(bad)
(bad)
dec
neg
stos
dec
popf
mov
mov
pusha
mov
(bad)
inc
retf
hlt
xor
sub
pop
shl
(bad)
mov
jp
inc
jmp
xor
or
jmp
and
movs
std
gs
ss
add
jmp
and
pushf
mov
dec
into
test
call
jae
movs
loope
xchg
push
dec
xlat
mov
xor
push
ret
push
(bad)
loopne
dec
ret
jne
loopne
dec
in
dec
sub
not
xchg
test
push
out
imul
stos
mov
(bad)
bound
lea
in
xchg
(bad)
sahf
popf
dec
adc
sub
mov
push
pusha
imul
(bad)
pop
sub
sti
stos
jae
mov
mov
fbld
nop
inc
retf
scas
sbb
xchg
dec
add
mov
cli
inc
je
loopne
js
dec
(bad)
inc
pop
pushf
jbe
ja
in
movs
fisubr
and
cmc
sbb
(bad)
outs
cli
mov
mov
jb
xlat
mov
inc
shl
out
ficom
pop
adc
fucomi
inc
jb
xchg
inc
mov
clc
aam
sub
ficomp
or
(bad)
push
sti
(bad)
jg
jmp
sahf
pushf
ret
fcomp
fwait
stos
test
cld
push
cmp
mov
or
shl
inc
xchg
or
jmp
arpl
xor
adc
and
jp
fstp
mov
loop
shr
ja
(bad)
mov
push
or
push
test
(bad)
jg
movs
lahf
sub
adc
jne
cmc
loopne
jle
sbb
mov
sahf
cwde
mov
cld
cmp
ins
xchg
jge
outs
push
popf
sub
(bad)
dec
cmc
xchg
into
mov
xchg
dec
das
lods
cmp
fdiv
dec
jl
hlt
pop
cmps
pop
mov
push
xor
sub
shr
in
(bad)
in
sbb
clc
ret
jge
cmp
cmp
ss
(bad)
jmp
push
dec
ins
cld
(bad)
cmps
imul
ror
and
sbb
in
bound
cs
sub
pop
mov
les
clc
(bad)
(bad)
push
scas
(bad)
push
sbb
loope
dec
(bad)
xchg
push
pop
inc
dec
vpaddsw
movs
jb
(bad)
dec
pop
push
inc
(bad)
dec
fsubr
imul
cmp
(bad)
inc
mov
xchg
or
or
lock
and
nop
repnz
(bad)
dec
add
leave
movs
lock
mov
sub
sbb
mov
test
daa
push
jmp
push
repz
aaa
mov
inc
rcr
fld
(bad)
call
nop
idiv
imul
imul
loop
retf
cmp
hlt
xchg
imul
mov
sar
sub
fs
sub
scas
movs
dec
jp
mov
(bad)
(bad)
jmp
pop
push
mov
mov
test
jns
nop
xor
scas
jl
retf
push
in
shl
(bad)
(bad)
(bad)
fldl2t
push
jne
lds
and
mov
lds
mov
sbb
sub
dec
mov
xchg
out
inc
ja
dec
xor
sub
xor
aaa
add
push
clc
sbb
arpl
(bad)
jae
(bad)
call
and
out
mov
jmp
es
xchg
push
inc
(bad)
(bad)
call
inc
mov
sahf
sub
mov
xlat
gs
pop
fisttp
pop
cmc
(bad)
(bad)
dec
inc
and
or
jmp
jge
dec
push
jne
mov
jne
or
add
inc
push
jg
icebp
xor
sub
push
xor
(bad)
jg
(bad)
std
mov
mov
scas
jle
test
or
lds
std
(bad)
(bad)
dec
cmps
shl
hlt
dec
push
jl
loopne
push
xchg
jmp
call
jmp
(bad)
push
lock
loopne
mov
mov
imul
pop
stos
cmp
(bad)
(bad)
mov
inc
mov
mov
xor
lods
inc
adc
sbb
rol
(bad)
dec
and
push
push
dec
aas
pop
(bad)
gs
out
cmp
mov
mov
imul
or
call
mov
loop
sbb
mov
call
(bad)
jmp
lahf
add
xor
aaa
cs
ja
je
fcompp
push
jmp
jae
(bad)
(bad)
jmp
hlt
dec
fild
xchg
mov
xor
mov
inc
sub
jle
cmps
inc
inc
or
(bad)
(bad)
(bad)
jp
scas
mov
sahf
jne
sar
or
not
pop
(bad)
xor
(bad)
mov
adc
push
inc
xchg
cli
(bad)
shl
pop
retf
lea
jnp
(bad)
call
std
loop
call
inc
jle
jecxz
lea
pop
and
mov
sub
mov
loope
into
jmp
inc
pop
stc
mov
cmc
(bad)
(bad)
cmp
fcom
or
xlat
ins
int3
cld
ja
ins
sub
out
icebp
dec
push
dec
ja
(bad)
(bad)
(bad)
dec
test
sbb
out
sbb
int3
fmul
js
jo
mov
jns
push
out
sti
retf
ja
xlat
(bad)
(bad)
jp
xchg
fs
adc
cmps
test
mov
cmp
ss
call
jg
fisub
in
hlt
jae
(bad)
xlat
xchg
push
fcomi
push
push
cmp
fst
xor
sar
mov
jge
data16
adc
ror
xor
sub
iret
fidivr
bound
mov
aam
push
movs
mov
xor
xor
push
fdiv
jge
jp
data16
leave
test
cli
push
pop
(bad)
sub
dec
cdq
icebp
pop
imul
push
jecxz
(bad)
(bad)
dec
lea
jg
out
outs
cmp
dec
ror
cmp
pop
cmps
inc
dec
rol
arpl
xchg
in
(bad)
(bad)
(bad)
inc
and
pop
inc
pop
outs
scas
adc
pop
out
and
and
out
ficomp
test
(bad)
inc
in
(bad)
(bad)
(bad)
(bad)
cli
xchg
adc
xchg
adc
dec
cld
sbb
cmps
mov
aad
jmp
clc
std
mov
or
iret
idiv
pop
stos
jge
adc
inc
addr16
(bad)
imul
mov
push
je
cs
cmp
push
pop
out
shr
loope
je
jnp
cmp
imul
(bad)
fild
sub
and
cmp
pop
push
cmps
popa
xchg
cld
and
dec
test
loope
movs
(bad)
(bad)
(bad)
call
adc
push
push
pop
fistp
adc
fadd
jl
inc
retf
push
pop
and
(bad)
dec
mov
sub
mov
or
not
jp
(bad)
(bad)
dec
imul
rol
or
fcom
das
cmp
sub
js
ja
(bad)
(bad)
call
fnstcw
sub
mov
cs
daa
(bad)
push
pop
daa
mov
rcr
cmp
dec
(bad)
(bad)
cmp
shl
fist
(bad)
xchg
rol
call
sahf
sub
jnp
mov
add
mov
icebp
es
xchg
dec
sub
mov
ins
test
cwde
mov
xor
or
call
sub
rol
aam
(bad)
(bad)
push
push
hlt
mov
fwait
jae
jmp
fcmovnbe
mov
inc
pop
or
push
jecxz
jb
push
mov
push
daa
(bad)
(bad)
mov
xchg
jmp
rcr
loop
repnz
jecxz
out
aad
das
cli
dec
repnz
and
mov
dec
dec
sbb
jmp
std
push
mov
add
mov
cmp
leave
add
xchg
repnz
data16
mov
(bad)
jmp
(bad)
jp
imul
dec
cmp
ss
push
bound
je
mov
jne
sub
jmp
out
xchg
jbe
les
aad
jno
mov
jns
(bad)
(bad)
push
mov
sub
mov
inc
jbe
neg
mov
adc
mov
out
sahf
push
in
ja
call
pusha
pop
mov
fs
adc
mov
adc
test
js
or
rol
hlt
loopne
mov
ins
stos
pop
(bad)
jb
inc
or
jecxz
adc
(bad)
jmp
sbb
and
mov
cwde
test
mov
(bad)
fisttp
jmp
not
rol
(bad)
(bad)
call
inc
shl
sub
loopne
cmp
sub
xor
add
call
xor
rcl
pop
push
sti
push
test
mov
mov
pop
sbb
mul
test
jmp
cmp
cli
loopne
mov
imul
out
repz
imul
or
fiadd
call
popa
mov
fidivr
mov
push
imul
(bad)
(bad)
jmp
shl
stos
mov
push
lods
sbb
sub
sub
cmp
mov
sbb
(bad)
(bad)
(bad)
mov
jb
xor
ja
ins
mov
ds
dec
daa
div
aam
pop
out
(bad)
(bad)
call
inc
jecxz
pop
in
div
fimul
stc
fs
xchg
fmul
int3
popf
xchg
(bad)
(bad)
(bad)
jmp
nop
push
inc
pop
push
mov
jmp
hlt
mov
ins
sbb
idiv
(bad)
(bad)
dec
mov
aad
cmp
xlat
aaa
pop
fidivr
cmps
mov
std
std
inc
pop
mov
xor
hlt
dec
ss
pop
xchg
adc
mov
mov
mov
push
ins
ins
adc
cmp
shl
push
pop
(bad)
jmp
or
sbb
mov
mov
test
(bad)
(bad)
in
push
push
std
fstp
loope
sbb
jns
shl
fistp
jmp
dec
add
inc
out
stos
call
jl
sub
shl
retf
dec
jmp
out
pushf
pusha
in
js
xchg
ja
call
jle
dec
cmp
pop
aad
(bad)
(bad)
jmp
pushf
adc
div
js
jnp
out
icebp
(bad)
(bad)
mov
daa
push
(bad)
dec
pop
sub
test
out
or
sub
xchg
(bad)
(bad)
(bad)
push
mov
imul
(bad)
inc
scas
push
sub
outs
repz
iret
lods
dec
dec
jmp
mov
movs
in
fiadd
jns
dec
mov
jnp
ja
mov
mov
mov
inc
cwde
or
jnp
mov
dec
sar
cli
jmp
mov
mov
shl
ror
std
push
mov
cmps
sar
dec
mov
out
(bad)
(bad)
(bad)
(bad)
fld
jle
xor
push
in
inc
cli
dec
dec
sbb
in
dec
nop
dec
test
(bad)
(bad)
inc
mov
inc
xchg
mov
lock
dec
push
hlt
movs
push
lds
sbb
ss
jno
loop
in
mov
jmp
cmovg
jmp
(bad)
imul
aas
popa
inc
jo
cdq
mov
cmp
fisttp
test
clc
(bad)
(bad)
inc
push
aaa
aas
adc
push
jge
sbb
clc
ror
sahf
dec
int
dec
out
mov
pop
sub
aaa
jmp
jmp
(bad)
jg
push
mov
cmps
mov
cs
dec
mov
out
push
pop
cmp
xor
lock
call
ss
inc
outs
mov
push
cmps
pop
xor
shl
(bad)
(bad)
(bad)
push
retf
sbb
icebp
lock
pop
test
jg
out
push
sti
jg
pop
loopne
xor
cli
mov
push
pop
pop
js
jmp
stos
(bad)
call
ins
rcl
and
pop
fsubr
stos
sbb
(bad)
mov
fist
rcr
add
push
repz
cmp
pop
shr
in
int
sbb
(bad)
(bad)
(bad)
call
fst
cmp
mov
adc
loope
scas
scas
movlps
pop
and
lds
(bad)
call
add
outs
pop
fisubr
cmp
xchg
or
inc
(bad)
(bad)
(bad)
mov
xor
popa
jb
mov
sbb
pop
xchg
adc
aas
pop
jns
call
fisttp
fst
pusha
fsub
lds
ins
push
xchg
(bad)
inc
(bad)
inc
push
sbb
into
push
out
(bad)
jbe
popf
popa
test
(bad)
push
cs
hlt
fdiv
stos
and
shr
xchg
mov
push
aam
push
in
(bad)
(bad)
(bad)
jmp
(bad)
and
aam
daa
jmp
push
jmp
push
or
jg
(bad)
jmp
lahf
(bad)
sbb
xor
xchg
(bad)
test
fwait
out
pop
call
mov
icebp
cmp
xchg
cmp
icebp
sub
in
call
cmp
data16
call
or
fisubr
fcom
and
sti
in
ror
jge
(bad)
(bad)
(bad)
(bad)
mov
xor
hlt
mov
adc
jnp
sub
test
jmp
sti
pop
ins
xor
mov
pop
sub
call
cmp
loopne
(bad)
(bad)
cmp
or
ss
mov
xchg
mov
push
clc
in
(bad)
(bad)
(bad)
mov
shl
jo
add
sti
dec
popf
lahf
inc
mov
pop
shr
test
sub
(bad)
(bad)
inc
inc
bound
mov
push
sbb
sbb
mov
out
rcl
(bad)
call
je
test
sub
repz
mov
(bad)
(bad)
(bad)
(bad)
aas
daa
xchg
push
sbb
jmp
imul
test
aam
sub
dec
push
out
cmp
data16
aaa
aad
(bad)
push
mov
and
mov
imul
repnz
add
(bad)
mov
test
loop
jmp
dec
ror
cs
and
jge
lods
fsubr
sar
dec
xchg
hlt
test
call
test
sub
xchg
push
in
call
pop
(bad)
(bad)
(bad)
(bad)
fcomip
iret
xor
jmp
stos
sub
jmp
inc
inc
rol
popa
xchg
popf
cmps
sbb
jae
(bad)
(bad)
jmp
int
fucomip
adc
jmp
jbe
jg
lods
inc
and
mov
mov
shr
sbb
(bad)
mov
adc
push
pop
or
ins
cmp
mov
cmp
loope
iret
adc
aam
popf
lods
call
adc
xchg
sti
rcr
je
out
jo
jp
sahf
xchg
dec
idiv
(bad)
(bad)
jmp
mov
push
cwde
inc
shr
xchg
push
rcl
dec
mov
push
inc
xchg
ror
test
sti
rcr
(bad)
(bad)
jmp
fcmove
js
movs
inc
add
cmp
sub
cmp
dec
xchg
hlt
cli
sub
dec
shr
mov
jmp
cli
jle
sbb
fs
sti
xchg
xchg
sbb
add
jns
inc
push
mov
lock
jo
fisttp
fwait
jp
xchg
(bad)
or
lock
(bad)
call
sbb
sbb
jecxz
mov
imul
jbe
fld
cli
ss
xor
sar
mov
cmps
in
leave
std
rcl
adc
cmp
jg
loop
inc
sti
imul
popa
inc
xor
(bad)
mov
mov
cs
(bad)
(bad)
push
jmp
arpl
retf
or
jmp
inc
xor
movs
jmp
xchg
(bad)
(bad)
fild
movs
cmp
cmp
jnp
jbe
ret
mov
(bad)
(bad)
dec
xor
scas
xchg
ds
pusha
mov
out
xor
cmp
stos
mov
js
or
(bad)
(bad)
call
mul
pop
pop
dec
arpl
sahf
sbb
mov
jmp
sbb
cmp
mov
mov
add
fidivr
sti
inc
jecxz
cs
mov
retf
push
aaa
mov
int
pop
sub
stc
call
push
lods
stos
std
cmp
leave
fdivrp
pop
lock
jmp
jbe
pop
mov
(bad)
(bad)
push
jg
cmps
in
test
add
shl
xchg
mov
and
cmps
and
(bad)
cmps
mov
jmp
xor
dec
(bad)
aad
fdivrp
loop
je
xchg
int
ret
cmp
and
das
std
mov
int3
scas
or
adc
mov
mov
(bad)
(bad)
sub
inc
cmp
cmc
fidivr
cmp
pop
and
dec
bnd
push
sub
mov
and
adc
call
sub
push
std
inc
pop
cmp
mov
pop
das
mov
aam
retf
mov
mov
call
jmp
jp
stos
dec
cli
std
call
call
or
push
mov
clc
iret
xor
aad
cld
(bad)
(bad)
push
lock
xor
lock
pop
lods
das
jecxz
fs
inc
hlt
cmps
jbe
loope
cmc
(bad)
(bad)
jmp
rcl
xchg
cmp
ret
sbb
sub
shr
push
(bad)
mov
popf
mov
or
xor
out
fstp
adc
lds
sbb
(bad)
(bad)
dec
call
movs
cmp
repnz
push
iret
adc
cdq
out
xor
(bad)
fbld
adc
pop
mov
cmps
inc
clc
sar
jmp
sahf
cld
mov
fs
(bad)
jg
add
xchg
or
mov
dec
inc
fwait
daa
pavgb
sti
xlat
pmulhw
retf
(bad)
jg
dec
daa
add
push
in
fcom
addr16
test
xchg
jne
retf
sub
xlat
or
mov
ds
leave
pushf
fwait
mov
add
out
(bad)
(bad)
dec
lahf
repz
aaa
fwait
lods
imul
sti
loope
jno
cmps
mov
shl
sbb
jg
call
cld
add
adc
lahf
jp
mov
les
pop
cld
scas
mov
jmp
popa
lods
push
add
sbb
mov
push
(bad)
(bad)
fcomip
enter
fmul
hlt
mov
movs
mov
mov
pusha
mov
mov
(bad)
(bad)
(bad)
(bad)
out
into
iret
(bad)
sar
outs
or
jg
aaa
out
and
into
mov
cmc
inc
adc
add
pushf
mov
lea
mov
and
cmp
(bad)
jg
outs
or
xchg
mov
pop
rcr
mov
xor
addr16
push
or
or
inc
xchg
(bad)
mov
test
fisubr
(bad)
(bad)
(bad)
push
pop
fnstsw
cmp
mov
retf
mov
inc
jp
jg
(bad)
(bad)
jmp
addps
inc
iret
or
stos
pop
scas
cmp
or
hlt
and
dec
(bad)
(bad)
cmp
inc
lahf
fstp
dec
(bad)
mov
jg
nop
pop
call
test
jmp
push
or
std
je
mov
(bad)
push
fucomip
adc
(bad)
(bad)
call
(bad)
cmp
pop
sti
jge
repz
inc
js
adc
(bad)
(bad)
cmp
jecxz
adc
push
and
out
cmp
inc
call
aad
(bad)
pop
and
into
inc
mov
(bad)
movs
les
fidivr
(bad)
das
and
lahf
test
sbb
cld
pop
popa
sti
inc
or
xchg
adc
mov
jmp
add
ret
outs
or
loope
sti
mov
(bad)
call
mov
xor
int
and
pop
fld
sbb
jno
es
or
mov
(bad)
(bad)
(bad)
sti
sbb
stc
into
into
fbld
movs
ja
adc
mov
sbb
pop
mov
sub
xor
pop
int
jmp
rol
lea
pop
dec
dec
push
mov
xlat
fs
gs
push
xchg
repz
inc
(bad)
mov
inc
inc
jmp
ret
cli
jmp
sbb
sub
repnz
(bad)
(bad)
(bad)
fld
cli
push
std
idiv
shl
fwait
(bad)
outs
and
mov
pop
xchg
jns
(bad)
call
adc
cdq
lock
sbb
adc
js
imul
pop
(bad)
(bad)
(bad)
jmp
pop
pop
out
mov
jno
or
(bad)
call
mov
lea
mov
mov
enter
mov
dec
not
(bad)
cmc
jo
frstor
xor
dec
mov
lods
loopne
sub
push
push
mov
and
mov
mov
or
(bad)
mov
jo
(bad)
(bad)
(bad)
push
inc
and
pushf
(bad)
xor
aaa
push
jae
adc
sbb
test
(bad)
(bad)
mov
pop
call
cmp
cmp
inc
jbe
add
out
xchg
movs
add
aaa
jmp
mov
bound
xor
xor
rol
lock
fist
mov
stos
mov
sub
retf
inc
sub
lock
adc
stc
dec
cmp
dec
ret
lea
(bad)
jg
jmp
lahf
cwde
enter
inc
inc
and
adc
xchg
mov
ret
xchg
push
leave
and
ja
shl
call
mov
cmp
inc
pop
lock
pop
jo
adc
rcl
mov
sar
push
push
shl
cmp
mov
movs
std
lahf
mov
cmp
sbb
dec
stos
test
add
sahf
sar
(bad)
xchg
cld
inc
je
mov
and
or
(bad)
(bad)
(bad)
mov
push
push
jg
iret
out
(bad)
lahf
retf
adc
mov
sub
and
inc
(bad)
in
(bad)
push
jno
xor
adc
jle
addr16
mov
inc
cli
test
and
push
mov
mov
lds
inc
loopne
adc
call
(bad)
sub
jno
mov
pop
loopne
mov
test
sti
not
cdq
int
jne
out
jle
fcom
fwait
int3
xor
test
(bad)
and
in
or
or
sub
enter
aad
bnd
fs
(bad)
(bad)
jg
(bad)
hlt
or
push
jle
add
xchg
call
das
xor
push
or
(bad)
inc
idiv
adc
dec
adc
adc
repz
hlt
or
in
sub
adc
shl
sar
jb
(bad)
in
pop
cmp
pop
movs
(bad)
(bad)
mov
xor
inc
adc
das
movs
xchg
mov
and
add
shl
fwait
jnp
push
add
xchg
jo
sbb
in
cmps
and
mov
push
mov
bound
cmp
cmp
dec
inc
or
ret
push
or
js
mov
push
shl
lea
jae
cmp
pop
adc
in
jmp
stos
cmc
fstp
cli
(bad)
or
pusha
pushf
xor
sub
stos
sbb
sbb
inc
retf
cmp
jmp
mov
imul
or
mov
inc
(bad)
dec
shl
jnp
mov
int
sar
adc
sub
xchg
addr16
(bad)
(bad)
call
dec
cmps
pop
sub
mov
mov
loop
(bad)
push
jp
dec
sti
cmc
pop
es
sub
inc
(bad)
jmp
cmp
scas
and
and
mov
out
mov
(bad)
(bad)
call
fild
sub
jbe
adc
movs
mov
xchg
mov
out
repnz
jmp
lds
aas
sbb
push
dec
push
or
(bad)
(bad)
(bad)
(bad)
(bad)
js
dec
jmp
or
iret
sbb
int
mov
rcr
pop
and
(bad)
(bad)
(bad)
inc
xchg
jne
jl
xchg
ror
push
mov
mov
sub
jle
cli
fist
cld
(bad)
dec
xchg
sub
inc
mov
fwait
imul
adc
adc
js
mov
xchg
jg
mov
mov
pop
jecxz
jmp
jge
jnp
or
(bad)
pop
call
stc
mov
movs
dec
add
pop
leave
mov
std
(bad)
nop
hlt
test
lods
hlt
pop
jbe
mov
arpl
jne
or
(bad)
(bad)
dec
xchg
dec
fidiv
push
or
int3
push
sti
out
stos
ins
mov
(bad)
outs
cmp
str
(bad)
(bad)
(bad)
fst
loop
mov
not
into
push
jmp
adc
popf
repz
cld
mov
test
das
dec
je
popf
inc
movs
mov
sub
adc
push
(bad)
(bad)
(bad)
dec
jle
ins
repz
out
mov
cmp
stos
inc
loopne
arpl
sbb
adc
sahf
dec
add
(bad)
(bad)
push
pop
std
jg
add
cmp
lahf
and
add
sub
lahf
adc
in
push
sbb
(bad)
jmp
xchg
and
ret
push
inc
adc
fadd
std
loop
loop
adc
aas
push
xchg
push
and
(bad)
(bad)
(bad)
fcomp
(bad)
mov
data16
pop
mov
(bad)
fldenv
call
imul
cmp
jmp
es
sbb
fadd
lods
or
leave
(bad)
scas
inc
in
inc
mov
mov
dec
mov
lahf
cld
(bad)
(bad)
call
mov
test
neg
and
mov
jmp
ret
loop
mov
shl
add
mov
mov
xchg
mov
push
push
or
lock
push
icebp
(bad)
(bad)
call
cmp
loope
add
xlat
mov
add
mov
ds
cmp
jmp
pop
adc
or
movs
jge
mov
movs
aas
pop
push
fldcw
adc
popf
push
(bad)
jg
ss
jb
push
xor
jmp
jae
adc
outs
mov
idiv
outs
(bad)
(bad)
(bad)
call
das
call
fst
scas
outs
sub
out
in
and
jge
ror
inc
dec
add
mov
retf
sbb
jbe
(bad)
icebp
and
cmp
(bad)
lods
lods
sub
(bad)
das
clc
cmps
jmp
out
lods
icebp
jp
lahf
fwait
sbb
mov
jge
jge
(bad)
(bad)
(bad)
mov
inc
jp
cmp
sub
clc
push
int
jo
adc
push
dec
jge
aad
push
xchg
(bad)
(bad)
(bad)
call
test
and
pop
popa
jne
mov
sub
loope
jnp
inc
sub
int3
push
mov
fistp
(bad)
mov
add
clc
inc
es
xlat
out
fs
daa
ja
xor
dec
cmc
xor
cmp
int3
frstor
mov
push
xchg
out
pusha
ret
(bad)
(bad)
sti
jns
push
ins
dec
cmc
pushf
and
ss
mov
(bad)
push
sub
loop
sbb
js
mov
ret
cmps
fbld
ja
cmp
or
scas
mov
jnp
ins
stc
adc
add
inc
retf
(bad)
pop
(bad)
fisttp
and
fnstsw
aad
xlat
rcl
adc
mov
hlt
pop
push
jecxz
jge
outs
pop
icebp
popf
push
call
xor
call
mov
loope
ins
iret
jne
rcl
add
nop
das
cmp
(bad)
(bad)
(bad)
fnstenv
leave
cli
adc
dec
cmp
popf
dec
inc
sbb
js
retf
stc
mov
push
sub
clc
sbb
test
(bad)
(bad)
(bad)
clc
jecxz
sub
push
test
lahf
inc
es
test
outs
xor
jbe
xlat
fld
cmp
jmp
(bad)
push
push
mov
push
xchg
scas
shr
movs
mov
xor
and
stos
not
(bad)
dec
(bad)
jge
add
inc
enter
xchg
mov
mov
pop
jae
cwde
mov
iret
sbb
ss
(bad)
jg
mov
retf
add
pop
inc
movs
or
sub
pusha
pop
(bad)
(bad)
(bad)
(bad)
or
dec
pop
stos
jmp
xchg
and
mov
addr16
sahf
imul
jecxz
(bad)
(bad)
(bad)
(bad)
fisubr
jno
jl
repnz
repz
or
aaa
fisttp
and
sbb
sbb
data16
popa
cli
pop
daa
push
adc
push
shr
add
xchg
jmp
push
loopne
shr
lods
addr16
dec
inc
(bad)
repz
(bad)
(bad)
(bad)
adc
mov
hlt
or
mov
sbb
add
imul
(bad)
(bad)
jmp
or
enter
jge
out
pop
xlat
loop
adc
test
and
iret
mov
inc
pop
xor
(bad)
mov
xor
sahf
popa
mov
inc
arpl
jp
movs
cmps
cmp
bnd
(bad)
inc
push
jmp
mov
sbb
imul
js
iret
ins
ret
lods
stos
(bad)
out
jmp
mov
test
inc
cwde
cmp
mov
xchg
and
(bad)
or
push
pop
lods
(bad)
hlt
cwde
loopne
push
pop
pop
cmps
je
jmp
jg
inc
jne
inc
fild
adc
fcomp
mov
(bad)
mov
daa
inc
mov
push
cwde
daa
(bad)
push
jmp
adc
fcom
jmp
sub
ja
sbb
(bad)
(bad)
(bad)
call
sbb
cmp
ficom
hlt
les
iret
jmp
out
adc
hlt
adc
push
(bad)
(bad)
inc
xchg
sub
mov
sti
mov
dec
outs
retf
jmp
and
pop
jns
pop
push
sbb
int3
mov
dec
ss
pusha
and
adc
dec
inc
mov
push
fcom
out
jmp
(bad)
(bad)
(bad)
cmp
add
sub
scas
das
retf
test
fild
xchg
push
adc
xchg
or
(bad)
cmp
xlat
lahf
in
(bad)
xor
jne
mov
xchg
in
fcos
(bad)
(bad)
call
sbb
xor
test
arpl
sbb
test
jmp
push
pop
push
shl
mov
pushf
mov
adc
(bad)
mov
xchg
push
aad
std
push
xor
mov
sti
add
(bad)
mov
mov
test
push
lods
adc
out
dec
js
inc
bound
or
(bad)
(bad)
fistp
and
(bad)
repz
mov
into
arpl
aaa
test
jnp
(bad)
(bad)
(bad)
mov
ret
xchg
scas
and
add
dec
lods
test
rcr
rcr
or
and
shl
retf
mov
rep
popf
pop
ud0
(bad)
(bad)
jmp
inc
fldenv
cmp
cmp
es
or
mov
dec
fcom
out
inc
(bad)
(bad)
(bad)
inc
mov
sti
cld
cmp
fdivr
fsubr
scas
cmps
push
(bad)
(bad)
call
and
xchg
pop
add
inc
fisubr
mov
icebp
inc
data16
popa
nop
mov
(bad)
dec
js
lock
adc
jae
mov
cmp
movsx
adc
push
mov
movs
addr16
jne
mov
jno
arpl
pop
xchg
xchg
jbe
cdq
adc
repz
or
add
(bad)
jmp
sub
sti
pop
fst
cmps
iret
push
fsubrp
fmul
jb
xlat
int
push
pushf
(bad)
(bad)
dec
sahf
pusha
xchg
push
mov
mov
pop
mov
pushf
xchg
hlt
in
xor
fsubr
(bad)
jmp
loop
xchg
xchg
sub
sub
cmp
dec
mov
adc
mov
inc
add
rol
(bad)
(bad)
push
dec
stos
lds
imul
icebp
add
(bad)
(bad)
jmp
push
mov
sahf
mov
lods
in
fnstenv
lahf
test
stos
(bad)
(bad)
jmp
ins
lock
stos
aas
add
and
dec
cmp
xor
push
push
xchg
les
push
xor
push
push
rcl
dec
dec
xchg
mov
inc
outs
movs
(bad)
(bad)
(bad)
push
mov
lea
jbe
(bad)
pusha
jne
pop
cmp
les
arpl
push
sti
dec
push
xchg
test
leave
(bad)
(bad)
dec
fnstenv
fwait
lods
cmps
invd
scas
cmps
fidivr
jle
icebp
mul
sahf
pop
sbb
(bad)
(bad)
cmp
lock
rcr
xor
(bad)
int
inc
dec
cdq
hlt
dec
xor
xchg
xchg
push
dec
mov
int3
cld
(bad)
jmp
or
in
js
mov
icebp
mov
and
aam
in
sub
(bad)
fild
fcomp
jecxz
inc
mov
(bad)
sbb
cld
push
jl
out
psllw
fisubr
outs
mov
das
call
add
xchg
cld
cwde
int3
shl
arpl
(bad)
addr16
adc
adc
outs
fcomp
(bad)
(bad)
(bad)
push
cdq
mov
cld
daa
cmp
(bad)
retf
pop
xchg
push
jns
aad
and
mov
aad
leave
jmp
xchg
mov
or
jmp
lods
jecxz
outs
cmp
(bad)
inc
xchg
cmps
imul
mov
mov
or
xlat
lds
jmp
(bad)
in
inc
mov
and
xchg
dec
inc
jl
dec
je
push
push
rcr
jmp
or
outs
movs
fcmovu
das
test
loopne
loope
pop
add
mov
fs
(bad)
(bad)
(bad)
fist
in
or
mov
test
das
je
ret
(bad)
(bad)
call
rcr
mov
rol
mov
sub
movs
push
fdivr
(bad)
(bad)
call
call
loop
push
clc
pop
cmp
dec
enter
test
xchg
cmc
(bad)
(bad)
call
adc
pop
add
cmps
sahf
mov
jnp
pop
push
fisttp
(bad)
(bad)
sub
inc
aam
fidivr
into
rcr
mov
(bad)
dec
push
rcr
add
jno
push
sbb
fisttp
jb
sub
mov
call
outs
cmps
sbb
cmp
cmp
(bad)
mov
mov
mov
ss
loop
inc
push
or
je
icebp
(bad)
(bad)
call
clc
stos
adc
nop
mov
adc
outs
xor
push
je
push
push
aaa
jg
call
jl
jo
nop
repnz
test
mov
sbb
fdivr
into
or
mov
loop
(bad)
dec
mov
sbb
jae
loope
xor
out
pop
push
mov
aam
pop
jmp
fdivr
mov
inc
subps
movs
cld
jp
dec
cvttps2pi
ins
sahf
popa
fistp
sub
xchg
out
jle
sub
lock
rcl
clc
call
xor
out
ds
add
pop
xlat
inc
les
pusha
ja
aaa
fist
dec
movs
pop
cld
(bad)
sbb
push
inc
(bad)
(bad)
fstp
fwait
cmp
icebp
adc
fdivr
adc
push
clc
inc
mov
loope
mov
fldcw
jecxz
shr
inc
aaa
loopne
fcomp
inc
lods
sub
sub
add
or
jb
stos
fist
loop
(bad)
(bad)
(bad)
xor
jecxz
jle
cs
cmp
jo
mov
or
nop
shl
(bad)
out
cwde
push
lahf
jnp
push
rcr
cs
and
or
(bad)
scas
sar
xchg
xchg
adc
pop
inc
push
das
shl
push
iret
shl
pop
add
(bad)
jg
cmp
clc
jb
jg
stos
cld
push
push
not
loopne
mov
aaa
cmp
mov
mov
dec
or
shr
and
sub
push
cld
call
jmp
loope
sti
jp
jg
pop
das
cs
jmp
mov
lods
push
aaa
push
sub
(bad)
(bad)
(bad)
inc
jge
cmp
test
sbb
inc
push
mov
scas
arpl
mov
cld
gs
inc
cld
fs
and
outs
jne
push
sar
cmp
jecxz
dec
mov
push
cld
cmp
sbb
jbe
cwde
nop
out
pop
add
xchg
(bad)
add
test
(bad)
jg
jle
jecxz
cmps
mov
mov
pop
ror
(bad)
jnp
ret
or
or
(bad)
push
cli
(bad)
sub
mov
and
inc
mov
mov
mov
or
arpl
or
sub
xchg
ins
jne
lock
int3
jnp
pop
in
xor
idiv
inc
mov
loopne
icebp
sti
mov
sahf
inc
cmp
mov
test
(bad)
(bad)
(bad)
std
mov
shr
ins
jne
inc
xchg
jae
add
mov
fistp
(bad)
pop
out
sbb
mov
pop
(bad)
mov
movs
imul
pop
retf
jmp
sbb
mov
fidiv
add
cli
mov
mov
out
push
jmp
add
jecxz
sar
test
mov
and
push
mov
sbb
hlt
jmp
add
add
jg
or
mov
test
add
div
and
mov
(bad)
(bad)
jg
jns
int3
inc
fucomip
xor
or
xor
loop
retf
mov
mov
cs
(bad)
(bad)
(bad)
stc
hlt
pusha
pop
mov
xor
retf
and
sub
sub
dec
shl
int3
and
push
imul
pop
inc
pop
out
(bad)
enter
mov
sar
(bad)
(bad)
(bad)
jns
pop
cld
sar
jl
div
jnp
cmps
int
xchg
cmp
inc
mov
jg
(bad)
call
call
adc
mov
or
movs
and
push
pop
stos
adc
push
add
pop
mov
das
(bad)
inc
adc
fsub
cmp
call
lods
inc
clc
(bad)
fstp
inc
inc
inc
sub
clc
add
and
sub
sub
and
pop
mov
into
outs
(bad)
out
dec
or
pop
pusha
or
outs
and
jno
retf
inc
or
or
cmps
add
call
in
or
jb
and
cmp
pop
ds
ja
pop
ficomp
push
clc
inc
sbb
cmp
test
stos
rol
add
pop
les
out
mov
or
jbe
aas
add
cmp
xchg
(bad)
mov
sub
dec
jmp
je
imul
jns
sbb
out
sub
mov
(bad)
(bad)
(bad)
fnsave
out
sbb
dec
adc
jp
jnp
mov
bound
(bad)
(bad)
(bad)
(bad)
cmp
mov
sti
jmp
cmp
pop
outs
repnz
inc
lock
mov
test
and
dec
in
or
aaa
jmp
cmp
lahf
inc
fwait
(bad)
mov
test
call
mov
sbb
mov
clc
mov
adc
std
(bad)
ja
push
push
lock
and
(bad)
(bad)
call
repz
loopne
div
and
loopne
test
adc
adc
push
(bad)
(bad)
(bad)
call
adc
push
into
push
add
push
aad
jmp
retf
jns
jl
sbb
jmp
lea
(bad)
cmps
or
lahf
fild
or
jg
and
mov
das
ror
xchg
or
call
sub
aaa
std
mov
mov
daa
mov
dec
in
adc
(bad)
(bad)
jmp
inc
cdq
(bad)
push
daa
dec
jae
pusha
aaa
inc
add
popa
xchg
mov
fidivr
mov
loope
aad
(bad)
(bad)
(bad)
jmp
scas
cdq
mov
mov
mov
mov
push
push
jl
push
sahf
(bad)
(bad)
(bad)
call
push
movsx
(bad)
pop
pop
in
pop
int3
sahf
pop
mov
jbe
dec
mov
cs
mov
push
jle
mov
jge
scas
mov
lds
lea
dec
sti
es
repnz
(bad)
push
out
(bad)
mov
dec
jp
sub
retf
jmp
rol
movs
(bad)
(bad)
(bad)
call
in
bound
icebp
cld
call
imul
mov
xlat
cdq
sbb
(bad)
(bad)
(bad)
cmp
cmp
hlt
pop
ss
hlt
sahf
dec
sub
lock
call
aas
jecxz
inc
(bad)
div
aam
jmp
cmc
inc
in
test
add
inc
sbb
aam
add
pop
addr16
ret
(bad)
(bad)
(bad)
(bad)
out
sbb
push
in
adc
mov
test
pop
rol
retf
(bad)
(bad)
(bad)
fidiv
cli
xchg
pushf
mov
mov
or
xchg
fmul
mov
xor
(bad)
(bad)
call
cmps
xchg
sub
sub
fidivr
lock
fistp
sub
movaps
fdivr
fimul
push
fs
daa
push
sbb
repz
push
cmps
cmp
cld
pop
mov
into
add
pop
mov
dec
scas
rcr
or
iret
add
pusha
dec
loop
jne
jmp
push
leave
movs
pop
dec
fwait
out
es
dec
mov
(bad)
(bad)
mov
mov
movs
mov
fimul
sub
jnp
dec
mov
xchg
int3
adc
lock
clc
sub
mov
retf
scas
(bad)
pop
jns
push
xchg
jecxz
dec
xor
ins
loopne
(bad)
(bad)
sti
jmp
aaa
bswap
aam
jg
ja
mov
adc
fcomp
mov
(bad)
mov
stc
lods
cmp
pushf
sub
push
mov
jge
ins
cs
pop
jns
fwait
sub
ss
(bad)
std
arpl
call
adc
scas
fs
(bad)
(bad)
(bad)
jmp
xchg
dec
mov
lods
mov
xor
adc
jle
mov
pop
clc
mov
ss
outs
jmp
(bad)
(bad)
(bad)
dec
ret
xor
push
jb
inc
das
pop
addr16
scas
cmps
dec
push
cdq
jle
sub
sub
jno
sahf
(bad)
(bad)
out
clc
dec
jle
icebp
inc
cs
adc
cmp
push
int3
clc
iret
(bad)
xor
mov
inc
mov
adc
dec
xor
jb
cwde
cmp
sbb
cmc
ins
(bad)
xchg
cmp
jmp
cmps
out
jb
cmp
adc
ins
dec
js
(bad)
dec
movs
div
push
(bad)
(bad)
(bad)
ficom
aaa
test
sub
jecxz
fidiv
out
(bad)
mov
mov
mov
call
loop
push
cld
jmp
jle
lods
and
call
pop
loope
test
outs
lea
cmp
mov
(bad)
ficom
fnstsw
ret
fs
inc
movs
into
push
pop
xor
outs
sbb
lods
sub
fwait
cmp
and
icebp
mov
imul
pop
in
cld
xchg
jmp
cmps
and
jno
ja
cs
(bad)
stc
push
mov
retf
cmp
cmp
hlt
pop
cmp
mov
xor
cmp
(bad)
(bad)
(bad)
mov
jae
jno
xor
cs
pxor
sub
jae
push
jae
pop
push
scas
lea
mov
mov
repz
push
jmp
std
sub
(bad)
(bad)
(bad)
in
cmp
push
push
or
mov
rol
popf
clc
shl
sub
mov
mov
cld
(bad)
jmp
sbb
shl
inc
jnp
ret
mov
push
jmp
(bad)
(bad)
call
out
xchg
pop
cld
and
(bad)
pop
or
mov
enter
mov
or
push
or
scas
adc
xor
mov
dec
mov
or
stos
(bad)
(bad)
mov
out
lds
push
xchg
repz
jnp
(bad)
adc
mov
(bad)
(bad)
call
xor
and
ins
cdq
call
mov
jmp
adc
inc
cmc
or
(bad)
push
mov
sti
cmp
(bad)
mov
mov
mov
(bad)
(bad)
jmp
jne
jmp
call
stos
lahf
jecxz
push
push
test
rcr
push
cdq
stos
mov
test
loop
(bad)
fucom
jno
cmp
cmp
int
jge
(bad)
(bad)
dec
in
rcl
ret
sub
inc
mov
cld
sub
repnz
(bad)
mov
scas
push
stos
sbb
mov
adc
adc
xlat
sub
icebp
mov
(bad)
call
cld
push
cdq
jecxz
jbe
push
cmp
mov
cmp
mov
das
adc
(bad)
(bad)
call
cmps
jns
sub
push
sbb
add
daa
and
(bad)
lea
pop
cld
(bad)
jmp
mov
lahf
(bad)
adc
sub
ffreep
dec
ja
loop
ja
jmp
scas
add
es
pop
adc
ss
(bad)
(bad)
jmp
arpl
mov
sub
adc
mov
rcr
(bad)
xor
rol
je
inc
dec
add
cdq
(bad)
cmps
cwde
jns
push
lods
(bad)
cmp
inc
pop
mov
fild
idiv
xchg
dec
arpl
jb
mov
int
and
mov
outs
pop
push
push
add
xchg
sbb
stos
cmps
movs
fwait
mov
lds
(bad)
mov
scas
cmps
loope
mov
sbb
and
lea
sub
sub
lock
fmul
add
push
push
pop
mov
sbb
or
xor
xchg
outs
mov
mov
stos
std
dec
aam
xchg
cmp
scas
cmp
adc
mov
cmp
mov
fcomip
cmp
lahf
not
data16
sub
cmp
dec
hlt
jmp
shl
popa
ja
dec
aam
std
push
fsubr
adc
stos
cmp
sti
inc
(bad)
dec
out
jmp
leave
sub
push
add
cmp
mov
or
dec
mov
mov
dec
xor
mov
cdq
shl
mov
push
call
(bad)
push
jnp
mov
fld
mov
mov
int3
fimul
or
or
arpl
stos
pop
fild
inc
(bad)
call
(bad)
inc
in
mov
ret
mov
cmp
and
(bad)
(bad)
(bad)
(bad)
inc
rcl
sbb
(bad)
and
xchg
loop
call
jo
test
cmp
push
inc
aas
xor
jae
jmp
and
and
dec
addr16
add
ds
jne
pop
data16
(bad)
(bad)
inc
outs
add
call
jno
aam
pop
(bad)
push
(bad)
mov
outs
stos
jle
dec
movs
inc
sbb
ror
popa
repz
pushf
or
xlat
push
xchg
jg
into
xchg
in
cmp
mov
in
out
(bad)
mov
(bad)
(bad)
push
mov
xor
sub
cmc
inc
frstor
push
ds
in
mov
mov
das
sahf
repnz
les
iret
sahf
or
mov
(bad)
mov
lock
cmp
cmps
ss
or
or
clc
jmp
nop
push
push
scas
ret
in
add
cwde
iret
sbb
xlat
xlat
sbb
push
(bad)
(bad)
mov
cs
cmp
mov
pop
cld
dec
aaa
bnd
rcr
inc
movs
adc
(bad)
(bad)
jmp
ins
shl
mov
xor
cmp
cmp
jmp
and
cmp
ficomp
(bad)
jg
dec
ins
jecxz
out
pop
fcmove
retf
push
leave
inc
dec
jle
ds
ds
cmp
aas
mov
das
cmc
jne
test
mov
movs
out
(bad)
ins
in
lea
inc
data16
std
xchg
push
jo
inc
mov
sbb
push
data16
(bad)
(bad)
jmp
fild
jns
ss
fidiv
adc
adc
loop
push
in
mov
fdivrp
(bad)
(bad)
call
jecxz
call
dec
nop
mov
jp
repz
push
mov
jnp
neg
push
(bad)
(bad)
(bad)
(bad)
(bad)
and
or
adc
mov
push
push
cs
test
push
in
(bad)
(bad)
(bad)
jmp
cli
mov
sub
ss
push
dec
jno
xor
(bad)
(bad)
call
std
imul
cmps
les
pushf
faddp
pushf
jno
std
pusha
xor
jg
int
das
pop
mov
shl
jae
mov
imul
lahf
cli
outs
clc
(bad)
(bad)
fnsave
leave
sbb
cmp
push
inc
adc
cdq
jg
sbb
pop
jp
dec
(bad)
(bad)
(bad)
jmp
ja
es
push
into
gs
mov
out
dec
int3
dec
sahf
arpl
sahf
dec
mov
pop
sbb
(bad)
(bad)
push
out
and
add
xor
fsub
xchg
iret
push
mov
pop
adc
(bad)
(bad)
push
pusha
aad
sbb
cmp
in
mov
icebp
jno
out
push
test
xchg
call
cmps
mov
push
stos
pop
inc
loop
loope
fcomp
into
jnp
test
sar
push
or
cmc
(bad)
push
ret
mov
int
aas
lock
ds
ror
sbb
stos
jbe
jle
ss
inc
call
sti
hlt
cs
icebp
pop
push
fucomip
pop
jmp
mov
(bad)
fwait
pop
icebp
mov
adc
and
cdq
lahf
xchg
xchg
sbb
mov
movs
xor
aaa
popf
scas
or
scas
gs
cmp
adc
fbld
inc
int3
icebp
outs
iret
fild
imul
jmp
fistp
inc
jle
cmp
out
fsub
pop
cmp
leave
cmp
jmp
adc
sbb
cld
sbb
xor
fmul
js
inc
in
jae
daa
mov
jl
(bad)
dec
std
fbstp
mov
je
cmp
xchg
push
jle
test
(bad)
imul
fld
jmp
sti
cmp
leave
cmp
push
jmp
jmp
mov
add
dec
jbe
xchg
in
or
jmp
(bad)
push
(bad)
in
retf
lahf
(bad)
jmp
sub
cmp
gs
(bad)
xchg
fld
(bad)
aas
mov
and
in
fsubr
cmp
inc
arpl
bound
test
call
mov
les
sbb
in
adc
aaa
mov
jg
test
adc
inc
cmps
push
jl
imul
sbb
cwde
imul
push
movs
adc
call
xchg
pop
out
cmps
or
out
pop
in
push
xchg
pusha
lock
idiv
(bad)
jmp
xor
fcmovnbe
mov
push
xor
sti
fnstsw
push
ss
pop
jg
(bad)
(bad)
inc
or
stc
dec
in
mov
sbb
jg
dec
jne
mov
sti
mov
imul
stos
iret
add
mov
xor
push
(bad)
jg
mov
call
pop
and
cmc
(bad)
rol
jmp
fdivr
(bad)
jmp
repz
mov
jg
lock
pop
mov
dec
call
jae
cmp
(bad)
aas
call
loope
pop
pop
xor
mov
mov
movs
pop
cmps
jl
dec
(bad)
(bad)
(bad)
call
fs
inc
pop
call
sbb
jmp
icebp
xlat
cmp
jo
push
add
push
cwde
(bad)
(bad)
inc
mov
sbb
outs
call
xchg
mov
ret
fs
stos
(bad)
push
pop
and
movs
xchg
out
(bad)
pop
push
inc
test
push
clc
outs
pusha
jmp
push
mov
push
add
jp
into
mov
repnz
pop
cmp
imul
in
jae
aad
jmp
nop
mov
(bad)
(bad)
call
hlt
push
xor
je
mov
jle
xor
call
mov
(bad)
(bad)
(bad)
(bad)
in
add
fisub
jle
mov
push
call
mov
push
arpl
icebp
fwait
sub
int
(bad)
in
mov
test
lock
push
aaa
jb
(bad)
dec
ror
in
das
nop
mov
adc
pop
std
mov
mov
mov
inc
add
stos
(bad)
cmps
movs
inc
mov
jns
cld
push
aam
pop
aas
sbb
pop
sub
fdivr
fstp
pop
daa
aaa
inc
imul
aaa
or
call
js
cwde
loopne
cli
jp
vcvtps2dq
stos
shl
inc
ja
push
and
xchg
jp
(bad)
(bad)
mov
lods
(bad)
xchg
mov
sar
imul
cmp
(bad)
(bad)
mov
dec
je
dec
pop
les
mov
fxch
addr16
jg
call
stc
pop
sub
shl
sub
push
cld
out
dec
das
mov
or
std
xchg
leave
int3
retf
mov
and
inc
and
(bad)
(bad)
call
fsubr
push
cs
(bad)
(bad)
push
fs
sbb
push
jmp
call
icebp
cmp
mov
int
jnp
xor
sbb
dec
cld
lock
mov
jp
es
dec
mov
mov
(bad)
sti
mov
scas
clc
ja
dec
mov
add
imul
xchg
sub
add
add
push
sbb
or
push
add
out
cmp
(bad)
(bad)
dec
ficomp
popf
pop
cmp
jno
jo
pop
loope
bound
mov
mov
call
mov
push
dec
xchg
sbb
mov
jne
je
cli
push
xor
call
call
imul
pushf
nop
int3
cmps
(bad)
aas
mov
pusha
adc
loop
loope
les
out
cmp
and
(bad)
dec
dec
sub
jno
aad
hlt
sbb
ss
xlat
sub
dec
pop
cdq
xchg
push
xchg
icebp
jo
and
mov
cli
call
(bad)
cs
test
add
sbb
gs
add
adc
(bad)
(bad)
out
les
fiadd
test
xor
enter
fld
pop
(bad)
mov
nop
inc
loope
xor
test
scas
data16
(bad)
pop
dec
fdivp
sar
(bad)
jmp
sub
cwde
pminub
rcl
mov
into
int
int
mov
(bad)
(bad)
dec
adc
stc
test
mov
xchg
cdq
xchg
leave
fadd
mov
mov
cld
(bad)
(bad)
mov
repnz
sbb
inc
mov
sub
mov
fucomip
cmps
(bad)
push
inc
pop
imul
imul
sbb
xor
rcr
push
mov
(bad)
call
sbb
sbb
cmp
jecxz
xchg
mov
popa
out
(bad)
(bad)
(bad)
jmp
loopne
test
pop
add
mov
sahf
fst
sbb
mov
test
cmp
fdivr
sub
pop
(bad)
or
cmp
or
cld
mov
stos
jae
adc
mov
cmp
aad
dec
cli
xor
repnz
inc
out
push
stc
call
pop
push
jecxz
cld
jg
mov
jo
loop
dec
outs
imul
cmp
icebp
(bad)
jmp
int
mov
and
pusha
xor
cmp
jle
(bad)
call
fstcw
outs
push
popf
test
mov
and
(bad)
(bad)
jmp
jnp
je
sbb
bound
aaa
sbb
iret
shl
pop
dec
aas
cmp
stc
xor
pop
sti
cmps
aam
fistp
(bad)
out
test
push
xor
(bad)
(bad)
(bad)
(bad)
push
mov
pop
(bad)
gs
sub
sbb
cli
stc
push
in
clc
push
and
hlt
fbstp
ud0
(bad)
call
leave
dec
in
dec
jbe
out
test
sbb
les
dec
jno
mov
je
xor
xchg
out
mov
(bad)
jmp
xchg
in
in
ins
out
mov
adc
sub
mov
(bad)
(bad)
(bad)
(bad)
mov
test
jmp
repz
and
add
xchg
cmp
(bad)
(bad)
jmp
outs
inc
pop
movs
gs
gs
cli
jno
outs
mov
bound
and
es
fistp
cmp
ins
nop
outs
cmp
das
cmp
fcomip
(bad)
(bad)
fst
pcmpgtw
inc
mov
jl
aas
xor
xor
push
sahf
and
cmps
mov
jmp
pushf
push
test
imul
retf
movs
mov
add
pop
(bad)
mov
hlt
outs
call
fild
cmp
jbe
lahf
cmps
jg
retf
(bad)
(bad)
push
retfw
xor
scas
jge
scas
or
ret
mov
fwait
xchg
lock
sub
inc
pop
sahf
pushf
(bad)
(bad)
(bad)
(bad)
ds
lock
pop
mov
iret
cmp
cmp
mov
sub
adc
(bad)
(bad)
(bad)
call
sbb
inc
lds
jbe
fsubr
in
pop
add
std
hlt
pop
shr
add
(bad)
(bad)
inc
sub
inc
stc
xchg
xor
icebp
hlt
enter
and
xor
iret
xor
out
cmp
(bad)
call
pop
mov
stos
scas
cmps
push
shl
pop
fisubr
pop
xchg
ins
pop
retf
adc
test
in
fwait
shr
nop
cmp
jg
or
aaa
test
gs
mov
mov
ja
cmp
adc
mov
(bad)
(bad)
mov
into
int3
outs
fnstsw
mov
xchg
xor
jbe
dec
out
sbb
mov
sar
fwait
(bad)
(bad)
jg
xchg
jns
ret
cld
cmp
shl
sub
push
mov
push
jmp
cmp
sub
test
faddp
and
mov
(bad)
(bad)
(bad)
(bad)
cmp
cmp
rcl
push
inc
movs
fwait
loope
stos
(bad)
pop
movs
mov
jle
jae
(bad)
(bad)
push
mov
(bad)
(bad)
mov
test
aaa
push
into
dec
dec
jb
mov
push
and
add
loop
jb
add
pop
jge
fwait
aaa
or
pop
jecxz
in
retf
dec
inc
xchg
jle
bound
fisttp
ror
or
mov
popf
mov
inc
cmps
inc
jle
std
rcr
call
or
sbb
pop
aaa
ss
ins
loop
xchg
cmps
cmps
adc
sbb
jg
mov
pushf
ins
lea
aad
clc
xor
(bad)
mov
cmp
ins
iret
sbb
sub
jmp
fisubr
(bad)
(bad)
(bad)
(bad)
jg
inc
fcom
mov
lea
stos
jb
inc
iret
aad
dec
push
rcl
es
(bad)
(bad)
push
(bad)
std
and
fld
push
jge
stc
pop
fcomp
fwait
mov
push
idiv
inc
mov
jmp
loop
cmps
xor
xor
xlat
hlt
cmps
and
mov
stos
(bad)
mov
cmp
mov
jge
jmp
(bad)
(bad)
cmp
sbb
scas
adc
jne
xchg
pushf
jne
push
out
jne
mov
in
sbb
mov
(bad)
jmp
dec
imul
xchg
ret
add
aas
fwait
iret
out
xor
cmp
fs
std
jg
(bad)
fcom
hlt
arpl
loopne
dec
fnstcw
mov
(bad)
(bad)
(bad)
(bad)
sti
clc
xlat
add
mov
push
mov
aad
mov
mov
cmp
nop
jnp
(bad)
jmp
mov
sbb
or
outs
xchg
sbb
movs
in
and
div
push
mov
or
fdivr
sbb
pop
mov
sbb
pusha
out
sbb
(bad)
(bad)
jg
stc
stc
icebp
popf
in
cmp
arpl
loop
jecxz
push
inc
xor
cmps
xor
mov
std
(bad)
(bad)
push
and
push
sar
hlt
inc
jmp
jno
stos
aad
push
sti
cs
sub
in
(bad)
fiadd
out
ror
sbb
cmps
call
push
clc
mov
jl
push
dec
(bad)
arpl
ins
out
mov
mov
push
bsr
enter
jbe
jbe
mov
ds
pcmpeqd
movs
xchg
(bad)
(bad)
(bad)
jmp
mov
cli
xchg
ja
(bad)
fnstsw
icebp
clc
les
mov
cwde
mov
iret
(bad)
(bad)
(bad)
push
mov
xor
mov
mov
and
cmp
pop
into
xchg
or
sar
hlt
call
cmc
mov
(bad)
call
and
inc
cmp
nop
shl
sahf
(bad)
(bad)
(bad)
call
fcom
stc
push
pop
lods
xor
jmp
outs
mov
xchg
mov
xchg
sub
sahf
(bad)
(bad)
(bad)
jmp
sub
inc
sub
or
cdq
xor
dec
pop
(bad)
pop
fidivr
fmul
mov
mov
fwait
icebp
aam
push
(bad)
mov
xchg
stos
(bad)
(bad)
jg
shl
mov
adc
push
inc
out
mov
in
popa
ret
enter
(bad)
(bad)
(bad)
call
jno
sahf
jbe
jnp
(bad)
pop
mov
inc
xor
retf
fnstenv
(bad)
jmp
cmp
jns
xchg
popf
mov
mov
mov
push
pushf
call
jmp
pop
jg
les
ror
mov
jmp
stos
(bad)
(bad)
(bad)
push
push
fwait
in
jbe
sub
(bad)
mov
stos
fsubr
xchg
nop
mov
lock
fist
mov
jg
stos
call
stos
jbe
adc
in
iret
out
mov
inc
(bad)
sbb
out
mov
shr
mov
push
mov
loopne
dec
(bad)
(bad)
(bad)
dec
sbb
(bad)
mov
sbb
push
retf
xor
in
into
dec
inc
(bad)
jmp
clc
jp
scas
mov
mov
jns
pop
add
daa
scas
inc
loop
jg
ja
(bad)
jl
aad
cli
(bad)
repz
jmp
mov
jo
rcr
test
mov
sbb
cs
dec
popf
leave
popa
in
inc
sub
jle
push
mov
imul
popf
shl
cmp
ds
not
fild
(bad)
xor
xor
push
fistp
jo
and
push
mov
sbb
js
cli
aas
sub
jbe
pop
sub
in
outs
jg
jmp
arpl
retf
push
sub
dec
(bad)
cmp
fidiv
jg
jmp
vhaddpd
ret
mov
mov
and
arpl
rcr
add
mov
out
push
into
pop
mov
hlt
push
mov
cwde
scas
pushf
aam
add
pushf
clc
inc
mov
js
movs
jmp
lods
(bad)
(bad)
jmp
ds
mov
loop
ins
mov
icebp
jbe
push
js
call
(bad)
(bad)
jge
mov
xlat
mov
jno
ins
cli
div
sub
pop
int3
out
xchg
xlat
into
jmp
ret
(bad)
call
jbe
mov
fld
sub
das
clc
loope
xchg
xchg
(bad)
call
xchg
adc
loope
ficom
(bad)
mov
sbb
out
jge
or
mov
and
aaa
xlat
cmps
ins
ss
jmp
pop
(bad)
(bad)
jg
push
lods
cdq
dec
add
fcmovu
mov
imul
mov
(bad)
(bad)
(bad)
jg
or
cmp
and
daa
(bad)
jg
jb
std
sbb
shl
(bad)
(bad)
inc
retf
push
cs
xor
xlat
jns
movs
mov
pop
into
(bad)
out
mov
pop
(bad)
call
pop
mov
jmp
xchg
cdq
mov
mov
cdq
ins
int
dec
(bad)
sbb
mov
stos
and
icebp
(bad)
push
or
icebp
jb
fcomp
loopne
outs
push
jne
es
or
mov
cmp
sub
repz
in
push
xchg
fwait
jmp
imul
nop
jmp
call
test
aaa
add
adc
sbb
test
xlat
or
stos
mov
jb
cmp
cmp
in
loop
ror
ins
idiv
(bad)
(bad)
aaa
add
sub
dec
adc
lods
mov
jno
es
out
xchg
test
fwait
mov
jo
call
push
push
popa
(bad)
cmps
stos
cld
sub
jg
mov
or
in
ins
nop
add
pop
inc
loop
mov
sub
xlat
pusha
cdq
aad
dec
cmp
(bad)
call
test
popf
xor
jns
jl
adc
jb
adc
outs
fdivr
(bad)
call
fdiv
lods
adc
in
out
addr16
pop
loope
xchg
loopne
cmps
push
jne
xchg
outs
fcomip
mov
ror
pop
jo
jb
retf
stos
mov
(bad)
(bad)
(bad)
jmp
jae
test
repz
and
pop
sar
test
xor
pop
and
mov
stos
das
pop
add
lahf
dec
test
pop
push
pusha
sbb
les
(bad)
xor
je
fdivr
inc
inc
adc
mul
pop
push
push
(bad)
pop
cmp
xor
push
and
push
add
add
daa
jmp
mov
test
or
add
pop
inc
in
ror
jmp
imul
shl
test
sub
push
add
cs
sbb
inc
sar
mov
cmps
test
push
push
xor
xor
push
repnz
or
(bad)
pop
xchg
cmp
cmp
xor
xor
sub
fisttp
xor
bound
sub
bound
sbb
add
aaa
cdq
mov
aaa
inc
inc
cmp
mov
cmp
pop
fsub
push
inc
inc
inc
test
xor
adc
or
dec
outs
or
and
int
or
and
dec
mov
pop
leave
or
add
push
push
rol
and
mov
setne
pslld
sub
inc
push
aad
(bad)
mov
out
mov
push
rol
pushf
out
lods
aam
int
add
jl
xchg
scas
ror
aam
repz
sub
xor
add
adc
addr16
pop
sahf
mov
jp
repz
js
ds
mov
lods
mov
dec
cld
sub
gs
jmp
in
and
mov
and
imul
inc
das
adc
adc
inc
arpl
es
add
mov
adc
in
or
fld
mov
nop
and
adc
dec
or
or
mov
or
add
xor
nop
dec
mov
fild
cmp
push
dec
sbb
pop
sbb
mov
mov
lahf
jge
add
xor
sub
mov
mov
out
into
or
sbb
popa
and
push
adc
mov
fidivr
add
xor
gs
fidivr
mov
or
aaa
sbb
pop
or
mov
fidiv
adc
add
cmp
es
inc
jecxz
shl
inc
mov
dec
ja
int3
pop
and
fcom
dec
adc
fist
fistp
popf
mov
cmp
ror
ret
lods
xor
pop
push
push
sub
xchg
dec
jmp
test
(bad)
(bad)
(bad)
jmp
mov
out
or
adc
dec
out
scas
mov
adc
mov
dec
mov
(bad)
(bad)
call
add
(bad)
sbb
lea
sub
cli
dec
jmp
(bad)
(bad)
cmp
or
xchg
dec
cdq
sub
repnz
repz
movs
sbb
rcl
adc
(bad)
(bad)
(bad)
(bad)
cmp
test
cmp
scas
and
adc
ficom
push
jmp
push
cmc
sbb
pop
(bad)
(bad)
(bad)
push
and
xlat
out
pop
aas
xor
call
pop
push
sbb
xchg
aad
repz
std
(bad)
(bad)
(bad)
jmp
adc
ds
stos
dec
sar
cmp
push
jg
mov
out
and
nop
test
ret
and
(bad)
mov
mov
pop
pop
xchg
cli
jmp
dec
pop
iret
ret
jecxz
mov
rcr
(bad)
(bad)
call
call
adc
jbe
arpl
and
inc
ds
mov
(bad)
(bad)
call
and
jbe
pop
aam
mov
adc
jmp
mov
(bad)
(bad)
call
daa
pop
lea
xor
cld
out
pop
cmc
or
mov
lock
(bad)
call
mul
es
sqrtps
inc
ins
out
jns
out
mov
or
(bad)
(bad)
fild
hlt
(bad)
rcr
and
adc
add
dec
fisub
(bad)
dec
ja
push
push
pusha
jmp
dec
pop
loope
sbb
mov
enter
mov
(bad)
(bad)
jmp
les
xor
retf
sahf
nop
repz
test
mov
(bad)
(bad)
inc
out
rcr
rcl
xor
out
inc
pop
cld
(bad)
call
push
out
xor
jge
cwde
lea
sub
and
inc
test
xor
mov
jge
clc
(bad)
jmp
push
cmc
adc
and
and
imul
jg
lea
add
xlat
adc
icebp
loope
sar
dec
imul
movs
in
dec
mov
pop
xchg
(bad)
(bad)
jmp
imul
mov
loopne
jecxz
jge
(bad)
adc
(bad)
cmc
imul
not
mov
mov
and
push
test
(bad)
(bad)
(bad)
jg
mov
push
dec
mov
xor
loopne
add
fistp
push
aas
cs
(bad)
(bad)
push
ds
dec
push
sbb
aad
adc
push
push
in
push
xchg
sbb
imul
ror
dec
sub
iret
(bad)
(bad)
xor
(bad)
(bad)
fistp
jb
pop
xor
in
das
ret
mov
cmps
mov
xlat
xor
pop
test
or
jo
lock
(bad)
loopne
jmp
mov
outs
sub
cmp
(bad)
cmp
aad
(bad)
out
stos
add
ret
inc
jmp
out
mov
inc
rol
mov
jl
outs
idiv
call
sub
retf
repnz
cmp
dec
xor
push
push
push
mov
out
daa
dec
stos
imul
mov
(bad)
jmp
jmp
stc
popa
push
mov
ins
sbb
inc
movs
pusha
push
retf
(bad)
(bad)
(bad)
push
sub
pusha
pop
mov
xor
shl
ret
call
(bad)
(bad)
(bad)
push
leave
adc
dec
jne
inc
es
inc
and
in
out
data16
jp
inc
mov
inc
arpl
in
inc
out
push
aad
hlt
std
jb
fidivr
jecxz
xchg
outs
or
fidiv
call
int
add
mov
aam
pop
mov
mov
sub
xor
mov
(bad)
jmp
push
sub
jmp
stos
mov
fldenv
fcmovne
into
out
leave
jns
leave
xor
pop
adc
push
jbe
inc
pmuludq
pushf
dec
pavgw
add
push
add
and
mov
(bad)
(bad)
jmp
loop
add
in
call
clc
add
pushf
cld
mov
(bad)
(bad)
jmp
inc
test
icebp
gs
sbb
jmp
sbb
pop
dec
xchg
add
pop
cld
(bad)
jg
out
inc
imul
cmps
sub
push
push
(bad)
imul
xor
pop
aad
fwait
xchg
inc
lock
popf
fcmovu
sbb
push
and
jl
mov
aad
ins
pop
mov
pop
inc
jle
std
call
cmp
xchg
push
or
ja
(bad)
(bad)
sti
cmc
jae
inc
and
mov
xor
dec
cmps
test
int
loop
push
push
pusha
imul
jo
fdivr
jmp
shr
and
fnsave
data16
jg
jp
pop
and
in
xor
cmps
cwde
test
sub
(bad)
(bad)
(bad)
mov
sbb
popf
mov
cs
dec
mov
inc
in
cmc
mov
dec
movs
cmp
inc
mov
sbb
push
(bad)
pop
div
(bad)
mov
xchg
lahf
xor
push
pop
xchg
iret
xor
fwait
aad
pop
and
stos
sub
pushf
pop
out
cld
pop
loopne
cmp
cwde
add
adc
popf
(bad)
(bad)
call
mov
jmp
mov
je
xor
jmp
int3
cmp
mov
(bad)
(bad)
(bad)
jmp
test
jg
aam
jns
ins
retf
rcl
sub
repnz
mov
push
adc
push
jbe
fndisi(8087
repnz
xor
fild
js
sbb
cdq
or
cmp
fs
mov
cmps
push
jle
jbe
mov
lods
in
in
inc
mov
call
mov
or
xchg
lods
cmp
cld
(bad)
inc
xchg
shl
lea
call
fwait
retf
xor
aad
pusha
xchg
cmovbe
jb
stos
xor
loope
jmp
(bad)
xchg
loope
sub
out
mov
cmc
or
(bad)
call
out
bound
enter
mov
ja
(bad)
shl
cmps
call
bound
xchg
xlat
cli
dec
stos
out
mov
cmp
sub
cmp
dec
test
pop
cld
ja
inc
pusha
jmp
fisttp
(bad)
xor
out
cmp
xor
int3
lods
int3
sub
add
jno
xor
push
std
(bad)
push
cmp
dec
xchg
dec
ins
(bad)
popa
xor
out
xchg
lea
fxch
(bad)
(bad)
(bad)
call
cmovo
or
in
into
les
lods
cmp
or
fidiv
or
(bad)
(bad)
(bad)
dec
daa
jecxz
mov
push
iret
jnp
fcomp
dec
ficomp
mov
scas
arpl
das
cmc
dec
rcl
iret
retf
adc
add
cld
(bad)
jmp
adc
inc
and
inc
push
pop
jne
inc
pop
mov
es
mov
test
call
add
lods
pop
add
(bad)
dec
in
call
fcom
in
sub
and
scas
scas
arpl
jo
lock
adc
cld
test
adc
(bad)
jmp
mov
add
test
gs
sbb
retf
in
or
pop
aad
outs
(bad)
(bad)
(bad)
jmp
outs
mov
inc
mov
inc
dec
je
jb
fsubr
and
mov
lahf
jge
(bad)
call
mov
sbb
mov
(bad)
clc
popa
sub
das
faddp
xchg
(bad)
(bad)
(bad)
dec
shl
mov
mov
xchg
in
mov
sbb
push
sbb
ins
daa
inc
jmp
(bad)
(bad)
(bad)
dec
sub
clc
dec
mov
popf
push
push
xchg
shr
fs
jle
sbb
repnz
(bad)
jg
mov
faddp
inc
rcr
inc
(bad)
sbb
xor
pop
cwde
jmp
adc
xlat
std
sbb
test
inc
push
inc
xlat
into
lock
(bad)
(bad)
cld
or
mov
es
fidiv
sbb
fadd
rol
or
xor
fnstcw
je
mov
neg
sub
test
test
jecxz
cli
scas
adc
or
cdq
cmp
pop
loope
out
pop
mov
(bad)
(bad)
jmp
mov
jp
pop
jge
leave
je
jecxz
popa
out
mov
and
shr
pop
out
mov
push
mov
mov
push
mov
(bad)
(bad)
jmp
not
push
in
mov
jmp
ins
push
(bad)
fucomip
mov
jmp
jo
inc
and
ret
cmc
scas
sbb
(bad)
inc
inc
xor
fsubr
and
or
mov
inc
push
xlat
push
pop
cmps
push
inc
add
add
jge
or
clc
cwde
(bad)
(bad)
(bad)
dec
ficomp
in
shl
mov
lods
inc
in
pop
and
lods
popf
(bad)
je
(bad)
fcomip
call
add
xchg
mov
sub
jmp
lahf
or
pop
mov
(bad)
(bad)
(bad)
mov
arpl
neg
aad
mov
aas
cmps
xchg
push
push
jecxz
(bad)
(bad)
(bad)
dec
arpl
addr16
pop
xchg
movs
dec
pop
or
xor
push
loopne
dec
and
push
(bad)
(bad)
(bad)
jmp
imul
pushf
xchg
jg
mov
push
cwd
xchg
(bad)
jae
mov
ins
(bad)
dec
mov
or
je
rcr
or
jg
jg
adc
loopne
push
push
out
push
mov
sbb
mov
cli
das
clc
aad
mov
gs
cld
popf
repnz
fisubr
test
out
add
call
pop
sbb
fmul
jnp
push
fcom
sbb
cmp
adc
inc
test
mov
mov
pop
inc
imul
add
sahf
sbb
enter
repnz
repnz
mov
repnz
(bad)
cmc
mov
das
mov
adc
cmp
push
std
shr
(bad)
add
xor
mov
inc
js
neg
std
xor
sub
xlat
mov
push
xchg
jmp
(bad)
inc
xchg
mov
ins
add
cmp
out
dec
push
scas
data16
cmc
stos
iret
cmps
jle
mov
mov
call
mov
dec
mov
xchg
sub
mov
call
lods
inc
adc
mov
push
daa
(bad)
cld
mov
push
sub
(bad)
(bad)
call
sub
cwde
aam
or
ds
iret
or
shl
int
pusha
aad
jo
call
push
push
mov
mov
(bad)
out
add
shl
daa
sbb
call
mov
mov
pop
lahf
xchg
push
cld
(bad)
(bad)
(bad)
jg
sbb
dec
push
cmps
(bad)
sbb
rcl
xchg
ret
mov
in
movs
popf
mov
(bad)
(bad)
push
mov
dec
ret
xchg
cvtps2pd
add
sbb
jecxz
popf
pop
idiv
(bad)
(bad)
dec
cmps
mov
and
arpl
mov
test
mov
das
rol
cld
xor
inc
dec
sub
adc
lds
pop
mov
in
sub
std
sti
in
mov
adc
nop
(bad)
jmp
ror
jo
cmc
add
add
outs
mov
movs
mov
(bad)
jmp
pusha
push
adc
aad
push
jge
rep
ficom
pop
adc
retf
push
fadd
(bad)
fst
pop
ja
sub
xchg
lahf
pop
inc
adc
inc
cmp
icebp
clc
pushf
mov
cwde
shr
fs
dec
ins
ds
aad
cmp
add
mov
xchg
mov
(bad)
dec
(bad)
sbb
ret
ret
es
ret
mov
dec
aas
mov
dec
add
fild
add
mov
lahf
lods
ss
pusha
mov
sahf
(bad)
jb
mov
cdq
outs
push
lock
sahf
inc
push
(bad)
out
xchg
xchg
fnstenvw
(bad)
call
and
cwde
or
mov
nop
add
cli
add
mov
sub
jg
(bad)
call
repz
ja
movs
xchg
loop
sub
cs
inc
(bad)
out
push
cdq
mov
enter
movs
aam
imul
out
dec
clc
idiv
mov
cdq
xchg
and
fdivr
sbb
or
sbb
add
(bad)
(bad)
push
xchg
arpl
frstor
lds
mov
arpl
jmp
inc
ret
test
sar
(bad)
(bad)
(bad)
fnsetpm(287
in
enter
clc
hlt
repz
je
xlat
imul
jmp
push
sahf
ret
cmc
add
(bad)
(bad)
dec
jl
int3
pop
clc
sbb
enter
int3
fisub
cwde
add
das
mov
test
jmp
lock
mov
push
sbb
xchg
data16
scas
daa
out
(bad)
arpl
call
imul
mov
ss
sbb
mov
pop
std
xchg
and
inc
fbld
cmp
clc
push
mov
lods
mov
pop
les
or
(bad)
inc
stos
stc
adc
jg
push
(bad)
pop
into
mov
inc
inc
out
inc
cmps
mov
loope
mov
push
mov
(bad)
call
cld
in
into
sbb
add
cmp
lahf
ins
test
mov
(bad)
cld
inc
(bad)
jp
lea
outs
(bad)
push
stos
cli
mov
mov
pop
add
fstp
xor
(bad)
(bad)
test
scas
push
xchg
add
jmp
mov
clc
cmp
mov
jle
push
xor
sahf
dec
xor
(bad)
sub
mov
add
cwde
(bad)
(bad)
(bad)
(bad)
jl
mov
scas
shl
push
xchg
dec
cld
cmps
cmc
jno
data16
jp
mov
and
cli
inc
in
xor
or
(bad)
(bad)
call
cld
(bad)
cmp
jmp
or
loope
call
lds
mov
cli
(bad)
(bad)
(bad)
jl
mov
push
fstp
int3
lds
pushf
pop
ficom
retf
(bad)
(bad)
out
call
lds
test
scas
jle
xor
popa
(bad)
xor
xchg
lods
mov
psubq
sbb
sub
pop
cmp
js
xchg
ins
shl
jmp
inc
mov
(bad)
call
inc
fstp
inc
mov
out
popa
repnz
adc
adc
imul
call
jnp
mov
fcomp
cmp
ins
mov
push
sbb
aam
gs
das
cmp
clc
mov
mov
mov
in
enter
pop
and
sub
push
or
jns
int
into
cwde
mov
xor
or
(bad)
(bad)
call
mov
daa
push
jmp
add
div
ss
cdq
jno
jae
idiv
(bad)
(bad)
(bad)
call
mov
ret
scas
lds
sbb
enter
arpl
jmp
xor
add
mov
inc
int
fneni(8087
dec
les
(bad)
std
neg
jecxz
push
pop
rol
push
cld
(bad)
(bad)
mov
mov
push
(bad)
mov
xchg
jno
inc
push
xchg
test
inc
cmp
je
icebp
std
pop
xchg
cli
xor
push
dec
push
fisubr
push
xor
das
js
mov
cli
dec
(bad)
cmc
sti
add
and
in
jb
std
mov
(bad)
jmp
mov
(bad)
in
pop
movs
fdiv
mov
dec
(bad)
imul
cs
(bad)
jmp
sub
frstor
in
mov
sub
cdq
or
ja
(bad)
(bad)
push
xlat
loop
jg
iret
lock
sbb
pop
stc
enter
jp
add
cld
mov
dec
lds
shr
pop
sbb
jl
push
outs
inc
and
jg
pop
push
loope
enter
cdq
inc
call
in
repnz
(bad)
(bad)
(bad)
fldenv
xchg
hlt
inc
cld
icebp
mov
fnstcw
pop
movs
adc
scas
cmp
sar
(bad)
(bad)
push
pop
clc
out
sub
sub
xchg
repz
js
mov
mov
jno
imul
(bad)
(bad)
jmp
(bad)
mov
stc
arpl
stc
jmp
fdiv
lods
or
push
(bad)
(bad)
(bad)
jmp
and
jmp
pop
adc
adc
dec
call
mov
cmp
adc
jl
add
(bad)
(bad)
(bad)
call
push
jge
add
in
sti
push
in
cli
cmp
push
pop
mov
mov
push
(bad)
(bad)
(bad)
dec
fmul
cld
add
pop
dec
jns
xchg
mov
retf
cwde
cwde
pop
test
clc
(bad)
(bad)
call
jecxz
stc
popf
lock
sbb
imul
lahf
sbb
mov
(bad)
jmp
test
push
mov
dec
ins
push
sbb
clc
mov
push
(bad)
mov
test
mov
ins
push
mov
push
cmp
movs
mov
test
jge
push
test
mov
cdq
fisubr
cmp
int3
cmc
xor
std
in
push
das
out
aam
das
loop
(bad)
(bad)
ror
push
mov
(bad)
out
lods
inc
inc
pop
adc
jp
pop
sub
std
cs
gs
in
(bad)
jl
fs
enter
jge
(bad)
fisttp
or
mov
hlt
push
aad
in
and
(bad)
(bad)
call
stc
icebp
mov
xlat
mov
int3
je
pop
scas
movs
and
jle
mov
(bad)
jle
pop
in
sti
(bad)
retf
pop
sub
(bad)
imul
(bad)
jg
je
sub
push
or
or
add
or
mov
(bad)
out
pop
nop
jmp
(bad)
jg
jmp
fs
xor
add
add
aas
popf
into
add
outs
mov
popa
jmp
(bad)
fs
cmp
push
stos
lods
xchg
xchg
xor
mov
(bad)
push
push
ss
retf
mov
not
cmp
jbe
add
in
pop
cmc
(bad)
inc
or
jle
or
nop
imul
imul
ffreep
(bad)
nop
add
fdiv
daa
fidivr
hlt
data16
adc
mov
cmp
in
lea
mov
sahf
add
(bad)
(bad)
inc
(bad)
fidivr
call
mov
ja
pop
and
sub
pop
and
xchg
xabort
push
mov
ins
(bad)
jle
inc
leave
mov
xchg
repz
inc
in
xchg
add
(bad)
(bad)
jmp
cld
mov
lods
(bad)
out
push
in
mov
mov
xor
pop
xor
mov
out
retf
(bad)
dec
pop
jl
(bad)
out
ja
out
call
push
mov
into
call
mov
stc
daa
xlat
popf
inc
out
(bad)
lds
data16
mov
out
push
outs
adc
sub
jmp
repz
pop
(bad)
(bad)
mov
lock
sbb
cld
test
jp
mov
push
push
nop
pop
les
pop
loop
call
in
jl
or
or
out
mov
(bad)
es
stc
imul
adc
icebp
jae
mov
inc
and
mov
mov
jbe
(bad)
call
retf
fcom
fwait
scas
jge
sar
into
scas
movs
push
(bad)
(bad)
(bad)
mov
xor
icebp
out
outs
and
leave
aaa
pop
pushf
inc
push
adc
add
clc
sbb
mov
mov
inc
mov
push
fwait
lods
push
mov
pop
(bad)
fisub
cmp
aam
ins
sub
mov
inc
xor
stos
aam
loop
aam
xor
int3
repz
jmp
ror
jns
mov
call
lock
jae
lods
dec
rcr
inc
(bad)
(bad)
call
les
ret
mov
dec
gs
(bad)
jmp
outs
fsub
(bad)
(bad)
(bad)
inc
add
shr
mov
loope
(bad)
(bad)
cld
call
les
cli
(bad)
(bad)
aas
shr
sbb
retf
inc
jb
jno
leave
mov
sbb
sbb
mov
add
repz
leave
cld
fdecstp
js
out
mov
or
sub
(bad)
pop
adc
adc
inc
jecxz
pop
aaa
std
jmp
daa
mov
dec
test
outs
cmc
(bad)
(bad)
(bad)
call
jbe
pop
fstp
lds
sub
shl
xlat
mul
dec
add
(bad)
(bad)
(bad)
call
daa
out
mov
cs
push
push
cmp
mov
vpminub
(bad)
(bad)
mov
test
fstp
scas
cmp
jno
dec
jbe
shl
push
pop
pop
std
(bad)
(bad)
call
in
push
pop
xchg
sub
cld
lods
pop
inc
mov
out
push
sub
movs
loop
sub
and
mov
add
cmp
(bad)
push
in
inc
jns
mov
mov
cdq
dec
adc
(bad)
push
xor
scas
add
mov
(bad)
jbe
and
xchg
sti
call
(bad)
(bad)
call
jno
mov
or
or
sub
(bad)
jg
aas
daa
and
div
scas
pop
icebp
inc
mov
ds
or
xchg
push
pusha
aam
aam
cwde
sti
mov
fwait
jmp
clc
jg
jns
cmps
inc
jge
and
cmp
cwde
sar
pop
out
push
adc
ss
mov
popf
jmp
mov
jbe
pop
mov
(bad)
(bad)
(bad)
inc
adc
pop
mov
pop
mov
je
loop
retf
mov
vpaddd
rol
jmp
(bad)
cmp
add
jle
add
xchg
imul
mov
xor
ins
pop
dec
scas
rol
mov
jmp
jg
int3
push
daa
lods
sbb
inc
shr
dec
(bad)
(bad)
(bad)
mov
pop
ficomp
adc
jnp
pusha
hlt
mov
shr
mov
in
sub
repnz
or
push
mov
and
jo
popf
push
push
pop
sahf
sub
xchg
dec
or
(bad)
cmp
adc
jl
outs
ror
push
cld
(bad)
mov
mov
retf
sub
and
leave
fs
mov
in
aas
(bad)
(bad)
(bad)
(bad)
cmp
inc
mov
cwd
retf
out
(bad)
call
jne
xor
int3
daa
mov
popf
cmc
push
sbb
xchg
mov
dec
(bad)
scas
ja
loope
pop
sbb
faddp
retf
add
stos
adc
nop
stos
xchg
(bad)
(bad)
(bad)
call
cli
into
mov
lock
fstp
ja
xchg
jle
jnp
mov
cdq
add
adc
push
xor
cs
dec
cmp
movs
ret
jle
(bad)
dec
outs
push
cld
ja
out
push
mov
ja
mov
icebp
cmp
ja
(bad)
(bad)
push
test
in
mov
test
inc
fadd
sub
jb
add
(bad)
in
sub
je
mov
inc
not
js
test
test
js
retf
stos
lods
call
loopne
cdq
or
cdq
retf
jae
gs
fwait
add
push
mov
fistp
adc
int3
and
stc
dec
pop
ja
stos
inc
or
std
leave
clc
rol
ret
jmp
popa
(bad)
(bad)
(bad)
call
sbb
cld
loop
adc
lea
cs
in
and
sbb
dec
not
in
(bad)
(bad)
cmps
(bad)
(bad)
inc
xchg
mov
mov
ret
pop
(bad)
xchg
(bad)
(bad)
(bad)
jmp
sub
mov
sub
jb
loopne
ss
mov
lds
adc
cmp
(bad)
jge
popa
int3
ror
nop
cmp
or
cmp
ja
sbb
adc
dec
(bad)
(bad)
dec
and
jno
retf
sub
les
(bad)
adc
jb
adc
jl
add
push
sar
pop
lock
jp
xor
std
ret
test
xor
(bad)
cwde
mov
and
out
(bad)
(bad)
call
push
mov
aam
cmp
(bad)
shl
bnd
loop
sar
sbb
jle
sbb
fcomp
or
repz
loopne
jmp
adc
ficomp
push
cmp
(bad)
(bad)
jmp
inc
inc
movs
mov
jp
xchg
std
and
add
lods
repz
sbb
sbb
cmc
pop
xor
push
movs
pop
sub
mov
(bad)
jg
(bad)
fstp
stos
mov
imul
or
xor
int
mov
jmp
xor
push
movs
shl
pop
push
pop
mov
sbb
(bad)
(bad)
(bad)
(bad)
fidivr
adc
mov
loope
inc
jecxz
std
mov
test
ffree
sub
imul
ret
ret
in
(bad)
inc
inc
sar
(bad)
dec
je
jg
or
xchg
sbb
out
cmc
sbb
inc
call
(bad)
sti
sar
rcl
push
inc
dec
push
rol
cmp
shl
int3
mov
xchg
test
js
pop
icebp
(bad)
jmp
gs
lods
jge
sbb
sbb
cli
sub
cmps
push
sbb
(bad)
xor
pop
xchg
xor
pop
mov
fdiv
(bad)
(bad)
(bad)
(bad)
jns
or
(bad)
push
hlt
(bad)
mul
jo
int
push
inc
out
add
mov
and
(bad)
out
add
ins
data16
add
xchg
pop
cmp
cmp
cwde
repz
inc
push
mov
(bad)
fst
cmp
inc
lods
ds
sahf
loopne
push
int
out
sbb
(bad)
mov
mov
inc
add
mov
ret
mov
in
jl
xchg
outs
(bad)
inc
out
push
out
dec
or
movs
xchg
inc
nop
lds
inc
lds
xchg
sub
in
call
sub
rcr
jl
or
test
cmp
gs
out
adc
scas
clc
lock
dec
mov
cmps
ja
int
sub
pusha
adc
ror
or
mov
sub
and
mov
sub
jnp
fcom
mov
jmp
(bad)
cmp
aas
(bad)
lock
add
push
inc
push
adc
fcmovb
iret
dec
mov
push
call
hlt
pop
cmps
jb
push
add
xor
dec
popf
pop
push
sub
data16
loopne
(bad)
push
packuswb
std
inc
pop
and
outs
loopne
cld
mov
push
stos
sub
(bad)
fisttp
int
pop
call
mov
aas
jg
sub
or
loopne
gs
(bad)
push
mov
xchg
xchg
scas
pop
pop
loope
das
xchg
mov
ds
call
fstp
add
sub
push
xchg
mov
fld
fisubr
mov
and
sbb
push
fmul
inc
push
xchg
int
rol
cmp
fimul
test
inc
sbb
push
and
add
cli
movs
adc
pushf
sub
outs
and
adc
(bad)
call
arpl
dec
dec
enter
mov
mov
add
adc
adc
arpl
mov
(bad)
(bad)
(bad)
jmp
fst
xor
jle
sahf
dec
mov
retf
pop
stos
mov
(bad)
int
ds
jo
(bad)
(bad)
push
pusha
fsqrt
sub
jmp
(bad)
dec
pop
jmp
mov
mov
jnp
push
adc
fmul
sub
stos
or
lods
sbb
jmp
test
test
inc
mov
fwait
cwde
fs
mov
stos
xor
icebp
adc
popf
xchg
xor
in
cli
jmp
dec
pop
sub
mov
(bad)
(bad)
inc
rol
or
mov
mov
(bad)
call
mov
(bad)
(bad)
(bad)
jmp
jo
cmp
add
out
dec
(bad)
daa
pop
dec
hlt
cmp
sub
fxch
jne
daa
les
pop
lock
sbb
icebp
inc
jl
lock
sub
mov
mov
clc
call
xlat
aas
and
ss
fs
or
(bad)
(bad)
(bad)
(bad)
inc
push
jnp
xchg
xchg
xor
loopne
outs
xor
sbb
int3
push
(bad)
and
(bad)
jg
lock
(bad)
jmp
popa
repz
sbb
mov
mov
pushf
push
pop
cmp
jo
xchg
add
push
and
xlat
cmp
stc
bound
pop
jne
fsincos
enter
test
jmp
in
jecxz
inc
imul
mov
stos
and
imul
cwde
xor
nop
mov
jle
inc
es
aaa
outs
sub
push
ins
arpl
(bad)
dec
mov
and
call
pusha
mov
cmps
cmp
into
mov
(bad)
fisttp
repnz
or
(bad)
fild
jg
mov
lahf
rol
or
cmps
sbb
out
ret
std
icebp
int3
loopne
(bad)
(bad)
inc
cld
das
add
popf
dec
ret
mov
xor
fcomi
call
dec
or
div
(bad)
jecxz
jg
push
scas
daa
popf
rol
and
lods
sbb
rcl
(bad)
in
cmp
call
(bad)
cmp
sbb
mov
jns
cmp
add
push
rol
sub
shl
adc
mov
mov
push
jge
das
sub
or
(bad)
(bad)
inc
mov
icebp
pop
aam
fidivr
add
and
es
loope
mov
pop
adc
jno
leave
dec
fs
xor
inc
repz
push
(bad)
call
jp
cmp
pop
cld
pop
jecxz
std
push
out
sbb
popa
sbb
mov
xor
push
iret
cmps
add
call
xchg
xchg
push
or
mov
push
xchg
add
xchg
icebp
push
pusha
push
dec
inc
pop
leave
ins
mov
lea
add
jmp
scas
(bad)
jg
sar
ins
jg
in
popa
in
int3
sub
(bad)
or
(bad)
scas
(bad)
(bad)
(bad)
dec
push
jbe
movs
aas
in
sar
ret
fcmovne
lock
outs
in
cmp
cmp
out
dec
ret
(bad)
or
pop
fdivr
fisttp
jg
das
(bad)
push
pop
outs
sub
mov
(bad)
cmp
out
sub
pop
add
retf
inc
cli
push
les
fs
fisttp
imul
sbb
(bad)
fcmovb
adc
call
mov
mov
icebp
cli
xor
or
pusha
ja
or
(bad)
call
(bad)
push
outs
dec
rcl
or
mov
dec
std
fild
loope
pop
inc
inc
xchg
out
clc
jl
nop
adc
shl
aad
xchg
pop
push
test
fwait
inc
(bad)
das
xchg
rol
mov
enter
retf
inc
iret
inc
xor
mov
gs
cmps
pop
jecxz
(bad)
(bad)
(bad)
out
clc
ss
mov
push
mov
fist
dec
xchg
(bad)
jecxz
cmps
push
outs
clc
(bad)
call
jp
rol
pop
push
mov
xchg
test
cmp
mov
xchg
cli
(bad)
(bad)
dec
lods
loope
call
mov
adc
xor
xchg
jno
cmova
aad
jp
sti
push
push
fld
(bad)
fcomip
popf
mov
in
add
jmp
and
sub
out
ds
in
add
js
retf
adc
dec
mov
clc
daa
inc
sahf
mov
jbe
cmp
pop
jmp
xchg
push
xor
out
sub
(bad)
jmp
mov
dec
daa
(bad)
(bad)
hlt
sahf
js
movs
adc
ja
mov
mov
stos
gs
(bad)
(bad)
push
dec
sbb
cmp
icebp
fimul
mov
sub
cs
loope
aaa
jp
fucomp
cmp
aas
loopne
xchg
fisub
cli
bound
inc
and
imul
xor
(bad)
(bad)
(bad)
inc
mov
and
fnstcw
clc
jo
xor
cli
adc
mov
inc
dec
test
inc
pop
dec
enter
cmp
adc
pop
adc
mov
(bad)
(bad)
(bad)
xchg
mov
aam
push
fdiv
or
loope
clc
in
sbb
mov
inc
(bad)
(bad)
dec
inc
in
dec
ror
or
sub
rol
sbb
fwait
(bad)
(bad)
push
inc
dec
and
out
ins
mov
mov
pop
in
cmps
or
outs
pop
xchg
xchg
and
pop
rol
ja
push
mov
cmp
popf
adc
cld
(bad)
inc
fcomp
(bad)
jge
mov
xchg
mov
rol
out
stos
es
and
dec
add
adc
cdq
cmc
adc
sub
push
(bad)
inc
cld
rcr
enter
addr16
jecxz
push
test
out
mov
add
movs
adc
(bad)
(bad)
(bad)
mov
dec
add
adc
(bad)
jno
cmp
(bad)
loopne
pop
(bad)
(bad)
jg
ds
cdq
inc
lods
cmp
add
shr
sub
(bad)
jmp
sub
addr16
(bad)
icebp
popa
or
ror
xor
adc
(bad)
(bad)
(bad)
call
jge
fidivr
iret
in
mov
pop
mov
push
inc
scas
push
add
xchg
add
shl
mov
push
sub
or
sub
or
pop
lds
rol
push
or
ja
dec
pusha
mov
(bad)
jg
mov
mov
outs
or
jle
pop
cwde
ins
sub
mov
mov
test
and
mov
call
pop
jnp
or
clc
jle
sbb
je
fisub
ja
bound
mov
xchg
jecxz
mov
jns
pop
hlt
push
or
fdivrp
add
shl
sub
pop
cld
out
jo
cld
call
loope
bound
mov
imul
ds
jge
cwde
std
lods
mov
mov
clc
iret
sar
popf
or
mov
jp
jb
pusha
(bad)
mov
outs
mov
jno
sub
(bad)
jmp
rcl
push
sti
cmp
xchg
xchg
cmc
stos
xor
pop
inc
std
(bad)
(bad)
(bad)
jmp
sbb
sbb
in
fdivr
mov
popa
int3
sbb
xor
adc
fidivr
(bad)
(bad)
(bad)
dec
xchg
mov
sbb
mov
and
scas
adc
mov
sub
out
in
shl
jmp
aam
xchg
push
add
in
outs
mov
pop
mov
(bad)
out
cld
jg
call
add
jecxz
and
and
test
pop
in
ret
stc
mov
(bad)
(bad)
mov
pop
movs
mov
pop
das
(bad)
(bad)
fisttp
not
xor
(bad)
(bad)
push
jmp
push
dec
daa
xor
pop
xchg
retf
popa
jmp
cmps
div
test
fucom
cmp
sbb
stos
push
inc
mov
rol
pop
adc
pop
and
xor
mul
mov
xlat
out
out
mov
int3
jmp
jg
and
loopne
int
add
imul
push
push
rol
pop
out
inc
sub
dec
lock
mov
or
xor
mov
ins
mov
clc
fistp
repz
mov
(bad)
(bad)
call
xchg
loope
lea
mov
adc
aam
cmc
push
pusha
jnp
sub
bound
(bad)
out
clc
call
inc
fcmove
lods
xchg
outs
popf
fist
xchg
cmp
sbb
out
jle
(bad)
(bad)
call
test
cmp
jp
cmp
cs
pop
popf
cmps
or
jae
(bad)
(bad)
(bad)
push
lahf
loopne
dec
and
aad
or
sbb
jle
cmc
adc
push
dec
push
xchg
test
(bad)
(bad)
mov
inc
inc
and
and
test
pushf
and
int
(bad)
(bad)
call
jae
popa
repz
inc
ins
dec
or
(bad)
push
push
test
or
(bad)
jo
(bad)
in
dec
int3
jl
jle
in
cmp
nop
out
aaa
add
jg
mov
ret
mov
sub
mov
mov
pop
repz
ret
mov
xchg
test
and
jg
(bad)
inc
fisub
bound
xchg
bound
in
stc
popf
shl
sar
data16
inc
push
shr
mov
in
mov
inc
lock
cld
(bad)
out
dec
dec
fild
add
test
vpsrad
jne
mov
lahf
(bad)
lahf
mov
push
or
rol
add
add
jbe
(bad)
ins
call
pop
(bad)
(bad)
(bad)
(bad)
cmp
fisttp
std
(bad)
outs
popa
fcom
and
and
add
mov
retf
lds
pop
(bad)
(bad)
(bad)
push
popa
jecxz
xor
pusha
cld
push
repz
int3
ret
push
jmp
sbb
faddp
xchg
(bad)
(bad)
(bad)
push
fwait
(bad)
das
push
sub
out
xor
mov
xchg
out
or
(bad)
not
cdq
fcmove
stos
(bad)
(bad)
call
and
pop
mov
out
adc
lea
xchg
mov
mov
add
(bad)
xchg
and
pop
sub
addr16
cdq
push
ret
rcl
jecxz
(bad)
(bad)
jmp
outs
mov
cmp
bound
sub
add
mov
(bad)
(bad)
jg
call
popa
pop
jae
sbb
pop
adc
outs
inc
pusha
mov
daa
sti
(bad)
jg
lock
popa
aam
pop
adc
in
jns
pop
ins
mov
mov
mov
mov
ficomp
jns
jo
lock
dec
ret
jns
push
ret
(bad)
(bad)
jmp
xor
sbb
(bad)
ror
cmc
push
xor
pusha
out
ds
push
(bad)
(bad)
call
test
pop
mov
data16
or
or
movs
shl
adc
fisubr
ss
(bad)
mov
add
fdiv
add
xchg
inc
mov
mov
mov
repnz
repz
pushf
xchg
jle
test
dec
pop
sti
jecxz
pop
lods
ds
inc
ss
in
movs
pop
pop
xlat
adc
inc
adc
mov
fs
and
push
cld
or
scas
add
add
(bad)
mov
not
mov
jmp
sbb
movs
(bad)
in
cmp
nop
loopne
jmp
push
(bad)
cmp
and
(bad)
jl
mov
jb
xchg
and
call
jle
imul
aam
(bad)
mov
mov
mov
and
push
jg
sahf
into
jecxz
ret
rep
popf
pop
lods
mov
(bad)
mov
out
xor
hlt
cmps
jmp
cmp
mov
jae
loope
enter
mov
mov
or
inc
(bad)
loop
gs
mov
dec
jl
add
mov
push
mov
fst
xor
inc
dec
cmc
cli
es
jecxz
test
add
scas
test
mov
icebp
cmc
sbb
jmp
push
int3
or
nop
push
daa
push
std
pop
cld
mov
lods
int3
fs
mov
lods
gs
pushf
xabort
(bad)
inc
xlat
jp
jmp
out
jg
(bad)
mov
mov
(bad)
adc
add
ja
fsub
test
inc
(bad)
jg
(bad)
(bad)
pop
repz
xor
add
xor
xchg
dec
sub
test
cwde
and
aad
sbb
adc
or
outs
ins
retf
xchg
jmp
adc
shl
push
xchg
xchg
lock
scas
inc
jns
data16
dec
lods
jmp
inc
jns
(bad)
(bad)
dec
cwde
ins
push
movs
push
in
xor
fnstcw
shr
pop
mov
or
or
psrad
dec
ret
mov
aam
mov
fs
iret
dec
xor
mov
mov
push
pop
jno
loopne
add
out
ss
shr
cld
xchg
adc
movs
cmp
in
jl
data16
call
out
out
in
in
addr16
sahf
div
adc
push
stos
jp
cmc
ins
mov
jmp
sub
mov
xchg
mov
fld
or
mov
jl
movs
xor
(bad)
sbb
sub
shl
adc
ins
and
ins
pushf
idiv
(bad)
jmp
shr
aad
test
int
rcr
mov
pusha
pop
mov
aas
push
retf
iret
xchg
leave
shl
mov
mov
gs
push
cmc
pusha
jmp
sbb
or
push
or
mov
(bad)
inc
lea
(bad)
icebp
call
int
or
mov
jb
add
shl
dec
loop
inc
sti
daa
dec
and
sbb
push
inc
xor
mov
inc
add
std
dec
loop
sub
xor
movs
enter
and
fisttp
(bad)
fadd
mov
add
ja
cwde
call
xchg
cwde
inc
adc
adc
outs
div
dec
fdiv
shl
mul
aas
jnp
inc
add
adc
cmp
mov
mov
fistp
cdq
cmp
and
mov
dec
outs
shr
add
sub
pop
push
ret
xchg
mov
add
or
sub
xor
dec
inc
and
add
xchg
loop
jp
shr
lock
icebp
ds
out
push
test
sbb
ret
stc
add
inc
adc
xor
je
fwait
out
jbe
cmps
xchg
add
mov
cmp
and
mov
push
test
jmp
xor
stc
push
(bad)
cmp
xor
xor
pop
mov
xor
add
xor
sub
add
push
jle
bound
fs
gs
repnz
mov
cmp
xor
inc
retf
sub
inc
inc
xor
sbb
jo
pop
adc
push
inc
and
pop
mov
push
adc
cmps
mov
add
iret
inc
shr
lods
adc
push
adc
inc
mov
add
and
clc
xchg
movs
and
les
enter
(bad)
(bad)
jmp
adc
sti
mov
sub
sub
(bad)
sub
in
(bad)
(bad)
(bad)
call
lods
int3
ss
mov
(bad)
push
retf
mov
sub
inc
dec
push
retf
or
int
xor
add
inc
(bad)
(bad)
(bad)
push
cs
cmp
pop
mov
enter
cmp
imul
(bad)
jae
cmp
xor
(bad)
(bad)
(bad)
repz
addr16
repz
push
add
mov
sub
add
push
sti
ja
rol
inc
inc
and
or
xchg
mov
sbb
sbb
xchg
xchg
mov
inc
add
inc
nop
sub
ret
in
test
xor
and
xor
add
outs
outs
fwait
cmps
adc
and
(bad)
in
ins
fcmovnu
sub
ror
ret
add
push
mov
dec
ror
leave
xor
mov
mov
xor
and
and
out
jle
jge
mov
movs
or
rol
adc
fiadd
push
xor
adc
pop
adc
cmp
outs
fild
xor
inc
stos
cdq
aaa
dec
aad
add
xor
push
xchg
xchg
add
lock
push
pop
mov
adc
cmp
xchg
jns
mov
adc
cmp
(bad)
push
push
movs
mov
adc
lock
aaa
bsf
std
cmp
dec
add
or
jecxz
cwde
sar
retf
mov
mov
in
imul
(bad)
call
pop
sbb
(bad)
popa
mov
(bad)
icebp
ja
lea
repnz
inc
sbb
addr16
jl
icebp
out
cli
popa
(bad)
(bad)
(bad)
push
fcom
cmp
call
shl
push
dec
inc
add
mov
jg
stc
retf
(bad)
(bad)
(bad)
call
retf
add
jns
movs
push
mov
and
pop
and
cmp
int3
retf
repz
scas
adc
xor
cld
mov
push
add
std
xor
int
add
test
pop
adc
loop
jg
push
add
pop
out
ins
(bad)
cmc
xor
ret
or
sub
(bad)
jmp
iret
jnp
cwde
pusha
jl
and
inc
pop
inc
cmc
aas
loop
sub
xor
(bad)
(bad)
inc
push
mov
mov
sub
push
lahf
out
aam
jno
pop
clc
inc
pop
and
in
dec
(bad)
(bad)
(bad)
inc
mov
sbb
cwde
pop
aad
and
leave
aam
lock
mov
fstp
(bad)
(bad)
(bad)
mov
shl
mov
out
xchg
shr
push
sub
xor
or
mov
dec
pushf
retf
mov
sub
jno
adc
jns
fcomp
jns
(bad)
(bad)
jg
push
push
push
jbe
scas
xchg
(bad)
pop
leave
sti
les
retf
mov
add
lea
das
mov
cmp
(bad)
aad
jae
hlt
cdq
mov
ds
shr
and
fnstcw
call
mov
ds
retf
movs
cmp
fsub
jge
(bad)
jg
je
jl
adc
push
cmp
call
fwait
xor
pop
lea
(bad)
(bad)
call
adc
push
push
(bad)
mov
xor
pushf
out
lock
push
mov
(bad)
fisttp
ret
sbb
mov
retf
icebp
movs
cmp
mov
dec
mov
pop
sub
(bad)
(bad)
inc
repnz
loope
mov
sbb
(bad)
jge
push
mov
enter
jecxz
cmp
jmp
xchg
mov
sub
stos
mov
std
add
ss
out
sbb
ja
(bad)
(bad)
cmp
xchg
in
mov
out
jmp
pusha
jmp
adc
movs
xchg
(bad)
(bad)
inc
test
mov
pusha
call
mov
and
fdiv
inc
bound
push
xor
js
fisub
adc
mov
push
(bad)
jmp
dec
in
fsub
pop
push
inc
popa
pop
pop
neg
xor
or
(bad)
(bad)
(bad)
mov
call
fadd
cli
xor
mov
loop
jns
jne
aas
hlt
(bad)
push
add
(bad)
call
int
mov
aaa
add
mov
call
sti
add
jecxz
mov
outs
pop
jle
adc
jae
push
cmp
(bad)
std
(bad)
(bad)
inc
mov
repz
adc
mov
push
stos
xchg
cld
adc
test
jmp
xchg
leave
dec
xchg
push
movs
aaa
cmp
or
mov
add
inc
add
(bad)
mov
or
cmp
(bad)
call
sub
(bad)
(bad)
jge
sbb
cmp
imul
jecxz
sbb
xor
stos
inc
rol
(bad)
inc
cmp
push
fiadd
sub
lods
jle
sbb
into
(bad)
fisub
pop
sbb
(bad)
mov
and
js
pop
ret
dec
cs
ss
ds
push
or
lock
in
(bad)
xor
and
enter
jae
popf
add
push
jmp
(bad)
enter
or
xlat
dec
icebp
sub
xrelease
stc
(bad)
mov
mov
(bad)
das
adc
bound
push
ss
das
pop
retf
sub
or
push
jbe
outs
clc
add
inc
sub
mov
pushf
popa
sbb
cli
push
cld
cmc
(bad)
cs
pop
das
or
not
pop
in
cmp
pop
mov
mov
(bad)
cld
push
cli
jecxz
lea
inc
enter
ins
addr16
pop
cld
(bad)
push
inc
cmp
or
sbb
shld
pusha
or
(bad)
(bad)
inc
cmp
into
movups
lahf
jmp
clc
std
leave
and
call
pop
cmc
call
and
or
push
mov
sbb
pop
ret
jb
(bad)
jg
(bad)
jle
add
mov
je
lock
out
xor
mov
out
(bad)
(bad)
inc
push
pop
adc
jnp
out
xchg
cmp
ror
int3
stos
lds
and
call
retf
mov
lock
dec
adc
add
sbb
jbe
bound
(bad)
jno
cmp
jmp
fwait
gs
(bad)
pop
jb
or
jbe
cmp
stos
inc
std
inc
jecxz
shl
pop
test
rcr
jo
(bad)
(bad)
repz
fstp
les
mov
fcomp
iret
imul
sub
mov
(bad)
(bad)
push
mov
push
or
pop
fnstsw
cdq
xchg
jno
add
outs
ret
or
lods
call
push
loopne
pop
mov
fldenv
push
adc
jle
fldz
sbb
mov
(bad)
(bad)
(bad)
(bad)
in
and
loope
retf
into
(bad)
jmp
hlt
test
(bad)
push
bound
call
pop
or
(bad)
mov
popf
inc
(bad)
xchg
std
mov
std
inc
sbb
movs
push
(bad)
(bad)
fild
jb
cmp
fisub
ss
out
push
fdiv
shl
jmp
mov
jns
out
cmps
mov
(bad)
(bad)
jg
(bad)
cmp
ds
hlt
loopne
lea
ds
popa
fisub
scas
jmp
push
pusha
pop
jmp
dec
or
test
(bad)
(bad)
dec
sbb
fisubr
push
ins
xchg
(bad)
cdq
adc
mov
(bad)
jmp
jne
mov
inc
sbb
xchg
fmul
loope
je
lea
adc
ja
test
jmp
push
fimul
int3
mov
movs
loopne
cmps
stc
loopne
(bad)
(bad)
call
mov
lea
jmp
add
popa
or
push
ss
pop
add
(bad)
(bad)
(bad)
jb
push
mov
adc
mov
test
add
add
mov
(bad)
(bad)
(bad)
(bad)
jmp
inc
or
jmp
ror
mov
repz
call
add
add
(bad)
(bad)
(bad)
(bad)
mov
mul
xor
popaw
sub
(bad)
aam
ins
pop
push
(bad)
or
mov
(bad)
(bad)
inc
xchg
add
mov
add
in
nop
sub
pushf
jne
ja
aad
ss
mov
(bad)
(bad)
(bad)
push
mov
jecxz
jmp
sbb
adc
fnstenv
fdivr
outs
adc
test
adc
mov
fnstenv
mov
cld
call
(bad)
push
loop
(bad)
mov
(bad)
rol
scas
mov
xchg
(bad)
(bad)
(bad)
std
push
enter
inc
cli
or
cmp
lahf
mov
sbb
dec
(bad)
(bad)
push
or
xor
or
icebp
cld
cld
sbb
stos
(bad)
pop
into
add
and
cmp
fimul
push
imul
out
div
inc
jmp
(bad)
(bad)
(bad)
in
sbb
data16
jno
mov
cmp
leave
in
mov
or
scas
jb
pushf
(bad)
(bad)
(bad)
dec
loopne
mov
sub
pop
(bad)
std
fsub
jnp
push
mov
mov
(bad)
fnstsw
(bad)
inc
clc
mov
sbb
aas
fcom
in
mov
xor
(bad)
(bad)
mov
jle
sub
mov
call
shl
fbstp
pop
arpl
push
sbb
mov
inc
cwde
add
out
cmp
test
in
ds
(bad)
(bad)
push
jmp
adc
out
gs
outs
and
dec
in
cmc
push
xor
ret
dec
(bad)
(bad)
push
inc
inc
out
retf
movs
ss
push
fst
hlt
add
adc
push
(bad)
jp
in
(bad)
dec
(bad)
imul
dec
add
sub
push
jmp
inc
(bad)
(bad)
(bad)
jmp
xchg
mov
cmp
adc
ss
mov
jbe
and
push
xchg
mov
jo
pop
pop
push
pop
lds
xlat
mov
or
sahf
jb
add
inc
mov
(bad)
call
mov
call
icebp
leave
imul
lods
pop
sub
fsubr
pop
cdq
ficom
rcl
mov
out
(bad)
shl
ret
(bad)
call
ins
dec
mov
sbb
jp
adc
inc
pop
cmp
arpl
(bad)
shr
jmp
or
mov
xor
mov
ss
mov
outs
clc
xor
fiadd
push
jecxz
sub
push
mov
ins
push
mov
xor
xchg
jp
jbe
jno
imul
push
ror
fcomp
lods
enter
ror
pushf
mov
lea
retf
addr16
in
jge
mov
push
or
outs
clc
sub
loop
jg
das
fmul
sub
jb
push
call
adc
mov
ret
sti
clc
mov
or
nop
repnz
out
loopne
(bad)
fcomip
cmp
out
pop
mov
jae
in
sahf
dec
dec
das
ror
dec
sub
es
(bad)
(bad)
inc
push
bswap
and
into
stos
or
cmc
push
cdq
mov
psubq
scas
mov
mov
lods
ins
inc
ja
push
outs
dec
lds
push
jns
pop
xchg
push
push
in
(bad)
(bad)
(bad)
(bad)
fdivr
in
jb
cmp
inc
cdq
lods
adc
mov
jo
xchg
loop
mov
stos
jb
adc
pop
inc
mov
in
jns
jg
xor
(bad)
(bad)
(bad)
jmp
loope
mov
or
mov
movs
jmp
xor
div
xor
push
(bad)
(bad)
jmp
cmp
das
imul
inc
fstp
lahf
std
into
xor
(bad)
in
int3
rol
mov
inc
nop
mov
minps
sub
scas
lea
dec
jmp
mov
xchg
inc
retf
sub
or
dec
ja
jbe
call
(bad)
jle
call
call
call
aas
pop
mov
(bad)
out
ud1
or
or
fistp
sub
(bad)
xchg
(bad)
sahf
adc
dec
jl
out
adc
sub
loopne
inc
dec
aaa
outs
ins
(bad)
lds
jmp
push
pusha
dec
cld
imul
sbb
sti
(bad)
movs
and
lods
mov
inc
push
xor
lock
cdq
gs
loope
(bad)
(bad)
call
bound
dec
sub
inc
ins
aam
stc
mov
loopne
cmps
jnp
lods
(bad)
(bad)
(bad)
inc
xor
pop
mov
or
mov
popf
adc
xchg
aas
xchg
adc
arpl
popa
push
pop
std
scas
call
test
cli
int3
call
add
inc
xchg
(bad)
jae
jo
xchg
cmp
ins
xchg
cwde
clc
(bad)
(bad)
push
xchg
repz
repz
iret
mov
out
mov
xchg
inc
scas
dec
call
or
adc
loopne
fsincos
sbb
sbb
xor
(bad)
(bad)
inc
jbe
scas
xlat
mov
push
retf
sbb
add
(bad)
cmps
call
pop
jno
sub
xor
out
and
not
dec
ins
ficom
outs
(bad)
mov
jnp
mov
jl
mov
bound
pcmpeqd
test
fild
cli
adc
ret
or
loop
out
in
pushf
bound
jns
sar
(bad)
(bad)
in
lods
lods
jae
jo
inc
dec
in
sub
inc
mov
je
push
pusha
push
pop
pop
hlt
in
out
icebp
jmp
mov
bound
inc
in
test
cs
dec
or
sub
mov
push
les
push
cmp
div
(bad)
(bad)
(bad)
dec
pusha
int
ins
dec
cmp
sub
or
sti
aas
xchg
pop
test
ds
jmp
leave
pop
gs
popa
pop
sbb
adc
xchg
push
add
icebp
pop
int
les
mov
(bad)
(bad)
mov
mov
dec
xchg
dec
jmp
inc
xchg
jbe
adc
dec
mov
and
add
retf
retf
mov
cmp
nop
inc
cmps
sub
add
add
push
jmp
daa
mov
addr16
sti
ja
dec
lock
jmp
(bad)
inc
lods
xor
js
mov
dec
call
jno
pop
jb
dec
popf
sbb
(bad)
(bad)
(bad)
inc
mov
mov
ds
mov
sub
fs
sbb
dec
fld
dec
(bad)
int3
pop
mov
and
cmps
cmp
pop
sar
xor
inc
cs
pop
xchg
or
call
in
popf
retf
aaa
xchg
mov
xchg
dec
mov
arpl
mov
lods
pop
out
jb
arpl
sti
(bad)
jnp
loope
xchg
loop
idiv
test
ret
fdivr
iret
test
aam
sub
push
call
sub
dec
xchg
jl
into
call
mov
lds
or
call
dec
retf
int3
(bad)
mov
ret
(bad)
(bad)
inc
fisub
outs
push
addr16
jecxz
xor
mov
inc
pop
adc
out
cmp
clc
cmp
sar
shr
inc
mov
(bad)
into
jb
std
mov
outs
pop
jbe
imul
jmp
or
leave
push
dec
sbb
push
jle
sub
jge
(bad)
cmp
cmc
mov
push
inc
(bad)
adc
fs
mov
mov
(bad)
(bad)
(bad)
fistp
repz
xor
les
adc
xor
stos
movs
(bad)
jmp
xchg
mov
sbb
test
pop
sar
(bad)
(bad)
cld
xchg
sti
popa
fnstenv
mov
(bad)
repz
int
sbb
into
inc
sti
loope
(bad)
(bad)
mov
fs
lds
xor
arpl
imul
pop
(bad)
(bad)
push
(bad)
(bad)
(bad)
push
jno
inc
mov
inc
mov
mov
neg
inc
pop
rol
jns
mov
push
pop
jg
(bad)
jmp
stc
and
dec
(bad)
(bad)
push
xchg
ret
shl
data16
pop
inc
adc
xor
pop
popf
div
jo
(bad)
jmp
loop
(bad)
cli
fmul
cmps
mov
repz
(bad)
fnstsw
movlps
adc
imul
dec
les
push
and
daa
mov
xchg
or
clc
(bad)
(bad)
fbld
je
pusha
lods
jge
xadd
js
popf
js
mov
and
sbb
dec
call
jb
pop
repz
jbe
clc
xchg
fdiv
fwait
lods
ja
push
add
(bad)
dec
cmp
mov
fild
mov
scas
(bad)
(bad)
call
pushf
add
pop
and
or
add
dec
leave
inc
js
jge
js
(bad)
(bad)
push
shr
mov
jmp
push
aam
ficom
dec
and
cmc
sub
lahf
out
ins
jp
jae
sbb
scas
add
jg
(bad)
jmp
int3
js
xchg
mov
pushf
int
jmp
xchg
xchg
inc
lods
cmc
cdq
sub
mov
mov
aam
push
add
(bad)
(bad)
(bad)
dec
push
popf
xchg
aaa
out
mov
push
dec
aad
repz
inc
adc
cmp
(bad)
es
pop
sbb
push
pusha
jmp
sbb
lahf
mov
add
sub
std
cmp
add
inc
(bad)
inc
or
sub
jne
loope
ret
out
jns
call
mov
and
xchg
sub
mov
cmp
(bad)
out
jecxz
fcomp
(bad)
push
mov
das
es
ret
pusha
inc
cld
lock
sbb
pop
ret
xlat
pop
mov
xor
inc
setne
rol
jns
mov
sti
mov
push
(bad)
(bad)
(bad)
jmp
add
lds
mov
mov
movs
sbb
pop
cmp
push
or
ins
dec
jnp
xor
(bad)
(bad)
jmp
clc
std
ins
push
or
lds
mov
outs
aam
out
mov
std
sar
(bad)
(bad)
dec
rol
adc
repnz
arpl
push
sub
popa
les
mov
scas
out
sub
in
loopne
(bad)
dec
push
out
fwait
je
mov
xlat
inc
arpl
sub
mov
(bad)
(bad)
mov
jns
icebp
in
pusha
jg
getsec
inc
es
pusha
ins
cld
imul
fdivrp
jmp
push
adc
ret
repz
sub
call
xor
xor
push
mov
add
or
xor
call
mov
jmp
pop
shl
push
je
mov
adc
adc
pop
dec
pop
mov
(bad)
(bad)
call
sub
ins
int3
inc
ret
cmp
cmps
or
into
inc
lods
fdivr
cmps
scas
xchg
mov
test
mov
and
dec
cmp
inc
cld
popf
push
or
jne
std
loope
hlt
mov
fcom
mov
xchg
fs
inc
mov
dec
sar
inc
mov
sbb
in
and
lds
fistp
pop
(bad)
jg
(bad)
and
iret
or
or
xchg
push
pop
ftst
imul
mov
dec
imul
aaa
mov
inc
xor
outs
inc
sub
jl
sbb
add
popf
add
call
rol
push
ins
xchg
arpl
push
div
inc
sub
in
dec
ret
out
xor
or
jp
sub
fcomi
fadd
(bad)
(bad)
(bad)
(bad)
ficomp
fidivr
sbb
dec
mov
jno
lods
adc
int
rcr
pop
pushf
jge
mov
out
(bad)
(bad)
jg
in
cs
xor
stos
push
pusha
stos
push
pop
sbb
push
loope
jle
sbb
fcomip
(bad)
call
jns
aaa
xor
and
push
aam
push
push
(bad)
mov
stc
mov
cld
mov
add
sahf
fldcw
das
cli
(bad)
cmp
(bad)
clc
psadbw
jge
sub
(bad)
fdiv
xchg
jb
adc
xchg
dec
pop
cmc
(bad)
push
std
fisubr
xor
jl
scas
(bad)
mov
stos
dec
add
xlat
dec
sub
fild
repnz
test
mov
dec
je
(bad)
(bad)
(bad)
dec
outs
sbb
cld
in
and
out
pop
or
add
(bad)
dec
ror
sar
out
nop
sub
cmp
pop
and
nop
pop
loop
(bad)
call
jne
out
inc
add
push
or
icebp
mov
gs
clc
pusha
movs
js
jmp
call
or
js
pop
ret
jmp
outs
dec
call
or
sub
cmc
(bad)
jmp
xchg
xchg
xchg
mov
add
pop
sbb
pop
loopne
jle
and
shl
daa
(bad)
(bad)
dec
and
gs
sub
or
push
dec
and
(bad)
(bad)
call
pusha
or
jae
(bad)
movs
bound
jl
mov
push
or
dec
add
xchg
or
shl
add
clc
jp
movs
pop
mov
cmp
bound
(bad)
(bad)
jle
pop
inc
ja
popa
jl
mov
jg
clc
(bad)
(bad)
(bad)
jmp
push
aas
dec
in
add
call
sub
out
aam
add
mov
xchg
cmp
jno
test
fistp
outs
mov
sti
dec
popf
mov
(bad)
call
push
je
scas
and
sub
mov
(bad)
(bad)
jmp
lods
(bad)
dec
arpl
jno
addr16
add
in
mul
adc
mov
jge
mov
loopne
(bad)
(bad)
dec
xor
lock
jne
xor
fadd
pushf
bound
(bad)
cmp
(bad)
(bad)
(bad)
push
and
dec
xlat
stos
pop
cld
cmp
ret
pop
fmul
lods
xchg
fcomp
mov
push
test
in
mov
outs
dec
(bad)
xchg
scas
scas
lds
sar
clc
cmp
(bad)
(bad)
jg
sub
sbb
les
add
daa
test
mov
jmp
dec
loop
mov
(bad)
daa
(bad)
cmps
or
push
jmp
xor
outs
(bad)
(bad)
(bad)
inc
fild
add
xor
fwait
mov
sub
call
pop
imul
movs
adc
jp
std
idiv
jmp
orps
dec
test
iret
cmps
jmp
out
and
(bad)
(bad)
pop
repnz
popa
hlt
imul
loop
push
sub
add
push
pop
lea
loop
loope
inc
dec
and
mov
mov
(bad)
adc
push
jl
mov
cmp
mov
jle
outs
inc
push
add
(bad)
jg
or
sub
jbe
jecxz
jnp
clc
imul
add
jge
mov
ror
fcomip
(bad)
aas
pop
ja
mov
fadd
jb
mov
scas
push
inc
scas
mov
(bad)
(bad)
fild
clc
(bad)
mov
bound
call
arpl
xchg
jno
repz
sbb
(bad)
inc
das
cmps
xor
dec
mov
mov
jne
mov
aad
mov
fucomi
xchg
test
push
and
push
(bad)
mov
(bad)
(bad)
ficomp
or
das
scas
cmp
mov
mov
(bad)
push
xor
sbb
repnz
fiadd
xchg
inc
add
(bad)
(bad)
call
repz
popf
scas
or
movs
lods
mov
push
jmp
(bad)
push
(bad)
scas
test
mov
inc
retf
dec
outs
mov
es
xchg
(bad)
jns
(bad)
(bad)
(bad)
(bad)
div
cmp
pop
outs
and
xchg
popf
lgs
push
cld
dec
imul
icebp
add
es
fmul
sub
jg
cmp
jns
or
sbb
cmc
ja
popf
jp
cmp
mov
ret
(bad)
inc
xor
dec
inc
out
fild
nop
lahf
xchg
add
aas
cmp
mov
call
lods
ror
retf
mov
ret
ret
xchg
mov
xchg
and
pop
ror
cmp
sub
add
mov
cmp
mov
mov
dec
gs
cs
pop
add
or
xor
xchg
jns
add
mov
inc
not
sbb
mov
pusha
or
loopne
add
or
ja
loopne
shl
or
and
das
mov
pop
imul
xor
pop
nop
lahf
idiv
mov
rol
add
fs
or
out
and
sbb
inc
mov
sti
repz
or
or
push
and
inc
adc
sub
shl
repnz
and
mov
mov
dec
pop
or
mov
or
mov
push
mov
dec
sub
and
inc
inc
stos
jo
dec
jge
xor
cmps
repz
or
mov
push
ds
call
(bad)
(bad)
call
loope
jl
push
inc
lock
ins
call
je
sub
mov
pop
icebp
dec
retf
sub
push
adc
mov
cmc
daa
loopne
and
push
test
or
(bad)
(bad)
jmp
pop
mov
sub
xor
bound
test
xor
xor
adc
mov
jnp
or
dec
mov
fwait
jae
out
mov
lods
inc
loopne
fbld
jb
adc
popfw
cmp
into
dec
push
(bad)
or
fwait
aad
push
push
add
xchg
mov
(bad)
and
add
mov
sub
je
and
neg
iret
sbb
sbb
push
jecxz
daa
(bad)
std
mov
test
mov
xchg
jecxz
push
mov
and
jnp
mov
xor
bound
or
add
test
pop
sti
sti
xchg
ret
sbb
add
and
dec
repnz
aam
js
push
and
data16
mov
sbb
add
jl
push
sahf
fcomip
ja
sub
add
loopne
xchg
fs
arpl
in
pop
add
repz
dec
pop
add
pop
inc
shr
enter
or
js
pop
outs
sbb
jno
out
mov
mov
daa
cmps
icebp
or
xchg
sbb
push
or
pop
icebp
adc
ja
ds
std
and
xchg
imul
push
xchg
lods
jg
mul
adc
cmps
sbb
pushf
xor
sbb
adc
(bad)
(bad)
(bad)
call
inc
lahf
sbb
enter
pop
js
adc
(bad)
sub
mov
adc
and
(bad)
call
cld
mov
outs
push
fs
sar
or
mov
cmp
(bad)
(bad)
(bad)
mov
movs
sub
add
ins
loope
scas
jg
movs
adc
int
lock
(bad)
push
call
adc
nop
pop
in
jne
pop
popa
sub
(bad)
xchg
xor
push
dec
jg
inc
mov
(bad)
(bad)
sti
or
dec
mov
pop
sbb
shr
retf
lods
push
and
mov
(bad)
popf
dec
mov
ret
dec
out
mov
add
out
mov
lds
fidiv
(bad)
dec
out
cmp
pop
mov
sbb
mov
mov
inc
(bad)
mov
jno
xchg
das
cld
inc
cld
inc
fdiv
sbb
mov
(bad)
(bad)
(bad)
dec
iret
jns
gs
add
lods
dec
aaa
mov
adc
stc
movntq
test
out
in
cs
aaa
stos
cli
(bad)
(bad)
(bad)
mov
mov
adc
ffree
dec
xchg
jmp
mov
ja
pusha
xlat
(bad)
call
add
cmp
and
jne
out
xchg
fsubr
leave
push
dec
lock
cmp
mov
enter
popf
icebp
(bad)
add
mov
xlat
xor
(bad)
call
or
inc
mov
rol
mov
js
daa
dec
repnz
add
daa
cmp
(bad)
(bad)
(bad)
in
ds
cli
jo
cld
and
push
ss
mov
push
das
stos
pop
or
pop
(bad)
(bad)
(bad)
dec
mul
shl
mov
cmp
gs
sub
jmp
add
(bad)
(bad)
(bad)
jmp
outs
cmc
pop
pcmpeqw
hlt
ret
mov
ins
pop
fdivr
mov
test
(bad)
jmp
jne
lea
dec
jge
sbb
dec
fdivr
cmps
push
mov
(bad)
(bad)
inc
mov
lock
add
dec
imul
jle
pop
pushf
popf
mov
in
shl
(bad)
(bad)
push
cmp
pop
cs
(bad)
inc
mov
mov
mov
outs
dec
jmp
push
jg
(bad)
call
add
lahf
popa
and
xor
enter
cmp
and
push
xor
(bad)
(bad)
(bad)
fadd
xor
cmps
push
jnp
xchg
lock
mov
pusha
push
dec
xlat
outs
or
dec
mov
adc
call
pop
lods
push
cmps
mov
and
(bad)
jg
jg
cmc
shr
(bad)
add
push
cmc
cmp
xor
inc
xlat
scas
xchg
sar
push
fldenv
je
cwde
add
sub
fisttp
jp
and
push
jno
or
cs
pop
(bad)
(bad)
(bad)
push
gs
test
addr16
mov
cmps
test
mov
cmps
xor
(bad)
(bad)
call
repz
sub
add
(bad)
lods
imul
dec
nop
push
adc
inc
leave
retf
out
outs
mov
(bad)
dec
inc
data16
popf
mov
(bad)
fisubr
clc
jecxz
jne
push
std
or
stos
(bad)
aam
mov
outs
into
dec
mov
jnp
adc
xchg
mov
neg
(bad)
inc
push
add
mov
fnsave
jne
and
mov
or
pop
mov
mov
jbe
ja
sbb
push
out
jne
jnp
pushf
cmp
sub
cmp
outs
cmp
mov
mov
ins
dec
sbb
mov
in
cmp
ins
lods
mov
xchg
inc
push
adc
outs
lods
sbb
call
cs
mov
pop
pusha
push
sti
or
jns
xor
adc
pushf
call
push
and
sub
xchg
cli
and
dec
and
ins
(bad)
call
in
aaa
std
mov
jge
xor
sar
or
xor
fidivr
(bad)
jg
dec
test
sahf
adc
inc
mov
int
mov
xchg
lods
or
add
(bad)
mov
ret
rol
add
cmps
mov
fcmovne
in
pop
or
(bad)
(bad)
push
loope
mov
sbb
daa
aaa
cmp
push
jle
add
ss
ds
lock
(bad)
in
push
mov
cld
mov
xchg
inc
in
push
sbb
and
(bad)
jg
movs
push
test
adc
xchg
stos
mov
imul
in
(bad)
lahf
mov
jmp
rcr
push
aam
xchg
lods
repnz
add
pop
mov
adc
push
sahf
fwait
(bad)
(bad)
inc
(bad)
mov
repz
ins
out
jb
test
xchg
pop
xchg
adc
call
mov
cld
mov
xor
mov
mov
lahf
adc
add
sbb
loope
aad
ret
loop
jbe
jle
daa
(bad)
jmp
add
jge
icebp
das
jne
add
jb
dec
ret
(bad)
call
into
(bad)
mov
jb
adc
out
loopne
rcr
sbb
mov
ss
jmp
clc
and
cwde
test
idiv
int
std
addr16
les
shr
add
outs
pop
inc
or
jecxz
fild
sbb
(bad)
(bad)
inc
mov
cli
(bad)
arpl
mov
call
mov
jle
push
(bad)
(bad)
(bad)
jmp
pop
ja
adc
cmp
daa
je
inc
rcl
jmp
cdq
mov
mov
(bad)
shl
dec
jno
(bad)
(bad)
call
dec
push
xchg
mov
scas
call
or
pop
mov
(bad)
(bad)
mov
mov
mov
mov
adc
out
bound
mov
phsubd
lahf
and
fdivr
(bad)
(bad)
jecxz
xchg
jecxz
out
out
(bad)
xor
nop
add
call
xchg
cmp
(bad)
(bad)
mov
mov
arpl
test
(bad)
in
pop
call
fprem1
xchg
jns
movs
inc
xor
(bad)
(bad)
jmp
pop
mov
mov
ret
cmc
mov
test
push
jb
(bad)
jmp
fidivr
test
jo
push
xchg
aas
in
sbb
dec
cmp
ss
mov
jmp
push
jecxz
lahf
adc
sbb
push
xchg
icebp
cwde
adc
(bad)
(bad)
mov
push
jg
push
mov
pop
call
aaa
lahf
(bad)
loopne
fnsave
call
hlt
jl
mov
mov
fisttp
sar
inc
out
imul
xchg
or
or
(bad)
cmp
or
inc
daa
outs
mov
leave
pop
in
adc
pop
call
(bad)
mov
pop
mov
mov
outs
aas
sbb
cdq
pop
mov
or
inc
pop
xor
mov
jmp
mov
and
ins
neg
or
mov
arpl
and
sub
jmp
and
rol
cmps
xchg
cmp
sub
(bad)
(bad)
sti
sub
adc
ss
shl
ret
in
mov
adc
gs
pop
jg
(bad)
(bad)
jp
mov
mov
xchg
jp
sub
int
xchg
jecxz
xchg
jle
add
out
mov
push
out
(bad)
(bad)
(bad)
jmp
push
pusha
adc
retf
or
add
nop
xchg
mov
mov
(bad)
(bad)
call
lods
pop
pop
mov
jmp
push
mov
idiv
mov
sub
push
into
push
dec
lea
(bad)
and
dec
jmp
xchg
sahf
dec
jg
ja
cli
push
and
jbe
ja
push
mov
aas
ret
(bad)
fbstp
sti
push
daa
mov
out
jg
mov
or
in
jl
shr
inc
inc
dec
mov
stos
pop
and
sar
mov
shl
(bad)
(bad)
call
fwait
xchg
mov
jnp
ss
push
lahf
scas
cmp
add
loop
(bad)
(bad)
fbld
shl
pop
lahf
outs
sub
out
rcr
sub
into
sahf
aas
sbb
(bad)
call
and
stos
(bad)
xor
mov
(bad)
sti
cmp
es
inc
imul
mov
sti
push
(bad)
or
pop
scas
mov
arpl
aad
clc
pop
cwde
cmp
arpl
(bad)
ja
sbb
push
xor
fwait
lods
aam
(bad)
(bad)
jg
pop
lock
std
stos
adc
add
retf
loopne
sub
gs
ins
xchg
imul
lods
push
stos
sti
das
xor
xor
rol
(bad)
push
jmp
or
std
sbb
push
mov
mov
adc
inc
int3
inc
bsf
movs
(bad)
std
mov
jbe
push
sub
add
and
(bad)
or
cdq
dec
xchg
push
out
jmp
in
call
push
stos
les
pusha
mov
es
mov
sbb
lahf
jae
rcr
aad
xchg
loop
mov
mov
lea
jns
push
lods
sti
mov
shr
dec
ds
sub
xor
jle
inc
aad
cwde
(bad)
(bad)
(bad)
call
ret
jno
movs
mov
rcl
mov
inc
hlt
mov
aaa
jbe
cmp
sbb
cmps
adc
in
xor
push
pop
pop
(bad)
(bad)
(bad)
(bad)
cmp
and
jns
inc
movs
push
and
push
repz
push
pop
call
mov
out
(bad)
(bad)
(bad)
push
stos
fdivrp
mov
xor
jecxz
pop
cmp
(bad)
(bad)
sub
out
(bad)
jmp
ror
(bad)
loop
aad
mov
mov
out
pop
sbb
ja
push
arpl
jno
ja
(bad)
push
in
fidiv
jmp
jae
mov
dec
cmps
dec
or
add
shl
and
(bad)
out
out
nop
enter
xor
loopne
loope
jmp
jns
jo
into
call
pop
movs
jmp
outs
(bad)
push
jp
(bad)
imul
ror
fadd
rol
mov
xor
call
fistp
gs
mov
pop
arpl
push
(bad)
(bad)
(bad)
inc
pop
rol
jmp
(bad)
dec
movs
aad
jmp
out
cmp
dec
xchg
(bad)
out
mov
cld
(bad)
(bad)
inc
lods
int
xchg
out
jne
add
cdq
pushf
push
xchg
mov
dec
aad
lods
or
adc
(bad)
(bad)
push
sub
lds
es
dec
push
mov
push
add
fcomp
mov
cli
popa
in
inc
push
mov
outs
adc
jg
inc
and
ins
rcl
add
jmp
mov
mov
mov
(bad)
call
mov
ret
lds
dec
jge
jne
aaa
pop
mov
mov
mov
push
xor
call
in
(bad)
(bad)
(bad)
jmp
cwde
cmp
jno
adc
xchg
push
outs
fnsave
shr
xor
and
repz
cld
(bad)
inc
and
(bad)
dec
inc
call
idiv
enter
shr
mov
fisub
push
push
je
imul
jae
(bad)
mov
sbb
jmp
(bad)
jg
nop
test
les
es
adc
cmp
jmp
(bad)
fldenv
pop
mov
add
movs
sub
popa
mov
(bad)
pushf
mov
fcomip
outs
adc
dec
ja
enter
stos
loope
(bad)
(bad)
call
retf
adc
xchg
sti
nop
xchg
push
(bad)
mov
dec
sub
vpsubsb
or
scas
mov
(bad)
(bad)
fiadd
bound
lods
mov
lods
pop
mov
xchg
pushf
call
fwait
test
cmp
xor
cmc
mov
cmps
enter
jmp
or
sbb
stos
(bad)
cmp
pop
and
(bad)
(bad)
(bad)
(bad)
fucom
mov
fild
push
mov
add
into
mov
sub
pop
outs
mov
push
(bad)
(bad)
(bad)
dec
cmp
ret
in
and
call
inc
and
mov
cld
out
mov
push
and
or
mov
sbb
mov
dec
aad
stc
dec
fdivrp
outs
add
sbb
out
inc
inc
mov
call
jle
mov
mov
xchg
stos
pop
mov
std
(bad)
(bad)
jmp
(bad)
xor
xor
pushf
repz
sub
adc
xchg
mov
das
push
mov
cli
inc
out
push
xchg
stos
adc
shl
(bad)
jg
int3
push
je
or
pop
(bad)
jbe
sahf
mov
rcr
or
idiv
call
sub
sub
leave
push
ret
scas
sub
push
jns
sub
nop
sub
(bad)
(bad)
jmp
or
push
mov
in
mov
cs
mov
(bad)
(bad)
call
xlat
mov
mov
mov
aad
(bad)
movs
sub
mov
mov
icebp
mov
mul
jg
sbb
jp
or
sub
mov
das
clc
pop
sub
jmp
scas
mov
mov
loope
adc
test
inc
jnp
inc
pop
arpl
adc
bound
lods
popa
(bad)
call
aas
inc
inc
inc
add
out
out
pop
mov
and
push
or
lock
fdivr
mov
or
jecxz
sub
ss
stos
mov
icebp
lahf
xor
sbb
jg
ds
arpl
jl
adc
sbb
call
call
dec
sti
dec
out
sub
test
cmp
cld
push
cwde
popa
leave
popf
scas
hlt
mov
sar
(bad)
(bad)
dec
dec
es
pushf
cmp
push
inc
das
ins
ss
stos
sbb
call
(bad)
dec
add
mov
add
in
mov
pop
ds
xchg
(bad)
mov
(bad)
inc
adc
fstp
or
push
pop
popf
xchg
xchg
imul
adc
ror
add
jle
mov
(bad)
(bad)
(bad)
call
loope
xchg
fwait
cwde
mov
pop
xor
into
in
mov
inc
repz
cmp
loopne
(bad)
dec
mov
gs
fwait
sti
pusha
fist
xor
ss
mov
sub
push
push
stos
icebp
fst
int
fadd
mov
ret
(bad)
(bad)
(bad)
ficom
dec
push
lods
inc
mov
mov
retf
hlt
aam
sub
fmul
cmp
dec
dec
sbb
std
cmp
in
adc
mov
adc
dec
std
(bad)
std
push
lea
mov
stos
lea
mov
rol
(bad)
(bad)
jmp
xor
jo
test
cmp
adc
lods
adc
(bad)
(bad)
(bad)
jg
stos
ja
mov
inc
les
int3
push
inc
add
hlt
adc
(bad)
(bad)
call
push
pop
mov
(bad)
test
mov
inc
inc
lock
fcomp
ror
push
pop
call
cmps
sbb
jbe
stc
(bad)
(bad)
jmp
hlt
dec
and
xchg
sbb
adc
ins
push
(bad)
out
fdivr
test
leave
(bad)
jg
enter
div
ins
shr
imul
mov
int3
push
or
fs
es
xor
mov
(bad)
popf
clc
jns
in
gs
pop
dec
clc
(bad)
in
xchg
mov
popf
jmp
aas
(bad)
mov
cmp
mov
pop
push
lds
inc
cmp
(bad)
(bad)
call
jecxz
cmps
xchg
pop
xor
test
sbb
jbe
push
xchg
xchg
add
icebp
(bad)
(bad)
inc
rol
inc
dec
push
pushf
stos
std
inc
in
xchg
fxch
and
xor
(bad)
mov
call
pop
pop
jbe
sub
test
xor
mov
pop
(bad)
pop
(bad)
jmp
pop
jg
lea
fstp
shl
xchg
iret
(bad)
stos
pop
jecxz
(bad)
mov
pop
push
add
js
jnp
lods
in
jb
jnp
cs
adc
and
call
sbb
loope
jl
shl
icebp
fdiv
sbb
clc
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
xchg
int
pop
mov
pop
sar
daa
mov
add
stc
test
push
fbld
sar
loope
sahf
outs
out
outs
jo
mov
push
inc
cs
loop
ja
pusha
int3
(bad)
(bad)
(bad)
stc
push
test
aam
xchg
jl
(bad)
(bad)
(bad)
jg
(bad)
(bad)
mov
pop
cmp
inc
jl
mov
inc
test
dec
dec
std
mov
pop
(bad)
(bad)
(bad)
cli
inc
inc
sub
shr
pop
lock
add
pop
or
push
cli
(bad)
jg
(bad)
jb
mov
aad
pop
mov
mov
mov
mov
xchg
xor
(bad)
lods
dec
pushf
lahf
sbb
adc
loopne
call
xchg
jb
aad
add
mov
ds
sub
inc
sar
pop
pop
push
mov
repz
int3
jmp
jo
idiv
adc
int3
fs
es
test
daa
mov
jg
jns
js
std
sbb
div
ss
fbstp
ret
push
jbe
mov
add
mov
add
inc
movs
sbb
sbb
movs
jnp
loop
sti
in
mov
aaa
cmps
(bad)
and
idiv
js
cmps
cdq
xlat
mov
jae
pop
not
cld
(bad)
aas
dec
inc
sbb
rol
mov
aad
ins
sbb
jle
mov
mov
inc
clc
mov
pop
mov
sub
(bad)
(bad)
push
mov
ins
jl
dec
mov
sti
sbb
inc
sub
(bad)
neg
std
js
in
js
clc
inc
mov
mov
mov
(bad)
jmp
sub
jle
imul
mov
add
adc
ret
(bad)
inc
dec
test
mov
(bad)
arpl
jg
mov
pop
movs
fimul
retf
outs
or
dec
jmp
(bad)
es
call
add
cmp
sar
cmc
shr
jg
fcomip
add
sbb
cld
pminub
(bad)
(bad)
(bad)
dec
pop
xchg
sahf
rol
fld
and
xchg
xchg
scas
shl
jmp
push
int
pop
xchg
jne
addr16
pop
jge
mov
mov
es
mov
mov
call
xor
adc
inc
and
stos
mov
push
cs
jl
(bad)
inc
pop
idiv
popa
int
xchg
sti
pop
mov
mov
leave
ds
(bad)
push
xor
or
mov
xchg
mov
js
pop
popf
retf
adc
fwait
and
stc
dec
cld
(bad)
call
mov
mov
xor
jns
xlat
ds
add
dec
rcr
mov
pop
pop
mov
inc
dec
pushf
xchg
cmp
or
cli
call
mov
repnz
int
inc
mov
je
push
sbb
push
jecxz
mov
and
adc
xlat
sbb
scas
lock
jle
push
(bad)
std
out
jb
fdiv
jns
popa
dec
sbb
test
inc
not
cwde
add
(bad)
xlat
xchg
std
(bad)
(bad)
jg
jno
jp
jnp
cdq
xor
in
mov
jo
repnz
add
or
xchg
loopne
mov
push
mov
imul
(bad)
iret
inc
jecxz
(bad)
(bad)
jg
add
push
cld
cwde
fild
add
lods
or
lahf
lock
lods
fidivr
lea
sbb
popa
cld
sbb
sbb
sbb
pushf
mov
(bad)
inc
jg
sbb
out
rcl
push
mov
(bad)
retf
fisubr
dec
pushf
mov
jae
iret
pop
(bad)
(bad)
push
jbe
call
das
mov
je
inc
nop
add
mov
(bad)
repz
mov
xchg
fisub
aas
rdmsr
cmp
jge
add
mov
outs
(bad)
sub
jae
retf
loopne
inc
lea
sbb
sbb
sub
mov
push
lds
pop
or
mov
mov
std
lock
imul
jno
in
or
int3
out
jmp
(bad)
(bad)
(bad)
jmp
shl
loope
jno
mov
add
out
or
dec
(bad)
rcl
ds
aaa
int
dec
push
(bad)
(bad)
jg
adc
and
sub
add
call
sbb
sbb
dec
or
jp
pop
jb
adc
push
test
std
(bad)
jns
push
adc
addr16
push
test
or
int
xor
leave
cld
(bad)
(bad)
(bad)
cld
(bad)
pop
push
push
shr
js
xor
pop
stc
iret
push
call
loope
inc
sub
call
aam
out
loopne
pop
or
pushw
arpl
out
and
loopne
ja
push
mov
js
(bad)
(bad)
(bad)
(bad)
mov
or
xor
stos
lock
scas
mov
fdivr
fisttp
(bad)
(bad)
jp
mov
or
push
movs
or
pop
mov
dec
dec
mov
mov
neg
int3
sub
mov
adc
add
ss
jmp
(bad)
fucomp
arpl
and
(bad)
in
mov
fistp
jge
jb
inc
xchg
scas
fild
scas
inc
fstp
adc
push
(bad)
(bad)
(bad)
dec
pop
add
jne
dec
lahf
cmp
cmps
retf
jg
lock
push
push
aad
xchg
jmp
test
mul
lock
jge
outs
out
clc
(bad)
mov
and
out
(bad)
mov
lods
lea
out
int3
ret
or
mov
or
add
sar
push
mov
(bad)
push
cwde
jecxz
popa
(bad)
sar
sub
sbb
pop
dec
xor
pop
push
and
xchg
adc
jg
jmp
sbb
jbe
sbb
outs
fiadd
mov
nop
scas
sbb
loop
or
(bad)
(bad)
cld
stos
daa
adc
scas
fistp
(bad)
jmp
rcl
or
(bad)
(bad)
(bad)
jg
push
cmp
stc
(bad)
mov
fdivr
sbb
fld
lock
xor
arpl
clc
(bad)
hlt
jg
lock
cld
adc
fistp
iret
movs
or
jl
cs
jg
lock
xor
push
mov
jb
rcr
mov
(bad)
inc
sar
(bad)
sbb
test
jmp
push
(bad)
js
add
push
daa
push
aad
leave
(bad)
jmp
fisubr
pop
sahf
jg
out
sbb
dec
cmc
aas
(bad)
(bad)
dec
jecxz
xchg
mov
adc
sub
sbb
dec
out
iret
jle
cmp
(bad)
push
inc
in
out
imul
fadd
dec
mov
sar
out
aad
out
cmp
sbb
mov
fidivr
and
idiv
(bad)
(bad)
push
dec
cmc
jle
push
mov
ror
pop
inc
push
xchg
sti
mov
and
stos
cmps
(bad)
aas
xchg
pusha
les
push
pop
xchg
(bad)
sub
add
jecxz
mov
(bad)
(bad)
jmp
jge
(bad)
fistp
xchg
js
stc
push
pop
mov
ja
fidivr
sahf
sbb
(bad)
(bad)
(bad)
fild
push
ss
xor
mov
nop
push
mov
jle
cli
ret
std
pop
mov
(bad)
(bad)
cmp
outs
mov
mov
icebp
mov
mov
addr16
add
push
and
inc
push
or
sub
stc
mov
(bad)
(bad)
jg
xchg
dec
xor
clc
clc
stos
aas
jo
mov
mov
call
xor
icebp
test
std
imul
add
inc
fild
ja
sbb
sbb
cld
adc
cli
cmp
push
js
dec
adc
and
jnp
inc
retf
outs
fdivr
dec
xor
cmp
xor
cvtps2pd
xchg
cmp
aad
fdiv
ss
cli
test
mov
es
xor
out
and
jbe
(bad)
call
inc
push
inc
cwde
mov
in
add
pop
mov
loop
adc
inc
xchg
out
(bad)
mov
scas
arpl
cmp
addr16
push
ds
(bad)
mov
hlt
popa
pop
and
fisttp
cmps
(bad)
pop
cmps
xchg
cmp
arpl
fild
mov
scas
pop
movs
mov
add
xor
(bad)
(bad)
call
dec
jg
and
rcl
pop
inc
jp
int
cmps
xor
jno
pop
mov
out
clc
add
xor
mov
(bad)
push
mov
lods
ss
ins
cld
popa
das
xor
mov
fistp
(bad)
mov
mov
nop
jmp
sub
mov
into
test
xor
jae
mov
inc
inc
fwait
xchg
(bad)
(bad)
jmp
and
hlt
adc
(bad)
out
sub
cld
sub
scas
sti
push
xchg
aam
(bad)
jmp
adc
adc
cmp
add
scas
ror
popf
inc
shl
inc
(bad)
(bad)
(bad)
push
js
xor
repnz
int3
pop
cmp
outs
mov
mov
adc
test
std
(bad)
(bad)
(bad)
std
push
jl
lds
push
fsub
pop
lea
add
mul
std
mov
inc
and
cmp
(bad)
jmp
cmp
jg
pop
inc
push
fist
or
pmulhuw
leave
jne
adc
pusha
jmp
mov
xor
or
scas
xchg
and
pop
aaa
mov
push
mov
jmp
push
xchg
std
shr
fstp
fwait
jle
add
xchg
(bad)
pop
(bad)
(bad)
mov
ficom
or
fist
adc
mov
pop
xchg
sbb
mov
(bad)
cmp
int3
sbb
sbb
adc
xor
or
jo
sub
dec
dec
es
(bad)
jmp
inc
xchg
pop
sub
mov
lods
sbb
ja
out
lods
ret
adc
in
adc
sbb
das
or
dec
push
xchg
clc
lds
sar
in
inc
cmp
stc
call
pop
cld
jmp
fmul
mov
and
sub
inc
je
adc
pop
loope
aas
outs
sbb
fimul
cld
inc
test
add
(bad)
push
clc
out
mov
jp
fcos
out
add
jge
dec
not
fs
fstp
jae
cmps
fimul
(bad)
(bad)
(bad)
fisttp
jp
gs
xor
dec
dec
cmps
mov
dec
push
mov
in
xor
and
mov
call
ds
test
push
inc
xchg
rcl
or
(bad)
(bad)
(bad)
call
add
ret
mov
in
push
int3
ins
aas
push
iret
hlt
dec
(bad)
pop
mov
test
mov
(bad)
(bad)
(bad)
(bad)
js
leave
retf
xlat
icebp
int
mov
mov
mov
cmp
call
(bad)
pusha
mul
(bad)
inc
mov
push
jbe
mov
and
cdq
adc
pop
clc
cmp
cmp
and
xor
cmp
cmp
mov
inc
ret
mov
sahf
push
mov
(bad)
pop
adc
mov
nop
push
cld
or
mov
out
les
sbb
adc
xor
scas
mov
jmp
pop
ret
dec
xchg
data16
cmp
idiv
(bad)
(bad)
jmp
or
mov
dec
(bad)
mov
xchg
or
int3
cmp
movs
add
mov
je
jg
ror
cwde
push
sub
adc
(bad)
call
or
pop
adc
dec
add
mov
ret
(bad)
xor
jg
inc
or
(bad)
std
(bad)
(bad)
mov
shr
fstp
lods
xchg
std
xor
xchg
sbb
jle
mov
xor
jnp
(bad)
out
push
push
xchg
enter
and
sbb
js
or
inc
rcr
jns
loop
jne
mov
psllq
ret
js
(bad)
(bad)
jmp
pop
cmp
or
das
cmp
call
xor
push
sti
inc
and
fisub
mov
sti
dec
jo
and
ds
icebp
mov
div
cwde
pop
inc
cmp
rcr
ja
loop
or
movs
cmp
cmp
repz
(bad)
(bad)
out
push
sub
pop
jge
in
xor
in
add
and
cmps
cmp
je
std
mov
dec
stos
jmp
and
call
dec
or
cwde
sahf
cmp
cld
repnz
cld
xchg
push
jecxz
push
and
(bad)
mov
(bad)
inc
(bad)
fwait
pop
xchg
inc
in
sbb
sub
xor
add
cmp
and
cmp
ds
call
imul
cmp
pop
or
mov
data16
pushf
(bad)
(bad)
(bad)
fistp
mov
test
stos
push
(bad)
pop
mov
aas
daa
mov
jl
jecxz
(bad)
(bad)
(bad)
call
pop
jnp
cmovnp
adc
push
daa
(bad)
jae
test
lock
jmp
push
cli
mov
rcr
or
inc
mov
xor
jmp
mov
xor
cmc
inc
mov
mov
sub
cld
(bad)
(bad)
call
xchg
lods
inc
mov
adc
cmc
cld
xchg
aas
dec
sbb
xchg
mov
(bad)
(bad)
inc
movs
sbb
inc
jecxz
test
pusha
je
push
push
pop
xchg
cmp
cld
dec
cld
arpl
int
cmp
imul
or
cld
(bad)
jmp
inc
push
(bad)
mov
lods
loope
cmp
xor
(bad)
stos
cmp
pop
mov
sbb
or
and
cmp
loopne
xor
jmp
ja
pop
xchg
mov
jg
mov
jle
mov
jmp
call
(bad)
and
fisttp
scas
cmc
lods
sbb
gs
jp
add
cmc
aaa
cmp
push
add
int
outs
(bad)
fild
(bad)
(bad)
(bad)
dec
test
clc
jge
jmp
in
mov
fstp
(bad)
(bad)
(bad)
inc
js
add
fstp
in
mul
inc
arpl
js
add
(bad)
(bad)
call
shr
mov
push
sub
or
bound
adc
popa
call
std
jmp
jecxz
xor
or
push
dec
pop
jl
lods
lods
xchg
cmp
inc
imul
(bad)
push
add
popa
jp
(bad)
out
cmps
popf
mov
(bad)
(bad)
data16
(bad)
jbe
dec
sub
jl
sbb
mov
jmp
aas
movs
sbb
and
pop
mov
test
mov
outs
cmp
add
pop
mov
dec
xor
dec
je
push
and
mov
jne
sbb
ja
add
adc
jbe
sbb
mul
sar
sub
sahf
jmp
js
repnz
call
jecxz
dec
dec
jmp
xor
je
cmps
mov
fistp
push
(bad)
mov
cld
dec
cli
aaa
aam
xchg
mov
nop
(bad)
jg
push
inc
mov
mov
retf
mov
pop
(bad)
jg
stos
(bad)
movs
test
js
push
inc
and
(bad)
inc
and
daa
movs
xor
lds
and
lock
push
mov
cmp
adc
dec
cwde
mov
fs
mov
dec
stos
cs
dec
mov
push
test
les
pop
movs
(bad)
and
fcomip
loopne
or
sahf
cdq
cmp
retf
shl
out
(bad)
call
(bad)
pop
cmp
mov
cwde
test
mov
jmp
push
push
mov
add
jle
add
cmp
jnp
dec
loopne
movs
mov
lds
call
hlt
(bad)
(bad)
(bad)
jp
aaa
outs
mov
out
xchg
pusha
addr16
or
adc
cmp
fnstenv
or
sahf
inc
jmp
call
jmp
es
cli
adc
cmp
add
cmp
(bad)
call
sub
sbb
fimul
test
mov
pop
inc
xchg
neg
push
add
pop
mov
jl
cmp
stos
in
sahf
lahf
repnz
(bad)
(bad)
call
add
je
hlt
cmp
mov
loope
lods
mov
gs
int
nop
dec
movs
lea
jmp
shl
xchg
add
fidiv
test
and
pusha
mov
fs
cmp
cmp
(bad)
(bad)
(bad)
out
push
repz
mov
addr16
cmc
jg
push
lea
push
sbb
adc
or
(bad)
(bad)
jg
aad
lock
sbb
das
adc
and
sbb
adc
sub
gs
inc
js
add
jnp
(bad)
jmp
(bad)
cmps
and
inc
push
xor
(bad)
(bad)
mov
mov
xor
int
mov
int
sbb
out
aas
retf
aas
pop
mov
sbb
dec
(bad)
xor
mov
in
ret
push
mov
aam
in
(bad)
dec
cdq
push
jecxz
pop
pop
cld
jecxz
ret
(bad)
arpl
(bad)
loopne
in
pop
(bad)
(bad)
(bad)
inc
clc
inc
gs
inc
es
mov
sahf
pop
cmovno
add
dec
jmp
(bad)
sti
(bad)
jg
sbb
xchg
jmp
into
into
pop
and
in
sub
repz
mov
sbb
(bad)
(bad)
(bad)
push
xor
out
aaa
out
ret
lock
pop
imul
and
fprem1
mov
loope
(bad)
fs
inc
cmp
shr
dec
dec
frstor
int
mov
das
mov
xor
inc
(bad)
rcr
dec
mov
das
rcl
inc
mov
pop
cmps
test
call
cmps
inc
and
xor
mov
call
push
mov
push
out
mov
xchg
push
mov
std
daa
add
sub
ret
inc
repnz
pop
and
in
clc
outs
loope
xchg
mov
cmp
jo
mov
xchg
test
mov
xchg
in
(bad)
cs
addr16
sbb
jecxz
xchg
jg
jge
push
or
enter
xlat
ficom
adc
adc
pop
add
jle
xchg
cwde
add
push
mov
into
ret
lea
pop
clc
stos
or
div
popa
loop
loopne
add
xor
std
and
and
and
dec
icebp
push
mov
xor
clc
std
fdiv
add
es
inc
xor
and
fst
cmp
adc
or
stos
push
push
xor
cmp
sbb
or
(bad)
adc
jns
pop
push
adc
lods
pop
imul
lds
pusha
adc
jnp
pop
loop
xchg
sbb
rol
sbb
cmc
adc
add
std
(bad)
fcomp
aam
das
pop
adc
enter
add
shl
adc
aaa
inc
xor
aaa
inc
and
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
cmp
xor
cdq
sub
(bad)
mov
xchg
add
mov
(bad)
mov
or
aad
iret
fs
lea
out
retf
mov
jo
cs
(bad)
(bad)
(bad)
call
pop
ins
inc
fistp
aad
lods
jge
xchg
mov
sti
(bad)
lods
mov
jg
pop
jmp
stos
mov
dec
adc
(bad)
(bad)
inc
sub
test
dec
dec
and
test
cdq
addr16
fs
in
dec
jle
(bad)
(bad)
(bad)
dec
out
out
popf
jnp
into
popf
outs
out
outs
into
repz
jae
pop
cli
ret
mov
ins
stos
mov
ret
or
or
sub
mov
loop
push
inc
and
and
add
(bad)
inc
scas
mov
pop
lahf
inc
jns
scas
retf
in
and
(bad)
mov
push
seta
mov
jmp
mov
mov
xor
outs
jnp
mov
(bad)
(bad)
dec
jge
pop
or
sti
add
cli
jmp
test
adc
or
call
shl
add
pop
adc
call
mov
repz
xchg
(bad)
cmp
cs
jmp
xor
and
inc
shr
movs
jo
clc
fistp
pusha
or
mov
sub
(bad)
inc
loop
mov
xchg
mov
cs
shl
stc
(bad)
push
sub
jp
(bad)
(bad)
(bad)
cmp
lds
das
in
inc
mov
adc
clc
xor
fadd
(bad)
jmp
int
sbb
inc
sbb
test
jg
push
fisub
dec
sbb
and
(bad)
(bad)
jg
mov
fisttp
or
call
loopne
mov
adc
dec
xchg
sub
inc
pop
mov
jmp
call
lea
pop
cmps
rol
shl
or
inc
and
push
(bad)
call
ficomp
sbb
cmp
in
mov
jno
enter
aad
fistp
jno
lods
into
dec
cmp
push
je
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
cmps
sbb
rcl
and
(bad)
movs
mov
dec
or
mov
jmp
add
ja
push
xchg
lods
sar
(bad)
(bad)
push
in
inc
pop
ss
pop
loopne
wbinvd
jnp
std
les
mov
mov
(bad)
(bad)
dec
ss
fsubp
xor
rcl
and
cwde
mov
pop
inc
xchg
dec
mov
mov
sbb
ds
xchg
inc
cli
aad
pop
or
call
push
fild
outs
and
int3
mov
xchg
retf
ins
popa
jmp
loop
int
inc
(bad)
ror
outs
pop
mov
lods
and
cmp
lods
and
sub
add
xchg
inc
xor
scas
test
inc
std
inc
jmp
mov
ror
mov
push
jl
(bad)
or
push
(bad)
nop
push
adc
xchg
mov
mov
cwde
sbb
call
mov
ds
or
mov
xchg
into
dec
and
xchg
jg
ss
rcr
xor
call
jo
test
sub
sbb
jmp
(bad)
(bad)
in
call
mov
mov
cmp
mov
sti
jae
fild
mov
jl
mov
jl
imul
sub
and
mov
cmp
in
cdq
dec
dec
fisttp
pop
mov
inc
add
test
dec
popf
data16
and
inc
and
cdq
mov
or
inc
mov
adc
inc
xchg
pop
ret
fst
jecxz
and
push
(bad)
push
inc
cmp
(bad)
jle
dec
(bad)
(bad)
push
adc
xchg
mov
and
(bad)
(bad)
(bad)
mov
mov
inc
in
jp
jo
enter
adc
or
pop
js
loopne
inc
and
fcom
mov
js
scas
cmp
ret
push
dec
(bad)
lock
out
aas
into
cdq
sar
(bad)
mov
push
cld
add
push
cmp
das
les
mov
(bad)
jg
ja
pop
xor
shr
xor
pop
mov
adc
mov
(bad)
fild
pop
adc
rcr
in
mov
popa
fnstcw
(bad)
sbb
aam
test
test
aam
lods
xor
scas
add
jno
or
test
or
add
and
ret
inc
inc
dec
adc
xor
dec
pop
pop
mov
xor
jno
(bad)
(bad)
push
ror
cmp
xor
mov
jmp
(bad)
jmp
out
cmps
test
mul
jecxz
clc
repnz
xlat
xchg
aad
in
fisubr
and
mov
push
fldenv
and
mov
test
cmps
movs
mov
(bad)
call
cld
push
mov
push
retf
shl
outs
sub
int
(bad)
or
pop
adc
rcr
sbb
cmp
cmp
(bad)
dec
mov
pop
fnsave
push
std
js
sub
mov
add
mov
cmp
hlt
mov
or
inc
sti
retf
mov
repz
imul
cmc
fistp
scas
dec
xchg
add
(bad)
(bad)
inc
xchg
scas
cdq
fdiv
inc
imul
xchg
xchg
aam
push
xchg
jbe
rcr
ss
(bad)
jmp
test
dec
cmp
aas
aaa
lock
jmp
pop
hlt
fcomp
leave
mov
mov
in
xor
inc
loopne
cmp
(bad)
(bad)
inc
arpl
retf
dec
(bad)
fist
xchg
lds
xor
ret
add
(bad)
icebp
cmc
in
(bad)
cmp
(bad)
fisttp
push
movs
setbe
bound
jmp
jge
jnp
mov
(bad)
jg
dec
cs
mov
mov
mov
cli
fldenv
dec
pop
imul
cmp
inc
pop
push
xchg
jmp
inc
leave
cmp
add
cmps
mov
sub
fldcw
cld
(bad)
jmp
dec
cld
xchg
sub
jns
cs
fmulp
(bad)
(bad)
jg
data16
pop
or
dec
in
mov
mov
sbb
hlt
cmp
(bad)
fcomip
(bad)
jge
cmp
loope
inc
jmp
and
pusha
psubsb
scas
(bad)
in
(bad)
jmp
test
ficomp
cmps
(bad)
dec
mov
or
out
push
xchg
sub
xchg
shl
lock
jnp
movs
cmp
sub
sbb
adc
pop
cmc
aaa
cld
mov
das
arpl
xchg
cs
out
nop
cdq
sbb
jb
sahf
add
ret
das
clc
and
into
push
stos
stc
rol
cmp
(bad)
inc
loopne
mov
test
(bad)
(bad)
mov
xchg
sbb
cli
sar
dec
mov
mov
popf
cdq
inc
push
loope
repz
fistp
fisubr
cmp
add
mov
ins
dec
add
pop
jg
(bad)
(bad)
inc
addr16
push
lea
add
jno
xor
rcr
test
(bad)
jmp
in
fnstcw
movs
add
sbb
fidivr
imul
mov
inc
cmps
rol
cmp
push
xor
pop
loopne
mov
in
mov
imul
cmps
clc
test
pop
cdq
sub
cld
dec
add
(bad)
sbb
repnz
and
jae
or
fdivr
call
retf
cmp
sahf
jmp
or
push
xchg
ret
add
sbb
mov
inc
mov
jbe
push
loopne
aas
addr16
(bad)
(bad)
call
sub
inc
popf
xor
(bad)
repnz
dec
(bad)
push
jmp
lahf
aaa
(bad)
ss
push
add
popf
xchg
ror
jo
clc
or
(bad)
(bad)
mov
inc
pop
(bad)
(bad)
mov
sahf
js
mov
mov
fs
mov
test
(bad)
(bad)
(bad)
inc
add
sbb
pop
and
outs
or
and
push
xchg
out
sar
ss
cmp
(bad)
(bad)
(bad)
(bad)
test
gs
iret
jg
arpl
xchg
cld
or
and
int3
add
or
add
push
fistp
out
cmps
pop
enter
cld
(bad)
(bad)
inc
jp
sbb
and
inc
add
jo
cmp
pop
mov
jno
(bad)
inc
adc
push
test
pop
aad
xlat
out
fcomp
fst
leave
lods
adc
(bad)
(bad)
(bad)
std
ja
stos
mov
sub
clc
xchg
inc
shl
mov
pop
jle
test
mov
pop
aam
pushf
mov
mov
pop
imul
test
pop
xchg
sbb
push
aaa
stc
jl
cmp
fistp
pop
ja
jb
(bad)
(bad)
dec
sub
cwde
cmp
fcmovbe
ss
inc
mov
cwde
lahf
(bad)
ins
sub
in
je
mov
(bad)
jmp
sub
inc
loopne
les
inc
shl
or
push
mov
push
lods
out
(bad)
fst
std
out
xor
or
mov
mov
(bad)
xor
xor
and
fcom
sbb
jno
movs
js
loop
mov
shl
(bad)
call
cld
aad
stos
div
int3
and
outs
dec
sub
push
ja
dec
ret
cs
add
das
xor
jne
add
mov
ss
jmp
pop
and
mov
push
mov
lds
jae
pop
pushf
aas
daa
icebp
xor
test
or
(bad)
(bad)
call
and
aaa
xchg
int
or
fs
xchg
sbb
dec
or
imul
out
xchg
lea
mov
out
pop
in
xchg
ficom
dec
mov
outs
dec
jmp
jae
push
jmp
popa
stos
xor
sbb
(bad)
(bad)
dec
call
out
retf
pop
test
xchg
sbb
or
icebp
dec
mov
repnz
adc
sti
dec
jmp
push
cs
pop
or
jo
mov
das
jmp
jo
(bad)
inc
es
inc
out
lock
mov
repz
push
add
(bad)
(bad)
jmp
jmp
mov
icebp
bound
popf
cmp
stos
inc
in
inc
inc
rcl
xor
out
(bad)
(bad)
jmp
cmp
dec
xlat
out
leave
fsub
jo
mov
sub
xor
(bad)
jmp
mov
(bad)
dec
cmc
push
or
mov
inc
loopne
xchg
fwait
mov
adc
arpl
sbb
loopne
pop
fdivr
adc
jmp
(bad)
(bad)
(bad)
inc
icebp
js
fisttp
xchg
fadd
in
outs
(bad)
cmps
scas
dec
idiv
xor
fistp
mov
xor
leave
fucomip
pop
aaa
scas
jecxz
adc
pop
mov
add
mov
mov
mov
loop
cmp
movs
int
(bad)
jmp
sbb
mov
jl
int3
aam
xchg
mov
mov
repz
(bad)
(bad)
(bad)
js
sub
xchg
pop
mov
push
xchg
std
fxch
bound
repnz
jno
aas
bound
xor
push
jo
push
lar
add
(bad)
(bad)
call
or
ins
loope
sub
xor
lods
xchg
lahf
test
stos
adc
add
cmp
pop
icebp
mov
ret
stc
ins
test
movs
push
fwait
pop
mov
(bad)
cli
repnz
fsubrp
(bad)
(bad)
(bad)
js
outs
cdq
dec
jne
mov
outs
into
aam
stos
push
dec
pop
loopne
leave
mov
jne
push
xchg
test
pop
inc
add
scas
fcmovne
push
std
aaa
jl
sub
rol
xchg
popf
jmp
mov
jae
rol
sbb
(bad)
test
scas
ins
inc
or
(bad)
inc
neg
call
ss
jl
test
jl
push
jmp
mul
div
pop
pop
rol
shl
shl
leave
mov
dec
lods
and
leave
or
add
mov
pop
mov
adc
jmp
or
add
jecxz
repz
push
(bad)
(bad)
(bad)
(bad)
stc
mov
mov
mov
in
sbb
inc
cdq
icebp
push
lea
je
xchg
ret
test
ror
outs
clc
inc
mov
mov
int3
loopne
js
imul
lods
(bad)
(bad)
dec
js
iret
outs
scas
mov
cld
repz
dec
imul
dec
popf
cmp
loope
(bad)
sti
scas
dec
mov
mov
dec
sbb
ins
jecxz
dec
mov
pop
adc
and
sahf
sub
mov
mov
inc
fiadd
and
mov
mov
jmp
sbb
pop
lods
adc
or
push
jmp
lahf
adc
(bad)
call
outs
mov
inc
dec
cmp
out
mov
add
loop
lds
sbb
pop
mov
jmp
repz
add
stos
pop
aad
mov
(bad)
mov
mov
push
mov
cli
(bad)
dec
clc
push
jne
dec
ja
ja
inc
mov
scas
inc
and
aaa
std
call
aas
jnp
(bad)
cs
lods
repnz
ds
and
jb
jmp
retf
cmp
test
enter
fild
je
stos
fcmovne
dec
and
pop
cld
(bad)
fdivr
gs
outs
inc
jp
mov
jecxz
push
pop
add
and
(bad)
(bad)
(bad)
mov
pop
xchg
mov
retf
jge
fiadd
mov
add
fwait
das
inc
sub
(bad)
(bad)
out
enter
aam
dec
(bad)
fcom
push
mov
ja
in
sti
mov
scas
lds
jle
mov
cli
dec
fdivr
push
xchg
cli
sahf
fdivrp
jmp
clc
in
mov
mov
imul
imul
push
dec
jp
cs
(bad)
(bad)
(bad)
dec
adc
xchg
pop
fidivr
push
or
adc
stos
mov
cmp
lahf
les
(bad)
jmp
push
rcl
pop
xor
jecxz
std
and
ret
add
aam
idiv
jmp
mov
outs
sub
dec
xor
cmp
ins
add
or
(bad)
(bad)
(bad)
mov
shl
mov
sub
or
xchg
mov
fcomp
outs
popa
xchg
loopne
pop
adc
(bad)
(bad)
jmp
jbe
ins
pop
out
sub
in
stos
faddp
lahf
mov
push
inc
jmp
mov
sbb
ret
mov
fidivr
pop
mov
pop
sahf
xchg
push
push
je
pxor
(bad)
(bad)
(bad)
out
mov
ret
or
sti
mov
push
adc
test
gs
outs
hlt
push
loopne
(bad)
(bad)
push
jbe
xchg
fistp
push
stc
mov
xlat
jo
(bad)
cld
mov
add
jmp
loopne
jbe
jo
test
or
xchg
push
sub
adc
scas
clc
dec
add
xlat
call
mov
(bad)
cld
push
or
in
jmp
sub
or
(bad)
icebp
(bad)
(bad)
cli
test
jb
out
xchg
or
jle
sub
jle
(bad)
clc
mov
jmp
push
push
jno
and
pop
lock
loopne
or
into
dec
in
pop
mov
jecxz
mov
jmp
loope
push
pop
std
jns
(bad)
div
in
adc
cmp
mov
ret
out
lea
bnd
jg
stos
pop
mov
inc
sti
cmp
faddp
(bad)
and
pop
push
stos
ds
jmp
pop
inc
fwait
or
cs
scas
stos
adc
shl
xchg
test
cmc
mov
dec
jle
inc
sub
mov
mov
test
imul
jb
jecxz
(bad)
(bad)
(bad)
icebp
cmp
ja
pop
mov
ret
mov
and
mov
mov
call
fild
popa
jns
and
inc
or
jecxz
pop
xchg
mov
(bad)
jmp
mov
leave
loop
inc
fsubr
fwait
sbb
popf
xor
cmp
int
(bad)
(bad)
(bad)
cmp
scas
outs
xchg
xor
hlt
push
loopne
push
push
dec
aaa
icebp
fld
mov
(bad)
(bad)
mov
sbb
cmp
cli
xchg
inc
(bad)
mul
cmc
sahf
or
ds
dec
xor
jmp
jns
cmp
push
and
(bad)
loope
imul
loop
fstp
aad
aas
sub
in
cmp
dec
mov
nop
sub
aaa
or
cmp
shl
jl
push
xor
mov
(bad)
dec
sbb
mov
xchg
ficomp
fisttp
pushf
pop
mov
cwde
xor
xlat
rcl
dec
aaa
jmp
mov
push
mov
int
(bad)
cli
xchg
mov
add
int
add
into
dec
aaa
bnd
dec
sar
test
(bad)
push
jmp
jge
adc
jge
in
outs
cmp
repz
dec
(bad)
mov
mov
jg
inc
sbb
mov
jne
jle
mov
jo
repz
jnp
rcl
mov
fistp
push
add
cld
mov
dec
cmp
hlt
iret
scas
sub
(bad)
(bad)
(bad)
(bad)
fisttp
das
ins
mov
lahf
lock
les
push
(bad)
stos
jl
out
or
iret
(bad)
(bad)
mov
sar
pop
imul
pop
sbb
movs
addr16
out
sub
in
inc
(bad)
(bad)
fcomip
ja
dec
cli
enter
sbb
popa
test
and
dec
out
(bad)
(bad)
(bad)
clc
push
bound
add
movs
je
sbb
in
add
hlt
xlat
das
sub
sar
sbb
(bad)
js
addr16
mov
adc
inc
cmp
xchg
inc
std
jl
dec
adc
popf
inc
dec
fbstp
mov
sub
shl
sbb
jo
(bad)
dec
and
and
std
sar
and
je
stc
ins
sar
(bad)
(bad)
(bad)
cli
mov
rcr
cmps
sub
fld
mov
movs
stos
mov
jmp
outs
je
(bad)
inc
ja
xchg
sub
add
inc
pop
in
push
sti
mov
cmp
jg
adc
sbb
cld
call
(bad)
out
clc
mov
mov
mov
push
add
dec
mov
cs
inc
xchg
push
or
add
(bad)
lock
loopne
pop
int
(bad)
(bad)
fistp
aam
dec
push
int
cmp
fadd
test
jb
repnz
(bad)
jmp
test
aas
or
js
xlat
out
addr16
adc
arpl
mov
pop
mov
sar
or
fdiv
lods
push
jmp
sahf
pop
out
(bad)
data16
add
out
adc
in
clc
push
fdivr
test
xchg
out
(bad)
adc
push
pop
arpl
lahf
inc
cmps
mov
ret
mov
inc
adc
call
or
mov
cmc
fldcw
test
mov
icebp
sub
add
pop
mov
push
fnsave
pop
(bad)
(bad)
jmp
xor
pusha
mov
je
dec
call
dec
cmc
mov
call
data16
cwde
das
sub
xlat
icebp
dec
les
fnsave
ret
mov
int3
(bad)
std
cs
mov
ja
jl
jmp
or
mov
shl
retf
xor
cdq
add
or
mov
imul
jge
test
inc
sub
jb
xchg
xor
cmp
xchg
adc
inc
dec
fldcw
scas
inc
arpl
jmp
clc
mov
scas
popf
outs
in
mov
push
mov
push
pop
sar
mov
in
je
and
cmp
out
outs
xchg
mov
pop
hlt
outs
stos
inc
(bad)
rcl
(bad)
and
sbb
in
push
cli
mov
ss
(bad)
(bad)
call
jno
sbb
fs
and
push
pop
dec
or
pop
inc
mov
jmp
inc
daa
shr
push
dec
jne
pusha
rcl
movs
in
inc
or
ins
cs
call
push
fidiv
fdivr
movs
ror
jecxz
xchg
test
stos
mov
mul
mov
sbb
pop
pop
mov
(bad)
(bad)
jmp
popf
mov
push
add
cmp
loopne
lods
out
scas
xchg
pop
test
pop
pop
cmp
xchg
xchg
rcl
dec
xchg
pop
push
(bad)
shr
pop
inc
ret
cmp
(bad)
add
sub
sar
shr
jl
jo
xchg
xchg
call
(bad)
(bad)
(bad)
out
push
arpl
pushf
ret
xchg
arpl
mov
pop
imul
repz
ror
cmp
std
push
or
hlt
aas
mov
and
rol
mov
(bad)
call
test
in
jmp
rol
pop
cmps
push
mov
dec
dec
mov
call
(bad)
cmps
loopne
mov
test
cli
and
cli
(bad)
fstp
mov
movntq
dec
jp
(bad)
jg
stc
cmp
pop
xor
and
data16
out
in
jg
(bad)
push
mov
sub
out
jnp
xchg
mov
pusha
sub
push
(bad)
imul
(bad)
jmp
cmc
ror
iret
(bad)
jle
and
dec
xor
outs
sahf
mov
jb
xor
test
stc
inc
sar
loopne
les
test
(bad)
mov
lock
pop
jmp
push
sub
iret
stc
ins
jmp
xor
(bad)
call
and
stos
shl
(bad)
mov
test
test
sbb
and
pop
add
jmp
cs
test
std
ins
movs
data16
aaa
(bad)
(bad)
jmp
dec
pop
imul
stc
aam
dec
jb
daa
arpl
test
mov
call
push
(bad)
(bad)
fcom
inc
(bad)
mov
sbb
in
out
rcl
xor
scas
sbb
aas
sar
(bad)
(bad)
(bad)
out
mov
mov
test
jg
outs
add
mov
pop
call
inc
jle
xor
pop
fstp
mov
(bad)
paddd
adc
pop
mov
(bad)
cmp
(bad)
sbb
ret
jno
add
outs
jge
dec
std
idiv
mov
cmp
cmp
loopne
xchg
or
pop
xchg
or
(bad)
jmp
adc
mov
loopne
shr
add
mov
push
inc
imul
cli
call
sub
bound
push
in
mov
dec
dec
retf
test
test
shl
fs
repnz
jg
lock
(bad)
pop
cmps
rcr
mov
push
imul
push
push
push
in
hlt
pop
and
test
(bad)
pop
sub
std
sub
jmp
pop
js
mov
jecxz
pop
jb
gs
popa
lea
popa
test
jns
xor
and
mov
(bad)
std
inc
mov
sbb
jo
clc
js
mov
(bad)
(bad)
(bad)
(bad)
fcomp
lock
dec
xor
xchg
xchg
sub
es
in
xor
pop
ins
test
es
fwait
imul
sbb
loop
imul
mov
inc
shl
dec
(bad)
pop
cmp
fst
in
jg
xor
hlt
xchg
sbb
rol
call
jmp
pop
retf
repnz
cmp
lods
push
shr
cmps
xor
ja
cmp
(bad)
(bad)
jmp
inc
cmp
imul
cmp
dec
mov
out
mov
push
or
stos
xor
std
(bad)
(bad)
call
sbb
pop
add
jbe
jne
mov
push
das
jo
retf
cwde
push
pop
clc
(bad)
(bad)
push
push
sub
sub
cmp
mov
scas
fmulp
xchg
test
or
inc
es
js
in
lock
cmp
fadd
mov
push
xlat
ja
(bad)
(bad)
call
rcl
mov
jmp
dec
popa
int
in
stos
push
in
repz
(bad)
dec
enter
mov
mov
out
dec
loopne
aam
xchg
mov
cmc
mov
mov
cmc
push
pop
popf
outs
cmc
aam
inc
mov
daa
xor
jg
clc
mov
(bad)
(bad)
jmp
pop
xchg
inc
aas
mov
sahf
cs
lock
push
push
out
and
xchg
adc
push
mov
loop
(bad)
cmp
pop
bound
lods
stc
shl
das
out
and
pop
pop
imul
xlat
lods
pop
lock
cmp
mov
cs
add
push
(bad)
jg
mov
(bad)
icebp
icebp
es
jecxz
push
push
ss
(bad)
(bad)
(bad)
in
test
fisttp
fidivr
push
cmp
cmp
inc
mov
repz
jmp
sub
(bad)
(bad)
(bad)
(bad)
jmp
push
das
push
sub
cdq
shl
movs
push
ret
push
(bad)
mov
cmp
mov
adc
adc
in
jle
(bad)
pop
ins
mov
sbb
(bad)
js
jmp
popf
mov
add
lods
out
call
movs
dec
movs
lods
hlt
stos
pop
(bad)
(bad)
(bad)
push
xchg
and
out
(bad)
enter
imul
out
leave
xchg
push
in
xchg
in
push
jle
add
pop
mov
les
sbb
aaa
cwde
sub
(bad)
stc
fnstenv
inc
test
adc
test
sysexit
idiv
(bad)
dec
repz
ds
dec
inc
loopne
inc
rol
and
fld
lds
(bad)
in
xor
out
outs
mov
lea
mov
(bad)
cmp
(bad)
push
sahf
not
sub
hlt
pop
pop
mov
iret
repz
or
inc
mov
(bad)
(bad)
(bad)
call
inc
inc
jg
ficom
xor
push
mov
and
lods
add
out
(bad)
inc
jb
addr16
fstp
hlt
xor
mov
ins
outs
mov
fnstcw
dec
(bad)
inc
and
push
jmp
mov
sysenter
(bad)
(bad)
(bad)
dec
cmp
stc
push
xchg
and
movs
inc
mov
mov
cmp
loope
fcomip
(bad)
(bad)
mov
pop
dec
fst
hlt
push
scas
sbb
inc
retf
xor
cmp
cs
inc
jmp
cmp
out
sbb
mov
ja
retf
aaa
cld
jg
inc
lock
ret
gs
and
jno
sbb
or
lods
popa
stos
outs
cli
(bad)
jmp
cmp
cdq
jb
inc
jl
mov
(bad)
bound
repnz
push
(bad)
(bad)
(bad)
inc
jge
jae
dec
sbb
repz
jne
and
sti
je
sbb
mov
ja
stos
div
in
mov
fcmovne
pop
aaa
jmp
repz
(bad)
push
std
popa
cmovnp
outs
fistp
mov
pop
xor
es
cli
pop
add
or
inc
cld
in
xor
(bad)
js
sbb
(bad)
jg
iret
call
jle
mov
mov
push
adc
js
dec
sbb
idiv
data16
fisubr
outs
iret
dec
jo
pop
fsub
(bad)
outs
(bad)
(bad)
jmp
push
cli
pop
loopne
scas
sti
xor
or
call
cwde
int3
sbb
idiv
stos
int3
sti
call
movd
push
iret
(bad)
call
cld
xchg
fidivr
in
mov
jae
add
pop
add
rcl
fld
rcl
sahf
inc
pop
jp
(bad)
(bad)
push
ds
out
sbb
leave
pop
lahf
arpl
test
jp
test
sti
call
jecxz
mov
mov
ret
push
add
inc
out
lods
(bad)
(bad)
(bad)
(bad)
fnstenv
mov
ins
xchg
loopne
ds
mov
jne
xchg
call
adc
xor
and
call
arpl
mov
inc
das
jle
loop
aad
pop
stos
jge
xchg
mov
sbb
mov
lea
sub
jmp
mov
mov
lds
cvtps2pi
mov
inc
cmp
mov
lods
or
cmp
push
aad
pop
loopne
popa
das
movs
mov
loop
dec
push
xchg
sahf
push
or
repz
cmps
mov
aad
jnp
dec
or
dec
mov
add
jnp
outs
sbb
idiv
mov
aam
mov
push
mov
mov
push
xchg
mov
das
xlat
sbb
(bad)
ja
xchg
cwde
pop
add
mov
mov
cli
(bad)
jg
jmp
pop
mov
xor
lods
pushf
adc
xlat
call
pusha
ret
xor
pop
xor
rcr
sahf
ds
(bad)
(bad)
dec
pop
(bad)
cmps
mov
out
xchg
xlat
outs
lahf
sbb
sti
lds
push
outs
les
(bad)
(bad)
(bad)
call
retf
mov
test
xchg
mov
movs
outs
pop
(bad)
out
imul
cmp
inc
cmp
(bad)
(bad)
(bad)
(bad)
mov
xchg
add
loopne
or
and
test
pop
jecxz
popf
inc
out
icebp
(bad)
(bad)
(bad)
call
xor
mov
shl
xor
ins
loope
inc
test
pop
ds
fist
and
(bad)
(bad)
(bad)
(bad)
mov
xchg
ret
lods
(bad)
mov
ret
imul
(bad)
test
lock
int
(bad)
(bad)
(bad)
jge
dec
aaa
movs
mov
shl
xor
es
lods
mov
and
(bad)
jg
jmp
imul
dec
dec
sub
(bad)
cmp
(bad)
xchg
push
mov
(bad)
fld
push
push
mov
cmp
enter
in
icebp
sahf
movs
xor
(bad)
(bad)
(bad)
jmp
cmp
dec
in
cmp
mov
lahf
into
jae
xchg
mov
(bad)
(bad)
(bad)
(bad)
(bad)
ds
in
iret
sub
adc
cdq
sbb
inc
xlat
dec
mov
mov
les
das
mov
inc
aam
(bad)
sbb
movs
int3
and
(bad)
(bad)
call
cmp
push
ins
cmp
loop
aam
movs
jecxz
jmp
cmc
adc
pop
ss
loope
(bad)
jmp
pop
scas
jge
iret
inc
cmp
shl
xor
dec
or
add
cmp
jb
inc
idiv
shl
push
rcr
xor
push
push
mov
stos
(bad)
fbld
retf
fstp
mov
xchg
and
in
or
call
pop
add
shl
jns
cmps
cli
mov
jno
and
mov
dec
pop
cmp
shr
lods
stos
push
(bad)
(bad)
(bad)
(bad)
mov
ror
inc
adc
push
(bad)
push
jge
mov
dec
aaa
jecxz
push
es
ins
xor
mov
adc
sti
mov
stc
mov
aaa
push
test
push
dec
scas
es
scas
pop
jge
or
ror
mov
(bad)
(bad)
call
cmp
or
and
push
jo
mov
jno
fwait
in
dec
mov
in
es
xor
out
dec
inc
mov
mov
jmp
idiv
mov
iret
pop
hlt
(bad)
(bad)
jmp
stc
mov
test
call
dec
jnp
(bad)
and
(bad)
(bad)
jmp
mov
test
in
mov
lods
movs
ret
sbb
xor
add
inc
pop
(bad)
cs
cmps
push
leave
mov
or
dec
loop
ja
push
ret
iret
mov
jb
jb
scas
scas
mov
jno
aaa
cld
call
adc
int
repz
jns
fidivr
push
push
pop
fdivr
(bad)
(bad)
fild
pop
aas
call
jmp
cmp
rol
jae
pop
add
ja
ja
inc
pop
out
fwait
nop
sbb
push
out
xchg
mov
inc
test
retf
(bad)
jg
sub
adc
and
imul
mov
pop
scas
adc
mov
pop
and
jmp
leave
mov
mov
(bad)
jmp
clc
ss
aas
xchg
dec
int3
pop
jl
mov
(bad)
cli
inc
add
sub
in
arpl
jmp
pop
fld
out
sahf
jl
mov
mov
(bad)
sbb
pop
pushf
test
jg
mov
jno
clc
pushf
aas
sub
mov
(bad)
(bad)
(bad)
fst
enter
retf
and
dec
push
xchg
dec
retf
int3
sub
push
(bad)
(bad)
(bad)
dec
iret
stos
mov
mov
sub
out
sbb
in
repz
jecxz
mov
cmp
jmp
rcr
imul
outs
(bad)
test
sbb
add
push
in
cmp
dec
(bad)
dec
sub
repz
inc
int3
mov
jecxz
pop
gs
cmp
shl
fbld
mov
test
fstp
push
out
das
sbb
mov
xor
(bad)
lahf
jecxz
jns
jge
rcl
loope
(bad)
inc
outs
sbb
leave
pop
mov
cmp
call
(bad)
(bad)
(bad)
mov
pop
dec
and
jge
or
cmp
out
fwait
or
repnz
cdq
adc
(bad)
dec
add
xchg
or
cmp
stc
(bad)
jae
jbe
std
mov
pop
mov
test
movs
jmp
movs
movs
sbb
scas
inc
push
(bad)
(bad)
call
inc
icebp
mov
inc
jae
(bad)
mov
in
mov
imul
inc
rcr
rcl
jge
(bad)
(bad)
call
cmp
cs
sub
sub
lds
fisttp
adc
das
sbb
(bad)
push
neg
mov
pop
xor
js
stos
lock
hlt
fdivr
sub
add
mov
clc
pop
aam
or
imul
jbe
(bad)
(bad)
fild
aaa
mov
pop
sar
int
int3
add
arpl
loopne
(bad)
jg
push
icebp
mov
(bad)
ret
aaa
sbb
cld
enter
(bad)
out
clc
dec
pop
repnz
and
daa
in
imul
and
push
jno
sub
cmp
jmp
test
aaa
aad
(bad)
(bad)
mov
aaa
mov
lds
and
in
xchg
mov
test
clc
(bad)
cmp
fcomp
daa
dec
sbb
aaa
mov
dec
pop
(bad)
(bad)
(bad)
jmp
into
loope
or
cmp
aam
xchg
(bad)
hlt
test
ret
(bad)
(bad)
(bad)
pop
(bad)
(bad)
(bad)
jmp
test
iret
outs
(bad)
gs
inc
(bad)
xor
hlt
mov
hlt
pop
jmp
aas
sar
fcmovne
dec
push
jns
fmul
js
pop
and
(bad)
(bad)
(bad)
(bad)
std
loop
inc
xchg
push
movs
xchg
enter
jae
cmp
aad
(bad)
mov
inc
and
mov
mov
push
mov
xor
pop
mov
pop
fstp
ins
push
and
(bad)
(bad)
(bad)
call
push
fs
iret
test
rep
test
lds
mov
nop
pusha
inc
sar
(bad)
(bad)
call
movs
jle
ret
xchg
sar
data16
sbb
sbb
mov
push
mov
mul
sub
xor
mov
(bad)
push
repnz
scas
dec
movs
mov
pop
xor
aas
jne
stc
xor
or
jmp
ret
cdq
imul
xchg
adc
mov
out
cli
dec
mov
dec
mov
aaa
jae
ss
pop
scas
call
fidiv
mov
add
cld
sbb
or
aaa
or
jnp
mov
(bad)
(bad)
(bad)
jmp
rcr
sub
inc
jmp
(bad)
sbb
cmp
jge
cmp
(bad)
mov
jle
mov
pop
repnz
test
loopne
or
mov
xchg
test
mov
inc
(bad)
inc
std
mov
ror
sar
retf
lods
adc
fidiv
ja
push
jmp
mov
rcr
xchg
rol
sti
mov
lods
mov
and
(bad)
ffreep
xchg
jnp
mov
mov
mov
int
add
outs
or
lods
movs
into
shl
sti
jge
jne
scas
adc
fcom
sahf
push
icebp
repz
jb
cmp
inc
inc
push
rcr
dec
iret
fstp
idiv
sar
call
loopne
jnp
ret
int
jmp
sub
inc
lock
(bad)
cmps
aad
lods
bound
(bad)
dec
or
pop
jnp
push
test
mov
and
scas
jmp
mov
ret
data16
fwait
dec
jmp
hlt
int
push
sub
cmps
sub
push
inc
popf
push
jg
inc
out
mov
jg
hlt
aaa
sub
test
cmp
inc
lea
dec
std
push
mul
aas
sbb
pop
stos
rcl
std
in
sbb
rcr
pop
sbb
test
sub
ja
jnp
daa
pop
inc
lock
fmul
xchg
ret
mov
mov
mov
cld
not
(bad)
jnp
jmp
out
mov
(bad)
shl
in
jne
fmul
cli
rol
cwde
(bad)
jmp
add
jno
call
enter
xchg
inc
out
sbb
scas
(bad)
push
mov
pop
xchg
sub
cdq
dec
jg
pop
push
std
lock
or
sbb
fbld
pop
dec
jo
add
jmp
ins
xor
(bad)
sahf
and
dec
loopne
and
in
jle
dec
cmp
xor
pop
xchg
cmp
daa
sub
(bad)
call
retf
lods
out
and
mov
xchg
cmp
outs
mov
inc
add
xchg
lods
cli
into
leave
fimul
mov
jg
(bad)
(bad)
(bad)
dec
fidiv
(bad)
arpl
iret
es
jae
lods
adc
gs
mov
test
xor
sbb
dec
pop
adc
or
sub
ror
call
(bad)
cmp
aas
xor
dec
repnz
mov
rcl
sub
(bad)
sti
shr
pop
aad
bound
rol
(bad)
pop
dec
stos
lods
mov
mov
pushf
mov
std
jmp
and
cmp
fmul
scas
sub
sub
outs
call
push
xor
jmp
push
push
xchg
(bad)
cmp
ja
add
cmc
jmp
jle
mov
(bad)
(bad)
mov
loop
sub
out
movs
in
int
push
xchg
es
(bad)
movs
shl
jmp
sbb
(bad)
(bad)
(bad)
js
ret
test
(bad)
fistp
repnz
(bad)
and
(bad)
pop
jns
xchg
jecxz
jmp
aam
cli
call
push
jns
out
neg
dec
mov
iret
movs
mov
scas
(bad)
inc
push
std
(bad)
fxch
or
hlt
js
pop
mov
lahf
bnd
loop
pop
(bad)
dec
std
(bad)
(bad)
cmp
repz
cmp
sbb
inc
jae
inc
push
dec
nop
push
fist
call
std
dec
js
in
pusha
jns
and
jmp
xchg
cmp
in
outs
(bad)
popf
ja
(bad)
call
cmps
adc
into
fs
ins
dec
xchg
shl
in
sbb
inc
out
mov
inc
push
push
xor
enter
push
(bad)
(bad)
jg
(bad)
inc
call
mov
pushf
adc
test
nop
jg
idiv
es
mov
mov
push
fnstcw
arpl
inc
imul
mov
adc
sbb
cmp
xor
and
mov
cwde
inc
add
and
stos
ins
in
mov
jmp
cs
les
frstor
scas
movs
jne
fcomp
xlat
repz
add
ja
sti
mov
ins
pop
and
ins
jnp
dec
(bad)
call
icebp
jae
push
adc
clc
add
mov
mov
mov
cld
xor
cmps
loopne
pop
mov
xchg
sub
ins
mov
aas
push
add
jl
pushf
inc
mov
cmps
adc
xor
aaa
call
fs
pop
mov
loop
inc
lea
mov
mov
and
cmp
and
dec
adc
ins
ss
(bad)
(bad)
(bad)
mov
lods
data16
push
or
push
xchg
imul
mov
(bad)
inc
fstp
lods
cmps
push
fsub
idiv
es
fwait
loope
jle
imul
(bad)
inc
pop
or
or
push
add
ins
fs
mov
je
popa
adc
lock
pop
and
fsub
(bad)
cmp
and
mov
ret
xchg
cmc
nop
nop
adc
add
popf
mov
pusha
in
add
(bad)
dec
aad
inc
(bad)
out
outs
jmp
inc
pop
jne
mov
pop
imul
jmp
mov
jg
adc
mov
or
or
sar
cmps
(bad)
fwait
or
mov
sbb
(bad)
call
rcl
sub
cmp
out
popf
adc
mov
call
jmp
jmp
mov
inc
call
daa
dec
cwde
inc
call
push
push
std
mov
and
dec
leave
adc
pop
cmps
lods
add
outs
xchg
test
idiv
mov
jge
or
xor
sub
jge
into
nop
js
push
or
test
(bad)
sti
scas
clc
sub
dec
dec
dec
mov
add
inc
adc
pop
add
jb
xchg
push
sub
(bad)
(bad)
mov
mov
call
das
test
movs
push
xchg
cmp
sahf
cs
pop
fadd
add
jge
push
retf
(bad)
mov
sar
sub
ins
mov
clc
pop
loopne
mov
(bad)
clc
pop
mov
mov
mov
pop
inc
test
(bad)
(bad)
(bad)
mov
or
das
push
xor
add
imul
(bad)
ds
pushf
cs
pop
cld
lock
popa
popa
loope
je
sub
mov
mov
sbb
call
aam
shl
in
jae
jg
(bad)
out
jle
add
les
cmp
adc
cld
(bad)
aaa
ins
pop
adc
lds
aaa
aaa
sar
(bad)
mov
shl
into
dec
pop
scas
mov
sbb
add
inc
ja
(bad)
call
out
ret
sbb
pop
ret
mov
push
jae
inc
bound
and
(bad)
(bad)
dec
sub
popa
lea
cmp
dec
fcom
rol
ins
and
cmps
or
and
pusha
fisttp
cld
lods
in
imul
sahf
fcomp
lea
dec
int
push
cli
and
push
scas
sbb
mov
or
sbb
mov
pop
xchg
xor
mov
mov
xchg
arpl
push
inc
fs
sbb
fisub
mov
cmp
bound
pop
and
push
jmp
test
stos
inc
mov
jo
ret
xchg
aas
cld
xchg
mov
hlt
lock
or
inc
loop
lods
and
mov
ss
adc
sub
scas
clc
sbb
mov
pop
and
sbb
and
mov
pop
fdivr
mov
xor
rcr
jnp
cs
fistp
and
es
fmul
mov
outs
or
(bad)
(bad)
std
cmps
xor
cld
into
adc
cmps
or
outs
mov
movs
ret
(bad)
pop
dec
dec
iret
push
data16
or
es
sub
in
push
sar
retf
push
pop
sbb
cmp
or
stos
retf
jmp
push
mov
das
push
adc
pop
cmp
jno
add
popa
sub
outs
jo
xor
mov
das
push
sub
push
adc
fst
push
inc
push
mov
fwait
addr16
mov
dec
fucomi
(bad)
(bad)
(bad)
call
(bad)
mov
ret
(bad)
jg
stos
and
cmc
fs
cmc
pop
sahf
popa
cdq
lea
(bad)
(bad)
push
xchg
cmp
frstpm(287
inc
bound
pop
or
mov
loop
(bad)
(bad)
inc
jo
je
iret
(bad)
jmp
inc
cmp
sbb
inc
hlt
loopne
fisttp
sbb
leave
xchg
inc
(bad)
cli
call
adc
mov
cmp
mov
cdq
je
es
in
(bad)
jmp
stos
mov
je
mov
mov
push
mov
(bad)
(bad)
fcomip
repnz
(bad)
shr
call
movs
add
mov
inc
lods
ins
hlt
inc
imul
mov
imul
pop
mov
adc
xchg
push
hlt
out
or
jo
pop
popa
std
dec
sbb
adc
in
inc
jl
xlat
loope
add
inc
xor
sar
hlt
pop
mov
jns
dec
mov
jmp
ja
cmc
pushf
test
aas
sub
cwde
dec
cld
(bad)
jmp
xor
imul
jbe
loop
sbb
pop
sub
(bad)
(bad)
fbstp
xor
test
stos
add
ins
stos
xor
pop
sub
xchg
push
inc
xchg
fnstsw
pop
jnp
out
mov
ffreep
pop
pop
jp
repnz
clc
push
in
pusha
cmps
pop
aaa
icebp
pop
inc
cld
mov
dec
add
(bad)
out
dec
(bad)
(bad)
jg
outs
ja
pop
out
fnstcw
jecxz
jecxz
outs
mov
sub
mul
cmps
xchg
mov
mov
push
out
test
push
adc
inc
dec
in
jecxz
adc
dec
jo
test
dec
dec
iret
std
(bad)
test
jecxz
add
int
pop
xchg
scas
arpl
(bad)
dec
test
push
xor
mov
or
sub
add
(bad)
(bad)
jmp
mov
dec
inc
out
or
mov
sbb
arpl
das
xor
adc
dec
iret
jge
int
jae
push
mov
sbb
outs
imul
ror
jae
fisttp
dec
push
add
dec
out
mov
jg
mov
add
shr
sar
(bad)
(bad)
(bad)
dec
in
add
out
aad
popa
movs
mov
sub
sbb
rol
pop
cld
push
xchg
nop
xor
bound
mov
js
ja
outs
(bad)
fcomip
sub
cdq
not
cmc
stos
xor
out
retf
(bad)
out
add
test
fld
cmp
pop
adc
mov
jo
popa
out
imul
jecxz
das
sub
dec
iret
fldenv
cld
mov
adc
pop
jnp
cmps
test
(bad)
push
jnp
cmps
fistp
out
retf
jae
clc
add
pop
mov
inc
pusha
arpl
ret
ret
sar
(bad)
(bad)
aas
push
or
(bad)
cmps
jns
aaa
dec
daa
add
cmp
iret
push
inc
cmp
add
ficomp
(bad)
mov
and
inc
cmps
mov
aas
inc
sbb
push
xor
jns
(bad)
ds
add
pop
(bad)
(bad)
push
sbb
rol
xor
rcr
and
ret
(bad)
jp
dec
sub
and
fnclex
sub
leave
(bad)
test
addr16
add
(bad)
(bad)
(bad)
inc
mov
xor
mov
inc
not
jnp
pusha
adc
pop
ret
cmc
(bad)
(bad)
(bad)
call
adc
loopne
mov
add
mov
adc
jbe
xor
into
push
pop
sar
out
fwait
push
pop
stos
shl
aaa
addr16
xchg
aas
cmp
(bad)
(bad)
push
cdq
mov
and
pop
lods
scas
movs
adc
dec
rcr
in
test
fisub
and
mov
dec
fdiv
cmc
sar
sub
jno
mov
ins
jo
sub
fisub
jae
(bad)
fistp
mov
ficomp
push
iret
push
jmp
dec
aad
or
sub
rcl
dec
adc
dec
jecxz
push
lods
ffreep
fwait
in
fisub
mov
add
xor
out
iret
ins
pop
(bad)
push
sbb
scas
xchg
sbb
mov
int3
mov
mov
xor
jp
outs
pushf
xor
js
push
adc
(bad)
mov
mov
add
clc
test
call
bound
jo
sub
cmps
int3
push
mov
cdq
sub
loop
cmp
movs
mov
sub
pop
lea
test
scas
push
add
in
(bad)
dec
sbb
mov
cmps
add
xor
push
or
cmc
aam
mov
or
outs
aas
cmps
jge
push
push
mul
rcr
imul
jmp
retf
add
mov
cld
outs
jg
(bad)
jmp
mov
idiv
jle
ja
retf
daa
push
cwde
sub
ja
(bad)
loopne
jg
adc
fstp
cmp
mov
mov
ins
or
sbb
mov
(bad)
fisttp
adc
jns
in
mov
pusha
or
cwde
fwait
xchg
pop
push
or
(bad)
cld
(bad)
dec
dec
js
sub
jmp
xchg
imul
out
pop
loopne
add
sahf
mov
scas
xor
fdivp
ds
in
sti
mov
clc
call
jmp
dec
dec
jmp
js
inc
or
cmps
add
inc
nop
inc
es
dec
int
(bad)
inc
add
pop
in
cmps
xchg
add
pop
sbb
xchg
popf
ins
mov
mov
(bad)
inc
cmp
mov
lock
out
jne
mov
jp
inc
xchg
daa
xor
(bad)
mov
(bad)
iret
adc
push
aas
fimul
fsubr
pop
fstp
lahf
lds
in
cmp
je
sbb
es
or
mov
sub
and
fild
aad
movs
sub
jg
(bad)
(bad)
mov
add
sub
ss
cmp
cmp
jmp
test
mov
enter
inc
jg
dec
stos
outs
inc
cld
jmp
pop
(bad)
add
aaa
movs
adc
jmp
sbb
sbb
cmp
es
ret
cmps
lods
sbb
sar
(bad)
mov
xor
push
es
add
ror
(bad)
call
fld
add
dec
jnp
int
ret
mov
xor
stos
or
(bad)
call
jl
mov
push
adc
push
pop
cmc
jmp
leave
inc
add
add
das
clc
(bad)
push
dec
and
sbb
mov
test
xchg
jns
mov
or
push
mov
dec
cdq
mov
dec
ins
push
and
push
je
(bad)
(bad)
(bad)
dec
aam
cmp
sahf
or
pusha
shl
sub
not
push
fidiv
sbb
adc
idiv
(bad)
(bad)
dec
inc
out
sub
or
pop
outs
pop
sub
aas
mov
fdivr
mov
mov
adc
rcr
push
nop
into
addr16
mov
iret
sahf
adc
popf
(bad)
aas
adc
test
adc
and
movs
rol
mov
inc
(bad)
loopne
mov
cmps
hlt
popa
test
xor
dec
(bad)
(bad)
(bad)
(bad)
mov
mov
xor
rol
pop
out
pop
(bad)
adc
fwait
pop
xor
add
lods
dec
and
pushf
mov
dec
fidivr
jle
arpl
jo
or
ss
push
xchg
shr
mov
cmp
stos
push
dec
ret
add
test
push
mov
stos
xchg
jmp
push
push
push
push
push
movs
and
xchg
mov
hlt
shr
mov
lock
call
out
jb
pushf
mov
xlat
sbb
pushf
sbb
test
(bad)
inc
int3
push
pop
sbb
ja
sahf
pop
jno
mov
(bad)
(bad)
(bad)
call
jp
push
xchg
out
out
push
or
or
sub
shl
jge
xor
(bad)
mov
aad
es
mov
jno
ins
imul
push
cmps
fs
dec
(bad)
mov
test
cmp
loop
(bad)
jmp
push
pushf
and
jp
(bad)
(bad)
call
dec
or
test
rcr
dec
iret
mov
push
cmp
jmp
aad
outs
retf
add
jne
leave
fwait
ret
inc
pop
ins
xor
imul
(bad)
(bad)
mov
pushf
fdiv
lea
xlat
lods
movs
lods
sbb
jno
inc
aas
jmp
push
mov
or
cmc
pop
pop
test
popf
xor
neg
inc
add
inc
hlt
cld
push
inc
pop
mov
cmp
xlat
(bad)
clc
call
jmp
lahf
jp
scas
mov
sahf
mov
push
cmp
(bad)
jmp
jp
je
std
or
mov
jno
aad
(bad)
fstp
popa
push
xor
push
repz
xchg
inc
clc
(bad)
mov
dec
test
popa
lock
jl
xlat
and
jo
pop
ins
lods
mov
jl
mov
(bad)
call
fistp
jmp
(bad)
adc
out
(bad)
call
xchg
mov
dec
jecxz
mov
xor
xlat
(bad)
cmp
test
jmp
adc
push
les
scas
popf
in
mov
leave
mov
and
idiv
(bad)
jmp
sub
imul
stos
xlat
popaw
test
stos
dec
inc
(bad)
(bad)
(bad)
jg
(bad)
fisubr
iret
lahf
push
aas
mov
jle
inc
out
fscale
jb
stos
mov
(bad)
(bad)
call
or
stos
stos
test
fst
xor
loopne
shr
mov
repnz
fcomp
and
retf
fstp
push
push
dec
add
mov
inc
dec
jae
cmp
(bad)
(bad)
push
in
or
or
int3
int3
popa
and
sbb
out
loopne
or
sbb
mov
(bad)
(bad)
aas
test
test
pop
retf
popf
in
jmp
inc
repnz
fs
cmps
adc
jg
jmp
shr
mov
test
adc
addr16
xchg
call
dec
adc
and
addr16
adc
push
sti
std
inc
(bad)
clc
(bad)
sahf
jo
sbb
outs
sbb
imul
lahf
das
(bad)
std
push
add
xchg
adc
pop
mov
push
cmp
movs
call
mov
cmps
dec
in
popf
stos
fwait
and
dec
pop
sub
(bad)
shl
xlat
sti
test
mov
xchg
in
or
(bad)
jg
(bad)
cmp
cmp
lods
cli
push
jl
jl
mov
test
mov
cmp
mov
aaa
test
ja
mov
scas
sar
aam
dec
cwde
jp
jmp
jnp
jg
loop
jp
js
dec
cdq
repz
or
loope
call
jno
mov
cmps
add
sbb
das
xor
std
ficomp
stos
aaa
push
(bad)
(bad)
std
inc
fisttp
dec
loopne
adc
aam
sub
loopne
inc
loop
push
fld
adc
cli
fild
push
mov
push
mov
clc
fwait
sub
stos
xchg
mov
push
dec
jno
xchg
xchg
(bad)
(bad)
sti
add
sbb
mov
sub
test
clc
push
sti
repnz
(bad)
(bad)
jg
mov
xor
rcr
and
inc
jno
(bad)
sbb
mov
mov
jle
sub
xor
adc
jp
and
xor
cmp
popa
jecxz
xchg
stos
mov
mov
push
mov
mov
leave
je
loop
mov
push
repz
loopne
popa
stos
mov
aaa
nop
cmp
icebp
lods
add
jmp
pop
hlt
pop
sbb
outs
xchg
loop
test
(bad)
(bad)
(bad)
cld
dec
js
pop
(bad)
jb
rcl
pop
mov
(bad)
inc
jb
vshufps
rol
mov
add
dec
mov
iret
(bad)
pop
fwait
and
popa
test
(bad)
(bad)
(bad)
jmp
or
and
retf
adc
fs
mov
test
jl
mov
int
pop
add
xchg
mov
inc
call
(bad)
(bad)
(bad)
fisttp
xor
jbe
xchg
xchg
jae
or
jmp
push
pop
push
daa
std
mov
mov
and
clc
cwde
mov
jb
daa
mov
fcomp
adc
mov
jns
sub
pop
adc
lock
(bad)
jmp
popa
or
into
out
push
push
jne
sbb
rcl
inc
sbb
ret
jno
stos
pop
jmp
jo
inc
mov
icebp
cmc
sbb
cmpxchg
ins
push
inc
aaa
inc
cmp
and
mov
arpl
idiv
cli
jne
scas
or
pop
outs
stos
inc
aas
ds
setl
or
mov
lods
int
mov
jg
call
daa
adc
in
pop
out
or
popa
loope
sub
dec
jmp
xor
mov
add
inc
sbb
push
and
mov
adc
pop
xchg
add
xor
imul
call
inc
jp
dec
test
dec
fcom
lods
pop
aad
mov
ret
xchg
pop
inc
enter
mov
add
dec
pop
cmps
cmp
dec
xor
pop
and
xchg
int
cdq
ficom
and
leave
inc
or
inc
cmp
and
and
aad
or
sbb
jnp
sahf
retf
iret
mov
sar
pusha
loop
mov
add
mov
std
(bad)
(bad)
(bad)
(bad)
fidivr
out
out
add
cmp
outs
retf
mov
mov
loopne
jmp
into
ins
std
(bad)
call
xor
pop
mov
sbb
sub
sbb
(bad)
dec
sub
mov
xor
sbb
jl
(bad)
xor
(bad)
nop
and
and
iret
push
add
add
clc
sahf
out
jle
popf
bound
xchg
dec
push
push
xor
push
pop
cld
(bad)
jmp
sbb
xchg
gs
addr16
in
int
jp
lods
shr
(bad)
(bad)
(bad)
push
stos
test
mov
adc
ret
idiv
xlat
imul
mov
pop
iret
repz
(bad)
(bad)
cmp
sub
call
sbb
shl
push
ficom
xchg
sti
call
cmp
cmps
in
mov
mov
dec
nop
shl
fld
push
xchg
(bad)
(bad)
dec
out
fwait
out
pop
(bad)
(bad)
xchg
xor
pop
ror
xchg
add
lea
xchg
sub
push
or
and
xchg
(bad)
jo
call
inc
xor
inc
xor
inc
aaa
cmp
inc
ss
push
dec
adc
mov
dec
mov
aaa
inc
sbb
ja
or
dec
inc
sbb
push
test
sbb
nop
xor
sbb
mov
add
xchg
or
ins
icebp
cmps
ds
mov
icebp
lods
sub
mov
adc
sbb
pop
popa
mov
(bad)
call
pop
loope
jae
ret
pusha
add
out
add
xor
and
clc
enter
jmp
jmp
jle
(bad)
int3
xor
imul
cmp
inc
lods
xor
cmp
pop
(bad)
mov
push
pusha
add
imul
(bad)
aad
repnz
xchg
push
sub
loopne
std
push
shr
rdmsr
xor
aaa
xor
inc
inc
inc
cmp
cmp
bnd
inc
xor
push
xor
inc
add
pop
les
xor
stc
inc
xor
inc
int3
add
scas
test
inc
push
xor
aad
inc
outs
ja
daa
dec
pop
mov
int
loope
push
push
ret
ins
or
sti
jmp
faddp
stos
js
mov
cli
mov
retf
or
push
jne
std
pop
(bad)
(bad)
(bad)
push
push
rcl
sub
xchg
mov
jl
daa
adc
xor
add
or
cmc
(bad)
(bad)
(bad)
push
pop
(bad)
mov
mov
xor
push
call
aaa
mov
xchg
div
mov
movs
(bad)
(bad)
test
std
icebp
mov
ss
(bad)
(bad)
xlat
mov
or
mov
sar
mov
repnz
bound
(bad)
(bad)
(bad)
jmp
sar
cli
dec
push
sub
push
or
jge
pop
shr
xchg
inc
stc
(bad)
cmc
(bad)
(bad)
push
mov
or
and
fldcw
stos
int
aas
aad
(bad)
mov
loop
fisub
sbb
and
das
add
add
pop
(bad)
sbb
add
xchg
mov
inc
test
jno
mov
add
inc
dec
inc
xor
inc
cmp
ja
sub
mov
pushf
lahf
xor
xlat
scas
adc
pop
xor
loopne
cld
test
mov
cli
pop
ins
cdq
inc
or
cmp
(bad)
push
sar
push
pop
imul
cmovne
jo
mov
retf
add
(bad)
(bad)
inc
sbb
outs
xlat
jns
jecxz
fcmovnu
lods
lea
jb
out
pop
pop
cmp
scas
arpl
pop
(bad)
(bad)
(bad)
jmp
xor
xor
std
mov
not
sti
stc
jp
xchg
sbb
mov
call
outs
mov
pusha
push
jb
ss
dec
and
jmp
cmps
ins
jnp
adc
std
(bad)
in
cmp
sub
imul
cwde
pop
jmp
add
xchg
loopne
add
push
adc
add
sbb
(bad)
(bad)
(bad)
sti
xchg
or
adc
push
sbb
movs
add
xchg
arpl
sub
cmc
cmp
(bad)
(bad)
jnp
jl
cwde
loop
push
nop
inc
sbb
add
ds
sahf
ins
cdq
or
nop
jns
fild
mov
in
jns
inc
mov
retf
ds
gs
out
vmread
and
mov
pushf
sub
cmp
fs
add
cld
hlt
mov
dec
inc
(bad)
ins
loopne
pop
jmp
push
mov
pop
add
pop
loope
test
pop
imul
call
dec
ins
daa
jno
sub
mov
(bad)
(bad)
(bad)
fnsave
sahf
xchg
sbb
or
retf
shr
sub
xchg
pop
hlt
(bad)
(bad)
call
lods
mov
jne
push
lods
jo
xor
mov
(bad)
(bad)
fild
(bad)
leave
movs
and
dec
in
clc
call
push
(bad)
cli
mov
repz
aas
out
cmp
sbb
dec
and
repz
repnz
in
jmp
or
(bad)
adc
and
into
sar
idiv
inc
aas
pop
(bad)
ja
mov
mov
mov
test
cmps
cli
inc
push
lahf
aas
sbb
xchg
(bad)
(bad)
(bad)
(bad)
call
cmp
jo
adc
push
sub
nop
popf
popf
int
mov
fld
pop
cwde
adc
sbb
jle
ds
ret
out
pop
lods
(bad)
shr
cmp
js
jl
stos
stos
or
sbb
cmp
call
ss
mov
push
and
add
es
fnstsw
mov
lock
fs
jg
inc
mov
loope
pop
push
jnp
mov
(bad)
(bad)
mov
nop
fs
test
test
(bad)
lds
lahf
mov
sahf
pop
lock
xor
bound
mov
dec
inc
add
das
and
(bad)
imul
mov
cld
shr
add
pop
icebp
cdq
fisttp
test
(bad)
jmp
sub
xor
sub
pop
sub
add
add
sub
loopne
(bad)
(bad)
(bad)
(bad)
mov
pop
mov
sahf
cmp
shl
sbb
jle
bound
(bad)
(bad)
(bad)
call
enter
mov
shl
js
sahf
sahf
push
add
out
xchg
leave
test
add
shr
dec
inc
push
mov
mov
stos
(bad)
js
jno
pop
add
cdq
fimul
dec
jl
enter
xor
call
pop
stc
fdiv
ins
es
dec
lods
pop
sti
(bad)
(bad)
push
dec
xchg
pop
test
pusha
mov
test
fstp
in
das
repz
add
jo
xor
sar
cmp
popf
into
call
sar
dec
lods
push
daa
xor
mov
in
fidiv
dec
jg
les
rcr
ds
pop
push
jl
push
inc
jne
xor
cmc
push
leave
retf
(bad)
inc
out
std
leave
nop
cmc
push
pusha
clc
dec
clc
mov
mov
jae
dec
clc
fstp
mov
dec
mov
aas
or
pop
mov
mov
add
sbb
cmps
mov
jg
retf
dec
mov
or
sbb
aaa
outs
adc
test
inc
mov
pop
je
or
jp
mov
bound
outs
(bad)
(bad)
out
jmp
mov
repz
enter
jl
hlt
jmp
leave
inc
pop
push
call
lea
mov
aaa
dec
clc
xor
push
jnp
call
rcr
mov
push
pop
or
xor
out
lds
imul
inc
(bad)
(bad)
jg
int
mov
add
push
sbb
mov
pop
loop
pusha
loopne
inc
neg
push
adc
mov
ror
or
inc
add
fwait
sti
aaa
in
scas
sub
lds
add
addr16
cmp
jp
sbb
add
or
icebp
jno
call
or
or
aad
jne
sbb
das
pop
ss
dec
test
(bad)
(bad)
in
pop
pop
pop
inc
pop
leave
xlat
movs
je
dec
js
test
in
and
sbb
cmp
mov
jg
out
das
adc
imul
xchg
sbb
loopne
mov
(bad)
(bad)
(bad)
call
sub
arpl
sub
xor
xchg
bound
push
push
ins
mov
jnp
cmp
and
add
ret
iret
mov
mov
fdiv
test
in
xchg
retf
jne
lock
hlt
(bad)
(bad)
jmp
add
cs
sbb
shr
je
es
jp
mul
mov
(bad)
(bad)
(bad)
fistp
jmp
mov
xor
call
sub
(bad)
(bad)
mov
push
push
xchg
int
jb
inc
cmp
das
cmp
stc
shl
(bad)
(bad)
fild
je
add
sbb
adc
icebp
add
push
add
push
ja
cli
or
xor
or
push
loop
and
dec
aam
rol
mov
xchg
inc
stos
aad
fidiv
(bad)
(bad)
call
add
ret
push
and
je
lds
xlat
xchg
mov
inc
sar
jmp
(bad)
(bad)
inc
in
imul
jne
xlat
xor
ins
sbb
das
cli
inc
sbb
das
pop
and
cdq
lods
mov
dec
fisttp
jb
jo
add
scas
cmp
jle
cli
js
push
in
and
fmul
fucomp
pop
mov
loopne
mov
fwait
retf
in
mov
mov
adc
or
rcr
or
dec
cld
jmp
and
repnz
iret
jmp
jg
xchg
cmps
xchg
loopne
aaa
lds
call
js
sbb
xor
adc
mov
shl
ret
jmp
jns
popa
ds
addr16
xor
sub
shr
in
cli
call
clc
jmp
dec
add
add
push
(bad)
(bad)
push
sub
jbe
dec
jmp
scas
and
sbb
add
push
pop
mov
(bad)
dec
(bad)
jmp
add
lods
(bad)
repz
xchg
popf
rcr
(bad)
out
jp
mov
outs
fistp
popf
sbb
mov
mov
cmp
xchg
ins
xor
jnp
fcmovnb
push
std
mov
out
jg
inc
bound
(bad)
jle
add
jmp
jp
test
cmp
push
(bad)
(bad)
call
ror
add
lock
stos
(bad)
fldcw
das
lods
retf
add
cli
shl
mov
scas
jo
add
test
iret
inc
jb
adc
mov
fist
ret
loope
jnp
ins
inc
inc
pop
movs
mov
rol
rcl
fiadd
jne
(bad)
leave
pop
push
sahf
jmp
sub
mov
(bad)
(bad)
mov
(bad)
xchg
out
xchg
mov
mov
lock
psllq
data16
add
scas
(bad)
mov
xlat
xlat
cmps
push
cld
push
mov
addr16
jo
push
sar
enter
in
arpl
les
or
cmp
scas
lock
es
test
cmc
push
jmp
pop
(bad)
(bad)
push
and
pop
mov
push
imul
leave
cmp
push
or
cld
push
inc
enter
cmp
leave
sti
std
xlat
bound
(bad)
call
adc
mov
loop
cmp
dec
(bad)
fdivr
scas
scas
dec
fcom
jmp
hlt
jmp
sub
inc
xchg
and
xchg
dec
(bad)
mov
or
mov
lahf
pop
mov
mov
or
mov
stc
push
or
xchg
sti
(bad)
call
lods
mov
sub
or
out
fisttp
push
lds
and
aaa
not
std
sbb
not
mov
pop
or
in
jbe
dec
enter
out
mov
jb
sub
mov
adc
bound
mov
cmps
std
sar
jmp
xor
add
fs
lahf
sub
jg
mov
test
xchg
lahf
pushf
mov
ins
ins
push
(bad)
(bad)
call
jle
mov
call
jne
fdiv
ret
push
push
ds
dec
jo
call
std
push
xchg
and
mov
stc
arpl
sub
retf
or
dec
mov
(bad)
inc
dec
push
pop
xchg
add
jecxz
leave
and
(bad)
rcl
inc
xlat
mov
mov
sar
mov
push
aam
inc
jae
sahf
out
neg
mov
shr
cld
pop
retf
ret
(bad)
out
cli
add
and
push
outs
in
add
or
daa
jo
(bad)
mov
ret
mov
repnz
aas
push
test
fs
and
(bad)
mov
(bad)
and
jno
arpl
or
add
inc
or
xor
inc
inc
test
dec
les
bound
jg
inc
add
pop
inc
pushf
cs
stos
aad
lods
mov
fistp
call
push
mov
jae
sub
sub
adc
push
xor
(bad)
(bad)
dec
clc
not
sar
cmps
ja
sub
xchg
sti
ret
mov
das
cdq
xchg
fwait
call
and
xlat
add
mov
push
mov
(bad)
call
add
imul
mov
in
sbb
dec
adc
(bad)
(bad)
call
mov
dec
stos
nop
retf
mov
sub
jle
jns
movs
inc
add
mov
pushf
call
std
push
mov
lds
jae
xor
loop
jno
(bad)
(bad)
(bad)
push
loopne
xchg
int
mov
inc
rcr
and
or
int3
popa
dec
xchg
and
jmp
repz
sub
or
xor
(bad)
call
jle
lea
add
ret
in
jbe
inc
and
xchg
cs
call
lahf
int
mov
loopne
pop
out
(bad)
idiv
xlat
lahf
jo
in
xchg
mov
les
(bad)
(bad)
(bad)
push
fistp
sub
jle
mov
je
jne
bound
and
pop
jmp
sbb
call
scas
mov
add
mov
dec
and
rcr
clc
(bad)
(bad)
call
sbb
mov
push
in
or
mov
cmc
sub
add
outs
push
inc
pop
dec
push
xchg
or
shl
hlt
clc
inc
test
dec
and
pop
sub
lods
xchg
icebp
pop
mov
addr16
das
add
adc
sub
arpl
hlt
(bad)
mov
push
out
or
aad
and
xor
pop
or
scas
stos
aaa
mov
(bad)
call
push
hlt
mul
mov
adc
idiv
cmp
sbb
pop
push
lock
and
push
gs
clc
mov
and
and
xor
mov
lahf
iret
enter
sbb
outs
xor
and
adc
rcr
mov
cld
push
xor
and
out
sub
add
call
add
jns
stc
aam
jnp
daa
push
add
call
hlt
fcomp
fucom
sbb
repnz
clc
retf
mov
stos
out
fdiv
sub
enter
xor
or
(bad)
int
(bad)
(bad)
dec
jne
pop
mov
or
dec
xchg
inc
dec
xor
fwait
push
sbb
inc
fdivr
mov
call
shl
outs
pop
inc
adc
dec
pop
aad
mov
(bad)
(bad)
call
mov
or
push
xchg
dec
test
cwde
pop
xor
out
xlat
adc
mov
imul
(bad)
push
jecxz
into
mov
mov
repnz
shl
mov
lods
fcmovnb
cmp
push
out
(bad)
cdq
(bad)
xor
outs
or
pusha
xchg
ss
sbb
hlt
cdq
outs
add
shl
fdivr
and
jle
add
push
aad
mov
jg
outs
adc
in
mov
cmp
inc
ins
or
(bad)
(bad)
jmp
les
sbb
xor
dec
or
mov
das
inc
pop
and
mov
(bad)
fcomp
nop
or
out
nop
push
scas
xor
jge
mov
inc
xchg
or
cs
lock
cwde
int
(bad)
scas
outs
mov
popf
dec
ja
cld
jns
pop
add
aam
adc
mov
mov
add
mov
inc
aad
push
pop
add
adc
adc
mov
(bad)
jg
cmps
mov
cmp
jno
fdivr
jae
push
(bad)
(bad)
jmp
jp
cmp
xchg
stos
test
jmp
loopne
sub
lahf
enter
cmp
jnp
mov
inc
sahf
sbb
pop
mov
(bad)
call
or
add
add
push
jge
and
sahf
cmp
(bad)
push
nop
sbb
dec
jmp
push
mov
dec
sbb
mov
out
outs
add
cwde
jns
outs
jmp
pop
cmp
and
loope
(bad)
push
out
cmps
arpl
and
in
mov
sbb
and
(bad)
popf
imul
mov
int
je
inc
pusha
aam
cmp
(bad)
push
and
adc
pop
mov
mov
push
sub
outs
je
push
(bad)
(bad)
(bad)
mov
outs
call
mov
ret
push
out
repz
cs
pop
mov
inc
cmp
add
and
fld
and
sbb
mov
(bad)
(bad)
inc
movsx
scas
cmps
bound
cmp
ja
fsub
call
loope
and
cmps
dec
popf
cmp
and
test
cli
sti
mov
bound
and
sbb
xchg
enter
cmp
sti
idiv
ds
loope
adc
aad
loop
dec
(bad)
cmps
aaa
ss
in
mov
cmp
or
out
fsub
jno
cmp
(bad)
jmp
push
mov
cmc
cmps
test
pop
cld
stc
push
mov
(bad)
daa
(bad)
(bad)
(bad)
(bad)
out
cmp
xor
in
outs
mov
lahf
xchg
sub
rcr
movs
fist
loop
xchg
iret
into
fistp
xchg
and
repnz
add
rcl
lods
mov
or
out
ss
pop
(bad)
(bad)
jmp
enter
loop
out
out
jbe
clc
sti
cli
mov
jno
repnz
jbe
aam
(bad)
jmp
fstp
pop
add
cmp
shl
icebp
dec
pop
and
dec
scas
mov
or
jge
push
fst
test
adc
xchg
(bad)
(bad)
inc
push
xchg
clc
lds
retf
mov
pop
ja
into
push
ja
pushf
sub
(bad)
(bad)
(bad)
dec
or
in
mov
std
push
cmps
arpl
fnstenv
and
(bad)
(bad)
jmp
xor
and
jns
(bad)
cli
mov
cdq
dec
fucomp
div
cdq
leave
mov
fcomip
jb
out
das
jbe
pop
or
popa
adc
or
or
aas
(bad)
(bad)
jg
pop
add
sub
call
leave
dec
xchg
sub
inc
es
(bad)
std
and
jmp
int3
jp
lock
or
sbb
sub
pop
gs
pushf
ins
(bad)
(bad)
(bad)
jmp
pop
fdiv
add
mov
push
inc
test
xchg
mov
(bad)
(bad)
jmp
and
mov
or
mov
xchg
adc
push
cmps
clc
ror
dec
not
scas
(bad)
(bad)
jg
movs
mov
mov
test
mov
adc
and
in
(bad)
jmp
and
add
jne
ror
rcl
jp
(bad)
ss
(bad)
imul
iret
pushf
stc
(bad)
push
std
fild
add
mov
jmp
outs
fmul
hlt
mov
mov
stos
mov
xor
(bad)
or
pop
mov
icebp
(bad)
(bad)
(bad)
call
mov
sahf
movs
fpatan
push
bound
sbb
sub
adc
cmp
mov
cmps
hlt
(bad)
call
sub
push
inc
fs
jbe
lahf
cld
xlat
inc
test
(bad)
(bad)
inc
and
mov
jmp
xchg
xor
dec
or
jecxz
jecxz
nop
lods
lods
cmp
add
and
lods
xchg
add
addr16
mov
cs
stos
inc
xlat
inc
or
je
pop
outs
outs
scas
cmp
push
lahf
(bad)
mov
sbb
dec
dec
dec
lds
inc
dec
jecxz
jge
jge
(bad)
push
fadd
cld
pop
call
out
out
lods
pop
movs
fidivr
cli
(bad)
call
inc
adc
daa
inc
add
xchg
xor
mov
cld
call
hlt
mov
inc
jl
cld
aaa
pop
add
mov
dec
and
fwait
add
sub
xchg
cmc
retf
mov
(bad)
lahf
je
xor
cmps
dec
movs
arpl
data16
repnz
dec
adc
jb
int
enter
jle
clc
out
sbb
xchg
mov
clc
aad
jne
jbe
mov
push
mov
or
shr
fsubr
sti
mov
xor
mov
jp
lock
inc
std
loope
mov
sar
ret
icebp
call
in
fldenv
popa
fwait
les
(bad)
(bad)
(bad)
inc
mov
jns
add
fwait
mov
arpl
mov
adc
imul
sbb
daa
in
fwait
add
js
mov
pusha
dec
xor
sbb
je
dec
es
retf
push
pop
pop
cmp
pusha
adc
test
mov
sub
xor
push
lods
fdiv
add
or
pop
inc
call
lahf
lahf
scas
push
test
int
fwait
adc
(bad)
(bad)
mov
mov
cmp
jns
add
sub
xchg
cmp
mov
cwde
jmp
(bad)
jmp
xchg
pop
fldcw
mov
sub
adc
sahf
inc
or
les
jl
test
call
pop
imul
or
jnp
xchg
mov
daa
inc
or
sbb
mov
pop
jbe
pop
mov
mov
pop
mov
push
sbb
call
add
fistp
and
pop
ror
mov
in
mov
push
stos
mov
mov
(bad)
(bad)
push
lods
sbb
out
mov
aaa
push
scas
aas
fstp
les
or
(bad)
(bad)
inc
inc
jmp
in
fwait
and
jecxz
(bad)
icebp
sbb
xchg
push
sub
jb
ret
icebp
neg
cmp
sbb
cmovne
adc
shl
ret
js
aad
(bad)
sub
sbb
xchg
in
sub
das
mov
(bad)
ins
dec
stc
add
jnp
call
jae
int
cmp
sub
std
fnstenv
push
pop
shl
ins
in
ds
test
outs
popf
add
js
mov
lock
(bad)
jmp
inc
dec
repnz
lods
add
ror
nop
jecxz
mov
and
inc
push
cmp
(bad)
push
and
sub
jnp
loop
sbb
loop
bound
cmp
cld
add
addr16
stos
int
imul
sbb
(bad)
std
and
pop
call
xor
fcmovu
ror
push
into
dec
test
(bad)
(bad)
push
xlat
int
xlat
mov
xchg
popa
inc
mov
pop
lock
nop
bound
pop
push
pop
rol
or
pop
or
mov
(bad)
jmp
ret
dec
xchg
add
push
sub
adc
ret
pop
adc
ins
fiadd
mov
jmp
int3
rcl
aam
fadd
inc
(bad)
fidivr
xchg
daa
dec
out
fdivr
jmp
(bad)
ds
cs
pop
das
sahf
cmp
add
cmp
xor
addr16
mov
cmp
lock
add
jns
jp
nop
xlat
inc
jb
dec
or
(bad)
jmp
dec
ja
pop
and
mov
mov
add
mov
pop
cmp
mov
dec
jl
iret
nop
clc
cmp
pushf
fwait
cmps
imul
mov
xchg
inc
mov
call
inc
(bad)
push
cli
stos
aad
retf
clc
ret
loope
mov
or
(bad)
jmp
push
push
es
(bad)
mov
dec
ja
call
call
(bad)
(bad)
call
pop
repz
shl
sub
sar
fwait
out
std
movs
clc
adc
cmp
lahf
xor
pushf
mov
(bad)
(bad)
std
lea
leave
cmp
daa
xchg
cmp
js
jmp
ins
cmp
std
jl
leave
mov
fist
and
xlat
jmp
outs
add
sti
neg
jne
jae
test
jp
xchg
ins
sub
rcr
inc
push
cmp
inc
push
sbb
jge
xor
(bad)
(bad)
(bad)
jmp
nop
in
mov
out
adc
mov
dec
aaa
inc
mov
push
mov
mov
and
(bad)
dec
jg
shl
xchg
dec
jle
pop
movs
add
(bad)
(bad)
jmp
movs
adc
fistp
pop
cs
retf
dec
int3
neg
aad
(bad)
(bad)
mov
mov
sbb
outs
mov
xchg
xchg
xchg
je
mov
add
fcomp
(bad)
(bad)
out
add
aad
int
int3
xor
int
mov
dec
mov
mov
gs
fnstcw
pop
lahf
or
cwde
arpl
lods
pop
mov
sub
xchg
jp
pop
add
(bad)
(bad)
(bad)
inc
pop
ds
cmp
mov
aam
call
out
jbe
or
popa
cmc
(bad)
(bad)
(bad)
stc
call
(bad)
ficomp
bound
add
iret
rol
xchg
(bad)
call
call
xchg
adc
xchg
les
fsubr
cmc
sub
aam
arpl
cmps
mov
xchg
(bad)
push
xlat
mov
mov
ins
(bad)
daa
ds
push
stos
call
or
lods
add
stc
mov
pop
push
cld
dec
add
jle
sub
push
push
mov
clc
loope
(bad)
(bad)
(bad)
call
ficomp
cmp
(bad)
xchg
hlt
in
pop
xor
pop
mov
add
xchg
pop
dec
mov
fidiv
in
adc
call
xor
popa
cdq
pop
ins
js
sbb
jle
cli
(bad)
call
inc
nop
mov
std
daa
(bad)
fprem
pop
ret
std
pop
ss
fstp
dec
push
or
arpl
test
idiv
ss
or
dec
inc
mov
or
popa
add
cdq
test
add
add
lock
test
jo
mov
stc
inc
mov
cmps
fwait
adc
add
fnstsw
pop
add
fadd
adc
pop
out
rcr
sbb
mov
jbe
mov
jl
(bad)
(bad)
(bad)
call
add
jne
scas
cli
or
(bad)
or
out
or
adc
push
lds
and
mov
cdq
dec
dec
xor
push
mov
cmp
dec
jae
stc
dec
popa
cmp
jmp
add
js
jno
push
cmp
movs
xchg
test
(bad)
call
in
lock
aas
mov
sahf
mov
cli
sbb
jmp
lahf
add
mov
push
sub
(bad)
cmp
sub
mov
pop
dec
(bad)
(bad)
call
(bad)
(bad)
pop
push
scas
cmp
xchg
push
jg
cmc
rcr
push
ins
ss
pop
pop
ret
mov
and
ret
and
ret
retf
stos
xchg
(bad)
(bad)
inc
ror
sbb
sbb
ins
mov
sbb
xor
push
push
loopne
hlt
pop
mov
cmc
outs
inc
adc
and
mov
ja
fcomi
call
mov
popf
je
xchg
sti
mov
arpl
retf
add
mov
in
(bad)
push
xchg
(bad)
xor
add
mov
dec
jo
add
and
mov
stos
out
add
into
xchg
shl
(bad)
pop
loopne
adc
test
repnz
push
outs
imul
std
or
(bad)
xor
xchg
sub
js
out
fwait
imul
pop
add
cmc
(bad)
(bad)
(bad)
push
imul
les
jbe
retf
out
mov
push
lock
push
out
sti
pop
inc
call
call
or
pop
cld
leave
scas
sub
jbe
add
pop
sti
add
sar
(bad)
(bad)
(bad)
jnp
lahf
fisub
sbb
ret
dec
fsub
jmp
repz
fdivr
cmp
daa
jmp
test
sub
jmp
inc
neg
pop
dec
mov
xchg
(bad)
leave
xchg
xchg
clc
lock
test
call
mov
jg
dec
loope
sub
adc
fistp
stos
sbb
inc
jnp
ds
push
test
mov
mov
cmp
hlt
ja
shl
aam
lock
jbe
stc
sbb
leave
int3
test
outs
sbb
xor
stc
movs
jmp
xor
outs
(bad)
push
xor
gs
jecxz
jae
in
push
addr16
inc
(bad)
sti
jg
push
scas
jns
mov
gs
xchg
into
push
enter
mov
arpl
int3
aam
mov
mov
fcmovnbe
xchg
repnz
push
ss
inc
mov
mov
in
cmps
pusha
fs
mov
sbb
fild
movs
jae
fs
push
loop
int3
add
pop
loopne
xchg
(bad)
int
clc
jbe
fst
js
sbb
cmp
jg
into
enter
push
aad
push
fs
(bad)
shr
mov
and
xchg
sbb
std
outs
jg
cmps
int
jmp
sahf
data16
xchg
in
jbe
adc
stc
(bad)
call
out
push
(bad)
push
mov
fwait
mov
jmp
sub
sub
pushf
mov
into
pusha
xchg
in
mov
test
mov
mov
push
(bad)
enter
jle
out
pop
cmp
test
add
mov
and
add
xor
add
add
sub
mov
or
add
ins
iret
push
cmp
call
add
ins
jae
jb
outs
inc
push
arpl
rol
add
jge
ins
in
imul
pop
adc
pop
in
arpl
imul
jb
mov
and
pusha
sar
mov
popa
inc
jns
push
popa
inc
pushf
push
mov
movs
jne
(bad)
fdiv
dec
jo
jae
xor
jb
jne
pop
dec
les
dec
pop
xchg
and
sbb
cmp
adc
pop
daa
dec
enter
ja
mov
push
mov
push
jmp
or
jp
mov
pop
iret
loopne
ins
outs
popw
inc
outs
fs
sub
fcom
adc
lock
mov
and
add
xchg
xor
sbb
(bad)
cmp
mov
and
imul
outs
jnp
xchg
test
sbb
imul
outs
inc
xchg
xor
stc
and
push
and
sbb
dec
pop
push
enter
and
sbb
add
dec
lods
fld
sahf
test
and
jns
inc
fmul
xor
dec
xchg
inc
gs
jecxz
xchg
xor
mov
test
sbb
pop
ror
lock
sub
push
cmp
sbb
push
popa
inc
mov
pop
jb
mov
cwde
jns
dec
push
outs
dec
sbb
sub
and
ret
mov
fild
std
xchg
push
outs
ins
les
push
pop
sbb
sub
lds
dec
dec
daa
mov
pop
lods
pop
add
outs
ins
push
and
push
lods
and
or
fsub
jge
or
adc
or
sbb
adc
cmp
dec
inc
dec
inc
daa
push
stos
imul
loop
rcr
pop
and
push
and
dec
call
inc
fistp
or
inc
xchg
mov
in
xchg
pop
test
pop
pop
and
sub
inc
push
pop
fucomi
mov
xor
dec
iret
add
pop
ret
adc
ins
stos
call
mov
call
cmp
fs
and
popa
inc
jmp
jl
inc
pop
lea
mov
js
and
sbb
test
xor
dec
fs
add
pusha
and
dec
sub
jno
fs
xchg
add
adc
enter
push
add
rol
and
jmp
rol
inc
cmp
icebp
inc
or
push
ins
imul
test
dec
push
add
xor
lods
xor
ins
sbb
or
push
mov
cmp
imul
leave
mov
push
sbb
jecxz
sbb
jns
and
mov
xlat
dec
sahf
gs
fadd
sub
pop
lds
or
sbb
add
and
pop
sub
inc
xchg
popf
out
xor
shl
add
cmp
sbb
ins
sbb
sbb
cmp
xchg
adc
pop
aaa
sub
mov
xor
or
cwde
retf
scas
adc
push
cmc
jns
les
inc
sub
out
stc
ins
or
xchg
pop
push
ins
lods
push
lods
pusha
in
mov
shl
aam
pop
adc
push
xchg
lods
mov
pusha
push
adc
push
stos
pusha
adc
inc
imul
dec
sbb
mov
dec
in
sbb
fwait
mov
ret
cs
push
je
ja
pop
gs
mov
(bad)
loop
inc
mov
sahf
retf
push
fimul
enter
sbb
stos
loope
and
pop
xchg
repnz
sti
push
mov
inc
pop
addr16
inc
or
test
gs
inc
in
movs
jp
xor
push
cmp
rcr
pop
xchg
pop
or
enter
xchg
imul
mov
pop
and
ret
enter
das
iret
fmul
adc
jmp
xor
pushf
mov
out
jmp
xor
je
adc
mov
adc
push
call
dec
sub
maxps
cmp
adc
stos
sub
sbb
inc
inc
pop
add
push
pop
sbb
stos
dec
mov
sub
cmp
sahf
hlt
outs
enter
or
loopne
dec
loopne
outs
shl
and
add
popf
sub
das
and
inc
xor
lahf
push
dec
ins
and
in
ja
and
add
lea
xchg
lock
push
dec
sbb
bound
add
adc
and
sub
cmp
sub
dec
(bad)
push
xchg
or
sbb
mov
jb
int3
pop
fwait
xlat
adc
fstp
repnz
gs
loopne
ins
inc
test
in
push
test
mov
sti
adc
push
dec
push
xor
fwait
push
std
pop
aas
adc
jo
push
inc
inc
movs
push
xor
ret
idiv
and
push
jmp
pusha
or
jp
dec
sbb
repz
inc
inc
cmp
xor
push
dec
scas
ins
adc
sbb
jb
or
outs
adc
sub
cld
xchg
xchg
test
jnp
sar
cmp
push
push
cld
es
bound
jae
cs
xchg
fiadd
inc
inc
dec
xchg
loope
inc
fild
(bad)
arpl
cmps
xchg
sbb
sets
sub
xor
push
test
xchg
pop
add
add
or
add
test
xor
mov
gs
adc
ret
inc
cmps
inc
add
cmp
sub
iret
pop
add
jne
es
aaa
mov
xor
and
add
(bad)
mov
std
repz
mov
scas
ins
retf
imul
pop
cwde
popaw
rol
or
pusha
lea
arpl
movs
mov
inc
int3
js
mov
ins
sbb
sbb
mov
pop
fadd
test
jmp
mov
lea
cmp
int
xor
data16
sub
inc
mov
rol
(bad)
pop
jo
mov
daa
arpl
adc
jo
jnp
xor
outs
jo
cmp
and
loope
imul
lds
rol
inc
pop
sar
shr
jbe
rol
(bad)
and
xor
out
outs
dec
nop
add
pop
das
xor
mov
mov
adc
mov
xchg
sub
es
inc
add
aam
rcl
lods
mov
dec
push
dec
inc
xchg
stos
mov
fcmove
adc
mov
sti
xor
jno
in
push
mov
lahf
pop
rcr
sub
jl
or
push
pushf
sbb
in
sub
dec
cwde
imul
xchg
pop
pop
sbb
aaa
jbe
mov
xchg
and
jecxz
add
test
pushf
sbb
enter
cmp
(bad)
sbb
mov
or
shl
pop
push
dec
lods
jge
xor
es
pusha
jne
daa
dec
adc
inc
inc
add
test
aas
and
cmps
dec
xchg
adc
adc
jae
jno
stos
sbb
dec
dec
retf
push
jo
popf
and
cmc
mov
push
in
or
arpl
add
mov
repnz
loop
and
jbe
ja
mov
mov
mov
popa
mov
xchg
jo
lea
pop
xor
jmp
pop
push
cld
push
and
shl
sbb
add
inc
retf
loopne
jnp
pop
push
adc
js
call
test
add
inc
mov
sbb
push
jo
adc
xchg
mov
mov
imul
add
cmp
in
outs
mov
adc
sbb
(bad)
ins
sub
adc
jmp
test
dec
xor
cdq
mov
pop
add
jge
shl
sbb
sub
fadd
imul
and
pusha
push
popaw
dec
arpl
repnz
mov
xchg
push
mov
imul
(bad)
jge
fwait
adc
xchg
xor
outs
pop
mov
pop
iret
and
or
sub
dec
sub
sub
xor
push
imul
movs
pusha
ss
je
test
movs
push
inc
ss
or
push
sub
sbb
mov
jge
mov
and
add
rcr
dec
pop
fld
push
ds
mov
or
daa
push
lahf
cmps
sbb
pop
shr
mov
cdq
push
add
mov
inc
xchg
daa
push
jne
imul
and
inc
outs
sbb
test
aaa
add
sbb
adc
icebp
les
test
push
add
test
sub
ret
push
and
test
imul
jbe
mov
mov
add
dec
inc
jb
pop
fld
pop
adc
fcomp
jns
dec
imul
adc
sbb
cmp
pop
mov
adc
fcomp
mov
push
iret
xor
jbe
ins
test
mov
push
mov
mov
xor
push
and
lock
sbb
ja
inc
add
inc
ror
xlat
mov
pop
jno
inc
aam
ins
and
rcl
xchg
and
inc
sbb
add
sbb
pusha
cmp
push
pop
inc
(bad)
xor
cmc
inc
pop
sub
pop
fimul
ins
pop
fwait
sbb
push
cmps
jmp
mov
sbb
dec
sbb
pop
sar
xchg
inc
imul
leave
inc
push
dec
xor
add
popf
or
in
jno
enter
inc
sbb
out
xor
stc
add
xchg
mov
pop
and
sub
xlat
test
mov
movs
mov
add
or
ja
(bad)
nop
cwde
mov
js
scas
add
xchg
sbb
pop
ins
mov
sub
das
xor
dec
int3
popa
aad
movs
or
xor
xchg
add
ret
inc
push
mov
sbb
xchg
jns
mov
ins
imul
mov
sbb
dec
es
pop
in
and
xor
je
fs
pop
or
fild
sub
fistp
push
ss
xor
jg
fiadd
sbb
loop
fild
sbb
xor
and
jmp
fist
pop
rcr
aas
push
sub
or
xchg
pop
dec
add
btr
adc
dec
xchg
loope
and
ja
pop
loope
adc
outs
mov
gs
fs
xchg
push
cwde
dec
cmp
sub
imul
dec
adc
(bad)
push
inc
add
mov
addr16
pop
iret
(bad)
or
gs
add
mov
or
sbb
mov
or
jbe
cmp
loopne
inc
enter
inc
pop
loopne
(bad)
call
dec
add
add
push
clc
pop
pop
lods
scas
sbb
jns
xchg
das
or
adc
push
inc
pop
test
pop
sbb
ret
cmp
adc
xchg
pop
es
pop
add
in
leave
outs
pusha
sbb
add
add
sbb
push
daa
add
in
sbb
sbb
test
shr
mov
je
push
cmp
and
ins
mov
jbe
add
push
pusha
imul
add
es
jp
dec
outs
clc
into
mov
inc
movs
jae
pop
sti
push
mov
bound
pop
dec
in
enter
xor
inc
pop
icebp
dec
dec
fiadd
ror
mov
xchg
pop
lahf
je
cmp
sbb
and
add
mov
gs
mov
sub
add
lds
jb
addr16
sbb
in
mov
lahf
add
call
sbb
adc
add
push
inc
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
ror
pop
add
(bad)
push
