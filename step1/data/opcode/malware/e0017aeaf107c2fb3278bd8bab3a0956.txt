push
mov
add
add
add
add
add
add
add
add
add
add
push
shl
add
shr
add
sub
add
sub
add
xor
cmp
add
add
add
add
pop
lea
add
add
push
or
or
pop
add
xchg
pushf
pop
pop
pop
or
add
or
push
push
add
or
or
add
sub
push
sub
add
xor
sbb
add
add
add
add
add
or
push
add
add
or
pop
add
outs
add
add
sub
add
add
add
add
add
add
add
push
sub
add
xor
add
add
add
add
push
lea
add
add
jb
add
jo
xor
add
pop
lea
add
add
or
or
sbb
adc
adc
add
es
add
jo
add
add
sub
add
or
add
jo
adc
add
je
add
add
add
or
jb
add
jo
fild
add
pop
lea
add
add
or
out
add
jo
adc
push
je
add
sbb
cdq
add
jo
fild
add
pop
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
push
je
add
sbb
jo
fild
add
pop
lea
add
add
movups
push
jb
add
jo
adc
sub
add
push
je
add
sbb
add
adc
add
jo
fild
add
pop
lea
add
add
adc
adc
jb
add
jo
retf
add
jo
pop
lea
add
add
adc
adc
adc
add
add
push
mov
add
push
je
add
sbb
push
push
adc
sub
add
push
or
add
adc
mov
jo
lea
add
add
push
add
push
je
add
add
pop
adc
jb
add
jo
sub
pop
jb
add
jo
add
add
pop
sub
add
adc
adc
push
sub
jb
add
jo
jnp
add
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
or
add
jo
or
adc
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
lahf
add
jo
adc
sbb
jo
adc
push
jb
add
jo
adc
pop
or
add
jo
adc
sub
add
or
adc
add
je
add
add
or
add
jo
sbb
sldt
add
adc
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jo
adc
jb
add
jo
adc
or
add
jo
adc
or
add
jo
adc
or
add
jo
adc
or
mov
adc
or
jo
adc
push
jb
add
jo
adc
(bad)
lahf
add
jo
adc
adc
add
jo
adc
adc
add
jo
adc
adc
add
jo
adc
adc
add
jo
adc
adc
pop
add
adc
adc
jo
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
or
add
jb
add
jo
or
lea
add
add
adc
sub
add
push
mov
add
push
ficom
adc
adc
outs
or
add
sub
add
or
fiadd
sub
add
add
pusha
add
add
add
adc
add
or
add
adc
add
adc
add
add
add
jae
add
or
push
add
add
or
outs
push
add
or
push
sub
add
sub
add
add
add
or
adc
or
inc
add
add
add
add
add
jo
lea
add
add
push
push
jb
add
jo
push
pop
jb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sub
add
or
adc
add
movs
or
adc
add
sub
add
sub
add
sub
add
sub
add
xor
add
add
adc
sub
add
or
outs
adc
add
or
adc
adc
adc
std
add
jo
adc
add
je
add
add
sub
add
or
or
outs
add
add
jb
add
jo
lea
add
add
push
adc
push
add
adc
pop
add
lea
add
add
pop
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
adc
adc
sub
add
or
add
add
adc
xor
add
adc
add
add
dec
add
add
add
push
sub
add
xor
add
add
add
add
adc
outs
add
add
or
add
add
or
pop
add
adc
add
sub
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
retf
outs
push
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
pop
push
jns
je
ins
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
sti
pusha
pop
adc
call
sub
mov
test
dec
inc
mov
mov
(bad)
aam
stc
nop
lea
xchg
mov
fdivr
sahf
cmp
jecxz
pop
inc
xchg
test
out
das
scas
or
clc
push
mov
lods
aad
(bad)
test
sbb
int
test
xchg
fcmovb
cmp
jecxz
dec
loope
mov
push
loop
(bad)
or
retf
mov
and
popa
inc
and
stos
xor
clc
hlt
and
(bad)
stos
scas
bound
retf
add
mov
add
add
pop
(bad)
in
push
or
inc
push
lock
in
jnp
adc
daa
outs
data16
cs
sar
push
ja
xor
and
fidivr
and
sahf
cmp
pop
jne
dec
lods
add
dec
mov
ret
jecxz
int3
pop
leave
bound
mov
push
ins
push
in
js
add
js
push
fcom
jne
pop
mov
add
sldt
fiadd
add
dec
or
add
or
add
or
add
fimul
add
add
mov
add
xchg
or
add
or
add
enter
adc
add
or
adc
add
add
stos
add
add
add
add
add
add
sldt
cmp
add
and
add
xchg
or
add
arpl
add
xchg
add
add
add
add
add
add
jg
add
pop
push
add
push
adc
add
add
mov
pop
add
(bad)
push
add
aaa
add
add
add
add
inc
add
femms
add
mov
add
fld
add
pop
or
add
add
dec
sldt
ins
pop
add
add
add
fwait
or
add
or
add
or
add
add
adc
add
pop
or
add
pop
add
loope
add
data16
add
push
add
jecxz
add
mov
add
push
add
add
xor
dec
dec
imul
dec
sub
dec
or
dec
jo
or
dec
adc
dec
and
dec
or
dec
push
dec
adc
dec
and
add
add
add
dec
inc
dec
pop
dec
push
dec
or
dec
ins
dec
pop
dec
es
dec
dec
cmovle
dec
xor
dec
push
dec
and
dec
or
addr16
fisubr
add
sub
dec
or
jle
inc
dec
jns
sub
dec
and
dec
das
dec
adc
dec
pop
dec
sbb
dec
je
sbb
dec
jge
and
add
inc
pop
dec
cmp
dec
or
push
dec
ss
and
popa
dec
pop
dec
dec
inc
dec
and
dec
and
dec
sbb
dec
jge
cmp
dec
xor
dec
pop
dec
inc
dec
jp
cmovle
and
dec
adc
jle
add
pop
dec
outs
dec
xor
dec
dec
dec
and
dec
fs
popa
dec
adc
dec
jle
gs
inc
dec
inc
dec
pop
dec
dec
dec
push
dec
ja
dec
dec
pop
dec
jae
bsr
add
dec
addr16
jle
or
dec
and
dec
jg
and
dec
sbb
dec
cmp
dec
dec
dec
addr16
imul
dec
dec
daa
dec
adc
dec
dec
dec
cs
lods
cli
add
sub
dec
add
dec
pop
dec
inc
dec
pop
dec
sub
dec
cmp
dec
aaa
dec
das
dec
inc
dec
outs
dec
jbe
pop
dec
adc
dec
jg
dec
dec
sub
dec
and
cmp
dec
adc
jge
outs
dec
or
dec
cmovle
sub
dec
pop
dec
or
dec
gs
and
add
adc
dec
adc
dec
jg
xor
dec
and
dec
adc
dec
push
dec
inc
dec
aaa
dec
pop
dec
xor
dec
push
dec
dec
dec
cmp
dec
jae
cmp
dec
sub
pushf
add
adc
dec
arpl
dec
sub
dec
pop
dec
bound
dec
bound
dec
cmp
dec
jg
gs
inc
dec
push
dec
cmp
dec
jg
adc
dec
cmp
dec
or
add
dec
dec
dec
imul
es
pop
dec
jle
daa
dec
push
dec
dec
dec
push
dec
and
dec
add
sbb
es
dec
dec
jns
push
dec
ss
pop
dec
jae
pop
dec
outs
dec
outs
dec
push
dec
push
dec
push
dec
sub
dec
inc
dec
and
or
cmp
add
dec
adc
dec
pop
dec
cmovle
dec
inc
dec
add
dec
jno
or
dec
pop
dec
dec
dec
push
dec
push
dec
arpl
dec
jno
inc
dec
sbb
dec
adc
dec
pop
dec
xor
fs
sbb
inc
dec
add
dec
xor
dec
pop
dec
dec
dec
add
add
dec
or
dec
cmp
dec
xor
dec
inc
dec
pop
dec
add
dec
or
dec
imul
dec
sub
dec
dec
dec
jnp
add
dec
dec
dec
sub
add
dec
jg
dec
dec
jl
add
dec
stos
add
add
dec
sbb
dec
sbb
dec
cmp
dec
and
dec
das
dec
sub
dec
push
dec
imul
and
dec
dec
xor
dec
dec
dec
push
dec
push
dec
je
pop
dec
inc
dec
cmp
add
sub
dec
push
dec
fs
jno
pop
dec
push
dec
pop
dec
jp
das
dec
adc
jb
sub
add
dec
sbb
add
dec
inc
dec
push
dec
xor
dec
ror
add
sbb
dec
jb
dec
add
dec
push
dec
pop
dec
sbb
dec
dec
add
pop
dec
sbb
dec
dec
dec
push
dec
push
dec
sub
dec
jb
push
dec
add
ja
arpl
dec
pop
pop
add
xor
dec
pop
dec
sbb
aas
dec
push
dec
and
dec
pop
dec
jne
dec
dec
jno
or
dec
push
dec
pop
dec
sbb
dec
add
dec
or
dec
arpl
dec
ss
pop
xchg
add
sub
dec
arpl
dec
je
sub
dec
add
dec
and
dec
sub
dec
dec
dec
inc
dec
popa
dec
push
dec
dec
dec
jb
dec
dec
dec
dec
daa
dec
cmp
add
sub
dec
dec
dec
jg
or
je
sbb
sub
dec
inc
dec
add
dec
and
dec
ins
dec
outs
dec
push
dec
jle
sbb
inc
sbb
dec
pop
dec
arpl
dec
push
dec
dec
dec
jne
xor
dec
inc
dec
and
dec
xor
dec
adc
dec
inc
dec
gs
aas
dec
pop
dec
push
dec
ss
jg
daa
dec
imul
sub
and
dec
adc
dec
push
add
dec
and
dec
or
xor
dec
push
and
dec
push
dec
xor
dec
jp
dec
dec
and
sub
xor
dec
aas
dec
jo
jle
cmp
dec
das
dec
sub
dec
or
dec
bound
dec
es
add
dec
sbb
dec
adc
and
dec
ja
aas
dec
dec
dec
dec
dec
ja
sbb
dec
cmovle
dec
adc
dec
jne
pop
dec
jae
push
dec
cmovle
cmp
dec
and
dec
or
dec
pop
dec
sub
dec
bound
enter
and
dec
ds
jo
xor
dec
sbb
es
dec
dec
jno
cmovle
dec
sub
aas
dec
ds
xor
dec
outs
dec
bound
dec
sbb
dec
add
dec
jg
sub
dec
inc
dec
bound
dec
bound
dec
push
dec
sbb
repz
dec
sub
dec
pop
dec
fs
outs
dec
xor
dec
inc
dec
or
dec
xor
xor
dec
sbb
dec
push
dec
adc
dec
inc
dec
inc
dec
add
dec
push
dec
inc
dec
sub
dec
adc
dec
cmp
dec
push
dec
push
dec
push
dec
cmp
dec
dec
dec
xor
pop
dec
clc
sub
jl
dec
dec
ins
dec
pop
dec
imul
dec
adc
dec
jno
dec
dec
outs
dec
jnp
sub
dec
jp
push
dec
jae
jbe
cmp
dec
dec
dec
sub
pop
add
das
dec
dec
dec
adc
dec
bound
dec
push
dec
jle
pop
dec
cmp
dec
push
dec
push
dec
jns
pop
dec
inc
dec
outs
dec
add
push
ins
dec
or
dec
dec
dec
ja
add
cmp
dec
inc
dec
inc
dec
addr16
sbb
adc
dec
dec
dec
pop
dec
jl
mov
add
dec
dec
es
cmp
dec
adc
dec
push
dec
add
dec
jg
jle
jp
pop
dec
popa
dec
jnp
add
dec
aas
dec
push
dec
inc
dec
xor
dec
cmp
push
dec
arpl
dec
push
dec
jbe
dec
dec
jle
add
push
dec
sub
dec
jbe
push
dec
adc
dec
or
dec
add
dec
cmp
dec
adc
pop
dec
and
dec
dec
dec
and
dec
pop
inc
outs
dec
cs
pusha
dec
dec
dec
add
dec
add
dec
inc
dec
adc
xor
dec
cmovle
dec
xor
push
dec
jl
cmp
cmc
cmp
dec
cmp
dec
cmovle
adc
sbb
dec
xor
dec
daa
dec
and
dec
sbb
dec
dec
inc
dec
cmp
dec
add
dec
push
dec
pop
dec
jp
inc
dec
sbb
dec
sub
dec
ins
dec
jg
cs
xor
dec
or
dec
mov
dec
add
dec
outs
dec
ja
es
jns
jl
jge
jle
outs
dec
add
dec
pop
dec
imul
dec
addr16
add
dec
pop
dec
push
dec
jo
push
jge
jne
scas
rol
inc
xor
dec
or
imul
dec
push
dec
push
dec
inc
dec
pop
dec
or
dec
push
dec
sbb
dec
inc
dec
jl
inc
dec
aaa
dec
and
adc
dec
je
imul
sub
dec
or
add
dec
sub
dec
cs
inc
dec
and
dec
cmp
dec
cmovle
dec
ja
bound
dec
and
dec
jge
sbb
dec
pop
dec
sub
dec
sbb
dec
jno
adc
cmp
dec
add
dec
pusha
dec
aas
dec
outs
cmp
add
ins
dec
pop
dec
pop
dec
dec
dec
sub
dec
jge
add
jp
xor
dec
dec
dec
push
dec
dec
dec
push
dec
ss
or
dec
sub
and
dec
ins
dec
push
dec
dec
dec
ss
pop
dec
inc
dec
gs
xor
dec
dec
dec
push
dec
(bad)
add
dec
jbe
sub
dec
popa
dec
dec
dec
xor
dec
xor
dec
je
sbb
dec
pop
dec
sbb
dec
cmp
adc
dec
xor
dec
jb
popa
dec
bound
dec
or
dec
dec
adc
dec
sub
dec
ins
dec
xor
dec
das
dec
cmp
cmp
cmovle
dec
and
dec
dec
push
dec
adc
dec
push
dec
imul
pop
dec
dec
dec
ss
xor
pop
dec
js
push
dec
outs
dec
fs
outs
dec
pop
dec
sbb
dec
jne
and
dec
sub
dec
jl
and
add
sub
dec
inc
dec
add
dec
inc
dec
dec
dec
or
dec
pusha
dec
sub
dec
dec
dec
inc
dec
pop
dec
push
dec
cmovle
dec
sbb
dec
sbb
dec
sub
dec
ja
push
addr16
jb
adc
xlat
adc
add
inc
dec
add
dec
cmp
dec
adc
dec
or
dec
arpl
dec
pop
dec
push
dec
aas
dec
jge
jle
dec
dec
and
dec
cmp
dec
jg
or
dec
adc
dec
dec
arpl
dec
in
push
or
sub
bound
dec
push
dec
push
dec
push
dec
jns
sbb
dec
add
dec
or
dec
xor
dec
arpl
dec
xor
jg
add
inc
dec
and
dec
jo
sub
dec
popa
dec
inc
dec
push
dec
arpl
dec
inc
dec
daa
dec
adc
dec
pop
dec
cs
cmp
dec
pusha
dec
or
dec
inc
dec
ja
jno
jl
repz
or
inc
inc
dec
jp
push
dec
adc
dec
push
dec
ss
or
dec
ja
jno
inc
dec
sub
and
dec
pop
dec
or
dec
js
jl
jns
add
dec
add
dec
jae
es
push
and
dec
and
dec
push
dec
aaa
dec
mov
inc
dec
jge
ds
cmp
dec
adc
dec
pop
dec
adc
dec
sbb
xor
dec
push
dec
sub
dec
inc
dec
inc
dec
add
dec
inc
dec
and
dec
mov
or
xor
jle
cmp
gs
pop
dec
pop
dec
sbb
dec
addr16
jnp
jb
inc
dec
jae
cmp
dec
jb
js
or
dec
inc
dec
add
dec
cs
pop
dec
jno
or
cmp
jge
and
dec
sub
dec
dec
dec
gs
jno
push
jb
and
outs
dec
jns
sbb
pop
dec
dec
dec
cs
sbb
dec
cmp
dec
inc
dec
push
dec
cmp
dec
dec
add
or
inc
dec
dec
jle
jle
dec
dec
fs
push
dec
jge
add
dec
adc
adc
dec
ja
arpl
dec
ja
jno
push
dec
pop
dec
jbe
ja
dec
dec
push
dec
inc
dec
jp
xor
dec
ins
dec
dec
dec
outs
dec
push
dec
inc
dec
sbb
or
dec
dec
dec
add
dec
jno
push
dec
jo
cmp
dec
push
dec
push
dec
daa
dec
ds
add
dec
push
dec
inc
dec
and
jp
inc
dec
adc
dec
pop
dec
ins
dec
push
dec
cs
jle
js
pop
dec
xor
dec
dec
dec
or
dec
inc
dec
dec
dec
cmp
dec
mov
dec
dec
sub
dec
pop
dec
sub
inc
dec
jo
jl
pop
dec
cmp
dec
fs
and
dec
inc
dec
jp
ja
sub
dec
add
dec
es
push
dec
adc
dec
inc
dec
ins
dec
cs
sbb
dec
dec
dec
adc
aaa
dec
and
dec
push
dec
or
dec
dec
dec
jg
sbb
dec
cmp
dec
outs
dec
add
pop
dec
cmp
dec
push
dec
push
dec
ds
sbb
dec
inc
dec
jns
pop
dec
and
dec
sahf
xchg
add
push
dec
push
dec
ss
push
dec
push
dec
cmp
dec
pop
dec
sub
dec
add
dec
jo
and
dec
add
dec
cmp
dec
xor
push
dec
loopne
or
inc
push
dec
sbb
dec
jbe
inc
dec
add
dec
sbb
dec
xor
dec
sbb
dec
aaa
dec
sub
dec
push
dec
sbb
dec
xor
dec
push
dec
pop
dec
bound
dec
push
dec
or
dec
push
dec
cmp
loope
add
dec
jne
sbb
ds
cs
es
adc
dec
adc
dec
sub
dec
jae
inc
dec
cmp
dec
pop
dec
sbb
push
dec
or
push
dec
sbb
dec
ins
dec
jle
inc
dec
addr16
jg
ja
adc
dec
add
adc
dec
and
jo
jg
jo
push
dec
xor
dec
dec
dec
adc
dec
adc
dec
pop
dec
adc
dec
and
dec
add
dec
push
dec
sub
dec
pop
dec
enter
cmp
dec
jbe
jb
push
dec
jne
add
dec
xor
dec
jle
adc
push
dec
imul
dec
and
dec
dec
dec
inc
dec
jle
cmp
dec
inc
dec
push
dec
sub
inc
or
bound
dec
sub
dec
add
dec
and
dec
xor
dec
dec
dec
sbb
dec
jbe
cmovle
dec
popa
dec
outs
dec
and
dec
sbb
pop
dec
cmovle
dec
dec
dec
bound
dec
fnstenv
add
gs
jbe
ds
je
das
dec
pop
dec
jbe
or
dec
push
dec
inc
dec
cmp
dec
aas
dec
add
dec
push
dec
addr16
xor
dec
and
dec
and
mov
add
dec
pop
dec
xor
dec
inc
dec
inc
dec
pop
dec
sub
dec
pop
dec
push
dec
pop
dec
sub
dec
jb
dec
dec
cmp
dec
imul
and
dec
xchg
retf
or
inc
push
cmp
pop
dec
xor
dec
jne
push
dec
dec
dec
das
dec
pop
dec
jge
and
dec
or
dec
je
add
inc
dec
add
dec
jl
and
ds
inc
dec
add
dec
jge
and
dec
bound
dec
ja
ret
add
inc
dec
adc
dec
jge
pop
dec
push
dec
sub
dec
push
dec
dec
dec
dec
dec
xor
dec
inc
dec
push
dec
and
dec
or
dec
sbb
dec
pop
dec
pop
dec
add
dec
push
dec
add
dec
cmp
dec
pop
dec
inc
dec
add
outs
dec
dec
dec
push
dec
pop
dec
pop
dec
dec
adc
dec
bound
dec
pop
dec
adc
dec
ja
sub
dec
ja
dec
dec
adc
dec
inc
dec
adc
dec
adc
js
add
jae
arpl
dec
jo
sub
dec
pop
dec
and
dec
pop
dec
adc
dec
sbb
dec
pop
dec
and
add
dec
sbb
stos
or
dec
jae
fs
inc
dec
cmp
dec
sbb
dec
or
imul
push
dec
and
dec
xor
dec
pop
dec
pop
dec
pop
dec
pop
dec
cmp
dec
push
dec
inc
dec
pop
dec
pop
dec
dec
dec
dec
dec
sbb
dec
outs
dec
push
add
dec
jb
jne
sub
jmp
add
jbe
push
dec
add
pop
dec
or
dec
or
dec
push
dec
pop
dec
jns
ins
dec
sbb
dec
sbb
dec
cmp
and
dec
sub
dec
sub
dec
jle
je
sub
dec
jl
mov
or
xor
sub
dec
gs
push
dec
imul
or
dec
cmp
dec
and
dec
xor
dec
pop
dec
xor
dec
xor
dec
xor
dec
sbb
dec
adc
enter
cmp
pop
dec
jo
push
dec
jnp
push
dec
push
dec
or
dec
pop
dec
adc
imul
dec
addr16
aas
dec
jl
push
dec
jge
sbb
dec
and
dec
pop
dec
pop
dec
jbe
or
push
dec
add
dec
push
dec
adc
dec
push
dec
push
dec
pop
dec
dec
dec
pop
dec
dec
dec
dec
dec
push
cmp
dec
sub
dec
popa
dec
jbe
dec
outs
dec
inc
dec
outs
dec
or
je
popa
dec
or
dec
or
add
dec
sbb
dec
inc
dec
dec
dec
cmovle
dec
je
gs
and
dec
pop
dec
sbb
dec
sub
and
dec
inc
dec
push
dec
ss
and
dec
or
jbe
dec
gs
push
dec
dec
dec
adc
dec
dec
dec
push
push
add
dec
das
dec
sbb
dec
sbb
dec
jo
add
dec
sbb
dec
cmovle
dec
ja
inc
dec
adc
dec
push
dec
add
dec
inc
dec
sub
dec
add
dec
push
dec
jl
popa
dec
and
dec
push
dec
inc
dec
cmc
pop
push
add
aad
add
in
in
fdivr
in
cdq
cmp
cld
and
call
xchg
push
dec
in
fstp
fstp
inc
inc
popf
shl
int3
jne
dec
xchg
lock
out
push
rol
jbe
push
dec
es
pop
arpl
sti
stos
in
fild
iret
lods
push
adc
fnsave
(bad)
jl
out
rcl
mov
cmp
test
sub
lahf
xor
push
add
leave
rep
add
mov
push
push
xlat
mov
jne
pop
or
retf
pop
adc
cdq
stos
and
jmp
xor
shl
sti
xor
mov
mov
pop
xorps
es
jmp
inc
(bad)
sbb
dec
jl
inc
mov
sar
clc
pop
shl
and
pop
or
add
aaa
xchg
push
jb
dec
push
(bad)
jge
mov
sbb
sbb
call
xchg
inc
mov
dec
std
sub
addr16
test
jo
mov
push
sbb
bound
or
xor
xor
jg
mov
scas
out
adc
jno
or
ret
out
js
ja
cmps
int3
mov
sar
xchg
mov
in
imul
pop
add
into
jmp
jns
add
sub
adc
xchg
jns
pop
gs
pop
xor
mov
lock
sbb
sub
loop
cmp
pusha
out
pop
xchg
and
ret
mov
xchg
inc
loope
pop
repz
sub
sbb
stos
adc
xlat
mov
mov
adc
xor
mov
inc
jne
ja
sub
mov
add
adc
daa
neg
mov
sbb
adc
outs
jmp
sar
repz
(bad)
scas
add
jnp
fnstsw
loope
stos
and
fcom
in
leave
or
scas
add
dec
mov
mov
gs
aad
lahf
lds
mov
dec
mov
xchg
ds
xor
mov
pop
push
call
mov
cmp
xor
jo
mov
gs
loopne
jb
jb
lahf
(bad)
repnz
(bad)
fwait
pop
jns
(bad)
or
and
adc
(bad)
shr
dec
xor
jbe
das
cmp
mov
cli
push
push
xlat
cmp
scas
push
(bad)
test
movs
(bad)
sbb
fisttp
cdq
out
xchg
add
adc
int3
std
jnp
push
and
and
fnstcw
cmp
pop
test
int3
pop
lods
push
jae
jbe
loope
repnz
xlat
je
mov
nop
ret
push
jp
data16
push
std
sbb
loopne
mov
scas
fwait
addr16
mov
pop
pop
gs
jo
cmps
sub
push
or
cmp
mov
mov
and
cmps
and
pop
dec
loop
mov
data16
rol
rol
mov
push
jmp
pop
sbb
shr
or
sub
xor
sbb
outs
data16
and
adc
xchg
push
add
cld
out
mov
cli
inc
dec
imul
std
pop
cmp
fs
popf
jnp
in
and
out
retf
or
jmp
hlt
fwait
jmp
outs
mov
xchg
jno
jmp
movs
push
pop
in
outs
out
int3
cwde
ja
add
mov
imul
cmp
dec
ret
mov
mov
mov
xchg
xor
test
dec
pop
stc
ror
sbb
adc
fdiv
ja
sub
daa
aad
rcr
mov
mov
arpl
retf
scas
data16
ins
inc
mov
push
inc
mov
xor
pop
sahf
imul
iret
test
dec
pop
enter
outs
lds
jbe
out
fcomip
jne
xor
or
mov
mov
lods
outs
jmp
add
or
jb
stc
pop
movs
leave
stc
or
push
ss
pop
fisubr
in
mov
and
mov
sub
push
das
movs
fidivr
test
test
fcmovnu
ret
repz
stc
cli
lea
ror
dec
jle
jle
pushf
inc
nop
add
mov
add
pop
push
and
inc
rcr
gs
mov
mov
lods
sar
in
or
jns
cs
adc
int3
sbb
(bad)
mov
inc
not
aam
shl
cmp
mov
lea
gs
out
(bad)
ds
movs
mov
push
and
inc
retf
(bad)
iret
xchg
outs
jle
jg
fcmovu
in
je
mov
xchg
ins
cwde
add
idiv
mov
in
sub
lahf
popf
rep
jns
adc
add
mov
push
and
fimul
fist
sar
mov
cmps
jecxz
das
mov
jb
int3
cmps
ins
hlt
out
outs
mov
fbld
mov
enter
push
add
xchg
imul
stc
mov
(bad)
scas
pop
sbb
pop
aaa
shl
add
and
cmp
pop
fld
inc
je
xor
pop
sbb
fwait
jns
sbb
cmc
scas
xor
dec
(bad)
xchg
mov
pop
das
dec
pop
mov
movs
iret
cmp
and
jnp
or
jl
or
aam
cmps
leave
cmc
fstp
rcr
sbb
lahf
pop
push
outs
out
push
adc
pop
call
ins
fwait
loop
inc
push
jmp
adc
popa
add
sbb
jns
ins
mov
popf
push
or
out
adc
fcomp
mov
mov
xchg
ret
mov
xor
jg
jbe
sahf
sbb
aad
jmp
adc
es
repnz
fnstenv
and
pop
outs
cmp
gs
cmp
stos
add
or
movs
pcmpeqb
call
dec
mov
push
pusha
or
into
fiadd
mov
call
fsubr
dec
loop
outs
outs
push
inc
std
or
push
mov
push
loope
cmp
pop
retf
bound
push
mov
cdq
ss
lea
iret
ss
pop
cwde
sub
adc
aad
xchg
push
mov
ret
test
sbb
repnz
jne
inc
mov
dec
shl
sub
fdiv
clc
mov
ja
adc
pusha
stc
dec
es
aaa
pop
dec
jmp
mov
xchg
inc
mov
pop
dec
xchg
cmp
je
xchg
(bad)
or
(bad)
scas
ret
test
(bad)
inc
inc
push
jne
add
mov
std
push
pop
out
push
adc
add
sahf
add
mov
icebp
icebp
in
out
cmp
pop
pop
push
js
push
and
jns
mov
outs
pop
in
jns
into
je
ret
shr
fiadd
out
push
adc
pushf
les
inc
idiv
out
dec
(bad)
xor
imul
cld
call
lea
xor
mov
into
fcmovnb
movs
call
push
push
in
mul
mov
fsubr
inc
fwait
jmp
into
or
cmp
(bad)
mov
ret
pop
adc
jbe
movs
adc
mov
mov
push
push
dec
push
adc
sbb
nop
cwde
jns
push
ja
adc
hlt
xchg
add
outs
sahf
or
add
dec
cmp
gs
jno
test
cmp
imul
jnp
mov
or
jnp
mov
jle
jbe
mov
(bad)
aam
inc
loopne
ficom
stos
mov
and
push
xor
push
daa
rcl
jmp
fs
ret
iret
repnz
and
adc
(bad)
neg
call
jno
dec
add
dec
popf
loop
(bad)
out
test
mov
movs
jp
bound
aad
fdiv
ins
call
sbb
and
jbe
pop
push
and
lock
jbe
shr
jmp
adc
pop
(bad)
std
aas
fs
mov
mov
dec
outs
push
jb
out
pop
xchg
jge
mov
cwde
pusha
leave
sbb
cmp
jp
or
fild
cmp
popf
push
sub
cmps
push
push
add
mov
stos
cmp
rcl
adc
retf
and
sub
ss
pushf
inc
push
js
push
mov
sub
pusha
push
retf
addr16
scas
test
iretw
je
ds
xor
fisttp
sbb
xor
pop
xor
ins
ins
sbb
and
inc
jge
push
push
stc
lock
mov
xchg
retf
mov
push
dec
sti
push
int3
out
push
(bad)
mov
mov
scas
or
cs
push
sbb
rdmsr
cmp
mov
test
add
adc
or
fld
leave
push
lahf
mov
mov
dec
xchg
(bad)
(bad)
ret
or
cmp
int
lods
in
inc
aas
jp
rcl
push
outs
mov
pop
dec
sub
dec
xor
mov
adc
out
mov
or
in
and
cmp
pushf
mov
adc
dec
lea
pop
in
jle
pop
sbb
jecxz
or
ficomp
repz
cmp
cmps
rol
mov
das
bnd
jns
test
fcom
int
cmp
or
data16
(bad)
ds
sahf
jnp
dec
push
xlat
xchg
ror
cmp
ficom
sti
pop
js
ds
or
jp
cmp
lods
jmp
cwde
or
pop
iret
jbe
arpl
out
add
fst
(bad)
pop
mov
fild
lea
cmc
aaa
mov
cmps
push
or
lahf
or
aaa
rcl
dec
sub
xchg
cmp
and
pop
call
loope
xor
and
or
or
loope
loopne
inc
js
scas
sti
imul
idiv
xor
daa
or
aaa
cmps
pop
sbb
mov
das
inc
or
aam
cmc
pop
movs
int3
mov
cmp
scas
xchg
mov
dec
js
jb
pop
add
call
xor
icebp
mov
out
test
clc
xchg
mov
push
jne
lods
bound
dec
mov
rcl
or
or
hlt
es
jo
mov
gs
sbb
xchg
int
or
pop
inc
pop
ffreep
sbb
mov
enter
not
cwde
pop
fidivr
cmp
mov
push
mov
xchg
inc
lock
fisub
xchg
mov
mov
rcr
mov
cwde
cmp
add
fwait
adc
sbb
fucompp
bound
stos
arpl
and
cli
lock
imul
(bad)
ret
xchg
mov
test
int
add
in
test
jno
jo
push
cmc
jmp
adc
daa
fdivr
or
je
loope
jb
iret
out
fidivr
dec
cli
pop
inc
sar
jb
dec
ret
sbb
adc
adc
or
cmps
xchg
mov
test
gs
dec
cmp
cmps
add
jae
nop
xchg
into
les
mov
cmps
mov
lock
push
push
jno
movs
xchg
and
ins
mov
cmovo
inc
sub
dec
inc
adc
sbb
mov
stos
jmp
jb
or
fwait
cwde
imul
mov
xchg
hlt
mov
xchg
pop
mov
adc
inc
jp
fwait
mov
jg
jmp
test
cld
pop
sbb
and
xor
adc
fstp
jno
sbb
repz
xchg
fisub
push
lea
aad
arpl
stos
push
pusha
sbb
pusha
mov
fadd
pop
lahf
jge
push
(bad)
(bad)
sbb
jmp
push
and
jg
fstp
out
and
inc
test
jno
xor
(bad)
bound
adc
inc
dec
or
fistp
adc
stc
retf
fcmovb
inc
xor
scas
rol
dec
jl
pop
imul
pop
jnp
lock
fbld
add
mov
icebp
popf
mov
adc
and
pop
add
push
loop
test
ret
lods
pop
lds
add
sbb
cmp
fs
xchg
call
(bad)
push
(bad)
idiv
mov
push
in
xchg
adc
iret
sub
or
cwde
or
inc
pop
lods
arpl
xchg
es
mov
mov
xchg
push
and
pop
mov
fdiv
idiv
pop
fcomp
in
xchg
test
xor
inc
fidiv
aad
or
aad
dec
loop
xchg
mov
in
adc
leave
xchg
cmps
js
pop
xor
aad
scas
adc
pop
jnp
aas
pop
pusha
mov
out
jae
cmc
mov
push
fisub
mov
cli
sar
cmps
repnz
sbb
ins
enter
add
jmp
adc
ret
(bad)
rcr
in
adc
mov
sbb
add
fs
dec
sub
push
not
(bad)
dec
aad
enter
ss
xchg
(bad)
stc
iret
dec
mov
inc
mov
call
hlt
clc
movs
push
push
hlt
in
sub
mov
push
(bad)
int3
jo
ret
xor
(bad)
jb
add
pop
addr16
mov
jp
clc
into
stos
jl
(bad)
repnz
daa
sbb
and
movs
lahf
cdq
ins
add
jg
jne
bound
mov
retf
cmps
and
mov
jns
das
(bad)
lods
cli
lds
xchg
lahf
jns
inc
popa
stc
mov
push
push
push
ds
and
popf
call
test
ins
mov
daa
dec
mov
cld
nop
pop
dec
mov
(bad)
rol
test
fcom
arpl
push
adc
add
pop
je
fcom
jb
fmul
movs
pop
cli
pop
dec
call
in
jnp
push
es
sbb
inc
pop
xchg
mov
rol
cli
sub
jp
and
jno
or
clc
into
ret
inc
ficom
push
adc
adc
mov
ret
cmp
std
mov
xor
test
mov
mov
aad
and
jnp
xchg
xor
add
rol
test
cmp
or
call
shl
idiv
out
xor
jns
(bad)
iret
loop
fdivr
les
push
sbb
enter
xchg
aas
popa
test
movs
mov
adc
xor
int
add
push
test
popa
xor
jb
xchg
add
mov
dec
push
cmp
popa
push
(bad)
cld
push
xchg
movs
inc
fldenv
xor
inc
cs
daa
sbb
das
inc
mov
sub
movs
dec
inc
pop
or
fld
and
out
jno
jle
test
call
(bad)
push
(bad)
fld
sbb
pop
cmp
mov
add
inc
imul
addr16
pusha
mov
retf
imul
pop
pop
shr
push
out
jp
(bad)
in
retf
jg
cli
add
(bad)
in
lea
mov
call
mov
mov
dec
ins
xchg
mov
imul
push
pop
cs
xchg
push
mov
jg
mov
sub
dec
or
retf
ins
push
test
push
test
aam
out
ins
test
mov
add
push
dec
mov
cld
mov
(bad)
push
add
adc
in
add
xlat
mov
icebp
lods
or
sahf
push
sbb
xor
mov
mov
mov
mov
cmp
pop
mov
mov
or
rcr
and
jl
dec
inc
sub
pop
pop
cmp
sub
int3
in
ss
push
mov
test
test
stos
outs
jle
add
ret
fldl2e
(bad)
pop
sbb
and
clc
jo
or
or
inc
add
das
(bad)
sahf
rcr
mov
mov
inc
push
scas
(bad)
ds
sti
cmp
or
(bad)
scas
cmp
addr16
retf
xchg
aam
add
xchg
jle
into
add
inc
jb
sub
xchg
inc
xchg
push
cmps
test
aas
jmp
dec
aad
mov
dec
addr16
xchg
or
cmp
scas
iret
movs
xchg
pop
mov
pop
mov
fisub
sbb
lds
mov
jb
scas
mov
int3
fist
inc
inc
lds
pushf
mov
inc
adc
mov
jp
jecxz
mov
xchg
lahf
or
dec
mov
sbb
xchg
mov
(bad)
pop
xchg
mov
xchg
dec
jnp
push
or
nop
(bad)
xchg
cmp
jp
mov
js
jmp
pusha
out
imul
sub
int
mov
mov
es
(bad)
and
cli
outs
je
and
lds
dec
data16
sub
sbb
and
scas
scas
test
adc
pusha
xchg
dec
retf
outs
and
jno
outs
shl
lods
mov
jmp
sub
and
lods
xchg
call
loop
sub
jge
pop
inc
sbb
scas
pop
jmp
arpl
pop
pop
inc
add
pop
pop
mov
mov
ret
push
dec
inc
fwait
push
ret
push
sbb
sub
(bad)
cmp
in
mov
in
(bad)
out
push
test
dec
fidivr
cmp
xor
call
pop
adc
xchg
xor
cmps
fisubr
movs
sub
or
push
add
xor
lsl
xor
lods
sbb
ja
cmp
je
idiv
pop
fistp
xchg
add
jno
jecxz
aad
fnstcw
(bad)
aam
inc
fist
mov
outs
fsub
add
push
or
dec
pop
jmp
frstor
loop
xchg
ror
test
pusha
push
scas
adc
xchg
sbb
cmp
inc
jne
ins
or
add
ret
push
jmp
cmp
jmp
mov
mov
int3
loope
lods
jb
and
into
pop
jmp
std
(bad)
xchg
gs
adc
pop
or
stos
mov
push
xor
inc
stos
fucom
stos
pop
pop
(bad)
xchg
aaa
out
dec
and
pop
adc
movs
cmp
call
push
(bad)
push
pop
in
or
xor
and
ficomp
bound
push
pop
sub
and
out
mov
cwde
pop
fwait
mov
cmp
or
pop
popa
sub
int
ret
push
dec
push
ficom
mov
shl
pop
mov
fwait
add
sti
push
xor
jmp
or
ja
mov
ret
(bad)
hlt
outs
xchg
mov
loope
dec
inc
jle
push
xlat
sub
jle
or
int
jb
inc
cmps
ret
mov
js
sti
and
or
loop
xchg
(bad)
pop
lea
dec
dec
dec
mov
popf
jp
push
es
pusha
test
out
adc
jne
and
enter
dec
jo
xchg
dec
or
inc
adc
adc
rcl
push
call
in
stos
xchg
mov
push
fld
leave
in
mov
jno
rcl
mov
jae
jnp
cmp
fstp
loop
rcr
test
ret
push
xchg
adc
pop
or
dec
cmp
loope
fcom
pushw
cmp
mov
adc
(bad)
popa
adc
loop
inc
arpl
ror
call
stos
in
adc
inc
push
cmc
mov
mov
in
lahf
iret
jb
xor
jo
mov
in
jmp
sbb
test
cmps
fstp
jno
jecxz
cmp
cwde
fdivp
jns
pop
sub
js
aas
mov
inc
xchg
jle
adc
das
push
pop
and
clc
imul
into
scas
rcl
(bad)
push
xor
jmp
ss
jnp
enter
mov
in
push
xlat
xor
jecxz
mov
(bad)
rol
jmp
sub
jbe
mov
adc
pop
and
(bad)
rcr
pop
gs
pop
cmp
aam
xor
pop
adc
aaa
xor
push
dec
aas
push
dec
movs
mov
dec
adc
add
retf
fcmovu
fnsave
mov
ss
cdq
mov
adc
mov
loop
retfw
sbb
enter
(bad)
ret
push
dec
lods
imul
imul
mov
out
add
mov
cld
sar
add
add
outs
out
mov
xchg
push
push
add
push
xchg
aaa
inc
pop
aas
lahf
outs
dec
mov
pop
pop
in
movs
cli
pop
fdiv
xchg
in
xchg
ins
sub
dec
xchg
fild
inc
idiv
aad
in
clc
in
sbb
mov
shl
jns
loop
gs
shl
loop
ficom
in
jge
xchg
push
sbb
inc
outs
(bad)
push
jnp
jmp
xor
jl
sahf
and
retf
adc
or
push
pop
sub
retf
mov
push
and
imul
sbb
or
pop
repnz
cld
sbb
inc
(bad)
jg
cmp
imul
inc
fistp
stc
add
or
adc
fpatan
sub
rcr
lds
jecxz
test
fsubr
fwait
imul
pop
scas
test
sub
call
(bad)
rcl
aad
dec
mov
ret
jb
fwait
jb
loope
push
sub
jmp
mov
mov
sub
pusha
iret
repz
loope
mov
and
mov
das
inc
jecxz
push
sti
or
and
push
cmc
sub
call
adc
pusha
and
push
std
das
sub
xchg
fwait
in
jl
addr16
(bad)
bound
add
sub
xor
or
xor
xlat
jmp
pop
jns
push
les
stos
int
fisub
ss
mov
idiv
stos
lock
sub
cld
push
xchg
push
(bad)
mov
icebp
mov
pop
mov
push
cmp
cmp
gs
dec
fimul
xchg
repnz
mov
or
cmc
mov
pop
jne
mov
mov
jge
or
push
cmc
clc
xchg
leave
sub
and
xchg
fldenv
dec
xchg
retf
aas
mov
in
xchg
mov
add
pop
inc
mov
pusha
adc
push
and
fadd
push
pop
jmp
cmp
and
inc
or
sub
imul
popf
add
mov
mov
test
clc
inc
call
int
add
mov
xor
pusha
inc
pusha
xchg
test
pop
enter
loop
loopne
jmp
xor
xor
xor
or
or
scas
mov
fcomp
adc
add
cmp
sub
adc
int3
bnd
jmp
enter
inc
cmps
enter
sbb
and
cmc
pop
push
mov
pop
or
sub
fst
xchg
push
xchg
(bad)
(bad)
mov
jae
test
fs
outs
adc
xchg
mov
sub
xchg
cmp
mov
scas
(bad)
cmc
test
hlt
mov
xor
fst
sar
xchg
or
adc
jnp
shl
pop
jns
mov
ins
hlt
aam
cmp
loopne
ins
mov
jge
out
adc
test
sbb
xchg
push
mov
shl
sbb
fisttp
inc
retf
jl
test
cmp
add
and
jge
pusha
and
(bad)
mov
lea
popf
inc
jae
out
test
sbb
cmp
sti
ds
adc
mov
mov
leave
in
jo
popf
js
ret
mov
loope
jo
(bad)
mov
adc
movs
inc
popa
ret
call
xor
adc
ret
pop
stc
fimul
sbb
jns
(bad)
cli
ror
mov
icebp
in
inc
push
push
sub
sti
js
in
aaa
into
retf
mov
xor
test
mov
sub
push
into
mov
lock
(bad)
inc
hlt
inc
stc
movs
call
loopne
scas
fst
rol
repnz
cmps
test
xchg
cmps
xchg
jae
jmp
xadd
leave
add
sub
and
sub
out
sbb
push
jp
sbb
jg
inc
int
sbb
cmp
cmp
push
or
clc
scas
mov
add
and
jecxz
dec
push
lea
add
mov
fnstenv
and
ret
push
movs
cmps
(bad)
jmp
imul
push
imul
add
rsm
and
mov
(bad)
mov
cmp
int
das
aam
sti
inc
aaa
mov
ror
scas
cmp
outs
cld
in
pop
cdq
leave
xor
xchg
add
lds
and
sub
sar
push
or
adc
pop
add
shl
cmps
imul
dec
pop
xchg
cwde
jo
retf
aaa
in
loope
push
mov
jp
mov
push
out
ins
ins
xlat
in
inc
mov
retf
pop
cmp
push
mov
and
mov
or
sub
imul
jle
sub
leave
push
adc
mov
add
(bad)
or
fnsave
enter
bound
push
push
pop
aaa
sbb
lods
mul
int3
cwde
ins
mov
movs
sub
sahf
mov
(bad)
mov
sbb
into
lds
icebp
pop
arpl
test
mov
pop
and
mov
imul
push
sub
push
jbe
lds
test
mov
xchg
shl
call
retf
enter
dec
(bad)
xor
xchg
call
ds
dec
or
leave
inc
mov
xlat
ror
sbb
push
sbb
mov
sbb
add
js
push
bound
pop
add
jbe
jl
mov
push
mov
xor
push
sbb
jbe
and
dec
outs
(bad)
cmp
jne
jno
xor
pop
push
dec
xor
retf
gs
outs
stc
jge
inc
pop
loopne
inc
or
stos
(bad)
cmc
mov
shr
mul
mov
out
jb
dec
addr16
in
movs
inc
lds
jmp
ret
clc
adc
arpl
and
mov
push
adc
mov
sub
je
or
cmp
xor
pushf
fmul
fstp
xchg
sub
clc
pop
je
(bad)
stc
cmps
in
add
and
into
add
out
addr16
dec
ins
les
xchg
sbb
inc
test
jnp
mov
inc
dec
mov
das
add
add
lods
clc
mov
sub
sbb
loopne
popf
outs
in
loop
lods
(bad)
mov
ja
push
icebp
shr
mov
mov
xor
cli
icebp
lock
std
jae
loopne
or
dec
adc
ins
inc
mov
loopne
sbb
add
mov
(bad)
or
(bad)
mov
repnz
jg
or
cdq
add
stos
cmp
call
mov
mov
ret
inc
xlat
inc
retf
imul
lea
adc
sub
cwde
sub
jle
mov
mov
mov
mov
pop
adc
ror
mov
fst
mov
addr16
(bad)
mov
(bad)
adc
nop
rol
inc
loopne
and
outs
jmp
out
fmul
dec
mov
in
jge
xor
xchg
cmc
inc
sub
hlt
adc
adc
inc
cmp
mov
or
iret
sbb
fisttp
cmps
lahf
jmp
xchg
jge
adc
inc
nop
test
xor
(bad)
sub
inc
jns
das
mov
fidivr
push
cmp
stos
data16
in
add
pop
(bad)
and
dec
mov
jl
icebp
inc
inc
aas
or
iret
push
in
stc
fldcw
lods
aad
sub
cs
sub
movs
shr
das
or
or
shl
add
cmps
xor
xchg
jne
jl
lea
sbb
sti
push
adc
loop
iret
xchg
push
in
(bad)
cld
adc
push
imul
adc
sub
or
mov
(bad)
cld
jns
xchg
mov
adc
push
inc
xor
pop
mov
add
(bad)
cdq
mov
mov
daa
jp
adc
xor
push
push
ss
scas
icebp
push
dec
push
int
jmp
div
add
push
enter
fs
aam
jle
pop
push
or
scas
pushf
(bad)
push
ret
into
call
or
jno
push
mov
jne
xchg
dec
xor
ret
push
cdq
mov
into
mov
scas
sbb
popa
pop
and
int
and
js
lods
cmp
xor
jp
mov
jg
mov
adc
shl
xchg
push
mov
cmp
inc
push
fisub
or
daa
cli
dec
in
js
enter
fdivr
(bad)
out
daa
jno
lahf
arpl
fistp
in
add
adc
movs
test
addr16
sub
fsub
mov
xchg
sahf
push
fcomp
mov
call
scas
ret
scas
cmp
push
push
imul
dec
arpl
pop
popf
dec
ficomp
pop
pop
pop
imul
mov
pop
and
or
std
sar
jl
mov
pop
fadd
add
sbb
jle
pop
popa
mov
call
add
mov
mov
pusha
popa
mov
fnstcw
xor
call
and
addr16
push
inc
sub
jo
push
mov
inc
(bad)
es
mov
and
adc
mov
mov
xor
or
xor
aas
iret
(bad)
popf
xchg
int3
retf
lds
pop
into
push
iret
inc
rcl
out
sub
or
in
in
push
xchg
aad
xchg
mov
fwait
mov
pop
outs
data16
push
movs
inc
je
dec
fwait
inc
out
add
mov
or
sub
sbb
mov
mov
xchg
mov
mov
popa
outs
ret
adc
jne
sbb
jo
xchg
repz
mov
cmp
jnp
jb
mov
fisttp
stc
in
mov
fs
sbb
cdq
gs
shl
scas
pop
rcr
pop
mov
into
outs
fcomp
arpl
or
jmp
jnp
stc
(bad)
cs
test
and
push
mov
loop
or
shr
mov
into
mov
leave
in
or
dec
mov
pushf
push
xor
xadd
ins
call
in
adc
fmul
mov
cwde
xchg
test
fnstenv
cmp
sbb
jns
stos
mov
mov
pop
daa
pop
mov
push
fidiv
mov
cmc
pop
or
hlt
dec
sub
pop
in
std
mov
xor
xor
ds
jb
js
cmps
fnstsw
jns
scas
jl
xor
mov
cld
push
je
and
sub
js
jae
xlat
ja
fsubr
(bad)
pop
ror
inc
jle
xor
in
push
cld
jnp
xchg
imul
popa
lds
xchg
data16
ret
arpl
jmp
sub
xchg
mov
inc
and
das
fdivr
push
je
cdq
pop
inc
(bad)
out
lods
dec
mov
jg
pop
pop
sbb
mov
cmp
test
inc
shl
add
pop
daa
sbb
movs
aam
dec
jl
sub
popf
adc
or
inc
js
ds
jge
fld
retf
inc
xchg
xlat
and
sub
pop
pusha
cvtps2pd
xchg
repnz
inc
pop
fdivr
or
add
shl
dec
mov
xchg
rol
or
daa
jp
pop
jge
sub
pop
push
scas
stc
in
retf
test
mov
stos
test
push
hlt
dec
mov
dec
pop
stos
inc
fldl2t
sbb
dec
fstp
hlt
sahf
jmp
mov
out
ror
sar
cmp
jecxz
repz
les
mov
loope
mov
mov
pop
js
sbb
retf
adc
inc
adc
cwde
rol
and
add
pop
in
in
mov
out
xor
mov
mov
aaa
es
push
cmp
enter
(bad)
sbb
sbb
adc
je
stos
push
out
jp
shl
fsub
push
mov
ss
jle
push
and
(bad)
iret
pop
and
or
push
inc
ins
int3
push
xchg
aaa
std
loopne
cmps
rcr
loop
pop
mov
aad
cmps
sti
cwde
xchg
movs
aas
or
cmc
or
sbb
sub
sbb
inc
addr16
inc
pop
daa
inc
idiv
aas
jne
dec
sbb
sub
push
and
or
lahf
mov
and
popf
mul
out
push
in
outs
pop
arpl
adc
cmp
(bad)
scas
mov
std
int
popa
mov
loopne
mov
sbb
jp
xlat
(bad)
mov
repnz
shl
jmp
cs
(bad)
shl
lods
(bad)
outs
lods
loop
hlt
shl
loope
mov
lea
push
push
jmp
add
xchg
repz
(bad)
mov
sti
pop
xchg
push
nop
jnp
lock
outs
dec
add
cli
jp
pop
outs
jne
sahf
xor
nop
(bad)
loop
stos
test
shr
mov
in
sbb
cmp
inc
retf
push
mov
sub
imul
shl
mov
data16
jp
psllq
pusha
push
(bad)
xchg
sub
(bad)
mov
jp
popf
mov
add
shr
adc
arpl
cmps
rcr
mov
mov
xchg
inc
cli
xchg
test
out
cs
cs
cmps
(bad)
pop
or
sub
sub
mov
repnz
xchg
mov
int3
les
shl
or
sahf
fadd
xchg
mov
or
add
mov
xor
out
scas
add
loope
fsubr
cmp
jno
(bad)
sub
loopne
clc
out
add
out
out
mov
and
add
mov
sbb
lahf
push
rcl
hlt
push
cli
outs
sbb
cmc
fild
xlat
adc
jmp
out
push
fldcw
mov
ror
xchg
popf
dec
mov
int
sbb
cmps
adc
xor
imul
adc
push
aaa
das
adc
jp
mov
mov
inc
(bad)
fdivr
jmp
dec
outs
jecxz
xchg
push
loop
jge
out
(bad)
outs
cmp
jns
jbe
jns
lock
pop
stos
sub
pop
mov
push
sbb
xor
ins
aaa
cmps
mov
dec
jne
popa
adc
pop
cli
retf
in
dec
add
jne
addr16
fisubr
add
xor
xor
shl
stos
(bad)
outs
add
or
cmps
aad
jmp
jbe
sbb
adc
aaa
xchg
sub
mov
in
jge
movq
ret
mov
dec
jl
xor
sti
jmp
add
add
leave
xor
fs
ret
jnp
rcl
sbb
xchg
push
or
push
mov
data16
cs
push
mov
adc
inc
mov
lods
or
in
movs
mov
loop
mov
jl
push
out
movs
adc
dec
in
pop
and
mov
pusha
fwait
cmp
fmul
and
std
loop
jge
rcl
sar
mov
je
aad
rol
push
out
fld
stc
xchg
adc
mov
xchg
mov
mov
fisub
mov
in
push
stos
mov
push
call
push
push
sub
int3
and
fisttp
xchg
int
stos
(bad)
shl
fild
test
cmp
movs
jl
xor
inc
jne
jno
push
int3
mov
addr16
push
les
inc
add
mov
inc
pop
int
push
jae
(bad)
mov
mov
bound
sbb
jmp
repz
pop
dec
fld
dec
adc
movs
(bad)
in
xor
in
mov
xor
jecxz
xor
imul
ins
inc
xor
out
pop
jb
int3
pop
(bad)
out
pop
lods
push
adc
test
sbb
retf
add
pop
sub
retf
pop
pop
(bad)
jge
mov
scas
sub
test
ins
(bad)
dec
pop
inc
inc
sbb
push
adc
xchg
jl
xor
cli
sub
jae
bound
sub
mov
or
or
mov
retf
jmp
mov
daa
cli
pop
inc
pop
ret
cmps
xchg
js
inc
adc
shl
data16
pop
int
std
add
pop
scas
add
cdq
add
arpl
test
js
mov
jne
xor
cmp
(bad)
sti
lock
arpl
and
or
pop
mov
movs
sub
stos
(bad)
or
lock
mov
shr
fnstsw
test
rcl
jge
repz
sar
xor
clc
popf
dec
in
inc
ins
cmc
lea
mov
movs
adc
and
pop
jmp
mov
fidivr
jbe
stos
sub
cwde
sbb
add
ins
dec
daa
mov
mov
mov
or
int
clc
xchg
out
ds
jmp
inc
les
jg
dec
adc
iret
imul
jb
xchg
scas
loopne
lods
fisubr
mov
and
retf
cmps
sub
mov
or
pop
push
jp
sbb
test
es
stos
fs
mov
push
retf
push
arpl
pop
push
sti
sti
pop
lds
pop
ds
mov
sar
mov
pop
jmp
add
aas
loop
jno
mov
cli
imul
cmp
sbb
data16
adc
cvtdq2ps
psadbw
sub
pop
inc
imul
jnp
popa
scas
nop
sub
sub
int3
ror
retf
sbb
xchg
xor
dec
test
and
xchg
push
push
push
dec
jbe
test
stos
or
loopne
dec
dec
(bad)
or
data16
adc
pop
jecxz
lahf
out
push
movs
and
mov
pop
(bad)
dec
stos
loop
and
add
test
pop
jmp
sub
mov
xor
mov
push
aam
adc
pop
in
mov
inc
loopne
pop
retf
xchg
dec
inc
scas
push
out
sti
pop
mov
ds
int3
call
imul
(bad)
call
test
fst
jl
cld
mov
and
sub
jmp
and
call
out
stc
pop
fwait
jmp
pop
daa
mov
mov
pusha
inc
xlat
or
int
(bad)
push
fisubr
jne
cmp
fsub
idiv
mov
retf
pop
fisttp
jmp
out
sub
sbb
pop
xchg
and
mov
je
(bad)
mov
lods
dec
fst
sbb
fidiv
jl
loopne
push
aas
cmps
lahf
sbb
imul
mov
loopne
add
dec
or
cmc
outs
xor
retf
popf
inc
xchg
addr16
rol
into
jp
nop
sar
sbb
jge
ins
pop
les
test
sar
pop
or
xchg
jno
adc
mov
ret
je
out
sahf
inc
cmps
stos
mov
dec
aaa
dec
push
sti
and
jecxz
rcr
jge
(bad)
aad
popf
inc
inc
lock
arpl
push
add
adc
xchg
int3
lahf
cmps
popf
fdiv
mov
jne
adc
push
sti
je
xchg
sbb
sbb
daa
add
rcr
daa
call
stc
and
jmp
dec
xor
dec
jmp
out
addr16
es
adc
shr
popa
jnp
popf
push
outs
cmc
(bad)
sub
jle
mov
test
loope
retf
neg
lods
push
fcomi
cmp
mov
inc
dec
and
adc
jne
sub
jmp
loop
cwde
repz
retf
pop
pop
jmp
je
(bad)
cli
pop
xor
mov
pop
dec
fwait
and
mov
xchg
mul
mov
sar
sbb
add
pop
cmp
sbb
cmps
push
(bad)
movs
scas
xchg
mov
imul
or
lea
push
rcr
jmp
popf
scas
test
mov
jmp
scas
test
mov
stos
rcl
outs
and
sub
iret
(bad)
int
dec
daa
retf
cmp
dec
call
xchg
push
das
cmp
push
mov
loope
je
idiv
test
adc
int3
test
jb
daa
jns
inc
xor
cmp
retf
xchg
xchg
pop
in
or
jne
add
or
mov
shl
jns
clc
mov
mov
loope
or
into
dec
push
inc
movs
add
push
jb
mov
mov
sbb
nop
mov
div
inc
(bad)
repz
hlt
fnstcw
inc
pop
push
movs
arpl
outs
fbld
sub
ffreep
mov
sub
pop
les
jecxz
xchg
jae
mov
call
xlat
imul
xchg
loop
fisub
ja
in
mov
jne
sbb
xchg
arpl
cmp
shl
inc
adc
mov
loope
call
add
xchg
pop
popa
setae
imul
ins
ins
mov
xor
(bad)
sbb
jg
sti
inc
jne
test
jle
push
pusha
out
test
ret
daa
je
retf
test
sub
jns
mov
mov
cdq
adc
repz
ficomp
cmp
inc
shr
(bad)
data16
mov
xor
xchg
lods
cld
and
clc
sbb
lods
stos
lock
repnz
pushf
cmp
fnstenv
mov
cs
push
sbb
out
test
loope
mov
push
dec
lds
test
repnz
lds
bound
mov
cmp
(bad)
call
xor
dec
xchg
inc
fldenv
cwde
sbb
cmp
imul
xor
arpl
stos
fsub
pusha
adc
bound
and
jecxz
loopne
std
shr
jnp
sbb
leave
adc
xor
addr16
clc
adc
cld
mov
out
pop
cmc
out
push
sbb
mov
scas
lock
xor
adc
lods
push
not
mov
cld
mov
mov
cwde
push
add
jo
inc
aaa
mov
and
add
int3
cli
sub
sahf
in
inc
dec
sub
dec
sbb
jmp
dec
(bad)
jns
xor
stos
gs
jmp
cmp
cmp
(bad)
(bad)
xchg
mov
mov
dec
in
cli
push
fcomi
(bad)
push
mov
pop
or
xor
call
test
cmps
jge
jle
lahf
sti
jbe
into
fimul
cdq
out
jbe
aad
pop
push
daa
add
lahf
lock
lds
(bad)
cmp
inc
sub
sub
cli
int
adc
shl
cmp
or
pushfw
mov
rcl
and
pop
call
xlat
repnz
ds
cld
inc
jb
push
pop
xor
stos
mov
jg
or
(bad)
adc
or
xchg
pop
sub
sbb
add
xchg
jno
aaa
dec
push
sub
repz
movs
or
rcr
les
mov
repz
inc
sti
into
mov
fild
out
enter
dec
hlt
pop
in
imul
das
outs
sub
sub
ds
or
retf
ds
cmps
mov
jbe
bound
sub
mov
mov
push
stos
cld
outs
inc
cmp
pop
jne
mov
clc
pop
push
bound
mov
and
adc
hlt
das
fstp
sahf
jecxz
push
mov
(bad)
dec
mov
int
push
mov
fistp
(bad)
or
dec
in
jmp
idiv
and
fwait
mov
stc
pop
ins
dec
repz
mov
movs
or
inc
jp
fiadd
xchg
jg
jae
(bad)
cmp
adc
pop
dec
xchg
test
lods
dec
add
xchg
jb
outs
mov
xchg
(bad)
lahf
sti
popa
adc
pop
sbb
nop
stos
or
jmp
dec
dec
dec
xchg
jl
jge
mov
mov
test
out
and
sti
adc
cmp
cmp
fnstsw
add
mov
dec
movs
xor
movs
jmp
das
cli
push
pop
outs
movs
repz
push
(bad)
movs
mov
into
aaa
ja
sub
mov
inc
jns
pop
mov
inc
add
push
in
mov
xchg
popa
jae
mov
inc
fld
test
push
out
stos
sbb
lock
scas
push
mov
(bad)
add
(bad)
fs
ins
pop
or
pop
mov
out
in
jp
lods
out
sbb
and
and
mov
(bad)
pop
int3
jmp
popf
mov
lahf
jecxz
gs
sub
call
imul
pop
inc
retf
mov
jmp
mov
cli
inc
gs
mov
rcr
xlat
das
sub
sub
shl
add
test
pop
cli
jns
mov
lds
sub
out
jns
pop
xchg
xor
cmp
out
mov
imul
push
pop
or
inc
lds
jbe
jmp
call
bound
stos
or
lahf
push
push
adc
lea
push
or
mov
mov
xchg
mov
dec
out
dec
ja
jp
adc
call
mov
dec
jbe
mov
out
scas
push
mov
scas
(bad)
(bad)
mov
out
or
xor
mov
mov
mov
popa
ins
repnz
dec
fisubr
mov
inc
addr16
cmps
lahf
imul
into
xchg
pop
jb
inc
js
jnp
xchg
add
mov
popf
xchg
cld
xchg
add
mov
and
test
loopne
cmps
jmp
mov
jmp
fcomp
and
mov
ds
ins
dec
(bad)
push
imul
xchg
lds
pop
xor
dec
push
pushf
stos
or
popa
dec
jl
pop
and
scas
xchg
add
sti
mov
popf
sub
not
dec
mov
sub
inc
stos
mov
or
sbb
xchg
ret
sbb
mov
or
mov
push
retf
(bad)
cmps
sbb
int
out
adc
sar
repz
ds
sbb
jb
pop
cmp
push
mov
xchg
in
cmp
into
jl
(bad)
mov
cdq
iret
mov
push
dec
add
out
add
cmp
scas
jmp
sbb
or
(bad)
mov
pop
int
inc
push
leave
cmp
pop
out
xor
ins
xor
dec
ins
stc
adc
inc
xchg
sti
sub
repnz
mov
mov
sub
outs
sti
fidivr
stc
pop
or
add
and
dec
cld
out
jl
fdiv
sbb
(bad)
sub
push
xchg
and
inc
cmps
mov
mov
mov
rcr
or
pop
ss
push
ror
(bad)
mov
push
stos
fidivr
ins
push
fwait
imul
add
les
xchg
pop
call
(bad)
jnp
(bad)
in
jg
cmp
sbb
jecxz
pop
fwait
xor
xlat
icebp
test
aaa
aas
xchg
pop
scas
adc
cmp
sub
popa
xor
adc
mov
popf
imul
push
mov
pop
jno
out
lahf
mov
mov
cmp
lds
test
loopne
es
in
xor
sti
push
inc
lock
(bad)
adc
enter
adc
fs
out
sahf
add
movs
loopne
inc
or
mov
jge
adc
and
(bad)
xchg
test
xchg
jmp
inc
popa
mov
mov
fiadd
jg
or
std
add
lods
xor
jp
adc
jb
jnp
push
mov
(bad)
call
inc
dec
shl
repnz
inc
sub
push
repz
adc
add
jo
xor
int3
inc
sbb
dec
mov
cmps
add
push
rcr
loopne
xchg
xchg
jl
outs
mov
sbb
icebp
rcr
and
in
or
dec
xor
adc
out
popf
aad
or
sbb
stos
cmp
stc
clc
lods
retf
inc
inc
xchg
and
inc
pop
test
jno
test
push
mov
mov
jb
fld
stos
into
push
add
dec
les
push
adc
xchg
repz
sub
or
jmp
sbb
fistp
xchg
xchg
cmp
dec
cld
adc
xchg
add
xchg
jmp
outs
lahf
push
hlt
cmps
(bad)
mov
inc
cs
test
popf
sub
dec
pusha
jl
inc
(bad)
shl
sub
cmp
sub
ja
call
xor
fmul
and
push
ins
pop
xchg
xchg
pushf
jne
adc
jecxz
or
push
jb
ret
mov
daa
fs
inc
stc
cmp
test
lods
ins
jae
es
push
jecxz
(bad)
aas
cld
not
stos
jne
xchg
jl
sahf
(bad)
dec
in
out
and
lea
hlt
or
or
mov
jmp
fild
cmp
dec
or
cmp
fdiv
pop
inc
jns
or
icebp
ins
(bad)
loop
clc
adc
pop
sahf
xor
push
jnp
sbb
lods
xchg
outs
sbb
call
ins
aas
mov
push
cmp
ud2
jmp
mov
dec
push
xor
push
inc
wbinvd
rol
cmp
aaa
rcl
imul
cmps
or
xor
fsub
mov
cmp
dec
lods
cmp
xor
inc
or
jl
push
int
mov
(bad)
inc
adc
xchg
mov
lock
int
(bad)
jmp
call
lods
cmp
mov
cli
mov
icebp
stos
int3
rol
inc
mov
jp
inc
or
mov
mov
inc
iret
(bad)
xchg
sub
bound
popa
dec
popa
pop
sbb
sub
movs
int3
jbe
cwde
in
adc
pop
lock
sbb
mov
call
xchg
sbb
test
lock
mov
cmp
xchg
mov
sub
mov
scas
ror
fsubr
jmp
test
test
push
cmps
imul
push
cmp
les
mov
sbb
sub
sbb
pop
dec
xchg
xor
inc
or
mov
idiv
add
xchg
inc
(bad)
std
enter
aaa
mov
mov
out
lea
mov
xor
fsub
add
or
fld
inc
xchg
lds
pushf
push
(bad)
in
mov
mov
pop
xchg
mov
daa
mov
pop
xchg
sbb
les
jbe
adc
xor
std
out
xchg
mul
mov
and
nop
add
or
mov
jbe
dec
xchg
or
ret
xchg
ret
jae
pusha
fild
std
xor
dec
rol
push
daa
sub
shl
sub
push
or
cmp
test
test
rcr
add
ret
pop
clc
jo
xor
test
push
stos
adc
ficomp
movs
mov
in
push
stos
pop
mov
or
sbb
je
daa
fucomp
push
fldenv
or
xor
add
out
mov
aaa
sbb
cmps
adc
(bad)
jnp
pop
(bad)
mov
jp
sbb
enter
jnp
mov
retf
jne
addr16
mov
loopne
mov
outs
dec
and
js
jecxz
mov
lea
or
out
inc
xor
mov
or
push
jns
test
xchg
jne
lock
addr16
sti
adc
jecxz
jo
adc
jge
mov
sub
call
addr16
fist
xchg
jae
cs
mov
sbb
fdivr
stos
mov
cmp
mov
dec
xor
sbb
or
jno
in
(bad)
(bad)
jge
arpl
sub
inc
push
dec
jae
lods
mov
lahf
push
dec
retf
or
push
push
js
dec
mov
mov
test
and
retf
dec
int3
fdiv
xor
sahf
or
aam
movs
xchg
gs
test
add
mov
add
(bad)
jns
cwde
pop
adc
jmp
or
ins
shr
arpl
imul
pop
out
dec
and
cmp
leave
dec
push
rcr
mov
movs
ins
loope
cmp
dec
jno
cs
adc
mov
frstor
aas
jg
xor
fxch
test
add
aam
aad
out
mov
add
into
pop
sbb
int3
adc
cmp
push
pop
int3
data16
cli
or
stos
fsubr
xchg
fnstenv
mov
outs
dec
call
lods
mov
cwde
sub
cmp
jo
movs
add
pop
or
or
loop
movs
add
xor
call
aam
(bad)
xchg
retf
push
push
xchg
and
dec
dec
idiv
pop
add
sub
or
inc
mov
cmp
jecxz
and
xchg
add
inc
jns
xchg
mov
out
xchg
mov
dec
or
and
mov
jne
mov
scas
imul
repnz
(bad)
or
add
push
push
movzx
rol
gs
jns
push
sbb
popa
enter
addr16
les
xlat
xor
mov
sbb
push
mov
enter
mov
test
add
adc
mov
jmp
cmp
xor
scas
push
sub
das
out
sbb
adc
imul
pop
test
loopne
loop
pop
xor
xchg
out
(bad)
cmps
pop
inc
jne
(bad)
jg
push
aam
data16
pop
gs
jne
jmp
dec
xchg
xor
stos
out
test
adc
shl
jl
movs
jmp
test
mov
push
or
sub
repnz
leave
add
test
aam
add
and
stos
dec
cdq
movs
mov
xchg
push
xor
pop
xor
dec
fild
sbb
xor
out
jns
push
gs
jmp
sar
pop
fwait
mov
mov
les
movs
mov
scas
das
pop
cmp
loopne
aam
pop
imul
fcomp
inc
inc
data16
test
(bad)
push
xchg
adc
icebp
in
mov
adc
fdivr
adc
outs
fisttp
pop
btr
dec
xchg
adc
mov
jne
or
pop
push
(bad)
in
retf
stos
cmp
test
mov
mov
repnz
ret
loopne
sub
mov
dec
scas
cmps
inc
and
test
dec
mov
pop
cld
push
sbb
cmp
sbb
jae
repnz
stos
jmp
mov
pushf
cmc
mov
repz
mov
scas
jns
fwait
jno
mov
retf
cmp
mov
sbb
into
pop
dec
lods
xchg
adc
push
xchg
je
cmp
aas
add
mov
mov
(bad)
retf
outs
pop
inc
sbb
xchg
dec
adc
adc
stos
aas
dec
xor
ret
or
stos
xlat
pop
mov
cmp
dec
jne
imul
adc
daa
popf
lock
inc
daa
stos
popa
outs
xlat
fld
jmp
rcr
imul
imul
jle
xchg
dec
sti
test
jb
ss
cmp
xchg
or
sahf
ins
push
push
mov
lahf
lods
fwait
ins
sbb
jns
aas
imul
inc
ficom
dec
movs
pop
jecxz
xchg
loopne
cmps
fs
jnp
mov
clc
dec
les
loop
aad
sbb
int
push
mov
and
and
add
dec
xchg
xchg
xchg
mov
rol
pushf
fdiv
jmp
jp
inc
sub
lock
pop
cwde
in
in
dec
jl
ror
adc
bound
pop
aaa
adc
mov
xchg
sbb
sub
sub
and
int3
cmp
aad
sbb
sbb
lds
xor
adc
mul
dec
stos
sbb
inc
cwde
ret
ins
jmp
sti
mov
repz
add
lea
mov
ss
dec
inc
gs
cmp
or
int3
data16
cli
adc
xchg
popa
jno
iret
imul
pop
add
cmp
pop
cld
add
pop
push
sub
add
pop
in
dec
and
cwde
loopne
test
loop
jp
and
imul
mov
jge
arpl
xchg
push
dec
cmp
clc
ins
ret
xlat
jecxz
(bad)
loopne
cmp
sub
rol
bound
es
xor
fwait
adc
cmp
or
xchg
pop
arpl
ret
mov
pop
sar
js
ficom
ins
mov
std
mov
pop
lahf
sub
repnz
mov
(bad)
pop
cwde
ins
sbb
sbb
cmp
js
jae
adc
ret
mov
add
pop
sti
retf
nop
jo
sub
mov
(bad)
out
sti
pop
sbb
mov
not
in
mov
mov
adc
stos
mov
mov
jecxz
lods
repz
outs
lea
das
aam
loopne
icebp
ret
push
xchg
or
xchg
imul
scas
sub
inc
test
sbb
imul
xchg
in
jl
je
outs
push
dec
mov
mov
fwait
jg
mov
test
and
sbb
push
inc
or
movq
add
fs
int3
jno
sub
cmp
repz
ret
push
pop
ins
xchg
test
mov
mov
mov
adc
std
and
pushf
jg
pusha
inc
mov
fwait
jp
ja
fidivr
xchg
xor
fwait
int
pop
mov
mov
mov
shr
arpl
out
mov
aam
mov
cdq
addr16
lds
in
push
inc
sbb
(bad)
jnp
fmul
rcr
push
jb
inc
jp
cmp
hlt
mov
daa
lock
push
push
mov
scas
jb
fstp
fs
rcr
gs
cld
icebp
repz
cwde
adc
pop
fnstsw
xor
sub
sti
xor
inc
dec
inc
fdivr
adc
mov
mov
(bad)
dec
xchg
cld
inc
jb
test
push
mov
jno
aas
iret
jbe
and
mov
xchg
sti
iret
hlt
adc
pushf
or
jge
and
pop
imul
pop
mul
mov
in
lahf
jb
repnz
xor
sub
sub
cmp
test
fst
xlat
fidiv
pop
jbe
test
xor
lahf
pop
sub
hlt
cmp
cmc
icebp
fst
inc
fldlg2
and
out
mov
stc
pop
aam
data16
jle
imul
dec
jmp
mul
jmp
neg
xlat
push
push
mov
movs
cdq
ja
or
xchg
gs
(bad)
aam
and
mov
push
mov
js
shl
pop
sbb
xchg
imul
inc
mov
push
or
imul
jp
mov
xor
jne
iret
inc
mov
mov
out
lods
loopne
xor
or
or
pushf
hlt
or
xchg
dec
inc
lock
lea
xor
imul
repnz
jnp
xchg
sub
lods
mov
icebp
shl
inc
movs
fcmovb
or
mov
dec
jge
push
cwde
(bad)
xlat
mul
and
push
data16
and
popa
scas
leave
sar
popf
pushf
add
pusha
cdq
sbb
xchg
aad
rol
fiadd
out
leave
dec
fsubrp
and
ret
cli
sub
in
das
pop
add
add
push
mov
stos
sbb
inc
push
stc
sbb
lock
xchg
stc
ins
scas
js
aaa
or
shl
sbb
ins
call
xchg
add
aad
pop
jae
out
(bad)
clc
push
sbb
dec
cmp
out
lock
mov
stos
in
xor
clc
popa
ins
mov
mov
add
xor
sbb
loop
mov
pop
fcom
jge
fmul
int
int3
mov
push
dec
or
sahf
es
ffreep
sub
nop
cmp
dec
mov
ret
outs
movs
popf
in
fs
add
pop
rcl
fsubr
dec
add
push
sti
loope
and
(bad)
loopne
rcr
(bad)
cmc
bound
pop
xor
jecxz
and
test
dec
call
fcmovnu
into
ficomp
xchg
mov
retf
cmp
into
daa
sbb
xor
aad
aam
lods
mov
shl
adc
stc
ins
iret
xor
bound
adc
pop
inc
gs
mov
jbe
dec
cld
mov
push
sbb
retf
(bad)
and
sub
inc
loopne
retf
mov
adc
jae
xchg
mul
add
aaa
push
dec
gs
lock
(bad)
inc
out
push
pop
imul
mov
cdq
(bad)
imul
lods
stc
ret
jbe
sub
jmp
mov
mov
in
(bad)
stos
push
(bad)
cmp
mov
jmp
and
int
add
mov
and
stos
aaa
lahf
pop
jb
int
pop
and
push
add
sub
xchg
xchg
test
xchg
sbb
paddusb
leave
jo
aaa
fs
sbb
cmp
loopne
lods
sub
cdq
adc
in
mov
das
sti
sti
dec
(bad)
push
mov
scas
es
mov
fst
in
mov
shl
jp
mov
pop
sti
xor
add
call
adc
(bad)
dec
or
cmp
fisttp
or
inc
stc
cwde
mov
or
bound
and
ds
xchg
lahf
push
push
adc
cs
mov
sub
dec
fimul
ds
es
shl
nop
and
adc
fidiv
mov
icebp
iret
push
es
fs
sub
test
outs
test
dec
daa
cmp
(bad)
mov
add
mov
lea
add
sbb
fisttp
and
(bad)
pop
jno
sub
enter
jle
cmp
dec
movs
jmp
out
pop
test
jns
test
xchg
or
sub
(bad)
jmp
or
imul
mov
sbb
lds
call
dec
sbb
loop
sbb
daa
adc
jb
popa
add
and
out
lock
jecxz
fmulp
cmps
add
int
ret
loope
int
movs
sti
in
pop
adc
jb
addr16
sub
arpl
pop
mov
lods
xor
push
icebp
push
xchg
xor
js
xor
loope
mov
test
cmp
xchg
mov
mov
icebp
sahf
adc
jmp
fadd
arpl
cmps
popf
pop
leave
inc
push
aas
inc
add
lods
mov
push
retf
stos
cmp
xchg
xlat
scas
mov
push
xor
pop
xchg
mov
shr
pop
add
ret
jge
cli
pop
or
mov
movs
pop
xchg
fild
fs
movs
pop
mov
call
shl
(bad)
jbe
int
pusha
test
or
cli
bound
call
mov
cmp
add
test
sbb
leave
jp
jg
mov
(bad)
outs
ds
ins
ror
and
and
jne
test
jle
jl
dec
sub
std
dec
or
pop
mov
lea
push
xor
xlat
in
or
mov
adc
add
clc
sbb
out
jl
scas
sub
push
xor
fstp
pop
fwait
jge
imul
xor
rcr
mov
shr
ins
outs
jecxz
cmps
push
es
fcom
adc
push
sahf
clc
hlt
pop
push
pop
add
mov
adc
mov
pop
inc
push
mov
stos
jmp
jb
push
test
lock
xor
jae
add
adc
jmp
xchg
mov
mov
lds
movs
out
gs
fcmovnb
mov
or
sahf
inc
mov
xor
daa
pop
pop
mov
cs
cld
pop
adc
inc
jge
mov
jecxz
mov
sub
mov
call
mov
movs
sub
bsf
mov
pop
jl
dec
cwde
dec
fild
movs
push
dec
in
dec
add
pop
mov
in
aam
mov
test
jae
pop
mov
pop
outs
mov
xor
fild
push
std
inc
ins
dec
sub
xor
jo
dec
jno
cmps
xchg
pusha
mov
sahf
mov
outs
ins
aad
mov
das
add
test
enter
push
push
pop
shl
fsqrt
pop
and
cdq
shl
cld
add
test
in
mov
stos
cmps
xor
sbb
sub
mov
inc
mov
pushf
pushf
sbb
or
in
xchg
sbb
add
xor
lock
inc
sub
push
inc
lea
sbb
add
xor
cmp
sbb
pusha
dec
pop
daa
test
in
jp
lods
das
dec
cli
data16
and
xor
mov
jne
push
(bad)
pop
jecxz
(bad)
cs
xor
mov
jg
jae
test
aaa
call
loopne
adc
ds
pop
inc
(bad)
repz
and
push
imul
xchg
xor
mov
push
loope
scas
movs
cmps
cmps
shr
retf
movs
ins
adc
bound
aas
add
mov
inc
test
aaa
mov
out
inc
jmp
jle
lds
int
or
iret
outs
mov
xor
idiv
jnp
mov
es
dec
jae
outs
jg
mov
not
add
repnz
xchg
and
jmp
pusha
lods
std
cwde
imul
inc
sub
call
dec
cld
and
mov
lods
dec
ja
adc
stos
data16
mov
jmp
pushf
loope
push
int3
dec
mov
or
lods
xchg
sub
mov
pop
cli
jmp
adc
or
xchg
cli
inc
jb
xchg
adc
adc
sub
jne
out
(bad)
or
dec
xchg
adc
dec
ja
clc
daa
mov
jecxz
xchg
mov
push
xchg
rcl
pop
xor
add
pop
imul
test
mov
add
ret
dec
mov
xlat
mov
ficomp
sub
mov
add
test
lahf
and
out
jge
outs
stos
add
jp
sar
loopne
or
xor
mov
leave
sbb
sti
lods
ror
sbb
xchg
enter
aam
inc
adc
loopne
push
add
aad
sbb
sub
lahf
sub
mov
xor
jg
stc
push
push
push
test
xadd
sbb
sbb
inc
into
cs
movs
fbld
sub
inc
inc
lds
arpl
imul
ret
pop
xchg
or
and
add
jge
push
neg
enter
cs
(bad)
sub
imul
inc
call
mov
aam
mov
fcmovbe
(bad)
and
dec
fwait
add
jge
mov
mov
push
(bad)
adc
das
sbb
push
jmp
les
xchg
retf
push
arpl
retf
dec
stos
push
xchg
pusha
lods
stos
add
in
cmps
icebp
and
pop
or
leave
pop
sub
mov
dec
fidivr
retf
sub
cmp
jno
xchg
mov
jecxz
or
xchg
xchg
ins
fadd
mov
sbb
adc
inc
xchg
cwde
mov
sbb
rol
int3
dec
(bad)
pop
sar
adc
loop
in
or
data16
loope
lods
inc
mov
addr16
out
jecxz
mul
outs
and
lock
out
inc
int
mov
lods
lea
mov
pop
(bad)
cmc
sbb
mov
jae
or
add
xor
mov
pop
add
ja
ret
or
sbb
rep
(bad)
or
mov
mov
mov
add
fld
ret
fstp
push
lahf
pop
jge
movaps
dec
push
ins
jl
jg
scas
loopne
ja
jg
jo
lea
dec
inc
mov
bound
dec
mov
jbe
mov
sub
rcr
jns
or
xchg
in
adc
into
cmp
mov
repnz
adc
fidiv
fidiv
inc
(bad)
lock
fisttp
fidivr
into
push
pop
in
mov
inc
into
movs
fnstenv
pop
mov
push
test
xchg
adc
dec
sub
push
jbe
mov
sbb
cs
fild
in
mov
fmulp
mov
mov
dec
imul
loop
lods
fwait
(bad)
daa
(bad)
lds
adc
mov
es
xchg
mov
pop
inc
mov
xor
sbb
jg
jecxz
mov
sbb
mov
xor
pop
xor
inc
pop
sub
sub
imul
ret
imul
std
bound
adc
je
les
add
xchg
int
cmps
sub
ret
mov
push
or
(bad)
mov
test
mov
fld
outs
pop
(bad)
cwde
push
pop
outs
mov
mov
ins
scas
int3
mov
pushf
aaa
cmp
shl
arpl
inc
mov
push
push
lods
push
mov
lea
push
sub
cld
mov
icebp
int3
aas
xchg
gs
cmp
shr
and
aad
jp
push
jge
sahf
inc
add
stos
xchg
(bad)
sar
jae
ins
pop
gs
xchg
or
push
movzx
scas
mov
adc
push
inc
pop
mov
in
bound
and
sbb
ja
mov
iret
or
sbb
and
sbb
ja
rol
ja
daa
sbb
jno
fwait
push
adc
xor
push
push
fsubrp
out
in
dec
loopne
jns
div
je
mov
cmps
dec
inc
mov
pop
inc
push
mov
mov
in
hlt
xchg
dec
dec
pop
push
test
pop
pop
or
dec
inc
(bad)
jl
pop
cmps
push
mov
gs
mov
loopne
mov
fwait
pop
push
sub
retf
xor
adc
(bad)
dec
pusha
adc
xchg
jg
movs
lds
jmp
popa
jle
add
(bad)
jmp
add
jmp
aaa
mov
cmp
sar
pop
lds
data16
pop
inc
pop
in
repz
pop
pop
push
xchg
(bad)
daa
mov
into
adc
sbb
push
(bad)
push
iret
fs
aad
mov
test
mov
and
mov
jns
outs
add
comiss
add
mov
ja
add
std
inc
xchg
cmps
pcmpeqd
adc
push
and
push
rcl
or
pop
mov
inc
xchg
xchg
cmps
test
dec
cdq
pushf
push
jp
add
sub
jle
fist
pop
mov
dec
addr16
sub
jnp
add
sti
fcmovnbe
ss
mov
xor
inc
ss
leave
in
cld
pop
loope
push
dec
dec
out
mov
in
cld
pop
cmp
dec
stc
lock
mov
lahf
ret
jnp
lods
jb
(bad)
(bad)
fcmovb
jne
xor
adc
and
jge
jne
jg
ds
sub
shl
push
jo
inc
mov
fnstenv
push
mov
mov
add
imul
push
mov
add
loop
dec
mov
push
div
(bad)
mov
mov
sti
mov
clc
xchg
out
sub
fistp
arpl
loop
dec
add
jbe
out
or
(bad)
mov
cmc
fcomp
popa
movs
pop
es
cdq
dec
inc
sbb
sub
mov
adc
mov
jecxz
mov
jae
mov
ror
iret
and
shr
mov
daa
lea
outs
scas
push
dec
clc
imul
jp
mov
dec
xchg
xchg
icebp
pop
pop
fldcw
xchg
xor
jbe
push
rol
les
loop
mov
fcomp
mov
inc
aad
pop
rcr
push
xchg
ja
in
js
jbe
idiv
push
sub
and
aaa
pop
inc
ja
and
push
sti
mov
sbb
adc
and
jge
stos
or
xchg
inc
inc
cmps
xor
in
shr
daa
mov
out
jns
and
lods
in
push
dec
inc
int3
sub
jne
xor
xor
pop
jb
xor
sub
pop
mov
nop
shl
hlt
add
icebp
inc
push
or
sbb
shr
out
xor
mov
stos
push
arpl
out
pusha
ins
(bad)
push
dec
in
cdq
jle
rcr
dec
bound
ret
mov
sub
and
push
xcrypt-ecb
cmps
or
jp
mov
mov
lods
push
outs
push
pop
xor
mov
mov
xchg
push
or
loop
adc
sub
test
mov
pop
pop
mov
loop
push
mov
mov
shr
arpl
ret
movs
aam
clc
dec
stc
sbb
ret
in
cmp
out
mov
lods
imul
mov
sbb
clc
mov
sub
rol
mov
outs
mov
je
dec
hlt
cmc
mov
pusha
sbb
(bad)
icebp
(bad)
sti
call
jecxz
cmps
dec
pusha
iret
retf
and
loope
ja
mov
inc
sti
repnz
xchg
jns
inc
test
jno
jno
fucomip
dec
pusha
mov
test
xchg
jae
push
pop
add
stc
xor
mov
jo
mov
popf
stc
adc
and
cdq
xchg
or
std
nop
xchg
cs
cmps
adc
jle
out
in
(bad)
pop
mov
inc
nop
sub
scas
jae
lock
adc
sbb
mov
and
jbe
xchg
sbb
sbb
int3
cli
(bad)
lods
mov
xchg
add
call
cmp
jecxz
jg
sub
push
mov
aaa
jb
cli
cmp
ja
dec
cmp
aas
loope
cs
(bad)
popf
cmc
mov
xchg
xlat
jp
push
sub
adc
inc
jae
inc
scas
jo
int3
je
je
clc
jae
xor
jmp
jecxz
jge
pop
movs
add
add
and
sbb
imul
mov
push
cld
and
cmps
or
addr16
sar
aaa
pusha
movs
mov
ret
(bad)
sti
push
push
push
mov
ret
mov
arpl
outs
aam
(bad)
mov
pop
or
add
pop
xchg
fisttp
or
enter
sbb
test
xchg
xchg
(bad)
mov
imul
sub
psllw
loope
dec
dec
(bad)
ret
adc
in
jp
shl
sti
int3
iret
sahf
xor
xchg
push
inc
push
jl
mov
mov
pop
xor
and
sbb
addr16
(bad)
(bad)
push
ja
mov
fs
push
or
mov
test
xchg
pop
mov
or
inc
xchg
fwait
lods
jb
das
cdq
test
addr16
cwde
dec
add
and
scas
(bad)
pop
aaa
rcl
xchg
adc
mov
lahf
mov
adc
test
xor
int
bound
add
pop
inc
jp
push
push
or
xchg
div
cmc
pop
xor
not
lea
xor
push
sbb
xor
inc
or
js
lahf
fmul
call
xor
repz
mov
add
or
arpl
out
rcl
jge
cmc
cmp
loope
jbe
lea
shufps
jl
sbb
into
in
in
push
add
data16
mov
call
push
push
clc
push
mov
lods
mov
mov
ins
jmp
mov
and
fcom
in
push
in
out
cld
fmul
cmps
test
cwde
add
stos
sub
call
(bad)
loope
cwde
sbb
fnstcw
xchg
scas
mov
inc
movs
or
push
dec
hlt
pusha
lock
jb
sti
lds
dec
sub
push
xchg
out
lods
push
cmp
inc
xchg
push
adc
adc
std
loopne
adc
rol
aaa
and
ret
jge
inc
dec
(bad)
xor
push
or
mov
fld
outs
fcomp
add
cmp
pop
add
repnz
cmc
add
loop
mov
sahf
add
xor
ror
and
jle
fnstsw
xor
and
das
push
push
adc
dec
xchg
fdivr
jmp
push
inc
adc
inc
enter
mov
jmp
mov
jo
in
xor
test
das
cdq
jge
xchg
pop
dec
and
and
repnz
retf
adc
jne
cmps
mov
sar
jo
repnz
js
jg
mov
test
cmp
dec
in
outs
pop
sub
sbb
mov
mov
inc
adc
xor
xor
outs
(bad)
dec
dec
push
(bad)
cli
jmp
or
add
inc
cmp
pop
jl
test
push
cs
(bad)
mov
data16
(bad)
fiadd
fidivr
lahf
sti
or
cmp
(bad)
lea
xchg
dec
xchg
lahf
aaa
pop
push
bound
sbb
mov
ja
push
hlt
pusha
mov
sub
sbb
add
mov
push
rcl
iret
and
jecxz
jle
mov
and
jp
jmp
jnp
popf
cs
out
(bad)
dec
jb
(bad)
(bad)
cld
dec
pop
pop
sub
ins
not
sbb
test
and
fmul
popf
es
mov
mov
repnz
ret
push
cmps
mov
cmps
test
jge
ja
jmp
xor
mov
retf
dec
cmp
lock
sub
lock
test
mov
cmp
test
aaa
or
es
push
stc
mov
mov
pushf
jae
gs
dec
dec
pop
mov
add
repnz
inc
xor
sub
es
jl
cmp
or
or
mov
lahf
shr
xchg
bound
add
scas
push
pop
dec
aas
or
xchg
sbb
mov
mov
jge
das
dec
outs
into
or
or
sti
cli
mov
jp
xchg
in
xchg
xor
lahf
ss
sti
(bad)
inc
out
mov
mov
fild
sbb
sti
dec
test
ret
inc
loop
popf
mov
pop
or
adc
jmp
or
sbb
int
mov
push
pop
push
jle
les
(bad)
ret
les
mov
add
aas
inc
movs
mov
xor
xor
arpl
pop
cmp
or
dec
fstp
fs
jmp
sub
into
in
rol
in
xlat
rcl
stc
cld
sub
pusha
not
call
scas
iret
push
sub
aad
jp
bound
jo
retf
push
sub
add
retf
mov
fwait
push
imul
(bad)
mov
aam
sbb
pop
jle
movs
or
enter
xchg
mov
xchg
movs
cmp
leave
les
add
and
mov
cdq
xchg
mov
sub
cwde
mov
sub
mov
pop
mov
jno
mov
xchg
fisubr
or
sbb
inc
push
jge
push
mov
aas
sbb
push
jl
mov
jmp
in
inc
in
push
jns
retf
rcr
sar
inc
and
sbb
push
xchg
and
addr16
jmp
adc
push
xchg
jnp
int
adc
pop
cmp
and
in
int
jae
and
mov
dec
sub
mov
or
cmp
out
loop
jae
neg
int3
test
add
xchg
shr
pop
jge
adc
cmp
push
aad
pop
ja
in
adc
mov
sbb
jl
mov
(bad)
inc
std
aaa
pop
mov
aaa
jae
test
cmp
add
call
dec
xchg
shl
xchg
jmp
ds
mov
push
inc
or
repnz
pushf
popa
sbb
mov
aam
add
into
frstpm(287
push
outs
ret
ss
adc
sbb
data16
and
dec
xchg
daa
xor
xor
pop
aaa
pusha
ss
or
retf
test
pop
(bad)
pop
jge
cmc
pop
clc
sub
jnp
arpl
in
es
cs
mov
xchg
or
push
jne
mov
cwde
dec
into
pop
mov
add
mov
push
pop
dec
loop
jg
or
xlat
mov
imul
or
push
push
pushf
cmp
or
cmp
inc
retf
inc
mov
(bad)
outs
fmul
push
jno
inc
cmps
mov
inc
mov
mov
repnz
fs
adc
pop
sub
imul
ficom
aaa
movs
push
xor
lds
and
retf
adc
inc
dec
jle
mov
dec
pop
shr
sbb
lahf
lods
add
out
std
into
ins
sub
pop
jnp
(bad)
mov
(bad)
or
jo
lds
mov
movs
arpl
push
and
push
and
mov
push
dec
cwde
and
push
aas
dec
mov
pop
push
mov
fs
imul
js
cli
mov
hlt
fild
adc
adc
pop
add
push
(bad)
mov
fsub
out
push
xchg
stos
repnz
ret
dec
cmps
mov
es
add
je
(bad)
bound
pop
or
ja
jno
add
pop
sti
cmp
dec
dec
cmp
sbb
sahf
cmp
pop
or
aas
xor
push
lods
pushf
neg
dec
jmp
out
add
out
lahf
repz
xchg
shl
xchg
outs
jge
scas
scas
mov
mov
outs
adc
and
xchg
jns
out
sub
add
out
jle
add
rcl
sub
icebp
pop
jb
stc
pop
cmp
loopne
jp
pop
ret
xchg
mov
arpl
xor
cli
(bad)
xchg
adc
dec
mov
dec
xchg
shr
cmps
(bad)
imul
push
push
sti
arpl
sbb
scas
pusha
xlat
mov
ins
jge
or
imul
sub
mov
sub
jecxz
or
fist
ins
repz
mov
mov
jne
loop
stc
or
jb
sbb
arpl
cmps
ja
jnp
adc
(bad)
rcr
push
cld
imul
pop
xlat
iret
sbb
test
mov
sbb
or
mov
cmp
mov
test
loope
mov
mov
out
add
ins
adc
pop
mov
pop
sbb
push
jnp
xchg
clc
lods
enter
ficomp
repnz
cmp
pusha
sar
bound
scas
inc
pop
hlt
inc
mov
shr
mov
sub
int
pop
data16
jmp
mov
jge
mov
push
and
mov
sti
mov
cmps
cs
pop
add
(bad)
and
(bad)
or
adc
std
popf
inc
ret
xor
ins
inc
xor
push
daa
cwde
sbb
sub
sub
pop
xor
jmp
xchg
pop
int3
retf
xor
scas
dec
pop
daa
push
into
lods
sbb
cwde
xchg
cs
std
xchg
cmps
mov
(bad)
push
mov
add
mov
add
lea
jl
xchg
sbb
aas
or
outs
pop
ins
imul
ret
or
sub
lods
repz
movs
test
push
cmp
xor
lahf
je
xor
dec
enter
in
mov
xchg
sti
inc
pop
(bad)
sbb
shl
sub
movs
fs
push
jl
xor
lahf
jbe
fcmovu
cmp
pop
mov
stc
jmp
jo
pop
nop
cs
mov
jg
adc
lds
icebp
sub
push
xor
pop
mov
stos
mov
lods
fstp
adc
int
jbe
stos
outs
pop
and
test
xor
mov
daa
or
push
pop
xchg
sar
cld
sub
mov
inc
mov
scas
sar
mov
pop
mov
ficomp
out
loope
adc
jns
hlt
cmp
das
cmps
pop
pushf
dec
mov
mov
ror
mov
dec
jnp
mov
aaa
push
sahf
add
icebp
pop
xor
(bad)
sti
out
(bad)
mov
aas
add
mov
and
adc
lock
push
(bad)
inc
and
or
xor
not
add
xchg
inc
jmp
inc
test
inc
sbb
push
xor
mov
fsubr
cmp
outs
sbb
imul
mov
pextrw
mov
adc
or
sub
sub
sub
imul
pop
in
loopne
ror
cs
mov
(bad)
lds
out
jmp
jmp
out
imul
rol
push
mov
xor
std
xchg
mov
shr
pop
popa
mov
movs
jne
(bad)
jl
inc
enter
push
bound
xor
into
push
push
leave
push
mov
int
inc
adc
fsub
popf
mov
shl
sti
push
test
push
test
mov
mov
push
fwait
aam
jle
mov
xchg
add
xchg
loopne
cld
add
in
dec
fnstsw
xchg
xchg
push
icebp
mov
aaa
dec
aad
adc
sar
pop
rcl
pop
ret
out
inc
sub
push
ror
cdq
and
mov
mov
fsubr
call
push
dec
es
cmp
adc
xchg
cmp
fwait
loope
rcl
pop
cmp
push
mov
mov
daa
sbb
int3
add
hlt
jge
xor
cmp
clc
pop
aam
or
or
mov
and
fwait
push
sar
dec
retf
push
adc
test
loope
inc
or
xchg
fld
push
test
arpl
call
mov
cmp
cdq
adc
not
addr16
dec
cmp
in
je
cmps
sbb
cmp
pop
dec
(bad)
cs
mov
(bad)
neg
or
std
sahf
out
out
mov
mov
jl
mov
or
dec
push
push
xchg
inc
(bad)
les
in
ds
fild
fstp
je
dec
pushf
xor
movs
dec
retf
sub
out
mov
pop
adc
adc
data16
faddp
push
push
adc
fwait
mov
iret
or
pop
das
pop
sbb
cmp
in
aam
out
out
cmp
inc
sbb
add
fisttp
cmp
loop
and
aas
pop
sub
jmp
adc
mov
cmp
dec
dec
xor
mov
loopne
jp
xor
in
cmp
jb
popa
mov
fstp
jnp
retf
je
dec
out
push
xchg
mov
xchg
sti
adc
and
dec
inc
in
adc
in
in
stc
les
sbb
adc
scas
mov
mov
ja
ds
les
mov
(bad)
push
(bad)
std
pop
rcl
xchg
jecxz
fidiv
fwait
nop
scas
jne
out
scas
cli
in
adc
out
outs
pop
inc
clc
add
push
or
or
inc
hlt
test
test
xor
jbe
xchg
cmc
bound
mov
iret
shr
push
fld
mov
cli
iret
ins
mov
xchg
nop
rol
mov
sub
dec
add
cdq
mov
mov
test
rcl
dec
inc
or
call
ds
cmps
popf
mov
movs
xchg
pop
inc
jecxz
push
(bad)
dec
icebp
in
pop
inc
(bad)
js
cli
push
dec
pop
push
cli
clc
retf
xchg
bnd
sahf
into
stc
lock
inc
std
in
pop
xchg
mov
mov
or
test
inc
inc
repnz
pop
gs
pop
retf
jmp
push
and
pop
(bad)
jmp
mov
fcom
xor
pop
cld
mov
outs
mov
lods
mov
sbb
(bad)
mov
mov
xchg
jecxz
call
(bad)
mov
scas
or
and
pop
imul
daa
adc
outs
mov
sti
xlat
push
stos
aas
popf
or
sbb
jne
popa
lea
nop
imul
rcl
in
rcl
cmp
(bad)
cli
arpl
bswap
mov
ins
mov
pushf
popa
mov
pop
mov
mov
sbb
xchg
mov
in
int
pop
mov
xchg
retf
sar
xor
pop
sti
xor
stos
stos
ins
mov
lods
idiv
or
push
xor
sbb
std
test
jbe
fmulp
sbb
es
outs
mov
shl
stc
cli
jge
imul
push
int
jae
jecxz
fidiv
jp
mul
fucomp
test
sub
cmc
xor
adc
xlat
xor
pop
xlat
shl
not
addr16
sbb
mov
inc
jbe
mov
xchg
jnp
sub
mov
inc
mov
aas
icebp
loopne
out
es
inc
jecxz
out
push
neg
sub
jne
cwde
inc
aaa
sub
xor
sbb
mov
xlat
push
push
div
push
xchg
popa
mov
mov
dec
and
add
xor
adc
(bad)
in
adc
stos
scas
push
(bad)
rcl
rcl
push
mov
xor
jnp
neg
sbb
mov
sbb
mov
in
xchg
test
adc
(bad)
jns
das
sub
add
jecxz
shl
popa
or
aas
mov
mov
adc
retf
fld1
call
or
push
cmp
leave
push
cmp
xchg
stc
xchg
popa
mov
or
ja
and
test
loop
pop
add
dec
ja
sbb
retf
shr
mov
shr
sub
mov
aas
loope
sahf
inc
push
cmp
or
pop
cs
stos
mov
sar
xchg
int
test
aad
dec
mov
pop
sbb
bound
dec
dec
mov
lea
jl
(bad)
(bad)
sbb
push
inc
movs
mov
fnstcw
or
cmps
sbb
in
addr16
sahf
(bad)
(bad)
cmp
movs
in
cli
int
cmp
(bad)
xor
ss
or
loop
cmc
les
pop
xchg
or
or
(bad)
shl
outs
(bad)
out
stos
fcom
mov
scas
and
loopne
inc
jl
out
lock
std
(bad)
sbb
movs
jmp
pop
pop
or
int
xchg
hlt
inc
out
jmp
sbb
push
jmp
mov
xchg
push
and
lds
or
(bad)
dec
dec
xor
movs
ucomiss
mov
rcr
imul
ret
mov
mov
pop
push
lea
mov
mov
xor
hlt
pushf
neg
dec
mov
retf
add
fadd
into
inc
cdq
xchg
inc
push
mov
mov
std
stos
inc
jae
pop
mov
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
inc
add
add
add
add
arpl
mov
in
and
scas
in
xchg
in
nop
in
test
mov
in
cdq
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
in
and
scas
in
mov
mov
in
mov
mov
push
add
add
cmp
mov
in
mov
mov
in
mov
mov
in
and
xchg
in
(bad)
in
xchg
in
mov
mov
in
call
add
dec
in
cdq
in
popf
in
pushf
in
mov
mov
in
pushf
in
mov
mov
in
mov
mov
in
xchg
mov
in
test
mov
in
(bad)
in
cdq
in
and
mov
mov
add
data16
stos
in
and
xchg
in
cmps
in
mov
mov
in
test
mov
in
mov
mov
in
and
xchg
in
mov
mov
in
mov
mov
in
sahf
in
popf
in
and
mov
mov
in
mov
mov
push
push
add
add
mov
in
test
mov
in
popf
in
and
xchg
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
(bad)
in
cmps
push
pop
add
add
mov
mov
in
mov
mov
in
(bad)
in
movs
in
mov
mov
in
movs
in
scas
in
mov
mov
in
scas
in
cwde
in
xchg
mov
in
xchg
in
xchg
mov
in
mov
or
add
dec
in
movs
in
mov
mov
in
scas
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
in
cmps
in
xchg
in
cmps
in
mov
mov
in
mov
mov
add
jb
mov
in
cdq
in
movs
in
scas
in
mov
mov
in
mov
mov
in
mov
mov
in
cmps
in
xchg
in
xchg
in
mov
mov
in
xchg
in
xchg
in
test
mov
in
nop
in
mov
mov
in
xchg
in
xchg
mov
in
mov
mov
in
cdq
push
or
add
pop
in
mov
mov
in
mov
mov
in
cwde
in
(bad)
in
(bad)
in
xchg
in
xchg
in
cmps
in
mov
mov
in
xchg
in
(bad)
in
xchg
in
mov
mov
in
mov
mov
in
lods
in
pushf
in
test
mov
add
arpl
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
and
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
lods
in
mov
mov
push
or
add
push
in
mov
mov
in
mov
mov
in
sahf
in
mov
mov
in
xchg
in
test
mov
in
cmps
in
mov
mov
in
cdq
in
and
mov
mov
push
or
in
xchg
in
xchg
in
mov
mov
in
test
mov
in
mov
mov
in
and
xchg
in
mov
mov
in
and
mov
mov
push
push
add
add
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
and
(bad)
in
mov
mov
in
mov
mov
in
test
mov
in
cdq
push
sldt
add
mov
in
xchg
in
mov
mov
in
movs
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
stos
in
fwait
in
and
mov
mov
in
cmps
in
xchg
push
adc
add
dec
in
cmps
in
cwde
in
mov
mov
in
xchg
mov
in
lods
in
test
mov
in
sahf
in
cdq
in
test
mov
in
mov
mov
in
xchg
in
mov
adc
add
push
in
nop
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
and
pushf
in
mov
mov
in
(bad)
in
mov
mov
in
mov
mov
add
imul
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
lods
in
mov
mov
in
(bad)
in
mov
mov
in
mov
mov
in
pushf
in
mov
mov
in
mov
mov
in
nop
in
mov
adc
add
dec
in
test
mov
in
mov
mov
in
mov
mov
in
pushf
in
mov
mov
in
stos
in
call
in
test
mov
in
test
mov
in
pop
adc
add
dec
in
test
mov
in
lods
in
fwait
in
test
mov
in
nop
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
xchg
in
mov
mov
add
ins
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
fwait
in
cdq
in
lahf
in
mov
mov
in
cwde
in
xchg
mov
in
fwait
in
test
mov
in
and
mov
mov
push
push
add
add
mov
in
lahf
in
mov
mov
in
mov
mov
in
movs
in
xchg
in
call
in
stos
in
scas
in
nop
in
popf
in
popf
in
lods
in
mov
mov
in
lahf
in
mov
mov
in
mov
mov
push
pop
add
add
in
test
mov
in
test
mov
in
mov
mov
in
xchg
in
cmps
in
mov
mov
in
mov
mov
in
mov
mov
push
sbb
add
dec
in
scas
in
(bad)
in
xchg
in
sahf
in
xchg
mov
in
mov
mov
in
xchg
in
xchg
in
mov
mov
in
mov
mov
in
scas
in
and
xchg
in
test
mov
add
ins
in
mov
mov
in
movs
in
stos
in
mov
mov
in
scas
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
(bad)
in
mov
mov
in
cmps
in
and
mov
mov
in
lahf
push
sbb
add
push
in
mov
mov
in
scas
in
mov
mov
in
mov
mov
in
and
mov
mov
in
movs
in
xchg
in
scas
in
cmps
in
and
xchg
mov
in
stos
in
mov
sbb
add
aas
in
lods
in
scas
in
scas
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
(bad)
in
mov
mov
in
mov
sbb
add
data16
mov
mov
in
sahf
in
mov
mov
in
mov
mov
in
scas
in
mov
mov
in
mov
mov
in
call
in
test
mov
in
mov
mov
in
xchg
mov
in
test
mov
push
sbb
in
and
lods
in
mov
mov
in
mov
mov
in
xchg
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
(bad)
in
mov
push
add
add
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
cmps
in
scas
in
test
mov
in
mov
mov
in
sahf
in
xchg
in
mov
mov
in
mov
mov
in
lods
push
pop
add
add
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
cdq
in
fwait
in
mov
mov
in
fwait
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
in
mov
mov
push
and
add
pop
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
test
mov
in
test
mov
in
mov
mov
in
mov
mov
in
xchg
mov
in
xchg
and
add
ins
in
mov
mov
in
scas
in
xchg
mov
in
mov
mov
in
cwde
in
movs
in
mov
mov
in
mov
mov
in
mov
mov
in
popf
in
mov
mov
in
xchg
in
mov
mov
in
xchg
in
mov
and
add
cmp
mov
in
xchg
in
mov
mov
in
mov
mov
in
cdq
in
test
mov
in
movs
in
xchg
in
mov
mov
in
xchg
in
mov
add
mov
in
stos
in
xchg
in
cmps
in
pushf
in
mov
mov
in
xchg
in
mov
mov
in
cmps
in
mov
mov
in
mov
mov
in
sahf
in
scas
in
scas
in
test
mov
in
xchg
in
xchg
in
test
mov
in
mov
and
add
arpl
mov
in
cdq
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
in
mov
mov
in
and
xchg
in
mov
mov
in
mov
mov
add
pop
in
mov
mov
in
mov
mov
in
and
mov
mov
in
xchg
mov
in
mov
mov
in
sahf
in
scas
in
movs
in
scas
in
xchg
in
fwait
in
test
mov
in
test
mov
add
outs
in
test
mov
in
xchg
in
mov
mov
in
sahf
in
mov
mov
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
cmps
in
pushf
in
xchg
in
mov
mov
push
daa
add
add
mov
in
mov
mov
in
xchg
mov
in
mov
mov
in
call
in
lahf
in
xchg
in
test
mov
in
and
cdq
in
nop
in
stos
in
mov
sub
add
push
in
mov
mov
in
cdq
in
mov
mov
in
mov
mov
in
lods
in
cwde
in
pushf
in
call
in
mov
mov
in
stos
in
mov
mov
in
mov
mov
add
aas
in
(bad)
in
mov
mov
in
(bad)
in
xchg
in
mov
mov
in
(bad)
in
scas
in
lods
in
and
cdq
in
xchg
in
mov
mov
in
movs
push
sub
add
inc
in
xchg
mov
in
and
mov
mov
in
movs
in
mov
mov
in
mov
mov
in
lahf
in
mov
mov
in
mov
mov
push
sub
add
dec
in
xchg
mov
in
movs
in
popf
in
lahf
in
fwait
in
xchg
in
cmps
in
mov
mov
in
mov
mov
in
mov
mov
in
and
scas
in
call
in
(bad)
in
test
mov
in
xchg
mov
in
xchg
in
mov
mov
in
xchg
mov
in
mov
mov
in
mov
mov
in
cmps
in
xchg
mov
in
and
lods
in
scas
in
cwde
in
lods
in
pop
sub
in
xchg
in
(bad)
in
mov
mov
in
mov
mov
in
pushf
in
and
mov
mov
in
test
mov
in
stos
in
cmps
in
(bad)
in
mov
mov
in
lods
in
test
mov
in
mov
mov
in
lea
add
add
mov
in
mov
mov
in
mov
mov
in
xchg
mov
in
and
mov
mov
in
mov
mov
in
cdq
in
lods
in
mov
mov
in
mov
mov
in
mov
mov
in
sahf
in
xchg
mov
in
call
in
xchg
in
and
pushf
in
(bad)
in
test
mov
in
and
stos
in
mov
mov
in
xchg
mov
in
xchg
in
test
mov
in
mov
mov
in
mov
mov
in
popf
in
mov
mov
in
and
test
mov
in
mov
mov
in
mov
xor
add
dec
in
mov
mov
in
(bad)
in
stos
in
stos
in
mov
mov
in
xchg
mov
in
xchg
in
mov
mov
in
stos
in
mov
mov
in
fwait
in
(bad)
in
scas
push
xor
add
cmp
mov
in
cdq
in
cdq
in
and
lahf
in
test
mov
in
mov
mov
in
scas
in
mov
mov
in
popf
in
mov
xor
add
push
in
nop
in
mov
mov
in
(bad)
in
popf
in
mov
mov
in
mov
mov
in
movs
in
xchg
mov
in
(bad)
in
mov
mov
in
mov
mov
add
arpl
mov
in
mov
mov
in
mov
mov
in
xchg
in
xchg
in
mov
mov
in
nop
in
mov
mov
in
call
in
mov
mov
in
mov
mov
in
(bad)
in
scas
in
xchg
mov
add
aas
in
cwde
in
xchg
in
movs
in
mov
mov
in
xchg
in
mov
mov
in
lods
in
and
xchg
mov
in
sahf
in
xchg
mov
in
pushf
push
xor
in
mov
mov
in
test
mov
in
test
mov
in
nop
in
and
lahf
in
mov
mov
in
cwde
in
(bad)
in
and
mov
mov
in
xchg
in
mov
mov
in
stos
in
scas
in
test
mov
push
add
add
mov
in
mov
mov
in
stos
in
mov
mov
in
fwait
in
and
nop
in
xchg
in
xchg
in
scas
in
mov
mov
in
mov
mov
in
mov
add
mov
in
fwait
in
(bad)
in
and
xchg
in
cdq
in
movs
in
mov
mov
in
mov
mov
in
cmps
in
and
mov
mov
in
xchg
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
(bad)
in
mov
mov
add
inc
in
lods
in
mov
mov
in
mov
mov
in
xchg
in
test
mov
in
and
mov
mov
in
xchg
in
mov
mov
in
mov
mov
add
push
in
mov
mov
in
movs
in
test
mov
in
stos
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
scas
in
test
mov
in
fwait
in
stos
in
xchg
push
cmp
add
aas
in
mov
mov
in
mov
mov
in
popf
in
mov
mov
in
mov
mov
in
xchg
mov
in
and
lods
in
cwde
push
cmp
add
data16
and
stos
in
movs
in
and
test
mov
in
xchg
mov
in
pushf
in
mov
mov
in
mov
mov
in
xchg
in
(bad)
in
xchg
in
stos
in
fwait
in
mov
mov
in
xchg
in
stos
in
and
mov
mov
in
mov
mov
add
dec
in
test
mov
in
mov
mov
in
(bad)
in
(bad)
in
xchg
mov
in
mov
mov
in
popf
in
mov
mov
in
xchg
in
nop
in
mov
mov
push
cmp
in
xchg
in
and
xchg
in
popf
in
mov
mov
in
and
mov
mov
in
pushf
in
scas
in
test
mov
in
cmps
in
mov
mov
in
cdq
in
mov
mov
in
mov
mov
in
fwait
in
add
add
add
mov
in
cmps
in
mov
mov
in
xchg
in
test
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
push
aas
add
add
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
fwait
in
cdq
in
mov
mov
in
test
mov
in
xchg
in
test
mov
in
cwde
push
inc
add
add
mov
in
scas
in
test
mov
in
mov
mov
in
xchg
mov
in
call
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
xchg
in
mov
mov
in
mov
mov
add
push
in
mov
mov
in
and
mov
mov
in
(bad)
in
fwait
in
mov
mov
in
test
mov
in
xchg
mov
in
(bad)
in
mov
mov
or
dec
add
push
push
sub
in
add
inc
mov
jp
in
arpl
pop
and
stos
std
sbb
jge
std
test
push
loope
sub
adc
ror
inc
push
ret
inc
dec
and
popa
pop
pop
sub
push
cli
cmp
aaa
pop
popa
cwde
imul
repnz
fsub
scas
jmp
lods
(bad)
sub
in
sub
cmp
or
sbb
pop
pmaxsw
xchg
pop
xchg
mov
fdiv
jae
pop
pop
mov
jg
adc
dec
ds
out
mov
sahf
mov
inc
dec
or
pop
xlat
cmp
jnp
pop
jo
popa
int
dec
sub
in
mov
sub
jb
sti
cmp
jmp
dec
mov
or
pop
fisubr
adc
inc
and
xor
iret
xchg
mov
jmp
pop
sbb
shl
sbb
lock
mov
movs
jecxz
sub
mov
gs
clc
sbb
inc
rol
adc
mov
inc
aaa
inc
sar
sub
cmp
pop
rcr
cld
pop
mov
dec
aas
xor
pushf
jl
es
fs
ds
push
cmp
pop
outs
push
xor
pop
dec
mov
pop
mov
mov
sub
js
call
shl
(bad)
inc
div
shl
movs
sahf
in
sub
ins
(bad)
push
or
outs
arpl
sub
push
and
cwde
inc
pop
in
adc
jp
mov
aam
out
jne
jg
xchg
les
aaa
pop
gs
mov
fs
mov
test
test
mov
jae
push
or
mov
dec
jg
cmp
or
sbb
es
call
mov
shl
sub
ja
pop
shl
jp
or
clc
fucomip
dec
inc
push
outs
les
in
xor
aas
outs
mov
clc
sbb
jge
adc
jo
mov
loope
cmps
add
jbe
inc
pop
inc
mov
mov
out
push
dec
mov
xchg
xchg
ret
pusha
sub
arpl
rcr
xchg
repnz
outs
adc
mov
inc
test
in
jb
movs
dec
std
sbb
sub
addr16
in
add
rcr
outs
adc
test
xor
inc
jne
mov
xchg
jg
xchg
add
cdq
cwde
pushf
mov
push
bound
jns
(bad)
arpl
lds
dec
cmp
shl
scas
and
jmp
retf
or
fsubr
pusha
mov
sti
xchg
push
add
jmp
add
jns
mov
test
mov
sub
ret
pop
fwait
push
xchg
rcr
in
sbb
jp
xchg
bound
hlt
ds
imul
xor
pop
cmp
aas
or
lock
pop
int3
repnz
mov
rcr
mov
adc
jge
cwde
retf
xor
aaa
loop
sub
adc
repnz
imul
pop
repz
repz
mov
jae
(bad)
mov
jmp
icebp
lock
(bad)
pop
mov
sub
fidiv
add
xor
xlat
mov
cmps
pop
and
xchg
xchg
xchg
retf
aaa
in
daa
push
sbb
pop
jae
or
das
push
push
gs
push
sbb
(bad)
cmp
sbb
test
push
popa
mov
or
ret
mov
push
push
outs
jl
xchg
movs
and
sbb
mov
(bad)
popa
(bad)
loopne
scas
dec
fstp
mov
inc
movs
push
aad
sahf
fadd
push
(bad)
retf
ror
and
and
jp
cmp
jb
mov
stos
daa
xlat
pop
dec
ret
xchg
xchg
cmps
adc
mov
xchg
out
mov
jge
adc
sub
xchg
jp
movs
cmp
and
mov
ret
xor
in
or
mov
sbb
dec
pop
inc
mov
scas
cmps
jmp
into
movs
mov
sbb
push
fdivr
mov
in
(bad)
ins
mov
enter
call
cmc
jmp
add
cld
mov
cld
les
push
gs
push
mov
cmp
addr16
pop
call
xchg
repz
sbb
and
adc
pushf
push
retf
inc
cmp
adc
es
popa
push
test
push
dec
add
(bad)
xor
retf
push
lock
out
es
pushf
mov
add
out
pop
adc
clc
cmp
fcomp
mov
sub
loop
pop
ret
daa
sub
mov
xor
scas
call
cmps
ret
push
push
push
bound
adc
pop
arpl
cmps
jmp
ror
adc
sbb
adc
call
xchg
mov
cmps
xor
(bad)
addr16
cli
inc
cmc
jl
xchg
or
mov
outs
lahf
ret
cmc
xor
adc
clc
scas
dec
push
inc
sbb
jmp
les
retf
sub
shl
mov
adc
pop
stos
fsubp
fcmovb
cmps
movs
adc
fidiv
mov
cdq
adc
shl
test
mov
sub
out
jmp
jle
ficom
push
mov
(bad)
sub
mov
int
mov
sub
sub
add
or
and
push
pop
stc
cmp
dec
jmp
jmp
repnz
mov
xchg
pushf
retf
pop
push
ret
mov
inc
xor
lods
clc
add
and
in
mov
test
popf
xor
inc
dec
jle
ins
xchg
xchg
add
jmp
rcl
mov
mov
(bad)
xchg
aad
lock
mov
adc
(bad)
int3
test
nop
gs
sub
loop
call
fwait
lfs
jnp
dec
out
or
stc
sahf
xor
pop
mov
push
push
call
mov
sbb
adc
push
push
hlt
adc
sti
or
cmp
jno
sti
je
mov
ror
add
clc
adc
ds
ret
sub
jns
nop
xor
int3
leave
outs
out
aaa
ja
and
or
fmul
mov
pushf
addr16
fcom
mov
mov
dec
pop
xchg
mov
clc
not
scas
and
cmp
ror
jbe
pop
out
das
mov
ins
out
sub
aas
nop
xchg
jnp
(bad)
ror
sub
leave
add
pop
sbb
pop
lods
push
fiadd
inc
int3
icebp
outs
mov
mul
add
int
stos
sti
ret
in
jae
sub
jge
iret
popa
or
mov
xchg
and
or
dec
leave
mov
inc
scas
scas
out
out
jnp
retf
ja
and
mov
dec
push
ror
jo
rcl
stos
cmps
test
inc
retf
pop
test
mov
sub
inc
sbb
mov
mov
dec
out
mov
push
aaa
mov
mov
cmc
ins
cmp
mov
or
push
mov
dec
push
xchg
inc
fsub
pop
outs
aad
add
je
mov
xor
pop
pop
mov
lods
cmps
pop
mov
dec
imul
inc
stos
xor
stos
or
sub
je
setae
pop
sub
push
jns
sub
mov
data16
je
es
fldcw
mov
int3
mov
(bad)
push
xor
and
jbe
sti
sbb
add
out
sub
out
inc
iret
fst
adc
mov
out
inc
or
shr
scas
daa
pusha
sub
or
aas
int3
in
test
iret
test
div
inc
pop
jb
and
mov
xor
popa
(bad)
stc
or
xor
in
pop
aam
xchg
imul
xchg
sub
push
adc
(bad)
jnp
fldcw
cld
in
lock
pop
mov
clc
sub
pavgw
jno
mov
cmp
sub
fisttp
mov
and
or
mov
adc
in
xchg
ins
loop
push
fcomp
ss
shl
dec
movs
call
or
stc
ins
imul
adc
sub
in
sub
mov
and
ret
pop
aaa
and
mov
imul
xchg
aad
fisttp
jne
or
(bad)
gs
loopne
loopne
aaa
cmp
xchg
sub
add
push
fld
adc
push
movs
retf
or
data16
outs
jp
aam
pop
mov
sbb
neg
scas
sbb
mov
pushf
xchg
push
xor
adc
jae
sub
dec
dec
lea
stc
push
movs
add
jbe
pop
sub
sbb
add
and
add
dec
adc
lods
jge
jmp
inc
push
dec
jo
lahf
sub
cmp
call
dec
adc
inc
xchg
inc
xlat
jbe
outs
addr16
mov
cwde
mov
lods
cs
(bad)
in
jl
out
std
fimul
sar
(bad)
cmps
pop
loop
mov
add
mov
aaa
outs
pop
sub
sbb
jg
mov
int3
sbb
or
xchg
adc
push
retf
fwait
inc
shl
fstp
and
mov
outs
pop
std
xchg
inc
mov
adc
aas
adc
inc
sub
fmul
pop
mov
push
loop
or
add
adc
(bad)
imul
rcr
hlt
or
test
ds
movs
mov
test
inc
jo
pop
mov
mov
lea
push
inc
or
adc
ss
jp
cmp
test
xchg
sbb
and
jmp
aas
sahf
jbe
imul
pop
inc
push
fdivr
xchg
xchg
mov
mov
mov
mov
xchg
sub
lds
(bad)
lea
push
je
xchg
adc
xchg
or
sar
cmp
rol
cmp
fsub
pop
mov
loope
scas
push
pop
xor
cmps
in
dec
cdq
popf
ins
jmp
in
outs
in
sub
lock
outs
cs
pop
leave
jl
cwde
inc
or
hlt
outs
jg
jbe
shl
add
out
cwde
jno
les
arpl
pop
mov
std
cmc
fnstsw
inc
sub
mov
mov
inc
xchg
shl
(bad)
mov
mov
push
and
nop
and
and
adc
fidiv
push
bound
or
into
dec
inc
mov
and
out
mov
and
jb
dec
fldcw
sbb
pop
mov
fadd
cmp
(bad)
fwait
or
ret
dec
jmp
push
xor
mov
sbb
sub
stos
xchg
mov
ret
mov
xor
pop
xor
or
stos
and
xchg
mov
imul
test
mov
push
iret
pop
lods
(bad)
lods
pop
or
dec
repz
pop
arpl
movs
mov
pop
and
mov
pop
jnp
ficomp
push
std
sub
std
mov
dec
out
mov
dec
mov
cli
inc
dec
dec
or
xchg
xchg
out
ins
add
pop
icebp
fmulp
dec
sub
and
(bad)
adc
push
push
arpl
scas
fld
inc
adc
mov
mov
fild
jbe
dec
pop
loopne
mov
mov
sub
cwde
xor
sub
(bad)
int
cmp
jle
cli
outs
push
mov
jne
adc
pusha
aam
int3
dec
pop
sbb
hlt
fimul
retf
cmp
xor
fadd
(bad)
in
cmp
ret
out
cmp
es
pop
jle
push
inc
repz
mov
call
add
sub
jle
push
sbb
mov
jecxz
ficomp
pusha
mov
mov
test
jg
xchg
sbb
imul
shr
pop
shl
je
and
jno
dec
xchg
push
xor
xor
mov
lock
cmp
aam
xchg
jbe
jae
std
shl
sbb
cli
dec
ins
lods
jne
sub
mov
or
xchg
stc
sub
jo
mov
(bad)
add
or
ror
mov
xchg
adc
pop
and
in
sbb
xchg
outs
in
out
xchg
pushf
push
add
mov
icebp
cs
and
adc
jp
xchg
jbe
or
push
in
shr
(bad)
jns
out
shr
out
cmps
aad
outs
push
stos
and
dec
sbb
xchg
in
xor
sti
push
hlt
and
retf
shr
mov
jecxz
mov
jo
arpl
fcom
push
sar
add
clc
and
mov
repnz
xlat
addr16
push
fnclex
mov
je
cdq
xchg
sahf
or
xchg
mov
mov
xchg
int3
mov
pop
imul
mov
inc
int
je
(bad)
call
or
push
out
fbstp
shl
mov
stc
rol
gs
mov
out
fld
adc
iret
dec
cmp
adc
jno
arpl
push
cmp
xlat
sysexit
fist
xor
fidivr
sub
(bad)
int
xchg
dec
and
movs
scas
cli
add
pop
inc
stc
ret
push
xor
add
adc
jl
jns
cmp
pop
jecxz
sar
add
test
sub
sub
test
or
movs
jo
sub
iret
data16
hlt
call
leave
add
push
scas
in
mov
arpl
stos
cmps
sar
cmp
pop
lock
retf
(bad)
and
inc
loop
shl
mov
cdq
movs
loope
mov
in
adc
call
push
call
test
push
repz
xor
jne
ds
out
inc
sbb
dec
pop
or
das
sub
rol
call
fadd
inc
test
and
pop
ret
das
nop
nop
pop
je
mov
push
mov
cmps
cmp
and
jg
mov
call
push
pop
xlat
loope
push
rol
adc
push
(bad)
scas
imul
cwde
sub
jae
je
xchg
clc
fadd
fwait
retf
pushf
pushf
(bad)
in
fnstsw
lods
(bad)
lahf
pop
cmc
dec
pop
mov
and
and
jmp
ja
mov
mov
push
xor
and
xor
jne
cmp
inc
pop
mov
out
xchg
js
cmp
retf
and
xor
and
das
icebp
mov
mov
mov
mov
dec
cmp
adc
dec
xchg
pop
test
cli
fist
push
ins
mov
imul
adc
xchg
aaa
push
daa
(bad)
sbb
popa
cmc
adc
adc
clc
adc
jns
int
mov
sbb
cmc
cmp
aam
sbb
and
iret
sbb
retf
sub
punpckhbw
push
loop
dec
sbb
out
jl
dec
add
jbe
sub
jg
pop
lahf
cmp
pop
scas
call
xchg
and
hlt
mov
inc
push
cmp
inc
sub
repz
test
repnz
lock
es
test
fbstp
jle
loopne
sbb
rcr
mov
in
mov
sub
pop
test
jmp
js
out
sbb
add
jb
pushf
add
out
pop
je
mov
mov
jecxz
sbb
push
lds
pop
int3
cmovl
bound
leave
sbb
int3
inc
pusha
les
dec
sub
mov
out
sub
jg
loope
xchg
rcl
stos
repnz
iret
lods
push
push
leave
and
mov
fidivr
cmp
ins
adc
(bad)
repnz
sbb
push
mov
pop
das
cmp
out
out
(bad)
jmp
or
jb
(bad)
jns
sbb
mov
test
dec
ret
mov
dec
xor
inc
fcomp
sub
in
mul
data16
ins
cmp
stos
std
mov
scas
dec
movs
leave
or
pop
cs
xor
inc
and
adc
loope
mov
jbe
jmp
mov
dec
xchg
dec
xor
lahf
inc
sar
sahf
test
mov
addr16
iret
add
les
dec
dec
jne
(bad)
fcomip
fwait
ins
sbb
fnsave
stos
mov
dec
jmp
xchg
retf
stos
inc
mov
and
test
xor
cld
sub
icebp
dec
mov
psadbw
cmp
push
lahf
push
in
push
jbe
sub
(bad)
push
(bad)
sti
or
mov
in
dec
dec
pusha
xchg
test
fadd
mov
les
dec
xor
cs
outs
push
(bad)
xor
push
in
pop
and
aaa
and
cmp
sbb
pop
lock
and
das
dec
ins
aaa
mov
mov
in
pop
test
sbb
movs
dec
outs
es
mov
xor
sbb
sub
xor
pop
push
dec
mov
jne
dec
mov
or
jne
or
cmp
or
add
xchg
sub
std
into
xor
dec
test
daa
jnp
jmp
mov
adc
out
xchg
(bad)
push
fwait
xchg
mov
sahf
add
jmp
xchg
xchg
stc
rol
aad
fst
ret
addr16
adc
enter
retf
mov
or
mov
dec
or
test
pop
or
mov
cmp
int3
cmp
pop
je
and
jmp
mov
outs
xchg
fisubr
test
(bad)
div
push
loopne
in
pop
xor
ret
push
loopne
jae
and
fnstsw
add
push
mov
jmp
scas
pop
test
rcr
shr
sub
or
adc
jmp
retf
(bad)
stc
adc
fdivr
sbb
mov
push
cmc
push
sub
shl
hlt
daa
xchg
cli
aas
je
and
stos
jns
test
xchg
jmp
ret
loop
leave
mov
and
imul
xchg
push
stos
jo
and
test
cdq
and
mov
popa
neg
dec
mov
adc
lea
outs
mov
jne
ds
test
scas
pop
cmps
and
fidivr
mov
test
outs
out
call
mov
fild
push
cmc
xchg
xchg
add
adc
enter
pop
ins
fbstp
lods
add
and
add
iret
pop
loop
arpl
test
mov
rol
pop
inc
push
mov
ja
pop
or
push
mov
jmp
paddb
outs
les
arpl
std
pop
inc
daa
push
or
or
dec
loop
aam
xchg
mov
and
pop
inc
js
dec
lods
jbe
and
sub
into
add
outs
and
sbb
push
(bad)
xor
add
inc
xchg
push
adc
or
mov
ds
mov
mov
xor
ror
fiadd
ret
push
push
jbe
push
dec
js
mov
adc
ja
enter
(bad)
je
pop
sub
daa
or
inc
xor
rol
loop
adc
mov
imul
adc
loope
std
ds
push
jne
jg
push
aaa
pop
iret
or
sbb
xchg
jp
ds
inc
mov
pop
(bad)
mov
stc
in
push
std
add
fstp
scas
pop
sbb
or
ds
jno
mov
mov
inc
(bad)
jl
lock
hlt
push
ins
clc
xlat
fisttp
sti
cmp
test
dec
lds
(bad)
dec
jmp
fistp
mov
push
or
sbb
pop
mov
in
inc
scas
push
push
jno
xlat
pop
test
and
fs
xor
in
(bad)
les
xchg
shl
xchg
mov
fs
ficomp
dec
jg
pop
dec
sbb
dec
pushf
jmp
movs
xchg
imul
fiadd
ds
lds
cmp
setns
mov
movs
push
mov
xor
nop
out
jp
add
fstp
mov
sti
clc
js
outs
xchg
adc
mov
stc
data16
popa
push
fimul
dec
ss
mov
fmul
cmp
xchg
lahf
cmp
push
mov
xor
mov
inc
jae
cs
fwait
dec
pop
scas
lahf
in
jl
cmps
loope
rol
nop
ficomp
call
enter
adc
jmp
dec
pushf
retf
jb
push
cmp
xchg
mov
cmp
push
dec
jo
retf
jmp
sbb
cmc
lods
movs
mov
sbb
gs
bnd
mov
dec
jle
test
adc
inc
sub
arpl
or
adc
scas
sub
outs
fs
les
inc
sbb
dec
xor
jmp
jae
sub
std
pop
retf
repnz
int3
rol
and
lock
adc
push
inc
xchg
fs
js
pandn
sbb
sbb
cmc
sti
test
jp
imul
aam
cmp
pop
cmp
jb
std
and
pop
mov
daa
loopne
jg
call
bound
xchg
jmp
movs
lea
lods
fild
pop
bound
push
repz
call
push
int
xor
jb
dec
ins
dec
sub
mov
xor
adc
cmps
in
into
ror
jl
enter
in
inc
xor
pcmpeqd
movzx
mov
fucomip
cmp
test
sub
loop
add
sub
call
pop
jns
xor
add
jmp
out
jecxz
xchg
mov
dec
lods
dec
jg
xchg
(bad)
ss
fmul
cdq
aam
js
cld
mov
mov
dec
xor
outs
dec
test
into
jle
push
popf
xor
lods
push
xchg
jg
push
es
(bad)
xchg
cmps
fistp
pop
and
mov
jge
xor
sbb
test
sbb
jae
pop
xchg
ss
cli
shl
call
inc
push
movs
and
dec
mul
inc
jns
popf
or
cld
imul
pop
lock
mov
cmc
int
inc
cmp
dec
lds
inc
mov
sbb
sbb
retf
jne
add
retf
add
test
(bad)
mov
pop
call
jp
pusha
fwait
movs
inc
jno
cmp
loope
or
adc
adc
jmp
imul
inc
inc
dec
sbb
scas
sbb
std
arpl
inc
ds
div
dec
xchg
adc
xchg
xor
sub
out
dec
mov
nop
jbe
leave
pop
xor
sub
sbb
or
dec
jno
rol
mov
pop
mov
shl
push
sbb
and
sahf
jmp
aam
xchg
loope
xor
stc
jae
sub
or
stos
ins
in
mov
imul
push
add
xchg
in
sub
fsub
pop
sbb
sub
leave
aaa
scas
sbb
ret
jb
addr16
(bad)
mov
in
push
and
mov
call
int
je
mov
cld
pop
fisub
inc
push
mov
fsub
push
mov
inc
jmp
in
bound
mov
mov
add
or
mov
(bad)
retf
sub
jge
retf
int3
retf
fistp
pop
outs
and
outs
in
pop
lahf
adc
dec
xor
and
ret
sbb
cmps
in
jnp
fbld
call
adc
jns
(bad)
sbb
xor
mul
xchg
sbb
xchg
gs
jno
xchg
cwde
out
sub
sti
(bad)
int
inc
pop
into
popa
fucomi
neg
cwde
cwde
cs
inc
or
jle
xor
adc
rcl
sbb
fsubr
dec
adc
out
aam
scas
lea
sub
dec
push
adc
inc
popf
icebp
sbb
in
add
repz
bound
add
(bad)
loop
ins
xchg
in
test
mov
pop
mov
(bad)
int3
jl
test
mov
mov
or
sbb
jb
pop
jns
(bad)
scas
fst
pop
jnp
aaa
dec
mov
xchg
adc
adc
sub
out
lahf
std
mov
xor
add
inc
adc
add
stos
js
or
mov
xchg
mov
fcom
xchg
movs
aam
out
popa
xchg
stos
pop
icebp
popa
add
push
movs
jns
jmp
and
cli
jp
mov
das
xor
mov
movs
push
in
mov
loop
cmps
sbb
inc
test
ds
and
pop
sbb
jle
sub
jbe
shr
cmps
and
xchg
dec
jge
lahf
jg
xchg
imul
or
jle
daa
push
rcr
jno
adc
gs
dec
push
cmp
hlt
dec
adc
sahf
mov
ror
adc
popa
fiadd
push
pop
add
je
adc
mov
lods
sub
inc
pushf
shl
aas
je
jbe
sub
and
lea
cmps
push
loope
inc
(bad)
retf
(bad)
jo
ss
inc
rol
aaa
lods
or
test
test
mov
(bad)
gs
xchg
test
stos
stos
stc
scas
jbe
adc
inc
sub
rol
dec
or
jnp
ror
scas
sub
xchg
(bad)
ja
mov
in
push
je
push
xor
call
push
das
aad
je
ds
ds
mov
(bad)
fcom
xchg
xchg
es
popf
out
stos
cs
inc
push
hlt
cmp
jo
and
das
retf
int3
es
retf
sub
outs
cmp
arpl
dec
or
stos
add
and
(bad)
rcl
cli
xor
lods
sbb
pop
mov
clc
pop
outs
xchg
sbb
push
call
lods
inc
into
rol
out
into
and
std
and
xchg
(bad)
dec
pop
xrelease
xchg
stos
and
push
sub
push
ins
mov
jmp
sub
(bad)
ja
jae
add
mov
cmps
and
cmps
pop
cmp
xchg
and
push
dec
sub
pop
mov
pop
bound
std
mov
in
test
sbb
scas
stos
jecxz
push
sbb
add
in
(bad)
outs
or
mov
movs
arpl
push
jge
xlat
stos
repz
add
lock
jne
ja
repz
xlat
stos
lods
hlt
push
sbb
adc
jge
or
xchg
lea
cwde
hlt
fsubr
into
xchg
jecxz
gs
dec
dec
jecxz
add
and
mov
(bad)
mov
pop
push
inc
arpl
push
inc
sbb
icebp
xor
push
push
jmp
mov
cwde
jnp
pop
inc
leave
sub
mov
lods
xor
xor
push
adc
sbb
ret
std
lea
push
and
pop
add
neg
imul
aad
imul
push
mov
mov
call
call
xchg
call
and
mov
out
into
bound
movs
clc
ffreep
mov
loopne
jno
test
dec
(bad)
jmp
pop
cmps
popa
inc
push
(bad)
xor
cmp
mov
sub
frstor
push
mov
dec
inc
push
cmps
mov
imul
js
and
or
mov
dec
movs
mov
inc
push
add
dec
loope
cmp
inc
jae
scas
add
aad
jo
fdivp
xlat
shl
daa
ficomp
pop
(bad)
xchg
lds
ja
adc
ret
push
push
inc
leave
pop
shr
mov
aaa
jo
push
(bad)
pop
and
sub
or
cmp
push
mov
ret
ja
inc
cmc
(bad)
sbb
cmp
jae
cmps
out
mov
(bad)
mov
outs
sbb
std
mov
or
(bad)
movs
dec
xchg
cmp
push
sbb
jno
enter
mov
xchg
shl
std
add
data16
ins
mov
pushf
outs
mov
imul
adc
popf
cli
dec
enter
dec
jge
mov
xlat
stos
inc
out
xlat
loope
enter
push
adc
jp
mul
jle
int3
sbb
mov
adc
pop
mov
in
bound
test
cli
in
xor
shr
(bad)
adc
inc
mov
shl
int
xchg
dec
jmp
push
js
lods
mov
test
and
sbb
adc
cmp
fs
mov
push
jg
cdq
lods
mov
sub
push
jne
jmp
push
jmp
aam
and
jp
inc
shl
pop
add
scas
mov
dec
addr16
imul
sub
(bad)
cmp
sti
outs
scas
and
add
inc
retf
popf
nop
imul
and
shr
mov
pop
in
jno
jno
sbb
les
push
mov
aaa
dec
mov
and
and
(bad)
xor
mov
mov
scas
inc
ret
mov
loope
or
mov
xchg
pop
div
mul
das
mov
or
sti
and
pop
sbb
sbb
mov
inc
fisub
fldenv
gs
lds
arpl
adc
pop
xor
call
loopne
xor
cmps
aaa
rcr
mov
std
repnz
jle
xchg
das
sti
xchg
mov
cld
popa
xor
pop
jle
cmp
push
ins
adc
stc
std
(bad)
fistp
mov
ins
outs
test
xor
dec
push
cmps
(bad)
jbe
outs
mov
jle
add
push
and
outs
cs
(bad)
jne
out
inc
cmp
retf
ja
(bad)
pop
jl
repnz
les
xchg
call
shl
inc
std
shr
xor
and
fisttp
xchg
pop
mov
lods
ins
inc
cmp
out
stos
adc
scas
std
hlt
mov
mov
xchg
adc
mov
(bad)
sti
mov
push
outs
test
sbb
daa
mov
sub
cmps
ds
mov
jmp
int
pop
je
fwait
inc
cmps
repnz
push
adc
push
mov
inc
in
stos
push
push
sub
jne
leave
adc
xchg
fucomip
aam
mov
mov
dec
arpl
xrelease
pop
mov
xchg
lods
call
cmp
cmp
and
shl
lods
inc
fnstsw
ss
out
sahf
(bad)
dec
and
cmps
shl
add
jne
pop
or
push
xor
fnstenv
adc
mov
mov
mov
int
loopne
mov
shl
jae
push
idiv
(bad)
std
inc
adc
cli
push
xchg
fdivr
repnz
test
test
outs
cld
xor
aam
add
fld
clc
mov
out
cli
aam
enter
dec
(bad)
fst
div
adc
out
fisubr
loop
dec
repz
fisttp
add
inc
in
cmp
jbe
adc
nop
add
lds
mov
inc
mov
add
and
mov
mov
mov
data16
dec
popa
ins
push
or
inc
ins
mov
imul
lock
out
xchg
mov
(bad)
pop
fistp
vmaxps
movs
cld
icebp
pop
aad
and
push
mul
jnp
lods
dec
loopne
push
jmp
mov
cdq
and
lods
mov
xor
retf
test
xchg
add
mov
rol
movs
in
jle
mov
jne
pop
add
xchg
mov
(bad)
xchg
cmp
dec
push
jle
inc
pop
sbb
sar
or
icebp
xor
mov
mov
out
pushf
cmp
leave
cmp
les
mov
xchg
(bad)
mov
jecxz
into
dec
cmp
xchg
sub
or
lahf
scas
sbb
repnz
aas
cmp
das
in
test
outs
cmps
cli
mov
ins
xchg
push
dec
aam
cmps
nop
test
fcmovu
sbb
cwde
loope
repnz
iret
cli
push
add
mov
sub
sbb
adc
or
aad
cmp
pop
dec
daa
and
fidiv
inc
clc
add
shr
stos
dec
xchg
cmp
dec
dec
inc
pop
dec
(bad)
stos
jbe
or
enter
(bad)
clc
fmul
gs
mov
ja
pop
xor
or
or
inc
call
sbb
(bad)
push
cmp
scas
mov
loopne
out
jno
sub
clc
call
jns
nop
add
adc
dec
cwde
je
pop
xchg
fsubr
mov
xchg
add
clc
push
cmp
ret
jns
iret
fsubr
test
jbe
push
icebp
mov
lock
inc
fwait
dec
cmps
jg
scas
mov
out
cmp
test
cmp
clc
retf
popa
sbb
loop
mov
pop
xor
lahf
mov
lahf
push
gs
push
fidivr
mov
inc
std
mov
data16
pop
int
xor
test
mov
stos
jecxz
mov
fld
mov
inc
pop
lods
pop
mov
inc
getsec
xor
push
movs
mov
pop
inc
fucomp
push
es
adc
push
xor
(bad)
popa
ss
sub
in
adc
jp
mov
pop
cmps
xchg
dec
pop
daa
cmps
fbld
adc
pop
movs
sub
ja
cwde
fxch
mov
(bad)
push
and
cmps
imul
ss
leave
test
aaa
ss
xchg
stos
(bad)
pushf
mov
jmp
jmp
and
(bad)
ins
aas
inc
jns
inc
(bad)
or
inc
mov
mov
cmc
mov
popf
mov
adc
add
push
mov
adc
jg
movntq
xchg
pop
adc
lock
idiv
mov
dec
mov
icebp
je
dec
sub
test
lea
mov
sbb
pushf
and
mov
loop
rol
shl
mov
push
lds
push
xor
push
xchg
jae
pop
int
push
xchg
in
ds
add
or
cmp
enter
mov
movhps
seta
hlt
or
pop
jle
repz
imul
push
loope
inc
mov
or
outs
stos
and
adc
and
out
xor
and
out
cld
in
push
das
dec
jge
add
pop
jns
jno
or
sub
mov
dec
pusha
mov
adc
push
pop
(bad)
pushf
or
bound
sub
movs
sub
jo
imul
and
sbb
pop
and
xchg
test
mov
test
pusha
lods
push
sub
out
and
xchg
ret
retf
dec
mov
dec
movs
cmp
lds
cmp
mov
stos
je
jecxz
(bad)
cld
sbb
sub
push
addr16
mov
xchg
pop
call
sbb
dec
pop
sub
movs
xor
dec
mov
mov
dec
cmp
jnp
mov
int
jmp
inc
mov
in
inc
push
sahf
push
outs
cmps
int
adc
inc
dec
mov
jg
add
ret
mov
iret
sbb
stos
and
jge
jle
jae
xchg
mov
jmp
add
dec
fist
adc
xchg
outs
adc
lea
or
scas
mov
mov
mov
jmp
push
dec
pop
das
jge
dec
inc
cdq
cwde
jle
mov
jge
mov
xor
jmp
bound
cmp
jmp
sbb
and
inc
mov
or
mov
cmps
dec
out
nop
dec
add
fdivr
jo
or
add
js
pop
test
push
mov
gs
xor
dec
inc
dec
cmps
jns
xor
stc
sub
sub
cmc
sub
fild
jmp
add
inc
sub
jecxz
pushf
nop
les
out
movs
das
add
pop
inc
xor
fcom
ss
adc
mov
fst
pop
jns
sbb
les
imul
(bad)
cdq
dec
sbb
pop
or
call
fadd
lods
sub
pop
cmp
mov
test
xor
ins
sbb
dec
mov
(bad)
mov
les
push
inc
add
inc
mov
add
or
pop
fdivr
shr
cwde
stos
cmp
jbe
push
pop
cmc
adc
push
ins
sahf
push
mov
dec
loopne
and
cld
xor
imul
mul
in
movs
mov
cmp
fisubr
js
xchg
sbb
stc
cmp
es
jmp
movs
jae
jge
aaa
jns
mov
cmp
imul
cli
cwde
pop
sub
adc
lahf
xchg
aad
push
pop
adc
and
mov
ss
(bad)
mov
push
mov
aas
hlt
sbb
leave
push
sub
xor
dec
push
adc
(bad)
lock
push
(bad)
adc
push
or
mov
jno
fdivr
pop
pop
(bad)
mov
jns
xchg
cmp
(bad)
push
mov
data16
push
loopne
mov
push
cmps
psraw
mov
call
inc
pop
or
cmps
mov
rcr
ins
push
xor
xchg
xchg
pop
cwde
xchg
sbb
ror
retf
and
inc
xor
sbb
loopne
ret
sbb
xor
mov
fisttp
mov
fisubr
jmp
xor
loop
jne
out
and
or
xor
inc
pop
mov
push
outs
div
stos
clc
lahf
mov
std
es
and
pop
jae
fisttp
jns
mov
adc
dec
sbb
mov
fidiv
lods
sbb
xor
enter
int
sub
mov
pop
mov
mov
pushf
fsubrp
pop
push
dec
fsubr
(bad)
xor
inc
ins
cwde
jp
mov
stos
sbb
in
pushf
jbe
dec
ret
xor
hlt
cdq
inc
jne
dec
pop
sbb
stos
mov
imul
pop
(bad)
jmp
pop
adc
push
mov
cmp
out
ror
das
neg
mov
les
mov
or
push
aad
call
loope
fnsave
sahf
in
mov
xchg
int
sbb
iret
xor
inc
int3
inc
cld
repz
lahf
or
mov
dec
fiadd
daa
nop
cmps
push
jmp
jmp
adc
jl
add
ret
mov
iret
add
ins
mov
repnz
ret
cmp
cmp
mov
push
fsub
pop
fldcw
iret
add
and
mov
jmp
push
popf
sub
mov
fsub
cmp
adc
out
(bad)
mov
ss
aam
push
gs
xchg
or
xor
mov
lea
inc
add
arpl
lock
int3
cld
inc
mov
mov
test
repz
pop
in
xchg
add
gs
and
mov
out
cmp
movs
iret
(bad)
fcom
outs
xchg
xchg
ja
out
cli
inc
pop
or
dec
imul
or
pop
push
and
adc
nop
or
js
out
loopne
jecxz
(bad)
xchg
jle
adc
inc
mov
popf
(bad)
xchg
shl
stos
out
fiadd
daa
or
out
(bad)
into
retf
cmc
das
(bad)
mov
mov
ins
and
mov
imul
add
push
pusha
(bad)
and
sbb
mov
dec
icebp
les
cmp
ret
mov
pop
sub
fld
xchg
stc
ret
rcl
xor
ficomp
mov
sbb
push
(bad)
and
std
push
retf
or
or
aad
pop
pop
movs
retf
cmp
popa
sar
rol
gs
add
not
xchg
and
out
stos
cmp
call
jno
push
cs
repnz
je
lods
cdq
push
sub
fwait
jns
and
leave
xchg
add
sbb
lods
pop
xor
rol
jnp
jge
js
sbb
(bad)
pushf
outs
cmovle
rol
fidiv
jecxz
in
mov
cmp
bound
fiadd
push
inc
mov
mov
push
xor
pop
daa
jb
pop
or
sub
mov
outs
daa
cmc
or
in
ins
(bad)
ficom
aas
mov
push
mov
and
imul
icebp
pop
sbb
outs
adc
jmp
adc
call
(bad)
xchg
mov
push
or
imul
test
fadd
mov
and
mov
cli
clc
imul
out
aas
iret
je
xchg
jmp
test
test
inc
push
mov
ret
cmp
div
pop
sub
adc
inc
xchg
or
jmp
pop
lock
icebp
mov
mov
popf
or
arpl
adc
or
mov
sbb
(bad)
mov
pop
retf
pop
xchg
jp
test
sbb
fwait
jo
loop
inc
and
mov
cmp
push
scas
mov
adc
mov
or
in
inc
or
in
cmp
ficomp
in
movs
(bad)
and
pop
mov
or
sti
push
inc
pop
mov
and
inc
push
ror
ins
adc
iret
jb
in
out
ins
and
pop
push
adc
ret
(bad)
iret
mov
inc
rcl
adc
dec
xchg
out
test
ret
cmps
hlt
not
cmp
inc
outs
(bad)
in
imul
lea
mov
adc
mov
int3
mov
stos
test
test
cmp
sahf
add
adc
scas
and
dec
xor
dec
mov
std
or
mov
push
movs
mov
clc
gs
(bad)
das
push
sub
push
dec
mov
mov
fisttp
retf
cdq
pop
shl
movs
into
add
stc
adc
cmc
add
in
addr16
lds
cmp
adc
aas
repnz
or
cmp
push
imul
daa
jmp
pop
pop
mov
(bad)
or
push
mov
sahf
mov
pop
enter
outs
(bad)
xor
dec
xor
cmp
and
jmp
inc
pushf
mov
cmp
lods
sbb
xchg
and
call
pop
ficom
inc
scas
dec
repnz
aad
mov
mov
popf
loop
xor
dec
test
add
jnp
shr
dec
jb
cmp
(bad)
inc
frstor
or
retf
cmp
push
movs
rcr
mov
lods
xor
retf
push
push
(bad)
mov
mov
cmp
mov
cdq
lods
xor
or
shl
mov
lahf
jno
mov
push
leave
cmp
bsf
lods
jo
push
ja
ins
jne
retf
daa
mov
push
or
mov
rcr
bound
xchg
push
fimul
push
std
jno
or
cmp
retf
dec
hlt
out
or
mov
mov
mov
int
pop
pop
(bad)
cld
push
(bad)
push
xchg
(bad)
mov
aad
and
aam
mov
mov
inc
pop
icebp
outs
sti
push
and
fs
sub
mov
adc
(bad)
fcom
inc
ss
xor
sbb
ja
cld
xor
inc
mov
jb
cli
dec
mov
mov
clc
xchg
pop
loop
mov
pop
sub
mov
jge
xor
push
scas
cmc
xchg
mov
inc
nop
outs
sbb
pop
pop
adc
mov
xchg
add
xor
xchg
add
inc
jae
es
cmp
mov
loope
lods
fstp
jo
gs
mov
cli
mov
arpl
enter
mov
jbe
push
or
cli
add
pop
and
pop
inc
xchg
aam
dec
pop
fstp
xchg
add
data16
or
call
fild
fcom
mov
pop
fnstcw
gs
daa
inc
inc
loope
out
pop
mov
jbe
adc
push
jo
sbb
pop
mov
push
lea
test
scas
pusha
jae
(bad)
push
mov
je
add
pop
out
mov
pop
push
mov
inc
mov
push
pusha
dec
outs
call
xchg
loope
cld
xchg
inc
jmp
repnz
xor
mov
mov
mov
fdivp
mov
inc
xchg
lock
(bad)
or
add
dec
mov
adc
cs
loopne
pop
dec
cmp
into
repnz
or
mov
push
push
std
pop
xor
or
ss
fdiv
cmp
xchg
add
retf
test
or
xchg
dec
add
cmps
mov
add
jge
popf
inc
inc
fmul
push
cmp
lea
jae
mov
and
add
mov
test
into
icebp
cdq
fcom
cld
shr
mov
(bad)
dec
jecxz
push
popf
sub
test
xchg
mov
daa
lahf
dec
push
inc
int
int3
push
inc
mov
jns
mov
pop
push
lahf
push
lods
jmp
xchg
push
inc
jo
and
sahf
stos
dec
dec
inc
mov
sub
add
sbb
push
popf
sub
scas
fdiv
pop
mov
fisttp
mov
loopne
out
gs
lds
or
mov
push
add
lahf
pop
jecxz
rcl
adc
test
adc
adc
test
and
inc
mov
test
inc
add
push
stos
sub
pop
out
xlat
mov
rcl
arpl
sbb
jnp
mov
test
cli
inc
cdq
mov
cwde
mov
inc
add
imul
mov
or
push
repnz
or
ins
fsubr
ss
dec
jl
or
pop
dec
outs
dec
cdq
or
cdq
loopne
jp
push
dec
lock
leave
sbb
xchg
push
jno
aad
cmp
sbb
mov
mov
inc
lods
(bad)
ficom
mov
and
aam
gs
sbb
call
adc
loope
pop
ret
add
sar
and
out
pop
jmp
sar
test
ins
ret
aas
cld
in
int3
jmp
cmp
jp
push
xor
mov
mov
into
mov
jns
add
adc
mov
adc
arpl
jmp
push
test
sbb
lods
out
mov
adc
inc
dec
xchg
mov
call
sub
inc
or
push
mov
hlt
xchg
bound
lods
pop
add
dec
enter
int3
xor
adc
fild
adc
movs
or
iret
pop
nop
mov
inc
in
stc
push
sub
imul
inc
fist
icebp
mov
cmps
enter
mov
loopne
rcr
cmp
inc
adc
aad
xchg
test
cmp
sub
fisub
int
test
scas
fnsave
rcr
cmp
xor
movs
mov
sbb
repnz
inc
push
outs
lahf
test
mov
pop
aaa
pop
inc
push
lods
std
inc
xchg
test
add
add
(bad)
lds
cmp
mov
xor
popa
push
stos
loopne
cmp
adc
repnz
pop
call
dec
leave
and
add
jb
out
leave
or
out
cmp
sub
mov
push
sbb
xor
aad
add
pop
in
stos
imul
push
aad
jl
or
stc
adc
push
test
sti
ret
or
out
hlt
in
jmp
les
std
leave
out
(bad)
mov
lock
call
jg
pushf
cmp
inc
sbb
pop
cmp
and
add
mov
push
push
cmp
scas
movs
popa
mov
sub
int
sbb
ss
shl
hlt
mov
sub
sub
mov
in
sub
int3
xor
dec
xor
sbb
and
out
(bad)
shl
xchg
push
push
mov
ja
and
pop
mov
and
pop
shl
fild
xchg
dec
mov
jae
xchg
aas
fwait
ret
nop
pop
jge
pop
inc
or
jno
les
jns
jae
shr
data16
pop
xchg
lds
mov
sub
sbb
cmps
sbb
test
lds
and
and
or
sub
and
jne
sti
mov
mov
fwait
xor
shl
mov
loopne
lods
sbb
aaa
popa
jbe
cmps
push
xor
inc
xchg
sbb
pop
inc
retf
mov
pop
push
call
outs
and
scas
ds
jecxz
push
push
mov
adc
test
push
and
in
mov
push
imul
push
push
and
jecxz
jbe
int
mov
and
ja
xchg
push
jnp
xor
sbb
inc
jmp
outs
add
adc
int3
xchg
int
ret
shl
lods
inc
pop
or
sti
pop
mov
retf
je
ret
pushf
loope
in
arpl
push
in
adc
add
push
jbe
mov
out
or
cmps
pop
aad
jne
loope
sbb
fwait
loopne
in
hlt
repnz
add
stos
mov
pushf
mov
push
cmps
test
pop
and
sbb
dec
xor
fst
sub
cwde
ins
sub
or
inc
cmp
ja
or
retf
cmp
mov
mov
dec
movs
nop
je
leave
or
mov
pop
push
push
jbe
(bad)
fisubr
xor
inc
ins
out
popa
mov
sahf
es
push
loope
push
inc
sbb
test
mul
xchg
in
xor
inc
adc
idiv
jmp
xor
inc
mov
mov
popa
arpl
popf
popf
cmp
gs
shl
xor
or
aas
cmp
(bad)
in
cmps
pop
mov
fild
dec
add
mov
test
xor
mov
mov
sub
jno
jno
sbb
adc
imul
mov
fucomp
cmps
cld
(bad)
fisttp
mov
(bad)
js
jmp
push
mov
scas
lock
xor
cli
or
lahf
jnp
add
jmp
mov
push
mov
jno
fld
add
ja
repz
test
mov
into
fcomp
sbb
mov
jnp
pop
pop
dec
mov
xor
pop
xchg
pop
adc
cdq
pop
test
pop
mov
repz
add
nop
cmp
es
dec
inc
xor
mov
mov
sbb
inc
lahf
mov
lea
inc
out
push
rcr
xor
sbb
mov
lods
jmp
pop
test
push
mov
pop
mov
pop
inc
movs
and
mov
jmp
push
loopne
fnstenv
pop
mov
div
jecxz
jb
aad
scas
jg
jge
jnp
fsubr
arpl
sbb
mov
xor
mov
imul
fadd
sub
sbb
inc
retf
mov
cmp
fs
data16
mov
call
xchg
loope
cmp
xchg
ja
add
aam
cdq
gs
push
sti
cmp
sbb
jbe
rcl
jae
das
add
(bad)
or
jbe
retf
retf
add
add
pop
into
sbb
int3
mov
bound
fld
pop
mov
jecxz
sbb
or
mov
out
lods
dec
in
mov
xchg
out
retf
push
xchg
daa
mov
or
scas
retf
dec
test
inc
cmp
xchg
jl
out
mov
mov
dec
fimul
jle
adc
imul
xlat
adc
and
scas
push
mov
iret
clc
jnp
addr16
jne
mov
pop
or
sbb
mov
push
jge
out
or
add
push
mov
cld
sbb
call
in
lahf
add
in
jmp
mov
xor
data16
or
pop
test
mov
sar
popf
cmp
(bad)
inc
xor
adc
sar
shr
push
cmps
push
es
int
and
psrad
test
bound
loop
ret
imul
jp
push
loopne
aam
and
sbb
cld
jle
lea
xor
fidiv
jle
out
popf
hlt
mov
int3
cmp
push
cmc
stos
jp
xor
fnstcw
cs
pop
je
sbb
push
adc
pop
and
push
ret
ins
test
(bad)
jbe
jnp
mov
lea
jbe
(bad)
or
adc
mov
and
test
int
jle
mov
or
mov
call
pushf
in
or
loope
inc
test
(bad)
or
test
sti
jbe
add
add
dec
sbb
pop
pop
(bad)
mov
sar
je
jns
fbstp
pop
or
fisub
sub
sub
sub
dec
shr
addr16
sub
or
add
mov
retf
inc
les
cs
jp
mov
dec
cmp
das
dec
push
mov
cmp
ret
jo
dec
pushf
ret
aad
(bad)
nop
sti
aaa
movs
cmps
or
fcom
xchg
mov
test
jae
ror
mov
xchg
inc
stc
sbb
push
fwait
inc
add
out
lock
sbb
cmp
sub
aad
add
call
xchg
js
lds
rcr
ds
mov
push
pushf
pop
stc
push
xor
arpl
loope
fcom
push
jl
cmp
cmp
cmps
adc
sub
sub
clc
push
inc
xor
ss
and
or
cs
dec
pop
sub
test
push
push
inc
shl
push
add
scas
jbe
xchg
and
add
fmul
ins
dec
push
mov
rcr
loope
jg
mov
jae
add
mov
(bad)
mov
cdq
adc
xlat
hlt
fadd
sbb
mov
hlt
sti
dec
and
adc
pop
adc
out
test
or
jecxz
pop
aad
outs
fs
dec
xor
inc
push
mov
jg
out
and
inc
inc
push
pushf
jmp
clc
or
rol
and
mov
lods
call
cmp
xchg
cmc
(bad)
and
das
sub
test
mov
sbb
inc
ror
sub
jl
cmp
into
xchg
in
mov
sub
dec
scas
jnp
push
sbb
jbe
jb
mov
pop
ja
inc
cmps
jns
xchg
inc
clc
(bad)
jbe
adc
int
jb
lods
int3
cli
cmp
adc
or
imul
cmp
stos
out
test
push
add
mov
push
cwde
cmp
test
cli
cs
dec
fsubrp
or
pushf
fist
fs
rcl
xor
fisttp
push
test
(bad)
fnstsw
xor
add
cmps
lds
jns
outs
cmp
and
enter
add
add
cmp
inc
pop
mov
addr16
into
and
gs
adc
sub
icebp
shl
aaa
nop
mov
sahf
test
jo
mov
repnz
lea
(bad)
pop
ret
das
test
sub
jno
div
inc
call
fadd
cmps
jmp
jecxz
adc
sub
cmp
mov
cwde
add
rol
cdq
(bad)
sbb
xchg
and
jl
sbb
lea
or
inc
leave
cwde
lods
test
retf
or
mov
add
bound
in
enter
mul
ror
xor
jle
dec
xchg
sub
aad
jge
or
or
jmp
rcl
rcl
out
fsub
add
sub
and
ret
or
push
rol
lahf
and
(bad)
ds
sti
in
xor
popa
pop
idiv
push
rcl
(bad)
mov
adc
jb
xor
pop
inc
sbb
lock
jle
loope
add
(bad)
in
dec
into
popa
mov
gs
or
push
inc
movs
cmp
sti
or
iret
sub
sbb
jae
push
mov
push
scas
popf
ja
jge
inc
mov
adc
fs
jmp
aad
xchg
xor
push
aad
sbb
cmp
ror
xchg
jp
xchg
cmp
(bad)
js
pop
ret
(bad)
out
mov
test
jbe
cld
ret
pop
inc
mov
daa
test
push
push
je
test
and
dec
test
sbb
das
jmp
dec
test
idiv
fld
mov
mov
push
sahf
sbb
jo
add
out
mov
adc
mov
out
sbb
mov
loop
mov
push
adc
mov
fimul
and
cmovb
rcl
mov
sub
sub
mov
aad
lods
mov
out
push
add
test
jmp
std
out
adc
xchg
addr16
mov
xchg
push
in
adc
in
inc
or
sub
lock
mov
repnz
out
push
mov
xor
sbb
jne
loope
imul
mov
dec
mov
mov
push
neg
push
mov
scas
mov
xor
sbb
ds
xor
movs
or
sub
inc
dec
sub
mov
push
mov
call
push
popf
imul
call
(bad)
hlt
mov
cmp
inc
sub
pushf
int
push
pop
movs
or
push
test
je
jmp
(bad)
mov
ret
xor
retf
fsubr
mov
(bad)
(bad)
xor
mov
sbb
aas
push
out
retf
or
pop
xor
(bad)
fs
mov
adc
gs
jle
pop
xchg
add
sbb
sub
xchg
popf
pop
ja
cmp
push
xchg
test
(bad)
movs
xor
mov
lods
xchg
cwde
retf
ss
hlt
sbb
ret
push
jg
cli
xor
es
pop
je
xchg
jg
aad
mov
dec
inc
pop
(bad)
jne
mov
js
dec
leave
jp
ins
add
push
jmp
sub
push
ja
mov
into
cmp
sbb
cmc
add
sub
push
xor
jno
xlat
cmps
out
mov
dec
mov
adc
addr16
sbb
aaa
out
push
ret
or
mov
movs
mov
inc
daa
push
mov
mov
in
in
fld
mul
jmp
inc
xor
or
and
lahf
push
in
inc
cli
and
pop
lds
cmp
and
out
js
push
jg
cdq
fidivr
mov
push
cmp
movs
pop
dec
gs
xor
and
xchg
test
(bad)
mov
mov
imul
jb
jmp
sbb
es
data16
inc
cld
aaa
pop
fistp
cli
fdivr
jle
and
(bad)
lock
clc
pandn
dec
xor
sub
ja
mov
jbe
bound
push
push
sub
fsub
scas
adc
arpl
jae
jg
xor
push
sbb
je
xchg
mov
sbb
addr16
push
inc
sbb
adc
jecxz
in
and
cmc
ins
push
xor
pop
in
and
push
inc
cmps
and
and
mov
fistp
fmul
rol
mov
xchg
and
loopne
mov
call
sub
dec
xor
and
push
or
xor
stos
pop
cmps
inc
cs
or
fcom
sbb
xor
gs
inc
jle
xor
sar
(bad)
pop
repz
mov
sub
lds
in
mov
sub
mov
and
sub
xor
xlat
std
sti
das
mov
push
mov
jo
xchg
push
into
dec
repnz
fwait
mov
xchg
mov
cwde
(bad)
dec
mov
ins
pop
lods
xchg
push
(bad)
cmp
les
arpl
jnp
cmp
movs
or
aas
jb
sub
inc
cmps
bound
out
das
push
aam
adc
push
push
mov
hlt
pop
pop
cmc
cwde
adc
(bad)
popa
addr16
xlat
xchg
das
sti
push
js
xchg
shr
in
ss
mov
inc
aam
pop
cmps
add
adc
fld
jl
add
lsl
jle
mov
xor
sbb
into
test
push
jl
mov
pushf
xor
xor
and
pop
inc
inc
pop
fistp
cmp
ror
cmovle
shl
sub
aad
mov
push
inc
cmps
es
repnz
pop
xchg
jbe
jo
cmp
leave
xchg
xlat
rcl
iret
lods
jmp
cmp
int3
push
add
xchg
out
clc
pop
adc
mov
adc
(bad)
cld
inc
test
sbb
xor
shl
pop
add
push
call
fist
xchg
xchg
push
or
sar
lds
aaa
aaa
icebp
adc
add
cmp
jnp
sub
push
(bad)
dec
xor
mov
xchg
pushf
cmp
retf
ret
test
sub
mov
dec
addr16
cmps
icebp
imul
out
ins
sbb
out
dec
inc
dec
and
sti
fcmovbe
gs
inc
loop
dec
pop
pop
mov
push
enter
cmp
popa
xor
inc
and
jmp
inc
xor
adc
push
mov
call
(bad)
popa
sub
inc
gs
inc
mov
mov
sbb
js
cmps
les
push
rcl
push
iret
push
rol
into
mov
ds
sub
out
xor
and
inc
leave
es
mov
es
mov
imul
jecxz
cmc
cmc
fs
xor
dec
mov
pop
icebp
aam
hlt
imul
sar
retf
pop
sbb
dec
imul
push
popf
lea
cdq
dec
and
ret
dec
loopne
sub
xor
adc
fs
jnp
retf
cmp
pop
lds
in
mov
(bad)
jmp
xchg
push
pop
int
retf
dec
mov
sti
jge
(bad)
pop
pop
jbe
inc
adc
pop
or
pop
loopne
sub
adc
cwde
shl
lods
push
add
sbb
xchg
dec
push
cmps
dec
test
xlat
cmp
shr
xor
and
add
or
mov
push
test
retf
movs
xchg
dec
push
inc
jle
push
and
loop
lahf
shl
sbb
inc
stc
ins
cmp
mov
cmp
jnp
jo
or
int
sar
or
daa
les
xchg
jmp
sub
call
or
pusha
cdq
(bad)
adc
das
out
out
std
and
repnz
in
nop
inc
retf
int3
sub
jb
sar
pusha
push
sub
in
or
enter
retf
xchg
nop
sub
pop
loopne
ss
xor
mov
mov
dec
add
sbb
movs
pop
adc
adc
mov
xchg
jns
ficomp
adc
in
es
or
ins
jp
sbb
icebp
ret
inc
and
pop
popf
daa
test
xchg
mov
inc
push
aaa
retf
(bad)
mov
mov
ficom
sbb
push
jmp
iret
aam
(bad)
mov
(bad)
mov
js
ins
out
pusha
retf
jecxz
and
cmovge
test
movs
(bad)
or
sub
fsub
fsubr
lds
xor
mov
sahf
retf
test
pop
jle
push
fdiv
pushw
inc
or
dec
adc
aaa
jae
stos
sbb
jbe
(bad)
(bad)
(bad)
in
push
pop
out
test
std
or
icebp
mov
(bad)
xchg
push
ds
push
rcl
add
jmp
add
out
fild
add
and
je
push
lea
in
mov
jns
rol
(bad)
aaa
push
pushf
cmp
mov
cs
and
mov
retf
and
popf
jp
adc
dec
and
cli
ja
sbb
jp
add
xchg
loope
pop
pop
cmp
ja
call
arpl
out
xor
div
in
pop
movs
add
outs
movs
scas
jmp
mov
jg
cs
pop
ret
or
xchg
mov
push
add
xchg
pushf
xor
pop
xor
xchg
mov
push
jecxz
pushf
sti
dec
rol
mov
daa
inc
push
sub
xchg
not
jp
cli
xor
push
mov
in
add
xchg
pop
ins
push
fwait
push
dec
in
push
sahf
inc
(bad)
jg
xlat
mov
cli
(bad)
mov
sbb
jg
cmps
sub
xor
pop
mov
jmp
jmp
clc
sub
inc
dec
push
cmp
cld
dec
jae
outs
sub
push
xor
aam
fucomi
cld
mov
xchg
leave
jle
mov
xlat
sti
mov
lea
cwde
pop
fild
dec
add
mov
in
loope
pop
push
loope
and
js
xor
movs
fisubr
mov
lds
lock
aaa
pushf
mov
cs
clc
xchg
fwait
mov
call
and
xor
out
xor
sbb
sbb
dec
and
or
pop
adc
test
sahf
out
push
(bad)
cld
sub
cmp
inc
in
and
lds
fwait
or
in
pop
stos
push
push
popa
int
mov
div
add
ins
fst
aam
int
fidivr
sub
mov
sahf
out
movs
enter
mov
(bad)
ins
fstp
cmp
cmc
mov
sub
in
outs
fld
cdq
popa
icebp
cs
loopne
pusha
aam
add
cdq
inc
(bad)
xchg
cmp
mov
push
call
in
loopne
ins
gs
inc
out
mov
mov
push
int
cmp
xchg
inc
rcl
fs
fmul
mov
inc
std
jno
xor
push
xchg
ret
out
adc
stos
push
cmp
pushf
rcr
add
jae
adc
inc
(bad)
add
ja
adc
aam
add
mov
(bad)
jno
rol
mov
push
jno
es
lahf
pop
sub
mov
pop
add
mov
fadd
stc
int
rol
sub
stos
add
jb
jo
test
ins
test
push
ror
sub
and
mov
ja
push
out
adc
pop
lods
jbe
mov
xchg
mov
xchg
mov
shl
add
loopne
push
mov
sub
addr16
or
or
mov
add
lds
test
call
jle
(bad)
fmul
bnd
inc
stos
adc
sar
(bad)
adc
clc
jge
movs
dec
push
xchg
ror
pop
pop
and
cs
xor
sbb
add
jl
xchg
xor
jo
mov
cmps
call
cmps
add
sub
push
stos
fs
fsub
inc
jg
inc
jnp
outs
xchg
sti
adc
call
in
jge
or
xor
xchg
xor
xor
lods
fdivr
es
pushf
popw
das
repnz
mov
ins
ja
or
sub
push
cmp
jb
ret
mov
test
mov
inc
push
cmp
xor
inc
in
loope
retf
ret
test
outs
mov
ret
or
fsub
xor
out
jne
ss
(bad)
sub
push
enter
add
fwait
nop
inc
fidiv
mov
mov
(bad)
push
push
out
inc
out
jo
mov
push
cmp
adc
cmc
add
pop
inc
mov
jnp
push
addr16
out
jnp
imul
out
push
cmp
jl
xchg
mov
add
fnsave
je
dec
sbb
sub
mov
int
(bad)
dec
push
imul
push
das
popa
fstp
inc
jb
imul
dec
sub
mov
inc
inc
test
call
mov
mov
dec
shl
adc
dec
mov
xchg
lods
push
fistp
movs
jbe
loopne
scas
dec
cs
mov
inc
icebp
mov
(bad)
in
dec
in
aad
movs
js
adc
jge
mov
adc
dec
jg
(bad)
mov
mov
fadd
sar
mov
or
add
mov
push
push
xchg
fs
das
xor
iret
jl
je
icebp
xchg
adc
lock
int3
inc
inc
ror
rcl
fidiv
mov
mov
and
loope
mov
push
fucomp
sub
xchg
pop
cmp
jmp
xor
mov
out
mov
test
or
fstp
dec
in
test
jnp
dec
(bad)
mul
or
or
icebp
jns
movs
sub
mov
loope
jmp
mov
in
and
cmp
rcr
mov
movq
mov
add
add
adc
fcmovu
cmp
mov
shl
movs
(bad)
addr16
ficomp
les
push
mov
dec
mov
mov
xchg
leave
aad
rol
(bad)
mov
rol
daa
push
enter
(bad)
xor
mov
mov
adc
adc
das
mov
push
adc
add
ins
cmp
loop
addr16
xor
mov
sbb
fs
lods
add
jmp
or
jle
push
lods
dec
stos
int
jp
mov
and
inc
xor
add
push
sub
outs
mov
jns
js
ror
ins
pop
mov
retf
call
fsubr
ret
icebp
(bad)
lds
jmp
jecxz
loopne
sti
les
(bad)
fst
mov
jg
scas
mov
dec
inc
fdiv
hlt
nop
mov
mov
mov
or
cmp
pop
or
jp
sub
enter
dec
adc
push
mov
(bad)
stos
cdq
add
int3
mov
mov
dec
into
add
push
pop
ret
or
xchg
ins
movs
push
pop
stc
xchg
mov
xor
xchg
in
mov
mov
xchg
lea
xchg
cld
loope
adc
xchg
push
call
pop
loopne
push
jbe
push
psllq
push
cmp
adc
sub
inc
or
and
push
jae
(bad)
jb
push
push
retf
push
dec
xchg
rcr
or
cld
push
push
sbb
test
sub
pop
popa
retf
sbb
sahf
inc
test
dec
ins
cmps
(bad)
mov
pop
pop
(bad)
shr
inc
inc
dec
lods
jb
mov
test
pop
dec
cmp
les
repnz
pop
aaa
sub
add
jmp
pop
or
xor
bound
sub
sub
into
push
neg
xlat
sti
or
test
add
mov
(bad)
(bad)
mov
dec
add
ins
arpl
fs
xor
push
ret
pop
stos
sub
pushf
mov
sbb
mov
(bad)
pop
push
fild
call
test
xchg
dec
push
das
hlt
adc
data16
push
jle
push
mov
outs
fdiv
xor
mul
sub
dec
and
les
bound
data16
test
mov
repz
(bad)
sbb
icebp
jno
ffreep
icebp
ins
aad
dec
pop
fisttp
bound
and
push
mov
jmp
mov
imul
cmps
test
loop
fldcw
jle
mov
cld
add
fwait
push
inc
pop
test
dec
pop
or
sahf
stos
push
sub
adc
cmp
mov
fwait
mov
ret
ret
add
pop
jns
scas
mov
push
outs
xchg
sub
mov
ins
(bad)
aaa
fcmovnbe
and
repz
test
sahf
mov
shl
push
mov
mov
mov
shl
push
xchg
arpl
push
fistp
(bad)
jle
and
cmp
ds
out
xchg
outs
or
call
add
outs
pop
clc
clc
mov
out
data16
and
push
mov
frstor
mov
mov
xlat
sbb
aad
inc
inc
jo
in
popa
ret
ds
add
loope
addr16
cld
mov
out
sbb
ficom
lea
loop
sbb
bound
out
cld
push
enter
lahf
aad
enter
jnp
sub
mov
lahf
test
cmp
jl
test
call
and
daa
jne
ds
jo
cmps
dec
rcl
mov
xor
loop
stos
leave
push
arpl
test
cdq
pop
mov
fld
jno
outs
mov
sbb
mov
int3
and
retf
sbb
ja
(bad)
aam
xor
leave
mov
in
cmp
jo
fdiv
fild
xchg
push
jl
sar
ds
pop
lods
sub
or
sub
push
add
mov
mov
dec
or
in
and
test
(bad)
(bad)
push
fdiv
stos
mov
daa
test
push
outs
jno
inc
stc
or
and
push
mov
(bad)
dec
add
icebp
sub
fiadd
ror
push
xor
jmp
daa
cmp
lds
jnp
push
sub
data16
popf
dec
jecxz
test
jg
and
fdivr
or
es
and
int3
cmp
cmp
and
gs
and
repnz
aad
(bad)
mov
and
and
cli
sbb
(bad)
dec
jmp
push
sub
dec
js
(bad)
adc
cwde
dec
lock
push
sub
inc
jae
and
mov
aam
(bad)
lock
(bad)
sahf
pop
ret
es
fist
ss
das
shl
pusha
add
push
rcl
mov
xchg
int
aad
retf
test
test
call
dec
fldcw
(bad)
mov
gs
jl
cmps
adc
inc
cli
pop
(bad)
pusha
imul
mov
scas
call
jp
or
inc
dec
cmp
shr
pop
out
in
ja
cmp
adc
mov
nop
dec
cmp
ins
stos
inc
xor
jbe
push
icebp
xchg
test
mov
add
cli
jne
sbb
adc
mov
mov
fdivr
or
data16
icebp
frstor
push
jbe
mov
lahf
outs
sub
add
iret
scas
and
enter
out
mov
std
les
(bad)
mov
cmp
mov
call
push
cmp
xor
add
cmp
xor
nop
mov
int
(bad)
in
test
imul
dec
ins
mov
mov
mov
sar
sub
call
sub
cmps
cld
pop
cdq
adc
jl
or
icebp
jo
push
xchg
jne
iret
sub
jno
les
dec
mov
add
sub
mov
and
mov
gs
leave
push
or
jne
mov
scas
push
mov
call
movs
loopne
fisub
cmp
push
js
jg
inc
in
ja
xchg
xchg
inc
rol
cs
mov
fwait
nop
xor
mov
or
mov
mov
cmps
push
sbb
mov
fdiv
and
add
cdq
ins
ror
clc
jl
mov
ret
xchg
aad
out
jl
pop
ror
add
int3
and
mov
dec
mov
xchg
frstor
inc
add
pushf
push
inc
jecxz
pop
fist
xchg
ins
int3
xadd
data16
js
and
movs
popf
ds
pop
or
movs
scas
mov
lods
test
push
fidivr
sub
inc
fist
fwait
mul
rol
bswap
pop
pop
nop
jbe
push
xchg
jg
xor
pop
add
pusha
ret
cmps
mov
push
jb
dec
and
xchg
mov
xor
mov
mov
or
je
dec
push
xchg
push
mov
lahf
cmps
dec
fyl2x
push
mov
push
xor
sbb
dec
cmc
xchg
or
xchg
inc
xor
popf
xor
(bad)
daa
out
pop
mov
aas
lock
push
arpl
or
test
inc
in
cmc
rcl
jl
dec
out
je
push
mov
scas
mov
push
pop
aaa
scas
push
test
pop
cwde
leavew
nop
lea
adc
adc
ds
mov
test
add
mov
pop
das
out
jae
inc
and
call
inc
jae
out
test
push
inc
xor
call
jg
ins
adc
mov
jg
mov
mov
in
fucomi
scas
out
shl
pop
gs
cwde
mov
or
gs
adc
and
imul
pop
sti
(bad)
repz
stos
repnz
pop
adc
add
mov
lods
adc
push
js
or
test
test
daa
in
pop
fisubr
test
popf
cli
aad
mov
ss
xor
push
shr
xor
rol
mov
mul
cmp
(bad)
(bad)
shl
js
jmp
mov
sub
dec
mov
and
cli
das
scas
push
mov
cmp
pop
shr
jb
push
call
inc
ins
pop
add
fdiv
fist
mov
aaa
mov
loope
pop
xor
mov
pop
cmps
pop
inc
cmps
ja
mov
(bad)
push
pop
sar
xor
pop
xchg
jmp
push
add
mov
sbb
push
and
push
bound
mov
cmp
inc
popa
xchg
lahf
push
sbb
inc
popa
sbb
push
ret
and
mov
xchg
cmp
inc
inc
xor
sbb
jnp
xor
dec
fdivr
pusha
pop
pop
pushf
inc
js
adc
pusha
push
rcr
mov
mov
call
sub
sbb
fild
jmp
in
cmc
je
int3
fisttp
pop
sub
scas
stos
test
(bad)
push
out
outs
pop
pusha
jmp
scas
shl
mov
mov
dec
jnp
aas
dec
or
push
loopne
cmc
xchg
push
aaa
lods
les
push
xor
cdq
adc
loope
push
ds
retf
(bad)
ret
movs
pop
mov
pop
(bad)
sahf
test
inc
mov
sub
sbb
jo
lock
repnz
add
cmp
xchg
mov
out
cwde
jmp
sbb
repz
fcmovu
(bad)
jg
mov
lods
ins
xor
test
xchg
cmps
aaa
outs
xlat
or
nop
sbb
div
hlt
sub
jne
jns
add
mov
pop
mov
mov
pop
pop
ins
xor
mov
aaa
inc
cld
movs
xor
cmp
or
push
nop
sbb
xchg
cmps
(bad)
out
xlat
push
enter
fld
daa
or
cmp
pop
enter
mov
or
hlt
aad
mov
pop
xchg
cmp
rcl
dec
cmc
mov
in
mov
pushf
mov
and
xchg
pop
push
imul
mov
push
inc
jecxz
aad
retf
or
cmp
sub
sbb
rcr
and
jl
adc
xor
and
imul
xor
mov
xor
pop
jne
lock
sbb
sub
jle
pushf
ins
popa
loop
push
sbb
in
mov
arpl
dec
cli
out
dec
retf
push
faddp
aam
je
je
pop
repnz
mov
and
xor
arpl
mov
imul
sahf
in
add
iret
les
add
sbb
ds
(bad)
nop
inc
iret
gs
mov
push
mov
fst
inc
fisttp
xchg
sub
jns
fdiv
and
add
inc
lods
pop
imul
out
push
mov
mov
stos
add
mov
ds
cmps
retf
fdiv
sbb
inc
push
pop
pop
fcmovnu
in
mov
std
pushf
mov
inc
pushf
lock
pop
leavew
cmp
imul
lahf
call
jmp
aam
movs
add
cmp
sahf
sbb
aad
push
lea
mov
out
js
fs
jb
sub
imul
pop
push
cmp
mov
fidiv
sub
imul
xchg
lahf
jnp
ss
inc
enter
mov
repnz
loope
push
jo
or
and
mov
add
test
xchg
loopne
dec
mov
cmp
pop
cmp
xor
lods
xchg
mov
es
mov
xor
ds
ret
cdq
adc
jae
mov
jae
leave
push
xor
inc
push
(bad)
xor
std
test
ins
sahf
test
mov
and
loope
outs
fsubr
pop
and
mov
pop
dec
iret
icebp
pop
(bad)
mov
idiv
inc
out
add
(bad)
mov
(bad)
cmps
xor
inc
les
fadd
(bad)
retf
push
jp
je
nop
loope
ins
dec
mov
sbb
retf
pop
adc
adc
das
rcl
xor
stc
les
adc
pop
xor
pop
mov
cmp
xor
pop
jo
inc
cdq
out
mov
add
xchg
nop
pop
cld
loopne
lds
sbb
push
popf
add
pop
mov
pop
add
xchg
dec
xlat
or
(bad)
shl
xlat
aam
pop
sbb
pop
push
cmp
add
fsub
(bad)
cmp
pop
leave
push
sbb
sub
mov
dec
lea
call
sbb
iret
cmp
(bad)
cmp
mov
dec
div
jnp
push
pushf
cli
retf
sub
loop
cwde
inc
and
dec
push
or
jmp
and
int
dec
inc
aad
ss
retf
(bad)
retf
push
inc
jnp
sub
mov
das
pop
inc
lock
push
push
pop
mov
mov
ret
push
xchg
pop
scas
mov
inc
test
les
inc
in
adc
add
icebp
add
sbb
jg
and
bound
and
and
dec
mov
sub
push
jne
jge
sub
shr
inc
cmps
sub
pop
mov
pusha
test
push
movs
jmp
sbb
sbb
add
out
sbb
(bad)
mov
retf
mov
cdq
xor
dec
cmp
jmp
call
loopne
int3
sub
adc
sti
scas
mov
or
mov
imul
stos
(bad)
pop
inc
cmp
shl
sub
lock
add
outs
cli
outs
mov
or
(bad)
mov
sahf
xchg
aaa
out
ds
xor
fldcw
orps
jae
sbb
jo
aam
aas
adc
imul
adc
xor
jecxz
das
loope
bound
lea
aaa
loop
and
dec
mov
mov
sbb
outs
inc
add
lahf
mov
aad
pop
cdq
fwait
cmp
jns
(bad)
cmp
jmp
mov
sbb
in
add
xchg
enter
test
sub
adc
test
xchg
dec
fwait
xchg
dec
xchg
sub
in
aas
pop
xchg
das
je
(bad)
je
xchg
sub
sahf
mov
sti
sbb
popf
loop
mov
fstp
push
sbb
in
mov
cmp
jle
add
mov
movs
jl
inc
mov
scas
jecxz
dec
jmp
cwde
jnp
scas
pop
pop
sahf
ins
jnp
aam
mov
adc
iret
push
loope
push
je
popf
or
icebp
scas
sar
or
push
inc
lods
(bad)
sti
mov
or
mov
out
sbb
imul
sub
in
adc
pavgb
xor
pop
cmp
dec
pop
inc
lock
out
or
sub
aas
mov
adc
jmp
pop
jmp
sti
movaps
pushf
call
psubb
and
rcl
mov
in
lods
or
cdq
movs
jbe
pop
test
fmul
pop
retf
adc
sahf
push
stos
hlt
lds
sar
mov
pop
(bad)
aad
xchg
int
aam
add
scas
jo
loop
sbb
js
xchg
push
jo
out
movs
out
inc
ds
mov
pop
out
aam
aad
add
les
loopne
jecxz
fwait
ins
es
mov
out
xchg
sbb
pop
dec
retf
mul
sub
inc
mov
nop
aam
ss
sub
mov
std
pop
mov
push
pop
or
retf
leave
fmul
cmp
adc
out
in
mov
add
lods
mov
mov
ret
(bad)
std
xorps
jno
or
pop
call
xchg
test
int
jae
in
jecxz
clc
cmp
inc
ins
hlt
ficom
popf
inc
jp
cmp
enter
retf
xchg
das
test
mov
mov
js
jne
imul
aaa
xor
fs
js
mov
ret
leave
shr
push
cwde
xchg
ja
mov
iret
cwde
cmc
xor
inc
xchg
push
add
pop
add
push
ror
sbb
lahf
or
adc
lds
aaa
inc
(bad)
xor
pop
mov
retf
xchg
test
xchg
pop
(bad)
mov
lds
xor
stos
xor
mov
fcom
and
jl
xrelease
fisttp
aaa
inc
lahf
mov
mov
rcr
arpl
sbb
mov
fstp
scas
inc
loope
add
fcomp
or
sti
xor
or
mov
mov
dec
inc
mov
xchg
or
leave
dec
das
repz
ins
pop
arpl
xor
aas
jl
sbb
jno
int3
add
std
addr16
sub
push
adc
dec
xchg
ins
jbe
mov
ja
xchg
cmp
cmp
lock
dec
std
and
pop
(bad)
add
aam
fcom
aaa
sbb
(bad)
mov
pop
not
or
test
cmps
pop
push
and
ror
loope
and
jns
adc
jge
cmp
or
ret
push
clc
js
push
scas
add
je
add
sbb
out
or
mov
rol
fmulp
sbb
div
cmp
pop
cmp
mov
aam
fadd
inc
mov
ret
xor
pop
lahf
cmc
adc
cmps
dec
push
arpl
cs
scas
jecxz
xchg
ret
adc
and
pop
(bad)
ins
cwde
push
push
loopne
jae
jnp
sbb
scas
int
mov
movs
scas
mov
sbb
xchg
mov
xchg
mov
stc
dec
xor
cld
loope
mov
hlt
sbb
popa
stos
add
pop
leave
add
adc
dec
cmp
imul
pop
add
sbb
dec
pop
popa
js
sub
int3
xor
cmp
out
pop
mov
sbb
mov
scas
xchg
mov
outs
cmp
imul
adc
int
push
jne
mov
sahf
xchg
xor
scas
sub
ins
pop
adc
shl
dec
jns
or
mov
arpl
jle
mov
fstp
daa
xchg
(bad)
ja
lods
pushf
mov
fld
inc
adc
xchg
lock
and
ret
mov
jno
scas
repz
dec
dec
adc
sub
jmp
enter
dec
mov
out
or
mov
xor
retf
jno
push
pop
sub
jns
sbb
adc
(bad)
mov
mov
out
push
pop
dec
and
or
dec
loope
pop
mov
aad
and
cmp
pop
test
and
retf
std
mov
mov
mov
pop
(bad)
mov
out
gs
cmp
add
jle
ficomp
xor
out
cmc
out
fwait
shl
stos
in
push
lea
in
xor
icebp
or
mov
test
mov
loope
fwait
sub
mov
xchg
sbb
mov
and
adc
mov
jg
xor
mov
xchg
xchg
repz
div
or
and
add
ins
cmp
arpl
movs
std
shr
mov
jge
and
xlat
aad
mov
xlat
inc
scas
mov
repz
in
(bad)
or
sahf
sahf
aam
ja
and
(bad)
in
(bad)
mov
out
jg
outs
clc
push
outs
out
shl
leave
retf
pop
sbb
call
sbb
nop
jcxz
mov
(bad)
enter
adc
stc
or
xchg
call
retf
(bad)
aad
(bad)
mov
loope
xor
mov
test
cmp
push
xor
shr
es
add
shl
xchg
sbb
pop
push
icebp
dec
push
pop
test
dec
xchg
mov
sub
mov
mov
cmp
cli
xchg
loopne
sub
out
push
pop
test
std
lods
mov
or
push
jo
jmp
push
leave
inc
inc
sar
(bad)
imul
mov
das
cli
ss
sbb
js
inc
aaa
pop
and
das
(bad)
das
(bad)
dec
fadd
lahf
adc
sbb
int
shr
push
int
test
inc
fadd
ins
or
jo
add
cwde
pop
jns
dec
pop
cli
fnstsw
fcomp
fs
cmps
je
(bad)
fstp
jns
mov
sti
pop
sub
mov
cmps
jp
xchg
mov
dec
inc
sub
mov
inc
fisttp
fndisi(8087
rol
inc
xor
fimul
push
jnp
fs
in
retf
scas
jmp
aaa
push
sub
les
pop
push
ja
pop
fld
inc
mov
mov
xlat
in
push
popa
test
push
bound
push
add
sbb
push
jl
cmps
test
call
pop
sub
mov
or
jl
or
xchg
dec
in
das
and
jns
sahf
mov
or
fistp
das
push
js
add
mov
xor
xor
inc
je
pushf
repnz
xchg
add
jl
push
mov
loop
addr16
(bad)
scas
lods
inc
adc
push
xor
pusha
xchg
int
arpl
sub
jmp
call
(bad)
std
add
fdivr
cli
cmp
pop
pop
add
and
xor
mov
adc
mov
sub
or
nop
cmp
or
(bad)
or
imul
jne
pop
rol
hlt
mov
inc
dec
lds
(bad)
push
inc
dec
enter
into
retf
or
pop
loop
mov
rol
and
mul
or
pop
jmp
sub
inc
pop
std
(bad)
aad
push
and
mov
sub
scas
fadd
or
shr
or
fdivr
mov
fild
pusha
test
lock
nop
mov
jg
cdq
mov
in
mov
mov
push
or
add
aad
mov
or
fisttp
xchg
push
xchg
mov
sbb
jmp
mov
inc
mov
mov
int3
fwait
or
daa
and
aas
fs
popa
xchg
ret
je
mov
repnz
dec
cli
push
movs
xchg
addr16
and
shl
mov
sbb
popa
loop
scas
xchg
add
mov
cmc
jmp
jge
(bad)
or
adc
outs
pop
fmul
jl
into
sahf
das
push
clc
pop
(bad)
dec
xor
loop
lock
mov
loope
out
sub
fidiv
std
push
pop
les
fwait
stos
add
push
(bad)
and
add
ja
xchg
out
in
outs
in
add
push
mov
jp
jno
data16
xchg
xor
imul
push
or
std
imul
dec
fs
hlt
cmc
sbb
push
jecxz
test
jno
jle
out
pop
popa
outs
fadd
out
cmp
mov
loop
popf
test
out
inc
jo
lock
dec
mov
mov
imul
adc
mov
cmp
pop
jmp
dec
nop
dec
mov
out
imul
jecxz
in
push
jg
movs
xor
xchg
je
dec
jmp
shl
adc
and
in
mov
xchg
jne
mov
add
xor
dec
retf
xchg
mov
ror
mov
dec
add
clc
mov
cmp
(bad)
sar
sub
jae
push
jecxz
shl
sbb
or
das
stos
cmp
aad
cld
add
inc
xchg
(bad)
ds
les
xchg
adc
aaa
outs
xchg
xchg
jmp
movs
cli
out
xor
inc
dec
daa
pop
mov
jb
ror
and
fmul
sbb
push
mov
or
loopne
(bad)
in
mov
std
stos
sbb
shl
cmp
(bad)
ret
(bad)
sub
jmp
outs
ror
push
bound
loopne
xlat
mov
xchg
cld
fcomi
fwait
xchg
imul
rol
jne
adc
lock
test
dec
mov
xor
enter
inc
and
loope
(bad)
movs
std
lds
popf
nop
movs
mov
cmp
inc
pop
fmul
mov
xchg
out
mov
aas
jns
cmp
int
xlat
mov
jo
daa
data16
xor
mov
cmp
sahf
jge
lahf
sahf
sti
cpuid
imul
jnp
and
mov
into
jns
or
lods
xchg
push
add
mov
mov
cmp
inc
adc
inc
ins
adc
mov
shl
(bad)
cmp
ins
push
pop
rcr
je
lock
inc
imul
mov
push
inc
cmp
xchg
dec
out
arpl
xor
int
push
in
out
sar
inc
mov
xor
pop
mov
cmp
stc
mov
sub
lea
pop
retf
pop
hlt
aad
jbe
cmp
movlhps
dec
adc
push
mov
dec
lods
lahf
adc
jo
aas
retf
call
pop
stos
jmp
pop
movs
cs
pop
mov
push
jns
and
out
mov
ret
scas
and
popa
(bad)
ss
ffreep
and
mov
push
cmc
loope
and
daa
xchg
dec
adc
xor
adc
int3
sar
mov
in
mov
inc
in
lahf
out
and
xor
mov
pop
fmul
cs
cmps
cdq
sti
(bad)
push
jg
jb
pop
fstp
mov
into
or
pop
add
fwait
mov
stc
movs
pop
fwait
jns
adc
rcr
aaa
add
clc
test
and
pop
mov
int
stos
arpl
and
or
xor
sti
rcr
in
xchg
mov
das
sbb
cmc
and
(bad)
sub
adc
xor
dec
shl
iret
pop
push
mov
cld
es
pushf
enter
(bad)
push
add
in
cmp
stos
inc
(bad)
mov
pop
cmps
icebp
into
repnz
mov
jns
mov
in
inc
out
mov
sub
leave
daa
test
or
dec
mov
int3
enter
test
push
or
gs
mov
mov
mov
fs
fadd
inc
fsub
xor
mov
(bad)
retf
sub
and
push
mov
cld
cwde
pop
dec
icebp
or
and
fidivr
scas
vmread
repnz
sub
ror
daa
jae
cmp
fnstsw
push
sub
(bad)
cmps
ret
push
popf
push
sub
cmp
dec
std
xor
adc
inc
xor
out
lea
scas
xor
retf
pop
inc
jne
test
pop
cmp
pop
les
jmp
mov
push
rcl
push
jb
xchg
(bad)
mov
add
pop
leave
inc
jmp
sbb
mov
pop
pop
ds
cmps
(bad)
cmp
jecxz
push
out
cs
cmp
cmps
jge
lods
or
jle
cld
mov
pmuludq
scas
jg
(bad)
jmp
cld
ret
fadd
inc
ret
int
(bad)
lds
shl
ins
test
and
cmps
loope
ins
(bad)
mov
into
cmp
inc
sub
and
pop
jbe
call
sahf
mov
mov
xchg
adc
inc
jb
lahf
scas
loope
aad
dec
repnz
mov
mov
sbb
jge
mov
fsubr
mov
or
jle
repz
jmp
icebp
ds
add
xchg
(bad)
outs
fild
loope
add
mov
retf
mov
dec
lods
stos
and
in
stos
or
nop
mov
test
je
sti
dec
or
scas
pushf
pop
xor
jmp
movs
mov
xchg
outs
lods
sub
ror
lahf
dec
push
call
sub
retf
faddp
sbb
jecxz
ret
mov
add
dec
push
(bad)
adc
idiv
fwait
scas
inc
add
dec
mov
add
outs
cli
loop
js
in
arpl
scas
stos
imul
aaa
mov
sbb
test
dec
jmp
dec
push
cmp
ins
pop
mov
adc
cmp
fild
(bad)
add
ret
outs
jo
ficomp
push
data16
in
mov
ja
arpl
stos
sbb
cli
sahf
push
mov
out
sbb
xor
mov
aaa
lds
jmp
loopne
add
inc
in
hlt
lahf
repnz
mov
adc
daa
mov
and
mov
shr
aam
pop
xchg
cdq
push
and
pop
push
and
mov
pop
out
neg
mov
loop
mov
fld
xchg
outs
jo
sbb
mov
mov
ret
nop
in
push
mov
ss
jp
aad
mov
inc
stc
jp
shl
mov
jle
call
iret
dec
add
int3
(bad)
mov
pop
push
sahf
mov
jnp
or
or
fmul
mov
sub
test
into
mov
pop
data16
test
(bad)
int3
sbb
add
pop
inc
in
pusha
dec
sbb
jecxz
sbb
mov
addr16
and
push
data16
hlt
mov
pop
fisub
pop
out
cmps
adc
cmps
push
push
inc
test
mov
stos
inc
outs
adc
jae
in
and
test
sub
loope
mov
inc
neg
nop
xchg
push
aas
cs
xor
int3
xchg
je
add
pusha
pop
mov
xchg
inc
xchg
mov
or
dec
(bad)
mov
(bad)
push
dec
jecxz
add
sbb
add
add
(bad)
xchg
adc
dec
mov
aas
pop
(bad)
sbb
add
dec
out
or
into
or
(bad)
pop
(bad)
(bad)
sbb
(bad)
sti
sbb
cmc
out
and
cmp
add
(bad)
push
pop
pop
(bad)
cwde
mov
push
xor
adc
or
test
sub
ret
scas
aas
xchg
iret
mov
jmp
xor
or
jg
enter
icebp
pop
test
sti
add
xchg
pop
sub
mov
or
push
and
xlat
mov
sub
aaa
and
sbb
das
(bad)
ror
pop
imul
cli
push
mov
out
fs
inc
test
pop
je
jno
jno
pop
dec
inc
adc
cmps
jne
nop
or
rol
test
sti
mov
xor
xor
xchg
push
or
mov
jge
cld
dec
jmp
and
inc
dec
lods
cmp
mov
in
push
pop
sahf
add
test
mov
mov
js
inc
cmps
push
jbe
out
imul
retf
mov
mov
int
adc
xchg
add
xor
mov
jmp
hlt
mov
or
mov
repnz
cmps
push
mov
pop
lods
retf
pusha
jbe
icebp
mov
jmp
scas
jns
test
mov
fcomp
shl
sub
xor
jmp
inc
cmp
enter
call
lock
cmps
sbb
jmp
(bad)
xchg
sub
jecxz
mov
call
sbb
rcl
and
cmp
sub
sbb
inc
data16
push
and
je
mov
xchg
jo
and
and
sub
push
scas
xlat
sub
or
dec
jo
aaa
scas
mov
mov
mov
scas
or
arpl
add
sub
add
scas
movs
sub
jbe
cs
lods
movs
mov
mov
or
jle
add
xlat
mov
fadd
lea
and
data16
jle
es
cmp
inc
sbb
je
outs
and
cmp
clc
pusha
xor
mov
inc
sbb
in
scas
cld
push
jge
rcl
clc
xchg
pop
mov
mov
xor
sub
or
ja
popa
hlt
lods
mov
stos
arpl
mov
sbb
mov
add
es
jns
push
pop
mov
in
aad
pop
out
pop
ins
ret
inc
shl
push
cmp
mov
xchg
mov
scas
inc
push
push
cmp
adc
mov
ret
imul
and
jecxz
sbb
xchg
aas
mov
mov
sbb
lds
xchg
or
mov
fsubr
mov
jge
scas
cmp
mov
test
inc
mov
pop
ins
sub
test
push
jo
sti
push
loope
retf
loope
ret
sahf
pop
daa
mov
mov
add
lods
push
shl
push
mov
push
xchg
sub
dec
push
(bad)
pop
mov
mov
aam
dec
in
ja
stos
pusha
lods
sbb
cmps
popf
push
adc
pop
fnop
inc
mov
ins
(bad)
push
das
add
mov
(bad)
cs
ret
inc
add
sbb
or
cld
mov
xchg
sub
jno
out
and
outs
dec
outs
mov
loop
xchg
mov
rcr
in
inc
xchg
mov
push
scas
xchg
push
cs
das
xchg
mov
add
aam
or
adc
or
cli
cs
fsubr
sahf
push
ror
retf
fcom
in
push
add
and
sub
out
xor
mov
out
data16
mov
mov
les
add
retf
sbb
add
test
dec
xchg
dec
mov
adc
(bad)
lock
jb
push
pusha
popf
frstor
inc
icebp
sub
cdq
lock
jno
xchg
mov
inc
inc
push
sub
les
stos
adc
mov
fsubp
xchg
aam
scas
int3
ror
sub
aaa
cld
inc
repz
mov
and
retf
add
(bad)
jl
ins
sub
(bad)
lock
fs
cdq
inc
sbb
popf
ficom
ins
nop
adc
retf
mov
or
mov
dec
or
xor
add
dec
xor
cwde
(bad)
jl
xchg
dec
add
jle
fadd
cdq
je
sahf
xor
mov
(bad)
mov
add
jmp
out
cmp
fnsave
stos
push
adc
or
lods
popf
pusha
in
xchg
fsub
push
cwde
movs
pop
cmp
cs
inc
pop
dec
push
sub
sub
nop
shl
pop
sahf
arpl
out
fs
lds
pop
aad
inc
ret
gs
stos
pop
mov
xchg
or
and
xor
adc
xchg
jg
jnp
and
arpl
mov
jb
(bad)
sti
add
(bad)
mov
mov
cmp
cmp
and
mov
mov
lea
push
inc
sar
mov
call
fwait
mov
bnd
jno
stos
and
dec
mov
jmp
lds
jle
outs
leave
std
fcmovu
sbb
inc
xchg
bound
(bad)
jmp
cmps
call
fs
les
pop
out
inc
fidivr
stc
push
cli
xchg
cli
sub
jns
mov
mov
push
test
push
rol
fmul
xchg
pushf
lock
mov
test
(bad)
pop
jge
mov
sbb
lods
je
(bad)
mov
ins
or
mov
mov
adc
push
pop
mov
dec
xchg
cli
mov
vpcmov
push
cmp
std
xchg
jmp
pop
test
dec
loop
in
std
ficomp
mov
jecxz
scas
mov
cmp
push
shr
jg
inc
inc
push
mov
and
jne
adc
mov
(bad)
fst
push
mov
sbb
jno
imul
add
nop
movs
inc
hlt
add
jmp
adc
popf
rcr
mov
mov
outs
mov
aad
sbb
test
out
jne
psrad
sub
in
enter
lds
dec
mov
mov
jge
pop
or
and
lods
jle
popa
sahf
inc
and
adc
jno
in
or
cwde
daa
inc
mov
stc
test
je
jmp
jno
jmp
xor
loope
ror
pop
test
mov
or
cdq
shl
sbb
mov
das
xor
arpl
imul
in
scas
hlt
mov
stos
push
ja
sub
mov
stos
mov
call
add
pusha
xchg
stos
fcos
fwait
push
or
jne
fwait
gs
cdq
cmp
int3
mov
popa
fbld
shl
mov
push
pusha
mov
sbb
dec
popf
jno
pop
cmp
push
js
inc
fs
jno
cli
dec
cli
(bad)
rcr
dec
mov
ins
les
es
fwait
cdq
xlat
mov
movs
retf
iret
cli
mov
out
mov
adc
out
push
xor
dec
int
cmps
adc
loop
jnp
sar
or
inc
mov
leavew
mov
jle
gs
aam
dec
repz
ss
rol
and
dec
mov
mov
call
cmc
inc
rcl
stos
lock
jmp
movs
in
inc
mov
push
(bad)
mov
pop
mov
add
xchg
cmp
sub
mov
lahf
test
jbe
push
jmp
ins
fs
test
push
and
(bad)
fisubr
fisub
aam
icebp
popa
test
or
xor
cmp
nop
or
popf
push
add
xchg
mov
lea
ret
shr
mov
loope
mov
imul
sbb
mov
inc
mov
fisubr
cdq
fstp
inc
inc
xchg
push
ins
loope
out
mov
xor
sub
repz
mov
mov
and
dec
sub
and
mov
sub
push
lods
xor
test
push
pop
cmps
sbb
std
sub
(bad)
cmp
outs
jo
fdivrp
jno
cwde
adc
pop
sbb
push
cmc
push
or
(bad)
sahf
lea
dec
xchg
mov
jo
sar
js
dec
fwait
push
or
mov
xlat
fistp
mov
dec
xor
mov
pop
adc
xor
out
aaa
add
dec
sbb
retf
or
xchg
je
mov
test
pop
xchg
shr
jl
mov
rcl
aas
cli
inc
mov
sub
scas
fidivr
mov
stc
sar
fdiv
(bad)
fwait
ds
mov
jg
je
dec
adc
or
repnz
icebp
(bad)
std
jmp
fsub
cld
imul
adc
repnz
pushf
pop
sti
xor
add
(bad)
in
push
dec
xor
retf
aaa
mov
retf
fld
mov
push
stc
(bad)
mov
and
retf
fwait
cs
sbb
mov
in
xor
pushf
xchg
hlt
cmp
clc
ds
mov
sbb
cmp
daa
lock
adc
out
les
cdq
cwde
sbb
sbb
lock
mov
mov
jmp
pop
addr16
cmps
xor
sbb
enter
push
lods
push
xchg
pop
mov
int
mov
sbb
inc
pushf
mov
repnz
inc
and
sub
not
lods
cmp
mov
xchg
cmps
mov
sbb
cmp
xchg
mov
dec
or
repz
push
jno
and
nop
mov
push
inc
sti
sbb
xor
ret
outs
fsubr
aam
inc
mul
test
ss
aas
mov
push
cli
out
loope
adc
jne
inc
or
loop
popa
dec
mov
hlt
js
mov
mov
xor
mov
xor
inc
test
test
loope
mov
sbb
popf
cli
xor
inc
ds
popf
lock
add
dec
aaa
pop
or
cs
cli
add
sbb
(bad)
leave
cmp
movs
xlat
(bad)
aas
xlat
loope
loop
movs
pop
mov
or
mov
adc
mov
lods
push
xor
not
out
push
jne
or
sub
lds
outs
push
add
mov
dec
out
jp
in
sub
mov
scas
fcmovne
std
jb
pop
or
sti
je
add
test
jnp
data16
nop
jecxz
nop
pop
dec
int
das
adc
out
or
leave
and
sub
ror
popf
lahf
into
cmp
sti
inc
sub
setge
mov
adc
inc
pop
dec
dec
pop
mov
push
cs
mov
push
inc
or
cmp
push
add
ror
retf
into
pop
xor
sbb
adc
iret
xor
add
loope
push
outs
icebp
mov
call
adc
sbb
cmc
fbstp
add
and
jnp
inc
mov
aad
push
ins
adc
dec
mov
mov
push
iret
(bad)
(bad)
adc
stos
xchg
cwde
popa
push
sbb
sub
pop
add
adc
inc
pop
sbb
jne
add
mov
xchg
popa
push
mov
clc
or
add
(bad)
test
dec
push
jp
mov
out
out
xchg
mov
cdq
retf
lods
jle
adc
test
cmps
xchg
cdq
shr
out
rcl
dec
ret
sub
(bad)
clc
inc
sbb
add
mov
cld
fiadd
mov
scas
clc
xor
pop
daa
or
pop
sti
fldl2e
xchg
pop
neg
lds
add
jl
fwait
lds
mov
inc
dec
int3
scas
dec
sub
adc
inc
fucom
call
mov
mov
lods
pop
retf
lds
adc
or
mov
nop
repnz
pop
lds
nop
or
andps
push
cmps
inc
pop
sbb
inc
pop
sbb
cmc
js
lahf
sbb
js
int
push
add
push
adc
cld
mov
aam
daa
les
lds
adc
push
arpl
jb
xor
mov
mov
movs
lock
sbb
test
fisubr
pop
jle
idiv
add
mov
or
shr
dec
outs
xchg
jnp
xchg
and
mov
es
loopne
push
push
add
loope
xor
jge
adc
xchg
xchg
add
ror
xchg
jmp
and
mov
jnp
add
fldenv
inc
in
mov
dec
in
addr16
jle
(bad)
mov
ret
push
push
dec
in
adc
loopne
fistp
xchg
dec
sub
push
cmp
sbb
inc
out
das
push
lods
mov
and
dec
xchg
retf
xchg
xor
push
xchg
push
xor
xchg
js
xchg
sbb
add
jne
mov
(bad)
jmp
ret
add
and
pop
out
pop
pop
je
movs
mov
stos
(bad)
in
sahf
mov
mov
add
shl
add
sub
sete
mov
jae
fsub
(bad)
xchg
xchg
std
push
rdpmc
cmp
and
wrmsr
fwait
cmp
inc
std
movs
aad
or
mov
int
fdiv
xor
ret
rol
int3
mov
leave
adc
ds
shl
dec
test
ds
push
sub
pop
add
or
pushf
mov
xchg
fstp
adc
pop
adc
pop
and
mov
pop
mov
mov
cmp
mov
dec
push
cmps
pop
inc
and
lods
aam
std
arpl
out
xor
in
sbb
stc
pop
lahf
retf
arpl
inc
paddsb
cmp
mov
or
test
xchg
mov
ret
mov
cmps
jg
bound
cli
adc
je
in
or
fidiv
cmp
cmp
lahf
jo
in
loop
test
ja
dec
pop
dec
out
sub
mov
pop
jns
dec
sub
imul
jb
mov
jae
push
ror
test
pop
dec
ss
xchg
push
lds
sub
repz
sub
cmp
xchg
inc
adc
daa
cmp
outs
bound
fs
mov
inc
sbb
mov
inc
(bad)
stc
sbb
and
xor
inc
aad
sub
repnz
adc
pandn
mov
sub
scas
les
pop
cmp
js
pusha
pushf
fwait
retf
popf
ret
xor
cmp
mov
scas
loop
jb
pop
dec
xlat
mov
fcmovnbe
out
mov
mov
neg
js
call
xchg
pop
aas
mov
inc
repnz
jge
scas
pushf
jb
adc
and
or
add
xor
xchg
sbb
and
(bad)
out
adc
test
sahf
lahf
mov
push
cmps
pop
dec
jnp
movs
pop
nop
mov
mov
xchg
ror
out
pop
jns
ror
sahf
mov
inc
mov
pop
push
push
inc
push
retf
outs
nop
not
stc
push
dec
adc
xor
push
pop
mov
push
jg
mov
sbb
dec
push
clc
test
push
cli
std
test
cdq
pop
inc
jbe
lods
js
jmp
mov
adc
in
and
shl
sub
repnz
or
add
sub
cmp
push
ret
pop
adc
out
clc
cmp
sbb
mov
sub
push
or
adc
sub
std
mov
mov
clc
test
fnsave
arpl
scas
xor
mov
mov
cmps
lods
jmp
leave
mov
pop
test
pop
jp
push
jo
test
sti
dec
inc
push
ret
dec
mov
and
adc
cld
inc
mov
push
cmc
lods
mov
push
into
loop
or
jp
outs
sub
aas
or
stc
jg
arpl
cmp
rep
sub
retf
das
adc
add
sbb
mov
mov
es
push
pop
rcl
rcr
fistp
pusha
xchg
cmp
lock
mov
imul
cmp
shl
movs
repnz
mov
fs
pop
cs
jb
pusha
loop
mov
cmp
je
outs
xor
inc
or
ret
pop
jno
stos
push
leave
into
inc
scas
jnp
mov
jmp
pop
stc
js
ins
(bad)
js
sub
(bad)
cmp
pop
cli
sahf
lods
and
out
fimul
in
xor
and
fild
arpl
dec
push
test
and
push
stc
sbb
or
out
push
mov
dec
sbb
xchg
and
jnp
fnstcw
sahf
adc
jl
push
pop
push
add
cmp
(bad)
pop
fistp
ud2
xor
mov
je
adc
in
inc
mov
(bad)
(bad)
js
or
adc
rol
mov
es
and
inc
xchg
ins
push
push
loop
pop
xchg
call
jge
cmps
into
dec
add
xchg
mov
inc
sbb
cmp
inc
xchg
jbe
lea
sbb
pop
dec
fptan
and
lock
(bad)
fsub
mov
pop
outs
mov
stos
and
jnp
ficomp
sbb
int
sar
pusha
ds
out
or
push
xchg
mov
cmp
inc
lods
sbb
sbb
imul
ficom
hlt
pop
popa
out
jecxz
cmp
lahf
xor
pushf
int
mov
rcr
repz
xchg
in
xchg
adc
inc
ret
dec
sbb
mov
popf
ror
inc
pop
pop
mov
mov
cmc
dec
cmp
ret
ja
loop
jns
repnz
rcl
lock
stos
dec
jns
push
add
mov
frstor
inc
or
jecxz
fisub
dec
jae
dec
jae
inc
mov
inc
mov
sbb
(bad)
mov
in
xchg
sub
dec
lods
mov
(bad)
cmp
mov
addr16
mov
jns
movs
sbb
lds
mov
push
mov
shr
bound
mov
test
jl
cmp
adc
ins
push
lahf
push
sbb
mov
adc
or
in
xchg
inc
pop
enter
inc
add
sbb
push
loope
repz
push
mov
cdq
fwait
pop
das
xor
cmps
addr16
stos
mov
fild
jb
cs
jb
gs
imul
shr
fidiv
fstp
lock
add
inc
(bad)
outs
outs
mov
push
(bad)
neg
mov
push
sbb
add
cmps
adc
dec
jp
stc
dec
and
add
movs
pusha
enter
sub
adc
xchg
inc
sub
sub
leave
in
out
test
push
inc
repnz
shl
mov
push
jg
pop
and
out
inc
js
xchg
jl
adc
ds
inc
dec
cmp
cmps
pop
sbb
clc
adc
xchg
aam
add
mov
aam
sbb
(bad)
adc
mov
das
sbb
push
jbe
call
loop
ja
xchg
cs
shl
popa
aad
inc
sbb
(bad)
in
mov
ds
fmul
pop
ins
push
imul
data16
aaa
xchg
fisub
xor
and
ret
out
xor
add
sbb
cli
cmp
test
inc
xchg
dec
aad
loop
popa
sub
rol
jmp
adc
add
not
(bad)
push
mov
jp
test
in
mov
xor
or
and
push
xchg
ja
or
repz
call
add
lock
call
add
inc
call
pop
pop
jecxz
jecxz
adc
jns
inc
retf
mov
retf
js
xor
sub
loop
sub
mov
adc
inc
cli
mov
test
sar
in
icebp
hlt
leave
adc
lods
js
rcl
lock
clc
sub
push
test
jl
xchg
cdq
sub
add
nop
sbb
mov
mov
mov
mov
out
jb
out
mov
leave
mov
cmp
in
fist
fild
retf
fadd
ja
movs
xor
mov
lea
adc
mov
push
push
daa
sbb
in
adc
inc
adc
fisttp
jno
jp
sub
push
mov
mov
daa
loope
xchg
sub
adc
adc
mov
fnstcw
add
mov
in
inc
xor
jnp
fwait
das
lea
ror
(bad)
pop
inc
sbb
mov
out
mov
add
jle
xchg
add
xor
fidiv
in
cmp
xor
mov
cmc
outs
push
fldcw
sub
sub
xchg
inc
pop
aas
sti
and
ret
std
inc
mov
xchg
xchg
dec
mov
mov
adc
cmp
add
add
dec
pop
in
movs
imul
inc
adc
cmp
call
pop
retf
pavgw
or
xchg
mov
xor
mov
mov
and
jmp
push
aad
test
jp
std
push
retf
ds
add
xchg
cmp
(bad)
jecxz
inc
call
mov
stos
cmp
pushf
dec
jbe
jecxz
dec
inc
rcl
aad
lods
mov
shr
mov
adc
inc
mov
mov
retf
cmp
sbb
add
in
outs
sub
cmp
sbb
aam
ret
mov
mov
fisub
(bad)
imul
scas
pop
xchg
inc
jne
ins
dec
ret
jb
jecxz
inc
jecxz
stos
push
ss
inc
int3
aad
jl
and
adc
test
sub
fimul
test
jne
mov
xchg
call
enter
adc
in
in
adc
mov
mov
int
dec
xlat
pop
jae
inc
pop
stos
mov
cmp
arpl
ins
mov
jg
jg
jae
into
sub
mov
retf
cmp
sti
ret
and
fwait
nop
xchg
push
inc
shl
push
dec
in
pop
cmc
fdiv
jge
sub
rcr
cmps
aas
loope
es
sbb
jmp
pop
or
outs
mov
pop
inc
sub
push
mov
arpl
inc
cmp
sbb
fadd
xchg
sub
jb
lds
cmp
ds
push
add
ss
fistp
mov
sub
xchg
mov
std
mov
xchg
icebp
ins
aam
and
dec
mov
pop
and
cmp
push
mov
or
pop
dec
inc
add
mov
fimul
xchg
hlt
dec
(bad)
jmp
jl
aad
pop
retf
mov
jmp
or
(bad)
mov
xor
test
add
add
in
retf
adc
jo
ja
mov
inc
or
or
xor
push
and
mov
mov
push
cmp
jmp
inc
retf
and
data16
xor
lahf
cmps
add
test
out
inc
mov
xchg
pop
loope
push
dec
call
jecxz
mov
xchg
pop
mov
jae
xchg
faddp
push
into
cmp
push
mov
xchg
xlat
sub
outs
gs
mov
push
iret
cdq
imul
int
pop
rol
add
test
pusha
(bad)
xor
imul
sub
popf
(bad)
adc
xchg
lahf
jecxz
dec
data16
pop
cwde
mov
shl
imul
jo
dec
(bad)
jp
mov
adc
movs
mov
addr16
push
mov
les
icebp
cmp
loope
in
cmps
sbb
movs
aas
test
test
sbb
nop
jnp
xlat
pop
outs
sti
popf
sbb
mov
jae
push
(bad)
adc
test
cmp
dec
outs
mov
iret
dec
js
adc
sbb
xor
int3
cs
enter
pushf
pop
mov
lods
cdq
and
out
fwait
test
jb
mov
mov
jae
out
(bad)
(bad)
out
imul
jg
adc
jnp
push
jge
mov
int3
add
aad
inc
js
call
add
mov
mov
and
and
sbb
std
in
sbb
add
ja
in
in
mov
or
add
mov
adc
sbb
xchg
dec
xchg
cmc
and
or
retf
or
jle
(bad)
xchg
and
ss
mov
pop
push
ins
lods
dec
leave
mov
imul
jecxz
mov
mov
dec
push
xchg
(bad)
call
aas
rol
mov
push
int
scas
in
pop
retf
add
push
cdq
retf
fs
mov
mov
or
mov
fbstp
scas
adc
cmc
jne
xchg
dec
inc
outs
push
sub
jo
mov
jmp
or
jb
(bad)
test
cli
mov
addr16
xor
xchg
pop
inc
cwde
or
fild
mov
imul
mov
aam
and
stc
test
rol
shr
test
push
and
bound
std
sahf
(bad)
xchg
xor
jnp
into
mov
and
rcl
cmp
fstp
in
pop
ror
cmp
outs
aas
jb
mov
xchg
sbb
in
rcl
cmp
xchg
dec
mov
dec
pop
std
aaa
pop
add
sbb
enter
add
push
mov
call
mov
cmp
add
jecxz
mov
js
push
arpl
ficom
mov
sub
pop
push
pushf
push
add
pop
ror
mov
xchg
test
xchg
neg
pop
gs
jmp
in
sub
call
sbb
ret
jne
sbb
stc
mov
xchg
imul
jno
data16
dec
in
clc
and
pusha
in
shl
mov
movs
bound
jecxz
daa
aaa
xor
mov
lahf
and
scas
sub
sbb
jb
and
sbb
inc
addr16
div
jb
mov
xchg
mov
popf
jnp
int3
cli
xchg
push
jo
dec
nop
call
sub
dec
inc
cld
aad
rol
push
inc
mov
popf
loop
and
pop
mov
pop
jno
push
clc
xor
inc
push
fwait
push
adc
push
loope
add
xchg
fstp
aad
ds
mov
rcl
and
psllw
jns
movs
and
cmp
shr
mov
sbb
rol
xor
xchg
mov
xor
fisttp
iret
(bad)
fisubr
or
repnz
cwde
out
inc
cmps
sbb
jmp
xchg
popf
push
int
ret
jmp
adc
push
lea
sub
pusha
hlt
inc
(bad)
hlt
push
not
sahf
jb
test
add
mov
jmp
xor
jb
jg
mov
popa
pop
push
sub
push
fstp
scas
ret
(bad)
fidivr
sti
out
jns
or
or
mov
sahf
jns
stc
aam
and
mov
jbe
fnsave
fnstenv
xor
(bad)
loop
sbb
mov
push
jp
(bad)
cdq
retf
enter
out
push
and
xchg
sub
popf
xchg
adc
add
lahf
push
jmp
jbe
mov
fwait
xchg
ins
test
xchg
imul
inc
jge
add
pop
push
inc
push
addr16
mov
leavew
dec
outs
adc
int3
or
sub
in
mov
xchg
std
test
sub
jl
jmp
jmp
dec
dec
jno
cwde
loope
stc
mov
push
imul
loopne
mov
adc
push
and
shl
inc
or
adc
stos
jp
push
and
pop
add
xor
inc
jl
or
mov
or
(bad)
stos
enter
xor
and
popa
jl
sbb
pop
push
xor
rol
test
add
cmp
mov
mov
in
dec
popa
fld
je
push
sar
scas
push
pop
jg
push
stos
pushf
ins
test
sub
nop
in
push
mov
fs
dec
mov
sbb
minps
xor
in
jb
cld
retf
test
std
iret
pop
mov
add
mov
and
jp
sub
jl
mov
inc
jp
nop
fs
xor
add
xor
mov
sbb
and
dec
imul
push
cdq
jg
cld
inc
xchg
int
arpl
pop
(bad)
push
pop
fadd
fcom
push
jns
adc
fldenv
aas
adc
mov
inc
bound
outs
test
shl
jmp
and
fwait
stc
jl
ins
fdivr
fadd
xchg
sti
outs
sub
ss
pop
js
mov
movs
(bad)
push
ret
mov
icebp
xchg
adc
out
inc
in
adc
sub
loope
xor
psubw
aas
dec
in
jno
imul
xchg
mov
inc
dec
in
xor
xchg
shl
push
nop
jl
xor
gs
enter
cmp
mov
aam
push
cdq
cmp
and
pop
mov
cdq
std
mov
popf
popa
in
adc
out
pop
dec
sub
fmul
jl
mov
lods
xchg
repz
push
cmp
cmp
out
sub
aas
out
sbb
int
(bad)
popf
jp
inc
push
ror
sti
xor
outs
push
in
mov
pop
pusha
mov
data16
ror
call
fld
rcl
adc
mov
push
out
cmp
outs
mov
cmp
pop
out
(bad)
test
xchg
mov
cmps
gs
ret
sahf
loope
or
std
cmp
add
cmp
and
jnp
sub
mov
dec
(bad)
out
clc
dec
dec
test
(bad)
xchg
sbb
mov
mov
mov
fdiv
aad
dec
cmc
test
xchg
fcmovnbe
ins
add
test
iret
mov
daa
(bad)
xchg
sbb
stos
lea
jns
xor
lods
clc
pop
retf
jnp
pop
or
in
pop
mov
cld
dec
lahf
xlat
jnp
mov
cmp
jmp
repnz
sub
or
enter
xor
xchg
data16
adc
dec
pop
mov
adc
add
or
cmc
mov
sahf
(bad)
cmc
mov
push
pop
xchg
jmp
jp
mov
data16
sub
(bad)
push
or
fild
shl
cmp
xlat
mov
or
mov
or
or
push
adc
js
xchg
or
rol
sti
adc
jno
fsubr
pusha
or
shr
pop
pop
mov
jmp
clc
dec
mov
pop
lock
nop
lods
leave
stc
mov
pop
mov
nop
dec
lea
pop
repnz
fiadd
stos
jg
push
lods
xor
adc
inc
push
pop
sub
rol
pop
ret
fild
xlat
arpl
(bad)
ja
call
sbb
loopne
sbb
test
hlt
mov
jl
xchg
test
or
mov
inc
and
xchg
or
leave
jne
xor
mov
inc
scas
sbb
in
add
pop
fs
enter
call
and
lock
push
icebp
add
shl
add
mov
pop
adc
sub
sbb
pop
mov
aam
cmp
lods
dec
repz
popf
dec
xchg
cdq
inc
int
leave
aas
lock
call
cmp
sti
xchg
xchg
(bad)
and
pop
adc
fwait
sub
mov
fs
pop
ficom
push
inc
dec
lahf
mov
test
aam
jns
scas
xchg
xchg
jae
stc
fnstcw
sbb
(bad)
cli
fisttp
mov
iret
mov
and
mov
iret
es
cmps
sub
nop
xlat
jmp
and
push
daa
(bad)
iret
daa
xchg
add
and
inc
in
movs
add
aas
loopne
(bad)
inc
or
enter
lahf
shr
pop
pop
scas
cmp
inc
cmps
outs
scas
mov
xchg
imul
pcmpeqw
sbb
mov
leave
dec
cmp
mov
fstp
movs
retf
xor
in
xchg
hlt
ror
out
mov
sbb
mov
shl
push
pop
cmp
mov
jno
imul
lahf
fnsave
sbb
mov
out
lea
jl
fisttp
ret
stos
ror
fxch
jno
mov
jnp
sbb
fchs
jge
mov
xchg
inc
addr16
repnz
push
xor
add
jnp
fwait
test
mov
lgs
mov
sar
sub
adc
push
push
mov
pop
mov
pop
cld
push
inc
or
test
in
std
add
xlat
out
js
adc
jmp
pop
lahf
push
in
dec
xchg
std
sbb
inc
jnp
push
ja
repnz
or
bound
leave
xor
cmp
sub
ss
jl
in
jg
scas
xchg
pop
push
fwait
and
mov
jge
cmp
mov
fcom
outs
cli
or
cmp
psrlw
hlt
xor
inc
je
and
into
bound
jp
imul
xchg
or
aam
mov
pushf
push
jno
dec
out
mov
repz
cwde
or
mov
push
call
aam
mov
mov
fucompp
loope
in
loopne
aad
scas
shl
jmp
test
xor
test
mov
adc
sub
push
shr
cmp
mov
xor
pop
pop
stc
sahf
repz
pop
ror
sbb
xchg
dec
sti
mov
dec
xchg
pop
mov
xor
jle
push
sbb
and
shl
or
sbb
fsub
imul
pop
aad
mov
(bad)
mov
lahf
mov
sar
(bad)
je
(bad)
dec
mov
popa
push
lds
ja
test
(bad)
mov
add
add
xchg
mov
xchg
sub
call
fdiv
adc
shl
imul
cmps
mov
sti
pop
mov
adc
je
fwait
add
ja
int3
ds
mov
cmp
push
lods
sub
dec
adc
iret
in
cwde
ficomp
dec
mov
out
enter
xor
daa
cmps
sub
xchg
push
xor
push
pop
xchg
xor
daa
fnstsw
ds
sub
xchg
ss
jmp
lods
(bad)
sbb
lods
sbb
ret
ins
fst
cmp
int
and
adc
call
in
push
jmp
test
shr
fiadd
push
je
clc
sub
lahf
cwde
push
shl
xlat
rcr
or
in
jecxz
jns
mov
push
inc
lock
xchg
add
mov
das
xlat
dec
jmp
hlt
ja
fadd
mov
mov
push
and
scas
dec
push
adc
enter
jae
stos
mov
push
and
je
pop
stc
fst
lods
mov
mov
push
cmp
jl
mov
mov
retf
cs
xchg
push
sbb
popf
int3
or
xchg
mov
or
dec
jnp
dec
stos
(bad)
jmp
and
loopne
addr16
frstor
js
out
test
sbb
jnp
jb
int
mov
mov
test
and
dec
mov
retf
fwait
pop
cs
lods
pop
cmp
xor
cdq
jbe
es
lds
sahf
loop
jne
pop
pusha
fstp
(bad)
or
cli
ret
jecxz
stos
mov
leave
mov
in
push
jo
sbb
out
jb
pop
xor
mov
cmp
cmp
xlat
mov
inc
fwait
push
icebp
ret
push
sub
jge
mov
mov
sub
jmp
jmp
jo
mov
jge
push
sbb
scas
pop
add
mov
test
mov
scas
push
push
nop
mov
daa
sbb
cmps
sbb
leave
sbb
div
mov
jmp
loopne
xchg
xchg
add
or
popf
lods
xor
mov
addr16
(bad)
jg
(bad)
out
mov
push
and
ins
into
cmp
or
stos
sbb
outs
jo
sti
cmp
test
and
test
sub
nop
jnp
sbb
stos
mov
pop
adc
leave
aad
mov
jmp
pop
adc
dec
aaa
xlat
mov
test
jl
push
in
cmps
push
push
push
sub
sbb
or
sbb
enter
pop
fiadd
jne
mov
shl
push
mov
mov
push
xchg
and
test
or
test
mov
push
mov
imul
mov
mov
arpl
jnp
js
xchg
test
add
icebp
inc
mov
fidiv
pop
(bad)
repz
and
xor
out
mov
xor
cmps
and
jmp
push
or
xchg
out
cmp
inc
mov
cmp
pusha
(bad)
add
push
mov
mov
or
int3
jns
add
sti
neg
add
shl
dec
push
or
sbb
add
and
and
rol
aam
scas
ror
mov
mov
imul
mov
xchg
mov
lock
cwde
out
dec
dec
pusha
das
in
ja
and
cmp
xchg
pop
pop
aam
(bad)
xor
xchg
lds
add
sbb
mov
cmp
mov
sub
gs
push
add
sub
shl
sbb
mov
push
mov
cld
mov
repz
(bad)
ja
cmp
pop
movs
inc
mov
nop
fs
scas
adc
ja
cmp
pop
or
pop
inc
mov
rcl
or
mov
pop
jo
xlat
pop
sahf
xchg
out
fmulp
cmp
sub
dec
gs
jge
sub
adc
inc
mov
jnp
xchg
out
je
sbb
leave
aas
jmp
retf
jmp
dec
or
das
fiadd
jge
and
and
fdivr
and
loope
int
sub
outs
mov
scas
fmul
scas
mov
icebp
test
mov
rcl
shr
xchg
mov
sbb
(bad)
push
arpl
mov
inc
xchg
jge
outs
mov
xchg
dec
push
push
push
cmp
xchg
pop
fnsave
pop
hlt
push
mov
mov
or
sti
cmps
cmps
mov
ror
pop
fs
mov
jne
ins
and
(bad)
and
data16
push
adc
(bad)
and
pop
jbe
popa
sbb
loope
jo
cmps
out
pop
les
jecxz
cmc
adc
jo
sbb
push
fcom
jecxz
lock
jg
aas
cmp
scas
movs
rcr
add
or
ficom
outs
push
aad
inc
cmp
(bad)
shr
clc
add
jmp
test
sti
or
sbb
sahf
pop
jmp
inc
sbb
or
mov
or
mov
xchg
mov
lahf
pop
jo
std
stc
daa
add
aas
cli
adc
mov
in
popf
stos
adc
pop
aad
pop
(bad)
jns
call
mov
sub
jmp
movs
sbb
add
mov
lock
fs
xchg
jnp
mov
call
pop
outs
in
clc
cdq
pop
mov
cmp
sub
aad
pop
popa
dec
xor
int
mov
(bad)
stos
add
in
cs
jmp
push
xchg
mov
das
icebp
push
sti
iret
or
cwde
jae
add
mov
mov
mov
shr
rol
sbb
popa
push
dec
scas
scas
movs
idiv
xlat
clc
(bad)
jle
scas
jb
stos
xchg
stos
and
ja
mov
xor
cmp
gs
mov
pop
andps
dec
test
push
rcl
sub
(bad)
and
sbb
ret
dec
cmp
cmp
mov
and
xor
iret
lock
dec
rol
call
jmp
xlat
push
scas
stc
mov
jmp
ret
in
ja
sbb
dec
inc
mov
shl
inc
and
sub
dec
xor
mov
retf
faddp
fwait
pop
sub
push
test
mov
loopne
popf
aaa
scas
fnsave
outs
nop
sub
in
adc
fldcw
pop
sub
fsubr
ret
xchg
and
jge
sub
push
xchg
push
adc
adc
in
or
and
mov
sar
add
lahf
dec
xchg
mov
add
not
dec
dec
push
mov
or
in
lods
dec
adc
cmp
je
shl
out
sbb
pop
push
fs
(bad)
dec
int
in
fcomip
push
dec
dec
pop
gs
mov
ror
fsub
ret
pop
jns
pop
pop
pop
loopne
mov
imul
lods
mov
int
or
dec
leave
mov
lock
dec
imul
push
cli
shl
pop
fld
xor
mov
fistp
jbe
repz
adc
outs
je
loope
call
push
repz
test
xchg
cld
in
fcom
adc
fsubr
clc
aam
movs
lock
shl
data16
sub
aaa
add
jge
out
or
pop
psrlq
push
inc
div
xchg
rol
jmp
test
jno
mov
dec
ss
cwde
adc
jmp
lods
add
add
xchg
aad
(bad)
iret
xchg
movq
div
xchg
sahf
scas
mov
ret
adc
mov
pop
inc
push
inc
add
or
mov
and
jne
enter
jg
mov
sbb
add
and
lods
lods
jae
and
push
pop
fs
add
xor
inc
push
sub
mov
and
movs
add
pop
std
(bad)
adc
xchg
add
es
out
jp
add
inc
inc
scas
fcomp
push
imul
cli
aad
mov
je
(bad)
call
fimul
push
jne
adc
jbe
ds
shl
mov
push
fwait
mov
cmps
nop
out
shl
int
cdq
dec
pop
or
mov
iret
in
cs
xlat
cmc
arpl
repz
mov
out
shl
fbld
xchg
das
push
leave
(bad)
add
into
pop
sub
(bad)
daa
das
adc
sbb
mov
mov
bound
subps
out
lods
sub
sbb
mov
mov
xor
sub
dec
sbb
ret
ss
mov
xchg
pop
xor
or
sbb
ins
mov
(bad)
sar
mov
lods
lods
loope
jecxz
push
ja
mov
lea
and
push
xchg
aas
imul
jnp
cmp
pop
(bad)
lea
adc
cmps
sub
pop
popa
mov
push
and
movs
(bad)
fwait
imul
adc
dec
dec
or
repz
rol
xor
cmp
int
jns
add
cmp
push
aad
int3
popf
and
add
fs
es
push
repz
mov
nop
popa
push
(bad)
push
cwde
adc
(bad)
jecxz
inc
add
call
(bad)
or
cmp
dec
ss
aas
push
neg
xor
aaa
fidivr
inc
add
ins
push
aas
add
mov
xlat
inc
retf
dec
call
ret
push
xchg
(bad)
cmps
js
aam
dec
push
jno
fdivr
sbb
add
xchg
add
mov
mov
adc
mov
cmp
or
dec
jmp
(bad)
std
nop
fimul
dec
adc
mov
mov
inc
aas
inc
mov
and
xchg
test
mov
push
popa
pushf
bsr
cld
aad
pop
(bad)
pop
enter
f2xm1
xor
mov
cdq
mov
push
jbe
repz
movs
fstp
sub
cmp
and
mov
xchg
cmps
ja
in
fistp
outs
fwait
(bad)
mov
movs
imul
icebp
or
jbe
and
lock
push
dec
push
dec
in
ss
ret
inc
cmp
and
nop
adc
jnp
push
sub
pusha
mov
pop
mov
cmp
mov
in
mov
mov
outs
out
xor
into
cmp
cdq
dec
sbb
loope
mov
pop
js
pop
pop
clc
push
movs
jl
fidivr
xchg
fucomp
push
fs
fcomp
popa
xor
lea
cs
stc
mov
outs
and
push
icebp
(bad)
ins
fnstenv
adc
aam
retf
in
sub
scas
push
push
add
xchg
adc
aas
fisubr
jecxz
add
fs
(bad)
scas
js
xor
pop
xor
mov
cs
xor
mov
popa
jecxz
loope
neg
nop
mov
jg
jg
aam
stos
ins
xor
sbb
outs
lea
pusha
pop
das
and
das
loop
int3
or
sub
jecxz
sti
fistp
sub
js
mov
rcr
test
sti
loope
push
iret
adc
add
shl
retf
neg
xchg
fcmovnu
adc
push
push
(bad)
lods
movs
jb
fnstenv
adc
pushf
mov
mov
retf
cmc
push
out
xchg
inc
pushf
mov
movs
jnp
jno
inc
data16
retf
mov
scas
inc
dec
push
out
ja
mov
inc
jno
rcr
adc
cwde
dec
stos
addr16
or
mov
or
add
cmp
addr16
fsub
inc
ins
xor
cmp
xor
js
dec
fisubr
xchg
or
inc
lock
test
jb
add
push
mov
xlat
arpl
push
jmp
(bad)
and
or
int3
mov
rcr
pop
pop
jbe
iret
and
add
icebp
pop
cmp
inc
imul
test
mov
xchg
imul
scas
lds
call
add
mov
mov
sahf
jle
call
xor
rol
add
arpl
cmp
cmp
fidivr
out
mov
sbb
imul
inc
es
inc
sbb
dec
mov
fcom
lock
mov
add
inc
xor
jnp
xchg
(bad)
cmp
imul
pop
shl
fidiv
inc
scas
cmp
sub
push
inc
pop
xchg
lock
ss
bnd
mov
mov
jmp
mov
lea
mov
shr
rcl
adc
xchg
jecxz
inc
pop
xor
mov
cmp
fcomp
mov
scas
outs
and
pop
daa
inc
fist
in
sub
aad
jmp
inc
dec
mov
fwait
mov
out
popa
cmc
pop
add
inc
pop
mov
or
inc
jo
mov
mov
sub
adc
retf
inc
xchg
jmp
or
xor
inc
pop
call
pop
xor
inc
(bad)
out
mov
adc
fistp
and
and
jno
pop
test
jmp
int
outs
mov
jge
cmp
inc
or
xchg
fs
adc
push
xor
sbb
mov
fmul
lods
shl
or
rcl
push
in
fsubr
adc
bound
add
sub
mov
lock
cdq
imul
or
jo
add
pop
adc
jmp
out
pop
loope
mov
setae
sbb
addr16
push
inc
(bad)
lea
sub
daa
adc
or
or
sti
mov
cs
add
xor
mov
pushf
push
in
int
mov
adc
daa
pop
shl
int
push
retf
mov
push
(bad)
sbb
xor
mov
jnp
jae
sbb
or
xor
xor
push
push
cmp
cwde
popa
iret
mov
xor
jge
arpl
or
das
retf
clc
add
xchg
push
mov
xlat
es
dec
push
cmp
movs
lods
in
aas
xchg
jecxz
or
jbe
push
dec
add
mov
push
jle
adc
ins
cdq
imul
or
mov
cmp
fcomp
dec
xchg
pop
jecxz
enter
fist
adc
mov
jo
push
sub
les
or
sub
xor
cmp
retf
sub
loop
outs
inc
mov
ins
leave
jge
sub
xchg
xor
mov
pop
mov
lock
cmp
xchg
pop
rcr
(bad)
fsub
into
sahf
setle
mov
ss
repz
aad
jne
imul
add
(bad)
jno
xor
and
in
outs
mov
jb
(bad)
sar
pop
xchg
pop
jp
les
inc
outs
jecxz
cmps
cmp
mov
add
pop
jp
movs
jae
xor
repz
pop
ins
repz
sbb
daa
fwait
push
xor
out
sahf
pop
test
es
xor
sar
fld
dec
sbb
jge
popf
dec
xor
mov
add
stc
test
cmp
xchg
sbb
lahf
into
in
in
inc
enter
(bad)
lock
mov
stos
jge
sub
mov
repz
jmp
cmps
dec
enter
sub
mov
cmp
ss
sbb
call
add
movs
lea
or
push
xchg
add
and
push
jns
leave
jge
or
pushf
push
xchg
xchg
cmp
inc
sahf
loope
scas
lods
std
loope
ds
sti
je
cdq
dec
mov
in
xor
or
(bad)
push
jae
jge
pop
fisttp
xchg
(bad)
push
mov
rcl
sub
jmp
out
lds
and
scas
jbe
dec
inc
xchg
cmp
cld
xchg
ss
pop
fidiv
push
sahf
jmp
not
cmp
push
outs
jecxz
and
sub
repnz
movs
fst
sub
adc
scas
repnz
and
aad
xchg
jne
das
lds
xor
in
add
adc
(bad)
(bad)
leavew
pop
rcr
movs
push
out
in
out
repnz
repz
and
jo
mov
fimul
leave
outs
cwde
(bad)
dec
dec
adc
pop
push
add
inc
push
pop
or
xchg
adc
retf
xor
pop
cmp
out
push
fs
or
mov
add
dec
add
lea
xchg
dec
or
mov
rol
cmp
dec
call
shr
pop
and
mov
sahf
pusha
nop
mov
repz
test
xlat
jno
test
test
sbb
pushf
mov
jbe
mov
xlat
adc
cmp
cdq
icebp
retf
cdq
rcr
les
and
loop
fs
pop
add
pop
ds
mov
add
mov
in
mov
aas
in
outs
popf
mov
loopne
pop
lods
cmp
popf
xchg
push
dec
jmp
mov
(bad)
jmp
imul
mov
sti
mov
pop
(bad)
sub
shr
or
or
arpl
bound
or
cmp
movs
mov
pop
(bad)
or
bound
fistp
push
cmp
icebp
mov
push
loop
xchg
pop
cmps
cmp
push
mov
sbb
xchg
sub
shr
fwait
dec
std
cmp
xchg
fstp
sbb
mov
ins
(bad)
cdq
pop
xor
jl
push
and
call
icebp
aad
pop
push
call
xlat
sub
push
cmp
inc
(bad)
out
xor
pusha
push
idiv
es
xchg
adc
stos
popf
js
inc
sbb
push
js
jl
dec
lea
in
daa
push
(bad)
inc
xor
rcl
repz
pop
sbb
mov
std
mov
lock
lds
xchg
in
fnsave
xchg
ja
in
mov
imul
stc
scas
cld
or
test
loopne
mov
sub
xchg
or
inc
inc
inc
pop
outs
sub
jecxz
inc
jle
xor
cmp
aas
ins
adc
push
xor
clc
fimul
cmp
outs
jns
sub
push
shr
mov
xchg
gs
pop
mov
pop
push
jo
mov
mov
or
mov
imul
mov
call
or
jno
icebp
dec
mov
inc
mov
sbb
test
(bad)
mov
adc
lods
stos
pop
or
jge
or
div
(bad)
mov
inc
pop
fld
lds
cmps
mov
arpl
lds
jb
cmp
add
lds
fdiv
ss
repz
js
dec
aad
or
imul
fldl2t
pop
inc
lahf
lods
ds
push
out
int
adc
sub
jl
rcr
add
loop
and
xchg
sar
stos
fist
xor
les
push
sub
mov
xchg
into
ret
mov
(bad)
dec
inc
retf
scas
push
xor
stc
mov
mov
push
xor
mov
outs
cmp
xor
fwait
push
mov
cmp
fimul
mov
cmp
test
push
xchg
add
xor
xlat
in
jbe
xchg
push
xor
gs
retf
sub
data16
outs
pop
fstp
(bad)
aad
lea
jmp
test
pop
pop
jmp
fisttp
pavgw
out
fs
out
ss
sti
fisub
push
mov
stos
je
into
cdq
inc
push
fs
cmp
inc
sti
(bad)
mov
xchg
and
or
pop
jnp
aaa
cmc
outs
push
inc
sub
repz
or
xchg
pop
iret
rol
outs
clc
mov
or
mov
mov
pop
mov
xor
aad
(bad)
sub
cwde
test
scas
lea
xlat
sub
hlt
and
rol
fld
ficom
aaa
aas
sbb
les
xchg
sbb
popa
ret
xchg
pushf
jg
sahf
ret
sbb
imul
cs
push
mov
aas
fist
mov
call
or
std
pop
les
mov
ins
mov
outs
xor
jb
pop
fstp
mov
ds
mov
ret
daa
push
retf
inc
add
adc
adc
in
inc
push
call
rcr
std
adc
mov
jnp
dec
mov
sub
jne
dec
xor
int
shl
add
push
push
push
xchg
push
mov
jmp
out
idiv
mov
(bad)
mov
xchg
jb
push
mov
cmp
add
push
pop
fsub
push
std
sub
mov
sub
jmp
sub
jmp
pop
jg
jmp
aad
test
xor
mov
les
inc
out
mov
pop
dec
retf
lea
xchg
dec
sbb
ret
std
ret
jl
add
out
pop
cmp
out
sbb
test
outs
xchg
scas
gs
cmp
push
sub
enter
stc
push
icebp
fidivr
jmp
out
mov
adc
movs
stos
jmp
push
mov
imul
cdq
cs
stos
push
imul
pop
xchg
cmps
idiv
pop
mov
stos
jmp
cs
bnd
shl
cmp
add
bound
mov
mov
xchg
mov
jmp
pop
jle
out
cmps
inc
out
push
addr16
push
jp
adc
cdq
or
mov
ret
cmp
sbb
xchg
mov
movq
fwait
stc
cld
mov
test
dec
pop
lods
movs
(bad)
stc
enter
sbb
push
lods
xchg
fidiv
xlat
xchg
pop
sbb
inc
fcomp
dec
addr16
xchg
iret
mov
mov
jp
mov
outs
sbb
hlt
(bad)
lock
xlat
sub
sub
cmp
sub
cmp
dec
loop
fwait
push
push
pop
push
test
push
shl
fsubrp
and
repz
out
fldenv
stos
sbb
sahf
dec
mov
sbb
lock
data16
push
(bad)
popf
cli
leave
inc
loop
push
sbb
mov
cmp
into
mov
pop
sahf
pop
or
push
sub
and
repz
lock
push
movs
jbe
nop
pop
(bad)
in
or
and
es
cmc
sti
cwde
adc
test
inc
mov
jb
mov
jmp
(bad)
retf
ss
cmp
in
test
int3
add
add
test
pop
cld
call
mov
jl
aad
test
arpl
sub
dec
int3
jle
push
add
in
out
pop
jmp
mov
and
xchg
mul
and
inc
mov
cs
jle
lahf
xor
(bad)
sub
call
or
ds
call
ins
and
mov
xchg
mov
inc
jne
mov
mov
lgdtd
push
rcr
push
outs
mov
(bad)
sahf
pop
adc
mov
xchg
push
inc
xor
cmp
int
and
add
data16
inc
sbb
std
cmc
rcl
and
add
rcl
inc
(bad)
ror
ins
arpl
mov
mov
mov
mov
std
sub
push
adc
sub
imul
jns
pop
sbb
scas
jnp
inc
popa
fwait
out
int
pop
cld
dec
rcr
rcr
fcomp
jmp
sbb
push
js
pop
loopne
mov
(bad)
scas
and
and
inc
sbb
into
and
push
psadbw
push
push
or
jp
xor
mov
es
mov
lods
stc
cmps
call
cmp
cmp
sar
inc
outs
cmps
fistp
and
xor
mov
jne
add
jge
cmp
stos
mov
or
shr
(bad)
pop
ins
(bad)
retf
stc
pop
test
es
lods
ret
adc
cmp
mov
int
clc
popa
cwde
mov
(bad)
xor
stc
adc
test
sbb
pop
xor
loopne
push
mov
ins
into
in
and
movntps
jp
popf
adc
scas
test
ret
scas
in
movs
xor
out
nop
sbb
lods
sar
pop
mov
not
pop
or
mov
sbb
inc
test
in
sar
lods
cmc
mov
and
cmp
xchg
mov
lods
bound
cmc
push
or
repnz
push
jns
popa
call
out
pusha
adc
and
or
xchg
sub
push
out
jns
sbb
jmp
push
lock
gs
(bad)
out
or
fwait
loope
add
mov
mov
outs
imul
or
jg
inc
and
mov
xor
fdiv
popf
xchg
push
mov
pop
push
mov
out
(bad)
lahf
add
adc
das
mov
mov
fdiv
push
sub
mov
cs
inc
rol
out
pushf
in
popf
adc
xchg
push
cmp
mov
retf
cdq
xor
fmul
test
out
popf
mov
mov
adc
int
popa
int
imul
ja
hlt
jmp
or
ds
mov
and
and
sar
sub
ds
jp
or
sub
jmp
stos
test
dec
push
dec
mov
arpl
push
mov
out
pusha
cs
xchg
push
fdiv
dec
fstp
fstp
test
cdq
sub
xlat
test
data16
inc
lds
pop
xchg
lahf
rcl
mov
adc
add
mov
adc
imul
test
test
(bad)
mov
xlat
mov
cwde
int3
cmps
xlat
cmc
xchg
arpl
cmps
mov
add
stos
inc
dec
mov
and
dec
cwde
aas
cmp
mov
mov
ret
nop
lea
cmps
dec
push
test
mov
(bad)
or
outs
sub
push
jns
sar
sbb
test
mov
or
pop
mov
icebp
pop
not
jmp
sbb
lea
lea
push
fs
pusha
(bad)
sub
nop
xor
push
add
cmps
sub
xchg
push
add
sar
stos
outs
lods
fnstenv
dec
sbb
cwde
xchg
retf
lods
mov
push
xchg
enter
rcl
dec
add
setbe
mov
rol
je
jb
sub
hlt
mov
push
scas
cli
add
sub
shl
(bad)
mov
inc
mov
adc
scas
cs
sub
aaa
ds
xchg
mov
imul
cmp
arpl
mov
xor
mov
push
push
aam
das
cmp
mov
jns
stos
(bad)
outs
cmps
xchg
pop
test
jno
sbb
ficom
adc
outs
dec
mov
(bad)
clflush
ja
ss
pop
mov
clc
and
rcl
push
xchg
sar
js
add
or
add
mov
cwde
inc
sbb
adc
popf
xchg
hlt
sbb
repz
jecxz
mov
inc
in
jbe
mov
movs
add
or
sub
loop
imul
lods
jmp
jge
aaa
xlat
dec
call
xchg
pop
cmps
xor
cmp
rcl
shr
stc
hlt
pop
and
jl
sub
scas
xchg
in
xchg
jge
lea
sbb
mov
out
fidiv
out
dec
sbb
push
lods
xor
xchg
popf
loop
push
jp
cwde
dec
test
rol
inc
or
movs
test
inc
dec
stc
xor
in
ror
ja
jno
xchg
mov
xor
cmps
xor
ss
sbb
pushf
mov
or
jle
aas
add
push
mov
enter
sub
pop
retf
lods
jl
pop
sbb
sub
and
jne
sbb
sbb
pop
xchg
fisubr
mov
(bad)
dec
into
mov
inc
sar
inc
daa
mov
mov
je
inc
jge
aas
movs
mov
mov
lea
iret
sub
stos
lods
ss
xor
dec
(bad)
div
icebp
ins
imul
inc
inc
adc
dec
repz
mov
jb
adc
mov
push
xchg
daa
(bad)
cmps
aaa
cmp
rcr
and
iret
mov
dec
sub
adc
and
dec
cwde
xor
stos
sub
push
shr
popa
mov
jae
mov
sbb
pop
add
pop
mov
or
call
cmp
sahf
fst
inc
mov
das
cs
or
push
jmp
sub
push
ss
out
popa
cwde
mov
sbb
mov
in
or
push
pavgw
rcl
cmc
ss
or
sbb
sub
dec
push
jl
(bad)
mov
inc
pop
sub
xchg
enter
out
int3
cmps
sbb
call
push
xor
aaa
sbb
cmp
jg
(bad)
repnz
mov
(bad)
ds
aam
fsub
sbb
sub
retf
pop
and
loopne
lods
add
adc
jecxz
adc
push
jae
mov
xchg
jno
mov
lds
inc
jl
push
push
mov
repnz
not
push
leave
jns
std
(bad)
imul
(bad)
inc
cmps
jno
xor
xchg
jae
push
pop
ins
aam
mov
pop
jecxz
fcomp
cli
jo
arpl
cmp
mov
lods
dec
sar
sub
loope
or
retf
ins
pop
xchg
push
fild
xchg
or
fld
xchg
dec
das
cdq
add
mov
or
in
dec
sbb
mov
sub
pop
sbb
or
add
ja
out
pop
xor
scas
push
mov
sbb
setae
nop
lds
or
cdq
push
(bad)
rcl
int
bound
(bad)
loop
adc
std
mov
stc
mov
call
jmp
dec
xchg
jmp
cmp
and
pop
inc
movs
faddp
pop
cs
adc
movs
(bad)
aad
xchg
inc
cwde
(bad)
pushf
mov
scas
loopne
test
cmps
pop
cld
lods
out
dec
in
and
mov
test
cmp
pop
out
dec
and
fild
adc
enter
lahf
cmc
retf
pop
or
add
nop
dec
lods
pop
shr
mov
in
jmp
neg
(bad)
mov
les
push
and
xchg
xchg
add
and
adc
data16
pop
jo
(bad)
scas
cmp
xor
mul
add
dec
test
xor
mov
adc
pop
(bad)
jne
mov
mov
mov
(bad)
repnz
call
mov
inc
mov
dec
or
mov
mov
daa
div
cmc
mov
push
sub
dec
jmp
sub
mov
jg
push
xchg
gs
jo
pop
mov
fldenv
mov
jmp
adc
std
aas
mov
mov
fcmovnbe
leave
mov
mov
sbb
mov
sbb
xchg
dec
popf
call
adc
push
jp
jmp
push
xlat
leave
in
mov
jmp
stc
ret
lds
outs
mov
out
and
inc
out
daa
sbb
movs
out
pop
enter
imul
sub
xor
mov
and
cmp
jp
bound
into
mov
fcom
cmp
in
push
sar
lds
sub
imul
mov
movs
das
fld
jae
dec
addr16
jae
or
mov
jne
or
or
inc
jo
dec
dec
test
shl
(bad)
xchg
clc
(bad)
inc
mov
enter
add
(bad)
fisttp
mov
mov
jge
(bad)
stos
add
gs
mov
aam
push
and
and
outs
mov
sub
pop
cmp
add
ret
mov
sbb
cmps
dec
and
out
in
mov
ins
call
jmp
adc
hlt
int
(bad)
mov
mov
jle
aas
mov
jle
inc
pop
leave
sti
sub
push
add
push
out
xor
mov
pop
out
mov
sub
cdq
add
xchg
jo
lds
into
test
loopne
jns
mov
add
xor
test
repz
lahf
fsubr
and
data16
movs
sub
adc
(bad)
lahf
aas
scas
dec
call
inc
pop
test
cmp
movs
pop
jmp
push
push
(bad)
cmp
jb
dec
xchg
jo
(bad)
xchg
adc
mov
jo
adc
jae
test
jmp
(bad)
sub
in
scas
pop
lods
in
std
retf
fsubr
movs
add
ds
add
adc
sub
adc
mov
jmp
sbb
mov
mov
das
in
xor
adc
fdivr
push
pop
ror
fcomp
mov
mov
push
jae
and
jae
or
cmp
xchg
mov
dec
aas
leave
movs
loop
sub
sbb
mov
xor
movs
sub
fst
sbb
xchg
sub
pop
inc
(bad)
jle
mov
add
loopne
jp
mov
stos
out
std
dec
rcr
fidiv
jecxz
loope
xchg
nop
test
cmp
(bad)
out
add
inc
lahf
or
jle
stc
mov
fdiv
xlat
scas
or
das
repz
add
or
mov
pop
or
xor
ins
repnz
adc
inc
jns
xor
mov
iret
pop
dec
lock
dec
iret
pop
pop
cmps
(bad)
ficom
cmp
cmp
jg
dec
in
mov
es
stc
sbb
cli
xchg
xchg
pop
mov
lahf
add
dec
je
not
cmp
fbstp
js
outs
mov
sub
xchg
lahf
and
dec
pop
add
jno
adc
ror
inc
cdq
jns
mov
shl
ficomp
pop
mov
cmp
mov
pop
imul
sar
inc
dec
mov
mov
ret
lds
test
test
mov
movs
inc
add
pusha
pop
or
ds
xchg
mov
adc
mov
cmp
dec
xchg
out
pop
jl
gs
ins
aad
jle
mov
add
jae
jp
loop
push
rcr
pop
and
pusha
retf
mov
loop
push
popa
outs
std
test
fs
lods
jecxz
cmp
in
xor
add
jge
cdq
mov
jecxz
call
test
dec
dec
pop
xor
loopne
or
scas
sub
xlat
gs
cdq
scas
aaa
dec
rol
sub
test
and
outs
jmp
aad
pop
or
test
cmps
call
jmp
leave
mov
adc
jmp
sub
imul
add
mov
mov
push
mov
adc
out
aam
les
je
mov
ds
xchg
jmp
push
adc
in
and
ret
dec
add
mov
loop
mov
fwait
idiv
xchg
clc
sub
push
imul
arpl
sbb
aaa
pop
shl
push
and
aad
mov
jae
mov
add
cmp
repz
jno
jecxz
add
jo
adc
sbb
or
inc
jecxz
stos
rcl
fs
ds
cmp
adc
jns
mov
sbb
push
mov
test
iret
jbe
and
movs
out
repz
icebp
in
punpckldq
mov
test
jno
in
cmp
sub
iret
(bad)
hlt
test
in
cwde
int
inc
(bad)
dec
enter
xchg
(bad)
sbb
mov
jae
mov
mov
xchg
mov
sbb
cdq
psubsb
daa
inc
pop
add
fwait
mov
das
enter
popf
jg
lock
and
jg
cmp
adc
push
and
(bad)
arpl
fwait
mov
loopne
cdq
cmp
mov
stc
es
and
xor
loop
jnp
push
xchg
cli
cwde
aaa
push
iret
add
mov
push
rcr
iret
inc
or
pop
mov
std
and
cmp
mov
sbb
push
jno
push
dec
movs
mov
sub
in
mov
sbb
sti
scas
jge
popf
inc
adc
adc
mov
push
mov
mov
inc
scas
loopne
or
sub
or
test
dec
sti
outs
pop
loope
cmp
adc
push
stc
jno
out
enter
xchg
xchg
or
addr16
stc
std
shr
int3
xlat
cmp
aad
cmps
(bad)
push
stos
(bad)
rcl
std
dec
dec
cmp
pop
ror
xlat
mov
adc
fcmovne
int
mov
mov
pop
retf
push
cmp
imul
shl
adc
cmp
adc
jmp
scas
or
push
add
popa
and
jmp
out
pop
and
xchg
pushf
jae
jno
scas
jnp
xor
icebp
mov
dec
int3
(bad)
sahf
jmp
adc
test
stc
xchg
sbb
js
mov
xchg
mov
shl
and
sbb
cmp
fucomi
push
sbb
cmp
jae
xor
xlat
mov
dec
pop
scas
call
js
ret
lea
das
mov
pop
leave
inc
dec
jmp
cmp
call
fwait
shl
test
mov
test
cmp
pop
ror
scas
les
ret
ins
loope
dec
cli
ror
fidivr
add
into
fidiv
mov
cmp
or
(bad)
sbb
movs
loope
js
movs
mov
dec
imul
or
sub
iret
stos
push
(bad)
inc
ins
xlat
and
sub
in
jo
lods
inc
push
shl
xor
mov
dec
xchg
lods
arpl
out
(bad)
or
inc
jnp
cwde
sbb
or
mov
xor
out
nop
stos
ss
mov
lea
std
std
cmp
inc
adc
cdq
lods
jae
pop
sub
xchg
mov
or
bound
mov
add
xor
fadd
div
push
movs
lahf
sbb
inc
das
sbb
push
push
or
adc
retf
cdq
add
sub
mov
int
pushf
in
push
imul
add
add
and
or
sub
repnz
fcmovnu
push
inc
dec
fwait
loope
xchg
mov
cmp
mov
mov
xor
pop
enter
add
xor
jo
push
in
dec
popf
cmps
dec
prefetchw
ror
fist
xor
inc
fdivr
aaa
aaa
ret
jns
popa
mov
jecxz
push
les
div
pop
adc
adc
pop
dec
pop
outs
cmp
mov
stos
aam
sbb
mov
or
mov
repz
sub
mov
les
adc
inc
push
mov
xchg
enter
adc
and
and
leave
mov
scas
mov
mov
and
sub
sbb
lahf
jns
cmp
cwde
xor
std
pop
add
das
xchg
sbb
jnp
lods
outs
(bad)
in
imul
mov
mov
sbb
ja
xlat
inc
and
shr
fimul
adc
xchg
and
xor
iret
(bad)
jecxz
jl
iret
or
or
inc
cli
adc
push
sub
into
adc
adc
out
jecxz
addr16
mov
addr16
sbb
loop
add
and
sub
sahf
(bad)
hlt
ds
sub
pop
lods
ja
or
inc
mul
push
mov
sub
pop
inc
mov
and
jle
loopne
pop
loop
xchg
(bad)
fs
ret
jb
adc
imul
xor
inc
test
sub
call
cli
push
mov
jecxz
arpl
mov
dec
dec
mov
add
or
jae
(bad)
sti
ins
lahf
fnstcw
cmp
jb
jns
lods
(bad)
fimul
inc
stc
mov
movs
sbb
call
lods
dec
sub
push
pop
dec
inc
push
mov
mov
fwait
mov
mov
cmps
retf
rcl
cmp
jmp
pop
xchg
cmc
dec
(bad)
cmc
fadd
mov
cmp
or
imul
pop
es
inc
out
inc
push
cs
pop
mov
push
mov
div
in
push
daa
dec
je
or
repz
push
mov
inc
mov
and
and
lock
cmp
jmp
push
out
inc
nop
add
aas
out
ret
pop
cmc
fbstp
sti
test
and
adc
loopne
(bad)
mov
shl
xchg
jbe
xlat
jnp
mov
sbb
mov
cwde
ret
mov
push
sub
lods
arpl
cmp
popf
mov
lds
adc
aas
inc
cmp
lea
(bad)
mov
imul
add
imul
push
lods
sub
shl
cmp
(bad)
fst
mov
inc
fdivr
jg
nop
test
cmp
retf
cmps
pop
iret
dec
jbe
or
daa
xchg
mov
adc
mov
js
add
data16
xor
mov
rep
dec
stc
loop
lods
arpl
stos
sar
or
pop
mov
dec
mov
les
mov
stc
dec
rcl
or
sbb
inc
inc
ret
fs
cwde
fs
sbb
outs
and
xlat
test
stos
cmp
jbe
cmps
in
and
xor
retf
or
mov
add
xchg
xcrypt-ofb
cmps
imul
retf
cmp
fisttp
xlat
jecxz
or
ja
shl
mov
pop
push
in
out
and
ds
xlat
fcmovnu
fwait
sub
mov
cmp
(bad)
xchg
mov
imul
jo
fld
xchg
pop
in
stc
dec
inc
or
loopne
xor
and
popf
fbld
retf
ja
mov
xlat
loop
pop
repnz
mov
lea
jg
push
inc
shr
pop
or
pushf
leave
fisub
cwde
test
cmp
movs
mov
(bad)
(bad)
aas
mov
mov
pusha
icebp
lea
int3
sar
inc
repnz
inc
hlt
jns
data16
fbld
mov
cli
sub
mov
in
sub
fsub
clc
fwait
movs
test
iret
daa
push
push
push
fucom
aas
movs
add
test
je
mov
(bad)
not
out
in
data16
popa
mov
mov
adc
mov
scas
jle
(bad)
cli
and
push
xchg
bound
jb
(bad)
cmc
(bad)
cmps
sub
addr16
enter
addr16
mov
sbb
or
adc
and
xchg
mov
mov
pop
cmp
sub
add
push
ret
xchg
das
inc
add
sub
pop
sub
jne
fcmovne
cmp
out
in
dec
xchg
loopne
xlat
fild
sub
mov
push
adc
add
mov
and
(bad)
scas
mov
stos
ins
add
ins
loope
mov
pop
mov
xor
call
loop
mov
mov
fcmovnb
lds
sbb
inc
cmp
int3
xor
sbb
bound
adc
xchg
rcl
inc
ds
out
nop
jmp
ret
pop
add
mov
xor
inc
inc
gs
mov
je
out
pop
adc
pop
stos
push
popa
ret
arpl
into
fisub
jns
mov
mov
pop
add
fstp
sbb
jmp
or
dec
push
xchg
sub
xchg
cld
jge
xchg
mov
sub
xchg
loope
fcom
jp
or
jb
and
add
into
xchg
jnp
and
sub
xor
bound
cmp
or
fst
ret
add
mov
mov
aas
xchg
nop
inc
sub
sbb
in
out
sbb
push
pushf
mov
outs
xchg
push
ins
mov
leave
int
es
mov
and
popa
xor
inc
add
scas
outs
fldcw
imul
test
mov
xor
add
xchg
ret
out
mov
lods
xchg
out
ret
inc
mov
mov
cmc
(bad)
cmp
jno
mov
add
xchg
mov
aad
and
sub
fld
push
and
or
add
jbe
imul
xchg
mov
outs
sti
pop
jl
xor
test
pop
(bad)
cmc
xchg
sbb
add
add
clc
push
cmc
shl
scas
les
jge
into
pop
lock
out
and
mov
aaa
inc
push
cmp
push
mov
or
cli
or
mov
add
loop
shr
mov
inc
js
xchg
xor
rsm
mov
fiadd
lods
mov
xlat
outs
scas
adc
mov
mov
sbb
ret
xchg
xor
iret
dec
mov
outs
aad
push
sbb
ror
ror
(bad)
or
rol
jnp
(bad)
sub
in
mov
pusha
jb
mov
mov
aaa
pop
mov
lea
ss
push
xlat
lods
loop
mov
out
lods
es
mov
or
dec
jl
adc
mov
stos
lea
xor
and
hlt
jl
inc
jae
inc
mov
push
sbb
test
and
ret
jne
daa
(bad)
cmp
mov
mov
nop
paddusb
aaa
dec
mov
cmp
pop
xchg
icebp
(bad)
xor
neg
xchg
out
sti
movs
xchg
nop
push
lods
aaa
sbb
xor
adc
xchg
xor
pop
dec
push
and
mov
xchg
nop
sti
push
test
xchg
dec
aaa
add
sub
stos
inc
push
out
gs
or
mov
mov
xchg
mov
imul
cmp
rep
jge
es
xchg
addr16
sub
xchg
jge
retf
cli
inc
cmp
and
xor
icebp
lods
iret
xor
xor
stos
lea
cmp
jb
fistp
adc
cmps
inc
xor
dec
add
xchg
out
sub
mov
mov
call
pusha
mov
mov
push
jmp
addr16
xor
dec
outs
aas
pop
sbb
adc
mov
push
jmp
jae
adc
sub
rol
or
xchg
jbe
xchg
cmp
cmp
mov
ja
(bad)
adc
pop
cs
hlt
xor
and
jle
jmp
inc
daa
ss
pushf
xchg
jnp
test
inc
cwde
xchg
cs
outs
sbb
sub
popa
fiadd
cmp
loopne
mov
sbb
sub
push
in
stos
dec
mov
or
push
or
xchg
mov
(bad)
mov
js
mov
(bad)
xlat
std
jmp
mov
repz
adc
mov
jnp
(bad)
ins
mov
int
sub
xor
loopne
int3
fs
push
add
mov
pop
mov
arpl
jns
pop
inc
sub
cmp
jnp
sub
aad
inc
test
rcl
imul
enter
dec
sti
bound
popa
mov
fldcw
ror
int3
fst
aas
ja
cmp
xchg
mov
mov
fistp
leave
and
sub
sub
test
fwait
icebp
sti
sub
adc
jl
imul
mov
mov
mov
inc
pop
jo
mov
jbe
push
or
test
push
sti
and
sbb
ds
dec
test
enter
xchg
dec
cmp
repz
adc
aad
jl
(bad)
lock
aas
dec
gs
lea
mov
cmp
cmp
pusha
ficom
pop
stos
adc
xchg
sbb
dec
sar
cld
xchg
shl
ficomp
xor
scas
ss
cmp
jne
xor
leave
inc
or
out
mov
jns
pop
jl
inc
jge
mov
cmps
ss
js
xor
jge
add
mov
into
inc
and
out
out
in
call
pop
stos
fisubr
xor
(bad)
mov
mov
xor
in
push
push
fisub
js
pop
test
sahf
sub
mov
pop
pop
mov
lods
mov
jg
inc
pushf
call
retf
retf
leave
jle
push
mov
lock
or
jbe
test
lods
outs
add
sbb
mov
in
dec
or
cmp
push
xor
pop
push
ret
pop
sbb
and
jmp
pop
push
jnp
ror
fndisi(8087
in
push
adc
dec
punpckldq
cmp
push
jmp
jo
test
and
pop
dec
push
or
jae
inc
(bad)
mov
mov
cmp
adc
mov
xchg
mov
ret
xchg
cld
out
jbe
adc
jns
sahf
je
dec
inc
imul
push
pop
mov
cld
cmps
cmp
inc
xor
js
dec
pusha
jno
repz
movaps
sub
mov
lods
jge
push
test
test
mov
ja
dec
pop
aam
lea
xor
js
leave
pop
int
jo
call
add
inc
or
adc
pusha
or
aad
adc
movs
add
pop
sahf
jo
gs
pop
repnz
ror
retf
aad
mov
and
pop
xchg
mov
pop
or
ja
std
fst
mov
mov
lods
push
mov
sub
and
int
scas
sub
daa
mov
out
stos
and
sub
and
cdq
mov
jmp
jo
jno
pushf
and
push
retf
xchg
fisttp
xor
out
and
and
test
xchg
dec
in
mov
sbb
daa
adc
(bad)
xchg
xor
mov
sbb
mov
mov
inc
push
(bad)
fdivr
cld
ret
dec
push
test
jg
pop
adc
test
je
div
add
mul
mov
xchg
lea
dec
outs
xchg
retf
aad
icebp
mov
fisttp
ret
jmp
(bad)
sbb
cmovb
aam
sbb
sbb
lahf
push
sti
daa
add
dec
jge
inc
mov
sbb
xchg
push
into
sub
ja
pusha
xor
add
push
pop
xchg
sbb
ins
xchg
mov
or
jae
jp
retf
jecxz
jb
clc
push
into
popf
mov
push
jbe
pusha
mov
jecxz
mov
push
lods
xchg
fisttp
push
shl
pop
or
xor
lahf
cmp
push
pop
ins
and
jns
push
pop
imul
mov
and
popf
push
mov
jg
xchg
es
(bad)
jns
jo
cmps
sar
call
aaa
cmp
(bad)
out
pop
xchg
fisttp
into
sub
mov
or
sub
jg
cdq
das
or
ins
mov
shl
pop
jno
in
pop
daa
jecxz
fdivr
fisubr
data16
hlt
sahf
sbb
mov
ss
add
stc
xor
add
ja
les
(bad)
inc
outs
or
jg
in
sbb
or
repnz
es
mov
(bad)
xor
add
mov
fs
leave
mov
add
push
dec
sti
inc
and
sub
lea
cmp
ins
stos
leave
mov
cmps
scas
pop
test
and
sahf
je
jne
push
loop
sub
in
aaa
push
xor
and
stc
stc
cmp
js
(bad)
mov
in
(bad)
xchg
cmp
shl
cmp
add
jno
and
and
cmc
jo
cdq
enter
xchg
pop
or
clc
pop
jbe
lds
daa
add
test
mov
sbb
ret
repnz
pop
lock
xchg
scas
inc
jns
xor
mov
mov
sub
into
jmp
mov
mov
push
fcmovb
js
adc
aam
jmp
ins
fisttp
bound
inc
pop
jmp
enter
sub
lea
push
cli
add
xor
stos
cmp
xlat
shl
and
popf
xor
mov
ins
stos
xchg
fcom
inc
xchg
leave
xor
push
add
(bad)
cmc
shl
mov
sahf
inc
cdq
ror
sub
push
and
dec
dec
arpl
xchg
or
push
arpl
gs
out
cmc
add
enter
jne
inc
sbb
jmp
fidivr
test
xchg
jmp
imul
inc
sbb
dec
lods
enter
xchg
dec
sar
pop
add
inc
push
mov
je
xor
mov
mov
leave
aam
sbb
mov
outs
add
in
fsub
aas
loop
call
clc
dec
int3
test
in
mov
es
xor
je
add
std
jb
or
ds
inc
push
rcr
das
call
mov
(bad)
lock
cmp
mov
cld
clc
hlt
cmp
repz
(bad)
xchg
xchg
xor
neg
mov
out
adc
ins
addps
jg
mov
fcomp
xchg
inc
xchg
xlat
loope
arpl
jbe
repnz
stc
xor
mov
and
pop
dec
and
aas
push
mov
shr
popf
xchg
mov
cmps
xchg
jge
(bad)
loop
push
outs
outs
xor
dec
clc
pop
into
cli
cmp
loopne
test
cli
iret
push
lock
adc
(bad)
rcr
jnp
std
and
pop
aas
aad
movs
cld
in
ss
in
sbb
ret
xor
sbb
js
test
xchg
imul
or
pop
xchg
mov
pop
mov
fwait
repz
mov
xor
pop
das
and
sub
or
mov
ins
xchg
rcl
add
icebp
cmp
sub
add
data16
inc
div
dec
push
std
into
sub
inc
mov
movs
int
stos
dec
jp
cmc
cs
test
movs
sar
pop
or
xchg
pop
enter
sbb
xchg
iret
mov
jbe
xor
idiv
sbb
test
sbb
push
fdiv
and
jmp
scas
inc
scas
stc
push
call
std
arpl
jns
(bad)
cs
mov
out
pop
or
das
js
dec
dec
push
mov
add
retf
sub
nop
mov
ins
pop
das
push
cmp
cld
or
int3
pop
dec
imul
int3
mov
movs
add
xchg
in
pop
adc
mov
jge
call
push
pop
mov
push
jnp
add
or
gs
jle
bound
mov
push
into
ret
(bad)
bound
or
out
xchg
movs
popf
inc
dec
or
iret
dec
jae
bound
add
sbb
loopne
pop
and
push
mov
add
mov
jb
test
jecxz
jne
dec
cmp
rcl
scas
mov
lea
pop
int3
and
xchg
into
push
cmc
push
ficomp
stos
dec
stos
push
mov
and
bnd
div
push
and
daa
pop
scas
(bad)
push
xor
push
or
out
jns
fisubr
arpl
sub
aad
pop
mov
or
imul
sbb
xlat
pop
push
scas
cmp
jmp
mov
jge
jle
mov
cld
cmc
inc
pop
mov
pop
(bad)
std
repz
jecxz
push
icebp
(bad)
or
pop
fsubr
in
jge
mov
call
or
pop
loope
fs
cmps
out
and
mov
xchg
ret
jmp
sbb
mov
jae
(bad)
mov
ret
or
xor
inc
cmp
push
ret
icebp
push
int
loopne
jae
jp
leave
arpl
mov
dec
retf
repz
sub
add
test
icebp
lea
cmps
cmps
jmp
xrelease
nop
(bad)
sbb
fadd
push
mov
sub
fnstsw
mov
lahf
dec
cmp
dec
aam
mov
xor
int3
(bad)
aas
jns
cmp
dec
ret
mov
inc
or
dec
jae
ds
cmp
imul
lahf
out
push
xor
xchg
mov
clc
and
(bad)
xchg
xchg
mov
pop
mov
cdq
push
jno
sahf
push
wbinvd
pushf
add
fmul
in
in
dec
je
std
jmp
lea
test
inc
shl
loop
hlt
xor
sar
scas
or
pop
jmp
jg
bound
cmp
and
add
and
int3
pop
repnz
jmp
stc
(bad)
jno
stos
loop
aam
call
xchg
arpl
cmp
sub
mov
jo
mov
sbb
and
rol
push
jne
fst
fild
push
fs
or
daa
sub
push
aam
pop
test
cld
jne
call
jl
leave
xor
mov
cmc
fst
mov
mov
xchg
sub
xor
xchg
jecxz
add
cmp
add
adc
outs
sbb
push
adc
lock
adc
loopne
call
sti
js
dec
ja
mov
jae
movs
inc
mov
mov
dec
xor
xor
fs
inc
add
push
adc
cmpxchg
(bad)
clc
add
pop
lock
push
xchg
pop
sar
ins
mov
test
xchg
pop
inc
loope
lods
test
js
dec
dec
pushf
xor
push
adc
pop
mov
mov
xor
xchg
shl
cmp
mov
xchg
inc
pop
(bad)
jge
push
sub
call
jmp
cwde
sti
jnp
dec
addr16
repnz
xchg
push
xor
jns
xchg
fwait
xchg
and
or
mov
dec
icebp
scas
mov
jo
sti
rcl
imul
data16
movs
int3
das
jb
mov
mov
ja
xor
cli
push
retf
dec
xor
ins
push
push
hlt
add
mov
idiv
aaa
cmp
and
and
or
cwde
push
add
jg
or
stos
inc
sbb
js
push
push
xor
adc
(bad)
call
loope
leave
xchg
mov
add
or
adc
dec
inc
mov
(bad)
adc
cmc
gs
xor
fwait
mov
loope
out
mov
jl
mov
xor
jb
push
mov
dec
dec
adc
sub
adc
ds
jbe
jmp
in
call
std
push
jb
push
xchg
xchg
dec
and
and
mov
mov
mov
sbb
cmp
inc
xor
call
div
xor
leave
xor
cmp
stos
mov
nop
push
imul
inc
mov
xor
jle
pop
push
push
jnp
daa
push
sahf
out
mov
push
cmc
pop
ret
in
test
xchg
lea
adc
sbb
in
xor
fistp
imul
lea
fist
sub
out
cmp
in
fnstsw
cmp
fiadd
xor
push
inc
mov
dec
daa
mov
and
mov
scas
and
or
push
xchg
pop
and
push
cmp
ror
hlt
stos
mov
in
sbb
leave
repnz
loope
cmp
out
dec
(bad)
jmp
mul
sbb
sbb
lahf
dec
xchg
jbe
or
jmp
cmps
push
call
pavgw
arpl
(bad)
outs
jmp
fimul
out
mov
dec
dec
xchg
jae
cmp
call
add
xchg
inc
frstor
push
call
xchg
bswap
pop
jo
mov
cmp
fs
sbb
mov
lods
das
or
dec
into
xor
movs
xchg
rol
push
add
out
xchg
out
xchg
call
push
in
ficom
add
jle
clc
pop
jmp
pop
sbb
daa
cdq
mov
adc
push
punpcklbw
sub
cmp
push
inc
add
sbb
int3
mov
and
movs
je
mov
xor
pop
inc
repz
sbb
inc
cmp
es
js
test
sub
push
into
add
bound
adc
addr16
(bad)
shl
inc
(bad)
out
ds
jae
cmps
push
mov
inc
fwait
xlat
jmp
fldenv
xor
sbb
lahf
jl
cmps
mov
or
fisttp
lods
jnp
int
out
(bad)
cdq
out
aad
xor
jmp
arpl
stos
lods
movs
loop
scas
lods
pushf
clc
aam
add
cs
or
and
test
add
push
sub
adc
jo
fiadd
test
cmp
pop
jmp
add
js
xlat
jmp
sbb
sahf
sbb
add
repnz
mov
(bad)
cwde
iret
jg
aam
clc
retf
rcl
shl
or
mov
mov
mov
frstor
and
ins
xor
shl
or
xchg
mov
ins
data16
cmp
jecxz
mov
adc
add
xchg
dec
ss
pop
out
cdq
sbb
aam
dec
dec
inc
mov
inc
ins
or
mov
in
dec
jmp
das
inc
retf
or
and
xchg
popf
imul
mov
jo
stc
push
mov
sbb
into
sub
lds
add
xchg
imul
add
ins
fsub
mov
mov
pop
sbb
xchg
inc
gs
sub
sub
push
stos
or
push
push
shl
iret
fimul
fcmovne
jge
cmp
adc
mov
aad
imul
fisttp
jg
lods
out
mov
and
pop
icebp
loop
jo
jb
in
xchg
pop
inc
sub
inc
inc
xor
(bad)
sbb
and
rol
bnd
or
movs
arpl
pop
(bad)
and
inc
cwde
inc
dec
add
dec
jo
adc
pushf
in
rcl
imul
push
in
sbb
aaa
mov
pop
movs
or
(bad)
rol
les
rcl
mov
es
test
xchg
mov
sub
cdq
mov
add
push
and
adc
test
loope
nop
xor
sub
enter
inc
push
jmp
or
(bad)
fld
jl
push
mov
daa
fbld
imul
inc
cwde
xchg
xchg
pop
mov
aad
xchg
and
cmp
pop
inc
fcmovnu
hlt
xor
mov
(bad)
mov
fnstsw
lods
inc
retf
or
jno
sub
cmp
inc
icebp
retf
dec
repnz
scas
cs
in
inc
mov
mov
in
data16
add
sti
push
ret
push
jno
sub
fstp
xchg
pop
add
retf
outs
sub
cs
sbb
pop
rol
sti
xchg
dec
or
ds
push
jl
jo
lock
ss
pop
mov
or
xchg
mov
fnstsw
mov
inc
xchg
xor
(bad)
cmp
mov
push
outs
test
xchg
jbe
aas
push
ret
lahf
adc
add
xlat
(bad)
into
movs
dec
jno
jmp
enter
imul
lods
and
in
add
pop
and
in
add
cmp
jg
sbb
rcl
mov
div
jnp
mov
sbb
sbb
retf
leave
dec
add
sbb
fisttp
shr
push
cs
ins
mov
adc
jge
out
pusha
sbb
xchg
mov
adc
xchg
ret
dec
lods
mov
xchg
retf
fild
(bad)
div
int3
xor
add
test
retw
mov
xchg
(bad)
sbb
push
pushf
xchg
pop
add
ret
and
arpl
stos
aaa
pop
jle
lock
cs
sar
into
mov
dec
inc
sbb
jmp
cs
in
bound
mov
stos
jmp
jne
lods
call
pop
or
sbb
jae
in
int
and
shl
mov
sub
and
inc
fisub
mov
das
int
out
mov
icebp
aam
(bad)
(bad)
mov
aam
sbb
push
scas
add
hlt
jo
shl
push
sub
aad
lock
cs
add
scas
xchg
pusha
adc
mov
ret
xchg
and
and
xchg
retf
sti
mov
int
pop
xor
jle
in
mov
mov
out
dec
mov
paddq
paddw
adc
xor
pop
int
in
jecxz
dec
add
rol
dec
ins
jns
ins
icebp
jge
jmp
jge
cmp
mov
loope
xchg
iret
xchg
mov
xor
add
sbb
int
sub
imul
add
mov
(bad)
repnz
inc
xor
push
push
push
push
std
lahf
ret
imul
arpl
add
loop
adc
rcl
test
pop
jg
push
adc
jnp
lahf
aad
cmp
add
lods
add
adc
or
inc
jbe
outs
or
and
inc
pop
or
les
and
dec
sub
hlt
add
ss
pop
add
out
imul
cwde
and
arpl
in
aaa
fsub
inc
and
dec
or
(bad)
std
cld
and
out
es
ja
and
jecxz
mov
pop
dec
out
(bad)
dec
sub
sub
mov
inc
sbb
cmc
dec
or
cli
push
retf
stos
in
(bad)
cmp
mov
fstp
gs
lahf
cmps
in
into
or
add
inc
(bad)
pop
shl
retf
mov
or
add
pop
jae
scas
icebp
xor
test
fidivr
mov
add
and
ds
stos
sub
jne
pop
jbe
mov
lahf
test
add
iret
ret
cmp
adc
cmp
xchg
jl
(bad)
xchg
std
cdq
popa
sub
shl
inc
repz
lahf
push
and
xor
mov
in
pop
adc
push
dec
xor
outs
inc
icebp
fnstcw
loopne
in
adc
std
pusha
fdiv
dec
cmc
and
shl
les
cmp
mov
stos
cmp
test
xchg
clc
and
pop
idiv
and
xlat
js
popa
(bad)
test
enter
out
(bad)
and
mov
mov
enter
dec
mov
icebp
fstp
retf
mov
sub
cdq
pushf
outs
dec
push
push
and
dec
rol
adc
outs
sub
adc
outs
jnp
push
mov
xchg
add
out
inc
daa
ja
outs
jl
mov
xor
push
mov
add
test
mov
jae
scas
dec
mov
push
cmp
inc
pop
jmp
mov
sub
call
and
xor
sbb
mov
mov
jmp
jb
pop
(bad)
jmp
test
cmp
sbb
sbb
jae
dec
xchg
adc
xlat
mov
in
mov
inc
fs
add
pushf
mov
mov
test
adc
jns
gs
(bad)
push
out
stc
jb
push
mov
(bad)
dec
loopne
ins
push
cs
push
xor
jmp
int
imul
mov
hlt
jg
test
(bad)
in
push
cmp
mov
or
call
imul
retf
mov
test
mov
push
xchg
push
and
push
fldpi
mov
ins
repz
cmp
ins
imul
loop
sub
popf
push
mov
dec
xor
cmp
cmp
dec
ficom
outs
adc
jl
int
ins
xchg
fwait
mov
loope
cmp
movs
test
push
jecxz
dec
rcl
pop
call
lods
pop
shl
in
not
lock
push
(bad)
popf
xchg
mov
or
sub
xlat
bound
jae
(bad)
cmc
jne
mov
xchg
fcomp
fcomp
fadd
sub
retf
sub
daa
push
ret
leave
test
sub
xchg
jno
int
sbb
mov
and
scas
adc
cmps
aaa
jo
xchg
fiadd
cs
je
cmp
dec
mov
or
dec
ja
sbb
imul
arpl
jmp
stos
std
loop
mov
mov
pop
nop
cmp
cli
cmp
xchg
arpl
pop
ins
push
or
mov
dec
push
mov
mov
shr
sbb
test
jne
ret
dec
xlat
pushf
cmps
sahf
xchg
cdq
aaa
lds
jnp
inc
lea
shr
movs
scas
and
mov
and
not
mov
adc
pop
xor
mov
fimul
mul
cs
shr
imul
cmp
xchg
pop
jge
xchg
out
push
xchg
repnz
ins
sub
xchg
jae
in
enter
pop
adc
(bad)
lea
pusha
pop
cld
adc
je
fild
xor
shr
or
mov
and
and
push
mov
jb
idiv
aas
xor
repz
pop
sbb
dec
sub
popf
in
cwde
mov
int
sar
fs
loop
adc
popf
je
push
scas
pop
mov
stos
jno
mov
and
push
rcr
cmps
movs
rcl
xor
dec
and
loopne
push
dec
and
xchg
sub
jb
sbb
cmp
(bad)
movs
fisubr
mov
xlat
cmps
out
call
xor
(bad)
sub
sbb
jae
in
scas
mov
mov
fistp
mov
cmp
or
mov
out
cmp
push
int
dec
in
mov
mov
fisub
push
enter
cmp
ret
inc
mov
xlat
popa
icebp
adc
xchg
mov
jnp
and
movs
push
jnp
or
pop
sbb
and
mov
sbb
jnp
sub
jl
add
addr16
and
push
pop
jo
mov
jl
cmp
xor
repz
mov
add
xchg
ins
test
and
icebp
adc
test
xchg
mov
fist
mov
xchg
dec
nop
fadd
out
jecxz
punpckhwd
ret
fdiv
out
mov
ficomp
jne
or
aam
adc
xor
bound
mov
jae
push
popa
dec
xabort
jmp
out
jne
gs
adc
fild
push
sub
lahf
cmp
mov
mov
jmp
sub
loop
int3
ss
bound
in
(bad)
mov
test
xor
and
xor
movs
xchg
scas
mov
mov
jbe
jbe
pushf
lock
mov
cmc
mov
pop
je
mov
or
pop
adc
adc
dec
pop
pop
xor
movs
xlat
jo
movs
pop
jl
stos
mov
retf
dec
jnp
jle
jg
inc
xor
mov
out
mov
mov
xchg
les
cmp
stc
retf
or
mov
test
add
jns
jmp
pop
xchg
inc
add
stos
ret
or
fiadd
fiadd
add
inc
imul
pop
aaa
mov
or
nop
(bad)
imul
repnz
movs
test
loop
mov
enter
adc
cmc
mov
inc
xor
sbb
or
sahf
cld
dec
xchg
mov
movs
sbb
adc
and
hlt
cmp
pop
inc
pop
mov
vpmulhuw
xor
out
retf
imul
std
xor
dec
mov
push
jmp
leave
ins
sahf
jns
sbb
scas
clc
arpl
jg
add
jnp
idiv
dec
std
loope
nop
push
mul
out
movs
inc
sub
hlt
push
ror
xchg
mov
mov
add
mov
test
shl
push
mov
adc
ins
mov
out
mov
idiv
mov
xor
cmp
clc
stos
inc
outs
mov
inc
mov
push
mov
loope
push
nop
xor
and
jnp
push
stos
popf
push
sti
cld
sar
xchg
fwait
sub
stc
test
cmp
lods
test
mov
sub
pop
cmps
inc
ror
arpl
test
les
aas
inc
sar
mov
into
mov
inc
pcmpeqd
mov
jmp
outs
sti
sub
retf
and
add
dec
ds
ss
test
movs
ins
xor
js
es
loope
cmp
ins
add
xchg
sar
(bad)
sbb
fucom
push
cmp
and
ss
int3
stc
sub
push
pop
push
aam
xor
cdq
je
pop
dec
imul
div
inc
icebp
pop
mov
xor
aam
aam
xchg
jmp
push
jae
xchg
ficomp
xchg
xor
adc
fst
mov
add
popa
(bad)
mov
(bad)
push
cld
dec
and
call
lds
test
xchg
or
mov
(bad)
mov
or
sub
in
sbb
aaa
(bad)
pop
jns
in
in
iret
mov
add
fcmovbe
popa
dec
scas
xor
jno
(bad)
mov
mov
sbb
dec
popf
loope
sub
(bad)
mov
pop
mov
mov
cmp
nop
adc
in
mov
fnstcw
cmps
dec
ja
std
sub
loope
sub
aaa
movs
loope
(bad)
mov
sub
in
nop
sub
(bad)
add
in
lds
call
mov
enter
xor
call
stc
(bad)
pop
pop
push
xchg
add
cld
dec
shl
jmp
daa
sbb
cmp
mov
jmp
adc
and
rol
out
jbe
mov
mov
ret
and
mov
leave
or
push
adc
rol
inc
push
scas
sbb
push
jg
scas
jg
imul
xchg
scas
and
jne
out
lea
inc
adc
imul
imul
cmp
std
in
xchg
repnz
ins
into
daa
cmp
jg
test
ins
push
addr16
mov
cwde
sbb
in
das
mov
rcr
jo
loopne
sub
mov
add
vmwrite
es
clc
xchg
aas
xchg
cwde
mov
fdivr
add
push
(bad)
(bad)
jmp
ret
pop
inc
out
and
out
(bad)
int3
xor
mov
icebp
jbe
std
(bad)
jecxz
idiv
into
jecxz
fcomi
fiadd
retf
inc
or
cdq
pop
popa
adc
inc
sbb
scas
dec
and
les
fldcw
es
jns
enter
xor
sub
or
lock
mov
fild
push
mov
sub
shl
adc
pop
xor
adc
or
cmps
pop
das
mov
cli
cs
sbb
xor
and
call
cmp
add
sub
stos
sub
jmp
test
jb
dec
scas
cli
add
mov
fisub
test
adc
mov
out
jp
loopne
mov
sub
ja
(bad)
adc
test
nop
or
and
sbb
pusha
cwde
xor
jbe
icebp
ja
pop
inc
mov
scas
ret
fld
imul
or
cmc
mov
clc
pop
fldenv
mov
or
pop
dec
dec
push
in
(bad)
xor
mov
pop
fsubrp
fsub
xchg
inc
pop
daa
inc
pushf
cld
aas
lods
leave
in
inc
cld
pop
jmp
adc
es
jns
pop
mov
sti
imul
adc
mov
pop
mov
test
fld
sahf
iret
sub
or
cmc
and
lods
adc
push
jo
out
call
push
fscale
pop
xor
dec
aaa
aad
push
sub
mov
out
dec
mov
dec
and
pop
jo
mov
cmp
sub
jne
mov
sbb
mov
ret
or
push
out
(bad)
int
idiv
not
cs
icebp
sbb
inc
sar
mov
iret
test
pop
mov
lock
push
test
loope
mov
leave
xor
bt
sbb
int
test
xor
mov
or
mov
pop
inc
push
adc
call
lahf
aaa
jb
(bad)
es
add
mov
cmp
inc
mov
gs
rcr
jno
jbe
out
call
fwait
ret
xor
mov
stc
lea
dec
sbb
(bad)
fidivr
jno
loope
xor
xor
lds
adc
cmp
push
jle
cmp
ds
lea
mov
add
mov
shl
jg
mov
call
push
jo
dec
inc
jl
dec
loopne
jnp
sahf
add
movs
sbb
xchg
outs
mov
(bad)
hlt
push
shr
mov
xchg
jmp
jno
and
mov
loopne
sub
push
adc
mov
and
cmps
into
pusha
nop
cs
mov
out
pushf
mov
fs
fwait
xchg
push
jmp
outs
and
push
add
cs
add
push
and
pop
add
and
jmp
sub
(bad)
dec
ja
jbe
inc
cmp
cwde
mov
arpl
inc
dec
nop
movs
movs
sbb
cmp
inc
call
shl
pop
mov
into
pop
push
es
loope
jmp
addr16
cmps
movs
or
inc
ins
cmp
jbe
add
jge
nop
cmp
jbe
fdiv
pop
and
mov
or
sbb
fdecstp
dec
or
nop
sub
dec
clc
and
cs
and
inc
das
movs
mov
jg
out
push
jo
shr
mov
ss
sbb
adc
sub
jmp
test
sbb
push
xchg
push
xchg
sub
lods
enter
add
mov
imul
mov
lahf
xor
ins
lods
mov
mov
mov
mov
push
fbstp
pop
imul
(bad)
cmp
int
daa
pop
push
test
mov
fisub
or
les
adc
pop
pop
push
dec
cmp
mov
es
xchg
jbe
push
fidiv
mov
test
push
dec
imul
lock
rol
repz
repz
push
mov
sbb
fimul
cwde
xor
cmp
pop
pop
sub
pop
pusha
mov
loope
cmc
hlt
sub
mov
mov
inc
scas
nop
mov
add
adc
dec
(bad)
jnp
gs
pop
mov
push
mov
hlt
cmp
xor
rol
push
popf
ja
sahf
cmp
fidivr
xchg
mov
xchg
int3
mov
pop
dec
push
xchg
imul
jns
stos
inc
cmp
and
mov
fs
and
cmp
loopne
mov
dec
jmp
retf
xchg
test
push
push
fmul
or
and
ins
pop
cmps
xlat
mov
icebp
xchg
inc
fisttp
mov
stos
cld
sahf
imul
sub
dec
mov
jns
rcr
into
sub
fyl2x
retf
rol
cmc
dec
call
idiv
shl
aad
add
push
mov
pushf
cld
call
xchg
les
cmp
sbb
add
fld
push
lods
in
imul
std
mov
lods
add
test
sbb
retf
mov
fmul
call
out
test
and
push
(bad)
lock
pop
(bad)
push
inc
(bad)
mov
xlat
pop
push
fwait
mov
pusha
std
jno
das
mov
xchg
(bad)
(bad)
(bad)
jge
and
mov
enter
or
ret
ja
sub
cmp
or
push
jbe
mov
adc
jnp
sub
cdq
push
movs
mov
cmp
jmp
arpl
jge
ins
mov
lea
in
sbb
rcr
pop
je
mov
es
cmp
fsubr
cld
pushf
ror
add
sbb
xor
ins
mov
fidivr
iret
dec
cmp
fisub
push
out
xchg
shr
sub
imul
scas
pop
sbb
adc
jns
sar
sbb
cmp
push
js
aaa
jmp
mov
adc
add
xor
and
mov
retf
test
lods
(bad)
add
sbb
push
mov
into
jge
ror
jne
push
std
cwde
aaa
in
outs
out
sbb
test
in
in
(bad)
xlat
push
or
adc
xchg
nop
pop
mov
loop
mov
jmp
ja
and
sbb
sub
mov
or
loop
enter
or
icebp
mov
add
sub
xchg
mov
cli
sub
(bad)
mov
bound
xchg
dec
es
cmp
pop
cs
sub
mov
fsubr
bound
cmp
test
adc
add
es
mov
mov
ds
jbe
es
xor
fst
add
push
call
pmaddwd
xchg
ficomp
bound
xor
(bad)
in
popf
jp
in
jl
retf
(bad)
(bad)
scas
push
daa
(bad)
or
cmps
dec
(bad)
or
pop
sbb
retf
ficom
retf
mov
loopne
xchg
sub
jle
xor
xor
arpl
aaa
pavgw
cmp
inc
dec
push
and
pop
sahf
or
inc
lock
aas
data16
dec
call
into
jne
pop
sub
mov
lock
dec
loopne
scas
cmp
inc
leave
mov
das
and
xchg
or
mov
fisttp
(bad)
rol
ret
sahf
div
(bad)
mov
inc
movs
sub
inc
loop
pop
jmp
and
(bad)
lods
shl
std
mov
dec
mov
mov
cmp
sub
cmp
push
inc
jae
jbe
ds
mov
(bad)
push
jge
fsubr
mov
ret
add
mov
mov
cmp
pushf
or
ja
stos
mov
js
pop
push
push
(bad)
jno
test
fcmovb
pop
xchg
loope
ins
in
das
xchg
imul
inc
pop
jl
mov
add
ficomp
es
imul
test
push
fcomp
and
int
aam
popf
or
mov
pop
sub
aam
mov
pop
nop
in
shl
dec
pop
nop
push
mov
addr16
pushf
stos
dec
icebp
jp
mov
pop
push
aaa
jns
(bad)
call
mov
push
js
aaa
(bad)
fsub
fsin
retf
jge
add
jle
jecxz
data16
stos
fcom
cmovp
xchg
dec
jbe
(bad)
lods
inc
sbb
out
inc
mov
mov
and
jmp
xlat
jne
out
inc
push
cmp
mov
in
call
xrelease
icebp
mov
call
and
mov
popa
sub
mov
sub
ins
or
sbb
mov
cmps
stos
pop
shr
call
test
xchg
push
mov
and
daa
xchg
out
mov
dec
je
push
jb
(bad)
sub
pop
ss
mov
retf
fld
out
sbb
out
jl
fisttp
jnp
adc
push
cmp
or
and
ins
add
sub
cmp
movs
xor
mov
mov
lds
pop
pop
enter
pop
pop
out
ss
dec
jno
lods
sub
jne
xlat
push
popf
in
inc
pop
push
sbb
cmp
sub
sbb
and
jl
stos
push
mov
out
out
fs
mov
outs
push
rcr
and
dec
xchg
jmp
int
pushw
push
jne
inc
push
imul
imul
add
je
and
fstp
push
imul
xchg
push
(bad)
scas
test
push
sbb
mov
imul
inc
stos
and
imul
bound
lahf
pop
pusha
test
aad
mov
mov
pop
jl
mov
(bad)
outs
mov
xchg
arpl
mov
mul
(bad)
(bad)
(bad)
pop
xchg
xchg
int
nop
push
dec
outs
jno
dec
je
mov
jb
cwde
jmp
fisub
(bad)
fld
add
inc
jl
retf
mov
cmp
push
mov
and
adc
dec
sbb
lds
adc
fstp
pop
in
addr16
ret
inc
xchg
out
pop
or
and
mov
xchg
pop
adc
shr
pop
add
push
lock
jl
test
hlt
mov
xchg
push
pop
outs
or
sbb
clc
lock
and
xchg
jo
mov
dec
mov
jg
dec
daa
ds
cmp
ficom
fwait
std
or
stos
xchg
fs
inc
sbb
pop
or
lods
mov
mov
cld
je
jmp
and
sub
(bad)
jl
fcomp
jl
das
jne
push
push
call
sbb
adc
push
mov
inc
xchg
xchg
addr16
aas
cmps
mov
iret
mov
popa
sbb
inc
xor
adc
push
mov
mov
lds
or
pop
hlt
arpl
mov
ret
adc
das
inc
aad
ds
inc
xor
inc
inc
hlt
call
scas
test
mov
movs
retf
es
or
call
frndint
jae
rcr
fsub
test
add
add
out
inc
loopne
mov
arpl
cli
mov
addr16
jnp
add
mov
dec
ret
sub
add
ja
or
adc
call
jge
movs
and
mov
ds
movs
push
mov
cmp
xor
push
lds
(bad)
push
adc
(bad)
jnp
pop
retf
stos
dec
pop
movs
movs
adc
fistp
scas
mov
sub
mov
leave
xlat
jg
loop
jg
add
ins
test
popf
js
cmp
or
sbb
cli
pop
ror
(bad)
jo
shl
jbe
in
in
fsubr
inc
cmp
ret
cmp
outs
xchg
add
jmp
jp
mov
inc
mov
push
and
and
xchg
push
addr16
jmp
ds
mov
test
cmps
jae
sub
mov
lods
in
push
cmc
push
imul
dec
cli
adc
cld
out
or
js
pop
jno
mov
jns
loopne
aad
and
out
jo
dec
mov
sub
(bad)
fmul
jge
jbe
lahf
add
mov
(bad)
stos
arpl
jb
loopne
pop
xchg
sub
(bad)
mov
mov
repz
mov
add
push
push
aas
dec
push
jno
xchg
mov
pop
in
sub
iret
rcl
mov
loop
cmp
sub
mov
imul
(bad)
into
cld
int
jnp
lahf
mov
add
cdq
sbb
aad
pushf
out
mov
xor
adc
sub
and
xchg
inc
xchg
out
fisttp
and
in
call
in
push
add
xor
shl
adc
out
cmp
data16
cwde
icebp
or
mov
and
lods
out
mov
call
xor
dec
cmp
sti
xchg
cli
outs
call
lea
fld
xor
loope
xchg
or
mov
mov
dec
arpl
pop
cdq
dec
or
inc
xlat
cld
mov
jo
out
xor
xchg
and
into
(bad)
in
int3
or
pop
into
fwait
xchg
and
arpl
sbb
lods
movs
(bad)
add
sbb
pop
das
retf
das
xchg
or
call
push
fbstp
jmp
pop
adc
cmp
cmp
outs
cmp
or
jg
mov
mov
out
jle
call
clc
psubsb
fwait
pop
push
test
nop
xchg
xchg
add
dec
mov
test
mov
jle
sti
jo
dec
hlt
fsub
lea
aas
in
push
stos
mov
xchg
cmps
in
jle
scas
xchg
mov
popa
add
push
jp
(bad)
out
mov
aas
mov
jecxz
rcl
or
clc
pop
aam
into
lods
jae
add
add
popa
adc
loope
call
cmp
or
cli
mov
or
pop
pop
add
adc
mov
aaa
popa
inc
scas
rcl
mov
daa
neg
dec
mov
jg
mov
jp
pushf
push
shl
jae
shl
mov
push
xchg
add
stos
leave
mov
enter
push
inc
and
push
lods
gs
call
add
adc
movs
loopne
(bad)
cmp
xchg
js
pop
addr16
mov
pop
fisubr
sbb
mov
mov
test
ja
ret
pushf
js
div
xor
dec
mov
popf
daa
or
ds
add
shl
cmp
call
lods
pop
sub
push
dec
xchg
add
sub
and
outs
arpl
adc
(bad)
outs
xchg
and
call
jle
jbe
push
push
mov
or
dec
dec
add
mov
shr
int
xor
mov
fcomp
xor
mov
push
xchg
mov
and
js
dec
cmp
rol
push
adc
call
pop
push
cmps
das
bound
movs
out
sbb
add
aam
mul
lea
lods
push
sbb
sbb
pop
es
ins
pop
out
mov
xlat
adc
leave
or
aam
mov
xor
sbb
xchg
cmp
or
push
mov
xor
les
add
pop
or
inc
add
into
mov
or
push
clc
push
inc
inc
nop
(bad)
adc
xchg
dec
fs
movs
out
and
jnp
lock
cmp
int
(bad)
pop
push
int3
daa
fdivr
das
test
xor
stos
and
scas
xor
ja
pop
sbb
loop
or
loope
imul
adc
inc
sub
xchg
cwde
add
sahf
fadd
dec
scas
pop
data16
xchg
mov
popf
xchg
dec
retf
mov
aas
dec
sbb
imul
xchg
push
adc
mov
ss
inc
jle
retf
dec
xchg
pop
call
imul
nop
pop
arpl
test
outs
mov
push
mov
out
cdq
leave
dec
push
pop
jnp
movs
rol
mov
pop
data16
cmp
lahf
sar
ss
lea
push
enter
jno
sub
shl
leave
dec
jne
jnp
xchg
xchg
adc
jne
sbb
retf
xchg
movs
pop
sbb
xchg
cld
or
das
movs
cmc
pop
pop
push
xchg
mov
pop
dec
mov
inc
test
cli
mov
call
inc
jae
in
jp
inc
xor
mov
rcr
mov
sub
pop
fistp
push
retf
inc
xor
into
add
lahf
add
cmp
scas
ret
mov
aam
scas
lods
cmp
mov
loope
sub
xchg
mov
mov
push
xchg
inc
jnp
push
aaa
enter
gs
push
mov
das
ret
cmp
sub
xor
(bad)
arpl
and
sub
mov
aaa
jmp
je
or
retf
hlt
ret
and
jg
dec
jmp
test
mov
jbe
sub
adc
cmp
xchg
push
ja
mov
jns
push
mov
clc
iret
adc
in
jno
jmp
repz
jge
adc
rcr
in
pop
retf
pop
sar
das
cmp
pop
xchg
mov
aas
sbb
and
sub
popa
pop
mov
repz
pop
xor
sbb
dec
pushf
scas
jno
xor
cdq
(bad)
test
out
mov
sub
shl
pop
das
loope
jae
mov
pop
cmps
sub
loop
popfw
inc
mov
cmp
push
inc
dec
mov
sbb
jge
sti
cmc
ins
popa
and
push
movntq
loopne
pop
xchg
xor
sub
or
bound
sub
pop
cli
sub
pop
mov
pusha
xchg
inc
fisttp
test
data16
jno
out
scas
dec
cli
mov
popa
push
inc
enter
loop
push
shl
test
push
sbb
pop
gs
rcr
je
jb
ret
retf
mov
xor
jmp
and
sbb
adc
cmc
ds
fdivrp
cmps
call
push
jmp
xor
sub
sahf
call
adc
in
cmps
xchg
jp
data16
jae
inc
push
dec
and
jmp
mov
jmp
mov
jae
mov
movs
mov
(bad)
loope
movs
or
mov
fist
jno
xchg
cmp
(bad)
test
test
mov
inc
mov
aam
ins
popa
call
ss
jae
bound
mov
in
mov
test
inc
pop
inc
int3
xor
pop
jge
pop
fwait
rcr
dec
das
scas
cli
fdivr
jne
sub
jmp
dec
dec
je
das
dec
pop
int
xor
stos
and
(bad)
dec
fisub
hlt
inc
aas
retf
nop
movs
sbb
or
mov
in
test
inc
data16
cdq
sbb
xlat
push
test
outs
ins
je
pop
lods
sbb
aas
and
aad
icebp
std
aas
in
dec
push
adc
mov
lods
or
or
neg
jo
xchg
shl
push
jae
push
pop
cwde
stc
es
fldenv
call
adc
mov
push
test
(bad)
jl
jge
movs
push
pop
test
xchg
pop
jmp
mov
push
dec
push
jl
cld
pop
fwait
inc
cdq
leave
push
push
jo
jp
les
sbb
(bad)
mov
nop
pop
mov
imul
cmp
adc
stos
and
mov
xchg
and
cmovns
mov
jle
mov
push
in
js
cmp
push
mov
stos
jp
gs
sar
cmp
mul
xchg
pop
(bad)
push
mov
pop
xchg
ins
test
xchg
mov
stos
je
sbb
call
rcl
dec
clc
jg
bound
sub
into
sbb
frndint
(bad)
dec
call
inc
pop
add
(bad)
dec
pop
jge
cmp
rol
jge
(bad)
nop
popa
cdq
dec
in
mov
icebp
xchg
xchg
sub
retf
mov
dec
stos
add
shr
xchg
mov
ins
loope
add
mov
jb
mov
push
pusha
mov
xor
stc
cli
xchg
hlt
cmps
in
stos
pop
adc
lahf
xchg
cs
das
xchg
repz
(bad)
movs
movs
xchg
mov
xor
out
xchg
jo
or
jmp
scas
sar
mov
ds
repz
xchg
repz
mov
ins
mov
adc
(bad)
in
xlat
cmp
fdiv
cmps
cmps
and
sub
pop
into
js
jmp
imul
dec
daa
and
inc
adc
push
nop
xchg
test
ficom
icebp
sar
adc
and
jl
in
call
push
mov
pop
ror
int
jp
out
push
inc
rcl
dec
loopne
sbb
and
fsubr
xchg
adc
push
das
sbb
iret
xchg
(bad)
aam
cld
in
pop
sbb
push
cmp
push
repnz
push
mov
or
adc
mov
xchg
sub
xchg
out
pop
aaa
mov
frstor
loopne
leave
iret
ins
add
inc
add
jno
jae
jne
das
mov
add
adc
inc
addr16
inc
aaa
and
ja
test
xor
aas
retf
data16
pusha
std
jecxz
retf
ret
stos
inc
jecxz
popf
loop
jnp
(bad)
int
ficom
outs
push
cmp
sub
cmp
mov
je
int
lods
inc
pop
out
shr
sti
mov
jae
(bad)
aam
dec
popa
das
add
add
mov
pop
fist
xchg
sahf
adc
push
xor
fcomp
ins
jbe
ins
ss
mov
hlt
mov
adc
clc
or
fiadd
mov
mov
push
stos
aas
sbb
rcl
or
sbb
stc
out
cmp
mov
pop
inc
lock
jmp
push
bound
pop
rcl
xchg
push
fbld
mov
fstp
movs
mov
jl
test
imul
jl
jb
dec
pop
ret
xlat
add
sahf
imul
mov
adc
fstp
fmulp
rcr
inc
loope
dec
shl
mov
popa
ror
sti
out
mov
lds
jle
(bad)
xor
pop
push
push
push
imul
pop
push
cs
xor
mov
dec
mov
pop
not
cdq
inc
cmp
loop
je
mov
into
sub
rol
add
jp
push
pushf
push
xchg
(bad)
mov
test
sub
inc
adc
das
repnz
inc
pop
xlat
mov
push
mov
adc
cmp
sti
cmp
xor
inc
pop
pop
mov
cmps
dec
retf
in
push
cmp
(bad)
retf
mov
jle
adc
out
xchg
cmp
scas
dec
ins
sahf
pop
inc
jnp
mov
fldcw
jl
in
retf
mov
ret
loop
adc
fstp
rcr
(bad)
jb
jmp
mov
nop
sahf
mov
repz
and
gs
pop
cli
pop
sbb
sbb
pop
mov
pop
jb
test
rol
mov
adc
popf
stos
into
scas
sub
xchg
jecxz
dec
out
add
call
cmc
sar
push
aaa
push
xlat
mov
dec
mov
imul
mov
int3
lea
lock
rcr
pop
mov
cmp
ins
lea
pop
jae
or
int3
push
daa
jl
jns
sbb
mov
jb
cmps
add
push
clc
jae
mov
iret
arpl
pop
in
adc
pop
ret
mov
push
mov
leave
jne
jae
shl
rcr
pop
cmp
jbe
dec
gs
fwait
aas
cmp
lods
sahf
stos
fcmovbe
aam
inc
aam
imul
gs
adc
out
jae
jno
daa
(bad)
in
loopne
mov
es
pop
jo
inc
popf
push
add
mov
aaa
enter
das
pop
subps
jle
and
mov
adc
into
nop
nop
mov
sti
add
xchg
stc
or
out
aaa
xchg
xchg
push
out
in
cmp
pop
jecxz
sti
mov
sub
in
mov
cmps
popa
jno
loope
xor
ret
imul
and
lods
adc
cmp
mov
test
in
jmp
sahf
jmp
jae
adc
inc
mov
inc
movs
inc
(bad)
into
add
(bad)
pop
dec
xor
dec
ficomp
(bad)
jle
(bad)
fstp
and
inc
push
or
xlat
sbb
lea
test
xchg
mov
out
fcmovnb
pop
mov
inc
xchg
jle
fisub
pop
cld
xchg
pop
sbb
sub
jo
pop
lea
ins
pop
push
loope
shr
cli
rol
rcr
das
push
jnp
pop
sub
dec
stos
repz
fmul
mov
cwde
mov
cld
idiv
jp
sub
mov
push
ficomp
push
call
repnz
in
dec
stos
js
cdq
push
push
xchg
scas
dec
loop
in
or
fdivr
sti
pop
push
outs
inc
ja
adc
jnp
or
mov
(bad)
sbb
pop
jmp
xchg
loopne
mov
sbb
inc
mov
sti
xchg
cs
xchg
addr16
addr16
adc
dec
int
dec
(bad)
jmp
dec
xor
jle
popa
mov
or
pop
dec
mov
rcl
(bad)
out
aas
push
sub
scas
int
jb
xchg
sbb
je
cmp
sbb
loop
outs
ret
pusha
ret
jb
pop
inc
rcr
movs
inc
sbb
jnp
push
or
ret
pop
movs
in
repnz
cmc
test
xchg
sbb
out
mov
popa
(bad)
xchg
lds
or
cmps
shr
iret
and
lods
test
or
cmp
bound
inc
(bad)
xchg
xlat
jmp
or
sub
mov
and
jbe
sbb
movs
clc
scas
jg
push
loope
pop
add
das
ss
xchg
aad
sbb
std
imul
sbb
mov
add
pop
sub
shl
cli
cmc
outs
add
pop
lds
aas
mov
nop
pop
cmps
shl
mul
in
repz
rol
jp
scas
and
scas
dec
xchg
repz
mov
ror
(bad)
das
push
mov
sub
rcl
cld
dec
or
(bad)
jecxz
(bad)
scas
cmp
xor
mov
ins
sub
lds
fsub
jo
push
push
mov
xor
cmps
sub
mov
xor
lods
ins
adc
inc
mov
xchg
and
loope
sub
cmp
das
add
add
adc
pop
or
jmp
mov
jmp
cld
test
enter
mov
ret
rcl
push
icebp
mov
push
mov
adc
aad
push
pop
ror
dec
sar
cmp
or
mov
sub
mov
aaa
mov
jne
cdq
jo
pop
adc
mov
adc
inc
addr16
mov
add
sbb
cmp
push
push
sbb
adc
mov
ret
sbb
jmp
fwait
sahf
add
movs
callw
test
fisub
repz
nop
lea
hlt
add
movs
lds
sbb
adc
push
mov
pop
jb
fistp
sub
dec
out
call
add
xchg
fs
inc
frstor
js
inc
cmp
sbb
push
mov
xchg
cmps
dec
add
aaa
lds
xor
inc
mov
js
xor
sub
rcl
repnz
jb
ds
imul
test
xchg
push
or
out
int3
mov
jns
jmp
jle
push
jp
sbb
mov
(bad)
xchg
pop
sbb
test
test
std
push
inc
adc
lods
popf
fs
arpl
ins
imul
jl
pop
jno
call
or
sub
mov
push
xor
in
and
sub
sbb
inc
jmp
adc
or
mov
sub
(bad)
jl
mov
push
and
or
push
mov
(bad)
jg
rol
imul
add
imul
retf
sahf
xor
inc
push
popf
xchg
sub
test
ins
ja
in
stc
cmps
ror
neg
repnz
repz
ss
pop
leave
test
jecxz
add
outs
imul
or
xchg
nop
fsubrp
mov
lds
push
rcr
movs
cwde
push
and
test
xchg
pop
jbe
stc
outs
inc
sbb
pop
dec
jbe
or
jmp
jae
push
shl
cmp
mov
mov
xchg
cwde
stc
in
xchg
or
pop
jl
mov
mov
loop
cmp
je
test
xlat
xchg
mov
inc
(bad)
adc
dec
lahf
mov
into
inc
jnp
jl
inc
push
mov
out
hlt
pop
xchg
(bad)
jne
lahf
add
push
inc
(bad)
pop
cld
inc
gs
pop
push
sti
movs
inc
(bad)
mov
sbb
mov
xchg
lsl
xchg
pusha
inc
or
dec
outs
(bad)
loope
add
rcl
and
or
xor
(bad)
iret
mov
daa
pop
movs
test
out
xor
addr16
push
sbb
mov
and
and
in
cmp
xchg
sbb
fiadd
inc
(bad)
scas
adc
push
mov
add
(bad)
add
adc
sub
xor
or
push
and
nop
pop
ss
xor
sub
add
add
mov
jnp
loop
pop
jbe
add
nop
add
sub
ror
and
or
aad
sub
add
jne
dec
mov
lea
inc
jnp
xchg
cmp
scas
mov
sti
and
adc
in
ja
outs
test
outs
push
rcl
pushf
inc
jno
(bad)
aas
add
cmp
fisttp
test
inc
test
jg
push
pop
loope
data16
inc
pop
dec
jnp
jo
nop
inc
data16
dec
jle
xor
in
sbb
jp
pop
jp
pop
ret
cmps
in
add
push
popa
imul
mov
xor
sub
mov
movhps
shr
adc
jmp
shl
mov
jge
call
pop
jp
rol
cmp
sub
sar
hlt
sub
aad
mov
push
sbb
mov
fwait
push
sbb
out
mov
retf
adc
add
ins
xchg
mov
xor
cmp
mov
cmp
jmp
xchg
shr
sub
sub
pop
outs
iret
gs
dec
xchg
rol
jge
pop
std
jmp
rol
jns
jmp
jecxz
and
jo
dec
mov
cli
mov
cli
push
xchg
jne
mov
jmp
fimul
inc
and
scas
lea
das
jge
mov
jg
fisubr
int3
mov
lods
lock
leave
inc
cmp
iret
and
fbld
daa
dec
ror
push
fisub
push
inc
out
test
sub
jp
in
cmps
out
xchg
adc
int
addr16
jl
jmp
jno
shl
sbb
stos
xor
in
movs
retf
push
repnz
out
out
cmp
sar
push
push
jb
and
sti
les
add
pop
xchg
sbb
out
(bad)
adc
xchg
out
add
arpl
outs
mov
mov
data16
test
mov
cmc
adc
les
add
imul
mov
shr
sbb
(bad)
cwde
fcom
lds
fs
stc
rcl
inc
xor
cmps
xchg
mov
sbb
sub
and
mov
call
or
mov
movs
test
push
jl
aas
fisubr
mov
mov
lahf
push
(bad)
les
dec
int
sub
cmp
call
push
das
xor
push
(bad)
sub
sbb
jns
push
mov
mov
call
sbb
sahf
cld
out
push
pop
jp
jno
in
xchg
sbb
jno
scas
lock
cmp
sahf
shr
inc
fs
loope
out
fidiv
or
ror
mov
adc
xchg
int3
cmps
fs
pop
xchg
shl
fwait
and
frstor
push
cs
xchg
stos
xor
sbb
jmp
xor
mov
bound
ja
push
int
rol
sbb
sub
dec
repz
pop
mov
push
xchg
(bad)
pusha
push
mov
pop
and
in
mov
add
push
cli
cmp
add
sbb
sahf
add
call
ror
sbb
js
or
mov
dec
aad
int3
mov
retf
mov
jb
inc
(bad)
int
or
push
inc
pop
aas
(bad)
mov
ins
imul
cmp
cli
push
xchg
add
add
pop
arpl
je
sti
adc
dec
xchg
cmp
mov
loope
mov
in
scas
sub
dec
jae
push
jg
not
and
xor
popf
cmp
pop
add
and
jl
cwde
sbb
mov
inc
sar
aas
stos
sbb
fidivr
ret
mov
arpl
sahf
push
sub
arpl
inc
adc
repnz
inc
test
aas
lods
mov
fldenv
or
mov
add
mov
js
ja
stos
xchg
outs
jb
mov
mov
cdq
ins
adc
sbb
pushf
xchg
int
call
sbb
jg
cmps
outs
pop
ret
xchg
xchg
and
aas
mov
mov
and
ret
push
pop
call
loop
movs
and
xchg
jmp
ret
imul
sub
int
mov
mov
stos
pop
jmp
xchg
add
retf
aad
test
dec
dec
jno
sbb
push
jne
or
push
(bad)
nop
mov
sub
add
and
xor
and
fwait
push
inc
cli
scas
imul
xor
ss
pop
inc
push
cmps
aas
fsubr
push
fwait
pop
ret
retf
push
dec
out
fnstsw
xchg
pop
dec
ins
out
push
iret
cmc
stos
and
scas
push
or
inc
jge
mov
cmp
pop
mov
mov
adc
or
test
pop
bound
jge
mov
dec
mov
sbb
mov
fadd
sar
xlat
inc
(bad)
in
and
aam
mov
fcomip
imul
mov
fimul
ret
imul
sbb
pop
movs
jecxz
repz
add
repnz
pop
imul
imul
ds
xor
adc
push
sub
jp
xor
cmp
fist
xchg
adc
adc
outs
adc
dec
call
lahf
aam
loopne
fidivr
push
pop
jne
mov
mov
mov
lods
ins
imul
xor
(bad)
sbb
cmp
push
sub
cmp
scas
aaa
jb
hlt
ja
mov
test
mov
fimul
cmp
sahf
aad
xlat
popf
ss
out
cmp
cmp
push
test
(bad)
sti
inc
stos
cmps
das
ins
rcl
rcl
sub
cmp
mov
xor
daa
mov
ret
(bad)
xor
sbb
pop
jle
cmps
ds
or
mov
or
or
sbb
or
ja
enter
out
fld
fisttp
sub
enter
fistp
ins
cmp
xchg
aaa
or
mov
push
pop
(bad)
das
out
push
or
adc
ror
out
(bad)
call
in
inc
and
jge
pop
lods
popa
cmps
fst
scas
test
mov
push
je
(bad)
sbb
sbb
adc
pop
adc
inc
and
add
or
popa
fdivr
or
out
or
jge
repnz
aaa
cdq
loop
repnz
call
(bad)
hlt
pop
fwait
aaa
mov
mov
cld
aad
imul
enter
mov
bound
cmp
push
mov
ins
fistp
sahf
ror
sub
rcr
adc
data16
sub
stc
test
fadd
outs
mov
xchg
cmp
and
movs
fisubr
sbb
cli
loop
xchg
fcomp
rol
sbb
popa
int3
xabort
jmp
add
adc
sub
mov
int3
jns
xlat
jecxz
lea
call
js
retf
pop
fiadd
lods
cmc
xchg
mov
(bad)
rcl
pop
sub
dec
mov
nop
pop
lods
test
xor
daa
mov
cs
nop
sbb
add
adc
cmp
mov
add
jno
fld
ds
pop
movs
adc
jg
jo
sbb
popa
sub
std
sti
pop
nop
out
loope
xchg
adc
cmp
fbld
bnd
mov
sub
sub
aad
inc
push
push
xchg
imul
xchg
(bad)
ffreep
add
adc
(bad)
pop
push
sbb
dec
mov
in
inc
int
inc
mov
(bad)
pushf
or
sbb
int
dec
scas
in
int3
adc
push
mov
mov
ins
mov
and
(bad)
jmp
mov
mov
lea
xor
pop
mov
mov
(bad)
lods
pop
lock
dec
fsub
or
ja
test
jmp
sbb
in
adc
test
push
cdq
stos
xor
hlt
ret
pop
add
inc
lahf
pop
dec
cmp
xor
imul
ret
or
popa
ds
mov
clc
add
cmp
daa
jns
xchg
mov
mov
test
push
adc
and
neg
mov
jmp
mov
cdq
imul
shl
je
ror
addr16
stc
ficomp
and
aas
cmp
dec
jl
(bad)
mov
cmp
clc
pusha
push
xacquire
cmp
pop
mov
xchg
xchg
push
les
add
test
out
fs
scas
jnp
outs
imul
dec
popa
fsubr
pop
lock
lds
int
addr16
fidiv
stc
jge
pop
enter
adc
sbb
retf
push
sub
jno
int3
jbe
push
cmp
cmp
iret
xlat
aaa
and
inc
push
in
imul
mov
mov
icebp
sub
outs
(bad)
mov
sbb
mov
xor
aam
test
pop
stc
mov
dec
xor
loopne
add
js
divps
ds
jbe
data16
push
xor
jecxz
dec
gs
mov
hlt
add
outs
mov
and
adc
hlt
sti
test
repz
and
inc
pushf
arpl
mov
outs
(bad)
fdecstp
lock
and
jne
xchg
rcl
xlat
xor
fs
xchg
inc
js
and
lea
push
inc
mov
push
std
sub
mov
(bad)
and
inc
xor
push
clc
mov
pop
pop
or
(bad)
daa
repz
xchg
fisubr
loopne
test
mov
push
mov
leave
cmp
mov
cmps
popf
dec
adc
xor
iret
aaa
out
aas
(bad)
xor
lsl
push
xor
mov
jp
xchg
fst
idiv
mov
arpl
hlt
xchg
cli
loop
ret
push
int
fwait
outs
adc
das
cld
jb
and
dec
add
out
fsub
inc
mov
mov
mov
xor
push
sub
sbb
dec
dec
mov
xchg
rol
stos
test
inc
data16
pusha
xchg
mov
or
or
cmp
cmc
and
ins
and
dec
sbb
mov
mov
add
sbb
inc
lock
pop
mov
popf
push
cld
fld
aad
push
jb
add
outs
mov
rol
xor
jg
mov
dec
nop
enter
repnz
fild
out
ss
inc
add
push
xlat
cdq
mov
mov
push
pushf
push
sbb
in
jmp
inc
sub
push
sbb
ror
out
inc
push
or
gs
jge
shld
xchg
ret
ret
inc
mov
cmc
les
mov
mov
test
jae
retf
dec
test
in
fstp
jbe
scas
mov
cld
sbb
rcr
dec
and
mov
adc
lock
xor
add
jle
cwde
xchg
js
inc
sub
mov
ds
pop
jl
in
push
aas
div
dec
shl
add
js
ja
fldenv
pop
lock
or
arpl
ins
mov
iret
xor
push
in
add
jno
je
hlt
cwde
add
ret
(bad)
out
stos
jg
mov
out
mov
jle
bound
xchg
cmp
add
push
sub
sar
jno
xor
(bad)
aad
stos
dec
icebp
push
xchg
out
ret
mov
sub
call
pop
ror
xor
arpl
inc
int3
push
aaa
fbstp
ficom
push
inc
jge
sbb
jmp
out
or
jecxz
xchg
adc
cmp
dec
inc
in
rcl
xchg
mov
pop
mov
mov
pop
not
je
dec
lea
push
mov
mov
xor
mov
cs
or
sub
test
aad
adc
xlat
push
paddb
shr
leave
jmp
ret
push
clc
aaa
pushf
cmp
fst
bound
das
ds
daa
add
sti
push
mov
loopne
movs
jl
outs
fbstp
test
jno
or
mov
or
stos
and
cmps
xor
ja
rcr
adc
add
shl
push
scas
mov
mov
xlat
jbe
lods
xor
jmp
in
popa
outs
or
xchg
dec
mov
mov
call
sti
and
je
cmps
adc
xchg
lahf
jle
repz
out
cdq
data16
push
jmp
cdq
mul
aaa
xchg
shl
sub
pop
cmps
mov
inc
push
and
test
rol
pop
enter
and
cwde
in
ins
push
push
jg
mov
cmp
test
push
or
adc
mov
(bad)
jl
pop
sbb
jno
hlt
leave
scas
sub
xchg
dec
or
mov
test
call
(bad)
and
pop
pop
push
mov
and
dec
in
adc
mov
outs
ins
pop
les
and
je
gs
test
cmp
xchg
aam
popa
rol
and
test
dec
push
pop
inc
in
ss
inc
mov
imul
les
or
or
pop
sub
retf
rcl
sub
clc
dec
ja
jl
mov
test
lds
call
in
or
mov
add
xor
pop
mov
adc
cmps
and
mov
adc
mov
test
dec
xchg
and
rol
retf
inc
cmp
sbb
lods
sbb
inc
popf
hlt
push
add
cli
pop
pop
and
or
push
xor
or
lds
cmp
rol
mov
add
ret
or
jmp
retf
outs
mov
mov
xchg
mov
cs
test
les
aad
icebp
jbe
push
enter
mov
mov
mov
add
mov
out
mov
inc
shl
jnp
test
mov
mov
mov
in
sbb
sub
jne
ins
leave
pop
stc
out
cmc
lods
int3
mov
lods
mov
xchg
lods
mov
jle
jmp
add
lds
retf
cdq
cmps
mov
pop
xchg
leave
or
mov
jl
clc
or
mov
xor
adc
cmp
pop
dec
jmp
loopne
sar
cmc
push
push
aam
into
and
dec
mov
mov
xchg
sbb
daa
xor
repnz
adc
cmps
into
push
lods
out
scas
xchg
pop
adc
inc
xchg
sub
mov
adc
mov
pop
jle
cmc
cld
inc
mov
inc
cmp
pop
jmp
sbb
(bad)
push
into
mov
mov
pop
ins
sbb
push
inc
fwait
loope
push
hlt
jae
inc
and
add
jl
jno
mov
sbb
xchg
dec
pop
jae
pop
or
arpl
je
xchg
(bad)
lock
std
xor
ja
or
cmp
or
sbb
bound
or
mov
jo
jmp
outs
ret
out
(bad)
push
xchg
nop
mov
mov
and
and
push
sbb
add
and
dec
mov
and
sbb
xchg
stc
outs
in
clc
mov
mov
in
mov
jo
mov
loopne
add
jb
cmp
mov
push
nop
or
fisttp
jo
xchg
lahf
push
or
outs
pop
dec
add
add
pop
in
repnz
pushf
inc
sub
in
bound
call
fisttp
nop
test
jno
xor
pop
cmp
(bad)
and
(bad)
add
sub
mov
add
xchg
enter
adc
xor
addr16
adc
in
pop
jbe
cmp
lods
ins
adc
sbb
es
arpl
push
jns
cmc
add
clc
out
mov
pop
sub
xchg
cmp
clc
cld
jne
mov
push
mov
push
xchg
jmp
xor
inc
mov
cs
ins
push
out
mov
data16
aad
mov
add
(bad)
test
sysenter
push
inc
or
xchg
fwait
inc
movs
adc
cmc
leave
cmc
or
adc
inc
cmp
inc
adc
cmp
xchg
in
jns
cmp
nop
out
loopne
ins
xor
dec
stos
adc
jecxz
sbb
pop
test
movs
dec
mov
outs
dec
mov
test
div
cdq
xor
mov
push
and
xor
sub
int3
adc
mov
int3
xor
enter
mov
jbe
pusha
stc
ret
cs
xor
or
xor
dec
xchg
loopne
push
repz
repnz
xchg
outs
mov
mov
pop
lahf
in
and
lds
mov
test
cmp
mov
in
push
imul
(bad)
push
call
pusha
cmp
xor
les
jl
sub
push
jmp
inc
ins
(bad)
les
sbb
movs
inc
sbb
in
lock
pushf
movs
mov
imul
mov
add
fldenv
jecxz
test
add
out
out
push
pop
adc
mov
add
mov
xchg
or
fsub
jl
shr
xor
mov
(bad)
inc
mov
mov
jae
lods
out
cmp
add
mov
inc
fisttp
mov
dec
dec
add
xchg
mov
cmp
and
repz
and
loop
xor
mov
movs
in
stos
xor
add
or
in
push
stos
sub
outs
(bad)
sub
ret
adc
cli
push
ins
mov
jp
inc
shr
or
or
mov
stos
mov
xchg
mov
jge
iret
popa
js
lea
add
xor
xchg
dec
xlat
push
lods
dec
or
adc
dec
loopne
mov
inc
or
jo
aad
xchg
and
mov
xor
ds
lea
jg
cmc
adc
cs
je
enter
hlt
icebp
lds
pop
mov
icebp
xchg
jb
sbb
dec
add
adc
popa
xchg
push
shl
fxch
lods
add
retf
aaa
cmp
add
or
xchg
jmp
in
push
jl
retf
or
fnstenv
mov
inc
adc
jg
mov
sti
sbb
mov
pusha
and
movs
cmc
imul
iret
or
daa
sti
test
shr
gs
pop
in
call
sahf
mov
ins
mov
shl
call
das
mov
jnp
jmp
(bad)
shl
or
(bad)
neg
or
test
test
int
add
into
outs
les
in
mov
mov
mov
fisttp
or
and
dec
push
fistp
mov
and
movs
int
dec
call
ins
shr
int3
mov
out
aad
jmp
sub
sbb
inc
leave
sub
push
dec
jb
jg
fs
sti
test
or
pop
inc
es
inc
sbb
rcl
adc
xor
fld
ret
mov
out
xchg
inc
push
cmp
mov
or
in
sbb
cmc
retf
inc
inc
bound
std
sub
test
repz
mov
shl
jge
pop
test
sub
adc
es
cwde
scas
xchg
pop
int
jmp
push
aaa
push
lea
inc
xchg
dec
push
nop
ss
(bad)
in
in
in
dec
push
mov
xor
clc
fiadd
ror
jo
mov
popf
call
add
aam
jmp
test
jbe
lock
movs
dec
(bad)
lahf
call
inc
fldcw
in
jnp
jmp
push
pop
add
mov
dec
jp
xchg
inc
cmp
repnz
dec
icebp
dec
stos
rcr
mov
inc
shr
add
mov
xor
popf
inc
sahf
inc
inc
jns
outs
enter
(bad)
test
push
pop
cmp
lea
jl
dec
int3
push
test
jnp
dec
mov
movs
add
popa
ins
inc
test
shl
or
adc
mov
data16
push
pop
cmp
jge
cmp
jns
loop
hlt
cmp
jb
adc
mov
(bad)
jecxz
(bad)
jb
mov
and
inc
stc
push
stc
stc
mov
mov
mov
sub
cs
or
mov
ss
jae
jmp
or
test
and
fst
sbb
iret
enter
xor
icebp
sbb
jns
fst
add
les
leave
mov
test
mov
push
or
mov
outs
mov
push
out
lahf
outs
ds
cwde
repz
leave
outs
mov
mul
(bad)
xchg
pop
dec
adc
les
and
jge
inc
push
sahf
adc
clc
stc
pusha
ins
mov
cwde
loop
push
mov
ss
jns
movs
shl
fwait
repnz
inc
ja
jns
mov
loopne
(bad)
or
push
sub
cmp
and
mov
shl
sub
push
mov
or
test
lods
sti
mov
mov
pop
jle
xor
rcl
and
mov
sub
es
sbb
dec
mov
fidiv
lea
fwait
ins
ret
in
outs
push
adc
ins
aas
fdiv
xor
mov
int
leave
fnstenv
sbb
das
and
mov
or
mov
es
mov
adc
and
or
push
dec
sub
add
pushf
jle
(bad)
jne
loope
daa
inc
fldcw
sbb
dec
mov
mov
mov
pop
nop
dec
pop
pushf
repnz
add
cmp
pop
or
lahf
push
scas
xor
stc
int3
dec
loopne
js
nop
rep
js
and
in
shl
addr16
push
mov
xor
shr
fisttp
sub
inc
mov
xchg
pop
sti
iret
std
sbb
inc
xchg
imul
out
push
or
nop
lods
push
or
jp
jmp
pop
adc
pop
sbb
bound
mov
jmp
mov
mov
idiv
loop
ror
push
adc
mov
mov
mov
sub
loopne
out
fadd
imul
sub
movs
scas
lods
inc
data16
int3
mov
or
mov
call
push
xor
icebp
popa
inc
add
inc
push
mov
ror
cld
mov
jp
mov
shr
btc
mov
mov
jmp
call
daa
(bad)
imul
ds
repnz
or
inc
(bad)
retf
jle
ret
mov
xor
dec
push
mov
push
enter
or
mov
movaps
add
fwait
pop
jnp
std
cmp
rcr
retf
mov
sbb
int3
std
add
jp
mov
dec
adc
jmp
out
xchg
pop
sbb
cdq
dec
inc
sbb
push
lahf
sbb
movs
sti
add
ror
jp
or
cdq
aas
cmp
xchg
scas
arpl
adc
cmc
mov
out
inc
fcom
rcl
inc
and
pop
sahf
add
xchg
xor
sub
mov
repnz
xor
shr
out
mov
or
jae
mov
sahf
sbb
sahf
mul
or
ins
cmp
cmp
adc
ins
pusha
out
movs
mov
in
test
add
loop
sub
test
fdiv
and
xor
rcr
fimul
inc
mov
mov
lods
push
pop
pop
outs
mov
dec
pop
ds
aam
add
pusha
call
jnp
jmp
bound
call
pusha
ins
ficomp
lock
push
xchg
xor
out
jns
iret
pop
mov
cmps
je
cmp
push
(bad)
cmc
dec
test
jecxz
fisub
pop
pop
lahf
cwde
adc
(bad)
jmp
push
ror
cld
adc
cmp
mov
lea
stc
in
sbb
cmp
das
pop
push
cmps
xor
dec
add
and
sub
fadd
or
fistp
push
ins
adc
ss
jge
je
mov
xchg
arpl
push
arpl
test
popa
data16
dec
jle
mov
shr
pushf
shr
(bad)
mov
xchg
mov
jbe
cmp
pusha
aaa
push
aam
lahf
and
inc
aas
pushf
call
fdiv
mov
sub
xor
mov
xchg
movs
mov
mov
int3
pop
dec
jl
push
add
out
pop
pop
iret
sub
jg
es
add
adc
add
jmp
popa
daa
mov
and
repz
xor
shl
dec
(bad)
mov
xor
cmps
ret
pop
xchg
mov
mov
mov
daa
cmp
sbb
or
add
jecxz
push
cmps
neg
xor
fs
mov
or
mov
ficom
or
push
rol
int
movs
loop
push
clc
js
cld
int
loope
sub
nop
and
popf
dec
sbb
je
or
push
pop
jae
daa
shr
push
and
mov
push
sub
pop
jmp
cmp
inc
adc
push
(bad)
sbb
mov
mov
push
(bad)
xor
out
sar
stos
jl
clc
mov
sub
mov
std
inc
add
nop
popf
ds
call
push
iret
jl
pop
lahf
fisttp
leave
je
rcr
ja
push
sub
sbb
push
push
ror
out
mov
scas
or
rcr
jb
iret
imul
or
xchg
add
xor
push
xchg
adc
lock
fild
and
push
fwait
mov
fdivr
xchg
sub
mov
xchg
xchg
retf
(bad)
retf
sbb
fldenv
inc
jb
fidiv
je
add
jmp
pop
pop
sar
mov
push
and
std
arpl
adc
shr
lods
imul
pop
das
jle
mov
test
cs
mov
jecxz
xchg
jp
cli
jmp
sbb
ds
mov
bound
sti
jl
adc
sbb
popa
(bad)
pop
lock
loop
icebp
dec
retf
aaa
pusha
sub
add
mov
leave
mov
jae
cmp
pop
cdq
add
ret
lods
xor
mov
lods
int
xor
cmp
sbb
fstp
add
out
aas
jmp
inc
clc
mov
loope
mov
and
rcl
fidiv
pop
push
rol
gs
jecxz
leave
add
push
adc
nop
pop
rcl
stc
(bad)
fcmovnb
aad
jnp
mov
mov
sbb
jmp
jecxz
jecxz
or
push
arpl
jb
mov
xor
popa
dec
jbe
xor
retf
xor
jmp
ficom
mov
leave
push
lods
lds
add
lahf
fucomp
(bad)
(bad)
std
loop
sub
push
lea
pop
(bad)
fdiv
cld
pop
dec
cmps
cmovbe
shr
push
out
and
push
push
outs
cli
xchg
mov
or
movs
std
cs
mov
std
in
test
mov
imul
std
lds
je
ret
ror
mov
scas
or
pop
adc
arpl
push
push
mov
call
jnp
or
out
xor
fist
nop
jnp
cmc
inc
aam
mov
test
push
cmps
fwait
push
push
xor
sub
sar
repnz
mov
stos
push
fisub
jp
jle
and
jmp
inc
pop
aaa
not
mov
pop
adc
add
add
mov
imul
cmp
pop
imul
dec
enter
loop
jno
cmp
mov
stos
movs
push
ins
ret
lea
jmp
(bad)
(bad)
push
shr
fstp
adc
mov
xchg
loope
cwde
jns
pop
lods
cmp
retf
lods
ins
(bad)
(bad)
mov
jecxz
push
xchg
cmps
push
and
leave
push
push
in
bnd
xchg
adc
push
mov
dec
sub
push
out
je
rcl
jae
call
add
hlt
sbb
data16
clc
xchg
cmps
in
xor
mov
inc
inc
loop
lds
sub
fdiv
stos
mov
(bad)
mov
xchg
and
add
sub
jne
mov
and
retf
mov
xorps
cmp
mov
addr16
or
inc
imul
test
dec
cmps
dec
std
data16
int3
ds
dec
std
jmp
pop
dec
arpl
mov
dec
mov
scas
stc
out
das
and
jbe
daa
stos
xchg
cmps
movs
cmc
fcmovnu
jo
in
inc
vpmaxub
arpl
rcl
or
popf
fld
(bad)
sub
gs
inc
sahf
jae
test
out
hlt
(bad)
fld
adc
leave
mov
xlat
add
outs
(bad)
sbb
mov
sub
mov
ds
jne
xchg
cmp
mov
(bad)
mov
clc
scas
xchg
jle
clc
dec
ffreep
inc
sub
addr16
adc
sbb
adc
and
sahf
inc
mov
push
jno
jo
mov
movs
cmp
(bad)
cld
jbe
leave
jmp
movs
(bad)
cld
sub
jne
das
rcr
sbb
or
test
dec
xchg
or
sbb
stos
dec
out
daa
pop
push
cwde
push
std
ret
cmp
cli
or
xor
jb
rol
out
pop
adc
in
scas
movs
pop
sub
test
pop
pusha
scas
cmp
adc
test
and
clc
adc
push
push
mov
xchg
push
xchg
mov
or
add
ins
push
arpl
mov
fdiv
dec
push
xor
jne
outs
mov
add
pop
fcomp
cld
cmp
imul
pop
or
popa
add
xor
and
jo
mov
inc
mov
ds
aaa
out
gs
int
call
aad
add
mov
imul
nop
aas
and
pop
mov
jbe
dec
mov
pop
in
in
out
push
cmps
mov
xor
xor
gs
test
sub
pop
cwde
mov
dec
adc
jb
fnsave
pusha
in
ret
fisubr
aaa
pop
ret
dec
push
dec
mul
lods
arpl
movs
adc
out
and
jno
push
sbb
test
sbb
aad
lahf
push
loopne
adc
mov
daa
mov
push
mov
fldcw
push
pop
jnp
inc
cmp
frstor
inc
inc
dec
inc
mov
popa
test
and
adc
daa
(bad)
fsub
lds
les
cmp
adc
cdq
arpl
lock
fsubr
push
mov
fsubr
not
shl
ins
mov
ror
int3
mov
xor
push
je
push
pop
pop
adc
js
jp
clc
jl
outs
and
test
call
inc
movs
adc
daa
call
(bad)
mov
mov
sbb
stc
mov
sbb
mov
fstp
addr16
fwait
imul
sahf
mov
loop
jno
add
mov
inc
mov
jno
sub
sub
pop
and
jnp
inc
mov
push
retf
push
sub
or
add
mov
or
fwait
mov
inc
aaa
mov
dec
push
fucomip
cmp
dec
mov
and
out
and
jo
add
fldenv
out
outs
inc
jmp
inc
sub
jns
push
retf
(bad)
aad
cmp
xlat
or
out
test
jmp
dec
loop
imul
iret
test
rcr
pop
xor
xchg
mov
neg
mov
movs
cmps
loopne
(bad)
pop
sbb
sub
loope
jmp
mov
sub
xchg
loop
loope
mov
push
rol
sub
pop
popf
aas
(bad)
fnstsw
xchg
movs
(bad)
iret
nop
pop
pop
mov
cmovne
outs
ss
jle
sbb
stc
fimul
das
iret
cmp
lods
jno
mov
or
stos
or
into
pusha
(bad)
retf
loop
xchg
dec
mov
and
bound
push
lock
pop
dec
mov
and
xchg
push
and
jo
imul
js
outs
js
push
sbb
sub
jnp
xor
mov
sahf
addr16
addr16
int
cmp
cmp
or
xor
xchg
call
xchg
xchg
xchg
mov
into
push
cld
or
pushf
jg
imul
daa
mov
in
xchg
xchg
fldcw
push
jb
xor
pop
sub
in
loopne
loopne
loopne
icebp
cmp
ins
ror
push
push
cwde
pop
mov
cli
sti
jge
retf
bound
cs
push
push
stos
test
out
jns
dec
sbb
cmps
push
mov
aas
adc
adc
ins
mov
in
cmp
bound
std
push
out
jae
xchg
aaa
mov
add
stos
inc
adc
jp
xor
xor
leave
aas
repz
pop
add
inc
dec
mov
sbb
dec
mov
in
mov
push
adc
xchg
dec
jge
and
jmp
cwde
(bad)
add
popa
add
cmp
loopne
psubd
pop
mov
sahf
and
adc
cmp
test
and
sbb
fist
mov
shr
dec
cs
mov
or
addr16
cmp
ins
fldenv
sbb
sahf
add
mov
push
cmp
xchg
cmc
fucomip
sbb
dec
shl
cmp
jg
js
or
xor
pop
stos
sub
mov
xchg
stc
fwait
(bad)
push
out
xchg
push
jmp
shl
outs
adc
ins
or
imul
xor
scas
dec
push
dec
sbb
and
out
aam
lods
dec
hlt
jns
imul
popa
jns
pusha
cli
hlt
in
inc
ss
mov
test
out
es
loop
sbb
pop
test
mov
lds
les
call
jle
or
shl
mov
sub
int
push
icebp
and
fadd
mov
std
or
ins
jne
xchg
in
repz
push
out
enter
retf
mov
fmul
pusha
xor
xor
mov
or
lock
ret
xor
rcr
mov
jmp
in
adc
iret
mov
je
cdq
jnp
sti
adc
loop
icebp
mov
les
outs
out
pop
dec
pushf
xor
cli
mov
inc
call
hlt
sar
mov
sbb
cmp
pusha
enter
cwde
ficomp
inc
aas
jo
jne
dec
mov
add
xlat
pop
out
lock
xchg
fst
ret
ds
clc
cmp
jo
xchg
loopne
out
mov
pop
nop
(bad)
jg
pop
scas
xchg
cmc
dec
or
push
dec
js
out
inc
sbb
or
mov
scas
mov
xor
xchg
mov
jg
test
out
(bad)
push
push
imul
sbb
xlat
xchg
lea
add
inc
cmp
adc
imul
cmps
mov
ja
push
dec
adc
and
int3
shl
loopne
(bad)
cmp
or
mov
inc
jle
mov
ret
dec
mov
mov
jge
popf
(bad)
pop
imul
(bad)
jns
jl
arpl
adc
and
dec
test
ror
jnp
clc
jl
sbb
in
retf
outs
sbb
push
push
push
stos
ss
mov
xchg
xchg
(bad)
jmp
aam
xchg
cmp
(bad)
dec
adc
xlat
add
push
and
arpl
nop
mov
jmp
jp
ds
call
push
cmp
inc
xchg
out
arpl
push
or
sbb
into
xor
imul
fimul
shr
push
xchg
and
call
and
xchg
rol
xor
cmps
jmp
loopne
inc
std
int
sbb
ss
int
cmp
add
aas
ins
xchg
jmp
cs
or
retf
add
in
mov
xsha1
cmps
or
fwait
cmps
push
stc
sub
stc
lds
or
idiv
ret
add
retf
dec
shr
fs
es
div
sub
mov
fnstcw
mov
push
mov
mov
mov
sub
and
out
sbb
adc
inc
mov
mov
call
repz
jno
out
aad
dec
dec
jp
ret
shl
jo
pop
icebp
jae
popa
test
or
cs
xor
test
lods
sar
cli
enter
int3
ins
sub
mov
jbe
dec
fmul
mov
(bad)
add
cmps
daa
lds
or
in
mov
xchg
pop
in
or
xchg
adc
sub
fbstp
loop
fsubr
cmp
or
es
dec
nop
daa
adc
mov
pop
dec
pop
bound
cmps
mov
jp
sbb
push
cmp
or
test
in
retf
mov
fstp
hlt
push
and
fcom
dec
jl
mov
dec
aad
jge
sti
dec
aas
retf
mov
dec
stc
inc
dec
leave
dec
cmp
sbb
inc
and
cmp
jbe
jmp
jb
mov
pop
mov
mov
cmp
push
outs
jno
test
(bad)
push
ret
out
sub
jmp
push
jl
adc
movs
jnp
push
pop
mov
push
pop
daa
stc
aas
adc
test
jg
cmp
sub
mov
scas
mov
sbb
dec
dec
cmps
fs
xchg
mov
fimul
icebp
ja
jo
stos
sbb
dec
(bad)
fimul
jp
or
movhps
lock
int
cwde
adc
in
stos
add
cs
je
and
mov
pop
sbb
pop
inc
sbb
aad
push
cmp
retf
fld
sti
sub
mov
or
mov
xchg
(bad)
push
push
and
es
daa
xchg
dec
outs
ret
mov
pop
stc
(bad)
cli
jp
sbb
lahf
xor
(bad)
movs
addr16
add
(bad)
test
and
stos
mov
(bad)
jbe
xchg
push
pminub
mov
xchg
out
pop
(bad)
add
ins
lea
adc
rcr
addr16
arpl
push
xor
pop
jge
out
data16
lea
pusha
mov
nop
mov
fdivr
pushf
jmp
stos
lock
jne
push
sahf
into
imul
test
dec
enter
or
push
push
ss
jo
loop
pop
adc
jns
leave
sub
xchg
loope
ins
sub
icebp
scas
jae
clc
pop
clc
adc
adc
cmps
int
stos
aad
sbb
and
pop
pop
test
mov
icebp
xchg
cmp
jae
retf
mov
cs
retf
dec
cs
js
push
in
into
pop
cwde
daa
cmp
cmps
(bad)
jmp
fstp
adc
jp
or
mov
push
xor
and
dec
mov
mov
mov
add
ret
xor
mov
shr
aad
cmp
loope
aaa
lds
out
in
daa
jae
mov
popa
xchg
pusha
hlt
push
rcl
sub
in
neg
repz
dec
dec
mov
sbb
(bad)
jmp
push
test
nop
out
adc
std
and
inc
xor
sub
jno
adc
shl
sbb
fmul
jbe
lods
repz
adc
or
bound
movs
sbb
(bad)
aaa
ss
out
out
sub
jnp
sbb
stos
stos
mov
xor
mov
(bad)
data16
cmps
cmp
inc
mov
mov
mul
fmul
not
push
aad
pop
adc
stos
mov
cmps
sbb
hlt
imul
add
mov
lahf
call
jp
sbb
shl
jns
ins
pop
lea
sub
jbe
ret
push
inc
pusha
addr16
cli
cmp
pop
mov
cld
push
xor
imul
ja
fnstenv
in
adc
inc
sub
jmp
inc
xor
jno
mov
jno
mov
add
cmp
fstp
(bad)
cmp
leave
popf
je
adc
hlt
mov
cdq
into
out
sahf
out
pop
and
dec
inc
inc
xchg
adc
fmul
and
xchg
retf
jecxz
and
in
lahf
outs
not
xlat
or
jnp
sti
out
mov
out
inc
mov
jae
push
pop
lea
aam
leave
lds
mov
xor
repz
xchg
pop
dec
jb
movs
jns
and
fs
jle
sti
call
mov
cli
adc
pop
rol
repz
jmp
shl
loope
int3
pushf
adc
xchg
retf
mov
pop
and
inc
cmp
frstor
dec
popf
push
push
mov
and
ret
imul
xlat
mov
jecxz
in
loopne
in
dec
sbb
mov
stc
iret
out
inc
jecxz
jno
js
mov
(bad)
movs
add
sbb
call
repnz
fstp
or
add
dec
dec
dec
shr
dec
push
into
mov
cmp
xlat
pcmpgtb
sbb
call
sar
aad
mov
or
mov
arpl
sub
in
push
and
ret
shl
out
call
iret
jecxz
ds
fldenv
div
stos
loop
test
jle
jae
js
sbb
test
push
sub
add
data16
lds
retf
xchg
mov
mov
les
jae
pop
adc
clc
fwait
or
xchg
(bad)
sbb
adc
ret
jge
sbb
(bad)
xchg
xchg
or
cmp
sub
mov
sbb
sar
mov
scas
ins
mov
push
inc
inc
lods
mov
pushf
push
inc
add
adc
fldcw
js
jnp
inc
cmp
jno
or
and
xchg
ja
jl
cdq
es
mov
fld
cmp
jmp
ds
outs
or
jnp
or
cli
out
jle
mov
lds
inc
fcomip
popa
xor
sub
cli
out
push
retf
inc
sub
jo
popf
pop
mov
sub
or
shl
rcl
push
mov
retf
jns
scas
sub
add
ja
je
(bad)
rol
xchg
inc
jmp
imul
leave
ins
scas
mov
fdiv
cmps
sbb
mov
pop
jb
mov
shr
mov
gs
xchg
xor
push
jmp
rcl
lock
shl
ret
pop
pop
inc
mov
retf
rcr
sbb
stos
sbb
mov
fstp
fidiv
outs
gs
fnstsw
xchg
idiv
cmp
push
push
mov
(bad)
std
dec
adc
push
pop
add
cbw
jno
mov
xor
and
jp
out
cs
out
push
sub
jg
outs
xor
mov
mov
xlat
dec
and
ins
xchg
mov
fldenv
xlat
or
stos
sbb
inc
popa
xor
or
shl
in
(bad)
cmp
std
jp
outs
jp
xor
std
push
call
fild
mov
push
popf
mov
inc
scas
push
ins
cwde
and
nop
inc
xchg
mov
adc
mov
mov
outs
fisttp
mov
xchg
sbb
mov
push
pop
js
fdiv
fisttp
xchg
and
and
dec
push
js
jmp
dec
cmp
je
jae
sahf
jb
inc
adc
sti
cmc
pop
out
(bad)
push
push
inc
fmulp
adc
push
sub
hlt
cmps
or
iret
push
cmp
mov
sub
inc
repnz
and
cmp
call
fisubr
xor
mov
lea
in
rcl
repz
out
das
loop
sahf
xor
cmc
and
in
pop
es
les
inc
stc
add
je
xchg
mov
pop
mov
pop
popf
mov
jp
and
and
xchg
jbe
ret
push
ss
pop
adc
dec
popa
dec
cmp
sbb
xlat
sub
mov
loope
stos
ret
inc
scas
cmps
arpl
dec
cli
xchg
in
scas
in
xlat
(bad)
xlat
mov
adc
push
popa
mov
ret
push
mov
js
adc
xor
mov
or
mov
add
retf
cmps
dec
inc
outs
push
and
xchg
inc
cmovne
jle
std
dec
pop
ror
fdecstp
inc
std
and
imul
pop
mov
push
jmp
sti
ds
(bad)
lahf
mov
pop
pop
and
mov
addr16
loopne
dec
sbb
aas
int3
stos
out
fdivr
mov
sub
stc
sub
add
pushf
addps
js
xor
das
std
xchg
cmp
frstor
inc
fst
or
dec
jmp
cmp
xor
out
xchg
mov
(bad)
adc
loopne
and
jne
ds
fcmovbe
mov
xchg
mov
jno
pop
xchg
fisttp
dec
xchg
test
sub
cli
push
pop
mov
(bad)
stc
xchg
mov
div
(bad)
movs
(bad)
jnp
xor
add
ja
fs
xchg
push
pop
mov
jecxz
sbb
and
xor
pop
xor
inc
leave
(bad)
xchg
icebp
pop
add
clc
mov
fmul
out
pusha
adc
daa
pop
ret
imul
sbb
movs
out
int3
shl
adc
mov
sbb
inc
cmp
lock
inc
push
pop
imul
mov
rcr
js
das
jmp
mov
jge
iret
out
lea
xor
xchg
mov
inc
call
xchg
je
fdiv
jmp
daa
mov
int
push
arpl
stos
fsubr
clc
mov
cmc
pop
mov
out
into
call
mov
scas
out
xchg
je
btc
(bad)
xchg
jmp
fdivp
repnz
shl
add
lock
mov
or
push
ss
mov
rcr
outs
cmp
ret
aaa
dec
scas
aad
cmp
xor
sti
push
sub
mov
jnp
adc
push
stc
push
in
cmp
int3
sub
mov
push
stos
out
arpl
adc
or
faddp
loope
jo
adc
sub
fsub
jo
ja
push
dec
sub
adc
sti
lods
pop
sbb
fisub
ret
sub
push
das
xchg
aam
in
or
mov
push
aas
call
push
jge
dec
out
jnp
jg
dec
inc
pop
sbb
push
sbb
jl
popa
int3
nop
mov
jl
add
call
sub
inc
dec
pop
lods
hlt
inc
enter
(bad)
jb
imul
gs
inc
loope
shl
daa
aaa
in
xor
mov
xor
dec
out
adc
fucompp
lock
out
jno
mov
pusha
or
or
dec
mov
dec
pop
push
clc
stos
clc
not
mov
or
inc
test
test
(bad)
sbb
inc
xchg
or
push
jge
dec
jne
retf
in
sbb
ins
in
inc
pop
sub
xchg
int3
ret
in
ins
jmp
imul
stos
adc
(bad)
sahf
movs
pop
or
fwait
sbb
cs
fstp
fprem
push
out
retf
rcr
inc
movs
rcr
pop
add
sub
inc
cs
(bad)
pop
adc
inc
iret
inc
std
xor
popf
adc
dec
clc
loopne
jns
push
sbb
fisub
mov
jae
lds
jnp
add
push
jne
and
in
or
lahf
push
adc
mov
js
das
push
dec
xchg
and
fisub
das
mov
sahf
ds
and
test
adc
mov
mov
adc
cmps
out
jmp
hlt
jnp
add
pop
and
jb
(bad)
pop
retf
sahf
jbe
or
push
loop
adc
sub
ret
addr16
pop
mov
push
xor
out
movs
jnp
fmulp
mov
cmp
inc
dec
and
sti
xchg
imul
stc
sub
shl
imul
stos
out
dec
push
cmp
fwait
jmp
loop
sub
mov
shl
fwait
or
scas
sub
jle
fsubr
scas
sbb
mov
adc
iret
ret
pop
dec
(bad)
mov
jmp
in
fadd
dec
rcr
cmp
out
call
loop
jnp
sbb
mov
fmul
sbb
ret
int3
dec
add
adc
arpl
add
mov
sbb
push
lahf
bound
jbe
fbld
imul
mov
in
adc
pop
mov
call
add
std
and
mov
in
jnp
xor
mov
lods
popf
push
mov
jmp
push
xchg
out
dec
out
fisubr
xchg
xor
jmp
mov
(bad)
mov
jae
sbb
xchg
dec
mov
jae
mov
fist
into
dec
add
mov
and
xor
jb
cmps
pop
fild
lock
ins
and
add
call
sbb
jno
jl
lods
repz
sub
pop
icebp
(bad)
pop
jne
or
lock
mov
pop
sub
mov
dec
push
lods
pop
clc
neg
add
fdivr
fwait
jl
sbb
and
std
push
mov
repz
push
mov
pop
lods
inc
mov
sbb
push
xchg
inc
out
nop
das
and
pop
jbe
stos
pop
jno
inc
and
enter
jnp
rep
and
in
cmp
or
and
adc
imul
pop
mov
dec
mov
test
ret
frstor
mov
mov
xor
sub
xchg
mov
popa
add
pop
jno
icebp
jecxz
cmps
lods
cmps
cmp
dec
test
mov
sbb
push
retf
movs
or
xchg
mov
lea
stos
cmove
retf
call
sbb
push
cld
xchg
pusha
sub
sub
xchg
les
xchg
push
int3
push
mov
mov
sar
(bad)
push
cs
test
add
jo
rcl
movs
push
retf
iret
jne
cmp
xor
jns
out
jp
and
lea
jecxz
and
and
push
std
cmp
call
dec
adc
aaa
jno
enter
lea
cmp
xchg
sbb
mov
(bad)
adc
ja
mov
mov
int3
or
push
push
sbb
dec
mov
test
sub
out
adc
pop
push
clc
out
jns
and
ss
mov
nop
jns
popa
test
jge
in
dec
popa
dec
mov
sub
mov
jae
xor
hlt
fdiv
in
out
cmp
jae
popf
test
xchg
jno
sbb
and
cmp
dec
int
lock
cwde
add
push
mov
repz
in
mov
popa
iret
div
inc
int
mov
jle
and
adc
xor
ret
sub
test
(bad)
adc
icebp
cmp
arpl
fisubr
sbb
js
clc
in
(bad)
shl
shr
jae
xlat
pop
pop
enter
xor
sahf
add
loop
xchg
push
or
cmp
and
mov
and
js
pop
mov
repnz
iret
mov
imul
lock
add
pushf
ins
pop
push
adc
lahf
(bad)
int3
add
in
cwde
fdivr
add
adc
call
(bad)
xchg
enter
pop
xor
mov
and
outs
fidiv
mov
or
lea
addr16
sub
add
jno
cmp
dec
dec
fst
aad
push
ret
mov
shl
movs
scas
es
sbb
stos
rcl
imul
(bad)
or
outs
hlt
inc
cmp
mov
or
idiv
outs
les
out
cmp
inc
mov
and
addr16
xor
stc
stos
lds
mov
mov
(bad)
daa
or
divps
test
shl
cld
xchg
sbb
jbe
repnz
inc
call
mov
adc
dec
aad
or
stos
shl
fwait
jmp
in
add
push
xchg
mov
sbb
clc
(bad)
test
stc
xor
push
pop
push
imul
push
stos
(bad)
mov
pop
inc
cdq
(bad)
or
popa
mov
scas
dec
in
test
scas
pop
sbb
lods
xchg
mov
sub
stos
pop
out
inc
addr16
ja
into
bound
fisubr
(bad)
imul
rol
xor
and
inc
jns
add
pop
inc
gs
repz
lock
sahf
arpl
gs
les
mov
imul
dec
pop
ja
and
fdivr
repnz
enter
imul
sub
xchg
inc
mov
cmp
pop
call
adc
and
je
dec
inc
sub
loop
lods
mov
push
bound
fnsave
(bad)
sti
cmps
(bad)
rcl
stos
push
cmp
pop
test
dec
push
cli
and
(bad)
lods
and
xchg
arpl
aaa
pop
add
scas
and
pop
mov
mov
xchg
daa
dec
xchg
push
test
sbb
jecxz
mov
fwait
rcr
fmul
in
inc
sub
pop
dec
mov
outs
sub
mov
pop
fcomi
xchg
push
sub
push
sub
push
mov
mov
ficom
adc
scas
and
sub
out
retf
or
loop
push
push
mov
xchg
aad
int3
inc
jno
mov
jle
(bad)
mov
std
cmc
or
bound
dec
call
mov
aad
mov
in
fnstsw
ins
mov
cmp
sbb
pusha
xor
ror
clc
pusha
sahf
sbb
xchg
inc
xchg
inc
xchg
pop
mov
sbb
fnstsw
repz
inc
imul
or
sbb
push
add
or
sbb
scas
mov
or
cld
sbb
cmps
inc
outs
scas
shl
lds
sub
ins
xor
sub
(bad)
cdq
xchg
push
adc
cmp
sbb
cmc
xor
add
or
cmp
das
dec
movs
loopne
and
cmc
jle
pop
ss
hlt
mov
repz
pop
inc
jge
aam
leave
inc
xor
mov
or
mov
mov
inc
cmp
jo
fwait
in
mov
imul
(bad)
sahf
je
jo
stc
cdq
arpl
stos
fdivr
dec
sti
pushf
add
popf
adc
adc
and
ins
js
xchg
dec
mov
ins
shr
js
imul
in
repnz
push
pop
pushf
ror
push
pop
and
jae
fcomp
fisub
adc
inc
mov
push
cmp
pop
fadd
sar
neg
mov
dec
repnz
sahf
(bad)
sub
mov
mov
ficom
test
add
cli
fcomi
sbb
sub
les
stos
sbb
ja
and
(bad)
std
sbb
dec
popf
ja
(bad)
mov
(bad)
clc
mov
or
mov
ret
xchg
inc
mov
or
mov
jecxz
add
scas
ds
jno
mov
pop
sbb
adc
xchg
out
pop
sbb
fsubr
push
(bad)
mov
les
lods
mov
inc
(bad)
adc
mov
test
jge
pop
ja
push
add
stos
fsubr
xor
outs
xor
and
mov
xor
fisttp
add
jne
inc
jmp
push
push
(bad)
retf
nop
aas
xchg
cmps
inc
mov
cwde
ss
loopne
rcr
push
test
bound
arpl
or
test
mov
shl
daa
xchg
dec
inc
sbb
js
pop
(bad)
imul
sbb
push
js
dec
inc
data16
addr16
jge
mov
scas
pop
pusha
or
dec
sub
adc
aaa
call
rcl
mov
mov
cmp
sahf
int
add
fsubr
hlt
fistp
ss
pop
cld
cs
add
aas
enter
mov
cmp
xor
cmps
(bad)
shr
repnz
arpl
rol
push
in
or
ror
(bad)
pusha
sahf
push
cdq
mov
lea
sub
adc
ficom
je
test
push
inc
or
lods
rol
test
mov
sahf
popf
retf
inc
(bad)
ror
nop
sbb
jno
daa
cmp
inc
sub
cld
data16
js
out
inc
sub
sti
add
jns
test
xchg
and
fstp
adc
pop
sub
adc
and
xor
aaa
ja
push
jge
mov
cmp
adc
dec
inc
mov
jne
mov
sbb
rol
(bad)
mov
pop
cwde
sub
es
loopne
out
cmp
or
and
cmp
ins
cli
int
ins
add
dec
idiv
outs
sbb
push
push
in
xlat
pop
aad
(bad)
repnz
das
dec
es
fsub
push
sub
xor
pop
and
jmp
push
aad
int3
call
jae
movs
cmp
push
ins
ins
sbb
inc
inc
in
push
ret
ss
in
jns
nop
jl
stos
mov
sar
repnz
jle
nop
jl
retf
int
or
mov
std
mov
mov
push
jno
iret
(bad)
mov
pop
push
add
dec
dec
cmp
cmp
inc
rcr
inc
mov
dec
mov
and
jmp
cmc
call
or
pop
mov
loopne
lods
or
mov
not
sub
(bad)
xlat
or
rep
jg
xchg
(bad)
and
adc
inc
fwait
bswap
dec
addr16
lods
lahf
adc
cmp
dec
nop
and
sbb
add
ins
cmp
cmp
or
mov
(bad)
dec
adc
ret
push
out
adc
xor
bound
aad
std
and
out
jl
push
xlat
ins
fisubr
movhps
cdq
mov
sub
mov
icebp
ins
add
je
jle
pop
popf
mov
lea
dec
in
push
and
push
sub
and
xor
movs
pop
popa
or
push
or
cmp
jge
enter
dec
enter
add
lahf
js
sbb
or
cmc
cmp
lahf
cld
cs
cmovb
inc
cmps
call
pushf
js
cmp
add
sbb
rol
popf
inc
int3
(bad)
mov
xor
bound
popa
inc
nop
xchg
test
jns
fstp
inc
and
jmp
(bad)
xor
idiv
retf
inc
pusha
(bad)
cmp
add
jecxz
sub
popf
test
mov
add
(bad)
fwait
repz
or
cdq
jbe
pop
lea
pop
adc
loopne
scas
cmp
sbb
sub
xor
adc
push
cmp
xor
or
psrlq
push
ret
push
and
dec
popf
(bad)
cmp
iret
test
xchg
(bad)
lea
out
adc
ins
inc
inc
lods
imul
dec
sbb
and
cmp
in
mov
mov
push
mov
xchg
inc
push
sub
pop
imul
and
or
int
xor
shl
enter
ret
aad
sub
stos
nop
jge
stos
lods
inc
test
jo
movs
lea
fmul
(bad)
xor
cmps
cmp
mov
ds
mov
loopne
xchg
inc
lods
repnz
sbb
ret
repnz
ret
or
inc
fadd
xlat
inc
ds
add
and
or
and
dec
ds
jmp
addr16
movs
arpl
mov
adc
aas
xchg
ins
int
pop
leave
sub
loop
or
and
sti
(bad)
rol
repnz
imul
jp
cld
das
pop
int3
sub
or
cmp
mov
je
xlat
adc
movs
xchg
dec
ret
and
or
dec
loope
(bad)
aad
jp
add
retf
mov
mov
push
rcl
push
leave
and
(bad)
sub
fadd
into
inc
repz
es
in
fist
xchg
xor
cmp
and
fidiv
cmps
pushf
add
popw
and
xchg
and
lea
and
ss
add
dec
in
mov
ja
push
sbb
neg
and
rol
lods
mov
dec
lods
outs
movs
or
xchg
add
jne
push
push
into
and
scas
retf
repz
xor
dec
inc
clc
mov
lea
add
clc
int
cmp
pop
lea
lds
call
(bad)
jle
xchg
pop
imul
idiv
dec
mov
movs
cdq
xor
adc
adc
add
retf
rcl
cmp
sbb
rcl
test
cmp
ins
pop
int
mov
cmp
add
pop
mov
cmc
xlat
pop
int
mov
jl
cmp
adc
daa
idiv
push
iret
pop
jo
sub
aad
movs
sbb
sbb
ds
mov
mov
push
adc
loope
dec
jne
cmps
and
sti
(bad)
push
jge
inc
fs
dec
pop
lahf
repz
mov
jg
jnp
sub
fadd
jnp
mov
mov
mov
dec
mov
add
(bad)
test
xor
mov
fs
adc
movs
mov
mov
pop
test
shr
inc
pop
in
pusha
(bad)
scas
xor
and
add
cmc
cwde
mov
mov
mov
dec
out
jg
and
mov
sbb
mov
inc
scas
loop
adc
cmp
inc
fld
ins
enter
ret
int3
dec
jmp
mov
int3
in
jge
iret
leave
inc
ins
icebp
hlt
sub
cmp
cdq
mov
gs
dec
push
dec
(bad)
inc
mov
stos
ret
xchg
sahf
or
pop
loopne
stos
push
jne
ret
(bad)
into
pop
mov
adc
es
and
mov
jns
inc
lds
lods
push
mov
ins
inc
rcl
arpl
in
or
push
test
mov
sub
cmc
cmp
adc
mov
pusha
loope
push
cmp
and
mov
dec
pop
loopne
push
loope
pop
data16
lahf
btc
frstor
push
arpl
pop
into
pop
push
sar
adc
call
cmp
repnz
adc
mov
inc
sub
add
push
and
xor
test
jp
call
mov
add
push
sub
sub
dec
sub
and
push
fld
cwde
(bad)
sbb
cwde
loopne
movs
daa
cmp
adc
sub
loope
add
add
xchg
gs
mov
jns
add
test
fld
sub
imul
xor
pusha
les
addr16
and
mov
(bad)
into
mov
test
sbb
mov
pusha
adc
stos
inc
push
pop
push
sub
es
jae
pop
fsubrp
adc
loop
sbb
mov
loopne
add
and
mov
arpl
nop
jae
fsubr
sbb
add
mov
xchg
int
scas
xchg
mov
sub
inc
jmp
inc
lods
mov
push
mov
push
push
(bad)
xor
push
sub
mov
stos
sub
add
mov
push
stos
dec
fdivr
xor
sbb
mov
(bad)
(bad)
pop
sub
jle
sub
arpl
pop
inc
js
mov
mov
dec
mov
out
mov
es
xchg
add
mov
imul
icebp
ins
lea
enter
jg
mov
mov
push
mov
push
push
ret
add
int3
mov
add
add
cmp
rol
pop
inc
jg
push
push
imul
jnp
jae
pop
add
xchg
xchg
sub
das
jb
repnz
arpl
sub
mov
add
sbb
cmps
add
mul
push
adc
cs
imul
jmp
cmp
cmps
fimul
fidiv
and
or
dec
pop
out
aam
push
mov
mov
inc
loop
jb
mov
cmp
jmp
add
(bad)
aad
mov
adc
pop
ds
sti
fstp
shl
inc
rep
dec
pop
inc
out
in
dec
(bad)
push
shl
cld
cld
push
jmp
xchg
cmp
sub
arpl
adc
pop
pop
sub
ss
fimul
out
inc
outs
mov
push
shl
pop
cmp
push
movs
adc
inc
add
movs
loopne
fild
adc
xor
rcr
icebp
and
in
sub
aas
mov
mov
jae
push
out
(bad)
and
mov
js
mov
aad
xchg
outs
jns
jmp
mov
sub
push
fistp
cdq
ss
inc
icebp
fwait
mov
push
out
test
out
cmps
call
fcom
lahf
jmp
xor
mov
sub
xor
mov
pop
xchg
(bad)
xor
adc
icebp
jo
jae
aam
imul
xor
stc
xlat
fsubr
xchg
cli
push
cmc
inc
jne
push
arpl
xlat
mov
cmps
pop
xor
neg
out
xchg
mov
push
mov
inc
or
sub
jmp
mul
aam
inc
push
sbb
xor
outs
fs
std
inc
test
shr
sbb
loopne
fs
gs
mov
(bad)
or
dec
sub
mov
ss
or
add
sbb
xchg
pop
aaa
xor
aaa
(bad)
in
adc
cs
cli
scas
mov
sbb
push
xchg
pop
push
js
cdq
mov
push
(bad)
and
pusha
scas
sbb
mov
jno
pop
jg
sbb
sbb
xor
lock
cld
psadbw
out
sbb
mov
mov
shl
or
in
sub
shr
pop
pop
mov
out
mov
fisub
(bad)
fistp
jmp
lods
dec
out
pop
push
(bad)
mov
cmp
sub
mov
xchg
mov
sbb
test
add
hlt
icebp
mov
aad
lds
test
push
cmp
dec
sbb
test
retf
lock
mov
mov
and
jecxz
cmps
aaa
mov
jle
ret
aad
stos
icebp
imul
inc
test
int
push
jl
mov
sti
pop
sub
mov
cli
mov
mov
scas
(bad)
fistp
cmp
lock
stos
jle
jle
sub
cmp
test
stc
adc
mov
repz
les
sbb
push
push
xor
shr
mov
das
test
add
addr16
ins
or
out
jmp
outs
iret
(bad)
jg
mov
fcmovne
stos
or
jno
test
in
rol
clc
fnstsw
ret
mov
fld
fs
jge
retf
cli
sbb
shr
daa
sub
div
cmp
mov
mov
mov
sbb
shl
sub
dec
dec
imul
mov
stc
(bad)
cli
add
pop
push
mov
aas
inc
jge
shr
stos
mov
mov
call
test
mov
int3
add
fwait
mov
rep
movs
lahf
dec
jo
xlat
mov
sahf
mov
cmc
push
and
stc
cmps
stos
clc
push
jns
out
inc
mov
add
(bad)
xchg
xchg
scas
push
add
and
jb
dec
scas
xchg
push
call
add
push
shl
xor
push
jns
xchg
iret
inc
mul
std
sub
pop
lock
jb
sbb
test
dec
sub
les
mov
mov
or
out
and
jb
sub
mov
xchg
gs
jo
fsubr
pop
and
(bad)
inc
and
jns
dec
ds
inc
xor
add
and
sbb
dec
addr16
push
mov
sbb
push
fidiv
mov
pop
push
sbb
in
int
xlat
xchg
mov
popa
loopne
pop
push
fcomp
aas
lahf
jmp
out
xlat
popf
and
out
popa
ret
xor
jmp
cli
pop
movs
in
jnp
and
push
mov
int
xor
mov
fcmovnb
mov
fistp
repz
adc
repnz
(bad)
scas
push
cmp
test
xor
loope
pop
xchg
mov
pop
mov
jns
mov
enterw
inc
ret
mov
xchg
int3
pop
mov
in
ja
adc
jmp
mov
leave
inc
scas
fstp
mov
hlt
cld
cmp
in
ret
(bad)
push
or
addr16
ins
loopne
and
fs
mov
xor
test
and
dec
cmp
daa
cmc
mov
sbb
or
cli
pop
lods
lds
mov
sahf
cmp
jp
cmp
(bad)
adc
jge
out
pop
jo
mov
arpl
or
hlt
es
push
xor
lea
jmp
(bad)
dec
(bad)
(bad)
jno
push
push
(bad)
jmp
test
hlt
pop
fimul
cmps
js
in
nop
lods
add
mov
xor
mov
aaa
sbb
mov
test
(bad)
seta
fcmovne
xor
push
adc
(bad)
mov
sahf
pop
xchg
sub
mov
sbb
fdivr
and
adc
popf
out
stc
retf
(bad)
cwde
adc
pop
xor
je
or
xchg
int
push
les
xor
jnp
jne
jbe
(bad)
sbb
mov
fidiv
push
ss
mov
inc
data16
in
je
push
fs
jl
fistp
ja
test
mov
retf
bound
cld
and
pop
jno
mov
inc
ja
xchg
xchg
mov
js
mov
sbb
push
adc
sbb
xchg
inc
outs
jns
jae
pop
jp
mov
jmp
mov
rcl
dec
cmp
cmps
inc
movs
shr
mov
sbb
arpl
xor
mov
ret
in
nop
fwait
xchg
sub
and
or
cmps
and
jae
shr
scas
mov
ds
xchg
jb
mov
jmp
dec
push
in
inc
fcom
mov
xlat
outs
adc
hlt
adc
cmps
mov
movs
fsubr
(bad)
stos
rep
or
inc
xchg
jnp
push
jnp
and
fs
mov
bound
inc
sub
test
popf
nop
in
imul
xor
push
movs
sahf
idiv
ss
stc
inc
call
hlt
sbb
sbb
fcomp
push
movs
sbb
mov
mov
sbb
imul
out
xor
adc
scas
or
dec
(bad)
mov
mov
xchg
dec
rep
push
adc
jmp
mov
int3
push
pop
imul
push
imul
cmp
xchg
cmp
inc
data16
or
lea
mov
sbb
repnz
inc
sbb
sbb
jae
mov
jmp
jne
ins
loop
fs
(bad)
mov
pop
cli
jo
ficom
jb
in
enter
xor
sbb
and
push
sbb
cmp
arpl
mov
or
jmp
xchg
in
mov
aam
ins
lea
fist
jle
xchg
xor
jp
pop
and
aaa
jnp
test
sub
data16
push
dec
jecxz
cmps
inc
arpl
nop
mov
or
jns
pop
jae
rep
adc
jl
ds
jae
mov
aad
pop
xlat
inc
outs
sub
pop
cli
popa
inc
sub
jg
push
mov
ror
fst
or
jbe
mov
add
mov
int3
addr16
jno
sbb
cs
mov
push
mov
sbb
xor
or
(bad)
jmp
aas
xchg
or
add
fwait
push
xlat
sbb
fld
das
ja
in
inc
xor
mov
sar
jae
rol
push
rcr
lods
ss
jl
pop
xchg
mov
frstor
pop
nop
push
xchg
jb
test
sbb
push
sub
mov
add
out
dec
cli
push
or
into
cmps
or
inc
jge
and
add
pop
outs
(bad)
jl
pop
je
ins
and
cmp
sub
and
jmp
cwde
mov
rcr
dec
scas
or
mov
dec
(bad)
clc
push
push
sub
mov
sub
mov
sub
inc
push
jns
pop
mov
inc
lea
xchg
shl
jo
fwait
sub
jno
ds
mov
xchg
or
add
in
ins
in
mov
or
call
les
arpl
cs
push
cli
sbb
(bad)
pop
or
xchg
repz
xor
push
cmp
out
(bad)
mov
xchg
push
cmp
dec
mov
xor
mov
inc
ja
sti
outs
push
jae
inc
xor
repz
enter
shl
rcl
into
mov
inc
cmp
mov
or
sar
sbb
call
and
loop
imul
adc
pusha
in
les
and
data16
mov
fcom
sbb
sub
xor
push
cdq
mov
leave
addr16
ret
mov
push
sub
ss
test
out
inc
pop
cmp
jbe
mov
int
jmp
inc
lds
aas
push
push
ins
mov
inc
shl
call
xchg
xor
loope
pop
mov
jno
lahf
sbb
mov
rol
mov
jnp
mov
arpl
fiadd
adc
out
mov
fdiv
jo
xor
add
mov
sub
mov
(bad)
mov
or
inc
push
sbb
call
inc
cmp
push
pop
addr16
aad
mov
and
or
mov
jmp
xor
add
(bad)
mov
ficom
push
test
not
lock
out
add
fdiv
aas
daa
(bad)
pop
and
push
mov
hlt
jns
int3
pop
into
mov
sahf
adc
mov
jno
addr16
push
imul
mov
and
mov
mov
sar
retf
pop
push
cmp
mov
jne
mov
fisubr
adc
out
lea
jecxz
cmp
pop
mov
aam
xor
dec
xor
cmc
(bad)
and
in
stc
nop
add
xor
sbb
or
xor
shr
sub
inc
(bad)
xor
xor
pop
into
aad
mov
mov
(bad)
jle
cmp
xlat
outs
fldcw
aas
mov
mov
mov
pop
cmp
jmp
pop
fadd
xor
or
bt
xor
test
or
(bad)
aam
mov
sbb
push
xor
rcr
add
test
mov
test
mov
adc
xor
dec
sbb
retf
jns
cwde
pop
mov
pusha
jbe
aam
xor
test
lea
push
sbb
loop
lods
inc
lea
inc
sbb
cmp
or
icebp
sbb
movs
mov
sar
and
loope
adc
(bad)
cmp
pop
adc
sbb
es
and
ror
sbb
js
call
jl
add
(bad)
ins
call
addr16
jmp
xchg
ds
inc
(bad)
adc
sbb
inc
jbe
adc
outs
ret
dec
cmp
xchg
out
jmp
xor
out
add
lahf
xlat
mov
pop
and
jmp
aas
aam
cs
ds
push
mov
call
pop
xchg
scas
out
adc
lea
push
das
push
jo
int3
out
or
ins
adc
mov
xor
retfw
mov
jge
dec
mov
adc
sub
cmps
lock
push
push
out
int
iret
(bad)
hlt
(bad)
fnstcw
test
jno
out
or
dec
xor
push
jbe
bound
jecxz
pop
jle
int
dec
(bad)
jae
xor
ss
outs
sbb
dec
push
retf
cli
mov
inc
aad
movs
pusha
idiv
movs
and
and
retf
add
push
adc
stos
push
xor
jo
or
push
aam
xor
cmp
mov
dec
stc
jo
dec
sahf
sbb
fisubr
mov
xchg
test
pop
sbb
or
push
and
mov
out
icebp
repz
add
(bad)
adc
shl
mov
jne
dec
sbb
adc
mov
sub
xchg
or
cdq
dec
lods
std
mov
repnz
jmp
and
pop
or
paddusb
xchg
lock
ss
mov
shl
pop
les
adc
movs
retf
test
mov
and
xchg
inc
sti
(bad)
cmps
adc
xchg
dec
lds
push
movs
adc
jge
in
out
jbe
iret
dec
shr
push
push
pop
pop
sti
js
xchg
and
repz
inc
pusha
out
out
sbb
adc
stos
xchg
mov
jo
inc
cmp
and
in
(bad)
outs
sub
and
cmp
dec
adc
into
fldenv
mov
cli
jecxz
adc
nop
mov
inc
lds
jp
(bad)
sbb
inc
leave
mov
idiv
mov
inc
inc
das
scas
gs
retf
and
inc
lock
xchg
adc
cmp
pop
int
inc
pop
in
fcom
iret
or
push
push
xchg
into
push
out
pop
test
sbb
rcr
jecxz
xor
sahf
pushf
popa
lea
jns
fdivr
cmp
xor
in
jp
mov
popf
cs
push
inc
mov
and
mov
loopne
jb
pop
lods
out
cmc
js
jo
xchg
xlat
jmp
test
stos
icebp
or
sbb
xchg
jl
es
add
add
and
fcomp
lock
cs
push
and
mov
je
rol
adc
jge
and
daa
and
addr16
je
sub
imul
div
jl
pushf
mov
cmp
mov
inc
sub
into
xchg
ins
std
mov
mov
add
cmps
loop
movs
dec
mov
or
aad
in
xor
stos
fild
int
out
repnz
(bad)
push
call
les
push
clc
in
xchg
jae
mov
mov
ins
or
or
cs
push
mov
loope
inc
inc
out
sbb
sbb
(bad)
enter
sbb
dec
dec
cmp
inc
pop
es
xchg
ins
dec
jp
jbe
mov
add
sub
push
dec
iret
mov
sbb
jge
js
jae
test
aaa
call
mov
push
in
and
mov
js
push
lahf
and
in
sbb
out
adc
push
es
jmp
gs
popf
ins
bound
adc
mov
(bad)
out
daa
add
in
mov
jmp
xor
lods
mov
js
(bad)
stc
inc
sub
add
cmps
jo
xor
mov
cmp
hlt
mov
ja
(bad)
movntps
stc
jmp
mov
in
retf
mov
push
mov
xchg
add
in
jecxz
scas
mov
mov
jmp
movs
aaa
sbb
mov
out
loop
adc
xor
pop
stos
push
mov
dec
xchg
mov
int
mov
mov
mov
imul
jmp
push
scas
mov
mov
js
xchg
push
mov
lods
dec
test
push
dec
fs
outs
mov
inc
mov
call
push
cmp
lock
mov
rol
push
scas
sbb
out
or
pop
jb
mov
xchg
sub
push
rcl
movs
idiv
sar
adc
adc
and
mov
pushf
adc
add
sub
or
enter
call
stos
fwait
xor
mov
enter
mov
test
fdiv
out
arpl
fsub
push
jbe
pop
xchg
hlt
loopne
fcmovu
push
fstp
dec
dec
sar
out
xlat
out
cld
xchg
pop
shr
nop
and
(bad)
or
(bad)
ins
pop
test
jl
lahf
push
fs
scas
push
pop
daa
scas
push
xor
neg
adc
cmps
push
dec
sbb
and
std
sbb
ins
scas
std
push
outs
ficomp
xor
scas
mov
adc
sti
jle
mov
jg
test
or
std
les
sti
mov
add
int3
and
xchg
cmp
inc
es
lea
pop
pop
outs
fdivr
aas
jne
mov
dec
nop
jae
sbb
mov
push
pop
push
pusha
dec
or
xchg
pop
pop
sbb
loopne
mov
fdiv
inc
mov
(bad)
movs
or
ret
je
inc
ret
in
add
out
leave
data16
cmp
xor
jnp
sub
leave
adc
cwde
jns
mov
xchg
sub
inc
dec
xchg
imul
or
xor
inc
nop
fistp
mov
lods
sub
fstp
(bad)
cmps
cmps
mov
fstp
mul
mov
cmp
arpl
and
add
ins
icebp
stos
cli
sub
call
jae
mov
stos
add
ins
scas
dec
push
out
out
inc
xchg
and
jge
stos
jo
add
inc
inc
sub
jb
lock
jno
xor
jmp
jae
stos
jns
pop
mov
mov
nop
mov
sti
and
lds
pop
mov
fwait
push
fst
stc
idiv
mov
sbb
pop
xor
enter
push
imul
cmp
jmp
push
sub
or
xor
mov
rcr
jbe
popf
dec
or
mov
out
repnz
les
dec
sbb
sbb
jae
sub
mov
mov
jge
jmp
enter
mov
jmp
or
adc
pop
add
push
mov
pop
(bad)
dec
test
ins
push
sbb
imul
movs
fwait
mov
xchg
dec
sbb
lds
push
sahf
push
leave
xor
inc
out
cmp
inc
jnp
lds
pop
(bad)
out
(bad)
test
data16
clc
bnd
and
and
aad
pop
cmps
imul
inc
jg
jno
push
movs
jns
pop
arpl
sbb
cwde
cvtps2pi
imul
int3
push
sbb
dec
repz
sub
jle
sti
or
inc
sbb
inc
sbb
popf
imul
cmp
mov
jmp
ret
push
inc
mov
and
stos
jecxz
jne
jg
lods
xchg
mov
push
mov
pop
cmp
inc
test
imul
pop
aaa
push
out
jg
hlt
sub
test
imul
jne
mov
outs
adc
aam
mov
xchg
push
gs
loope
(bad)
xchg
sub
add
adc
cmp
sub
mov
inc
or
(bad)
fstp
je
repnz
(bad)
ficom
add
dec
jmp
int3
xchg
mov
sub
cmp
cmps
pop
add
dec
ss
test
push
push
fsub
(bad)
or
mov
cmp
cmp
or
push
lock
cmp
fsub
imul
or
jmp
add
imul
fstp
inc
outs
push
loop
cmps
push
xchg
call
inc
push
daa
sub
mov
outs
and
(bad)
icebp
popf
addr16
movs
inc
ss
gs
ins
cld
xchg
popf
pop
test
xchg
rcr
push
cmp
js
and
push
dec
cdq
iret
mov
scas
mov
pop
mov
in
adc
add
push
add
cmps
movs
mov
push
scas
add
jb
sbb
addr16
in
adc
in
aam
scas
mov
inc
mov
jle
inc
mov
mov
out
cmp
cs
xor
push
mov
(bad)
adc
xor
jecxz
jl
sbb
jl
not
arpl
bound
adc
jmp
mov
(bad)
das
pop
adc
push
outs
es
mov
xor
cmps
jge
jle
popf
add
outs
fucom
jnp
stos
adc
test
and
pop
jl
rcl
pusha
pop
adc
daa
push
movs
sbb
mov
jae
push
adc
cmp
sbb
inc
leave
pop
leave
cwde
scas
or
and
mov
add
inc
gs
cmp
scas
sub
dec
adc
not
dec
push
loop
mov
das
movs
mov
xchg
ds
fstp
jg
iret
pop
push
adc
int3
je
or
xchg
fadd
pop
xchg
mov
pop
dec
pop
popf
jne
inc
mul
mov
(bad)
jnp
mov
leave
test
clc
test
adc
ins
dec
and
cmc
nop
and
out
push
or
mov
sbb
jb
(bad)
imul
mov
pusha
jge
stos
mov
retf
lahf
aad
sub
inc
xor
std
leave
jl
ss
push
pusha
icebp
or
fsub
xchg
xlat
cwde
sub
mov
jg
mov
dec
adc
fcomp
fwait
jecxz
cmps
movs
dec
inc
test
or
pop
xchg
push
adc
stos
push
mov
add
push
ins
fisttp
aam
lahf
fidiv
lea
mov
in
mov
jg
mov
push
pop
es
sar
mov
jb
pop
jne
js
push
or
rol
mov
ret
dec
out
add
sub
in
sub
cmp
push
dec
in
pop
bound
aad
pop
in
push
jno
ret
sbb
fsub
xor
lods
pop
xchg
retf
sti
xchg
xchg
lahf
dec
and
dec
mov
mov
xchg
sbb
cs
sbb
out
rcr
sub
fcomp
daa
mov
xor
imul
loop
mov
scas
mov
in
sbb
rcl
pop
shl
jbe
not
mov
mov
je
enter
push
mov
loope
xlat
pop
ficom
push
out
and
sbb
dec
gs
push
push
sahf
call
call
or
call
call
dec
in
add
nop
into
mov
push
shl
dec
in
jg
shl
cwde
xchg
cmps
das
add
(bad)
loopne
scas
inc
cli
ret
loop
test
xchg
cwde
cmp
(bad)
xchg
pop
add
xor
cmp
inc
aam
xchg
out
dec
mov
jmp
jae
mov
mov
ret
jecxz
jno
dec
je
mov
jmp
push
inc
aas
out
iret
ja
repnz
inc
iret
push
std
out
scas
pop
fstp
ins
sbb
xchg
jo
sub
sub
pop
jle
mov
test
pop
stos
in
shl
or
sub
in
sub
das
popf
push
or
pop
(bad)
out
sub
xor
sub
jmp
mov
js
add
rol
xlat
dec
xor
test
mov
push
dec
mov
(bad)
rcl
xchg
lock
xchg
not
add
out
fcmovbe
scas
mov
call
push
scas
jb
sbb
fimul
mov
mov
xchg
out
bound
outs
daa
pop
push
add
addr16
xor
sub
lahf
ds
cmp
fwait
xor
call
or
sar
push
movs
pop
cld
mov
mov
loop
outs
retf
icebp
shl
scas
jg
sub
and
mov
icebp
iret
in
jb
outs
inc
int
jno
popa
or
out
sbb
jmp
and
dec
inc
cld
adc
stc
push
pop
cmp
popa
sti
je
mov
out
call
jnp
icebp
leave
jp
mov
push
ss
retf
inc
or
scas
iret
jmp
pusha
jo
sub
or
xlat
xor
dec
and
lock
add
loopne
inc
clc
cli
push
fdivr
sub
loop
repz
jp
(bad)
sahf
mov
out
jo
hlt
jbe
adc
sti
icebp
mov
xchg
mov
inc
and
rcr
in
pop
cmp
sub
adc
int
mov
xchg
mov
jbe
rcr
js
popf
sub
inc
sub
or
sub
pop
jmp
add
rol
shr
enter
lods
pop
ins
es
mov
push
mov
rcr
and
sti
mov
mov
adc
fs
or
retf
add
call
push
fdiv
or
xor
int
cld
jmp
fcom
sbb
or
lods
cli
clc
iret
(bad)
out
jne
ja
and
dec
fld
imul
clc
imul
pop
xor
jnp
or
popa
sbb
je
sbb
lock
add
outs
xor
xlat
sub
movs
sub
push
pop
sub
call
pop
sbb
out
mov
adc
xchg
push
ss
or
enter
and
push
fdivr
sub
or
and
jbe
mov
repz
push
outs
jno
adc
pop
adc
aas
mov
xchg
push
mov
and
pop
icebp
fwait
inc
jmp
aas
mov
sub
pop
or
dec
mov
jmp
jb
(bad)
(bad)
push
or
inc
sbb
jecxz
and
mov
loope
daa
fwait
(bad)
les
add
inc
(bad)
adc
add
arpl
pop
addr16
mov
push
int
push
mov
not
cmp
stos
pop
pop
xor
adc
ret
xchg
int3
ror
fistp
inc
jge
mov
inc
aam
adc
push
cmp
nop
cmp
add
data16
inc
xlat
or
xor
imul
(bad)
cmp
scas
pop
lea
fist
xor
mov
fwait
stos
xchg
retf
out
and
push
sbb
xchg
cs
and
mov
pop
ret
inc
popf
inc
(bad)
sub
xchg
scas
mov
add
repnz
jae
xor
cs
ror
cdq
hlt
cwde
cdq
push
pop
mov
stos
scas
sub
divps
sbb
mov
pushf
jmp
adc
and
push
test
adc
xor
add
jmp
add
ret
adc
mov
jmp
js
pop
sub
pop
std
fistp
inc
ffree
add
sbb
sti
icebp
ja
xchg
ins
add
mov
retf
popa
gs
sbb
or
nop
xor
add
push
fldenv
hlt
jae
push
and
inc
mov
cs
xchg
mov
sub
add
or
movs
or
jmp
xor
push
mov
imul
push
and
pop
sbb
or
mov
push
out
in
and
sbb
mov
bound
xchg
cld
cwde
adc
jmp
inc
aas
dec
loop
loop
and
adc
mov
pop
mov
pop
aas
mov
mov
in
and
fsubr
(bad)
retf
sbb
mov
pop
dec
arpl
mov
push
push
and
push
(bad)
das
cmc
push
daa
mov
and
into
test
out
dec
lock
xchg
jae
retf
shl
xor
jnp
mov
xchg
xchg
push
xchg
cmps
add
test
imul
sbb
mov
jnp
xchg
cld
test
fiadd
data16
scas
xchg
mov
or
out
call
sub
jb
add
dec
push
mov
and
pop
lea
cmps
push
sahf
xchg
(bad)
movs
xor
mov
in
push
push
xor
call
sbb
cmc
stos
stc
push
mov
mov
out
shl
fstp
jbe
cmp
sub
jle
pop
xor
fld
adc
adc
pop
(bad)
xor
xchg
inc
bound
and
sbb
push
mov
sti
into
stos
or
gs
and
cmp
out
(bad)
retf
push
jge
or
jmp
push
int3
inc
in
inc
in
add
jl
inc
inc
cmp
popa
in
lahf
add
push
in
(bad)
push
call
es
add
jmp
push
int
jge
ror
mov
jo
fbstp
dec
cli
(bad)
data16
popa
mov
push
xor
and
arpl
mov
outs
fmul
push
pop
es
shl
mov
fs
push
ds
sub
leave
scas
inc
pop
xchg
xor
ret
mov
or
ss
and
inc
push
lahf
clc
fst
inc
div
repnz
fprem
pop
stos
mov
sbb
and
xchg
cmp
xchg
adc
inc
mov
pop
jp
ins
cmp
inc
and
push
fs
and
sar
in
mov
jmp
or
dec
movs
jo
mov
add
sbb
add
sbb
jge
jno
add
and
fcom
lea
sahf
shr
push
xor
cwde
xchg
test
sbb
mov
mov
(bad)
icebp
mov
xchg
mov
or
outs
fisub
push
jno
inc
ss
stos
inc
inc
pop
pop
lods
inc
cmp
push
mov
rcl
mov
add
push
jp
add
mov
iret
aaa
adc
rcl
mov
hlt
into
loopne
and
loopne
mov
xchg
shr
popf
pop
rcr
shl
push
ds
mov
and
in
(bad)
scas
ficom
mov
cmp
inc
pop
mov
xor
or
stc
loope
dec
jle
sub
push
cwde
sub
mov
mov
fbld
(bad)
repnz
retf
cmp
retf
enter
aam
and
leave
jo
jnp
mov
mov
xor
sub
sbb
xchg
sbb
(bad)
ror
xchg
dec
dec
xchg
fs
lods
dec
(bad)
cmp
jp
sub
fdivr
mov
mov
jp
int
rcr
xor
aam
add
(bad)
adc
ins
addr16
ja
add
iret
lods
(bad)
(bad)
lock
stos
cmps
or
or
fs
mov
cmp
fst
mov
xchg
pop
out
movs
or
ins
popa
popf
ds
repnz
mov
shr
mov
jae
daa
loopne
das
rcr
sbb
in
xor
movs
mov
clc
sbb
call
push
out
(bad)
sar
ret
mov
or
mov
xchg
push
pop
xchg
aad
xchg
ins
std
loope
and
sbb
popa
lock
mov
cmc
out
fwait
pop
stos
test
sbb
push
jg
popf
mov
and
jnp
dec
out
loopne
add
jns
sti
(bad)
push
outs
push
cmp
(bad)
and
out
sub
les
mov
and
xor
int3
sub
pop
mov
mov
add
rol
scas
iret
mov
sbb
fmul
into
pop
cmovae
shr
pop
es
pop
daa
dec
pop
xchg
xchg
or
sbb
jmp
push
inc
xor
test
outs
and
dec
daa
sbb
into
les
std
arpl
rcr
jmp
mov
frstor
nop
mov
call
cmp
inc
push
mov
sub
imul
xor
xor
loopne
fisubr
popa
inc
cmps
fs
sub
xchg
out
test
clc
adc
dec
push
adc
jmp
mov
pushf
neg
fdivr
clc
push
push
mov
inc
push
add
mov
mov
push
ret
gs
cmp
in
xor
xchg
jo
pop
js
sub
popa
sub
arpl
jnp
imul
xchg
xor
jo
dec
fsubr
shr
mov
adc
test
ins
js
sub
jnp
rcl
or
adc
cdq
pop
mov
out
sbb
adc
sub
fist
ret
(bad)
mov
(bad)
jle
sbb
add
popf
jns
inc
rcl
sbb
xor
xchg
mov
xchg
pop
sbb
enter
fidiv
and
mov
mov
adc
add
jmp
pop
sbb
es
jae
inc
cli
rcl
jg
movs
pop
es
fprem1
jbe
or
xor
mov
(bad)
mov
(bad)
call
daa
rol
cmp
dec
pusha
and
push
leave
test
jl
push
push
ret
inc
fld
fs
stc
adc
call
pop
cmp
xor
dec
xor
mov
xor
xchg
mov
aad
xchg
shl
in
adc
add
fild
fnstenv
scas
xchg
sub
call
iret
pop
inc
dec
stos
fiadd
and
shr
jle
loop
sbb
push
xchg
scas
mov
jo
add
ins
mov
imul
xchg
loope
or
mov
mov
inc
(bad)
fdivp
sbb
(bad)
pop
repnz
adc
sbb
add
int3
ja
mov
push
sub
jmp
mov
popf
mov
add
lods
inc
mul
inc
dec
sar
adc
(bad)
imul
neg
sar
mov
sahf
dec
scas
mov
pusha
push
(bad)
out
mov
mov
test
icebp
dec
fst
xchg
or
adc
sub
dec
cld
lahf
add
es
shl
dec
stos
xchg
xchg
sbb
iret
mov
mov
inc
xchg
pop
inc
sub
cli
and
pusha
cdq
(bad)
or
xchg
xor
mov
sub
cdq
dec
fwait
hlt
fprem1
cmp
les
sub
xor
dec
mov
mov
adc
mov
lds
jnp
fild
inc
dec
dec
sub
push
fcom
call
push
xor
cmc
and
cmp
jl
jp
es
stc
retf
push
push
out
cmp
xchg
rcl
out
add
inc
leave
leave
shl
add
inc
push
arpl
mov
shl
sbb
sbb
lods
fwait
call
imul
cli
push
addr16
dec
repnz
push
ja
fisttp
jl
bound
sub
mov
sti
pop
test
xchg
rol
jmp
lods
mov
cmp
mov
dec
jmp
fdivr
push
cmp
push
stos
xor
jecxz
ret
out
push
xor
das
push
mov
scas
fimul
mov
cmp
in
push
leave
inc
aad
in
jnp
cmps
(bad)
clc
push
popa
call
cmp
outs
pop
xor
aad
xchg
out
pushf
add
call
in
mov
pop
stos
pop
daa
sbb
jecxz
clc
out
push
rcl
mov
push
dec
pop
or
cmps
inc
mov
jns
mov
push
iret
fnstenv
(bad)
cli
inc
xor
mov
jae
iret
ins
and
jno
push
shl
dec
outs
lods
mov
shr
inc
sbb
mov
cli
test
fbld
jno
popf
add
scas
mov
push
inc
push
adc
loope
xchg
mov
add
jp
sbb
lahf
xchg
push
xchg
inc
cli
outs
faddp
cmp
sub
aas
xchg
(bad)
and
sbb
mov
add
fadd
mov
add
jnp
scas
(bad)
ja
or
shl
daa
cmps
mov
mov
fbld
ret
sub
mov
adc
mov
mov
in
getsec
repnz
jno
es
adc
aas
sub
mov
jnp
daa
fbld
cmc
neg
in
push
and
loopne
xor
into
push
lock
outs
mov
push
lods
pop
adc
outs
rcl
and
jmp
jecxz
xchg
icebp
cs
retf
test
fcomip
and
out
std
adc
aas
pop
mov
test
pop
xchg
or
cmps
adc
aaa
inc
xor
inc
mul
in
cli
jmp
in
das
ficom
mov
out
adc
clc
push
add
sbb
mov
ret
test
sub
imul
scas
jae
push
outs
jno
mov
lock
(bad)
outs
ror
xchg
add
scas
adc
sub
push
xchg
loope
lds
mov
vhsubpd
ret
aaa
inc
pop
inc
inc
sti
ffreep
shr
call
mov
jno
cmp
mov
push
ds
into
sub
js
call
mov
xor
mov
inc
add
inc
sub
or
in
add
(bad)
outs
movhlps
add
pushf
adc
dec
add
(bad)
cwde
pop
jnp
fadd
pushf
mov
inc
call
push
pop
call
hlt
inc
mov
pop
adc
inc
cmps
adc
in
clc
mov
pop
adc
mov
mov
scas
addr16
push
inc
or
pop
fst
ret
popa
inc
push
or
mov
xor
and
cs
jmp
cmc
xor
sub
mov
ja
inc
inc
and
xor
jl
and
adc
lahf
int
shl
scas
fadd
test
lods
inc
jbe
jge
pop
lea
fwait
xchg
add
lods
pop
ins
fimul
inc
(bad)
xchg
and
lea
ins
in
(bad)
sub
push
sti
aam
push
in
setle
test
add
ret
lea
aad
(bad)
hlt
mov
mov
xchg
pop
hlt
pushf
pop
ret
jge
mov
arpl
mov
push
imul
stos
xor
iret
mov
sub
js
jns
sbb
pop
movs
mov
push
pop
rcr
sub
int3
mov
pop
popa
cdq
add
lea
shl
popa
idiv
out
adc
aas
sti
and
js
test
fwait
lods
imul
push
inc
cwde
fld
loop
push
jne
ja
or
retf
pop
jmp
jp
cmp
push
mov
aam
xor
pop
enter
lods
push
test
add
or
ins
pusha
mov
xor
or
enter
into
cmp
push
ins
movs
sbb
fisttp
test
sub
ret
mov
or
cld
outs
shl
mov
es
cmp
mov
mov
xor
adc
out
jmp
(bad)
nop
jbe
mov
shl
adc
mov
inc
pop
ret
repz
cli
jnp
xchg
in
outs
add
lods
sbb
fucomp
das
sub
call
jmp
cmp
cmps
push
stos
mov
jge
mov
cmp
ficom
push
pop
enter
add
lods
pop
xbegin
dec
enter
xchg
out
xor
mov
mov
xor
cmp
rol
xchg
icebp
mov
mov
adc
int3
add
dec
dec
cli
dec
jnp
add
and
nop
test
lods
push
jmp
cmp
sbb
jo
sbb
dec
ins
clc
loopne
mov
or
sbb
aas
out
push
sbb
lock
dec
retf
jb
repz
sar
out
stc
cmp
inc
sahf
add
sbb
mov
out
and
test
nop
adc
and
cld
adc
ins
fidivr
xor
addr16
das
push
mov
push
sub
and
jb
or
test
in
mov
(bad)
push
stos
in
ret
dec
jecxz
call
retf
arpl
sbb
in
arpl
imul
adc
mov
push
pop
out
fisub
xchg
mov
clc
inc
in
cmp
pop
inc
das
mov
fdivr
call
jmp
gs
cmp
push
dec
mov
push
jmp
fisubr
jl
repnz
or
xchg
jno
ja
(bad)
clc
dec
mov
dec
jb
mov
sbb
daa
jnp
and
add
icebp
mov
mov
push
fdivr
in
mov
cmps
cmp
cmps
shr
scas
enter
mov
outs
std
mov
bound
add
addr16
addr16
add
mov
jbe
fimul
inc
int3
xchg
inc
popf
mov
gs
xchg
ins
mov
jb
aad
xchg
mov
jno
leave
push
cmp
(bad)
cmps
shr
xchg
data16
jle
in
retf
pop
push
call
mov
pop
dec
fs
stos
test
out
les
movs
mov
movs
mov
sub
sub
in
mov
sar
sbb
push
pop
sub
(bad)
xor
mov
xchg
jns
jne
pop
fst
pop
mov
ss
sub
addr16
xchg
ret
int3
ss
in
imul
sub
pusha
dec
pop
retf
(bad)
push
test
rcr
loope
mov
mov
sti
out
and
lods
retf
ror
pop
xchg
adc
or
dec
add
(bad)
cmp
out
fcom
cmps
inc
(bad)
jmp
xor
sub
arpl
or
adc
imul
jmp
pop
into
lahf
jbe
mov
sub
jp
and
inc
hlt
push
xchg
shl
dec
inc
cmp
lds
(bad)
xlat
xor
sub
mov
nop
cwde
pop
push
repnz
cmp
sti
cmp
dec
dec
mov
inc
mov
sub
in
jl
loop
push
ja
push
popa
jmp
xchg
push
dec
mov
and
std
test
fwait
add
inc
stos
out
xchg
sbb
dec
adc
loope
xor
or
xchg
mov
ja
cs
es
sub
outs
test
(bad)
into
xor
scas
into
cmp
xlat
(bad)
(bad)
popa
aas
pushf
popf
retf
les
(bad)
outs
lods
fiadd
das
loopne
mov
cmp
sub
clc
mov
add
xchg
xchg
jmp
in
fwait
push
sar
and
rol
mov
mov
mov
mov
pop
jge
mov
in
or
xor
fistp
out
and
out
xor
push
icebp
cmp
ret
dec
dec
adc
movs
movs
jle
test
mov
call
sub
dec
xchg
push
cdq
sub
test
pop
pusha
jnp
nop
push
sub
bound
popf
adc
xor
cmp
or
aas
adc
ficom
dec
fistp
sar
(bad)
or
fsubr
fcomp
not
or
stos
leave
inc
dec
sbb
loop
inc
iret
or
mov
or
inc
dec
scas
std
cmp
inc
ret
mov
pushf
mov
sbb
jecxz
loop
test
in
push
mov
pop
sbb
sbb
jmp
(bad)
in
adc
call
push
pop
mov
aas
lods
loope
dec
mov
xchg
add
enter
je
add
and
xchg
loope
lds
push
dec
xor
or
cdq
mov
adc
clc
add
xchg
or
mov
or
push
inc
cmps
pop
or
fmul
out
loope
mov
imul
pop
aad
pusha
mov
jne
pop
imul
xlat
test
int3
bound
xor
test
repz
jb
mov
cmps
jne
imul
aam
out
lea
test
scas
push
pop
stc
shl
xchg
popf
fist
adc
xchg
inc
cdq
lahf
adc
push
repz
mov
cmc
xor
icebp
inc
adc
call
es
push
dec
popa
(bad)
(bad)
push
std
sub
xor
test
xchg
adc
xlat
mov
push
test
(bad)
push
popf
xchg
or
(bad)
dec
jne
push
pushf
mov
std
rcr
nop
inc
sub
push
jmp
pop
cmp
dec
stos
shl
xor
sub
and
outs
push
jp
outs
jno
pop
addr16
pop
jg
push
out
ins
jae
out
xlat
xor
inc
out
fwait
jmp
movs
in
ror
jge
fmul
mov
jb
mov
lods
jge
pop
lods
das
mov
popf
fild
popf
mov
push
mov
sbb
fdivr
addr16
push
push
sbb
jmp
js
mov
scas
push
sub
retf
jmp
sbb
std
out
or
arpl
xor
xor
jbe
sbb
outs
adc
call
ja
mov
ss
push
ror
cmp
mov
repnz
mov
sahf
pop
movs
add
jbe
call
cli
sub
sub
loop
loop
and
clc
dec
push
shl
sti
add
pop
adc
xor
adc
mov
call
in
jge
leave
sbb
adc
pop
(bad)
and
lods
pcmpeqd
or
ins
ret
cmc
cmp
lea
mov
(bad)
movlps
scas
ss
jg
out
call
fisub
stc
push
lea
es
rep
test
or
xor
and
xor
sbb
mov
push
rcl
sub
or
dec
jmp
(bad)
mov
sub
adc
push
add
mov
xor
pop
dec
push
daa
push
dec
daa
popf
out
inc
inc
ret
push
add
(bad)
mov
les
aam
movs
popa
mov
xor
fmul
mov
inc
mov
sar
int
sbb
stos
pop
stos
dec
jb
inc
(bad)
mov
outs
add
fild
cmps
ret
sahf
addr16
cmp
cs
cwde
jmp
lds
sar
dec
stos
outs
mov
js
ss
mov
pop
xlat
gs
pop
pop
pushf
test
mov
hlt
shl
add
jo
jmp
popf
add
jecxz
jo
scas
mov
sti
sti
adc
cmp
or
xor
popa
daa
fiadd
je
inc
call
adc
sub
add
rcr
test
jl
sbb
(bad)
icebp
frstor
jmp
repnz
sbb
lea
fimul
push
mov
push
xor
and
lock
xbegin
and
xchg
xlat
test
bnd
std
ins
cmp
cs
rcr
pop
fwait
stos
inc
mov
and
push
pop
in
pop
out
push
call
dec
xchg
jne
sbb
pop
mov
dec
das
cwde
and
nop
jne
sbb
pusha
mov
test
pop
dec
pop
rcl
rol
retf
inc
sub
cli
in
pop
imul
cmp
(bad)
mov
jo
imul
jne
cmp
(bad)
imul
fcomp
or
daa
mov
aas
inc
jmp
jo
scas
stos
call
xor
popf
or
rol
into
xchg
out
cmps
pop
jmp
fpatan
xchg
(bad)
push
push
add
in
adc
or
ja
jmp
fsubr
sub
dec
rol
xor
push
push
cmp
sar
out
sub
jno
or
jne
cmps
jo
and
pusha
imul
cmp
in
call
jmp
out
loope
das
inc
fprem
sbb
sub
(bad)
dec
vpaddw
or
inc
adc
pop
and
lahf
loopne
ror
arpl
and
xor
fld
inc
sar
or
test
out
imul
leave
add
scas
fist
ins
cwde
xor
je
je
(bad)
movups
in
outs
mov
push
nop
mov
sub
and
add
cwde
clc
mov
movs
test
xchg
adc
mov
or
iret
sti
jne
jb
loope
in
data16
ins
dec
add
mov
ficomp
mov
push
jne
or
retf
es
pop
pop
sbb
xor
mov
mov
mov
outs
pop
xor
call
test
sbb
cmp
(bad)
lods
les
xchg
jge
sar
dec
pop
int
bound
cmp
mov
add
fs
push
push
add
jbe
pop
sti
aad
mov
mov
shl
iret
fwait
mov
fwait
push
(bad)
and
cld
sar
inc
and
add
test
jbe
call
les
imul
arpl
popf
cmp
imul
scas
add
dec
loopne
pusha
(bad)
jae
adc
je
jmp
pop
push
push
xchg
enter
sub
xchg
add
rcr
test
scas
sub
mov
mov
sub
in
or
test
out
gs
loopne
fadd
sahf
push
mul
pop
mov
sub
mov
add
mov
mov
ficomp
pop
stos
iret
lock
mov
aaa
cmp
mov
and
mov
jae
aas
movs
xchg
dec
out
test
jmp
mov
test
add
push
js
push
push
aas
addr16
iret
les
lods
(bad)
(bad)
enter
lods
push
lahf
pop
push
xor
lock
lods
jo
adc
mov
mov
mov
mov
mov
loop
rol
shl
outs
push
std
mov
dec
xchg
add
in
pop
mov
sub
mov
shl
and
aam
es
mov
mov
out
jo
inc
push
ret
xchg
repz
lods
push
pushf
shl
cmps
inc
clc
push
pop
hlt
jmp
cmp
push
xor
imul
popa
or
(bad)
fwait
or
mov
mov
jp
fs
jae
push
icebp
and
repnz
sub
setp
sub
fs
sti
ins
sbb
ficomp
mov
psrlw
xor
ja
and
mov
adc
clc
mov
xor
cmp
ret
xchg
sbb
pop
inc
sub
cmps
js
xchg
stc
push
mov
pop
mov
sbb
movs
inc
retf
lods
inc
inc
cld
bound
mov
call
or
movs
push
loope
cmps
rol
fs
pusha
jl
xor
(bad)
sbb
seta
mov
pop
mov
repz
mov
cwde
cmp
sub
lods
add
mov
test
(bad)
mov
outs
js
push
mov
pop
imul
mul
leave
fs
dec
jbe
lahf
pop
push
mov
cs
jns
daa
push
outs
and
fnsave
shl
test
fdivr
rcl
inc
rcl
je
mov
dec
outs
iret
xchg
push
mov
xchg
div
icebp
addr16
xor
fild
or
popf
mov
pop
sti
xchg
cmps
mov
jmp
js
sub
adc
sbb
in
mov
ret
ss
inc
inc
frstor
int
mov
mov
and
fisttp
dec
xchg
pop
das
dec
mov
cmc
out
and
stos
pop
mov
jbe
jnp
push
lods
js
jle
clc
sbb
ja
cmp
pop
out
add
dec
in
ins
pop
rol
in
sbb
test
es
or
mov
test
stos
adc
mov
int3
inc
pushf
ret
lea
mov
std
and
std
mov
sub
push
js
shl
pushf
xor
nop
push
arpl
pushf
or
cwde
jb
push
sbb
add
in
(bad)
fisubr
(bad)
sti
sbb
mov
push
pop
in
pop
jb
repz
jo
push
jmp
fild
push
gs
fistp
sar
push
mov
in
adc
dec
skinit
pop
sub
aas
test
add
sub
xlat
test
popa
push
jnp
sbb
mov
int3
xchg
jecxz
shl
mov
sub
bound
in
out
test
xchg
fidivr
aad
push
pop
xor
int3
push
imul
mov
ret
inc
mov
adc
adc
cwde
out
lods
pop
cmp
fnstcw
sbb
mov
push
xchg
test
mov
fisubr
dec
mov
movs
inc
cdq
dec
into
aam
dec
mov
shr
imul
or
addr16
mov
or
(bad)
pop
pop
movs
ds
add
sbb
jp
call
iret
aas
int3
fs
xlat
imul
push
cli
dec
test
mov
jge
bound
xchg
movs
enter
or
repz
and
into
jge
sbb
pop
cmps
movs
adc
cmps
pop
add
jecxz
test
int
out
add
daa
and
rol
(bad)
int3
or
cmp
leave
or
outs
push
leave
ins
xor
call
pop
and
adc
aad
sbb
inc
pop
adc
dec
cmp
and
mov
mov
sub
push
je
mov
inc
ret
cmc
adc
pop
xor
movs
xchg
push
xchg
fisubr
mov
(bad)
jp
movs
mov
out
pop
call
xor
test
fstp
pop
daa
push
mov
sbb
jae
es
fcomi
add
cmc
int3
retf
inc
mov
xlat
dec
(bad)
fldcw
stc
(bad)
mov
mov
push
mov
inc
xchg
fnstcw
and
sbb
(bad)
jp
clc
idiv
(bad)
rol
cwde
jnp
or
test
mov
add
popf
mov
xor
jnp
rcl
(bad)
(bad)
int
add
push
pop
inc
shld
sub
pop
loop
imul
push
sti
pop
movs
and
je
xor
data16
js
hlt
and
mov
sbb
cli
xor
scas
(bad)
(bad)
xchg
mov
pusha
das
(bad)
enter
dec
jns
pop
xor
shl
cmp
js
xlat
aam
mov
push
adc
ret
xor
mov
repz
das
xor
mov
out
(bad)
fdiv
cmps
dec
sub
push
clc
ins
add
cdq
mov
add
pushf
add
clc
jae
daa
jecxz
mov
cmp
cmp
mov
bnd
add
les
imul
rcr
adc
outs
cmps
(bad)
mov
ja
pop
sub
pop
in
pop
and
jae
mov
add
push
mov
scas
bound
pop
adc
pop
mov
push
imul
mov
fistp
shr
stos
adc
sbb
aas
cmp
test
fld
mov
adc
ja
les
jno
test
mov
test
mov
cmp
cmp
ins
xor
mov
fild
xchg
mov
dec
jg
push
push
cwde
scas
retf
cmp
fisttp
inc
mov
sbb
mov
add
bound
sub
test
jbe
into
push
popf
out
xor
pop
sbb
mov
sub
outs
stos
sbb
add
mov
in
movs
or
and
and
add
jmp
and
adc
sbb
adc
pop
out
pop
loopne
mov
in
popf
fistp
pushf
push
fidivr
and
fwait
xchg
mov
in
mov
sub
xor
cli
cwde
mov
enter
popf
lock
data16
lods
int3
out
dec
loop
mov
xchg
imul
sar
mov
xor
das
and
adc
ja
lahf
clc
jns
mov
cmps
sub
shl
xchg
push
sub
jle
pop
ss
push
cmp
cdq
sahf
movs
pop
push
xchg
mov
sti
pop
cdq
xchg
scas
xchg
sbb
or
(bad)
fisub
mov
(bad)
jle
xchg
xchg
stos
inc
repnz
adc
adc
sbb
push
sub
jge
sub
push
mov
hlt
stos
jmp
(bad)
aad
push
pop
iret
rcr
xchg
stos
popa
lods
aaa
mov
stc
movs
push
jge
or
not
ficom
adc
dec
mov
adc
and
add
jecxz
push
sbb
clc
bound
sbb
mov
jle
fs
jb
ret
je
fnstenv
push
arpl
push
sbb
(bad)
test
rcl
lock
sub
xor
ja
pop
lea
mov
xor
rol
das
xchg
or
pop
xchg
repnz
iretw
stos
dec
lahf
and
sti
nop
mov
fcomp
outs
rcl
je
test
ret
mov
dec
pop
push
cmp
loop
cmps
jbe
push
jb
push
pop
ficomp
aaa
fimul
fldcw
jl
add
data16
out
mov
adc
retf
imul
inc
mov
jle
icebp
or
call
pop
fdivr
dec
movs
push
pop
pop
add
pop
iret
dec
mov
pop
divps
pop
hlt
shl
sbb
mov
pusha
ins
stos
xchg
aam
pop
mov
cmp
clc
xchg
mov
pop
ins
(bad)
sub
loop
push
jg
out
shl
cmp
inc
push
outs
hlt
push
loope
xchg
fstp
ja
jb
jbe
mov
lods
sbb
inc
int3
mov
mov
cwde
xchg
fidiv
push
mov
mov
xchg
outs
icebp
xchg
adc
cmp
mov
add
dec
mov
cmc
(bad)
dec
test
mov
mov
mov
mov
dec
dec
test
cmp
shl
jecxz
dec
push
fiadd
loop
pop
or
mov
sbb
cmp
retf
push
imul
mov
out
mov
jns
icebp
ins
js
lods
jae
cli
in
jg
mov
pop
push
inc
stos
push
and
shl
mov
cs
or
inc
or
popf
nop
cmp
jle
(bad)
and
adc
call
sti
retf
fsub
push
mov
or
jnp
fistp
jecxz
xor
ret
enter
cmps
mov
add
sti
dec
pusha
adc
pop
cmp
repnz
mov
push
ins
mov
cmp
sub
fsub
pop
push
lods
dec
ret
xchg
xchg
(bad)
rcl
xlat
dec
inc
adc
mov
xchg
jb
xchg
dec
gs
ret
pusha
push
add
fidiv
fst
jg
(bad)
movs
jbe
mov
sbb
push
rcl
stos
pop
dec
add
cld
aaa
lahf
and
cmp
push
retf
push
jg
rol
ds
(bad)
repnz
js
js
jle
xor
in
lar
and
int3
out
xchg
(bad)
mov
loopne
in
int3
inc
inc
mov
push
ss
inc
pop
ds
repz
std
pusha
add
sub
fdivr
push
cmp
loop
and
add
pop
fiadd
sti
test
mov
xor
xchg
sti
ror
jmp
dec
test
hlt
dec
adc
fstp
add
je
fwait
inc
imul
xchg
inc
and
or
add
adc
lods
das
cli
pop
pop
ss
adc
mov
push
cmp
sbb
pop
add
adc
es
lods
xor
or
fdiv
push
repnz
xchg
pop
popa
dec
dec
push
sub
hlt
fcomi
(bad)
jno
(bad)
cmps
pop
iret
push
xchg
rol
lea
shl
aam
mov
popa
cmp
movs
ins
test
cmps
fisttp
arpl
repnz
cmc
adc
les
add
mov
dec
rcl
cmp
push
fdivr
leave
in
les
xor
ins
and
cmp
lods
pop
enter
ins
fwait
push
dec
inc
dec
jo
push
cwde
push
mov
mov
shl
lahf
mov
xor
jns
out
push
test
int3
adc
adc
sbb
mov
ins
lea
loop
xchg
jg
and
push
jmp
cld
rcl
fst
out
xor
cmp
mov
sub
sbb
shr
mov
adc
cld
xor
mov
das
adc
jp
cmp
shr
jno
lock
jmp
test
jmp
les
mov
es
push
push
fnstsw
jmp
neg
mov
jns
cmp
fld
mov
and
and
jl
std
mov
or
fnstsw
cld
unpcklps
popf
scas
imul
rcl
inc
sbb
push
ins
ret
add
adc
or
movs
idiv
push
enter
cli
pop
push
jmp
sbb
lods
or
jp
loop
sahf
mov
mov
rcl
cld
push
call
add
inc
fmul
mov
xchg
inc
inc
add
lods
and
mov
cs
jb
popa
or
pop
push
outs
inc
imul
push
daa
es
gs
cmc
ins
add
sub
out
inc
mov
cmp
sub
cmc
aad
xlat
push
sub
dec
sub
push
mov
movs
je
rcl
addr16
nop
les
mov
mov
repz
loope
lahf
sbb
imul
xor
mov
in
ins
aad
ss
int
lods
adc
jnp
mov
add
call
mov
gs
retf
fcomp
fwait
sub
push
xor
push
fdivr
int3
jo
mov
push
rol
and
movs
cmp
pushf
and
fist
xchg
(bad)
retf
loopne
shl
mov
sti
dec
test
test
jmp
and
mov
cmp
mov
dec
inc
fwait
retf
or
or
aaa
in
lods
mov
xchg
mov
dec
pop
mov
scas
and
retf
mov
enter
rol
push
mov
fist
out
lea
adc
fcomp
mov
xor
sbb
dec
std
dec
(bad)
fidiv
mov
cmc
jmp
mov
sar
imul
cmp
push
gs
cli
jo
fwait
shl
retf
cmp
mov
cwde
cmc
arpl
inc
push
fimul
jl
cs
mov
imul
les
pop
out
and
ja
add
shl
add
jbe
add
aam
js
jge
bound
xchg
jmp
cmp
stc
mov
xor
cmp
iret
in
loope
or
bound
fwait
(bad)
ficomp
cdq
mov
mov
js
mov
imul
or
repz
jl
dec
popa
std
mov
ss
lods
mov
retf
mov
add
leave
mov
sbb
(bad)
cmp
shl
cmp
les
lea
xchg
sbb
xchg
repnz
adc
(bad)
mov
pop
rcr
and
sti
cmps
scas
aam
out
mov
add
and
imul
push
outs
js
mov
sbb
repnz
(bad)
pop
sub
dec
scas
adc
fbld
sub
pop
pop
and
in
lea
(bad)
shl
dec
test
xchg
jge
cld
dec
(bad)
sub
xchg
aad
jo
je
pusha
cmc
mov
std
out
call
and
cmc
fsub
(bad)
dec
push
jp
pop
pop
imul
in
nop
xor
(bad)
xchg
mov
(bad)
arpl
lea
imul
mov
stc
cmp
mov
add
in
inc
xlat
mov
dec
pop
add
cmps
add
xchg
xor
add
pop
jmp
(bad)
mov
stos
jle
jns
in
adc
loopne
pop
cmp
scas
cmps
int3
xor
xor
mov
in
mov
pusha
loope
mov
bound
jbe
out
movs
push
pushf
add
in
movs
xchg
cwde
es
adc
inc
cmc
pop
jmp
xor
repnz
rcl
adc
out
push
fst
inc
sbb
push
adc
mov
hlt
aas
scas
call
(bad)
cmps
cdq
(bad)
sub
movs
cmp
addr16
jne
daa
dec
scas
lahf
repnz
pop
call
cmp
test
rcl
and
rcl
or
sbb
ins
imul
lds
push
add
outs
js
lods
jbe
leave
mov
call
sub
ins
jle
and
pop
jo
stc
add
(bad)
rol
dec
lods
std
test
jns
push
cmps
jmp
mov
scas
push
ss
sar
dec
and
(bad)
cld
fwait
loope
mov
sbb
mov
sbb
sub
add
rol
daa
sbb
xor
pop
in
sub
jmp
xchg
scas
mov
in
mov
rcr
pop
call
mov
psubsb
inc
jp
or
pop
jbe
pop
dec
jl
test
arpl
xor
adc
sbb
cdq
mov
lahf
test
push
cmp
cld
add
out
add
sbb
or
push
cmc
xor
nop
stos
imul
mov
sbb
mov
push
push
call
adc
fcom
bswap
neg
pop
call
pop
and
push
xchg
mov
out
cmps
int3
test
lea
jns
or
(bad)
fstp
adc
(bad)
enter
cmc
push
mov
mov
push
xor
xor
icebp
inc
push
sub
dec
lods
mov
adc
mov
je
in
(bad)
inc
(bad)
std
fnstsw
inc
cmp
rcl
mov
lock
call
(bad)
lods
in
xchg
cld
or
push
movs
iret
jbe
push
push
cs
ss
cwde
int3
daa
pusha
repnz
adc
sahf
xchg
sbb
fadd
cmp
cmp
test
or
push
pop
aaa
mov
out
inc
loope
mov
dec
jae
enter
cmp
into
pushf
fld
push
ret
outs
sti
cmps
inc
pop
ins
imul
in
mov
pop
addr16
push
cli
fdivr
push
add
and
fwait
(bad)
or
leave
inc
arpl
cmps
(bad)
mov
inc
lods
push
neg
cmp
ror
ds
stos
xchg
push
fsubr
mov
and
in
jl
aad
mov
les
or
pop
test
int3
in
stos
(bad)
sbb
add
sar
mov
inc
scas
ficom
lds
mov
cmps
out
cli
add
mov
cld
push
ss
inc
and
leave
cwde
jl
add
out
push
xchg
jmp
pushf
in
call
inc
jmp
lock
adc
popf
mov
pop
retf
mov
imul
(bad)
clc
jge
xor
push
jns
add
push
out
stos
mov
mov
jno
add
mov
loop
loop
cmp
test
outs
push
daa
jge
xchg
test
cwde
lods
inc
add
bound
fs
inc
dec
hlt
and
shl
(bad)
and
jecxz
fld
push
and
xor
pop
test
xchg
push
mov
xchg
jbe
cmp
and
dec
loopne
repnz
push
jle
ror
aam
popa
pop
sub
sbb
movs
xor
(bad)
mov
cmps
shl
sub
pop
das
pop
cdq
fild
aaa
inc
out
jne
cdq
jmp
push
mov
inc
dec
ins
push
arpl
jecxz
or
mov
adc
mov
xlat
rol
mov
scas
retf
jge
inc
outs
jbe
add
push
(bad)
jle
addr16
adc
xchg
out
sti
aad
aas
dec
mov
int
cmp
cs
inc
retf
sub
or
jl
jns
xchg
mov
(bad)
sbb
jbe
dec
jg
sti
cmps
mov
imul
or
outs
xchg
mov
imul
mov
push
xchg
stos
cmps
adc
aas
test
adc
mov
mov
aaa
lea
mov
sbb
ficomp
pop
add
pop
icebp
rol
jg
cmc
or
pop
std
icebp
xchg
vpcmpgtd
arpl
or
les
add
out
in
or
fcom
ss
mov
sti
xchg
pop
inc
popw
push
dec
rcr
dec
xchg
cwde
jmp
xor
fcomp
push
lods
retf
out
xor
jl
call
xchg
dec
repz
mov
xchg
sti
jb
jne
lock
cld
fnstsw
push
fidivr
dec
hlt
sub
test
in
fst
push
nop
and
mov
inc
outs
in
(bad)
mov
enter
stc
xchg
fistp
outs
pop
jb
mov
rol
test
cwde
test
ret
adc
dec
push
outs
push
xor
dec
mov
retf
xlat
jmp
mov
shl
cmp
cmp
cmps
cld
dec
add
mov
sub
push
stos
push
mov
xor
and
push
inc
mov
lock
cwde
and
retf
call
pop
out
ret
push
stc
pop
test
cmps
movs
mov
pop
iret
test
or
sar
cdq
push
(bad)
fsub
and
inc
aas
adc
pop
mov
jo
cmps
add
scas
inc
loope
mov
ins
add
dec
es
sbb
popf
out
jecxz
pop
aam
inc
cdq
jnp
nop
cmc
mov
ret
(bad)
mov
test
jge
pop
xchg
or
mov
and
stc
mov
das
mov
cmp
xor
int
aad
mov
xor
dec
popa
xor
xchg
dec
(bad)
test
jo
enter
leave
xor
adc
cld
dec
jge
test
jo
fucomip
out
sub
ins
inc
ins
xchg
out
cmp
lods
test
gs
(bad)
xor
mov
imul
xchg
cld
scas
addr16
inc
pop
out
test
loop
aam
aam
pop
cld
ja
pop
shr
nop
add
cmps
jp
mov
push
cmps
mov
add
shl
adc
enter
shr
mov
jmp
dec
inc
cld
cmc
(bad)
jmp
jp
ins
mov
hlt
cli
adc
adc
daa
push
sbb
push
adc
into
(bad)
in
imul
push
xchg
sbb
aaa
and
fstp
icebp
sbb
pop
jns
mov
ins
pop
mov
imul
jmp
shr
pop
inc
outs
pmuludq
loopne
sbb
mov
out
mov
add
pop
pop
out
rcr
jge
mov
mov
inc
aad
push
dec
outs
mov
xchg
add
nop
cmp
loope
stos
push
jnp
lds
out
xor
inc
xchg
pusha
call
jmp
dec
stc
adc
shl
cmp
dec
xlat
(bad)
pop
jbe
mov
lods
cmp
jl
shl
xchg
mov
xor
jnp
jge
shl
int3
mov
lods
imul
push
cmps
mov
pop
cdq
es
push
bound
rcr
in
cli
cmc
ss
pop
fist
in
jge
sub
lods
xchg
jb
lods
ret
xchg
imul
inc
inc
mul
adc
push
xor
xor
(bad)
retf
paddq
mov
jb
jmp
dec
aad
cs
out
cwde
pushf
push
loope
adc
pusha
push
in
pop
mov
jne
sbb
aas
movs
and
pop
fiadd
push
pop
mov
mov
mov
pop
ins
pop
out
popf
out
stos
cmp
sbb
sbb
div
std
ret
retf
xchg
out
mov
cmp
pop
jbe
vmread
repz
aas
push
push
ins
scas
mov
or
js
push
cld
jl
mov
data16
sub
in
or
mov
das
in
(bad)
mov
and
jbe
daa
jecxz
jno
and
in
xor
add
jp
mov
mov
adc
inc
fcmovnb
xchg
or
out
lds
add
fld
outs
sub
(bad)
arpl
in
cdq
inc
sub
in
add
and
(bad)
test
push
xchg
std
xchg
adc
xchg
or
ins
(bad)
movs
mov
adc
push
in
out
dec
ret
and
xor
mov
xchg
jmp
add
push
repnz
and
ja
jl
imul
mov
sbb
bound
adc
jb
pop
mov
inc
and
and
xchg
xchg
sbb
retf
in
(bad)
adc
ins
repnz
jecxz
dec
jno
add
add
je
push
fnsave
or
sub
sbb
xor
pop
fwait
xlat
les
dec
and
mov
out
xchg
cmps
cwde
(bad)
adc
ror
inc
push
retfw
mov
mov
inc
(bad)
fldcw
outs
jb
mov
jne
pop
into
pop
jle
dec
push
or
out
je
dec
nop
in
mov
mov
cwde
data16
jp
lea
repz
ficomp
sub
shl
mov
xchg
stos
mov
sub
jo
loope
mov
pop
test
aam
mov
sti
and
retf
lds
aam
ins
sar
shl
mov
les
push
xor
pop
in
sbb
mov
lds
push
ds
jle
lea
ror
or
inc
data16
fidivr
clc
retf
push
or
daa
cmp
iret
xor
push
push
and
movs
mov
inc
pop
inc
stos
imul
push
mov
(bad)
in
add
mov
xor
adc
push
adc
sub
out
and
mov
shl
(bad)
sbb
fdivr
mov
lahf
das
sti
jle
xor
fwait
mov
(bad)
cld
pusha
mov
inc
adc
leave
hlt
lds
ss
push
shl
int
jne
aas
stos
inc
cmc
mov
loope
jb
fidivr
fs
std
pop
out
adc
test
mov
add
nop
in
loopne
mov
test
mov
mov
add
pushf
inc
pop
xor
or
sbb
jp
repnz
lock
outs
jmp
add
inc
xchg
cs
sub
adc
int
lods
push
mov
mov
pop
repz
ret
add
push
inc
cmps
dec
fwait
cmp
imul
jecxz
adc
pop
pusha
cmp
mov
(bad)
mov
cmps
mov
pop
ja
into
popf
mov
mov
in
test
les
aas
out
pusha
std
jo
adc
aaa
xor
in
sbb
mov
aam
cld
mov
test
push
push
stc
xor
jo
or
push
xchg
push
xchg
arpl
cld
(bad)
mov
push
cli
xor
push
xor
fdivrp
adc
(bad)
(bad)
lods
shr
pop
dec
repnz
cmps
mov
add
lds
inc
in
xor
bound
icebp
cmp
ins
(bad)
mov
pusha
retf
outs
dec
arpl
cmc
scas
sbb
pop
jo
or
and
or
add
sub
cmp
mov
pop
test
js
int
(bad)
rol
test
sahf
xchg
cs
repnz
int
addr16
jmp
and
cli
push
sub
pop
cmps
xchg
inc
push
bound
jns
pop
inc
in
mov
fist
je
mov
xchg
inc
add
xor
inc
push
jb
loope
mov
cld
push
ja
shld
jb
dec
(bad)
lods
pop
mov
(bad)
test
cli
push
push
pop
dec
or
test
inc
cmp
adc
call
mov
sbb
les
sbb
sbb
(bad)
and
add
jecxz
jbe
and
rol
jnp
cmp
and
jae
push
cmp
sub
popa
popa
bound
jmp
loop
add
adc
cmp
jge
mov
ja
push
vandps
stos
inc
mov
daa
push
sbb
adc
jp
popa
pop
popa
pushf
ret
mov
data16
aam
mov
stos
xchg
cmp
dec
(bad)
out
mov
jmp
clc
pop
clc
sbb
jne
sub
mov
dec
shl
pop
add
test
ins
sbb
push
call
neg
cmp
jmp
mov
or
jne
add
jae
dec
(bad)
ja
push
imul
inc
and
push
or
mov
cmc
je
in
adc
add
(bad)
push
adc
pop
(bad)
aam
jle
cmp
loopne
push
cmc
inc
cmp
iret
inc
mov
adc
scas
and
jp
in
call
lahf
aas
cmc
mov
das
mov
outs
cmps
push
or
lea
inc
cs
cli
shl
test
ins
inc
sub
ret
popf
sti
add
call
or
add
ficomp
pop
pop
xor
ja
je
jmp
dec
adc
lds
pop
pushf
in
ret
icebp
pop
jp
mov
xor
xchg
shl
dec
add
and
sbb
sar
loopne
add
xor
xor
fcmovne
out
or
sub
ins
xchg
add
loope
xlat
pop
mov
xchg
movs
pusha
push
shl
pusha
jnp
lods
pop
xor
iret
jg
stos
inc
out
test
inc
pop
int3
inc
ins
les
push
or
xchg
int
xchg
jmp
adc
mov
mov
fnstcw
in
jl
std
test
mov
movs
test
div
mov
mov
loop
pusha
sahf
leave
mov
cmp
xor
xor
xor
jmp
jb
or
rol
std
scas
inc
aam
fdiv
lock
mov
and
xchg
shr
repnz
sub
retf
or
sbb
mov
loope
jnp
xchg
sbb
jns
push
test
push
mov
or
test
js
xchg
stc
movs
lea
test
loop
cmp
ins
mov
jg
mov
mov
sbb
pop
mov
ja
pop
pusha
dec
stos
push
das
inc
jne
xchg
loop
cmp
mov
and
mov
and
imul
mov
push
jbe
push
scas
inc
and
movs
jnp
int
dec
dec
mov
(bad)
dec
sbb
mov
mov
sahf
sbb
loope
fild
mov
test
jb
cmc
repz
stos
leave
retf
cwde
sbb
push
push
dec
cmp
pushf
sbb
sub
(bad)
jl
lahf
mov
fidiv
jmp
push
out
push
mov
push
sbb
sbb
dec
ins
neg
dec
test
or
mov
aaa
sub
shl
fld
clc
sbb
push
rcr
lods
or
movs
push
xor
push
inc
cld
sbb
rep
mov
push
jl
or
push
sbb
fbld
jg
(bad)
(bad)
or
push
lahf
xor
sahf
jge
aad
mov
scas
ds
pop
aaa
loopne
lds
and
sar
clc
mov
sub
push
cmp
mov
cli
(bad)
pushf
cmps
dec
push
outs
push
or
js
ins
pop
fiadd
adc
adc
out
dec
xor
dec
add
sub
xchg
xchg
xor
test
fcomp
xchg
inc
jb
lea
ret
das
xchg
jns
and
movs
cli
jge
mov
call
mov
not
mov
sbb
mov
lds
cmp
lock
sar
in
and
popa
cmp
or
adc
and
out
les
push
add
out
sahf
sub
cs
cmp
pushf
hlt
xor
popa
loop
out
mov
test
sbb
mov
and
cli
call
out
add
loopne
add
(bad)
mov
sbb
xor
push
push
cmp
enter
mov
aad
shl
jl
jg
pop
sbb
cmps
push
sbb
xchg
into
mov
mov
xchg
std
xchg
mov
scas
and
mov
mov
sti
ja
out
repnz
jne
mov
cmp
sbb
mov
into
sub
fst
cmp
inc
repnz
out
popf
repz
rol
jge
jae
test
scas
enter
xchg
sub
stos
cmp
popf
push
fwait
test
enter
cmp
sub
jae
add
ds
retf
adc
or
pop
and
dec
cmp
push
xchg
(bad)
lds
les
jl
loop
int
nop
mov
push
inc
ds
inc
jnp
or
sub
lds
das
xor
sub
mov
repz
stc
and
mov
or
shl
test
arpl
ret
repnz
popa
pop
cmps
mov
sbb
sti
xchg
inc
daa
aam
push
cmps
ret
mov
push
or
ret
inc
xchg
cmp
jnp
jmp
fild
arpl
inc
pop
fist
mov
mov
shl
fnstcw
test
ret
jns
push
inc
loopne
lods
(bad)
adc
pusha
repnz
xor
pop
sbb
mov
cmps
inc
rcl
mov
out
pop
mov
or
push
ds
cmps
sub
and
or
cs
and
dec
cli
es
pop
mov
and
mov
movs
sahf
mov
push
or
sbb
call
or
movs
push
pushf
sub
outs
mov
mov
fadd
dec
inc
mov
or
jmp
inc
add
jne
jns
and
add
sub
or
gs
bound
mov
dec
and
data16
iret
dec
addr16
dec
mov
(bad)
div
stos
cmps
cmp
mov
icebp
sub
out
pop
push
xor
jge
xor
aas
into
or
lds
shl
jb
(bad)
stos
jmp
mov
aam
cli
addr16
or
mov
mov
xor
fs
pop
mov
sub
mov
(bad)
push
xchg
aaa
add
pop
fstp
outs
and
and
add
sti
cmps
or
dec
xor
bound
aas
sbb
cli
pop
into
std
xchg
imul
dec
into
je
iret
test
xchg
frndint
or
dec
ins
int
xchg
mov
dec
popf
aaa
mov
(bad)
xchg
and
cmp
jmp
sbb
sub
scas
cmp
aad
cmps
and
adc
in
rcr
jg
test
rcl
call
aas
jo
movs
(bad)
mov
sub
sbb
iret
cmp
inc
movs
jmp
stos
add
xor
fdivr
mov
cmp
cmp
xchg
inc
fild
push
mov
in
(bad)
jne
jns
pop
mov
sub
pop
sub
pop
loop
(bad)
sbb
add
retf
ins
cs
adc
icebp
mov
and
pop
or
or
enter
(bad)
stc
push
mov
inc
int3
jb
cli
jle
fist
add
test
mov
xor
mov
mov
leave
and
mov
lea
ficomp
push
aaa
mov
dec
jmp
popa
pop
outs
and
popa
inc
push
ins
pop
(bad)
sub
jecxz
add
pop
push
jnp
sub
cmovge
jns
mov
or
jo
cmp
adc
rol
es
mov
scas
cmp
bound
cld
aam
pushf
cmp
iret
jg
sbb
jg
in
retf
or
aas
sub
call
push
fnstenv
pushf
jmp
dec
aad
cmpps
adc
jae
xlat
and
(bad)
imul
sub
dec
mov
xor
pop
xchg
dec
jmp
jmp
sar
je
xchg
mov
jbe
(bad)
ds
push
add
outs
sbb
inc
and
or
jmp
jle
push
sub
xchg
sub
pop
in
imul
(bad)
mov
and
adc
test
mov
shl
call
iret
cld
mov
mov
or
jge
cmp
pop
mov
sub
lds
out
mov
and
or
adc
outs
dec
pop
push
shr
xlat
repnz
add
cmc
rcl
cs
jns
imul
shl
ltr
push
xchg
inc
inc
push
mov
shl
add
into
sbb
sbb
(bad)
aas
in
inc
sub
sub
dec
pushf
xor
push
sbb
sub
in
push
sub
sbb
aas
pop
retf
and
aaa
push
mov
repz
outs
push
mov
ins
or
jmp
out
mov
mov
popf
add
mov
cmp
das
stos
and
sbb
loop
outs
jl
cmp
stos
aad
jno
dec
punpckhdq
(bad)
cwde
movs
mov
jae
clts
ja
mov
xor
xlat
out
(bad)
push
add
ins
cmp
push
cmovno
inc
or
mov
pop
test
pop
xchg
ins
out
mov
adc
sahf
data16
xchg
stos
ds
fs
in
xor
ss
test
aas
nop
dec
pop
fsubr
jne
cmp
lock
jg
movs
popa
xor
xlat
ins
ds
sub
add
adc
push
das
(bad)
int3
inc
scas
mov
in
jmp
jns
jge
adc
das
(bad)
sub
jo
pop
cmps
sahf
ret
popa
fdivr
cmp
push
sbb
(bad)
test
sbb
sbb
adc
xchg
test
inc
fwait
mov
mov
adc
cwde
sub
xchg
stos
fbstp
outs
mov
mov
dec
loope
or
add
inc
call
pusha
cmps
test
js
mov
push
rol
ret
call
in
ja
and
lods
cmp
adc
icebp
cld
dec
xchg
pusha
and
adc
inc
sti
inc
pop
and
das
(bad)
mov
and
add
pop
cmps
cmp
test
and
fadd
ins
fcomp
jns
push
clc
jle
inc
mov
jae
movs
sbb
enter
adc
mov
xlat
stos
cmp
push
sbb
scas
retf
xor
fiadd
je
mov
retf
mul
adc
fnstsw
jae
mov
sti
out
or
push
sti
and
xor
(bad)
pop
ss
pop
outs
data16
shl
retf
outs
(bad)
outs
push
loope
in
cmp
in
cmp
retf
jmp
xor
sub
ds
pop
in
or
sub
movs
sbb
jo
test
mov
popa
and
movs
aam
popa
inc
scas
test
repnz
jae
int
pop
ror
adc
push
mov
addr16
dec
cmp
ret
mov
mov
cld
and
lahf
sbb
popa
adc
sti
sbb
add
repz
out
push
les
mov
inc
(bad)
outs
jmp
cmp
inc
sub
div
shl
cmp
sbb
scas
xor
jmp
push
xchg
retf
retw
push
aaa
retf
stos
clc
mov
push
jns
imul
sub
hlt
in
call
mov
test
into
loop
adc
cmc
imul
and
jg
jecxz
lods
(bad)
dec
movntq
int
mov
mov
leave
aam
mov
or
mov
xlat
pop
push
mov
push
pop
shr
sub
mov
mov
int
cs
js
inc
sub
stos
mov
nop
mov
or
xchg
or
aas
ins
pusha
sub
shl
xor
push
adc
xchg
fimul
or
ss
push
jae
fnstenv
mov
pop
leave
mov
mov
pop
scas
sbb
test
hlt
test
cwde
add
mov
js
gs
dec
and
push
cld
pop
jmp
test
ret
push
xchg
xchg
mov
pop
push
das
and
imul
push
es
pushf
pushf
popf
mov
sbb
inc
inc
xchg
add
test
adc
nop
cwde
(bad)
adc
repz
(bad)
push
outs
shl
xchg
pop
xor
test
adc
(bad)
pop
js
sbb
clc
inc
repz
cld
test
add
xor
mov
and
scas
iret
scas
fwait
push
xchg
sbb
and
loopne
dec
test
test
xchg
push
retf
mov
xor
in
xchg
jp
cmp
test
pop
pushf
div
sbb
dec
mov
sbb
int3
and
lods
std
rcl
(bad)
jmp
jge
mov
mov
fisubr
jo
xor
call
pop
cmc
jl
sbb
push
push
shl
mov
scas
bnd
adc
div
jg
sbb
fstp
mov
add
pushf
cmp
aam
xchg
xchg
or
cs
jnp
pusha
es
out
cli
cmp
dec
and
and
and
fidivr
das
xchg
push
sub
and
adc
loope
out
ret
pop
xchg
jle
outs
pop
push
push
add
lahf
mov
mov
out
cmp
jge
cmp
or
outs
ret
sar
jmp
addr16
int
scas
gs
mov
jbe
dec
pop
ja
std
or
jge
xor
fcomp
mov
mov
imul
lods
ins
dec
xchg
imul
mov
(bad)
and
das
jmp
sahf
je
mov
mov
stos
and
repnz
cld
dec
cmp
and
loop
std
sbb
fild
cmp
sub
add
push
mov
mov
cwde
pop
fdivr
push
fistp
inc
xchg
sbb
xchg
mov
or
int3
mov
pusha
ror
cmc
ins
fstp
cmp
adc
rol
psubw
jp
pop
xor
fild
sub
sbb
in
fistp
add
jecxz
jo
sbb
shr
loopne
jo
shl
xchg
ficom
test
adc
sbb
call
frstor
push
pop
push
adc
jmp
dec
jmp
inc
xchg
repz
(bad)
pusha
mov
shr
out
cdq
aam
into
and
scas
xor
scas
pusha
inc
js
mov
les
test
jae
pop
pusha
addr16
ins
out
les
ds
popa
fnstenv
sub
js
cdq
inc
xchg
jmp
add
outs
int
call
xchg
repnz
xchg
mov
ror
add
or
push
push
pop
xor
ins
arpl
call
scas
ret
call
cmp
xor
mov
mov
add
mov
pop
lods
test
inc
xor
dec
in
xchg
ret
dec
cmp
mov
ja
xor
mov
gs
push
mov
add
in
int3
jb
out
aas
adc
mov
cmps
into
(bad)
(bad)
out
sar
jo
lods
mov
and
lods
sbb
out
xchg
fld
push
mov
fwait
mov
add
in
push
cmp
inc
xor
push
xor
ret
cmps
xchg
imul
pusha
add
cmp
jg
mov
xor
mov
xor
xchg
retf
ja
ret
add
jb
call
cmp
dec
and
popa
call
or
fscale
mov
and
jmp
inc
ds
add
cmp
retf
push
loopne
pushf
and
iret
and
popf
adc
or
inc
xor
jle
jbe
pop
in
and
loopne
cmp
jb
or
lahf
or
cmp
xchg
jne
ret
rcr
or
pushf
xchg
das
pop
dec
hlt
xchg
push
loope
cmp
inc
test
cmp
inc
lock
xor
or
cmps
mov
jmp
pop
fsubr
mul
mov
dec
mov
in
call
(bad)
div
lea
push
mov
adc
jle
pop
xchg
add
mov
jo
inc
lods
nop
in
mov
adc
dec
cmps
dec
aad
xchg
xor
shl
or
inc
add
xchg
pushf
xchg
lods
and
add
xor
int3
jg
inc
xchg
jne
fwait
inc
inc
(bad)
jl
sub
xchg
outs
ret
sbb
jmp
cmp
sbb
inc
sbb
jo
push
mov
cld
popa
movs
movs
hlt
add
inc
push
jo
push
loop
pop
sbb
pop
mov
push
or
pop
scas
fld
cmp
inc
xchg
xor
sub
or
inc
dec
loop
dec
popf
cmp
neg
aaa
ret
ds
fldcw
sub
pop
stos
lahf
fcmovnb
xor
bound
mov
sub
inc
inc
dec
movs
fisttp
cwde
aam
lock
lds
cwde
or
push
jmp
sub
add
cld
je
arpl
je
lods
mov
inc
(bad)
cli
mov
outs
mov
jmp
fisttp
xor
add
and
jl
lahf
mov
into
ins
je
mov
pop
rcl
js
fadd
add
jns
test
mov
cmc
jmp
les
mov
into
push
shl
add
rcr
mov
sbb
cld
jecxz
lock
push
mov
mov
fild
xchg
jle
mov
or
jecxz
push
sub
xor
(bad)
imul
or
hlt
push
gs
jle
ja
std
xchg
and
popa
mov
adc
xchg
pop
inc
jmp
and
ret
dec
retf
(bad)
imul
xchg
pop
call
sub
push
xlat
xchg
cmp
movs
(bad)
arpl
adc
mov
mov
sub
push
push
stos
sub
xchg
fisttp
xchg
xor
xlat
addr16
mov
pop
pop
xor
mov
sbb
jb
push
xchg
adc
jbe
or
rol
jge
loope
ret
loopne
mov
ins
cmp
mov
arpl
sti
test
or
cmc
push
clc
mov
xor
jns
jb
and
jnp
inc
pop
jl
imul
mov
mov
lods
add
les
dec
cmp
daa
xchg
mov
cmp
mov
sar
movs
and
xor
iret
push
mov
and
das
dec
sub
div
jne
jmp
ins
mov
dec
std
lds
inc
ins
dec
xor
push
xchg
sbb
and
dec
jge
pop
movs
test
adc
push
xor
ins
add
shl
ror
call
lock
cmps
add
gs
rol
jnp
hlt
adc
xchg
or
push
mov
(bad)
out
xchg
push
mov
ffreep
int3
in
lods
lock
mov
mov
out
pop
cli
sti
dec
xor
repz
mov
or
mov
in
mov
push
int
mov
mov
mov
ds
and
int
inc
shl
retf
rcl
lahf
out
pop
mov
std
jmp
pop
xchg
xor
lea
or
inc
jnp
cmp
js
fimul
into
loop
popa
pop
mov
(bad)
shl
or
not
sti
push
div
adc
test
mov
jo
jo
test
jnp
cmps
jbe
jb
xor
arpl
sbb
cmp
jecxz
cld
aam
ret
xchg
cmp
imul
ss
pushf
cmps
jae
lods
cmps
and
dec
mov
push
mul
mov
jmp
xor
repnz
xchg
into
pop
add
loop
mov
loopne
jae
fs
test
add
adc
sub
fucomp
sub
mov
(bad)
(bad)
sbb
bound
jb
popf
mov
cmp
aam
imul
or
jge
cwde
mov
dec
es
mov
dec
fs
mov
dec
sbb
int3
mov
mov
mov
add
mov
enter
scas
inc
imul
cmp
add
daa
xchg
cmp
cld
sti
mov
add
ins
mov
mov
xchg
or
rcr
jmp
xor
aaa
mov
cmp
ror
repnz
je
cmp
adc
popf
inc
jge
leave
inc
aad
mov
neg
(bad)
or
fmul
and
fcom
jns
out
mov
mov
pushf
cwde
xlat
test
sub
cmp
push
sahf
inc
mov
dec
jge
sete
mov
cmc
(bad)
stos
mov
sbb
repz
add
dec
push
gs
pop
int3
and
(bad)
pop
test
ins
xor
aam
int
sbb
stos
pop
aad
and
stc
cs
push
int3
cmp
and
add
pop
int
test
in
xchg
fs
ud0
clc
(bad)
cmp
inc
inc
dec
pop
fdiv
and
bound
pop
retf
cdq
push
lock
push
ficomp
xchg
hlt
cdq
lods
mov
out
sbb
cmp
push
and
mov
jne
dec
ret
hlt
int3
or
inc
shl
test
add
mov
cmp
push
mov
in
iret
push
dec
or
sub
sbb
aaa
lods
mov
jecxz
inc
(bad)
outs
fst
xor
dec
xor
xor
inc
push
not
int3
stos
add
jno
sbb
xchg
xor
cmp
test
test
sub
mov
sar
dec
enter
idiv
xor
mov
push
inc
xor
jmp
and
movs
jecxz
mov
inc
jo
sbb
(bad)
aam
sti
inc
mov
mov
popa
mov
imul
and
and
mov
fcomp
mov
xchg
cmp
ror
jnp
test
mov
pop
ror
loopne
adc
pushf
fisttp
repnz
outs
ret
jecxz
repnz
fcmove
adc
hlt
mov
jb
pop
xchg
int3
sub
jno
xlat
inc
cs
lahf
scas
(bad)
out
or
into
xchg
or
in
fstp
mov
mov
cmps
lahf
ret
push
ret
sbb
iret
and
fsub
aas
sub
shl
cli
mov
push
sbb
dec
adc
out
push
iret
cmc
fs
xchg
jl
pop
mov
cmp
mov
mov
sbb
dec
cdq
jmp
push
sub
ja
ret
ret
inc
loopne
mov
dec
and
pop
jge
imul
add
dec
lea
cwde
xor
mov
jg
mov
dec
sbb
(bad)
nop
(bad)
in
jl
nop
jle
outs
imul
xor
add
retf
mov
push
rol
ins
aaa
push
jmp
loopne
cld
(bad)
(bad)
std
int
mov
push
out
mov
pushf
adc
ja
xchg
sub
lahf
sahf
pop
imul
push
jnp
arpl
add
push
idiv
ja
sahf
sub
pop
sub
icebp
test
adc
mov
fisubr
inc
sub
jae
cwde
cmp
cmp
fisubr
bndldx
fadd
or
push
in
int
mov
imul
shr
ja
in
sbb
mov
xchg
mov
or
fs
retf
mov
movs
sbb
loope
das
inc
fs
pop
test
add
push
mov
sub
and
cmps
fist
sub
or
(bad)
fst
adc
dec
jmp
shl
pop
mov
clc
mov
loope
sbb
jnp
mov
pusha
ins
mov
enter
cmp
fistp
push
cmp
pop
hlt
dec
ds
inc
mov
or
shr
mov
retf
and
push
mov
mov
or
cwde
sub
push
mov
fsubp
call
sub
loop
mov
mul
clc
repnz
dec
cmp
sahf
jbe
int
scas
repz
popf
outs
pop
pop
pop
scas
fiadd
mov
in
repnz
mov
mov
xchg
lahf
(bad)
mov
xchg
sbb
ficomp
imul
inc
imul
mov
in
cmp
cmp
ds
loop
add
pop
push
arpl
push
adc
out
xor
mov
addr16
push
mov
lahf
xchg
int3
mov
mov
std
iret
repz
into
sub
stc
mov
pop
fmulp
fdivr
mov
stos
and
xchg
jne
gs
xchg
hlt
out
xchg
push
cwde
nop
lahf
inc
in
xor
out
outs
out
ja
(bad)
outs
mov
adc
aam
jmp
ins
and
fidiv
sbb
icebp
and
push
lods
jns
jo
int3
jmp
stos
or
stc
pop
daa
ror
out
les
ret
or
add
outs
pop
stc
mov
stc
xchg
in
into
and
xchg
jnp
xchg
inc
loope
sub
push
(bad)
fcom
lods
sub
repnz
jb
mov
mov
icebp
stos
push
push
xchg
aaa
call
mov
dec
ds
xchg
in
(bad)
js
sbb
clc
pop
xchg
shr
sbb
ror
or
jns
xor
push
rcr
pop
gs
adc
inc
add
cmps
dec
mov
jne
(bad)
fisttp
sbb
out
popf
cmp
inc
sub
mov
icebp
movs
mov
sbb
push
mov
cmps
mov
jecxz
outs
into
sbb
or
int
fcomi
xor
nop
adc
mov
fwait
pop
hlt
cmps
(bad)
jmp
ret
retf
adc
mov
outs
aas
cmp
and
or
fst
pop
cmp
(bad)
rcpps
scas
out
clc
push
out
sahf
cmp
adc
push
sbb
(bad)
in
addr16
test
dec
cmps
jb
mov
pop
or
mov
cli
jl
stos
repnz
popf
jmp
inc
cmp
add
loop
adc
jnp
mov
inc
pop
gs
mov
lods
retf
in
mov
ror
mov
addr16
adc
fistp
aam
stos
sar
push
(bad)
jmp
mov
in
cmp
xor
fadd
outs
aaa
out
jmp
movs
jns
rcl
xchg
clc
push
test
adc
or
(bad)
add
push
mov
icebp
inc
hlt
mov
and
repnz
jle
cmps
iret
push
xchg
sub
call
mov
scas
pop
pop
mov
ja
out
xchg
fistp
pop
dec
leave
xchg
mov
imul
call
pop
xor
mov
add
lahf
pop
cdq
mov
mov
jne
pop
mov
and
sub
jp
cmp
adc
gs
xor
fwait
push
cmp
cmp
sub
fs
popf
mov
jno
push
adc
not
pop
cmps
add
ss
fdiv
mov
test
push
add
add
pop
lods
data16
aas
xchg
test
adc
outs
shl
push
sbb
retf
leave
adc
aam
mov
mov
or
cld
jp
(bad)
cmp
dec
and
(bad)
sbb
ins
mov
jmp
push
imul
lahf
add
lds
das
sub
mov
(bad)
frstor
sar
inc
adc
pop
out
jnp
sbb
sbb
lds
inc
inc
dec
popf
mov
sub
jae
xor
mov
add
add
in
jecxz
sbb
lea
xor
aas
lods
inc
in
enter
cmp
lods
inc
cmp
jnp
sti
xor
inc
and
adc
mov
and
inc
loopne
pop
fild
je
dec
jns
xchg
jno
test
fs
or
push
in
cmp
(bad)
fs
push
and
push
xor
sbb
inc
loop
add
pop
push
lds
test
ins
fisub
mov
les
iret
call
lds
cmp
mov
into
test
or
lods
stos
aas
xchg
mov
stos
inc
fnstsw
retf
xchg
pop
hlt
shl
js
push
jg
aaa
mov
xchg
jle
jmp
add
cmp
stos
frstor
xor
mov
dec
mov
nop
xchg
mov
sub
daa
mov
cmc
mov
loope
iret
call
jge
pop
and
add
int3
mov
(bad)
aas
aam
(bad)
out
push
popa
add
pop
pusha
wrmsr
or
push
icebp
cmc
dec
pushf
xor
dec
mov
dec
mov
call
out
iret
mov
mov
ja
cmp
xor
mov
sub
mov
and
dec
xor
cmp
test
jmp
icebp
ds
cmc
cmp
mov
inc
pop
fwait
add
ins
xor
xor
cmps
jns
sbb
sub
in
test
add
mov
push
cmc
(bad)
lahf
xchg
push
imul
cli
adc
ds
push
xchg
pop
bound
push
test
pop
neg
xor
imul
mov
jecxz
ss
fild
and
pop
cmp
jl
mov
je
stc
push
fstp
add
push
and
cld
inc
daa
fs
adc
xor
scas
or
test
repz
and
xchg
mov
popf
ins
mov
push
push
aad
mov
pop
lahf
push
push
mov
in
jg
inc
shl
(bad)
loopne
and
aas
jnp
push
and
loopne
lods
arpl
or
fldcw
jle
sub
adc
adc
xchg
dec
mov
pop
fisttp
cs
fwait
xor
or
cld
test
push
retf
(bad)
mov
xchg
scas
dec
int
test
mov
call
je
int3
cmp
(bad)
clc
or
push
jmp
add
xor
sub
stos
xor
sti
(bad)
jge
or
cmp
mov
add
rol
add
and
jo
dec
or
in
inc
adc
rcr
push
mov
inc
out
ret
js
cmps
dec
inc
jge
pop
mov
mov
sub
and
lea
pushf
sbb
test
push
ins
lahf
xor
mov
and
jmp
push
pop
test
stos
retf
push
push
shr
adc
jle
pop
js
daa
push
in
pop
movs
or
fild
fincstp
sti
fsub
cmp
pop
daa
bound
ret
pop
sub
jnp
repz
cdq
repz
inc
ffreep
ror
pop
dec
out
bound
jns
jmp
popf
dec
movs
mov
loop
jmp
les
leave
stos
lods
cmp
les
pop
inc
sti
movs
pop
pop
cli
test
dec
dec
dec
retf
or
mov
pop
call
sbb
into
fwait
pop
jmp
adc
push
pop
jbe
mov
pop
(bad)
aaa
test
mov
sbb
mul
movs
adc
mov
dec
inc
fs
in
inc
xchg
loopne
inc
scas
xlat
popa
mov
out
mov
push
cmps
fld
call
xchg
xchg
dec
dec
push
mov
mov
fninit
dec
and
imul
call
test
icebp
fs
inc
daa
sub
fistp
rol
push
inc
cwde
retf
mov
sar
iret
out
ss
inc
dec
mov
cld
sbb
aad
test
fs
loope
loope
lock
mov
repnz
ror
fstp
shl
sub
ret
andnps
xor
pusha
scas
xor
imul
jo
or
adc
mov
out
jg
movs
test
adc
or
sub
sub
icebp
cwde
mov
push
imul
and
jle
scas
pop
ret
or
leave
lock
fwait
jge
pop
and
jbe
add
sbb
mov
dec
(bad)
repz
outs
cmp
cmp
jae
call
ins
sub
stos
mov
dec
xor
xor
in
out
dec
adc
cld
aam
or
les
int
jecxz
inc
push
pop
(bad)
and
push
movs
pop
mov
cmc
pop
jmp
cmps
jo
ins
dec
push
outs
fist
std
test
lahf
bound
push
nop
shl
pop
setp
mov
mov
push
push
add
leave
fdivr
scas
mov
jmp
(bad)
jb
into
lds
stos
jle
ret
(bad)
lds
sbb
lahf
into
pusha
and
into
sub
cli
rcr
push
cwde
sub
sub
std
dec
pop
inc
sahf
xchg
fidiv
adc
fscale
mov
mov
mov
xchg
pop
loope
call
adc
cs
inc
cs
mov
mov
or
ja
mov
mov
cs
shr
ror
out
xor
sbb
and
test
lock
aad
push
mov
mov
sbb
in
outs
fst
stos
in
adc
pop
dec
lds
add
jbe
mov
rol
mov
pop
and
mov
pop
sti
cmp
dec
pop
mov
repnz
cmc
xchg
xor
mov
les
fwait
xchg
cmp
and
data16
in
and
xlat
pushf
push
inc
push
add
ret
pusha
cwde
pop
scas
enter
xchg
and
imul
sbb
lods
dec
popf
mov
shl
retf
das
pop
mov
pop
les
hlt
stos
enter
outs
jno
lods
bound
(bad)
sub
sub
mov
int3
sbb
jbe
mov
adc
sbb
push
mov
push
add
les
adc
sub
dec
int3
dec
lahf
push
lds
xchg
popa
add
lea
sub
cmp
int
retf
aam
stc
sub
pop
dec
(bad)
xlat
xchg
lods
sub
add
adc
push
and
sub
data16
jnp
enter
and
test
lea
loope
cs
mov
cmp
movs
sti
cmc
pop
jo
mov
adc
test
or
lea
pushf
scas
add
data16
xchg
loopne
dec
push
inc
sub
das
clc
outs
jnp
jg
into
pushf
push
jmp
sbb
jmp
in
jnp
mov
sub
(bad)
vcvtsi2sd
push
or
sahf
dec
mov
fisub
xchg
stos
sbb
dec
mov
jp
sbb
and
fcmovb
xchg
clc
cwde
mov
outs
dec
vmfunc
in
in
mov
stos
sub
les
(bad)
or
call
inc
daa
loop
xor
(bad)
jge
jmp
mov
scas
loopne
mov
jg
stos
scas
jmp
addr16
retf
mov
shl
add
cmps
popf
hlt
(bad)
push
jle
ret
sbb
popa
cmp
out
push
push
sub
pop
out
inc
xor
and
jge
out
fcom
mov
and
adc
mov
sub
adc
aas
call
and
in
enter
pop
imul
icebp
pop
jno
movs
cmp
and
not
fnstsw
xor
es
aad
iret
xor
mov
es
cwde
out
mov
clc
push
mov
mov
pop
call
jp
fdivrp
add
pop
aam
out
and
cld
lock
in
dec
lea
push
lahf
ret
and
scas
sbb
mov
(bad)
inc
sbb
xchg
cmp
cmps
int3
sti
pop
pop
inc
add
xchg
frstor
push
and
pop
stos
sti
fnclex
cmp
and
jmp
pop
push
rcr
outs
sub
sub
rol
dec
es
add
sbb
cmp
sbb
fs
lods
outs
fimul
outs
dec
test
fisub
jne
add
js
inc
popf
xchg
ret
adc
jg
pop
inc
cmp
jmp
jnp
jp
push
popa
add
(bad)
movs
fisttp
pop
mov
ret
retf
xchg
int3
ja
pop
(bad)
fdivr
push
xchg
mov
push
inc
mov
jno
xchg
movs
jmp
loopne
inc
push
push
dec
inc
mov
fimul
or
sub
pop
dec
test
pop
mov
pop
add
dec
imul
rcl
sub
mov
ds
into
cmps
mov
shl
bound
push
fidiv
rcl
push
icebp
pop
les
dec
ja
clc
pop
out
jl
jmp
rol
push
fst
sbb
int
(bad)
ins
(bad)
jmp
les
loop
out
jle
lea
sahf
xor
adc
in
mov
cmps
mov
push
jbe
imul
mov
xchg
je
xchg
shr
mov
xchg
inc
sbb
in
je
test
sbb
and
cmp
sub
dec
mov
icebp
retf
das
dec
sbb
pop
inc
push
and
jge
sub
popa
popa
and
push
jmp
jne
cwde
xchg
xchg
ret
xor
xor
(bad)
(bad)
cwde
pop
inc
inc
push
bound
mov
or
lods
sub
imul
cmp
inc
jmp
or
jo
mov
int
jnp
jno
div
cmp
and
pop
push
mov
dec
inc
pop
ja
pmulhuw
bound
ret
xor
out
add
outs
mov
stos
mov
leave
mov
(bad)
inc
lock
sbb
js
daa
cld
sub
mov
lock
pop
pop
pop
push
in
mov
push
add
and
out
push
sar
xor
dec
or
fs
rcr
dec
pop
hlt
lea
dec
pop
jb
enter
mov
cmp
pusha
cmp
jge
(bad)
dec
je
cld
mov
jmp
jne
cmp
or
jb
sti
imul
loop
mov
add
mov
mov
sub
xor
mov
pop
and
shl
push
retf
sub
hlt
inc
add
mov
sub
adc
sbb
call
pushf
and
sbb
cmp
pop
xor
adc
jns
ins
ror
in
inc
repz
xor
push
sub
outs
xchg
pop
fmul
je
mov
cmp
out
xchg
(bad)
sahf
push
ss
xor
push
xor
cmps
add
out
inc
mov
hlt
(bad)
jg
ins
jl
leave
cdq
sub
ins
xchg
retf
xchg
mov
mov
xchg
xor
dec
ins
pop
dec
(bad)
(bad)
outs
xor
out
jb
xor
test
movs
xor
sahf
in
sub
add
daa
nop
in
fcom
xor
scas
jo
std
mov
mov
inc
push
jge
into
push
les
f2xm1
jb
mov
loope
mov
pop
clc
and
retf
pop
cmp
les
jp
mov
das
cmp
out
adc
mov
and
bound
(bad)
jecxz
mov
dec
xchg
fist
aaa
or
and
lds
pop
add
sbb
ins
sbb
adc
dec
movs
sub
push
and
hlt
cmps
pop
ins
mov
or
add
ror
call
mov
mov
dec
adc
push
in
pop
imul
in
sub
mov
mov
dec
inc
mov
outs
out
fucomp
sub
mov
add
add
cmp
cmp
mov
lahf
mov
mov
hlt
mov
in
dec
sub
repnz
cmp
mov
adc
sbb
jo
ror
test
or
test
adc
mov
add
shr
sbb
test
retf
sub
pop
sti
movs
jnp
popa
sbb
fcom
inc
mov
outs
stos
jmp
test
cmp
pop
rol
xor
fwait
cs
and
clc
movs
shr
xor
push
or
push
and
out
sahf
sub
add
jo
repnz
mov
jns
fild
mov
mov
(bad)
jmp
ret
inc
dec
fild
sub
mov
add
neg
sub
mov
iret
out
xchg
scas
call
addr16
sub
fistp
add
je
add
push
test
pusha
and
lahf
clc
pushf
jae
add
adc
pop
dec
inc
cs
in
cmp
(bad)
sbb
sbb
sbb
cmp
aas
cs
xchg
hlt
test
ins
jns
cmp
lods
sti
pop
jns
iret
jno
and
push
mov
int
dec
ins
and
call
pop
arpl
shr
inc
sti
fild
cwde
mov
lahf
sbb
add
stos
(bad)
sbb
call
adc
out
(bad)
daa
test
xor
int3
xchg
push
add
push
or
cmp
mov
mov
data16
add
and
sbb
pop
and
icebp
xor
or
fcom
jbe
in
push
mov
popa
retf
fwait
shr
mov
imul
lds
push
pop
sahf
push
inc
or
dec
stc
add
push
adc
popf
xchg
jnp
xchg
sub
push
clc
sub
xor
sub
(bad)
dec
push
fcomp
imul
push
dec
mov
sbb
mov
or
adc
pop
cmps
or
cwde
retf
bound
push
loop
or
jb
mov
inc
aad
outs
and
cmp
sbb
or
je
rcr
jae
mov
pop
ror
rcr
sub
xor
scas
pop
add
add
fiadd
inc
jno
(bad)
sahf
pop
ret
adc
iret
in
dec
pusha
jnp
pop
mov
popf
sub
mov
sub
and
mov
adc
jne
mov
fcmovne
push
lahf
test
cli
mov
rcr
mov
xchg
ins
cmc
xchg
stos
jo
xor
mov
sbb
retf
out
outs
inc
outs
xchg
xor
jnp
dec
mov
mov
jmp
bound
or
shl
sub
mov
(bad)
sbb
imul
(bad)
jle
dec
push
test
dec
sti
mov
xor
in
cmps
stc
shr
jnp
push
clc
sbb
data16
xor
test
int
sub
mov
xchg
int3
inc
int
ins
mov
sub
sbb
xchg
add
mov
sbb
push
sbb
fisubr
int3
fcmovb
add
push
mov
loope
lock
sbb
scas
dec
ins
sahf
xlat
stos
mov
cmp
dec
test
test
rol
jmp
jno
repz
jp
push
sahf
stc
sub
or
mov
xor
xchg
aas
in
arpl
add
lods
xor
inc
enter
cmps
nop
mov
push
or
ret
inc
in
(bad)
push
int3
(bad)
addr16
jle
jb
pop
pop
es
pop
mov
fisttp
push
mov
ss
and
in
lea
push
inc
mov
xor
in
fwait
mov
jns
add
(bad)
(bad)
pushf
add
xor
ins
mov
(bad)
retf
ins
jmp
dec
shl
mov
and
movs
sbb
mov
leave
pop
pop
cmps
xchg
sub
pop
xchg
daa
nop
xor
xor
ja
loop
dec
mov
cld
dec
jne
inc
ror
(bad)
sbb
in
adc
sub
repnz
jne
and
ins
fs
leave
stos
xor
outs
fsubr
pop
nop
ins
ss
ins
push
daa
ret
bound
lds
bound
or
lahf
jecxz
(bad)
mov
shl
cli
clc
xor
movs
nop
imul
lods
mov
out
sub
push
mov
xor
jb
inc
sbb
cmp
mov
cld
std
mov
retf
lea
jg
(bad)
push
pop
pop
xchg
ins
xchg
in
jno
xor
daa
pop
adc
mov
in
xchg
mov
aaa
sbb
sbb
bound
ins
pop
adc
push
xchg
mov
add
mov
and
inc
cli
and
shl
and
or
aam
imul
push
adc
mov
ret
cmp
in
xor
aad
jnp
enter
xor
or
or
jnp
cmp
aad
or
mov
es
ins
mov
nop
int
aas
call
gs
ror
retf
inc
sub
ins
pop
sbb
gs
sar
in
mov
mov
dec
cmps
aad
frstor
add
jecxz
pop
pop
(bad)
setnp
in
pop
add
xor
sub
inc
cmp
add
scas
in
bound
les
(bad)
xor
xor
cmp
sub
lea
push
daa
call
add
sbb
popf
push
jl
xchg
or
(bad)
repz
mov
mov
push
outs
pop
and
and
mov
fcmovnb
push
(bad)
cmp
jne
mov
cs
sub
mov
or
mov
daa
popa
sbb
aad
call
add
jp
mov
es
inc
and
and
jmp
test
pop
imul
imul
shl
stos
loope
add
shl
mul
pop
dec
mov
mov
mov
push
(bad)
call
test
and
and
adc
sbb
inc
fiadd
cdq
dec
sti
jmp
xchg
push
or
dec
scas
push
pop
outs
shl
or
inc
icebp
outs
sbb
les
in
clc
sub
xchg
sub
out
sub
pop
inc
sub
ja
out
(bad)
push
dec
pop
fisttp
push
push
and
and
cmps
or
mov
sbb
mov
data16
add
ret
sub
gs
cld
push
outs
fs
xchg
xor
add
pop
aaa
xor
js
fcom
aas
sbb
int
mov
mov
sub
xor
idiv
add
dec
xor
add
cmp
jg
inc
and
push
leave
cmp
add
dec
or
mov
movs
dec
shl
fwait
lock
push
addr16
push
jb
xchg
clc
into
fincstp
popa
jne
out
pop
mov
(bad)
iret
dec
rcr
popf
push
(bad)
enter
(bad)
pop
lahf
daa
fsubrp
repz
sub
mov
mov
sahf
popf
(bad)
fdiv
(bad)
retf
pop
mov
xchg
call
sahf
cld
xchg
sub
lock
mov
into
outs
fist
jbe
in
lea
push
std
push
push
int
imul
fucomip
xor
out
or
inc
adc
fstp
adc
dec
cmps
mov
cli
xchg
and
inc
cmp
sahf
call
mov
fistp
pop
jecxz
mov
(bad)
(bad)
mov
loope
xor
pop
push
fimul
pop
int3
jp
and
xchg
pop
loopne
lods
into
scas
out
leave
jg
pop
cmps
scas
mov
cmp
sbb
sti
xor
retf
jno
inc
stos
push
setno
add
jmp
adc
inc
mov
jmp
pushf
xor
sbb
xchg
and
cld
call
sub
inc
ror
ror
outs
and
cmp
cld
dec
push
push
iret
fs
xchg
arpl
adc
inc
jne
mov
loopne
stos
fidiv
retf
xchg
loopne
and
push
leave
mov
dec
pushf
xlat
loope
mov
sahf
sub
shl
mov
mov
push
pop
push
pop
and
ins
out
push
and
loopne
adc
test
sub
std
(bad)
mov
cmps
mov
mov
mov
or
(bad)
call
adc
inc
adc
aaa
xor
dec
jecxz
aam
mov
adc
mov
mov
dec
mov
pop
jbe
sub
sar
out
sahf
out
movs
outs
xchg
push
xchg
adc
pusha
repnz
sar
ja
jb
sbb
pop
mov
lahf
iret
jmp
pop
data16
mov
rol
mov
sub
mov
mov
mov
or
(bad)
cmp
push
cmc
div
push
mov
cld
lds
and
xor
hlt
fs
push
aad
inc
mov
mov
xchg
arpl
xor
popa
mov
arpl
(bad)
hlt
inc
jge
test
lahf
push
dec
es
cmp
pop
push
rcl
jge
nop
jmp
push
fsub
test
mov
lods
call
push
jmp
data16
mov
(bad)
cmp
sub
xor
jmp
push
sbb
inc
dec
neg
adc
cmp
lock
(bad)
mov
scas
popf
sbb
mov
out
jmp
jo
jmp
add
test
popa
repnz
or
push
mov
daa
ins
ins
lahf
xchg
int3
jp
pop
mov
jmp
mov
leave
(bad)
test
push
inc
ret
in
call
les
inc
sbb
pop
jbe
in
jmp
(bad)
clc
lea
fcmovnbe
xor
or
cmp
je
pop
cmps
fisttp
or
hlt
sub
mov
arpl
add
div
outs
ins
fsub
rol
shr
fstp
leave
les
fisubr
fist
or
movs
cmp
enter
sbb
sbb
shr
push
adc
mov
or
push
pop
daa
or
loop
adc
iret
(bad)
cwde
in
out
jae
shl
(bad)
cwde
inc
test
lds
into
stc
cld
push
inc
call
ins
xchg
pop
mov
add
icebp
aas
push
(bad)
jmp
sbb
inc
mov
or
fdiv
sub
inc
mov
push
imul
adc
idiv
mov
in
jne
adc
(bad)
ffreep
add
addr16
mov
test
jl
adc
lods
rol
ror
dec
sahf
or
xchg
cmp
in
jns
movs
loopne
pop
test
mov
int3
jle
sbb
rcr
test
add
(bad)
aad
push
call
cld
add
mov
sbb
xchg
push
inc
push
sbb
and
ss
cs
call
xchg
xor
scas
(bad)
sub
mov
repnz
dec
sbb
ds
je
sub
imul
dec
push
je
loop
cld
pushf
cs
cli
stos
popa
pop
cmc
cmp
(bad)
adc
mov
(bad)
mov
aad
dec
int
in
add
sbb
sbb
loop
aaa
pushf
ret
and
xor
jl
rcl
hlt
stc
and
and
loop
xor
mov
adc
push
popa
cmp
xchg
aaa
or
mov
dec
cdq
mov
push
cmp
test
or
rcl
sub
jne
syscall
cmps
fistp
nop
xchg
inc
test
mov
out
push
out
mov
mov
xchg
cmps
dec
dec
add
or
aaa
test
sub
inc
ffree
pop
sub
xor
in
(bad)
mov
mov
jmp
arpl
mov
xchg
(bad)
in
sbb
jmp
xchg
mov
and
mov
mov
rol
clc
adc
adc
mov
adc
es
adc
inc
loop
pop
cmc
sbb
and
add
sbb
ins
fild
scas
frstor
sub
or
mov
clc
mov
or
sub
cmc
sbb
lods
mov
xor
or
pusha
das
add
mov
in
jge
inc
aad
std
inc
xor
dec
xor
pop
stos
clc
popf
dec
clc
leave
sub
sti
push
aas
xchg
jl
inc
das
movs
lods
jp
adc
inc
add
push
sub
adc
stos
push
dec
shl
jns
jns
and
retf
out
push
xchg
rdmsr
adc
pop
sbb
pop
mov
stc
push
repz
int
test
ret
int3
jp
jle
test
jnp
not
out
retf
je
xchg
stc
fs
sbb
mov
or
out
aam
sar
(bad)
adc
jle
rol
sbb
test
sti
and
bound
push
adc
out
xor
or
and
ss
mov
add
shr
adc
inc
jne
inc
jno
jmp
adc
mov
jecxz
jle
add
or
call
ror
xlat
sub
out
sbb
push
cmp
cmp
adc
mov
neg
cmps
or
push
xchg
and
shl
int3
aaa
jmp
sbb
cmp
or
sub
cmp
sub
ud0
cmc
out
jb
adc
add
imul
pushf
inc
aas
mov
cmp
cli
bound
scas
jp
pop
imul
test
pop
jne
dec
jb
jno
adc
fimul
jmp
lods
push
mov
movs
enter
push
mov
imul
repz
sub
(bad)
mov
(bad)
lods
mov
push
jb
mov
mov
call
xchg
out
sub
jo
int
pop
xchg
cmp
es
pop
xor
ins
inc
cld
pushf
mov
push
adc
popf
or
lods
sbb
retf
inc
mov
xchg
or
outs
jbe
inc
cmps
sub
adc
rcr
mov
addr16
add
loop
xor
pop
fnstsw
cld
mov
sub
jl
stc
dec
test
push
lds
add
mov
lea
test
cmp
sbb
adc
sub
jns
mov
dec
or
les
ja
mov
rol
push
jmp
mov
out
cmp
jnp
sbb
jno
and
and
jae
adc
(bad)
push
or
and
call
inc
xchg
mov
pop
(bad)
es
sbb
push
repz
push
fwait
and
cs
rcr
(bad)
pop
xchg
hlt
mov
(bad)
(bad)
in
inc
dec
dec
xlat
mov
mov
jo
popa
shr
jp
pop
xchg
or
hlt
(bad)
test
andps
mov
ins
pop
xchg
in
push
jmp
std
retf
xor
in
jns
jge
or
stos
mov
jg
push
ja
mov
mov
xor
outs
fdivr
xchg
fs
inc
xor
mov
push
lahf
and
adc
xor
push
in
jmp
xchg
ret
adc
jno
inc
clc
or
jmp
ja
fisttp
daa
inc
mov
push
iret
mov
movs
cmp
push
sub
adc
add
push
mov
imul
call
lahf
inc
jle
and
and
dec
jb
jle
mov
jae
ins
mov
lods
dec
adc
push
ret
xor
shr
stos
jmp
jg
scas
xor
test
ins
aaa
int3
lods
xchg
add
fistp
mov
test
imul
addr16
test
rcr
xor
sbb
pop
(bad)
lods
jbe
int
shl
lods
mov
sbb
pop
mov
daa
sub
std
inc
popf
jle
(bad)
bound
xchg
movs
inc
div
stos
adc
xchg
mov
push
pop
push
sub
and
push
int
add
in
cmp
cli
pop
xchg
movs
mov
mov
xor
cld
lahf
sahf
das
lods
push
mov
xchg
sub
retf
aas
inc
mov
and
dec
dec
jl
pushf
fistp
in
into
stc
pop
sar
(bad)
call
mov
les
dec
repz
push
stc
and
push
cli
push
pop
(bad)
clc
jmp
push
jns
in
ds
dec
mov
sub
push
rcl
ret
sti
int
pop
cmp
adc
pop
mov
mov
dec
in
jg
lods
mov
sbb
sbb
fwait
loope
push
rcl
out
int3
outs
push
pop
sub
jns
dec
out
push
cmps
sbb
movs
add
or
out
or
cmp
test
xor
jbe
outs
(bad)
push
inc
sbb
and
or
(bad)
pop
xor
adc
cmp
jg
outs
dec
jecxz
push
movs
mov
(bad)
pop
mov
mov
xchg
les
inc
cmc
mov
add
push
rcl
mov
xchg
inc
in
rcr
jmp
push
xchg
repz
mov
push
pop
in
xchg
xchg
imul
jae
and
pop
sar
inc
(bad)
dec
cmp
cmp
(bad)
dec
mov
scas
ror
push
rol
ret
cmc
(bad)
out
movs
adc
sbb
daa
leave
(bad)
xor
fadd
jb
fcmovne
cs
daa
les
push
mov
mov
js
cli
sar
push
(bad)
push
rcl
cs
out
stos
dec
dec
outs
jl
(bad)
mov
push
xchg
in
or
sbb
mov
les
stc
push
jl
outs
mov
ja
push
or
mov
les
int3
sub
test
sahf
(bad)
icebp
cmp
mov
jno
or
imul
or
mov
mov
in
mov
cwde
cmc
inc
add
cmp
retf
adc
and
mov
pop
out
stos
xchg
mov
push
fcom
scas
pusha
sti
sbb
xor
xchg
lock
icebp
jns
xchg
cmp
mov
fist
push
cmp
and
aaa
mov
fisubr
and
pop
xor
add
mov
out
bound
retf
dec
sbb
mov
xchg
aas
ja
mov
mov
cwde
cmp
outs
mov
or
in
ja
push
xor
js
push
f2xm1
add
test
mov
cwde
jmp
mov
mov
inc
mov
jl
jge
mov
scas
cmps
cmc
xor
imul
scas
stos
ret
cmc
repz
cmp
adc
xor
jbe
sbb
mov
test
mov
aaa
fisubr
push
dec
nop
adc
fwait
jge
inc
pop
sbb
shl
push
add
loopne
ins
dec
dec
add
push
adc
dec
sub
in
aaa
repnz
mov
outs
xor
pop
dec
and
xlat
cmp
mov
popa
sti
mov
jae
fadd
cli
or
add
sbb
and
rol
adc
mov
lahf
and
mov
dec
stc
fdivrp
add
in
dec
push
rol
das
add
ins
int3
xor
jmp
repnz
inc
repz
hlt
pop
and
xchg
inc
cmp
stos
mov
adc
inc
jo
dec
dec
(bad)
cwde
ins
xchg
pop
push
lock
jne
dec
(bad)
lods
adc
mov
mov
addr16
aad
inc
jnp
cdq
pop
pop
les
ror
inc
xchg
push
mov
dec
and
lock
pop
dec
repnz
sbb
mov
mov
mov
inc
cmp
(bad)
inc
out
cwde
xor
sbb
data16
call
sti
sar
sbb
(bad)
movs
lock
in
pop
pop
cli
fst
cmp
test
(bad)
(bad)
jecxz
push
call
jle
push
cld
pxor
sub
sbb
jmp
fist
push
jg
mov
sbb
int
jbe
add
ficomp
xchg
(bad)
stc
(bad)
std
jb
movs
bound
mov
jb
jmp
(bad)
mov
push
mov
fsub
fcom
cmp
(bad)
jmp
xchg
mov
sbb
inc
push
fwait
stos
jae
mov
add
movs
push
(bad)
push
(bad)
and
je
imul
enter
iret
test
fnstcw
mov
jno
mov
cmp
mov
mov
adc
pushf
jg
mov
xchg
xor
enter
xor
push
cmp
mov
cmp
and
mov
out
sar
cmp
int3
ficom
mov
je
sub
push
xchg
lahf
repz
leave
push
in
xchg
push
inc
or
inc
sbb
in
icebp
cmp
ret
bound
dec
jle
out
test
sbb
cmp
sub
push
mov
div
jne
push
fmul
das
scas
cmp
mul
cmps
bswap
sbb
repz
mov
mov
retf
sbb
mov
jb
dec
test
cld
lods
inc
xor
jl
repnz
jne
dec
adc
cld
js
ror
ret
cmp
shl
ss
fsubr
rol
cmp
pop
ss
loope
gs
jbe
cli
add
inc
movsx
imul
sub
inc
shl
test
or
jmp
or
jne
pop
(bad)
jecxz
jns
dec
cmp
in
stos
in
out
jbe
add
adc
mov
mov
jb
nop
sbb
iret
dec
in
jae
test
es
xor
enter
jno
mov
push
push
xor
dec
not
xchg
xchg
frstor
mov
xchg
imul
call
into
loope
jl
add
xlat
pusha
push
mov
scas
sbb
loopne
mov
ficom
cwde
xchg
cmp
sub
imul
out
inc
call
mov
popf
sbb
mov
je
js
cmp
test
sub
cmps
packsswb
push
xchg
call
int3
cmc
(bad)
cmps
sbb
dec
add
call
jle
ror
mov
fdivp
in
sbb
adc
rol
mov
icebp
mov
dec
sbb
push
test
xchg
aas
scas
xor
sqrtps
test
test
cmp
xchg
fstp
ret
jo
sub
xchg
out
ret
jl
fild
add
leave
int3
jecxz
(bad)
mov
mov
jge
lods
or
fild
ss
xor
jnp
xor
inc
(bad)
dec
ds
jb
adc
pop
in
ret
ja
sbb
(bad)
retf
fmul
add
(bad)
outs
pop
out
sahf
das
cmp
bnd
mov
cmp
pop
jo
jmp
aam
jne
cwde
mov
repz
dec
xor
in
ss
jns
add
cmps
loop
dec
das
sbb
shl
sub
aas
dec
lods
in
jno
dec
addr16
dec
fldcw
cld
and
sub
sbb
leave
aas
inc
test
cmp
mov
lods
in
inc
test
mov
(bad)
mov
jle
inc
lea
or
das
out
imul
fisubr
bound
and
cmp
inc
adc
jecxz
push
jge
das
sbb
dec
adc
rol
sub
pop
outs
sbb
int
mov
cld
shr
jle
fild
std
mov
js
mov
aam
jo
mov
pushf
sar
cmp
sbb
add
int3
or
(bad)
iret
jmp
sub
cli
mov
and
rcl
adc
pop
push
fucomi
stc
sbb
out
xchg
mov
movs
mov
push
xchg
jbe
and
pushf
dec
loop
jno
add
sbb
inc
pushf
call
mov
and
mov
mov
ins
out
or
jp
jle
or
std
lods
xchg
pop
pushf
dec
push
push
popf
or
addr16
pop
sbb
sub
mov
pop
mov
call
fwait
iret
mov
cwde
pop
aaa
dec
add
out
add
push
dec
jbe
ss
out
lahf
push
das
(bad)
retf
shl
add
mov
fild
sub
das
movs
lods
or
add
sar
stos
ins
sbb
pop
pushf
jmp
(bad)
bound
inc
inc
into
stos
ins
jb
sbb
fistp
or
into
mov
das
dec
add
stc
adc
dec
aam
out
mov
fisttp
lock
jb
inc
or
stos
leave
mov
repnz
retf
adc
lods
repz
xchg
push
shl
daa
mov
test
jns
arpl
jno
mov
jae
jmp
mov
push
inc
sub
mov
popa
cmps
jbe
stos
(bad)
call
aad
sbb
or
xchg
shr
adc
pop
es
sub
sbb
xor
and
ret
mov
add
(bad)
push
xor
pop
test
lock
sbb
or
aaa
fld
repz
mov
pushf
add
repnz
pop
in
adc
data16
xchg
xor
sub
inc
adc
mov
sbb
xchg
mov
inc
sbb
adc
pop
and
sub
sub
adc
leave
jp
mov
jle
mov
mov
bound
xchg
fidiv
(bad)
adc
icebp
outs
lods
adc
sub
add
sub
repnz
ret
cmp
in
ins
push
jmp
xor
(bad)
les
mov
shr
xchg
push
fdiv
inc
xor
jge
enter
fild
inc
xchg
je
fimul
adc
sbb
aaa
(bad)
lods
jno
add
jnp
fild
imul
inc
push
or
lea
fadd
mov
cmps
stos
adc
xchg
pop
int
or
sbb
cmp
fld
jb
loop
mov
xchg
jns
ror
into
sub
fsub
and
dec
sahf
or
fimul
jae
inc
mov
pushf
adc
das
(bad)
stos
pop
cwde
or
push
sub
es
setp
inc
inc
or
shl
mov
movs
jl
mov
mov
lock
inc
pop
add
(bad)
pushf
mov
out
push
nop
mov
aad
int3
xor
outs
jl
fild
rcl
out
bound
ds
cmp
leave
cli
test
pop
sbb
sbb
addr16
dec
pop
dec
mov
push
cmc
or
jb
inc
sbb
pop
mov
es
inc
pop
add
out
dec
rcl
seto
mov
fnsave
loopne
ins
in
adc
pop
ja
xchg
or
fnsave
mov
call
lods
push
inc
and
xor
push
dec
div
inc
shr
(bad)
movs
shl
add
(bad)
mov
sbb
mov
mov
adc
idiv
cs
int
fcom
xchg
mov
ins
iret
in
sub
add
lds
xor
pushf
dec
neg
cwde
jnp
ja
out
pop
rcr
xchg
mov
dec
rcl
daa
adc
outs
sahf
loop
iret
iret
fld
enter
pop
lods
inc
clc
or
push
xor
sti
sbb
ds
es
mov
pop
mov
xor
lock
xchg
mov
or
stos
(bad)
daa
(bad)
pop
jb
and
fdiv
inc
lock
stos
imul
cmp
inc
test
cvtps2pi
(bad)
mov
inc
sbb
repz
sbb
dec
inc
inc
jle
push
mov
or
jl
fiadd
arpl
cmps
in
sahf
ss
ds
popa
mov
aaa
pop
dec
xor
aad
js
sbb
mov
arpl
pop
das
mov
push
add
icebp
pop
stc
mov
out
leave
and
js
ret
add
cmc
gs
mov
xchg
ins
push
lahf
xchg
(bad)
push
or
lods
adc
sahf
mov
ja
inc
mov
jb
ins
jle
push
xchg
inc
mov
clc
(bad)
mov
xor
cld
shl
imul
fstp
mov
push
mov
adc
jb
pusha
leave
inc
mov
aam
idiv
dec
out
xchg
call
les
inc
(bad)
stc
push
adc
cmp
stc
xchg
outs
xchg
add
adc
je
jge
ret
mov
add
pop
int
repnz
adc
jl
movs
ret
pop
jge
inc
fist
aaa
xor
mov
shr
rol
vphaddbq
pusha
(bad)
jns
hlt
(bad)
xchg
add
stos
jl
repz
(bad)
mov
hlt
xchg
call
xchg
add
mov
jae
cmc
or
xchg
mov
in
pop
sbb
cmp
sahf
addr16
push
or
das
jmp
out
mov
jl
jmp
and
jno
repz
lahf
imul
xlat
or
mov
dec
inc
gs
push
lods
stos
(bad)
push
or
cmp
sbb
sub
mov
dec
mov
mul
jecxz
or
jae
lds
addps
lods
repz
icebp
mov
popa
dec
mov
push
jle
jne
xlat
mov
scas
fild
sbb
mov
out
mov
adc
int
dec
fimul
sti
fistp
outs
push
sub
jp
pop
and
mov
lahf
mov
pop
fdiv
dec
js
mov
loop
mov
pop
adc
fistp
push
and
cli
sbb
mov
lock
(bad)
shr
rcl
xor
dec
xchg
shl
xchg
aad
pop
pop
jp
ins
dec
cmc
xchg
jge
push
push
mov
xchg
mov
cld
rcl
adc
cwde
in
push
imul
mov
sub
jbe
adc
ins
jl
pop
xor
mov
push
rcl
movhps
cs
and
xchg
in
cmp
int3
test
mov
cmp
inc
xchg
pop
adc
or
popa
add
into
iret
cmc
xor
or
cmc
cmps
or
mov
(bad)
(bad)
(bad)
dec
(bad)
pop
mov
sub
push
outs
and
mov
nop
mov
(bad)
jmp
or
fwait
aas
popa
leave
xchg
pop
cmps
mov
sbb
mov
xchg
xor
mov
sub
push
mov
xchg
arpl
stos
dec
sub
jmp
xchg
pop
es
cli
jmp
pop
inc
jp
and
xchg
jmp
push
pop
cmc
dec
hlt
push
jo
push
(bad)
rol
xor
test
or
ror
xchg
jbe
dec
pop
pushf
cmp
(bad)
mov
jmp
sub
int
mov
xchg
or
popa
iret
outs
sub
in
cmc
push
sar
or
rcr
push
movs
aas
jl
lods
scas
je
mov
rcr
or
sub
add
(bad)
cmc
rol
test
lods
popf
je
and
mov
stc
add
push
hlt
mov
adc
jo
in
adc
stc
adc
clc
inc
inc
pop
dec
ret
ja
mov
fistp
add
(bad)
xlat
aas
inc
sub
lods
fimul
aaa
ror
jp
push
jg
loope
cmps
mov
mov
xchg
adc
movs
add
xchg
aas
adc
push
stos
call
xchg
arpl
in
into
fistp
cmp
sti
xor
mov
pop
test
rol
ins
test
mov
cmps
cmps
and
inc
(bad)
hlt
iret
add
out
fwait
pop
outs
mov
imul
mov
lock
sar
scas
sahf
sbb
add
out
fmul
aad
popf
(bad)
pop
dec
adc
sbb
mov
or
icebp
in
pushf
test
nop
lsl
or
shl
add
(bad)
pop
das
mov
fwait
pop
mov
popa
cmps
adc
sahf
out
outs
movs
dec
out
aad
imul
test
aad
pop
mov
add
enter
jae
test
dec
sbb
lods
xchg
hlt
rcr
inc
imul
xor
out
cmp
popf
sbb
mov
push
xchg
mov
cmps
dec
out
shl
add
dec
pop
jb
mov
mov
out
inc
fmul
mov
mov
jmp
cmp
pushf
ss
rol
retf
xchg
add
sub
push
loope
xor
sbb
(bad)
les
sbb
(bad)
dec
jp
xor
xor
sbb
stc
in
ror
sbb
fistp
movs
jo
jle
push
mov
mov
out
ins
add
nop
ins
adc
pop
mov
xlat
clc
pop
jb
add
xor
sar
mov
push
(bad)
loop
pop
sub
les
fsubr
sahf
imul
int
iret
jnp
data16
inc
repz
cdq
sub
sub
add
pop
sti
(bad)
pop
mov
ins
fdivr
jno
xchg
aaa
jle
inc
push
adc
push
inc
(bad)
leave
jecxz
lds
cdq
cwde
fcom
mov
push
neg
and
mov
rol
pop
sub
jmp
je
daa
arpl
(bad)
xchg
push
dec
xlat
inc
cmp
sub
pop
not
shl
jae
imul
mov
dec
ret
popf
cmc
and
cwde
fsub
loope
pop
mov
adc
mov
jge
scas
push
sbb
sahf
mov
adc
xchg
js
xlat
in
aaa
aas
outs
into
repnz
mov
xchg
lds
add
sub
xor
ror
xchg
sub
adc
jg
int3
cmp
sti
mov
(bad)
jne
or
scas
or
enter
pop
aaa
lock
xor
test
xchg
aaa
test
mov
sbb
into
dec
jns
aad
mov
outs
js
xor
and
xchg
out
dec
jb
in
repnz
adc
in
sub
add
stc
mov
dec
in
ins
xchg
sub
xor
jb
push
pop
and
dec
and
pop
in
jb
mov
hlt
xor
and
mov
lods
movs
into
stc
lahf
int3
fisubr
fcomip
push
jae
cmps
loopne
int
cmc
nop
push
aad
and
clc
test
stos
add
xor
in
popa
and
pop
push
icebp
dec
repnz
pushf
sbb
push
cmp
mov
jecxz
stos
retf
ret
imul
mov
aad
mov
push
cmp
xchg
out
movs
pop
idiv
lds
adc
mov
jmp
xor
loope
xchg
in
xor
cdq
jle
(bad)
mov
mov
xor
in
call
pusha
push
(bad)
ins
dec
stos
lahf
rol
(bad)
and
jle
sbb
push
fadd
add
sbb
in
inc
sbb
push
icebp
sub
push
imul
pop
or
call
jg
out
fwait
not
aam
adc
fild
jno
stc
in
inc
sub
cmps
test
inc
movs
add
dec
shl
pop
mov
gs
(bad)
outs
mov
movs
xchg
arpl
test
cs
add
mov
jl
out
addr16
test
call
sbb
in
xor
fistp
xchg
push
push
inc
xchg
rol
or
add
imul
cdq
inc
mov
cmp
test
jle
das
dec
retf
stc
sub
xchg
leave
adc
inc
stos
sbb
inc
push
shr
les
fidivr
mov
lahf
in
xchg
cwde
out
pusha
xchg
icebp
cmp
mov
inc
or
ficomp
jp
sbb
mov
sbb
dec
fnsave
cdq
and
sbb
push
inc
mov
aas
fcmovnb
mov
add
cmp
adc
lea
mov
pop
pop
and
repnz
dec
xchg
sbb
and
frstor
pop
mov
adc
(bad)
cli
jecxz
inc
ror
cmp
mov
adc
mov
xchg
or
repnz
xchg
xor
mov
icebp
cmp
ret
fcomi
mov
inc
push
or
test
push
cld
xor
mov
cdq
or
sahf
ds
leave
test
inc
dec
add
and
xchg
lods
inc
inc
call
add
in
adc
cli
adc
push
pop
popa
xchg
lods
pop
xchg
aam
call
jmp
mov
les
ret
lahf
xchg
cmp
add
imul
sbb
aam
dec
jg
add
pop
fdivr
cmps
leave
icebp
cwde
clc
loop
inc
rcl
cmp
mov
mov
cmps
loope
add
dec
retf
mov
stc
xor
inc
sahf
and
sar
(bad)
into
or
out
or
adc
les
loop
xor
and
xchg
ja
cmp
dec
sbb
es
aad
sbb
cs
cmp
sub
push
ja
inc
clc
popa
(bad)
movs
ror
jmp
inc
pop
push
call
cmp
and
shr
ds
outs
ds
repnz
les
add
out
out
jns
adc
dec
inc
jae
and
jp
retf
mov
adc
cld
fcomi
(bad)
mov
in
add
dec
mov
mov
pop
xchg
pop
pop
ja
pushf
xor
adc
and
dec
pop
cmps
ins
inc
dec
test
dec
cmp
xor
call
dec
cmp
adc
stc
test
adc
pop
add
pop
or
inc
add
or
xchg
ins
pop
ins
jle
pop
add
ins
inc
xchg
mov
or
loop
and
sub
daa
adc
cmps
je
leave
push
popa
rcr
mov
pop
fstp
or
push
icebp
add
push
sub
out
sub
je
out
cmp
sar
call
mov
sar
xor
jmp
ror
or
sub
push
xchg
pop
xchg
scas
dec
adc
push
retf
and
sbb
add
sub
xor
or
push
push
and
mov
dec
mov
les
push
out
jmp
add
pusha
push
push
js
nop
std
jmp
sub
daa
adc
xor
sahf
sbb
jne
mov
aam
mov
daa
inc
ror
sbb
pop
in
xchg
jnp
pop
mov
sub
aam
cmps
add
sub
mov
fs
loopne
(bad)
int
ret
add
aam
inc
es
xchg
jnp
mov
and
and
adc
pop
addr16
int3
out
mov
popf
rol
into
inc
mov
or
mov
popa
or
ja
jbe
lods
mov
xchg
loope
jle
push
inc
ficomp
cli
mov
clc
data16
jnp
cmps
popa
cli
stc
sahf
je
fdivr
adc
adc
mov
inc
fst
push
adc
pop
push
(bad)
hlt
jae
(bad)
push
jmp
inc
dec
and
jbe
jo
int
adc
push
adc
ret
shr
xchg
or
loop
retf
xchg
add
mov
daa
icebp
mov
mov
lds
sub
or
fs
adc
aas
jg
sbb
mov
sti
aam
in
stc
loope
mov
pop
fmul
std
lahf
pop
punpckhbw
call
movs
data16
enter
jle
lods
mov
jbe
retf
mov
js
inc
or
xchg
(bad)
push
jl
out
jbe
sub
inc
repz
add
lea
ss
cwde
xor
cmp
loope
outs
push
lock
test
mov
pushf
shr
cmp
mov
stos
and
pop
xor
or
push
cmp
test
jge
loop
sbb
cmp
ror
mov
in
or
iret
in
dec
jp
sbb
(bad)
cmc
mov
jl
push
cmp
cmp
cmp
push
enter
adc
and
or
enter
adc
jmp
(bad)
rol
mov
scas
fcomp
movs
or
aas
test
movs
jnp
and
mov
imul
fnstcw
les
movs
mov
cmps
xchg
or
iret
dec
pop
dec
iret
mov
test
daa
push
add
cmp
xlat
test
loop
push
gs
xchg
scas
mov
int
adc
(bad)
cwde
or
in
ins
xchg
push
fisub
xchg
xor
mov
mov
pop
daa
dec
push
cmp
fmul
sar
jb
aad
ret
cmp
aam
jno
jmp
(bad)
iret
cmp
mov
jae
arpl
call
imul
or
test
sub
sbb
iret
push
(bad)
dec
hlt
or
lods
push
fld
enter
(bad)
or
push
mov
mov
and
push
shl
jmp
mov
ds
nop
and
mov
imul
mov
cmp
shr
add
mov
or
sbb
lods
add
adc
stc
not
scas
and
dec
sub
jle
in
scas
xor
rol
jbe
mov
and
push
fadd
sbb
cmp
dec
or
ret
mov
add
and
ins
dec
repz
ror
scas
inc
and
mov
test
xchg
aam
pushf
sbb
xchg
iret
jge
mov
inc
inc
jg
mov
jae
push
xchg
add
(bad)
les
pop
neg
or
xor
push
jl
cmp
push
jae
imul
clc
or
fwait
mov
pushf
pushf
in
cmps
inc
inc
mov
sub
cmp
jecxz
jg
ret
dec
cmp
imul
xchg
es
sbb
sub
mov
jl
shl
leave
xchg
into
iret
inc
repnz
ins
xchg
xchg
or
scas
sub
fdivr
adc
ins
aaa
pushf
js
call
mov
adc
mov
sub
(bad)
jno
or
out
fidiv
add
sbb
stos
(bad)
mov
outs
ins
push
shr
add
gs
dec
sbb
in
pop
ins
jg
and
imul
bound
push
add
mov
push
mov
inc
and
mov
pop
push
adc
out
jmp
mov
int
cwde
jl
xor
xchg
ss
stos
ror
ret
in
cmps
dec
jmp
loopne
rep
xchg
in
jmp
outs
rcr
xor
test
(bad)
arpl
(bad)
sbb
cmp
mov
or
mov
mov
fcomp
inc
inc
je
xchg
mov
sub
(bad)
jo
retf
or
mov
add
and
cmc
test
fbstp
mov
addr16
lock
lods
mov
imul
pushf
out
out
mov
sbb
jae
fimul
loope
dec
sti
push
cmps
lods
pop
aad
pop
mov
add
pop
aas
loop
jl
add
cmp
or
movs
xchg
lea
cmp
pop
stc
in
jl
push
mov
jecxz
fwait
leave
mov
mov
cld
sbb
(bad)
push
adc
jmp
and
sbb
pop
cmps
mov
fisub
rol
mov
aam
mov
mov
push
movs
movs
lahf
push
mov
mov
push
cld
das
fiadd
mov
out
call
add
dec
inc
push
fwait
test
mov
ret
xor
push
ss
test
cmp
imul
inc
sbb
pushf
ins
adc
cmc
int3
xchg
cmps
das
sub
adc
sbb
xor
jbe
xor
out
arpl
das
cmps
push
adc
aaa
dec
adc
inc
sub
bound
iret
add
dec
lahf
mov
fsubr
push
xor
add
pop
xchg
dec
xor
jge
fcmovnu
sub
dec
mov
pop
(bad)
scas
jns
jno
pop
test
xor
xchg
xchg
in
scas
fisttp
and
sbb
mov
mov
push
mov
fsub
push
std
test
adc
jns
or
pop
in
or
pop
pop
and
fidiv
mov
inc
adc
inc
retf
in
dec
div
mov
inc
jp
mov
imul
out
xchg
mov
frstor
mov
adc
or
cmps
mov
int3
je
sbb
mov
adc
loop
je
inc
loop
jle
jle
shr
cld
fs
addr16
xchg
fs
test
mov
mov
jle
mov
cmp
push
loope
and
xchg
arpl
mov
push
mov
cmp
mov
(bad)
lock
dec
push
test
and
ins
packuswb
call
out
pushf
jb
and
cmp
jp
pop
(bad)
imul
adc
mov
push
(bad)
pusha
arpl
xor
js
mov
sbb
fidiv
es
mov
fst
cmp
mov
scas
and
js
xlat
and
inc
pushf
dec
ds
scas
jo
mul
jnp
inc
mov
mov
xchg
cmp
sub
sub
fprem1
push
xchg
inc
fwait
jbe
mov
ficomp
push
cld
das
mov
adc
xor
mov
inc
cmc
fs
push
fldenv
jmp
gs
add
push
movs
pop
ins
sti
add
dec
test
in
mov
xchg
out
xchg
(bad)
int3
xor
movs
addr16
test
cld
jp
cmp
xor
pop
test
enter
add
push
inc
push
call
fldpi
aad
ret
push
sbb
lds
or
push
js
stos
fcomp
sbb
pop
push
lods
test
loope
pop
iret
sbb
aaa
out
cwde
mov
or
cld
inc
data16
jb
bnd
mov
push
in
xchg
fwait
xor
scas
cld
gs
jp
in
xchg
mov
fs
add
xchg
mov
adc
mov
sahf
outs
retf
mov
or
mov
rcl
aaa
in
and
inc
jmp
mov
(bad)
adc
pushf
add
loope
das
jns
jne
in
sub
int
inc
repnz
push
ret
push
imul
xor
in
movs
xlat
cld
nop
mov
ins
mov
sbb
adc
sahf
add
outs
(bad)
aad
gs
push
call
cli
inc
cwde
mov
mul
dec
jb
pop
cmp
clc
enter
and
dec
and
jns
mov
push
lahf
dec
mov
in
mov
and
inc
cmp
inc
inc
mov
inc
adc
sbb
(bad)
pop
test
sti
icebp
das
ins
fidivr
cdq
dec
pop
ret
loop
or
(bad)
mov
inc
cmp
adc
clc
cwde
xlat
pop
imul
jmp
and
movs
mov
cli
mov
xchg
iret
inc
movs
int
jb
xor
pop
lods
or
dec
jae
push
inc
and
test
leave
ins
in
stos
dec
ret
mov
jge
dec
push
pop
jmp
shl
jecxz
sahf
pop
lds
or
xchg
movs
in
inc
push
sbb
jae
mov
test
jp
cmp
fdivr
and
fisubr
jge
imul
xchg
outs
xor
xlat
cwde
add
sar
mov
in
add
out
jnp
pop
lahf
xor
imul
sub
test
icebp
fisub
cdq
or
xlat
mov
and
or
xchg
(bad)
ror
shr
mov
sub
xlat
jmp
pop
les
pushf
(bad)
mov
es
adc
push
fstp
loopne
ret
pop
add
cmp
lock
xor
in
rcl
(bad)
push
or
jnp
movs
jbe
test
nop
loop
(bad)
cwde
(bad)
imul
add
dec
mov
ret
mov
jge
mov
jmp
into
jle
or
adc
enter
xchg
push
jmp
xor
mov
cmp
mov
aam
push
mov
sbb
push
add
ja
pushf
pop
cdq
sbb
jbe
jno
shl
sub
repz
mov
(bad)
lea
js
sbb
adc
push
add
pop
aam
mov
jl
pop
loope
cdq
outs
cmp
push
mov
add
mov
adc
add
jg
addr16
mov
jnp
and
jae
jp
fcomp
in
repnz
mov
push
loope
ins
jns
pop
add
mov
ss
(bad)
rcr
aad
dec
push
jmp
mov
and
ds
fdiv
xchg
push
and
xchg
xlat
sub
sub
push
dec
xor
in
sbb
jecxz
and
jnp
(bad)
jns
xor
out
pop
or
inc
repnz
retf
ret
and
mov
cmps
pop
loopne
dec
sub
(bad)
movs
mov
popf
push
iret
or
xchg
adc
mov
push
fadd
out
jle
lds
jmp
clc
sahf
jmp
push
inc
xchg
xor
adc
rcr
fild
mov
out
das
movq
(bad)
pusha
out
int
(bad)
push
mov
imul
cmp
aas
out
loop
mov
sub
in
out
idiv
pop
mov
scas
xchg
pop
pop
sbb
std
pop
jbe
dec
call
test
(bad)
mov
xchg
add
cdq
dec
and
push
fidiv
dec
push
sbb
push
ins
imul
and
and
jmp
pop
sub
pop
push
inc
inc
fdiv
test
xchg
sbb
jl
mov
stos
mov
pop
mov
push
cdq
mov
xchg
test
push
jp
sub
xorps
retf
jp
ret
and
mov
ror
(bad)
inc
or
or
mov
shl
dec
xlat
mov
inc
push
js
fld
bound
pop
out
int
jbe
aam
mov
sub
add
popf
das
test
scas
jmp
inc
jg
dec
inc
pop
test
mul
push
push
mov
dec
(bad)
mov
add
add
std
in
aas
mov
adc
mov
dec
dec
inc
rcl
hlt
or
mov
dec
test
pusha
mov
test
adc
adc
sar
mov
iret
sub
mov
or
xchg
xlat
dec
xchg
sub
gs
mov
sub
sbb
frstor
stos
mov
stc
or
xchg
fs
inc
mov
add
clc
mov
sub
xor
xchg
call
(bad)
mov
dec
jae
outs
in
daa
jle
add
adc
stos
fimul
fsubp
cmps
pop
jb
pushf
jg
fst
sub
outs
adc
mov
outs
jg
jbe
clc
dec
dec
out
lods
inc
dec
jne
(bad)
mov
sbb
pop
and
bound
frstor
ins
test
(bad)
add
imul
int
mov
sbb
inc
mov
xchg
fild
shl
mov
cmp
loop
or
jne
fsub
popa
and
mov
sub
cmp
push
test
sub
test
adc
xchg
fidiv
mov
cmp
daa
and
inc
cmp
(bad)
push
ins
mov
imul
mov
outs
sub
shl
ss
in
mov
addr16
xlat
lods
dec
es
inc
pop
adc
js
jp
test
mov
pop
out
push
repnz
cs
sti
push
xchg
daa
mov
jno
invd
sub
add
into
or
lahf
je
lds
lds
mov
mov
push
sub
adc
out
(bad)
(bad)
xor
out
pop
ins
lea
cld
mov
test
inc
movs
(bad)
pop
pop
fmul
stc
int
push
and
xor
xor
xchg
push
(bad)
mov
cmp
inc
add
mov
ret
xchg
adc
mov
ret
inc
pop
pop
pop
xchg
and
lock
mov
push
mov
pop
fisttp
test
sbb
movs
loope
push
es
or
cmp
inc
and
pop
pushaw
into
push
jns
mov
call
leave
cmp
movs
pop
enter
fs
push
test
enter
dec
cmp
xchg
rcr
stos
push
fistp
xchg
xchg
pop
jb
push
push
ficomp
add
and
sub
mov
jmp
push
div
sub
push
inc
ja
pop
scas
loope
inc
add
sub
popa
outs
popa
mov
jo
xchg
clc
dec
pusha
xor
dec
sbb
inc
lahf
add
shl
mov
(bad)
popf
sbb
jno
xor
jmp
fist
xchg
ins
pop
push
jnp
or
sar
dec
ss
mov
inc
in
outs
xchg
shl
adc
sti
add
arpl
scas
aad
fcmovnb
xchg
xchg
cmp
ret
cs
push
popf
les
stc
je
add
dec
inc
shld
add
not
add
loopne
fmul
mov
adc
cld
jl
es
dec
movs
mov
add
sbb
cmc
into
xlat
scas
sub
scas
sar
pop
pop
mov
std
mov
xlat
dec
fwait
jmp
or
jg
mov
xor
push
cwde
mov
retf
idiv
scas
mov
push
push
mov
mov
(bad)
sbb
push
add
xchg
gs
push
and
push
jmp
add
rcr
aad
int3
jmp
test
adc
and
and
jo
xchg
test
outs
jbe
push
ret
cmps
dec
mov
xor
mov
test
push
mov
jge
and
jnp
and
add
and
cmp
xchg
aas
fwait
push
xchg
inc
jge
dec
or
loopne
std
jmp
push
mov
mov
into
and
out
inc
loopne
jp
push
adc
int
mov
daa
or
lock
mov
and
mov
stc
ss
sub
test
inc
aas
(bad)
test
xchg
cmovg
call
jecxz
xchg
xchg
pusha
(bad)
pop
(bad)
adc
fistp
mov
in
dec
shl
loope
mov
cmp
retf
pop
mov
jne
add
test
test
mov
(bad)
loopne
popf
aas
mov
mov
mov
(bad)
xor
enter
dec
bound
or
xchg
and
fisubr
push
cmp
movs
mov
or
fiadd
fimul
pop
outs
pop
ret
cmps
std
or
push
fcomp
xchg
retf
lock
sbb
ds
and
jp
sbb
call
rcr
mov
pop
cs
stos
mov
(bad)
fidivr
fisub
pop
call
sbb
les
int3
gs
jg
pop
pop
or
mov
scas
mov
xchg
mov
and
inc
aam
aam
jmp
and
(bad)
xor
xchg
ins
push
test
(bad)
enter
add
lods
mov
adc
mov
cmp
dec
enter
jbe
push
mov
pop
cmps
and
dec
cs
cmp
cmps
inc
push
ja
mov
adc
in
cmp
push
fsub
mov
jmp
repz
add
loopne
dec
cmp
jmp
je
cs
(bad)
loope
ror
call
sbb
stc
xchg
out
mov
fidivr
out
and
and
pushf
out
loopne
or
adc
or
enter
daa
push
pop
push
pop
icebp
mov
nop
stos
dec
add
adc
jecxz
sbb
mov
mov
cmp
jo
inc
jmp
jnp
cli
sbb
xlat
push
jb
mov
dec
push
daa
fld
pushw
popa
dec
sub
lds
scas
test
cmp
inc
jmp
add
pop
xchg
sti
pusha
cmp
jnp
test
mov
scas
mov
jmp
out
lock
xor
mov
loop
pop
or
jne
cmp
retf
mov
xchg
push
add
icebp
mov
mov
xlat
in
and
call
aam
leave
dec
mov
sbb
xchg
inc
aas
inc
dec
js
jb
(bad)
clc
or
jg
lods
mov
mov
pushf
ins
cld
jmp
xor
xchg
lahf
adc
and
jbe
fs
xchg
sbb
loope
mov
push
daa
(bad)
rol
pop
(bad)
aas
dec
scas
jns
and
lds
mov
jg
pop
cmp
mov
mov
bound
enter
adc
bound
add
es
ins
retf
fsub
xchg
imul
fdiv
cmp
mov
sbb
sub
and
add
jno
lods
aas
call
cmp
cmp
jmp
(bad)
icebp
or
pushf
loope
or
setnp
or
imul
pop
mov
test
ret
cmp
sub
retf
mov
pop
scas
gs
xlat
cld
into
cmp
pop
mov
fild
pop
shr
pop
dec
xchg
push
fistp
int3
push
add
dec
out
and
or
fisttp
jmp
and
add
sti
(bad)
icebp
ins
add
push
rcl
or
out
and
aam
push
cdq
mov
bound
mov
cli
in
xor
mov
sbb
mov
fisubr
push
adc
outs
jmp
arpl
push
in
sub
(bad)
fsub
push
fild
dec
ins
repnz
mov
xchg
out
inc
dec
push
fadd
or
mov
(bad)
into
lods
(bad)
aam
jns
add
dec
sbb
iret
jbe
inc
rol
out
mov
loope
int
push
jbe
mov
ins
pushf
pop
retf
in
lods
or
sub
adc
pusha
icebp
addr16
fldpi
and
pop
mov
jne
in
pop
pop
push
cmp
and
cmps
xchg
in
jmp
push
push
imul
push
movs
cmp
xor
push
fwait
add
jecxz
add
(bad)
cmps
mov
popf
push
iret
jecxz
pop
fwait
mov
mov
and
pop
fstp
mul
sbb
adc
mov
mov
call
arpl
push
ins
aad
gs
out
adc
xchg
add
aas
xchg
or
adc
rcl
lods
add
push
and
xchg
adc
aas
lahf
pop
loope
call
cmp
xchg
pop
das
cdq
xchg
sub
sbb
test
jecxz
ficom
ss
sub
ret
push
fisttp
sub
loopne
mov
ss
add
test
add
in
jmp
pop
lods
leave
(bad)
jecxz
jne
add
loope
mov
xor
xchg
or
stos
xor
js
pop
inc
pop
enter
fild
(bad)
push
mov
out
xchg
sahf
int
xor
or
js
loop
inc
inc
popf
pop
sahf
xor
jmp
data16
arpl
pop
aam
push
jl
jnp
dec
outs
push
dec
jg
mov
push
loop
lods
fsub
ficom
inc
xchg
jg
lea
adc
in
push
out
lods
ins
(bad)
loop
mov
popf
push
jl
xlat
cwde
sahf
out
mov
or
sahf
lock
or
arpl
mov
div
pop
sbb
lods
jmp
jmp
(bad)
push
xor
sbb
xlat
xchg
and
adc
mov
jle
mov
out
xchg
nop
mov
mov
cmp
sti
cdq
sbb
xor
jmp
test
fs
sub
stc
mov
cmp
pop
dec
test
jl
outs
iret
fwait
sbb
out
push
jnp
jae
inc
push
sbb
ja
mov
ficomp
nop
pop
imul
call
imul
xchg
xor
hlt
int
xchg
in
mov
sbb
icebp
(bad)
jne
repz
stos
inc
out
popa
int3
cmovo
(bad)
(bad)
pop
inc
add
ss
aas
push
pop
pop
sbb
mov
xchg
mov
gs
add
jno
xor
(bad)
fimul
outs
fnstsw
xchg
imul
push
je
dec
xchg
fwait
imul
imul
or
sub
fistp
and
aad
sub
jecxz
add
dec
sub
mov
push
inc
pop
and
push
or
dec
cmp
cmps
mov
inc
dec
inc
inc
icebp
xchg
cli
xor
adc
mov
inc
and
push
div
inc
bound
ret
loopne
jno
stc
inc
mov
cwde
dec
cdq
into
xor
hlt
icebp
shr
jno
sub
in
vmovups
call
dec
mov
in
xchg
retf
inc
push
pop
pushf
fwait
xchg
adc
popa
loope
out
mov
push
mov
arpl
inc
lahf
push
push
leave
bound
ret
pop
jne
mov
sti
mov
push
iret
retf
ds
add
sbb
or
mov
and
hlt
outs
loope
ror
inc
dec
sub
neg
std
lock
or
sbb
dec
js
outs
(bad)
idiv
add
mov
pop
lods
or
sbb
pop
sbb
mov
jnp
sub
xchg
into
in
jno
aas
jno
and
inc
jecxz
mov
lock
jp
data16
dec
pop
aaa
cmp
shl
rol
jmp
jle
aas
ss
cmp
push
jns
icebp
iret
icebp
mov
ins
inc
mov
lds
cmp
jae
mov
mov
pop
mov
mov
sar
jno
fwait
or
pusha
sub
adc
shl
ja
das
stos
test
into
pop
push
in
pop
pop
call
sti
nop
das
dec
push
and
fld
cdq
fs
mov
pop
and
std
push
test
aad
rol
bound
pushf
mov
xchg
cmps
jnp
ins
jns
jb
fsub
je
stos
pop
enter
and
xor
cdq
stc
in
(bad)
jmp
aas
or
pop
adc
pop
icebp
call
cdq
ror
mov
stos
xchg
test
push
adc
imul
scas
int
xchg
fcmovnb
dec
icebp
mov
mov
xor
popf
call
popa
fsubr
test
dec
adc
mov
cwde
xor
push
xchg
repz
scas
popa
jle
stc
mov
cmp
scas
mov
pop
push
jl
xlat
adc
addr16
dec
mov
push
outs
push
ret
mov
cmps
push
inc
cmp
jo
dec
es
arpl
pop
and
lods
retf
out
dec
cmp
xlat
jg
data16
enter
(bad)
dec
xchg
cmp
pop
lds
fisttp
mov
jg
pushf
mov
jae
xor
(bad)
repnz
(bad)
push
das
test
xchg
movs
cmp
jge
test
test
cmp
aaa
xchg
sub
cmp
out
mov
popa
cld
jmp
pop
adc
scas
mov
jl
push
push
inc
test
add
rol
cwde
sbb
jge
sbb
dec
and
jge
dec
fcmovnbe
jae
push
pop
xchg
lods
sbb
push
test
ins
jl
(bad)
scas
std
shr
add
shr
test
xlat
push
sub
adc
repnz
lahf
inc
add
xchg
retf
jno
xor
in
fadd
addr16
pop
ss
call
cmp
and
mov
pop
inc
push
jnp
fstp
fist
xor
jns
adc
mov
out
push
dec
mov
xor
mov
jp
call
stos
hlt
lahf
icebp
dec
jl
xchg
mov
fidiv
loopne
mov
cmp
stc
or
adc
retf
(bad)
pop
jnp
es
sbb
push
pop
(bad)
js
mov
cmp
xchg
repnz
cmps
mov
(bad)
and
std
xchg
jecxz
imul
repnz
or
xor
ds
pop
fnstcw
mov
(bad)
js
scas
in
cmp
sbb
add
mov
dec
sbb
jo
rcl
js
fnstsw
outs
popa
pop
mov
pop
daa
(bad)
(bad)
pop
lods
repnz
cmp
fcom
push
outs
jmpw
fild
ret
xchg
loope
gs
lea
sub
popa
ins
je
scas
ret
sbb
pop
enter
pop
aam
cmp
retf
stos
dec
iret
mov
xchg
mov
das
sbb
or
sbb
and
out
jg
fs
fisub
cmp
sbb
sub
pop
pop
push
scas
cmps
jl
dec
sbb
mov
cmps
sbb
jnp
lods
in
cmps
ja
cwde
lods
jg
inc
in
sub
(bad)
xlat
dec
arpl
and
icebp
xchg
stc
ds
imul
jmp
std
aam
stos
neg
aad
sahf
adc
inc
(bad)
frndint
xor
adc
push
push
(bad)
andps
and
ficomp
pop
sub
ss
data16
and
(bad)
stc
push
loope
sbb
pusha
add
sub
leave
push
jne
adc
aaa
jns
data16
pop
adc
cdq
lods
aad
or
iret
jmp
rcl
sahf
xchg
repz
dec
or
int3
jb
dec
add
jl
pop
leave
(bad)
ds
fnsave
and
add
(bad)
mov
ss
jo
gs
xchg
(bad)
in
lods
inc
mov
rcl
std
sbb
mov
(bad)
js
xchg
addr16
mov
pop
jp
sti
pushf
lods
or
adc
mov
jp
data16
push
jmp
scas
jmp
mov
xor
daa
pusha
xlat
mov
push
sub
adc
jae
add
mov
(bad)
in
ror
or
test
loopne
jmp
jge
mov
jp
retf
test
scas
inc
(bad)
push
test
add
int3
push
cmp
ret
adc
mov
push
jns
retf
out
jmp
(bad)
lahf
add
lods
popf
inc
or
xchg
retf
pop
jno
pop
into
jmp
adc
dec
rol
das
and
mov
mov
cmp
(bad)
xlat
mov
icebp
mov
push
test
cdq
das
fwait
je
ds
pop
movs
adc
sbb
cwde
sub
bound
cs
cmp
mov
dec
xchg
lea
mov
mov
pop
dec
and
retf
jl
xor
mov
cmp
push
or
iret
scas
shl
inc
mov
cs
inc
or
int3
push
fwait
jp
adc
pop
lods
je
lods
mov
sbb
and
(bad)
arpl
repz
cli
xchg
loop
adc
inc
sub
xchg
(bad)
repnz
inc
push
pop
lahf
mov
test
iret
cmps
not
mov
fsub
cmp
jle
push
inc
mov
xlat
push
adc
xor
jbe
enter
jb
test
jle
pop
cdq
inc
adc
mov
call
sbb
outs
into
jno
mov
int3
xor
xor
dec
(bad)
or
pop
enter
lea
adc
and
shl
and
or
(bad)
retf
push
adc
lock
ins
sbb
fstp
lds
fadd
jl
mov
scas
dec
push
cwde
je
mov
in
out
cmp
or
pop
ror
xchg
inc
aam
ja
(bad)
jne
xor
add
cmp
push
xor
popa
retf
cwde
mov
bound
outs
cmp
dec
inc
pusha
inc
mov
sahf
fnstcw
stos
cs
fld
push
hlt
or
bound
mov
mov
jbe
jno
pushf
inc
daa
fsubr
add
inc
mov
jg
sbb
xchg
push
mov
jb
hlt
and
jnp
sub
sbb
mov
xchg
ins
gs
sub
enter
push
cmp
repnz
imul
xchg
sub
daa
pop
std
dec
cmps
fs
inc
fcom
aas
adc
xchg
inc
rol
retf
xor
mov
shr
ror
in
mov
les
ror
adc
mov
mov
imul
cs
push
mov
ds
push
add
mov
jns
adc
fcmovnbe
cld
hlt
test
cmps
std
jge
push
add
push
lods
xor
mov
outs
and
and
add
and
sbb
test
fbld
sahf
add
sti
pop
mov
mov
dec
call
pop
push
lea
xchg
or
ret
and
jecxz
mov
rcr
dec
movs
jl
cmp
neg
(bad)
fisub
add
int
dec
add
push
sbb
xchg
hlt
inc
mov
sub
in
cmp
xor
pop
push
mov
lods
(bad)
mov
stos
sbb
in
loopne
sbb
je
in
inc
fbstp
test
mov
xchg
sub
push
mov
pop
sti
lahf
mov
push
or
push
vmread
repz
movs
pop
clc
aad
push
loope
fcom
mov
mov
dec
jmp
or
inc
sbb
rcr
fcom
inc
pop
mov
ficom
xchg
mov
fisubr
push
fmulp
jae
mov
push
mov
pop
mov
cwde
ins
pop
jnp
jb
iret
fisubr
pop
adc
jns
inc
fidiv
inc
inc
nop
pop
cs
mov
pop
fwait
in
mov
scas
into
sub
xor
push
ins
push
xchg
retf
ret
xchg
sbb
push
jecxz
loop
inc
push
hlt
inc
rcl
test
push
cmps
arpl
sbb
(bad)
xchg
test
pop
stc
(bad)
sub
into
in
repnz
fwait
into
and
inc
mov
pop
or
cmp
fadd
adc
(bad)
imul
add
aas
jns
add
jl
fdivr
es
and
cmp
bound
repnz
add
xor
jo
push
mov
icebp
add
push
pop
cmp
jl
ss
adc
(bad)
test
lods
outs
movs
jp
or
or
dec
aaa
loopne
mov
adc
mov
popf
dec
jo
test
inc
bound
cmp
aas
(bad)
rcr
addr16
push
cs
sbb
push
inc
xor
or
ins
retf
xchg
imul
mov
mov
push
pushf
movs
jo
retf
mov
and
out
lock
je
jne
nop
xchg
xchg
xchg
loope
mov
or
arpl
or
fistp
adc
jne
fimul
fimul
out
aaa
(bad)
stos
mov
jns
jg
scas
inc
adc
movs
into
ror
pushf
mov
xor
mov
jae
mov
ror
pop
push
mov
scas
jg
xor
fwait
add
iret
dec
leave
sub
xchg
test
inc
pop
or
add
xchg
jmp
and
ds
and
pop
std
jg
int3
dec
dec
xor
mov
jmp
push
pushf
dec
xchg
retf
dec
push
sub
mov
sub
pop
in
jbe
jl
or
push
frstor
xlat
adc
dec
jecxz
dec
mov
and
push
clc
and
xchg
mov
jne
jnp
jno
in
xor
out
outs
out
adc
sub
(bad)
adc
pop
mov
daa
inc
es
(bad)
leave
fwait
ja
push
fist
out
or
daa
add
mov
sub
add
or
mov
mov
mov
daa
fcmovb
mov
movs
movs
sub
ins
les
ss
(bad)
in
mov
xchg
mov
mov
jnp
pop
movs
xchg
aam
lods
fisubr
call
jne
repz
das
add
push
sub
jbe
pop
mov
vprotd
aas
pusha
loop
div
mov
imul
sub
(bad)
mov
jmp
mov
or
push
pusha
cmp
push
or
mov
es
pop
cmps
xchg
lock
xchg
mov
(bad)
and
mov
loopne
aaa
ret
inc
mov
pushf
ds
ins
std
push
xlat
nop
out
in
lahf
xchg
or
fs
add
sti
push
out
test
neg
in
mov
xchg
out
or
lods
and
jno
jae
gs
test
fs
outs
repnz
sub
push
in
cli
pop
loopne
inc
daa
xchg
aaa
test
ret
in
cmp
sbb
int
lock
jmp
add
adc
jle
push
dec
cs
sqrtps
mov
ret
mov
xchg
dec
mov
dec
inc
pop
fwait
push
mov
cli
out
fidiv
movs
ins
ror
(bad)
fnstenv
sub
add
scas
int3
cmp
dec
fist
js
leave
scas
dec
in
popa
ss
(bad)
fmul
bound
ret
ror
add
pop
sub
hlt
cmps
or
fcomp
jmp
xor
in
daa
add
add
mov
shl
sbb
pop
pusha
sbb
(bad)
ins
call
out
dec
in
pop
ror
sub
(bad)
adc
cmp
test
test
mov
icebp
push
xchg
es
fisub
imul
jle
sbb
sar
out
ror
iret
fisttp
sub
cmps
pop
(bad)
outs
push
fst
push
aaa
adc
aaa
xchg
ss
adc
(bad)
xor
int
xchg
cli
stos
mov
clc
sahf
mov
xchg
push
jl
mov
dec
fiadd
push
sahf
in
mov
sbb
pop
dec
in
pop
or
dec
add
and
inc
shr
inc
aas
sub
fwait
adc
xchg
inc
in
pop
mov
adc
lock
jns
pushf
xchg
out
or
jmp
es
xchg
test
mov
movs
push
push
es
and
sbb
jg
add
lock
mov
push
mov
pop
cmp
es
push
xchg
pop
cmp
cli
lds
js
pop
pop
mov
loope
mov
aad
sub
in
jo
xchg
xor
jbe
pop
mov
aas
pop
xor
xor
mov
xchg
stc
sahf
cmp
(bad)
stos
inc
add
jb
cdq
push
xchg
lock
ret
test
sub
lahf
std
sbb
(bad)
mov
and
aam
outs
sub
push
shr
test
cmps
adc
int
push
push
call
adc
add
clc
jmp
sub
popa
dec
sbb
retf
stos
jge
or
hlt
fs
sub
loopne
or
inc
in
xchg
cmp
and
push
mov
out
inc
in
sbb
jle
add
add
pop
inc
arpl
test
test
add
pop
sub
mov
mov
scas
mov
mov
movs
iret
in
adc
mov
test
setp
lock
sub
aaa
pop
xchg
cdq
mov
jmp
repnz
jg
loopne
mov
mov
mov
jle
pop
fwait
add
cmp
add
lods
mov
test
jl
pop
ror
lea
sbb
repnz
shr
(bad)
xchg
xor
aas
loop
or
call
je
inc
xchg
outs
xchg
cmc
adc
cmp
cld
xchg
dec
cmp
adc
jp
jl
push
lods
nop
lahf
scas
arpl
adc
in
mov
ror
ja
(bad)
daa
and
int
sub
jge
lahf
test
inc
xchg
jl
pop
push
shr
add
push
sbb
xchg
lea
(bad)
dec
shl
sbb
mov
push
inc
ja
jnp
popa
push
or
cmc
push
or
gs
push
cli
xchg
xor
fcom
mov
mov
pop
ret
mov
cmp
mov
es
jmp
mov
pop
mov
shr
sbb
or
push
dec
fwait
scas
pop
mov
inc
in
sbb
retf
stos
test
ja
and
and
adc
shr
cmp
pop
in
mov
xchg
(bad)
pop
arpl
cwde
aad
mov
outs
rcl
mov
out
in
test
jge
and
bound
add
dec
lahf
ds
enter
pop
jg
test
mov
jns
fiadd
adc
pushf
jo
clc
loopne
pop
mov
jae
jns
pop
push
es
scas
pop
int3
add
or
xor
mov
gs
scas
ds
div
pop
inc
cmp
test
daa
mov
jo
call
lods
mov
or
ds
sub
ret
in
jp
mov
xor
inc
test
inc
cmps
stc
fwait
aas
out
and
stc
inc
jge
lahf
sti
jmp
push
fcmove
mov
mov
pop
test
mov
inc
pushf
pop
lock
cmc
arpl
jg
jp
adc
(bad)
sbb
xor
sub
xchg
stos
ins
outs
and
loope
xor
and
js
fcomp
adc
mov
or
mul
mov
mov
call
jno
mov
dec
les
mov
dec
movs
cdq
aas
push
out
xchg
fs
push
jne
push
les
jb
or
(bad)
jnp
in
stc
inc
js
adc
pop
inc
ror
mov
movs
mov
(bad)
add
int
lea
adc
int3
sub
std
add
imul
jecxz
addr16
hlt
mov
push
shl
adc
popa
xor
loopne
mov
maxps
sahf
mov
gs
mov
ja
xchg
arpl
cli
push
pusha
cmp
lock
mov
push
mul
and
in
xchg
xlat
mov
adc
add
inc
outs
(bad)
aam
jmp
fldcw
push
adc
aas
pop
sub
dec
pop
(bad)
std
hlt
sub
lea
mov
xchg
sbb
mov
xchg
sub
xchg
sbb
fcomp
(bad)
mov
mov
jns
lea
repz
cmp
fwait
jmp
fidivr
and
fcomp
mov
gs
in
jne
xchg
sti
mov
xchg
ffreep
ins
xor
cmps
lea
sbb
rcl
sub
sbb
out
jns
ror
sbb
mov
sahf
or
jmp
or
inc
jb
xchg
out
cmp
addr16
mov
pushf
leave
add
sbb
data16
mul
push
stos
cwde
repnz
jae
xor
or
clc
sub
pop
cld
cwde
bswap
pop
inc
xchg
movmskps
out
dec
xchg
movs
daa
xchg
arpl
scas
jge
in
pop
call
inc
gs
xchg
jo
push
pusha
inc
ror
inc
sub
out
loopne
ror
arpl
cmp
(bad)
lea
pop
dec
mul
popa
hlt
out
cmp
pop
xlat
fs
inc
jmp
repnz
pusha
xchg
repnz
pop
sbb
pop
in
les
jle
call
inc
test
sti
loopne
mov
sti
clc
bnd
mov
add
in
ins
cmps
and
gs
and
add
fist
inc
mov
or
push
xchg
lods
mov
sbb
mov
sub
arpl
sar
push
sub
imul
push
pop
repz
and
lea
push
jge
bound
ss
outs
jg
sbb
out
bnd
inc
mov
sub
adc
push
push
push
hlt
addr16
add
clc
mov
mov
pop
add
cmp
jp
push
shl
and
add
or
retf
push
fstp
cwde
push
push
xchg
mov
je
push
xchg
mov
ins
mov
int
bound
mov
fnsave
mov
fstp
into
out
sub
jmp
(bad)
jae
int
jns
fcmovnu
cmp
xor
and
pop
je
pop
mov
adc
xchg
int
fcom
dec
jo
push
jecxz
pop
aad
xchg
pop
or
leave
repz
mov
jp
inc
pop
pop
push
arpl
out
fcmovnbe
push
lea
inc
je
retf
in
icebp
(bad)
fst
mov
out
jge
sbb
pop
jbe
daa
enter
mov
add
xor
fucomip
mov
mov
xchg
lds
dec
mov
xchg
cmp
sub
sbb
push
push
lods
bound
fisubr
pushf
jo
dec
out
outs
sub
in
and
sub
mov
push
das
jge
test
ret
pop
rcr
sub
jae
lods
sub
test
shr
(bad)
jmp
in
xchg
stos
aas
cmp
ja
dec
dec
mov
movs
mov
pushf
js
gs
inc
push
lods
xchg
bound
fadd
ja
pop
int
jecxz
imul
rol
fs
adc
cmp
sti
xchg
pop
push
mov
outs
cwde
mov
sub
dec
hlt
jmp
push
fcomp
mov
dec
xchg
in
push
add
cmp
lds
fnstcw
adc
mov
arpl
(bad)
xchg
push
out
mov
in
or
or
mov
inc
or
daa
addr16
lock
hlt
sahf
test
cmp
and
pop
jnp
push
xchg
fadd
push
xor
pushf
shl
test
push
test
mov
xchg
mov
push
xor
stc
cmps
cmc
idiv
xchg
enter
sub
xchg
sahf
pop
gs
neg
add
test
test
xor
pop
leave
adc
dec
movs
in
push
pusha
mov
or
mov
cmp
popf
sub
cli
sbb
sub
cmp
mov
pop
adc
int
pop
sub
outs
sets
push
xchg
sbb
xlat
popf
sbb
test
mov
test
xchg
cmp
fwait
push
repz
mov
mov
mov
std
pop
pusha
int3
icebp
retf
inc
shl
xor
push
cmp
cmp
mov
or
mov
test
push
leave
adc
mov
pop
mov
fsubr
mov
xor
loopne
test
add
sbb
scas
mov
das
jns
or
pop
hlt
stos
adc
jns
push
pop
mov
add
push
scas
mov
jl
lock
ret
ror
sub
push
mov
add
lea
sbb
mov
repz
jb
lock
jecxz
call
cmps
pop
push
cmc
retf
aam
dec
xchg
pop
cs
fnstenv
jo
dec
iret
inc
mov
ins
mov
dec
xchg
retf
sub
int3
and
mov
jno
jnp
dec
or
mov
sub
jp
(bad)
retf
jmp
je
cmps
daa
das
lahf
pushf
push
dec
retf
cmps
outs
fwait
loopne
xor
scas
aad
add
or
cwde
sahf
loope
inc
mov
cmps
dec
fs
loopne
ds
test
inc
push
pop
(bad)
dec
shr
adc
daa
add
mov
std
sahf
mov
add
pop
mov
and
fiadd
sub
dec
add
fidiv
cdq
xor
adc
ss
cld
xlat
xchg
jmp
out
xchg
aas
sbb
lods
and
out
add
dec
(bad)
sbb
loop
aad
or
hlt
jmp
adc
inc
lds
inc
test
lock
sbb
jecxz
dec
mov
xor
and
push
dec
stos
mov
retf
inc
ja
ja
xor
sub
mov
add
retf
cli
hlt
dec
pop
jmp
psrlq
cld
mov
xor
sbb
les
jmp
cmp
mov
js
dec
ret
stos
cmps
or
hlt
int3
popa
inc
sbb
ins
push
in
enter
mov
inc
loope
ja
loop
jl
pushf
jne
inc
int
and
lea
xchg
push
xchg
cmp
(bad)
xchg
dec
iret
loop
in
inc
pop
push
pop
data16
mov
xor
rol
ins
inc
loope
xchg
add
add
push
or
mov
add
in
add
inc
cld
js
mov
stos
or
movs
sbb
imul
mov
dec
idiv
jae
mov
jne
pushf
xchg
pop
cmp
adc
jmp
sbb
sbb
and
ret
repz
jg
sbb
shl
cli
int3
push
xor
mov
clc
(bad)
jle
xor
fcomp
sar
push
aad
mov
lahf
add
stc
movs
pop
mov
ins
ins
sahf
int
mov
push
jbe
adc
enter
pop
xchg
jge
int3
push
loope
jnp
or
hlt
inc
xor
xchg
jo
cmp
in
xor
mov
sub
popf
in
ss
dec
ldmxcsr
into
cli
outs
fisttp
cmps
add
and
in
leave
retf
fwait
add
pushf
call
mov
lahf
xchg
daa
push
idiv
mov
xor
pop
sbb
pop
bnd
retf
ja
push
jne
adc
or
cmp
ins
jo
pop
push
shr
ret
mov
outs
adc
dec
int3
jae
xchg
shr
fisttp
(bad)
mov
in
jl
xchg
mov
mov
out
(bad)
and
movs
pop
aam
gs
or
xlat
(bad)
inc
call
pushf
imul
jl
cmp
and
push
jmp
push
cs
push
inc
adc
fisub
xchg
mov
mov
clc
inc
out
mov
adc
mov
rcl
or
call
cmps
sub
clc
jmp
or
std
adc
ins
repnz
out
addr16
and
inc
outs
or
sbb
push
xchg
or
stc
jp
add
pop
dec
js
jb
and
cmps
call
xchg
cwde
cdq
jns
repz
iret
loope
push
mov
lds
scas
movs
pop
jns
ret
ins
mov
pop
fmul
push
jmp
data16
call
inc
cs
stc
pop
loop
sar
sub
adc
inc
xchg
js
dec
xchg
and
inc
jne
push
scas
push
imul
xchg
sub
push
scas
xchg
cmp
sub
mov
mov
adc
cld
rol
fdiv
push
pop
(bad)
cdq
outs
sub
jmp
out
ss
enter
rol
mov
scas
mov
sub
sbb
add
jnp
or
mov
inc
sub
inc
push
pusha
pop
in
into
bnd
xchg
cmc
(bad)
mov
cmp
adc
xchg
xchg
ja
lea
in
mov
fdivr
mov
stos
sbb
outs
jae
mov
or
push
xor
push
dec
mov
adc
add
dec
out
jo
xchg
mov
mov
rcl
xor
push
push
xchg
ret
out
jmp
add
add
div
ins
sbb
inc
mov
repz
push
nop
out
pop
pusha
js
or
sbb
xchg
jmp
jb
mov
mov
push
mov
es
xor
retf
ds
loop
inc
lock
add
mov
inc
and
enter
jo
xlat
imul
mov
xor
xor
(bad)
dec
xor
lods
push
mov
cs
scas
popf
jno
jae
iret
cld
xchg
xor
sbb
xchg
mov
fcom
ins
(bad)
adc
clc
(bad)
xchg
push
mov
rcr
scas
int3
sbb
mov
and
test
mov
jb
jl
mov
fidiv
jbe
fbstp
ins
inc
mov
clc
xchg
jmp
push
jg
das
push
xor
(bad)
call
cmp
clc
or
and
or
shr
lods
pop
stos
scas
hlt
pop
dec
dec
mov
add
adc
pop
dec
test
mov
xor
mov
loopne
adc
test
in
sbb
mov
xchg
mov
loop
sbb
sar
add
fdivr
fistp
sti
xchg
fisub
jo
sar
xor
ja
sub
neg
sub
in
jb
scas
pop
mov
mov
lahf
add
adc
mov
(bad)
push
or
dec
movs
mov
push
loop
imul
(bad)
push
jle
or
mov
(bad)
push
xchg
imul
sbb
jge
cmp
aam
sbb
retf
cmp
push
cmp
inc
out
inc
call
push
bound
aaa
ins
xchg
mov
arpl
mov
fmul
and
push
js
push
lds
add
xor
and
pop
push
retf
inc
lock
cld
outs
sbb
loope
pusha
jecxz
dec
dec
mov
out
jp
loop
jmp
addr16
jl
pop
mov
sqrtps
div
out
jb
movs
shl
and
dec
or
test
(bad)
repnz
xor
jmp
into
xor
ins
sti
loop
sti
sub
dec
mov
cmc
pop
lock
pop
int3
xchg
push
and
push
test
mov
stc
push
test
ds
test
mov
mov
pusha
clc
ins
mov
adc
gs
push
mov
fwait
leavew
inc
in
and
enter
push
sub
into
xor
pop
imul
rol
pop
pop
arpl
adc
aam
outs
cli
jp
pusha
dec
jb
adc
into
sub
imul
stos
mov
sar
xor
pop
adc
shr
lods
dec
gs
(bad)
sbb
arpl
adc
es
xchg
fidivr
jmp
lods
jnp
popa
mov
dec
pusha
mov
pop
mov
scas
mov
xor
popf
ins
call
fist
js
inc
dec
adc
push
mov
sbb
push
in
pop
fmul
jnp
xor
test
test
add
(bad)
rcr
cdq
jo
jge
add
icebp
cmp
test
adc
add
gs
bswap
and
sbb
(bad)
pop
mov
add
pop
(bad)
rcl
loop
sbb
cmp
test
std
dec
push
rcl
dec
repz
sub
cmp
out
or
inc
sub
sbb
xor
xchg
cmp
sub
fild
(bad)
fbstp
adc
in
pop
adc
pop
(bad)
jbe
adc
cmp
add
icebp
inc
mov
aas
mov
clc
dec
mov
imul
mov
dec
dec
pushf
fwait
mov
jg
aad
jecxz
cmps
pushf
mov
push
pop
sahf
xchg
test
loopne
pop
inc
mov
mov
dec
int3
and
mov
std
xor
cmp
repz
aad
les
mov
ja
inc
repnz
mov
jnp
daa
push
mov
inc
xor
test
rol
add
xor
and
arpl
mov
sbb
shl
call
loop
test
outs
sbb
pop
pop
sub
jb
imul
out
rcr
xchg
hlt
in
retf
rcl
pop
or
movs
sbb
jo
test
hlt
inc
dec
xchg
mov
ss
int3
push
adc
loop
test
sbb
xor
or
leave
jo
frstor
popf
mov
inc
xor
pop
outs
imul
inc
test
push
lods
push
dec
psubd
ret
mov
push
jmp
nop
ds
cli
mov
(bad)
dec
out
imul
dec
repnz
stos
test
inc
je
push
cmp
(bad)
daa
adc
jmp
mov
jl
jg
xlat
lods
out
out
les
outs
ret
cwde
or
out
xor
jecxz
jae
sub
mov
push
imul
pop
cmp
mov
and
(bad)
imul
dec
das
jae
dec
jo
bound
adc
pop
cmp
icebp
xchg
or
pop
mov
(bad)
xchg
std
dec
js
fcmovne
adc
in
mov
das
cwde
add
xchg
es
xchg
inc
jmp
sbb
pushf
outs
iret
stos
jmp
aam
fistp
sbb
dec
inc
out
pop
xchg
bnd
and
push
add
pop
inc
add
arpl
adc
sbb
jnp
and
jne
lds
or
jo
stc
popf
ja
test
out
sbb
xchg
popf
ds
int
div
mov
cmps
repz
adc
mov
cmp
repnz
add
rol
popa
jbe
ret
loopne
pusha
jb
fisub
mov
cmps
sbb
bound
inc
inc
jmp
hlt
sbb
adc
mov
or
scas
fnsave
cmp
dec
stos
test
mov
(bad)
test
cmp
das
jnp
call
js
addr16
mov
pop
ret
pusha
pushf
adc
dec
test
gs
xor
sub
fdivr
enter
pop
xor
cmp
add
jp
mov
or
mov
repz
cmp
arpl
in
dec
inc
scas
iret
pusha
dec
xor
js
push
inc
inc
adc
test
bound
retfw
xor
sub
mov
stos
push
addr16
pop
fsub
cmc
add
sub
outs
or
fnstenv
outs
mov
cmp
xchg
ja
fdivr
jnp
enter
(bad)
repnz
xchg
fwait
cmp
jnp
lahf
jl
lods
js
(bad)
cmp
stos
lods
add
jns
xchg
mov
add
or
inc
and
push
or
int
push
and
in
jecxz
outs
pusha
pop
mov
sub
(bad)
xor
sti
(bad)
pop
jecxz
(bad)
ds
aam
dec
xor
popf
in
ds
lods
scas
dec
gs
add
sahf
fs
cmp
or
neg
arpl
aaa
or
addr16
or
inc
sbb
push
jne
push
mov
pop
or
adc
jmp
or
inc
(bad)
adc
inc
je
aaa
and
xchg
push
in
jb
in
pop
sbb
lods
popa
sbb
inc
pop
sub
xor
je
dec
ins
loopne
mov
sub
jb
loope
pop
pop
cs
jg
rol
sub
xor
in
adc
and
pop
aaa
adc
pop
pushf
sbb
mov
jle
rcl
lds
and
frstor
popa
inc
in
ret
sub
mov
aam
push
inc
aad
les
pop
shl
shl
(bad)
sub
lea
hlt
jecxz
lods
pushf
clc
ins
in
xor
adc
and
adc
ins
test
movs
mov
je
popf
fcom
sbb
push
mov
jno
and
push
jge
out
rcl
adc
mov
call
lods
fild
jns
dec
mov
fst
cmp
ins
popa
aas
xchg
adc
mov
mov
pop
cmc
push
jmp
mov
xchg
icebp
cwde
ss
bound
adc
clc
pop
movs
data16
repz
fs
push
pusha
mov
test
outs
test
push
not
xor
ret
bound
jl
das
jno
out
lods
arpl
mov
xchg
or
imul
ret
sahf
stos
iret
lahf
xchg
mov
pop
pop
arpl
(bad)
fstp
push
pop
mov
fs
popf
aad
mov
psllq
cmp
mov
loope
in
mov
ret
push
and
cmp
icebp
lods
sahf
cmps
fs
movs
inc
imul
loope
push
js
loope
xchg
jbe
cmp
out
andps
clc
popa
cmp
fmul
shl
pop
xor
loopne
mov
ret
out
clc
pop
inc
idiv
lahf
cli
dec
or
sub
push
mov
loopne
add
mov
dec
inc
das
cmp
adc
les
mov
movs
cmp
xchg
add
add
add
test
into
sahf
pop
sub
lea
inc
imul
pop
sub
push
xor
movs
dec
popf
push
sub
les
sub
stos
jbe
cmp
mov
dec
sub
lock
add
sub
cmc
dec
call
sti
inc
bound
mov
adc
cmps
push
dec
sbb
pop
mov
jmp
fst
fisttp
popf
cmp
hlt
inc
inc
cmp
cmp
xchg
mov
and
movs
outs
lods
or
pushf
mov
mov
pop
dec
aad
test
jo
fisub
pusha
ins
loope
jno
xchg
in
aad
stc
sub
shr
xchg
pusha
and
adc
movs
push
pop
stos
adc
stc
popf
rol
imul
jmp
mov
jbe
retf
jp
fcom
icebp
in
mov
or
int3
ins
(bad)
repnz
idiv
pop
fisub
nop
test
fwait
bound
movs
push
push
inc
pop
(bad)
jbe
aas
and
popf
cmp
daa
pop
jl
cmc
nop
call
dec
jle
stos
sbb
fiadd
jge
cmp
outs
xor
(bad)
and
pusha
lsl
ret
and
sahf
jg
idiv
idiv
outs
repnz
inc
jmp
(bad)
scas
je
jl
stos
sbb
dec
pop
hlt
mov
fiadd
xlat
mov
(bad)
mov
xor
pop
sub
ret
test
jle
mov
sbb
cdq
mov
lods
data16
mov
pop
sbb
int3
ja
stc
das
gs
mul
sbb
out
xchg
out
cdq
cli
clc
fwait
in
mov
pop
inc
repz
jne
(bad)
cmps
mov
jmp
repz
das
shr
push
and
mov
int
stos
cmp
jecxz
sbb
push
push
cmp
ret
fmul
push
(bad)
ds
imul
pusha
jecxz
inc
sub
jnp
or
pop
cmp
ins
mov
(bad)
repnz
add
jp
mov
adc
jnp
arpl
cmps
popa
inc
pop
popa
cmp
fisttp
pop
out
mov
leave
hlt
in
cdq
call
inc
mov
retf
int
jbe
mov
adc
ror
or
(bad)
inc
fwait
bnd
in
pop
ret
or
jmp
adc
cmp
add
pop
inc
(bad)
sub
je
into
stos
(bad)
scas
loopne
and
inc
mov
(bad)
fisub
or
fwait
jmp
sahf
imul
imul
or
push
lds
neg
ret
jns
fwait
loope
mov
add
sti
cld
sbb
into
mov
imul
jne
cmp
dec
aad
data16
push
out
aaa
mov
loope
dec
lahf
push
push
pushf
ins
mov
push
daa
adc
stos
outs
retf
pop
pop
add
fstp
and
xchg
adc
cmp
sub
or
(bad)
imul
and
fld
bound
outs
mov
push
dec
add
xchg
lods
push
scas
adc
pop
imul
scas
and
repnz
(bad)
in
movs
xchg
sbb
mov
mov
cmp
repnz
pushf
loope
mov
inc
pusha
addr16
stos
jmp
mov
nop
and
shl
aam
lea
jbe
dec
adc
mov
jnp
cs
cmp
jb
or
mov
jns
cld
mov
mov
mov
mov
pop
mov
mov
clc
jo
sbb
mov
cmp
dec
adc
pop
pop
add
xchg
jmp
xor
cs
mov
mov
in
lds
mov
not
popf
sbb
int
fadd
icebp
and
aam
sbb
pop
cld
lods
add
popa
cdq
call
mov
adc
loopne
inc
and
ret
sub
pop
pop
mov
jne
pop
movs
mov
mov
and
inc
ss
push
mov
mov
popf
dec
es
inc
lods
test
out
mov
mov
xchg
test
xor
jp
jbe
or
or
fcmovnu
sbb
scas
nop
sbb
loopne
adc
test
dec
je
cs
js
fidiv
aas
mov
xchg
addr16
je
mov
(bad)
popa
cmp
lea
xlat
mov
push
fwait
push
add
push
rol
test
and
inc
js
cvtps2pi
push
mov
test
bound
js
sbb
cdq
cli
test
in
jbe
pop
out
outs
not
xchg
dec
push
push
enter
cmc
cmps
les
mov
ds
jl
inc
cmp
enter
shl
xchg
in
push
adc
cmps
cmp
dec
add
in
jl
(bad)
cdq
arpl
fwait
(bad)
push
bound
(bad)
sti
jmp
dec
xchg
dec
jecxz
inc
test
pop
test
xor
ret
push
push
add
xor
inc
out
push
enter
sti
pusha
xor
in
cld
sete
push
ss
in
fmul
nop
dec
mov
sbb
or
mov
and
stos
cmp
pextrw
add
repnz
(bad)
ds
xchg
not
pop
std
jmp
test
mov
or
mov
stos
ror
and
jb
xchg
mov
mov
stos
adc
mov
inc
lock
adc
or
xlat
popa
jg
out
pop
bound
fld
fadd
ficomp
xchg
or
cdq
scas
mov
sti
les
ret
jl
xor
dec
out
cs
out
xor
jb
pop
add
and
cmp
mov
sub
(bad)
mov
stos
jl
sub
shl
sbb
adc
and
outs
cmp
mov
in
scas
outs
ss
mov
ins
aam
dec
int
and
fs
xor
call
fist
pop
and
jae
jmp
call
stos
jns
jmp
jmp
es
arpl
dec
js
add
inc
cmp
jae
or
sbb
inc
mov
jb
or
and
and
dec
jbe
jl
inc
jecxz
mov
sub
(bad)
repz
jae
xlat
sbb
dec
push
aas
les
xlat
cs
aas
hlt
fnsave
add
push
xor
mov
sub
scas
xchg
(bad)
and
hlt
mov
ror
push
cmc
loopne
pop
stos
pop
dec
jns
call
jmp
jle
jo
xor
jae
inc
jl
sbb
dec
fsubr
lahf
dec
sub
into
jle
ja
sbb
mov
xchg
cmp
arpl
loop
and
xchg
inc
call
iret
xchg
pop
xchg
call
jle
(bad)
in
jecxz
cmp
mov
(bad)
xor
push
in
retf
lock
adc
pop
mov
dec
inc
jne
cmp
in
xchg
test
mov
ja
repz
inc
data16
push
ret
push
inc
ret
popf
mov
cmp
sbb
popa
add
jmp
mov
push
call
xor
out
adc
movs
stos
xchg
lds
iret
call
mov
jp
cmp
sbb
inc
out
test
mov
and
movs
out
xchg
sbb
call
sahf
and
cmp
addr16
mov
aas
aaa
mov
adc
fisub
jne
hlt
lods
(bad)
jmp
bound
sub
sub
aam
ret
outs
pop
dec
xchg
cwde
add
add
jne
jl
stos
mov
inc
add
xor
int
(bad)
fcom
mov
ss
jl
inc
call
mov
adc
movs
ret
fnstcw
(bad)
jg
loopne
push
icebp
adc
retf
mov
jne
xchg
jnp
xor
ret
in
data16
(bad)
fst
mov
jmp
in
mov
and
cmp
push
xor
pop
stos
shl
fxch
mov
jb
clc
neg
scas
pop
scas
mov
sub
mov
mov
jle
jge
xchg
sbb
and
xchg
stos
mov
mov
cmps
dec
mov
xchg
xor
mov
sbb
adc
test
enter
daa
ss
dec
call
bnd
call
(bad)
pop
or
imul
(bad)
ret
out
mov
jl
xchg
popa
icebp
fs
sbb
sar
test
or
or
inc
cmps
iret
retf
int3
mov
xchg
std
icebp
xor
add
push
(bad)
clc
gs
xchg
and
push
xor
mov
test
jae
sub
or
rol
(bad)
aaa
popf
ins
cli
repnz
lock
xchg
mov
loope
aaa
retf
pop
dec
outs
xor
xchg
dec
add
mov
adc
mov
dec
movs
cmps
pop
into
out
mov
jmp
mov
in
je
cmp
dec
pusha
mov
test
repz
adc
adc
scas
leave
xchg
pop
push
dec
aas
cli
nop
inc
inc
call
push
addr16
push
lock
jecxz
call
mov
xor
push
(bad)
xchg
out
call
leave
shr
test
or
ss
xchg
push
pop
icebp
jae
js
(bad)
fisttp
jecxz
outs
cs
loop
test
sub
pop
mov
or
mov
cmp
pop
popa
mov
stos
mov
push
(bad)
jecxz
clc
mov
lods
fadd
stos
rol
xor
leave
stos
and
movs
fdivr
dec
les
les
test
push
xchg
shl
xor
rol
aaa
jg
jecxz
lds
or
inc
(bad)
mov
pop
repnz
sbb
cmp
cmps
lahf
sbb
push
jnp
(bad)
je
ret
cmps
xor
fbstp
mov
loop
leave
xor
xchg
clc
dec
ss
pop
inc
cmp
ins
jne
mov
movs
jne
jo
clc
cs
das
iret
ins
daa
scas
and
outs
adc
movs
mov
mov
das
dec
inc
mov
jae
mov
hlt
(bad)
xchg
fsubp
adc
xor
into
mov
mov
test
and
and
mov
xor
inc
push
popa
sti
loop
adc
dec
push
push
fs
out
sbb
sbb
pop
sbb
out
(bad)
std
sub
iret
cmp
xor
call
and
cmp
lahf
mov
xchg
adc
sbb
xor
(bad)
call
fcom
dec
scas
push
xchg
jg
xor
sbb
pop
mov
lock
cmp
in
lahf
pop
(bad)
jmp
in
inc
ins
mov
fs
movs
and
test
int3
xor
add
adc
sahf
movs
fisub
pop
push
fnstsw
sbb
lods
push
mov
inc
mov
fild
lea
repnz
mov
btc
(bad)
(bad)
jo
sbb
jmp
fistp
push
inc
mov
iret
sub
repnz
adc
ins
lds
test
fidiv
mov
and
inc
sbb
pushf
movs
imul
out
ret
frstor
inc
in
xor
sbb
add
nop
int
mov
outs
add
xchg
call
ds
pop
mov
jecxz
scas
sub
jno
mov
dec
fwait
adc
inc
imul
pop
xor
pop
test
xchg
push
sbb
push
cmp
or
adc
mov
std
jmp
into
push
push
push
pushf
js
test
popf
(bad)
dec
rcl
into
mov
add
aam
pop
mov
pop
in
add
xchg
mov
shl
iret
das
in
sbb
cmp
and
jns
in
mov
das
cmp
adc
jbe
fstp
icebp
mov
sbb
inc
into
dec
xor
jae
jmp
(bad)
pop
dec
sub
jns
imul
dec
sti
sub
add
sahf
sti
inc
or
call
jne
and
mov
jge
cli
push
pushf
push
mov
ins
push
pushf
cdq
aad
fst
mov
sti
stos
imul
fs
pop
or
push
jb
add
nop
pop
wbinvd
mov
inc
movs
fcomp
mov
loop
(bad)
sbb
push
add
ret
push
mov
push
aas
jecxz
cmp
xor
pop
shr
test
ss
push
jg
aam
stos
and
dec
sbb
rcr
push
sub
scas
mov
adc
pop
stc
jg
xchg
jecxz
dec
adc
icebp
pop
(bad)
call
bound
mov
or
repz
mov
mov
dec
aaa
jne
movs
jg
fst
adc
xor
or
jmp
add
sub
jmp
add
sbb
aas
add
add
dec
or
nop
icebp
stc
mov
into
mov
dec
and
cld
in
mov
pop
(bad)
and
mov
fcom
jmp
(bad)
push
test
sbb
jp
outs
in
pop
mov
dec
cmp
ja
xchg
shr
ret
inc
pusha
inc
jae
movs
mov
jg
das
pop
(bad)
pop
push
outs
jmp
mov
cld
fdiv
xor
jmp
(bad)
xor
cli
lahf
rcl
sbb
cmp
lds
leave
bound
or
dec
xor
dec
test
popa
jp
sbb
jge
inc
shl
(bad)
pushf
mov
jne
cld
je
xchg
loope
aaa
mov
sbb
or
call
mov
iret
movs
xor
imul
in
inc
aad
icebp
inc
or
adc
scas
in
jge
sahf
fld
mov
mov
xor
mov
mov
xor
adc
jge
fild
mov
aam
(bad)
and
cli
call
iret
mov
and
or
ss
adc
stos
mov
(bad)
imul
dec
sub
in
or
xchg
inc
(bad)
jbe
cwde
mov
or
jb
out
imul
sti
cmps
cld
push
sbb
rol
pop
(bad)
out
sub
retf
(bad)
jo
mov
es
(bad)
mov
xchg
js
cmp
in
mov
imul
mov
cwde
mov
out
neg
push
lods
mov
sbb
movs
sbb
add
xor
adc
stc
rol
add
push
jmp
jmp
mov
or
pop
fisubr
adc
xchg
lahf
cmc
(bad)
fsubr
lahf
xchg
jb
lds
pop
movs
cmps
mov
test
push
jnp
retf
mov
adc
push
clc
xchg
cmp
jae
sbb
ins
jg
sahf
pop
sbb
xor
je
jo
sbb
es
je
cmps
es
(bad)
test
jge
xor
inc
in
add
data16
xchg
or
fucom
adc
aad
jmp
sub
adc
test
bound
les
mov
inc
into
dec
jecxz
adc
rcl
cmps
popf
ja
out
test
sbb
adc
xor
pop
div
(bad)
xchg
out
mov
pusha
cmps
xchg
test
stos
mov
pop
movs
jmp
pop
jnp
adc
sti
lods
sar
sub
mov
std
xchg
pop
mov
(bad)
add
pushf
and
clc
jecxz
jmp
aaa
xor
lds
icebp
loopne
or
sbb
repz
pop
call
in
xchg
out
jmp
retf
pop
test
jno
in
ror
enterw
add
test
fwait
(bad)
ret
xchg
adc
popf
adc
or
aas
inc
add
in
cmp
push
cmps
inc
cmp
xor
inc
cdq
adc
nop
fisub
lds
adc
cmc
mov
std
dec
outs
(bad)
mov
loope
rcr
and
fwait
cmp
jb
or
retf
inc
fnsave
push
sbb
push
sbb
leave
add
fsubr
das
cmc
stos
xor
out
sub
cmp
mov
test
add
pop
rcr
mov
adc
dec
mov
shl
mov
adc
cmp
xor
sbb
fdiv
push
stc
(bad)
push
jmp
mov
jp
fsub
mov
sub
rcr
sbb
pop
retf
mov
adc
sub
mov
(bad)
fist
movs
mov
mov
push
mov
inc
pop
push
jb
push
cmp
leave
sar
pop
cmp
fidivr
mov
jp
sbb
jmp
cmps
dec
dec
cmp
(bad)
fcmovbe
mov
test
jnp
sub
cmp
xor
stc
jb
inc
inc
nop
xchg
lahf
ret
mul
or
ds
sahf
jbe
jae
sub
iret
in
mov
sbb
into
(bad)
dec
pop
xchg
xor
dec
jmp
stos
cmp
pop
mov
dec
pusha
adc
cdq
sahf
mov
inc
sti
jge
retf
aaa
xchg
jp
and
xor
je
inc
or
lea
not
shl
jnp
inc
retf
js
imul
cld
cmps
pop
push
fs
sahf
dec
scas
dec
inc
outs
sbb
jp
xchg
sub
cmps
push
loopne
mov
sub
mov
scas
push
stos
enter
imul
xchg
add
adc
xor
xchg
ret
(bad)
movs
jge
sub
cmps
outs
push
icebp
inc
mov
sahf
pop
jecxz
stos
adc
mov
mov
(bad)
jp
xor
jb
retf
in
shl
mov
mov
data16
pusha
mov
dec
xchg
mov
mov
xchg
lock
test
push
pop
xchg
loop
cmp
es
scas
jg
call
xchg
or
fidiv
pop
sbb
inc
scas
and
xchg
jno
add
test
mov
jns
cdq
inc
mov
or
xchg
xor
daa
test
pop
clc
mov
(bad)
xlat
sahf
or
lods
or
shr
imul
mov
(bad)
lfs
adc
mov
jno
cmp
sbb
xchg
pop
cmp
fiadd
mov
and
cwde
mov
inc
cmc
out
push
push
rcl
rol
xor
jle
inc
add
push
pusha
xor
jbe
adc
jmp
xchg
mov
inc
popa
arpl
out
mov
movs
xor
call
cdq
sti
lds
test
jmp
sub
in
xchg
dec
pop
mov
popa
popa
xor
or
push
push
adc
scas
adc
lds
cdq
xor
and
jmp
pop
out
movs
daa
or
push
xchg
xchg
in
pushf
jb
int3
sti
rcr
cdq
pop
add
jmp
push
and
popf
aas
and
or
mov
out
push
push
fisubr
out
fcom
ret
lods
or
enter
pop
cmp
out
jle
and
mov
loop
jno
popa
retf
nop
cmp
lods
xor
ja
std
cdq
push
mov
pop
and
xchg
pop
rcr
pop
(bad)
stc
sub
test
xchg
lock
inc
or
les
cld
jne
test
fistp
cmps
cmp
add
xor
sar
movs
(bad)
int3
adc
xchg
or
test
fcom
cdq
repz
cmp
cmp
rol
imul
or
retf
adc
retf
sar
jge
adc
popf
push
cdq
ror
(bad)
lahf
addr16
mov
fcompp
push
rol
mov
in
add
pop
xchg
jbe
dec
jp
test
dec
into
pop
inc
dec
les
loope
push
ror
mov
inc
in
xchg
cmc
fsub
xor
int
fsubp
pusha
shl
imul
aad
das
iret
cmp
movs
and
sub
out
jge
sbb
adc
push
in
and
aad
pop
push
dec
sbb
fs
pop
arpl
aam
imul
mov
out
jl
xchg
mov
aas
mov
pop
sbb
dec
popf
retf
dec
jecxz
sub
repz
(bad)
cmc
jmp
dec
mov
out
fcomi
outs
pop
out
xor
pop
cmp
daa
jg
xchg
mov
rcl
ins
mov
js
neg
test
hlt
sub
cmp
(bad)
and
xor
call
pop
adc
or
clc
sbb
ror
je
inc
or
fst
and
mov
inc
sbb
sti
pop
ins
shl
push
adc
adc
inc
test
cmp
mov
inc
out
loope
inc
or
cmps
pop
cmp
fcom
rol
adc
add
pushf
push
cmp
and
jmp
dec
es
or
scas
out
int3
lea
push
ret
imul
loope
jo
nop
pop
ficom
pop
jge
outs
fidiv
cmp
in
mov
js
jge
xor
sbb
out
sub
retf
jge
jge
push
repz
xchg
(bad)
xchg
or
mov
mov
add
xor
xor
ins
mov
sti
js
test
das
pop
into
in
sbb
push
pusha
repz
cmp
sub
clc
test
jne
paddsb
xchg
enter
cmp
(bad)
adc
mov
cmp
mov
in
sub
or
test
(bad)
mov
cmp
test
sahf
mov
out
or
cs
xchg
mov
dec
fsubr
xchg
jmp
(bad)
cwde
xchg
in
pop
xor
fistp
call
fnstcw
sbb
jmp
repz
jne
fisttp
daa
enter
scas
nop
pop
not
jbe
aas
ins
fs
cli
adc
lods
xor
inc
aas
mov
mov
push
inc
stc
push
xchg
and
adc
and
test
push
cmp
aad
dec
xchg
out
mov
mov
xor
mov
addr16
push
dec
xchg
je
inc
xor
stc
and
push
cmp
and
aas
cs
jb
pop
xchg
or
adc
(bad)
out
ins
jae
sbb
dec
jns
ss
leave
sahf
fbld
call
push
mov
imul
mov
mov
test
stos
mov
xchg
jae
add
push
enter
adc
xchg
adc
fst
daa
mov
fs
mov
outs
aad
jmp
sub
sub
xchg
inc
cmp
cmp
jae
ret
adc
not
pop
sbb
daa
test
call
xor
sbb
mov
sub
pushf
nop
push
mov
jb
rcl
out
adc
inc
push
mov
jp
int3
mov
xchg
movs
cli
adc
sbb
jo
test
dec
cmc
push
in
call
or
jge
dec
mov
adc
test
cmps
push
daa
ret
pop
jge
lods
mov
iret
ja
push
mov
arpl
cs
in
cwde
(bad)
call
xchg
pop
dec
inc
or
ja
inc
xor
push
or
mov
mov
dec
push
icebp
pushf
int3
add
scas
rcl
dec
(bad)
cdq
inc
mov
pop
call
cs
sahf
fidivr
or
push
das
xor
mov
test
jl
pop
ss
data16
sti
call
fwait
mov
cmp
sbb
adc
addr16
add
xor
popa
mov
push
jae
rcr
or
cmp
mov
jnp
stos
enter
mov
fiadd
mov
mov
mov
pushf
js
and
sub
sub
inc
add
rol
ret
or
aaa
test
mov
sub
inc
adc
inc
(bad)
gs
or
push
test
cs
inc
push
adc
cmp
push
rol
leave
daa
jne
pop
loope
fisubr
rol
inc
sub
into
cli
mov
adc
pop
pop
dec
jbe
pop
sub
cwde
shl
sbb
adc
ss
or
cwde
mov
push
mov
popa
out
inc
imul
add
pusha
xor
mov
jb
cmp
adc
or
cld
imul
and
sub
int
inc
into
push
mov
popf
inc
lods
mov
cmp
(bad)
cmp
in
cmps
jo
test
jae
cmp
sti
mov
xor
inc
popaw
fst
test
xlat
(bad)
test
ja
jmp
dec
xchg
stos
sub
(bad)
cmp
jge
test
cwde
idiv
dec
sti
(bad)
dec
pop
out
lock
(bad)
cmps
into
jmp
mov
out
pop
sub
ret
fistp
pop
or
ja
iret
les
and
pop
sub
push
sbb
retf
mov
xchg
or
addr16
or
sbb
mov
or
out
xchg
jno
shr
and
dec
ficom
in
aas
repnz
arpl
lahf
idiv
xor
loopne
(bad)
enter
hlt
cli
xchg
pop
fwait
pop
mov
das
mov
sub
cmp
sbb
add
(bad)
and
sub
mov
cmp
aad
inc
je
or
xor
sub
or
inc
mov
jae
sti
xchg
scas
cdq
(bad)
and
push
fcomp
ins
adc
xchg
lahf
or
mov
jg
mov
xor
and
jmp
xor
(bad)
or
inc
jnp
cmps
or
xchg
jae
loope
or
out
mov
(bad)
push
and
mov
popa
cmp
pop
ss
lahf
pop
(bad)
adc
push
in
xchg
iretw
inc
xchg
fs
add
ret
dec
leave
pop
sub
push
jge
in
outs
fsubr
popa
pop
adc
mov
lods
mov
or
mov
sbb
fidivr
scas
icebp
xor
inc
xor
mov
movs
psubusb
jg
inc
jne
icebp
jmp
or
cmp
(bad)
repnz
ret
mov
add
loope
loopne
or
adc
(bad)
shl
cmp
test
xor
sbb
ret
div
fist
out
pop
jae
sahf
in
in
sbb
clc
xor
sbb
in
pop
or
mov
aad
dec
sbb
xor
mov
and
(bad)
jne
pop
icebp
xor
nop
in
in
(bad)
pop
shr
stc
pop
js
gs
out
hlt
std
(bad)
push
mov
jbe
mul
xadd
jo
sbb
and
jb
or
outs
mov
and
xor
fwait
sub
stos
cs
mov
in
scas
adc
adc
and
pop
pushf
mov
dec
pop
pop
cmp
push
arpl
enter
and
jmp
cli
pop
in
gs
mov
cmp
inc
mov
ret
test
and
movs
iret
or
es
jg
scas
mov
hlt
sub
stc
push
mov
mov
fmulp
xchg
outs
bound
test
movs
mov
ins
ret
jmp
push
cmp
sub
sub
popf
mov
data16
mov
pop
leave
mov
xchg
es
mov
mov
shl
xchg
mov
cmp
mov
cmp
mov
ins
pop
xlat
ins
mov
jbe
test
push
jp
jmp
iret
ret
cmp
loop
pop
xchg
movs
xchg
push
fsubr
rcr
xlat
xor
rcr
jae
mov
ds
(bad)
mov
xor
pop
popf
inc
call
out
repz
ja
lods
inc
lock
mov
adc
jp
mov
mov
push
mov
push
inc
mov
or
sub
sub
test
dec
aaa
pop
push
add
sub
xchg
mov
fst
test
frstor
ss
mov
and
sub
out
mov
jns
jae
cmps
cmp
mov
pop
jnp
mov
sbb
fmul
fcomp
mov
popf
outs
cs
sti
ret
add
mov
das
adc
dec
(bad)
hlt
adc
fisttp
out
and
jp
in
jle
mov
in
cmp
cmp
scas
push
repnz
cmp
pop
in
ret
cmp
jp
sub
sar
sti
adc
jnp
lds
(bad)
int3
jecxz
leave
or
inc
fistp
test
cs
adc
inc
push
rcl
call
cwde
jge
or
dec
cmps
(bad)
aas
test
mov
xor
in
mov
mov
sbb
dec
(bad)
lock
retf
jle
rol
lock
addr16
int
pop
sbb
ret
lods
sbb
add
dec
xor
pop
shl
mov
je
sub
push
jb
dec
scas
hlt
xor
mov
ins
je
call
popf
sub
push
mov
imul
inc
cs
or
adc
and
lock
retf
arpl
popa
lea
xchg
out
add
scas
dec
adc
out
fs
cmp
jg
int
fwait
clc
scas
popa
int3
repnz
mov
std
mov
sub
je
cmp
cld
xor
push
sbb
in
adc
xchg
stos
repnz
fwait
push
mov
in
test
pop
xchg
inc
mov
mov
out
add
inc
mov
add
xor
jmp
jle
jbe
jne
fcmovnbe
jge
xchg
ss
aas
fidivr
push
pop
dec
adc
push
pop
cmp
in
push
fld
or
lahf
ins
push
push
mov
nop
mov
mov
scas
std
out
ds
loope
shl
inc
and
xchg
das
inc
in
jmp
fstp
mov
dec
jmp
outs
jge
xchg
sub
push
in
pop
push
xor
sti
mov
mov
jb
and
mov
repz
movs
add
(bad)
dec
(bad)
in
fbstp
xchg
dec
int3
cs
les
fmul
movs
xor
setae
mov
iret
mov
fcomip
cmp
andnps
cli
dec
in
nop
enter
cmp
outs
fdiv
mov
dec
sti
mov
in
dec
lods
lods
and
int
mov
pop
fs
sahf
or
ds
(bad)
adc
push
pop
fistp
in
lea
shl
addr16
inc
stos
pop
pusha
pop
in
out
ins
xor
sub
or
int
jg
cmc
mov
(bad)
mov
(bad)
aas
pop
jmp
jp
call
add
inc
ins
mov
fisttp
out
ret
clc
nop
scas
pop
stos
aam
add
sbb
call
mov
repnz
pusha
dec
jle
inc
mov
mov
ror
sub
out
or
fbld
int
and
cmps
xchg
mov
or
bound
int
loope
inc
loopne
mov
add
xchg
mov
jecxz
cmp
add
sbb
inc
lea
or
xchg
jo
scas
dec
(bad)
(bad)
mov
inc
fdivr
shr
ss
adc
mov
push
fwait
mov
jno
sbb
pop
lock
int
cli
das
mov
adc
sbb
cmp
int3
(bad)
sbb
test
jg
push
sbb
and
bound
fcomip
mov
add
xchg
pop
sub
or
mov
adc
and
sbb
sbb
cwde
jb
xor
rol
mov
(bad)
aas
int3
fcomp
ss
and
inc
add
mov
push
out
lods
out
movs
push
bound
stc
mov
xor
shl
sub
xchg
dec
test
jnp
das
dec
mov
jo
sbb
aaa
or
jmp
(bad)
pop
int
test
inc
repz
mov
pop
mov
repnz
sbb
rcl
sti
xor
popf
jge
dec
mov
test
(bad)
into
call
sub
sub
loop
jb
mov
cwde
neg
leave
pushf
cmp
cld
dec
mov
mov
push
xor
mov
jns
in
pushf
test
(bad)
sbb
inc
xchg
push
std
les
sbb
or
push
fs
imul
lods
stos
xchg
pop
sub
mov
lods
xchg
lods
mov
inc
mov
cs
xlat
lods
fnstcw
iret
fsubr
lea
cmps
daa
xor
rcr
dec
retf
jle
movs
and
int
sub
xchg
push
adc
mov
loope
ins
jge
sbb
or
out
jmp
cwde
adc
xchg
jae
xchg
cli
hlt
outs
xlat
sbb
inc
cld
daa
call
add
xchg
or
inc
sub
jmp
test
inc
mov
mov
out
dec
cwde
xor
xchg
test
push
mov
aad
imul
(bad)
xor
push
aam
adc
pop
sub
movs
int3
loopne
pop
mov
cwde
out
add
mov
out
test
or
ss
or
push
lods
mov
stc
ret
mov
add
and
jge
(bad)
jno
nop
cwde
test
mov
sbb
mov
jmp
test
xchg
call
and
mov
mov
inc
std
or
sbb
mov
dec
stos
call
jbe
push
clc
imul
loope
sub
jae
and
push
test
sub
push
sar
dec
dec
cmps
jl
inc
div
clc
or
xchg
add
and
or
cld
in
jmp
call
sti
psubq
pop
dec
pop
xor
cld
test
push
sub
or
mov
fdivp
lds
mov
cmp
imul
out
jmp
mov
lods
and
xchg
xchg
sbb
push
inc
int3
das
popa
icebp
stos
movs
jg
nop
pop
aad
stc
push
fdivr
adc
loope
in
jge
cmps
mov
inc
cmps
cmc
xor
pop
push
cmp
in
stc
pop
scas
sbb
mov
or
push
scas
xor
cs
fs
call
mov
rol
ret
shl
movs
ins
jp
sub
ss
xchg
jl
xchg
pop
fbld
push
sub
in
int3
aaa
cmp
lahf
pop
inc
test
in
jb
stos
inc
ja
and
xchg
es
aas
xchg
daa
or
ficom
dec
pushf
repz
and
clc
ss
cmps
jmp
int3
les
mov
xor
cdq
pop
(bad)
cwde
sbb
mov
jle
mov
div
jns
xor
mov
movs
jmp
adc
xor
gs
cmp
popa
sbb
xor
inc
pop
fs
in
enter
adc
ret
enter
or
lods
(bad)
mov
inc
pop
xchg
mov
and
les
movs
retf
arpl
dec
les
xchg
mov
inc
aaa
ror
sbb
xchg
xor
adc
add
shl
daa
xchg
mov
inc
cmps
xchg
rol
sub
xor
dec
fist
fistp
push
leave
dec
push
and
imul
repnz
inc
(bad)
mov
and
cwde
test
jns
jecxz
mov
mov
aas
push
sbb
daa
rol
hlt
int3
lock
sbb
or
sub
call
dec
and
rcl
ficomp
fiadd
sub
mov
pop
fst
sub
bound
pop
sbb
xchg
xor
xchg
in
ins
lock
push
cmp
pushf
mov
xchg
mov
ja
imul
out
ss
dec
push
imul
call
add
push
adc
xlat
aad
(bad)
mov
bound
mov
inc
inc
push
xor
pushf
pop
cmps
and
rcr
sbb
(bad)
adc
and
xchg
sbb
mov
jns
mov
ins
xor
dec
sbb
test
cwde
push
xor
popa
sub
sub
test
jmp
mov
pop
stc
mov
shr
add
js
pop
into
xchg
rcl
and
dec
mov
jle
aad
jmp
sbb
jl
mov
repz
js
dec
pop
sbb
(bad)
je
push
bound
fbstp
mov
pop
adc
and
bound
fcmovnbe
mov
push
xchg
adc
sti
jg
jge
xchg
lahf
ds
push
jo
sub
push
lock
and
packsswb
mov
or
out
lods
xchg
mov
cld
out
in
pop
adc
mov
cmp
in
push
sahf
fsub
inc
xlat
inc
push
pop
xor
and
in
cmps
dec
xor
push
sti
inc
outs
or
(bad)
ror
(bad)
fidivr
push
loop
or
jnp
and
aad
fild
pushf
ror
dec
(bad)
fistp
or
mov
inc
or
sub
and
fsubr
test
mov
out
loopne
and
jnp
sbb
xor
test
call
fdiv
mov
call
xchg
or
pop
or
scas
ins
xor
fst
push
into
aad
lds
or
in
jbe
lods
(bad)
shl
dec
push
pop
pushw
mov
sub
stos
outs
sub
in
in
(bad)
shl
(bad)
push
sahf
scas
push
inc
(bad)
mov
das
loopne
in
ja
ins
inc
jle
dec
outs
push
sub
shl
push
cli
outs
call
imul
mov
rcr
lods
inc
fs
fist
stos
xor
(bad)
sti
loope
or
xchg
push
jbe
sar
inc
sbb
stos
cmps
clc
aad
repz
dec
cld
aad
movs
imul
xchg
mov
and
mov
popf
call
sti
sub
sar
lahf
xor
mov
in
lds
and
test
imul
jo
jecxz
mov
or
inc
imul
shl
mov
cmp
scas
mov
dec
sub
inc
stos
or
retf
sub
mov
mov
sub
mov
sub
aam
push
lods
inc
cli
imul
aam
xchg
push
mov
dec
push
push
xor
or
arpl
dec
and
or
inc
sub
pop
mov
ret
pop
push
out
ins
push
xchg
push
xchg
imul
lock
out
lods
aas
jge
aaa
sahf
jmp
and
xor
pushf
popa
xchg
cld
adc
mov
aad
jne
push
dec
outs
dec
sbb
sub
(bad)
imul
aad
test
popf
clc
iret
(bad)
sub
sar
mov
inc
and
or
stc
push
(bad)
int
rol
pop
xchg
jecxz
pop
or
xchg
or
cmp
adc
cmp
not
mov
rol
or
push
xchg
stc
fdivr
add
and
scas
js
inc
pop
push
xor
dec
sahf
dec
push
sub
xor
inc
imul
push
mov
mov
add
aam
fstp
js
jbe
into
fisttp
pusha
jns
icebp
dec
mov
popa
cmps
jl
scas
pushf
(bad)
ret
or
pop
mov
or
es
adc
mov
cwde
loopne
int3
pop
mov
inc
jmp
lods
dec
(bad)
push
imul
pop
sub
pushf
js
push
dec
fld
not
movs
push
cs
(bad)
mov
jo
xor
push
cmc
enter
inc
jmp
mov
sbb
bound
loop
in
jg
ins
iret
pop
movs
cmp
std
mov
adc
loop
idiv
outs
or
or
xchg
sub
scas
dec
inc
enter
cmp
push
sub
ja
aad
jne
mul
ss
adc
adc
pop
adc
in
nop
cmps
ins
rcr
fwait
dec
std
outs
test
jle
sti
es
stc
out
out
jg
lock
push
sub
(bad)
daa
dec
dec
mov
pop
and
and
cmc
lods
popf
gs
push
fld
leave
sub
repz
out
xor
cmps
jns
inc
mov
mov
cli
or
add
pop
mov
ret
fwait
and
ins
or
and
adc
dec
iret
aaa
movs
push
gs
cld
push
mulps
das
xor
imul
inc
sub
ficom
imul
out
cmp
fcom
mov
fisttp
aad
je
shl
cdq
hlt
sub
jge
(bad)
loop
call
and
into
clc
dec
aas
or
out
jl
aam
jg
jnp
(bad)
(bad)
pop
lea
shl
movs
lods
push
and
or
mov
sbb
les
jmp
ret
jno
loop
daa
(bad)
push
and
push
imul
hlt
cmp
fnstcw
ficomp
jg
push
test
dec
pop
jle
lea
test
mul
out
push
(bad)
stos
fdiv
push
xchg
js
sbb
pop
cld
sbb
es
jmp
add
xchg
(bad)
mov
int
cmp
add
jae
dec
inc
sahf
or
mov
mov
pushf
aas
sbb
inc
ja
repz
sahf
icebp
pop
mov
push
cmp
scas
aam
push
ins
xchg
add
dec
call
push
test
push
mov
mov
add
shl
or
jae
push
lock
mov
jge
mov
stos
mov
hlt
mov
inc
(bad)
adc
retf
adc
mov
dec
push
and
aad
lock
cmp
xor
pop
sub
mov
jp
add
add
or
mov
call
les
call
lods
icebp
push
and
(bad)
mov
push
imul
xor
fdiv
push
sbb
xor
pusha
xchg
jne
addr16
call
fist
mov
imul
daa
fist
je
inc
imul
sahf
add
lea
and
mov
es
cmp
pop
inc
adc
sbb
inc
or
xchg
push
cmp
pop
fld
cs
(bad)
sub
pop
pushf
add
out
mov
out
push
hlt
jns
and
and
adc
push
or
inc
xchg
hlt
bound
mov
and
inc
(bad)
mov
lods
cmp
mov
gs
push
bound
or
(bad)
adc
out
mov
retf
sbb
pop
les
sbb
fdivr
aaa
sub
and
std
imul
jg
cmp
imul
je
stos
int
int3
rcr
xor
test
jb
sub
sub
adc
pop
imul
xchg
add
icebp
inc
icebp
xor
ret
xchg
daa
sub
hlt
add
add
loope
(bad)
pushf
inc
scas
mov
lock
sbb
pop
cmp
or
fstp
xchg
inc
inc
xor
xor
xor
cwde
cmps
xchg
jmp
ss
mov
mov
mov
sub
stos
leave
push
adc
sbb
sub
in
mov
fldenv
ss
(bad)
int
inc
mov
adc
jo
xlat
adc
xlat
push
pop
call
(bad)
sti
arpl
(bad)
or
add
inc
mov
pop
sbb
push
stos
repz
inc
pop
and
fs
mov
dec
mov
outs
dec
cmp
push
pop
gs
jl
pop
adc
jge
push
in
xchg
xor
push
mov
fs
pop
xchg
inc
out
int3
fcom
lds
pop
pop
pop
sbb
jge
mov
retf
jns
sar
loopne
pop
sbb
sbb
test
nop
push
ja
mov
clc
xlat
shl
inc
int3
cmp
cmp
sbb
mov
neg
xor
or
xor
int3
das
xlat
jnp
push
cmp
mov
std
pop
aaa
iret
shl
adc
cmp
aad
loopne
test
dec
repz
clc
int
pop
dec
gs
pop
push
sbb
dec
cli
mov
dec
cmp
jmp
cmps
fist
pop
rcr
cmc
test
mov
lock
dec
cmp
mov
mov
dec
jle
dec
add
adc
out
(bad)
adc
mov
inc
rol
fiadd
xchg
sbb
lods
and
rol
mov
and
fisubr
test
aad
mov
dec
or
cmp
mov
mov
in
leave
xchg
inc
mov
and
push
cmps
push
xor
mov
xor
cmp
add
hlt
outs
(bad)
and
lods
movs
sub
scas
shr
jle
dec
stc
fst
retf
xor
jl
call
xchg
test
sbb
frstor
sub
and
jne
popf
lea
ret
imul
sub
push
xchg
mov
fs
xchg
cwde
sbb
pop
pop
jecxz
(bad)
loopne
sub
stos
add
push
les
dec
gs
aas
push
jne
dec
mov
je
(bad)
(bad)
adc
out
or
loope
and
fsub
retf
std
shl
pop
mov
cmp
mov
sbb
jno
std
ss
pusha
push
xor
ficom
xchg
mov
retf
push
cmp
lods
mov
cs
dec
repnz
mov
rol
cdq
push
or
sbb
cmp
jb
repnz
xor
push
call
dec
mov
mov
gs
jmp
sub
movs
mov
mov
enter
and
inc
jg
in
inc
jo
or
mov
loope
cmp
pop
mov
jge
ins
cwde
jo
push
scas
push
imul
pop
call
lods
test
call
sahf
push
aam
jp
jge
mov
stc
adc
mov
fsubr
rol
aad
nop
popf
aad
add
dec
shl
mov
shl
jo
js
out
cmp
shl
cs
jecxz
inc
mov
lods
jecxz
sbb
in
push
adc
push
hlt
lds
pop
dec
jne
in
adc
xchg
enter
aas
xchg
pop
jl
xchg
test
fst
adc
jl
stos
mov
push
nop
jne
mov
into
outs
xchg
js
ins
(bad)
xchg
and
icebp
mov
fild
adc
jp
fwait
movs
and
popa
dec
loope
push
cdq
inc
sar
pop
rol
push
retf
pop
lds
enter
pop
les
xchg
shr
enter
ds
cmp
call
jge
int3
dec
xor
data16
iret
nop
(bad)
cli
push
cmp
add
xchg
fldcw
xor
jns
and
add
hlt
inc
add
sbb
mov
jb
mov
mov
outs
(bad)
lods
int3
(bad)
sbb
stc
(bad)
mov
pop
ja
cli
jmp
test
dec
sbb
ror
fild
fistp
shl
enter
jbe
mov
xor
pop
test
aad
and
stc
fdivp
fbld
aam
scas
sub
ret
xchg
xlat
xor
gs
cmp
mov
inc
es
fnstenv
inc
sub
sar
ins
test
in
pop
mov
ins
and
jp
pop
xchg
daa
adc
mov
retf
or
mov
fwait
retf
neg
fadd
ret
prefetchnta
data16
adc
jge
add
call
bound
xor
cli
mov
sar
int3
std
mov
jae
cld
sbb
push
adc
mov
xchg
push
sbb
jo
pop
outs
cli
inc
xchg
(bad)
rcl
rcr
in
aad
xor
sahf
mov
repz
xchg
and
lahf
(bad)
or
icebp
mov
movs
rcl
bound
adc
jmp
mov
aaa
rol
jo
jmp
shl
cwde
push
cdq
and
xor
mov
sub
sti
jecxz
or
cdq
sbb
(bad)
dec
xor
push
shl
shr
cld
cdq
cmp
sub
push
mov
sub
or
iret
inc
ja
test
cli
pop
dec
je
add
xchg
jo
mov
int3
cmps
dec
xor
mov
xor
cmp
push
adc
cli
mov
imul
shr
das
xor
test
and
call
push
js
push
fprem1
mov
xlat
mov
or
int3
fidivr
loope
mov
mov
int3
jle
(bad)
sbb
sub
jnp
inc
or
xchg
cmp
mov
stos
pop
iret
imul
dec
push
mov
(bad)
aam
(bad)
dec
mov
std
lods
fadd
pop
push
out
pop
push
mov
cdq
mov
shr
sar
retf
jo
lahf
cmp
mov
dec
cmp
adc
imul
lods
in
or
fwait
ds
cmps
stc
inc
mov
shl
or
or
jmp
pop
hlt
adc
(bad)
xor
mov
std
and
jmp
adc
xor
pop
or
iret
sbb
shl
adc
adc
lods
imul
cli
xchg
jp
mov
aas
add
dec
lock
jno
shl
adc
sbb
int3
bound
jge
xor
jo
ret
jle
in
sbb
sub
inc
push
aaa
imul
clc
ins
xchg
dec
xlat
inc
push
push
pop
or
mov
push
cmps
xchg
cdq
mov
retf
xchg
pushf
jecxz
cmp
mov
push
call
stos
or
add
imul
aaa
xchg
xor
push
loopne
(bad)
pop
outs
out
mov
xchg
adc
repz
pop
ins
ret
(bad)
stc
xchg
test
push
adc
adc
pop
ds
jne
and
std
dec
push
adc
or
push
cdq
jns
(bad)
shl
out
xor
popf
jo
mov
push
xor
and
or
cmp
push
dec
mul
adc
dec
shr
sub
or
mov
ss
cld
jns
xchg
daa
push
outs
xchg
into
pop
in
das
ins
xchg
sub
sub
xchg
mov
mov
xlat
hlt
lods
rol
ds
inc
fdivr
mov
push
jl
mov
cmp
push
clc
and
xchg
push
add
imul
mov
sbb
mov
inc
inc
gs
mov
bound
inc
jo
icebp
jmp
test
js
js
fmul
data16
mov
xchg
loop
mov
ret
mov
jns
adc
test
dec
stos
mov
cmc
ret
or
inc
inc
mov
or
and
cmp
lahf
push
inc
stc
ret
les
and
dec
scas
cli
push
jne
pop
adc
mov
movs
mov
test
sub
adc
adc
mov
popa
jmp
(bad)
cmps
stos
cmp
jns
ins
and
les
xchg
cmp
enter
or
retf
mov
mov
cmp
jne
pop
dec
xor
gs
mov
add
pusha
adc
cmp
jecxz
jp
and
in
xor
mov
loope
add
outs
scas
sub
in
add
rcl
jg
add
sbb
xlat
int3
imul
inc
out
dec
xlat
xchg
sbb
sar
ret
scas
(bad)
jae
sub
mov
hlt
push
and
mov
cld
mov
in
and
dec
aad
pop
push
xor
fbld
cmp
fucomip
rol
cwde
inc
cmp
pusha
mov
jmp
imul
neg
xor
je
aaa
test
mov
pop
jmp
inc
cmp
(bad)
mov
es
aas
jle
pop
(bad)
dec
jmp
jecxz
mov
out
loope
pop
xor
add
mov
daa
dec
into
scas
lock
jnp
test
dec
ja
adc
sub
or
mov
push
jae
lds
inc
mov
mov
out
sub
(bad)
shl
fadd
icebp
fstp
pushf
jg
jno
pop
call
mov
cs
push
dec
or
(bad)
outs
mov
jno
sub
cdq
cmp
std
jo
sub
add
outs
ret
ror
shr
pop
int
rcl
or
add
cli
shl
mov
fbstp
xchg
mov
cmp
ret
mov
xor
jmp
fwait
scas
sbb
push
fsubr
sbb
mov
rol
jg
xlat
adc
fidiv
stc
or
pop
xlat
jl
mov
mov
xchg
aam
pop
jecxz
pop
xor
pushf
cld
ret
mov
cs
rcl
in
emms
cmp
or
jecxz
hlt
mov
lods
cmp
adc
fld
pop
jbe
pusha
mov
jo
fs
jmp
bound
sbb
fstp
lods
iret
xchg
movs
pop
xor
(bad)
jb
daa
clc
mov
mov
mov
mov
daa
dec
cmps
add
out
dec
jmp
cmp
call
fwait
mov
aam
loopne
xor
mov
pop
mov
scas
mov
mov
jne
gs
scas
xchg
mov
sbb
or
sbb
push
jp
push
(bad)
dec
cdq
pop
aad
or
mov
int3
repnz
dec
das
stc
mov
and
sar
mov
int3
aaa
aam
into
lods
sahf
fcmovbe
mov
inc
cmp
jecxz
jns
and
push
mov
je
adc
retf
or
pop
mov
jp
cmp
pop
imul
jae
pop
sbb
neg
ror
and
jg
ret
fadd
mov
sbb
rcl
jo
dec
stos
pop
movs
(bad)
sti
outs
js
scas
adc
mov
jg
push
pop
dec
scas
pop
and
adc
pop
mov
std
icebp
fsubr
stc
jmp
sub
(bad)
rcr
xchg
mov
shl
adc
mov
inc
inc
and
or
ds
dec
dec
aaa
sbb
or
popa
retf
retf
jmp
sub
push
test
add
lock
add
xor
pop
scas
inc
or
or
in
push
ja
sub
xor
jae
stc
dec
ins
add
ret
mov
repz
mov
mov
dec
mov
cmp
(bad)
stos
pop
rol
push
dec
sub
sti
mov
leave
mov
outs
mov
jns
out
in
xchg
mov
add
push
sti
cmp
xchg
jmp
cwde
sbb
pop
clc
jl
loope
jo
jmp
ins
mov
or
sbb
inc
repz
aas
or
rcl
ret
sub
hlt
jp
ins
jb
cmp
aam
aas
mov
out
int3
das
pop
xor
into
cmp
cmps
shr
jns
push
cmp
push
add
js
adc
push
mov
cmp
adc
push
(bad)
movs
out
or
add
or
nop
rcl
aaa
jmp
push
adc
(bad)
dec
and
pusha
data16
cmps
and
or
lods
fcmovne
gs
into
inc
xchg
ret
pop
mov
or
out
pushf
je
sbb
dec
jo
sbb
xor
add
in
(bad)
and
xchg
loope
cmp
call
ret
inc
mov
es
jns
lock
lea
cmp
les
hlt
pop
push
ja
icebp
dec
push
mov
or
in
call
push
mov
mov
scas
les
daa
or
push
cs
sar
jne
xor
adc
inc
inc
mov
mov
xchg
jmp
inc
add
imul
mov
scas
ins
dec
bound
outs
call
cwde
and
sbb
cmps
mov
loopne
out
push
outs
mov
xchg
push
gs
or
lock
pusha
out
test
ins
cmp
aas
cmp
into
out
jecxz
mov
ins
(bad)
pushf
add
xor
sub
jp
pop
loop
push
pushf
xchg
sub
jbe
pusha
clc
cdq
movs
jbe
dec
jmp
cld
adc
mov
(bad)
xor
push
scas
xchg
pop
and
movs
ins
mov
pop
bound
push
jns
mov
xor
pop
add
popaw
jno
sahf
test
stos
pop
lea
rol
xchg
mov
pop
jb
(bad)
test
jns
movs
cmp
test
outs
cmp
fsubr
jmp
outs
addr16
or
rcr
dec
jns
xchg
sbb
jg
loop
push
es
dec
test
jbe
shr
cli
sahf
popf
pop
scas
aam
xor
lods
xchg
jmp
and
add
dec
sub
daa
xchg
or
call
das
jb
push
fwait
adc
cdq
imul
jns
mov
addr16
mov
add
out
aaa
arpl
mov
iret
in
pop
jne
jae
dec
push
js
lock
es
shl
mov
(bad)
and
ds
fild
je
das
imul
in
pop
repz
pop
out
retf
sbb
dec
pop
xchg
xor
sbb
push
dec
mov
xchg
xor
outs
sub
ret
fwait
lahf
push
lea
mov
test
pop
jbe
test
adc
inc
shr
and
sahf
pop
sub
mov
mov
cs
daa
add
ror
fimul
std
xor
mov
dec
in
mov
jp
mov
fstp
adc
call
rcr
test
sar
ds
outs
mov
sti
xor
push
sbb
btr
fdivr
jmp
imul
cmps
movs
std
loope
lds
push
cdq
je
xchg
jg
or
add
lahf
addr16
(bad)
out
xor
sbb
outs
mov
clc
neg
lahf
cmp
outs
cmp
push
ret
jge
mov
aaa
pop
sbb
stos
xor
shr
outs
pop
xor
adc
popf
sub
stc
pop
xchg
adc
mov
cmp
gs
sbb
int3
sbb
sbb
or
mov
adc
pop
vmread
rcl
or
xor
mov
xchg
sub
fnstcw
add
cwde
mov
stos
cmp
adc
sbb
cmp
adc
cwde
and
je
imul
jl
mov
stos
int
shl
iret
fdivr
lods
jecxz
mov
jg
jo
xchg
cmps
test
retf
push
popf
retf
push
and
dec
pop
mov
aad
cmp
ins
cmp
push
loope
xacquire
mov
adc
xor
push
push
pop
xchg
add
retf
addr16
icebp
push
jne
cs
mov
popa
stos
push
pop
jae
pop
xchg
loope
sbb
mov
addr16
sbb
ja
jae
inc
pop
(bad)
inc
add
inc
call
je
fdivr
push
mov
push
inc
imul
inc
jmp
adc
in
cwde
push
pop
mov
clc
and
fimul
cmp
sub
out
and
and
sub
push
mov
sub
ja
movs
push
sub
retf
mov
mov
es
inc
cmp
popf
jecxz
cmp
push
or
pop
sbb
ret
(bad)
and
fsubr
xchg
bound
push
mov
inc
test
jmp
sti
sub
(bad)
hlt
inc
out
mov
addr16
mov
sbb
push
fwait
in
xor
and
ficom
aas
mov
test
clc
sbb
into
push
dec
xchg
jmp
popf
xchg
and
add
test
lds
fnstsw
call
sahf
ret
dec
fsub
mov
push
clc
ret
in
add
inc
push
inc
sub
mul
xor
hlt
pop
dec
mov
add
add
xor
sbb
add
jnp
je
sub
call
dec
pop
inc
xchg
xchg
shr
dec
fcomp
jns
and
mov
daa
add
sbb
int
stos
test
xor
mov
inc
test
outs
cmp
psllq
call
mov
lods
cmps
sti
scas
loope
cdq
jle
into
sub
ja
jmp
sbb
leave
cwde
daa
clc
(bad)
jno
jnp
mov
mov
adc
mov
jmp
dec
xor
jmp
pop
or
fs
push
ss
retf
mov
xchg
or
sbb
cmc
arpl
or
mov
push
xchg
in
pop
test
or
out
rol
jno
cld
jg
stos
sbb
adc
pop
push
(bad)
into
mov
dec
xchg
mov
sub
rol
ins
pop
sub
add
neg
push
or
jne
les
scas
mov
pop
xlat
cdq
sahf
shl
ja
push
cmp
or
scas
mov
fsub
inc
jge
cmc
outs
neg
es
pop
mov
push
es
jne
inc
cld
jmp
pop
and
dec
test
push
leave
push
rol
sub
stc
mov
adc
lods
(bad)
pop
lods
sub
pop
stos
pop
test
not
es
sub
add
push
jmp
test
cmp
fistp
mov
mov
push
in
mov
imul
fs
inc
pop
or
pop
mov
repz
(bad)
fxch
jno
push
sbb
xchg
fstp
test
mov
xchg
rcl
inc
out
dec
out
cli
cwde
sub
add
pusha
int3
cmp
fild
out
pop
xor
js
jmp
imul
xchg
retf
xor
xchg
retf
ret
fstp
idiv
push
xchg
ret
icebp
jge
mov
sub
bound
popf
clc
or
scas
pop
dec
jae
(bad)
adc
push
xchg
cmp
repnz
and
cmp
mov
into
add
push
retf
lock
clc
cmp
pop
(bad)
xchg
dec
sbb
adc
sbb
icebp
rcr
daa
adc
data16
jl
mov
je
xor
push
xor
das
lock
sbb
mov
jmp
ds
sub
xchg
jmp
jae
xor
pop
xchg
pushf
mov
xor
sbb
jmp
lea
push
imul
dec
xor
mov
xlat
fsub
add
and
add
xchg
inc
sar
stos
je
icebp
hlt
cwde
adc
enter
dec
rcl
div
xchg
cmp
xor
retf
sub
and
jge
out
mov
aas
push
sti
or
aad
add
into
sbb
int3
mov
out
rcr
shr
inc
inc
jecxz
(bad)
xor
inc
cmp
imul
addps
and
enter
call
mov
mov
jp
xor
gs
stos
jbe
sbb
inc
dec
loop
rcl
in
jnp
int3
imul
pop
or
jno
into
out
pop
xor
xor
retf
pop
push
(bad)
push
push
push
xchg
adc
xor
push
jno
dec
fcomp
repnz
(bad)
enter
mov
cmps
adc
jno
daa
or
mov
push
les
push
cmp
addr16
xor
dec
mov
rol
call
pusha
lock
jo
jo
xor
test
mov
cmp
in
adc
cmp
icebp
pop
add
and
dec
in
movs
rcl
mov
mov
push
mov
mov
xor
xor
adc
dec
cmc
push
xchg
out
pop
mov
add
jb
sar
sahf
mov
into
adc
and
aaa
out
cmp
fst
test
retf
leave
cs
add
aad
out
push
or
inc
dec
cmp
dec
test
in
push
and
push
push
enter
add
ins
jne
adc
push
mov
push
adc
mov
retf
in
movs
mov
jo
add
cmp
(bad)
test
or
retf
push
jno
fsubr
fwait
mov
mov
sar
jbe
mov
pop
mov
dec
movs
cmp
(bad)
push
ds
mov
add
push
in
loopne
rol
cmp
fdivrp
jo
push
mov
jp
mov
(bad)
js
fisub
cwde
xor
mov
into
loopne
inc
mov
cmps
fwait
cmps
adc
scas
mov
and
lock
add
sbb
(bad)
mov
inc
sbb
cmp
mov
jb
dec
call
push
jecxz
sub
lods
add
mov
scas
or
adc
hlt
xchg
jg
sub
out
out
retf
ds
mov
jae
mov
fnstenv
pop
nop
into
test
mov
mov
clc
or
jmp
pop
inc
test
jae
sub
adc
es
pop
les
sub
adc
push
call
lea
cwde
jbe
gs
rcr
or
(bad)
sbb
jecxz
sub
add
in
cmp
popa
mov
or
pop
leave
xor
inc
test
scas
aam
mov
cmp
pop
push
xchg
push
adc
lods
cmps
(bad)
mov
sub
cs
into
add
and
retf
sbb
into
outs
push
push
out
stos
or
or
test
jbe
push
pop
aam
jmp
or
int
xlat
out
sub
mov
xchg
sbb
repz
or
sbb
mov
jecxz
ja
fidiv
inc
(bad)
int3
ret
jns
push
xchg
lea
lds
mov
cwde
mov
aas
pop
sub
push
mov
push
lds
xor
jp
call
and
sub
jmp
outs
retf
sub
cmc
push
rol
sub
out
xchg
imul
xchg
pop
outs
sub
sbb
ss
mov
xor
int
in
adc
test
lea
add
int3
jnp
dec
inc
push
sbb
push
dec
mov
fdiv
out
dec
mov
or
jmp
repnz
pushf
lds
call
ja
arpl
and
repz
mov
ss
adc
mov
leave
xchg
rol
cmps
cdq
inc
fild
adc
push
mul
xchg
jl
inc
inc
cmps
(bad)
into
push
lea
fadd
cmp
xlat
cmp
add
outs
jae
inc
xor
sub
stc
push
sub
pusha
arpl
in
cmc
and
mov
ins
sub
out
(bad)
ins
movs
sbb
daa
inc
daa
arpl
fwait
mov
add
cmc
add
scas
sub
out
pusha
aad
sub
shr
lods
or
stos
out
xchg
fimul
mov
in
and
pop
daa
fidiv
jl
scas
rcr
or
pop
mov
bound
xor
sti
ror
test
pop
and
addr16
into
adc
push
out
jp
dec
add
dec
mov
cmps
repz
(bad)
jg
dec
push
les
int3
mov
cmp
jno
pop
xchg
mov
inc
pop
outs
mov
cmp
mov
cs
fsubr
stos
or
sub
push
clc
test
stos
dec
std
cwde
mov
ds
ja
test
cmp
(bad)
and
dec
fsub
dec
mov
inc
add
aaa
xchg
sti
sahf
in
repz
repnz
cdq
mov
jmp
cmp
rol
out
mov
cmps
movs
pop
push
and
cli
loope
mov
sub
in
imul
scas
push
cwde
in
(bad)
sub
dec
ds
dec
pushf
data16
jmp
(bad)
fld
sti
adc
cmp
sub
aad
dec
adc
push
lea
lock
ret
adc
push
pusha
and
jbe
ret
outs
mov
imul
jne
pop
jbe
adc
imul
bts
jecxz
cmp
xchg
push
and
or
dec
sti
popa
jne
sbb
cmp
push
inc
js
adc
aaa
gs
jne
les
xor
pop
dec
outs
fdiv
test
sti
pushf
shl
dec
jmp
test
or
loopne
sbb
xor
xchg
push
dec
fsubr
sbb
mov
repz
in
cld
call
shr
fs
jno
hlt
ficom
in
ret
pushf
out
fiadd
adc
and
cmp
jo
inc
sbb
lds
jge
ja
stos
cmp
cmp
xor
js
mov
retf
pop
idiv
mov
pop
push
dec
mov
xchg
jne
pushf
jnp
add
pop
dec
sub
test
xchg
xor
ficomp
add
lods
dec
(bad)
out
mov
pop
mov
(bad)
inc
push
dec
imul
mov
stc
aas
or
stos
enter
daa
pop
push
lods
out
xor
or
adc
std
daa
xor
cmps
test
cdq
data16
inc
(bad)
out
xchg
cmps
(bad)
jmp
pop
sbb
dec
mov
test
dec
xor
(bad)
cwde
call
xor
out
(bad)
lods
mov
inc
push
or
test
int3
cli
mov
jae
(bad)
xchg
xchg
push
int
sub
sbb
fdiv
aas
push
sub
cmps
icebp
imul
ret
clc
hlt
lea
inc
cmp
push
jg
add
dec
movs
mov
mov
fs
cmp
sahf
(bad)
ret
cmp
arpl
int3
je
mov
dec
mov
and
add
es
xor
and
or
jae
mov
add
pop
ins
push
mov
aas
and
pop
sbb
retf
je
or
lods
inc
mov
into
adc
test
movs
and
aas
cmc
loope
clc
ja
inc
xor
adc
and
popa
(bad)
mov
xchg
jae
and
cli
outs
cdq
xchg
inc
test
and
push
mov
dec
movs
test
movs
or
cmp
es
pop
sub
leave
mov
jge
pop
mov
(bad)
in
or
cmps
out
add
loopne
push
and
and
rcr
push
test
mov
call
rcr
pop
xor
inc
test
adc
pop
or
or
adc
xchg
cmp
or
(bad)
dec
stos
mov
enter
inc
in
cmc
push
push
cmp
sahf
js
adc
das
mov
jae
jecxz
mov
stos
xor
stos
(bad)
mov
mov
adc
lods
in
inc
lods
gs
jbe
cmp
jp
pop
pushf
inc
test
mov
loop
mov
lea
push
add
(bad)
pop
cmp
mov
jp
loope
push
outs
sahf
aaa
mov
jmp
or
aad
jle
je
jmp
push
add
daa
fimul
xor
or
cmp
shl
sub
sbb
inc
adc
push
inc
ret
outs
test
mov
test
and
push
inc
xchg
call
mov
imul
push
or
test
inc
test
sbb
(bad)
sub
scas
cs
inc
xor
in
inc
sub
ja
fisttp
pop
push
mov
pop
mov
push
sbb
fnsave
push
imul
mov
inc
add
(bad)
ds
inc
dec
mov
in
(bad)
aaa
data16
or
mov
pop
je
mov
dec
retf
popf
jmp
push
pop
cs
rcl
aad
dec
aas
jmp
adc
popf
stos
cdq
cmp
push
sahf
mov
xor
cmp
popf
lock
ds
lods
call
es
dec
iret
cwde
dec
clc
pop
xor
stc
pop
mov
fcmovne
dec
outs
cmp
inc
sub
fild
outs
push
call
enter
or
aad
inc
in
mov
jbe
mov
inc
push
scas
cmc
jle
enter
dec
jno
push
out
xor
fwait
cmp
pop
pop
das
dec
xchg
ins
sbb
add
push
cdq
call
add
int3
(bad)
or
call
stos
push
mov
stos
cld
cwde
ins
sbb
es
mov
cs
push
int
xchg
add
into
outs
add
stos
ds
jmp
fiadd
gs
or
xor
lock
mov
int
xchg
mov
jns
ret
push
dec
addr16
sbb
mov
stos
mov
xchg
push
mov
into
sub
arpl
scas
and
nop
shl
pop
es
test
adc
leave
scas
fwait
pusha
add
aad
cmp
arpl
push
outs
(bad)
dec
leave
scas
adc
les
es
aas
jmp
mov
jmp
fdivr
pop
(bad)
fcom
jns
(bad)
add
xchg
stos
xchg
and
ins
enter
clc
(bad)
adc
mov
idiv
jecxz
es
cld
in
leave
fldcw
add
push
push
in
andps
cmps
cvtdq2ps
cld
clc
jmp
add
push
jmp
pop
jmp
or
(bad)
fldenv
mov
xor
je
fild
cmps
xor
xchg
cmc
cmps
jle
xchg
std
or
lahf
dec
clc
mov
push
pop
fcomp
pop
lods
sbb
jbe
or
test
fcom
daa
aad
jno
scas
lea
(bad)
mov
test
adc
lods
mov
aas
leave
mov
mov
(bad)
leave
xchg
jne
sbb
mov
movs
sbb
and
adc
push
pop
(bad)
dec
jge
in
enter
sahf
fwait
mov
mov
sbb
aad
stos
cmp
cdq
dec
and
test
mov
push
clc
pop
cmps
test
and
dec
add
dec
cli
pop
mov
jmp
xor
arpl
mov
and
or
push
pop
push
call
jmp
test
xchg
add
push
jge
push
jmp
mov
jl
mov
cmp
mov
pop
test
push
xor
leave
or
jge
sub
lea
adc
and
aad
inc
jle
jne
adc
out
dec
xchg
pop
(bad)
test
arpl
sbb
dec
movs
mov
jecxz
call
cmp
stos
ret
inc
or
push
fwait
add
cmp
add
repz
les
sbb
arpl
outs
leave
add
outs
fidiv
dec
mov
fst
rcl
and
xor
or
idiv
fwait
outs
mov
and
cwde
dec
mov
mov
rol
jmp
scas
inc
jge
sbb
cmp
imul
int3
xchg
imul
sub
call
inc
ret
das
pop
stos
add
ja
mov
adc
cs
push
mov
ror
xchg
push
fdivr
(bad)
jmp
icebp
xchg
mov
xor
test
sbb
retf
out
cmc
and
js
adc
(bad)
fs
mov
mov
dec
rcr
push
lods
dec
cmp
mov
cmp
jnp
pop
inc
mov
call
(bad)
in
jnp
cld
mov
xchg
sbb
sub
jle
jb
stos
popa
out
js
mov
rol
xor
xor
pop
jmp
sar
mov
daa
fucomp
out
aam
arpl
sub
pop
int3
push
xor
mov
jg
test
(bad)
addr16
fldenv
fldcw
ins
mov
vshufpd
fs
dec
dec
jmp
xor
fild
leave
cld
fidivr
xchg
repnz
loope
test
and
call
lds
sub
mov
(bad)
sbb
xchg
cmp
les
sbb
out
into
test
push
popa
adc
cld
sbb
jns
xor
in
movs
int
lea
jnp
das
shl
ffree
mov
sbb
jno
stos
mov
and
fldenv
push
in
loopne
das
sahf
adc
mov
jae
outs
inc
cmp
int3
add
add
jb
xchg
pop
lea
(bad)
ins
inc
sbb
add
mov
scas
pop
(bad)
jb
pop
cmp
sub
or
das
lock
imul
mov
pop
xchg
add
jle
std
test
ins
enter
(bad)
jno
or
pop
mov
pop
xor
repz
adc
sbb
mov
cdq
jnp
std
icebp
push
lods
in
stos
dec
or
nop
dec
jl
fld
leave
jo
add
push
int3
lods
es
repz
add
push
fist
xor
fidivr
mov
ja
div
fstp
shr
adc
dec
js
ret
(bad)
test
pop
and
into
sbb
mov
pop
or
dec
outs
enter
jae
int3
jl
mov
jge
ret
lahf
lods
and
or
mov
test
int
push
mov
dec
jecxz
inc
mov
jno
xchg
int
dec
push
inc
out
rcr
sub
or
out
cmps
adc
jno
stos
js
inc
dec
repz
shr
cmp
cmps
dec
popf
lods
jb
(bad)
div
push
cmp
sbb
scas
mov
fiadd
movs
dec
cli
push
loope
adc
and
lock
pop
mov
mov
push
push
sti
add
call
ficomp
test
mov
cmp
nop
mov
fwait
leave
outs
out
and
adc
(bad)
prefetch
or
div
test
je
dec
inc
test
je
jecxz
mov
mov
mov
mov
sar
inc
scas
jae
je
dec
rol
cmp
lea
sub
add
lahf
sbb
pushf
mov
mov
test
test
movs
stc
jns
push
popa
loopne
pop
fnstcw
test
sbb
and
xor
push
clc
ror
jne
retf
jg
pop
call
call
fwait
mov
hlt
xor
in
jne
(bad)
das
repnz
sbb
mov
mov
push
test
dec
and
cli
cmc
fwait
mov
ins
sub
pop
push
xor
std
sub
je
int3
mov
cmps
sub
xor
jmp
addr16
js
mov
mov
push
fisub
mov
mov
imul
or
data16
sub
pop
push
imul
call
mov
inc
test
and
dec
fiadd
cli
pop
dec
and
jle
aad
cli
sub
xchg
xor
cmp
dec
ret
mov
into
dec
sbb
inc
js
inc
sbb
shl
pop
outs
add
stc
stc
xor
rol
call
or
push
jbe
push
cmp
pop
and
inc
imul
jmp
push
inc
pop
mov
sbb
inc
jmp
cs
cmps
jmp
inc
ret
cmp
pop
jo
mov
xor
pop
aas
jmp
out
jl
es
xchg
cmc
add
icebp
addr16
rcr
in
mov
movs
lods
imul
mov
or
repz
movs
dec
sbb
and
arpl
retf
clc
outs
sbb
and
loop
push
add
dec
je
xchg
loop
add
sub
mov
xor
clc
mov
push
mov
xor
aaa
shr
popa
(bad)
xlat
je
push
mov
push
lods
sub
mov
pop
movs
ret
jecxz
mov
xchg
test
out
push
fistp
sub
mov
in
push
dec
cmp
dec
ds
jg
pop
jno
call
push
mov
in
add
jne
mov
pavgw
push
add
sub
and
into
adc
fild
add
movs
pusha
adc
xlat
movs
sbb
dec
dec
in
sub
mov
add
mov
mov
cmp
inc
pop
push
stos
popa
cld
loop
pusha
cmp
cli
shl
xchg
xlat
xchg
dec
cmp
xchg
in
clc
retf
sub
jmp
imul
mov
fimul
fnstenv
ins
(bad)
jl
iret
adc
imul
xchg
push
or
inc
mov
inc
js
rcl
outs
pop
lea
ror
inc
jg
or
aaa
es
popa
(bad)
mov
ins
jmp
data16
jmp
cli
(bad)
push
dec
mov
xlat
js
lods
lods
jle
mov
jno
sahf
ret
jp
pop
dec
jmp
and
in
sbb
pop
or
jmp
mov
and
nop
or
mov
int
xchg
es
sahf
fst
add
add
xchg
ja
test
aam
repz
inc
mov
aad
das
(bad)
jo
inc
add
jmp
clc
fidiv
gs
out
call
xlat
call
cmp
pop
sub
into
ss
repnz
jmp
pop
ret
xchg
test
lds
pshufw
ss
nop
out
jnp
dec
adc
inc
xor
clc
leave
push
pop
(bad)
cmp
push
mov
cli
imul
push
test
popa
movs
mul
or
cmp
adc
jge
aaa
jne
nop
in
xchg
pop
pop
pushf
repz
cld
retf
cmc
adc
iret
movs
clc
(bad)
jecxz
xor
and
fdivr
dec
loop
in
pop
test
dec
outs
das
(bad)
or
stos
cmp
rcr
loop
js
lds
movs
push
xor
mov
mov
ins
test
xor
stos
cmp
mov
popf
call
mov
cmc
mov
cmc
ds
dec
add
in
in
pop
xor
arpl
xchg
les
(bad)
sbb
faddp
mov
mov
push
add
in
inc
pop
jp
std
xor
jne
sbb
push
jae
addr16
or
rcr
dec
mov
stos
(bad)
bound
out
out
stos
pop
aam
gs
push
pushf
jg
cmp
xchg
mov
ret
ins
xor
xor
xchg
stos
(bad)
jle
je
les
pop
scas
arpl
in
cmp
bnd
sti
stos
mov
ja
shl
push
out
das
loopne
in
(bad)
retf
push
mov
add
jns
cmps
xor
push
sub
or
xchg
cmp
sub
int3
pop
cmps
sbb
mov
xor
push
pop
cld
cmps
jnp
leavew
mov
push
push
in
fbld
jg
movs
mov
leave
sub
xchg
or
in
test
out
sub
and
cmps
ret
popa
jmp
or
xchg
jmp
push
test
outs
cdq
test
cdq
test
es
stos
aad
xor
push
sbb
jb
inc
mov
push
mov
mov
dec
push
sbb
adc
(bad)
adc
scas
jne
or
xor
mov
push
sub
int3
ret
paddsw
sub
push
aad
sbb
stc
fwait
enter
pop
jl
test
adc
add
(bad)
xor
xlat
xor
or
inc
movs
push
or
mov
or
mov
cli
jmp
pop
sub
add
retf
leave
lods
ss
pushf
aad
or
jne
mov
loop
lods
xchg
dec
and
je
pop
jnp
or
popa
xor
inc
js
mov
out
mov
(bad)
rol
mov
daa
mov
icebp
sbb
(bad)
inc
je
cli
sti
test
sar
mov
stc
sbb
sbb
sbb
cmps
test
jp
ret
retf
mov
fimul
xchg
movs
push
mov
aas
ja
lods
sub
cmp
ret
sbb
or
dec
lock
push
and
pushf
inc
jo
mov
mov
cmp
adc
test
in
add
test
icebp
test
sub
popa
mov
(bad)
call
mov
jmp
jnp
jge
dec
cld
sbb
mov
scas
xchg
xchg
out
dec
push
in
sar
rep
jg
sbb
enter
outs
xchg
shl
neg
jno
aad
xchg
dec
dec
dec
jo
dec
mov
fld
and
mov
mov
push
jge
arpl
call
sar
pop
mov
sbb
sbb
or
retf
cmp
cmps
or
push
ret
clc
xor
sbb
jle
inc
cmp
leave
int
inc
xchg
jmp
cdq
add
aad
mov
cmp
mov
out
mov
nop
cmps
pop
cmc
outs
daa
sub
inc
cmc
sub
pop
jns
dec
pop
or
jmp
fiadd
mov
inc
sbb
push
sub
or
inc
mov
je
hlt
cmp
add
(bad)
mov
dec
mov
lahf
clc
not
pop
jno
fld
add
sub
pop
popf
xlat
out
inc
adc
dec
call
xchg
inc
imul
jp
sbb
pop
call
pop
xchg
gs
jno
xchg
adc
data16
xchg
or
imul
repnz
data16
xchg
shr
test
js
push
jp
(bad)
mov
xchg
pop
push
aad
lock
jg
int3
stc
push
mov
push
scas
sub
(bad)
(bad)
iret
ret
imul
int3
xchg
call
lods
mov
fsubrp
(bad)
cmps
sbb
fsubr
and
pop
fistp
or
fisubr
stos
or
aas
in
test
adc
push
imul
mov
jae
cld
cmp
mov
call
jne
inc
inc
hlt
jbe
mov
jnp
xor
ss
xor
xor
std
push
add
mov
imul
sti
scas
sti
daa
push
xchg
les
dec
and
js
add
lods
bound
push
inc
add
sub
icebp
dec
sbb
and
lods
and
shl
rcr
movs
sub
rol
cmp
adc
or
inc
pop
dec
xor
jno
(bad)
stos
arpl
shr
out
fnstenv
pop
sbb
cs
fmul
fs
fs
shl
test
add
lds
pop
adc
aaa
popa
fmul
cmp
cmp
dec
sbb
fwait
cmp
aad
add
xchg
retf
test
jno
xchg
mov
xor
test
shr
ret
popf
adc
jo
push
mov
aas
rol
and
in
and
dec
adc
ds
mov
jns
in
jl
push
pop
movs
imul
mov
mov
jl
and
sbb
aaa
leave
dec
or
inc
pop
or
ds
jo
inc
or
xchg
ins
sahf
cmp
cmp
neg
and
adc
inc
lds
sub
and
hlt
nop
das
ja
es
fadd
push
dec
dec
ds
add
sub
arpl
sbb
adc
fld
mov
xchg
aam
sub
inc
imul
out
mov
(bad)
js
pop
outs
aad
les
scas
dec
repz
push
enter
shl
mov
leave
test
and
mov
inc
push
(bad)
fcom
ds
add
or
jb
jmp
add
mov
xor
xor
imul
shl
aas
inc
push
xor
dec
push
mov
push
ficomp
mov
sub
gs
dec
ret
xchg
mov
fs
inc
clc
mov
sbb
xchg
mov
xchg
add
push
mov
pop
ja
pusha
mov
shl
push
sti
xchg
and
inc
arpl
ja
mov
mov
inc
push
(bad)
push
scas
cmp
xchg
and
sahf
xchg
xor
jmp
fisub
outs
(bad)
push
xor
cli
shr
rol
cmp
test
jne
addr16
sbb
mov
mov
adc
add
jae
loop
aas
js
xor
ss
imul
mov
mov
sub
xchg
mov
movs
rcr
sbb
call
xor
jecxz
popa
ja
faddp
jnp
fistp
cmp
shl
imul
sbb
xchg
adc
in
js
sbb
stos
ins
lods
out
mov
sbb
pushf
cmp
not
iret
inc
mov
data16
xchg
sub
nop
ins
call
xchg
out
out
icebp
push
add
(bad)
outs
stos
fisubr
fst
jmp
push
xchg
mov
sbb
push
cld
cdq
popa
sub
mov
test
retf
mov
loop
int
and
shr
stos
jbe
test
out
jle
push
retf
aad
xchg
dec
lahf
push
jmp
pop
mov
mov
xlat
repz
xchg
seta
call
movs
in
(bad)
test
call
and
les
inc
jae
sub
dec
inc
add
(bad)
fisubr
call
fcmovb
dec
pop
stos
imul
(bad)
cmp
jecxz
pop
pop
push
scas
pop
push
test
gs
cmp
jg
outs
gs
add
mov
sbb
scas
jecxz
jmp
add
and
fiadd
bound
jnp
push
or
ja
in
mov
push
pop
cli
pop
cmc
inc
xchg
inc
mov
sbb
(bad)
imul
mov
test
enter
dec
adc
stos
xchg
add
push
pop
scas
neg
push
out
xor
xor
or
gs
jg
imul
iret
sbb
jl
pop
xchg
les
and
(bad)
adc
cmp
push
cmp
push
and
bound
pop
leave
data16
ja
dec
(bad)
je
inc
mov
push
adc
and
ds
test
iret
imul
arpl
and
cmc
out
dec
jo
cld
jns
xchg
cmps
mov
test
jnp
test
pop
sub
mov
data16
mov
pop
sbb
aas
int
mov
jmp
cmp
and
xor
std
pusha
cmp
int3
pop
dec
out
xchg
push
cmc
aam
mov
hlt
pop
imul
loop
push
cdq
test
mov
pop
mov
loopne
mov
pusha
loopne
mov
test
pop
mov
pop
cmp
fst
jle
leave
xchg
sub
and
mov
xchg
(bad)
movs
scas
pop
test
and
mov
xor
adc
sbb
inc
call
(bad)
cmp
movs
sbb
scas
push
push
dec
mov
ja
mov
mov
push
outs
pop
xor
loope
jecxz
dec
push
jno
in
mov
ficomp
cmp
push
loopne
inc
mov
push
push
jle
xor
ror
inc
inc
and
lea
jno
pop
leave
jmp
mov
cli
push
out
test
lock
cwde
call
push
sub
cmp
mov
mov
jecxz
jbe
cli
imul
dec
dec
sub
or
jo
fild
pop
cmp
dec
shl
jecxz
and
pop
jle
dec
mov
mov
ins
mov
ss
pushf
loope
cli
std
(bad)
mul
and
cld
inc
add
push
out
push
add
fmul
xor
lods
and
int3
xor
cdq
fxch
iret
jmp
inc
xor
mov
dec
movs
ss
xchg
mov
and
movs
xor
adc
nop
idiv
sbb
xchg
out
sbb
adc
or
adc
test
fisub
inc
sbb
test
add
pop
je
inc
or
jp
inc
dec
lahf
clc
repz
mov
aas
je
or
push
push
aad
sahf
cmc
xchg
inc
rol
xchg
adc
and
inc
or
movs
aaa
pop
dec
cs
mov
xadd
push
cmc
xchg
jmp
sbb
ret
call
fstp
(bad)
mov
jmp
test
pop
inc
jbe
mov
shl
loope
xchg
mov
xor
jmp
aas
bound
in
test
test
repz
pop
sahf
aas
loope
or
inc
push
jg
add
fsubr
add
cmps
dec
pop
fimul
shr
stos
pop
xor
es
pop
xlat
test
adc
lds
cdq
les
add
int
and
xor
loope
pop
fwait
ss
into
in
cwde
js
aaa
pop
in
xor
mov
add
mov
mov
fdiv
fs
and
mov
sbb
cmp
push
lds
int
cdq
cld
xchg
je
dec
cli
fs
loope
jo
jp
movs
mov
add
aaa
(bad)
in
daa
add
mov
jmp
mov
sub
xor
data16
dec
or
jo
inc
sub
xchg
jmp
cmp
lods
hlt
xlat
mov
jbe
add
in
jl
jmp
mov
cld
pop
or
add
xchg
dec
mov
add
mov
in
fstp
iret
sub
icebp
cmp
cld
int
mov
sub
push
cmp
loop
into
leave
cmp
ins
je
loop
lahf
mov
nop/reserved
ss
adc
mov
test
push
je
sub
mul
mov
test
pop
lods
add
movs
inc
pop
fist
movs
xchg
sub
push
sar
ja
push
jecxz
in
sub
sbb
cs
popf
or
and
mov
idiv
mov
mov
dec
ins
inc
cmp
ja
loop
cmc
leave
sub
adc
cs
sahf
cmp
cmps
sahf
fst
cwde
and
loopne
xor
inc
push
dec
out
and
cmp
ret
popa
call
out
push
cmps
sub
cmps
out
add
mov
arpl
and
mov
pop
cmp
and
shr
es
jp
push
sub
and
in
xchg
add
icebp
jo
inc
push
mov
mov
sub
dec
hlt
inc
in
add
dec
dec
adc
ss
or
jae
push
pop
adc
mov
jne
pushf
in
jecxz
out
icebp
in
or
dec
adc
inc
adc
iret
(bad)
inc
test
fmul
rol
lock
mov
jae
pop
lock
push
and
or
cmc
retf
pop
pop
xor
arpl
movntq
jmp
pop
cwde
jo
or
cwde
rcl
gs
cld
dec
pop
sub
and
pushf
adc
sub
pop
jns
mov
add
adc
test
adc
pop
imul
imul
js
cmps
retf
loope
jg
jmp
jae
test
and
cld
push
cmps
cmp
fnsave
ja
or
jno
lock
out
inc
push
adc
(bad)
xor
inc
push
pop
jnp
sahf
dec
sub
out
daa
call
dec
jno
push
xchg
jmp
jecxz
sti
mov
sti
xor
mov
dec
shr
gs
dec
test
das
or
push
push
(bad)
pop
sbb
rcr
cmp
clc
and
movs
outs
jns
clc
jns
test
ds
rol
push
sub
ret
jle
dec
movs
xchg
mov
jo
mov
sub
movs
mov
add
popa
fnstsw
imul
xor
movd
stos
mov
mov
outs
mov
mov
adc
dec
jbe
push
adc
inc
inc
xchg
inc
mov
pop
(bad)
xor
and
push
and
shl
lahf
repz
les
sub
dec
rcr
xchg
mov
sub
mov
inc
xor
int3
or
adc
cmc
pop
mov
xchg
cmp
outs
push
mov
pushf
nop
cld
or
cli
cmp
daa
xor
loop
ret
call
test
shl
jnp
jmp
das
mov
add
shl
out
rol
enter
ins
int3
clc
xor
sbb
into
sub
add
aas
daa
mov
xchg
xchg
jne
imul
mov
out
xchg
mov
mov
stos
cld
xor
add
mov
cmp
ins
dec
xchg
iret
mov
int
mov
pop
gs
xor
mov
imul
xchg
pusha
div
out
sbb
data16
dec
loopne
push
push
mov
fwait
(bad)
sub
lea
das
adc
mov
adc
push
mov
icebp
jns
add
cmps
(bad)
jp
pusha
repnz
push
jne
sbb
loopne
mov
cmp
cmp
mov
jbe
cmp
mov
xchg
scas
pop
repnz
sbb
sbb
(bad)
inc
ins
stos
retf
(bad)
jecxz
sar
scas
fsubr
pop
inc
ja
cmp
(bad)
mov
lahf
adc
pop
call
sub
mov
loope
dec
pop
sbb
scas
mov
sti
loopne
adc
push
sub
inc
mov
mov
stos
ja
sub
mov
push
rcl
push
dec
enter
aaa
fistp
xchg
sahf
fcmovne
fld
jbe
adc
fs
retf
in
test
mov
push
add
cmp
sbb
mov
or
xchg
push
ds
das
jge
push
fsubr
mov
pop
or
daa
pop
das
iret
mov
loope
xchg
in
cmp
xchg
pop
stos
sti
jno
(bad)
mov
pop
retf
mov
xor
stc
cwde
mov
mov
push
or
push
shl
adc
push
inc
dec
xchg
mov
movs
pop
nop
shr
dec
sbb
xor
fnstsw
xchg
retf
xchg
push
inc
pop
cdq
fwait
fs
retf
jg
jge
mov
addr16
sub
jnp
lahf
lea
(bad)
bound
dec
daa
enter
mov
mov
xchg
adc
jp
inc
and
adc
pop
stos
mov
nop
xchg
cli
or
gs
push
imul
clc
shl
push
xchg
es
inc
xchg
mov
pop
xchg
scas
dec
and
mov
mov
mov
jmp
pop
mov
aam
ins
and
call
mov
out
lods
aad
ds
mov
dec
and
jle
sti
not
sub
sbb
lods
cmp
cmp
sub
pop
jae
pop
push
jne
cmp
aam
xchg
hlt
out
dec
xchg
ins
jecxz
sub
cmp
in
mov
pop
pop
mov
mov
adc
xor
int
iret
pop
in
mov
inc
daa
sub
push
out
mov
out
sbb
xchg
stos
add
sbb
jmp
jb
das
das
mov
dec
loopne
and
pop
push
out
push
mov
jnp
enter
iret
inc
mov
adc
xor
cmpps
xchg
add
(bad)
pusha
and
outs
pop
ins
popa
mov
jnp
mov
mov
xor
inc
dec
mov
add
xchg
enter
inc
dec
(bad)
jmp
das
jbe
cmp
clc
mov
sub
das
add
das
xchg
mov
mov
inc
or
mov
xchg
call
add
ffreep
inc
rcl
repnz
mov
pop
and
mov
sub
mov
sub
jmp
or
dec
pushf
stc
pop
std
mov
mov
fneni(8087
fist
sub
add
dec
jp
int
es
dec
and
xchg
je
push
cmp
outs
inc
jmp
fcomi
fprem
(bad)
hlt
mov
aas
mov
aam
arpl
je
inc
ja
xchg
jmp
ret
fcomp
pop
daa
add
mov
pop
push
fidivr
cmp
xchg
pop
push
mov
xor
mov
ja
push
xor
mov
sbb
or
lods
push
loope
mov
cld
push
imul
pusha
inc
pop
mov
add
mov
mov
(bad)
(bad)
cdq
lahf
mul
retf
and
cmps
test
jo
or
loopne
jmp
cwde
jne
sub
test
push
fdivr
xchg
xchg
scas
mov
mov
push
push
mov
push
lods
xchg
push
add
inc
dec
ja
popa
cmp
rcr
xor
cmp
sub
xchg
cmp
stos
(bad)
cs
push
dec
(bad)
pop
mov
nop
outs
lock
fcom
mov
and
push
js
xchg
mov
test
jbe
jae
sub
jge
clc
out
aad
loopne
fwait
add
xor
es
shl
in
add
xchg
add
sbb
push
mov
cmc
dec
jl
cmp
xor
test
mov
out
jo
(bad)
lods
imul
pop
mov
jl
loopne
rcr
jmp
cmps
les
cmps
jmp
adc
repz
data16
cmp
and
ror
stos
lock
xor
popa
call
iret
sbb
push
jne
out
cmps
dec
sub
mov
std
jb
fwait
sub
mov
lods
fdivp
and
dec
mov
sbb
je
push
adc
iret
aas
mov
cmps
and
lock
lahf
retf
cld
push
push
call
daa
sbb
adc
adc
jnp
xor
pushf
dec
loopne
and
frstor
test
adc
mov
mov
pop
in
jmp
mov
sti
xchg
fstp
xor
ja
dec
out
xor
retf
and
loopne
lods
aam
mov
mov
xchg
push
jo
push
pop
mov
sbb
lods
sub
jno
les
aad
mov
mov
dec
ror
shl
nop
lds
imul
cmp
xor
dec
jg
lods
and
xor
inc
pop
inc
cmp
mov
mov
add
xchg
(bad)
add
mov
xchg
retf
xchg
cmp
add
xchg
sbb
hlt
js
xor
adc
cmp
mul
(bad)
push
or
and
jno
mov
fidivr
sbb
xchg
cmp
push
add
(bad)
dec
fisub
xor
jmp
adc
cmps
hlt
sbb
into
push
cmp
int3
jnp
movs
test
(bad)
sbb
clc
sub
or
xchg
pushf
xor
push
cmc
jnp
adc
push
les
fist
std
xor
sub
es
bound
pop
movs
sub
xchg
pop
push
jo
popa
mov
out
jbe
int3
mov
mov
test
sahf
sub
adc
scas
mov
outs
pusha
stos
das
push
push
out
ins
pop
xchg
mov
aad
cmps
outs
ret
cwde
and
ficomp
repz
add
es
or
pop
inc
stos
cmp
stos
das
bound
dec
hlt
mov
ror
loope
cwde
pop
sbb
loop
adc
mov
push
add
sbb
jmp
mov
dec
xchg
scas
sub
js
jl
pop
mov
or
push
popa
std
data16
in
call
jns
xchg
jg
add
cmc
add
jb
xchg
jle
dec
adc
(bad)
mov
dec
test
push
jbe
movs
sub
adc
not
dec
cmp
sbb
iret
and
dec
mov
mov
xchg
(bad)
dec
jb
js
push
ret
lods
repnz
push
inc
xor
xor
addr16
pop
push
xor
push
lock
pop
outs
push
mov
int3
push
mov
int3
xor
fld
inc
jb
dec
mov
jae
push
aad
out
dec
inc
adc
xor
fisttp
push
xchg
pop
xor
inc
push
inc
mov
xchg
ret
cwde
inc
push
ja
popf
mov
lds
(bad)
and
data16
push
xor
xor
cmp
dec
xchg
push
push
and
inc
popf
aam
cld
mov
push
movs
ret
inc
inc
sub
enter
sbb
fdivp
cmps
retf
mov
aaa
inc
aas
mov
pop
jg
and
pop
inc
jg
push
mov
adc
xchg
mov
rcl
neg
idiv
mov
mov
jbe
jg
and
retf
add
dec
mov
push
adc
mov
fiadd
in
cdq
cmp
jecxz
or
out
jb
clc
dec
movs
mov
push
in
mov
pop
sbb
int3
mov
test
fs
push
pop
xlat
stos
pop
cmp
ins
shl
jne
(bad)
js
pop
mov
aam
cs
movs
cdq
cwde
loope
std
iret
pop
pop
mov
adc
cld
push
sbb
adc
movs
mov
jmp
dec
scas
in
adc
ds
movs
push
pop
mov
aas
into
inc
cmps
dec
lock
mov
mov
xchg
pop
xchg
enter
sbb
sbb
xchg
enter
and
mov
mov
ds
sub
daa
push
inc
imul
cmp
xchg
inc
xor
mov
push
push
pusha
and
mov
inc
cld
out
push
stos
push
sbb
(bad)
cmp
mov
(bad)
xor
test
cdq
movs
cmp
inc
sub
arpl
sub
fstp
cli
imul
inc
jne
adc
test
and
sub
sti
add
mov
test
dec
pusha
movs
jge
mov
scas
cmp
std
stos
mov
outs
xchg
dec
cmp
adc
push
cmp
lahf
push
into
xor
xchg
cld
movs
mov
imul
mov
hlt
daa
shl
inc
dec
lock
clc
retf
mul
mov
mov
call
push
add
icebp
cdq
pop
pusha
fidiv
fmul
sahf
xchg
hlt
(bad)
push
test
cwde
push
add
mov
jbe
jge
movs
dec
mov
in
pop
das
fstp
mov
cmp
repz
in
(bad)
jmp
jno
push
xchg
(bad)
mov
adc
or
xor
and
add
cmp
inc
(bad)
es
push
icebp
in
neg
cmp
cmp
mov
test
mov
pop
data16
stos
pop
mov
(bad)
mov
lods
popf
bound
aas
pop
push
add
xchg
cmps
pushf
dec
jae
cmps
setg
fistp
dec
mov
add
xor
mov
dec
pop
out
dec
sbb
push
adc
xor
sub
data16
mov
xor
test
popf
add
dec
imul
dec
aaa
and
mov
outs
mov
out
jmp
clc
or
dec
fnsave
mov
or
or
or
xchg
or
iret
pop
cli
mov
inc
jno
sub
xchg
in
fisttp
lea
adc
push
lods
imul
sbb
sub
jmp
cmps
mov
aad
retf
or
and
out
sbb
lahf
jo
xor
sbb
je
fisub
cld
ja
sti
call
gs
push
movs
dec
(bad)
lock
cmp
xor
fidivr
sahf
loopne
movs
retf
sbb
mov
ja
or
pop
cmp
or
in
jmp
mov
cld
fstp
(bad)
loopne
fs
add
int3
clc
push
jae
imul
jb
js
add
sbb
pop
fld
cmp
into
push
dec
stc
cmp
enter
or
mov
into
xor
icebp
stc
and
jp
mov
fidivr
es
jmp
inc
pop
xchg
mov
frstor
sbb
outs
fild
xlat
dec
outs
dec
cmp
adc
mov
or
les
int3
out
repnz
push
cmp
inc
mov
mov
and
jae
sbb
push
mov
sti
cli
lahf
mov
pusha
std
adc
cmc
hlt
mov
xchg
leave
sbb
icebp
sub
add
mov
or
movs
xchg
test
sub
sbb
repz
mov
jle
icebp
inc
mov
(bad)
adc
arpl
retf
retf
pop
xchg
adc
pusha
or
cs
pop
mul
and
sub
and
xor
jb
fld
inc
jbe
popa
fwait
mov
mov
or
pop
shl
mov
adc
mov
adc
sub
shl
push
fld
jo
cmp
fild
mov
rcr
cmp
add
aaa
repnz
mov
fadd
outs
add
ins
lds
data16
pop
push
hlt
mov
jnp
data16
dec
mov
add
sbb
test
loopne
out
outs
outs
xchg
mov
ins
dec
sub
sahf
(bad)
sub
cli
adc
call
(bad)
mov
icebp
pop
mov
mov
mov
adc
not
xchg
sub
arpl
mov
pushf
and
test
fiadd
mov
neg
adc
add
sbb
fistp
mov
xchg
ins
push
xchg
and
stc
ins
or
jg
inc
adc
sbb
lea
les
jmp
fdivr
loope
call
addr16
in
sbb
data16
cli
int3
mov
xor
cwde
(bad)
scas
sub
mov
cmp
bswap
call
fs
push
fisttp
inc
xchg
sub
dec
aad
js
sbb
or
outs
mov
and
xchg
int
and
rol
xchg
icebp
push
pop
lods
out
push
leave
daa
adc
repnz
sbb
mov
dec
pusha
call
je
cmps
push
popa
out
fidiv
gs
jge
pop
push
mov
pushf
(bad)
or
jns
test
mov
pop
dec
scas
fisubr
movs
mov
push
loop
int3
sub
test
add
inc
jmp
push
out
fwait
jmp
repnz
sbb
lods
loope
mov
mov
mov
fsub
add
xor
imul
stc
xchg
lock
cmp
jmp
fsubrp
scas
mov
add
push
jmp
push
pop
push
scas
xor
out
cmc
fwait
jbe
and
sub
int3
xchg
pop
rol
sbb
cmp
jge
or
push
sahf
mov
add
mov
daa
cmp
iret
ja
inc
mov
mov
and
dec
bound
sbb
sub
cld
jnp
and
in
xor
aad
pushf
lea
sbb
add
into
mov
enter
inc
cmp
(bad)
ror
jecxz
test
sub
sub
(bad)
lsl
fisub
jge
jg
or
jmp
sub
shl
xor
sub
push
push
sbb
repz
jb
jmp
jecxz
shl
retf
add
mov
sub
cdq
test
loope
enter
mov
shl
and
js
lock
jne
test
into
inc
cmp
jl
stos
sub
hlt
out
pusha
in
dec
jns
sub
xorps
(bad)
es
and
ins
mov
scas
add
or
outs
push
test
cld
sub
or
jns
xchg
in
xchg
in
(bad)
scas
mov
pop
repnz
movs
lods
out
inc
mov
adc
dec
push
sbb
cmp
and
inc
arpl
iret
and
or
xlat
nop
jb
ja
outs
jbe
pop
cmps
or
push
imul
jge
pop
adc
sbb
dec
repz
stos
inc
push
inc
sbb
sti
mov
jbe
nop
bound
pop
add
jl
out
xchg
stos
cmp
stos
add
in
jnp
mov
mov
iret
mov
xor
inc
xchg
lock
mov
mov
xchg
nop
je
iret
inc
gs
xor
call
fisub
fnstsw
sahf
sub
inc
in
push
xchg
loope
xchg
std
ja
nop
adc
js
mov
dec
into
fdiv
xchg
dec
cmp
div
inc
dec
pop
into
and
fwait
shl
sbb
cmp
cmp
xchg
add
cli
(bad)
xchg
mov
or
pop
sahf
jae
ins
ja
xor
mov
imul
out
nop
inc
mov
cmps
and
or
int
inc
ret
xchg
ficomp
mov
push
lahf
pop
(bad)
mov
je
fcom
fcmovne
sbb
aas
aaa
xchg
sbb
pop
out
ins
aaa
mov
sbb
pop
push
pop
add
neg
shr
movs
jp
or
ins
or
mov
(bad)
mov
ret
jmp
jle
pop
sub
pushf
mov
int3
xchg
or
cmp
jg
(bad)
loop
xchg
jg
scas
repz
mov
stc
dec
scas
call
sub
cmps
push
inc
shl
daa
dec
sti
fistp
cdq
dec
sbb
das
dec
mov
pop
ins
in
dec
sub
sbb
jne
popa
lds
pop
mov
sbb
leave
jns
mov
jmp
push
std
sbb
pop
out
ret
lods
mov
clc
shl
jecxz
std
fld
int3
sbb
pop
cmp
dec
int3
or
and
adc
(bad)
outs
mov
aam
dec
aaa
jmp
out
mov
push
xchg
mov
retf
sub
(bad)
cs
mov
lods
ficomp
lods
push
or
adc
and
xchg
scas
test
fnstenv
push
leave
push
mov
pop
dec
add
gs
ins
call
cdq
pop
xor
dec
mov
dec
mov
scas
push
ds
cmp
sbb
jbe
stos
adc
aaa
ins
gs
sbb
push
mov
(bad)
call
stos
scas
iret
pop
cmp
cmp
test
adc
or
mov
leave
outs
cwde
into
cld
inc
sbb
xchg
ror
mov
or
(bad)
inc
cwde
mov
push
sub
xchg
cmp
ret
jmp
arpl
cmp
cmp
cmc
out
mov
and
ficomp
or
pop
jns
adc
data16
clc
repz
js
adc
pushf
adc
xchg
mov
pop
das
or
xchg
fcmovnbe
mov
jae
xor
push
pop
loop
xor
sub
or
sub
mov
fs
xor
inc
jge
inc
ror
aaa
mov
out
lock
loop
fbld
adc
xor
addr16
lods
add
call
push
fwait
repnz
retf
cmp
add
outs
pop
push
out
mov
or
fcomp
ret
jmp
mov
xchg
cld
rcl
push
jge
push
cdq
gs
pop
retf
dec
jecxz
mov
mov
inc
mov
add
cdq
fsubr
repnz
cmp
dec
cmc
mov
mov
scas
cmc
inc
dec
mov
inc
or
or
mov
sub
scas
js
aas
lods
mov
mov
inc
xor
jge
mov
fwait
or
cmp
leave
pop
pop
lock
in
mov
stos
mov
jnp
mov
mov
push
(bad)
push
push
mov
shl
or
sub
pop
xor
sub
or
jl
inc
daa
int3
sti
movs
inc
inc
adc
adc
lods
fisttp
int
mov
loope
ja
pop
push
repnz
pusha
scas
push
cdq
stos
inc
pop
sub
out
out
sub
fwait
in
cmps
add
jb
dec
inc
sub
dec
xchg
push
push
jle
jge
sub
fcmovne
jg
data16
or
out
jo
inc
add
or
nop
lahf
retf
lods
fbstp
aaa
pushf
jmp
pop
dec
jo
jg
push
sub
inc
jl
adc
(bad)
std
push
inc
fcmovnu
pop
adc
sub
cdq
pop
lods
pop
ret
ja
(bad)
adc
inc
(bad)
mov
mov
and
std
repnz
nop
inc
add
add
cmps
test
mov
aad
mov
fisubr
pop
xlat
lock
mov
lods
mov
mov
inc
mov
adc
pushf
dec
sub
dec
add
jmp
test
arpl
loope
cmp
adc
std
call
push
add
jmp
sub
mov
dec
xor
icebp
cld
aas
out
xchg
pop
pop
xlat
mov
cld
aaa
dec
gs
jmp
popa
add
retf
push
fwait
sbb
push
xor
xor
jmp
gs
adc
in
adc
stos
mul
lea
imul
and
xor
pop
mov
scas
cmp
xor
(bad)
fbstp
or
test
xchg
xor
push
inc
push
inc
in
lea
inc
xor
test
jnp
maskmovq
test
imul
enter
xchg
xchg
inc
stos
stos
mov
push
ss
push
jbe
mov
enter
jecxz
xchg
jmp
scas
in
daa
adc
fdiv
ret
ds
add
xchg
call
leave
js
fmul
fcomp
fild
dec
xchg
pop
cmp
xor
push
and
push
cld
sbb
cld
adc
stos
and
in
mov
and
in
jmp
add
mov
aam
call
push
fmul
adc
mov
cmp
(bad)
fcom
adc
xor
xor
aam
and
loope
cmp
or
cmps
inc
mov
loope
fistp
jns
sub
lea
push
sub
rcr
dec
(bad)
mov
repz
pusha
cdq
nop
jnp
adc
xchg
sbb
mov
fprem
fwait
adc
mov
pop
inc
pop
pusha
mov
add
(bad)
fiadd
cmp
xchg
sub
sahf
daa
arpl
movs
pop
ins
xchg
inc
pushf
cmp
mov
cwde
sub
xchg
mov
popf
jg
push
fist
jae
mov
inc
pusha
lahf
inc
ror
dec
inc
fsub
jns
daa
cmp
sub
jl
std
rol
and
inc
mov
mov
and
cs
enter
cld
sbb
xchg
sub
add
in
pop
push
sbb
add
(bad)
dec
adc
test
jae
adc
adc
pop
out
in
or
cmc
ds
sub
lahf
movs
dec
inc
jl
cmp
push
in
nop
push
and
fisttp
popa
loope
sub
push
(bad)
retf
fcomp
push
mov
mov
jecxz
mov
xor
inc
add
mov
sub
ins
pop
cdq
sbb
test
inc
das
push
call
pop
(bad)
pop
xchg
jb
pop
(bad)
in
(bad)
push
pusha
or
sub
sbb
xor
pop
jp
mov
aas
or
cld
lock
push
fsubp
jnp
mov
push
xor
loop
in
(bad)
sbb
outs
sbb
mov
xlat
stos
xchg
dec
shl
into
pop
adc
xchg
dec
xchg
cmp
mov
jp
cmp
mov
push
dec
out
push
xor
jmp
jns
add
ror
add
icebp
enter
les
mov
xor
adc
popf
imul
pop
cmp
rcr
inc
add
test
xchg
mov
loope
or
xchg
and
pop
mov
dec
xor
cs
mov
jns
jne
and
mov
xor
outs
mov
out
or
push
inc
in
push
sub
xor
test
cmp
jns
push
shr
xchg
jae
popa
adc
and
pop
dec
mov
cld
(bad)
mov
pusha
in
pop
mov
xchg
and
shl
sub
imul
xchg
push
sub
or
xor
div
mov
mov
mov
js
push
jmp
cmp
je
stc
jmp
lods
fcmove
sub
xchg
add
pop
cmp
mov
jns
or
and
push
test
cld
xor
loopne
fnstenv
fsubr
inc
js
jl
(bad)
cs
and
and
aam
rcl
and
adc
sub
cmp
inc
(bad)
or
in
mov
jns
out
and
or
sub
jge
retf
rep
jne
outs
mov
in
mov
addr16
push
icebp
pop
mov
xor
push
and
rcr
xchg
addr16
inc
xor
mov
or
ret
scas
(bad)
sub
clc
mov
pop
test
dec
shl
mov
ror
jne
imul
rol
retf
xchg
lea
inc
xor
xor
ins
mov
fs
push
in
push
aam
arpl
inc
fwait
or
inc
dec
(bad)
sub
mov
push
cld
inc
loopne
and
cmps
sahf
and
sbb
das
cmp
add
daa
(bad)
jmp
mov
enter
outs
cld
div
enter
mov
neg
or
pop
dec
in
ss
test
cmp
xor
add
test
stos
ss
mov
int
loopne
xchg
fimul
mov
mov
cli
es
xor
mov
mov
aas
inc
xchg
ret
int
mov
icebp
and
mov
jne
mov
out
jnp
call
stc
(bad)
cmc
xchg
mov
test
mov
mov
and
dec
mov
fs
loope
cmp
(bad)
rcr
inc
and
xor
retf
cdq
jae
enter
adc
ins
add
bound
xchg
cwde
fwait
xchg
rol
add
inc
fsubrp
pop
mov
js
sub
(bad)
int
pop
cld
ins
dec
hlt
pop
push
dec
pusha
jmp
sbb
push
stos
(bad)
mov
ftst
jg
(bad)
in
clc
adc
mov
xchg
dec
out
lock
aam
sahf
push
or
fsubr
sbb
xor
retf
fcom
dec
ficom
daa
mov
lods
mov
push
mov
in
scas
jl
ins
stos
lahf
cmc
sbb
lods
call
scas
add
sub
leave
cmp
push
fwait
cdq
mov
xchg
sbb
cmp
nop
(bad)
jge
xchg
jmp
aad
pop
ins
add
xor
pop
or
enter
fs
sub
repz
sub
push
dec
add
adc
jbe
pop
mov
cmc
sub
mov
or
call
xor
and
nop
or
dec
fcmovnbe
ror
jmp
sub
sbb
cwde
or
test
jle
hlt
gs
push
jnp
stc
sub
mov
enter
lods
cmps
popa
in
fisub
cmps
jecxz
or
or
xor
cwde
repz
or
xor
sar
push
dec
sub
jae
int
inc
cdq
xor
jo
fsubr
in
jb
xchg
xor
sub
add
test
les
add
cli
mul
sti
sub
ins
out
outs
xor
sbb
popf
loope
sub
scas
cld
adc
fwait
cld
nop
jmp
push
add
push
cmp
aad
fimul
mov
sub
xor
mov
idiv
and
xchg
push
xchg
(bad)
jmp
(bad)
test
movs
retf
dec
fimul
hlt
dec
dec
jle
push
adc
xchg
push
adc
mov
js
aaa
jb
test
sti
fldenv
mov
and
push
in
mov
jne
pop
and
jmp
add
mov
mov
test
ins
push
dec
xchg
and
xor
mov
inc
cli
jnp
push
in
enter
ret
in
cmp
aas
scas
loope
stos
test
xor
mov
lods
xor
dec
(bad)
fnsave
xchg
pop
rol
push
mov
or
push
in
mov
popf
xor
fsubr
push
aas
pop
cmp
int3
bound
mov
jp
xchg
repz
aaa
out
out
test
movs
push
shl
js
push
cmps
popa
ins
or
pop
xchg
jmp
mov
hlt
dec
or
pop
xchg
mov
in
or
ins
inc
xchg
adc
int3
retf
ja
sbb
loop
lods
lea
pop
gs
jp
jl
xchg
test
fisub
pop
push
and
in
out
add
pop
in
clc
push
push
xchg
push
mov
and
mov
sub
xchg
mov
jg
jns
dec
(bad)
je
pop
push
adc
stc
lock
je
mov
fisttp
mov
adc
cmps
xchg
sub
pop
shl
xor
adc
add
adc
xor
mov
push
sbb
sub
dec
stos
cwde
mov
lahf
sti
les
mov
sbb
mov
mov
mov
cmps
add
aas
push
sar
ins
add
mov
mov
sub
sbb
(bad)
lds
pop
sbb
sar
add
sbb
jp
retf
std
pop
pop
aam
data16
scas
das
cli
sbb
jb
das
addr16
sub
scas
in
or
js
mov
mov
jle
fist
add
cmps
enter
test
pop
(bad)
imul
sbb
sub
(bad)
int3
imul
add
dec
cmp
jmp
lds
aad
int3
jmp
ret
and
ficomp
xor
lea
icebp
cmps
fst
scas
mov
mov
mov
adc
or
fnstsw
mov
mov
pop
pop
les
fsubr
mov
(bad)
daa
pop
sbb
retf
aad
ja
jle
dec
xchg
inc
sar
leave
cmps
imul
push
push
dec
dec
pop
arpl
adc
pop
pop
mov
fsub
mov
hlt
jae
sub
adc
jo
test
cmp
xchg
adc
jmp
sbb
or
inc
movs
push
mov
rcr
inc
out
pushf
aas
cmps
add
adc
popf
jmp
out
push
mov
pop
or
inc
pop
sbb
push
xchg
xchg
adc
test
lds
sbb
and
add
int3
mov
or
jg
or
xchg
cmp
icebp
ret
(bad)
div
push
nop
inc
xchg
mov
and
dec
dec
out
adc
mov
sbb
jb
jp
dec
ror
push
ins
sbb
or
scas
lods
arpl
ins
dec
push
movs
(bad)
out
and
adc
out
dec
retf
(bad)
ficom
xor
xchg
das
scas
out
pop
(bad)
pusha
adc
shr
jb
mov
pop
adc
dec
mov
arpl
dec
or
rcl
or
push
hlt
push
push
outs
(bad)
and
(bad)
jg
or
dec
fmul
jns
push
mov
mov
xchg
sub
add
in
dec
inc
push
mov
sar
dec
pushf
xchg
xchg
jno
mov
jge
arpl
sub
xlat
mov
or
lods
rcl
retf
(bad)
(bad)
mov
ret
sbb
hlt
(bad)
cld
mov
leave
xchg
fist
add
mov
jns
cmp
daa
arpl
mov
fwait
jno
mov
dec
je
and
outs
dec
lods
and
loop
cmc
sbb
sub
enter
add
cmp
(bad)
loop
fwait
leave
ret
aad
jmp
inc
jmp
clc
xor
xchg
sahf
cdq
sbb
sbb
std
xchg
adc
pop
repz
mov
aam
fimul
pop
sbb
mov
xchg
pop
cmp
scas
sbb
inc
nop
pop
and
jl
cmp
jae
push
movs
aad
call
(bad)
rcl
mov
pop
call
fisub
je
sbb
popf
push
out
jne
dec
mov
in
push
and
pop
retf
push
push
fwait
mov
js
ss
fdiv
mov
aam
out
inc
pop
push
mov
das
sbb
in
out
sub
jg
xor
sub
fisttp
jno
add
mov
out
jecxz
lods
in
neg
mov
mov
dec
vpmulhuw
pop
jle
les
int
in
popf
mov
or
xchg
aaa
and
jmp
mov
into
bound
push
pop
xor
push
out
call
mov
test
xchg
stos
jp
push
scas
adc
fidiv
push
push
cmc
mov
jae
inc
mov
dec
popa
loope
stos
imul
push
repnz
call
shl
or
pop
sti
shl
xchg
pop
jb
push
js
fucompp
pop
fisubr
repz
jo
jge
jecxz
sbb
mov
push
xlat
aas
xchg
push
loope
and
cmp
and
cmc
push
and
sub
(bad)
jl
push
lock
xor
les
cmp
pop
mov
idiv
clc
cmp
inc
push
mov
rol
aam
xor
jmp
lahf
out
dec
cmp
dec
sbb
shr
mov
and
cld
sbb
mov
shr
repz
cmp
push
pop
push
cmp
jae
mov
sub
dec
out
out
add
clc
test
push
data16
xlat
cmps
sahf
inc
sub
mov
jl
jg
jnp
into
(bad)
aam
dec
(bad)
scas
loopne
imul
jo
push
jno
fs
loope
push
repz
outs
inc
jmp
xchg
ffreep
inc
data16
sub
add
dec
sbb
mov
jl
xor
cmp
adc
sub
scas
stc
in
adc
mov
adc
and
scas
xchg
sub
sbb
xchg
mov
jbe
pushf
or
add
ins
int3
imul
ds
ins
mov
test
fisubr
push
xchg
add
(bad)
mov
add
jmp
out
bound
cmp
out
push
inc
mov
jge
retf
adc
into
sub
popf
cmps
lock
lahf
sub
into
ins
push
stos
test
dec
mov
and
fld
push
gs
lods
and
int3
aam
scas
shr
adc
mov
mov
out
ror
sub
imul
lods
cmp
xchg
movs
add
dec
popa
mov
dec
ror
push
out
mov
dec
add
sbb
cmp
not
adc
xor
cmps
push
iret
sar
(bad)
nop
xchg
pop
pop
aaa
sbb
jns
rcl
mov
in
retf
adc
sbb
pop
dec
xchg
xchg
push
fcomp
mov
sub
and
(bad)
sahf
xor
push
or
xchg
add
sbb
sub
add
cs
sbb
rcr
push
std
cmp
pop
mov
retf
lods
pop
xchg
jnp
jb
and
cmp
ss
mov
sbb
mov
cmp
sub
lock
add
sub
jl
dec
rol
adc
in
mov
sbb
(bad)
cli
ficom
dec
ins
xchg
dec
add
es
jmp
dec
movs
lock
mov
adc
pop
push
push
mov
retf
arpl
push
pop
adc
pop
ret
inc
es
or
cmc
xor
loope
call
jnp
loop
lahf
retf
rol
call
inc
neg
mov
ins
and
and
mov
add
mov
xor
inc
in
dec
mov
jmp
ds
imul
lea
fnstsw
dec
pop
(bad)
mov
mov
pop
mov
shl
call
fild
push
fldcw
sbb
test
cwde
push
adc
pop
xor
push
jne
or
jne
ficom
push
fcmovnu
fld
sbb
cmc
jae
fdivr
lods
sbb
cmp
cmp
and
sbb
mov
imul
cmp
test
std
enter
push
jl
mov
ret
push
adc
arpl
test
shl
push
adc
icebp
cmc
repz
mov
pop
(bad)
retf
pop
int3
fucom
adc
adc
lahf
xlat
(bad)
aam
dec
std
adc
daa
mov
mov
or
add
jb
call
pop
inc
rcr
ror
cmps
sbb
and
pop
lds
loop
mov
dec
pop
cld
mov
aad
test
adc
and
pop
movs
push
sbb
icebp
xor
jo
fcmove
xchg
push
push
in
gs
ffreep
adc
xchg
mov
xor
inc
adc
aaa
repz
(bad)
xchg
sub
sbb
test
bound
dec
rol
push
cmp
(bad)
push
mov
cmp
sar
in
call
add
rcl
mov
inc
inc
int3
xchg
inc
shl
fisub
imul
dec
push
and
dec
arpl
neg
(bad)
push
in
pusha
fucomip
leave
out
nop
mov
or
cwde
sbb
cmp
and
push
mov
div
cmps
ds
jo
(bad)
inc
ins
fwait
sbb
sti
adc
lods
cmp
xor
out
pop
out
gs
jl
mov
mov
pop
or
cdq
es
sub
xor
loop
adc
fld
(bad)
xchg
inc
or
xchg
fist
ja
push
push
call
iret
jecxz
test
or
je
and
or
mov
ja
xchg
pop
sub
sub
(bad)
call
mov
hlt
mov
int3
jl
rcl
fld
push
mov
and
leave
out
inc
test
or
push
push
xchg
arpl
push
dec
add
mov
ins
stos
movs
repz
fstp
push
ins
fdivr
out
(bad)
loope
fdecstp
cmp
pop
pushf
(bad)
sbb
dec
imul
aas
pushf
xor
push
enter
lods
jg
nop
mov
cmp
dec
push
sbb
dec
aas
aaa
pusha
mov
jl
aaa
aad
mov
mov
rcr
(bad)
in
stc
push
xchg
sahf
mov
adc
and
mov
lahf
fsubr
(bad)
push
call
mov
js
and
pop
and
mov
mov
pop
lahf
mov
lds
rcr
fisttp
aam
movs
mov
rol
xchg
or
and
(bad)
int3
shl
mov
scas
lods
xor
imul
not
popaw
jno
dec
mov
hlt
int
sar
pop
into
lods
mov
inc
xor
mov
mov
stc
sub
in
mov
lds
dec
mov
pop
jae
dec
into
jmp
test
xor
fisttp
pop
ins
stos
cmps
dec
pop
fdivr
and
(bad)
xchg
jecxz
xchg
iret
cmp
inc
in
inc
bound
jo
sub
call
mov
xor
fcomp
gs
adc
aad
dec
sub
lods
std
arpl
retf
retf
repnz
cdq
push
add
push
loope
loope
mov
(bad)
pop
test
mov
aam
sahf
mov
jle
mov
out
dec
mov
adc
mov
xor
loop
dec
outs
lods
call
jo
ror
add
mov
addr16
(bad)
movs
into
or
shr
shl
inc
jb
inc
cmc
gs
ins
sbb
ja
imul
and
jbe
pushf
lods
mov
add
pop
ja
lds
mov
sub
call
int3
jmp
fcomp
outs
aam
push
adc
mov
addr16
mov
xor
lods
xchg
adc
sub
mov
and
hlt
or
call
out
sub
lods
adc
adc
in
pop
or
jb
pop
cmc
pop
test
test
cmps
and
cmc
mov
add
icebp
add
iret
add
mov
outs
cmp
cmp
stc
xor
add
pop
repnz
sub
and
(bad)
mov
mov
xchg
sub
mov
(bad)
mov
ja
push
sub
stos
fsub
test
mov
jnp
fisttp
pminub
mov
add
adc
cs
imul
pop
mov
inc
inc
mov
inc
fisub
pop
jb
cmp
stos
in
push
int
cld
add
xor
xlat
xor
(bad)
or
dec
dec
outs
add
cs
or
cmc
push
jbe
imul
push
jl
cmps
or
mov
out
ret
pop
push
les
shl
lahf
cmps
aam
aam
test
sbb
pop
mov
xor
in
std
cmp
popa
or
mov
cmc
pop
pop
loopne
ret
sub
or
fidiv
jns
inc
pop
in
jmp
inc
dec
int3
frstor
into
adc
and
push
and
scas
rcr
inc
or
(bad)
hlt
cmp
in
icebp
and
add
stos
cmc
loop
and
adc
push
cmps
xor
movs
fistp
ja
jge
icebp
(bad)
arpl
push
cmp
mov
lea
jmp
bound
lahf
jmp
in
inc
hlt
push
cmc
inc
push
xchg
sub
repnz
add
aas
fdiv
test
and
nop
int3
cmc
xchg
adc
data16
mov
mov
inc
and
addr16
out
shr
outs
rcr
sbb
movs
pop
sub
dec
sar
jle
push
jl
cmp
add
jl
movs
leave
shl
outs
adc
mov
shl
aam
xchg
push
or
dec
arpl
pop
js
pop
mov
inc
pusha
call
call
mov
es
movs
dec
stc
push
mov
and
lea
mov
iret
hlt
call
ins
mov
fcomip
nop
stos
dec
pop
jne
movs
mov
pop
jnp
xchg
test
pushf
push
je
push
or
jbe
cmc
pop
mov
loop
cmp
les
test
(bad)
add
ret
cmp
xor
sbb
loopne
das
gs
mov
loope
cld
popf
sub
adc
xlat
cli
or
adc
icebp
(bad)
dec
stos
lea
inc
xchg
call
stos
test
push
xlat
lock
push
stc
mov
imul
jb
mov
sahf
jno
jbe
cmc
ret
fsubr
dec
and
xchg
dec
and
adc
mov
mov
ret
bound
jle
jmp
iret
arpl
jb
mov
js
xor
arpl
mov
fsubr
and
inc
mov
xor
xchg
repnz
push
test
or
mov
cmps
dec
scas
mov
xchg
mov
fistp
lahf
lods
sbb
in
mov
movs
aam
call
ins
nop
pop
loopne
jne
mov
mov
dec
aam
test
in
xchg
dec
stc
pop
fidiv
iret
xchg
std
mov
fisttp
push
sub
std
mov
xchg
cmp
or
adc
movs
loop
mov
stc
sub
outs
in
mov
ss
movs
retf
sbb
pop
mov
ss
fwait
cmp
mov
add
sti
pop
lds
pop
jecxz
mov
loope
aaa
lea
or
or
clc
(bad)
sti
push
cs
std
or
aas
ds
lods
aam
jb
xchg
or
add
out
(bad)
pop
out
mov
ret
je
cwde
jns
add
loop
iret
out
sub
or
repnz
pop
rcr
pop
(bad)
(bad)
jmp
mov
xchg
pop
and
loope
pop
push
xor
in
daa
pop
or
dec
mov
lahf
mov
neg
call
jl
pushf
(bad)
mov
pop
jns
adc
and
lods
gs
xchg
adc
(bad)
adc
ror
add
cmps
mov
mov
adc
xchg
scas
sbb
xchg
(bad)
cdq
call
cmp
inc
fidiv
loop
fwait
jecxz
iret
data16
icebp
jecxz
aas
iret
ficomp
add
or
loop
(bad)
mov
jge
mov
pop
xor
loopne
mov
and
push
repz
iret
mov
add
mov
push
xchg
dec
add
jo
or
lea
cmc
jnp
mov
outs
aas
cs
sbb
sbb
movs
mov
movs
aaa
fsubr
or
push
cld
dec
aad
pop
outs
jp
lea
cmp
adc
out
dec
outs
xor
inc
push
cld
xchg
jo
aam
popa
mov
inc
add
or
es
and
adc
mov
xlat
sub
(bad)
and
xchg
ror
or
sar
jle
shl
push
cmc
jns
sub
mov
jne
fisttp
pop
rcr
fist
cdq
push
sbb
sub
jl
test
(bad)
jle
cmps
movs
or
add
sbb
mov
mov
and
jecxz
mov
xchg
push
rcl
push
dec
popf
outs
int
cmp
inc
aad
sbb
sub
and
pop
jle
mov
ins
lods
add
gs
or
or
pop
mov
repz
in
pop
lds
pop
pop
ret
or
je
test
lahf
xchg
jb
xor
(bad)
stos
shl
push
cvtpi2ps
in
lahf
adc
call
mov
xchg
jl
out
sbb
mov
push
in
and
fisub
div
bound
add
les
pop
xchg
and
gs
retf
lods
scas
cdq
mov
mov
(bad)
xchg
out
cmp
rcl
adc
fs
xor
xchg
or
inc
inc
or
(bad)
in
sbb
jbe
ins
movs
pop
aaa
push
in
pop
jge
int
test
mov
(bad)
or
in
iret
cld
fdiv
(bad)
dec
enter
push
push
xchg
call
jg
shr
cmp
mov
pop
retf
ret
sub
ret
mov
lahf
or
shl
cmps
pusha
cdq
retf
repnz
loope
sbb
mov
fs
add
jo
out
mov
sbb
das
dec
cld
lods
loopne
stos
lods
lea
xchg
scas
mov
sub
addr16
(bad)
std
repz
and
add
shl
sbb
outs
sti
add
pop
mov
and
in
loope
outs
ins
sub
sub
imul
xlat
or
mov
movs
jle
ins
add
sub
cmp
aaa
lock
push
mov
in
xchg
add
fisttp
arpl
inc
lds
aas
scas
in
pop
pop
fiadd
aad
adc
ror
sar
mov
adc
js
cmp
je
fs
imul
mov
loop
js
add
mov
push
ret
xchg
dec
stos
pop
(bad)
out
loope
xchg
push
jmp
rol
mov
pop
cmp
push
mov
cs
and
adc
jnp
pop
sub
jg
(bad)
lds
xchg
or
and
inc
aad
push
iret
jo
lods
call
enter
mov
gs
int3
cmp
xlat
loopne
call
cmps
shr
stos
add
ins
stos
jno
pop
stos
ss
xor
cmp
dec
push
imul
movzx
leave
dec
loopne
mov
xchg
movs
pop
sub
gs
out
cmp
pusha
mov
inc
mov
test
in
cdq
std
dec
or
(bad)
adc
mov
ret
mov
inc
iret
mov
shr
stos
pusha
scas
repnz
or
shl
pop
cmp
sub
cmp
ret
xor
test
lods
cmp
or
push
outs
mov
cmp
(bad)
pop
cmp
or
jecxz
push
xor
loope
in
gs
imul
pop
jb
dec
xchg
jae
jg
xchg
jecxz
cmp
scas
inc
vdivpd
and
and
mov
pushf
cmp
xor
push
(bad)
fisttp
pop
test
xchg
outs
call
mov
ds
inc
mov
ss
cmp
dec
push
int
jl
int
sub
adc
xchg
iret
fistp
xor
sbb
mov
test
addr16
jmp
mov
aas
in
cmp
lods
fnstcw
cli
(bad)
jo
fcom
dec
jbe
repz
js
push
inc
and
cwde
(bad)
pop
cmp
repnz
add
jge
jmp
stos
dec
push
in
shrd
retf
pop
pop
outs
jmp
aaa
sub
jno
aaa
(bad)
test
jle
xor
jno
mov
and
jne
out
popf
repz
sar
gs
push
sub
sbb
cmp
ret
adc
push
in
xlat
test
std
int
cli
popa
pop
rcr
repz
(bad)
addr16
aad
mov
int
movs
mov
fisubr
enter
mov
movs
(bad)
out
fadd
out
stc
es
stos
jp
mov
fs
mov
sub
jns
adc
cmp
or
and
stc
mov
pop
mov
xor
mov
fistp
stos
gs
rcr
sbb
fisubr
mov
shl
adc
mov
out
aam
mov
sub
pop
aas
jb
popa
je
xchg
cmps
(bad)
stos
xchg
adc
sub
xchg
jle
pop
mov
call
enter
sbb
ja
pop
scas
retf
xchg
movs
xchg
adc
push
sbb
pop
sub
push
push
xor
xchg
bound
mov
mov
xor
jmp
mov
or
mov
dec
fldcw
movs
pmaxub
and
push
aaa
aam
fwait
mov
cmc
ins
mov
jg
ret
daa
sbb
push
cli
fucomp
inc
and
add
mov
mov
adc
jne
xlat
aad
test
daa
test
sbb
adc
popa
adc
mov
mov
sbb
jg
retf
adc
xor
sbb
sbb
in
jl
aad
rol
test
retf
stos
jg
lds
sahf
repnz
pop
jmp
pop
jmp
and
sbb
and
leave
or
clc
arpl
mov
jns
dec
rcl
dec
add
and
inc
push
sub
cmp
imul
xchg
lods
add
out
stos
inc
xchg
push
fcomp
addr16
out
sbb
push
test
fistp
xchg
pushf
es
cmp
das
inc
dec
add
scas
mov
xchg
mov
imul
js
xor
push
data16
lods
pop
in
pop
gs
push
test
mov
or
aad
mov
jne
xchg
bound
ret
imul
cmp
pop
sbb
pop
fst
rol
jnp
dec
cwde
pop
mov
jmp
xlat
add
dec
sub
ss
xor
jne
jnp
sub
dec
mov
push
popf
test
mov
xor
pop
mov
lods
mov
and
sahf
mov
push
enter
jmp
es
sub
inc
rcl
push
xor
or
mov
sub
or
std
push
push
jmp
stos
repz
pop
add
daa
cld
lods
shl
sub
ret
scas
sub
pop
cmp
das
sub
pop
sti
mov
fisttp
xor
xor
xor
jp
sbb
call
add
in
push
movs
fild
ja
pop
add
cmp
std
xor
ins
jo
push
rol
adc
retf
sub
rol
jmp
sub
xor
cmp
pop
jae
pop
sub
adc
(bad)
addr16
ret
daa
in
xor
sub
push
push
sbb
adc
cmp
lods
popf
mov
push
out
imul
push
mov
inc
pushf
mov
inc
mov
pusha
xor
push
inc
push
pop
mov
jns
cmp
outs
jl
sbb
rcl
mov
or
sub
sbb
ins
lea
int
pop
lds
(bad)
repnz
fcomi
sub
adc
iret
jle
lea
and
adc
lahf
push
dec
das
ror
jae
test
aaa
add
repz
sbb
inc
pop
ret
inc
inc
cld
fmul
mov
fdiv
jge
dec
sbb
sub
sub
inc
adc
pop
pop
push
bound
rol
(bad)
push
and
dec
cmp
jb
xchg
sbb
cdq
(bad)
push
loop
mov
mov
add
sbb
push
mov
adc
cs
xchg
cmc
les
test
imul
retf
jl
data16
mov
sbb
lahf
mov
push
test
jge
loop
mov
xor
sub
into
jmp
and
xchg
sub
jl
xchg
xchg
inc
movs
std
cmps
pop
call
push
dec
xchg
test
rcl
jl
sub
inc
cmp
cmp
xchg
retf
sbb
fstp
or
pop
out
push
sub
mov
enter
pop
xchg
push
dec
xor
mov
aad
pop
je
addr16
mov
xchg
inc
fcom
imul
rcl
out
add
add
(bad)
xchg
hlt
ins
jbe
xchg
pop
mov
push
arpl
push
xor
xchg
ins
xchg
popa
pop
dec
sbb
test
call
out
cli
pop
js
and
and
hlt
mov
addr16
outs
aam
std
adc
ss
clc
adc
cmp
push
imul
and
jno
jb
xor
loopne
popf
mov
(bad)
dec
inc
jg
pop
imul
xchg
scas
fcomp
fsub
xor
sub
jae
push
dec
adc
cli
test
sbb
pop
out
jo
jle
lahf
jnp
xchg
clc
mov
jnp
sbb
xor
es
pop
cli
mov
sbb
push
xor
ss
push
xor
popa
pusha
test
jb
inc
sub
sahf
push
dec
retf
pop
jno
xchg
ret
jmp
shl
jnp
jp
xchg
jns
out
or
push
cld
data16
push
test
xchg
shr
outs
iret
pop
push
pop
je
jae
je
dec
retf
out
aaa
dec
out
pop
stc
mov
mov
adc
sti
gs
jmp
das
or
mov
sbb
std
xchg
xchg
jbe
mov
jbe
mov
add
cmc
aaa
loop
xchg
shr
nop
push
je
push
and
mov
pop
fsub
dec
scas
jnp
cmp
in
cmp
(bad)
mov
cmp
inc
dec
shl
call
pop
imul
lods
sbb
inc
mov
lea
sbb
test
sub
sbb
inc
je
lods
adc
fld
sbb
stos
pop
push
or
jne
dec
xchg
out
push
push
lahf
aad
pusha
loopne
js
cmp
xchg
mov
inc
add
bnd
sti
cmp
xchg
xlat
out
stos
loop
fwait
lods
cmp
fild
adc
jns
push
test
cmp
movs
jo
(bad)
jne
mov
mov
rcl
pop
loopne
push
dec
push
xlat
in
mov
mov
dec
adc
and
adc
(bad)
adc
in
mov
cmps
(bad)
shl
retf
test
repz
fild
cmps
stos
outs
pop
or
lods
sbb
repnz
rcr
stc
xchg
cmp
(bad)
loopne
dec
inc
adc
xchg
and
out
and
sti
mov
jp
mov
test
in
pop
mov
ins
cmps
or
mov
aas
mov
jp
sbb
or
mov
dec
add
and
pop
test
jmp
jo
test
in
inc
mov
jle
das
mul
push
fcomp
xchg
out
shl
add
inc
mov
xchg
jno
scas
ds
mov
and
(bad)
adc
pop
mov
push
xchg
adc
ins
lock
pop
neg
cmp
sar
shl
mov
out
rcr
aaa
outs
push
and
fcomp
fldenv
das
mov
aam
pop
test
mov
popf
push
outs
jb
cld
xchg
(bad)
stc
push
mov
sbb
dec
sbb
jnp
and
ds
sbb
dec
aaa
aam
mov
loope
ret
int
or
push
add
clc
mov
and
loope
cmp
int3
fcmovb
and
aas
push
adc
or
cdq
mov
inc
jge
jmp
test
or
sub
fsubr
add
popa
out
mov
fstp
dec
loop
mov
inc
aaa
or
push
xor
lea
and
sbb
das
popf
jg
nop
pop
or
sub
inc
out
sbb
jle
in
scas
je
lock
sub
es
push
call
adc
mov
rol
scas
shr
jg
int
int
pop
arpl
out
mov
fnsave
adc
jp
lock
sub
and
fadd
xor
fcom
mov
jo
xchg
mov
cld
dec
or
mov
mov
stc
dec
ficom
movs
push
pop
dec
fstp
jne
leave
inc
int3
fist
test
sbb
sub
xchg
mov
mov
psllq
test
mov
in
inc
imul
jmp
in
dec
iret
lea
cmp
rcl
inc
xlat
push
xor
dec
and
call
mov
xchg
sub
inc
push
cmps
nop
adc
(bad)
out
mov
and
xor
and
sbb
fcom
iret
inc
inc
ins
scas
and
xchg
pop
mov
jae
xor
pop
mov
mov
xchg
jno
jno
sar
es
loopne
sbb
repz
mov
lock
push
psraw
or
fdivrp
or
sahf
push
lahf
adc
gs
mov
addr16
test
sbb
jl
and
mov
rcr
jle
sbb
push
in
jmp
adc
dec
sti
dec
sub
xchg
jmp
ss
mov
mov
mov
sbb
push
inc
ror
dec
xchg
pop
push
enter
and
mov
mov
repz
jnp
nop
mov
xor
dec
les
cmp
xor
cmp
add
inc
les
dec
sbb
or
test
fiadd
jnp
pop
idiv
and
dec
add
mov
pop
(bad)
sub
push
adc
arpl
lds
pop
nop
imul
ins
sti
into
test
xor
pusha
aaa
push
or
inc
leave
xchg
lea
aas
pop
scas
(bad)
loop
xlat
imul
xor
push
addr16
sub
into
jmp
sahf
out
(bad)
jmp
inc
xchg
sbb
ficomp
sbb
inc
jle
cmp
movs
or
sbb
mov
push
pop
out
sahf
(bad)
mov
out
xlat
mov
es
inc
pop
cmp
inc
mov
xor
push
mov
pop
mov
push
add
ins
mov
inc
movs
hlt
ret
push
or
dec
pop
out
in
call
xchg
dec
lods
fldenv
pop
pop
sub
stos
es
(bad)
call
fdivr
inc
adc
xchg
pop
cmp
test
movs
fidiv
pop
mov
jbe
repz
aam
jns
pop
sahf
sub
mov
mov
icebp
dec
retf
add
sbb
in
adc
js
add
jb
imul
add
(bad)
retf
imul
push
jecxz
adc
jns
xor
mov
push
lea
pop
sti
fadd
sbb
jae
ds
aad
xor
shl
mov
xlat
pop
push
fwait
pop
mov
aam
sysret
cwde
sub
xor
retf
das
jl
push
add
test
jno
xor
or
mov
sbb
call
or
imul
lods
outs
jl
sbb
addr16
les
sub
stos
test
add
or
mov
repnz
xchg
push
(bad)
jecxz
stos
and
xor
sub
test
push
push
xchg
js
sbb
pop
cmp
shl
pop
faddp
mov
test
add
adc
lods
dec
cmp
cwde
xor
push
ss
sahf
int3
ret
push
arpl
leave
retf
dec
inc
bnd
pop
push
inc
out
xor
rcl
stos
mov
out
mov
cmp
lahf
into
sub
retf
outs
rcl
dec
repnz
pop
push
iret
adc
ins
cmp
sub
fwait
push
ss
movs
fxch
(bad)
xchg
out
ror
rcl
jns
cmp
aad
push
ret
popa
pushf
cmp
ficom
or
std
clc
lock
xor
inc
or
ja
jle
movs
loope
fdivr
mov
or
imul
sti
pop
push
nop
test
dec
cs
cs
xor
in
mov
mov
test
push
ficomp
movs
sbb
mov
inc
sbb
inc
fs
or
iret
dec
xor
out
test
mov
fwait
pop
lahf
js
mov
sbb
call
sbb
cmp
jl
lahf
fnsave
cmps
dec
and
cli
cmp
add
sbb
ret
xchg
fwait
cmps
fnstcw
adc
inc
cwde
(bad)
sbb
mov
or
imul
test
test
sub
stos
xor
movs
mov
jae
push
das
mov
loope
out
in
punpckhwd
pop
lods
mov
jge
pop
std
pusha
sbb
fild
fs
repz
adc
push
(bad)
mov
cmps
xor
aad
fmul
jo
pop
jo
call
mov
fmul
rcr
xor
pop
xor
mov
or
bound
daa
dec
out
retf
xchg
out
push
and
dec
dec
stos
mov
jmp
or
retf
sar
data16
mov
jge
jmp
push
inc
cmp
inc
in
pop
hlt
xor
jle
mov
sub
(bad)
lock
dec
xlat
fbld
pop
jmp
(bad)
retf
fstp
or
inc
popa
mul
pop
std
xor
das
fsub
mov
xor
das
(bad)
in
mov
xor
fsubr
adc
test
pop
xor
in
lahf
loope
push
jbe
call
jg
adc
xor
ds
add
xchg
push
aas
xchg
je
or
xchg
test
call
cdq
inc
lds
inc
sahf
(bad)
enter
cmps
sub
cmp
shr
add
lock
xchg
mov
ja
jne
mov
add
mov
retf
cmp
mov
dec
inc
das
add
mov
repnz
and
xchg
xor
call
pushf
loope
ss
xchg
jl
cmc
push
or
rcr
push
adc
ret
imul
pop
mov
xchg
inc
jmp
xchg
or
das
push
and
push
fldenv
add
push
dec
mov
mov
jl
push
sbb
cs
lods
sbb
mov
sub
mov
ror
mov
mov
and
test
ret
pop
and
pusha
jb
and
sbb
loop
scas
pusha
das
sbb
js
and
(bad)
pop
cmp
test
mov
fild
adc
repnz
sahf
in
aad
push
out
std
data16
out
jle
pusha
dec
outs
push
cmps
pushf
or
mov
scas
cmps
pop
xor
lds
adc
xchg
xor
gs
in
xor
stos
xchg
enter
mov
or
cmp
and
mov
xor
add
stos
mov
lock
imul
xor
(bad)
les
in
dec
adc
fwait
inc
call
cld
fld
out
adc
sbb
addr16
sbb
jo
pop
mov
test
sbb
jnp
clc
(bad)
fiadd
jmp
mov
sub
cwde
ja
sbb
and
jne
loope
cmp
jbe
inc
push
call
daa
adc
pop
repnz
adc
push
mov
sub
adc
adc
arpl
adc
pop
sub
add
dec
stos
mov
mov
xchg
retf
sub
and
sub
pop
push
movs
dec
sub
inc
push
push
and
jnp
cli
shr
cwde
(bad)
rol
popf
cmps
sub
arpl
ret
and
xchg
jae
in
lock
scas
push
jg
xchg
lods
xchg
push
cdq
mov
lods
movs
out
cmps
xor
(bad)
mov
push
(bad)
shl
out
movs
or
pop
sub
les
hlt
sub
sbb
xchg
fsub
hlt
fistp
imul
cmps
fmulp
jmp
push
mov
aad
jbe
dec
fisub
lock
adc
mov
push
cli
inc
ds
addr16
cmp
mov
xor
ficom
cmp
daa
mov
pusha
hlt
add
push
cmp
pop
test
dec
and
mov
sub
leave
sub
sar
inc
cmp
mov
sti
inc
or
or
cdq
test
call
xor
inc
int3
je
fmul
test
mov
xchg
daa
loopne
js
adc
add
or
push
jae
mov
pop
xchg
mov
sbb
mov
mov
xchg
xchg
sti
xchg
mov
gs
push
inc
mov
sub
or
jnp
call
dec
cmp
pop
cwde
fnstsw
les
sub
or
pop
mov
jecxz
sbb
mov
mov
mov
sub
dec
xor
jae
inc
rcr
jne
mov
out
shr
call
(bad)
sahf
cmp
inc
jnp
les
scas
fsubr
pop
mov
sbb
xchg
pop
(bad)
lods
xlat
lahf
add
aaa
fsubr
inc
mov
pop
les
test
cdq
push
ins
jmp
dec
inc
push
repnz
mov
jnp
push
rcr
inc
push
shl
push
out
and
add
shl
leave
or
jb
dec
sub
rep
inc
cmp
lods
xchg
mov
pop
jbe
and
out
fld
adc
ret
jg
jo
lods
not
jl
repz
pop
add
pop
xchg
je
fadd
es
ror
mov
retf
dec
sub
mov
aas
push
aad
inc
retf
retf
jg
call
cmc
cdq
push
sahf
cmp
mov
mov
and
fwait
sar
mov
push
jmp
sbb
adc
or
bound
mov
jecxz
xor
popf
inc
jmp
push
retf
popf
out
pop
sbb
es
cmp
or
nop
fmul
mov
jns
addr16
add
aaa
dec
data16
inc
adc
sbb
push
daa
xchg
cmp
imul
mov
mov
in
cmps
pop
xchg
std
or
inc
(bad)
sub
add
push
push
test
and
add
push
mov
pop
repz
sub
pusha
mov
jecxz
mov
sbb
cdq
jne
add
cmp
dec
add
dec
ins
add
inc
inc
call
(bad)
xor
mov
xor
(bad)
cmps
cmp
mov
push
dec
ja
retf
add
test
cld
jbe
es
and
mov
mov
popf
and
rcr
mov
pop
cmc
jp
xor
out
xor
jb
sub
call
cmp
mov
and
out
cwde
xchg
jp
(bad)
in
mov
xchg
mov
cmp
mov
outs
inc
lods
dec
pop
xchg
mov
or
ja
cmp
sbb
jge
out
and
je
mov
xchg
add
mov
iret
lods
cmp
(bad)
frstor
adc
jne
inc
mov
out
jg
dec
push
cwde
jo
push
xchg
sub
retf
jge
(bad)
mov
jp
mov
mov
inc
and
mov
pop
push
mov
pop
imul
push
out
nop
xchg
rcl
and
jecxz
call
hlt
adc
lea
sbb
add
(bad)
aas
or
jge
movs
dec
xchg
fld
iret
ds
aam
movs
jns
call
sub
push
jbe
mov
xchg
cmp
mov
fldenv
adc
push
jecxz
mov
and
fistp
ds
test
add
das
dec
test
pop
leave
jl
dec
mov
fild
popa
mov
(bad)
mov
stc
or
lock
dec
dec
dec
xchg
jl
pop
or
sub
xchg
lea
imul
into
or
inc
and
sar
pop
and
int
lods
xchg
dec
ins
jae
gs
not
inc
data16
mov
jg
push
retf
xchg
dec
sbb
lahf
lahf
in
ss
mov
adc
movs
aas
and
or
push
andnps
push
push
idiv
fsubrp
pusha
out
movaps
in
(bad)
ds
jmp
xchg
dec
(bad)
rcl
scas
jno
pop
shr
pop
push
mov
push
sub
inc
xor
dec
stc
mov
sti
(bad)
cmps
push
outs
ins
mov
mov
adc
push
or
cld
pop
addr16
dec
jne
jg
mov
adc
and
jns
out
sti
cmp
das
sbb
out
popa
in
adc
sti
or
mov
inc
dec
pop
or
cmp
jmp
inc
inc
push
fwait
push
dec
fild
inc
je
shl
lods
rcr
and
arpl
sbb
std
xchg
(bad)
jp
iret
in
inc
enter
imul
push
ret
sbb
cwde
jns
push
in
sub
ins
pop
pop
aas
or
mov
jge
or
jg
jge
cmp
xchg
dec
mov
xor
jmp
mov
sub
add
(bad)
xor
dec
ret
inc
cmp
cmp
xchg
mov
das
push
mov
inc
cs
(bad)
shl
push
lods
cmp
mov
sbb
lea
dec
jmp
pop
jl
fsubr
adc
pusha
(bad)
les
or
sbb
or
std
(bad)
jnp
pop
and
mov
retf
add
std
push
xor
mov
and
popa
jecxz
push
xchg
lods
ret
dec
sbb
xor
daa
shl
(bad)
mov
adc
fcmove
inc
cmps
imul
jmp
jg
mov
fwait
jbe
das
xlat
dec
ins
add
sbb
ins
lods
sub
cdq
outs
fidivr
aas
mov
addr16
in
push
repz
call
sub
ret
jp
les
test
lock
push
outs
aam
sub
jmp
inc
mov
fnstenv
sahf
scas
jmp
cld
jle
mul
sbb
or
jl
into
movs
popa
inc
adc
sub
sbb
retf
inc
and
int
mov
icebp
mov
sub
dec
mov
jne
das
pop
iret
pushf
push
xchg
xchg
mov
leave
aam
or
mov
add
cs
std
dec
inc
mov
or
pop
xchg
mov
sbb
inc
push
pop
je
ror
inc
bound
pusha
sub
xor
mov
sub
div
aas
and
cmp
xor
dec
cwde
push
hlt
addr16
mov
out
gs
test
test
push
stc
or
lahf
push
cmps
adc
mov
mov
enter
out
cmp
add
pop
pop
push
mov
push
shl
xlat
ja
sub
and
(bad)
(bad)
pushf
push
cmp
out
int
push
xchg
in
pop
fcmovu
jg
fucom
test
(bad)
xor
call
inc
fs
cmp
ror
adc
xchg
cli
cmp
inc
mov
loop
add
add
ins
adc
(bad)
push
std
cmps
in
inc
jecxz
addr16
mov
mov
loope
ss
sbb
movs
sbb
hlt
jbe
push
xor
in
push
mov
aad
mov
sbb
repz
cdq
cli
mov
add
aad
(bad)
jmp
popf
dec
icebp
jno
dec
sub
dec
push
pusha
mul
inc
inc
fcom
sbb
shr
icebp
(bad)
pop
outs
imul
xor
pop
movs
sbb
jmp
mov
jno
cmp
ror
xor
mov
je
retf
inc
in
cmp
jecxz
(bad)
pop
icebp
pop
test
loope
adc
add
mov
mov
xchg
mov
test
pop
enter
pop
pop
adc
sub
or
out
mov
xor
cwde
mov
daa
push
gs
fcmovnbe
in
cdq
jbe
jecxz
ficomp
push
dec
or
xor
pop
sub
cs
pop
or
cs
lahf
jle
xchg
repnz
inc
cmp
mov
jb
xor
and
test
push
sbb
into
retf
je
fnstenv
or
popa
(bad)
loope
fs
das
mov
out
mov
jge
jno
std
hlt
mov
dec
fldcw
fadd
clc
cmp
inc
es
ret
lds
(bad)
cli
je
stc
push
sbb
push
mov
test
imul
(bad)
int3
mov
xor
lock
sahf
rol
aad
dec
aad
data16
mov
mov
inc
inc
add
cmc
add
or
rcr
add
xchg
fdivr
je
jne
(bad)
stc
sub
adc
aaa
je
or
cdq
arpl
xchg
cmps
xchg
arpl
pop
dec
xchg
inc
jmp
adc
cmps
adc
xor
stos
ret
int
sbb
je
sub
stos
shr
mov
call
jns
dec
xchg
in
xor
popa
sub
enter
and
mov
rcr
call
pop
ror
cmp
push
push
in
sub
mov
xor
mov
xor
pop
jo
xchg
cwde
dec
fild
dec
test
jmp
push
mov
mov
fwait
daa
clc
lock
retf
push
push
test
js
pop
sbb
dec
add
push
dec
add
push
jnp
fild
mov
or
(bad)
(bad)
stos
jp
or
test
mov
sahf
push
jge
cs
or
jle
iret
lea
scas
adc
inc
sbb
pop
xchg
lahf
dec
and
dec
cmp
int
inc
ror
pushf
sti
xchg
ret
js
push
mov
sahf
ret
out
mov
inc
enter
adc
mov
std
cld
xchg
inc
bound
test
(bad)
adc
int3
inc
push
xlat
xchg
js
xchg
stos
mov
add
jnp
push
cmps
sub
ss
mov
and
or
test
call
(bad)
rcr
jnp
call
jae
fchs
daa
ss
movs
or
mov
pop
and
dec
and
test
sub
es
or
sbb
imul
push
ss
xchg
push
mov
outs
pop
not
loope
lock
add
mov
sbb
mov
jne
call
std
xchg
fstp
push
fcmovbe
pop
xor
xabort
movs
pop
fsubr
xchg
and
mov
out
popa
aas
rol
es
in
inc
in
fmul
ss
pushf
repz
push
mov
dec
cmps
cld
clc
xor
xor
inc
add
pop
and
shr
sbb
dec
inc
stos
xor
outs
(bad)
retf
xchg
fcomp
sub
pop
push
lea
mov
clc
fdiv
pop
(bad)
in
pusha
cwde
nop
cwde
sub
add
test
out
push
rcl
jmp
mov
mov
fsubr
inc
adc
mov
mov
daa
add
outs
mov
xlat
fcomp
push
push
movs
hlt
hlt
push
fs
out
or
or
fs
pop
mov
xor
mov
push
dec
sbb
out
in
jecxz
sbb
ds
add
repz
ds
cmps
push
dec
int3
(bad)
das
fst
(bad)
stos
lds
sbb
dec
nop
in
(bad)
iret
enter
test
jb
aaa
pusha
arpl
add
push
jl
outs
je
jecxz
mov
cmp
retf
pusha
adc
fbld
mov
sub
cmp
retf
pop
pop
and
cmp
repnz
lock
movs
rcr
lea
or
add
(bad)
scas
ret
cmp
test
mov
(bad)
mov
enter
rcr
push
push
and
xchg
dec
movs
sbb
scas
push
pop
push
xchg
push
jecxz
(bad)
fbstp
repz
jae
push
dec
or
xor
int3
mov
sbb
out
adc
out
test
or
out
fidiv
(bad)
jmp
ins
push
mov
jb
sbb
loop
inc
jb
dec
sbb
ror
jg
fstp
fcomi
int
jb
push
push
xchg
retf
jg
in
ins
std
cmps
fdivrp
out
cmps
(bad)
data16
ds
jb
out
rcl
xchg
mov
xor
add
hlt
dec
push
cli
adc
ins
jb
test
std
jmp
daa
adc
mov
aas
aas
dec
movs
cmp
cld
cmp
mov
lods
add
jne
cmp
pop
(bad)
movs
mov
daa
arpl
cmp
push
adc
push
cmp
cli
ds
retf
sbb
mov
sub
pop
syscall
(bad)
adc
xchg
movs
loope
cmps
(bad)
dec
mov
out
(bad)
xchg
(bad)
adc
xchg
mov
sub
js
xor
mov
xchg
push
mov
push
cmp
ja
mov
daa
gs
in
mov
inc
xor
adc
xchg
mov
and
and
sbb
xchg
arpl
(bad)
adc
or
mov
addr16
jecxz
aas
icebp
mov
and
inc
push
push
and
(bad)
mov
inc
icebp
push
inc
push
sbb
and
popa
and
xchg
jne
cmp
je
push
enter
mov
xlat
and
pop
push
test
shl
fwait
add
xor
call
push
imul
sar
cmp
fcmove
out
pop
push
sbb
imul
cmp
sbb
jbe
es
loopne
push
jp
mov
jmp
and
mov
imul
fldenv
outs
xchg
jmp
xor
mov
(bad)
mov
pop
lods
push
and
mov
stc
push
xor
jno
int3
out
cmps
retf
outs
add
setae
pushf
cmps
and
sbb
and
add
mov
cmc
out
(bad)
xlat
loop
xchg
mov
push
pop
xor
fnstenv
test
push
adc
sub
pop
mov
jle
nop
sub
pop
jmp
movs
xchg
icebp
mov
cmp
jns
pop
test
push
sub
clc
dec
adc
aas
push
je
pop
adc
cmp
lds
shl
inc
mov
mov
xor
jg
ret
ja
aad
cld
push
das
cs
je
shl
xchg
cmps
scas
jecxz
je
dec
and
sub
xchg
mov
fwait
jg
sbb
pop
shr
lods
adc
fstp
cs
das
add
loope
or
xor
popa
xchg
mov
xchg
cmps
push
pop
jo
rol
repnz
xchg
xchg
xlat
pop
fwait
mov
add
in
mov
pop
leavew
push
mov
retw
in
inc
mov
cmp
lahf
in
mov
jg
sbb
ret
xor
mov
sub
ja
push
cmp
mov
test
mov
cmp
mov
mov
push
adc
arpl
push
add
add
scas
mov
sub
sub
cmc
pop
call
jne
les
inc
or
aaa
lods
mov
out
or
ret
int3
xchg
imul
(bad)
into
fiadd
loop
add
pop
mov
adc
cli
inc
inc
mov
add
mov
add
mov
retf
xchg
das
inc
retf
sub
sahf
push
ret
add
js
and
cmp
jb
cli
ins
out
(bad)
icebp
(bad)
sbb
fld
int3
mov
fild
repz
cmp
sti
dec
sbb
std
iret
xor
out
imul
inc
outs
inc
pop
sub
jns
xchg
push
sbb
mov
push
sti
inc
ja
mov
mov
imul
and
mov
into
dec
xlat
and
daa
stc
sub
fbld
mov
out
mov
mov
cmps
push
push
out
ds
out
retf
retf
retf
cmp
fisttp
shl
lock
repnz
popa
pop
ins
jecxz
sub
mov
ja
push
mov
sbb
add
cmp
dec
pop
ins
loope
lock
stos
sbb
cmc
out
fbld
out
push
imul
ret
sar
movs
pop
ret
fnstsw
jne
pop
mov
retf
repnz
pop
jo
add
addr16
aaa
push
scas
data16
xchg
daa
xor
or
iret
adc
mov
adc
test
add
or
das
mov
cdq
xchg
mov
pop
js
lahf
jnp
outs
xor
xchg
mov
cmp
popf
sub
pop
call
pushf
jnp
pop
adc
mov
int3
cmps
das
cmps
gs
and
int
mov
xchg
aad
in
mov
sti
jae
mov
push
arpl
xchg
mov
data16
mov
xor
mov
fld
cmc
(bad)
rol
int3
sbb
(bad)
fcomp
xor
ins
imul
pop
cmp
pop
fiadd
lock
xchg
int3
shl
mov
pop
mov
ins
and
test
mov
dec
stos
test
repnz
or
sahf
sbb
in
imul
enter
je
fdiv
mov
xchg
div
mov
test
icebp
push
mov
test
(bad)
scas
scas
sub
add
and
dec
and
sbb
dec
inc
sbb
div
daa
jno
mov
xor
sbb
pop
mov
xor
dec
sbb
(bad)
mov
push
in
inc
leave
add
pop
or
loope
test
dec
xchg
outs
js
pop
sbb
push
sub
add
xlat
mov
int
inc
inc
xchg
jmp
addr16
(bad)
out
pop
and
leave
add
inc
mov
loope
ins
leave
mov
aas
les
mov
adc
dec
add
lds
aam
dec
stc
push
repz
scas
or
adc
mov
lahf
mov
inc
cmps
int3
sbb
pop
das
push
ja
stc
stos
cs
jmp
(bad)
push
dec
bound
imul
fstp
sar
and
jp
pop
cmp
fcom
cwde
ret
out
mov
push
sahf
ror
or
fiadd
mov
mov
jne
jmp
dec
ds
iret
pop
test
mov
aas
xchg
enter
out
xlat
data16
addr16
xor
jmp
sbb
les
xlat
and
push
pop
inc
xchg
neg
or
cmp
dec
jbe
mov
jns
inc
les
stos
xor
(bad)
push
imul
(bad)
add
scas
loope
dec
xor
push
cmps
out
ja
aam
pop
dec
ins
gs
add
dec
adc
mov
mov
cli
and
cmp
inc
jne
inc
dec
mov
outs
cmp
call
adc
movs
test
inc
xchg
in
fsubrp
mov
clc
jge
dec
add
rcl
(bad)
js
adc
adc
scas
adc
daa
jmp
pusha
mov
bound
not
sub
rol
ins
int3
push
inc
outs
rol
arpl
daa
sub
fdivr
pushf
inc
xchg
mov
fld
dec
(bad)
mov
stc
or
inc
dec
adc
xor
sub
out
inc
mov
add
adc
je
test
mov
sbb
(bad)
ss
inc
jno
mov
es
mov
pushf
and
and
stos
std
fidiv
leave
mov
mov
dec
cli
inc
movs
test
sbb
mov
jno
mov
jmp
cdq
mov
dec
mov
and
cld
add
aas
imul
or
and
push
scas
cli
mov
addr16
mov
cmp
(bad)
fadd
aad
jnp
jl
push
les
aas
enter
pop
lods
daa
mov
mov
outs
cdq
std
cdq
jp
lods
gs
pop
out
push
test
test
adc
xor
and
mov
xchg
test
sahf
frstor
cmps
or
xchg
pop
cwde
ror
cmp
mov
shr
pop
in
fidivr
add
cs
jb
xchg
sub
(bad)
loop
aam
mov
push
lods
xor
dec
sbb
repnz
and
inc
mov
xor
jne
enter
jmp
jb
inc
rcr
jo
or
cmps
mov
aas
fisubr
inc
test
ficomp
lods
inc
cmp
fs
call
(bad)
clc
push
sub
xor
jns
jmp
loopne
xlat
xchg
or
jmp
rcl
js
and
mov
jmp
inc
inc
mov
rcl
int
inc
mov
xchg
sub
jnp
xchg
xchg
jp
int
popf
in
xor
xchg
xor
mov
mov
mov
pop
out
test
fsubr
fwait
adc
ror
lahf
push
in
mov
out
or
aad
out
mov
xor
jnp
cmp
jae
and
jne
in
cmps
inc
les
addr16
(bad)
out
pop
ror
dec
shr
jae
mov
mov
cmp
fst
sbb
pop
inc
pop
hlt
scas
cs
sub
lock
jecxz
and
push
sbb
js
sbb
jmp
mov
sbb
cmps
cwde
sub
jbe
fwait
pop
rcl
cmp
inc
stos
and
jge
div
mov
xor
adc
in
es
es
xor
add
es
adc
xchg
push
daa
or
jecxz
inc
mov
mov
mov
repz
or
inc
adc
sbb
shl
loop
cmc
das
in
ins
aaa
mov
xor
push
int3
jl
lahf
test
sti
mov
jp
rcr
push
je
push
jmp
jae
pusha
dec
mov
inc
sbb
retf
xchg
pop
rcl
mov
adc
jb
ror
push
add
bound
dec
popf
adc
sub
cwde
cmc
push
repnz
cmp
ror
mov
cdq
fwait
cmp
das
inc
mov
sub
idiv
add
cdq
out
mov
jne
mov
mov
retf
sbb
inc
(bad)
addr16
jecxz
cmp
popa
sub
imul
sub
es
mov
dec
sbb
inc
call
arpl
jle
mov
jge
or
sar
or
jbe
(bad)
add
(bad)
enter
jne
ss
fstp
in
adc
jbe
addr16
jno
add
sbb
mov
push
cmp
push
pusha
mov
mov
outs
cld
mov
rcr
paddusb
mov
jle
mov
pop
rcr
sbb
add
mov
jmp
inc
cmp
and
repz
in
mov
gs
and
mov
jmp
call
jnp
int3
push
xchg
mov
mov
push
movs
xor
into
fs
mov
sub
push
movs
ins
xchg
div
pop
add
dec
outs
mov
sub
cmc
repz
push
daa
xor
xchg
shl
mov
test
stos
or
push
aaa
das
push
in
jmp
adc
push
add
sbb
push
data16
out
sahf
inc
jecxz
cmp
jp
push
outs
jnp
add
imul
enter
repnz
push
pop
sbb
cmp
jbe
xchg
inc
inc
scas
repnz
mov
push
adc
jb
pop
adc
ffreep
jg
mov
mov
mov
cwde
inc
inc
push
out
mov
mov
leave
push
mov
mov
retf
inc
mov
mov
xchg
sub
icebp
and
shl
aas
or
xlat
nop
dec
jae
addr16
xchg
mov
mov
add
ja
jp
push
or
in
imul
fcom
inc
add
nop
dec
mov
and
mov
jl
(bad)
iret
cmp
stc
sbb
cmp
repnz
nop
ret
jne
xchg
cld
data16
fidiv
mov
jae
call
cmp
mov
adc
aas
jmp
sbb
inc
mov
stos
fild
(bad)
and
mov
clc
adc
jno
lds
jg
jle
dec
fldenv
xchg
mov
dec
or
add
iret
or
test
inc
jmp
mov
dec
ins
mov
stos
mov
rep
imul
adc
ins
mov
mov
mov
push
mov
adc
push
push
mov
cld
lods
popf
mov
and
xchg
push
sbb
ins
addr16
or
and
sub
pop
stc
stos
movs
lods
adc
repnz
xor
stos
movs
sbb
(bad)
pop
js
fisub
out
in
xor
adc
jno
or
test
or
push
or
clc
lock
mov
mov
jo
mov
data16
mov
pop
jl
jp
repz
data16
fmul
sbb
mov
jge
test
sub
inc
ret
dec
(bad)
jmp
dec
jns
pop
cmp
inc
mov
inc
mov
mov
xchg
jge
push
lods
pop
ficom
cmp
jnp
jmp
lea
sub
lods
arpl
out
aaa
mov
push
out
sti
and
fldenv
sbb
lock
test
jmp
cld
daa
inc
fadd
push
fisub
and
inc
test
hlt
jnp
out
(bad)
jp
pop
jmp
popa
mov
sbb
movs
fsub
jne
mov
jge
jle
clc
xchg
adc
lea
jmp
inc
and
jmp
ja
mov
jb
ins
popa
imul
aad
or
leave
cmps
icebp
push
cmps
repz
cmp
loope
rcr
stc
stc
loop
data16
push
mov
push
xchg
push
les
retf
add
into
int
(bad)
cld
mov
fsub
lods
aam
xchg
mov
fs
push
sar
fimul
mov
push
loope
sub
push
mov
cmp
aad
stc
sbb
inc
mov
daa
lds
idiv
jg
inc
sbb
mov
stc
xor
outs
and
ins
test
pop
pop
loop
shl
lds
ss
sub
mov
sbb
(bad)
in
jbe
fcmovu
lods
pop
js
push
hlt
in
test
lds
lods
sub
add
pop
xchg
les
push
and
aas
int3
sbb
add
sub
push
pop
or
push
pop
stos
xchg
adc
mov
or
out
or
sbb
ror
pop
dec
fsubr
adc
mov
fnsave
stos
rcl
xor
mov
adc
mov
into
ret
rcl
inc
inc
aad
dec
inc
sub
cmps
int3
jg
in
ja
push
movs
jge
fst
dec
test
(bad)
jp
ds
jns
fisub
rol
fadd
(bad)
fimul
and
push
push
inc
mov
fidiv
lds
adc
jle
sub
xchg
movs
jg
fadd
pop
cmps
adc
leave
cmps
dec
fld
stos
aas
mov
mov
hlt
pop
fdivr
push
or
gs
ficom
pop
xor
sbb
adc
mov
int
sub
test
pop
inc
rcr
mov
ds
fsubrp
pop
frstor
addr16
bound
into
adc
and
adc
mov
xchg
xor
adc
gs
adc
(bad)
jg
out
test
loop
mov
sahf
add
inc
mov
repnz
jp
dec
sub
sub
in
test
sub
mov
cmp
ds
sbb
cld
int
cmp
inc
push
clc
push
xlat
loope
int3
adc
rol
fistp
xchg
pop
sbb
rcl
sahf
pop
jg
xchg
mov
and
loope
mov
leave
inc
repnz
inc
xchg
jno
in
and
push
add
sub
dec
pop
sub
loopne
or
aam
sub
int3
push
jl
call
cmps
ret
sub
pop
lahf
rcl
pop
arpl
jno
and
mov
xchg
push
nop
cld
inc
das
arpl
xor
bound
sub
test
call
retf
sahf
addr16
xchg
clc
sub
jmp
xlat
mov
mov
mov
ins
clc
ins
xlat
mov
in
retf
iret
retf
stc
stc
outs
or
movs
ss
sbb
jae
adc
stc
arpl
sbb
push
dec
xchg
jbe
jno
out
mov
cwde
push
loop
mov
push
mov
inc
pop
fbstp
and
lock
xor
xchg
sti
scas
nop
mov
xchg
repnz
dec
punpckhdq
leave
ja
jae
data16
ror
fnstcw
aaa
lock
mov
pop
mov
xchg
dec
call
sub
xchg
or
sbb
cli
repnz
sti
ds
jge
pushf
data16
fisttp
add
shl
and
outs
or
jbe
call
add
jp
mov
data16
movs
jb
push
in
mov
shr
test
rcr
ret
stos
cli
cdq
arpl
rol
xchg
ss
jmp
not
pop
fwait
in
push
ds
mov
push
push
jl
xor
sahf
mov
std
(bad)
(bad)
mov
cwde
mov
jl
jg
in
mov
push
push
movs
addr16
lods
sbb
gs
add
xor
fdivr
ins
int3
sbb
popf
push
pop
daa
out
iret
jbe
fwait
xchg
mov
(bad)
repz
bound
xor
cmp
jg
xor
jb
in
mov
pop
imul
test
enter
mov
prefetcht2
push
adc
or
je
fild
inc
sub
popf
lahf
xor
xchg
or
push
xor
xchg
xchg
sub
mov
imul
ret
es
out
push
mov
ret
idiv
mov
mov
cwde
jle
inc
ja
out
(bad)
adc
js
test
push
pop
test
mov
into
pop
mov
xchg
cli
iret
sahf
test
loopne
mov
stos
cs
addr16
movs
pop
mov
jb
or
pop
arpl
out
ja
cmp
or
loop
xchg
iret
outs
jae
daa
sbb
arpl
push
push
pop
sbb
jle
add
icebp
jmp
aam
sar
cmp
mov
mov
(bad)
imul
xchg
cmp
stc
inc
pushf
pop
sub
add
jp
xchg
std
jp
sub
xor
mov
xchg
push
ftst
jbe
lock
mov
adc
adc
retf
lods
data16
nop
mul
ror
aas
dec
mov
out
arpl
mov
jb
lock
jae
lahf
mov
mov
cld
mul
push
cmpxchg
jge
out
cld
cmp
mov
pcmpeqb
aaa
mov
or
xchg
mov
inc
lods
loopne
test
mov
and
mov
outs
rol
cld
cmp
cwde
dec
pop
rcl
cdq
fst
bound
ret
push
call
xlat
lods
inc
pop
xchg
imul
test
sbb
icebp
inc
outs
inc
cs
inc
and
(bad)
out
xor
popa
dec
sbb
retf
(bad)
retf
mov
lds
pusha
aaa
unpcklps
aaa
enter
dec
push
mov
and
xlat
dec
jbe
jnp
add
sahf
cmps
fnstsw
dec
test
bnd
mov
sbb
fdivr
push
sbb
sti
add
lods
mov
mov
mov
or
jno
sahf
nop
nop
lea
mov
xlat
out
fist
or
test
inc
(bad)
sbb
(bad)
std
hlt
and
cmp
pushf
inc
into
in
cmp
inc
push
movs
lahf
mov
test
std
push
in
mov
fmul
jbe
out
shl
rcl
mov
add
int
add
cmp
jp
cld
cwde
mov
jb
addr16
xchg
(bad)
push
stos
out
pop
dec
and
test
inc
loop
pop
push
push
mov
jg
js
and
inc
and
icebp
mov
test
and
mov
lods
cli
push
xchg
cmp
and
inc
dec
sbb
cdq
clc
pop
cmp
fadd
mov
lahf
jecxz
dec
cmp
call
mov
sbb
movs
retf
aaa
mov
loope
xor
push
imul
ret
call
mov
popf
add
mov
frstor
fdivr
es
or
push
mov
xchg
stc
push
lods
repnz
repz
adc
push
mov
xchg
adc
lds
inc
mov
gs
enter
dec
cmp
push
sbb
dec
mov
jg
dec
sbb
mov
push
dec
das
inc
sub
mov
mov
push
inc
push
(bad)
dec
mov
iret
addr16
mov
not
lea
add
inc
cmp
push
push
(bad)
in
(bad)
jle
inc
nop
add
pop
movs
and
xchg
scas
les
cli
nop
add
stos
mov
leave
mov
push
lods
es
pop
or
push
jb
loope
jbe
add
add
adc
inc
or
leave
sahf
xor
cmp
icebp
mov
iret
inc
xchg
loope
push
jl
fsub
call
xor
repz
std
sub
gs
sbb
arpl
movs
or
cmp
rcl
into
mov
int
mov
dec
arpl
out
sub
cmc
push
shl
push
rcr
or
pop
sub
xor
test
fs
mov
mov
xchg
push
js
aam
and
(bad)
xor
lock
push
or
mov
push
outs
not
imul
daa
adc
retf
mov
retf
cmp
mov
les
mov
fst
out
(bad)
sub
jnp
pop
fisttp
(bad)
pushf
pushw
jecxz
xchg
or
jmp
cmp
pop
inc
xchg
js
pusha
adc
and
mov
add
leave
iret
xor
(bad)
fistp
push
aam
mov
ins
jmp
jb
add
rol
mov
sub
push
hlt
and
sbb
(bad)
sub
out
xchg
(bad)
push
enterw
and
cmps
fwait
clc
jmp
fimul
sub
in
inc
xor
test
call
outs
cwde
scas
adc
mov
mov
mov
push
add
pop
and
sub
out
inc
or
rcl
push
fmul
(bad)
ror
mov
mov
mov
popa
add
idiv
fbld
adc
jne
nop
adc
pop
push
fwait
stos
mov
push
imul
xor
pop
in
pop
inc
cwde
jmp
push
aaa
test
jmp
outs
add
pop
mov
dec
mov
test
adc
cmp
xchg
repnz
mov
or
in
and
sub
pop
and
mov
call
nop
jo
jno
inc
fstp
cmps
pop
(bad)
movs
or
add
call
scas
daa
scas
jmp
mov
push
adc
jno
ror
mov
call
cmc
mov
cwde
or
ds
xchg
xchg
(bad)
aam
and
aam
inc
fs
jbe
stos
sbb
pop
sbb
fdiv
loop
or
xchg
ds
repnz
sti
jge
(bad)
daa
inc
sbb
xor
lock
cmp
pushf
jns
pop
enter
in
xchg
xchg
int3
mov
xchg
adc
mov
imul
adc
pop
ja
stos
add
cmp
inc
and
pop
mov
movs
fcomp
sub
jb
push
xor
ret
cmp
mov
dec
loop
jae
repnz
mov
pop
pop
ja
in
jmp
aaa
retf
cmps
adc
xchg
in
push
and
and
call
cmc
bound
icebp
push
nop
out
(bad)
iret
add
or
cmp
daa
xchg
pop
test
lea
rol
nop
shl
push
sbb
jno
mov
or
(bad)
daa
test
inc
retf
and
sub
xchg
mov
lock
and
mov
test
or
fmul
pop
retf
push
into
mov
cdq
cmp
into
lea
add
sbb
scas
sub
xor
or
(bad)
out
push
inc
je
out
adc
pop
push
retf
or
mov
dec
adc
push
movs
scas
movs
mov
and
xchg
sbb
hlt
test
jmp
pushf
push
xchg
das
sar
pop
sbb
test
adc
int
push
or
cmp
mov
pop
fbld
ins
sub
mov
mov
jne
and
scas
mov
cdq
inc
mov
and
push
mov
add
aaa
mov
jmp
xor
dec
xor
inc
setp
scas
jb
inc
jecxz
loop
out
jecxz
pusha
repz
mov
xor
inc
arpl
jbe
(bad)
shl
lea
sar
pop
and
cs
addr16
outs
adc
fmul
cmp
cmp
mov
xor
inc
push
sbb
inc
sbb
push
fisttp
paddusb
lods
push
fidiv
(bad)
call
push
sub
and
stos
das
mov
xor
jmp
adc
mov
mov
(bad)
ja
imul
mov
fdivr
adc
test
mov
fisttp
mov
nop
mov
fistp
adc
add
aaa
dec
movs
fucomp
push
mov
f2xm1
out
jae
jp
sbb
adc
mov
ins
dec
jmp
add
mov
add
lods
das
sub
fiadd
add
push
fstp
rcl
mov
frstor
sar
or
fs
lods
in
adc
and
mov
fnstcw
sub
and
add
ret
inc
mov
push
push
mov
inc
inc
loopne
sahf
lds
(bad)
loope
ret
test
jge
cmp
(bad)
(bad)
stc
mul
or
dec
mov
popf
retf
mov
pop
cld
cmp
loope
jnp
sub
(bad)
mov
aad
jno
cmps
popa
scas
inc
in
pusha
mov
cmp
jmp
inc
movs
loopne
inc
call
stc
push
(bad)
jmp
push
jae
jle
push
jle
arpl
xchg
rol
ins
shr
in
inc
xor
cmp
jns
leave
jne
movs
xchg
jl
xchg
or
outs
pop
les
mov
push
fdivr
cld
loope
out
xor
sub
inc
push
mov
daa
cmp
jae
xchg
mov
aad
inc
xchg
xor
in
lea
or
mov
sbb
cmps
fcom
pop
sbb
mov
mov
adc
cmps
jae
xchg
cld
sub
(bad)
in
jne
jnp
cli
cmp
adc
cmp
or
xor
mov
xchg
mov
clc
arpl
out
(bad)
pop
jle
jmp
popf
lea
xor
mov
add
xchg
and
push
inc
add
sbb
and
icebp
push
xchg
repz
hlt
ins
jmp
sbb
mov
xor
loope
xor
mov
mov
adc
xor
sub
leave
mov
popf
fmul
push
mov
pop
jp
fisttp
cs
mov
push
xchg
mov
gs
lahf
test
xchg
inc
sub
out
dec
outs
aam
std
mov
jmp
mov
pop
out
push
shr
xchg
test
outs
in
xor
imul
push
or
sub
pop
dec
sbb
inc
or
dec
dec
into
ja
xlat
je
adc
jmp
xor
add
cmp
mov
outs
and
mov
outs
mov
nop
and
or
add
pop
mov
or
push
jno
mov
bound
mov
es
mov
rol
adc
mov
cmps
mov
mov
pop
adc
jo
adc
out
push
add
xlat
(bad)
hlt
shl
fwait
(bad)
push
sbb
ss
fstp
dec
(bad)
jns
mov
enter
movs
mov
mov
pop
jecxz
jne
popf
xor
aam
repnz
sub
fbstp
fldcw
scas
out
adc
mov
inc
in
dec
cld
xlat
das
call
mov
add
push
fnstsw
test
or
cmp
pusha
mov
ret
mov
lock
call
aad
int3
clc
inc
mov
pop
fild
inc
(bad)
enter
pusha
dec
mov
stc
cmp
xlat
xchg
mov
or
dec
xchg
out
enter
inc
out
stos
test
arpl
adc
add
mov
shl
jbe
xor
adc
cmc
and
imul
mov
add
cdq
fdivr
js
sbb
and
sbb
movs
jnp
shl
push
jae
fild
or
sub
xlat
cmp
loope
in
lds
mov
movs
loop
inc
sub
(bad)
popf
xchg
or
jno
push
out
les
adc
dec
and
push
dec
addr16
push
stc
or
sar
dec
mov
in
push
push
int3
jbe
popf
or
xor
andps
push
shl
add
push
xchg
xchg
pshufw
mov
retf
and
retf
mov
push
jge
imul
or
in
inc
pop
xchg
pop
mov
test
(bad)
mov
add
cdq
mov
inc
cmps
stos
or
call
mov
xchg
sbb
clc
movs
pop
sub
daa
add
inc
(bad)
jae
clc
nop
in
push
je
pop
add
push
push
cmp
jecxz
sub
adc
jo
mov
outs
cwde
mov
int
xor
pop
scas
jle
popw
adc
lds
sbb
push
or
data16
retf
aas
or
jmp
lea
out
retf
scas
scas
cwde
add
xchg
lds
mov
xchg
and
xor
cmc
mov
out
mov
jle
scas
cmp
jo
push
lods
int
sbb
jmp
jmp
int3
fwait
arpl
and
or
dec
xor
jo
mov
test
push
mov
dec
xchg
inc
outs
mov
rol
adc
mov
pop
das
sub
int
xor
mov
es
(bad)
cld
(bad)
jecxz
fcomp
mov
or
cmp
sbb
mov
retf
retf
or
mov
loopne
add
xor
xchg
sbb
pop
sub
inc
mov
idiv
add
and
enter
mov
and
mov
shr
sub
out
enter
lods
sahf
fdivr
icebp
cmps
int3
push
push
jp
push
adc
movups
xor
hlt
out
xchg
repz
and
pusha
scas
retf
sahf
shl
adc
out
(bad)
rcl
cli
jmp
jns
jb
(bad)
rol
pushf
fbstp
jecxz
loopne
int3
cmp
mov
sar
repz
adc
inc
test
adc
dec
dec
je
push
xor
jo
inc
leave
test
adc
les
inc
ret
inc
bound
sub
sbb
jne
xchg
jo
not
ins
mov
or
mov
mov
ss
dec
mov
or
movs
daa
fchs
mov
push
rol
fwait
popf
cld
cs
sbb
imul
mov
nop
push
push
and
retf
jo
inc
fbld
test
mov
sahf
cwde
cmp
jbe
push
lods
scas
aas
mov
stc
lds
push
push
fs
addr16
out
int
mov
(bad)
in
enter
dec
dec
adc
jbe
push
fimul
pop
mov
add
dec
sbb
fwait
mov
les
imul
cmp
ficomp
mov
push
pop
adc
loop
sub
mov
pop
xor
pop
dec
(bad)
lods
iret
push
xor
xlat
mov
es
and
cmps
sub
inc
stos
or
mov
mov
pop
movs
js
gs
mov
scas
xor
push
aas
sub
mov
lds
sub
cmp
sub
cmp
push
jne
mov
dec
inc
scas
std
stos
out
xor
loop
fmul
sar
xchg
adc
lea
mov
(bad)
daa
lea
test
cwde
xchg
push
sbb
adc
popa
fcmovnu
xor
stc
daa
xchg
inc
push
cmc
pusha
mov
pop
stos
adc
adc
mov
out
aaa
fild
leave
(bad)
lock
int3
xor
or
mov
(bad)
dec
jnp
cmc
stos
cmp
ret
in
aaa
sbb
fnstsw
das
fwait
and
cdq
or
lods
and
pinsrw
cmp
rcl
int
push
cs
push
(bad)
jnp
mov
adc
(bad)
xchg
inc
call
es
mov
mov
aaa
adc
push
ret
ins
nop
mov
sub
(bad)
jle
test
and
scas
repz
arpl
sbb
fdiv
nop
sbb
mov
inc
and
test
mov
jmp
mov
in
mov
xchg
mov
jle
jbe
mov
jecxz
jg
push
jmp
cmp
fwait
xor
jo
scas
scas
jo
cmp
pop
adc
sti
adc
fbld
je
cmp
pop
or
sbb
jbe
fnsave
mov
jmp
into
out
mov
fidivr
aad
call
stos
inc
iret
fsubr
shl
cmp
jb
xor
inc
xor
xchg
fcmove
pushf
add
in
out
in
je
sub
xor
inc
xlat
ins
out
and
inc
xor
sub
push
cs
aam
popf
or
ins
ins
xchg
xlat
fucomip
inc
push
lods
push
loop
jbe
lods
fimul
sub
mov
inc
xchg
test
pop
cmp
or
jecxz
add
in
leave
js
pop
xor
push
repnz
sbb
sub
ds
retf
jnp
xchg
sbb
(bad)
(bad)
add
retf
in
xor
out
push
sub
jecxz
xlat
fsubr
jle
cmps
mov
jb
shl
inc
jg
call
not
mov
addr16
pusha
cld
repz
push
ja
cmps
add
push
mov
dec
jmp
xchg
push
pop
dec
test
imul
mov
sti
movs
in
pop
dec
popf
sub
movs
(bad)
cmp
(bad)
jge
or
inc
mov
loopne
sbb
jl
push
gs
inc
sahf
mov
(bad)
fucomip
mov
lds
inc
jb
shl
xchg
lahf
adc
pop
and
retf
and
push
cmp
mov
adc
mov
mov
es
ja
retf
xor
inc
mov
addr16
or
test
push
xlat
movs
mov
pop
push
imul
loope
jno
aas
mov
fdiv
imul
test
xchg
enter
jge
movhps
mov
xlat
les
imul
imul
lea
cwde
pop
imul
ss
dec
(bad)
or
inc
imul
mov
push
jle
aad
sbb
pushw
or
ffreep
jle
cmp
rol
test
in
(bad)
popf
pop
xor
xor
xchg
mov
push
ret
gs
cmp
mov
repnz
out
adc
mov
in
and
popa
bound
inc
adc
rcr
leave
mov
mov
fimul
movs
dec
mov
or
cmps
sbb
retf
fmul
imul
sar
dec
scas
leave
push
jno
sbb
enter
and
sti
loope
out
sub
enter
cld
ins
out
xchg
add
or
inc
pop
and
jge
loope
(bad)
mov
mov
cmp
stc
sti
cld
dec
lods
sahf
and
mov
pushaw
ret
push
daa
pop
loop
lock
shl
sub
es
xor
(bad)
(bad)
jo
xchg
inc
xor
mov
sub
out
fwait
xor
push
xor
mov
push
xchg
int3
mov
aam
jle
adc
movs
and
jmp
iret
xor
outs
nop
test
mov
xor
fsubr
add
ror
lods
push
fadd
(bad)
ret
pop
ret
xlat
jae
(bad)
sub
sbb
mov
cmp
repz
cmp
gs
add
mov
std
hlt
cmps
xchg
rcr
xlat
sub
sub
pop
out
std
jecxz
iret
inc
and
aad
xor
mov
jecxz
fs
loop
int3
ror
sub
retf
js
jmp
dec
fidiv
pop
and
pop
ins
loope
out
cmp
mov
int3
repnz
pusha
clc
mov
bound
movs
inc
repz
cmp
daa
outs
retf
loope
mov
pop
addr16
or
push
mov
das
(bad)
ftst
loope
xchg
(bad)
retf
add
lods
rcl
lock
cmp
push
jo
adc
int3
into
or
xchg
lds
lock
fisub
cld
or
xor
loope
mov
mov
or
cmc
nop
jb
adc
xor
stos
dec
push
pop
or
in
ret
jno
call
je
jnp
mov
sub
sbb
add
dec
clc
out
pop
ret
fwait
aad
(bad)
loope
sub
mov
adc
loope
fucomi
clc
test
mov
outs
and
and
add
and
xchg
jno
sbb
hlt
add
adc
add
jmp
add
dec
jbe
jle
(bad)
mov
mov
(bad)
cmp
jne
xchg
pop
stc
pop
xor
jle
mov
aaa
loop
(bad)
push
jmp
mov
push
les
mov
nop/reserved
or
push
xchg
inc
imul
clc
jo
add
sbb
fistp
js
or
sahf
movs
(bad)
cdq
push
sar
aam
xchg
and
push
mov
retf
inc
fmul
sub
cli
sbb
stc
xlat
outs
adc
not
add
sub
fmul
daa
xor
cmp
int3
arpl
movs
mov
fwait
pop
push
(bad)
sub
nop
or
idiv
popa
add
faddp
adc
and
int
int3
or
pusha
mov
cli
jmp
jne
addr16
or
in
inc
mov
dec
out
cmp
xor
push
cmps
mul
xor
cmp
je
inc
add
jmp
and
in
aaa
adc
mov
fdivr
xchg
pop
(bad)
(bad)
xchg
sar
call
shl
out
xchg
xchg
sbb
cmps
rcr
pop
xchg
mov
(bad)
sub
and
sbb
cld
aam
inc
cmp
dec
fldenv
test
jg
test
xchg
xor
in
cwde
jecxz
sbb
nop
mov
or
mov
pusha
push
mov
dec
ficomp
inc
(bad)
out
mov
dec
je
nop
jmp
mov
imul
xor
arpl
rcr
aaa
int
lods
pop
cli
sub
mov
jg
sbb
in
mov
cmp
icebp
les
adc
call
fidiv
sbb
lds
retf
sbb
aad
jno
adc
jbe
popf
mov
mov
es
test
outs
call
inc
xchg
scas
add
adc
mov
imul
mov
add
in
pop
into
ret
fs
rcl
jg
cmp
dec
fistp
and
retf
dec
xchg
ss
lea
sbb
cwde
fdiv
stos
push
mov
adc
fnstsw
sahf
out
add
inc
dec
je
cdq
cmp
outs
int3
add
jmp
pop
dec
mov
cmp
mov
inc
mov
push
adc
aas
push
in
sub
dec
nop
test
xchg
hlt
sbb
(bad)
sbb
push
cmp
int
inc
stos
sahf
int
into
pop
shr
inc
test
jle
mov
adc
enter
pop
repnz
mov
push
enter
movs
cmp
and
in
sub
int3
and
sahf
mov
std
(bad)
int3
xchg
test
push
add
cwde
dec
mov
dec
cmp
loope
push
in
and
xchg
fucomip
and
iret
and
out
rcl
fcom
outs
push
stc
sub
and
pop
fadd
scas
popf
cmps
or
push
cmc
dec
pop
mov
push
jg
mov
dec
dec
(bad)
push
imul
inc
movs
test
je
fimul
xchg
or
sar
fwait
add
cmp
push
or
retf
push
dec
sar
mov
movs
sbb
push
push
stos
inc
mov
clc
mov
idiv
(bad)
mov
add
or
pop
or
fisub
std
sbb
addr16
pop
imul
jbe
mov
adc
gs
add
lea
xchg
mov
test
push
mov
es
int
jle
cmp
push
(bad)
dec
jecxz
rcr
mov
sub
gs
jl
enter
loop
push
jo
outs
adc
mov
and
mov
jl
dec
push
mov
outs
stc
sbb
dec
inc
repz
push
pop
push
sbb
cmp
loope
dec
and
push
enter
sahf
sub
pushf
call
xor
mov
aaa
test
int
jp
sbb
mov
jns
imul
pop
inc
sbb
xor
adc
push
push
scas
push
scas
pop
nop
movs
aam
fisubr
arpl
ins
or
mov
dec
pop
aam
aad
dec
arpl
aam
jae
xor
or
js
std
mov
rol
inc
ret
scas
mov
mov
push
sub
push
aad
xchg
mov
shl
jbe
xchg
popa
cmps
out
pop
pavgw
pop
mov
cli
cmp
dec
stos
popa
xor
jle
push
test
loope
je
xor
mov
cs
mov
or
and
cmp
sbb
mov
addr16
push
sahf
hlt
mov
out
mov
push
loope
leave
jae
pmaxsw
stc
jmp
lods
in
xchg
addr16
pop
adc
fisttp
out
ret
cmp
leave
or
out
push
sbb
cmp
ins
mov
cmps
ds
outs
out
out
retf
push
sbb
cmc
xor
and
cmc
jno
ds
inc
repnz
mov
jns
and
cmp
mov
xchg
sbb
jns
sub
push
xchg
cmp
dec
lock
stc
cmp
in
cmc
pop
mov
maskmovq
neg
pop
test
(bad)
cmp
imul
jp
cmp
jnp
inc
jne
pushf
leave
pop
xlat
xchg
adc
lea
imul
mov
sub
mov
lods
scas
sti
stos
fcomp
push
test
out
mov
out
fcomp
jecxz
stc
out
inc
movs
jl
jno
sbb
das
pop
cmp
cmps
hlt
jnp
cmp
(bad)
aam
ret
call
inc
outs
aas
mov
or
bound
mov
sub
mov
or
pop
mov
cmps
iret
xor
dec
adc
sub
xor
or
inc
loope
cmp
mov
and
fist
sbb
push
dec
fisub
(bad)
mov
sbb
jnp
mov
jbe
bound
movs
test
movs
leave
arpl
fwait
cmp
inc
jecxz
cwde
xchg
inc
or
rcr
cmp
icebp
outs
shl
sub
aad
inc
inc
cmp
jnp
push
(bad)
xchg
retf
leave
icebp
add
test
aas
xor
ins
hlt
popf
cdq
daa
push
pushf
adc
mov
loop
outs
jnp
mov
cdq
push
mov
cmps
rcr
jno
pop
nop
(bad)
cmc
mov
and
sub
jp
retf
lods
popa
adc
adc
jmp
add
lock
sbb
in
sbb
xchg
pop
out
iret
pop
add
in
pop
fucom
int
lea
inc
and
push
cli
test
add
xor
sub
cmps
sti
clc
dec
iret
cmp
xchg
xchg
cmc
aaa
inc
iret
js
cwde
jnp
or
push
sti
inc
inc
sub
adc
lds
adc
rol
xchg
add
ins
popa
shl
mov
pop
ret
mov
or
add
mov
enter
xchg
mov
jp
pop
jae
and
imul
test
mov
das
add
stos
and
sub
ss
cli
jns
pushf
cmp
pop
addr16
pop
dec
and
leave
push
mov
cs
mov
(bad)
jp
dec
fmul
xchg
xchg
mov
or
mov
scas
push
ret
nop
jo
add
fldenv
jp
cmp
pop
mov
daa
scas
push
jae
imul
cdq
pop
(bad)
xchg
ins
inc
adc
push
pminub
sti
aam
cmp
cmp
xor
ficomp
jge
cmp
push
dec
fwait
jg
in
retf
sub
popf
aam
icebp
xor
xchg
dec
cmc
jo
or
push
ret
xor
mov
out
(bad)
xchg
pop
push
movs
and
add
je
push
mov
test
pop
pop
in
mov
lahf
ds
inc
push
cmp
mov
fcmovne
scas
or
das
mov
out
imul
jbe
daa
adc
or
dec
ins
push
aad
mov
mov
mov
add
scas
lea
sub
and
arpl
cmc
cmp
cmps
mov
inc
push
out
xor
push
mov
pop
int3
xchg
cmc
cld
test
test
pushf
cli
mov
lods
mov
fistp
(bad)
sti
jl
sbb
and
add
cdq
out
xchg
xlat
fisttp
pop
and
adc
pop
xchg
gs
rol
mov
mov
aas
movs
adc
adc
mov
pop
adc
pop
test
cmp
fcom
lea
xchg
xchg
or
bound
adc
ficom
sbb
cmc
loop
sbb
xchg
dec
mov
xor
mov
mov
adc
dec
mov
jge
cld
test
les
or
add
dec
or
mov
call
mov
mov
rep
add
div
(bad)
rcr
cmc
pop
jmp
inc
xchg
(bad)
out
and
sbb
(bad)
jnp
xor
clc
gs
lahf
je
or
hlt
push
inc
inc
inc
out
pop
inc
sbb
jns
xchg
mov
inc
and
in
and
out
mul
sbb
inc
aad
adc
mov
add
fbstp
daa
pop
sub
popa
movs
stos
in
test
adc
mov
xlat
push
xlat
jg
sbb
sbb
fdiv
lods
inc
jne
push
test
sahf
retf
lds
add
jmp
pop
mov
rol
push
lods
adc
and
arpl
lds
fiadd
sbb
sar
leave
rcl
enter
add
imul
and
push
frstor
xchg
pop
dec
sahf
lods
add
mov
or
sub
daa
sti
or
mov
cmp
(bad)
cld
xor
retf
int
jecxz
add
ror
lods
lock
sbb
pop
push
fnstenv
adc
fs
push
icebp
dec
mov
es
ins
or
mov
dec
lods
mov
out
clc
fild
cli
ds
sub
mov
inc
out
inc
ins
jp
or
push
test
pop
or
jbe
out
pushf
mov
repz
popa
aaa
das
cmp
ficomp
and
dec
into
js
mov
mov
dec
retf
into
mov
pop
fwait
data16
aam
or
loop
fiadd
arpl
test
sub
(bad)
rol
jg
arpl
xchg
xchg
add
mov
pop
push
dec
mov
inc
lahf
mov
pop
data16
pop
into
out
push
mov
clc
icebp
inc
fs
movs
and
dec
repz
push
and
sbb
mov
ins
sub
xor
or
mov
aam
popa
int
imul
mov
into
mov
add
pushf
mov
xor
lods
mov
mov
(bad)
cmp
out
int
adc
sub
retf
and
test
sbb
mov
dec
mov
mov
adc
loope
call
push
pop
adc
dec
ds
sbb
pop
les
(bad)
jb
push
or
cmp
sbb
cdq
dec
cmp
mov
jl
mov
addr16
lods
pop
cmp
leave
inc
shl
adc
lds
sti
mov
outs
xchg
stos
fist
shl
inc
cmp
aam
inc
test
stos
rol
adc
scas
fidiv
and
repz
ja
arpl
add
movs
pop
pop
mov
sbb
or
sbb
push
les
jp
jmp
sub
loope
outs
in
add
adc
pop
iret
std
cmp
mov
lods
dec
xchg
outs
(bad)
mov
hlt
in
mov
mov
sub
sub
stos
shl
in
mov
(bad)
(bad)
jo
sbb
lods
jae
push
push
xor
inc
sub
mov
out
cli
(bad)
bound
or
(bad)
mov
in
cli
add
and
xlat
repnz
clc
das
mov
inc
shr
hlt
imul
jp
xchg
les
xor
or
jg
inc
and
(bad)
ds
push
mov
sbb
fst
aaa
retf
icebp
jle
lods
and
retf
sub
and
cs
jbe
sbb
pop
imul
jmp
xchg
ficomp
inc
sub
(bad)
fdiv
out
sub
loopne
das
in
and
fistp
xor
push
xchg
xchg
sbb
push
adc
add
fwait
xchg
movs
nop
xchg
pop
mov
cmp
sub
dec
cdq
add
stc
ret
stos
call
shl
sti
lods
jecxz
inc
ins
jmp
call
test
loopne
(bad)
mov
mov
arpl
sub
mov
js
push
sti
lods
jecxz
(bad)
retf
int
adc
in
sub
cmps
mov
add
call
sub
nop
dec
mov
pusha
jns
lods
rcl
sar
out
cli
mov
jg
or
sub
sbb
push
pop
outs
les
shr
or
lahf
ins
fwait
or
aaa
out
lods
js
inc
lock
cmp
mov
cs
cld
mov
cmp
pop
dec
nop
sahf
sub
ja
(bad)
sahf
xor
fisttp
ret
aad
retf
das
int3
jae
mov
(bad)
mov
mov
or
xchg
sub
mov
mov
ret
dec
das
shl
mov
icebp
and
push
shr
or
repz
xchg
jle
and
sbb
sbb
dec
mov
pop
retf
mov
sub
mov
mov
fwait
push
iret
test
or
push
aaa
icebp
jo
mov
cdq
jl
mov
and
ins
stc
je
ret
xchg
imul
(bad)
aad
mov
sbb
out
xchg
jmp
pusha
dec
adc
ins
adc
xchg
pop
pusha
push
push
and
xchg
inc
add
push
ret
pop
(bad)
mov
add
adc
push
mov
sar
adc
cmp
or
in
outs
aas
pusha
iret
mov
cmp
mov
jle
push
and
fiadd
movs
mov
xor
inc
imul
nop
mov
imul
jge
cmps
adc
pop
fadd
jo
mov
mov
and
pop
xchg
setp
arpl
adc
pusha
pop
jmp
push
jge
lds
jp
fs
mov
mul
scas
adc
test
cld
test
mov
jecxz
xor
repnz
sub
and
fistp
in
(bad)
cdq
xor
fnstsw
popf
stos
sub
lahf
mov
sub
mov
xchg
ss
mov
fcomp
stos
inc
and
xor
push
retf
mov
push
add
push
push
add
fsub
jo
jno
mov
call
(bad)
popf
jnp
shr
adc
cmps
cmp
mov
in
ret
dec
ja
imul
cmp
inc
pop
mov
push
pop
xchg
xor
ror
pop
and
shl
push
pushf
mov
outs
pop
clc
pop
add
add
in
mov
bound
out
xchg
sub
loopne
and
jns
mov
in
sbb
ds
ret
pop
sti
ins
test
cwde
or
in
adc
lea
pop
aas
push
cmp
imul
ss
je
cmp
in
adc
or
xchg
xor
icebp
add
mov
rol
or
push
xor
and
adc
xchg
(bad)
je
push
sbb
cmp
add
call
(bad)
jmp
xchg
adc
mov
mov
push
ins
mov
test
sbb
dec
cmp
mov
and
int
dec
push
iret
xlat
xor
icebp
adc
xchg
inc
outs
ficom
jno
xchg
or
mov
push
dec
sub
clc
push
mov
cmp
sti
xor
out
inc
mov
lahf
xchg
js
inc
inc
aam
mov
xor
inc
and
ret
xor
xchg
jecxz
mov
cmp
arpl
ret
inc
xor
push
nop
int3
sbb
mov
es
add
les
mul
nop
cwde
jae
nop
xchg
and
add
retf
push
pop
mov
test
jl
out
imul
push
inc
pop
xchg
fldcw
call
xor
sbb
inc
xchg
xchg
dec
cli
pop
rcr
mov
inc
xor
gs
outs
and
jns
push
or
jp
and
inc
int
hlt
mov
xor
jno
or
fs
fnstenv
push
fnstcw
mov
adc
push
out
sar
dec
xor
add
das
push
std
ins
xchg
add
sub
dec
ss
jle
mov
jle
and
and
push
(bad)
sub
retf
sub
jmp
mov
and
xlat
xor
rcl
push
mov
mov
gs
xor
imul
mov
pop
jmp
not
movs
(bad)
dec
stc
les
jmp
inc
jp
addr16
loop
add
repz
inc
scas
xor
mov
ins
jne
push
jnp
jmp
das
in
repz
xlat
xchg
ds
sbb
ins
sbb
and
div
pop
jg
push
xor
cs
adc
mov
or
adc
test
out
sar
and
cwde
push
in
inc
fld
xchg
mov
sbb
jno
int3
gs
hlt
and
inc
cwde
mov
stos
mov
cmc
call
test
rcl
sbb
mov
ins
xchg
jb
in
push
pushf
jbe
pop
push
mov
xor
out
inc
test
(bad)
(bad)
fs
ret
call
les
sub
cpuid
pop
popf
jge
add
stos
popf
jmp
das
aad
out
popf
popf
jle
fwait
test
xchg
mov
(bad)
or
or
ret
xor
stc
mov
(bad)
popf
or
loopne
push
sub
in
pusha
ror
scas
ins
push
xor
push
arpl
push
or
adc
mov
dec
and
add
arpl
movs
cmp
push
(bad)
push
and
mov
mov
dec
fldcw
pop
in
xor
mov
div
push
jo
cmps
inc
mov
cmp
mov
xchg
mov
pop
push
imul
pop
xchg
icebp
fs
inc
mov
add
sbb
pop
mov
sar
inc
pop
xchg
mov
bound
arpl
add
leave
test
(bad)
leave
sbb
jg
sbb
xor
inc
ret
das
xchg
lods
jae
in
sub
loop
scas
jmp
pop
stos
aas
sub
das
adc
es
cmp
dec
imul
in
lock
xchg
pop
scas
jo
lods
sbb
sti
outs
aaa
movs
cmp
mov
out
dec
xchg
aam
imul
adc
jle
sub
retf
mov
pop
shl
aas
push
mov
lock
mov
mov
or
dec
fnstenv
in
pushf
sub
adc
push
dec
(bad)
retf
test
dec
movs
dec
movs
adc
sub
jae
icebp
outs
inc
mov
lock
mov
add
dec
cmc
cmc
push
xchg
lods
icebp
outs
(bad)
sub
rcl
mov
(bad)
xor
xchg
mov
pop
ja
enter
gs
or
outs
sub
lea
bound
out
xor
out
push
shl
nop
pop
cmp
jmp
sbb
sti
inc
sub
push
movs
pop
push
imul
pop
cmps
jae
inc
rcr
mov
js
iret
ja
adc
out
mov
pop
cli
in
(bad)
mov
ja
push
aad
lahf
mov
or
int
dec
call
addr16
test
push
sbb
and
jno
clc
movs
add
mov
ss
xchg
ds
jmp
dec
xor
ret
jle
push
xchg
bound
enter
pusha
cmp
dec
push
pop
or
pusha
mov
pop
not
js
push
jnp
cs
retf
ja
or
test
out
mov
push
idiv
arpl
mov
ins
aam
or
dec
lea
push
mov
mov
jle
fsubr
inc
jnp
sahf
cmp
pop
stc
je
cmp
pop
outs
lock
daa
jae
jg
push
aaa
push
xor
repnz
mov
cmp
push
int
(bad)
xor
shr
(bad)
into
ret
jl
icebp
gs
adc
and
sbb
popa
clc
(bad)
cs
xchg
sub
pop
inc
lods
pop
jnp
jo
adc
or
leave
add
push
(bad)
rcr
jmp
bnd
das
or
fs
xchg
sar
or
xchg
loop
jnp
faddp
jp
add
mov
cmps
xlat
cmp
jo
pop
dec
xlat
sbb
push
loop
mov
jmp
push
mov
jmp
mov
scas
js
jbe
jbe
sub
into
xor
mov
push
or
test
or
xchg
sbb
or
dec
jno
push
(bad)
push
xchg
test
jo
jne
inc
pop
scas
mov
or
dec
cmp
ja
dec
fstp
mov
mov
add
enter
mov
data16
fldcw
test
pop
cmps
xchg
das
les
xchg
mov
mov
jmp
out
into
inc
mov
sbb
and
in
sub
idiv
dec
inc
ffreep
neg
mov
xor
mov
fsub
sbb
jge
jbe
cs
ret
or
add
dec
pop
sbb
repz
test
jne
adc
repz
pop
mov
adc
mov
cmp
jle
push
(bad)
retf
and
sub
call
inc
les
lods
mov
sbb
jno
mov
ds
pushf
inc
addr16
jo
mov
xchg
mov
xchg
lods
lock
out
pop
pop
addr16
push
pop
(bad)
push
xchg
or
aad
add
jnp
outs
pop
clc
lahf
inc
cmp
and
inc
mov
in
mov
pop
pop
outs
sub
scas
mov
jo
add
and
retf
adc
inc
addr16
xor
sub
add
cli
jmp
pop
cmps
pop
cwde
add
xlat
push
xchg
scas
sbb
jge
add
push
and
mov
pop
and
daa
(bad)
fisubr
in
jl
mov
out
mov
pop
pushf
xchg
rcl
push
mov
(bad)
popf
repz
ret
sbb
fisub
cwde
jb
pop
scas
sar
dec
clc
mov
je
push
cld
cdq
dec
jnp
cmps
call
cmp
inc
or
jmp
push
fxch
clc
scas
cmc
xor
(bad)
fsubr
pop
push
push
push
add
je
cmc
pop
ja
fldcw
leave
and
mov
stc
loop
mov
xchg
test
call
cmps
cwde
mov
pop
mov
ds
inc
mov
out
es
shl
popa
cs
mov
je
jl
adc
lds
clc
xchg
or
ret
mov
dec
sti
add
push
cdq
cmp
sub
fistp
icebp
jl
call
mov
ins
mov
ret
sub
xchg
fbstp
push
in
in
sbb
shr
pop
fsub
adc
or
test
mov
popa
adc
outs
jge
pop
mov
leave
pop
movntq
retf
or
mov
int3
lods
xlat
popa
cmp
or
inc
pop
shr
mov
div
imul
(bad)
mov
ss
sub
je
jl
bound
inc
sub
movs
xchg
out
fsub
or
(bad)
jb
cwde
ret
push
stc
hlt
mov
jnp
add
(bad)
fs
retf
mov
cmp
out
xor
sub
push
movs
jp
mov
pop
fimul
ss
sub
stos
pop
push
test
sbb
xchg
cli
(bad)
push
movs
push
jle
sbb
std
pushf
mov
outs
xor
shl
add
dec
xor
inc
mov
retf
and
push
sti
fs
and
out
fcomp
lock
lods
aas
cmp
jb
xor
cmp
push
lods
je
int
loope
jge
cld
inc
adc
sbb
sub
mov
or
add
mov
hlt
mov
cmp
loop
dec
push
push
mov
inc
and
mov
sti
sar
add
push
inc
mov
fild
call
cld
fsubr
mov
sub
outs
push
xor
xchg
ss
out
xor
dec
mov
(bad)
push
or
fidivr
mov
sbb
imul
cli
inc
jg
sub
pop
dec
xchg
sub
add
adc
(bad)
dec
push
daa
cwde
pop
outs
lds
(bad)
int3
fidiv
sbb
sub
sub
push
loopne
loop
or
cdq
inc
in
cli
cmc
cmp
mov
add
mov
jnp
jbe
int
scas
or
adc
dec
cmp
outs
out
fimul
or
es
add
mov
fucomp
dec
pop
push
(bad)
xchg
fbstp
or
push
push
sbb
xlat
sbb
out
lods
pop
adc
out
inc
add
mov
call
or
call
ret
test
jb
enter
fldcw
adc
in
sub
and
shl
and
mov
ins
(bad)
iret
or
cmp
dec
mov
dec
popf
mov
mov
mov
or
jle
xor
pop
out
and
(bad)
and
mov
out
sbb
mov
out
in
hlt
sbb
pop
add
int
sbb
mov
ret
sub
mov
daa
xor
push
sti
sar
add
ja
inc
xchg
cs
out
xor
xchg
loopne
pop
mov
or
sar
mov
inc
xchg
cmp
movs
push
cmp
test
fld
and
adc
mov
ins
retf
call
lock
fwait
sub
sub
dec
int
sub
and
(bad)
div
xor
xor
add
stc
or
shr
cdq
retf
icebp
xor
std
and
mov
iret
movs
dec
jne
add
aaa
jae
rcr
ror
mov
push
in
and
test
leave
arpl
pop
int3
adc
xor
xor
imul
and
adc
push
adc
xchg
sub
das
mov
sbb
(bad)
sar
lds
dec
out
dec
mov
inc
fmulp
adc
test
fwait
xchg
ins
shl
xor
fcom
or
cwde
pop
out
(bad)
mov
test
test
in
or
jl
(bad)
jecxz
pop
jg
mov
scas
popf
clc
jno
mov
jmp
push
out
and
ss
sbb
dec
cld
sub
push
pop
cmc
mov
cmp
adc
sbb
xchg
movsx
ins
ds
mov
cld
dec
repz
and
sbb
mov
push
and
cmp
push
popf
out
cmp
inc
add
or
mov
(bad)
aas
movs
sbb
daa
push
jne
push
in
mov
aad
cli
sahf
xchg
push
popf
ins
mov
test
out
cdq
sbb
push
dec
loope
mov
add
inc
cmp
xchg
mov
mov
xchg
add
mov
ret
add
pause
lea
les
xchg
or
xor
mov
sti
sub
inc
xchg
sub
(bad)
cli
xchg
popf
cld
popa
ds
imul
loopne
in
adc
push
loope
test
shl
cmp
push
gs
push
mov
add
sub
jmp
int3
fidivr
push
cmp
icebp
mov
mov
xlat
stos
push
out
int3
mov
jmp
imul
ror
(bad)
stc
mov
pop
pop
scas
jo
mov
imul
lods
or
ja
push
xchg
fbstp
dec
xchg
mov
cmc
add
sub
into
mov
repz
mov
jno
jns
push
rol
dec
std
aaa
push
sbb
add
dec
ror
sub
jle
pop
or
dec
lods
nop
in
mov
cld
les
pushf
cmp
push
pop
lea
sub
out
add
xchg
sub
(bad)
mov
pop
cmc
fs
es
out
xor
dec
cmp
mov
adc
dec
inc
out
ds
bnd
imul
rcl
xor
shr
ror
loope
inc
xor
pop
jp
push
sub
test
add
inc
mov
in
ins
neg
call
pop
mov
sbb
call
test
lock
pop
fucom
cmp
lock
xchg
inc
cmp
push
in
mov
or
jns
cmc
test
dec
test
push
and
mov
ror
adc
outs
pop
cmps
pop
xor
fdiv
push
sub
aad
mov
dec
push
retf
jmp
(bad)
xchg
add
dec
frstor
stos
mov
mov
mov
rol
in
mov
dec
(bad)
fld
mov
jg
pop
mov
mov
mov
lds
sar
xor
xchg
ds
lahf
lock
bound
xor
call
sti
mov
sub
std
icebp
call
mov
pop
movs
xlat
ds
iret
neg
xor
push
cmps
mov
test
mov
iret
dec
adc
xchg
cmp
pop
xor
add
push
ja
sbb
sbb
or
es
mov
add
inc
mov
iret
jo
pop
jb
stos
sub
lods
mov
jns
mov
in
hlt
shr
mov
test
inc
xchg
adc
ror
dec
std
xchg
add
sbb
add
ret
movs
retf
std
hlt
loop
dec
sbb
popf
mov
sti
adc
stc
fsubr
mov
lods
das
lds
lods
rcr
adc
out
or
hlt
xchg
xchg
add
iret
cmp
dec
dec
lods
or
fisubr
std
fld
rcr
sar
stos
push
(bad)
sub
push
aad
sub
movs
and
inc
sbb
cmp
adc
push
mov
sti
imul
scas
mov
sbb
xchg
mov
and
clc
cli
mov
ret
test
mov
sbb
jne
mov
pop
test
jmp
sbb
aad
cmps
inc
push
push
aad
out
(bad)
fisttp
add
mov
repz
ja
imul
test
out
adc
and
inc
(bad)
cmc
(bad)
mov
jle
adc
call
mov
rcr
in
mov
test
mov
mov
sub
icebp
pushf
daa
and
mov
mov
aaa
jns
jne
dec
in
mov
mov
lea
pop
sbb
mov
leave
fcomip
(bad)
mov
js
retf
sub
mov
push
mov
mov
jns
repz
scas
jmp
loope
dec
ins
dec
push
or
sub
and
cld
push
dec
or
pop
jl
dec
mov
nop
cwde
lea
lds
jae
jecxz
push
sbb
xor
fdiv
inc
sub
or
lods
jle
jno
(bad)
mov
aaa
push
and
dec
dec
mov
loop
mov
mov
sbb
add
bound
cld
dec
daa
jb
and
mov
inc
jbe
imul
add
pop
shr
or
ds
movs
xlat
aad
adc
in
loope
jno
sbb
imul
in
inc
adc
jp
nop
clc
dec
pop
pop
sbb
fwait
movs
push
pop
cs
jnp
retf
(bad)
test
push
pusha
mov
and
sti
mov
mov
imul
add
je
xchg
adc
(bad)
mov
fidivr
mov
mov
cmp
pop
mov
test
rcr
aas
inc
inc
cmp
xchg
outs
xchg
pushf
lods
sbb
dec
mov
cli
jb
push
jmp
pushf
stos
and
or
pop
out
std
sub
push
xchg
(bad)
mov
aam
mov
in
xchg
je
jmp
(bad)
mov
push
inc
cli
jg
pop
adc
cmc
aas
call
xor
retf
fcom
mov
push
mov
(bad)
addr16
cld
int
and
mov
or
jg
inc
sbb
push
nop
setp
mov
lds
popf
imul
push
cmp
(bad)
in
xchg
shl
xor
sbb
mov
loop
push
sub
sbb
(bad)
enter
push
and
mov
push
push
out
clc
mov
mov
inc
fldln2
add
int3
xchg
adc
int
pushf
arpl
fwait
inc
das
or
inc
sbb
xchg
sbb
ins
sub
cli
fstp
in
jmp
dec
out
das
mov
jecxz
lea
mov
xchg
mov
jae
sbb
adc
adc
mov
mov
cmps
test
push
fucomi
dec
cdq
sub
add
leave
hlt
and
inc
add
lds
jbe
fld
fwait
imul
bound
and
cmp
adc
call
mov
fcom
in
add
adc
and
jge
adc
fadd
or
and
or
add
jno
out
pop
test
mov
lods
mov
mov
adc
cmp
adc
or
pusha
mov
mov
xchg
pop
pop
scas
mov
mul
jno
add
sbb
sbb
retf
cmp
dec
push
pop
inc
add
add
pop
pop
cli
mov
adc
stos
and
ret
adc
fs
mov
stos
test
push
dec
rcl
push
gs
nop
scas
std
pop
sbb
(bad)
leave
jae
or
popf
mov
(bad)
and
push
and
pop
enter
push
nop
jcxz
sub
je
cmp
jno
test
(bad)
repz
loopne
jmp
jns
fild
jmp
xor
cld
std
fcom
ins
xor
ins
jmp
pop
rol
mov
add
data16
stos
inc
jb
push
fdivrp
(bad)
fst
mov
adc
dec
adc
out
jbe
mov
(bad)
mov
bound
adc
pop
fsubp
mov
and
fidiv
fild
out
and
xchg
pop
jle
inc
push
push
jecxz
rcr
inc
loopne
retf
test
jecxz
movs
call
inc
mov
dec
or
adc
das
mov
sub
fidivr
sar
dec
push
mov
call
sub
sub
clc
mov
pop
jecxz
test
and
addr16
fstp
fs
and
xor
pop
aas
pop
adc
push
repnz
stc
cld
jl
arpl
xor
mov
mov
mov
(bad)
fcom
jns
mov
int
and
imul
fwait
movs
(bad)
jo
and
fild
inc
rol
les
xchg
jne
mov
scas
jo
retf
xchg
jmp
sbb
jne
fmul
pusha
mov
inc
inc
and
push
xor
jp
push
loopne
inc
call
jmp
or
jo
pop
sti
(bad)
iret
push
and
sbb
rcr
outs
test
xlat
mov
sub
aam
pop
je
sbb
sub
fdiv
aaa
aas
xor
out
(bad)
push
mov
jb
fmul
or
bound
push
loopne
mov
jnp
xor
arpl
push
adc
dec
aaa
test
fild
into
push
cdq
mov
pusha
xor
gs
sahf
fiadd
fidiv
pop
rcl
jbe
sub
enter
mov
test
in
mov
sbb
sbb
jg
xor
push
shr
enter
jno
in
test
sub
jmp
add
xchg
push
imul
pop
imul
outs
into
pop
imul
aaa
fmulp
test
int
cli
mov
jge
mov
ret
inc
jae
test
mov
stos
xor
jecxz
xor
gs
push
ds
cmps
imul
jp
lock
sub
push
ins
xchg
retf
popf
xor
repz
aaa
mov
js
and
fwait
or
shl
cmc
aaa
mov
int3
mov
fldenv
cmp
sti
in
pop
enter
push
or
test
xor
retf
repz
(bad)
and
cwde
add
cmp
test
push
rcl
mov
scas
arpl
push
add
push
in
lea
jmp
pop
mov
in
test
(bad)
lea
mov
aaa
or
fldcw
sbb
push
sbb
test
jl
push
aaa
clc
fmul
and
mov
outs
pop
pop
sub
inc
pop
pushf
movs
and
repnz
sahf
sar
cmp
jmp
in
push
xchg
xchg
jae
imul
fisub
or
call
fdivrp
popf
mov
movs
or
sahf
add
(bad)
call
mov
adc
lods
daa
daa
in
outs
test
inc
(bad)
jmp
stc
ins
bound
ficomp
cmp
stos
xchg
bound
mov
jno
fst
enter
test
xor
jae
pop
jmp
leave
adc
inc
push
xchg
outs
lahf
cmp
int
inc
cmp
idiv
cmp
inc
adc
jg
mov
and
addr16
retf
and
sbb
(bad)
jg
dec
mov
(bad)
xchg
jp
sbb
arpl
mov
mov
loope
xchg
test
and
xchg
fistp
leave
mov
mov
inc
lock
mov
aas
dec
ret
jnp
es
cwde
jb
mov
pop
loope
pusha
pop
je
xchg
ds
adc
push
xor
sbb
sbb
rcl
inc
pop
inc
add
outs
sub
std
xchg
scas
ret
cld
scas
mov
pop
out
ret
push
mov
std
push
in
adc
std
dec
jnp
daa
pop
lahf
ds
jo
mov
push
jmp
das
sbb
adc
enter
mov
mov
sub
(bad)
es
push
je
fnstsw
jmp
cmps
es
stos
imul
mov
test
mov
cld
(bad)
scas
mov
xlat
sbb
xor
pop
sti
push
dec
mov
out
repnz
jmp
jge
out
xchg
sbb
jns
or
and
mov
jne
and
lods
mov
pop
int
cli
neg
outs
sahf
xchg
add
dec
or
popa
jmp
test
mov
jb
sbb
cmp
fwait
(bad)
ss
dec
xchg
dec
add
out
or
in
push
ins
pop
xchg
sbb
sti
inc
pop
dec
(bad)
xor
xchg
mov
stos
pop
cmp
and
push
xor
jmp
push
mov
mov
adc
div
aas
jl
push
pop
into
dec
xchg
sbb
popf
das
adc
outs
push
sbb
sbb
enter
cmp
pop
fdivr
sti
sbb
movs
sti
repnz
push
stos
pusha
mov
inc
enter
jnp
enter
movs
dec
aaa
aaa
cmps
cmp
mov
jo
add
cmp
sub
pop
mov
xor
push
dec
test
jo
int3
dec
or
sub
fadd
push
cld
fyl2x
test
adc
fnstenv
push
call
arpl
icebp
adc
adc
dec
or
ins
jge
adc
and
jnp
dec
or
mov
les
pop
lea
loopne
aas
mov
dec
popa
fcmove
pusha
mov
ficom
ja
test
movs
outs
dec
push
and
ret
fmul
xchg
(bad)
loopne
sti
fs
add
iret
ins
out
mov
ins
jo
xor
sbb
(bad)
dec
arpl
test
xor
das
pop
sub
push
frstor
data16
sub
push
daa
ror
adc
cmps
mov
push
add
fdivr
ins
or
ret
cmp
push
popf
cmc
mov
and
adc
push
bound
xchg
test
mov
pop
inc
cmp
rcl
fdivr
sub
mov
push
lock
mov
push
aad
test
pop
ret
(bad)
repnz
sbb
leave
sbb
stos
bound
lahf
(bad)
sbb
jg
in
jp
fadd
out
inc
pop
add
lock
pop
data16
fadd
fild
retf
adc
mov
inc
(bad)
stos
popf
or
test
jp
jb
cmps
retf
loope
inc
out
movs
imul
ss
push
add
enter
push
pop
rcl
cwde
adc
pop
sub
shl
jnp
pop
int3
in
push
xor
(bad)
pop
je
sbb
adc
mov
les
fsub
ret
xlat
(bad)
and
repz
push
and
push
and
mov
addr16
ds
into
xchg
pop
retf
je
movs
or
dec
test
and
(bad)
movs
push
loopne
mov
jo
push
js
mov
push
fxam
jno
dec
loop
fidiv
dec
cmps
mov
into
pop
dec
in
scas
stos
mov
push
xchg
mov
inc
clc
jmp
mov
pop
push
arpl
cld
or
pop
push
or
popf
and
pop
dec
push
(bad)
test
dec
es
and
iret
cmps
icebp
sbb
scas
shl
js
or
dec
cmp
dec
in
sbb
dec
icebp
bnd
stos
and
fcomp
outs
jl
sbb
cmp
inc
repnz
sbb
inc
xchg
xchg
les
loop
or
xchg
js
cwde
push
aad
sbb
les
mov
imul
enter
or
inc
mov
or
ror
xor
lock
(bad)
(bad)
mov
xchg
and
add
cmp
xor
test
inc
mov
sub
cmp
popf
out
inc
cmp
ficomp
dec
mov
and
leave
dec
test
add
call
jge
loope
enter
cmc
xor
or
push
imul
or
sti
lods
retf
cmp
cmp
cld
icebp
enter
ret
(bad)
push
push
or
js
mov
mov
mov
(bad)
loopne
or
sar
pop
imul
stc
add
jmp
cs
mov
cli
add
mov
sbb
lock
pop
sub
neg
xchg
out
call
out
scas
shl
mov
lea
pop
call
inc
adc
loope
jbe
push
icebp
js
out
jl
jge
sti
cmp
loope
mov
xchg
inc
ins
fwait
aam
dec
add
std
ins
xchg
fs
sar
hlt
xchg
jno
mov
push
jmp
jne
out
pushf
jb
or
in
out
dec
cmp
adc
push
jo
dec
sbb
jp
mov
call
lods
and
cmps
jmp
dec
or
sub
mov
sbb
adc
inc
std
xor
aad
xchg
aas
jl
inc
(bad)
int
push
stos
cld
jmp
stos
xchg
fcomp
(bad)
lods
popf
repz
jnp
mov
mov
dec
loop
mov
repnz
das
retf
xor
iret
ins
xor
nop
add
cmp
add
dec
iret
ret
(bad)
out
clc
add
pop
ss
fistp
sbb
sub
aas
aad
mov
bound
(bad)
hlt
(bad)
(bad)
ficomp
clc
mov
sbb
xor
adc
scas
test
mov
jns
aaa
mov
das
adc
scas
neg
iret
outs
out
js
jno
cwde
xchg
mov
xchg
les
sbb
loope
div
push
jge
adc
outs
cmp
daa
mov
out
and
(bad)
sbb
std
mov
in
mov
mov
ds
dec
fidivr
ror
or
cmp
inc
add
cmp
ret
js
xchg
aaa
clc
lahf
xchg
cdq
shr
xor
es
ror
jmp
pop
ror
mov
mov
ror
add
dec
out
mov
push
pop
xchg
add
inc
nop
mov
push
mov
jmp
adc
sar
jmp
jmp
mov
ins
push
adc
call
vpor
fwait
int
(bad)
mov
ss
xchg
out
or
cmp
pop
mov
ins
sbb
aad
cwde
adc
mov
dec
pop
and
cmps
mov
js
or
sbb
fld
sbb
sbb
dec
outs
mov
xchg
xlat
mov
hlt
dec
ins
xor
pop
stos
jae
in
lahf
pop
daa
rcl
add
xor
push
lods
stos
ficomp
jg
sbb
sbb
(bad)
jne
aad
loop
xor
sub
outs
loope
mov
adc
test
inc
mov
push
push
inc
rol
sbb
outs
jbe
retf
dec
ret
enter
xlat
mov
xor
or
in
xor
sbb
fdiv
stos
out
xor
push
ror
das
icebp
cdq
div
push
push
test
mov
imul
push
dec
push
aad
mov
xlat
mov
sbb
in
lea
lods
outs
and
push
scas
dec
daa
iret
dec
push
ins
xchg
pop
or
mov
loopne
stc
lock
enter
mov
call
mov
cmps
pop
aaa
push
mov
cs
fadd
add
loop
lods
fmulp
pop
pop
push
mov
movs
add
int3
sahf
mov
jmp
test
xchg
push
mov
dec
in
xor
sbb
push
out
ret
jl
dec
xchg
scas
xor
sahf
ja
test
add
push
cmp
pop
punpcklbw
std
cld
push
add
pop
push
icebp
xor
jne
xchg
push
in
dec
adc
outs
push
mov
sub
out
jb
scas
pop
mov
sub
test
mov
sub
xchg
jns
xchg
movs
(bad)
test
pop
mov
jmp
pop
rcr
jle
jns
mov
dec
jmp
aas
xor
jae
loope
inc
repz
xchg
retf
sub
xor
pop
lds
mov
(bad)
sbb
mov
push
push
push
sbb
cs
jp
add
(bad)
repnz
aam
es
imul
mov
jno
shl
int
pop
fild
shl
mov
mov
xchg
sub
js
hlt
shr
add
js
jo
inc
es
repnz
adc
dec
(bad)
jge
call
mov
jno
ins
xor
sbb
mov
test
fdivr
add
push
rcl
xor
outs
je
sub
iret
push
push
mov
test
inc
cmp
mov
sti
rcl
adc
leave
dec
pop
(bad)
push
out
adc
cmps
(bad)
jns
pop
aas
sbb
sbb
dec
pop
xor
imul
mov
pop
cmp
mov
jno
div
imul
shr
xchg
cmp
mov
dec
js
and
(bad)
jno
and
lods
jl
sbb
or
adc
(bad)
dec
and
pop
xor
or
leave
lock
cmp
fs
push
jmp
repnz
inc
and
add
cmps
aam
inc
fist
and
cmp
xchg
call
mov
sti
(bad)
xchg
pop
mov
mov
aaa
sbb
cmp
repz
pop
cs
test
call
aam
mov
sbb
adc
or
xchg
mov
mov
pushf
or
inc
sbb
into
add
arpl
in
iret
jmp
inc
inc
xor
daa
inc
ins
xor
cs
push
or
xchg
lock
push
test
mov
adc
jge
or
mov
imul
and
mov
stos
scas
xchg
aam
ja
inc
loop
out
dec
lock
sar
shr
xor
push
pop
cmovae
das
and
test
arpl
adc
(bad)
(bad)
jo
xchg
out
pushw
mov
push
ss
jl
cmp
ins
adc
push
sub
push
cmp
shl
pop
xor
in
cmp
mov
xlat
outs
fld
pop
ss
sub
jmp
test
push
ins
jmp
push
xchg
fldenv
jp
(bad)
xchg
sti
lock
(bad)
dec
data16
dec
shl
mov
popf
cmp
and
or
mov
inc
sub
dec
xor
and
mov
and
test
add
sub
add
aam
sub
jb
and
clc
test
outs
mov
mov
cmp
stos
mov
shr
sti
mov
sbb
inc
mov
add
das
cmovp
jne
test
daa
in
sub
cmp
cmp
sbb
les
xor
fmul
and
jbe
sub
dec
adc
(bad)
lds
add
xchg
adc
iret
inc
mov
dec
and
push
inc
(bad)
sub
int
aas
test
int3
rcl
pop
adc
push
push
ja
ret
jo
pop
mov
fwait
sub
retf
inc
cmp
push
mov
xchg
cmp
iret
mov
inc
imul
call
adc
ins
std
aad
add
adc
loope
pop
fs
out
or
lods
data16
cli
xchg
repnz
sub
and
mul
aam
imul
scas
popa
push
movs
dec
mov
mov
aaa
ror
inc
xchg
cmp
jl
pusha
and
and
jns
mul
(bad)
xlat
outs
sbb
pop
(bad)
inc
test
stos
cmp
jno
xlat
push
dec
mov
mov
jle
ret
push
cmp
jo
mov
aam
icebp
sub
rol
push
aas
(bad)
cmc
sub
inc
iret
in
movs
(bad)
sbb
mov
ss
movs
mov
addr16
mov
lahf
pop
or
mov
std
fisubr
inc
cmp
jno
or
inc
cmp
mov
jbe
push
jecxz
dec
adc
aad
ins
cwde
retf
mov
std
daa
xlat
jnp
mov
(bad)
mov
gs
dec
push
stos
adc
call
test
mov
jmp
sbb
test
data16
bound
rcr
stc
not
and
mov
call
int
add
xchg
js
hlt
in
dec
pop
(bad)
ins
icebp
cwde
xchg
or
or
jl
pop
stos
fidiv
pushf
push
sub
sub
lahf
mov
jp
(bad)
jmp
add
push
stos
mov
dec
inc
imul
inc
cmc
pop
ret
shr
push
jg
xor
loop
push
stos
stc
mov
push
retf
mov
sar
adc
gs
sahf
or
addr16
and
fstp
xlat
jmp
mov
mov
movs
dec
je
lea
mov
jb
adc
fsub
fisub
xor
push
in
sbb
sbb
sar
mov
enter
xchg
stos
push
pop
es
push
dec
adc
push
push
movs
mov
push
and
push
outs
jg
mov
pop
dec
in
inc
inc
out
push
call
jle
push
sbb
inc
push
jae
mov
cwde
mov
sbb
sbb
idiv
cwde
push
addr16
mov
fist
fwait
and
lahf
(bad)
mov
stos
push
inc
push
push
aam
jle
scas
mov
loopne
xchg
loope
outs
ja
loope
je
ret
sub
jg
push
inc
adc
jb
and
sar
or
xor
sbb
xchg
iret
inc
movs
or
jge
jle
or
int
adc
pop
retf
cmps
jp
push
jmp
cmc
dec
ins
ret
clc
ret
icebp
sahf
(bad)
add
and
jbe
mov
xchg
mov
movs
sbb
xchg
int3
cmp
cmc
jge
mov
ret
jg
sub
(bad)
cmp
js
sti
ja
pop
pop
mov
push
xchg
mov
or
(bad)
retf
pushf
or
nop
cld
retf
mov
fisubr
pushf
pop
lods
fidivr
cmp
cmp
repnz
call
lods
pop
add
pusha
cmc
ins
ret
movs
or
mov
mov
mov
and
popa
add
adc
push
dec
loopne
lds
jbe
push
movs
or
mov
rcl
bound
mov
push
jg
and
dec
pop
xchg
test
mov
sub
add
jl
ficomp
movs
mov
mov
xchg
sub
pop
inc
ds
shl
jno
push
push
jg
lea
or
sbb
cmps
aad
popa
nop
inc
fs
push
iret
push
lods
or
inc
push
mov
and
std
add
test
mov
mov
mov
in
sar
fs
retf
sbb
dec
imul
jl
mov
sbb
cmp
jae
mov
sbb
jmp
xchg
ins
stc
jne
xchg
imul
inc
call
pop
dec
je
lods
jno
mov
movs
xchg
jle
xor
jle
mov
fisttp
dec
ror
out
(bad)
xor
push
and
data16
outs
not
jae
mov
test
inc
aad
push
test
les
popa
jmp
rcl
retf
jns
mov
add
rol
xchg
(bad)
ja
sub
mov
adc
sbb
outs
int
sar
das
sbb
cmps
fld
pushf
jmp
pop
jecxz
sbb
add
inc
leave
sti
sbb
jmp
ss
idiv
mov
sti
ret
xor
out
scas
cli
gs
push
aas
sbb
jo
xchg
cmc
mov
fwait
xchg
dec
mov
jecxz
adc
sbb
inc
pop
cmp
jnp
pop
addr16
outs
stos
dec
xlat
pop
fadd
dec
dec
or
jle
aad
out
mov
(bad)
sahf
loop
ja
add
stc
jne
ficom
lahf
cmp
mov
bound
and
fstp
mov
mov
inc
in
pop
xlat
cwde
inc
inc
add
or
sbb
jno
enter
jns
in
fcomp
arpl
je
call
sub
jmp
cmc
lea
adc
push
mov
into
lock
push
mov
jg
repnz
sti
aam
cmp
push
test
idiv
push
push
into
out
imul
pop
jae
xchg
and
mov
stos
jp
add
mov
cmps
sub
icebp
dec
inc
outs
popa
sbb
rol
or
mov
out
shl
xchg
lods
jns
mov
push
xor
xchg
mov
gs
push
add
inc
pop
dec
cmp
add
jecxz
xor
int3
lods
pop
mov
stc
leave
into
imul
inc
jnp
jns
ds
(bad)
psllw
pushf
bound
adc
leave
shr
aad
sbb
and
xchg
cs
xchg
push
test
movs
in
jns
(bad)
jno
loope
int
es
fild
xchg
data16
push
and
(bad)
pop
sbb
dec
cmp
popf
lock
dec
mov
scas
mov
test
fs
loope
or
ror
xchg
nop
outs
in
in
jae
dec
icebp
dec
es
fstp
enter
loope
push
in
xor
scas
xchg
jecxz
sbb
cmps
sub
mov
push
adc
inc
or
pop
push
les
ins
add
ins
pop
fcomp
jo
dec
dec
mov
mov
sub
cmp
pop
out
test
add
and
(bad)
cmps
inc
jbe
iret
xor
nop
inc
mov
pop
and
retf
jnp
mov
sti
pop
adc
xlat
and
or
or
pop
mov
jns
call
cmp
in
imul
js
aam
ret
fs
mov
hlt
popa
out
jmp
lds
loopne
mov
shr
int
test
jge
or
push
mov
fist
or
add
jle
push
mov
and
cmp
xor
mov
pop
adc
jmp
lods
sahf
sbb
test
mov
loopne
fstp
dec
and
popa
movs
aaa
cdq
jmp
(bad)
jmp
mov
xlat
jl
lock
call
inc
clc
mov
into
out
into
loopne
shl
xchg
push
jno
je
pop
ret
pop
mov
dec
xchg
and
sub
jl
(bad)
test
inc
in
leave
lods
adc
leave
and
pop
(bad)
cmc
dec
jmp
in
stc
push
lods
movs
xchg
push
imul
aaa
mov
in
push
or
mov
mov
or
and
xchg
push
sub
pop
into
ret
stos
fimul
loope
sbb
lock
pop
inc
sbb
fidiv
into
ror
mov
iret
inc
sub
mov
leave
pop
fs
lds
push
and
loope
daa
(bad)
push
jbe
jo
fwait
pop
dec
out
aad
loopne
fst
(bad)
or
sub
xchg
icebp
sub
ds
outs
jge
xor
clc
out
push
pushf
fs
push
add
push
or
push
sti
rcr
and
movs
pusha
cmp
ficom
push
lea
push
add
ja
and
cmps
or
xor
leave
xchg
mov
mov
test
push
dec
js
sub
pop
add
adc
lods
push
pop
gs
mov
inc
xchg
fldpi
(bad)
shr
(bad)
jns
inc
nop
and
fs
adc
pop
cmc
shl
and
add
and
pop
pop
mov
pop
cmp
add
fcomp
sbb
cmp
push
retf
mov
push
fstp
xor
int3
push
cwde
or
dec
mov
dec
mov
and
dec
iret
cwde
ficomp
and
imul
dec
repz
(bad)
pop
adc
pop
shl
cmp
push
inc
adc
push
imul
xchg
arpl
jae
repnz
out
sub
fcmove
movs
pop
ror
js
(bad)
sbb
ins
and
dec
js
in
inc
clc
push
dec
ds
stos
xchg
add
jo
jno
lods
pop
jmp
(bad)
mov
sahf
adc
jecxz
sbb
call
test
mul
in
xchg
or
or
lock
std
les
push
outs
pop
loop
or
mov
ja
sbb
stos
xor
or
(bad)
mov
mov
xor
inc
lods
sub
loope
jne
inc
xchg
add
ds
outs
and
ss
pop
add
dec
imul
loop
js
xor
jmp
and
ja
cmp
loopne
enter
pushf
mov
mov
scas
and
mov
mov
jb
xor
sbb
mov
xlat
out
push
jecxz
dec
mov
push
jle
pusha
cmp
cld
pushf
aas
mov
nop
sbb
ins
push
push
mov
xchg
add
sub
(bad)
jecxz
push
btr
call
add
cld
mov
ror
shl
xchg
or
cmc
push
cmp
mov
sub
nop
push
loope
add
out
sbb
clc
and
sub
fwait
xor
out
push
mov
xchg
jecxz
outs
stos
mov
jmp
lahf
(bad)
xor
imul
addr16
ret
mov
fsub
fdiv
pop
push
and
xchg
mov
or
cli
or
mov
jmp
adc
dec
xchg
nop
fild
push
mov
add
ins
or
pop
fst
xchg
cmp
pop
fwait
cld
repnz
fwait
sub
mov
das
stos
xchg
fldenv
xor
or
repz
add
loopne
test
stc
icebp
xchg
push
sub
push
int3
and
neg
or
gs
mov
xchg
or
and
in
jmp
pop
lods
aas
mov
(bad)
jmp
mov
mov
cmp
and
or
jae
test
inc
or
jmp
(bad)
shr
mov
xor
data16
mov
jbe
and
mov
aad
mov
ja
xchg
mov
dec
imul
jb
push
pusha
mov
push
lahf
test
(bad)
in
das
sbb
pop
test
fdiv
aam
xchg
bound
adc
aam
loope
mov
pop
xchg
scas
gs
test
clc
cmp
sti
fwait
test
popf
sahf
xchg
mov
mov
dec
(bad)
mov
not
out
shr
retf
aaa
mov
ds
dec
fwait
jmp
xor
(bad)
fwait
aam
xor
in
add
les
ror
jns
test
imul
fiadd
mov
and
jne
test
rcl
loopne
jnp
aad
fcomp
stc
mov
pop
sbb
(bad)
sbb
imul
rep
jle
xchg
and
sub
jno
rcr
inc
pop
jecxz
inc
gs
call
inc
add
pminsw
cmp
push
adc
movs
rcl
fdivp
push
or
mov
sub
cmp
imul
adc
cmps
popa
sub
stos
inc
or
js
int
cmps
ss
in
xor
inc
mov
pop
fisubr
jbe
(bad)
sub
pop
jmp
inc
xchg
(bad)
enter
mov
into
inc
or
inc
cmp
jge
or
inc
jmp
into
retf
sti
stc
sub
inc
xchg
cmp
or
push
(bad)
jle
mov
ins
and
xlat
bound
cli
and
and
mov
fwait
xor
sbb
cmp
pop
xchg
in
mov
and
popa
cs
mov
jno
(bad)
cmps
cdq
cli
add
sub
pop
dec
pusha
mov
ins
cwde
and
or
jo
aad
or
and
or
mov
dec
jnp
outs
jae
adc
ret
sbb
jns
push
jg
ficomp
setne
stc
clc
push
(bad)
movs
cld
pop
retf
mov
(bad)
xor
into
and
sbb
aas
and
js
add
mov
push
jg
imul
push
jb
out
push
retf
dec
mov
mov
movs
and
sub
inc
jge
mov
rcl
mov
daa
adc
mov
lds
movs
lock
fisubr
mov
sub
adc
fldlg2
push
fdiv
hlt
cs
cmp
pop
xchg
lea
cmp
sahf
xlat
sar
loop
adc
add
ds
mov
ins
(bad)
xor
sub
fld
(bad)
jmp
jb
dec
mov
cmp
cmp
mov
sbb
adc
div
inc
gs
cmps
mov
sar
mov
lahf
les
adc
xchg
les
les
and
adc
sub
xchg
gs
add
std
test
dec
(bad)
fadd
inc
lds
xor
call
in
xchg
xlat
push
loope
fldcw
stos
and
mov
scas
push
call
icebp
xchg
jmp
loopne
add
sub
sbb
out
mov
out
mov
mov
imul
xchg
(bad)
adc
sub
out
add
(bad)
outs
(bad)
jbe
pop
rcl
addr16
jne
int
pop
lods
sar
shl
outs
dec
retf
mov
ins
sbb
xor
push
push
int3
adc
call
mov
pop
in
rcl
push
cmps
xchg
imul
jecxz
in
(bad)
add
mov
or
ss
call
xor
xlat
or
push
ins
and
int
pop
stc
push
push
push
aas
add
dec
in
scas
sub
mov
lds
xchg
lock
push
mov
add
ffreep
dec
push
fwait
rcl
ror
and
xchg
xchg
jmp
call
aam
xchg
jns
pushf
push
adc
jno
je
push
out
jbe
or
sbb
inc
es
(bad)
test
outs
mov
add
mov
inc
cs
jno
scas
push
adc
push
es
std
sbb
dec
adc
or
cmp
and
sbb
fadd
mov
sbb
cmp
in
ja
repnz
inc
cs
pop
add
cmp
std
and
sub
lock
adc
inc
sub
mov
cmps
and
mov
and
lods
fnstsw
pop
dec
inc
(bad)
pop
sub
mov
push
aas
ins
jmp
loop
jbe
cli
and
int
(bad)
aaa
(bad)
adc
arpl
outs
mov
into
add
imul
xor
xor
mov
retf
mov
and
or
fiadd
mov
fbld
and
mov
sub
cld
adc
push
add
push
xchg
xchg
(bad)
fdiv
dec
retf
jle
sub
add
repz
shl
cdq
gs
aaa
(bad)
pop
retf
popf
dec
dec
scas
adc
xor
stos
test
ds
gs
loop
xor
scas
lods
ins
jae
add
es
cmp
pop
inc
sub
sbb
push
fldenv
shl
(bad)
adc
pop
inc
les
addr16
hlt
or
pavgb
mov
test
cmc
mov
push
mov
jmp
add
cdq
data16
cmp
jb
icebp
mov
dec
jb
xor
imul
sub
aas
test
inc
test
mov
push
inc
test
cmps
mov
pop
aad
not
enter
adc
mov
std
movs
nop
cwde
fimul
sahf
stos
mov
int
jae
lea
mov
pop
lahf
sub
add
in
xlat
pop
pop
cli
call
aam
ret
imul
jp
pop
int3
or
lea
sar
in
xchg
scas
gs
fistp
out
add
lods
pop
sti
inc
jle
popf
aas
cmp
into
sbb
jge
mov
and
mov
leave
sub
std
xchg
dec
hlt
dec
jmp
add
(bad)
jbe
dec
jnp
sbb
jno
push
retf
fistp
jbe
inc
in
xchg
xor
ins
push
mov
shl
jae
fistp
mov
lock
or
lods
ficomp
inc
(bad)
push
mov
test
mov
or
xchg
jne
js
pop
cli
jmp
(bad)
icebp
add
mov
leave
(bad)
mov
xor
jmp
loope
jp
jae
push
mov
fs
icebp
jl
mov
fsub
push
lock
and
popf
mov
cmp
push
mov
mov
test
add
add
pop
mov
dec
lahf
test
stos
movs
daa
int
loop
imul
mov
adc
in
gs
pop
retf
jg
xchg
cdq
clc
inc
sbb
jo
icebp
xlat
jo
cmp
cwde
inc
(bad)
fisub
cmp
pop
outs
mov
or
aad
aad
and
scas
jmp
test
lock
retf
mov
pop
imul
fcmovb
mov
js
jnp
add
mov
jae
pop
jg
pushf
xchg
pop
or
out
push
mov
cmp
dec
xchg
push
pop
xchg
pop
bound
es
loopne
or
mov
rcl
lods
das
mov
jecxz
add
loop
xchg
adc
mov
sbb
hlt
syscall
xor
(bad)
xor
or
popf
cmp
bound
mov
cmps
pop
pop
add
ds
mov
cmps
mov
push
fwait
pop
ds
adc
fsubr
in
mov
(bad)
lea
xchg
dec
and
out
ds
pop
jecxz
ret
push
pop
test
dec
jb
and
fbstp
inc
mov
adc
pop
out
jmp
mov
cmc
sbb
xchg
or
test
or
in
nop
cmp
xchg
pusha
pmullw
mov
add
jp
repz
xchg
pop
retf
test
cmc
scas
jbe
js
inc
xchg
repz
fistp
sbb
dec
ror
adc
and
jmp
fcom
(bad)
movs
mov
cld
les
pop
push
aad
add
cdq
stc
mov
dec
mov
fwait
and
pop
icebp
sti
mov
retf
sbb
or
add
mov
and
stos
out
rol
sub
add
sub
and
(bad)
out
inc
add
ror
mov
out
mov
je
xor
mov
xchg
push
rcr
loope
inc
push
ror
inc
inc
out
push
(bad)
call
pop
ds
xor
pop
sub
mov
js
push
outs
loopne
and
sub
mov
push
mov
mov
jp
xchg
ret
push
jl
movs
stos
nop
and
or
or
and
daa
push
pop
jmp
pop
int
out
mov
cs
repz
test
(bad)
rcl
cs
rol
cmp
out
pop
mov
call
aaa
int3
sbb
inc
lods
test
movs
retf
dec
cmps
inc
inc
call
pop
xor
ss
imul
push
pop
mov
test
xor
lods
gs
push
pop
jg
cmps
jecxz
ds
(bad)
mov
popf
inc
push
cmp
popf
dec
packuswb
inc
sbb
mov
add
mov
sbb
clc
bound
ds
inc
retf
das
(bad)
stos
data16
sbb
xor
lea
imul
lea
jne
mov
adc
aad
push
xchg
sbb
xchg
push
or
(bad)
mov
mov
repz
dec
jmp
fst
and
mov
mov
test
pop
mov
sbb
popf
mov
rol
adc
daa
jb
mov
pop
jl
shl
push
daa
enter
cmp
retf
getsec
(bad)
mov
(bad)
lea
push
add
sahf
cmps
push
es
pop
lods
das
ror
push
cmp
stos
sbb
shr
imul
std
out
loope
data16
mov
pop
push
in
shl
rcr
loopne
xchg
fnstenv
lea
fadd
or
shr
ds
fcmovnbe
pop
add
mov
outs
icebp
push
lods
cmps
xchg
popf
cmp
(bad)
fiadd
fsub
xor
jl
jns
xchg
cmp
data16
mov
leave
pushf
dec
mov
pushf
jl
in
pop
xor
mov
jecxz
cmp
cmp
sbb
adc
in
dec
ss
ins
aam
inc
mov
pop
add
mov
loope
adc
cmp
sub
xchg
xor
cmp
mov
cdq
jae
pop
xchg
cmp
inc
push
adc
loop
push
out
ins
mov
retf
jp
pop
mov
jno
push
mov
icebp
jg
jnp
cmp
dec
aam
mov
jb
mov
fmul
mov
cli
fistp
ins
loop
out
inc
(bad)
int
retf
pop
retf
or
lods
mov
pop
xchg
sti
add
sub
jle
neg
pop
test
jg
sbb
nop
adc
and
add
adc
es
es
test
cdq
lods
hlt
nop
(bad)
rcr
cs
lods
addr16
aam
jmp
daa
jo
(bad)
shl
push
jmp
mov
in
test
loop
fcomi
mov
cmp
inc
inc
inc
ins
mov
push
fisub
push
movs
inc
cli
pop
cmp
std
sub
add
jmp
and
in
nop
jb
cmc
adc
inc
(bad)
xor
pop
gs
xor
xor
fiadd
cmps
adc
(bad)
jg
mov
cmp
cmc
sub
pop
mov
push
gs
pop
lds
adc
and
aam
in
repnz
sar
ror
leave
jg
fstp
lds
pop
(bad)
push
pop
out
cmc
mov
icebp
pop
mov
xlat
pushf
ja
push
lods
into
scas
push
and
std
js
in
jnp
jo
das
cmp
or
movs
xsha256
cmps
push
sub
xchg
or
jp
in
xchg
shl
xchg
mov
mov
(bad)
pop
pop
xor
cs
repz
cmps
pop
stos
xchg
or
ds
jg
inc
adc
inc
aad
push
outs
mov
shr
les
arpl
icebp
jbe
sub
and
mov
sbb
gs
pop
ja
inc
shr
jo
sbb
mov
or
retf
(bad)
cmc
lods
leave
mov
daa
addr16
push
mov
imul
jne
js
jecxz
lahf
xchg
lea
(bad)
xchg
add
inc
mov
hlt
mov
sub
push
sti
jne
fistp
inc
and
sub
adc
dec
shr
pop
cmp
imul
pop
xlat
pop
adc
out
mov
sub
fwait
dec
retf
pop
cmp
and
fistp
mov
inc
(bad)
bound
mov
pop
loope
inc
xor
sbb
mov
mov
imul
xchg
push
sahf
cmc
or
sub
ins
or
sbb
into
stos
stos
cmp
mov
inc
fst
sbb
into
(bad)
out
jne
rcr
imul
or
fwait
push
and
or
cwde
data16
cmp
fcom
and
fmul
(bad)
in
jge
sub
xor
pop
inc
test
and
jnp
dec
ret
xor
(bad)
push
cmp
cmp
mov
(bad)
js
mov
or
in
lds
jno
(bad)
ror
jmp
aaa
add
push
adc
cmps
push
push
xchg
jle
aam
shr
xchg
stos
inc
ret
repnz
cmc
scas
mov
mov
jg
mov
mov
jno
mov
and
imul
mov
xchg
inc
pop
pop
sahf
xor
data16
out
mov
enter
jno
adc
jmp
mov
int3
sub
(bad)
sbb
ret
mov
js
adc
and
cs
mov
fnstsw
daa
xor
add
ins
int3
bound
in
repz
mov
fld
jno
mov
jns
mov
jnp
loop
test
or
mov
lods
jns
mov
mov
mov
mov
cmp
and
mov
idiv
adc
cmps
cmc
mov
inc
pop
add
sub
gs
add
jne
mov
jl
adc
pushf
add
rcl
dec
sub
sub
jecxz
add
movs
xchg
mov
sahf
retf
es
sbb
sub
inc
rcr
mov
aas
and
jmp
mov
dec
ror
add
daa
sbb
ficom
push
jmp
jle
retf
inc
xor
outs
(bad)
xor
icebp
int3
sbb
loop
addr16
ret
imul
and
cdq
cmps
pusha
icebp
test
fdiv
dec
xchg
jns
xor
jecxz
adc
cmp
jne
jmp
(bad)
sbb
or
mov
mov
ret
inc
imul
add
or
pop
imul
adc
pop
bound
sbb
scas
sub
ret
popf
mov
adc
sbb
xchg
mov
ret
mov
ja
bound
ret
push
jge
cmps
xchg
cli
movs
movs
push
and
clc
and
iret
mov
shr
(bad)
jmp
mov
arpl
inc
(bad)
mov
mov
popa
xchg
push
dec
jle
out
scas
fiadd
mov
test
xchg
mov
jns
pop
cmp
data16
dec
dec
cmp
and
call
cmps
je
pop
push
in
and
shl
jmp
(bad)
mov
mov
xor
(bad)
daa
lea
clc
cmc
mov
mov
dec
sbb
nop
mov
and
push
pause
idiv
mov
mov
adc
push
and
ror
jnp
mov
mov
stos
mov
cmp
xlat
movs
scas
inc
inc
lods
call
in
jmp
ret
pop
stos
lock
jne
pop
rcr
sub
add
add
or
in
push
popa
loope
add
xchg
and
(bad)
and
sub
out
mov
fcomp
mov
stc
fisttp
push
addr16
les
xor
mov
inc
dec
mov
sbb
jnp
fs
add
lds
pusha
js
jns
sti
inc
and
mov
jmp
sbb
aam
or
dec
in
loopne
aas
aam
inc
call
scas
dec
jns
movs
aad
mov
dec
aaa
mov
out
pop
popf
ins
pop
inc
jmp
gs
and
jmp
ins
out
pop
clc
test
jmp
shr
dec
jne
or
jb
fistp
dec
xchg
cmp
push
mov
arpl
push
pop
nop
and
stos
nop
enter
dec
js
pop
inc
jle
daa
jo
mov
cmp
lahf
inc
xor
test
xlat
stos
jb
ins
repz
call
stc
je
jno
pusha
cmp
xor
push
popf
inc
inc
je
push
push
xor
xor
jne
jmp
das
and
test
cmc
loopne
push
lea
fistp
pop
movs
mov
aad
lods
sbb
mov
ror
jle
lods
lods
(bad)
sub
sar
retf
push
or
or
mov
inc
leave
retf
je
dec
jle
sub
jge
or
and
dec
sbb
or
iret
cmp
std
push
cmc
daa
aas
mov
retf
mov
es
in
aam
ss
jle
inc
mov
mov
test
adc
adc
xchg
ins
shl
sbb
cmp
mov
add
cdq
aam
pop
bound
jl
mov
pop
lds
popa
xor
ret
dec
and
mov
or
fmul
jle
push
pop
test
xor
sbb
pop
nop
xor
mov
loopne
out
add
pop
push
mov
loop
iret
sub
iret
cmp
sti
and
add
jecxz
mov
leave
or
out
mov
mov
dec
or
mov
adc
call
pop
xchg
mov
jmp
rcl
xlat
rcr
mov
enter
shl
cmp
pop
xor
jmp
int3
rcr
ins
add
mov
cdq
(bad)
adc
push
jno
xor
add
imul
sbb
ret
in
leave
sub
dec
pop
push
jecxz
xor
mov
add
push
rol
xchg
cmp
mov
neg
in
out
(bad)
rcl
movs
jp
push
jge
mov
push
fnstenv
mov
shr
hlt
pop
mov
cmp
mov
add
daa
repz
ins
es
jle
outs
std
out
xchg
push
rcl
in
xchg
dec
add
and
xchg
cmp
sahf
xchg
push
popa
repnz
cwde
or
push
mov
outs
jmp
pop
push
(bad)
aas
repz
push
and
xchg
test
call
jbe
sbb
add
aam
push
ins
inc
pop
lock
jmp
in
inc
jmp
push
inc
imul
and
mov
out
xlat
scas
jmp
jns
rol
mov
sahf
not
jmp
push
sub
ds
xchg
ror
mov
xor
or
retf
retf
shl
test
daa
nop
rcr
or
inc
mov
push
shl
sub
xor
out
xor
push
call
ror
int
mov
mov
mov
and
and
aad
push
push
ja
mov
mov
adc
pop
push
sbb
pusha
add
sbb
lea
(bad)
mov
sti
jbe
push
xchg
cmc
push
xor
jmp
in
ds
push
shl
fldenv
movs
clc
cmc
push
fwait
jnp
loope
iret
jo
cmp
ret
jns
pushf
xchg
fs
push
add
or
sar
inc
hlt
or
idiv
and
stos
xchg
shr
lods
aam
outs
nop
adc
cmp
adc
jmp
mov
fcmove
pop
(bad)
das
lea
jnp
out
loopne
fldenv
mov
add
or
mov
stos
aad
clc
sbb
mov
test
lods
xor
rcl
sub
mov
mov
test
mov
pop
scas
jns
xchg
mov
ret
add
push
adc
(bad)
and
xor
or
test
cld
or
ss
xchg
ss
push
push
out
pop
test
jmp
push
fcmovbe
inc
jae
(bad)
mov
jl
pop
addr16
cmp
push
imul
pop
push
lock
cwde
inc
jb
push
aad
cli
pop
daa
outs
mov
movs
sti
xchg
adc
fcom
fdiv
dec
call
jmp
rcr
jecxz
int
and
jl
lds
cld
add
jns
jmp
ror
lods
cmp
lods
arpl
or
fwait
stos
shr
xchg
push
fwait
or
dec
adc
popa
dec
out
jo
pop
pop
add
ret
jmp
movs
push
push
mov
sub
mov
jecxz
push
pop
push
mov
cmps
ret
xchg
jle
xchg
daa
je
ror
cs
jg
and
ret
pop
xchg
ins
fisub
fxch
mov
or
aad
outs
jbe
push
xlat
pop
xchg
mov
data16
or
hlt
loop
cmc
fiadd
out
push
cmp
outs
push
shr
pop
es
adc
rol
mov
inc
mov
shl
push
mov
aas
call
aas
sub
mov
add
js
xor
lahf
in
nop
stos
test
sahf
gs
cmp
dec
or
pushf
cmp
sbb
cmp
sbb
cmp
lods
xchg
xchg
jle
gs
add
ror
jb
xor
mov
rcl
cwde
jbe
aas
pop
popf
lea
push
es
mov
mov
scas
push
or
jbe
popf
das
mov
cld
push
push
and
push
pop
mov
or
lea
mov
push
mov
mov
popf
jnp
clc
cs
stos
sahf
pop
mov
popf
jbe
pop
rcr
xchg
lahf
add
and
mov
aam
out
call
ret
mov
out
adc
outs
repz
sti
(bad)
neg
ins
cmp
fs
inc
cs
call
in
xor
iret
retf
push
rcr
adc
jg
and
sbb
pop
push
ror
and
mov
sub
aad
hlt
push
shl
repz
inc
(bad)
sbb
push
jge
mov
add
out
add
inc
(bad)
jecxz
and
aam
dec
jo
in
pop
mov
test
popf
cmp
xchg
mov
mov
outs
ins
call
mov
jo
sub
add
lea
push
jb
or
adc
ret
and
movs
pop
push
add
or
stc
pop
sbb
rol
pop
xor
mov
add
test
cli
(bad)
xchg
call
inc
test
jo
mov
cli
ins
pushf
sbb
aaa
fadd
outs
jp
fs
lahf
mov
out
adc
hlt
std
sbb
loopne
push
ret
sahf
jp
or
out
clc
outs
fs
lds
xchg
jle
test
cmp
outs
pop
sti
ds
mov
xor
int
cmp
retf
outs
cmp
je
or
iret
sbb
inc
out
jl
sbb
ja
adc
xchg
or
test
mov
sbb
pop
fbld
mov
outs
in
int
pcmpgtw
add
push
adc
pop
data16
stc
mov
xchg
idiv
sub
or
adc
mov
pminub
test
lahf
les
xchg
outs
mov
or
cmps
inc
jbe
mov
fisubr
mov
scas
and
retf
cmp
in
sub
sbb
cmp
icebp
inc
adc
or
add
jmp
pop
push
(bad)
pop
push
jne
dec
inc
cmp
mov
jecxz
test
jno
retf
and
lock
sub
or
mov
and
shr
mov
clc
stc
jge
cmp
pop
inc
jg
push
lea
and
mov
mov
jmp
xchg
and
dec
pop
nop
js
cmp
cdq
push
enter
mov
and
push
neg
icebp
fs
test
pop
add
mov
add
jae
fldcw
xor
inc
loope
jl
int3
lock
fcom
lods
adc
popa
sub
sub
xchg
cmp
data16
jno
or
and
cmp
cmc
xchg
dec
push
adc
add
add
movs
sbb
fsub
jb
inc
mov
test
dec
es
sub
sub
sahf
test
push
xor
(bad)
out
addr16
cmp
jle
jbe
jbe
popf
sahf
sub
sub
mov
(bad)
jmp
fld
imul
js
mov
adc
xchg
mov
cmp
inc
fwait
mov
lods
and
inc
cmp
jne
fdiv
fs
or
sbb
pop
jg
aaa
jle
or
xchg
imul
(bad)
loopne
cmp
sbb
adc
inc
mov
jbe
and
or
jmp
inc
cmps
es
or
fimul
loope
pusha
jno
pop
inc
lods
sbb
xor
mov
aam
push
mov
push
cdq
lods
sbb
int
out
adc
movs
mov
(bad)
inc
mov
mov
add
loope
mov
movs
mov
repnz
sti
adc
adc
retf
hlt
mov
or
div
push
jns
test
push
cmp
add
mov
add
movs
mov
adc
std
push
inc
jns
jle
sub
fld
test
mov
inc
fsub
xchg
xor
push
ins
add
adc
sbb
pop
jmp
or
push
dec
lahf
retf
cmps
jp
ins
push
xchg
repnz
pop
test
repz
fwait
aam
int3
lea
fisttp
sbb
push
(bad)
hlt
dec
xor
(bad)
mov
aam
jmp
pop
push
push
mov
into
movs
inc
cmp
push
stos
je
repz
movs
push
ins
test
xchg
xor
xor
and
frstor
lahf
add
js
test
mov
(bad)
je
cwde
cmps
mov
or
push
popf
inc
popa
rcl
push
or
shl
sbb
inc
popa
aam
and
mov
mov
push
dec
mov
clc
lea
adc
in
mov
repnz
das
pushf
ja
das
idiv
gs
cmp
and
out
jle
test
mov
fnstcw
adc
test
(bad)
xor
repnz
lds
mov
int3
sbb
or
mov
mov
fucomp
mov
mov
xchg
jecxz
and
mov
add
mov
das
push
xor
ret
out
cmp
cld
ins
ins
aam
nop
iret
push
dec
cmp
pop
adc
cmp
outs
and
sub
push
ret
push
cwde
or
and
dec
int3
sbb
and
push
pop
int
or
loop
fcomp
repz
lahf
xor
or
cs
xor
retf
jns
cli
cmp
push
popf
xor
dec
xchg
adc
(bad)
dec
test
loop
jne
pop
shl
cwde
mov
mov
mov
sub
pop
mov
mov
pop
sbb
sub
mov
xor
xor
fwait
sbb
mov
imul
and
jmp
dec
call
adc
pop
arpl
(bad)
xlat
int3
cmc
jle
(bad)
mov
inc
push
movs
scas
(bad)
ds
ret
js
adc
int3
fcmove
test
mov
inc
les
aas
add
stc
dec
mov
jns
mov
sub
iret
and
test
sbb
mov
mov
je
sbb
adc
lock
fmul
cdq
stos
test
lods
xor
dec
or
pushf
int3
fdivr
jge
sbb
je
adc
pusha
rcr
cmps
fild
xchg
mov
aad
aam
push
push
sahf
jb
imul
scas
and
push
mov
(bad)
sub
mov
dec
mov
(bad)
retf
retf
push
repnz
retf
push
lock
cmp
outs
cmp
das
int3
mov
rol
mov
ins
clc
jg
push
cmp
int
mov
or
ss
push
popa
jge
mov
push
push
fadd
sub
mov
inc
mov
push
mov
sbb
and
xor
mov
mov
xchg
out
seto
cwde
rol
mov
mul
add
loop
mov
sbb
adc
aas
pop
jmp
call
lea
or
fist
mov
push
stc
es
(bad)
popf
fistp
mov
mov
and
sbb
fld
cmp
inc
add
cmps
lea
loope
ins
sti
cmp
inc
dec
pop
ror
jae
pop
cli
pop
xchg
adc
xchg
mov
test
pop
enter
xchg
push
jp
stos
adc
inc
sti
push
(bad)
pop
fstp
sub
adc
dec
xchg
dec
mov
push
pop
dec
add
jbe
mov
rol
sub
(bad)
aad
xchg
popa
pop
mov
sbb
(bad)
sub
test
or
xor
repnz
dec
daa
cld
int3
sar
retf
sbb
imul
out
aaa
push
sahf
es
pop
mov
sbb
mov
stc
dec
push
loopne
call
mov
pop
jmp
in
sbb
stos
(bad)
popa
add
hlt
addr16
add
(bad)
stc
push
jns
test
gs
jmp
fucomi
ret
arpl
sub
outs
push
cld
and
cmp
add
cmp
pop
push
data16
xor
jae
sub
and
mov
lods
test
lock
xchg
adc
mov
repz
std
stc
mov
push
sbb
or
adc
js
scas
mov
lods
cld
mov
fnstenv
push
cmps
push
mov
sbb
pop
repnz
movs
fs
lahf
stos
inc
jg
mov
in
shl
aaa
inc
sub
xchg
js
bound
jo
in
xchg
dec
jl
mov
xchg
call
cmp
test
fisubr
addr16
and
mov
mov
fwait
adc
in
jo
push
push
ret
lds
loop
mov
sbb
mov
div
lahf
jnp
mov
scas
pop
and
inc
enter
cmp
ins
adc
lods
sbb
and
xor
aaa
outs
pop
iret
sub
stc
mov
in
dec
aaa
jne
inc
sbb
add
(bad)
push
mov
jecxz
xchg
test
das
adc
sub
test
mov
fsub
push
mov
jnp
jmp
adc
xchg
jno
fisubr
mov
sbb
es
pop
push
jmp
adc
lahf
aaa
scas
or
sbb
cs
stos
in
inc
add
bswap
shl
jne
sbb
jmp
popa
and
cwde
movs
xor
stos
cmps
scas
fld
sbb
test
and
pop
mov
(bad)
mov
xchg
out
mov
popa
sbb
fwait
jecxz
ror
jmp
pop
retf
cmp
in
and
mov
mov
(bad)
dec
lds
pusha
push
fdiv
adc
xchg
xchg
dec
fs
mov
inc
sti
adc
bound
pop
jnp
dec
and
in
cli
adc
addr16
and
mov
pop
sub
ror
and
mov
pop
test
xchg
sub
adc
sub
push
dec
cmp
sub
mov
popa
out
mov
(bad)
loop
push
and
adc
dec
add
mov
sbb
inc
addr16
sbb
jne
cmps
ds
adc
(bad)
jb
push
adc
jbe
cli
jns
sub
clc
add
sub
push
dec
shl
push
lods
inc
mov
jmp
jnp
fld
push
add
sbb
sti
xchg
cdq
ret
(bad)
xor
push
scas
cmps
push
push
mov
in
pop
or
sahf
dec
jae
(bad)
call
in
fdiv
cmp
mov
xchg
(bad)
sub
or
cmp
js
jb
jp
jmp
push
in
mov
inc
into
cmp
out
loop
jb
(bad)
cld
outs
int3
(bad)
or
push
rol
pop
jmp
(bad)
in
aad
fdiv
push
into
jp
add
cmp
adc
nop
mov
out
ds
sub
push
lahf
lgs
jmp
cmp
mov
idiv
in
iret
mov
jmp
sbb
jmp
das
push
dec
jae
or
xor
push
out
lds
ins
lock
sub
cmp
mov
mov
pop
test
shl
mov
inc
cs
and
xor
jne
rcr
mov
sbb
pop
arpl
sub
cmps
cmps
daa
dec
(bad)
xor
push
adc
sub
test
popa
adc
xor
push
ins
and
or
das
xor
adc
pusha
mov
add
ss
gs
mov
iret
sbb
repnz
cmp
fidiv
and
mov
sbb
repz
addr16
xchg
ss
adc
in
das
pop
sbb
mov
pusha
jmp
fst
xor
or
loope
jp
pop
sti
inc
and
inc
mov
dec
mov
mov
and
cdq
pop
aaa
or
sahf
fwait
add
pop
push
into
xchg
cdq
loope
stos
xor
jno
cmp
push
mov
cmp
fsub
fucomip
pop
mov
pop
or
sub
in
adc
int3
repnz
mov
jp
push
xor
in
or
aad
std
(bad)
push
fisttp
add
add
repnz
popf
xchg
movs
cvttps2pi
fadd
or
(bad)
cld
sbb
test
or
sub
xor
jo
das
cmp
data16
dec
or
pop
jae
pop
pop
xchg
mov
mov
jecxz
or
idiv
and
out
mov
jp
sbb
jl
xor
fs
xchg
out
jns
xor
jl
scas
cmps
pushf
or
jp
neg
fcmovnbe
inc
int3
jmp
sar
out
stc
pusha
cmc
jns
inc
call
pop
jns
sub
loope
cmp
mov
push
fcom
mov
mov
pop
stc
les
jl
js
pusha
aam
pop
push
jecxz
stc
daa
stos
xchg
mov
mov
push
popf
in
aam
dec
xchg
add
sbb
(bad)
or
js
push
mov
gs
scas
ret
scas
in
and
jo
add
sbb
sub
xchg
shl
sub
xlat
mov
in
aad
inc
cmps
lea
test
fcom
xor
repnz
in
cwde
outs
lea
inc
inc
dec
movs
jo
movs
add
push
shr
push
sahf
cmps
sub
lahf
jmp
stos
mov
and
movs
push
xor
hlt
sbb
sbb
jmp
fdivr
or
iret
pop
shl
scas
ror
xor
div
(bad)
fild
cmc
mov
dec
cmp
mov
lahf
inc
arpl
fwait
push
imul
fs
sbb
in
adc
cs
mov
mov
outs
mov
(bad)
icebp
fdivp
cli
imul
ins
pop
jae
int
cmp
ror
aaa
adc
mov
mov
ror
cmp
cmp
jmp
add
dec
lods
lahf
in
mov
aaa
pop
scas
fisttp
pop
sbb
(bad)
xlat
mov
das
cmp
add
xchg
xchg
sub
popa
stc
pop
cmc
cmps
(bad)
inc
add
in
fist
mov
lea
imul
lods
push
xchg
stos
movs
dec
leave
jge
sub
(bad)
(bad)
pusha
xchg
dec
imul
(bad)
movs
js
arpl
lock
fs
mov
stos
retf
div
loopne
movs
xor
mov
adc
xchg
call
mov
rcl
je
sub
les
mov
inc
inc
pop
cmp
lahf
jmp
sub
mov
cmp
sub
xor
jmp
jp
add
dec
test
test
inc
arpl
mov
lods
mov
xlat
je
aaa
iret
test
aam
in
fs
lds
and
pop
stc
push
lea
stc
xchg
mov
xlat
mov
gs
and
mov
inc
sub
scas
ret
int3
addr16
pop
jno
dec
out
adc
scas
call
js
inc
in
sti
adc
adc
jmp
mov
ins
popa
pop
jmp
xchg
mov
inc
cmps
sub
xor
push
dec
jns
adc
es
das
push
test
aad
ins
dec
push
inc
mov
loopne
sub
push
icebp
cdq
fild
or
ins
int3
sbb
scas
jns
push
cmp
bound
pop
fmul
dec
data16
jae
scas
(bad)
xlat
outs
bnd
retf
inc
or
mov
push
inc
pop
push
pop
ss
mov
adc
enter
(bad)
in
mov
xor
mov
jl
and
and
outs
in
fistp
or
ret
lahf
(bad)
mov
xchg
retf
lock
inc
dec
out
mov
fdiv
xor
arpl
inc
jae
push
push
inc
int3
aam
loop
adc
std
mov
jb
adc
loop
xchg
(bad)
or
mov
(bad)
cmp
std
add
(bad)
jbe
leave
and
mov
jmp
xor
xchg
ins
jle
fisttp
sbb
in
inc
or
cld
add
xlat
sbb
lea
jns
fidivr
in
mov
xchg
fld
repz
cmp
pop
fcomp
hlt
(bad)
lea
mov
adc
push
jle
iret
mov
(bad)
jg
xchg
adc
iret
jne
daa
push
out
leave
retf
mov
jmp
cld
popa
sub
out
pop
cmp
add
jnp
cmp
ret
mov
mov
call
push
and
xchg
div
int
(bad)
and
ret
jp
pop
push
cmc
sbb
mov
xchg
add
sti
add
cmp
nop
jmp
lea
jae
mov
mov
cmp
hlt
sub
in
pop
mov
repnz
jg
add
lea
mov
or
enter
mov
mov
inc
(bad)
dec
inc
(bad)
into
and
and
xchg
push
or
loope
push
bnd
push
jo
pop
add
pushf
and
pcmpeqw
xor
pop
sbb
push
xor
mov
sub
push
xchg
ret
mov
ds
and
jno
lock
mov
call
mov
pop
retf
inc
pop
clc
jl
lock
imul
stos
cli
adc
movs
add
int3
cmps
dec
mov
ror
rcr
and
add
(bad)
out
mov
inc
jl
sbb
adc
daa
mov
adc
les
xor
sar
jmp
inc
loop
cmc
pop
xchg
add
(bad)
sub
dec
test
imul
ret
int3
mov
mov
jmp
mov
adc
mov
in
and
in
scas
sbb
out
mov
add
dec
mov
stos
in
dec
arpl
push
call
sub
outs
icebp
in
fidivr
xchg
cmp
pushf
mov
(bad)
fild
push
out
sub
dec
and
cs
and
ja
(bad)
loopne
or
xor
loopne
out
push
repz
xchg
inc
bnd
sub
jle
inc
sbb
mov
ficomp
shl
es
ficomp
xor
sbb
data16
adc
outs
cmps
or
jnp
push
icebp
xchg
clc
retf
cmc
cmp
inc
jle
(bad)
out
imul
loopne
xchg
repnz
nop
or
pop
inc
and
sbb
rcl
mov
pushf
imul
sbb
and
mov
pusha
je
jne
shl
mov
mov
icebp
frstor
xchg
sub
push
xchg
jg
pop
fsubr
mov
(bad)
pushf
imul
xchg
cmp
mov
jnp
cmp
jbe
cwde
jno
stos
pop
push
jae
loopne
daa
jecxz
jmp
mov
xchg
popa
repz
shl
adc
ret
xchg
xchg
xor
dec
jo
cs
xor
stc
int
adc
push
dec
loope
inc
out
call
rcr
iret
call
gs
enter
sbb
adc
lods
push
sti
push
inc
or
adc
hlt
lsl
xchg
inc
xchg
push
sahf
mov
inc
mul
pop
retf
pop
out
push
add
and
xchg
xchg
aam
sbb
movs
cmp
jmp
not
ret
mov
stc
ins
inc
mov
icebp
cld
fsubrp
pop
ficom
outs
sbb
rcl
inc
mov
cdq
cmp
imul
xlat
or
jb
pop
loopne
inc
inc
fcomip
lahf
pop
(bad)
sahf
add
scas
dec
stos
nop
mov
int
(bad)
in
and
xchg
ss
and
cmp
sbb
adc
ins
sti
cmps
jne
pop
jo
xchg
stc
xlat
and
dec
fcomip
mov
cld
fbstp
push
loope
sub
mov
es
out
sti
and
arpl
mov
pushf
cmp
ins
dec
mov
add
shr
mov
test
xor
mov
push
mov
loop
popf
pop
xor
push
outs
sbb
sbb
lock
inc
scas
std
iret
xor
cmove
cmps
push
movs
or
(bad)
push
jno
aas
or
test
jmp
pop
mov
pop
(bad)
xchg
push
in
cmp
ror
test
into
sub
ja
mov
test
cmp
push
and
aas
jle
or
mov
cmp
pop
and
or
jp
xchg
xchg
addr16
inc
cmp
or
inc
xor
jbe
call
mov
nop
test
sub
sbb
imul
hlt
cdq
enter
or
mov
xor
movs
sti
ins
adc
(bad)
repz
shr
pop
in
mov
xchg
mov
ret
cdq
mov
es
into
test
retf
mov
or
stc
or
and
sti
xchg
leave
sbb
loop
imul
push
mov
cmp
scas
imul
daa
int3
dec
cmp
xchg
es
and
in
adc
adc
mov
call
pop
xchg
pop
xor
mov
mov
call
ja
outs
jl
and
movs
cmp
outs
int
sub
xlat
mov
mov
or
ror
into
test
test
jb
xchg
jg
retf
xchg
mov
fsin
(bad)
xor
outs
inc
pop
lods
adc
in
adc
popa
stc
dec
out
xor
mov
mov
in
leave
outs
pop
dec
jg
lea
test
xchg
or
sbb
cmps
xchg
rcr
ror
or
pop
dec
fs
mov
mov
or
mov
int
jo
push
add
fsubp
jg
sub
sti
in
mov
movs
or
out
jle
(bad)
test
cli
adc
sar
nop
rol
adc
sbb
mov
clc
imul
mov
loopne
mov
push
idiv
out
sbb
mov
out
cwde
sahf
add
dec
pop
push
dec
(bad)
xchg
in
inc
pop
(bad)
add
ret
push
lea
jle
xchg
cs
(bad)
data16
jmp
fwait
lods
mov
dec
push
pop
lods
add
pop
ins
mov
das
cmp
xchg
mov
add
adc
inc
mov
clc
out
(bad)
ror
sbb
push
push
sub
pushf
xlat
sub
mov
pop
pop
push
mov
dec
push
imul
imul
ret
retf
out
cwde
ror
jo
pop
in
xchg
gs
xchg
stos
sub
repnz
in
mov
xor
mov
jns
aaa
pop
pusha
pushf
data16
out
or
sub
or
push
xor
enter
lds
mov
fnstenv
mov
stos
imul
data16
mov
jo
repz
sub
inc
retf
or
xchg
les
push
cmp
call
mov
pop
or
cmp
xchg
sbb
add
mov
and
pushf
lods
out
xchg
clc
mov
fidivr
xlat
mov
cmp
loopne
jns
dec
ret
cdq
sub
stos
retf
cmps
inc
adc
ret
mov
fstp
stos
fisub
sub
jl
ficom
std
pusha
daa
or
out
cli
sub
jnp
shr
sub
jp
push
dec
mov
mov
movs
or
cmp
sub
fbld
cmc
sub
scas
test
cmp
sbb
and
or
mov
shl
ror
(bad)
ret
dec
xor
jle
mov
in
imul
dec
stos
or
push
out
pop
icebp
test
inc
push
mov
test
test
sub
cmps
push
es
or
sub
or
loop
cmc
bound
sbb
std
arpl
xchg
sub
fmul
iret
add
das
std
pop
sub
and
mov
jl
not
xchg
scas
daa
mov
add
imul
jmp
pop
leave
les
ja
shr
xor
(bad)
ss
hlt
dec
ffreep
add
inc
xor
xor
mov
in
push
push
ret
dec
nop
call
js
xchg
pop
hlt
mov
icebp
jnp
or
rdmsr
lods
push
mov
mov
imul
mov
lods
out
push
inc
fmul
sbb
arpl
or
in
push
dec
pop
cmps
(bad)
popf
xor
imul
repz
mov
cmps
cli
popf
es
into
gs
push
or
and
add
mov
push
jae
mov
mov
add
jg
jno
inc
cmp
push
mov
fsub
mov
sbb
inc
ss
movs
inc
pop
xchg
jg
scas
retf
dec
xchg
mov
jb
inc
adc
pop
sub
jmp
daa
cs
inc
cmp
and
out
or
call
out
pop
push
push
pop
push
pop
shl
xor
movs
leave
and
fisubr
les
adc
jae
test
dec
mov
test
mov
shl
cmp
pop
mov
cdq
or
jmp
movs
mov
jge
sahf
ficomp
lods
ja
adc
leave
or
adc
bound
pop
and
xchg
rol
push
lahf
jle
add
in
jle
cmps
(bad)
call
sub
and
adc
test
mov
retf
xchg
pop
std
cmp
xchg
ss
cmps
scas
nop
add
dec
in
ret
ins
jecxz
addr16
lds
outs
cmovns
lock
sub
add
sub
cld
cmp
adc
push
and
arpl
mov
jp
out
ficomp
stc
(bad)
or
mov
arpl
ja
out
pusha
cld
int3
inc
add
ror
iret
(bad)
xor
popf
arpl
sub
fadd
(bad)
cmp
pop
int
push
je
fs
adc
sahf
push
enter
int
idiv
sub
pop
test
sbb
clc
xchg
dec
jo
jae
hlt
js
mov
inc
dec
mov
mov
retf
jmp
mov
(bad)
out
jo
sbb
jnp
out
jmp
dec
cmp
arpl
dec
popa
mov
mov
imul
add
and
pop
mov
imul
jecxz
mov
retf
gs
adc
cmp
mov
or
push
push
xor
add
jge
imul
mov
adc
jecxz
add
cmp
mov
cli
push
sbb
ret
xchg
mov
mov
lods
dec
mov
lahf
cmp
pushf
mov
and
iret
add
jo
ins
stos
xchg
mov
fiadd
adc
jp
jl
adc
popa
out
jns
xor
mov
add
cld
pusha
xchg
xchg
popa
xchg
fbld
in
mov
and
xor
xor
sbb
stos
call
rcr
outs
sahf
rol
inc
popf
sahf
out
or
mov
mov
mov
popf
pop
mov
mov
mov
rol
(bad)
stc
mov
mov
repz
adc
sbb
shl
ss
jg
adc
push
and
sub
jge
pop
vpcmpeqw
or
pop
mov
fidiv
scas
mov
push
pop
fild
pop
dec
cmp
and
and
xchg
mov
int3
xchg
xchg
cmps
pcmpeqb
and
fs
das
adc
and
sbb
xlat
popf
add
mov
push
sub
push
mov
out
shl
and
jge
pusha
shl
jb
retf
cmp
xor
xchg
cmc
ins
or
repz
shl
or
repz
(bad)
adc
out
mov
xchg
pop
mov
je
jno
xchg
mov
(bad)
cmp
pop
fsub
mov
mov
fwait
retf
xchg
mov
cmp
jl
movs
outs
jns
pop
retf
adc
adc
adc
je
fstp
jp
add
dec
fidiv
xor
jmp
push
jmp
stos
mov
xor
sub
and
push
add
sbb
aaa
jns
mov
cmps
neg
jns
sbb
mov
pusha
dec
retf
push
jg
jns
cmp
aas
rcl
xchg
inc
xor
and
add
(bad)
sub
adc
arpl
jmp
sbb
emms
and
hlt
mov
shl
ficom
inc
mov
sub
mov
lock
test
mov
ja
div
ins
pop
and
push
bound
data16
ins
mov
push
(bad)
jne
repz
mov
call
or
xchg
sbb
sub
sbb
xor
rcl
cmp
mov
mov
or
jae
adc
sub
lods
pop
pop
outs
adc
ins
in
jmp
push
push
repz
push
test
inc
cmp
jnp
sub
and
ins
xchg
mov
(bad)
mov
ret
or
jge
into
pop
stos
(bad)
in
sub
adc
fist
mov
cld
push
fld
xchg
frstor
or
lods
ret
jbe
loop
jmp
xlat
inc
sbb
nop
stos
inc
dec
mov
sbb
ret
jge
lea
mov
clc
popf
fcom
sub
stos
sbb
popa
adc
lea
iret
mov
jae
or
ret
test
xchg
shl
out
call
outs
ins
stc
ja
(bad)
jmp
(bad)
shr
sub
cld
xor
fs
mul
mov
and
inc
sahf
call
lods
fucom
and
iret
sub
cmp
fiadd
sbb
adc
ja
jl
dec
jns
shl
imul
jo
cmps
(bad)
mov
mov
pop
outs
pop
sub
pop
cwde
xchg
ja
adc
fistp
out
aad
sbb
mov
mov
add
cmp
bndstx
gs
or
sub
in
repz
cmp
in
add
jae
(bad)
sbb
add
jle
aas
jecxz
icebp
push
test
pop
loopne
daa
xor
stos
inc
lods
sahf
das
ss
jmp
shl
repz
pop
(bad)
imul
jle
mov
cmp
and
mov
adc
xor
aaa
inc
xchg
xor
out
cmp
dec
xchg
xchg
mov
scas
xlat
inc
push
idiv
call
addr16
jns
pop
inc
jns
pusha
sub
outs
idiv
pop
xor
sub
retf
jge
cmp
sub
fistp
mov
loopne
xor
pop
out
xchg
mov
sub
mov
in
ins
rcl
sbb
fisttp
mov
stos
loopne
mov
dec
pop
repz
push
add
jge
in
mov
imul
inc
inc
mov
add
fisubr
jnp
jno
test
and
lods
cld
outs
sbb
adc
pusha
int
or
fs
cmps
popf
leave
add
hlt
loop
and
cmp
fs
ins
aam
js
and
pusha
xlat
sub
ret
cmc
xor
push
jmp
outs
xchg
mov
repnz
test
movs
pop
and
push
je
jp
sub
iret
ror
jo
jmp
xor
jmp
aaa
cmp
stc
imul
inc
inc
ss
push
enter
pop
clc
push
loope
cmp
xchg
into
test
mov
shl
add
jb
pop
lds
ja
mov
sbb
push
or
out
or
fist
cmps
mov
cmps
stos
aad
jmp
mov
in
call
inc
outs
daa
scas
stos
fidivr
pusha
imul
imul
and
xchg
fnstenv
jp
test
test
mov
je
faddp
jge
std
int3
or
xlat
sub
not
dec
loopne
xor
out
dec
ds
fwait
cdq
or
xchg
xchg
jle
push
mov
es
xor
sbb
add
xlat
or
loope
dec
jnp
js
shl
inc
and
scas
mov
fwait
inc
ds
dec
(bad)
loopne
fs
pop
mov
mov
add
outs
(bad)
scas
mov
lds
push
lds
cmc
loopne
outs
ins
xchg
adc
imul
mov
fidivr
popa
shl
or
push
(bad)
fs
mov
das
dec
inc
lea
xor
jno
mov
pop
les
mov
pushf
cwde
dec
xlat
pop
cmp
adc
out
test
xor
int
enter
fild
fadd
fstp
ins
ror
jo
push
add
out
test
out
stc
sub
movs
pop
jbe
mov
xchg
push
xchg
jo
cmp
push
mov
test
jmp
(bad)
dec
xchg
lods
test
cmp
gs
lds
outs
stc
and
jmp
fwait
cld
sub
(bad)
cmp
dec
pop
jne
cmp
sub
call
mov
movs
repz
xchg
loop
xor
es
mov
pop
popf
aas
fs
inc
out
mov
xchg
shl
cmc
mov
adc
push
push
call
and
mov
xchg
(bad)
xor
imul
xchg
pop
mov
scas
test
xor
and
stos
mov
loop
jle
test
sbb
(bad)
clc
dec
sbb
loopne
inc
mov
out
push
add
call
movs
add
pusha
bound
shr
sub
lods
hlt
clc
cmp
jns
sbb
in
dec
fwait
jl
cmp
adc
inc
nop
popf
rcl
pusha
jne
sbb
jnp
cmps
and
dec
test
mov
pop
sub
in
std
dec
in
inc
mov
sbb
pop
sub
ret
hlt
push
dec
push
outs
loop
enter
mov
std
xor
leave
out
cs
std
mov
inc
retf
fcmovne
jae
clc
mov
imul
rcr
ficom
outs
pusha
xor
and
dec
add
jo
scas
bound
test
test
mov
mov
add
push
std
jg
sahf
dec
dec
pop
inc
push
ins
ret
nop
xor
neg
mov
mov
dec
mov
push
sub
stos
push
xor
lods
push
dec
mov
xchg
jne
retf
dec
cmp
sti
mov
mov
push
imul
dec
out
psubq
(bad)
std
into
mov
popa
outs
dec
xchg
mov
lahf
cmp
pop
push
daa
or
mul
jecxz
leave
popa
lahf
xchg
jecxz
lock
mov
loope
test
or
imul
cs
jle
inc
out
inc
mov
mov
pop
mov
wrmsr
jp
xchg
add
loopne
push
fcomp
push
push
pop
jo
js
jmp
inc
(bad)
jmp
fisttp
or
dec
fldenv
nop
inc
sub
je
jo
mov
jno
aam
(bad)
cmp
loop
mov
loope
scas
dec
mov
enter
jle
or
xor
mov
adc
addr16
adc
fadd
or
dec
jne
cmp
test
pop
gs
mov
xchg
mov
mov
and
dec
xor
mov
dec
jo
adc
cwde
lahf
aad
mov
enter
lods
lahf
(bad)
push
icebp
inc
inc
sar
test
add
stos
xchg
xchg
retf
and
rol
repz
inc
xor
jmp
adc
movs
inc
aam
xlat
xchg
mov
cmps
pushf
sub
dec
into
mov
sbb
sbb
cmps
ret
loop
jno
outs
loope
lock
outs
xlat
shl
les
pusha
arpl
sub
xchg
inc
or
loopne
pop
adc
ror
add
jne
pop
iret
jno
mov
(bad)
sbb
(bad)
xchg
jns
repnz
out
fst
shl
sbb
or
js
movs
das
and
dec
cmps
sub
jecxz
cmp
ret
xor
dec
push
mov
xor
out
cmp
xchg
scas
and
xor
jnp
neg
dec
inc
mov
adc
pop
or
pop
lea
gs
pop
mov
add
push
(bad)
mov
push
push
ins
jmp
int3
fcompp
cmp
or
cmc
repnz
xchg
mov
ins
inc
in
movs
aas
in
test
pusha
sub
sahf
push
xor
addr16
mov
lods
out
or
or
(bad)
pop
vmovdqu
gs
xchg
mov
loope
(bad)
in
sbb
cmps
pop
inc
push
fild
rcl
clc
sahf
and
dec
jne
cli
jg
or
loopne
dec
cmp
data16
loop
das
aam
js
leave
mov
cmp
je
rol
fdivr
hlt
fadd
test
cmp
cmp
pop
jmp
add
pop
and
adc
leave
adc
retf
movs
pop
jmp
test
les
lock
mov
arpl
clc
(bad)
jns
jl
dec
retf
cld
stos
clc
(bad)
rcl
fdivrp
test
ret
and
pushf
pop
adc
cli
pop
std
or
xchg
xchg
push
loopne
pop
jmp
or
sub
xchg
dec
lds
inc
sub
dec
clc
(bad)
and
aaa
jnp
push
jecxz
and
lods
mov
push
or
(bad)
shr
add
inc
dec
mov
xchg
test
enter
mov
repz
popa
mov
or
fdivr
pop
and
pop
sahf
mov
mov
sub
pop
gs
popa
mul
cmc
mov
push
and
les
mov
dec
(bad)
retf
push
popf
fiadd
add
and
call
fst
sbb
ins
cmp
mov
cmp
pusha
js
sub
ja
push
dec
xor
nop
mov
dec
dec
sbb
loop
shl
adc
cmp
mov
loop
cmp
and
jbe
daa
xor
or
cmp
mov
lds
ja
mov
loop
mov
cmp
dec
rcl
(bad)
pop
pop
xor
inc
lods
imul
xchg
fisttp
jecxz
lahf
sahf
outs
(bad)
pop
fidiv
in
sbb
jne
(bad)
adc
dec
adc
jg
idiv
dec
jo
lods
push
imul
fistp
dec
psubd
mov
ja
or
inc
xor
aam
lods
cmp
mov
sti
pop
inc
pusha
xchg
out
into
add
mov
sbb
outs
cmps
mov
jno
adc
es
rcl
inc
ret
push
pop
add
lds
dec
mov
out
and
les
fld
sahf
inc
xchg
in
fimul
fisttp
push
popf
xchg
jmp
lahf
lahf
pusha
inc
add
push
xchg
dec
arpl
popa
jle
je
jo
xor
add
xchg
add
cld
adc
add
lahf
lahf
sub
bound
shr
push
dec
mov
ss
push
jnp
mov
push
pop
rcl
nop
out
leave
xor
mov
or
jmp
xchg
das
xor
retf
lahf
inc
rdpmc
aaa
bound
mov
push
into
push
sbb
sub
mov
cmps
rol
cmp
inc
and
dec
in
out
xchg
cmps
aas
cs
test
mov
mov
cmp
add
push
outs
inc
je
jecxz
mov
xchg
lods
(bad)
test
push
stos
xchg
cmp
push
xchg
sar
rcr
sbb
es
jae
add
push
mov
mov
ins
fdivp
jbe
add
mov
add
xchg
xor
sub
cmc
cmc
(bad)
ds
pop
push
enter
xor
mov
jne
xlat
fild
and
inc
push
mov
imul
jl
fstp
(bad)
mov
xchg
sub
mov
clc
call
scas
mov
xchg
mov
jl
fmul
test
int3
jns
cli
test
inc
xchg
push
xchg
sub
loope
xor
imul
(bad)
test
mov
pop
add
loop
xchg
push
xor
and
pop
mov
test
(bad)
fdiv
mov
sub
dec
sbb
cdq
test
enter
in
rcl
(bad)
and
(bad)
sti
cmp
pushf
pusha
lods
pusha
test
mov
push
loopne
mov
mov
popa
add
mov
stos
fisubr
outs
ss
add
adc
sub
mov
ss
or
inc
shl
out
lea
push
cmp
pop
(bad)
xchg
jmp
push
mov
pop
loop
out
mov
fs
repnz
jnp
fcomp
mov
mov
push
sbb
push
movs
sub
vpunpckhbw
mov
sbb
cmps
dec
inc
arpl
fst
pop
inc
outs
sti
je
xor
ror
cli
cmp
push
jmp
mov
mov
mov
(bad)
sahf
push
adc
test
cmp
outs
repz
(bad)
cli
pop
jle
cdq
lahf
repnz
mov
test
cmps
inc
xchg
mov
xchg
xor
push
adc
js
or
push
out
mov
jo
dec
mov
iret
xor
push
sbb
stos
out
sti
into
fs
jno
(bad)
jb
dec
or
shl
lods
cmp
leave
(bad)
shr
xor
inc
pop
icebp
xor
sbb
cdq
repz
fidivr
test
push
or
mov
ds
mov
xchg
lods
(bad)
lods
jbe
xchg
pop
jnp
rcl
jl
cmp
xchg
push
mov
xor
mov
pop
clc
clc
push
cmp
or
and
fwait
sub
push
jno
jl
(bad)
ds
cmp
xor
or
push
push
xchg
hlt
push
xor
pop
adc
mov
adc
adc
pop
ret
js
jne
cld
mov
and
mov
sbb
pop
gs
mov
lahf
clc
or
push
js
shl
leave
dec
pop
or
test
cmp
leave
xor
jge
mov
int3
jmp
and
adc
shl
sub
sahf
fucomp
and
add
pop
cdq
out
adc
(bad)
sub
int
xchg
mov
jo
fmul
cmp
cld
(bad)
mov
xor
sub
rcl
adc
in
lea
into
inc
mov
bound
adc
jmp
cmp
(bad)
neg
dec
or
mov
sbb
loop
add
push
ds
add
adc
in
sbb
stos
pop
ret
jbe
mov
imul
cmp
test
dec
cmp
cs
sub
loope
aad
xchg
sbb
imul
cmps
(bad)
xchg
(bad)
mov
xchg
int3
mov
mov
cld
dec
pand
lea
stos
sub
xlat
in
cmp
push
cmp
stos
imul
cmp
mov
mov
mov
xor
ror
(bad)
inc
sbb
pop
xor
pop
outs
push
add
xor
adc
rcl
rcl
xlat
out
mov
movs
xchg
sub
cli
test
ins
lea
outs
mov
sub
test
cmps
js
lock
cwde
adc
(bad)
mov
jne
push
daa
jmp
popa
sbb
test
(bad)
pop
ja
clc
test
sbb
push
lods
jmp
add
add
je
xchg
sbb
ds
fs
push
mov
out
in
xor
xchg
mov
xor
xor
and
sbb
jae
inc
fsubr
jb
push
int
xchg
sti
(bad)
pop
or
jo
or
rcr
cmp
push
neg
mov
je
jge
and
jnp
adc
xor
jge
mov
(bad)
test
dec
cdq
fistp
push
push
sub
lahf
fs
sub
add
xchg
sbb
fbstp
clc
mov
shl
mov
icebp
push
dec
and
xchg
sbb
test
xchg
iret
leave
out
cdq
sub
mov
addr16
lahf
cmp
aad
loop
push
lock
je
jecxz
jecxz
daa
sbb
adc
jmp
enter
push
loope
push
stos
or
pushf
ret
jae
push
loope
add
sub
dec
cli
push
sbb
cmp
pop
and
(bad)
cdq
adc
mov
mov
xchg
inc
popf
ds
and
mov
pop
add
push
mov
add
push
push
mov
bound
call
fld
push
jne
retf
push
ret
xchg
jp
cwde
mov
xchg
in
and
cld
fstp
jnp
aad
fldcw
sbb
icebp
sub
or
xor
fnstsw
cmp
movs
xchg
pop
push
iret
data16
push
jbe
(bad)
jp
lds
sbb
arpl
inc
xchg
int
addr16
clc
leave
inc
inc
dec
in
adc
jl
fild
xor
xchg
jl
aaa
cmp
stos
stc
pop
mov
jp
adc
add
xchg
pop
mov
call
dec
cmp
mov
inc
or
adc
jno
stc
push
out
psrld
call
mov
pop
out
loopne
adc
xchg
leave
push
mov
adc
mov
inc
xchg
pop
jae
or
fldlg2
and
adc
cmp
idiv
and
jnp
adc
fidivr
(bad)
call
fsub
(bad)
pop
(bad)
pop
test
jb
scas
cmps
popa
sub
ret
pop
fimul
outs
(bad)
mov
fcomi
clc
mov
out
ret
jmp
or
adc
not
mov
xor
fdivr
ja
push
sbb
mov
int3
in
sub
mov
iret
jmp
inc
je
scas
not
std
call
mov
fs
push
shr
jp
xchg
mov
adc
imul
mov
ins
(bad)
push
gs
xchg
scas
stc
retf
sbb
jmp
les
inc
idiv
in
gs
div
add
clc
mov
dec
add
les
jmp
xchg
or
pop
rcr
pop
fisub
add
and
push
mov
xor
and
ins
push
mov
cmps
pop
jecxz
dec
out
mov
out
push
aad
jbe
ss
lock
push
pushf
imul
pop
popf
and
nop
or
cmps
hlt
rcr
mov
sbb
in
outs
(bad)
push
jg
xchg
or
dec
mov
jle
mov
jns
sahf
and
scas
je
pop
aam
push
ds
sub
loop
popa
ins
js
cli
(bad)
lock
pop
inc
fs
xor
rcl
xor
repz
inc
sub
ins
adc
mov
jnp
sbb
iret
int
mov
jg
js
or
mov
ss
dec
movs
addr16
or
aam
(bad)
add
add
je
test
and
pusha
pop
out
jnp
jbe
pop
dec
jge
xchg
mov
jp
pop
daa
out
mov
in
jecxz
cmp
arpl
scas
call
sti
sbb
pop
sti
mov
iret
out
inc
cld
(bad)
std
xor
hlt
cmps
dec
sbb
cmp
sbb
push
repnz
cmps
inc
outs
jecxz
movs
movs
retf
push
int3
mov
pop
mov
into
call
dec
fcmovnu
icebp
jecxz
movs
push
sub
stos
pop
jb
fstp
xchg
call
xchg
inc
ins
jg
push
mov
movs
cwde
xor
inc
inc
stc
in
test
jl
into
push
leave
loope
fadd
shr
dec
fild
dec
mov
retf
push
adc
dec
jae
or
cmc
inc
pop
sub
in
dec
daa
dec
mov
aaa
clc
sbb
psraw
aam
mov
mov
pop
mov
test
jbe
pop
mov
movs
paddw
outs
sti
dec
hlt
xchg
addr16
iret
mov
lods
xchg
add
pusha
adc
inc
xchg
jne
pop
pop
imul
adc
stc
je
(bad)
call
ins
mov
gs
nop
ds
aas
or
push
(bad)
pop
scas
call
hlt
xchg
in
shr
lea
push
loopne
outs
xor
fwait
js
imul
cmps
fist
lds
fs
jg
jge
movs
push
sub
cmp
mov
xchg
fadd
mov
jns
xor
mov
inc
xchg
rcl
mov
popa
ins
mov
jle
pushf
pop
ja
fcom
inc
or
cs
or
adc
inc
pop
inc
mov
in
cmp
aas
and
jno
pop
fdiv
sti
ins
aaa
xor
push
jle
sbb
(bad)
iret
mov
sub
or
stos
fistp
inc
pop
test
test
mov
pop
aad
push
loope
in
test
add
and
xchg
push
aad
xchg
jb
dec
sub
f2xm1
cmps
lahf
mov
daa
fcmovnbe
or
div
dec
shl
(bad)
ror
jge
sbb
mov
daa
sbb
test
xchg
movs
in
loopne
and
xchg
or
mov
push
les
(bad)
in
fsubr
cmp
jecxz
shl
aam
gs
dec
xchg
mov
pop
inc
mov
sub
mov
je
out
daa
imul
out
cmp
and
imul
lock
and
fcom
lds
adc
sbb
mov
xchg
cld
aad
(bad)
dec
mov
jmp
fsub
mov
test
retf
dec
sbb
shl
xchg
ficomp
sub
or
cwde
adc
and
cmp
dec
jmp
sub
adc
jmp
or
xchg
out
sub
bound
jle
repnz
sti
out
xor
mov
outs
push
mov
scas
xchg
mov
pop
imul
pop
cld
out
mov
jnp
out
cmps
jb
mov
aad
sbb
icebp
call
jbe
lds
out
mov
jmp
pop
outs
cmp
mov
std
stos
les
ret
xlat
div
and
xchg
add
test
adc
adc
cmp
and
in
cmps
clc
jne
dec
sti
mov
mov
inc
push
out
mov
imul
adc
repz
sbb
xchg
mov
pop
push
xor
mov
dec
xlat
push
mov
dec
sar
daa
jmp
cmp
xor
out
xlat
pop
pop
push
mov
adc
scas
retf
leave
jg
mov
cmp
scas
xor
inc
call
push
cmp
dec
pop
mov
mov
xor
mov
das
mov
pop
ins
cmp
fcomp
fnstcw
xchg
inc
sub
adc
mov
data16
fcom
xchg
mov
mov
push
jno
mov
jp
shl
stos
mov
push
jbe
pop
cmps
les
xlat
and
cld
xor
(bad)
pop
inc
jbe
ret
or
xchg
jo
or
mov
xchg
sub
inc
popf
scas
ins
xlat
ins
mov
xchg
xchg
jmp
lahf
push
popa
pop
add
jae
sbb
neg
jo
sbb
push
into
dec
fwait
rcr
dec
pop
push
or
outs
dec
jo
and
iret
outs
mov
into
sahf
ret
mov
xor
fwait
mov
pop
(bad)
movs
cmp
cdq
cld
and
add
add
xchg
popa
mov
inc
aam
cwde
dec
clc
push
jp
dec
retf
cld
popa
je
fs
retf
arpl
cs
push
enter
or
adc
xor
inc
cmp
mov
ds
sbb
pop
push
sbb
aaa
cs
(bad)
pop
pop
rcr
pop
fsub
mov
dec
inc
mov
outs
pop
ja
adc
jmp
scas
add
and
cmp
add
rcr
lods
add
in
hlt
in
sbb
loop
and
movs
dec
shr
jae
cmps
mov
test
leave
and
lahf
inc
aas
nop
pop
in
sub
cmp
xchg
mov
mov
out
mov
push
jge
je
pushf
ins
dec
rol
mov
and
add
cli
or
ja
dec
xchg
mov
pop
xchg
aaa
cli
idiv
xchg
mov
sub
add
gs
jnp
jge
jmp
mov
fdiv
cwde
(bad)
sti
push
push
mov
retf
mov
aaa
jo
inc
mov
iret
inc
stos
sahf
jmp
jbe
or
test
xor
dec
cmps
xchg
in
outs
gs
xchg
mov
fs
xchg
scas
scas
aas
adc
lods
add
mov
pop
xlat
and
fld
xor
add
ret
cmps
lea
mov
aaa
xchg
mov
mov
xor
add
lods
sbb
or
ret
push
hlt
xor
add
int3
stos
add
mov
push
mov
lds
add
mov
je
repnz
pop
jno
add
pop
add
dec
sub
push
pop
daa
pop
push
sbb
jne
aaa
xchg
imul
shl
push
rcl
pop
xor
pusha
loop
pop
and
xor
or
in
movs
cmp
xlat
push
fsub
mov
call
push
xchg
aad
retf
hlt
xchg
cli
pop
cs
and
jle
jno
sub
cmps
mov
jbe
in
pop
mov
sub
push
xor
jne
paddusw
pushf
pop
xchg
je
dec
xchg
adc
inc
add
adc
jb
inc
packuswb
mov
out
adc
mov
enter
iret
lods
dec
add
retf
aad
mov
pusha
das
aam
jmp
and
and
test
xchg
shr
jp
mov
test
dec
cmp
jle
add
test
jge
inc
sbb
nop
mov
mov
cmp
cmp
xlat
clc
jmp
mov
fs
sbb
inc
jns
jo
or
adc
push
(bad)
jmp
xchg
pop
cmp
mov
scas
into
jecxz
inc
mov
fsubr
cli
xchg
xchg
xchg
jnp
jns
cs
(bad)
push
loop
or
aam
lock
js
inc
lea
dec
sub
xor
sbb
gs
sub
and
xor
fcomp
xlat
push
sbb
jmp
aas
inc
addr16
mov
jnp
adc
nop
out
enter
and
imul
adc
das
mov
adc
mov
push
xchg
mov
addr16
test
xchg
les
in
(bad)
pop
sti
enter
jge
mov
cld
jg
cmp
sbb
xor
mov
lods
rol
jne
sub
sub
push
icebp
push
and
retf
gs
mov
aad
push
cmp
adc
in
sbb
pop
jmp
out
in
pop
stc
xchg
mov
mov
or
inc
test
aad
mov
das
and
gs
pop
pop
mov
push
ret
and
repnz
(bad)
fs
pop
out
out
xchg
clc
int3
not
add
repnz
jg
cmp
call
fwait
shl
lea
inc
cld
movs
jbe
das
or
movs
inc
mov
ffreep
pusha
in
aam
daa
dec
icebp
test
dec
(bad)
or
ds
scas
cmp
adc
push
fistp
cld
(bad)
xchg
or
js
pushf
scas
stc
fstp
std
add
ret
mov
rol
xchg
or
ret
test
mov
push
out
dec
scas
fbstp
aas
and
cmps
pop
xchg
cwde
mov
xor
cs
sub
neg
xchg
pop
rcr
mov
jns
adc
dec
(bad)
push
repnz
fs
pop
pushf
or
push
aaa
aad
pop
mov
cmp
xor
and
xlat
imul
mov
xchg
pop
lds
leave
or
or
xchg
mov
pop
sbb
xor
mov
sub
mov
les
mov
mov
jne
xor
pop
xor
push
hlt
push
and
fnstcw
jmp
leave
nop
xor
dec
xor
mov
sub
cmps
or
mov
dec
jp
int
inc
mov
dec
xchg
sub
lahf
mov
inc
popf
cs
shl
imul
lock
or
push
add
pop
lea
xchg
fld
push
inc
push
aad
in
or
std
jmp
cmps
push
loop
push
enter
cdq
xor
cwde
jmp
ss
and
xchg
int
cld
xchg
imul
or
shl
pop
adc
fisub
inc
dec
inc
in
mov
ja
scas
mov
jbe
stos
cmp
push
retf
cmps
leave
cwde
add
lock
popf
adc
icebp
cmp
iret
mov
(bad)
mov
mov
aam
jg
test
mov
enter
lahf
ja
data16
and
mov
cmp
pop
ror
mov
pop
jbe
sbb
(bad)
mov
sub
xor
or
mov
adc
dec
inc
lea
adc
icebp
fidivr
or
test
loop
cmps
jecxz
cld
in
retf
adc
jno
sbb
sub
cmp
popa
into
js
mov
fsub
ds
fadd
adc
lock
punpckldq
mov
mov
(bad)
retf
stos
mov
pop
(bad)
std
mov
or
sbb
mov
push
mov
aad
mul
add
je
fdivrp
adc
xchg
or
outs
mov
cmp
addr16
mov
stc
shr
fistp
fwait
push
xchg
jmp
xchg
push
jmp
sub
cmp
(bad)
jnp
cmps
push
xor
jge
jnp
out
fdivr
stos
mov
mov
adc
pop
sub
data16
scas
(bad)
clc
loope
das
jmp
aaa
rcr
xor
push
jmp
cmp
adc
sti
stos
pop
pop
icebp
and
or
mov
or
pop
outs
(bad)
inc
daa
sub
add
lock
xchg
jmp
ss
sahf
push
ins
add
xlat
aad
sub
clc
inc
call
sub
cdq
lahf
xchg
stc
adc
mov
mov
fsub
xor
mov
test
xchg
ins
rep
push
clc
pmaxsw
dec
or
xchg
cld
mov
mov
pop
and
mov
dec
dec
rcl
inc
test
out
ss
push
sbb
nop
in
aad
sbb
adc
pop
or
xchg
dec
rcl
adc
(bad)
jp
push
jo
dec
pop
jne
pushf
fmul
mov
mov
rcl
call
sub
pop
das
sub
or
test
sub
inc
inc
int3
aas
xchg
add
mov
mov
pushf
repnz
inc
cmove
hlt
lock
and
jnp
shl
inc
push
ret
jno
outs
xor
and
add
ins
push
pushf
iret
push
add
xchg
out
stos
jge
imul
xor
in
and
outs
out
repnz
push
popa
stos
int3
mov
fcom
int
sbb
jge
(bad)
pop
inc
push
ror
jno
sub
sbb
fdiv
les
push
loop
pop
or
out
pop
imul
jg
inc
cmp
popa
xchg
ins
call
ret
xor
call
in
cmps
jb
or
and
(bad)
inc
out
jp
shl
pop
dec
repnz
and
mov
jmp
jecxz
cdq
or
fs
jae
sahf
sub
imul
bound
test
sahf
xchg
dec
out
daa
dec
push
fscale
dec
scas
sub
in
pop
ret
aaa
mov
fcmove
ret
sbb
cs
(bad)
or
rcl
mov
pop
sub
sbb
rol
xor
fisttp
mov
push
test
neg
icebp
shl
inc
sti
mov
imul
jae
xor
test
jnp
je
cmc
cmps
push
mov
fmul
movs
rcr
add
iret
imul
pop
lods
not
fsubr
adc
cli
pop
or
ins
push
pop
push
push
jbe
jb
test
shl
mov
pusha
popf
push
add
call
es
arpl
push
and
adc
pusha
stos
inc
xor
fld
xor
dec
sub
xchg
outs
xchg
sar
mov
aas
test
inc
sub
add
sub
xor
dec
rcl
sub
sub
inc
ret
ror
dec
xor
cs
adc
sbb
fisttp
mov
stc
int
push
lea
lods
out
xchg
fstp
mov
and
pop
mov
xchg
cmp
outs
popf
scas
mov
mov
loop
lock
inc
sbb
aam
jmp
inc
jmp
ror
add
push
xor
adc
dec
in
adc
stos
inc
push
movs
cs
dec
inc
adc
inc
mov
gs
scas
cmps
xor
adc
sub
pop
(bad)
or
xor
jne
ss
xchg
jnp
push
push
mov
lods
cmp
push
int
pop
sub
fwait
jle
aad
div
lds
sbb
es
in
inc
ret
jp
(bad)
int
sub
and
out
lods
pop
xor
mov
or
dec
addr16
shl
rcl
adc
cs
and
cmc
out
mov
inc
into
inc
push
(bad)
cmp
fs
fistp
jne
retf
adc
jge
pop
and
sar
call
test
jge
mov
mov
jmp
mov
adc
or
lods
in
sub
cmp
pop
sahf
loop
sbb
mov
outs
in
fdivr
cld
dec
clc
movs
inc
pop
and
inc
ins
mov
mov
adc
mov
popa
or
rcl
lods
sub
leave
and
jae
ja
mov
pop
and
mov
mov
jecxz
adc
jne
push
pop
jmp
fdivr
das
mov
and
lahf
pop
pop
sbb
sub
pop
or
dec
out
sub
cld
repz
cmp
mov
add
jp
xchg
xor
out
jg
mov
push
add
pushf
inc
push
daa
mov
pusha
push
aaa
jnp
int3
or
mov
push
fimul
push
mov
cs
add
scas
cmps
dec
gs
sti
not
xor
sbb
jbe
add
mov
and
mov
xchg
xchg
jae
daa
fisttp
arpl
pop
mov
cwde
lahf
inc
add
repnz
in
shl
(bad)
xlat
lahf
push
(bad)
(bad)
pop
cmps
adc
xchg
dec
adc
lods
pop
js
jg
or
cmps
in
or
inc
mov
rol
outs
hlt
icebp
jg
adc
test
cmp
mov
mov
push
xor
xor
sub
int3
xchg
push
cwde
jnp
jns
imul
mov
jbe
les
add
pop
inc
das
jae
int
call
dec
ret
lea
push
test
int
in
stos
add
pusha
leave
jp
sub
out
ret
and
(bad)
pop
cmp
sbb
jge
adc
inc
iret
pop
xchg
pop
(bad)
sub
rcl
xchg
pop
mov
inc
adc
adc
pop
dec
and
pusha
popa
or
sbb
pop
xchg
or
push
shr
das
xchg
pushf
jp
or
cmp
sub
inc
sbb
sti
test
push
(bad)
(bad)
pop
mov
jecxz
arpl
jns
jne
jb
fs
jb
dec
and
jne
imul
clc
lds
mov
or
sbb
stos
call
(bad)
mov
mov
mov
push
sub
int
std
repnz
aad
loop
push
(bad)
leave
jnp
retf
jl
or
push
push
cmps
dec
mov
cmp
jg
adc
aad
addr16
push
adc
shl
inc
aaa
(bad)
outs
idiv
mov
data16
and
cmp
mov
mov
mov
mov
bnd
lock
jmp
bnd
adc
fwait
retf
mov
jmp
push
imul
jmp
lock
out
dec
mov
jmp
sti
jne
test
(bad)
call
test
aam
test
xchg
push
dec
add
or
dec
mov
push
push
dec
js
popa
jp
push
mov
jb
pop
sub
imul
outs
icebp
xor
jmp
rcr
je
push
outs
not
imul
dec
ret
and
dec
or
jb
inc
jmp
rcr
sar
inc
retf
fs
sbb
pop
dec
cmps
push
push
cmp
(bad)
sti
sub
mov
jmp
adc
jne
in
outs
mov
cdq
aam
xor
sbb
hlt
cmp
arpl
sub
in
add
movs
mov
(bad)
push
ffreep
(bad)
leave
mov
adc
ret
lahf
lahf
cdq
es
retf
and
xor
dec
inc
ret
cmp
enter
in
ja
xor
xchg
pop
stos
push
je
xor
(bad)
or
daa
xchg
xor
in
test
outs
call
and
cmp
je
fldcw
nop
xchg
jo
mov
or
mov
xor
mov
fst
push
stos
push
(bad)
inc
retf
push
jnp
push
mov
imul
call
pop
les
loop
ret
add
sahf
cli
and
pop
or
and
dec
cmps
cmps
pop
push
inc
xor
mov
pop
adc
inc
dec
ret
pop
sub
scas
cmp
fdiv
sbb
mov
jge
fld
dec
sbb
add
sbb
test
pop
sbb
mov
pop
inc
imul
loop
xor
mov
mov
ret
mov
sub
mov
prefetchwt1
int
call
push
outs
lea
aaa
dec
int3
jns
and
jl
lods
fcmovnb
dec
iret
cli
or
mov
(bad)
fild
idiv
je
dec
loop
pop
pop
sub
mov
repnz
pusha
(bad)
cmp
ret
ds
mov
imul
es
mov
adc
ds
sub
or
adc
lods
mov
rcl
neg
add
pop
mov
out
in
test
scas
in
inc
jno
lahf
les
imul
jae
sub
popf
mov
xor
mov
jae
sub
(bad)
(bad)
call
pop
sbb
mul
mov
hlt
pop
mov
push
mov
mov
sahf
aas
push
jge
outs
adc
stc
pop
stos
sbb
test
in
test
mov
arpl
add
jmp
cld
rol
sbb
or
push
pop
aad
ret
dec
fwait
pop
ja
pop
pop
sub
sub
ja
push
jecxz
lahf
cmp
adc
or
sub
adc
add
arpl
pop
or
inc
mov
mov
sub
or
imul
out
out
pop
or
pop
pop
mov
cmp
sbb
movs
inc
hlt
retf
fisttp
mov
cmps
or
test
test
push
iret
xchg
outs
iret
xor
inc
mov
fist
xor
popf
stos
xor
frstor
xor
jmp
mov
xchg
je
bound
test
add
mov
shr
iret
push
jmp
(bad)
mov
sbb
xor
cmps
in
mul
push
adc
inc
pop
or
push
retf
jmp
pop
movs
inc
int
push
xchg
inc
lock
sar
dec
mov
push
adc
add
rcl
popf
cmp
movs
clc
stos
adc
(bad)
push
dec
movs
dec
stos
in
xor
inc
not
mov
mov
pop
dec
cld
daa
hlt
daa
shl
test
shl
outs
scas
jnp
mov
or
out
sbb
mov
repnz
cmp
jle
(bad)
psrlq
and
jmp
je
sti
add
icebp
call
and
icebp
daa
retf
sub
xlat
ja
push
sub
xor
dec
stc
popa
nop
rcr
es
mov
sbb
mov
hlt
add
inc
scas
enter
pop
fidiv
cmp
je
fucomi
das
call
(bad)
sub
idiv
cli
push
adc
add
lods
and
xchg
loope
test
test
mov
es
adc
push
and
ss
neg
leave
pop
cmps
mov
scas
ficom
and
shl
cld
scas
sar
and
mov
xchg
mov
add
xchg
jmp
repnz
mov
inc
arpl
pop
es
iret
ja
shl
icebp
aam
movs
mov
add
fistp
rol
and
push
sbb
adc
pop
xor
test
dec
je
nop
and
fadd
mov
inc
cmp
ja
jae
fucomi
adc
cmp
call
jo
(bad)
inc
out
shr
pop
mov
in
push
rcl
mov
adc
or
call
jmp
mov
push
pop
fidiv
sbb
ins
cmp
push
jmp
lahf
sbb
xor
and
cld
and
mov
xchg
outs
xlat
(bad)
xor
test
xchg
mov
inc
adc
pusha
or
sub
(bad)
mov
and
inc
mov
shl
iret
(bad)
in
mov
lds
sub
sbb
pop
cld
and
sbb
test
int3
add
inc
jne
push
rcl
int3
pop
clc
loope
pusha
dec
inc
retf
scas
mov
repz
test
dec
jge
(bad)
not
xchg
push
add
bound
call
sub
(bad)
out
test
inc
ja
add
(bad)
stc
fs
xchg
mov
cwde
mov
add
ret
push
aaa
iret
arpl
mov
or
mov
mov
sbb
shl
add
lods
sbb
jno
mov
cld
add
xor
jp
or
pop
call
scas
cdq
mov
test
sbb
or
(bad)
stc
and
ja
dec
rcr
mov
in
(bad)
cwde
add
push
fwait
and
aas
dec
popf
in
and
int3
icebp
push
scas
sbb
dec
dec
loope
fcom
push
and
sub
ins
rol
std
aam
dec
fdivrp
jae
sub
(bad)
pusha
pop
inc
sub
scas
cwde
xchg
and
int
xor
jecxz
mov
sub
cmp
inc
push
xchg
(bad)
(bad)
cld
mov
push
add
inc
adc
sbb
test
push
scas
dec
cmps
inc
ins
dec
adc
mov
fcomip
inc
pop
in
sbb
gs
std
jle
inc
int
cdq
jl
ins
or
cs
mov
mov
cld
cmp
popf
pop
retf
pop
fbld
popa
xor
retf
mov
mov
jo
shl
xlat
inc
enter
clc
addr16
push
xor
popa
mov
pop
jnp
lahf
push
mov
xchg
jp
(bad)
popa
movs
rol
mov
lahf
pop
hlt
ss
pop
mov
dec
nop
dec
fstp
repnz
idiv
mov
shl
fidivr
cmp
test
and
stos
repz
test
ret
shl
out
imul
dec
sub
cmp
jno
mov
out
fstp
(bad)
sbb
mov
push
(bad)
loopne
mov
and
ror
adc
in
push
cdq
imul
add
adc
cwde
inc
inc
repnz
out
inc
es
adc
fwait
out
mov
enter
neg
push
fs
inc
push
leave
pushf
pop
jmp
push
inc
xchg
adc
pusha
inc
bound
pushf
xor
jp
jecxz
pop
push
paddq
shl
dec
in
dec
retf
mov
dec
xchg
push
lods
gs
and
mov
lods
outs
ss
ret
mov
cmc
call
dec
mov
fld
jle
outs
sti
xchg
xor
int3
jno
xchg
dec
mov
es
adc
icebp
pop
push
mov
iret
xchg
loopne
fcom
mov
out
sub
retf
gs
movs
mov
jns
fisubr
sub
out
jnp
dec
cwde
xor
mov
in
mov
cmp
and
or
fsubr
xchg
mov
mov
jle
push
adc
add
aaa
push
cmp
dec
movs
cli
sub
or
cmps
lods
in
mov
cmc
dec
call
daa
xchg
mov
(bad)
jbe
retf
js
cwde
mov
inc
fwait
dec
mov
mov
ds
ja
and
sbb
push
xor
cwde
ds
aaa
mov
cmp
cdq
pop
popa
outs
push
in
ins
mov
xchg
arpl
xchg
sub
jg
shl
or
(bad)
adc
push
repnz
cmp
clc
rcr
fwait
ss
mov
adc
cmp
sahf
xor
pop
cmc
bound
mov
sbb
mov
shl
ds
adc
cmp
call
or
sub
stos
ficomp
jo
dec
lods
movs
scas
pop
xchg
dec
jo
leave
loopne
popf
jno
(bad)
mov
std
repnz
jno
push
mov
jne
jg
or
pop
retf
mov
in
addr16
pop
(bad)
scas
xor
(bad)
jmp
(bad)
inc
sti
out
(bad)
mov
call
outs
add
push
test
cmps
xchg
das
test
mov
inc
xor
inc
add
call
imul
cmps
cmps
enter
in
shl
pop
aam
dec
dec
sub
jo
(bad)
call
dec
ds
cmps
pusha
cld
test
push
add
pusha
loopne
mov
jbe
inc
or
shl
xor
loop
cmp
fdiv
outs
mov
retf
data16
in
or
mov
or
imul
popa
sub
aaa
test
dec
cmps
std
mov
pop
mov
rcl
test
aad
xchg
xchg
cmc
inc
inc
jmp
jp
mov
sbb
inc
test
mov
repz
nop
loopne
inc
sub
and
inc
xchg
fldcw
mov
ror
mov
xchg
jb
mov
mov
or
xor
iret
pop
mov
test
outs
xor
mov
sub
inc
je
mov
mov
mov
hlt
sub
mov
push
sbb
push
pusha
adc
call
(bad)
add
mul
in
dec
imul
mov
loop
fstp
div
mov
div
and
adc
jnp
or
pop
push
sub
xchg
jmp
(bad)
mov
outs
fild
push
or
pop
iret
in
sbb
aad
and
daa
jle
popf
repz
pop
leave
dec
xchg
jge
in
jmp
cli
pmaxub
out
fwait
and
mov
fs
sub
out
cmp
std
int3
add
daa
sar
cs
xchg
push
mov
sbb
dec
adc
mov
mov
fadd
push
mov
xchg
lds
pop
add
popa
and
retf
jg
jbe
rcr
jns
mov
out
jecxz
mov
xchg
lods
xchg
cmps
add
retf
cwde
inc
xchg
mov
div
xor
cwde
xchg
repz
mov
daa
test
jge
aam
pop
repnz
lock
ins
aad
inc
push
clc
fcomp
shl
mov
adc
lods
cmp
aam
or
sbb
fld
rol
dec
adc
dec
(bad)
sti
dec
leave
mov
lds
xchg
inc
pop
cmp
cwde
out
dec
mov
dec
pop
inc
add
mov
cmp
(bad)
mov
pop
sbb
mov
movs
pop
or
mov
sub
adc
lea
(bad)
cs
cmp
out
mov
neg
mov
pop
mov
je
fcom
adc
fwait
cdq
mov
loope
pop
xchg
movs
sti
jge
jle
push
(bad)
cli
add
mov
mov
(bad)
xor
pop
mov
scas
mov
imul
or
imul
aas
and
push
push
popa
mov
mov
in
mov
cs
and
mov
dec
sub
push
pop
inc
js
and
dec
sbb
adc
mov
push
mov
int3
dec
add
xchg
cs
test
into
out
mov
repnz
call
add
int3
xchg
sub
mov
cmc
dec
mov
pop
out
loop
push
pushf
inc
jle
pop
cdq
mov
adc
and
pop
shr
cmp
mov
pop
pop
pop
in
mov
mov
in
fdivr
add
push
ficomp
jl
and
je
sub
and
loop
cmp
mov
daa
mov
push
(bad)
jle
and
mov
add
adc
add
out
int
and
xlat
push
scas
out
push
sub
inc
mov
in
aaa
dec
sub
mov
pop
movs
and
jmp
movs
dec
xchg
adc
cmps
mov
mov
ret
call
push
popf
or
push
bound
inc
cmp
cwde
pop
ficom
xor
fs
cs
push
sahf
inc
mov
mov
hlt
push
ret
mov
jmp
or
cdq
jp
dec
gs
and
add
in
or
jp
fisttp
sub
call
idiv
fnstsw
push
out
mov
lods
cdq
jno
test
cmps
cdq
push
enter
(bad)
adc
xchg
mov
or
shl
add
and
inc
adc
fcmovnbe
jmp
push
in
rcl
enter
shr
mov
shl
into
inc
cmc
inc
and
in
data16
repz
push
mov
scas
test
scas
jle
add
sbb
(bad)
mov
imul
or
jmp
pop
mov
jl
int
pushf
sub
aas
call
mov
push
int
sti
not
mov
add
or
call
sub
cmp
(bad)
ficomp
jl
dec
mov
mov
arpl
and
adc
mov
cmc
adc
test
movs
add
in
inc
out
mov
mov
inc
scas
adc
dec
popf
inc
js
in
inc
inc
cmc
xor
mov
jecxz
mov
lock
cmp
jge
movs
leave
lods
into
and
xor
and
arpl
test
test
inc
or
mov
jl
fucomip
fist
into
cld
retf
mov
aad
lahf
test
mov
jmp
rcr
sub
(bad)
iret
das
mov
and
dec
adc
jmp
pushf
push
jg
es
jno
cmp
push
pop
xchg
sub
jl
sub
xchg
sti
and
jae
(bad)
cld
mov
adc
xchg
out
stos
scas
ret
push
loopne
stos
dec
sti
jmp
xchg
iret
inc
adc
push
dec
jae
pcmpgtb
pop
int3
ret
and
xchg
pop
popf
fld
mov
sti
(bad)
les
sbb
loope
data16
or
test
and
dec
sbb
call
mov
jmp
jo
ins
not
mov
dec
lods
stc
inc
jg
mov
rcr
or
pop
push
ins
and
cld
inc
sbb
les
pop
and
cli
xchg
and
sbb
movs
mov
loop
adc
xor
xor
xor
dec
jae
fsubr
retf
repnz
dec
ins
vmovss
mov
inc
xchg
add
inc
adc
mov
xor
mov
es
sahf
xlat
sub
push
int3
leave
cmp
or
repz
aaa
repz
ret
and
scas
stos
jnp
dec
mov
jp
cdq
adc
jne
inc
sbb
mov
js
add
xor
fbstp
imul
cmps
jo
stos
inc
int3
mov
dec
in
in
mov
sti
pop
inc
xchg
sar
gs
test
push
mov
pop
jle
add
mov
cld
es
inc
jae
adc
clc
sub
mov
fild
mov
xchg
mov
or
aam
lea
or
inc
jbe
test
mov
aad
push
out
imul
ss
inc
and
es
aaa
mov
sar
fbld
sbb
iret
inc
loopne
mov
es
dec
shr
test
pop
jp
adc
dec
push
repz
sti
arpl
frstor
out
lods
icebp
movd
dec
das
out
rcl
mov
push
pop
into
(bad)
add
and
shl
int
gs
mov
xor
sub
xchg
lds
shr
movs
stos
sub
outs
int3
push
jb
in
inc
sub
mov
sbb
ret
fbstp
jg
jns
(bad)
js
jge
sbb
div
jne
repnz
shl
lods
in
stos
loopne
fisub
sahf
adc
add
mov
cdq
in
jg
mov
aam
call
je
adc
ins
sbb
pop
xchg
dec
lods
mov
or
and
add
mov
shl
hlt
pop
add
ins
push
js
jecxz
mov
adc
retf
mov
xchg
fmul
out
iret
mov
dec
shl
jge
ins
aad
popf
mov
mov
mov
cmp
xor
lods
arpl
push
mov
(bad)
gs
and
dec
iret
xor
lea
mov
cmp
retf
push
xchg
dec
mov
fbstp
loop
sub
sub
scas
scas
test
imul
mov
mov
inc
mov
jecxz
lods
outs
(bad)
clc
inc
aam
cli
out
xchg
popf
jnp
dec
sub
lea
iret
inc
xor
inc
leavew
or
inc
fcomp
ja
cld
push
and
out
cmps
(bad)
jecxz
push
or
pop
pop
xor
pop
push
fisub
pop
cmp
neg
push
mov
cmp
dec
sub
add
sub
push
mov
xchg
mov
adc
inc
gs
and
(bad)
dec
cmp
mov
aas
xchg
ja
jo
cmp
or
ds
pop
lods
out
inc
leave
cdq
pusha
pop
pop
fbld
sbb
cmc
pop
cmp
pop
or
movs
movs
cmp
and
inc
or
icebp
pop
test
push
cdq
mov
leave
sub
test
sub
pop
push
test
retf
out
push
mov
push
push
(bad)
ds
add
pop
mov
fwait
repz
(bad)
push
(bad)
repz
inc
pop
adc
inc
hlt
loop
enter
(bad)
dec
sar
ss
mov
mov
xor
js
lock
inc
push
mov
and
lea
movs
mov
js
shl
push
enter
arpl
dec
imul
call
leave
movs
cs
mov
je
xor
jae
out
enter
cmp
cmps
or
or
popf
ret
push
jmp
push
aam
je
cmp
push
mov
aaa
idiv
ret
sub
retf
adc
or
jge
pop
cli
jb
jle
ror
xchg
sbb
aaa
push
popf
inc
and
sbb
test
add
(bad)
xor
adc
xor
xchg
push
arpl
dec
jmp
push
pop
add
pop
adc
or
enter
cdq
cmp
data16
enter
fild
js
out
nop
in
mov
pop
leave
push
dec
dec
imul
lahf
push
call
jle
rol
lock
mov
mov
pop
in
or
movs
add
std
and
outs
cs
mov
cmp
cmp
ret
fdiv
ss
aam
inc
pop
or
setns
mov
cld
fmul
shl
and
test
sbb
mov
xchg
mov
pop
pop
sub
sti
jb
ror
adc
jmp
and
and
shl
push
ret
pop
idiv
dec
sbb
fstp
cmp
out
ins
ins
jge
xor
xchg
(bad)
out
pop
fwait
mov
adc
ins
hlt
jg
(bad)
aad
jp
aam
das
xchg
sbb
add
fdiv
lds
jo
fmul
(bad)
xchg
sbb
icebp
xchg
leave
gs
cmp
jbe
sub
stos
rcl
mov
fldenv
inc
pop
addr16
xchg
mov
nop
and
daa
mov
or
xchg
push
retf
das
les
or
push
popa
nop
ret
jbe
mov
in
cmp
out
inc
mov
loope
sbb
pop
and
ror
adc
mov
mov
test
cwde
lods
adc
inc
mov
mov
mov
push
in
jb
xchg
ds
pop
mov
ret
add
dec
sbb
and
cwde
add
(bad)
lahf
cwde
push
sub
int3
mov
dec
inc
test
stos
iret
out
sbb
imul
cmp
stos
pop
sahf
pop
mov
xor
mov
push
sar
aaa
and
fs
hlt
sbb
or
sub
mov
loopne
call
mov
aaa
mov
push
stos
mov
or
push
out
ds
jle
xchg
(bad)
mov
or
sbb
stc
push
push
ins
xchg
cmp
(bad)
ror
cmovs
adc
dec
lds
dec
mov
sbb
mov
add
lds
mov
sub
pop
adc
sbb
cmps
je
add
sti
lahf
sub
cwde
fdivr
test
xlat
ja
inc
repz
scas
(bad)
jg
outs
fs
add
js
mov
arpl
jne
out
aaa
dec
sbb
data16
xchg
push
jle
dec
dec
loopne
xchg
mov
push
aas
fcom
mov
aad
in
pop
out
pop
sub
adc
xor
cmp
xchg
outs
pop
loopne
xchg
addr16
pop
mov
or
cmc
or
scas
adc
adc
and
and
sub
or
cmc
sti
push
jae
inc
cld
sub
scas
out
ins
jge
xchg
xchg
inc
mov
cmp
sbb
xchg
repnz
fwait
push
add
cmp
stos
loop
or
dec
pop
aam
retf
test
mov
out
push
lock
mov
or
cli
cwde
sar
sub
dec
jg
cmp
dec
retf
mov
in
call
mov
xrelease
jmp
cmp
add
aam
inc
or
mov
mov
mov
jo
xor
adc
jle
pop
mov
push
inc
push
js
sbb
es
mov
dec
adc
sbb
mov
xor
(bad)
in
mov
xchg
je
shl
jmp
fisub
fadd
ficom
jo
inc
in
mov
lock
inc
jo
int
arpl
imul
cmp
mov
popf
mov
daa
dec
(bad)
jmp
ret
adc
or
inc
jbe
gs
out
outs
mov
pop
xchg
xchg
inc
repz
pop
mov
mov
cs
xchg
push
jmp
fwait
or
and
test
les
in
sub
stos
call
mov
mov
fadd
lahf
cmp
add
into
shr
std
push
pop
push
cmp
sbb
int3
and
lock
pusha
push
jmp
fld
add
mov
ret
mov
sub
add
(bad)
sub
push
ja
and
sbb
sbb
sbb
and
jmp
sahf
xor
test
gs
dec
fdiv
clc
jb
xor
xor
(bad)
mov
mov
pop
mov
mov
sub
adc
xchg
dec
mov
push
xor
nop
sbb
stos
out
imul
ret
lock
outs
cmp
fcomp
add
pop
push
mov
call
add
addr16
xor
test
sahf
fisub
and
mov
mov
adc
mov
fwait
ins
or
and
popa
pop
shl
ret
ret
jmp
cmps
xchg
push
das
stc
fs
(bad)
shr
out
lods
push
(bad)
lock
sahf
pop
and
mov
mov
jo
arpl
lock
mov
mov
addr16
jb
int3
or
sbb
add
cmps
jmp
gs
sahf
mov
sar
fisttp
and
mov
cmp
ins
imul
mov
jecxz
inc
sti
in
pop
xor
int
clc
fiadd
cmp
retf
fistp
je
or
enter
xchg
add
or
(bad)
mov
and
inc
sar
dec
jg
std
js
inc
xchg
mov
inc
cmp
scas
and
push
in
clc
mov
clc
xchg
fiadd
int
gs
mov
push
mov
repnz
sti
sbb
jo
sbb
rcl
adc
push
pop
cmps
sahf
ds
mov
hlt
rol
sub
sbb
pop
xor
pop
add
outs
mov
test
das
cmps
push
in
or
jl
adc
dec
dec
push
mov
inc
push
stos
jle
xor
loop
out
add
sub
pop
sbb
movs
out
dec
test
xor
out
in
loop
inc
push
dec
xchg
std
cli
in
inc
nop
aas
test
xor
(bad)
(bad)
std
wrmsr
jo
(bad)
xchg
gs
in
pop
or
daa
inc
and
mov
test
(bad)
mov
ss
test
cli
sbb
in
retf
clc
aaa
xor
ss
test
sahf
sahf
hlt
int
sar
add
pop
pop
mov
add
fsub
call
mov
outs
int
out
or
mov
aaa
push
cmc
daa
jmp
xor
fisttp
xchg
add
out
mov
ins
iret
or
inc
in
enter
ret
pusha
das
sbb
mov
icebp
sbb
aam
pop
push
jne
xlat
xor
push
sbb
data16
aad
enter
in
into
sbb
xchg
sub
and
scas
scas
in
jl
adc
pop
test
pop
test
dec
sub
je
xchg
outs
sahf
in
test
cmp
sbb
mov
xor
jb
call
lock
lea
mov
inc
mov
adc
jmp
jle
icebp
add
fwait
rcr
xchg
add
mov
adc
mov
xchg
dec
xor
out
dec
and
mov
nop
xor
into
sahf
xor
push
mov
add
or
fwait
stos
jge
or
add
or
inc
sbb
dec
lds
out
ins
(bad)
mov
add
ins
aam
add
ds
dec
xor
push
pop
or
repnz
sub
je
lahf
icebp
jbe
xchg
adc
add
out
cmp
loopne
dec
add
ins
pop
inc
adc
in
add
add
js
mov
outs
push
loop
test
mov
aaa
inc
xchg
imul
and
dec
xchg
popf
dec
mov
mov
outs
jmp
loop
jmp
ins
dec
dec
repz
jno
sub
mov
ins
cmp
icebp
or
and
in
mov
and
mov
scas
add
shl
and
pop
mov
cdq
popa
call
push
xor
xchg
div
repnz
ror
call
adc
test
mov
xor
shr
inc
add
mov
jp
dec
sub
or
push
xor
test
nop
jle
aad
movs
(bad)
(bad)
dec
xor
xlat
sbb
push
mov
mov
push
inc
and
arpl
add
fwait
or
mov
xchg
xchg
adc
cmp
popa
retf
push
aam
pusha
cmp
mov
mov
cmp
or
lods
or
xchg
add
scas
fstp
pop
movs
sbb
or
pop
adc
rcl
xchg
inc
ja
mov
test
popf
dec
push
lahf
mov
pop
sub
invd
fucom
aas
arpl
mov
js
fisubr
mov
mov
data16
in
push
adc
sub
mov
cli
shl
mov
imul
cmp
jo
mov
das
jns
(bad)
ja
retf
xor
push
pop
inc
mov
ror
mov
xor
loop
rcl
sbb
pop
aad
xchg
in
sub
xchg
test
fistp
adc
pop
adc
sbb
jg
fwait
jo
and
fucomp
es
inc
sbb
das
inc
jb
add
sti
push
aas
and
jmp
pop
cmps
ja
inc
push
mov
sub
jl
out
lods
call
adc
sub
push
mov
fxch
test
loopne
fwait
jbe
pop
xlat
add
sti
clc
cli
out
call
test
sbb
cmp
or
xchg
lds
mov
jnp
or
aam
push
(bad)
xor
add
mov
push
adc
into
das
lods
enter
fisttp
fimul
xchg
sbb
stos
fcomp
add
ss
mov
movs
dec
imul
(bad)
and
outs
push
push
mov
xchg
lock
xor
xchg
repnz
xor
scas
jmp
jno
nop
push
imul
repnz
jge
xor
mov
push
pushf
enter
test
dec
enter
sbb
lock
add
pusha
stc
sar
sbb
pusha
enter
mov
in
addr16
cmc
or
pushf
mov
jb
pop
popf
jmp
fnstsw
or
mov
push
out
pop
arpl
jmp
out
cmp
jge
test
xchg
fimul
aad
mov
or
xchg
and
or
mov
mov
xchg
js
inc
test
pop
hlt
jb
and
aaa
mov
shl
out
scas
jmp
cmp
jae
pushf
sub
mov
mov
sbb
aaa
and
push
repnz
pop
push
cmp
out
stc
inc
std
add
into
jno
cli
sub
scas
popa
xchg
mov
dec
push
ss
dec
repnz
xchg
je
jnp
(bad)
push
les
push
xchg
and
jmp
add
test
dec
popf
sub
mov
mov
rcr
and
in
into
stos
fcomp
retf
lahf
jmp
loop
(bad)
clc
ror
enter
xchg
lock
ins
rcr
lock
fsub
adc
inc
into
loopne
mov
push
mul
and
or
sbb
(bad)
mov
pop
popf
or
shl
retf
jg
fist
push
sub
xchg
(bad)
addr16
stc
and
loop
cmp
xor
ins
gs
idiv
inc
cmp
ror
rcl
loop
leave
mov
and
gs
pop
int
jae
fsub
pop
xchg
nop
or
fimul
mov
adc
ja
or
movs
mov
arpl
jb
adc
dec
xchg
cmc
adc
in
das
mov
mov
mov
fwait
xor
movs
add
(bad)
mov
stos
and
outs
add
outs
fistp
mov
and
addr16
cmp
adc
addr16
pop
mov
or
and
jmp
xor
dec
pop
mov
inc
mov
repnz
leave
lods
mov
lds
into
push
test
icebp
addr16
dec
mov
adc
popa
adc
outs
arpl
xor
mov
push
ror
or
cmp
fnsave
mov
shl
addr16
lahf
cmp
movs
push
adc
call
mov
lods
add
mov
add
movs
mov
xchg
movs
jmp
sti
fidivr
mov
ss
ins
adc
hlt
and
aaa
out
sbb
pop
movs
xchg
(bad)
mov
iret
jns
dec
dec
cmp
stos
loope
mov
ficom
mov
popf
dec
mov
ficom
enter
push
jl
jo
jge
xor
movs
dec
in
push
push
inc
test
sar
loope
dec
popf
dec
xor
sbb
mov
in
mov
pop
push
out
cmp
in
add
aas
and
iret
push
sub
sbb
mov
adc
sbb
sub
pop
dec
hlt
retf
(bad)
leave
push
dec
and
jae
pop
push
pop
and
or
dec
retf
xor
popa
test
das
dec
maskmovq
imul
ds
daa
jb
mov
adc
dec
mov
fidivr
lea
mov
inc
jmp
jmp
rcr
mov
(bad)
mov
add
cmc
add
movs
and
cs
ret
pop
cmp
inc
int
inc
inc
test
daa
jbe
lea
jb
xchg
imul
mov
idiv
or
mov
test
push
outs
fnstsw
push
das
int3
fdiv
mov
out
sub
add
mov
stos
(bad)
cli
jbe
mov
sub
dec
nop
std
(bad)
sbb
test
or
imul
mov
cdq
(bad)
jnp
mov
inc
fiadd
pop
sbb
mov
frstor
pusha
adc
es
dec
mov
cmc
js
ret
sub
fsubr
in
imul
push
daa
(bad)
adc
and
enter
ret
pop
mov
ins
cmp
(bad)
scas
fisubr
xor
push
nop
and
push
jbe
adc
push
shl
lods
sbb
fs
inc
aam
(bad)
scas
sbb
sbb
cli
dec
cli
ret
push
movs
cld
rol
repz
ds
aad
test
lods
and
xchg
repnz
mov
imul
into
add
ins
imul
pusha
jecxz
adc
cmps
iret
scas
jae
fcom
test
call
xchg
sbb
sub
cdq
xlat
outs
mov
inc
icebp
jbe
xchg
rep
or
test
inc
loopne
jbe
dec
mov
xchg
rol
out
(bad)
ja
ficomp
push
outs
aaa
inc
or
pop
popf
sbb
xor
movs
ficom
out
adc
js
jecxz
jno
inc
pop
sar
sbb
je
in
mov
cmp
(bad)
jmp
jno
test
and
ja
push
es
add
inc
inc
push
not
lods
jb
rol
in
adc
in
(bad)
dec
adc
pop
pop
sub
retf
sbb
popa
push
xchg
imul
mov
test
ror
inc
jbe
mov
pop
dec
in
(bad)
out
shl
mov
push
sub
cmp
xlat
jge
jp
leave
fild
or
dec
mov
and
das
rcr
retf
ficomp
push
cbw
jmp
push
(bad)
(bad)
jae
or
lds
dec
std
stos
(bad)
arpl
lds
jne
sub
fcomip
dec
dec
je
sahf
imul
or
rcr
or
inc
jge
into
dec
hlt
(bad)
sbb
sub
enter
in
(bad)
push
sbb
xor
imul
dec
cld
aam
mov
sub
and
fsub
xor
into
pop
or
(bad)
push
lea
js
mov
cld
jo
jl
cmp
mov
jp
movs
dec
int
jbe
xchg
cmps
fsubr
jmp
dec
in
shl
mov
mov
clc
ins
pop
cdq
push
nop
inc
push
mov
xor
repnz
jl
xlat
push
outs
aas
stos
clc
cld
fmul
cld
stos
daa
mov
cmps
mov
aad
xchg
cmp
dec
daa
push
xchg
fild
xchg
out
and
mov
and
push
adc
adc
lods
mov
xchg
sub
sub
dec
jg
adc
js
test
nop
add
cmps
adc
fisubr
adc
scas
out
rcr
dec
mov
fs
outs
dec
xor
lods
inc
and
pop
das
loope
loop
popa
es
dec
inc
shr
je
js
jo
xchg
push
adc
lods
cdq
jo
xlat
jns
sbb
cli
push
xchg
cmp
jl
repnz
call
fisttp
rol
mov
popf
fidiv
pop
xor
cmp
test
add
not
aad
sti
jo
xor
mov
jo
loop
leave
int
mov
test
mov
test
sbb
pop
shl
mov
cmp
xor
movs
push
xchg
add
and
pop
add
sbb
or
cli
ins
loop
add
fdivr
cmp
mov
mov
mov
aas
cld
push
push
jmp
mov
out
stos
push
lock
adc
adc
adc
lahf
jg
sahf
jmp
xchg
(bad)
mov
(bad)
fidivr
xchg
ret
int3
sti
sub
cmc
outs
dec
inc
mov
retf
jmp
pushf
sahf
dec
mov
pop
cmp
mov
cwde
imul
shl
dec
jnp
jne
sub
ret
pop
ins
fadd
mov
out
jae
popa
call
inc
das
je
mov
jge
lods
dec
mov
std
jb
scas
movs
clc
xchg
(bad)
mov
ret
sbb
mul
mov
xchg
pop
cmp
pop
std
fadd
pop
lods
pop
aas
mov
jae
sbb
jge
xor
push
add
xchg
mov
jne
gs
and
and
call
stos
loope
push
and
mov
inc
in
je
cmps
mov
inc
shl
jns
das
jg
test
cmps
mov
dec
cld
pop
daa
jmp
sub
inc
or
imul
test
xor
inc
adc
jge
or
or
xchg
jl
popa
mov
hlt
push
jo
add
adc
pop
mov
out
xchg
cmp
jle
xchg
mov
pusha
or
adc
add
lahf
mov
xor
sbb
dec
hlt
push
leave
push
or
push
xlat
add
(bad)
ror
dec
or
dec
inc
arpl
dec
jno
in
ret
xor
xor
les
and
rcr
and
adc
das
adc
pushf
movs
mov
or
sbb
and
sbb
xchg
stc
lock
mov
adc
cli
push
push
rol
add
push
popf
jnp
cmp
cmp
movs
xchg
cmps
icebp
es
or
in
add
mov
xlat
(bad)
pop
or
cmp
mov
loopne
sbb
mov
dec
adc
pop
cmp
or
aas
fnstsw
ret
ret
inc
jb
stos
test
sahf
sub
fisttp
in
(bad)
hlt
add
into
inc
and
jmp
jg
and
cmp
test
and
test
dec
hlt
outs
cmps
enter
add
test
jge
stc
loope
mov
push
sbb
add
jo
mov
loopne
sub
cmp
jp
(bad)
jbe
into
int
cli
aas
(bad)
cmp
sbb
imul
mov
fdivr
cmp
ret
int3
pop
das
lock
mov
sub
push
xor
cld
ins
and
cmp
sti
dec
sbb
dec
cld
inc
cmp
pop
mov
je
xlat
fld
shr
jle
mov
adc
xchg
cmovns
les
ret
hlt
test
loope
icebp
inc
jnp
xchg
popf
stos
scas
push
mov
cmp
jns
jo
frstor
dec
loope
xor
out
outs
or
jmp
or
and
cld
movaps
inc
xchg
sub
pop
out
pop
cmp
out
dec
cmc
mov
pop
mov
ja
jae
ficom
dec
imul
push
fs
add
jp
mov
push
sbb
add
not
aaa
jns
and
or
pop
xlat
push
lds
jg
xchg
mov
(bad)
rcr
jbe
sbb
out
push
nop
scas
mov
sahf
lea
test
movs
xor
retf
sbb
dec
popa
cmp
lea
rcr
jo
jl
scas
dec
jno
push
mov
mov
mov
arpl
dec
xchg
pop
leave
test
add
and
mov
dec
fistp
fild
mov
add
cmp
jae
xor
fistp
jp
sub
jl
js
cmp
es
inc
call
js
mov
mov
adc
and
add
adc
jns
push
ins
mov
jp
push
clc
push
(bad)
jne
je
fiadd
jmp
sbb
sub
adc
push
repz
sbb
repz
out
rcl
sub
outs
pushf
adc
jmp
movs
loope
fld
push
test
stos
sbb
pop
retf
mov
inc
popaw
cwde
xchg
mov
clc
lahf
cmp
dec
adc
mov
outs
in
leave
aam
rcr
(bad)
xchg
mov
movs
jmp
hlt
mov
sub
add
inc
push
test
jmp
mov
ror
rol
std
push
or
adc
jge
out
test
movs
jl
out
cdq
jb
xlat
imul
or
dec
mov
shr
and
popf
push
call
and
push
xor
das
mov
mov
je
xlat
or
dec
lea
adc
or
mov
clc
and
retf
lds
dec
xor
mov
sub
mov
adc
sub
jmp
add
xor
push
repz
fld
loope
inc
aad
mov
outs
jne
(bad)
xor
scas
repnz
dec
mov
test
inc
adc
neg
mov
xor
adc
div
or
push
movs
pop
les
call
mov
mov
add
inc
push
imul
in
stos
inc
pop
push
sti
pop
nop
test
mov
in
or
jb
inc
popa
push
jmp
or
out
test
dec
fwait
pop
pushf
mov
fsub
stos
sbb
mov
cmp
jnp
mov
push
sub
inc
repz
stos
push
xchg
push
cmp
push
sbb
sub
mov
sub
cmp
cwde
lock
cs
mov
mov
push
xchg
out
out
retf
cld
out
mov
pop
das
jae
fucomip
adc
sub
xor
jne
xchg
pop
and
scas
repz
sti
xlat
and
outs
(bad)
(bad)
retf
fdiv
ins
and
add
aaa
and
shl
sub
dec
sbb
dec
and
pusha
and
mov
cmp
or
lods
push
mov
mov
ret
cmp
loopne
pop
fdiv
iret
push
bound
in
je
jo
test
pop
sub
cmc
fcom
mov
loope
mov
test
inc
jno
ret
mov
das
mov
jnp
inc
mov
dec
push
in
fwait
sub
or
cdq
aas
jae
xchg
and
daa
movs
mov
jmp
cwde
mov
jnp
loopne
das
(bad)
or
and
xchg
cwde
sbb
sbb
ret
lea
not
xchg
out
fldpi
shr
fsubr
push
rcr
dec
imul
dec
test
sbb
cld
inc
ja
push
jmp
cmps
dec
vmulpd
aaa
sub
push
hlt
or
push
xchg
pop
mov
movs
xchg
aam
pop
ret
add
or
stc
mov
push
retf
mov
mov
fmul
daa
dec
jns
mov
sub
jl
inc
or
(bad)
loope
test
jg
sti
aaa
ins
jle
movs
jo
call
(bad)
in
mov
push
popa
sbb
es
sub
aas
nop
jnp
data16
push
dec
mov
cmps
ret
or
not
lds
ret
ss
dec
cmp
into
dec
mov
dec
mov
or
jl
jno
mov
neg
jg
xchg
add
add
fcmovbe
cmp
jb
jp
mov
pop
dec
mov
mov
(bad)
sub
cmp
gs
dec
inc
mov
test
lea
adc
adc
xchg
sbb
fadd
call
movs
bound
test
lahf
cmp
rcl
gs
cli
repnz
inc
sub
dec
into
fimul
xchg
inc
es
pop
(bad)
(bad)
push
xchg
push
pop
xchg
push
add
fcomp
mov
pop
xchg
cmp
shr
rol
cdq
jle
cdq
push
test
ja
dec
lods
xchg
and
addr16
adc
jmp
inc
movs
sbb
cdq
loopne
mov
dec
fidiv
xor
xor
lock
call
out
mov
sub
lock
pop
cmp
test
test
adc
push
inc
cmp
retf
pop
add
xchg
push
add
pop
lods
xchg
cld
and
pop
dec
or
mov
and
data16
jmp
mov
mov
mov
mov
dec
push
or
inc
mov
and
mov
cmp
arpl
out
mov
dec
jns
es
cmc
push
out
jl
lods
mov
add
gs
pop
sbb
imul
push
cs
das
mov
mov
stc
call
es
pusha
and
nop
leave
pushf
scas
push
add
fadd
dec
leave
xor
pop
movs
or
repnz
pop
pop
fsub
nop
jge
scas
or
sbb
fs
int
push
lods
(bad)
lock
jl
or
fs
ss
in
ins
mov
out
popa
(bad)
xor
mov
in
cld
je
add
mov
in
push
dec
pop
mov
mov
jns
cwde
lea
pop
scas
and
or
or
jl
pop
sbb
mov
mov
dec
cmovle
add
cdq
sub
fnstsw
push
push
int
cmc
push
xchg
adc
mov
(bad)
jge
dec
dec
and
cmp
call
bound
rcl
test
xchg
aad
xlat
or
inc
cs
out
je
jns
stc
push
pop
pop
mov
aas
bound
adc
xchg
das
jmp
sbb
into
call
jl
loopne
mov
stc
repz
mov
push
xchg
mov
das
pushf
xor
mov
repnz
mov
mov
loope
rcr
pop
sbb
pushf
cmc
and
xchg
or
xor
lds
mov
pop
cwde
mov
loopne
(bad)
and
push
sbb
jmp
sub
mov
repz
push
arpl
aam
add
and
test
cwde
ins
mov
mov
jno
or
sbb
shr
mov
xchg
jbe
ret
or
fadd
mov
cmp
mov
cmp
dec
in
push
xor
mov
xbegin
push
ins
sbb
mov
shl
push
js
mov
xor
mov
mov
mov
pop
or
mov
inc
mov
add
adc
addr16
scas
imul
mov
rep
sub
je
enter
hlt
xchg
aam
mov
or
fldln2
icebp
jns
aaa
ins
loop
mov
add
int3
and
sbb
mov
cmc
lods
aas
cdq
jg
sbb
jmp
test
mov
mov
repnz
into
fistp
xchg
jns
dec
mov
rcr
jae
jbe
xchg
je
xor
jg
xor
iret
xchg
enter
xlat
push
adc
sub
pop
jecxz
dec
xor
(bad)
stc
dec
jp
sbb
ins
add
add
call
pop
mov
mov
push
or
test
sub
aad
test
sub
in
cmps
test
and
leave
js
cmp
imul
jecxz
movs
btr
xor
lea
mov
xchg
jmp
xor
sbb
fadd
loop
jp
sub
je
sub
jno
pusha
shl
test
xor
cdq
mov
push
and
mov
cli
test
add
lods
xor
leave
push
and
cdq
int3
stc
rcr
les
shl
sbb
jg
test
dec
inc
adc
mov
gs
mov
scas
mov
jo
adc
cmp
mov
cmp
xchg
lods
add
push
call
cmp
out
imul
dec
out
sahf
push
xchg
(bad)
xchg
jno
push
inc
loop
ret
push
inc
sbb
aas
mov
stos
mov
idiv
rol
pinsrw
or
inc
cmps
mov
xchg
inc
jbe
push
mov
fld
mov
clc
lock
adc
mov
cld
mov
mov
lea
xor
sahf
mov
imul
dec
outs
mov
loop
adc
pop
pushf
push
sbb
in
and
jge
mov
mov
mov
dec
push
xchg
add
ja
into
sbb
adc
or
das
(bad)
stc
popf
and
nop
scas
fimul
mov
mov
int3
imul
cdq
(bad)
in
inc
or
push
inc
(bad)
scas
cmp
in
(bad)
mov
mov
sub
scas
rcr
push
jg
lds
push
test
call
mov
pop
dec
inc
mov
lea
test
scas
xlat
shr
movs
(bad)
mul
xchg
inc
sbb
jg
call
add
lea
push
mov
scas
sahf
push
fist
xor
mov
dec
dec
fsub
and
or
dec
scas
(bad)
popa
cmp
mov
or
sub
rcl
loope
mov
jl
cmp
fs
pop
mov
movs
imul
aaa
adc
dec
xor
push
mov
call
call
lock
(bad)
idiv
push
cmp
in
adc
push
xchg
mov
jmp
xor
out
(bad)
aaa
das
sti
aad
xchg
xchg
fs
pop
push
add
stc
(bad)
sti
jae
adc
aas
push
xchg
(bad)
jbe
movs
pop
sahf
push
cmp
je
pop
mov
adc
mov
xor
repnz
into
out
pop
std
cmp
std
retf
xchg
in
sahf
jecxz
fs
mov
in
xor
pop
scas
pop
sub
lahf
mov
lock
mov
fisubr
xchg
adc
or
cld
aad
arpl
inc
pushf
cmp
jne
push
icebp
xchg
and
(bad)
ja
jo
nop
ss
(bad)
jge
pop
ss
hlt
push
xchg
cmp
adc
sub
jb
jo
dec
or
and
cmp
in
pop
(bad)
icebp
aad
sbb
inc
jb
dec
es
(bad)
and
loopne
fwait
dec
popa
adc
pop
push
fs
add
movs
mov
and
add
dec
xchg
xor
mov
int
jns
jnp
cwde
mov
add
jl
out
icebp
movs
inc
jnp
shl
scas
test
push
call
add
into
fidiv
push
jbe
jo
ja
sbb
push
fnstcw
mov
or
sbb
xor
stc
push
add
xlat
xchg
test
jno
cmp
add
xor
xchg
sub
cmp
and
mov
xchg
dec
push
sub
addr16
(bad)
popf
xor
and
or
mov
retf
(bad)
ins
aaa
cmp
dec
mov
cmps
clc
xchg
xor
mov
pop
mov
mov
rcr
sub
(bad)
jmp
(bad)
fdiv
push
add
and
lds
gs
push
es
adc
pop
pushf
out
jb
aam
sub
and
and
pop
iret
in
int
xor
xor
inc
imul
icebp
or
scas
aas
scas
shl
or
cmps
sbb
mov
or
adc
inc
sbb
(bad)
or
mov
outs
mov
mov
push
dec
cld
(bad)
jge
mov
cmps
jae
jne
inc
mov
jmp
pop
mov
add
sbb
test
mov
(bad)
ds
fst
stos
and
adc
push
jno
fstp
jne
push
add
jb
inc
fwait
mov
out
or
(bad)
mov
je
dec
mov
int3
xor
sub
popa
mov
sbb
xchg
cmp
push
lea
movs
lods
fild
cmp
std
inc
mov
(bad)
jne
xchg
sub
cmps
jp
mov
fild
jl
mov
ins
push
je
clc
aad
adc
scas
xor
pop
psubd
fnstenv
fidivr
xor
std
daa
aaa
sti
sub
jmp
add
fdivp
gs
in
sub
call
pop
and
sahf
fild
cmps
fistp
mov
sahf
imul
xchg
ret
xchg
jge
push
inc
std
jp
dec
jmp
jne
xchg
rcl
arpl
push
in
push
rol
inc
sti
and
jl
push
fld
sbb
inc
or
inc
stos
fimul
adc
in
sbb
shr
mov
(bad)
lds
pop
movs
lahf
int
inc
and
repnz
lea
xor
into
sbb
jno
out
xchg
imul
push
not
out
or
jmp
dec
jle
xor
pop
stos
jecxz
mov
push
mov
sub
pusha
jmp
in
jmp
jno
mov
add
jne
mov
sbb
iret
push
test
jns
ficom
and
jno
jle
(bad)
jne
mov
cmp
int
cdq
fs
pop
clc
test
mov
mov
xchg
and
push
adc
aaa
test
dec
mov
pop
jbe
xor
jbe
outs
mov
xchg
mov
(bad)
pop
loope
xor
jnp
mov
(bad)
cs
movs
and
lahf
cmc
enter
in
inc
fwait
cwde
push
cmp
scas
jl
retf
out
adc
jno
pop
xchg
xor
xchg
lock
cmc
jecxz
mov
xchg
dec
loopne
stos
sub
dec
add
test
inc
xchg
les
lods
add
arpl
icebp
retf
add
add
mov
xor
pop
mov
call
mov
mov
je
xor
imul
mov
loopne
sbb
rol
inc
call
fnsave
jp
in
mov
mov
xor
xlat
aad
jbe
sti
jmp
movs
pushf
or
fwait
and
add
mov
cmp
sti
lods
pop
sbb
loope
cmp
inc
dec
lock
adc
or
clc
mov
rol
mov
jb
cmp
cmp
ja
das
and
test
sub
outs
in
ficomp
ficom
mov
xchg
jno
inc
out
bound
inc
cwde
jmp
ins
sbb
enter
pop
or
fprem
mov
std
xchg
stc
cmps
xchg
(bad)
dec
push
stos
clc
inc
jmp
rol
cwde
or
or
mov
popa
pop
sbb
pop
mov
call
jge
adc
jmp
xchg
adc
pop
hlt
call
imul
and
mov
gs
movs
mov
je
xchg
loopne
mov
jbe
lods
adc
fisub
xor
cmp
mov
mov
jb
adc
inc
pusha
adc
mov
rol
loop
(bad)
sub
daa
leave
pop
daa
pop
sbb
js
sub
ret
fwait
or
pop
and
dec
lods
imul
cmc
or
mov
cli
sbb
cmps
sti
push
add
xchg
xor
inc
lds
(bad)
mov
lahf
mov
shl
dec
fadd
and
pop
(bad)
iret
xor
sar
and
jmp
dec
dec
inc
in
lea
int3
xor
aas
mov
inc
xchg
mov
dec
jo
mov
movs
cmps
cdq
test
jo
pop
xchg
xor
fdiv
cmp
pop
pop
push
sub
stc
inc
mov
sbb
(bad)
int
rol
mov
adc
cmc
mov
shl
out
sub
scas
rcl
cdq
jmp
mov
cwde
test
hlt
jo
mov
test
fcomp
xor
mov
mov
mov
ins
scas
xchg
jp
mov
mov
repnz
fsub
fsubr
sahf
add
fisubr
push
call
leave
dec
xor
icebp
lahf
in
fadd
add
push
rcl
mov
jo
or
int
ins
or
xor
push
shl
mov
xchg
hlt
mov
and
xchg
daa
nop
lea
retf
in
xor
push
arpl
loopne
out
leave
xor
sub
fbld
es
ds
mov
push
hlt
js
mov
xchg
pushf
mov
jb
mov
dec
xor
sub
mov
push
add
adc
push
aam
add
push
rep
cmc
mov
push
inc
ret
cmps
and
aaa
xchg
mov
aam
xchg
jg
jo
ror
ret
and
aas
clc
jmp
inc
cld
push
xchg
sub
sbb
cs
xor
cmps
sbb
adc
push
sbb
xor
fadd
fidiv
mov
xchg
jmp
mov
push
stos
bound
and
dec
or
cmp
cmc
mov
and
shl
lods
fcom
sbb
adc
add
inc
add
pop
push
xchg
xchg
sar
call
sbb
ss
push
out
cmps
or
mov
and
adc
or
adc
sub
xchg
pop
sbb
pop
and
sub
push
cld
mov
sbb
sti
sub
add
mov
add
movs
shr
hlt
fcom
leave
jmp
or
test
out
mov
gs
sbb
into
xor
nop
mov
int
jmp
sbb
mov
pushf
xchg
int
sbb
sbb
ins
jl
xchg
mov
dec
fild
cmps
push
push
retf
mov
(bad)
aas
mov
pop
mov
push
(bad)
rcl
imul
sub
lods
pop
mov
xlat
pop
lea
hlt
xchg
mov
popf
push
cmps
call
and
arpl
pop
fwait
jae
pop
scas
adc
and
lahf
xor
mov
rcr
cmp
test
daa
sbb
push
mov
xchg
inc
test
dec
pop
dec
and
mov
ret
xor
mov
dec
mov
pop
push
mov
push
and
and
push
jo
ret
pushf
sub
dec
mov
dec
push
div
out
and
pop
mov
adc
arpl
nop
mov
mov
test
repnz
push
sahf
xor
xchg
ds
pop
aad
dec
inc
sti
test
dec
mov
retf
scas
jmp
mov
sbb
add
(bad)
shr
cmp
xchg
hlt
inc
xchg
sbb
imul
dec
push
scas
dec
pushf
fistp
inc
push
out
mov
xor
xor
inc
test
mov
mov
mov
mov
adc
in
xchg
jl
popf
mov
push
punpcklbw
xchg
je
ficom
leave
fistp
sar
jle
out
test
mov
imul
inc
and
sub
fstp
fcomp
jl
dec
mov
pop
jb
dec
pushf
hlt
stc
pop
or
inc
or
inc
or
test
and
div
and
mov
mov
dec
jmp
ins
movs
inc
push
rcl
jl
mul
inc
lahf
ret
movs
(bad)
hlt
sbb
cmp
aas
mov
jns
ja
fiadd
jp
and
pop
bound
jg
sub
cmps
sbb
mov
pop
not
dec
sbb
xchg
lahf
xchg
inc
cmps
adc
shl
imul
cmp
js
hlt
jp
cmc
repz
hlt
nop
jae
test
mov
mov
push
(bad)
fwait
push
and
or
dec
dec
fnsave
pushf
inc
mov
or
cmp
xchg
stc
retf
push
int3
ins
fidiv
(bad)
repz
xor
xor
test
pop
dec
js
aaa
mov
xlat
mov
mov
ins
push
aam
mov
push
push
ss
mov
sub
lock
lahf
dec
shl
es
dec
adc
add
js
scas
cmp
push
pop
test
push
push
mov
es
repnz
inc
mov
(bad)
aad
cmp
retf
mov
sahf
jo
inc
or
bound
adc
dec
lods
enter
test
mov
mov
sub
sub
ret
mov
lds
in
mov
sahf
pop
jno
or
jp
sbb
sbb
mov
(bad)
std
mov
mov
aam
mov
(bad)
pop
ror
mov
test
jne
fsub
cmps
or
push
mov
ds
cmp
jmp
lods
cmp
outs
and
mov
xchg
scas
bound
out
test
out
pop
scas
or
cmp
cmc
sub
fnstsw
push
pop
test
out
fild
or
and
mov
add
and
or
xlat
ror
(bad)
daa
pop
xchg
inc
xchg
das
sbb
add
inc
loopne
scas
out
mov
in
mov
loopne
dec
fmul
inc
mov
mov
sbb
add
imul
(bad)
sbb
ds
dec
mov
and
(bad)
lods
xor
adc
shl
fs
cld
xlat
adc
pop
nop
ins
loop
loopne
ret
xchg
dec
dec
cmp
test
xlat
stos
test
arpl
dec
dec
adc
cli
add
push
dec
sub
or
inc
cmps
fmul
push
add
test
mov
pushf
inc
adc
pushf
jbe
xor
adc
or
mov
ds
out
mov
cmp
push
js
fisttp
add
es
les
pop
pop
sbb
les
cmc
repnz
fdivr
scas
pop
(bad)
cmp
int3
das
xor
jge
ret
xchg
push
push
scas
push
dec
sub
mov
push
aaa
fisttp
and
push
push
xchg
call
push
cmc
or
xchg
lock
mov
test
and
mov
lahf
call
(bad)
or
xor
mov
outs
pop
pop
outs
shl
ret
mov
retf
mov
aam
push
int3
cmp
sbb
push
movs
call
mov
imul
outs
sbb
xor
cmp
dec
push
mov
pop
xchg
(bad)
pusha
push
cld
imul
sub
shr
cdq
jno
push
inc
lds
jmp
cmps
fadd
aas
push
aaa
mov
jo
mov
jp
inc
sub
push
push
or
in
sbb
in
jl
je
pop
push
jp
add
or
push
pop
enter
jnp
fs
loop
inc
jg
mov
scas
mov
adc
imul
stos
jg
mov
mov
std
sbb
repnz
imul
lock
dec
scas
sub
xchg
adc
and
movs
mov
(bad)
int
scas
icebp
mov
inc
mov
in
mov
out
xchg
xlat
aam
add
outs
push
mov
jmp
jl
sbb
jp
call
pop
dec
hlt
shl
inc
jnp
ins
test
out
mov
inc
add
arpl
je
xor
mov
xlat
vmovshdup
mov
add
lahf
imul
(bad)
cmp
or
push
push
shl
or
cmp
fimul
dec
and
into
sub
cld
rcr
popa
jl
push
pop
mov
dec
sbb
push
xchg
sub
pcmpgtb
mov
ret
arpl
xor
adc
xchg
pop
xchg
add
cmp
(bad)
ja
test
push
mov
in
aas
ss
and
mov
movs
icebp
cdq
xor
jg
lods
enter
dec
lahf
fisttp
pop
inc
addr16
setge
std
iret
xor
adc
jnp
shl
dec
add
push
or
cmp
sar
mov
(bad)
fistp
or
jae
test
cwde
mov
sbb
mov
mov
dec
mul
inc
or
mov
jl
or
arpl
lods
in
sub
xchg
fdiv
out
imul
xchg
not
enter
movs
pop
cmps
push
scas
add
gs
pop
ins
mov
es
rcl
es
mov
aas
out
(bad)
in
out
jne
es
iret
sbb
movs
out
movs
(bad)
sar
call
(bad)
(bad)
cmp
push
les
mov
jmp
mov
push
and
inc
sub
lock
add
xchg
or
idiv
jge
aas
add
repz
or
xchg
add
jnp
je
mov
inc
or
cdq
test
mov
pop
fmul
jle
int
dec
and
push
lsl
cli
and
bound
mov
daa
stos
sbb
int3
sbb
pop
retf
dec
jno
and
mov
sbb
xchg
(bad)
pop
cmp
loope
lock
push
add
pushf
jno
mov
ins
jno
jne
sbb
mov
rcl
cmps
cdq
std
out
loope
pushf
jo
sbb
loop
push
or
call
sub
les
or
mov
imul
pop
int3
and
loopne
shl
stos
mov
sub
lea
push
cld
push
add
mov
repz
push
fs
hlt
mov
sahf
push
jmp
xchg
outs
fmulp
inc
pop
and
dec
add
mov
shl
mov
imul
jb
mov
pop
push
or
out
mov
pop
movs
fldenv
dec
adc
cmp
outs
mov
sahf
(bad)
mov
jmp
jns
lahf
mov
mov
push
pop
aad
jl
pop
out
lea
mov
jl
or
scas
popf
push
(bad)
int3
neg
push
neg
sbb
push
pop
iret
add
jecxz
movs
repz
shr
push
sar
movs
test
mov
out
mov
ret
out
cdq
ret
mov
push
lds
das
nop
add
dec
out
gs
dec
xchg
adc
push
inc
retf
jge
pop
repz
out
jg
push
and
aaa
jecxz
arpl
in
adc
les
mov
mov
and
imul
mov
popa
out
scas
(bad)
mov
test
and
mov
xchg
dec
imul
jmp
sahf
fld
clc
push
dec
push
push
jp
push
test
sbb
xor
mov
rol
daa
stos
fs
out
push
std
mov
pop
dec
mov
int3
pop
cmp
loope
xchg
mov
push
pop
xchg
mov
out
imul
mov
les
dec
ret
sbb
and
xchg
mov
ret
cs
outs
rol
xor
popa
adc
push
nop
lods
bnd
adc
xchg
and
adc
jmp
add
sub
add
iret
ficomp
adc
adc
into
cli
jle
adc
fbld
sbb
sbb
fimul
xor
daa
mov
pop
dec
(bad)
aam
lods
pusha
jb
jno
ss
cmp
jp
mov
and
jg
lods
sub
mov
ret
loope
xor
fsub
test
mov
in
lods
sub
ja
fisttp
int3
inc
inc
adc
outs
xor
dec
push
xor
ja
in
aas
dec
ror
mov
pop
add
push
mov
jmp
std
(bad)
enter
pop
arpl
cmp
xor
rol
loop
(bad)
fs
icebp
mov
and
inc
movs
cdq
ds
shl
add
jecxz
pop
push
pop
nop
ins
idiv
mov
rcl
frstor
inc
stos
(bad)
mov
(bad)
cmc
stc
int
cmp
mov
fwait
jns
pop
push
lods
(bad)
cdq
and
pusha
nop
addr16
loope
jnp
shl
outs
push
cdq
mov
ficomp
jmp
add
sub
mov
jp
test
add
cmp
test
sub
imul
jmp
push
and
je
mov
cmps
or
or
stc
sti
pop
cmp
in
jno
xor
loopne
mov
aaa
mov
int
or
outs
out
imul
sahf
mov
sbb
lahf
sbb
xchg
cmp
(bad)
ja
mov
inc
pop
enter
xchg
sbb
inc
in
iret
scas
call
imul
enter
jno
add
das
mov
jl
cmp
xadd
mov
sar
dec
xchg
inc
lahf
mov
sub
jmp
aas
pop
scas
and
into
adc
aaa
mov
xor
jmp
mov
push
fidivr
jo
push
jbe
fcmovnb
pop
arpl
cmp
je
sub
xor
les
mov
into
das
sbb
cli
cmp
sub
stos
cmps
xchg
cmps
cmp
movs
add
or
ja
repnz
icebp
inc
iret
in
bound
ins
cwde
outs
sub
and
and
cmp
mov
sbb
xchg
scas
mov
push
sar
cmp
xchg
mov
xchg
push
mov
inc
loopne
mov
xchg
loop
mov
cmps
(bad)
jmp
fiadd
mov
popa
sub
ret
loopne
sahf
cld
out
push
out
push
mov
test
mov
or
xchg
xor
(bad)
cmc
std
test
xchg
shl
iret
test
rol
repnz
call
scas
inc
outs
daa
data16
sub
ficomp
inc
addr16
lds
push
movs
adc
jne
pop
jp
and
xchg
jmp
scas
dec
dec
xchg
cmp
xor
aas
sti
push
ins
pop
jno
and
in
lds
pop
mov
stos
xor
lock
in
jno
and
lds
mov
mov
add
cmp
shl
push
in
lahf
dec
jg
(bad)
pusha
cmp
hlt
push
ret
adc
jp
int
mov
push
retf
not
inc
scas
mov
mov
pshufw
mov
and
dec
mov
jmp
xor
cmps
retf
or
loope
ficomp
ss
shl
addr16
loop
and
xor
sbb
jnp
jecxz
dec
imul
(bad)
mov
inc
cmp
xlat
rcl
xbegin
adc
clc
or
push
push
(bad)
xor
mov
hlt
jae
std
dec
xlat
jmp
fld
(bad)
pop
pop
xlat
psrlq
xchg
mov
js
cs
or
pop
test
ins
push
mov
jbe
and
push
(bad)
stos
pop
mov
inc
stos
imul
mov
pop
mov
out
in
and
and
mov
jmp
mov
push
(bad)
mov
icebp
jmp
fwait
push
jb
(bad)
in
sti
or
ds
lds
sahf
(bad)
mov
adc
add
pop
xor
popa
sbb
mov
xor
mov
pop
and
ss
sbb
cmp
cli
stos
jbe
out
mov
popa
stos
pop
lods
ds
fsubr
nop
adc
push
ins
inc
out
(bad)
in
into
and
xchg
ret
test
mov
sub
nop
test
popa
popf
pop
shr
cwde
or
imul
retf
mov
sbb
mov
pop
(bad)
dec
push
out
shr
mul
out
sbb
and
inc
sbb
scas
xor
jmp
shl
sub
push
dec
pushf
inc
cmp
add
sbb
inc
ret
cmp
push
jns
xchg
jge
xor
call
enter
and
mov
clc
lock
movs
inc
aam
inc
sbb
stc
sub
(bad)
jmp
dec
pop
push
sar
and
out
xchg
cmps
or
ret
ds
out
push
sbb
jns
adc
cli
and
pop
sub
push
(bad)
xor
push
add
jns
sub
inc
in
bound
leave
jne
pop
popf
xor
and
scas
push
into
retf
pushf
les
sub
dec
icebp
dec
loopne
ds
push
call
inc
test
mov
and
mov
mov
movs
(bad)
adc
xor
(bad)
jge
cld
bound
out
aad
xchg
ins
push
cmc
jmp
mov
and
arpl
movntps
leave
icebp
adc
xor
repnz
xor
fcomp
adc
stos
daa
shl
push
je
imul
lock
iret
mov
pop
dec
mov
and
retf
popf
lea
xchg
retf
out
dec
imul
jb
fild
movs
ds
scas
jbe
inc
mov
mov
in
(bad)
retf
xchg
adc
adc
mov
lods
out
xlat
retf
test
inc
push
aad
sbb
dec
mov
fdivr
push
test
mov
lahf
xchg
xchg
push
pushf
sub
mov
pop
adc
shl
mov
mov
ret
sbb
lahf
mov
mov
xchg
jnp
daa
rcl
nop
mov
retf
jnp
movs
sbb
jmp
sahf
(bad)
pop
adc
xchg
jg
cmp
push
cdq
repz
xchg
push
repnz
daa
lea
shl
out
mov
mov
push
add
dec
dec
mov
and
mov
and
fidivr
pop
popf
fmul
bound
or
cld
adc
jmp
lock
push
sar
imul
cs
in
adc
push
mov
in
pop
mov
and
clc
fnstsw
mov
ja
jle
imul
push
dec
sub
mov
jbe
jne
or
jle
rcl
dec
fsub
rcl
(bad)
out
enter
mov
leave
loope
dec
cli
lods
fst
sbb
sbb
cmp
push
mov
iret
cwde
int
sbb
hlt
mov
mov
jle
jnp
in
ins
sub
xchg
jb
ret
sub
xchg
(bad)
scas
jp
ins
cwde
movs
pop
dec
movs
mov
mov
xlat
ficom
ins
inc
repz
ror
outs
pop
and
pop
lods
or
aaa
and
adc
pop
mov
cmp
or
setae
mov
push
mov
mov
xchg
scas
movs
sub
lock
mov
aam
test
mov
xchg
rcl
aam
mov
hlt
sub
iret
neg
jo
(bad)
repz
pop
jecxz
sub
in
pop
stc
xchg
aad
fdiv
in
jmp
mov
jl
dec
(bad)
dec
or
inc
xchg
xchg
pop
sbb
sub
inc
xor
xchg
mov
ss
scas
xor
inc
(bad)
(bad)
push
or
jno
jbe
pushf
jg
jno
test
or
(bad)
and
clc
sbb
inc
jae
pextrw
jae
sbb
pop
xchg
jp
std
or
dec
pusha
cmp
popa
jb
or
loopne
(bad)
hlt
loopne
adc
mov
mov
xchg
sub
shr
out
stos
aaa
fbstp
in
sub
dec
xchg
aaa
mov
dec
pusha
clc
aam
inc
add
pop
cld
and
test
push
call
dec
in
ins
dec
out
mov
cs
jbe
mov
ja
sbb
les
cmp
pop
outs
jle
add
in
test
pop
sub
lea
fiadd
dec
aaa
int3
int
sbb
retf
cmp
cld
pop
inc
(bad)
cld
sahf
imul
mov
cmp
inc
call
push
arpl
imul
cli
and
and
cwde
mov
mov
sub
lods
bnd
ins
(bad)
inc
out
xchg
sub
adc
call
sub
xor
or
jo
call
push
xchg
es
inc
dec
lods
or
lods
js
mov
repnz
test
or
dec
push
stc
popfw
add
in
cmp
shl
mov
adc
jmp
inc
xor
les
dec
and
push
jmp
mov
push
inc
sbb
add
push
pop
out
sbb
pop
les
pushf
pop
daa
int3
add
jmp
sbb
int
stc
aam
push
bound
xchg
sbb
pop
mov
xor
pop
jecxz
mov
sub
fild
push
jmp
sub
ins
jle
aam
(bad)
jge
(bad)
jp
add
jo
pop
test
or
dec
out
(bad)
pusha
jnp
mov
sbb
leave
mov
imul
add
retf
jge
xor
mov
loopne
xchg
test
movs
js
btr
sbb
cld
(bad)
push
push
mov
aam
fisttp
fprem1
cmp
lds
cmp
int
mov
loop
ins
je
inc
jmp
imul
in
stos
gs
adc
in
xlat
popf
cld
push
(bad)
mov
(bad)
hlt
sub
dec
sub
outs
call
sbb
adc
adc
sub
sbb
dec
sub
jp
xchg
dec
(bad)
imul
pop
cmovne
ret
and
imul
cs
pop
jo
add
movs
es
jmp
jnp
lock
ja
and
das
(bad)
sbb
ds
cld
cmp
(bad)
scas
popf
mov
fiadd
add
pop
add
jns
inc
lds
sub
push
dec
imul
adc
xchg
add
jle
dec
mov
mov
imul
fcom
and
mov
leave
fcomp
push
movs
adc
and
mov
and
out
ficom
cmp
push
fadd
imul
call
cmp
cmps
mov
jb
repz
push
xor
mov
idiv
mov
xor
hlt
ret
nop
(bad)
cmp
pop
add
sahf
test
fimul
xchg
add
push
mov
cmp
mov
pop
inc
fndisi(8087
cs
mov
sub
aaa
fsubrp
and
mov
adc
nop
pushf
jp
nop
add
mov
xlat
in
scas
push
clc
outs
mov
jno
jmp
jl
je
cmp
ja
lods
test
call
test
popf
loope
test
inc
push
jae
popf
psubq
jg
pop
cmp
jns
jmp
daa
ror
push
xor
aad
and
daa
add
xchg
fwait
mov
jo
mov
mov
pop
fs
pop
addr16
xchg
aad
cld
repnz
cmc
pop
add
or
jmp
test
push
xchg
push
inc
adc
jge
out
or
mov
dec
aas
jo
scas
stos
dec
cs
mov
call
add
lods
adc
movs
xchg
and
and
popf
test
dec
sbb
jmp
pop
dec
cmp
std
jmp
dec
imul
cmp
push
in
not
add
add
push
mov
cmp
mov
fisubr
pop
pop
out
repz
push
into
or
es
and
xor
dec
adc
test
scas
mov
inc
call
pop
int
xchg
jle
movs
pop
into
pop
xor
imul
pop
ffree
xchg
arpl
imul
fcomp
iret
and
mov
push
jp
jle
add
iret
popa
push
jb
mov
mov
and
xor
mov
cmp
scas
jbe
xchg
mov
dec
sahf
jle
pop
sbb
data16
out
repz
ja
pop
inc
or
scas
pop
jg
inc
fldenv
sub
test
pop
repz
jne
clc
xor
test
mov
das
call
cli
ss
xor
mov
adc
inc
add
sbb
(bad)
fnstcw
and
rcl
mov
inc
pop
dec
mov
sub
and
dec
clc
ss
adc
dec
loopne
rcr
mov
dec
(bad)
nop
rcl
pop
mov
cmc
in
and
cmp
xchg
mov
repnz
lock
mov
and
das
mov
mov
inc
xor
mov
push
les
mov
cmp
or
stc
aad
sbb
ja
imul
lahf
mov
pop
xchg
je
jno
mov
cwde
outs
jl
imul
push
jb
(bad)
jmp
pop
call
mov
xor
sbb
rcl
xchg
fsubr
xchg
ret
jle
(bad)
in
mov
and
loope
jo
inc
inc
pop
xchg
std
pop
lock
xor
hlt
adc
dec
xchg
int3
mov
jbe
sbb
test
aas
push
push
pop
xor
clc
push
(bad)
jmp
(bad)
fist
cmp
inc
stos
cmp
dec
cli
mov
fs
push
inc
adc
into
xlat
ret
sahf
adc
ds
ins
std
pop
sahf
xchg
pushf
(bad)
int3
fisubr
sbb
jb
sbb
xor
push
jge
ret
call
push
xchg
xchg
stos
dec
out
add
or
adc
adc
(bad)
cmc
outs
dec
mov
ja
xchg
dec
pop
push
xchg
lahf
fsubr
jb
pop
xchg
dec
in
push
loop
mov
pop
rep
out
aam
out
(bad)
xlat
lahf
sub
push
mov
pop
(bad)
in
jns
test
out
lea
popf
inc
clc
add
cmp
and
jge
jb
test
xchg
call
mov
and
aad
rcl
(bad)
jmp
popa
mov
lahf
mov
cmp
rol
imul
rcr
outs
fadd
int3
(bad)
pop
pop
sub
inc
loope
hlt
inc
push
call
test
mov
(bad)
stos
in
dec
adc
xor
adc
call
fsub
fdivr
sbb
cwde
daa
pop
mov
sar
ins
fst
loope
mov
std
or
push
(bad)
pop
push
mov
adc
aaa
jle
ss
mov
cmp
inc
pop
dec
ins
sbb
inc
mov
jbe
push
es
call
jno
inc
fwait
outs
inc
and
dec
lods
jne
out
repz
push
mov
add
dec
(bad)
sbb
lods
sub
stos
push
loop
(bad)
or
pop
retf
sbb
ds
add
repz
lds
jne
(bad)
pop
cmps
repnz
adc
call
sar
arpl
xor
btc
(bad)
ss
push
mov
add
sbb
stc
pushf
mov
lock
cmp
push
out
dec
push
aas
adc
add
test
(bad)
mov
bound
test
jle
sub
xchg
push
arpl
out
lahf
pop
lock
scas
clc
push
sbb
mov
popf
imul
icebp
in
mov
jb
jl
mov
movs
cmp
shl
mov
mov
push
arpl
test
or
jmp
rol
repnz
scas
pusha
and
jg
cmp
mov
jo
fs
add
push
popf
mov
out
adc
aad
mov
aam
add
mov
inc
jo
retf
aas
scas
lds
imul
push
and
and
mov
cmp
xchg
jb
mov
mov
xrelease
popa
mov
(bad)
outs
ss
fidivr
jnp
xchg
mov
mov
push
xor
loope
add
mov
or
sbb
fsub
retf
or
(bad)
jns
push
call
xchg
push
jecxz
sbb
mov
cld
sar
or
push
adc
mov
or
shl
push
dec
dec
jae
sti
ds
int3
add
add
scas
shl
push
push
push
(bad)
push
imul
add
popa
push
push
dec
sahf
jle
mov
clc
cmp
and
lahf
das
int3
das
js
fwait
(bad)
je
ror
xor
lahf
sub
dec
xor
(bad)
mov
data16
cmp
pop
xchg
and
stos
(bad)
jbe
das
call
push
jno
xchg
aam
je
jne
sbb
popw
fwait
xchg
jmp
leave
and
nop
arpl
call
les
push
fbld
into
popa
dec
shl
pop
mov
and
xchg
or
retf
push
fcom
adc
gs
imul
enter
xor
jp
inc
cli
sti
add
inc
pushf
fcmovne
test
and
repz
xchg
jmp
cmp
cmps
add
sar
sub
ja
stc
les
loope
xchg
sbb
mov
xchg
jmp
and
hlt
jae
arpl
lahf
pop
cmc
daa
fwait
es
lahf
popf
add
nop
fsub
ret
daa
in
stos
adc
arpl
(bad)
stos
dec
aas
dec
mov
push
shl
lods
pop
jno
shr
ja
pop
call
cmp
jge
pop
dec
std
mov
adc
mov
adc
fdiv
scas
xor
mov
jg
jle
(bad)
rcl
xor
and
outs
pop
or
loopne
push
adc
mov
call
pop
jmp
push
nop
movs
sbb
xchg
push
das
sub
ins
es
je
iret
jb
or
jle
enter
jne
push
sahf
das
aad
jae
sbb
xor
paddsb
xor
sahf
retf
daa
repz
fst
test
call
cmp
mov
ds
fmul
sub
int
sub
push
mov
adc
or
sub
movs
nop
fwait
add
mov
outs
sbb
dec
add
and
out
cmp
or
scas
(bad)
dec
jne
push
(bad)
jl
repz
add
adc
aad
nop
stc
add
scas
bnd
push
ja
adc
cmp
pop
cmp
outs
cmp
mov
leave
inc
add
cmp
cmc
lock
add
jne
xor
fwait
retf
mov
shr
add
jne
push
rol
push
mov
jecxz
shr
into
int3
jmp
cmp
add
fwait
sub
pop
rol
dec
scas
pop
aas
test
cmp
retf
inc
inc
sahf
sub
les
or
cmc
or
js
jb
pop
sbb
ins
mov
(bad)
pop
stos
push
shl
sbb
dec
push
xchg
stos
jae
mov
pop
out
mov
mov
lock
dec
xchg
fdivr
in
ja
js
pop
or
cdq
add
lahf
fdiv
mov
js
retf
xchg
mov
fwait
jl
shl
jne
xor
leave
sub
jge
adc
cmps
adc
movs
xchg
push
add
sub
test
sub
es
jl
mov
iret
inc
jl
call
icebp
cwde
sub
scas
test
ins
jae
fs
jno
lahf
or
pop
test
mov
std
retf
add
mov
(bad)
in
aas
fwait
iret
jmp
sub
lahf
imul
mov
sbb
mov
aam
loop
rcr
cs
inc
call
sub
mov
jne
clc
ret
fiadd
dec
push
mov
inc
pushf
pop
pop
test
fistp
push
inc
add
not
or
in
sahf
(bad)
sti
(bad)
pushf
nop
xchg
adc
sbb
pop
test
mov
mov
clc
dec
xchg
mov
and
xor
cdq
dec
cli
lds
loope
scas
pop
mov
fucomip
mov
inc
sar
inc
test
lock
aad
enter
scas
daa
xchg
mov
popf
or
clc
xor
or
push
shl
in
sbb
call
lds
stc
dec
inc
aaa
and
sbb
sar
xor
clc
les
das
sbb
sbb
ret
add
sub
stos
std
repz
cmp
aad
jb
xchg
enter
xor
pop
arpl
sub
push
shl
add
pop
adc
arpl
test
sub
loope
inc
jb
cmps
and
xchg
ja
out
add
push
jo
mov
sbb
sbb
(bad)
xor
into
mov
xor
movs
enter
pop
int
mov
in
fidivr
lea
mov
inc
cmp
jecxz
mov
cli
arpl
ins
xchg
test
test
icebp
ja
aad
mov
mov
jge
mul
(bad)
xchg
sub
gs
sbb
adc
jle
push
cmp
and
int
out
mov
cmp
leave
inc
mov
lock
cmp
fnstsw
out
dec
mov
in
jno
movs
cs
adc
loope
ret
jmp
xchg
cmp
push
sbb
inc
inc
std
push
call
jp
mov
mov
ss
push
sub
rcl
pop
enter
fwait
into
scas
pop
sbb
pop
or
cmc
jb
arpl
or
mov
rol
mov
cmp
xor
inc
add
push
mov
adc
ror
jbe
xor
loop
sahf
std
inc
mov
add
retf
mov
jmp
vpshufd
jl
fst
or
lds
loopne
inc
outs
addr16
xlat
sbb
test
xchg
jl
shl
xchg
pushf
test
in
clc
push
arpl
fisttp
push
cmp
in
int3
jne
pmaxub
outs
cmovs
leave
dec
jae
dec
cmc
pop
icebp
ins
push
mov
sti
ret
sub
add
add
leave
xchg
fcom
jmp
daa
clc
ror
scas
fcmovb
xor
ret
sub
cmp
push
bound
sub
mov
cmps
int
shr
popf
jecxz
repz
lods
pusha
dec
mov
retf
push
stc
adc
cmp
dec
mov
push
stc
lahf
push
push
mov
fwait
nop
scas
in
xchg
mov
dec
jg
es
mov
mov
pop
aas
sbb
jmp
jp
sbb
mov
and
mov
add
mov
popa
(bad)
jns
and
or
stc
int
cmp
into
jb
jecxz
sub
mov
push
push
dec
push
in
sub
and
mov
inc
test
add
jnp
fwait
dec
sub
push
stos
inc
scas
pop
in
cli
call
data16
cwde
lds
adc
push
std
into
ret
push
test
mov
int3
movs
dec
cld
fisttp
inc
ja
push
cmps
js
push
sar
in
call
mov
jnp
jg
loope
popa
mov
pop
in
mov
lahf
out
sbb
test
mov
repz
in
mov
jle
jl
cmc
ret
jo
mov
push
pop
xor
dec
lahf
push
sub
sbb
mov
mov
movs
adc
mov
push
arpl
push
outs
pop
adc
aaa
leave
mov
xchg
mov
sub
push
ds
xchg
adc
add
jecxz
cmc
test
push
sub
lahf
(bad)
aad
nop
push
xchg
pop
fisub
jle
or
xchg
mov
mov
cmps
fidiv
(bad)
sub
mov
adc
fadd
cli
xchg
mov
or
idiv
cmp
leave
mov
imul
inc
sbb
mov
es
fisttp
inc
jns
push
or
mov
popf
stos
test
jge
jg
(bad)
jne
or
mov
adc
sbb
int
pop
ffreep
into
les
loopne
mul
add
and
push
ds
inc
jp
sub
stos
lods
inc
jo
xchg
push
mov
and
jmp
push
inc
movs
add
ja
lods
jbe
inc
test
jle
stc
cdq
fs
jecxz
mov
kaddb
jecxz
hlt
sbb
test
sbb
in
pop
sub
pop
jl
xchg
inc
das
aas
ret
adc
loope
addr16
lea
cmp
xor
sub
imul
add
sub
cmp
dec
pop
adc
mov
dec
pop
sbb
lahf
cmp
(bad)
rcr
push
pop
jb
pop
and
sub
call
xchg
sbb
and
xor
cmp
ja
addr16
inc
xor
inc
pop
lahf
hlt
xchg
sub
pop
jmp
movs
scas
dec
mov
cmp
xchg
ja
je
aad
fwait
add
cmp
rol
daa
js
dec
pop
jle
fwait
popa
or
adc
mov
movs
push
cmp
ins
inc
and
(bad)
loop
xlat
cmp
clc
in
adc
lods
outs
ja
adc
mov
fisttp
js
iret
bound
dec
test
enter
jmp
jg
xchg
sbb
jl
add
or
jb
mov
loopne
scas
dec
bound
pop
mov
jl
jecxz
or
adc
dec
jbe
fimul
dec
mov
mov
xchg
loop
fs
bound
dec
mov
mov
cmps
or
mov
inc
lods
jge
lods
int
mov
(bad)
jbe
test
dec
sahf
sub
mov
xchg
inc
and
push
js
shr
popf
or
neg
fidiv
or
clc
jp
and
adc
out
cmp
retf
(bad)
mov
mov
push
retf
out
pop
fld
aad
or
popa
sub
add
addr16
out
adc
inc
pop
jmp
pop
ss
add
(bad)
in
bound
popf
or
fcom
or
out
sbb
cmp
xor
(bad)
or
hlt
push
or
cmp
adc
stos
jge
mov
ret
popa
inc
cmp
adc
addr16
bound
fcomp
bnd
mov
xchg
repz
fwait
jns
and
jmp
mov
movs
inc
clc
nop
call
inc
xor
push
cs
jp
out
bnd
int3
lock
or
std
retf
cmps
mov
out
sub
fstp
out
ins
ja
dec
xchg
inc
int3
pop
adc
ja
int3
out
mov
(bad)
xchg
jne
lahf
push
xor
pop
ds
popf
js
sbb
push
and
in
push
in
rcr
shl
pop
push
dec
lds
mov
fsub
dec
fucom
inc
retf
cmp
adc
cmp
imul
push
jecxz
cwde
aad
pop
sbb
leave
sub
cwde
imul
lahf
mov
jno
dec
jo
add
ins
cli
lds
lds
sbb
in
pop
cmc
add
shr
cmps
sub
mov
sbb
iret
xor
sbb
xor
dec
mov
and
sub
add
cmp
mov
dec
mov
mov
jl
test
mov
jp
push
int3
xchg
movs
xor
or
dec
or
push
in
mov
fwait
movs
gs
js
popa
pop
pop
push
pop
shl
movs
sbb
ret
sbb
inc
clc
sub
lods
sub
or
(bad)
idiv
dec
sub
adc
int
sbb
fldlg2
pushf
arpl
mov
mov
jle
push
mov
xor
scas
aad
inc
adc
push
jae
data16
or
inc
das
mov
ret
add
xchg
jge
sub
out
xacquire
dec
mov
cdq
push
xor
popf
jne
xchg
repnz
mov
mov
cmps
and
and
mov
popf
add
call
loopne
ror
sbb
cmp
aaa
test
inc
retf
xchg
mov
rcr
in
inc
test
pop
aad
out
push
test
(bad)
pop
int
mov
or
(bad)
nop
shr
xchg
or
ret
or
fidiv
bound
adc
jb
out
dec
(bad)
sbb
outs
mov
xchg
or
sbb
jmp
iret
mov
and
push
fild
jmp
lods
aas
mov
sbb
xor
retf
addr16
xlat
ror
inc
xchg
jp
in
push
push
dec
and
push
lock
nop
sbb
(bad)
adc
std
adc
and
fwait
sub
pop
in
sar
jne
jmp
leave
inc
adc
cdq
data16
std
add
inc
call
dec
mov
jbe
ins
adc
je
dec
push
dec
add
cmp
add
test
push
push
push
ret
aaa
jo
mov
dec
imul
adc
imul
mov
int3
or
xchg
stc
sbb
pop
sahf
mov
icebp
mov
loopne
popf
push
pusha
test
pop
sub
aas
mov
push
retf
dec
clts
push
cwde
push
(bad)
pop
dec
ins
push
or
addr16
imul
adc
cli
push
pusha
je
mov
out
rcl
movs
dec
jge
neg
lea
cmp
sar
gs
cdq
xchg
repz
pop
(bad)
arpl
outs
cmc
jge
clc
sub
rol
fstp
out
ins
aaa
call
add
(bad)
leave
adc
(bad)
ins
xor
cdq
enter
fwait
movs
sub
pop
leave
(bad)
fimul
shl
fnstcw
sar
(bad)
call
out
and
nop
js
js
mov
jne
dec
dec
sub
push
sbb
xchg
outs
loope
push
adc
push
xchg
mov
shl
lea
xlat
and
imul
int3
hlt
pop
pop
pop
lods
data16
es
fcom
inc
push
ret
adc
mov
ja
retf
loop
cmp
push
mov
data16
and
jno
mov
mov
xor
(bad)
jl
mov
icebp
mov
(bad)
ja
aad
pop
out
jb
adc
mov
es
pusha
adc
leave
test
mov
sbb
mov
fistp
inc
mov
mov
neg
mov
sub
loop
movs
add
mov
bound
retf
push
repnz
cdq
leave
push
pusha
push
mov
fcmove
cs
retf
cmp
mov
mov
adc
daa
xchg
or
xchg
and
arpl
aam
mov
pushf
mov
sti
les
popf
imul
and
and
mov
(bad)
test
hlt
sbb
cdq
movs
mov
leave
push
add
push
cdq
cmp
mov
std
add
pop
xor
mov
in
sahf
mov
das
mov
sub
rcr
arpl
dec
push
outs
xchg
pop
xchg
bound
stos
movs
and
hlt
mov
adc
adc
in
xor
sti
inc
call
inc
sub
scas
lods
jae
enter
push
jb
out
mov
or
enter
sbb
dec
aad
inc
(bad)
test
arpl
mov
mov
lea
(bad)
enter
bound
(bad)
mov
cmc
pop
and
and
jo
push
jnp
jle
rol
jno
fs
std
jnp
mov
or
(bad)
gs
inc
sahf
(bad)
loop
adc
jns
and
sbb
sti
mov
lock
sti
daa
je
sub
(bad)
std
aad
add
sar
enter
jns
adc
test
adc
push
jmp
push
cmp
dec
xchg
clc
sbb
fsubp
adc
rcr
ret
lods
sbb
pusha
fisubr
and
add
(bad)
push
sbb
cmp
pop
repz
aad
jl
xchg
jle
xor
jl
push
out
mov
push
mov
adc
pushf
lods
sub
hlt
repz
cmp
mov
and
cs
loopne
dec
mov
sub
push
mov
cmc
sub
enter
and
add
mov
pushf
push
fmul
inc
or
jmp
inc
cmps
cwde
aas
mov
movs
jmp
icebp
xchg
fnstcw
inc
stos
ret
or
push
add
pop
sub
add
mov
stos
mov
pop
or
jmp
inc
outs
sbb
jb
bound
xchg
mov
lea
fmulp
repnz
mov
cmps
rcl
stc
clc
xchg
fisub
(bad)
xchg
(bad)
lods
in
sub
xlat
xchg
mov
hlt
add
sbb
pushf
push
dec
sar
aaa
ret
out
inc
and
mov
and
out
movs
pusha
xchg
ret
pop
xchg
xchg
fidivr
xor
pushf
sahf
and
fild
and
xchg
sub
xchg
fst
lea
or
push
adc
mov
fiadd
jbe
cwde
cmp
out
into
loopne
aas
leave
xchg
or
cs
mov
pop
jbe
push
data16
mov
test
rcr
and
jecxz
or
or
pop
push
in
push
push
das
adc
jle
ficom
xor
xor
fsub
out
icebp
ret
inc
jmp
push
inc
dec
or
movs
or
sub
stc
mov
mov
push
pop
lea
fldenv
inc
jmp
mov
sbb
xlat
xchg
dec
pop
cmps
mov
pop
arpl
dec
repnz
ret
mov
jecxz
or
ins
out
ss
fisttp
lds
bound
push
cli
push
aaa
neg
sub
adc
mov
sar
push
rcl
mov
inc
call
xchg
sbb
popa
jne
sbb
add
imul
repnz
(bad)
mov
or
sbb
xchg
ins
lock
aaa
std
xor
mov
addr16
mov
out
sbb
jmp
and
jg
cmp
and
push
jle
jb
sub
pushf
pushf
sub
push
xor
xor
push
xchg
xlat
div
jne
shl
call
push
adc
in
pusha
cdq
xor
inc
xchg
out
pop
push
jne
imul
bound
cmp
addr16
cmp
dec
rcl
(bad)
outs
mov
cmp
fld
push
test
aam
pusha
out
cmp
jg
push
mov
inc
cdq
in
gs
cmp
aad
jne
mov
mov
shl
lahf
aad
xchg
mov
mov
xor
jae
ss
pushf
das
bound
xlat
out
(bad)
cld
pushf
xor
cmps
ret
movs
sti
or
or
sbb
icebp
pushf
dec
cmp
xchg
pop
fisttp
push
xchg
add
and
ffree
dec
inc
cmps
pop
dec
mov
mov
mov
cmp
fdivr
les
aas
(bad)
or
jmp
and
mov
fstp
js
mov
push
jbe
add
outs
or
mov
iret
dec
into
pushf
mov
jge
popf
xchg
lds
fwait
(bad)
ffreep
imul
mov
add
dec
push
(bad)
les
mov
int3
pop
adc
push
jae
xchg
clc
call
jle
es
int
add
in
fsub
test
push
xchg
into
test
cmp
adc
pop
int
adc
(bad)
xor
movs
lock
lods
mov
adc
call
outs
inc
fst
leave
dec
xor
mov
sahf
lods
aas
add
jmp
(bad)
test
cmp
push
lock
dec
sub
(bad)
inc
push
fadd
lds
jmp
adc
xchg
call
popf
push
xor
out
add
add
pop
ret
pop
jp
dec
add
cmps
arpl
cli
sub
mov
fisttp
jae
pusha
add
mov
push
mov
scas
js
lahf
sbb
fs
cmp
mov
xor
inc
iret
(bad)
xchg
add
mov
cmp
mov
out
mov
pushf
cmp
rol
sahf
(bad)
pop
data16
outs
add
pop
pop
nop
std
jns
xor
cli
jge
in
inc
jge
sbb
addr16
push
dec
dec
or
or
outs
push
enter
mov
jbe
das
aam
in
stc
mov
daa
cmps
gs
push
out
sub
(bad)
(bad)
mov
push
fwait
mov
pusha
pushf
jle
(bad)
(bad)
nop
test
sub
mov
test
fs
test
adc
pop
enter
in
xchg
dec
sahf
int
call
sbb
inc
ja
pop
(bad)
adc
push
lds
push
jb
cmc
adc
in
and
push
mov
movs
push
out
push
pop
leave
cli
rcr
sbb
lahf
sub
inc
inc
push
arpl
jno
sti
js
cmp
stos
ins
out
scas
cs
clc
bswap
out
out
lock
sub
fdiv
mov
mov
add
mov
or
aam
jmp
and
push
daa
or
adc
push
xchg
lods
jmp
ficomp
shr
adc
rcl
mov
sbb
ja
(bad)
cmp
cli
cmps
xor
sub
leave
dec
push
cs
push
sbb
adc
jge
in
imul
lods
sub
jge
fcomip
mov
lock
in
mov
sahf
dec
nop
adc
pop
xor
shl
xchg
lds
jno
gs
jbe
sub
mov
cmps
mov
pop
int3
ret
adc
jae
xchg
and
mov
mov
bound
mov
adc
lds
test
pop
push
loopne
int
test
(bad)
push
sub
ss
cmc
lods
push
clc
retf
in
(bad)
mov
cmp
cmp
or
mov
xchg
add
sub
push
cmp
js
and
nop
(bad)
int3
dec
repz
rcr
ja
cmp
dec
ret
mov
mov
int3
push
mov
test
xchg
xor
mov
inc
(bad)
sbb
xor
or
scas
test
jecxz
retf
push
ds
popa
or
mov
enter
adc
adc
jg
(bad)
test
and
cld
stos
dec
and
stos
push
(bad)
sub
imul
cmp
test
xchg
fnstenv
adc
dec
mov
jmp
mov
in
cli
push
mov
ds
clc
adc
sbb
adc
fist
or
test
aad
mov
jle
cwde
and
ret
dec
shr
jo
mov
mov
in
inc
add
cmp
ret
xchg
jecxz
or
stc
fucomp
xor
ret
mov
xchg
out
jle
jmp
pop
fs
pop
(bad)
rep
push
jnp
push
loop
frndint
test
imul
sahf
test
sbb
cmp
pop
xor
or
cmp
daa
out
sahf
sbb
pop
lea
mov
mov
cs
loope
cwde
ret
jmp
movd
push
stos
or
test
cmps
adc
xchg
std
test
pushf
and
movs
cmp
sbb
(bad)
pop
mov
sbb
jns
sbb
dec
lea
xor
mov
push
mov
shr
mov
adc
scas
push
icebp
sub
sar
cld
cli
inc
adc
test
mov
ins
pusha
arpl
lock
and
pop
call
push
popa
test
xor
lahf
jg
adc
dec
push
and
ret
and
popa
(bad)
das
cs
adc
xor
in
xor
mov
xchg
jle
test
push
dec
sbb
dec
sbb
cs
add
or
mov
pop
test
sub
cmp
imul
hlt
mov
xlat
in
sub
mov
repz
into
(bad)
out
inc
cld
sbb
cwde
add
sbb
xor
jmp
pop
loopne
pop
mov
push
or
pushf
inc
jne
sub
ret
out
sbb
sti
out
sbb
adc
rcl
jge
cmp
push
shl
out
vpmovzxbw
out
add
push
clc
ins
adc
and
add
adc
sub
or
movs
dec
(bad)
mov
xor
das
fst
xor
xor
mov
adc
out
or
data16
mov
adc
cs
(bad)
or
fcomp
add
sbb
jnp
imul
(bad)
pop
out
je
stos
pop
sub
sbb
xchg
jne
std
inc
test
pusha
call
outs
bound
adc
add
nop
pop
mov
fs
inc
hlt
push
jmp
cld
je
hlt
ins
jp
adc
daa
fdivr
ins
stos
out
inc
repnz
pushf
test
or
std
jo
push
mov
adc
xor
aaa
mov
lods
sub
daa
sub
and
test
and
mov
add
out
sahf
in
xchg
adc
cmps
cli
enter
jnp
popa
inc
mov
rol
ret
mov
sbb
jecxz
pop
ror
pop
sub
push
and
dec
retf
adc
mov
mov
test
add
iret
loop
arpl
add
test
scas
ds
loope
rcl
loope
cs
push
jg
xchg
mov
jns
sub
jno
dec
mov
ja
mov
jmp
or
cmps
jno
mov
or
(bad)
sbb
int3
push
(bad)
sbb
js
loope
xchg
loop
xchg
xlat
jae
stos
gs
dec
and
pop
mov
sbb
and
mov
gs
sub
dec
mov
ds
mov
data16
inc
add
imul
jmp
xchg
call
frstor
lea
retf
repnz
cmp
mov
cmp
add
cmp
(bad)
in
dec
scas
dec
sbb
rcl
mov
cdq
xchg
jns
push
xlat
rcr
mov
or
and
into
mov
dec
mov
sbb
and
mov
mov
xor
out
mov
scas
sbb
out
rol
mov
aad
fcmovb
or
mov
rcl
les
lds
push
xchg
in
adc
add
pushf
xor
xlat
xchg
cld
into
jnp
mov
mov
movs
dec
(bad)
out
ins
movs
pop
mov
mov
jno
(bad)
cdq
adc
(bad)
mov
add
mov
inc
push
mov
or
cmps
push
adc
fs
push
jmp
aam
inc
das
retf
imul
mov
and
shl
jbe
std
jb
test
aad
mov
cli
gs
loope
movs
ficom
jb
(bad)
cld
stos
pop
inc
cld
cmp
inc
(bad)
mov
mov
sub
cwde
sbb
shl
jb
lahf
mov
push
je
outs
and
pop
mov
xor
add
inc
inc
and
mov
add
mov
lods
add
imul
and
clc
cmp
push
ds
add
cmc
xchg
xor
es
cmp
daa
pop
dec
out
mov
mov
rcl
stos
sbb
push
sbb
mov
sbb
call
push
je
jle
out
enter
mov
xchg
aaa
adc
(bad)
mul
jg
cmp
push
aas
add
call
movs
lock
xor
(bad)
lods
mov
fstp
std
cmp
(bad)
clc
hlt
ja
adc
test
jge
cwde
iret
sbb
push
test
lock
jae
das
mov
cli
test
aad
loopne
aad
mov
call
push
and
xor
ja
and
test
xchg
aas
cmc
ret
pop
cld
or
js
inc
outs
les
jno
js
test
pop
mov
cli
mov
mov
mov
jmp
pop
mov
xor
mov
jbe
adc
add
int3
out
dec
dec
lock
mov
rcl
and
test
retf
adc
out
stos
add
jb
mov
cmp
mov
repz
push
ins
sub
pop
mov
pushf
or
mov
fist
mov
(bad)
mov
loopne
and
(bad)
mov
xchg
je
(bad)
stos
and
sub
pop
je
push
add
dec
inc
stos
mov
xchg
xor
das
xchg
aam
imul
xor
dec
push
(bad)
fisttp
sbb
and
popf
push
cmp
retf
pop
xor
test
test
inc
mov
aaa
mov
out
pop
push
pop
mov
aam
mov
cmc
shr
and
adc
cmp
mov
mov
enter
test
adc
add
sti
test
push
ss
pmaxsw
jnp
retfw
xlat
and
mov
add
push
xchg
enter
pop
js
adc
push
mov
ret
sahf
and
sbb
adc
jo
rcl
mov
mov
push
lea
pushf
mov
lahf
jno
in
xor
jg
sub
sub
hlt
add
ret
add
xchg
scas
in
sbb
mov
imul
(bad)
mov
xchg
arpl
jmp
dec
movs
mov
and
xor
sbb
and
push
cmp
mov
scas
sub
sub
dec
mov
out
or
or
mov
or
pop
and
dec
not
add
sbb
lea
add
sub
pushf
into
mov
repnz
fwait
das
pop
cmovb
bound
test
push
stos
or
popf
and
cmc
int3
mov
daa
ss
jno
pusha
mov
mov
les
jo
cmc
xchg
add
stc
mov
pop
jo
dec
pop
jne
test
in
sub
addr16
mov
test
dec
or
in
jb
mov
ja
ds
mov
(bad)
gs
imul
adc
stos
mov
imul
in
in
push
xor
inc
mov
add
inc
push
add
addr16
cmp
jnp
add
and
xor
mov
dec
fadd
pop
adc
pop
jns
xchg
mov
or
test
mov
movs
sbb
repz
mov
mov
mov
pop
ds
in
mov
mov
es
js
cmp
adc
std
out
xor
xchg
inc
xlat
imul
mov
movs
(bad)
not
xor
pop
xor
out
mov
mov
pop
or
aaa
mov
sbb
sbb
shl
mov
push
rol
test
in
mov
push
sbb
fst
mov
cmps
or
inc
push
mov
adc
(bad)
loop
sub
arpl
fnstsw
dec
stos
adc
adc
aaa
pusha
dec
ror
mov
sbb
dec
jecxz
adc
ret
inc
and
sub
dec
sbb
jb
aaa
lods
retf
push
add
or
add
mov
in
xchg
sbb
and
cmps
imul
xchg
push
div
jae
xchg
xchg
addr16
push
add
(bad)
push
push
xlat
sub
dec
js
or
xchg
cli
push
pusha
pushf
push
push
dec
push
fst
shr
cmp
lahf
mov
cmc
adc
pop
sub
jecxz
iret
clc
int3
and
add
cdq
call
add
loope
aaa
inc
add
cmp
call
pop
inc
dec
mov
movs
inc
aad
sub
inc
mov
repz
xor
adc
mov
mov
imul
push
push
rol
and
xchg
leave
ret
push
dec
(bad)
js
imul
and
dec
mov
stos
xlat
ds
lock
movs
push
jbe
mov
iret
inc
mov
cmp
sub
int
inc
aas
aad
into
stos
mov
cmp
sbb
nop
or
mov
adc
cmp
repz
xor
lods
pop
call
outs
sbb
mov
pop
mov
push
cmp
aam
mov
jnp
lds
aaa
ins
out
je
nop
jmp
sub
or
or
mov
xchg
mov
hlt
push
js
pop
or
shr
pop
pop
lahf
dec
jle
and
lods
lock
inc
sub
fsub
and
popa
cmp
dec
out
repz
xchg
xchg
and
(bad)
add
adc
or
lds
dec
dec
sbb
mov
ret
push
pop
ins
ret
pusha
call
cli
xor
mov
ret
push
mov
and
aaa
xlat
jb
int3
or
inc
lahf
add
inc
inc
and
and
jecxz
cld
and
mov
in
jae
xchg
mov
dec
ds
jmp
xchg
sub
loope
arpl
pop
sub
sbb
cld
mov
push
mov
ss
xlat
popf
add
cmp
mov
mov
pop
les
test
inc
cmps
es
sbb
xchg
inc
mov
pop
push
rol
ror
mov
int3
dec
inc
xchg
aam
sub
xor
rcl
mov
fdiv
push
icebp
ja
xchg
ja
jmp
inc
rcl
mov
hlt
enter
mov
in
sub
jecxz
sub
mov
push
or
dec
repnz
sub
mov
fst
sub
sub
sbb
test
pop
push
xor
xchg
mov
sub
les
add
push
pop
arpl
mov
ds
jno
adc
clc
pop
mov
loop
xor
shl
loopne
jmp
outs
jmp
mov
xlat
push
xchg
pushf
leave
jns
jae
cwde
push
jge
inc
adc
not
push
scas
cmp
mov
jg
out
add
cdq
xor
sbb
sub
repnz
push
std
push
jo
aaa
ja
(bad)
mov
dec
sub
ds
mov
mov
pop
cld
lahf
pushf
xchg
imul
mov
lahf
(bad)
fcom
and
jmp
lea
lock
popa
retf
ja
leave
ret
dec
stc
fs
ins
sti
add
push
inc
int
in
lahf
mov
movs
mov
cmp
(bad)
mov
sbb
pop
cli
or
into
dec
pop
add
inc
jmp
clc
cmp
icebp
(bad)
push
dec
dec
jp
ror
sar
mov
cwde
fiadd
dec
stc
dec
jo
or
mov
(bad)
popf
inc
test
jmp
jb
retf
pop
mov
mov
dec
inc
jmp
add
fwait
add
ins
das
imul
pop
cmp
push
and
in
test
int
call
push
pop
dec
jmp
dec
js
cmps
sbb
cmc
aas
and
push
(bad)
in
mov
out
xchg
and
cmps
(bad)
xchg
aas
mov
(bad)
icebp
call
fsubp
inc
push
jge
mov
aam
jle
pop
xor
pop
pushfw
xchg
int
punpckldq
jae
dec
int3
push
(bad)
arpl
cmp
sub
jge
imul
inc
pop
fs
aad
into
mov
cmps
add
jg
or
sahf
mov
jne
ins
cmc
test
in
mov
push
sbb
test
test
cwde
xor
ret
cmps
mov
pop
pop
inc
scas
xchg
outs
sbb
mov
js
scas
dec
shr
mov
std
mov
or
xlat
rol
mov
cmp
leave
lods
pop
out
aad
pop
lea
dec
adc
pop
dec
lds
sbb
(bad)
mov
or
rol
push
hlt
sbb
push
adc
in
cmc
xchg
test
repz
lea
sar
jno
pop
cmps
adc
cmc
mov
imul
imul
inc
cmp
pop
into
test
push
ja
mov
loopne
movs
nop
jle
loop
sbb
cmps
dec
loope
in
rcr
or
ins
mov
fcomp
movs
jnp
repnz
shr
enter
imul
mov
pop
outs
inc
mov
ins
repnz
scas
in
mov
jno
xchg
test
sub
(bad)
xchg
add
out
add
and
xchg
scas
stos
pop
push
movs
std
adc
adc
mov
rcr
(bad)
push
sahf
test
mov
mov
icebp
int
pop
xchg
out
jmp
mov
outs
xor
repnz
sub
xchg
daa
or
push
push
mov
(bad)
mov
jno
mov
ret
adc
clc
sub
movs
(bad)
call
cmps
es
hlt
repz
clc
mov
dec
add
bound
fbld
sahf
adc
pop
gs
jmp
lods
jecxz
xchg
jge
fst
out
xchg
cmp
xor
out
dec
in
(bad)
dec
pop
fmul
add
jns
ret
pop
in
or
or
adc
mov
das
or
je
mov
stc
rcr
in
xchg
in
dec
pop
push
adc
sub
push
rcr
xadd
push
inc
adc
inc
mov
push
sbb
jmp
fdiv
cmp
shr
lds
jno
(bad)
xchg
dec
int
cmp
fidivr
dec
rol
bound
adc
test
inc
shl
aaa
mov
cli
cmps
adc
inc
pusha
xchg
adc
or
int
icebp
dec
(bad)
fstp
add
and
enter
pop
add
lea
sub
mov
sbb
iret
or
leave
and
mov
pop
sbb
mov
and
dec
out
or
inc
pop
push
cmc
test
xor
ret
loopne
int
lods
mov
adc
xchg
in
icebp
jbe
xor
xor
jp
or
cmp
cmp
scas
cmp
lock
and
outs
(bad)
lods
out
es
fdiv
pop
aaa
pop
shl
sbb
ss
add
cld
jmp
outs
mov
and
(bad)
aad
push
enter
xlat
xor
inc
xchg
pusha
lods
and
adc
fisttp
xchg
(bad)
out
xchg
push
jle
js
dec
jge
sahf
cmp
sbb
mov
add
ror
fsub
or
push
push
cmc
aad
ficomp
inc
pop
jmp
idiv
arpl
inc
pop
add
mov
repz
mov
(bad)
ja
pop
jp
mov
lea
cmp
mov
(bad)
jno
jmp
pop
mov
mov
(bad)
call
inc
test
stc
into
psubb
aad
aam
test
pop
cmp
jmp
sbb
jp
jnp
iret
push
xchg
xor
push
ss
mov
xchg
mov
repnz
outs
ss
pop
pop
cmps
adc
pop
mov
push
xchg
int3
mov
out
ins
mov
mov
out
xor
repz
std
sbb
push
retf
pop
and
(bad)
jmp
mov
imul
mul
in
rcr
xchg
inc
ins
jmp
outs
add
jne
adc
mov
jae
inc
mov
setnp
mov
pop
mov
int
mov
inc
retf
cmps
mov
test
sbb
pop
mov
lock
out
mov
mov
jno
pushf
imul
xor
jecxz
pop
and
pusha
outs
dec
and
call
inc
loope
and
xchg
xchg
in
out
cld
mov
pop
sbb
add
xor
push
(bad)
cmc
pop
fdivr
add
xor
mov
xchg
jnp
xchg
(bad)
sbb
gs
repnz
push
fcmovnbe
loope
jae
add
sbb
or
mov
imul
mov
xor
in
test
jne
shl
sub
fsub
sbb
cmp
imul
loopne
stc
imul
mov
out
(bad)
loope
sub
xchg
mov
loopne
leave
sub
sbb
dec
mov
fdivr
inc
div
push
je
mov
(bad)
lock
dec
push
xor
dec
cmp
pop
inc
dec
and
sub
in
cdq
xchg
mov
stos
jnp
push
xor
push
inc
cs
push
fucomp
aaa
outs
xchg
out
jns
nop
ins
cmp
bound
adc
addr16
outs
or
jno
or
lods
and
lahf
cmps
fwait
mov
int3
ret
mov
je
lock
xor
pop
push
in
cmps
mov
adc
and
jmp
mov
hlt
cmp
loope
xchg
jecxz
adc
mov
cdq
fldenv
nop
(bad)
loopne
push
fs
sbb
out
lods
les
fimul
sub
mov
adc
jns
add
mov
adc
stos
push
fimul
arpl
nop
push
pusha
inc
dec
mov
jge
mov
out
inc
scas
xor
movs
jp
xor
popf
mov
mov
add
iret
sub
mov
mov
xor
mov
jb
jno
inc
cdq
test
mov
popa
adc
in
xlat
sub
adc
pop
mov
jae
jge
mov
pushf
out
inc
xchg
xor
pushf
rcl
lods
leave
imul
aas
shl
adc
or
jbe
xchg
push
repz
xchg
call
mov
mov
xchg
retf
int
and
mov
loopne
cmp
jnp
and
xor
dec
mov
out
sbb
out
jecxz
cmp
lods
sbb
jp
dec
pop
in
jmp
cmc
xchg
xchg
xor
popa
xor
adc
leave
and
xchg
pop
jno
sub
pop
fld
adc
in
xlat
sar
std
add
jb
adc
inc
data16
mov
icebp
sbb
fwait
mov
cld
in
cmps
sbb
test
arpl
cmp
aaa
ret
pop
(bad)
xor
cmc
test
mov
cmp
dec
pop
xchg
dec
das
mov
(bad)
nop
xor
push
sbb
shr
loope
push
(bad)
jecxz
pop
mov
js
cmp
jo
mov
fcmovu
mov
xor
mov
mov
in
cmp
xchg
sub
outs
adc
jnp
adc
inc
ret
push
scas
cmps
ins
fs
je
arpl
shl
movs
aas
push
mov
in
pop
and
mov
clc
ins
sub
pusha
call
xor
in
ins
mov
stc
inc
test
fwait
xor
outs
dec
and
xor
loop
and
in
jmp
and
fld
mov
cld
cwde
call
push
or
sti
mov
mov
push
or
jo
xchg
xchg
adc
stc
push
jo
xchg
test
fisub
inc
lods
fwait
test
and
movs
and
fld
add
dec
icebp
dec
mov
sbb
mov
lahf
repnz
xor
push
pop
mov
leave
xchg
push
mov
inc
es
or
test
jns
xchg
jge
inc
or
and
pop
jl
adc
loopne
push
jnp
repz
jae
pushf
add
test
pop
or
or
xor
cs
pop
fistp
sbb
lods
add
retf
call
jl
xchg
je
cmp
jg
add
sbb
or
or
scas
push
stc
xchg
ficomp
addr16
imul
movs
fwait
out
pop
cs
xchg
ins
and
ret
test
stc
imul
jecxz
sub
mov
lea
fisub
enter
jp
(bad)
bnd
push
xchg
pop
xor
lods
and
adc
xchg
pop
pop
xlat
mov
or
xchg
fstp
mov
jg
add
pushf
fidivr
lea
repz
add
addr16
xchg
les
cmc
fidiv
pop
pop
(bad)
sub
popf
sub
sbb
test
(bad)
mov
mov
outs
adc
pop
call
outs
dec
sbb
mov
sahf
lock
add
sub
jbe
and
mov
sbb
mov
test
fisubr
mov
rcl
cmp
jnp
pop
inc
inc
test
or
pop
mov
daa
or
icebp
or
mov
add
jno
pop
lock
in
jo
addr16
push
xchg
stc
int3
add
mov
sub
and
and
gs
sar
and
out
mov
test
mov
stc
xor
ret
ins
cmp
hlt
xlat
ja
mov
aaa
popf
dec
mov
stos
jp
mov
in
cmp
adc
lods
adc
cwde
and
dec
lea
rol
shl
pop
mov
jge
sbb
xlat
mov
add
hlt
fwait
(bad)
adc
nop
jo
sub
dec
fldcw
or
mov
adc
out
jo
or
xchg
and
outs
rcl
jp
sbb
lock
or
mov
int3
imul
push
stc
ins
mov
std
mov
pop
adc
leave
test
bound
push
mov
xchg
cmc
jne
inc
cli
adc
xchg
movntps
cmps
mov
ins
cmp
adc
ja
jmp
add
mov
xchg
jne
out
shl
and
jge
dec
mov
or
xor
cmc
outs
push
jle
fadd
add
sbb
or
mov
xor
lahf
ret
cmp
sahf
cdq
and
pop
jnp
js
xor
aas
out
stc
jbe
add
push
out
test
(bad)
lea
cmps
daa
jns
stos
xchg
jmp
adc
lods
leave
popf
jp
jp
dec
xchg
aad
sub
lock
popa
test
jne
stos
pop
ret
sbb
loope
(bad)
retf
and
adc
cmp
imul
cli
add
outs
push
sbb
xchg
outs
test
pop
loop
popf
mov
cmps
cld
out
sti
(bad)
sub
jae
mov
ret
xchg
ds
jns
jbe
sub
mov
pop
mov
fcmovu
push
add
sub
lea
push
data16
enter
repnz
mov
xor
jmp
cmp
dec
test
iret
cmp
es
dec
aas
enter
cmps
inc
stc
rcr
test
adc
and
je
sti
pop
and
jb
fst
test
retf
outs
mov
nop
(bad)
ins
sbb
inc
enter
(bad)
mov
ja
outs
inc
into
ss
out
ds
fimul
out
fldenv
mov
push
clc
adc
(bad)
mov
dec
pop
std
adc
test
lock
loope
sub
aas
mov
imul
jns
dec
clc
stos
fild
mov
dec
data16
ja
jns
xor
dec
pop
addr16
leave
mov
xor
shl
mov
out
mov
mov
gs
xchg
jbe
pop
and
and
ficomp
xchg
in
mov
fisubr
pushf
outs
add
fiadd
jno
(bad)
ds
inc
jl
aam
inc
mov
xchg
jmp
or
jnp
xchg
add
daa
in
(bad)
(bad)
aam
mov
xchg
enter
in
pusha
add
mov
mov
outs
push
xor
sbb
xor
push
test
fcmovnbe
out
js
inc
dec
jne
aad
packsswb
retf
fistp
push
clc
xchg
mov
xchg
ror
jge
add
mov
icebp
push
mov
stos
test
xor
loop
and
jae
jge
sub
ret
push
inc
sub
xchg
jne
imul
es
retf
push
outs
pop
mov
jae
imul
pop
jb
loop
cmp
stos
out
aas
xchg
jmp
lock
pop
fild
int3
stos
sub
leave
push
int3
cmp
adc
imul
sbb
mov
aam
dec
and
sbb
adc
in
mov
mov
xchg
stc
ror
punpckhbw
add
xchg
mov
aad
jbe
sti
add
adc
jecxz
jo
xchg
xchg
scas
(bad)
mov
mov
sub
inc
and
xchg
and
pushf
fild
and
cld
test
cmp
jp
stos
sar
mov
sub
repz
mov
iret
fcmove
aaa
jg
fwait
jnp
xchg
je
inc
xor
jg
out
mov
daa
inc
arpl
and
push
test
imul
cwde
fstp
pop
add
xlat
and
rol
fs
sti
add
inc
into
lds
bound
call
mov
or
pop
dec
jae
pushf
retf
psadbw
iret
imul
aaa
and
(bad)
mov
sub
dec
sbb
pop
lahf
sub
rol
arpl
pusha
jmp
aad
(bad)
xor
loope
adc
pop
das
inc
mov
and
test
addr16
inc
jecxz
and
mov
sub
pop
std
lods
inc
aad
adc
mov
mov
pop
fnstenv
cs
test
or
out
pop
xor
retf
lds
popa
in
lds
dec
cmp
call
mov
dec
mov
push
repz
xchg
stc
inc
sti
add
popf
sub
and
jg
jo
mov
shl
repz
dec
(bad)
fldcw
pop
jne
repz
adc
or
icebp
(bad)
jno
gs
or
adc
xor
push
hlt
and
shl
mov
cdq
clc
stos
lock
mov
inc
les
adc
lahf
jbe
push
or
cmp
lods
add
gs
xor
int3
js
mov
lock
mov
and
or
ss
pop
data16
nop
or
push
outs
loopne
and
lods
mov
popf
dec
ret
jecxz
sahf
(bad)
and
das
mov
scas
and
lods
rcl
jne
jo
jnp
lds
lahf
and
push
inc
out
xor
inc
ss
sti
mov
adc
out
sbb
or
dec
pop
jmp
fs
stos
and
adc
sub
stos
push
push
jmp
mov
add
out
adc
(bad)
jmp
dec
dec
mov
clc
pop
test
repz
pop
adc
add
stos
fisubr
les
scas
and
pop
mov
xor
add
pusha
inc
jp
adc
js
push
rol
lods
popa
inc
mov
mov
scas
aas
mov
call
xor
sbb
not
fcmovu
mov
int3
daa
mov
add
repz
mov
push
mov
mov
cwde
dec
adc
rcl
push
in
and
xchg
jbe
sbb
ret
pushf
or
cmp
cmps
add
push
sbb
xchg
lods
xor
and
add
and
fimul
pop
lahf
mov
es
loop
cdq
int
push
xchg
retf
cmp
pop
movs
dec
add
aaa
sbb
xchg
test
(bad)
repnz
dec
xchg
push
icebp
cmps
pop
and
xor
dec
cmps
mov
cmps
add
popa
call
jno
neg
mov
repnz
sub
xchg
or
gs
and
inc
xchg
fisubr
mov
pop
xor
inc
cmc
(bad)
lea
call
mov
int
add
pop
mov
rol
shl
ds
(bad)
mov
dec
push
in
push
mov
push
sbb
adc
daa
out
push
add
pop
outs
stos
cli
fs
pop
push
out
enter
sbb
pushf
lds
mov
mov
cmp
ins
inc
in
mov
fcomp
mov
mov
or
push
lods
sub
xchg
pop
lea
and
or
push
(bad)
push
dec
outs
mov
xor
repz
ja
sbb
mov
inc
sahf
stos
mov
inc
push
(bad)
adc
shl
inc
call
movs
nop
pop
leave
mov
mov
jle
xor
sti
jae
lds
ret
fsubr
pop
pusha
stc
and
adc
pop
inc
inc
test
xchg
push
jae
inc
add
loop
mov
add
loope
pop
mov
int
or
fwait
ds
sahf
dec
push
push
test
jb
mov
rcl
dec
pop
adc
shr
call
repnz
xchg
mov
sbb
or
push
push
test
pop
adc
test
daa
inc
int
dec
je
or
sub
out
sahf
mov
jo
cli
mov
jmp
in
ins
arpl
mov
add
je
and
inc
(bad)
adc
repz
int3
mov
xor
jp
mov
jo
in
push
scas
and
xchg
(bad)
push
movs
pop
inc
sbb
retf
jmp
fsub
mov
retf
not
out
sub
cmc
dec
mov
push
sbb
dec
(bad)
jb
and
mov
(bad)
rol
outs
rcl
fwait
adc
fs
les
aad
shl
inc
cld
aad
mov
or
rcl
pushf
loop
mov
out
xchg
int
clc
inc
outs
(bad)
stos
jmp
jp
aas
jge
outs
jmp
ins
into
sar
movs
push
in
gs
je
mov
cmps
mov
(bad)
ds
sbb
sbb
mov
dec
pop
movs
popa
dec
and
bound
adc
imul
sub
iret
fidivr
inc
dec
adc
push
mov
aad
or
push
mov
aas
xchg
add
pop
adc
push
repnz
das
xor
popa
int
inc
sub
shl
mov
jp
mov
in
pop
or
movs
cmp
sub
daa
cdq
jmp
jnp
fwait
jecxz
aas
and
pop
popa
xchg
loopne
cmp
call
dec
js
enter
push
xor
fnstcw
push
push
jmp
mov
dec
jp
into
sub
jmp
push
push
vmread
add
push
neg
jb
out
ja
scas
aam
mov
push
pop
inc
data16
sbb
test
jne
test
inc
sub
rol
and
test
retf
jg
mov
shr
in
sub
push
push
out
jecxz
xchg
test
das
ja
test
cld
cli
leave
call
add
sbb
enter
(bad)
fimul
xor
mov
xchg
or
movs
mov
jno
inc
mov
ss
mov
xchg
jle
fcomi
loope
pop
andnps
es
repz
addr16
cwde
sub
dec
out
iret
popa
fiadd
dec
jae
push
ror
adc
and
fwait
pop
jbe
pop
std
jl
xor
xchg
push
not
cmp
ret
jg
test
int3
into
xchg
cmp
push
push
out
jp
out
xchg
inc
xchg
loope
or
test
out
aad
addr16
aam
mov
xchg
xor
sti
mov
fiadd
mov
stos
fwait
jl
dec
pop
cmp
mov
adc
pop
fadd
push
jne
aam
dec
dec
xchg
push
icebp
mov
jecxz
aam
lods
and
lahf
inc
cmc
retf
je
add
aad
popf
(bad)
dec
and
mov
inc
lea
int
sub
fs
xchg
cmc
lock
imul
jecxz
jecxz
cmp
scas
mov
cwde
repnz
sub
aad
jl
mov
mov
call
xchg
adc
stos
bound
jge
aas
push
(bad)
dec
push
mov
bnd
movs
rcr
push
je
mov
stc
fs
adc
fwait
xor
dec
cmp
shl
mov
cld
dec
push
cmp
arpl
test
push
sub
(bad)
xchg
inc
loopne
lods
xchg
sbb
ret
mov
ss
sbb
aas
cli
mov
mov
xchg
cmp
jae
jmp
(bad)
(bad)
push
imul
ret
mov
lods
push
or
xchg
dec
rcl
mov
ins
sbb
mov
hlt
pop
shl
(bad)
cmp
out
inc
sbb
cli
in
in
inc
int3
call
xor
jmp
loop
arpl
test
aam
jb
fcomp
mov
outs
in
cmp
outs
push
sbb
cdq
push
push
fistp
ret
test
mov
mov
mov
ret
out
push
mov
xchg
cmp
call
jnp
mov
lods
mov
loopne
ds
inc
adc
aas
mov
das
cmp
jge
mov
les
frstor
and
int3
push
sub
jnp
pop
call
test
xchg
jp
push
shr
daa
bound
mov
(bad)
jg
pop
nop
xchg
js
xchg
inc
cmp
sbb
std
xchg
push
xchg
dec
fmul
ins
jle
fwait
cmps
icebp
pop
sbb
dec
or
fidivr
jmp
jecxz
mov
pop
ins
dec
and
out
loop
dec
add
call
jl
and
push
daa
aad
sub
sbb
jne
call
sahf
xor
pop
(bad)
or
xchg
adc
inc
jmp
dec
outs
cmp
loop
in
sub
retf
mov
push
test
add
xor
outs
stos
arpl
ror
jle
loop
mov
call
(bad)
in
je
(bad)
sub
call
adc
(bad)
jl
push
lahf
mov
sbb
mov
movs
jb
push
scas
add
push
int
clc
mov
adc
inc
retf
in
clc
enter
cmps
neg
cmp
jns
jle
mov
push
push
scas
sbb
lea
imul
inc
mov
cld
jmp
jno
pop
xchg
retf
(bad)
jbe
adc
cmp
mov
outs
(bad)
push
pop
dec
sub
cmp
mov
aas
mov
lock
les
push
in
int
jmp
cmp
cli
mov
add
imul
out
mov
ror
jp
les
add
cmp
xchg
mov
pop
pop
cmp
loopne
sbb
pop
(bad)
mov
mov
xchg
push
cdq
push
arpl
add
pop
mov
inc
push
and
enter
test
push
pop
mov
cs
jmp
jge
add
xchg
outs
lds
ss
push
mov
ja
pop
pop
(bad)
icebp
stos
in
scas
iret
pop
jne
jle
scas
cmp
dec
jno
mov
loope
cmp
cmp
(bad)
fcomip
push
push
sub
pop
hlt
and
out
popf
and
sbb
out
shr
adc
jae
and
(bad)
sub
xchg
xlat
or
mov
pop
aam
and
sbb
push
ret
jmp
cdq
adc
add
imul
adc
cmp
lds
sbb
mov
jge
xor
or
fs
jl
mov
enter
mov
nop
lds
aas
shl
arpl
shl
mov
mov
nop
or
pop
push
and
push
shl
std
jl
rcr
mov
addr16
mov
push
add
fdivr
pusha
rcl
jno
outs
(bad)
retf
pop
pop
jle
(bad)
jg
cmps
or
aaa
cmp
cmp
ja
in
fisubr
imul
int3
inc
mov
push
clc
fnsave
aas
pop
bound
mov
mov
cdq
cmps
hlt
xor
jge
jno
lods
clc
into
jge
test
ins
mov
add
sbb
cwde
cdq
aaa
sbb
inc
push
mov
pop
fs
addr16
test
pop
loopne
out
sub
(bad)
jb
sub
xchg
jo
inc
add
inc
mov
mov
adc
arpl
pop
loope
mov
fwait
rcl
das
mov
jnp
push
ss
lea
mov
icebp
mov
fistp
and
sub
pmovmskb
mov
pushf
mov
outs
adc
xchg
and
dec
fld
scas
out
sub
inc
and
ds
xor
xor
daa
mov
mov
dec
push
sub
push
jp
dec
inc
cmp
pop
push
inc
enter
aad
adc
xor
fist
dec
out
pop
push
sbb
pop
loop
pop
pop
mov
xor
ins
adc
push
xchg
dec
mov
popa
call
push
adc
jmp
into
jbe
mov
dec
aad
aas
enter
push
outs
xchg
or
mov
test
mov
dec
inc
fwait
or
mov
push
pop
pop
mov
sbb
jge
inc
(bad)
cwde
xor
pop
test
gs
outs
sub
pop
les
mov
xor
mov
pop
mov
leave
hlt
addr16
push
fdiv
pop
add
mov
push
call
cmps
dec
jge
xor
sti
xchg
cmc
test
push
sbb
pop
pop
pop
repz
cmp
and
sub
test
mov
cmc
cmps
shr
lea
out
push
jl
aas
xchg
scas
mov
imul
sub
jnp
mov
dec
push
push
jnp
or
and
lds
sub
push
and
sub
pop
aad
sub
add
addr16
and
mov
ja
repnz
push
cdq
cmp
cmps
retf
sbb
jo
inc
and
mov
mov
call
ret
(bad)
dec
or
pop
cmps
jmp
retf
xchg
inc
sbb
jge
das
jle
adc
adc
pop
in
leave
adc
pop
popa
push
push
lea
popa
outs
add
push
cmp
mov
fld
int3
sub
repnz
push
(bad)
jnp
aas
and
sub
mov
stos
stos
xor
fiadd
fs
jb
movs
jecxz
pop
add
add
pop
sti
cmc
jmp
cmp
push
xchg
and
sub
jne
mov
ror
das
loope
pop
inc
or
(bad)
in
ja
call
or
movs
dec
mov
cdq
std
out
jg
mov
test
push
inc
test
lods
fisttp
push
ins
stos
xchg
sar
pop
pop
cmps
addr16
xchg
jne
add
or
pop
sub
add
fidivr
cmp
sub
fild
std
push
mov
dec
fidiv
cmp
loop
clc
test
(bad)
dec
adc
cld
and
pop
aaa
aad
mov
and
fwait
mov
mov
fisub
scas
dec
xor
daa
add
sbb
(bad)
jecxz
pop
jo
imul
xlat
pushf
mov
js
(bad)
out
(bad)
loopne
mov
add
xchg
jmp
xchg
sbb
mov
ret
pop
cdq
outs
push
jmp
add
imul
ins
pop
retf
push
mov
loop
inc
jno
fwait
jp
and
(bad)
mov
outs
(bad)
xchg
cdq
fisubr
mov
xchg
or
in
jge
jnp
cmp
lea
jmp
or
(bad)
mov
mov
dec
jg
or
pop
jmp
pop
sahf
mov
jmp
clc
(bad)
cmps
inc
jbe
aam
push
push
mov
pop
pop
fadd
aam
sti
sub
sub
push
jge
cmp
mov
sub
inc
jecxz
icebp
popa
(bad)
push
push
outs
mov
xor
push
pop
jecxz
cmp
push
test
dec
push
mov
jmp
shl
or
sbb
fwait
ja
mov
or
out
in
inc
mov
or
popa
(bad)
out
sbb
cmps
sub
xor
icebp
pop
xchg
sbb
sub
into
rol
sub
daa
xchg
sahf
pop
loopne
cli
mov
fisttp
pop
bswap
pop
std
leave
mov
jmp
mov
imul
mov
ret
dec
xchg
push
lea
pop
retfw
dec
es
mov
test
in
shl
ds
push
cmps
leave
inc
rol
or
pop
fnstenv
push
mov
mov
cwde
in
xor
or
lods
sbb
ja
add
out
or
pop
cmps
fadd
out
sub
imul
or
cmp
mov
(bad)
ins
leave
sub
push
outs
lds
cmp
fadd
nop
jg
stos
add
loope
push
push
cs
jb
xchg
push
push
push
add
(bad)
sti
mov
adc
push
stos
ja
jnp
ror
mov
mov
ret
or
mov
dec
jle
(bad)
jmp
sub
fcom
out
scas
dec
in
cmp
adc
xor
jecxz
test
push
ins
icebp
cdq
sbb
ss
movs
sub
aaa
xor
outs
ins
ret
jecxz
and
xor
dec
push
imul
rol
shl
sbb
dec
cld
jmp
mov
jne
out
or
in
cld
stos
add
enter
(bad)
jns
cmp
(bad)
(bad)
lods
pop
xor
fwait
jg
ins
retf
sub
shl
outs
stc
ret
dec
and
xchg
in
jmp
dec
stos
mov
dec
pop
sbb
pop
bound
mov
arpl
out
test
ret
movs
aaa
out
mov
sbb
cdq
mov
jns
cmp
mov
pop
inc
cmps
sub
nop
scas
push
mov
les
jg
scas
retf
sahf
(bad)
adc
out
mov
jb
push
mov
in
ins
push
adc
sub
jl
inc
xchg
fwait
jmp
loope
or
sbb
jnp
push
pop
cmp
or
adc
pusha
xor
test
adc
jl
bound
mov
aam
fistp
jecxz
sti
leave
out
fcmovne
sar
dec
push
daa
and
mov
lahf
add
fs
out
in
(bad)
es
mov
add
inc
xor
and
pop
ror
leave
xor
sub
push
icebp
rcr
ins
jecxz
cmps
and
repz
pop
je
call
xchg
les
shr
or
dec
mov
enter
inc
outs
pop
pushf
out
jecxz
outs
sbb
dec
fwait
cld
inc
jmp
mov
ins
mov
mov
and
aad
rol
push
ins
scas
call
xlat
inc
(bad)
jbe
xchg
daa
gs
mov
sub
push
jno
sub
sub
lods
jo
imul
jae
adc
cmps
sub
dec
or
ret
outs
and
mov
sub
xor
fnstsw
lock
retf
movs
test
mov
sbb
arpl
jns
pop
clc
and
push
fcom
push
ja
mov
pop
cmc
test
or
sti
ret
lods
jle
ss
and
sbb
cld
hlt
dec
fdivr
jmp
xor
lds
jle
fwait
popf
jmp
inc
mov
jmp
jg
mov
add
push
pop
xchg
xor
xor
loop
push
or
and
or
int3
and
fwait
jecxz
cmps
ffree
mov
repz
adc
loope
out
(bad)
sbb
arpl
or
(bad)
fadd
mov
rcr
sbb
or
inc
mov
xor
add
sahf
pop
lea
add
in
int
sahf
cmp
inc
out
les
and
mov
cmp
retf
movs
sub
lahf
push
push
test
mov
mov
mov
lods
imul
mov
loop
sbb
std
divps
cmp
push
mov
adc
cmps
(bad)
push
pop
bound
pop
dec
fidiv
mov
call
(bad)
pop
fdivr
aam
imul
xor
and
in
sbb
(bad)
or
mov
or
xchg
xchg
xlat
inc
push
mov
daa
cmp
imul
sbb
push
lock
mov
outs
int3
push
xor
jl
dec
mov
inc
sbb
xchg
sahf
movs
or
neg
faddp
repnz
daa
push
push
mov
inc
adc
mov
xor
lods
jl
mov
mov
dec
scas
xor
cmp
hlt
lock
arpl
jecxz
push
ins
ja
in
je
fwait
call
pusha
out
inc
push
leave
test
inc
dec
icebp
pop
in
push
icebp
mov
iret
mov
cmps
inc
add
mov
call
in
test
sub
rcr
adc
sti
mov
jnp
rcr
retf
js
repz
push
jne
xchg
pop
and
out
fmulp
js
xor
xchg
sub
fist
xchg
sub
lds
or
xchg
mov
mov
into
test
cmp
dec
call
jbe
jo
stc
mov
or
push
xchg
loopne
ret
mov
mov
rcl
sbb
(bad)
pop
jae
dec
daa
xchg
ins
iret
mov
into
cli
cwde
jmp
xor
add
leave
push
inc
repnz
push
sub
push
or
retf
ja
push
lock
or
and
loopne
xchg
sar
pop
movs
inc
loope
push
js
add
in
ins
fdiv
pop
ret
or
test
jns
sub
shl
pop
dec
retf
cmp
sbb
or
mov
out
xor
jg
ins
mov
sub
outs
adc
in
and
js
add
lods
iret
mov
js
push
add
and
mov
sahf
inc
xchg
imul
and
aaa
leave
and
mov
mov
test
enter
je
mov
jp
js
jno
add
push
or
mov
movs
cmp
ja
sbb
dec
shl
into
out
xlat
rol
pop
push
cmp
cwde
mov
inc
pop
jnp
pop
into
mov
xlat
aam
sbb
cmp
and
xor
sbb
mov
outs
scas
cs
or
fadd
inc
xor
sub
add
push
xchg
push
aam
and
(bad)
xor
nop
xchg
loop
(bad)
adc
ret
push
adc
jl
iret
jge
outs
inc
retf
mov
ins
mov
ds
ror
sub
in
cld
int3
mov
mov
dec
inc
sub
test
loop
pop
sbb
mov
pusha
daa
xor
push
or
mov
mov
sbb
adc
aad
dec
jnp
call
inc
repnz
mov
pop
repz
xor
jo
movs
(bad)
(bad)
shl
add
(bad)
fsubp
pop
mov
sbb
mov
sub
in
adc
or
test
cmc
xchg
shr
jmp
lods
jo
dec
xor
jae
or
and
jmp
xor
stc
stos
mov
mov
cmp
jl
(bad)
push
pop
pop
fcmovnbe
paddd
fld
shl
ins
sbb
sbb
cmp
outs
fidiv
shl
mul
ds
iret
inc
dec
jg
aam
add
stos
mov
(bad)
repz
cmp
inc
mov
push
ds
jp
or
mov
scas
mov
jecxz
pusha
shl
and
dec
mov
pop
add
fs
mov
xchg
jmp
fcom
cmp
dec
(bad)
ficom
add
fldenv
jno
xor
adc
mov
adc
out
sar
sbb
inc
mov
mov
cmp
adc
(bad)
aaa
jb
or
mov
push
iret
push
adc
aaa
ins
jmp
jge
cmp
in
shl
test
cdq
xor
or
or
repz
das
dec
xlat
cld
add
mov
sbb
mov
in
add
out
mov
jno
stos
cwde
and
xor
mov
inc
adc
(bad)
mov
sub
xchg
jg
out
sbb
or
mov
push
outs
xor
dec
retf
jge
inc
mov
push
out
sahf
push
add
push
pop
shr
pop
jno
cwde
int3
rcl
sahf
xor
inc
mov
sub
repnz
or
sbb
cmp
fwait
stos
mov
call
retf
cmp
mov
mov
mov
shr
xlat
and
ins
loope
fs
mov
dec
cld
enter
inc
add
mov
add
xor
popf
sub
mov
xor
ret
cs
jmp
sbb
sahf
imul
cmp
sahf
inc
bnd
loopne
adc
dec
scas
dec
adc
scas
or
iret
sbb
pop
(bad)
fpatan
(bad)
and
je
into
das
inc
cs
xor
xor
or
cmps
or
jg
xor
pop
movs
adc
lea
push
fsub
mov
cwde
or
xchg
fisubr
loope
shr
pop
pop
in
lods
cmp
std
and
pop
lds
adc
xor
adc
xor
movs
xlat
jmp
icebp
pop
clc
sbb
cli
shl
repz
lods
mov
sbb
retf
mov
mov
ins
sbb
mov
push
rol
pop
push
in
fprem
inc
fiadd
push
mov
stc
sbb
out
push
cmc
jmp
inc
xchg
pop
scas
xchg
xchg
into
cmp
out
popa
xchg
js
loope
add
fistp
cmps
imul
outs
int
stc
ins
mov
jmp
pop
push
out
(bad)
or
push
mov
or
pop
pushf
cmc
jno
iret
cld
add
enter
or
xchg
mov
and
int
sub
xchg
scas
jge
mov
sbb
adc
xor
mul
sahf
ds
iret
int3
or
add
leave
ins
mov
pop
je
in
imul
mov
dec
mov
push
mov
test
jp
pop
push
cld
pop
cwde
adc
jb
jns
adc
mov
xor
pop
mov
retf
dec
mov
in
or
js
stos
jo
mov
pop
ss
and
push
imul
cmp
popf
jmp
xchg
stos
gs
lods
adc
jp
popf
push
pop
(bad)
push
lods
ror
sbb
dec
xor
ret
push
jecxz
push
(bad)
mov
aas
adc
scas
adc
adc
hlt
cmp
jmp
mov
call
ins
lods
dec
(bad)
cmps
adc
mov
shr
cmps
and
xchg
sub
mov
adc
test
or
pop
mov
fisubr
mov
or
fcmovnb
cmp
iret
pop
dec
rol
push
ret
sbb
cmps
clc
push
push
jge
mov
test
dec
aad
sti
fs
cwde
push
std
dec
out
out
pop
pop
dec
iret
loope
and
int
repnz
sti
add
push
jg
add
(bad)
(bad)
in
mov
add
xchg
jo
in
inc
sub
push
xchg
dec
test
mov
dec
mov
scas
cli
inc
sbb
fmul
ja
sub
mov
xor
icebp
mov
leave
stos
dec
or
inc
pop
frstor
mov
in
xchg
dec
shl
neg
icebp
pushf
mov
xor
jmp
mul
sbb
mov
adc
push
push
adc
xchg
jmp
xchg
mov
call
xor
js
pusha
aam
inc
cdq
pop
xchg
dec
into
pop
and
jp
rcr
sbb
loop
mov
push
add
inc
imul
ja
mov
ror
add
scas
push
pusha
out
push
mov
je
mov
xor
cmp
sub
sbb
repnz
shr
pop
(bad)
cmp
xor
sbb
push
xchg
pushf
jb
clc
push
imul
lahf
pop
push
mov
scas
sub
not
mov
inc
jo
clc
sbb
out
or
loop
nop
xchg
shl
in
cmp
inc
xchg
lds
movs
or
or
sub
fld
nop
fdivp
lahf
lods
les
sbb
inc
sub
es
shl
mov
push
push
cmc
xor
sbb
rcl
es
mov
ss
jbe
mov
int
jnp
cmps
cli
adc
add
or
pop
(bad)
mov
sbb
mov
mov
jmp
push
and
jle
and
push
xchg
imul
mov
in
lods
fs
pusha
das
add
stc
push
movs
mov
dec
shr
pop
rcr
mov
sbb
add
daa
sbb
adc
scas
imul
xchg
outs
jl
call
fst
scas
mov
into
mov
out
out
mov
sbb
div
std
push
push
jnp
and
mov
sahf
in
stos
mov
dec
or
adc
test
cmp
adc
dec
jp
jo
in
pop
mov
mov
add
(bad)
push
sbb
popf
pusha
outs
adc
imul
or
les
adc
mov
pusha
xor
clc
leave
in
xor
cmp
or
or
mov
mov
inc
and
xor
shl
cli
xchg
jno
nop
jno
cmp
sbb
push
jecxz
pop
cli
shl
add
cld
(bad)
stc
xchg
fld
jg
fs
add
xchg
test
repnz
fidivr
adc
xor
inc
sbb
jbe
xchg
data16
daa
adc
ins
and
mov
(bad)
popf
dec
push
mov
cmp
hlt
pusha
sub
rol
mov
sbb
nop
(bad)
in
ret
sahf
pop
and
xchg
sti
mov
dec
mov
xor
push
popf
mov
add
ja
and
mov
add
imul
cmps
sbb
push
jbe
cmp
push
(bad)
outs
xlat
arpl
xor
(bad)
and
jmp
xor
test
fadd
sub
and
mov
mov
sub
cdq
mov
in
mov
xchg
lds
cmp
xchg
mov
ja
push
je
ins
push
jne
sbb
sub
jmp
mov
sti
inc
pop
ror
dec
adc
pop
adc
scas
xor
adc
add
out
push
repnz
adc
sub
pop
enter
and
add
jmp
or
push
mov
jne
retf
adc
ror
pop
jbe
xchg
out
sahf
jg
add
mov
mov
push
pushf
push
int3
call
pop
or
push
mov
repnz
punpckhwd
and
repnz
into
(bad)
xor
inc
loope
sub
in
or
jmp
call
ins
out
push
or
or
icebp
xor
das
loop
pop
int
icebp
test
ds
test
sub
fs
push
(bad)
xor
loopne
xlat
mov
add
loope
add
fsub
adc
mov
in
inc
ret
fwait
mov
loop
out
outs
pop
inc
test
cs
jae
idiv
cmp
or
push
neg
je
cli
in
sbb
lea
dec
inc
int3
jne
pop
ror
into
jnp
addr16
ret
hlt
jns
or
jmp
or
test
jne
add
mov
(bad)
imul
cld
clc
retf
or
std
xlat
xchg
(bad)
(bad)
repz
ds
js
pop
popf
mov
stos
mov
and
cmp
xor
push
les
cmps
push
ret
mov
test
data16
pop
dec
mov
cwde
fistp
(bad)
cmp
data16
and
and
lods
sub
pop
int
jg
mov
inc
test
ds
mov
push
loopne
jns
mov
aam
in
pop
sub
sbb
cdq
ins
xchg
fwait
mov
add
mov
in
cli
inc
aas
push
das
pusha
xchg
add
xchg
ret
pop
iret
mov
adc
inc
adc
sub
aas
or
mov
out
cmp
dec
stc
or
in
(bad)
loopne
imul
xchg
push
loop
jns
ja
adc
push
jne
adc
or
mov
xor
(bad)
ror
les
call
aad
nop
jge
push
or
and
and
fist
pop
test
nop
in
xlat
mov
cwde
into
dec
out
popa
retf
add
pop
std
pop
and
push
ja
aas
jne
inc
je
mov
or
fnsave
lea
cwde
and
jae
jmp
cmp
fld
mov
cmp
das
in
jge
in
imul
adc
mov
inc
and
ret
rcl
jecxz
inc
inc
sub
dec
inc
push
sar
or
push
pop
arpl
pop
cmp
loop
movs
cwde
sub
pop
pushf
mov
sahf
xor
push
mov
or
xchg
mov
dec
inc
inc
push
shl
sbb
mov
mov
inc
frstor
loop
cmp
mov
mov
xor
sub
fsub
gs
push
(bad)
and
inc
jmp
cs
and
popf
inc
lods
mov
bound
popa
sub
dec
test
jnp
rol
out
mov
mov
fs
addr16
jnp
lea
push
add
dec
imul
jmp
bound
das
pop
jns
(bad)
jns
mov
pop
xor
mov
shl
rcl
dec
xor
and
pusha
jo
fistp
popf
sub
add
int
jecxz
inc
nop
dec
retf
jnp
push
mov
mov
sbb
dec
stc
aas
push
mov
fsub
mov
loope
mov
int
xor
mov
mov
aad
stos
rol
xor
repz
rcr
inc
int3
pusha
pop
add
leave
fmul
lock
pop
cld
mov
jmp
add
add
test
mov
xchg
iret
add
into
ret
int
mov
mov
loop
std
xchg
jg
adc
retf
sbb
xchg
cdq
jne
je
test
cwde
mov
stos
mov
stos
mov
and
xor
test
push
mov
mov
push
pop
mov
jg
shl
jecxz
clc
xchg
inc
jb
call
inc
xchg
xchg
pop
xchg
pusha
jl
fcomp
test
sub
ffree
data16
addr16
xor
mov
mov
movs
lds
loop
inc
mov
mov
dec
fnstenv
out
clc
retf
sbb
(bad)
pop
les
and
jmp
pop
leave
icebp
(bad)
xlat
mov
lds
xchg
or
xchg
scas
mov
or
and
and
fucomi
sub
sbb
fisubr
mov
loope
cdq
lds
pop
icebp
clc
mov
xchg
je
push
or
loop
movs
mov
dec
dec
fisubr
les
dec
out
(bad)
pop
sub
test
or
pop
jno
xor
pop
sub
sbb
xchg
inc
test
sbb
nop
std
xchg
imul
enter
lods
xor
adc
push
or
xor
ins
cmp
mov
mov
(bad)
enter
pop
push
out
dec
mov
push
(bad)
push
mul
in
pop
mov
mov
(bad)
sbb
pop
xchg
jp
mov
into
sub
loope
ror
mov
jb
popf
cdq
mov
mov
xchg
lods
inc
mov
xchg
xlat
adc
mov
jmp
les
cmp
sbb
(bad)
bound
pop
mov
pop
dec
push
neg
mov
mov
repnz
add
add
cmc
ror
int3
push
xor
fs
add
enter
xchg
into
pop
adc
cli
(bad)
mov
cmp
call
push
bound
scas
(bad)
mov
or
into
fist
push
pop
mov
jnp
pop
inc
sub
sub
jl
and
pop
inc
inc
adc
jbe
(bad)
push
xlat
mov
xor
fistp
mov
sub
push
(bad)
xchg
adc
shl
test
adc
movs
adc
sbb
mov
xchg
out
pop
cmc
rcl
daa
std
nop
mov
jmp
lds
cmp
cld
movs
fbld
mov
js
add
adc
test
call
jmp
aaa
xchg
jnp
adc
mov
mov
sahf
or
ss
nop
test
dec
aas
pop
push
mov
cwde
dec
cmp
stc
xchg
int
pop
fstp
or
lea
out
out
sahf
adc
add
sti
mov
imul
sbb
cld
inc
dec
inc
daa
call
test
jge
xor
pop
ins
or
push
cmp
add
add
sub
shl
iret
sti
add
or
jg
lahf
daa
fld
xlat
retf
add
ret
xor
fs
pop
inc
test
mov
cwde
fcomp
scas
jae
pop
add
in
shr
dec
and
icebp
ds
ret
movs
ret
out
ds
pusha
xadd
ds
sub
mov
movs
adc
js
xor
(bad)
sub
lods
mov
mov
jg
shl
iret
out
aaa
lods
movs
xlat
xor
and
sub
pop
sbb
test
icebp
add
out
test
icebp
pop
ins
mov
int3
data16
push
cmps
rol
cmp
icebp
fsub
cdq
cdq
and
inc
push
(bad)
or
ins
inc
movs
ds
outs
nop
pop
push
add
pop
mov
iret
sbb
xchg
xchg
pushf
pop
(bad)
dec
shl
xchg
mov
xor
ins
jl
lods
ret
mov
out
ret
ja
lds
push
nop
mov
repz
sti
outs
push
sub
xor
mov
bts
mov
jns
push
scas
cmp
xchg
xor
cmp
loopne
xchg
xchg
les
sub
inc
xchg
out
jmp
arpl
das
xlat
push
ret
cli
stc
mov
je
ins
jl
lods
addr16
mov
jo
rcl
xor
adc
xchg
ja
(bad)
cmc
jb
loop
jb
add
and
jnp
int3
bound
push
dec
push
or
ret
push
jmp
push
sahf
ror
leave
jge
leave
imul
and
mov
push
adc
retf
stos
lahf
(bad)
out
dec
pop
mov
(bad)
xlat
stc
sahf
cmp
add
jecxz
xor
out
loope
ss
sub
mov
mov
out
pop
lods
inc
sub
adc
push
test
push
jge
nop
push
jl
and
inc
loopne
inc
out
imul
(bad)
cs
add
xor
call
in
nop
xor
mul
daa
scas
mov
dec
pop
jp
adc
retf
add
data16
cmp
ja
ja
mov
inc
daa
jae
mov
sbb
fsub
ja
scas
add
mov
ret
ror
jnp
lahf
dec
test
pop
sahf
and
add
movs
sti
cmps
xchg
aaa
out
and
cmc
pop
inc
stos
mov
jbe
push
enter
cmc
mul
jnp
ds
mov
xchg
in
jmp
jbe
out
ins
(bad)
es
test
(bad)
icebp
add
div
icebp
fs
fimul
cmp
sar
sub
test
stc
mov
sub
push
inc
arpl
inc
lds
xor
cmp
stos
mov
mov
es
icebp
inc
push
sub
aad
lods
pop
xchg
mov
adc
nop
popf
das
ret
lea
pop
sub
sub
lock
fsubr
scas
fmul
clc
int3
sub
add
addr16
sbb
sub
and
xchg
into
fisttp
mov
mov
or
test
shl
mov
mov
push
int3
jle
xlat
mov
pop
dec
jg
jbe
mov
inc
hlt
and
mov
sub
fdivrp
dec
mov
dec
test
and
adc
mov
dec
pop
sub
(bad)
pop
mov
mov
push
push
pop
mov
dec
push
inc
and
dec
(bad)
mov
and
sbb
cmp
xor
sub
xchg
mov
es
hlt
sahf
sbb
ficom
xchg
push
test
imul
pop
(bad)
or
repz
mov
mov
push
mov
in
push
push
lds
mov
jne
xchg
mov
pop
xor
in
add
in
inc
xor
dec
repnz
aaa
iret
push
ins
imul
repz
mov
fidivr
fcomip
xor
fnsave
or
mov
shl
aaa
sub
cli
and
jo
jns
mov
rcr
jbe
or
sub
retf
mov
in
cmp
jbe
push
idiv
sub
outs
fnclex
cs
mov
mov
cmp
push
mov
std
sbb
rcr
jae
mov
fsub
test
cli
out
xchg
(bad)
out
jno
nop
in
fild
xchg
cmp
add
leave
sbb
mov
push
add
jne
inc
(bad)
adc
jle
imul
fdivp
and
inc
hlt
int
loope
aam
cmp
repnz
stc
adc
jge
mov
popf
in
lea
dec
sti
mov
repz
inc
jbe
jb
movs
pushf
sahf
jo
pop
pop
leave
test
aad
mov
(bad)
mov
push
adc
imul
cmp
rcl
xor
iret
add
daa
rcl
lds
pushf
jmp
push
cmp
or
aam
sub
jno
dec
lahf
xchg
xor
add
inc
inc
mov
test
ror
(bad)
jno
imul
dec
ret
xor
popa
test
ds
sbb
addr16
mov
cmp
dec
jp
xor
imul
aaa
in
xchg
inc
mov
add
jbe
shl
sub
shl
and
mov
mov
pop
push
mov
or
push
lock
jmp
addr16
leave
pop
push
fs
xchg
repnz
xchg
mov
mov
out
lds
jno
gs
mov
mov
imul
mov
pushf
push
inc
repz
xchg
add
xchg
cmc
cwde
mov
aam
out
mov
jae
lods
push
jb
ja
xor
cwde
aam
xor
gs
call
and
jge
(bad)
out
fnstsw
inc
mov
and
mov
xor
fstp
cmp
sbb
data16
div
shl
or
xchg
call
and
cmp
gs
xchg
sbb
or
push
dec
out
cmp
out
stc
lea
retf
sbb
add
fsubr
or
ins
jl
lea
jmp
dec
jb
jnp
add
retf
xor
inc
test
add
inc
and
sbb
inc
jnp
adc
out
ss
push
sbb
xor
inc
cmc
lock
dec
adc
and
aam
inc
inc
out
add
mov
xchg
out
rcr
sub
imul
in
jno
pop
jge
vpandn
xor
je
push
in
xchg
icebp
xchg
es
ins
loop
cmp
push
inc
mov
addr16
sbb
pusha
ins
dec
sub
or
add
inc
(bad)
jns
jg
lea
aam
ret
in
mov
cld
enter
xor
cmp
push
mov
js
dec
xchg
inc
out
dec
test
mov
adc
or
cmp
sbb
shl
mov
mov
xchg
push
movs
call
sub
inc
dec
es
jmp
sar
sar
and
dec
sbb
adc
ja
xor
imul
lahf
(bad)
retf
dec
sbb
adc
lods
stc
and
hlt
fmul
add
cmp
or
rol
adc
fwait
pop
test
cs
aad
mov
and
call
inc
mov
xchg
sbb
cmps
fisub
fdiv
xor
sahf
fidivr
inc
mov
int
push
push
imul
pop
hlt
arpl
mov
mov
mov
mov
add
retf
dec
call
add
sar
dec
pop
mov
inc
push
jmp
jle
sub
ins
(bad)
call
sub
rcr
cmps
je
or
out
cmc
ds
pop
hlt
jb
xchg
pop
mov
scas
dec
jne
inc
push
(bad)
jp
xor
frstor
dec
aad
jb
mov
jmp
mov
inc
leave
movs
sub
repz
mov
adc
ins
lock
lea
sub
cdq
mov
out
cmc
fdiv
bound
jae
movs
ins
or
(bad)
jns
dec
fwait
cmps
xor
cmp
retf
sahf
or
es
ins
adc
mov
push
call
adc
mov
xchg
mov
daa
(bad)
cmc
ret
sar
or
sahf
ret
dec
loopne
pop
jge
dec
retf
fsubr
stos
fnstcw
mov
add
dec
loop
inc
add
inc
loope
or
and
sub
or
rcr
push
sbb
xchg
jmp
jnp
or
dec
test
xchg
out
jmp
outs
sbb
mov
xchg
jns
push
lea
sbb
push
adc
add
cmp
sbb
adc
inc
arpl
cmps
push
pop
ret
adc
sar
push
pop
enter
sbb
add
jp
mov
fwait
push
popf
cmp
and
sub
cmp
cmp
test
repnz
or
nop
and
push
and
push
(bad)
in
add
scas
stos
dec
ins
lods
leave
mov
mov
fmul
mov
adc
test
push
mov
loopne
adc
jecxz
sbb
mov
ss
pop
add
ffree
sub
xchg
cmp
mov
icebp
mov
jno
ss
mov
jle
cmp
xor
xor
xlat
or
repnz
and
inc
and
ins
arpl
repnz
sub
(bad)
iret
xor
add
sub
into
xchg
repz
xor
jno
ds
jbe
inc
sub
mov
enter
jns
arpl
jne
or
dec
sbb
repnz
add
xchg
inc
stos
sbb
jo
jne
sbb
(bad)
fisub
and
jnp
js
cs
adc
mov
jns
js
daa
jne
jle
ficom
mov
fidivr
add
push
aad
aaa
mov
push
mov
dec
xchg
test
pop
pop
xchg
pop
cmp
fdivr
sbb
mov
add
sub
iret
sub
fld
or
ins
push
jl
jp
loope
fs
sbb
aaa
pop
xchg
cmp
repnz
in
mov
cmp
repz
test
xor
or
mov
mov
pop
xchg
and
adc
mov
push
jmp
cli
test
out
cmp
cld
jecxz
mov
push
sbb
(bad)
aad
mov
push
jmp
jno
nop
mov
adc
jecxz
aas
pop
addr16
addr16
pop
jecxz
xchg
into
inc
aaa
sbb
xchg
sbb
push
or
inc
dec
cmp
adc
rol
add
inc
xor
adc
dec
mov
inc
push
fdiv
adc
lods
push
retf
pop
cmp
mov
lds
push
push
(bad)
jns
cs
in
scas
xchg
adc
cmp
xor
not
sbb
adc
fiadd
(bad)
or
add
jp
xor
mov
xor
mov
je
push
mov
mov
aad
and
aas
lods
dec
in
or
out
sahf
xor
retf
xchg
rol
push
fsub
or
aam
clc
in
add
jno
sahf
push
or
sub
jno
jmp
mov
loop
mov
rol
cmpps
push
dec
mov
cmps
arpl
out
jg
mov
das
sti
pop
mov
push
xchg
dec
lea
add
pop
xchg
or
les
cwde
in
pop
imul
xchg
jmp
jg
bound
pushf
push
pusha
xchg
jae
sahf
add
imul
and
ins
xor
push
mov
add
ret
ss
test
das
dec
into
movs
(bad)
mov
test
xor
dec
sbb
add
test
sub
sub
adc
mov
adc
popa
jmp
(bad)
in
jmp
sbb
mov
mov
push
seta
adc
mov
adc
pop
enter
adc
imul
call
adc
xor
cmp
sub
mov
jmp
xlat
mov
and
xchg
sbb
nop
call
int
or
cmp
dec
push
arpl
pop
popf
mov
loopne
xor
mov
adc
mov
sbb
or
rcr
fwait
dec
into
xchg
inc
jb
ffree
xor
(bad)
(bad)
push
and
cmp
mov
push
fwait
loopne
sar
sub
and
mov
inc
adc
xchg
push
movs
stos
int3
out
pop
sbb
int
es
test
and
inc
std
push
ss
xchg
xchg
sbb
push
dec
dec
lock
xor
xor
inc
dec
sbb
inc
inc
sbb
push
cmc
push
add
into
mov
mov
xor
adc
sub
scas
(bad)
jnp
cmp
adc
add
movs
call
cmc
push
adc
fsubr
sub
lds
dec
xor
in
mov
inc
sub
arpl
jl
cld
push
cmp
call
inc
mov
jle
stc
push
aas
lock
ficom
mov
mov
mov
and
jb
stos
lods
iret
xchg
push
or
fwait
cmp
dec
sbb
loop
adc
ret
dec
pop
add
push
popf
adc
mul
in
je
repnz
imul
retf
push
xor
(bad)
jg
jae
inc
gs
scas
inc
fcomp
push
pusha
test
xor
mov
dec
add
cmps
push
fstp
sub
retf
loop
popf
mov
adc
ror
pushf
lods
sbb
dec
les
dec
inc
lods
mov
push
ins
mov
fnstsw
int
pop
sar
or
jmp
mov
jmp
sub
cmp
icebp
in
ins
fstp
ficom
jge
pushf
adc
dec
push
retf
jmp
jp
jg
mov
arpl
mov
aam
shr
xor
stc
ficomp
sbb
bt
lea
shr
xor
pop
(bad)
jae
jnp
cmp
cli
addr16
int
mov
retf
js
lods
iret
ds
sub
xchg
sub
vsubps
push
xlat
lods
loopne
jecxz
cmp
fldenv
push
pop
pop
mov
pop
pop
xchg
jbe
push
fwait
retf
sub
std
stos
mov
and
imul
imul
mov
cwde
je
fidivr
inc
push
shl
push
pusha
adc
mov
shl
mov
stos
daa
inc
inc
push
in
js
div
dec
cmp
pop
mov
or
mov
pop
(bad)
in
sub
cmc
push
or
add
pop
outs
lods
mov
dec
idiv
sub
inc
std
jl
push
in
jecxz
mov
lea
ror
test
clc
jmp
(bad)
je
jmp
loop
lds
adc
jg
ret
mov
xor
jae
inc
push
xchg
aam
scas
ins
pop
aam
adc
sbb
inc
inc
imul
sbb
shl
mov
mov
out
and
stc
arpl
add
ja
xor
and
mov
sbb
dec
xlat
hlt
or
mov
or
fdiv
mov
lock
add
push
aaa
cwde
mov
pop
movs
add
int3
or
pop
xor
outs
retf
mov
xchg
ror
arpl
out
adc
sti
popf
mov
mov
pop
mov
sbb
fld
cmp
dec
cmp
jae
pop
lock
loop
iret
in
aad
out
mov
shl
mov
cmp
mov
sar
ret
mov
mov
lds
sar
call
cli
cmps
and
je
repz
lods
test
mov
(bad)
in
sub
(bad)
jne
xchg
retf
or
push
scas
mul
sbb
mov
mov
cdq
pop
daa
fistp
fadd
cmp
in
add
repnz
sub
lods
inc
jno
mov
dec
cmps
jb
scas
out
sbb
cmc
mov
pop
out
mov
ret
or
out
arpl
add
add
and
mov
and
idiv
lea
aaa
adc
add
mov
dec
or
rcr
cmp
(bad)
outs
loop
sti
rcl
xchg
pop
sbb
imul
sahf
or
into
sbb
mov
arpl
jle
mov
mov
jle
xchg
iret
dec
xor
mov
mov
shl
scas
xor
dec
fucomi
leave
test
push
xchg
imul
pop
imul
add
fs
push
mov
dec
repnz
outs
or
mov
test
shr
enter
nop
fwait
movs
add
cmp
rcl
sub
fcomp
scas
and
pop
fdiv
inc
ins
inc
cmp
or
dec
jmp
ficom
call
cwde
mov
cmps
jmp
pop
jae
cmp
sbb
add
inc
fist
mov
pop
sbb
xchg
mov
jno
stos
or
xlat
loop
hlt
stc
jmp
pop
aam
push
ret
sar
mov
push
dec
cmp
xor
nop
cmp
mov
lods
mov
cwde
retf
mov
cmps
gs
mov
movs
adc
pop
inc
fcomp
pop
mov
inc
loope
out
dec
jb
pop
xchg
inc
pop
pop
jns
dec
mov
mov
(bad)
aaa
sbb
(bad)
adc
sbb
movs
cmp
push
leave
sbb
push
test
jmp
mov
popa
(bad)
jo
inc
test
add
ror
pop
shl
or
js
dec
push
scas
or
adc
fidivr
movs
test
sub
mov
int
arpl
cdq
loop
(bad)
adc
mov
or
jb
fsubp
lods
mov
inc
xchg
out
jno
xchg
loop
sub
and
sub
jge
mov
aas
mov
std
leave
or
mov
jmp
(bad)
push
cmps
fild
rcr
or
leave
sub
sub
ds
adc
int
in
iret
rol
dec
ins
jo
into
lock
imul
dec
popf
(bad)
rol
cli
call
lods
adc
mov
lods
mov
cs
pop
pop
(bad)
pop
popf
nop
rcl
(bad)
sbb
or
push
icebp
pop
cmp
adc
mov
inc
test
pop
xchg
mov
in
add
(bad)
loopne
mov
xchg
stos
add
loop
and
into
pop
inc
stc
(bad)
push
add
aas
out
mov
(bad)
jns
xchg
(bad)
sbb
std
shl
daa
fs
repz
xchg
mov
loope
push
sub
cmc
iret
adc
jns
push
mov
push
inc
imul
imul
mov
test
retf
repnz
call
and
daa
mov
sub
cmp
push
pop
inc
inc
xchg
or
pop
ins
cdq
repz
mov
pushf
test
icebp
fstp
mov
or
push
fimul
jae
dec
ficom
sbb
add
scas
movs
sub
cmp
ss
xchg
loope
test
add
loop
adc
dec
sbb
inc
mov
adc
xor
iret
xchg
hlt
xor
js
fs
or
push
mov
or
push
movs
push
jp
ds
sbb
aam
push
mov
fmulp
pusha
dec
fsubr
jmp
inc
adc
fcom
popf
pop
fisub
mov
das
xlat
int
adc
test
aas
push
out
nop
mov
(bad)
cmp
shl
lds
xor
test
push
jbe
push
iret
es
xchg
sub
fnstenv
pop
test
xor
int
sub
lock
sub
dec
inc
cmps
xchg
mov
mov
call
or
cs
xor
cmc
add
scas
pop
cmpps
repnz
in
fs
ds
rol
jl
and
jg
fstp
loope
or
sub
and
mov
xor
sbb
push
in
scas
add
sahf
scas
jp
jle
mov
adc
jbe
cmc
and
loopne
cmps
inc
push
ficom
mov
ds
add
out
ret
dec
(bad)
mov
mov
xchg
sbb
dec
sub
pop
mov
mov
mov
sbb
adc
add
inc
pop
or
aaa
into
adc
in
mov
xor
daa
mov
sbb
retf
(bad)
outs
sbb
imul
and
jp
fst
jno
sub
cmp
lahf
or
lods
fmul
jp
mov
adc
mov
push
cmp
std
jl
inc
test
cmp
or
jo
inc
pop
xchg
repz
ins
mov
jmp
scas
cmps
in
push
inc
jmp
pushw
jmp
(bad)
and
arpl
cmps
not
mov
out
addr16
movs
scas
fisttp
cmp
mov
ja
jne
jno
add
mov
push
jns
sub
jecxz
test
outs
cdq
jp
lds
xor
xchg
mov
call
adc
sti
pop
mov
data16
mov
imul
mov
out
xchg
movs
and
jnp
aad
add
push
xchg
out
sbb
ins
das
fisubr
into
add
fwait
mov
div
jp
push
stos
clc
pop
xchg
pop
xchg
dec
repz
push
cld
xchg
in
push
nop
jmp
fld1
sub
mov
jbe
pop
mov
pop
mov
std
jae
or
in
fist
outs
mov
push
cwde
lea
imul
cmp
mov
mov
icebp
dec
enter
je
stos
jecxz
add
fld
dec
pop
jbe
pop
lock
sbb
clc
repnz
fsubr
scas
movs
mov
cmp
push
fstp
mov
std
sbb
punpckhdq
pop
lock
loop
popf
dec
dec
or
mov
sahf
push
pop
js
clc
and
inc
stc
pop
sub
and
test
jnp
mov
icebp
cmc
out
or
mov
arpl
mov
stos
cli
cdq
les
addr16
sar
imul
dec
lods
rcr
or
in
jbe
inc
xor
out
push
int3
mov
cdq
inc
cmp
and
pop
cld
and
test
and
adc
adc
fmul
or
in
push
in
repnz
out
lods
jge
repz
pop
cwde
jp
mov
xchg
loope
loopne
dec
xchg
mov
fld
jbe
sbb
imul
(bad)
ja
xor
fnstsw
idiv
pop
imul
jne
add
sub
and
cmp
loop
sub
mov
pop
in
cmps
retf
test
adc
stos
and
lds
fnstenv
outs
dec
je
sub
xchg
cmc
fiadd
xor
jns
cmp
dec
call
or
repz
imul
jmp
push
mov
enter
popf
aam
ret
cmp
ret
push
xor
jmp
sub
jnp
inc
stos
ror
add
pusha
lods
loope
in
jno
mov
xor
push
popf
cmp
fwait
test
arpl
rol
push
adc
jecxz
aaa
in
jl
dec
mov
ds
dec
cs
jno
mov
(bad)
xchg
cmp
xchg
stc
mov
pop
mov
hlt
mov
mov
mov
and
daa
mov
mul
sub
sbb
add
and
cli
add
pop
cwde
mov
jb
mov
mov
mov
xchg
push
dec
ins
or
and
aad
icebp
or
xor
or
mov
test
fldcw
xor
mov
push
and
push
nop
iret
stos
and
jp
add
push
jge
loop
repz
rol
mov
push
adc
bound
mov
xor
mov
int3
bound
sahf
test
into
push
inc
cmc
lahf
fsubr
pavgb
fdiv
hlt
and
rol
call
mov
test
push
xchg
dec
adc
fcom
movs
in
das
out
mov
add
sbb
xor
ret
or
xchg
sbb
sbb
adc
pusha
dec
inc
jg
into
aas
mov
add
adc
stos
adc
stc
adc
jg
loope
popa
shl
mov
pusha
pushf
push
lods
cmp
setp
jbe
bound
leave
jmp
xor
fs
or
sbb
push
push
and
in
retf
test
jo
jge
test
or
out
into
pop
add
retf
sbb
imul
sti
push
mov
sbb
mov
jge
sub
sub
xor
es
cli
es
(bad)
inc
repz
std
outs
mov
out
sub
daa
cmp
loope
xchg
ins
add
and
dec
imul
push
leave
inc
(bad)
pop
ds
sbb
xor
push
rcr
mov
sbb
lahf
(bad)
lods
(bad)
jp
xor
dec
stc
mov
sub
ss
stos
gs
pop
push
inc
mov
in
or
xchg
out
jmp
adc
fninit
and
test
aam
mov
push
dec
test
xchg
dec
mov
je
add
fldenv
test
cs
jo
push
pop
pop
movs
xchg
stos
xchg
rol
mov
mov
leave
push
(bad)
dec
lods
pushf
jnp
jne
xor
or
sti
mov
adc
push
mov
jo
aaa
(bad)
test
and
inc
test
dec
and
cmp
retf
mov
sti
mov
ss
mov
pop
mov
lods
dec
ss
pop
xchg
xchg
mov
shr
and
lea
aad
imul
aas
adc
cld
cmp
pop
std
(bad)
lock
xchg
inc
mov
das
test
mov
and
xchg
into
bound
jns
stos
inc
or
cmc
ret
mov
pop
dec
fmulp
call
add
and
add
imul
or
bnd
test
dec
lock
xchg
ret
sbb
ret
adc
mov
ret
cwde
rcl
push
add
jmp
cmps
cmp
sbb
mov
ss
loop
sbb
sub
icebp
xlat
cmps
data16
pop
shl
push
js
pop
pop
sub
test
cmp
(bad)
dec
inc
in
jg
imul
sahf
or
loop
mov
inc
arpl
push
sbb
push
and
push
inc
fdiv
push
pop
mov
pusha
scas
jmp
pop
add
sub
adc
and
cmc
test
pop
ret
push
dec
lds
adc
and
mov
loopne
cmp
pushf
push
cmp
test
bswap
cmc
or
dec
jns
pop
mov
mov
xor
xchg
mov
int
sub
ins
sub
xchg
call
vpandn
and
int
jnp
loopne
add
fxch
mov
call
iret
pushf
xchg
movs
imul
daa
cmps
popa
cmp
cmp
fcmovnu
mov
mov
mov
dec
pop
push
jmp
and
and
cmps
add
sbb
je
push
or
push
(bad)
stc
sbb
cmp
jns
ds
dec
xchg
popa
xor
dec
sbb
sub
dec
sbb
imul
mov
push
pop
mov
sbb
es
cmp
outs
out
imul
sub
(bad)
jne
clc
adc
movs
mov
sub
xchg
arpl
push
retf
iret
rol
(bad)
call
bound
push
or
pop
and
or
fsubp
and
fsubr
mov
test
hlt
dec
(bad)
pop
jl
dec
out
lock
retf
jmp
pop
loop
and
mov
jnp
getsec
scas
and
push
nop
jg
xor
into
pop
loop
fild
xchg
push
jns
push
jle
lea
cwde
das
mov
dec
ret
dec
movs
and
pop
push
fwait
mov
das
and
and
push
adc
scas
dec
scas
retf
int3
loope
je
inc
xchg
cdq
mov
into
xchg
test
cld
mov
pop
mov
dec
and
mov
cmp
mul
retf
retf
sbb
retf
repz
movs
mov
jmp
iret
mov
cdq
out
loope
cmp
aas
and
cld
retf
mov
inc
jg
pop
inc
jle
xor
test
xor
pop
jmp
test
sar
jg
cmp
push
(bad)
jbe
test
test
pop
cmp
xchg
cdq
pop
sbb
popa
cmp
movs
stos
cwde
cmp
mov
stos
jle
cdq
retf
popa
mov
cmp
dec
sbb
shl
test
push
int3
cld
inc
jbe
xchg
mov
je
cmp
jp
adc
cld
rol
(bad)
push
cwde
inc
sub
mov
sbb
(bad)
jmp
mov
push
push
inc
(bad)
call
or
mov
test
out
jmp
mov
dec
xchg
and
jne
pop
dec
or
stc
test
sbb
repz
int3
dec
cmps
ins
(bad)
add
mov
imul
repz
je
stos
inc
and
lea
mov
imul
jns
(bad)
and
iret
jo
and
pop
into
lea
mov
mov
xor
loopne
imul
add
mov
nop
adc
inc
pusha
fcomip
popa
loopne
sub
cld
push
sub
arpl
out
fisub
cmp
pop
mov
scas
outs
aaa
scas
pop
in
jbe
add
dec
imul
fwait
popa
lds
test
pop
popa
scas
cs
ds
loop
es
inc
inc
lea
cmps
jnp
std
xchg
adc
outs
int
(bad)
jns
jl
int
or
dec
imul
mov
enter
xchg
mul
or
arpl
inc
and
aas
jl
nop
jns
in
cli
cmp
add
mov
add
arpl
push
pop
push
or
dec
adc
call
push
scas
ins
pop
icebp
loope
pop
jbe
gs
popa
sub
xor
jmp
lock
and
and
repz
les
push
outs
mov
(bad)
fist
mov
movs
add
imul
xor
dec
adc
jmp
lds
shl
jns
test
(bad)
popf
mov
mov
pusha
adc
jp
sbb
jp
jns
mov
jae
fsubp
imul
fld
in
dec
jl
ss
loop
adc
sbb
icebp
les
mov
(bad)
test
jnp
int
and
cmp
sbb
clc
add
ja
mov
push
inc
ds
inc
xlat
mov
mov
enter
std
push
jb
or
(bad)
xchg
add
cmps
lods
lahf
daa
add
test
push
cli
xor
jge
pop
sbb
xchg
mov
fisubr
push
push
lea
push
sub
mov
jp
fidivr
retf
pop
xor
inc
mov
gs
ror
xchg
xor
out
addr16
repz
jo
ss
cli
scas
nop
jb
scas
out
sub
loop
idiv
jecxz
movs
pop
adc
adc
popa
fdivr
rcl
adc
pop
pop
mov
imul
mov
inc
push
(bad)
and
rcr
iret
xor
xor
xor
cmc
mov
int
lds
int3
cmp
mov
lahf
call
add
fwait
mov
inc
bound
mov
sbb
stc
mov
fisttp
jbe
dec
add
dec
lds
in
cmp
jecxz
xchg
pop
mov
call
rep
dec
sub
mov
push
push
mov
cld
push
push
test
in
das
cli
and
in
out
jo
mov
sti
jo
mov
lock
xchg
out
sbb
scas
and
lods
push
imul
into
adc
sub
cmp
adc
xlat
aaa
lods
inc
jb
fwait
bswap
pusha
cmp
pop
lods
add
shl
dec
loope
jp
sar
lahf
push
inc
arpl
sub
mov
ss
xchg
push
and
adc
push
mov
mov
pop
xor
jnp
fadd
loope
or
xor
mov
adc
and
in
fnstenv
adc
xlat
sbb
sub
ret
mov
xor
nop
hlt
sbb
cli
(bad)
adc
add
fcom
dec
jl
inc
push
mov
jne
mov
sub
adc
ins
popa
fucomi
mov
push
mov
dec
push
ficom
lea
in
dec
outs
inc
ds
or
push
xlat
cmp
imul
ret
cmp
push
and
arpl
ins
aaa
pop
arpl
(bad)
cmp
test
in
pop
stc
inc
stos
ds
int3
mov
call
aaa
(bad)
jp
mov
retf
pop
add
mov
adc
fimul
je
pop
stos
fsub
xchg
mov
cmps
cs
mov
movs
imul
shr
xchg
ror
push
sbb
pop
pop
ins
icebp
out
pop
arpl
and
mov
data16
pop
xor
aaa
and
test
aas
xchg
mov
fwait
aas
test
pop
mov
and
push
test
rol
inc
xor
adc
sub
jg
dec
test
dec
fsubr
fs
int3
push
movs
mov
std
shl
data16
ins
icebp
aas
aad
pop
lock
xchg
mov
adc
pop
imul
xor
gs
test
xchg
mov
or
xchg
cmp
(bad)
in
pop
pushf
xchg
sub
sub
add
push
dec
inc
xchg
or
retf
in
ficom
add
in
int3
cli
out
dec
aam
fcmovbe
out
jle
mov
imul
outs
std
pop
adc
je
(bad)
sub
cwde
sub
fsub
inc
popf
movs
xchg
inc
jle
push
add
adc
dec
add
push
xchg
repz
outs
enter
pop
xor
jp
and
lahf
(bad)
ja
test
ja
pop
cmps
jnp
in
ss
pop
and
cmp
scas
push
inc
cmp
inc
cmp
inc
cmp
cmp
cwde
fst
push
jle
fst
adc
add
jbe
and
push
aam
jno
nop
or
in
and
adc
xchg
iret
imul
rcl
pop
xchg
cmp
int
shr
ins
pop
pop
inc
test
sbb
mov
fst
sub
loop
cld
rcl
fcmovne
mov
cmp
cmps
fwait
stos
jg
adc
lahf
mov
arpl
sub
jl
mov
mov
mov
imul
jmp
inc
aam
jmp
pop
dec
test
sbb
std
test
(bad)
lock
jg
xor
mov
push
retf
in
dec
inc
inc
jg
sub
into
sar
jg
idiv
(bad)
iret
or
pop
sub
sbb
push
aam
cmp
retf
adc
mov
lods
sub
shr
std
cmps
sub
jecxz
mov
ret
ins
sbb
js
push
hlt
add
ins
out
and
int3
jmp
sbb
into
mov
daa
shl
jb
dec
fs
inc
ss
jo
ins
in
xlat
mov
sbb
add
sti
cdq
inc
push
aaa
jl
jne
push
out
xor
mul
dec
jnp
and
aas
xor
icebp
mov
sbb
inc
and
or
es
adc
pop
outs
es
push
and
repnz
xchg
inc
inc
out
rcl
xchg
cmps
fidiv
es
addr16
sbb
push
loope
sbb
mov
cmp
cmp
sub
sbb
mov
mov
leave
sub
or
xlat
xchg
hlt
xchg
ret
lods
popf
push
jno
mov
xor
push
leave
xchg
pop
sar
aam
push
cmp
int
mov
jo
and
(bad)
lods
xchg
xchg
mov
or
push
outs
mov
adc
pop
jmp
scas
cmp
xor
sub
mov
inc
repz
mov
mov
call
shr
inc
or
(bad)
das
jl
stc
cli
div
or
jp
push
inc
cmp
fadd
and
inc
pop
adc
cmp
pop
inc
pop
js
mov
jae
xor
jl
enter
xchg
scas
loop
loope
sub
push
pop
sub
push
push
push
adc
and
xor
jae
shl
jbe
xor
lock
imul
adc
sti
call
idiv
in
push
test
inc
popf
ror
fistp
ficomp
push
adc
push
mov
mov
or
pushf
mov
dec
inc
push
pusha
mov
and
in
adc
mov
fdivr
ret
fistp
rcl
call
stos
jo
xor
or
mov
dec
call
retf
daa
mov
push
sub
dec
adc
or
in
bound
mov
popf
and
sub
push
xchg
mov
mov
clc
adc
adc
adc
push
fucomip
mov
shl
mov
mov
adc
dec
mov
iretw
mov
jno
adc
xchg
ins
push
imul
aad
mov
jmp
(bad)
cmc
xchg
mov
jge
std
xor
repz
inc
out
int
adc
lds
add
adc
dec
cmp
sub
push
adc
repnz
mov
std
ins
mov
sti
out
mov
mov
gs
pop
or
sub
fisttp
mov
das
mov
int3
or
das
and
pusha
ins
call
popa
add
xor
loope
xchg
pop
(bad)
movnti
add
jge
ja
and
test
mov
push
cli
sub
sub
xor
clc
fwait
and
jmp
push
jae
(bad)
cli
js
dec
in
pushf
movs
(bad)
mov
add
pop
sub
shl
das
shr
mov
into
not
sbb
int3
push
jns
(bad)
call
jle
push
dec
arpl
mov
popf
into
lds
xor
imul
and
push
xor
jp
xor
sbb
and
pop
jp
jle
or
das
inc
xchg
pop
cmc
and
jge
add
or
shr
mov
jbe
(bad)
repnz
or
jnp
lock
out
sbb
retf
jne
pop
jle
inc
add
imul
daa
iret
lahf
xchg
mov
xchg
clc
out
mov
scas
xlat
pop
int3
fisttp
iret
or
or
shl
pop
and
ds
jmp
jl
push
(bad)
out
nop
cld
fwait
sbb
daa
sbb
jg
into
push
ss
(bad)
xor
aaa
and
inc
ror
test
xchg
in
cmp
sti
inc
out
pop
loopne
aam
lahf
or
data16
jle
xor
je
push
xchg
jmp
sar
add
nop
daa
loop
in
adc
rcr
ins
(bad)
fucomp
pop
cmpxchg
inc
bound
ror
xor
mov
and
xchg
jmp
std
ror
out
sub
sub
ds
ror
daa
mov
xor
inc
movs
test
dec
es
sbb
push
ficom
and
xchg
leave
out
and
add
xchg
call
xchg
retf
add
inc
adc
pop
iret
sub
ja
test
pop
pusha
cmp
xchg
or
mov
test
xchg
bound
shr
adc
loopne
xchg
fsubr
push
lahf
and
ins
std
test
xlat
cmps
dec
(bad)
(bad)
push
push
iret
sbb
jne
fsubr
(bad)
cmp
mov
das
mov
into
jle
mov
add
adc
adc
sbb
repnz
mov
retf
jns
sub
sub
das
cld
(bad)
xchg
mov
in
lods
outs
out
fsubr
sbb
jmp
rcr
in
rol
pop
test
xchg
inc
cld
movs
mov
sar
pop
dec
pop
sub
fxch
jmp
idiv
mov
movs
jno
xor
push
js
cmp
outs
sub
pop
enter
ss
stos
lods
or
lea
retf
sbb
mov
jno
or
jg
pop
into
idiv
mov
sbb
xor
xchg
xor
and
call
or
mov
lock
adc
addr16
and
add
dec
call
cmp
and
mov
mov
pop
dec
popf
adc
mov
outs
push
retf
mov
mov
xlat
and
jmp
daa
retf
fnstcw
pop
daa
retf
mov
bound
inc
push
xor
stc
mov
add
fild
repnz
(bad)
sub
loopne
mov
xor
jp
mov
into
(bad)
xchg
ja
dec
ins
arpl
int
mov
cmp
xchg
fs
mov
mov
mov
dec
ss
rcr
cmp
outs
(bad)
pop
mov
xchg
jae
sub
pushf
pushf
push
frstor
sub
cmps
inc
test
fincstp
aas
test
int
lea
into
aam
sar
inc
push
fild
bound
mov
mov
pushf
jnp
sbb
adc
cmc
in
jp
mov
adc
add
cmp
les
mov
ror
cmp
gs
sbb
jo
rcr
sar
arpl
outs
cmp
ins
lods
xor
cmps
sub
(bad)
cld
sar
mov
add
xchg
stos
mov
dec
inc
xchg
leave
xor
pop
test
movs
mov
pop
in
push
dec
jno
test
jmp
xchg
(bad)
and
xlat
dec
jge
sbb
and
cli
adc
fnsave
push
popa
or
pop
sub
add
add
fnstsw
sub
cmp
popa
(bad)
jb
and
mov
cmp
popf
add
repnz
sti
fadd
inc
inc
jae
and
rol
dec
cmp
icebp
adc
lds
jnp
push
mov
(bad)
pop
cld
push
outs
xchg
mov
adc
retf
and
jge
xchg
stos
push
imul
scas
adc
mov
jge
dec
jge
repz
mov
jmp
frstor
or
cmps
cmp
lods
gs
ss
add
jo
ds
icebp
ficom
neg
mov
push
pop
or
leave
adc
in
lock
jne
ficomp
adc
sbb
dec
mov
out
push
in
and
cmps
out
and
xor
adc
retf
(bad)
daa
xchg
(bad)
jnp
xchg
mov
mov
add
jecxz
mov
call
jmp
or
mov
mov
rcr
lock
rcr
sub
xor
cmp
jg
sbb
and
in
popa
out
push
mov
xchg
test
scas
xor
sbb
leave
enter
lds
pop
clc
push
sub
sub
sub
or
retf
or
push
les
mov
adc
sbb
pusha
dec
rol
daa
popf
shl
lods
and
mov
xchg
sar
jnp
repz
xchg
sbb
sbb
adc
mov
adc
js
pop
pop
cmp
loopne
js
mov
test
aam
mov
test
and
mov
add
imul
or
mov
jge
jnp
aam
add
scas
dec
sub
inc
mov
fabs
dec
inc
sar
jno
arpl
push
pop
arpl
lods
xchg
dec
pop
and
dec
scas
fidivr
push
fst
jecxz
cmp
out
mov
xchg
ret
movs
aaa
call
mov
js
mov
mov
add
fdivr
mov
jge
xchg
jle
jge
jnp
je
(bad)
sbb
(bad)
dec
sub
inc
jmp
xor
ror
inc
enter
xchg
jmp
jns
imul
or
inc
jnp
mov
stos
outs
call
xchg
dec
stos
ja
dec
or
scas
aas
mov
bound
dec
add
imul
outs
xchg
div
retf
adc
sets
nop
push
pop
fs
out
mov
outs
into
and
xor
int3
int3
stos
jnp
inc
xchg
cmp
pop
out
dec
leave
jmp
int
mov
pop
mov
xchg
aas
lods
out
add
ins
outs
xchg
sbb
adc
xchg
adc
push
ins
std
cmc
add
retf
repz
das
lods
jge
dec
test
outs
adc
xor
mov
sbb
mov
fwait
xchg
sub
(bad)
test
xchg
adc
sub
push
sar
dec
jle
mov
fucomp
je
sub
in
or
out
inc
in
pop
pop
nop
inc
push
(bad)
xor
call
fdiv
(bad)
cmp
das
xor
pop
es
or
mov
adc
jg
dec
aaa
stc
ja
push
lods
cmc
mov
xchg
lahf
adc
mov
mov
movs
or
xchg
dec
ficomp
pop
hlt
add
pop
mov
xor
(bad)
mov
push
sbb
in
pop
imul
mov
push
jns
in
jae
movs
jle
push
sbb
ret
out
les
popa
mov
shr
shl
leave
mov
iret
adc
icebp
pop
dec
popf
sbb
xchg
sbb
jecxz
stos
imul
lds
mov
je
xchg
mov
ins
pop
or
xor
in
dec
lock
movs
push
adc
rol
push
mov
xchg
das
pop
rol
jne
sub
adc
test
into
sbb
scas
jecxz
call
movs
in
add
movs
mov
xchg
in
sub
imul
sub
inc
inc
pushf
pop
popa
push
push
stos
mov
mov
loopne
mov
shl
into
jbe
xchg
scas
sbb
jecxz
scas
sahf
ins
jno
inc
push
outs
jle
loopne
jl
pop
jge
adc
xlat
mov
(bad)
xlat
jmp
mov
ja
pop
jp
(bad)
jge
mov
jmp
repnz
mov
cli
rcl
popa
inc
aam
sbb
cdq
xchg
sbb
mov
(bad)
(bad)
sbb
test
icebp
aad
dec
cmp
mov
sbb
test
jmp
jl
into
inc
add
into
and
das
and
addr16
push
or
mov
dec
test
shr
jg
(bad)
xor
or
loop
mov
and
pop
sahf
retf
add
lods
popf
and
or
dec
ror
jnp
dec
and
pop
jg
lahf
movs
xlat
and
fimul
and
push
add
popf
in
je
or
shl
push
popf
stc
mov
imul
adc
dec
loop
sti
push
aam
lods
inc
lods
cmp
out
push
lock
stos
(bad)
pop
cmp
repz
jbe
sbb
or
out
lods
or
pop
sub
fcmove
xchg
jecxz
in
adc
jo
cld
mov
in
adc
mov
jp
outs
repz
jbe
js
and
int3
jge
lahf
cmc
inc
xchg
adc
clc
mov
or
test
ds
out
dec
mov
aam
sbb
mov
push
jne
outs
mov
call
cmp
sbb
jecxz
add
xlat
imul
cld
js
(bad)
repz
retf
jg
sbb
aaa
lods
ret
hlt
xchg
leave
sub
clc
and
daa
mov
(bad)
aaa
mov
out
std
pop
dec
neg
repnz
cmps
loop
mov
mov
(bad)
ror
pop
push
inc
push
ja
sub
push
inc
xor
stos
fadd
push
movs
jecxz
arpl
shr
cmps
retf
cmp
jae
push
gs
adc
(bad)
gs
or
push
add
dec
call
hlt
test
loope
ja
cmp
addr16
bound
pop
pop
dec
sbb
pusha
into
es
pop
rcr
leave
ins
stos
les
jmp
pusha
mul
dec
stos
cmps
cmp
sti
adc
push
sar
(bad)
mov
and
cmps
mov
mov
cwde
xchg
div
shl
fcomp
cmps
push
sar
pop
mov
fiadd
inc
pop
cmp
pop
jmp
mov
mov
and
pop
lds
(bad)
test
jle
into
add
cmp
jo
stos
jae
and
ss
push
rep
loope
xchg
xchg
lahf
xchg
push
fwait
push
and
shl
inc
out
ficomp
dec
or
jmp
mov
sbb
ficom
leave
sbb
or
push
mov
inc
add
mov
ficom
bound
das
cwde
sub
loopne
cmovnp
(bad)
mov
or
xor
es
or
and
mov
push
or
jge
mov
je
mov
loop
adc
in
loope
mov
sub
fnstenv
jmp
pop
int3
sub
jmp
xor
mov
mov
rcr
ja
push
mov
rcr
pop
jmp
inc
les
pop
jg
test
cmp
fist
and
sub
push
(bad)
mov
jae
mov
ja
push
clc
fs
loop
rcr
pop
and
mov
mov
jno
inc
loopne
lea
cwde
add
mov
push
dec
jns
jae
inc
cmps
imul
retf
xchg
adc
scas
xchg
dec
xchg
inc
mov
add
mov
mov
mov
out
push
push
add
imul
ins
add
retf
(bad)
jle
imul
enter
movs
scas
jle
push
lock
sti
push
repnz
mov
aad
popa
cmp
sub
mov
cmp
mov
xor
jl
int
(bad)
mov
jp
and
dec
pop
push
fnstcw
mov
and
pop
inc
int
push
dec
je
mov
ds
mov
aaa
cld
pop
mov
in
xor
iret
sbb
cld
ins
mov
in
add
inc
mov
(bad)
adc
xlat
push
mov
js
(bad)
and
sub
lods
jnp
mov
xchg
ret
inc
(bad)
push
xor
retf
add
jmp
hlt
xor
adc
cdq
push
lock
aam
(bad)
push
(bad)
adc
dec
xor
adc
jmp
sub
push
dec
cmp
jecxz
cld
pop
adc
push
(bad)
not
nop
jbe
adc
mov
(bad)
stos
mov
mov
je
add
lods
sbb
fsub
inc
mov
cmp
cli
jno
cmps
enter
or
fisttp
stos
fist
loopne
sahf
retf
or
and
fst
cmp
mov
fcom
test
add
mov
aas
dec
shl
sbb
movs
push
mov
sub
sub
mov
int
in
push
sub
shl
mov
sbb
in
jg
mov
mov
dec
add
call
cwde
dec
pop
pop
popa
(bad)
pop
or
jl
popa
jne
clc
mov
ret
call
nop
pop
xor
adc
mov
xchg
dec
aad
int
iret
mov
jmp
into
sar
ret
jae
mov
into
fdivrp
mov
pusha
dec
mul
int
push
test
in
inc
jge
cli
xor
ret
add
adc
shr
test
cmp
inc
movs
jno
jnp
pop
fs
adc
jl
cli
sbb
mov
adc
adc
sbb
mov
cld
movs
jns
jns
daa
mov
icebp
sub
inc
cwde
jecxz
loope
stc
mov
sahf
sub
cmp
in
dec
mov
push
test
push
jne
mov
psrad
movs
(bad)
int
div
pop
je
mov
loop
dec
cmp
in
push
cmc
movs
push
sub
pop
fidiv
or
pop
sub
push
enter
test
jne
pop
dec
mov
adc
sbb
fst
pop
sub
inc
sub
sbb
stos
dec
movs
mov
in
adc
loopne
daa
and
mov
retf
sahf
xchg
aad
shl
adc
call
call
add
rcl
pop
mov
mov
pop
fwait
jns
fwait
push
mov
imul
add
das
pop
push
pop
inc
jle
add
(bad)
jne
ror
retf
add
push
aaa
repz
cmp
add
mov
xor
call
adc
jae
in
(bad)
not
mov
jp
mov
ds
fs
cmc
addr16
add
dec
jb
scas
push
jae
dec
cmps
mov
sbb
adc
mov
les
outs
loope
or
das
lock
imul
dec
repnz
pusha
aad
cli
loop
int3
(bad)
pop
sbb
out
loope
xor
je
mov
jae
repnz
push
xor
fs
and
(bad)
popa
push
pop
xchg
push
(bad)
push
and
sbb
clc
and
pop
xchg
jmp
ds
or
sub
in
scas
stc
and
pop
jno
xchg
sub
mov
push
into
fstp
retf
lahf
xor
int
aam
xlat
dec
fldcw
inc
mov
loop
or
sbb
mov
addr16
xchg
pushf
pop
jb
pop
int3
mov
inc
xchg
dec
xchg
not
sub
(bad)
push
jp
sub
dec
jne
movs
jbe
xchg
adc
fild
mov
fsub
ins
or
and
sub
aas
and
push
mov
xor
mov
inc
or
aad
div
retf
and
cmp
icebp
cs
leave
lahf
and
xchg
adc
fisub
and
xlat
inc
sbb
fisub
sub
xchg
mov
or
xchg
push
inc
test
mov
cli
mov
cmp
sub
and
fcomp
std
mul
or
loope
into
or
nop
jge
sti
ret
pop
inc
cmc
push
add
xor
and
loope
dec
or
pop
or
adc
or
arpl
movs
add
mov
xchg
cld
outs
mov
dec
mov
push
lods
daa
push
adc
cmp
xchg
mov
fmul
pop
or
or
pop
jg
cwde
jmp
test
cld
xor
bound
js
dec
and
sti
sub
jp
mov
lahf
pusha
xchg
mov
fldenv
ret
lahf
pop
dec
add
(bad)
mov
lock
xor
xchg
into
leave
dec
xor
fmul
fst
dec
ins
pusha
jnp
call
dec
push
push
sti
ret
sti
ss
jmp
fs
outs
mov
inc
repz
add
in
leave
pop
js
movs
mov
jle
mov
and
mov
pop
cmps
loope
fiadd
xchg
mov
cmp
dec
mov
hlt
aaa
inc
mov
inc
adc
jb
mov
lods
jbe
add
mov
lahf
js
mov
jns
dec
xchg
call
push
popa
sbb
into
adc
out
cmp
aam
jb
add
jecxz
repz
pshufw
push
mov
mov
push
cmp
out
bound
dec
adc
cmp
mov
or
ror
cmp
or
gs
movs
pop
push
test
push
outs
iret
retf
add
pop
sbb
dec
cld
or
sub
clc
xchg
call
test
test
sbb
fst
or
int3
mov
enter
daa
inc
gs
xchg
ret
pop
inc
in
inc
lods
xlat
movs
les
push
inc
pop
data16
outs
mov
stc
add
xchg
call
mov
mov
popa
jne
lods
jmp
popf
jmp
adc
mov
pop
sbb
das
push
cld
adc
popa
imul
mov
jl
adc
es
cmp
sahf
dec
hlt
pusha
and
js
sbb
ret
icebp
cmp
stos
mov
or
jg
popa
ss
pop
hlt
daa
add
and
cmp
cmpxchg
(bad)
jno
or
xchg
shr
lahf
adc
dec
mov
cmp
mov
xchg
cmps
imul
pop
aaa
xlat
jmp
sbb
xlat
enter
add
adc
outs
in
test
add
add
add
sbb
push
(bad)
call
test
push
xlat
sub
jecxz
int3
adc
sbb
int3
mov
retf
mov
mov
push
sbb
sbb
add
fcomp
xor
in
sub
leave
jmp
push
test
mov
push
ret
pop
add
cli
cmps
push
mov
and
cld
fmulp
cwde
xchg
or
push
cmp
sub
sbb
mov
sbb
test
test
mov
mov
mov
mov
lods
mov
adc
fsub
fadd
scas
pop
jecxz
loopne
(bad)
jo
stos
inc
mov
nop
stc
daa
aaa
jne
xchg
lock
or
jb
ret
jae
or
test
lods
(bad)
add
cmp
jge
or
int3
inc
lock
and
stos
adc
mov
jno
ins
push
icebp
fcom
jecxz
push
push
cld
push
add
push
or
xor
popa
adc
ret
pop
movs
ret
add
(bad)
push
fisubr
sahf
add
ins
dec
add
push
jg
jbe
xchg
push
arpl
add
lahf
out
jmpw
xor
aaa
icebp
imul
mov
and
shr
adc
(bad)
test
out
mov
mov
adc
clc
adc
mov
iret
mov
(bad)
test
pushf
xor
push
sti
and
push
rep
aaa
(bad)
sub
enter
mov
inc
mov
rcl
fist
inc
ret
push
jo
sti
imul
daa
inc
push
jmp
fdiv
loope
fnstenv
xchg
enter
mov
test
xchg
je
mov
jb
pop
jbe
mov
inc
mov
sbb
in
sub
pop
xor
ja
inc
data16
or
ins
in
push
test
(bad)
loopne
div
jbe
call
dec
dec
xlat
cdq
in
cmp
rcr
das
das
push
adc
mov
push
or
imul
in
mov
int3
shl
mov
xor
pushf
push
cmp
sub
lods
(bad)
push
les
sbb
js
in
js
iret
and
sbb
jo
push
std
adc
mov
mov
gs
ja
je
test
or
sbb
nop
call
dec
leave
jbe
pop
fsubr
push
(bad)
sub
cmp
xlat
dec
sbb
nop
cli
mov
test
inc
std
sbb
leave
aad
push
aaa
gs
bound
push
out
lock
push
sub
xchg
pusha
imul
xchg
cdq
scas
cmp
pop
clc
mov
jmp
aas
and
inc
into
pop
daa
mov
pop
mov
mov
mov
aas
jmp
mov
daa
or
xor
jg
sub
push
inc
repz
scas
pop
fadd
clc
in
call
retf
xchg
pop
test
pop
push
lods
ins
cld
ins
inc
movntq
out
mov
adc
outs
fldenv
pop
daa
and
cmp
(bad)
test
jmp
fwait
inc
cmp
mov
add
into
fst
cmp
mov
or
mov
and
pushf
pop
adc
ret
jl
inc
cmc
daa
pop
mov
inc
inc
xor
pusha
cmps
xchg
cmp
xchg
(bad)
lods
pop
inc
add
and
test
imul
push
gs
shl
dec
fld
cmp
dec
jle
mov
cmc
or
shl
xchg
push
push
bound
or
cmp
lea
cmp
aaa
addr16
and
out
mov
sbb
cmp
popf
add
out
jg
fdivr
sbb
into
add
cmp
das
sahf
dec
sti
sub
push
iret
int3
add
and
stos
pop
ror
clc
or
push
repz
inc
(bad)
or
add
or
jge
mov
cwde
sub
(bad)
stos
inc
bnd
pop
dec
icebp
cmps
push
and
pop
adc
enter
cmp
add
mov
aaa
push
dec
inc
icebp
cwde
es
cmp
mov
add
add
scas
jmp
stos
data16
jbe
(bad)
scas
addr16
ds
mov
jge
push
mov
mov
or
ds
ds
nop
inc
ror
(bad)
jmp
mov
sbb
pop
fsubr
xchg
imul
push
ins
push
pop
aad
mov
nop
add
bswap
mov
dec
sub
mov
shl
sbb
mul
arpl
aaa
adc
ins
mov
jle
into
dec
imul
test
repnz
cmc
mov
push
(bad)
fld
scas
adc
sar
out
jnp
pop
add
push
ja
not
sub
cmps
sbb
in
mov
mov
ins
mov
or
cmp
jbe
test
loopne
mov
push
pop
bound
fwait
sub
dec
bnd
retf
test
mov
jmp
aam
test
hlt
xor
push
or
icebp
data16
daa
dec
rol
stos
aad
push
inc
adc
ret
jmp
pop
push
add
les
sahf
iret
mov
cmp
(bad)
aam
mov
mov
retf
gs
shr
test
cmps
shl
cmp
pop
mov
pop
mov
es
push
retf
mov
les
adc
and
mov
cmps
push
add
pop
gs
push
fdivr
test
movlps
dec
mov
mov
call
imul
gs
cmp
fs
mov
loopne
pop
sbb
jg
out
lods
lock
cmp
scas
push
in
pushf
jmp
add
or
clc
popf
and
sti
dec
leave
(bad)
cld
jno
cmp
sub
rcl
out
mov
std
aam
imul
xchg
xor
in
out
or
mov
mov
xlat
sub
lods
xchg
cmc
fist
jno
xchg
dec
adc
push
sahf
and
(bad)
push
rcr
ror
dec
pop
retf
adc
push
mov
inc
mov
push
sub
pop
in
shr
imul
sbb
inc
lock
repz
xchg
sub
mov
pop
cmps
(bad)
pop
in
es
inc
jmp
in
sti
xchg
je
out
inc
in
push
(bad)
fcom
sub
bound
or
xchg
push
xor
fcmovbe
push
inc
sub
push
jne
(bad)
dec
daa
iret
stc
sbb
mov
inc
data16
out
or
popf
xlat
dec
xchg
mov
push
retf
lods
stos
stc
jnp
ret
les
push
popf
fs
iret
sub
cmp
inc
out
loopne
aad
call
mov
cmp
dec
int3
mov
scas
pop
inc
cmp
push
pop
(bad)
pop
cld
(bad)
(bad)
iret
and
imul
enter
fidiv
in
jmp
or
xor
(bad)
daa
sub
ss
in
mov
repz
rcr
xchg
xstore-rng
cmps
inc
out
loopne
addr16
mov
call
in
cld
inc
pop
scas
mov
cli
adc
mov
cld
or
sub
lahf
add
add
fist
cmp
push
or
push
in
mov
mov
shl
out
repnz
cmps
push
fnstenv
pop
jp
es
sub
xor
pop
jne
adc
cmp
test
sub
pop
sahf
sbb
mov
mov
jge
lods
sbb
add
xchg
sub
jne
pop
sahf
addr16
ficomp
xor
xor
mov
xor
add
jp
mov
jae
adc
jbe
fnsave
add
aas
arpl
jb
sahf
rol
mov
call
or
idiv
xlat
xor
rol
add
push
xor
push
aad
int3
add
rcr
cmp
out
sbb
sbb
scas
int
fnstcw
test
lahf
fldcw
add
jne
pusha
mov
jge
popf
pop
sahf
jne
cs
mov
pop
adc
pushf
dec
add
jbe
dec
int3
(bad)
rcr
in
xchg
pop
dec
push
js
retf
(bad)
nop
jmp
ins
fiadd
jg
pop
rcr
popf
mov
imul
jnp
inc
xchg
lods
mov
cmp
in
cmp
fld
adc
mov
retf
mov
cmp
(bad)
push
mov
mov
or
mov
lea
rcr
fldcw
enter
aas
loopne
adc
adc
fs
mov
cmps
jl
call
dec
mov
gs
rcr
repz
pop
test
pop
add
pop
adc
sub
adc
or
loop
pop
outs
test
adc
(bad)
fidivr
ret
movs
(bad)
retf
cmp
loope
rcr
sub
inc
lods
in
jl
fsub
stos
jmp
int
xchg
inc
sbb
mov
mov
jne
inc
pop
pop
sub
push
dec
in
imul
test
lahf
mov
and
(bad)
add
test
jle
sbb
fcomp
imul
ins
cmp
inc
xor
jnp
rol
pop
cmc
jle
dec
jbe
arpl
push
xor
loop
ss
jl
mov
push
retf
sub
lds
cs
(bad)
nop
fld
pop
das
mov
lods
call
out
pop
call
xchg
dec
mov
repnz
sub
shr
ret
rcr
test
push
out
fcom
cdq
mov
fisubr
push
cdq
inc
or
mov
cli
cmp
and
das
mov
jg
retf
xor
and
pushf
js
ret
push
inc
cmp
(bad)
mov
rcl
jmp
shr
(bad)
shr
shr
jae
shrd
sbb
movs
adc
cmps
outs
xor
adc
imul
hlt
xchg
imul
dec
retf
jl
push
mov
cmps
add
mov
jae
cmp
mov
mov
stos
mov
mov
test
mov
jno
push
xor
cmp
mov
jl
cmp
les
push
imul
movs
cwde
jmp
inc
aas
add
cmp
cmp
mov
(bad)
and
adc
cmps
cmp
adc
mov
push
lods
jl
loope
pop
adc
dec
mov
push
and
int3
mov
in
jmp
mov
loop
and
sbb
in
pop
mov
sahf
jnp
sub
push
outs
mov
popa
adc
mov
cmp
mov
mov
jbe
cmp
xlat
dec
(bad)
and
sub
mov
cmp
sub
mov
popf
scas
fwait
pushf
je
mov
pop
aas
jge
push
jg
inc
xchg
mov
inc
sub
jne
jae
mov
into
cwde
or
xor
and
mov
repz
retf
out
push
test
cmp
xor
fdiv
jns
inc
pop
push
fmulp
enter
adc
cmps
jp
xor
popf
and
pop
mov
aaa
push
dec
add
push
push
xlat
sub
sar
or
enter
sbb
lock
fnsave
cmps
cdq
push
sub
sahf
stc
cmp
xor
fidiv
ja
test
fsub
cmps
dec
mov
adc
fst
push
jne
je
sbb
pusha
push
push
sub
(bad)
aas
push
arpl
jo
push
dec
and
(bad)
add
jp
(bad)
sub
icebp
push
fdiv
hlt
mov
push
fwait
dec
mov
jmp
mov
mov
or
mov
enter
iret
jnp
std
jg
mov
retf
cs
cmp
inc
(bad)
sub
mov
dec
jne
xor
adc
mov
push
(bad)
sbb
ja
leave
cwde
cmp
mov
fldcw
pop
xor
retf
jge
pop
stos
int3
push
jb
pop
mov
out
rol
sbb
test
inc
jp
and
out
push
loopne
je
pop
sti
xchg
(bad)
adc
pop
cwde
sbb
fsub
jg
pop
adc
lea
fnstenv
outs
and
xchg
int3
stos
out
add
out
jp
fist
cmps
leave
and
ret
pop
cmp
push
xchg
sub
inc
mov
mov
pop
xchg
bound
push
lods
retf
pop
pop
pop
adc
imul
jo
mov
aad
fcom
xchg
loopne
or
fist
iret
push
mov
cwde
scas
cmp
and
push
sbb
sub
adc
push
xchg
pop
icebp
in
adc
push
add
sti
cmp
in
loope
data16
fwait
mov
stos
addr16
sbb
fcom
or
dec
iret
movs
movs
ret
add
mov
dec
in
popw
fwait
or
push
xchg
fcmovne
inc
movs
test
bnd
mov
data16
push
inc
cmp
xchg
outs
inc
lock
repnz
pop
in
pop
lahf
add
push
loop
jbe
inc
add
or
loop
push
rcr
enter
jb
mov
and
int3
push
push
js
mov
pusha
sub
push
enter
sub
jnp
out
pop
adc
mov
adc
cs
sub
fnstenv
pop
mov
stc
pop
add
lods
jae
push
mov
sub
loop
adc
push
mov
mov
dec
xor
xchg
pop
mov
aam
cli
sti
in
mov
mov
add
cmp
add
mov
jnp
in
jno
je
and
call
fisub
shr
mov
mov
xchg
xchg
push
outs
stc
jbe
mov
test
mov
gs
jbe
aad
dec
pusha
iret
outs
rol
or
add
xchg
enter
inc
xchg
inc
fisub
adc
sub
and
dec
mov
iret
gs
call
je
(bad)
mov
xor
shl
mov
mov
(bad)
test
jecxz
mov
(bad)
imul
loopne
adc
fwait
mov
scas
(bad)
adc
not
mov
daa
sub
sbb
rcr
sbb
dec
add
cmc
popf
xchg
push
jp
jge
pop
fsubr
out
outs
cs
(bad)
push
adc
dec
push
cs
lahf
adc
(bad)
fwait
mov
pop
xchg
lods
leave
adc
ficomp
outs
or
call
imul
push
dec
daa
popa
cli
and
mov
mov
sub
pop
push
lock
test
push
jbe
cmp
or
out
retf
and
dec
sbb
fldenv
outs
or
rcl
dec
mov
mov
xor
mov
outs
cmp
rcr
inc
nop
adc
repz
loope
scas
sbb
stc
or
dec
data16
clc
inc
int
xor
jnp
add
xlat
cmp
(bad)
and
jmp
dec
or
jmp
mov
jg
add
adc
add
ins
xor
dec
leave
cld
imul
mov
cmp
popf
adc
(bad)
cmps
sbb
out
cmp
das
hlt
xchg
jns
push
dec
enter
sbb
test
inc
xor
ret
(bad)
jmp
xor
mov
test
ret
mov
add
cmps
cmp
loop
mov
cmps
sbb
call
push
into
inc
fidivr
sbb
and
pushf
ror
shr
inc
pop
cmp
jno
cmp
add
in
cli
or
iret
imul
icebp
movs
jbe
jbe
jl
test
xor
jo
clc
xlat
movs
pop
ds
not
jge
popf
and
mov
mov
aaa
sub
ins
adc
hlt
iret
gs
mov
cmps
xchg
cld
std
adc
stc
sub
mov
sub
rcr
outs
adc
and
ficomp
and
lea
add
mov
adc
test
arpl
cmps
ds
cmp
jp
adc
ret
in
push
fs
in
mov
in
inc
xchg
bound
gs
fbstp
mov
sbb
xchg
dec
pop
rcl
loope
cmp
xlat
je
das
add
sahf
ror
jmp
xor
je
jle
add
dec
add
add
mov
lods
sar
pushf
test
es
ret
xlat
ret
iret
fwait
add
mov
aas
ret
add
hlt
adc
rol
xor
test
icebp
pop
shl
jl
mov
jbe
push
fild
sub
mov
add
push
out
pop
pop
push
ss
inc
sub
nop
inc
pop
int3
sbb
fs
ja
or
dec
mov
sti
inc
mov
int3
push
jne
add
in
aas
jmp
mov
jno
inc
sub
scas
outs
out
cmp
cs
jno
hlt
xchg
inc
in
or
xor
sub
sbb
xor
push
sub
mov
xlat
rol
je
in
int
add
jb
push
arpl
mov
in
push
xchg
leave
pushf
xor
clc
in
sbb
frstor
mov
pusha
mov
in
jmp
test
hlt
das
cwde
sbb
stc
pop
mov
cmp
fwait
cli
jae
movs
xor
pop
pop
retf
cdq
ds
sub
stc
loope
or
ins
jmp
popa
pop
lods
popa
fidiv
sbb
rcl
popa
and
(bad)
loope
cmps
loop
ins
aam
ss
in
adc
xor
into
scas
xchg
popf
sbb
mov
mov
and
pop
sti
out
mov
xor
jp
out
loopne
(bad)
lock
loope
or
push
fcmovbe
call
lock
inc
jmp
and
inc
push
inc
clc
lock
sub
shl
cmp
loope
jge
push
inc
ret
cmp
loop
dec
mov
fdivr
sub
ss
js
mov
in
xchg
inc
jmp
jecxz
mov
ss
mov
inc
sbb
jge
(bad)
out
xor
cmp
ins
stos
jge
mov
pusha
add
inc
pop
std
push
mov
cs
cmp
adc
repz
cdq
sti
push
test
jmp
in
pop
jecxz
mov
push
cli
in
xchg
adc
and
(bad)
shr
(bad)
aad
(bad)
sub
sub
cwde
pop
cli
cmp
mov
jbe
mov
cmp
push
rcr
shr
or
movs
add
push
inc
mov
or
aad
inc
jmp
xchg
add
mov
push
mov
addr16
jmp
push
xor
addr16
iret
fcmovbe
adc
jae
xor
or
outs
xchg
jmp
mov
ds
jmp
cli
mov
fsub
test
cmc
add
pop
xchg
push
enter
cli
dec
xchg
mov
mov
inc
pop
cs
xchg
pop
cli
add
xor
cdq
or
inc
jbe
dec
sbb
je
push
aaa
dec
stc
in
repz
aaa
js
inc
xor
shl
repnz
cmps
cwde
inc
jmp
xor
push
std
mov
mov
dec
push
and
imul
inc
push
pop
pop
jmp
xchg
jg
ins
stos
xor
aad
shl
inc
imul
mov
scas
dec
aam
mov
add
fmul
cli
or
pop
add
or
jb
inc
mov
fwait
and
imul
add
mov
in
call
sbb
movs
cmp
mov
retf
sar
mov
dec
mov
or
das
int3
cmp
ja
jle
out
cli
dec
or
mov
mov
out
int3
dec
inc
jmp
dec
js
inc
inc
or
outs
clc
std
xor
mov
dec
add
xchg
arpl
aaa
cmp
dec
pusha
xchg
mov
iret
aaa
jb
lea
enter
or
pushf
arpl
mov
mov
pop
sub
hlt
add
mov
push
shl
inc
lds
sub
adc
loope
cs
into
xchg
adc
inc
jle
jbe
stos
push
call
pop
adc
pop
sub
test
adc
jmp
(bad)
popf
sbb
mov
stos
sub
push
stc
retf
mov
or
mov
ret
add
sub
cmp
xchg
mov
push
push
in
call
cli
xchg
aaa
fmul
adc
in
push
std
popa
xchg
and
test
pop
mov
fimul
sbb
mov
cld
push
enter
pop
dec
fadd
xchg
xchg
aas
adc
rcr
adc
add
xchg
(bad)
repnz
mov
xchg
add
ret
mov
rol
jnp
test
push
sub
mov
cmps
popf
into
push
sahf
jae
jecxz
push
inc
psrad
in
iret
mov
ja
loope
push
test
dec
out
ror
mov
pop
mov
imul
mov
pop
pop
push
sti
xchg
sbb
sbb
out
jp
jnp
inc
jno
rol
rol
mov
pop
aas
jmp
retf
and
and
jbe
loopne
jmp
push
and
xchg
pop
mov
popa
add
das
in
loope
fisttp
jae
mov
cmc
pop
popa
nop
mov
pop
mov
mov
call
mov
adc
cmp
xor
mov
retf
nop
jb
mov
xchg
jns
jecxz
movs
mov
pop
int
nop
addr16
pop
icebp
mov
stos
(bad)
sti
out
jae
cwde
in
push
inc
inc
inc
in
sbb
shr
push
movs
int
test
xchg
mov
in
aad
daa
dec
adc
addr16
cmp
sub
ret
ins
or
lods
pop
mov
sub
imul
mov
jmp
rcr
pop
outs
stos
ds
lock
ds
add
mov
or
jge
dec
inc
cmp
fidivr
pusha
or
into
mov
pushf
sub
aam
pop
jne
outs
and
dec
dec
clc
sahf
mov
shl
or
aas
rcr
xchg
and
stos
ins
(bad)
lock
gs
mov
inc
sti
mov
push
xchg
stos
imul
imul
mov
pop
mov
shl
cmp
(bad)
shr
jmp
push
inc
pop
sub
and
and
lahf
mov
fcom
pop
adc
lods
push
or
sub
fistp
sub
out
xchg
xor
(bad)
retf
pop
movs
cmp
sub
jne
pop
imul
test
and
popa
xchg
cmp
jmp
jle
cmps
pop
pop
rcl
rcr
pop
inc
adc
pop
test
test
dec
(bad)
jecxz
(bad)
data16
add
xchg
data16
mov
mov
dec
mov
fisubr
add
scas
dec
dec
scas
inc
sub
dec
addr16
cmps
out
xchg
pusha
leave
push
mov
sbb
push
outs
inc
xor
xor
fistp
jle
adc
mov
scas
ret
add
ret
push
dec
mov
jbe
hlt
fidiv
mov
adc
push
in
repz
mov
and
test
cwde
imul
jmp
iret
inc
push
retf
mov
out
aad
xchg
not
inc
xchg
inc
push
hlt
clc
dec
shl
lods
inc
pop
push
test
jo
popf
jae
leave
popa
jnp
dec
out
jg
adc
or
jmp
or
push
adc
mov
lea
mov
inc
pop
(bad)
into
jmp
add
cmc
push
loope
adc
sbb
push
ret
movs
ss
popa
mov
retf
cmps
mov
(bad)
sbb
sub
imul
bound
test
in
jmp
pop
loopne
mov
call
out
repz
jmp
and
push
push
dec
loope
jecxz
sub
int
nop
addr16
dec
or
dec
div
pop
fsub
(bad)
into
loopne
adc
cmps
fwait
dec
jl
and
mov
jmp
or
mov
dec
xor
cmp
sbb
add
ret
jl
or
jne
xor
enter
daa
jno
out
ret
int3
out
stos
xchg
dec
pop
fwait
adc
mov
dec
or
int
mov
loopne
mov
in
ret
bound
sti
popf
mov
gs
or
push
and
sbb
cmp
mov
fnstenv
mov
imul
retf
int3
mov
in
clc
fst
fnsave
in
out
hlt
dec
(bad)
sahf
mov
sbb
(bad)
fs
lock
fisub
dec
nop
rcl
pop
push
pop
sbb
jl
mov
std
xor
movs
loope
mov
push
cmp
adc
and
imul
leave
inc
pushf
adc
mov
cmp
cdq
cs
enter
(bad)
pop
mov
in
pop
daa
and
inc
mov
xor
movs
hlt
sub
test
or
lock
xchg
das
ret
mov
dec
mov
repz
ja
mov
mov
(bad)
jb
fcomp
cld
add
mov
mov
mov
cld
ret
xchg
sub
jg
(bad)
xor
retf
repz
ja
xor
mov
or
pop
das
test
push
out
push
retf
std
push
jb
out
(bad)
imul
dec
xchg
int
jp
push
mov
jae
xor
outs
jmp
int3
mov
mov
jne
xchg
outs
icebp
inc
(bad)
enter
into
test
dec
mov
call
sti
pushf
sahf
push
inc
jle
and
das
inc
push
push
lahf
jmp
pushf
mov
mov
into
mov
xor
xchg
xchg
adc
cmps
adc
shl
adc
jge
pusha
jne
(bad)
fisttp
mov
inc
popf
add
cmp
cmp
cmp
pop
stc
neg
in
daa
push
jae
xchg
pop
imul
xchg
dec
retf
in
scas
std
sbb
dec
sub
in
dec
shr
pop
adc
mov
add
enter
daa
fld
shl
pop
repz
shr
pop
adc
pop
outs
sub
push
jmp
add
pop
in
cmc
mov
or
jbe
in
dec
into
mov
push
(bad)
ja
fwait
ror
fdivr
retf
pop
int3
test
pop
jno
hlt
int
cmp
jno
in
adc
(bad)
shl
(bad)
std
pop
scas
test
cli
jb
xchg
sub
outs
sub
jae
push
out
in
jle
aad
loopne
mov
call
call
fnstsw
jbe
jbe
int
and
xor
popa
cmp
ss
cld
sbb
enter
mov
mov
in
mov
mov
sub
mov
push
sbb
mov
adc
in
in
je
mov
loopne
pusha
rcr
sub
push
cmp
ror
sub
jo
idiv
mov
adc
push
call
pop
jo
lods
inc
dec
clc
scas
mov
ja
lods
push
(bad)
call
mov
jmp
rcl
clc
imul
shr
scas
cdq
popa
adc
(bad)
lds
cmp
xchg
xchg
sti
sbb
loopne
mov
gs
repz
jle
mov
adc
aas
repnz
sbb
lods
rol
adc
std
ds
mov
jge
or
xchg
scas
rcl
sbb
fldcw
adc
jmp
pop
and
mov
jp
into
leave
popa
dec
sti
out
cwde
repz
addr16
xchg
fwait
jo
xchg
sahf
jmp
mov
std
pop
aas
cmp
cmps
sub
pop
and
std
mov
call
out
stos
pop
(bad)
(bad)
outs
inc
pop
sbb
lods
ds
cwde
mov
scas
call
outs
iret
leave
mov
mov
push
add
xchg
push
mov
std
jb
sahf
mov
popf
jge
lea
fadd
cmp
fucomi
dec
inc
xchg
xor
sub
xchg
pop
sub
adc
xchg
icebp
push
aam
or
dec
and
jmp
mov
push
adc
daa
sti
(bad)
add
xor
inc
push
mov
mov
or
cmc
sbb
mov
(bad)
fdivr
fist
pop
shl
jb
cmps
ins
or
xor
push
loopne
data16
(bad)
xor
adc
mov
in
int
cmp
cmps
xor
stos
sub
cmps
arpl
ja
mov
xchg
jbe
jmp
or
dec
std
sbb
ss
xchg
imul
ins
sub
sub
call
retf
pop
rcr
ja
xor
mov
push
sub
sar
push
repnz
std
push
lahf
adc
mov
jp
sub
jmp
add
(bad)
fst
retf
pushf
adc
ficomp
rcr
mov
int3
dec
jl
jle
(bad)
cmp
mov
in
in
cmps
xchg
call
pushf
sub
ja
mov
adc
sub
mov
in
leave
imul
push
gs
jecxz
mov
sbb
fld
pusha
inc
outs
(bad)
cld
mov
clc
arpl
sbb
sti
cmp
pop
iret
out
push
sbb
jns
xchg
cmc
test
nop
scas
std
mov
fdiv
xor
sar
mul
push
aaa
ss
pop
xor
sbb
lds
cmp
test
scas
mov
pushf
ds
jae
add
jle
pusha
sbb
adc
sbb
lock
pop
mov
push
std
lods
ja
pop
push
lea
nop
(bad)
mov
or
arpl
push
mov
iret
jg
xor
out
scas
in
xchg
xor
dec
stos
xor
iret
or
int
adc
inc
test
cmp
into
cs
sub
add
loop
aaa
mov
xor
retf
stos
jnp
and
call
mov
mov
mov
push
or
pop
pop
aas
ins
sub
xchg
jmp
pop
fwait
push
daa
push
call
pop
cmp
jb
push
jmp
dec
inc
test
inc
jg
nop
imul
das
xchg
sub
xchg
sbb
ficom
pop
in
mov
mov
int
sbb
mov
push
sub
pop
mov
fwait
mov
test
in
jle
mov
test
inc
in
daa
std
and
sub
das
fincstp
out
fimul
push
mov
jmp
cmp
jns
push
ret
adc
or
sbb
cwde
jp
pusha
je
sub
shl
xchg
cmp
aam
mov
push
sbb
sbb
mov
out
pop
gs
das
inc
cs
jno
aad
pop
adc
lea
cmp
rcl
cli
outs
nop
add
jg
movntq
add
dec
movs
jmp
mov
sub
imul
mov
test
cs
jp
lahf
cmp
fidivr
mov
jl
sub
ds
cmp
scas
lahf
push
(bad)
lds
fwait
xor
arpl
cmp
loopne
push
xchg
ss
and
add
jmp
push
aad
sub
push
jle
(bad)
xchg
jo
rol
inc
fimul
inc
pop
or
cmp
cwde
sub
in
mov
pop
cwde
ins
mov
push
sub
icebp
xchg
mov
into
sub
(bad)
out
add
sbb
mov
push
call
mov
jne
retf
cmp
leave
test
ds
ror
das
or
scas
dec
cmp
cmp
(bad)
xchg
pop
xchg
add
dec
das
pop
lahf
je
mov
aas
enter
cmp
ror
inc
jo
xchg
lea
push
sub
pushf
adc
gs
ret
add
sbb
outs
movs
mov
test
movs
rcl
test
mov
sti
iret
add
ins
pop
mov
pop
cli
pop
cmp
jb
ins
cmps
punpcklbw
adc
mov
push
cmps
je
mov
retf
lods
push
in
jno
rcr
movs
push
outs
inc
cmovo
mov
adc
jle
add
movs
cmp
int
imul
and
pop
loop
adc
xchg
xchg
add
xor
lahf
fstp
and
cmp
sub
pop
dec
adc
mov
push
imul
cmps
jnp
mov
push
hlt
mov
hlt
adc
mov
ror
xor
add
lods
adc
mov
mov
stos
retf
pushf
add
(bad)
in
mov
dec
xchg
sbb
push
dec
push
addr16
cmps
inc
inc
rcr
mov
shr
in
fnsave
dec
cmps
hlt
scas
imul
cmovp
into
mov
fwait
mov
test
ss
inc
shl
pop
pop
repnz
mov
cmp
int3
and
sahf
repnz
(bad)
pop
push
(bad)
sbb
mov
jo
add
cld
mov
jb
mov
mov
bound
hlt
jb
sub
mov
sub
enter
stc
cmp
dec
push
pop
js
jecxz
xor
adc
test
or
push
and
xchg
xchg
mov
sub
out
jns
sub
push
adc
(bad)
push
(bad)
(bad)
repnz
jne
jnp
inc
jne
loopne
out
jecxz
retf
sbb
inc
jnp
mov
dec
pop
sub
sbb
cmps
push
repz
and
jnp
lock
imul
test
xlat
vsubps
sbb
scas
or
cmc
and
push
stos
jne
pop
xchg
jmp
sbb
(bad)
mov
sub
rcr
sub
jbe
cmp
(bad)
clc
in
call
pop
test
sub
pop
add
or
stos
je
sub
xchg
pop
inc
and
call
mov
push
(bad)
ds
fsub
(bad)
ffreep
add
xor
std
fadd
push
data16
inc
mov
fldenv
mov
mov
ret
dec
or
cmps
les
sbb
or
into
stos
pop
ins
leave
xlat
sub
dec
aaa
dec
mov
ret
push
and
fcomp
jmp
(bad)
imul
(bad)
not
mov
xor
pop
sti
neg
mov
xchg
or
fist
test
xor
fimul
add
not
aaa
ja
in
xchg
xor
out
xlat
stos
int
pop
scas
and
icebp
adc
sti
test
aaa
nop
xlat
out
loopne
rcr
xchg
sbb
outs
into
adc
inc
imul
retf
out
popa
and
jae
div
and
pop
loope
inc
fs
fsubr
stos
test
inc
push
out
push
call
icebp
je
jmp
mov
push
in
fwait
dec
stos
mov
inc
add
inc
add
movs
call
js
mov
cmp
std
or
bound
sbb
cmc
pop
sbb
pop
fs
push
in
je
add
push
inc
or
pop
ds
iret
sub
push
sbb
ja
jno
call
cmc
xor
dec
fdivr
shl
inc
xor
repz
loop
test
icebp
fcmovu
out
mov
sti
xchg
xor
mov
mov
outs
daa
ins
jo
imul
loop
out
jp
shr
sub
aaa
or
js
pop
dec
jg
rol
sar
and
and
push
fdivp
mov
nop
aaa
mov
push
mov
gs
pop
cmc
mov
fcomp
pop
stc
retf
aad
in
pop
std
sub
jle
hlt
rol
jo
ss
out
sbb
inc
inc
loopne
enter
lea
and
inc
das
fdiv
ins
pop
sub
mov
mov
jo
in
jecxz
jge
sahf
push
fldcw
outs
inc
imul
test
and
outs
or
adc
movs
es
cmps
(bad)
pop
int3
and
and
stos
and
adc
fimul
push
loop
mov
(bad)
fistp
imul
loope
cmc
cmp
add
ins
std
iret
sti
imul
rcl
jecxz
shl
in
xchg
out
push
ret
xor
sbb
test
xor
imul
dec
cmp
ficomp
cmp
pop
ds
dec
add
push
and
outs
ds
xchg
inc
add
imul
push
sub
pop
xchg
aas
push
jnp
neg
and
fld
add
rcr
stos
jbe
mov
cmp
mov
inc
push
or
sbb
sbb
stc
xor
jo
xchg
mov
add
cmc
add
adc
lods
or
push
mov
push
scas
int3
and
loopne
adc
sbb
jp
jmp
aam
lods
std
dec
outs
jns
mov
push
shl
sub
sub
and
mov
loop
lea
inc
inc
in
xchg
bnd
movs
cmp
jo
cwde
pop
dec
adc
adc
aas
mov
add
push
ins
jo
movs
pop
add
xor
ss
shr
and
cmp
(bad)
aaa
cmp
adc
mov
sbb
jno
int
inc
stc
jae
fimul
stos
ds
fnsave
fdiv
imul
mov
movs
data16
pop
rcr
adc
call
dec
stos
inc
xchg
adc
push
shl
ss
div
inc
mov
test
or
jg
inc
mov
cmp
loop
mov
mov
fdivp
int3
jns
mov
inc
jno
cli
xchg
xor
dec
dec
aad
div
mov
dec
mov
xchg
jge
test
repz
fs
stos
push
cs
push
xor
nop
(bad)
sub
xor
jb
add
cmp
pop
and
test
mov
pop
mov
movs
xchg
mov
mov
pop
jg
rcl
imul
fisubr
mov
push
pop
inc
adc
sub
mov
outs
sahf
ret
(bad)
push
inc
popa
adc
in
jnp
pop
jecxz
xchg
retf
je
aam
or
pop
and
jo
or
dec
ja
scas
test
xchg
icebp
add
xor
and
inc
jecxz
cmp
xchg
inc
loop
stc
pop
dec
sub
je
loope
dec
mov
adc
push
inc
bound
rcl
mov
and
push
cmp
pushf
sub
gs
movs
mov
jo
xchg
mov
test
sahf
mov
bnd
lods
es
gs
adc
xor
lods
adc
ror
add
push
or
ss
jl
or
pop
fisub
pushf
adc
pop
std
xor
test
jae
movs
int
ja
pop
fldenv
jnp
mov
loop
dec
ss
or
div
(bad)
jno
(bad)
sbb
test
mov
jl
fwait
xlat
xchg
mov
loope
jle
mov
int3
add
push
jp
jmp
fdivr
out
test
adc
fdivr
fisub
mov
and
loopne
stos
test
inc
repz
jg
and
sub
repz
push
cs
xor
mov
and
pop
in
rcr
scas
fmul
cli
push
add
sbb
adc
adc
adc
push
mov
cmp
scas
sub
xor
push
stos
mov
cs
push
and
pop
shr
cld
push
outs
jp
outs
rcl
inc
inc
loop
jecxz
mov
out
pop
test
cmc
sbb
jle
cmps
jb
xor
pop
test
in
sub
retf
jp
hlt
jo
sbb
cli
and
jo
shr
adc
ins
pop
or
lock
inc
xor
cmp
xor
mov
clc
cmp
pop
add
hlt
fdivr
outs
fdivr
sub
push
in
or
mov
xchg
jae
sub
inc
push
loope
cwde
adc
sbb
xchg
jno
jbe
push
push
ja
retf
sub
jo
sbb
lahf
or
sahf
add
and
movlps
js
imul
(bad)
mov
or
jbe
jbe
xchg
mov
fadd
dec
push
neg
xchg
mov
daa
or
bound
repz
push
pop
or
jmp
cli
cdq
xor
fisttp
or
(bad)
std
dec
push
cmp
pop
fld
sub
jbe
jb
shl
mov
cmps
pop
loope
cwde
sti
rol
dec
mov
push
dec
and
in
mov
push
cmp
push
sahf
aas
cwde
in
cmps
cmp
or
hlt
ins
sub
xchg
ja
push
ret
outs
rcl
push
dec
add
push
out
ror
xchg
outs
std
out
neg
ss
dec
shl
adc
dec
les
jmp
sbb
add
test
pop
gs
test
pushf
push
arpl
iret
movs
sbb
mov
cwde
and
sub
mov
sahf
(bad)
sub
and
stos
and
pop
int3
ret
(bad)
jl
xchg
lods
mov
inc
ret
dec
or
pop
out
push
jbe
xor
jmp
mov
adc
jo
jl
pushf
out
mov
add
adc
mov
(bad)
callw
imul
jno
and
sbb
dec
mov
sbb
sbb
call
std
xor
addr16
mov
mov
add
das
sbb
scas
lods
xor
pop
test
fistp
jmp
(bad)
dec
sbb
jae
retf
fistp
ja
fs
into
adc
outs
mov
leave
dec
fcom
mov
jb
pop
(bad)
sbb
xor
inc
adc
push
retf
dec
ins
push
stos
stc
xchg
sub
dec
leave
out
add
pop
arpl
cmps
outs
sub
ret
pushf
push
ds
xchg
icebp
mov
aam
test
or
mov
int
pop
lods
ins
pop
stos
xchg
mov
inc
xchg
sbb
mov
sub
mov
sbb
mov
das
movs
mov
iret
mov
xchg
sub
xchg
mov
(bad)
in
xlat
repnz
inc
pop
xchg
outs
loopne
xchg
sub
cmp
xchg
push
pop
in
and
daa
xchg
iret
adc
and
std
sbb
cmp
jp
imul
(bad)
stos
lea
fld
repz
imul
lods
sub
fld
movs
lods
fcmovnb
ja
and
aam
adc
mov
stos
or
aad
sti
data16
cmp
mov
push
sti
jp
rcl
and
pop
sbb
dec
xor
clc
adc
jle
mov
fwait
push
aad
xor
pop
out
andnps
cmc
sub
sbb
ret
jnp
dec
adc
and
clc
pop
or
cdq
test
popf
jns
inc
scas
xor
push
repnz
das
jns
repz
fadd
mov
xchg
retf
pop
sbb
or
dec
movs
dec
dec
je
data16
data16
in
xchg
int
adc
rep
fwait
imul
aaa
or
gs
retf
outs
xor
popf
cmp
repz
jecxz
(bad)
es
xchg
pop
pop
retf
out
cdq
add
enter
cmp
mov
inc
adc
(bad)
xchg
repnz
cdq
outs
adc
fild
push
loopne
pop
pop
test
popf
(bad)
fcomp
pop
stos
add
int
mov
les
mov
cld
(bad)
mov
pop
add
cs
push
hlt
and
es
mov
mov
jbe
mov
retf
outs
mov
jle
jbe
mov
in
jmp
ins
imul
mov
or
in
bsr
mov
xlat
arpl
adc
aaa
or
sub
dec
or
sahf
sub
imul
sbb
cmc
sbb
cmp
xor
sbb
cwde
dec
adc
arpl
adc
fild
pop
std
(bad)
aaa
sub
and
inc
mov
(bad)
add
fimul
test
cs
std
adc
pop
xchg
ds
loop
add
hlt
ss
enter
fiadd
cli
in
lods
fist
pop
inc
mov
pop
bound
shl
rcr
push
fst
jnp
in
arpl
xlat
cld
test
push
leave
xchg
das
jle
mov
mov
fst
jns
pop
out
lods
inc
mov
cmps
in
dec
and
arpl
test
bswap
loope
mov
and
cdq
es
jbe
stos
jmp
cld
dec
pop
iret
fs
imul
je
mov
push
pop
adc
ins
mov
lock
inc
fnop
call
int
push
arpl
(bad)
mov
lods
nop
push
(bad)
add
les
cwde
push
pop
ror
neg
inc
mov
les
dec
ror
icebp
pop
data16
mov
dec
in
mov
jge
sbb
into
in
push
add
mov
mov
mov
das
or
pop
imul
pop
fadd
and
aam
movzx
loopne
cdq
or
(bad)
pop
std
sahf
cdq
pop
xchg
mov
sbb
pop
jp
pop
sbb
mov
shr
push
jno
push
(bad)
pusha
in
jp
(bad)
pop
movs
mov
sub
jle
or
rcl
(bad)
lods
jbe
loopne
pop
mov
jp
pop
mov
js
mul
add
cmps
dec
pusha
mov
pop
movs
xor
add
push
cli
dec
ins
cmp
mov
or
es
shl
repz
and
cmps
mov
jno
cmp
icebp
jnp
outs
mov
cmp
mov
pop
mov
xor
lods
fs
(bad)
lods
cld
dec
or
push
ror
xchg
jmp
push
pop
inc
jnp
pop
lds
lock
pop
adc
in
ja
pop
sbb
pop
(bad)
rcl
outs
add
stos
inc
(bad)
std
and
xor
jo
in
int3
xchg
cdq
pop
mov
fpatan
add
sahf
add
add
js
std
mov
mov
mov
dec
mov
inc
or
icebp
(bad)
stos
pusha
jnp
xlat
push
cmp
inc
outs
adc
cli
cmp
adc
ss
jno
sub
inc
es
pop
inc
xor
aas
jp
jecxz
sbb
sbb
xchg
or
jb
cld
pop
push
in
cmp
(bad)
int
icebp
outs
out
repnz
and
and
repnz
jne
mov
pop
fisub
jg
xor
dec
jmp
int
shl
mov
mov
mov
call
pop
test
out
(bad)
adc
mov
inc
cmp
inc
push
das
ss
mov
fnclex
daa
jnp
pop
xchg
dec
fsubr
pushf
fist
cmp
xor
or
popf
pop
sbb
das
dec
dec
ret
int
cmp
sbb
mov
mov
mov
cmp
retf
loopne
xlat
popa
push
aam
jbe
xchg
icebp
mov
xchg
push
lods
xor
add
mov
aas
pop
stc
test
arpl
jb
mov
mov
es
shr
pop
mov
jg
and
stos
jmp
jg
xor
mov
jmp
call
adc
arpl
adc
xchg
pop
popf
cwde
add
sbb
xchg
jno
sub
cmp
mov
(bad)
pop
js
push
xor
mov
cs
push
pushf
and
iret
mov
stos
add
push
pop
arpl
ins
push
or
add
cmp
(bad)
(bad)
cmps
movs
and
repnz
into
fistp
sahf
in
pushf
jl
(bad)
cs
and
push
xchg
fistp
outs
clc
hlt
(bad)
xlat
daa
jbe
or
xlat
lahf
xor
(bad)
leave
mov
fld
scas
lock
in
adc
jns
ret
test
out
and
mov
inc
das
push
es
mov
push
mov
aaa
xchg
add
dec
(bad)
or
je
sbb
inc
inc
sbb
adc
mov
jge
push
(bad)
pusha
add
xchg
or
lods
cmp
cmp
push
movs
sub
sub
js
push
xor
test
fst
cdq
dec
pop
jge
(bad)
mov
clc
lea
fdiv
mov
mov
xchg
ror
xor
mov
(bad)
test
xor
loop
bt
(bad)
lds
mov
push
in
fimul
iret
cmp
iret
jmp
into
dec
nop
mov
or
lods
xchg
pop
fs
pop
lock
stos
sbb
cmp
jae
retf
inc
xchg
jmp
xor
mov
jle
dec
jo
mov
mov
dec
inc
in
and
xor
les
in
mov
and
or
jmp
cmps
pop
xor
inc
and
js
cmp
jo
nop
aam
shl
mov
mov
mov
shl
xchg
pop
sti
sar
pop
repz
cmp
dec
test
push
or
test
inc
leave
sti
mov
ss
mov
pop
inc
push
sbb
cs
out
xor
or
mov
mov
out
adc
adc
cmp
jecxz
psubb
inc
sbb
loope
push
sahf
add
cmp
rcr
or
daa
movs
or
mov
out
dec
sub
lods
or
(bad)
fst
mov
iret
in
dec
into
imul
pop
pop
leave
cmp
(bad)
aas
data16
jl
fldcw
push
popa
ret
mov
adc
cmp
pop
aam
mov
test
pusha
add
push
loop
add
fcom
pusha
(bad)
pop
sub
pop
jbe
mov
(bad)
shr
pushf
das
mov
sub
ret
in
dec
dec
fs
push
xchg
xchg
xchg
das
adc
nop
(bad)
xchg
ret
push
movs
mov
xchg
pop
addr16
adc
jle
mov
pop
pop
mov
inc
jl
mov
mov
jecxz
inc
adc
bnd
xor
stos
dec
or
pop
dec
lods
jecxz
jo
aam
pop
jb
sbb
scas
gs
cld
jns
mov
jne
jo
mov
bound
fwait
pop
outs
pushf
cs
push
push
pop
es
pop
out
pop
popf
shr
js
call
in
out
mov
xlat
mov
and
mov
enter
sbb
js
(bad)
cwde
mov
(bad)
lahf
mov
pop
jge
ret
add
mov
xchg
dec
and
int3
dec
xchg
jnp
mov
addr16
(bad)
repz
movs
and
jbe
dec
mov
fs
movs
test
(bad)
mov
mov
mov
sbb
or
call
pop
add
je
(bad)
loope
aaa
jmp
aad
call
retf
aaa
pop
popf
in
into
popa
inc
xchg
call
jecxz
dec
cmp
mov
or
cmp
mov
xchg
push
sub
jae
dec
pop
mov
(bad)
pop
inc
mov
adc
in
out
lahf
lds
add
cld
(bad)
rcr
pop
mov
adc
imul
nop
out
push
inc
sub
js
mov
inc
pop
(bad)
call
aad
pushf
push
push
jp
fcmovnb
lahf
jnp
push
popf
aam
test
inc
mov
or
mov
sti
out
lods
adc
in
dec
jae
cli
scas
lock
and
lea
cmp
std
mov
aaa
jmp
bound
or
mov
and
pop
div
adc
shr
arpl
jecxz
(bad)
fisubr
xchg
sbb
dec
je
jne
jmp
dec
xchg
in
or
out
and
xchg
ins
adc
(bad)
out
sbb
cmp
retf
cmc
int
outs
dec
cmp
repz
imul
and
daa
mov
and
xor
imul
dec
add
and
stos
pop
jo
aad
sbb
mov
shr
xor
push
jle
xchg
and
dec
and
lods
push
mov
ss
xchg
pusha
cmp
add
mov
cmps
mov
dec
cmp
lahf
mov
jbe
cmps
cmc
sbb
data16
xlat
cwde
or
xchg
xchg
and
pop
jo
(bad)
mov
jo
mov
test
xchg
shl
sub
stos
test
into
mov
xchg
lahf
xor
pop
test
scas
js
fdivr
dec
out
jecxz
push
inc
mov
test
imul
sub
cmp
adc
jbe
repz
fcomp
lahf
jmp
dec
inc
outs
adc
push
fxch
cmc
enter
mul
mov
and
or
or
mov
add
ret
les
pop
(bad)
pop
fld
(bad)
into
and
pop
cwde
push
mov
bts
inc
cmp
inc
jl
stos
push
pop
rcr
test
or
es
mov
xor
nop
push
fdiv
mov
(bad)
fwait
and
and
mov
cmp
sar
movs
add
pop
push
mov
add
stos
pop
sbb
xor
push
sub
sub
dec
mov
(bad)
push
jmp
add
mov
push
shr
js
imul
iret
push
scas
ret
pop
jno
xor
ss
pop
sub
cli
cmps
push
mov
xor
jmp
xchg
fwait
dec
imul
mov
div
enter
out
aaa
mov
aas
push
cdq
iret
inc
mov
and
adc
jno
std
dec
push
add
shr
mov
bound
inc
outs
push
jno
or
fist
mov
xchg
in
lahf
mov
clc
xchg
add
arpl
call
push
or
fadd
repz
movs
adc
call
scas
popa
push
aas
aad
pusha
push
icebp
loope
ds
push
sbb
sub
mov
push
sbb
lock
pop
(bad)
dec
mov
and
add
inc
retf
fldenv
xor
int
mov
jne
sbb
retf
push
inc
ror
adc
in
inc
pop
and
rol
sub
fbld
scas
ret
(bad)
jmp
fnstsw
add
jns
pop
pop
push
idiv
jnp
xor
add
cmp
xlat
scas
push
(bad)
mov
call
loopne
xchg
cdq
mov
pop
ins
inc
(bad)
pop
retf
or
lea
and
jns
push
push
movs
and
pushf
jns
pop
loope
(bad)
push
jnp
adc
sbb
add
jg
in
or
pop
lods
sbb
outs
sbb
(bad)
(bad)
xor
loop
pusha
jmp
push
ret
icebp
scas
mov
mov
into
mov
mov
icebp
ss
imul
xchg
add
xor
push
scas
fsub
aad
inc
repz
out
scas
mov
ss
dec
pop
loope
hlt
pop
addr16
icebp
(bad)
add
hlt
rcl
jge
pop
pop
xchg
pop
das
(bad)
out
adc
xor
ss
popa
pop
and
push
xchg
dec
lock
repz
adc
mov
jmp
sub
push
pop
(bad)
push
jge
mov
cs
dec
xchg
mov
mov
sar
push
adc
lods
lea
popf
ss
scas
aad
int3
jno
mov
sbb
or
je
popa
jl
jmp
dec
and
shr
sub
dec
xor
xchg
xor
lea
push
test
push
std
fs
sahf
pop
dec
inc
push
sbb
xor
xor
add
in
dec
(bad)
(bad)
jbe
and
cmp
ja
and
imul
sbb
xor
out
jmp
into
fmul
(bad)
mov
mov
xchg
pushf
pop
jae
ret
push
mov
sbb
sub
mov
sti
sbb
or
ret
push
jo
pop
test
fadd
push
arpl
or
mov
mov
dec
cli
ficom
cmc
or
push
or
call
push
fwait
mul
jge
iret
scas
pop
ret
mov
movs
jno
lock
pusha
cs
ins
adc
sub
cmp
pop
sub
dec
push
in
fldenv
mov
mov
jnp
xor
xlat
jmp
and
fwait
outs
pop
mov
xrelease
jp
jmp
mov
rol
cmp
pop
(bad)
(bad)
out
sbb
neg
repnz
mov
retf
je
push
je
fistp
iret
fdivr
cli
mov
dec
scas
icebp
leave
inc
stc
out
jg
das
xchg
add
hlt
out
jno
push
or
or
jno
add
ins
in
out
lds
scas
clc
jmp
mov
inc
scas
rcl
xchg
pop
fnclex
sbb
movs
loop
mov
icebp
cs
mov
fs
and
xchg
repz
mov
enter
xor
mov
pop
cdq
adc
cmp
and
lahf
loopne
lods
(bad)
jbe
sbb
mov
out
and
xchg
std
mov
mov
mov
sub
push
mov
inc
mov
(bad)
push
push
std
push
iret
imul
sar
mov
push
or
xchg
mov
enter
mov
cmps
inc
xor
mov
inc
or
pop
push
aam
daa
inc
js
hlt
arpl
je
jns
mov
adc
leave
sbb
xchg
loope
and
ret
xchg
cmp
in
add
sbb
ficom
cli
fs
cmp
jp
sar
movs
jbe
movs
(bad)
call
mov
xchg
xchg
sbb
outs
in
arpl
aad
in
pop
dec
xadd
clc
cld
dec
retf
jl
mov
(bad)
fmul
jg
retf
add
sub
xchg
arpl
jmp
mov
push
out
dec
lahf
add
push
cmp
ss
out
xlat
inc
iret
fistp
aam
or
jno
lds
and
add
mov
add
mov
das
mov
xchg
xchg
inc
xchg
jmp
mov
add
dec
(bad)
(bad)
std
stos
push
hlt
mov
cmps
neg
(bad)
mov
repz
retf
push
add
int
xchg
sub
jmp
cmp
dec
add
cmc
iret
call
fldcw
test
ins
sub
sub
mov
dec
push
fild
sub
jnp
mov
or
add
mov
sub
cmps
jmp
push
jb
loop
mov
adc
daa
cmp
cdq
imul
add
(bad)
mov
and
rcr
loop
clc
inc
cmp
sub
arpl
jmp
pop
lahf
sar
gs
or
scas
push
or
dec
out
ja
cwde
inc
enter
mov
mov
mov
cmp
mov
and
arpl
mov
into
rcr
inc
mov
call
mov
ror
test
out
mov
(bad)
mov
pop
retf
arpl
repz
inc
add
ret
and
ret
add
cli
jno
mov
movs
adc
sti
iret
dec
mov
push
sub
lock
pop
and
dec
(bad)
hlt
scas
loopne
inc
pop
fistp
dec
pop
fs
pop
es
jecxz
enter
shl
mov
popf
pop
loopne
jecxz
clc
out
mov
dec
add
jmp
pop
dec
or
jno
mov
adc
pop
add
mov
mul
dec
clc
and
leave
dec
pop
ficom
sbb
loopne
jp
inc
cmp
out
shl
and
inc
xchg
xor
rcl
sub
cwde
js
jmp
fstp
push
(bad)
push
sub
xchg
jb
or
cmp
addps
jo
loop
add
jo
adc
xchg
stos
shl
out
dec
jae
in
sbb
mov
inc
ins
sar
ret
loopne
cs
and
mov
xchg
je
rcr
push
cmp
xor
and
jmp
sar
jbe
sub
cdq
pop
stos
add
imul
shl
xchg
or
inc
ficom
inc
out
push
jl
push
mov
outs
inc
xchg
dec
fcomp
ret
call
test
std
jae
outs
add
xor
fldcw
scas
popa
sahf
and
mov
jmp
mov
jnp
test
xchg
leave
mov
fs
mov
add
mov
push
jo
pop
or
mov
pop
and
jmp
mov
push
shl
(bad)
ja
ss
retf
pusha
fwait
ror
lahf
sti
jns
adc
xor
cwde
lahf
mov
out
push
inc
fmul
xchg
pushf
cmp
or
clc
fmul
jns
xchg
adc
add
sbb
sbb
mov
outs
scas
xchg
fld
out
movs
out
xchg
enter
xlat
xchg
shl
or
leave
xor
es
lock
pusha
jno
cmp
outs
leave
mov
out
jle
mov
mov
push
add
dec
mov
mov
mov
push
ror
adc
dec
ret
nop
repz
jle
pop
out
mov
pop
mov
imul
ret
shl
call
dec
mov
cmp
pop
ss
adc
test
fcomp
mov
sbb
and
cmp
mov
fsub
popa
xchg
aad
mov
xchg
mov
pop
or
mov
dec
inc
imul
push
jl
mov
ret
adc
or
and
aaa
call
inc
inc
push
sub
es
mov
jle
mov
ss
add
xor
aaa
cmp
mov
push
cmp
jmp
mov
popa
fcomp
scas
mov
mov
jmp
add
or
mov
fild
stos
mov
jg
inc
lock
shl
jl
sbb
mov
mov
push
je
push
or
sbb
cdq
pop
aad
lahf
stos
bound
leave
sar
mov
pop
int3
pop
xchg
rcl
(bad)
cmps
xchg
bound
pop
ja
dec
test
mov
nop
dec
inc
jp
adc
rol
pop
sbb
add
retf
xchg
pushf
sub
cmps
enter
test
adc
int
dec
fist
mov
inc
scas
js
outs
jne
(bad)
push
xor
pusha
sbb
dec
outs
loop
fsub
jp
inc
pop
iret
pop
push
in
cmps
into
sub
mov
or
sub
leave
int3
adc
dec
sahf
adc
pop
inc
mov
fldcw
ss
adc
addr16
sbb
popf
stc
nop
sub
(bad)
inc
pop
sub
mov
inc
jecxz
sbb
stc
and
adc
push
retf
xor
jmp
in
xchg
lods
sub
push
aas
push
jg
push
sub
sti
iret
popa
cmps
(bad)
jge
out
inc
sbb
mov
pop
and
or
push
push
and
fsub
mul
pop
(bad)
daa
mov
xor
movs
in
mov
mov
or
add
inc
or
cs
es
cmp
mov
retf
in
std
ins
ror
mov
adc
sti
xchg
or
push
cmp
cmp
jbe
mov
out
movs
push
sbb
sbb
sahf
std
xor
adc
test
push
cmp
outs
icebp
jl
inc
stos
pop
iret
fisttp
data16
inc
dec
xchg
mov
sub
fld
out
cmp
sbb
out
pop
fdivp
xor
xor
in
enter
or
jno
adc
mov
stc
mov
pusha
mov
mov
bound
jge
scas
sbb
fistp
test
mov
enter
lock
dec
jb
jge
in
test
repz
cwde
dec
mov
data16
xchg
shl
sub
enter
idiv
add
or
out
enter
sub
out
call
and
jmp
test
pusha
in
retf
jmp
xchg
jmp
stc
test
das
into
clc
or
std
mov
sbb
rcl
mov
pop
imul
pushf
sub
push
enter
fnstsw
dec
mov
call
and
or
adc
retf
adc
inc
mov
push
das
dec
add
mov
mov
out
cli
mov
dec
std
outs
cdq
es
fst
add
and
loop
xor
pop
cld
dec
cmp
cmp
sub
jle
repnz
cmps
inc
pop
mov
ja
xor
in
mov
inc
rol
repz
aam
fdivr
xchg
add
xor
ins
out
jle
iret
sub
fwait
sub
nop
mov
dec
mov
mov
aam
mov
cmp
xor
dec
adc
jne
aas
lahf
inc
mov
sub
or
adc
lds
stos
stc
cmps
repnz
inc
push
aam
leave
sbb
pop
and
sub
cmp
fistp
sbb
mov
pop
jbe
icebp
pop
pushf
jae
ins
mov
int3
stos
cld
xchg
mov
clc
pop
iret
cmp
adc
mov
sub
xchg
retf
mov
sub
les
xchg
mov
xchg
sub
mov
fild
and
or
push
mov
sbb
inc
xor
push
and
ret
fwait
cmp
cwde
push
fimul
add
mov
nop
lods
xchg
xor
mov
jecxz
retf
cmp
mov
jp
imul
clc
rol
or
out
inc
inc
out
xchg
sub
test
dec
fs
sub
cmp
mov
das
loopne
fdivr
mov
imul
mov
cld
sahf
rcl
es
out
neg
jmp
lds
add
stc
fcomp
in
shl
or
jmp
js
std
jmp
mov
movs
nop
mov
or
sar
aaa
jmp
aaa
(bad)
popa
xor
or
and
bound
or
gs
push
push
or
and
pop
aas
(bad)
dec
cmp
mov
ret
ds
in
loop
popf
stos
mov
mov
mov
mov
loop
xor
pop
dec
sub
(bad)
es
les
lods
push
adc
add
adc
mov
push
ins
(bad)
idiv
mov
dec
adc
aaa
sbb
aad
jbe
cmp
xchg
xchg
push
popa
(bad)
repz
push
test
jmp
outs
sti
mov
cmp
adc
xchg
adc
dec
adc
sub
arpl
xchg
xchg
xlat
sub
pop
adc
retf
jne
xchg
xchg
outs
shr
iret
mov
lock
pop
lods
mov
aas
ins
(bad)
pop
inc
jle
sbb
inc
loope
pushf
sbb
push
inc
pop
aam
dec
movs
pusha
scas
or
les
pushf
in
shr
fdiv
shr
test
jecxz
add
sbb
movs
push
inc
fdiv
add
shl
test
je
out
popf
inc
lods
fst
call
test
test
ret
scas
sti
push
push
add
xor
lock
jbe
xchg
jo
(bad)
les
inc
push
mov
jbe
lock
pop
into
pop
mov
aas
ret
fidiv
and
sub
dec
in
and
mov
in
ror
and
frstor
pushf
hlt
mov
(bad)
jnp
mov
sti
adc
mov
(bad)
aas
rcl
xor
adc
imul
push
sar
inc
xlat
test
pop
cs
adc
test
mov
push
adc
jmp
sti
pusha
movs
fisubr
loope
ja
sub
sub
les
or
and
and
mov
push
xchg
fild
dec
inc
xor
das
loope
ins
pop
jno
xor
(bad)
push
jge
fwait
aam
loop
mov
aas
jp
loopne
and
adc
inc
int
stos
pusha
xchg
and
adc
adc
adc
sar
mov
mov
aas
pop
inc
imul
retf
jp
pop
xor
cmp
adc
pop
and
or
es
std
icebp
mov
xor
mov
push
(bad)
dec
or
jbe
fcomp
ja
outs
test
pushf
add
fidiv
retf
int
mov
iret
xor
adc
(bad)
ret
mov
movs
ins
(bad)
cmp
inc
cld
add
jb
mov
mov
ror
fcom
es
call
mov
add
mov
push
xchg
cmp
out
jmp
loope
cmp
popa
xchg
add
jmp
das
cmp
push
sbb
stos
mov
cwde
adc
stos
lds
xchg
mov
inc
les
movs
fnsave
mov
mov
and
add
jmp
mov
ds
clc
adc
xchg
daa
daa
push
repnz
lods
js
pop
xor
xchg
imul
test
in
daa
sbb
xchg
add
add
jbe
cmp
(bad)
iret
lods
adc
push
push
leave
movs
add
cmc
ret
loopne
jb
sub
loope
jmp
enter
push
scas
xchg
std
xchg
jbe
lea
retf
div
mov
push
cld
outs
jle
inc
retf
push
aad
xchg
jbe
adc
adc
out
mov
outs
inc
stos
xor
out
into
stos
pop
or
mov
sar
xchg
in
(bad)
rcl
mov
mov
push
js
neg
sbb
jb
fmul
js
hlt
test
dec
call
stos
scas
push
mov
pop
ret
aam
ret
xor
mov
scas
call
inc
mov
in
xor
mov
rol
adc
cdq
inc
ret
pop
ret
xchg
loopne
sub
sub
scas
inc
movs
mov
jmp
jmp
adc
dec
pop
mov
add
xchg
scas
or
sub
inc
mov
dec
pop
inc
fcom
int3
push
pop
das
xchg
sbb
call
or
shr
call
popa
mov
frstor
cdq
(bad)
adc
fwait
cmp
cmp
and
not
std
push
sub
jp
out
fxam
xchg
repnz
cmp
xchg
mov
aad
loopne
and
fs
in
out
data16
sub
repz
xchg
adc
leave
inc
mov
jno
sbb
sub
(bad)
movs
or
xchg
popaw
pop
jecxz
xchg
mov
xchg
sub
lods
xor
aad
outs
and
or
adc
ffreep
adc
or
stos
sub
sub
push
xchg
(bad)
xor
fwait
cmp
enter
and
sbb
jecxz
add
mov
ret
sub
jae
push
cmps
aas
call
mov
pop
in
cdq
test
mov
(bad)
pop
ret
sbb
fistp
inc
bound
retf
aad
jmp
stos
sub
sub
sub
sbb
pop
xchg
jl
lahf
mov
fiadd
sbb
mov
daa
inc
mov
mov
enter
aas
pusha
pop
call
xor
xchg
ret
push
jo
out
popf
mov
pop
push
pop
dec
mov
xor
lock
push
dec
in
or
loop
add
iret
pop
xor
add
sbb
lahf
or
pop
fisttp
cmc
adc
or
sti
lahf
push
popf
test
xor
clc
xlat
xor
push
fwait
mov
nop
into
dec
xchg
jno
sub
in
sbb
stc
add
pop
jmp
adc
(bad)
and
enter
fild
jmp
test
dec
iret
push
popf
or
mov
repz
adc
fmul
aam
xchg
sub
xchg
xor
xlat
lock
cwde
mov
lahf
shr
call
push
or
ds
cmp
test
sub
mov
bound
jae
sbb
push
dec
sbb
fiadd
pusha
sbb
jmp
test
bound
enter
cdq
mov
jmp
(bad)
inc
call
xchg
ret
cwde
sub
xchg
push
add
fnsave
add
pop
test
iret
test
pusha
cmc
mov
movs
aas
pop
inc
add
in
jb
aaa
add
fnsave
inc
mov
jmp
xchg
jmp
lods
fidiv
sub
iret
xor
add
fstp
fs
aad
jl
mov
not
mov
jmp
and
sbb
mov
add
mov
dec
pop
dec
aas
ficomp
int3
push
loope
nop
int
jns
repz
add
fild
jg
into
bnd
in
xor
adc
add
out
sbb
dec
jae
cmc
cmps
clc
ror
clc
mov
and
sti
cli
in
in
fcom
mov
mov
xchg
jnp
lea
xlat
ss
push
mov
retf
mov
inc
mov
in
sti
addr16
mov
cmp
rol
and
sbb
call
sub
or
fldenv
pop
mov
nop
sbb
test
mov
shl
xor
ins
push
ret
sahf
dec
in
ja
or
dec
popa
arpl
test
and
sbb
mov
lea
adc
inc
in
jne
fdivr
inc
or
sub
adc
jns
call
dec
adc
fs
dec
scas
rcr
sub
ret
mov
lds
xchg
mov
sbb
xor
cs
jne
mov
mov
mov
add
mov
xchg
adc
xor
mov
and
int
imul
fstp
pop
movs
jp
lods
cmps
cmp
out
pop
outs
repz
mov
out
mov
setle
mov
add
cmps
mov
(bad)
(bad)
pop
mov
setge
clc
and
push
js
adc
xor
jle
inc
in
stc
ret
dec
cdq
push
das
push
scas
setl
lock
ret
mov
fsub
add
ins
inc
(bad)
push
adc
lock
pop
xor
sar
dec
nop
mov
xchg
imul
pop
ins
push
and
and
jbe
sbb
mov
xor
data16
lock
sub
sub
inc
sub
test
lods
out
mov
push
xchg
mov
adc
adc
jns
xchg
popf
inc
push
mov
dec
fcmovb
xchg
pop
stos
cmp
and
std
pop
ins
xlat
neg
push
xor
xor
push
ins
mov
popf
pop
push
jecxz
inc
pop
std
mov
outs
fsub
push
aam
pop
popf
adc
or
loopne
das
aam
jo
lods
jne
adc
inc
out
sub
loope
xor
pop
mov
in
mov
in
or
push
cmp
adc
jno
cmps
loop
mov
stc
aaa
iret
sub
jo
loope
shl
xor
mov
and
jae
xchg
mov
fild
push
ins
shr
mov
jl
scas
retf
clc
sbb
add
aas
cmp
rol
add
mov
fisttp
les
in
repz
aaa
jp
cmps
ret
cmp
xor
jp
dec
push
xchg
(bad)
fldcw
push
jecxz
jecxz
imul
call
loopne
fcmovu
cmp
test
sbb
dec
jne
ins
jbe
fiadd
sbb
std
in
aam
dec
adc
sahf
pop
pop
call
ins
pop
fisttp
shl
sbb
shr
sahf
push
jne
mov
jb
cdq
or
in
push
and
mov
sbb
call
or
sub
fisttp
xchg
mov
push
inc
lods
dec
jne
and
jnp
fadd
mov
push
mov
mov
inc
rcr
mov
mov
sahf
repz
dec
cli
int3
mov
ror
mov
jg
fwait
dec
jns
mov
fisub
(bad)
cmc
fsubr
jo
hlt
xchg
mov
xchg
movs
adc
xor
add
dec
rcr
jne
mov
mov
cmps
in
mov
mov
lock
add
adc
in
lods
sbb
pop
pusha
es
fiadd
retf
fisttp
int3
xchg
std
clc
data16
inc
push
sub
push
or
xchg
dec
jmp
sar
jo
bound
sub
jmp
popf
inc
pop
inc
cmp
push
add
mov
addr16
daa
xlat
inc
mov
call
iret
sub
call
movs
(bad)
adc
fild
sahf
pusha
jmp
call
xor
mov
imul
ds
stos
jae
nop
mov
in
test
mov
sbb
mov
or
aam
pop
fsubr
and
scas
lock
push
push
out
popf
ret
ja
into
enter
pop
scas
ins
mov
outs
icebp
mov
inc
jae
mul
ins
repz
push
sub
xor
addr16
mov
jnp
(bad)
cli
inc
mov
ss
push
jno
cs
mov
mov
mov
aas
xchg
movs
ret
pop
jbe
fwait
movs
ret
aam
aas
daa
dec
cmp
push
movs
retf
fsubr
add
fadd
aad
lds
outs
imul
add
mov
int3
pop
fcmovne
(bad)
cmp
movs
loopne
xor
mov
jl
and
das
dec
mov
mov
js
or
lds
jb
or
fcomp
inc
test
mov
pop
lods
stos
inc
xor
(bad)
mov
test
mov
subps
push
ds
push
(bad)
nop
sub
stc
pmaxub
dec
test
or
pop
mov
mov
sbb
sub
push
xchg
push
or
fild
mov
out
(bad)
mov
sbb
js
sbb
push
retf
ret
xor
sbb
xchg
push
inc
dec
ror
ud1
mov
xor
sbb
xchg
dec
sbb
js
mov
mov
sti
fimul
int
pop
cmp
mov
sub
mov
rol
push
mov
jns
mov
outs
movs
mov
adc
test
push
push
unpcklps
jbe
fst
dec
fsubr
cmp
cwde
mov
les
cmc
and
fimul
mov
cmp
(bad)
push
and
mov
lock
and
ror
div
enterw
adc
pop
clc
xlat
mov
and
hlt
add
sbb
std
lods
les
mov
(bad)
adc
lea
repnz
arpl
inc
add
in
pop
mov
and
sbb
and
sti
rcl
mov
cmp
fsub
add
jb
jb
cli
sahf
xor
cli
(bad)
shl
and
xor
cmp
cmp
or
pop
lock
(bad)
cld
arpl
cmc
inc
jp
cwde
mov
adc
cmp
or
sbb
retf
lahf
test
cmpps
retf
or
les
imul
es
or
mov
je
mov
xor
les
sub
cli
pop
mov
in
pop
mov
ins
push
push
push
ins
outs
xor
je
ret
sub
sub
push
push
mov
push
fnstcw
sub
in
and
js
movs
and
mov
repnz
jecxz
sbb
dec
xor
clc
mov
mov
mov
and
scas
sar
xor
(bad)
cwde
int
into
and
jno
test
shr
mov
push
dec
add
and
inc
movs
xor
and
hlt
xchg
imul
fdiv
dec
mov
lods
ss
rcr
cmp
popf
adc
mov
or
addr16
int3
mov
clc
out
or
gs
lahf
inc
(bad)
sbb
push
outs
out
xchg
out
jecxz
sub
sar
mov
ins
leave
outs
daa
lea
aad
xor
mov
gs
fcmovnbe
sub
std
xchg
nop
cwde
pop
pop
into
pop
mov
loope
mov
das
in
jp
dec
inc
in
mov
xchg
mov
pop
jnp
adc
cmp
xchg
addr16
mov
adc
call
xlat
and
clc
sbb
inc
aam
dec
iret
mov
xchg
adc
mov
dec
mov
cmps
push
scas
cmp
xchg
cmp
cmp
sti
pop
mov
mov
aad
and
mov
retf
out
mov
pop
out
ds
cmc
fs
sar
push
outs
scas
jb
push
popf
stos
fsub
(bad)
dec
mov
ror
ins
ds
jae
jmp
inc
jae
pop
leave
push
call
fwait
mov
stc
adc
sbb
mov
push
aaa
dec
jae
xchg
pop
test
lods
cld
test
scas
push
in
stos
and
push
pop
or
hlt
(bad)
popf
mov
loop
xchg
add
(bad)
jp
or
mov
add
sub
push
call
sar
jmp
push
fcom
(bad)
in
sub
jle
daa
adc
sub
cdq
ds
fcmovb
pushf
or
push
inc
stc
in
adc
les
and
out
pop
ds
cmps
rcr
aaa
mov
mov
ret
fs
inc
inc
stos
cdq
jbe
and
cmp
out
mov
outs
xchg
pop
mov
rcl
icebp
mov
mov
and
sub
(bad)
fild
adc
ins
push
mov
loopne
and
sbb
adc
icebp
fucom
test
jmp
fadd
lods
in
mov
movs
dec
and
mov
cmp
lahf
xchg
ja
push
lods
cmp
push
inc
add
out
iret
cdq
lds
cli
sbb
push
pop
ret
jne
test
xchg
leave
dec
or
mov
adc
int
hlt
je
dec
popa
jno
call
repz
push
aaa
addr16
mov
fstp
sbb
sar
pop
or
es
pop
and
out
pop
icebp
fwait
cmp
pop
ss
push
movs
mov
sub
sub
movs
cmp
lds
mov
cwde
ja
arpl
xchg
fwait
mov
sbb
inc
cmp
push
into
push
mov
lods
enter
dec
(bad)
dec
push
idiv
imul
(bad)
push
inc
jo
pop
lahf
retf
jmp
ficomp
nop
inc
xor
and
push
test
cs
rcr
shl
jno
push
stos
je
sbb
loop
stos
pop
jmp
xor
ins
add
test
iret
ror
sub
xchg
rcl
mov
jmp
xor
cmps
ins
lods
fstp
mov
int3
or
mul
test
push
call
clc
aaa
outs
inc
lahf
pop
mov
sbb
or
xlat
movs
into
jnp
hlt
inc
js
or
retf
adc
pop
(bad)
lahf
xchg
pop
pusha
shl
adc
sti
and
xchg
into
mov
xor
(bad)
mov
nop
ins
sbb
mov
sub
mov
jno
or
push
cmc
ror
or
icebp
inc
out
aam
sub
or
cmp
aam
mov
aam
les
aaa
jge
cmp
pop
cmp
cmp
(bad)
sub
div
icebp
lock
push
rol
mov
nop
dec
fsub
inc
repnz
mov
push
push
mov
call
mov
pop
stc
int3
dec
sbb
xor
adc
sub
aad
push
inc
jl
push
xchg
jae
jae
adc
(bad)
pusha
test
aas
push
sub
loopne
popf
push
pop
je
enter
rcr
add
in
sar
push
adc
shr
stos
pop
(bad)
sbb
mov
or
sub
jnp
std
shr
repz
imul
or
cmc
imul
(bad)
scas
out
ds
fmul
pushf
(bad)
pop
pushf
div
jp
lds
pusha
ret
call
mov
faddp
dec
sub
mov
icebp
imul
test
cmp
ss
add
mov
xchg
scas
ror
mov
in
mov
retf
pop
jge
fidiv
sub
mov
jle
mov
hlt
push
mov
fwait
cmp
stc
repz
jp
add
xor
jbe
push
sbb
and
mov
fidivr
dec
xor
dec
and
fwait
mov
rol
dec
js
int3
cmc
call
dec
icebp
daa
dec
ja
add
adc
adc
in
addr16
jo
ffree
pop
ror
(bad)
dec
mov
cmps
jae
or
fucom
int
push
loope
lock
mov
(bad)
and
and
xchg
jecxz
add
and
in
add
mov
mov
xchg
mov
add
mov
ror
jnp
inc
cmps
or
(bad)
hlt
sbb
mov
cmp
imul
repz
(bad)
jle
imul
ret
mov
push
push
add
and
lahf
dec
clc
aad
addr16
test
sbb
pop
and
xor
xlat
mov
mov
adc
jmp
or
push
xor
jmp
jmp
test
push
cli
(bad)
hlt
or
pushf
(bad)
fcmovu
sub
xchg
push
dec
retf
out
push
jbe
int
out
outs
cwde
xchg
mov
mov
leave
or
(bad)
lock
nop
inc
sar
dec
mov
inc
add
jno
push
outs
test
das
rcr
and
sbb
xchg
mov
mov
add
fnstsw
pop
fbld
mov
ffree
(bad)
dec
adc
xor
mov
stos
pop
xchg
loopne
fidiv
push
repnz
push
fild
movs
ficom
mov
jno
outs
or
adc
dec
(bad)
loope
outs
mov
iret
mov
jecxz
sbb
adc
ins
dec
in
xlat
adc
(bad)
dec
popa
jl
cmp
int3
push
mov
xlat
dec
xor
fst
adc
pop
loope
lods
aaa
test
int
leave
cmp
mov
retf
loope
rcl
call
sub
xchg
add
jmp
ss
pop
mov
mov
(bad)
jmp
(bad)
add
fisttp
add
outs
scas
xchg
xor
fwait
or
pop
xchg
shl
add
les
pop
or
sbb
lods
jb
mov
push
ret
ret
cmp
jmp
inc
lods
jne
call
ficomp
mov
and
add
xchg
push
popf
cld
loope
jne
cmp
sti
fsub
mov
sbb
inc
inc
ins
xor
adc
ja
adc
mov
(bad)
mov
ret
cwde
mov
enter
inc
mov
and
dec
mov
lods
test
fild
(bad)
push
inc
imul
pusha
adc
xchg
fstp
inc
les
in
js
test
pop
xor
clc
pushf
lock
or
xchg
out
xor
mov
(bad)
jns
rcl
test
call
inc
cs
inc
cmc
push
push
sub
jp
(bad)
xchg
imul
retf
scas
jmp
retw
mov
pop
xor
nop
cli
or
lods
imul
mov
push
mov
jns
or
mov
cmp
rol
cmc
jmp
cmps
sub
stos
loopne
cmps
imul
or
popf
call
and
in
in
and
in
out
mov
aad
std
or
ror
mov
out
cmc
push
ins
iret
js
imul
pop
mov
adc
or
nop
xchg
cld
and
dec
adc
hlt
pop
into
(bad)
sub
dec
cmps
push
ss
popf
cmps
je
fnstenv
sub
xlat
fild
test
aam
fisttp
lea
or
pop
inc
out
(bad)
mov
hlt
aam
dec
int
leave
in
ror
sub
dec
or
dec
iret
call
aas
rcl
cmp
call
jb
scas
out
push
push
movs
in
cdq
dec
stos
xchg
push
fwait
cmp
mov
lods
jno
mov
pop
jg
ins
push
mov
dec
sub
sahf
sbb
cmp
das
add
rcl
push
retf
in
jne
push
xchg
cmps
movs
aad
add
dec
jmp
and
or
cmc
fcomp
fadd
ds
add
dec
and
repnz
add
push
cdq
cmp
sbb
pop
ja
bound
adc
in
rcr
sbb
mov
jp
inc
sbb
and
pop
xor
cmovle
xor
aaa
hlt
xor
dec
mov
pop
fadd
ja
mov
push
je
aad
movs
(bad)
push
sub
push
adc
xor
push
add
cld
or
or
loop
sub
jno
pop
cli
and
and
adc
mov
ja
jle
pusha
cmps
xchg
ds
fisttp
aad
mul
xchg
cld
and
in
pop
mov
inc
push
adc
pushf
sub
sbb
ret
rcr
adc
stc
xor
lock
dec
and
cmp
into
(bad)
aam
jns
imul
es
sbb
and
jo
push
jo
scas
retf
and
sub
mov
mov
xchg
int3
push
jl
mov
xchg
sbb
pop
out
retf
sub
pop
jne
aam
mov
push
icebp
je
inc
les
mov
cmp
imul
mov
xchg
test
or
xor
mov
dec
lods
cld
pusha
push
stos
mov
bound
fisttp
scas
xchg
adc
adc
lock
and
pop
jo
mov
sbb
imul
cwde
dec
mov
in
xchg
daa
inc
clc
test
mov
inc
adc
cld
or
mov
call
mov
int
daa
test
or
jmp
mov
nop
push
sub
mov
jge
cli
sar
push
dec
mov
inc
call
cmc
add
cmc
lock
aaa
fdiv
popa
add
lahf
cmp
jecxz
sbb
pusha
mov
nop
pop
xchg
test
add
mov
adc
dec
mul
xchg
stos
out
ror
outs
fisubr
mov
cwde
aas
imul
ss
lods
and
call
stos
mov
lock
sub
dec
lahf
dec
dec
push
loopne
adc
adc
pop
sub
icebp
das
jae
call
dec
jae
sub
pop
xor
ret
inc
bound
jg
add
push
lahf
cld
mov
rol
out
inc
xor
sbb
push
(bad)
lods
fcomp
cld
aad
mov
mov
into
cmp
xchg
imul
retf
ror
inc
sbb
mov
add
lahf
pop
pop
or
cmp
(bad)
addr16
retf
lea
sbb
xor
add
imul
fidivr
inc
adc
arpl
mov
popf
fadd
add
dec
jmp
pop
pusha
and
jnp
dec
mov
xchg
mov
adc
jge
cld
in
(bad)
rcr
paddw
cmp
cdq
stc
scas
movs
push
popf
in
fcomp
mov
call
inc
aas
xor
push
inc
pusha
mov
fadd
rcl
mov
out
jnp
xlat
inc
repz
inc
scas
stos
sti
cmps
adc
retf
and
xchg
lods
and
xor
std
xchg
or
jno
rol
push
mov
inc
rol
adc
mov
je
push
jb
sbb
xchg
adc
add
mov
jmp
fwait
popf
cmp
push
push
je
xlat
addr16
scas
cmp
mov
sub
inc
xchg
movs
push
dec
dec
add
scas
out
ret
jo
inc
ins
je
inc
stos
cmc
into
jle
sub
ror
push
dec
add
shl
jmp
scas
in
invlpg
call
out
clc
cmp
leave
js
jmp
mov
or
test
shl
cmp
lahf
clc
add
ins
jge
add
hlt
(bad)
aas
add
xchg
add
sbb
aaa
jne
xchg
jp
sbb
movs
mov
adc
fiadd
out
cmps
push
leave
test
and
cwde
or
mov
mov
sti
retf
cmps
cmps
or
in
mov
adc
call
jge
popf
adc
fldcw
mov
vpsravw
jp
sbb
cmc
es
adc
ret
inc
div
push
jmp
cmp
mov
or
in
mov
mov
cld
ret
or
adc
sbb
popf
test
mov
pop
mov
add
push
jmp
stos
pop
scas
stc
lods
push
scas
hlt
mov
sub
mov
popf
cmp
aaa
pop
mov
mov
scas
xor
mov
iret
sahf
push
dec
mov
pop
xchg
iret
mov
xchg
cmps
lock
cmp
cld
lock
xchg
sub
mov
mov
mov
cwde
push
push
inc
mov
cmp
push
cdq
jecxz
stc
ret
out
jp
dec
sbb
adc
inc
or
adc
pop
sub
sbb
arpl
mov
ins
fwait
inc
mov
cmps
cmp
(bad)
icebp
in
xchg
pop
push
cmp
stos
movs
jo
xlat
inc
pop
leave
inc
out
xchg
mov
xor
cmp
pop
inc
push
fcmove
xor
shr
or
cmps
add
call
mov
bound
mov
dec
inc
adc
faddp
xlat
adc
in
pop
mov
les
xchg
in
inc
jae
mov
dec
rol
cs
pop
push
(bad)
je
scas
xchg
fld
or
mov
adc
inc
inc
push
fstp
stos
(bad)
ja
into
loopne
cmp
pop
(bad)
xchg
and
fnstcw
repnz
mov
mov
fwait
shr
sub
shr
mov
(bad)
jmp
stos
fld
add
mov
or
xchg
rcr
mov
cmovo
mov
sub
je
jns
mov
dec
(bad)
scas
pop
stos
sub
dec
add
ja
fldenv
add
xor
sbb
xchg
push
fisttp
adc
pop
das
push
outs
mov
add
mov
sbb
je
jns
retf
mov
mov
cmp
or
or
pusha
add
mov
adc
jl
mov
outs
fld1
jl
mov
xlat
add
jecxz
sysenter
mov
loope
push
jle
inc
push
jmp
dec
jmp
push
cmps
mov
inc
jo
inc
scas
or
jo
xor
in
pop
mov
and
iret
jmp
push
test
add
push
mov
mov
adc
ret
mov
xor
push
(bad)
out
dec
scas
cmp
into
and
mov
retf
pop
cmps
pop
xchg
test
sub
push
gs
cmps
xchg
cmp
jecxz
imul
ret
and
jg
add
je
inc
jle
ins
jl
aad
mov
call
and
xor
sbb
cmp
sbb
inc
sub
cmps
loop
dec
mov
ds
scas
jle
jecxz
shl
sub
or
loop
push
cli
mov
mov
jp
jae
pop
das
pusha
pop
retf
jecxz
push
add
add
arpl
cli
mov
mov
adc
push
jae
cli
sbb
aad
mov
mov
shl
pop
ret
test
pop
cmp
and
xor
dec
push
push
sbb
jns
out
(bad)
jge
sub
jb
jle
rcr
mov
mov
cmps
cmp
ja
mov
out
mul
sub
sti
push
mov
or
(bad)
int
inc
jle
mov
mov
and
stos
and
(bad)
call
adc
daa
sbb
push
pop
stc
imul
mov
dec
sbb
int3
mov
dec
out
(bad)
scas
sbb
pop
add
mov
test
pop
dec
ret
lods
into
mov
int
mov
add
fisttp
add
cwde
add
movs
shl
inc
xchg
gs
dec
xchg
inc
fnstcw
not
cmp
cmp
movs
ret
movs
jmp
rcl
push
cli
push
dec
shl
call
adc
dec
mov
mov
push
stos
lods
fsubp
bound
mov
enter
loope
jge
std
xchg
mov
or
sub
retf
pop
xchg
sar
cmp
stc
test
mov
ss
rcl
icebp
dec
jg
inc
dec
or
nop
out
cmp
xor
scas
in
dec
ins
(bad)
and
mov
jae
loope
push
out
call
neg
out
xchg
mov
dec
imul
popa
mov
jno
es
jecxz
push
fistp
mov
loopne
xchg
repz
or
popf
inc
add
xor
mov
frstor
push
cmp
scas
push
pusha
popa
mov
dec
test
loopne
and
xor
retf
ret
lds
adc
out
jo
sar
addr16
mov
out
test
pop
xchg
dec
jl
pop
sub
nop
pop
retf
ds
xor
xor
inc
stc
dec
fisub
cmps
cs
fst
adc
pop
ds
mov
into
daa
xor
push
mov
push
popf
xchg
mov
cmp
std
push
out
dec
sub
xlat
stc
mov
mov
aad
cmp
lods
mov
(bad)
push
xor
sbb
out
lea
add
or
daa
fisttp
aas
mov
imul
(bad)
imul
retf
mov
call
xchg
jne
mov
fist
in
gs
sub
out
fwait
movs
xor
leave
sbb
jnp
push
rcl
test
sub
pushf
adc
jmp
jne
fcom
popa
mov
ret
adc
test
or
add
mov
jbe
and
test
sbb
in
rol
ret
mov
enter
xor
scas
loopne
outs
inc
fmul
sbb
fiadd
xchg
fidiv
mov
ror
iret
ret
jno
and
stc
jno
jge
imul
int3
and
into
or
into
icebp
cmps
dec
inc
out
test
sbb
scas
dec
addr16
mov
hlt
pop
jo
rcr
jle
xor
call
or
enter
movs
ds
sahf
test
jbe
and
dec
cs
xlat
dec
loopne
icebp
movs
sbb
(bad)
rcl
add
(bad)
jle
cmps
test
(bad)
lahf
xor
pop
mov
ss
ret
pop
jge
jmp
outs
mov
or
shl
add
mov
dec
dec
shr
cmc
sub
xchg
in
sar
jecxz
lods
jle
push
inc
inc
inc
(bad)
mov
retf
jp
jae
and
scas
test
lods
into
push
xor
invd
push
in
bswap
lock
shl
pop
sub
cmp
jl
lds
mov
imul
out
xchg
(bad)
sbb
mov
inc
test
push
test
cs
mov
cmp
or
sar
sbb
movs
mov
jmp
repnz
add
xchg
loop
call
arpl
shr
xor
or
dec
and
pop
add
mov
retf
xchg
dec
jp
out
mov
(bad)
sbb
out
mov
sti
pop
dec
daa
inc
int
add
mov
ja
aad
popf
imul
and
and
or
in
lock
jo
pop
(bad)
push
and
inc
in
loope
pop
xor
(bad)
jl
push
repnz
and
mov
jne
cmp
cmp
inc
mov
xor
addr16
and
adc
dec
mov
mov
es
jle
cmp
gs
pop
js
push
inc
leave
jmp
fadd
pop
retf
popa
pop
clc
inc
inc
mov
mov
(bad)
jmp
cld
inc
push
jl
cmp
mov
bound
inc
sar
ficom
outs
add
jo
leave
jo
add
addr16
test
fmul
popf
dec
sbb
inc
xchg
and
cmp
push
loope
repnz
mov
jb
call
xor
jbe
(bad)
dec
loop
iret
cmp
pop
xchg
cmps
pop
pop
mov
pop
cli
xchg
lods
pop
fsub
rol
xor
test
inc
out
pushf
jnp
(bad)
mov
clc
jns
popa
cmp
and
cmp
sub
jo
sub
fldcw
out
hlt
jae
pop
mov
mov
mov
jecxz
out
lea
add
xlat
adc
out
popa
and
test
mov
and
(bad)
jmp
ret
mov
cmp
cwde
push
pop
movs
call
mov
cmp
pop
push
mov
jb
les
adc
sbb
push
ss
sub
jno
(bad)
jae
(bad)
lods
mov
adc
popf
fcom
sub
ds
pop
jmp
xor
pop
xor
cdq
mov
add
add
pop
je
jne
pop
mov
aad
std
or
iret
push
mov
ins
(bad)
xchg
push
cmp
push
sub
xchg
lds
lods
mov
test
in
jle
arpl
or
inc
xlat
jmp
mov
mov
aas
and
stc
add
jg
movs
ja
call
fldcw
dec
enter
retf
cmp
das
test
retf
mov
sbb
test
xor
pop
test
pop
push
dec
xchg
xlat
loope
sbb
jecxz
push
fnstsw
popf
pop
hlt
or
adc
xchg
test
cmp
pop
aad
pop
call
fdivrp
aas
in
or
test
int3
adc
inc
cmp
xor
mov
xlat
jne
inc
adc
fcomi
je
lea
sti
aam
loope
inc
sbb
imul
int3
repz
mov
dec
enter
(bad)
es
inc
(bad)
test
and
cmp
mov
icebp
and
fistp
test
ret
add
xchg
mov
and
xchg
nop
jbe
scas
fadd
out
adc
ret
fcmove
push
xor
cmp
aaa
push
push
or
ds
pop
test
pop
inc
test
or
cmp
mov
dec
pop
outs
or
popf
mov
aam
or
adc
xchg
inc
xor
sbb
stos
fwait
mov
mov
retf
fcmovb
sub
pop
sub
xor
dec
ja
xchg
outs
int3
jbe
(bad)
jl
adc
sbb
add
mov
dec
add
sub
add
call
dec
dec
je
data16
test
out
(bad)
fldenv
popf
or
jmp
cld
loope
mov
xchg
(bad)
jecxz
and
je
dec
xchg
into
sbb
inc
sub
loopne
(bad)
sub
call
cmc
or
popa
add
enter
in
fist
aad
cmp
fwait
out
and
add
jge
ret
push
sti
jo
sub
sub
mov
pop
jnp
adc
fs
cmp
cmp
mov
push
mov
dec
mov
ret
ret
xor
cmc
cmp
test
jecxz
or
xor
lods
call
pushf
inc
data16
out
stos
push
jbe
ins
lods
mov
dec
cwde
daa
and
das
pop
das
outs
push
int3
xchg
jmp
jge
push
mov
xchg
add
mov
jbe
retf
mov
cmp
jno
mov
retf
pop
aaa
cmp
mul
mov
mov
dec
fimul
cmps
and
sub
fadd
cmp
stos
ins
std
pop
xor
arpl
sub
sub
pop
and
mov
or
div
das
jp
add
xchg
and
stos
push
pop
mov
mov
pop
lds
mov
push
adc
inc
inc
fwait
or
mov
pop
jg
pushw
add
mov
sti
dec
clc
fist
call
inc
ror
cld
mov
pop
cs
push
sbb
dec
or
cmp
out
pop
mov
jmp
mov
add
inc
fisttp
sub
ficomp
(bad)
or
mov
aaa
add
pop
test
push
push
xchg
mov
inc
mov
fmul
add
mov
mov
xor
xor
enter
add
jp
xchg
dec
push
imul
or
cs
pop
cmc
cmc
pushf
push
shr
mov
push
retf
movs
fcom
movs
in
retf
pop
jne
inc
lds
scas
sub
push
mov
sbb
pop
fs
js
push
pop
and
push
fimul
xor
pop
adc
pop
std
mov
arpl
inc
cmp
jno
cmp
cmp
inc
(bad)
mov
pusha
retf
inc
xor
dec
nop
addr16
pushf
mov
dec
das
pop
dec
pop
out
int
sti
arpl
lahf
jge
int3
jb
inc
fistp
int3
fnsave
call
fwait
mov
imul
fiadd
add
outs
sti
mov
and
push
and
cs
and
jo
cmps
dec
mov
and
dec
or
cdq
jne
in
clc
push
ret
sub
iret
sbb
sbb
push
fsubrp
test
scas
xchg
stos
push
outs
je
inc
inc
inc
lahf
nop
(bad)
sbb
jle
mov
mov
push
rcr
cmp
mov
push
popa
out
hlt
movs
jp
adc
aad
ds
pop
mov
jb
sub
cmp
or
rcl
mov
cmp
dec
mov
lock
adc
mov
inc
xchg
sub
sbb
cmc
out
cwde
cmp
(bad)
ds
lock
test
loop
xor
rcl
adc
sub
sbb
sbb
adc
jno
mov
jmp
and
sbb
repnz
sbb
sbb
retf
xchg
in
jmp
mov
int
add
sub
sar
vpandn
(bad)
mov
cld
call
dec
add
fst
sub
ficom
imul
mov
std
icebp
pop
jb
shr
sahf
and
out
test
xchg
addr16
inc
xchg
xlat
retf
call
in
fnsave
in
sub
or
fwait
sbb
mov
dec
xchg
adc
cld
cmp
jns
test
daa
inc
inc
mov
clc
xchg
mov
pop
add
in
ss
mov
cmp
ins
test
imul
rcr
or
std
fdivr
cmp
mov
inc
adc
cs
fmul
cmp
pop
dec
jbe
shl
dec
lock
or
std
pop
adc
sub
pop
push
iret
ds
fimul
jnp
out
es
mov
frstor
and
push
add
pushf
sub
mov
push
push
ds
div
xchg
mov
adc
cmp
xor
adc
ds
cmp
mov
inc
ins
adc
and
mov
mov
xchg
mov
inc
jl
scas
sahf
mov
inc
mov
cmp
or
xor
cld
setp
pop
sub
xchg
(bad)
dec
(bad)
out
or
ja
jmp
shl
ins
pusha
aad
pop
rol
data16
pop
stos
ss
pop
xor
cmp
mov
mov
enter
das
aaa
cmps
ja
xor
loop
cmc
add
adc
out
xor
xor
or
mov
sub
int3
shl
or
jns
retf
idiv
call
jmp
cmp
adc
add
lock
aas
mov
pop
pushf
test
fbld
aam
push
sahf
pop
retf
xor
push
fsub
sub
cmp
and
mov
aad
xor
or
retf
lods
repnz
cmp
inc
daa
inc
push
loopne
ss
jbe
and
ret
push
(bad)
aas
dec
jp
mov
xor
stc
ja
mov
jnp
mov
popa
pusha
ins
scas
or
inc
dec
int3
mov
fsub
and
imul
(bad)
jg
push
push
test
pop
popa
sbb
ss
fsub
fcomp
dec
ins
add
mov
loope
mov
jnp
pcmpeqb
test
lods
jns
cdq
call
ins
cmp
or
fidiv
inc
test
jns
inc
cmp
fstp
stos
popf
push
dec
xor
inc
adc
cmp
jb
(bad)
fisubr
add
jnp
ffree
xchg
call
in
push
dec
or
mov
(bad)
or
dec
xchg
pop
mov
jnp
imul
or
loope
push
xor
jmp
adc
mov
sar
adc
sbb
je
add
inc
(bad)
fist
push
and
fmul
fbstp
shl
xor
lods
push
fcomip
adc
(bad)
jo
nop
jbe
inc
outs
and
imul
daa
jl
lea
mov
out
aaa
jnp
xchg
out
push
push
pop
in
sbb
neg
mov
push
in
mov
pushf
mov
adc
adc
xchg
adc
hlt
(bad)
push
mov
jmp
sub
and
test
cli
and
clc
sub
jb
inc
mov
outs
lds
adc
mov
cdq
jl
push
inc
or
dec
sbb
cmc
lock
xor
leave
push
mov
and
ss
push
stos
clc
nop
imul
pop
je
dec
jmp
xor
dec
jo
pop
inc
inc
add
xor
adc
pop
xchg
jb
mov
or
sbb
push
and
or
or
mov
imul
dec
pop
or
xchg
jmp
cs
and
mov
xchg
test
inc
lods
xchg
out
dec
mov
mov
or
aas
jmp
shl
adc
push
ret
ja
hlt
repz
push
les
xchg
enter
aas
xor
mov
in
mov
cmc
push
jle
lods
inc
mov
shl
cmp
out
js
xor
lea
cmc
mov
and
cld
dec
es
add
xchg
pop
jmp
bound
fild
cmp
aad
inc
inc
mov
pop
pop
cmp
mov
out
adc
out
jo
fsub
sti
fiadd
mov
and
lock
outs
mov
jecxz
add
jno
xor
repz
adc
or
dec
mov
rol
dec
jnp
fcmovb
mov
out
adc
aas
stos
mov
adc
iret
arpl
movs
or
sbb
aas
ret
add
or
imul
pop
sub
pop
xor
push
sar
add
xchg
popa
ficomp
mov
mov
imul
mov
mov
ds
mov
cmps
jns
popf
icebp
jp
adc
cdq
mov
cs
xchg
out
dec
adc
mov
not
sahf
mov
adc
pop
icebp
test
movs
push
and
mov
sub
data16
inc
test
sub
mov
pop
pop
fwait
test
movs
mov
aas
add
stos
sub
jle
dec
cmp
and
jle
cmps
inc
mov
xchg
rcl
xor
mov
fs
out
push
add
clc
sub
sbb
retf
cwde
push
adc
cli
mov
loopne
jmp
and
mov
cmp
nop
push
gs
call
mov
pushf
or
sub
sub
xor
sub
pop
or
xor
cmc
sar
inc
push
loop
scas
xor
movs
mov
(bad)
pop
sub
call
inc
mov
fcmove
fs
cmp
jmp
sbb
mov
arpl
pushf
mov
call
scas
dec
mov
mov
inc
ret
test
iret
je
sub
push
je
arpl
xchg
jb
mov
lock
pop
xor
push
ret
test
sub
stc
jecxz
mov
clc
and
dec
pop
inc
dec
lods
ret
cmp
dec
mov
adc
xlat
aam
push
rcr
aad
mov
(bad)
scas
and
test
loope
addr16
push
push
mov
xchg
call
mov
in
jbe
pop
sub
pusha
jmp
dec
out
aam
movs
pusha
ret
out
sub
sbb
mov
loope
jmp
add
cmc
loope
ja
push
push
dec
push
je
xchg
xchg
fist
pop
repnz
cmp
mov
cli
dec
aad
xchg
push
fadd
fst
add
cdq
iret
(bad)
dec
(bad)
pop
jne
retf
sbb
inc
xlat
ins
pop
and
(bad)
pop
push
mov
(bad)
jae
and
mov
stos
in
cmp
cmp
sbb
and
fwait
push
mov
pop
pusha
pusha
daa
loope
nop
into
and
add
sbb
outs
out
adc
pop
fistp
sub
mov
test
cmp
cs
pop
outs
xchg
sbb
aad
push
aad
scas
and
rcl
arpl
lods
dec
sbb
jns
push
es
mov
cs
mov
mov
jmp
test
lds
leave
inc
cmp
or
test
mov
xor
xchg
inc
test
out
jno
mov
stc
arpl
adc
mov
sar
ret
jl
jno
cmps
add
or
sar
cmps
(bad)
mov
stc
adc
movs
cmp
shr
call
cwde
mov
xchg
cmp
lahf
arpl
jmp
xchg
outs
jl
fwait
sub
pop
or
and
or
mov
push
shr
rcr
outs
aam
popa
popf
dec
pop
ja
xchg
pop
mov
rcl
cmp
mov
fdivr
shl
aam
push
or
out
and
enter
shl
ins
xlat
inc
mov
retf
push
(bad)
push
xlat
dec
movs
mov
ror
pop
xor
adc
jae
cld
daa
xor
ja
mov
jno
push
dec
mov
shl
cs
or
pusha
push
adc
jae
in
ret
pandn
mov
sub
mov
and
clc
jmp
jnp
aaa
inc
aaa
push
or
bnd
xor
push
jno
iret
out
mov
mov
cmp
jbe
inc
ja
ror
(bad)
std
push
ret
pusha
and
mov
inc
cdq
scas
xor
ss
cmp
mov
xor
mov
(bad)
sbb
scas
test
mov
fiadd
pop
jle
lods
and
mov
inc
ficom
leave
mov
cmp
or
jle
in
dec
shl
cmp
dec
push
repz
repnz
in
inc
loop
sti
jb
hlt
arpl
cmp
outs
or
and
push
test
cmp
jecxz
mov
xlat
add
nop
fcom
mov
xor
pop
xchg
and
wrmsr
sbb
jmp
outs
sar
mov
push
sar
pushf
jmp
or
sub
cmc
pop
imul
stos
cmp
ficomp
outs
stos
sub
mov
inc
and
xchg
mov
and
imul
push
fisttp
mov
cmp
stos
mov
mov
int3
push
lods
(bad)
call
sub
cmp
pusha
mov
ds
jg
push
shl
cmps
adc
dec
adc
push
mov
call
jns
adc
les
sbb
sbb
xchg
dec
mov
out
push
out
push
test
aam
test
ss
sahf
adc
inc
retf
shr
(bad)
fwait
xor
aad
mov
push
pop
loop
sbb
add
inc
rol
pop
inc
dec
cmc
aad
shl
xchg
xor
xchg
into
addr16
push
sbb
imul
test
clc
jge
jae
ja
sbb
dec
data16
mov
inc
aam
mov
aam
mov
in
ja
cmp
daa
rcl
inc
call
jmp
add
mov
mov
sub
(bad)
retf
jecxz
sub
push
fwait
and
adc
retf
(bad)
mov
cmps
dec
adc
adc
sahf
xchg
adc
jmp
lods
call
fisttp
fdiv
jns
jp
neg
ja
nop
aas
stos
adc
xchg
call
add
dec
xchg
call
clc
out
xchg
and
dec
push
ret
les
ins
inc
gs
or
inc
push
xor
adc
adc
cmc
pop
es
idiv
iret
inc
ret
sbb
pop
mov
xchg
ud0
je
dec
mov
int3
ins
add
lods
mov
pop
cmc
push
in
push
(bad)
clc
ficomp
jge
movs
mov
adc
inc
jnp
icebp
mov
adc
inc
mov
test
mov
call
mov
jmp
mov
(bad)
dec
adc
movs
fsubr
and
and
add
lds
lods
pop
addr16
mov
outs
add
stc
jle
jno
loop
aad
dec
test
adc
popa
xchg
popf
pop
push
jae
add
push
std
or
or
mov
or
lods
or
sbb
cmps
xchg
repnz
jp
retf
pop
add
aad
out
inc
rcl
dec
and
add
inc
retf
jb
or
add
adc
test
rcl
das
div
ret
sbb
xchg
sahf
repz
cmp
sub
pop
mov
sbb
leave
push
jge
(bad)
rcl
cmp
cmc
pop
lods
pop
js
int
jg
aas
mov
cmp
and
outs
inc
add
(bad)
inc
and
je
pusha
xchg
cmps
push
fdivr
xor
xchg
mov
jmp
pushf
out
dec
sahf
hlt
fsub
mov
fcom
or
clc
add
mov
lea
mov
sub
data16
out
jo
arpl
push
(bad)
lods
jo
pop
push
mov
icebp
mov
outs
inc
(bad)
out
sbb
loopne
ret
fnstsw
hlt
add
stos
inc
jns
aaa
jb
ret
pop
xchg
(bad)
ins
cmps
int
data16
rcr
xchg
fnstcw
gs
or
jno
data16
sub
jl
(bad)
push
adc
add
fimul
(bad)
ds
les
outs
out
sbb
cmp
adc
js
and
add
or
cmp
sub
dec
outs
pop
jge
dec
pop
fsubr
loopne
mov
lds
xchg
xchg
and
rcl
xor
xchg
mov
jmp
and
fisub
ins
loopne
cmc
fsubr
popa
in
aad
clc
stos
sbb
add
sub
es
jnp
xlat
sbb
dec
mov
inc
sbb
adc
and
add
retf
ins
xchg
sbb
sbb
(bad)
movs
xchg
fst
inc
dec
or
jp
dec
mov
mov
fwait
adc
ins
fcomp
mov
or
(bad)
xor
pop
mov
dec
xchg
scas
cli
xchg
shl
pop
sti
cmp
push
data16
pop
mov
add
push
out
push
cmp
adc
xchg
sub
pop
push
mov
pop
stc
aas
add
cmc
retf
fisubr
cmc
addr16
and
jb
sbb
cs
sti
push
and
dec
je
inc
fbld
mov
mov
repnz
push
adc
jmp
mov
shr
pop
inc
pusha
neg
dec
aad
int3
and
test
jae
out
cmp
xchg
cmc
(bad)
rcl
pop
add
fisub
ins
sbb
dec
not
fadd
xchg
xor
sbb
retf
loopne
je
add
cmp
and
push
repnz
xor
add
out
fxch
xchg
sbb
and
cwde
inc
jge
mov
stc
add
inc
std
cmp
add
cmp
xchg
shl
scas
push
lock
adc
dec
lods
add
push
test
cmps
mov
or
test
dec
xchg
add
pop
mov
mov
dec
ins
fdiv
cmc
(bad)
mov
adc
adc
arpl
loopne
scas
inc
inc
(bad)
(bad)
add
cmps
data16
cld
mov
shr
pop
outs
xor
pop
mov
sub
jecxz
cmc
mov
xchg
(bad)
hlt
adc
lods
sub
pop
aas
ja
cmp
stc
cwde
dec
mov
loopne
outs
xchg
fstp
xchg
lock
and
xchg
fcom
dec
fucomi
test
fcom
jns
xchg
dec
sub
adc
dec
iret
jp
nop
lods
popa
inc
sub
sbb
mov
or
loope
aaa
test
bound
sub
cmps
mov
ficomp
jbe
(bad)
cmp
mov
in
push
xchg
test
jnp
pop
call
cmp
repz
mov
movs
in
jmp
mov
adc
popa
and
(bad)
loopne
pop
mov
mov
ret
iret
jl
lahf
sub
(bad)
add
cli
xor
or
enter
(bad)
jne
mul
lock
enter
sub
out
sti
rcl
mov
sub
inc
test
test
imul
mov
arpl
mov
clc
push
push
mov
test
ret
dec
and
push
xchg
pop
les
xchg
push
adc
rcr
test
add
popa
mov
les
push
scas
pushf
mov
mov
and
retf
adc
clc
cmp
sub
push
pop
add
and
sub
xor
jns
or
arpl
xchg
cmp
mov
jns
inc
add
je
pop
in
jg
mov
cmps
movs
and
xchg
jo
xchg
shr
aam
dec
push
dec
pop
dec
(bad)
mov
mov
pop
jecxz
adc
js
sub
popf
or
mov
push
ss
fisttp
pop
fistp
lods
inc
(bad)
jns
xchg
loope
jmp
and
call
in
stc
jb
loope
sub
and
xchg
inc
cld
loop
jne
sbb
xchg
aas
outs
mov
rol
push
shr
rcl
sahf
daa
mov
or
cli
mov
out
dec
jecxz
sub
cwde
test
jo
jno
lahf
aas
lds
cmp
pushf
mov
xor
iret
js
loope
leave
push
pop
pushf
adc
push
xor
jle
daa
jge
shr
xor
jb
int
add
push
and
inc
ss
stos
movq
addr16
int
and
jns
cdq
das
sti
lds
mov
mov
mov
mov
test
gs
fst
jno
xchg
dec
test
fild
fadd
das
push
pop
fbstp
push
xchg
dec
cmp
mov
loopne
les
retf
mov
outs
inc
jne
pop
mov
repnz
dec
movs
inc
in
fdiv
sbb
mov
fadd
jecxz
inc
ret
sti
mov
inc
iret
movs
xchg
xor
dec
jno
pop
stos
or
cmps
and
cmp
dec
xchg
pusha
push
xlat
or
inc
and
mov
mov
and
sub
test
js
ins
add
outs
sti
int
pop
push
xchg
add
pop
movs
mov
mov
lods
jecxz
dec
jo
cs
inc
push
mov
cmps
std
outs
mov
inc
pop
int
shl
int
imul
ins
mov
push
leave
retf
xor
fst
jnp
mov
sub
(bad)
sub
push
pop
loop
iret
fwait
cmp
sar
inc
loop
add
inc
mov
sub
imul
cmps
xchg
jmp
pop
mov
fld
xchg
popa
aaa
sub
fwait
sbb
(bad)
dec
push
movs
adc
add
mov
add
or
fsubr
retf
sbb
addr16
mov
mov
jbe
ins
aas
test
xor
stc
and
mov
mov
dec
daa
fcmovnbe
(bad)
cwde
pop
dec
das
and
mov
adc
and
popf
mov
adc
inc
jl
jge
xor
mov
fwait
les
aam
inc
movs
daa
dec
add
and
jbe
or
xchg
movs
and
cwde
fist
loope
pop
(bad)
xor
stc
pop
imul
call
test
xor
adc
sahf
cmp
arpl
cmp
jns
test
jno
pop
bnd
or
and
sar
clc
push
mov
cmp
sbb
cmp
mov
mov
arpl
in
scas
(bad)
and
mov
jg
ds
jmp
mov
and
or
sar
cmp
call
dec
push
xchg
or
addr16
jle
stos
xor
adc
sub
pop
scas
outs
cmp
outs
nop
fsubr
shl
popf
call
mov
icebp
mov
sbb
xchg
ficomp
ins
adc
dec
jmp
cmp
call
fidiv
retf
jno
push
dec
mov
cwde
jo
jle
mov
outs
aas
xor
adc
xor
sub
push
xchg
and
aam
push
ins
outs
mov
cli
sbb
cmp
adc
xor
aaa
xchg
(bad)
dec
add
arpl
jnp
outs
ja
sub
sbb
dec
in
sub
jecxz
xor
call
mov
mov
add
daa
cmp
bound
pop
cmp
cs
jbe
outs
pusha
out
sahf
inc
mov
ret
push
std
jbe
inc
pop
lds
ins
mov
adc
lahf
jp
push
call
imul
shl
sbb
push
mov
sahf
(bad)
mov
xor
imul
xchg
inc
stc
push
mov
inc
mov
dec
pop
jge
cwde
xchg
jge
dec
lds
jge
shld
mov
leave
xor
lea
mov
ins
data16
push
push
dec
mov
das
cmps
xor
sahf
inc
or
cmp
mov
and
push
aam
sub
pop
hlt
in
cld
retf
lods
pop
dec
outs
dec
jl
retf
xchg
mov
stos
mov
pop
cmp
mov
push
pop
std
scas
sub
xchg
inc
js
sub
shr
add
jge
push
lods
js
dec
jmp
sbb
push
leave
dec
dec
in
or
push
xor
sub
jo
aad
adc
idiv
(bad)
jno
ins
int3
and
call
sahf
or
movs
nop
sahf
sti
out
lea
push
dec
sub
adc
push
sbb
(bad)
mov
pop
xor
ret
repnz
ss
fmul
and
int3
out
out
inc
mov
icebp
sub
mov
cmp
xchg
imul
imul
pop
fistp
outs
ds
daa
repnz
inc
mov
mov
sti
test
scas
pop
(bad)
addr16
js
xchg
pop
mov
mov
aad
aam
bound
popf
xchg
fbld
mov
hlt
mov
js
dec
sub
scas
aam
dec
fnstenv
repz
inc
xor
pop
je
imul
push
xchg
and
mov
frstor
pop
(bad)
mov
call
xchg
push
xchg
jl
cmp
popf
mov
xchg
stos
sub
xor
(bad)
stc
test
xor
cmps
inc
lock
sti
xor
in
mov
(bad)
sbb
stos
cmc
push
ror
icebp
clc
lds
xlat
test
sbb
pop
or
ret
or
inc
xchg
add
scas
das
and
pop
test
aam
(bad)
xor
xor
add
add
popa
add
imul
neg
popf
pop
inc
cwde
imul
rcl
and
mov
jp
fnstenv
pop
mov
sti
mov
daa
lahf
sub
les
jae
xchg
inc
xchg
cmc
repnz
cmp
push
push
and
imul
and
(bad)
repnz
add
cdq
jg
inc
out
xchg
mov
(bad)
cmp
cs
or
or
daa
pop
in
sbb
stos
(bad)
sub
hlt
add
mov
mov
or
js
cmp
pop
or
jmp
mov
sub
mov
aam
and
push
push
(bad)
ror
rcl
out
out
ficomp
dec
inc
(bad)
std
mov
movs
scas
ja
xor
jmp
daa
push
je
out
xchg
dec
out
sub
stc
cmc
retf
and
pop
sub
fidivr
mov
mov
ret
das
cdq
pusha
cmps
fisubr
or
and
sub
pop
jns
mov
jbe
cmc
xor
xor
scas
les
mov
add
xlat
xor
ins
in
popf
push
adc
pusha
imul
adc
mov
icebp
inc
jmp
sub
pop
(bad)
(bad)
hlt
aad
push
fstp
pop
sub
xor
dec
pushf
out
inc
add
(bad)
jg
cdq
sbb
ins
dec
scas
xor
daa
cmp
or
pop
movs
ret
fstp
jle
imul
inc
adc
js
repnz
(bad)
and
pop
out
jle
adc
push
pop
es
repz
jg
(bad)
fmul
fs
mov
cmps
fisttp
ret
cmc
scas
push
add
adc
nop
mov
push
inc
(bad)
mov
pop
test
add
inc
arpl
and
xchg
or
retf
je
in
pop
mov
sbb
and
out
jb
es
repnz
das
retf
ret
test
div
pop
add
in
jno
dec
neg
stos
bound
inc
lds
add
lods
(bad)
cmp
arpl
or
pop
mov
jge
push
imul
sbb
call
push
xchg
in
je
jbe
xor
pop
in
inc
test
pop
mov
shl
jge
mov
fidiv
add
ss
jl
jl
aaa
ds
nop
xchg
mov
es
push
jecxz
cmps
rcr
int3
add
int
xchg
fst
int3
jno
stos
mov
(bad)
pop
jo
repz
loopne
fisubr
adc
ja
stos
jo
in
or
into
xchg
and
(bad)
aaa
sub
push
push
mul
fadd
dec
mov
add
sbb
mov
inc
sub
icebp
adc
loop
mov
test
movs
dec
add
cmp
push
sbb
jbe
bnd
pop
mov
xor
aad
mov
nop
push
and
ror
das
pop
push
mov
adc
punpckhdq
xor
dec
and
aaa
movs
mov
pop
ficom
cmps
clc
push
adc
mov
inc
mov
test
shl
ds
xlat
mov
jns
cld
jns
std
stos
test
shr
and
mov
int3
cmp
pop
retf
or
xchg
or
mov
call
xchg
fmul
aas
retf
dec
push
inc
sar
jb
sub
out
(bad)
out
sub
iret
pop
loope
mov
call
jecxz
aad
pop
sub
push
jle
outs
sar
les
scas
ret
sub
pop
push
jge
sub
adc
and
(bad)
repz
in
sti
mov
xchg
jae
bound
mov
les
movs
je
test
sub
mov
sub
and
xor
jns
(bad)
xchg
std
jb
pop
bound
xchg
add
inc
es
jnp
outs
add
xor
or
scas
fisttp
push
stos
xor
xlat
mov
popf
sahf
sbb
push
scas
add
(bad)
retf
mov
xchg
int3
inc
or
aaa
shl
jne
lds
in
xor
add
outs
mov
out
lahf
pushf
sub
call
jb
stc
je
fsubr
mov
das
add
xor
and
stc
push
gs
mov
cmc
adc
mov
adc
sbb
cli
daa
(bad)
mov
imul
scas
jmp
sbb
outs
mov
fsub
adc
pop
cmp
jmp
push
xchg
pop
out
stos
cmp
into
lahf
ret
movs
jmp
fld
mov
and
xlat
jbe
cmp
dec
std
ss
inc
(bad)
jmp
aad
in
cmp
in
test
jl
mov
in
cmp
inc
aaa
inc
jo
pop
xor
f2xm1
arpl
ins
lods
fwait
shl
xchg
mov
test
cmp
loop
inc
mov
scas
cmp
(bad)
pop
sahf
jmp
inc
loope
mov
daa
pop
sti
push
cmp
js
lock
add
cmps
jmp
jg
mov
lods
xchg
cwde
in
mov
loope
mov
mov
pop
mov
out
movs
dec
imul
mov
fs
inc
jmp
stos
lock
sub
call
clc
mov
lods
fucomip
mov
mov
cmp
sbb
inc
out
push
mov
cmps
cdq
pusha
jae
xor
popf
clc
retf
jmp
ss
jno
jbe
add
or
loop
push
dec
gs
and
fsubrp
mov
xchg
arpl
jmp
add
aaa
and
jnp
add
(bad)
mov
out
lock
inc
mov
xor
cmps
sbb
or
movs
mov
pop
sbb
sahf
xchg
out
out
mov
int
lods
les
ins
stos
add
pop
jle
test
lock
sbb
cmp
pop
pop
out
icebp
add
inc
lds
inc
aad
inc
fcomp
push
int
dec
jge
ficomp
xor
cmp
pop
cdq
or
sbb
ror
or
jp
inc
lock
jb
ficom
imul
enter
scas
or
jmp
add
call
xor
fsub
xchg
add
(bad)
arpl
inc
in
jbe
cmp
ror
pop
xchg
cdq
out
ins
mov
pop
sbb
jecxz
dec
push
cwde
inc
xchg
bound
out
inc
aas
mov
ins
mov
(bad)
fimul
xchg
(bad)
push
mov
inc
aad
out
ins
xor
xchg
sbb
xchg
push
div
aam
pop
xchg
and
int3
cs
sub
sub
mov
xor
mov
mov
lock
(bad)
imul
fldenv
sbb
push
xor
in
aad
adc
loopne
jg
not
cwde
shl
push
cmps
sub
mov
push
sub
leave
sbb
mul
fidivr
xor
popa
dec
not
sub
imul
add
std
adc
bound
sbb
push
jl
outs
pop
xchg
in
ds
mov
loope
shr
xchg
mov
and
dec
ret
nop
movs
xor
add
sahf
lock
retf
mov
push
hlt
fcomp
mov
and
ss
fs
jle
fs
fstp
sub
sar
cli
sbb
ror
fild
ja
jmp
rol
cmp
loopne
sbb
xor
mov
out
scas
sahf
mov
mov
push
ror
test
sub
(bad)
jge
imul
(bad)
fisubr
xor
jo
pushf
hlt
out
cmp
stos
aad
inc
xchg
sbb
mov
jae
adc
lods
dec
mov
mov
cmp
stos
mov
cwde
push
shr
sbb
loopne
fild
sbb
jl
clc
adc
add
stc
daa
jae
iret
or
sbb
adc
movs
sbb
(bad)
es
sbb
mov
hlt
outs
mov
and
cmps
test
hlt
dec
scas
push
fldcw
pop
stos
adc
jnp
test
jne
hlt
inc
mov
clc
push
fnstenv
mov
shl
iret
pop
pop
gs
adc
mov
mov
jnp
pop
jmp
jns
icebp
ins
sub
nop
bound
dec
or
jmp
xor
std
repnz
scas
or
retf
adc
sar
push
imul
pop
and
jb
dec
sbb
pop
gs
neg
ror
les
jl
jge
pop
cld
pop
and
xor
cmp
shl
rol
adc
cmps
mov
dec
cmp
pop
pop
movs
inc
add
mov
jno
je
nop
hlt
cdq
xchg
fs
lahf
or
jle
jb
cld
dec
adc
xchg
jnp
fldenv
jo
mov
inc
xor
ror
call
sbb
xlat
jbe
sub
stos
xchg
sete
test
xor
mov
inc
adc
mov
add
ds
xlat
cmpxchg
adc
cmp
mov
adc
add
sar
sti
or
outs
jmp
iret
pushf
mov
inc
and
or
aas
adc
or
jno
fwait
mov
movs
cdq
pop
and
cli
lea
loope
xor
cmp
leave
lods
fild
call
jg
loopne
aam
movs
or
cmp
sub
test
mov
add
push
push
bnd
xor
cmp
push
das
test
mov
xchg
push
cmp
fldlg2
stos
sbb
in
inc
cld
aam
xor
mov
fxch
mov
nop
inc
sti
mov
mov
not
mov
cmp
je
sub
das
inc
fsubp
and
xor
mov
daa
pop
(bad)
call
dec
mov
adc
xchg
aam
dec
fldcw
out
retf
ja
rol
fisubr
out
adc
out
push
xor
out
dec
iret
mov
jmp
jmp
jmp
jnp
push
out
aad
push
loope
xchg
sbb
or
pop
pop
add
(bad)
jg
and
aas
xchg
push
mov
fldcw
xor
aaa
jmp
xchg
mov
jl
cli
test
or
add
nop
call
xchg
fisubr
loop
lds
xor
push
mov
stos
push
jno
xor
or
inc
imul
push
lds
mul
scas
push
pop
mov
lods
xlat
pop
ds
xor
test
cmp
pop
inc
and
les
(bad)
dec
xchg
(bad)
inc
xchg
pop
inc
add
addr16
dec
dec
(bad)
repz
mov
cs
pusha
pop
cmp
das
inc
rcl
sub
dec
jmp
xchg
ret
pop
mov
arpl
les
cwde
jne
das
vcvttss2si
jecxz
jmp
adc
fcomi
xchg
test
(bad)
mov
aad
push
icebp
cli
ds
sub
pop
cli
inc
ret
je
fcomp
push
inc
xchg
inc
(bad)
cmp
into
and
adc
sbb
jmp
adc
hlt
rol
push
or
mov
jnp
retw
mov
sub
dec
ins
sahf
or
sub
imul
movs
adc
das
or
dec
adc
js
add
data16
mov
movs
rcr
mov
xchg
push
add
outs
aas
cmp
out
mov
mov
pop
movs
aam
xor
repnz
add
jbe
mov
int
into
scas
xchg
arpl
je
or
lods
or
outs
pop
popf
ss
inc
mov
mov
add
fs
ins
add
inc
out
jae
or
dec
inc
pop
xchg
outs
add
mov
data16
outs
pop
in
jl
call
inc
aad
bnd
push
loopne
ds
jge
movs
pushf
adc
pop
pop
xor
leave
stos
mov
pushf
mul
pop
and
mov
icebp
xchg
das
cmp
mov
jbe
out
nop
push
mov
sbb
xlat
out
adc
push
cmps
mov
inc
xchg
dec
cmp
sahf
cwde
shl
xor
imul
arpl
fs
xor
adc
lahf
mov
inc
arpl
cmps
popf
aam
adc
jp
adc
jnp
sbb
xchg
mov
add
mov
dec
pop
sbb
(bad)
cmp
and
and
push
div
dec
cdq
xor
jnp
xlat
inc
jno
ret
pop
push
or
jmp
sub
ins
aas
jg
pop
mov
sub
push
movs
ret
pop
mov
test
cld
iret
fs
adc
jns
in
popf
stc
jecxz
stc
jns
je
mov
jecxz
xchg
xlat
jno
shl
rcr
fisubr
dec
inc
rcl
and
jg
in
and
cs
scas
loop
add
aaa
call
sbb
out
dec
outs
ins
idiv
sbb
push
fstp
pop
ret
inc
add
adc
out
or
sbb
out
cwde
imul
idiv
fstp
xor
cs
or
lock
sub
mov
jae
push
fisttp
sub
mov
add
sbb
inc
je
dec
sub
dec
lods
daa
scas
cli
mov
or
jp
xchg
dec
jle
out
adc
inc
ja
xchg
jne
xchg
fidiv
or
or
mov
into
jmp
leave
sub
stc
outs
std
daa
mov
in
aaa
xchg
add
sub
sbb
mov
ins
cmp
push
jo
push
repnz
xor
adc
mov
(bad)
pop
enter
rol
js
stos
inc
xchg
stc
mov
sbb
cmps
into
adc
ror
push
(bad)
leave
mov
dec
dec
mov
add
aam
dec
push
out
icebp
ins
inc
js
xchg
gs
xor
jns
ds
mov
cli
and
retf
dec
adc
imul
pop
sahf
mov
mov
pop
jle
mov
jmp
cpuid
sub
cmp
push
imul
push
je
dec
mov
or
xor
adc
sub
ficomp
sti
int3
or
push
pop
dec
fisttp
mov
stc
adc
xchg
imul
pop
stos
repz
in
xor
aas
and
jmp
(bad)
sbb
sahf
xor
cmc
std
sahf
in
leave
jns
lds
or
jp
shr
nop
xor
enter
rol
jns
mov
fucomip
jecxz
mov
or
xor
xor
cmp
jno
mov
lock
sbb
in
xor
addr16
add
pop
inc
jae
add
sbb
xor
test
cwde
mov
aaa
mov
dec
(bad)
mov
fadd
xor
ror
mov
jno
mov
lock
jno
sbb
push
cmps
jmp
xchg
leave
(bad)
jl
outs
mov
xchg
ror
pop
add
adc
or
xchg
pushf
mov
imul
hlt
mov
clc
and
xor
or
ins
stos
(bad)
mov
jmp
pop
cmp
sahf
dec
push
dec
dec
shl
stos
xor
inc
cmp
rol
fcomp
nop
sahf
ins
cdq
int
aaa
xlat
xlat
push
inc
mov
jne
mov
fwait
cmp
add
test
mov
fstp
xchg
adc
xchg
popf
test
test
dec
push
push
ret
mov
paddb
dec
enter
jo
add
xor
ret
cmps
adc
cmps
outs
and
mov
outs
push
push
cmc
hlt
jge
mov
cmps
frstor
jecxz
mov
push
or
aaa
dec
fbstp
cmp
(bad)
ss
es
imul
call
int
in
daa
cmp
ret
add
xor
lds
sub
inc
xlat
ins
add
jns
or
inc
loop
adc
or
push
push
mov
retf
xor
dec
mov
fst
pushf
fiadd
pop
push
lahf
imul
pop
cmp
test
pop
fbld
in
sbb
sbb
popf
jl
aad
hlt
gs
adc
outs
mov
in
jo
sub
and
outs
xchg
xlat
ins
mov
das
rcr
sbb
push
std
inc
push
into
sbb
gs
and
mov
pop
jns
mov
mov
and
dec
cmp
(bad)
mov
js
les
mov
pop
clc
cwde
ins
sub
movs
sti
mov
xor
mov
mov
test
adc
popa
das
jne
jmp
adc
lods
hlt
test
cs
jo
cmc
(bad)
out
cmps
inc
lock
mov
lods
xor
inc
(bad)
add
cs
xchg
jmp
jecxz
mov
add
push
(bad)
or
and
add
jle
addr16
loop
push
and
mov
fcom
popf
mov
xchg
push
sbb
out
aam
and
leave
mov
repnz
mov
add
cdq
ror
xchg
cmp
in
adc
clc
xchg
jb
fdiv
clc
addr16
cmp
inc
push
jb
test
fsub
cmps
push
call
push
push
in
cmp
mov
cdq
ins
jns
xchg
mov
push
enter
or
jns
loopne
mov
scas
pop
push
dec
cmp
ret
pop
fidivr
je
lock
out
pop
push
xor
ds
test
adc
fist
cmp
or
cli
in
test
es
ss
pop
jae
push
mov
lods
in
(bad)
adc
dec
jge
call
xchg
loopne
xor
cmp
cdq
mov
lods
adc
and
dec
cmp
outs
dec
jnp
js
jno
(bad)
iret
stos
mov
stc
dec
(bad)
mov
adc
loope
ror
das
dec
sub
push
in
and
mov
xor
push
imul
mov
out
xchg
mov
cmps
or
inc
mov
call
test
mov
cmps
inc
jb
cmc
adc
idiv
push
leave
outs
push
stc
pop
les
sbb
out
aas
mov
xchg
jnp
jp
popa
and
aam
ret
cmc
dec
push
imul
fisttp
in
test
pop
fsub
pop
pop
pushf
mov
enter
jg
sahf
inc
dec
sbb
sbb
mov
jno
fs
mov
xor
jmp
sub
cmp
lods
into
lahf
imul
jmp
add
push
mov
jbe
leave
adc
mov
retf
push
pop
das
inc
mov
mov
adc
loope
or
clc
retf
lods
sbb
cmps
fwait
sbb
cmp
and
push
mov
pop
fcomp
lods
dec
int3
iret
stos
adc
arpl
dec
adc
jmp
sub
fnstcw
cmps
pop
or
dec
inc
inc
sbb
mov
mov
(bad)
adc
cmc
xchg
or
jnp
push
ja
scas
(bad)
out
ins
xchg
loope
mov
push
lds
outs
jmp
arpl
mov
test
xchg
push
and
xor
dec
rcl
popa
dec
xchg
bound
inc
fistp
scas
hlt
stc
xchg
or
fidivr
pop
stos
or
sbb
xchg
or
dec
mov
xor
xchg
xchg
scas
and
xchg
jns
sahf
push
int
in
loopne
mov
jmp
or
add
(bad)
xchg
inc
aaa
ret
inc
icebp
cmp
lahf
es
jb
xchg
inc
mov
push
les
das
shr
sbb
scas
pop
dec
xor
outs
sub
das
retf
add
jmp
rcl
add
add
sub
cmp
add
test
int3
ins
push
dec
cdq
pushf
adc
pop
sub
fwait
adc
adc
dec
int3
sub
aas
dec
popa
mov
in
iret
adc
call
and
add
mov
dec
fisubr
adc
lahf
movs
aaa
inc
push
inc
fcmove
mov
mov
shr
jg
dec
mov
cmps
test
(bad)
bnd
push
sub
jo
mov
mov
mov
clc
adc
sahf
dec
stos
sub
push
jne
leave
div
jp
aad
dec
leave
mov
push
ins
std
mov
push
cmps
inc
mov
shl
jo
dec
sub
dec
cmp
dec
loop
mov
dec
jo
pop
xor
mov
sti
push
push
pop
arpl
xchg
xor
in
mov
ja
xor
movs
test
leave
sbb
push
repnz
inc
aaa
mov
pop
mov
cld
jb
scas
xor
frstor
lds
cmps
rol
test
adc
iret
daa
xchg
push
mov
loop
sub
adc
xchg
mov
jne
fdivr
ror
mov
jno
and
sti
gs
sar
sbb
xchg
mov
mov
fs
movs
xor
and
xor
mov
mov
fmulp
int3
fidiv
scas
loopne
add
int
les
xchg
imul
xchg
and
jmp
xchg
add
jne
arpl
movs
jg
mov
test
stos
les
jmp
xchg
mov
mov
push
mov
dec
sbb
and
adc
jmp
xor
lods
xlat
into
(bad)
std
(bad)
sar
xor
jnp
mov
gs
add
retf
adc
sbb
add
and
fcmove
jnp
mov
or
call
(bad)
sti
(bad)
hlt
adc
fldenv
add
cmp
or
outs
xor
aad
or
adc
call
out
push
or
mov
cbw
adc
pop
out
scas
cmps
sti
loopne
dec
dec
das
out
out
jmp
les
and
in
sbb
or
cli
cmps
pop
(bad)
ss
out
and
call
(bad)
ins
out
cmp
cmp
pop
cmp
vmwrite
dec
iret
pop
out
sysexit
jo
xor
inc
aaa
or
mov
inc
lahf
outs
rcl
push
push
in
shr
push
mov
popf
ins
adc
adc
pop
xchg
push
js
nop
repz
scas
mov
and
and
outs
mov
mov
imul
icebp
push
and
(bad)
mov
ret
sbb
imul
scas
js
outs
pop
ret
inc
sbb
jmp
and
arpl
ja
arpl
outs
aas
xchg
imul
sbb
dec
inc
movs
dec
adc
pop
lahf
inc
sbb
cmps
xor
mov
adc
mov
sub
mov
sti
xor
pop
push
pop
dec
sub
jno
icebp
jp
lods
popa
or
pop
fsub
sbb
das
repnz
cdq
sbb
out
xchg
adc
or
iret
lods
jl
aam
into
mov
sub
pop
fstp
inc
ins
push
addr16
xor
xor
push
cmp
xchg
test
retf
outs
call
sbb
dec
movs
stmxcsr
or
fidivr
pop
jns
xchg
cli
data16
push
push
(bad)
dec
inc
adc
sbb
les
das
sahf
jle
mov
popf
mov
and
test
popa
pushf
xor
sbb
cmp
pop
test
sbb
(bad)
sbb
adc
dec
fdiv
cs
and
add
std
dec
popa
pop
fadd
mov
lahf
mov
jns
pop
push
retf
ins
jg
repnz
cwde
ins
in
inc
cli
mov
out
and
jmp
pop
sub
test
mov
imul
jmp
dec
sub
lods
cmp
adc
arpl
movs
xor
mov
jnp
jns
pop
jl
lods
inc
ss
out
(bad)
pop
or
cmp
pop
sbb
mov
jl
test
call
ins
mov
(bad)
repnz
js
pop
(bad)
in
jns
or
out
scas
retf
xor
outs
bound
cdq
sbb
push
cmp
dec
shr
jae
cmc
repz
shl
cmp
popf
dec
stos
das
rol
test
or
or
rcr
mov
in
push
xchg
xchg
xchg
xchg
mov
sahf
push
fadd
test
aaa
push
mov
adc
xchg
sub
jne
mov
xchg
mov
sub
mov
add
sbb
pop
dec
sbb
or
sub
push
scas
bound
cmp
mov
mov
js
ret
pusha
jecxz
inc
(bad)
push
in
jb
add
in
fbld
imul
adc
ss
inc
add
pop
xchg
fptan
sub
jge
sub
inc
add
(bad)
ret
xchg
out
jg
and
pop
(bad)
dec
mov
cmp
jo
fs
popa
adc
xor
lds
pop
sub
adc
sbb
xor
cmp
xchg
jmp
imul
test
cli
(bad)
dec
rol
retf
scas
in
imul
cmp
stc
mov
push
and
inc
xor
mov
gs
scas
cli
mov
xchg
pop
mov
sbb
or
pop
cwde
pop
cld
aad
cmp
call
loope
test
sub
int3
xor
cmps
je
mov
test
sbb
pop
push
inc
sbb
aam
iret
pusha
adc
fsub
sub
push
sbb
repz
add
sbb
punpcklwd
pop
cmp
(bad)
inc
mov
aas
dec
mov
dec
add
movs
aad
shr
int
fld
dec
dec
(bad)
mov
pusha
in
dec
pop
sbb
xor
shr
mov
xor
xor
jb
mov
mov
test
aam
comiss
mov
dec
push
dec
add
jecxz
or
addr16
pusha
mov
ss
je
push
dec
mov
inc
mov
inc
add
mov
ret
int
mov
jmp
push
in
sbb
xchg
sbb
(bad)
cwde
in
sbb
or
movs
cld
dec
nop
dec
dec
outs
and
enter
xchg
shr
scas
mov
(bad)
adc
adc
push
mov
test
ins
sub
pop
int3
cmp
in
mov
sti
xor
mov
loope
cmps
in
add
jbe
push
in
pop
jmp
rcr
cmp
push
xlat
stos
mov
daa
neg
rol
xchg
addr16
mov
and
arpl
leave
jg
inc
pusha
popf
sbb
js
mov
jle
sub
push
shl
push
cmp
dec
ja
fsubr
mov
add
mov
inc
push
mov
push
mov
jmp
or
call
retf
(bad)
test
inc
add
rol
sbb
mov
fild
xchg
and
mov
sbb
loope
imul
dec
cmp
pop
and
dec
aas
push
mov
stc
mov
rol
mov
jns
sub
pop
fstp
adc
(bad)
fwait
mov
add
jmp
push
push
pop
dec
jmp
ror
not
je
pop
das
pushf
ja
jg
lahf
lock
push
add
daa
leave
and
stos
test
sbb
pop
mov
leave
cld
inc
fnstenv
dec
inc
xlat
call
cmp
clc
cdq
test
cmp
xor
test
(bad)
xor
pushf
enter
mov
pop
push
pop
push
and
retf
bound
lds
rol
push
mov
inc
jl
and
jo
jns
pop
or
dec
out
cmp
pop
ja
mov
inc
les
cs
ss
and
inc
(bad)
sbb
aad
dec
pop
sahf
aaa
or
xchg
hlt
push
mul
sub
out
mov
int3
stc
loope
repz
pop
adc
and
ret
movs
movs
sbb
sbb
push
es
pop
gs
and
adc
dec
add
loop
stos
xor
sbb
jge
lods
pop
fnstcw
mov
add
fcom
jg
mov
add
out
cdq
xchg
and
lods
or
mov
dec
(bad)
rol
inc
adc
jg
push
or
repnz
adc
push
sub
icebp
sbb
imul
dec
lahf
(bad)
sti
test
fcom
test
jge
scas
and
inc
call
repz
adc
out
push
lds
icebp
mov
and
pop
iret
or
adc
jmp
pop
xor
add
adc
fwait
retf
lea
sub
or
fs
arpl
into
std
adc
clc
or
xchg
mov
inc
xchg
fwait
mov
(bad)
push
sbb
lods
add
cmp
mov
or
enter
jne
sub
(bad)
jns
bound
cmp
mov
xchg
pusha
adc
pop
xchg
ror
adc
xlat
imul
or
mov
jge
jb
mov
jnp
fild
cld
(bad)
jae
mov
retf
test
xchg
std
popa
hlt
pop
call
cwde
retf
xor
lahf
mul
cmp
mov
test
stos
sahf
retf
outs
sbb
or
popf
jecxz
(bad)
and
jns
pop
push
loopne
sahf
movs
add
mov
sbb
inc
cmp
in
push
test
cmp
dec
inc
test
mov
pop
mov
lods
mov
cmp
push
loop
and
dec
mov
leave
lods
ss
(bad)
jg
xchg
jne
jp
cmp
outs
jmp
cmp
iret
test
fidiv
xlat
mov
jmp
adc
add
pop
mov
int
jl
cli
inc
pop
aaa
leave
xchg
sub
cmp
out
inc
cmp
sti
int3
fild
test
retf
adc
mov
jb
add
aaa
stos
and
or
mov
shl
cmps
xor
enter
fcomp
lahf
mov
movs
mov
sbb
mov
mov
fiadd
jl
dec
mov
jg
mov
sub
ja
hlt
aas
pop
vaddpd
div
sub
imul
inc
sbb
push
and
jnp
aaa
mov
lods
xor
push
adc
xor
mov
dec
and
test
mov
mov
scas
fdiv
test
ds
js
mov
into
pushf
dec
cmp
mov
adc
pop
mov
mov
ret
mov
lods
mov
aaa
jmp
adc
dec
pop
mov
mov
ret
push
mov
push
dec
inc
pop
mov
xadd
or
inc
loope
enter
push
popa
cmp
call
dec
scas
mov
in
in
xor
mov
std
dec
std
repz
cmp
stc
xlat
jne
inc
add
icebp
stc
dec
xor
int
fadd
inc
push
jecxz
dec
sub
daa
arpl
mov
sbb
adc
sbb
sbb
pop
dec
xor
cmp
jmp
inc
xchg
arpl
int3
pop
jl
xlat
pop
and
jmp
addr16
sub
cmps
stos
inc
cdq
xor
push
push
icebp
ror
xor
mov
sbb
ins
xchg
jno
mov
ret
test
out
ja
(bad)
sub
fcmovnbe
ret
jmp
in
aaa
pop
test
ror
dec
in
push
dec
sub
retf
adc
call
jae
sti
int
js
push
popf
xchg
or
mov
sbb
xor
jmp
xor
cli
jae
les
inc
pop
and
ins
lods
xchg
fbld
xor
mov
sti
and
cmp
sub
cdq
and
jae
inc
(bad)
jb
dec
xor
sti
push
leave
pop
les
jns
sar
jmp
push
xor
dec
pop
fwait
mov
cmps
push
stos
fcomp
imul
ja
add
std
bnd
pop
add
and
adc
inc
mov
popa
(bad)
cmp
sbb
xchg
loope
pop
inc
sub
cmp
loop
inc
cmp
lds
mov
and
ins
or
fistp
sbb
fs
stos
ds
aaa
popf
adc
mov
fild
nop
sub
popf
mov
ret
fcompp
dec
(bad)
clc
add
aam
int
sub
dec
movs
lock
ins
jle
pop
xor
ins
pop
jbe
jbe
mov
and
lods
sub
(bad)
push
pop
mov
ins
push
stos
aas
and
pop
lock
into
and
repnz
repnz
add
add
xchg
daa
mov
lods
and
dec
in
pushf
imul
scas
push
sbb
bound
xchg
hlt
push
adc
fwait
pop
cs
lods
or
cmp
jo
(bad)
in
mov
int3
sbb
jnp
aam
shr
and
das
adc
jb
xchg
aas
scas
push
lds
adc
xchg
movs
das
int
sbb
int3
push
mov
sbb
jge
in
push
enter
xchg
adc
mov
imul
push
js
dec
push
xchg
imul
dec
sub
(bad)
fistp
test
cwde
mov
loop
pop
movs
and
shl
ins
lock
add
push
retf
sbb
popa
test
sbb
dec
aaa
ss
loopne
movs
sub
fldcw
stos
sbb
mov
popa
dec
test
cmp
pop
mov
or
jo
mov
gs
and
inc
nop
mov
sbb
cmps
push
pop
(bad)
adc
lea
dec
jmp
cmp
jp
pop
and
mov
jmp
push
dec
imul
mov
mov
shr
cs
sub
xlat
jge
dec
in
sub
scas
and
retf
xchg
cld
std
cmp
dec
idiv
cli
push
shl
mov
js
(bad)
test
lahf
mov
mov
rcl
hlt
shl
add
xchg
inc
jbe
ds
and
(bad)
jmp
jne
jns
xchg
mul
mov
and
xchg
ja
mov
pop
mov
repz
pop
call
and
ja
(bad)
(bad)
fs
sub
pop
in
stos
(bad)
clc
dec
xlat
mov
ins
adc
retf
push
pop
xor
call
or
sbb
popa
mov
xchg
lahf
or
sub
adc
sub
ins
cmp
fidiv
and
fwait
push
sbb
(bad)
push
comiss
loope
ins
xchg
cld
std
icebp
int
mov
jle
daa
test
mov
push
movs
(bad)
dec
in
jecxz
leave
imul
add
test
icebp
jmp
push
or
xchg
enter
xor
fstp
das
jbe
sbb
mov
dec
arpl
fucomi
cmp
xchg
sbb
cmp
icebp
and
pop
je
adc
adc
add
loop
(bad)
ins
in
push
mov
push
jecxz
es
or
inc
xor
ret
pushf
cdq
inc
popa
iret
lock
and
xlat
add
lea
(bad)
mov
out
cmp
stc
jae
jb
mov
xor
repz
sub
jmp
cmp
xor
push
gs
mov
mov
rcpps
sbb
div
movs
xor
inc
jge
in
sbb
rcl
mov
push
sub
and
shl
dec
movs
and
push
lea
mov
rol
out
lock
shr
add
into
sbb
std
dec
or
je
retf
and
fsub
xor
(bad)
xchg
jle
jmp
mov
and
xchg
pop
jb
in
jb
pop
and
aaa
mov
jbe
add
or
mov
mov
jmp
adc
jmp
scas
pusha
pop
sbb
in
jb
lods
stos
fwait
or
in
(bad)
ror
adc
scas
cmps
sub
mov
inc
rcl
mov
in
inc
jne
jns
jae
enter
and
xchg
pop
xchg
in
mov
(bad)
mov
jbe
push
mov
push
mov
leave
ins
bound
fmul
sub
jno
stos
xchg
jbe
sahf
push
(bad)
xchg
addr16
in
popf
push
mov
adc
jno
jmp
push
ret
ins
mov
enter
or
mul
in
pop
jmp
imul
and
add
pop
fst
(bad)
fs
pop
mov
fsub
(bad)
cwde
addr16
stc
sbb
pop
pop
pop
push
in
sti
(bad)
cmp
or
jg
cmps
mov
push
pop
push
leave
clc
movs
jae
stos
pusha
(bad)
fcmovnb
lods
xchg
sahf
xor
movs
push
or
jne
xlat
pop
lea
pop
aaa
hlt
xchg
mov
(bad)
rol
sub
inc
mov
mov
mov
stc
push
mov
dec
jmp
push
retf
adc
stc
aam
out
fimul
jnp
cdq
out
shr
fcomi
sbb
adc
cdq
push
cdq
jnp
push
xchg
cmps
or
jae
mov
push
add
dec
xchg
cmp
das
repz
mov
jge
push
scas
jg
xchg
inc
cld
scas
xor
dec
push
jge
ficomp
xlat
pop
xor
xchg
pop
(bad)
mov
pop
and
(bad)
fiadd
(bad)
lds
push
outs
inc
inc
and
cmps
and
inc
lahf
mov
mov
cmps
popf
jl
fisubr
cli
test
or
enter
rol
inc
sbb
fistp
retf
(bad)
cmp
imul
mov
das
imul
jmp
dec
fidiv
fadd
dec
xor
mov
mov
lds
iret
or
dec
add
mov
push
push
loop
push
sbb
movs
pusha
test
pushf
fs
(bad)
cmp
push
cdq
clc
jnp
retf
out
out
push
es
das
pop
xor
(bad)
mov
inc
out
or
and
lahf
(bad)
or
stos
in
daa
inc
mov
sar
jge
nop
xlat
sub
je
mov
ror
xchg
dec
and
clc
jmp
mov
push
xchg
pop
mov
jno
sbb
out
sahf
hlt
xor
cmps
mov
repnz
aas
push
sub
xchg
stos
mov
(bad)
clc
hlt
sti
mov
inc
mov
xlat
adc
lds
jp
pushf
stos
mov
mov
loop
js
nop
mov
fist
adc
xchg
sub
mov
pop
mov
mov
in
rcr
cld
xchg
mov
int
sub
clc
mov
xchg
cmp
lds
cmp
xor
in
aas
push
xor
sbb
imul
pop
mov
std
push
adc
cmps
add
repnz
(bad)
das
scas
lods
mov
in
movs
sub
popa
dec
jmp
or
jo
pop
sbb
pop
test
stos
scas
clc
div
leave
ins
out
jo
adc
ins
mov
mov
mov
bnd
mov
mov
push
(bad)
mov
inc
cld
sbb
shl
pop
(bad)
xchg
addr16
or
sub
int3
iret
fmul
rcl
(bad)
xchg
xor
test
xor
inc
sub
sbb
ret
test
mov
fst
pop
inc
xor
dec
mov
pop
pusha
int3
test
inc
add
(bad)
mov
leave
loopne
imul
jb
leave
sub
adc
inc
mov
jle
sub
popf
xchg
aaa
rcl
jecxz
xchg
shl
and
inc
repnz
inc
jae
mov
xchg
rol
dec
push
nop
shl
xor
cmp
cmc
mov
loopne
add
imul
mov
test
sahf
mov
adc
pop
sbb
outs
sbb
outs
dec
lds
push
dec
aaa
out
fldenv
sti
xchg
inc
loope
ins
and
test
scas
xchg
int
cmps
mov
xor
fs
cmps
inc
idiv
add
scas
add
adc
push
pop
mov
or
pop
sub
std
scas
fst
sbb
adc
cmps
fdiv
(bad)
in
inc
xlat
aas
xchg
pop
xchg
lahf
push
aam
mov
dec
imul
in
adc
sti
outs
xchg
jno
stos
jno
stc
test
cwde
pop
mul
inc
(bad)
scas
test
xlat
add
test
sahf
cli
push
sar
jnp
and
retf
inc
cs
rcr
xchg
cmp
fwait
repz
int3
sbb
mov
and
or
movs
jno
and
movs
sub
sti
ret
fistp
adc
loopne
dec
cmp
xchg
fwait
sub
cmps
test
movs
cdq
cmc
lds
sti
lahf
pop
les
outs
sub
sti
test
hlt
push
loope
lock
stc
xor
out
test
cmp
push
test
movs
jbe
stc
xchg
lds
hlt
push
loopne
pop
push
add
fsub
mov
adc
test
sub
mov
not
mov
outs
fidivr
push
mov
std
shl
lods
mov
sbb
jmp
or
add
sar
fidiv
xor
(bad)
push
push
mov
aas
lods
cmp
inc
jnp
mov
mov
leave
mov
ret
shr
in
pop
pushf
push
push
and
inc
test
cld
push
mov
xor
int
mov
adc
ins
sbb
fldcw
sub
add
pop
out
in
mov
popa
dec
jo
cmp
fwait
pop
cmp
jecxz
shl
arpl
xchg
mov
lahf
retf
mov
cmp
sar
dec
adc
scas
fdivr
pop
sub
scas
enter
(bad)
mov
sub
mov
(bad)
shl
fistp
hlt
cmp
mov
loop
sub
cmp
ja
inc
add
je
jae
sbb
cdq
xchg
aad
lods
repz
dec
hlt
test
aad
jmp
ja
sti
addr16
aaa
and
jmp
jl
sahf
into
in
xchg
aaa
cwde
adc
mov
retf
xlat
retf
cmp
jmp
andps
push
call
jns
sbb
lock
mov
out
ret
add
mov
adc
ss
outs
pop
scas
(bad)
ret
cmp
pusha
(bad)
xor
ja
inc
out
pop
cdq
mov
lea
sbb
sbb
inc
push
mov
dec
pop
or
sub
or
pop
ins
inc
std
es
mov
ret
mov
mov
inc
repnz
sbb
pop
fs
(bad)
xchg
xor
imul
arpl
scas
adc
(bad)
mov
xlat
lock
(bad)
pop
icebp
aaa
cli
or
pushf
and
adc
cmp
es
aaa
outs
icebp
sub
inc
add
(bad)
aas
fdivr
push
fwait
jne
gs
pop
pop
sti
jnp
sbb
mov
adc
xchg
jnp
test
retf
and
jmp
iret
and
xchg
out
outs
or
(bad)
fdivr
or
jp
aas
jge
das
fwait
cmps
xchg
out
xor
lds
xchg
add
rcl
rol
pop
shl
push
mov
add
and
clc
sbb
daa
mov
push
push
or
add
stos
bnd
imul
fbld
call
into
cmp
push
stos
push
push
ror
add
fsub
(bad)
bound
sahf
lods
dec
sub
loopne
clc
sar
sbb
mov
mov
inc
mov
add
sbb
aad
out
cmps
mov
repz
ret
cs
push
imul
pusha
sbb
adc
(bad)
pop
mov
xor
sub
int
(bad)
mov
outs
xlat
add
enter
sub
popf
push
xor
enter
and
mov
shl
jp
push
or
add
rcr
lods
push
adc
test
pusha
xchg
jb
lea
div
and
(bad)
push
xchg
push
(bad)
(bad)
cmp
iret
and
jo
mov
dec
mov
or
push
add
adc
in
push
adc
fcmovb
mov
(bad)
in
cwde
cdq
loopne
mov
pop
inc
test
retf
retf
dec
inc
int
mov
mov
ins
ror
mov
mov
lock
pop
pop
mov
lea
ja
xchg
push
fistp
push
inc
mov
mov
icebp
mov
sub
retf
ror
mov
mov
dec
dec
stos
sub
int
xchg
inc
jnp
cmc
xor
mov
(bad)
cmp
add
(bad)
mov
shl
adc
ret
pop
sbb
mov
cmp
(bad)
mov
loopne
sub
icebp
call
aas
xchg
push
add
nop
inc
les
inc
jb
xor
jmp
jbe
enter
xchg
push
cmp
inc
call
es
xor
je
nop
rol
lock
inc
(bad)
int3
sbb
jle
mov
push
fisttp
pushf
ins
pop
and
inc
sub
cmp
data16
jae
push
mov
scas
inc
fs
je
js
test
loopne
add
pop
mov
mov
mov
push
out
fisubr
cmp
push
outs
aam
retf
mov
sub
sbb
mov
aas
mov
ficomp
push
loop
ja
mov
stc
and
and
mov
fs
mov
sbb
mov
push
pop
sub
imul
mov
pop
mov
jbe
push
loope
mov
dec
add
cli
and
pop
mov
mov
ret
jne
jne
fiadd
inc
mov
pop
punpcklwd
pop
retf
xor
fsubr
imul
jb
mov
xchg
add
into
in
in
retf
lods
mov
push
ins
push
inc
mov
sub
in
in
mov
jae
sbb
cmp
dec
cli
jne
add
dec
mov
mov
mov
xor
sbb
fucomi
jno
int
inc
cmp
fisubr
and
mov
dec
dec
pushf
mov
jne
dec
loopne
in
rol
stc
jecxz
rcr
fst
sub
push
in
sbb
and
aad
mov
movs
nop
inc
retf
pop
inc
loop
mov
mov
ja
fistp
inc
stc
in
retf
pop
jmp
and
pslld
jb
mov
xor
or
in
jae
mov
mov
test
daa
ds
mov
dec
jnp
xor
shr
fcmovbe
or
jg
mov
retf
sub
call
pop
mov
push
push
ffreep
inc
ss
push
xor
push
mov
shr
push
and
jae
add
ss
mov
mov
adc
sbb
or
mov
data16
cmc
cmps
xchg
sbb
xchg
dec
iret
jecxz
pop
add
call
push
fisttp
push
test
pusha
mov
mov
or
mov
scas
add
push
inc
in
out
pop
cmp
jge
pop
adc
xchg
imul
cmps
sbb
or
dec
(bad)
mov
sbb
data16
xchg
jle
lods
mov
cwde
int3
lock
ror
lods
add
fsub
push
xchg
xor
cmp
lds
xor
bound
leave
jno
jae
stc
outs
mov
push
lods
mov
add
or
jne
movs
inc
fnstcw
and
fidivr
nop
and
rcl
ins
xchg
je
mov
and
push
lock
je
inc
test
repz
cli
movs
inc
lahf
cdq
and
sbb
hlt
aam
mov
xlat
cwde
rol
pop
sbb
sbb
mov
sahf
and
(bad)
jmp
xchg
cmp
call
loop
add
aas
cmp
mov
xor
sub
fwait
inc
mov
xor
(bad)
or
aam
jns
jno
dec
push
sub
and
stc
call
mov
(bad)
jmp
bound
inc
nop
mov
jl
call
mov
sbb
cwde
in
sbb
xor
outs
or
in
xchg
fild
loopne
das
cmp
cmp
jmp
push
rol
in
sub
dec
fild
cmp
add
jmp
cmovbe
or
add
inc
jecxz
cmp
arpl
aas
and
(bad)
fcom
mov
mov
or
mov
mov
and
int
or
out
cmp
aam
adc
xor
inc
or
(bad)
icebp
cmps
cmp
sbb
aam
and
cmp
inc
pusha
push
scas
add
rcl
lods
jge
sahf
or
movs
retf
jne
mov
int
outs
cli
les
cli
sbb
inc
dec
je
sub
ins
imul
mov
xor
xchg
jb
mov
cs
scas
mov
jp
mov
jae
xor
ret
mov
daa
inc
mov
das
jle
not
mov
repz
add
push
lea
aam
repz
sbb
xchg
cwde
inc
adc
test
movs
cs
push
and
arpl
and
dec
fnstcw
and
pushf
mov
int3
icebp
lea
(bad)
jmp
pop
adc
in
int
cmp
xchg
out
div
pop
dec
test
je
sub
fistp
jmp
cs
jae
dec
retf
cmc
adc
lods
inc
dec
add
adc
je
pop
addr16
in
xor
inc
dec
(bad)
fs
add
xchg
ds
int3
retf
adc
lahf
xchg
xor
mov
mov
in
dec
push
pop
inc
dec
adc
push
xor
add
fwait
loop
(bad)
push
pop
xchg
fs
xor
movs
mov
stos
or
mov
pop
ja
ret
pop
lock
push
inc
xor
mov
fwait
push
into
rcr
pop
dec
(bad)
cld
sbb
ins
add
dec
or
xchg
xor
or
mov
sbb
push
pop
nop
push
in
fstp
jge
jno
rcr
das
pop
(bad)
jecxz
cld
dec
leave
call
jmp
sub
pop
jo
jne
mov
stos
popa
fnstsw
sahf
test
aaa
cmps
and
xchg
xlat
movs
fldcw
stos
enter
fdivr
jmp
add
sar
xchg
or
retf
mov
adc
and
idiv
ins
pop
xchg
ror
jl
and
aam
cmp
dec
jne
mov
mov
mov
ficomp
outs
and
mov
push
mov
dec
inc
inc
mov
dec
mov
stc
scas
sahf
cmp
(bad)
aam
aas
dec
lods
sub
inc
lock
iret
iret
sti
add
test
push
mov
lea
pop
rcl
dec
loop
push
fwait
dec
lods
popa
jmp
and
stos
retf
bound
addr16
ja
fnstenv
gs
bnd
push
js
cmp
fld
adc
cmp
jbe
dec
sbb
dec
jnp
shl
or
lea
or
mov
push
and
add
push
repz
outs
cld
je
adc
push
dec
rcl
dec
das
xchg
xchg
scas
ds
ins
ja
mov
push
pop
xchg
aam
popf
not
and
mov
outs
mov
fmul
call
jmp
adc
mov
xor
push
or
js
jo
(bad)
aas
add
rol
addr16
test
sbb
mov
mov
fwait
mov
sbb
in
fdiv
xor
jge
or
dec
adc
out
jbe
pop
stos
arpl
xchg
mov
int
mov
stos
mov
cmp
stc
dec
xchg
out
pop
inc
jge
cmps
loop
outs
jne
cld
or
pushf
pop
mov
lods
in
or
fcomp
mov
(bad)
push
ss
sub
pop
adc
jle
and
xor
data16
jle
and
sub
idiv
test
mov
sbb
test
shl
repz
stc
xchg
test
out
and
mov
aas
xlat
add
imul
and
sbb
mov
push
add
rol
scas
and
jbe
gs
fbld
cmps
(bad)
cmp
pop
inc
icebp
push
aad
fsubr
cdq
call
dec
add
inc
imul
mov
pop
sbb
jp
xor
out
dec
adc
movs
adc
mov
in
dec
push
lock
mov
mov
sub
sbb
int3
test
adc
sbb
push
add
lock
adc
sbb
cmp
or
movs
mov
rol
sub
lds
cmp
clc
out
pop
pop
cmp
jns
dec
or
out
xor
jp
mov
inc
out
add
cmp
inc
xchg
add
(bad)
push
aad
fcom
and
xchg
nop
pop
(bad)
jge
sbb
mov
xor
imul
pushf
neg
out
std
xlat
aas
mov
xchg
and
xchg
mov
inc
call
(bad)
xor
or
sub
fcmovne
sbb
push
in
lods
int
push
(bad)
fild
call
les
and
jecxz
dec
fisttp
xor
mov
xor
je
push
leave
jmp
pop
out
in
xchg
xor
lock
or
in
mov
sbb
rcr
mov
jmp
out
shl
xchg
and
inc
and
fisubr
and
push
(bad)
add
push
aam
or
rcl
int
mov
pop
fcom
pop
lods
sub
out
adc
jecxz
scas
in
sbb
leave
mov
dec
mov
pop
mov
xchg
xor
pop
add
cmp
jns
out
shl
leave
das
inc
jmp
cli
adc
or
test
jo
jae
jno
mov
mov
loop
xchg
or
xchg
jmp
or
mov
sbb
mov
jp
and
arpl
int
jmp
cmps
mov
pop
xchg
mov
fs
imul
xchg
push
paddsb
icebp
mov
sti
push
cmp
xor
pop
push
and
imul
sbb
fwait
cmp
popf
push
jns
mov
repnz
clc
retf
jecxz
and
pop
sahf
popa
pop
pushf
xchg
daa
sub
sbb
in
sub
popf
push
mov
xchg
(bad)
pop
mov
pop
lods
in
aas
lea
cli
popf
mov
data16
or
loopne
jp
fcmovnu
imul
or
pop
mov
mov
cli
xor
mul
push
inc
pop
in
jg
call
push
in
add
inc
xchg
rcl
xchg
or
imul
add
jb
sahf
imul
call
pop
(bad)
bnd
xor
inc
mov
sub
cs
retf
int3
les
out
and
retf
push
inc
pop
or
add
mov
movs
outs
push
in
aam
fdiv
cmc
mov
pop
or
cld
fistp
repnz
fwait
cld
pop
dec
inc
pop
mov
add
stos
fadd
dec
fidiv
enter
jae
or
xor
popa
outs
inc
aaa
xchg
jae
idiv
sub
pushf
loope
enter
push
jo
jle
repz
and
jg
mov
addr16
push
push
and
fxrstor
aaa
and
loopne
pop
xchg
lahf
enter
xor
cmp
stos
inc
leave
mov
dec
xchg
mov
(bad)
test
sbb
jge
adc
sub
jo
fs
and
jno
adc
imul
cdq
leave
sbb
add
stos
cmp
push
aas
mov
and
push
aad
xchg
adc
aas
inc
xchg
rcl
mov
sbb
ds
gs
outs
(bad)
xor
stos
loop
sub
and
in
cmps
enter
sub
out
sub
repz
jmp
movs
aam
dec
jp
jge
(bad)
push
sbb
aam
test
xor
sbb
mov
hlt
js
int3
add
lea
daa
hlt
add
clc
add
into
imul
pop
add
clc
fsub
xchg
test
fcomp
jbe
imul
sti
mov
xchg
arpl
fcmovnb
dec
stos
jns
jmp
adc
call
shr
push
inc
cs
fucomip
movs
stc
jnp
push
mov
scas
dec
inc
mov
ret
dec
jle
cli
jns
sbb
stc
repz
mov
out
imul
imul
lahf
sti
mov
push
pop
lods
push
and
dec
pop
mov
sbb
loop
dec
xchg
dec
mov
aaa
ret
dec
ror
outs
push
sbb
pop
js
add
cmp
scas
xchg
imul
ret
cmps
cmp
mov
mov
pop
lahf
movs
out
and
xor
xchg
aad
pop
xor
lds
fs
(bad)
or
mov
sti
xchg
dec
push
cmp
daa
pop
xchg
dec
sti
sbb
scas
or
aas
out
mov
jbe
mov
out
mov
retf
repz
or
jno
adc
push
push
cwde
mov
test
push
loope
std
pop
and
sub
lods
shl
cmps
or
out
jge
(bad)
mov
dec
ja
fld
pop
retf
test
mov
mov
adc
add
loop
gs
mov
add
sub
push
ror
mov
xchg
popf
hlt
lods
ins
ja
ret
or
jecxz
sbb
mov
arpl
fcomp
mov
fisub
lahf
pop
test
sub
xchg
fwait
(bad)
fstp
or
adc
mov
(bad)
je
inc
je
or
scas
sbb
mov
ror
push
ror
movs
dec
add
fst
mov
retf
mov
imul
enter
jbe
cdq
mov
ja
cmp
das
fwait
cmps
mov
sub
jae
and
pop
das
cld
jbe
xchg
test
mov
neg
dec
mov
push
inc
pop
sub
lods
leave
movs
in
loopne
(bad)
mov
or
call
mov
sbb
and
icebp
sahf
push
sbb
pop
mov
or
xchg
scas
xchg
ss
pop
dec
and
loopne
pop
mov
cmp
mov
xor
(bad)
jge
add
and
aad
sub
out
dec
mov
pop
imul
fmul
mov
clc
dec
test
sar
dec
or
mov
(bad)
fisub
in
push
dec
outs
fidiv
cmp
xor
inc
clc
dec
sbb
(bad)
popa
stc
cmp
and
inc
dec
fs
push
(bad)
std
or
aam
pop
or
or
retf
cmp
movs
inc
fisttp
jmp
add
scas
ins
sbb
xor
sbb
movs
(bad)
pop
mov
mov
(bad)
shl
out
pop
(bad)
lock
xchg
jne
retf
dec
jae
push
psrlw
pop
xchg
ins
xchg
push
ja
xchg
mov
pusha
sub
int
cmp
sub
ror
adc
lock
adc
into
and
aas
adc
mov
fsub
xchg
(bad)
and
dec
or
add
pop
clc
mov
inc
xchg
(bad)
out
out
bound
ja
inc
pop
int3
out
mov
jb
add
aas
neg
push
fsub
retf
xchg
retf
fstp
add
ins
cwde
mov
push
mov
inc
mov
out
sub
pop
shl
mov
push
in
popf
xlat
and
out
mov
or
shl
jle
xchg
pop
mov
(bad)
and
sar
push
sbb
push
je
fsubr
or
int
mov
inc
jae
inc
jge
pop
adc
les
mov
mov
scas
(bad)
icebp
aam
stos
push
hlt
add
and
test
mul
adc
pop
xor
cmp
addr16
xchg
mov
cdq
xchg
std
int3
adc
popa
pop
shl
cmp
xor
les
lea
ja
test
adc
mov
fimul
xchg
inc
push
mov
inc
add
je
inc
pushf
dec
jnp
mov
mov
cdq
pusha
sbb
lea
pop
pop
and
fisub
and
dec
adc
arpl
add
std
mov
mov
xchg
inc
dec
push
mov
inc
lock
sti
mov
inc
sub
mov
inc
repnz
cmp
ret
xchg
push
mov
xchg
adc
pop
push
mov
mov
push
inc
and
cmc
arpl
dec
bound
fisttp
push
scas
push
cmp
xor
inc
or
cmp
sbb
std
inc
sub
call
out
sti
cmps
cdq
sti
in
pusha
test
and
mov
and
inc
into
jg
mov
out
mov
xlat
jmp
sbb
push
inc
mov
bound
mov
cmp
test
daa
xor
xor
or
ds
rcr
addr16
jae
hlt
jb
(bad)
fsubr
rcl
cmp
or
jno
ss
mov
cmp
std
mov
sub
xchg
daa
mov
mov
jg
mov
pop
sub
dec
lods
es
pushf
dec
xchg
push
mov
xor
mov
mov
fist
mov
stc
jno
xchg
xor
mov
gs
push
mov
je
lahf
fwait
dec
dec
xchg
and
xor
(bad)
das
retf
ror
xor
jb
call
push
inc
adc
fisubr
xor
pop
xlat
sbb
cmc
out
ins
dec
push
jg
xchg
mov
in
push
sbb
fistp
hlt
sbb
push
sub
das
mov
shr
sub
ror
pusha
mov
or
mov
lahf
jge
mov
mov
cli
mov
jecxz
xor
xlat
movs
mov
loope
lahf
shr
pop
push
sbb
xchg
fnstcw
cmps
mov
ds
sbb
xchg
out
(bad)
stc
mov
movs
push
lods
cld
inc
shl
daa
call
rol
add
test
or
out
push
push
mov
jg
inc
push
jp
jbe
outs
add
sub
xchg
test
into
test
jne
adc
fwait
or
test
ss
cmp
mov
daa
out
repz
dec
test
xor
fs
mov
xchg
fcomp
sar
shr
and
out
xchg
(bad)
sar
retf
pushf
jecxz
ffree
xlat
mov
xchg
das
adc
xchg
in
aad
sub
push
clc
add
in
inc
test
jge
sbb
(bad)
dec
adc
inc
adc
jge
sbb
ins
jle
mov
ja
xchg
or
mov
ins
mov
outs
inc
add
add
fcmove
cmp
fstp
xchg
sub
out
jmp
or
jnp
push
(bad)
stc
sbb
dec
(bad)
cwde
jns
or
jo
jecxz
xchg
out
clc
jl
mov
push
sub
jge
mov
xchg
push
mov
mov
adc
cmp
or
and
jae
or
sub
lsl
mov
inc
bound
scas
jmp
push
adc
gs
sub
stos
dec
mov
mov
popf
mov
cdq
shl
xor
and
int3
push
add
sbb
mov
dec
js
bsr
arpl
ror
mov
fs
fcomp
mov
xor
adc
sti
in
or
inc
mov
cwde
sbb
push
test
sbb
add
ffreep
push
arpl
ins
mov
inc
mov
(bad)
xlat
ret
push
or
rcl
pop
cmp
and
push
mov
into
pop
xchg
xor
sahf
dec
(bad)
pop
mov
mov
das
scas
push
enter
fwait
push
pop
aad
mov
cdq
cmp
xadd
or
push
out
fwait
inc
xor
shl
in
push
xchg
push
pop
mov
lds
and
je
mov
(bad)
shl
jmp
loop
ds
loopne
add
movs
push
scas
cmp
xchg
mov
mov
xchg
and
jle
mov
ja
push
mov
mov
jbe
div
mov
test
js
ins
stos
mov
push
adc
inc
sbb
sub
(bad)
adc
jmp
jmp
mov
into
cmps
sub
mov
inc
dec
inc
sbb
outs
xchg
mov
arpl
cwde
jge
fistp
loope
jg
mov
cwde
or
cmps
push
inc
add
out
sub
inc
pop
neg
jnp
es
sbb
sbb
sub
ja
out
pop
mov
xor
retf
mov
(bad)
fsub
fwait
popf
sbb
ja
or
lods
pop
les
push
mov
mov
cld
cld
lock
mov
mov
sub
leave
sub
lock
inc
cwde
popa
add
out
fsubr
jns
repz
mov
call
popa
test
nop
aaa
pop
jne
pushw
sbb
cmp
inc
sbb
dec
pop
mov
fisub
push
mov
jp
hlt
ins
inc
lock
imul
mov
scas
push
test
cdq
jge
inc
out
inc
jbe
int
mov
mov
adc
mov
aaa
lea
jne
or
(bad)
iret
and
mov
or
movs
pusha
aam
cdq
out
or
sub
ins
jp
outs
in
pop
push
lock
into
xor
arpl
sbb
test
(bad)
push
jmp
mov
add
ficomp
jnp
das
cmp
cmp
not
sub
repnz
jmp
pop
stc
iret
rol
leave
dec
nop
rcr
sbb
(bad)
jbe
mov
aam
cs
xchg
imul
or
les
add
adc
adc
test
mov
popf
mov
pushf
in
shl
ins
xchg
cmp
push
xchg
xor
mov
adc
sub
inc
inc
and
or
out
call
scas
in
mov
xchg
and
or
pop
sti
daa
movs
dec
rol
sub
dec
ins
out
mov
inc
jne
or
mov
push
xchg
add
outs
(bad)
mov
gs
inc
or
hlt
add
call
push
out
mov
int
xor
test
cdq
fs
adc
mov
clc
addr16
call
xlat
pop
pusha
dec
mov
jbe
js
xchg
xchg
cdq
jo
push
mov
ds
aaa
movs
rol
iret
pop
and
cmp
adc
mov
mov
in
and
adc
je
mov
ds
mov
pop
outs
mov
and
or
test
adc
outs
(bad)
call
xor
mov
push
out
push
jnp
pusha
movs
fst
and
daa
and
xchg
jp
daa
ss
nop
imul
mov
ror
dec
sub
jl
fld
pop
lahf
xchg
in
adc
into
shr
js
test
sub
adc
dec
in
push
add
lea
aam
push
sub
or
adc
mov
vmwrite
psrad
test
stos
fimul
sub
lods
jl
not
aad
jmp
inc
pop
int
cdq
popf
push
xlat
shr
xor
lock
sti
adc
lahf
mov
pop
xor
mov
xor
mov
xchg
mov
or
and
mov
push
outs
test
iret
outs
mov
in
and
mov
or
adc
mov
inc
es
xor
jnp
dec
push
mov
pop
and
mov
mov
int
xor
les
sti
jecxz
or
xor
add
mov
js
pop
fistp
rcr
sub
icebp
sbb
push
xor
jnp
repz
mov
xor
fpatan
pusha
xor
test
dec
mov
jo
js
dec
push
mov
add
in
(bad)
jbe
pop
jmp
mov
pop
leave
sar
movs
loop
mov
outs
pushf
daa
in
add
fcom
cmp
ret
ins
es
adc
mov
daa
cmp
xor
or
or
sti
sti
fldcw
jmp
push
es
push
mov
ins
jle
mov
jns
call
mov
rcl
push
jmp
push
ret
scas
xchg
sbb
jae
jnp
lds
lahf
lods
jns
mov
out
sub
mov
aad
adc
push
iret
mov
xor
dec
jp
or
ins
aaa
lea
aas
pop
stos
imul
push
das
outs
push
push
inc
int
mov
jle
pslld
fnstenv
mov
and
scas
std
adc
add
push
or
enter
sub
and
sub
test
add
push
icebp
je
sub
jbe
les
call
mov
dec
or
ja
mov
daa
mov
es
retf
loop
ret
int3
add
mov
pop
pop
or
xchg
aas
inc
pushf
mul
cmp
fld
stos
cmp
jmp
ins
stc
sub
jl
mov
push
lock
push
dec
stos
jnp
fs
rol
sub
in
dec
repz
repnz
movs
stos
or
test
dec
xlat
push
scas
lods
jnp
xchg
xchg
mov
add
inc
sub
cld
int3
retf
xor
data16
imul
cmp
int3
into
push
jae
nop
mov
cmp
dec
iret
sbb
clc
imul
ffree
xchg
mov
sbb
add
pop
je
fistp
cdq
adc
push
xor
fadd
jl
cmp
push
hlt
adc
jb
(bad)
or
push
je
cmp
jg
fdivr
sbb
sub
ficom
dec
lods
xchg
xor
sbb
bound
sbb
popf
pop
(bad)
ja
cld
pop
lds
pop
mov
pushf
adc
ja
fbld
sahf
ror
cli
pop
xor
jmp
lahf
mov
out
maxps
imul
fld
repz
xchg
cmc
cmp
clc
cli
popf
push
popa
mov
scas
mov
das
in
xor
shl
xchg
hlt
and
cmp
int3
adc
dec
outs
daa
add
mov
shl
add
aad
mov
pop
fimul
outs
fstp
mov
push
fdivr
imul
xlat
xchg
inc
sub
enter
cmp
jae
adc
sub
outs
inc
mov
sub
aam
or
pop
inc
jecxz
add
jp
push
lahf
adc
adc
clc
add
and
add
ret
das
mov
sbb
hlt
loopne
cmp
movs
fadd
add
add
pusha
sub
adc
addr16
push
lods
mov
cld
or
loope
retf
pop
add
fdivr
imul
(bad)
into
sbb
repz
scas
xchg
push
and
mov
iret
and
repnz
jne
(bad)
mov
sbb
sbb
mov
rol
push
mov
jne
neg
push
or
test
ror
data16
sets
hlt
mov
and
or
adc
adc
ror
sub
fisub
out
and
(bad)
icebp
pop
xor
icebp
fs
pop
and
or
in
mov
leave
push
sbb
jb
push
ins
push
test
dec
pusha
sti
sub
fadd
dec
push
mov
lods
rol
xchg
xchg
es
das
pop
std
imul
sbb
mov
lock
ror
icebp
push
mov
in
mov
jns
push
test
pop
jnp
stc
sub
inc
or
mov
pop
rcr
jae
mov
xchg
out
sub
stos
and
mov
jb
mov
cmp
add
and
mov
pushf
ss
fidivr
inc
test
xor
arpl
sub
into
xchg
(bad)
dec
mov
inc
cdq
fistp
rcl
mov
lahf
rcl
push
frstpm(287
adc
(bad)
jl
out
cmp
and
call
adc
or
cwde
sti
loop
push
push
sub
out
jmp
retf
fisub
in
pop
jno
fcom
out
lods
cdq
mov
mov
push
mov
mov
ins
pop
cs
jns
mov
daa
mov
cmc
xor
in
int3
mov
movsx
mov
xchg
ins
ja
add
scas
jmp
outs
inc
pop
jg
scas
retf
jecxz
dec
jle
mov
gs
das
loope
xchg
mov
loop
std
sahf
and
sbb
and
add
(bad)
push
mov
cmp
jecxz
mov
xchg
and
or
dec
inc
xor
sbb
popa
mov
aam
inc
pop
fisubr
and
pop
out
daa
add
mov
loop
sbb
sub
inc
pop
pop
gs
lods
mov
cmp
fld
stos
mov
outs
jp
test
mov
add
pop
pop
into
sbb
xchg
push
cdq
pushf
or
aam
fmul
push
(bad)
sti
das
fmul
jmp
cmps
in
push
sbb
daa
imul
test
ja
bound
mov
mov
(bad)
and
outs
pop
push
and
jnp
fisubr
in
std
retf
mov
fs
loop
or
test
enter
cmp
mov
repnz
add
jns
and
jne
sbb
daa
jecxz
retf
imul
and
aas
push
inc
or
stos
pop
push
xchg
sub
out
push
aad
cmp
in
dec
sbb
sub
aam
test
inc
dec
push
xor
dec
pop
or
xchg
das
out
or
or
mov
dec
(bad)
sub
das
push
xchg
(bad)
and
shl
les
out
xor
mov
clc
inc
push
imul
movs
loop
push
in
pop
loop
sub
in
jne
push
add
aaa
jns
add
and
ret
xor
pop
sub
cs
jmp
gs
jmp
rcl
inc
in
add
(bad)
imul
push
aam
or
push
popf
adc
mov
mov
jae
and
into
sub
jns
jns
jp
out
pop
lds
jge
xor
lds
cwde
cmp
jmp
add
mul
das
xor
jge
test
xchg
cli
mov
aas
in
out
movs
aam
push
cmp
inc
not
scas
cmp
xchg
sbb
in
push
jp
push
jmp
mov
repnz
test
sahf
inc
(bad)
fsub
adc
(bad)
jne
mov
mov
shl
icebp
cmp
push
cmp
in
mov
rcr
or
xor
(bad)
sub
lahf
dec
pop
out
cmc
mov
dec
mov
aas
pop
and
inc
add
sub
jle
out
xrelease
adc
add
cmp
shl
push
jg
inc
mov
sti
sbb
(bad)
icebp
daa
mov
jo
cmps
scas
inc
mov
mov
pushf
jmp
sahf
cdq
jg
xchg
jmp
xor
js
xchg
xchg
push
mov
sbb
test
xor
fild
data16
cmp
mov
xchg
lods
jno
push
dec
cmps
mov
(bad)
jmp
xor
pop
pop
out
out
daa
aas
addr16
sbb
cmc
lock
cdq
and
xchg
jle
je
inc
imul
fwait
add
and
and
fs
cmp
push
add
dec
pop
xor
fdecstp
jmp
jl
pop
dec
(bad)
jp
jge
imul
into
and
push
and
mov
push
mov
push
sbb
cdq
inc
add
push
sahf
pop
mov
mov
or
pushf
int
push
mov
popa
push
sub
mov
idiv
push
stos
test
jb
dec
sti
cmp
sar
movs
pop
fisttp
(bad)
mov
call
xchg
icebp
sub
cmps
int
jmp
jmp
xchg
push
mov
(bad)
pop
mov
cmp
or
shl
dec
dec
inc
pop
ret
xlat
in
adc
mov
das
inc
jns
into
or
inc
cmp
stos
cdq
cmp
inc
cld
xor
gs
cmps
fisttp
dec
push
(bad)
shl
addr16
mov
fisubr
scas
pop
jns
xchg
in
adc
(bad)
and
pop
xchg
fcomp
into
xor
mov
out
jmp
icebp
cwde
push
sbb
push
sbb
fmulp
retf
call
shl
and
xchg
jbe
outs
xchg
clc
push
ficom
dec
push
sbb
mov
add
mov
and
xchg
and
adc
rol
mov
fidiv
jo
push
xor
call
cwde
ss
retf
cmp
xor
sbb
mov
stos
mov
dec
jne
int3
ss
inc
mov
(bad)
add
mov
inc
je
adc
jne
test
je
(bad)
fcomp
sbb
or
shl
popf
and
imul
test
push
in
dec
dec
fdiv
pop
dec
test
bound
test
inc
xlat
mov
xor
fisttp
mov
mov
lods
mov
fisub
push
cmps
daa
xchg
mov
pop
jp
sub
push
dec
ds
cs
scas
jg
xchg
jns
sub
cmps
inc
mov
dec
and
fstp
sub
fadd
push
dec
or
dec
ja
sbb
int3
inc
inc
popf
xchg
aas
cdq
and
sbb
and
add
xchg
rcr
shl
jns
push
enter
jnp
aaa
xor
(bad)
test
sti
pushf
add
sub
mov
xor
dec
mov
add
add
ret
adc
dec
push
mov
lahf
dec
in
outs
fiadd
and
(bad)
in
sub
cmc
in
add
inc
add
icebp
jge
pop
clc
mov
and
lock
nop
stc
ds
stos
das
cmp
cmp
addr16
fdiv
cmp
hlt
and
enter
push
xchg
jl
test
cmp
iret
in
pushf
ss
push
sti
int3
ficomp
sub
mov
aad
adc
stc
fst
jae
adc
(bad)
pusha
push
imul
inc
movs
mov
ss
push
mov
pop
jmp
sub
adc
or
imul
stos
push
cdq
imul
add
cmps
dec
cmp
fsub
hlt
inc
dec
dec
dec
lods
pop
mov
jecxz
dec
iret
in
pop
pop
xor
mov
push
mov
out
(bad)
loope
sbb
sahf
movs
pop
xchg
pop
pop
fld
xchg
xor
or
bound
jnp
cs
jecxz
scas
in
sub
iret
jne
rep
pop
pop
enter
rcl
dec
nop
aaa
or
xor
push
retf
mov
aam
xchg
test
pop
inc
cmp
aad
adc
(bad)
popf
dec
mov
sbb
sti
mov
jmp
xchg
adc
sub
mov
jmp
push
sbb
lods
dec
push
and
or
in
mov
cmc
mov
out
sar
jg
sbb
shr
es
rcr
jle
in
sahf
mov
mov
jp
stos
adc
pusha
call
xor
(bad)
aas
xchg
repnz
mov
addr16
pop
retf
lds
jle
popf
xlat
sub
cmps
out
imul
lds
call
test
sahf
mov
cmps
adc
push
arpl
xchg
lahf
sbb
mov
jl
test
loopne
adc
hlt
pop
add
push
pop
jmp
ss
loop
mov
cld
jne
shl
mov
out
fsubr
cmp
mov
int
adc
xchg
cmp
dec
popa
mov
dec
imul
mov
outs
sahf
stc
push
xor
xor
movs
lock
out
ja
xchg
xor
add
inc
add
pusha
add
cwde
mov
sbb
push
out
retf
fdivr
adc
(bad)
std
cmpxchg
mov
mov
retf
clc
or
js
mov
dec
ds
pop
sahf
lods
adc
ss
cdq
neg
jg
dec
inc
in
xor
popa
test
fs
sub
dec
pop
jge
xor
sbb
pop
in
mov
sub
sbb
cs
and
shl
je
(bad)
(bad)
call
push
ret
imul
jle
(bad)
imul
and
dec
scas
jne
loop
jne
test
mov
xchg
retf
mov
test
sbb
mov
fsub
out
push
mov
lds
sub
and
loope
jle
leave
add
es
pop
xor
into
es
mov
dec
push
test
sub
(bad)
pop
xchg
sub
adc
jl
test
mov
jae
lea
cmps
jbe
bswap
outs
xor
rep
hlt
xchg
mov
movs
dec
(bad)
call
call
push
push
jb
and
xor
xchg
xchg
fadd
mov
jecxz
push
pop
xor
cli
fadd
mov
mov
inc
cmps
jle
fiadd
lock
les
ja
push
cld
iret
int3
adc
test
add
leave
call
in
xchg
xchg
pop
ror
adc
mov
(bad)
cld
in
mov
add
int3
or
lahf
dec
or
aam
(bad)
mov
(bad)
clc
mov
es
or
push
es
test
mov
scas
(bad)
mov
and
mov
out
mov
test
inc
mov
jl
movs
mov
add
push
(bad)
mov
lods
mov
xor
jp
mov
(bad)
call
movs
stos
and
or
push
dec
int3
dec
popf
cmp
mov
mov
cmovo
xchg
xor
inc
ret
cmp
ins
test
push
cmc
mov
aad
sub
or
dec
iret
dec
inc
lods
push
add
int
xor
sar
mov
mov
adc
stos
push
pop
mov
in
mov
nop
dec
int3
push
fiadd
outs
fadd
jne
xchg
mov
ror
scas
pop
sub
add
jb
add
xor
push
mov
jae
outs
adc
(bad)
lods
(bad)
push
(bad)
adc
sub
js
sub
stos
(bad)
jo
adc
pop
sub
cdq
sbb
cli
(bad)
hlt
jl
mov
pusha
in
xor
gs
add
jmp
xor
stc
test
cmc
stos
stos
lahf
scas
cmp
pop
pop
push
adc
mov
push
jmp
gs
mov
nop
mov
mov
call
ins
push
int
adc
jo
dec
dec
add
mov
popa
jle
push
xchg
pushf
fcomp
pop
movs
in
test
mov
sub
sbb
adc
loopne
ret
mov
xchg
jge
stos
popf
dec
(bad)
sbb
xchg
and
jnp
mov
mov
icebp
push
(bad)
movs
mov
add
arpl
lds
loop
int
nop
and
mov
fcmovnbe
inc
mov
jo
lahf
enter
or
push
lock
in
inc
jge
test
push
push
jbe
add
test
mov
jne
mov
fwait
(bad)
retf
int3
movs
dec
into
fwait
adc
or
mov
cmp
jp
sub
dec
inc
cmps
sub
ds
out
adc
shl
data16
pop
xlat
hlt
mov
ins
xor
adc
je
push
add
push
add
mov
jp
outs
xchg
rcl
(bad)
mov
loop
pop
mov
int
jg
inc
add
retf
scas
add
push
mov
cmp
scas
stos
xchg
add
mov
mov
lods
shr
mov
fsubr
push
sahf
mov
lock
into
imul
ins
dec
push
mov
bsr
xchg
push
jns
sbb
xchg
mov
icebp
xchg
(bad)
pop
cmp
mov
sub
fild
mov
sti
cmp
and
cmc
repnz
neg
test
test
mov
push
imul
adc
jp
add
push
push
sub
inc
adc
inc
mov
test
pop
in
aam
lds
movs
sub
(bad)
pop
dec
popa
xor
aam
jl
not
dec
add
xor
mov
cmp
out
inc
outs
sub
mov
xchg
jno
pop
hlt
xchg
mov
add
and
sub
jne
adc
repz
popf
enter
sbb
inc
fadd
cdq
stos
xchg
scas
push
(bad)
pop
pop
and
push
cmp
nop
movs
pop
sbb
loopne
jb
jae
jle
inc
out
out
pop
and
push
cwde
xchg
iret
xor
pop
xor
fcom
mov
adc
push
jne
inc
inc
xor
leave
jge
push
jmp
ds
xchg
push
xor
int3
pop
hlt
(bad)
sub
iret
lea
fidivr
mov
adc
fiadd
push
add
sub
iret
xor
jbe
shr
pop
(bad)
scas
sub
out
das
lea
mov
xchg
sub
xor
test
sub
push
das
xlat
mov
(bad)
mov
std
jg
ret
ror
fistp
add
push
mov
loope
rol
fidivr
adc
popa
cmps
xor
dec
cmps
outs
data16
outs
ja
or
xchg
jmp
cwde
(bad)
in
aad
inc
(bad)
out
xchg
inc
xor
xchg
mov
push
cs
test
push
mov
retf
shl
(bad)
or
jns
shr
pop
dec
pop
add
std
lock
loopne
mov
pop
xchg
cmp
lea
(bad)
xor
mov
cmp
test
bound
daa
cmp
mov
pop
(bad)
(bad)
dec
adc
in
aam
xor
outs
je
jne
pop
mov
(bad)
fmul
jbe
mov
rcl
cmp
pushf
and
cmp
jmp
push
add
push
adc
stos
popa
stc
pop
fsub
lds
sub
pushf
ret
pop
add
in
dec
push
pop
popa
out
cmps
xchg
hlt
aas
xchg
and
mov
mov
daa
xor
mov
or
popf
lods
arpl
mov
push
lahf
or
push
sub
dec
retf
jae
int
neg
mov
call
pop
mov
sbb
inc
neg
sub
push
and
ja
aaa
inc
mov
gs
add
ret
mov
loopne
xchg
jns
movs
ja
cwde
mov
dec
xchg
mov
mov
test
imul
movs
and
lock
mov
push
pop
xor
push
test
mov
mov
(bad)
pop
adc
mov
aaa
xor
cs
mov
shr
or
ss
xchg
fst
ss
test
es
pop
pop
(bad)
daa
les
dec
adc
adc
stos
out
and
sbb
cdq
inc
adc
jecxz
push
mov
dec
inc
add
call
inc
stc
xchg
push
rcl
int3
xchg
imul
or
sti
(bad)
cmp
inc
fcom
sub
adc
or
dec
sub
fbstp
sbb
sti
(bad)
jmp
pop
test
mov
push
push
pop
cmp
mov
lahf
lods
inc
push
adc
jno
mov
retf
sub
push
inc
xchg
cmp
xchg
rcr
fs
mov
mov
pop
dec
aas
cdq
push
test
inc
mov
ds
test
xor
mov
mov
loope
mov
shl
push
retf
aaa
add
ret
mov
ss
scas
pop
std
jle
mov
enter
icebp
push
imul
mov
mov
jbe
xchg
movs
aam
mov
shl
sar
xor
push
inc
cs
aas
jp
sahf
cmps
fistp
out
je
not
cmp
and
outs
cmp
mov
pop
std
sbb
sub
fmul
jle
and
lds
jnp
retf
dec
cmp
enter
stc
shr
pop
pop
pop
adc
imul
mov
adc
daa
mov
fdivr
shr
fisub
imul
or
pop
mov
xchg
mov
and
jmp
inc
jae
xchg
xchg
lea
mov
imul
cmps
mov
scas
or
sti
imul
outs
call
ja
aad
test
mov
push
test
cmc
sub
push
mov
xchg
fwait
mov
outs
xor
and
test
sbb
jge
cdq
jle
ja
leave
push
shr
xchg
rol
jmp
js
iret
or
jge
push
xlat
sbb
xchg
mov
push
enter
fimul
mov
push
dec
int
xchg
popa
lds
xor
in
call
es
cmp
imul
aaa
les
pop
lahf
push
sar
push
cmp
sub
into
xor
and
mov
fild
dec
add
adc
mov
call
icebp
and
dec
sti
movs
mov
movs
in
xor
sbb
mov
sub
add
sti
aad
and
jmp
pushf
out
std
add
adc
movs
mov
imul
sbb
pop
dec
cmp
scas
ja
push
lds
mov
sbb
mov
mov
lds
out
xchg
clc
push
inc
(bad)
cmp
push
inc
popa
pop
ret
xchg
xor
dec
add
and
xchg
daa
sahf
adc
call
scas
(bad)
mov
and
jl
mov
mov
sub
sbb
test
mov
adc
add
pop
mov
jbe
enter
add
js
add
adc
icebp
lds
xor
retf
repnz
push
aad
mov
sbb
jns
mov
jae
xchg
jge
lods
inc
stc
ficomp
or
shr
sar
(bad)
jmp
jnp
ret
je
into
arpl
mov
or
jnp
or
mov
push
movs
(bad)
sbb
test
sahf
or
sub
jmp
pop
add
pop
test
sbb
push
fs
adc
fadd
add
inc
jle
ret
jmp
jecxz
push
push
fcomp
mov
cs
push
into
jmp
dec
scas
(bad)
dec
mov
mov
cmp
add
push
sub
ficom
nop
enter
movs
mov
js
mov
xchg
inc
lods
dec
ins
xchg
repnz
loop
loop
pop
xchg
sbb
dec
cs
sbb
dec
xchg
fisttp
test
shl
dec
stos
push
mov
or
dec
xor
movs
out
sbb
mov
loop
daa
cmp
ins
push
cmp
inc
adc
retf
dec
mov
xchg
mov
cmp
cmps
pushf
mov
shr
jge
jle
inc
or
(bad)
mov
cdq
imul
loope
retf
in
add
cdq
mov
dec
mov
jp
push
mov
popa
mov
push
in
aad
mov
pushf
pop
push
jo
inc
add
cmp
hlt
and
pop
xor
cmp
dec
pop
inc
ds
xor
jns
pop
mov
loope
pop
in
mov
mov
dec
push
mov
les
cld
stc
inc
fs
add
fucom
adc
pop
dec
(bad)
fcomp
sahf
xor
mov
sub
add
cwde
frstor
dec
fadd
sub
pusha
fild
mov
pop
(bad)
repz
push
loope
adc
rol
or
inc
stos
and
pop
sti
push
pop
mov
adc
test
int3
ds
lds
(bad)
inc
lock
mov
and
out
and
daa
inc
mov
outs
jle
and
cmp
stos
lock
mov
pop
xor
fwait
ins
fbld
mov
outs
repz
fwait
jno
rcl
lock
xor
pop
(bad)
cmps
pop
out
cs
loopne
push
(bad)
test
ss
or
xchg
fldcw
div
loope
ret
inc
ins
push
sahf
cmp
adc
nop
mov
and
data16
mov
adc
cmp
rol
stc
push
inc
shr
div
jl
cmc
mov
shl
rcl
jecxz
repz
xchg
mov
cmc
cmp
cmp
data16
push
add
mov
icebp
push
mov
add
jmp
int3
call
clc
in
ins
push
(bad)
cwde
sbb
dec
inc
jmp
clc
mov
cmp
add
data16
sbb
or
repnz
neg
and
add
add
mov
in
adc
cs
cmps
cmp
xor
mov
fwait
leave
call
inc
stos
adc
mov
aas
and
(bad)
or
fcom
je
adc
jbe
xchg
or
cmp
rol
ret
add
fiadd
mov
mov
push
push
xor
mov
inc
adc
ror
addr16
mov
cmp
rcr
mov
aaa
pop
je
out
test
dec
rol
(bad)
or
sub
ror
test
sub
inc
jne
arpl
add
int
jl
sbb
lods
sbb
and
mov
pop
pop
dec
aas
push
sub
scas
scas
pop
jmp
out
push
retf
mov
jle
cmp
inc
nop
fcomi
push
push
icebp
stos
jae
int
in
sub
cmp
pop
inc
sub
bound
ins
lds
or
adc
adc
fcom
out
sbb
mov
mov
or
(bad)
ds
(bad)
mov
and
push
mov
mov
push
rcl
mov
and
fcomp
inc
sbb
lea
out
out
mov
(bad)
iret
mov
dec
xchg
outs
pop
cmp
mov
adc
les
ja
aam
jmp
aas
(bad)
or
repnz
mov
mov
in
adc
jmp
test
sbb
es
jno
es
dec
dec
cmps
or
cli
mov
mov
mov
in
ja
xor
dec
sub
fsub
test
sbb
mov
les
and
movs
das
fwait
or
inc
and
ins
inc
adc
shl
int3
ss
ss
sti
sbb
mov
into
cld
xlat
jae
sub
ss
sub
mov
mov
push
pusha
iret
out
pop
mov
add
inc
sub
loop
retf
and
cmp
sub
sbb
and
int
dec
mov
movs
sbb
pop
test
enter
xor
movs
or
inc
jp
ins
(bad)
and
mov
movs
adc
cmp
js
sbb
xchg
hlt
push
test
mov
mov
out
and
jmp
adc
cmp
jns
je
mov
psubw
push
jne
push
inc
sbb
xchg
lds
sbb
loopne
or
cmps
ins
in
xor
xchg
cmp
sub
aad
iret
adc
sub
dec
and
imul
push
(bad)
les
sbb
fild
in
lods
adc
and
pusha
call
retf
pusha
mov
movs
xor
push
(bad)
es
mov
pop
add
mov
je
aas
dec
jg
pop
ret
adc
jge
xchg
fld
push
daa
pop
leave
fistp
pop
sub
(bad)
aad
cmp
xor
sub
stos
or
dec
pop
jp
out
das
sbb
movs
jg
inc
call
push
push
sbb
in
xchg
fadd
jno
neg
or
mov
sbb
add
add
add
aam
xor
outs
(bad)
cmp
lahf
jns
or
cwde
jae
xchg
scas
cld
mov
sub
jmp
jmp
sbb
mov
das
sub
inc
dec
repz
cmp
add
retf
add
and
hlt
xor
cli
cmc
in
ror
mov
sbb
mov
push
mov
inc
shl
ret
sub
and
and
call
stc
lods
nop
inc
mov
cmp
jge
ficomp
and
popa
sub
lahf
mov
int3
and
cli
and
sbb
dec
clc
or
sub
jecxz
dec
mov
lock
and
pusha
and
push
fmul
xchg
(bad)
mov
lea
int3
loop
push
or
inc
into
mov
int
loopne
cmp
sub
xor
cmps
cmc
xchg
cmc
fdiv
cmp
xchg
sti
dec
lea
add
add
sub
loopne
test
mov
mov
ret
jmp
lds
xor
outs
rcl
inc
adc
lods
lahf
rcl
push
das
mov
add
jmp
in
call
mov
ret
inc
xor
xor
push
or
mul
in
push
mov
mov
stos
xor
ret
push
cdq
jp
mov
cmps
jbe
pop
xor
popa
ja
mov
jmp
add
test
sahf
pop
popf
cmp
mov
shl
dec
test
xchg
(bad)
repnz
outs
sahf
es
adc
push
test
popf
inc
std
jne
push
push
dec
mov
jp
(bad)
(bad)
cmp
mov
dec
scas
mov
jae
movs
stc
ins
push
jo
push
or
das
and
mov
mov
scas
sbb
push
add
xchg
sar
addr16
push
enter
xchg
stos
in
fld
(bad)
lahf
pop
mov
in
xlat
cmp
outs
(bad)
fdivr
push
adc
and
adc
and
ficom
movs
pop
pop
add
loop
call
iret
pop
cmp
rcl
pop
cmp
pop
stos
jmp
fyl2xp1
inc
shl
in
shl
sbb
scas
xor
(bad)
enter
cmp
cmp
sbb
pop
je
and
clc
xchg
mov
popa
hlt
scas
jnp
mov
mov
jl
dec
xor
or
mov
jl
jb
bound
jmp
rcr
ja
das
lods
stos
adc
pusha
cdq
jecxz
rcl
adc
jmp
in
and
ficom
cmp
mov
dec
iret
xchg
lea
fcomp
mov
mul
ficomp
dec
cmp
inc
push
ret
and
sub
xchg
adc
lahf
mov
out
in
and
cld
pop
cld
and
jno
ja
(bad)
das
mov
push
ins
aam
push
and
fcmovb
pop
loope
nop
cli
dec
lock
cmp
dec
mov
mov
call
adc
mov
ret
in
nop
scas
mov
or
jmp
push
mov
jl
ja
test
mov
jo
xor
and
cmps
sub
je
mov
jl
dec
and
push
xchg
pusha
test
pushf
sbb
pop
cmp
mov
mov
mov
(bad)
in
push
mov
add
outs
sti
movs
pop
sbb
in
push
fstp
rcl
cmc
shr
(bad)
std
add
rcr
aas
and
fcomp
push
lahf
fild
lahf
mov
adc
fst
adc
and
call
mov
test
fbld
jnp
push
xchg
push
jo
xchg
or
cmp
ins
sub
add
adc
lea
ins
ins
mov
repz
leave
or
jecxz
nop
sbb
sbb
pushf
jns
inc
inc
jnp
pushf
or
retf
lea
ja
shl
xchg
pop
xchg
sbb
fstp
mov
int3
call
jmp
aam
cmp
int
mov
sbb
sub
(bad)
aam
push
mov
jo
(bad)
cmc
pop
or
lea
sahf
or
inc
jnp
mov
mov
imul
dec
pop
out
loope
push
or
dec
(bad)
xchg
jns
mov
outs
xor
movs
jb
ror
mov
popa
sar
add
aad
retf
mov
adc
jmp
cdq
add
mov
clc
dec
xchg
add
add
(bad)
cli
jl
sbb
lahf
push
test
mov
(bad)
(bad)
mov
mov
fst
movs
mov
in
jl
push
out
mov
push
jns
(bad)
mov
jecxz
sub
mov
pop
xchg
pop
ins
jmp
popa
in
dec
push
shl
cmps
bound
mov
mov
push
scas
mov
add
dec
push
and
fmul
inc
sbb
cdq
push
dec
dec
icebp
out
jmp
stc
test
sar
ds
sahf
push
push
push
mov
adc
sub
mov
dec
(bad)
add
cmc
push
or
push
push
xor
sahf
push
mov
out
fisub
sahf
ins
jns
std
sub
push
mov
sbb
cmp
push
pusha
dec
out
add
cmp
dec
dec
dec
jle
dec
xchg
add
aad
mov
ins
pop
mov
mov
adc
push
mov
aad
movs
out
inc
addr16
cli
inc
mov
push
dec
into
call
cwde
mov
inc
test
fisttp
ror
(bad)
adc
push
data16
enter
jnp
jmp
retf
in
xor
mov
and
test
fwait
xchg
push
aam
les
es
or
xchg
(bad)
test
mov
dec
inc
xchg
fadd
inc
sti
add
inc
push
inc
cs
in
or
sbb
mov
jns
and
shr
push
or
(bad)
in
mov
jmp
sub
sbb
in
or
mov
ficom
and
cmp
jno
fcmovnb
xor
dec
sub
xchg
mov
push
adc
or
and
push
mul
or
mov
mov
adc
imul
push
lea
nop
in
rcl
mov
not
mov
leave
stos
jmp
sub
push
inc
and
cmp
mov
fadd
rcl
(bad)
mov
and
fdivr
cmp
push
and
fs
(bad)
loope
mov
pop
adc
sbb
mov
fwait
lock
xchg
sub
mov
clc
int3
cld
addr16
fs
popa
adc
inc
xor
stos
out
xchg
sbb
outs
and
sub
jno
pop
fs
stos
(bad)
cwde
jb
push
scas
sar
push
inc
mov
sbb
sub
popa
loopne
cmp
(bad)
or
(bad)
fild
popa
adc
and
pop
push
loop
mov
jmp
xor
add
cmp
jmp
ja
stc
gs
shl
out
mov
adc
fimul
mov
xor
mov
sbb
mov
sub
out
ret
and
jmp
mov
and
mov
xor
xchg
mov
in
not
inc
shr
mov
pop
push
mov
push
dec
adc
popf
(bad)
stos
inc
mov
pop
jmp
int
pop
push
dec
mov
pop
adc
jne
mov
aad
(bad)
mov
xlat
push
inc
jecxz
femms
(bad)
in
xchg
sbb
aas
pop
inc
push
ja
in
or
int
jo
int3
es
sbb
inc
inc
aas
loopne
fcom
data16
(bad)
mov
jno
mov
mov
fild
outs
dec
and
jmp
jnp
out
ja
cs
arpl
sub
in
test
cmps
out
out
arpl
xor
test
pop
add
dec
cs
inc
mov
inc
in
fldcw
enter
(bad)
mov
aam
cld
jae
cmp
push
push
cmp
sub
bound
pop
mov
fs
(bad)
mov
aaa
jne
movs
dec
and
or
xor
or
in
pop
addr16
sbb
sbb
inc
or
cmp
lods
xor
jnp
movs
std
fldenv
outs
aad
ret
jmp
(bad)
mov
in
mov
shl
push
jge
add
mov
shl
pop
clc
sbb
add
cdq
add
dec
out
stc
in
in
and
add
sti
push
mov
jb
bound
pop
iret
cmp
xor
push
mov
dec
xor
in
movs
out
inc
push
mov
loop
stos
fisubr
mov
cmp
sub
lods
pushf
cmp
stc
sbb
loop
pop
(bad)
or
ins
xacquire
sub
mov
test
aas
sti
lock
jno
sbb
adc
std
pop
out
push
fdiv
pusha
jb
add
and
mov
push
cmc
xor
out
or
xor
sbb
popf
sbb
push
sbb
adc
sub
cs
xchg
outs
(bad)
div
sbb
add
fistp
cmp
adc
sub
xor
js
sub
js
xchg
cmc
and
inc
mov
pop
push
(bad)
push
addr16
and
retf
scas
push
out
mov
lahf
(bad)
jge
stc
push
pop
lock
adc
inc
dec
xlat
cmp
(bad)
or
fnstenv
cs
adc
ret
pop
mov
jge
pop
std
pop
shl
push
adc
mov
mov
mov
jns
pop
leave
inc
retf
dec
dec
push
xchg
or
pop
mov
repnz
and
jg
data16
(bad)
inc
sub
cmp
jl
dec
movs
int3
jg
in
icebp
dec
(bad)
jecxz
cs
aad
jo
call
(bad)
mov
dec
jp
xor
das
jg
nop
out
call
mov
xor
stos
out
inc
pop
(bad)
dec
mov
cmps
mov
jns
jp
addr16
xor
cmc
sub
jl
jb
enter
and
rep
out
stc
push
pop
shl
pop
push
pop
mov
sbb
cmp
out
dec
clc
fnsave
imul
shl
ja
icebp
js
push
pop
xacquire
cwde
cmp
dec
jle
ja
push
cmp
icebp
mov
stos
mov
push
cmc
lods
fcmovu
data16
adc
mov
into
jecxz
cmp
test
cli
fnsave
nop
fwait
les
lea
aaa
out
dec
adc
xor
lahf
mov
xlat
test
pop
and
xchg
xor
or
stc
cmp
mov
mov
pop
jno
adc
cld
jmp
push
dec
call
icebp
cmp
push
mov
adc
cld
out
cmps
add
xlat
fisttp
sub
fnclex
jnp
add
aad
dec
adc
repz
test
inc
fcomp
adc
and
das
stc
data16
mov
in
rol
pop
adc
dec
xor
push
push
inc
sar
add
mov
or
mov
imul
sub
out
out
lea
cmp
or
mov
xchg
xchg
shl
sub
pop
jo
dec
jbe
ret
ins
fadd
pop
fdivr
lock
push
lea
jmp
not
inc
fwait
shl
and
pop
jp
and
mov
pop
repz
and
adc
push
jo
lods
loopne
push
add
pusha
int3
adc
hlt
fisttp
cli
jno
xor
push
inc
sub
or
lahf
mov
or
inc
std
or
fistp
ror
jno
inc
out
xor
mov
enter
push
or
mov
cli
or
addr16
push
das
in
call
mov
pop
icebp
jmp
push
cmp
test
clc
dec
dec
dec
sbb
es
mov
popa
les
push
into
into
jnp
pop
fstp
xchg
xchg
pop
fwait
outs
call
inc
(bad)
in
ins
sahf
xor
push
xor
mov
jmp
add
aam
add
imul
or
push
pop
mov
test
push
shl
adc
sub
inc
int
in
xor
test
cmp
ret
addr16
fsub
into
jns
ror
sbb
xchg
out
mov
mov
out
addr16
mov
scas
cli
sub
es
movs
or
push
and
and
ins
nop
stos
outs
cwde
adc
fmul
pop
inc
dec
adc
aad
mov
lock
sub
popf
pop
cmp
dec
jo
ins
cmp
xchg
cmp
fiadd
popf
mov
lods
scas
mov
retf
sub
outs
test
jns
jno
and
or
ja
add
dec
shl
out
add
xchg
xor
ins
cld
fucom
arpl
inc
std
mov
(bad)
and
pop
fstp
add
xchg
mov
repz
fist
aaa
and
inc
mov
inc
mov
mov
xchg
inc
sar
cmp
mov
mov
mov
scas
add
inc
or
add
loope
sub
pop
mov
ins
fwait
cwde
cdq
pop
sbb
leave
sti
xchg
inc
ret
out
inc
mov
or
in
fsub
push
out
and
and
lods
std
push
adc
mov
fs
jge
jb
gs
addr16
(bad)
adc
jmp
add
inc
jg
pushf
pop
mov
outs
or
xchg
mov
frstor
movs
enter
pop
ds
jo
cs
in
jle
sbb
mov
movs
add
dec
adc
mov
ret
dec
and
inc
cmp
in
movs
xchg
add
mov
aas
mov
stos
arpl
xor
pop
mov
jmp
cmp
in
jge
arpl
out
ret
xlat
fld
adc
inc
adc
out
mov
outs
jo
test
and
pop
lahf
pop
xchg
inc
adc
iret
in
fwait
std
pop
xchg
sbb
add
or
lods
add
sbb
int
inc
sbb
(bad)
mov
fcmovnb
or
cdq
adc
ja
clc
sbb
pop
(bad)
out
cmp
jns
imul
or
add
icebp
shl
sub
lods
xchg
dec
ja
push
pop
mov
adc
loop
jp
js
addr16
test
add
mov
jns
sub
lahf
call
or
call
pop
xchg
outs
xchg
shr
mov
push
add
cmp
mov
lahf
sub
retf
lahf
dec
mov
adc
inc
pop
jno
sub
shr
fisubr
das
push
lea
out
in
push
mov
jle
aas
aas
mov
in
iret
xor
jno
inc
lods
inc
xchg
sub
pop
jne
fnstenv
stos
or
push
js
fimul
or
rcl
jb
adc
stos
inc
xor
ret
add
cmps
jno
test
cdq
mov
adc
cmp
dec
into
sbb
enter
int
lahf
or
xor
push
mov
popf
add
inc
jle
and
ja
fst
fld
xchg
jne
in
and
pshufw
ficom
mov
mov
ret
fild
das
daa
lds
or
mov
adc
ds
add
inc
cmp
das
sbb
xor
jp
popa
mov
dec
test
xor
cli
fucomip
mov
cmps
lods
lods
(bad)
mov
cmp
or
sub
js
aam
(bad)
cmp
bnd
or
xor
pop
or
add
aam
sar
sbb
(bad)
ss
mov
jno
xchg
xlat
or
arpl
test
mov
mov
es
mov
mov
mov
jno
vcvttss2si
stos
aaa
dec
repnz
and
or
pop
lds
shl
popa
jecxz
adc
push
cmp
out
pop
arpl
push
add
ss
stc
inc
dec
jl
mov
movs
vfrczpd
pop
(bad)
aaa
push
cdq
movs
js
pop
xor
and
xchg
imul
push
push
(bad)
sbb
outs
bnd
les
popa
sbb
bound
sti
inc
inc
mov
fild
sub
stc
xor
add
sbb
mov
and
jne
inc
fld
(bad)
js
jmp
push
jmp
xor
ss
lahf
int3
inc
inc
mov
fdivp
loop
fistp
mov
mov
adc
push
sub
or
cld
sub
ins
mov
and
int
sub
cmps
xchg
sahf
xchg
cmp
(bad)
fmul
cmp
push
sub
inc
dec
loope
xor
sti
push
mov
neg
out
and
mov
mov
cld
lods
adc
ror
xchg
clc
scas
dec
js
fld
ss
pusha
(bad)
out
and
and
hlt
sub
mov
fistp
mov
out
jle
and
xchg
mov
mov
aaa
sub
pop
push
pop
push
push
jb
jmp
mov
ja
add
outs
gs
(bad)
fmul
sbb
xor
mov
call
in
bound
or
push
mov
xchg
pop
mov
scas
fs
and
jmp
mov
lds
repz
clc
xor
call
(bad)
test
int
mov
add
movs
aas
or
push
out
add
(bad)
xlat
stos
xor
mov
dec
push
aad
inc
pop
pushf
int3
cmp
mov
ret
or
and
add
xchg
ins
shl
mov
ja
lea
mov
push
sbb
mov
cmp
aad
mov
inc
mov
sbb
sbb
loope
push
mov
push
jnp
les
adc
sub
xchg
push
xor
test
pop
push
test
mov
loope
push
lahf
test
sub
fadd
(bad)
gs
add
jmp
fcomp
pusha
mov
fwait
call
pop
push
and
pop
and
test
ret
sub
mov
stc
sub
jg
and
(bad)
mov
inc
or
push
jb
xchg
mov
xchg
lds
shr
push
inc
outs
mov
dec
aas
push
xor
retf
xor
rcl
mov
ja
(bad)
mov
dec
popaw
cdq
je
adc
fsubr
jne
xchg
or
push
ja
in
dec
mov
mov
dec
das
jg
push
jp
rcl
je
stc
sub
pusha
ds
hlt
cwde
mov
(bad)
xor
popf
xchg
dec
fstp
je
scas
sbb
scas
aad
pop
add
push
es
inc
push
mov
jnp
icebp
es
ins
inc
add
fstp
cmc
mov
xor
es
jae
cmp
mov
mov
jbe
and
and
mov
xor
out
and
jo
push
add
and
retf
jecxz
xchg
sub
mov
cmps
pop
xor
stc
inc
mov
dec
fs
(bad)
mov
jle
in
in
aad
push
jne
and
or
add
scas
shl
mov
std
icebp
loopne
fs
sub
mov
sub
bnd
or
fwait
jne
fcmove
(bad)
(bad)
repz
daa
rol
ss
in
jle
xor
fcmovbe
push
(bad)
rcr
fisub
push
sub
cmp
add
shr
out
or
adc
dec
(bad)
aaa
dec
or
or
(bad)
les
sub
iretw
test
add
mov
add
neg
xchg
push
daa
jnp
xchg
and
movs
push
cwde
call
loop
jmp
jb
sbb
sbb
ss
sbb
and
loopne
outs
push
add
pop
pusha
adc
pop
sub
cmp
jae
daa
mov
retf
push
jo
ret
pop
aam
xlat
aas
cmp
pop
es
fisttp
fist
ret
sub
ret
dec
cmp
movs
sti
sahf
enter
jle
mov
es
test
bnd
dec
gs
mov
push
sbb
xor
mov
sbb
add
clc
mov
push
stos
cwde
cmp
hlt
fsubr
sub
sub
test
bound
xor
outs
pop
fwait
push
sub
add
ror
pop
mov
mov
pusha
jl
push
xchg
jns
in
imul
jb
in
dec
sbb
cmp
xor
pusha
inc
jg
sub
in
cdq
jnp
sti
out
test
(bad)
out
scas
dec
js
ss
repnz
call
and
scas
gs
xchg
test
inc
mov
scas
xor
mov
push
and
aad
ror
out
jg
xor
xor
fstp
sub
imul
stos
enter
arpl
inc
inc
out
adc
cs
inc
jle
mov
mov
test
adc
icebp
push
dec
clc
sub
scas
je
dec
or
sar
retf
inc
mov
mov
fidivr
inc
lods
add
xchg
push
xchg
rcl
cld
sbb
out
xchg
push
icebp
fs
push
jecxz
cli
push
xor
cmp
cmp
loop
and
sahf
lea
mov
dec
loope
add
lea
cld
loope
ror
popf
(bad)
repnz
rol
pop
lock
shl
pop
pop
cmps
xor
mov
pop
lods
or
jne
aam
push
and
mov
dec
jmp
int3
call
les
std
test
push
scas
ja
pop
push
push
ret
jnp
and
iret
push
cmp
movs
xchg
add
rol
imul
mov
add
gs
imul
lock
(bad)
mov
movs
xor
mov
jns
in
or
mov
pop
ins
cmp
dec
jle
add
pop
int
outs
xchg
xlat
in
mov
(bad)
mov
xchg
pop
add
data16
cli
mov
es
sub
pop
add
push
ficom
xbegin
dec
es
adc
js
adc
push
xchg
fdiv
popa
leave
cmp
jnp
sbb
sbb
iret
fs
dec
adc
jnp
ja
mov
jo
push
pusha
xlat
shl
inc
mov
stos
xor
sbb
repnz
lock
loope
xor
pop
(bad)
sbb
jns
fcom
xchg
inc
rol
jbe
sbb
and
inc
and
iret
jnp
or
dec
adc
je
jae
loop
les
not
dec
mov
mov
imul
mov
mov
pop
retf
nop
out
mov
rol
cmc
push
sub
(bad)
adc
pop
out
cmc
popa
bound
bound
loope
xor
or
mov
cmp
push
jns
mov
sbb
mov
test
mov
in
hlt
jecxz
xchg
dec
jo
mov
or
aad
mov
inc
adc
out
iret
cs
out
jmp
jp
std
mov
or
mov
xor
fwait
std
and
inc
adc
jne
xchg
aas
call
jmp
jg
mov
or
push
popf
xor
mov
push
cmp
shl
sbb
dec
sub
outs
lds
cmp
sub
add
scas
out
call
addr16
xchg
xlat
and
out
ficom
and
sbb
sbb
sahf
xchg
adc
loop
pushf
adc
sbb
adc
retf
mov
aad
jp
or
mov
das
clc
push
test
jb
push
js
ror
cmp
js
xor
movs
(bad)
jmp
push
cli
fstp
ret
retf
xchg
pop
mov
adc
loop
push
mov
pop
lds
pop
stos
retf
xchg
pop
add
sti
push
pop
adc
dec
fild
adc
jne
pushf
fs
push
push
or
mov
sub
gs
or
push
jg
loope
pop
pop
cmp
sbb
ja
sti
into
pop
jmp
mov
xchg
cmps
add
arpl
shl
out
sti
arpl
inc
popa
loop
cmp
lock
xor
out
arpl
mov
fdivr
sub
xor
push
lock
jge
loopne
pop
in
popf
scas
into
jecxz
and
cwde
addr16
stos
mov
xchg
cmp
daa
iret
pop
cmp
aaa
sti
in
test
push
mov
jmp
jno
movs
scas
mov
aaa
les
mov
pop
aam
pop
(bad)
movs
sahf
(bad)
xlat
push
popa
cmps
iret
cmp
frstor
dec
lock
push
(bad)
test
mov
dec
outs
sub
xor
ret
and
(bad)
(bad)
loope
clc
and
mov
push
mov
lods
movs
mov
cmps
sar
or
test
mov
push
jo
in
inc
ror
and
push
int3
addr16
cmp
xchg
xchg
std
or
gs
pushf
jno
mov
cmp
xchg
call
mov
push
sbb
xchg
stos
stos
pop
popa
jp
in
sbb
fndisi(8087
pusha
mov
mov
sub
add
mov
aaa
les
inc
arpl
mov
pop
xor
ja
adc
test
dec
adc
(bad)
hlt
fldl2t
cwde
dec
sub
dec
sbb
adc
stos
lahf
mov
xor
or
mov
mov
cmc
xchg
imul
aaa
(bad)
mov
std
dec
ins
lahf
push
in
mov
jmp
ss
xchg
jb
arpl
cdq
adc
dec
inc
adc
or
mov
shl
cwde
cmc
aam
in
inc
arpl
in
(bad)
repz
addr16
aaa
mov
mov
imul
shl
nop
mov
push
stos
mov
add
loope
js
outs
stos
icebp
dec
rcr
lds
mov
mov
pushf
sbb
sti
mov
rcl
fmul
and
nop
cld
adc
stos
mov
in
push
cmps
push
jbe
push
mov
xor
inc
and
es
pop
(bad)
or
pop
mov
test
(bad)
rcr
cs
ins
xchg
inc
xor
sbb
(bad)
arpl
jns
add
(bad)
retf
cmp
xchg
jo
(bad)
hlt
push
inc
xchg
dec
rcl
sub
sub
push
mov
mov
sub
pushf
aam
jmp
icebp
(bad)
out
cmp
aas
xchg
mov
push
dec
xchg
lds
or
movs
jl
stos
out
or
ficom
lahf
adc
test
mov
jmp
push
pushf
or
jo
add
imul
sub
dec
cmp
bound
add
dec
inc
sbb
dec
unpckhps
popa
fadd
fidivr
dec
inc
(bad)
addr16
cmp
retf
or
dec
mov
call
lods
mov
xchg
sub
idiv
xor
imul
add
out
sbb
in
xor
loop
add
push
cmps
dec
inc
imul
xor
dec
fcom
ja
ins
push
pop
sbb
cdq
inc
xor
mov
mov
cwde
sbb
fst
cmps
repz
(bad)
cli
and
pop
loop
jl
call
mov
push
in
and
out
adc
pop
cmp
and
mov
mov
add
enter
and
push
mov
pusha
ins
xor
push
movs
xor
push
adc
in
test
call
(bad)
in
rcr
or
fstp
or
push
xchg
pop
arpl
out
jmp
sbb
(bad)
jle
sub
mov
ret
outs
cmps
xchg
cmp
rcl
sub
or
xchg
jo
mov
jmp
sar
mov
mov
jb
xchg
pop
add
adc
jmp
(bad)
retf
rcl
adc
push
inc
and
lock
clc
gs
pop
mov
jmp
ficomp
clc
test
out
inc
(bad)
popa
mov
outs
(bad)
mov
test
int3
pop
pop
cmc
xchg
lahf
cmp
or
xchg
into
xchg
loope
cli
jmp
ds
pop
xchg
or
out
clc
xchg
sbb
sbb
sub
(bad)
in
xchg
jne
xchg
dec
(bad)
jl
bnd
ror
and
icebp
inc
fs
aaa
jnp
inc
dec
xchg
sub
xchg
cli
pusha
outs
in
je
popa
outs
push
adc
jl
cmp
outs
in
mov
mov
out
jle
imul
outs
cmp
nop
and
emms
push
mov
cmc
jmp
dec
mov
mov
pop
leave
dec
ins
add
mov
sub
sub
cmp
sar
icebp
sbb
and
xchg
cs
xor
(bad)
inc
inc
xchg
or
mov
and
fcomp
adc
repnz
adc
xor
cli
fdiv
pop
or
or
xchg
outs
test
out
rol
jbe
sub
push
cdq
jns
in
jne
lods
stos
ret
adc
pop
fwait
rol
fbstp
mov
push
push
mov
mov
dec
mov
stos
dec
jae
in
pushf
(bad)
or
push
jne
push
je
outs
push
(bad)
out
out
pop
mov
popf
cmps
and
sahf
or
das
pop
push
(bad)
jecxz
and
clc
adc
dec
mov
xchg
iret
movs
scas
or
mov
sti
(bad)
push
ret
push
pop
rol
sbb
(bad)
jno
cmp
int3
outs
movs
mov
fild
cmps
in
dec
or
xor
test
fstp
sub
mov
jns
popf
sub
stc
stos
mov
pushf
fcmovnu
rcl
mul
fild
mov
inc
lock
in
ins
or
cs
outs
pop
mov
mov
inc
lock
int
icebp
aaa
jo
cmc
pop
jae
cmps
dec
mul
arpl
nop
xchg
inc
das
or
sbb
cli
outs
xchg
push
adc
pop
cli
push
js
mov
pop
das
cdq
ret
cmp
xchg
push
(bad)
scas
sub
call
pop
out
xor
pop
dec
or
add
xlat
pop
add
add
test
fidiv
adc
pop
call
mov
cmp
dec
stc
cmp
fld
(bad)
stc
sub
dec
imul
mov
mov
pop
mov
push
mov
call
cmp
mov
in
pop
(bad)
ror
sub
adc
into
ins
outs
popf
adc
inc
sub
rol
jge
jno
in
xchg
das
xor
mov
lds
pop
nop
mov
bound
inc
mov
test
inc
xor
jmp
mov
xchg
mov
inc
mov
jmp
push
outs
sbb
lods
aad
and
jo
(bad)
pop
push
(bad)
pop
ins
loope
fucomip
xchg
jns
mov
add
imul
sbb
sub
xor
xchg
jno
pop
pop
js
jp
pop
jle
aam
and
popf
pushf
(bad)
ja
in
jne
ins
int
sub
dec
into
loop
push
in
push
sbb
outs
cmps
pop
jbe
cmp
ret
push
mov
add
(bad)
pop
inc
inc
daa
push
(bad)
or
mov
shl
aad
nop
clc
hlt
adc
cli
push
push
test
push
pop
and
push
dec
mov
add
inc
dec
mov
push
dec
push
fld
push
adc
or
into
sub
inc
es
mov
inc
in
test
outs
push
and
aas
jnp
cmps
xor
ds
rcr
dec
call
xor
mov
scas
cmp
or
test
add
push
cmp
div
mov
fcomp
lock
ss
daa
dec
loopne
call
daa
scas
xor
cmp
sbb
hlt
inc
adc
push
aad
pop
shl
bound
outs
add
inc
pop
or
push
mov
push
adc
lods
dec
lods
mov
inc
inc
and
or
lods
dec
inc
shr
sub
inc
push
add
mov
push
xor
adc
and
cmp
dec
lea
(bad)
mov
cmps
cmps
push
dec
test
in
mov
cmp
jg
xlat
aaa
dec
pop
adc
into
xlat
cli
aaa
data16
enter
pop
push
lods
mov
movs
stos
les
iret
retf
pmovmskb
nop
pusha
cmp
out
add
dec
cdq
call
cdq
xchg
addr16
das
mov
test
jns
or
lods
fs
cld
nop
jbe
fistp
shl
mov
push
and
(bad)
push
popf
cli
lock
neg
push
and
gs
aaa
es
enter
sub
in
cmp
push
adc
jne
das
or
cmp
sub
sbb
cs
mov
call
push
jmp
push
cmp
adc
mov
fsubr
fsubp
sub
jle
and
scas
das
out
push
js
out
shl
cli
mov
(bad)
push
lahf
push
retf
imul
fist
adc
(bad)
popf
enter
jmp
das
pusha
pop
mov
mov
jnp
popf
stos
imul
sbb
add
jbe
mov
push
in
push
gs
das
sar
and
xchg
shl
shr
ins
xor
je
jo
and
add
adc
mov
mov
in
fisub
ret
pushf
push
or
push
inc
ss
loop
stos
pop
adc
sbb
xor
sub
push
rcl
outs
cmp
push
sti
aas
jp
jecxz
jb
stos
ret
inc
icebp
cdq
inc
push
fsub
movs
sub
jnp
(bad)
push
xchg
push
hlt
jge
ins
clc
xor
in
and
mov
jne
ds
rcl
pushf
push
repz
icebp
iret
jmp
sti
inc
sahf
dec
outs
loope
shl
loopne
test
jmp
imul
lea
fsub
bound
jns
addr16
jp
inc
jo
mov
push
pop
retf
fnsave
add
inc
sbb
sub
add
imul
xchg
das
adc
std
in
push
test
and
jno
xor
lea
sub
clc
std
out
push
cmp
js
retf
adc
push
das
scas
lods
minps
cli
or
ja
dec
or
inc
in
loope
jmp
ins
add
in
dec
inc
mov
or
and
mov
add
arpl
and
xchg
push
shl
pop
mov
paddsb
pop
and
mov
lds
inc
cmp
pop
call
aaa
fdiv
push
rcr
jbe
or
adc
repz
leave
arpl
mov
(bad)
test
fidivr
add
call
mov
xchg
dec
jns
push
ss
add
dec
mov
sbb
mov
sub
les
adc
fnsave
mul
arpl
imul
jmp
xor
lods
mov
sub
mov
in
push
sti
adc
inc
sbb
lahf
jle
bnd
arpl
ja
sub
in
xchg
xchg
inc
or
add
push
sbb
cmc
inc
xchg
xor
jbe
sub
xor
aas
cld
mov
inc
mov
xlat
jle
cmp
and
cmp
jl
cmp
sar
scas
add
and
fidiv
mov
pop
lock
cmc
fsub
imul
mov
sbb
jnp
pop
int3
cmc
push
cli
mov
(bad)
retf
stos
test
call
shl
in
bound
fstp
xchg
adc
ret
mov
pushf
daa
inc
ret
jae
cmp
popa
mov
pop
cmc
dec
imul
adc
das
call
mov
(bad)
les
icebp
mov
push
sub
fld
and
adc
xchg
call
test
jle
pop
iret
push
retf
mov
mov
or
int3
xlat
or
mov
jle
mul
cmps
leave
cmps
mov
xor
dec
int3
mov
sbb
adc
cmp
cmp
push
int
adc
(bad)
loopne
je
mov
pop
rcl
fnstcw
outs
cmps
sub
in
(bad)
xor
dec
nop
je
cmp
mov
mov
into
cs
inc
lods
daa
sbb
aad
inc
ffree
aam
repnz
push
dec
cmps
mov
mov
mov
test
ss
add
inc
add
or
cmps
inc
imul
repz
mov
daa
cmp
mov
mov
inc
dec
loope
jmp
shl
sti
lock
mov
sbb
inc
dec
stos
xor
mov
gs
aam
mov
es
and
ins
cmp
push
aam
or
push
push
cli
mov
clc
jg
pop
loopne
fcmovnb
addr16
(bad)
and
call
or
mov
mov
pop
popf
pusha
inc
jge
xchg
rol
add
pop
(bad)
mov
out
sar
retf
sahf
lods
test
push
dec
cmp
mov
fidiv
dec
xor
lea
sbb
jg
or
rcr
cmp
and
out
cmp
mov
scas
mov
lods
inc
stos
call
sub
enter
imul
sar
fisttp
mov
gs
cmp
jp
leave
mov
mov
cli
xchg
movs
sub
xor
jmp
in
xchg
xor
movs
mov
mov
sbb
gs
stc
and
xor
je
sbb
test
int
les
mov
out
or
(bad)
sub
push
cld
push
(bad)
iret
(bad)
jg
retf
or
out
test
mov
sbb
repnz
test
cmp
popa
ret
(bad)
rcr
mul
push
imul
(bad)
mov
jle
nop
pusha
add
popf
retf
push
shl
inc
stos
xor
pop
(bad)
cli
sbb
dec
ins
retf
adc
and
sub
jbe
(bad)
sti
jge
xor
popa
mov
sbb
xlat
dec
imul
dec
push
call
call
jmp
jge
icebp
inc
or
lods
pop
jg
aaa
not
ret
pop
xchg
out
aam
jecxz
(bad)
jmp
sub
movs
adc
jmp
call
cmp
sub
cmp
rol
xor
and
xchg
xor
mov
jo
fsubr
pop
mov
jmp
dec
jns
adc
ret
test
ss
popf
stos
outs
lods
dec
in
das
test
retf
in
iret
daa
adc
mov
scas
outs
add
fisttp
xor
jl
inc
scas
xchg
scas
loop
jmp
shr
sbb
sbb
dec
push
(bad)
cmp
jnp
pop
fnstsw
or
fild
and
push
jae
push
retf
loopne
iret
in
xor
jge
addr16
mov
mov
je
mov
cmps
or
ins
pusha
movs
sub
dec
and
sbb
js
adc
jecxz
sub
mov
je
adc
pop
pop
mov
ds
mov
or
mov
call
mov
mov
sub
fdiv
mov
retf
out
jns
sub
push
cli
sbb
rcr
xchg
xchg
and
imul
jg
inc
push
cmp
sbb
movs
xchg
mov
mov
pop
add
jp
mov
and
push
loope
jmp
icebp
cmp
jne
cdq
out
cwde
(bad)
scas
add
pusha
pop
daa
ds
stos
in
or
mov
adc
popa
and
scas
xor
mov
jno
adc
paddusw
mov
(bad)
iret
ror
and
hlt
sbb
aas
dec
mov
adc
dec
mov
xchg
push
lods
and
daa
xchg
mov
inc
stos
xor
cmc
inc
dec
push
mov
xchg
push
mov
push
fmul
jl
mov
xchg
aam
mov
push
inc
fdivp
rcr
pop
mov
jo
fmul
imul
push
mov
dec
dec
xchg
out
mov
push
ja
cwde
ror
scas
mov
daa
xchg
popf
add
and
popf
popa
adc
inc
mov
sub
add
cmp
push
xchg
pop
inc
jp
pop
xor
out
mov
mov
cmp
sbb
xor
mov
xor
add
xchg
jmp
adc
mov
xchg
icebp
imul
enter
test
dec
inc
es
loop
jl
out
mov
adc
mov
lods
ds
cmp
xor
scas
inc
inc
mov
retf
and
push
mov
js
clc
sub
stos
mov
mov
pop
scas
xor
and
and
adc
out
imul
xor
inc
push
mov
add
sbb
sahf
out
arpl
ins
(bad)
jle
adc
sbb
pop
xchg
mov
xchg
mov
inc
mov
inc
(bad)
jbe
scas
push
add
cli
popf
cdq
xchg
xor
retf
ds
sbb
xchg
xor
pop
pop
popf
data16
xchg
loop
jb
(bad)
rcl
scas
sub
scas
das
mov
or
mov
xor
test
cmp
push
inc
push
mov
mov
push
and
jl
cs
out
dec
ja
shl
cmps
std
jmp
(bad)
xchg
outs
jg
add
xlat
sbb
pusha
push
push
and
sbb
xor
jno
and
mov
gs
call
sti
cli
jg
or
pop
test
xchg
je
mov
ins
xor
movs
outs
daa
or
inc
pop
nop
cmps
js
sbb
cli
xchg
sbb
outs
out
das
std
pop
xchg
cmps
mov
add
add
int3
push
inc
mov
or
sub
jp
daa
pop
out
xor
and
sub
loopne
lods
jecxz
inc
not
fadd
dec
push
movs
mov
sub
ins
test
imul
cli
push
iret
jne
adc
pop
sub
clc
jl
push
std
and
popa
sahf
retf
test
fnstenv
movs
and
shl
scas
cmp
mov
mov
shr
push
cmp
inc
mov
stc
mov
imul
xor
adc
xchg
movs
mov
and
pop
xchg
and
mov
jecxz
xor
ins
nop
push
jl
out
mov
(bad)
popa
imul
out
jmp
and
pop
push
jae
shl
cmc
pop
push
aaa
data16
push
mov
lods
ss
mov
sbb
std
and
pusha
pop
sbb
pop
ret
call
je
xchg
jmp
(bad)
sub
out
and
(bad)
and
dec
loop
mov
mov
jecxz
and
jns
xor
out
inc
mov
test
gs
popa
out
push
adc
cdq
lds
xor
in
mov
xchg
jne
cmp
push
stc
popa
xchg
jne
sbb
fld
lds
sahf
out
sti
jno
jecxz
xchg
addr16
or
cmp
sbb
jle
sbb
pop
add
inc
pop
push
inc
popa
xchg
pop
add
dec
or
daa
test
inc
push
mov
push
mov
imul
push
xlat
adc
push
sbb
loop
xsaves
xchg
inc
repnz
nop
xor
add
mov
(bad)
push
clc
dec
int3
sbb
push
rcl
jg
inc
xor
and
mov
pop
mov
inc
inc
mov
mov
pop
in
das
ja
sbb
hlt
add
mov
push
cli
dec
stos
inc
(bad)
xor
sbb
push
cli
imul
xchg
cmp
leave
push
in
push
cmp
(bad)
repz
sar
mov
lds
or
xor
sbb
cmps
inc
jnp
mov
adc
retf
and
popa
add
and
je
pushf
stc
xor
neg
cmp
mov
or
hlt
ja
lahf
cmp
fild
imul
adc
int3
test
iret
push
rol
ret
movs
dec
add
out
dec
rcr
adc
mov
into
fild
int
add
data16
xchg
inc
(bad)
jg
fist
outs
mov
stos
sub
stos
mov
mov
cmp
or
rol
sub
out
je
sbb
sbb
or
mov
cmps
push
add
or
adc
mov
cmp
or
aas
call
icebp
in
jns
add
stc
movs
pop
(bad)
jmp
pop
inc
cmp
(bad)
and
cli
loope
call
(bad)
in
or
out
push
push
dec
or
cmp
movs
hlt
xchg
and
pop
(bad)
adc
pop
cmp
aaa
xor
jno
imul
push
pop
shr
xchg
fucom
dec
inc
push
mov
in
es
mov
push
imul
xchg
stos
psrad
pop
xchg
imul
iret
mov
outs
cmp
xor
iret
mov
mov
or
iret
sub
pop
dec
and
push
cmp
fwait
lods
or
shr
lock
cmp
(bad)
enter
mov
mov
(bad)
(bad)
inc
or
ss
push
cmp
loop
ja
jne
pop
loop
movs
mov
mov
js
aaa
(bad)
iret
out
sti
dec
clc
mov
shl
sub
jg
add
add
sub
and
in
ins
mov
out
bound
out
lea
dec
ss
rcr
psraw
aad
xchg
aas
inc
das
inc
inc
mov
fwait
pop
pop
mov
xchg
out
pop
cdq
cmovp
in
out
pop
icebp
retf
shr
test
xor
loop
add
or
bound
fnclex
dec
sub
lods
and
push
sti
stos
and
cdq
pusha
mov
dec
rcl
add
inc
dec
or
iret
movs
mov
repnz
inc
inc
mov
shr
adc
pushf
adc
gs
dec
out
test
dec
in
test
cs
in
mov
mov
cmp
addr16
inc
push
sbb
xchg
push
mov
jno
push
(bad)
cdq
retf
cmp
push
data16
lds
cmps
fdivr
xchg
jbe
pop
(bad)
shl
ror
add
sub
loope
mov
mov
xchg
jne
inc
cmovs
ror
scas
mov
mov
cmp
or
add
(bad)
pop
enter
xchg
cs
inc
mov
cmp
sahf
test
push
push
jne
jmp
adc
fstp
inc
and
jp
hlt
call
std
shl
nop
inc
(bad)
xchg
lea
sti
xchg
jno
xor
mov
add
(bad)
xor
pusha
push
xchg
push
push
stc
in
push
push
mov
dec
loopne
ja
test
dec
jmp
mov
in
shr
test
inc
sbb
out
pop
dec
fwait
out
out
xor
and
or
inc
jle
ja
xchg
retf
repz
(bad)
mov
jge
int3
std
loopne
add
push
push
rol
sbb
inc
cmp
xchg
sub
push
xor
xchg
outs
mov
aas
sti
lods
shl
and
mov
stc
xor
mov
hlt
inc
mov
lds
push
or
dec
pop
std
add
jg
sub
pusha
cmp
sbb
cmp
lea
and
add
add
sbb
push
shl
xor
mov
out
loope
push
mov
into
scas
lea
sub
inc
js
cmp
ins
popf
pop
jo
xor
mov
pcmpgtb
pop
call
pop
loope
test
cmc
xor
imul
rol
push
adc
mov
mov
inc
shl
xor
test
or
add
mov
push
jnp
push
not
out
inc
mov
test
out
xor
jecxz
xchg
xor
mov
sub
(bad)
shl
cld
jno
(bad)
push
mov
pusha
in
or
sub
mov
xchg
cli
ror
pop
pop
sbb
cmp
fisub
mov
(bad)
mov
xor
fild
test
adc
jmp
retf
cmps
mov
lock
cs
mov
mov
nop
mov
ss
cld
inc
sahf
ss
ins
pop
ss
icebp
loopne
movs
cdq
scas
inc
mov
mov
push
call
mov
mov
ss
mov
pop
mov
nop
push
int3
fsub
or
add
jae
movs
ja
mov
sbb
sbb
jns
data16
lods
mov
cld
push
or
loopne
pop
or
les
jle
push
sbb
xlat
cmp
pop
inc
rcl
mov
inc
fild
add
aas
push
sub
clc
repnz
jmp
sti
popa
mov
jp
mov
dec
jl
stc
imul
call
call
jno
retf
stc
jbe
jnp
loope
sub
js
mov
sbb
aam
inc
dec
jno
xor
dec
mov
cld
ret
push
(bad)
into
inc
retf
and
(bad)
leave
(bad)
and
and
xchg
out
icebp
icebp
fcomp
cmp
lds
sbb
addr16
xchg
retf
stos
cwde
hlt
into
mov
sub
mov
test
xchg
icebp
mov
pop
shr
lar
aam
outs
loop
and
jbe
jo
aaa
out
repnz
loopne
ins
ds
pop
sbb
pop
pop
pop
ins
out
or
repnz
inc
or
mov
jne
ret
ror
sbb
push
and
sub
xlat
cld
push
scas
in
adc
shr
cmp
les
out
lods
jo
repnz
push
adc
push
inc
out
enter
mov
arpl
pop
jl
mov
(bad)
or
push
push
mov
push
cmps
xchg
sbb
adc
cmp
pop
jl
dec
cmps
mov
jle
or
push
adc
pop
and
arpl
mov
lods
push
mov
xlat
pop
dec
fs
bound
call
cdq
cmp
pop
pop
and
jae
test
ja
inc
fsubr
sbb
mov
outs
loope
std
adc
cmp
mov
or
cmp
ja
nop
(bad)
mov
jb
loopne
lods
jecxz
mov
jne
xlat
inc
pop
push
push
push
pop
cmc
out
mov
int
dec
retf
sub
mov
fiadd
aad
ds
and
inc
xor
jae
sbb
jl
fld
cdq
pop
pop
aam
push
das
shl
daa
lahf
xor
push
cmp
jae
movs
dec
xor
xchg
or
xchg
or
xchg
out
dec
adc
retf
mov
xor
pusha
fisub
cdq
pop
ja
lea
sub
inc
and
in
outs
lods
pop
iret
nop
xchg
adc
dec
sub
adc
movs
and
dec
icebp
xor
xor
sub
cmp
push
mov
retf
mov
add
mov
not
pop
scas
out
inc
inc
fist
push
ret
jle
jb
add
xor
sbb
jecxz
xchg
push
mov
xor
in
cs
xchg
push
stos
daa
cs
cld
mov
mov
push
xor
jl
sub
push
int3
pop
xchg
leave
fcomp
push
cld
ror
js
add
xor
sbb
pop
xchg
stc
xchg
sub
xchg
push
sbb
shr
out
pop
in
xor
mov
push
gs
or
pop
loopne
movs
sbb
xchg
jg
adc
movs
or
mov
cmp
std
xlat
inc
ins
scas
(bad)
jl
stos
cmp
inc
imul
xor
sub
add
xor
push
mov
dec
mov
iret
call
(bad)
sahf
ret
and
sub
leave
aas
mov
into
add
rol
cmp
jns
ret
cmp
shr
dec
sub
arpl
repnz
sbb
stos
and
test
loopne
scas
push
outs
mov
out
add
sub
ins
imul
jns
lods
inc
bound
aad
les
xchg
ss
mov
out
clc
outs
mov
fld
xchg
movntq
out
and
shr
sub
add
cmp
mov
dec
push
out
inc
add
outs
(bad)
lock
ror
mov
or
inc
sbb
jecxz
sti
(bad)
daa
leave
xchg
fadd
xchg
mov
xor
jo
mov
hlt
mov
sti
cwde
mov
aad
or
mov
daa
sbb
push
pop
es
add
sbb
mov
imul
scas
ja
push
inc
pop
cs
fwait
into
push
and
add
or
inc
jb
mov
sbb
sbb
inc
dec
mov
xor
in
jno
cmp
in
outs
(bad)
ret
gs
pop
test
shl
sar
lock
je
and
aas
cmp
push
arpl
cmps
rep
dec
inc
xchg
dec
cmp
inc
dec
dec
adc
pop
in
and
sti
sar
mov
sub
not
out
es
pop
pop
xchg
test
mov
xor
lods
inc
or
push
cmp
data16
(bad)
dec
rcr
xlat
mov
mov
add
jmp
push
in
pop
js
loopne
inc
aas
jne
inc
jge
and
das
loop
stc
nop
xchg
mov
xor
mov
push
iret
(bad)
mov
push
stos
imul
xor
sti
sti
ds
call
in
and
jle
fwait
aad
jl
aad
cdq
fld
or
add
push
pop
inc
xchg
addr16
push
adc
and
hlt
out
js
out
leave
add
dec
mov
xlat
inc
or
fisttp
mov
enter
jmp
mov
retf
sbb
loope
push
ins
sub
pop
cdq
dec
or
arpl
mov
cwde
shl
test
push
lods
cmc
dec
push
stc
call
loope
jecxz
lahf
jg
mov
sti
pop
popf
mov
push
jmp
sub
clc
cld
jo
add
xchg
(bad)
mov
aaa
cmp
pop
and
jae
shl
imul
mov
bound
ret
ret
cdq
jne
push
stos
or
mov
mov
loopne
push
div
int3
or
repnz
stos
push
jae
dec
ret
mov
ret
adc
pop
fcom
mov
ret
adc
loopne
test
leave
int
sbb
jae
pop
and
cmp
call
dec
sub
js
xor
jae
pop
pop
xor
inc
xor
push
(bad)
cmps
fldcw
mov
arpl
push
xlat
int
mov
cmp
pushf
outs
xchg
adc
mov
dec
test
test
xchg
fcomip
add
pop
add
or
mov
sar
loope
adc
sbb
push
or
test
pop
arpl
fsub
jmp
dec
jg
pop
out
ins
test
call
xchg
pop
mov
and
loop
imul
fxch
sub
pop
cmp
fld
add
push
fiadd
bnd
or
jo
cmc
retf
mov
pushf
xlat
add
and
push
or
(bad)
jo
(bad)
adc
push
iret
js
inc
int
imul
jecxz
mov
xchg
call
stos
jecxz
sub
sbb
adc
loope
mov
cmc
popf
dec
ds
jle
cld
lds
or
loopne
and
ins
(bad)
jecxz
sahf
add
jl
shr
ret
fist
cmp
stos
fs
lock
and
mov
pop
adc
test
movs
mov
loope
retf
xor
aad
push
imul
sbb
mov
push
push
sbb
fidiv
or
nop
sub
and
inc
aas
fnstsw
imul
push
add
call
cld
mov
js
and
stc
mov
and
jl
inc
test
mov
out
cmc
(bad)
ss
push
sub
cmp
xor
or
add
or
xchg
sahf
sar
pop
movs
xchg
xor
aad
cmp
jb
(bad)
xchg
adc
(bad)
mov
mov
xchg
bound
lea
xor
ins
mov
daa
fcmovb
adc
inc
dec
bound
faddp
jbe
adc
mov
dec
adc
jecxz
test
ins
mov
inc
cmps
das
xor
pop
movs
retf
cli
mov
outs
and
dec
loopne
adc
iret
push
mov
adc
fs
nop
dec
shl
mov
xor
jbe
push
in
dec
push
sbb
push
pusha
and
pop
shr
popa
inc
pop
mov
inc
popa
push
xlat
(bad)
pushf
shr
xor
jmp
add
mul
cmc
xchg
lods
je
popf
repnz
std
aam
inc
sbb
add
sub
out
ins
in
xor
mov
mov
sub
sahf
imul
sbb
ret
test
push
neg
idiv
push
fst
or
xor
cmps
xchg
jns
lds
sub
adc
xchg
in
mov
push
push
inc
imul
jb
out
pop
mov
repnz
out
retf
pop
leave
je
cmps
push
push
mov
adc
jb
pushf
in
mov
mov
out
scas
mov
cmp
cmc
sbb
nop
lods
dec
cs
loop
sbb
imul
out
bound
hlt
mov
js
cli
dec
int
into
cs
std
fnstcw
leave
call
pop
pop
and
inc
lock
pop
pop
mov
imul
scas
jae
pop
push
jle
add
dec
or
push
jecxz
call
fadd
arpl
xchg
pop
retf
(bad)
push
fisttp
retf
fldcw
sub
mov
or
sub
fdivp
xor
sbb
ret
pop
in
cld
iret
mov
(bad)
retf
adc
add
jp
pop
mov
popa
push
stos
cli
xor
push
mov
xchg
jg
movs
pop
mov
mov
ins
test
cdq
scas
dec
xor
xor
cld
aaa
mov
hlt
and
xchg
add
jmp
iret
fsqrt
pushf
sub
push
and
mov
sub
inc
repnz
xor
(bad)
cmp
mov
mov
cwde
sub
sub
out
outs
push
(bad)
call
je
mov
add
push
mov
cli
push
dec
or
les
jp
jl
inc
push
mov
or
sbb
mov
jae
xchg
(bad)
jo
push
les
aad
popf
mov
add
xchg
mov
jae
xor
jmp
in
ret
adc
or
fisubr
mov
pop
mov
and
and
mov
std
xor
xor
xchg
cmp
bnd
dec
loope
jns
fistp
cli
mov
ret
adc
(bad)
loop
sbb
bound
mov
cmp
out
inc
mov
fwait
or
clc
xor
mov
rol
xor
cmp
retf
ds
retf
fisub
xor
sub
mov
lds
pusha
xor
bound
xlat
push
xor
or
mov
mov
fcom
pop
addr16
(bad)
cmps
into
add
pop
jecxz
xor
xor
cmps
inc
fcmove
jge
xor
inc
ret
cmp
jg
cmp
add
sub
pop
add
(bad)
cld
scas
(bad)
loopne
ud0
out
in
adc
jecxz
std
mov
push
ins
xchg
mov
ss
jnp
jmp
sub
inc
popa
push
push
je
mov
bound
and
addr16
xchg
inc
sub
call
es
push
sbb
sub
stos
mov
and
arpl
cmc
pusha
imul
cmps
leave
fidivr
adc
sbb
push
popf
idiv
out
or
and
push
add
cmps
bound
js
es
js
into
and
jl
add
mov
pop
add
out
push
xchg
jns
cmp
inc
inc
adc
jge
sub
dec
data16
inc
outs
into
scas
sbb
jge
or
cdq
sahf
jle
cmp
xchg
ss
xchg
xchg
lock
pop
jnp
mov
retf
test
adc
(bad)
jmp
add
and
leave
cmps
aam
dec
(bad)
or
jmp
pushf
and
cwde
pop
cdq
call
clc
dec
inc
cdq
add
lods
add
lahf
xchg
jle
adc
sub
rcr
test
in
jae
test
ret
cdq
xchg
mov
outs
jns
pop
push
mov
sbb
repnz
outs
xchg
mov
adc
xchg
push
imul
sub
fcomp
popa
arpl
or
retf
push
or
mov
jl
div
mov
test
inc
int3
adc
(bad)
aas
outs
(bad)
push
or
xchg
call
cmp
pusha
in
sbb
or
cdq
ret
sar
lock
cmps
xlat
das
mov
or
adc
(bad)
mov
cmp
add
pop
mov
cmps
mov
sti
rcl
adc
inc
fdivrp
std
out
or
xchg
stc
xor
pop
loop
add
mov
push
loopne
loope
mov
inc
pop
xchg
xor
lahf
imul
out
push
add
js
or
fisub
pop
(bad)
(bad)
call
mov
push
call
frstor
mov
pop
jno
add
adc
push
jmp
scas
mov
outs
aas
mov
mov
jne
mov
xlat
sub
loop
jl
hlt
imul
add
mov
push
pop
ds
fsub
push
mov
xor
pop
xlat
push
mov
ins
mov
(bad)
mov
sub
xchg
ret
push
aam
cdq
pushf
ja
lock
xor
aam
xchg
aam
sbb
mov
cmp
sub
(bad)
cmp
push
fnstcw
add
dec
stc
imul
and
pop
xchg
neg
sbb
out
jns
dec
mov
push
adc
push
not
retf
fldenv
stos
fsubr
jae
pop
int3
and
push
push
cmp
mov
test
test
fcomp
int3
xor
push
mov
sub
mov
xchg
and
fsub
cmp
(bad)
clc
adc
xor
sub
ficom
mov
sbb
mov
mov
jno
je
pushf
jg
lods
pop
or
inc
fmul
add
pop
scas
mov
mov
dec
pushf
neg
and
shr
sub
mov
pop
xchg
push
addr16
stos
data16
pop
bound
dec
inc
push
mov
dec
jmp
and
in
adc
pop
pop
cmps
cmp
pop
adc
loope
push
fs
fadd
cmp
jnp
into
jg
mov
adc
imul
in
adc
add
(bad)
fmul
push
jecxz
xchg
mov
xchg
sub
jne
mov
pushf
cmps
clc
dec
arpl
and
rcl
and
nop
iret
push
mov
and
adc
(bad)
mov
push
push
shr
or
outs
or
adc
add
retf
ficomp
in
pushf
xlat
cmps
out
xor
pop
jmp
pop
loop
add
jle
shl
daa
stos
pushf
xchg
push
mov
mov
ins
iret
inc
xor
ins
stos
xor
mov
mov
bound
adc
test
dec
repz
cmp
push
test
imul
fisub
jo
mov
add
repnz
clc
sbb
out
sbb
(bad)
cmp
clc
mov
pop
xchg
loop
in
lds
test
pop
or
mov
pop
mov
mov
push
cmp
add
add
dec
loopne
xor
out
retf
sbb
pusha
mov
pop
fadd
mov
mov
fistp
pop
out
pop
or
sbb
cmp
clc
xor
fbld
push
cmp
lock
cs
fs
test
mov
jmp
inc
push
mov
into
imul
das
addr16
jecxz
ror
shl
jp
push
rcr
mov
jmp
adc
jbe
cmp
jle
xlat
jmp
xchg
mov
call
into
mov
rol
ror
aam
inc
and
mov
loope
popa
sar
ins
mov
clc
test
int3
sti
stc
nop
bound
pop
inc
xor
inc
lods
aam
jnp
pop
ss
test
mov
loop
cli
mov
in
xchg
jl
mov
les
sbb
in
mov
push
sysret
or
int
jne
out
in
or
clc
xchg
imul
mov
add
rol
leave
(bad)
mov
(bad)
mov
lods
cmps
pop
ficomp
adc
inc
imul
retf
dec
pop
leave
sub
mov
push
mov
adc
mov
or
cmp
mov
push
cmp
aas
imul
dec
or
xchg
sbb
outs
sti
enter
cmps
into
leave
movs
dec
sub
rol
jmp
fsub
lahf
popa
inc
cs
gs
pusha
dec
lahf
(bad)
jmp
cmp
mov
ins
mov
test
fisubr
fwait
pop
sub
cmp
pop
jge
(bad)
adc
or
cmp
jmp
jno
out
leave
push
sbb
iret
cs
cmc
mov
call
lods
xchg
inc
mov
mov
lock
mov
je
jl
repnz
outs
mov
hlt
jecxz
jecxz
xor
add
fmulp
pop
(bad)
loop
push
or
xchg
jge
push
aam
jbe
loopne
sahf
movs
dec
out
xor
ret
daa
(bad)
add
xchg
ja
inc
dec
es
sub
cmps
jae
cli
dec
xor
sub
cmc
fcmovnbe
sahf
push
and
xchg
mov
jp
or
xchg
into
adc
repnz
xchg
add
adc
sub
je
cmp
xor
mov
sub
cmp
rcr
mov
mov
popa
test
mov
sbb
cmp
cli
adc
push
push
stos
hlt
ficom
or
jae
lahf
scas
add
retf
inc
movs
ss
loopne
ja
and
mov
lods
scas
sbb
lahf
call
inc
(bad)
pop
jo
pop
in
mov
mov
int3
mov
cmp
adc
inc
retf
mov
stos
xchg
xor
mov
mov
aam
and
push
cs
mov
sti
inc
retf
shl
mov
into
or
jnp
push
rcl
unpcklps
sub
in
rcr
add
add
mov
aad
mov
fld
push
ficom
sbb
jnp
jmp
arpl
and
les
fld
jg
mov
test
fisttp
(bad)
fmul
mov
aad
iret
mov
shl
and
call
movs
add
(bad)
xor
dec
retf
pop
repz
in
js
pop
loop
clc
lods
retf
popf
lods
leave
addr16
cmps
sti
and
jne
clc
add
cmp
and
and
pop
data16
out
jno
mov
mov
(bad)
sub
(bad)
ror
and
cmc
daa
adc
ja
stc
in
pop
stos
xchg
fcomip
mov
pop
pop
in
add
(bad)
mov
call
dec
jb
jo
push
rcr
push
cwde
xchg
inc
push
dec
in
mov
in
fimul
stc
mov
out
nop
movs
imul
call
int3
push
es
imul
jl
imul
scas
cmps
rcl
mov
xchg
icebp
neg
push
cmc
sbb
xchg
mov
das
mov
enter
sbb
stc
pcmpgtd
sbb
jl
xor
xor
int3
movs
push
loope
jmp
mov
call
mov
jl
arpl
jb
jp
dec
imul
aas
xchg
aas
mov
lods
js
and
or
fs
dec
cmp
sub
mov
or
jg
push
jae
call
bound
imul
push
imul
xchg
fimul
(bad)
psubd
push
test
add
dec
pop
xchg
fild
mov
(bad)
outs
mov
repz
enter
ret
xor
in
cmp
aaa
xchg
lock
and
dec
mov
(bad)
and
repnz
inc
loopne
xor
(bad)
stos
inc
data16
cmp
jbe
mov
or
clc
xor
adc
mov
mov
(bad)
mov
mov
loope
sub
inc
inc
or
bound
sub
jmp
xor
or
into
hlt
sub
mov
out
and
stos
or
xor
fisubr
data16
inc
shl
popf
xor
sahf
or
rcl
test
fild
mov
mov
xor
out
mov
mov
test
mov
cmp
ret
sub
xor
xchg
ss
jne
cmp
jne
ret
and
(bad)
js
or
(bad)
mov
jbe
and
lods
es
mov
(bad)
ds
or
ror
pop
push
adc
mov
ds
pop
ja
mov
imul
adc
es
inc
cmovg
(bad)
aad
movs
imul
add
outs
mov
push
or
and
cmp
rol
fst
retf
mov
push
repz
inc
movs
cld
xchg
xor
mov
rcl
or
outs
(bad)
and
fsub
je
xchg
test
out
sub
imul
popa
mov
mov
xor
mov
pop
jnp
cmps
mov
icebp
fnsave
call
push
dec
out
xlat
ret
sub
push
pop
mov
sti
imul
xor
or
push
or
fcmovnu
push
xor
xor
js
sub
aas
(bad)
mov
dec
inc
sbb
or
jmp
sub
jmp
(bad)
mov
dec
jne
cli
fadd
cmpxchg
repz
sub
out
pop
sti
pushf
xchg
adc
fldcw
dec
mov
pop
shr
lock
xor
std
add
jmp
dec
test
arpl
push
imul
je
out
stos
xor
out
in
or
mov
xor
repz
mov
cld
adc
jb
mov
test
cmp
fadd
shl
fldenv
aaa
ficom
mov
adc
inc
mov
loope
rcr
mov
and
pop
jg
lods
aam
sar
pop
adc
imul
jge
je
mov
jns
and
push
dec
jns
out
push
cmc
lods
or
cli
data16
mov
adc
rcl
cmovb
imul
or
ss
mov
call
out
cmc
mov
test
inc
daa
xor
in
mov
out
and
jmp
xchg
ja
dec
pop
mul
and
pop
adc
jo
int3
sub
shl
add
inc
sub
jbe
jge
push
aaa
mov
xchg
ds
retf
cdq
popa
ret
inc
push
iret
ss
gs
dec
retf
sbb
mov
pop
add
je
jmp
movs
dec
mov
inc
test
jnp
inc
cmp
out
fimul
push
arpl
jg
cmp
mov
add
push
dec
dec
sbb
test
out
(bad)
sbb
and
pop
fxch
addr16
cmc
(bad)
cmpps
inc
xor
mov
and
xchg
retf
call
lock
ins
or
sti
sub
xchg
sbb
movs
cli
mov
into
jbe
paddusw
out
jmp
and
in
cmp
mov
jno
pop
xlat
jae
imul
icebp
jbe
imul
add
xchg
mov
push
cmps
ret
mov
shr
sub
enter
pop
push
sub
mov
sbb
test
mov
push
pop
call
outs
rcr
cmps
pop
push
sub
jb
inc
mov
outs
lock
sbb
mov
loopne
shr
push
fdiv
sbb
lock
jb
dec
add
ss
push
and
mov
aad
cmp
dec
imul
mov
mov
xlat
sahf
push
lods
inc
fcom
rcl
xor
inc
(bad)
mov
sar
jmp
in
dec
jnp
es
cs
loopne
in
or
jecxz
dec
outs
je
rol
loope
loope
bnd
mov
outs
out
idiv
mov
sbb
daa
outs
fs
mov
xor
pop
mov
jmp
inc
mov
pop
cs
push
std
push
mov
cmp
pop
dec
shr
daa
aas
nop
call
cmp
imul
dec
mov
pop
lods
jbe
xor
int
bound
addr16
jl
ins
ss
out
std
or
jbe
mov
iret
test
(bad)
pop
xchg
pop
mov
or
or
cmp
retf
ins
jo
inc
xlat
in
std
push
ret
call
dec
mov
stos
test
imul
clc
push
out
or
out
and
enter
xchg
sub
pusha
xor
sbb
scas
or
jnp
and
dec
pop
enter
mov
push
mov
pop
xor
push
adc
jle
hlt
sub
mov
mov
scas
outs
movs
push
sbb
aaa
imul
ror
jge
sti
(bad)
xchg
jge
add
xchg
jb
pop
das
or
cmp
cld
stos
mov
rol
repz
pop
mov
mov
cld
cmp
arpl
test
ins
(bad)
and
sub
jmp
cs
cdq
test
mov
or
sub
sub
and
xor
lods
call
sub
lods
in
inc
aad
nop
hlt
xchg
sti
or
je
pushf
cmp
(bad)
cwde
(bad)
mov
jmp
push
fwait
jae
iret
cmps
mov
mov
hlt
enter
add
aad
call
inc
dec
clc
push
mov
data16
mov
cmp
xor
(bad)
addr16
(bad)
adc
js
xchg
cmp
pop
push
cdq
or
pop
xor
and
movs
xchg
loop
repz
sub
or
(bad)
movs
out
mov
inc
in
add
and
cmp
out
sbb
inc
lds
mov
int
fxtract
dec
jecxz
jmp
xchg
xchg
or
inc
inc
xor
cmps
mov
jns
jno
push
test
imul
pushf
add
outs
fwait
lods
mov
pusha
(bad)
les
cmp
xlat
adc
out
sahf
push
fcom
test
stos
call
addr16
push
fld
push
add
clc
fwait
test
out
sub
adc
mov
push
add
fisub
pop
mov
ss
pop
cmc
dec
fst
aam
add
and
jo
dec
sub
or
loop
xlat
cwde
mov
out
fwait
aad
mov
cmps
data16
(bad)
neg
rol
das
ins
sub
pop
or
rcl
jo
adc
add
stos
and
cmp
push
std
pop
lods
adc
and
hlt
stos
pop
dec
aas
push
cmp
xchg
xchg
scas
nop
mov
fdiv
add
mov
mov
pop
arpl
or
jo
es
repnz
pushf
js
xor
xchg
imul
aaa
out
lahf
in
lods
mov
pushf
cmp
sti
mov
push
mov
jmp
addr16
cmp
and
mov
mov
mov
gs
cmp
mov
movs
inc
les
xchg
cmc
iret
pop
jbe
adc
sar
mov
jbe
xchg
cmc
cs
fadd
sub
aas
loop
jno
adc
int
(bad)
cld
cmp
or
test
mov
xor
test
jecxz
inc
push
or
xor
rcl
in
inc
cmc
outs
cs
cld
mov
sbb
imul
push
enter
fiadd
jecxz
in
test
in
inc
int3
(bad)
out
and
pusha
jno
pop
scas
cwde
push
retf
fs
cmc
aam
std
fcom
js
cld
and
jmp
cdq
and
lds
jge
dec
sbb
push
adc
out
mov
(bad)
fcomip
push
mov
cli
mov
add
mov
xchg
sbb
mov
adc
or
cmp
ret
adc
retf
and
push
or
retf
jp
push
mov
mov
clc
pop
lahf
bound
xchg
add
dec
std
mov
jae
push
cmps
pop
xchg
loop
xlat
(bad)
inc
jmp
mov
sub
sar
or
add
jb
repz
pop
and
mov
cli
or
fdivrp
inc
pop
hlt
js
(bad)
mov
int
call
inc
dec
scas
jnp
int3
bound
sbb
adc
js
mov
xchg
fild
out
sub
mov
mov
out
fistp
jecxz
mov
sub
mov
xchg
arpl
ret
movs
fstp
cwde
adc
cs
mov
scas
call
stos
adc
or
es
xchg
mov
inc
push
js
add
dec
jb
dec
sti
add
(bad)
lea
sub
sub
fcmovne
leave
inc
xchg
retf
and
jle
push
stos
idiv
cmc
cmp
push
and
inc
iret
loop
sbb
fsub
aad
clc
arpl
sbb
fs
fs
(bad)
jnp
inc
ins
push
movs
jo
ss
or
sti
inc
mov
call
sub
inc
in
sub
add
into
mov
mov
mov
ss
fucomp
mov
mov
xor
movs
mov
test
adc
not
dec
or
or
cli
mov
movs
dec
push
pop
jmp
aam
mov
and
ja
lods
jbe
in
in
fwait
lods
adc
cmps
xchg
jge
cmps
and
sbb
xor
pop
fst
jge
sar
bound
push
pop
push
not
mov
retf
(bad)
retf
out
cmp
xor
dec
ins
xchg
lods
out
loop
cwde
call
dec
nop
icebp
jg
xor
mov
mov
gs
xor
(bad)
cwde
popa
test
ds
lahf
ss
add
mov
test
adc
mov
iret
jmp
xchg
rol
mov
and
sbb
stos
sbb
ficom
mov
mov
sbb
push
push
inc
jne
mov
and
mov
dec
cmp
add
ficomp
adc
out
push
pop
(bad)
out
(bad)
and
scas
into
xchg
inc
sub
and
fnstenv
scas
nop
cmc
jg
(bad)
jno
xchg
dec
jge
out
mul
frstor
in
mov
ja
sar
mov
add
adc
fst
sbb
out
mov
pop
nop
xchg
sub
xchg
cmps
jl
outs
rcl
dec
addr16
sub
sbb
mov
xchg
fdivr
fmul
mov
loopne
ror
mov
cmp
push
(bad)
push
sbb
icebp
jae
adc
imul
mov
(bad)
fwait
lea
mov
jecxz
out
std
fwait
add
and
mov
loopne
int
mov
test
cdq
jbe
mov
(bad)
mov
sahf
and
dec
and
in
lods
xchg
push
add
(bad)
out
imul
add
jns
add
jl
fst
push
mov
rol
in
sbb
and
and
(bad)
ds
fcmovnbe
or
repz
loopne
inc
inc
popf
push
jmp
mov
adc
jp
sbb
mov
in
adc
jp
adc
jb
add
in
and
fld
test
ret
adc
sbb
stos
dec
and
inc
out
xor
repnz
and
dec
std
pop
sbb
mov
mov
jae
bound
inc
push
aaa
jne
pop
add
rol
fisttp
sbb
in
in
dec
jb
mov
jo
call
or
test
addr16
sub
push
(bad)
in
out
pop
int3
adc
and
(bad)
int
mov
push
add
mov
mov
and
pop
sub
lahf
fs
and
inc
or
jmp
enter
imul
out
mov
scas
jmp
std
fsubr
scas
scas
shl
imul
in
jns
aad
lock
dec
dec
outs
pushf
pop
add
aaa
dec
ret
push
xchg
cmp
xchg
and
gs
std
nop
and
sbb
pop
addr16
mov
pop
push
mov
push
dec
pop
xlat
cmp
pushf
ret
mov
loop
fs
and
lods
in
fmul
jb
pushf
mov
pop
pop
jnp
xchg
sbb
pop
push
out
xor
int3
imul
mov
ret
dec
push
cmp
cld
add
mov
das
cmc
jne
xlat
mov
push
jl
pop
lea
pop
ss
push
test
gs
mov
js
jl
shr
mov
sbb
jmp
mov
stos
add
mov
loop
and
mov
js
pop
cmps
rcl
rcl
and
icebp
inc
xor
sub
lods
lahf
cwde
xor
cmp
jl
cmp
push
xchg
arpl
fs
gs
stc
dec
pop
mov
adc
lock
push
ret
mov
push
adc
neg
popa
les
push
cmp
sub
mov
and
pop
sti
ret
mov
(bad)
mov
lods
inc
dec
in
cmp
lahf
inc
inc
scas
repnz
in
cmp
(bad)
ss
ja
jp
leave
stos
inc
dec
fucomi
mov
mov
shr
xchg
cmp
fdivr
cmc
in
pop
movs
push
sub
(bad)
das
hlt
push
sub
xchg
ins
(bad)
mov
sbb
scas
(bad)
bound
and
push
adc
iret
cli
pop
rcr
pop
movs
call
ds
push
push
xchg
into
jnp
movs
dec
sbb
jo
or
scas
ins
and
xor
sbb
cwde
cwde
popf
adc
push
mov
mov
mov
mov
xor
jno
pushf
popa
push
das
mov
out
retf
add
mov
adc
pop
sub
fld
test
into
jge
jl
lods
cmp
scas
mov
mov
sub
popa
repz
mov
sbb
sbb
stos
out
pusha
mov
cmp
inc
stos
cld
int3
addr16
std
jle
pop
ja
scas
into
ins
lods
mov
rcl
mov
fwait
pop
and
test
mov
mov
cmp
adc
mov
lea
repnz
jle
dec
es
mov
imul
xchg
add
pushf
jbe
sub
sti
or
dec
fs
repz
dec
cmc
mov
adc
mov
push
mov
jge
fisubr
outs
and
call
sar
sub
or
mov
pop
mov
cmp
add
push
pusha
lahf
and
sub
or
jle
jb
scas
jle
add
daa
push
pop
xor
mov
mov
xor
mov
imul
or
adc
sbb
mov
arpl
pop
and
xor
fmul
bound
ss
lods
xor
mov
ds
mov
fsub
adc
iret
jno
test
je
shl
mov
in
bnd
mov
inc
in
ficom
jg
mov
and
fs
pop
in
dec
sar
dec
ins
and
xor
dec
jae
hlt
cmp
jmp
cmp
sbb
sbb
dec
inc
or
or
out
cmp
in
jle
out
ret
les
cwde
jmp
pop
(bad)
int3
ss
rcl
cwde
jge
mov
push
sub
mov
mul
pop
cmp
hlt
ror
shl
fimul
mov
cmp
sbb
or
cmp
cdq
pop
push
mov
pop
sbb
jo
hlt
inc
mov
aaa
jns
inc
cmps
lods
and
test
lods
push
les
retf
imul
push
movs
pusha
in
icebp
call
rcr
ret
dec
fisttp
mov
pop
ror
aam
jecxz
mov
inc
cdq
push
push
inc
ficom
pop
je
sbb
into
pop
outs
in
inc
mov
fdiv
lods
lods
je
retf
sub
push
call
add
pushf
cmp
scas
add
mov
int3
jno
sahf
xchg
js
jae
dec
dec
or
cmps
ins
call
dec
fcom
cmps
xchg
(bad)
cs
sbb
mov
clc
into
call
jbe
ins
cs
clc
mov
ror
outs
jns
or
mov
iret
inc
cmps
lods
mov
fs
and
test
enter
pop
das
push
gs
xor
mov
inc
std
pop
lahf
xchg
pop
repz
mov
retf
dec
fimul
sti
stos
clc
outs
enter
xor
ins
jb
mov
xchg
arpl
add
dec
push
outs
inc
push
mov
dec
sub
scas
sbb
outs
repz
(bad)
fnsave
mov
aaa
fstp
and
inc
(bad)
jecxz
xchg
xchg
adc
push
mov
icebp
and
(bad)
idiv
and
cmp
mov
call
and
daa
mov
cmc
jmp
inc
inc
nop
sbb
sar
xor
mov
cmp
fld
mov
loope
mul
je
test
imul
dec
mov
mov
nop
ins
repz
dec
jns
test
xor
sbb
mov
repnz
push
push
add
imul
mov
in
ins
pop
cwde
inc
mov
adc
dec
out
cmp
add
cmp
jp
cld
cmp
retf
test
or
stos
mov
xlat
out
sub
or
xor
inc
push
aam
int3
push
retf
nop
add
xor
in
rcl
out
mov
call
(bad)
je
fs
add
dec
mov
out
sbb
xchg
inc
test
and
sbb
jmp
jo
(bad)
mov
jbe
jae
xchg
sbb
mov
fs
ret
pop
iret
js
(bad)
or
stc
sub
std
mov
sub
sar
nop
or
xor
dec
and
mov
in
stos
cmp
jmp
arpl
pop
adc
shr
xchg
push
fld
xlat
inc
xor
or
xor
aad
or
stc
lds
xchg
xor
rcl
mov
jbe
lea
and
js
jns
and
push
pop
out
stos
mov
and
pusha
mov
ds
jbe
pop
ins
adc
cld
jnp
xor
fwait
cmp
adc
cmc
in
adc
mov
mul
fwait
jmp
jmp
call
push
repz
mov
test
xor
pop
push
bound
adc
das
out
mov
out
sub
mov
mov
mov
push
sub
movs
aam
fwait
jge
cdq
cmp
ins
xchg
inc
mov
push
in
and
or
retf
push
mov
inc
mov
mov
mov
cwde
test
(bad)
and
daa
pop
adc
in
jbe
sub
inc
mov
sub
lods
call
xor
pop
dec
fld
sub
repz
fsubr
sbb
stc
and
and
xor
add
es
(bad)
ss
cmp
stc
sub
add
xlat
jge
dec
cmp
mov
mov
cmps
lods
in
adc
inc
fisubr
inc
and
cmp
in
les
rol
aas
test
adc
test
test
inc
and
stos
iret
arpl
imul
iret
jmp
test
popf
mov
test
inc
ret
dec
shl
and
lea
or
push
arpl
ret
xchg
mov
xchg
cmp
inc
mov
or
fs
sub
adc
sbb
add
lds
mov
popf
leave
jns
pusha
sub
xor
cmp
add
mov
add
cld
cdq
call
mov
push
mov
int3
sbb
jns
pushf
sbb
xor
push
das
loop
jl
add
push
cdq
lods
in
test
fwait
mov
fidivr
dec
(bad)
lahf
cs
sub
jge
sbb
xchg
jle
stos
and
push
sbb
(bad)
fiadd
fwait
das
mov
bound
sub
retf
xor
fisub
jmp
jb
std
data16
loop
mov
mov
mov
inc
mov
outs
mov
cli
bound
iret
mov
mov
ss
jg
mov
ins
pushf
push
cs
mov
pop
xlat
mov
scas
pushf
cmp
nop
stc
dec
aad
mov
dec
lods
and
cmp
push
xchg
mov
adc
popa
pop
fwait
sub
retf
pop
mov
loop
sub
cmp
pop
(bad)
inc
add
call
lea
xchg
stos
jb
jmp
in
adc
call
jmp
test
mov
jle
sbb
dec
fnstcw
pushf
jnp
rol
cmps
and
cmp
sar
imul
lock
push
mov
mov
daa
call
scas
les
in
aas
sbb
sti
and
pop
jnp
push
addr16
lahf
mov
and
push
cmps
mov
daa
inc
inc
jle
or
mov
xlat
dec
lea
outs
popa
mov
out
push
outs
pop
xchg
xor
and
push
std
test
daa
lock
stos
xchg
xor
and
push
ret
clc
cmp
ins
in
xchg
xlat
push
inc
xor
mov
jmp
je
ins
adc
outs
cmp
stc
pop
mov
jmp
shl
xchg
push
inc
pop
retf
add
pop
mov
stos
retf
in
enter
xor
mov
bound
push
add
fwait
and
sbb
dec
mov
xchg
jne
test
aad
jnp
or
jae
push
imul
push
push
sbb
push
cmp
test
sbb
aad
cmp
sbb
or
mov
mov
adc
pop
das
and
out
dec
add
into
push
push
and
js
mov
sbb
ror
popf
mov
jns
mov
cmps
sub
sub
inc
pusha
cmp
test
xor
push
pusha
dec
jge
mov
ficom
add
and
rcl
or
call
inc
daa
xchg
mov
jle
pop
data16
dec
sub
and
dec
xchg
jle
xor
out
mov
ret
jo
clc
push
jno
xchg
adc
loop
cmp
pop
fwait
aas
hlt
rcr
addr16
inc
xchg
and
mov
(bad)
xor
mov
add
jnp
loop
and
sbb
jbe
pop
inc
out
cld
inc
popf
sub
ror
cmps
sbb
mov
stos
jae
adc
or
shl
int3
dec
in
push
sub
leave
je
idiv
push
es
push
push
pushf
pop
repnz
add
mov
jo
sti
mov
and
cwde
pop
ja
and
dec
mov
imul
ror
cmp
mov
mov
or
inc
cmp
cwde
sub
adc
int3
add
and
lock
push
and
bswap
shl
repz
ret
fisttp
shr
cs
pop
movs
lahf
fnstcw
and
push
test
push
adc
jp
inc
dec
data16
cmp
icebp
xchg
cld
cmp
xchg
push
not
sub
sbb
add
les
scas
fwait
push
push
mov
call
add
sar
mov
ja
dec
out
dec
cli
and
inc
shr
add
data16
push
retf
pop
fbld
cmp
outs
mov
cld
dec
sub
mov
cmps
sbb
sub
aaa
fnclex
inc
or
movs
xchg
int3
push
sbb
add
adc
mul
fisubr
and
daa
daa
adc
push
not
mov
fs
pop
jp
or
push
mov
sti
pop
push
mov
repz
dec
sub
mov
jg
out
(bad)
xchg
bound
popf
mov
pop
mov
cld
push
sbb
rcl
pop
adc
mov
mov
repnz
adc
xchg
xor
dec
imul
and
fcomp
cmp
lods
add
cmps
mov
outs
xor
sub
xchg
mov
out
fcomp
dec
inc
mov
xchg
(bad)
into
enter
adc
pop
jg
mov
lods
jnp
xchg
pop
mov
xchg
pushf
pusha
add
shl
push
add
les
cli
mov
es
rol
mov
popa
fnstsw
or
push
or
ret
mov
mov
xchg
test
arpl
call
pop
mov
movs
mov
dec
mov
mov
arpl
movs
xchg
or
sbb
(bad)
int3
pop
dec
add
fdiv
imul
inc
jp
popa
sbb
(bad)
jecxz
hlt
adc
sbb
mov
loope
xchg
fs
and
jo
jle
xlat
jbe
jmp
idiv
test
push
sahf
pop
cdq
pop
pop
sbb
out
test
call
outs
and
sbb
cmp
out
addr16
jno
nop
pop
jmp
xchg
mov
mov
lods
lds
(bad)
(bad)
(bad)
out
shr
mov
jno
xchg
cmp
fnsave
fsubrp
or
dec
xor
jno
jnp
xor
data16
ss
out
push
ficom
mov
sub
pop
fbld
jb
xlat
xchg
adc
call
es
sub
and
pop
shr
xchg
cmp
sub
call
sub
mov
and
cs
adc
jp
pop
hlt
fild
sub
aaa
es
mov
test
(bad)
fstp
in
ja
ror
pop
pop
(bad)
cmp
pop
lea
dec
sub
push
outs
xchg
scas
dec
rol
and
sub
int
sub
in
jb
(bad)
dec
pushf
dec
lods
xor
inc
cmp
mov
lods
je
enter
pop
stc
test
adc
dec
push
xchg
sbb
loopne
test
and
mov
imul
xlat
lea
iret
jp
lods
arpl
xor
jge
inc
xchg
or
mov
push
and
in
cli
in
cmp
scas
mov
loopne
std
scas
lahf
in
inc
ror
lock
jl
dec
pop
(bad)
sbb
stos
pop
pop
loop
jb
not
mov
test
and
push
aad
add
mov
add
push
fnsave
mov
jmp
push
mov
clc
stos
out
jbe
ret
sbb
push
pop
cmps
sub
outs
and
scas
sti
sbb
into
push
push
push
xor
cmps
or
sub
xor
xor
cmp
adc
add
repz
jne
aam
ret
int
lds
loopne
mov
setae
into
xchg
cwde
pop
add
push
loop
xchg
or
sar
imul
cwde
mov
popa
pop
add
mov
jne
push
std
xor
and
inc
xchg
stos
mov
call
mov
inc
fisttp
ins
mov
loop
xchg
(bad)
jle
cmps
enter
jb
in
icebp
lods
(bad)
jb
cmps
adc
or
xchg
mov
int
in
aas
xor
cwde
ud2
jbe
shl
push
test
xor
movs
mov
dec
and
jbe
inc
jbe
test
into
add
loope
xor
test
mov
jo
push
dec
sbb
stos
add
iret
or
pop
out
lea
mov
push
sbb
rcr
cs
push
push
jp
adc
leave
push
loopne
inc
mov
or
test
fnstcw
dec
adc
adc
test
cmps
fsub
leave
xchg
push
cmp
das
test
sahf
ficom
repnz
lea
shl
cmp
xchg
(bad)
clc
adc
cli
xor
enter
call
pop
test
sub
test
aad
jmp
cdq
sbb
xor
loope
stos
jne
push
jg
stc
dec
jne
mov
adc
pop
jo
inc
and
test
inc
pop
or
aaa
pop
(bad)
js
daa
jne
mov
sbb
adc
pop
mov
je
sub
retf
nop
movs
enter
adc
mov
push
aam
lock
mov
pushf
inc
movhps
jns
dec
int3
mov
push
sbb
dec
pop
adc
mov
or
mov
inc
pop
(bad)
in
(bad)
cwde
repz
hlt
loop
add
cmc
push
sbb
adc
jb
mov
xchg
sub
xlat
jbe
ss
push
dec
les
mov
cmps
cmps
std
scas
pop
int
mov
(bad)
adc
sub
mov
(bad)
out
jnp
sbb
mov
fcom
inc
pop
xchg
sbb
jae
nop
sub
pusha
add
xchg
dec
ds
jb
cmp
rcl
push
xchg
mov
repnz
jecxz
mov
sub
jbe
fwait
outs
lahf
dec
neg
int3
(bad)
lods
sub
sub
es
xor
int3
mov
inc
int3
inc
sbb
push
dec
sar
inc
pop
enter
jmp
mov
sub
mov
nop
or
aaa
add
xchg
mov
pushf
stos
jae
xor
or
cmp
mov
inc
nop
retf
call
loopne
(bad)
and
(bad)
mov
xchg
fisubr
pop
jno
ficomp
add
pop
jae
cmps
cmps
ins
sub
(bad)
inc
cwde
mov
adc
je
or
sub
movs
call
mov
sahf
popf
iret
add
inc
inc
mov
ds
jns
sti
fidivr
sbb
sub
jmp
mov
mov
popf
pop
scas
ins
pushf
dec
mov
xchg
sar
jmp
jne
mov
stos
sub
jae
pop
jne
and
pop
mov
jp
mov
(bad)
(bad)
pop
popf
arpl
ds
cdq
jp
xchg
cdq
xlat
sbb
dec
fwait
stc
mov
jmp
xchg
sub
mov
add
test
test
adc
pop
jg
push
pop
push
cdq
or
call
jp
mov
xchg
(bad)
jb
push
xchg
(bad)
and
mov
in
(bad)
sub
dec
pop
test
sbb
mov
mov
cmp
dec
pop
jbe
and
lods
icebp
adc
dec
div
mov
iret
add
inc
lds
push
call
inc
xchg
ins
ret
lock
nop
push
shl
xor
stos
xor
call
ret
jno
or
mov
jge
fisttp
cmc
ret
mov
mov
test
inc
(bad)
or
imul
adc
sbb
mov
mov
adc
in
and
popf
imul
mov
clc
or
mov
mov
hlt
dec
jmp
inc
or
mov
fdecstp
dec
retf
ret
shl
jecxz
shl
lea
xor
sub
mov
int3
fdiv
jl
mov
out
sbb
xor
enter
xor
rcr
mov
jo
xchg
adc
repz
mov
stos
sub
or
sbb
inc
movs
pop
push
in
cmp
sbb
or
shr
xchg
mov
das
inc
fwait
pop
lock
mov
xor
aam
sbb
sub
popf
daa
sahf
and
jge
in
push
sbb
pop
inc
sub
push
xlat
call
jmp
into
shr
sahf
lock
mov
inc
repz
add
imul
add
ins
popf
cmp
cld
and
adc
push
xchg
push
jp
scas
mov
cmp
mov
out
mov
cmp
xlat
das
jp
push
outs
ror
enter
dec
out
adc
movs
fmul
mov
lods
out
inc
lock
lea
lods
and
imul
cmp
sub
popa
cmps
or
fnstcw
js
inc
popa
mov
add
push
ret
inc
in
jnp
ja
push
add
adc
aam
mov
jae
jo
sbb
popa
mov
and
stc
out
test
adc
(bad)
jns
cli
xor
pop
xchg
jmp
jb
scas
in
mov
movs
xor
pop
xor
push
xchg
pusha
cmp
out
sbb
sbb
test
clc
or
lods
loope
outs
stos
sub
(bad)
mov
pop
mov
pusha
aam
(bad)
mov
mov
std
imul
fwait
and
xchg
push
jae
inc
jo
leave
ret
pop
and
loope
or
loope
outs
pop
lahf
sub
gs
jno
repz
and
(bad)
stos
in
adc
mov
dec
jecxz
enter
mov
add
movs
or
add
jo
sub
test
lds
pop
pop
cmp
std
inc
push
outs
cmp
add
(bad)
leave
(bad)
imul
nop
cmps
dec
dec
sbb
popa
xchg
test
adc
and
aam
iret
adc
jbe
push
in
dec
mov
and
enter
out
mov
pop
or
jnp
retf
inc
mov
imul
cmovae
xchg
xor
ret
dec
jge
clc
jne
mov
test
fld
lods
frstor
and
stos
icebp
aam
sbb
rcr
xor
cli
fcomi
jle
jmp
add
cs
inc
xlat
or
jmp
push
pushf
sbb
mov
ret
push
aam
adc
popa
sti
inc
xchg
das
jg
jno
popf
add
push
add
test
jecxz
push
pop
sub
dec
push
movs
nop
in
mov
push
push
cdq
push
(bad)
mov
scas
ins
(bad)
loop
adc
pop
inc
shr
aam
xchg
pop
scas
shr
sbb
into
pushf
adc
out
pop
cdq
sar
pop
popa
lahf
imul
push
sub
push
dec
mov
pop
test
mov
fnsave
xor
mov
fsub
sbb
mov
adc
lods
mov
(bad)
or
outs
or
out
cmp
dec
lea
sub
push
pusha
xor
push
mov
jle
and
xchg
movs
mov
sbb
(bad)
xchg
jmp
div
mov
sub
in
in
test
les
jns
pop
mov
dec
jne
and
shl
jno
pushf
sbb
fadd
fstp
aam
ror
jno
sbb
adc
(bad)
fst
mov
mov
scas
adc
jno
inc
cmp
out
lods
leave
dec
jmp
std
inc
lods
sbb
cmp
gs
add
ret
ins
jno
jns
mov
aam
add
call
sub
mov
xor
mov
adc
loope
push
sbb
xchg
mov
lods
ins
inc
leave
scas
inc
mov
retf
and
ficomp
inc
sar
aad
xchg
sub
imul
mov
scas
imul
clc
jns
cmp
adc
sub
push
popf
xchg
jl
shl
mov
(bad)
ins
sub
pop
jmp
aaa
or
shl
sub
out
loopne
fnstcw
pushf
xchg
outs
pop
dec
mov
nop
push
jmp
aas
shr
pop
mov
mov
xchg
test
inc
sbb
push
inc
inc
or
sub
or
mov
and
movs
and
mov
or
xor
and
mov
fsub
pop
sub
ret
mov
push
fcmovnu
gs
sub
or
out
ror
arpl
adc
mov
jbe
mov
aam
xor
in
jne
or
dec
nop
mov
or
movs
(bad)
ins
mov
fwait
addr16
jmp
gs
test
pop
arpl
dec
push
jmp
cli
test
out
hlt
shl
scas
int
jecxz
push
ins
fdiv
call
cmovg
inc
outs
ins
push
sub
mov
enter
sahf
pop
dec
pop
lods
cmps
cmps
ss
scas
addr16
cmp
push
aad
inc
push
movs
lahf
iret
nop
and
iret
mov
or
mul
push
das
or
jp
cmp
jge
(bad)
ins
lods
add
ins
mov
adc
inc
mov
test
push
and
movs
cmovge
pushf
xor
and
jnp
addr16
rcr
fisubr
jnp
sbb
retf
or
or
jge
xchg
mov
xchg
and
repnz
outs
ss
int
pop
xor
lock
push
and
sar
push
xor
ret
jnp
(bad)
add
and
pushf
mov
jecxz
adc
sti
mov
out
repnz
mov
cmp
neg
pushf
mov
int3
popf
clc
pop
xor
lods
ds
sub
push
inc
jae
das
or
mov
sahf
adc
sub
test
and
add
(bad)
adc
in
scas
push
int3
xchg
push
aam
imul
cmp
sbb
cmp
out
xchg
add
mov
fidiv
aas
sub
or
mov
push
dec
jg
scas
xchg
push
lods
jg
mov
gs
repnz
sbb
bound
stos
jecxz
xchg
in
dec
dec
pop
cmp
retf
mov
add
pop
mov
sub
lods
and
out
cmp
pop
cmps
sbb
cmp
xchg
inc
pushf
icebp
adc
mov
das
push
addr16
lahf
push
in
idiv
mov
sbb
add
pop
add
(bad)
mov
jmp
cdq
push
and
pop
push
aaa
cdq
sar
mov
in
(bad)
pop
push
jle
cmp
cwde
bound
mov
dec
dec
ins
fsubr
adc
cmc
movs
jp
mov
push
mov
mov
stc
test
ret
nop
mov
idiv
gs
inc
sar
mov
adc
xchg
mov
(bad)
mov
mov
repnz
ret
or
cli
mov
idiv
ins
dec
push
xchg
mov
leave
fistp
(bad)
in
mov
into
xor
imul
dec
fs
inc
jae
or
ror
lods
dec
pop
push
xchg
outs
sbb
sbb
sti
iret
jnp
sbb
mov
cmp
sbb
add
dec
xchg
mov
mov
sub
cdq
xchg
mov
rcr
dec
call
mov
add
mov
cmps
sbb
pop
iret
call
(bad)
icebp
lock
into
dec
xor
fwait
sbb
jmp
add
sar
or
shr
or
dec
inc
dec
daa
add
jne
cmps
mov
ret
xchg
out
add
cmp
inc
lds
ds
retf
inc
jbe
xchg
pop
loopne
dec
sbb
loop
in
jns
sbb
aad
mov
mov
addr16
aas
and
sbb
jne
(bad)
cld
leave
pusha
dec
gs
mov
pusha
pop
ret
int3
xchg
daa
lahf
xlat
jb
mov
test
mov
test
or
mov
xchg
or
dec
mov
cmp
inc
adc
and
xor
sahf
mov
add
pop
sti
xor
jne
fdivr
xchg
in
clc
leave
jg
(bad)
clc
test
jno
sbb
cs
dec
fidivr
mov
push
int
pusha
mov
bound
and
sub
cdq
xlat
add
and
aas
icebp
mov
cmp
push
(bad)
nop
in
xor
cld
xor
inc
adc
push
mov
and
mov
xor
sar
sbb
pop
jg
cld
push
push
push
jg
fwait
xchg
test
jns
mov
clc
xchg
sbb
and
mov
mov
adc
ror
sbb
fbstp
adc
mov
push
and
out
jne
dec
aad
movs
xor
test
lods
jge
mov
scas
ja
inc
mov
pop
xchg
ins
mov
fcomi
repz
push
push
pop
pop
ja
sbb
inc
xor
std
daa
and
mov
lock
sar
push
(bad)
outs
mov
mov
dec
aad
pop
cld
push
mov
aaa
mov
and
sbb
pop
push
fwait
cli
pop
hlt
cmp
fist
xor
sbb
lods
push
cmp
dec
or
jno
int
pop
(bad)
jb
retf
sbb
shl
xchg
pop
mov
sub
loopne
xchg
sbb
mov
xchg
enter
(bad)
lock
repz
push
mov
mov
cmc
test
sub
stos
pop
ins
sbb
push
call
int
call
in
sub
fnsave
adc
add
mov
mov
fstp
cdq
jb
jo
or
fsubr
xchg
mov
fcom
push
pop
dec
(bad)
sbb
xor
mov
stos
jp
lahf
push
or
into
out
enter
(bad)
fnsave
sahf
ds
pop
xlat
dec
xchg
rol
leave
imul
adc
shl
mov
in
mov
mov
mov
rcr
and
stos
cs
cli
shl
bnd
retf
daa
jle
sub
lock
mov
stc
xor
fnstenv
shl
ins
adc
xor
cmps
rol
or
out
xchg
mov
dec
ror
mov
into
inc
ds
and
repz
inc
pop
adc
mov
sub
aaa
sub
inc
out
sti
stc
retf
ret
sub
std
adc
sbb
sar
sbb
movs
leave
pusha
push
sti
bound
jb
lock
xor
mov
(bad)
xchg
in
test
sbb
xor
lods
xchg
lds
aaa
mov
sbb
cmp
sub
icebp
xor
loopne
jp
js
test
mov
in
push
movs
mov
loope
xchg
push
(bad)
pop
fwait
in
xchg
popf
mov
mov
mov
sbb
jle
push
or
pop
repz
nop
rcr
call
pop
cmp
cmps
iret
sti
mov
jnp
jg
aad
imul
push
pop
or
add
and
cld
jns
jae
cmp
xchg
stc
and
or
and
push
or
dec
lahf
sbb
je
test
adc
retf
mov
jp
and
or
push
clc
stos
push
cmp
lods
lea
xchg
inc
cld
pop
cmp
push
mov
imul
xor
jmp
imul
mov
in
mov
shr
cs
push
clc
push
pop
movs
pop
test
jg
ret
pop
or
mov
and
jl
in
lds
out
sar
hlt
sub
add
mov
mov
adc
inc
xchg
fmul
aam
cwde
outs
push
xchg
jns
bnd
pop
mov
data16
xor
pop
mov
push
dec
push
dec
js
(bad)
ror
sbb
(bad)
pop
sub
in
inc
outs
xchg
inc
pusha
les
adc
mov
rcr
imul
(bad)
lahf
outs
dec
stc
div
dec
jle
xor
and
loop
and
dec
outs
loopne
mov
pusha
test
dec
nop
clc
popa
fnsave
call
aas
sub
inc
jle
sbb
fs
adc
inc
(bad)
mov
pop
out
aaa
sahf
das
outs
pop
adc
xlat
clc
add
data16
mov
mov
daa
rcl
into
mov
mov
sbb
adc
fld
(bad)
sbb
or
mov
sbb
popf
shr
out
sub
sub
je
dec
jmp
loope
or
pop
pop
sub
cmp
sub
loope
int
int
rcr
xor
cmps
(bad)
mov
and
(bad)
pop
cdq
shr
and
and
fdivr
dec
xor
xchg
pop
into
stos
rcl
addr16
cmps
jbe
ja
jb
stc
and
cmps
ja
les
mov
call
and
cmp
(bad)
aas
ret
shl
inc
jg
pop
rol
cmp
call
pop
inc
int3
aas
stc
jle
mov
and
adc
sub
test
ret
in
mov
mov
inc
fild
push
inc
loop
ss
inc
aad
(bad)
mov
mov
xchg
inc
mov
add
xchg
adc
enter
movs
mov
lds
test
popf
das
out
pushf
mov
outs
push
ins
fnstsw
and
enter
scas
or
in
inc
inc
xlat
pop
adc
inc
jp
stos
outs
add
nop
jae
or
xchg
imul
leave
jnp
dec
push
daa
jmp
pop
in
jmp
int3
mov
jnp
ficomp
mov
int3
cmp
mov
data16
pop
bound
pop
ret
push
sbb
dec
xchg
aad
xchg
pcmpgtd
or
int
jo
addr16
and
retf
ds
in
movs
(bad)
cmp
push
pop
xchg
(bad)
loopne
cmp
pop
push
cmp
cmp
cmp
enter
add
sub
jno
rcl
fnstsw
mov
xchg
pop
jae
movs
rcr
into
jnp
xor
pop
fimul
scas
jge
aaa
inc
rcl
retf
sahf
xchg
inc
mov
mov
mov
stos
inc
aam
cld
push
xor
push
add
inc
fdiv
das
popa
jge
mov
mov
in
addr16
adc
(bad)
mov
push
scas
fsub
push
and
imul
lock
push
imul
mul
(bad)
xchg
mov
cld
rol
jmp
aas
or
push
xor
dec
loopne
cmp
(bad)
pop
js
or
outs
lods
or
pop
nop
or
pop
inc
jns
and
and
xchg
cdq
in
in
adc
inc
jle
dec
mov
mov
ds
sub
jb
in
(bad)
cmc
pusha
int3
inc
dec
nop
lock
scas
dec
mov
movs
jge
pop
xor
mov
sbb
mov
movs
xor
and
lods
pop
(bad)
fidivr
push
sbb
(bad)
push
pusha
stos
mov
sahf
jge
adc
mov
cmp
hlt
popf
xchg
out
mov
sub
jb
xchg
js
test
mov
push
inc
cmp
adc
push
xchg
(bad)
ficomp
push
inc
js
push
push
mov
imul
pushf
jg
cld
ret
mov
pusha
pop
imul
cmps
jae
stc
adc
out
mov
cmc
inc
or
dec
add
idiv
rcl
mov
or
adc
cmps
loope
add
cwde
inc
push
push
xchg
fwait
icebp
lds
movs
clc
adc
mov
jl
adc
popf
cld
mov
retf
les
retf
pop
and
pop
mov
das
xor
ret
mov
add
jmp
out
inc
xchg
pop
inc
inc
xchg
push
inc
jb
sbb
sbb
jns
mov
push
icebp
xchg
or
cmc
adc
movs
daa
xor
data16
daa
push
ins
dec
mov
mov
rcr
pop
xor
adc
xchg
mov
test
xchg
fs
addr16
mov
fistp
mov
inc
sbb
test
mov
int3
loope
push
fistp
lock
outs
dec
and
inc
sti
jge
mov
mov
push
aad
addr16
mov
or
inc
or
xchg
xor
mov
mov
cmps
mov
mov
or
jmp
jb
xchg
clc
mov
call
cmp
mov
fbld
into
sub
nop
loop
push
aas
mov
jl
mov
add
cdq
or
inc
jno
mov
xchg
rcl
ficom
movs
cmc
cmp
sub
lock
xor
cmp
jecxz
dec
mov
pusha
ins
cdq
lds
mov
mov
ret
icebp
pop
mov
pop
or
iret
iret
xchg
pop
(bad)
or
hlt
add
sbb
sbb
fcomp
adc
popf
xchg
loop
adc
arpl
or
jg
lea
fimul
mov
loopne
jne
shl
cmps
inc
bound
sub
add
out
add
jge
adc
or
pop
imul
lea
aaa
mov
fdivr
and
sbb
sbb
call
mov
xchg
call
mov
sbb
sub
mov
add
add
push
idiv
neg
cwde
fs
mov
sbb
fwait
movs
xor
imul
scas
frstor
jge
pop
call
test
inc
in
fnsave
lea
inc
aaa
repnz
mov
cmps
mov
add
popa
mov
adc
add
jno
jne
std
push
nop
cs
xor
repz
popa
mov
cli
mov
sbb
mov
mov
inc
shr
call
push
out
dec
rsm
or
(bad)
loope
add
cmp
sbb
ss
mov
cld
inc
ror
imul
in
(bad)
outs
mov
add
sar
adc
daa
iret
xchg
and
pop
xor
add
and
and
adc
sbb
ret
mov
xchg
xchg
cmp
js
neg
cmps
mov
ret
push
inc
sub
xor
or
sbb
adc
aad
mov
neg
out
out
repnz
ffree
and
gs
mov
movs
fcos
retf
es
cwde
xchg
and
push
add
mov
out
or
push
mov
xor
sub
adc
inc
les
jl
xchg
or
mov
in
mov
in
push
pop
iret
cmps
cmp
pusha
mov
sti
push
adc
mov
jmp
push
cmp
loop
loopne
loopne
inc
pushf
out
mov
jno
xor
jmp
mul
js
cld
imul
mov
bound
sub
repnz
ins
daa
ins
mov
sbb
shld
push
mov
sbb
mov
add
xor
push
dec
mov
lods
int3
and
pop
and
cmp
cmc
adc
pop
xor
fisubr
jbe
mov
into
xchg
jg
jl
(bad)
xor
xchg
(bad)
jl
inc
and
idiv
je
repnz
int
sbb
jp
adc
push
movs
sbb
in
cmp
fnstenv
xlat
pop
test
push
loope
stos
mov
data16
mov
lahf
repnz
hlt
addr16
cmp
xchg
jnp
call
movs
inc
sub
cmp
aas
stos
in
sti
and
outs
lds
dec
mov
test
(bad)
aas
cmp
fst
sbb
sub
push
sti
add
cmp
imul
sahf
fdiv
scas
sub
sub
shl
xchg
enter
add
xor
shr
xchg
inc
(bad)
ds
mov
test
(bad)
clc
in
loop
sub
adc
xor
xor
push
popa
push
ss
inc
clc
and
shl
adc
dec
sti
xchg
mov
mov
repnz
pop
cwde
out
mov
out
or
pop
jge
rcl
cli
push
retf
mov
repnz
das
pop
nop
inc
jno
xor
add
adc
and
push
cdq
ins
xchg
mov
sub
lock
and
push
adc
dec
movs
mov
xchg
dec
jnp
mov
add
bound
in
cmp
pop
iret
dec
xor
daa
inc
push
shl
pop
pop
push
in
retf
bound
into
gs
stc
fld
popa
mov
pop
jnp
das
ins
xchg
call
daa
sub
adc
aam
xchg
jg
test
rcr
(bad)
adc
jle
xchg
shr
mov
cmp
push
xchg
(bad)
movs
lock
loope
xchg
xor
mov
fiadd
cmp
cld
ror
and
xchg
xchg
and
shl
enter
repz
mov
shl
or
icebp
push
xchg
lds
push
mov
fldenv
pop
inc
pop
sub
out
mov
mov
stos
dec
mov
or
jg
rcr
lods
pop
aas
mov
(bad)
push
loope
xchg
push
cmc
mov
pop
fs
and
inc
push
stos
mul
jbe
jmp
dec
stos
mov
dec
or
mov
imul
adc
mov
add
xchg
xchg
ror
mov
xchg
or
fst
xor
push
test
ins
add
aas
retf
gs
or
jmp
rcl
mov
pop
jne
into
std
test
cmps
pop
dec
fsubrp
sub
bound
les
mov
mov
popa
popf
cli
leave
sub
pushf
push
mov
outs
and
inc
js
ds
scas
mov
cmp
(bad)
loopne
ss
mov
scas
mov
imul
test
sub
push
cli
ret
idiv
cmps
cmc
inc
mov
int
pushf
push
data16
sub
mov
sbb
sub
mov
out
icebp
cdq
push
stos
push
inc
mov
pop
add
into
jge
outs
pop
retf
add
lods
pop
imul
out
cdq
outs
sbb
lock
enter
js
dec
dec
pop
add
into
xchg
xchg
(bad)
sbb
pop
jmp
mov
scas
clc
cmp
push
mov
dec
pushf
jp
outs
cmp
shl
xchg
jl
cdq
or
or
push
fldcw
in
pop
mov
mov
aam
adc
cmp
and
stos
push
pop
(bad)
out
or
dec
call
sbb
mov
pop
rcl
out
jns
int
dec
in
sub
mov
mov
lods
lock
fwait
scas
jge
gs
outs
mov
xor
sbb
pop
fwait
add
call
mov
sar
addr16
push
fst
push
dec
enter
lahf
jbe
sbb
push
and
out
jmpw
push
mov
arpl
sub
cs
sub
dec
loope
and
cmp
pop
xor
push
and
inc
scas
les
inc
xchg
mov
sbb
imul
inc
cmp
sub
cs
push
push
inc
pop
jecxz
or
sub
or
inc
dec
push
repz
imul
pop
loope
xor
in
add
push
(bad)
hlt
xchg
xchg
and
add
iret
arpl
retf
dec
add
add
retf
(bad)
adc
repnz
mov
pop
mov
jp
call
stos
inc
xchg
mov
(bad)
sub
xor
mov
cmps
loop
pop
sub
les
mov
cdq
test
sub
add
test
repnz
(bad)
icebp
adc
add
mov
popa
cmps
repz
push
scas
inc
xchg
inc
es
add
inc
cmps
test
in
and
add
nop
dec
lods
and
push
call
cmps
enter
cmp
push
fld
mov
mov
pushf
push
push
sub
dec
out
adc
nop
ins
rcr
inc
xor
xor
xchg
cmp
lods
jmp
mov
inc
(bad)
xor
pop
jmp
mov
loope
dec
mov
rol
icebp
fwait
dec
out
or
and
loop
mov
ins
(bad)
loop
adc
in
xchg
pop
xchg
retf
jl
in
xchg
sahf
xrelease
test
out
mov
cld
xchg
gs
lods
dec
jmp
clc
(bad)
test
adc
mov
xlat
cmp
cmp
imul
inc
or
mov
mov
dec
aam
ds
fmul
ret
lods
dec
sub
pop
fimul
pop
ins
nop
bound
add
xchg
mov
retf
mov
stos
scas
dec
sbb
and
std
jge
add
js
xor
fild
add
das
stos
dec
dec
pop
in
xchg
xchg
sub
cs
in
adc
lods
cmp
push
pop
and
jmp
out
pushf
dec
enter
pop
mov
leave
loope
fld
jbe
cs
fwait
inc
test
scas
sbb
int3
mov
pop
or
fdiv
rol
dec
pop
fwait
imul
pop
ins
enter
push
cdq
stos
mov
jmp
in
retf
jns
xor
test
mov
adc
scas
adc
pop
mov
push
jbe
push
adc
jae
mov
push
cli
jo
pop
vphaddudq
pop
pushf
pop
in
and
mov
xor
jno
outs
scas
xchg
stos
bnd
dec
in
jns
jbe
adc
cmp
lea
mov
cdq
es
jae
jno
ja
mov
xchg
and
cmps
mov
in
or
(bad)
loopne
ss
mov
fcomp
adc
sub
test
push
mov
addr16
in
movs
cmc
cli
leave
retf
sub
cmp
add
sub
imul
fwait
pop
bound
loope
inc
mov
or
test
jno
or
ins
aas
clc
sub
add
aas
push
dec
ss
movs
adc
iret
adc
xor
or
lods
int
and
and
pop
jmp
fs
and
inc
fstp
jnp
add
add
in
xor
dec
or
movs
mov
mov
bound
sbb
test
jg
jns
pop
dec
clc
push
xchg
jecxz
int
and
and
sbb
or
and
pop
ret
mov
mov
sahf
mov
jbe
xlat
sub
sub
cmp
push
(bad)
sti
inc
xchg
pshufw
dec
scas
mov
pusha
xor
pop
aam
jecxz
jmp
rcl
popf
pop
sbb
in
in
enter
out
sub
add
jge
aaa
pop
data16
mov
mov
cmp
arpl
retf
fidivr
sbb
pop
or
pusha
loope
pop
mov
lea
fisttp
data16
push
test
fisubr
lahf
jge
inc
cmp
xor
icebp
xchg
scas
fbstp
add
and
and
adc
push
adc
(bad)
ror
adc
hlt
xchg
imul
dec
inc
fild
jmp
fst
xor
jge
das
out
in
pop
enter
gs
outs
clc
xchg
push
dec
rcl
js
jle
cmp
mov
mov
xor
pop
jns
sub
xor
or
hlt
mov
or
mov
add
stos
mov
fdivr
mov
loop
fild
adc
xor
ret
xchg
pop
mov
push
fadd
(bad)
xchg
test
sahf
ds
fdiv
scas
lods
xor
push
inc
jmp
push
pop
mov
sbb
cmps
and
fldln2
popw
lea
int3
sbb
loope
je
test
fdivr
sbb
and
jg
pop
xchg
inc
or
mov
mov
repnz
cmp
or
jecxz
shr
mov
in
push
pop
cdq
or
mov
dec
and
bnd
lahf
fwait
(bad)
lock
jb
sub
dec
xchg
(bad)
push
mov
int
adc
or
ins
shl
sbb
or
out
repnz
stos
sbb
js
jno
fmul
rdtsc
rcr
inc
mov
xor
sub
cmp
mov
jmp
lds
mov
lea
lahf
pop
iret
pop
jae
vpaddsb
sub
add
inc
add
std
cwde
sub
(bad)
fstp
xchg
cmp
cs
mov
and
sub
push
rol
mov
pop
inc
xchg
jbe
fimul
out
mov
cmp
dec
xchg
sbb
jnp
pop
sti
cs
test
xchg
outs
adc
jb
xchg
test
call
push
xchg
out
in
cmp
stos
shl
inc
or
jge
add
sbb
aaa
addr16
jo
cmp
push
cmp
ds
mov
push
imul
js
(bad)
fwait
repnz
dec
jne
rcl
mov
scas
mov
inc
idiv
test
sbb
mov
xchg
jp
sub
unpcklps
dec
outs
pop
fst
(bad)
mov
rcr
lds
jmp
rcl
(bad)
cmp
and
or
fld
int
mov
mov
cmps
ins
cmc
xchg
in
push
xchg
rol
int3
stos
je
pushf
jmp
retf
inc
int3
adc
mov
dec
or
stos
xchg
repz
arpl
iret
inc
mov
scas
push
fild
sbb
loop
ret
sub
and
xchg
das
adc
add
out
sub
xor
jns
and
mov
push
fisttp
and
mov
lods
dec
or
cmp
cmps
aaa
sub
cs
js
popf
imul
repnz
sbb
and
and
sub
ins
js
sub
mov
pushf
std
ret
fwait
ror
leave
stos
jge
lods
push
mov
movs
in
xor
ss
loop
movs
cmp
cdq
test
inc
lods
jle
adc
aam
jl
jbe
fcmovu
dec
mov
idiv
adc
mov
(bad)
pop
loopne
popf
loope
clc
cmc
jmp
pop
nop
inc
adc
cmp
pop
leave
mov
ret
xor
iret
lea
(bad)
rcr
xchg
pop
shr
adc
add
inc
sbb
xor
mov
(bad)
retf
add
xlat
repnz
(bad)
rcr
mov
sbb
jne
jns
(bad)
out
call
test
cmp
add
(bad)
jns
nop
or
gs
fwait
addr16
sbb
outs
jbe
xchg
adc
jl
hlt
mov
fdiv
or
cmc
ror
rcr
cmp
jg
mov
call
or
(bad)
xchg
ret
sbb
sbb
jmp
or
dec
std
dec
loopne
mov
cmc
mov
imul
ret
data16
imul
dec
test
dec
add
(bad)
scas
inc
and
sub
mov
and
mov
cmp
and
addr16
in
int3
repnz
mov
lea
(bad)
dec
mov
sub
gs
test
jae
inc
aam
and
cmp
int3
xchg
sbb
mov
cmp
sub
mov
mov
sub
popa
dec
lahf
add
sar
xor
fcom
addr16
sbb
sub
test
xchg
sti
loop
hlt
xchg
lods
lods
cdq
xchg
leave
inc
mov
std
fnsave
test
jle
test
sbb
movs
retf
inc
je
jp
call
fsubr
jge
mov
or
data16
popa
mov
test
enter
mov
dec
scas
mov
iret
push
clc
and
pop
mov
cs
mov
ror
stc
dec
stos
push
sbb
sub
aad
cmp
xor
iret
jecxz
sub
pop
sub
or
adc
in
add
add
xlat
fsub
and
push
fnsave
out
in
cs
jne
sub
push
outs
lods
test
nop
dec
int
mov
cmp
xchg
in
lock
mov
out
xchg
adc
loopne
mov
sbb
mov
jne
dec
(bad)
push
dec
sbb
add
sub
(bad)
pop
mov
add
adc
mov
sbb
push
(bad)
sti
adc
adc
sbb
push
adc
retf
jl
cmp
adc
add
mov
out
pop
cmp
inc
xor
push
cmp
mov
pop
and
ret
loopne
shl
or
xchg
lods
repnz
dec
jmp
les
inc
add
pop
ror
sbb
mov
div
mov
dec
stc
adc
pop
sbb
(bad)
sub
or
test
scas
inc
aas
xchg
stos
jbe
(bad)
ror
enter
dec
aaa
push
int
(bad)
stc
mov
push
xor
(bad)
dec
pop
mov
test
cmp
push
sar
mov
and
or
call
clc
sti
out
ficomp
js
loop
push
mov
scas
sbb
out
mov
std
push
add
adc
jle
shl
enter
sub
or
daa
fisubr
ja
cmps
or
bound
xchg
rcl
mov
mov
sub
cmc
sub
jnp
out
mov
shl
arpl
mov
clc
sbb
fdivr
mov
pop
enter
mov
mov
push
mov
rcr
enter
rol
xor
inc
repz
movs
not
or
lds
loop
xchg
xchg
mov
jo
ins
cmp
ins
test
dec
cli
xor
popf
out
stos
lea
les
mov
mov
arpl
mov
xor
dec
fcomp
pop
lods
cli
xchg
cmp
xor
dec
mov
add
(bad)
(bad)
imul
test
sti
add
lds
stos
cmps
cmp
pop
xor
pop
(bad)
sar
pop
(bad)
jl
jne
or
sbb
nop
daa
xorps
xchg
xor
(bad)
cli
aad
add
lahf
jecxz
jge
lahf
and
pop
scas
xchg
mov
ffree
mov
idiv
into
ffree
and
sbb
jne
rol
sub
(bad)
pop
imul
addr16
cmp
mov
clc
lods
popf
dec
in
arpl
addr16
aad
outs
xchg
call
xchg
lods
stos
mov
mov
sub
cmp
add
pop
sub
xchg
jbe
mov
mov
and
loope
push
push
mov
cmp
mov
jp
imul
cdq
(bad)
call
cmc
pop
pusha
sbb
sub
push
xchg
sbb
movs
push
jbe
jb
or
sar
or
jb
les
push
pop
xor
stos
push
enter
adc
jo
sbb
push
ins
add
pop
jecxz
push
int3
cmps
sub
mov
in
addr16
mov
inc
and
or
rcpps
outs
mov
xor
mov
lods
xor
and
xchg
shr
push
xor
sbb
push
add
daa
bound
add
sahf
xchg
push
rcl
push
xchg
pop
cs
cmp
and
jno
dec
pusha
mov
adc
cli
inc
fimul
mov
sahf
cmc
sub
sub
stos
adc
sub
sbb
lahf
add
inc
loopne
stos
frstor
sbb
movs
into
mov
ss
sub
adc
push
test
in
div
push
outs
xor
scas
and
sbb
mov
mov
push
pop
out
pop
shr
sub
call
mov
mov
sub
cli
movs
dec
xchg
jl
aam
adc
jne
xchg
xchg
cld
es
mov
and
pop
jb
xchg
mov
lahf
xchg
imul
int3
xor
xchg
call
jg
inc
in
adc
shr
inc
les
outs
pop
ret
shl
mov
stos
inc
mov
mov
movs
mov
pop
adc
mov
sahf
std
pusha
ss
ret
ret
jb
adc
add
ja
lock
mov
and
push
mov
cmc
dec
sub
into
add
pop
xchg
mov
adc
add
imul
jne
mov
(bad)
sbb
add
mov
call
adc
push
inc
enter
cs
jecxz
push
push
sbb
xchg
cmps
or
jnp
jno
test
scas
ins
out
and
mov
and
aaa
jne
repnz
cmps
jge
test
aas
inc
xchg
test
ficomp
sbb
and
mov
adc
iret
stc
add
cwde
cmp
pop
int
call
icebp
jns
in
push
(bad)
xchg
rcl
sti
xchg
retf
retf
jae
(bad)
out
imul
and
mov
pushf
cmp
sar
retf
xchg
rcl
sub
popf
iret
fsub
aas
sub
xchg
sub
fs
mov
call
push
push
jo
leave
mov
jp
dec
mov
sbb
xchg
jl
lock
sbb
push
nop
fucom
xor
jp
jno
mov
push
int
xor
addr16
and
adc
pop
mov
mov
cdq
mov
jp
jne
mov
out
adc
cmp
or
hlt
data16
xsha256
pop
pop
mov
adc
leave
call
mov
mov
sbb
sub
sbb
pop
pop
cmps
inc
jae
loope
sar
dec
adc
push
jmp
sub
add
add
dec
jns
iret
dec
jmp
shl
outs
sub
nop
leave
pop
cs
pop
jle
jmp
mov
scas
pop
xchg
inc
mov
das
mov
js
cld
pop
not
outs
pop
int3
cmp
cmc
aaa
pop
pushf
aam
rcl
mov
scas
xchg
fdiv
xchg
pop
adc
xlat
adc
arpl
sbb
pop
sti
aad
ja
xor
popf
gs
push
in
sti
xor
(bad)
mov
add
push
xchg
and
pop
(bad)
retf
imul
dec
(bad)
icebp
outs
or
mov
cmps
js
or
xchg
sti
loope
push
adc
jecxz
push
lods
ss
dec
lods
clc
push
in
mov
(bad)
scas
jns
and
mov
pop
lods
nop
repnz
test
lahf
jg
fcmovbe
je
imul
jg
test
push
ror
xor
jmp
cdq
dec
out
jno
repz
pop
cli
dec
clc
test
leave
jns
push
or
shl
imul
shr
scas
outs
pop
dec
ss
xchg
sar
daa
retf
bound
adc
sbb
int3
or
dec
mov
cwde
das
outs
jecxz
push
pop
das
xchg
sbb
xchg
xchg
pop
pusha
in
mov
enter
add
xchg
mov
and
(bad)
cmp
cmc
in
jmp
inc
mov
jle
sub
cvtps2pi
call
jge
lods
pop
or
into
in
mov
ret
push
jbe
mov
call
inc
sbb
js
bound
stos
rol
sbb
in
sbb
cmp
push
jl
jb
jecxz
push
icebp
or
mov
mov
inc
aam
fucom
pusha
hlt
stos
out
outs
out
movs
sub
pop
mov
mov
push
pusha
mov
add
vunpcklps
cld
(bad)
mov
in
jne
push
push
out
sub
mov
dec
push
(bad)
xor
or
shr
rdmsr
add
(bad)
mov
sar
mov
lock
popf
or
adc
sub
ins
mov
and
popa
dec
xchg
retf
add
stos
and
cmps
pop
mov
ins
pop
mov
test
xor
gs
(bad)
fnstcw
mov
and
fnsave
popf
adc
scas
cmc
(bad)
fild
je
mov
shl
das
cwde
dec
or
mov
cs
sbb
sub
ins
push
pop
sbb
add
mov
mov
cmp
sbb
push
mov
jnp
push
push
sbb
retf
mov
loopne
adc
xlat
cmps
xor
add
ficomp
xor
sti
repz
dec
int3
rcr
sbb
sub
pop
inc
xor
push
imul
repnz
and
fdivr
cmp
ret
retf
dec
mov
xor
or
add
addr16
push
mov
xchg
adc
push
fs
aam
hlt
daa
psrad
test
sbb
cmp
add
cs
lock
fwait
in
enter
cmp
jg
in
mov
add
loope
fwait
lock
lea
push
push
mov
pop
nop
shr
sub
and
sbb
hlt
stos
ins
adc
jl
jp
out
push
and
push
dec
or
jb
push
pop
sub
pop
addr16
in
movs
clc
push
call
mov
mov
sbb
(bad)
xchg
jnp
sar
cmps
stc
jmp
push
addr16
or
daa
pop
xchg
push
xor
inc
jb
imul
aas
int3
and
outs
and
fistp
fsub
xchg
cmp
dec
push
xor
and
retf
int3
sbb
jb
mov
sub
xor
les
loop
jmp
dec
test
fwait
mov
xchg
fs
popa
shl
stos
leave
xor
push
jle
push
fisttp
fs
inc
mov
xchg
pop
ret
movs
push
aam
aam
xchg
mov
loopne
mov
(bad)
mov
rcl
cwde
push
in
jb
outs
movs
sub
pop
(bad)
scas
sbb
jp
gs
push
inc
jb
fidivr
inc
mov
add
jl
push
inc
cwde
jo
dec
rcr
imul
out
mov
mov
jb
jb
adc
iret
xchg
(bad)
ss
stos
mov
imul
mov
xchg
aaa
pop
lock
and
out
mov
es
mov
mov
or
mov
jmp
cmp
in
ret
push
outs
stos
cmp
push
fs
fistp
mov
jg
les
cs
or
outs
aas
mov
adc
cmp
mov
fwait
xchg
jno
sub
mov
(bad)
cmp
jle
or
enter
das
inc
data16
mov
in
(bad)
pushf
add
push
sbb
sub
adc
in
xchg
push
test
pop
cmp
xchg
rcl
adc
ror
xchg
les
dec
mov
jp
inc
(bad)
and
jb
jl
jb
retf
sub
xor
ins
lods
ror
mov
ja
in
movs
aam
mov
cs
(bad)
mov
cli
fiadd
inc
in
arpl
xchg
push
inc
jne
xlat
in
or
xchg
fadd
test
sahf
aas
and
rcl
jo
jno
and
mov
in
lahf
inc
loopne
enter
xchg
inc
shl
jmp
daa
sbb
(bad)
push
ja
call
inc
inc
push
adc
popa
add
sbb
lea
mov
loopne
add
or
sbb
or
cmps
mov
jp
mov
push
gs
sub
adc
clc
pusha
scas
cs
mov
jae
xchg
xchg
cmp
lea
add
jge
pop
and
jmp
ins
mov
in
sub
inc
adc
mov
je
imul
fnsetpm(287
mov
mov
(bad)
movs
(bad)
fadd
adc
and
mov
mov
jno
or
adc
pop
add
push
int
inc
aaa
add
xchg
or
call
pop
mov
loop
lods
shl
cmp
in
or
jmp
cmp
pop
push
into
mov
cli
std
add
cmp
les
pushf
test
rol
and
and
push
ret
and
repnz
shl
sub
pop
push
xchg
jb
mov
idiv
lahf
mov
pushf
xor
fs
xor
adc
les
das
pop
sbb
push
imul
test
dec
cmp
rcl
sbb
sub
jmp
sbb
mov
test
xchg
rcr
pop
inc
lods
(bad)
xchg
mov
(bad)
repz
cmp
push
(bad)
push
pop
ret
stos
mul
loope
inc
cmp
outs
or
call
and
pop
retf
jbe
inc
push
retf
and
nop
lea
pop
and
stc
jno
push
arpl
pop
mov
(bad)
cli
push
imul
mov
dec
and
fimul
and
imul
inc
nop
push
fs
mov
and
or
ficomp
test
xor
sar
pop
inc
mov
inc
xchg
inc
mov
sbb
test
rol
adc
lock
es
pop
in
jecxz
jnp
inc
sub
adc
xchg
lahf
movs
inc
rcr
fnstenv
mov
cmp
movs
sbb
jge
pop
mov
fsubp
dec
sub
jno
sbb
(bad)
in
sbb
or
and
inc
sbb
inc
fist
pop
cmps
push
sbb
pusha
nop
inc
or
out
loope
sbb
das
cmps
leave
stc
mov
and
js
jne
and
dec
dec
in
xchg
out
xchg
xchg
and
mov
rcl
pop
sbb
movs
sub
push
not
cdq
test
mov
mov
sub
mov
loopne
jmp
jns
dec
push
jns
enter
or
ret
add
xchg
enter
adc
ret
lods
sahf
add
push
sbb
(bad)
jb
push
pop
popf
sar
inc
arpl
xor
movs
std
test
outs
push
dec
jge
xchg
clc
sbb
jmp
or
in
add
(bad)
popa
mov
sub
or
mov
sub
ja
add
cmp
cdq
jge
dec
outs
or
push
out
leave
pop
or
and
iret
and
xor
repnz
jo
mov
out
rol
test
sbb
call
jmp
rcl
dec
sti
jl
mov
jle
mov
into
dec
arpl
mov
or
test
dec
push
mov
sbb
inc
lods
mov
adc
fistp
sar
inc
fsubr
enter
(bad)
mov
mov
dec
push
popa
jg
mov
and
and
adc
jne
iret
mov
sbb
(bad)
je
mov
enter
and
push
inc
adc
cmp
aaa
(bad)
in
xlat
inc
(bad)
pushf
fwait
or
test
jle
jg
pop
mov
jl
ficom
mov
mov
and
shl
mov
pusha
jno
xchg
adc
outs
retf
ins
inc
es
dec
fld
std
add
cwde
jecxz
xor
(bad)
fdivp
es
out
dec
inc
retf
jbe
and
adc
loope
mov
push
dec
hlt
call
inc
and
retf
(bad)
jle
push
call
retf
lds
xchg
(bad)
dec
addr16
and
xor
xor
popa
test
pop
std
xchg
lods
cmp
shl
jne
movs
cli
cmp
in
cmp
pop
jle
loopne
ds
(bad)
idiv
mov
mov
imul
and
xor
mov
ret
xor
hlt
mov
and
enter
mov
in
adc
push
mov
xor
or
mov
dec
push
xor
mov
dec
cmp
or
mov
test
arpl
jo
movs
sub
aas
push
push
ss
outs
call
lods
(bad)
imul
mov
inc
add
test
sbb
out
lea
data16
shl
adc
stc
add
mov
test
call
sbb
mov
(bad)
xor
sbb
call
cmps
xchg
shl
mov
jmp
fstp
jns
repnz
dec
smsw
aad
cmp
loopne
inc
xchg
and
sub
test
jne
loopne
cwde
je
push
mov
ficomp
mov
addr16
test
std
jnp
sbb
ja
(bad)
cdq
daa
inc
popa
adc
mov
sbb
ja
test
cli
xchg
mov
into
cmp
push
ret
inc
fwait
retf
ins
sbb
mov
push
xor
mov
stos
sbb
scas
add
sahf
mov
push
ss
sbb
push
cmp
jmp
repnz
or
gs
dec
pop
nop
mov
(bad)
daa
popf
jne
test
jbe
mov
ja
shr
test
cmc
or
jmp
cmps
repnz
xchg
dec
and
xchg
ds
pop
test
movs
icebp
fbstp
sub
mov
pop
imul
ins
xchg
out
(bad)
rol
fcomp
push
cli
shr
fmul
add
call
mov
lea
imul
push
pop
sub
les
sahf
and
mov
sar
mov
cmp
jbe
out
cmp
mov
repz
outs
lea
jge
lahf
mov
sub
sub
push
fs
sub
jp
mov
mov
movs
cmc
fisttp
cmc
lods
sbb
pop
xor
cmps
mov
outs
or
aaa
and
jl
iret
aaa
loope
pop
jne
stos
pop
pop
jno
push
int3
scas
dec
popa
das
sbb
xchg
jb
sbb
mov
xchg
fadd
sub
push
into
ins
and
mov
sub
push
or
pop
mov
mov
outs
mov
lods
les
and
ret
cli
shl
xchg
pop
(bad)
push
mov
loope
outs
or
or
imul
jecxz
push
neg
hlt
sub
and
xlat
dec
int3
data16
das
xor
addr16
retf
movs
cli
mov
rol
cmps
stos
sub
push
movs
daa
xchg
fimul
xchg
add
jne
xchg
stc
mov
mov
fist
dec
cmp
jae
sub
mov
mov
jmp
and
adc
sbb
enter
lss
pop
outs
cmps
inc
sub
sub
xchg
in
mov
cli
add
inc
mov
fmul
inc
jnp
inc
push
xchg
sti
int3
lahf
vmovsd
push
mov
dec
xor
out
sbb
or
test
enter
cmp
adc
cmp
adc
ret
and
iret
frstor
in
pop
out
popa
xchg
sbb
and
mov
call
enter
mov
adc
add
out
mov
lods
jp
ret
les
ret
jle
pusha
adc
jb
xchg
sub
fdecstp
ins
or
call
add
xchg
xor
xor
mov
das
sub
or
adc
mov
int3
pop
call
mov
into
push
cwde
inc
adc
pop
aam
ins
mov
adc
sub
in
es
sbb
jmp
call
out
je
jns
jmp
je
xor
leave
ret
fidiv
inc
mov
movs
mov
push
enter
adc
mov
and
cmc
adc
add
cwde
and
or
and
(bad)
sbb
fwait
push
lea
mov
inc
xchg
(bad)
movs
test
push
dec
jle
loope
(bad)
out
retf
std
push
dec
adc
sub
push
fimul
pop
int
or
out
xchg
add
xchg
stc
sub
(bad)
clc
imul
dec
hlt
mov
aas
mov
outs
or
dec
xor
(bad)
in
or
pushf
movs
mov
xchg
pop
arpl
inc
lahf
retf
jle
xor
loopne
xor
in
mov
retf
inc
movs
xchg
push
push
mov
mov
and
mov
adc
es
fmul
mov
imul
jne
es
call
and
arpl
inc
arpl
jmp
out
cmps
leave
js
mov
leave
iret
shr
inc
xor
bound
inc
out
or
jb
loop
sar
or
pop
sub
cli
jne
ror
adc
pusha
sub
jecxz
pusha
jb
jne
pop
paddusb
ds
jo
and
sti
cmp
movs
shl
mov
adc
jge
mov
add
aaa
adc
cwde
dec
adc
dec
pusha
pop
cli
mov
rcl
in
loopne
adc
mov
retf
jle
jns
cmp
out
cmp
arpl
pop
push
ror
fstp
jbe
adc
ds
clc
sar
dec
xchg
and
jae
cdq
add
je
mov
jns
in
pop
jl
jmp
sub
xchg
repz
mov
icebp
add
or
push
jb
or
add
les
sbb
inc
pop
sub
sbb
out
rcr
aad
sbb
es
sub
or
retf
repz
add
hlt
repz
neg
std
adc
aas
and
out
jno
cld
fwait
push
push
call
push
pop
xor
push
daa
loopne
xor
jnp
dec
arpl
das
shr
jl
push
daa
(bad)
jle
inc
sar
popa
sti
and
les
push
xchg
push
dec
ja
push
addr16
push
or
cmp
pop
inc
jmp
cmc
rol
xchg
enter
outs
hlt
inc
popa
push
pop
cmp
dec
in
enter
adc
mov
ja
sbb
retf
adc
je
lock
inc
jge
pusha
clc
mov
out
in
je
push
test
jae
cmc
in
(bad)
ins
repz
sub
loope
dec
xchg
push
test
mov
mov
push
mov
jne
mov
retf
ret
xor
imul
mov
xchg
leave
cld
pop
push
ret
sti
sar
sub
rcl
jmp
mov
inc
popf
hlt
and
jp
xor
loop
cmc
std
ror
inc
cwde
fwait
lods
pusha
or
mov
es
pop
cmp
cmp
xor
inc
cmc
pop
sahf
loop
or
cmp
cmp
aam
push
les
fwait
addr16
push
in
adc
cmp
lods
cmp
aaa
in
or
xchg
int3
sub
arpl
xchg
lods
xlat
movs
dec
mov
add
cmp
ss
pusha
add
outs
(bad)
push
das
dec
mov
out
ins
jne
jo
in
mov
mov
inc
inc
ret
dec
adc
dec
push
leave
ror
je
sbb
ret
repz
dec
dec
adc
shl
nop
and
sbb
ror
mov
mov
push
cld
adc
test
adc
add
mov
xlat
(bad)
xlat
int3
mov
jbe
popf
mov
cli
sbb
cld
dec
cdq
pop
xlat
sahf
in
dec
adc
jo
leave
mov
fucomip
or
cwde
or
mov
adc
test
loop
or
(bad)
adc
repnz
shr
int
fs
fcomp
mov
mov
and
pushf
stos
mov
fdivr
mov
adc
jnp
ret
stos
ja
iret
xchg
mov
out
pop
or
int
pop
adc
sbb
idiv
xchg
(bad)
mov
and
bound
stc
in
mov
or
stos
mov
add
aas
mov
in
push
dec
or
cld
imul
pusha
and
imul
mov
lea
inc
adc
sbb
inc
fmul
sub
xor
hlt
lahf
call
cmp
clc
mov
xchg
jg
mov
or
sbb
xor
ins
sub
push
or
xchg
mov
nop
dec
aas
(bad)
fmul
or
call
shr
push
dec
leave
mov
push
rep
or
inc
loope
pop
inc
pop
lock
outs
(bad)
or
imul
and
hlt
mov
jge
sub
jbe
inc
fisttp
add
mov
sub
push
xor
fprem1
dec
cld
aas
fs
mov
repz
pop
sub
addr16
mov
pop
add
or
pop
mov
push
shl
xchg
or
ins
pop
sub
(bad)
rcl
push
mov
mov
push
mov
mov
stos
ins
jle
lds
ret
movs
jl
or
adc
adc
cmp
mov
cmps
push
xchg
jo
push
lds
js
sub
push
(bad)
jne
and
retf
add
cmp
sti
cld
fisubr
inc
sub
pop
cmp
test
add
jle
aad
jle
int3
sub
sub
mov
jmp
mov
sbb
jle
stos
int3
ret
test
xlat
xchg
out
sbb
add
(bad)
(bad)
adc
push
cmp
or
in
xor
sub
pop
mov
push
xor
pop
mov
cmp
imul
ds
imul
xchg
xor
mov
jp
jne
enter
add
or
push
mov
push
add
out
jae
fadd
call
pop
and
jle
and
popf
test
sub
int3
xchg
xor
xor
add
xchg
push
(bad)
fimul
lods
or
xchg
sbb
sub
dec
iret
mov
les
lea
mov
jmp
inc
bound
xchg
mov
and
lea
repnz
xchg
pop
cwde
lahf
inc
xchg
inc
js
mov
dec
mov
or
mov
sbb
arpl
push
cdq
ficom
ret
lds
push
mov
cwde
inc
ss
xor
add
icebp
cmp
test
xor
add
rcr
fisub
sbb
in
test
ja
mov
sub
call
add
jge
mov
pop
and
clc
repnz
call
cmps
or
ins
xchg
clc
mov
loopne
scas
xchg
es
push
mov
push
fmul
out
push
call
(bad)
sub
xor
loopne
push
jmp
(bad)
imul
lods
xor
std
lock
jno
das
sbb
xor
xlat
and
dec
or
jmp
sbb
pop
fbstp
pop
jo
jp
test
adc
cdq
loop
or
sbb
and
dec
rcl
in
daa
adc
or
mov
outs
add
ret
push
jp
jbe
push
mov
inc
adc
retf
pushw
cdq
sub
xchg
inc
cmp
jae
aad
push
xor
sbb
movs
and
in
dec
call
(bad)
jp
test
and
std
sub
imul
inc
and
push
inc
cmp
cmp
cld
pusha
retf
mov
pop
ror
pop
mov
loopne
mov
out
mov
cwde
pop
mov
inc
data16
cmp
pushf
aad
jb
pop
test
xchg
ja
scas
sbb
out
jae
int
jmp
pop
adc
icebp
mov
dec
xchg
mov
pop
cmps
add
pop
push
(bad)
and
sbb
out
push
and
jno
or
push
push
cdq
clc
rcr
outs
cmc
rcl
loopne
push
movs
xor
xchg
xchg
out
int3
test
int3
xor
inc
xor
addr16
in
fst
jecxz
popa
out
(bad)
sbb
lock
mov
shl
jae
mov
mov
test
dec
fidiv
imul
xor
std
ins
cmp
xchg
ror
mov
sar
mov
dec
in
popf
data16
iret
in
inc
push
push
mov
lock
mov
daa
mov
or
cwde
daa
or
xor
xor
pop
xchg
push
retf
add
seta
and
call
hlt
jne
pop
cmps
mov
stos
mov
jge
cdq
(bad)
or
into
mov
aas
cmp
push
mov
imul
cmp
cmp
popf
push
xlat
pop
add
mov
sub
in
push
sar
mov
(bad)
mov
sbb
call
xchg
mov
adc
jmp
jecxz
or
pop
ins
aam
add
jno
push
lea
xor
pop
int3
mov
in
sbb
arpl
mov
push
ror
dec
cmps
dec
mov
dec
or
and
or
dec
loope
xor
aam
sbb
and
shl
dec
cli
arpl
fcmovb
add
mov
shl
jl
jb
push
dec
jbe
lods
xchg
add
inc
xchg
ins
daa
bound
pusha
(bad)
mov
fist
adc
shr
ror
ds
xchg
cmps
iret
adc
jne
add
pop
daa
adc
adc
and
xlat
sbb
stos
mov
lods
inc
sar
pop
sbb
add
add
jge
and
sub
(bad)
aad
(bad)
int3
xchg
adc
(bad)
xchg
sti
sbb
in
or
bound
cmp
cmp
popf
std
inc
ds
enter
add
loop
sbb
xchg
dec
add
jb
test
and
outs
mul
pop
inc
and
mov
mov
mov
mov
xor
test
xchg
aam
cld
add
xor
aad
dec
je
xor
or
fcomip
dec
jbe
in
adc
and
lock
or
or
enter
je
sbb
ins
test
jo
pop
fidivr
dec
jecxz
sub
scas
cli
sub
dec
bound
jmp
sbb
cdq
jg
fistp
in
fs
mov
jmp
addr16
or
lods
cmc
stos
mov
pop
stc
add
jecxz
lea
lahf
fimul
outs
mov
push
adc
out
test
stc
push
and
add
movs
adc
loope
pop
or
pop
sar
fimul
sar
sbb
xchg
mov
mov
sub
hlt
lods
mov
jge
pusha
cwde
jle
mov
mov
jnp
jnp
clc
mov
add
or
lds
sbb
mov
in
push
dec
adc
test
lock
and
jnp
fcmovnbe
adc
add
sahf
push
add
pop
les
dec
inc
and
cli
mov
mov
call
xor
jle
js
pop
retf
rcr
cmp
inc
popf
fldenv
retf
cmps
dec
ins
adc
pop
sub
cmp
xchg
aas
cld
ret
rcr
(bad)
(bad)
cmp
enter
xchg
into
js
jo
dec
js
test
mov
add
fistp
jae
popf
in
or
sub
daa
jo
xchg
pop
popa
mov
jnp
pop
leave
dec
fld
xor
inc
(bad)
pop
pop
push
pop
dec
pusha
mov
jg
sub
inc
jbe
mov
adc
fwait
aaa
mov
pushf
lds
mov
sbb
mov
in
sbb
dec
das
in
int3
xchg
and
fisubr
jg
in
or
mov
(bad)
test
rcl
addr16
jo
loop
mov
es
ficom
and
push
call
retf
mov
xchg
repnz
xchg
or
bnd
push
addr16
dec
dec
gs
out
fsubr
jae
outs
push
xor
add
jns
mov
js
call
xor
sbb
fnstcw
shl
js
in
xchg
pop
mov
jb
outs
popf
test
add
sub
pop
dec
gs
hlt
cmps
add
xchg
jnp
lods
xchg
cmc
in
int3
dec
ja
add
dec
jle
js
test
mov
sahf
imul
cs
lea
call
ins
neg
push
popf
ror
jo
mov
jmp
xor
ficomp
xor
sbb
sub
enter
lahf
call
call
fcomip
or
add
xor
loopne
xchg
adc
or
push
in
pop
mov
push
cmc
es
hlt
das
xor
mov
push
or
enter
aad
and
sub
sbb
or
aaa
movs
hlt
call
xor
pop
ins
jae
xchg
aaa
and
pop
mov
movs
out
and
test
bound
pop
sub
or
loopne
lea
mov
loopne
jl
in
add
adc
xor
push
movs
mov
ss
loope
loopne
push
add
mov
shl
push
mov
push
in
in
dec
data16
es
jmp
xor
inc
sub
outs
gs
mov
cs
movs
mov
div
cmp
mov
clc
pop
stos
fisttp
inc
mov
dec
inc
pop
and
dec
xor
fwait
and
sbb
mov
jne
push
cmp
movq
mov
mov
rep
es
sub
mov
mov
je
cmps
(bad)
fldenv
js
in
push
jbe
mov
hlt
jp
rcr
(bad)
aaa
sbb
pop
(bad)
sbb
test
outs
and
sub
mov
retf
jmp
cld
cs
adc
inc
js
mov
inc
aad
ins
and
xor
std
stos
cvtps2pi
inc
inc
fsub
lods
adc
mov
or
ret
cvttps2pi
pop
sti
stc
jno
aad
repz
daa
dec
cmp
sbb
add
sbb
jno
pop
out
ins
and
(bad)
stc
cmp
enter
scas
cs
call
ss
push
imul
iret
mov
stos
(bad)
in
iret
fistp
ret
or
adc
sub
xchg
call
repz
jae
fst
fimul
inc
fsubr
in
sti
jo
sti
mov
mov
iret
push
push
and
stc
shl
sub
or
mov
rol
out
loop
sbb
and
mov
inc
xor
or
push
inc
lahf
pop
inc
inc
dec
cmp
ins
aad
ss
dec
idiv
sti
in
stos
and
or
rcr
inc
ss
test
jle
loop
fcomp
es
cmps
pop
js
mov
mov
mov
mov
dec
push
dec
sbb
push
je
cmps
push
ins
dec
xchg
iret
push
xor
sar
pop
fstp
call
mov
xchg
ss
add
and
pusha
outs
out
or
lea
sahf
hlt
cli
mov
aas
sti
outs
je
and
mov
sbb
hlt
(bad)
mov
(bad)
cmc
push
mov
jo
adc
pop
out
jge
add
fcomp
out
pop
cmps
push
pop
stos
test
in
sub
mov
imul
cwde
or
ins
ins
mov
ins
cdq
popa
in
inc
pop
mov
add
push
cmp
sbb
sub
xchg
movs
inc
sbb
movs
out
adc
sahf
out
jecxz
mov
fscale
fist
adc
inc
sahf
pushf
jb
mov
sub
jnp
test
push
imul
mov
iret
out
cmps
daa
mov
outs
(bad)
fs
ret
xchg
fisub
fs
in
dec
ja
sahf
jecxz
push
push
adc
add
imul
fstp
out
out
out
out
mov
mov
mov
into
or
icebp
in
jp
push
jbe
jb
js
jnp
adc
movs
jnp
cdq
idiv
mov
jne
rcr
ret
retf
ja
push
test
cmp
add
jbe
repnz
dec
imul
jbe
dec
out
and
lods
push
ins
jns
cmp
cld
cld
sbb
lods
xchg
(bad)
cmp
push
push
stc
xor
int
ficomp
jmp
div
addr16
pop
or
test
mov
adc
xlat
imul
je
sub
test
outs
in
rol
lods
in
push
and
jmp
mov
sbb
ins
and
mov
mov
jae
aad
lea
(bad)
jbe
pop
push
call
or
ss
dec
scas
in
dec
inc
fstp
pop
add
es
test
cmp
loope
leave
mov
and
push
adc
fnstsw
xchg
adc
cmp
mov
clc
es
ret
sahf
retf
and
hlt
stos
mov
data16
int3
inc
out
cmp
mov
xchg
mov
call
gs
iret
ror
in
xchg
ss
ja
or
inc
or
aaa
push
(bad)
pop
jp
fild
clc
xchg
push
ins
jb
sub
sar
std
loopne
mov
out
stos
jmp
jge
loopne
cmp
mov
fmul
xor
lods
sub
ja
or
lods
mov
scas
fs
dec
test
mov
repz
nop
mov
imul
xchg
mov
pop
inc
sub
xlat
fadd
mov
push
(bad)
repz
in
cmp
les
scas
pop
mov
pop
cmp
xchg
sub
add
jbe
inc
sar
ds
mov
(bad)
mov
lahf
cli
mov
clc
stc
aad
push
cmc
mov
(bad)
add
loop
sub
pop
mov
repnz
pop
enter
push
pop
ds
or
aaa
sahf
aad
stos
push
inc
fisubr
mov
xchg
or
pop
xchg
xchg
push
jns
xchg
sub
aam
pop
xchg
popa
pop
adc
fcomi
mov
push
ds
loopne
jb
out
call
inc
add
lea
in
imul
outs
ja
sub
clc
mov
mov
pop
iret
mov
cs
mov
pop
sahf
movs
pop
push
fadd
repnz
sti
xchg
aaa
cs
sbb
xor
push
inc
je
jmp
mov
ins
in
fiadd
test
or
aam
jp
leave
stc
xchg
xchg
scas
dec
jnp
jb
xor
add
jmp
xchg
cmps
mov
pop
sub
mov
push
shl
pop
xchg
imul
pop
jmp
jae
adc
jb
and
lods
enter
sbb
add
test
inc
or
adc
push
test
inc
pushf
mov
adc
iret
dec
sbb
ret
jge
std
ins
push
or
(bad)
ins
cmps
ins
das
and
sub
shr
out
neg
lods
stc
pop
cdq
je
int
sub
loope
(bad)
or
inc
mov
jge
int3
pop
cmps
aad
test
xor
test
call
icebp
test
(bad)
jae
lock
cmp
(bad)
cmp
add
shl
cmp
add
push
push
push
std
dec
(bad)
fcom
fwait
xchg
mov
in
stos
xchg
cmp
push
lods
les
(bad)
mov
out
sub
pushf
cmc
jecxz
fsubr
shrd
rcr
and
(bad)
shr
repnz
fiadd
fisubr
or
or
jmp
sbb
mov
fistp
out
dec
pop
mov
inc
and
arpl
fldcw
adc
pop
mov
adc
xor
repz
and
cmp
push
push
push
inc
js
scas
cmps
or
stc
and
and
xlat
pushf
sbb
mov
sub
sub
retf
icebp
push
sysexit
adc
dec
clc
mov
cmp
loope
and
cmp
pusha
cli
adc
jge
fst
xor
jbe
jecxz
and
mov
movs
outs
std
fcom
mov
push
test
jl
push
mov
push
jb
mov
inc
add
les
add
ret
cmp
outs
ret
pusha
jge
enter
scas
jl
repz
aaa
add
outs
inc
out
in
loop
sbb
stc
mov
jno
add
inc
fimul
lods
adc
sub
xchg
ror
inc
or
pop
mov
mov
mov
leave
push
sti
cmp
inc
sub
mov
and
fs
je
mov
sbb
nop
sbb
jp
sbb
dec
xor
dec
mov
clc
push
inc
and
or
cs
shr
and
sbb
push
pop
in
cwde
int
and
test
xor
daa
shr
seto
pushf
clc
mov
dec
icebp
(bad)
out
retf
imul
pop
sbb
js
add
and
aam
add
in
pop
inc
ret
aam
js
inc
fwait
mov
inc
xchg
rcl
xor
imul
pop
jbe
pop
cwde
xchg
outs
jp
mul
or
dec
arpl
dec
jp
adc
sbb
(bad)
(bad)
leave
xchg
in
cmp
inc
adc
mov
rcl
(bad)
xchg
mov
sti
mov
lods
add
xchg
cmp
mov
cmp
mov
xchg
add
push
xchg
outs
pop
ins
adc
cdq
call
stos
imul
mov
fcom
bound
or
or
mov
out
test
jmp
sub
popaw
das
(bad)
popa
push
sar
adc
or
inc
arpl
push
(bad)
dec
sub
xor
jmp
fcmovnbe
aad
cli
sbb
cmps
xor
or
js
mov
repz
clc
jb
sar
test
xchg
cli
jbe
aam
dec
fwait
add
(bad)
or
xor
pop
movs
(bad)
push
xchg
adc
imul
or
mov
shl
loop
leave
xchg
(bad)
outs
sub
pop
xor
test
int3
adc
outs
pop
bound
push
je
pop
bound
dec
shl
loopne
retf
or
cmp
xor
scas
xor
out
and
pusha
jp
nop
mov
addr16
loop
push
push
lock
(bad)
pop
xor
in
xor
sub
or
xor
repnz
fistp
dec
sbb
int3
aaa
sbb
sub
cmp
sub
sub
ja
mov
add
sahf
mov
loopne
sahf
or
xchg
sub
arpl
addr16
push
clc
jns
or
xor
clc
(bad)
out
sub
lods
mov
sub
dec
pop
pop
sbb
or
out
daa
adc
sbb
je
shl
cli
dec
pop
jp
fcom
out
ds
stos
call
sbb
xchg
and
fisttp
sbb
out
add
xor
fnop
jae
ret
das
xor
sahf
adc
mov
dec
ret
lods
cmp
outs
dec
push
xor
ror
retf
mov
popfw
lods
dec
call
jge
leave
xor
mov
cmp
inc
pop
dec
out
dec
sub
jmp
inc
xchg
jbe
das
and
shl
xlat
jmp
and
xlat
in
in
add
in
push
ja
icebp
mov
aaa
sbb
push
lods
ret
cmp
mov
jge
pop
retf
mov
mov
push
mov
xchg
ja
cmp
mov
js
stc
jmp
xchg
mov
fisttp
rcr
pop
sub
hlt
xlat
push
mov
out
out
and
repnz
push
loope
call
pop
jno
add
dec
sbb
test
mov
dec
mov
adc
ret
in
fstp
inc
mov
cmp
dec
add
or
int
mov
imul
dec
faddp
or
fistp
test
mov
or
jb
fld
pop
xor
mov
imul
push
xchg
(bad)
jge
and
xchg
js
(bad)
lock
icebp
or
aam
jno
mov
jns
push
repz
ds
rol
and
fs
fistp
rcl
fld
in
add
and
cli
cli
xchg
xchg
inc
rcr
pop
push
xor
add
mov
mov
ins
sbb
out
jge
sbb
retf
mov
in
pop
inc
fwait
das
dec
dec
or
icebp
mov
adc
mov
xchg
stc
sub
sub
pop
sbb
adc
cmp
jae
mov
sub
push
mov
push
cmp
xlat
daa
aas
mov
mov
push
sbb
xor
ds
dec
mov
fadd
jbe
pop
aas
movs
adc
lea
cmp
xchg
jne
mov
lods
dec
imul
aad
loopne
test
jne
mov
int3
shr
fnsave
into
mov
xor
fs
and
mov
hlt
hlt
xor
cmp
inc
inc
push
out
sub
add
mov
sub
dec
add
xchg
cmp
inc
scas
fcmovnb
scas
out
ret
cmps
jecxz
int3
jge
test
mov
movs
pop
dec
jle
test
push
xor
cli
aaa
push
add
es
cwde
rcr
aad
pop
leave
js
jecxz
in
fld
inc
pop
inc
xchg
push
leave
je
mul
es
cmps
repnz
push
push
and
(bad)
mov
leave
or
push
test
or
(bad)
fstp
add
add
repnz
call
pop
data16
inc
xor
xor
and
clc
mov
xchg
retf
inc
std
loop
arpl
fimul
and
adc
xchg
sahf
es
pop
mov
imul
clc
dec
js
into
sahf
mov
leave
or
pop
sbb
sahf
ret
and
nop
mov
cld
dec
jmp
call
ret
push
aas
daa
scas
and
and
or
cdq
stos
pop
ins
pusha
mov
or
add
test
comiss
lods
movs
dec
cmp
leave
dec
rol
fcom
or
test
pop
mov
sti
inc
jl
aad
stos
ins
sub
adc
mov
mov
push
fdiv
test
mov
xlat
test
stos
adc
jbe
das
ja
cmc
fwait
mov
pop
inc
dec
inc
test
mov
nop
fiadd
and
ins
movs
loop
xchg
inc
jae
cmc
xchg
cmp
mov
mov
iret
cld
adc
pop
addr16
out
mov
(bad)
lds
daa
mov
scas
cmp
mov
cmp
test
mov
push
rcr
out
jns
fstp
xor
jae
aam
xor
adc
and
(bad)
adc
call
mov
pop
pop
adc
xchg
fldenv
je
mov
jge
(bad)
jne
daa
pop
aas
cs
rcr
mov
call
xchg
(bad)
js
(bad)
mov
dec
dec
add
arpl
test
pop
add
sbb
cs
sti
pusha
ror
(bad)
adc
mov
adc
cmp
xlat
inc
inc
and
ins
cmp
bound
mov
call
sbb
inc
ds
push
sub
pop
mov
adc
(bad)
outs
rcr
jbe
inc
in
mov
ds
adc
jmp
cmp
fiadd
and
sbb
sbb
push
dec
loop
in
mov
pop
mov
bound
dec
enter
xchg
sub
fldenv
mov
inc
sbb
xor
mov
xchg
mov
push
stos
imul
xor
mov
sbb
dec
xchg
push
adc
cdq
jmp
xchg
jle
stos
inc
jae
repnz
cmp
mov
inc
loopne
pushf
push
out
(bad)
retf
mov
jno
mov
jle
repz
in
mov
add
mov
jne
retf
cmc
popa
push
cmp
mov
push
ja
dec
outs
push
sub
fistp
shr
adc
and
mov
cmp
inc
or
xor
fcmovnu
sub
movs
jbe
loope
fsincos
aas
ja
stc
jmp
cli
ficom
mov
loope
(bad)
mov
and
push
xor
scas
ficomp
jge
xor
or
aam
jmp
sahf
sbb
jg
fs
jmp
pop
jge
enter
repnz
pop
mov
daa
fs
jge
and
cld
pop
xchg
cs
or
ret
test
pop
(bad)
adc
inc
(bad)
cmc
aaa
enter
scas
sar
fs
jle
push
mov
pop
xor
out
and
pop
jge
push
push
fdiv
ja
cmp
sbb
push
and
xchg
push
stos
fst
xor
inc
cmp
add
mov
test
jmp
xchg
aaa
and
sbb
adc
das
leave
repnz
push
(bad)
js
mov
icebp
lea
cli
mov
push
cmp
rcl
cmp
arpl
dec
in
push
mov
mov
add
scas
mul
adc
inc
cwde
ficom
aaa
xchg
call
pop
xchg
adc
arpl
outs
in
mov
movs
sub
in
or
stos
clc
ja
mov
adc
or
sub
cmp
pop
jae
jo
std
pop
cli
test
pmaddwd
dec
scas
aad
pop
(bad)
dec
jg
inc
jecxz
jmp
mov
ja
mov
dec
or
cmc
mov
adc
mov
jecxz
xchg
retf
push
adc
cmps
push
jo
jmp
popf
mov
rol
jp
and
add
add
loope
retf
mov
mov
pushf
push
lods
cmp
lahf
sbb
imul
cmp
push
dec
add
stos
jns
test
inc
ret
mov
push
or
sti
push
mov
xor
add
fsub
adc
fucompp
out
popa
dec
pop
pop
ins
das
ret
call
aad
push
ret
push
add
sub
dec
cs
xchg
mov
push
repz
fsubp
mov
jle
mov
std
lods
dec
adc
inc
leave
adc
scas
cdq
mov
sbb
cld
(bad)
xchg
icebp
inc
xchg
add
sbb
mov
outs
ds
jg
add
add
bound
addr16
std
mov
pop
not
jne
inc
mov
xchg
dec
pop
sbb
mov
dec
xor
(bad)
sahf
sub
pop
mov
push
jp
mov
or
mov
inc
repz
xor
ins
repnz
daa
or
inc
jmp
ins
or
ins
push
push
add
xchg
clc
clc
and
popa
jb
inc
repz
jmp
mov
pop
sub
int
adc
scas
adc
test
mov
xchg
std
ds
inc
fld
fsubr
jbe
(bad)
pop
jns
out
push
inc
sbb
dec
repnz
push
adc
stos
or
push
imul
and
sbb
mov
push
cdq
xchg
dec
jmp
and
cmp
pop
lock
test
idiv
jge
das
adc
sbb
pop
xchg
jg
xchg
aaa
arpl
sbb
lahf
and
ins
retf
pop
add
popa
jge
xlat
push
(bad)
ret
inc
adc
and
bndstx
xor
movs
pushf
sbb
jge
fcom
adc
mov
xlat
enter
xchg
and
adc
inc
pop
xchg
les
mov
out
pop
div
sub
stos
cmp
fist
push
mov
dec
mov
sbb
sub
aaa
mov
inc
stos
(bad)
jle
popf
(bad)
rcr
(bad)
cld
les
fistp
sbb
pop
repz
cmp
shr
sub
fidivr
pop
pop
add
xor
lods
retf
sbb
paddq
xchg
inc
mov
inc
lock
cli
in
nop
iret
adc
fs
pop
je
adc
xor
and
sub
sub
xor
pop
mov
push
out
fstp
shr
(bad)
cld
imul
ror
cdq
cwde
sar
shr
lods
cmps
imul
pop
lock
test
adc
mov
call
lock
dec
or
retf
xchg
movs
lea
adc
fstp
pop
clc
inc
es
add
mov
into
test
mov
in
cmp
push
ja
dec
cli
mov
ror
bound
inc
fwait
or
scas
add
jbe
es
clc
mov
mov
push
cdq
outs
stos
int3
aad
dec
add
pop
out
add
ret
xor
inc
leave
gs
addr16
loope
push
ror
es
sbb
xor
dec
mov
jg
je
adc
rcl
cld
xor
push
and
pop
hlt
sub
and
xchg
loop
push
adc
stos
mov
pop
ret
pop
scas
jb
hlt
pop
scas
(bad)
sbb
jg
adc
mov
int3
test
inc
xor
cmp
dec
xchg
(bad)
mov
sar
or
inc
dec
mov
pop
mov
scas
pop
xlat
add
movs
dec
cmp
jl
lahf
ror
repz
jns
pop
cli
in
pop
cdq
cmc
(bad)
add
adc
mov
mov
cld
lods
pop
pop
mov
fcmovbe
or
sub
loopne
cmp
jo
cld
sbb
imul
mov
cmp
dec
add
pop
mov
mov
into
rcr
jmp
enter
xchg
scas
aas
mov
and
std
push
xor
ins
aam
inc
addr16
nop
xchg
push
shl
pop
mov
mov
xor
mov
repnz
ins
enter
iret
jmp
sub
xchg
pop
and
push
push
push
inc
or
jmp
rcl
jl
(bad)
sub
mov
ret
sbb
mov
pushf
aaa
das
fcmovnu
shl
xchg
cmp
dec
inc
xchg
movs
mov
inc
out
in
cmp
mov
jae
hlt
cld
jnp
push
adc
inc
xor
cmp
or
pusha
cmp
fsub
xor
sub
push
call
jmp
bound
or
inc
outs
call
jno
push
and
das
xchg
xor
mov
call
lock
sub
xor
fisubr
rcl
jge
int
push
jnp
cmp
jns
mov
and
sub
mov
cmc
mov
dec
loope
lds
addr16
int
fdivr
retf
fwait
lock
sbb
iret
dec
cli
push
jecxz
mov
stos
mov
sub
cdq
(bad)
les
sahf
mul
shr
fcom
mov
xor
pop
in
adc
mov
dec
in
jmp
cmp
fwait
adc
sbb
sub
inc
arpl
sbb
sub
mov
add
inc
mov
fist
mov
push
mov
ret
and
mov
push
jbe
lea
and
inc
adc
push
in
dec
movs
xchg
jmp
pop
and
scas
and
mov
inc
push
jnp
je
cwde
and
lods
jle
xchg
pusha
adc
fdivr
loope
mov
(bad)
out
mov
int
push
ins
inc
ror
and
in
mov
and
jmp
loop
jecxz
or
lds
dec
pop
rol
mov
push
xor
or
call
movs
imul
ds
stc
popa
push
cdq
mov
and
out
push
daa
mov
mov
jno
ins
xor
push
ds
or
mov
leave
mov
sbb
sbb
call
call
not
mov
adc
data16
sti
push
push
inc
push
sub
sub
add
in
mov
das
pop
cmc
ins
pushf
push
cmps
add
sub
mov
fwait
jbe
ficom
rcl
mov
outs
mov
loope
inc
jl
stos
mov
cdq
jle
xchg
pushf
xor
dec
and
mov
sub
pop
mov
sub
aas
add
mov
cld
adc
inc
add
cmp
retf
inc
dec
fadd
das
xchg
mov
mov
pinsrw
inc
or
push
push
xchg
push
and
mov
jne
out
cmp
adc
sub
mov
jle
cdq
cmp
movs
fnstenv
cmp
jo
inc
xchg
sub
or
cmps
xchg
xchg
jns
mov
sub
mov
loop
scas
jle
xor
sbb
mov
retf
jae
sbb
and
mov
mov
jecxz
mov
jbe
test
xchg
pushf
push
adc
sub
ds
sbb
push
gs
test
push
inc
inc
jp
out
bound
xor
mov
ret
(bad)
in
ret
mov
cmp
mov
enter
adc
aaa
int
push
jmp
xor
mov
sbb
jge
xor
and
jne
retf
into
jmp
(bad)
fwait
pop
frstor
and
clc
jne
iret
jle
(bad)
mov
sub
(bad)
and
mov
sbb
lea
jo
push
push
mov
(bad)
dec
push
fst
mov
xchg
ss
jmp
mov
mov
sub
icebp
push
aad
mul
inc
pop
mov
inc
lds
je
mov
ret
mov
dec
out
jno
cli
jnp
in
icebp
iret
daa
cmp
cmc
xchg
outs
xchg
mov
scas
test
call
dec
lock
mov
add
shr
lock
mov
das
pop
stc
xchg
ins
out
xor
mov
sub
cli
pop
ins
cmp
inc
sbb
rcr
rol
leave
push
repz
daa
pop
popf
shl
js
mov
and
fisub
in
test
inc
jbe
rcr
int
in
pop
ds
adc
and
push
mov
mov
push
sub
inc
cmp
movhps
fbld
addr16
out
xor
mov
repnz
es
ret
or
loope
rcr
sbb
lahf
retf
icebp
jmp
fucomp
ins
je
add
out
xor
pop
into
scas
ror
pop
xor
std
mov
cmp
cmps
daa
js
pop
pmullw
setnp
bsr
jg
push
mov
xchg
jno
and
mov
ja
ret
dec
xor
lods
or
adc
push
ins
add
stc
sub
test
loopne
inc
xor
test
jnp
out
mov
ds
mov
sahf
xchg
repnz
mov
dec
jmp
inc
mov
sbb
or
xchg
ss
and
mov
mov
div
in
lahf
sbb
outs
or
xchg
sub
mov
lahf
xlat
movs
nop
scas
loope
sbb
mov
push
dec
fimul
lea
test
test
mov
push
inc
jb
or
es
cwde
push
not
loopne
mov
mov
or
retf
int3
mov
fs
repnz
mov
jno
inc
add
call
and
pop
inc
jno
sub
mov
add
xor
jmp
test
and
mov
enter
jmp
dec
sub
jns
or
and
js
scas
imul
and
xchg
jg
ret
(bad)
loope
out
xchg
jns
pop
dec
inc
pushf
jae
mov
ins
mov
into
xor
rcpps
jmp
dec
aad
dec
sbb
dec
and
jmp
push
pop
int3
(bad)
sbb
push
dec
xchg
test
jg
cmp
jge
dec
imul
retf
mov
jae
aam
add
cwde
adc
inc
int3
imul
xlat
(bad)
imul
dec
test
jmp
jbe
jg
jb
xlat
fisub
retf
xor
or
push
clc
(bad)
aam
push
jecxz
adc
adc
adc
add
inc
push
int
push
push
mov
adc
dec
(bad)
popf
mov
jae
call
(bad)
lds
xor
shl
repz
imul
fstp
sbb
mov
rol
pop
xchg
aad
pop
push
cmps
mul
movs
and
jo
addr16
outs
loopne
jle
retf
lds
test
bnd
ss
xchg
push
repnz
hlt
xor
lock
aas
lock
(bad)
mov
ins
xchg
clc
dec
push
mov
pop
jae
and
hlt
jbe
pop
push
mov
inc
mov
mov
push
aaa
aaa
mov
into
and
cld
test
adc
and
sub
mov
adc
(bad)
std
xor
jmp
lods
out
inc
xor
stos
dec
dec
mov
xlat
dec
frstor
dec
call
add
mov
cwde
fiadd
ror
inc
aam
mov
pusha
lock
repz
jl
jno
mov
aaa
mov
iret
cld
ja
cwde
ss
add
aaa
inc
and
sub
fdivr
and
push
add
sahf
les
sbb
mov
or
and
test
pop
mov
dec
repz
pushf
xchg
jl
in
or
stos
inc
xchg
pop
(bad)
fadd
outs
cmp
aas
or
add
pop
xor
mov
(bad)
(bad)
mov
add
std
jae
inc
add
mov
es
mov
sbb
add
arpl
mov
sti
cwde
sub
(bad)
out
clc
ins
adc
xor
sahf
pushf
sub
outs
mov
imul
or
aad
xchg
jecxz
ret
dec
or
test
shr
je
sar
or
sub
and
leave
sbb
xor
cmps
or
dec
cs
mov
mov
rol
in
mov
daa
and
cwde
push
fst
mov
sub
pop
mov
(bad)
push
dec
xchg
push
sub
add
addr16
mov
les
shl
in
adc
and
gs
sbb
cmps
cmp
ins
daa
addr16
jle
xchg
xchg
test
(bad)
repz
or
retf
mov
mov
je
push
dec
and
mov
cdq
or
push
mov
mov
repnz
ss
out
cmc
sub
pop
mov
cdq
mov
adc
out
pop
dec
ins
adc
push
ret
sub
retf
in
jb
xor
loop
outs
pop
jnp
xor
sbb
retf
mov
dec
(bad)
jo
in
jl
add
je
in
cmps
cmp
mov
and
xchg
dec
dec
out
clc
mov
mov
mov
addr16
add
pop
dec
outs
stc
cmp
add
mov
and
shl
pusha
mov
out
jne
jp
dec
inc
lods
fs
pusha
or
aas
cmp
outs
jbe
test
add
dec
sbb
or
xchg
xchg
xor
sar
aas
adc
stos
jecxz
mov
test
mov
xor
fisttp
cld
jmp
cld
iret
pop
sbb
call
xchg
aad
cmps
mov
clc
push
xchg
pop
nop
fild
jp
push
push
sar
pop
ret
mov
sub
pop
adc
or
aaa
sbb
add
neg
cmp
cmp
jl
cmp
loop
call
push
aaa
push
and
shl
xor
lea
popa
movs
jmp
mov
aam
cmps
sub
fs
adc
or
std
push
xchg
mov
pop
cmp
cli
xchg
xor
jmp
jmp
test
shl
or
fisub
push
shl
and
pushf
push
outs
push
xchg
and
nop
rcl
mov
push
add
push
and
lods
rcl
test
xor
test
pop
or
and
dec
sbb
jmp
imul
ja
mov
int
sbb
sub
lahf
(bad)
jb
fisttp
cld
add
jo
pushf
jmp
xor
daa
adc
mov
out
jp
dec
dec
repz
retf
rep
push
jle
out
xor
or
leave
jbe
lds
loopne
add
pop
mov
not
mov
jnp
mov
rol
mov
xchg
jp
xchg
add
leave
cmp
iret
(bad)
out
push
sub
cwde
cdq
pause
fwait
mov
jb
stos
lahf
jecxz
and
xor
push
loope
dec
sahf
es
jno
shl
pop
repz
dec
out
movs
pusha
loope
mov
mov
scas
test
cmc
jle
jne
pop
xlat
clc
pop
push
jecxz
xor
xchg
arpl
push
call
lock
(bad)
sbb
loope
retf
sets
ins
mov
arpl
stc
pop
pop
sub
retf
mov
adc
inc
push
sub
cmp
or
sbb
adc
lods
and
loopne
or
mov
dec
cmp
imul
loopne
jle
and
add
scas
xor
sbb
mov
cmp
add
add
mov
xor
jns
repnz
jbe
adc
jb
cmps
iret
jnp
into
dec
sub
push
cmp
sbb
ss
cmp
sbb
mov
pop
xchg
aaa
jecxz
xor
add
fs
sub
xor
(bad)
dec
pop
fld
and
add
push
mov
icebp
je
into
lods
movs
cdq
jp
mov
sbb
xchg
mov
cmps
lods
popf
lods
mov
popf
loopne
xor
(bad)
out
jl
push
pop
xchg
fcmovb
pushf
mov
push
lds
add
in
push
mov
dec
and
arpl
mov
mov
push
and
sub
mov
(bad)
repz
cmp
fcomp
add
mov
out
les
pop
lock
xor
add
lods
mov
and
call
or
mul
mov
mov
dec
cmps
xor
scas
popf
in
mov
ds
push
movs
cmp
and
xchg
shr
sti
mov
(bad)
bnd
aaa
cli
sub
rcr
sahf
xchg
int
mov
out
adc
cdq
jae
scas
test
inc
int3
ror
imul
loope
hlt
(bad)
dec
add
xchg
mov
inc
mov
lods
popf
std
out
rol
ins
shl
xlat
mov
arpl
jle
or
stc
nop
mov
mov
mov
cmc
push
fstp
and
sahf
loope
iret
sub
das
xlat
pop
adc
adc
and
dec
cdq
pop
or
xchg
adc
hlt
cdq
mov
dec
adc
jmp
das
aam
sti
push
sub
push
xor
push
pop
in
pop
jle
addr16
fld
xor
xor
cmp
add
add
mov
nop
and
mov
add
enter
push
xchg
mov
mov
mov
mov
add
sub
add
add
outs
data16
out
push
push
push
mov
pop
add
or
jne
dec
out
and
ins
mov
and
inc
add
and
adc
mov
test
mov
dec
sbb
jp
mov
cmp
and
repz
in
mov
mov
mov
(bad)
das
(bad)
xchg
xchg
inc
je
jae
sbb
sub
push
dec
dec
cwde
mov
sbb
mov
jl
jle
sub
mov
in
mov
jecxz
inc
cmp
pop
mov
mov
jno
dec
dec
jae
and
pop
cmc
xchg
fcom
adc
jg
add
cdq
lods
pop
stos
imul
lea
or
mov
loop
ins
(bad)
shr
push
push
call
mov
cs
inc
cdq
pop
pusha
scas
inc
sbb
push
fcomp
sub
inc
cmp
adc
adc
test
je
cmc
pop
js
retf
sub
in
fwait
push
add
xor
dec
fadd
or
mov
sahf
dec
cmp
xchg
out
mov
mov
mov
popa
and
enter
ja
jmp
dec
mov
xchg
fnsave
sbb
es
lods
mov
mov
lea
mov
idiv
or
call
sub
push
jg
add
sub
js
mov
out
and
(bad)
aaa
mov
neg
adc
cmps
push
mov
jns
fcomp
call
mov
or
jmp
mov
xor
xchg
stos
jo
push
bound
(bad)
rcl
call
repnz
add
shl
jp
cmp
pop
mov
add
stc
gs
adc
in
pop
and
mov
idiv
fsub
push
pop
cmc
adc
add
sti
cld
adc
ins
or
sti
(bad)
scas
pop
lea
js
ret
test
int3
or
(bad)
xchg
add
pop
test
xchg
mov
call
sub
mov
test
mov
(bad)
jmp
aad
mov
fimul
add
aaa
lods
xor
xor
add
dec
jecxz
sbb
cmp
and
jnp
mov
dec
xchg
in
cmps
dec
xchg
in
ret
in
call
daa
adc
aas
(bad)
cmc
in
scas
out
in
or
imul
add
inc
xor
jne
jg
aas
imul
sub
and
jg
inc
lds
or
and
add
aad
hlt
mov
dec
xor
arpl
add
dec
xchg
retf
sbb
adc
imul
in
push
mov
add
push
add
fld
add
cmp
aas
dec
xlat
out
and
mov
xchg
cmp
leave
dec
mov
mov
repnz
mov
lods
(bad)
mov
xchg
mov
cmp
dec
cmps
push
xchg
fisttp
data16
movs
mov
gs
in
or
mov
mov
pop
xor
js
fistp
es
mov
popa
fld
js
cld
push
outs
les
cs
adc
(bad)
aad
mov
xor
je
ss
pop
je
pop
ss
pop
cmps
clc
xchg
daa
jns
and
jbe
xchg
fsubr
cld
pop
scas
push
sar
popf
(bad)
mov
adc
into
mov
aaa
enter
into
int3
cdq
xchg
popf
jne
mov
and
add
mov
shr
fs
jecxz
idiv
mov
push
test
sbb
pop
inc
push
xchg
(bad)
xchg
test
add
jae
xchg
jmp
ds
sar
mov
push
pusha
adc
cmps
je
imul
xchg
mov
xchg
mov
aad
cs
sbb
adc
sub
or
call
pop
mov
pop
mov
cs
mov
xchg
mov
int3
push
retf
leave
dec
pop
mov
in
adc
cmp
cmc
repnz
sub
or
dec
cld
es
xchg
cmp
pop
jmp
movs
xor
ins
sub
arpl
mov
outs
daa
jne
enter
not
dec
push
shl
cmps
dec
test
sbb
cmp
and
pop
add
sbb
ss
mov
xor
and
sti
imul
dec
sbb
mov
jecxz
add
jg
je
and
jmp
dec
xchg
out
pop
sti
retf
adc
mov
or
xchg
xor
je
jbe
out
pop
cld
jmp
sub
jno
xor
or
inc
mov
enter
loopne
pop
xor
fnstcw
jmp
adc
pushf
mov
adc
call
xchg
pop
cmps
lahf
and
adc
inc
out
or
stos
fstp
pop
lds
push
push
pop
mov
adc
push
inc
xor
jle
pop
shl
mov
ja
dec
sbb
cmp
sub
sbb
xchg
addr16
dec
mov
jbe
adc
mov
push
pop
loop
inc
(bad)
loopne
cmp
dec
popa
jecxz
mov
mov
lods
(bad)
jp
movs
add
imul
and
and
adc
sar
and
mov
adc
xchg
sbb
mov
cmp
ja
pop
mov
mov
test
xor
sub
jg
mov
mov
mov
jle
pop
retf
gs
sub
std
pushf
retf
out
cwde
or
cmc
sbb
pop
jb
aas
fistp
movs
(bad)
fs
pop
scas
xor
push
sub
cwde
jbe
(bad)
aad
dec
dec
mov
fnsave
or
push
fisubr
jmp
sbb
outs
(bad)
sar
cmp
cmp
paddusw
test
xor
call
pop
add
jge
push
xchg
int
sub
mov
ret
sbb
cmp
adc
sar
movs
xor
(bad)
mov
push
scas
mov
and
repnz
stc
pop
adc
aas
and
pop
dec
mov
cs
retf
sbb
clc
popa
cmp
lahf
ins
shl
pushf
push
out
fcom
sub
mov
pop
jno
mov
cwde
sub
cmp
pop
dec
rcr
and
test
sub
popa
xor
jae
cdq
push
addr16
pop
push
inc
pusha
add
addr16
pop
sub
leave
test
jne
push
push
shl
pop
xchg
inc
pop
xor
in
push
and
and
pop
mov
cmc
rcl
pushf
push
jmp
add
ds
add
rcl
shr
inc
fisubr
loopne
push
retf
test
xchg
lods
jo
data16
es
mov
cmp
mov
sbb
call
aam
dec
pop
jecxz
lods
loope
(bad)
push
dec
mov
cmp
frndint
lods
adc
sub
ret
fdiv
shl
xor
push
int
cli
add
adc
xor
popf
xchg
in
dec
pop
ds
jno
aad
xor
xor
popa
(bad)
mov
stc
ins
lock
pusha
sub
cmp
adc
xchg
jnp
mov
loope
mov
ret
mov
or
shr
sub
out
icebp
add
push
push
rcl
sub
out
or
and
in
aas
and
jnp
push
iret
ins
dec
mov
in
dec
ret
cmp
ins
fisub
jne
loope
int3
lock
sbb
jne
ss
xchg
mov
cs
xor
(bad)
popa
pop
xor
push
or
mov
test
xchg
gs
jae
jle
fcomp
sub
out
inc
add
popa
(bad)
aad
add
pop
std
pop
js
mov
xchg
neg
repnz
pop
out
push
cmp
aas
sub
dec
add
adc
fnstsw
icebp
not
mov
cwde
lea
add
outs
mov
into
jb
xlat
fcomp
ror
sbb
xchg
mov
aam
ins
daa
adc
test
imul
dec
loope
adc
cld
cmp
mov
cdq
fnstsw
cmps
mov
leave
test
push
jne
scas
add
ficomp
js
mov
or
adc
push
jnp
idiv
xchg
mov
retf
mov
js
mov
int
and
add
leave
mov
mov
cld
jns
inc
sti
jns
mov
scas
mov
push
push
jae
sahf
pusha
inc
or
out
cmps
adc
xchg
push
dec
add
rcr
ja
in
push
push
(bad)
dec
call
xor
xchg
loopne
into
inc
lock
xchg
cmp
cmp
cmp
retf
sahf
and
movs
add
inc
imul
jl
dec
ficom
retf
mov
mov
outs
push
dec
jnp
dec
fldenv
mov
sahf
mov
dec
rol
mov
pop
retf
(bad)
mov
add
addr16
push
daa
aam
xor
and
nop
in
dec
mov
mov
add
out
sbb
inc
lea
cmp
fsub
cmps
jecxz
sub
pop
jnp
xchg
test
test
aaa
jo
lods
add
ins
sbb
or
je
xor
push
lahf
and
jl
pop
shr
fs
jl
(bad)
jb
(bad)
cdq
adc
fldenv
xchg
mov
cmc
retf
arpl
iret
pop
daa
ret
cmp
add
ret
mov
sbb
std
adc
mov
inc
push
cli
mov
dec
loop
adc
loope
bound
dec
xchg
fimul
aad
in
push
int3
push
mov
pop
and
cwde
lds
aaa
dec
xor
jmp
sub
push
out
cs
mov
add
mov
mov
aad
dec
sbb
das
xchg
ds
sub
mov
mov
pop
xsaveopt
xor
in
add
js
repz
dec
enter
push
(bad)
push
xchg
(bad)
mov
or
mov
sbb
loopne
mov
push
call
xor
sahf
ds
sbb
sbb
(bad)
imul
sbb
mov
sbb
dec
xlat
xor
pop
mov
hlt
mov
cli
mov
psadbw
movs
retf
push
loopne
push
int
lea
inc
nop
dec
aas
nop
scas
sbb
xchg
imul
xchg
mov
inc
clc
cmp
je
push
out
push
popa
ret
stos
xchg
fs
jbe
sbb
movs
push
pandn
cs
inc
sbb
jl
fs
push
neg
lods
mul
aas
mov
dec
adc
enter
mov
xchg
mov
sar
xor
inc
mov
push
cwde
out
fwait
repnz
outs
out
mov
inc
or
mov
xor
jmp
sub
(bad)
lods
cmc
push
cwde
mov
retf
mov
mov
addr16
xor
pop
sbb
adc
movs
inc
push
in
mov
add
addr16
cwde
retf
push
mov
or
mov
fnsave
mov
neg
fld
fistp
mov
lds
hlt
lea
pop
dec
mov
cs
push
xor
(bad)
push
xchg
aas
outs
or
iret
mov
push
or
mov
add
stc
mov
loop
stc
fs
inc
fst
add
(bad)
ror
xchg
lea
ds
fnstenv
int3
fbstp
xor
imul
dec
(bad)
mov
jmp
in
and
dec
adc
jae
stc
mov
bnd
fmul
inc
sbb
cmp
xor
jno
pop
sub
cmp
mov
gs
nop
jp
and
daa
stc
jmp
mov
xchg
push
push
cld
stos
lock
jne
lea
fld
(bad)
add
cmp
int
jp
adc
lds
inc
cld
jge
jno
pop
push
out
xor
out
push
call
cmp
mov
fist
mov
stos
pushf
push
mov
call
adc
push
add
or
call
xchg
mov
aas
push
cmp
mov
retf
mov
jmp
dec
mov
pop
hlt
aaa
mov
imul
dec
daa
cmp
push
or
bound
mov
dec
arpl
dec
rol
mov
fisttp
xchg
cmp
cmp
xchg
cmp
and
jb
std
sbb
xor
adc
push
dec
cmp
add
jecxz
mov
mov
and
stc
div
xchg
fcom
pop
(bad)
jmp
(bad)
mov
and
mov
ja
jne
gs
adc
push
test
pop
out
int
leave
lods
aas
jl
sbb
mov
ret
pop
xchg
(bad)
cmp
aad
icebp
call
or
(bad)
sti
pop
pop
adc
pop
mov
pop
scas
mov
jmp
cli
out
cld
add
xchg
ja
fistp
outs
test
mov
ficom
inc
imul
jbe
mov
cmp
test
sbb
pop
jnp
push
test
mov
std
fs
je
mov
adc
cld
jmp
fimul
in
retf
mov
inc
cdq
and
dec
les
dec
imul
jnp
imul
add
sub
mov
dec
in
mov
mov
xor
and
xor
inc
lods
cmp
arpl
xlat
adc
vpandn
mov
sahf
hlt
sbb
jbe
push
ret
cmp
in
sbb
shl
idiv
shr
inc
outs
js
popf
cmc
je
sub
cmp
or
adc
xlat
(bad)
rcr
mov
aad
jg
stc
push
mov
push
jb
je
push
loopne
imul
pop
mov
es
aad
out
mov
mov
(bad)
push
mov
shl
mov
mov
or
push
out
lahf
ja
loopne
jb
and
(bad)
push
rol
test
cwde
fs
dec
pop
sti
fs
add
scas
fwait
inc
push
pusha
xor
or
xor
nop
mov
imul
xchg
ret
sbb
bound
out
and
mov
jmp
cli
push
imul
pop
xor
mov
add
in
sbb
enter
mov
jmp
movs
mov
adc
cli
lea
inc
sbb
sbb
adc
jo
cmc
mov
push
cmc
cmp
cmp
push
stos
cmp
pop
or
pusha
in
jl
mov
xchg
inc
lods
fisubr
mov
mov
nop
push
iret
mov
and
in
sbb
pop
inc
mov
ja
clc
jnp
mul
push
ins
jmp
mov
xor
and
lods
sub
frstor
dec
mov
rdtsc
test
movs
push
adc
or
xchg
loopne
adc
mov
repz
jp
cmp
(bad)
xchg
add
add
mov
xchg
xchg
outs
outs
sbb
(bad)
je
jecxz
cmps
inc
ins
jecxz
adc
inc
push
push
stc
lock
loope
mov
xchg
mov
xchg
mov
sbb
popa
jmp
(bad)
cmps
aaa
pop
xchg
add
pop
inc
inc
push
in
jecxz
iret
sbb
(bad)
rcl
adc
adc
jmp
movs
xchg
push
inc
mov
mov
test
mov
and
pop
shl
mov
stos
or
cwde
inc
out
setp
pop
movs
dec
sbb
fdiv
mov
inc
add
jnp
outs
pushw
and
stos
retf
sbb
fcom
int3
ins
lea
mov
sbb
stos
retf
loopne
dec
and
cwde
sbb
xchg
or
mov
push
xchg
xchg
jo
jp
inc
mov
adc
add
mov
cmp
pop
pushf
stc
xchg
inc
xchg
int
push
outs
fild
mov
and
sub
das
out
mov
xor
jmp
and
fld
sub
outs
aam
sub
sub
sbb
ja
addr16
sub
jle
imul
jg
scas
jg
outs
adc
retf
mov
es
xchg
mov
mov
les
fcomp
xchg
inc
push
adc
std
clc
ror
xchg
jno
push
cmp
in
sar
push
lds
and
jl
inc
mov
sub
xchg
xchg
xchg
pop
lods
sbb
ficomp
clc
aas
dec
outs
sbb
(bad)
jp
sub
(bad)
adc
or
das
call
mov
mov
mov
push
sub
sub
retf
sub
inc
into
shrd
mov
sub
mov
jg
mov
cmp
call
scas
cmp
push
cld
aaa
cmp
add
dec
jg
pop
or
adc
loopne
cmp
shl
jno
fs
cmp
retf
jmp
mov
adc
rcl
sub
int3
jle
mov
fwait
push
sub
repz
jb
rcr
sub
and
mov
push
inc
mov
lahf
pop
aaa
push
loop
push
mov
inc
add
aad
dec
cmp
and
js
(bad)
in
and
(bad)
inc
sbb
in
loop
cmp
stos
rcr
and
cwde
aas
fwait
sbb
es
loopne
int
inc
and
jb
xor
or
stos
push
not
sub
jbe
pop
xor
int
pop
jmp
adc
scas
outs
int3
xor
test
outs
cwde
in
out
push
pop
push
test
imul
lods
aad
in
dec
lahf
mov
ret
xor
ficom
dec
aaa
and
fistp
(bad)
mov
jle
sahf
pop
cli
or
pop
test
dec
adc
sub
xchg
or
(bad)
mov
sahf
dec
jo
jmp
sbb
push
sub
les
inc
or
xor
xor
mov
adc
neg
xor
or
inc
sub
cmp
lods
fmul
jge
sbb
mov
push
mov
inc
mov
out
in
shl
xchg
inc
cmps
clc
xor
push
fdivr
cld
push
cmp
icebp
push
add
and
loope
jecxz
xor
in
sub
and
jne
inc
out
or
imul
clc
jne
inc
xor
mov
cld
inc
push
dec
addr16
sub
adc
iret
jecxz
repnz
push
cmp
movups
imul
into
js
popa
pop
int
or
xor
mov
push
mov
in
or
dec
dec
int
mov
das
pop
repnz
call
addr16
add
clc
ins
or
hlt
add
cwde
sti
je
outs
jge
xor
pop
dec
jmp
mov
rcl
aaa
fisub
xchg
xchg
adc
jg
pop
push
(bad)
stos
and
movs
sbb
xchg
ret
dec
mov
push
shl
jo
(bad)
xlat
cdq
and
mov
mov
test
pusha
or
enter
into
and
loop
push
out
add
repz
adc
fidiv
(bad)
popf
sbb
push
mov
or
pushf
xor
cmps
add
je
mov
adc
mov
fidiv
add
and
sbb
dec
pop
sbb
and
mov
enter
cs
cmp
adc
daa
ds
inc
mov
jbe
mov
imul
cmp
push
lods
adc
jb
ffree
push
or
scas
outs
test
imul
ins
add
add
push
dec
jmp
add
cmps
push
mov
dec
lahf
dec
cld
scas
test
pop
loopne
xor
mov
jecxz
loop
xchg
inc
xchg
sbb
xchg
movs
scas
cmc
inc
ins
inc
push
add
aad
add
xchg
adc
das
adc
ss
paddsw
lods
test
out
imul
cmc
push
das
stc
dec
outs
add
retf
lahf
mov
fistp
fcom
popf
pusha
retf
add
push
psllq
in
and
out
xchg
push
sbb
jge
push
cs
mov
jmp
js
cmps
ror
inc
adc
cmp
ret
mov
push
jecxz
or
ss
fld
adc
sub
mov
or
lods
and
mov
sahf
das
cmp
sbb
jge
sub
mov
adc
pushf
hlt
lahf
rcr
push
add
xor
bnd
push
xchg
inc
cmp
adc
xor
arpl
sti
mov
mov
jnp
xor
loopne
or
test
sub
mov
pop
jp
xchg
add
jle
inc
mov
mov
clc
adc
mov
dec
add
std
jecxz
retf
fmul
mov
icebp
jmp
mov
movs
mov
push
dec
jmp
xor
shl
mov
jl
mov
int3
adc
pop
pop
ret
cmp
xchg
sbb
mov
loopne
sbb
xor
shl
inc
mov
jmp
stc
sbb
out
dec
repz
mov
jmp
add
push
add
cdq
(bad)
out
and
inc
adc
adc
cwde
clc
or
retf
not
arpl
or
aad
xor
jbe
scas
fisttp
cmp
adc
loop
pop
loope
fld
cmp
jnp
ins
lods
cmc
adc
push
jp
test
mov
sbb
mov
cmp
mov
stc
sti
mov
stc
adc
in
pop
pop
aam
out
loop
push
inc
leave
pop
jo
rcl
or
adc
call
fadd
shl
xchg
fdivr
ret
inc
in
js
fst
pop
adc
pop
inc
scas
cs
cmps
xchg
outs
dec
aam
ficom
outs
xor
mov
dec
or
mov
movs
je
les
outs
sub
pop
fwait
pop
std
imul
jb
iret
add
inc
loopne
mov
int3
(bad)
pop
popf
fild
or
mov
jp
or
mov
cmp
mov
(bad)
popf
xor
aaa
or
jl
stc
push
mov
bound
sub
ds
add
jp
adc
imul
inc
ss
mov
sbb
shr
jae
repz
push
push
repz
push
cmp
mov
push
sbb
mov
fistp
xor
lods
push
stc
sbb
xor
enter
or
or
xor
pop
jne
push
push
push
or
rcl
push
adc
mov
arpl
jno
inc
push
outs
sbb
retf
pop
mov
push
push
repz
push
test
mov
stc
popf
retf
add
retf
adc
leave
inc
inc
aas
pop
jge
push
and
inc
out
inc
mov
mov
mov
jg
add
xor
int
or
movs
mov
xor
sub
in
push
fcmovnbe
gs
and
mov
scas
cdq
dec
xchg
imul
inc
sub
imul
jo
ds
add
mov
gs
jns
dec
or
loope
popa
mov
daa
and
pop
aam
leave
pop
loope
dec
test
xchg
ja
adc
xor
pop
adc
xchg
inc
lahf
repnz
lahf
push
cmp
repnz
jecxz
jno
jne
push
pop
jg
sbb
mov
dec
mov
cmp
cld
ja
mov
adc
cmp
stc
mov
adc
xor
inc
fs
sbb
dec
fnstsw
ins
jecxz
jmp
inc
aas
push
scas
fcmovu
mov
inc
xchg
mov
jo
(bad)
frstor
mov
jmp
push
cmp
hlt
(bad)
fild
sbb
out
add
push
rdpmc
mov
das
int
mov
test
or
outs
movs
push
dec
mov
mov
dec
and
test
xchg
call
imul
repnz
bound
xlat
hlt
inc
jo
inc
scas
test
inc
fldcw
(bad)
mov
and
jbe
cs
adc
mov
xchg
ficom
mov
mov
mov
push
inc
and
fsubr
adc
out
xor
sub
sar
sub
sbb
sub
xchg
addr16
xor
sbb
xchg
loop
stos
mov
sbb
mov
pop
fisttp
in
cld
fs
test
sbb
xchg
scas
popa
lea
inc
ss
push
mov
mov
bound
ins
ret
and
adc
lods
sub
push
popf
pop
ficomp
xchg
push
cmps
out
ja
xchg
mov
sbb
lock
pop
jo
and
fucomi
mov
adc
mov
inc
scas
mov
and
push
ja
mov
jl
add
loop
pop
adc
cmps
imul
repnz
test
out
lods
cmps
mov
iret
aam
mov
add
data16
sub
rol
xlat
arpl
pop
inc
pop
push
xchg
jne
cmp
pop
mov
fsub
shl
(bad)
loop
shr
ror
xor
jbe
repnz
retf
mov
sub
adc
lock
pop
dec
pusha
mov
jle
stos
retf
mov
int
dec
xchg
adc
dec
rol
push
adc
push
(bad)
cmp
mov
pop
neg
in
ror
mov
test
or
shl
sbb
call
imul
sti
push
outs
pop
test
repz
xor
outs
jp
xchg
nop
mov
test
rol
fwait
inc
cmp
cli
adc
sub
inc
mov
and
mov
ds
mov
out
mov
nop
rcl
adc
dec
xchg
add
loope
xchg
xchg
push
mov
sbb
push
jne
cs
mov
cld
loopne
popf
mov
cmp
fdivr
and
movs
enter
or
mov
push
test
icebp
mov
cld
add
adc
rol
js
and
mov
jle
int3
repz
push
xlat
aaa
mov
sbb
sub
in
mov
or
dec
push
je
cmc
cmps
daa
mov
dec
jp
test
lds
pop
pop
push
in
int3
das
ja
xchg
dec
dec
mov
jl
add
mov
pusha
lahf
cmp
aaa
push
fcomi
or
fld
sbb
inc
js
gs
mov
xchg
sahf
jl
les
xchg
push
push
cmp
scas
inc
loope
hlt
push
and
(bad)
mov
sahf
sbb
dec
cdq
daa
dec
add
push
push
jb
pusha
ds
cdq
lds
lods
add
jp
mov
mov
neg
adc
int3
xlat
ins
add
lock
or
test
dec
jns
dec
call
push
clc
cmc
mov
mov
fidiv
pop
scas
mov
popf
mov
cmp
test
push
jg
es
vmovntpd
dec
out
cld
pusha
sbb
jo
mov
pop
push
ja
cmps
pop
cli
xchg
inc
dec
popa
(bad)
xchg
int
stc
pushf
sti
call
out
or
das
pop
xor
cmp
rcr
enter
loopne
fcmovb
xchg
outs
cmp
cmp
push
add
cwde
lds
data16
jo
dec
adc
loopne
mov
out
lea
mov
xchg
jne
out
adc
ss
sub
and
mov
sti
adc
or
das
js
loope
add
push
and
ins
fldenv
jmp
lds
fsubr
stos
call
cmc
mov
aad
pop
push
int3
xchg
jle
or
sub
inc
fidivr
call
xor
inc
bound
push
sub
push
push
loopne
imul
mov
xor
test
ja
push
jp
and
push
sbb
inc
adc
dec
pop
pushf
mov
sub
shr
loopne
pop
(bad)
adc
imul
sbb
retw
jae
xchg
das
xor
mov
and
jbe
ins
jnp
jne
xor
scas
jmp
inc
and
and
cmc
and
scas
sahf
dec
jns
sub
leave
push
inc
test
daa
out
or
stos
fldz
xchg
lahf
adc
and
movs
neg
pop
xchg
and
jmp
mov
push
pop
(bad)
sub
mov
push
xchg
ror
sbb
rcl
sbb
pushf
js
aaa
test
cmp
xchg
mov
and
shl
cmp
movs
mov
mov
add
ror
imul
push
xor
pushf
xor
std
es
sbb
pushf
sub
lock
adc
add
popf
cli
pop
idiv
fwait
fwait
(bad)
aad
adc
inc
fstp
push
sbb
inc
cwde
mov
cmp
nop
mov
or
and
jge
cs
out
pop
jne
ror
mov
pop
lock
movs
inc
and
bound
daa
adc
mov
inc
jno
add
addr16
xchg
adc
loop
push
scas
adc
inc
icebp
pop
in
pop
sub
sub
or
in
or
xor
and
scas
mov
mov
enter
cwde
sbb
xor
pop
and
in
xor
mov
mov
sbb
int3
dec
mov
hlt
je
(bad)
sub
ret
xchg
xchg
mov
in
pop
mov
pop
fisubr
xchg
xor
pop
mov
sub
inc
arpl
jmp
lahf
scas
inc
nop
test
test
(bad)
or
push
sub
push
out
fdiv
popf
add
jbe
popf
mov
jl
cmp
cld
or
into
sbb
lds
outs
mov
jp
mov
iret
repnz
adc
push
mov
jns
mov
pushf
pop
fsub
dec
mov
mov
icebp
retf
sbb
dec
stos
mov
push
fldenv
xor
cwde
lods
mov
stos
jbe
imul
lahf
mov
mov
sub
inc
push
push
outs
mov
mov
sbb
js
add
mov
jmp
push
retf
popa
out
sbb
xchg
jl
push
inc
jne
dec
sar
int3
add
sbb
mov
loop
fmul
lahf
pop
into
ins
or
add
mov
aaa
call
movs
adc
out
sub
push
sbb
dec
and
add
(bad)
push
out
jmp
les
idiv
stc
pop
ins
mov
push
and
cdq
gs
pop
cmp
pop
aaa
addr16
mov
mov
pop
popf
inc
jl
ins
fidiv
add
movs
mov
or
cmp
or
mov
cmc
les
loop
inc
pop
gs
ins
push
jo
jecxz
push
cli
adc
mov
rcr
add
cdq
je
sbb
(bad)
xchg
mov
lods
push
jnp
cmp
call
xor
mov
push
sbb
movs
or
sub
sahf
fist
xchg
in
cmp
fs
adc
aas
loope
ins
cmps
fimul
mov
in
cmp
or
das
xor
bound
pushf
pop
lods
jmp
mov
ins
fsub
dec
add
aas
dec
or
lock
pop
xor
stc
out
lock
cmc
icebp
dec
mov
fcom
fwait
jge
or
xchg
dec
dec
push
jmp
cmps
cmp
inc
cs
and
rcr
aad
sbb
xor
or
fisubr
inc
sub
mov
shl
mov
in
pop
lea
push
mov
arpl
iret
jmp
mov
dec
cmp
and
shl
sub
out
in
jmp
xchg
mov
mov
test
test
mov
cs
in
xchg
js
push
pop
movs
jbe
ret
fadd
leave
(bad)
movs
stc
das
inc
lods
or
ds
mov
inc
mov
sbb
push
xchg
xor
(bad)
push
xchg
pop
fldenv
enter
std
or
mov
std
rol
jnp
push
cmp
push
add
fsubr
jp
in
mov
in
sbb
mov
cmp
cmp
cmp
(bad)
cmp
cmc
in
push
dec
in
retf
(bad)
fadd
jmp
repnz
ror
idiv
jno
push
sub
jl
xor
fidivr
pop
jb
and
mov
loop
xchg
popf
imul
or
cmp
sahf
inc
call
fstp
push
(bad)
scas
push
xchg
lea
inc
push
mov
mov
and
loope
popf
dec
test
dec
ss
(bad)
stos
dec
pop
mov
fs
mov
pop
je
cmc
xchg
xlat
iret
lods
xor
xor
push
stos
mov
sti
retf
(bad)
sbb
aad
jno
sbb
push
pop
sahf
popa
inc
inc
outs
addr16
jmp
pushf
xchg
mov
js
pop
les
mov
clc
inc
loope
mov
fcom
jne
lds
aam
sub
shl
jle
(bad)
icebp
test
imul
(bad)
xor
and
cmp
cmp
or
dec
push
cmps
push
(bad)
pop
jne
cs
inc
mov
das
dec
xchg
add
or
xchg
cs
fwait
xchg
fwait
cmp
ins
adc
and
jne
mov
push
mov
sbb
int3
sbb
xchg
and
aam
sti
mov
pop
nop
fild
call
out
stc
pop
ins
int3
movs
js
pop
(bad)
mov
and
and
pop
scas
cdq
sbb
repz
inc
clc
sub
dec
ret
mov
jno
inc
or
adc
je
ret
dec
repz
mov
sti
arpl
dec
jle
sub
jmp
pop
mov
jnp
jbe
mov
aas
lds
cmps
cmc
fstp
shl
pop
daa
imul
fs
or
mov
xchg
sub
cmp
in
nop
lock
jo
(bad)
outs
out
fisubr
outs
cmp
cmp
mov
cmp
cmp
pop
cdq
push
lahf
std
fistp
push
ret
cmps
cmc
int3
leave
ret
in
jg
ffree
and
xchg
pop
shl
push
pushf
jb
fild
adc
das
mov
cmovg
cmp
lahf
lods
rcl
or
rep
cs
jmp
cmps
mov
xor
ds
cs
mov
mov
dec
div
lods
add
gs
and
mov
cmp
call
lods
bound
cmp
movs
stc
mov
rcl
imul
ror
cmps
lea
inc
fwait
js
mov
cmps
adc
jmp
loopne
in
or
add
inc
pop
sti
(bad)
adc
out
xor
cdq
lock
arpl
jno
popa
ss
inc
add
ja
inc
sbb
ds
cwde
push
jnp
cmp
xchg
call
cwde
je
jmp
xchg
ja
addr16
adc
in
xor
int
(bad)
and
sbb
sbb
jle
add
ficomp
icebp
(bad)
jae
mov
jns
call
enter
inc
xchg
ret
xchg
push
mov
lock
jle
std
jns
outs
xor
mov
xchg
jecxz
dec
sahf
adc
mov
inc
shr
(bad)
test
in
cli
test
mov
xor
arpl
mov
add
sub
aaa
in
fcom
or
sub
dec
push
ror
(bad)
loop
pop
cmp
div
pushf
nop
loopne
xor
lds
cmps
out
stos
jae
(bad)
mov
test
jmp
pushf
retf
sbb
dec
(bad)
(bad)
xor
jecxz
ror
ins
shl
mov
arpl
sbb
xor
mov
stos
mov
arpl
mov
and
sbb
sub
dec
dec
(bad)
in
push
(bad)
repnz
fsub
lods
(bad)
xchg
xchg
mov
mov
pop
and
push
jle
stos
xchg
sbb
repz
inc
xor
mov
pushf
push
dec
xchg
rcr
cmps
or
inc
pop
fisub
xor
jg
enter
mov
or
push
lock
xchg
dec
ins
outs
repz
or
mov
lds
mov
add
push
fcomp
ins
scas
push
mov
pop
(bad)
push
pop
sub
push
jno
mov
xor
test
out
fwait
mov
jae
lahf
xlat
rcl
add
sbb
repz
cdq
xor
imul
cmp
sub
ficomp
sbb
sbb
fcomp
pusha
(bad)
out
dec
mov
mov
fild
cld
cmp
fidivr
in
push
aam
pop
xchg
sbb
loope
repz
xchg
mov
fld
jg
aam
fst
leave
leave
cdq
xchg
mov
xchg
(bad)
cmp
mov
mov
fwait
iret
rcl
sar
fdivr
mov
mov
cmp
(bad)
iret
je
jmp
cld
mov
push
dec
push
jae
xor
jp
mov
mov
jmp
xor
inc
les
cmps
gs
sbb
xchg
xor
push
idiv
pop
cmp
jns
xchg
xlat
sbb
sbb
cmps
pop
test
jnp
pop
pop
mov
test
(bad)
fs
in
pop
jmp
out
aad
loopne
mov
arpl
and
push
div
adc
jae
inc
into
sub
push
or
push
cmps
outs
in
dec
pop
mov
icebp
lods
mov
in
imul
xor
inc
ja
fxch
(bad)
xor
cmps
jbe
mov
rcr
mov
push
mov
adc
(bad)
call
inc
pop
add
sub
mov
jmp
pop
cmp
daa
pop
test
imul
inc
fs
push
daa
mov
ss
int3
jmp
xchg
jne
and
dec
pop
hlt
stos
ins
add
jmp
dec
jno
int3
add
push
icebp
add
scas
adc
mov
lock
rol
pop
out
scas
add
leave
mov
aad
cmp
inc
pop
movs
std
repz
test
pop
pushf
jle
and
fsubr
and
push
xchg
add
js
movs
cld
xor
scas
call
jge
retf
mov
clc
cmp
xchg
pusha
push
test
push
dec
xor
jmp
adc
sub
inc
xor
ds
mov
and
pop
jl
sti
mov
add
out
or
inc
jl
aam
push
retf
sbb
lahf
aaa
cmp
retf
out
in
pop
loope
aas
jge
hlt
add
sub
call
js
cmp
(bad)
aad
nop
lahf
es
imul
xchg
sub
xchg
jmp
fcomi
(bad)
aaa
sbb
and
cmps
bound
ins
pop
and
or
bound
cmp
inc
mov
jle
daa
ror
pop
lods
fstp
repz
push
push
fwait
push
xor
mov
mov
mov
dec
mov
fsub
dec
cld
repz
dec
inc
inc
pushf
inc
pop
nop
sbb
jecxz
cwde
jbe
adc
or
stos
jmp
ja
push
sub
mov
mov
push
jns
std
lods
and
mov
lds
les
and
push
stos
cmps
jge
mov
adc
mov
push
stos
out
call
or
push
cmp
aaa
sub
xor
or
xor
in
sbb
mov
xlat
popf
into
in
mov
lock
pop
(bad)
jo
enter
stos
push
sar
mov
and
mov
not
and
sahf
sub
dec
daa
sub
push
jae
clc
dec
pop
jbe
add
test
test
add
and
push
in
and
test
and
mov
out
push
mov
mov
repnz
xor
les
sub
movs
jnp
pushf
sub
call
sahf
push
push
int
jb
neg
pop
pop
pop
aaa
sahf
test
mov
dec
out
sub
pop
fisttp
fmul
out
push
gs
cmp
ds
xor
call
rol
mov
jmp
jge
xlat
mov
(bad)
pop
pop
pop
pop
sbb
in
stos
mov
add
enter
test
(bad)
xchg
aad
(bad)
ds
popf
(bad)
sti
jb
mov
push
mov
shl
js
fwait
loope
adc
pushf
loopne
add
outs
cdq
xor
test
or
icebp
scas
sub
inc
push
pop
dec
cmp
movs
mov
xor
ret
fst
mov
test
mov
add
inc
test
fistp
mov
in
jle
mov
pop
test
and
ins
(bad)
ins
xchg
jmp
and
dec
pop
adc
int3
xchg
add
scas
add
jmp
rol
xchg
mov
and
sbb
jg
sti
jmp
pop
xor
jle
inc
or
outs
jns
dec
mov
call
imul
inc
mov
or
rcr
inc
add
xchg
popa
jo
(bad)
xor
mov
push
fisttp
lds
ss
cmp
dec
xchg
fcmovnbe
stc
repz
add
jnp
shl
push
cdq
dec
imul
inc
test
call
or
icebp
addr16
push
or
mov
sar
test
mov
and
adc
loopne
(bad)
fst
fcomp
mov
mov
inc
jmp
fmulp
push
jno
cli
cmp
or
xor
dec
or
mov
cmp
ret
add
sbb
ss
inc
outs
pushf
fwait
call
jg
nop
movs
push
jae
test
scas
es
cmc
add
call
retf
jmp
sub
dec
pop
fcomp
mov
mov
pop
daa
sub
sar
in
add
push
xor
idiv
mov
inc
inc
aaa
test
cmp
mov
or
jbe
and
movs
popfw
gs
mov
ins
ins
pusha
outs
pusha
inc
dec
inc
shl
xchg
xchg
fwait
push
pop
sub
and
pop
fistp
pop
or
mov
loop
in
mov
mov
fcomp
ins
inc
fdiv
or
(bad)
mov
loope
jle
std
ins
cmp
addr16
in
addr16
sub
out
outs
ins
sbb
push
das
jne
jecxz
dec
test
dec
test
pop
es
cmp
adc
jae
js
pop
aaa
push
mov
mov
mov
jmp
xchg
movs
push
add
(bad)
mov
mov
push
adc
jle
xor
cmp
sbb
cmp
pop
adc
cdq
push
test
add
and
in
sbb
or
int3
mov
out
lock
push
add
js
ffreep
push
sbb
adc
test
adc
(bad)
retf
movs
cmc
outs
fimul
mov
pop
cmp
nop
in
call
retf
and
push
das
popa
int
inc
pusha
in
jb
sar
cs
jns
cmp
frstor
mov
inc
div
(bad)
dec
cmp
or
cmps
in
adc
movs
jb
inc
pop
cld
push
lock
ror
cmp
xor
or
xor
adc
and
(bad)
xor
ja
cmp
ja
push
pop
mov
ficomp
jmp
mov
stos
sub
mov
rol
mov
stc
mov
stos
pop
out
retf
neg
push
pushf
or
pop
ret
ins
fcom
mov
pop
shr
sbb
add
pop
or
aad
in
arpl
xor
pushf
jnp
sar
shr
mov
mov
mov
repnz
into
fs
pop
div
push
(bad)
lock
add
popa
daa
lods
int3
test
clc
into
test
push
hlt
notrack
inc
mov
inc
into
stos
ficom
and
adc
std
adc
mov
pop
or
xlat
jae
jno
les
dec
int
popf
xor
jp
mov
leave
and
retf
sbb
mov
mov
pop
mov
and
mov
int3
movs
int
aam
inc
arpl
mov
mov
sub
push
mov
pushf
mov
ret
das
pop
mov
and
jne
jmp
js
xor
push
xor
(bad)
cmp
lds
sar
dec
add
mov
pop
xchg
jnp
dec
xor
ins
mov
fst
jg
mov
mov
sbb
jae
adc
sub
xchg
fwait
xchg
icebp
adc
xchg
jbe
add
dec
daa
sbb
xchg
sar
repz
pop
lahf
sbb
jbe
jg
imul
fcom
jmp
xor
in
scas
adc
(bad)
fstp
sbb
mov
add
int
rcr
pusha
mov
mov
aam
mov
sbb
mov
add
out
or
pop
shl
sub
movs
dec
dec
idiv
add
pop
mov
or
and
lahf
sbb
push
movs
dec
(bad)
jmp
pusha
cs
add
jno
lds
jl
movq
ret
sub
jge
inc
call
fimul
xchg
das
mov
adc
mov
mov
dec
adc
or
dec
push
and
rol
jecxz
dec
xor
xor
ds
or
jno
out
int
imul
fsincos
(bad)
imul
pop
inc
and
jno
jbe
jbe
xlat
cmp
xlat
xchg
loope
xor
pushf
xor
cmc
mov
mov
sti
cmp
dec
push
jne
pop
stc
push
cmp
jnp
mov
cmp
(bad)
jmp
dec
mov
addr16
into
test
out
or
jg
aam
scas
shl
into
xchg
mov
cmps
cld
xchg
cmc
iret
sbb
dec
mov
inc
inc
cmc
inc
lock
sub
jmp
out
aad
mov
scas
push
(bad)
push
xor
pusha
pop
ss
rol
push
dec
sub
inc
jmp
jmp
dec
mov
mov
gs
out
mov
dec
dec
jle
jnp
xor
dec
push
and
mov
mov
ja
aas
mov
or
nop
retf
in
fist
popf
js
into
and
jp
pop
jns
mov
push
push
sub
stc
mov
(bad)
popa
add
mov
arpl
imul
add
das
push
jge
rol
xchg
lahf
pop
cwde
pop
nop
fisub
jns
mov
aam
call
dec
xchg
sub
cld
out
into
aaa
push
outs
into
mov
adc
mov
nop
add
add
and
push
sar
mov
fistp
cmc
xor
clc
and
xor
inc
inc
push
push
(bad)
sub
add
fldenv
call
or
sub
mov
lds
call
mov
cli
loope
sbb
push
cmp
mov
mov
sbb
push
push
mov
inc
cmp
push
cmp
xchg
icebp
sbb
mov
(bad)
xor
adc
outs
mov
sbb
mov
inc
sub
cld
xchg
cs
xor
out
sub
xor
inc
fs
sbb
jnp
xor
call
jge
push
dec
jns
sub
sub
scas
fcomip
in
xor
clc
adc
out
adc
and
dec
mov
pop
loope
jp
mov
call
inc
arpl
push
(bad)
jmp
and
jmp
xchg
pop
shl
cmp
pushf
mov
test
pop
rol
jo
pop
jno
jns
mov
es
xor
mov
scas
mov
or
into
shl
sbb
fadd
jmp
rcl
xchg
dec
nop
xor
jmp
xlat
clc
bound
xor
js
sbb
sub
shl
or
pop
cld
cmc
(bad)
nop
lods
sub
ss
retf
dec
mov
hlt
in
mov
adc
pop
cmps
bound
mov
xchg
push
iret
push
and
add
(bad)
pinsrw
or
add
pop
les
jbe
or
fild
sbb
and
inc
and
lea
outs
jmp
sbb
daa
mov
and
xor
inc
aas
xor
ficom
lds
push
and
push
pop
inc
ficomp
adc
jbe
jecxz
xor
sub
dec
lahf
cs
sub
cmps
push
repnz
mov
in
arpl
cld
test
outs
pextrw
scas
cmps
mov
jb
fisubr
xor
adc
mov
lods
cwde
stos
jbe
aad
es
stos
cld
mov
add
repnz
sub
outs
cmp
inc
jp
cmp
jno
mov
mov
adc
test
sub
imul
aaa
ret
cmp
stos
jo
mov
mov
out
movs
fcmovne
mov
sub
inc
call
lods
xchg
sub
lock
pop
loope
adc
pop
jge
dec
or
inc
das
and
es
sub
inc
push
jno
outs
mov
leave
je
mov
or
sahf
iret
adc
push
push
dec
push
cmp
inc
mov
pop
test
retf
lahf
lods
test
dec
dec
shr
dec
sbb
sub
cli
and
push
fisub
in
jle
fwait
(bad)
icebp
sub
(bad)
loope
sbb
and
xor
std
addr16
cmc
add
(bad)
cmc
sbb
inc
pop
popa
sub
xor
outs
mov
test
mov
dec
dec
outs
fwait
xlat
xchg
mov
inc
lods
jnp
pop
leave
push
jns
pop
ret
pop
xor
xsha256
cmps
aam
ins
push
or
xor
xchg
xchg
and
pop
inc
ins
push
mov
jge
mov
out
int
jge
or
mov
scas
icebp
fs
jns
xor
or
fsub
xor
or
lds
add
xchg
fwait
mov
mov
or
cli
das
xchg
in
mov
push
imul
adc
cwde
cli
cmps
fwait
ror
mov
or
add
sub
jne
and
stos
ds
adc
out
(bad)
ror
or
xor
push
fist
mov
int3
loope
sahf
and
std
aaa
cwde
sbb
or
mov
shl
push
sbb
push
mov
jmp
adc
push
xchg
outs
dec
test
add
pop
sbb
out
loope
mov
fadd
jecxz
jmp
cmc
or
inc
fucom
mov
jecxz
add
mov
xchg
mov
dec
inc
mov
js
push
cmp
mov
aad
push
inc
neg
imul
push
mov
cld
sbb
ins
les
cmovle
stos
xchg
les
jg
jne
mov
das
push
pop
jno
popf
sub
daa
inc
pop
inc
cwde
inc
sub
fucomi
sub
stos
int3
adc
pop
dec
fmul
mov
enter
ds
out
aas
cwde
test
inc
mov
int
fild
xchg
xchg
xor
pop
cli
mov
pop
xlat
cwde
ja
movs
sub
push
enter
add
fwait
push
(bad)
push
cmp
dec
and
scas
cmps
push
push
mov
mov
in
repz
fild
push
pop
out
jmp
lods
pop
mov
imul
sub
into
inc
loopne
stc
ret
pop
mov
outs
ins
shl
sub
push
mov
shl
push
sbb
sub
xor
adc
fs
clc
jae
ss
adc
mov
pop
shl
pop
hlt
aas
call
mov
dec
repz
bndstx
gs
pushf
xor
ss
push
not
pop
lea
xchg
ins
mov
inc
(bad)
retf
gs
in
stos
jnp
scas
cld
xchg
jmp
and
inc
push
icebp
rcr
fbld
jge
sbb
ins
and
(bad)
cwde
push
mov
push
je
imul
mov
sbb
cli
pmulhw
jmp
inc
add
add
jb
xchg
ret
add
pop
arpl
data16
mov
mov
adc
stc
retf
pmuludq
push
adc
cmc
add
add
(bad)
imul
mov
xor
repnz
repnz
lar
sub
ror
cdq
jne
xchg
dec
rol
(bad)
mov
movs
jnp
xor
xlat
mov
add
or
jp
test
mov
stc
fst
add
inc
lods
and
aas
xchg
pop
push
jmp
and
out
popa
xor
pushf
or
xor
ss
dec
stc
adc
(bad)
cld
xchg
fiadd
jmp
pop
sub
or
imul
lods
rcr
stos
pushf
ja
fadd
dec
mov
mov
mov
push
loope
dec
sti
jae
pop
ss
iret
int
mov
ss
cmp
add
dec
cs
xor
sub
fistp
out
cmps
fild
test
inc
push
scas
add
outs
dec
and
repz
loopne
ins
mov
inc
mov
mov
sub
in
test
xchg
sub
icebp
aas
cwde
dec
mov
jne
fxch
add
jg
and
loop
push
pop
js
(bad)
retf
xchg
cmp
xor
and
aaa
fwait
add
ja
mov
rol
inc
pop
out
fmul
ds
icebp
sbb
sub
jecxz
add
stos
out
sub
(bad)
jmp
sbb
and
das
jge
shl
out
xchg
pop
xchg
dec
fs
cmps
out
pusha
lds
aam
jp
gs
(bad)
xor
out
or
clc
pop
xor
aas
(bad)
js
aad
xor
xchg
test
das
and
outs
mov
or
mov
push
mov
and
dec
aad
xlat
mov
popa
loop
(bad)
sub
or
xor
jmp
cwde
icebp
out
sbb
repnz
xchg
and
add
jo
add
mov
push
sar
ret
data16
addr16
sbb
fdivp
pop
pop
call
int
sbb
pop
int
gs
popf
psubusw
sub
lods
(bad)
std
stos
ja
cmp
and
jnp
mov
add
ror
pusha
jo
xchg
inc
adc
ins
outs
icebp
pop
jmp
pop
movs
in
loope
ins
repnz
push
dec
repz
and
icebp
sbb
pop
sub
xchg
inc
repnz
shl
js
xor
jg
adc
xor
loop
mov
fst
les
imul
xchg
out
(bad)
fmul
in
stos
out
popa
fadd
mov
gs
push
mov
fnsave
in
sbb
mov
mov
adc
fdivr
ins
test
outs
inc
add
test
(bad)
aad
xchg
(bad)
outs
jle
mov
scas
arpl
or
gs
lods
ror
aad
sti
pop
dec
or
xchg
fidivr
call
mov
pop
inc
mov
mov
retf
cmps
dec
inc
or
mov
mov
or
je
push
jecxz
xor
lods
add
call
stos
jmp
pop
cvtps2pi
(bad)
loopne
movs
ss
pop
fbld
xor
or
outs
shl
stos
mov
mov
in
fnstcw
ret
pusha
dec
and
jns
imul
ret
push
test
rol
fisub
mov
imul
js
adc
sub
cmps
xchg
or
(bad)
fwait
or
add
jo
sti
shl
jl
push
cmp
adc
test
xchg
sbb
lock
(bad)
jb
popa
int
(bad)
sbb
add
lea
push
pop
sub
push
ret
(bad)
mov
sub
pop
mov
rol
sbb
xchg
mov
movs
sub
xor
ja
xor
in
clc
inc
or
lock
int
add
cld
aam
add
mov
out
aaa
in
mov
jb
cli
pop
jo
xor
and
inc
xchg
dec
xchg
leave
test
in
push
mov
in
dec
retf
sti
push
mov
xchg
add
mov
jb
or
add
loopne
cli
adc
hlt
icebp
xchg
call
cmp
and
and
fwait
xor
fcmovnbe
sbb
fs
cmp
mov
imul
or
add
jp
jns
pop
jo
or
mov
clc
mov
jecxz
or
pop
and
pop
add
xor
fsubr
fidivr
xchg
not
dec
ds
mov
pop
aam
cmp
xor
pop
in
xor
cdq
mov
inc
mov
push
add
out
nop
das
pop
sti
out
arpl
mov
pusha
dec
(bad)
push
pop
and
and
jno
cmp
xchg
add
push
add
jne
and
jns
stos
lahf
mov
shl
pop
shl
and
inc
add
hlt
rcr
cld
js
xchg
lods
adc
jp
out
ss
jecxz
daa
xor
mov
push
dec
sub
pusha
rcl
fucomip
inc
add
shl
sar
adc
cmps
leave
out
jbe
pushf
int
stos
stos
cli
inc
or
rol
sbb
lock
jl
xchg
dec
loopne
pop
(bad)
add
cs
push
fwait
push
or
test
push
cwde
mov
sahf
xchg
repz
push
mov
xchg
sbb
push
ret
dec
jmp
aaa
call
imul
mov
mov
xor
mov
fldcw
loop
pop
scas
cmp
jl
out
clc
mov
dec
cmp
imul
shl
sub
mov
push
sbb
add
xlat
popa
(bad)
std
stos
cs
fucomp
or
push
xchg
mov
data16
mov
dec
js
das
or
or
ins
push
fwait
lods
sub
xor
fimul
jne
dec
fnsave
cmp
dec
(bad)
mov
fisttp
adc
push
and
or
adc
sub
pop
xor
push
jp
or
mov
mov
pop
mov
fs
scas
dec
fadd
into
add
lods
mov
sbb
in
mov
add
mov
mov
cs
or
(bad)
jle
dec
mov
mov
mov
pushf
and
add
outs
jae
stc
icebp
sahf
out
dec
push
stos
pop
fdiv
adc
push
aaa
arpl
xchg
jb
xchg
pusha
inc
push
xchg
test
retf
leave
stc
adc
fs
(bad)
mov
mov
inc
pop
adc
addr16
daa
aas
push
sub
jmp
lock
cmps
dec
pop
add
or
scas
inc
sbb
cs
inc
das
add
loopne
cdq
test
imul
mov
or
ins
ins
push
(bad)
aam
shl
xchg
adc
out
pushf
xor
dec
in
clc
mov
stos
add
fs
js
out
fisubr
test
(bad)
retf
jge
jle
sbb
in
aad
inc
arpl
sbb
add
pop
popf
mov
xor
cmp
je
push
pop
jnp
cmp
les
dec
nop
test
dec
cmps
int
mov
cmc
das
dec
or
mov
dec
jge
dec
mov
ins
mov
or
xor
inc
and
cmps
clc
ja
sub
addr16
xor
pop
or
or
adc
mov
push
inc
(bad)
push
ret
sub
clc
mov
add
fcom
xchg
adc
mov
inc
jae
sub
sbb
movs
enter
mov
ret
stc
mov
cmps
inc
test
sbb
not
mov
nop
mov
pushf
std
push
cmc
mov
sub
xchg
idiv
das
mov
sti
xchg
sar
xor
sub
lods
push
jb
xchg
mov
aad
or
adc
popf
(bad)
in
int3
data16
pop
shl
cmp
(bad)
xor
xor
add
fbstp
xchg
add
jl
fisub
sub
fmul
into
shr
jle
and
xor
test
and
out
mov
cmp
mov
xor
cmp
jne
dec
mov
cmp
xchg
lea
in
loope
jmp
mov
(bad)
cli
or
sub
dec
enter
xchg
fdiv
cld
lods
mov
adc
and
aaa
jp
add
cmp
xchg
out
push
and
and
mov
enter
sub
push
inc
out
inc
pop
dec
sub
dec
cmps
pop
pop
xchg
fnstenv
in
sub
cwde
cdq
in
mov
es
(bad)
(bad)
mov
dec
sub
std
lea
mov
std
jae
or
out
outs
enter
ret
mov
add
pop
fadd
push
mov
in
xor
mov
adc
mov
jp
imul
jae
pop
add
or
xchg
jmp
jecxz
pop
cmp
js
dec
inc
jns
xchg
or
mov
mov
xchg
ret
cmp
std
fcomp
mov
out
scas
bound
mov
icebp
(bad)
in
ins
xchg
add
call
cmps
rcr
mov
test
add
sub
and
jo
push
xchg
cli
dec
or
mov
dec
lock
and
out
movs
enter
cmps
jo
add
cmp
adc
shl
jmp
repz
imul
xor
jecxz
add
push
std
adc
pushf
lds
lea
nop
mov
cmps
add
idiv
sub
push
(bad)
rol
(bad)
cmp
jp
or
and
dec
mov
das
pop
mov
mov
out
lods
enter
and
mov
and
jmp
mov
pop
aaa
jmp
push
dec
adc
sub
mov
pusha
mov
(bad)
popa
push
sub
fwait
mov
movs
pop
addr16
add
cmc
and
jp
mov
(bad)
inc
xor
dec
das
inc
aam
les
(bad)
fdivr
add
inc
lahf
aaa
ror
push
jne
retf
es
mov
dec
dec
mov
sbb
sub
push
retf
test
pop
mov
push
out
fistp
ja
mov
cs
sahf
cmp
ins
mov
(bad)
hlt
out
in
mov
xor
jo
inc
mov
mov
mov
sub
sub
push
push
(bad)
adc
stos
aad
and
(bad)
pop
inc
and
jns
xor
cs
fs
aam
pop
or
es
out
fs
pop
mov
or
pop
xchg
and
cmp
sahf
and
enter
loopne
xor
stc
ds
(bad)
aad
cmp
add
push
mov
inc
xor
push
cs
ss
out
ds
mov
data16
mov
xchg
pop
test
or
mov
repz
scas
aam
stc
aam
jae
mov
scas
inc
cdq
hlt
push
dec
fldenv
mov
enter
(bad)
mov
xchg
jo
cmps
jns
jbe
in
les
dec
sub
or
and
cld
and
mov
int
ins
mov
fdivrp
jl
push
int
cmp
sub
inc
sbb
out
cmp
das
push
(bad)
popa
(bad)
mov
lea
lods
sbb
mov
out
lods
and
mov
loope
into
and
cld
mov
xor
out
icebp
jle
test
jmp
or
xchg
push
xchg
push
sar
int3
(bad)
cmp
scas
sbb
call
pushf
xor
sub
mov
int
cmp
push
aaa
mov
xchg
jne
jmp
into
inc
or
movs
(bad)
ja
dec
pop
lahf
ja
fidiv
adc
xor
jle
aad
dec
cmp
or
mov
outs
jbe
jns
es
lea
pop
dec
scas
fs
lock
int3
sbb
xor
mov
mov
addr16
inc
int3
mov
vmread
dec
sub
sbb
fsubr
ins
imul
push
cmp
sbb
mov
ror
fs
test
aam
dec
sbb
out
iret
and
ja
test
and
jge
jmp
push
or
nop
mov
sbb
dec
dec
fwait
mov
and
add
icebp
mov
cli
push
add
clflush
test
cmp
cdq
popf
jp
js
ja
gs
inc
jb
rcl
jb
dec
sbb
jne
cmp
pusha
clc
cs
xor
ins
ss
sahf
cmp
cmp
mov
push
scas
(bad)
enter
push
or
cmp
movs
jle
dec
jle
into
es
or
xchg
fidivr
add
stc
mov
(bad)
gs
fnstenv
mov
out
test
stc
mov
fucomip
cli
inc
mov
or
mov
fidivr
xchg
cmps
mov
arpl
fs
push
sub
inc
fnsave
jmp
test
sar
aaa
push
not
jo
add
shl
or
mov
jne
retf
xchg
out
ret
loopne
out
lods
loope
lods
and
mov
xor
aam
add
mov
neg
les
icebp
jmp
mov
int3
mov
xchg
or
sub
push
push
mov
cld
mov
sbb
mov
lock
rol
sbb
xor
test
and
(bad)
inc
xchg
lods
mov
aam
jecxz
retf
call
dec
cmp
mov
jmp
jno
cmp
or
or
cli
fcmovnu
jb
or
sbb
xor
dec
xlat
dec
imul
sti
sahf
jl
xchg
test
jle
(bad)
daa
xchg
inc
push
repnz
cmps
xchg
xor
js
imul
retf
aaa
int
cmp
jmp
cmp
push
loop
hlt
or
inc
adc
in
adc
icebp
lea
push
xor
in
jne
jmp
out
jnp
jnp
repz
adc
mov
js
repnz
rcl
push
sub
getsec
inc
mov
jb
jbe
or
pop
push
pop
push
cli
mov
lahf
pop
daa
mov
sbb
cmp
inc
ins
loopne
mov
call
jo
jmp
sub
push
frstor
cmps
shr
in
mov
rcl
jnp
movs
into
xlat
daa
mov
push
push
dec
adc
jns
cwde
ret
adc
scas
pop
aaa
pop
popf
pop
add
mov
cmp
lods
mov
xor
js
ja
out
inc
xchg
or
fistp
jmp
pusha
call
fsubr
mov
push
push
scas
xchg
into
je
jbe
push
xchg
test
mov
out
add
pop
xchg
out
mov
mov
push
mov
outs
xchg
addr16
jle
inc
ror
loopne
mov
jl
jp
fs
je
cld
aas
xchg
popf
sbb
adc
xchg
pop
jg
les
xchg
sar
sahf
xor
sbb
jae
call
rcr
movs
add
add
dec
out
repz
adc
jge
mov
outs
sar
movs
rol
jns
cld
jge
xchg
xlat
fnstcw
sub
retf
ret
sub
psubd
cmp
inc
fld
out
pop
in
fmulp
xchg
inc
mov
or
ds
in
mov
cwde
mov
arpl
cmp
shr
packsswb
dec
mov
add
sub
mov
je
lods
fstp
push
sub
jno
ja
or
imul
push
mov
inc
or
fidiv
in
and
shl
mov
push
mov
pop
sub
pop
shl
mov
mov
(bad)
test
jp
fdivr
mov
call
rol
sar
test
adc
xchg
sbb
pop
sub
mov
lahf
mov
lock
pushf
mov
shr
jbe
cmps
and
adc
stos
jno
fwait
dec
test
xchg
mov
hlt
push
dec
push
push
and
(bad)
aas
shl
imul
test
mov
hlt
fdivr
clc
xchg
xchg
sbb
jle
stos
ins
jmp
cmp
ins
xor
mov
mov
clc
in
mov
retf
pop
ja
ins
pop
clc
jle
adc
xor
hlt
clc
mov
aad
cmp
push
mov
or
push
adc
push
mov
iret
pcmpgtd
repz
push
dec
jno
ja
xor
test
sub
mov
in
adc
inc
cmp
push
lahf
pusha
ja
dec
lock
inc
pop
jno
ret
sar
xor
jb
fwait
test
(bad)
test
jle
das
xchg
pop
cmp
outs
shr
test
rcr
sub
cmps
add
xor
pop
retf
sub
mov
mov
dec
push
dec
(bad)
add
mov
jbe
iret
cmp
aam
loope
ds
(bad)
into
js
sub
loopne
xor
xor
push
(bad)
mov
aas
ficom
and
call
dec
mov
xchg
sbb
pop
pop
xchg
sbb
fwait
jmp
mov
push
inc
(bad)
sbb
ss
mov
out
cmp
sbb
hlt
pop
dec
jne
aad
mov
push
cmp
rol
mov
xchg
retf
hlt
ret
outs
cwde
dec
pop
mov
xchg
rcr
xchg
mov
pop
(bad)
xor
dec
test
mov
mov
mov
retf
push
or
inc
stc
lods
(bad)
(bad)
adc
dec
sbb
(bad)
shr
inc
daa
pop
xor
or
pop
mov
in
bts
pop
js
inc
xor
pop
sbb
pop
and
sub
dec
and
loopne
push
or
fimul
jl
push
and
lds
pop
lea
bound
push
mov
xchg
lods
jge
std
add
cli
sbb
dec
in
adc
cwde
and
mov
rol
fild
xor
push
or
scas
into
xor
int
cmc
mov
imul
shl
xchg
xor
enter
sbb
xor
cmc
jg
fadd
repz
sub
mov
test
sbb
mov
push
push
fucom
push
mov
push
in
cmp
pushf
lahf
cmp
mov
dec
lahf
and
sub
push
movs
fld
enter
inc
mov
fcmove
mov
in
icebp
mov
popa
out
push
inc
jecxz
rol
push
cmp
fbstp
mov
add
mov
cdq
xchg
dec
inc
jae
lahf
pop
xchg
test
ja
sub
loope
dec
push
(bad)
pop
xor
rol
push
in
mov
or
loop
inc
fldenv
or
jo
pop
jl
mov
out
push
dec
test
and
movs
and
fs
rol
out
sbb
xor
jp
lods
add
jae
or
mov
or
not
or
ret
ss
xor
jo
and
dec
and
and
repz
in
and
add
mov
dec
lock
push
cmp
out
(bad)
sub
mov
ds
push
jg
push
xor
and
ins
xchg
push
mov
pop
stos
shl
pop
sbb
cmp
jge
dec
out
das
xchg
hlt
data16
or
mov
ds
or
adc
stos
or
push
jmp
pop
jecxz
and
movs
adc
mov
xor
adc
cmc
(bad)
retf
repz
sub
cli
xchg
cmps
push
sbb
xchg
std
pop
pusha
pop
xchg
sbb
jle
mov
(bad)
add
adc
and
rcr
cmp
call
xor
retf
ret
fdivr
shl
or
in
out
out
in
inc
add
inc
and
xchg
mov
or
cs
(bad)
add
out
sub
mov
push
out
in
fdiv
lods
and
add
pop
mov
out
lea
in
setns
fs
pop
mov
out
pop
aam
push
pushf
mov
lods
(bad)
jmp
xchg
dec
dec
enter
jecxz
sbb
xchg
cdq
adc
mov
je
stos
add
pop
ins
bound
sbb
cmp
adc
(bad)
bound
or
das
jne
je
adc
sbb
pushf
hlt
push
cmp
cmps
and
repnz
add
jg
cwde
push
out
mov
mov
sbb
cli
or
stos
out
mov
movs
xchg
push
xlat
repz
les
in
adc
cli
jno
push
sbb
jmp
pop
mov
repz
(bad)
cld
aas
movs
movs
push
aaa
mov
arpl
pop
cmp
popa
retf
cwde
sbb
int3
cwde
(bad)
fsubr
jns
push
aam
psubusb
imul
test
pop
adc
ror
cmp
xchg
jg
std
leave
add
mov
jbe
in
sahf
pop
jl
neg
(bad)
adc
jbe
stos
jge
or
mov
cmp
imul
sub
into
push
jmp
jle
(bad)
gs
pop
movs
cmp
pop
(bad)
add
cld
movs
or
jecxz
pop
jns
int
pop
adc
push
mov
adc
mov
xchg
inc
adc
mov
test
sar
xchg
rol
cmp
in
popf
add
mov
aaa
cmp
push
into
pop
jge
sub
jnp
mul
pop
cmc
cld
jmp
repz
adc
mov
xor
mov
pushf
cmp
add
jge
rcl
adc
pop
test
push
or
xchg
jb
call
je
and
xchg
xchg
add
sub
sub
push
mov
das
cmp
mov
sub
repnz
js
fmul
sub
mov
inc
stc
test
imul
call
pop
pop
mov
push
ds
(bad)
jecxz
inc
and
jmp
xchg
mov
or
or
mov
mov
aas
test
pop
mov
lahf
popa
jno
cmp
add
xor
push
adc
into
or
mov
xor
lods
loop
mov
das
or
add
inc
and
out
lahf
sbb
stos
mov
fmul
sahf
pop
xor
xchg
pusha
pop
inc
adc
rcl
dec
mov
push
retf
dec
cmps
stc
repz
inc
lahf
ss
sbb
mov
movs
les
fwait
shl
pop
mov
xchg
cli
adc
cmp
in
stos
push
push
mov
fdiv
pop
outs
push
in
mov
call
or
jb
test
(bad)
pop
ror
in
pop
cld
out
cld
(bad)
div
sub
lods
dec
jne
mov
les
scas
and
out
adc
(bad)
std
add
push
sbb
std
inc
xchg
sub
cld
cli
sbb
movs
adc
mov
sub
dec
mov
stos
mov
sahf
sar
outs
xchg
stos
push
add
int
int3
mov
pop
mov
jge
add
cmp
iret
test
adc
clc
add
pop
adc
nop
sbb
adc
(bad)
xchg
lds
or
mov
xchg
lea
ror
data16
dec
push
sbb
push
stos
jmp
js
rcl
xor
jmp
cmc
add
jecxz
and
ss
iret
mov
sbb
ret
lock
cmp
(bad)
in
test
fld
das
fimul
pop
lods
sbb
jl
pop
mov
xchg
popf
bound
sub
push
addr16
call
call
cmp
sbb
not
mov
pop
dec
jbe
pop
rcr
xchg
aas
icebp
iret
test
mov
push
xlat
cmp
int
popa
sbb
or
aam
fs
cmp
pop
adc
dec
inc
mov
imul
or
(bad)
sub
push
(bad)
push
ja
ds
adc
dec
cs
das
repz
xchg
in
iret
sysret
jl
ins
jle
jp
dec
jnp
test
shl
test
cmps
cld
xchg
add
shr
push
dec
fmul
add
ins
pop
shl
imul
mov
dec
mov
add
popf
inc
stos
mov
sub
push
jae
pusha
int
mov
xlat
push
xchg
iret
ror
xchg
push
jmp
test
push
push
in
add
sahf
jle
cmp
mov
shl
sub
out
jb
lods
push
in
clc
mov
xchg
add
xor
out
(bad)
retf
(bad)
lods
int
(bad)
inc
xchg
xchg
popa
jmp
popa
inc
mov
aad
xor
jns
ja
xor
ret
stos
ja
frstor
mov
xchg
mov
arpl
outs
mov
(bad)
clc
sbb
sbb
int
inc
sahf
xor
adc
fwait
shl
add
or
mov
dec
test
pop
sbb
es
mov
aam
and
shr
mov
mov
loope
popf
jp
out
out
or
sbb
(bad)
mov
push
xlat
cmp
add
ficomp
repz
rol
ins
ror
cmp
clc
mov
test
pop
sub
popa
sub
push
cmp
test
sbb
sub
jae
push
inc
fadd
mov
push
and
sub
sahf
aam
and
mov
dec
jp
retf
bound
lahf
xlat
gs
aam
jae
jbe
sbb
outs
cmp
xor
jle
pop
cwde
scas
add
outs
xlat
add
pop
fwait
mov
retf
ret
lock
or
pop
es
div
push
jle
sbb
sub
push
mov
adc
fiadd
movs
dec
sub
sti
xchg
add
lahf
sbb
pusha
sbb
je
adc
pushf
loop
retf
(bad)
arpl
int
pop
pop
movs
mov
icebp
pop
sbb
iret
je
bound
jne
lods
in
pop
dec
adc
add
(bad)
push
call
xchg
mov
cli
and
(bad)
add
ret
test
xor
fsub
xor
add
aam
lahf
cmp
push
arpl
ins
movs
xor
jo
push
(bad)
inc
xchg
cmp
fst
outs
push
lahf
jp
xor
jmp
and
push
sub
aam
pop
fiadd
cmp
xor
lock
xchg
mov
inc
enter
xchg
jg
fisub
jg
gs
in
outs
retf
fisubr
clc
xchg
mov
lea
inc
and
fcmovnu
mov
(bad)
ja
push
mov
add
dec
dec
(bad)
push
inc
test
(bad)
(bad)
sbb
ret
xor
xor
add
dec
jg
dec
js
and
(bad)
out
cld
in
cmp
dec
repz
bound
(bad)
jb
retf
jmp
js
push
push
arpl
mov
fcom
je
popa
sbb
nop
jae
and
sahf
iret
rcl
mov
sbb
ss
shl
mov
shl
mov
jmp
push
cwde
(bad)
jecxz
enter
add
mov
outs
cmp
cs
push
icebp
repnz
icebp
jnp
mov
push
ins
sub
mov
adc
ins
xchg
dec
xchg
(bad)
enter
hlt
xlat
mov
and
dec
xlat
cdq
or
mov
jb
repz
add
xchg
movs
xor
xor
test
aas
lock
and
or
pop
push
bound
xor
push
(bad)
sti
xchg
jnp
and
int
fldcw
scas
leave
leave
cmc
aad
mov
and
pop
out
ss
not
movs
cld
mul
push
outs
cmp
adc
dec
out
retf
xchg
cmp
jmp
sub
or
popa
movs
adc
hlt
push
sahf
mul
aas
pop
arpl
dec
pop
cmp
mov
scas
rol
imul
out
and
not
sbb
iret
ret
movs
push
push
cmp
xor
fsubr
sub
jbe
les
iret
(bad)
cmc
or
sbb
lock
jmp
pop
or
(bad)
in
enter
dec
mov
ret
pusha
ss
stos
inc
fs
idiv
sub
add
mov
into
mov
repz
ds
and
sahf
push
ds
adc
outs
jbe
and
inc
dec
add
mov
lods
xlat
mov
in
cmp
pop
sub
xchg
jl
(bad)
xor
xchg
icebp
or
movs
iret
push
or
in
mov
sbb
adc
das
ds
loop
xchg
jge
cdq
push
stc
and
dec
out
xor
(bad)
mov
imul
add
mov
cmp
dec
jle
gs
mov
inc
mov
xchg
jnp
ins
dec
leave
imul
lods
xchg
xor
fisub
ja
xchg
ficom
jle
out
jg
cmc
or
push
inc
sbb
jmp
jno
cmps
je
cmp
pop
inc
mov
xchg
and
int
cmp
cmp
loope
push
clc
pop
jb
outs
dec
fistp
out
jge
setb
in
call
jb
pop
shr
mov
mov
mov
out
sbb
add
cmps
xchg
pop
push
sbb
es
stos
pop
push
add
fistp
fmul
dec
shr
mov
sbb
shl
xor
push
setne
mov
adc
pop
loope
push
ffree
push
jns
imul
xchg
mov
sbb
mov
pop
stc
aas
mov
or
adc
jmp
cmp
int
inc
not
sub
test
repz
popf
pop
adc
push
xchg
dec
push
inc
adc
sub
push
cmc
test
rol
and
fcomp
call
or
scas
daa
xchg
push
std
jecxz
lea
xchg
inc
pop
or
ret
neg
into
pop
sahf
cdq
mov
std
cs
shr
sub
mov
mov
sub
xor
(bad)
lods
xor
xchg
(bad)
scas
out
sar
xchg
(bad)
push
daa
popf
pinsrw
or
add
inc
sti
hlt
adc
cmp
and
adc
mov
pop
push
inc
dec
icebp
shl
and
mov
push
mov
std
mov
sbb
mov
sbb
lods
stos
push
mov
das
cld
scas
xchg
mov
adc
xor
cmp
push
pop
push
test
sbb
jns
test
daa
xlat
(bad)
arpl
in
pop
inc
out
(bad)
call
scas
mov
out
int
pop
mov
push
cs
or
leave
mov
daa
scas
push
mov
daa
fidivr
add
and
jbe
mov
or
ss
(bad)
and
shl
and
stos
lock
pop
outs
(bad)
js
jmp
lea
mov
push
mov
sahf
sub
cld
sub
mov
icebp
inc
sub
inc
(bad)
std
or
dec
fisttp
xor
sub
enter
mov
mov
movs
inc
xchg
or
adc
and
ins
cmp
gs
inc
inc
arpl
jmp
jecxz
mov
ins
out
jno
(bad)
ins
mov
adc
mov
and
aaa
ja
adc
xchg
cmovne
int
mov
out
das
mov
std
call
cmp
stos
inc
sar
push
jmp
push
adc
mov
test
adc
repz
add
fwait
iret
adc
jne
dec
mov
xor
syscall
jbe
cmp
ss
lahf
clc
fistp
mov
mov
movs
xor
cmps
mov
push
push
jno
adc
std
(bad)
adc
xchg
in
ja
xlat
popa
add
cmc
pusha
sub
add
nop
fnstcw
retf
pop
int
jne
mov
hlt
dec
retf
fild
ret
xchg
jne
js
mov
adc
pushf
jg
sar
sub
or
sbb
movs
jns
jbe
cmps
cli
mov
cmp
(bad)
xchg
and
sti
js
je
or
xchg
ret
xor
push
je
test
jle
sbb
ror
xor
loopne
aad
bound
sbb
xchg
and
or
test
mov
jp
enter
out
jbe
add
xchg
mov
mov
push
gs
out
movs
mov
ss
push
jbe
push
scas
icebp
add
daa
jo
mul
(bad)
fsub
xor
xchg
adc
push
jbe
sar
sbb
mov
xchg
xchg
xchg
div
mov
std
push
not
xor
retf
xor
adc
jge
outs
in
xor
js
sub
and
inc
push
cmc
cmps
xor
call
push
out
pop
mov
mov
loop
es
cmp
push
push
loope
ret
push
jmp
je
or
or
fistp
popa
mov
xchg
fld
push
mov
ins
or
xchg
shr
jne
ins
clc
xchg
cmp
sti
cmps
mov
push
xchg
cmp
jge
stos
jmp
stos
dec
cmc
xchg
out
sub
mov
pop
push
shl
and
test
data16
cmps
jg
cmp
repz
sti
lock
push
nop
dec
in
or
cld
fisub
sub
adc
ret
jo
xchg
test
ja
mov
stos
fidivr
imul
data16
jbe
popf
pop
sub
pop
pusha
mov
lahf
sub
dec
(bad)
cmps
pop
xchg
je
aaa
stos
sbb
clc
(bad)
inc
mov
dec
(bad)
xchg
lock
ins
ret
js
dec
jo
jmp
sbb
enter
sub
stos
mul
cli
call
test
cli
pusha
sbb
(bad)
aam
ret
pusha
loop
jg
and
mov
aaa
inc
stos
jg
pop
retf
leave
push
in
iret
pop
add
test
hlt
push
mov
int3
fstp
lock
ins
push
popa
movs
xchg
dec
cmp
inc
pop
out
(bad)
nop
aad
sbb
ins
ret
out
push
mov
jae
imul
cmp
loop
sti
scas
lds
imul
mov
in
(bad)
call
and
jl
ds
lods
(bad)
scas
xchg
jg
sub
sbb
movs
add
test
xchg
add
cmp
mov
out
lahf
inc
mov
add
xchg
rol
aad
inc
fstp
mov
sub
mov
cmp
mov
adc
sar
shl
into
xchg
xchg
lahf
das
(bad)
(bad)
inc
stc
hlt
sbb
(bad)
out
adc
pop
stos
xchg
xor
out
lods
js
sbb
push
pop
sbb
imul
mov
xchg
add
je
ins
(bad)
and
shl
and
sub
cdq
call
add
pop
lds
test
mov
cmp
add
gs
rcl
inc
fimul
fs
ins
daa
jl
sub
fisubr
jne
stos
inc
mov
adc
push
mov
icebp
adc
aas
cmp
or
xor
push
sbb
mov
push
xchg
push
xor
jno
lahf
ins
dec
addr16
repnz
add
mov
fwait
test
add
loope
or
cs
rcl
push
outs
sti
lods
imul
sub
cmp
xchg
push
dec
mov
inc
ins
out
mov
inc
arpl
mov
das
addr16
mov
pop
push
mov
push
add
test
cmp
xor
stos
mov
les
das
or
(bad)
lds
mov
div
pop
inc
adc
div
in
pop
cli
jo
stc
or
pop
sbb
dec
(bad)
push
push
sahf
adc
jo
rcr
in
ss
cmp
test
pop
mov
mov
push
mov
cmps
(bad)
jecxz
mov
mov
xor
inc
lock
mov
sbb
pop
adc
sub
mov
out
xchg
(bad)
fistp
dec
jg
mov
stos
nop
or
jl
clc
test
inc
out
adc
in
or
test
dec
into
mov
fsub
cmp
(bad)
xor
xchg
and
shl
inc
out
mov
daa
sar
sub
push
and
sub
jge
inc
xchg
jmp
or
das
scas
out
and
mov
add
ror
and
mov
inc
(bad)
inc
pop
or
inc
add
sub
rol
cld
and
add
cmc
push
aad
sbb
fist
lahf
loope
(bad)
mov
stos
cmp
vfrczpd
mov
xchg
sbb
shl
jmp
test
cmp
leave
add
sub
lods
fucomi
repz
es
mov
js
adc
loop
xor
dec
cmps
(bad)
popa
and
cmp
cmp
lahf
dec
jnp
(bad)
or
push
lock
adc
mov
cli
add
shr
mov
call
cmp
sbb
push
or
mov
aam
int
dec
or
fs
ret
xchg
mov
lods
imul
xchg
pop
mov
sar
in
mov
mov
imul
pop
jl
retf
push
xchg
jnp
shr
add
mov
cli
imul
or
inc
rol
(bad)
push
xor
arpl
inc
movs
fldenv
dec
lea
clc
sbb
imul
cs
popa
mov
push
test
in
sbb
cmps
div
dec
or
jnp
(bad)
sbb
fsub
aam
push
mov
and
scas
sbb
sti
or
popf
imul
jp
imul
repz
addr16
push
scas
dec
aam
sub
push
jmp
iret
sub
adc
and
xor
or
imul
jno
sbb
mov
add
lods
push
mov
xchg
in
cmps
out
add
sbb
sub
adc
pop
pop
loopne
shl
mov
scas
add
scas
mov
into
div
push
lods
jae
fdiv
sub
mov
int
pop
push
xchg
shl
sub
popa
ror
gs
and
or
and
or
icebp
test
cli
pop
sub
arpl
(bad)
jp
mov
popa
add
and
movs
pop
or
in
cmp
sbb
rol
nop
ss
or
mov
cmp
or
pop
or
push
movs
movs
cmc
scas
sbb
jmp
jnp
bound
test
(bad)
fild
mov
jecxz
xor
inc
imul
(bad)
adc
jo
sub
pop
mov
es
(bad)
pushf
jp
ret
test
ja
pop
cwde
inc
push
out
call
lods
clc
cmp
inc
in
or
push
gs
fild
mov
adc
jmp
pop
mov
and
or
inc
inc
hlt
sub
scas
dec
iret
and
mov
and
or
imul
jno
xor
shr
inc
mov
cwde
pop
fs
cmp
imul
mov
stc
aas
inc
div
ins
push
aas
pop
adc
ins
fisttp
js
imul
fisub
arpl
fs
movs
inc
add
in
mov
add
dec
pop
push
(bad)
jns
adc
loop
pusha
out
or
and
adc
mov
inc
rcl
xchg
push
mov
jp
mov
or
(bad)
popf
iret
xchg
jge
ins
retf
push
daa
cmp
jecxz
lods
cli
mov
or
dec
and
inc
in
fs
rcr
shl
cmp
cmps
mov
sti
mov
aam
xchg
jnp
test
cld
adc
jge
test
les
inc
in
and
pop
mov
es
and
mov
ficomp
jnp
leave
xor
push
and
mov
addr16
(bad)
jge
and
movs
test
push
add
mov
jne
in
cmp
retf
and
cmp
push
fwait
js
loope
adc
inc
popa
ror
enter
aad
loop
ret
jl
enter
(bad)
dec
push
pop
xchg
cli
fst
inc
imul
sub
cmc
mov
sbb
push
push
cmc
clc
add
jle
js
popa
xchg
jne
push
mov
sbb
test
int
mov
xchg
popf
cdq
cmp
add
ins
add
out
inc
call
call
pushf
mov
loopne
dec
aad
sub
aam
mov
and
sub
sub
xor
add
xlat
daa
inc
inc
jo
cmp
hlt
aad
sub
sar
jle
push
pop
stc
pop
outs
repnz
test
outs
mov
popa
push
popa
cmp
add
inc
xchg
adc
outs
push
mov
cmp
and
xchg
sub
cmps
mov
outs
inc
rol
fwait
jno
push
mov
pop
jmp
or
xchg
cmp
cmc
stc
(bad)
stc
mov
js
pushf
sar
fldcw
jns
or
cs
xor
int3
pop
sahf
sbb
call
push
mov
xlat
icebp
movsx
xchg
dec
pop
xchg
mov
mov
fwait
or
mov
sub
mov
dec
test
(bad)
xor
xor
push
push
sbb
cmps
adc
out
imul
cmp
clc
std
mov
les
mov
jmp
mov
jmp
mov
push
push
(bad)
sar
imul
shr
push
jle
aam
leave
jns
pop
mov
xchg
cmp
mov
jle
scas
add
sahf
push
cmc
push
mov
stc
cmp
push
shr
pop
movs
mov
push
xlat
xchg
jecxz
das
out
fadd
retf
inc
data16
push
mov
repnz
mov
jg
dec
inc
or
jmp
pop
leave
mov
xchg
lds
out
pop
pop
das
adc
cmc
ret
shl
clc
xor
ins
(bad)
lahf
loopne
aas
ja
dec
or
int3
push
aam
jecxz
sar
xor
std
jmp
repnz
outs
std
xchg
and
out
clc
popa
mov
es
pop
call
push
xor
leave
inc
and
add
push
rcr
mov
mov
nop
repnz
aam
pop
mov
push
loope
mov
mov
mov
nop
sub
clc
int3
ds
mov
pushf
mov
sar
or
inc
sub
je
xchg
jae
mov
or
add
sbb
jne
fnstsw
add
movs
xor
inc
mov
mov
cdq
out
sbb
inc
sub
mov
sbb
or
lods
or
or
mov
add
mov
(bad)
int
dec
mov
stos
fnsetpm(287
mov
mov
push
stc
out
jmp
scas
fwait
add
test
xor
neg
lods
xor
fisubr
pop
sti
aaa
xchg
jo
cmc
mov
mov
fnstenv
jmp
aad
mov
repnz
jp
ins
jmp
in
dec
movs
mov
stos
and
adc
das
xor
inc
and
repnz
enter
movs
repnz
scas
movs
cmp
dec
aad
adc
sbb
popfw
pop
mov
jg
daa
jmp
and
test
mov
mov
loope
dec
push
addr16
ror
aaa
stos
in
(bad)
lahf
mov
cmp
jns
mov
push
(bad)
jb
loopne
push
call
pop
pushf
sub
xchg
rcl
sbb
call
out
outs
push
(bad)
mov
int3
pop
adc
push
dec
push
popf
fstp
mov
scas
popf
test
es
and
sbb
adc
ror
cmp
out
pop
cpuid
dec
and
cmp
sbb
loopne
call
int3
in
lods
ret
daa
xor
xor
pop
mov
push
div
dec
lds
inc
jg
enter
push
call
mov
sbb
inc
push
out
fbld
pop
jne
out
(bad)
leave
popa
call
arpl
push
rol
push
loope
push
sti
rol
cmps
pop
push
mov
call
out
jb
sub
cmp
gs
scas
mov
mov
fs
std
or
pop
pop
sbb
push
inc
mov
ret
fs
mov
out
dec
inc
or
dec
in
(bad)
push
jle
lods
adc
(bad)
in
lds
ret
and
inc
sbb
fnsave
xchg
dec
int3
aaa
fisub
dec
pop
retf
or
(bad)
leave
js
imul
sbb
push
and
jmp
cdq
mov
bound
sbb
mov
mov
pop
pop
stc
stos
and
test
mov
cmp
cwde
fwait
nop
jnp
pop
add
ds
mov
inc
xchg
in
je
inc
std
sbb
jbe
or
ins
push
jp
adc
cmp
sub
mov
popf
jnp
cmp
lods
pop
push
or
mov
pop
push
add
mov
xlat
dec
adc
sbb
add
in
fild
lds
mov
pop
push
into
mov
int
jmp
fisub
xchg
(bad)
neg
test
addr16
pop
out
pop
cwde
lahf
sbb
std
das
out
pushf
shl
jb
cmp
xlat
(bad)
dec
mov
paddd
or
cmp
push
mov
push
test
jp
jmp
or
pop
pop
push
sub
lea
dec
rcr
cmc
mov
add
sbb
mov
sti
js
jno
shl
sbb
cmp
out
movs
das
cwde
and
xchg
xchg
pop
cdq
imul
fstp
or
push
lods
and
sub
push
popa
outs
push
mov
xor
add
cwde
leave
(bad)
mov
jp
bound
les
in
and
xchg
pop
inc
mov
mov
lds
push
aam
lds
icebp
adc
fwait
mov
mov
shr
dec
mov
jle
and
stos
push
aam
mov
cs
or
jo
mov
xor
call
mov
sub
mov
jge
mov
(bad)
inc
rcr
std
jns
and
push
lods
sub
js
add
jbe
in
in
mov
scas
add
ds
in
daa
mov
inc
xlat
stos
add
ret
xlat
xchg
repz
rcl
retf
dec
dec
push
je
or
add
pushf
icebp
jno
adc
pop
cmp
mov
cmps
sti
cmp
bound
dec
push
outs
fnsave
cmps
dec
mov
adc
sub
mov
cmp
jl
add
and
and
adc
lock
pop
out
sub
mov
mov
fcmovnb
mov
movs
mov
inc
inc
(bad)
jp
aas
mov
cmc
and
mov
or
dec
lods
cmc
(bad)
ins
icebp
xor
jnp
jbe
pusha
sub
adc
inc
pusha
repz
add
(bad)
sti
push
lods
push
fcmovne
jmp
push
push
xchg
popf
test
mov
xchg
cli
aad
stc
inc
add
jno
sub
xchg
sahf
jo
scas
pop
mov
(bad)
push
fwait
push
aad
mov
in
xor
fcmovb
mov
sti
fnstcw
push
loope
pop
mov
ror
cmp
or
mov
aas
mov
nop
nop
mov
hlt
jo
movs
jne
xor
bnd
mov
retf
mov
jnp
(bad)
je
dec
test
scas
sahf
adc
sub
dec
jno
push
jl
jb
mov
cdq
sbb
aas
xchg
mov
cmp
push
or
or
pop
push
push
arpl
adc
jbe
xchg
daa
or
mov
sbb
cmps
xor
sub
lock
pushf
test
arpl
mov
jno
or
cmp
mov
sbb
das
pop
mov
xor
inc
pop
pusha
cld
xchg
movs
in
dec
out
jns
push
add
adc
shl
in
xchg
xlat
jmp
or
pop
rol
or
jp
dec
pop
push
pop
mov
cmp
mov
out
sbb
outs
repz
pop
inc
cmp
mov
cs
sub
xchg
inc
out
add
fstp
mov
ja
cmps
mov
in
push
add
add
dec
adc
sub
cmc
fimul
out
push
ret
fidivr
sbb
lods
enter
add
xor
cmps
hlt
xchg
out
ret
xchg
leave
and
cmp
xchg
(bad)
(bad)
xchg
adc
inc
out
aaa
clc
cmps
mov
outs
add
sar
inc
jnp
mov
and
scas
ss
or
xchg
out
lahf
sub
jnp
fadd
je
mov
mov
cmp
and
jns
arpl
dec
lea
js
(bad)
pop
or
jmp
lea
cmp
jnp
cmp
(bad)
push
jbe
xor
mov
mov
test
cmc
mov
call
and
and
inc
inc
fcom
int3
xchg
push
ret
dec
push
mov
popa
mov
fld
leave
sti
outs
mov
shr
lods
pop
xor
jp
ins
gs
data16
pop
jmp
sub
repz
push
sub
cld
jecxz
mov
xlat
mov
cmp
int
or
push
add
xchg
cmp
xchg
(bad)
jo
xor
aam
fild
or
sbb
xchg
out
adc
(bad)
pusha
out
js
test
lods
lods
add
cmp
fisub
aad
popf
inc
cmps
sbb
cmp
mov
inc
adc
hlt
rcl
add
push
aad
lahf
xchg
pop
fidivr
cmp
dec
std
jl
xor
dec
shl
inc
lds
les
adc
dec
xor
dec
cmp
gs
mov
cmp
je
fmulp
jl
je
add
jge
(bad)
mov
add
pop
(bad)
arpl
mov
in
adc
mov
adc
in
ins
xchg
jle
push
xor
jb
sbb
or
cmps
in
mov
sbb
leave
adc
xchg
mov
jp
mov
or
or
leave
sti
mov
sbb
jbe
in
je
sub
xor
nop
push
sub
loope
xor
jbe
cmp
call
or
fmul
es
cmp
ret
jmp
adc
lea
pusha
cmps
jecxz
inc
adc
ret
in
ja
call
imul
out
push
xor
sbb
xchg
ret
and
xlat
sub
ins
or
je
in
imul
mov
lods
sub
fstp
popf
adc
out
(bad)
(bad)
sub
cmp
mov
mov
jp
call
gs
into
sub
test
and
pop
fild
mov
iret
inc
cmp
bound
mov
push
xchg
add
pop
ror
ss
(bad)
push
ins
xchg
mov
dec
lea
adc
dec
dec
xchg
pusha
pop
mov
add
sar
call
ins
rol
std
shl
push
sti
inc
fisttp
aas
cmc
mov
ss
xor
mov
(bad)
ins
adc
mov
push
clc
xchg
jnp
out
into
stc
dec
cmps
push
call
pushf
sub
les
add
sub
cdq
sti
or
ins
clc
cmps
mov
sbb
push
ret
retf
and
jne
sbb
jns
fwait
inc
fst
inc
scas
mov
pop
pusha
daa
fwait
inc
jp
bnd
(bad)
pop
push
lds
(bad)
(bad)
lea
mov
cs
or
xor
stc
mov
ds
popf
lods
in
int3
mov
jae
out
inc
xchg
xlat
pop
cmp
lods
js
retf
mov
je
icebp
stos
jb
xchg
pop
leave
push
or
sub
add
dec
mov
inc
fadd
mov
add
inc
inc
xchg
outs
cmps
push
inc
lds
mov
xor
cmps
cli
adc
push
(bad)
push
imul
mov
xchg
in
pop
jns
push
dec
stc
test
pop
xchg
jno
fabs
mov
test
adc
ja
xchg
sar
loopne
mov
stc
push
add
jbe
sub
jle
pusha
xchg
mov
ins
sbb
shl
cli
stos
cmp
data16
mov
jle
test
sub
addr16
outs
imul
inc
cwde
(bad)
mov
push
fstp
and
cmp
sbb
push
or
in
mov
in
fld
dec
test
mov
es
pop
sub
pop
adc
(bad)
in
xchg
inc
dec
repz
cmp
(bad)
iret
out
xor
jl
push
ret
sub
(bad)
xor
sbb
ret
adc
mov
sbb
(bad)
dec
retf
cmp
mov
cdq
push
ss
sbb
and
cli
or
cld
sbb
in
gs
call
sub
in
cmp
test
cmp
inc
mov
mov
lahf
and
(bad)
and
cmp
pushf
rcl
sbb
mov
je
push
mov
mov
or
adc
inc
sbb
(bad)
ret
lods
or
mov
stos
xor
loop
mov
and
inc
mov
lods
jb
push
call
pop
xchg
sbb
jl
mov
fstp
xchg
int3
jecxz
shl
cmps
jne
pop
xor
push
outs
daa
push
bound
lock
push
stos
test
add
repz
data16
and
mov
test
or
dec
cs
xchg
or
mov
xchg
pusha
pop
cmp
outs
out
pushw
and
stos
shl
fst
inc
icebp
mov
ret
xchg
jns
jmp
fistp
sar
retf
stos
dec
mov
or
jecxz
mov
or
sub
in
pop
pop
push
cs
dec
or
test
push
or
or
ja
mov
out
xor
idiv
out
addr16
out
and
jae
sub
call
mov
ror
sub
inc
xchg
pushf
or
pop
test
outs
push
jb
icebp
xchg
std
sbb
jmp
xlat
stc
ds
xchg
add
xor
test
enter
jmp
lods
(bad)
or
jne
int3
pop
loopne
xchg
jp
push
call
ret
push
ret
mov
cmp
fcomp
ins
retf
mov
mov
rcl
xchg
sub
xchg
pop
sbb
sbb
dec
add
nop
cmp
sub
adc
test
(bad)
dec
jb
mov
cli
loop
sbb
repnz
inc
pop
dec
or
aas
call
aas
push
add
pop
je
rol
jns
xlat
push
push
rcl
fwait
xchg
popa
sub
adc
add
lods
fbstp
lods
xor
repnz
add
pop
repnz
test
jne
pop
cld
ret
imul
or
loop
popa
xchg
inc
out
shl
or
fwait
jnp
jmp
jnp
fbstp
mov
jno
repz
test
leave
call
dec
icebp
outs
inc
in
xchg
div
pop
add
sti
mov
or
ja
or
stos
lock
clc
mov
cmp
in
repnz
movs
scas
xchg
mov
jnp
vcvtdq2pd
(bad)
sbb
sbb
xchg
mov
xchg
sbb
jno
loope
aaa
ins
xchg
jle
data16
pop
(bad)
movs
dec
fstp
ror
cmps
dec
sub
jp
outs
js
inc
xor
js
add
dec
ja
std
lds
jns
sub
jnp
jae
xchg
aas
lods
dec
popf
add
sbb
(bad)
sbb
cmc
mov
stos
out
jg
into
sub
sbb
outs
fwait
(bad)
cld
xchg
lods
push
adc
lods
mov
rol
jbe
push
out
cld
pop
xor
dec
lock
cmp
imul
mov
mov
jo
mov
stos
xchg
mov
(bad)
xchg
dec
jae
fsub
mov
(bad)
jmp
lock
add
pop
jecxz
cmps
xor
(bad)
ror
cmps
push
or
cmps
repnz
out
rcl
into
add
and
mov
cmp
push
add
inc
mov
push
mov
pop
clc
sahf
pop
push
adc
jecxz
stos
xchg
mov
imul
lods
xchg
mov
cli
sahf
push
rol
or
jl
repnz
cmp
sub
dec
sbb
inc
cmp
aaa
lds
fisub
and
sbb
dec
idiv
add
pop
sbb
mov
or
mov
ror
out
sbb
fisubr
mov
rol
xchg
push
push
mov
xor
sahf
repnz
pop
xor
mov
sbb
inc
out
out
xor
cs
push
push
cmp
lock
push
dec
leave
cmp
xor
lahf
sub
sub
sub
sub
out
jne
add
inc
into
mov
shr
cmp
xchg
test
mov
imul
jg
mov
sti
mov
mov
and
movs
fcom
outs
sub
or
jo
inc
leave
call
mov
in
adc
jmp
add
dec
jp
outs
xor
retf
fsubrp
jecxz
nop
jns
imul
fistp
dec
lock
jno
sub
pop
and
jmp
cmp
or
mov
stos
cmps
in
(bad)
xlat
jp
je
xchg
aam
adc
mov
xor
lods
ds
push
xor
cs
add
fisub
cmc
clc
pop
jb
cmp
imul
mov
call
test
mov
(bad)
aad
ja
push
dec
mov
in
mov
sub
loope
adc
lds
(bad)
sub
xchg
data16
mov
xchg
and
hlt
icebp
push
ror
ror
hlt
test
test
mov
fcmovbe
lock
mov
push
loope
leave
retf
das
xchg
sbb
pop
lods
xchg
inc
jle
mov
icebp
add
sub
ss
retf
enter
mov
(bad)
std
imul
data16
leave
adc
pop
fs
mov
dec
stos
arpl
xchg
or
mov
xlat
or
pop
push
mov
cwde
div
mov
dec
cld
cmp
sar
xchg
lods
pop
jbe
fdivr
cld
adc
stos
xchg
out
nop
add
nop
push
popa
mov
popf
jno
int3
in
mov
sbb
mov
mov
aam
mov
pop
out
jns
and
ins
out
(bad)
ftst
adc
aaa
test
aam
sbb
xchg
ds
fidiv
and
lock
mov
gs
jmp
push
inc
add
sbb
lea
pop
out
and
pop
dec
ja
sbb
ficom
dec
push
inc
cmp
arpl
push
add
xor
test
inc
jae
outs
xchg
mov
test
sbb
fcmovnbe
add
mov
inc
stos
add
mov
fidiv
rcr
aam
jle
adc
mov
call
gs
mov
pop
adc
xchg
out
add
fucomp
cdq
xchg
jo
push
fwait
js
iret
je
lods
pop
mov
dec
sub
(bad)
call
cmps
stc
aas
lods
nop
jo
xor
retf
(bad)
mov
sti
mov
loop
push
sti
inc
call
mov
sbb
sbb
in
pop
mov
cmp
inc
mov
dec
and
mov
pop
fmul
mov
cwde
xchg
inc
aaa
cli
mov
mov
jle
cmp
jne
xor
mov
das
jb
sub
add
sub
mov
test
push
push
mov
fidivr
imul
cld
push
pop
sti
cmp
fnstcw
push
retf
add
cli
nop
pop
xlat
jns
rol
movs
aaa
push
loope
lea
xor
adc
into
lods
in
xlat
push
dec
mov
xchg
(bad)
adc
cld
int3
jle
xchg
xchg
arpl
dec
pop
mov
test
inc
xchg
fwait
outs
mov
loope
stos
call
aas
aad
dec
mov
xchg
cdq
xchg
add
mov
pop
pop
aas
sahf
sub
gs
(bad)
into
push
pushf
out
nop
cld
out
fcomp
pop
cs
inc
ja
pop
(bad)
push
add
jle
pop
cmp
test
adc
cmp
fsub
sahf
out
or
sbb
or
sbb
pop
jg
xor
int
xor
sbb
out
add
xor
pop
test
shl
jg
call
cmp
lds
pusha
icebp
ret
add
xor
hlt
pop
pop
adc
push
(bad)
dec
xor
sub
out
je
retf
push
cmp
ins
sahf
loop
sub
mov
aas
pop
rcr
add
scas
mov
fsub
std
cmps
mov
fisttp
mov
shl
jmp
dec
inc
ja
push
jbe
addr16
jbe
mov
cmp
addr16
sbb
mov
clc
add
xor
in
retf
xor
mov
fidiv
outs
pusha
and
jl
hlt
aad
xchg
out
pop
jle
out
and
push
and
inc
xchg
out
mov
sar
or
hlt
fcmovbe
jae
or
mov
(bad)
cmp
mov
(bad)
arpl
adc
rcl
push
mov
fiadd
jb
push
mov
(bad)
cli
sub
mov
outs
and
outs
mov
dec
or
lods
sbb
(bad)
push
(bad)
add
mov
mov
dec
mul
mov
dec
jns
mov
nop
loop
and
and
jp
ins
add
mov
or
into
bound
jmp
mov
push
fdiv
aad
dec
jo
movs
sbb
jp
xor
gs
mov
and
out
cli
mov
dec
cmp
mov
test
add
push
mov
test
sub
test
cli
les
mov
mov
pop
jns
mov
retf
dec
pop
jmp
das
out
push
mov
je
ret
pop
shr
add
es
jnp
inc
jp
add
ins
dec
sbb
test
xchg
popf
rol
sbb
mov
jmp
in
(bad)
(bad)
mov
xchg
pop
mov
inc
pop
cmp
lahf
jbe
and
add
neg
ret
fadd
sbb
xchg
jmp
loop
(bad)
(bad)
jo
mov
sub
bswap
dec
out
mov
mov
clc
mov
fild
ret
aas
ins
retf
mov
js
test
or
dec
push
pop
out
and
in
sub
rol
mov
dec
iret
sub
movs
test
clc
sub
pushf
imul
pop
test
lods
les
push
gs
sti
mov
adc
adc
jae
xchg
jecxz
sahf
out
gs
lods
sbb
adc
gs
mov
das
cmp
into
xchg
push
push
scas
pop
dec
pop
repz
cwde
pop
aaa
int3
mov
out
push
lods
clc
xor
xor
mov
imul
or
pushf
fimul
inc
rol
mov
ja
ret
mov
scas
jns
mov
ins
pop
bound
push
test
or
and
mov
outs
mov
xor
(bad)
mov
mov
sbb
clc
outs
mov
sub
add
(bad)
cmc
mov
scas
push
test
das
rol
in
(bad)
push
aas
push
cdq
pop
inc
dec
mov
and
out
mov
jl
pop
sar
dec
sbb
outs
sub
adc
mov
xor
xor
shl
es
xor
inc
sub
out
ds
leave
sub
loope
mov
jbe
sar
into
dec
pop
je
xchg
add
mov
push
mov
and
out
mov
adc
lahf
push
mov
xor
cmps
sub
rol
cld
jp
out
ds
mov
xor
jno
loope
rcr
add
aaa
xor
xlat
inc
pop
pop
movs
mov
fdivr
add
or
je
or
and
stos
cmp
xchg
lea
call
ja
jmp
test
js
push
fisttp
or
jp
sbb
push
sbb
repnz
mov
mov
or
adc
pop
popa
jg
add
jmp
push
lock
cmp
jae
ins
or
aas
xor
xchg
loop
in
mov
push
and
mov
push
xor
mov
cmp
xchg
xchg
test
push
mov
jmp
rcl
mov
and
xor
ds
scas
add
cmp
enter
sti
adc
xchg
ror
push
aaa
retf
in
pop
jl
call
push
pop
dec
mov
mov
ss
aas
add
inc
cmp
dec
xchg
inc
inc
(bad)
jle
jno
(bad)
nop
scas
push
pop
lahf
or
sub
mov
inc
sub
pop
xor
pusha
and
data16
mov
push
inc
nop
mov
push
mov
xchg
sub
sti
and
jns
jno
ret
lds
enter
pop
adc
adc
out
or
(bad)
adc
mov
inc
push
ret
adc
loop
cmp
loope
sahf
test
pop
cdq
pop
stos
lds
imul
push
je
(bad)
rcr
inc
and
lods
mov
xor
sub
shl
retf
lods
mov
(bad)
mov
adc
push
inc
es
cdq
mov
add
iret
jb
add
jle
ins
cmp
xor
int3
mov
mov
jl
in
push
shl
pop
fucomp
cmp
test
jno
pop
sbb
and
nop
dec
push
fsubr
mov
ret
inc
daa
xchg
inc
mov
rol
mov
test
(bad)
jp
and
iret
xor
in
ret
push
xor
adc
or
jle
adc
mov
sbb
mov
out
xchg
out
and
(bad)
fadd
adc
xor
jns
cmp
adc
jmp
jns
lods
sub
dec
aas
js
scas
jbe
add
pop
xor
nop
add
mov
mov
mov
cmps
test
add
adc
mov
rcr
adc
push
add
das
push
pop
loope
jo
ror
js
cld
sub
sub
push
std
cmp
test
cmc
ds
movs
inc
cmc
stos
repnz
call
sub
test
cmp
in
fdiv
dec
cld
icebp
dec
int3
cli
popa
popa
or
pop
loope
ja
hlt
xchg
in
dec
inc
push
jecxz
add
dec
pop
stos
adc
inc
aam
sbb
(bad)
ds
mov
mov
clc
mov
xor
cdq
enter
shl
mov
adc
enter
ror
test
sbb
push
fisub
or
daa
hlt
push
push
and
push
out
lds
xor
repnz
xchg
outs
daa
inc
sub
test
and
lock
rol
sar
iret
or
das
push
dec
push
mov
js
sbb
mov
popf
sub
js
mov
xor
pushf
addr16
popa
ror
cwde
sub
add
adc
push
ret
in
scas
xchg
jge
dec
pop
inc
out
mov
(bad)
icebp
ss
mov
rcl
fisttp
dec
dec
or
or
movs
in
rcl
inc
or
out
int
inc
or
mov
mov
push
fbstp
in
gs
mov
adc
cs
(bad)
jmp
outs
rcl
fild
cmp
arpl
shr
ret
inc
push
mov
fstp
sub
jno
xor
mov
mov
xchg
xlat
sbb
dec
jmp
cmp
cmp
xchg
mov
ret
jmp
leave
in
dec
xchg
iret
ucomiss
stc
popf
push
stos
mov
ss
or
movs
sbb
sub
cmp
retf
cmp
outs
or
(bad)
mov
mov
(bad)
mov
xor
sbb
outs
jmp
es
shr
jge
push
enter
and
mov
jl
cmp
sub
jne
test
call
ret
ins
les
push
xor
mov
mov
sub
cmp
dec
xchg
shl
push
cdq
arpl
push
jmp
push
ins
(bad)
je
mov
jle
imul
bnd
arpl
out
push
lods
fnstenv
es
aas
pusha
push
lahf
and
cmc
in
sbb
mov
aam
jae
sbb
inc
loop
jecxz
sub
es
pop
hlt
xor
test
arpl
mov
xchg
retf
test
data16
mov
(bad)
xor
ret
sub
aad
in
test
(bad)
cmp
out
xlat
jns
push
mov
out
int3
pop
jb
add
addr16
jp
mov
cwde
xchg
iret
(bad)
jmp
hlt
xor
sahf
das
punpcklbw
shr
ret
mov
int3
pop
fcompp
mov
sbb
mov
iret
push
fadd
inc
lods
xor
es
adc
jmp
pushf
aam
jns
mov
sbb
mov
xchg
mov
dec
call
adc
(bad)
rcr
sub
push
ins
pop
test
jecxz
js
ffree
xchg
call
stc
add
repz
xchg
push
xchg
pop
in
lahf
loopne
fstp
dec
ficomp
dec
mov
aam
ror
mov
ja
push
mov
pop
cli
mov
sti
cmovnp
sbb
pusha
mov
repz
xchg
push
repz
and
sbb
pop
push
cs
add
repnz
xor
out
jb
les
mov
(bad)
outs
add
mov
mov
dec
xchg
pop
xor
inc
sub
jp
or
mov
and
xor
ror
fstp
jmp
clc
js
cmp
lods
add
ds
sbb
inc
xchg
das
lahf
sbb
not
scas
push
mov
xor
ret
popf
xlat
cwde
(bad)
push
xor
aad
lods
pop
xchg
jbe
fnstsw
scas
test
or
fs
sub
test
in
sahf
mov
or
(bad)
ror
icebp
xor
mov
outs
mov
adc
xchg
(bad)
mov
adc
mov
jge
push
retf
mov
out
test
push
and
mov
inc
mov
pop
dec
or
xor
or
mov
sbb
add
add
repnz
pop
repnz
xor
ficomp
shr
and
jnp
mov
mov
ror
and
cmp
outs
retf
adc
scas
in
ins
and
mov
stos
xor
sub
jns
and
inc
sub
in
clc
add
cld
cmp
push
jne
fs
(bad)
popa
cmp
xchg
cmc
retf
and
iret
arpl
dec
jle
mov
cmp
pop
arpl
jg
ffree
jae
(bad)
(bad)
fdiv
aas
nop
addr16
lea
dec
jbe
pop
gs
cmp
mov
dec
(bad)
mov
and
ror
leave
test
jmp
jl
imul
cwde
ins
aaa
inc
mov
sbb
faddp
test
push
and
mov
mov
fmul
(bad)
fadd
adc
mov
push
cmp
inc
pop
mov
xor
nop
mov
adc
outs
data16
in
pop
mov
mov
ja
popa
sti
dec
call
inc
ss
test
jae
fisub
push
outs
xchg
gs
test
xor
sbb
xchg
popf
mov
test
or
xchg
outs
mov
daa
and
out
ins
ss
loop
out
sub
xchg
dec
scas
out
push
(bad)
mov
sbb
push
pop
lahf
pop
shl
dec
pop
arpl
test
adc
cmc
pop
sub
addr16
pop
call
cli
ret
adc
add
mov
jno
test
test
pusha
push
cmps
mov
ror
sbb
(bad)
outs
inc
mov
loopne
jmp
sar
(bad)
arpl
xchg
cmps
mov
leave
nop
out
je
jno
push
cmp
xchg
or
jle
mov
or
jb
mov
xor
adc
push
(bad)
rcr
jb
in
jl
nop
pop
dec
dec
mov
test
jno
push
loop
nop
in
adc
add
cmp
scas
ficomp
cmp
hlt
mov
iret
std
loop
pusha
je
retf
sub
push
pop
movs
lods
mov
xchg
stc
out
popa
jmp
cld
leave
fild
inc
hlt
int
mov
cmps
push
cli
fs
dec
mov
shr
mov
or
imul
hlt
mov
stos
in
xchg
jo
push
xor
push
adc
xchg
jo
mov
mul
hlt
adc
sub
stos
js
sbb
xchg
arpl
(bad)
hlt
cmps
enter
sbb
inc
out
ds
fdiv
inc
adc
add
push
movs
fimul
mov
pop
ror
dec
pusha
(bad)
(bad)
sbb
and
outs
repnz
xor
loope
jne
sar
xchg
repnz
fs
mov
add
movs
in
retf
cmp
daa
(bad)
dec
ss
(bad)
or
adc
pop
in
dec
shr
jno
jl
out
mov
mov
test
movs
pop
pop
(bad)
iret
adc
inc
xchg
sahf
cld
lods
xchg
dec
cld
and
shl
push
push
xchg
lods
jmp
xchg
cmp
pop
(bad)
stc
iret
iret
inc
inc
hlt
test
shl
fbstp
push
and
aas
xlat
fst
pop
and
shl
aam
pop
inc
arpl
loopne
fsub
cmc
mov
add
mov
sahf
push
cs
cmp
jb
loopne
imul
retf
neg
xchg
loope
nop
icebp
cmp
rcl
xor
pop
sahf
mov
daa
dec
jge
addr16
(bad)
shl
ss
pop
outs
jno
iret
outs
jl
xchg
mov
scas
jge
jg
inc
leave
mov
and
mov
lods
pop
push
and
enter
ficom
xchg
jo
iret
mov
pop
movs
loopne
sub
or
loopne
jno
lods
fstp
pop
movs
mov
xor
in
out
dec
push
add
adc
fistp
adc
dec
inc
fsub
adc
ja
pop
inc
mov
mov
fcomp
push
adc
cmp
aaa
and
stos
pop
or
xchg
inc
mov
mov
sub
mov
retf
fisub
icebp
sbb
inc
sahf
pop
rol
cwde
mul
je
xor
dec
sub
ss
sub
inc
int3
push
jge
mov
mov
jp
dec
retf
adc
dec
retf
arpl
test
popf
(bad)
cmp
out
inc
(bad)
adc
(bad)
into
popf
popf
or
outs
sbb
jo
daa
xor
push
les
(bad)
movs
and
sub
add
xor
je
movs
stos
rol
inc
xchg
inc
or
call
sbb
push
scas
add
and
mov
mov
sbb
test
and
cs
add
ficomp
sub
ins
add
push
lock
mov
sti
fstp
fnstenv
mov
inc
into
xchg
xchg
test
inc
aas
add
push
cmc
adc
nop
aad
sbb
js
pop
push
cwde
jmp
(bad)
clc
aas
ss
or
sub
(bad)
out
pop
jg
loop
iret
shl
jne
ja
dec
les
pop
lahf
sbb
idiv
dec
dec
push
fs
call
mov
mov
call
sbb
outs
or
and
xor
or
mov
into
(bad)
scas
lock
lea
jge
cmp
movs
inc
add
mov
mul
cmp
shr
lea
cmp
clc
in
popa
in
mov
loop
inc
int
add
pusha
xchg
jg
cs
sbb
fwait
shl
inc
jbe
in
inc
in
rcl
imul
(bad)
cmc
popa
mov
(bad)
aam
out
push
dec
xlat
adc
sti
cld
ins
and
popf
scas
(bad)
cmps
sbb
lahf
push
js
popf
sub
jl
fbld
xor
dec
and
aas
jmp
push
cmp
jbe
dec
(bad)
push
mov
mov
imul
and
push
inc
gs
or
dec
sub
jnp
popf
leave
sub
dec
imul
popa
stos
adc
rcl
in
add
adc
xchg
aad
retf
mov
mov
adc
sub
pop
mov
push
jmp
outs
inc
out
iret
mov
push
std
ror
inc
push
(bad)
shr
fiadd
iret
les
mov
ret
mov
and
dec
fadd
cmp
cmp
add
push
fnsave
and
inc
pop
(bad)
scas
pop
out
jmp
fdiv
mov
xor
sub
in
push
repz
or
cmp
or
(bad)
mov
mov
jge
aam
imul
scas
ror
es
aaa
addr16
xchg
mov
adc
sbb
movs
xchg
mov
outs
ret
clc
retf
in
sbb
in
push
sub
cdq
push
sbb
sbb
daa
popf
inc
pushf
add
add
call
rcl
(bad)
frstor
push
mov
pop
movs
nop
sbb
xlat
out
fadd
fcmovb
dec
jb
sahf
mov
xor
dec
aaa
das
(bad)
pop
sub
ss
adc
inc
xchg
inc
xor
in
stc
sbb
icebp
mov
test
and
jle
push
inc
pop
dec
add
setb
xor
or
(bad)
push
mov
ja
test
fild
imul
dec
bound
outs
xchg
adc
jb
sar
fcmovnbe
dec
jnp
popf
cs
mov
cmp
xchg
nop
jecxz
push
cdq
iret
popf
xor
je
loope
jg
xor
cdq
retf
xor
pop
ret
add
add
pop
inc
pop
inc
fbstp
int3
inc
pop
or
mov
fisub
dec
xor
imul
cmp
cmp
xchg
lahf
xor
lods
xor
fucom
or
xchg
sbb
hlt
call
jmp
fist
inc
fnsave
push
pop
add
sbb
adc
shl
xchg
fs
in
(bad)
cmps
push
daa
and
push
jno
retf
in
push
mov
out
outs
xchg
fsub
sbb
retf
arpl
shr
lods
hlt
pop
and
(bad)
cs
mov
ins
ds
xor
repz
stos
in
sub
imul
cwde
dec
test
add
aaa
dec
xor
push
mov
mov
jp
push
pop
invd
bound
xchg
and
cmp
jl
or
xchg
mov
mov
xchg
pop
iret
movs
ins
imul
(bad)
loopne
inc
pop
loope
xchg
jmp
std
or
sub
into
dec
or
aam
dec
popa
dec
stos
dec
stos
daa
loope
mov
mov
mov
ficom
je
mov
sub
inc
sub
call
and
shr
bound
popf
(bad)
out
stc
jne
repnz
pushf
push
rol
inc
dec
adc
fsub
sbb
inc
les
adc
(bad)
popa
sbb
cld
ror
stos
jecxz
outs
cdq
lock
and
add
sar
lock
pop
nop
pop
pop
xor
mov
ins
xchg
cmc
and
pushf
pushf
(bad)
int
icebp
xor
int
push
and
ja
or
sbb
dec
pop
rcr
shl
popf
cmp
push
call
sbb
loop
jmp
mov
ins
mov
pop
mov
retf
rol
enter
adc
pop
stos
(bad)
arpl
add
add
sub
movs
iret
xlat
jo
aad
pop
and
and
jae
xor
add
loope
fistp
aas
cmps
pop
xor
xchg
pop
jbe
cmps
pop
je
or
jmp
mov
sub
push
mov
push
xchg
xchg
add
mov
push
xchg
bound
cmp
ret
mov
mov
inc
sub
mov
loope
fstp
out
lods
aaa
ins
and
(bad)
mov
retf
loope
mov
(bad)
mov
popf
ret
jae
jmp
mov
outs
test
pop
mov
out
test
pushf
mov
push
adc
pop
fdiv
mov
adc
xor
ret
xchg
int
movs
int3
pop
xor
dec
xlat
outs
and
cmp
adc
mov
push
pop
scas
sub
jmp
sub
and
daa
fcmovbe
cdq
adc
mov
push
cmc
fwait
mov
(bad)
imul
pop
lea
xchg
mov
gs
popf
rol
loopne
fmul
mov
jmp
mov
inc
addr16
xchg
add
push
jbe
inc
rol
sbb
gs
cdq
test
xchg
ins
mov
ror
xchg
pushf
jno
push
outs
in
pop
sub
scas
int
ror
push
(bad)
popa
push
dec
fdiv
and
add
or
cli
clc
sbb
cs
mov
xchg
cmp
pop
stc
push
add
aad
pop
std
dec
adc
jo
sbb
jmp
mov
mov
jmp
push
cmps
repz
clc
clc
jo
inc
fs
hlt
add
mov
fstp
push
inc
xchg
mov
add
mov
mov
mov
dec
xor
mov
movs
inc
sbb
fdiv
mov
cmps
mov
ins
stos
ds
push
(bad)
pop
sub
mov
aas
aaa
and
jnp
dec
jmp
shl
sbb
push
call
(bad)
les
cmp
inc
mov
fdiv
dec
rol
leave
add
dec
movs
cld
xchg
push
nop
mov
icebp
add
sbb
imul
push
aad
mov
mov
xor
add
mov
imul
add
mov
retf
cmp
call
push
pop
sahf
lock
cli
nop
cwde
sti
jns
sbb
adc
sbb
punpckldq
sub
in
pop
mov
pop
inc
pusha
mov
pop
push
jl
xor
imul
mov
or
daa
mov
dec
clc
in
inc
mov
and
adc
fist
daa
retf
xchg
push
mov
call
adc
mov
and
pop
mov
call
out
test
adc
add
fcmovnb
fwait
push
popf
mov
cwde
push
mov
push
mov
mov
stos
lds
aaa
xlat
cmp
outs
adc
cmps
dec
bound
retf
stos
sbb
mov
iret
inc
pop
test
idiv
(bad)
jle
ret
in
les
bound
adc
mov
repz
jle
push
mov
int3
add
xlat
jns
repnz
pop
(bad)
jb
dec
stos
pop
xor
mov
add
hlt
sub
jp
test
mov
fcom
sub
sub
cld
(bad)
lods
adc
adc
or
push
sbb
cs
test
js
jo
cwde
mov
test
lgs
push
aaa
pop
xchg
cs
test
and
sbb
adc
(bad)
sar
div
pop
xchg
dec
pushf
mov
fidivr
or
pop
inc
sub
retf
ficom
cli
jmp
lock
pop
xor
cmp
in
xor
xor
daa
inc
lock
mov
xchg
mov
xchg
pop
pop
or
jo
rcl
mov
jnp
pop
and
dec
pop
mov
jne
pop
add
cmp
aaa
ds
(bad)
jg
sub
lea
pop
xchg
aas
push
ss
or
add
dec
push
enter
jns
(bad)
mov
test
popf
mov
repnz
cmp
(bad)
dec
aam
xor
xor
xor
les
adc
mov
xchg
in
dec
mov
sub
and
sub
stos
pop
mov
push
inc
iret
test
in
mov
xchg
mov
xor
std
adc
add
rcr
sahf
out
mov
addr16
stc
inc
mov
shl
pushf
ret
ins
scas
out
jo
ror
hlt
xchg
lods
lock
out
push
into
mov
outs
std
add
push
(bad)
ret
nop
adc
cmp
xchg
dec
xor
cmp
jg
jmp
das
int3
popf
and
imul
out
fs
or
mov
mov
xor
jno
and
das
mov
es
cmc
add
fdiv
xchg
mov
fadd
fnsave
xchg
shl
inc
dec
stc
dec
ror
data16
inc
(bad)
repnz
add
xchg
jmp
add
jmp
cdq
mov
icebp
fwait
clc
mov
cmp
cmp
mov
mov
mov
sahf
jmp
loop
push
lahf
pop
test
bound
cmp
push
cmp
clc
scas
fistp
mov
xor
push
pop
imul
leave
mov
jnp
retf
lea
sub
rcl
cs
inc
pop
adc
es
xchg
mov
into
push
mov
or
mov
ror
out
sub
iret
jge
cmps
jb
popf
mov
sti
icebp
adc
pop
push
stc
aas
pop
sub
test
pusha
and
jecxz
cmp
cdq
adc
push
lea
dec
mov
jecxz
in
push
das
(bad)
sbb
stos
sbb
jo
imul
sbb
arpl
mov
xor
xor
test
mov
bound
lock
jae
push
shl
jp
inc
dec
mov
pop
jbe
(bad)
fwait
scas
and
push
bound
cmp
nop
cwde
pop
outs
inc
out
gs
loop
inc
push
mov
add
add
test
nop
and
shl
mov
mov
mov
mov
retf
lock
cmc
adc
jmp
loop
sbb
pop
xchg
mov
xchg
stc
mov
call
out
adc
adc
mov
push
scas
hlt
cmp
lahf
into
cli
or
mov
and
mov
sbb
stos
in
loopne
xchg
jmp
add
jp
push
adc
xchg
jnp
(bad)
xlat
jg
pop
sbb
sbb
retf
push
pop
lea
out
dec
test
adc
push
cmc
mov
hlt
lahf
xchg
movs
sub
ret
cmps
mov
pop
push
lahf
mov
dec
loop
js
into
ja
aam
pop
sahf
addr16
jecxz
jbe
shr
(bad)
aam
dec
mov
ror
push
pop
imul
or
lds
xchg
pusha
sub
mov
or
push
push
push
fist
dec
mov
cld
mov
movs
pop
(bad)
lea
jmp
dec
mul
jb
xchg
and
aaa
fld
imul
xchg
pop
into
pop
cdq
retf
xchg
jp
xchg
loop
cmp
fadd
addr16
push
jp
test
int
inc
push
aam
jmp
mov
adc
mov
iret
mov
cmp
aad
movs
comiss
pop
sbb
jle
jl
jae
fsub
(bad)
fwait
sbb
mov
adc
xchg
fcomip
repnz
xlat
lock
mov
outs
aaa
jge
mov
out
mov
pop
jo
in
fist
out
cli
sub
nop
and
push
jl
fiadd
sbb
movs
movs
push
push
paddsb
xor
nop
fnstsw
test
sbb
inc
push
lods
xor
dec
dec
pop
mov
mov
pop
cmp
(bad)
aad
pop
sbb
pushf
or
or
cmps
and
and
mov
jmp
lahf
lods
mov
xchg
xchg
jg
dec
xchg
mov
push
xchg
adc
mov
lock
nop
ror
les
add
jge
(bad)
test
mov
sti
pop
pop
(bad)
fcmovb
out
dec
das
repz
jge
stos
add
cmp
pop
add
int
jae
iret
test
addr16
xor
mov
push
jns
sub
cmp
fsubr
test
push
fs
repnz
mov
(bad)
jmp
dec
rcl
fiadd
mov
pop
jno
jle
jns
and
stos
adc
les
es
mov
(bad)
and
or
or
xchg
adc
pop
inc
outs
jmp
cmp
jno
scas
scas
loope
scas
cld
(bad)
xor
test
out
pop
pop
push
mov
test
sbb
aam
(bad)
das
sub
jno
aad
or
out
dec
int
and
mov
pop
jge
xor
xchg
das
lahf
and
xchg
cmp
inc
mov
xchg
aaa
pusha
nop
sbb
test
test
icebp
sbb
jmp
sahf
cmp
push
xchg
adc
sbb
cmp
mov
or
xchg
call
xor
fs
sbb
mov
jg
cmc
loopne
sub
add
push
cli
test
jp
stc
mov
pop
leave
adc
repnz
data16
lahf
adc
cdq
adc
push
stc
mov
fmul
jbe
bound
xchg
aaa
shl
and
stc
adc
pop
xchg
push
gs
dec
sub
mov
and
and
push
push
dec
pop
and
fwait
mov
inc
or
jecxz
imul
fbld
loope
fneni(8087
lods
and
mov
or
js
shl
out
pop
dec
addr16
pop
xchg
cmp
mov
mov
std
popa
sahf
xchg
jae
or
mov
fdiv
stos
mov
repz
cmps
jg
add
(bad)
pop
mov
adc
in
or
inc
ins
out
imul
and
retf
jns
outs
fisub
jno
xchg
pop
mov
pop
or
lods
or
scas
scas
jmp
push
mov
inc
je
xchg
push
lds
jg
xchg
fnstsw
mov
jmp
int
inc
lahf
(bad)
dec
ins
xchg
dec
jo
jo
dec
aad
(bad)
push
push
or
clc
test
pop
sbb
mov
in
pop
cwde
push
(bad)
mov
xlat
and
stos
into
pop
pop
mov
cmps
or
xor
sub
cmps
test
test
adc
addr16
and
clc
test
inc
adc
ja
(bad)
in
mov
jo
pop
hlt
stc
retf
sbb
pop
stc
xchg
cmp
and
xchg
popf
or
mov
add
jmp
dec
inc
push
push
pop
and
mov
aas
and
inc
add
sbb
push
addr16
js
cmp
push
daa
mov
loope
pop
jno
movs
ds
dec
sub
and
jg
xchg
push
sbb
jg
mov
push
xchg
mov
test
and
push
das
add
pusha
xor
fwait
jge
jno
cmps
jle
div
ja
cmps
fwait
xor
int3
mov
loope
in
rol
nop
mov
ds
xchg
dec
mov
mov
dec
push
icebp
rol
mov
das
sbb
sub
outs
pop
ret
ja
sar
movs
push
pop
inc
push
pop
cmps
neg
xor
mov
mov
pop
ret
fs
and
adc
cmp
jl
sahf
rol
imul
jmp
lods
dec
into
call
(bad)
outs
push
rcl
pop
jmp
push
sbb
inc
das
ror
in
fst
adc
inc
mov
ins
clc
mov
pop
nop
sbb
dec
mov
dec
xlat
xchg
dec
retf
lahf
cli
add
xchg
mov
xor
shl
xchg
ret
bound
xchg
fisubr
mov
push
xor
daa
movs
adc
fsub
stos
fistp
test
inc
sub
cdq
ins
mov
add
xchg
dec
add
or
xchg
add
ror
cwde
shl
ins
pop
pop
cs
pop
loopne
cwde
xchg
add
sahf
(bad)
mov
in
jo
jecxz
in
xchg
mov
mov
cli
clc
xchg
jns
not
scas
xor
int
mov
adc
sbb
add
int
add
push
sbb
outs
add
xchg
xor
fmul
movs
test
and
out
rcr
xchg
aaa
shr
mov
sub
ss
mov
js
or
enter
ins
jl
add
fs
bound
int3
inc
xchg
neg
and
mov
sbb
std
call
and
aam
xchg
sbb
je
movs
icebp
pop
nop
es
into
dec
shr
jne
(bad)
xlat
pop
jns
leave
or
(bad)
sbb
push
std
push
mov
xor
dec
add
jg
les
stc
push
mov
clc
xchg
mov
or
daa
leave
cwde
test
xchg
xchg
xchg
ja
movs
ins
test
mov
mov
ret
scas
fnstsw
sbb
test
es
data16
cmp
cmps
adc
pusha
sbb
push
neg
test
pop
push
out
xchg
and
scas
mov
xchg
repnz
pop
sub
sub
jmp
data16
mov
sub
loope
mov
push
sar
jmp
lods
ret
jno
in
lahf
xchg
cmp
ins
dec
xor
xchg
push
dec
and
sub
or
pushf
hlt
jge
ja
leave
fisub
cli
adc
es
js
sub
mov
movs
fsubr
lods
pop
sbb
pop
repz
cld
pop
pusha
push
gs
sbb
sbb
mov
clc
xchg
and
sbb
pushf
jp
and
leave
movs
ror
(bad)
mov
pop
(bad)
daa
mov
cld
push
lods
and
shr
mov
das
mov
or
nop
(bad)
pusha
leave
inc
push
outs
ret
jno
arpl
cs
ds
dec
pop
jp
mov
adc
stc
dec
xchg
and
es
jl
fcmovb
punpcklbw
xor
movs
mov
nop
aam
out
mov
sbb
dec
push
stos
fs
ror
xchg
in
call
addr16
xchg
mov
add
add
push
in
xchg
lods
dec
int3
pop
adc
add
enter
bound
leave
test
data16
adc
push
push
mov
push
jle
xor
push
inc
in
adc
push
dec
jb
xor
sbb
call
pushf
fcmovnu
pop
push
adc
sub
(bad)
in
test
and
mov
cmc
sbb
jnp
cmp
in
outs
push
fdiv
bound
int3
into
cmp
mov
adc
push
mov
enter
sar
imul
cmp
mov
mov
dec
(bad)
and
or
pop
xor
sbb
push
sbb
fsub
enter
jl
sbb
jg
dec
sbb
adc
mov
cmp
nop
jns
sbb
mov
jmp
dec
dec
dec
dec
mov
cmp
stos
jecxz
mov
mov
ss
enter
cmp
dec
sub
push
mov
sub
xchg
sbb
push
stc
sbb
scas
mov
push
mov
adc
mov
sar
mov
jb
mov
push
cdq
imul
ret
cmp
int
inc
mov
lods
int
push
ja
xor
pushf
adc
or
repnz
lds
sbb
mov
imul
lock
stos
adc
sbb
ficomp
lea
repnz
shr
push
iret
sbb
outs
cmps
pop
dec
aas
fmul
ds
jno
in
ja
sbb
out
hlt
inc
leave
mov
jp
push
xchg
test
cli
scas
push
clc
retf
iret
and
mov
or
in
(bad)
sbb
xor
addr16
or
in
or
or
data16
fsubr
dec
movs
pop
dec
ins
scas
jmp
sbb
jbe
and
adc
out
mov
ret
jbe
jl
in
push
dec
fdiv
lea
div
(bad)
fld
movs
xor
fisub
call
inc
repnz
cmp
bound
(bad)
jecxz
pop
mov
movs
cli
test
jns
push
fs
jmp
stos
fwait
test
mov
fidivr
push
rcl
jmp
inc
cmps
cdq
test
dec
addr16
xor
jno
inc
dec
int3
mov
jl
push
retf
int3
push
dec
mov
test
inc
mov
pop
jg
scas
(bad)
cld
(bad)
inc
cmp
shr
mov
or
mov
or
loope
mov
jns
sub
xlat
fiadd
adc
lds
fs
adc
into
mov
fwait
adc
mov
sbb
push
or
shl
and
out
repnz
and
lea
push
mov
mov
je
pop
mov
push
icebp
adc
sbb
ss
ins
fidiv
hlt
imul
add
mov
shrd
in
sar
push
xchg
sbb
adc
rcl
iret
fcomip
mov
push
xchg
es
or
out
dec
shr
stos
mov
and
rol
ins
shl
retf
sbb
stos
imul
cmovp
out
cwde
(bad)
adc
pop
xor
cmp
fld
cmp
cli
pop
faddp
das
jmp
fs
inc
js
cmp
push
sbb
push
adc
fiadd
rol
pop
stos
pop
mov
sub
mov
sub
inc
lock
dec
scas
xor
and
in
in
dec
rcl
icebp
sub
jno
mov
lods
add
or
jne
dec
mov
sbb
out
bound
jmp
jmp
shr
or
lods
imul
push
pop
jns
xchg
fisttp
pop
repnz
dec
pop
repnz
out
cli
dec
(bad)
fst
das
sahf
(bad)
out
ret
mov
mov
mov
mov
xor
clc
and
mov
aad
adc
sahf
jo
mov
mov
and
sub
in
dec
(bad)
cmp
fnsave
jmp
adc
sti
xor
mov
scas
loopne
and
mov
jne
mov
test
hlt
fnstenv
repz
dec
ficom
xchg
mov
sub
cmp
inc
iret
push
or
xchg
enter
dec
xchg
inc
retf
cmp
and
nop
shr
ficom
into
mov
sub
adc
(bad)
sar
inc
jle
sub
sub
in
mov
push
adc
pop
pop
es
paddw
ficom
push
add
inc
mov
push
mov
cs
cmp
push
mov
sub
loope
movzx
add
sahf
mov
mov
idiv
mov
pushf
cmp
mov
dec
pop
xor
hlt
mov
jmp
pop
mov
xchg
dec
mov
and
mov
inc
in
or
dec
rcr
int
add
or
jno
mov
sub
retf
jp
not
cmp
fidiv
inc
ins
adc
push
test
in
inc
popa
sbb
xchg
movs
movs
aad
sbb
push
push
ss
das
push
adc
fs
cld
shr
outs
mov
sub
(bad)
mov
dec
in
add
test
movs
icebp
outs
cmps
in
int
cmc
popf
pop
mov
lea
int3
cmc
or
dec
imul
cld
xchg
mov
mov
inc
inc
pop
mov
sub
sub
das
in
addr16
pop
imul
test
call
dec
inc
std
repnz
push
dec
push
inc
shl
xchg
and
mov
ficom
shl
lea
inc
dec
dec
cli
push
jmp
test
pop
scas
fsubr
cmps
clc
aaa
loop
sub
fild
xchg
int3
inc
cmp
dec
push
pusha
sbb
mov
jmp
xor
and
lock
push
jbe
retf
mov
imul
je
sub
sub
and
mov
aas
gs
cmp
push
fidivr
inc
xor
int3
fadd
mov
sbb
pop
stos
adc
(bad)
stc
push
sar
scas
(bad)
jg
add
and
jmp
push
and
sub
int3
jae
arpl
pop
add
call
lods
push
dec
dec
pop
jg
dec
movs
cld
fsubp
in
in
jbe
call
push
add
jge
(bad)
push
and
mov
je
jbe
cmp
outs
jmp
call
mov
add
push
mov
in
loopne
push
xchg
outs
cmp
retf
xor
jnp
pushf
and
jns
pop
xchg
mov
pop
pop
pop
mov
mov
repnz
div
inc
cmps
jne
mov
push
js
lahf
fmul
ret
imul
retf
mov
rcr
mov
or
retf
lods
sar
xor
loopne
jp
xor
dec
aas
jl
ficomp
mov
cmp
das
push
adc
ja
mov
dec
lds
daa
push
mov
imul
add
(bad)
inc
dec
fiadd
shl
enter
add
std
shl
retf
ds
add
inc
mov
push
(bad)
cld
test
cmp
mov
loop
dec
ret
aad
lahf
xor
inc
or
or
mov
fwait
addr16
fs
std
adc
xchg
popa
adc
retf
jl
mov
(bad)
sub
ja
mov
out
aam
call
nop
cmps
inc
cli
cmp
jl
(bad)
out
cmp
hlt
sbb
xor
adc
es
sub
imul
inc
(bad)
test
cwde
and
and
outs
xor
scas
cmps
xlat
ret
ds
pop
jp
mov
cdq
adc
nop
into
xlat
(bad)
pop
mov
xor
leave
cmp
sub
and
mov
inc
dec
icebp
pusha
mov
or
hlt
cwde
adc
int
push
mov
cmp
rcl
jmp
jp
and
dec
inc
stos
push
push
test
adc
pop
inc
xor
sub
(bad)
ins
inc
mov
std
jo
add
pusha
adc
mov
jg
mov
mov
sbb
jge
mov
int
sub
dec
pop
xchg
mov
leave
adc
push
mov
int
push
jne
pop
mov
or
movs
into
xchg
xchg
mov
retf
sti
rcl
outs
dec
pop
mov
xchg
jle
jne
cdq
and
aaa
dec
mov
sbb
xchg
ret
scas
enter
mov
jae
ja
cmp
icebp
stos
adc
iret
loope
je
sbb
sbb
into
loope
mov
lods
test
aad
test
cwde
daa
call
add
sub
mov
not
mov
cdq
stos
popa
push
int
xchg
and
fsub
jb
out
cmps
test
movs
xor
cmc
popf
cmps
rcl
mov
jae
and
repz
bound
xlat
pusha
adc
xlat
daa
ss
sub
xchg
mov
sbb
cs
and
and
cmp
bound
add
xchg
xchg
stc
pop
pop
push
cmp
inc
stos
xchg
push
mov
xor
push
mov
push
test
scas
adc
mov
movs
int3
sar
and
int
lahf
xchg
add
or
cmps
test
pop
xor
retf
xchg
xor
aad
call
xchg
jp
jbe
rol
daa
stos
mov
ficom
ret
(bad)
fiadd
or
push
adc
xchg
fstp
(bad)
dec
add
in
retf
iret
out
push
nop
push
(bad)
(bad)
pop
outs
shl
adc
ficomp
add
test
fs
out
fcomp
retf
cmp
movs
and
jge
out
cs
imul
jne
sti
push
cmps
in
push
nop
sbb
outs
dec
mov
lahf
push
cli
pop
pop
push
lock
popa
lock
clc
push
adc
add
daa
push
outs
in
push
cmp
pop
sbb
les
jmp
mov
or
iret
js
and
not
xchg
mov
mov
inc
and
loop
jge
pop
(bad)
jmp
scas
test
js
dec
mov
inc
and
lods
cmps
repnz
and
cmp
ret
cmp
xchg
push
in
pop
mov
push
mov
mov
cli
pop
adc
mov
pop
and
adc
cmps
sar
xor
inc
mov
sub
movs
jecxz
xor
call
shr
mov
lahf
jno
out
mov
imul
pop
inc
das
mov
xor
jne
ror
cmps
mov
test
push
neg
gs
fcmovne
sbb
jmp
adc
fimul
shl
(bad)
ror
cmc
mov
test
les
mov
xor
jge
push
(bad)
push
bound
push
push
cmp
and
jecxz
push
adc
sahf
cli
push
daa
es
repz
rcl
callw
cmp
jb
inc
imul
xchg
stc
push
cmc
pop
lock
and
sub
cwde
sti
ss
loopne
shl
outs
int
aas
xchg
adc
lods
mov
pop
and
mov
push
or
sub
cld
mov
(bad)
or
dec
push
seta
cdq
hlt
dec
cld
(bad)
jbe
sbb
bound
sti
xor
stos
movs
push
jo
mov
ins
add
scas
pop
mov
fstp
push
fwait
xchg
rcl
xchg
cmp
retf
mov
inc
(bad)
mov
imul
or
add
xchg
outs
test
xchg
push
push
sub
xchg
rcr
push
popf
fild
out
pshufw
push
lea
add
into
out
or
imul
test
leave
push
xor
push
cmp
xchg
ins
sbb
push
popf
jecxz
dec
mov
cmp
dec
and
clc
sub
sar
hlt
loopne
sbb
mov
or
mov
dec
out
lods
mov
mov
imul
sub
rcl
or
mul
lods
in
aad
and
(bad)
test
mov
sbb
test
popf
dec
out
sbb
xchg
pushf
dec
jecxz
or
xchg
aaa
and
sbb
jle
dec
(bad)
rol
pop
sbb
clc
pop
test
cld
pop
shr
lahf
test
mov
popa
jl
and
mul
inc
and
add
mov
adc
hlt
push
xor
stos
rol
push
jo
(bad)
and
fndisi(8087
lock
or
loopne
cmps
mov
adc
mov
fimul
das
loop
mov
adc
dec
mov
pop
(bad)
hlt
je
retf
inc
shl
xchg
test
mov
sub
jg
xchg
mov
dec
xor
ins
loope
or
push
or
clc
dec
pop
push
imul
scas
sbb
imul
xor
push
xchg
(bad)
inc
imul
sub
outs
mov
retf
dec
push
pop
inc
pop
sub
add
jo
xchg
add
or
mov
cmp
loop
addr16
inc
mov
pop
cdq
das
lea
sub
mov
ret
cmps
dec
out
pop
scas
add
int3
repnz
adc
mov
arpl
jle
mov
test
stc
pop
rcl
sub
push
das
in
fnstenv
mov
mov
inc
mov
inc
retf
mov
enter
sub
mov
cmp
je
sbb
mov
hlt
cmp
or
mov
retf
test
aam
in
dec
int3
dec
aad
mov
or
and
and
repnz
or
dec
jecxz
pop
arpl
cmps
test
and
scas
mov
mov
sub
sahf
inc
rcl
(bad)
jl
mov
pop
push
pop
je
ins
lea
clc
cmp
out
imul
mov
out
jl
rcr
inc
test
mov
(bad)
repz
mov
sbb
ret
pushf
jge
adc
imul
jb
dec
cs
add
mov
jno
add
jbe
mov
jp
push
in
cmp
cmps
cmp
lods
mov
into
jae
pop
mov
mov
lods
add
adc
jle
push
xlat
xchg
inc
imul
arpl
lods
jecxz
push
jno
xor
jg
mov
xor
pop
dec
cmp
fwait
adc
or
jnp
inc
or
push
ds
out
out
mov
fs
loop
add
pop
sub
mov
jnp
sar
pop
push
fisttp
or
cmp
aaa
adc
push
rcl
icebp
mov
mov
mov
push
shr
sub
pushf
movs
test
pop
jnp
test
out
dec
test
shl
pushf
cwde
mov
clc
or
mov
out
imul
sti
xchg
inc
ins
movs
push
sbb
int
mov
sbb
pop
push
(bad)
pop
push
call
psadbw
loope
inc
jmp
daa
xchg
outs
(bad)
(bad)
xor
gs
lds
push
push
aad
dec
movs
repz
mov
pop
jb
loope
sub
xor
dec
shr
add
loopne
repnz
ins
xchg
dec
(bad)
aas
sbb
das
fsubr
test
add
xchg
lds
lds
inc
shl
or
div
xor
div
ret
mov
ds
adc
adc
mov
xor
and
dec
shl
and
push
inc
push
adc
shl
mov
and
pop
pop
test
frstor
jo
sbb
sbb
aaa
and
cmp
int
popa
cld
inc
mov
movs
icebp
movs
imul
cmps
retf
fsubr
es
not
mov
inc
and
push
cmc
popa
push
mov
sub
sbb
or
sub
cmp
(bad)
inc
push
inc
dec
test
std
or
jae
push
stc
adc
sbb
in
cmp
movs
push
mov
pusha
loopne
inc
retf
stos
fild
push
js
dec
add
cmp
mov
mov
inc
adc
idiv
outs
add
sahf
and
stc
ret
ret
les
imul
ror
pusha
sahf
dec
dec
mov
leave
aam
sub
add
addr16
push
pop
jp
lds
loop
sub
xor
xchg
cmp
test
ins
pop
(bad)
(bad)
pop
(bad)
cmp
xor
outs
push
cmp
cmp
cwde
stc
pop
aad
adc
ret
jmp
push
push
lods
or
dec
ud0
cmp
sbb
mov
cmp
cwde
fistp
push
(bad)
add
xlat
xlat
inc
sub
mov
fidiv
sub
in
gs
cdq
sbb
sbb
mov
push
ret
hlt
jle
dec
jne
stos
out
xchg
xor
add
xchg
gs
push
scas
adc
lahf
ss
jp
femms
addr16
adc
fistp
pop
fwait
or
xchg
push
mov
add
mov
test
mov
cmc
fs
sbb
inc
lods
imul
jp
jbe
jo
push
pop
ja
es
sbb
cwde
sub
inc
and
fistp
pop
add
mov
sbb
popa
cwde
mov
js
xor
pop
and
mov
retf
pop
aam
int
jnp
sub
ins
push
jns
scas
push
mov
dec
fild
idiv
dec
inc
stos
sbb
dec
shl
mov
mov
loope
(bad)
mov
sbb
mov
aad
int3
retf
mov
pop
add
or
add
mov
in
xchg
jmp
sbb
lock
cmp
(bad)
push
in
push
push
inc
ret
lahf
jnp
and
mov
cmp
xchg
add
jnp
jne
jl
ins
or
addr16
(bad)
hlt
outs
daa
imul
push
rcl
push
ins
push
hlt
pop
xchg
fucomip
mov
cmps
fild
in
repnz
mov
scas
inc
ss
outs
cmp
or
push
and
inc
cmp
sar
ret
jle
addr16
and
or
xchg
lock
and
ds
out
(bad)
fnstenv
scas
and
lds
mov
enter
ret
jnp
and
inc
and
fidiv
test
push
xor
or
daa
test
mov
lods
adc
cs
movs
in
inc
ds
ss
aad
call
adc
jae
ja
push
or
call
bound
fwait
xor
aam
lea
out
jge
ins
fisubr
dec
adc
fistp
jno
mov
xchg
js
cmp
jecxz
mov
imul
jns
jmp
sbb
push
mov
fsubr
push
mov
or
int
leave
call
mov
push
dec
mov
scas
and
xchg
adc
mov
sbb
mov
mov
test
fnstsw
pop
movs
adc
fisttp
adc
mov
lods
adc
ins
pop
ss
shr
xchg
sbb
clc
sbb
mov
push
in
stos
icebp
sub
sub
jle
dec
or
retf
cmp
cli
icebp
mov
cld
adc
pop
sub
les
and
xor
add
mov
scas
and
mov
call
fsubr
dec
xor
and
cmp
jmp
neg
push
popa
cmp
daa
bound
arpl
fisub
cmp
leave
popf
shl
aam
sub
movd
sub
jg
push
cwde
test
sbb
inc
adc
cmp
mov
movs
adc
xchg
call
ficomp
fdiv
jp
xchg
lds
ror
xchg
mov
xchg
test
mov
fimul
pusha
inc
fsub
mov
mov
pop
fwait
mov
sbb
dec
sbb
jns
xor
inc
out
cld
movs
stos
jl
repz
dec
pop
push
sti
sub
push
push
cmps
rcl
inc
jmp
mov
inc
adc
dec
int
lock
aam
mov
imul
inc
mov
repnz
fwait
push
dec
jnp
jae
fwait
mov
retf
es
xor
jno
rol
xor
ffree
pop
stc
ds
mov
jnp
pushf
adc
loop
sahf
mov
xor
add
sub
mov
xor
popa
(bad)
or
jp
out
popf
jnp
xchg
ins
push
sbb
xchg
xor
jo
pop
push
lahf
inc
mov
adc
jp
xchg
jl
jmp
pop
pusha
push
in
test
mov
test
sbb
jno
cmp
add
mov
repnz
cmp
mov
je
push
sbb
(bad)
div
and
in
jns
mov
in
jmp
xor
mov
(bad)
cld
pop
mov
and
call
push
sbb
sbb
cmp
je
ds
dec
sahf
jp
imul
fwait
and
mov
mov
lea
cli
arpl
call
out
pop
push
cmps
xor
inc
dec
mov
xor
mov
jns
mov
xor
cmp
rol
xchg
jp
repnz
(bad)
xlat
sbb
clc
mov
ds
push
(bad)
jae
out
(bad)
add
fwait
int
pop
push
pop
xchg
pop
aaa
mov
jecxz
popa
mov
pop
mov
sbb
mov
push
clc
push
movs
imul
jge
cwde
scas
jno
sar
das
jmp
cwde
test
adc
adc
dec
leave
mov
aaa
mov
adc
test
sar
(bad)
jmp
push
cmp
stos
mov
push
imul
mov
mov
xchg
fiadd
scas
sub
jge
sbb
mov
daa
ret
rcr
xor
push
xor
in
sub
unpcklps
add
cmc
cmp
test
add
cmp
push
fwait
aam
xor
out
xor
out
or
je
jg
add
aad
sub
nop
lds
or
jnp
sbb
xor
or
inc
fild
iret
fst
cmp
(bad)
mov
sahf
aam
or
mov
inc
loope
repz
outs
sbb
xor
(bad)
popa
imul
sub
xor
xchg
pop
add
popaw
jge
mov
nop
setbe
in
sbb
(bad)
out
fistp
clc
stc
rcl
mov
lods
mov
shl
rcr
or
les
ins
dec
mov
adc
xor
daa
pop
adc
std
cmp
rol
inc
push
fwait
(bad)
cli
cmp
imul
mov
out
jbe
cli
jp
ret
xlat
and
and
push
push
daa
pop
clc
sbb
call
sbb
fcom
xlat
cmp
into
dec
addr16
cld
dec
scas
ds
push
cmp
and
data16
pop
jle
cld
or
lods
cmp
movs
jge
(bad)
fimul
retf
cmc
repnz
rcl
punpcklwd
lahf
(bad)
(bad)
in
ror
rcr
ins
inc
jmp
xchg
mov
jne
xchg
pop
sub
sbb
in
pop
adc
jecxz
sub
cmp
jp
xlat
mov
mov
push
and
dec
retf
call
pop
scas
inc
(bad)
in
or
sub
cli
or
mov
xor
cmp
rol
test
leave
push
sti
lea
cld
and
mov
push
pop
hlt
ja
mov
out
cmp
jge
in
mov
mov
stos
(bad)
sbb
data16
leave
jb
leave
mov
mov
mov
out
pop
jp
ss
out
(bad)
jmp
inc
adc
xchg
dec
dec
or
hlt
fwait
mov
pop
adc
push
(bad)
mov
repnz
div
push
das
fs
call
test
mov
xlat
sub
push
cmps
mov
rcr
ds
dec
ret
fwait
pop
dec
jp
ja
mov
out
test
ins
mov
movs
jb
fcom
pusha
rcr
into
mov
ret
fnstenv
je
test
retf
stos
xor
les
sar
jmp
cmp
mov
mov
gs
fstp
xlat
test
fisub
push
data16
clc
mov
imul
fild
mov
(bad)
sbb
inc
stos
cdq
test
sbb
je
out
pop
sbb
xor
xor
das
repz
sub
xor
xor
les
cmps
push
ror
jae
loop
popa
sbb
push
add
cmps
aam
scas
xlat
sti
jl
jae
jne
nop
ins
bound
fwait
mov
pushf
inc
int
and
push
and
mov
ffreep
test
dec
call
jge
repz
shl
jmp
pop
fbld
cmp
in
push
mov
cdq
xor
xchg
js
lds
dec
dec
iret
icebp
es
imul
jge
hlt
sti
cmp
or
les
imul
test
sub
xchg
shl
inc
daa
xor
fistp
mov
out
mov
jae
mov
retf
dec
hlt
cdq
fwait
outs
movs
add
mov
popf
xor
and
mov
test
fisubr
stc
xor
test
mov
push
mov
popf
sahf
hlt
push
inc
cmp
imul
xchg
and
sbb
into
pop
xchg
mov
fstp
aas
enter
mov
stos
(bad)
cmp
inc
cmp
push
sub
js
pop
int
fadd
neg
inc
sbb
pop
xchg
sbb
cli
mov
scas
pusha
aad
pop
test
out
adc
sbb
out
mov
sbb
shr
test
pop
inc
xchg
fistp
push
repnz
or
jl
pop
cmps
inc
xchg
sahf
test
repnz
int
add
pop
scas
aam
pop
stos
mov
pop
mov
pop
pop
(bad)
mov
pop
mov
in
adc
lods
mov
iret
mov
pop
adc
(bad)
les
inc
xchg
push
pusha
pop
mov
mov
test
test
imul
push
es
adc
mov
push
arpl
in
push
data16
pop
sub
leave
xor
push
push
jecxz
cmc
ror
mov
mov
cmp
shl
adc
jne
in
push
add
pushf
stos
mov
mov
je
leave
push
add
inc
fdivr
push
sub
xchg
mov
push
lods
pop
mov
cmp
es
add
pop
mov
out
movs
jmp
cmc
mov
sub
xchg
fld
arpl
and
int
test
int
pop
in
stc
stos
loop
out
mov
arpl
leave
in
fcomp
ret
adc
mov
out
push
cmp
jb
mov
movs
enter
xchg
out
xchg
mov
enter
xlat
sbb
mov
pop
jo
mov
dec
rcr
cmp
cmp
shr
push
mov
inc
adc
jmp
das
(bad)
sti
pop
sub
retf
(bad)
mov
mov
cmps
mov
ss
xchg
inc
or
je
lahf
mov
clc
inc
arpl
inc
mov
fcomip
(bad)
mov
int3
sub
push
imul
adc
repnz
dec
dec
(bad)
mov
aad
sub
gs
ret
add
and
js
dec
add
xchg
mov
retf
imul
push
clc
xchg
push
cmp
jmp
jl
out
inc
cmp
test
mov
jno
push
push
pop
dec
add
and
dec
mov
outs
repz
add
and
popf
imul
sar
mov
or
test
mov
rcr
cwde
or
push
jns
jb
ret
inc
sub
ret
or
jle
add
pop
push
iret
shl
push
xchg
adc
mov
add
and
clc
push
mov
cli
in
xchg
(bad)
shl
jmp
enter
fnstcw
popf
xor
mov
jmp
fild
pop
pop
mov
mov
inc
inc
pop
push
test
push
les
add
loope
(bad)
stc
push
sbb
sbb
ret
mov
xor
dec
cmp
mov
dec
mov
xchg
repnz
mov
arpl
or
sbb
sbb
jmp
ficom
inc
daa
int
(bad)
jge
jns
lahf
push
stos
push
sahf
xchg
mov
movs
mov
cmp
(bad)
push
xchg
in
mov
int3
out
jmp
das
push
mov
mov
lahf
sbb
cs
shl
pop
cmp
jecxz
sahf
cmps
jmp
push
daa
loope
push
push
mov
inc
das
cmp
push
mov
jae
mov
ds
das
paddb
jnp
ret
iret
adc
mov
popf
dec
xchg
and
push
jmp
inc
lds
or
jno
or
lods
pop
mov
push
mov
lea
jno
jb
aas
arpl
add
adc
test
pop
jmp
clc
loop
neg
cmps
pop
jns
mov
xchg
not
pop
lods
movs
jp
ret
mov
mov
nop
scas
mov
adc
inc
rcl
fcmovnbe
sub
push
iret
movs
add
pop
cwde
mov
dec
add
or
cs
adc
jnp
cmps
or
popa
or
dec
push
iret
cmp
mov
test
jle
enter
jno
sbb
ins
stos
loopne
sbb
loope
shr
stc
std
fxch
int3
sub
fwait
dec
pop
popa
add
mov
add
mov
icebp
add
mov
sbb
test
cmps
inc
mov
inc
mov
adc
leave
iret
mov
pop
(bad)
retf
and
cwde
lea
js
adc
mov
or
and
sbb
xchg
in
int3
pushf
xchg
jge
rcl
cs
push
xor
mov
fmul
jecxz
push
xchg
add
bound
cmc
jecxz
jns
pop
lods
jne
push
popa
mov
outs
rcr
adc
xor
cmp
cwde
sub
scas
mov
sahf
sahf
sub
cmc
xchg
repnz
sahf
pop
iret
jbe
xor
mov
mov
cdq
dec
loope
sahf
and
fidiv
dec
out
es
dec
pop
and
cmp
(bad)
pop
add
push
aam
push
xchg
imul
addr16
pop
xchg
or
jmp
mul
das
enter
sub
bound
adc
clc
shr
push
or
ret
fimul
fwait
sbb
xchg
xchg
stos
jnp
aas
pop
(bad)
fs
or
(bad)
sar
int
push
sbb
xchg
out
mov
sub
popf
xor
(bad)
mov
sbb
adc
in
xchg
aad
std
mov
sbb
mov
cld
mov
sub
inc
ins
lds
push
cmp
adc
or
mov
fstp
mov
mov
fimul
jmp
div
out
ret
mov
(bad)
or
call
mov
test
sub
scas
mov
pop
daa
inc
adc
adc
shl
daa
sub
into
fcom
int3
xchg
jmp
jg
lds
(bad)
addr16
stos
jecxz
push
fsubr
and
xchg
ds
sub
cmc
fsub
push
dec
ret
dec
test
xor
mov
jl
or
mov
mov
sbb
or
into
mov
mov
mov
push
aad
lds
or
jp
in
out
inc
pop
jmp
pop
xchg
retf
push
pop
cmp
cmp
adc
lea
ins
and
fsubr
xlat
jl
cmp
(bad)
xor
inc
ret
nop
cdq
sbb
mov
xchg
je
ror
adc
sub
sub
into
dec
retw
aas
retf
retf
xor
es
gs
aam
cmp
xchg
sbb
or
fsub
jmp
cmp
add
dec
pop
rep
data16
adc
iret
fistp
rol
or
jle
jbe
iret
fnstsw
ret
mov
(bad)
jl
es
jbe
mov
cmps
outs
dec
mov
cmp
inc
and
cmp
ror
adc
xor
arpl
push
cmp
mov
icebp
mov
push
jno
inc
pop
cld
or
cmps
and
jmp
dec
sti
sbb
xchg
bsf
or
(bad)
inc
mov
repnz
(bad)
call
imul
dec
pop
mov
lods
js
jge
cmp
or
sub
mov
pop
cli
sub
rcl
xchg
outs
or
dec
call
push
cdq
cmp
neg
and
mov
loop
out
leave
xchg
cmp
mov
and
xchg
sub
or
xchg
push
cmc
fs
pusha
adc
jmp
popa
outs
cmp
sub
xor
aad
mov
imul
pop
xor
sahf
fist
pusha
(bad)
mov
adc
shr
jmp
adc
mov
mov
sbb
push
cmc
clc
sub
test
push
sbb
call
and
push
pop
repnz
add
lods
test
jge
movs
sub
adc
mov
inc
xchg
int3
inc
add
retf
and
icebp
test
pop
fst
mov
mov
dec
fimul
in
pushf
pop
popa
xchg
xor
mov
(bad)
sbb
ss
inc
mov
aaa
lock
and
adc
mov
mov
pusha
xchg
mov
fld
stos
stos
(bad)
clc
push
sbb
inc
and
xor
mov
outs
in
int
jno
jl
or
jne
not
out
cmc
mov
retf
jl
scas
xor
fcomp
adc
mov
cmp
mov
mov
fs
rol
jno
imul
in
mov
lds
add
ds
xor
aaa
fdivr
(bad)
aaa
mov
cdq
cs
push
xchg
and
cmps
push
into
xchg
mov
clc
or
fbstp
mov
aaa
mov
mov
shl
mov
aam
sub
jbe
pmulhuw
dec
xchg
icebp
out
in
shl
sub
ins
cmps
mov
pop
pop
out
push
and
or
inc
mov
dec
mov
sbb
xor
adc
nop
dec
aaa
nop
aad
push
mov
lock
push
icebp
pop
test
fld
icebp
retf
mov
in
cmp
sub
or
jmp
push
pop
call
push
xlat
mov
out
loopne
das
les
add
nop
fld
sar
stos
push
popf
xchg
movs
pop
movs
cmp
shl
jl
adc
repnz
scas
or
rcr
(bad)
scas
and
inc
adc
mov
popa
idiv
(bad)
int
xor
fcomp
ror
inc
pop
mov
jns
fdivr
sti
ret
adc
je
mov
std
out
cmps
jecxz
cmp
stc
pop
mov
cli
stos
cmp
mov
adc
pop
lahf
adc
(bad)
and
movs
sahf
xor
cmps
outs
push
pop
ja
and
mov
xor
sub
mov
mov
aas
(bad)
cmps
xlat
(bad)
daa
js
jns
shr
xchg
lods
dec
sahf
daa
dec
cmps
push
sti
push
ins
dec
into
aaa
sbb
xor
(bad)
mov
xchg
int3
scas
imul
and
lahf
and
add
and
jnp
cmp
xchg
sub
mov
jmp
or
mov
push
idiv
and
rcr
push
cmp
pop
enter
jo
xor
jg
fcmovne
adc
xchg
fdivr
xchg
inc
stos
adc
jmp
and
aad
mov
inc
scas
icebp
lods
(bad)
adc
test
mov
xchg
dec
push
clc
dec
and
(bad)
inc
movs
shl
je
jbe
xchg
xor
jns
(bad)
jl
jg
adc
leave
cmp
fldcw
and
cmp
jns
mov
xchg
push
imul
jo
(bad)
sbb
inc
movs
dec
ja
push
aad
mov
mov
inc
cmp
mov
pushf
in
arpl
jb
in
pop
cli
in
xchg
mov
in
(bad)
jae
ror
cmp
vpaddusb
and
daa
xchg
imul
xchg
enter
popf
pop
ret
xchg
and
sbb
push
xchg
cli
dec
sub
jae
call
aam
adc
nop
fs
and
dec
dec
xchg
push
adc
repnz
push
loop
outs
xor
push
fnsave
dec
jo
or
adc
lds
xchg
xchg
jo
sbb
push
mov
imul
push
jae
outs
mov
mov
xchg
push
aaa
addr16
movs
jg
add
sub
jp
stos
scas
xchg
push
sbb
sbb
imul
cli
and
jae
push
repz
jp
xor
push
push
and
or
retf
in
mov
ins
(bad)
repz
pop
test
mov
pop
data16
js
xor
out
(bad)
pop
mov
push
out
mov
movs
out
ins
inc
cs
mov
xchg
cs
jns
xor
pop
cmp
out
push
cwde
add
out
jmp
inc
ins
jb
mov
fs
mov
cmp
ss
int
je
inc
dec
inc
inc
jo
jo
push
aas
loope
dec
pop
inc
dec
test
jmp
mov
(bad)
sub
sub
jnp
or
jmp
scas
sbb
pop
cmp
bnd
and
inc
add
and
jg
push
mov
dec
out
inc
(bad)
fsubr
lea
scas
cmp
pop
dec
shl
popf
mov
xchg
ss
in
sub
pushf
inc
mov
call
fbstp
or
jae
or
sbb
(bad)
stos
cmp
std
mov
movs
jno
std
test
(bad)
xchg
inc
xor
dec
pop
jmp
repz
sub
adc
fcmovb
leave
cmp
or
rol
cld
mov
jno
imul
pop
call
sub
add
add
movs
gs
mov
sbb
shr
jnp
pop
pop
das
lock
test
inc
icebp
fidivr
fdivr
fcmove
add
mov
inc
pushf
lea
dec
mov
push
cmp
sar
pushf
pop
jne
in
movs
out
jns
fimul
dec
dec
out
fisttp
pop
mov
jnp
pop
shl
pop
cmc
cdq
es
sub
repnz
and
iret
sti
xor
movs
cmp
jbe
test
xchg
gs
jmp
lea
ret
push
mov
fist
ds
leave
cdq
mov
mov
xor
daa
cmp
(bad)
mov
mov
jl
or
push
rcl
push
addr16
jne
sub
(bad)
sbb
scas
push
xor
push
xor
bound
xor
lock
movs
sub
(bad)
stc
push
neg
(bad)
mov
inc
repnz
dec
push
inc
jno
data16
enter
jle
jmp
idiv
xchg
je
cs
and
add
scas
ja
adc
sbb
cmp
bound
sahf
test
sahf
sti
(bad)
or
out
xor
xchg
or
jge
push
jbe
inc
pop
ins
jl
fisubr
sbb
sar
adc
aam
adc
daa
icebp
mov
rcr
xchg
daa
mov
mov
or
mov
movs
cmp
mov
in
es
leave
inc
scas
int3
aam
pop
int
adc
sbb
cmp
ret
xor
jecxz
fs
int3
in
shl
and
xchg
lahf
repz
das
popf
ds
mov
mov
sub
jle
fwait
shl
jb
push
mov
imul
popa
and
jle
xor
jmp
rcr
mov
xor
xor
test
outs
pop
pop
mov
add
(bad)
jg
cli
aam
test
jb
lea
les
cmovo
sbb
jae
inc
jg
mov
cmp
xchg
outs
pop
out
lods
or
adc
fcom
adc
cdq
call
mov
dec
mov
jl
mov
ror
(bad)
lock
stos
(bad)
repz
xchg
repz
inc
or
xchg
sti
mov
jmp
bound
jg
cs
mov
clc
out
cmp
test
push
nop
(bad)
dec
jp
xchg
mov
es
adc
movs
out
push
dec
iret
or
fsubr
mov
jo
data16
retf
test
movs
pushf
aaa
sti
jae
sbb
and
cmp
pop
or
es
and
repz
push
sub
jo
(bad)
out
ret
je
adc
neg
data16
idiv
lods
inc
cmp
push
mov
call
jge
loopne
or
jnp
retf
and
adc
in
xchg
jbe
stc
sysret
and
sub
sub
jecxz
out
push
pop
or
push
out
and
push
mov
xor
push
xchg
adc
mov
hlt
jmp
fnstenv
xchg
push
inc
adc
add
aam
out
jb
xchg
iret
inc
cmps
sbb
mov
sub
or
add
xor
jl
mov
sbb
sub
in
pop
mov
ds
call
mov
aaa
jno
cmp
sbb
mov
cmc
add
jne
adc
xor
mov
inc
into
mov
add
push
lods
out
push
inc
cmp
sbb
adc
mov
add
xchg
out
sub
xchg
adc
cs
pop
and
fild
push
ret
call
dec
jo
jecxz
hlt
fcom
(bad)
ja
xchg
aam
iret
jns
fwait
push
cmp
out
cld
jle
cmp
inc
fwait
cmp
sbb
or
mov
sub
mov
mov
sbb
sub
rcl
sbb
(bad)
or
std
jle
jecxz
(bad)
push
neg
test
ss
sub
cld
pop
lahf
lds
or
ins
lods
call
push
std
call
mov
(bad)
popf
sbb
sub
stc
dec
mov
inc
test
aad
jmp
lods
mov
adc
and
push
add
(bad)
fldcw
neg
mov
rol
sub
stos
add
add
popw
cmc
mov
mov
leave
imul
mov
(bad)
in
icebp
ins
gs
adc
repnz
jp
fst
push
daa
jne
and
dec
int
add
and
xor
push
pop
sub
adc
int
and
aaa
sub
cs
cmps
in
lea
cmps
psubsw
mov
outs
xchg
(bad)
xor
xor
mov
mov
mov
push
mov
inc
sbb
cmps
les
xchg
inc
in
xchg
jae
push
cmp
jmp
xchg
(bad)
ja
fcmovbe
cmp
mov
adc
inc
cmp
ret
xchg
or
jp
mov
mov
aaa
push
xor
lea
sub
jp
sbb
xor
cmp
jmp
sar
pop
mov
stos
push
xlat
clc
loop
cmp
sahf
adc
mov
cwde
dec
sub
(bad)
neg
sbb
jae
adc
jmp
push
jns
fisub
ds
repz
jbe
mov
in
cdq
fs
in
std
sbb
ficomp
dec
xor
icebp
add
push
push
movs
les
std
shl
int3
mov
neg
retf
imul
sbb
pop
push
outs
mov
jge
fbld
and
xor
xchg
test
dec
hlt
jnp
mov
add
jo
jecxz
arpl
xchg
retf
cli
leave
jmp
mov
aam
shl
jne
hlt
dec
loope
out
inc
imul
mov
add
retf
retf
not
aaa
dec
push
cmps
int3
sbb
inc
xchg
mov
leave
adc
imul
sub
mov
rcl
nop
add
push
cmp
mov
mov
xor
jo
pop
xchg
jl
add
pop
mov
aam
xor
dec
add
add
dec
outs
push
cmp
or
xchg
pop
dec
xor
daa
inc
int
mov
jecxz
jp
jl
dec
mov
pop
mov
in
pop
shl
mov
sub
fmul
iret
or
scas
add
jge
inc
pop
xor
mov
xor
adc
aad
stos
bound
push
out
pushf
jne
mov
adc
inc
sti
fwait
mov
jp
fwait
and
lods
push
fbld
idiv
ror
and
jge
into
jge
lahf
mov
xor
lds
nop
xchg
inc
mov
pop
pop
ds
daa
popa
cmp
dec
xchg
adc
pusha
aam
inc
pop
jmp
sub
loop
(bad)
nop
pop
out
sbb
int
int3
or
imul
jne
stc
dec
stc
pop
mov
mov
fnsave
sbb
adc
jl
mov
aad
push
jecxz
jmp
add
clc
gs
cmp
push
push
xor
push
(bad)
out
pop
xchg
lea
xor
pop
sub
fst
cmp
xor
sub
nop
fcomp
dec
jecxz
inc
or
xchg
(bad)
inc
call
mov
clc
ds
push
xchg
inc
pushf
movs
fld
or
xor
or
cmp
xor
(bad)
bound
and
shl
push
bnd
int
sub
retf
push
mov
pop
cld
jecxz
adc
(bad)
or
inc
mov
pushf
loop
mov
jno
enter
push
pop
lods
add
mov
int3
pop
xchg
pop
les
dec
enter
sbb
fsubr
int3
jg
dec
jns
fwait
mov
cmp
test
jns
adc
sub
sub
jle
cmp
(bad)
(bad)
jnp
inc
adc
movs
inc
movs
lahf
test
js
or
add
inc
adc
int3
outs
ins
xlat
jge
arpl
pop
sbb
pop
fild
in
ds
mov
mov
cmp
movs
rcl
lods
adc
pusha
adc
loope
sub
ins
mov
or
mov
mov
inc
stc
rcr
sbb
(bad)
cld
inc
repz
or
jge
inc
clc
and
and
dec
dec
rol
sbb
mov
inc
sbb
xlat
mov
dec
or
clc
cs
sar
or
shr
mov
test
data16
dec
test
push
mov
xlat
call
push
jae
lahf
call
sub
arpl
pop
xchg
rcr
sub
sbb
or
mov
xchg
ret
adc
mov
(bad)
pop
dec
ficom
retf
or
jbe
test
test
or
push
mov
pop
mov
add
daa
repz
popf
cmps
fs
adc
jbe
fwait
mov
add
and
retf
inc
adc
adc
mov
test
into
dec
sbb
ins
(bad)
sub
out
stos
rcl
adc
cmc
xlat
in
(bad)
outs
adc
fwait
pop
inc
daa
pop
sahf
lahf
xor
test
retf
bound
aas
mov
xchg
add
push
stc
xlat
jg
push
shr
push
pop
jg
mov
aad
jg
or
dec
pop
jns
dec
inc
ret
pop
idiv
pusha
mov
mov
cmp
sbb
mov
sbb
stos
popa
adc
jns
push
jmp
jne
sub
push
rcl
jl
mov
ret
out
in
and
popa
push
ins
ficomp
jae
jge
enter
inc
xchg
int
sahf
xlat
rcl
fild
test
add
pushf
push
test
jle
cmps
shr
mov
ret
and
repz
ffreep
and
stos
push
mov
xchg
jbe
cmps
sub
test
jno
inc
mov
fidivr
mov
pushf
enter
fst
xchg
pop
sbb
movs
push
aam
(bad)
mov
pusha
in
test
dec
mov
mov
xchg
adc
cdq
add
movs
inc
pop
hlt
cmp
dec
or
adc
lds
push
retf
cmp
mov
cmc
ret
aas
retf
out
fldz
(bad)
out
mov
out
mov
call
jbe
xchg
add
sub
(bad)
add
mov
mov
adc
cmps
dec
inc
inc
mov
mov
mov
add
jl
(bad)
mov
ins
pusha
mov
sbb
fwait
repnz
jmp
cld
aaa
mov
fild
adc
mov
out
push
xor
xor
add
test
lods
rcl
cmp
das
leave
std
sbb
sbb
adc
cmp
in
jl
icebp
jecxz
xor
dec
dec
clc
stos
loopne
add
add
mov
stos
xor
repnz
xchg
shl
jns
mov
gs
aad
mov
call
popf
pop
aam
mov
ins
addr16
int3
ret
xchg
popa
add
or
test
in
cmps
lods
push
dec
xchg
icebp
and
or
fs
nop
mov
call
jmp
loope
xchg
push
cmps
sub
pop
(bad)
(bad)
scas
jle
retf
scas
jmp
xor
add
add
test
cdq
fdiv
mov
pop
or
push
div
inc
sbb
bound
push
cdq
pop
div
cmp
mov
sti
and
sub
add
push
and
cs
out
push
mov
in
xor
and
mov
mov
mov
test
and
enter
xchg
ins
mov
adc
jo
leave
loopne
pop
les
sti
stos
outs
(bad)
jne
mov
push
cld
sbb
fbstp
cmp
ins
ror
test
pusha
rcr
mov
out
mov
xchg
cld
push
mov
cdq
mov
sub
scas
adc
fisttp
jmp
repnz
xchg
mov
(bad)
mov
lock
mov
push
dec
mov
pushf
aam
mov
aas
dec
imul
repnz
lahf
cli
(bad)
stos
(bad)
out
xchg
cmp
outs
pop
push
ins
jae
cli
xor
nop
fst
cdq
(bad)
ret
add
test
dec
out
sbb
icebp
mov
imul
ja
cmp
out
push
jbe
(bad)
out
dec
cmps
pop
and
pop
jge
dec
jae
inc
jmp
mov
and
fsub
cld
xor
fst
imul
and
pushf
xlat
cmp
cli
ds
and
in
popf
es
mov
adc
cmp
mov
or
popa
push
addr16
test
fmul
sub
adc
sub
stos
mov
(bad)
dec
add
loope
add
jmp
mov
aaa
adc
jge
sub
lock
bound
sbb
dec
das
out
sti
daa
fidiv
retf
mov
call
out
xor
xchg
push
fwait
stc
pop
xchg
das
cdq
push
cdq
fisubr
inc
push
xchg
pop
fnstsw
je
pop
xchg
mov
repnz
pop
out
adc
xchg
clc
fisttp
retf
fs
inc
add
(bad)
inc
ror
js
dec
inc
repnz
mov
cmp
mov
mov
or
lahf
ds
aaa
int
dec
push
jb
cmp
data16
je
ins
adc
pop
inc
jnp
push
push
and
mov
add
imul
push
mov
xchg
fld
cmps
shl
push
in
into
out
dec
stc
imul
jb
leave
int
xchg
js
sar
rcr
je
cmc
ficom
jns
sbb
ret
sbb
sub
lods
retf
mov
(bad)
xor
or
inc
mov
inc
inc
mov
add
mov
push
outs
cmps
mov
loopne
iret
mov
adc
fidivr
cmp
push
jg
and
sub
ror
xor
(bad)
in
mov
push
sbb
jb
repnz
loop
fimul
inc
xchg
fistp
push
pop
(bad)
(bad)
sub
jae
nop
fmul
lods
movs
aas
lods
std
aad
lock
push
cmp
xor
cmp
test
push
mov
mov
stos
mov
inc
(bad)
add
mov
or
stos
and
out
addr16
test
or
xchg
comiss
cdq
adc
xchg
(bad)
jno
test
lds
imul
sbb
add
shr
fld
mov
jmp
movs
jo
ds
and
loope
xchg
mov
jno
loopne
add
das
sub
dec
in
pop
push
mov
jnp
mov
lods
inc
scas
adc
xor
push
cs
cwde
retf
loope
lea
add
in
mov
outs
sbb
or
loop
ficom
in
dec
(bad)
push
push
lock
xor
and
jns
pop
inc
and
pop
or
mov
add
retf
jmp
pop
mov
jns
and
(bad)
xor
push
mov
imul
movs
jns
fidiv
push
lds
and
imul
ins
test
inc
movs
xor
xchg
xchg
mov
push
pop
lods
cmps
arpl
push
test
daa
mov
push
ds
ret
jl
push
xchg
icebp
scas
dec
ret
or
or
inc
mov
mov
out
jbe
mov
shr
mov
xor
jbe
fstp
push
shl
call
test
mov
fisttp
pushf
aam
sub
add
jbe
xor
das
retf
dec
add
sbb
sbb
retf
dec
inc
fsubr
adc
(bad)
mov
cmp
pop
in
mov
mov
mov
int
push
xor
jp
fild
mov
sbb
push
out
pop
or
cwde
loopne
das
mov
push
ss
cmc
dec
mov
stc
push
mov
xor
inc
(bad)
stos
sbb
cmp
retf
mov
out
add
xchg
aad
jmp
adc
jo
sbb
cdq
xchg
iret
adc
jmp
fbstp
jmp
(bad)
xchg
xor
fisub
sbb
inc
imul
fidiv
cld
sub
test
xlat
nop
ss
cmp
or
pop
sahf
je
jg
pop
mov
push
xchg
push
xor
std
pop
fbstp
pop
sti
xor
mov
hlt
scas
mov
and
fmul
scas
call
int3
ror
mov
je
jne
or
dec
jmp
setae
mov
xor
xchg
mov
lds
mov
xchg
adc
xchg
inc
fbld
jmp
hlt
js
pop
aam
mov
sbb
push
outs
cmp
inc
inc
fsqrt
pop
inc
cmp
jbe
shl
cmps
pop
test
jle
imul
pop
pop
test
stc
push
mov
out
lock
lock
dec
out
sub
push
mov
jg
daa
cmp
inc
sub
sbb
and
mov
outs
pushf
fmul
enter
in
mov
and
(bad)
sar
stc
loope
mov
lock
out
jbe
fisub
rcr
jge
fidivr
and
lea
sub
aas
stc
xchg
sbb
popa
fldcw
jl
xchg
or
loope
xor
loope
or
scas
jo
fild
bound
std
in
mov
retf
jle
inc
in
imul
or
in
inc
lahf
cwde
(bad)
not
xchg
lods
push
xchg
jnp
scas
add
dec
(bad)
mul
sub
retf
cdq
lods
stos
(bad)
push
jle
adc
popf
inc
inc
pop
push
out
push
rol
jbe
pop
and
ins
or
cmp
(bad)
in
pop
inc
pop
cld
sti
hlt
rol
xor
mov
retf
dec
xchg
add
jl
sbb
rol
mov
mov
cli
movs
add
pop
fsubr
fwait
and
outs
ss
sbb
xchg
bound
cmps
lods
icebp
std
test
xchg
cmps
bound
mov
add
mov
mov
in
jno
xor
cmp
stos
jmp
cmp
retf
or
sbb
add
add
pop
fisttp
add
dec
xchg
test
mov
nop
cmp
xor
sbb
(bad)
leave
ja
push
js
bound
mov
sub
xchg
(bad)
std
mov
fidivr
mov
pop
jl
loopne
mov
push
out
jmp
fisttp
mov
outs
add
push
xlat
mov
push
in
and
mov
jg
inc
int
and
push
loope
pop
and
dec
jne
imul
outs
cmp
popa
xlat
push
repnz
xchg
clc
lods
ret
xor
imul
lea
add
dec
lahf
jle
add
jl
add
push
es
push
or
test
pop
or
je
xor
aas
jb
out
sub
cs
pop
sub
leave
mov
mov
cmp
(bad)
pop
or
jp
jbe
or
inc
pop
pop
nop
dec
stc
ss
push
push
std
cmp
popf
sub
jmp
fwait
jg
jbe
mov
push
cmp
jns
imul
call
repz
lods
pop
sbb
push
ret
ins
lahf
aam
pop
outs
mul
or
stos
scas
cmp
icebp
scas
iret
(bad)
js
cmp
ja
xor
mov
retf
and
dec
test
and
mov
mov
fcomp
test
dec
(bad)
or
xchg
test
xchg
and
sub
daa
mov
mov
mov
cdq
cmp
ins
js
cmp
inc
jle
cmp
retf
jbe
das
clc
xlat
shl
jne
pop
je
mov
xchg
sbb
mov
in
outs
sub
fwait
cs
cmp
(bad)
frstor
add
fwait
push
push
aad
mov
add
pop
ret
movs
fsub
inc
sub
mov
lock
add
mov
cs
lock
push
mov
jmp
xlat
in
jmp
inc
dec
dec
xchg
cmp
sbb
and
hlt
cmp
jge
cvtdq2ps
cmc
and
mov
not
inc
xchg
lods
push
cmp
mov
jno
leave
(bad)
pop
aad
inc
pop
adc
xlat
retf
jae
bound
test
imul
xchg
push
push
dec
push
jmp
mov
and
mov
inc
push
(bad)
sub
adc
addr16
sbb
mov
sub
fistp
repnz
dec
xchg
mov
add
dec
ror
fisubr
push
jne
data16
jmp
xchg
inc
mov
(bad)
and
or
aam
in
xlat
repz
push
std
ss
push
push
dec
data16
mov
push
sbb
push
cmps
jae
sbb
call
cmps
pop
(bad)
jno
jle
aaa
inc
jo
movs
lea
xchg
arpl
mov
out
adc
pop
jns
out
xlat
sub
nop
pop
cmp
push
std
mov
push
fs
addr16
movs
mov
fwait
xor
mov
jg
mov
mov
loope
mov
jg
sub
sbb
aam
mov
mov
rcr
sub
dec
shl
sub
(bad)
pop
adc
and
(bad)
das
enter
call
aaa
xchg
hlt
xchg
movs
aad
je
dec
and
int3
bound
pop
(bad)
fist
add
mov
add
sahf
dec
cmp
mov
mov
xlat
push
push
cli
mov
push
mov
pcmpeqd
ins
mov
dec
xchg
scas
in
in
push
cmp
cmp
cmp
cdq
push
(bad)
jl
inc
addr16
and
(bad)
cmps
jl
fadd
or
ss
cdq
aam
xor
in
pop
xor
add
sub
jno
lds
xchg
scas
xchg
fwait
retf
iret
dec
pusha
mov
loopne
mov
mov
adc
adc
mov
adc
ret
iret
cld
bswap
jno
jmp
and
pushaw
hlt
mov
mov
ins
sub
jno
pop
out
cmps
imul
push
pop
lea
or
cmp
ror
addr16
xor
das
xchg
xchg
push
lds
inc
and
pop
fsubr
mov
jns
pop
cmps
fcmovbe
inc
mov
jle
jnp
(bad)
dec
div
cmp
inc
sahf
sub
mov
scas
iret
ret
xchg
call
frstor
std
mov
fisub
dec
xchg
add
enter
and
sbb
not
mov
dec
sbb
shl
mov
inc
xor
add
add
jae
or
xor
popa
arpl
pop
mov
adc
(bad)
outs
xor
lds
jp
mov
loope
cli
or
neg
cmp
jl
pusha
inc
lds
sbb
sub
cwde
pop
fisub
cmp
(bad)
cmps
ja
lds
pop
inc
rcr
fcom
popf
imul
pop
mov
push
sub
push
xlat
lds
pop
sub
stc
and
ror
js
sub
call
add
in
pop
arpl
bound
outs
sahf
hlt
ror
daa
(bad)
jne
lds
xchg
bnd
fiadd
adc
mov
(bad)
loopne
call
mov
cwde
sbb
loop
popf
out
adc
mov
jno
int
sub
mov
int
test
push
test
clc
inc
add
arpl
and
xchg
mov
inc
mov
xchg
xchg
xchg
nop
addr16
cmp
push
shl
pop
mov
out
push
aam
ins
pop
in
stc
stc
sbb
xchg
jl
mov
jno
loop
aam
out
call
lea
adc
and
test
les
cmp
nop
adc
es
pop
pop
dec
sub
leave
sub
mov
mov
xchg
arpl
enter
cmp
mov
rcr
in
mov
jl
inc
xchg
dec
mov
aad
arpl
xchg
pop
mov
mov
(bad)
sbb
fisub
xor
test
inc
test
enter
les
mov
jnp
mov
arpl
add
lea
jmp
mov
gs
fbstp
cmps
cmps
xor
xchg
or
and
push
adc
mov
(bad)
mov
dec
cmp
xor
cdq
sub
jnp
out
shl
fld
xor
pop
mov
imul
arpl
repz
fstp
sub
aam
iret
push
test
dec
pop
sbb
in
mov
les
xor
pop
or
js
(bad)
out
ins
push
mov
push
and
clc
cmc
outs
jge
inc
pushf
test
xchg
in
mov
stc
pop
or
and
mov
je
and
ss
and
ds
cmc
inc
dec
adc
jne
add
xor
mov
test
div
pop
scas
test
ss
dec
push
push
sub
mov
xchg
and
loop
jnp
aam
and
cmp
inc
popa
fst
(bad)
push
cmp
jno
jo
in
inc
cmps
and
sub
cmp
outs
jne
test
sahf
(bad)
aad
push
test
rcl
popa
adc
ins
pop
scas
fwait
pop
add
bound
push
inc
inc
rcl
xchg
pushf
jp
push
out
add
mov
and
mov
call
mov
adc
iret
neg
retf
ret
dec
retf
call
or
mov
or
das
adc
mov
jb
mov
jne
int
les
mov
or
das
bound
mov
jp
ins
xchg
pushf
cwde
rcr
rcr
inc
xchg
stos
pop
inc
cld
sub
or
nop
cmp
fnsave
aad
mov
xchg
mov
std
cld
dec
ret
in
loopne
pextrw
dec
fs
and
bnd
retf
pop
dec
sub
(bad)
lods
xchg
iret
mov
cmps
sbb
stos
test
ret
xchg
sub
(bad)
ins
paddsb
ret
fnstenv
mov
add
fstp
ins
mov
jae
adc
js
cmp
add
repz
or
and
xor
and
sub
xchg
push
and
js
repnz
jbe
xor
add
movs
das
or
dec
xchg
sbb
and
inc
scas
inc
rcl
stos
outs
cwde
pop
in
sub
xlat
shl
mov
dec
and
lods
dec
scas
pop
loopne
lock
xchg
cmps
mov
(bad)
xor
jmp
lods
scas
dec
jbe
jb
ret
out
push
js
mov
push
scas
cld
cmp
popa
fisubr
retf
mov
mov
imul
les
push
cmp
push
ss
cmps
aas
inc
xlat
enter
inc
mov
pop
mov
(bad)
sbb
sbb
dec
or
mov
das
sar
not
sub
call
repz
cli
push
sti
inc
test
stc
push
loopne
jne
xchg
or
mov
je
int
adc
and
xchg
and
(bad)
or
neg
dec
or
mov
xchg
les
je
daa
pmuludq
pop
push
push
add
jne
jns
cs
pop
jae
or
or
xlat
loopne
out
iret
int
fdivr
xor
in
push
sub
(bad)
xor
or
and
gs
inc
dec
(bad)
dec
jns
div
rcl
fiadd
sub
ror
cmp
stos
push
add
cmp
xchg
jb
cmp
cmp
or
ret
and
mov
fist
dec
movs
and
mov
rol
push
and
loopne
test
cmp
sub
pop
push
dec
out
pop
(bad)
jmp
das
data16
test
inc
pop
pop
mov
jmp
push
mov
ds
popa
jbe
xor
cmps
gs
sar
xor
out
lds
fist
jnp
test
push
pop
xor
xchg
xchg
inc
pop
imul
pop
lock
fisub
or
mov
mov
jo
js
fstp
sub
adc
ret
cdq
fbld
sbb
mov
mov
enter
and
hlt
cmp
xchg
imul
in
int3
push
push
xor
stc
cmp
jecxz
adc
fwait
out
sub
cld
xchg
cli
or
sbb
and
xchg
xchg
das
and
jmp
push
fs
xchg
cmp
stos
mov
inc
push
sbb
jnp
dec
jnp
neg
call
mov
jnp
adc
jmp
adc
hlt
test
stc
retf
es
cmc
adc
shl
push
inc
sahf
mov
push
arpl
cmc
test
aad
jae
push
sahf
xor
xor
mov
xor
push
or
jno
mov
inc
cmc
jne
mov
push
xchg
ins
test
mov
lea
xchg
xor
adc
(bad)
sti
inc
popa
jg
nop
js
call
and
pushf
je
jg
xlat
jo
sub
pop
fucomip
ret
xchg
mov
div
test
jne
and
inc
jae
aaa
xchg
jns
div
pop
jae
adc
push
jne
fmulp
adc
mov
pop
inc
xchg
int3
push
sbb
ins
outs
std
ins
adc
mov
lds
leave
mov
inc
loop
scas
fist
mov
std
mov
mov
test
inc
jmp
sahf
test
mov
ret
lahf
pop
push
(bad)
ficomp
dec
push
bound
sbb
mov
jbe
mov
mov
xchg
jbe
ins
push
jb
lods
or
or
ins
out
xchg
(bad)
jmp
mov
jg
jmp
mov
mov
or
push
xor
push
hlt
inc
cmp
test
loope
sbb
sbb
inc
shr
and
mov
sub
mov
push
int3
stos
outs
rcl
icebp
sbb
icebp
sbb
add
mov
mov
call
in
nop
cmp
shl
jl
mov
ret
adc
mov
rcr
in
xchg
in
adc
cli
add
popf
div
pop
ja
xor
jno
xlat
push
in
mov
xchg
jecxz
xchg
std
inc
mov
jo
or
jl
mov
addr16
outs
into
inc
cmp
movs
adc
shr
sub
fdiv
test
add
xchg
test
xor
out
sbb
cmps
div
xchg
test
mov
xor
jl
jmp
fsubr
jns
inc
jmp
in
ds
jg
je
loopne
push
xchg
pop
rcl
pop
ror
cld
pop
push
mov
xlat
mov
mov
cmovnp
shr
sub
jno
(bad)
stc
jl
daa
inc
mov
popa
call
mov
jo
mov
fldenv
test
neg
add
cmp
and
inc
dec
xor
dec
scas
jbe
pop
push
shr
add
jg
daa
retf
mov
fsubr
ret
mov
stos
outs
rol
mov
movntq
lock
push
inc
in
or
push
sbb
push
jp
or
jle
xchg
pop
icebp
cs
xchg
call
fs
inc
mov
mov
icebp
ret
icebp
rcr
or
jl
fcmovne
cld
dec
loop
mov
(bad)
jno
cmps
push
jmp
mov
imul
cwde
and
ret
repnz
mov
test
inc
fild
shl
and
mov
pop
lock
adc
inc
imul
adc
out
lods
push
pop
cld
jno
test
clc
mov
out
sbb
mov
test
in
and
mov
inc
data16
inc
lods
repz
cdq
test
push
(bad)
out
pop
mov
popa
mov
icebp
dec
frstor
mov
lods
xor
movs
mov
dec
add
fimul
js
outs
loope
xchg
shr
(bad)
fnsave
es
sahf
stos
sti
into
pop
or
jne
das
cdq
xchg
ret
sbb
mov
ret
cli
lock
out
test
ret
xor
test
jo
xchg
xor
std
dec
and
lock
or
sub
arpl
out
sbb
(bad)
xchg
fisub
push
cmps
paddusw
daa
gs
add
fdivr
pop
mov
lea
push
jmp
push
mov
push
dec
add
add
push
mov
aad
jp
movs
pop
jecxz
iret
add
int3
adc
retf
sahf
dec
mov
mov
cld
pop
sbb
(bad)
popf
rcr
lock
cmp
call
inc
mov
(bad)
movs
shld
mov
cmp
(bad)
mov
popf
pop
xchg
push
add
xchg
loope
call
pop
or
lock
sub
aaa
add
jge
ins
repz
icebp
cdq
setae
pushf
sbb
push
jnp
mov
mov
cmp
sub
xlat
scas
inc
push
daa
jecxz
pop
push
ret
mov
and
ins
pop
adc
inc
enter
sbb
or
xor
test
inc
lds
mov
jae
mov
add
cld
dec
xchg
imul
mov
fwait
jnp
loopne
or
int
pop
jb
into
add
push
mov
dec
test
arpl
mov
push
sbb
xchg
sub
lea
(bad)
jbe
dec
hlt
(bad)
xchg
mov
test
and
mov
cwde
xchg
dec
mov
mov
cwde
and
enter
(bad)
stc
enter
xchg
xor
loope
mov
push
cmp
(bad)
pop
mov
inc
lds
xor
jns
fdiv
das
ds
retf
stos
(bad)
adc
add
jmp
stc
(bad)
retf
cmp
push
pop
mov
int3
repnz
pop
jne
shl
jge
ror
jbe
cs
mov
and
retf
dec
(bad)
mov
mov
jg
mov
inc
mov
ret
jnp
push
sbb
pusha
js
add
gs
int3
mov
sub
mov
sub
add
push
ds
lock
cs
jns
or
push
and
push
and
push
adc
adc
stos
mov
jns
xor
popa
scas
stc
mov
mov
mov
addr16
mov
outs
stos
sahf
loope
pop
rol
sub
and
adc
jo
add
mov
(bad)
stos
ss
sti
adc
pop
(bad)
(bad)
mov
out
clc
into
inc
mov
and
add
rol
inc
pop
xchg
loopne
or
(bad)
sub
(bad)
outs
rcl
je
add
lock
push
int3
xor
xchg
adc
push
or
test
jno
dec
mov
cmp
lock
add
out
mov
jbe
sbb
scas
push
lock
int3
sar
(bad)
and
sbb
sub
retf
pop
sahf
nop
adc
popa
js
call
dec
rcl
push
mov
cmp
dec
sub
in
push
inc
movs
sbb
ins
push
add
xchg
loopne
loopne
mov
cdq
sbb
push
xchg
jne
out
add
jno
fadd
pop
adc
call
sbb
retf
push
xchg
pusha
cmp
cli
push
xor
stos
push
nop
leave
sbb
cld
push
jg
cmps
call
sbb
jnp
push
jo
in
cdq
mov
pop
xchg
gs
idiv
push
lods
cmp
and
sbb
mov
vmovdqa
or
hlt
ins
cmp
sub
(bad)
out
ror
add
dec
retf
cs
int3
into
outs
push
add
fist
push
mov
clc
jl
push
je
mov
lahf
fmul
add
call
mov
out
jnp
adc
aad
popa
call
fisttp
adc
fstp
cmp
pop
mov
mov
dec
dec
dec
inc
ret
and
ins
outs
xchg
fisttp
jmp
lods
in
int
icebp
sti
neg
dec
out
loop
fcomp
retf
pop
ja
ins
mov
std
mul
ins
adc
ins
js
or
test
push
outs
pop
cmp
jp
and
pop
pop
mov
and
xchg
stos
push
sbb
sbb
sub
and
mov
fstp
popa
or
cmp
sar
icebp
lods
stos
jp
push
aaa
test
aaa
lock
or
daa
(bad)
or
mov
jb
test
mul
cdq
dec
xor
outs
or
mov
les
dec
cld
sti
pop
pop
and
dec
dec
push
in
out
aad
test
mov
repnz
mov
sub
jmp
or
dec
(bad)
sar
mov
movs
into
lods
js
aaa
out
push
(bad)
add
icebp
enter
ins
lods
pop
rol
lock
(bad)
mov
cmp
jne
xchg
adc
jbe
and
xlat
add
bound
dec
mov
mov
xor
mov
add
jbe
int
mov
pop
cmp
xchg
retf
push
ja
jmp
in
arpl
mov
mov
push
mov
ja
cmp
sub
xchg
hlt
not
push
cs
dec
jmp
test
mov
mov
loop
jo
jecxz
add
sbb
xor
hlt
sbb
cmp
rcr
(bad)
xor
pop
sub
inc
adc
add
pop
je
jb
sti
inc
pushf
and
(bad)
xchg
pop
cmp
or
mov
push
popa
xchg
jge
xor
retf
jge
call
push
lock
(bad)
scas
out
rcr
mov
mov
cmps
xchg
inc
clc
push
cwde
pop
int3
test
mov
mov
dec
je
add
icebp
lods
fist
jnp
outs
mov
mov
push
xor
cmp
jge
lar
inc
add
push
push
xchg
pop
aaa
(bad)
std
call
daa
in
push
pop
ins
out
sub
cmp
xlat
iret
mov
xor
mov
or
sub
sub
clc
neg
loop
out
sub
push
out
std
dec
std
shl
imul
(bad)
cmp
out
jbe
add
adc
pop
push
cmp
clc
jnp
pop
call
ret
lods
mov
aas
inc
icebp
scas
imul
and
and
and
vrsqrtps
and
or
pop
lahf
dec
lds
sahf
dec
pop
add
mov
mov
xchg
dec
jecxz
mov
jl
add
cmp
jecxz
mov
popa
movs
neg
adc
mov
push
xchg
in
sub
imul
inc
jmp
in
push
inc
pop
sbb
mov
aad
or
out
ss
into
test
movs
mov
scas
xchg
les
fs
cmps
pop
add
and
imul
push
mov
ficom
jns
pop
dec
pop
je
mov
cld
and
jmp
das
jle
(bad)
or
sar
icebp
nop
push
cli
js
mov
fbstp
scas
adc
mov
mov
mov
and
push
in
popa
jmp
add
in
dec
ins
in
shl
mov
lea
stos
dec
or
or
and
out
xchg
or
movs
lods
or
nop
push
in
mov
aad
or
in
nop
xadd
pop
xor
ss
out
or
jl
pushf
pop
daa
xchg
inc
(bad)
mov
inc
movs
mov
and
retf
dec
mov
mov
jns
xchg
mov
sub
xor
xlat
dec
xor
sbb
xor
jo
mov
or
repz
or
cld
mov
mov
and
dec
sti
jmp
movs
jge
repnz
or
jns
jae
(bad)
stos
lods
rcr
mov
aad
ins
call
add
retf
xor
cmp
sbb
mov
and
sbb
inc
daa
dec
sbb
lock
(bad)
cmp
pop
xchg
mov
std
xor
int
movs
outs
and
mov
lods
push
popa
inc
out
push
retf
xchg
cmp
mov
movs
loop
test
sub
xor
rcr
mov
sti
aaa
lock
int3
in
xchg
outs
mov
jns
jmp
mov
or
xor
imul
xor
addr16
sti
cmps
xor
cwde
push
mov
(bad)
push
xchg
repnz
push
and
pushf
(bad)
mov
mov
push
jp
xchg
mov
mov
pushf
std
in
push
jb
or
aam
mov
mov
xchg
test
test
mov
adc
pop
dec
ja
or
xor
jb
xchg
mov
sub
jmp
jmp
std
mov
jnp
out
inc
das
popaw
aam
aad
xor
int
add
call
mov
in
jnp
pop
rcr
lods
fld
out
pop
in
pop
lahf
lahf
test
lods
repnz
jae
(bad)
shl
mov
(bad)
addr16
cmp
in
icebp
mov
push
outs
arpl
sti
add
mov
aam
gs
out
popf
mov
sbb
mov
jo
mov
or
jns
ss
movs
ds
dec
jmp
add
push
jo
sti
jbe
or
sti
cmp
mov
mov
fwait
sub
(bad)
push
dec
ja
mov
mov
sub
xor
imul
inc
je
lods
fld
stos
pop
scas
retf
pop
mov
xchg
sbb
jbe
(bad)
mov
adc
jmp
cld
push
xchg
sbb
lea
mov
adc
call
shl
push
sahf
push
inc
sub
inc
scas
test
fldenv
jo
dec
clc
stos
mov
jge
ja
mov
mov
sbb
out
push
sbb
inc
adc
es
mov
jae
push
int
(bad)
and
jb
call
dec
das
cmc
push
test
pop
loopne
cmps
dec
sub
or
fnstsw
adc
add
jmp
mov
mov
push
adc
and
stc
pop
sub
out
inc
push
out
in
pop
add
push
jg
xchg
xchg
aas
push
xor
add
xor
daa
pop
rcl
or
mov
add
pop
inc
or
sbb
mov
xchg
inc
pop
das
into
sbb
mov
adc
cmc
je
test
mov
inc
pop
test
retf
pop
retf
push
and
xor
sbb
mov
xor
adc
mov
mov
shl
arpl
or
xor
ja
stc
fdiv
jge
add
dec
mov
test
retf
fst
add
adc
pop
mov
and
les
std
scas
clc
bswap
sub
and
push
jnp
inc
inc
in
push
jl
jno
retf
nop
xor
cmp
sub
sub
xor
push
cmp
push
shl
aas
pop
loope
cmps
repnz
cmc
dec
cld
jle
jp
add
iret
out
add
retf
inc
adc
retf
xchg
pop
enter
mov
dec
xchg
cmp
data16
(bad)
xor
popa
dec
call
movs
pop
pop
gs
movs
int
out
pop
dec
hlt
nop
imul
imul
adc
dec
nop
jp
push
push
ja
xchg
push
adc
cmp
es
cmp
stc
pop
jmp
pushf
push
adc
cwde
sub
or
mov
hlt
repnz
test
call
jmp
jl
dec
inc
jbe
pushf
cwde
je
inc
add
popf
push
stos
add
retf
or
test
push
mov
test
and
cs
icebp
aam
push
fidivr
out
fmul
sub
cmp
(bad)
jp
sub
cmp
fdivr
jecxz
cmc
scas
xchg
mov
sahf
and
(bad)
rol
jnp
push
and
int3
(bad)
cmp
(bad)
(bad)
in
fidivr
inc
inc
aam
nop
rcr
mov
rol
sub
(bad)
les
rcl
jnp
adc
jmp
dec
call
pop
test
adc
mov
inc
push
push
in
sbb
mov
pop
test
imul
xchg
xor
in
cmp
mov
mov
sbb
inc
fdivr
add
ins
pop
mov
sbb
(bad)
push
arpl
out
ror
out
clc
add
fwait
sahf
scas
popa
repz
and
and
stos
mov
push
sahf
ja
div
pop
mov
fistp
pusha
fisub
enter
jnp
dec
xor
cmp
cmp
in
add
inc
xlat
jmp
pop
sar
pop
in
mov
xor
xchg
rcl
cmp
sub
pusha
mov
cmp
sbb
rcr
neg
cli
ja
mov
xor
stos
fwait
add
and
clc
xchg
mov
pop
xchg
mov
(bad)
xchg
repnz
xchg
add
(bad)
mov
clc
pop
in
das
sub
movs
and
jge
arpl
jle
pop
addr16
iret
ret
cs
enter
enter
or
repz
dec
les
adc
in
xchg
inc
add
aam
push
ficomp
fild
cmp
xchg
mov
mov
xor
(bad)
xor
ss
cmp
jmp
mov
ja
mov
ins
mov
popa
pop
jno
pusha
mov
dec
nop
mov
adc
push
jl
enter
rcl
(bad)
xor
mov
push
ins
inc
shl
cmps
xor
ret
and
ds
in
inc
fdiv
repz
mov
into
aaa
sub
push
mov
lods
sub
loope
paddusw
out
add
inc
xor
cdq
and
mov
in
jae
push
dec
or
cmp
push
fidiv
sbb
(bad)
shl
inc
rcl
lahf
aaa
and
fld
jl
pop
cli
jmp
adc
mov
pop
imul
adc
or
retf
call
cmc
lds
sub
push
cld
mov
mov
aad
icebp
adc
xlat
adc
dec
sub
stos
adc
scas
add
gs
pop
xor
dec
mov
adc
scas
jle
jno
fisubr
fistp
jmp
and
or
and
pop
dec
sbb
or
sbb
mov
mul
inc
subps
fs
dec
ins
movs
pop
jno
loop
int
leave
jo
inc
sub
adc
mov
pushf
lahf
jb
sbb
push
pushf
pop
jcxz
(bad)
stc
test
call
test
add
sub
push
cmps
or
fcomp
imul
cmp
xchg
retf
fistp
push
dec
pop
pop
adc
jbe
mov
cwde
add
jo
test
fcom
fst
jno
push
addr16
sub
fwait
sub
popa
pushf
lds
xchg
sbb
lods
sti
cmc
cld
je
add
div
pop
hlt
push
push
in
neg
or
or
sar
aam
cwde
in
mov
jge
std
and
pop
movs
(bad)
jnp
adc
push
rcl
mov
pop
popf
loop
ds
aas
dec
and
in
add
push
(bad)
aas
pop
(bad)
jb
mov
or
fprem1
sub
sbb
xchg
xor
jae
scas
loop
push
es
je
les
popf
jmp
mov
mov
(bad)
retf
icebp
adc
add
xor
mov
jp
ss
loope
inc
(bad)
dec
add
(bad)
fld
push
dec
xchg
mov
xchg
test
push
mov
push
movs
or
pop
mov
xor
mov
and
mov
js
rcl
iret
retf
pusha
sahf
mov
jp
popf
dec
dec
mov
leave
jecxz
shl
xlat
mov
dec
sub
mov
jmp
fwait
outs
sbb
jle
dec
in
mov
dec
pop
cmp
out
dec
jns
sahf
ds
ss
pop
or
mov
icebp
sub
cli
ins
push
not
pop
dec
mov
mov
test
les
mov
cmps
or
(bad)
std
sti
or
sbb
push
and
sub
fsub
cmps
scas
int
mov
shr
or
mov
movs
int
movs
jmp
cld
shr
(bad)
stos
test
les
or
push
mov
pusha
adc
jo
cmc
dec
jae
sbb
hlt
pop
mov
adc
lods
stos
fwait
push
and
mov
add
fwait
cdq
test
sahf
sub
fwait
push
int
retf
or
jbe
sub
pop
ss
xchg
push
loope
les
popf
mov
cmp
mov
mov
sub
dec
and
popa
imul
scas
inc
fnstsw
adc
out
fimul
cdq
adc
pop
add
dec
imul
aaa
sbb
ror
pop
(bad)
jecxz
call
jge
fnstcw
cmps
add
and
sbb
jnp
adc
push
inc
pop
and
xchg
push
xor
mov
ret
bound
dec
int
ja
jecxz
sbb
mov
shr
daa
push
xchg
mov
addr16
and
jp
dec
xor
mov
add
jo
movs
cmps
in
mov
adc
jmp
xor
jmp
add
pusha
out
sbb
ss
inc
mov
(bad)
loop
and
or
jp
neg
pushf
arpl
cmp
push
push
iret
mov
mov
(bad)
push
adc
sub
jg
mov
lea
xor
mov
dec
add
ret
xor
jl
loope
cmps
icebp
mov
mov
fisttp
aad
pop
retf
and
pop
mov
or
xchg
cmps
or
mov
mov
std
in
sub
(bad)
fdiv
pop
es
jecxz
push
push
jne
scas
enter
fild
sub
sbb
xchg
add
cmc
xchg
shl
mov
scas
sub
mov
inc
push
mov
lahf
movs
mov
das
mov
mov
pop
jmp
imul
ins
mov
jmp
xor
add
push
jl
sbb
add
movs
popf
push
push
mov
mov
or
jecxz
das
stc
dec
inc
mov
pop
inc
cmp
pop
fs
jge
xor
xchg
adc
fmul
mov
test
add
sub
sbb
nop
in
cmp
std
mov
in
sub
movs
out
(bad)
out
mov
push
in
push
cmc
xchg
add
pop
enter
out
sbb
fdivr
dec
jg
jmp
mov
or
jb
jecxz
imul
adc
pop
cmp
push
in
dec
mov
mov
scas
push
xor
cwde
ret
sti
ds
cmp
iret
test
cld
push
push
dec
pop
cli
dec
fidiv
outs
loop
inc
aam
push
sbb
sub
cmp
sbb
hlt
repnz
xchg
gs
jae
(bad)
in
imul
mov
adc
dec
or
cmps
xchg
xchg
xchg
inc
or
ret
sbb
enter
or
push
iret
push
lods
movs
adc
jmp
stc
mov
xor
imul
pop
inc
test
clc
ret
xor
pop
add
lods
and
(bad)
lods
or
sbb
sbb
mov
dec
jo
data16
test
pop
mov
cwde
sbb
sbb
sbb
mov
adc
sbb
cmp
retf
or
pop
icebp
pop
sub
(bad)
fild
int
inc
rcr
repnz
pop
call
inc
cmps
ret
in
dec
loope
and
addr16
movs
mov
(bad)
jecxz
loope
mul
push
add
mov
push
sti
cmps
inc
rcl
sub
int3
jmp
(bad)
jns
push
xor
jbe
add
mov
jl
sti
mov
xor
sub
arpl
gs
dec
mov
xor
push
jbe
push
call
inc
jns
xor
push
sub
dec
jne
das
outs
cmp
push
xchg
or
xor
adc
ror
(bad)
and
dec
jecxz
pop
cmc
sub
imul
stos
xor
gs
sub
in
jns
ss
iret
adc
in
push
div
out
add
je
xlat
dec
push
loopne
arpl
adc
mov
std
jnp
pop
pop
mov
fsubr
aam
adc
aas
por
push
mov
pushf
xchg
push
test
test
add
sub
fs
stos
jg
jp
outs
movs
mov
jb
xor
ds
dec
mov
jle
push
dec
retf
xchg
xchg
daa
cli
pop
icebp
xor
pushf
sti
jmp
movs
add
repz
jmp
jmp
xchg
push
xor
stos
imul
repnz
jmp
add
pop
inc
sbb
jno
ins
lods
xchg
mov
push
ins
ss
or
retf
adc
dec
int3
xchg
(bad)
mov
sbb
mov
inc
ret
add
sub
xlat
pop
jno
or
jmp
push
shl
cmp
inc
or
and
mov
repz
jb
(bad)
mov
(bad)
fisub
mov
lods
cld
popf
test
mov
adc
pop
test
jns
aas
data16
out
pop
(bad)
rol
pop
sahf
sti
cmp
cmp
inc
aas
mov
in
test
or
and
stos
and
lock
or
movs
push
dec
in
jg
jnp
iret
or
scas
adc
leave
push
(bad)
aam
outs
jmp
pusha
scas
add
and
std
fist
adc
and
loope
aam
iret
cmps
ja
mov
mov
sbb
and
loopne
mov
scas
sub
sub
repz
fwait
add
fcmovnu
aad
cmp
jbe
pop
rol
mov
fbld
dec
mov
shl
out
repz
stc
loopne
stos
push
pop
ins
pop
sub
jecxz
jno
add
pusha
shl
frstor
test
cdq
add
xchg
mov
sahf
cmp
movs
gs
mov
push
ja
jne
mov
sar
js
fcmovne
stos
inc
xor
lock
mov
jg
dec
dec
sahf
inc
enter
push
push
test
or
jecxz
into
rcl
inc
je
out
aam
dec
dec
sbb
int3
jp
jp
sbb
out
sub
sbb
jge
fdivr
inc
mov
sub
xor
push
xchg
mov
iret
cmps
scas
sbb
retf
cdq
jbe
xchg
pop
aad
shl
jns
movs
call
push
loopne
cld
out
or
sbb
and
fidiv
fcom
push
ret
dec
xor
scas
jmp
out
imul
shr
jmpw
loope
mov
jl
popa
cmps
push
daa
(bad)
cld
jl
stos
jnp
pop
cli
stc
dec
mov
je
cmps
push
cmp
sbb
arpl
clc
std
les
cld
lods
div
mov
and
hlt
in
scas
gs
adc
in
jle
addr16
sub
or
and
jo
movs
movs
mov
test
(bad)
lock
jno
outs
inc
out
frstor
loop
adc
shl
test
mov
jg
xor
loopne
gs
xor
js
(bad)
dec
sbb
xor
mov
jp
jnp
pop
fwait
sti
add
adc
pop
and
mov
jne
sub
out
or
jg
cmps
shr
sar
outs
cmp
jmp
ins
aad
and
inc
and
mov
jb
dec
inc
or
xor
bound
jne
outs
mov
mov
xor
das
sysret
outs
call
push
lods
nop
das
addr16
loopne
(bad)
idiv
lods
dec
inc
shr
inc
pop
or
fs
or
je
dec
xchg
push
mov
pop
(bad)
pusha
arpl
cmps
cmp
pop
inc
and
in
repnz
rcr
pop
shl
sahf
scas
jnp
daa
pop
gs
sbb
ja
ss
and
mov
mov
call
or
lock
or
push
shl
jns
jmp
push
pop
fnop
xor
sub
neg
stos
fwait
push
sub
sub
jge
aad
stc
punpckhwd
or
sub
fninit
popf
cmc
ss
retf
push
leave
rcl
inc
dec
mov
mov
call
ins
push
xor
je
fsub
in
mov
jno
std
jae
shl
mov
add
outs
in
inc
addr16
in
out
adc
les
enter
test
cmp
inc
adc
push
stc
and
ss
(bad)
data16
inc
leave
push
cs
push
fild
jne
adc
(bad)
lahf
dec
gs
push
test
mov
shl
jae
sar
push
cmp
ja
or
xchg
mov
neg
das
sar
jg
xor
loopne
addr16
and
add
xor
push
xchg
ss
ds
and
adc
xchg
and
out
fs
dec
jecxz
and
jno
arpl
nop
out
and
jnp
movs
inc
js
shr
ret
and
inc
fs
(bad)
or
mov
arpl
data16
and
cli
in
jge
(bad)
(bad)
daa
jno
xor
xor
lea
adc
jg
jmp
data16
aad
mov
(bad)
loopne
push
add
out
mov
dec
ror
dec
jno
pusha
add
je
cmp
mov
enter
add
add
rol
xchg
in
in
adc
nop
xlat
stos
xor
data16
mov
rcl
fwait
stc
adc
pop
and
lahf
int3
fisub
cmps
gs
cmc
sub
and
imul
imul
enter
xchg
cmp
add
aas
(bad)
jmp
or
xor
sbb
mov
imul
add
pop
fs
jno
mul
sbb
vcvtss2si
sbb
repnz
inc
sub
out
mov
hlt
jmp
loop
or
sbb
jp
iret
mov
mov
jne
(bad)
call
sbb
xchg
inc
inc
xchg
rcl
sub
repz
sti
gs
inc
mov
shl
loope
jp
mov
fucomi
cwde
pop
sbb
xor
int3
retf
cmp
push
ret
sbb
and
mov
push
push
mov
stc
sub
stos
xchg
into
sahf
cmps
data16
xchg
push
fstp
scas
mov
stos
shr
bound
inc
mov
dec
dec
pop
lahf
sub
mov
(bad)
cld
cmps
stos
mov
sti
call
test
xor
sub
sti
add
inc
xchg
mov
pop
pop
xor
inc
fmul
pop
and
xchg
mov
popf
sbb
mov
(bad)
mov
sub
repz
test
popf
add
imul
ffree
ja
jl
aas
xor
dec
mov
mov
test
and
rcr
mov
js
pop
cli
cdq
lahf
jmp
mov
lea
daa
pop
ret
shl
ss
jmp
cwde
in
and
fs
adc
jbe
mov
neg
cmps
out
pusha
pushf
ins
repnz
or
sbb
sbb
pusha
push
mov
test
lea
fist
xor
cdq
cmp
xor
daa
cli
clc
aam
int
jecxz
jns
lock
and
ja
outs
ror
call
leave
cmp
in
repz
jae
(bad)
inc
repz
mov
sbb
add
retf
outs
pop
mov
cmp
push
jmp
pop
sti
cmps
push
mov
pop
js
fisubr
scas
iret
in
fs
test
arpl
ins
xor
mov
pop
retf
xchg
mov
or
inc
push
daa
outs
(bad)
retf
mov
cmp
xchg
leave
sbb
or
sub
shl
loope
ins
jbe
mov
lea
xchg
push
sbb
jle
stos
shl
dec
sahf
aaa
or
pushf
dec
ins
retf
mov
xor
mov
lea
imul
dec
push
outs
outs
scas
shl
cli
mov
pop
add
xchg
das
movs
pop
sbb
mov
xor
in
xchg
mov
mov
lds
or
fidivr
sub
inc
dec
mov
cmp
movs
mov
mov
test
test
jle
or
inc
fincstp
mov
push
jae
loop
out
sub
out
pushf
add
ds
out
push
into
inc
call
pop
imul
jle
scas
and
aad
imul
jl
push
xor
mov
das
aam
cmp
add
in
fdivr
aad
push
push
es
jmp
cmp
jo
arpl
mov
adc
add
pop
pushf
or
vmwrite
lods
jge
xor
pop
and
adc
clc
add
sbb
sub
or
cmps
add
int3
sub
fstp
mov
ret
cmp
pop
mov
pop
mov
pop
aas
push
jo
mov
dec
add
push
sti
adc
and
(bad)
ja
cmps
ret
or
mov
cld
and
mov
in
adc
jmp
jmp
scas
push
dec
xchg
sub
dec
xchg
sbb
and
retf
sub
jmp
lods
mov
dec
and
retf
mov
hlt
pop
fld
mov
cli
(bad)
ja
push
rcl
cmp
repz
aas
movs
push
outs
ds
inc
sub
or
cli
aam
mov
or
pushf
(bad)
mov
popf
mov
push
adc
pop
arpl
inc
ins
pop
adc
fst
ins
movs
sar
xor
mov
movs
and
sbb
sub
pop
sub
add
dec
stos
loopne
cmp
std
mov
lds
loope
rcl
inc
ret
mov
ins
push
stos
lea
pop
ret
xlat
pop
mov
int3
jb
adc
nop
mov
mov
sbb
jmp
div
mov
and
push
jne
outs
xchg
movs
or
and
lods
(bad)
adc
push
sub
jb
inc
or
pushf
cs
daa
ss
je
jmp
movs
ret
sbb
clc
ror
add
nop
add
mov
sub
ins
add
dec
xor
mov
jmp
and
push
mov
cld
adc
jmp
xchg
push
pop
sbb
push
icebp
jmp
pop
push
mov
xchg
scas
in
pop
inc
mov
push
cmp
stc
into
dec
sahf
cmps
lods
jge
ins
xlat
cmp
jle
rcr
aad
retf
bound
mov
cmps
daa
pop
(bad)
fcmovnb
imul
mov
lods
inc
xor
cmps
gs
rol
cmps
call
jmp
xor
es
test
mov
fiadd
ja
fst
pop
imul
sbb
pop
push
clc
int3
aas
dec
pop
jmp
cmp
push
fs
lahf
mov
sub
inc
mov
lea
push
cdq
inc
lods
mov
idiv
cli
sub
sbb
push
push
dec
shl
add
outs
clc
ins
popf
mov
daa
pop
enter
(bad)
cmc
mov
jg
call
add
sbb
dec
cmp
rcl
mov
mov
cld
test
mov
lahf
loopne
push
ss
gs
jecxz
clc
mov
jg
mov
inc
retf
icebp
adc
mov
in
dec
or
rcl
(bad)
jmp
cmp
xlat
cmp
mov
std
pop
js
std
dec
(bad)
or
test
stc
mov
dec
push
int
mov
jle
adc
stos
ja
sti
push
add
and
jle
sub
and
xchg
(bad)
cmps
shl
ror
jmp
push
fwait
push
les
das
ja
jb
jp
out
mov
retf
call
nop
sub
jb
jg
inc
ret
out
push
fsub
movs
dec
popf
mov
mov
and
inc
xchg
and
clc
pop
das
aas
cmp
enter
adc
aam
inc
jno
hlt
popf
movs
pop
cdq
mov
mov
test
adc
fnstenv
pop
pop
push
gs
loopne
pop
lea
mov
fdivr
movs
neg
hlt
xor
sbb
add
scas
(bad)
fcmove
add
inc
call
jmp
xchg
fidivr
push
call
cmps
leave
adc
ins
(bad)
jl
sub
cmps
dec
mov
jl
retf
push
mov
add
fstp
sar
cmp
and
mov
cmc
dec
dec
lods
data16
je
sub
inc
call
in
xchg
pop
ret
mov
sub
add
cmp
push
mov
mov
xchg
rcl
and
and
jmp
hlt
dec
xor
push
cs
mov
(bad)
into
cmc
retf
add
je
sar
sub
mov
push
repz
xchg
stos
lea
cmps
jmp
and
arpl
push
inc
adc
cdq
push
cmps
push
pop
call
arpl
imul
sahf
xor
pop
cdq
add
adc
cmp
jo
cdq
pop
pop
xchg
adc
data16
out
adc
sbb
or
push
sub
call
ja
movs
sti
inc
int
add
mov
aam
push
push
in
mov
rcr
loope
sub
fsubr
pop
not
out
cmp
pop
ja
push
push
xor
(bad)
sub
mov
xor
mov
dec
pop
ds
nop
dec
xchg
cmp
into
jg
pop
mov
movs
in
jae
ret
sub
add
fld
test
data16
arpl
outs
add
sbb
cmp
inc
sbb
mov
in
scas
jno
pop
or
cmp
xor
mov
scas
push
cmps
mov
mov
inc
or
hlt
inc
cdq
in
test
ds
cwde
das
lods
jae
mov
cmp
pavgw
call
(bad)
sbb
bound
or
in
mov
sbb
jmp
jge
popa
(bad)
sub
ror
xchg
jp
and
push
push
imul
cmp
mov
mov
add
retf
mov
and
add
dec
iret
xor
adc
cmp
mov
mov
sub
stc
inc
cmps
ins
sub
sub
xor
fsin
and
mov
aaa
push
pop
cmc
and
aaa
cmp
add
cdq
push
ins
xchg
into
leave
sub
jae
(bad)
aas
aas
outs
aas
jmp
sub
sub
aam
mov
mov
push
push
mov
ret
mov
addr16
sub
cli
jl
cmc
add
dec
into
xor
stos
stos
sbb
sbb
and
ret
mov
lods
pop
ror
int
inc
mov
outs
and
fistp
pop
push
retf
mov
or
popa
sub
or
cmp
icebp
leave
mov
cmps
mov
pop
faddp
ds
add
lds
cdq
inc
aad
jnp
out
data16
xor
and
sub
popa
pop
xor
xchg
imul
dec
push
sub
dec
addr16
sbb
mov
jle
sahf
ds
jb
popa
inc
std
jle
pop
add
xchg
lods
mov
and
jp
push
and
scas
sbb
repz
add
xor
and
cli
jne
repz
sbb
jb
(bad)
stc
mov
cli
jecxz
cmp
lods
pop
in
mov
jle
loop
xlat
cmp
rcr
mov
and
xchg
mov
push
fimul
icebp
xor
push
add
push
leave
sbb
cdq
add
mov
pop
add
and
addr16
sar
sbb
retf
jecxz
sub
pop
xor
cmp
push
push
or
dec
jmp
xor
inc
into
push
xchg
xor
fs
out
mov
loope
loope
bound
xlat
cs
jp
mov
pop
add
mov
fistp
lock
dec
lods
cmp
movs
and
cmp
push
lea
mov
pop
mov
std
scas
aad
jo
mov
cmp
jne
and
cmps
scas
sahf
bound
in
pop
add
jmp
fisttp
popa
gs
add
jns
fld
push
inc
into
and
push
mov
ret
repz
pop
mov
cmp
mov
loope
or
xchg
int3
icebp
(bad)
pop
pushf
adc
sub
jno
jmp
push
arpl
xlat
sbb
jno
cmp
fwait
dec
not
pusha
jg
loope
jns
scas
dec
xchg
adc
loope
xor
je
adc
stos
fsubr
in
je
and
fiadd
adc
adc
add
sub
lods
ret
int3
xchg
in
mov
shr
mov
inc
pop
gs
mov
test
bswap
jnp
mov
(bad)
adc
scas
xchg
pop
adc
sbb
push
xchg
mov
pop
fistp
popa
xlat
jno
cmp
in
inc
sbb
sbb
fwait
arpl
lahf
mov
sbb
ret
jbe
clc
lahf
sbb
js
mov
xchg
loope
imul
mov
out
xchg
rcl
cmc
cwde
pop
and
arpl
xor
xchg
dec
outs
and
mov
add
mov
mov
adc
les
fisttp
pop
adc
into
lods
sbb
cld
or
movs
push
rcl
sub
dec
mov
xor
test
mov
lock
push
js
jecxz
cmp
jb
mov
mov
sub
add
stos
mov
arpl
dec
ror
sub
outs
ins
cmps
sbb
jmp
inc
cs
push
(bad)
hlt
popf
mov
hlt
push
test
scas
sbb
jne
mov
inc
inc
or
mov
xchg
ins
xchg
inc
push
xchg
xchg
xchg
mov
mov
dec
mov
fwait
mov
retf
push
inc
jno
ins
mov
push
fiadd
fwait
fwait
pop
xor
cmp
inc
cs
push
and
mov
inc
inc
xchg
repnz
aad
jecxz
mov
jnp
daa
scas
sub
daa
fisttp
pop
test
shl
inc
mov
mov
adc
in
cmp
out
shl
pop
inc
repnz
cmps
inc
test
mov
fimul
jo
shl
xchg
sub
dec
add
mov
popf
sbb
aad
mov
jmp
xchg
fisttp
lods
mov
nop
or
sub
pop
(bad)
sbb
lods
lahf
jmp
(bad)
imul
rol
cmps
mov
ja
and
popa
inc
pop
adc
lahf
mov
sub
lds
mov
mov
outs
cmp
test
pop
mov
xchg
fist
div
cmp
sub
sub
sub
mov
and
std
repz
out
in
retf
sbb
std
imul
sub
jae
lds
out
sbb
sub
jbe
jbe
add
fwait
int3
ror
popf
or
(bad)
aad
loop
in
adc
mov
loope
or
push
sub
cvtdq2ps
int
xchg
std
lahf
add
and
or
leave
sub
sbb
cmp
lds
inc
push
arpl
push
cmps
pusha
pop
and
test
or
js
sub
cs
ror
xor
stos
int3
je
cmp
je
adc
mov
pop
cs
push
add
loopne
push
int
out
(bad)
hlt
add
xchg
nop
pop
lock
jmp
adc
dec
aaa
jmp
add
ja
fbstp
dec
cmc
adc
pushf
cmp
mov
loope
in
rcr
add
jl
jne
lods
aam
cmc
fist
inc
int
mov
push
outs
and
rcl
ds
adc
and
or
and
inc
mov
jmp
xor
inc
ins
sub
ret
jne
inc
leave
sti
pop
jl
stos
addr16
adc
jg
xchg
cmc
lods
scas
fst
inc
repnz
mov
sbb
cmp
mov
and
mov
push
adc
icebp
pushf
mov
aam
lock
add
fadd
cmps
arpl
mov
push
inc
inc
push
push
out
push
xchg
scas
dec
dec
jo
dec
inc
movs
(bad)
cld
sub
(bad)
sti
push
adc
jp
jl
and
shld
hlt
sbb
mov
out
fisubr
dec
push
adc
mov
(bad)
cmps
shl
rcr
lea
sbb
into
(bad)
(bad)
movs
dec
stc
in
pop
add
push
rcl
es
adc
into
and
xchg
arpl
xchg
push
mov
adc
add
jmp
cmp
xchg
mov
imul
mov
jae
mov
ss
pop
dec
and
xchg
mov
xchg
pop
stos
mov
pushf
ins
cmp
xchg
push
imul
push
les
xchg
or
loopne
iret
addr16
cmp
sub
xor
fstp
or
jg
cdq
lahf
jbe
mov
dec
dec
mov
dec
lods
push
das
daa
(bad)
mov
push
ja
dec
out
scas
in
sub
int3
ins
daa
ja
xlat
push
mov
adc
mov
push
hlt
adc
enter
dec
add
hlt
aad
popf
arpl
dec
mov
inc
in
dec
and
jb
add
test
bound
in
pop
push
xchg
sub
dec
jmp
mov
cmp
jle
loop
xlat
xor
addr16
pop
mov
xchg
int3
lds
js
cmp
aam
sub
mov
cmc
mov
mov
cdq
sub
arpl
pop
icebp
movs
mov
rcl
push
aas
leave
ins
rcr
pop
cmp
jae
repnz
aam
or
test
repz
sub
mov
jg
jne
call
cmps
mov
xchg
fsub
dec
icebp
push
push
or
mov
(bad)
call
daa
add
iret
jl
cmps
hlt
fbld
add
ror
(bad)
je
push
push
(bad)
push
sbb
jg
loop
and
and
outs
jmp
ds
outs
inc
dec
js
stos
sub
aas
retf
(bad)
push
inc
ror
cmp
retf
loope
cmc
aas
data16
mov
iret
xchg
sub
sbb
sahf
pop
dec
popf
clc
mov
daa
in
fwait
jb
fisubr
mov
push
mov
jp
xor
pop
cmp
rcr
jae
(bad)
sti
inc
movs
pop
mov
or
sahf
xchg
fs
sub
sbb
(bad)
stos
fbld
jp
icebp
lds
or
or
dec
xchg
lods
sbb
push
xlat
inc
inc
dec
call
icebp
in
in
mov
xor
(bad)
inc
(bad)
or
sub
stc
sub
inc
(bad)
xor
mov
bound
push
int
jl
pop
leave
icebp
dec
pop
sub
jb
mov
pop
test
arpl
mov
dec
adc
dec
push
cli
mov
jbe
jae
ds
push
loopne
popa
mov
sub
xchg
push
jb
mov
hlt
add
fisttp
daa
outs
or
test
or
(bad)
push
xor
jp
xlat
pop
aad
lea
mov
ja
mov
mov
icebp
mov
jecxz
inc
and
adc
rol
mov
popf
mov
push
ret
pop
retf
or
in
mov
fldenv
and
sbb
xor
rcr
jmp
mov
cmc
mov
jge
jg
lds
push
loop
mov
not
clc
call
push
push
push
cmp
cmps
clc
inc
outs
das
pop
cmp
cs
push
xchg
lss
or
xor
fstp
push
mov
call
cmp
push
mov
in
jb
xor
dec
loopne
jl
repz
cmc
fdivp
(bad)
cld
ss
enter
adc
(bad)
cli
popf
div
cmp
rcl
sbb
push
mov
popf
stos
outs
mov
adc
(bad)
out
cmc
sub
add
popf
retf
mov
mov
sub
pop
in
jg
test
gs
inc
adc
push
xchg
mov
mov
stos
sbb
mov
add
and
cli
lods
push
xchg
loope
in
jl
(bad)
in
xor
mov
imul
push
pop
dec
les
and
jmp
and
stos
xchg
mov
and
adc
mov
sti
cmp
jo
jmp
dec
and
lods
inc
mov
sbb
(bad)
and
jbe
out
int3
pushf
(bad)
in
xchg
loopne
cmp
add
fiadd
sub
cmc
cmp
add
pop
psubusb
scas
out
in
imul
xchg
jge
dec
aas
cmp
sub
jg
sub
(bad)
jge
mov
xchg
out
lahf
jmp
mov
(bad)
jmp
leave
pop
inc
cdq
jmp
jnp
cmp
mov
imul
rcr
mov
movs
mov
mov
adc
in
clc
sbb
sahf
iret
(bad)
aaa
rol
and
ret
inc
dec
jl
idiv
mov
pop
add
lea
push
push
xchg
and
and
push
mov
xor
pop
pop
mov
retf
popa
jmp
jbe
sbb
js
ret
loopne
inc
fwait
scas
ror
pop
mov
inc
jmp
push
cmp
mov
ret
cmp
pop
in
out
mov
cmp
xlat
shr
and
jae
pop
pop
mov
xor
add
sub
sbb
leave
sbb
dec
mov
fist
adc
cmc
sbb
inc
pop
popf
adc
inc
(bad)
arpl
jmp
xchg
cdq
mov
gs
nop
(bad)
bnd
je
mov
test
fldcw
pop
sub
loop
xchg
and
aam
add
sub
jecxz
ins
lds
inc
ret
xchg
jl
add
xchg
lods
sub
cdq
pop
add
sub
lahf
push
enter
jo
cmp
xchg
cmp
sub
mov
jp
out
das
and
inc
mov
cli
fldcw
test
fnstcw
(bad)
fdiv
repnz
pop
xchg
sbb
xchg
inc
sub
mov
sbb
cmp
inc
movs
xor
xchg
sub
mov
dec
cmp
mov
pop
pop
pushf
call
cmp
push
jbe
and
loop
pop
pop
hlt
push
push
(bad)
pusha
arpl
aas
mov
loop
scas
add
push
xchg
ins
into
sub
pop
dec
repnz
adc
aaa
mov
sub
push
jb
lods
les
and
pop
imul
cli
xor
pop
dec
xchg
pop
mov
mov
push
into
std
pmuludq
cmc
jns
inc
dec
cmc
cs
popa
or
xor
push
js
xor
inc
mov
and
stos
aas
xlat
rol
dec
lock
cmp
push
fisubr
in
xchg
mov
mov
adc
add
add
inc
aaa
nop
in
stos
retf
xor
sti
or
test
out
sub
xchg
jae
jne
jmp
shr
mov
sub
ret
iret
loopne
xor
pop
lods
idiv
pop
inc
pop
inc
icebp
cmp
adc
pop
jmp
adc
cs
cmps
aas
xor
jns
jmp
fcmovb
sub
jp
mov
les
sahf
arpl
pushf
sahf
stc
xchg
lock
jg
movs
push
cs
cwde
sbb
adc
clc
jne
(bad)
cli
fxch
(bad)
or
or
xchg
scas
mov
adc
xor
test
mov
aas
neg
cli
cmps
pop
sub
in
adc
dec
fidivr
fbld
or
(bad)
or
aas
gs
bound
cmps
push
test
sbb
adc
push
sbb
adc
into
imul
call
aaa
add
in
xchg
jle
sbb
sub
jmp
mov
or
add
out
outs
in
mov
les
xchg
jae
or
lds
jnp
mov
repnz
push
jbe
(bad)
sbb
push
mov
pop
mov
or
fisttp
shl
pop
add
cmps
pushf
daa
das
daa
mov
sbb
jge
psrld
pusha
gs
or
add
lods
scas
(bad)
push
(bad)
dec
add
sub
(bad)
xchg
cmps
or
ds
out
mov
out
daa
xor
and
je
mov
pop
iret
mov
fdivr
fiadd
and
or
ds
mov
push
xchg
push
mov
mov
sbb
dec
out
xor
or
push
adc
push
jmp
adc
jg
int3
(bad)
stc
ds
retf
cld
mov
imul
push
add
jge
mov
adc
cwde
mov
mov
(bad)
out
and
and
xchg
mov
cmps
push
push
sub
fsub
dec
outs
add
in
dec
retf
cld
std
movs
imul
inc
ins
add
cwde
xchg
popa
inc
inc
clc
mov
pop
and
add
jae
adc
jecxz
sbb
(bad)
jne
rcl
xchg
pop
mov
xchg
je
and
add
jno
sahf
adc
mov
mov
cld
(bad)
in
rol
push
retf
dec
add
dec
call
dec
test
or
shr
imul
mov
das
neg
mov
neg
out
and
push
adc
push
and
xchg
(bad)
pop
xchg
cmps
out
and
pop
fdiv
dec
in
add
les
pop
mov
jle
stos
add
pop
mov
mov
into
call
cmp
mov
mov
out
rcr
mov
js
xchg
sbb
mov
ins
xor
push
into
pop
jle
mov
jo
cmp
(bad)
mov
xor
pop
sub
mov
and
loope
int
push
xor
inc
test
jmp
es
mov
fwait
cmp
sub
mov
mov
mov
mov
adc
mov
daa
jl
(bad)
cli
repnz
je
adc
jne
push
lahf
adc
inc
and
sbb
nop
mov
sbb
adc
xor
pushf
mov
repz
jo
repz
aaa
lods
sub
inc
sub
cwde
ja
sbb
pop
imul
lea
scas
rcr
cmp
data16
rcr
jbe
lahf
jle
fstp
and
mov
xchg
sbb
dec
dec
push
push
push
cmp
mov
xchg
test
addr16
and
push
sbb
bound
and
mov
test
outs
dec
data16
(bad)
jbe
mov
and
mov
mov
jo
(bad)
mov
add
pop
lods
stos
lahf
inc
jle
pop
pop
stc
cmp
mov
cmp
sbb
inc
adc
hlt
in
mov
out
push
movs
push
sub
sbb
gs
fwait
cmps
push
int3
jg
in
mov
(bad)
cld
sub
int
pop
dec
mov
sbb
pusha
mov
data16
and
fs
xacquire
and
mov
dec
xchg
fisttp
repz
add
clc
in
(bad)
push
ins
xchg
cmp
xchg
xchg
test
imul
sub
xchg
adc
mov
pop
fucomp
push
jb
(bad)
mov
pushf
mov
push
mov
sub
sub
jnp
jmp
shl
pop
test
push
xlat
cmp
sti
cs
outs
cdq
imul
jbe
push
add
push
std
fistp
push
stos
out
fldcw
and
sub
mov
hlt
imul
bound
cmp
mov
and
inc
dec
and
ror
mov
in
rol
les
ins
sub
inc
cmps
dec
js
mov
cmp
xchg
icebp
rcr
ds
cmp
xor
mov
in
dec
icebp
sub
stos
and
test
xlat
inc
repnz
shl
dec
arpl
mov
add
inc
test
ja
test
std
add
push
aaa
into
adc
jo
dec
and
add
xchg
(bad)
in
mov
pop
sbb
lea
lahf
in
or
pop
sahf
mov
scas
fdiv
enter
cmp
sub
push
cmp
shl
mov
movs
xor
nop
rol
in
mov
(bad)
jmp
push
test
pop
inc
pop
daa
mov
push
rcl
cmp
xchg
pop
pop
aam
cdq
sub
outs
sub
xor
cmp
pop
sub
retf
div
push
mov
mov
nop
xor
popf
push
cwde
in
jnp
stos
push
in
sbb
cdq
add
xchg
or
adc
add
and
loop
cdq
(bad)
cmp
inc
jmp
xchg
dec
das
nop
push
push
call
popa
call
int
clc
mov
mov
inc
outs
sub
cli
cmp
les
dec
mov
inc
(bad)
mov
cs
push
jns
xor
out
push
jae
or
int3
test
js
dec
and
mov
sub
iret
scas
push
mov
inc
add
imul
les
aad
push
(bad)
outs
icebp
mov
jmp
xchg
add
cmc
in
in
xor
sub
xchg
das
dec
out
sub
add
int
push
sbb
fwait
push
cdq
pop
ins
mov
adc
cmp
int3
ss
(bad)
push
sub
add
in
fidiv
pop
or
aaa
ss
gs
xchg
push
adc
leave
pcmpgtw
adc
inc
mul
cdq
pop
dec
xchg
pop
dec
mov
neg
into
repnz
stos
scas
pop
xchg
es
call
cs
sbb
and
xchg
mov
(bad)
pmaddwd
loope
xor
cmp
sti
addr16
bound
shl
(bad)
xor
adc
retf
or
stos
int
je
ja
test
(bad)
in
xchg
je
dec
in
add
leave
fsubr
xchg
mov
mov
add
and
sbb
sub
add
push
movs
(bad)
fisubr
jmp
and
call
sub
clc
pop
mov
in
cmp
aad
push
mov
push
daa
les
aad
sbb
push
sbb
mov
test
sbb
push
or
pushf
mov
loopne
add
div
je
shr
ror
movs
fs
jle
push
cmp
ds
sub
cwde
loopne
inc
lds
dec
xor
xchg
(bad)
xor
daa
or
in
in
push
push
mov
dec
aam
imul
cmp
fwait
imul
rcl
fisttp
ds
je
ins
fidiv
mov
es
push
jg
dec
jecxz
ins
pop
cmp
mov
pop
sahf
sbb
in
rcr
xchg
loope
jbe
lock
xor
sbb
aam
pop
imul
inc
cdq
xor
jmp
imul
lock
mov
lds
pusha
and
fld
push
or
std
outs
(bad)
xchg
jg
ss
xor
ret
dec
xchg
sbb
in
xchg
mov
(bad)
lods
dec
and
ret
or
mov
je
out
jmp
sbb
or
pushf
paddd
and
jae
(bad)
test
push
jle
imul
jnp
pop
in
xor
das
arpl
dec
into
mov
rol
push
or
jbe
loopne
push
mov
cdq
shl
xlat
call
adc
push
cld
pop
sahf
mov
or
push
test
fistp
push
mov
or
adc
cmp
mov
xor
jns
and
inc
cmp
jmp
inc
hlt
mov
ja
(bad)
mov
adc
lods
push
sub
mov
in
nop
mov
mov
test
into
sbb
iret
je
mov
in
addr16
xchg
imul
cmp
daa
xchg
retf
and
repz
jp
adc
aam
ret
das
ficom
jbe
jmp
in
lds
gs
mov
mov
into
cwde
jg
pop
or
jbe
dec
(bad)
adc
dec
cld
lds
cwde
adc
inc
ins
add
add
out
das
xor
push
push
cld
call
sub
hlt
pop
imul
hlt
mov
cmps
addr16
test
sbb
mov
pushf
xchg
ret
fimul
(bad)
fimul
pop
leave
xor
adc
call
mov
push
xor
into
sub
loope
pop
fsub
ja
mov
jae
pop
fs
in
xchg
outs
dec
imul
bound
inc
and
push
or
mov
in
dec
jns
mov
and
loopne
xchg
cmc
xor
arpl
into
fmulp
or
outs
int
adc
jle
mov
xor
push
les
(bad)
xchg
sar
inc
fsub
psubusw
sbb
pop
sbb
cmp
xchg
in
mul
mov
add
add
popa
sub
jecxz
std
mov
cmps
ret
push
inc
sub
popa
lds
int3
pop
div
xchg
push
sub
mov
jns
cld
loope
stc
nop
mov
xchg
out
cwde
xchg
mov
pushf
daa
jle
out
adc
imul
loopne
add
lods
out
inc
pop
adc
or
cmp
sbb
sti
mov
xchg
fwait
test
lods
icebp
xchg
mov
mov
stc
fs
cmp
xchg
and
fisubr
pop
stos
mov
into
mov
jmp
xor
jg
lods
mov
push
iret
pop
push
dec
sub
jecxz
jecxz
jns
shl
pop
cmc
loop
out
aas
in
pop
int3
fwait
imul
(bad)
xchg
pop
cmp
add
xor
aam
ret
mov
(bad)
jne
shr
jmp
xor
aas
xor
adc
push
sub
loopne
in
pusha
jl
mov
imul
jecxz
fld
es
sbb
fisubr
stc
xor
cli
pop
mov
jmp
cmp
in
pop
mov
mov
pop
push
adc
imul
or
fidivr
push
push
jbe
mov
test
push
pop
cmp
pop
cmp
jl
rol
jns
inc
bound
cmps
fcom
inc
cdq
fisttp
mov
test
and
sub
jo
retf
adc
popf
inc
adc
xchg
daa
arpl
js
pushf
les
jp
icebp
scas
mov
jle
cs
xchg
and
push
mov
fs
add
sub
xor
dec
xchg
pop
lea
fstp
aaa
pushf
add
push
fdivr
mov
pop
aam
mov
dec
scas
daa
mov
(bad)
sub
adc
pop
nop
and
mov
pop
lea
rcr
mov
ins
int
sar
ins
(bad)
(bad)
jno
pusha
fimul
retf
mov
into
cmps
icebp
(bad)
cli
jno
and
call
add
mov
sahf
jmp
xor
sahf
jmp
adc
rol
and
pop
push
cmps
icebp
jae
dec
les
outs
mov
movs
int
pop
push
js
stc
loopne
push
aad
add
cli
xor
sbb
sub
hlt
inc
scas
cmp
or
popa
pushf
xchg
ss
test
cli
sub
ins
test
daa
dec
test
int
scas
cmp
or
std
inc
ret
jl
and
pop
jno
daa
jle
loop
or
mov
xchg
outs
inc
mul
das
and
in
mul
pop
adc
jmp
xchg
xor
mov
das
sub
ins
inc
mov
sub
out
popf
xchg
(bad)
in
mov
arpl
fpatan
sub
shl
push
ror
or
sbb
xchg
into
test
outs
push
mov
popf
into
xor
sub
bound
rol
movs
call
out
cmps
retf
push
mov
lahf
lea
test
es
inc
adc
sub
dec
in
scas
inc
(bad)
fimul
xor
pushf
movs
sbb
loope
loopne
je
imul
jno
imul
ss
xor
inc
lds
cli
mov
pop
jbe
mov
adc
add
or
call
mov
out
in
ret
not
dec
or
rcr
cmp
xor
fbstp
and
cli
cmp
outs
add
packuswb
fmul
cmp
jle
jb
push
add
(bad)
jp
cmp
cld
ins
clc
jae
sbb
repnz
imul
pop
aam
bound
lods
xor
popa
jo
les
and
mov
pop
(bad)
out
fsubr
inc
cmps
jecxz
cs
jns
and
out
add
imul
inc
and
loope
cmp
fcomp
mov
xchg
stc
nop
and
jns
push
outs
stos
push
lods
imul
dec
add
jge
leave
cwde
fnstsw
jnp
mul
mov
push
push
dec
enter
out
cmps
jle
into
push
call
xor
sbb
mov
out
in
dec
xor
push
in
pop
push
and
mov
or
mov
ja
mov
mov
loop
xlat
std
mov
out
dec
clc
pop
or
xchg
push
sub
or
jmp
push
push
dec
pop
mov
push
sbb
mov
adc
cmp
sub
icebp
sahf
jo
addr16
js
je
sbb
mov
pop
cmove
inc
punpckhbw
sbb
test
xlat
dec
dec
jmp
aad
std
test
cmc
dec
jns
inc
xchg
outs
mov
jno
nop
add
stos
fsub
clc
inc
jg
int3
dec
shr
push
xchg
stc
push
adc
mov
leave
not
inc
retf
repz
pop
(bad)
ins
ins
jb
xor
inc
add
or
or
mov
mov
and
sbb
in
(bad)
fisub
leave
stos
lock
mov
mov
adc
test
stos
adc
scas
sub
mul
cli
cmps
adc
js
movs
pop
sub
xchg
mov
cs
dec
call
lds
pop
xor
add
nop
mov
push
or
mov
sub
mov
(bad)
out
add
pop
(bad)
aam
es
movs
ins
and
mov
mul
aas
sbb
xchg
out
mov
es
add
scas
sahf
dec
cmp
and
movs
push
lahf
cdq
sbb
fwait
pushf
pop
push
out
pop
push
das
jp
pop
mov
add
add
and
lock
push
bound
mov
push
cmp
pop
lock
jno
dec
out
aam
mov
add
cmp
and
jo
(bad)
push
or
mov
and
sbb
nop
ficom
push
outs
loope
push
pop
aas
jno
fwait
inc
jmp
jbe
add
dec
jno
mov
movs
cmps
xor
retf
jne
loope
add
lahf
push
jl
inc
(bad)
cmp
jae
stos
test
fidivr
std
icebp
jo
(bad)
jmp
fld
cli
inc
push
retf
inc
outs
adc
std
loope
ret
mov
sub
pop
add
push
sub
xor
xchg
neg
mov
cmps
cs
das
out
pop
jns
jmp
mov
ins
push
clc
cmp
inc
add
push
lds
test
jmp
loopne
inc
fbstp
fsubr
pop
das
cdq
cmps
jmp
cli
movs
repz
retf
arpl
jne
adc
mov
cmp
sbb
xchg
cmp
inc
jae
xor
daa
mov
and
mov
add
and
std
scas
cmp
daa
mov
mov
push
out
aam
cmp
ret
imul
adc
in
mov
jae
push
jne
outs
push
mov
mov
test
mov
test
dec
pop
test
jg
sar
int3
sub
xor
cmp
pop
lods
je
jo
in
push
nop
push
aas
call
mov
repnz
scas
call
and
sub
jno
test
call
aad
xor
inc
or
nop
fs
std
cmp
adc
mov
push
inc
and
cmps
jns
stos
pusha
into
nop
ficomp
add
mov
push
fiadd
test
cmp
mov
pop
lock
aas
inc
inc
inc
scas
push
sahf
inc
lods
packuswb
inc
xchg
adc
shl
sbb
push
lods
clc
popa
xor
fisub
cmp
add
lea
in
jmp
clc
movs
sub
add
inc
xchg
gs
jmp
dec
add
mov
pop
push
ficomp
mov
or
cld
into
jge
(bad)
push
sub
jb
and
push
jb
adc
and
ins
pop
pop
pusha
in
movs
or
pop
mov
fdivr
mov
jb
xchg
popa
or
pop
sub
js
into
retf
xchg
mov
cmp
and
ror
sub
loope
add
fisttp
fld
in
add
xor
sahf
pop
cmp
pop
cli
mov
mov
mov
mov
add
mov
pop
fs
cdq
jmp
mov
lea
mov
adc
loop
sub
xor
mov
mov
cwde
adc
cmp
inc
retf
inc
pushf
in
pop
mov
addr16
out
sub
movs
mov
jmp
gs
xlat
sahf
and
sub
mov
je
int3
push
pop
daa
pop
lock
dec
stos
or
xchg
mov
xchg
jecxz
adc
adc
inc
mov
jno
mov
push
inc
add
cmp
mov
fdivr
add
push
pop
or
mov
xor
in
and
and
sub
mov
sub
out
push
adc
nop
adc
sub
loop
(bad)
xchg
sar
mov
inc
fs
mov
add
sar
cs
and
dec
sar
fist
xchg
xchg
fistp
pop
stc
push
adc
retf
add
fs
gs
js
add
push
cmp
cmp
mov
jle
mov
ror
stc
pop
test
cmp
jb
pop
jne
call
jo
or
jmp
fwait
inc
mov
pand
or
movs
cmp
and
add
int
mov
das
scas
in
push
xlat
pop
lods
sub
jge
jg
and
aam
outs
aad
movs
push
dec
xor
into
or
add
mov
daa
je
add
mov
aad
out
stc
cmp
xchg
mov
ffreep
ret
nop
adc
push
or
jmp
jecxz
ins
jnp
daa
iret
jo
enter
aaa
xchg
lock
push
add
sub
inc
jecxz
loopne
mov
mov
jne
dec
lods
rcr
mov
ror
rol
(bad)
xor
jne
repz
cmp
sub
adc
or
push
js
les
inc
enter
(bad)
xor
ror
adc
fnstenv
mov
xchg
mov
and
scas
cmp
call
ret
movs
(bad)
cmp
or
sub
adc
xor
and
(bad)
push
xchg
in
push
mov
mov
mov
lahf
loopne
inc
adc
jns
jns
out
pop
ja
loopne
mov
jle
pop
jno
movs
cwde
push
mov
or
les
push
jo
mov
daa
sub
and
test
mov
sahf
add
cmp
gs
push
push
(bad)
cli
fsub
out
jb
fsubr
or
mov
push
lahf
sub
sub
and
idiv
pop
and
and
push
jle
lahf
lods
cmp
jbe
imul
xchg
pminub
ror
ins
stos
fmul
shl
push
adc
movs
test
into
fs
out
ja
push
mov
sub
ins
outs
dec
arpl
push
shl
and
xchg
xchg
adc
sub
inc
repnz
xor
sqrtps
or
pushf
xchg
ror
(bad)
aas
pop
pop
fldcw
(bad)
jb
lods
clc
rol
inc
leave
lock
dec
mov
ss
shr
jnp
jmp
cdq
and
sbb
cmp
mov
dec
adc
push
add
test
jmp
(bad)
out
add
mov
movs
inc
aam
adc
repnz
pop
add
mov
cld
in
fisubr
retf
jnp
dec
jp
mov
jmp
jg
sbb
popf
(bad)
aaa
mov
in
rcl
aad
stos
dec
sbb
jo
or
or
cs
sub
stos
mov
stos
sbb
hlt
neg
sub
jae
or
outs
push
xchg
and
mov
daa
mov
jae
fild
imul
je
fwait
sahf
bound
shr
ins
push
nop
push
sbb
jl
or
cdq
push
pop
(bad)
sbb
sbb
and
mov
ror
aad
jge
push
(bad)
or
ret
jl
out
call
pushf
aad
pop
test
setnp
add
les
dec
inc
xchg
ficom
xchg
aad
mov
sub
adc
sbb
addr16
mov
dec
sti
imul
lahf
test
jbe
mov
mov
inc
xchg
mov
aam
sete
jno
int
inc
fisubr
es
fsubr
mov
adc
jg
push
lods
iret
mov
adc
cmp
dec
pop
movs
not
iret
ins
ds
ins
in
cmp
shl
call
js
nop
imul
push
xor
jae
mov
ins
jmp
cmp
xchg
scas
js
push
shl
xchg
dec
and
fst
fstp
mov
imul
retf
and
addr16
pop
xchg
inc
leave
sub
cmp
les
pop
in
inc
jno
(bad)
test
dec
add
lods
lods
push
dec
jmp
or
les
imul
inc
push
scas
and
ins
and
ret
mov
inc
and
or
or
loopne
mov
dec
das
shl
fcom
pop
jmp
sub
push
imul
cs
mov
cmp
pop
add
dec
mov
leave
push
sbb
inc
mov
sub
jge
mov
or
mov
pushf
pop
inc
mov
fcomp
sub
add
icebp
or
inc
pop
mov
push
mov
adc
mov
je
fcomp
cmp
xchg
pushf
dec
ins
or
pop
xchg
js
cmps
jle
and
inc
adc
int3
iret
dec
ret
inc
jae
addr16
retf
mov
pop
or
inc
mov
scas
lods
stos
mov
xchg
mov
mov
inc
(bad)
in
sub
pop
adc
cmc
je
push
js
adc
int
push
lods
imul
and
push
shr
inc
ja
push
cmp
rcl
xchg
imul
mov
cld
dec
movs
cmp
es
inc
(bad)
(bad)
or
fidivr
daa
pop
scas
ins
cli
sub
js
jge
aaa
scas
fimul
mov
mov
push
sahf
(bad)
out
inc
pusha
push
test
stos
cdq
mov
cmc
push
dec
ret
(bad)
pushf
jmp
mov
mov
and
jno
dec
sbb
jno
cmp
or
jae
cmps
cdq
rol
sub
adc
jb
(bad)
pop
push
movs
mov
jecxz
and
or
mov
rcr
std
xchg
cs
dec
in
sub
loop
fucomip
cli
scas
ror
iret
out
aas
jmp
and
jge
mov
fwait
mov
out
iret
cmp
mov
push
fild
jns
test
test
cmp
mov
out
cmp
push
xchg
add
jl
adc
sub
test
shl
(bad)
repz
pop
xchg
adc
jb
cmp
add
into
jle
xchg
pusha
test
cmp
adc
adc
jecxz
out
cmps
ja
adc
mov
leave
or
sbb
xor
in
aad
and
mov
sbb
lods
ja
mov
inc
dec
push
in
loop
sti
aam
(bad)
pusha
mov
retf
push
cmp
inc
cwde
shl
fild
xchg
fsub
fwait
dec
out
daa
push
push
or
dec
dec
jle
mov
cmps
repnz
pop
icebp
lods
imul
or
add
pop
jecxz
pop
je
arpl
ja
jo
mov
cmp
sbb
pop
mov
(bad)
imul
imul
push
cmp
mov
fwait
mov
mov
in
scas
js
inc
adc
xchg
ret
mov
push
xchg
jnp
fistp
push
mov
popa
aas
imul
call
outs
push
clc
xor
sub
add
aaa
js
stos
xor
(bad)
cmp
lahf
stc
aas
imul
mov
retf
test
mov
and
pop
push
mov
je
sbb
mov
hlt
fld
inc
mov
daa
test
stos
or
bound
repz
fild
cmp
mov
popa
and
or
stc
add
test
dec
xor
mov
inc
lods
pop
(bad)
lds
and
daa
(bad)
push
ins
and
iret
pop
push
jg
xchg
jle
(bad)
(bad)
aam
jns
(bad)
lahf
je
add
sub
cmps
jbe
sub
pop
push
mov
add
xor
out
or
mov
aas
ret
mov
hlt
or
pop
pop
mov
stc
sti
push
add
jg
lea
das
cdq
fiadd
add
cwde
out
mov
(bad)
fisttp
sub
in
or
in
adc
imul
ss
call
cli
sbb
out
pop
sbb
push
xchg
sbb
(bad)
pop
dec
ja
push
sbb
add
gs
pop
and
shl
aas
add
pop
mov
cdq
out
xchg
xchg
outs
es
dec
pusha
jno
jmp
in
lahf
stc
hlt
fsub
jb
imul
push
loope
cmc
pop
dec
jge
dec
iret
add
(bad)
mov
push
inc
jg
push
add
je
ret
cmps
sub
mov
dec
call
test
dec
xchg
sbb
jnp
inc
je
imul
xchg
div
stos
mov
or
dec
or
mov
popf
xchg
ds
test
(bad)
jmp
jmp
pop
aas
and
add
mov
add
mov
mov
sbb
jb
and
sub
ret
sbb
jno
push
mov
ins
mov
dec
jne
out
dec
das
sbb
dec
mov
push
push
test
enter
les
gs
and
pusha
inc
push
adc
pop
add
imul
add
lahf
jne
ja
inc
pop
int
dec
add
xor
hlt
scas
sub
popa
push
scas
pushf
test
pop
dec
mov
mov
mov
mov
leave
repnz
mov
dec
sbb
bound
sar
pusha
(bad)
jae
pusha
jb
inc
pushf
mov
outs
ins
sub
sti
inc
xor
xchg
imul
pop
pop
adc
movs
cmp
(bad)
ja
enter
push
jo
js
dec
sub
mov
jecxz
jae
cmp
imul
aad
rcr
and
sbb
loopne
retf
adc
inc
xor
adc
sbb
iret
xchg
pop
call
xchg
pusha
lds
mov
jp
and
mov
in
stc
fcmovne
aaa
ss
test
call
push
fsubr
out
cs
iret
hlt
cmp
leave
ja
cld
dec
add
fst
mov
cmps
jp
lods
xchg
ins
push
jb
jmp
mov
dec
out
jle
jp
lods
mov
push
push
mov
(bad)
shl
movs
ds
and
pop
dec
mov
mov
pushw
or
in
jb
or
cmp
mov
push
jno
cdq
pop
dec
push
or
aam
ficomp
jl
leave
xchg
test
dec
mov
add
pop
pop
(bad)
dec
mov
loopne
mov
arpl
loope
aam
mov
xor
scas
je
mov
adc
pop
rcl
rcr
jne
lods
jmp
add
mov
mov
mov
cmp
sahf
pop
sub
fwait
jmp
scas
test
cli
inc
fwait
jbe
cdq
pop
(bad)
mov
imul
lds
test
lods
ss
les
mov
ds
mov
cmp
or
cli
call
inc
or
inc
inc
in
lahf
adc
cmp
dec
jbe
add
repz
inc
xchg
dec
push
cmp
fdiv
pop
fcomp
pop
xor
push
push
sbb
cmovns
mov
cmp
out
pop
jmp
mov
rcr
pop
xor
popa
add
or
mov
push
and
daa
mov
push
(bad)
pop
call
xchg
xchg
aas
add
ficom
push
mov
mov
(bad)
push
inc
push
ret
push
cmp
cdq
cli
aas
jl
dec
pushf
popa
adc
jns
pop
popf
mov
jmp
fiadd
es
loope
xor
in
dec
fisubr
das
leave
fcmove
js
jne
inc
test
pop
and
cmp
dec
jp
movs
mov
push
mov
sub
jl
pop
fnstsw
push
scas
hlt
push
cmc
shl
cmc
sbb
cmp
jmp
shl
xlat
rep
jae
clc
stc
fstp
sub
sbb
(bad)
jbe
dec
loop
addr16
jmp
dec
aam
fild
adc
movs
jmp
jb
bound
adc
sub
gs
cmc
(bad)
gs
outs
jmp
cwde
int
jecxz
in
and
dec
pop
and
repnz
add
enter
xchg
retf
arpl
mov
add
dec
stos
jae
mov
sbb
lds
ret
mov
shl
pusha
inc
sub
xchg
adc
pusha
jle
pop
retf
sub
xchg
fwait
daa
mov
arpl
inc
push
add
fadd
mov
fmul
and
or
in
cmp
sub
cs
(bad)
jns
mov
sbb
xchg
daa
out
mov
mov
lock
pop
or
and
and
jae
addr16
pop
and
inc
movs
lahf
ret
sar
adc
dec
les
mov
ins
push
xchg
xor
or
sub
and
(bad)
bound
repnz
stos
dec
xchg
mov
jmp
in
or
and
cmp
push
sbb
or
int3
mov
mov
inc
dec
pushf
pop
jbe
mov
rcl
push
add
sbb
adc
mov
cmp
adc
inc
pop
cmp
in
pop
ror
inc
and
(bad)
int3
sar
fimul
xchg
mov
loopne
imul
add
jnp
icebp
mov
iret
fndisi(8087
jnp
movs
sbb
pop
outs
xchg
lods
jb
pop
jl
(bad)
shr
retf
outs
fmul
or
jo
add
jbe
popa
mov
or
loope
icebp
xchg
inc
xchg
pop
les
cmps
pop
jg
leave
pop
fs
aam
cmp
rcr
imul
push
ret
adc
pop
call
jecxz
les
imul
ins
add
retf
jmp
test
div
sub
loope
mov
iret
jbe
loopne
mov
xchg
push
inc
mov
push
ret
pushf
and
push
outs
jmp
inc
pop
imul
(bad)
or
push
leave
(bad)
call
cmp
xchg
mov
into
repz
fnstsw
test
jnp
(bad)
jg
scas
pop
mov
into
push
add
mov
addr16
popf
loop
cmp
mov
popf
jmp
cmp
xor
xchg
xchg
jne
lea
mov
imul
shr
pop
fwait
inc
jo
lahf
dec
dec
jo
imul
inc
adc
std
nop
in
(bad)
ja
dec
test
jno
mov
xor
dec
mov
in
dec
movs
cmp
xlat
arpl
in
sub
push
ins
(bad)
add
adc
test
and
shl
xchg
cmp
pushf
mov
into
adc
cmp
push
pop
jne
lahf
dec
pushf
fwait
sub
or
fsub
repz
loope
in
mov
mov
pop
mov
and
mov
es
and
xor
ret
loope
mov
cmps
bound
mov
imul
xor
dec
retf
loope
jae
lea
sbb
sub
lock
mov
pop
je
sbb
push
push
(bad)
test
lahf
add
and
and
call
push
shl
cmps
pop
and
push
(bad)
stc
add
daa
pop
jb
mov
xchg
xchg
imul
cmp
push
push
mov
inc
mov
pushf
mov
or
mov
sar
xor
sub
mov
outs
in
push
push
mov
fbld
pusha
fsub
inc
sti
push
ins
mov
ins
dec
jle
mov
outs
push
jmp
mov
shr
pop
out
jle
inc
fldlg2
xor
or
sub
arpl
xchg
jnp
aad
fdiv
aaa
jno
cmp
add
nop
(bad)
shr
cmp
(bad)
add
sub
cmp
jp
fwait
cmp
jl
stc
ins
outs
in
mov
or
popf
xor
xchg
pop
xchg
jle
sar
cmp
test
and
lds
(bad)
(bad)
(bad)
push
stc
stos
xchg
push
aaa
mov
movs
xchg
fidiv
xchg
pusha
les
cwde
pop
sbb
mov
cmp
(bad)
mov
cdq
dec
cmp
sbb
adc
xor
bound
sub
push
sub
sbb
mov
(bad)
in
jnp
in
lods
jecxz
push
xchg
je
(bad)
jo
mov
jae
mov
fcomp
inc
repnz
adc
inc
inc
sub
dec
repz
icebp
inc
dec
push
xor
push
and
xor
ja
and
unpcklps
shl
pop
cmp
mov
jle
mov
mov
data16
fdiv
ficom
add
jns
cld
adc
(bad)
shl
data16
(bad)
fst
xor
in
mov
push
xor
xchg
lock
in
xchg
outs
mov
leave
cmps
jp
xchg
std
sub
ins
movs
lods
shl
xchg
out
cmp
bound
mov
cmp
popa
movs
addr16
stos
jge
mov
das
sar
repnz
add
inc
dec
shr
pop
aad
imul
daa
inc
pop
je
adc
hlt
movs
adc
adc
inc
dec
dec
or
xor
xchg
xchg
cmp
sbb
xchg
pop
xchg
mov
dec
fcomp
push
(bad)
jne
and
pop
jnp
mov
sub
dec
fwait
cmc
pop
cmove
push
rcl
inc
xor
fiadd
adc
and
push
dec
aam
cs
fwait
clc
dec
and
cld
xor
xor
jmp
sub
sbb
and
add
in
xrelease
mov
cdq
xchg
leave
add
dec
xchg
cmp
sbb
push
imul
test
add
xchg
or
aas
repz
movs
xchg
cmp
push
lock
bound
adc
or
std
sar
shl
mov
ins
mov
or
jo
ret
popf
bound
add
mov
cmp
fst
jnp
pop
jae
data16
movs
jns
ds
ret
mov
out
(bad)
ret
mov
jl
add
sub
push
in
jl
add
jo
inc
mov
fxch
clc
push
cmp
imul
push
xchg
aad
outs
dec
mov
int3
adc
mov
adc
push
mov
das
repz
add
adc
iret
pop
push
shl
into
xchg
ss
daa
test
std
mov
(bad)
pop
nop
retf
adc
in
cmc
add
mov
xor
and
mov
dec
ins
jo
mov
mov
push
(bad)
jge
sti
push
rcl
push
mov
test
cmp
ins
lock
les
icebp
ret
(bad)
jg
addr16
data16
cmps
or
nop
dec
cld
frstpm(287
cmp
pop
mov
pop
dec
rcl
xchg
push
and
fwait
cmp
(bad)
fwait
mov
sar
pop
cmp
or
test
(bad)
pop
stos
repz
pop
das
xchg
or
mov
ja
mov
and
(bad)
mov
push
mov
mov
nop
pop
cmp
in
push
das
movups
out
xor
ja
(bad)
push
movs
sti
add
cmps
jp
sbb
in
dec
pop
sub
mov
shr
cmps
in
pop
les
jb
or
fld
dec
push
push
mov
push
ja
cmp
sub
cmp
cmp
(bad)
popa
and
sub
adc
xchg
call
cmp
cmps
test
or
daa
popf
sbb
inc
or
add
jge
or
mov
fsub
jmp
or
inc
ins
push
sbb
push
daa
mov
mov
int3
mov
pop
mov
dec
(bad)
cmc
idiv
sub
cmps
add
sub
in
jb
cld
(bad)
data16
xchg
cmp
add
push
pop
pop
repnz
fld
add
xchg
popf
enter
fisub
repz
push
sbb
push
popf
sub
ins
in
jo
mov
loopne
cmp
stc
jecxz
sahf
loope
out
lea
aam
ins
jbe
or
jecxz
mov
sar
aaa
cdq
psubq
cmp
aad
sbb
das
cld
std
xor
arpl
pushf
mov
rcr
cmp
je
test
out
stos
leave
loope
mov
out
movs
adc
jb
shl
mov
jne
test
mov
lds
iret
mul
xchg
dec
repz
inc
push
ds
lods
popa
sub
lods
shl
stos
mov
dec
adc
xor
(bad)
and
nop
and
jmp
addr16
ret
mov
jns
lahf
push
cmc
mov
sub
cdq
adc
nop
pop
leave
cmp
in
out
and
test
and
sub
sub
enter
mov
ret
inc
mov
repnz
xchg
je
and
push
int
ins
rcl
cmp
cdq
and
sub
imul
addr16
(bad)
push
inc
cmp
sbb
pop
fidivr
mov
push
jmp
sahf
sub
arpl
retf
xor
std
push
mov
mov
mov
pop
aas
xor
imul
stos
pop
hlt
mov
leave
or
dec
jmp
xor
in
mov
cmps
or
xor
jb
pop
hlt
mov
outs
cmp
pop
push
in
out
(bad)
xor
sti
dec
stos
push
fbld
or
mov
pop
pop
xor
inc
inc
or
pop
cmp
inc
sbb
imul
cmps
fcom
add
xor
stos
std
cmp
push
(bad)
repz
push
jmp
xchg
xor
cld
sub
jecxz
jo
into
cmc
aam
je
cli
pop
pop
jmp
push
cwde
xchg
sar
call
push
shl
jne
or
push
clc
sbb
out
sbb
jl
(bad)
cmp
stc
fst
mov
pop
shl
jle
cwde
cli
mov
jbe
mov
rol
pop
adc
push
mov
or
stc
cmps
cmp
fwait
pop
cmp
sti
ret
mov
loopne
inc
pop
and
dec
mov
inc
(bad)
iret
movs
das
idiv
mov
mov
mov
out
test
cmp
inc
jmp
push
call
mov
mov
mov
push
retf
stc
jle
xor
jge
pop
mov
mov
leave
(bad)
aad
inc
adc
mov
xor
lods
cmps
mov
pop
mov
(bad)
and
sub
and
cmp
stc
pop
pop
adc
mov
dec
or
stos
clc
xor
mov
pop
mov
sti
ss
out
mov
aas
ins
sbb
in
or
and
adc
sahf
movs
dec
sbb
ret
pop
repnz
xor
xchg
and
int
xchg
sti
ins
scas
iret
push
fst
push
dec
fdiv
cmp
sub
jnp
add
jl
call
sub
xchg
jbe
jge
(bad)
xchg
xchg
ror
and
pop
pop
pop
push
out
dec
add
movs
jae
sahf
and
ins
in
daa
xor
xlat
xchg
sub
stos
sub
mov
inc
xlat
mov
xchg
outs
jnp
xor
fwait
mov
jl
inc
adc
pusha
add
jp
mov
dec
add
iret
iret
call
sub
pusha
outs
cmp
xchg
test
movs
shl
hlt
icebp
nop
dec
push
shl
shr
lds
add
outs
(bad)
addr16
inc
jecxz
or
xchg
mov
mov
dec
dec
push
push
les
js
adc
sub
xor
(bad)
xchg
loopne
add
and
sub
lds
aas
jge
js
inc
in
rol
mov
xchg
pop
or
mov
(bad)
jns
sti
daa
jmp
xor
pusha
sbb
(bad)
xchg
les
movs
dec
iret
jae
jge
xchg
cwde
scas
leave
cmc
jne
push
jae
out
mov
outs
call
push
stos
inc
jmp
aam
cmps
push
cmp
scas
outs
jmp
hlt
sub
jmp
inc
or
and
inc
inc
jle
daa
lahf
mov
int
jle
aam
inc
pop
sahf
inc
xor
cmp
sub
xor
mov
dec
and
cmp
mov
xlat
adc
in
ins
inc
leave
mov
clc
sti
cmps
rcl
in
clc
imul
xor
pop
bound
pop
(bad)
out
xchg
ficomp
repz
inc
mov
push
cmp
mov
nop
mov
mov
ja
icebp
int3
inc
aam
pop
and
push
es
adc
jge
add
stc
ret
call
out
mov
bound
repz
scas
out
ficom
stc
popf
outs
jno
lock
xchg
jbe
inc
test
ins
movs
dec
or
mov
outs
movs
pop
sbb
cmova
fsubrp
clc
mov
(bad)
or
xor
adc
sbb
nop
or
into
sbb
xchg
cmp
jne
and
mov
(bad)
shl
cmps
inc
mov
in
lea
cmp
ins
mov
add
(bad)
fidivr
ins
sbb
repnz
ret
cmc
mov
imul
out
ins
adc
sub
inc
jle
cs
cmps
ss
mov
popa
pop
push
std
repnz
xor
push
shl
push
sub
cmp
or
push
fs
addr16
dec
mov
in
pop
pop
mov
mov
mov
repnz
xor
mov
ja
pop
or
xor
add
mov
fcom
daa
sub
mov
shr
lods
cmp
(bad)
in
imul
sub
not
stos
(bad)
aad
or
jns
popf
push
out
mov
cmp
(bad)
in
fnstsw
popa
add
(bad)
sub
mov
push
sub
jbe
add
jbe
cmp
xchg
mov
pop
dec
pop
push
pop
jg
dec
hlt
adc
bound
mov
pop
inc
jg
imul
pop
in
fsubr
std
into
xlat
dec
in
xchg
xchg
push
enter
shr
and
retf
js
popa
loop
and
mov
pop
sub
mov
adc
imul
push
push
xchg
mov
out
ror
inc
addr16
xor
push
push
scas
xor
and
xchg
jnp
sti
jmp
gs
inc
jae
mov
xchg
popf
xor
nop
jmp
jmp
icebp
stos
mov
adc
ins
dec
pop
xchg
mov
out
xchg
push
mul
jbe
in
jbe
les
ss
enter
pop
mov
jecxz
or
mov
sub
daa
nop
stc
add
pop
loopne
cmp
push
pop
xchg
add
inc
imul
clc
shl
outs
(bad)
fld
stos
repz
out
pop
adc
in
xor
out
jp
je
(bad)
ss
xor
test
sub
jle
sub
nop
and
add
(bad)
pop
xor
push
xchg
jp
(bad)
in
cmp
pop
sar
adc
sbb
(bad)
inc
ret
movs
and
jo
xchg
add
adc
ja
push
mov
aaa
int
xor
and
sahf
pop
mov
cmp
lods
push
dec
add
enter
popf
ins
xlat
jecxz
xor
adc
lods
bound
iret
jmp
mov
loopne
add
fstp
cmps
int3
xor
loope
(bad)
js
jb
cmp
imul
fld
cmp
cwde
arpl
and
loop
fcmovu
inc
stos
mov
push
in
(bad)
fsubr
and
loop
dec
call
jbe
test
mov
pop
test
xor
pop
push
cwde
pop
test
out
pushf
stos
jp
inc
or
leave
adc
shr
lods
aas
aad
mov
dec
dec
mov
inc
data16
leave
or
pushf
xchg
pushf
les
add
xor
call
sbb
pushf
push
lds
dec
lahf
mov
add
popa
fidiv
or
leave
pusha
inc
shl
mov
hlt
jb
add
movs
cmp
rcr
rcr
mov
push
(bad)
div
xchg
call
cmp
das
mul
pop
pop
or
jbe
xor
je
(bad)
cmps
push
push
scas
xor
div
sbb
in
and
ins
fwait
les
mov
scas
nop
adc
les
add
cmp
scas
mov
lds
lods
sub
sub
rcr
sub
jmp
inc
sar
cld
jne
push
mov
sub
fbstp
jp
mov
xchg
(bad)
pop
dec
(bad)
sbb
ins
sbb
mov
pop
outs
mov
ds
push
mov
movs
les
ss
or
ds
arpl
jl
dec
dec
inc
xchg
in
imul
test
jo
ret
mov
or
gs
cmp
imul
test
mov
jg
mov
or
or
inc
into
rol
ss
out
gs
jne
les
in
ret
das
push
cmc
fwait
out
fcmovbe
mov
pop
pop
pop
fs
cli
not
adc
xchg
push
fdivr
mov
test
push
cmp
rcr
push
cmp
jbe
lods
jl
aaa
and
jae
in
or
sbb
es
(bad)
xchg
mov
sbb
out
aas
popa
jne
out
add
cmps
movs
mov
mov
add
loopne
movs
fmul
test
add
lods
shl
loopne
xchg
call
imul
add
dec
mov
retf
mov
test
adc
pop
or
(bad)
retf
arpl
inc
sub
jbe
pop
dec
(bad)
in
push
repnz
add
fimul
push
push
sub
xchg
xchg
xchg
jmp
jmp
(bad)
cmp
sti
or
fst
cmp
lea
mov
leave
add
dec
push
je
mov
mov
add
pop
pop
push
sbb
push
adc
call
adc
xor
js
adc
loopne
mov
jb
leave
scas
jo
les
jge
nop
mov
mov
mov
sbb
jge
(bad)
(bad)
cmovl
ret
pop
inc
dec
jb
in
mov
movs
sar
(bad)
iret
(bad)
bound
daa
test
int
rcl
or
outs
call
add
and
xchg
push
push
ffreep
push
sbb
bnd
pop
push
dec
out
sub
mov
fwait
push
sub
xchg
loop
jns
aas
mov
jecxz
jns
inc
sbb
ss
push
mov
(bad)
addr16
pop
jg
xlat
adc
adc
lods
pop
jecxz
inc
pop
ja
inc
xchg
fwait
and
outs
outs
(bad)
fdivr
stos
jge
jmp
loop
call
loope
mov
(bad)
inc
push
mov
jno
imul
push
adc
push
push
jp
inc
(bad)
add
jg
cmp
and
lahf
call
add
pop
fisub
xchg
imul
int
dec
or
mov
mov
and
imul
cmps
mov
sbb
sbb
stos
test
retf
jl
loop
sbb
pop
sub
cmp
lds
xor
ins
dec
and
push
cmp
pop
add
jne
adc
fmul
rol
push
pop
jp
jle
in
and
push
out
into
mov
pop
enter
enter
sbb
inc
rcr
or
cmp
ins
aam
inc
fstp
(bad)
aam
add
mov
(bad)
in
lods
xchg
out
jae
ret
fst
push
std
jne
rol
fucomi
add
test
pop
mov
and
pop
pop
push
frstor
cmp
cmps
adc
enter
pmulhuw
cmp
imul
pop
mov
arpl
adc
jns
mov
xor
adc
mov
ficom
inc
rcl
and
out
sbb
xlat
cmp
stos
scas
cld
xchg
push
and
sub
and
cmp
push
call
inc
mov
aam
pop
in
dec
shl
mov
mov
cmp
cmps
xchg
ficomp
(bad)
dec
cs
sub
data16
ds
mov
test
adc
cdq
jle
hlt
adc
hlt
mov
mov
shr
mov
sub
daa
adc
push
cmc
mov
add
sti
sub
retf
cmps
cdq
xor
int
imul
sub
adc
fidiv
jecxz
adc
pusha
inc
mov
leave
lahf
pop
mov
cwde
mov
xchg
dec
cdq
mov
push
dec
mov
and
xor
xor
inc
adc
jmp
mul
pop
loop
mov
add
fwait
mov
repz
sbb
mov
addr16
dec
adc
(bad)
loopne
xor
sbb
push
inc
adc
add
clc
ds
fstp
xchg
push
jle
add
scas
out
xlat
xor
scas
lods
and
(bad)
mov
mov
fist
lahf
es
push
ss
pushf
pusha
push
pop
stos
inc
push
pop
cmp
idiv
retf
push
jae
div
in
sbb
cmp
mov
cld
or
jnp
iret
ins
lods
or
popa
push
rol
aaa
ins
and
pop
inc
pushf
mov
jne
or
cli
xchg
mov
popf
pop
in
push
jmp
test
fist
or
shr
push
(bad)
shl
mov
adc
jnp
test
inc
test
xchg
xchg
fcom
fcom
sbb
push
add
sub
sub
pop
inc
ds
arpl
mov
cmps
xor
stc
mov
mov
or
push
repnz
and
ror
push
pushf
shl
ja
dec
xlat
xchg
test
xchg
call
or
mov
enter
pop
fcmovne
jbe
icebp
mov
dec
mov
jge
ja
je
adc
add
xor
xchg
test
pop
pop
aaa
and
test
cli
xor
pushf
rcr
and
loopne
bound
pushf
add
xchg
imul
clc
adc
add
xchg
inc
aam
xchg
mov
sar
pop
int
and
dec
ja
cmp
inc
ins
mov
(bad)
inc
mov
mov
outs
scas
lahf
idiv
mov
mov
cmp
mov
push
add
lds
inc
or
lods
ins
adc
in
adc
mov
cmp
arpl
push
xrelease
stc
sar
(bad)
add
jecxz
iret
or
adc
inc
lock
fisttp
push
stos
nop
ins
fbstp
gs
aam
mov
lahf
fcom
in
sbb
cmc
xchg
push
or
push
push
pop
mov
push
je
rcr
dec
mov
mov
shr
shr
addr16
sub
in
repz
inc
jmp
sbb
ins
nop
mov
or
adc
iret
jmp
bound
xchg
jbe
jne
or
shl
out
mul
jl
pop
addr16
pop
dec
fstp
and
call
mov
pop
dec
sub
and
sub
add
xchg
jnp
push
pop
mov
(bad)
dec
or
leave
add
das
into
sti
mov
ret
fisttp
pop
push
in
push
mov
push
xlat
gs
jne
xor
mov
xor
mov
jne
cmc
ins
stc
sbb
mov
out
xor
dec
jne
data16
mov
fdiv
inc
sbb
push
sbb
sub
mov
pop
sub
ss
push
dec
xchg
and
mov
call
(bad)
mov
dec
pop
jp
fnstcw
push
mov
dec
loop
push
jns
fsub
cmps
out
es
(bad)
or
push
dec
arpl
movs
and
mov
sub
sbb
push
std
cli
aad
int
push
cli
sar
sub
fwait
dec
jnp
movs
jle
xlat
add
sub
add
dec
rcl
ins
mov
ret
out
mov
xor
movs
in
xchg
je
sub
or
push
or
fimul
das
push
xor
sub
adc
add
outs
xchg
jl
movs
cli
and
add
push
shl
jbe
std
sub
mov
rcr
adc
jns
xor
sub
add
push
jmp
xor
and
(bad)
jnp
xchg
mov
lods
mov
inc
adc
xchg
nop
int
add
test
in
arpl
mov
jle
sub
popf
ds
push
enter
mov
mov
rcr
pushf
out
dec
sti
mov
mov
push
mov
sbb
sub
loop
sar
jbe
adc
mov
adc
movs
lods
aad
fs
and
pop
ins
inc
mov
push
jo
cli
add
stos
xchg
inc
pop
adc
gs
mov
ret
(bad)
push
je
shr
adc
jmp
xor
and
sti
push
jp
or
dec
jno
inc
shr
imul
add
aas
jb
daa
sbb
mov
push
pushf
cmp
adc
fidiv
xor
xchg
xchg
dec
mov
inc
lahf
jne
mov
mov
(bad)
sbb
or
adc
cmp
out
lea
ins
xor
xchg
aad
out
stc
xchg
push
pop
iret
call
fs
lahf
push
call
push
out
or
pushw
mov
adc
lea
jno
xchg
dec
das
jb
daa
mov
jmp
mov
fs
fidiv
sti
out
push
add
push
pop
add
pop
sub
movs
mov
js
js
fadd
fs
stos
dec
cmp
sahf
adc
out
xlat
jmp
(bad)
icebp
jmp
lea
cmp
jmp
ins
ins
push
mov
out
dec
cmp
mov
mov
ja
pop
mov
cmps
jo
pushf
aaa
adc
outs
fst
stc
ret
idiv
dec
xchg
rol
popf
jns
jb
cs
cld
mov
sub
inc
fcom
adc
lods
adc
ffreep
lea
ret
pop
cmp
aas
dec
ss
and
sbb
push
je
push
call
jb
imul
ret
setnp
xchg
cs
(bad)
push
sub
xor
inc
jo
(bad)
leave
mov
ins
arpl
(bad)
mov
xchg
sar
loope
adc
(bad)
daa
aam
adc
popf
pop
pop
or
sti
mov
push
add
in
and
pop
in
dec
les
(bad)
aaa
ret
push
je
pop
mov
mov
popf
pop
aad
test
push
jmp
repnz
sbb
(bad)
dec
push
cli
addr16
fs
aas
popf
pop
and
shl
and
xchg
push
jae
mov
sub
hlt
mov
in
mov
arpl
movs
jecxz
stc
ins
out
push
sbb
cmps
in
mov
test
add
movs
inc
scas
loope
dec
ss
xor
xchg
jmp
jmp
cli
pusha
jbe
imul
add
mov
push
imul
shl
loop
cmps
pop
mov
aam
hlt
fild
popf
in
imul
inc
push
xchg
sub
lea
or
xchg
dec
mov
mov
push
xchg
add
jns
pop
mov
test
xchg
jne
mov
retf
xor
test
frstor
test
inc
dec
stc
mov
inc
mov
movs
cmp
js
add
(bad)
movs
sar
pop
sub
out
iret
pushf
fidivr
stos
dec
dec
push
out
sti
repz
fsub
data16
push
inc
fisubr
jp
sub
mov
lock
dec
inc
push
icebp
mov
jae
sbb
prefetch
mov
cmp
leave
mov
jmp
dec
xchg
jmp
ds
(bad)
push
pop
daa
es
sbb
es
mov
pop
jbe
or
popf
sbb
push
sub
mov
push
lahf
push
push
dec
cmps
int3
sar
imul
(bad)
fstp
inc
cli
dec
sub
or
adc
out
mov
mov
mov
mov
jmp
mov
xor
fsubr
mov
retf
mov
popf
lock
xchg
or
mov
mov
(bad)
xor
dec
imul
cmp
aaa
fsub
xchg
mov
or
test
cmp
shr
(bad)
clc
mov
daa
stos
dec
mov
sub
add
and
pop
in
xor
dec
repnz
sti
dec
leave
popf
push
lock
mov
fcom
jle
into
in
popa
inc
xchg
cmp
add
into
leave
push
sub
mov
sbb
imul
add
das
lods
lock
cli
jle
inc
dec
lea
fnsave
(bad)
je
or
or
xchg
repz
pop
pop
mov
cmc
mov
xchg
mov
iret
test
call
lea
int
imul
push
mov
icebp
pop
fnstsw
frstor
sub
ret
jmp
lods
add
add
shl
inc
lea
dec
mov
sub
add
loopne
xchg
(bad)
je
mov
pop
fbld
pop
mov
push
mov
repnz
fcmovne
mov
dec
mov
inc
mov
inc
and
mov
scas
lock
push
test
lock
into
push
es
cmps
jp
in
adc
mov
mov
cmc
mov
pop
push
out
jg
das
jae
mov
imul
mov
pop
stos
and
js
ins
push
inc
dec
iret
adc
ins
ret
loopne
cli
inc
inc
repz
push
daa
add
sbb
aaa
stos
and
push
cmps
inc
add
sub
inc
pop
arpl
push
xchg
xor
push
and
pusha
mov
or
nop
or
mov
idiv
repz
lds
xchg
mov
jecxz
push
push
cwde
mov
out
mov
xor
or
xor
mov
stos
mov
cli
cli
pop
sbb
mov
fldcw
mov
cmp
add
dec
sub
inc
or
lods
mov
mov
sbb
cmp
mov
(bad)
cmps
xchg
xchg
(bad)
(bad)
jmp
(bad)
jb
movs
and
repnz
sub
push
mov
bound
repnz
mov
pop
mov
dec
pop
popa
js
loopne
mov
aam
and
lds
arpl
cmp
or
xchg
pusha
fimul
(bad)
div
or
aaa
add
push
jg
push
mov
mov
and
push
inc
add
rcr
les
xchg
push
push
repnz
mov
cmp
stos
into
dec
push
sub
xor
pop
jmp
dec
mov
in
out
lds
ror
mov
push
or
inc
sbb
enter
pop
enter
jne
retf
adc
and
pop
xor
ins
stc
and
mov
sub
(bad)
lock
es
jmp
jle
adc
movs
mov
jmp
pop
inc
fst
and
in
ss
jae
xchg
rol
inc
fs
or
test
or
loopne
sub
std
xchg
fcom
mov
out
or
jnp
or
jnp
xor
xor
js
stos
(bad)
jne
xchg
mov
push
push
add
sub
xchg
pop
xchg
stos
mov
out
in
jno
daa
mov
fmul
shr
adc
repnz
pop
sub
lock
ins
cmc
lahf
xchg
fst
sbb
repnz
sub
inc
xchg
fldenv
xchg
sbb
addr16
rcl
(bad)
stos
cmp
add
retf
mov
stos
lock
mov
outs
in
sbb
shr
ss
or
dec
pop
push
push
loopne
or
jmp
out
and
jae
js
gs
outs
lock
mov
fucomp
mov
imul
out
daa
scas
in
dec
xchg
(bad)
push
pop
cmp
out
adc
repz
cmp
mov
loop
test
mov
adc
push
jmp
jmp
lock
fisub
ins
(bad)
jo
lahf
lock
xchg
out
call
js
mov
mov
retf
or
shr
mov
(bad)
xchg
into
pusha
in
test
scas
or
cdq
xor
pop
ins
rol
mov
or
mov
imul
pop
fsub
scas
mov
cwde
or
push
mov
arpl
cwde
mov
movs
and
rcl
fistp
cdq
sbb
int3
ins
sti
xor
nop
scas
aad
adc
into
pop
ja
push
ins
fsub
sub
popf
dec
mov
xchg
cmps
iret
data16
pop
(bad)
repz
mov
jbe
sub
jecxz
hlt
ds
loop
bound
mov
xor
pop
jae
test
in
jb
sbb
mov
fnstsw
push
ret
nop
ret
aaa
cs
fld
popa
mov
mov
addr16
xor
adc
fdiv
sub
jmp
push
jae
das
or
jae
inc
mov
sub
je
cmp
and
repz
jmp
shr
inc
fiadd
and
push
dec
jmp
pop
push
loope
in
push
mov
call
shr
ss
lock
enter
retf
aas
ficomp
mov
in
push
arpl
mov
clc
cmp
pop
pop
mov
mov
pop
dec
or
sti
imul
mov
loop
and
adc
gs
sub
mov
fld
movs
mov
ins
out
or
sub
and
dec
adc
retf
sahf
clc
jg
popa
mov
ror
and
movs
cmp
(bad)
enter
push
xchg
stos
pop
xchg
jmp
hlt
or
or
jp
sbb
mov
push
je
inc
xor
pop
imul
jmp
jg
and
(bad)
sub
(bad)
neg
xor
inc
das
shl
push
(bad)
(bad)
adc
sub
add
adc
test
stos
in
sbb
push
jno
add
xchg
int
or
(bad)
adc
pusha
mov
cmc
adc
scas
int
sar
mov
or
in
push
lods
fwait
test
mov
aaa
cmp
push
or
dec
cli
push
fisttp
(bad)
add
xchg
dec
dec
jmp
rcr
jecxz
mov
xchg
out
add
pushf
jmp
imul
push
fdiv
and
add
pop
bound
imul
out
retf
dec
int
retf
fidivr
adc
xchg
cmc
loop
jmp
in
push
pop
das
add
pop
fimul
xchg
add
and
cwde
sub
outs
mov
add
jge
dec
test
test
iret
push
test
sahf
or
out
jl
sar
retf
sbb
iret
movnti
shl
jmp
aam
inc
jl
xor
xor
xchg
xor
add
sbb
ins
das
push
sub
or
es
cmps
mul
bound
xchg
or
out
test
cmp
dec
dec
inc
loope
adc
scas
nop
add
lods
jmp
ss
jno
repz
jb
or
xchg
mov
xor
jnp
or
inc
xlat
mov
scas
jns
cmc
lahf
jno
retf
cld
jmp
jge
inc
fst
mov
loop
pop
cmp
xchg
ret
and
aam
fwait
push
xchg
or
mov
(bad)
ds
fild
in
mov
sbb
std
jbe
jle
das
adc
hlt
jae
pop
push
push
(bad)
lds
fcmovnb
test
jge
dec
lds
enter
dec
sub
imul
pop
mov
and
adc
ror
rol
loope
aas
scas
sub
test
outs
sbb
cmp
add
scas
imul
lock
cdq
pushf
jo
xchg
xor
ja
or
pop
into
ja
call
mov
enter
ds
xchg
imul
pop
cmps
sahf
scas
push
popa
dec
push
rcr
mov
enter
xor
lods
inc
sbb
cmps
test
add
das
int
ins
pop
mov
call
ins
and
stos
jbe
daa
cmp
loopne
push
lods
or
dec
pop
jb
sbb
gs
adc
dec
enter
pop
xchg
ret
mov
rcr
jbe
mov
call
mov
dec
pop
sbb
lea
inc
out
int3
pusha
pusha
inc
nop
mov
dec
arpl
(bad)
inc
cli
push
mov
clc
mov
adc
int3
frstor
or
pop
mov
addr16
xor
arpl
mov
push
sbb
jno
aaa
mov
pop
or
sub
push
mov
inc
inc
and
jp
loope
dec
fstp
jg
nop
ficom
and
add
pop
mov
imul
push
repz
dec
pop
cdq
lods
popa
adc
scas
ja
fld
jmp
aad
out
cld
js
push
add
pusha
dec
pop
lods
adc
add
add
leave
pop
inc
jb
fwait
dec
dec
mov
dec
loopne
push
ret
rcl
pop
je
cs
scas
jno
and
push
ret
std
cmp
or
es
rcr
sbb
fwait
rcr
sub
xchg
push
or
push
adc
or
aam
jle
mov
push
dec
(bad)
push
mov
(bad)
nop
cmc
sahf
xor
mov
call
xchg
iret
cwde
cmp
int
lahf
fiadd
adc
lds
iret
adc
jmp
pop
pushf
nop
shl
js
mov
lds
cwde
ins
sub
test
retw
xor
imul
lods
pop
xchg
popa
cwde
sbb
cmps
jns
vmread
fdiv
jnp
and
jb
fcmove
pop
jl
pop
cmps
xchg
and
sub
iret
jno
mov
int
jb
mov
mov
imul
sub
retf
(bad)
in
adc
mov
jecxz
jge
arpl
scas
mov
fcom
jge
or
or
xchg
data16
adc
stos
popf
retf
mov
sti
and
dec
sbb
xchg
mov
inc
jne
mov
pushf
pusha
jns
gs
aam
and
test
cmp
and
cwde
xor
aaa
stc
leave
ds
push
pusha
sub
push
xchg
fild
mov
ins
idiv
outs
lds
xchg
inc
test
and
test
lods
clc
int
call
or
imul
or
jno
neg
xor
std
lea
imul
shl
cmp
sub
add
and
ja
stos
jle
das
xchg
mov
lock
inc
push
cwde
pop
icebp
push
and
hlt
sbb
ja
fldenv
xlat
xor
and
dec
mov
(bad)
cmps
fidivr
stos
mov
sar
pushf
ficomp
repz
fisub
loop
xor
add
mov
add
sbb
xor
popf
push
and
lods
pop
hlt
cmc
ins
mov
mov
cli
cld
xor
and
and
outs
int
push
popa
jnp
ja
call
jns
ss
push
aad
int3
pop
fist
xlat
and
(bad)
retf
int
fiadd
cli
sub
cmp
(bad)
push
cs
pop
cld
dec
or
mov
dec
dec
les
push
adc
outs
cld
mov
in
cmp
pusha
and
call
div
fist
cmp
test
movs
or
sbb
sbb
push
cmp
pop
mov
(bad)
lods
fld
es
pop
xor
lock
dec
xchg
repnz
mov
lods
js
imul
mov
add
pop
xor
loope
jl
ror
lsl
std
mov
or
dec
cmp
pop
inc
inc
push
adc
mov
lods
pop
lods
jmp
adc
fidivr
and
mov
into
clc
popa
xchg
pop
shl
(bad)
cs
jmp
jp
aad
cmps
icebp
into
cmps
in
dec
push
dec
xchg
in
fs
ja
xor
adc
mov
add
(bad)
into
adc
push
jnp
jne
sbb
jb
in
ins
fwait
push
mov
(bad)
ins
and
dec
xchg
inc
jmp
push
test
mov
pop
test
test
sub
pop
scas
cwde
mov
xor
inc
cmp
adc
repz
sub
push
loop
scas
xor
cmp
inc
dec
popf
jge
scas
adc
xchg
jg
sar
jns
jmp
sub
shl
mov
xlat
fwait
xchg
arpl
dec
mov
mov
adc
or
sti
or
scas
adc
test
inc
(bad)
ror
bndstx
mov
sub
or
push
dec
hlt
mov
pop
mov
mov
dec
jno
dec
nop
ror
add
sbb
test
cmps
jg
mov
in
int3
popa
out
in
ja
add
int3
sub
mov
xlat
and
(bad)
mov
cs
imul
loop
out
or
iret
and
push
ret
xchg
data16
xor
and
inc
jno
adc
data16
pop
xchg
leave
leave
ja
adc
into
mov
int3
and
sti
inc
cmp
xor
cmp
enter
lods
cmp
pop
lods
cmp
movs
(bad)
out
mov
in
stos
fidiv
ins
int
sub
sub
dec
sbb
mov
sub
push
sar
fcom
(bad)
cmp
(bad)
shl
pop
jecxz
push
adc
sub
ror
and
int3
mov
sbb
inc
xor
movs
mov
mov
popa
mov
outs
or
push
sbb
mov
inc
dec
xchg
out
push
cmp
push
and
mov
aam
arpl
mov
lock
dec
or
sub
jle
dec
push
call
ins
addr16
adc
(bad)
adc
loopne
mov
inc
lock
xor
and
mov
test
test
test
jo
call
in
mov
push
out
cdq
xchg
in
cmp
and
movs
fwait
es
xor
jns
call
dec
cwde
cwde
jmp
jmp
aad
int3
(bad)
and
in
or
das
mov
(bad)
rcr
aam
std
mov
xchg
loope
mov
call
popf
pop
or
(bad)
push
jb
das
pop
xchg
movs
jmp
adc
or
dec
dec
mov
popf
int
(bad)
nop
(bad)
imul
add
fnsave
(bad)
shr
mov
sbb
and
fcmovbe
stos
mov
lea
popa
out
jae
xor
mov
mov
cmp
mov
mov
sub
and
cmp
mov
push
sub
clc
lahf
out
xor
or
cld
popa
dec
inc
inc
and
cmps
nop
dec
or
adc
in
repnz
pop
or
mov
jecxz
cs
js
xchg
test
mov
cmp
int3
out
cmp
mov
pop
xchg
iret
aad
pop
sbb
leave
cmp
mov
xchg
cmp
cli
adc
jbe
imul
int3
pop
jl
jmp
push
in
mov
ss
ds
imul
call
jmp
mov
or
push
mov
clc
sahf
ror
lock
sub
or
sub
xchg
icebp
jp
jecxz
cmp
inc
cmc
ins
dec
jl
movs
mov
(bad)
jmp
retf
fs
stc
ins
jmp
ds
clc
fcmovbe
jns
add
or
push
test
mov
int
and
test
and
jp
popa
inc
outs
inc
movs
pushf
repz
ins
imul
fs
mov
xchg
mov
cmp
push
pop
icebp
or
repz
fs
into
fisub
jbe
movs
in
adc
stos
mov
push
sar
imul
pop
cmp
movs
(bad)
arpl
lahf
inc
(bad)
mov
sti
dec
sbb
cmp
mov
mov
mov
into
call
mov
stos
or
xchg
add
das
mov
out
fld
or
or
dec
push
popf
test
(bad)
mov
dec
add
stc
xor
xchg
movs
xchg
mov
int3
shl
pop
dec
dec
xor
outs
add
xor
inc
clc
imul
imul
and
xchg
inc
adc
cmps
jp
outs
sbb
mov
call
int
push
inc
daa
jbe
aam
call
fst
je
(bad)
jl
push
js
mov
test
or
ins
int3
cmp
jb
jmp
loopne
loop
jae
sub
jnp
mov
adc
ins
mov
sbb
mov
ror
rcl
mov
int
jne
xchg
add
ror
loopne
sbb
push
jnp
jg
or
sbb
sub
iret
fxch
ficomp
pop
gs
and
dec
sub
jno
and
rcr
mov
pop
movs
pop
adc
scas
cmp
sub
mov
cmp
ds
iret
mov
nop
(bad)
mov
cdq
sub
or
jb
jge
adc
cld
das
aaa
mov
jmp
inc
push
jmp
mov
add
push
pusha
cwde
sar
not
mov
fistp
(bad)
jo
(bad)
fdiv
jmp
sub
test
and
xor
rcr
cdq
and
inc
mov
add
shr
icebp
adc
xchg
mov
sbb
and
retf
mov
push
dec
or
inc
in
shl
adc
scas
cld
pop
mov
and
fmul
pop
sbb
das
stos
arpl
or
mov
mov
push
push
neg
iret
xchg
movs
push
(bad)
dec
jno
(bad)
mov
stos
(bad)
cld
pusha
ds
sub
dec
arpl
leave
push
mov
or
loope
xchg
pushf
sub
xchg
sbb
out
sar
loope
xlat
xchg
mov
cmps
mov
mov
push
cmp
fadd
sub
daa
(bad)
shr
xchg
jbe
adc
xlat
into
sub
imul
das
add
mov
xchg
add
push
scas
xchg
int
fnsave
out
add
out
mov
xchg
jg
icebp
mov
add
add
inc
aas
scas
out
gs
dec
dec
sub
cmp
cmp
cmc
fiadd
pop
test
inc
test
xor
fldenv
cmps
sub
mul
(bad)
mov
out
sub
sti
lods
hlt
cmp
pop
push
movs
adc
sub
adc
push
jne
cli
mov
push
sbb
push
jnp
shr
and
ins
fcomip
xchg
push
bound
cdq
cmp
dec
in
mov
or
dec
fld
shl
(bad)
cld
sub
mov
and
sar
js
xchg
lods
imul
in
xor
sbb
adc
fadd
mov
fistp
ret
gs
add
fimul
jnp
repz
pop
mov
loop
mov
jmp
push
or
xor
mov
and
hlt
xlat
pop
ficomp
push
xchg
push
xchg
pop
add
popf
cmc
pop
or
mov
push
mov
xchg
neg
sbb
or
pop
adc
adc
into
push
scas
xchg
lea
clc
repz
sar
leave
mov
retf
sub
into
xchg
dec
xor
jo
ss
and
jo
cmps
mov
mov
stos
add
fs
sahf
nop
(bad)
out
fild
push
lahf
jmp
adc
lds
sahf
push
arpl
sbb
jnp
mov
adc
mov
pusha
mov
call
enter
pop
cmp
adc
jmp
xor
or
mov
adc
or
push
adc
adc
gs
inc
push
ror
std
mov
ds
xor
test
push
ret
jo
mov
pop
or
jecxz
call
xchg
pop
mov
repnz
test
cmps
fdivr
scas
pop
lock
ret
or
cs
cdq
mov
mov
push
lods
mov
sbb
add
les
addr16
cmc
ret
mov
inc
aas
mov
ds
mov
cmp
and
cmp
rol
int3
mov
cmp
push
scas
(bad)
repz
iret
retf
xchg
imul
sub
icebp
jne
pop
add
rcl
aad
imul
xchg
clc
into
push
fs
and
or
or
shl
sub
rcl
(bad)
pushf
aas
jnp
mov
ds
and
adc
pop
test
(bad)
sti
ficomp
mov
pop
jnp
adc
mov
jo
push
cmc
jg
push
retf
sub
(bad)
jb
stc
cmp
sbb
dec
jns
mov
jmp
mov
ds
sbb
jae
jo
repz
dec
aad
inc
jecxz
or
push
retf
inc
xor
push
out
neg
cmps
ud1
fdiv
xor
pop
bound
stos
xor
add
and
mov
pop
xlat
xor
icebp
call
jge
mov
jg
mov
push
imul
daa
pop
jge
ror
dec
mov
(bad)
pop
dec
das
jae
push
adc
test
push
push
push
mov
lods
ins
cld
arpl
cmps
sub
xchg
dec
fwait
ret
(bad)
xchg
inc
ror
sar
inc
or
fwait
xor
imul
lods
addr16
fld
shl
jnp
lods
push
xchg
xchg
and
add
ret
or
add
sbb
movs
ins
jg
pop
and
xchg
sbb
mov
pusha
ds
arpl
adc
xlat
adc
adc
xchg
sbb
and
int
dec
mov
scas
add
mov
repz
and
or
push
into
and
cs
stos
and
les
pop
(bad)
sbb
aad
sbb
neg
or
cmp
fisubr
xor
xor
dec
sbb
mov
dec
inc
push
and
std
popf
pop
xchg
xlat
sbb
sahf
gs
sahf
(bad)
jl
jo
jmp
adc
xchg
sbb
and
repz
inc
sub
mov
aas
fstp
mov
jo
adc
fcmovu
fwait
fs
mov
ins
mov
and
gs
or
adc
jmp
mov
fimul
jp
stos
dec
sub
mov
xor
mov
nop
(bad)
cdq
outs
pop
test
aam
(bad)
es
pop
or
rcr
cwde
jnp
sbb
jae
jmp
scas
repz
mov
cwde
mov
dec
aaa
mov
(bad)
lods
outs
stc
jl
mov
mov
(bad)
jecxz
aas
stos
sub
jp
mov
mul
dec
sbb
in
jne
arpl
xchg
push
mov
aad
pop
cs
add
dec
pop
pop
mov
xchg
fisttp
ja
xchg
test
jmp
mov
ja
not
popa
loopne
adc
data16
ins
sub
sub
jb
cmp
and
sub
lods
mov
cwde
lds
cmp
xor
sbb
mov
test
push
push
lods
retf
xchg
cmps
retf
outs
sub
mov
ret
pop
mov
imul
inc
(bad)
sub
loope
arpl
nop
adc
jne
ja
or
pop
loope
mov
push
fcmovu
push
pop
adc
arpl
mov
leave
push
mov
ds
jl
mov
xchg
xchg
jle
push
jmp
cld
ret
retf
or
ins
jnp
pop
push
out
aam
and
cld
shr
sub
retf
jp
pop
gs
add
int
outs
mov
xchg
imul
loopne
mov
stc
pusha
inc
lds
call
jo
mov
pop
jg
popa
test
mov
jns
sbb
imul
dec
(bad)
cld
scas
mov
fwait
lds
or
cs
push
and
pop
les
clc
push
fistp
sub
hlt
adc
daa
repz
aam
fidiv
jb
jns
sbb
in
and
pop
mov
adc
mov
dec
mov
xchg
daa
jns
fdiv
mov
(bad)
test
loope
fwait
std
mov
int
outs
pushf
adc
adc
retf
arpl
fbld
xchg
movs
cmp
and
stos
cmp
jno
cmp
xchg
movs
gs
and
cmp
or
in
addr16
shl
enter
fisttp
test
push
enter
sbb
cmps
outs
lods
cmps
aas
jp
and
or
dec
sub
push
pop
mov
inc
cwde
dec
ss
adc
hlt
cmp
sub
hlt
inc
mov
xchg
loope
int3
sub
and
mov
pop
push
(bad)
mov
xchg
mov
(bad)
(bad)
jno
retf
retf
test
int3
sub
xor
and
jmp
sbb
(bad)
add
ficomp
sahf
out
sub
xor
int3
jno
jp
mov
add
and
cmp
pop
xchg
mov
mov
mov
push
in
mov
dec
jl
les
ret
clc
js
fstp
fs
mov
push
ds
mov
jno
jecxz
cmp
dec
push
mov
shl
test
mov
fisttp
pop
or
mov
popa
jno
sbb
out
ins
fild
out
pop
pop
or
mov
xchg
icebp
lahf
cs
bound
sub
out
mov
mov
cmc
lods
jmp
mov
nop
adc
pusha
add
sbb
cmp
gs
mov
call
and
jnp
es
loopne
mov
pop
mov
add
test
inc
push
sub
inc
mov
sub
out
fcom
fdivp
cmc
sub
fwait
add
push
shr
pop
jge
pop
ss
les
mov
loop
dec
mov
mov
mov
mov
gs
(bad)
stc
push
inc
add
scas
js
inc
jo
addr16
in
movs
mov
ror
daa
frstor
adc
repz
out
not
fcom
jb
retf
cmps
sub
adc
out
data16
lock
mov
test
xor
mov
in
sar
outs
pop
fs
add
call
xlat
inc
ret
mov
mov
mov
(bad)
lahf
aam
xchg
call
push
addr16
mov
or
mov
jmp
shl
rcl
lds
xor
in
inc
imul
mov
sbb
sar
pushf
push
lahf
xchg
sub
clc
jns
dec
and
inc
inc
fist
dec
ror
clc
sbb
rcl
adc
adc
test
lahf
sahf
add
inc
inc
jne
cmp
xchg
jl
inc
movs
call
gs
push
cmc
add
jecxz
adc
push
pop
mov
popf
jbe
cmp
sub
adc
stos
cmps
iret
pop
inc
aad
(bad)
out
mov
xchg
loop
shl
jmp
call
fst
xchg
ffreep
xchg
int
add
and
push
sahf
cmp
psubd
in
xchg
je
xor
add
fcmovbe
lahf
stc
mov
lds
dec
mov
jns
jne
sub
jp
hlt
(bad)
xchg
leave
lock
push
add
jecxz
jne
jg
in
and
adc
mov
inc
call
push
aam
xchg
inc
movs
sub
int3
bound
stc
add
or
add
mov
add
or
sti
sub
je
shl
call
mov
out
loope
sbb
imul
pop
popa
ds
not
push
sbb
out
or
or
or
in
(bad)
cmp
(bad)
std
push
sub
jns
cdq
push
add
(bad)
push
push
ret
sahf
dec
or
jmp
imul
add
cmp
inc
neg
pop
pop
or
div
into
inc
out
jmp
mov
loopne
out
fild
ins
push
mov
stos
mov
rcl
fsub
jo
mov
ret
pop
not
dec
cmp
test
imul
movs
ror
adc
stos
pop
lods
and
sbb
in
and
xchg
clc
imul
test
cmp
adc
daa
jl
or
and
mov
pop
retf
stos
mov
and
jnp
xchg
mov
leave
and
mov
sahf
cmp
sbb
xchg
xchg
or
test
mov
xchg
push
pushf
inc
ins
sahf
clc
mov
in
arpl
sbb
dec
mov
mov
ror
bound
ja
lods
add
and
push
das
mov
je
imul
sbb
mov
mov
out
inc
pop
jl
push
and
ja
aam
dec
lock
cmp
add
xor
fsubr
xchg
lods
pop
ret
or
xchg
dec
call
daa
lds
jp
mov
mov
sbb
push
xchg
pusha
test
cmp
mov
jp
(bad)
sub
es
gs
lds
cmp
or
inc
mov
popa
iret
icebp
shl
xlat
xchg
sti
add
cld
add
or
jl
ins
daa
mov
daa
sahf
(bad)
popf
loopne
mov
retf
data16
push
and
cmc
pop
mov
push
jo
es
inc
ucomiss
test
cdq
sbb
es
in
int
xor
xor
xchg
and
xchg
in
pop
push
je
cmp
pop
pop
pop
mov
cdq
aam
inc
pop
adc
stc
ret
xor
inc
test
xchg
jmp
and
pushf
add
or
call
sub
inc
(bad)
push
sub
fmul
pushf
std
movs
(bad)
lods
push
push
rol
mov
fmul
jmp
les
sub
or
cmp
(bad)
push
mov
push
mov
aaa
adc
sbb
cmp
adc
xchg
pop
lea
xchg
ins
mov
inc
jge
out
jge
and
or
out
inc
pop
cs
cwde
ins
and
scas
add
pop
adc
int
int3
sub
inc
ds
or
cmc
in
stos
mov
xchg
lea
lea
fbld
stc
retf
or
test
push
mov
ins
jmp
xor
fnstenv
sub
imul
retf
mov
cwde
or
or
cmp
aam
add
mov
test
cmp
out
shl
lahf
mov
jno
pop
mov
xor
lahf
mov
sub
neg
mov
jmp
cmp
(bad)
pop
jecxz
xchg
or
inc
push
adc
cdq
sbb
pushf
imul
fsub
sub
cmp
out
sar
ins
and
adc
push
movs
and
scas
sbb
inc
sbb
(bad)
iret
mov
(bad)
pusha
arpl
retf
lock
inc
xor
push
stos
or
cmp
lods
cmps
mov
fidiv
xor
dec
test
loopne
mov
xchg
add
fs
mov
mov
int3
loop
push
sbb
pop
inc
inc
mov
xor
(bad)
adc
shl
lods
mov
ja
dec
mov
outs
fld
std
sub
mov
xor
push
dec
stos
popa
push
dec
ja
jo
cmp
add
movs
jno
push
pop
pop
cwde
mov
loop
fcom
(bad)
movs
into
cli
push
push
in
movs
xchg
pop
ss
mov
aad
push
sub
movs
xor
mov
pusha
daa
ins
iret
test
ret
cs
and
mov
sti
ret
sub
imul
sbb
add
sbb
scas
xchg
push
push
pop
pusha
ret
push
mov
dec
xchg
cmps
cmp
mov
jge
push
fnsave
loop
(bad)
or
mov
(bad)
pshufw
or
fsubr
jmp
pop
sbb
les
xor
out
xchg
(bad)
imul
mov
jl
es
adc
mov
push
stc
push
mov
iret
fwait
jp
stos
cmp
leave
inc
ins
lea
fwait
xchg
xor
movs
rcl
into
add
retf
fisttp
repz
jo
ficomp
aaa
or
js
sbb
inc
movs
inc
xor
cmp
in
xor
pop
xchg
push
(bad)
dec
cwde
and
sbb
sbb
in
mov
cmp
outs
or
sub
add
mov
add
push
jbe
adc
mov
(bad)
dec
inc
pop
sub
xchg
fsubr
ins
xchg
adc
mov
ret
push
jb
fnsave
mov
and
(bad)
enter
cwde
sbb
retf
push
je
push
sbb
pop
inc
or
and
les
pop
push
je
and
mov
fist
shl
mov
ret
cwde
xor
jecxz
cmp
push
retf
add
cmp
fcom
xchg
loope
adc
xor
add
jne
retf
(bad)
sub
(bad)
or
fst
add
mov
ds
stos
dec
rcr
inc
pop
movs
jnp
stc
jp
jmp
pop
int3
dec
in
jne
push
cmp
xor
cmps
stos
jmp
pop
out
xchg
jo
and
jb
shr
mov
int
mov
das
pusha
stos
fcmove
dec
dec
movnti
xor
mov
dec
ss
ficomp
push
inc
mov
xchg
(bad)
push
and
xchg
jbe
dec
neg
cld
fild
setle
xchg
mov
outs
out
in
lock
inc
imul
out
push
cld
inc
std
mov
push
and
imul
sbb
xlat
mov
call
(bad)
int3
arpl
aas
ds
icebp
cmp
dec
jmp
out
add
into
out
icebp
test
push
mov
and
je
or
pop
into
cmp
dec
lds
xor
pusha
dec
xchg
popa
in
(bad)
xchg
adc
xor
fiadd
(bad)
es
(bad)
or
or
jns
sbb
jne
(bad)
in
int3
push
mov
repz
cmp
dec
movs
in
inc
cli
out
(bad)
cmp
mov
mov
imul
ja
scas
sar
pop
sahf
loop
bound
xlat
lods
xor
sbb
jnp
dec
sbb
data16
push
je
jbe
xor
dec
or
aaa
and
and
sub
mov
pop
ret
jmp
call
cmps
pop
fwait
add
ss
inc
jge
lods
(bad)
int
dec
or
daa
lods
into
test
pop
adc
daa
outs
pop
fmul
imul
fnstsw
fsqrt
ret
pop
xor
mov
shl
jle
or
pusha
or
loop
sbb
daa
rol
jp
int3
ret
leave
es
pop
xchg
lods
int
xchg
xor
sub
mov
sub
sar
retf
and
and
fldcw
push
lahf
jg
enter
fcomp
or
xlat
ficomp
add
and
push
aad
pop
dec
add
fldenv
jmp
mov
jbe
sahf
shr
pop
cmc
xor
test
add
sub
inc
enter
shr
call
lods
stos
mov
es
sub
add
repnz
jecxz
jnp
jmp
cld
push
lea
mov
sbb
ret
add
xchg
adc
arpl
stos
(bad)
(bad)
xchg
push
retf
inc
pavgw
mov
add
pop
sub
mov
sub
jp
gs
dec
and
call
test
fwait
loop
xor
icebp
ret
cs
fucomip
jb
cmc
pusha
cwde
jo
xchg
and
sbb
sbb
call
inc
cdq
imul
jmp
or
jo
xor
push
sbb
iret
iret
das
ficomp
cmp
mov
xchg
lds
imul
ret
(bad)
in
xor
xchg
cmp
inc
out
add
neg
mov
gs
cli
loope
out
jne
push
cdq
or
mov
xlat
int3
imul
xor
jmp
fwait
xor
aaa
ret
(bad)
jnp
frstor
loopne
sub
(bad)
jnp
inc
adc
rcr
push
inc
dec
aad
loope
jo
jecxz
push
add
mov
jmp
push
sbb
(bad)
add
and
mov
pminub
dec
retf
in
jge
stc
call
aas
adc
mov
out
adc
(bad)
mov
into
(bad)
lock
adc
cs
jae
popa
cmp
xor
imul
cwde
pop
cli
les
xchg
fadd
jmp
fld
(bad)
js
ja
fcomp
inc
inc
fs
mov
adc
into
or
add
jmp
push
lahf
retf
ja
mov
inc
xor
pavgb
adc
ret
scas
pop
sub
fisub
and
arpl
sub
sbb
and
push
daa
out
cmp
mov
nop
jb
loopne
xor
cmps
cmps
icebp
ss
retf
adc
adc
and
popf
stc
dec
pop
xchg
cdq
cmp
cmp
inc
cmps
add
(bad)
push
cmps
ds
int3
and
inc
adc
sub
adc
fidiv
rcl
push
in
jle
loopne
or
retf
shl
sbb
inc
add
loop
xor
jp
mov
fst
push
xchg
iret
dec
jmp
dec
and
add
inc
gs
lahf
leave
das
jmp
xchg
outs
xchg
retf
data16
mov
cmp
and
pop
call
add
adc
(bad)
std
push
cmc
dec
retf
out
test
test
push
rcr
and
sub
sub
or
jo
inc
sbb
dec
jge
cmp
xor
push
leave
lods
cld
das
ins
shr
or
aas
call
data16
data16
test
jmp
sub
sbb
bound
adc
mov
in
fsub
or
xchg
data16
mov
xchg
xor
pop
cwde
fwait
xchg
rcl
mov
loope
ds
mov
adc
adc
mov
es
scas
sbb
scas
stos
repnz
jb
enter
test
mov
xor
dec
sub
mov
xor
scas
addr16
push
js
jns
inc
cmp
add
and
test
mov
mov
ffreep
xchg
or
or
sub
lea
jo
lahf
ins
shr
jle
adc
adc
jmp
mov
pusha
in
xor
sar
js
push
fs
jns
je
into
int
leave
or
mov
out
and
bnd
mov
addr16
data16
js
imul
test
mov
add
shr
shr
push
xlat
dec
fisub
jns
dec
mov
or
adc
fisttp
xor
sub
cmp
and
arpl
lahf
add
or
xor
mov
mov
add
unpcklps
mov
mov
fistp
mov
jae
sti
jo
outs
jmp
ror
daa
lods
test
lods
jmp
fcomp
js
cs
out
test
sar
pop
scas
and
dec
mov
add
stos
loopne
out
adc
jmp
jnp
es
lods
dec
add
xor
and
ins
nop
xlat
dec
dec
push
fistp
push
sub
pusha
popf
inc
push
out
jp
mov
imul
mov
fild
sbb
xchg
fdivp
mov
int3
jmp
shl
sub
lock
fild
das
add
jge
movs
jmp
mov
shr
out
loope
stos
(bad)
mov
in
push
daa
xchg
imul
sub
bound
dec
sub
lea
ins
mov
lods
call
pop
daa
mov
pop
ins
sahf
inc
sub
(bad)
dec
mov
jne
add
adc
ret
out
aad
dec
xchg
mov
xchg
out
and
jge
retf
jbe
or
sub
add
adc
or
cmp
jbe
mov
out
daa
shl
adc
movs
out
push
or
lock
pcmpeqw
cld
and
out
dec
fsub
add
lahf
dec
lods
cmp
sub
stos
das
adc
jmp
dec
idiv
fcmovnbe
sbb
pushf
loopne
ins
lahf
sbb
pop
repnz
scas
scas
or
fimul
inc
push
fidiv
and
dec
rcr
push
test
enter
in
fdiv
ins
jmp
inc
gs
jne
xchg
icebp
mov
sub
fisttp
add
sahf
push
clc
xor
int3
inc
adc
cmps
push
jge
rcl
inc
or
rcl
add
and
dec
jg
cs
jns
sub
fwait
cmp
or
(bad)
(bad)
push
adc
out
inc
mov
or
fmul
sbb
rcl
sub
pushf
test
or
clc
rcr
fisub
inc
inc
dec
fs
mov
ds
and
add
fucomi
mov
sbb
(bad)
cmc
mov
shl
sar
mov
jne
(bad)
or
mov
cmp
test
sub
(bad)
mov
movs
push
xchg
mov
adc
shl
ret
adc
adc
div
xchg
mov
mov
sub
clc
cmp
cmps
mov
mov
popf
xchg
jecxz
std
nop
(bad)
ins
arpl
leave
sub
pop
or
clc
ds
xlat
out
lea
xchg
(bad)
retf
out
clc
fnsave
loop
mov
je
into
mov
pop
xor
outs
fsub
scas
xor
cs
pop
xor
aam
push
pop
jno
jecxz
dec
push
into
popa
aad
sub
sub
mov
fisttp
mov
shl
xchg
in
push
jp
cmp
in
xor
test
and
rcl
imul
mov
cmps
lods
xchg
mov
xor
into
pop
ss
jmp
mov
aaa
xchg
mov
aad
hlt
add
sub
sub
cmps
test
mov
mov
lds
or
sub
add
adc
test
mov
sbb
jmp
inc
adc
jnp
xchg
cmps
fst
or
cmp
cmp
div
cmp
adc
xor
push
push
pop
xchg
shl
idiv
test
pop
cmp
es
mov
pop
add
push
nop
push
ja
ins
(bad)
or
test
mov
push
call
icebp
xor
and
in
loopne
rcr
ret
mov
adc
in
cmp
cmp
sub
xchg
dec
jmp
push
popf
je
or
pusha
ja
fs
das
mov
fwait
mov
ror
dec
dec
popa
or
mov
and
and
dec
lods
mov
dec
sbb
int
cli
inc
pop
mov
sub
sbb
and
lods
and
sahf
mov
rcr
ret
pusha
mov
xchg
das
adc
push
retf
jmp
pop
cmp
inc
test
or
(bad)
popa
psrlw
or
loopne
push
mov
dec
xor
bound
rcr
mov
mov
pusha
out
push
idiv
push
inc
xchg
jmp
mov
cdq
lahf
outs
sbb
jecxz
ret
pusha
in
sbb
xchg
or
sahf
mov
mov
les
xchg
xchg
stc
loop
in
adc
mov
lds
jno
imul
(bad)
mov
pop
fwait
sbb
inc
stos
test
sbb
jno
mov
ss
pop
xchg
fsub
sub
cmp
add
leave
dec
and
(bad)
cmp
(bad)
(bad)
cmps
dec
ret
pop
or
add
int3
cmp
fimul
pop
int
daa
lock
loope
add
les
mov
and
test
jp
ds
call
xor
inc
mov
cmp
loopne
sbb
hlt
nop
movs
inc
push
sub
repz
or
test
inc
icebp
inc
jo
add
sub
std
xchg
fadd
fwait
aam
jecxz
adc
cmp
inc
arpl
int3
and
mov
add
shr
push
add
xor
mov
int3
dec
mov
lea
sub
or
mov
xchg
aaa
jmp
pop
enter
adc
cmp
loope
push
adc
pop
and
xchg
(bad)
add
imul
(bad)
mov
mov
aaa
add
sub
lea
inc
dec
mov
inc
mov
pop
inc
jp
push
sbb
dec
inc
adc
movs
push
sub
clc
xchg
inc
and
aam
in
retf
das
(bad)
ret
mov
gs
cmps
mov
out
jge
and
lock
imul
sbb
pushf
ins
stc
(bad)
cmp
fs
pop
add
aad
call
adc
(bad)
mov
add
sub
dec
xchg
in
test
(bad)
ins
jb
pop
arpl
pop
inc
mov
fwait
inc
pop
ds
mov
jo
cmc
inc
call
(bad)
jl
fisttp
test
mov
test
js
je
stc
jmp
movs
sub
adc
jno
mov
xchg
push
fdivr
xchg
pop
enter
sub
retf
mov
jo
cvtdq2ps
jb
test
cmp
mov
mov
je
into
push
dec
mov
outs
inc
(bad)
adc
sbb
or
addr16
pop
pop
push
adc
cld
mov
test
out
movs
les
repnz
or
and
add
cmp
lahf
add
ret
cmc
scas
pop
xor
out
jnp
or
clc
sbb
lods
iret
cmp
bound
sub
pusha
adc
and
cmp
add
dec
jge
xor
sbb
gs
adc
(bad)
cmc
popf
lods
pop
arpl
adc
mov
out
ret
adc
inc
sub
cdq
ret
add
and
or
outs
scas
jbe
cs
stos
or
mov
fcmovnu
jge
pop
leave
stos
stos
(bad)
icebp
adc
call
into
mov
hlt
fdiv
fnstcw
jns
shl
mov
xchg
(bad)
xor
cdq
in
cdq
adc
or
jp
stos
cdq
in
ret
pop
sub
test
pop
cli
int
sub
sbb
xchg
jmp
add
lods
and
mov
aaa
loop
sbb
push
retf
hlt
ds
pop
mov
ss
fcmovne
bound
dec
cld
sub
mov
or
dec
arpl
and
test
jle
test
gs
fsub
pop
sub
div
jns
jb
mov
jno
or
push
mov
jbe
mov
and
fwait
movs
loopne
rcr
shl
mov
inc
adc
or
and
or
mov
aas
out
jne
mov
(bad)
sbb
pop
pop
and
shl
and
mov
jge
xchg
(bad)
dec
adc
mov
pop
jge
xchg
sub
xchg
mov
out
in
cmps
and
pop
push
cmc
fisttp
sub
or
into
ret
add
fabs
lock
jp
mov
test
cmp
aam
fsub
or
fsubr
pop
int
or
adc
cmp
mov
push
(bad)
shl
pop
mov
push
mov
xchg
fidivr
out
js
mov
cmp
xlat
or
mov
xchg
les
(bad)
push
cmp
jge
fucom
cmp
adc
pop
inc
out
bound
cwde
pusha
or
jno
ror
sbb
add
push
mov
mov
retf
dec
add
ficom
and
xor
fwait
sbb
call
test
ror
loope
sbb
mov
lds
cli
popf
sub
test
iret
shr
std
or
scas
xor
jmp
jb
pop
loop
sar
mov
test
mov
mov
pop
inc
xor
cs
repnz
cmp
scas
in
push
and
movs
add
cmp
mov
sar
mov
stc
aad
and
popf
cdq
retf
or
ja
call
loope
jb
test
in
vpmacsww
xor
xor
or
in
and
or
(bad)
mov
repnz
test
jge
pop
mov
add
js
loope
jb
jo
shl
xor
jnp
sbb
xchg
dec
inc
sbb
push
add
jmp
pop
or
mov
mov
sub
mov
xchg
mov
push
mov
sub
jg
and
cmp
and
loopne
inc
aaa
pop
inc
in
es
ja
sub
fstp
xchg
ret
std
sub
cmp
pusha
rcl
clc
sub
scas
add
(bad)
je
cmp
(bad)
add
add
pop
iret
cwde
lock
sub
sub
push
stos
stos
jo
repnz
lea
sub
cs
pop
add
(bad)
aas
movs
or
lods
or
jb
mov
arpl
push
jl
pop
sar
jecxz
inc
push
mov
call
test
mov
mov
pop
mov
push
iret
inc
rol
jl
xchg
imul
xor
outs
cdq
jcxz
lahf
push
mov
xor
mov
mov
outs
cwde
iret
test
cmp
mov
jmp
pop
pop
cmp
and
pop
lds
add
std
lea
lds
cmp
xor
out
mov
sbb
sahf
xor
and
jle
sub
call
pop
lock
loopne
add
(bad)
cmp
and
mov
push
cmps
inc
in
pusha
mov
mov
adc
sub
or
push
cwde
mov
int3
pop
jae
dec
or
jp
les
ret
stc
lods
dec
dec
ins
aam
aam
pushf
(bad)
push
jle
enter
jmp
data16
(bad)
out
push
call
push
lds
mov
in
mov
dec
dec
loop
pushf
sub
xchg
into
pop
pop
or
push
call
lea
add
out
repz
mov
push
leave
or
ins
cmp
mov
or
repz
mov
aas
aad
sub
inc
sub
repnz
cwde
or
outs
lahf
ins
mov
repnz
mov
sahf
jno
inc
fisttp
test
std
inc
inc
repz
jge
or
dec
xor
adc
enter
and
jmp
push
dec
retf
stos
pushf
xchg
repnz
in
cwde
inc
mov
or
xchg
inc
xor
je
xlat
pop
psubsb
jb
clc
shl
jne
in
xchg
movs
call
mov
stc
xchg
sub
shl
jmp
push
jb
and
jbe
sti
pushf
fsqrt
std
js
xor
(bad)
shl
pop
mov
cmp
pop
xor
sbb
mov
push
sub
and
pop
sub
hlt
mov
mov
xchg
pop
ja
dec
cmps
js
adc
add
push
jno
aam
push
lds
out
sbb
cmp
addr16
cmp
adc
aam
stos
mov
psadbw
dec
inc
inc
mov
jne
outs
add
add
lods
dec
cmp
dec
sub
imul
pop
xchg
sub
mov
mov
sub
into
sub
mov
sub
adc
add
mov
inc
cmp
retf
adc
or
mov
adc
and
ret
mov
and
movs
xor
ror
jle
inc
xor
inc
into
and
adc
xchg
mov
mov
push
sub
xor
dec
add
fnstenv
in
loop
pop
inc
inc
mov
mov
jae
popf
out
add
loop
xor
dec
push
push
loopne
int
push
sar
sahf
lahf
fbld
push
or
mov
and
jne
mov
not
cli
retf
ret
aam
xor
push
sub
icebp
addr16
pop
jp
cmps
push
imul
stos
les
std
ret
fs
bndldx
ss
jb
inc
je
popa
cmc
loopne
(bad)
jne
mov
cmc
mov
aas
fs
push
jmp
lea
jns
jns
jle
sbb
jge
je
jo
jge
xchg
push
xchg
add
imul
dec
jnp
scas
cmp
rcr
mov
out
nop
stc
dec
xor
xlat
push
adc
add
fnsave
and
adc
mov
cdq
dec
xchg
sti
cmps
cmp
push
dec
cmp
push
inc
lock
iret
int
cli
push
cmp
sub
mov
lods
jno
call
sbb
jl
imul
bound
push
push
(bad)
rol
scas
std
jp
scas
xchg
push
mov
adc
cmp
mov
sbb
fild
and
mov
add
enter
add
jnp
adc
stos
pusha
daa
mov
jae
and
rcl
jns
cmc
cs
jg
int
dec
fmul
data16
adc
outs
imul
fxch
add
imul
pop
pop
sub
mov
addr16
mov
or
cld
adc
mov
pop
repnz
(bad)
sti
mov
pop
stos
inc
sahf
imul
sbb
aas
test
inc
and
imul
push
mov
ins
out
add
(bad)
mov
rcl
inc
(bad)
rcl
pusha
xchg
push
lock
xor
std
stos
dec
sar
std
call
jbe
jecxz
cmp
push
or
and
ja
sbb
fcomp
outs
rcr
pop
sbb
int3
xor
jo
cwde
lods
mov
and
iret
sbb
jle
call
cwde
mov
aas
pop
je
adc
mov
in
sbb
aam
cld
xchg
sub
sbb
hlt
clc
int3
or
pop
cmp
loopne
push
ficomp
daa
pop
aaa
dec
push
push
hlt
push
push
outs
jo
or
dec
and
xchg
mov
mov
fmul
push
pop
pop
mov
mov
jne
ret
test
in
in
dec
inc
pop
outs
scas
or
outs
push
mov
mov
iret
push
ja
mov
xor
mov
test
sbb
mov
ins
and
dec
xor
js
lds
mov
movs
loopne
test
push
fiadd
aad
test
jmp
adc
enter
or
xchg
sti
ins
aas
mov
cli
(bad)
outs
fimul
pop
push
cmp
or
push
and
dec
mov
imul
push
xchg
in
adc
inc
mov
in
ds
(bad)
(bad)
out
add
inc
fldenv
push
mov
or
inc
sub
pop
push
jmp
retf
pop
fcmovu
nop
fidivr
pop
cmp
out
and
dec
jb
nop
outs
push
cmp
jl
fsubr
out
cmp
push
enter
stos
sahf
pop
imul
push
xchg
inc
xor
sbb
adc
sar
mov
fdiv
lods
sub
adc
ja
cwde
pop
fst
sbb
repnz
jp
mov
iret
lahf
outs
retf
mov
cdq
sub
inc
mov
pop
xor
xchg
mov
test
loope
push
out
shl
xchg
jne
push
icebp
sahf
cmp
mov
xlat
test
test
pop
dec
jecxz
(bad)
sub
ja
push
ins
add
push
push
fwait
sub
sahf
cli
popa
xchg
jg
mov
bound
mov
lods
or
fiadd
mov
loope
cmp
fnstcw
mov
pop
js
mov
adc
enter
mov
push
outs
call
or
je
pop
test
push
add
xor
cmc
dec
repnz
fdiv
jg
ins
call
sub
outs
inc
test
movs
mov
xchg
jp
sub
add
push
in
inc
sbb
fiadd
fmulp
je
add
mov
enter
nop
das
xor
jecxz
les
fwait
xlat
mov
gs
fwait
sar
mov
aam
hlt
push
adc
cmps
cmps
cmp
cmp
or
jbe
pop
(bad)
or
in
mov
cmc
in
cmps
scas
xchg
fcmove
lock
in
sbb
test
pop
popa
scas
das
cmps
in
int3
xchg
adc
pop
nop
scas
movs
repnz
jg
jne
sub
call
mov
sbb
cdq
popa
xchg
cmc
and
mov
sub
(bad)
jp
sahf
pop
cmps
xchg
mov
ret
inc
xchg
stos
mov
mov
xlat
ret
push
sbb
cmp
cmp
jecxz
ret
xor
jbe
aam
fimul
inc
xlat
lods
into
pusha
daa
fninit
in
mov
dec
cmp
push
ins
cmp
dec
sbb
int
cmp
xor
cmp
in
inc
lahf
push
fadd
fwait
jecxz
and
adc
fldcw
int3
mov
mov
neg
mov
push
idiv
jge
lods
scas
add
test
idiv
retf
jb
and
not
mov
jp
and
add
pop
xlat
gs
sbb
aaa
jg
fnstenv
fwait
addr16
scas
nop
ja
pusha
je
or
cmp
push
add
(bad)
xor
and
pop
ror
or
mov
xchg
jbe
or
sbb
cmp
add
jp
mov
dec
gs
mov
(bad)
enter
sar
push
retf
or
pop
push
fnsave
fmul
sahf
lea
jb
jl
inc
sub
jnp
inc
adc
mov
inc
or
mov
and
scas
xor
outs
stc
mov
jmp
jle
dec
pop
push
pop
stc
call
cmc
scas
not
cmp
aad
call
jmp
sbb
jg
mov
xor
xchg
(bad)
repz
cmc
movs
arpl
lds
rcr
cmp
stc
pop
mov
xchg
pop
sub
cmp
inc
in
mov
mov
shl
pop
fstp
xchg
add
stc
std
(bad)
fcom
scas
fnstenv
dec
push
sub
lds
add
push
mov
js
or
das
cmps
pop
inc
cmp
bswap
(bad)
shl
inc
cmp
dec
xor
xchg
push
jg
movs
mov
sahf
add
mov
test
scas
in
mov
movs
xchg
lods
mov
inc
int
inc
das
add
sahf
jns
out
jecxz
sub
mov
adc
jnp
(bad)
pop
push
shr
dec
add
sti
icebp
in
imul
xchg
push
or
movs
xchg
xor
jp
mov
stos
cmp
jne
add
daa
imul
inc
add
icebp
loope
lods
jl
retf
jmp
and
icebp
inc
clc
push
call
cmp
jmp
std
daa
movs
loope
iret
add
push
pusha
dec
jno
mov
push
imul
xlat
xchg
inc
outs
pop
mov
outs
imul
bound
xchg
int3
jne
jmp
scas
cwde
into
jecxz
push
cmp
dec
mov
daa
add
jno
xor
outs
dec
push
cmc
cmp
mov
mov
cmp
mov
inc
mov
je
xchg
fdiv
pop
cmp
jge
std
xchg
movs
mov
mov
mul
and
jl
pop
ret
sub
mov
dec
adc
repnz
or
add
adc
add
push
mov
pop
ud0
jae
dec
pushf
scas
adc
popf
ret
push
jbe
xor
rcr
fnsave
jne
mov
push
fcmovnb
cmp
test
and
in
shl
imul
inc
xchg
fld
mov
and
int3
inc
fucomip
aas
js
dec
call
fbld
add
push
cli
loope
out
loop
sub
movs
dec
pop
loope
into
or
add
lahf
inc
mov
cld
test
mov
cmp
push
std
cmps
(bad)
or
jecxz
test
mov
push
lods
sar
clc
lea
dec
dec
mov
movs
ret
pop
cmp
rep
push
xchg
adc
sti
jne
add
dec
pop
inc
pop
ins
push
mov
add
cmps
pop
push
jmp
mov
pop
(bad)
sbb
int3
push
sahf
dec
dec
jnp
(bad)
jecxz
pop
mov
pop
xchg
jecxz
fmul
lock
out
and
call
outs
jns
test
inc
jns
pop
jns
jmp
xchg
jne
push
in
call
ret
cmps
add
inc
push
sti
xchg
imul
cmp
xor
jbe
aad
or
xlat
pop
aam
and
in
mov
lds
test
xchg
fcomp
sub
fbld
arpl
stos
mov
sbb
mov
add
jge
push
jg
stos
mov
fimul
jmp
repnz
jmp
popa
mov
fdiv
xlat
cmp
mov
sbb
jno
pop
adc
cwde
test
leave
in
int3
adc
fdiv
(bad)
dec
lock
pop
adc
lea
test
sub
jb
sti
sahf
or
xor
ds
gs
outs
dec
cmp
adc
shl
mov
ffreep
cmc
daa
and
xor
repnz
movs
(bad)
test
or
dec
cmps
shr
push
sub
adc
fidiv
mov
(bad)
sbb
mov
out
push
mov
fcom
ja
inc
loopne
sbb
int
fdivrp
cld
jp
jnp
pop
lock
mov
outs
or
ins
scas
into
pop
or
or
fcomi
ret
lock
jbe
jmp
(bad)
add
sub
add
call
arpl
add
pop
sub
lods
sar
ins
mov
inc
rol
add
sub
in
mov
jne
jae
mov
mov
sti
pop
hlt
jge
cmp
movs
shl
cmp
stos
test
adc
adc
pop
adc
push
sub
cmp
ds
ja
scas
push
outs
pop
xor
mov
add
ins
jmp
jae
in
outs
jns
xor
mov
and
xor
sbb
pop
iret
mov
in
push
std
cmc
jp
and
in
shr
adc
test
mov
push
cmp
(bad)
dec
push
pop
dec
mov
sti
sub
inc
pop
out
mov
jl
iret
add
xor
add
inc
sub
adc
sbb
int3
shl
jp
mov
cwde
(bad)
xlat
je
popf
mov
jge
mov
or
adc
add
movs
add
out
rol
cmp
lds
push
outs
mov
test
lahf
es
push
sti
push
mov
mov
pop
bound
pop
int
xchg
mul
xor
stc
int
mov
mov
in
mov
inc
xchg
imul
cmps
or
out
out
pop
push
int
cmp
scas
movs
jne
mov
fisttp
pop
jge
cmp
add
mov
jecxz
mov
mov
dec
lahf
and
pop
das
add
add
cld
daa
daa
mov
cmps
push
dec
push
fisubr
push
pop
dec
aam
pop
ins
sub
cmp
xor
add
out
push
in
sub
add
xlat
mov
out
inc
push
jl
pop
xchg
fwait
std
pop
jmp
clc
add
mov
sysret
ins
push
mov
aad
sbb
mov
or
mov
mov
mul
and
sbb
pop
add
sbb
jne
or
push
add
lock
popf
iret
mov
sub
pop
adc
test
push
and
mov
jge
fidivr
jl
cmp
cdq
enter
sub
cli
clc
xchg
aas
pop
(bad)
(bad)
pop
pop
test
out
shr
mov
icebp
stc
jbe
cmp
ins
mov
mov
lea
pop
cmp
push
sub
push
dec
sub
xchg
lods
xchg
ror
sahf
and
out
(bad)
cwde
jmp
fnsave
cmp
imul
sbb
or
xchg
push
jmp
(bad)
push
aaa
or
fmul
jae
fbstp
push
adc
das
movs
repz
sar
in
cli
fwait
int3
enter
and
mov
in
xlat
mov
xlat
pop
mov
loop
in
inc
sub
imul
mov
push
inc
sbb
jnp
cmc
push
cmc
mov
adc
test
mov
jae
xor
sahf
adc
or
int
das
daa
mov
dec
jnp
bound
mov
mov
fnstcw
push
sub
les
dec
mov
mov
mov
bound
inc
in
sti
adc
inc
xor
jecxz
and
mov
push
cld
add
mov
dec
cli
and
aas
outs
sti
and
loopne
jno
pop
xchg
in
repz
imul
aas
jmp
fcomi
xchg
test
outs
imul
in
movs
sub
cli
div
add
(bad)
shr
rcl
lea
push
xor
push
cmp
add
pop
and
inc
jb
dec
add
fcom
mov
add
pop
scas
into
std
dec
dec
das
loopne
pop
cli
rdtsc
jnp
mov
jno
repnz
mov
adc
sub
scas
inc
adc
stc
in
or
sub
cmp
mov
fsubr
fsub
or
lock
push
adc
push
outs
and
out
jp
pop
and
lods
lds
inc
pop
cmp
and
(bad)
inc
aas
inc
imul
mov
fwait
cmp
das
pop
mov
pop
int3
ret
mov
test
push
jg
jmp
or
cld
pop
push
mov
or
inc
mov
push
mov
sub
mov
add
or
or
ins
inc
xor
or
hlt
mov
jmp
or
pusha
iret
popa
or
rcr
mov
xchg
imul
into
and
ss
xor
push
retf
lods
in
mov
cmps
and
xchg
adc
mov
arpl
add
adc
dec
adc
mov
ins
mov
fst
sub
fistp
mov
add
mov
rcl
adc
aaa
aam
outs
sbb
imul
les
cs
mov
xchg
push
jge
cmp
rcl
push
adc
push
push
mov
in
inc
mov
push
xor
out
adc
jnp
sahf
mov
pop
shl
dec
dec
jns
cmp
(bad)
out
jnp
shl
mov
hlt
icebp
fsub
lds
dec
rol
pop
mov
pop
movs
in
cwde
mov
inc
or
jge
stac
and
cmc
and
mov
adc
lds
sub
shl
out
mov
push
mov
sub
xor
fisub
repnz
pop
xor
repnz
lods
xchg
pop
add
sub
fnstenv
pop
jns
add
mov
in
outs
push
(bad)
call
or
mov
mov
fldenv
sbb
pusha
outs
(bad)
loopne
stos
loopne
mov
add
cmp
test
pusha
dec
push
js
mov
sub
xchg
sub
push
(bad)
js
iret
jo
jnp
or
jmp
mov
lea
(bad)
fist
das
loopne
lods
frstor
mov
rcr
push
dec
add
xchg
cmc
sbb
sti
or
into
(bad)
and
push
add
sbb
xchg
fisub
mov
data16
es
dec
pop
inc
rol
retf
nop
xchg
jg
lds
xor
mov
(bad)
xor
push
cmc
sar
imul
hlt
fcmove
rcr
and
in
shl
cli
cdq
std
sbb
sub
js
jae
adc
pushf
mov
nop
fcomip
xor
cmp
add
jbe
add
es
add
push
icebp
inc
lds
scas
scas
xchg
push
loope
aaa
cmps
lods
mov
(bad)
inc
rol
aaa
(bad)
fsub
and
inc
cdq
add
les
jno
mov
and
or
fbstp
add
fs
mov
clc
mov
mov
jno
mov
test
mov
aam
popf
mov
cmp
rol
(bad)
(bad)
xlat
lahf
sar
inc
mov
inc
sub
mov
adc
daa
jle
dec
or
pop
jae
push
pop
xchg
je
push
jb
icebp
xor
test
shl
xchg
add
xchg
lahf
lods
xchg
out
sbb
pop
iret
(bad)
sar
pop
popa
shr
xchg
add
aad
push
dec
push
shr
pop
dec
jb
fild
pop
daa
xor
sbb
es
mov
movs
ja
mov
or
lods
push
call
unpckhps
adc
pop
or
mov
(bad)
xchg
push
scas
xchg
inc
lods
cmps
mov
adc
sbb
fstp
repz
jl
movs
dec
adc
aas
or
dec
inc
in
mov
and
stos
mov
xchg
inc
pop
iret
in
and
jo
pop
ins
outs
push
mov
jmp
xchg
aas
push
call
cmp
and
jle
movs
loop
mov
mov
pop
jbe
mov
out
out
scas
pop
cli
jg
fadd
mov
sub
pop
mov
outs
sbb
jnp
out
in
imul
dec
jmp
out
inc
repz
mov
sbb
or
push
jo
or
scas
mov
fidivr
pop
movs
cmp
in
loopne
xor
xchg
sbb
xchg
push
mov
ret
xchg
fdiv
xchg
into
cli
inc
cld
movs
fwait
pop
lds
ins
jae
mov
iret
popa
mov
mov
cdq
popa
fnstcw
cmp
inc
pop
push
pop
fdivr
rcl
imul
push
fidiv
mov
call
fsub
scas
sub
jg
jae
mov
aas
xchg
dec
ds
addr16
in
push
int
fdivp
jae
fidivr
fimul
jge
ins
mov
scas
movs
dec
loop
cmp
push
cdq
shl
lock
fist
stc
xchg
push
xchg
sub
(bad)
scas
or
push
sub
ss
sbb
xor
scas
mov
js
xor
mov
xlat
jns
mov
mov
stc
into
mov
push
push
mov
add
cmp
dec
ret
jmp
cld
xor
sub
mov
push
cld
and
push
fisubr
sub
sub
cs
pop
cs
jbe
rol
ret
imul
jg
adc
cwde
arpl
dec
aam
jb
fcmovbe
cmp
mov
mov
jge
inc
fs
ins
inc
out
in
add
xor
sub
dec
dec
je
cmp
cmp
jns
cmp
mov
call
sub
shl
repnz
iret
popa
cmp
stc
in
das
sahf
sbb
in
mov
jecxz
aaa
pop
xor
inc
add
sub
lds
fwait
mov
es
imul
and
mov
int
ins
(bad)
(bad)
aad
or
add
pop
fsub
mov
jbe
mov
mov
retf
add
stc
out
dec
jp
(bad)
stos
pop
(bad)
xchg
ss
idiv
lahf
jbe
cmp
jg
ror
jmp
fisub
cmc
inc
mov
lds
pop
dec
movs
sbb
or
xor
dec
adc
fild
pop
jae
(bad)
fstp
xchg
hlt
sbb
xchg
add
add
out
push
rcl
and
int3
and
jmp
in
mov
sar
adc
push
dec
(bad)
mov
test
jbe
inc
loopne
fdivr
pop
scas
popa
adc
sub
sub
xor
pop
sub
sahf
sbb
inc
sub
jmp
and
and
push
pop
lock
inc
lods
pop
mov
(bad)
scas
enter
xchg
add
(bad)
or
xchg
xchg
fwait
or
into
repz
(bad)
cli
rcl
cmp
push
xchg
leave
inc
(bad)
xor
xchg
sub
push
dec
dec
jns
pop
loop
imul
push
pusha
sti
mov
xor
cmp
inc
imul
add
fcmovu
ficom
aas
je
xchg
mov
lods
out
clc
fiadd
ret
push
cmp
cs
mov
mov
pop
dec
inc
retf
test
fcomp
or
stc
xlat
pop
and
(bad)
push
sub
cmp
mov
pop
fucom
aam
fwait
data16
and
nop
cmp
dec
or
(bad)
mov
push
and
inc
pop
dec
and
rol
movs
pushf
jnp
fxch
es
mov
inc
mov
mov
pop
pushf
fidivr
and
pop
add
sahf
mov
jbe
push
add
shl
add
(bad)
cmps
sub
adc
mov
xor
cld
addr16
test
daa
bound
inc
aaa
inc
test
dec
fld
inc
repz
inc
(bad)
repz
dec
and
cmc
div
ins
cmp
ret
pop
aad
ja
add
jge
(bad)
cdq
mov
lods
push
ja
mov
add
mov
inc
inc
test
pop
test
dec
dec
sar
pop
pop
add
movs
std
or
jno
fimul
or
aaa
push
mov
lds
xor
shl
fdiv
or
xor
test
les
in
repz
mov
and
xchg
into
sbb
jl
adc
jp
add
pop
pop
xchg
lds
inc
pop
push
push
call
sar
retf
xor
in
int
test
imul
inc
ss
mov
pop
jnp
dec
aas
cmp
dec
cs
xor
shl
into
pop
dec
push
jp
test
scas
ds
add
jle
scas
add
ss
cli
or
sbb
adc
push
sub
popa
popa
pop
loopne
les
arpl
xor
push
(bad)
and
std
cmp
cmp
(bad)
inc
or
and
mov
hlt
mov
std
cmp
jb
cmc
adc
loop
sahf
cmps
test
or
add
xchg
mov
xor
and
sub
aaa
fiadd
push
dec
movaps
xchg
add
push
mov
mov
sbb
and
cmp
enter
mov
shl
mov
push
test
xlat
loopne
addr16
ret
fild
ret
mov
mov
lock
lock
cli
stc
jbe
sub
sbb
xchg
push
lahf
xlat
adc
xchg
xchg
mov
add
xor
adc
stos
xchg
and
inc
stc
jg
mov
push
icebp
mov
xor
adc
lods
push
sti
sub
mov
into
sub
test
fisttp
test
sbb
push
push
dec
mov
hlt
push
dec
push
(bad)
sti
or
(bad)
fcmove
test
loope
lea
retf
mov
int
sar
mov
jl
adc
call
js
call
jmp
mov
xor
ja
cmc
aas
and
jne
ficomp
pop
dec
fidivr
push
lods
out
scas
push
dec
cld
std
repnz
fistp
loope
xor
fwait
icebp
and
jnp
jl
loopne
jno
mov
fs
ret
lods
adc
sub
imul
or
mov
xchg
inc
mov
rol
inc
cli
ret
xchg
xchg
sbb
inc
sti
add
ror
out
jp
shl
arpl
imul
adc
lahf
mov
xchg
lods
push
add
aas
retf
cmp
xchg
sub
aad
(bad)
int
lods
sub
popa
sub
jle
ss
xlat
mov
sbb
(bad)
push
xchg
in
dec
clc
adc
scas
lea
adc
jno
lds
jns
aaa
or
adc
loope
cmp
cmps
call
jmp
ja
inc
inc
sahf
lahf
push
and
jbe
sbb
and
mov
fist
mov
ins
cs
pop
pusha
jbe
jns
mov
mov
pop
dec
sbb
mov
(bad)
jp
push
xchg
ror
jmp
push
inc
push
int
jmp
mov
icebp
xchg
cmp
jp
push
or
jp
movs
dec
das
add
mov
or
mov
fsubr
mov
mov
fisubr
xor
jnp
xchg
push
fdivp
popa
ret
push
mov
adc
push
outs
and
imul
fnstsw
mov
fs
xor
sbb
cmp
pusha
test
outs
add
push
or
(bad)
inc
jmp
adc
mov
aaa
dec
mov
and
test
fiadd
mov
cmp
fidiv
pusha
sub
add
les
adc
or
sub
sti
add
ret
xchg
call
in
mov
pop
sti
call
jmp
adc
mov
sbb
ret
das
xchg
mov
jg
(bad)
icebp
adc
jno
jno
inc
adc
mov
jp
jg
inc
loope
daa
add
fwait
out
clc
std
stos
scas
jbe
mov
int
adc
jl
or
div
inc
adc
(bad)
shl
loop
out
inc
movs
or
mov
inc
xchg
loope
ja
and
jnp
pop
mov
bound
and
and
adc
jl
xchg
xor
cli
(bad)
jne
sbb
pop
fnstsw
test
fwait
iret
(bad)
cmp
mov
dec
cmp
jg
in
sub
push
mov
dec
dec
leave
mov
mov
mov
dec
mov
and
pop
adc
inc
(bad)
jmp
out
bnd
clc
cmp
int3
sub
jae
lea
or
jmp
sahf
repnz
mov
addr16
out
sub
retf
jo
sub
out
mov
inc
bound
push
xchg
ret
push
(bad)
stos
rcr
xor
std
pusha
cld
cwde
pushf
jns
(bad)
je
(bad)
aas
mov
sub
popa
jle
pop
and
adc
scas
add
mov
and
mov
mov
lods
push
xor
imul
(bad)
leave
cmp
jmp
call
or
jnp
mov
data16
inc
mov
(bad)
pop
push
sub
fidiv
test
je
xchg
or
sbb
mov
lds
cdq
mov
push
mov
(bad)
xor
mov
aam
adc
hlt
popf
push
cmp
cdq
dec
cmc
cmps
or
inc
lods
mov
dec
ds
mov
inc
test
sbb
test
inc
dec
mov
xor
enter
clc
lods
pop
sub
mov
xchg
out
cs
mov
cli
jne
cmp
xor
pop
or
adc
sub
dec
push
mov
cli
sub
aad
push
sbb
add
stos
mov
ja
fdivrp
mov
sub
adc
sar
mov
inc
gs
pop
push
js
cs
xchg
sbb
mov
sbb
fsubp
cdq
adc
sub
pop
test
adc
shr
and
(bad)
pop
push
mov
cs
(bad)
mov
xor
mov
push
jns
push
imul
inc
pop
movs
aad
adc
test
adc
or
xadd
sub
cmp
jb
sahf
or
stos
cmps
popf
cmps
nop
xchg
mov
(bad)
jne
xor
or
rcr
cmps
mov
add
sbb
push
int3
and
ror
clc
sub
test
ins
mov
and
addr16
xchg
jg
lahf
inc
daa
in
ins
shr
adc
pushf
call
data16
cmp
inc
jl
inc
dec
xchg
bnd
ja
jecxz
and
inc
jnp
rol
pop
push
sub
aas
mov
push
call
js
push
cli
lods
bound
add
or
inc
out
sar
stos
outs
add
and
les
repnz
imul
cmp
pop
fwait
inc
retf
es
adc
pop
stos
add
and
jo
lods
loopne
retf
inc
sahf
xor
test
das
inc
movs
sbb
ds
push
inc
(bad)
cmc
lods
in
test
xchg
xor
mov
in
cli
call
pop
dec
and
add
lahf
jg
je
jle
lea
std
inc
mov
jmp
call
stc
es
xor
adc
loop
repz
fneni(8087
in
shl
nop
ins
call
movs
add
mov
int
je
stos
call
sbb
call
repnz
jle
scas
dec
mov
sbb
dec
int
mov
adc
jp
xchg
dec
(bad)
fwait
ins
lea
test
push
mov
and
xchg
add
mov
cld
jbe
push
(bad)
out
popa
adc
adc
fs
xchg
mov
or
imul
and
sub
jl
mov
je
dec
es
call
(bad)
push
addr16
xor
ss
ds
aas
push
push
pop
rol
imul
jb
jmp
mov
dec
cmp
test
inc
cmp
and
or
add
sahf
add
mov
push
cmp
sti
sub
push
ins
jo
pushf
push
jp
sbb
jp
pop
cmp
jg
xchg
sub
and
das
sub
ret
test
or
ret
ins
inc
pop
push
jbe
xchg
xchg
retf
imul
fs
xchg
out
fcomp
or
mov
js
icebp
or
cwde
push
push
cwde
pop
jecxz
adc
(bad)
cmps
aam
mov
mov
inc
addr16
dec
fld
out
dec
xor
xchg
dec
mov
in
cmp
dec
(bad)
call
pop
mov
xor
out
fistp
jae
hlt
nop
mov
jo
cli
sub
sub
(bad)
xchg
adc
pop
mov
adc
xor
ja
xchg
dec
or
pop
sub
test
in
xlat
pusha
mov
mov
pushf
or
cmp
rol
or
sbb
fsub
loop
fwait
adc
jg
push
xchg
xlat
or
aaa
enter
cmc
fsubr
mov
test
test
xor
popa
jns
scas
fistp
pop
cmp
inc
retf
pop
clc
mov
and
pop
fdiv
hlt
int3
pop
idiv
pop
lds
sub
mov
mov
xor
test
(bad)
mov
fs
inc
in
cmp
rdpmc
(bad)
test
sbb
rcr
and
or
or
mov
cld
int3
push
jp
mov
aaa
inc
sub
inc
ror
xor
stc
fild
out
retf
sar
movs
ret
js
sub
retf
lahf
jo
cmp
pop
cld
xchg
mov
movs
inc
(bad)
sahf
mov
cwde
jns
rcl
fst
mov
push
dec
cmp
pop
pop
inc
jbe
imul
repnz
mov
leave
cmc
mov
jns
test
jle
imul
jmp
jmp
pop
dec
mov
jl
cmp
in
push
movs
cmc
data16
jle
retf
movs
pop
imul
sbb
movs
inc
shl
add
inc
aaa
arpl
hlt
xor
inc
mov
sub
sub
pop
cmp
cmps
or
loop
push
cmps
push
subps
xchg
loopne
call
adc
sbb
bound
fild
scas
retf
imul
push
into
call
add
sub
and
shl
mov
fwait
push
sub
mov
dec
xor
cmp
pop
mov
ds
lock
mov
dec
test
pop
pop
adc
and
mov
icebp
out
inc
cli
imul
call
retf
inc
es
dec
lahf
mov
push
dec
aam
sbb
cmc
and
addr16
cs
cmc
xchg
adc
dec
int
inc
aaa
lds
mov
pop
jo
(bad)
mov
jmp
jmp
xchg
fmul
loope
lods
loope
daa
sti
jmp
daa
ins
sbb
cmp
fwait
clc
pop
mov
hlt
cwde
jecxz
aad
scas
push
adc
or
add
jp
push
dec
mov
pop
adc
stc
vucomisd
add
cdq
and
mov
mov
mov
jecxz
xchg
jle
and
push
cmps
repnz
out
jmp
aam
jmp
pop
cmp
adc
jge
and
push
(bad)
test
mov
out
ret
in
cli
sub
push
je
sbb
pop
add
leave
js
das
dec
jl
ret
and
xlat
les
pop
lahf
jno
(bad)
cmp
fistp
arpl
nop
pushf
ror
inc
inc
lods
adc
fdivp
outs
stos
rol
push
add
sbb
add
or
xchg
pop
xchg
and
fistp
push
xchg
(bad)
loopne
sub
jae
pop
pop
out
movs
inc
popa
arpl
mov
stos
sbb
push
add
int3
mov
cmp
enter
daa
into
rol
pop
mov
lea
jmp
outs
mov
adc
push
mov
ds
cli
add
dec
xchg
leave
add
mov
mov
std
xor
movs
xchg
aas
mov
jge
(bad)
scas
sbb
and
sub
ins
(bad)
and
daa
add
scas
add
xor
mov
frstor
sbb
shl
fs
xchg
scas
sub
popf
add
cmps
push
pop
cmp
dec
inc
inc
jnp
sbb
adc
mov
pop
or
jl
mov
(bad)
mov
mov
hlt
or
sub
rcr
inc
aaa
repz
rcr
sbb
pop
mov
cli
adc
movs
adc
pop
arpl
pop
ror
add
lods
icebp
ss
out
into
es
adc
ret
hlt
repz
xor
add
cmc
xchg
repz
cmc
mov
not
idiv
ss
fsubr
sbb
cdq
xchg
push
push
gs
mov
loop
sub
(bad)
jb
outs
or
jo
enter
inc
(bad)
jp
int
jg
sub
or
(bad)
(bad)
dec
mov
nop
pop
mov
cmc
mov
mov
mov
cmp
stos
lods
or
or
es
sbb
lods
xor
movs
cmp
enter
dec
mov
scas
stos
jecxz
add
jb
fs
inc
jecxz
sub
push
outs
es
mov
sub
xlat
dec
fmul
xchg
imul
aaa
pop
cs
(bad)
loop
shl
pop
mov
mov
add
cmps
pusha
es
test
adc
push
and
sbb
pop
popa
jne
add
cdq
mov
sub
jge
fisub
shr
aas
jns
dec
pop
jb
imul
stos
or
mov
cmp
jge
pop
mov
pop
sbb
mov
ss
adc
mov
cmc
ins
cdq
jne
adc
or
push
popf
in
mov
inc
push
xchg
in
and
mov
cwde
call
sti
stos
xchg
bound
adc
inc
int
push
and
and
hlt
cmp
cmp
clc
push
push
xchg
in
jb
sub
clc
stos
aaa
ds
cmp
mov
mov
sbb
mov
jo
add
gs
ret
sahf
jns
arpl
loope
bound
dec
clc
xchg
rcl
lods
rol
jmp
movs
push
(bad)
stc
inc
jmp
xchg
or
test
daa
xchg
sbb
pop
inc
aad
lods
mov
mov
lods
je
pop
push
ss
push
in
mov
jno
and
arpl
jp
sbb
mov
jecxz
push
mov
ss
cwde
push
jne
(bad)
sbb
call
jmp
mov
cmps
mov
jp
je
xchg
xchg
pop
out
sub
sub
mov
pop
out
jno
fmul
pop
std
mov
lds
test
je
dec
fwait
outs
mov
jl
xor
fmul
mov
inc
dec
push
cmp
cmp
dec
leave
out
mov
fcom
retf
xchg
pop
mov
ffree
mov
and
mov
xchg
lods
hlt
bound
retf
fadd
das
adc
int3
fsub
push
fwait
xchg
xor
pushf
cli
add
cmps
dec
jmp
inc
js
pop
jne
cs
cmps
(bad)
out
stos
push
cdq
ror
es
cmps
add
fs
jge
xchg
push
jge
xor
push
inc
retf
les
pop
aam
dec
or
add
rcl
sbb
outs
jo
or
cmp
cmp
dec
sti
mov
dec
mov
inc
inc
cwde
xabort
cmp
mov
(bad)
fdiv
fistp
loope
mov
mov
call
jmp
push
clc
jbe
dec
pop
imul
sbb
pop
fbstp
sbb
mov
clc
xchg
sub
fist
mov
test
fnstcw
jo
push
vpmadcsswd
sbb
mov
jmp
jle
(bad)
mov
lock
js
jb
mov
hlt
(bad)
js
mov
mov
push
pop
mov
sbb
inc
outs
sub
into
lods
scas
mov
mov
imul
mov
lahf
jle
(bad)
idiv
inc
outs
sbb
enter
call
lods
and
inc
or
ffree
sbb
mov
icebp
lods
movs
int
pushf
aaa
jnp
mov
test
mov
add
mov
ss
inc
fs
lock
ffree
nop
sbb
sahf
scas
ins
fistp
adc
test
data16
add
sar
shr
jmp
fisttp
aad
(bad)
push
jp
cmp
mov
retf
adc
xor
sbb
retf
rol
mov
hlt
push
lods
xor
mov
mov
ja
jl
jle
fidiv
das
nop
jb
and
(bad)
xlat
repnz
xlat
stos
xor
xchg
loopne
ds
sar
dec
and
cmc
std
push
aaa
scas
push
mov
xchg
add
cld
gs
mov
adc
cmp
movs
repz
popa
inc
sub
mov
mov
push
pop
adc
int3
cmps
loope
xor
add
jb
(bad)
test
pop
mov
stc
mov
adc
xchg
pop
jmp
jl
ds
in
ret
xchg
cmps
loopne
daa
dec
popa
out
fwait
pop
cdq
xchg
jecxz
in
in
adc
stos
fs
mov
inc
fldcw
adc
or
mov
adc
ficomp
shl
ret
out
xchg
rcr
push
mov
iret
sub
mov
inc
out
popf
fisubr
cmc
cmp
mov
xchg
mov
loope
jp
scas
pop
(bad)
rol
pop
arpl
dec
into
push
test
cmc
in
sbb
mov
sbb
es
arpl
sahf
pop
imul
not
icebp
lock
mov
dec
icebp
icebp
mov
mov
out
inc
aad
xchg
rcl
xchg
mov
movs
lods
pop
test
cli
jo
xchg
pop
aas
sub
cmp
dec
xor
aas
and
xor
imul
and
cmps
add
and
jnp
hlt
inc
hlt
inc
inc
test
xchg
xor
jbe
cmp
dec
mov
cmp
in
cmp
sub
xchg
add
stos
int
mov
dec
cmp
pop
push
jne
in
mov
jae
xchg
mov
pushf
push
fs
xchg
mov
mov
pop
add
or
and
lods
pushf
das
gs
lods
mov
jno
popa
pop
out
mov
ins
xlat
mov
jmp
outs
jmp
cmp
add
add
add
test
dec
push
adc
(bad)
mov
stc
rol
xor
loop
mov
adc
push
jmp
jno
popa
push
movs
inc
add
js
mov
stos
jecxz
ret
(bad)
cdq
push
inc
sahf
and
retf
jp
fbstp
add
mov
stc
aaa
xchg
repz
inc
dec
(bad)
es
push
rcl
fcom
jno
mov
(bad)
pop
jmp
mov
adc
dec
and
mov
push
fadd
add
mov
push
movs
mov
jmp
rcr
movs
ja
xor
pop
pop
lahf
inc
int
stc
dec
ret
cdq
test
mov
fst
call
xchg
pop
outs
jle
mov
fcom
lods
cmc
imul
adc
hlt
mov
jg
sub
sbb
loop
iret
pop
xor
adc
cs
inc
pop
lock
add
adc
es
int3
add
js
pop
jle
add
ins
jl
sbb
inc
xor
arpl
xchg
inc
sub
and
stos
popf
daa
xor
pop
xor
leave
sbb
(bad)
and
sbb
(bad)
mov
mov
or
push
inc
les
ficom
mov
sbb
mov
pop
and
jb
mov
mov
imul
stos
mov
and
xchg
out
aad
mov
ret
jb
popa
and
(bad)
loop
sbb
mov
cdq
iret
dec
push
in
sbb
imul
punpcklbw
(bad)
pop
dec
jmp
jmp
(bad)
(bad)
mov
or
adc
arpl
mov
cmp
or
daa
inc
lock
dec
fwait
inc
mov
les
mov
movs
add
fcomp
sbb
cmps
xchg
les
js
push
ins
movs
dec
xchg
or
adc
pop
or
out
sbb
pusha
inc
adc
bound
repnz
jae
int
fmulp
xchg
(bad)
xchg
movs
xor
dec
jb
pop
loope
or
sbb
(bad)
enter
fisubr
repnz
sub
jle
push
sub
mov
cli
loop
add
cmp
nop
dec
xchg
outs
pushf
lds
hlt
aaa
aam
push
mov
inc
test
push
in
adc
jle
iret
mov
and
sbb
and
pusha
sahf
sub
mov
mov
sub
(bad)
ins
jg
mov
(bad)
sbb
add
sub
into
or
pop
mov
retf
sar
mov
and
fistp
inc
in
push
xlat
jge
adc
xchg
mov
nop
inc
adc
sbb
and
outs
cli
mov
add
pop
mov
repnz
out
ss
and
dec
scas
sbb
pushf
jo
pop
mov
out
cmc
cdq
mov
sbb
jae
pop
and
adc
lods
sub
pop
(bad)
adc
sbb
pusha
sbb
or
bnd
sbb
fstp
aad
sar
lock
add
push
imul
in
in
cmovae
xor
adc
sub
dec
mov
mov
gs
push
clc
mov
cmp
mul
push
lods
call
jp
pop
cmp
adc
inc
mov
imul
xchg
sub
jae
mov
fimul
push
mov
das
ret
cs
push
jmp
pop
sub
(bad)
movs
bound
xor
ss
aaa
movs
or
push
retf
inc
enter
jno
or
sub
cmps
scas
(bad)
adc
loopne
inc
ret
pop
fcom
nop
xchg
mov
sbb
loope
leave
imul
mov
fist
xchg
rol
sub
and
(bad)
pop
push
test
push
push
mov
or
inc
fdivrp
int
div
imul
sub
jb
rol
sahf
not
rcl
pop
(bad)
push
(bad)
lahf
cmp
and
adc
mov
fdivp
rol
loopne
es
mov
mov
in
dec
lahf
or
fld
inc
mov
and
rcl
jno
or
(bad)
and
mov
aaa
xor
xor
cld
pmullw
and
sti
loopne
xchg
in
retf
and
cld
xchg
xor
shr
xor
adc
add
lahf
test
leave
pop
add
fimul
jmp
pop
mov
scas
mov
push
setb
and
xchg
inc
sar
mov
scas
jmp
mov
mov
or
inc
dec
std
ret
shl
pop
lods
add
aaa
call
out
sbb
sub
(bad)
aaa
(bad)
mov
inc
fnstcw
xor
lock
sti
jge
aam
pop
xor
stos
out
cmp
mov
xor
inc
sub
push
mov
mov
je
mov
adc
jl
arpl
adc
das
adc
outs
fwait
fs
mov
jg
loope
(bad)
sbb
mov
push
(bad)
adc
add
and
aam
push
sub
sbb
pop
cmc
(bad)
jmp
push
add
xor
jg
or
adc
jo
jp
pop
mov
gs
pusha
pop
mov
adc
fnstcw
dec
push
adc
call
dec
and
fisttp
int3
push
sbb
xchg
mov
push
or
adc
sbb
stos
loop
ja
mov
lds
push
(bad)
fsub
cmp
shr
lds
test
mov
pop
in
cmc
mov
push
jb
push
loop
add
cmp
in
dec
fstp
adc
push
xlat
and
mov
fldenv
fld
movs
mov
xchg
and
cwde
mov
push
out
mov
cmp
mov
push
std
add
cmp
mov
daa
into
adc
or
test
ss
jb
or
cmp
mov
js
cmps
dec
mov
in
mov
and
shl
sbb
inc
cmp
push
xor
mov
cld
daa
rcr
mov
sbb
lahf
movs
mov
xchg
sub
xchg
pop
pop
jne
fadd
nop
xchg
pop
inc
retf
mov
ret
shr
in
jbe
push
retf
enter
sub
fisubr
in
push
mov
cwde
fist
mov
xor
mov
mov
xchg
test
jp
xlat
fs
pop
arpl
lahf
mul
arpl
in
jmp
ret
jnp
dec
sub
add
ret
jno
jbe
jns
shr
dec
add
jbe
push
xchg
retf
nop
push
inc
pop
idiv
loop
add
xchg
jno
fsubp
or
fwait
mov
(bad)
dec
mov
and
push
sbb
imul
pop
fs
data16
adc
cs
fist
mov
repz
loope
sahf
frstor
lock
lahf
inc
cmp
or
pop
xchg
mov
pop
cwde
fisttp
mov
nop
(bad)
das
ror
std
out
nop
mov
push
sub
push
jle
(bad)
lods
jmp
retf
cmps
jne
mov
rcl
int
loope
imul
je
and
push
adc
or
and
dec
xchg
into
(bad)
outs
cmp
fldln2
or
int
neg
mov
fldenv
outs
dec
push
mov
dec
dec
fwait
jg
jecxz
sbb
mov
ss
clc
add
push
loopne
test
sbb
lods
enter
(bad)
push
inc
das
xor
push
xchg
xchg
cmps
stos
mov
xor
inc
bound
loopne
mov
mov
cli
push
and
test
push
mov
jg
inc
jne
cmp
into
or
jne
out
push
out
retf
sbb
push
and
push
fs
add
(bad)
inc
mov
and
mov
inc
das
fidivr
scas
inc
or
movs
dec
ss
mov
sub
mov
(bad)
aad
popf
into
add
mov
inc
jle
or
jne
aad
das
inc
adc
jbe
inc
lahf
or
shl
in
icebp
dec
cmps
and
shl
pop
inc
mov
stos
les
nop
je
ja
jmp
cmp
sbb
mov
push
jmp
fimul
popa
adc
shl
xor
aad
in
xor
pop
mov
lahf
enter
adc
bound
sub
loopne
xor
xor
xchg
loopne
mov
out
pop
cmp
or
loopne
aaa
rol
and
or
xchg
or
mov
xchg
nop
fs
fbstp
jge
mov
icebp
jnp
pop
pushf
sbb
sub
mov
icebp
sbb
pop
aam
and
inc
jecxz
add
push
mov
xor
outs
(bad)
add
jge
lea
outs
pop
push
mov
xchg
fdivr
outs
mov
(bad)
stc
sub
lods
xor
rcl
aad
(bad)
xor
je
xchg
movs
cmp
test
aas
jo
mov
aas
sti
addr16
pop
and
sbb
mov
call
(bad)
xor
ins
cmp
ins
sbb
sbb
retf
mov
add
mov
es
jmp
pop
jmp
xor
inc
mov
and
pop
jl
sbb
shr
mov
xor
jno
mov
scas
in
loop
lds
lods
sbb
pop
inc
jo
sub
icebp
repz
pop
or
sub
pop
enter
cmps
push
sbb
mov
jo
repnz
jno
or
dec
int3
inc
lock
mov
inc
inc
ficom
inc
adc
aaa
in
pop
xor
jbe
push
cmc
xchg
out
(bad)
lods
and
lea
lock
xchg
xor
cdq
rol
mov
xor
push
sub
popf
adc
popa
inc
sbb
push
or
jne
xchg
lds
mov
ss
mov
or
into
data16
mov
or
xor
and
and
or
dec
xchg
pop
les
pop
mov
jo
lods
test
retf
hlt
or
lds
bound
xchg
push
jge
xchg
popa
rcr
enter
xor
(bad)
sbb
ret
repz
push
sahf
xor
inc
iret
in
iret
mov
push
cmp
cs
jb
cs
imul
adc
imul
push
xrelease
and
out
xchg
xor
retf
dec
jle
ret
(bad)
pushf
mov
cdq
dec
sbb
ds
jmp
add
inc
fisttp
enter
lods
xor
inc
xor
adc
push
nop
adc
mov
aas
xlat
fcmovnbe
cmp
aam
dec
loop
out
stos
movnti
add
mov
movs
and
movs
jge
sbb
dec
imul
mov
ins
in
mov
add
push
sbb
mov
nop
das
pop
add
and
stos
lods
stos
dec
mov
sub
lds
mov
pop
cld
inc
add
dec
loopne
and
movs
add
jnp
mov
lock
dec
adc
cmps
pop
or
push
jge
pop
rcl
pinsrw
jle
pop
xchg
adc
or
out
ins
(bad)
and
mov
pop
ret
or
inc
pop
fsub
ds
or
and
mov
pop
(bad)
imul
jg
int3
mov
fwait
imul
aas
fcmove
push
sahf
sti
js
add
mov
cmp
sub
dec
icebp
xchg
ror
dec
ret
dec
xor
xor
sub
dec
cmp
stos
loopne
or
mov
cmp
sbb
das
xlat
cs
stos
dec
out
in
push
mul
cmp
or
pop
div
push
dec
cdq
cmp
mov
shl
push
mov
(bad)
sbb
jle
sub
out
adc
cs
mov
sahf
adc
movs
ret
sbb
gs
icebp
mov
jge
icebp
xor
ins
xchg
test
test
cmp
nop
pushfw
shr
mov
push
adc
add
adc
ret
je
test
xchg
ret
add
sbb
mov
mov
xchg
jecxz
fiadd
adc
jg
or
bound
aam
js
xchg
call
shr
stos
mov
and
(bad)
mov
and
pop
jne
addr16
xchg
add
add
sbb
aad
fimul
jecxz
outs
xor
jae
or
pusha
(bad)
push
jbe
test
mov
loop
jmp
test
sbb
mov
dec
xlat
jp
pushf
jle
rcl
imul
cmp
pop
and
int
sbb
cmps
adc
push
or
enter
xlat
mov
jnp
jmp
test
xor
std
cmp
or
(bad)
mov
adc
fnstcw
shr
sub
(bad)
mov
ds
je
movs
pushf
jns
mov
xor
push
fs
les
sbb
xchg
adc
and
aam
mov
xor
and
aam
jle
adc
popa
adc
lds
adc
and
xchg
add
xor
enter
xchg
fistp
xchg
sahf
cmp
add
adc
push
in
dec
mov
dec
cs
xchg
fdiv
fnstcw
pop
popf
pop
jl
pop
aaa
adc
xchg
daa
jae
push
push
daa
gs
inc
sbb
dec
xchg
mov
mov
xchg
(bad)
(bad)
aam
leave
jl
jne
(bad)
repz
jge
shl
mov
push
popa
pop
outs
cwde
mov
jecxz
mov
jg
dec
xlat
and
retf
sahf
cmp
ja
pop
stos
mov
(bad)
in
cmp
scas
sbb
fcomp
inc
scas
push
sbb
sbb
hlt
sbb
jns
cmp
or
xchg
(bad)
xchg
and
in
mov
push
mov
pop
dec
ret
push
dec
add
lahf
sub
add
sahf
mov
les
test
imul
mov
lahf
ror
or
mov
pop
out
push
push
sub
test
ret
retf
mov
or
iret
fcom
sub
or
mov
ins
in
mov
lods
xchg
ins
test
sbb
cmps
sub
mov
xchg
movs
jo
mov
xor
push
cdq
shl
in
(bad)
mov
lods
sub
mov
lea
or
cmp
addr16
fwait
out
add
adc
cs
jns
and
(bad)
js
dec
cs
push
into
aad
pop
loopne
mov
xchg
mov
pop
adc
push
bound
push
imul
sub
call
cwde
sub
or
enter
std
(bad)
mov
scas
fwait
xor
repz
ins
and
jmp
pop
pop
call
fild
(bad)
int
popa
scas
es
or
shl
jl
xor
adc
push
mov
and
xchg
cmp
lea
enter
arpl
sar
cmp
enter
sub
dec
and
aas
ret
rol
ja
in
adc
loopne
icebp
xchg
(bad)
xchg
pushf
jns
jmp
(bad)
push
cmp
fldenv
pop
adc
(bad)
aad
pop
or
lods
xchg
inc
pop
jae
add
std
mov
retf
mov
jmp
test
pop
mov
push
push
adc
dec
sub
dec
mov
mov
stos
cmc
ja
jmp
mov
(bad)
mov
jle
mov
jns
dec
gs
jbe
cwde
inc
fwait
xchg
dec
jle
pop
mov
out
loopne
dec
mov
adc
cli
xor
push
adc
(bad)
pop
stos
shl
pop
test
popa
bnd
stos
xor
scas
jecxz
push
jb
mov
jnp
mov
sub
jno
sub
rcl
mov
dec
mov
mov
not
lods
jp
jne
jle
(bad)
retf
dec
pop
call
dec
push
xor
adc
rol
cmp
gs
dec
cmp
xor
stos
mov
pop
sbb
lea
adc
push
sahf
jmp
stos
aad
(bad)
test
push
push
sbb
jae
xor
dec
dec
push
std
(bad)
adc
mov
mov
ins
jno
pop
mov
cmps
das
sar
adc
pop
retf
dec
fwait
mov
push
clc
jbe
retf
mov
das
mov
jmp
into
adc
cmp
sbb
sub
or
sbb
cwde
repnz
cmp
push
jbe
retf
sub
lea
scas
jno
ret
cmp
or
ins
adc
leave
push
xor
xor
clc
fcmovbe
push
adc
or
retf
push
mov
xor
imul
xlat
icebp
jne
push
add
lods
aas
add
je
ror
sub
pusha
pop
cmp
in
rol
clc
repz
cmp
retf
fld
retf
inc
ror
ret
sbb
gs
sbb
sbb
mov
pop
cld
mov
out
jae
inc
add
lds
dec
and
sbb
ja
sti
repnz
mov
shl
pop
mov
test
loop
mov
push
adc
sbb
sti
test
aam
and
mov
loopne
mov
(bad)
mov
call
(bad)
outs
sahf
xor
jmp
pop
sbb
push
(bad)
jne
aad
mov
inc
mov
cmp
sti
aam
push
pop
dec
mov
int3
sbb
loop
movs
mov
add
dec
nop
jae
push
shr
std
rcl
clc
or
push
popa
dec
push
and
jb
sti
xor
lds
fisubr
push
fs
mov
and
jg
xchg
push
xor
sub
icebp
das
popf
ins
loop
mov
adc
jmp
push
fisttp
in
push
in
outs
cmp
push
pop
sbb
test
es
das
arpl
scas
xor
stos
in
aam
fs
adc
mov
bnd
and
into
jmp
mov
jge
jae
mov
ins
out
sbb
dec
mov
fdivrp
push
test
popa
sub
(bad)
lods
dec
push
imul
inc
jb
pop
mov
xor
dec
outs
sbb
xlat
cmp
push
push
inc
sub
or
cs
jl
mov
mul
popf
adc
mov
mov
jge
cmp
inc
adc
(bad)
mov
mov
push
push
adc
add
adc
mul
sub
cmps
repnz
sub
or
mov
lea
xlat
int
sahf
ja
jb
ret
rcr
mov
pop
add
xchg
clc
adc
js
xchg
and
rcl
imul
xchg
add
das
test
and
mov
aaa
xchg
mov
mov
stos
sub
test
mov
mov
imul
mov
dec
pop
lods
pop
push
pcmpeqw
sbb
int3
fstp
clc
mov
mov
adc
lds
dec
aas
dec
inc
ftst
lahf
xchg
add
pop
adc
cmp
pop
lock
aaa
jmp
sub
cmp
adc
mov
clc
int3
sub
push
daa
add
mov
scas
jg
movs
aas
mov
adc
push
cli
pusha
dec
mov
xchg
xor
jp
sub
shl
ss
push
stc
out
inc
sub
xor
ds
xor
xor
es
push
jmp
dec
(bad)
enter
pop
or
mov
fcom
dec
ja
test
push
add
mov
xchg
cmp
(bad)
sbb
cwde
int
pusha
xor
hlt
pop
std
je
ret
mov
ficom
xor
xchg
in
mov
pop
js
dec
push
test
aaa
push
test
jae
jo
movs
pop
add
pop
dec
mov
xor
retf
aaa
adc
xchg
mov
push
add
adc
sbb
xor
rcr
and
push
js
mov
cmp
jb
cs
fsub
out
out
dec
les
cmp
dec
scas
test
je
mov
cmp
ret
or
xor
ja
push
stos
mov
sbb
mov
or
cmc
lea
fistp
mov
sbb
ret
ja
push
jns
(bad)
adc
mov
and
and
xor
pusha
pop
lea
pop
sub
adc
push
clc
dec
cmps
(bad)
xchg
mov
xchg
mov
mov
les
and
enter
bound
or
retf
popa
xor
and
rcl
ds
cli
sbb
sahf
fistp
sar
or
add
mul
mov
leave
push
push
xor
xchg
movs
xchg
popf
ficom
fcmovnb
add
inc
or
shr
stos
idiv
scas
aad
xchg
shr
loope
pop
inc
and
retf
outs
jp
stos
xor
pusha
add
sbb
xchg
xchg
jo
loopne
pop
pushf
clc
out
sub
inc
lea
popa
dec
in
mov
xchg
or
or
or
xchg
mov
or
sar
dec
enter
fld
addr16
dec
push
add
lods
and
sbb
mov
fisub
mov
or
movs
and
lock
mov
scas
nop
sahf
ins
push
sbb
shl
sti
push
cmc
aam
into
and
pop
mov
(bad)
xchg
cli
shl
fsubr
mov
fdivr
inc
arpl
pop
ss
xchg
mov
or
repnz
aaa
call
ss
or
imul
hlt
xchg
mov
inc
ret
jg
add
dec
adc
dec
loopne
mov
shl
adc
sahf
lods
cwde
xor
in
dec
add
inc
repnz
push
push
xchg
neg
neg
pop
imul
lea
addr16
xor
lock
jp
mov
ret
sbb
xlat
mov
dec
outs
cld
shr
inc
(bad)
cmp
outs
retf
mov
int3
lock
sub
mov
cs
sar
xchg
jg
popa
leave
mov
push
cmp
in
jecxz
mov
dec
push
movs
mov
push
jge
add
int3
retf
es
sub
mov
jbe
rcl
push
arpl
call
ins
push
(bad)
adc
shl
pop
mov
and
dec
(bad)
lahf
mov
out
dec
jmp
out
jo
sbb
jae
aas
xchg
(bad)
pop
rol
lock
test
mov
cmps
mov
cld
mov
repnz
mov
stos
fistp
rol
cmps
aad
repnz
mov
fstp
push
jmp
push
xor
sahf
test
dec
shl
mov
arpl
stc
add
jmp
scas
push
int
shl
push
add
adc
cld
sbb
test
sbb
pusha
add
add
or
ror
pop
int
jb
mov
pop
call
jnp
imul
lods
and
(bad)
(bad)
in
mov
jp
push
xor
ret
in
sar
fadd
movs
xor
je
xlat
mov
rol
stos
fs
add
push
ins
add
and
iret
pop
pop
into
(bad)
push
fcomi
hlt
fnstcw
adc
push
in
aas
mov
mov
push
mov
in
ds
xchg
push
retf
das
ins
pop
pushf
loop
xor
cli
jns
fistp
in
repnz
js
dec
push
push
in
es
std
sub
cmp
pop
pushf
pop
in
mov
push
sub
pop
jo
adc
sahf
push
or
xor
(bad)
in
jge
neg
sbb
push
out
ja
pop
sbb
out
ficom
jge
jmp
gs
in
out
bswap
in
mov
imul
popa
out
inc
mov
pushf
xor
mov
rcr
(bad)
cdq
mov
dec
rcr
pop
aam
xchg
ret
jle
push
jg
cdq
push
sahf
mov
test
sbb
fdivr
xchg
sti
lahf
repz
and
cs
out
adc
out
cmp
out
int3
fsubr
dec
imul
ins
or
mov
bound
xchg
lahf
aas
aas
(bad)
sub
xor
js
jb
inc
jo
shl
gs
xchg
push
cli
ror
aad
sbb
jno
and
rol
outs
xchg
and
pop
ss
push
xor
cdq
enter
sbb
jne
dec
outs
test
xor
xor
into
call
fcom
std
movs
aad
push
loop
enter
test
neg
cmp
vmwrite
popf
and
lods
outs
movs
pop
das
pop
mov
mov
cmp
inc
mov
sub
pop
inc
mov
pop
xor
jle
out
fcom
mov
inc
mov
arpl
add
(bad)
in
and
push
and
push
pop
sub
cmp
sub
repz
nop
sub
mov
jns
jne
ficom
add
iret
ret
xchg
and
or
pop
or
jbe
adc
dec
push
rcr
xor
cdq
push
data16
data16
enter
xor
pop
dec
xchg
pop
test
fldcw
cli
(bad)
iret
jp
push
and
jae
out
xchg
outs
inc
mov
xor
xchg
dec
mov
mov
jns
(bad)
jmpw
pop
out
out
fwait
pop
retf
mov
retf
and
or
int
xchg
and
ror
sbb
arpl
inc
xlat
dec
out
cmp
(bad)
popf
dec
dec
pop
add
aaa
pop
push
inc
test
xor
scas
inc
xor
sbb
movs
dec
or
std
push
add
mov
cmp
pop
das
sub
cmps
es
(bad)
jb
inc
mov
push
mov
cmc
jne
mov
mov
and
push
push
cmp
or
hlt
cmp
dec
jge
ror
loop
sub
dec
out
nop
adc
lock
mov
out
fild
imul
fsub
cmp
mov
add
fwait
out
repnz
mov
fwait
pushf
fild
jl
repnz
ror
into
jmp
dec
loope
xchg
dec
rcl
mov
push
xor
pop
dec
mov
ret
or
test
(bad)
or
fist
xchg
je
xor
mov
call
sub
push
out
mov
adc
xchg
push
sub
jl
xchg
dec
stc
push
(bad)
repnz
dec
lods
sahf
mov
inc
cmp
pushf
xor
dec
push
mov
out
mov
les
dec
shr
jnp
in
lods
and
ins
mov
shr
jecxz
les
inc
aam
(bad)
push
adc
call
push
shl
xchg
add
in
ret
jl
out
pop
cdq
push
pop
call
add
add
nop
pusha
in
test
adc
adc
rol
mov
mov
repnz
es
push
lods
sub
lfs
in
(bad)
lods
xchg
out
mov
push
push
in
xchg
pop
xchg
repz
sub
stos
daa
cmp
popa
rcr
les
jmp
mov
push
aad
sbb
and
add
adc
enter
dec
sub
int3
adc
mov
mov
nop
js
add
je
adc
lock
and
or
shl
cmp
cmp
dec
mov
jbe
mov
mov
jbe
div
test
out
mov
(bad)
in
jbe
cdq
or
icebp
jp
scas
xlat
mov
aad
sbb
icebp
dec
inc
add
ins
xor
cmps
jbe
adc
pushf
sub
mulps
out
xchg
push
adc
outs
sbb
add
retf
xor
ret
fs
add
lea
add
les
inc
fcomp
sar
(bad)
dec
mov
mov
and
jns
shl
into
xor
pop
cmp
xchg
popf
pop
out
icebp
movs
or
jnp
inc
push
dec
jge
mov
cmp
lods
dec
(bad)
sbb
call
in
push
mov
fiadd
into
aam
outs
sbb
xchg
pop
in
and
mov
sbb
mov
retf
aam
lods
and
lods
or
hlt
jmp
push
sti
adc
pop
add
stc
sbb
test
push
sub
jge
adc
stos
jmp
jl
test
pop
mov
popf
cs
sbb
or
icebp
mov
loope
jl
lock
xor
jb
cmp
scas
adc
and
push
or
jns
xchg
push
jge
jo
leave
lahf
pop
adc
ja
enter
dec
jb
rol
mov
and
lea
inc
add
lds
lds
cmp
push
push
xchg
movs
iret
xchg
fsubr
and
mov
fistp
sbb
notrack
inc
enter
or
mov
mov
dec
das
popf
mov
(bad)
xor
rcr
xor
mov
out
push
imul
pop
fimul
and
(bad)
sbb
sahf
inc
cmc
pushf
xlat
sub
cmp
sbb
test
cmp
test
into
push
gs
cmp
ret
cmp
cld
push
rol
sbb
add
xor
xchg
cwde
push
cli
or
sub
or
je
cmps
sub
std
inc
mov
in
xor
fldcw
cmp
mov
xor
mov
popf
mov
std
adc
into
je
xchg
test
scas
push
shl
aad
jp
and
cmp
adc
cmc
outs
(bad)
mov
inc
xor
jae
xchg
outs
neg
mov
xchg
outs
cdq
iret
repnz
inc
fdiv
xchg
inc
cld
std
fs
loope
mov
daa
stos
and
in
mov
fisub
(bad)
mov
dec
xor
ret
and
loop
cli
sbb
stc
mov
call
push
xchg
into
jl
addr16
xor
sbb
mov
cmp
cmp
ret
pop
push
fcom
mov
cmc
and
mov
scas
push
jno
mov
xchg
ret
dec
lahf
mov
inc
dec
inc
push
faddp
add
bswap
cdq
push
lahf
icebp
xor
fidiv
ficomp
jge
inc
adc
test
xchg
or
pushf
sbb
adc
inc
test
jnp
cmps
sub
sbb
icebp
xlat
push
ss
mov
sbb
adc
pop
xchg
mov
sbb
mov
scas
push
or
mov
repnz
popa
jae
push
outs
push
push
mov
imul
dec
pop
mov
test
push
popf
adc
sbb
imul
retf
loopne
sub
hlt
lock
cmp
repnz
mov
mov
inc
xor
stos
jp
jle
and
xor
dec
inc
out
xchg
add
je
movlps
push
mov
fwait
cmp
lods
push
mov
das
cmp
or
jb
packssdw
xor
lods
sahf
popa
add
in
fimul
andps
adc
xlat
loop
and
data16
sub
pop
mov
adc
xor
add
popf
outs
jl
sbb
inc
push
pop
sbb
les
push
xlat
pop
adc
aam
dec
pop
xchg
pop
adc
sbb
mov
mov
clc
lahf
in
xchg
aaa
enter
cmp
mov
dec
fisttp
(bad)
ror
jbe
add
push
pop
and
imul
ror
adc
cdq
lods
js
mov
dec
cmp
bts
push
cmp
pushf
cli
in
jmp
push
imul
(bad)
sub
cmps
cmp
scas
call
sub
push
ins
jmp
in
mov
scas
inc
and
mov
aam
or
pop
mov
(bad)
fst
int3
call
mov
jmp
into
outs
movs
in
daa
adc
mov
stos
jmp
out
arpl
ja
ins
inc
mov
clc
pop
xor
mov
xor
sbb
push
jmp
sub
and
sahf
dec
ins
or
jg
dec
cwde
lahf
in
push
pextrw
push
stc
and
test
mov
stos
sub
and
pop
push
mov
and
sahf
push
dec
sbb
scas
push
inc
sbb
lods
mov
(bad)
inc
dec
push
inc
push
sahf
mov
sub
adc
xor
dec
fisub
or
cdq
sub
call
or
sahf
mov
inc
mov
jmp
push
adc
popa
test
push
mov
push
jmp
push
xor
push
xor
jnp
xor
test
jge
and
retf
lds
mov
add
jl
sbb
lahf
inc
pop
sbb
mov
jo
mov
imul
(bad)
dec
pusha
aas
test
das
mov
dec
and
xlat
cld
mov
xchg
sub
cmp
inc
aad
xchg
pop
xor
jl
mov
arpl
inc
imul
imul
cmp
inc
cmp
arpl
add
pop
ror
loopne
ror
or
aad
inc
out
aam
ss
or
cli
inc
jmp
inc
pop
xchg
jmp
(bad)
fcomip
mov
jae
or
test
stc
pusha
jmp
sub
or
pop
sub
add
add
inc
mov
jo
add
popa
push
pop
sub
ja
sub
in
(bad)
sbb
test
rol
and
mov
shl
cmp
xchg
or
jo
std
or
aas
or
daa
cmp
fbstp
xor
xor
addr16
cwde
ror
es
add
xchg
mov
dec
jmp
test
fucomi
adc
xchg
cmp
push
xchg
in
nop
mov
cmp
and
out
out
test
in
jmp
jmp
ret
inc
mov
adc
test
xor
rol
fidivr
mov
sbb
jnp
call
cmp
xchg
cmp
loopne
inc
cwde
push
jp
das
jno
test
jno
lahf
pop
in
retf
ss
adc
adc
push
aam
outs
aaa
mov
movs
shr
xchg
push
dec
cmps
lods
adc
xchg
(bad)
jle
enter
inc
add
mov
jbe
dec
push
and
and
xor
add
repnz
push
les
movs
ins
fidivr
adc
daa
inc
xor
popf
or
or
mov
mov
mov
sub
ins
mov
push
and
rcl
enter
inc
ror
test
xchg
lahf
mov
mov
repnz
jmp
jae
xor
or
pop
lds
scas
jbe
cwde
ins
aaa
or
cmps
sbb
add
aas
rcr
scas
fwait
dec
retf
ja
mov
test
out
mov
or
(bad)
mov
jns
ja
in
pusha
add
stos
cmps
jbe
xchg
xchg
loope
outs
cld
xchg
mov
mov
sub
sbb
inc
mov
int3
fwait
bound
jg
pusha
or
pop
ja
push
sti
imul
inc
jl
adc
pop
jmp
in
push
inc
es
call
cmp
xchg
clc
inc
fild
sub
xor
and
outs
cmps
lock
push
sti
pop
aam
sbb
nop
in
adc
xchg
pop
inc
ds
ret
mov
push
fnstsw
sbb
jno
push
mov
ins
cwde
pop
push
sub
in
int
mov
or
inc
mov
je
ja
stc
jp
or
push
out
aaa
ret
and
pop
imul
xchg
out
jo
xchg
jp
mov
or
gs
lahf
push
hlt
xor
cmc
or
push
add
pushf
inc
into
pop
ja
xchg
mov
in
cmps
push
mov
xchg
mov
stos
inc
xchg
xlat
sahf
or
cmp
jmp
frstor
and
repz
add
xor
(bad)
fimul
pop
dec
aaa
mov
daa
jo
iret
sub
push
movs
pop
imul
pop
hlt
aad
xchg
std
pushf
ds
adc
arpl
and
pop
in
add
pusha
jns
dec
push
sbb
and
mov
data16
xor
pushf
scas
retf
mov
push
add
sbb
jge
xor
lds
lea
and
repz
cdq
add
mov
inc
test
ficom
lea
call
sti
not
pop
enter
pop
jo
cdq
(bad)
std
mov
mov
stc
pushf
gs
sub
push
in
push
jne
push
jge
jge
mov
adc
cmp
sub
xchg
(bad)
mov
popf
sbb
push
(bad)
sbb
mov
pop
in
cli
popa
mov
outs
push
add
jle
and
sti
mov
jnp
mov
sar
fstp
pop
cs
xchg
aas
in
push
or
xchg
inc
add
xchg
pusha
jns
imul
adc
mov
sbb
dec
xor
and
mov
div
or
int
sbb
loopne
push
inc
cdq
sbb
ror
inc
inc
jo
outs
cmp
dec
outs
and
popf
adc
jge
mov
mov
mov
fiadd
xor
jmp
enter
(bad)
icebp
adc
mov
inc
jecxz
adc
mov
scas
(bad)
call
popf
xchg
inc
xor
pop
into
(bad)
scas
mov
fwait
push
push
add
cmp
jecxz
sub
or
dec
mov
sbb
mov
xchg
hlt
inc
jnp
cmps
iret
jne
push
fcmovnu
in
inc
mov
mov
push
inc
inc
inc
fldcw
bound
outs
outs
pop
ds
lea
hlt
push
ds
test
mov
pop
sub
dec
sub
sub
xlat
and
pop
arpl
rol
ja
and
dec
push
out
mov
adc
les
jge
fisttp
lods
test
sbb
xadd
sbb
bound
jl
lock
push
push
mov
mov
(bad)
sti
scas
fmul
xchg
mov
das
jmp
mov
mov
sbb
jl
adc
jne
push
inc
and
(bad)
nop
adc
dec
and
out
dec
inc
out
call
sbb
sub
lods
in
shl
xor
jecxz
ins
clc
or
ja
mov
aad
mov
rol
jbe
(bad)
push
retf
cs
xchg
leave
rol
outs
cmp
repnz
mov
addr16
out
xlat
stos
out
test
and
ret
xchg
jp
fistp
jge
cmp
out
stos
xchg
xchg
jmp
scas
ror
sub
arpl
es
pop
push
and
fidiv
lea
inc
retf
adc
cmc
xchg
cmp
xchg
int3
add
and
pop
fnstcw
xchg
hlt
iret
js
cmp
push
cwde
dec
cmp
xchg
fsub
jnp
sbb
xor
xchg
dec
or
sbb
cmps
fwait
pop
outs
mov
fstp
mov
ja
ret
imul
pop
push
adc
cld
ret
mov
or
or
outs
mov
ret
inc
jb
test
bsf
cmps
loope
addr16
xchg
and
cmc
mov
add
lods
in
les
outs
sti
ins
imul
xchg
add
inc
nop
pushf
jo
xchg
mov
jecxz
loope
out
adc
jae
fisttp
mov
pop
sbb
cmp
sbb
outs
cwde
mov
mov
xlat
loop
xor
add
mov
adc
(bad)
cmp
mov
(bad)
sbb
xlat
outs
(bad)
out
or
sub
xchg
dec
cmp
addr16
popa
and
cmp
rol
sub
es
or
int
mov
(bad)
mov
xor
jbe
sar
mov
or
push
pop
pop
sbb
iret
lock
ror
sbb
stos
stos
adc
sub
lea
add
fs
add
rol
mov
and
add
fist
sub
sbb
test
pop
outs
jnp
ja
(bad)
movs
xor
and
sub
mov
jb
arpl
retf
sub
adc
push
jnp
mov
sub
xchg
and
and
cld
shr
sbb
jns
pop
dec
repnz
dec
into
push
mov
add
inc
in
fdiv
inc
push
xchg
push
jne
jp
jg
rol
rdmsr
add
lea
loopne
add
sbb
data16
adc
push
lds
les
out
stc
jle
int
in
scas
xchg
dec
add
mov
adc
jecxz
adc
and
fcomp
pop
adc
fnstenv
int3
gs
int
das
dec
sbb
mov
dec
lock
add
xchg
test
xchg
neg
rcr
ins
loope
xor
popf
add
push
fldenv
lods
sahf
jns
in
and
stos
or
cli
pop
dec
mov
out
lds
aad
and
rol
pop
cmp
popa
aam
outs
aaa
sub
out
and
push
pop
outs
xor
lahf
pushf
shr
or
jno
cmps
jecxz
pop
pop
dec
xor
pop
cmp
pop
cmp
push
sbb
inc
xchg
add
cmp
movs
sub
lods
stos
push
fisttp
push
int3
xchg
(bad)
push
xchg
daa
aam
lahf
and
(bad)
pop
ret
int
outs
in
bound
daa
lds
xchg
sbb
pop
inc
js
dec
outs
inc
jg
loop
mov
daa
pop
outs
mov
cmps
popf
rol
push
mov
fimul
xchg
dec
adc
lods
dec
xchg
repz
jo
push
dec
and
fidiv
pop
bound
pop
inc
fdivrp
mov
data16
adc
inc
cwde
jg
mov
and
sbb
test
mov
and
cmp
xchg
scas
xchg
add
or
sbb
and
fdivr
sub
cs
inc
out
out
sub
cmps
cdq
sbb
mov
loopne
sbb
jmp
mov
or
xchg
add
popa
pop
pop
adc
xchg
mov
in
dec
mov
cli
inc
aam
dec
mov
mov
add
add
xor
cmp
adc
mov
dec
add
stos
inc
or
arpl
mov
sub
js
or
cmp
pop
in
shr
movs
cmps
add
mov
aas
push
rcr
fsubr
push
lds
nop
push
repnz
gs
push
inc
retf
push
lea
mov
xor
leave
xor
lods
cmp
jno
fsubr
inc
scas
pop
(bad)
push
cwde
mov
push
cmp
out
rcr
dec
add
mov
(bad)
int
or
ins
jl
cmp
dec
outs
fwait
xor
out
xchg
movs
jmp
movs
dec
mov
in
jle
rcl
call
pop
movs
pop
jne
cmc
pop
idiv
pop
add
or
(bad)
movs
sahf
fld
shl
fs
fsub
int3
push
adc
ret
xor
dec
out
aas
adc
xchg
loope
adc
mov
aaa
sbb
fstp
enter
fs
lods
call
in
retf
adc
scas
mov
sub
push
fisubr
add
mov
and
icebp
sbb
mov
adc
mov
dec
nop
inc
dec
std
sti
hlt
sub
adc
mov
dec
dec
xor
or
dec
neg
mov
mov
jnp
stos
ret
movs
mov
not
pop
push
cmp
cmp
imul
dec
cdq
mov
mov
pop
or
xchg
and
outs
ins
(bad)
mov
shl
add
jg
pop
cs
or
dec
xor
cld
mov
div
add
mov
sbb
sahf
jmp
xchg
add
sub
inc
loope
dec
fisubr
mov
(bad)
cmp
data16
shl
and
call
ins
cmps
mov
sbb
add
ds
cmp
sub
in
cmp
xchg
inc
or
lock
add
jno
sbb
mov
mov
jle
addr16
int3
sbb
jg
jge
iret
mov
sbb
cmp
mov
push
sahf
inc
jl
ja
push
mov
cmp
(bad)
adc
mov
sbb
repz
pop
xchg
cmp
mov
mov
and
add
retf
push
cmp
mov
int3
jmp
add
push
push
jle
push
inc
imul
clc
jg
outs
addr16
and
loopne
into
out
test
cmp
aam
leave
mov
mov
bound
stc
adc
xor
adc
push
loopne
push
rcl
sub
pop
stos
or
xor
inc
icebp
adc
js
adc
push
in
fsubr
adc
push
xchg
sbb
aas
lods
xchg
jge
mov
sbb
jmp
mov
gs
adc
aaa
sbb
repz
icebp
mov
out
rol
and
int
es
mov
jg
arpl
fwait
cmps
aad
cmc
mov
dec
lods
and
sub
call
test
mov
cmp
xor
xor
mov
icebp
sbb
fbstp
fimul
sbb
in
add
adc
aas
mov
daa
retf
pop
fs
or
pushf
rcr
xor
pop
and
in
adc
call
ficom
stos
pop
test
retf
cmp
mov
dec
pushf
inc
pop
fnsetpm(287
test
popf
or
mov
clc
mov
lods
jge
loopne
and
ja
cmps
mov
stc
in
ds
adc
loope
rol
iret
loopne
sub
sub
imul
xlat
jo
repnz
dec
lock
les
daa
mov
xlat
fnstsw
xchg
jp
adc
push
outs
adc
xchg
ret
icebp
icebp
sbb
ins
mov
push
or
add
add
and
lods
scas
inc
nop
cs
adc
xchg
and
js
mov
xor
push
cmp
xchg
lahf
aad
dec
pop
jbe
pop
(bad)
cmp
xchg
jmp
mov
fadd
xor
push
into
cmp
and
sbb
call
and
lods
out
cmp
xor
jae
mov
rcr
nop
mov
ins
push
jns
adc
das
xor
xchg
jb
shl
lods
(bad)
movs
out
xchg
clc
jno
clc
inc
pop
push
mov
inc
or
lock
cmp
cmc
dec
lds
push
cli
gs
out
addr16
xchg
mov
mov
leave
mov
je
or
sbb
inc
fcom
mov
jns
pop
popf
xor
mov
ret
ror
jno
dec
xor
xlat
ficomp
inc
jp
dec
fs
clc
ins
xor
jns
(bad)
push
pop
cmps
retf
nop
repz
sbb
stc
inc
inc
jmp
xchg
cmp
lea
pop
add
clc
sub
inc
test
ds
loop
iret
sub
add
lods
add
mov
sbb
in
push
dec
sub
add
jmp
ja
jp
push
dec
loopne
xchg
sbb
adc
mov
iret
add
stc
xor
out
jmp
fwait
setle
fdivr
and
lock
loope
push
loop
pop
xchg
add
jge
xor
imul
and
push
mov
(bad)
jb
xor
(bad)
jb
push
or
in
pop
mov
movs
pop
aad
jnp
mov
loopne
cmc
aad
xchg
outs
push
mov
pop
adc
sbb
mov
es
jp
sahf
mov
(bad)
call
out
out
xchg
int3
sub
fimul
pusha
xchg
xchg
fwait
push
popf
xlat
cmp
imul
mov
mov
xor
xlat
jl
and
pop
mov
loope
pop
sbb
mov
add
in
push
and
mov
mov
push
adc
in
pop
loop
inc
hlt
push
gs
out
xchg
das
dec
pop
adc
lahf
outs
or
out
inc
xor
(bad)
pop
jno
pop
cdq
je
jb
dec
and
push
cdq
pop
test
daa
lock
xchg
mov
push
pushf
add
mov
push
ins
add
push
cmp
sub
sub
cmp
xchg
ficom
cmc
addr16
stc
mov
lea
mov
mov
inc
or
sbb
mov
inc
push
mov
jbe
add
(bad)
and
sbb
push
in
sbb
addr16
cmp
jne
sub
pop
rcl
mov
scas
out
push
adc
sub
fwait
adc
push
cmp
sub
inc
lahf
(bad)
cmp
xor
ss
imul
lods
cwde
inc
jne
sahf
dec
push
mov
pop
push
xor
arpl
hlt
pop
push
frstpm(287
outs
adc
aaa
and
xchg
out
pop
ss
pusha
cli
cmp
cmp
fisub
out
js
(bad)
sub
mov
leave
pop
sub
sub
sbb
loope
movs
pop
fbld
or
dec
mov
scas
fwait
mov
movs
movs
mov
pop
scas
jnp
popa
leave
fs
or
(bad)
cmps
dec
gs
mov
and
jno
sbb
pop
arpl
cmp
push
xchg
mov
test
ds
stos
ins
fs
enter
xor
pop
outs
pop
loop
repz
inc
sub
call
mov
or
push
cmp
jmp
enter
dec
aas
fwait
jmp
pusha
popf
cmp
jg
mov
cmp
sub
test
xor
sub
inc
mov
cmp
jecxz
dec
jne
mov
lods
sub
cmp
and
fcmovb
lods
repnz
sub
lds
outs
shl
xor
rol
dec
pop
add
cmp
mov
jle
inc
gs
pop
jo
iret
add
pop
jl
sub
sar
jmp
mov
fwait
pop
jp
jecxz
das
fistp
ror
(bad)
cs
pop
adc
inc
ds
add
arpl
je
js
mov
pop
cs
xor
mov
push
mov
pop
push
fld
cmp
ja
jmp
fld
mov
cld
out
mov
mov
adc
rol
inc
stos
enter
mov
ror
inc
push
dec
mov
push
repz
in
push
or
adc
pop
xchg
rcr
mov
ins
stos
pop
and
sub
push
popa
scas
ss
mov
fstp
pop
inc
outs
adc
push
sbb
dec
fisttp
loop
aad
inc
loope
push
jo
and
xlat
jle
pop
sbb
sub
aam
imul
add
cdq
jmp
movs
lahf
mov
stc
jmp
jecxz
push
not
xor
cmps
pop
and
in
sub
jl
push
adc
int
jmp
xor
cmp
enter
ror
ja
stos
mov
mov
and
cmp
inc
dec
cmp
fwait
rcl
imul
adc
mov
and
cwde
lds
cs
lock
icebp
dec
push
(bad)
mov
sub
mov
xor
das
(bad)
das
mov
(bad)
push
dec
leave
bound
jge
pop
xlat
or
inc
mov
or
enter
push
fabs
sbb
stc
inc
add
pusha
push
sahf
leave
jge
adc
clc
stos
or
ret
je
leave
(bad)
lods
icebp
pop
cmp
aas
fisub
sar
outs
stos
mov
(bad)
sar
stc
add
xchg
out
fs
push
push
mov
mov
inc
repz
or
or
std
aas
fiadd
and
out
dec
cmp
push
push
jmp
pop
loope
fcomp
pusha
xchg
sbb
ret
mov
aas
push
ror
inc
pop
imul
pop
dec
sahf
mov
adc
push
push
jbe
mov
(bad)
xor
mov
shl
push
xchg
push
push
lods
xor
or
or
sbb
jmp
hlt
mov
jg
sub
lahf
mov
jmp
scas
or
adc
mov
fwait
cmovs
add
ja
xor
cmp
jg
cli
push
pusha
mov
adc
aad
mov
in
mov
outs
fcom
adc
pop
loope
xchg
pop
js
mov
lahf
imul
movs
ins
mov
stos
jne
sahf
je
and
dec
inc
mov
ret
dec
or
out
and
jle
int
mov
in
stos
out
push
repnz
jno
cmp
lahf
stos
xchg
lea
add
scas
mov
jp
jmp
jp
cmc
inc
mov
sub
and
pop
outs
neg
push
popf
ja
inc
stos
mov
sbb
xor
adc
sti
mul
adc
dec
sbb
std
cld
xor
mov
xchg
mov
adc
xchg
movs
ja
cdq
adc
xchg
outs
clc
stos
mov
inc
mov
mov
mov
pop
enter
scas
dec
cli
loope
arpl
outs
dec
jns
rdmsr
outs
scas
fadd
stos
pop
pop
call
bound
aaa
xchg
fs
dec
and
dec
push
lods
popa
pop
dec
inc
mov
mov
sub
dec
jo
xchg
(bad)
in
not
dec
repnz
push
mov
jmp
and
cmps
out
(bad)
mov
pop
shl
sahf
add
ins
cld
jbe
jge
pop
adc
jecxz
stos
jmp
pop
aaa
lahf
(bad)
bnd
repnz
sub
or
pop
adc
jnp
pop
arpl
fmul
push
mov
inc
and
jp
mov
or
fadd
mov
bound
arpl
ss
fdivr
arpl
sub
cmp
lock
repnz
dec
push
and
cmc
or
pop
rcr
mov
pop
mov
and
shr
cmps
out
inc
add
jae
cmps
sub
imul
fdiv
mov
aad
test
movs
inc
call
pop
sub
fucom
shr
or
or
cld
push
pop
mov
bound
xlat
ret
adc
adc
repnz
sbb
div
repnz
jne
shl
imul
dec
nop
fild
stc
outs
add
fcmovnu
push
mov
inc
push
aaa
lods
(bad)
and
(bad)
pop
out
pop
in
mov
call
test
push
stc
mov
and
sti
popf
jne
xchg
aad
cmps
nop
mov
or
cmps
push
popf
xchg
sub
adc
arpl
push
sbb
pop
mov
dec
or
xchg
mov
out
inc
leave
lds
inc
(bad)
adc
ja
or
loope
pop
aam
mov
sbb
inc
fild
stc
xor
mov
xchg
retf
mov
fdiv
xchg
std
jne
inc
rcl
jmp
mov
cdq
into
in
cdq
in
cmp
rol
repz
into
inc
iret
xor
rcl
push
push
inc
popa
push
pop
adc
nop
pop
call
or
fadd
sub
sbb
or
cld
xor
adc
pop
test
leave
add
fwait
ds
(bad)
retf
je
jmp
push
pop
sub
xor
xchg
pop
je
in
ins
test
int3
aaa
push
loope
retf
imul
push
add
sti
xor
push
pusha
mov
mov
fwait
popa
pop
ror
mov
mov
das
daa
std
mov
inc
(bad)
or
push
test
lea
dec
cli
sub
mov
cmp
jns
mov
mov
lds
les
inc
add
fstp
icebp
xchg
xchg
jle
xchg
clc
cmp
in
ins
dec
lea
or
xchg
imul
sets
imul
call
ret
retf
push
movs
in
ror
and
std
addr16
push
aaa
out
jno
dec
sub
push
cmp
movs
(bad)
idiv
adc
ret
ins
mov
mov
and
cwde
xchg
mov
clc
jp
pop
push
loop
mov
cmp
lods
jecxz
stos
jne
mov
mov
inc
or
xchg
daa
(bad)
and
dec
mov
add
inc
sar
repz
arpl
inc
xchg
jae
pushf
(bad)
xchg
mov
inc
xchg
or
mov
mov
mov
mov
retf
push
push
nop
icebp
cli
sbb
push
pushf
xor
mov
pusha
inc
fldenv
add
imul
xchg
sbb
ds
mov
lock
ja
retf
sbb
add
ror
popa
jp
sbb
inc
stc
adc
imul
pushf
pushf
push
not
fsub
frstor
cld
(bad)
dec
mov
in
jb
or
pop
sub
in
add
test
and
jp
and
adc
not
push
enter
or
push
dec
push
pop
movs
add
sbb
fcmovb
push
sbb
ror
pop
stos
jnp
jecxz
push
sbb
push
aas
push
fcomp
push
cwde
jmp
sub
dec
test
loope
mov
loopne
mov
aas
sub
jo
out
inc
fldenv
push
stos
dec
xchg
cmp
lds
in
popa
mov
sub
pop
pushf
pop
enter
aad
mov
or
in
and
fistp
xchg
push
popa
test
adc
add
mov
(bad)
or
test
xchg
or
inc
pop
fstp
pop
mov
test
daa
push
pop
sub
pusha
mov
push
push
and
pop
xchg
sub
ret
shr
mov
shl
xchg
call
psraw
jbe
jl
addr16
push
sbb
repnz
jmp
into
jns
xchg
inc
push
cli
loope
adc
pop
stos
shl
cmps
cdq
push
xchg
icebp
or
data16
mov
cmps
or
pop
or
or
push
cs
jl
mov
mov
nop
hlt
xor
jae
jp
les
fsubr
outs
fwait
jmp
jo
adc
lock
dec
adc
in
hlt
test
mov
mov
dec
fnstsw
sti
mov
rcl
sahf
jge
xor
data16
cwde
xchg
mov
jp
rcr
push
mov
dec
cwde
dec
and
stc
push
dec
test
std
iret
sbb
sub
jae
(bad)
rol
add
mov
aam
je
push
add
aaa
das
push
retf
mov
mov
jle
mov
fistp
call
fbld
ss
pop
sbb
push
mov
ss
loopne
xchg
pop
idiv
pop
mov
jae
jbe
mov
adc
test
arpl
xor
addr16
outs
inc
xlat
inc
mov
mov
jbe
and
jge
push
push
call
dec
and
cmp
xchg
imul
mov
push
add
aad
in
mov
mov
sub
adc
cmp
push
lahf
inc
das
dec
das
mov
out
stos
mov
sbb
cmps
xor
dec
mov
sbb
push
pop
xor
jmp
sbb
rcl
mov
xchg
xchg
mov
sbb
enter
adc
pop
shr
add
jnp
fidivr
es
adc
adc
cmp
cmp
cmp
(bad)
dec
dec
jae
mov
mov
cwde
sbb
pushf
dec
cmps
fidiv
and
sub
jae
sub
sub
fsubr
out
fwait
test
xlat
and
mov
dec
into
xchg
(bad)
push
data16
cmp
test
push
and
cmp
xor
xor
shl
pop
adc
cwde
add
push
ins
mov
dec
dec
jae
inc
fisubr
outs
pop
pop
in
loopne
repnz
mov
out
movs
cmp
xchg
xor
mov
mov
nop
(bad)
jnp
dec
xlat
outs
or
mov
mov
lea
inc
adc
out
outs
neg
fbld
je
popa
or
push
je
lock
mov
sbb
add
adc
mov
xchg
adc
xchg
and
int
push
xchg
(bad)
out
dec
pop
movs
pop
not
mov
mov
xchg
sbb
and
lahf
xchg
push
int
test
xchg
mov
pop
or
xchg
fwait
popf
mov
xchg
pusha
adc
adc
mov
sub
mov
in
sbb
sub
into
and
(bad)
test
jnp
das
shl
ss
fnstenv
mov
dec
jle
pop
and
cli
and
(bad)
in
adc
jbe
fwait
sub
jecxz
pop
xchg
andps
push
xor
jle
ins
in
jae
pusha
pop
dec
pop
cmp
xlat
push
sub
fbstp
movs
sub
imul
lods
call
jp
xchg
push
inc
inc
push
add
(bad)
cld
stos
rol
fsub
in
or
(bad)
repz
push
jmp
add
inc
test
or
retf
into
popa
xor
cmp
mov
mov
lahf
mov
inc
loopne
xor
jle
mov
mov
jo
and
adc
lock
int3
push
mov
leave
jbe
sbb
(bad)
(bad)
or
mov
dec
push
mov
mov
and
popf
jecxz
adc
mov
sub
call
sbb
loope
jmp
sbb
loop
and
jmp
sbb
mov
push
clc
es
lods
push
(bad)
mov
movs
xchg
jne
mov
popf
fisub
shl
add
fisttp
jle
pop
jmp
das
sub
enter
push
bnd
pop
jp
sub
cdq
xor
push
pop
sahf
inc
push
pop
sub
sahf
movs
ins
fst
jmp
push
add
mov
cmps
and
jecxz
dec
in
push
mov
ins
cli
cmp
lahf
push
jmp
icebp
aam
shr
out
dec
scas
cmps
loopne
mov
jne
fwait
call
cmps
mov
(bad)
lds
fld
pop
out
icebp
out
hlt
outs
inc
lock
or
cmp
push
xchg
mov
sbb
cmp
pop
xchg
ja
shl
sbb
sub
dec
repz
retf
retf
jp
movs
enter
jge
icebp
inc
shl
xor
push
scas
add
sub
jg
mov
xchg
out
leave
cwde
arpl
mov
xchg
sub
push
push
xchg
std
repnz
iret
sbb
xchg
sub
or
(bad)
mov
je
jle
xchg
xlat
enter
mov
pop
or
stos
and
loope
mov
xchg
dec
jno
retf
pop
push
cwde
xor
pop
mov
out
push
push
cmp
cmc
shr
popf
test
adc
mov
aam
ds
test
jl
pusha
push
xchg
mov
mov
adc
sub
mov
in
jmp
sub
out
lods
cmc
and
mov
sub
pop
jae
cmc
mov
bound
mov
mov
sub
mov
mov
cmp
jmp
(bad)
sub
out
pop
aas
dec
int
aas
icebp
dec
jp
enter
mov
data16
xchg
cli
aad
dec
ret
add
dec
pusha
shl
enter
jno
out
repz
sub
inc
sbb
scas
je
dec
data16
push
push
sub
in
dec
(bad)
aas
ja
dec
addr16
rol
xchg
jl
pop
shl
sub
pandn
cmc
stc
xchg
shl
xchg
popf
pop
xchg
jp
jmp
pop
dec
jg
and
cdq
and
pop
and
popa
lahf
pop
loope
cmc
in
sahf
xchg
into
add
mov
test
je
adc
je
xor
fistp
lock
mov
xchg
loopne
ffreep
pusha
push
iret
pop
aaa
xor
test
cmp
dec
or
stos
adc
xchg
rcr
adc
jno
out
outs
or
xchg
mov
mov
inc
and
mov
or
sahf
mov
inc
xchg
aaa
xchg
inc
pusha
inc
pop
mov
xchg
(bad)
movs
je
aaa
jmp
jo
jno
sahf
clc
ja
retf
fdiv
sahf
rol
pop
(bad)
push
xor
pop
fiadd
adc
sbb
sbb
xor
inc
not
les
adc
sbb
stos
sub
sbb
loop
jp
lea
cmp
xchg
mov
mov
xlat
jle
or
in
in
cdq
(bad)
int
addr16
cmp
cs
call
out
repz
sbb
mov
or
mov
daa
fist
cmp
imul
ds
mov
jnp
push
dec
adc
test
adc
sar
push
call
sbb
push
sub
sahf
std
or
ds
outs
imul
jmp
mov
imul
lahf
push
xor
and
xchg
fist
cmp
xchg
imul
mov
fst
bound
jne
xor
mov
lods
mov
pop
fwait
mov
(bad)
icebp
cmps
sbb
retf
imul
mov
dec
cs
push
fdivr
inc
stos
mov
outs
or
aad
sahf
fisttp
aad
add
in
daa
pop
xchg
sbb
ins
adc
fld
dec
push
add
ret
pop
adc
test
cmp
mov
loope
cmp
add
into
out
add
ins
xchg
and
jne
mov
mov
jnp
pop
and
jmp
pop
push
cwde
and
fldenv
nop
retf
mov
jg
pop
mov
inc
cmp
add
clc
pop
cmps
xor
mov
mov
pop
movs
shl
xchg
cmp
push
xor
fcom
test
add
movs
inc
fistp
push
sub
scas
xor
dec
adc
jg
cli
aad
cmps
add
(bad)
lods
jnp
fld
and
lds
imul
outs
(bad)
add
pop
mov
inc
cmps
loope
stos
movs
in
mov
inc
rcr
mov
sub
mov
enter
xchg
fcomp
lods
mov
and
cli
mov
dec
test
jge
push
xchg
sbb
icebp
dec
adc
jo
imul
mov
pusha
arpl
mov
loope
fwait
sbb
test
mov
jp
mov
adc
scas
lahf
sbb
cwde
adc
in
stc
push
xor
pop
int3
loopne
push
mov
bound
or
pop
xor
push
mov
les
jns
je
mov
push
imul
mov
add
nop
mov
out
fidiv
(bad)
cmp
jecxz
repnz
mov
test
sahf
stos
xchg
jb
es
push
nop
jg
stc
mov
mov
and
icebp
add
pop
retf
sub
mov
movs
sub
mov
lods
mov
out
clc
inc
inc
push
lock
shufps
push
sbb
push
retf
mov
js
stos
pop
idiv
xchg
mov
stos
inc
cmc
pop
(bad)
call
cmps
cmps
cdq
in
cmp
es
(bad)
mov
ss
cmp
jb
add
test
jge
sub
inc
sbb
fwait
ret
rcr
fs
cmp
cmp
push
xor
jg
lock
les
jno
loop
retf
neg
cmp
jmp
ss
pop
dec
sub
scas
pop
mov
dec
loope
adc
inc
mov
loopne
ins
jp
push
aaa
retf
gs
clc
dec
not
cld
cmp
jmp
lea
dec
xchg
sbb
leave
(bad)
mov
mov
int3
ins
int
fidiv
je
mov
mov
mov
outs
sub
xlat
jecxz
scas
xchg
dec
dec
add
jae
mov
int
popa
mov
xchg
mov
cwde
mov
mov
js
jmp
and
in
sbb
out
mov
sti
or
in
jb
xor
jmp
dec
xor
cmp
frstor
shr
add
icebp
mov
add
out
mul
repnz
lds
cmps
xchg
(bad)
sbb
and
dec
daa
in
ds
or
and
(bad)
cmp
sahf
xchg
mov
pop
stos
loop
and
out
cmp
sub
scas
mov
cld
inc
cmc
push
test
fadd
popa
sbb
out
(bad)
test
test
sbb
mov
fadd
ror
sbb
in
xchg
dec
add
jnp
rcl
dec
inc
push
adc
popa
mov
lock
ja
shr
inc
arpl
xlat
js
sahf
bnd
clc
push
test
mov
loope
jg
aam
push
and
ret
sbb
into
sbb
ss
xchg
xchg
inc
popf
popf
imul
jl
sbb
xor
pop
mov
std
jo
push
adc
inc
ss
jge
jb
xchg
es
rcl
xchg
not
mov
sub
(bad)
mov
fidivr
pop
push
sbb
bound
aas
xchg
call
popa
lods
and
mov
ss
sti
jno
in
cld
xor
adc
sub
push
sub
mov
mov
rol
loop
out
sbb
mov
pop
test
addr16
sti
bound
jbe
leave
repnz
into
and
fistp
ret
pop
jnp
stc
rcl
lock
mov
dec
scas
sbb
mov
in
scas
repz
adc
xchg
fidiv
and
test
xchg
jbe
adc
clc
xchg
call
retf
mov
lahf
push
xor
mov
jp
cmc
enter
and
dec
stos
inc
push
push
add
loope
sbb
xchg
xor
and
xchg
push
add
adc
or
fcomp
scas
pushf
arpl
jmp
rcl
sbb
adc
mov
mov
xchg
push
fwait
iret
lahf
xchg
or
pop
(bad)
mov
enter
jle
mov
or
lods
ins
push
scas
mov
and
cmc
or
bound
lds
loope
mov
(bad)
and
bound
aad
xor
lods
lahf
cmp
adc
rol
xchg
arpl
test
rol
cmps
ror
imul
xchg
fld
mov
(bad)
ins
das
ror
out
or
adc
inc
clc
fnstsw
cmc
rol
push
dec
xchg
test
cld
adc
adc
nop
sbb
mov
jno
aad
fiadd
or
xchg
aam
xor
add
inc
clc
shl
pop
out
pop
outs
gs
mov
iret
xor
daa
jnp
xchg
jge
and
popa
and
or
xor
shl
lock
push
or
xor
mov
cwde
inc
sahf
aad
loop
cmps
cmps
xor
push
xchg
push
aaa
xor
(bad)
arpl
dec
xor
xchg
mov
add
dec
nop
and
mov
xchg
jmp
jg
dec
nop
push
into
lea
lds
ret
lahf
hlt
jno
rcl
aam
test
dec
or
xor
test
mov
hlt
int
jmp
dec
mov
aad
in
jb
inc
jae
dec
ins
xlat
out
out
cmp
sbb
xlat
test
lahf
sbb
mov
ins
sbb
and
dec
mov
loope
xor
div
push
outs
cmp
xchg
xlat
sbb
sti
inc
js
jecxz
lmsw
sbb
push
sub
movs
dec
adc
xor
pop
test
sti
test
push
cmc
mov
jle
sub
cld
or
jo
in
and
pop
enter
jp
imul
daa
aas
mov
push
push
pop
inc
addr16
or
mov
in
inc
cli
mov
(bad)
in
or
ja
jmp
outs
push
aaa
pop
movsx
and
xchg
test
ja
mov
jae
(bad)
jnp
cmp
add
pop
mov
fsubr
add
push
xchg
or
js
mov
mov
leave
fldcw
fwait
pop
(bad)
ins
push
xor
inc
pusha
or
sahf
stos
pop
pop
loope
adc
aas
mov
xor
pop
adc
add
adc
pop
aaa
sbb
add
imul
(bad)
push
ins
ins
neg
and
pop
cld
stos
jp
sbb
adc
fstp
mov
in
inc
mov
dec
jg
push
pop
add
imul
bound
ins
cmp
or
lods
sbb
stos
mov
test
mov
icebp
and
xchg
int3
push
jg
mov
cmc
mov
mov
repz
mov
aaa
jno
xchg
in
mov
enter
mov
and
jno
sbb
mov
sbb
ds
mov
add
popa
mov
getsec
jp
or
dec
(bad)
(bad)
adc
mov
es
push
outs
fst
cmp
(bad)
clc
das
sti
mov
mov
popa
xor
or
adc
xchg
jg
aam
add
inc
dec
cmc
(bad)
or
adc
in
outs
inc
sar
sbb
and
iret
push
pop
push
xor
adc
fistp
push
push
pop
cmp
mov
sub
(bad)
mov
dec
xor
jns
test
ss
rcl
fstp
scas
cmc
movs
int3
pop
fdivr
dec
popa
add
outs
pop
pop
and
push
out
(bad)
in
pop
imul
ret
push
imul
jae
movs
out
popf
inc
fwait
add
adc
rcl
xor
ds
je
mov
inc
add
mov
lods
movs
int3
(bad)
shl
push
ins
in
sbb
mov
adc
clc
push
movs
dec
mov
or
inc
cmp
ins
stos
inc
cmps
pop
add
push
pusha
sahf
nop
aam
mov
inc
out
jp
aad
loop
adc
xchg
push
(bad)
cld
sbb
mov
push
ins
je
cmp
test
mov
pop
xchg
pushf
test
scas
mov
inc
jecxz
jmp
push
mov
sbb
bound
lahf
cmp
sub
mov
xchg
sub
(bad)
push
movs
jmp
dec
jl
xchg
retf
movs
add
push
mov
sub
adc
cmps
gs
repnz
pop
xchg
and
pop
inc
xor
aas
(bad)
addr16
lods
mov
lods
add
jb
mov
aam
pinsrw
adc
mov
mov
js
pop
gs
cld
mov
cs
imul
mov
push
mov
or
fmul
popa
repnz
sub
sbb
push
sub
and
into
adc
lahf
xchg
fmul
or
lahf
(bad)
cmp
adc
dec
iret
loopne
xchg
sti
es
jb
and
ror
lea
movs
inc
xor
(bad)
and
fild
mov
mov
or
or
enter
shl
inc
xor
(bad)
sub
pushw
std
xlat
cmps
push
and
retf
push
jl
mov
fidiv
test
mov
fdiv
std
add
fwait
int3
retf
cdq
add
dec
lods
mov
imul
icebp
fstp
xchg
mov
(bad)
mov
and
adc
jbe
test
mov
mov
fcomi
shr
out
mov
call
mov
hlt
and
mov
xor
xchg
mov
mov
icebp
neg
inc
mov
stos
mov
(bad)
dec
pop
std
(bad)
test
jb
xchg
scas
sti
test
js
popf
gs
jbe
in
out
xor
das
mov
outs
shl
or
and
mov
loop
fmul
xchg
or
mov
lahf
pushf
jmp
mov
sub
add
mov
push
in
outs
and
leave
pop
adc
rcr
sbb
pop
aaa
ret
mov
mov
clc
lock
cmps
mov
sbb
popa
arpl
jmp
cld
jb
jmp
iret
arpl
fbstp
pop
int
dec
sub
ss
daa
in
js
jns
and
dec
push
mov
es
pop
scas
jae
fld
or
icebp
cmp
mov
fld
cmp
out
or
pop
loop
xor
jb
inc
icebp
push
sahf
pop
adc
and
xor
pop
add
sti
xchg
ror
loope
push
xchg
cmp
in
xchg
not
inc
sub
test
lahf
pusha
cs
(bad)
cmp
push
xchg
mov
dec
cmps
cld
ins
push
sbb
and
jne
mov
or
push
add
xchg
jmp
test
xor
test
std
or
repnz
cwde
push
add
nop
pop
cmp
retf
xor
push
xchg
shl
cmp
mov
fwait
jns
(bad)
hlt
ror
ffree
stc
mov
add
movs
push
(bad)
into
mov
cmc
dec
(bad)
mov
hlt
dec
fst
mov
push
adc
pop
retf
and
cmps
sahf
lods
add
iret
loopne
stos
inc
loop
jmp
sub
call
arpl
dec
out
aad
fnstcw
mov
ret
inc
retf
aad
mov
scas
fwait
test
dec
sbb
into
jp
mov
fld
clc
pop
push
icebp
sub
stos
xor
dec
js
pop
cmp
or
inc
pop
mov
scas
stc
ss
mov
jo
xchg
outs
pop
cmps
mov
jmp
jae
push
(bad)
jl
inc
pop
stos
mov
jmp
outs
sbb
push
js
pop
or
xor
ins
popw
dec
jle
sbb
adc
div
rcr
sbb
scas
lahf
imul
xchg
stos
or
stos
and
sbb
retf
inc
pusha
stc
cmps
adc
jl
sub
call
shr
dec
shr
out
mov
call
sbb
xchg
ins
stos
sub
xchg
pop
pop
push
xor
shl
je
or
inc
test
jne
out
mov
retf
inc
push
or
jb
and
iret
stos
lds
or
pushf
push
(bad)
cmp
ret
add
pop
or
sbb
xchg
call
mov
scas
and
pusha
fbstp
stos
imul
xchg
fnsave
js
xor
mov
pop
mov
jne
out
xor
xor
pop
lea
lea
and
rcr
ja
pop
adc
push
pop
rcr
sbb
jmp
enter
sub
cld
bound
pop
call
fyl2x
inc
add
cmp
sub
inc
movs
adc
loope
adc
outs
es
push
movs
add
push
xchg
mov
pop
fcomi
xor
imul
or
cmp
hlt
retf
sub
mov
xor
mov
(bad)
mov
adc
push
jmp
rcr
in
lock
ret
loopne
es
xor
adc
sub
sub
adc
scas
or
es
jnp
ss
sahf
popf
dec
popa
repz
mov
xchg
out
retf
push
sub
sub
(bad)
inc
mov
lds
xchg
dec
sti
mov
add
call
and
pushf
or
mov
mov
jbe
jne
or
cmps
cmp
dec
pop
ss
sbb
push
cdq
into
(bad)
shl
std
xchg
aas
std
lds
ret
sub
jo
cmps
popa
mov
dec
cmp
and
cwde
mov
cmp
sbb
jle
scas
scas
mov
mov
or
dec
mov
dec
adc
out
fs
xlat
jae
in
data16
push
(bad)
xchg
imul
jp
fcomp
std
xchg
jecxz
in
les
nop
fmul
rcl
aaa
mov
jb
xchg
sub
or
scas
xor
cmp
sbb
popf
cmp
mov
sbb
and
dec
adc
push
sub
js
add
jmp
call
adc
push
retf
or
nop
je
icebp
dec
or
mov
bound
xor
push
sbb
mov
mov
add
sbb
(bad)
pushfw
shl
dec
sbb
fadd
ss
sub
push
bound
stos
mov
adc
stc
sar
cmc
xchg
xchg
mov
jp
cmp
xor
add
clc
xor
mov
arpl
push
and
sahf
in
jg
mov
(bad)
cmp
outs
outs
lods
xor
adc
clc
mov
ins
mov
pop
js
nop
pop
or
imul
setno
int3
in
mov
icebp
cdq
fstp
mov
xchg
xchg
and
out
mov
movs
mov
or
out
xchg
jge
shl
push
jecxz
mov
mov
dec
(bad)
lock
mov
pop
mov
inc
mov
in
xchg
ins
dec
movs
mov
test
mov
stos
xchg
pop
das
sbb
and
sbb
sbb
inc
sti
jae
lds
jno
sub
inc
(bad)
(bad)
and
idiv
out
mov
xchg
and
inc
test
lea
rcl
mov
mov
xlat
mov
aam
scas
int3
jmp
cwde
cmp
adc
inc
xchg
popf
(bad)
jl
adc
sub
and
pop
lds
arpl
cdq
push
popa
mov
cmp
sbb
add
inc
(bad)
fsub
mov
jg
bound
mov
stos
mov
outs
pop
pop
and
dec
pop
outs
xor
test
in
mov
xchg
jbe
cdq
xchg
xchg
and
into
sub
sub
dec
cld
daa
pushf
pop
repz
inc
mov
aam
xchg
movs
jge
aam
ss
shl
mov
or
ja
cmp
addr16
frstor
mov
push
in
xor
xor
xchg
stos
ins
loop
adc
xor
fimul
std
sbb
and
mov
push
sub
jg
scas
in
icebp
adc
test
dec
add
cmp
neg
ror
and
cdq
inc
cmp
ficomp
js
adc
dec
and
repnz
sahf
out
jae
cmp
add
push
pusha
sbb
pop
and
int3
pop
mov
dec
or
mov
add
sti
icebp
xchg
inc
xchg
add
imul
push
movs
dec
das
and
and
cli
sub
mov
push
xor
test
into
dec
jl
stc
out
sub
popf
push
in
call
mov
jle
mov
out
pushf
into
dec
lock
test
jg
mov
inc
aam
mov
jg
add
in
test
add
movs
xlat
push
mov
jnp
mov
adc
inc
pushf
gs
mov
jmp
mov
adc
fidivr
jb
mov
inc
je
scas
jmp
mov
cmp
pop
add
dec
push
push
xor
jp
bound
adc
jmp
mov
fsincos
jp
dec
push
xchg
mov
sahf
push
inc
or
test
sub
pop
jae
sbb
ss
call
lods
pop
pop
int
movs
pop
pushf
mov
stc
mov
xchg
rcl
aam
out
and
mov
in
inc
and
xor
jnp
mov
in
sub
ds
(bad)
and
in
(bad)
call
inc
cmps
mul
sub
sbb
scas
jl
(bad)
sub
push
test
stc
shl
xchg
scas
mov
retf
je
jb
sub
pop
jle
mov
out
aam
popa
leave
cmp
scas
pop
push
lea
sar
clc
xchg
adc
jbe
and
int3
ret
pushf
std
fsubrp
lea
pop
shld
out
retf
mov
dec
or
sbb
sbb
(bad)
jae
addr16
mov
int
sbb
inc
fstp
sub
js
hlt
leave
shl
add
gs
sbb
outs
neg
mov
cmc
nop
mov
sbb
cmp
das
repz
rol
ins
cmp
icebp
aaa
mov
pop
jmp
mov
and
lods
faddp
cmp
adc
xor
or
jp
jns
mov
lds
popa
test
(bad)
lock
popa
sahf
mov
adc
retf
mov
xor
int
rol
dec
and
cdq
cmp
aam
add
mov
movs
ins
jb
inc
xlat
stc
adc
retf
push
inc
and
pop
cmps
idiv
dec
pop
xlat
cmp
hlt
jmp
das
pop
inc
aad
dec
inc
cmp
mov
in
cmc
cmp
mov
adc
cmps
into
or
jbe
and
arpl
bound
jle
sub
aaa
outs
add
(bad)
fcom
icebp
add
pop
mov
mov
adc
jmp
inc
loop
sbb
jecxz
push
sti
test
xor
popa
ins
std
in
xchg
in
push
sbb
test
(bad)
rcl
sub
ja
int3
lea
popf
outs
xchg
mov
lods
push
inc
shl
scas
pop
mov
and
leave
push
jp
movs
lock
stos
push
mov
leave
mov
movs
fld
rcl
lods
and
(bad)
fcomp
les
movs
leave
sub
push
in
inc
sbb
mov
mov
test
add
dec
adc
cmp
or
or
push
fcomp
inc
jbe
add
dec
push
div
adc
sti
add
inc
pop
xchg
jg
sbb
(bad)
sub
lea
int3
les
mov
stc
and
popa
lea
pop
xchg
fisubr
mov
pop
jne
pop
push
je
jmp
pop
or
fmulp
test
jecxz
test
cs
mov
call
nop
dec
aas
ds
ret
retf
dec
sahf
adc
mov
shl
out
dec
rol
enter
mov
pop
xchg
cmp
stc
mov
push
pop
mov
outs
hlt
popa
cmp
and
or
scas
or
cdq
aam
movs
and
outs
adc
mov
div
jae
daa
sbb
neg
sub
dec
movs
push
ja
pop
ins
jl
mov
sub
retf
mov
push
sub
je
add
dec
jo
adc
and
mov
jne
sti
cmp
fdiv
jne
jecxz
cs
xchg
adc
out
sub
push
inc
ret
or
out
xchg
(bad)
or
push
ds
push
mul
mov
sahf
jle
mov
dec
std
clc
in
push
adc
push
dec
cmps
add
xchg
int
pop
outs
les
je
sbb
jbe
mov
dec
sub
or
push
xor
xchg
fnstenv
sbb
sbb
ja
dec
or
dec
jne
mov
xor
add
sbb
push
enter
outs
stc
call
xchg
mov
scas
aam
cmp
les
and
jge
cmps
inc
loop
ins
pop
fdiv
pop
mov
mov
dec
jmp
xchg
in
loopne
(bad)
pop
mov
popf
jmp
stos
or
mov
outs
lods
dec
inc
into
aas
cmps
cmp
popf
cmp
fisttp
repz
xor
call
xor
xlat
adc
jl
dec
std
loope
test
add
into
stc
(bad)
jcxz
lds
jo
in
xchg
pusha
pop
ror
scas
and
mov
test
retf
pop
add
push
lods
mov
cmp
sar
sbb
push
cwde
cmp
scas
pop
(bad)
xchg
xchg
inc
imul
je
mul
ins
sbb
aam
sbb
jo
(bad)
(bad)
(bad)
jle
jo
mov
popf
nop
pop
xor
out
push
js
dec
adc
add
jle
jnp
mov
pop
cmps
addr16
sbb
xor
add
jge
into
and
jmp
test
mov
fiadd
jecxz
fwait
adc
mov
int3
mov
imul
jae
nop
add
sub
xor
loop
int3
sub
jns
jno
push
pop
sub
inc
leave
fucomi
stc
mov
std
sahf
rol
fbld
pushf
mov
ins
inc
sub
sbb
fisttp
fiadd
dec
hlt
(bad)
add
mov
mov
ret
(bad)
popa
shl
mul
scas
and
cwde
mov
(bad)
in
test
sbb
hlt
jmp
mov
ss
jo
bound
lods
mov
jo
mov
sbb
and
(bad)
sti
pop
mov
sbb
scas
adc
std
sbb
xchg
outs
pop
dec
jecxz
imul
test
add
iret
mov
mov
xor
repz
movs
dec
xlat
and
mov
(bad)
cdq
call
sub
stos
in
call
mov
scas
mov
outs
ret
ins
daa
add
sub
pop
(bad)
push
mov
das
cmp
mov
loop
sbb
aas
fstp
xor
jle
mov
adc
dec
jae
push
shl
xchg
dec
jp
cmp
retf
es
cmp
dec
cmps
inc
dec
dec
xchg
or
rol
mov
jp
adc
out
mov
js
(bad)
ins
cmc
sbb
int
jg
pop
leave
repnz
das
daa
in
es
mov
out
sbb
add
jecxz
int
mov
push
loopne
fld
das
add
movs
adc
out
rol
lods
out
adc
aas
pop
das
data16
cmp
lahf
std
popa
movs
hlt
or
mov
mov
mov
enter
push
add
loope
and
push
push
mov
retf
popa
jbe
(bad)
jbe
adc
sbb
cld
(bad)
in
out
scas
arpl
movs
and
sbb
jne
push
jecxz
out
and
mov
and
xor
and
fmul
into
jbe
out
adc
ror
cli
orps
xor
mov
xchg
out
mov
lods
mov
daa
xchg
scas
cmp
jg
cmp
mov
ds
mov
std
pushf
xchg
xchg
dec
popa
inc
dec
push
xor
enter
(bad)
pop
fisttp
ds
ficom
scas
mov
lods
hlt
clc
sbb
pop
dec
sahf
arpl
xchg
sti
mov
cmp
(bad)
pusha
dec
clc
dec
cli
inc
mov
push
and
xchg
pusha
pop
mov
dec
out
fstp
inc
sub
pop
(bad)
push
or
ja
mov
mov
add
xchg
push
cmps
test
iret
push
push
or
cmps
and
xchg
outs
push
dec
out
loope
inc
jnp
xor
mov
in
cmp
js
dec
or
push
jae
sub
jns
je
enter
repz
icebp
sub
mov
jne
push
je
ja
mov
pop
inc
ins
(bad)
fwait
mov
jnp
xlat
push
inc
outs
xor
ds
jbe
sbb
imul
xor
mov
lods
xchg
jmp
(bad)
xlat
push
adc
push
mov
out
mul
dec
mov
xor
cmc
les
jbe
push
sti
movs
push
mov
push
sbb
cwde
xchg
arpl
xchg
jecxz
xor
mov
popa
xchg
xor
sahf
push
(bad)
cmp
inc
(bad)
cld
test
in
cli
in
iret
mov
mov
inc
push
adc
add
pop
add
js
mov
add
lds
test
mov
popa
push
in
stos
mov
push
xchg
jno
hlt
xor
xor
cmp
call
sbb
jp
xor
in
pushf
mov
(bad)
or
mov
aaa
pop
add
sub
inc
push
popf
push
cmp
call
mov
fistp
retf
sahf
les
mov
cmp
cdq
cmps
adc
(bad)
jl
lds
stos
mov
stc
not
push
inc
retf
mov
scas
shl
xchg
test
clc
xchg
loop
mov
jne
mov
mov
and
repz
sbb
adc
scas
and
enter
inc
jo
mov
outs
push
add
sbb
fdiv
or
sbb
fdiv
pop
call
add
inc
adc
xor
cmc
clc
push
or
push
daa
aam
int3
ds
ins
aas
cmp
cmp
inc
call
into
out
(bad)
mov
sbb
(bad)
daa
leave
mov
std
jmp
hlt
sbb
jbe
int
pop
icebp
jbe
dec
in
enter
aas
dec
jmp
cmp
mov
pop
or
sbb
mov
call
ins
ror
outs
add
mov
or
xor
jp
adc
mov
fwait
int3
pop
mov
inc
jmp
jbe
sub
cs
out
pop
cmp
mov
adc
fldenv
lahf
cmp
(bad)
pop
xor
cmp
sub
and
pop
fisubr
pop
enter
or
(bad)
daa
std
fs
retf
popa
lock
test
jae
mov
pop
pusha
dec
cmp
xor
out
cdq
imul
movs
dec
aas
adc
cmp
ret
and
(bad)
cmp
dec
add
mov
iret
movs
jl
mov
test
fs
ds
jecxz
inc
call
jmp
(bad)
pop
test
sub
or
cmps
popa
scas
rcr
add
jb
xlat
push
jecxz
cdq
iret
xlat
or
sub
mov
cli
push
pop
inc
cli
jmp
je
sub
mov
test
lock
stc
aaa
cwde
stos
arpl
mov
mov
or
lods
push
pop
ret
or
or
pop
jl
shr
jo
in
lock
dec
mov
mov
and
cvttps2pi
mov
bound
jmp
push
pop
xchg
push
out
mov
xor
int3
mov
mov
int3
sub
sub
pop
cmps
pop
(bad)
or
xlat
xor
dec
fdiv
or
fisttp
push
js
int3
adc
inc
gs
mov
movs
inc
neg
int
sub
jo
cmc
add
fs
and
push
iret
dec
sub
(bad)
movs
dec
pop
lahf
dec
xchg
std
jmp
ja
sub
jbe
test
loopne
iret
div
pop
rol
sub
movs
fnstcw
mov
rcr
xor
call
xchg
jno
jmp
xchg
das
movs
jo
inc
xlat
popf
xor
test
out
js
adc
cmp
jns
push
call
adc
mov
xchg
and
ds
inc
out
call
xchg
or
je
(bad)
push
push
mov
outs
scas
repnz
jg
and
dec
fwait
adc
and
mov
jne
pop
jns
cmp
push
loopne
mov
loop
mov
cmp
shr
aad
fsubr
cs
lahf
js
jbe
lock
out
call
mov
add
cli
scas
jmp
sbb
or
xor
mov
cmc
jge
lods
cmps
nop
pushf
sbb
pop
pop
pop
enter
icebp
pop
jmp
cmps
pop
xchg
sub
sahf
xor
fwait
fwait
sbb
pop
mov
xor
jns
in
in
cmp
ss
mov
or
ins
pop
mov
push
test
sub
and
cmc
xchg
xchg
lock
stos
shr
add
outs
push
mov
(bad)
add
sub
sub
push
inc
jle
push
(bad)
fisub
sbb
cmps
int3
xchg
sahf
dec
paddsb
push
pushf
sub
in
jp
in
dec
(bad)
fidivr
mov
dec
mov
xor
loop
es
mov
sbb
sbb
xor
ss
jp
jbe
pop
xchg
pop
xlat
push
test
jp
mov
mov
sub
(bad)
add
das
test
adc
mov
adc
cmp
sar
shr
jae
mov
inc
mov
and
mov
cmp
push
fisttp
adc
push
cli
xchg
ins
fld
jmp
add
sbb
arpl
dec
rep
xchg
push
xchg
mov
cmps
mov
sbb
pop
push
aas
imul
or
push
lods
jp
cmp
xor
jp
call
push
jecxz
or
mov
adc
das
stc
and
imul
fidiv
rcr
icebp
jge
add
ds
mov
dec
pop
adc
adc
push
mov
movs
in
push
adc
ins
mov
push
fcomp
test
mov
xor
cmp
add
inc
bound
mov
mov
dec
test
mov
cmps
jnp
mov
lds
ror
adc
stos
push
arpl
pop
(bad)
stc
fsub
jp
push
(bad)
jmp
enter
sub
push
adc
and
inc
aad
sub
pop
aas
in
int
scas
push
jge
loopne
pop
jg
bswap
jne
xor
jecxz
in
mov
mov
fs
test
shl
pop
lock
in
mov
pop
outs
inc
inc
retf
lods
mov
push
loop
js
jb
dec
in
scas
cmp
ja
or
xchg
test
or
fwait
push
sti
mov
xchg
pop
aaa
test
jge
sbb
jle
sbb
(bad)
repnz
pop
nop
mov
sub
mov
scas
fcmovb
scas
adc
cdq
push
xchg
or
fist
push
out
pop
pop
cmp
das
xchg
into
mov
jmp
test
sbb
fdiv
pop
arpl
cdq
hlt
cdq
sub
add
repnz
out
cli
cwde
mov
out
mov
aas
cli
cmp
xor
outs
hlt
jmp
dec
push
arpl
jne
out
sbb
pop
inc
mov
and
fdivr
loopne
pushf
push
rcr
mov
mov
xor
fs
cmp
xchg
mov
shrd
retf
lods
sbb
pop
addr16
mov
cs
xchg
(bad)
in
(bad)
dec
sti
addr16
inc
nop
pop
test
retf
std
das
int3
test
jle
adc
dec
in
and
dec
(bad)
(bad)
div
(bad)
jmp
loop
mov
stc
aaa
adc
pop
idiv
mov
jns
xor
mov
ds
mov
(bad)
pop
jecxz
fistp
nop
inc
lds
in
imul
inc
sub
(bad)
ficom
std
adc
sbb
push
cli
movs
fldlg2
mov
cmp
call
fnstenv
mov
(bad)
(bad)
sbb
pop
js
jno
mov
cmp
cmps
or
add
mov
stos
nop
mov
lods
test
mov
js
stc
mov
inc
call
jae
cld
xchg
cdq
cld
(bad)
mov
arpl
xor
pusha
mov
push
pop
mov
ret
ror
aad
call
je
add
outs
(bad)
mov
sbb
aaa
or
adc
mov
sub
pop
mov
xor
mov
cmps
and
mov
jecxz
push
and
ror
fdivr
cmp
jo
popf
inc
mov
pop
sub
cwde
fwait
std
push
std
data16
push
stc
sti
inc
dec
and
cmp
sub
sbb
and
enter
popf
sub
test
rcr
or
out
add
dec
ss
popa
js
mov
popa
adc
ins
jae
push
in
inc
push
js
mov
rcr
dec
addr16
or
in
inc
arpl
movs
dec
push
add
fwait
ja
sbb
push
jl
dec
push
xchg
sbb
xchg
cmp
fsub
mov
cmp
mov
out
dec
pop
(bad)
repnz
int
aam
cmc
jbe
or
fadd
dec
mov
jp
mov
cmp
fbstp
repnz
xchg
retf
or
test
gs
icebp
outs
and
cmp
(bad)
iret
ror
xor
push
mov
sbb
int
add
popa
cld
popf
rcr
cmp
in
pop
nop
mov
xor
dec
jo
jmp
push
push
ror
dec
mov
dec
leave
adc
lds
jmp
mov
bound
cmps
ins
or
sub
dec
jge
inc
js
and
sbb
dec
push
xchg
xor
push
push
push
les
imul
movs
ret
jmp
outs
daa
ja
mov
xlat
je
xor
pop
ins
inc
pop
add
jns
and
mov
mov
jmp
pushf
test
(bad)
cmp
ins
aam
or
sub
sub
iret
mov
xor
sbb
push
pop
es
hlt
(bad)
repz
mov
sbb
inc
mov
xchg
mov
mov
stos
in
dec
sbb
cmp
cmp
aam
test
movs
iret
popa
mov
fild
jns
test
add
add
scas
ret
pop
or
call
jg
imul
jnp
mov
data16
xchg
dec
fcom
das
sbb
jp
cmc
xor
aas
rol
adc
rol
sbb
(bad)
dec
pop
daa
pop
mov
add
pop
and
rcr
aas
imul
aad
inc
outs
dec
sbb
call
xchg
(bad)
pushf
int
out
daa
sub
in
pop
jbe
cwde
cmp
pop
or
clc
leave
dec
stos
sbb
and
ret
mov
stos
add
les
jo
fcomp
stos
arpl
xchg
mov
stos
stos
xchg
sbb
out
cs
xor
push
shl
ins
pop
add
(bad)
sbb
cmp
imul
xor
stc
push
(bad)
stc
xor
pop
and
out
ror
std
das
loop
xchg
mov
ins
dec
popa
rcl
leave
add
mov
out
sbb
sub
push
sbb
out
repz
hlt
pop
dec
into
pop
ins
mov
aaa
fistp
jle
mov
and
cmp
aaa
out
sub
repz
pop
call
es
outs
daa
out
fstp
or
leave
xlat
mov
lods
jno
or
mov
jg
out
and
cmp
out
(bad)
and
loope
sbb
pushf
out
(bad)
nop
sar
pop
push
jnp
xchg
pop
sahf
add
add
xchg
aaa
push
clc
pop
sub
dec
stc
jp
retf
cmp
dec
mov
shr
xor
xor
(bad)
pushf
add
pop
shl
mov
ins
xchg
sub
xlat
jge
cmp
xchg
scas
inc
dec
dec
sub
mov
adc
arpl
adc
setae
xor
xor
cmps
scas
loopne
xchg
mov
popf
mov
fstp
leave
fs
dec
adc
dec
je
adc
leave
repz
xor
fwait
cmps
xchg
ja
dec
aam
and
and
call
xchg
lahf
sar
sbb
sub
inc
or
push
jmp
cwde
repz
adc
out
jae
xchg
sub
mov
jnp
or
jae
mov
mov
popf
jb
push
xchg
and
and
jne
repz
dec
jecxz
mov
call
das
push
jl
adc
std
hlt
js
inc
jg
movs
cmp
dec
les
mov
sub
jmp
cdq
pop
lds
(bad)
adc
xchg
sbb
sahf
addr16
jns
sub
repnz
jl
mov
sti
sti
addr16
push
fcom
mov
call
inc
mov
lea
das
dec
xor
jl
popa
xchg
ret
xchg
inc
int
mov
push
inc
xor
mov
in
mov
jb
ja
or
mov
lock
jno
or
(bad)
hlt
xor
xchg
mov
sbb
rcr
imul
or
je
daa
data16
push
sub
retf
xchg
mov
jl
mov
jge
push
inc
je
das
xchg
and
and
add
mov
je
dec
shr
imul
xchg
or
adc
jae
adc
inc
cmp
sahf
loop
dec
sub
js
jnp
dec
ja
stos
rcr
repnz
lds
xor
mov
cmp
daa
fiadd
jno
imul
cmp
ror
adc
je
sbb
sub
push
xor
jp
sub
mov
and
pop
xchg
or
sub
dec
xor
test
pop
clc
dec
iret
xchg
sub
sbb
xor
stc
jne
shr
fwait
push
jno
retf
je
dec
adc
pusha
cld
in
data16
in
stos
nop
rcr
mov
xchg
mov
fcomp
(bad)
xlat
scas
retf
sub
fsubr
mov
out
js
mov
aad
cmp
or
sbb
vmulsd
xchg
mov
clc
inc
pop
pop
add
stc
int3
mov
sub
psubw
mov
mov
push
or
jo
enter
or
push
push
mov
jne
fs
sahf
call
mov
ins
in
repnz
push
data16
or
outs
das
dec
push
addr16
pop
call
fmulp
repz
fmul
fcomp
cmps
fmul
inc
jne
mov
inc
add
mov
imul
test
inc
hlt
adc
lock
mov
dec
mov
xchg
(bad)
scas
mov
pushf
test
in
jmp
mov
inc
dec
dec
scas
pop
and
cdq
jmp
cmp
jbe
sub
cmp
popf
jae
pop
mov
pusha
push
inc
sbb
imul
out
pop
sub
int
ror
fs
pop
pushf
sub
mov
dec
and
or
out
pusha
test
xor
inc
sbb
test
daa
pushf
(bad)
jno
push
icebp
jecxz
dec
cmp
xor
sti
ins
in
shl
or
and
xor
cmps
jno
int
sbb
gs
cmp
mov
pop
inc
mov
mov
dec
iret
adc
or
ret
cmp
(bad)
mov
mov
mov
(bad)
mov
out
das
sub
sbb
and
scas
mov
sahf
jo
dec
mov
in
jmp
rcr
(bad)
sub
mov
movs
jp
daa
stos
push
or
cmp
jp
int
jmp
dec
add
push
dec
adc
push
out
push
std
xor
cmc
sbb
adc
in
mov
pop
pop
and
mov
lods
adc
xor
mov
cwde
pop
int
call
push
xchg
cmp
and
inc
jge
inc
xchg
out
sbb
push
xchg
xor
xchg
push
cmp
iret
retf
mov
ret
and
sub
ja
mov
(bad)
stos
mov
xor
push
call
das
in
in
cmp
adc
jle
push
enter
std
int
inc
xor
pop
mov
stos
mov
mov
or
imul
aam
ss
and
sbb
fdiv
sub
iret
mov
add
or
push
or
lods
aas
sub
jl
jecxz
inc
dec
and
adc
jne
rcl
das
mov
xchg
test
and
and
cmc
repnz
shl
(bad)
repz
cmps
dec
xchg
pop
sub
repnz
xchg
push
mov
adc
out
imul
mov
mov
sub
cmp
mov
mov
aad
sbb
out
lds
and
jmp
pop
ja
mov
dec
imul
std
push
ror
pop
lahf
es
arpl
sahf
xchg
(bad)
dec
mov
pop
repnz
add
pop
mov
push
repnz
adc
inc
leave
cdq
aad
dec
out
and
aas
retf
push
push
or
cmps
xchg
aaa
sbb
push
sub
fistp
jle
stos
jmp
push
or
sub
cmps
sbb
mov
inc
call
push
nop
jg
jne
or
xlat
rol
in
repnz
xor
fidiv
adc
(bad)
push
dec
sar
test
mov
cmp
hlt
pusha
jl
fstp
inc
scas
jle
pop
add
aas
dec
sub
or
sub
xchg
add
sub
push
adc
inc
test
lods
cmp
xchg
jmp
fisub
pop
jg
cs
aad
adc
xchg
push
xchg
outs
mov
cmp
cld
pop
arpl
xor
add
jle
dec
push
cmp
add
retf
(bad)
aas
inc
fisubr
sbb
call
xor
mov
daa
daa
pop
adc
pop
push
cmp
push
xchg
xor
mov
(bad)
mov
sbb
or
ja
test
jmp
sub
outs
mov
xor
inc
mov
hlt
xor
xor
ds
and
inc
mov
fstp
and
push
clc
push
fdivr
xor
cmps
dec
sbb
xor
mov
ret
retf
jae
cmp
ds
xor
movmskps
shl
mov
in
fnstsw
and
cmps
mov
and
push
xchg
jnp
inc
stc
add
xor
out
mov
dec
or
imul
iret
mov
and
sub
or
adc
xchg
push
push
sub
int3
js
dec
xor
fwait
push
cwde
ret
or
test
cmp
arpl
sub
and
(bad)
out
(bad)
mov
or
bound
jmp
xchg
fidivr
retf
mov
adc
fadd
mov
mov
mov
mov
or
mov
push
and
jl
pop
popa
dec
fldcw
push
sar
pop
(bad)
jno
mov
pop
jnp
jmp
repz
mov
pusha
jmp
mov
cmps
and
jns
(bad)
aas
or
push
jns
mov
jmp
push
fdiv
stos
call
and
gs
ret
fdiv
xor
int
mov
mov
sbb
cdq
outs
neg
or
and
adc
jb
xchg
hlt
xchg
xchg
daa
inc
fs
jae
ret
dec
outs
ja
push
int3
pop
cdq
mov
(bad)
adc
mov
push
pop
adc
fwait
push
js
retf
pop
sub
ds
add
or
pop
jl
test
inc
out
add
imul
enter
push
fs
jmp
dec
int3
fild
in
sbb
add
cwde
mov
pop
leave
pop
mul
popf
pushf
aas
mov
xlat
ds
idiv
ja
mov
dec
sbb
jnp
cmps
push
inc
clc
addr16
stos
xchg
enter
mov
jnp
sar
push
pop
mov
xchg
and
push
out
imul
cs
mov
call
sub
or
test
stos
psubd
leave
add
stos
sub
adc
pop
retf
inc
ret
mov
jb
ret
cs
xor
inc
xor
push
xor
xor
and
jg
leave
mov
mov
jo
(bad)
and
cmps
push
mov
mov
js
and
sti
push
cs
jno
inc
inc
(bad)
and
dec
lahf
and
ret
or
xchg
push
dec
dec
inc
mov
jmp
retf
popf
adc
inc
icebp
fld
punpckhwd
cs
jmp
lds
xlat
cmps
sar
xchg
mov
int
call
scas
pop
leave
bound
jle
and
daa
push
adc
popf
xor
add
int3
sar
iret
mov
dec
mov
dec
out
sbb
push
push
jns
arpl
nop
jmp
test
or
and
and
pop
stos
call
and
push
test
mov
out
js
loopne
sub
pop
xchg
mov
int
xor
jmp
into
xchg
mov
(bad)
cli
mov
xchg
sub
sub
test
popf
jnp
xchg
and
enter
inc
mov
ja
adc
add
lea
enter
xor
in
sub
fild
ins
mov
inc
ins
xor
(bad)
out
sub
push
(bad)
jae
add
cmp
jne
cmp
inc
xor
and
push
das
js
mov
ja
and
dec
pushf
dec
not
mul
out
jne
push
icebp
retf
out
pop
mov
das
ret
or
push
inc
adc
pop
dec
cwde
scas
mov
movs
call
push
push
or
sub
sub
and
cmc
dec
(bad)
cli
das
adc
call
xlat
and
fnsave
or
push
add
cmp
pop
inc
sbb
push
retf
mov
push
xor
dec
fwait
cld
cmc
and
retf
bound
mov
aaa
es
xchg
push
and
movs
add
pop
mov
imul
fld
in
pusha
in
sbb
je
imul
jp
aam
ret
jae
pop
sbb
mov
fisttp
inc
scas
mov
sbb
retf
jp
push
je
iret
sbb
icebp
jecxz
xchg
xchg
mov
pop
adc
pushf
jcxz
popa
outs
dec
lahf
adc
jo
mov
mov
movs
sbb
add
xchg
xor
mov
jge
push
and
jnp
div
add
dec
stos
xchg
(bad)
xor
xor
add
mov
sub
pop
clc
aam
cmp
jae
or
pusha
dec
pop
cmp
lods
pop
and
in
jl
sbb
or
and
mov
add
xchg
retf
neg
je
sbb
mov
sbb
inc
pop
ss
in
cmp
mov
xor
jp
retf
and
ret
imul
pop
imul
mov
mov
sahf
jge
(bad)
shl
(bad)
sub
or
and
ret
(bad)
test
sub
rcl
lea
lods
pop
addr16
add
adc
ficomp
and
out
sar
adc
dec
sub
sar
xchg
and
xchg
les
jmp
jb
pop
jne
sbb
adc
or
sbb
jb
imul
fsubr
sbb
jg
mov
inc
inc
retf
xor
(bad)
out
or
ja
sub
sub
movs
pop
xor
in
rcr
sbb
mov
inc
retf
xor
mov
add
repnz
cs
push
xchg
pop
mov
xor
into
xchg
sub
fsubr
pop
xor
mov
xchg
sbb
imul
mov
cmp
cmps
xlat
jmp
out
lock
mov
and
inc
(bad)
jecxz
loope
imul
jmp
clc
dec
pop
xor
adc
js
mov
cmp
retf
jmp
cmp
mov
and
int3
mov
scas
xor
repz
repz
pop
cmp
mov
popa
sub
icebp
jl
or
fistp
fisttp
loopne
mov
nop
xchg
pop
je
push
cmp
push
in
xchg
or
outs
mov
sub
(bad)
xchg
sub
xor
mov
movs
stos
ret
add
lahf
fidivr
retf
jle
add
nop
push
sbb
out
adc
or
mov
fimul
punpcklwd
ror
pop
ins
lods
or
mov
xor
outs
push
add
lods
sbb
movs
dec
jle
xchg
les
mov
dec
hlt
mov
and
dec
xor
mov
mov
and
shr
inc
cmp
(bad)
test
pop
mov
rcr
sub
fst
faddp
push
cmp
lock
and
sbb
jne
inc
aad
outs
call
(bad)
dec
iret
shl
sub
jl
test
imul
cmp
cmp
fisub
mov
out
or
cwde
add
mul
push
mov
fsubr
mov
mov
adc
mov
mov
or
mov
mov
test
push
mov
jle
(bad)
jno
xchg
sbb
sahf
cld
cs
pop
les
dec
ins
jg
adc
push
imul
xacquire
mov
mov
pop
sti
pop
xor
gs
pusha
shr
ss
pushf
xor
out
push
es
xchg
jae
out
jge
and
jb
jno
sbb
xchg
xlat
mov
lods
lods
(bad)
mov
jl
mov
clc
shl
fst
xchg
mov
mov
push
add
xor
ins
push
mov
and
push
sub
mov
hlt
push
out
push
sar
icebp
jmp
inc
fist
cmps
or
mov
rcr
push
jne
cs
sar
adc
daa
jo
xor
aas
loop
scas
(bad)
lods
jb
xchg
test
jae
push
pop
das
xor
xchg
aas
mov
ds
mov
adc
ss
repnz
and
xchg
inc
adc
ins
push
inc
mov
cmps
mov
jmp
cmp
or
xchg
cwde
push
test
popa
out
clc
dec
(bad)
adc
leave
jg
fadd
repz
dec
mov
push
mov
int3
fisttp
inc
shl
sbb
jle
jle
or
jb
sub
rcl
(bad)
imul
jae
les
movs
lahf
pop
push
sbb
sub
aas
xor
push
and
je
outs
sbb
cmp
imul
ret
ffree
dec
xchg
or
daa
fdivr
mov
ja
add
cmps
sti
jl
retf
pop
popf
adc
xchg
push
dec
jg
or
(bad)
xchg
pop
sub
mov
pop
in
into
adc
cli
ins
fmul
mov
or
popa
ret
and
rol
sbb
push
bound
stc
lods
adc
mov
xor
inc
out
ret
xchg
cmp
es
xor
cli
clc
call
jle
mov
add
mov
popf
xchg
sub
dec
add
(bad)
test
pop
es
adc
push
leave
jbe
or
pop
cwde
xchg
mov
ror
les
jg
and
push
mov
dec
sbb
mov
xchg
push
pop
hlt
repnz
leave
push
sub
mov
inc
adc
inc
ja
or
dec
jmp
cs
(bad)
xor
xchg
cld
repnz
jmp
cmps
jae
push
lock
fsubr
call
dec
mov
jnp
in
cmp
mov
sub
sar
pop
xchg
pop
or
sub
cli
mov
jo
leave
xor
push
scas
iret
jle
or
icebp
je
xor
mov
jmp
sti
loopne
movs
inc
add
mov
dec
sti
aad
cmp
out
ror
stc
les
sbb
xor
fld
mov
cmps
pop
aad
pop
push
(bad)
ss
push
xor
fnstcw
int3
add
ja
out
sbb
test
stc
pop
in
call
xchg
adc
rcl
test
cmps
rcl
scas
mov
mov
mov
cmp
mov
dec
xchg
sbb
pop
jge
sub
xchg
and
stos
repz
cmp
push
repz
mov
or
loop
push
xchg
pop
mov
add
aam
test
sbb
daa
(bad)
in
jl
or
sub
retf
pop
cmp
cmp
push
cmp
and
sub
cdq
jbe
out
push
pop
popa
ss
fnstenv
test
ins
adc
in
and
jno
adc
xchg
dec
push
aas
gs
jnp
cmp
repz
outs
push
dec
addr16
in
mov
and
mov
ja
icebp
adc
rcr
adc
fimul
xchg
inc
(bad)
in
sbb
push
add
(bad)
pop
push
imul
int3
and
jb
sbb
inc
jecxz
push
mov
fs
or
ss
and
sub
and
push
adc
mov
(bad)
fst
push
xor
sub
stos
inc
pop
cdq
push
pop
icebp
arpl
push
fidivr
aad
pop
jmp
cwde
jne
fnstcw
pushf
dec
inc
ret
jg
pushf
popa
es
int
out
sti
xor
hlt
inc
adc
enter
nop
shld
pop
pop
dec
cmp
jo
rcl
add
adc
sar
mov
ja
sbb
(bad)
fcomp
and
dec
jae
retf
inc
loop
loope
cmp
push
es
das
pop
pop
ret
push
in
jns
cwde
div
add
mov
and
pop
aas
rol
xchg
lods
adc
sbb
adc
je
lods
push
int
cld
test
cmps
rol
inc
sub
(bad)
mov
jmp
sbb
fwait
mov
mov
rcr
shl
out
xchg
scas
aas
push
push
inc
add
jle
das
fwait
push
jmp
push
xchg
aad
adc
add
pop
inc
cmp
ins
int
imul
call
fcomp
inc
retf
in
mov
cmc
sub
das
int3
inc
retf
sub
inc
shl
jb
in
jnp
xchg
sahf
movs
imul
xchg
ror
jno
cmp
xor
sbb
cmp
lods
jno
lea
aad
jl
ficom
(bad)
fistp
dec
cmp
jmp
pop
push
push
jmp
ss
pop
cli
mov
pushf
push
jg
repnz
jle
pop
out
sub
in
int
imul
mov
pop
ja
pusha
pop
add
ja
repnz
lahf
aaa
retf
(bad)
sar
fimul
push
pop
into
fld
lahf
sub
jae
push
and
fdiv
rol
mov
cli
push
(bad)
fsubr
xchg
icebp
mov
xor
int3
push
adc
push
add
mov
sub
fcmovbe
sti
pusha
aaa
test
mov
out
fbld
mov
sahf
jmp
xor
scas
add
movs
popf
sub
push
outs
rol
call
jb
sbb
dec
and
movs
sbb
sub
cmp
ror
fiadd
shl
aaa
je
cmp
(bad)
ficomp
jae
into
inc
gs
add
int3
into
lods
push
add
xor
movs
in
lods
das
aaa
inc
(bad)
sub
out
add
xor
movs
lods
retf
sub
sahf
rcr
dec
mov
and
xchg
outs
jno
mov
push
sahf
ror
push
(bad)
inc
push
cs
push
fsubp
ja
jae
sahf
cwde
cmps
ins
popa
sub
inc
add
sbb
imul
in
jmp
pop
cwde
(bad)
jge
xchg
sbb
arpl
clc
mov
inc
popf
pop
scas
sub
jno
repz
jg
shl
pop
ins
imul
jno
push
cmp
inc
and
dec
(bad)
enter
mov
lods
gs
xchg
cmc
adc
dec
mov
sbb
dec
cmp
inc
pop
test
lock
xchg
xor
xor
dec
inc
jle
adc
loopne
daa
das
nop
cmps
pop
xchg
fst
dec
pop
pop
pusha
jl
je
push
push
out
repz
test
movs
test
and
repnz
xlat
cmp
add
mov
adc
mov
or
pop
and
cwde
jae
hlt
scas
jge
retf
shr
sbb
fcomp
bnd
sbb
out
sbb
out
add
icebp
or
sbb
push
xor
pop
repz
fadd
jnp
pop
cmc
jmp
and
imul
sub
retf
inc
pop
cmp
ret
inc
mov
(bad)
movs
cmps
xchg
pop
and
mov
nop
fs
rcr
not
dec
popa
stos
push
or
cmp
mov
inc
xor
add
retf
fistp
adc
in
in
inc
shl
arpl
add
stos
cmp
xchg
shl
hlt
adc
test
xchg
push
and
in
call
daa
xor
sbb
cmps
mov
or
pop
push
dec
cmps
jl
popf
sub
bound
inc
(bad)
(bad)
aas
mov
cmc
push
jo
mov
aad
xor
dec
add
shr
or
xlat
je
jge
leave
jns
dec
call
inc
fcomp
scas
test
dec
mov
sbb
xchg
jl
xchg
pop
pusha
inc
mov
leave
xor
dec
inc
pop
sub
not
sti
xor
fsub
loope
sbb
popf
cmp
xchg
in
in
in
xor
mov
enter
adc
loope
sbb
scas
ret
int
mov
test
das
scas
jl
(bad)
loopne
in
sbb
mov
or
fild
out
lods
inc
in
pusha
test
popf
retf
add
adc
in
das
(bad)
jle
mov
push
dec
and
inc
xor
out
mov
aas
int
test
dec
sub
inc
mov
xchg
fld
call
mov
mov
push
sub
xor
lods
push
xor
xor
dec
mov
or
sub
ins
mov
rcr
and
xchg
rcl
ror
xchg
and
mov
mov
mov
leave
pop
mov
sbb
mov
fsubr
add
push
push
test
leave
and
int
pop
sahf
fnsave
sti
les
pop
mov
out
fwait
dec
pop
dec
repnz
inc
(bad)
mov
call
or
push
pop
mov
and
xchg
rcr
mov
aaa
add
stos
jae
pop
mov
std
imul
(bad)
mov
pop
aas
frstor
mov
push
jle
push
sar
scas
shl
xchg
ins
cmp
pop
pop
mov
xchg
movs
mov
mov
pop
bound
in
add
call
(bad)
mov
and
adc
add
inc
out
test
ret
xchg
int3
in
stos
out
lahf
(bad)
stc
and
iret
fisub
pop
pop
xor
jmp
aaa
lods
push
jg
mov
out
mov
ss
jp
mov
in
stos
stc
enter
stos
ret
and
mov
sub
jns
test
sub
xor
enter
pop
call
xchg
out
cwde
test
je
cmp
std
jmp
sbb
mov
xchg
sbb
icebp
inc
jb
int3
stos
and
xlat
ret
into
jns
sbb
retf
or
aad
test
loopne
cli
jp
aaa
(bad)
jbe
retf
cmp
dec
das
in
out
rcl
mov
sbb
jl
cmps
adc
into
sbb
push
retf
adc
aam
into
aam
outs
fist
rcr
mov
shl
int
daa
sub
add
push
out
out
fstp
int3
push
jno
(bad)
pop
lock
idiv
ins
das
div
inc
js
mov
inc
pop
add
push
add
mov
cs
xor
jmp
aaa
dec
in
lods
xchg
cmp
pop
bound
sub
mov
gs
mov
mov
in
ins
hlt
loop
jg
stos
mov
mov
jmp
xchg
push
inc
xchg
movs
loopne
iret
and
sbb
jl
push
scas
xchg
iret
mov
mov
stos
dec
jmp
mov
or
adc
neg
repz
pusha
loopne
adc
mov
or
(bad)
mov
mov
es
jns
jmp
mov
lock
push
dec
xchg
xchg
fnstenv
pop
cmp
xchg
enter
idiv
icebp
push
mov
leave
imul
(bad)
and
les
(bad)
mov
mov
xchg
(bad)
mov
inc
pop
sbb
or
jmp
add
xor
mov
mov
and
mov
push
sbb
sub
cmp
into
sub
sub
out
dec
imul
mov
or
div
mov
popf
add
xchg
outs
push
popf
or
shl
dec
fmul
inc
mov
ret
pop
in
out
dec
lods
pop
jb
aas
inc
or
in
push
fs
aas
pop
std
call
repz
dec
xor
jae
mov
movs
cld
call
add
xor
and
pop
mov
outs
cmp
aad
jp
shr
cmp
adc
cmp
mov
or
ret
call
lods
sahf
or
dec
cmp
add
sub
shl
test
out
das
adc
dec
js
xor
cmp
daa
dec
jle
(bad)
(bad)
jg
mov
fbld
xlat
xchg
out
(bad)
in
sub
idiv
push
pusha
add
out
nop
pop
mov
push
jne
imul
push
les
push
sbb
cmp
into
mov
pusha
and
mov
iret
sbb
gs
push
sahf
in
enter
mov
repnz
test
es
ror
out
aam
add
add
mov
sub
dec
ins
imul
xor
fisub
mov
repz
cmp
mov
movs
iret
mov
xor
mov
or
jle
xor
add
neg
nop
cld
mov
das
jns
rcr
mov
shl
adc
dec
dec
leave
add
xchg
sub
lods
and
movs
mov
loopne
sbb
xor
pop
into
test
jg
out
(bad)
outs
xchg
mov
and
pop
mov
add
mov
retf
rcr
ret
lahf
jecxz
mov
rcr
push
jle
sbb
dec
pop
and
sub
ins
or
adc
sub
adc
into
inc
lods
pop
cmp
ins
mov
sbb
xchg
fcomp
mov
push
call
push
push
dec
mov
or
xchg
arpl
enter
test
push
pop
rol
jb
adc
outs
jmp
(bad)
ds
imul
xor
nop
std
neg
(bad)
(bad)
mov
jmp
push
les
push
(bad)
cmp
aaa
dec
and
dec
jge
xchg
fiadd
test
jbe
cmps
xor
dec
test
lock
aas
jb
mov
out
xor
sub
test
add
imul
push
dec
stos
sbb
xchg
mov
repnz
mov
xchg
sub
cmps
test
and
mov
jnp
mov
aas
aaa
jb
and
add
inc
out
(bad)
sub
mov
lea
jne
fwait
ins
or
ficomp
call
cmp
shr
push
leave
daa
sbb
ds
std
xchg
lahf
mov
hlt
add
push
push
sbb
loope
aad
mov
cld
mov
(bad)
imul
outs
xor
xchg
(bad)
jbe
mov
pushf
or
out
pop
mov
xor
xlat
movs
xchg
es
adc
bound
gs
dec
pushf
adc
and
add
jle
cli
xchg
xor
dec
or
push
dec
push
xor
lods
cmps
xlat
aaa
or
ror
push
sub
inc
retf
dec
jg
jno
cmps
add
cmp
pop
push
dec
lds
leave
mov
xchg
push
stos
inc
adc
xchg
fsubr
add
rcr
fwait
ret
das
jne
syscall
pop
xchg
xor
fdiv
inc
mov
pop
into
clc
cdq
sub
or
sub
cld
dec
loop
xlat
and
je
bnd
inc
les
(bad)
jp
lds
adc
pop
ins
xlat
mov
shl
loopne
xchg
ss
jecxz
push
test
jb
dec
shl
outs
or
sbb
bound
adc
int
jae
icebp
gs
jmp
pop
in
out
cmp
lods
leave
in
icebp
scas
mov
inc
ds
mov
popf
call
jmp
adc
pusha
das
pop
jb
mov
retf
push
out
es
arpl
jnp
adc
xchg
jge
mov
inc
fwait
and
pop
push
mov
ror
(bad)
leave
shr
ja
test
mov
cwde
fsub
mov
popf
xor
push
xchg
(bad)
stos
hlt
lods
ret
daa
xchg
xchg
fsub
inc
or
add
(bad)
jmp
out
xor
cmp
and
stos
movs
jl
lahf
lods
(bad)
adc
call
sbb
xchg
pop
add
dec
cmc
sbb
mov
cmp
out
add
inc
popf
ss
mov
mov
leave
add
inc
fmul
dec
inc
add
dec
and
inc
ins
out
mov
dec
cli
jmp
cld
and
das
mov
and
and
imul
movlps
sbb
cmp
enter
pop
dec
push
into
(bad)
ds
or
push
dec
jne
dec
addr16
sbb
add
call
lods
je
inc
ror
cdq
cmp
(bad)
pop
fist
and
icebp
mov
mov
icebp
hlt
push
jg
pop
lods
xchg
pop
jecxz
or
xchg
xchg
and
loope
sbb
(bad)
cmp
sub
adc
jnp
retf
inc
ror
(bad)
mov
pushf
mov
xchg
shl
fistp
jmp
cmps
mov
ficomp
xor
aas
outs
outs
fucomi
pop
cmps
shl
ds
out
adc
adc
cmps
ins
push
xor
and
retf
lds
cmps
dec
cmp
mov
xchg
jbe
cmps
jno
jmp
test
loopne
adc
dec
retf
sbb
jecxz
sub
fld
inc
rol
xchg
je
xor
sub
dec
ins
or
mov
mov
xor
mov
ror
out
push
scas
in
dec
dec
lods
pusha
es
adc
add
fs
xchg
xchg
add
out
jbe
cs
adc
imul
xchg
stc
adc
xor
push
icebp
mov
fsubr
push
sub
loope
rcr
jae
stos
mov
bound
push
(bad)
sub
and
xor
movs
aas
jnp
sar
push
movs
xchg
jmp
outs
ins
call
test
sti
add
adc
push
stos
repz
sbb
ret
hlt
out
jmp
out
movs
xchg
pop
mov
add
lock
jecxz
pushf
sub
jbe
or
(bad)
cmp
push
cmovp
and
sbb
aas
mov
daa
mov
adc
retf
xor
iret
jmp
xor
bound
repz
and
adc
or
shl
ret
xchg
adc
inc
jno
fs
mov
cmp
jecxz
push
dec
iret
dec
sub
in
fsubr
outs
test
adc
and
push
pop
pop
sub
cmp
mov
jno
out
ror
push
retf
sub
dec
hlt
std
xor
xchg
aad
or
mov
call
lds
arpl
test
retf
movs
sub
sbb
lock
ins
fild
enter
js
pop
push
sbb
inc
mov
xchg
imul
add
das
sub
repz
cmp
add
(bad)
adc
rcr
add
mov
push
leave
and
dec
ja
or
sub
aaa
or
inc
xchg
jns
and
cs
movs
fwait
std
jb
mov
out
in
sub
loope
or
and
or
or
sub
aam
inc
sbb
mov
push
xor
cs
and
cmp
add
xchg
adc
mov
loopne
mov
mov
pop
fsub
or
mov
dec
es
sub
add
call
sbb
js
add
stos
out
pop
call
jno
sub
outs
push
jae
add
jp
lods
cmp
jnp
xlat
cmp
jno
or
mov
jl
add
into
std
cmps
cmp
and
xchg
and
inc
xor
loopne
mov
jg
inc
xchg
inc
outs
(bad)
cs
fdiv
mov
repz
shl
enter
sub
fwait
jo
inc
das
clc
fs
out
lock
pushw
call
add
bound
neg
xchg
sti
daa
arpl
mov
jp
dec
test
out
sub
push
pushf
aaa
push
cmp
xor
stos
or
mul
pushf
mov
add
cmps
pop
push
xchg
add
xor
adc
pop
jmp
dec
out
fimul
out
cmps
mov
mov
imul
lea
inc
jecxz
icebp
retf
ret
push
sub
xor
mov
leave
push
mov
jmp
add
push
mov
mov
xor
push
sbb
mov
jo
popa
out
out
jecxz
or
rcr
js
popf
mov
stos
mov
push
adc
fist
pop
push
and
out
in
pushf
lds
mov
in
cmps
ror
jnp
and
mov
xor
cmp
pop
ins
add
or
xor
leave
fild
and
mov
out
mov
push
js
in
test
aaa
xchg
not
out
push
sbb
sar
push
test
mov
cmp
inc
shl
imul
inc
(bad)
out
ja
push
and
pop
adc
dec
loopne
fild
imul
cwde
test
add
sar
aam
cmps
clc
rol
or
retf
adc
dec
push
mov
in
out
fisubr
loope
mul
adc
sub
mov
addr16
aad
clc
sub
xchg
in
pop
sbb
js
bound
stc
xor
inc
mov
lods
ror
xor
push
mov
(bad)
loope
std
and
xlat
(bad)
fcom
int3
stos
sbb
fs
mov
jae
jae
arpl
sti
add
push
add
jo
jmp
lock
add
xor
jge
rol
aad
or
xor
mov
sbb
xor
push
add
out
add
jmp
mov
and
xchg
stc
call
add
outs
mov
popa
mov
dec
mov
pop
push
jb
les
imul
mov
outs
out
mov
or
in
stc
fcom
mov
pop
or
outs
mov
fcomp
fild
xchg
jno
jnp
ror
fistp
(bad)
hlt
push
fisttp
shl
sub
pop
cli
retf
mov
popa
int
cmc
ret
arpl
xor
fiadd
fsubr
movs
int3
fdivr
push
xchg
jmp
aam
push
pop
fcmovbe
fldl2e
bound
into
and
sub
adc
xor
add
aas
mov
cmp
stos
push
add
cmp
mov
and
mov
inc
dec
js
jle
jmp
or
dec
bound
jno
inc
inc
bound
ds
(bad)
les
call
adc
and
mov
sahf
lock
ret
ss
mov
lahf
mov
cwde
mov
ror
out
ja
lods
jp
mov
sub
xor
and
push
and
popa
and
inc
xchg
pusha
(bad)
adc
movs
test
cmc
mov
ss
fild
popa
jl
(bad)
es
push
stc
push
sub
inc
sub
dec
outs
fild
pop
fs
stos
mov
mov
jecxz
cmp
cmp
push
aam
or
inc
shr
jnp
enter
xchg
cmp
mov
(bad)
ds
mov
jno
stos
mov
add
add
(bad)
jo
jmp
jo
and
je
in
mov
loope
xor
jbe
sbb
mov
cmc
int
or
pusha
neg
sti
adc
aad
imul
mov
jno
mov
push
sbb
inc
xor
xor
add
in
mul
ins
and
add
pop
fcom
mov
mov
or
and
bound
aaa
ret
pop
je
sub
call
dec
adc
mov
push
jo
jg
xor
xlat
out
mov
mov
add
sbb
out
test
cmp
into
lea
add
repnz
jno
jne
lods
ret
fistp
rol
xchg
retf
ds
outs
add
push
sub
xchg
int
ret
movs
sbb
aas
add
xchg
dec
push
bound
mov
rol
pop
enter
mov
mov
mov
mov
cs
and
nop
cmps
rcl
(bad)
(bad)
jge
ror
into
xor
jle
stc
jecxz
and
sub
(bad)
jne
mov
jmp
sbb
dec
lds
push
push
mov
and
loope
pxor
popf
lds
and
pop
jno
cs
enter
repz
sbb
or
fcomp
fs
test
inc
cdq
adc
test
xor
mov
cmp
sub
pop
pop
dec
inc
pusha
cmp
das
pop
xchg
ins
mov
pop
adc
add
fist
daa
mov
jo
(bad)
fst
mov
cmp
sbb
out
adc
push
add
stc
dec
mov
stos
lea
or
adc
pop
in
stc
scas
jbe
mov
loop
mov
sbb
cmp
xchg
cdq
add
mov
push
sbb
popf
add
hlt
or
fnsave
add
icebp
imul
mov
jg
pop
inc
sbb
iret
jg
sbb
sub
inc
stos
enter
ins
pushf
out
(bad)
int3
int3
xchg
push
lea
inc
cmp
sahf
and
not
in
in
lods
add
scas
pop
jnp
and
lock
(bad)
cdq
mov
dec
dec
mov
pushf
int3
nop
repnz
loope
movs
jno
lahf
inc
imul
jns
lods
mov
fidivr
pop
pop
lds
jp
jns
dec
cmc
(bad)
sar
cwde
mov
push
cmp
pop
adc
adc
jp
in
rcr
popf
ret
mov
sar
dec
loop
and
outs
mov
or
jmp
sub
loopne
lahf
aas
in
lods
into
or
pusha
xor
pop
push
aad
sahf
add
lock
dec
xor
push
jl
push
inc
repz
mov
pusha
aad
mov
nop
xchg
cmps
loop
stos
test
inc
(bad)
sahf
lods
stc
xchg
les
push
sub
and
mov
push
sub
daa
xor
mov
in
fbstp
call
jecxz
shl
and
popf
enter
cmp
ins
movs
fiadd
mov
inc
dec
out
mov
cmp
mov
xor
jo
add
or
iret
mov
sahf
jge
movs
jno
and
jp
xchg
popf
mov
test
(bad)
adc
gs
jnp
jge
rcr
shr
xchg
out
int3
push
nop
cld
fadd
rcr
xchg
jns
ret
push
ss
mov
and
js
dec
je
aas
test
xchg
jl
ss
repz
out
xor
popa
ret
dec
imul
xor
inc
push
mov
in
mov
std
xchg
cmovs
ret
inc
jb
sti
mov
mov
xor
sbb
mov
push
fisub
add
dec
leave
aad
dec
mov
pop
dec
js
cdq
mov
pushf
xchg
loope
popa
js
inc
xchg
mov
cmps
mov
xor
or
jb
cmp
cs
cs
sub
hlt
pop
outs
mov
int
mov
dec
repnz
dec
fsub
adc
ins
ret
adc
leave
mov
fdiv
retf
fidivr
push
bound
stos
jg
cdq
jae
mov
addr16
xlat
int3
pop
aas
js
push
inc
ins
mov
clc
add
xchg
xor
sbb
pop
ds
jmp
out
inc
ror
cs
stc
sti
scas
push
loop
and
lods
mov
dec
rcr
std
and
xor
ficomp
inc
jp
imul
or
inc
mov
pop
cmp
mov
mov
mov
or
pop
xchg
jb
xor
rol
xor
sbb
adc
(bad)
mov
cmp
sar
mov
fisttp
movs
ret
ucomiss
cmp
aas
test
scas
cmp
cmp
inc
and
leave
mov
push
and
jp
adc
fisubr
shl
mov
aam
jecxz
sub
or
(bad)
ds
push
jae
pop
mov
or
loope
dec
dec
add
in
mov
jmp
mov
inc
int3
xor
cmp
jnp
movs
ror
cdq
adc
into
inc
or
or
sbb
dec
pop
test
in
ss
fst
cmp
inc
or
test
imul
cdq
mov
call
hlt
mov
ins
push
cmc
jbe
ins
inc
mov
and
outs
cs
mov
(bad)
fidiv
iret
mov
mov
test
leave
cmc
into
mov
(bad)
ror
dec
aad
xchg
push
ins
or
xlat
inc
cmp
lods
loope
and
(bad)
out
mov
test
or
popf
icebp
sar
pop
pop
js
fs
dec
add
push
lods
in
into
int3
dec
ins
not
popa
lds
dec
or
call
sub
dec
stc
inc
neg
movs
fist
sqrtps
ins
stos
mov
cwde
sbb
cmps
xor
pop
rol
dec
mov
fbld
mov
cmp
dec
cmp
movs
cmp
lods
push
ins
nop
sub
mov
mov
ds
retf
mov
sub
jmp
test
push
pop
inc
inc
pop
call
(bad)
test
es
mov
pop
jmp
mov
dec
lock
mov
jmp
rcl
test
jge
jecxz
mov
add
push
outs
fcmovu
cs
xchg
lahf
fcomp
jb
push
or
jle
enter
cmp
adc
pop
mov
push
mov
fcomp
sub
xor
add
pop
cmps
cld
rol
mov
clc
ss
das
movs
fs
test
or
hlt
jne
xchg
loop
ins
lahf
fisub
sub
cmp
lock
mov
and
jl
push
enter
rcr
inc
push
adc
outs
in
mov
add
cmps
jge
adc
aas
adc
push
xchg
stc
push
test
sti
sbb
mov
sbb
dec
outs
or
cmps
jl
das
or
movs
cmc
xchg
xchg
xor
xchg
addr16
popf
push
in
push
imul
popa
mov
dec
out
push
adc
retf
out
test
add
enter
cmp
sub
mov
sar
call
sub
mov
test
sub
repz
dec
adc
es
jae
repnz
dec
adc
push
cld
add
mov
out
(bad)
mov
stos
xchg
leave
and
inc
ja
jbe
dec
jbe
jmp
and
(bad)
ficomp
mov
jbe
dec
cmp
stos
nop
and
movs
aaa
xchg
sbb
xchg
je
mov
leave
test
mov
fld
jmp
into
xchg
xchg
adc
adc
mov
add
mov
and
pop
pop
bound
loop
mov
dec
nop
mov
inc
aas
aad
fwait
push
sub
aad
push
pop
push
mov
push
lahf
cmc
icebp
iret
mov
adc
addr16
sbb
pop
adc
mov
jno
das
jmp
test
mov
(bad)
cdq
or
retf
cmp
test
addr16
mov
mov
xchg
pop
xor
mov
das
xor
ins
mov
loop
jg
adc
fist
mov
push
pop
sub
ss
mov
aaa
test
jo
stos
xor
lods
pop
add
leave
sti
movs
mov
gs
int
repz
push
xor
jp
cmp
fadd
dec
jle
dec
popa
icebp
cld
mov
leave
(bad)
cli
scas
mov
adc
inc
push
stos
inc
imul
ficom
aad
cmps
cmps
je
sbb
push
loope
xor
push
out
sbb
or
xchg
dec
push
adc
mov
stc
push
add
push
or
(bad)
sti
imul
test
scas
vunpckhps
adc
(bad)
loop
test
call
adc
push
sti
stos
jns
mov
leave
ins
es
nop
out
ds
cmc
or
fwait
popa
add
addr16
js
dec
sub
push
in
pop
add
sub
and
cs
adc
imul
cmps
push
out
pop
inc
dec
pop
jmp
inc
sbb
and
ds
mov
add
test
add
and
fcmovb
xchg
add
iret
test
daa
xor
outs
jmp
pop
xor
mov
std
mov
test
add
mul
scas
clc
(bad)
pop
jo
xchg
push
pusha
mov
sar
xlat
jnp
mov
adc
(bad)
push
rcl
pusha
push
jmp
mov
lock
fwait
out
mov
into
dec
inc
mov
cmc
or
mov
jbe
jae
loope
lea
call
sub
stc
retf
call
or
jle
jp
xchg
xchg
cmps
inc
aas
fst
add
push
adc
lods
retf
push
fstp
mov
xchg
int3
aas
xlat
dec
iret
cmp
gs
push
xchg
stc
xchg
add
dec
jmp
push
mov
xchg
repz
aaa
sti
imul
je
lds
into
push
inc
pop
ins
(bad)
call
enter
xor
cs
test
pushf
jo
pop
dec
dec
scas
dec
(bad)
jmp
sahf
test
pop
pop
and
out
loop
popa
rol
das
int3
out
jns
jbe
adc
inc
movs
rcr
inc
xor
imul
shl
fs
scas
xchg
retf
jle
icebp
adc
lods
sub
out
es
outs
fidivr
lods
xor
ret
mov
fist
scas
mov
mov
inc
ret
in
fidiv
shl
add
dec
xchg
pop
aaa
jae
adc
cwde
mov
aad
ror
pop
mov
cdq
movs
popf
sub
or
push
stc
sti
sub
pop
(bad)
scas
iret
cmp
popa
mov
push
retf
and
retf
adc
mov
rcl
mov
in
aad
into
mov
std
jnp
xor
and
add
pop
jne
popa
call
xchg
sub
popa
jmp
or
push
ins
les
mov
xor
and
jp
cli
mov
hlt
aam
mov
cli
push
daa
mov
sub
sbb
stc
cmp
cmp
or
repz
loope
mov
xchg
loope
(bad)
xor
mov
mov
int
inc
into
xsave
shl
std
add
or
inc
sbb
add
pushf
test
ret
idiv
xor
test
psraw
adc
in
or
imul
outs
cmps
loope
inc
mov
mov
jae
icebp
mov
mov
call
(bad)
out
inc
jne
call
loop
stos
bound
in
fs
pop
adc
add
ins
add
jl
cmp
dec
push
sub
sub
sub
adc
pop
retf
pusha
bound
pop
mov
repz
call
jb
sbb
add
jl
rcl
cli
adc
popa
in
push
popa
jae
in
xor
nop
pop
mov
call
sbb
lods
push
inc
xchg
inc
hlt
cwde
in
pop
call
add
jbe
push
jae
ret
cmps
js
or
jg
cmp
pusha
pop
push
(bad)
lock
fisubr
in
and
sbb
pop
mov
rol
loop
mov
fisttp
xchg
mov
push
cmp
xor
jbe
mov
aas
jo
lods
int
sbb
in
fs
jmp
sar
mov
adc
cmp
jae
xor
xor
loope
cmp
cmp
mov
lods
mov
jns
std
fistp
(bad)
into
pop
gs
mov
push
mov
ja
clc
sub
adc
jno
mov
xor
dec
or
ficom
and
fsub
lock
xchg
call
push
mov
into
pextrw
dec
push
cs
(bad)
aaa
daa
xor
or
and
xor
dec
and
push
fimul
scas
jp
fwait
jbe
cwde
mov
xor
adc
inc
aas
mov
fabs
dec
cs
(bad)
stc
in
outs
mov
loopne
scas
test
lock
call
outs
(bad)
mov
fidivr
inc
repnz
lahf
adc
jge
icebp
jg
test
jne
lods
xchg
ret
mov
mov
jmp
sbb
mov
into
js
shr
add
jg
mov
mov
das
sub
inc
pop
push
fcom
ret
mov
call
push
mov
cmp
pop
(bad)
retf
or
sbb
aad
sub
shr
push
test
lahf
jle
adc
hlt
aas
in
ror
fs
nop
popa
sbb
jle
js
das
sub
test
sbb
mov
mov
cdq
addr16
push
(bad)
in
jl
cmps
stos
push
and
add
and
ret
jns
ret
call
aaa
dec
mul
xor
mov
cdq
push
sti
dec
push
push
or
(bad)
mov
cmc
sti
loop
push
cmc
jns
mov
jmp
ins
mov
aad
cmovo
nop
ja
dec
inc
xlat
and
pop
inc
xor
repz
adc
and
ss
pusha
sbb
(bad)
movs
repz
mov
fstp
and
shr
jmp
aaa
xchg
iret
out
test
push
or
cmps
aam
pusha
mov
push
retf
sbb
pop
(bad)
mov
add
push
jecxz
mov
popf
loopne
sub
or
pop
and
mov
pop
mov
or
call
or
sub
mov
cli
or
jge
dec
mov
lahf
mov
mov
inc
mov
mov
pop
sub
loopne
xchg
jo
rol
pop
int
dec
fcom
xor
mov
push
dec
rol
out
and
cs
dec
mov
imul
add
ds
in
cmp
data16
xchg
pop
jp
add
xlat
mov
sbb
sub
inc
cmp
(bad)
pop
(bad)
push
push
xor
or
adc
mov
ja
lea
sbb
cmps
leave
inc
ins
sbb
int
or
btr
cmc
ficomp
mov
xchg
mov
dec
mov
pop
std
cmp
dec
cdq
mov
loopne
(bad)
pop
jae
dec
lods
in
cmc
adc
leave
jecxz
pop
or
pop
lock
mov
xor
bound
or
mov
sbb
adc
call
enter
jnp
imul
and
fst
addr16
jne
cmp
cmp
cmp
lock
fs
mov
fcomp
in
cmp
mov
daa
rcr
mov
pop
sahf
iret
aad
ss
cmp
outs
cmps
les
icebp
xchg
out
pop
(bad)
jns
push
cmp
xchg
xlat
fcomip
pop
cwde
das
ins
fbstp
dec
aaa
cmps
pop
stc
lds
pushf
adc
inc
inc
pop
xor
lock
test
call
mov
fstp
sub
lock
inc
clc
push
retf
and
mov
jge
push
div
out
cmps
lods
daa
xchg
dec
mov
fs
xchg
sub
(bad)
xchg
dec
inc
cmp
arpl
cmp
cmp
das
or
jae
jp
push
sub
cmp
rcr
into
dec
pop
js
jmp
xchg
ficomp
cmp
pop
adc
jge
pop
pusha
jo
imul
dec
add
pop
(bad)
out
(bad)
arpl
and
sar
xchg
cld
xor
push
test
xlat
rcl
(bad)
push
fnsave
and
jmp
and
xchg
test
fs
sbb
ins
ficomp
xchg
push
mov
cmp
xor
add
pusha
cmp
pop
clc
cli
jge
jns
jge
pop
addr16
(bad)
(bad)
jecxz
mov
cdq
fdivr
xchg
stc
mov
or
fbld
jns
mov
cwde
sub
mov
cmc
xor
in
dec
icebp
push
and
mov
ss
(bad)
ins
mov
mov
arpl
and
loope
jp
xor
mov
jne
jb
or
xor
ins
jmp
fldenv
sbb
push
cmps
lea
mov
out
dec
aad
icebp
ins
scas
retf
mov
pop
sbb
cdq
sbb
push
pop
inc
jge
out
je
lds
not
mov
pop
push
iret
out
pop
mov
test
pop
and
mov
sub
imul
lahf
mov
popa
xchg
sahf
inc
push
push
sbb
add
out
sub
jnp
inc
jo
sub
je
xor
mov
xchg
pop
popf
xor
(bad)
jp
sbb
fstp
int
loopne
cs
adc
popf
addr16
mov
cs
loopne
scas
jno
xchg
(bad)
scas
imul
push
gs
sub
push
rol
pop
icebp
sub
into
pusha
sahf
out
inc
push
pop
dec
out
cmp
rcr
icebp
mov
loope
and
and
dec
data16
cmp
pop
inc
cmp
xchg
add
into
push
and
pop
mov
dec
push
ja
mov
rcr
sub
xchg
rol
push
in
in
and
xchg
cmps
mov
(bad)
lods
inc
mov
and
outs
rsqrtps
xchg
ss
pop
fxch
pop
add
jbe
add
and
pushf
inc
push
dec
mov
neg
cld
push
hlt
xchg
adc
jb
cs
int
(bad)
mov
xchg
mov
cmp
mov
sub
pop
jns
pushf
test
into
iret
xor
pop
out
fild
inc
mov
in
ja
clc
imul
mov
adc
or
fldln2
cmp
pop
(bad)
sbb
(bad)
mov
pop
sub
sub
mov
test
bound
dec
inc
sub
cwde
cmps
dec
sub
push
mov
fimul
adc
imul
cli
out
mov
sar
and
dec
fisubr
xchg
scas
ss
mov
cmps
jae
data16
pop
jmp
sbb
jmp
add
pop
sub
rol
jmp
jno
sub
(bad)
mov
xlat
mov
sub
pop
lods
arpl
out
mov
lods
mov
lahf
bound
stos
and
dec
adc
inc
sub
or
cmp
adc
mov
xchg
push
jl
out
add
(bad)
in
mov
mov
push
sub
jp
iret
in
add
push
ins
test
mov
add
aad
push
mov
les
sti
xor
stos
mov
xchg
sub
in
icebp
retf
cli
or
daa
xor
add
cmp
imul
or
repz
mov
and
pop
jnp
test
fs
sti
xchg
in
test
cmps
jp
push
push
inc
gs
adc
mov
inc
push
pusha
cmc
(bad)
in
pushf
or
or
cwde
popf
pop
or
mov
les
pusha
xchg
clc
cmp
mov
hlt
or
pop
outs
fsub
rcr
lods
add
fmulp
xor
ds
hlt
int3
sbb
inc
and
adc
aam
jb
push
rol
inc
adc
mov
popf
stos
cli
dec
jg
or
imul
mov
xor
mov
jmp
in
inc
imul
mov
out
mov
mov
mov
or
dec
pop
test
and
pop
xor
adc
into
jecxz
lds
dec
fsub
push
pop
inc
mov
mov
scas
mov
mov
dec
cwde
jmp
mov
inc
jbe
popf
ja
data16
jl
cmp
push
push
repz
test
and
nop
ins
imul
or
mov
or
dec
mov
adc
cmps
sbb
sbb
sub
(bad)
pop
mov
jbe
mov
xor
ror
dec
mov
(bad)
jb
add
mov
test
ret
pop
xor
aas
xchg
rcr
mov
and
add
jns
xor
xor
mov
outs
js
and
jmp
and
or
data16
loopne
ins
cmps
leave
or
jecxz
test
jecxz
adc
in
std
push
std
in
dec
(bad)
scas
gs
sub
sbb
jl
xchg
sbb
test
retf
push
jmp
sbb
mov
or
sbb
sub
(bad)
test
cmp
into
adc
les
pop
dec
dec
pop
jae
in
jne
test
mov
movs
(bad)
sbb
lds
mov
pop
push
or
xlat
mov
jnp
inc
jge
leave
mov
int3
xor
repnz
jecxz
add
sbb
movs
push
sub
pop
and
ins
push
bound
mov
aad
shl
jns
xor
jns
sbb
cmp
cmp
retf
rol
hlt
inc
push
or
aas
jo
sub
or
push
jmp
push
jmp
mov
or
sub
aas
cld
shr
cdq
rcl
gs
xor
pusha
push
and
(bad)
or
out
dec
test
ja
mov
loope
std
test
das
fwait
pushf
cmps
inc
push
dec
ins
stos
pop
mov
loope
push
loope
and
icebp
pop
call
iret
(bad)
and
test
mov
dec
adc
mov
mov
call
mov
aaa
mov
ret
imul
test
aaa
ret
pop
xor
mov
mov
jo
pop
aam
sbb
mov
out
push
std
mov
mov
loop
movs
fmul
sbb
arpl
jle
sbb
fdiv
popf
xor
or
mov
add
fild
ret
add
adc
mov
push
xor
and
mov
inc
sub
jae
outs
clc
icebp
call
jbe
fs
jae
mov
fdivr
add
loope
cld
movs
popa
lahf
ror
je
in
push
outs
rcl
xchg
jno
out
leave
popf
retf
mov
jle
(bad)
dec
dec
adc
sbb
fldenv
popf
repz
sbb
imul
mov
popf
inc
int3
es
ds
daa
mov
jle
cdq
repnz
imul
gs
lock
das
stos
jl
sbb
inc
push
cli
xlat
or
or
mov
cmp
icebp
mov
push
dec
mov
sub
(bad)
jae
outs
dec
pop
out
(bad)
mov
lods
adc
inc
out
dec
xchg
pop
push
mov
in
push
mov
aad
and
push
das
imul
xor
jp
sahf
cmp
inc
sbb
repz
and
shr
or
ret
loopne
fstp
add
xchg
push
mov
push
inc
xchg
jnp
shl
out
mov
xchg
mov
int
push
shr
mov
hlt
mov
cmps
fs
ror
out
cmp
jmp
xchg
jmp
xchg
js
aaa
mov
enter
sbb
je
push
ja
shl
push
lods
test
ja
sub
stos
fcom
fdivr
in
jg
cmp
pop
mov
push
xchg
dec
mov
add
fnstsw
mov
adc
enter
and
int
mov
sbb
fcmovnb
push
mov
jno
loope
out
dec
mov
cmp
lahf
sbb
and
in
mov
popf
lods
jae
mov
ss
dec
fidiv
or
mov
(bad)
sbb
enter
jmp
inc
jae
jmp
xchg
pop
addr16
add
mov
jl
icebp
adc
dec
out
out
mov
adc
pusha
icebp
outs
scas
jb
mov
xchg
push
xor
mov
and
ficom
bound
push
or
or
out
sub
jg
inc
xchg
leave
daa
mov
lods
aaa
jno
cmp
jg
jmp
adc
shl
or
adc
(bad)
test
out
dec
mov
(bad)
fisub
mov
ror
cmps
in
mov
push
xor
dec
ret
jo
adc
rcr
fld
enter
aaa
jle
mov
or
(bad)
xlat
inc
add
cli
nop
mov
push
or
sub
fs
mov
sub
mov
call
cmp
dec
daa
iret
jno
cwde
rol
fwait
jne
add
cmc
cmp
pop
in
js
push
xchg
and
leave
daa
ror
sbb
pop
or
(bad)
sub
ins
push
arpl
in
push
call
add
jb
iret
mov
dec
mov
aaa
mov
in
add
aad
and
ja
ins
mov
lds
or
xor
(bad)
jmp
push
pusha
loope
jecxz
add
sar
dec
ret
ret
sub
call
mov
daa
push
ret
cmc
add
jg
icebp
pop
mov
lock
iret
mov
mov
add
imul
jg
imul
cli
je
add
scas
inc
scas
xchg
ins
stos
scas
ret
leave
sbb
push
(bad)
std
push
scas
sub
mov
adc
stos
pop
mov
dec
mov
jle
or
or
in
sub
retf
lahf
dec
dec
xor
arpl
or
dec
not
cmp
fwait
mov
mov
adc
in
push
mov
cdq
scas
sbb
addr16
pop
push
dec
cmp
inc
cmps
cmps
inc
add
and
jne
retf
and
dec
dec
data16
(bad)
imul
or
push
fwait
rcl
and
push
pop
bnd
dec
hlt
cmp
sub
in
out
idiv
mov
jmp
call
retf
jnp
push
push
std
retf
(bad)
clc
loopne
xor
(bad)
mov
(bad)
mov
pop
inc
sub
jecxz
cmp
inc
call
enter
pop
mov
loope
xchg
mov
dec
repnz
jmp
inc
dec
add
test
fiadd
mov
xor
dec
fwait
inc
pop
cld
sbb
cmp
(bad)
ins
fstp
jmp
xor
push
mov
push
das
push
aaa
sub
div
mov
mov
xor
or
sbb
icebp
push
call
scas
jne
push
xlat
xor
xchg
leave
scas
fdiv
push
sbb
fxch
cmp
jp
mov
mov
stc
or
mov
loope
xchg
stos
xchg
ret
jnp
ins
pop
(bad)
aas
jbe
xchg
add
cwde
dec
(bad)
cmp
cmc
inc
stos
sbb
pop
outs
fist
xor
dec
imul
les
pop
stos
pop
popf
popf
mul
xchg
mov
cmps
xor
push
imul
in
shl
mov
xor
cwde
movs
(bad)
mov
xchg
sahf
ss
repnz
imul
mov
outs
or
xchg
inc
int
cmp
xlat
lock
and
jp
push
add
(bad)
xchg
js
mov
xchg
jg
ins
(bad)
lock
xor
push
mov
mov
push
mov
(bad)
aas
arpl
xor
mov
adc
or
cmp
jecxz
jle
inc
push
cmp
retf
fmulp
pop
outs
mov
dec
stc
in
rol
ins
xchg
leave
mov
out
pop
in
push
inc
in
loope
add
cmp
and
pop
xchg
imul
sub
inc
retfw
add
imul
jo
(bad)
inc
inc
inc
js
aam
repnz
mov
adc
fcmovnbe
das
jns
iret
in
push
cmp
cmps
cmp
jmp
(bad)
out
mov
loopne
popa
and
or
imul
push
(bad)
sbb
jmp
movs
xchg
outs
inc
xor
mov
add
adc
popf
ffreep
int3
mov
mov
dec
loope
push
outs
push
movs
mov
mov
dec
mov
dec
loopne
add
mov
push
adc
pusha
ss
pop
mov
mov
or
ss
mov
or
outs
lea
cwde
das
push
loop
call
clc
push
mov
dec
xchg
push
std
jno
push
out
sub
sub
fidiv
jb
xchg
push
sti
out
jne
push
sbb
sahf
pop
ins
in
test
jp
push
popf
nop
sahf
adc
dec
add
jne
out
ja
stos
fsubr
cwde
stos
sbb
pop
xchg
repnz
imul
xor
sub
imul
xor
shl
sbb
test
push
xor
bound
sub
(bad)
jmp
adc
js
add
(bad)
sub
inc
arpl
mov
sbb
push
inc
jmp
sub
add
inc
cs
mov
fisttp
and
pop
je
out
mov
push
inc
mov
in
sub
cmp
inc
pop
sar
dec
daa
and
xchg
aad
dec
pop
sub
out
mov
lahf
stos
cmps
movs
nop
test
dec
fsub
mov
jle
mov
ja
out
js
or
mov
loop
stos
into
cmps
mov
and
stos
aam
cmp
out
test
push
mov
mov
daa
pop
idiv
in
nop
daa
sub
dec
xor
jns
int
or
jo
jge
cwde
shl
stos
enter
push
mov
jmp
lock
cmc
dec
cmp
and
out
xchg
idiv
pop
std
gs
fld
cmp
dec
mov
and
dec
jbe
xor
mov
jns
out
xchg
and
call
add
(bad)
(bad)
imul
out
xchg
xor
sub
movs
add
sbb
imul
and
mov
dec
pushf
sub
dec
add
dec
xchg
rep
fst
sub
mov
cwde
ret
jmp
cwde
call
nop
xlat
push
and
movs
push
nop
and
(bad)
retf
mov
sahf
sti
fisub
mov
mov
add
inc
push
push
mov
enter
pop
fld
daa
jg
jno
retf
jge
mov
pop
retf
ins
push
mov
push
cwde
adc
loop
scas
or
add
add
inc
adc
icebp
push
push
stc
mov
mov
bound
bound
dec
(bad)
dec
and
shr
push
sbb
adc
adc
push
mov
push
repz
sub
push
int
dec
sbb
or
sub
inc
mov
push
mov
push
cmp
and
fisub
sub
jb
or
je
or
mov
mov
out
hlt
lods
cwde
jnp
adc
jne
rcr
inc
pop
(bad)
cmc
inc
out
push
jecxz
dec
pop
inc
movaps
daa
and
xchg
pop
add
cmp
mov
push
inc
xchg
imul
mov
jne
jno
sahf
mov
jno
lock
ret
stos
jecxz
icebp
xchg
jl
push
scas
ret
inc
div
or
fcmove
and
mov
inc
sub
sub
rcl
lods
dec
movs
or
adc
sub
dec
shr
daa
and
add
arpl
mov
pop
bound
pop
mov
lods
ror
je
push
lods
jmp
sbb
fcom
stos
loope
jne
(bad)
(bad)
shr
jmp
aad
sar
mov
adc
arpl
sbb
push
mov
movntq
out
(bad)
mov
xor
or
shl
lds
ins
lods
jns
adc
out
hlt
dec
jg
mov
daa
xchg
in
rcr
xlat
xchg
or
cmp
mov
add
adc
cmp
xor
(bad)
or
and
ret
std
sub
cmp
test
mov
adc
push
ficomp
xor
adc
push
mov
push
ret
lods
(bad)
cld
jg
jo
aaa
sub
jecxz
sub
cmp
loope
xor
pop
xor
inc
aaa
push
adc
je
or
movs
outs
pusha
jo
pusha
test
aad
jno
sub
pop
push
inc
mov
hlt
pop
pop
lock
inc
inc
or
pop
mov
add
jns
or
mov
pop
enter
and
cmovb
mov
adc
sub
iret
pop
cs
es
ins
mov
cdq
rcr
dec
es
movs
jo
cmps
inc
jo
pop
loopne
cmp
frstor
loop
push
jae
dec
stos
popa
add
adc
aaa
cld
cmps
or
je
xor
into
(bad)
ffree
int
jg
and
scas
(bad)
mov
mov
push
adc
mov
ds
daa
test
sub
xlat
mov
add
pop
mov
push
dec
cmps
imul
push
ins
loope
cdq
and
inc
dec
mov
xor
iret
and
mov
jne
fadd
test
mov
inc
rol
int3
cmp
lods
(bad)
lock
jae
mov
sbb
lods
out
or
xlat
inc
cmp
mov
push
jge
or
fcmove
dec
xor
adc
jg
fsub
or
add
xlat
sub
sub
mov
loop
jl
dec
out
mov
sub
outs
mov
std
add
in
retf
bound
gs
call
xchg
cmps
jmp
sbb
xchg
(bad)
cmp
sbb
and
in
mov
sub
ss
leave
push
fucomp
loopne
xor
pushf
jb
add
(bad)
(bad)
dec
xor
clc
dec
sahf
mov
or
push
aad
lock
movs
mov
mov
call
nop
xchg
or
push
xor
repz
pop
sbb
mov
in
data16
data16
sbb
adc
push
cmp
cdq
fdivrp
in
(bad)
lahf
pop
js
cmp
ret
pop
jbe
in
daa
inc
cmp
sub
xor
shl
je
shl
imul
fistp
inc
ret
fbstp
sub
jmp
xlat
add
(bad)
out
sbb
test
call
jp
mov
mov
xor
sub
ds
mov
pop
movs
es
fcompp
or
(bad)
cmp
aas
inc
and
imul
dec
or
sub
shl
outs
rol
push
pop
mov
add
push
mov
clc
and
pop
(bad)
enter
dec
fsub
sbb
sub
sub
or
sbb
movs
xor
cmps
iret
mov
lahf
sbb
sub
bound
iret
pop
xchg
jg
aam
add
outs
jge
mov
mov
rol
dec
jmp
xchg
out
lds
mov
stos
ins
movs
ficom
add
lea
cli
fsubr
sub
in
jne
sbb
pop
inc
cmc
repnz
mov
inc
mov
add
cdq
and
add
leave
fisttp
cli
out
inc
xchg
mov
mov
jne
and
daa
cs
cmp
push
mov
in
iret
cwde
jmp
pop
sbb
xor
aad
jno
mov
std
mov
mov
imul
mov
lods
mov
cmp
test
arpl
sar
or
rcl
pushf
add
xchg
or
fdivr
nop
call
or
or
mov
cmc
inc
xchg
adc
sub
aad
and
cmp
push
fcomp
ds
jo
and
push
fistp
push
jecxz
dec
push
jle
and
mov
sbb
movs
mov
sub
fs
jns
aaa
xchg
add
lds
sar
mov
push
dec
cs
mov
push
(bad)
in
call
cs
xor
push
push
or
in
or
sub
in
bound
and
movs
dec
adc
push
out
add
xchg
sub
repz
and
xchg
inc
xor
xor
cs
sbb
mov
fcom
movs
mov
jo
jns
xor
push
inc
clc
push
scas
test
jmp
popf
outs
inc
lds
mov
dec
dec
sbb
jmp
imul
cmc
jnp
mov
cmp
dec
das
jge
xchg
leave
pop
or
xor
dec
mov
and
push
enter
scas
fcmovne
mov
sbb
int
xchg
cli
jb
daa
(bad)
sub
jecxz
pushf
shl
outs
inc
pop
push
out
jne
sahf
imul
(bad)
or
xor
enter
add
push
cmps
jmp
je
push
mov
loope
cmp
outs
push
in
or
jae
(bad)
stos
imul
cmp
push
(bad)
ins
cmp
dec
fs
inc
call
mov
lock
pop
mov
cmp
test
dec
retf
sub
jmp
fidivr
(bad)
jbe
mov
pop
(bad)
(bad)
in
sub
int3
loopne
shl
jmp
stos
and
mov
inc
nop
push
std
test
jmp
dec
fisubr
jnp
addr16
or
or
adc
and
xchg
ja
ins
pop
xchg
jnp
xchg
dec
es
nop
ror
lahf
fstp
ins
mov
sahf
pop
movs
je
mov
and
and
leave
ret
push
mov
push
rol
mov
fldenv
jmp
hlt
mov
jecxz
loop
out
mov
jg
push
cmp
test
mov
add
mov
out
pushf
inc
sti
push
push
mov
jns
or
inc
and
add
and
mov
pusha
mov
out
dec
push
sub
cmps
push
inc
in
jo
mov
xchg
pop
movs
push
loop
cmp
test
mov
xor
jp
outs
inc
mov
dec
fisubr
test
stos
aad
sbb
sahf
mov
jb
retf
jbe
sub
mov
or
push
sbb
mov
je
cmps
jbe
jl
or
imul
and
repnz
inc
fistp
push
push
adc
enter
adc
aad
psubw
ret
lahf
adc
lahf
jno
adc
jmp
jno
mov
retf
add
scas
cmp
cwde
push
pop
pop
jbe
cwde
lahf
jmp
inc
sbb
movs
adc
cmps
dec
pop
lea
xlat
cmp
je
xchg
(bad)
in
sub
imul
mov
mov
adc
in
das
scas
shl
ins
in
adc
mov
aas
jg
aaa
mov
pushf
scas
mov
add
mov
jno
pop
jo
fistp
sbb
xchg
in
cmp
jmp
div
fdivr
in
dec
and
leave
nop
je
sbb
adc
nop
fadd
ss
mov
jge
mov
pop
add
fimul
cs
xlat
xchg
movs
mov
gs
test
jg
xchg
loop
imul
inc
add
aaa
pop
mov
jb
sub
in
stc
imul
pop
dec
dec
jmp
fisub
(bad)
(bad)
and
test
jbe
pushf
loopne
inc
ja
fwait
sub
in
mov
pushf
sbb
xor
mov
xchg
jmp
pop
push
cmp
xchg
je
push
pop
test
mov
and
mov
mov
retf
sub
push
sbb
inc
movs
adc
daa
div
or
cmp
imul
and
ret
dec
adc
addr16
push
scas
fwait
cmps
and
hlt
mov
xchg
sbb
and
sbb
(bad)
out
sbb
in
and
arpl
cmp
inc
xchg
jne
aam
dec
stos
rcl
ds
xor
add
pop
cmp
ds
or
push
retf
js
addr16
(bad)
stc
push
lock
mov
jp
sbb
dec
aad
sub
pop
(bad)
(bad)
jmp
aaa
inc
jbe
sub
les
xor
iret
in
mov
or
dec
and
call
test
pop
mov
pop
rcr
inc
lods
stos
popf
xor
or
bound
inc
cli
jmp
jecxz
shl
out
jge
(bad)
mov
lds
cmp
pop
ins
xchg
popa
ins
sbb
sub
cmps
mov
mov
les
popf
add
pop
mov
imul
pop
fsub
jmp
adc
pop
or
ror
not
pop
push
or
pop
(bad)
scas
mov
mov
pop
and
lahf
retf
cs
jnp
mov
mov
nop
cmp
retf
in
push
fs
jl
movs
xchg
dec
cld
rol
movs
icebp
in
dec
scas
xchg
sbb
mov
call
mov
fbld
shr
mov
stc
mov
add
aas
mov
add
cmc
lahf
popf
mov
imul
mov
add
call
adc
inc
xlat
wbinvd
mov
mov
jno
dec
ret
test
retf
in
ins
jmp
retf
into
mov
cwde
call
fmul
cmp
cli
div
adc
call
jo
in
ret
adc
mov
fidivr
add
and
(bad)
outs
xor
test
call
fs
js
outs
loope
push
sti
cmp
mov
retf
xchg
pushf
aad
jmp
jg
fwait
addr16
fsubr
push
fwait
iret
or
and
xchg
pop
sti
push
or
les
xchg
fmul
jnp
push
ds
dec
pop
clc
pop
jb
cmp
push
cli
push
pop
push
sub
imul
out
imul
dec
jae
dec
xchg
mov
ins
lock
mov
test
push
pop
cmps
lock
test
and
mov
(bad)
call
pop
xor
jmp
jecxz
dec
fadd
imul
ret
js
arpl
add
jl
outs
arpl
fst
push
gs
xchg
retf
inc
add
sahf
inc
mov
shl
loopne
inc
leave
sub
inc
ds
and
push
xor
out
cmp
in
mov
mov
movs
lahf
loopne
in
iret
nop
jbe
xchg
pop
jg
xlat
cmc
(bad)
(bad)
pop
loope
xor
into
loope
lods
in
xor
(bad)
xlat
fs
neg
push
daa
shr
rcr
mov
or
mov
int
in
jb
lea
jmp
mov
or
mov
movs
ret
and
pop
xchg
push
stos
nop
dec
loopne
ror
pop
adc
adc
into
sbb
sub
out
icebp
mov
movs
scas
mov
into
mov
add
popa
in
jmp
jne
test
push
ss
xchg
test
cmp
push
jecxz
or
pop
or
and
movs
mov
dec
pusha
or
adc
popw
and
jmp
jns
pop
call
jmp
pop
pop
mov
cmp
adc
ds
sahf
mov
ret
std
je
(bad)
mov
cmp
and
sbb
xchg
mov
xor
test
xchg
into
mov
int3
test
jmp
movs
mov
out
gs
popf
adc
push
pop
arpl
outs
mov
mov
pop
sti
pop
pop
mov
xor
sar
mov
ret
jae
mov
std
in
loopne
lea
fisub
cmp
jmp
jae
cmp
lods
pushf
and
sub
cmc
and
sub
je
mov
push
imul
stc
arpl
inc
cmp
test
test
xor
or
hlt
mov
js
lock
aam
test
push
jnp
ins
jno
addr16
shl
sbb
xor
outs
xchg
mov
jge
inc
cmp
rcl
and
dec
xor
pop
je
mov
pop
adc
ror
mov
imul
std
sub
xchg
cmps
xchg
ins
ds
fisub
push
xchg
sar
(bad)
adc
xor
pushf
popa
test
pop
xchg
add
fsub
dec
push
sbb
call
aam
and
(bad)
mov
push
fiadd
xlat
call
ds
jge
bound
fwait
pop
lahf
add
jns
cwde
inc
icebp
sub
mov
mov
push
adc
xor
or
in
inc
int3
outs
or
in
sub
pop
in
in
mov
movs
mov
fisttp
and
int
sbb
fsub
cmps
xor
lahf
test
jo
setl
xchg
inc
or
xchg
das
mov
lahf
mov
cmp
hlt
aas
lds
inc
jno
push
mov
and
add
sub
fs
sub
syscall
mov
imul
mov
or
xchg
push
sar
dec
fnstcw
push
fs
js
xchg
sub
sub
mov
push
adc
test
pop
pop
in
jge
xchg
shl
popa
icebp
push
aad
movs
inc
pop
(bad)
fistp
mov
sti
call
sub
xchg
push
jnp
adc
mov
push
popa
arpl
cwde
popa
add
call
jge
sbb
enter
hlt
mul
sub
std
jle
es
into
mov
dec
hlt
pop
inc
outs
cmps
inc
out
push
adc
mov
mov
add
push
cmp
pushf
dec
push
inc
and
call
rol
lods
jo
aas
mov
and
mov
cdq
sub
nop
imul
push
fdiv
call
mov
sub
xor
pop
mov
mov
into
push
sbb
imul
mov
rol
retf
fdiv
push
pop
jmp
add
enter
stos
leave
fld
inc
mov
fsubr
ss
fisubr
and
in
pop
mov
lock
xchg
sub
fdivr
scas
sbb
pop
xchg
fs
sbb
retf
inc
cmps
mov
movs
sub
movs
rcl
mov
push
adc
out
push
(bad)
fld
(bad)
retf
les
jnp
mov
lock
fisttp
pop
sub
test
pop
jge
dec
inc
add
mov
fstp
sub
fadd
pushf
jle
hlt
sub
push
dec
cwde
addr16
mov
lods
xchg
cdq
movs
stos
push
imul
data16
push
cli
push
mov
pop
and
rcr
sar
jp
mov
cmp
sub
xor
in
js
cmp
cmps
int
xor
test
outs
dec
push
call
or
pop
sar
movs
dec
xchg
mov
clc
pop
pop
sbb
push
and
rol
gs
call
nop
hlt
test
icebp
inc
jmp
lea
xor
push
cmc
in
cmps
push
mov
or
ret
mov
nop
jmp
stc
and
ret
and
fdivr
popa
(bad)
xchg
shr
scas
or
out
xor
mov
popa
mov
das
adc
fisttp
imul
mov
sahf
jne
test
test
popf
sbb
add
mov
test
fnstcw
and
retf
scas
add
mov
mov
jbe
dec
dec
outs
ins
xchg
and
push
mov
sub
xor
jno
xchg
sbb
mov
inc
stos
icebp
add
inc
bound
mov
mov
repnz
push
fxch
mov
mov
pop
stc
jmp
arpl
mov
sub
or
sub
push
jmp
inc
dec
jmp
enter
push
add
and
push
imul
sbb
call
repz
imul
push
stc
in
ins
dec
imul
jg
cwde
lods
cwde
sub
xor
repz
pop
mov
lods
(bad)
cmp
or
popf
add
lea
in
mov
das
dec
in
lahf
or
jno
adc
mov
xchg
mov
sub
shr
(bad)
xacquire
es
aad
mov
lods
adc
les
sub
retf
(bad)
mov
inc
dec
aad
push
adc
fnsave
xor
cmps
rcl
lods
out
hlt
mov
mov
sub
push
dec
adc
inc
push
add
adc
sub
les
out
rol
test
imul
sbb
xchg
(bad)
xor
inc
ret
popf
arpl
or
imul
add
scas
inc
jmp
shl
das
imul
xchg
sub
lods
sub
aaa
ja
jg
push
adc
ss
pop
imul
pop
call
lds
fcomp
mov
jne
mov
and
inc
and
pop
out
movs
sub
movs
rcr
ror
dec
hlt
daa
xchg
cmps
inc
or
inc
mov
ror
and
push
mov
mov
ja
mov
lock
out
repz
xchg
push
test
cmp
mov
sbb
cmp
sub
sub
nop
push
daa
mov
(bad)
scas
sub
push
fsubr
loope
dec
sub
pop
mov
jne
out
pop
mov
mov
cmp
mov
into
mov
push
in
or
ins
cmps
cmp
dec
mov
fsubr
inc
repnz
into
or
test
and
out
pop
xchg
xchg
je
jbe
push
not
loope
sub
or
repz
jno
xchg
cs
out
mov
cmp
dec
ror
inc
mov
mov
cmp
ja
lods
lods
xor
jne
jge
out
loope
inc
ds
icebp
sbb
(bad)
lock
sub
rcl
xor
out
jb
scas
aas
sbb
lods
xchg
inc
loope
out
sbb
inc
aas
cmp
shr
sqrtps
push
xchg
xor
cwde
xchg
out
xor
fistp
add
loop
push
or
mov
sbb
imul
cli
or
cli
cld
loope
inc
sbb
es
sbb
mov
outs
cmps
push
add
ror
dec
mov
addr16
lods
stos
leave
sahf
aam
jns
xor
add
mov
fdiv
inc
scas
dec
jmp
gs
mov
inc
push
inc
add
shl
in
inc
retf
mov
and
in
jle
jae
dec
dec
push
push
out
cmps
cmp
stos
pusha
jmp
cli
adc
test
sub
and
repnz
pop
mov
sub
xchg
fild
xor
xlat
adc
lods
repnz
and
bound
sub
inc
shl
xor
xchg
push
mov
push
icebp
xchg
dec
sahf
dec
sub
inc
mov
adc
jb
add
jl
das
or
or
mov
mov
mov
aam
push
fistp
dec
int3
xchg
cmps
sbb
jmp
push
jb
bound
mov
adc
push
push
clc
push
sar
fwait
sub
dec
imul
pop
in
mov
scas
xchg
sbb
inc
pushf
aaa
inc
adc
sbb
aaa
mov
stos
dec
js
pop
mov
sbb
sar
ins
nop
enter
scas
and
pop
rcl
jne
leave
cli
sbb
arpl
sti
sub
dec
mov
xchg
mov
aam
dec
mov
mov
pop
fbstp
add
xor
mov
ror
stc
lock
and
jo
cmp
out
add
dec
xchg
pop
mov
sub
daa
push
mov
mov
ss
xor
pop
div
mov
inc
push
xchg
dec
lds
jbe
sti
mov
je
pop
addr16
push
xor
shl
in
scas
or
push
mov
or
movs
sbb
adc
fiadd
mov
idiv
xor
mov
sub
or
pop
sti
loop
adc
adc
sahf
add
jecxz
retf
xor
xor
ficomp
movs
and
cs
cmp
ficom
mov
xchg
sub
sub
add
push
or
mov
out
mov
lea
xor
xor
xchg
je
sub
cmp
sub
xor
aad
aam
dec
out
sub
inc
mov
jno
add
pop
pop
rcr
bound
mov
(bad)
imul
stos
jne
mov
dec
js
mov
es
mov
aaa
xchg
sub
pop
push
push
fcomp
(bad)
aad
loop
mov
outs
and
(bad)
dec
into
mov
cmp
push
push
add
mov
sub
dec
or
push
jo
out
(bad)
mov
or
and
int3
xor
imul
jmp
gs
cmp
shr
leave
mov
xor
adc
inc
ja
pusha
dec
sbb
cmc
push
pop
js
jmp
push
bound
xchg
sbb
leave
push
or
jecxz
sbb
fild
xor
addr16
sub
rcl
je
mov
cdq
lahf
pop
mov
fistp
fwait
mov
dec
xchg
test
mov
enter
repz
rcl
dec
jecxz
movs
mov
psubsw
pop
sub
(bad)
pop
cwde
add
cmps
clc
pop
add
scas
scas
xor
sbb
xor
mov
xchg
mov
xchg
and
or
mov
push
fidiv
and
adc
movs
inc
imul
adc
sbb
mov
frstor
cmc
inc
call
sahf
xchg
or
loopne
out
pop
jns
(bad)
mov
xor
jno
pop
inc
inc
rcr
or
cmc
pop
sbb
dec
xor
pop
popf
popf
xchg
jge
sbb
addr16
int
loopne
imul
cwde
or
sub
sahf
xchg
je
pop
jae
or
psubq
ds
mov
sbb
idiv
xor
outs
jae
repnz
pop
xor
scas
mov
mov
imul
add
xor
stos
sub
or
mov
sbb
sti
shl
or
shr
cdq
xor
cld
cmp
pop
and
xor
adc
dec
or
xchg
ins
outs
dec
aam
push
nop
iret
in
lds
into
dec
cmc
mov
xchg
cmp
lods
mov
mov
add
stos
xlat
lahf
shl
imul
push
rcl
add
pop
xor
add
jl
(bad)
mov
xchg
xor
aad
xchg
(bad)
(bad)
retf
mov
pop
add
pop
fwait
inc
jle
test
sbb
popf
loope
jge
mov
sbb
fdivr
mov
sbb
neg
out
add
(bad)
sbb
xchg
cmp
pushf
out
div
xor
xor
mov
pop
fisub
fnstcw
and
fistp
adc
outs
std
xor
jg
mov
sti
lock
and
ficom
or
bound
xchg
test
lea
(bad)
jmp
pop
shr
aas
pushf
cmps
inc
ficom
jecxz
lods
dec
scas
push
pop
scas
fdivr
fild
fstp
out
fwait
cmps
add
aad
jnp
or
icebp
sub
or
mov
js
or
xchg
in
fidivr
mov
sub
int
sub
in
add
fdiv
mov
ret
xor
push
addr16
and
fstp
shl
jmp
and
or
jecxz
mov
xor
shr
div
xor
icebp
sub
in
mov
dec
lds
push
cld
sbb
test
cmp
cmps
shr
loop
or
(bad)
out
mov
in
data16
fisubr
cld
sahf
test
in
aam
sub
rcl
in
js
jae
test
mov
mov
jae
bnd
mov
or
lods
cli
(bad)
out
(bad)
in
mov
mov
shl
and
popf
push
mov
cmp
imul
icebp
outs
in
fstp
fbstp
fdivr
loopne
add
and
and
in
xchg
ds
xor
repz
lock
jecxz
test
ds
(bad)
jg
lods
adc
out
repz
les
sti
jecxz
mov
or
sub
xlat
lea
or
out
fsub
or
sbb
movs
loop
cld
add
lahf
jg
jbe
sub
xchg
fs
jle
xchg
out
sahf
lock
sbb
cmc
mov
loope
sub
dec
int
in
stos
inc
inc
fld
mov
in
in
adc
xchg
inc
js
loopne
dec
rcr
sbb
xor
mov
push
inc
sbb
jg
fmul
mov
add
icebp
in
push
dec
mov
mov
cli
hlt
into
outs
mov
xor
arpl
adc
mov
add
inc
xor
jmp
mov
or
mov
sbb
call
push
sar
xor
mov
dec
xchg
and
imul
fsubr
and
or
js
outs
push
cmps
pop
addr16
jb
lahf
fst
jg
loop
mov
push
mov
push
sub
xchg
ja
or
sub
add
popf
cmps
xchg
test
and
adc
dec
mov
fbld
lds
sub
jecxz
mov
mov
rcr
and
outs
inc
daa
les
adc
aas
shl
or
cmp
adc
mov
lahf
imul
inc
lods
mov
rol
dec
scas
inc
(bad)
rcr
mov
(bad)
fisubr
enter
cmps
and
sbb
xor
add
adc
test
dec
js
in
adc
cs
sub
lea
enter
das
in
push
add
fwait
pusha
rol
test
add
sbb
inc
xor
fcomp
int3
call
mov
cli
out
fdiv
and
xor
mov
mov
push
fisubr
les
mov
cli
pushf
or
ret
jae
cmp
and
mov
xchg
lds
dec
(bad)
jne
loopne
jl
fidiv
cld
sar
movs
jbe
xchg
push
dec
lock
ret
cmp
(bad)
push
dec
ds
push
jle
jae
push
sub
loop
push
retf
and
stos
jle
fiadd
cld
xor
jmp
pop
imul
daa
adc
xchg
jnp
push
sbb
in
cmp
lock
mov
xchg
inc
sbb
push
sub
xor
(bad)
shl
push
jbe
jmp
mov
les
gs
push
mov
lahf
jbe
adc
pop
test
mov
jl
xchg
jge
mov
pop
mov
cs
fidiv
nop
sbb
nop
test
jae
or
je
jge
sub
(bad)
pop
pushf
adc
aam
data16
pushf
cld
jmp
jge
clc
popf
cs
retf
pop
mov
movs
jmp
sbb
inc
mov
mov
test
mov
adc
dec
arpl
ret
fdiv
sub
(bad)
shl
lds
dec
add
dec
pop
xchg
bound
or
lea
es
enter
fidiv
repz
mov
xlat
pop
inc
sbb
or
inc
add
or
lods
xor
leave
in
or
sbb
div
jno
adc
outs
adc
mov
jp
add
cmp
push
fmul
push
adc
cmp
data16
sbb
fsub
enter
idiv
adc
sbb
int3
pop
pop
shl
xchg
push
or
jb
das
push
addr16
test
pop
test
mov
out
scas
bound
in
dec
arpl
pushf
add
pusha
xchg
je
movs
push
nop
cmp
stos
jnp
daa
sbb
mov
jns
cmp
dec
loop
jns
ss
cmps
push
cmp
imul
and
inc
aaa
pop
cmp
mov
jge
pop
into
pop
push
sub
jge
xor
adc
sub
fs
or
icebp
inc
mov
xlat
popf
jecxz
add
pop
pusha
pop
and
pop
jmp
shr
aam
fld
jle
(bad)
sbb
fiadd
shr
pop
cmp
inc
xchg
mul
cwde
int3
(bad)
fidiv
addr16
xchg
mov
divps
inc
outs
(bad)
xlat
int
enter
test
cmc
xor
int3
jne
sub
cdq
xor
xor
cwde
mov
inc
ja
cli
div
jbe
out
mov
in
gs
stos
xchg
sbb
pop
or
and
sbb
jo
cmp
mov
pop
lahf
ret
retf
jp
jno
push
repz
xor
stos
xchg
std
test
jmp
mov
mov
or
lea
push
jmp
adc
jl
jle
(bad)
movs
test
addr16
jo
xchg
push
popf
pop
lods
ins
push
cs
rol
ss
out
mov
add
xlat
shl
adc
inc
cmp
or
rcr
mov
cwde
popf
mov
fcomp
jmp
mov
aad
and
sbb
xchg
adc
ds
sbb
les
and
pop
dec
lods
mov
pusha
rol
jae
movs
sbb
mov
rcr
add
(bad)
sbb
or
xor
ds
pop
sbb
or
div
ins
jmp
or
adc
pop
scas
cdq
push
push
(bad)
in
rol
test
push
xchg
sub
mov
popf
into
add
push
cli
or
loop
and
mov
xlat
js
or
clc
test
call
or
rcr
pop
fld
dec
add
lods
mov
mov
push
outs
rcr
and
push
and
test
adc
jb
(bad)
ins
in
xor
mov
xchg
ss
mov
loope
mov
mov
imul
popf
and
adc
in
jl
push
int3
xor
aas
mov
adc
fsubr
into
mov
ret
clc
jecxz
push
test
xchg
mov
dec
jns
pop
and
add
jle
xor
rol
sbb
fcomp
inc
test
bound
dec
jmp
ins
or
adc
jge
fadd
mov
fs
(bad)
loopne
(bad)
outs
push
movs
les
inc
xchg
imul
lods
nop
sbb
mov
(bad)
out
push
xchg
jo
jg
inc
test
test
sahf
xchg
popf
ret
mov
int
jecxz
dec
push
outs
lock
cmp
fnstsw
mov
push
xchg
mov
(bad)
mov
xchg
scas
mov
(bad)
jo
(bad)
hlt
pop
jge
ins
sti
xchg
mov
push
dec
dec
xor
setg
fild
jb
aas
cmp
loop
sar
sbb
sub
xchg
out
adc
ss
imul
iret
hlt
movs
inc
(bad)
dec
mul
fisub
or
or
add
pop
rcr
jmp
or
enter
loop
mov
mov
out
repnz
cdq
fild
pop
data16
mul
repnz
cmp
adc
dec
out
sbb
(bad)
int3
adc
cmps
clc
xor
clc
and
daa
pop
dec
xchg
ret
and
jne
retf
jge
adc
and
scas
pop
jmp
je
or
in
mov
jmp
daa
lds
imul
or
pop
adc
add
pop
xor
cmp
pop
jge
mov
into
(bad)
in
sub
jge
mov
pop
mov
push
int
movs
scas
and
rol
jp
mov
add
fld
stc
inc
sahf
outs
or
sub
hlt
sub
bound
or
push
adc
std
inc
adc
sbb
test
pushf
repz
sbb
sahf
popa
jle
rcl
mov
pop
shr
inc
iret
and
iret
jb
out
test
cmp
jmp
(bad)
jmp
icebp
jb
mov
imul
out
mov
movs
popf
or
pop
imul
imul
sub
cmps
mov
rcr
jp
in
mov
pop
stos
in
addr16
pop
push
push
ror
pop
ror
push
add
mov
cli
jae
fimul
dec
fs
lahf
add
outs
jg
adc
sti
cmp
les
pushf
shr
rcl
(bad)
jmp
mov
loopne
push
push
push
sbb
jae
inc
adc
(bad)
rcl
les
push
pop
and
int
dec
push
lods
hlt
out
xchg
imul
push
call
mov
hlt
xor
xlat
movs
je
fisubr
into
pushf
mov
loope
or
mov
lock
sub
mov
xchg
ror
test
cmp
pop
aad
push
fnstcw
dec
mov
jne
popa
test
cmp
jne
fs
or
rol
nop
dec
cmp
inc
mov
inc
daa
cmc
pop
arpl
mov
sub
cmc
mov
aas
pop
int
sbb
jmp
pop
imul
outs
add
push
rcl
inc
aam
pop
arpl
or
sbb
ror
lds
mov
cld
dec
sub
xor
ss
mov
dec
(bad)
jmp
xchg
mov
inc
lea
mov
test
jp
rol
jl
and
push
mov
nop
mov
adc
xchg
and
mov
seta
cmps
mov
mul
into
push
shl
xchg
mov
loop
mov
sbb
rol
lds
(bad)
rcl
repz
or
lds
loope
bound
mov
cmp
pop
mov
push
sbb
cmp
cli
xlat
jnp
mov
sub
or
sbb
mov
cmps
inc
fisttp
or
sahf
(bad)
push
push
pusha
loopne
sub
inc
jbe
stc
sub
ss
clc
sbb
or
xor
cmps
rcr
sub
and
pushf
call
repz
xchg
mov
jnp
hlt
sub
ror
outs
outs
or
xchg
sub
xchg
pop
cmp
dec
ds
dec
cmps
movs
mov
fwait
jle
push
xchg
clc
retf
cmc
outs
fistp
sbb
jle
pop
jmp
icebp
fs
cmps
sub
dec
xchg
imul
sbb
xor
enter
in
lock
jecxz
enter
pop
clc
and
and
mov
and
jo
or
jne
movs
sti
arpl
fdiv
mov
in
sbb
dec
arpl
mov
inc
cmp
clc
scas
mov
add
(bad)
jg
mov
push
and
stos
stos
test
test
xchg
xor
jecxz
xchg
jge
inc
pop
sar
sub
inc
pop
xor
xor
jecxz
arpl
push
jb
add
jecxz
std
jae
xchg
out
bound
in
jmp
jmp
xchg
rcl
push
aad
outs
cli
sbb
gs
mov
cwde
push
lods
xchg
mov
inc
inc
dec
fs
loopne
sub
fwait
outs
lahf
repz
loop
lock
std
sub
add
adc
sub
rol
add
rcl
shl
add
mov
(bad)
enter
sub
or
mov
jp
and
jne
ret
not
dec
mov
imul
dec
(bad)
sub
jnp
mov
mov
mov
pop
sbb
inc
xchg
adc
dec
adc
sub
cmc
dec
fcomp
or
pusha
sub
mov
push
hlt
dec
push
or
pop
cmp
scas
jb
push
mov
repz
jp
jno
adc
xchg
iret
aam
sbb
repnz
mov
cmp
add
test
xchg
inc
inc
sahf
sub
in
test
in
je
out
test
or
inc
sbb
mov
add
mov
test
pop
stos
cmp
add
add
push
scas
or
aas
scas
dec
pop
(bad)
arpl
inc
arpl
push
adc
pop
pop
push
daa
or
jno
pop
cmp
lock
fdivr
sbb
ror
sbb
sub
cmp
cld
xchg
lock
cmps
or
mov
xor
stc
aaa
push
or
outs
je
jo
cmp
psubsb
aam
jb
lods
and
mov
adc
pop
rol
leave
jae
pop
out
inc
xchg
iret
mov
jge
std
repnz
and
mov
pop
push
mov
jp
movs
stc
gs
jo
mov
in
pop
adc
test
add
inc
and
push
aam
div
ja
ins
pop
out
pop
dec
sub
ficomp
xor
fsubr
sbb
add
xchg
mov
jns
sub
lods
sbb
adc
mov
sub
sub
aad
xor
cmps
push
dec
in
add
inc
add
lods
push
mov
pushf
pop
mov
(bad)
pop
ret
pop
icebp
int
xchg
push
std
lods
or
jbe
cmps
fidiv
int
push
jecxz
repz
fwait
sbb
cmc
mov
lea
repnz
call
(bad)
mov
call
pop
loope
sub
pop
movs
or
ret
push
rcr
add
pop
mov
bound
fucomip
jnp
lea
je
jno
in
cwde
fld
jne
mov
test
shr
ffree
jno
test
ret
xor
sbb
and
in
daa
ror
or
not
(bad)
test
adc
push
nop
push
mov
adc
adc
loop
or
jecxz
int
pop
aam
cmc
hlt
aam
repnz
pushf
xlat
pop
out
cli
loope
sbb
mov
push
mov
cmp
daa
movs
ds
(bad)
pop
pop
jne
or
pop
in
mov
stos
cdq
or
fldenv
stos
xchg
xor
sbb
rcr
leave
leave
das
or
mov
cli
add
jmp
in
mov
lahf
ins
push
fwait
call
js
js
mov
fisttp
xchg
jbe
stc
xlat
sub
cmp
mov
and
mov
jb
nop
(bad)
popf
push
mov
mov
cmp
jge
pop
fldcw
or
xor
push
(bad)
fld
test
fld
mov
sar
out
es
push
iret
call
xchg
std
adc
xor
fist
push
push
repnz
xchg
mov
pusha
mov
xchg
adc
sar
or
and
nop
mov
cmp
adc
cmp
cmp
fsub
test
test
xchg
ja
sub
push
pop
pop
add
inc
das
xchg
and
jl
(bad)
xor
mov
adc
xlat
jbe
lods
sub
shl
inc
ret
adc
stos
mov
shl
cmps
jns
enter
movs
ret
jnp
pop
jp
jne
dec
popf
dec
ss
jg
je
and
aas
adc
test
arpl
iret
xor
outs
sub
lock
mov
mov
daa
xor
push
fisttp
cmp
fdivp
sub
sub
test
and
ret
mov
jl
cli
out
xchg
jge
jle
(bad)
mov
xchg
movs
push
sbb
xchg
adc
in
dec
jge
pop
or
hlt
ss
push
jb
mov
pop
pushf
xor
or
sbb
xchg
ss
mov
cmps
iret
in
in
mov
jg
adc
mov
mov
mov
cmp
add
adc
push
(bad)
xchg
stos
adc
(bad)
loope
(bad)
nop
into
push
push
xlat
add
dec
loopne
cmp
movs
mov
add
xor
out
loop
xor
popf
fsub
mov
sbb
xchg
mov
inc
pop
leave
adc
cmp
(bad)
out
or
pop
ret
loop
sbb
and
dec
test
push
dec
rcl
and
xlat
pop
pop
repnz
or
into
pop
les
push
fcomip
mov
cwde
scas
pop
out
sbb
push
xchg
mov
push
popa
cs
xor
mov
iret
adc
mov
aad
pop
cwde
loopne
lds
or
mov
jl
and
dec
sahf
das
cmps
inc
sub
jmp
jb
lds
lods
push
adc
pop
int3
sbb
cmp
data16
cmp
std
inc
or
call
xchg
test
and
push
cld
leave
daa
mov
jae
mov
pushf
cmp
or
clc
daa
ins
ins
std
data16
fdiv
(bad)
and
jmp
push
aaa
or
neg
cmp
inc
(bad)
popf
in
jo
ja
dec
dec
std
pop
retf
std
xchg
js
mov
push
inc
jle
dec
(bad)
fdiv
(bad)
pop
mov
sub
push
mov
icebp
(bad)
mov
jmp
fisttp
into
cli
loop
mov
cmc
or
xor
js
call
mov
mov
adc
cmp
mov
jae
xor
(bad)
lods
jl
movs
fstp
(bad)
adc
push
sbb
popf
fdiv
push
xchg
xchg
fadd
movs
and
hlt
les
test
or
push
cmp
sbb
cmps
dec
cmp
aam
adc
stc
retf
pusha
int
adc
adc
xor
pop
xor
add
pop
adc
aas
popf
push
mov
jbe
neg
out
fild
in
retf
movs
aad
fistp
xchg
popf
stc
jp
nop
and
scas
cwde
ins
lods
fsubrp
leave
jl
mov
xchg
ins
js
lea
push
dec
push
ins
cmp
cmp
and
add
add
repz
push
idiv
(bad)
push
push
pop
mov
xor
cmc
loop
loop
adc
mov
mov
adc
in
pop
pop
pop
fild
stos
sbb
out
or
jno
dec
push
adc
cli
dec
dec
mov
in
mov
idiv
test
nop
test
les
ins
call
lods
iret
and
ins
xor
jp
push
ror
mov
loop
xchg
xor
xor
retf
mov
dec
sub
pop
sti
cmp
icebp
xor
cmp
lea
pusha
imul
add
xchg
push
(bad)
fcomp
scas
pop
(bad)
jnp
inc
sbb
add
inc
scas
or
std
stos
dec
mov
push
ins
adc
or
icebp
and
push
xchg
or
dec
lock
sub
or
aaa
ret
scas
jmp
mov
aam
mov
xchg
jae
xchg
add
xor
ss
pop
loop
inc
(bad)
aad
adc
dec
shl
and
stos
pushf
int3
sub
xchg
add
sbb
add
fistp
mov
pop
mov
jae
inc
jne
cmp
mov
sbb
sub
out
mov
(bad)
mov
fld
fimul
sahf
sbb
mov
mov
jl
xchg
mov
out
and
das
fild
jl
cwde
jg
lds
mov
push
retf
fscale
push
cs
fwait
out
fstp
add
add
imul
lock
cwde
inc
pop
loop
and
fstp
(bad)
sbb
pop
mov
call
lahf
nop
ja
xorps
add
std
enter
pop
mov
sub
push
cmp
sbb
xlat
pop
and
pusha
pop
int
daa
mov
imul
mov
stc
jmp
cld
cmps
ret
jbe
ss
mov
xchg
mov
pop
int
add
jmp
xor
repz
ret
inc
xor
and
ror
mov
ror
sbb
popa
ins
mov
sbb
or
aad
push
(bad)
xor
loope
movs
adc
cmps
out
add
shl
icebp
popf
cmp
sub
ret
cmp
test
clc
and
loope
out
out
mov
adc
clc
ror
push
pop
add
adc
addr16
leave
pop
test
adc
sub
adc
adc
scas
cmps
addr16
imul
add
ret
pop
sub
jae
imul
retf
in
sub
sub
rcr
push
cwde
or
scas
stc
mov
cld
push
dec
dec
cdq
push
jle
fsub
test
ds
loopne
popf
or
jno
clc
mov
out
fnstenv
out
mov
jmp
pop
xchg
dec
or
jns
cli
jb
mov
into
add
(bad)
iret
xchg
(bad)
jle
cld
ins
or
fisub
lea
xchg
mov
cmp
add
loop
imul
aad
pushf
mov
push
int3
cwde
mov
stos
out
daa
and
ret
adc
jo
or
sub
xchg
adc
xor
mov
cmp
dec
mov
cmp
repnz
mov
lahf
push
fnstsw
mov
mov
sub
sbb
push
jo
sbb
cli
mov
xchg
sub
ficom
mov
(bad)
(bad)
retf
add
in
in
je
sub
pop
jmp
test
out
repnz
sahf
(bad)
sbb
sub
sbb
in
and
jge
dec
pop
scas
xchg
jle
pop
outs
push
sbb
stos
enter
ins
push
jne
ins
enter
call
scas
sar
jno
cmp
cmp
xchg
or
lods
push
add
sti
xor
es
xor
add
inc
clc
das
outs
jg
inc
and
out
clc
sti
sar
and
test
push
dec
xor
sbb
xor
mov
lods
imul
in
xchg
push
ret
sub
cmp
xchg
call
dec
cmp
std
js
not
and
xor
mov
mov
out
loopne
gs
add
push
push
iret
dec
nop
and
cmp
add
xchg
dec
xor
pop
xchg
mov
iret
iret
xor
add
push
(bad)
xor
inc
push
xchg
(bad)
cmps
xchg
scas
loopne
add
mov
xor
mov
jnp
sub
and
repz
fnstcw
stos
lahf
(bad)
out
in
lahf
sub
or
(bad)
and
int3
mov
ret
adc
retf
scas
in
das
frstor
mov
inc
push
and
cmps
shr
test
fidivr
xchg
lds
inc
das
dec
push
and
mov
xor
mov
scas
adc
push
ds
sti
cwde
jge
pop
(bad)
in
xchg
out
push
icebp
(bad)
sbb
ret
xchg
daa
inc
cld
in
mov
push
cld
inc
call
mov
pushf
mov
sbb
jecxz
test
in
movs
gs
xchg
jg
pop
shr
gs
pop
shl
out
scas
ret
stc
out
push
rol
jne
and
lods
jge
inc
push
sbb
test
jae
jmp
xchg
sub
cmp
mov
retf
pop
hlt
cmp
push
mov
mov
sub
stos
outs
test
pop
mul
cmovs
and
jg
shl
xor
fldcw
or
mov
mov
lahf
popa
or
pop
mov
mov
test
fild
lods
and
shl
je
ds
xlat
ins
mov
pushf
scas
adc
add
popa
fst
xor
xor
inc
jb
push
or
ret
push
(bad)
out
stc
jmp
mov
retf
test
sbb
popa
pop
pop
enter
push
cmp
(bad)
ret
test
lock
test
dec
sbb
mov
mov
push
js
sahf
push
inc
sar
fild
jo
lods
pop
in
mov
dec
dec
jle
adc
adc
nop
dec
rcr
rcr
xchg
xor
icebp
out
sub
cwde
rcr
lahf
repnz
sub
xor
inc
adc
mov
les
cld
push
mov
mov
add
icebp
cmp
jnp
and
enter
mov
shr
mov
push
push
(bad)
jns
rcr
nop
fdivr
jmp
scas
pop
lock
xchg
cld
cmp
ja
jecxz
ins
or
scas
hlt
sahf
mov
cdq
xchg
repnz
pop
mov
mov
sub
movs
xchg
gs
bound
cmp
daa
cmp
add
call
jmp
or
sub
push
inc
scas
int
fcmovne
xchg
and
(bad)
leave
add
pop
mov
cmps
pop
mov
pop
or
mov
adc
push
sub
xchg
data16
cmp
mov
xchg
inc
daa
cld
dec
fstp
arpl
call
rcr
dec
cmp
icebp
jns
and
add
icebp
imul
rol
ror
(bad)
cmp
mov
outs
loope
lock
sub
push
cdq
jae
pop
jle
mov
mov
sub
push
cmp
or
stos
(bad)
fist
adc
dec
xor
jno
(bad)
jmp
ds
fcmovnu
pop
cmp
adc
retf
adc
sbb
inc
mov
and
(bad)
leave
lock
shr
psllq
hlt
adc
out
mov
xor
aaa
(bad)
ficomp
xlat
adc
addr16
ins
jns
pop
repz
ret
cdq
into
mov
js
mov
loope
sar
mov
adc
ret
cmc
es
dec
sbb
xchg
sub
mov
ret
mov
add
stos
inc
add
cmp
fsubrp
into
jle
enter
xchg
cmps
jecxz
mov
(bad)
sbb
ds
sti
(bad)
outs
add
and
mov
pop
push
outs
push
movs
sbb
ret
xor
push
cmc
ror
mov
adc
mov
xor
jle
ja
call
inc
xor
sahf
leave
call
add
jge
lods
xlat
sti
jmp
fnstenv
cmp
js
pop
repz
and
mov
cmp
mov
add
sub
pop
xchg
ins
fstp
in
clc
scas
cmp
(bad)
push
adc
ss
fdiv
leave
loopne
lahf
call
mov
ins
sahf
ret
shl
and
mov
mov
out
outs
push
adc
mov
mov
fild
or
lea
or
mov
inc
xchg
and
fcom
js
jg
lock
xchg
or
inc
inc
dec
mov
data16
xor
and
popf
xor
rcr
and
(bad)
jl
adc
aaa
or
dec
and
fwait
push
imul
inc
std
addps
push
mov
jg
add
lock
xchg
mov
mov
ins
add
popa
imul
loope
retf
add
push
int
or
mov
aad
test
sar
sahf
outs
cmp
scas
in
and
aam
and
enter
loopne
cmc
cwde
dec
test
xchg
xchg
sub
mov
mov
in
mov
out
push
jne
mov
or
push
lahf
shl
pop
or
retf
add
inc
pop
shr
in
int3
push
sahf
fidiv
call
mov
aas
inc
xor
sahf
bound
cli
xchg
add
xor
call
(bad)
int3
in
arpl
repz
iret
jmp
pop
lahf
fisttp
aas
adc
inc
mov
and
into
out
jne
sbb
lea
add
or
inc
adc
sbb
cmp
lock
out
jp
mov
mov
push
retf
pop
stc
xor
inc
adc
cmp
cwde
inc
in
cvttps2pi
repnz
mov
adc
inc
out
or
add
cmp
mov
pusha
push
mov
add
imul
pop
dec
lods
imul
xor
clc
lods
cmps
xchg
cmps
mov
adc
add
pop
jae
inc
das
test
iret
into
jge
mov
mov
rcl
adc
cwde
fwait
sbb
or
loopne
retf
mov
fnsave
stos
test
mov
fst
aaa
mov
xor
mov
(bad)
add
std
pop
mov
cmps
ins
sbb
loope
push
and
aad
mov
aas
mov
cmps
daa
aam
shr
call
loope
retf
push
jl
mov
mov
lods
push
scas
push
retf
mov
ret
out
pop
push
fmul
pop
icebp
cs
das
mov
mov
or
popa
mov
lods
xlat
fisttp
mov
int3
js
cmp
int3
and
loop
jecxz
repnz
sbb
in
loop
push
mov
xchg
mov
scas
std
dec
retf
inc
movs
jbe
fidivr
mov
or
cmp
inc
jl
inc
or
fcmovbe
cwde
inc
cmps
ret
cmp
cmp
add
xchg
adc
in
pop
call
adc
inc
jo
push
add
push
pop
and
dec
imul
jno
aam
cmp
jb
cmp
mov
mov
push
mov
mov
or
xchg
shl
lock
xchg
in
(bad)
or
arpl
pop
mov
gs
fld
sbb
inc
dec
daa
popa
mov
in
stos
jmp
std
stos
mov
ja
add
sbb
adc
(bad)
scas
test
(bad)
jmp
icebp
out
aam
inc
cmc
or
ss
or
data16
cli
daa
inc
js
in
add
jne
inc
mov
inc
rcr
push
pop
and
pop
xchg
or
or
scas
leave
lods
ja
mov
movs
(bad)
sbb
bound
int
fwait
xchg
out
mov
outs
lods
dec
repnz
xchg
add
daa
jae
mov
mov
adc
jle
loopne
add
inc
jns
push
repnz
adc
scas
sbb
icebp
cs
sbb
jp
jnp
jne
aad
push
std
repz
xchg
ss
mov
xchg
xor
ja
int3
xor
mov
cdq
cmp
pop
stc
clc
into
in
jne
(bad)
cld
adc
dec
sbb
add
(bad)
xchg
jge
ds
dec
or
inc
mov
add
pop
dec
push
bound
cmp
rol
adc
scas
mov
sub
(bad)
xor
push
cld
sbb
stos
loop
ins
push
dec
ret
ja
pop
cmp
or
fisubr
xchg
jno
jnp
and
cli
pop
mov
xor
jne
aas
cmps
mov
xchg
cmp
(bad)
cwde
mov
imul
jo
sub
clc
xor
stos
jecxz
test
jmp
enter
enter
xchg
cmp
mov
sub
scas
or
jg
int3
jo
test
cmps
clc
xchg
xor
pop
pusha
fisub
push
sub
test
adc
jmp
into
test
jmp
int
popf
fwait
push
(bad)
jle
es
dec
inc
mov
scas
loope
xor
cwde
loop
jle
cmp
loop
sub
call
sub
mov
jne
mov
sub
ficomp
jmp
fisubr
pop
sti
push
(bad)
xchg
les
jmp
jmp
and
push
inc
shr
adc
sbb
adc
adc
and
mov
out
scas
cmp
cmp
idiv
retf
ficomp
sahf
cdq
aad
jmp
mov
aad
xor
mov
jno
imul
retf
mov
in
sub
add
outs
fist
mov
jne
mov
test
rcl
mov
sub
mov
in
push
mov
enter
add
jl
cdq
xor
fcom
shl
out
dec
dec
jnp
cld
mov
cmc
or
hlt
mov
pop
out
add
jge
pushf
test
stc
outs
xchg
and
cmp
ins
popa
add
xchg
or
jecxz
bound
aas
pop
iret
rol
and
je
adc
js
bound
arpl
jbe
adc
les
or
aas
xor
pop
mov
(bad)
ja
sbb
int3
pop
mov
rcr
dec
(bad)
lods
fisubr
xor
dec
mov
into
adc
push
dec
inc
lds
daa
mov
xor
inc
push
add
setns
in
add
xor
or
xor
mul
cdq
xchg
adc
imul
sub
add
adc
inc
imul
jne
ja
mov
(bad)
mov
out
loopne
(bad)
adc
dec
ja
sti
xchg
lock
lds
push
or
mov
or
ds
popf
jecxz
or
nop
(bad)
mov
and
adc
mov
xchg
mov
stos
push
jge
jmp
pop
ret
push
test
mov
in
xchg
imul
mov
xchg
adc
hlt
xor
pop
xor
sbb
mov
(bad)
mov
clc
or
or
push
daa
push
stc
loope
sti
shl
inc
cmps
clc
jns
lock
stc
mov
test
call
mov
lods
xor
in
repnz
xchg
sbb
push
push
scas
sbb
fst
mov
jge
push
push
frstor
pop
(bad)
or
push
push
mov
mov
cmp
outs
cmp
cld
cmp
dec
in
jg
cmp
xchg
and
jnp
mov
xchg
sbb
aas
clc
(bad)
inc
sbb
lea
or
xor
dec
stc
mov
pop
push
scas
xchg
cmp
jle
movs
imul
add
adc
lock
lahf
dec
cmp
mov
popa
push
and
mov
mov
add
adc
pop
cmp
addr16
aad
fs
test
out
fisubr
push
dec
add
dec
jb
sbb
jne
test
(bad)
xchg
push
and
aaa
mov
das
enter
jl
fisub
movs
xor
aaa
adc
cld
in
fsubr
add
adc
push
cmp
(bad)
not
mov
cmp
push
sub
icebp
jp
xlat
lods
push
cmps
sub
push
add
and
adc
repnz
out
mov
getsec
mov
jmp
xchg
in
pushf
pop
sbb
out
xchg
lods
push
imul
mov
fsubp
stos
adc
iret
adc
inc
outs
fs
adc
popf
test
cs
dec
push
(bad)
jns
les
fild
mov
push
and
push
ss
fcmovnu
jl
call
mov
jb
mov
cwde
jo
fldenv
xchg
ins
adc
mov
int
movs
ret
mov
stos
fimul
inc
add
push
into
pop
pop
ror
ja
inc
mov
mov
sti
sub
js
push
adc
add
out
aam
stos
iret
in
push
fadd
mov
(bad)
(bad)
in
inc
js
lds
hlt
jmp
inc
in
push
pop
mov
std
mov
push
adc
xor
shl
inc
mov
inc
call
fistp
adc
ret
adc
imul
adc
jp
and
dec
jns
cmp
out
or
xor
retf
bound
xchg
out
add
push
test
leave
jbe
jnp
in
add
push
ins
or
xchg
adc
jle
js
call
fsub
push
add
and
(bad)
jp
cmp
repz
ss
mov
movs
xchg
cmp
xchg
aaa
ins
frstor
pop
sub
dec
shl
mov
jae
mov
xor
adc
std
cmc
add
jle
and
mov
lea
inc
repnz
movs
dec
push
push
cmps
pop
aas
mov
xor
out
mov
sub
adc
pop
mov
lea
jnp
cmp
mov
jmp
mov
frstor
ds
mov
pop
cli
fist
call
dec
cmc
das
fisub
xlat
or
inc
adc
cmp
mov
les
adc
cmp
inc
sbb
or
or
ins
inc
inc
enter
cwde
enter
cmp
js
cmp
sbb
adc
cld
out
lods
mov
enter
inc
push
int
fidiv
rol
push
pop
dec
inc
cmp
or
lods
sbb
(bad)
xchg
xchg
xchg
mov
aam
fild
inc
and
dec
mov
mov
movs
nop
inc
mov
(bad)
xor
push
hlt
out
imul
pop
nop
mov
shl
daa
ret
fld
add
add
es
mov
and
mov
shufps
out
xchg
and
mov
or
jno
and
pushf
ja
fs
std
dec
cmp
not
and
pusha
mov
retf
and
imul
and
dec
and
jecxz
sub
ins
cld
shr
or
jmp
(bad)
repnz
aad
cmp
cmp
retf
sbb
add
std
jl
push
push
ins
sbb
mov
push
pop
xor
pop
and
ins
jle
pop
test
aaa
(bad)
xor
jb
aaa
(bad)
sub
jmp
pop
in
dec
jb
aas
into
(bad)
jno
icebp
fs
lods
push
out
adc
and
shl
scas
or
mov
adc
dec
int
push
and
and
inc
(bad)
adc
mov
loope
xchg
inc
jge
sbb
pop
ret
test
mov
out
jge
fisub
push
neg
(bad)
cmp
pop
pop
call
add
or
push
xlat
cmp
fisttp
mov
jg
nop
not
aam
push
sbb
ja
test
adc
test
mov
dec
xchg
jg
mov
les
(bad)
jp
and
cmps
enter
or
xchg
jg
movs
inc
mov
cmps
xchg
push
scas
jo
stos
xor
add
repz
inc
ja
std
xchg
gs
stos
bound
addr16
mov
fld
mov
bound
mov
fdiv
sbb
xchg
int3
jmp
mov
test
js
dec
mov
mov
into
sub
retf
les
dec
inc
add
sbb
cmps
xchg
cwde
std
dec
sbb
popa
push
cmps
(bad)
ins
(bad)
aad
xor
push
int
shl
inc
addr16
push
sub
out
out
and
aaa
retf
mov
retf
mov
leave
leave
add
sub
je
xor
add
and
into
arpl
cli
test
xchg
xor
push
pop
sub
push
jmp
out
pop
or
inc
out
push
les
test
retf
movs
stos
cmp
push
push
mov
push
sbb
sub
loopne
sbb
cmp
mov
jo
sub
sub
xchg
add
fs
cmc
xchg
push
dec
cmp
ja
mov
out
scas
int3
bound
test
out
xchg
mov
fdiv
cmp
fwait
into
jne
ins
cmp
imul
lock
jecxz
fsubr
and
loop
outs
push
in
test
(bad)
xor
push
xchg
jle
xchg
inc
arpl
ds
mov
push
rol
jnp
sbb
push
pushf
inc
iret
out
data16
leave
loop
xor
dec
out
movs
dec
sahf
xor
icebp
nop
loop
sub
gs
mov
ins
sub
and
sbb
sar
int3
mov
xor
int
push
stos
push
inc
push
xor
push
lods
mov
daa
or
adc
call
push
mov
pop
and
jp
pop
xor
je
mov
cld
and
fdiv
int3
add
loop
mov
test
mov
fmul
rcr
imul
enter
sbb
ds
test
cmp
ins
xor
test
sbb
jp
cmp
xor
outs
and
ins
nop
push
call
cmps
in
sbb
mov
mov
or
pop
popa
stc
cmps
inc
dec
cwde
retf
jnp
and
test
adc
daa
mov
daa
retf
mov
fwait
in
ret
pop
jb
ins
xor
movs
dec
fld
xor
sub
not
jle
jge
cdq
arpl
lods
sbb
pop
and
jne
shl
push
sbb
fbld
in
movs
jnp
jno
das
jg
sub
jmp
stc
inc
mov
mov
(bad)
cmp
(bad)
push
or
add
(bad)
mov
aaa
pushf
sbb
jnp
mov
add
aaa
xchg
je
nop
rcl
pusha
pop
movs
sbb
mov
lods
sub
jnp
je
movs
hlt
sti
jmp
mov
push
xchg
ficom
ret
test
stos
(bad)
js
jmp
add
inc
lods
popa
add
mov
out
pop
(bad)
mov
call
or
add
into
out
(bad)
loopne
addr16
je
pop
call
mov
dec
into
mov
gs
sub
gs
(bad)
sub
add
in
pop
std
dec
and
pop
mov
les
imul
loopne
in
inc
in
stos
hlt
add
push
leave
or
cmc
pusha
jmp
stos
sbb
mov
int3
or
test
pop
loope
out
scas
sub
ret
inc
ds
inc
(bad)
pushf
stc
loop
jecxz
lahf
xchg
shl
rcr
fs
xor
jne
cmp
inc
loope
cwde
out
das
in
hlt
push
xchg
sub
movs
push
call
ins
movs
and
cs
(bad)
in
aad
xchg
ret
pop
aam
das
add
je
sbb
int3
mov
lock
jp
jmp
adc
xor
scas
in
pop
stos
pop
fadd
cmp
movs
rol
dec
mov
adc
jmp
adc
xchg
je
adc
div
fcomip
ret
inc
cdq
cs
sub
inc
mov
rol
and
rcl
(bad)
mov
mov
mov
pusha
cwde
xchg
pop
cmp
sbb
jae
cmp
mov
xchg
jl
adc
add
push
xor
mov
arpl
hlt
dec
dec
jg
stos
push
repz
sti
mov
cmps
ffreep
inc
jmp
mov
mov
sub
adc
ins
or
ror
and
daa
jae
out
inc
out
data16
and
and
mov
sbb
ror
ja
push
xorps
xchg
cmp
push
mov
or
pop
popa
adc
mov
mov
sub
sub
(bad)
sbb
hlt
jno
fild
ja
adc
sbb
scas
jne
int3
xchg
inc
iret
cmp
dec
shl
shl
fsub
pusha
mov
jg
cli
add
aas
in
pop
imul
jle
sub
push
cwde
jmp
imul
imul
es
xchg
mov
and
rcl
es
pop
push
inc
dec
cdq
dec
mov
lds
adc
shl
mov
sbb
pop
call
jg
sub
ret
jp
xchg
push
sbb
fdivr
cwde
fist
fwait
jl
jns
xor
pop
dec
pop
push
sbb
dec
sbb
int3
(bad)
fimul
mov
stos
cmps
lea
sbb
mov
or
sti
ds
in
inc
add
js
test
jmp
(bad)
in
inc
jne
icebp
and
mov
mov
pop
je
sahf
xchg
add
xchg
sub
cdq
(bad)
ret
dec
sahf
add
sti
and
(bad)
push
gs
adc
jge
(bad)
sar
jl
cdq
loop
sub
jb
push
sahf
xor
mov
ficom
mov
hlt
(bad)
cld
ins
cmp
jmp
dec
fisubr
push
xchg
sub
(bad)
out
je
cmp
xchg
rcl
dec
add
loopne
mov
sub
and
and
out
dec
pmulhw
xchg
mov
push
imul
adc
adc
repz
adc
mov
(bad)
or
cmp
and
or
inc
inc
push
mov
into
adc
push
dec
ins
dec
int
push
jg
jecxz
dec
push
push
sub
out
mov
lds
mov
sar
xor
aas
jns
les
test
loopne
xchg
mov
and
jb
sub
sbb
inc
jno
or
mov
adc
sbb
mov
mov
ins
jmp
(bad)
and
enter
lock
fmul
das
mov
xor
ds
mov
es
add
fld
jecxz
je
dec
xchg
call
daa
aad
jmp
cmp
dec
(bad)
jmp
loope
ror
cwde
fistp
mov
pop
outs
je
dec
or
or
add
mov
xor
pop
sub
loopne
sbb
adc
mov
push
mov
int
add
dec
ffree
mov
jo
push
or
or
and
outs
js
dec
into
addr16
cmp
fsubrp
ret
mov
inc
jne
adc
push
out
cvtps2pd
sar
push
cmc
imul
stc
sar
pop
add
jmp
ins
xor
std
sub
dec
out
mov
mov
or
xor
pop
mov
sahf
or
cmp
aaa
and
and
jbe
jge
aas
cmp
mov
(bad)
repz
cmp
add
xchg
aam
sub
lea
std
loopne
mov
(bad)
jns
mov
mov
add
xchg
in
push
js
test
pop
popf
loopne
adc
in
pop
dec
mov
mov
js
xor
cmp
in
xchg
inc
xor
in
leave
mov
jns
dec
pop
lock
jmp
bound
movs
mov
cs
jecxz
aas
jnp
add
aaa
pop
ret
pop
xchg
clc
adc
mov
add
test
push
or
sub
loope
in
mov
and
xor
mov
dec
retf
cs
outs
test
mov
add
dec
jae
cmp
push
scas
test
pop
std
lods
sbb
lahf
cmc
cmp
dec
sub
mov
add
xchg
pop
neg
jo
jb
inc
(bad)
in
xchg
sub
aaa
and
out
fmul
je
(bad)
rcr
data16
push
nop
sbb
sbb
addr16
lahf
add
loopne
add
(bad)
fsubr
cmp
adc
jne
ds
mov
xchg
daa
das
dec
push
push
add
jb
icebp
retf
retf
mov
js
push
cmp
in
movs
or
push
jle
sub
push
jmp
xchg
dec
or
push
dec
push
(bad)
es
and
sbb
cmp
imul
out
mov
and
shr
call
punpckldq
mov
mov
pop
adc
dec
mov
stos
enter
arpl
jge
rcr
cmps
inc
iret
inc
xor
sub
adc
or
cmp
xchg
cs
add
call
or
jle
lods
sar
jge
xchg
retf
mov
sub
mul
cwde
js
push
fidiv
rcl
and
push
jecxz
jbe
jl
or
mov
hlt
ret
xor
ret
mov
cmp
dec
gs
add
inc
nop
enter
push
mov
inc
add
cmps
add
test
pop
dec
jb
pop
arpl
mov
jmp
stos
stos
jno
ins
mov
mov
push
in
mov
js
mov
les
fwait
dec
inc
pop
cmps
mov
sub
lds
and
cmp
push
sub
jg
in
test
jb
in
adc
add
pop
call
xchg
test
std
push
aad
fidivr
inc
(bad)
cmps
dec
jnp
xchg
mov
lahf
pop
fadd
xchg
push
cmc
sub
and
sbb
pushf
xchg
lahf
std
mov
test
stos
jmp
dec
cld
push
sbb
pop
mov
out
pop
lahf
mov
sbb
mov
inc
cwde
in
mov
inc
or
test
sub
loopne
cmps
sub
xlat
int3
dec
and
xlat
cmc
dec
lods
fwait
cmp
std
jo
in
mov
sbb
push
inc
pop
sahf
or
jnp
lds
add
fcomip
jo
les
out
push
xchg
and
scas
imul
out
pop
movs
add
jge
stos
arpl
leave
jmp
in
cwde
fwait
test
je
mov
pop
jns
in
das
outs
mov
daa
mov
mov
sbb
jecxz
push
jecxz
les
in
mov
mul
mov
jp
rcr
sti
lahf
jbe
sub
std
(bad)
in
mov
(bad)
loop
or
ds
shr
sbb
enter
jne
sub
sti
jge
inc
pop
jbe
add
pop
pop
sub
aad
sbb
push
dec
xchg
xor
mov
cmps
sub
push
push
push
addr16
adc
into
cmp
int
add
lods
scas
inc
mov
ja
push
cmp
pop
push
cmp
cmps
push
(bad)
cwde
push
sub
clc
xchg
xchg
les
lea
sub
or
ds
cmp
mov
scas
sti
xor
lea
repnz
push
ret
stos
(bad)
test
clc
mov
ins
enter
test
cwde
addr16
(bad)
cmps
add
out
call
mov
xchg
lods
jb
add
pushf
imul
mov
jmp
xor
inc
rcl
pop
je
in
neg
and
loope
mov
loope
les
xchg
das
and
xchg
sbb
xchg
mov
jmp
popf
stos
sub
out
jnp
stos
lds
push
pop
addr16
and
push
dec
push
fadd
mov
out
in
inc
or
lods
mov
mov
mov
outs
and
call
mov
mov
xchg
adc
and
(bad)
(bad)
icebp
cmp
jmp
jae
xchg
cwde
adc
adc
retf
es
push
test
dec
or
leave
dec
add
outs
in
cmps
mov
adc
bound
stc
mov
mov
(bad)
stos
das
movs
sahf
lods
rol
int
scas
fs
imul
adc
das
int3
add
retf
cmp
movs
or
xor
or
shl
add
and
push
movs
pop
cmc
inc
lock
and
sub
jl
mov
pop
mov
adc
push
add
jbe
dec
pop
xor
jo
adc
(bad)
adc
push
aas
scas
clc
fucomp
and
sar
int
push
push
push
das
cmp
dec
ja
retf
dec
test
inc
rcr
fisttp
fisttp
sub
hlt
test
aas
retf
xchg
push
mov
add
int3
cwde
and
and
push
enter
xor
cmp
add
adc
pop
push
or
cwde
test
xchg
mov
aam
xchg
xchg
cmc
mov
jo
ins
or
stc
pop
xchg
adc
cmps
data16
pop
cmc
cmp
scas
sub
test
jge
push
push
cld
mov
out
adc
aas
mov
leave
out
lea
popa
mov
pop
dec
mov
aam
cli
bound
test
inc
imul
jg
jns
add
ret
lods
sbb
test
jp
mov
cmp
icebp
adc
jo
leave
ss
jns
mov
ins
pusha
repnz
add
mov
test
push
fdiv
mov
inc
sub
out
repnz
add
jp
ss
popf
stos
xor
addr16
pop
mov
std
cmp
les
test
adc
pop
jae
dec
sub
ins
xchg
stos
jge
jg
jp
lock
daa
mov
cmp
rol
fwait
xchg
repnz
jg
cld
in
xchg
outs
xchg
loope
dec
adc
test
ja
or
cmps
repz
cmps
and
enter
or
lods
xchg
out
(bad)
dec
fidiv
inc
push
pop
jge
and
and
xchg
jnp
fwait
stc
xchg
add
jmp
shl
xor
pop
sbb
mov
leave
or
imul
xchg
mov
jbe
cmp
loop
xchg
test
sti
pop
pop
adc
xchg
pushf
cmp
pop
out
mov
(bad)
test
daa
and
cdq
bound
sar
push
cmps
pop
jbe
retf
hlt
repnz
mov
pop
sub
xor
lahf
sub
enter
xlat
jecxz
div
nop
cmp
iret
dec
push
and
cdq
sbb
clc
inc
add
(bad)
mov
push
ins
leave
jmp
mov
pop
mov
xor
push
out
pop
shld
cmc
jle
adc
lahf
mov
or
and
cmps
shl
dec
aad
nop
iret
xchg
bound
dec
mov
mov
mov
pop
loopne
adc
mov
dec
mov
ja
xchg
mov
jo
out
or
cli
push
jl
aad
push
dec
stos
push
mov
hlt
mov
test
rcl
jmp
test
pop
and
mov
adc
sbb
add
adc
inc
outs
loope
lock
cmc
daa
in
fist
push
cmp
cmp
lods
aam
rcl
dec
xchg
lahf
mov
push
mov
add
rcr
cdq
dec
pop
cmp
(bad)
bound
cmp
push
(bad)
out
push
sbb
dec
lods
pop
icebp
mov
das
ret
rcr
push
and
ss
sti
add
das
sbb
mov
das
push
sbb
xor
cld
xor
push
pop
jge
push
xchg
add
inc
popf
pop
test
sbb
jg
dec
push
arpl
js
push
cmp
adc
icebp
int
dec
test
pop
jnp
ss
sub
sub
mov
cmps
dec
out
aaa
fs
aad
xor
pop
test
popa
fstp
mov
out
xor
xchg
mov
rcr
jp
scas
aas
ficomp
aas
inc
and
and
popa
lahf
ins
outs
lods
fidivr
mov
pusha
mov
outs
(bad)
loopne
call
arpl
cmp
xchg
lahf
adc
add
inc
mov
(bad)
movs
jns
test
mov
int3
retf
fdiv
xchg
jecxz
inc
call
add
or
dec
js
icebp
hlt
add
ret
and
push
cmp
mov
rcl
sar
push
xchg
jbe
scas
push
pop
test
xchg
jg
loope
xor
jmp
push
iret
mov
repnz
and
dec
lods
mov
jbe
adc
fstp
sub
push
hlt
fisub
adc
pop
jbe
jmp
ss
fucom
mov
(bad)
and
pop
aad
aas
cmp
xor
pop
ret
data16
ss
cmc
hlt
xor
adc
pop
mov
fmul
mov
fs
mov
out
leave
test
xlat
and
or
pop
rcr
push
xchg
or
sub
loope
repz
ds
pop
adc
sbb
pop
test
push
mov
(bad)
ror
popa
mov
mov
test
mov
loopne
inc
sti
xchg
mov
std
cmps
ss
lds
mov
mov
mov
xor
sub
jl
leave
mov
dec
xor
aaa
sar
and
clc
add
and
mov
sbb
int3
aas
imul
js
mov
and
popa
test
loopne
push
sti
(bad)
or
mov
sub
(bad)
(bad)
sbb
add
aaa
cmc
or
leave
fild
mov
pop
in
inc
xchg
xlat
int
retf
add
xchg
add
adc
xlat
push
push
pop
nop
xchg
inc
dec
pop
xchg
cmp
(bad)
(bad)
mov
pop
jnp
push
xchg
test
shl
mov
fisub
mov
sbb
mov
mov
pop
inc
mov
cmp
int
xchg
out
xchg
mov
sbb
push
dec
and
mov
inc
call
sub
jbe
sbb
jge
mov
jge
add
xchg
fwait
bound
pop
retf
and
xor
dec
push
cs
pop
push
push
inc
lahf
stos
(bad)
pushf
cmp
adc
and
icebp
cmp
mov
push
stc
jns
push
mov
cld
daa
mov
mov
in
mov
xor
jmp
xor
ins
imul
pop
in
add
cli
lods
shr
sbb
jo
rol
test
push
add
fcomp
adc
mov
pop
mov
std
out
fsubp
rcl
ror
or
mov
push
sbb
and
in
out
push
fwait
ret
shr
add
mov
mov
push
cmp
push
sbb
sub
fs
(bad)
not
xor
pop
test
or
aad
pop
popf
in
xchg
sbb
icebp
and
mov
jbe
cmp
inc
dec
mov
sbb
shl
add
push
movs
jo
pop
repz
jne
mov
xchg
mov
daa
call
cmps
div
fimul
aaa
and
cmps
movs
(bad)
into
mov
jo
cmps
sub
xchg
cmps
leave
outs
push
mov
or
sar
pushf
popf
dec
xchg
mov
add
aaa
mul
cmp
add
loop
adc
xor
call
mov
or
mov
dec
jnp
div
fld
xor
stc
cmps
push
in
sbb
shl
sbb
cmp
cmc
jns
push
fld
mov
xor
and
ins
mov
test
out
fcomip
bound
aas
mov
sbb
nop
jge
lock
mov
outs
xchg
add
test
xor
sahf
mov
sbb
sbb
dec
out
cld
rcl
movs
test
clc
imul
lds
mov
ret
retf
movs
mov
ss
cdq
push
cmp
adc
std
mov
mov
aas
xchg
lahf
push
fxch
jp
mov
dec
(bad)
pop
inc
adc
sbb
jae
imul
loopne
sub
cwde
jmp
inc
dec
inc
add
out
js
and
sti
ficomp
frstor
outs
std
or
xlat
clc
clc
cmp
and
data16
push
jp
mov
xchg
push
sbb
movnti
mov
adc
jecxz
xor
push
test
add
popa
test
jo
xchg
aam
inc
pop
cmp
dec
mov
fs
(bad)
mov
inc
adc
aad
pop
fmulp
cmps
aas
cmps
pop
stos
int3
dec
pop
cmp
shl
cmp
es
pop
cmp
cli
mov
push
data16
inc
cmp
push
jle
cmp
add
fimul
jb
hlt
jne
mov
in
push
js
les
pop
cmp
adc
scas
scas
cmc
mov
push
add
cmp
push
aad
mov
dec
adc
imul
loop
stos
(bad)
pop
push
cs
arpl
or
add
pop
dec
xchg
in
adc
jl
in
push
out
fldenv
out
push
das
cld
inc
jge
fbstp
sahf
add
mov
lock
xchg
call
mov
nop
fcom
repz
xchg
ret
mov
icebp
push
mov
ins
jne
jb
xor
mov
cmp
push
repz
sbb
sbb
push
xlat
cmp
pushf
inc
xor
push
cs
pop
(bad)
shr
pop
js
repz
jge
mov
fidivr
sbb
stc
stos
retf
pop
inc
mov
movs
xor
or
cmp
outs
hlt
lahf
gs
jbe
(bad)
jge
into
aad
fnstcw
aam
cmps
push
enter
shl
and
cmp
push
idiv
movs
lds
ret
lock
fidiv
retf
rcl
stos
js
mov
test
inc
jno
xor
mov
mov
mov
cmps
cmps
shl
cld
cmc
dec
pop
bound
into
sbb
xor
push
lods
fimul
xor
sub
add
push
cs
mov
mov
sbb
push
or
jne
je
ret
call
pop
sar
adc
mov
cwde
enter
dec
shl
call
rcr
pushf
rol
ret
push
ficomp
push
jb
jo
mov
mov
adc
jmp
ja
lds
aad
imul
mov
in
lock
ins
and
mov
cli
mov
scas
sub
mov
hlt
mov
cdq
xchg
inc
addr16
aad
jle
addr16
imul
xchg
jle
cmp
jp
or
pop
int
xor
ret
push
test
cmp
mov
in
iret
cmovle
fs
shr
or
jnp
xchg
mov
cs
cmc
(bad)
(bad)
getsec
mov
mov
ins
xor
jno
int
call
neg
(bad)
and
rcr
aam
cmp
lahf
adc
sahf
mov
jl
(bad)
push
push
cmovno
es
push
xchg
shl
call
sbb
ja
add
sub
loop
inc
cmp
lock
pop
retf
mov
icebp
sbb
push
cmps
sbb
pop
repnz
(bad)
push
sub
ins
in
arpl
(bad)
lock
jae
jg
sub
push
pop
gs
xchg
and
fmul
xor
leave
mov
mov
fsub
xor
sub
push
mov
sti
loope
es
mov
stos
icebp
push
cmp
add
imul
sbb
das
or
adc
push
pop
pop
adc
fnstenv
sahf
sbb
outs
sbb
xor
xor
rol
and
dec
out
sbb
sbb
xchg
push
cmp
test
mul
imul
pop
les
repz
mov
and
lods
xor
retf
jo
sbb
icebp
test
add
push
mov
fsub
jl
imul
mov
(bad)
out
inc
jmp
pusha
adc
jb
dec
test
inc
xchg
int
cmps
cmp
shr
arpl
retf
cmp
pop
dec
outs
xchg
pusha
fisttp
sahf
or
xor
aas
fdiv
sub
cwde
push
rcl
inc
pop
cvtdq2ps
pop
cli
dec
mov
es
mov
push
imul
loop
or
sub
repnz
aad
sti
cmc
ds
push
movs
mov
ret
test
addr16
mov
retf
add
fnstenv
pusha
test
not
cmc
inc
sbb
mov
ja
inc
leave
push
add
test
jp
cmp
call
sub
fbld
call
sub
call
sbb
xchg
enter
pop
push
cmps
push
and
enter
addr16
rcr
popa
stos
xchg
pop
cmc
sub
call
xchg
in
js
enter
jbe
fisub
inc
and
cmps
sbb
std
cmp
mov
adc
std
jg
in
out
mov
mov
and
adc
jmp
mov
jbe
cmp
adc
xchg
cmc
mov
mov
addr16
mov
inc
or
outs
add
stos
shl
sub
das
call
push
aam
lods
pop
jl
in
stos
repnz
mov
dec
cmps
xor
(bad)
xchg
pusha
xchg
jo
aaa
sahf
shl
xchg
sar
cs
mov
dec
adc
mov
jmp
add
(bad)
cs
pushf
sti
jbe
pop
pop
(bad)
and
(bad)
shl
xor
fisttp
or
adc
gs
jno
imul
add
mov
jo
mov
lds
inc
adc
clc
scas
jb
inc
rcl
add
and
jge
test
push
mov
inc
ss
mov
ret
dec
add
jle
retf
(bad)
push
sub
mov
adc
je
sbb
movs
loope
push
scas
sbb
add
and
mov
icebp
into
adc
and
or
loop
push
in
push
pop
xor
cmc
xchg
pop
jns
lds
jg
xchg
xor
inc
sar
sbb
(bad)
sub
pop
aad
inc
dec
add
loop
or
mov
(bad)
mov
lock
aas
aam
and
rcr
xor
jg
pop
dec
cmp
out
test
popa
xlat
movs
enter
mov
xchg
repz
lea
cwde
push
mov
not
mov
in
out
jo
xchg
int3
lea
pop
push
ins
pop
rep
push
sub
cmps
dec
popa
fs
dec
push
push
int3
fst
push
addr16
adc
fimul
sub
and
jle
jo
mov
xchg
pop
movs
rol
dec
xor
pop
sar
and
sub
xor
call
add
jno
and
mov
loop
ins
jge
cmc
add
ror
(bad)
or
in
je
or
cmp
jge
jno
aaa
mov
into
test
cmp
(bad)
gs
sbb
loopne
in
mov
add
mov
pop
ret
sub
xchg
(bad)
or
test
mov
and
inc
js
js
push
loop
cmp
sar
sub
iret
jmp
sub
dec
(bad)
sub
pushf
out
hlt
push
xchg
push
outs
sbb
xlat
push
sub
loop
js
popf
dec
jo
cs
movs
loope
xor
inc
xchg
(bad)
outs
push
mov
(bad)
cmp
push
dec
repnz
sbb
xchg
aaa
fadd
jae
cld
sub
cdq
inc
sub
xor
dec
mov
fwait
shl
dec
fld
mov
push
mov
iret
out
push
(bad)
outs
jno
add
cli
cmp
inc
jbe
cmc
(bad)
stc
je
pop
ds
clc
cmps
sahf
sub
pop
jmp
mov
dec
sahf
jmp
mov
jp
out
mov
retf
dec
cmp
cmp
stc
enter
or
cmp
in
push
and
sahf
and
xor
addr16
std
fcomp
and
loop
in
jne
sub
popf
inc
sbb
fcmovb
pop
data16
jae
test
clc
stc
aam
add
mov
stc
cdq
jle
ins
xlat
mov
jnp
into
nop
dec
pushf
jecxz
xlat
mov
cdq
imul
push
sbb
inc
add
aam
loope
push
push
les
aad
pop
not
daa
dec
jge
ret
(bad)
bound
pop
gs
leave
mov
ins
imul
data16
cmp
test
in
jmp
add
cld
mov
mov
mov
xlat
ss
(bad)
xor
jns
je
mov
cmp
xchg
mov
push
fwait
xor
into
movs
push
adc
add
ins
loop
ret
mov
jg
inc
push
in
adc
sar
adc
xchg
cli
movs
mov
pop
ds
ja
pusha
in
push
xchg
cld
or
xchg
sbb
pop
and
xchg
or
add
test
aas
mov
(bad)
dec
imul
loopne
adc
jne
and
push
out
adc
dec
sub
or
inc
jns
and
jae
dec
pop
fnsave
jmp
ret
jle
mul
popa
retf
sub
das
xchg
nop
xor
dec
test
sub
lahf
call
out
or
loope
jmp
ds
sti
test
aas
popf
fdiv
dec
or
inc
inc
jae
call
jmp
and
clc
push
loop
gs
xor
call
add
jge
out
popa
cmp
imul
pop
lea
add
xor
movs
jle
aam
arpl
inc
sub
mov
or
push
add
jmp
add
add
inc
mov
jae
mov
clc
fdiv
cmp
out
int3
int
(bad)
out
lods
icebp
rol
sbb
cmc
scas
mov
mov
pop
(bad)
(bad)
xchg
iret
les
aaa
ja
ficomp
test
lods
jno
mov
adc
ja
mov
xlat
enter
sbb
sub
sub
xor
fstp
clc
push
std
mov
dec
imul
shl
das
xchg
into
mov
sahf
(bad)
jmp
ja
push
sbb
leave
test
sbb
push
fisttp
sti
and
pusha
dec
push
popf
add
leave
xor
xchg
hlt
pop
mov
pop
add
aad
xor
sbb
adc
lds
push
stos
cmp
and
(bad)
call
fcomip
push
movs
imul
mov
xor
pop
jmp
xchg
les
scas
push
test
pusha
sahf
cli
outs
inc
and
mov
int
mov
pop
ficomp
enter
push
xchg
shl
cdq
sub
fcmovbe
dec
into
fld
dec
xchg
popa
mov
xchg
jnp
in
cmp
fs
push
gs
sahf
pop
cmp
in
gs
xchg
jbe
in
dec
inc
sub
fwait
scas
lds
xchg
or
push
xchg
mov
out
(bad)
cld
dec
loopne
dec
jmp
ins
add
and
hlt
xchg
xchg
test
xchg
pop
repnz
cld
mov
adc
icebp
xor
bound
fnstenv
mov
jl
pop
out
jge
scas
xor
inc
test
jae
dec
popa
mov
xchg
jp
out
mov
mov
out
fisttp
add
lock
test
stos
sti
lea
jbe
in
cmp
sub
jno
xor
mov
jbe
cmps
lds
jp
cmp
in
aam
and
and
xchg
pop
mov
add
outs
lds
or
sahf
loop
and
inc
sbb
or
cwde
outs
push
cmp
inc
lock
push
cdq
xor
ror
mov
jmp
adc
sub
fidiv
xchg
(bad)
outs
fadd
xchg
or
cmp
imul
inc
push
jo
(bad)
je
fwait
sbb
sub
sbb
jno
jecxz
mov
jmp
push
push
cmp
xchg
mov
jne
pop
arpl
sahf
or
test
imul
stc
test
add
cmp
out
mov
lea
test
jge
jb
icebp
mov
jb
stc
mov
xchg
leave
pop
and
es
cmp
pop
sar
dec
cmc
jno
mov
shl
jle
xor
ret
lods
ds
mov
ret
or
lahf
sbb
sub
gs
push
int3
jl
sbb
and
and
popf
(bad)
aaa
ror
jno
xor
or
cmp
mov
icebp
jle
adc
sti
cld
cli
(bad)
pusha
xor
add
hlt
rcl
sub
push
fld
lahf
or
std
int3
mov
dec
cmp
or
scas
rcr
(bad)
xor
cmc
inc
inc
jecxz
inc
xchg
call
cmp
jp
mov
add
lods
sbb
sub
add
cmp
je
sbb
mov
jl
sbb
lods
inc
pop
sub
pop
push
adc
push
mov
cs
mov
jne
lods
inc
push
xor
je
pusha
(bad)
retf
sub
mov
mov
pop
cmp
add
sub
rcr
adc
ins
mov
mov
xchg
xor
fidivr
xor
mov
aam
cli
movs
pop
cmps
fsubr
das
or
stos
jno
into
or
das
jb
mov
mov
and
call
inc
or
and
inc
in
scas
ins
xchg
and
outs
cmc
push
out
mov
cmc
fstp
sub
fwait
add
adc
add
fnstsw
mov
adc
and
sub
mov
add
xor
and
shl
or
sub
ins
stc
mov
iret
movs
add
adc
pop
rol
daa
push
ja
aas
clc
les
push
in
in
enter
call
out
sbb
or
mov
lea
pop
(bad)
xor
sbb
int
inc
adc
jecxz
je
xor
daa
pop
push
imul
loope
xchg
xchg
jae
mov
push
sub
sub
push
push
lahf
xor
xor
and
arpl
dec
out
addr16
popa
jg
pop
inc
xchg
sbb
mov
xchg
js
or
das
push
mov
push
je
push
push
ror
pop
test
clc
lds
push
xor
mov
call
dec
mov
sbb
test
xchg
xor
sub
daa
pusha
addr16
mov
xchg
dec
pop
stc
add
mov
jne
fisubr
mov
pop
sbb
test
and
mov
pop
jae
(bad)
call
rcr
mov
(bad)
cld
mov
inc
fnsave
jmp
int
pop
aam
sbb
call
ss
leave
inc
xor
mov
adc
add
scas
push
push
push
les
push
loop
mov
xor
fistp
aad
(bad)
xor
cdq
sbb
loope
dec
dec
imul
or
dec
mov
mov
jae
cmp
cmp
outs
stc
mov
bound
mov
sub
ret
(bad)
adc
xchg
imul
test
sub
xchg
and
mov
adc
jle
test
repz
(bad)
or
add
je
dec
inc
aad
frstor
fisub
push
out
pop
inc
pop
pop
in
adc
mov
xchg
mov
repz
push
cmps
pop
(bad)
iret
loop
adc
stos
inc
pop
xor
in
inc
pop
mov
inc
mov
imul
dec
fisub
in
and
add
mov
pop
call
sahf
jmp
xchg
repz
arpl
mov
and
adc
sbb
imul
imul
aaa
jmp
shr
pop
dec
jo
in
xchg
out
pop
sar
loopne
inc
pop
test
aaa
retf
sub
adc
int
dec
dec
sub
in
mov
enter
and
push
mov
jmp
leave
push
arpl
loopne
jge
jbe
jne
inc
loopne
aad
and
scas
lahf
dec
cwde
mov
push
test
cmp
mov
sbb
jg
push
sbb
cdq
add
cld
xor
int
jmp
in
or
mov
xchg
data16
shr
xchg
cmp
test
iret
mov
push
xchg
loop
mov
push
jo
push
fwait
mov
scas
test
push
sub
mov
neg
or
adc
popf
nop
cmps
das
xchg
test
jbe
mov
cld
mov
add
pusha
push
fstp
aas
test
div
in
fidiv
div
js
xor
xchg
adc
(bad)
push
inc
jg
(bad)
cmp
fld
int
rol
jmp
test
ins
(bad)
adc
pop
sub
xor
mov
pushf
or
jo
(bad)
lods
fcom
mov
dec
mov
outs
enter
(bad)
mov
movs
das
scas
mov
test
pop
lods
jge
sub
or
xchg
push
jae
pop
(bad)
call
inc
sbb
test
out
mov
sbb
mov
cmp
add
sbb
sub
les
push
sbb
loop
aaa
das
dec
cli
sbb
cwde
mov
cmp
std
mov
aam
imul
mov
xor
test
daa
sbb
push
adc
mov
cmp
les
inc
mov
test
scas
mov
retf
(bad)
cmps
xchg
fild
cmp
or
pop
loopne
push
in
data16
push
out
mov
mov
or
retf
and
cmp
adc
sbb
(bad)
fdivr
ds
xchg
mov
fild
(bad)
or
or
ret
jecxz
push
pop
ret
mov
dec
push
(bad)
lahf
repnz
je
mov
jl
xchg
mov
pop
mov
je
mov
adc
and
mov
xchg
std
pop
and
mov
adc
mov
push
movs
dec
mov
imul
xchg
clc
rcl
ret
adc
nop
jne
es
fwait
and
fmul
pop
repnz
adc
cwde
fild
out
gs
xor
xchg
fnstcw
mov
xor
or
aaa
sbb
push
mov
inc
int
cwde
lahf
outs
and
ja
lds
outs
mov
adc
jne
or
xchg
dec
sub
mov
and
jmp
mov
stos
into
sti
push
mov
cmp
sbb
js
jno
in
cmp
cld
xchg
cwde
xchg
mov
mov
bound
pop
cmp
xchg
je
jo
sub
movs
push
inc
js
xchg
in
out
mov
pop
inc
test
lods
cwde
and
pop
sub
pop
mov
xchg
sbb
inc
pop
xor
clc
sbb
pop
mov
dec
mov
inc
push
retf
or
xor
ds
enter
push
jne
jno
xchg
jecxz
in
xor
pop
(bad)
mov
mov
sbb
xchg
pop
in
xchg
jmp
sub
popf
sbb
jbe
pop
jp
add
iret
test
push
sti
loop
daa
aaa
jle
mov
inc
nop
dec
out
push
mov
in
mov
fisubr
xchg
clc
jne
daa
test
(bad)
sbb
push
pop
xchg
and
xor
test
mov
mov
imul
fsub
outs
adc
adc
fcmove
cld
jnp
(bad)
and
add
into
aad
add
(bad)
enter
xor
es
jg
mov
jb
rcr
retf
out
enter
add
pop
mov
loopne
xchg
fsubr
rol
js
inc
lods
dec
shr
or
xchg
and
sti
sbb
clc
bound
pushf
or
dec
jp
and
push
sub
pusha
ds
xchg
sahf
in
xchg
xchg
fsubr
in
jno
jb
(bad)
push
lock
ss
xchg
mov
ret
xor
mov
adc
mov
mov
rol
inc
xor
jl
sbb
pop
fwait
retf
inc
cli
add
sbb
aaa
aas
cmp
dec
pop
pop
dec
hlt
mov
xchg
xor
arpl
fisttp
jg
fisttp
pop
imul
(bad)
pop
dec
or
adc
mov
jno
sahf
pop
jno
pop
mov
and
or
(bad)
jb
sti
xor
mov
cli
jge
js
dec
inc
into
(bad)
out
mov
xchg
pop
rol
scas
xchg
fnstsw
pusha
or
pusha
push
and
cmp
sbb
sub
sbb
cmp
ret
xor
mov
daa
ins
dec
or
fisubr
nop
push
repnz
jg
shl
and
sar
out
cdq
xchg
jnp
dec
daa
into
mov
jne
(bad)
lahf
mov
mov
in
cdq
lds
(bad)
cmps
push
mov
push
add
in
mov
cmp
daa
inc
xor
xchg
mov
jl
(bad)
ss
(bad)
push
call
mov
add
mov
and
aam
je
inc
add
addr16
jmp
push
lods
xchg
repz
or
pop
inc
jno
lea
jle
dec
pop
je
shr
retf
or
pop
fwait
push
adc
imul
sbb
pusha
dec
sub
sbb
jo
mov
adc
pop
mov
pushf
cmp
pop
inc
(bad)
in
(bad)
pop
xchg
xchg
imul
mov
psraw
add
iret
xchg
xor
inc
sub
dec
jl
enter
imul
out
or
lahf
loop
fld
cmp
mov
inc
inc
sub
pop
mov
add
mov
shl
or
pop
and
and
(bad)
pop
(bad)
mov
stos
pop
test
mov
js
and
xchg
sub
leave
dec
cmps
and
pusha
mov
cmp
push
push
and
dec
push
sub
stos
pop
ins
clc
scas
aad
(bad)
pop
cdq
shr
xchg
pop
pop
imul
dec
mov
int3
pop
shr
in
sti
nop
sbb
mov
shl
cmps
shl
cdq
aad
movs
stos
test
or
cmc
bnd
and
fs
cmps
xchg
and
leave
lods
les
call
data16
shl
push
and
mov
ss
shl
or
mov
sub
mov
or
dec
sub
std
(bad)
xchg
push
mov
cli
sbb
adc
retf
jle
pop
pop
loope
xchg
div
popa
mov
jnp
sub
xor
gs
add
ins
test
jns
and
imul
test
sbb
jbe
dec
cmp
xchg
sbb
aam
cmp
in
push
scas
popa
loop
in
fmul
popf
in
sub
jmp
out
inc
rcr
loopne
pop
stos
sbb
jns
cwde
dec
loop
jge
daa
fiadd
mov
xchg
test
mov
repz
dec
inc
mov
cmp
stos
jp
pusha
cmp
stos
sbb
js
fistp
push
sahf
jge
ds
call
sbb
dec
sub
jne
test
adc
fist
mov
push
xor
call
xor
sub
adc
inc
shr
clc
or
ret
or
outs
rcl
xor
adc
in
inc
int3
jecxz
pop
je
popa
pop
inc
fild
sub
push
xchg
mov
mul
add
(bad)
cmp
cmps
fst
jmp
adc
les
iret
scas
pop
lahf
sub
les
rol
in
(bad)
sub
sub
addr16
add
mov
mov
xchg
inc
jmp
pop
xor
xlat
icebp
retf
lods
pushf
movs
fs
clc
adc
fld
push
adc
sar
and
ficomp
clc
pop
inc
sub
test
jno
push
sbb
les
add
mov
mov
adc
dec
jg
jmp
mov
sysenter
cmp
fwait
add
in
push
les
xchg
adc
(bad)
popf
addr16
movs
inc
cmps
mov
pop
or
cli
outs
std
xchg
ja
add
fiadd
arpl
not
xlat
mov
xlat
daa
lea
pushf
fwait
sti
push
cmp
pop
cmp
xor
push
ret
add
jg
pop
cmp
enter
cdq
sahf
jp
push
ss
xlat
mov
push
out
push
jb
add
ror
into
mov
xor
dec
mov
mov
cmp
pop
arpl
xchg
aam
sub
sbb
outs
add
into
call
popa
inc
fisttp
xchg
ds
add
mov
mov
das
or
pop
mov
fistp
cmp
pop
lock
xchg
imul
pushf
adc
xchg
lock
or
bnd
inc
jg
imul
lods
ss
hlt
jl
xchg
mov
mov
(bad)
in
clc
(bad)
cs
or
xlat
gs
shl
xchg
in
fist
nop
xchg
lods
imul
jnp
push
fsubrp
xchg
sbb
data16
mov
dec
jbe
jns
fld
fnstenv
(bad)
push
sub
xchg
push
jecxz
sar
(bad)
jmp
pop
je
mov
xchg
sbb
cmp
nop
inc
or
repz
sar
loope
pop
jno
push
inc
call
ffree
outs
inc
jo
mov
rcr
scas
movs
inc
or
inc
fwait
or
or
dec
xchg
popa
xor
movs
in
dec
in
lds
(bad)
(bad)
stos
cmps
cdq
shl
inc
out
fiadd
inc
(bad)
rcl
(bad)
out
or
push
jne
or
cmp
or
popf
lea
int
sbb
in
push
and
repz
lds
mov
fiadd
dec
push
retf
pop
(bad)
dec
ins
jno
mul
cmc
and
movs
das
push
pop
adc
dec
cmps
adc
cmp
sbb
sub
dec
push
mov
inc
(bad)
ss
into
cwde
cmp
stos
ins
(bad)
cli
jle
adc
mov
sbb
push
and
inc
and
push
mov
and
pop
pop
and
sub
stos
cmp
fsub
lods
inc
(bad)
xor
shl
jl
push
mov
fwait
and
leave
xor
cmp
xor
cmp
test
cwde
cmc
mov
pop
pop
mov
cs
jmp
out
push
mov
test
jmp
inc
inc
out
and
mov
dec
cli
sub
add
inc
push
lock
xchg
daa
mov
outs
dec
jp
aam
fwait
ja
jo
xor
mov
cmc
ds
adc
push
mov
xor
mov
inc
jae
ins
mov
stc
jle
push
and
ret
xlat
pop
fdivr
lahf
sub
fmul
adc
add
or
sbb
std
xchg
jg
ror
cld
pop
into
add
fcmovb
sbb
or
jae
jp
fwait
and
enter
adc
lea
dec
sbb
mov
push
cmp
retf
daa
xor
pop
mov
iret
jns
int3
push
cmp
or
and
mov
dec
int3
dec
pop
cmps
ins
sub
push
dec
bound
test
xchg
sbb
mov
call
ins
fidiv
inc
adc
out
int3
pushf
(bad)
fsubp
paddsb
pop
or
fisttp
sahf
push
or
out
fxch
mov
ss
mov
sbb
pop
cmp
xor
gs
addr16
inc
xor
cld
loopne
jns
bnd
mov
test
mov
jmp
div
dec
add
(bad)
cmp
(bad)
and
pop
sub
push
cmps
jp
sub
jae
(bad)
pop
pop
mov
in
dec
mov
jbe
xchg
xchg
xchg
fiadd
(bad)
xlat
jne
daa
or
pop
in
popa
pop
and
pop
and
jp
mov
cdq
mov
popa
push
sbb
xlat
loop
xchg
gs
cs
sar
clc
dec
aad
dec
(bad)
push
js
dec
pop
jle
shl
sbb
in
add
stos
adc
and
and
aam
pop
push
add
cmp
test
pop
add
xchg
dec
and
and
jge
jle
scas
xchg
bound
add
popa
mov
dec
push
lods
jmp
or
jns
inc
in
(bad)
jne
test
mov
xor
cmp
push
fadd
pop
dec
clc
inc
pop
sbb
jne
hlt
mov
xchg
mov
ret
xor
cmp
xchg
xchg
cdq
mov
lds
int
adc
scas
outs
out
pop
and
arpl
in
add
jae
mov
adc
sub
inc
dec
inc
push
sub
(bad)
call
inc
mov
mov
inc
pop
in
push
out
xor
push
mov
and
loop
leave
std
stos
jmp
scas
xor
add
clc
fst
jno
cld
and
pop
fidivr
mov
adc
loopne
jns
pop
cmps
mov
lock
xchg
lods
enter
movs
pop
rcl
mov
retf
fild
dec
rcl
outs
lock
test
sar
sbb
push
pop
mov
inc
ror
imul
inc
or
icebp
push
push
out
out
or
inc
fstp
add
and
and
popf
inc
add
mov
les
les
hlt
aad
out
push
pushf
sbb
xor
jmp
mov
ror
cmp
cmps
jnp
adc
icebp
shl
lods
xlat
xchg
pop
mov
jg
es
xchg
loop
mov
dec
leave
mov
sahf
mov
movs
cvtpi2ps
and
das
leave
or
add
mov
xlat
push
mulps
or
xor
je
je
sub
or
cmp
stc
je
sahf
jle
test
cmp
adc
(bad)
pop
mov
les
stc
sbb
sub
jnp
sub
(bad)
lock
pushf
mov
or
and
add
ds
cwde
call
loop
mov
mov
mov
add
cmc
push
mov
sti
mov
or
lahf
or
mov
ss
stos
jmp
jne
ret
jl
inc
jle
call
or
mov
mov
sahf
outs
dec
jg
push
data16
int3
sar
dec
dec
aaa
mov
adc
jns
sahf
aad
push
lahf
cmp
sub
pop
shl
pusha
pusha
(bad)
dec
jno
(bad)
adc
and
je
mov
or
cwde
xor
mov
cdq
arpl
mov
adc
mov
aaa
pop
dec
add
or
in
inc
repnz
pusha
sti
mov
(bad)
pop
out
and
repnz
mov
xchg
(bad)
or
mov
scas
imul
or
out
xchg
or
add
xor
dec
dec
out
jecxz
cld
nop
(bad)
fadd
in
jnp
adc
push
inc
lods
ds
sbb
jb
imul
aaa
sub
sbb
pop
mov
and
and
xchg
hlt
out
mov
mov
and
loop
push
fwait
jo
mov
push
jecxz
pusha
dec
and
adc
and
push
dec
stc
loopne
stc
fimul
and
inc
jae
jae
inc
scas
call
cmps
outs
push
(bad)
and
sbb
cmp
add
lods
sbb
jmp
dec
loop
push
dec
fisub
leave
popa
jnp
push
jne
pushf
aaa
adc
sbb
mov
mov
imul
xchg
pushf
xchg
leave
or
mov
inc
jbe
imul
pop
xchg
in
push
aas
pop
add
and
add
pop
test
sbb
fdiv
pop
push
pop
retw
nop
jbe
out
hlt
pop
cmp
inc
fwait
mov
lods
test
cmp
test
adc
out
xchg
sbb
stos
fwait
cmp
mov
rcl
in
push
push
sbb
xor
iret
xor
mov
test
pop
(bad)
sbb
xlat
push
sar
cdq
stos
popa
jmp
daa
sub
sahf
jnp
push
dec
push
inc
mov
cmc
sub
ficom
adc
or
ds
inc
lock
test
push
in
jecxz
mov
inc
pop
adc
add
push
adc
cli
popf
ror
sub
xchg
push
inc
inc
test
add
add
stos
dec
mov
ds
inc
and
inc
cmps
inc
dec
aam
sub
scas
ins
and
out
xor
frstor
les
pop
mov
add
popf
rcl
xchg
es
ins
adc
sbb
test
jne
in
sub
jle
rol
adc
sub
xlat
test
fcomp
adc
addr16
jle
pop
shr
call
xor
xor
ror
mov
push
and
xchg
movs
and
pop
mov
dec
adc
mov
ficomp
aaa
cmp
jae
iret
ds
mov
sti
or
push
pop
fist
mov
add
hlt
fisttp
mov
(bad)
pop
and
jge
pop
inc
nop
push
cs
repz
hlt
jbe
ficomp
sbb
mov
and
jns
cmp
out
sbb
xchg
dec
jmp
mov
add
adc
test
mov
push
sbb
out
aas
dec
xlat
lds
sbb
jo
cwde
shl
adc
sub
shr
mov
mov
hlt
cmc
pop
adc
in
inc
inc
in
into
(bad)
sar
cmc
cld
mov
mov
add
stos
mov
es
ins
loopne
push
dec
pusha
push
mov
and
das
push
or
mov
sub
cmp
cmc
or
ja
inc
mov
mov
outs
jns
xchg
cwde
cmps
les
mov
cmps
xchg
leave
push
add
adc
sbb
out
xchg
push
push
mov
mov
pop
cmp
sar
ins
xchg
adc
push
mov
and
dec
aaa
loope
sub
xchg
and
retf
dec
xchg
jmp
dec
mov
jnp
push
les
fild
sbb
dec
pop
push
jp
dec
inc
scas
inc
arpl
stos
mov
push
pop
push
pusha
adc
das
push
dec
dec
scas
jne
sub
dec
test
stc
cmp
pop
in
jne
and
addr16
dec
movs
test
stc
sbb
gs
push
dec
cwde
jmp
arpl
xchg
loop
pushf
fmul
cmp
mov
movs
out
cmp
lods
loope
int
pop
cmc
and
icebp
in
cmp
cmc
mov
xchg
call
jmp
jmp
add
sub
adc
mov
push
scas
jno
jg
fdivr
push
in
call
adc
mov
jns
cmc
or
mov
shr
in
xor
ins
dec
dec
cmp
rcl
ds
mov
push
mov
pop
(bad)
nop
or
dec
or
sub
mov
sub
or
inc
daa
push
(bad)
pop
pop
in
setge
push
push
enter
dec
ret
gs
pop
mov
enter
test
cmp
jb
and
sub
pop
shl
add
mov
fstp
sbb
stos
(bad)
popf
inc
ds
(bad)
cld
(bad)
movs
in
adc
jmp
jmp
or
sub
push
test
imul
jnp
sbb
push
cmp
fmul
mov
pop
mov
std
jg
daa
push
shr
push
dec
(bad)
mov
mov
jae
jmp
sar
jmp
gs
cmp
jecxz
mov
int3
out
ins
cmp
repnz
or
cmps
and
mov
add
lds
popa
xchg
test
idiv
inc
sahf
cmp
daa
lods
mov
aam
fld
loop
and
inc
test
and
push
inc
(bad)
fbstp
sbb
adc
cld
icebp
ret
imul
jl
rcr
mov
sbb
cmps
adc
inc
inc
fisub
in
js
dec
and
popf
jg
xor
ficomp
aad
int
dec
sbb
mov
jb
aad
repz
add
iret
push
(bad)
cmp
pop
jmp
aaa
sub
push
jmp
cmp
(bad)
lahf
je
call
mov
int3
adc
push
and
xchg
std
les
(bad)
jle
ds
pop
xchg
mov
sar
cli
or
out
jae
popf
jno
test
out
test
dec
jbe
out
scas
dec
adc
mov
data16
jecxz
jne
(bad)
je
(bad)
aaa
out
(bad)
clc
jae
sub
and
test
sub
repz
out
or
pop
ret
pop
xchg
je
leave
mov
push
sub
mov
mov
fdivr
xchg
std
shl
imul
in
out
xor
inc
push
ins
xchg
mov
pop
pop
nop
scas
sub
pop
leave
xchg
mov
pushf
add
push
imul
cli
sbb
xor
sub
mov
popf
xchg
cmp
in
out
idiv
dec
add
in
test
jo
iret
and
cmps
leave
and
movs
or
lods
dec
pop
popf
ins
fsub
mov
inc
icebp
adc
xchg
jmp
mov
inc
jmp
add
push
out
cmps
dec
cmps
sub
mov
retf
adc
jae
shr
adc
pop
ror
les
fnstenv
(bad)
or
cmp
call
bound
pop
clc
pop
jnp
enter
and
lods
and
sbb
sahf
sbb
and
mov
imul
inc
hlt
jno
jno
mov
(bad)
ja
or
cmp
cdq
das
cdq
cmp
mov
shl
(bad)
popf
jmp
and
sbb
lea
lods
not
sbb
int
movs
sub
cmp
cmp
je
adc
sbb
iret
(bad)
xor
int3
adc
stos
pop
push
fdivr
cmc
jecxz
adc
popa
fiadd
jecxz
aam
jbe
xchg
lods
add
rol
sub
test
cld
shr
outs
cwde
lock
enter
mov
mov
pop
mov
pop
cmp
lea
shl
aaa
dec
retf
mov
dec
aam
jl
test
aaa
xchg
int3
pop
or
ror
adc
mov
pushf
dec
pop
popf
pop
add
(bad)
xchg
push
push
std
jg
pop
aaa
and
sub
inc
aaa
cmp
icebp
and
stos
int3
pop
push
adc
pop
lds
or
cmp
xor
pop
leave
push
adc
aad
mov
popa
fidiv
ins
mov
test
dec
push
loope
mov
icebp
fs
shr
jmp
sub
adc
ja
(bad)
iret
add
call
jae
jae
retf
cmp
add
mov
xchg
add
add
pop
test
dec
mov
sbb
inc
fisub
push
(bad)
je
push
call
jg
adc
lock
xchg
ja
(bad)
aad
fldcw
pop
jle
fwait
test
cmp
lahf
jb
cwde
imul
and
(bad)
sti
in
pop
inc
mov
ret
clc
pop
ret
or
sbb
fs
xchg
adc
adc
xlat
pushf
sbb
(bad)
adc
shl
shr
cmps
xchg
mov
je
mov
xchg
(bad)
enter
jne
pop
jg
dec
jle
idiv
je
add
xor
adc
pmaddwd
pop
(bad)
imul
je
dec
pop
cld
clc
jmp
lods
inc
xchg
mov
stos
push
xchg
xchg
fcomp
movs
mov
repnz
ja
cmp
lods
mov
push
movs
adc
idiv
pop
pop
std
into
push
out
stos
pusha
fnsave
cs
std
inc
sbb
(bad)
adc
mov
ins
rcr
gs
push
ss
mov
test
pop
les
shr
sub
enter
outs
xchg
sub
cmp
scas
arpl
bound
fistp
push
sti
and
aas
sbb
xchg
add
jb
pop
stc
inc
fsub
cmp
(bad)
adc
cmp
jb
push
(bad)
xchg
add
sbb
and
mov
sub
ret
xor
mov
ror
js
sti
lea
dec
repz
xchg
std
jl
mov
lods
pop
rol
mov
sbb
ret
movs
mov
pop
mov
mov
inc
xor
xchg
pop
shr
test
arpl
aam
sbb
pop
fist
sbb
mov
xchg
xor
add
dec
adc
add
and
xor
retf
add
addr16
ret
(bad)
cmp
sahf
push
mov
sub
cwde
retf
jns
lods
mov
push
aas
jecxz
call
in
(bad)
ret
rcl
test
fistp
aam
or
mov
and
mov
jg
loope
leave
adc
enter
cli
fldcw
(bad)
xchg
jns
fist
fstp
repnz
push
inc
jns
mov
pop
push
scas
mov
prefetch
lahf
jbe
cli
gs
daa
pop
(bad)
adc
xchg
popa
or
pop
mov
mov
jp
mov
test
call
sub
and
loop
mov
mov
sbb
ss
pop
in
add
(bad)
test
and
xchg
mov
sbb
or
ins
(bad)
pop
jmp
cmp
adc
ret
pop
aad
lock
ror
in
cwde
test
mov
jg
push
ja
aad
sbb
out
hlt
outs
das
push
pop
dec
je
aaa
mov
dec
rcr
pop
or
js
xchg
daa
mov
cdq
cmp
mov
iret
jge
mov
sub
ins
xchg
pop
and
or
fwait
test
repnz
outs
into
fwait
mov
mov
call
mov
dec
imul
cmp
ret
test
xchg
test
popa
fcmovnu
lahf
dec
push
cmp
aaa
popa
repnz
addr16
imul
xchg
mov
sti
inc
cmp
adc
inc
nop
es
and
xchg
pop
clc
les
jg
cwde
into
xchg
test
xor
stos
call
dec
xchg
cs
sbb
mov
js
lods
mov
lods
shl
cmp
cmp
mov
(bad)
push
jecxz
jnp
sbb
ret
mov
addr16
xchg
imul
sbb
jo
leave
das
pusha
sbb
cli
ror
inc
jo
cmp
mov
or
test
pop
xor
and
enter
mov
dec
pop
cmp
mov
mov
aaa
jne
mov
and
(bad)
rcr
shr
ins
sub
sub
scas
out
inc
push
lahf
call
aas
clc
mov
dec
ss
fwait
jne
js
jbe
mov
test
cmp
inc
loope
and
cmp
cld
ds
(bad)
mov
into
mov
cmp
wrmsr
sub
and
cmp
out
popf
cmps
cdq
sti
(bad)
cmps
sbb
pop
jmp
loopne
inc
dec
mov
push
aad
imul
test
loop
aad
pushf
jbe
jno
retf
and
fs
scas
je
dec
test
inc
cmps
lock
cmp
and
div
jecxz
pop
and
jmp
inc
scas
ret
xchg
or
shr
nop
imul
adc
pop
cs
pop
lahf
ins
mov
or
dec
and
mov
add
fidivr
pop
jmp
pop
in
mov
xchg
(bad)
push
xchg
fisttp
jbe
xchg
cld
jbe
dec
cwde
or
ins
sbb
push
fwait
iret
xor
loop
outs
fldcw
imul
aad
inc
add
dec
xchg
sub
sub
jbe
jge
inc
ins
push
cmps
mov
dec
xor
(bad)
retf
jno
sbb
lods
in
mov
test
push
fisubr
pusha
pop
lahf
mov
pop
sub
(bad)
je
into
dec
xchg
mov
out
jmp
inc
icebp
pushf
mov
jecxz
fmul
add
mov
push
mov
scas
fcmovnb
pop
jae
inc
inc
cdq
mov
dec
xor
fidivr
xchg
pop
adc
xchg
test
in
mov
or
or
ins
(bad)
cli
xlat
clc
je
in
cmc
inc
and
or
popf
mov
push
cmc
xchg
xor
test
cdq
or
stc
add
out
idiv
inc
fistp
pop
(bad)
sar
jns
adc
add
push
ret
pusha
daa
mov
lods
push
out
loop
retf
shr
je
sub
ficomp
mov
dec
push
and
fisttp
dec
fldenv
sbb
sub
or
sub
add
repz
mov
dec
test
xchg
test
or
ret
ins
(bad)
mov
xlat
popa
loopne
shl
dec
jno
pop
popf
not
sbb
cwde
arpl
enter
inc
lahf
push
sbb
lock
call
adc
loope
adc
mov
mov
les
push
mov
(bad)
push
cmps
gs
sar
jbe
loopne
out
daa
ret
(bad)
dec
push
sub
lahf
out
sub
cmps
int
out
inc
sar
test
xlat
call
sub
mov
aaa
mov
mov
and
fwait
std
mov
add
cmp
mov
mov
sub
xchg
cmc
sub
mov
lods
sbb
xor
lods
dec
out
sbb
cmp
cmp
(bad)
dec
loope
adc
pop
push
xchg
push
in
mov
stc
mov
lea
dec
daa
hlt
gs
outs
sub
aas
add
mov
test
pushf
aaa
mov
(bad)
(bad)
add
push
mov
not
xchg
bound
ins
pop
pop
mov
adc
dec
mov
jns
mov
in
xor
cmp
ins
(bad)
sbb
out
mov
(bad)
xor
adc
ins
div
pop
sahf
dec
add
shr
out
jnp
(bad)
xor
cmps
fisttp
sub
push
jge
into
inc
lahf
sar
xchg
xchg
xor
mov
retf
mov
stos
out
call
fwait
aaa
sbb
dec
test
mov
mov
loop
add
or
ret
mov
inc
ret
cli
scas
push
std
mov
and
(bad)
push
rcl
std
or
cmp
add
jle
in
mov
(bad)
sbb
sti
xchg
push
aas
dec
push
jl
mov
jno
xor
cmps
scas
retf
out
shl
aam
jno
push
shr
gs
inc
out
das
test
mov
or
into
imul
ins
mov
mov
mov
cmp
stc
cmp
and
push
push
push
iret
enter
and
popf
add
cli
cmp
pop
push
in
cmp
stos
jno
add
dec
pop
adc
cli
sub
jno
sbb
aam
jecxz
mov
lods
sti
mov
jmp
push
mov
cmp
push
(bad)
jg
stos
popf
jg
inc
mov
push
cvtps2pi
sub
sbb
push
and
mov
loope
jo
je
jnp
repnz
inc
test
arpl
mov
pop
mov
and
add
es
shl
(bad)
sbb
mov
xchg
psubsb
xchg
xchg
adc
or
adc
pop
push
stos
(bad)
rcr
mov
push
pushf
adc
(bad)
jl
cmp
aad
aas
mov
neg
add
cmp
inc
int3
les
or
sub
or
mov
(bad)
gs
push
popa
add
ror
fcom
push
dec
push
sbb
es
lods
jmp
inc
jecxz
clc
mov
enter
int
xchg
imul
cmp
push
outs
outs
jmp
mov
shl
jne
out
xor
out
lods
out
mov
and
sbb
mov
dec
dec
xor
inc
shl
test
aaa
test
jns
pop
push
test
movs
xor
call
vpaddw
xchg
or
or
mov
test
xchg
dec
dec
(bad)
dec
jnp
inc
cdq
fs
mov
push
shl
pop
pop
rcr
mov
xor
xchg
sub
mov
xchg
xchg
in
dec
test
cmp
xlat
mul
hlt
xchg
pop
pop
xor
add
push
cli
stos
rcl
add
and
add
retf
and
data16
rcr
jns
sbb
cmp
inc
ss
scas
pop
xchg
ror
jmp
mov
pop
push
clc
lods
dec
add
mov
sar
inc
xchg
cmp
retf
push
push
push
outs
out
repnz
mov
adc
bound
push
aaa
call
and
jmp
pop
jae
jo
mov
retf
push
ror
nop
es
cmp
push
in
sub
pop
sub
inc
cmps
lock
movs
lods
fdiv
les
ja
int3
xchg
xor
inc
cld
push
or
stos
and
mov
and
fwait
out
push
and
jb
sbb
mov
outs
and
fstp
pop
retf
and
pop
xor
mov
xor
jecxz
js
pusha
leave
sub
popa
into
sbb
push
pushf
xor
mov
inc
pop
and
enter
dec
xor
(bad)
pusha
mov
xor
pop
sbb
outs
pop
cmps
sbb
loop
cdq
add
call
pop
mov
or
jp
adc
mov
inc
out
lahf
cmp
cmp
mov
aaa
cmp
sbb
ret
fnsave
mov
pushf
ss
mov
jne
(bad)
loop
xlat
int3
pop
mov
(bad)
ror
loope
ror
popa
and
xlat
add
aas
addr16
loope
or
xor
sbb
push
adc
push
addr16
xor
sub
sub
mov
fs
js
push
and
xor
pop
rcr
cmp
gs
outs
mov
jl
push
fmul
push
ja
hlt
mov
mov
clc
jno
jo
stos
cld
xor
or
inc
outs
xor
test
jno
div
ficomp
sbb
stc
outs
into
ja
(bad)
loopne
cdq
jo
dec
imul
push
xchg
sub
sub
fabs
jmp
mov
and
xor
sbb
es
icebp
shl
ss
mov
push
ret
in
sub
test
jle
inc
xchg
jae
push
ds
or
xor
dec
ss
pop
loop
mov
sub
adc
xchg
add
ret
call
push
xor
clc
cmp
jno
clc
cmp
inc
or
ror
ret
pop
jp
out
push
mov
out
aad
jno
jo
push
fidivr
into
dec
mov
out
mov
jmp
mov
nop
or
jp
or
js
push
mov
mov
fst
jg
fdivr
mov
popf
inc
sar
pop
xchg
inc
sub
inc
pop
outs
push
icebp
sub
pusha
adc
pop
push
push
ja
mov
fcmovne
mov
(bad)
mov
inc
ins
imul
cmp
hlt
add
xchg
f2xm1
add
push
jbe
test
retf
inc
inc
sahf
adc
or
in
ins
js
neg
sbb
pop
fimul
push
mov
fldenv
dec
fistp
sbb
mov
adc
test
sub
jns
or
outs
dec
lahf
(bad)
dec
push
das
dec
or
jle
and
mov
pop
dec
out
or
(bad)
enter
jbe
jae
xchg
push
xor
or
or
out
mov
enter
je
out
push
mov
jae
fimul
cmp
aad
xor
push
shl
stos
pop
pop
not
pushf
xor
sbb
xlat
mov
mov
sbb
cmp
pop
sub
jmp
mov
xchg
pop
fadd
in
push
rcl
dec
movs
pop
jg
xchg
sub
(bad)
push
xchg
call
outs
stc
pop
shr
sti
out
sbb
idiv
and
mov
outs
(bad)
push
int3
fdiv
adc
test
int
ret
xlat
mov
push
pop
inc
repz
popf
daa
xchg
in
mov
push
clc
js
sub
stos
out
dec
dec
mov
cmc
sbb
(bad)
sub
push
shr
ds
out
jno
xor
popf
mov
aam
pop
adc
movs
mov
je
inc
pusha
test
lods
add
jno
adc
pop
data16
jb
lahf
cld
lods
cmp
jge
push
nop
popf
je
add
lock
lods
xchg
stc
(bad)
ins
out
pop
and
pop
shr
sti
(bad)
mov
adc
cld
test
dec
ins
mov
retf
inc
movs
pop
outs
fist
and
fld
push
and
loopne
sub
push
shl
das
and
into
les
pop
ror
pop
add
dec
pusha
inc
mov
repz
or
add
mov
sti
cmp
and
rol
or
and
ins
scas
out
xchg
mov
stos
cmp
add
adc
(bad)
js
and
xor
cmp
jg
mov
push
jno
into
or
nop
fsub
xor
stos
jmp
outs
mov
call
mov
aam
bnd
out
push
imul
cmps
cmps
cmps
push
jp
xor
outs
out
sub
sbb
inc
push
ret
xor
mov
cmp
inc
cmp
add
imul
sbb
movs
les
dec
idiv
fstp
push
push
iret
jne
and
mov
les
push
jecxz
stos
sbb
jbe
shr
test
pop
pop
sub
lds
mov
aam
pop
arpl
adc
adc
mov
sbb
stc
mov
mov
repz
stos
or
(bad)
div
aaa
(bad)
sbb
les
mov
stos
mov
cmp
jmp
push
addr16
xor
hlt
fs
pop
jl
dec
dec
ds
or
mov
jl
imul
jg
add
repz
fwait
stos
adc
inc
out
inc
fidivr
mov
pop
xchg
sbb
mov
test
idiv
fstp
fsub
xor
mov
cwde
pushf
sub
dec
cmc
push
adc
lahf
jge
fisttp
repz
ret
mov
jo
scas
mov
das
cli
jmp
dec
imul
pop
fcomip
add
jle
icebp
pop
dec
das
jmp
loop
xchg
xchg
pop
jl
pop
pop
jge
push
or
shl
dec
sub
jl
pmaxub
cmps
adc
inc
mov
sbb
cmp
dec
adc
or
or
dec
jnp
lds
shl
xor
add
dec
das
push
outs
push
pushf
sbb
adc
mov
imul
sub
sti
shl
cmps
and
jge
adc
cmp
dec
retf
mov
jp
mov
pop
or
and
cld
int3
ins
mov
scas
stos
mov
jo
mov
dec
icebp
push
mov
add
sbb
stos
gs
add
aaa
xchg
mov
or
lods
cmp
mov
push
bound
jno
aad
jo
enter
int
movs
xchg
ja
sub
repnz
inc
cld
mov
mov
sbb
push
mov
fdivrp
stc
xchg
jl
mov
jge
jle
nop
dec
push
and
inc
cli
push
jmp
es
jb
aam
push
jp
xor
arpl
fld
lods
inc
jp
aam
jno
popw
sub
movs
push
inc
mov
lods
or
test
pusha
inc
cmp
call
inc
fnstsw
dec
mov
or
(bad)
push
js
(bad)
fidivr
pop
icebp
mov
jnp
cdq
inc
rcr
loop
fcomp
in
lods
lock
mov
sbb
repnz
test
mov
push
push
push
or
jcxz
jle
scas
xchg
(bad)
cmp
fistp
call
mov
mov
xchg
or
xchg
inc
fmul
cmp
cmp
into
push
or
sbb
movs
ja
or
sub
and
sub
add
dec
jg
nop
mov
aam
add
scas
dec
retf
cmp
mov
and
(bad)
fcomi
pop
das
xor
and
jl
shl
add
icebp
cld
out
adc
ins
or
ret
fdivr
dec
hlt
or
or
xchg
xchg
ficomp
std
add
dec
lock
add
dec
pop
inc
mov
pop
push
arpl
cmp
pop
lock
push
sub
std
sub
push
push
loop
xchg
test
call
pop
pop
add
pop
pop
cmc
jp
jg
imul
dec
add
add
push
adc
and
aad
cdq
mov
lods
call
arpl
push
pop
cmp
inc
hlt
push
outs
and
push
mov
cmp
xor
jno
add
div
aaa
sub
dec
jnp
sbb
xchg
test
out
jns
test
inc
int3
push
mov
inc
arpl
jl
sub
sub
mul
jns
and
jmp
or
sub
aad
and
ret
and
mov
inc
mov
adc
test
jle
add
sub
push
or
inc
dec
push
fs
les
add
sub
out
inc
in
lea
sub
jp
outs
mov
xchg
dec
repz
mov
jbe
cdq
(bad)
lea
jne
shl
je
xchg
mov
mov
popa
arpl
pop
push
fisub
(bad)
mov
call
les
retf
out
xchg
mov
aam
or
sub
sub
cmp
cld
jg
mov
and
cs
mov
fadd
cmp
std
jle
or
push
aas
ins
and
lods
shl
gs
add
adc
or
retf
out
or
fisub
pop
dec
call
add
mov
int
popa
jo
cdq
jmp
fnstenv
xor
sahf
repnz
out
fs
jp
mov
jae
lock
popf
cmp
xchg
cmc
ins
jmp
push
sbb
xchg
dec
jmp
inc
stos
ja
scas
push
add
mov
jg
ror
mov
fstp
int3
in
shl
or
test
leave
cmp
outs
xor
cmps
pop
cmps
push
pop
jle
xlat
xor
and
cmp
fld
fisttp
mov
jmp
xor
rcr
sbb
in
and
adc
cld
cdq
mov
gs
fisttp
ret
fild
jno
xchg
ja
jmp
adc
jmp
pusha
sbb
imul
ret
pop
inc
or
out
pop
fstp
fwait
xor
adc
cmc
fcomi
loop
jnp
push
icebp
imul
lods
inc
in
(bad)
mov
xchg
jbe
sbb
jp
iret
(bad)
adc
fucomi
push
push
inc
test
enter
push
ret
dec
pusha
pushf
sahf
cmps
xchg
push
and
les
jae
sbb
idiv
or
outs
aam
xchg
cmp
xchg
sbb
add
adc
nop
sub
jg
out
mov
outs
lahf
mov
pop
sub
test
pusha
xor
repz
xchg
neg
sbb
(bad)
jne
pop
nop
shr
(bad)
adc
pop
adc
sub
ja
xor
mov
sbb
xor
jl
mov
iret
cmp
in
leave
stc
data16
(bad)
jmp
hlt
cmp
movs
imul
dec
mov
ret
mov
cmc
sbb
push
mov
stos
inc
cmp
push
shl
jb
sar
jg
and
pop
xor
ss
mov
ins
or
mov
call
dec
fs
scas
xchg
imul
mov
retf
loope
push
mov
(bad)
adc
dec
jae
retf
inc
test
ds
and
dec
mov
or
xchg
iret
retf
out
aaa
adc
(bad)
in
mov
xor
gs
jne
pop
sar
mov
loope
cmp
scas
call
push
imul
cmovge
mov
popa
mov
stos
outs
std
pop
xchg
mov
mov
xchg
xor
inc
adc
imul
push
dec
out
jnp
out
cld
and
sub
push
cs
xor
aas
pop
jmp
push
push
mov
mov
cmp
add
ror
repz
sbb
jmp
dec
push
dec
sub
add
push
and
lds
imul
gs
pop
in
xor
cmp
jmp
pop
mov
mov
mov
clc
(bad)
cmp
mov
(bad)
jecxz
pusha
in
(bad)
sbb
add
pusha
test
sub
pop
sbb
adc
jl
dec
ds
cmp
ret
ss
xchg
cs
in
int
mov
adc
iret
sbb
mov
pop
sub
lock
mov
popf
xchg
pop
out
jl
clts
push
mov
mov
add
cmps
and
mov
mov
push
ds
popa
pushw
push
nop
dec
inc
adc
pop
adc
cmps
jl
mov
outs
sti
push
jnp
adc
das
sahf
call
fld
retf
mov
ds
lahf
pop
les
ds
dec
shl
inc
shr
pop
ja
pop
out
arpl
fs
es
push
jle
outs
ret
or
inc
push
stos
mov
sbb
or
sbb
into
arpl
icebp
jle
icebp
rcr
pop
sbb
xor
arpl
and
int
dec
sub
jmp
dec
ins
into
repnz
or
sbb
test
pop
mov
cs
xor
inc
out
sti
fs
ret
(bad)
out
call
dec
in
xchg
sar
or
cmps
loope
cdq
loope
push
leave
adc
cmp
(bad)
xlat
mov
fsub
mov
sbb
outs
dec
push
push
cmps
push
paddw
sub
push
inc
jae
push
retf
ret
sub
out
mov
shl
cld
xor
inc
ins
cli
test
push
adc
in
fisttp
inc
pusha
shl
ret
repz
pop
xchg
aas
jl
jl
out
xchg
popf
ret
xor
cli
ins
sub
sub
cmps
cdq
push
push
out
xchg
ret
leave
xor
and
popf
fidivr
sub
sbb
repz
mov
pop
ret
lds
push
out
inc
and
cwde
xor
rol
mov
bound
leave
cwde
cmp
cwde
cmp
fst
aas
or
por
push
xchg
lea
lock
fmul
repnz
(bad)
cmp
enter
xchg
jmp
stos
out
inc
jmp
mov
xchg
daa
jmp
or
out
fsubr
lahf
ror
dec
stos
icebp
shr
fwait
and
jne
fimul
call
mov
push
out
loope
jnp
inc
cmc
test
push
test
mov
sbb
mov
xchg
sub
and
in
add
xor
or
clc
fcom
movs
push
and
in
scas
cmps
jns
mov
pushf
xchg
mov
push
(bad)
mov
fistp
push
addr16
mov
int3
loop
sahf
and
pusha
mov
sbb
sbb
(bad)
outs
lods
int3
je
sbb
push
push
mov
and
lahf
xor
xor
les
nop
or
fwait
mov
pop
and
imul
dec
cmp
je
adc
mov
adc
ins
gs
mov
sahf
xchg
call
outs
not
mov
ins
scas
and
scas
dec
sahf
jle
dec
je
mov
jb
pop
dec
out
jmp
sar
es
pushf
aaa
test
and
loop
dec
les
sbb
fistp
jle
jp
push
hlt
or
mov
or
loopne
pop
in
shr
sbb
dec
lock
cmc
sbb
rol
push
xor
push
gs
das
push
div
bound
jp
or
mov
xchg
inc
scas
xlat
cwde
popf
inc
pusha
and
sbb
mov
cmps
jle
hlt
int3
popf
adc
push
xchg
jns
sbb
out
sub
jmp
sbb
jmp
cli
movs
in
scas
jp
mov
pop
push
(bad)
nop
inc
jp
gs
jmp
sbb
mov
inc
hlt
retf
mov
lds
mov
jbe
outs
loopne
fadd
leave
je
inc
lea
(bad)
sti
sbb
mov
imul
mov
pop
adc
push
and
cli
inc
inc
stos
jp
les
cdq
scas
pop
xchg
jmp
bnd
ins
adc
jne
aad
xor
push
stc
jbe
mov
pop
test
ffree
das
mov
cmps
imul
(bad)
or
fcmovnbe
xchg
adc
push
div
loope
addr16
xchg
ret
jmp
and
mov
dec
and
mov
rcr
sbb
and
sbb
or
cwde
lock
in
mov
push
pop
mov
ror
push
rcr
adc
shl
pop
xchg
fwait
mov
mov
dec
call
popa
pop
mov
mov
xchg
sub
push
push
out
fcom
inc
push
xor
mov
pop
xchg
cmp
cmp
mov
mov
call
mov
push
aaa
sti
pusha
adc
cmc
mov
jne
inc
mov
inc
ds
out
mov
iret
inc
fwait
or
mov
out
push
jb
shr
inc
xchg
jl
enter
cmovp
fdiv
fwait
sbb
xchg
pop
setge
mov
xor
mov
jmp
daa
mov
adc
jmp
add
xor
inc
push
or
sub
jle
fmul
ins
mov
add
and
mov
cwde
add
mov
rcr
xor
loop
ret
hlt
xor
ret
mov
adc
call
sbb
sub
adc
cmp
ja
loop
mov
xor
pusha
fist
mov
xchg
adc
repz
pop
add
out
xchg
jb
jne
shr
es
mov
push
sbb
adc
inc
pop
add
dec
enter
inc
in
aam
mov
stos
cmps
fwait
nop
out
ficomp
cdq
aad
fisub
ins
int3
(bad)
les
inc
add
jg
lea
cmp
cmps
mov
jg
pop
fsub
mov
sti
arpl
loop
out
push
and
(bad)
cmp
cmp
and
or
inc
push
mov
std
jae
imul
jb
idiv
xchg
ret
test
and
xor
in
push
bound
push
data16
sbb
test
xchg
pop
arpl
sbb
push
mov
sbb
sub
or
mov
jmp
push
icebp
dec
sti
sbb
mov
mov
jmp
das
ja
sub
jmp
fdivr
(bad)
cmps
out
xchg
cmp
mov
dec
test
outs
jb
retf
icebp
or
adc
jbe
das
dec
pop
sub
call
sub
add
push
sbb
sbb
pop
jle
jmp
jns
dec
add
push
or
jno
shl
pop
jmp
sbb
rcr
call
dec
es
fwait
movs
jmp
in
sbb
sti
dec
stos
fidiv
inc
push
loope
jmp
in
push
ins
jp
mov
ss
ja
adc
sub
xor
pushf
(bad)
fucomi
int3
mov
icebp
or
call
(bad)
dec
in
or
fs
mov
jmp
shr
out
or
add
and
(bad)
jmp
add
in
sbb
rol
pop
push
and
jge
xchg
mov
mov
cmp
jmp
cmp
mov
cmc
test
xor
dec
mov
das
pop
push
mov
push
in
cli
(bad)
call
or
inc
jo
jns
imul
mov
pop
adc
(bad)
je
das
xor
cld
mov
xchg
(bad)
lea
push
mov
pusha
sub
fs
ins
mov
dec
(bad)
outs
addr16
test
pop
push
dec
pop
loopne
cmp
pop
fist
sbb
loope
and
stc
or
inc
dec
mov
jmp
sub
sbb
fs
addr16
mov
adc
mov
pushf
popw
mov
sub
test
cdq
rol
or
add
inc
sti
sbb
dec
jno
retf
sbb
loop
aad
shr
pop
cmp
(bad)
stos
mov
ja
cld
in
jae
inc
cmc
xor
adc
mov
sub
mov
dec
test
push
imul
mov
pop
mov
arpl
or
nop
shr
scas
xchg
jmp
mov
sbb
test
div
sti
sbb
mov
clc
(bad)
(bad)
push
jnp
gs
sub
adc
hlt
loop
dec
jmp
leave
mov
mov
push
and
sub
sbb
pop
pop
pop
test
in
cld
mov
pop
(bad)
ds
mov
fisttp
xor
inc
mov
jl
push
out
pop
cmps
cli
pop
push
add
outs
pop
fimul
push
pop
or
dec
xor
loop
mov
sbb
retf
aas
push
(bad)
lahf
shl
jp
mov
shl
cmp
mov
icebp
stc
movs
jg
pop
pop
jns
jne
jnp
sbb
ss
fimul
inc
setle
xor
mov
adc
push
xchg
mov
lahf
dec
fbstp
cmp
inc
jne
movs
inc
(bad)
addr16
sbb
lahf
je
idiv
(bad)
ret
jb
stos
ss
and
(bad)
and
pop
jecxz
push
cmovbe
inc
int
xchg
movs
fstp
cmp
(bad)
mov
dec
ret
jae
arpl
push
sub
cmp
out
mov
push
pop
aas
stos
and
mov
mov
or
cdq
push
dec
and
fistp
xchg
pop
leave
push
sbb
cli
(bad)
jno
dec
in
pusha
in
inc
out
cmps
dec
ins
sub
lds
add
cdq
xchg
jle
sub
xchg
sub
icebp
test
push
in
lahf
dec
push
xchg
iret
xchg
cmp
xchg
stc
adc
dec
push
fistp
cs
rcl
adc
mov
nop
rcl
jns
std
out
or
sub
les
cmp
cld
bound
mov
in
xor
mov
adc
or
stos
iret
push
pop
div
push
lock
clc
mov
or
and
xchg
xchg
call
and
and
cmp
pop
mov
push
mov
and
shr
sub
pop
xor
outs
(bad)
dec
or
mov
jmp
inc
mov
mov
push
xchg
mov
pop
dec
push
mov
std
lea
dec
imul
xchg
repnz
adc
ret
(bad)
cmp
retf
mov
fs
xchg
adc
mov
mov
cmps
dec
cmp
jno
and
pop
adc
repnz
mov
inc
pop
mov
fiadd
scas
repnz
sbb
jge
xchg
inc
push
mov
xor
adc
jbe
and
push
xor
imul
or
mov
adc
mov
loop
hlt
iret
jnp
test
int
mov
xor
fsubrp
fs
pop
fstp
mov
push
pop
retf
(bad)
sbb
addr16
or
push
add
shr
jns
ret
imul
mov
pusha
cmp
test
jno
ret
push
std
fs
inc
adc
bound
int3
movs
into
sub
cdq
imul
sub
ror
inc
ja
daa
addr16
(bad)
sub
push
or
fwait
xchg
sbb
cmps
inc
out
repz
outs
adc
icebp
mov
outs
mov
mov
add
sbb
cmp
lds
sbb
mov
(bad)
ja
or
mov
lock
mov
(bad)
jmp
sub
add
aaa
cmp
cmp
stos
retf
push
(bad)
loope
int3
out
out
push
jnp
sbb
out
cmc
ret
dec
pop
push
test
jge
mov
js
pop
fwait
scas
pusha
lea
or
sti
ror
lods
movs
sub
call
(bad)
pop
pushf
cmp
xchg
test
push
mov
push
in
cmp
(bad)
retf
sahf
stc
psubd
adc
xor
mov
fsub
std
push
add
inc
inc
xlat
cwde
scas
adc
lahf
sbb
out
adc
xor
arpl
dec
xchg
add
add
mov
adc
sbb
sub
imul
pushf
pop
adc
mov
jmp
mov
ins
lock
xchg
jo
xor
sub
jns
inc
aam
lahf
pop
xor
jo
push
fbld
stos
fsubr
daa
aaa
mov
inc
mov
scas
xchg
or
loopne
outs
bound
fadd
ret
cdq
sbb
ins
mov
clc
adc
mov
pop
mov
cwde
jno
cmps
mov
cmp
pop
xor
add
push
mov
out
mov
in
push
mov
inc
cmp
pusha
icebp
(bad)
mov
cmc
cmps
pop
jge
sahf
pop
dec
adc
sub
gs
lea
call
inc
call
(bad)
cmp
imul
outs
je
stos
aas
scas
cli
xor
sbb
imul
jge
jg
inc
mov
xchg
jmp
test
ja
out
inc
xchg
loope
xchg
fmul
jb
not
and
inc
mov
jnp
inc
rol
push
add
scas
and
jecxz
sti
pop
push
ins
sbb
xchg
push
nop
pop
outs
inc
shl
mov
xlat
mov
pop
or
into
scas
loopne
icebp
add
jp
or
daa
es
push
jne
pop
loopne
pop
scas
call
pcmpeqb
xor
sbb
push
scas
xchg
fadd
jo
fsub
cmp
test
adc
jne
test
in
(bad)
sar
hlt
and
mov
jbe
add
ss
add
add
mov
mov
dec
aad
mov
sahf
lods
inc
push
ret
mov
pop
adc
jno
ror
jno
mov
loop
cmp
and
retf
lahf
sar
xchg
bound
bound
mov
jmp
lods
mov
or
fstp
sti
push
int3
xchg
push
adc
cmp
movs
fild
inc
cmp
adc
scas
js
ss
add
jae
jmp
scas
loope
jne
mov
and
sbb
xchg
mov
jmp
mov
jno
xor
pop
or
gs
xchg
jmp
imul
mov
pop
sbb
xchg
push
xor
(bad)
repnz
pop
popf
out
not
mov
ins
jne
mov
mov
pushf
adc
push
sub
mov
fbstp
sbb
repz
push
pop
mov
test
sub
cmp
repnz
sbb
dec
xlat
dec
and
adc
xchg
dec
ss
imul
dec
ficom
sahf
fcmovne
repnz
lock
xchg
bound
xchg
imul
std
(bad)
loopne
fadd
out
mov
ja
dec
aas
inc
and
int
jp
xor
jo
xlat
push
jl
xor
es
call
mov
popa
neg
into
pop
inc
pop
mov
or
cmps
sbb
(bad)
and
xchg
jno
cld
sar
movs
dec
popa
jge
fst
sub
(bad)
mov
inc
ss
in
adc
add
aam
jg
adc
sbb
and
mul
or
fdivr
mov
cmps
cmp
push
int
pusha
adc
inc
mov
rcr
comiss
mov
pop
repnz
and
mov
data16
test
cld
dec
ja
shl
mov
and
aas
test
mov
test
shl
push
xchg
add
in
push
cmps
movs
mov
mov
int
add
aaa
lods
sbb
hlt
mov
nop
test
lods
ins
add
sti
pop
push
aam
add
cmps
xlat
imul
xchg
sbb
inc
arpl
fist
push
bound
mov
fsub
call
xchg
fsubr
rcl
sar
cmp
adc
sti
loop
imul
jmp
xor
aam
dec
add
cmp
jb
jecxz
imul
ret
xlat
cmps
je
std
mov
inc
inc
dec
retf
into
in
sbb
cmp
xor
add
sbb
iret
jp
lds
xchg
int3
cmp
cmp
test
sub
out
mov
mov
test
hlt
and
mov
jmp
into
fiadd
bts
lods
cld
jne
push
dec
in
pop
aas
mov
mov
outs
imul
loop
xor
icebp
jnp
daa
scas
add
push
ret
aas
iret
jne
les
inc
push
stos
or
cdq
fucomip
mov
shl
xor
jno
cld
push
pushf
sub
xchg
jge
movs
adc
jns
ins
sahf
(bad)
mov
xchg
dec
xor
jno
popa
xchg
mov
test
add
(bad)
imul
out
pop
mov
call
scas
cdq
neg
into
jae
arpl
sub
test
les
mov
adc
mov
mov
(bad)
enter
jnp
pop
sub
inc
add
mov
mov
cmps
xor
inc
sub
aaa
dec
(bad)
xchg
hlt
inc
mov
lock
imul
in
loopne
mov
sar
sar
data16
jmp
inc
nop
fist
je
xchg
rcr
inc
es
sub
jns
jne
in
mov
xchg
ds
stos
std
popa
or
retf
cmps
pop
mov
mov
sahf
mov
mov
jno
pop
xor
aam
inc
jns
mov
leave
lods
mov
push
scas
pop
sbb
push
aam
in
dec
pop
aas
inc
mov
fwait
inc
fdiv
pop
mov
pusha
les
inc
inc
imul
dec
dec
xor
jmp
pop
cmp
and
add
cmp
add
xor
fisubr
in
mov
mov
daa
shl
repz
adc
xor
iret
xor
fwait
int
and
jle
mov
add
jmp
xchg
out
data16
shl
cmp
(bad)
loop
lock
aas
pop
jge
aam
or
fld
enter
lods
add
(bad)
jb
push
sub
scas
and
sbb
jae
sub
mov
(bad)
jecxz
mov
cmc
cmp
add
fistp
cmc
jns
inc
add
mov
icebp
jmp
cmp
sub
dec
pop
jns
add
cmps
sub
add
fs
sbb
mov
imul
inc
in
and
enter
(bad)
jge
xchg
imul
pushf
sbb
icebp
jo
daa
push
jmp
inc
pushf
lea
test
sub
push
shl
ins
mov
mov
cdq
les
cdq
out
repz
and
push
in
xlat
sbb
push
jae
pushf
jbe
push
xchg
stos
cmp
xor
call
rcr
hlt
inc
inc
xchg
sbb
pop
sbb
jno
ret
ror
and
mov
mov
xchg
adc
dec
lock
xlat
dec
outs
inc
jl
and
cmps
inc
shl
add
xchg
and
and
ret
stos
push
test
or
push
clc
data16
jecxz
dec
in
mov
mov
fcom
push
scas
adc
mov
ret
sub
fucomp
cmp
jmp
test
sar
in
xchg
repz
and
scas
jns
call
cli
shr
mov
loop
mov
jle
popf
out
jo
popa
xchg
cld
lock
adc
sbb
out
and
pop
push
add
or
(bad)
fisttp
scas
in
mov
sahf
jge
jmp
xchg
in
ret
fnstenv
mov
mov
mov
cli
nop
call
outs
mov
cmp
pop
lods
xchg
mov
mov
in
push
mov
in
xor
push
pushf
sbb
and
mov
push
call
cli
inc
sub
xor
je
push
push
ins
or
test
pusha
sbb
(bad)
lock
push
fldenv
(bad)
pop
or
mov
jl
inc
out
or
mov
push
test
adc
ins
push
out
aam
add
adc
pushf
and
adc
loopne
or
rcr
ror
pop
fisub
xchg
neg
inc
adc
and
cli
mov
dec
and
cmp
hlt
xchg
gs
das
fstp
push
inc
and
cmp
cmp
bound
cmp
jno
mov
mov
scas
sbb
ret
sbb
jne
bound
dec
bound
repnz
js
sbb
ficomp
out
inc
div
mov
movs
movs
mov
ret
cmp
inc
ficomp
sub
add
jo
xor
sbb
aad
loopne
retf
jo
fs
xchg
(bad)
retf
or
retf
pushf
scas
inc
aad
push
push
fst
xchg
into
adc
add
sbb
inc
sahf
sbb
aaa
scas
xchg
adc
stos
push
or
xchg
add
mov
push
mov
(bad)
pop
add
cdq
cmp
xor
xor
loope
mov
fisub
mov
jle
mov
pop
inc
push
cdq
xor
sbb
cmp
jae
enter
loopne
push
jno
xchg
add
jns
push
stos
pushf
adc
je
es
cmp
iret
test
add
mov
cmp
pushf
aam
add
popa
or
jb
sub
hlt
sti
rcl
sub
je
dec
dec
loop
jl
mov
out
cld
mov
xchg
ds
cmps
pushf
test
adc
pop
xchg
cwde
dec
xor
jnp
rcl
outs
add
lock
sbb
pushf
or
inc
mov
das
mov
jmp
inc
outs
xor
into
or
inc
and
cs
repz
adc
xor
jle
adc
jecxz
adc
lds
sub
dec
sub
xchg
push
lea
stos
rcl
dec
pop
jecxz
dec
xor
mov
pop
aam
loopne
inc
rol
pop
(bad)
or
loope
pop
fbld
xchg
lock
sub
dec
aad
lahf
cmp
jl
(bad)
retf
xlat
cdq
cmps
jmp
push
retf
(bad)
mov
xchg
out
dec
mov
outs
dec
fcomp
jo
sbb
adc
push
scas
and
aad
retf
icebp
jge
mov
push
push
mov
cmp
or
or
inc
repnz
call
xchg
retf
push
lods
pop
inc
pop
dec
movs
jmp
cwde
push
imul
call
iret
xchg
jb
or
data16
in
ret
aad
sbb
jge
enter
push
inc
push
and
ds
test
in
pop
xor
shl
sub
cld
ds
inc
cmp
out
movs
add
mov
sub
mov
mov
scas
in
xor
cmps
or
inc
xchg
xor
imul
mov
imul
addr16
push
nop
mov
jne
jge
adc
inc
icebp
mov
inc
push
mov
adc
add
aam
add
sbb
push
lahf
ds
ret
inc
push
push
add
mov
jnp
dec
mov
pop
jecxz
lock
cmp
jp
inc
xchg
push
addr16
ja
cmp
cmp
xor
sbb
mov
lahf
pop
jnp
mov
jg
addr16
jecxz
shl
inc
ror
fnstenv
jp
dec
icebp
xor
or
ins
inc
adc
or
jne
out
mov
sub
mov
cmps
cdq
leave
mov
out
and
mov
retf
pop
xor
out
sub
mov
je
test
push
or
xor
dec
jg
sbb
aaa
push
mov
aam
xchg
je
cmp
idiv
xchg
inc
cmc
jge
push
scas
pop
cs
(bad)
xchg
int
push
xchg
dec
out
scas
jmp
out
push
xor
ins
hlt
popa
(bad)
repz
jno
cwde
(bad)
pop
ds
aas
xlat
popa
jle
addr16
add
loop
sbb
repz
xchg
fs
jae
arpl
add
loope
cmps
shr
mov
retf
mov
xchg
mov
lods
into
cwde
xor
pop
in
pushf
cli
adc
ins
pop
inc
cmp
(bad)
das
out
lds
push
imul
iret
and
fs
push
inc
enter
stos
mov
mov
push
fistp
fdivr
mov
push
mov
push
sbb
sub
push
leave
pusha
call
add
std
jecxz
and
std
or
push
arpl
fmul
(bad)
mov
hlt
jp
add
inc
push
mov
mov
in
inc
push
mov
mov
add
(bad)
jnp
xor
xchg
sbb
sbb
jae
test
or
out
test
fmul
and
neg
push
sub
sub
int
inc
pop
sti
fs
repz
iret
jecxz
(bad)
jne
mov
adc
fsub
mov
out
push
push
(bad)
(bad)
cmp
out
mov
div
cli
jecxz
mov
je
(bad)
ja
add
pop
sti
inc
std
fs
and
and
sbb
mov
mov
mov
adc
js
movs
enter
mov
fisubr
dec
sahf
jae
add
scas
ins
fstp
arpl
jmp
je
push
fdivr
(bad)
push
xchg
dec
xchg
add
push
mov
imul
in
and
sub
das
pop
fadd
mov
clc
or
or
push
push
cld
inc
add
repz
mov
xor
(bad)
mov
mov
mov
sub
pop
push
or
cmp
dec
retf
cmp
mov
dec
test
mov
sbb
inc
ret
pop
imul
ret
ss
jae
xchg
iret
test
xchg
aad
sub
cld
cmp
mov
xor
inc
addr16
not
mov
sub
sbb
(bad)
xchg
sbb
dec
sbb
cmps
stc
mov
sub
hlt
stc
cwde
imul
cwde
inc
jb
and
push
(bad)
popa
cli
clc
cmp
(bad)
aad
pop
xchg
int
add
xchg
cmps
sbb
sbb
popa
adc
daa
xor
push
xor
cmp
outs
outs
sbb
ficom
jbe
out
cld
call
inc
(bad)
out
push
shl
pop
dec
inc
sub
ss
(bad)
xlat
jne
or
nop
retf
sbb
xor
xchg
push
ror
loope
adc
or
sbb
test
movs
loopne
mov
xchg
dec
add
repz
mov
jp
push
jo
xor
add
cmp
mov
(bad)
pop
mov
les
cwde
inc
add
mov
pop
out
push
push
cmp
cmp
xor
cmc
call
jns
daa
ins
pop
sbb
mov
lds
cmp
int
and
aad
rol
rol
and
cs
jl
jo
int
ret
cmc
mov
dec
addr16
scas
and
mov
or
repz
in
mov
fnstsw
lahf
fs
cmp
fild
pop
popf
lds
jne
imul
popf
scas
mov
sub
iret
or
lods
mov
(bad)
mov
and
imul
sub
xor
mov
pop
mov
or
dec
les
xchg
mov
out
and
mov
mov
out
mov
leave
sar
popa
xchg
cdq
lods
push
jbe
xchg
in
sbb
inc
jmp
pop
or
fnstsw
fcom
sbb
mov
xor
mov
cmp
pop
lods
addr16
test
push
fdivr
cmp
out
ror
add
mov
aas
sbb
sub
retf
ins
cmc
aad
(bad)
and
inc
sbb
inc
lds
pop
das
add
sub
mov
(bad)
in
fstp
pusha
ss
pop
xchg
inc
jo
retf
loop
xchg
aam
sbb
(bad)
cmp
js
pop
shr
jmp
mov
(bad)
mov
add
jne
aaa
push
jmp
jnp
sub
or
xor
addr16
call
cmp
ret
outs
sbb
call
cmps
int
lds
lods
aas
sub
mov
idiv
lahf
jmp
adc
je
xchg
dec
add
dec
scas
frstor
sub
cmp
inc
mov
fistp
mov
jb
sub
mov
call
rcr
mov
pusha
push
add
and
shr
enter
(bad)
adc
or
mov
gs
cmp
xchg
jmp
mov
mov
jg
push
test
mov
xchg
aaa
(bad)
sbb
neg
pop
jge
or
dec
fisub
mov
in
and
dec
call
and
(bad)
cld
fsubr
cld
or
test
sub
cmp
xor
mov
add
lods
outs
dec
repnz
mov
push
inc
popa
jnp
dec
jmp
push
and
adc
(bad)
sbb
pop
push
fld
cmps
mov
loop
not
sahf
sahf
lods
cmp
mov
out
out
push
pop
aam
lea
or
pop
sub
push
or
xor
adc
lods
inc
fisttp
sub
int
(bad)
outs
loop
cmps
xor
dec
lods
cmp
sub
jl
xchg
out
lea
cmp
pop
arpl
xchg
inc
mov
inc
mov
xchg
sbb
and
jg
or
mov
jnp
and
mov
sahf
outs
mov
mov
sahf
addr16
cmps
jmp
inc
push
pop
cwde
repz
inc
mov
(bad)
outs
inc
retf
push
or
sub
push
mov
ins
and
sbb
pushf
dec
jl
leave
push
pop
in
les
push
adc
mov
stc
pop
bound
jnp
jg
outs
dec
cli
retf
stos
pop
ret
neg
mov
out
and
imul
das
imul
cmp
(bad)
les
jmp
mov
int
ror
sti
fnstcw
aam
pop
add
ficomp
xchg
fistp
mov
mov
jmp
ja
loopne
jmp
fbstp
pop
pop
add
out
mov
mov
mov
mov
call
dec
xchg
sub
ins
shl
pop
push
(bad)
mov
inc
push
adc
sub
mov
ret
and
push
pop
imul
xor
aaa
in
test
pop
cmp
mov
ss
mov
fidivr
inc
cs
out
cmp
call
cmc
fdivp
in
push
xchg
mov
mov
cmp
cmps
stos
sbb
push
xchg
jl
mov
push
test
fisttp
retf
jl
aas
(bad)
or
xor
inc
xor
(bad)
pusha
mov
cmp
pop
(bad)
pop
or
arpl
push
sub
or
or
pop
(bad)
fbstp
fcomip
push
jl
cli
mov
adc
pusha
dec
mov
pop
push
jne
daa
sbb
mov
pusha
dec
stc
sbb
out
adc
test
stc
arpl
dec
mov
int3
test
xchg
push
je
nop
xchg
and
push
cmp
xchg
mov
scas
sar
ins
jge
test
bound
mov
sbb
pushf
ins
add
inc
loope
mov
ss
mov
xor
std
out
xchg
mov
inc
scas
or
and
mov
lods
lods
push
pop
push
xor
pop
dec
prefetch
pop
in
imul
add
cs
sbb
inc
in
mov
push
sub
fnstsw
sbb
or
mov
pop
sub
(bad)
not
sub
mov
adc
es
retf
loopne
hlt
cmp
add
mov
cmp
or
ret
shl
mov
ficomp
inc
pusha
xchg
cmp
dec
cmp
or
je
outs
mov
aaa
add
fs
iret
test
adc
fsub
imul
imul
iret
jl
les
mov
ja
jbe
and
pushf
xchg
push
(bad)
adc
stos
add
retf
imul
xor
les
cmp
pop
sbb
dec
movs
bound
jns
adc
test
or
add
aaa
rol
xchg
inc
fld
ja
jmp
xchg
and
or
push
loop
out
jecxz
push
xchg
dec
mov
cmc
or
es
ficom
ins
scas
repnz
adc
mov
sbb
dec
daa
movs
inc
jb
inc
pop
mov
ja
push
mov
dec
ret
sub
shr
fsubr
push
aas
mov
mov
sbb
(bad)
shr
cdq
scas
sub
(bad)
and
shl
jbe
test
popf
repz
neg
scas
shl
lock
out
aaa
cmp
sbb
repz
or
fwait
mov
out
test
bound
sbb
aaa
add
or
pop
sub
cmp
mov
xchg
sahf
gs
fidivr
jnp
xlat
icebp
push
ss
mov
out
dec
push
ja
mov
cmps
gs
repnz
and
add
xchg
imul
lahf
test
inc
repz
stos
push
add
jge
inc
mov
mov
retf
pop
adc
lds
fs
cli
fisttp
sahf
mov
jb
xchg
sbb
outs
push
xlat
pop
int
lea
popa
inc
push
hlt
fcmovnbe
mov
cdq
xchg
cmp
add
jns
xor
jo
cmps
dec
(bad)
rcl
retf
icebp
loope
mov
mov
clc
jbe
lds
cmp
jae
xchg
jns
sbb
sub
mov
repz
sub
and
das
pop
lods
jbe
cs
xlat
add
jmp
and
and
test
and
jmp
sbb
cdq
pop
jge
(bad)
pop
cwde
out
jae
icebp
ror
sahf
in
xchg
out
rcl
sbb
push
push
or
dec
sbb
or
cmp
retf
push
cmps
test
add
imul
mov
stos
add
mov
inc
out
test
enter
add
jmp
out
retf
cmp
lods
or
xchg
rol
adc
clc
push
inc
dec
es
cmp
loop
sbb
xor
sbb
je
mov
sbb
js
sbb
cmc
scas
aam
cmp
fcom
enter
sub
jl
(bad)
mov
je
fistp
mov
inc
(bad)
jg
fwait
pop
add
ins
aas
and
cli
xchg
ret
push
dec
aad
ins
rcr
push
js
pop
pop
fadd
dec
mov
mov
xchg
test
mov
outs
xcrypt-cfb
cmps
movs
(bad)
jns
ret
mov
ds
sub
xlat
mov
mov
mov
imul
aaa
push
adc
cmp
ins
lahf
mov
(bad)
sar
or
pop
jmp
mov
pop
mov
das
adc
cdq
mov
jo
sub
nop
xor
cmp
gs
jmp
dec
adc
int3
sar
push
xchg
imul
jo
cmp
mov
pusha
fldcw
mov
mov
outs
sbb
jmp
fucomi
add
retf
dec
dec
push
xchg
push
jl
push
cmp
call
and
rol
adc
and
repnz
sbb
and
adc
es
mov
pop
xchg
push
cmp
xchg
push
xor
fsub
sbb
jnp
ds
xchg
scas
(bad)
imul
ins
std
mov
cmp
imul
int
add
inc
pslld
stos
jmp
sar
pop
stos
cmp
jl
mov
add
ret
dec
fcom
xor
pop
hlt
pop
jmp
jns
das
daa
outs
loope
add
test
push
call
lar
or
in
jle
lods
inc
pop
sub
xlat
mov
cmc
pop
sti
jge
in
rcr
jo
mov
jb
pusha
xchg
pop
sar
jne
scas
fwait
mov
or
ds
jb
mov
add
scas
dec
xchg
push
in
dec
mov
push
xchg
stos
sub
pusha
jg
pop
adc
add
pop
out
(bad)
call
test
or
sbb
adc
test
and
dec
push
xchg
pop
jmp
cmps
xchg
push
jno
mov
sbb
repnz
fadd
into
cmp
ret
push
xor
add
add
out
pop
inc
or
pop
mov
ss
imul
imul
stos
pusha
and
fs
fidiv
push
inc
(bad)
rcl
lahf
jnp
repz
ins
push
enter
sti
xor
adc
repnz
out
dec
and
shl
mov
sti
shl
cmps
movs
push
out
dec
or
or
jno
mov
or
sahf
fstp
cs
cmp
aam
cmp
int
or
cmps
xchg
mov
sbb
pop
jbe
dec
jmp
jl
mov
iret
add
xadd
lods
pop
call
imul
jl
mov
dec
int3
cmp
push
stc
rol
jmp
mov
sbb
pop
mov
ss
mov
cmc
mov
mov
cmp
cmp
xchg
in
shr
and
outs
test
sub
adc
or
cdq
adc
pop
les
lods
fwait
sbb
xchg
mov
sti
adc
loopne
mov
adc
push
fdiv
push
jmp
xchg
lods
stos
repz
sub
cmp
out
dec
sar
in
jno
mov
mov
xor
adc
push
sub
das
sbb
dec
xchg
push
(bad)
sub
mov
out
fnsave
mov
add
adc
pop
push
xor
repnz
stc
daa
cmp
int
jo
sbb
idiv
nop
and
mov
inc
cmc
hlt
xchg
test
ins
lds
push
sbb
mov
pop
jns
inc
sub
xlat
xor
push
(bad)
ja
fidivr
jbe
cdq
aas
stos
add
rol
inc
jg
push
int3
pop
cmp
cmps
pop
in
pop
xchg
xchg
enter
dec
idiv
sub
and
pop
loop
shr
nop
pushf
gs
sub
cmp
or
push
imul
xchg
push
mov
add
cs
xor
mov
(bad)
fidiv
mov
call
push
lds
mov
cmp
cdq
cmp
or
(bad)
xchg
xchg
add
xchg
mov
sbb
in
xor
mov
mov
in
push
mov
mov
repnz
scas
mov
push
ins
movs
cdq
cmp
clc
lds
sub
add
outs
jecxz
ins
shl
jbe
not
call
jp
xchg
adc
adc
mov
sub
bound
cmps
or
mov
cld
mov
pop
mov
arpl
jle
mov
push
fidivr
mov
les
and
adc
jle
scas
sub
sub
int3
and
mov
ds
xor
fidivr
out
out
dec
ret
addr16
in
ret
and
adc
dec
dec
or
inc
cmp
movs
jl
rcl
std
cmp
scas
mov
mov
jge
test
enter
cmps
sti
into
xor
in
sbb
int3
jo
ror
jp
mov
jmp
(bad)
outs
ins
push
dec
lods
sub
dec
ins
mov
add
inc
adc
sub
mov
inc
(bad)
aam
lahf
jbe
aam
fwait
cwde
jne
enter
fcomi
and
loopne
cmps
adc
xchg
cmps
ja
cwde
aad
sbb
stos
and
mov
inc
pop
int
jb
(bad)
jmp
dec
push
sub
jmp
inc
imul
addr16
dec
jmp
cdq
mov
jcxz
iret
inc
jns
dec
mov
ins
pop
fdivr
and
mov
dec
cmp
add
cmps
enter
jmp
popf
repnz
or
sar
sti
fstp
in
xchg
dec
in
adc
pop
mov
popf
mov
bound
jo
dec
xchg
mov
(bad)
shr
and
cmp
lods
inc
sub
(bad)
mov
xor
sbb
dec
cmps
(bad)
jp
outs
aad
test
(bad)
jmp
jmp
mov
sub
push
xchg
add
lods
inc
cmp
jle
or
in
adc
pusha
push
dec
ror
pop
pop
mov
inc
adc
cli
jmp
mov
sub
icebp
cmp
and
call
or
inc
psadbw
push
sbb
or
(bad)
fcmovnbe
sbb
(bad)
lods
inc
pushf
xor
xchg
iret
adc
outs
sub
xor
sub
xor
js
in
lds
xchg
sbb
xchg
and
inc
and
mov
and
cmp
ret
jb
sub
mov
cs
mov
dec
push
int3
movs
push
jg
test
or
mov
pop
jle
retf
dec
push
or
out
xor
fld
push
js
pop
(bad)
adc
add
icebp
test
retf
push
fst
adc
push
mov
imul
repz
in
xchg
xor
in
add
xchg
out
addr16
mov
push
push
add
scas
imul
or
and
ret
js
stos
ret
loopne
pop
mov
not
push
add
bnd
stos
xchg
mov
sbb
movs
int
outs
jb
je
or
(bad)
pop
lods
mov
pop
cdq
push
(bad)
hlt
movs
call
popf
fcmove
xchg
and
sbb
or
shr
es
jge
lahf
out
(bad)
xor
outs
hlt
jp
mov
cmp
das
xchg
mov
mov
pop
clc
dec
daa
xor
cmc
dec
js
mov
jmp
nop
iret
push
add
ror
fst
ficom
jne
cmp
sub
mov
add
inc
test
add
retf
xlat
ret
inc
lods
mov
sbb
sbb
mov
cld
sub
pop
iret
(bad)
and
aas
mov
cs
inc
mov
shl
int
js
in
xor
jo
add
addr16
cmc
bound
fucomi
sub
and
movs
adc
aad
in
fs
dec
xor
and
mov
ja
pop
xor
test
inc
sub
aas
inc
rcr
xchg
rcr
outs
imul
jmp
jecxz
aad
lahf
mov
xchg
ret
outs
pop
dec
sahf
jmp
pusha
and
inc
out
cld
jp
int
jmp
sahf
lea
pop
jae
xchg
out
push
or
bound
inc
xor
mov
jge
mov
cld
push
xor
(bad)
mov
sub
add
pop
shl
mov
adc
and
or
dec
push
push
jmp
push
jle
ja
mov
pop
mov
test
or
popa
pop
jg
fcom
imul
inc
push
aas
push
sub
mov
jp
fdiv
sbb
int3
lea
or
std
xor
adc
push
cmps
jnp
sub
ret
cmc
sbb
pop
out
in
fs
adc
xchg
mul
jl
stc
enter
movs
daa
(bad)
(bad)
frstor
pop
xchg
js
fild
add
shl
outs
scas
xchg
leave
sbb
mov
and
aaa
sub
pop
stc
and
sbb
xor
sbb
sbb
addr16
inc
nop
scas
jb
dec
add
repz
push
mov
popf
and
sbb
int
test
cmp
sub
and
mov
leave
leave
push
cmp
sub
and
ins
sub
dec
push
adc
pop
das
(bad)
dec
dec
movs
xchg
pop
ja
mov
data16
(bad)
jp
mov
jno
jg
sbb
sub
call
shl
stos
push
je
xchg
test
aaa
and
pop
xchg
frstor
jno
or
(bad)
push
sbb
cmc
push
and
(bad)
xor
mov
lds
idiv
dec
in
sbb
aam
bound
sub
mov
ins
fmul
pusha
inc
nop
xchg
inc
test
lods
mov
mov
movs
jmp
push
sub
mov
retf
cmp
fsubp
and
stos
loopne
fistp
stos
pop
in
dec
mov
xor
ins
and
mov
leave
in
out
add
sub
pushf
int3
mov
test
cmc
sub
int3
test
ret
and
(bad)
jmp
lea
cs
aaa
mov
into
mov
call
cli
xchg
add
xor
sahf
lock
iret
test
mov
cs
and
xchg
ret
fstp
push
cmc
hlt
cmp
cmp
aas
lahf
add
sub
jmp
out
adc
xchg
shl
and
adc
(bad)
push
arpl
les
shl
repnz
rep
and
mov
xchg
rcr
pusha
sub
xchg
imul
sub
data16
sub
adc
ja
and
or
call
adc
fisubr
inc
iret
test
fbld
jmp
xor
mov
(bad)
ins
mov
retf
fsub
cmp
cli
pop
cs
mov
not
lds
push
or
(bad)
mov
retf
outs
scas
in
(bad)
cmp
cs
sbb
outs
pop
scas
imul
jle
inc
sti
jmp
fisub
in
dec
popa
cli
jnp
jne
popf
ins
xor
jno
cmps
shl
dec
aam
out
stos
stos
imul
loop
imul
or
retf
adc
enter
pop
pop
mov
in
sahf
fldcw
sub
and
add
push
out
popw
outs
pop
adc
cwde
add
jbe
or
scas
ds
imul
std
loop
fadd
jno
add
add
pusha
ret
in
jns
and
xchg
sbb
loope
dec
sub
dec
push
(bad)
sbb
inc
mov
cmp
inc
or
sub
int3
cwde
aaa
ins
inc
adc
cmp
mov
nop
scas
or
sub
cmp
popf
pop
dec
call
add
rcl
test
outs
push
sbb
scas
lods
aas
add
or
neg
cmp
mov
out
xor
inc
mov
dec
adc
push
mov
jnp
cld
adc
cs
xor
mov
mov
enter
je
sub
and
adc
sbb
sbb
(bad)
xchg
or
dec
test
shl
mov
add
call
dec
(bad)
and
mov
dec
push
inc
movs
cmp
idiv
ins
in
add
aaa
push
fidivr
sub
mov
nop
mov
outs
inc
pusha
jno
int
xor
cwde
fild
sbb
xchg
scas
adc
imul
or
pop
mov
dec
jne
adc
or
mov
lds
add
lock
push
inc
int3
sub
add
or
dec
or
add
int
cmp
movs
pop
add
(bad)
cdq
xlat
aad
push
ret
sbb
(bad)
aaa
push
jle
imul
imul
xor
fld
dec
mov
test
mov
es
lock
push
scas
fwait
test
push
test
leave
mov
mov
out
icebp
iret
arpl
jmp
out
sub
and
xchg
xor
adc
xchg
dec
ds
mov
nop
pop
loope
adc
cmp
xor
mov
ret
retf
cwde
add
loope
imul
xchg
std
std
add
aad
sbb
mov
cdq
fs
ja
movs
xchg
imul
sub
mov
nop
xor
popa
and
cmp
inc
ss
iret
jnp
jne
ins
clc
mov
rcl
sub
stc
push
and
pop
push
loop
lods
rcl
popa
mov
mov
pop
dec
sbb
jns
call
icebp
lods
mov
cmp
sub
sub
push
push
int
repnz
push
fstp
sub
sbb
clc
gs
sbb
(bad)
repnz
call
(bad)
push
mov
es
loop
dec
mov
sub
pop
retf
xor
mov
pop
dec
leave
iret
rol
sub
stos
add
cmps
mov
call
mov
retf
add
sbb
pop
xchg
pop
push
adc
mov
outs
cli
aam
mov
inc
jl
push
xchg
jecxz
mov
fnstsw
mov
inc
ins
es
shl
push
cmp
loopne
mov
mov
mov
push
clc
dec
adc
add
mov
mov
mov
pop
cmps
es
jge
movs
mov
je
xchg
jmp
fiadd
adc
jne
add
xor
movs
jecxz
call
dec
fnstenv
movs
push
outs
ins
and
sbb
arpl
lahf
cli
or
adc
cmp
inc
sub
xor
call
je
pop
xchg
es
sub
paddusb
scas
mov
cmp
lock
dec
mov
lock
imul
stos
cwde
jle
xchg
gs
mov
dec
adc
cmp
idiv
pop
mov
dec
jns
aam
popa
inc
(bad)
mov
cmp
idiv
fwait
push
out
push
es
xchg
sbb
iret
mov
jnp
sar
inc
and
scas
jp
in
sub
inc
ja
arpl
or
pop
mov
dec
dec
stos
repz
inc
or
dec
sub
dec
sub
mov
jb
mov
stos
outs
sbb
outs
jns
mov
cmp
xlat
xchg
inc
sub
mov
ins
or
icebp
imul
aas
fcom
xchg
scas
aaa
mov
call
mov
jg
fist
jno
and
adc
push
and
mov
enter
adc
jl
aas
inc
and
cdq
push
dec
sahf
cmc
cli
ins
loopne
push
and
push
xor
dec
(bad)
std
pop
(bad)
jle
(bad)
mov
js
adc
sahf
sbb
or
js
xor
gs
movs
adc
arpl
adc
cwde
ror
cmc
dec
clc
mov
or
repz
cmp
leave
xchg
ss
xor
jecxz
(bad)
lock
in
inc
push
ret
iret
ss
sbb
adc
mov
fisttp
jae
mov
in
fs
fcomip
das
xchg
jmp
fsub
repz
cmp
jns
(bad)
addr16
dec
xchg
and
or
sbb
and
adc
je
pusha
ret
scas
inc
xchg
fadd
xchg
mov
pop
jecxz
or
ss
pop
jp
mov
ss
rcr
xchg
dec
push
sub
and
jo
push
fwait
ins
test
cli
cmp
xor
aaa
out
or
lods
test
test
test
mov
pop
jbe
sub
stos
loopne
les
inc
pushf
jnp
and
int3
js
outs
dec
das
test
cmc
loopne
jp
sbb
repnz
xor
scas
cmp
into
scas
dec
pusha
out
neg
mov
sub
mov
retf
mov
cmp
sar
pop
xchg
add
jo
in
push
mov
inc
nop
ins
and
sbb
or
fs
jnp
fs
lods
jmp
movs
into
pop
pop
adc
dec
aam
dec
dec
shl
popa
sbb
sbb
sub
sti
ds
popa
adc
jns
retf
and
jmp
add
movs
inc
xor
retf
cmps
lods
cmp
int3
les
enter
jmp
pop
cmp
sub
cmps
int3
sbb
push
ds
aam
xor
retf
daa
xchg
shl
pop
push
sbb
cmc
add
ret
std
mov
xchg
cmp
xchg
push
repz
or
mov
push
ja
aad
scas
sti
rol
mov
sbb
mov
test
dec
daa
ror
stc
in
add
(bad)
xor
loopne
ins
outs
aas
cdq
inc
adc
(bad)
sub
inc
sub
cmp
mov
mov
adc
mov
fdivr
repz
fwait
inc
jb
shl
test
iret
addr16
push
movs
xchg
test
retf
cmp
repz
push
mov
bound
pop
or
pop
test
icebp
(bad)
cmps
sub
mov
(bad)
shl
or
jns
pushf
retf
or
or
test
xor
pop
add
lahf
mov
cmps
push
cmp
xchg
icebp
add
int3
test
add
push
cmp
leave
fwait
stos
mov
daa
retf
cwde
aas
inc
in
stc
and
outs
xor
scas
sub
sub
lods
ret
xor
cmp
aas
imul
jo
scas
movs
out
enter
mov
mov
pop
xor
cwde
(bad)
mov
es
inc
cli
outs
les
or
xchg
fisubr
fld
std
or
push
cmps
adc
addr16
and
xor
pop
test
push
dec
fisubr
adc
pop
add
cmp
mov
jns
xchg
fimul
push
aad
or
mov
adc
and
xchg
in
push
int3
mov
mov
hlt
sbb
xchg
sub
dec
mov
stos
popf
mov
jb
gs
xchg
add
cdq
sbb
dec
xchg
push
mov
pop
mov
jmp
aam
jp
adc
sub
dec
push
adc
inc
sbb
mov
lds
call
(bad)
andnps
les
adc
jmp
fwait
popa
bound
shl
vpackuswb
mov
adc
leave
and
out
xchg
(bad)
rol
or
mov
mov
fistp
and
mov
call
inc
and
mov
xchg
xchg
jl
mov
mov
cmps
ror
adc
fnstcw
jbe
fwait
pop
push
adc
(bad)
scas
in
push
(bad)
xchg
aas
les
pmulhw
rcr
jnp
push
aas
and
mov
cmp
retf
or
or
xchg
cmp
jo
or
(bad)
cmp
(bad)
lods
mov
add
push
push
and
movs
push
add
cdq
mov
movs
das
movs
jmp
push
xor
retf
imul
adc
add
lahf
sbb
clc
(bad)
lods
mov
test
jb
jns
outs
out
sub
cld
leave
clc
and
or
dec
lahf
retf
pop
in
jl
mov
mov
call
sahf
xor
mov
inc
lods
fisttp
fiadd
jl
dec
inc
pop
adc
arpl
daa
in
dec
dec
enter
pop
and
arpl
(bad)
out
lahf
cs
inc
jnp
cs
mov
dec
or
lea
mov
std
scas
lods
aaa
jo
xchg
retf
popf
js
dec
sbb
pop
hlt
dec
movs
pop
inc
xor
or
sbb
and
(bad)
out
call
inc
test
mul
dec
and
out
jg
mov
add
lock
sub
xor
pusha
aam
xchg
and
retf
mov
rcr
mov
nop
xchg
push
jo
ins
inc
xchg
inc
ret
mov
fistp
sub
pop
fmul
retf
cmc
xor
push
xor
xlat
icebp
test
jl
stos
(bad)
stos
add
sub
std
sub
mov
xchg
cdq
dec
shl
jg
call
(bad)
call
loope
push
mov
and
jo
aad
fldcw
xor
test
outs
jns
xchg
call
push
inc
rcr
cmp
sbb
add
rcr
outs
sub
or
outs
mov
ret
push
pop
enter
add
pop
pop
and
scas
pushf
inc
sti
lods
data16
sub
cmp
and
cmp
popa
xchg
ds
push
jge
cdq
mov
or
sub
shl
lahf
dec
and
fs
pop
lods
push
dec
icebp
jo
repz
repnz
add
addr16
push
pop
ror
arpl
push
jbe
retf
out
inc
inc
rcr
sar
aam
push
mov
xchg
aaa
push
push
ss
xchg
jno
mov
sbb
jg
mov
jno
retf
dec
mov
pusha
imul
out
aam
push
cmp
cmp
rol
pop
pop
gs
push
jae
mov
adc
les
jmp
adc
ret
lea
fild
or
sub
adc
lods
jge
or
add
ss
jle
aam
(bad)
nop
sbb
mov
mov
call
ret
ins
cmp
mov
push
pop
xchg
and
int3
pop
fwait
fs
inc
js
or
jno
mov
repnz
fwait
rol
imul
pop
xor
lods
(bad)
imul
movs
and
and
icebp
push
jp
xchg
cmps
fild
sbb
test
jmp
stc
scas
dec
push
not
push
fdivr
(bad)
cwde
jnp
repz
mov
sahf
leave
or
dec
jmp
fucomi
sub
or
push
test
xchg
sbb
movs
ins
mov
xchg
pop
pop
cmp
and
cmp
in
or
dec
stos
lods
xchg
mov
inc
jmp
pop
jb
xchg
clzero
or
mov
fdivr
jno
pop
sub
adc
pushf
push
xchg
push
rol
stos
mov
add
pop
pop
(bad)
into
sbb
in
sbb
inc
aam
in
js
mov
xor
push
aas
pop
test
adc
ins
fild
and
test
push
ret
aam
fcmovbe
mov
jge
dec
inc
cs
xor
int3
sbb
addr16
add
push
jg
adc
out
jp
sub
outs
mov
push
es
xchg
pop
sbb
jle
(bad)
push
sub
imul
js
mov
jnp
mov
fdivr
cdq
stc
cdq
arpl
cmp
shl
test
scas
jmp
ret
dec
enter
add
add
sub
lods
outs
sahf
aaa
int
pop
mov
mov
leave
xlat
inc
or
retf
jne
and
mov
rcr
popf
push
fst
cwde
lea
pop
and
sub
cld
cmp
fidiv
ffreep
imul
retf
xchg
les
mov
out
test
push
push
inc
fidivr
icebp
mov
xor
push
and
pop
sub
jbe
push
stc
xchg
ss
dec
loop
inc
test
mov
loopne
adc
add
and
mov
push
pushf
sbb
mov
sub
inc
rcr
mov
gs
jmp
push
call
or
pop
or
retf
fs
dec
ret
int3
xor
cli
shr
iret
cmp
pop
dec
cld
mov
adc
popa
xor
mov
pop
enter
dec
fistp
pop
push
push
inc
mov
aam
xor
add
xlat
push
cmp
adc
lods
sbb
xchg
cmc
xchg
or
push
push
popa
call
lahf
sahf
add
lods
sar
dec
repnz
cld
fs
rcl
enter
sbb
loopne
loope
sbb
dec
mov
lahf
xchg
inc
cdq
cwde
js
test
je
test
pop
das
stos
fistp
sub
pop
cmp
dec
cwde
enter
pop
mov
and
sti
or
mov
mov
or
or
cmp
xchg
stos
jo
stc
jmp
push
sbb
sbb
push
cdq
ret
jnp
adc
mov
test
rcr
fcmovnu
test
ins
sub
mov
inc
repz
addr16
mov
push
jp
icebp
mov
lea
aad
sbb
pop
sbb
popa
xor
jp
(bad)
sti
jmp
addr16
mov
std
aad
or
pop
fcomp
popa
in
scas
and
fistp
mov
sub
mov
jae
pop
call
or
jmp
pop
cmp
fwait
pop
mov
popa
cmps
add
inc
mov
mov
jae
mov
sub
xor
mov
or
pushf
push
leave
mov
popf
sub
mov
mov
jmp
sbb
out
add
lods
jnp
fidivr
adc
dec
jg
and
movs
jae
add
add
in
pushf
lea
sub
aas
sbb
test
dec
jmp
aaa
scas
pop
add
dec
iret
add
jle
es
dec
xchg
xchg
cwde
dec
jne
sbb
adc
mov
arpl
and
add
or
cmp
mov
in
or
or
jmp
mov
test
push
xchg
inc
adc
lock
popa
xor
dec
sub
sbb
loope
adc
in
iret
push
pop
sub
cmps
push
je
push
jo
loopne
sbb
stos
mov
xchg
daa
scas
loopne
jge
or
or
leave
jmp
mov
fcomp
push
cmp
mov
cmps
jge
inc
xchg
outs
jae
sahf
mov
mov
dec
mov
jno
fisubr
mov
sbb
add
cmps
xchg
popf
inc
push
mov
test
jb
xchg
js
xchg
sbb
jo
adc
fst
sub
sub
push
stc
push
pop
cmp
jmp
add
mov
fst
xor
inc
movs
in
stos
jae
pop
(bad)
scas
xlat
dec
outs
mov
stc
sbb
sti
cdq
jmp
test
ss
outs
push
mov
xchg
mov
(bad)
loope
dec
das
popf
sahf
test
test
push
jo
popf
out
les
dec
daa
mov
inc
leave
cmc
push
aam
mov
sti
scas
les
push
js
call
bound
pop
mov
jae
ins
mov
mov
out
(bad)
iret
pusha
xchg
ds
ret
inc
nop
or
pop
mov
aas
xor
scas
scas
out
sub
(bad)
xor
jmp
leave
shl
push
addr16
das
mov
mov
xor
sub
jge
aaa
aad
fs
sbb
xchg
and
cli
mov
fwait
into
(bad)
mov
les
or
push
mov
cmp
nop
aad
std
or
ins
push
test
sbb
push
inc
mov
adc
(bad)
out
cmp
lods
and
xchg
mov
shl
movs
mov
loopne
or
or
xor
adc
push
pop
imul
sub
lea
jo
mov
test
cld
stos
sub
jmp
je
add
cmp
imul
inc
into
ret
test
out
shr
cli
push
pop
pop
leave
cdq
mov
nop
addr16
push
lods
or
cwde
xlat
pushf
or
xchg
mov
sbb
push
movs
xor
nop
pop
test
lds
sahf
and
jbe
jle
jge
pop
js
bound
cmp
mov
repz
sqrtps
and
mov
out
aam
or
push
pop
scas
popa
out
retf
mov
in
frstor
mov
xor
jmp
adc
pusha
add
jnp
ret
scas
test
dec
in
dec
add
call
jge
add
int
mov
js
cmp
mov
(bad)
pop
fist
mov
push
lock
int3
retf
pop
(bad)
(bad)
outs
mov
push
xor
mov
ja
icebp
inc
push
iret
test
mov
sub
ins
add
xchg
in
cdq
aas
jmp
push
jle
pop
push
lods
jg
pop
scas
test
mov
jp
add
mov
push
imul
push
sbb
fcomp
pop
add
lahf
sar
fst
jb
mov
(bad)
jecxz
sbb
hlt
xchg
add
gs
cmp
mov
mov
and
adc
jns
sub
pop
inc
mov
jb
retf
jecxz
pushf
and
or
mov
mov
shl
jp
adc
xor
dec
and
aaa
jmp
lods
xchg
adc
movs
xor
sahf
sbb
adc
mov
and
push
sub
cld
xchg
push
(bad)
(bad)
ins
lods
inc
cmp
sub
add
mov
jl
rcr
xlat
mov
xchg
(bad)
sti
and
popf
mov
push
mov
out
ds
add
sub
mov
aas
or
rcl
jnp
pop
aas
push
push
push
inc
enter
mov
push
adc
push
movs
fstp
ss
out
mov
sbb
retf
out
fimul
test
push
lea
push
retf
push
sbb
fcmovb
pop
inc
dec
movs
jb
cmp
in
dec
rcl
add
(bad)
in
sahf
enter
rcl
jmp
jne
repz
stos
lods
push
mov
pop
jne
std
retf
iret
pop
sahf
enter
mov
idiv
(bad)
mul
inc
cli
out
dec
jae
sbb
and
pop
mov
rcl
std
xor
repnz
fdivr
popa
(bad)
mov
pop
mov
js
fdiv
mov
xchg
imul
pop
dec
ins
inc
in
rol
in
mov
adc
sub
jge
sub
scas
movs
sbb
dec
pop
push
push
cld
outs
mov
xchg
adc
add
add
add
jge
jns
lods
stc
mov
ja
add
and
call
and
lods
mov
cmps
jo
repnz
sti
(bad)
mov
(bad)
jmp
xchg
out
dec
add
rcr
(bad)
and
in
mov
pop
ror
inc
cmp
jle
fisubr
outs
jg
xor
mov
scas
sub
push
jmp
inc
ret
cmp
pop
test
in
mov
addr16
or
shr
mov
mov
lea
push
iret
sbb
sbb
xchg
adc
bound
clc
jnp
push
icebp
sub
dec
js
dec
sub
mov
pop
(bad)
fild
mov
loope
sbb
or
dec
sub
fs
stos
jmp
xchg
sub
out
ret
test
and
stos
mov
test
(bad)
or
mov
xor
inc
sbb
or
sbb
out
xchg
bound
movs
into
push
sbb
cdq
cli
(bad)
stos
outs
push
pusha
cmp
outs
out
aad
jbe
xor
test
or
les
jecxz
inc
mov
and
aam
cmp
pop
sbb
int
mov
pushf
test
test
inc
mov
pop
mov
push
adc
repz
shr
and
xchg
push
xor
pmaxsw
ins
imul
nop
mov
push
daa
or
rcr
adc
call
int
sti
fisttp
pop
sti
loope
adc
call
ss
sub
xchg
loop
mov
sub
push
dec
and
mov
mov
test
add
(bad)
inc
push
movs
mov
das
push
bound
or
push
and
sbb
or
repz
iret
mov
sub
mov
sbb
jno
retf
mov
sbb
mov
mov
xor
pop
cwde
shr
adc
dec
call
ret
retf
push
sub
fst
out
xchg
mov
jbe
xor
lahf
adc
stos
add
adc
mov
jmp
sbb
or
xchg
mov
dec
add
sub
rcr
and
jnp
mov
repnz
xchg
loopne
ins
sahf
nop
xor
sub
jae
sbb
sub
inc
int3
stc
movs
(bad)
shl
sub
loopne
idiv
sub
ja
fadd
cld
xor
add
ins
mov
add
push
pop
aaa
out
xlat
lods
test
add
(bad)
sbb
loopne
shl
push
xchg
sti
mov
mov
test
jns
adc
test
push
in
dec
or
mov
adc
jg
xor
cmp
loope
repz
adc
neg
mov
inc
in
outs
mov
sti
fsub
push
adc
fidiv
push
repnz
mov
and
adc
mov
imul
mov
pop
(bad)
sbb
stos
mov
xchg
inc
add
jmp
fild
mov
dec
(bad)
scas
jmp
sub
sti
jnp
ret
pushf
add
hlt
and
ss
hlt
outs
sbb
sub
adc
xchg
or
dec
jmp
adc
or
mov
jne
out
leave
cmp
and
loopne
(bad)
ss
in
adc
(bad)
xlat
mov
push
mov
arpl
jp
pop
mov
clc
sbb
outs
clc
inc
add
xchg
movs
xchg
les
or
fimul
inc
mov
inc
sbb
push
nop
rol
imul
arpl
inc
lds
push
sbb
pop
pop
cmp
outs
icebp
aad
jo
adc
or
std
pushf
mov
add
push
out
dec
aam
xchg
mov
add
out
and
inc
mov
adc
in
lahf
(bad)
mov
and
jle
fs
out
mov
push
pop
add
inc
or
or
sbb
mov
push
jb
mov
and
inc
ss
xchg
cdq
sub
sahf
sbb
dec
inc
leave
std
mov
inc
lods
xor
fisttp
xor
cmp
pop
test
test
jo
inc
dec
or
push
add
fld
xchg
movs
mov
ret
dec
fs
mov
mov
add
pop
and
or
test
les
xlat
mov
cdq
mov
sub
and
int
pusha
add
jbe
sbb
fcom
and
xchg
mov
push
leave
sbb
fidiv
jecxz
outs
retf
mov
test
mov
mov
fs
mov
hlt
lock
add
push
mov
jecxz
sbb
mov
xor
retf
pop
add
sbb
test
les
inc
shl
or
les
add
mov
mov
dec
push
xchg
pop
sub
cwde
mov
jmp
cli
sub
(bad)
int
xchg
stc
bnd
jb
das
sbb
mov
inc
stc
adc
into
ja
or
push
in
pushf
pop
punpckhwd
adc
mov
cmp
retf
pop
xchg
pop
(bad)
fld
cmp
pushfw
cmp
mov
imul
mov
idiv
daa
addr16
push
stos
dec
xchg
push
jns
ficomp
sub
push
or
int3
lods
dec
push
push
retf
push
mov
mov
jecxz
xor
push
xor
lock
xchg
xchg
lock
lahf
mov
ret
or
ss
aas
dec
aaa
je
cmps
cmovbe
inc
pop
mov
cli
xchg
and
mov
pop
stos
movs
xlat
jo
fisubr
cmp
ss
leave
stos
push
sub
inc
xor
cli
out
enter
loop
(bad)
rol
sahf
mov
mov
addr16
in
jae
lahf
mov
add
ds
xlat
daa
out
outs
and
pop
je
xchg
in
mov
push
mov
int
and
mov
loopne
enter
inc
mov
cmp
not
fcomp
or
(bad)
pop
lahf
xor
xor
jge
popf
pop
mov
arpl
jmp
lods
pop
or
push
pop
stc
cmp
push
lock
jmp
and
sub
in
inc
daa
jle
scas
(bad)
ret
mov
out
inc
loop
lahf
pop
push
sub
addr16
hlt
in
out
inc
pop
pop
cmp
test
pop
mov
jno
inc
mov
mov
sbb
jo
dec
loop
cwde
push
rcr
or
add
mov
fxch
aas
pusha
mov
or
fstp
inc
and
pop
inc
or
dec
stos
stos
ins
sbb
inc
bound
mov
mov
pop
dec
lods
push
loope
push
int3
iret
dec
push
dec
data16
jmp
aas
dec
mov
cwde
(bad)
rol
arpl
mov
movs
cmp
dec
mov
cmp
pmulhuw
fneni(8087
pop
(bad)
pop
mov
outs
xor
jb
leave
mov
jne
or
sub
int
jmp
and
fwait
ret
scas
aas
out
mov
push
int3
inc
lods
leave
dec
cs
push
fdivr
mov
mov
stos
sbb
cmps
inc
jb
mov
and
bound
xlat
mov
(bad)
pop
mov
xchg
or
out
sub
icebp
mov
inc
ins
adc
fld
lods
add
push
or
stc
mov
loop
cmp
mov
ss
lea
les
mov
push
mov
clc
adc
xor
adc
push
add
and
add
popf
repnz
fisubr
pop
(bad)
daa
inc
push
fwait
mov
out
fisubr
je
or
push
out
loop
popa
in
or
sub
mov
imul
sub
retf
adc
dec
jnp
lea
sub
mov
shl
(bad)
(bad)
xchg
push
ja
mov
and
mov
or
add
mov
shl
(bad)
or
mov
sar
xor
fadd
xor
sbb
call
and
sahf
lods
fidiv
(bad)
jno
mov
repz
fidiv
xchg
dec
pop
jnp
xor
cwde
repz
js
movs
mov
dec
(bad)
mov
xor
dec
jmp
lods
mov
adc
jle
(bad)
je
sub
and
pminsw
inc
movs
inc
xchg
add
jo
fwait
xchg
movs
cmp
fcomp
push
ret
push
sar
fistp
repnz
mov
cdq
fs
pusha
sbb
add
xchg
cmp
fimul
adc
dec
and
and
lea
inc
arpl
pop
(bad)
adc
lock
jl
lock
out
das
sub
jg
xchg
pop
jmp
adc
dec
adc
ret
out
out
push
ja
xchg
out
mov
ins
(bad)
mov
xor
push
jg
stos
jmp
ins
jg
lock
jae
mov
leave
xor
lods
jle
mov
xor
mov
and
xchg
dec
aam
and
adc
out
mov
or
adc
cs
test
jmp
xor
in
icebp
dec
int
cdq
sub
pusha
mov
outs
in
sbb
or
ds
aam
sbb
push
adc
jmp
and
jmp
sub
dec
mov
push
push
out
xor
pusha
lods
rcl
sbb
cld
ja
push
jg
nop
xchg
inc
retf
fisubr
repz
aaa
(bad)
jmp
enter
sub
imul
pusha
mov
dec
sbb
fcmovnbe
adc
push
(bad)
xchg
mov
call
dec
jge
in
(bad)
dec
mov
pop
dec
outs
idiv
jno
inc
mov
(bad)
popa
push
jg
push
cmp
or
pop
movs
mov
cdq
and
ror
push
inc
adc
inc
inc
ror
(bad)
xor
push
inc
and
inc
sysexit
test
retf
adc
dec
mov
popf
out
jo
aaa
jb
and
test
mov
hlt
sub
sbb
ja
push
xchg
push
lea
dec
cs
enter
xchg
inc
add
ret
push
dec
cmp
addr16
call
out
out
jl
aad
pop
pop
es
adc
cmp
cmp
repz
in
leave
mov
cmp
gs
sti
pushf
dec
les
icebp
aad
jge
(bad)
jbe
sub
ins
sahf
and
push
xor
mov
add
lods
jbe
call
inc
retf
clc
jnp
out
inc
aaa
stos
add
jae
stos
xor
fcomp
jge
fs
jp
push
push
cmp
push
and
inc
jb
lods
jge
mov
sahf
mov
loope
push
ret
xchg
sbb
ins
xchg
dec
mov
inc
sbb
or
out
sbb
cmp
mov
mov
hlt
pop
pop
xchg
xchg
sbb
(bad)
out
mov
ja
je
aad
aas
call
or
rol
lea
test
dec
cmp
out
and
arpl
stos
(bad)
pushf
pop
xor
jle
mov
ss
and
out
repnz
push
cli
pop
mov
addr16
pop
or
inc
jmp
idiv
inc
xchg
xchg
outs
mov
cs
push
mov
(bad)
mov
inc
adc
inc
cmp
sub
adc
rcl
lahf
ja
jge
stos
pop
popf
div
dec
outs
sub
push
xor
(bad)
scas
jmp
xlat
imul
cmp
dec
mov
cdq
jne
scas
push
push
das
cmp
sub
out
cmp
movs
sbb
fs
mov
das
shl
loope
xchg
push
sbb
pushf
movs
rcr
pop
sbb
dec
mov
adc
punpckhwd
jbe
(bad)
fiadd
push
mul
sahf
mov
lods
pusha
leave
mov
mov
in
jnp
stos
jmp
les
imul
sbb
lahf
sub
cmp
xor
js
dec
mov
push
scas
mov
ss
xchg
xor
jno
and
xor
jle
out
xor
push
xchg
ret
pop
jbe
pop
cmc
in
sub
ret
pusha
xor
inc
or
mov
rcl
mov
in
jnp
sti
lods
push
cmp
pop
sub
sub
clc
sub
sbb
and
add
not
stos
jmp
push
jmp
xor
jae
icebp
jp
jb
inc
and
sbb
(bad)
mul
push
les
sub
push
sti
pop
pushf
push
cmps
dec
(bad)
mov
enter
pop
(bad)
pop
sub
lods
jl
popa
arpl
and
jmp
sub
vmaxss
pop
adc
cmps
adc
retf
test
rol
dec
mov
or
clc
ret
stc
call
cwde
sub
adc
sbb
cmp
jmp
push
sbb
rol
sub
push
ja
push
sar
pop
loopne
add
outs
hlt
test
ret
test
inc
sbb
nop
mov
popa
push
inc
push
aam
cmp
xor
add
fiadd
idiv
sub
add
das
sub
jmp
and
(bad)
push
sub
pop
jecxz
cwde
addr16
push
sub
and
or
pop
aas
shr
push
add
(bad)
shl
jmp
repz
in
jmp
ss
dec
mov
jle
add
stos
(bad)
xor
sbb
daa
push
test
ret
inc
cmps
push
cmp
pop
jae
dec
into
enter
push
(bad)
stos
ins
std
mov
inc
sbb
or
push
fdiv
jecxz
or
mov
sbb
cmp
sbb
call
xchg
scas
push
mov
jp
or
cli
push
mov
fwait
lods
add
cmc
mov
cmp
pop
sub
cwde
sub
inc
(bad)
and
jae
scas
cdq
fisub
loope
push
dec
std
push
repnz
inc
jle
je
fucomp
pop
inc
pop
mov
les
(bad)
xchg
arpl
xchg
adc
dec
sub
repz
ss
and
jbe
sub
call
out
push
cmps
in
pop
mov
pop
shl
mov
fwait
stos
jp
cmc
loop
adc
mov
lahf
js
jb
or
stos
mov
inc
dec
test
js
jae
fcmovnb
sbb
(bad)
mov
cmps
into
pop
pop
and
adc
and
gs
xor
daa
dec
test
loopne
cmp
xor
outs
or
jb
shr
cmp
jl
mov
ja
pop
adc
aas
jno
xor
jno
push
dec
sub
dec
sahf
movs
jg
adc
push
mov
fs
push
aad
jl
mov
(bad)
fbstp
mov
and
lods
scas
dec
enter
xbegin
outs
(bad)
jno
or
enter
pop
cld
je
fwait
outs
and
std
or
pop
inc
les
pop
fxam
lea
xor
adc
es
repz
add
inc
lock
cs
movs
cmps
jl
test
dec
mov
call
daa
ins
inc
xchg
add
xor
fisubr
push
sbb
sahf
neg
not
pop
inc
inc
pop
and
scas
adc
ins
push
push
neg
and
xor
xchg
sahf
in
pop
pop
add
push
lods
or
add
ror
fwait
cmc
inc
outs
es
dec
push
adc
addr16
and
out
js
cmp
mov
add
sbb
popa
mov
mov
outs
cli
jnp
imul
es
sti
add
outs
addr16
out
jp
inc
into
xor
std
push
scas
lods
mov
imul
push
adc
sbb
pop
clc
mov
jo
aam
push
mov
mov
inc
push
outs
adc
pushf
jo
ins
dec
es
cmp
or
sbb
fs
out
bndstx
dec
or
inc
ins
in
jae
or
fmul
and
pop
jne
movs
(bad)
stc
mov
and
inc
test
pop
in
in
and
das
jle
dec
mov
inc
(bad)
cmp
push
dec
ins
repz
mov
push
jg
adc
add
fucom
iret
xchg
movsx
xor
sub
adc
(bad)
idiv
mov
and
cmp
pop
inc
es
jl
add
or
outs
inc
mov
call
sub
int3
imul
iret
std
sbb
pop
pop
(bad)
and
ins
(bad)
ins
call
ss
leave
not
movs
aaa
jecxz
pop
pop
sbb
movs
(bad)
ins
daa
popf
lods
mov
xchg
(bad)
jo
push
cdq
sub
sbb
jns
call
cli
jge
mov
push
ins
jmp
mov
data16
dec
adc
out
sbb
cmp
mov
mov
cmps
ss
xor
add
cmp
xor
lods
into
jecxz
xor
xor
cwde
mov
mov
sbb
test
cwde
ins
(bad)
test
fidivr
rcr
div
jns
cmp
les
push
lods
fbstp
add
mov
xchg
inc
jmp
and
mov
out
cmc
loope
add
adc
push
and
add
lods
or
repnz
or
(bad)
mov
sub
adc
xor
dec
into
inc
sbb
jl
mov
(bad)
mov
cmps
loopne
es
dec
sub
aas
std
jg
xlat
push
pop
mov
add
adc
xlat
pop
lods
repnz
mov
sbb
mov
pop
jmp
bound
mov
inc
adc
jmp
repz
lidtd
lds
shl
cmp
add
sbb
cdq
mov
mov
ret
clc
jg
or
retf
out
jp
mov
leave
pop
sbb
shl
inc
cmp
(bad)
std
push
icebp
jns
xchg
xor
xchg
sbb
aam
cwde
cwde
jg
and
cmp
icebp
pop
adc
jbe
enter
ins
cmps
push
xor
add
icebp
xchg
xor
aad
mov
dec
adc
aaa
imul
xor
xlat
sub
or
ror
adc
adc
pusha
mov
std
(bad)
dec
dec
je
mov
xlat
shl
push
cmp
into
shl
mov
fisttp
mov
sbb
cmp
inc
into
cmp
dec
mov
out
test
fs
cli
imul
mul
or
add
mov
pop
push
sbb
pop
stc
js
jns
xor
mov
cmp
cwde
(bad)
xor
ja
jge
pop
inc
sbb
aad
jle
mov
imul
fcmovnu
(bad)
adc
and
lock
sbb
pop
adc
stos
sub
sub
adc
push
mov
sti
enter
lds
jmp
popf
inc
scas
mov
pop
loop
in
jge
(bad)
outs
or
(bad)
sub
cmp
pop
in
dec
sub
ins
repnz
jecxz
pop
retf
or
(bad)
cmps
out
clc
sbb
xchg
retf
xchg
pop
xor
and
cmp
nop
push
and
xor
and
mov
add
(bad)
xor
loopne
adc
out
hlt
enter
xchg
cmp
stc
sbb
retf
fisttp
(bad)
call
or
fld
dec
retf
xlat
test
dec
push
lock
lea
cli
dec
test
cmp
and
push
pop
(bad)
popa
sbb
(bad)
call
fisub
cs
and
add
mov
aaa
cmp
cli
(bad)
std
(bad)
stc
cmp
add
mov
pop
adc
add
xor
pop
popa
push
lock
arpl
xor
loopne
cmp
cld
xlat
ret
cmc
movs
sub
cmp
push
into
pop
adc
jne
fs
aad
push
into
and
arpl
push
retf
add
xor
hlt
je
xchg
cwde
out
xor
fmulp
jmp
mov
sub
sub
jmp
inc
adc
jge
dec
(bad)
fcomp
stos
cmps
sbb
mov
dec
loop
cwde
stc
mov
adc
shl
gs
ss
stos
mov
add
aam
jae
mov
jmp
ficom
mov
pop
movs
push
xlat
push
or
(bad)
cli
or
jo
xor
add
mov
(bad)
xchg
mov
mov
call
xor
push
jecxz
pusha
arpl
jnp
fcmovnu
push
jnp
sbb
aas
sub
pop
jne
(bad)
mov
jle
or
cmp
ret
leave
mov
mov
in
pop
pop
jb
retf
scas
mov
rol
mov
(bad)
push
daa
shl
in
shl
mov
je
movs
jg
push
loope
jo
inc
ds
lahf
daa
cmp
jmp
xchg
ins
test
jo
arpl
sbb
jnp
fst
cmp
shl
aas
inc
movs
int3
(bad)
pushf
or
xor
sbb
(bad)
xchg
and
pop
cmc
fistp
xchg
mov
mov
dec
adc
aam
inc
lods
jmp
js
cmp
data16
stos
pop
lea
aad
ret
cdq
int3
cli
wrmsr
push
dec
push
int
inc
sub
std
cmp
sbb
dec
iret
push
fadd
dec
xchg
jno
dec
or
(bad)
int
inc
jne
add
test
cdq
out
xchg
sub
out
fs
lods
dec
daa
ss
sbb
scas
fiadd
lahf
pop
xlat
cmp
into
aas
stos
jae
fcomp
movs
test
aam
cmp
(bad)
adc
bound
fisttp
loope
call
push
add
pop
fmul
retf
stos
fs
ja
jmp
icebp
inc
(bad)
jmp
push
test
sub
adc
sbb
mov
dec
xor
jae
jbe
or
fnsave
rcr
test
call
or
stc
xor
test
loopne
jbe
aaa
mov
or
cmp
gs
and
retf
shr
jmp
add
and
mov
cmc
jp
sub
dec
push
sahf
jb
stos
mov
imul
xchg
test
rol
pop
cmps
ret
sub
out
int3
lds
sti
ret
sahf
cwde
rcl
jle
not
cmc
pop
jg
cwde
test
jno
jge
xchg
mov
in
dec
mov
mov
adc
jmp
cs
cmp
idiv
mov
clc
inc
lahf
popf
(bad)
cli
xor
xor
mov
mov
test
xor
jg
push
arpl
xor
data16
cmp
mov
push
push
outs
mov
inc
sahf
pop
retf
mov
sub
shl
fldcw
shl
(bad)
movs
or
stc
mov
push
sub
fninit
outs
dec
add
repz
test
jmp
(bad)
mov
inc
out
ds
enter
adc
dec
jns
movs
ja
pop
mov
mov
dec
fcmovu
jg
(bad)
rcl
or
std
sub
addr16
das
sbb
dec
pop
and
push
test
add
mov
mov
push
xchg
out
sbb
aam
adc
shl
or
inc
test
scas
mov
mov
dec
mov
and
jns
ja
xchg
mov
outs
hlt
data16
push
pop
mov
fprem1
sti
xchg
ret
or
repz
in
dec
dec
xchg
cmp
push
daa
or
mov
mov
ja
adc
int3
jmp
cld
jl
mov
inc
mov
in
aam
mov
rcl
sbb
pop
(bad)
xlat
inc
outs
inc
(bad)
dec
in
fdivr
js
mov
nop
cmps
inc
mov
aad
inc
loopne
ror
adc
addr16
xor
les
inc
popf
fs
add
and
sti
pop
mov
or
inc
cli
test
jns
scas
push
mov
adc
cmp
test
and
and
sub
int3
adc
jle
fwait
aam
mov
call
les
sub
jp
and
sub
push
xchg
inc
sbb
sbb
lock
add
add
mov
inc
sub
sbb
or
adc
aaa
xor
pusha
data16
ja
hlt
nop
adc
xchg
add
movs
push
repz
xor
test
mov
push
dec
pop
repz
push
lahf
xor
ret
mov
sbb
cmc
fld
je
cmp
ins
retf
dec
bswap
ss
je
push
push
xchg
xor
push
push
aad
mov
loop
hlt
daa
retf
jmp
movs
int
int3
fs
dec
movs
mov
add
dec
int3
fwait
ror
xchg
les
fistp
dec
cdq
xlat
pusha
jo
outs
mov
pop
repz
pop
add
xor
xchg
sub
sbb
icebp
pop
lahf
sbb
aad
stos
sbb
xchg
fiadd
outs
dec
sahf
ins
adc
xchg
(bad)
sub
dec
mov
call
cdq
das
cdq
pushf
xchg
xchg
arpl
loope
mov
add
dec
or
push
push
mov
in
lods
movs
ficomp
jno
add
dec
adc
ret
xchg
(bad)
retf
in
push
fiadd
add
adc
pusha
mov
in
mov
enter
mov
or
addr16
es
mov
and
lds
test
cmps
shl
xor
ror
cld
mov
jge
(bad)
rol
mov
push
jns
mov
mov
ins
mov
sbb
pop
mov
retf
in
mov
ret
test
fisub
or
jg
mov
scas
mov
out
aam
cwde
xor
fild
outs
jle
repnz
push
iret
push
cwde
sbb
mov
add
add
xchg
sbb
mov
ds
imul
jo
cmc
cmp
cmp
loopne
mov
push
mov
(bad)
fstp
std
popf
jmp
sub
jmp
pop
add
mov
fdivr
icebp
jl
lea
(bad)
icebp
test
rcr
adc
dec
leave
jecxz
std
push
cmps
or
cmc
inc
fs
sbb
mov
sti
in
jmp
dec
mov
scas
cmp
sub
mov
cld
xor
fist
mov
cmp
push
cli
(bad)
aaa
daa
mov
push
sub
icebp
dec
xor
push
jp
shl
(bad)
push
shl
sub
sub
stos
mov
inc
inc
jp
cwde
out
shl
jb
loopne
(bad)
jle
imul
(bad)
sbb
cmp
xor
xchg
dec
movs
adc
cmp
xchg
(bad)
jbe
add
imul
imul
inc
std
loopne
enter
into
int3
sbb
cwde
movs
arpl
sbb
sub
ds
stos
mov
pop
pop
or
ret
cmps
cmp
sub
inc
sbb
popf
out
shl
cmp
(bad)
cld
sub
retf
jl
jb
inc
iret
cmp
sub
stos
call
enter
fidivr
pop
aas
pop
fdiv
popa
shl
mov
mov
not
sub
ins
mov
fs
outs
mov
cmp
dec
outs
test
push
(bad)
mov
fst
out
ins
repz
rol
inc
push
psrld
pop
sub
js
int
jle
(bad)
jl
je
scas
adc
rcr
shl
ins
or
in
xor
cmp
popa
jmp
mov
inc
dec
dec
lods
(bad)
cmp
arpl
bound
adc
sub
enter
adc
lds
pop
out
fdiv
inc
sbb
jbe
pop
lods
aaa
(bad)
mov
out
not
aad
outs
rol
imul
xor
cdq
jo
fistp
and
cmp
jb
mov
aas
inc
popf
retf
loop
mov
inc
cmp
cmps
push
retf
ja
nop
jno
sahf
aad
sti
mov
xchg
loopne
aad
cmp
sub
push
or
adc
cmps
jmp
sub
mov
inc
pushf
shl
pop
(bad)
cmp
bound
dec
jbe
aas
fild
adc
pop
test
mov
jmp
cmc
xor
adc
inc
das
mov
and
jbe
rcl
push
enter
pop
inc
or
arpl
pop
sbb
call
sti
add
jle
lods
pop
outs
aam
jo
repnz
push
dec
aaa
pop
or
out
mov
or
cmp
test
xor
and
dec
(bad)
call
ins
mov
daa
lock
inc
jg
popa
cmp
pop
push
or
hlt
jge
aad
repz
(bad)
push
push
and
adc
sbb
add
mov
outs
cmp
jnp
xor
adc
loop
pop
pushf
movs
ror
adc
idiv
scas
in
mov
xchg
retf
in
mov
xchg
jb
adc
rol
aad
and
mov
pop
cmps
xchg
or
ins
je
aaa
xchg
ret
lods
adc
stos
xor
and
ret
push
cwde
inc
(bad)
frndint
or
sahf
push
xchg
popa
fwait
(bad)
jno
mov
loop
mov
dec
test
test
add
cmp
call
push
fimul
in
shr
dec
and
ret
imul
inc
test
inc
fistp
adc
and
ds
iret
and
les
mov
sbb
and
jo
cmc
mov
and
and
lods
dec
sahf
or
rol
retf
xor
mov
inc
aas
and
stos
cmp
jno
adc
adc
mov
push
nop
(bad)
sbb
push
iret
pop
cmp
push
cmp
in
imul
repnz
and
cli
and
sbb
fdivr
mov
iret
call
fidivr
(bad)
in
push
rcl
jae
ror
xor
je
lods
sar
clc
ret
fidiv
cmp
clc
sbb
into
push
mov
scas
shl
lahf
mov
sahf
in
add
mov
xor
adc
pop
leave
pop
dec
add
fistp
mov
out
pop
add
mov
into
rcl
fdivr
ja
sub
jmp
cmp
inc
fwait
inc
lock
das
lahf
adc
movs
cmps
xchg
mov
dec
push
jp
adc
pop
or
arpl
mov
adc
jp
cmp
out
sub
retf
jp
pop
pusha
jae
add
je
data16
addr16
rcl
psadbw
cld
mov
mov
xchg
push
add
sub
mov
ret
ins
add
sbb
inc
dec
pushf
stos
push
ror
lock
and
pop
mov
add
fld
pop
ins
jb
les
fild
iret
fwait
icebp
(bad)
psubd
mov
popf
ret
mul
stos
mov
adc
push
jne
and
cmps
ret
xchg
xchg
jp
jp
fs
sub
les
cmc
pop
jge
xor
pop
sar
sbb
repnz
pusha
ss
shl
sub
pop
loop
loopne
cmp
xor
mov
adc
repnz
in
cmp
cwde
(bad)
lods
adc
jns
push
jmp
fsub
call
add
mov
sub
(bad)
stos
xchg
je
pop
shl
cwde
lods
jmp
pop
xchg
fstp
jnp
or
fdivr
adc
xor
dec
out
xor
mov
jbe
lods
mov
mov
inc
and
pop
pop
or
jae
mov
in
cmps
jmp
jmp
jge
fld
push
cmps
push
mov
or
inc
pop
sahf
xchg
pavgw
fisubr
pop
and
mov
out
xchg
mov
inc
out
cwde
sbb
imul
cmps
jge
cs
sbb
add
std
mov
add
repnz
enter
in
mov
xor
mov
dec
std
push
jnp
push
iret
or
ds
in
pop
in
nop
adc
adc
enter
or
xchg
and
mov
add
push
lods
pop
jno
cmp
xchg
jmp
cli
push
dec
sub
imul
push
sar
in
mov
cmp
test
int3
in
adc
add
jecxz
sbb
sub
fisub
mov
adc
data16
enter
pop
inc
cmp
mov
and
daa
fucomip
stc
hlt
or
lock
xchg
div
mov
scas
jmp
rcl
or
adc
cmps
call
mov
lea
push
rol
(bad)
loope
cwde
imul
aam
or
cmps
mov
push
lods
fisttp
cdq
jnp
sub
sub
push
cmps
js
aam
xchg
and
adc
jp
cwde
nop
mov
sbb
test
pushf
pushf
adc
loopne
fdiv
pop
gs
or
xchg
push
mov
jb
fiadd
cli
xchg
adc
sbb
stc
inc
sub
dec
cmc
and
sti
aam
cmps
sbb
push
or
(bad)
je
mov
ins
sbb
and
push
jmp
shl
ror
(bad)
jge
cmp
pop
add
sbb
inc
sub
es
leave
xchg
cmps
jno
inc
iret
mov
inc
xchg
push
push
xchg
fcmovb
mov
pushf
rcr
adc
retf
paddd
arpl
inc
jo
mov
cmps
out
and
pusha
mov
push
call
lods
pop
ds
push
mov
sbb
mov
xchg
lds
dec
in
mov
push
cmc
repnz
sub
xor
mul
sub
pop
sbb
lods
mov
ss
inc
sbb
clc
push
mov
mov
adc
enter
out
sbb
adc
pop
fisubr
jbe
and
mov
cld
cmps
and
movs
xor
(bad)
daa
ss
sbb
daa
inc
pop
cmp
data16
mov
and
repz
call
or
adc
or
pushf
stos
sbb
cmp
outs
dec
in
jnp
shr
das
fdivr
and
jmp
dec
dec
icebp
data16
sub
push
je
mov
push
xor
les
and
cwde
pushf
dec
mov
in
push
arpl
mov
scas
das
stos
in
rep
mov
sbb
in
add
dec
jmp
sbb
jmp
icebp
sbb
call
and
std
inc
xor
enter
add
dec
cmp
ins
cmc
mov
les
cmp
or
pop
out
fwait
pop
in
or
mov
ficomp
dec
(bad)
or
gs
push
pusha
enter
add
pop
call
call
imul
pop
xchg
cmps
sub
enter
movs
out
mov
add
dec
fs
lock
cli
jl
sti
mov
mov
test
sub
outs
add
push
sub
add
enter
or
mov
popf
dec
dec
sbb
or
ins
sub
mov
and
rcr
arpl
imul
lds
in
retf
sar
imul
rcr
lock
(bad)
jecxz
adc
jl
loope
cwde
repnz
cmps
in
mov
xor
enter
int
rcr
mov
ins
maskmovq
div
pop
call
jb
into
adc
cli
mov
mov
pop
mov
lahf
jecxz
lock
test
dec
addr16
leave
jbe
enter
xor
mov
dec
xchg
mov
or
dec
or
pop
jecxz
leave
inc
adc
outs
push
retf
in
mov
add
rol
test
sahf
xchg
cmc
pop
xor
in
jg
dec
dec
imul
repnz
and
push
push
cmp
mov
addr16
cwde
mov
mov
fwait
sbb
jno
push
xor
(bad)
cld
xor
and
retf
loopne
dec
ins
jle
int
mov
imul
test
loope
dec
jb
ins
cld
mov
je
jae
je
xchg
sbb
ret
sub
imul
call
imul
mov
ss
mov
dec
lods
leave
push
jge
retf
pop
mov
cmp
push
daa
or
shl
icebp
jbe
mov
(bad)
(bad)
jl
(bad)
mov
sub
xchg
fcmovbe
jns
add
mov
adc
rcr
in
mov
lods
sub
je
xor
leave
(bad)
out
out
xor
adc
add
fbstp
pusha
inc
pop
sbb
mov
in
cmps
loopne
mov
cmp
test
loop
and
popf
push
enter
mov
adc
jae
xchg
fwait
cld
push
outs
aaa
jle
sti
dec
cmp
push
pop
fwait
dec
lods
fistp
dec
arpl
push
repnz
ror
jno
shl
pop
ror
mov
pop
mov
(bad)
btr
mov
or
retf
jnp
fs
push
out
in
stos
in
(bad)
sbb
xor
imul
jmp
lock
out
xor
jle
(bad)
xchg
add
pushf
xor
or
cwde
jl
adc
sti
cdq
inc
stc
mov
sbb
push
sbb
addr16
leave
jmp
fwait
scas
lahf
not
xchg
push
shl
push
cmp
dec
loope
(bad)
push
xor
int3
jae
pushf
xchg
gs
icebp
inc
clc
sub
(bad)
fwait
sub
out
mov
cs
out
sbb
out
repz
push
pusha
and
xchg
mov
in
in
mov
lds
add
sub
mov
sub
xchg
repnz
mov
(bad)
imul
dec
xchg
cmp
cmp
inc
daa
mov
cmp
mov
jmp
leave
data16
mov
int
pushf
and
sbb
and
sbb
pop
xor
add
or
in
push
jae
push
ficom
dec
aas
setbe
mov
in
jecxz
fist
dec
or
xor
sti
adc
jae
ficomp
jae
pop
adc
aaa
add
mov
mov
imul
jae
or
mov
fdivr
in
imul
and
cmp
sub
dec
jle
cmp
sar
sub
and
lods
icebp
inc
aam
cmps
jmp
jg
add
aam
in
std
cmp
cmp
scas
sar
adc
pop
shr
mov
mov
dec
mov
shr
lock
(bad)
ficomp
aad
xchg
repnz
ds
not
xor
cmp
mov
ins
mov
jbe
cmp
movs
mov
push
jmp
imul
adc
int3
and
dec
aaa
in
add
(bad)
jmp
mov
cmp
dec
cdq
retf
fisttp
sbb
(bad)
cwde
or
adc
push
fimul
add
movs
mov
data16
jne
sub
inc
int
xor
xlat
xor
mov
scas
sbb
fild
clc
sbb
dec
clc
rcl
pop
mov
out
addr16
lods
pushf
ret
sbb
and
test
adc
jl
sub
in
gs
fdivr
inc
clc
cdq
loope
cmp
sub
stos
sub
pop
xchg
data16
sti
cdq
jne
hlt
push
aaa
adc
shl
(bad)
push
into
sbb
jmp
stc
or
cmp
pop
gs
pusha
arpl
jne
mov
sub
jo
mov
and
or
jnp
mov
pop
and
add
loopne
popf
movs
retf
aad
fadd
cmps
sti
adc
or
adc
(bad)
sub
add
adc
xchg
sub
(bad)
in
xchg
gs
push
lahf
or
popf
sbb
jge
sub
push
jecxz
lea
mov
adc
pop
retf
shr
pmulhw
dec
dec
test
xor
out
test
cdq
cmps
dec
pop
or
(bad)
pop
xchg
lahf
pop
dec
mov
stos
mov
setb
stos
cli
jnp
fcomp
movs
jmp
pop
pop
xor
push
xchg
xchg
dec
sbb
xchg
ret
or
add
lds
pop
sbb
pop
inc
rcl
mov
call
dec
lods
call
repz
xor
pop
loopne
ja
test
(bad)
dec
xchg
or
pop
cmps
xchg
sub
jge
iret
xchg
jle
inc
ins
inc
shr
cmp
or
jge
pop
pushf
retf
sub
ror
scas
fsub
movs
mov
fisub
mov
test
test
sbb
add
adc
pop
rcr
xchg
std
inc
xchg
xchg
call
aam
xor
hlt
hlt
push
xor
punpckhwd
mov
xor
movs
gs
adc
cld
fbld
push
stc
test
dec
fild
xchg
adc
lods
add
outs
arpl
aaa
jg
and
(bad)
cmp
sar
out
jmp
(bad)
in
cmps
sahf
xor
fdiv
or
addr16
and
scas
mov
int3
dec
sbb
scas
shr
loop
pop
addr16
stos
mov
push
scas
pusha
xchg
push
push
and
or
inc
icebp
mov
leave
mov
pop
cwde
int
les
jecxz
ret
lds
in
xchg
call
hlt
out
add
jmp
adc
in
out
sbb
and
or
inc
mov
and
ret
pop
jmp
xor
xor
cmp
stos
pop
out
jo
stos
ins
dec
call
cmc
jbe
(bad)
aad
aas
mul
jno
jae
mov
ins
hlt
pop
add
pusha
inc
sub
pop
nop
push
adc
sub
sub
mov
mov
sub
movs
retf
outs
mov
sti
fs
push
push
xchg
lods
jnp
jecxz
cmp
js
popf
es
add
mov
adc
push
aaa
fsubr
ins
or
pushfw
outs
push
adc
data16
add
sub
mov
push
inc
jno
xchg
(bad)
push
fld
push
daa
test
imul
sbb
add
ror
xchg
lock
jo
xchg
jecxz
sbb
addr16
inc
mov
add
add
mov
dec
xor
sar
lods
rol
mov
push
int3
fdivp
data16
mov
jecxz
mov
sub
pop
xor
add
push
sahf
inc
pushf
enter
or
lock
cmp
xchg
jmp
and
jns
mov
popa
push
popa
push
and
shr
push
push
mov
dec
jmp
xchg
cmp
je
xchg
sar
and
dec
push
in
adc
sbb
mov
sub
lds
xor
addr16
fisttp
or
xchg
daa
mov
imul
mov
push
mov
ss
loopne
mov
pop
inc
mov
mov
pop
pop
xchg
repz
push
pushf
cmp
mov
loopne
jo
xchg
(bad)
push
int
loop
jnp
xor
sysret
push
and
ds
xchg
add
mov
not
test
sub
pop
enter
test
sub
cmp
mov
mov
pusha
scas
dec
in
lds
js
xchg
xor
retf
pop
mov
cmp
outs
mov
jne
inc
fnstcw
add
pop
push
movs
xlat
pop
out
pop
gs
dec
sti
mov
push
ret
inc
clc
push
adc
adc
push
stos
ins
and
mov
inc
mov
outs
fldcw
fimul
push
mov
pop
imul
adc
mov
pop
retf
imul
(bad)
jge
cdq
xchg
ss
mov
mov
xor
ss
not
pop
test
adc
pop
ja
mov
aad
gs
xchg
jge
sub
pop
cmp
aad
int3
mov
scas
popa
std
xor
cwde
fmul
icebp
repnz
fnstsw
pop
ds
enter
sbb
and
or
mov
push
sbb
or
loopne
sbb
(bad)
out
js
cli
dec
fdivr
lahf
out
popf
and
push
pop
(bad)
mov
movs
retf
clc
cmps
and
les
xchg
aaa
or
fdivrp
stos
or
sub
sahf
dec
push
aad
add
mov
fmulp
pop
pop
or
xor
pop
mov
ins
cmp
imul
xor
dec
inc
pusha
xchg
mov
scas
call
fisttp
xor
fidivr
adc
push
push
nop
mov
sbb
repnz
hlt
and
(bad)
fld
nop
jo
mov
inc
and
in
jo
pop
dec
neg
jnp
cmp
cs
jne
in
not
aas
fs
clc
call
ret
fwait
popf
sbb
repz
add
fcomp
sar
sub
sub
add
dec
jno
jle
or
cmc
sti
cli
repz
push
popf
xchg
pop
mov
(bad)
adc
inc
into
add
popa
fnstsw
jbe
sahf
(bad)
adc
test
loope
jb
mov
pavgw
test
fbstp
jae
xor
cmp
call
out
shr
jne
daa
cdq
push
jb
das
ret
jl
jl
(bad)
int3
and
rcr
lock
push
(bad)
mov
loop
push
pop
inc
jmp
xchg
push
ds
mov
adc
test
pop
ds
into
call
repnz
dec
and
or
ins
jns
test
jne
or
dec
adc
int3
mov
jmp
jp
xor
or
inc
jl
sbb
dec
xchg
sbb
xchg
xor
ret
call
fsub
and
lds
xchg
ss
jne
and
mov
mov
add
pop
pop
cwd
(bad)
test
repnz
dec
mov
pop
lahf
xchg
pop
stos
ja
pop
adc
int3
pushf
dec
mov
xchg
into
repz
sbb
dec
ds
adc
ror
add
xor
jns
adc
popa
jo
stos
fbld
mov
(bad)
mul
add
in
and
mov
outs
popf
daa
mov
jp
sbb
pop
fldenv
dec
not
out
mov
test
ds
mov
rcl
popf
xchg
mov
ret
mov
mov
pop
lods
out
sub
or
pop
cmps
call
outs
dec
daa
ror
out
rcl
test
test
jg
inc
mov
out
rcr
leave
or
xor
xchg
fld
sbb
je
mov
sub
loope
rcr
xchg
sub
mov
sub
es
aaa
movs
repnz
mov
cmp
mov
lods
pop
js
pop
mov
lahf
std
xchg
vmovsd
fistp
mov
push
stos
xchg
cdq
xchg
cwde
test
mov
enter
lea
dec
cwde
ins
test
test
(bad)
mov
hlt
mov
cs
movs
es
jp
sub
cmps
movs
ss
call
dec
xor
test
jmp
out
(bad)
xor
sub
loopne
mov
xor
imul
dec
sub
ret
movs
sar
or
fs
in
(bad)
ret
pop
adc
fsubr
cmp
mov
adc
mov
push
lods
gs
adc
imul
retf
outs
cdq
and
fld
loopne
(bad)
pusha
stos
adc
push
data16
stc
sar
imul
fdivr
jno
fdiv
test
cwde
dec
push
(bad)
out
mov
mov
retf
dec
aam
dec
jne
imul
cmps
outs
jnp
rcl
ds
xchg
inc
adc
leave
add
xchg
pop
mov
es
inc
lock
stos
jecxz
add
shr
push
in
repnz
imul
(bad)
aad
dec
xchg
pop
or
xchg
sahf
inc
dec
adc
add
sub
fwait
inc
ret
rcl
mov
xchg
xchg
idiv
outs
test
outs
or
or
cmp
out
sti
add
push
bound
lea
mov
jo
(bad)
aaa
test
das
enter
je
sar
leave
cmc
cdq
stc
pop
xchg
fdiv
into
jno
fdiv
imul
inc
and
push
or
pushf
test
inc
(bad)
out
fwait
out
mov
cmc
sub
xlat
xchg
leave
outs
sti
int
adc
mov
xchg
jbe
fwait
cmp
call
out
int3
fdivr
sub
fwait
mov
bound
add
cmp
add
sub
jl
xlat
sub
xor
call
mov
int3
(bad)
daa
(bad)
sar
jp
popf
inc
jbe
out
aam
retf
jns
jle
pop
pusha
shr
add
aas
and
cs
inc
pushf
adc
ja
xor
jmp
mov
add
ror
retf
leave
mov
ja
mov
out
add
movs
mov
aad
fcomp
scas
and
test
or
cmp
dec
ins
(bad)
mov
add
es
div
add
push
(bad)
adc
imul
cmp
nop
stos
std
inc
and
out
sbb
and
shl
pop
xchg
sbb
rcr
test
pop
sub
(bad)
js
dec
push
jp
popf
add
xor
mov
popa
jns
push
mov
jb
adc
ret
and
or
push
cmps
enter
mov
das
sbb
in
cs
jo
push
jae
test
push
sub
and
and
inc
add
sahf
gs
xor
(bad)
push
mov
xlat
pop
retf
add
fistp
jmp
push
mov
int
sbb
inc
test
(bad)
and
push
xchg
push
in
(bad)
(bad)
cli
xchg
or
or
test
adc
shr
or
pop
push
gs
adc
cmp
or
dec
sub
sbb
pop
sub
(bad)
inc
xor
clc
call
add
imul
into
sub
imul
test
cs
and
dec
bound
or
dec
(bad)
in
sbb
stos
jns
pusha
cmp
add
in
push
rcl
repz
(bad)
out
inc
adc
push
in
outs
mov
jno
test
jmp
mov
and
test
test
push
ja
cvttps2pi
push
adc
scas
sbb
push
mov
int3
dec
add
push
movs
out
sub
aad
fiadd
int3
push
inc
fnstcw
int3
mov
aam
fistp
je
jp
jbe
cld
adc
(bad)
test
test
sbb
jle
aam
stos
dec
pop
cdq
retf
fmul
jmp
data16
jo
movs
jle
adc
lods
arpl
sub
enter
mov
jmp
lods
pushf
(bad)
ret
arpl
cdq
ror
push
cwde
call
les
xchg
(bad)
aaa
sbb
mov
rcr
add
(bad)
add
mov
adc
xchg
ins
out
pop
pop
lock
lods
call
dec
cmps
dec
or
scas
pop
dec
scas
add
scas
movsx
xchg
call
fcom
pop
js
fiadd
add
cmp
jae
fild
xchg
jge
jo
fist
mov
ss
push
cld
or
add
outs
pop
push
stos
icebp
in
test
lods
xchg
jo
aam
push
xor
and
clc
in
aam
repnz
xlat
xor
mov
int3
sub
pushf
out
push
adc
jbe
outs
add
ins
in
jne
(bad)
and
pop
cmps
and
xrelease
enter
ret
xor
mov
ins
and
add
fst
or
sub
inc
rcl
mov
je
(bad)
xchg
inc
aaa
push
fs
sti
add
fild
cmp
push
cdq
(bad)
mov
fcmovnbe
sahf
(bad)
push
popa
inc
pusha
mov
popf
xchg
mov
push
mov
mov
push
jg
sub
dec
fs
fistp
add
cmp
pop
inc
ja
into
lods
add
mov
fwait
call
movs
fs
xor
loopne
dec
repz
popf
ret
bound
pop
push
sub
ins
sub
xchg
mov
scas
psrlw
leave
mov
fcmovnb
jmp
mov
cs
cli
cmp
xor
cmp
xchg
ror
adc
mov
ret
loope
mov
xchg
or
cmp
arpl
int
xlat
pop
sub
and
(bad)
mov
mov
xchg
in
hlt
and
leave
add
push
push
jns
jmp
or
daa
mov
or
push
sti
dec
imul
fldcw
bnd
ja
imul
mov
sbb
movs
out
xchg
je
cld
out
sbb
dec
cmp
out
gs
and
loop
fimul
jge
pop
xchg
mov
cmp
sar
rcr
fs
jbe
lods
push
imul
or
sub
int3
and
jnp
jmp
rcl
and
dec
fidiv
pop
push
popa
pop
adc
imul
or
outs
and
fdiv
sbb
(bad)
xchg
cli
xchg
shl
fld
enter
fiadd
mov
lods
xchg
ret
fidivr
add
(bad)
mov
dec
(bad)
sub
scas
imul
das
pop
xchg
lahf
push
sahf
out
sbb
add
nop
mov
or
ins
cmc
call
rcl
enter
sbb
stos
stos
and
jne
xor
ficomp
or
ds
idiv
fistp
mov
js
push
aas
aas
out
push
ss
xlat
dec
popf
xchg
xor
sbb
js
mov
xlat
movs
popa
cwde
fadd
or
push
jmp
mov
loopne
sar
fcomp
cmp
and
jl
pusha
add
sub
add
cmp
in
cmp
cld
icebp
inc
loope
inc
mov
mov
pushf
in
lods
xor
inc
or
in
adc
push
push
aaa
push
push
mov
fwait
or
cmc
nop
push
xlat
pusha
lock
aam
pop
mov
pop
nop
xchg
cmc
stos
xor
mov
and
addr16
jge
xor
mov
push
mov
mov
jl
jge
or
or
loopne
cmc
push
pushf
xchg
xor
cli
sbb
pop
jno
push
adc
aaa
fist
adc
ins
out
dec
rcl
fwait
out
repz
lods
push
push
ret
sbb
jb
test
aam
sub
test
adc
mov
mov
in
push
cmps
ins
frstor
lods
cmp
dec
mov
cwde
inc
sub
(bad)
cld
adc
pop
int3
cmp
adc
mov
sbb
dec
lods
mov
es
test
mov
sti
inc
scas
test
jnp
sbb
cli
ret
fiadd
xchg
aaa
lods
pusha
mov
ds
sub
test
mov
sub
call
jp
sub
int
movd
test
div
mov
(bad)
data16
in
jns
pop
loop
mov
sbb
dec
and
enter
lds
fild
mov
xor
ds
or
out
adc
pop
dec
push
push
adc
loope
adc
xchg
add
out
inc
push
adc
div
pop
xchg
repz
lods
fld1
dec
hlt
ins
ucomiss
jae
or
out
(bad)
retf
xor
shl
push
mov
repz
push
push
cmp
(bad)
xor
inc
js
xchg
movs
mov
dec
pop
rol
adc
and
data16
pop
mov
or
or
test
sbb
rcr
add
sbb
sub
in
mul
ret
cmps
dec
mov
xlat
mov
jo
jbe
sub
mov
aas
faddp
les
mov
adc
xlat
push
shl
dec
scas
xchg
retf
outs
mov
push
aas
cwde
ja
dec
movs
lds
sahf
push
inc
(bad)
(bad)
retf
icebp
pop
lds
movs
out
stos
(bad)
pop
adc
and
inc
adc
je
fisttp
lods
sti
push
shl
in
sahf
cmps
cmp
cmp
cwde
rcr
xor
and
push
sbb
pop
push
out
add
ret
mov
pop
mov
or
aas
lahf
lds
sbb
push
shl
imul
jg
inc
xor
mov
cdq
retf
aas
(bad)
push
sbb
jmp
push
int3
ds
cld
jne
or
gs
xlat
sub
jg
imul
sbb
cmps
daa
test
xor
fbld
ins
xchg
and
sar
xlat
jecxz
rcl
xchg
shr
mov
push
mov
jecxz
jnp
mov
mov
sbb
int
outs
cmp
or
repz
inc
sbb
jp
mov
push
push
sbb
ja
sbb
imul
test
mov
shl
jae
inc
jg
and
fstp
pushf
data16
iret
jmp
jmp
ss
(bad)
stc
fist
out
inc
xchg
jne
and
movs
xrelease
xchg
icebp
lahf
aad
inc
jp
lock
pop
cmc
mov
call
xor
add
or
jbe
test
sub
jne
lods
push
fbstp
jne
not
lods
sub
mov
sti
iret
cmp
sbb
clc
movs
rol
xchg
popa
pop
in
inc
jnp
call
in
add
iret
jp
mov
jge
cdq
pop
and
fidivr
mov
mov
xchg
popf
and
arpl
mov
adc
sbb
push
popf
inc
ins
inc
stos
lds
push
call
inc
sti
push
push
xchg
and
or
adc
stc
movs
daa
sub
xor
cmp
mov
scas
movsx
and
add
add
mov
pop
jmp
mov
vmwrite
xchg
adc
fwait
arpl
xchg
push
and
push
mov
psubsw
or
(bad)
mov
dec
pop
js
pushf
push
inc
cld
and
cmp
push
mov
int
push
xchg
dec
dec
fstp
jbe
dec
mov
cwde
inc
mov
mov
and
sbb
ret
sbb
pcmpeqb
jno
sar
leave
(bad)
repnz
xchg
push
fild
push
pop
movs
mov
fucomip
lods
shl
xor
jmp
nop
and
pop
bound
mov
jp
inc
aad
popa
xchg
shl
fidivr
daa
aad
adc
lds
rcl
not
jae
push
push
dec
inc
jmp
xchg
cmp
push
ja
jmp
dec
jb
xcrypt-ofb
cmps
sub
push
sub
sbb
jae
daa
adc
push
and
inc
dec
xchg
xor
mov
lea
sbb
mov
xlat
jecxz
jns
jmp
xor
(bad)
xor
xchg
xchg
mov
pusha
push
daa
cmp
adc
out
or
les
in
cmp
pop
or
fst
adc
ss
jmp
mov
shl
mov
shl
dec
mov
popa
mov
jmp
sub
test
stos
ret
xchg
out
or
jnp
xchg
mov
push
add
or
popf
adc
pop
loopne
add
jmp
jns
mov
xchg
mov
idiv
sub
cs
aas
mov
hlt
and
arpl
stos
loopne
sub
push
xchg
jb
cmp
xor
imul
dec
pop
jmp
imul
sahf
pop
push
fild
pop
movs
push
rcr
stc
dec
nop
mov
jns
hlt
mov
lea
xchg
sub
sahf
push
jnp
iret
mov
fldl2e
mov
sbb
test
test
clc
test
sar
add
ss
std
push
retf
dec
xlat
mov
push
xor
and
jmp
adc
je
es
icebp
mov
push
inc
mov
sub
pop
loop
mov
inc
xor
or
aas
into
dec
jge
in
lea
pop
mov
push
mov
mov
int3
cmps
mov
mov
push
dec
or
pop
test
sbb
scas
jp
lods
ins
adc
sar
push
xor
mov
and
jp
in
and
psrlw
push
fmul
enter
les
adc
jo
inc
pushf
int3
pop
xlat
push
inc
xchg
xchg
sub
test
out
push
hlt
inc
je
mov
jnp
push
imul
lods
or
mov
dec
call
imul
scas
inc
dec
idiv
mov
dec
popa
dec
mov
cdq
jecxz
push
mov
jmp
adc
fcom
and
mov
or
sub
mov
mov
fisubr
shl
mov
lds
xor
lock
sub
frstor
sbb
fst
adc
movs
push
jnp
(bad)
jmp
scas
pop
retf
xor
ret
ds
and
push
cdq
mov
repz
dec
inc
or
lods
test
bound
call
fadd
jecxz
mov
data16
dec
push
popf
in
add
lock
int
or
fcomp
popf
stos
loopne
adc
push
push
lahf
jge
adc
mov
cld
outs
sbb
push
cmps
ficom
nop
(bad)
loopne
popa
stos
cmp
adc
test
inc
fnstcw
xor
shr
iret
stos
push
xchg
xchg
sahf
dec
cmp
mov
retf
loop
dec
ds
in
cmp
(bad)
jp
popf
sub
sbb
mov
leave
stos
sub
lea
inc
mov
ins
xor
or
repz
pop
mov
or
or
push
mov
hlt
cwde
leave
push
aam
aad
or
inc
or
push
call
fwait
push
jle
je
out
mov
push
or
mov
jg
pop
nop
sub
cmp
add
adc
into
sub
mov
pop
and
mov
js
in
push
adc
aam
inc
hlt
jle
rcr
mov
sar
stos
sbb
aad
push
ins
push
mov
call
mov
mov
fsubr
outs
pushf
not
cs
or
add
movs
push
mov
aad
je
push
scas
imul
add
xor
mov
cld
add
sbb
fnstsw
xor
sbb
les
dec
popa
adc
lea
cli
ss
sbb
not
mov
inc
xchg
out
ja
ror
add
(bad)
cld
mov
nop
xchg
add
push
in
inc
sub
(bad)
sbb
shl
inc
gs
arpl
or
nop
pop
push
std
popf
mov
dec
out
cmp
mov
mov
sbb
call
xchg
sub
enter
pop
mov
sbb
adc
cmp
pop
add
inc
mov
cmp
jmp
dec
and
out
push
mov
cmp
jmp
sub
div
mov
xor
aas
pusha
mov
cdq
adc
repnz
out
sbb
lods
adc
test
nop
and
mov
pusha
mov
adc
push
icebp
(bad)
popf
ret
sbb
test
imul
or
pop
or
add
mov
xchg
sub
(bad)
pop
pop
push
pushf
inc
jecxz
cdq
jne
mov
loopne
pop
jo
push
ja
fcmovne
inc
mov
mov
pop
sbb
sub
lods
mov
into
xor
add
cmp
cli
lock
stos
mov
fwait
pop
pop
xor
(bad)
pop
mov
push
mov
repz
inc
inc
push
jg
ret
add
mul
pop
pop
and
mov
cmps
lods
push
lahf
cmp
xchg
cs
retf
and
sbb
mov
mov
mov
(bad)
fs
cmp
push
adc
sbb
pop
pop
add
lds
test
push
xor
fstp
cmp
cwde
mov
push
icebp
mov
xor
push
iret
add
mov
xchg
inc
mov
xchg
sub
add
neg
ds
int3
pop
fimul
cmp
(bad)
xchg
dec
xor
jmp
dec
sub
adc
sub
popf
cmps
pop
mov
fcomp
push
mov
jae
xchg
add
or
jmp
fsubr
add
mov
cmp
addr16
popa
pop
call
inc
push
sub
rol
cmp
jns
fisttp
jno
pop
dec
mov
addr16
call
div
in
xor
repnz
es
rol
retf
inc
xchg
sbb
rcl
ins
ja
adc
aas
dec
xor
stc
test
in
leave
xor
pop
movs
pop
mov
ja
and
mov
push
add
cmp
daa
xlat
inc
mov
out
ins
sbb
jmp
push
cmp
push
test
(bad)
aas
test
mov
pushf
sahf
cmp
movs
leave
adc
push
lahf
popa
lock
loopne
cmp
in
test
enter
jl
aam
and
je
ret
add
mov
mov
inc
xchg
lock
xor
std
mov
sub
jmp
enter
xchg
lock
pop
jg
pop
retf
push
pop
or
je
xlat
ja
retf
pushf
add
dec
ret
xchg
ins
mov
jg
pop
addr16
shl
mov
mov
(bad)
push
sar
or
mov
mov
stos
push
dec
movs
dec
xchg
cmp
adc
in
cmp
pop
inc
das
fidiv
int
push
xchg
dec
sbb
das
inc
clc
adc
jnp
mov
fisttp
xchg
mov
add
xor
imul
imul
cld
les
dec
aas
and
sub
rol
jbe
loop
sub
jl
pop
mov
mov
ficom
adc
movs
adc
xchg
jo
cmp
add
mov
push
fstp
sub
mov
and
xchg
inc
ins
and
push
sub
pop
mov
mov
push
out
dec
lock
xor
pop
pop
loop
mov
inc
mov
aas
pop
outs
cmp
shr
cmp
loope
cmps
test
push
dec
test
sahf
dec
dec
into
ret
mov
mov
sub
nop
mov
repnz
mov
ret
mov
int
clc
adc
paddd
out
shl
push
dec
nop
shr
xchg
xor
xor
out
jb
inc
sbb
sub
sub
mov
jg
cmps
push
xchg
xchg
inc
call
shr
cmp
mov
or
dec
pushf
xchg
add
pop
icebp
retf
lods
sti
aam
fidivr
lea
cmp
cmps
inc
das
push
xor
fcmovne
xor
jno
dec
fmul
pop
pushf
call
ja
faddp
xchg
mov
pushf
mov
ja
and
jp
mov
in
movs
cmp
add
out
test
int
push
cwde
sbb
adc
les
or
sbb
outs
fld
icebp
in
xor
adc
jns
mov
not
mov
inc
js
mov
iret
cmc
loope
loope
popa
add
or
push
lods
(bad)
dec
mov
repnz
push
sub
add
imul
jp
pop
jbe
cmc
ret
sbb
jnp
mov
sbb
ins
pusha
movs
cmps
arpl
mov
lods
and
xchg
adc
mov
sbb
add
mov
div
daa
(bad)
pop
out
cwde
inc
sbb
jmp
fs
(bad)
(bad)
mov
sahf
scas
cli
cs
shl
push
int3
add
fist
jae
xor
ds
or
or
add
jle
mov
nop
jae
in
inc
add
mov
test
sbb
test
add
hlt
or
test
mov
sahf
mov
mov
int3
imul
push
sbb
mov
xor
cmc
adc
push
inc
loopne
mov
push
cmp
imul
fimul
lods
pop
mov
pop
adc
jmp
jo
sbb
pop
jmp
cdq
das
std
lock
dec
cld
cmp
or
inc
(bad)
imul
ror
push
ds
repz
dec
pop
out
sbb
mov
iret
mov
stos
shl
inc
imul
dec
push
pusha
pop
xor
mov
adc
(bad)
mov
pusha
into
inc
jnp
cmps
inc
cmps
fs
fistp
inc
sbb
fcmove
fnstenv
rcl
sbb
lods
jecxz
inc
aad
and
dec
leave
adc
mov
xchg
xor
inc
xor
in
mov
dec
mov
sbb
cmp
and
mov
aas
and
ror
and
mov
stos
out
xchg
aaa
mov
das
mov
jne
mov
test
hlt
stos
(bad)
mov
nop
mov
pop
xor
stc
(bad)
das
aad
jns
test
(bad)
loopne
icebp
xor
mov
push
nop
les
mov
hlt
and
or
cmps
call
and
mov
mov
cwde
pop
sbb
les
lea
leave
clc
xchg
inc
int3
aas
fdivr
jns
sti
jb
mov
repnz
pop
loope
and
aaa
(bad)
xor
(bad)
fisub
jbe
jecxz
shl
aam
(bad)
cs
push
shl
outs
jnp
mov
les
inc
jno
and
inc
mov
jae
sbb
mov
sub
idiv
push
retf
pop
adc
push
push
test
lods
pop
(bad)
sbb
gs
and
adc
adc
cmc
xchg
cmp
lahf
shl
loopne
dec
mov
cmp
cmp
xor
add
xchg
cmc
mov
aaa
outs
inc
outs
jp
xor
jmp
not
mov
mov
sbb
cmp
mov
jl
cmps
pop
call
jmp
push
push
jb
sub
lahf
fcom
std
or
sahf
adc
xchg
pop
jg
movs
mov
retf
add
cli
fimul
mov
xchg
cli
mov
mov
sbb
int3
rcr
push
jns
mov
ja
sub
test
jge
add
ficomp
add
and
mov
mov
cmps
adc
arpl
cwde
inc
dec
mov
or
das
imul
or
push
inc
pandn
push
xor
cmp
pop
adc
push
xchg
rcl
mov
mov
sub
hlt
ret
fbstp
je
rol
mov
sysret
and
xchg
mov
out
cmp
scas
ror
jge
addr16
xchg
sti
fstp
jbe
inc
inc
ja
pop
js
test
inc
shr
xor
(bad)
push
lods
cld
push
les
lea
sub
scas
aam
pop
jb
xor
inc
sbb
addr16
fmul
clc
dec
mov
fiadd
fwait
and
inc
arpl
xor
popf
dec
(bad)
iret
cmp
retf
(bad)
sbb
push
jbe
or
sbb
bound
enter
mov
cmps
cmps
dec
jle
mov
cmps
repz
push
mov
cmps
ds
xchg
mov
jo
or
pop
ins
gs
aaa
retf
clc
ins
popf
adc
jle
outs
jo
fistp
mov
(bad)
js
inc
sub
leave
pop
xchg
xor
clc
stos
imul
ss
cld
pop
add
sub
mov
mov
dec
movs
push
sahf
mov
mov
pop
mov
dec
es
add
shr
mov
jo
or
div
dec
add
mov
pop
or
cwde
loopne
jmp
sub
and
jge
call
in
pop
das
mov
mov
ins
bound
or
adc
xor
stos
imul
add
push
cmc
test
push
aad
mov
test
dec
test
out
mov
ss
push
sbb
out
push
jmp
adc
cwde
cmp
inc
repz
ss
lahf
int
mov
out
adc
inc
out
pop
inc
push
movlps
and
test
cmp
outs
vpcmpeqd
xchg
push
mov
(bad)
rol
aaa
cmp
cld
add
scas
push
rcl
pop
stos
js
cmp
ja
test
inc
daa
jmp
inc
ss
in
pop
inc
ins
cmc
cmovg
aam
jne
inc
mov
out
ins
xchg
in
daa
sub
sub
ins
xor
(bad)
sub
inc
scas
pusha
daa
jecxz
cld
jb
repnz
add
dec
(bad)
xchg
into
scas
inc
imul
mov
arpl
mov
pop
lods
xlat
in
mov
pop
pop
out
mov
xchg
repnz
mov
imul
mov
adc
push
stos
popf
and
sub
mov
fcmovnbe
dec
icebp
inc
cmc
imul
jl
mov
outs
push
test
int
jo
mov
add
push
cwde
adc
xchg
cmp
outs
mov
mov
loop
loopne
ret
xor
dec
ret
xor
push
sub
fild
mov
xor
fisub
pop
mov
stos
test
imul
dec
lock
xchg
mov
cmp
push
sbb
sbb
mov
jne
ins
adc
fdivr
sti
cs
push
jbe
adc
xchg
mov
mov
rcl
fnsave
cmp
fist
mov
dec
(bad)
mov
xchg
inc
push
dec
fimul
fidivr
movs
(bad)
sahf
jmp
cmp
nop
(bad)
in
out
mov
jle
or
xor
mov
aas
or
div
mov
test
xchg
rcl
enter
scas
cmps
sub
aaa
out
mov
adc
push
dec
mov
aas
jp
vcmppd
mov
jmp
ins
xor
push
js
push
push
dec
adc
scas
jecxz
cli
fcomip
adc
jp
out
xor
lock
mov
fld
(bad)
test
jmp
mov
fimul
(bad)
push
push
jl
lea
sbb
aam
push
xrelease
adc
(bad)
rcl
cld
xchg
js
pop
or
cmps
test
hlt
leave
icebp
mov
dec
mov
or
out
jmp
xor
push
sbb
in
jne
sub
jmp
icebp
aas
enter
inc
adc
xor
into
aaa
mov
(bad)
outs
pop
add
adc
adc
and
es
and
aam
cli
stc
(bad)
fiadd
(bad)
or
push
imul
cmc
dec
or
cld
sub
loop
jo
shr
mov
mov
sbb
data16
xor
sahf
add
mov
es
aad
inc
add
clc
xor
fnstcw
dec
gs
mov
mov
and
add
mov
clc
add
test
xlat
out
add
ja
out
push
mov
fs
or
stos
fisubr
pop
sbb
(bad)
cdq
retf
xor
lea
and
mov
aad
sub
adc
xchg
xor
iret
xchg
loope
ins
shl
pop
push
mov
jg
xchg
aam
push
mov
test
(bad)
jl
inc
rol
(bad)
mov
sbb
dec
lods
movs
push
imul
or
pop
loope
inc
ds
pusha
adc
pop
push
dec
leave
stos
ds
retf
inc
pop
dec
out
dec
mov
sbb
jo
jge
inc
fcom
mov
mov
outs
sub
outs
sub
lods
xor
cli
inc
aas
dec
lahf
ret
cli
jb
mov
into
sahf
lahf
pusha
mov
dec
push
cmps
mov
pop
sbb
dec
fldenv
mov
or
mov
push
inc
outs
cmp
push
aas
fmul
push
loop
cmp
jl
dec
inc
or
clc
adc
cmp
sub
mov
stos
repz
mov
sbb
mov
cmps
and
ja
and
mov
mov
jmp
dec
pop
cmp
ficomp
adc
pop
adc
jle
add
scas
rcl
cmp
(bad)
jmp
retf
mov
jecxz
push
and
in
mov
clc
mov
push
cmp
in
mov
push
cmps
es
mov
rcl
mov
jmp
xchg
and
adc
push
add
mov
and
es
rcl
je
xchg
mov
and
cmp
adc
pop
in
fadd
mov
and
call
icebp
pop
and
mov
movs
dec
cmp
dec
adc
jle
call
cmp
cs
daa
lods
inc
cmp
adc
push
bound
fadd
xchg
jmp
imul
sbb
jnp
shl
xlat
retf
loop
pop
mov
in
clc
hlt
cli
cmps
fdivr
fidivr
or
cld
sahf
or
jg
repnz
mul
repz
push
(bad)
mov
shr
sbb
mov
adc
jbe
aas
mov
push
cmps
push
hlt
popf
out
sbb
pop
mov
hlt
pop
call
in
or
adc
sahf
jae
(bad)
adc
inc
out
pusha
mov
mov
sub
fs
mov
push
mov
mul
inc
mov
das
jge
test
dec
jle
icebp
cmp
int3
mov
adc
aad
out
dec
test
mov
sti
movs
sbb
dec
ins
mov
jg
fistp
cs
and
xchg
mov
jle
adc
aaa
retf
pushf
mov
pop
hlt
push
lods
retf
out
aad
loop
jae
pop
sbb
pop
in
mov
call
jae
out
jecxz
mov
sub
inc
cld
dec
dec
pop
mov
js
adc
inc
inc
in
cmps
and
jns
nop
in
dec
imul
ss
shr
paddd
stc
push
test
adc
cwde
dec
jecxz
out
jle
mov
addr16
call
jge
retf
or
xchg
add
fcmovb
push
jb
pop
jmp
adc
adc
cs
mov
test
lods
jmp
rcl
imul
icebp
jnp
sbb
mov
sbb
add
push
jb
sub
mov
ret
mov
lods
mov
dec
mov
pop
stos
xchg
icebp
and
xchg
ret
rcl
dec
jns
loopne
or
rcl
jp
cmp
or
in
cmps
push
dec
lods
sub
int3
cs
inc
fucomp
jo
leave
jge
jecxz
jnp
inc
or
pop
pop
jbe
jb
and
pop
sbb
nop
test
test
pushf
cwde
add
xor
les
fld
idiv
push
xchg
loope
ret
cmps
les
pop
and
iret
or
add
(bad)
fistp
ret
jmp
and
dec
dec
ss
xchg
dec
sbb
xor
(bad)
out
xor
jo
jae
push
addr16
dec
stos
scas
scas
fist
and
aaa
cdq
gs
out
push
mov
or
stc
add
and
cs
outs
pusha
cdq
cli
test
es
dec
pop
scas
cmp
dec
or
fisttp
adc
jle
pop
in
out
pop
and
dec
sub
in
aam
clc
lods
das
adc
fidivr
enter
loop
iret
mov
push
aad
mov
std
cmps
xchg
repnz
in
sbb
ret
fsub
or
sbb
fldcw
push
scas
scas
dec
je
add
ret
cmp
push
movs
cld
aaa
(bad)
icebp
cli
jno
mov
rcl
or
mov
jmp
das
push
cmp
jno
jecxz
je
sbb
out
xor
or
inc
jmp
test
mov
sub
pop
jnp
jmp
outs
push
fild
mov
loop
(bad)
dec
or
shl
fisub
icebp
fild
call
fstp
std
ss
lds
push
cld
adc
xor
mov
xchg
aad
je
xor
cli
(bad)
mov
jl
adc
or
lods
xor
jae
sub
jo
xchg
das
sub
shl
sbb
adc
arpl
pop
test
pop
gs
addr16
mov
call
mov
xchg
xchg
loope
sub
and
jge
jge
xchg
loope
sar
or
jge
sbb
mov
sbb
mov
adc
stos
pop
mov
sahf
scas
pop
(bad)
mov
or
movs
aas
xchg
int3
xor
cmps
leave
or
lock
push
inc
mov
jmp
out
imul
jmp
aaa
push
cmp
adc
xor
je
rol
movs
cmp
xor
mov
inc
loop
fldenv
ret
add
push
stc
pusha
cmp
mov
lock
fidivr
or
bnd
mov
sar
push
and
mov
rcl
je
xchg
sbb
fild
push
cmps
int
in
sub
call
add
push
jl
mov
inc
mov
in
push
dec
jmp
push
xor
adc
popf
enter
outs
xor
push
sbb
jecxz
xor
lea
mov
shr
scas
into
dec
enter
push
inc
pmullw
int
jnp
repz
neg
jne
mov
cdq
add
mov
jns
retf
dec
stc
(bad)
fidiv
xchg
out
mov
stos
xor
repnz
or
jb
pop
dec
and
(bad)
out
mov
ja
xor
fsubp
call
neg
jmp
xchg
jmp
dec
dec
xchg
push
sbb
jo
mov
inc
gs
or
xor
xor
and
mov
mov
retf
jbe
and
test
jg
in
inc
xchg
sub
push
mov
cmp
sar
or
mov
arpl
push
out
(bad)
dec
sahf
outs
mov
aad
add
pop
adc
inc
mov
dec
adc
push
jg
jge
add
leave
jne
lea
inc
push
test
div
and
ret
jmp
pop
out
jmp
dec
mov
loope
mov
mov
mov
leave
movs
iret
jl
addr16
repnz
inc
aam
and
in
(bad)
mov
ficomp
cwde
ja
not
pop
add
jg
(bad)
mov
dec
xchg
sbb
xor
pusha
adc
inc
sub
lods
mov
or
sub
(bad)
lock
jecxz
mov
cmc
mov
cmps
test
outs
pop
neg
jo
mov
cmp
pop
ja
scas
add
pop
hlt
out
(bad)
inc
ins
into
adc
and
loop
pop
(bad)
fsub
or
xor
mov
add
mov
push
mov
push
pop
xchg
int3
add
not
mov
inc
retf
jp
pop
inc
mov
inc
aas
or
outs
ret
sar
sub
pushf
dec
xor
pop
(bad)
bound
push
nop
ret
mov
jmp
test
ret
fisttp
das
sbb
mov
les
xchg
add
pop
test
pushf
repnz
lock
fstp
ret
dec
mov
ss
push
scas
aam
loopne
movs
xchg
in
push
outs
aam
xor
mov
cmps
jp
pushf
jg
call
sub
aad
outs
pop
dec
adc
rcl
sbb
adc
xlat
retf
xor
add
push
in
cld
mov
push
and
sti
xchg
aad
out
sub
push
data16
and
adc
jmp
(bad)
xor
fdiv
jns
int3
repnz
cmps
repnz
mov
iret
jg
std
mov
addr16
xchg
arpl
push
cmp
inc
pushf
pop
rcr
fcomp
sahf
push
sbb
retf
dec
fidivr
ins
and
ss
popa
scas
not
dec
stos
outs
and
jnp
in
ficom
jle
out
lock
int3
cmps
jl
add
nop
jg
fdiv
movs
(bad)
xor
scas
add
sub
inc
jnp
aam
ffree
mov
adc
or
push
xchg
or
inc
sahf
mul
jecxz
push
and
adc
adc
pop
xchg
test
retf
std
jae
jle
or
nop
jl
in
retf
repnz
cmp
leave
dec
and
pop
sub
std
sbb
fcomp
sub
call
inc
(bad)
cmp
sub
add
je
adc
push
cmp
in
sbb
pop
jns
xchg
in
shr
adc
call
adc
inc
or
std
mov
call
stc
or
add
add
mov
cmp
mov
clc
mov
mov
ret
popa
mov
xor
xchg
xor
(bad)
mov
xor
push
mov
adc
cmp
in
dec
dec
call
or
cmp
add
test
ja
test
inc
mov
mov
out
inc
sbb
(bad)
cld
sbb
jecxz
dec
(bad)
addr16
xchg
xor
or
jbe
sysret
scas
inc
es
or
jb
cmc
sub
jmp
bound
push
scas
xchg
jno
adc
mov
push
dec
int3
fist
mov
dec
scas
in
push
mov
into
add
nop
dec
add
ret
ret
scas
js
fcomp
pushf
fstp
mov
pushf
push
movs
les
inc
cdq
mov
cmps
mov
jmp
adc
(bad)
lods
mov
push
pop
cmps
ds
xor
or
shl
sbb
push
adc
hlt
mov
dec
test
push
xchg
dec
dec
jl
jbe
je
mov
jae
jmp
out
mov
shl
sub
mov
sbb
push
out
clc
rcr
(bad)
mov
fnstenv
cmp
lds
ins
cmp
mov
mov
or
cmp
cmps
jmp
pop
push
dec
fsubr
call
pop
mov
mov
and
xchg
add
out
and
ja
popf
adc
push
out
inc
or
in
sub
retf
ja
jo
(bad)
out
sbb
les
cmp
dec
sti
add
mov
mov
data16
pushf
(bad)
xor
imul
push
jmp
mov
xchg
cmp
fild
aas
lahf
sahf
inc
stos
das
dec
nop
or
mov
xchg
(bad)
xlat
or
popf
push
xlat
cmc
mov
xchg
cmp
xchg
inc
sub
fs
addr16
imul
cmp
mov
xor
ins
lock
ficomp
mov
out
xor
lods
xor
jnp
pop
cmps
push
push
mov
add
aas
scas
sub
arpl
hlt
sub
cmc
and
mov
bnd
dec
sahf
leave
inc
mov
test
mov
sub
or
dec
es
retf
inc
inc
and
mov
jnp
adc
pop
xchg
xor
jle
inc
test
inc
addr16
out
jecxz
jp
in
cmp
data16
push
xor
sbb
fbstp
xchg
mov
into
lahf
mov
and
push
test
loope
imul
mov
iret
xchg
xchg
jns
mov
sbb
inc
mov
repz
mov
pop
sbb
or
xchg
push
cmp
inc
add
call
cmp
je
push
lea
push
xor
jg
jecxz
int3
sub
jp
dec
jge
sub
push
add
jp
fisubr
call
pop
add
lods
push
adc
pextrw
fs
test
sub
push
mov
ins
(bad)
xchg
sbb
dec
pop
repnz
ins
sbb
loope
pop
xchg
cmps
call
jmp
inc
or
outs
xor
push
sbb
cmp
mov
sub
loop
dec
aam
cdq
push
icebp
scas
lds
xor
sbb
inc
sub
aaa
mov
xlat
icebp
outs
dec
pusha
jle
mov
cdq
daa
push
or
and
ins
pop
adc
inc
dec
shl
mov
mov
inc
mov
into
adc
(bad)
push
jmp
adc
in
ja
adc
fldcw
fwait
sub
sbb
jl
in
jb
inc
lods
pop
sub
push
mov
push
cmp
lds
hlt
sbb
push
neg
cli
dec
(bad)
hlt
movs
mov
inc
push
mov
gs
fild
(bad)
jp
js
mov
test
ficomp
or
dec
int3
or
sar
mov
mov
into
xor
or
mov
out
pushf
ins
cmps
or
mov
inc
xchg
hlt
sbb
jno
imul
push
mov
fst
cld
jb
dec
and
add
pop
loop
mov
and
(bad)
jmp
mov
add
mov
test
mov
stos
jge
pop
sti
jge
or
dec
ret
test
push
dec
or
out
cmp
cmp
xchg
sub
out
cmc
push
leave
aam
mov
inc
outs
stos
pushf
(bad)
ja
or
movs
out
xor
sub
test
inc
arpl
mov
pop
adc
jns
and
xchg
pop
(bad)
leave
xchg
adc
repz
inc
or
and
mov
jo
cmp
mov
or
mov
pop
mov
jp
push
pop
hlt
pop
sub
js
into
jo
push
sti
fsubr
jne
cmc
movs
loop
sar
pop
ror
dec
popw
jl
fcomp
xor
mov
in
jecxz
mov
or
push
lahf
adc
cmp
shl
fcomp
outs
and
aaa
mov
rcr
dec
cli
push
xor
test
or
nop
push
sar
cmps
(bad)
pop
es
xchg
jae
jnp
mov
(bad)
lea
mov
and
push
ds
xchg
inc
retf
or
fnsave
mov
(bad)
not
or
mov
cmp
ja
xor
test
jg
or
icebp
sub
xor
sbb
cwde
jg
hlt
scas
push
adc
outs
mov
dec
jo
movs
cwde
xchg
sar
(bad)
fldcw
cmc
out
mov
lods
push
test
jno
and
push
(bad)
or
jae
xchg
pop
cmps
bound
call
(bad)
ficomp
jo
lock
push
dec
push
xchg
and
jecxz
sbb
fbld
dec
or
cmp
or
mov
cmc
arpl
lock
push
(bad)
sbb
jg
imul
fdivr
xor
inc
retf
xor
jp
popa
mov
sbb
aad
adc
sub
jmp
es
xor
loop
imul
pop
xchg
data16
ret
in
mov
cmps
push
pushf
push
jnp
inc
fadd
jns
jae
lock
cli
shr
cmp
shr
arpl
push
fcomp
ins
addr16
shr
push
je
mov
mov
and
cmps
or
pop
lods
or
jne
stos
jge
adc
or
test
mov
sub
dec
pop
jae
fdivr
repz
dec
sar
xchg
aad
std
in
dec
or
mov
push
xchg
push
stos
and
and
gs
loop
fidivr
xor
add
ins
push
xchg
push
(bad)
bnd
les
xchg
addr16
out
mov
xchg
add
xchg
mov
pop
int3
mul
xchg
push
(bad)
fsub
and
jb
scas
jb
(bad)
jge
push
jmp
jg
leave
push
jecxz
fld
outs
xor
sub
mov
pop
cwde
sahf
loop
pop
add
into
pop
mov
call
loop
dec
pop
xor
aaa
pop
cwde
and
int
mov
jge
scas
int3
or
jns
dec
test
mov
mov
in
enter
mov
shl
mov
dec
mov
and
inc
mov
xor
push
or
sahf
test
sbb
ins
stc
pushf
ins
dec
inc
jl
pop
cmp
push
adc
or
je
pop
push
xchg
cmc
push
pop
jecxz
push
jmp
cli
xchg
push
jno
ss
cmp
sbb
int
sar
xlat
mov
in
lahf
data16
mov
bound
add
cmp
mov
test
adc
mov
fxtract
mov
dec
mov
jecxz
push
mov
in
jne
mov
mov
nop
scas
int3
xchg
pop
and
imul
out
jae
mov
lods
xchg
mov
rcr
cmp
or
push
cmp
mov
jae
outs
ds
jae
enter
cmp
mov
sub
inc
cs
sub
or
adc
sti
mov
data16
push
test
push
and
mov
popf
add
gs
and
push
movs
dec
imul
push
imul
xor
inc
add
pusha
and
pop
mov
xor
push
fnstsw
fisttp
jge
(bad)
pusha
jne
jge
mov
fadd
(bad)
daa
stc
sub
push
pusha
mov
mov
mov
bnd
or
retf
push
fchs
jno
pop
jge
outs
mov
dec
dec
ss
popf
mov
add
leave
or
fst
cmp
loope
call
cwde
cld
sub
cli
outs
dec
jecxz
inc
addr16
push
adc
je
mov
push
scas
int3
sub
jp
dec
shl
pop
mov
push
push
cld
ds
(bad)
mov
arpl
adc
push
mov
mov
outs
stc
inc
scas
jl
jg
scas
test
xchg
neg
cmp
add
daa
in
or
mov
aad
popf
mov
pop
add
gs
adc
xchg
dec
inc
scas
mov
or
das
lods
push
cmp
mov
std
or
mov
push
xor
bound
mov
inc
and
jne
or
mov
pop
add
sbb
ds
rcr
push
pop
ret
push
fld
or
jg
test
dec
repz
jne
adc
jbe
fsubr
xlat
dec
and
js
rcr
pusha
push
mov
xor
or
inc
shl
aas
push
lock
fist
mov
or
shr
cmp
dec
ror
inc
push
jns
xchg
jmp
cmp
or
jae
outs
loop
test
dec
data16
add
fld
jg
lods
test
pop
xchg
mov
jmp
mov
inc
adc
sub
jl
leave
mov
and
imul
xchg
xchg
or
in
lods
pop
dec
hlt
and
pop
cli
xor
sbb
cmps
mov
cmps
stos
or
dec
shl
int
cld
jge
pop
jg
add
mov
lds
call
inc
out
add
mov
movs
bound
push
sub
icebp
or
xor
or
aas
in
and
push
(bad)
and
xchg
imul
outs
icebp
pushf
pop
in
mov
cli
add
inc
les
ficom
out
pop
or
cwde
cmp
pop
aam
pop
or
pop
aad
call
jl
mov
jl
sub
imul
cmp
add
sub
jne
jmp
jae
or
add
mov
add
xchg
xchg
sub
and
lahf
aam
dec
in
add
loope
xor
sub
cmps
sar
clc
ret
push
sbb
and
sbb
jmp
inc
jo
mov
sub
sbb
pop
es
pop
add
lahf
mov
(bad)
cmc
adc
push
jae
(bad)
push
ss
or
ret
retf
out
pop
xlat
pop
movs
fs
rcl
xlat
aas
pop
or
inc
jmp
jp
jnp
sti
xchg
std
adc
mov
mov
scas
clc
push
cmp
push
in
xor
in
(bad)
repz
(bad)
jnp
fmul
dec
jbe
xor
sbb
das
repnz
pop
(bad)
data16
retf
out
loopne
sub
xchg
lods
sbb
repnz
cli
jne
repnz
pop
in
cmp
dec
jge
or
daa
(bad)
fisub
sbb
fwait
or
dec
cmp
frstor
(bad)
aad
loop
rcl
sub
ret
dec
sub
test
mov
sub
push
xor
jmp
push
lock
or
dec
or
out
mov
rol
cmp
jno
xor
jl
dec
aaa
sbb
lock
cli
sbb
rol
and
lock
scas
or
(bad)
pop
addr16
pusha
mul
xchg
push
mov
addr16
dec
xchg
jmp
(bad)
mov
push
sub
push
js
cmp
xor
add
sub
out
jno
ins
cmp
adc
mov
imul
mov
or
cmp
jnp
cdq
jae
and
js
loop
cld
jae
test
push
shl
sbb
scas
loope
and
cmp
loopne
stc
popf
popa
and
mov
call
xchg
jge
mov
inc
aam
inc
leave
mov
loop
ins
jge
jp
jle
(bad)
push
and
loope
arpl
rcl
cmp
scas
ss
leave
dec
(bad)
test
scas
jmp
push
dec
mov
(bad)
les
xchg
loope
xor
shl
leave
push
mov
jmp
not
adc
sub
dec
iret
(bad)
loope
xor
scas
dec
jmp
pop
mov
(bad)
mov
inc
push
lea
pop
pushf
loope
test
mov
jmp
sbb
sti
(bad)
jp
xlat
add
push
jne
jg
mov
mov
pop
mov
sahf
pushf
sub
sti
mov
xor
cmp
mov
xchg
shl
test
fdivr
cmps
sbb
mov
push
sbb
retf
dec
jl
nop
retf
xor
mov
sar
clc
dec
jmp
clc
push
pop
int3
push
mov
fidiv
(bad)
xor
das
mov
in
xor
mov
movs
ror
mov
retf
jmp
stos
push
mov
out
icebp
mov
push
jecxz
push
out
test
clc
mov
hlt
enter
mov
xchg
adc
lea
xor
inc
bound
xor
mov
sahf
or
mul
stc
mov
xchg
mov
outs
(bad)
das
inc
pop
addr16
pop
call
jnp
adc
pop
sub
mov
in
in
in
add
jne
add
jecxz
ret
and
pop
iret
add
cmp
repz
mov
jmp
fs
pushf
pop
xchg
pusha
xor
in
jecxz
fdivr
out
loop
es
mov
das
les
stos
out
mov
mov
sbb
adc
jle
push
test
jecxz
jb
into
and
cmp
jae
xlat
out
push
mov
xor
and
rol
loop
scas
push
sub
xor
cld
shr
sub
cli
push
std
in
mov
fcom
add
pop
mov
adc
or
shr
imul
aas
or
pop
in
cmp
out
xchg
arpl
add
shl
push
rcl
loope
arpl
xchg
sub
mov
xchg
and
dec
jne
add
sbb
aad
ss
pop
add
pusha
pop
dec
adc
xchg
dec
mov
ds
in
out
ficomp
je
and
fstp
sti
add
sbb
inc
push
xchg
mov
sbb
xor
sar
jno
cld
add
das
jbe
(bad)
mov
pop
xchg
jecxz
dec
inc
mov
scas
test
and
mov
(bad)
pushf
sub
pop
jp
(bad)
xchg
mov
and
(bad)
mov
jnp
das
push
jns
pop
popa
add
pushf
mov
sbb
dec
js
out
es
lock
mov
sub
aad
mov
je
nop
dec
pop
icebp
fdiv
or
inc
cmps
sbb
mov
sub
or
xor
neg
int
push
xchg
scas
bound
push
mov
es
sbb
push
inc
and
aad
xchg
dec
movs
add
push
mov
jb
lods
adc
mov
inc
aam
xor
aad
retf
jb
or
test
jg
(bad)
sbb
push
loopne
push
xchg
retfw
fsub
xchg
mov
lods
push
iret
ss
in
jp
(bad)
lods
ins
add
xor
in
test
mov
cmp
push
fsub
mov
into
out
mov
and
ins
xchg
pop
xlat
nop
mov
add
mov
js
add
ds
sbb
and
jbe
rol
aaa
in
retf
pop
mov
dec
shl
jecxz
lea
arpl
xchg
sub
mov
jae
and
call
jp
aas
aad
pop
mov
std
pushf
(bad)
call
popf
int
es
out
into
rol
out
or
loopne
dec
test
dec
sub
sbb
out
cmp
imul
xor
cs
jno
and
and
lods
lods
sub
xchg
add
sbb
outs
inc
loopne
mov
inc
push
adc
outs
inc
cmp
adc
jl
fcom
or
(bad)
mov
call
xchg
nop
dec
add
fild
outs
sbb
mov
les
push
lds
aad
push
sbb
sub
sbb
sbb
dec
stos
pushf
les
cmp
jmp
push
scas
mov
int3
bound
pop
mov
in
push
pushf
push
fwait
imul
les
sbb
push
call
xlat
pop
mov
or
xor
xor
and
push
and
out
and
ja
push
lods
sub
or
xor
fwait
push
shl
movs
pop
hlt
cmovae
sbb
sti
ja
mov
stos
push
mov
mov
xor
push
mov
or
dec
xor
retf
ficomp
xchg
mov
rcr
cdq
xchg
xchg
mov
or
fcomp
push
cmps
mov
add
adc
outs
inc
jg
sbb
div
mov
ret
adc
lock
push
push
jnp
inc
add
adc
aaa
push
fld
repnz
push
in
mov
icebp
xor
xchg
nop
mov
lahf
sub
aad
scas
int
sbb
cmp
test
imul
test
(bad)
mov
int3
pop
dec
xlat
xchg
div
sbb
(bad)
pop
ins
push
add
sbb
ins
loope
call
lds
push
icebp
imul
test
adc
scas
jmp
push
push
add
and
mov
xchg
sbb
test
mov
je
push
outs
inc
ftst
fsubp
and
in
push
mov
in
fnsave
adc
cmps
push
xor
div
fwait
and
stos
cmp
and
pop
pop
shl
xchg
call
sub
pop
imul
mov
or
sub
pusha
shl
push
ror
push
ret
(bad)
stc
sub
mov
mov
mov
outs
sub
sub
iret
ret
repz
pop
daa
add
cmp
inc
mov
mov
jo
jmp
loope
dec
push
div
pusha
stc
popa
in
iret
and
lea
fld
jmp
sbb
pop
mov
test
div
cmp
and
mov
xchg
push
add
pop
xchg
and
out
sub
xchg
push
cmps
jae
scas
xor
lods
and
cmp
pop
mov
popa
jl
jmp
fs
rep
push
mov
neg
pop
xor
jp
bound
xchg
inc
sub
mov
fst
mov
xor
mov
dec
shl
mov
imul
xor
dec
or
mov
xlat
sbb
sti
cmps
xlat
sbb
leave
ins
lea
pop
aam
xor
lods
aas
das
sbb
push
push
ret
fcom
jmp
js
cld
leave
xor
stos
mov
into
xchg
scas
mov
pop
jmp
dec
pop
mov
cdq
sub
jnp
mov
imul
fsub
fs
jo
sub
jbe
xlat
push
pop
pop
loopne
pusha
arpl
pop
addr16
int3
and
(bad)
(bad)
adc
cmp
jg
dec
push
(bad)
leave
fld
imul
mov
sbb
adc
enter
mov
outs
jbe
fiadd
loop
shl
cld
jae
xor
(bad)
outs
fistp
lock
push
mov
adc
imul
loopne
or
push
mov
jle
gs
jnp
jnp
adc
adc
repz
jno
push
out
push
loope
aas
in
fdiv
add
xchg
sub
sbb
sahf
sbb
(bad)
popa
std
imul
xor
mov
loop
and
dec
arpl
fstp
jo
test
idiv
jnp
rcl
lahf
cmp
push
mov
std
jmp
pushf
inc
stos
mov
ins
in
out
cmc
push
adc
jmp
jmp
(bad)
in
add
aad
int3
mov
fsub
repz
mov
xchg
(bad)
jmp
rcr
xchg
adc
pusha
mov
mov
xchg
xor
in
test
add
mov
test
mov
push
ss
stos
push
push
repnz
xor
lods
push
or
jno
inc
and
les
test
stc
jl
mov
jnp
jmp
js
mov
pop
aad
push
adc
std
xchg
out
mov
lods
(bad)
push
cld
repz
rcl
mov
jb
bound
dec
sub
cmps
(bad)
or
ds
adc
add
xchg
imul
(bad)
dec
(bad)
mov
fidiv
cmp
add
cs
dec
leave
fsubrp
in
std
ret
call
xor
rol
pop
jnp
inc
ss
pop
jecxz
add
jmp
ins
inc
inc
in
test
sahf
pop
sbb
add
mov
lock
push
mov
sub
sub
mov
repz
add
xor
test
fiadd
jnp
dec
jb
loope
adc
sbb
pop
movs
fcom
push
sub
jne
cmc
sti
sub
(bad)
and
lods
les
daa
push
shl
push
cmp
jmp
dec
outs
xor
int3
add
mov
fldenv
or
outs
popf
repz
stc
clc
sbb
or
lahf
jb
jnp
xor
lods
jo
in
repz
mov
jle
bound
outs
cmp
cwde
push
fist
call
ret
push
xor
mov
cmp
cwde
jne
cs
push
xchg
mov
aas
or
xor
inc
pop
hlt
repnz
xchg
ror
bound
pop
and
shr
inc
dec
ret
mov
mov
icebp
adc
leave
retf
fldcw
pop
scas
outs
jmp
or
adc
mov
jecxz
(bad)
fisubr
pop
sub
cmp
iret
pop
ds
xchg
iret
mov
or
adc
add
and
pop
and
std
ja
push
outs
test
(bad)
sub
(bad)
cs
movs
(bad)
mov
xor
(bad)
icebp
in
cli
and
fstp
call
addr16
inc
xchg
pop
cmp
nop
xchg
mov
popf
add
cmps
pop
call
adc
lods
icebp
js
mov
mov
xor
mov
rol
es
jb
and
jecxz
in
out
push
rcr
ffreep
cmps
or
aas
jl
xor
mov
dec
in
outs
dec
sbb
pop
dec
dec
mov
add
sub
ror
xchg
adc
aaa
mov
and
push
jmp
cdq
enter
imul
loope
xchg
outs
push
frstor
leave
int3
xor
lds
iret
add
test
inc
adc
and
stos
cmps
lea
inc
in
or
popf
pop
pop
sub
nop
(bad)
xchg
push
mov
(bad)
bound
jo
sar
sbb
mov
cmp
add
xor
push
xchg
test
push
push
jne
loope
loopne
call
mov
xchg
(bad)
mov
add
out
dec
and
xor
cmp
push
xchg
dec
outs
stos
or
lods
call
cwde
jecxz
out
scas
jno
popf
xlat
jle
adc
dec
test
fwait
xor
adc
repz
push
jp
inc
stos
js
in
xor
mov
test
jmp
clc
arpl
xor
adc
jg
and
jge
pop
mov
stc
(bad)
sbb
das
lds
xor
pop
cdq
cmc
adc
inc
pop
xor
xchg
cmp
xchg
jmp
mov
mov
retf
and
push
hlt
add
in
mov
add
adc
xchg
push
in
jmp
out
loopne
cmp
add
pop
xchg
shl
cmp
inc
ja
cmps
ds
out
in
popa
ficom
scas
sub
imul
push
fstp
iret
sti
cmp
inc
popa
jp
daa
imul
fwait
nop
stos
pop
popf
out
bound
shl
or
retf
(bad)
push
xor
sbb
(bad)
and
adc
movs
std
test
cmc
mov
les
xchg
pusha
mov
mov
iret
sar
inc
cs
ret
outs
jns
rdmsr
inc
arpl
es
call
dec
lock
iret
rcl
std
sbb
test
into
in
jge
mov
xor
in
add
out
xchg
adc
xlat
shl
dec
stc
mul
adc
lahf
cmps
sub
or
or
inc
std
sti
and
push
das
jp
dec
cmc
loop
cmp
mov
mov
sbb
loopne
stos
jno
add
xor
fmul
pushf
adc
mov
fcom
popf
fisubr
adc
scas
dec
pop
data16
xlat
jnp
(bad)
cmp
cmp
pop
jns
ror
je
loop
push
outs
sbb
mov
jge
in
cmp
movs
mul
stc
movs
mov
cmp
jae
(bad)
xor
enter
cmp
out
cmp
fisub
jmp
adc
cmps
sti
cmp
fwait
jle
daa
add
inc
dec
int
sub
es
xchg
movs
mov
out
xchg
add
loope
push
shr
dec
nop
(bad)
cmps
jecxz
out
jle
test
lods
mov
aam
repz
sub
out
in
xchg
movs
mov
jb
and
inc
add
push
(bad)
or
scas
cmp
sbb
dec
or
in
mov
cs
mov
adc
pushf
(bad)
sahf
xlat
cmps
mov
and
mov
pop
xor
mov
(bad)
sbb
lahf
jno
repz
fidiv
popa
(bad)
int3
mov
call
mov
aas
shl
sbb
adc
xchg
stos
fild
inc
scas
das
and
mov
dec
push
add
cmp
cmps
jnp
push
rep
push
dec
push
xchg
aam
hlt
ins
sahf
out
sub
inc
adc
neg
or
loopne
pop
jg
mov
add
fwait
ss
mov
sar
sti
add
aaa
adc
pop
out
ror
ja
add
and
push
iret
pushw
mov
icebp
nop
jo
xor
xchg
shl
push
js
aad
bound
ds
cmps
(bad)
call
repz
retf
jl
push
shr
add
adc
jo
mov
loop
pusha
xchg
add
xor
sti
mov
imul
fist
inc
aaa
sbb
mov
mov
fld
aam
inc
push
add
mov
dec
xlat
rcl
or
xlat
cmp
outs
adc
mov
inc
mov
ror
xchg
fcomp
add
loopne
mov
jmp
fistp
clc
aad
xchg
push
or
movs
mov
or
outs
adc
mov
or
jg
test
aaa
mov
int
xchg
jp
push
test
sub
cdq
gs
call
sub
jae
xchg
add
adc
xchg
sbb
mov
push
adc
or
xchg
hlt
push
xchg
addr16
mov
cdq
ror
es
and
loopne
push
sub
push
mov
sbb
adc
ds
call
xchg
jmp
sub
xchg
sbb
fdiv
sahf
pop
nop
mov
cli
rol
xchg
in
lods
loope
stos
out
cmp
mov
push
inc
jp
mov
out
bound
or
adc
lea
mov
cld
gs
xor
pop
movs
jbe
test
sbb
pop
fs
sub
xchg
or
cmp
pop
push
loop
sti
call
or
scas
shr
jl
inc
dec
sbb
(bad)
mov
push
bound
cmp
add
cmp
pop
and
retf
(bad)
daa
dec
jg
mov
sub
cmp
jne
cmps
cmp
inc
cmp
inc
push
inc
stc
aam
retf
or
pop
test
clc
lods
mov
mov
dec
xor
sbb
cmc
std
pop
xchg
shr
aas
xchg
hlt
jge
stos
jmp
push
adc
les
lods
adc
jp
jno
mov
sbb
jmp
cmps
jmp
sbb
std
and
cs
lahf
sub
aas
pop
shl
in
out
shl
inc
bound
sbb
sbb
jle
jne
aad
movs
mov
fidivr
call
sub
lahf
cmps
out
cmp
sbb
or
stos
add
rol
in
mov
jno
mov
movs
test
loope
enter
retf
inc
mov
add
clc
cmp
xchg
loop
cld
pop
pop
inc
inc
dec
enter
mov
pop
loopne
jmp
mov
jle
in
dec
mov
mov
imul
dec
pop
inc
cmp
aaa
jp
aam
aas
push
fcom
pop
aaa
rcr
loope
stos
push
test
push
sub
(bad)
std
mov
in
pop
pop
cmps
sub
popa
and
and
leave
push
adc
out
daa
xor
(bad)
pop
int
fidiv
jae
mov
jae
xchg
xchg
and
das
push
lea
push
das
sub
daa
jnp
aas
(bad)
sahf
cwde
mov
rol
mov
sbb
adc
ret
pushf
sti
ins
je
fnstenv
mov
sub
xchg
js
inc
sub
out
dec
std
repz
mov
push
mov
cmp
jno
push
sub
int3
int3
movs
inc
(bad)
jns
jmp
scas
xchg
cmps
fdiv
mov
sub
adc
pop
cmp
jmp
(bad)
aas
fbld
mov
mov
mov
pop
jns
push
repz
aad
jns
push
inc
mov
cmp
mov
cli
fstp
cmp
int
fld
pop
iret
xchg
mov
jle
cmp
inc
dec
adc
or
shl
mov
pop
mov
inc
daa
sahf
cmps
push
iret
fadd
xchg
or
jmp
add
fdivr
xlat
xchg
out
icebp
add
out
push
xchg
ret
jmp
or
pusha
cld
ins
arpl
cs
aaa
je
mov
clc
add
fmul
push
adc
call
ds
mov
adc
imul
mov
jmp
inc
dec
ins
inc
mov
fadd
dec
pop
mov
push
scas
pop
inc
(bad)
iret
aad
mov
mov
addr16
pushf
or
mov
jmp
dec
jb
xchg
fld
dec
add
sub
cli
nop
sar
inc
jne
into
(bad)
enter
data16
(bad)
int3
fstp
mov
enter
imul
xor
or
ss
pushf
retf
jge
adc
pop
ds
loop
test
pop
pushf
and
addr16
adc
xchg
mov
adc
pop
fist
enter
xor
add
push
fabs
addr16
aad
xor
push
mov
cs
add
scas
push
ret
sub
das
aad
inc
(bad)
lods
cdq
sub
nop
cmp
shl
div
push
push
movs
cld
shr
dec
xor
out
or
push
movs
aad
mov
inc
and
pop
data16
sbb
stos
mov
stos
sbb
mov
push
les
aas
xchg
pushf
sbb
sbb
rol
sbb
jb
fld
cmps
or
std
pop
movs
(bad)
idiv
bound
call
pop
mov
ss
stc
sub
mov
aaa
gs
ret
add
mov
ss
scas
jo
hlt
rol
and
push
stc
jl
jg
fstp
(bad)
sbb
ja
jns
test
ds
adc
enter
add
xor
push
into
jmp
xor
mov
les
mov
push
mov
jge
bound
push
add
hlt
sub
dec
and
pop
popf
clc
mov
(bad)
sbb
jb
mov
mov
xor
jmp
jae
enter
call
add
push
pusha
in
fiadd
repz
iret
inc
repnz
cmps
push
or
push
adc
sub
jmp
outs
sbb
hlt
mov
sbb
movs
mov
scas
int
jb
inc
hlt
xchg
xor
jns
lods
jns
push
mov
cmp
jp
sub
ins
ins
aam
mov
add
cwde
or
xor
jp
push
lea
scas
stos
fs
in
or
and
pop
ins
fimul
daa
mov
shr
push
lods
and
pop
mov
arpl
popa
in
fistp
dec
ffree
aad
pop
add
push
cmp
xor
mov
pop
mov
(bad)
das
sbb
hlt
cmps
cmp
lea
jae
jno
retf
jbe
scas
in
jne
stos
xchg
call
int3
sar
pop
mov
retf
pop
clc
es
xchg
cs
adc
outs
lahf
push
fild
popa
jmp
shr
inc
and
mov
cmps
pop
push
inc
in
mov
sub
lahf
mov
jno
rcr
popa
cmp
stos
lds
push
pop
sar
aaa
pop
sbb
or
sub
push
mov
inc
or
test
rcr
jbe
(bad)
stos
pop
idiv
mov
movs
or
pop
push
aas
add
(bad)
lods
push
pushf
dec
movs
pop
jecxz
loope
adc
and
xor
aas
add
jo
ret
pop
xor
ret
adc
pop
cs
xchg
imul
sti
ins
or
rcr
xor
cs
xchg
jns
iret
cmp
(bad)
push
mov
sub
loopne
out
mov
cmp
mov
jp
aam
inc
jnp
rcl
xlat
sar
xchg
push
sbb
ja
jge
ins
pop
dec
add
pop
xchg
in
mov
push
mov
dec
sbb
adc
xchg
loope
ja
push
xor
movs
adc
push
sbb
ja
jb
repz
or
add
es
out
dec
inc
add
jo
jecxz
push
out
mov
add
dec
mov
(bad)
popa
push
sbb
sub
mov
mov
icebp
mov
and
inc
(bad)
xor
clc
movs
mov
jae
push
mov
cmp
shl
mov
cli
sbb
sub
jbe
js
mov
inc
jmp
jb
mov
cmp
loope
jno
jl
pop
cdq
push
addr16
(bad)
js
fdiv
cmp
push
je
xchg
ficomp
or
pop
mov
or
gs
rcr
lods
jae
sub
adc
inc
sub
dec
and
mov
add
inc
pop
xor
push
jle
push
inc
jns
xchg
in
mov
loop
mov
jo
xchg
cmp
jg
in
imul
ret
jp
jge
fnstsw
and
rol
stos
jmp
push
ror
xchg
(bad)
(bad)
mov
fs
popf
retf
sub
cmp
movs
shl
jns
lock
inc
xlat
cmp
into
out
cld
mov
sub
mov
imul
and
(bad)
clc
inc
setnp
cwde
sbb
push
and
dec
mov
div
mov
pushf
jne
inc
xor
xchg
in
test
imul
mov
mov
test
(bad)
fisub
test
call
adc
movd
leave
test
adc
adc
cmp
pop
add
nop
dec
xchg
xor
pop
mov
arpl
jecxz
fsubr
rdmsr
dec
pop
adc
xchg
enter
xchg
jp
fsub
fnsave
aas
mov
into
fild
cmps
add
outs
out
adc
xor
mov
or
pushf
aad
add
pop
lods
ud0
int
enter
adc
pushf
mov
sbb
js
iret
cwde
call
inc
scas
mov
fdivr
inc
cmp
or
shl
retf
shl
sub
xchg
pop
jmp
in
mov
mov
ret
pop
fild
fcom
push
cmovg
ins
sbb
xchg
outs
inc
ficomp
clc
sub
sbb
adc
cld
lods
enter
lds
ror
out
popa
pop
not
xor
cld
push
je
bound
push
jge
push
push
pop
push
or
loopne
mov
xor
xchg
push
xor
jmp
hlt
mov
add
iret
add
inc
test
rol
cmp
mov
fild
mov
dec
fwait
and
push
and
pop
rol
adc
addr16
test
sub
mov
sbb
dec
ret
loop
imul
adc
pop
xchg
jge
push
pop
stos
cmp
aas
mov
cwde
xchg
sbb
push
mov
cmp
in
or
xor
lds
jnp
pop
sub
push
push
adc
je
pop
cmp
gs
movs
sbb
pop
(bad)
outs
add
ficomp
loop
adc
sub
jl
call
mov
idiv
mov
pop
ins
ins
daa
fs
pop
jmp
push
aad
in
sub
xchg
xchg
ds
bound
fild
out
cmc
pop
xchg
retf
add
lock
jmp
pop
sar
stos
cdq
and
pop
repz
addr16
into
nop
loop
cmc
dec
cli
test
dec
in
dec
ret
jo
(bad)
or
popa
inc
mov
mov
push
ins
cwde
sub
adc
cld
or
(bad)
push
imul
xchg
mov
adc
jl
imul
push
push
gs
mov
mov
imul
inc
data16
data16
xchg
stos
aaa
xchg
lock
test
dec
clc
aas
test
add
or
(bad)
aam
pop
test
js
xchg
dec
xchg
and
sub
mov
pop
jnp
xchg
xchg
xchg
push
int3
test
addr16
rcr
jno
movs
xchg
daa
test
add
(bad)
and
jp
pop
fsubr
mov
dec
fstp
outs
adc
movs
dec
mov
and
or
scas
retf
mov
mov
adc
ret
xchg
xor
pop
xchg
call
dec
clc
mov
rol
rol
mov
mov
(bad)
ss
(bad)
les
add
loopne
cmp
scas
pop
dec
test
out
or
push
inc
xor
fbstp
pop
mov
enter
std
mov
daa
mov
ror
js
mov
lea
retf
popf
aam
mov
add
(bad)
inc
lock
jo
lods
imul
xor
aaa
and
mov
ds
in
push
jno
pop
jmp
push
lock
adc
jbe
pop
ret
xor
mov
add
test
mov
add
sub
mov
xchg
cmp
cmp
jp
sub
mov
(bad)
push
cmps
lods
xor
jg
pop
add
adc
and
sub
dec
pop
das
pop
mov
scas
ret
jle
cmp
ret
out
mov
sub
ficomp
test
add
in
mov
jno
fwait
es
jle
js
add
out
sub
push
sub
and
into
pop
(bad)
and
mov
jecxz
push
fnstenv
sbb
xchg
and
sbb
or
and
pop
sub
sub
fwait
jb
jbe
(bad)
jb
pop
mov
and
jno
pop
std
fsubr
in
push
mov
int
xchg
cmp
fincstp
or
mov
in
shl
lea
aad
add
dec
outs
(bad)
mov
rcl
dec
sbb
lods
or
es
cmp
cs
xor
arpl
pop
ror
or
mov
add
hlt
addr16
jne
adc
not
push
mov
jmp
or
jne
sub
loope
(bad)
(bad)
jbe
inc
(bad)
arpl
xor
inc
retf
or
inc
leave
add
fcmovb
shr
mov
sahf
mov
cmp
jb
dec
(bad)
xor
add
or
jbe
test
lock
or
movs
adc
push
inc
sub
mov
and
test
pop
or
frstor
nop
cwde
dec
mov
aas
mov
jb
pop
pop
pop
inc
ja
push
cmp
call
(bad)
mov
imul
push
cmps
movs
push
repz
cmp
test
adc
mov
sbb
shl
pop
ins
mov
xor
jg
and
xor
arpl
ror
cmp
movs
xor
pop
push
div
jns
lds
jecxz
and
stc
cli
sar
lock
jno
out
in
or
push
fbld
and
call
add
in
aas
add
shl
or
(bad)
in
push
leave
xchg
sets
popf
in
xchg
xlat
ds
cs
test
je
outs
push
data16
test
jge
fbld
inc
sub
stos
mov
push
cmps
inc
ja
mov
test
cmp
out
add
mov
jno
cli
cmp
call
xchg
iret
mov
pop
or
jmp
sbb
aas
shl
out
jle
jmp
test
mov
pop
dec
xchg
pushf
xchg
mov
xchg
pop
fs
xchg
push
js
scas
mov
lea
pushf
mov
jne
fisttp
and
mov
mov
push
mov
jb
sbb
push
jo
pusha
popf
or
push
cmp
test
lods
jb
ins
mov
pop
pop
pop
jns
sub
sbb
inc
and
cmp
int
add
arpl
cdq
dec
cmc
out
mov
int
add
sahf
test
test
fdiv
movs
xchg
jns
or
xchg
je
mov
adc
push
jo
jecxz
sub
hlt
sbb
jns
lods
retf
icebp
push
xor
add
push
nop
sti
jp
pop
pop
sbb
sti
scas
lods
fist
jo
inc
push
mov
fwait
cs
repz
add
dec
ds
arpl
sbb
call
push
jno
cmps
loop
(bad)
dec
jp
(bad)
jp
(bad)
rol
fstp
mul
imul
mov
pop
push
jne
mov
jmp
xchg
jns
addr16
xchg
enter
mov
jb
push
sub
ret
dec
cmp
sub
out
or
int
xlat
div
(bad)
and
sbb
retf
retf
adc
jae
add
cdq
cmp
add
arpl
cmp
push
loop
imul
mov
test
push
shr
jb
rcr
cmps
aam
and
cmps
push
add
call
dec
or
cdq
mov
jnp
popa
stos
sbb
data16
bound
add
arpl
jecxz
lahf
repz
or
dec
cmps
enter
xor
stc
jne
jmp
ret
pop
add
js
adc
cwde
ficom
seta
xchg
inc
xor
in
xor
mov
daa
sahf
gs
sahf
clc
clc
ret
sub
inc
clc
in
mov
jne
out
(bad)
aas
cmp
cmp
xor
pop
(bad)
cmp
je
lods
(bad)
inc
sbb
adc
ss
mov
pop
mov
sti
jmp
fisttp
mov
bound
rcl
sti
pop
cmp
lds
sti
adc
fwait
pushf
adc
and
inc
xor
inc
mov
jbe
test
pop
dec
das
fwait
or
sbb
daa
stos
enter
push
fwait
add
into
cld
xchg
movs
mov
idiv
popa
cmc
into
rsqrtps
mov
fistp
sub
aad
jmp
inc
xchg
mov
daa
mov
fimul
js
data16
gs
data16
ins
mov
stos
dec
cmp
jle
out
(bad)
push
arpl
pop
push
fucomip
(bad)
xor
cmps
mov
fcmove
repnz
or
jl
inc
sub
sbb
retf
mov
ffreep
ret
mov
aad
iret
push
retf
call
inc
popa
jae
outs
outs
sub
pop
and
jmp
sbb
imul
jnp
cmc
test
push
add
inc
fwait
mov
stc
xor
idiv
push
push
loope
cmps
jbe
scas
mov
add
mov
stos
retf
(bad)
hlt
pop
adc
call
stos
push
aaa
push
jbe
nop
je
cmp
add
mov
xchg
lds
in
dec
inc
jecxz
retf
jmp
and
inc
and
or
xor
out
cli
repz
xchg
jo
adc
sbb
or
pop
arpl
cmp
lods
jl
sbb
fs
sbb
and
int3
jl
xchg
pop
xor
mov
outs
inc
pusha
adc
sbb
das
cmps
gs
movs
pop
adc
and
mov
jmp
daa
add
push
mov
movzx
mov
cmp
jmp
mov
push
inc
jne
mov
sti
cmp
cmp
outs
fstp
push
retf
mov
dec
sti
ins
dec
push
stos
(bad)
cmp
or
fwait
cs
ret
sbb
xchg
ret
mov
push
fld
mov
xor
jnp
jo
test
jmp
ss
das
movs
mov
sbb
int
ja
outs
push
cmps
mov
mov
ins
mov
loope
cwde
jle
out
mov
fisttp
mov
int
stos
sub
(bad)
iret
cmp
add
jmp
or
jbe
rep
icebp
je
cmp
xchg
push
lods
and
mov
inc
push
je
dec
or
lahf
arpl
or
leave
lds
or
cmp
dec
jae
fisttp
push
retf
sbb
repz
inc
and
in
jmp
add
mov
out
push
inc
push
mov
inc
das
(bad)
loope
call
fimul
sbb
fnstcw
aad
inc
and
(bad)
and
sbb
mov
mov
cli
(bad)
xor
repz
mov
jb
movs
bound
js
cdq
ss
mov
mov
(bad)
fdivr
in
jae
and
push
xlat
outs
aam
add
jns
mov
xchg
or
repnz
inc
mov
repz
add
pop
jbe
inc
cmp
mov
data16
jl
clc
test
sti
xchg
shr
ja
retf
cmp
cli
mov
fistp
or
into
jge
and
and
imul
inc
xor
leave
mov
push
adc
inc
cmp
sti
addr16
int
pop
adc
fs
dec
inc
or
pushw
and
clc
xchg
shl
test
mov
and
(bad)
pop
pop
mov
xor
dec
mov
enter
dec
adc
(bad)
sar
(bad)
stos
adc
inc
popf
adc
mov
mov
imul
pop
repnz
sar
scas
adc
cmp
inc
arpl
rcr
push
fadd
or
dec
iret
test
and
pop
mov
push
repnz
cli
cmp
arpl
push
outs
sub
jb
jae
adc
push
fcomi
adc
jmp
cmp
mov
mov
add
push
pop
mov
into
jnp
xor
aam
call
imul
adc
mov
mov
mov
loope
psllq
adc
icebp
inc
add
or
adc
xchg
and
mov
cmp
(bad)
xchg
shl
repz
and
adc
cmp
pop
sbb
(bad)
hlt
jmp
mov
and
bound
gs
test
fst
push
dec
push
stos
dec
or
adc
inc
pop
and
imul
(bad)
cmps
dec
xchg
adc
mov
int
pop
popf
mov
cmps
mov
push
jmp
jmp
test
mov
push
mov
lods
pop
mov
lds
push
sbb
stc
inc
lock
sbb
xchg
scas
pop
push
clc
and
push
mov
retf
test
push
test
lock
xor
mov
imul
(bad)
and
stos
mov
adc
out
and
xor
lods
pop
mov
call
jge
cdq
outs
loop
retf
xchg
mov
jae
add
jmp
inc
push
je
xchg
imul
cmp
dec
mov
jnp
call
jg
cmps
ret
stc
shl
cmps
cmp
and
mov
cmp
dec
xor
pop
icebp
mov
(bad)
je
neg
(bad)
and
push
cmp
push
out
clc
cs
outs
inc
sub
pusha
repnz
into
nop
and
rcl
pop
mov
loop
dec
jle
(bad)
daa
cli
rdmsr
mov
cmp
not
jb
xchg
fisttp
retf
dec
mov
add
mov
cmp
sbb
ret
push
outs
push
out
sub
dec
mov
out
(bad)
ror
loopne
addr16
clc
dec
(bad)
in
xor
jnp
xchg
adc
sub
mov
(bad)
je
push
fsubr
fdiv
mov
adc
and
xchg
test
mov
retf
out
jno
mov
(bad)
sbb
(bad)
loop
dec
mov
dec
imul
add
ja
inc
add
call
mov
mov
jl
(bad)
fadd
add
sbb
aas
mov
ins
stos
cmp
xor
sub
cld
pop
dec
es
cmps
rcr
mov
aas
(bad)
shl
jbe
outs
ret
sub
ret
stos
sbb
ss
push
jne
popa
hlt
ja
stos
into
cmps
push
pop
xchg
fiadd
push
jp
je
ins
and
lods
iret
xchg
jge
xchg
enterw
and
adc
add
nop
xor
cmp
jns
mov
cld
idiv
out
(bad)
mov
mov
fstp
call
sub
lds
jecxz
xchg
dec
in
rcr
js
xchg
xchg
outs
jecxz
and
retf
mov
push
cwde
mov
test
fcmovb
lds
xchg
pop
outs
cs
cdq
xchg
push
push
sar
out
call
and
mov
icebp
repz
cmps
pop
lods
dec
add
clc
pop
sub
test
mov
test
jae
xchg
rol
mov
shl
mov
fmul
jae
and
dec
mov
cmp
mov
shr
push
bound
(bad)
xor
iret
xchg
inc
ss
cmp
sbb
xchg
iret
inc
loop
dec
mov
stc
por
or
int3
sbb
test
jne
arpl
ins
and
enter
es
inc
push
aas
push
mov
fistp
test
popf
xchg
outs
leave
jmp
dec
xchg
jns
jns
mov
repnz
(bad)
xor
aas
jnp
aad
and
jbe
mov
clc
mov
and
stc
or
mov
cmp
scas
and
rcl
inc
sbb
mov
or
push
ins
ins
and
ficomp
pop
stc
fdivrp
pushf
push
arpl
fdivrp
jno
pop
int3
pusha
out
dec
aam
nop
pop
repz
xor
std
or
js
outs
mov
movs
dec
xlat
push
dec
inc
pusha
inc
pop
shl
cmp
and
imul
push
mov
jno
call
mov
pop
xchg
mov
shl
inc
(bad)
aad
xor
sbb
add
jge
clc
pop
ds
jnp
cmp
mov
test
das
xchg
sar
sbb
mov
mov
mov
test
xlat
repnz
adc
cmps
sbb
nop
repnz
enter
sub
jp
mov
push
call
push
inc
xchg
dec
push
jae
inc
frstor
dec
xchg
out
mov
and
mov
dec
(bad)
pusha
ror
loop
lods
or
inc
sub
sub
jb
push
cmp
outs
inc
lahf
xchg
or
sub
jle
adc
sub
jo
mov
mov
rcl
(bad)
inc
mov
repz
fsubr
leave
mov
cmp
cmp
xchg
enter
in
or
ss
(bad)
pusha
push
mul
retf
ins
cmp
retf
fdivr
mov
fmul
fwait
pop
(bad)
or
pop
mov
jmp
je
fisubr
sub
fimul
and
jne
adc
push
and
xlat
cs
adc
push
adc
aaa
dec
or
leave
dec
push
jbe
shr
popa
cmp
(bad)
cmp
lods
stc
lds
jno
cmp
int3
xor
loop
push
mov
stos
in
cmp
add
mov
or
rol
pop
movs
mov
es
cmc
or
retf
fxch
inc
push
mov
xor
shl
popa
dec
int3
and
fsub
xor
dec
les
rcl
dec
and
sahf
cmp
jbe
adc
push
ds
jecxz
fnstenv
jmp
cmove
jecxz
popa
and
enter
or
or
cmps
jmp
fdecstp
(bad)
in
ror
mov
pop
cmps
(bad)
shl
cs
mov
fild
jge
pop
ja
xor
xor
fadd
jno
cli
out
mov
sub
mov
cmp
inc
ret
sub
push
out
fisttp
or
jle
inc
leave
cli
mov
jnp
test
xor
cmp
cmp
dec
xchg
xchg
sub
repnz
sbb
(bad)
int3
fld
gs
iret
enter
dec
les
(bad)
(bad)
xlat
jae
rcr
inc
ror
retf
cmp
push
mov
out
dec
or
and
jo
ins
mov
pop
dec
in
jge
jo
inc
js
and
fild
out
xchg
dec
jle
test
sbb
addr16
rol
enter
test
jbe
(bad)
adc
dec
imul
or
xchg
(bad)
and
sbb
add
xchg
push
fs
xor
mov
lock
ficom
lds
cli
mov
imul
fsub
jae
in
sbb
cmp
rcr
loop
retf
xor
jg
add
and
xor
rcr
jle
mov
fstp
fwait
sar
xor
cmp
ficom
sbb
mov
push
stc
outs
or
icebp
lods
xor
dec
xor
jne
sub
adc
loope
in
jae
add
mov
cld
out
scas
push
jo
lock
test
jo
cld
lods
pop
(bad)
mov
(bad)
jo
cmp
movs
mov
sbb
jbe
mov
popa
lahf
push
xor
sahf
mov
pop
jl
cmp
jg
jb
sub
lds
(bad)
mov
ficom
mov
into
mov
movs
xchg
cwde
mov
mov
xchg
(bad)
xchg
push
mov
xchg
mov
push
xor
out
jp
adc
xchg
pop
icebp
leave
ja
out
jnp
jno
adc
dec
in
gs
mov
adc
in
fs
int3
fbld
and
mov
xchg
dec
pop
sub
jmp
mov
mov
cdq
(bad)
xchg
scas
movs
xchg
pop
in
inc
or
fstp
xor
call
jbe
or
sub
inc
mov
ret
dec
mov
sbb
jge
cdq
xchg
and
inc
or
shl
push
mov
in
lods
cmp
out
loop
mov
push
nop
je
leave
lds
push
imul
scas
fiadd
repz
jo
cmp
cmp
fnsave
js
sub
dec
fs
(bad)
xor
push
push
imul
shl
in
sbb
test
nop
xchg
dec
sar
push
sahf
repz
jg
xchg
sbb
inc
add
fmulp
cwde
cmps
fld
push
test
lods
pop
popf
lahf
xor
lods
int
imul
movaps
cmc
ins
jl
or
inc
jne
cmps
mov
mov
sahf
or
adc
mov
lea
or
and
inc
cmp
adc
jecxz
into
dec
ret
bound
cmp
das
sub
aaa
sar
jbe
jecxz
into
mov
inc
clc
pop
test
pop
mov
cmp
and
xchg
or
shl
xchg
sbb
and
mov
add
jle
dec
dec
loop
or
in
mov
mov
cmp
jnp
das
std
nop
int3
in
mov
out
adc
mov
inc
or
xchg
adc
sbb
mov
cwde
lea
mov
mov
fisttp
inc
and
cmp
jge
jne
aaa
adc
push
js
ss
sub
aas
jmp
adc
enter
and
gs
mov
call
mov
sti
push
xchg
sbb
inc
out
lds
leave
lea
lods
mov
neg
inc
push
bswap
or
mov
dec
and
xor
cmp
sti
adc
scas
ins
mov
cld
add
and
test
enter
inc
hlt
jle
pop
fcom
ss
pop
push
inc
or
out
arpl
xchg
mov
shl
mov
out
loopne
mov
test
cmp
push
dec
out
sub
ret
popf
hlt
(bad)
sbb
pushf
aaa
cmp
mov
xchg
fs
pop
xrelease
aad
add
or
mov
outs
xor
pop
pop
retf
das
adc
lock
inc
ret
lahf
pop
rol
movntps
mov
xchg
push
xchg
hlt
test
cmc
pop
mov
into
cmps
sub
sbb
jg
fild
fmulp
mov
mov
addr16
xchg
fcom
mov
in
ret
(bad)
mov
ret
and
adc
sub
xchg
outs
bound
xlat
adc
push
push
cmp
arpl
das
inc
jmp
push
xchg
adc
leave
pop
jle
jae
lods
dec
push
out
arpl
aad
fimul
sahf
aas
add
mov
mov
les
(bad)
add
and
pusha
adc
loop
std
mov
sbb
lods
sub
test
clc
popa
sbb
sbb
jecxz
and
push
ret
push
imul
or
loopne
sub
fidiv
mov
test
mov
cpuid
into
sub
add
rcr
inc
jo
xchg
sbb
dec
out
and
pop
fidivr
push
dec
mov
cdq
jnp
jns
mov
adc
xchg
mov
lds
data16
stos
push
pop
fcomip
dec
faddp
scas
jp
add
and
js
in
scas
in
es
or
add
mov
lock
mov
push
dec
push
ds
int
dec
imul
push
and
sub
mov
nop
mov
xor
sbb
or
rcr
shl
inc
xlat
mov
mov
jle
or
xchg
add
repz
xor
adc
inc
and
sub
sti
shl
call
xchg
pop
mov
aam
mov
invd
xchg
mov
adc
out
ins
lods
dec
push
or
sbb
xchg
(bad)
cli
sbb
mov
mov
sub
jmp
clc
cmp
adc
push
jge
jne
mov
pop
rcr
xchg
rcr
mov
leave
out
arpl
dec
adc
call
cmp
ficom
cwde
dec
sar
pop
dec
sar
xor
test
and
in
mov
inc
das
movs
stos
bnd
jmp
adc
mov
retf
movs
ins
jnp
pop
call
pop
test
cmc
xchg
push
mov
sbb
outs
sub
dec
jg
xor
xchg
sahf
ret
test
push
inc
xchg
xor
lahf
ins
add
pop
nop
int
cmp
and
xor
cdq
pop
mov
mov
sti
xchg
adc
push
imul
call
(bad)
fist
push
sub
adc
sub
inc
test
mov
sbb
ins
and
push
rcr
icebp
cdq
mov
push
lods
ja
jmp
sub
pop
out
push
(bad)
inc
inc
inc
add
dec
inc
xchg
pop
imul
xchg
in
jae
pop
mov
sub
add
jo
xchg
mov
lods
adc
mov
push
adc
popa
jns
mov
out
xor
jbe
mov
mov
in
jno
lahf
sub
push
rol
fsubr
mov
rcr
jnp
inc
sahf
xor
push
add
mov
pop
movs
sti
in
cmp
xchg
mov
pop
mov
(bad)
out
loope
(bad)
retf
(bad)
out
cmps
adc
xor
dec
sub
or
aaa
sub
cmp
sbb
mov
dec
ins
das
fmul
jle
movs
and
cmp
xchg
dec
push
xor
out
hlt
and
stos
mov
ror
lds
push
mov
or
hlt
jecxz
int3
sahf
pop
pop
shr
leave
inc
mov
inc
cli
fld
jle
pop
sub
bound
test
jnp
and
gs
out
aas
or
xor
cmp
icebp
jbe
cmp
add
sahf
stos
jl
jnp
inc
xchg
in
shr
test
(bad)
add
mov
sub
cs
dec
jmp
(bad)
xchg
in
pcmpgtd
pop
inc
test
sub
inc
push
push
mov
fnstcw
(bad)
fbld
xor
ja
fs
mov
mov
mov
repz
cli
dec
fild
mov
inc
fadd
fdiv
adc
cmps
and
or
sub
arpl
int
dec
call
sbb
mov
cmp
mov
test
and
add
mov
push
les
out
xor
jns
cwde
or
retf
dec
dec
fdivr
and
out
sbb
mov
mov
xchg
cmp
pusha
sbb
pop
hlt
mov
test
mov
nop
mov
lock
sbb
loop
(bad)
cs
cmp
lods
xchg
mov
xlat
repz
ficom
clc
push
(bad)
pushf
nop
xchg
push
jae
ja
int3
mov
mov
sub
fninit
adc
into
jmp
stos
cdq
or
pop
sub
push
jp
xchg
mov
gs
pop
rol
mov
fist
mov
pop
dec
sub
jmp
mov
fisubr
hlt
shl
adc
out
ja
jae
cmp
jae
sbb
daa
gs
xchg
test
out
inc
mov
imul
push
lods
sub
add
dec
sar
cli
push
inc
jb
icebp
mul
loopne
xor
call
popf
(bad)
js
retf
les
retf
and
xchg
push
mov
leave
mov
pop
mov
xor
dec
add
sti
mov
jp
or
and
xor
sbb
fdiv
and
test
stos
or
clc
jb
shl
push
pushf
ins
loopne
mov
sub
movs
inc
sbb
lds
popa
inc
jmp
outs
inc
das
aas
or
test
loop
vmovdqu
mov
popf
and
test
stos
cdq
call
push
push
cmp
sub
mov
xor
lods
add
mov
shl
jmp
inc
adc
fadd
jge
pop
xchg
sar
mov
out
or
cs
xor
test
xchg
mov
imul
push
mov
xchg
ret
test
fistp
jl
add
imul
out
sub
sar
sub
in
test
mov
inc
sahf
pop
xlat
inc
fmul
out
out
pop
or
adc
repz
pop
pop
jge
mov
data16
daa
jno
pop
push
mov
adc
(bad)
scas
inc
cmps
mov
ret
push
push
pop
sbb
(bad)
push
je
call
movs
sub
jp
ja
adc
mov
div
shl
push
cmp
pop
add
retf
enter
sti
or
mov
dec
popf
xor
sbb
pop
mov
sbb
icebp
call
xor
popf
or
mov
and
sub
(bad)
sub
std
adc
in
sub
(bad)
pop
xchg
pop
es
or
xor
pusha
push
jo
xor
loop
lea
ss
mov
(bad)
fwait
cmps
adc
pop
fisub
adc
bound
shl
add
cwde
mov
lea
and
mov
adc
and
adc
scas
mov
sub
call
aas
sahf
enter
fwait
push
repz
loop
mov
sahf
mov
sub
sub
jge
call
gs
imul
ss
dec
adc
adc
mov
jmp
push
cmp
daa
ret
fnsave
test
aad
pop
scas
push
shr
push
call
or
cmps
or
ret
fstp
cmps
inc
int3
rcl
pop
ds
loope
sub
pusha
sbb
(bad)
jns
pop
inc
xor
je
fwait
sbb
dec
ret
jae
cmp
and
mov
int
xchg
js
retf
xor
imul
push
jns
cmp
fadd
cld
pusha
retf
dec
pop
cmp
mov
iret
pop
pusha
jns
hlt
mov
cmp
out
in
lock
jo
aam
push
xor
inc
test
lds
cmp
int3
jmp
jmp
inc
sar
scas
sahf
daa
cdq
cmc
retf
loopne
(bad)
data16
mov
iret
jb
aad
stos
push
fdivp
xchg
bound
and
not
and
adc
out
cmp
inc
daa
push
shl
mov
xchg
inc
inc
or
imul
shl
inc
int
call
xchg
push
paddusw
sbb
dec
mov
lahf
repz
push
cli
jmp
loop
sbb
mov
sub
xor
pop
data16
ss
mov
sub
arpl
mov
mov
mov
lds
test
fs
sub
aam
sbb
jmp
pop
out
out
(bad)
adc
add
mov
jo
in
enter
in
dec
and
push
cmp
xor
xchg
and
xchg
call
xor
mov
test
inc
ins
xchg
dec
mov
inc
ds
jbe
cld
mov
mov
or
pop
scas
jmp
xor
push
(bad)
jae
xor
das
sbb
jg
jmp
and
daa
mov
leave
idiv
in
sbb
addr16
jo
sti
mov
xchg
cli
(bad)
(bad)
jb
inc
cmp
fnstenv
js
shl
xor
mov
test
out
gs
fisubr
popf
out
adc
sbb
sub
adc
xchg
add
push
mov
xchg
loop
and
push
and
xchg
(bad)
sub
cmp
sar
adc
push
adc
jae
gs
ja
call
lds
pop
pop
shr
jb
push
xor
mov
cmp
icebp
jmp
test
and
xchg
mov
jae
jno
shl
add
fisubr
aam
mov
or
add
in
jl
cmp
pop
pop
fs
sahf
add
retf
(bad)
rcr
mov
shl
out
loopne
shr
xchg
pop
es
sti
(bad)
jp
adc
xor
add
enter
mov
ret
push
mov
(bad)
(bad)
inc
ds
mov
or
rcr
gs
cdq
jo
push
and
mul
out
pop
add
dec
stc
mov
cmp
dec
mov
int3
mov
fidivr
jle
aaa
enter
pop
push
pop
or
mov
lock
push
sbb
jbe
movs
adc
sub
or
or
ror
cmp
mov
push
pop
scas
and
push
pop
mov
pop
je
popa
sbb
or
jb
daa
sbb
cs
and
dec
mov
lock
ds
sbb
out
cmp
sub
cwde
add
adc
or
adc
cs
loop
sub
in
(bad)
int3
pop
scas
cmps
popf
push
jg
stc
stos
rcl
pop
movs
rcl
cmps
into
fnsave
arpl
mov
sub
mov
test
aam
xchg
sbb
lock
mov
ja
(bad)
xchg
retf
pop
aaa
ret
sub
test
cs
xor
leave
adc
push
push
or
mov
inc
fwait
(bad)
pop
sub
jl
or
mov
pop
and
push
mov
jno
sahf
cmp
aas
adc
icebp
je
sub
cli
push
and
shr
adc
xor
icebp
cmp
arpl
in
mov
xchg
jmp
outs
je
shr
push
push
fstp
das
mov
mov
pushf
sti
sahf
or
mov
cli
mov
ss
mov
aas
pop
push
cmp
retf
pop
test
adc
and
or
loope
nop
data16
dec
inc
ret
jae
sub
stos
sub
js
ret
push
test
icebp
dec
int3
push
lods
jo
add
loop
sbb
cmp
push
push
adc
aad
rcr
push
push
and
xchg
sub
add
jb
and
(bad)
pop
jb
pop
xchg
jne
daa
scas
push
out
push
lahf
fs
hlt
dec
loopne
imul
dec
lock
adc
cmp
int3
not
outs
mov
out
pusha
mov
mov
pop
mov
ret
mov
adc
jnp
or
fiadd
mov
or
inc
int
xchg
imul
std
cmp
mov
mov
dec
cmp
aam
int3
fst
jecxz
pusha
xor
int3
in
xchg
push
xchg
retf
sbb
push
rcl
mov
addr16
adc
mov
dec
sub
out
shl
in
daa
(bad)
mov
xchg
mov
xchg
xor
in
and
retf
popf
xchg
fwait
inc
rol
out
arpl
xchg
push
jg
sti
jecxz
pop
aad
nop
adc
fdiv
mov
mov
dec
pop
mov
shl
sbb
and
ret
add
adc
pop
loopne
sahf
fst
sar
xor
int
ss
dec
push
push
sub
pop
call
ror
jmp
shl
push
fstp
jmp
cwde
pop
cli
push
pusha
jge
or
jo
jns
neg
(bad)
mov
in
lea
and
mov
push
xchg
aas
fiadd
xor
mov
sub
mov
rcr
xchg
outs
cmp
(bad)
fadd
mov
push
arpl
(bad)
fs
ss
movs
add
retf
push
mov
fist
sbb
retf
repz
inc
ret
(bad)
cmp
push
iret
push
mov
cwde
dec
adc
popf
imul
mov
push
mov
out
xchg
jne
inc
add
lock
jmp
fs
adc
pop
xor
xchg
outs
mov
mov
pop
dec
std
inc
popf
(bad)
cmps
pop
in
in
mov
or
adc
mov
sub
mov
ja
scas
scas
retf
and
inc
and
out
inc
xor
push
adc
test
jp
mov
and
jle
sbb
seto
(bad)
mov
sub
aam
jnp
inc
outs
push
shl
popf
pop
cmp
fs
xchg
frstor
das
ret
jo
mov
push
lock
pop
(bad)
in
sub
jb
cs
push
icebp
(bad)
cmp
push
and
pop
cmps
mov
loope
scas
or
sub
sbb
adc
call
pop
or
movs
test
aam
loope
and
in
pop
xor
movs
stos
rcl
sbb
in
dec
ret
call
lods
jp
or
sbb
in
push
mov
sub
and
push
test
sahf
rcl
int3
xchg
test
pop
adc
out
outs
sbb
mov
repz
divps
sub
in
xchg
push
mov
(bad)
clc
push
ret
inc
pop
cwde
data16
pop
pop
jnp
push
inc
push
pop
adc
test
or
or
out
push
out
xor
inc
into
fsub
out
vfmadd132ss
fsubrp
jg
push
mov
test
loopne
loop
sub
bound
mov
mov
mov
add
push
loope
sbb
sar
dec
mov
imul
and
fistp
into
mov
daa
mov
(bad)
stos
dec
mov
idiv
mov
fmul
dec
and
mov
lea
pop
mov
or
sar
iret
mov
aam
mov
xor
je
and
push
cmp
outs
xlat
mov
mov
and
imul
mov
mov
imul
jmp
stos
sub
dec
mov
mov
std
test
dec
mov
movs
aad
lahf
mov
sub
sbb
das
lahf
push
adc
jno
jnp
jge
mov
shl
(bad)
mov
push
or
(bad)
xchg
xor
add
xchg
and
mov
push
xchg
call
jge
gs
xchg
pushf
mov
outs
add
aam
paddw
dec
xchg
mov
push
fsubr
mov
sub
lea
add
lods
push
mov
loop
(bad)
(bad)
test
xor
mov
xor
test
inc
les
movs
idiv
mov
ss
dec
jp
xor
mov
jl
enter
aas
dec
or
xor
aas
dec
out
push
shl
fadd
ret
inc
adc
aad
pop
mov
xchg
or
test
or
out
dec
ficomp
push
sub
clc
cmp
lea
std
std
or
out
retf
jbe
retf
mov
movs
scas
or
and
push
nop
rcr
mov
pushf
aas
movs
sub
xor
movs
icebp
inc
dec
shr
je
loopne
add
rcr
invd
or
stc
mov
mov
mov
jmp
das
add
cmp
sbb
or
or
and
daa
arpl
dec
inc
sbb
sar
add
stc
es
clc
jge
cmp
(bad)
sti
push
dec
out
or
inc
sbb
add
stc
in
lods
pop
mov
data16
imul
mov
jns
pop
ins
call
retf
js
popf
mov
cmp
das
adc
hlt
inc
add
mov
and
mov
(bad)
(bad)
sbb
mov
ficomp
ss
fmul
scas
cmc
push
dec
int
out
jbe
dec
mov
nop
test
add
js
adc
sub
pop
(bad)
push
inc
nop
cmps
dec
xor
outs
push
jmp
xor
mov
jp
sar
addr16
icebp
and
pop
in
call
sub
enter
sbb
jl
xchg
stos
imul
sbb
push
mov
into
arpl
das
adc
cmc
je
or
jb
test
repnz
daa
sbb
fwait
(bad)
cmps
add
popa
int
sbb
cwde
fs
cwde
fst
cmp
fidiv
sti
aas
mov
pop
sbb
test
das
sti
sti
rol
icebp
inc
xor
cmp
jl
hlt
or
out
add
in
(bad)
iret
das
in
pop
push
cli
sahf
fwait
xchg
xchg
mov
cmps
fcmovnbe
out
mov
mov
add
ret
cmp
jo
enter
xchg
xchg
mov
js
mov
xchg
pop
dec
shl
mov
inc
mov
mov
adc
les
pushf
pushf
mov
out
shld
test
(bad)
(bad)
fisubr
mov
je
add
les
xchg
xchg
in
fisttp
rol
icebp
neg
jl
bound
dec
pushf
jmp
(bad)
sub
push
xchg
pop
cmp
xchg
fcmovnb
pop
div
mov
rol
or
push
cmps
das
sbb
cmp
jae
es
cdq
scas
jmp
mov
mov
into
jge
pop
pop
inc
pushf
ins
cwde
popf
mov
js
jecxz
inc
leave
fisttp
mov
or
lahf
push
lea
push
jo
in
jns
mov
inc
fsave
not
dec
inc
in
ret
adc
cmps
xchg
das
add
outs
imul
pop
xor
cwde
stos
push
ffree
jno
(bad)
and
sbb
outs
rol
pop
lock
inc
cmps
lock
jge
ja
mov
mov
and
stos
pop
mov
out
xor
stc
test
mov
xchg
lods
add
mov
ins
xchg
mov
popa
push
add
adc
jno
xor
lock
les
cmc
rol
bound
fisubr
dec
mov
(bad)
cmc
or
(bad)
xor
repnz
rcl
arpl
or
sbb
and
cmps
jno
push
sbb
movs
adc
sub
vpsrld
hlt
pop
inc
jo
sub
add
setg
jg
stos
jmp
mov
inc
(bad)
ins
repz
lods
adc
pop
sub
mov
aas
bound
shr
test
into
lods
pop
test
xchg
dec
add
scas
lods
sub
sti
neg
in
cmp
push
scas
add
jmp
jl
fiadd
scas
shl
jae
lahf
mov
pop
dec
pop
inc
pop
mov
mov
adc
aas
add
test
out
lea
or
inc
mov
mov
nop
push
and
das
popf
cli
add
dec
pop
mov
imul
mov
movs
mov
or
pusha
sbb
pop
cmc
(bad)
jmp
sbb
loop
xchg
dec
adc
div
(bad)
cmps
mov
cmps
and
sbb
xchg
mov
jne
inc
or
js
push
fnstcw
mov
loop
or
shl
(bad)
sbb
jae
cmps
popa
fdiv
sbb
add
mov
xchg
imul
shl
lods
push
or
sub
addr16
imul
push
adc
jno
mov
sub
addr16
push
call
xchg
dec
mov
dec
mov
sti
xor
mov
push
or
push
jnp
or
cmc
repz
jge
loopne
mov
jmp
test
mov
xor
popfw
nop
jo
ror
add
add
and
xor
mov
pop
push
pop
inc
sar
fwait
mov
stc
outs
inc
pop
mov
movs
sti
(bad)
fldcw
fidiv
xchg
push
mov
dec
mov
jp
pushaw
dec
mov
shl
(bad)
mov
loopne
test
loopne
push
jbe
pop
hlt
popf
pop
nop
pop
push
fidivr
jmp
push
inc
les
jns
mov
icebp
int3
xchg
fs
stos
push
xchg
fwait
push
test
cld
pop
jl
jo
xchg
mov
mov
(bad)
hlt
outs
and
inc
push
not
sbb
push
pushf
fdiv
cmps
xor
pop
add
(bad)
pop
xor
bound
imul
leave
cmp
inc
jecxz
or
jmp
push
(bad)
jno
inc
loopne
lea
les
xor
pushf
test
mov
mov
inc
or
inc
pushf
add
adc
ins
push
mov
dec
sbb
push
enter
sub
jae
int
pusha
je
daa
aam
test
sti
pop
push
fdiv
repz
(bad)
stos
xor
dec
cs
cmp
int
je
jns
push
loopne
xor
xor
cmp
cwde
jae
mov
dec
js
loopne
mov
out
jmp
dec
mov
arpl
or
(bad)
nop
rol
add
clc
retf
loope
dec
mov
mov
pop
inc
enter
stos
nop
and
jmp
test
add
and
outs
inc
retf
(bad)
sti
xor
cmp
outs
ja
lea
fimul
jno
jge
shl
les
mov
jbe
ret
mov
jecxz
mov
les
sub
(bad)
cld
std
adc
adc
ins
les
sbb
je
xor
push
mov
inc
pushf
lahf
cld
call
xchg
push
xsave
jg
aas
adc
shl
add
push
xchg
mov
cmp
cmp
or
shr
fnstcw
sahf
sub
push
repz
dec
xchg
outs
call
dec
mov
fbstp
mov
js
nop
pusha
adc
sub
xchg
adc
imul
call
add
retf
jbe
xor
jmp
mov
rol
add
push
pop
mul
call
jmp
mov
in
dec
xor
or
pop
sub
xchg
xchg
ret
cmps
das
in
push
xor
push
jmp
push
mov
mov
ds
adc
push
(bad)
add
test
rol
push
push
addr16
das
push
push
dec
cmp
scas
ret
mov
cmp
dec
das
fs
fwait
pop
rcl
test
jl
mov
cmp
cmp
(bad)
les
push
mov
cmp
in
add
aaa
dec
fdivr
cmc
aaa
inc
xchg
scas
cmp
pop
xlat
adc
sbb
pop
xor
pop
jg
mov
jp
mov
and
je
mov
out
jge
adc
(bad)
mov
or
pop
loopne
and
pop
xor
jo
pop
lahf
pop
stc
adc
sub
or
in
jo
cmc
sub
jge
mov
test
sbb
dec
jne
out
test
pusha
push
sub
jae
dec
dec
lds
out
jnp
and
sbb
pop
mov
jecxz
push
cmp
into
mov
xchg
retf
rcl
sbb
shl
add
ja
xor
fdivr
jns
xchg
cli
pop
fistp
stc
jnp
mov
xchg
arpl
sahf
xchg
push
add
cmp
mov
dec
pop
ficomp
movs
cs
ins
cmp
mov
mul
sub
hlt
sbb
fs
inc
adc
inc
jge
je
test
hlt
ret
xchg
push
test
es
xchg
call
mov
jecxz
mov
rcl
shl
sahf
das
xchg
loopne
(bad)
retf
retf
xchg
sbb
lock
enter
mov
sbb
cmp
dec
in
fild
mov
adc
xchg
or
add
mov
ret
in
std
and
nop
mov
aam
adc
out
sub
cmp
mov
dec
sbb
sub
mov
mov
gs
add
ins
jb
push
jp
adc
sub
mov
ds
sub
test
and
sub
call
outs
sub
xlat
or
cwde
push
les
mov
jbe
mov
and
test
sar
xchg
cmp
ins
leave
fisttp
sub
sti
call
nop
xchg
jp
cmp
xchg
push
aad
fisubr
aaa
addr16
fcomp
hlt
(bad)
or
ds
mov
imul
test
cmp
sahf
push
rol
sub
cmp
cmc
push
mov
pop
adc
fistp
sbb
repnz
mov
js
lea
and
in
aad
jne
jmp
ret
inc
popf
movs
imul
pop
adc
aam
dec
pushf
dec
mov
fcmovnbe
clc
nop
cmp
inc
adc
out
(bad)
rol
push
in
mov
rcl
or
scas
mov
aas
inc
xor
sub
std
sbb
jge
cmp
xor
popf
loope
sub
inc
outs
repnz
loop
mov
into
push
or
pop
push
out
in
pusha
inc
push
add
ins
movs
cli
stos
mov
int3
mov
jne
js
jg
and
scas
inc
out
adc
jmp
jp
and
jno
mov
and
rol
out
push
in
addr16
inc
loop
or
fstp
inc
mov
mov
sub
push
mov
adc
test
pusha
pop
pop
enter
in
dec
dec
pop
jns
je
add
pop
call
neg
sub
or
sub
into
hlt
pusha
and
ffree
mov
cmp
and
adc
mov
jns
int
push
xor
mov
call
jmp
push
fild
inc
mov
iret
lea
rdmsr
mov
pop
test
arpl
ret
dec
push
fsub
addr16
stc
mov
add
test
call
or
icebp
hlt
inc
enter
mov
xchg
jg
sbb
xlat
clc
jle
retf
mov
int3
cmp
aas
repnz
mov
test
loop
or
lahf
lods
cmp
fcomp
lock
jge
inc
aad
lds
test
sahf
pushf
(bad)
pop
cmp
jmp
mov
pop
xchg
jmp
into
pop
aam
(bad)
mov
push
mov
mov
cmc
xor
mov
jno
push
mov
adc
jg
push
imul
mov
mov
shl
std
lods
mov
mov
nop
popa
cli
sbb
xor
sub
in
sti
jp
retf
movs
lods
bound
in
jge
xor
or
xchg
sbb
and
sbb
js
inc
sbb
cmp
sbb
mov
pop
in
pop
pop
(bad)
mov
jbe
add
add
loop
mov
aam
jbe
xor
call
push
fldcw
dec
inc
ins
jae
fisubr
fldenv
popa
cdq
pop
loope
xchg
fiadd
jge
dec
out
gs
fwait
enter
sub
into
jae
aaa
or
fimul
and
mov
not
and
inc
pushf
les
sbb
imul
mov
and
(bad)
mov
adc
push
in
xchg
xor
xor
aam
addr16
sub
cld
pop
iret
(bad)
xchg
inc
push
push
mov
jb
dec
fs
ja
data16
repnz
ja
pop
ins
sbb
push
jo
gs
mov
push
mov
sbb
dec
leave
test
ss
icebp
stos
test
in
shl
lahf
xor
cmc
push
ffreep
pop
mov
xchg
pop
cmps
xor
or
jae
push
jns
inc
lahf
add
xor
xchg
icebp
mul
xchg
xor
in
and
mov
jmp
pop
shr
or
push
in
fsubr
lods
mov
xor
xor
jmp
and
inc
in
imul
ins
int3
sbb
hlt
push
push
dec
std
jmp
push
and
pushf
xchg
mov
pop
mov
aad
xchg
ins
mov
aam
imul
pop
stc
mov
ror
mov
loopne
gs
xor
and
and
test
enter
sub
addr16
fwait
mov
inc
std
imul
ja
sub
out
lock
pop
adc
repz
leave
add
mov
adc
push
and
ret
cmc
add
jmp
mov
data16
jg
sbb
movs
(bad)
(bad)
test
retf
pop
cwde
sbb
(bad)
adc
adc
inc
pop
pop
cs
xchg
ror
sub
mov
mov
les
dec
shr
jno
and
lods
or
inc
movs
into
and
mov
repz
pop
xor
ins
pop
mov
mov
jecxz
gs
jae
or
mov
xor
inc
xor
pop
retf
aam
push
call
push
daa
(bad)
jae
fisub
xor
cmp
daa
sub
xchg
mov
fisubr
jmp
sub
or
cmp
(bad)
cmp
outs
jmp
push
std
cmp
sub
arpl
mov
outs
mov
push
nop
jmp
mov
daa
jmp
pop
bound
sbb
mov
xchg
jbe
test
mov
xor
push
loope
stos
xor
jl
hlt
out
retf
movs
jge
pusha
imul
push
mov
add
test
sub
je
push
pop
sbb
jnp
fild
in
jmp
je
sub
ins
mov
int
outs
add
(bad)
in
gs
add
jmp
and
out
pushf
add
mov
outs
mov
scas
test
mov
ds
or
(bad)
js
movs
sub
push
cmp
(bad)
fldenv
repnz
inc
jg
fst
div
sti
jne
movs
aad
cmp
gs
jp
jecxz
mov
es
xchg
cli
sbb
in
pop
int
das
push
dec
movs
movs
es
cmp
mov
xchg
(bad)
outs
scas
ins
sub
and
adc
cmps
stc
ror
es
jecxz
mov
mov
mov
icebp
lea
sbb
push
cmp
fld
icebp
push
mov
rol
test
mov
push
sti
pop
in
movs
gs
int
dec
inc
mov
mov
out
int
(bad)
stc
(bad)
ffree
popf
mov
jp
add
mov
daa
inc
movs
pop
mov
add
inc
push
data16
out
dec
add
jmp
leave
cmps
xor
dec
in
ret
cli
inc
ja
int
popf
push
dec
sub
push
xor
mul
movs
ficomp
add
or
pop
inc
test
pusha
inc
outs
and
mov
lea
je
into
adc
packsswb
cmc
add
mov
jnp
inc
je
call
fcomip
xor
sub
push
mov
dec
adc
jmp
movs
and
dec
sbb
popf
mov
test
pop
cmp
jo
mov
xor
popf
int3
aad
pop
or
mov
mov
jb
das
(bad)
and
out
pop
cmp
dec
sub
scas
sub
gs
popf
and
jecxz
test
enter
pop
sahf
push
(bad)
das
lahf
ror
or
xchg
mov
adc
test
test
mov
push
dec
bound
pop
je
mov
ss
out
xchg
mov
mov
stos
push
scas
fldcw
cmp
or
fstp
pop
mov
xchg
(bad)
out
sti
out
pop
xor
mov
cmp
das
xor
xor
xor
cmp
aaa
or
imul
adc
mov
mov
cmps
mov
dec
shr
repz
cmps
xor
fidiv
movs
pop
jp
addr16
stos
push
add
out
xchg
mov
xor
or
adc
mov
xchg
pop
in
psllq
cwde
call
(bad)
fdivr
outs
adc
or
fidivr
repz
out
xchg
mov
adc
psubq
jmp
xchg
sub
mov
(bad)
push
retf
push
push
pop
jg
loope
call
int3
push
adc
push
adc
(bad)
push
xor
dec
dec
ret
cld
out
dec
in
mov
loope
mov
outs
or
repnz
inc
scas
add
std
mov
in
ret
or
mov
lods
enter
dec
xchg
add
add
call
in
sub
add
ret
call
xchg
inc
or
ret
dec
daa
in
xchg
pop
adc
jge
lods
cmp
jbe
add
call
xchg
cli
inc
pop
gs
lahf
sbb
sub
pop
retf
in
push
mov
xchg
mov
in
add
jmp
mov
add
and
mov
adc
push
shl
ror
mov
sahf
sub
aaa
cli
mov
pop
inc
dec
aas
(bad)
es
ret
loop
dec
jmp
loope
call
sar
pop
pop
mov
(bad)
(bad)
not
iret
xchg
fucomp
lds
jp
retf
mov
or
push
loope
jmp
push
push
pop
test
loope
call
cmp
mov
adc
push
dec
xchg
push
cmp
shl
inc
pop
retf
inc
psubd
nop
add
dec
dec
stos
sar
mov
je
popf
xchg
test
repnz
arpl
iret
sbb
stos
ficomp
test
add
inc
fwait
dec
stc
mov
adc
retf
mov
pop
mov
mov
cli
add
ss
add
repz
or
(bad)
xchg
push
rol
mov
in
cwde
movs
arpl
call
push
cmp
fidivr
addr16
mov
jne
mov
push
pcmpgtb
mov
pop
bound
ss
inc
das
rep
push
and
ret
js
mov
or
stos
mov
ins
je
lods
inc
jecxz
fnstcw
dec
xor
dec
cmp
sub
cmp
dec
sbb
adc
xchg
into
adc
mov
jnp
fstp
mov
and
rcr
test
mov
or
mov
shl
xchg
popa
cmp
fs
inc
mov
and
nop
(bad)
cmp
repnz
daa
adc
sbb
add
scas
movs
xor
mov
jo
scas
add
in
cwde
mov
mov
cmps
adc
repz
mov
sub
and
fwait
retf
imul
ret
or
stos
adc
leave
pop
in
adc
es
rcr
movs
push
inc
pop
add
mov
push
pushf
sbb
cli
daa
push
jg
mov
neg
stos
fild
mov
adc
lods
cmp
retf
pop
fadd
lods
inc
repz
pop
(bad)
xchg
or
cdq
mov
cld
pop
es
pop
mov
xchg
shr
jmp
je
add
add
std
and
call
xchg
sub
sti
dec
shl
sub
adc
(bad)
out
lock
movs
imul
add
add
stos
mov
xor
aam
leave
push
(bad)
xchg
xchg
lahf
test
push
daa
call
adc
xchg
in
dec
je
inc
test
popa
jbe
repnz
pop
stc
mov
pop
ja
cmc
out
popf
lahf
jmp
xor
or
div
cmp
mov
enter
stos
inc
jb
mov
push
es
rol
pop
mov
imul
ficom
out
sbb
out
add
call
call
leave
or
stc
push
fisub
jno
aas
mov
inc
push
cs
xchg
stos
push
mov
shr
retf
loop
push
push
movs
jg
sub
xor
ja
mov
push
mov
ins
push
arpl
out
xchg
pop
mov
xchg
(bad)
nop
int
stos
jle
int3
es
mov
loop
(bad)
cmc
push
fwait
adc
out
inc
jne
imul
inc
cmp
test
push
dec
fs
and
mov
ss
cdq
mov
daa
sbb
(bad)
sbb
pop
xchg
mov
jns
push
mov
adc
mov
ja
mov
xlat
mov
test
dec
pop
push
add
dec
mov
or
mov
arpl
out
and
mov
ret
push
cld
fld
aad
mov
stos
ins
dec
fstp
loop
sub
imul
mov
fstp
mov
popa
stc
dec
scas
aam
mov
jnp
daa
and
inc
retf
pop
push
sbb
sbb
mov
push
dec
add
cmp
mov
test
add
nop
dec
dec
pop
sbb
pop
in
out
repz
sub
in
adc
or
cmp
jns
stos
in
push
mov
dec
cld
cmps
mov
cmp
pop
or
mov
js
jmp
repz
jns
outs
push
shl
dec
jnp
mov
ret
in
pop
xor
cld
stos
lock
movs
sbb
addr16
retf
ror
int3
nop
and
aas
pushf
imul
adc
imul
lds
test
and
mov
mov
in
pop
mov
cmp
cmp
into
adc
and
mov
mov
pop
lahf
mov
inc
cmp
loopne
sbb
xchg
(bad)
mov
mov
push
add
lods
stc
sti
jmp
(bad)
adc
xchg
mov
repnz
out
jae
or
adc
sti
add
adc
frstor
push
pop
daa
and
inc
jae
or
es
push
dec
or
xor
hlt
stos
movs
int
(bad)
jb
imul
jne
xor
(bad)
pop
push
cli
(bad)
or
ret
call
inc
je
jno
stos
pop
adc
jo
jae
call
mov
test
mov
xlat
(bad)
jae
mov
sub
mov
mov
or
data16
in
test
mov
inc
sub
or
mov
sar
stc
pop
add
outs
lods
into
cli
fisub
jb
(bad)
bound
and
stos
lahf
movs
stc
mov
enter
push
cs
and
fnstenv
dec
ffree
enter
sbb
dec
xchg
add
shr
jle
test
mov
ja
lds
inc
hlt
fdiv
sub
xchg
mov
in
jno
in
mov
call
loopne
hlt
retf
add
sub
push
lods
pop
fwait
inc
and
pusha
jne
fwait
jb
stos
mov
aad
test
mov
mov
lahf
call
dec
leave
out
mov
outs
mov
int3
enter
or
ret
xchg
cmp
scas
addr16
adc
cmp
jl
inc
inc
mov
sbb
cmps
push
jno
adc
jae
jg
push
push
repnz
xor
sti
je
loope
xchg
ins
daa
inc
mov
mov
pop
(bad)
aaa
xchg
jp
(bad)
pushf
stos
ror
out
pop
pop
cmp
push
int3
push
xchg
jnp
push
cmp
aam
fwait
xchg
das
dec
jle
fnsave
push
daa
fidivr
clc
mov
das
adc
scas
push
add
test
(bad)
mov
ds
lahf
and
repnz
sub
pop
pushf
int
shl
call
pop
dec
adc
(bad)
cmp
jae
push
fiadd
out
daa
xchg
dec
mov
outs
add
fsub
mov
pop
dec
mov
cdq
scas
dec
ins
fyl2xp1
sub
(bad)
int
jns
jae
jge
adc
dec
int3
or
daa
xchg
das
dec
adc
inc
hlt
mov
out
sbb
sub
mov
jns
ds
inc
ins
ins
add
jbe
pop
add
inc
scas
pop
adc
and
test
ins
jo
movs
mov
(bad)
mov
mov
add
and
repz
dec
xchg
mov
inc
jmp
cli
mov
scas
(bad)
jno
lods
in
sahf
push
adc
cmp
mov
ja
imul
(bad)
popa
adc
xchg
xor
inc
and
lods
imul
shl
ret
test
scas
xchg
jmp
add
mov
add
mov
jbe
mov
mov
(bad)
lods
dec
in
push
lods
pop
mov
jle
ins
or
jnp
sub
cdq
mov
mov
push
xchg
mov
adc
mov
xchg
mov
pop
imul
jl
ins
shl
stos
jg
and
pusha
rcl
jns
mov
mov
(bad)
xchg
inc
adc
jno
pop
mov
retf
out
push
add
sar
mov
in
cmp
jae
and
mov
xchg
sub
fwait
xchg
lahf
sub
adc
xchg
sub
adc
cld
sub
pusha
dec
cmp
loop
out
mov
adc
xchg
(bad)
sub
fst
dec
sub
pop
adc
enter
retf
aas
pop
fisub
xor
sub
cwde
xor
inc
mov
neg
jle
jmp
fwait
pop
cdq
idiv
sbb
mov
movs
gs
jg
(bad)
pop
jae
jbe
ds
inc
or
leave
xchg
sahf
pop
pop
ror
mov
jmp
jmp
jle
ja
(bad)
sub
adc
fmul
mov
pushf
movs
push
xchg
mov
ins
pop
jno
fwait
jne
in
dec
into
jno
sahf
retf
aas
leave
dec
test
(bad)
fldenv
stc
mov
mov
jp
add
mov
sub
sub
jne
pop
inc
pusha
mov
std
pusha
inc
jge
syscall
and
adc
mov
je
sbb
dec
ja
xchg
add
pop
sbb
mov
push
shl
sbb
imul
aaa
xchg
pop
push
adc
add
dec
sub
lods
mov
cmp
dec
loope
movs
jmp
sbb
test
stc
adc
in
je
and
(bad)
imul
mov
adc
jo
add
add
stos
fwait
pop
cdq
(bad)
mov
loope
or
lahf
mov
xchg
cwde
mov
and
out
cmp
mov
outs
(bad)
jg
jne
cmps
lea
scas
scas
cdq
mov
(bad)
sub
cmc
aas
or
mov
imul
push
mov
aas
loop
fidivr
pop
push
sar
jb
movs
fcom
jmp
ins
ret
(bad)
jge
retf
(bad)
stos
mov
sub
pop
in
popa
sub
push
test
adc
cmp
mov
push
mov
inc
adc
add
push
push
mov
imul
cmp
xor
aaa
xchg
call
std
rol
dec
test
mov
inc
imul
inc
push
je
popa
jo
rcl
lods
int
jns
loopne
ins
pop
out
xlat
xchg
(bad)
cmp
xor
and
jmp
cmp
imul
xor
cmp
cmp
addr16
fcmovnb
lahf
shl
movs
repz
fsub
push
mov
mov
sbb
push
lds
imul
fidiv
(bad)
es
jb
jmp
mov
test
inc
dec
push
sub
jb
cwde
jmp
in
push
pop
adc
or
popf
aaa
es
xchg
xor
lods
or
and
aas
sbb
test
std
int
dec
mov
cmp
xor
pushf
aas
sub
scas
lea
dec
pop
or
add
shl
mov
lods
mov
cmp
pop
cld
mov
sub
adc
sahf
addr16
loop
int3
pop
pop
lock
xor
mov
dec
mov
retf
aas
mov
jp
xor
sar
std
push
test
add
pop
adc
movs
ret
sub
and
fcom
inc
xor
mov
sbb
ret
aas
out
arpl
call
jmp
jnp
xchg
sbb
mov
jbe
sub
repz
mov
adc
ds
fs
jo
or
dec
mov
nop
out
mov
add
and
ds
ror
mov
sub
xchg
sub
pop
(bad)
lods
psubb
dec
movs
aam
cs
xchg
and
shl
dec
ror
lds
outs
sbb
ret
inc
shr
shr
js
std
loopne
fs
retf
(bad)
imul
sbb
sub
fistp
xchg
(bad)
fadd
loope
ds
(bad)
test
(bad)
sar
push
sbb
or
sbb
inc
xchg
les
(bad)
(bad)
enter
test
movs
into
adc
cmp
cmp
push
retf
pop
xchg
add
jns
repnz
lea
xor
sub
jge
xor
lods
or
sub
imul
in
dec
sti
jae
push
and
lods
push
and
xor
sbb
cdq
lea
mov
push
into
or
mov
dec
mov
sub
mov
mov
pop
sti
and
cmp
pop
lods
add
adc
jecxz
sub
jns
test
aas
inc
sbb
inc
add
pop
cmp
daa
mov
mov
sbb
dec
sub
cli
(bad)
shl
je
adc
sar
dec
fild
aaa
in
push
hlt
cmp
icebp
fmul
movs
out
int
jl
push
popf
icebp
sbb
leave
mov
pop
push
sbb
lea
adc
adc
dec
popa
mov
jge
jg
inc
int
sti
adc
sar
jle
dec
push
and
retf
jle
mov
out
push
or
xor
jge
js
jne
push
mov
cmc
ins
jmp
cmp
into
cwde
xor
mov
jae
dec
je
aam
mov
mov
out
jp
dec
nop
inc
(bad)
aad
mov
lods
xchg
test
sub
sbb
push
push
ret
(bad)
pop
xchg
(bad)
ins
mov
and
out
xchg
ja
popf
aas
cmp
mov
repnz
ror
xchg
shl
lods
fcomp
int
sub
pop
xor
push
pop
xchg
add
shr
cmp
cmp
jle
arpl
aaa
or
addr16
setl
ret
sbb
jb
pop
fmul
sbb
daa
mov
sbb
cdq
movs
inc
sub
push
cmps
jp
lods
mul
xchg
cdq
cli
mov
and
add
sub
cwde
dec
rcr
xchg
jmp
in
stos
enter
inc
scas
not
sbb
jp
push
out
dec
sahf
mov
xor
xor
outs
les
adc
scas
xchg
pushf
push
sub
pop
loop
loopne
xchg
call
xlat
fwait
mov
push
pop
stc
sti
es
cmp
jae
cmp
add
mov
call
jbe
std
push
fisttp
jl
pop
or
cld
or
aas
ins
add
mov
jb
xchg
mov
test
mov
cld
ins
aam
shr
jb
or
out
scas
ja
mov
jmp
add
adc
aad
out
xor
hlt
push
sar
sub
sub
cmps
adc
sub
xchg
dec
cmps
jne
xor
stos
mov
ins
repz
gs
and
adc
or
adc
sbb
push
push
ror
and
xor
jp
nop
movs
jb
sub
pop
les
mov
xor
jns
mov
add
inc
fdivr
mov
add
mov
jae
and
and
add
es
cmp
sub
push
add
shl
fsubp
das
push
(bad)
test
ss
add
sbb
sbb
cmps
adc
sub
addr16
bnd
mov
cmps
xor
xchg
shr
or
jns
into
or
jmp
cmp
pusha
int3
dec
add
sub
iret
pop
adc
pop
mov
mov
sar
mov
addr16
mov
push
jl
push
xor
mov
mov
jnp
lock
mov
iret
aam
pop
add
lods
iret
mov
aam
movs
pop
push
out
xchg
push
jns
and
rol
push
xchg
and
popf
(bad)
pop
lea
retf
sbb
push
xor
shl
and
test
xchg
mov
jecxz
fadd
sub
mov
lahf
sub
sti
jno
(bad)
ss
rcl
ss
enter
mov
push
(bad)
js
out
dec
out
jno
in
lds
mov
push
movs
scas
dec
neg
std
test
or
cld
into
mov
add
sar
jmp
mov
scas
ret
and
mov
jmp
dec
inc
aaa
xchg
inc
mov
js
test
retf
cmp
repz
dec
xchg
and
idiv
hlt
loopne
xor
push
add
push
mov
les
push
cdq
or
sar
scas
lahf
adc
mov
sar
ins
xchg
pop
ins
ins
imul
retf
(bad)
cli
in
add
pop
pop
jo
bound
add
(bad)
rcr
cmp
stos
neg
call
jnp
stc
fiadd
pop
fstp
jecxz
and
enter
mov
mov
cmc
cmps
and
cmp
push
dec
xchg
stos
rcr
pop
(bad)
loopne
pushf
(bad)
sub
repz
out
cld
cld
jle
add
inc
aas
sahf
xchg
not
ret
sub
pusha
pop
xchg
ins
ffree
std
add
out
mov
mov
pop
or
arpl
in
das
(bad)
dec
xlat
sub
es
mov
or
xchg
jle
xor
push
xchg
es
push
pop
inc
ss
xor
test
pop
ret
xchg
jbe
dec
bound
stos
or
icebp
ror
sub
out
adc
ds
imul
sub
arpl
arpl
out
fisub
push
dec
cs
imul
jmp
adc
retf
xchg
nop
stos
or
inc
(bad)
aad
pop
mov
fsubp
das
loop
xchg
loopne
adc
ret
lds
aas
fstp
xor
sub
bound
xchg
inc
jmp
push
pop
dec
out
push
jbe
gs
(bad)
or
aas
scas
sbb
fistp
hlt
push
pop
inc
addr16
or
push
hlt
add
dec
cmp
mov
mov
mov
dec
jl
mov
pop
das
xchg
bound
dec
mov
js
push
dec
jmp
fistp
nop
add
push
outs
add
pop
das
xor
mov
aaa
jns
arpl
cli
imul
fiadd
mov
(bad)
push
inc
adc
ja
jg
mov
out
push
loop
aad
inc
imul
cwde
sbb
and
pop
(bad)
inc
dec
push
sbb
lds
loopne
push
mov
cs
jmp
shl
sbb
sbb
scas
mov
xor
sub
cmp
repnz
cmp
or
push
int
mov
add
(bad)
popa
enter
(bad)
cmps
or
pop
mov
movs
jl
jmp
xchg
rol
outs
cwde
call
in
adc
xchg
iret
mov
inc
lods
pand
sbb
xor
or
and
loop
in
push
cmp
adc
xchg
out
je
sbb
(bad)
div
cmps
into
sar
or
inc
xchg
mov
xchg
pop
adc
or
fcom
pop
xchg
aas
loopne
mov
fisub
out
(bad)
dec
push
adc
bound
cmp
icebp
xchg
pop
outs
sub
sti
out
xchg
add
(bad)
in
sub
nop
push
cmp
adc
pop
test
push
jle
out
into
mov
jg
pop
inc
jg
test
push
adc
dec
pop
push
nop
xchg
inc
lock
fs
gs
lea
jmp
retf
jnp
fmulp
mov
sbb
(bad)
xor
xchg
bound
mov
outs
inc
fistp
jnp
nop
call
push
pop
call
xchg
cdq
jb
jno
stos
jecxz
pop
add
jecxz
mov
push
mov
js
mov
adc
pop
in
fcom
aaa
sub
jp
arpl
(bad)
inc
int3
jg
dec
pop
jne
bound
in
fnstsw
movs
jnp
dec
loopne
inc
sti
jns
mov
push
adc
jae
pop
mov
push
shl
pop
mov
dec
std
or
jno
jno
xor
add
call
leave
pushf
jmp
add
and
mov
movs
jle
mov
xor
stc
psubd
sub
xchg
(bad)
ror
dec
aad
jne
mov
jmp
dec
lahf
cld
inc
push
mov
inc
sbb
push
enter
sbb
ret
loop
fadd
andnps
test
push
jbe
fwait
cdq
int
push
mov
adc
and
sub
cmp
adc
push
ins
fwait
ret
lock
mov
mov
jg
cmps
sub
fstp
pop
imul
pop
lods
mov
mov
sbb
pop
in
mov
call
test
call
movlps
mov
pop
mov
or
xor
ins
mov
sub
scas
mov
jp
jno
and
idiv
fist
pop
ret
stos
pushf
mov
je
ja
xchg
xor
imul
retf
out
outs
aaa
jnp
or
mov
xchg
pop
dec
call
js
fcom
mov
in
mov
xor
sbb
push
outs
int3
pop
sub
mov
js
cwde
lahf
in
fucomi
out
(bad)
adc
popf
mov
push
repz
ss
cli
(bad)
fild
xchg
sti
push
stos
aam
fistp
cmp
xor
adc
mov
cmp
xor
jge
push
pop
mov
int
jne
or
mov
aas
cmp
xlat
shl
fnstcw
mov
ins
loope
fimul
sbb
mov
dec
adc
sahf
mov
push
xlat
sbb
adc
xchg
mov
adc
out
movs
mov
ja
xchg
or
adc
mov
push
jl
fmul
dec
jno
mov
fild
xchg
inc
pop
xor
scas
sbb
imul
push
mov
xor
add
addr16
mov
sbb
je
mov
and
and
adc
addr16
inc
pop
bound
ret
and
hlt
sar
fdivr
pop
mov
cmp
mov
xchg
movs
js
mov
cmp
sub
dec
xchg
in
mov
mov
jmp
lds
mov
enter
dec
movs
xchg
fld
fucomi
xor
outs
inc
scas
les
inc
inc
pop
dec
fsub
pop
ds
push
mov
push
clc
xchg
xor
call
xor
ret
lock
pop
xor
inc
or
or
das
cmp
cmps
xchg
ret
cmp
or
imul
(bad)
cmp
xor
sbb
push
test
mov
and
inc
xor
movs
mov
push
jecxz
stos
ficomp
dec
xlat
pop
mov
adc
cmc
mov
mov
xchg
loope
fstp
fs
loope
inc
nop
mov
fwait
or
or
fadd
and
dec
ret
das
add
cli
je
shl
loope
daa
ds
cmp
mov
mov
jb
and
cwde
(bad)
fidivr
sti
cdq
das
pop
call
xchg
fstp
cmps
enter
inc
nop
ror
dec
and
ins
push
push
lock
jecxz
sub
mov
pop
push
xor
loopne
test
out
mov
mov
out
(bad)
jns
inc
fs
jne
jbe
cmp
stos
jbe
or
and
popa
ficomp
inc
inc
xchg
inc
out
mov
push
bound
dec
aaa
into
mov
test
mov
pop
mov
(bad)
dec
fwait
pop
repnz
jns
lods
lods
and
xchg
(bad)
adc
cmc
in
push
pop
xchg
fst
test
jmp
xchg
jb
mov
lea
arpl
outs
sbb
fwait
enter
adc
jns
imul
int
ja
rcr
inc
sbb
ret
addr16
xlat
xor
sub
pop
test
xor
jbe
pop
xor
mov
cli
out
clc
jmp
push
imul
lea
mov
and
xchg
(bad)
aam
push
shr
inc
xor
cdq
(bad)
xor
mov
sbb
daa
xor
int3
imul
mov
mov
out
mov
ss
sbb
jg
add
jns
movs
mov
and
retf
loop
push
mov
fsub
pushf
shr
adc
and
fsub
(bad)
(bad)
push
clc
ss
push
sar
daa
pop
movs
cmp
mov
mov
push
stos
pop
pop
mov
pop
lds
mov
push
and
mov
ret
and
loope
cmp
sbb
pusha
cmps
jp
es
lods
sub
dec
ret
xchg
arpl
das
jge
mov
add
inc
ror
mov
arpl
adc
inc
aas
and
sub
test
jbe
mov
or
mov
loopne
xor
mov
adc
jp
pop
(bad)
sub
cmps
push
pop
pop
fs
pop
mov
push
jns
mov
push
cmp
xchg
cmp
(bad)
icebp
mov
xor
mov
ror
in
inc
add
das
jno
sti
out
div
fnstenv
mov
sub
dec
ins
repnz
adc
jmp
adc
cmp
cmc
and
pop
mov
retf
scas
inc
minps
push
dec
mov
cs
(bad)
push
add
dec
repnz
lock
in
mov
xlat
mov
push
add
xchg
mov
xchg
pusha
push
ret
add
xchg
cmp
stc
jno
xchg
add
inc
out
les
jbe
loope
cmp
add
push
call
fdivr
mov
mov
adc
dec
iret
pop
inc
call
inc
arpl
jmp
clc
xchg
(bad)
push
iret
sbb
inc
retf
in
jecxz
mov
push
retf
loopne
pop
scas
out
enter
and
mov
pop
push
push
call
push
ficom
or
stos
stc
and
loopne
cs
sbb
fdivrp
adc
adc
(bad)
int
inc
call
ror
js
daa
outs
mov
sub
mov
mov
push
popa
push
mov
pop
and
inc
pop
pop
xchg
cwde
cld
and
nop
or
xchg
std
add
movs
push
inc
lahf
xlat
iret
test
cmp
ins
adc
inc
jle
ja
cmp
stc
push
sti
xchg
sub
test
cs
xchg
add
inc
add
data16
loope
ret
daa
out
in
test
js
xchg
rcr
hlt
cs
mov
test
mov
lods
inc
xchg
add
aam
adc
mov
mov
sub
xor
call
lds
fnsave
push
movs
xchg
int
ret
sbb
or
out
jb
cs
pop
ror
ins
iret
jmp
xchg
fstp
fcmovne
aad
sub
dec
(bad)
adc
cmp
hlt
dec
pop
das
aam
xor
lods
stos
xor
shl
(bad)
(bad)
mov
scas
mov
add
fisub
cmp
daa
dec
lock
out
cmp
div
das
add
push
mov
fist
mov
mov
xchg
imul
pusha
dec
les
popf
ins
test
xchg
pushf
xchg
enter
xor
cld
mov
(bad)
sub
mov
add
mov
call
xlat
pop
mov
call
push
and
xchg
xchg
pop
imul
add
jne
test
movs
xchg
retf
arpl
inc
test
push
inc
addr16
xchg
leave
out
mov
test
inc
retf
popf
retf
sub
cmp
movs
je
mov
pop
test
or
cmp
js
add
mov
fild
push
(bad)
mov
lods
sbb
je
aam
shl
fidivr
add
jecxz
adc
mov
daa
popf
and
pop
inc
imul
jbe
adc
adc
fdivr
and
or
and
cli
add
or
jnp
jo
imul
and
jne
xchg
iret
(bad)
(bad)
cmc
add
lds
stos
xor
mov
mov
repnz
das
movs
jo
push
adc
sub
sar
sub
movs
leave
out
ins
movs
adc
retf
cmp
pop
les
xchg
dec
dec
add
xor
loopne
and
je
push
xchg
xor
lahf
rcr
pop
aad
lods
pop
scas
in
or
jg
ja
cmp
popf
lods
mov
cs
mov
and
inc
lods
sti
lods
sub
jmp
sub
ins
push
ja
cmp
and
xlat
xor
jmp
ja
jae
jle
nop
repz
fcom
jmp
out
in
push
cmp
(bad)
in
dec
pushf
mov
mov
mov
inc
aas
into
sar
fstp
cmps
rcr
daa
pop
(bad)
mov
sbb
loope
sub
leave
fdivr
sub
sub
daa
push
(bad)
call
xchg
xchg
pop
sub
inc
pop
loop
scas
sub
movs
push
xrelease
cld
inc
inc
and
push
scas
mov
ret
mov
mov
cld
or
jbe
rcl
push
pop
and
(bad)
jg
in
dec
loop
imul
ret
imul
cwde
mov
aad
fwait
shr
jmp
xchg
dec
js
jne
push
mov
sbb
pop
es
sbb
cs
cmp
out
inc
adc
call
cmp
fisttp
jno
xor
dec
xor
aas
sub
cmp
mov
push
sub
test
adc
sub
cmp
ins
icebp
mov
cmp
pop
dec
sbb
push
scas
or
cmp
outs
mov
push
(bad)
stos
test
mov
ja
jbe
and
dec
sar
xor
and
fcmovb
adc
out
xchg
or
fst
pop
jae
and
mov
push
push
lds
adc
es
inc
jae
pop
xlat
stc
inc
jle
xchg
lods
inc
iret
sub
mov
mov
js
ja
jbe
xor
jge
push
pop
daa
add
imul
mov
je
add
add
jecxz
cli
retf
stos
mov
repz
fucomp
aam
int3
xor
rol
fcmovnbe
into
sbb
adc
sbb
ins
add
ror
and
mov
stos
sub
jnp
xchg
lods
or
jns
mov
stc
push
jp
mov
movs
xor
cld
jb
mov
or
mov
ins
out
(bad)
ja
pop
inc
arpl
and
mov
sbb
data16
dec
popf
inc
lock
mov
fcmovne
cmovp
cdq
ja
hlt
nop
fst
mul
fwait
push
mov
data16
xchg
mov
or
aam
mov
mov
mov
out
jp
jns
push
cwde
mov
enter
mov
pop
retf
fnstsw
cmps
push
iret
and
adc
ror
loop
push
aad
push
cmp
pop
dec
mov
mov
push
inc
popf
imul
jecxz
pop
pusha
adc
xchg
retf
pop
mov
cmp
jns
ins
cmc
out
adc
push
mov
inc
add
enter
pushf
mov
sub
and
pop
in
addr16
mov
ror
into
push
jb
or
push
stos
mov
mov
xchg
clc
sub
jns
enter
into
push
lods
sbb
mov
pop
ror
sbb
adc
jmp
or
ds
fcmovu
sbb
cdq
imul
and
fnsave
dec
mov
dec
jno
mov
mov
and
sub
add
cmp
ret
sbb
pop
cmp
in
lock
retf
popa
out
aas
inc
(bad)
das
mov
mov
in
cmps
stc
mov
xchg
cmps
fidiv
aaa
xchg
or
aaa
jo
je
ins
pop
or
mov
adc
mov
jne
call
ds
push
mov
mov
test
daa
ret
lahf
js
sbb
leave
hlt
cs
push
adc
mov
cmc
adc
es
aad
outs
arpl
adc
sub
sar
inc
aaa
jb
mov
cmp
mov
mov
jae
leave
and
and
call
lea
stos
daa
stc
enter
mov
push
or
dec
out
mov
pop
xchg
fsubr
stc
scas
add
hlt
(bad)
sbb
cli
jb
xor
mov
xchg
pop
(bad)
push
or
and
mov
aam
rol
fist
cwde
push
jns
neg
cmp
fmul
jbe
pop
jno
jmp
add
je
lahf
into
retf
mov
test
mov
cmp
mov
popa
xchg
inc
or
je
(bad)
enter
mov
jmp
mov
adc
mov
add
dec
xchg
scas
fnsave
cs
scas
mov
fsub
or
cmc
in
pop
adc
mov
sub
add
xlat
shl
aam
jl
mov
pop
push
pop
(bad)
dec
cmp
adc
and
ds
jmp
adc
fimul
jae
fdivr
and
or
dec
sbb
jecxz
xchg
and
push
rcr
sub
xlat
and
pop
sbb
dec
aam
add
out
aad
in
in
fisub
mov
jne
push
pop
dec
cmp
sbb
xchg
(bad)
mov
mov
je
imul
fmulp
add
sbb
push
jo
inc
xchg
xchg
imul
rcl
pushf
outs
mov
mov
mov
into
lahf
pop
sbb
cld
sub
jbe
sub
add
inc
test
sub
push
ss
int3
pop
ds
pushf
scas
cmp
cmp
int3
sub
inc
or
enter
in
push
fdiv
or
(bad)
xor
xor
adc
hlt
push
ins
imul
xor
lea
rcl
pop
xchg
or
dec
fisubr
cld
jnp
aaa
inc
les
xor
xor
popf
rcl
movs
mov
cmp
mov
stos
xchg
repz
stos
xor
xor
pushf
fdivr
leave
or
sub
cvttps2pi
movs
pop
js
sub
or
mov
add
pop
dec
ret
mov
or
dec
int3
pop
stos
xor
sbb
gs
dec
ins
or
or
sbb
xor
cdq
fnstsw
out
shr
add
cwde
add
jge
(bad)
xchg
ins
in
loop
mov
push
dec
jmp
jle
arpl
cwde
les
push
cli
cmc
xchg
push
push
mov
sub
cmp
and
loop
rol
ficom
jmp
(bad)
gs
push
test
js
ror
or
mov
cmps
(bad)
pop
pop
movs
outs
or
(bad)
jmp
pop
loop
das
jecxz
scas
fwait
sbb
push
push
mov
and
stos
sbb
(bad)
mov
or
pop
jmp
(bad)
mov
int
xchg
and
mov
scas
inc
arpl
loope
xchg
lea
lods
or
out
pop
cdq
jbe
mov
mov
mov
retf
es
ins
imul
scas
popf
pushf
mov
je
je
and
imul
cs
aad
xchg
push
jb
cs
cli
es
inc
movs
dec
jg
adc
jbe
mov
mov
jmp
dec
int
adc
jnp
mov
jb
xor
mov
add
ret
sbb
inc
dec
mov
jns
les
or
nop
adc
unpckhps
jnp
mov
push
retf
lea
xchg
push
or
add
add
or
fist
fcmovnb
mov
push
mov
mov
sbb
mov
pop
cs
test
push
jo
call
not
fcom
sub
cmp
iret
mov
mov
ss
paddd
inc
xor
push
test
stos
cld
push
mov
daa
stc
mov
call
test
pop
pop
or
ss
sub
push
lock
cmp
jo
gs
(bad)
lods
lock
sub
mov
sub
push
dec
in
ins
(bad)
pop
sub
shl
jne
mov
mov
adc
sub
call
push
mov
pop
test
and
xchg
mov
jno
inc
xlat
cmp
dec
(bad)
repz
movs
call
or
xchg
and
mov
imul
jnp
fistp
dec
cmp
in
shl
inc
push
xor
cli
xchg
lds
jae
xor
add
aaa
sub
inc
xor
lods
sbb
in
cmp
push
icebp
(bad)
scas
mov
adc
pop
call
mov
(bad)
xchg
pushf
jns
mov
inc
fldenv
mov
outs
push
scas
inc
xchg
pop
xor
div
push
sbb
dec
test
test
inc
pusha
scas
repnz
dec
xor
int3
int
fisub
and
and
dec
jbe
mov
cli
mov
dec
sbb
pop
repz
cmovge
xchg
cmp
jmp
sti
aam
in
arpl
dec
push
call
adc
cmc
outs
dec
jmp
sbb
(bad)
(bad)
cmc
pop
or
mov
test
(bad)
fisub
jo
sbb
push
mov
enter
xlat
popa
mov
bound
lods
ins
cmp
xchg
dec
je
or
jl
jo
jb
nop
jnp
push
stos
and
lods
es
jnp
cmp
jp
loope
pop
jbe
icebp
jae
push
ret
xor
in
leave
push
pop
add
pop
leave
jl
(bad)
push
jae
adc
sbb
retf
es
jae
fs
xor
dec
pop
inc
popf
xor
dec
add
fmul
mov
and
test
xor
loop
rcr
outs
inc
xchg
push
stos
adc
fisttp
call
add
leave
cmp
sbb
and
xchg
or
sbb
out
push
stos
push
pushf
retf
pop
mov
pushf
cmp
xchg
inc
pop
mov
add
rcl
mov
cmp
outs
and
push
ins
sbb
mov
mov
jecxz
dec
and
cmp
daa
ja
inc
lock
push
mov
push
cmp
std
sbb
clc
out
jb
imul
jmp
ja
push
jns
scas
and
sub
test
ret
loopne
push
movs
jo
sbb
mov
les
push
dec
popf
ins
in
or
(bad)
ds
pop
test
jmp
mov
pop
jns
or
cmp
sub
mov
sbb
add
mov
dec
xchg
mov
out
scas
call
adc
xor
mov
loope
add
ficomp
jge
imul
sbb
stc
lds
(bad)
stos
or
pop
xchg
rol
or
xor
scas
cmp
cmp
addr16
cmp
fstp
test
lock
dec
ror
js
mov
jne
es
mov
popf
adc
mov
push
lahf
sub
(bad)
fbld
xor
(bad)
rol
popa
ins
jmp
adc
xchg
xchg
push
fnstcw
jne
xchg
icebp
sub
adc
cmp
leave
test
pop
gs
xchg
jecxz
aam
pop
ss
adc
(bad)
adc
rcl
cmps
cdq
dec
out
mov
jae
test
xchg
jmp
mov
in
add
daa
out
vpermw
jmp
push
dec
cli
aad
pusha
test
or
outs
jle
jbe
pop
and
sbb
aaa
and
dec
add
call
icebp
xor
jmp
lods
adc
push
xchg
add
sbb
jnp
in
add
scas
sbb
mov
jb
ins
mov
push
lods
xor
sbb
push
push
je
je
add
xchg
jle
ja
retf
(bad)
sub
leave
test
loopne
js
inc
dec
lea
ss
mov
bound
fprem1
pop
test
lahf
mov
shl
sub
test
xchg
stos
mov
loopne
sub
cwde
dec
or
jle
mov
mov
pusha
repnz
push
fadd
out
sub
cmp
inc
cli
hlt
bndstx
icebp
inc
pop
cmp
fisttp
scas
(bad)
pop
and
clc
retf
or
mov
mov
cmp
(bad)
std
outs
nop
cmp
jecxz
cwde
shl
xchg
dec
pop
into
repnz
pop
repz
lods
and
lds
cli
push
jo
scas
cli
dec
ins
cdq
cmp
ja
mov
dec
lods
jl
fst
add
pop
mov
cdq
pop
mov
push
xor
(bad)
lds
sti
xor
and
iret
in
cwde
jnp
mov
scas
loope
cmps
jge
mov
xlat
mov
rcr
push
loopne
stos
and
mov
ins
xchg
lods
rcl
ds
sub
les
jl
jp
inc
mov
rol
add
and
dec
jmp
push
test
daa
popf
mov
(bad)
pop
leave
or
not
cmp
and
(bad)
outs
imul
pop
iret
fistp
fcmovnbe
sbb
sbb
sbb
sub
sub
into
xor
xchg
mov
push
cmp
sub
and
mov
cmp
aas
lea
ds
lods
add
add
sub
push
imul
xchg
retf
arpl
fdivrp
js
jo
mov
lods
push
js
adc
push
(bad)
mov
pushf
jnp
inc
push
add
push
xchg
add
out
sub
fadd
sub
pop
add
(bad)
test
and
imul
ja
jns
xchg
cmc
cmp
or
repnz
push
push
ret
outs
scas
sub
xchg
retf
test
pop
inc
xchg
fldenv
and
pop
hlt
pop
mov
les
xor
pop
ins
adc
and
inc
fld
pop
in
mov
jl
or
inc
push
jl
mov
push
sbb
jne
pop
icebp
les
xchg
xchg
mov
in
jbe
pop
sbb
repnz
(bad)
fisub
int
pop
xchg
sub
inc
pop
mov
sbb
dec
jae
fild
movs
xor
out
lods
mov
lods
inc
je
push
push
in
es
and
jae
mov
loopne
sub
neg
std
xlat
push
push
hlt
loop
outs
in
dec
adc
jmp
ret
mov
out
push
mov
sbb
cmp
jmp
mov
ja
jge
mov
rol
inc
jl
bound
pop
cdq
icebp
cmps
int
push
inc
xchg
adc
add
aas
push
loop
jp
mov
nop
lea
(bad)
xchg
pmulhw
ret
xor
cmp
(bad)
ss
fldcw
xchg
mov
in
adc
test
mov
pushf
or
shl
xchg
nop
add
out
adc
mov
mov
ja
fimul
lahf
jmp
leavew
out
cmp
imul
add
mov
lock
jmp
popf
js
sbb
iret
jg
jp
test
dec
out
xchg
pop
out
jo
movs
lods
dec
ins
prefetch
test
cmp
add
sub
retf
ret
xor
pusha
add
cmp
and
retf
and
jle
leave
cmp
pop
enter
rcr
es
popf
cmp
ror
push
pop
add
repz
and
dec
or
cmps
cmp
xchg
pop
sbb
xchg
fwait
xor
or
dec
push
or
cmps
loop
out
or
int
js
push
lock
pop
outs
dec
cmp
jmp
pop
mov
jp
pop
pop
add
inc
xor
cmc
and
arpl
pop
retf
cwde
cli
shl
push
push
inc
icebp
out
push
popa
sub
adc
or
sbb
fidiv
(bad)
xchg
add
aaa
std
jb
push
sub
dec
repnz
bound
mov
and
xchg
push
dec
mov
sbb
adc
sbb
retf
stos
popa
or
in
sbb
add
mov
sbb
pop
and
das
xor
or
jmp
cmp
mov
and
cwde
in
mov
or
sbb
in
or
adc
mov
pop
data16
shl
test
out
or
and
test
jmp
sti
movs
(bad)
mov
add
es
out
jp
pop
popfw
inc
or
push
pop
ss
std
shl
rcl
bound
cmp
or
dec
mov
cwde
test
cli
inc
and
mov
mov
or
das
sub
jl
dec
jg
add
test
xor
lods
stos
rol
mov
sahf
push
clc
jns
test
lods
sub
ret
rcl
sahf
jno
push
scas
add
sbb
(bad)
daa
pop
adc
shr
cmps
out
add
mov
add
in
test
jp
cmps
pop
mov
inc
add
imul
jb
fisttp
in
push
retf
xor
fadd
lods
shl
mov
xor
fucom
dec
xor
hlt
cwde
xor
mov
pusha
pop
pop
xchg
mov
or
pop
imul
jge
inc
imul
add
inc
jle
cld
push
out
and
outs
mov
jne
pop
mov
inc
repz
mov
or
xchg
loopne
mov
jecxz
adc
push
ffreep
mov
(bad)
in
sahf
push
movq
cmp
js
movnti
(bad)
pop
lods
cmp
push
popf
clc
inc
jmp
jp
stos
mov
push
pop
adc
jecxz
pop
pop
cmps
mov
dec
shl
cmp
dec
je
mov
adc
adc
ror
cmps
adc
mov
adc
das
aaa
sbb
loopne
shl
sbb
jmp
popf
mov
(bad)
ja
clc
jnp
arpl
xchg
and
jecxz
xchg
jmp
lahf
leave
stos
push
and
or
jg
retf
jo
xchg
repnz
mov
push
dec
cmp
jecxz
jge
mov
aam
mov
repz
mov
fcomp
loopne
jo
pop
push
or
das
sbb
jl
aaa
aas
lea
sub
(bad)
jecxz
mov
or
adc
stc
mov
push
pusha
dec
jno
hlt
enter
jecxz
(bad)
(bad)
in
push
arpl
adc
dec
les
xor
mov
dec
iret
or
(bad)
mov
(bad)
sbb
push
mov
cmps
push
out
adc
pop
xchg
mov
test
jmp
mov
sbb
cmps
pop
nop
add
aaa
jbe
aas
xchg
jae
shl
and
xchg
test
mov
dec
mov
mov
jp
clc
push
cmc
cmp
add
mov
fimul
sub
call
or
shl
or
call
dec
into
mov
ins
xchg
test
psubsb
push
aas
ins
loopne
pusha
sub
dec
mov
cdq
movs
or
mov
sub
mov
xchg
sar
shr
lea
pop
xchg
fsub
fdiv
stc
ds
mov
iret
shl
pushf
or
mov
dec
push
mov
aas
xor
shl
pop
clc
test
mov
scas
jnp
push
pop
xor
xchg
add
das
inc
mov
inc
lods
bound
jno
loop
dec
cwde
sub
mov
and
pop
mov
and
scas
icebp
pop
aam
jae
xchg
fsubr
addr16
scas
jmp
cdq
add
je
sbb
outs
inc
shl
stos
mov
pop
jp
inc
xor
rcl
aam
sahf
pop
or
cmps
xor
(bad)
xchg
sub
mov
jge
test
mov
jns
jl
cmp
js
das
std
push
xchg
mov
js
popf
mov
(bad)
pusha
pop
sub
mov
outs
mov
adc
inc
xor
ss
mov
pop
loop
psubusw
add
inc
inc
mov
jg
cli
out
xor
mov
sub
xchg
adc
(bad)
fidivr
inc
push
hlt
jae
imul
mov
xchg
inc
(bad)
adc
xor
jg
mov
test
sar
add
scas
push
add
mov
cld
and
jp
cmp
or
retf
mov
cmps
pop
mov
loope
add
shl
mov
enter
dec
pusha
jle
inc
add
pop
jno
push
rcl
xor
inc
inc
aas
xchg
call
or
pop
dec
repnz
or
mov
cmp
cmp
push
dec
into
dec
dec
stc
neg
call
xor
xor
xor
mov
test
sub
fwait
inc
mul
test
in
sub
pop
retf
bound
test
inc
inc
mov
inc
(bad)
ins
xchg
nop
add
push
inc
lock
inc
mov
jbe
sar
jno
das
sub
shl
retf
int
pop
and
cmp
mov
mov
inc
enter
xchg
mov
jp
mov
jge
pop
mov
add
sbb
sub
mov
stos
bound
xchg
dec
fs
push
mov
fwait
repz
rcl
or
nop
add
mov
adc
retf
dec
pop
dec
pextrw
cmps
jmp
stos
mov
mov
and
call
lods
jno
daa
mov
push
lock
and
push
and
pop
pop
push
aaa
and
xchg
push
scas
mov
sub
ss
sti
fidivr
jnp
push
iret
test
push
sti
call
popf
dec
mov
sbb
xlat
and
pop
rcl
cld
in
pop
push
std
je
mov
push
jae
cwde
addr16
lods
and
jecxz
ins
mov
out
outs
int3
sub
(bad)
repz
into
pop
(bad)
stc
mov
sar
or
jecxz
jns
pop
lea
sbb
cmps
pop
jo
repnz
das
test
jecxz
call
mov
sub
push
fnstcw
in
jae
cmp
lock
cmp
rcr
adc
pusha
icebp
jo
xchg
daa
cs
std
or
les
pop
movs
adc
push
or
jg
sub
push
fld
adc
xor
add
rcl
xchg
loopne
pop
stc
sbb
sub
gs
ins
xchg
test
and
inc
(bad)
and
scas
pop
test
pusha
int3
adc
adc
xlat
mov
adc
pushf
sbb
arpl
dec
rcr
repnz
pushf
mov
mov
sbb
mov
rol
or
dec
in
cmp
fcomi
not
inc
and
push
popf
mov
out
jo
mov
in
int3
jmp
shl
outs
fst
clc
inc
push
push
lock
repz
xchg
out
fimul
sti
jmp
sbb
xor
mov
lods
loope
pop
fidiv
sub
lods
sbb
cmps
(bad)
dec
mov
push
(bad)
pop
in
xchg
iret
jge
or
push
jle
repnz
adc
jne
ret
arpl
pop
push
jo
scas
mov
retf
jne
imul
xlat
dec
jnp
pop
xor
add
dec
les
rcl
push
mov
xlat
or
inc
das
stc
jns
fcomp
jnp
jmp
lahf
xchg
add
or
lea
pop
fwait
mov
add
sub
loopne
inc
dec
int
test
mov
dec
push
inc
mov
inc
out
jmp
xor
xchg
in
pop
xor
lds
ja
pop
(bad)
ds
push
cli
stos
test
iret
(bad)
call
jne
nop
xchg
loop
cmp
add
in
jl
push
mov
gs
js
mov
jmp
adc
or
js
or
adc
cmp
cdq
push
scas
sahf
mov
cmp
in
mov
shl
or
test
jp
shr
ss
enter
add
clc
(bad)
test
out
test
pop
push
pop
xor
paddsw
push
and
cs
add
(bad)
or
aam
or
lods
mov
adc
inc
inc
retf
lock
adc
movs
loopne
pop
int3
xchg
bound
ins
fimul
inc
dec
mov
adc
adc
push
jno
sbb
cmps
repnz
icebp
scas
jb
les
sub
add
add
jl
aaa
and
cmp
jno
mov
jmp
addr16
push
test
sbb
push
cmps
rcr
rcr
jns
shl
repz
ret
mov
lock
enter
and
fld
mov
movs
data16
(bad)
loope
inc
mov
out
jecxz
push
pusha
int
dec
or
mov
sub
test
ret
add
sbb
cmp
adc
or
xlat
ds
mov
aas
jno
jmp
arpl
inc
jne
mov
loop
jle
jecxz
xchg
fst
mov
mov
test
cmp
adc
sub
bound
or
sbb
adc
mov
and
sub
movs
xlat
sbb
xchg
and
mov
xchg
sbb
ins
pop
aad
xor
dec
fwait
mov
adc
pop
inc
xchg
ficom
sub
jb
xchg
pop
mov
xor
lahf
xchg
pop
lock
cmp
adc
retf
lea
and
adc
(bad)
xor
outs
popf
dec
pop
imul
(bad)
jmp
in
leave
push
xor
mov
adc
aad
int3
cmp
std
cmp
dec
jae
mov
xchg
adc
cmp
in
neg
test
push
sbb
sub
aad
loop
mov
aam
mov
(bad)
pop
imul
sub
inc
das
cld
int3
imul
jb
jmp
jno
call
push
jle
inc
stos
jo
add
push
outs
push
out
or
pop
inc
iret
adc
jecxz
cmp
cdq
mov
(bad)
xor
(bad)
ja
xchg
xchg
inc
pop
or
push
mul
les
xchg
test
xchg
push
mov
mov
out
and
xchg
cmps
int
pop
lods
bound
or
jle
das
xor
repz
inc
jp
pop
jle
cmp
cwde
lock
sahf
(bad)
or
adc
mov
call
push
and
sbb
(bad)
jl
jae
movs
cmp
pushf
sbb
popa
sbb
dec
inc
pop
rcr
jae
dec
mov
out
jmp
xor
imul
je
mov
rol
and
ja
pop
ror
scas
fisttp
pop
xchg
mov
adc
dec
les
cmp
sbb
mov
lods
jo
test
inc
mov
in
lea
inc
mov
xor
call
pushf
xlat
aad
fisttp
cs
push
test
or
test
icebp
mov
or
fadd
jecxz
inc
jge
mov
cdq
inc
test
(bad)
fdivr
iret
pop
xor
lods
js
sbb
pop
lock
adc
fild
in
mov
adc
adc
(bad)
leave
cmp
and
xor
call
add
ja
mov
mov
mov
call
cmc
sub
cmp
pusha
sbb
in
dec
jae
movs
sub
jo
pop
pop
jmp
xchg
rol
shl
imul
cmc
out
inc
jmp
call
sub
or
fadd
jo
out
add
daa
inc
lods
fisubr
xchg
out
(bad)
ret
add
(bad)
xor
cmp
(bad)
(bad)
mov
xchg
in
xchg
mov
imul
(bad)
(bad)
xor
pop
(bad)
pushf
xor
push
cs
fbld
bound
jmp
leave
dec
test
(bad)
lods
out
or
icebp
pop
xor
ret
dec
aad
mov
sbb
jae
js
push
ret
popf
test
mov
(bad)
mov
adc
ins
dec
out
and
sbb
lea
inc
fcom
sbb
das
mov
int
cwde
xlat
shl
inc
xchg
mov
or
sbb
lea
(bad)
fcmovnu
mov
inc
sub
xor
lods
inc
dec
shl
icebp
dec
add
dec
movaps
jecxz
es
jmp
jle
inc
mov
push
loopne
pusha
pop
mov
mov
xchg
stos
add
sub
xlat
cmp
push
mov
push
dec
jbe
fld
daa
sbb
pop
hlt
or
jb
in
inc
or
daa
ret
fs
jae
jb
xor
fwait
and
xor
movs
sub
push
dec
cmps
sbb
stos
test
lods
cmps
stos
ret
clc
out
push
ins
popa
inc
push
and
or
das
(bad)
xchg
jns
cmp
fnsave
mov
mov
or
out
and
push
mov
cmp
shl
mov
out
out
mov
inc
sbb
sbb
push
adc
enter
sub
inc
push
aam
iret
cmp
xor
mov
shr
pop
out
inc
popf
jmp
inc
movs
or
popa
(bad)
rcr
ja
cmp
pop
or
cmps
inc
lds
mov
inc
call
or
(bad)
cdq
movs
xchg
(bad)
push
dec
ret
cdq
daa
jmp
mov
data16
add
out
sbb
lea
mov
je
sti
jl
adc
push
inc
mov
popa
xor
inc
inc
mov
push
outs
mov
jg
push
test
fstp
call
fcmovbe
das
pushf
cmp
push
std
xor
lahf
mov
sbb
mov
fistp
mov
popf
mov
in
sbb
cwde
scas
pop
pop
popf
iret
fld
jb
sahf
test
rcl
xchg
cmp
mov
jmp
das
(bad)
outs
sahf
ds
push
rcr
mov
pop
pop
out
or
stos
lods
cmp
inc
jmp
test
pusha
dec
cs
mov
pmulhuw
frstpm(287
jecxz
and
mov
jp
mov
mov
push
inc
push
pop
inc
jmp
jle
jp
sar
push
dec
retf
in
ss
test
call
and
ror
xchg
je
jmp
cmps
cdq
and
xchg
cli
ret
jnp
outs
lahf
inc
push
stos
popa
xchg
cmc
shl
popaw
les
cmp
mov
loopne
outs
scas
out
bnd
les
ins
in
pushf
popa
imul
adc
add
or
mov
ds
outs
xchg
mov
jno
out
nop
ja
scas
add
je
mov
xlat
xor
sbb
sbb
mov
arpl
fiadd
lock
popf
dec
xor
and
(bad)
push
js
pop
(bad)
pop
enter
ror
mov
inc
push
ins
pusha
daa
nop
cmps
loope
div
jl
jae
test
add
sub
inc
sbb
test
add
mov
xchg
fs
mov
lahf
push
inc
mov
test
(bad)
in
aad
fsubr
out
and
cld
repnz
pop
mov
xchg
fistp
adc
jns
jne
adc
inc
test
mov
xchg
outs
dec
cmps
int3
push
and
mov
xor
dec
xor
xor
pop
popa
inc
xor
jmp
lods
and
(bad)
push
fwait
pop
xchg
into
xchg
jb
mov
push
mov
fild
cmp
lahf
xchg
push
push
sub
sbb
sbb
stos
pop
in
cmp
pop
(bad)
dec
mov
rcl
cmp
add
mov
leave
out
gs
xchg
cmp
(bad)
push
xor
inc
xor
mov
add
sbb
ja
outs
dec
cld
push
xchg
std
aam
fadd
leave
push
mov
test
sub
xor
mov
sqrtps
xchg
or
inc
xchg
lea
xor
add
int3
inc
mov
add
or
cs
loop
or
xchg
mov
xchg
stc
and
hlt
arpl
sub
aaa
push
xchg
mov
add
int3
dec
adc
aam
inc
push
test
inc
shl
xor
cmp
popf
inc
mov
dec
cld
(bad)
cli
cmp
adc
data16
cli
jne
mov
inc
push
shl
mov
repnz
test
pop
xchg
mov
and
mov
pop
cli
das
leave
aam
jne
popa
mov
sbb
leave
push
in
(bad)
and
jg
iret
(bad)
and
push
test
push
adc
lock
xor
jbe
fimul
and
add
sub
scas
sub
or
jb
mov
shl
stc
hlt
xor
cs
mov
push
push
lahf
sub
adc
call
sbb
jbe
push
adc
xor
and
adc
das
fdivr
jle
push
(bad)
jmp
je
lock
adc
jo
inc
mov
fs
rcr
cdq
fstp
sbb
push
(bad)
cmp
jecxz
out
cmc
daa
icebp
dec
mov
and
push
(bad)
xor
je
sti
sub
int3
cmps
pop
and
mov
inc
xchg
div
sub
or
ja
jb
pop
or
cmc
xchg
pop
test
mov
cwde
xchg
ds
jle
icebp
leave
sub
imul
(bad)
adc
mov
mul
int
adc
pop
fs
or
(bad)
stos
ins
and
inc
push
sub
jno
test
mov
cwde
fdiv
or
stc
xchg
xchg
in
xor
jae
adc
lods
push
stos
add
cdq
adc
pop
leave
push
int
dec
iret
pop
ds
pop
push
pop
xchg
(bad)
ret
into
out
jbe
mov
xor
jnp
ret
or
arpl
(bad)
in
cmp
cmp
or
aam
xor
pop
jo
fisttp
(bad)
sbb
adc
fwait
sbb
jge
pop
and
bound
add
dec
std
jp
cld
pusha
sti
mov
mov
add
and
push
stos
xchg
out
aas
in
and
test
adc
gs
lds
adc
mov
call
ret
add
jmp
je
(bad)
or
add
dec
ds
sar
sbb
test
mov
dec
xchg
jb
lods
in
adc
sbb
int
imul
(bad)
dec
out
mov
ins
dec
int
xchg
dec
add
dec
addr16
dec
or
sbb
pop
loop
or
aas
(bad)
jmp
cmp
jmp
adc
xor
push
cmps
icebp
in
sbb
imul
xchg
adc
push
stos
fisttp
jbe
jno
loop
loop
in
es
clc
mov
xor
adc
or
(bad)
retf
pop
cmp
push
and
cmp
fwait
sti
fimul
dec
inc
addr16
dec
ret
cmps
les
(bad)
mov
jmp
jne
(bad)
fdivr
sub
into
fucomi
out
pusha
ret
add
shl
loopne
ret
or
or
lds
and
sbb
xor
ja
shr
ds
ret
mov
and
sar
dec
pop
cli
dec
mov
popf
sbb
jnp
cmp
xchg
inc
int
loopne
lahf
dec
retf
test
adc
bound
gs
in
sub
jle
fiadd
sub
and
out
cmps
dec
push
push
mov
in
push
jge
xchg
pushf
cmp
push
pushf
iret
mov
div
push
mov
dec
inc
sbb
xlat
enter
adc
shl
mov
fcmovnbe
outs
jno
cmp
xchg
xchg
xchg
pop
inc
je
xchg
push
or
and
test
outs
out
mov
xlat
dec
jl
stos
retf
inc
ja
(bad)
std
ret
stos
ins
push
mov
xchg
mov
(bad)
adc
dec
jmp
sub
(bad)
and
popa
xchg
jae
xor
or
pshufw
rcr
nop
or
cmp
push
xchg
mov
jns
stos
inc
sbb
and
push
ror
ss
(bad)
fnstsw
in
es
rcl
adc
sbb
(bad)
loop
xor
je
mov
stc
sbb
stos
arpl
adc
in
popf
mov
mov
add
add
mov
jmp
inc
inc
in
cmps
mov
popf
rcl
test
sti
fs
mov
push
je
add
loopne
adc
(bad)
mov
hlt
out
jmp
pop
push
(bad)
std
fxam
loopne
sar
inc
sbb
and
push
and
sbb
dec
hlt
mov
bound
into
sub
out
inc
add
inc
add
push
scas
std
fbld
cmp
mov
and
sbb
jo
mov
inc
adc
cmc
sti
addr16
pop
loope
fstp
adc
cld
daa
xchg
(bad)
ds
out
adc
into
lods
or
push
test
inc
dec
mov
in
iret
pushf
ja
mov
or
fdiv
mov
stos
les
sahf
cmp
cmp
mov
(bad)
jg
inc
(bad)
aaa
or
xor
mov
push
xchg
or
sub
xchg
add
xchg
js
pop
neg
ror
bound
cmps
loop
cdq
xchg
lea
aad
scas
(bad)
fdiv
dec
pop
add
inc
mov
mov
add
jb
xchg
or
outs
xor
test
hlt
popa
xchg
cmp
(bad)
rol
inc
pop
push
rcl
call
(bad)
repnz
enter
shr
add
adc
enter
mov
ins
pop
lock
stos
push
mov
mov
out
daa
fnsave
sub
sbb
or
ficom
(bad)
lods
ror
rcr
push
into
sub
mov
aas
pop
popa
aas
push
inc
clc
(bad)
sbb
(bad)
out
std
ins
ret
pop
aam
push
xor
jbe
xor
pop
and
(bad)
push
push
cdq
leave
jmp
cmp
rep
push
xchg
mov
jne
xor
and
ror
scas
and
sbb
nop
ret
mov
sahf
jnp
aam
adc
inc
repnz
xor
dec
aas
mov
and
cmps
hlt
aaa
iret
xchg
dec
xor
add
aam
sar
inc
inc
sub
cmp
jecxz
xor
movs
dec
mov
xchg
test
dec
fild
into
push
ja
mov
out
dec
add
push
ds
retf
adc
out
mov
loope
not
(bad)
aas
xchg
and
cmps
in
(bad)
daa
cmp
shl
mov
loopne
not
shr
out
daa
xchg
mov
js
and
std
mov
shl
imul
add
push
push
arpl
adc
push
iret
pop
cmp
push
add
jmp
leave
inc
mov
xor
mov
sub
shr
push
sub
movs
add
adc
pop
ja
aaa
sahf
outs
or
lahf
cli
fmul
mov
scas
jae
fisub
push
or
jb
jmp
push
push
xchg
push
cmp
loop
(bad)
out
out
mov
mov
xchg
mov
out
lds
stos
pop
ror
and
jl
mov
js
ror
test
add
jns
fs
mov
xor
cmp
jb
cvtps2pd
es
gs
pop
add
pop
xchg
push
pop
cmc
mov
test
xchg
shl
scas
pop
or
int3
add
and
popf
jmp
dec
and
sbb
push
push
add
out
or
outs
pushf
mov
mov
cmc
cmp
iret
inc
lods
xchg
iret
push
mov
mov
arpl
sbb
pop
rcl
or
xor
and
dec
ror
sub
mov
sbb
stos
stos
and
sbb
and
div
dec
xchg
test
inc
out
mov
loopne
imul
push
jg
out
loope
sbb
inc
xchg
adc
jo
pushf
jle
mov
outs
sbb
xchg
mov
data16
mov
aam
pop
sub
sbb
ja
out
jnp
jl
mov
icebp
inc
mov
cmp
imul
clc
lahf
mov
pop
out
in
mov
dec
mov
aam
repnz
je
push
addr16
or
mov
sub
popa
inc
(bad)
cmp
outs
sub
pop
jnp
sub
sbb
das
cmp
mov
push
popf
pop
mov
adc
mov
and
adc
pminsw
stos
aas
aam
pop
xor
lods
cmp
cmp
push
outs
xor
xor
xchg
mov
add
xchg
stc
adc
lahf
cmp
jne
mov
mov
push
xor
aas
rcl
mov
adc
push
cmps
or
xor
push
test
jbe
mov
pusha
push
sub
stc
std
jmp
push
mov
add
cld
arpl
and
mov
xchg
aam
bound
dec
xchg
xchg
icebp
sti
inc
icebp
mov
mov
neg
mov
mov
mov
or
or
dec
loope
sbb
sbb
or
mov
xor
push
in
mov
cmps
scas
arpl
jge
or
pop
cmp
dec
div
and
cmp
test
outs
gs
cmps
fwait
push
xor
xor
push
push
cdq
das
xor
mov
or
pop
dec
jo
sub
std
out
push
inc
iret
cmp
sub
cmp
(bad)
ret
lds
add
iret
adc
daa
jne
and
test
fistp
inc
inc
cli
sub
shr
fs
push
daa
cmp
mov
fs
es
pop
xor
dec
adc
aas
xor
or
je
mov
stos
xor
stc
mov
or
and
adc
sbb
fdivr
shl
push
pop
repz
push
xchg
push
mov
in
jne
nop
mov
ins
(bad)
and
push
and
sbb
mov
scas
movs
loop
outs
cmps
(bad)
inc
lock
retf
(bad)
jbe
cli
pop
sub
sub
int
dec
dec
ja
xor
add
fist
call
lods
pop
mov
push
dec
pusha
stos
hlt
jns
xchg
inc
and
push
inc
cld
dec
out
js
(bad)
shr
push
cmp
push
call
adc
xchg
pop
les
sbb
xchg
push
rcr
out
add
xchg
rdtsc
(bad)
cmps
mov
cld
lea
pop
sahf
inc
jmp
push
fmul
mov
cmp
fmul
mov
push
dec
sbb
cli
mov
jbe
dec
mov
inc
and
lds
mov
cli
test
neg
jnp
stos
push
outs
cli
dec
or
cwde
mov
mov
and
loope
fs
xchg
push
push
sbb
stos
into
test
addr16
pop
rcr
icebp
jmp
ja
xchg
shl
test
add
or
mov
fcom
push
out
mov
ja
cmps
nop
ss
sbb
lahf
jnp
pop
mov
push
xchg
mov
xchg
dec
scas
idiv
xchg
jecxz
xor
push
ret
mov
and
jb
(bad)
cmp
sub
nop
adc
jecxz
pop
and
xor
sbb
imul
mov
lock
push
fwait
mov
jnp
pop
mov
ret
jl
adc
xor
adc
inc
xchg
or
dec
stos
sahf
outs
fild
xor
into
icebp
mov
sar
cmp
jno
push
mov
sub
mov
xor
push
push
(bad)
retf
test
lods
pusha
clc
sub
jge
and
in
imul
in
xor
inc
lea
mov
ins
je
ins
lds
inc
shl
pop
mov
jl
outs
stos
cmp
arpl
int3
cli
popf
push
and
push
sub
ffreep
dec
cmp
cmp
pop
or
mov
test
in
(bad)
(bad)
adc
out
dec
jmp
popf
popf
push
(bad)
sbb
mov
dec
mov
push
popf
and
adc
mov
cmp
xor
xor
imul
jbe
ins
cmp
and
jne
xchg
adc
cmp
mov
cmps
push
xor
cmp
outs
pop
retf
push
ret
cmp
lods
hlt
mov
push
sbb
(bad)
mov
inc
loope
stc
loope
dec
pop
push
adc
shl
fnsave
sti
jg
xchg
sti
cmp
and
rcl
adc
dec
gs
dec
mov
adc
in
fidiv
out
xchg
js
push
fiadd
jnp
outs
cli
sub
add
out
mov
sbb
or
in
xchg
xchg
pop
sub
neg
in
lds
idiv
xor
daa
stc
and
push
ret
add
(bad)
popf
jns
adc
in
xchg
repz
sub
mov
sub
dec
mov
dec
addr16
loopne
in
out
out
js
mov
push
dec
and
gs
lds
or
jmp
pop
cmp
sub
push
das
and
aam
mov
rdpmc
jb
inc
adc
cmps
iret
inc
fcomp
pop
pop
hlt
pop
cmp
mov
out
ins
push
cmp
pop
dec
sbb
xlat
enter
cli
pop
cmp
sub
dec
fst
xchg
or
dec
adc
cdq
sbb
sbb
jmp
ins
lahf
pop
repnz
js
std
cmp
xor
movs
movs
call
cwde
pop
in
inc
pushf
add
dec
inc
sbb
cmp
pop
xchg
dec
mov
aam
dec
mov
(bad)
sahf
outs
mov
movs
retf
(bad)
fstp
scas
popa
mov
fadd
jmp
push
sub
imul
xchg
sub
in
dec
aam
rol
dec
out
fs
aam
cs
movs
sar
and
push
ret
and
cmp
jb
adc
test
mov
inc
sbb
dec
call
pop
xor
outs
mov
mov
xlat
adc
fsubr
pop
adc
pop
popa
pop
mov
sbb
push
clc
(bad)
cmps
adc
sub
add
mov
cmps
dec
inc
pop
jns
test
xor
and
pop
movs
test
dec
mov
repz
push
aad
into
xchg
pop
push
pop
(bad)
lock
and
sub
rcl
mov
sub
push
or
and
aas
icebp
fs
sub
ds
(bad)
pop
mov
aas
shr
cmp
add
rcr
test
push
and
addr16
popf
in
mov
aaa
cli
test
in
ror
adc
jp
pop
mov
pusha
icebp
js
repz
loop
inc
leave
push
je
mov
cwde
and
and
scas
push
hlt
sar
or
cli
mov
inc
jmp
or
push
mov
dec
dec
(bad)
int3
inc
jae
sub
mov
lock
mov
mov
mov
inc
stos
push
mov
jmp
pusha
or
movs
add
fwait
nop
movs
ins
xchg
jecxz
daa
xor
imul
leave
je
sbb
add
fistp
cli
adc
shl
mov
pop
pushf
push
add
and
xchg
ds
lea
popf
push
cmp
mov
cmp
in
push
push
cmp
mov
std
scas
ret
sub
push
fiadd
push
dec
add
lods
ret
add
movs
dec
das
xor
push
stos
dec
in
mov
pop
mov
movs
out
xchg
icebp
sub
lods
inc
mov
pop
gs
test
ret
pop
(bad)
xor
mov
leave
dec
pop
test
je
js
cmp
xor
lea
lahf
jge
iret
aam
add
cmp
ffree
imul
clc
pop
push
mov
pop
test
jge
xchg
jl
dec
cdq
or
mov
jl
addr16
mov
sbb
icebp
add
jmp
cld
out
gs
data16
lods
retf
inc
ja
(bad)
adc
fdiv
push
sbb
cmovne
xlat
jb
pop
jl
std
mov
or
repnz
clc
scas
nop
(bad)
ret
adc
mov
into
mov
cmp
mov
push
sar
stos
pop
lea
out
add
sub
xor
adc
sub
call
in
xchg
int3
sbb
pop
xor
cmp
jecxz
xchg
out
data16
enter
outs
mov
and
out
movs
stos
rol
rol
push
repnz
call
aaa
jae
or
cmp
(bad)
loope
and
add
cld
cdq
pushf
pop
mov
add
dec
jmp
ins
pop
add
fiadd
test
fistp
div
push
adc
fs
inc
inc
rcr
adc
xor
jecxz
xor
data16
dec
ins
jb
(bad)
jmp
(bad)
or
fbld
pop
pop
call
or
cdq
xchg
pop
or
rol
fadd
pop
out
lock
ret
xchg
inc
xchg
cmps
xchg
sbb
cmp
mov
leave
(bad)
scas
loop
cmps
das
pop
mov
loopne
or
inc
test
sub
ret
jecxz
pushf
pop
(bad)
sbb
lods
mov
mov
xor
fwait
mov
bound
out
dec
sub
sbb
xchg
call
or
stos
jns
out
gs
dec
out
rcl
rcl
dec
mov
mov
adc
push
push
ficom
and
int3
and
jmp
mov
(bad)
loop
cld
lds
add
sub
jle
pop
xchg
dec
jb
sbb
(bad)
icebp
out
lahf
xor
arpl
(bad)
mov
int3
inc
sub
cmp
xchg
sbb
mov
retf
push
mov
daa
(bad)
mov
fs
jl
jge
push
mov
inc
gs
push
xchg
shl
pop
loope
outs
jae
sbb
push
(bad)
push
cmp
mov
cmp
rep
adc
mov
jge
or
leave
mov
jo
hlt
rol
xor
(bad)
or
fst
mov
in
fwait
call
and
mov
pop
out
mov
xchg
movs
inc
add
icebp
int
gs
cmp
mov
js
ret
pop
ins
jl
cld
outs
push
cmp
mov
inc
inc
es
(bad)
stc
into
js
ins
adc
or
int
lahf
xchg
mov
add
clc
and
or
scas
push
movs
xchg
push
push
dec
out
test
pavgb
cmp
test
jmp
xor
call
gs
jns
add
jmp
mov
mov
or
mov
daa
sub
jecxz
mov
sub
addr16
sbb
mov
dec
xlat
or
lahf
daa
data16
and
out
lods
mov
jge
push
jg
mov
test
cwde
inc
jp
mov
xor
sbb
movs
in
aad
mov
ret
xchg
in
push
mov
aam
sbb
jb
jmp
ret
and
push
jle
repz
fisttp
(bad)
shl
sub
dec
aam
inc
bound
loope
mov
pushf
loopne
hlt
fild
mov
cmp
add
inc
and
xchg
cmp
mov
(bad)
cmp
fld
loop
or
ss
(bad)
jo
push
leave
mov
push
in
push
sbb
adc
push
push
lea
cld
mov
in
mov
mov
push
sbb
lods
jg
dec
dec
rcr
xor
fstp
pop
or
movs
add
cmp
push
jmp
push
idiv
mov
jno
mov
cmp
mov
or
mov
cdq
nop
dec
adc
add
inc
mov
and
sbb
push
out
and
out
ds
nop
adc
cdq
jecxz
in
fmul
sbb
mov
cmp
ror
and
add
or
mov
fld
fs
daa
or
in
in
inc
xor
repz
or
imul
in
push
jo
mov
pop
data16
in
pop
jmp
or
mov
daa
pop
movs
xchg
sub
xchg
out
xchg
sahf
sbb
aam
xchg
mov
cmps
xor
cmp
add
xor
adc
addr16
call
das
sub
pop
pop
dec
repnz
ins
idiv
jp
mov
test
arpl
xor
or
out
pop
jge
repz
ret
(bad)
into
dec
lds
pop
ins
jns
push
jnp
cmp
mov
(bad)
int3
and
and
icebp
pop
cld
pop
inc
xchg
pop
sbb
aad
loop
mov
stos
fucomi
dec
xchg
pop
or
jecxz
push
push
push
pmaddwd
lock
aad
dec
pop
push
adc
xchg
cld
sti
sub
jb
(bad)
jmp
sub
cdq
cmp
mov
lahf
scas
fsubr
cmpxchg
xor
and
shr
and
sub
div
data16
lock
push
jno
fiadd
out
pop
push
xor
push
inc
push
mov
mov
xor
vsubss
loop
and
scas
in
xchg
inc
mov
outs
sahf
(bad)
retf
mov
dec
sub
nop
pop
mov
enter
cmps
aad
mov
aas
nop
mov
enter
aad
lea
aas
pop
inc
jmp
push
add
jg
pop
cli
sti
xchg
add
sbb
adc
repnz
retf
xlat
in
(bad)
sub
lods
sahf
and
or
sbb
mov
mov
jns
mov
mov
in
clc
push
mov
js
movs
js
xchg
ret
cmp
adc
jle
nop
cmp
in
loopne
sar
ss
sub
sbb
(bad)
cmp
mov
inc
mov
pop
pop
(bad)
sbb
loop
adc
mov
mov
das
jbe
aaa
jns
lahf
and
cs
test
push
sub
movs
addr16
nop
pop
arpl
mov
in
daa
jmp
inc
cmps
cmp
mov
xchg
xlat
aad
inc
lahf
xchg
clc
or
mov
xchg
mov
loopne
je
push
mov
cmp
ficomp
jo
inc
pop
xlat
into
daa
xor
jne
mov
hlt
dec
mov
scas
inc
lods
inc
sti
mov
or
jb
push
shl
and
inc
pop
or
sbb
jne
out
cmc
shr
add
jno
fsubr
push
aaa
daa
loop
add
xor
mov
cdq
int
sbb
add
loopne
jbe
sub
jnp
sbb
pop
cwde
mov
add
cdq
in
gs
xchg
pop
inc
mov
mov
(bad)
cwde
or
sti
rcl
cmps
push
cmp
aam
add
mov
or
pop
inc
sub
dec
repz
jne
lock
(bad)
lahf
adc
inc
ficomp
add
popf
xchg
jl
xlat
xor
outs
sub
std
adc
loope
push
mov
pop
adc
sub
mov
push
test
push
pop
pushf
mov
js
jmp
imul
(bad)
outs
pop
iret
lahf
outs
mov
fcomp
fmul
mov
xor
(bad)
je
jp
syscall
retf
stos
packsswb
mov
push
pushf
push
cwde
sub
inc
pop
push
dec
jecxz
sbb
mov
shr
mov
or
push
xchg
push
lds
fs
fsubr
es
cs
nop
pusha
enter
mov
cmp
out
cmp
mov
les
adc
aaa
sbb
repnz
xchg
add
push
lods
push
loop
mov
lods
in
push
push
test
cwde
xlat
jmp
outs
aad
xchg
or
cmp
adc
(bad)
mov
cmp
fld
repz
shl
dec
in
cmp
pop
imul
stc
mov
aam
pop
mov
dec
pop
repnz
pop
pop
xor
sub
ffreep
inc
xor
inc
push
ins
adc
mov
mov
sbb
nop
scas
imul
iret
cwde
cmp
les
inc
imul
(bad)
shl
mov
push
push
aad
nop
scas
push
test
stc
adc
push
in
aaa
sbb
push
(bad)
push
jae
adc
aaa
retf
and
iret
sub
leave
mov
outs
push
call
push
mov
clc
xor
shr
jg
jns
xchg
fnstcw
cli
stos
sbb
or
arpl
sti
shl
imul
mov
xchg
cld
dec
stos
mov
pop
fnstsw
inc
les
cmp
mov
add
bound
mov
pushf
lea
out
or
mov
pop
rcr
das
push
cdq
in
popa
lods
stos
pop
int3
daa
pop
loope
sub
push
mov
mov
daa
add
sti
popa
xor
sbb
into
dec
lds
push
mov
mov
cmc
test
cwde
cwde
xlat
lahf
outs
test
int
iret
test
out
xchg
push
ret
cld
jae
aam
push
icebp
std
ret
push
mov
fs
dec
movs
inc
mov
clc
in
out
add
inc
sub
fisttp
adc
fild
xchg
shr
adc
xchg
xabort
jle
adc
pop
or
ret
idiv
cli
adc
call
add
data16
xchg
movs
mov
dec
pop
jne
repz
inc
es
jmp
call
and
sti
pop
in
jge
push
pop
rol
mov
adc
inc
sbb
pop
movs
push
add
or
test
dec
xchg
addr16
lock
mov
iret
(bad)
enter
mov
and
(bad)
fisubr
mov
dec
scas
cmp
jmp
out
stos
xchg
add
pop
cmp
pop
sub
aas
sbb
adc
xchg
and
test
adc
cmp
jle
mov
push
lea
sbb
shl
push
mov
sub
push
shl
inc
ss
sbb
mov
dec
sub
cwde
lock
cmp
shl
into
hlt
scas
mov
and
fdiv
pushf
(bad)
stos
mov
and
push
clc
leave
sbb
push
cs
call
test
pushf
test
push
addr16
push
sub
fwait
or
dec
push
jge
push
sbb
push
and
xor
add
test
clc
sub
mov
jnp
pop
ret
xor
inc
sub
adc
fmul
pop
cli
xor
repz
xchg
lock
outs
adc
mov
ja
jmp
cs
outs
push
add
pop
pop
dec
xor
retf
jmp
out
mov
push
cld
test
sub
mov
mov
sbb
push
fucom
jge
mov
in
sub
pop
call
jl
popa
xchg
scas
ds
arpl
sub
rol
addr16
mov
cmp
imul
dec
push
cwde
adc
inc
mov
dec
push
pop
jne
and
adc
xchg
and
dec
jnp
pop
mov
into
cld
(bad)
rcr
mov
mov
sti
hlt
idiv
mov
ficom
retf
jmp
mov
push
neg
sbb
out
cmp
out
dec
and
cmp
loopne
push
psubusw
leave
faddp
sub
mov
dec
stos
jg
cmp
inc
sub
xor
push
mov
sub
jecxz
adc
(bad)
aad
es
adc
xchg
scas
iret
fimul
repnz
cli
lods
or
sbb
mov
sub
ins
push
pop
pusha
out
xchg
loope
sub
fisub
ficom
jnp
sub
sbb
jne
ss
sbb
jnp
call
dec
lock
adc
mov
mov
cmp
add
sbb
and
or
jecxz
xchg
inc
call
popf
mov
lock
dec
inc
movs
out
dec
xor
cmp
aad
mov
es
push
mov
aam
and
cwde
lds
sbb
xor
(bad)
loopne
jmp
pop
pop
and
sbb
adc
push
and
pop
je
cdq
pop
mov
add
pop
mov
cmps
jg
push
inc
in
daa
dec
dec
xchg
add
les
push
in
pushf
mov
sbb
mov
clc
jo
das
inc
imul
jne
sahf
pop
fcomp
fwait
push
sbb
dec
xchg
xchg
popa
out
mov
je
nop
pop
loop
pop
les
xchg
fcomp
and
(bad)
popa
push
pop
pop
xor
scas
inc
or
pusha
xchg
enter
xor
jle
aad
ja
cmp
ja
test
aas
out
jbe
cmps
cs
shr
fcmovnu
jb
mov
nop
ja
mov
cmp
add
xchg
hlt
mov
aam
(bad)
pop
gs
call
sub
mov
ja
push
aas
mov
cs
fndisi(8087
mov
aam
mov
hlt
leave
in
mov
mov
std
movs
pop
push
sub
aam
sub
jb
shr
jp
jmp
push
hlt
inc
std
pushf
scas
mov
and
inc
mov
xchg
test
dec
scas
push
push
pop
push
sbb
les
retf
stos
mov
dec
scas
lock
out
ja
mov
ins
inc
es
lods
bound
js
je
gs
js
cwde
idiv
push
adc
rcr
jmp
int3
sar
jmp
push
mov
nop
xchg
(bad)
out
xchg
vorpd
int
adc
retf
add
dec
loope
jne
inc
pop
and
add
(bad)
jle
cwde
ret
add
and
hlt
lahf
push
and
mov
stos
in
jbe
test
mov
popa
xchg
fld
daa
add
and
out
ds
push
lahf
sub
mov
jbe
lods
mov
dec
xlat
repz
sbb
dec
sbb
aaa
idiv
gs
lahf
push
iret
outs
or
mov
inc
and
jae
add
out
mov
sbb
dec
shr
pop
aas
mov
call
sbb
mov
jnp
mov
(bad)
adc
add
outs
mov
lahf
cmps
xor
cmp
hlt
inc
(bad)
adc
inc
leave
data16
inc
cdq
shl
dec
add
or
lea
cmp
adc
sahf
mov
aam
cld
fbld
xchg
stc
lods
loope
xor
jecxz
sbb
cdq
inc
or
mov
inc
fisttp
sub
ret
sbb
std
pop
pop
mov
lock
pop
rcr
mov
dec
test
fidivr
and
jbe
push
mov
mov
call
fiadd
out
mov
pusha
add
jae
aas
lods
or
sub
in
adc
mov
push
enter
sbb
add
dec
push
mov
ret
mov
scas
push
add
out
dec
dec
push
xchg
mov
jg
(bad)
mov
cld
enter
push
scas
xor
dec
add
dec
(bad)
ror
ret
ret
ja
test
ficom
inc
pop
push
js
dec
add
fwait
movs
inc
cwde
sbb
add
adc
push
outs
cmp
fnstcw
pop
test
adc
sub
clc
mov
(bad)
and
and
fcmovb
popa
cwde
inc
jg
js
xor
lods
movs
lock
(bad)
pop
xchg
inc
ins
(bad)
into
in
inc
pop
ret
cmp
and
shr
cli
jno
enter
cmps
jbe
mov
lods
mov
ficomp
push
lds
xor
movs
xor
sbb
(bad)
sar
mov
(bad)
pop
cmc
adc
add
or
xor
cmp
mov
cmp
mov
sub
test
cld
or
cli
xor
mov
adc
xor
pusha
dec
jp
arpl
fadd
mov
jo
mov
sub
mov
leave
shr
fild
mov
imul
je
mov
sub
mov
pop
sbb
fild
sahf
gs
out
fcom
xor
stos
mov
inc
inc
(bad)
mov
out
fstp
cmp
cmp
add
shl
xchg
stc
cwde
xor
cmp
ja
mov
inc
stos
dec
and
pop
retf
add
adc
add
fs
mov
imul
xor
mov
lods
or
cmps
les
and
fcmovnbe
stc
cmp
mov
xor
xor
mov
jle
mov
gs
pop
xor
cmps
xchg
and
(bad)
mov
cmp
xor
fcomp
(bad)
pushf
jno
dec
push
call
cmps
lds
mov
out
mov
push
push
mov
mov
aam
pusha
test
leave
das
mov
test
ss
push
faddp
ret
sub
aas
out
fs
mov
pop
push
jns
add
jl
dec
mov
outs
pop
cwde
pop
jmp
jmp
in
pop
xor
dec
inc
loope
xor
add
mov
imul
rcr
adc
fneni(8087
shl
jmp
daa
inc
mov
out
mov
jmp
(bad)
es
dec
xor
inc
inc
ficom
add
nop
(bad)
mov
pop
shl
xchg
sahf
cmc
scas
lods
aam
jle
rdpmc
cmc
xchg
lods
jmp
fist
stos
scas
jne
and
cs
xchg
fidiv
push
push
adc
arpl
mov
fcmovbe
lahf
add
std
adc
mov
sti
daa
mov
sar
popa
dec
test
repz
pushf
pop
jp
les
pop
test
xor
int3
loopne
into
pop
cwde
clc
push
aad
inc
sbb
ss
es
std
mov
sbb
pop
jp
outs
and
push
xor
inc
hlt
mov
cmps
dec
ret
jno
xchg
push
mov
xchg
adc
or
cmp
mov
into
mov
loop
pop
mov
ins
lock
sbb
jb
sbb
mov
push
das
jae
xor
shl
repz
aaa
test
in
lock
xchg
mov
sbb
xchg
mov
out
shl
jmp
pcmpeqw
mov
xchg
ror
mov
pop
stc
mov
repnz
push
int3
xchg
mov
or
lea
frstor
jnp
xor
pushf
add
xchg
xor
mov
popa
mov
pop
cmp
mov
cmps
push
xchg
mov
pop
or
clc
mov
popf
clc
ss
out
add
mov
mov
jp
mov
stos
xor
lock
scas
xchg
popa
leave
shl
ret
femms
mov
inc
test
mov
mov
popa
or
imul
and
out
stos
lods
jge
mov
add
(bad)
(bad)
cmp
pop
or
inc
mov
cmp
sub
and
ret
lods
pop
adc
mov
or
(bad)
cwde
iret
sub
call
cmp
stos
mov
dec
mov
(bad)
jmp
sar
xchg
imul
pop
mov
xchg
retf
adc
cli
rcl
pop
dec
inc
ret
sub
call
mov
sbb
sub
hlt
mov
sti
cmp
xchg
mov
jge
addr16
icebp
mov
xlat
mov
adc
retf
cmc
shr
adc
xor
sbb
mov
jb
or
stos
cmp
or
cmp
jnp
ins
pmaddwd
repnz
push
cs
sub
xor
js
stc
cmp
je
daa
leave
out
mov
imul
add
pop
cli
repnz
pushf
sub
sbb
test
pop
popf
fucom
sbb
xchg
icebp
and
mov
push
mov
lock
sub
test
loope
jp
rol
(bad)
lods
bound
jno
dec
aaa
scas
popa
jnp
cmc
pop
push
(bad)
adc
pop
sbb
jmp
scas
les
cmp
mov
retf
add
add
mov
push
inc
in
out
mov
jns
push
out
push
retf
pusha
mov
(bad)
jg
push
jae
rcl
fnsave
jmp
pop
mov
fcomip
gs
pop
push
jle
daa
fcomp
cs
push
mov
xor
cmp
into
shl
or
fiadd
jno
(bad)
lock
dec
jmp
outs
fidiv
cmp
dec
out
add
cdq
cmp
pop
leave
dec
ds
out
jmp
mov
enter
popf
xchg
xor
push
jns
into
mov
daa
repnz
cmp
adc
pop
add
cli
jp
rcr
sub
daa
int3
cmp
cmps
repz
(bad)
add
mov
rcr
pop
lds
stos
rcr
and
jle
mov
mov
jecxz
test
ja
pop
inc
and
popf
and
jmp
sub
mov
movs
xchg
push
push
arpl
push
call
cdq
scas
rcr
sub
sbb
jne
hlt
out
je
jmp
leave
sub
bound
gs
fcomp
ins
hlt
call
xor
daa
inc
stc
fwait
add
xor
and
pop
popf
push
lea
jle
sahf
pop
stos
mov
rcl
mov
and
or
test
adc
mov
xlat
xchg
adc
test
jno
jle
pop
setb
fwait
mov
lods
pop
jb
fdivr
mov
bound
jbe
and
mov
fdiv
dec
outs
loope
mov
mov
mov
sub
adc
loopne
es
addr16
jmp
scas
add
and
xor
pop
sbb
xor
and
adc
es
inc
dec
xor
pop
adc
fmul
bound
test
dec
adc
fstp
mov
js
(bad)
and
loop
pusha
jo
mov
scas
mov
mov
xchg
jbe
out
sub
pop
(bad)
sub
(bad)
stc
or
ins
fisttp
push
enter
pop
jnp
(bad)
fisttp
int3
(bad)
mov
mov
out
or
and
ret
or
bound
mov
and
mov
dec
xchg
scas
fild
cmp
idiv
js
mov
outs
pop
mov
mov
push
or
popf
pop
push
push
imul
out
mov
mov
push
retf
and
mov
jne
js
jnp
sub
mov
mov
push
jbe
cmp
and
ror
enter
enter
in
pop
push
jbe
jp
xor
xchg
aad
ss
clc
jnp
ret
sub
dec
inc
movs
das
scas
sbb
int
jae
jo
pop
xchg
div
test
jne
xor
mov
test
daa
adc
sub
rol
dec
nop
cmp
scas
inc
aad
icebp
je
mov
aam
stos
or
sub
jl
imul
scas
jne
jbe
fld
ror
jae
pop
pushf
pop
int
add
sbb
mov
mov
cmp
jmp
pop
cmp
cmp
ss
movs
stc
test
ret
mov
inc
inc
cdq
out
repz
scas
js
jmp
mov
shr
sbb
call
jbe
outs
and
loope
xchg
rcr
rol
icebp
jbe
mov
aam
cmp
and
scas
inc
(bad)
xchg
sbb
sub
int3
rcr
in
jae
mov
aas
ret
fnstenv
jmp
sbb
ja
inc
(bad)
or
les
sar
jo
(bad)
and
sub
xor
adc
stos
fidivr
push
fist
and
jb
mov
adc
pop
(bad)
dec
and
cmp
std
mov
pusha
(bad)
jo
push
test
xor
(bad)
ss
mov
sub
push
loopne
inc
test
xchg
ds
inc
rcl
and
popa
xchg
adc
and
call
clc
jge
jl
outs
inc
leave
lods
(bad)
(bad)
fs
xor
ret
iret
and
push
imul
inc
mov
hlt
ins
sahf
push
outs
std
shl
sar
pop
retf
mov
dec
into
xor
das
mov
mov
outs
data16
call
jg
retf
sahf
dec
sbb
xor
mov
jecxz
xchg
pushf
fsubr
mov
clc
cmp
sti
ins
mov
(bad)
cs
pop
pop
lea
xchg
sbb
pop
cmps
sbb
mov
add
pop
inc
jl
retf
retf
int
adc
jge
sbb
dec
pop
(bad)
and
rcl
out
test
xor
mov
xor
enter
out
pop
pop
aad
xor
lds
sahf
xchg
lods
and
push
arpl
add
loop
ret
cmp
push
push
push
out
pop
mov
xlat
shl
sti
cmc
loopne
lock
pushf
xchg
cwde
hlt
or
and
popf
out
xchg
lahf
icebp
std
js
push
jnp
jg
adc
mov
push
add
add
inc
inc
inc
jb
rcr
fidiv
outs
call
or
nop
lahf
dec
jns
mov
mov
jae
mov
in
ss
xor
inc
ficom
adc
leave
adc
ret
push
mov
in
test
sub
add
xchg
or
mov
mov
not
mov
cmp
push
cld
xor
outs
lods
adc
xor
or
lods
or
and
add
out
cmp
push
mov
push
in
retf
or
ror
lahf
cmp
inc
and
popa
out
loope
icebp
test
mov
repz
inc
cmp
icebp
dec
sbb
mov
mov
cmp
shl
or
nop
push
movs
cmp
fsubr
pop
push
xchg
das
cmc
addr16
and
call
lahf
out
loop
mov
add
mov
clc
fwait
jns
and
jl
out
xchg
mov
std
sbb
push
mov
dec
cdq
push
gs
sub
xor
sub
mov
jne
lea
test
popf
into
pop
push
ds
call
mov
pop
ret
daa
xor
xor
xor
adc
inc
xchg
push
retf
xor
push
jb
ins
jge
out
sub
mov
rcr
lods
adc
mov
fsub
xor
add
fmul
sbb
pushf
mov
(bad)
mov
inc
adc
pushw
ret
mov
test
jge
gs
lahf
mov
sbb
bound
push
ds
xchg
sbb
push
jg
pop
stos
out
in
aas
sub
mov
push
icebp
adc
and
and
mov
inc
lods
mov
es
pop
inc
pop
mov
repnz
mov
aad
mov
retf
cmp
addr16
call
inc
imul
mov
cmps
inc
popa
adc
and
and
cwde
fiadd
repz
inc
aad
pop
mov
push
add
loop
adc
and
fwait
lahf
outs
ret
cmp
adc
lahf
sub
push
fnstcw
sub
jnp
imul
nop
jg
repnz
mov
stos
inc
mov
daa
mov
xchg
rcr
imul
jo
shr
out
mov
cmpps
lock
repz
push
out
mov
scas
xchg
fs
mov
pop
sar
add
stc
in
mov
loop
cmp
pop
iret
jns
cmps
cmp
and
or
push
repz
cwde
sub
cdq
fsubp
fbld
pop
(bad)
sub
mov
xchg
push
out
in
sbb
fdiv
sbb
call
retf
sar
into
popf
fwait
push
add
sub
idiv
xor
dec
pop
popa
add
hlt
sbb
mov
cs
dec
hlt
mov
jns
jmp
dec
das
mov
mov
jno
xchg
cld
push
push
sti
mov
rcr
ja
mov
sti
jge
cld
push
dec
stos
fsubr
adc
mov
lock
ror
jecxz
retf
dec
out
retf
mov
div
and
push
jge
mov
jae
lahf
dec
xchg
xchg
mov
jmp
cwde
xor
cmp
add
or
js
pop
add
jmp
mov
sti
push
push
cmp
dec
fild
mov
aas
adc
stos
(bad)
repz
inc
(bad)
pushf
pop
enter
fstp
pop
xor
cmp
or
mov
jae
cmp
jno
pop
loopne
sub
or
push
stc
ss
(bad)
adc
js
popa
cmp
rcl
lods
inc
pop
add
pop
inc
fcom
ror
cmp
add
test
xchg
sub
or
icebp
inc
mov
ret
jl
push
sbb
fadd
cld
pop
out
and
and
sub
lds
push
jp
das
cdq
inc
sti
pusha
jp
rcl
mov
fcomp
cmp
out
jmp
mov
fcomp
xchg
adc
test
ja
xchg
push
aaa
aad
popf
push
rcr
and
sbb
pop
fistp
fwait
(bad)
mov
and
popf
or
mov
out
aaa
add
jecxz
and
pop
push
test
outs
mov
adc
mov
push
out
inc
xchg
pop
push
or
cwde
mov
cmp
push
xchg
aam
jle
lea
adc
pop
mov
(bad)
cdq
(bad)
fimul
mov
push
mov
sub
je
dec
iret
sub
jnp
or
movs
inc
mov
sub
mov
sbb
jp
scas
out
(bad)
sub
xor
rol
out
sahf
xor
lahf
inc
cmc
js
in
stc
adc
pop
fwait
and
sub
pushf
cmp
mov
mov
inc
pop
sbb
mov
out
out
pusha
xchg
std
out
pop
cli
loop
fdiv
in
cmps
int
mov
inc
int3
addr16
sahf
daa
retf
test
adc
lods
aaa
jl
push
inc
pop
push
cmps
xchg
clc
jo
(bad)
push
mov
pop
push
icebp
repnz
retf
data16
ins
mov
push
ret
inc
(bad)
sbb
test
jb
mov
out
ret
(bad)
shl
mov
ins
(bad)
cld
ficom
std
cmp
push
or
jecxz
sub
lock
fs
(bad)
xor
mov
icebp
addr16
sahf
add
dec
push
add
fcmovne
les
or
adc
(bad)
in
ror
cmp
jnp
cmp
lea
pop
xor
mov
jnp
jns
std
jp
push
ss
mov
jne
aad
sbb
(bad)
push
jbe
xchg
pushf
fstp
sub
cmps
mov
jmp
jae
mov
test
sahf
mov
lahf
mov
jb
nop
jmp
sub
push
mov
push
stc
fstp
xchg
out
dec
adc
xor
daa
ret
cmp
jb
out
add
pop
push
or
mov
add
sbb
ins
pop
cdq
adc
or
pop
pop
jl
in
(bad)
push
loop
cmp
mov
xchg
add
pop
pushf
sahf
or
mov
add
cwde
ret
sbb
mov
cdq
inc
(bad)
xchg
add
daa
mov
scas
cmp
sub
int3
dec
xor
xchg
sbb
cld
jno
cwde
adc
out
adc
jg
ins
(bad)
mov
cmp
fst
or
xchg
inc
xchg
repz
lods
inc
es
add
lahf
shl
imul
leave
mov
and
push
jecxz
sbb
adc
sbb
std
jl
imul
hlt
add
xchg
setge
pop
cdq
and
dec
mul
inc
dec
cmps
mov
cmp
inc
dec
sbb
xchg
push
ja
fnstsw
neg
inc
inc
retf
(bad)
cmp
xor
dec
inc
push
data16
lahf
pop
cld
xchg
mov
jg
xchg
inc
xor
xchg
mov
fiadd
ja
jle
into
push
call
(bad)
xor
ja
jmp
dec
xchg
or
ret
mov
test
pop
and
cmps
sub
(bad)
repz
into
sti
inc
adc
mov
sbb
xchg
daa
es
sti
lock
mov
aas
enter
add
lods
xor
mov
jge
xor
and
inc
fs
push
dec
jo
mov
xchg
gs
iret
xor
(bad)
adc
inc
cmc
cmp
sub
jno
iret
add
mov
cmp
push
pop
xchg
call
pop
jne
cmp
clc
jge
test
inc
shl
cmp
and
in
repz
pop
mov
mov
hlt
jge
inc
mov
inc
ins
dec
dec
stos
call
xor
mov
dec
sbb
dec
popa
jno
push
xlat
mov
push
pcmpgtd
and
call
mov
or
mov
sbb
cwde
nop
stos
ins
scas
add
jb
les
push
mov
push
mov
dec
dec
fsubr
int3
sub
adc
push
int3
scas
pop
push
mov
push
mov
cmps
movs
and
fmul
xchg
clc
mov
outs
mov
and
lahf
mov
(bad)
push
cmp
sbb
fild
mov
push
add
sbb
mov
xchg
sub
imul
iret
adc
clc
mov
rol
inc
inc
out
push
cmp
sbb
inc
inc
call
repz
mov
mov
sbb
or
xor
je
mov
mov
add
or
popa
mov
nop
jecxz
jnp
leave
dec
repnz
outs
mov
mov
es
add
cdq
in
dec
mov
lahf
mov
mov
js
loopne
push
in
and
fist
inc
sbb
xor
xchg
sar
inc
cmps
pop
cmps
jbe
cld
outs
mov
adc
xlat
lahf
movs
ss
jmp
in
dec
mov
les
push
add
paddsw
sbb
(bad)
mov
jns
xor
mov
retf
jno
out
cmp
ficomp
and
and
sbb
xchg
ds
rcr
push
inc
mov
fcmove
mov
push
(bad)
dec
sub
add
lods
sub
call
outs
add
inc
shr
and
xor
retf
xor
sub
loope
xchg
retf
shl
sub
add
sbb
pop
adc
mov
cmp
clc
out
es
add
jns
xor
fs
hlt
pop
test
xchg
call
movs
and
ins
mov
or
sbb
adc
rcl
mov
sub
lods
cwde
mov
js
dec
inc
push
repz
scas
rol
mov
pushf
add
or
add
push
and
sbb
pushf
int3
or
daa
fs
(bad)
loope
(bad)
jbe
jae
adc
pop
rcr
or
dec
jmp
mov
xchg
mov
sbb
scas
mov
jmp
les
dec
(bad)
inc
std
rcl
data16
sbb
ins
xor
cs
jg
pop
cli
cmps
dec
icebp
dec
and
push
aas
inc
jmp
out
mov
test
mov
jmp
dec
jle
adc
xlat
test
cmp
les
arpl
std
pop
adc
inc
std
pop
(bad)
mov
dec
mov
inc
outs
jl
popf
into
mov
pop
sbb
out
inc
mov
ret
ss
shl
and
adc
adc
fistp
cmp
mov
push
lahf
or
jmp
cmp
jae
int
out
xchg
push
add
popa
jns
jne
xor
mov
(bad)
pop
jmp
popf
icebp
adc
loop
pusha
dec
xchg
push
int
shl
push
push
cmp
aas
mov
add
or
pop
jbe
mov
sbb
ret
xchg
aas
ins
pop
sysret
fmul
xchg
mov
mov
outs
cld
or
adc
xchg
push
push
add
into
std
mov
fisttp
mul
add
outs
jno
pusha
and
push
jg
test
dec
xchg
test
out
dec
popa
test
mov
pop
or
test
mov
adc
mov
jo
in
pop
js
pop
sub
mov
jno
repz
cli
cmp
shl
adc
jns
adc
dec
pop
mov
shl
jo
inc
lahf
sbb
rcr
jmp
and
cmp
out
jge
mov
cmp
pop
mov
ins
sub
jns
mov
or
clc
aam
push
enter
das
pop
xor
movs
out
fistp
aad
jnp
fisttp
xrelease
cmps
push
inc
cs
mov
add
fs
xchg
dec
push
mov
retf
icebp
hlt
nop
xor
push
rcr
inc
mov
inc
sub
(bad)
gs
dec
mov
fnstenv
scas
cld
mov
lods
mov
jo
shl
nop
add
sub
push
test
sbb
dec
dec
xchg
and
not
(bad)
nop
cmp
push
xor
jo
inc
mov
arpl
push
dec
push
or
out
cmp
mov
pop
sub
test
ins
mov
iret
call
adc
test
xor
and
or
cwde
stos
shl
mov
pop
xor
add
dec
add
fldcw
loop
xlat
mov
pop
into
loop
into
jns
pop
daa
push
inc
ins
push
cdq
aas
cmp
mov
inc
jne
xchg
jb
xor
ffree
or
cli
(bad)
test
ret
xchg
lahf
rol
xor
mov
outs
in
add
imul
xor
mov
add
lods
int
fist
adc
pop
jae
mov
iret
sub
mov
and
fwait
ror
mov
aam
jp
sub
rcl
repz
cld
cmp
ds
and
dec
sub
ja
test
dec
xor
push
je
xor
clc
fs
fldcw
in
js
pop
jb
in
ret
xchg
iret
sbb
mov
popa
loope
jmp
pusha
(bad)
jmp
and
sub
add
xor
ret
(bad)
pop
cli
dec
add
fwait
add
sub
pop
imul
sbb
(bad)
arpl
xor
icebp
push
loopne
cmp
(bad)
das
loope
mov
pop
adc
dec
mov
retf
sub
or
aad
es
jmp
int3
lods
mov
dec
clc
sahf
cs
repz
add
hlt
cmp
rcl
mov
arpl
push
fbld
mov
test
(bad)
cmc
or
lods
mov
popf
add
push
sbb
mov
push
cmp
fst
cld
adc
clc
das
outs
(bad)
call
add
xor
sbb
test
in
repz
mov
xor
jno
mov
clc
jo
(bad)
pop
mov
enter
jnp
mov
xor
dec
and
idiv
pop
sti
into
pop
loopne
das
adc
cmps
movs
pop
adc
jg
push
out
mov
outs
les
fld
aam
mov
dec
not
mov
inc
test
push
out
xor
sub
repz
pop
xchg
and
out
inc
mov
push
out
inc
cdq
jl
lahf
push
and
stos
xor
out
(bad)
push
xchg
mov
fsubp
cld
test
dec
jmp
pop
jmp
mov
js
mov
mov
arpl
loope
ds
inc
fs
add
push
test
ret
push
scas
mov
hlt
mov
push
sbb
pop
cmps
imul
loope
scas
pop
and
arpl
shr
fwait
cmc
jnp
adc
hlt
retf
les
and
mov
gs
and
and
frstor
dec
mov
mov
mov
stos
add
fisttp
ror
lock
inc
js
dec
sub
mov
jl
sub
cmp
call
ret
fadd
aas
xor
inc
retf
popf
mov
sub
cmp
int3
imul
cld
jo
std
jmp
jmp
xor
mov
ss
inc
int
sahf
dec
sub
fdivr
int3
stc
shl
call
adc
mov
jmp
cmps
push
xor
pop
mov
movs
(bad)
fs
test
rcr
(bad)
xor
sti
xchg
and
addr16
xchg
lea
adc
and
jl
pusha
stos
fwait
push
icebp
in
cli
scas
bound
lahf
xchg
push
pop
xlat
cmp
test
cmp
imul
push
enter
add
sbb
repnz
outs
das
loop
daa
jg
mov
call
js
and
enter
xchg
sbb
push
lods
lods
xchg
dec
in
sub
scas
jns
sbb
lds
xor
fucompp
daa
adc
inc
ror
js
std
fcomip
and
ins
inc
mov
lock
or
push
loopne
add
dec
mov
popa
int
lahf
fcmovnbe
pop
mov
inc
iret
shl
int3
xchg
jo
cwde
or
add
mov
mov
movs
fcmovu
mov
pop
outs
cmp
frstor
cmps
movs
das
mov
jb
dec
sub
aad
ins
jge
lahf
xlat
test
cld
and
or
xchg
sbb
movs
xchg
clc
(bad)
std
stos
pop
rcr
jmp
xor
cmps
push
fiadd
jl
daa
ds
out
adc
and
outs
adc
pop
inc
cmps
in
enter
sub
fstp
loop
jne
ds
sbb
aad
call
pop
inc
xchg
imul
push
jne
outs
cmp
cmp
xchg
addr16
jmp
jbe
mov
jb
inc
push
pushf
cmps
jmp
ja
popa
loopne
add
cmp
push
add
arpl
(bad)
les
mov
arpl
mov
xchg
jge
sub
or
xchg
mov
cli
xchg
daa
adc
jp
mov
imul
fcmovnb
sub
pop
push
mov
sbb
lea
retf
leave
out
les
dec
and
cmp
inc
test
jge
add
or
sbb
inc
sub
std
and
mov
and
enter
ror
push
mul
jo
jmp
inc
or
sub
dec
test
lea
ins
icebp
sub
fld
add
into
sbb
stos
add
lahf
outs
jbe
mov
or
mov
jno
adc
xchg
in
push
xchg
mov
mov
add
and
fisttp
pushf
add
into
dec
int
outs
movs
and
rol
add
mov
dec
adc
fwait
jecxz
shr
jmp
adc
mov
repnz
cdq
lods
xchg
lahf
jp
bound
pop
into
mov
mov
arpl
mov
pop
mov
stc
data16
std
pop
and
into
or
jne
pusha
pop
push
mov
add
mov
push
mov
sbb
xchg
pop
outs
dec
add
add
(bad)
ss
xor
fst
lahf
and
ja
adc
gs
not
outs
arpl
(bad)
sahf
fiadd
pop
lods
pop
pop
jae
(bad)
fld
sbb
pop
inc
mov
mov
fistp
cmovl
loope
hlt
cmps
jnp
outs
jl
sub
retf
pushf
imul
add
in
call
repnz
retf
ins
shl
dec
mov
scas
xor
pop
push
iret
rol
cmp
pop
cmps
push
in
sbb
test
cld
imul
and
sbb
xchg
xchg
mov
fwait
jmp
or
push
in
or
mov
aam
test
xchg
xlat
inc
push
jne
sub
std
outs
inc
push
xlat
std
mov
push
and
ret
cmp
xor
sub
push
sbb
xchg
(bad)
dec
jmp
enter
mov
bound
jnp
and
out
fcmovnb
aaa
pop
stc
mov
jae
xchg
push
ret
lods
pop
js
jle
xor
pusha
push
movs
in
jne
jmp
jge
xor
out
fs
js
push
out
mov
mov
jle
adc
adc
cmp
or
dec
repnz
imul
xor
int
sbb
mov
mov
push
out
shl
loopne
cmp
dec
cmp
adc
and
hlt
xchg
push
pop
lds
loop
scas
fwait
repz
and
pusha
popa
dec
(bad)
jo
add
imul
dec
shl
movs
ins
dec
jp
sbb
mov
rcr
test
xchg
(bad)
pop
shl
cli
popf
(bad)
push
sub
inc
pop
sub
adc
dec
cmps
sbb
mov
adc
adc
mov
popf
pusha
pop
std
mov
jnp
mov
or
push
hlt
pop
out
sub
out
and
out
cmp
out
loope
sbb
pop
xchg
jnp
add
jl
pop
aad
add
xor
retf
push
mov
or
imul
repnz
fdivr
sti
aas
mov
push
push
mov
mov
adc
add
push
daa
and
push
or
mov
(bad)
(bad)
xor
loope
add
dec
pop
in
fbstp
lahf
inc
mov
stc
fmul
mov
adc
je
mov
test
or
push
rcl
es
jg
ins
inc
dec
cs
pop
sub
jmp
add
and
jp
je
sbb
call
dec
pop
pop
imul
mov
ins
fidivr
gs
icebp
in
int
sbb
mov
ja
adc
ror
lods
xchg
push
mov
mov
stc
cld
or
xor
dec
pop
mov
sbb
cli
nop
ins
pop
jmp
scas
rcl
hlt
cmp
shl
imul
pop
push
jmp
enter
(bad)
pop
popf
jae
shr
add
aam
add
adc
push
(bad)
jo
(bad)
fiadd
mov
test
aad
sar
or
js
mov
adc
jmp
jp
jnp
lods
repnz
lods
pop
je
sbb
xchg
dec
cmps
mov
mov
xor
pushf
and
scas
mov
mov
jle
out
add
sti
outs
jns
jle
ins
into
jne
movs
cmps
add
aas
pop
mov
xchg
jns
shl
sbb
push
stos
jmp
jae
lock
int
sub
mov
dec
imul
lahf
retf
jl
add
pop
fwait
push
and
fsubr
and
fsub
mov
das
jg
test
fwait
adc
and
mov
add
or
(bad)
fisubr
push
leave
add
mov
add
mov
test
in
adc
ret
inc
jo
pop
xor
pop
xor
pop
dec
xchg
ins
daa
push
lock
inc
repz
aas
mov
push
out
sub
mov
pop
lods
out
je
mul
mov
pop
cmp
in
out
loop
test
aad
xchg
or
or
loop
xchg
xchg
ret
jmp
int3
in
mov
dec
in
bound
fst
clc
daa
jne
test
sub
xor
dec
icebp
in
aam
shl
test
test
ret
jmp
xor
adc
sub
add
inc
imul
inc
daa
stos
mov
sub
sahf
pop
repz
das
jge
ret
mov
stos
dec
inc
push
inc
sbb
mov
enter
js
mov
hlt
adc
inc
mov
cdq
stos
icebp
imul
lock
adc
retf
scas
out
jle
(bad)
xchg
dec
jne
dec
nop
push
or
cdq
or
int3
popf
or
inc
retf
rcr
lea
fimul
je
add
push
repz
cmc
pop
pop
or
push
dec
test
mov
xchg
test
lock
daa
in
jnp
jl
push
sahf
push
mov
(bad)
add
data16
and
xchg
add
mov
xchg
ins
or
gs
xchg
in
sbb
fild
mov
mov
cmps
mov
inc
mov
repz
int3
inc
fs
inc
xor
aas
lods
pusha
bound
sbb
and
repz
lds
scas
das
jecxz
cmps
xchg
out
(bad)
aas
and
cmps
test
jnp
pop
push
mov
rol
dec
adc
in
pop
xchg
mov
and
and
jae
xor
aas
jl
mov
(bad)
movs
or
pop
sbb
sub
adc
sub
hlt
cmp
cdq
mov
push
sub
iret
mov
sub
mov
pop
out
lods
push
cdq
test
rcl
or
in
push
and
das
lahf
lahf
in
loopne
dec
(bad)
jecxz
js
lahf
push
(bad)
mov
arpl
stos
and
mov
lods
jmp
pop
jg
repz
fs
aaa
adc
into
shl
mov
pop
(bad)
jmp
call
add
sbb
cld
adc
cli
mov
or
and
sbb
and
cmp
lock
shl
or
cdq
dec
fdivrp
sub
mov
cmp
imul
fcomp
and
mov
rdpmc
pop
neg
imul
outs
cmp
int3
loopne
aas
fbld
aas
scas
outs
sbb
mov
adc
cmp
arpl
sbb
xchg
das
iret
(bad)
int3
loope
cmp
sub
xchg
xor
loopne
les
call
xchg
(bad)
js
push
mov
mov
outs
pop
icebp
inc
lods
mov
inc
jg
mov
lds
(bad)
call
pop
mov
xchg
and
out
pop
xor
add
jno
mov
mov
xor
daa
lods
xchg
in
cmp
jmp
in
jecxz
adc
mov
push
in
loope
inc
fs
pop
mov
adc
push
dec
or
adc
or
xor
mov
mov
sti
inc
sub
pop
aas
dec
mov
mov
cmp
ins
(bad)
mov
out
pop
rcr
test
adc
sbb
xchg
pop
scas
and
dec
push
adc
mov
stos
cmp
in
add
xor
push
xchg
inc
xchg
mov
loop
pop
cmp
test
push
neg
xor
(bad)
cmp
(bad)
jns
mov
aam
mov
mov
aaa
lea
jp
test
sub
rcl
dec
call
and
inc
repnz
jecxz
jno
ss
je
adc
stos
jmp
movs
es
and
std
mov
dec
fisttp
or
dec
es
xor
popa
pop
sti
fsub
addr16
in
xchg
add
mov
test
cmp
dec
add
std
pop
jmp
xchg
mov
sub
lds
and
jl
or
mov
call
and
es
retf
and
xchg
jnp
inc
pop
imul
adc
clc
mov
jge
mov
lahf
mov
sub
or
shl
dec
push
ja
xor
xor
sub
mov
jno
add
enter
and
mov
fcom
lahf
inc
mov
sbb
ja
popa
in
push
mov
or
pop
je
out
addr16
xchg
add
pop
imul
outs
sbb
jp
daa
pop
push
mov
sbb
xchg
psrlw
ret
xor
iret
pop
add
(bad)
out
xchg
or
(bad)
sti
cmc
add
mov
pop
mov
xchg
add
mov
push
jmp
push
test
int
dec
sbb
loopne
loopne
cmc
sub
and
data16
(bad)
xchg
test
jge
ds
aaa
jl
push
adc
ins
mov
(bad)
retf
icebp
cmps
or
addr16
cmps
push
sub
adc
lahf
test
pop
jg
jns
loop
cmps
test
std
mov
jne
add
lahf
mov
xor
test
xchg
addr16
imul
imul
inc
jmp
pop
jmp
mov
pop
test
mov
and
std
push
mov
push
shl
aad
out
loopne
xlat
dec
sbb
jge
leave
xor
xchg
jle
or
aam
mov
pop
add
mov
les
add
sub
in
inc
adc
lods
xchg
ret
loopne
sbb
popf
lea
mov
mov
push
fst
sbb
jbe
xor
test
cmc
or
push
pop
inc
dec
dec
adc
enter
xchg
inc
cmp
mov
push
inc
sub
test
(bad)
fnsave
push
mov
out
mov
mov
dec
mov
mov
in
jno
mov
in
ja
cwde
push
es
or
ret
inc
(bad)
imul
push
mov
in
lods
pop
hlt
mov
mov
popf
xchg
push
lods
and
pop
imul
ds
ror
pop
pop
test
jmp
fs
pop
push
ret
cli
ja
icebp
cmp
push
(bad)
push
dec
push
das
cmp
imul
adc
cmp
dec
loopne
cmp
mov
adc
movs
cmp
and
push
je
adc
in
jbe
retf
push
popw
cmc
jne
(bad)
sbb
daa
xor
gs
sbb
sub
add
test
jp
mov
sbb
push
dec
pop
fsubr
lods
mov
dec
cld
ss
cwde
pop
inc
inc
xor
mov
daa
jns
mov
mov
in
mov
mov
(bad)
out
mov
cmps
aas
in
inc
push
push
mov
movs
dec
jmp
imul
jg
jae
mov
pop
scas
sub
call
or
ds
jmp
xor
lds
mov
pop
mov
push
jo
jo
out
sub
mov
dec
adc
jns
iret
ja
sbb
adc
fucomip
scas
movs
cmp
and
fimul
or
push
out
jmp
fstp
cli
push
ds
and
mov
sbb
nop
bound
jnp
pop
push
stc
js
es
fdivr
mov
out
scas
out
inc
popf
jo
add
rcr
ss
sahf
fiadd
jp
aad
clc
sub
rol
inc
ins
ret
mov
pop
stos
xor
cmp
sub
popa
fisttp
xchg
aam
jmp
iret
leave
test
mov
mov
cmp
ret
fsubp
xchg
je
mov
fsubr
pop
test
adc
lds
popa
hlt
adc
dec
lds
iret
popa
sub
jbe
or
into
sbb
xor
mov
and
lds
mov
das
jae
push
popf
pushf
fiadd
pop
dec
adc
outs
fist
sbb
and
mov
nop
mov
mov
push
fidivr
sti
lods
or
or
or
enter
(bad)
loope
and
je
sbb
gs
pop
push
outs
(bad)
or
xchg
lea
mov
test
push
int
push
fmul
xor
sbb
out
das
sub
imul
lock
popf
sub
xchg
les
cld
pop
xor
xchg
xchg
mov
hlt
mov
(bad)
arpl
(bad)
loop
inc
jl
push
adc
mov
scas
and
dec
pusha
outs
test
pop
imul
pop
movs
jo
jge
into
dec
and
aam
or
sbb
mov
pop
in
not
mov
sbb
xchg
add
dec
push
cld
push
and
lods
rcl
dec
test
xor
mov
jp
mov
push
or
imul
fcom
pop
clc
xchg
fwait
cmp
scas
je
or
cdq
in
cwde
sub
inc
fisubr
jns
sahf
bound
push
jmp
xor
jge
mov
sbb
lock
stos
adc
ins
cdq
dec
cmps
xchg
pop
jl
inc
int
sub
ds
adc
les
xor
mov
sub
cmps
ds
adc
mov
cwde
mov
xor
mov
push
pop
and
cmp
push
push
mov
fwait
jnp
xchg
jmp
inc
enter
jmp
cli
fwait
aas
pop
sub
mov
mov
pop
lock
mov
scas
jmp
xor
dec
xchg
pop
test
sbb
dec
add
lea
push
xor
sbb
push
retf
ins
dec
test
pop
sbb
adc
xchg
xchg
xacquire
and
ficomp
out
mov
jge
pop
add
or
adc
test
scas
jb
fisttp
sub
das
jnp
outs
mov
scas
ins
xchg
mov
mov
adc
jo
jo
adc
shl
ins
xor
mov
jne
leave
push
xchg
xor
mov
inc
ret
and
mov
inc
sub
stc
add
add
sbb
dec
jmp
and
add
mov
xor
icebp
in
cmp
imul
cdq
movs
out
inc
mov
ret
cs
test
(bad)
sbb
mov
sub
and
movs
(bad)
arpl
cmps
and
mov
sar
popa
xor
lahf
gs
popf
inc
sar
(bad)
idiv
cwde
repz
gs
xchg
push
test
adc
lods
lock
lock
je
dec
inc
mov
sbb
sbb
fisub
push
cmp
pushf
pop
xlat
les
in
push
in
call
out
mov
outs
inc
stos
jge
dec
push
push
cmp
xor
ins
(bad)
pop
push
stos
or
rcl
enter
jg
jl
cmps
cmps
mov
out
pop
cmc
mov
es
lahf
test
int
add
adc
sbb
fcom
push
paddq
sub
push
jl
xchg
stos
scas
sub
icebp
mov
push
or
(bad)
cld
mov
xor
scas
add
in
test
push
pop
pop
push
iret
mov
lahf
dec
mov
test
sub
mov
dec
fwait
test
or
loope
jmp
retf
mov
dec
in
sahf
loope
retf
sub
loop
movs
enter
ret
out
inc
mov
dec
xchg
retf
pushf
arpl
add
mov
pop
pushf
lock
jp
xchg
das
add
mov
pushf
mov
jne
cdq
pushf
mov
push
push
pop
sbb
sti
push
(bad)
xor
sbb
lock
call
sub
jmp
mov
xlat
ins
inc
(bad)
sub
jl
loope
ins
lods
(bad)
(bad)
mov
ret
js
call
nop
pop
stos
push
dec
xor
jle
repnz
and
out
jns
arpl
pop
(bad)
xchg
push
cwde
add
aas
cmp
lahf
ja
sar
jle
mov
jb
into
sbb
jo
pop
mov
or
adc
xchg
loopne
jl
jnp
sub
and
sub
xchg
xchg
pop
jb
and
test
mov
xchg
(bad)
in
adc
inc
pushf
scas
pop
out
dec
ds
leave
or
cmps
fadd
xchg
pop
adc
xchg
xchg
arpl
dec
jmp
iret
pop
cmp
mov
dec
push
jmp
enter
ja
adc
lock
test
sbb
xchg
inc
add
mov
int
or
xor
in
popa
inc
add
or
xchg
adc
into
sbb
lods
mov
xchg
test
lea
push
je
les
dec
mov
(bad)
dec
mov
xchg
inc
mov
mov
sahf
pop
cmp
shr
mov
not
push
inc
mov
mov
adc
loop
ja
push
mov
mov
push
mov
jle
das
jbe
aaa
bound
cs
xchg
pushf
dec
sti
push
jge
stc
fdiv
mov
fsub
jns
inc
clc
pusha
ret
sbb
daa
and
mov
sbb
mov
pop
add
in
inc
lock
sti
inc
sbb
sub
inc
inc
out
sbb
jmp
ins
sub
fdivr
or
push
inc
mov
ja
cmp
loope
mov
cmps
sub
mov
dec
(bad)
jp
jae
lock
add
jbe
adc
inc
push
call
xchg
in
add
add
pop
xor
loope
dec
xchg
and
mov
call
popa
add
cdq
jg
arpl
scas
cmp
mov
jo
inc
fcomp
pushf
add
scas
xchg
iret
repnz
pop
lock
push
lds
xchg
jo
pop
pop
adc
adc
adc
cwde
inc
aaa
cmps
pop
(bad)
jmp
sbb
add
mov
in
xchg
bound
imul
fnstcw
into
sbb
sub
cmp
imul
jb
xchg
test
inc
shl
jns
fs
shr
pop
cdq
std
jae
xor
clc
int
mov
xor
mov
(bad)
into
sbb
retf
test
fwait
xchg
js
cmp
std
mov
mov
jns
(bad)
cmps
lods
popf
sub
push
retf
rep
test
sbb
(bad)
jmp
cwde
inc
and
repnz
pop
fimul
adc
aaa
lea
lock
aaa
and
addr16
or
jl
ja
xchg
rep
sub
inc
cs
pop
cmp
xlat
and
daa
xor
shl
imul
mov
adc
movs
pusha
mov
loopne
icebp
pop
jae
cmp
stos
fstp
inc
mov
xor
loopne
mov
sbb
mov
aam
add
pop
pop
pop
push
inc
test
mov
push
cmc
icebp
sbb
jp
cwde
xlat
ins
sub
cwde
mov
retf
jbe
out
inc
out
stos
mov
loope
sar
mov
jp
imul
lods
adc
lods
pop
push
cmps
xchg
stc
mov
iret
das
sahf
sub
jl
add
jnp
adc
pushf
retf
jno
and
push
and
shl
mov
inc
(bad)
into
pop
iret
dec
(bad)
adc
repnz
cmp
data16
ret
jmp
dec
call
xchg
adc
sub
(bad)
sar
and
xlat
xchg
cld
jno
inc
jns
and
int3
icebp
adc
fadd
sub
xchg
adc
mov
sbb
arpl
ficom
jae
adc
bnd
and
jmp
sub
ret
and
(bad)
xor
push
imul
stos
cli
xchg
inc
dec
outs
mov
lods
mov
fcmovu
mov
sti
iret
sub
aaa
sub
jno
add
xor
mov
push
cmp
dec
into
xchg
xor
dec
jmp
aad
jmp
mov
push
mov
jmp
xchg
repnz
mov
add
cmp
inc
dec
call
cmps
and
xchg
fwait
(bad)
je
jle
adc
out
cwde
xchg
push
pop
in
xor
cmps
mov
xchg
es
fld
sahf
hlt
imul
call
(bad)
mov
out
nop
push
loope
jl
ja
repz
mov
stc
jb
int
cs
les
loop
ja
jo
cs
pop
fisubr
mov
push
mul
add
cwde
pop
push
cmp
aam
push
outs
hlt
jmp
xchg
retf
jno
lea
stc
or
pushf
pop
int
add
and
retf
(bad)
mov
aam
xor
mov
and
sub
pop
xor
pop
xadd
pop
xor
pop
shr
dec
inc
mov
rol
sbb
es
lock
push
xchg
push
lods
stos
push
rcr
fwait
shrd
and
pop
add
or
xchg
xor
aaa
xchg
pop
shr
add
int
(bad)
lahf
aas
inc
and
clc
daa
lahf
mov
xchg
push
fnstcw
(bad)
mov
inc
jns
test
pop
fidivr
xchg
test
mov
pop
sbb
and
in
popf
or
push
rcl
cs
cmp
dec
test
ret
xchg
std
cli
xchg
push
mov
call
sub
mov
xor
cdq
jne
sbb
popf
cmp
and
stc
pushf
aas
pushf
push
shr
and
lods
loop
add
inc
scas
push
loop
lds
ret
outs
outs
dec
lds
jge
push
fs
mov
push
mov
xor
mov
cmp
iret
les
sub
xchg
jmp
xchg
adc
sbb
cmp
or
lds
loope
cmc
or
and
sbb
push
jmp
dec
mov
pusha
inc
adc
in
rol
dec
dec
aas
dec
dec
mov
jae
mov
inc
into
dec
jae
test
ins
fs
repnz
test
or
js
cmp
icebp
xchg
mov
movs
add
mov
jae
pop
mov
mov
(bad)
cmps
sbb
sub
jbe
mov
jnp
xchg
cld
and
in
push
(bad)
jo
dec
and
mov
test
jo
xchg
(bad)
sbb
pop
xor
jnp
(bad)
mov
mov
sub
and
and
inc
inc
mov
fsub
adc
cmps
jbe
jb
call
leave
in
and
ins
(bad)
cmp
and
cmps
(bad)
jmp
xchg
cmc
inc
das
pop
xchg
xor
pushf
out
push
push
dec
lock
dec
cwde
lahf
xor
push
jle
in
add
fsub
fdivr
movs
dec
xor
mov
or
aaa
xlat
jnp
jmp
fwait
mov
je
xchg
inc
rol
dec
cs
cs
mov
jg
aaa
jmp
inc
add
arpl
xchg
xor
fdivr
and
inc
jo
add
shr
mov
test
jge
es
cmp
jns
or
rcl
sub
mov
xor
mov
daa
leave
ss
add
loopne
(bad)
rcl
sub
out
jp
cmps
mov
ja
dec
enter
cmc
pop
movs
or
inc
lods
popa
mov
mov
adc
scas
les
je
stos
jnp
cwde
inc
fisubr
dec
add
inc
mov
sbb
pop
inc
(bad)
lahf
jge
sbb
lods
ja
sub
inc
jae
sbb
jo
dec
ret
push
sar
(bad)
loopne
inc
lock
dec
xchg
inc
lahf
dec
jmp
(bad)
push
mov
mov
xchg
imul
cli
ret
dec
add
dec
or
out
repz
xchg
out
or
or
retf
ror
lea
cmp
mov
into
xchg
xchg
scas
enter
adc
dec
sbb
sub
aas
inc
out
test
dec
push
cmp
add
cmp
adc
fdivr
or
jae
jg
push
dec
or
xchg
and
xchg
dec
enter
ror
cli
in
and
mov
cdq
iret
jp
jne
int3
repnz
icebp
into
jg
popf
jmp
ds
leave
ret
hlt
dec
and
stos
xchg
inc
dec
adc
movs
repnz
pop
ret
cwde
mov
sub
push
hlt
sbb
xor
imul
push
fld
mov
mov
mov
sub
idiv
mov
adc
push
repz
push
ins
mov
adc
jmp
inc
mov
add
(bad)
jne
je
mul
mov
(bad)
xor
icebp
hlt
ffreep
sub
adc
imul
xchg
mov
mov
retf
mov
xor
pop
xchg
lea
sbb
cmp
inc
xchg
jmp
xor
xchg
add
cdq
scas
ficomp
jmp
add
loop
pop
mov
xor
repnz
pop
test
add
shl
fld
xchg
call
adc
dec
aas
enter
sub
repnz
out
movs
adc
loope
push
test
cwde
mov
adc
push
stos
mov
test
and
cmps
pop
xchg
sti
popa
or
in
sar
sub
inc
ret
and
push
arpl
lock
cmp
aas
pop
sbb
xchg
in
sahf
daa
or
ins
lds
adc
mov
jnp
aas
or
imul
imul
xchg
inc
retf
cmps
or
lea
cmps
in
pop
push
js
add
aam
add
test
inc
add
inc
loopne
cmc
xchg
movs
xchg
enter
add
adc
pop
popa
jge
fild
mov
jge
xchg
(bad)
sti
bound
lds
test
jle
in
shl
outs
xor
pop
push
sub
and
or
cmp
cmp
xchg
stos
aas
dec
in
pop
mov
cmp
imul
adc
mov
outs
jae
push
in
out
ffreep
dec
jecxz
push
sbb
(bad)
sub
xchg
retf
out
ss
or
xor
mov
out
ins
mov
test
rcl
xor
jmp
mov
ret
jo
mov
and
adc
mov
or
ins
mov
sar
nop
ja
aad
dec
fisubr
or
push
or
jle
call
loope
mov
pop
and
push
cmp
pop
out
xor
arpl
jmp
aad
daa
mov
ret
call
aad
leave
(bad)
dec
lea
jmp
adc
dec
mov
push
mov
int
sub
jb
sti
mov
xchg
lds
lea
jae
inc
dec
dec
add
fdiv
adc
inc
push
test
dec
sbb
and
push
pusha
push
sub
loop
mov
in
out
in
data16
push
dec
cmp
and
mov
push
pop
add
jl
jmp
je
jnp
lock
cmp
mov
(bad)
add
pslld
xchg
push
pop
add
pushf
imul
jae
mov
sub
adc
mov
or
repnz
imul
pop
and
adc
jmp
aaa
popa
jnp
inc
(bad)
fsub
repz
fisubr
cmps
inc
lahf
int
scas
mov
aaa
and
mov
scas
sbb
repz
retf
(bad)
xlat
imul
in
dec
dec
aad
push
inc
cmp
mov
pop
pop
push
xchg
sti
retf
movs
add
add
pop
sub
outs
adc
xchg
scas
dec
or
cmps
je
sbb
push
push
mov
jmp
adc
jg
ja
push
adc
aaa
dec
fiadd
fs
jg
out
ret
adc
out
lods
push
adc
or
arpl
push
icebp
in
mov
loope
call
lock
rol
jmp
enter
pushf
cmp
mov
dec
jnp
cmp
fs
adc
faddp
push
xchg
jmp
cld
pushf
les
sub
fld
arpl
add
daa
jno
shr
push
imul
retf
loopne
sbb
aad
out
int
adc
jle
jnp
xchg
mov
test
fistp
mov
out
das
mov
add
xor
(bad)
pop
and
xchg
pop
out
jbe
cmp
imul
sub
inc
sub
xor
mov
jp
inc
aas
pop
xchg
jp
in
mov
jae
test
out
cmc
and
fcmovu
or
jae
ja
imul
xor
lods
sub
pop
movs
daa
lds
xor
xor
int
and
or
scas
add
shr
and
idiv
jns
xlat
jg
cmp
aaa
repnz
(bad)
loopne
jmp
(bad)
jo
sub
fbld
fimul
jns
adc
ins
push
or
fisubr
or
imul
or
pop
jl
xor
pop
(bad)
jg
mov
fbld
mov
xor
dec
in
test
mov
mov
push
cmc
pop
ror
cs
repz
pop
shl
sar
jecxz
icebp
movs
add
and
(bad)
xor
jns
xlat
shr
in
(bad)
cld
and
or
or
mov
xchg
(bad)
xchg
not
or
jb
mov
pop
ror
bound
sbb
mov
add
test
xor
sar
test
cmps
std
cs
mov
ins
cs
cmp
mov
mov
push
fadd
pop
das
jb
enter
sbb
dec
pop
cs
pusha
ins
add
xchg
mov
or
cdq
sub
pop
test
enter
in
stos
dec
fs
into
loope
xor
xchg
xchg
shr
xor
test
and
popf
pushf
push
inc
push
mov
mov
pop
mov
fwait
sti
push
cmp
cmp
pushf
fiadd
mov
cmp
xchg
inc
xchg
xchg
mov
mov
movs
es
mov
fldcw
cmp
shl
inc
sbb
out
adc
inc
mov
mov
rol
imul
mov
addr16
aaa
and
push
or
pop
idiv
sbb
cmp
mov
cmp
sub
mov
std
lods
pop
mov
push
bound
and
(bad)
jl
call
mov
rcr
sbb
aad
mov
push
cdq
fsubrp
dec
pop
js
or
outs
lds
inc
ret
lahf
stos
pop
popa
jbe
inc
sbb
aad
cmps
movs
call
pop
mov
xchg
sbb
mov
pop
out
sub
iret
mov
dec
cmps
add
jbe
add
xchg
add
pop
cmovbe
mov
xchg
(bad)
mov
cmp
call
and
cmpxchg
lods
cmp
ins
clc
mov
cmp
push
in
xor
dec
sahf
adc
mov
cld
test
enter
loop
adc
ss
xchg
das
stc
loope
in
out
cmp
inc
xchg
sbb
mov
out
inc
(bad)
loop
push
cmc
lods
inc
test
adc
call
inc
mov
push
pop
mov
and
pop
repnz
mov
xor
pop
in
mov
enter
(bad)
fidiv
jge
jae
pop
popf
cmps
sbb
loop
and
push
loop
rcr
xor
jge
jb
stc
push
aas
jl
in
std
pop
repz
sub
mov
ficom
clc
jnp
in
call
iret
repnz
push
fwait
aas
mov
mov
jno
sub
push
pop
retf
and
and
inc
jnp
test
mov
mov
stc
lahf
dec
cmp
test
loop
and
sub
push
xchg
fild
xchg
mov
inc
(bad)
hlt
call
test
daa
push
sbb
push
and
pop
in
(bad)
mov
xchg
out
aas
mov
enter
fs
hlt
push
das
xchg
loopne
sahf
out
fistp
ret
adc
scas
push
hlt
inc
lds
mov
sub
dec
enter
aad
push
test
in
jle
pop
mov
inc
arpl
inc
jbe
loopne
test
int
cmc
mov
adc
loop
jae
inc
add
sub
call
mov
mov
arpl
cmp
loop
je
in
loop
ins
adc
xchg
in
pop
bound
jl
sub
mov
or
in
sti
and
shrd
mov
xor
lock
rol
jmp
push
and
dec
push
repnz
pop
stos
call
inc
mov
fnstenv
jmp
aaa
mov
mov
add
loope
out
in
cmc
xlat
or
fstp
jne
adc
sti
rol
mov
jo
data16
jbe
cli
pop
jmp
jb
cld
loopne
or
mov
jno
pcmpeqb
xchg
cmps
call
pop
xstore-rng
cmps
add
ret
popf
pop
jns
int3
outs
daa
cwde
cld
and
pop
inc
das
xchg
cli
sahf
push
mov
nop
pushf
mov
das
pop
out
loop
push
xchg
leave
add
or
xchg
mov
fcomp
aad
adc
push
xchg
adc
outs
stos
cs
mov
inc
stc
xchg
inc
rcl
mov
aad
jge
iret
cmp
fldcw
daa
addr16
adc
and
shr
out
in
call
out
mov
adc
fwait
not
jge
pusha
xor
fdivr
aad
xchg
cmp
or
call
loope
mov
loope
aam
imul
mov
stos
pop
clc
fist
lods
push
sbb
jmp
jg
test
pop
ins
ins
mov
mov
les
pop
pop
in
sbb
sub
aad
cmp
jp
jmp
mov
fabs
lahf
fs
(bad)
loopne
retf
aad
inc
lock
inc
inc
scas
cmp
aam
(bad)
in
es
lds
dec
push
dec
pop
add
adc
inc
jae
call
jne
pop
dec
pusha
mov
sbb
adc
push
mul
ror
pop
sar
add
jno
pop
sbb
jg
xchg
dec
xchg
inc
and
sbb
push
xchg
sbb
jp
aas
adc
jmp
push
sbb
hlt
std
and
shl
lds
inc
inc
push
xchg
pop
mov
movs
add
mov
test
mov
scas
aam
mov
(bad)
mov
add
aas
pslld
adc
sbb
inc
lahf
mov
mov
enter
sti
dec
inc
pop
vpsrlw
adc
mov
ret
ret
data16
adc
ret
sub
rcl
cmps
div
and
lock
adc
arpl
push
out
pop
nop
mov
pop
mov
cmps
pop
sub
fdiv
rol
or
mov
push
imul
dec
pop
fisubr
frstor
mov
jmp
xchg
ja
jno
mov
push
mov
das
xlat
sub
ror
jo
cld
inc
retf
push
mov
lea
clc
cmp
test
les
pop
mov
clc
jmp
cli
pushf
xchg
data16
mov
mov
in
or
in
es
xchg
ds
mov
mov
xchg
(bad)
add
sbb
sbb
and
or
add
addr16
stc
ss
add
out
xchg
(bad)
push
cmp
sbb
or
push
cs
xor
xor
cmps
cmp
inc
out
aad
jno
xlat
add
imul
cwde
mov
cmps
lock
fidiv
call
div
xor
fidivr
jg
xor
push
cmp
xor
cmps
outs
add
mov
sbb
jns
cmp
pop
add
js
mov
add
sbb
movs
ins
push
das
push
data16
jmp
mov
add
shl
cmc
cmp
das
push
xor
das
out
mov
int3
pop
stc
aas
loopne
adc
mov
and
push
(bad)
ficom
or
push
out
push
sbb
dec
push
scas
jle
icebp
ficom
retf
cmp
add
push
or
and
mov
mov
inc
in
pop
(bad)
mov
test
les
mov
mov
lea
(bad)
repnz
jecxz
sub
xor
inc
ret
push
xlat
imul
mov
loopne
sti
btc
por
pop
push
std
dec
cmps
js
sbb
int
cmp
mov
inc
mov
in
jno
pop
or
and
mov
mov
push
call
fidiv
test
xor
lods
jg
cmp
jl
dec
or
adc
cld
push
pop
leave
in
cdq
nop
and
xchg
lods
mul
push
push
cwde
dec
das
fstp
cmp
pop
scas
push
repnz
shr
outs
(bad)
dec
aaa
cmp
aam
shr
div
dec
and
daa
jmp
outs
mov
mov
pop
and
imul
xchg
mov
lods
dec
sbb
aas
dec
inc
mov
out
shr
out
cmp
adc
in
or
add
cmps
sbb
sub
sahf
gs
sub
inc
push
ja
cs
dec
test
std
or
and
mov
jb
mov
fistp
sub
out
jl
xor
scas
sub
out
rcl
movs
xchg
adc
shl
dec
jne
cmp
mov
test
fimul
stos
adc
mov
pop
xor
dec
add
adc
scas
cmc
aam
movs
mov
and
sbb
imul
jp
mov
dec
icebp
and
rol
test
sub
pop
and
ins
mov
sub
movs
les
jb
jle
sbb
push
mov
mov
push
xor
jge
dec
pop
lods
sub
sar
dec
mov
retf
and
adc
cld
sub
sub
icebp
mov
xchg
div
movs
nop
js
lock
cdq
cmp
ins
lock
dec
les
lods
jl
or
lods
sub
(bad)
mov
mov
addr16
add
das
dec
xor
es
repnz
jg
mov
aas
xchg
adc
dec
into
sub
fdivr
add
and
pushf
jp
out
mov
jmp
add
xlat
gs
out
xor
mov
ins
addr16
cmp
xchg
bnd
jle
adc
mov
xchg
mov
rol
mov
cdq
add
aam
add
ror
or
out
addr16
gs
adc
push
push
push
cmp
sbb
sub
cmp
adc
adc
sbb
xchg
pushf
inc
test
dec
jg
mov
add
sar
cmps
inc
stos
mov
popf
outs
jno
retf
mov
pop
outs
inc
sti
pusha
or
dec
pop
mov
leave
je
push
loopne
and
mov
dec
js
sub
add
push
xchg
out
xor
test
sub
mov
fwait
cli
cmps
pop
sbb
stos
jo
jns
mov
or
fadd
retf
jo
xchg
retf
mov
lods
aaa
cdq
(bad)
fwait
(bad)
xor
lahf
pop
pop
les
dec
dec
mov
mov
xchg
out
add
cmp
jb
sar
cmps
sahf
out
aam
add
inc
sti
pop
fnstcw
inc
xchg
ja
mov
test
in
push
xchg
sub
scas
sti
fwait
xor
(bad)
xchg
lods
mov
cmp
ins
add
js
je
xchg
loop
pop
and
xchg
mov
add
mov
xchg
dec
or
mov
xchg
mov
jp
cmps
dec
pop
aad
fstp
lods
test
pop
push
cwde
push
retf
jp
cmp
add
movs
mov
cmp
pop
imul
iret
lahf
mov
dec
call
movs
jmp
aad
outs
dec
push
popf
cmps
xor
mov
daa
xchg
int
push
adc
icebp
cld
add
ins
mov
imul
mov
add
loop
dec
sub
xchg
pop
dec
push
lea
cmc
dec
add
mov
add
mov
ds
push
pop
mov
jmp
mov
fcmovne
fcomp
and
neg
scas
mov
mov
jne
push
sbb
mov
ins
mov
pop
jle
stc
fstp
daa
lahf
imul
mov
movs
js
mov
inc
pusha
rcl
mov
xchg
push
or
push
sub
inc
outs
xchg
loope
pop
fbstp
cmc
aas
add
jno
int3
lock
add
mov
push
push
dec
inc
js
cmps
jne
iret
cmp
cmp
push
sub
std
mov
(bad)
shl
cmp
add
jle
push
mov
icebp
inc
xchg
mov
adc
loop
shl
push
inc
mov
test
pop
pop
jmp
mov
sub
sub
cdq
enter
(bad)
aad
mov
adc
pop
xchg
cmp
mov
(bad)
or
fstp
(bad)
pop
jmp
sar
push
std
push
push
cmp
pop
dec
adc
cmps
lods
cmp
shl
add
sub
call
or
adc
in
sbb
and
jp
jle
push
imul
xlat
sbb
or
and
lds
xchg
add
sbb
outs
adc
jg
fsubr
aaa
out
popa
jae
push
sbb
ffree
test
sub
(bad)
int3
add
jnp
xlat
xchg
add
push
call
sub
xchg
fist
popf
test
adc
xor
lds
xor
pop
into
rcl
cli
lods
fisubr
loop
xor
in
cmp
sub
jge
mov
sti
dec
cmp
aaa
jg
xchg
mov
hlt
adc
fs
mov
push
add
xchg
dec
jge
inc
mov
repnz
loopne
dec
mov
sbb
imul
mov
mov
int
sar
(bad)
test
add
mov
mov
stos
dec
inc
(bad)
sub
pusha
arpl
xchg
add
loop
or
xor
sub
out
aaa
out
inc
fcom
clc
aam
ja
imul
data16
mov
mov
pop
jmp
div
loopne
push
sub
jae
in
loopne
pusha
fistp
movs
mov
add
sahf
mov
inc
push
cmp
jmp
sbb
add
add
adc
fmul
imul
shl
les
rcl
jb
mov
ja
lock
inc
call
shl
out
xor
scas
(bad)
in
push
cmp
jmp
in
jnp
xor
push
std
ins
aad
sti
in
adc
dec
jae
(bad)
fidivr
sub
pop
cdq
leave
mov
neg
ret
xlat
iret
add
dec
pop
das
adc
mov
sbb
outs
(bad)
inc
adc
mov
(bad)
je
jmp
mov
in
or
push
iret
aad
jmp
ds
call
cmp
mov
outs
into
popf
cli
iret
ja
fdiv
xor
int
dec
dec
rcr
jne
adc
js
xchg
sub
xor
sub
fisub
test
dec
dec
push
call
xor
lock
call
stos
xchg
mov
inc
popf
xlat
cmp
or
outs
fst
test
loopne
inc
push
jp
mul
cmps
aaa
xchg
xchg
es
sbb
(bad)
pop
jno
out
out
pop
dec
mov
jno
iret
cmp
cli
or
pushf
jecxz
cmps
shr
nop
jno
push
rol
sub
scas
mov
movs
iret
mov
xor
xchg
or
push
(bad)
push
cmp
hlt
into
jo
shr
mov
add
xchg
jmp
mov
mov
cld
popf
and
dec
pop
jl
add
gs
ret
lods
mov
and
push
pop
arpl
movs
mov
pop
cmp
cmp
shl
sub
je
push
(bad)
adc
dec
fs
xchg
dec
cmp
pop
in
and
out
add
sub
movs
mov
jp
outs
xchg
or
pop
inc
arpl
jo
pop
into
pop
jg
aas
mov
les
cli
(bad)
lds
sti
je
ins
pop
adc
(bad)
dec
stos
mov
jmp
ins
lahf
xchg
fucomi
cld
add
xchg
mov
int3
mov
push
sahf
xor
inc
mov
enter
nop
ins
xor
scas
xchg
mov
hlt
out
push
shr
jno
(bad)
push
dec
aas
inc
mov
mov
bound
scas
dec
jb
mov
das
ficom
test
iret
lock
sbb
mov
xchg
xor
mov
mov
mov
pop
xchg
aad
jmp
cmp
scas
xchg
jo
icebp
xor
std
cmp
ret
mov
push
test
outs
loope
test
ficomp
and
cmp
add
mov
xchg
mov
leave
push
inc
pusha
jmp
ins
xchg
pop
cmc
cmp
cmovs
inc
pop
push
sub
xor
pop
bound
mov
aam
leave
and
dec
xchg
not
or
xor
rcr
xchg
add
(bad)
push
push
movs
enter
aad
push
bound
sbb
xchg
inc
adc
daa
in
mov
mov
je
mov
push
int
sbb
mov
rol
repnz
jl
das
retf
jb
sub
mov
adc
fild
lea
jmp
pop
stc
sahf
xor
mov
or
and
icebp
xor
dec
mov
pop
ds
mov
cdq
ud1
xchg
lods
pop
push
sbb
std
jno
call
aam
int3
int3
ss
jnp
cs
sub
sbb
mov
fadd
call
jg
cld
push
fimul
xchg
pop
mov
sti
js
pop
xor
mov
pop
mul
add
xchg
pop
ret
stc
stos
addr16
out
std
lahf
cmp
enter
inc
(bad)
inc
sahf
shl
popf
mov
xor
iret
mov
push
push
rcr
sbb
pop
push
sub
es
sbb
cmp
cmps
lds
pop
fs
jmp
lahf
adc
mov
xor
lahf
out
int
fdiv
outs
xor
mov
ficom
pavgb
stc
and
imul
jmp
cwde
(bad)
je
inc
add
(bad)
fwait
push
cld
daa
sub
imul
(bad)
popa
or
nop
gs
xor
(bad)
aad
mov
bound
inc
jecxz
or
add
xlat
aad
ds
mov
mov
xor
lods
fs
les
imul
or
dec
aaa
iret
aam
inc
sbb
sub
icebp
popf
sti
int
je
xchg
cmp
fwait
cmp
cmp
ror
shr
stc
pop
mov
sub
pop
dec
lock
mov
popa
loopne
inc
xchg
ss
dec
mov
mov
(bad)
out
movs
shl
xchg
jl
loop
ins
cmp
inc
(bad)
(bad)
xor
jbe
test
fdivrp
and
(bad)
cmp
sbb
dec
pop
mov
jo
repnz
jl
enter
ins
and
sbb
lods
cmp
outs
mov
sti
mov
sub
push
adc
pop
in
pop
(bad)
jnp
gs
(bad)
clc
(bad)
retf
cmps
or
jecxz
ds
or
pop
cld
inc
in
mov
xor
loop
mov
adc
cli
not
xor
jne
cwde
jmp
fild
retf
das
adc
adc
xor
cmps
in
ds
das
jge
ror
push
and
(bad)
fistp
pop
mov
fld
cld
fbstp
add
and
in
pop
jnp
hlt
bound
outs
xor
push
(bad)
ret
cmps
jmp
fcomp
pop
nop
(bad)
jae
dec
mov
adc
and
add
bound
pop
in
cmp
pop
popa
pop
add
scas
scas
xchg
mov
aas
lods
fwait
jecxz
mov
test
outs
(bad)
mov
inc
lods
or
xor
sub
jg
sahf
shl
xchg
pop
jnp
not
inc
cli
retf
retf
hlt
idiv
mov
push
nop
cli
mov
int
mov
enter
rcr
sbb
gs
js
jno
push
inc
(bad)
enter
test
inc
xchg
pushf
cmps
xchg
or
fcomp
mov
jmp
fisub
mov
outs
imul
repnz
sub
(bad)
push
ins
push
mov
imul
ds
mov
ins
jge
xor
inc
sbb
clc
xlat
repnz
sub
jbe
out
dec
into
loop
ss
adc
or
cmp
lahf
mov
pop
outs
mov
jbe
mov
mov
inc
inc
retf
push
and
or
cmp
lahf
cmps
mov
mov
mov
call
push
shr
ficom
inc
jecxz
xor
gs
inc
xchg
ret
pop
xlat
mov
dec
push
fmul
pop
and
sub
(bad)
cmp
iret
ror
or
jle
pushf
mov
dec
mov
fst
mov
sub
jnp
pop
sbb
sahf
pop
ins
aaa
popa
sbb
and
das
and
pop
jae
add
(bad)
adc
fild
xor
fisttp
aam
jb
das
xor
mul
loop
pop
cmc
xor
push
sbb
or
cs
push
cli
adc
(bad)
mov
ret
sub
das
adc
fwait
adc
dec
mov
adc
or
pop
sti
xor
outs
mov
fs
mov
adc
call
inc
fimul
jns
dec
ror
jecxz
xor
js
ss
jnp
sbb
aad
xor
sbb
pop
push
push
push
aas
push
adc
ret
sub
leave
lods
(bad)
loopne
xchg
xor
sahf
ss
jle
mov
mov
mov
mov
pop
push
add
and
popf
scas
test
jle
mov
mov
jle
mov
jge
jmp
in
inc
push
retf
pop
fiadd
and
mov
xor
inc
test
xchg
cdq
shl
dec
mov
add
in
sbb
bound
pop
js
xor
sahf
pop
xor
jecxz
pop
mov
xchg
cmps
jmp
dec
jl
es
sti
jge
add
jno
inc
and
call
push
test
lock
mov
dec
aam
mov
jno
add
jl
nop
rcr
jae
jnp
mov
add
mov
sub
xor
xor
jbe
jb
repnz
into
xchg
ins
inc
scas
mov
(bad)
call
jmp
mov
loope
xor
outs
mov
xor
pushf
mov
jmp
repnz
and
push
cwde
xchg
pushf
aad
cmp
cwde
jno
add
addr16
pop
mov
adc
jnp
xor
gs
fistp
xchg
push
in
imul
or
sub
jns
push
push
(bad)
inc
mov
mov
pop
in
pop
jno
nop
push
mov
mov
loope
ficom
faddp
or
jne
push
push
std
ds
push
ret
fdiv
xor
ret
adc
mov
add
aas
dec
ret
(bad)
xor
xchg
outs
mov
in
jecxz
out
iret
cwde
retf
hlt
push
shl
pop
jl
mov
pop
or
add
and
sub
xor
push
push
scas
and
mov
jnp
inc
inc
cmp
jae
dec
test
idiv
sub
xchg
ja
ins
aad
retf
out
jmp
outs
add
(bad)
cmp
lds
nop
loope
or
fdivr
fs
add
test
sahf
cmp
jle
mov
cmps
lods
scas
je
shl
out
data16
inc
push
je
(bad)
inc
pmaxub
or
inc
jg
inc
(bad)
push
popa
jecxz
xor
or
imul
xor
cld
jmp
add
int3
ror
xor
idiv
sbb
push
mov
fist
jae
lods
out
and
adc
dec
pop
in
leave
adc
adc
and
scas
mov
pop
sbb
inc
or
les
nop
and
mov
sub
jae
bound
inc
lods
loop
ins
iret
ss
sub
leave
pusha
jle
frstor
pushf
dec
sub
test
and
dec
shl
pop
cs
sahf
jbe
repz
xchg
push
sbb
in
push
cmp
inc
cmp
mov
add
call
call
push
retf
sahf
int3
sbb
sbb
cli
xchg
push
lahf
push
lock
sbb
data16
icebp
aad
iret
ins
push
fsubr
jae
adc
sbb
push
loope
push
push
push
into
adc
call
cdq
repnz
out
mov
mov
jns
xor
or
js
rol
jne
loope
cmp
outs
pusha
adc
xchg
xchg
repnz
mov
sub
mov
adc
mov
jo
retf
add
sbb
cmp
add
test
lahf
push
fcomp
fmul
add
je
or
mov
shr
pop
or
ins
inc
aas
jl
sub
or
scas
sub
outs
popf
jmp
daa
jns
mov
inc
and
jnp
adc
(bad)
and
jo
mov
lock
dec
lock
(bad)
cmp
push
push
out
mov
cmp
inc
retf
and
push
mov
mov
or
xor
jae
sti
or
adc
out
outs
std
push
cld
mov
in
mov
xor
cli
jle
add
sahf
iret
(bad)
push
push
test
imul
jp
lea
adc
cld
cli
(bad)
fcomp
pop
cld
fsubr
inc
add
push
rcl
push
pop
sar
push
loopne
mov
cld
xor
aad
test
or
push
div
dec
sbb
imul
jle
call
fadd
cmp
push
mov
dec
mov
cwde
push
pop
ds
jmp
push
shl
lods
fist
pusha
sub
jl
or
push
push
aam
cmps
fwait
add
mov
jo
fsubr
cmp
sub
or
push
add
leave
and
adc
jecxz
pop
lods
jl
mov
xlat
lods
in
call
loope
rol
out
imul
and
sub
(bad)
push
sbb
aaa
inc
and
cli
cmp
mov
mov
jne
lods
lock
add
(bad)
sti
mov
dec
sar
cmc
gs
div
xor
or
push
and
int
jg
aaa
jae
outs
test
fdivr
lds
jecxz
xor
rol
repnz
and
pop
outs
int3
pop
cli
les
pop
outs
cmp
sbb
std
mov
mov
or
mov
add
data16
mov
inc
pop
xchg
mov
in
pop
fbstp
push
pop
sbb
jle
int
or
jp
push
inc
mov
pop
xchg
test
ret
fidiv
cmp
ins
pop
mov
push
shr
cmp
xchg
stos
push
mov
loope
lea
ret
mov
add
sub
stc
inc
jmp
popa
add
sbb
add
cmp
and
push
or
inc
or
out
pop
stc
fild
out
or
je
test
aam
push
mov
mov
test
push
lea
aaa
ja
cli
(bad)
jo
xchg
sub
add
fs
xchg
mov
push
mov
or
shr
sbb
in
aam
add
jnp
sub
lahf
popf
xor
inc
add
adc
inc
inc
or
xchg
scas
add
mov
das
cdq
rcr
es
std
dec
data16
mov
dec
xor
adc
dec
push
sub
pop
xchg
sbb
hlt
and
jg
mov
shl
push
push
cmp
adc
push
adc
and
add
nop
push
sub
mov
movs
dec
inc
mov
clc
aam
cmp
pop
pop
adc
mov
mov
popa
add
jo
jb
mov
and
mov
pop
jmp
inc
leave
ins
adc
in
ret
push
stos
pusha
sub
ds
cli
adc
outs
cli
and
cmp
out
shr
mov
add
push
fiadd
sbb
push
and
sbb
arpl
lods
std
cmp
or
cmp
daa
sub
int
les
das
jne
aaa
dec
popa
mov
(bad)
cmp
xchg
add
jecxz
add
cs
xchg
div
stc
jns
cmp
mov
ds
fistp
pop
mov
sbb
scas
pop
inc
out
xor
xchg
xor
divps
fcmovne
xor
and
clc
out
and
mov
popa
std
ret
and
sbb
repz
push
aas
adc
or
jne
je
stos
dec
sbb
xor
retf
cmp
push
and
sub
add
cvtpi2ps
popf
mov
ja
imul
loopne
add
and
inc
push
push
add
scas
pop
cs
dec
mov
inc
jo
lods
aaa
mov
push
jns
and
fiadd
fwait
retf
dec
mov
pop
adc
outs
adc
mov
sbb
cmp
xor
mov
mov
stos
jp
push
mov
and
(bad)
adc
ins
ins
bound
adc
cmc
jmp
arpl
sti
cmps
mov
not
jo
stos
dec
sti
hlt
pop
aas
lods
fdiv
fimul
xor
(bad)
lea
popf
daa
push
pusha
cmp
mov
push
ja
fcomp
dec
imul
sub
mov
fadd
inc
shl
sti
push
inc
rcr
setl
sub
repz
enter
scas
fs
fbld
mov
mov
cmp
hlt
ret
daa
rep
mov
(bad)
pop
adc
aam
(bad)
fucomi
cmp
push
clc
iret
inc
dec
sbb
stos
mov
lds
punpckhbw
push
dec
xor
jns
test
inc
mov
bound
xor
das
pop
lods
jl
repz
cld
cmps
loope
pop
xchg
jne
mov
mov
int
xchg
ins
js
mov
test
dec
cli
test
arpl
(bad)
mov
or
std
(bad)
fwait
xchg
jae
dec
(bad)
mov
sub
sub
inc
xchg
das
add
(bad)
xchg
out
test
dec
jbe
test
les
cs
cli
push
inc
pop
jg
repz
and
addr16
call
aam
lods
sub
fst
inc
xor
out
adc
mov
sub
dec
cwde
sub
adc
push
repnz
xchg
sar
push
popa
daa
dec
jo
icebp
dec
inc
xchg
ds
push
dec
or
int
xor
fstp
loope
jp
sub
mov
retf
not
inc
cdq
cs
lahf
dec
(bad)
fadd
inc
and
icebp
push
adc
xlat
jo
xchg
stos
mov
sbb
ret
sub
push
push
rcl
add
or
jmp
cld
jecxz
xlat
out
inc
out
lahf
jne
dec
mov
mov
fwait
(bad)
fild
and
shl
push
mov
and
das
mov
ins
cmp
not
cmp
pusha
fimul
dec
out
outs
nop
ror
mov
mov
adc
vsqrtss
jmp
push
or
jb
pop
div
rcr
bound
jmp
cmps
inc
(bad)
mov
pop
sbb
push
cmps
adc
xchg
shl
repz
iret
jmp
enter
or
push
sub
sub
daa
dec
out
jge
mov
xor
mov
mov
stos
cdq
aas
mov
inc
inc
aam
(bad)
mov
lock
lds
and
cwde
add
adc
bound
xchg
scas
and
das
(bad)
in
mov
scas
and
mov
gs
mov
stos
jecxz
nop
lods
sbb
lahf
jne
inc
xchg
out
popa
stc
out
mov
pop
fld
mov
cmp
rol
pop
pop
inc
sub
and
dec
sub
in
xor
pushf
pop
push
jne
bnd
not
cli
jbe
fistp
inc
jno
out
mov
fist
pop
cmp
push
mov
ja
lock
pushf
mov
and
push
test
popa
mov
ss
std
pop
cmc
fucom
cdq
mov
xor
xchg
cmp
push
xor
js
fsubr
clc
cmp
rol
stos
iret
lods
popa
adc
xchg
imul
loopne
jb
data16
inc
loope
in
repz
popf
dec
in
and
cli
fst
pop
dec
lock
out
pop
mov
stos
lods
gs
lds
shr
inc
repnz
nop
mov
aas
cwde
cmp
xlat
std
hlt
mov
jne
sub
xchg
aam
mov
clc
or
add
out
lock
cmp
in
enter
pop
pop
xor
pop
jg
call
or
fwait
mov
or
ins
rcr
sbb
add
sub
cdq
repz
daa
pop
test
icebp
cmp
mov
cwde
add
push
xlat
sbb
mov
mov
mov
push
sar
jno
jp
push
rcr
mov
scas
cli
fwait
repnz
clc
sub
adc
sub
ret
jmp
imul
xlat
and
push
fistp
pop
pushf
into
std
jb
mul
push
jge
repz
push
test
icebp
dec
call
dec
cmp
or
pop
out
aad
lods
xchg
leave
xchg
adc
dec
mov
adc
push
out
add
ffree
sahf
(bad)
aad
or
mov
sub
ins
cmc
int
div
and
fsub
add
bound
repnz
push
and
or
bound
add
dec
sbb
out
xchg
jmp
leave
pushf
inc
mov
xor
hlt
push
push
mov
or
inc
cmp
xchg
mov
jae
idiv
mov
xchg
fisub
mov
or
das
sbb
fnsave
and
ror
jb
inc
sub
or
jl
sub
sbb
stc
ret
pop
(bad)
xchg
pushf
or
iretw
or
dec
daa
xor
or
out
mov
int
inc
sub
sbb
lock
jle
out
lods
mov
and
mov
lods
daa
adc
sar
jge
pusha
cmp
mov
push
pop
dec
js
imul
iret
dec
mov
and
into
mov
and
cmps
xchg
dec
cmp
sbb
fsub
xchg
ds
pop
popf
add
mov
mov
mov
cmp
inc
add
sub
(bad)
adc
out
dec
jecxz
outs
sbb
push
xor
dec
pop
mov
arpl
(bad)
in
and
das
shl
ins
push
repz
lods
mov
cmp
stc
in
pop
and
stos
leave
mov
mov
mov
mov
push
outs
xor
ret
cdq
cmps
push
(bad)
cmp
dec
pop
jo
call
ins
adc
mov
test
xor
dec
mov
xchg
cli
and
push
test
add
push
sub
cmc
std
adc
out
push
jb
sti
xlat
ds
lea
mov
leave
xor
dec
cmp
aad
fs
repz
adc
mov
(bad)
(bad)
imul
jecxz
das
xchg
lahf
pop
jg
sub
xchg
pop
(bad)
fdiv
pop
or
fidiv
jo
sahf
ss
test
dec
pop
in
dec
sub
ret
push
es
push
add
xchg
cmp
cdq
test
cwde
xchg
stc
pushf
fild
into
int
push
push
inc
(bad)
iret
or
jns
mov
arpl
jmp
lods
push
dec
lock
mov
(bad)
mov
or
inc
jmp
inc
sub
mov
daa
outs
mov
push
mov
and
ds
sti
es
mov
popf
push
adc
int
fsubr
mul
push
adc
jg
loop
dec
sbb
je
mov
or
pop
mov
pop
stc
loope
xor
ja
gs
dec
shr
das
jp
in
add
enter
inc
and
out
cmp
jne
lea
(bad)
sbb
mov
cmp
icebp
push
scas
enter
xchg
loop
imul
retf
imul
call
adc
mov
dec
and
dec
scas
push
jnp
ret
pop
sub
fisttp
mov
xchg
mov
shl
imul
push
inc
sbb
and
xchg
fdiv
in
sbb
mov
test
leave
inc
ret
fstp
js
push
test
cmp
in
cmps
cmp
xchg
mov
adc
dec
nop
and
lods
xchg
dec
add
xor
jge
add
mov
lds
(bad)
fdiv
mov
mov
ja
add
mov
sub
imul
sbb
arpl
xchg
push
push
jne
cmp
jp
inc
aas
std
lahf
jmp
mov
cmp
pop
push
push
mov
(bad)
mov
pop
push
xchg
lea
es
jle
movs
lods
mov
arpl
or
jo
and
push
out
loope
hlt
inc
cmps
xor
dec
xchg
dec
jp
call
pop
ins
loopne
mov
adc
shl
xchg
sbb
push
(bad)
add
mov
imul
mov
xchg
aad
repnz
push
mov
enter
mov
mov
enter
call
pop
push
adc
out
mov
sbb
xchg
imul
mov
mov
dec
inc
loop
(bad)
cmp
leave
push
sub
pusha
adc
ins
and
mov
xor
mov
and
jmp
jae
inc
sbb
repz
push
les
mov
mov
fimul
mov
cwde
or
inc
xchg
pop
push
sbb
es
mov
out
mov
call
test
mov
fdivr
shl
pop
sub
mov
dec
(bad)
(bad)
in
push
outs
imul
or
dec
cmps
frstpm(287
ret
push
loop
inc
push
mov
fadd
cmps
inc
xchg
pop
test
adc
iret
add
enter
add
xchg
add
dec
or
(bad)
call
sbb
add
and
mov
cmp
lahf
pop
push
cmp
sbb
jno
dec
mov
aas
sub
loop
sbb
fwait
ret
push
pop
repnz
sub
cli
add
sub
jo
xor
mov
inc
xchg
ret
mov
pushf
fld
std
sub
cld
sar
shl
sub
and
and
inc
pop
scas
icebp
adc
sub
xor
mov
repz
bound
mov
out
mov
jnp
arpl
mov
js
stos
outs
ret
sbb
dec
cmp
jmp
push
shl
lods
stos
mov
les
pop
sbb
popa
sti
ret
adc
inc
retf
inc
stc
sub
ret
cmp
xchg
xchg
(bad)
loopne
in
mov
aam
lods
push
and
fdiv
dec
in
add
addr16
not
push
stos
jbe
not
xchg
and
xor
outs
out
fcom
or
in
dec
xlat
push
arpl
shr
xlat
push
push
pop
jb
pop
mov
jecxz
out
cmp
sbb
fs
repz
sub
(bad)
iret
mul
xor
or
adc
mov
adc
xchg
(bad)
loope
and
push
push
mov
jne
retf
retf
pop
lds
and
inc
retf
hlt
pusha
test
imul
cwde
sbb
lods
outs
dec
in
pushf
out
lods
fnop
sub
cmps
or
push
lods
xchg
jmp
out
dec
inc
dec
pop
mov
jle
and
cld
imul
je
jmp
cs
aam
out
test
(bad)
jle
cmc
xchg
loop
ja
add
dec
sbb
push
push
cmp
inc
jl
loopne
scas
psubq
out
add
sub
out
push
push
mov
pop
out
aad
popf
sub
mov
mov
retf
jb
mov
mov
adc
jg
stos
retf
call
dec
ja
mov
(bad)
dec
xchg
lds
sub
jmp
loope
and
and
ins
jb
add
mov
sar
hlt
sbb
movs
inc
push
fisub
mov
loop
stc
retf
sub
(bad)
jecxz
jg
sub
int
lods
mov
(bad)
std
push
xor
lods
inc
adc
leave
and
aaa
jmp
jae
call
add
push
stc
pop
test
cmp
fisub
movs
in
rcl
dec
jne
movs
popf
leave
inc
loop
stos
std
sbb
(bad)
sub
mov
push
inc
sub
ret
dec
imul
shr
and
fst
rcl
cmc
jb
jbe
jg
fs
push
dec
test
scas
jno
push
push
(bad)
sub
into
or
mov
sub
fcom
jge
adc
or
popa
mov
sti
bound
cmp
cwde
in
repz
in
imul
lods
xchg
ds
ja
in
ds
in
cmp
cs
pop
mov
mov
mov
(bad)
jo
rol
lock
(bad)
pushf
sbb
mov
fisubr
loop
fdivrp
ins
mov
sbb
and
jle
mov
sub
adc
das
sahf
mov
and
add
dec
cmp
nop
xor
addr16
int3
dec
mov
dec
pop
inc
or
xchg
scas
call
xchg
es
push
push
xor
and
jnp
or
or
fdiv
pusha
cmp
aas
lods
adc
xor
cmps
loopne
jmp
inc
call
add
or
scas
repz
lock
pop
dec
sub
scas
int
arpl
in
jmp
inc
aad
mov
dec
sub
in
sti
push
leave
jg
jle
dec
loopne
shl
cld
or
mov
dec
inc
lock
adc
rcr
sbb
fild
push
pop
cld
and
inc
or
xchg
xchg
add
in
call
nop
test
ds
repnz
mov
mov
xchg
out
mov
jmp
hlt
sbb
mov
mov
pop
jns
(bad)
add
mov
or
inc
dec
in
lods
jecxz
fidiv
loop
mov
mov
pop
loop
sar
popf
dec
sbb
sbb
enter
jno
mov
dec
xchg
push
aas
cmp
mov
imul
addr16
pop
cmp
arpl
sub
fs
fs
mov
pusha
mov
mov
mov
inc
ror
push
xchg
in
js
jns
sub
test
fs
int3
out
xor
add
mov
xor
and
xchg
popa
ret
inc
shl
std
shl
or
sub
ror
sub
mov
pop
cwde
imul
jae
jb
lds
xor
add
nop
mov
adc
andps
fmul
loop
pop
xchg
jmp
xchg
(bad)
jo
ss
pop
jmp
inc
out
into
push
xor
xor
test
fnsave
jnp
push
test
rcl
inc
lahf
sbb
retf
jnp
or
cmp
sbb
pop
jg
shl
std
and
sub
mov
lods
jmp
test
inc
ds
aad
aam
add
jle
ss
inc
push
scas
je
repz
add
aam
inc
push
mov
pop
jb
sub
movs
and
lds
stos
add
cmc
mov
jp
(bad)
adc
mov
popf
fsubr
outs
sbb
cmps
jnp
outs
pop
xchg
int3
jl
les
add
pop
mov
and
mov
test
int
fmul
ror
sbb
fs
pop
and
fsub
lods
jge
int3
push
lods
sub
jno
in
outs
call
shl
js
xchg
cdq
jns
add
fsub
sti
push
and
jnp
lock
aas
in
fiadd
dec
outs
xchg
add
xchg
sbb
add
mov
out
addr16
jl
iret
sbb
test
nop
lea
pop
das
ret
fucomp
test
adc
inc
sar
(bad)
lods
cli
xor
xchg
adc
mov
add
daa
out
fldenv
clc
cmp
cmp
aaa
enter
mov
out
arpl
fdivr
ret
push
pop
add
icebp
jge
stos
push
(bad)
jno
std
ror
pop
pop
mov
gs
out
dec
cli
or
push
clc
scas
jle
lods
jmp
out
inc
shr
in
jl
dec
mov
stos
rol
sbb
mul
movs
xchg
jae
out
mov
es
idiv
pop
in
dec
and
int
xchg
cs
neg
sub
out
xchg
(bad)
mov
adc
pop
shl
adc
cld
cdq
ret
ret
and
js
ret
pop
xor
sbb
out
jnp
inc
imul
jl
mov
or
mov
xchg
sbb
into
cmp
mov
lahf
les
push
jg
fdivrp
mov
sar
out
out
iret
inc
push
push
xchg
push
mov
xchg
lds
mov
sar
addr16
lods
cld
jle
mov
iret
out
stc
aas
xlat
sahf
outs
call
out
sub
dec
fimul
jns
leave
nop
sbb
mov
jae
add
aad
push
cmp
(bad)
loope
jno
sbb
addr16
inc
inc
test
xchg
xchg
dec
stc
sub
sbb
in
sbb
fadd
push
inc
(bad)
mov
sbb
mov
push
or
lahf
or
and
dec
lods
dec
mov
push
xchg
(bad)
sar
dec
jmp
sbb
movs
out
fs
jae
push
fwait
sti
ret
in
xchg
addr16
mov
imul
push
jne
push
leave
pop
jge
(bad)
xchg
call
push
cmp
inc
ret
mov
inc
jmp
maxps
add
sub
xor
fsubr
test
jne
inc
push
jns
daa
mov
in
mov
ret
out
in
xor
mov
sbb
or
cmp
push
sub
int
mov
retf
je
hlt
(bad)
call
popa
pushf
mov
mov
js
out
je
inc
xor
test
push
fcom
into
repnz
push
jno
mov
in
test
in
in
xor
xchg
or
shr
or
pop
inc
sar
dec
cmps
out
cmp
rcr
or
add
push
cmp
mov
cmp
cdq
mov
call
movs
xor
neg
cmp
and
lock
repz
add
loopne
cmp
jg
hlt
mov
jno
dec
les
mov
and
push
jle
sbb
add
push
cmp
sbb
(bad)
(bad)
not
sub
jmp
(bad)
push
lods
and
pop
pushf
adc
xor
sub
push
in
push
scas
ins
daa
repnz
pop
leave
sbb
ret
lods
cmc
std
adc
(bad)
pop
rcl
clc
mov
sbb
pushf
cmp
int3
lahf
push
xor
nop
push
dec
mov
je
cmc
out
xor
push
mov
dec
ss
cmc
push
ret
or
cmp
cmp
sub
stos
push
xor
lds
rcr
push
arpl
cmp
call
fs
enter
sub
push
xlat
fdiv
setp
test
add
pop
mov
jo
out
jae
pop
ret
fs
(bad)
pop
popf
or
fbstp
sub
pop
push
mov
(bad)
imul
sbb
ds
xor
sub
or
jo
push
push
push
push
push
into
adc
fst
mov
aas
imul
push
fisttp
mov
aas
out
out
adc
imul
mov
scas
cs
dec
pop
(bad)
jmp
mov
sub
xor
adc
daa
or
aaa
daa
leave
inc
into
retf
push
ja
mov
adc
push
out
inc
cwde
mov
adc
pusha
daa
dec
cmps
mov
sub
fistp
push
sbb
lea
(bad)
and
hlt
push
xchg
xchg
pop
stos
into
xchg
out
cmps
sub
sbb
pop
bound
aas
loopne
retf
jmp
neg
xor
jp
mov
(bad)
(bad)
daa
cmp
retf
int3
dec
ds
arpl
loopne
mov
adc
sub
sbb
mov
xchg
add
push
dec
jno
imul
imul
scas
mov
mov
gs
test
xor
pushf
jmp
pushf
faddp
ss
sbb
pop
cwde
xchg
sub
push
push
pause
pop
pop
mov
pop
cmc
popf
daa
enter
and
loopne
jle
fldenv
cwde
aas
fwait
push
add
xor
push
and
dec
rol
cld
scas
lds
mov
outs
cs
mov
mov
fcomp
xchg
aas
dec
or
movs
add
mov
sub
mov
mov
pusha
imul
int
les
(bad)
call
test
sub
gs
sbb
sbb
mov
out
dec
mov
arpl
jb
or
mov
add
nop
pmaddwd
in
fsubr
and
push
xor
sub
or
xchg
cmp
scas
(bad)
inc
not
cwde
div
cs
jb
mov
cdq
xor
dec
shr
pop
out
add
push
sub
cmps
fs
test
outs
inc
push
and
fstp
in
adc
or
sbb
push
fsubp
fs
popf
dec
xchg
cld
aas
pop
pop
test
stos
dec
cld
scas
icebp
or
fsubr
inc
mul
adc
cmp
adc
cdq
jbe
shr
jg
scas
aas
push
xchg
repz
mov
push
imul
das
ret
hlt
pop
js
mov
mul
adc
(bad)
data16
movs
or
mov
sar
add
pop
lods
mov
mov
xor
sahf
mov
inc
cmps
dec
int3
add
add
mov
and
mov
add
out
rcl
sti
sub
add
imul
pop
inc
data16
push
mov
or
pop
(bad)
inc
outs
or
loop
sub
or
nop
and
xchg
xor
or
lock
cdq
into
jmpw
inc
ror
push
mov
(bad)
aam
jns
jne
mov
test
test
in
sti
and
(bad)
adc
retf
icebp
mov
shr
data16
sbb
rcr
xchg
test
std
rcl
inc
fstp
pop
push
(bad)
not
mov
sub
ret
arpl
pop
mov
lock
push
out
mov
ja
movs
dec
mov
cdq
sbb
mov
stos
int3
xor
inc
add
ss
add
pop
push
push
test
iret
and
jb
cmp
ret
cmp
shl
out
jle
pop
js
pop
push
push
pop
outs
inc
mov
out
inc
std
pop
arpl
xchg
mov
sub
sub
sbb
pusha
cmc
sub
(bad)
(bad)
and
js
xchg
loope
loope
sysexit
cmp
call
xchg
(bad)
fsubr
test
ds
pop
bound
or
jne
out
mov
push
aam
or
std
shl
mov
jl
jb
adc
sbb
mov
rsqrtps
stos
mov
(bad)
mov
push
mov
xor
or
sbb
pop
aaa
ret
out
mov
mov
inc
enter
int
mov
test
mov
lods
mov
fild
lock
aas
add
cs
jnp
dec
(bad)
out
dec
int
popw
pop
pop
xchg
dec
(bad)
scas
into
xchg
ror
xor
fst
in
rol
aam
cli
das
mov
mov
in
enter
jl
sti
imul
sub
or
mov
xor
in
mov
shr
cmp
(bad)
push
jmp
lock
in
sbb
sbb
test
cs
xchg
rcr
sar
inc
cwde
jg
mov
xchg
cs
ss
popa
mov
fsubr
daa
int3
or
enter
jle
outs
jbe
xchg
cmc
sti
pop
or
dec
neg
mov
leave
loopne
in
push
and
add
popa
xchg
push
lahf
lods
daa
mov
inc
fidivr
call
push
(bad)
pop
sub
daa
inc
mov
xor
add
int
enterw
test
mov
push
pop
adc
add
mov
js
xor
xchg
pushf
jle
or
enter
jg
xor
adc
fsin
fs
or
push
mov
mov
test
loopne
imul
stc
call
mov
test
dec
stos
mov
xchg
(bad)
jns
push
sbb
dec
mov
es
and
sub
popa
dec
psubusb
in
pop
mov
clc
xchg
repz
inc
xor
fcom
clc
push
rcl
jmp
out
fdivr
ins
inc
icebp
mov
sbb
mov
dec
loopne
aaa
cmp
xchg
div
xor
outs
fstp
inc
cmps
in
xor
pop
cmps
inc
(bad)
sub
or
popf
rol
iret
mov
cmp
ret
and
push
jge
pop
jns
pop
fild
pop
dec
xor
cmc
pop
dec
or
jbe
mov
push
fwait
xchg
push
bound
sbb
stos
mov
mov
push
les
jmp
xor
adc
in
inc
outs
xor
jp
mov
out
and
(bad)
dec
scas
fsub
adc
ror
jge
jno
jp
mov
fist
or
fstp
cdq
fistp
pusha
sbb
mov
pusha
inc
push
imul
push
push
cli
pop
loope
call
xor
ja
aas
aad
jl
mov
mov
in
retf
pusha
pop
(bad)
ror
(bad)
ins
cmps
imul
dec
pop
popa
push
ret
lahf
sub
arpl
loope
call
not
lea
mov
pop
mov
xor
mov
addr16
loopne
rol
fs
ret
add
mov
push
std
mov
jo
lods
push
jo
stos
adc
pop
stos
cmp
shl
repz
cmc
(bad)
mov
shl
in
add
sub
fld
inc
leave
cmps
pop
dec
std
inc
jmp
(bad)
xchg
mov
adc
sbb
imul
and
das
mov
repz
in
(bad)
cli
jmp
es
xor
xchg
push
mov
icebp
div
lea
pusha
cmp
pop
xchg
and
hlt
and
pop
mov
pushf
dec
push
xchg
cli
inc
jp
adc
call
push
jecxz
clc
mov
dec
int
and
ds
add
iret
or
sub
ds
out
adc
inc
cmp
iret
xchg
imul
ds
leave
add
cdq
or
sub
inc
in
lea
je
dec
in
and
stos
into
(bad)
xchg
pop
stos
adc
movs
loop
jmp
push
and
push
xchg
xchg
push
ss
out
pop
cmc
(bad)
pop
imul
and
bound
scas
push
fmulp
or
jg
inc
cmp
iret
push
ds
mov
or
xor
jg
mov
cmc
ret
std
lock
repnz
mov
ret
nop
sbb
sar
(bad)
mov
in
icebp
xchg
add
xchg
fwait
sar
xchg
xor
cmp
aam
pop
sar
sti
sbb
bsf
pop
daa
call
es
je
jmp
repz
mov
pop
pop
hlt
sub
iret
cwde
jge
(bad)
xchg
mov
pop
xchg
and
adc
movs
mov
lods
sub
push
or
mov
test
addr16
inc
mov
shr
jmp
cs
out
sbb
and
pop
nop
jb
idiv
push
cmc
popf
cmps
inc
adc
push
and
inc
and
test
inc
add
cmp
rol
pop
fwait
inc
ins
push
dec
dec
or
mov
sbb
mov
push
jb
sbb
sbb
inc
xchg
xchg
dec
mov
push
loopne
xor
dec
(bad)
aad
popa
cmps
pushf
test
xor
mov
and
mov
sub
and
push
pushf
push
imul
or
rcr
pop
fcom
dec
sti
pop
daa
nop
pop
imul
mov
jmp
fild
je
ret
dec
push
popa
ins
add
xor
adc
xor
div
test
cmp
push
xlat
movs
add
add
mov
sti
in
jmp
cli
and
outs
push
leave
cmp
sub
xor
popf
sahf
(bad)
jmp
sbb
out
dec
jo
sbb
or
inc
or
dec
shl
sahf
cmps
mov
mov
(bad)
addr16
shl
xchg
mov
loope
mov
mov
cs
enter
and
inc
xor
hlt
mov
cwde
or
fisttp
test
push
loope
cli
shr
ret
xor
imul
movs
loopne
dec
sahf
sub
hlt
loope
push
push
push
dec
pop
xor
adc
ss
enter
retf
mov
inc
stos
push
scas
into
push
sbb
fwait
pusha
jnp
sub
fwait
stc
les
jle
fwait
rcr
jp
jge
cmp
pusha
xor
add
push
mov
fiadd
fidiv
push
dec
into
mov
xchg
push
pop
push
push
pop
or
test
mov
ds
jmp
adc
or
cmp
and
je
sahf
movs
inc
imul
fs
call
ror
adc
iret
sbb
(bad)
sbb
fdiv
aaa
adc
or
stos
imul
mov
adc
loopne
out
inc
outs
and
pop
pop
sub
jae
pop
sbb
cmp
cmps
mov
add
mov
fisttp
cmc
mov
sbb
add
pop
cwde
pop
or
jle
push
pop
lahf
js
mov
ficomp
pusha
repz
xor
cli
bound
xchg
mov
aaa
bound
pop
sti
jne
dec
inc
push
push
and
or
xlat
dec
jmp
jmp
sbb
ins
hlt
je
fdivr
push
popa
jl
or
pop
push
mov
xlat
lods
mov
push
mov
sbb
and
and
es
repnz
out
pushf
int
mov
sbb
cwde
xchg
adc
adc
loope
adc
fidivr
movs
(bad)
movs
xchg
or
mov
fadd
mov
adc
xchg
and
std
inc
sbb
push
jge
mov
call
into
js
jb
sub
bound
hlt
inc
sub
sbb
cmp
dec
jbe
loopne
pop
pop
arpl
(bad)
adc
push
inc
inc
(bad)
xor
scas
loop
dec
js
adc
fidivr
sbb
adc
sbb
ja
inc
ins
pop
repnz
in
test
int
(bad)
lea
push
mov
or
jb
mov
push
sub
loopne
jno
push
xchg
push
and
mov
ds
xchg
push
out
lods
aaa
clc
in
jns
sahf
sbb
or
sar
popf
dec
repnz
mov
xchg
jle
dec
mov
dec
fsubr
gs
movs
enter
jmp
pop
out
jns
xor
xchg
jmp
mov
push
js
push
in
add
pop
stc
jmp
movs
mov
stos
sub
cmp
adc
xchg
stc
mov
test
dec
sbb
sub
and
sar
hlt
mov
ret
out
and
test
sar
or
jge
fwait
or
adc
adc
fsubr
adc
js
(bad)
dec
jnp
dec
ja
test
or
ret
cmp
mov
lds
mov
scas
fistp
jmp
push
inc
cmp
jge
sbb
cs
mov
imul
test
sbb
cli
das
xor
retf
es
cmp
std
sub
jb
lea
jno
out
lods
add
adc
cmps
mov
pop
popa
outs
ret
arpl
fst
add
pop
stos
mov
mov
jg
int3
xchg
push
mov
adc
push
push
in
dec
lock
mov
outs
cld
std
sbb
cmp
mov
mov
or
lods
xor
movs
imul
pop
imul
jp
dec
dec
cmps
(bad)
ret
push
sbb
std
xor
stos
setb
sti
mov
sbb
in
test
cld
xchg
and
push
sub
push
pop
mov
lods
retf
lods
in
fucom
adc
sub
ret
jnp
pop
mov
xchg
dec
sahf
mov
mov
or
int3
scas
inc
loop
adc
std
out
sub
pop
and
mov
jo
push
jg
rcl
movs
add
xor
xchg
jno
mov
push
stos
sub
or
loopne
mov
fdivr
sub
xor
add
lahf
cmp
outs
mov
or
push
sbb
mov
xchg
ins
out
sbb
outs
mov
jmp
cld
push
test
retf
xchg
aas
rol
cmp
dec
test
ret
je
or
imul
and
inc
lea
and
stos
movs
cmp
adc
data16
lods
jo
or
and
push
xor
cmps
jns
shl
in
scas
mov
imul
(bad)
das
jmp
aam
dec
hlt
scas
mov
cli
out
push
jb
jge
add
aas
ins
ins
cld
lods
adc
dec
cmp
push
movs
add
retf
pop
mov
push
push
fcomi
loopne
test
arpl
xchg
push
dec
dec
cld
add
pusha
adc
push
cmp
fnstcw
sbb
push
cdq
pop
cld
aaa
in
inc
and
jge
std
jne
fstp
pop
in
jb
es
jle
cmps
iret
sahf
imul
test
cdq
mov
push
test
movs
inc
mov
das
enter
dec
outs
jbe
out
mov
add
and
push
jmp
test
add
rcr
lahf
ins
sar
push
xlat
inc
mov
xor
or
pop
jno
je
inc
leave
ret
jge
icebp
inc
adc
int3
mov
adc
push
mov
out
rcl
jne
call
inc
jo
sbb
aam
xor
jbe
(bad)
mov
addr16
adc
or
push
jbe
in
loope
lock
ror
lea
(bad)
or
cmc
mov
add
into
inc
sub
mov
(bad)
fst
jne
mov
aad
cs
retf
dec
popa
mov
xchg
or
and
push
add
aaa
push
inc
pop
mov
add
gs
scas
jnp
int3
push
sub
mov
pop
fistp
jno
xchg
inc
xchg
rcl
pop
enter
sub
add
adc
pop
in
or
dec
sbb
shl
dec
icebp
push
pcmpgtw
nop
pop
in
test
shr
mul
imul
into
movs
inc
cmp
or
inc
xchg
mov
push
call
rol
xchg
cwde
cmp
lea
in
ja
xchg
adc
repz
or
cwde
arpl
inc
jge
adc
test
sbb
js
bound
or
pop
jb
pop
or
mov
aaa
in
push
cmp
sahf
pop
push
lahf
pop
jns
push
mov
mov
or
and
mov
imul
rcr
pusha
pusha
ret
ja
jp
in
mov
cmps
jmp
jge
shl
fdiv
(bad)
int
imul
dec
ins
pop
cmps
ficom
leave
push
pop
push
(bad)
repnz
mov
das
leave
jg
adc
mov
sbb
xor
or
and
jge
xor
adc
xchg
push
test
into
adc
adc
jmp
xchg
sub
rol
inc
retf
ds
jle
cmc
inc
or
ss
or
pop
jmp
es
out
inc
xchg
out
push
and
cmps
mov
call
mov
popa
mov
and
push
nop
leave
dec
mov
(bad)
and
push
(bad)
sahf
inc
jp
test
and
pusha
push
cmp
call
dec
cmp
aas
fld
into
dec
stos
sub
sbb
mov
mov
adc
call
pop
in
or
jno
mov
add
cmp
xchg
aaa
cwde
loopne
call
std
push
cmc
retf
cmp
in
in
imul
enter
sbb
sub
loop
in
adc
sbb
scas
jp
mov
mov
clc
daa
sar
xor
pop
cld
mov
shl
inc
or
sub
fs
rol
ror
sub
call
out
mov
xor
aam
inc
std
mov
adc
fdivr
clc
les
or
mov
add
add
test
add
or
adc
nop
popf
mov
xor
leave
stc
mov
jnp
push
mov
push
out
cmp
push
mov
adc
mov
cmps
cmps
dec
pop
sbb
pusha
push
int3
jo
or
mov
lods
outs
jmp
add
xchg
out
cmp
xor
repnz
mov
idiv
jbe
jbe
pusha
adc
mov
xchg
pop
daa
pop
cmp
fwait
xor
mov
dec
in
xchg
pop
or
mov
fidivr
lea
adc
dec
bound
repz
push
dec
dec
pop
jge
repnz
mov
sub
cmp
jb
pop
add
or
add
out
cmp
cmp
mov
test
xchg
retf
clc
push
loop
mov
sbb
bound
sahf
adc
arpl
scas
daa
push
and
movs
into
(bad)
pop
enter
mov
cld
das
mov
cmc
xor
(bad)
xchg
or
cmp
xchg
push
mov
out
addr16
sub
jecxz
imul
pop
(bad)
scas
hlt
lea
pop
sbb
call
loope
xchg
das
xor
stos
jg
push
lock
xor
test
mov
jae
dec
jmp
inc
aaa
inc
stc
not
cwde
mov
lea
jbe
inc
jle
pop
adc
fisubr
push
sti
push
loope
ins
cmps
push
cmp
rcr
add
cdq
hlt
ins
iret
aaa
xor
sbb
push
xor
sahf
dec
adc
and
aas
les
inc
inc
es
out
pop
repz
xchg
xchg
push
shr
jo
repz
cmp
mov
sar
and
push
sub
jg
cs
call
mov
das
jp
bound
xchg
cmp
inc
cmp
in
dec
pop
jmp
mov
aas
sbb
dec
retf
ds
cli
and
mov
or
scas
les
loope
fimul
idiv
inc
inc
inc
ds
out
jmp
(bad)
out
push
jmp
lock
fisubr
jmp
sub
pop
inc
das
mov
pop
push
or
mov
pop
pusha
call
and
mov
xchg
push
mov
test
and
dec
sbb
fcmovbe
or
shl
out
cmp
jns
movs
clc
dec
lock
sub
sbb
(bad)
outs
mov
sbb
cmp
clc
pop
pop
iret
test
and
scas
dec
fsubr
and
scas
aaa
rcr
mov
cs
pop
add
inc
dec
ss
push
stos
loop
(bad)
aaa
retf
stos
imul
jecxz
adc
int
jbe
inc
sbb
inc
daa
sub
rol
jle
jl
std
data16
mov
jnp
jg
stos
out
sub
stc
dec
shl
les
pop
adc
fdiv
xchg
mov
cmp
mov
stos
sub
hlt
xor
push
fwait
mov
inc
and
jp
imul
and
pop
push
loopne
int3
mov
mov
scas
and
jecxz
dec
dec
(bad)
stc
adc
repnz
mov
daa
ss
(bad)
mov
mov
(bad)
xchg
das
outs
mov
(bad)
pop
(bad)
cmp
cmps
xor
jg
xchg
or
xchg
in
mov
sub
fstp
jl
add
push
in
int
xor
loope
test
aaa
mov
xchg
ds
add
stc
push
push
sub
into
push
(bad)
ins
enter
in
fisubr
shr
cmps
scas
(bad)
pop
pop
jl
es
inc
test
ds
mov
mov
daa
sub
xchg
test
sub
popf
pop
jp
and
and
pop
fdiv
fdivrp
or
inc
pop
(bad)
loop
lods
push
(bad)
aaa
pop
out
sbb
fsub
and
lods
in
inc
cvtps2pd
inc
cmp
repnz
mov
xchg
xlat
or
or
es
call
push
aaa
daa
mov
fwait
jmp
idiv
shl
les
imul
(bad)
push
arpl
mov
push
jae
sti
add
int3
xchg
sbb
invd
sub
cdq
xchg
test
icebp
leave
cmp
jp
push
pop
(bad)
(bad)
push
dec
dec
retf
psubsb
addr16
dec
and
inc
pop
inc
dec
ins
ror
call
repnz
xchg
sub
rcl
inc
cwde
cmp
cmp
mov
ins
push
out
out
mov
and
mov
(bad)
in
rol
mov
push
jo
xor
dec
adc
ins
loopne
rcl
push
test
mov
xor
sub
repz
or
iret
push
loop
stc
scas
mov
jns
inc
push
mov
nop
sub
xchg
fsub
or
cmp
mov
jp
scas
mov
cmp
arpl
mov
mov
(bad)
xchg
push
mov
sub
adc
lea
sbb
mov
hlt
mov
add
mov
lock
push
dec
inc
bound
bound
cmp
xchg
clc
xor
push
hlt
(bad)
mov
mov
sbb
dec
popa
leave
and
jno
call
outs
mov
retf
std
loope
jno
movs
shr
lods
pop
(bad)
cmp
dec
inc
cmp
jecxz
pop
adc
and
jae
ss
shl
dec
dec
loop
fimul
jno
sbb
sar
(bad)
push
mov
ins
rol
mov
xor
push
mov
(bad)
fcomp
push
push
cmps
loopne
faddp
jnp
dec
arpl
cmp
jle
adc
jmp
fbld
clc
fwait
ret
cmp
pop
std
mov
pop
ss
pop
retf
add
cmps
mov
jno
jno
js
cmps
jns
dec
mov
jp
in
dec
in
mov
push
outs
cs
xchg
or
leave
cs
out
sub
mov
fnstcw
sub
xor
test
xchg
les
movs
shr
fcom
xor
iret
mov
mov
inc
jmp
retf
fs
adc
sbb
push
pop
adc
jp
les
fistp
ins
jnp
add
adc
xlat
cs
sbb
inc
inc
sub
and
ret
test
dec
pop
mov
adc
sbb
hlt
add
out
pop
fdivr
sbb
inc
cmps
xchg
(bad)
mov
or
rcl
jmp
ins
out
jp
icebp
popa
lahf
call
inc
mov
push
jae
cli
mov
fwait
out
xchg
test
push
mov
add
lds
xchg
inc
xor
cmp
enter
enter
pop
or
xor
(bad)
retf
movs
imul
icebp
out
sar
push
loopne
mov
fs
pushf
fisttp
adc
inc
int
mov
outs
cld
scas
and
sbb
sub
popa
mov
dec
cmp
xchg
jne
cmp
(bad)
js
lods
ret
push
rcr
sti
mov
mov
push
push
push
jne
std
mov
cmp
test
sar
(bad)
movs
retf
aad
push
lods
cmc
je
push
jbe
pusha
dec
mov
loope
xor
inc
les
xchg
fdivr
jle
cs
enter
stos
in
mov
xchg
inc
(bad)
test
add
jle
retf
jno
lea
jb
jnp
call
xor
xor
cmp
ins
add
outs
pop
or
jle
jne
gs
pop
(bad)
adc
mov
stos
jb
cld
and
shr
push
sar
jns
sub
push
and
scas
lods
pop
pop
sahf
cmps
push
movs
stos
icebp
jnp
loope
and
int3
imul
push
push
rep
sub
cmp
mov
and
fnop
ins
pop
xchg
out
lods
push
adc
or
imul
cmp
jecxz
mov
test
aaa
movs
cmp
sar
sub
(bad)
in
xor
xchg
jo
icebp
xor
cld
pop
xchg
jp
push
xchg
pop
pop
arpl
lods
in
inc
and
ret
push
xor
push
pop
jmp
xor
aad
std
out
loope
cmps
lock
ffree
fwait
cwde
xor
stc
fwait
int3
push
outs
in
sahf
push
mov
xor
mov
xchg
and
int3
mov
mov
movs
jno
movs
ja
jb
xchg
jns
xchg
pop
imul
ss
xchg
push
push
into
jne
fbld
push
cmp
sbb
das
mov
dec
repz
repz
sub
sbb
mov
pop
add
push
dec
test
inc
push
push
pop
loopne
mov
cmc
dec
add
sar
cmps
sbb
out
and
jbe
jns
aam
pop
clc
pop
jns
outs
pop
add
aad
adc
jo
sbb
pop
push
scas
scas
iret
inc
out
xchg
fstp
xchg
sbb
cdq
push
push
pusha
jmp
pop
mov
dec
imul
adc
mov
mov
int3
cmc
fsubr
cli
sub
pop
sbb
iret
rcl
iret
sub
add
mov
ins
fsubr
in
mov
and
bound
dec
les
inc
popa
add
or
daa
add
clc
sub
jno
dec
and
push
mov
aas
adc
ret
sub
mov
inc
add
jbe
pop
inc
cli
dec
jno
add
repnz
das
xor
callw
add
push
jno
push
jnp
sbb
test
shr
and
pop
cmp
stc
sbb
xchg
popw
dec
jns
push
fidiv
or
jbe
das
xchg
pop
or
mov
sub
pop
jo
mov
stc
ficomp
push
popf
ret
sbb
push
fwait
outs
inc
dec
mov
push
repz
pop
popf
adc
pop
imul
jge
pushw
jg
push
jp
movs
(bad)
loopne
imul
push
sbb
dec
xchg
mov
push
cli
sbb
mov
les
xchg
cmp
dec
or
test
adc
pop
push
call
lods
cmp
into
(bad)
cdq
push
cmp
es
mov
dec
adc
jmp
lods
dec
cmp
mov
call
jecxz
mov
fidivr
aaa
lock
sub
sbb
xchg
push
pop
cwde
adc
stos
xor
jle
xor
xor
fcmovb
fld
(bad)
xlat
nop
inc
dec
ds
or
dec
jp
xchg
xchg
stos
cwde
dec
arpl
mov
call
out
jmp
repz
out
cmp
mov
dec
xor
pushf
inc
push
dec
popf
mov
es
addr16
inc
inc
bnd
push
cmp
or
or
lahf
stos
inc
sub
xchg
fnstenv
imul
lock
dec
in
or
fcomp
(bad)
xchg
xor
pop
inc
or
icebp
cmc
pop
jp
pop
outs
jns
jns
enter
retf
mov
sub
jae
data16
fstp
out
clc
inc
push
mov
adc
mov
dec
(bad)
xlat
movs
cmp
ins
(bad)
in
add
mov
xchg
add
mov
or
pop
imul
sub
lock
inc
adc
bound
or
pop
dec
ror
mov
outs
dec
ret
int3
mov
add
mov
xor
jae
(bad)
daa
into
adc
cmp
sbb
jge
arpl
sti
ss
xor
(bad)
(bad)
pop
mov
test
inc
popa
mov
adc
ret
mov
xor
xor
outs
adc
(bad)
ins
test
test
and
ss
jmp
xor
(bad)
rcr
push
cmps
ret
dec
xor
xchg
ret
xor
sub
mov
ins
repz
xchg
pop
das
adc
hlt
cli
adc
sbb
sbb
gs
jge
shl
mov
push
adc
pop
fcmove
fisttp
fsubr
mov
mov
int3
and
lea
xchg
inc
sub
dec
ss
and
mov
xor
clc
xor
retf
sub
cli
inc
jnp
and
jecxz
pusha
imul
mov
add
xchg
push
mov
jo
mov
fidivr
out
imul
mov
out
push
test
xor
push
xchg
repz
mov
outs
push
xchg
ins
rcr
push
dec
test
mov
sar
jbe
cmp
and
scas
nop
int3
out
mov
cwde
mov
lock
lock
xchg
int3
(bad)
sub
push
xchg
add
push
push
dec
mov
mov
push
dec
enter
fistp
mov
fwait
push
mov
fs
or
(bad)
inc
mov
mov
popf
jns
outs
and
add
push
mov
test
inc
(bad)
fisubr
retf
clc
ror
push
jmp
mov
xor
jecxz
out
bnd
retf
add
nop
ja
(bad)
sub
mov
jbe
fcmovb
xor
inc
idiv
push
or
cmp
mov
push
cmp
mov
xchg
test
mov
cdq
dec
dec
xor
adc
and
rcl
arpl
dec
or
daa
test
cli
xor
xor
sbb
dec
es
or
hlt
cmp
sub
(bad)
scas
jae
mov
les
mov
fcmovb
xchg
cmp
cmp
movs
cli
xchg
or
std
xor
pop
sub
repnz
xchg
(bad)
push
jne
shl
sub
outs
ins
mov
jns
iret
cmp
mov
jmp
pop
cmp
(bad)
outs
mov
in
pop
adc
es
loope
stc
and
fldcw
xchg
ficom
pop
mov
pop
xor
pop
ret
inc
xor
xor
jl
dec
test
test
das
scas
and
fiadd
xchg
ret
jbe
enter
mov
es
inc
jb
mov
inc
loope
mov
or
or
push
shr
jno
mov
gs
test
mov
pop
or
pop
out
outs
mov
test
cmp
cli
adc
mov
sub
xor
ss
mov
mov
not
cdq
mov
scas
mov
adc
sub
inc
dec
es
jno
jb
int3
or
or
loop
mov
mov
ror
xor
lods
(bad)
cmp
dec
adc
lds
int
cmp
scas
inc
and
scas
cmp
jnp
into
jb
into
ja
mov
cmc
(bad)
(bad)
dec
push
nop
and
lahf
pusha
dec
mov
push
scas
mov
jge
mov
stos
push
jb
jge
mov
sahf
icebp
inc
sbb
das
clc
pusha
nop
xchg
imul
scas
and
jmp
or
bound
mul
cmp
loopne
pop
adc
xchg
es
sub
outs
ror
add
jge
sar
sub
cmp
ins
xchg
rcr
mov
pop
jmp
pusha
in
icebp
push
mov
in
jmp
mov
je
pop
stos
and
sub
xor
gs
inc
mov
adc
mov
mov
jns
pushf
std
cmps
push
cmp
jb
and
mov
xlat
push
lock
out
sbb
lock
dec
je
js
push
xor
fisubr
sbb
xchg
stc
mov
(bad)
push
dec
xchg
xlat
scas
ins
pop
adc
dec
popf
jle
aaa
(bad)
leave
popf
mov
push
rcl
popa
in
(bad)
ss
xor
dec
arpl
jns
jo
movs
and
push
jns
pop
fst
dec
mov
scas
movs
cmp
test
xchg
iret
cli
jne
les
lods
jbe
jne
stos
add
push
in
xchg
stc
retf
sbb
mov
mov
and
into
lahf
in
outs
and
leave
xchg
mov
dec
add
or
fidivr
mov
sbb
mov
push
int3
and
xchg
or
popa
pop
test
fst
push
pop
xchg
test
inc
shr
ret
mov
out
inc
call
sbb
pop
fcmovu
popa
fistp
into
mov
pop
pusha
sub
xor
jg
dec
call
hlt
pop
or
sbb
clc
cmc
test
retf
adc
add
mov
and
inc
adc
clc
aas
and
xor
adc
add
jmp
xchg
shr
mov
jp
xchg
outs
adc
push
sbb
mov
inc
sbb
sub
repnz
arpl
push
dec
mov
or
nop
jl
fcomp
sbb
ja
hlt
sub
mov
mov
jl
and
dec
cld
ja
mov
xchg
mov
xchg
xchg
cmp
xor
adc
cmps
add
adc
lods
add
adc
mov
mov
outs
loope
cmps
arpl
leave
cmp
popa
push
out
mov
xor
inc
(bad)
out
mov
in
movs
fimul
push
enter
shr
sbb
pop
or
out
shl
pusha
sbb
or
sbb
lea
and
fld
xchg
fdiv
dec
mov
push
(bad)
mov
sub
retf
fwait
mov
das
not
sub
add
xor
aam
out
push
daa
sar
and
mov
pop
mov
jns
inc
pop
cmp
add
out
mov
sbb
mov
jno
retf
jo
adc
add
cmps
sbb
dec
dec
dec
push
adc
mov
push
and
add
daa
daa
jne
cmc
outs
mov
sub
mov
mov
ins
test
sub
cmp
ins
xor
dec
xor
outs
add
ret
add
mov
jb
jmp
dec
retf
pop
cmp
pop
sub
push
icebp
ja
out
mov
dec
cmp
fstp
imul
call
mov
push
nop
mov
adc
(bad)
fwait
jg
imul
ss
and
dec
popf
mov
add
ins
int
jnp
mov
inc
faddp
sbb
retf
pop
(bad)
in
into
sub
inc
out
pop
adc
ins
(bad)
int
jns
cmp
ficomp
lods
push
inc
xchg
cmps
mov
mov
mov
mov
jl
(bad)
sar
dec
jecxz
sbb
pop
jle
xchg
pop
xchg
mov
repnz
test
push
mov
sbb
imul
xor
jp
pop
jl
jmp
and
cwde
dec
adc
fisub
lahf
push
mov
(bad)
cld
jl
out
pop
fcmovnb
(bad)
mov
sbb
xchg
mov
sub
bound
fild
enter
cwde
mov
shl
push
jbe
and
sbb
pop
sub
es
ret
xor
cmp
imul
mov
dec
les
test
mov
sbb
les
dec
add
jl
xchg
fnstsw
pop
fdivp
sbb
pusha
xor
xor
movs
out
scas
ins
in
call
add
jge
in
sub
xchg
push
xchg
popa
push
movs
out
push
jecxz
cmp
or
mov
and
or
pop
cmp
xor
jo
inc
adc
mov
jo
sbb
mov
stos
mov
sub
sbb
push
ins
dec
push
mov
je
mov
inc
adc
movs
pop
mov
xor
call
popa
mov
call
jae
mov
adc
and
ds
ret
cmp
nop
mov
mov
ror
and
cmps
or
and
cmp
cmp
fs
(bad)
in
es
push
add
sub
rol
inc
sbb
or
mov
and
fadd
nop
fwait
mov
mov
cld
aam
movs
xor
clc
popa
fsubr
adc
and
retf
fsub
dec
rcl
pop
adc
adc
cmp
les
xlat
xlat
jle
stc
mov
xchg
xchg
xchg
sbb
outs
cmps
ror
inc
and
push
popa
pusha
hlt
js
fbld
ret
cmp
mov
xor
add
push
inc
je
into
icebp
sbb
fmul
out
(bad)
and
xor
mov
push
fidivr
arpl
(bad)
sbb
push
pop
pop
ins
xchg
xchg
cmp
nop
mov
push
stc
mov
popa
dec
sbb
mov
(bad)
pop
int
test
in
xchg
and
stc
mov
sub
mov
fnsave
mov
or
in
out
jbe
sbb
xor
loope
loope
push
les
adc
push
mov
or
dec
pop
and
pop
clc
ja
int3
mov
xchg
(bad)
icebp
sbb
(bad)
ret
pop
std
data16
xor
int3
outs
imul
retf
icebp
retf
int3
sti
mov
ins
cmp
xor
sbb
push
sbb
ja
xchg
aad
out
jl
jp
sbb
push
movs
das
pop
xchg
in
js
(bad)
inc
add
inc
sub
test
jne
sbb
not
mov
and
ja
jo
adc
mov
xlat
mov
fwait
movs
add
int3
jnp
mov
push
and
adc
mov
or
add
mov
ins
jle
push
in
aad
lods
push
and
push
sub
fnsave
loop
dec
popa
mov
mov
cli
inc
adc
inc
scas
cmp
mov
push
into
pop
mov
push
shr
loop
inc
cs
push
retf
sbb
mov
sar
cmps
sub
pop
push
dec
imul
arpl
xchg
out
loop
rcl
jg
xchg
cmps
lods
mov
icebp
les
push
adc
repnz
dec
stos
fincstp
sbb
sbb
outs
test
out
(bad)
mov
sbb
sub
xchg
out
cmp
add
jl
nop
inc
and
mov
jae
jge
xlat
cmp
jo
mov
cmp
sub
ret
cmps
addr16
sahf
fwait
mov
sbb
or
pop
mov
cdq
xor
cmp
in
push
mov
dec
pop
sahf
cdq
mov
cwde
mov
xor
jnp
call
xchg
jae
or
pushf
call
stos
and
dec
retf
rol
inc
sub
dec
cmps
and
nop
xor
shr
and
adc
pop
fnsave
jne
hlt
or
jo
nop
lods
jb
loop
and
mov
hlt
jmp
clc
fwait
scas
pop
or
add
push
std
mov
jb
jbe
fisubr
ret
imul
lock
jnp
cmc
pop
movs
xor
push
repnz
fs
mov
adc
cmp
scas
out
push
add
pop
lods
loop
sub
push
sbb
jnp
pop
sub
test
rcr
adc
es
lea
adc
imul
cmp
shl
lds
inc
jbe
pop
cld
jg
mov
and
xchg
jb
add
enter
push
jbe
sub
mov
jmp
xchg
ror
or
lahf
xlat
loope
in
fcmovnu
jns
std
int3
mov
cmp
pop
or
fidivr
pop
out
sub
imul
mov
adc
je
shl
aad
cmps
mov
das
adc
xchg
mov
xchg
addr16
(bad)
clc
cmp
inc
mov
outs
sub
add
pop
push
mov
mov
mov
sbb
arpl
or
xchg
loope
or
out
dec
cmp
mov
inc
lahf
jb
into
bnd
ins
or
test
and
outs
add
scas
inc
mov
jne
adc
test
(bad)
adc
xor
mov
sbb
nop
std
(bad)
or
cmc
adc
stc
dec
push
add
pop
fwait
adc
inc
loopne
xchg
test
ret
loopne
inc
out
and
out
mov
loopne
jns
mov
pushf
jle
rcr
push
cmp
inc
repnz
stc
xor
jge
add
push
clc
and
inc
mov
push
out
fisttp
inc
lods
and
xchg
add
mov
push
dec
lods
jp
adc
nop
cld
jns
dec
or
inc
pop
popa
mov
and
data16
cdq
mov
lds
pop
xchg
ror
xor
sar
pop
std
(bad)
mov
sub
xchg
test
nop
data16
or
or
sbb
rcl
fsub
cmps
outs
je
cmp
add
mov
mov
cld
(bad)
mov
mov
shl
inc
dec
lods
fchs
xor
cmps
inc
push
push
repz
test
cli
lahf
and
push
pop
popa
cs
lods
ror
xor
fwait
arpl
push
pusha
inc
fisub
cmp
adc
mov
jo
mov
sub
mov
xchg
jecxz
adc
and
sub
pop
stc
(bad)
fimul
jmp
retf
xor
arpl
shr
add
add
xor
fld
add
xchg
jns
cdq
neg
pop
adc
aam
cmc
ret
push
jne
pushf
xchg
retf
mov
jae
jbe
mov
sbb
and
cmp
or
arpl
add
mov
bound
in
rcr
or
in
xor
pop
dec
movs
xchg
aaa
mov
icebp
sbb
push
jo
jmp
enter
pop
and
(bad)
mov
loope
daa
and
xchg
push
addr16
cli
stos
xor
push
add
pop
cmp
add
in
push
sbb
cld
adc
sbb
xor
push
ret
mov
mov
test
or
dec
fisub
aam
icebp
nop
lods
push
add
popf
push
mov
sahf
xor
mov
push
adc
cld
sti
es
(bad)
fdivp
xor
ss
in
(bad)
sar
pushf
ret
xchg
sbb
pop
sbb
jmp
(bad)
xchg
sbb
cmp
cld
sti
fnstsw
cmc
push
dec
into
icebp
add
call
out
inc
mov
mov
repnz
lods
shl
sub
fmul
inc
rcr
adc
xchg
and
jmp
dec
and
add
sub
(bad)
and
outs
sbb
dec
and
pop
pushf
xor
xchg
test
mov
inc
cli
fcom
je
jg
lahf
mov
pop
nop
outs
cmps
jmp
sbb
ins
rcr
mov
test
or
cmp
xchg
mov
xchg
mov
mov
(bad)
imul
fisttp
ins
les
xor
adc
loop
mov
jno
or
jl
pop
and
retf
push
out
and
lahf
mov
dec
ss
div
leave
sar
scas
jg
pop
jno
cmps
sahf
push
jecxz
or
test
cmp
cmp
out
push
ret
mov
shr
rol
mov
sub
aaa
push
bnd
dec
ret
sbb
addr16
stc
dec
in
daa
or
test
sub
or
mov
add
pop
dec
in
or
cmp
imul
xor
fwait
clc
repz
cmps
rcl
cmp
cmp
pop
push
adc
femms
cwde
jecxz
call
inc
jecxz
mov
cs
ret
xchg
nop
inc
mov
xor
push
push
push
add
push
int3
add
cmp
enter
out
ja
repz
(bad)
cmp
sar
fidivr
cmp
mov
imul
pop
jecxz
loopne
pop
dec
mov
repnz
sbb
and
push
dec
xchg
cmp
push
in
pop
mov
jge
imul
shl
loopne
shl
or
mov
cmp
cmp
sub
jp
jg
or
inc
rol
call
fst
in
mov
push
imul
repnz
ins
adc
add
dec
mov
lods
repnz
inc
ins
xchg
or
push
mov
adc
pop
jae
dec
adc
mov
mov
repnz
stc
fidivr
sub
and
cli
mov
movs
test
jne
arpl
jns
mov
mov
rol
xchg
jle
cmp
jmp
aaa
sbb
adc
mov
cwde
shl
(bad)
xor
aad
xlat
test
shl
pop
add
arpl
les
cld
shl
neg
jmp
push
clc
mov
jge
aas
inc
popf
es
test
pop
(bad)
clc
push
xchg
ficomp
cmp
push
enter
adc
mov
lds
jecxz
mov
inc
cmps
pop
jne
adc
xor
iret
cmp
sbb
rcr
or
outs
pop
out
mov
imul
mov
xchg
add
jp
loope
add
movs
int3
repz
jp
inc
mov
retf
cmc
push
mov
xchg
(bad)
loop
sub
fist
mov
jge
cli
jg
jmp
push
sub
add
and
pop
cld
xor
(bad)
adc
mov
dec
mov
xor
icebp
gs
fnsave
sbb
mov
outs
fwait
out
dec
dec
fwait
outs
push
lahf
test
rep
pusha
xchg
dec
mov
punpcklwd
ins
and
and
lock
mov
mov
cmp
shl
into
add
xchg
js
sub
sahf
or
and
loopne
in
pop
ins
or
std
ret
and
cmp
jg
cmp
push
mov
push
mov
faddp
rol
popf
xchg
adc
sub
aad
int
mov
jnp
call
mov
stos
out
dec
dec
lods
jl
jmp
jmp
(bad)
dec
jmp
out
adc
pop
je
retf
pop
jecxz
cmp
popa
inc
pop
cmp
mov
mov
cmps
(bad)
pop
push
dec
gs
add
repz
aas
cs
mov
rol
or
or
dec
mov
lods
js
jmp
push
cmp
cmp
jle
shr
call
fistp
jbe
int3
xchg
or
ror
push
loopne
hlt
fdivr
outs
push
jo
mov
mov
dec
nop
test
les
cmp
sbb
xlat
mov
or
in
shr
inc
inc
dec
xlat
fild
adc
inc
pushf
lds
sar
pop
into
std
in
add
pusha
cld
lods
(bad)
lds
nop
popf
cmp
pop
jnp
push
lahf
dec
data16
and
adc
loope
lock
das
out
ror
mov
arpl
adc
mov
call
mov
iret
pop
inc
test
out
xchg
pop
or
jge
in
outs
fucomip
mov
out
dec
popf
add
add
mov
loopne
mov
cmp
mov
adc
ds
push
sar
lea
adc
mov
jecxz
jmp
mov
rcr
pop
mov
xchg
sbb
or
add
retf
xchg
xchg
scas
pop
pop
pop
sub
(bad)
std
or
fadd
mov
sub
xor
dec
mul
dec
push
loopne
sub
mov
add
or
sahf
mov
dec
add
xchg
sub
xchg
arpl
cmp
je
fmul
xchg
gs
inc
std
lahf
out
jg
mov
sahf
and
cmp
sar
pop
pop
clc
cmps
pop
jbe
arpl
movs
sbb
and
ins
loop
jge
mov
std
xchg
cmp
(bad)
in
mov
jp
icebp
mov
jno
call
add
loope
daa
adc
call
cmp
test
add
mov
(bad)
pop
dec
xor
jb
test
out
mov
push
push
pusha
(bad)
in
add
mov
mov
movs
gs
mov
bound
sbb
xor
mov
stc
jle
(bad)
and
cmps
into
pop
xchg
jp
sub
pop
mov
shr
jmp
inc
inc
dec
jnp
jg
jns
mov
es
dec
push
cmp
ret
mov
aam
ja
(bad)
cld
call
dec
scas
mov
ror
or
sub
push
imul
int3
fld
and
pop
iret
mov
add
cs
test
cmp
call
jo
inc
std
mov
rcr
mov
push
pop
sub
jne
outs
vpminsw
iret
or
(bad)
cwde
inc
lods
sub
fdiv
mov
cs
(bad)
pusha
pop
and
xor
enter
dec
cmp
idiv
jmp
jmp
add
mov
mov
mov
jb
movs
sbb
pop
sub
sbb
add
sub
dec
sub
out
adc
ror
and
test
pop
aam
(bad)
or
popf
mov
bound
lahf
push
pushf
pop
out
xchg
push
int3
sbb
sbb
fucomp
out
pop
out
push
inc
ins
je
mov
dec
out
or
or
inc
mov
inc
(bad)
lods
scas
popa
out
addr16
sub
clc
sub
in
push
add
xor
xor
mov
push
aaa
je
test
inc
jmp
or
jne
push
sbb
cdq
pop
mov
cmps
push
push
sub
xchg
dec
ret
xchg
mov
sub
pop
loope
xor
mov
inc
jp
call
pusha
and
cmp
int3
pop
dec
mov
mov
jo
lahf
out
jle
icebp
pop
cmp
jb
repz
push
mov
cmp
in
mov
dec
push
test
pop
mov
xor
push
ins
cli
add
adc
mov
sbb
or
push
jge
cmp
adc
push
push
call
xchg
mov
fstp
fcmovnbe
loop
and
test
lock
cld
arpl
xchg
repz
in
mov
cmp
mov
cmp
and
mov
xchg
cmp
imul
nop
mov
jp
mov
popf
ss
arpl
jmp
mov
sub
sub
mov
clc
push
xchg
xchg
mov
imul
jle
jecxz
dec
xor
shl
enter
jno
rol
pop
aaa
and
nop
push
fs
push
push
fucomi
and
jb
inc
and
int3
(bad)
lds
mov
jp
test
jbe
cmps
gs
call
push
pop
shl
add
or
mov
test
shl
cs
sbb
pop
xlat
(bad)
mov
call
push
arpl
cmp
or
retf
mov
jo
or
out
mov
jle
xchg
bound
jp
daa
cmp
add
xor
out
repnz
mov
cmp
mov
aam
adc
adc
inc
fbstp
sbb
xchg
fild
push
aad
test
retf
test
xor
and
loop
aaa
fdivp
or
or
aaa
mov
adc
fistp
nop
fcmovu
ret
push
movs
pop
xchg
mov
outs
fist
jg
mov
mov
pop
and
cmp
bnd
mov
jmp
inc
and
stc
call
sub
dec
or
(bad)
mov
test
jnp
retf
addr16
sbb
je
sbb
lock
pop
or
rol
aaa
jge
mov
in
sbb
cmps
mov
nop
cld
pop
not
in
mov
out
enter
xor
mov
(bad)
jb
xchg
out
mov
mov
xchg
stos
mov
or
sub
dec
retf
call
ret
scas
fwait
inc
inc
daa
in
mov
mov
xchg
pop
loopne
js
nop
and
mov
das
dec
icebp
inc
sbb
cmp
push
loopne
(bad)
dec
shl
outs
pop
inc
and
lahf
clc
and
push
popa
movs
lock
out
test
mov
pop
cmps
fisubr
adc
mov
jo
retf
and
mov
sbb
sub
mov
enter
inc
push
in
pop
mov
outs
xor
mov
xchg
movs
mov
inc
fnstenv
into
stc
dec
adc
push
cmps
jnp
clc
mov
mov
lock
push
mov
retf
adc
hlt
das
mov
mov
dec
dec
nop
popa
pop
clc
inc
push
dec
(bad)
jae
mov
pusha
call
es
xchg
push
out
inc
cmp
jge
(bad)
(bad)
and
movs
or
add
push
call
call
aas
xor
xor
aam
les
sub
jle
pop
jne
scas
retf
bt
adc
and
lock
test
iret
inc
pusha
adc
out
jle
mov
cli
jno
lods
test
shr
mov
jge
mov
cdq
and
ds
idiv
out
ins
push
push
fisub
int
xor
mov
mov
gs
mov
test
std
fidivr
pop
pop
add
inc
pop
cli
imul
repnz
mov
das
lock
ret
aad
push
fsubr
pop
mov
retf
mov
add
pop
mov
imul
call
int
imul
sbb
fmulp
and
cwde
and
cmp
or
and
sub
lods
scas
fisub
sti
adc
jg
xor
mov
repnz
xchg
add
cmp
(bad)
fwait
sbb
imul
push
in
mov
jmp
fnstenv
lea
enter
fistp
xor
in
push
(bad)
into
fisttp
mov
cmp
lds
lahf
test
repnz
stc
or
call
mov
and
and
or
jge
cmp
sahf
lahf
cli
fsubr
jno
adc
mov
xlat
jne
jge
xchg
call
inc
or
mov
sbb
test
shl
not
pop
sbb
mov
aam
sbb
mov
test
lods
loopne
add
xchg
ret
ror
mov
jg
gs
sub
adc
add
cmp
or
add
sti
retf
pop
clc
call
int
(bad)
ins
stos
xor
mov
enter
push
cli
cmp
and
les
fnstcw
mov
popa
das
int
mov
inc
jl
enter
inc
xlat
xor
push
out
add
jno
sbb
repnz
lea
cmp
lahf
xor
xchg
movs
aaa
push
pop
(bad)
add
adc
xchg
sti
cs
std
xchg
sahf
cli
jo
inc
les
cmp
inc
and
pop
aad
stos
push
add
data16
mov
and
call
out
jnp
xor
jnp
xchg
mov
fimul
jl
cmp
sbb
fisttp
fcomp
sti
lahf
push
dec
(bad)
mov
add
jmp
inc
push
(bad)
jnp
mov
lea
outs
mov
rol
mov
xor
sti
xchg
div
adc
clc
jae
mov
or
repnz
stos
xor
and
out
ret
or
(bad)
repnz
inc
repz
xchg
lds
and
jno
aad
stos
fnstcw
mov
packssdw
cmp
and
pop
push
dec
sahf
jp
fwait
and
xchg
sbb
dec
popa
popa
pusha
test
fsub
mov
cwde
push
push
je
into
pop
scas
pop
aad
push
out
aas
fnstsw
push
ret
ja
mov
cmps
outs
and
add
mov
dec
jp
mov
pushf
pop
mov
jl
pop
sub
leave
xor
(bad)
xor
pop
addr16
and
sbb
inc
jmp
cwde
imul
inc
mov
loop
jnp
mov
test
ret
fs
ins
ins
scas
cmp
cmp
mov
stos
mov
je
lods
add
mov
(bad)
repz
dec
dec
data16
lea
imul
and
cwde
mov
ins
popf
push
pop
inc
pop
push
in
xchg
lods
jle
(bad)
mov
cmp
inc
pop
xor
mov
ins
cmp
jnp
cs
sub
movs
mov
js
jns
push
mov
jbe
clc
aad
adc
je
fadd
add
xchg
pushf
call
dec
loop
out
je
jno
mov
mov
jns
push
mov
mov
mov
in
ret
pusha
push
fwait
xchg
jnp
sub
inc
int3
iret
cs
aas
sbb
inc
call
aaa
rcl
push
push
rol
fnstsw
lahf
cmps
mov
xor
fwait
push
fstp
mov
mov
cmc
push
add
inc
push
mov
nop
neg
mov
stos
push
mov
pop
(bad)
mov
data16
int3
aaa
rol
int
lods
jp
(bad)
pop
loop
nop
pop
mov
xchg
ror
ins
jns
mov
je
xchg
dec
repz
test
xchg
jecxz
mov
imul
movs
and
push
cmc
cmps
ins
push
lahf
gs
pop
in
cmps
jl
add
inc
mov
out
mov
sub
inc
xor
mov
rol
aaa
mov
mov
test
sbb
mov
cmps
jo
pop
mov
(bad)
sbb
int3
mov
sbb
sbb
nop
sahf
in
bound
pop
or
add
stos
push
out
xchg
ins
scas
in
in
(bad)
iret
dec
(bad)
cli
or
add
cmp
mov
or
out
(bad)
out
fptan
lahf
pop
aad
out
rcr
mov
push
push
outs
xlat
(bad)
ins
xchg
and
dec
cmc
pop
out
test
jo
dec
imul
out
cmps
inc
xchg
jns
mov
and
pop
cs
or
pushf
loopne
pop
sbb
int3
aam
mov
(bad)
xchg
dec
xor
dec
out
jnp
movs
outs
adc
sub
pop
jo
data16
dec
push
call
pop
inc
jl
out
cli
dec
test
(bad)
mov
or
sbb
rcr
or
add
lea
enter
int
inc
fsub
ins
aad
dec
inc
aad
mov
xchg
cmps
or
or
outs
cwde
pop
ja
je
pop
cmp
imul
mov
xchg
and
repnz
es
mov
ins
jge
xchg
jae
jmp
jae
jp
(bad)
std
or
pusha
ficomp
inc
fs
dec
inc
ret
stos
imul
dec
and
adc
lds
inc
mov
fmulp
out
cmps
sub
mov
dec
and
fwait
dec
and
and
xchg
jb
and
daa
inc
or
mov
lods
sub
outs
push
lds
adc
shl
mov
push
mov
sbb
stos
xchg
cld
cmp
outs
lods
jb
jb
enter
ins
cmps
cmp
int3
rol
pop
loop
popf
pop
sti
dec
adc
scas
pop
lods
jb
icebp
mov
outs
adc
dec
js
add
div
sub
sub
adc
push
mov
int
pop
sbb
pop
mov
popf
xor
(bad)
js
ins
scas
push
stos
pop
pop
out
jb
pop
daa
dec
mov
cli
out
pushf
ins
sbb
ds
mov
jmp
sub
repz
inc
shl
dec
or
or
popf
adc
lods
and
and
mov
out
cli
inc
gs
lods
push
mov
int3
push
popf
stos
sbb
xor
adc
adc
shl
std
cld
mov
xchg
push
(bad)
test
pop
mov
and
cmp
popf
stos
add
mov
aad
mov
mov
(bad)
retf
sbb
mov
cmp
imul
pop
push
repz
sub
adc
mov
les
rcr
jne
sbb
std
or
rcr
xchg
push
xchg
jg
adc
and
popf
mov
pop
pushf
dec
shr
stos
(bad)
loopne
divps
mov
push
fidivr
sub
stos
adc
mov
sahf
cmp
mov
sar
fsub
sub
mov
lds
xchg
sbb
sbb
repz
cmp
mov
rol
lahf
inc
leave
add
sub
xlat
push
add
movs
jge
in
sbb
inc
fstp
in
hlt
repnz
and
scas
adc
push
xchg
push
dec
(bad)
clc
xor
test
pop
rcr
js
rcl
jo
ja
lods
fidivr
sub
mov
push
aam
fadd
fdiv
(bad)
out
and
or
add
push
pop
push
test
mov
cmp
push
jo
pop
test
inc
mov
mov
cmp
jne
sub
gs
imul
mov
fcmovb
pop
cmp
and
pop
push
enter
push
pop
xchg
mov
popa
daa
jg
into
and
jne
pop
cmp
and
mov
cmp
popa
mov
or
push
adc
dec
xchg
div
add
mov
mov
xlat
fwait
gs
es
dec
inc
adc
pop
or
pop
popf
loop
pop
xor
cmp
mov
mov
push
push
xor
shl
dec
fnstsw
inc
lds
mov
js
jns
es
lods
call
arpl
scas
push
mov
xchg
retf
xchg
or
and
icebp
jmp
push
mov
mov
retf
out
add
rcr
add
inc
inc
das
fxch
into
mov
ins
arpl
cmps
pop
ja
ins
xchg
repz
ins
dec
mov
(bad)
sbb
jl
jnp
(bad)
out
inc
mov
sbb
mov
xor
xchg
fwait
dec
out
mov
pop
mov
(bad)
xchg
fwait
test
push
mov
and
fcom
mov
push
mov
cwde
inc
xchg
and
mov
inc
xor
mov
ins
and
sub
ja
jmp
jl
stc
cmps
aad
inc
hlt
and
add
test
xlat
pusha
and
sbb
sub
lods
cmp
xor
cmc
(bad)
hlt
stos
not
ss
les
add
iret
ins
xor
add
jmp
xchg
mov
push
je
je
push
dec
repnz
sub
and
jo
jle
and
leave
mov
dec
mov
mov
mov
dec
je
and
mov
add
nop
(bad)
push
sub
ret
and
adc
push
mov
aad
mov
js
rol
ss
sbb
aam
into
mov
fwait
cmp
(bad)
fucomi
adc
cmp
push
std
pop
bound
xchg
mov
pusha
mov
jb
adc
xchg
xchg
call
fxch
pop
cmp
cwde
and
nop
lahf
imul
or
sti
mov
mov
ins
stos
sahf
outs
scas
fdivrp
xor
pop
push
in
lods
sbb
adc
push
dec
int
in
out
cdq
sahf
push
mov
jg
or
push
jg
mov
lods
ds
inc
cmc
fnstsw
aaa
into
jp
and
add
retf
int3
add
inc
push
mov
addr16
or
in
jecxz
mov
add
lea
mov
jg
mov
call
add
xor
jecxz
or
bound
or
jp
idiv
pop
xchg
sahf
fisttp
push
mov
enter
push
xchg
ss
pop
loopne
jle
ds
xchg
mov
add
xor
(bad)
out
nop
lods
sar
inc
jecxz
mov
(bad)
lock
stos
or
scas
mov
push
(bad)
out
and
scas
jae
adc
clc
retf
outs
mov
cmps
push
inc
je
fcom
xchg
jmp
cld
xor
out
ds
sar
push
cli
inc
jne
jle
fdivr
test
repnz
not
pop
rcl
sub
lea
dec
jg
lahf
mov
cmp
push
jg
or
mov
xor
jle
sti
xor
add
mov
mov
test
jl
mov
fisubr
xlat
stos
hlt
cmc
push
mov
dec
ret
push
clc
sub
loopne
add
(bad)
cdq
rcl
or
dec
xchg
adc
(bad)
int
cwde
sbb
addr16
jae
test
cdq
aad
mov
xchg
sub
inc
add
or
das
adc
aaa
fadd
leave
sbb
test
jle
shl
xchg
sub
xor
fbstp
test
sub
icebp
fimul
adc
add
ins
daa
dec
jo
into
xlat
in
ds
mov
jmp
ret
or
leave
ins
pusha
pop
push
cmps
or
(bad)
jo
test
cmp
push
(bad)
fcom
adc
sbb
repz
jae
mov
clc
pop
dec
inc
mov
pop
inc
call
sahf
inc
movs
dec
pop
mov
cwde
mov
cmp
(bad)
xchg
dec
and
popa
xor
or
cwde
and
iret
pusha
mov
les
stc
(bad)
mov
movs
adc
mov
push
(bad)
sbb
or
retf
daa
ss
call
xchg
jp
out
mov
inc
xchg
xchg
ja
sbb
loop
ffreep
mov
adc
or
xlat
jnp
jle
cmp
adc
mov
ret
lods
add
aad
clc
(bad)
dec
or
jl
cmp
fsubr
pop
in
cmp
ja
add
mov
iret
dec
push
jo
fild
pop
dec
into
mov
jmp
xchg
sbb
popf
mov
jb
or
dec
mov
nop
jns
push
jo
fdivr
hlt
mov
out
(bad)
aam
call
sub
enter
cwde
in
je
xchg
std
sbb
inc
dec
pop
stos
test
add
in
jno
xchg
cmc
daa
pop
sbb
int3
cmp
mov
mov
repz
sbb
and
or
std
jp
fdivrp
stos
inc
cmp
cmp
dec
imul
pop
xor
pop
or
mov
lea
add
xchg
push
xor
add
push
inc
dec
pop
dec
pop
push
fdivr
xor
mov
inc
fnstenv
or
dec
call
cmp
inc
xor
mov
add
aam
push
push
push
aas
xchg
sbb
stos
push
adc
xchg
lods
push
pop
dec
mov
push
lea
popa
cdq
gs
neg
xchg
enter
shl
push
int3
cmps
xchg
mov
add
pop
in
mov
push
xchg
out
mov
pop
outs
mov
rcl
or
aam
mov
icebp
pop
imul
push
adc
jg
test
or
jecxz
inc
add
cs
lock
in
xchg
or
popa
sub
(bad)
pusha
jns
sub
sahf
add
jno
mov
cmc
pop
cmp
sbb
mov
sub
sub
fadd
xchg
outs
mov
mov
mul
mov
test
add
rcr
or
cmps
leave
pop
inc
jl
popf
or
mov
or
aam
leave
sbb
shl
push
neg
and
pop
ins
mov
dec
movs
dec
fdiv
ds
cmp
xor
outs
inc
push
pop
sbb
mov
mov
pop
or
sub
sbb
lds
lock
lds
bound
add
cli
or
btr
xor
dec
in
mov
cmc
loope
cmps
(bad)
out
mov
or
aaa
(bad)
xor
es
dec
mov
xchg
mov
push
ficom
(bad)
outs
iret
xchg
mov
or
stos
aam
addr16
repnz
std
cmp
mov
out
and
sub
dec
mov
or
mov
shl
jle
div
repz
pop
mov
dec
jnp
mov
call
ss
jg
jbe
add
fld
xchg
push
push
sbb
cmp
repz
jmp
sub
punpckhdq
cmp
out
cwde
sbb
out
push
ret
sbb
lods
jne
sar
popf
stos
popa
push
adc
test
dec
cmps
repnz
and
scas
dec
sbb
in
jo
push
daa
inc
popf
mov
jmp
dec
repnz
jbe
mov
leave
sub
lock
adc
addr16
jae
xchg
cmp
dec
adc
stos
cmp
test
sbb
xor
imul
(bad)
dec
call
sub
pop
mov
push
xchg
(bad)
icebp
cmp
mov
sub
adc
in
sbb
shr
aad
not
adc
sahf
shr
addr16
inc
add
test
mov
xchg
(bad)
push
jae
call
ins
push
add
cmps
mov
loop
mov
cld
jo
jmp
dec
mov
sub
sub
pop
push
pop
pop
pop
lods
add
jo
jmp
pop
xchg
xchg
xchg
fucom
dec
dec
xchg
retf
cmp
mov
icebp
pushf
cmp
mov
in
shl
call
push
repnz
outs
inc
pop
xor
mov
inc
je
cwde
dec
out
add
gs
xchg
arpl
xchg
jne
xor
and
fsub
push
std
daa
(bad)
cmp
mov
jno
(bad)
mov
xor
sub
jle
cdq
(bad)
js
push
jge
repz
mov
inc
popf
(bad)
push
jae
add
ret
sahf
sbb
mov
cmc
es
xor
loop
daa
jo
mov
mov
fcomp
fist
cdq
test
mov
fisttp
cmps
inc
ds
adc
es
shr
xchg
ret
dec
cmps
movs
mov
scas
mov
mov
jmp
inc
repnz
int
and
in
sub
inc
push
mov
dec
dec
or
xchg
xchg
popf
jg
daa
mov
(bad)
iret
add
cdq
inc
shl
cwde
pop
adc
add
sub
jb
mov
mov
inc
or
pop
stos
sbb
sub
retf
in
bnd
pop
push
push
lea
push
aam
shl
cmps
jmp
cmps
or
fs
cmp
push
cmp
mov
xchg
sub
sar
movs
retf
cwde
(bad)
fsubrp
sbb
push
push
std
fs
test
push
iret
cmps
adc
mov
pushf
pop
xchg
(bad)
fcmovnbe
xchg
jbe
ret
mov
add
pop
inc
cmp
test
mov
jp
bound
call
repz
cmp
test
lds
es
movs
aam
jmp
aad
out
push
jo
fstp
repnz
jae
dec
mov
xchg
mov
fsub
push
retf
mov
mov
push
arpl
lods
and
dec
xchg
add
jnp
add
fisub
jo
xchg
js
imul
jbe
fs
retf
lea
sub
imul
mov
in
ds
loop
sar
in
sar
mov
ret
pop
(bad)
and
sbb
nop
pusha
xchg
add
xlat
jbe
cmc
and
cmp
idiv
xchg
enter
xchg
fs
dec
inc
pop
popa
push
push
fwait
gs
cmp
jbe
push
shr
inc
aad
gs
mov
cmp
mov
xchg
add
pop
mov
retf
sbb
push
shr
adc
scas
xchg
mov
popa
fcmovnu
mov
jno
shr
cmps
inc
cld
jle
push
test
in
or
adc
mov
adc
xor
int3
mov
lock
jg
cmp
popa
gs
sar
int3
int3
ss
mov
test
push
xchg
cli
push
repnz
jmp
ja
xchg
outs
jbe
(bad)
nop
dec
pop
add
(bad)
sub
jb
add
fs
hlt
jns
repz
and
xchg
adc
std
inc
inc
adc
xlat
push
sbb
push
push
and
xchg
pop
es
jmp
gs
mov
add
in
loopne
rol
or
xchg
mov
push
push
push
out
cmp
xor
fcomp
dec
daa
adc
mov
rol
push
imul
in
ret
rcl
inc
xor
adc
mov
cwde
cmp
and
dec
push
cwde
dec
xor
push
scas
push
ins
cmp
gs
push
mov
ret
mov
cwde
aam
sti
mov
leave
in
fsub
sbb
jp
test
(bad)
out
xchg
mov
adc
js
ds
cmps
pop
jg
xor
out
fld
out
retf
cmp
cld
mov
xor
mov
mov
dec
out
aam
add
ins
add
icebp
lods
mov
hlt
scas
(bad)
lock
pop
push
ret
push
and
cld
pop
(bad)
out
xchg
popa
jns
mov
inc
xchg
pop
popf
add
mov
out
sub
rol
arpl
and
loopne
mov
(bad)
iret
in
mov
mov
or
and
mov
outs
loop
pop
popf
mov
push
nop
loopne
bswap
and
cmp
jns
mov
push
clc
xchg
xchg
pushf
(bad)
(bad)
sahf
out
sahf
jnp
test
ret
inc
cs
out
xchg
sub
fsub
imul
retf
aaa
fbstp
push
jmp
or
pop
xchg
test
movs
popf
ret
and
addr16
popf
push
test
stos
stos
stos
inc
and
int
ja
icebp
add
cmp
and
mov
cmp
out
xchg
outs
cmp
jmp
shr
enter
mov
dec
and
add
loope
cmp
nop
jp
push
pop
aam
jg
cdq
push
add
adc
fs
rol
scas
rol
push
cld
pop
sti
xor
pop
mov
mov
ffree
test
push
retf
call
push
push
xor
push
sub
mov
sbb
test
mov
cwde
or
fwait
ins
scas
je
retf
push
dec
cmps
xor
mov
ins
aam
xchg
repnz
call
clc
mov
daa
jmp
push
pop
pop
push
imul
call
retf
jno
ret
mov
call
es
pop
or
shr
std
out
popa
cmp
cld
pop
mov
ror
outs
jo
pop
fistp
adc
psrad
mov
adc
setne
mov
inc
dec
xchg
jp
jge
inc
sub
or
outs
pop
dec
mov
les
lea
push
push
inc
(bad)
es
rcr
bnd
cld
jge
mov
sbb
or
call
fisttp
push
mov
jge
in
(bad)
mov
mov
inc
pop
out
idiv
pop
xor
jle
aaa
adc
and
sub
int
cdq
test
fldcw
xchg
test
repz
pop
mov
cmc
inc
mov
sub
iret
sti
pop
ror
or
adc
shr
lds
data16
jb
mov
popf
jo
push
repnz
and
xchg
jns
sub
xchg
cmc
into
dec
iret
xor
pop
outs
test
lds
shl
adc
aas
push
or
jge
add
push
ror
aaa
fnsave
and
shr
jmp
loop
push
sti
pop
ss
adc
cmp
retf
ins
jns
sti
mov
push
daa
sar
push
dec
in
push
or
cmp
mov
and
mov
jno
mov
pop
es
mov
add
pop
lock
test
xchg
data16
dec
jnp
(bad)
(bad)
repz
cmp
dec
sub
xor
xchg
xor
test
jno
push
rol
dec
pusha
in
cld
jo
repz
stos
aam
sar
mov
sti
test
sti
sub
xor
sbb
inc
aad
sub
leave
push
push
jg
mov
mov
adc
add
xchg
lea
aas
scas
test
add
test
call
movs
push
pop
ror
test
retf
mov
push
out
imul
icebp
ja
lods
or
jmp
jecxz
mov
cbw
push
inc
adc
daa
cdq
addr16
xchg
(bad)
lock
inc
pop
pop
lock
sub
gs
(bad)
ss
call
lods
xor
stc
mov
stos
pop
repz
sub
jb
in
and
xor
cmc
jmp
mov
mov
fwait
cwde
and
fst
dec
loop
jb
les
add
mov
mov
adc
retf
cwde
ins
ja
jle
cmc
adc
jb
push
popf
xor
mov
or
and
sbb
imul
pushf
push
mov
fidiv
fist
rcr
in
retf
in
mov
outs
jo
mov
add
ins
xchg
cmp
in
cmp
retf
iret
ds
mov
adc
test
pop
adc
dec
ins
mov
nop
xchg
push
popf
sub
add
mov
retf
clc
or
jle
push
pop
ror
mov
hlt
ins
addr16
int3
jp
int3
xlat
stos
hlt
pusha
in
cli
inc
out
ss
(bad)
out
sbb
cmps
fnstcw
stos
hlt
push
loopne
fnstenv
cs
jne
stc
pop
std
or
push
cwde
call
test
pop
adc
pop
data16
sub
pusha
adc
adc
sbb
mov
xchg
xchg
xchg
imul
xor
movs
cmc
xor
sbb
test
mov
xor
mov
jae
add
sub
rcr
test
jns
popf
sub
nop
pop
jg
cmp
sub
call
jnp
mov
hlt
dec
int3
cwde
outs
aad
ret
jb
cmp
out
push
add
in
(bad)
imul
inc
loop
or
lock
ins
sub
sub
in
fnstenv
leave
xor
cld
addr16
out
sbb
aas
mov
dec
mov
mov
rcr
jle
lahf
pop
sub
add
mov
xchg
in
lods
imul
pop
mov
mov
xchg
lods
mov
les
xor
xchg
int
pop
packssdw
pop
int3
mov
add
rcr
push
adc
sahf
mov
jnp
sbb
es
sub
sbb
or
and
shl
(bad)
pop
inc
pusha
sahf
mov
adc
push
aad
sbb
rcr
dec
das
aas
sub
adc
push
mov
aad
scas
jge
adc
xchg
lods
out
or
or
outs
(bad)
or
pop
mov
cmp
pop
loope
and
pop
cld
cmp
je
sbb
addr16
fs
inc
(bad)
js
mov
pop
cmp
xchg
pop
and
enter
cli
inc
xchg
pop
pop
aam
int3
aad
inc
mov
cmp
rcr
aad
dec
and
xor
fs
call
(bad)
pop
mul
inc
icebp
xchg
mov
add
cmp
push
cli
outs
sbb
add
or
outs
mov
aam
or
mov
mov
push
scas
sbb
inc
and
jo
jns
mov
sahf
pop
phsubd
xor
jns
pop
ss
xor
fs
cmc
test
cld
add
jmp
xor
jg
jnp
and
shl
addr16
push
mov
inc
pop
aas
lods
xchg
or
and
pop
and
pop
ins
icebp
push
mov
push
es
inc
out
jb
xlat
sbb
inc
push
ret
push
mov
(bad)
hlt
ror
adc
fimul
jb
sub
std
in
gs
jbe
pop
push
sti
aam
dec
adc
or
or
jl
push
fwait
mov
call
push
xchg
sete
cmovno
push
push
std
cwde
add
ins
lds
fimul
sahf
or
retf
mov
mov
les
fisubr
mov
add
clc
fiadd
out
int
xchg
sub
push
inc
cwde
sub
cmps
dec
inc
(bad)
push
or
sub
add
out
leave
inc
cmp
das
or
inc
pop
push
mov
cwde
int
aam
jg
adc
dec
xor
dec
inc
sbb
outs
out
and
outs
adc
pop
js
xchg
test
mov
jae
mov
and
pop
ss
mov
(bad)
xchg
repnz
popa
push
or
(bad)
les
fcomp
ss
and
cmp
push
mov
mov
int3
mov
popa
ins
data16
mov
addr16
cmp
jmp
inc
jge
out
pop
test
or
mov
add
lods
adc
mov
push
pop
not
jg
cld
mov
dec
adc
pcmpgtd
adc
cmp
push
(bad)
sub
shl
fcom
mov
and
test
or
and
sbb
mov
in
xor
cmp
mov
hlt
ficom
sar
arpl
sub
aas
punpcklwd
xchg
xchg
shr
cmp
imul
and
cmovb
gs
sbb
mov
add
mov
popf
bound
push
add
jmp
retf
adc
push
mov
das
inc
fdivr
sub
sbb
xor
int
scas
pop
mov
ret
or
dec
rol
fst
hlt
dec
mov
std
jnp
sahf
cli
jno
mov
mov
dec
ins
lock
sbb
xchg
dec
aad
sub
mov
cmp
xlat
pop
add
mov
cmp
push
(bad)
cmps
jmp
shl
cld
sbb
xchg
shr
sbb
mov
xor
pop
mov
pop
lea
cwde
loope
mov
cmp
lahf
inc
pushf
jle
sbb
mov
mov
mov
loop
mov
std
(bad)
mov
mov
setnp
jle
or
dec
mov
fs
cmc
sar
mov
stc
xor
pop
std
jl
rcl
inc
cmp
icebp
repz
mov
sub
ss
(bad)
pop
movs
push
inc
cmp
cmps
(bad)
cmp
adc
push
enter
mov
mov
(bad)
popf
std
enter
hlt
ret
shl
pop
bnd
test
loop
out
jb
push
(bad)
sub
daa
cwde
dec
dec
mov
btc
push
push
jb
sahf
enter
mov
mul
adc
lods
mov
push
jp
shl
jmp
test
js
pop
dec
sahf
jmp
add
cmp
inc
adc
ja
cmp
(bad)
stos
xchg
lock
aad
sahf
sbb
aam
(bad)
jp
adc
or
push
cmp
scas
les
loopne
adc
sahf
adc
jb
mov
test
jl
aaa
jmp
adc
aas
adc
sahf
and
arpl
cmp
xlat
sar
hlt
into
xor
add
xchg
cmps
retf
cmc
dec
mov
jmp
out
push
jge
push
out
test
push
xor
shl
cmp
in
ja
xchg
push
mov
lea
(bad)
xor
fwait
aaa
xor
mov
jne
xor
jb
adc
out
cmp
nop
sbb
test
sub
xor
(bad)
js
out
xchg
ds
imul
in
clc
inc
mov
mov
ret
iret
sub
cli
ror
loope
aad
sub
loopne
jecxz
cmp
mov
jmp
dec
push
and
lock
sahf
add
fisttp
jnp
xchg
out
aaa
fs
not
je
jo
sbb
adc
jae
inc
pop
jp
lods
clc
fisub
cld
mov
xchg
xchg
xchg
mul
push
bound
jp
nop
shl
or
cli
pop
dec
push
sbb
pop
sub
xchg
es
inc
lea
leave
or
jl
and
cli
mov
lods
cmp
or
sbb
popf
pop
inc
add
cmps
ds
fucom
icebp
sbb
pop
jmp
retf
mov
je
(bad)
rcr
fist
daa
cmp
adc
iret
cmp
ret
sbb
push
pop
fdivr
dec
fsubr
add
sub
dec
jbe
adc
pop
das
adc
jl
or
hlt
cli
xchg
push
jmp
mov
arpl
add
fwait
pop
repnz
in
mov
test
xlat
mov
jmp
aam
mov
or
dec
in
cdq
adc
cmc
test
popa
in
mov
inc
cmp
ja
sbb
adc
pop
add
jnp
call
popf
sahf
or
mov
mov
and
fs
mov
gs
repnz
push
es
sbb
enter
jo
add
aad
mov
ins
jl
xchg
pop
into
les
push
mov
test
pop
push
nop
movs
fsub
push
in
pop
stos
ss
loopne
leave
fst
push
jbe
cmps
xor
into
nop
sbb
popf
loopne
pop
or
adc
cmc
fsub
mov
clc
cmc
ins
mov
stos
mov
scas
cmps
mov
outs
call
shl
dec
cld
mov
in
fsubr
std
neg
adc
mov
and
call
adc
jmp
test
push
xlat
and
popa
mov
jle
jle
xchg
scas
fmul
inc
adc
xor
in
cwde
sub
nop
and
je
repnz
inc
mov
lahf
fcom
jp
dec
hlt
dec
arpl
pop
pop
push
lods
mov
mov
push
stos
in
arpl
fstp
and
xor
push
mov
push
dec
xchg
stos
add
push
push
pop
inc
es
test
xor
bound
cwde
enter
aas
rol
outs
jno
sbb
push
mov
xchg
xlat
or
push
(bad)
and
ins
inc
mov
je
sbb
add
or
(bad)
mov
sbb
call
shl
call
es
mov
lods
mov
sub
rcr
imul
pop
sub
test
arpl
and
push
scas
sbb
ss
add
jecxz
dec
loop
call
and
jno
push
pop
xchg
mov
cmp
inc
mov
lock
fucomp
add
iret
mov
pop
sub
outs
mov
jmp
icebp
into
icebp
jae
imul
dec
adc
xor
mov
xor
out
cmp
test
xlat
ins
dec
outs
inc
into
adc
inc
cmp
mov
xchg
push
xor
push
(bad)
and
sub
inc
sub
sub
cmp
out
pop
lds
push
dec
cmp
jle
xlat
sbb
pop
push
loope
sbb
popa
add
fidiv
ret
mov
mov
dec
call
int3
and
mov
retf
push
pop
and
bound
sbb
stos
and
fild
stc
shl
and
shl
push
dec
xchg
mov
push
aam
mov
in
aas
loopne
sub
mov
xor
cmp
shr
aaa
jno
mov
cld
pop
out
jmp
aas
outs
sub
and
repz
inc
mov
icebp
lock
or
imul
sbb
jns
pop
out
mov
sbb
pop
pop
lods
mov
js
nop
push
push
scas
xchg
sti
int3
jmp
xor
pusha
enter
test
xor
cmp
or
or
dec
cmp
cmp
shl
out
in
(bad)
mov
int3
(bad)
sahf
je
mov
dec
mov
add
outs
cdq
jno
inc
(bad)
pop
mov
adc
xchg
not
xor
and
aaa
mov
out
out
mov
mov
mov
mov
frstor
add
ret
enter
cs
pop
push
mov
pop
in
test
stc
and
ret
(bad)
dec
sub
adc
addr16
test
mov
int3
pop
and
movs
and
pop
ret
mov
loope
adc
icebp
jbe
das
bound
test
pop
gs
ss
cmp
mov
jnp
mov
nop
xlat
xor
mov
jp
inc
(bad)
jmp
mov
loopne
cmp
mov
xor
jae
mov
(bad)
xchg
repz
sub
sbb
pop
clc
test
dec
push
stc
push
ss
mov
and
or
lahf
mov
nop
popf
mov
icebp
lods
mov
out
fucomp
xor
push
adc
popf
adc
(bad)
fld
jl
(bad)
ror
or
dec
pop
imul
call
ja
mov
or
push
mov
test
ss
inc
pop
call
popf
(bad)
daa
test
xchg
mov
jb
fs
mov
xor
push
sti
sub
add
pop
push
cmp
cli
mov
ret
mov
sbb
rcl
cmc
(bad)
ficomp
xchg
imul
icebp
cs
pop
cmp
pop
(bad)
add
jns
and
and
shr
clc
rcl
ds
loope
out
ja
not
scas
and
jle
daa
push
jmp
aas
das
les
(bad)
sbb
pushw
shr
xor
aaa
ror
jmp
fsub
movs
aaa
mov
jl
dec
mov
stos
bound
add
inc
js
repz
fisttp
and
add
fwait
std
dec
xchg
xchg
mov
pop
add
shl
jbe
mov
loopne
inc
in
mov
mov
out
stos
mov
xor
ss
sar
test
dec
sbb
test
movs
js
jmp
lods
addr16
xchg
dec
stos
test
or
pop
or
xor
rol
xchg
outs
cmp
jnp
and
pop
mov
or
lock
fcom
(bad)
out
icebp
and
movs
mov
xchg
outs
sbb
or
mov
mov
fnstsw
jmp
fisubr
int
jmp
sub
sub
pushf
cmps
jge
xor
jo
in
fldcw
lds
add
in
pop
cmps
retf
fldl2e
pop
push
xchg
call
sub
xchg
and
aam
jae
xor
fisub
data16
cmp
mov
js
sub
(bad)
outs
in
adc
imul
and
out
sub
inc
xchg
call
cmp
ins
lea
mov
mov
out
ret
cmp
out
and
sbb
rcl
shr
add
push
lds
push
or
jo
lahf
mov
cmp
daa
xlat
or
pop
data16
loopne
std
push
imul
dec
popf
ja
push
pop
cs
inc
(bad)
aaa
mov
adc
cmp
stos
inc
push
pop
mov
and
pushf
(bad)
dec
cmp
and
mov
mov
out
je
das
sbb
cs
mov
pop
(bad)
sar
jmp
stc
test
es
enter
pop
loope
inc
(bad)
mov
adc
ins
cmp
sbb
sar
call
jnp
fwait
push
inc
test
sbb
retf
dec
(bad)
sbb
push
daa
inc
add
push
push
jns
jns
cmc
in
lea
sub
int3
sbb
lea
es
jge
pop
call
bound
sub
sub
fdiv
call
push
cmp
sub
xor
hlt
pop
aam
sub
sbb
lods
mov
fist
sbb
pop
outs
daa
(bad)
test
mov
rcl
and
popa
or
loop
sbb
mov
push
(bad)
loopne
push
das
cmp
xor
cdq
pusha
xor
lahf
fld
dec
in
adc
jb
push
iret
mov
xor
and
and
aad
inc
jno
ror
fwait
sar
cmp
popa
lahf
fisttp
push
scas
gs
jmp
mov
push
scas
xor
icebp
push
aad
sub
(bad)
test
xor
mov
sti
and
jmp
inc
push
cmp
jmp
push
and
add
jnp
or
scas
inc
int
sub
cli
fld
push
icebp
jg
jge
or
das
jle
(bad)
gs
js
outs
push
cld
(bad)
inc
sbb
ds
xchg
cmps
sbb
test
cmps
ror
dec
mov
inc
loop
out
pop
lea
mov
or
data16
mov
(bad)
fs
in
jo
cmc
pop
test
xor
adc
jae
cwde
pop
jb
lahf
cmps
icebp
push
mov
sbb
das
or
dec
fs
stos
fwait
or
push
xchg
fsubr
mov
rcr
jbe
jle
pop
lods
push
add
movs
push
ret
jge
push
std
mov
pop
mov
jne
shr
data16
mov
mov
jl
shl
cmc
adc
(bad)
mov
push
xor
sbb
sub
xor
pop
mov
cmc
sub
dec
and
fwait
cli
sbb
jle
stos
push
sub
xor
fidivr
xor
scas
sar
shr
xlat
in
cmc
out
xlat
out
adc
lahf
sbb
and
jne
dec
in
stos
aad
sub
cmp
fld
test
and
movs
xchg
xchg
scas
rol
aad
mov
scas
cdq
stc
jecxz
pusha
popf
cmp
inc
inc
aas
clc
add
(bad)
cmps
in
and
push
ret
std
aaa
(bad)
pop
shl
std
cmp
and
xor
jne
bound
fidiv
push
pop
and
pop
lods
ret
xchg
push
fcom
sub
adc
neg
xor
popa
dec
push
ins
nop
mov
and
lock
mov
dec
adc
arpl
aas
xchg
loopne
sbb
ret
pop
sahf
push
daa
imul
out
jne
je
movups
inc
movsx
clc
and
xor
jne
out
shl
mov
call
cmp
and
scas
xor
xchg
mov
out
test
popa
sub
xchg
test
es
js
cld
xchg
repnz
sar
push
and
(bad)
cld
cld
push
sahf
outs
in
jmp
push
mov
xchg
dec
int3
hlt
cld
outs
mov
and
mov
pusha
addr16
fisttp
inc
push
mov
dec
jmp
xor
ja
pop
jmp
mov
sbb
repz
cld
jno
xlat
xchg
mov
cwde
shr
mov
aas
test
je
adc
outs
sub
inc
mov
inc
das
or
repz
push
xchg
pop
aad
test
mov
data16
lods
mov
stc
loop
add
fstp
lock
dec
test
lds
xchg
jmp
out
daa
push
jnp
mov
into
in
jmp
cdq
add
xchg
mov
int3
mov
push
xor
mov
retf
xor
jp
push
jg
retf
mov
xor
scas
push
stos
repnz
and
or
fwait
xlat
or
pusha
mov
icebp
mov
jge
push
loopne
or
add
fmul
mov
jmp
aas
dec
adc
or
mov
cmp
mov
js
pop
lahf
sub
cmc
sahf
or
sub
dec
xchg
iret
cmp
cmp
loop
jne
and
in
dec
test
lods
(bad)
div
jo
(bad)
sbb
sub
js
(bad)
jae
dec
inc
mov
pop
daa
cwde
jecxz
lahf
cmp
pop
jecxz
pop
mov
inc
or
scas
addr16
pop
dec
sti
cwde
inc
pop
in
std
dec
mov
fild
test
sbb
adc
movs
call
sbb
fiadd
out
cmp
fucom
mov
cmp
mov
inc
mov
push
movs
retf
sub
cwde
cdq
mov
test
sbb
dec
push
and
pop
add
and
shl
add
mov
sub
sub
ds
inc
call
pop
(bad)
mov
(bad)
hlt
ds
sub
dec
add
sub
scas
dec
lods
dec
cmp
stos
push
inc
(bad)
loope
adc
sbb
enter
pop
dec
movs
ficom
push
add
pusha
xor
test
fdivr
call
ret
stc
jnp
pop
push
xor
jge
popf
daa
jmp
test
push
xor
jmp
ja
movs
sbb
sbb
inc
and
ins
clc
and
addr16
mov
cmps
mov
jg
imul
aad
stos
or
rcr
jmp
out
scas
adc
pop
push
scas
call
fs
shr
and
fsub
lods
in
or
nop
test
fild
push
clc
dec
add
shr
mov
fsubr
std
sub
xor
mov
sub
fidiv
mov
into
fbstp
stos
mov
lds
cmp
inc
je
div
cdq
cwde
or
sbb
mov
push
movs
add
mov
outs
mul
addr16
inc
sub
repz
xor
or
jecxz
mov
dec
data16
repnz
shl
or
mov
addr16
leave
or
dec
dec
or
dec
(bad)
adc
add
adc
in
shl
fwait
xchg
jo
sti
int
dec
mov
movs
lock
mov
push
mov
inc
and
sar
cmp
inc
popa
push
mov
sbb
fadd
ins
pop
test
cdq
std
int
das
add
inc
je
adc
mov
lock
arpl
enter
xor
push
xchg
dec
jnp
jns
or
icebp
sub
and
or
pushf
sahf
call
mov
daa
pop
sbb
add
lahf
or
inc
jecxz
mov
mov
xchg
xchg
push
cs
add
lods
mov
push
xor
add
gs
cld
vaddss
xlat
mov
add
dec
sahf
cs
loop
xchg
shr
jmp
in
(bad)
or
xor
and
and
adc
or
xor
or
or
into
cmps
adc
sbb
fisub
add
mov
or
cli
mov
jne
repnz
xchg
call
mov
xor
inc
(bad)
jecxz
push
push
sub
adc
and
sub
sbb
xchg
add
pop
test
movs
push
pop
loope
les
jne
nop
rcl
cmp
jg
fimul
mov
mov
pop
std
ja
out
push
leave
test
dec
push
test
xor
mov
mul
or
call
sti
cmp
jmp
test
and
cwde
sahf
push
jmp
mov
and
cmp
jns
and
ss
or
out
or
clc
lock
xchg
mov
repnz
push
enter
in
sub
dec
sti
mov
jnp
leave
stos
add
mov
leave
mov
out
and
ds
enter
out
cdq
mov
jle
push
lea
cli
das
mov
mov
ins
outs
test
shl
jne
lds
mov
fist
dec
cmp
aaa
cmp
adc
xchg
adc
mov
fsubp
pop
shl
jecxz
mov
xor
or
jmp
dec
sbb
pop
test
fnsave
push
dec
lds
fldcw
scas
out
mov
dec
lods
pop
jb
pop
add
fbstp
ret
dec
dec
lahf
imul
stos
push
push
stos
sbb
add
inc
retf
cmp
jo
mov
or
inc
lock
mov
push
mov
and
fcmovne
cmps
pusha
push
call
cdq
fs
xchg
inc
add
rol
push
lods
pop
aad
mov
xor
add
sub
cmp
xor
(bad)
mov
dec
in
mov
push
in
ja
mov
sub
popf
mov
int3
sub
std
add
cmps
mov
xchg
or
dec
outs
or
shl
scas
jle
push
mov
add
cdq
ins
les
and
pop
mov
test
xchg
jns
mov
or
add
sbb
push
sub
add
jg
mov
lea
xor
push
pushf
mov
jp
ins
pop
mov
rcr
shl
outs
jb
mov
adc
neg
into
ffree
jg
shr
popf
imul
pop
mov
test
sbb
popf
add
cld
xchg
daa
inc
in
xor
je
daa
cmp
mov
iret
add
rcl
push
sub
stos
push
stos
test
jmp
lods
xchg
out
sbb
mov
cmp
or
and
gs
or
lds
lods
jl
cld
push
sahf
in
lods
nop
mov
(bad)
mov
adc
stos
mov
rcr
jmp
lods
mov
nop
in
xor
jns
lods
jp
shr
ss
imul
aaa
lock
in
and
test
mov
je
call
out
sub
inc
jae
adc
cmp
js
jmp
cmp
daa
add
or
dec
call
test
outs
push
mov
mov
push
pop
mov
jl
jbe
mov
mov
outs
pop
mov
retf
or
adc
fcomp
dec
std
in
xor
ficom
pop
jmp
and
fisttp
and
xchg
push
sub
lods
cmp
and
cmps
out
mov
inc
inc
mov
dec
ins
scas
adc
mov
pop
mov
inc
ins
mov
adc
xor
jo
add
jb
nop
pop
ret
(bad)
int3
shl
jae
ss
jecxz
jns
loop
jmp
call
mov
enter
sbb
xlat
imul
sbb
sbb
xchg
mov
jecxz
mov
dec
int3
pop
jmp
jnp
jg
stos
mov
sti
add
xor
cmp
mov
outs
push
mov
mov
sbb
aaa
(bad)
sbb
inc
mov
mov
xchg
xchg
dec
dec
mov
push
cmp
loope
setne
test
scas
xor
pop
add
jbe
xchg
sbb
xchg
and
lods
sbb
mul
daa
repnz
add
repz
imul
repnz
pushf
dec
rol
in
jle
repz
inc
push
add
stos
out
mov
stos
in
pop
mov
retf
jbe
or
std
stos
and
mov
add
cmp
xor
mov
fsubr
or
fiadd
mov
js
mov
adc
jae
jp
xor
mov
xchg
(bad)
sub
nop
retf
xor
das
sbb
xchg
dec
(bad)
ds
int3
cwde
or
inc
jmp
mov
in
mov
sub
mov
stos
imul
pop
adc
xor
int
jno
js
ss
or
or
das
jno
test
add
sbb
inc
mov
xor
aas
adc
pop
sahf
pop
or
mov
pop
dec
adc
dec
xchg
nop
loopne
jo
movs
das
or
stos
outs
add
(bad)
mov
cmp
popa
jmp
loope
jmp
sub
fisttp
cmp
rol
out
and
sbb
aaa
jl
cmps
xlat
(bad)
es
jg
or
std
xchg
data16
or
(bad)
jne
add
sub
dec
xor
mov
popf
and
test
jno
xchg
jle
das
mov
int
xor
frstor
lea
cdq
push
repz
and
retf
push
fucomi
ret
inc
shl
mov
push
mov
add
test
mov
out
add
pop
jge
mov
push
pop
or
ret
dec
and
xchg
fisubr
xor
mov
jmp
fidiv
xchg
loop
and
jne
or
arpl
and
adc
in
pop
cdq
cmp
jno
push
out
inc
loop
daa
mov
sub
dec
bsf
xor
push
cmps
sub
or
not
test
cmps
inc
xor
pop
add
jg
je
jno
sbb
cmp
lahf
retf
jb
out
dec
stc
cmp
push
les
ja
rcr
push
add
mov
ficomp
ffree
push
pop
adc
cmp
jno
mov
lods
inc
push
movs
jg
or
dec
adc
adc
mov
test
aam
imul
ret
popf
xchg
in
inc
pop
(bad)
neg
sub
dec
test
lods
out
dec
rol
dec
movs
movs
xchg
shl
loop
cld
push
imul
loop
pop
mov
fsubp
sbb
je
mov
lahf
icebp
in
dec
scas
push
inc
in
js
or
sub
inc
cdq
or
test
push
cmp
fwait
out
loope
test
push
jmp
ja
adc
inc
sbb
ins
xchg
popa
xchg
mov
adc
aam
pop
(bad)
repnz
xchg
je
mov
je
inc
div
(bad)
pop
push
xlat
(bad)
cmps
scas
add
pop
shr
pop
mov
les
push
and
mov
dec
jg
dec
push
out
jmp
jnp
aas
jecxz
pop
test
stos
frstor
mov
xchg
or
mov
and
push
mov
inc
pop
cwde
push
fisubr
out
shl
stc
mov
es
jb
mov
add
test
mov
int
xchg
push
sub
jl
sti
pop
add
pop
cs
jbe
or
cmp
xchg
cli
pop
test
js
outs
xchg
fsubp
or
hlt
xchg
mov
cmp
adc
ins
(bad)
ins
xor
test
jne
jnp
adc
ret
xchg
cli
ins
cmc
ja
cmps
xor
jne
out
xchg
fdivp
or
cmps
mov
xchg
das
push
xchg
push
jmp
cmp
and
cmps
add
in
les
cli
inc
in
aam
test
jmp
(bad)
sbb
dec
in
inc
cmp
mov
int3
repnz
fs
xchg
jle
sbb
dec
pushf
test
out
pushf
ret
arpl
pop
jmp
pop
mov
xor
inc
jae
pslld
(bad)
repnz
add
ins
add
test
push
fmul
cmp
fld
mov
(bad)
xor
outs
bound
adc
push
movs
lea
add
ret
out
fwait
jmp
loop
aas
loopne
sub
test
sub
inc
inc
xchg
fild
xchg
xchg
push
hlt
paddq
push
sub
out
cs
div
jns
xchg
imul
iret
or
aas
pop
ds
pushf
pop
popa
popa
ficom
pop
aam
and
nop
outs
popf
mov
dec
mov
mov
test
jge
mov
iret
loope
iret
inc
mov
fist
add
lahf
mov
mov
or
jbe
mov
cmp
dec
mov
xchg
mov
sbb
jmp
stos
mov
les
in
fbstp
inc
daa
cmc
push
mov
cdq
jl
pop
mov
or
xlat
mov
adc
inc
add
repnz
lods
sbb
xor
or
lods
jecxz
shl
scas
or
sbb
mov
cmp
inc
mov
xchg
mov
in
jb
sti
mov
cmp
jp
dec
jle
mov
inc
das
aad
xor
(bad)
shr
repnz
or
int
and
imul
ss
(bad)
mov
xchg
cmp
mov
loop
lods
sub
sar
jmp
pop
test
jg
or
push
das
push
push
pop
adc
cs
add
lea
sbb
mov
cmp
and
push
imul
pop
jo
pop
and
leave
(bad)
push
gs
loop
jo
inc
dec
popa
enter
mov
cmc
or
cmp
push
mov
sbb
push
addr16
retf
xor
jb
ret
sub
mov
jecxz
scas
out
mov
das
mov
add
push
je
and
fidiv
enter
(bad)
aas
ror
out
add
ret
call
inc
outs
or
scas
inc
and
(bad)
cld
sub
cdq
inc
adc
xchg
and
jg
pop
cdq
mov
xchg
scas
dec
arpl
push
frstor
push
lahf
icebp
inc
enter
inc
dec
enter
(bad)
fld
pushf
sub
xor
out
jecxz
jmp
dec
add
dec
jecxz
or
push
in
cmp
ror
pop
jmp
int
fwait
shr
shr
push
dec
int
cs
outs
jmp
lods
popf
lea
cmp
add
test
and
cwde
fst
es
adc
push
mov
ja
das
push
mov
std
push
scas
mov
stc
das
xchg
push
mov
test
push
inc
cmps
cli
fwait
pop
push
dec
fdivr
jnp
sbb
adc
mov
push
mov
pop
xlat
scas
or
fcomp
mov
mov
in
iret
sub
(bad)
pop
addr16
dec
adc
cdq
into
icebp
push
pop
mov
movs
add
sahf
pusha
add
fwait
imul
clc
sbb
push
in
scas
div
jne
push
jg
bound
jne
dec
test
sbb
(bad)
jne
or
jle
(bad)
mov
pop
or
stos
push
ret
into
pushf
cmp
and
movs
lock
cli
aam
in
push
jo
or
ins
div
sub
inc
pushf
jbe
ret
mov
lock
jne
mov
jno
sub
(bad)
ret
cmc
fcom
lock
lea
sub
inc
shl
mov
xchg
call
js
loop
dec
mov
dec
inc
or
mov
sbb
call
xchg
sbb
aas
and
in
(bad)
lods
call
xor
push
popf
cmp
call
int3
mov
dec
in
(bad)
mov
out
cmp
sahf
push
out
test
cld
pop
dec
pop
add
mov
pop
dec
push
fs
nop
mov
jne
jmp
push
fcomp
mov
sub
daa
add
mov
(bad)
outs
movs
cmp
lods
dec
or
sahf
mov
js
fiadd
cmp
or
jmp
jb
mov
mov
jmp
sbb
push
mov
loope
jns
aas
dec
retf
mov
or
test
out
xchg
clc
mov
fwait
mov
mov
stos
fisubr
iret
inc
aaa
sahf
mov
adc
ret
call
xchg
jg
xor
mov
sti
mov
movs
ds
push
cmp
push
xchg
mov
ficom
cmp
or
mov
addr16
or
cmc
sbb
rcl
xchg
in
hlt
ins
enter
push
mov
or
dec
loope
iret
push
dec
test
enter
sub
test
popf
call
xchg
cmps
test
push
clc
or
mov
pop
mov
jno
mov
je
arpl
out
or
adc
inc
shr
cmp
push
mov
ret
mov
fcmovu
cmp
ins
inc
jo
daa
aas
into
pop
pop
fst
mov
xchg
test
sub
push
int
push
je
dec
cmps
jl
test
fisubr
xchg
ins
add
iret
sbb
gs
retf
pop
into
inc
mov
outs
ds
sti
(bad)
cwde
xchg
jp
dec
mov
retf
fs
mov
sbb
jo
scas
inc
jp
in
imul
popa
cs
dec
(bad)
ror
jecxz
hlt
cwde
add
inc
shl
clc
mov
dec
call
shr
lea
mov
inc
mov
mov
inc
jne
scas
xchg
sbb
(bad)
cmp
jnp
aam
mov
pop
xchg
sbb
mov
xor
aad
mov
call
icebp
cmp
mov
and
aas
lahf
outs
push
and
xor
fldln2
xchg
mov
push
jnp
div
inc
inc
push
sub
add
or
add
into
pop
pop
shl
xchg
into
pop
pop
add
ins
xchg
pusha
pushf
adc
int3
aas
sbb
ins
mov
fld
pop
or
iret
loopne
iret
xchg
adc
ja
ins
push
mov
es
dec
and
jb
jmp
sub
lock
int3
xchg
mov
mov
dec
cwde
inc
sub
inc
fwait
(bad)
mov
sub
xor
or
ss
jno
sbb
xlat
inc
into
add
jne
outs
push
jb
inc
out
mov
xor
add
mov
adc
in
sar
xor
pop
mov
mov
mov
xor
ins
cli
(bad)
push
add
xchg
pop
xchg
mov
dec
mov
adc
inc
iret
pop
inc
mov
inc
sbb
les
mov
and
pop
inc
jne
mov
enter
push
cmp
push
xlat
sub
jge
xor
xor
inc
adc
adc
(bad)
jnp
out
pusha
popa
mov
mov
cwde
xor
mov
sbb
mov
hlt
sbb
jns
inc
punpcklbw
test
ret
or
scas
mov
dec
inc
dec
rol
cmp
adc
jno
push
dec
(bad)
jge
in
icebp
cwde
xchg
lods
(bad)
xchg
mov
mov
inc
dec
repz
(bad)
fstp
addr16
adc
jbe
xlat
or
mov
push
xchg
jb
addr16
mov
inc
jae
test
inc
ins
out
outs
lods
sub
push
jne
adc
mov
aam
test
mov
fs
sbb
push
out
ss
ret
mov
jp
ds
mov
jmp
or
imul
lods
xchg
add
sbb
inc
pop
sub
push
not
sub
(bad)
jo
lds
xor
test
push
adc
bound
dec
mov
dec
dec
popa
bnd
mov
retf
test
repnz
sub
imul
stc
cmp
in
sub
shr
fistp
xchg
shl
(bad)
icebp
inc
loope
movlps
mov
add
and
mov
and
sbb
add
mov
fwait
inc
mov
scas
mov
mov
inc
mov
retf
adc
push
(bad)
ror
sub
pusha
mov
adc
push
je
shl
sub
sub
xchg
repz
sbb
fcomp
jae
sub
movs
mov
push
es
push
stos
jbe
aas
arpl
fdivr
jl
dec
cmp
pop
adc
dec
xchg
push
mov
sti
cmp
iret
mov
fwait
mov
xor
bnd
sbb
shr
fisttp
sub
sbb
add
mov
into
call
mov
cmps
sbb
fstp
jmp
sti
pop
add
lahf
ja
ds
test
les
sub
sbb
in
cmp
jnp
pushf
popf
xor
arpl
pop
push
adc
jmp
sub
shl
leave
mov
pop
push
push
pop
mov
stc
aam
sbb
outs
jbe
sub
sub
addr16
repnz
int3
sahf
jmp
adc
ins
push
jp
dec
mov
int3
cwde
addr16
sub
cmp
ret
mov
repnz
into
bound
mov
sbb
shl
xor
dec
and
lods
cmps
jne
jmp
daa
mov
nop
stos
inc
xor
fidiv
fidiv
lahf
leave
retf
loope
cwde
repnz
mov
je
not
mov
cmps
xor
jns
mov
test
lahf
repnz
fisttp
push
retw
sub
jge
push
or
stos
add
stc
sbb
cmps
mov
push
sbb
xor
adc
jae
lahf
stc
pop
xchg
jg
outs
and
jno
push
adc
add
lods
dec
xor
adc
(bad)
movs
gs
and
es
mov
lahf
scas
ins
std
cdq
jbe
gs
in
sub
(bad)
dec
sub
add
movs
jbe
sub
add
or
mov
sub
ss
push
icebp
ror
sti
jle
dec
dec
lock
out
jge
push
jae
ja
jmp
fwait
mov
movs
arpl
shl
pop
js
sub
dec
push
stos
movs
xor
inc
cld
fs
adc
mov
loope
sub
dec
push
out
inc
into
(bad)
popf
add
mov
popa
jbe
push
dec
call
xor
into
inc
add
sub
xchg
rcr
sar
stos
data16
std
mov
jmp
dec
rcr
xchg
mov
xchg
daa
test
dec
sbb
xchg
movs
inc
xchg
aas
jle
add
and
mov
sub
fisttp
clc
pop
pusha
mov
pop
dec
call
rcl
xor
scas
pop
ja
pop
(bad)
rcl
xor
(bad)
into
in
popf
clc
movs
and
popa
int3
mov
xchg
pop
push
jbe
sub
mov
and
cmps
movs
and
mov
out
cmp
lods
jmp
mov
xchg
mov
icebp
rcr
cld
sub
xlat
pushf
inc
push
push
add
and
mov
pop
cmc
push
lods
pop
sub
fild
leave
xor
das
call
fild
sub
add
pop
addr16
retf
jp
sar
mov
inc
jge
mov
jmp
pop
add
and
mov
aas
aad
mov
mov
leave
(bad)
jl
(bad)
ds
sbb
addr16
hlt
sbb
(bad)
pop
fdiv
repnz
mov
mov
lds
retf
push
add
enter
ret
jge
sar
fadd
cmp
dec
adc
rol
out
or
adc
fiadd
jge
gs
pop
pop
mov
and
cmc
mov
pop
jmp
cmp
and
xor
sbb
pop
cs
mov
cmc
mov
scas
cmp
loope
inc
jns
es
mov
arpl
cld
scas
dec
shr
test
xor
mov
ret
inc
icebp
scas
ret
lock
sub
xchg
dec
xchg
jg
inc
inc
imul
inc
add
out
cmp
dec
int
add
std
dec
dec
sbb
jno
rcr
sbb
fdivr
mov
icebp
ins
mov
sub
(bad)
in
push
ret
cmc
fidiv
xor
push
shl
gs
mov
aam
fbld
ins
mov
loope
jle
out
jge
inc
inc
loop
lds
sbb
fild
ficomp
mov
into
pushf
test
mov
mov
test
fs
or
fdiv
mov
sub
sahf
icebp
jmp
mov
xlat
mov
fisttp
jmp
sbb
mov
sub
fimul
mov
and
out
mov
mov
inc
in
jp
arpl
(bad)
mov
push
stos
dec
mov
and
ja
call
xchg
cmp
pop
pop
mov
inc
(bad)
leave
jno
mul
or
push
nop
mov
popf
aam
frstor
jmp
pop
mov
sub
pop
push
xchg
add
or
out
or
cwde
pop
retf
out
push
push
rol
inc
retf
bound
ds
fnstcw
test
inc
fs
outs
mov
sbb
ficom
adc
jge
stos
sbb
mov
and
cs
les
aam
dec
jmp
jmp
out
rol
test
jb
xchg
sbb
lods
mov
inc
jmp
mov
dec
mov
mov
lods
stc
lds
dec
xchg
mov
and
push
xchg
cmp
xchg
test
pop
shr
push
jnp
outs
or
pop
mov
push
or
addr16
and
fdivrp
dec
arpl
mov
xchg
xchg
in
into
mov
outs
lock
(bad)
sub
push
push
bound
sub
lock
(bad)
cmps
xchg
or
add
dec
test
imul
mov
lds
cmps
(bad)
mov
test
mov
pop
sbb
pop
cmp
dec
or
jmp
mov
mov
ret
mov
pop
(bad)
aam
mov
push
test
jnp
xor
sub
cld
ins
dec
imul
pusha
bound
jmp
in
add
arpl
push
clc
hlt
xor
jbe
inc
xor
jmp
(bad)
fst
push
xor
pop
test
jo
es
add
inc
aas
ret
rcl
add
imul
dec
xor
push
jle
xchg
ja
fldenv
mov
and
push
cmp
cdq
and
adc
imul
push
pop
wrmsr
cdq
(bad)
or
xor
psubd
adc
inc
mov
rcr
bound
(bad)
(bad)
cs
dec
mov
daa
adc
out
inc
test
add
xlat
and
pop
adc
jns
sbb
push
outs
push
test
mov
mov
enter
lods
or
out
jb
leave
dec
jne
mov
sub
sbb
into
rcl
pop
fsubr
add
add
jo
movs
jg
ins
sbb
(bad)
jb
das
icebp
addr16
push
test
pusha
sbb
popa
retf
in
push
movs
lock
cwde
add
jmp
out
or
les
xor
pop
fwait
inc
test
sub
mov
stos
lea
push
jg
(bad)
jns
push
jne
mov
and
adc
mov
pop
pop
je
mov
mov
sub
fisttp
pop
lods
sar
mov
jmp
je
add
and
fdivp
mov
pop
mov
dec
sub
xchg
lods
jge
adc
adc
stos
ins
sbb
inc
fld
test
jno
out
gs
enter
in
mov
and
push
jmp
out
lahf
cmp
arpl
xor
pop
mov
adc
inc
sub
cmps
sbb
push
jl
data16
int
stos
mov
mov
stos
cmps
xor
fimul
push
sti
push
xor
cs
fucomip
push
xchg
mov
dec
mov
and
js
fstp
jb
in
arpl
daa
adc
adc
pop
hlt
pop
lods
shl
jp
jp
add
mov
sub
and
scas
mov
in
sahf
pop
sbb
sar
cld
mov
pop
pushf
shl
mov
jg
scas
sbb
retf
xchg
xor
xlat
std
(bad)
mov
pop
movs
in
repz
jb
push
sahf
dec
add
lods
mov
mov
(bad)
add
and
sub
lods
pop
inc
xor
xor
ss
loope
xchg
std
push
mov
cmp
aaa
adc
jno
mov
fidivr
mov
fmul
ins
shl
and
or
cmp
add
xor
add
sub
sbb
pop
pusha
es
into
aaa
dec
clc
clc
imul
ins
sub
mov
rcr
sbb
push
cmc
mov
push
and
retf
jg
adc
dec
jne
cld
(bad)
out
fs
push
mov
pop
fucomp
push
pop
xor
mov
cli
cmp
(bad)
push
push
int
pop
(bad)
mov
std
jnp
dec
ins
cmps
enter
mov
sbb
sbb
mov
(bad)
clc
out
pop
cmp
retf
pop
stc
pop
jp
(bad)
add
adc
jae
(bad)
rcr
push
xchg
addr16
xchg
arpl
push
(bad)
and
mov
xor
clc
(bad)
push
shr
add
dec
bound
sbb
cmps
xor
push
loopne
out
loopne
test
jg
pop
pop
lock
mov
scas
shl
push
arpl
pop
je
call
push
das
sbb
xlat
js
xchg
scas
mov
(bad)
repz
mov
mov
sbb
mov
cmc
jb
outs
mov
clc
call
mov
mov
es
out
push
mov
sti
arpl
jno
inc
(bad)
pop
fwait
cmps
dec
(bad)
ficom
push
adc
mov
xor
stos
shr
pusha
mov
out
mov
or
and
and
retw
push
test
outs
jl
sub
(bad)
in
xchg
(bad)
imul
mov
push
push
adc
cmp
jne
leave
xchg
fwait
(bad)
push
xchg
dec
mov
into
add
dec
fild
push
sbb
pushf
mul
or
xor
xchg
jo
popf
or
cmp
xor
pusha
mov
push
or
lods
out
pop
inc
pop
cwde
nop
aas
cmp
xchg
addr16
inc
adc
enter
pushf
dec
imul
lock
call
pop
push
scas
fistp
gs
sbb
inc
scas
mov
aam
ja
add
push
in
sub
out
lock
out
push
mov
call
jle
mul
xor
int3
inc
cmc
imul
jp
mov
es
push
js
xchg
fisub
jnp
sub
jne
push
out
add
lods
cs
sbb
in
xchg
outs
pop
xor
loop
fmul
fisub
add
fisubr
mov
mov
pop
jmp
out
mov
push
and
mov
xor
mov
jb
push
pusha
mov
add
lods
aam
in
outs
dec
ja
adc
popf
leave
lods
mov
leave
hlt
fcmovnu
sti
js
adc
adc
ja
push
loopne
cs
mov
add
xchg
aas
sub
or
sub
xor
sbb
and
in
data16
popa
xchg
leave
jbe
jmp
xchg
inc
push
cdq
push
jl
inc
jecxz
xchg
js
mov
sbb
jne
push
lods
mov
ficom
xor
mov
cli
in
mov
cmp
dec
imul
cmp
scas
or
pop
mov
or
jmp
sub
das
imul
jo
jo
daa
cmps
test
adc
or
lahf
popf
ret
fidivr
sub
jmp
cmp
dec
nop
xchg
lods
push
xor
ja
stc
nop
xchg
jnp
imul
inc
stos
cmps
repnz
lock
xlat
sbb
inc
stos
inc
mov
push
repnz
clc
push
imul
lock
jg
clc
test
and
das
addr16
adc
clc
cmps
sbb
fstp
in
pop
nop
repnz
das
or
rcr
push
jmp
push
fistp
mov
in
jl
sbb
cs
jge
scas
sbb
xchg
scas
xor
mov
mov
inc
add
add
adc
fcom
out
add
movs
outs
sbb
inc
movaps
(bad)
std
xchg
xor
jns
pusha
(bad)
call
retf
fadd
dec
mov
push
sbb
xor
mov
jbe
sbb
sbb
jmp
ins
(bad)
in
pop
jle
movs
std
fistp
mov
dec
jl
xchg
test
push
jo
dec
xchg
aam
bound
ss
mov
jmp
cmp
pop
enter
cld
sub
pop
xor
mov
and
loope
pop
repz
mov
loope
ret
xchg
(bad)
cld
lock
push
adc
sbb
push
jbe
test
(bad)
jne
mov
inc
mov
mov
lahf
ss
and
cld
xor
mul
sub
sbb
mov
hlt
js
mov
sub
adc
call
out
xchg
(bad)
rsm
call
inc
mov
movs
and
xchg
sub
push
in
mov
in
rcl
jp
xchg
jbe
test
(bad)
hlt
dec
mov
pop
and
dec
add
test
push
sahf
sbb
mov
test
in
bound
cmps
dec
in
sbb
cmp
and
dec
ins
cmps
fimul
cmp
sahf
cmp
rcr
push
pop
pop
pop
in
mov
cmp
test
pop
mov
sub
inc
xor
es
inc
hlt
cld
sub
sub
(bad)
cwde
sub
gs
xchg
jge
xor
add
push
cmps
fcom
lods
rcr
ss
retf
sti
loopne
jle
lea
scas
das
stos
adc
sub
mov
lea
stos
fcom
jl
inc
aas
aam
arpl
xor
hlt
gs
xchg
sub
xchg
das
inc
adc
test
js
mov
pop
push
and
into
scas
xchg
push
xor
data16
sar
rcl
cwde
or
sub
pop
nop
pusha
mov
push
jnp
(bad)
rcl
clc
or
ficom
hlt
enter
bswap
stc
mov
or
int3
in
and
sbb
loopne
fimul
data16
rol
shr
mov
ror
pop
push
aad
out
xor
adc
xlat
nop
rcl
stc
jmp
cmp
sahf
les
sub
mov
movs
jmp
jae
rdpmc
daa
(bad)
movs
inc
dec
mov
pop
stos
mov
push
data16
pop
sar
dec
movs
and
leave
and
push
ds
xchg
and
sub
sbb
stos
mov
outs
xor
sub
fdivr
mov
xor
leave
adc
or
daa
adc
sbb
and
and
setge
outs
add
loope
loope
push
push
mov
sbb
ret
push
retf
(bad)
cmp
scas
mov
push
sub
or
sbb
mov
(bad)
mov
out
cmp
fldenv
aam
int
cld
push
inc
in
xor
inc
mov
std
mov
pop
jns
in
cdq
ret
es
xchg
fidivr
xchg
mov
icebp
int3
scas
stos
in
sbb
dec
hlt
hlt
xchg
pop
push
sub
nop
xor
cdq
es
loope
icebp
imul
pop
fucomi
cmp
mov
(bad)
adc
sbb
mov
icebp
dec
cli
sbb
jbe
movs
push
shr
sbb
sbb
lds
jnp
enter
cmps
(bad)
out
jle
cmps
aas
call
push
xor
sub
push
in
in
loopne
mov
pop
mov
int3
push
and
cmp
jp
ins
add
pop
int
or
fcomp
dec
mov
cmp
push
mov
xor
lods
jmp
int3
sbb
fst
mov
das
call
inc
call
or
shl
sti
adc
sbb
or
xchg
jno
add
loopne
outs
int
sub
call
xor
sub
cmp
ror
retf
je
xor
lds
xor
sbb
cmp
es
pop
adc
out
sub
push
aad
push
jge
push
push
cmp
inc
adc
mov
je
ret
inc
add
(bad)
fcmovbe
cld
addr16
fsubr
into
mov
adc
push
jmp
jnp
xchg
imul
in
jno
imul
ja
xchg
cli
mov
sub
pop
ins
cdq
aaa
or
inc
mov
in
cmp
cmp
push
xchg
stos
js
int
mov
sbb
call
pop
push
xor
mov
sub
or
jno
movs
push
pshufw
xlat
sbb
mov
mov
mov
mov
jno
and
xchg
dec
(bad)
add
neg
jno
aad
inc
fadd
cmp
lds
lea
std
popf
pop
mov
ds
ror
or
and
nop
pop
xchg
(bad)
leave
lea
fnstcw
xor
lds
adc
sbb
in
movs
mov
fdivr
jl
pop
lds
add
aam
inc
mov
add
xor
icebp
leave
inc
outs
scas
cmp
imul
adc
mov
adc
es
xor
add
shl
imul
xadd
jmp
cmp
clc
pop
nop
push
ja
ret
mov
iret
mov
out
add
mov
es
sahf
sub
(bad)
pop
or
mov
mov
in
pop
mov
adc
nop
sbb
jmp
jo
addr16
std
add
retf
add
in
aad
mov
add
std
outs
test
popf
mov
xor
stos
mov
retf
push
mov
jb
mov
inc
ret
xor
sub
rcl
xchg
(bad)
mov
and
ja
mov
sub
cmp
or
test
mov
push
mov
xor
call
loope
mov
and
das
(bad)
xchg
scas
xor
lea
lds
cbw
ds
xchg
fisttp
icebp
mov
jb
xor
pop
cli
xor
retf
(bad)
dec
ins
push
fsub
ja
xchg
and
sbb
add
sbb
rcr
sti
pop
sbb
jmp
jge
dec
jbe
fxch
in
ds
push
sbb
fsubr
dec
xchg
jno
mov
push
push
xlat
or
shl
mov
inc
cmp
add
std
(bad)
retf
arpl
pop
ret
fdiv
xchg
jle
dec
(bad)
loopne
mov
rol
out
mov
outs
and
xor
pop
jno
into
pop
push
std
mov
imul
cmp
mov
cmp
dec
test
add
movs
ins
(bad)
cwde
sub
(bad)
ins
adc
sbb
(bad)
jg
adc
mov
movs
mov
nop
dec
sbb
jp
mov
adc
in
mov
mov
pop
lea
adc
push
push
ftst
icebp
and
xchg
mov
adc
pop
xor
mov
xchg
dec
sbb
lahf
int
mov
out
push
in
sbb
push
dec
and
push
imul
sbb
out
test
mov
or
add
(bad)
int
lods
mov
sahf
inc
neg
in
mov
stos
add
ss
or
mov
and
pop
iret
repnz
adc
popa
lds
rcr
scas
jl
int3
adc
and
out
ins
repz
push
mov
imul
out
js
cmp
jne
and
pop
es
xchg
nop
xor
(bad)
outs
fbld
or
mov
add
cmp
add
pusha
jo
mov
push
adc
jg
(bad)
sub
adc
push
lock
popf
push
cmp
imul
push
in
push
ins
imul
inc
xchg
jno
add
mov
loop
gs
mov
dec
xor
cwde
jno
nop
or
sbb
xor
not
xchg
add
leave
cdq
sub
and
(bad)
dec
jmp
jno
mov
test
ins
or
add
jmp
psubd
lods
(bad)
push
in
add
inc
adc
(bad)
dec
mov
or
and
and
ficom
inc
nop
xor
xor
loope
in
adc
sub
mov
sar
sti
cmp
out
bound
lods
and
dec
push
jne
fwait
test
(bad)
enter
jo
iret
movs
movs
mov
dec
sbb
xchg
pushf
push
jno
pop
pushf
dec
jne
push
xchg
push
inc
add
push
scas
shl
cli
sub
aas
fimul
lahf
stc
mov
cwde
cmps
dec
and
retf
scas
sub
pop
xchg
ins
mov
mov
nop
fnstcw
pop
adc
mov
cmp
or
ret
cmp
int
sub
es
loope
in
call
xor
rcr
outs
fisubr
(bad)
xor
add
sub
push
hlt
(bad)
push
push
mov
seta
movs
loop
mov
dec
inc
push
mov
test
push
adc
movs
add
imul
inc
outs
(bad)
neg
ret
pop
pop
jnp
pop
jno
ins
addr16
mov
mov
inc
call
adc
repz
imul
retf
inc
stc
pusha
shl
inc
jo
inc
xor
out
jle
mov
imul
mov
js
ret
xor
mov
fidivr
int
xor
sar
iret
mov
sub
or
pop
in
inc
test
daa
cmps
data16
xchg
sub
cdq
mov
pop
jge
adc
rol
sar
jle
cmp
sub
loop
mov
dec
ss
sbb
movs
in
cs
movs
ror
push
add
shl
push
mov
imul
or
ret
jns
cmc
mov
sub
das
and
inc
fst
into
mov
push
mov
adc
sbb
inc
xchg
inc
lock
cmp
pop
pushf
xor
sbb
xchg
lock
pop
add
arpl
mov
outs
dec
or
fiadd
mov
sbb
fst
push
into
scas
pop
pop
data16
xchg
outs
add
pop
push
mov
push
jns
xchg
in
cmps
xchg
jns
adc
mov
daa
ror
mov
add
in
add
jge
add
mov
bound
jns
imul
xor
jg
adc
adc
jo
mov
mov
mov
xor
add
or
(bad)
movs
push
fstp
and
movs
loopne
shl
lahf
dec
xor
inc
rol
and
pop
out
inc
lods
pop
mov
cmps
int
repnz
mov
int
lock
mov
fwait
adc
sub
pop
call
jne
mov
sbb
or
cmp
stos
xchg
xor
jo
fild
xchg
loop
(bad)
jmp
push
(bad)
aad
and
sbb
inc
dec
mov
mov
jp
out
lea
or
icebp
fucomi
mov
or
add
lods
or
push
cli
fmul
inc
lods
xchg
test
lods
xchg
(bad)
jle
jg
mov
xchg
call
out
fs
cmp
hlt
jmp
jmp
xlat
fild
mov
mov
xlat
mov
jle
das
add
jmp
lea
(bad)
in
dec
dec
inc
mov
in
loop
cs
or
aad
mov
popf
das
aaa
test
xchg
mov
push
out
aas
xor
push
ud2
jge
adc
pop
ss
dec
add
ja
mov
and
jbe
xchg
ret
and
pop
and
jne
sub
adc
pop
and
mov
adc
inc
adc
rcl
gs
add
dec
dec
inc
add
cs
(bad)
repz
mov
inc
retf
jecxz
loope
mov
sub
ret
jle
arpl
dec
and
xor
pushf
bound
popf
pop
in
sub
add
pop
inc
ret
and
ins
lock
cmps
add
stos
and
aaa
into
test
push
adc
cld
jg
std
ins
test
stos
js
mov
add
sub
mov
sar
fcom
in
std
std
ins
(bad)
(bad)
jmp
or
cmp
and
inc
pop
test
pop
or
jecxz
sub
dec
xor
repz
mov
fwait
mov
(bad)
imul
cmp
xor
repz
jmp
push
pop
xchg
in
mov
add
retf
out
loop
jne
jno
rcr
(bad)
loopne
gs
cmc
int
jmp
popa
mov
dec
shr
dec
mov
sub
test
out
int3
fbstp
sahf
push
dec
mov
jne
loope
mov
xchg
and
dec
pusha
out
fwait
lds
hlt
cwde
outs
retf
ins
cmp
sar
inc
lahf
in
test
bound
jl
fdiv
js
cmp
fwait
test
jb
lea
cmp
std
jo
in
repz
mov
in
aam
mov
imul
(bad)
fld
fisttp
repz
das
jno
cmp
test
sahf
fwait
xchg
inc
sub
leave
lods
cmc
jo
das
(bad)
lods
lds
jnp
jbe
jbe
loop
sbb
jnp
add
call
xchg
aas
(bad)
xchg
push
ja
add
mov
xchg
(bad)
sub
iret
cmovnp
pop
(bad)
mov
(bad)
gs
dec
int3
dec
pop
mov
out
test
retf
pop
push
or
icebp
lahf
(bad)
add
sbb
outs
imul
(bad)
rcr
mov
or
adc
inc
aad
fisttp
popa
push
jmp
pop
ins
mov
sbb
dec
and
push
sahf
in
xor
adc
xor
aaa
cmp
mov
inc
rol
out
shl
clc
mov
jl
or
push
fnstsw
lahf
(bad)
xchg
jmp
repnz
inc
jmp
adc
jmp
iret
imul
jle
jecxz
jno
cmp
fwait
jl
fmul
jl
lahf
popf
(bad)
cli
fucom
xor
xchg
xor
jecxz
call
and
push
jo
cmps
xchg
jge
mov
push
dec
xchg
jecxz
jae
cmc
mov
xchg
cmp
pop
test
mov
push
add
nop
inc
push
scas
push
jo
call
sar
dec
int3
xchg
sahf
mov
mov
mov
cwde
call
cwde
pop
xor
cmps
mov
popa
inc
mov
stos
xchg
push
sub
test
xchg
add
jmp
stos
cs
pop
lahf
(bad)
retf
js
(bad)
and
xchg
mov
add
call
dec
out
outs
iret
mov
cmp
retf
loop
ret
push
add
jno
repnz
(bad)
push
pusha
(bad)
cdq
add
xor
stos
imul
outs
jbe
pop
repnz
call
mov
jne
and
jae
xchg
dec
xor
pop
mov
fadd
ror
pop
stos
int
push
sub
icebp
sbb
stos
iret
mov
js
mov
or
jmp
jge
shr
cwde
jmp
stos
gs
add
or
jo
mov
dec
in
aad
pop
inc
xor
sbb
lods
xlat
mov
pop
and
movs
mov
mov
mov
xchg
jl
test
lock
outs
and
xchg
mov
scas
sub
cmp
idiv
addr16
cwde
mov
or
int
inc
push
push
xchg
add
scas
test
inc
adc
fwait
jb
lods
(bad)
out
aas
or
iret
mov
cmps
cmps
outs
mov
je
vcvtpd2dq
jmp
lods
adc
je
push
add
in
(bad)
pop
ror
mov
rcl
jecxz
jp
pusha
in
mov
mov
icebp
lea
fsubr
sub
push
fs
sub
fld
push
push
add
xchg
ret
mov
add
adc
jmp
test
dec
adc
push
mov
iret
das
jge
test
cli
dec
ja
cmp
or
rcr
clc
stos
mov
pop
scas
rcr
daa
and
into
mov
clc
pushf
xchg
jnp
cmp
mov
jne
out
jnp
inc
lea
xchg
dec
and
pop
clc
ja
cmps
push
call
out
lods
sbb
and
sti
ret
stos
push
dec
scas
xchg
push
outs
push
mov
aam
xchg
and
add
outs
inc
jb
and
fsub
xlat
sbb
mov
jb
mov
dec
xchg
jle
sub
test
dec
jno
loop
inc
sbb
cmp
sub
inc
cli
inc
sbb
push
jecxz
out
stc
stos
scas
mov
pop
add
adc
lahf
sub
mov
outs
enter
inc
jns
push
sbb
mov
jnp
cmps
lahf
adc
outs
cdq
icebp
bound
test
pop
mov
gs
fwait
or
aas
mov
sub
cmps
xor
add
rcl
inc
shl
mov
sti
cwde
out
lods
fs
pop
(bad)
xchg
inc
or
les
out
xchg
push
mov
cmp
ret
mov
and
arpl
inc
out
pop
push
sbb
(bad)
je
xchg
out
test
inc
or
imul
ss
popf
in
adc
push
js
adc
and
mov
xor
jbe
test
xlat
fucomp
push
cmp
imul
pop
aaa
(bad)
cmp
xchg
call
mov
and
xchg
repz
dec
lock
xchg
pop
or
inc
add
stos
xor
loope
push
and
aaa
rcr
stc
jae
sbb
jbe
les
test
and
ret
cli
ficom
xchg
sbb
lahf
mov
ins
ret
in
jnp
outs
scas
or
add
aaa
xlat
ins
clc
mov
and
mov
fist
imul
lods
neg
test
neg
push
fcmove
add
mov
(bad)
repnz
mov
xor
div
out
add
(bad)
mov
fldln2
jmp
jmp
hlt
jge
dec
bound
ret
in
sub
mov
das
mov
std
cmc
pop
push
pop
inc
xchg
aam
sbb
pop
mov
ror
ja
mov
and
lods
call
add
pop
call
pushf
mov
cmps
and
mov
into
call
jo
jne
cmp
mov
adc
test
scas
mov
jne
leave
xchg
cmps
lahf
pop
in
inc
push
cmps
or
ins
repz
or
retf
add
mov
adc
push
inc
push
(bad)
jns
mov
lock
sub
repnz
and
inc
cmc
out
xor
sub
pop
enter
mov
inc
sbb
dec
cmp
gs
push
and
pop
push
jns
loope
in
pop
xchg
gs
inc
and
ret
gs
bound
cmp
pusha
jne
int3
cmc
mov
movs
div
and
fcmove
mov
frstor
into
cwde
sar
icebp
ins
inc
jmp
jge
cmps
shl
xchg
addr16
ror
in
popf
xchg
xchg
cmp
sbb
mov
push
xchg
push
jp
xor
shr
add
inc
sar
bound
add
mov
sbb
ins
mov
lahf
mov
cmp
in
aam
cld
ja
ins
sbb
pushf
mov
add
movs
lea
popa
int3
ins
mov
test
cwde
jmp
fucomi
cwde
mov
sbb
xchg
pop
inc
(bad)
mov
inc
out
daa
jmp
sub
adc
mov
mov
jns
sahf
hlt
mov
mov
and
jb
(bad)
fisubr
xchg
sbb
cmps
loope
gs
pop
pop
popf
mov
repz
cmp
cli
cmp
inc
add
movs
mov
ds
pop
sbb
cmc
mov
adc
add
dec
test
xchg
or
jp
mov
mov
jo
push
jmp
ror
fimul
mov
out
aam
or
xlat
icebp
cld
in
mov
xor
jmp
xchg
xchg
sbb
xor
jmp
pushf
outs
popf
pusha
fcom
cwde
jp
out
push
xchg
scas
mov
idiv
shr
xor
adc
cmp
xor
adc
cs
cs
repz
pushf
jp
fisubr
inc
mov
inc
pop
in
cmp
adc
cmc
sahf
ja
lock
mov
jnp
jb
ror
adc
hlt
(bad)
xchg
mov
xor
inc
es
jnp
and
adc
cmc
or
(bad)
mov
int
ss
lock
movs
stc
adc
jmp
mov
dec
pop
loopne
and
add
test
sbb
and
bound
add
popa
int
push
mov
pop
shl
jno
loope
and
dec
imul
ret
bound
or
cwde
mov
xor
adc
pop
loop
sub
mov
loopne
mov
pusha
(bad)
sbb
je
imul
mov
out
pop
dec
movs
cmps
retf
sti
inc
xor
mov
pop
rol
cmp
xchg
test
sub
mov
mov
push
pushf
fisubr
sub
ret
mov
mov
les
in
pop
ss
rol
mov
enter
stc
add
enter
jbe
cwde
sbb
cmp
or
lds
pop
jmp
idiv
lods
xor
sbb
jne
and
push
inc
int
test
dec
aam
add
pop
add
movs
cmp
sbb
std
cmp
out
mov
imul
in
sbb
or
xchg
mov
xchg
dec
pop
test
gs
pop
mov
aas
push
fwait
in
aad
jb
in
in
inc
test
jne
xor
pop
xchg
xchg
pop
jg
cli
fwait
and
pop
mov
outs
je
in
fst
mov
fwait
add
movs
pushf
push
into
mov
dec
lds
pop
mov
cmc
or
(bad)
dec
cmp
pop
jecxz
fwait
shl
push
mov
jno
jae
cmp
or
movs
mov
inc
push
sbb
fwait
popf
mov
fild
fstp
icebp
and
fwait
sbb
sbb
stos
push
ret
sbb
cmp
mov
adc
aad
mov
ficomp
arpl
cmps
mov
das
(bad)
sbb
adc
(bad)
aad
les
or
addr16
push
lods
inc
loope
xor
jne
rol
(bad)
jne
(bad)
dec
(bad)
leave
inc
pop
or
xchg
popf
inc
push
das
data16
stc
retf
sub
mov
add
lods
leave
lods
lea
jge
push
push
jmp
stc
jge
and
adc
jne
mov
das
add
movs
pop
cmp
inc
sub
test
dec
sbb
jecxz
mov
ins
jle
pop
xchg
xor
sbb
test
adc
std
sbb
fnstenv
pop
mov
and
mov
scas
in
cwde
sub
stos
mov
dec
test
xchg
je
add
ret
test
mov
das
lods
mov
dec
outs
add
and
les
jmp
jae
dec
cmp
adc
pop
into
xchg
push
fucomip
sbb
(bad)
ss
fcmovnbe
jle
(bad)
aam
in
cld
rcr
adc
arpl
dec
adc
and
dec
xor
lods
jns
dec
mov
jl
or
in
out
xchg
xor
inc
push
adc
pop
add
clc
shl
cld
jo
cli
xor
push
jbe
ins
out
xchg
push
rol
ins
cmc
xor
adc
mov
mov
mov
pop
sub
shr
mov
imul
jns
(bad)
out
out
mov
not
lods
imul
fild
sub
xor
add
ins
mov
fcmovu
ds
scas
jmp
outs
loope
adc
cmps
outs
xchg
and
mov
lds
mov
jmp
mov
mov
xchg
enter
sub
out
xlat
pop
faddp
loope
mov
test
cmp
dec
test
inc
pusha
adc
ds
fdiv
mov
inc
mov
ror
mov
bound
push
dec
or
mov
or
fldcw
adc
fs
pop
ss
std
out
mov
pop
jae
out
leave
and
xchg
stc
jae
push
hlt
add
mov
movs
push
push
test
ror
or
iret
fldenv
iret
push
mov
jmp
inc
fidiv
cmp
lahf
aam
ins
enter
add
push
sbb
sbb
iret
rcr
xchg
xchg
div
dec
xor
lods
cmc
(bad)
add
shl
(bad)
mov
mov
inc
ret
add
out
jo
mov
cli
adc
int
inc
xchg
mov
cwde
sub
jecxz
cmps
jb
mov
xor
ret
dec
rol
xchg
ficom
popf
cmp
pop
cmp
sbb
jnp
sbb
retf
pusha
sub
lds
mov
mov
and
fcom
mov
clc
cmps
push
and
jecxz
pop
xor
in
cwde
cdq
lods
and
or
xchg
jp
test
jno
cmps
pop
(bad)
mov
mov
enter
add
push
aaa
add
in
and
movs
cwde
sub
xlat
pop
xor
add
lods
ss
fild
clc
jne
inc
and
xchg
out
popf
clc
mov
xchg
test
ja
sub
push
pop
sbb
push
(bad)
pushf
aas
pop
cmp
mov
aad
xor
mov
sbb
mov
ret
or
pop
bound
or
enter
pop
cli
dec
leave
push
sub
xor
adc
sub
retf
jl
mov
or
pop
inc
add
call
repnz
jmp
sbb
xor
add
xchg
push
out
cdq
inc
mov
xor
out
test
xchg
cmc
rcr
cmovns
sahf
call
(bad)
sbb
push
aaa
or
inc
jo
fbstp
mov
in
cdq
mov
ins
sti
pop
neg
or
popf
stos
sub
cmc
jns
out
push
shl
cmp
fld
cmps
add
jge
pop
add
or
pushf
inc
add
scas
sbb
add
(bad)
cmp
pop
add
ret
mov
loopne
mov
mov
mov
dec
push
inc
sub
dec
xchg
xchg
cs
aaa
scas
loop
cmp
jge
pushf
es
sti
ins
mov
test
push
mov
pop
retf
add
das
loope
pop
mov
and
in
ins
mov
cwde
dec
xlat
mov
cmp
dec
call
push
mov
push
and
lods
sub
int
das
aam
fisubr
test
(bad)
cmp
xor
dec
sub
jp
aad
lods
lahf
or
add
mov
mov
retfw
lds
cmp
sub
push
es
cmp
mov
jmp
jae
pop
or
jae
int
push
in
push
arpl
aam
(bad)
xchg
fbld
jbe
cmp
enter
stos
jnp
call
lods
cmp
scas
leave
sti
pop
retf
mov
dec
ficomp
(bad)
xchg
pushf
xor
and
hlt
fcmovne
cmp
mov
sbb
movs
push
lock
lahf
mov
gs
mov
das
movs
inc
fmul
fs
inc
cwde
sub
shl
shr
shl
xlat
fbld
add
sbb
pop
jge
cmp
fsubr
daa
js
in
dec
leave
fisubr
pop
mov
mov
jne
enter
add
xchg
ja
(bad)
loopne
(bad)
daa
out
or
sbb
and
pop
repnz
lods
mov
imul
cmp
sub
xor
nop
cmp
jg
rol
std
xor
cmp
test
push
pop
mov
mov
adc
xor
add
movs
popf
mov
mov
mov
cmp
es
add
lods
mov
div
inc
mov
push
inc
dec
mov
retf
push
mov
inc
gs
repz
or
mov
sti
daa
inc
mov
ror
leave
repz
push
jg
adc
imul
ss
xchg
push
dec
pop
mov
int3
lods
xchg
inc
and
xor
sti
mov
cmps
fstp
jo
ficom
jg
pop
pushf
(bad)
icebp
leave
ret
jecxz
cli
je
xor
jne
hlt
out
and
push
mov
adc
es
test
or
xchg
push
sub
ficomp
mov
mov
aad
daa
cs
dec
mov
aad
sbb
ins
jns
retf
xor
imul
dec
test
stos
outs
adc
imul
mov
cmps
loopne
mov
sub
jb
sub
fld
inc
and
mov
xor
jecxz
test
cdq
mov
add
out
jno
cdq
and
inc
in
cvtpi2ps
addr16
xor
lods
in
cmp
imul
aaa
xchg
cli
pop
inc
pop
mov
xchg
mov
lahf
cli
das
lahf
repz
cmc
adc
pop
ror
cwde
hlt
cmp
push
push
cmp
xor
retf
pop
dec
shl
nop
in
movs
sbb
aam
jmp
inc
mov
dec
or
sub
test
jg
or
movs
bound
xchg
mov
mov
pop
jne
jecxz
out
mov
int3
cwde
nop
push
mov
(bad)
add
pusha
int3
outs
ja
fist
addr16
cwde
dec
xor
xor
inc
pop
adc
nop
sub
mov
or
in
es
addr16
add
cmp
mov
sub
cmp
stc
test
cmp
inc
movq
adc
pop
outs
adc
outs
cmp
and
cmps
movs
mov
jno
or
shl
ret
xacquire
in
ret
scas
in
outs
outs
mov
lods
and
rcr
dec
or
rcl
sub
pop
(bad)
std
or
dec
adc
scas
cmp
movs
pop
imul
outs
push
clc
adc
test
shl
inc
inc
jae
lahf
push
das
cmp
fild
in
xchg
pop
dec
pop
pop
pop
rcl
sbb
(bad)
inc
mov
sub
pop
stos
xchg
and
int3
in
xor
xor
mov
leave
test
and
adc
je
leave
ror
inc
sbb
and
imul
pop
call
cmp
daa
call
mov
xchg
rcl
sbb
clc
and
rol
jp
rcr
cmove
inc
add
lods
mov
mov
sar
les
and
xor
js
mov
push
ins
bound
or
mov
call
ret
push
xchg
push
(bad)
test
sub
add
mov
sahf
aad
pop
rcl
pusha
rcr
push
dec
(bad)
sub
movs
xor
out
or
or
sbb
or
lea
mov
jmp
jae
arpl
clc
adc
cmp
sub
sbb
dec
test
movs
or
das
inc
jle
sahf
ins
call
mov
cld
idiv
fwait
pop
jle
fbld
push
aam
es
cwde
or
mov
cmps
sar
nop
(bad)
rcr
mov
pop
mov
stos
push
(bad)
arpl
rol
icebp
mov
dec
and
in
push
inc
jae
add
outs
sbb
mov
xor
call
pop
mov
mov
push
pop
push
hlt
xchg
jle
sahf
jmp
cmp
call
inc
test
outs
adc
cs
xchg
movs
fs
mov
adc
pop
fcomp
jae
in
lods
cmp
dec
arpl
inc
test
loop
xor
in
mov
push
mov
leave
jnp
clc
lea
fisttp
mov
mov
(bad)
push
mov
fucomip
push
ins
sbb
jbe
sub
and
rcr
xchg
(bad)
jmp
lds
add
mov
xor
out
xor
xor
shl
retf
mov
xor
xlat
loopne
(bad)
push
xchg
add
aas
dec
ss
call
std
adc
test
add
push
mov
jmp
lahf
jmp
aad
iret
retf
push
add
rol
dec
xlat
mov
call
cdq
jne
sbb
cld
sub
retf
es
lock
repz
xor
out
mov
sbb
data16
xchg
cmp
shl
js
adc
push
inc
pushf
gs
cdq
nop
push
int
or
adc
(bad)
or
jne
xchg
je
xchg
outs
inc
pop
add
push
adc
mov
ss
xor
mov
aaa
mov
ficom
mov
mov
ja
push
int
imul
and
popw
aaa
(bad)
jmp
adc
pushf
ror
stc
mov
popa
cwde
jne
mov
stc
pushf
xor
mul
fist
sub
or
add
mov
loopne
jp
dec
xor
(bad)
and
lods
pop
lea
out
and
dec
test
sbb
imul
add
adc
fs
rol
xor
mov
leave
jecxz
into
sbb
add
test
xchg
xchg
dec
adc
push
dec
jmp
in
xchg
fwait
shl
or
fcomip
dec
fistp
scas
into
in
dec
icebp
aad
and
lock
mov
cmps
push
dec
gs
push
sub
mov
arpl
aam
lock
sbb
adc
fstp
lods
les
(bad)
sub
imul
fmul
jno
mov
outs
shl
push
cmp
scas
mov
ret
cmp
out
xchg
pop
mov
push
jnp
cmp
imul
mov
in
rol
retf
cmp
movaps
sub
push
sbb
xor
in
out
js
aaa
dec
addr16
inc
daa
fisub
sub
inc
xchg
rcr
(bad)
ror
push
loop
dec
and
leave
aas
mov
fistp
adc
add
add
clc
fbstp
add
xchg
and
adc
push
sub
mov
or
pop
mov
inc
call
in
jge
mov
sar
adc
nop
loope
stos
pop
cmps
or
shr
push
sbb
(bad)
sub
dec
xchg
mov
test
jle
cmp
adc
xchg
retf
add
push
jnp
pop
mov
lea
mov
(bad)
aaa
aad
and
in
mov
jno
outs
xlat
std
mov
not
pop
repz
fild
add
idiv
add
cdq
xor
(bad)
xor
jns
popa
lock
inc
dec
mov
inc
(bad)
jmp
dec
and
xchg
in
adc
loopne
adc
sahf
cdq
inc
dec
out
imul
push
in
test
xor
test
push
inc
addr16
scas
inc
pop
xor
(bad)
push
pusha
icebp
mov
inc
aad
or
mov
mov
xor
call
and
or
cmc
cld
xchg
inc
mov
push
push
fcmovnb
inc
xor
or
pop
inc
repz
cwde
or
inc
push
daa
outs
mov
xchg
xchg
mov
mov
xchg
pop
xchg
int3
xlat
ror
fs
mov
cmc
mov
xchg
das
ins
sub
and
and
add
aaa
(bad)
popa
and
fnstsw
sub
fdiv
mov
jle
aam
dec
or
push
xor
adc
jp
leave
fadd
ja
xchg
das
xor
rol
lds
leave
inc
jb
sar
xor
pushf
(bad)
pop
mov
mov
mov
pop
jl
xchg
jle
cmps
retf
sub
adc
and
iret
cmp
packssdw
ret
ror
fwait
xor
popa
(bad)
rcl
ss
popa
sti
iret
sbb
lods
inc
jp
inc
ret
je
daa
popf
xchg
mov
test
xchg
add
mov
sahf
in
cmp
lea
mov
dec
cmc
cmps
or
(bad)
sbb
rcl
aas
call
adc
dec
aas
push
and
inc
arpl
sub
and
repz
rcr
or
dec
add
icebp
sub
inc
movs
(bad)
mov
call
jo
dec
push
fwait
xchg
out
outs
sub
or
movs
push
jl
jp
sub
scas
retf
pop
das
inc
xchg
pop
inc
xchg
cmp
xor
shl
ror
enter
mov
and
addr16
pop
ins
lahf
outs
cmps
clc
xor
and
mov
pop
jecxz
cmp
pop
cmp
repnz
xchg
int3
shr
sar
iret
aaa
rcr
push
sub
sti
mov
fsubr
sub
cmp
aad
addr16
sbb
mov
out
xchg
xchg
(bad)
out
jecxz
fsubr
pushf
add
or
mov
push
iret
mov
dec
mov
jge
iret
cli
(bad)
retf
cld
mov
sub
popf
test
shl
cs
add
cmps
test
or
pop
mov
sbb
loopne
jmp
ret
dec
xchg
retf
es
sub
sbb
mov
std
scas
ficomp
movs
test
pshufw
test
test
rcr
xor
xchg
(bad)
dec
jne
xchg
and
jnp
sahf
jo
cmp
dec
pop
mov
mov
loop
sbb
popa
or
add
mov
(bad)
js
je
jg
jp
jb
fisubr
ror
add
ret
push
mov
pop
inc
lods
mov
mov
xchg
mov
dec
test
(bad)
cwde
xchg
pop
outs
inc
enter
(bad)
out
mov
shr
fdiv
in
push
jmp
mov
cmp
cmc
jno
leave
push
leave
das
int3
daa
popf
pushf
cmp
add
xor
mov
ins
jo
or
and
pushf
sub
inc
out
dec
jle
fsubr
push
fcmovbe
loop
fwait
pop
dec
stos
sbb
pop
loop
test
xchg
pop
(bad)
js
sbb
(bad)
sub
xor
js
(bad)
pop
rol
ds
or
or
test
and
shl
jecxz
xor
ficomp
rol
data16
xchg
test
push
lods
adc
jnp
or
ja
cmp
into
inc
pop
call
dec
pusha
sahf
inc
fcomp
mov
test
add
aam
dec
inc
xor
test
mov
adc
mov
jb
hlt
adc
in
mov
xchg
outs
out
stos
test
pop
iret
ins
mov
daa
jb
out
jo
ret
sbb
fwait
outs
outs
inc
in
jno
pop
call
dec
lods
idiv
sbb
shr
int
cs
mov
gs
psrld
mov
lods
cs
push
hlt
sbb
inc
xchg
push
or
and
gs
in
or
jno
cld
out
retf
addr16
into
sti
ret
pop
inc
retf
xchg
xchg
stos
in
jl
push
dec
call
sbb
inc
dec
test
mov
lea
mov
mov
jmp
in
push
shl
cmp
jmp
jne
cdq
add
cmp
(bad)
adc
jno
in
xor
jg
push
cmps
xchg
pop
xchg
mov
sahf
xchg
fild
sbb
pop
out
loopne
sub
and
xor
repnz
and
lahf
cmps
push
fwait
inc
mov
pop
push
mov
inc
inc
xor
pop
adc
adc
aad
xchg
cmp
mov
xchg
aad
adc
pop
rol
mov
push
sbb
test
mov
pop
mov
jle
int
out
mov
add
sbb
movs
js
dec
ss
xchg
mov
sbb
push
sub
xchg
cdq
pop
mov
mov
in
mov
addr16
nop
add
ret
in
pop
xor
cwde
test
inc
inc
scas
(bad)
loop
out
sub
push
adc
inc
or
addr16
mov
pop
dec
inc
ffree
gs
adc
cmp
push
loopne
popa
popf
popa
xchg
mov
mov
aam
mov
push
outs
loope
hlt
push
ret
pop
fld
cmp
cmp
jnp
or
sub
mov
xor
xchg
fucomi
rcr
test
das
adc
inc
adc
icebp
jecxz
mov
mov
(bad)
ret
xchg
into
nop
stc
sub
or
xlat
sbb
push
cmps
mov
idiv
cmp
mov
std
movs
rcl
out
movs
sti
add
ficomp
fbstp
add
inc
cld
cwde
push
ins
loopne
ss
mov
cmps
pop
loop
jl
xor
xor
or
mov
lahf
shl
(bad)
mov
loope
inc
call
xor
nop
test
je
mov
jo
sub
das
es
lods
fimul
jl
cmp
into
pop
and
dec
scas
xlat
xchg
(bad)
push
lsl
jecxz
repnz
mov
add
jns
fsubrp
pop
sar
pushf
test
sbb
cmc
add
repz
pop
std
xchg
add
mov
ja
add
lods
adc
dec
out
mov
inc
aam
push
ins
(bad)
sti
cld
imul
inc
movs
jle
scas
cwde
xchg
into
retf
cs
push
scas
lea
xchg
xchg
inc
lds
add
fdivr
daa
daa
cld
(bad)
push
adc
and
movs
sti
test
sub
pop
int
call
popa
lock
dec
mov
fisub
clc
hlt
pop
in
mov
xor
icebp
sub
out
and
add
and
inc
xchg
repnz
mov
fstp
pop
dec
and
stos
sub
dec
or
scas
in
pop
ret
adc
hlt
stc
xlat
pop
fiadd
and
ds
adc
lods
or
cmp
test
xor
sub
ret
mov
inc
scas
xor
push
mov
stos
or
xchg
sbb
jb
cdq
cmc
mov
lods
mov
cmps
and
not
inc
adc
sbb
xor
in
ret
push
dec
jmp
mov
add
jge
dec
scas
scas
cli
mov
cwde
out
mov
mov
sti
repz
xchg
scas
outs
outs
xor
pop
popaw
es
sti
in
jmp
dec
movs
dec
mov
mov
sahf
fistp
jbe
add
fcomp
fwait
in
sub
add
sub
cld
in
cmp
test
aaa
cmp
push
push
outs
jecxz
les
pop
pop
push
cs
fcom
push
das
mov
cmp
cli
mov
dec
xor
les
aaa
int
xor
mov
push
jecxz
(bad)
inc
mov
cmp
mov
fst
jne
mov
mov
or
std
sbb
neg
jae
fcomp
invd
shl
fbstp
jno
mov
daa
push
fxch
int3
push
movs
stos
rol
aam
in
push
xor
fist
out
push
in
or
sbb
out
fild
iret
out
push
push
fadd
pop
inc
jb
push
jp
or
adc
clc
sub
inc
mov
or
neg
(bad)
sbb
jne
ins
dec
rcr
int3
cmps
fdiv
shr
dec
adc
adc
test
sahf
fild
jnp
neg
jp
push
sub
adc
test
(bad)
clc
scas
fnsave
shl
xchg
push
mov
push
cmp
pusha
jg
arpl
(bad)
sub
movs
mov
int
adc
or
rcl
in
push
xchg
jb
out
mov
jg
lods
xor
or
xchg
add
dec
mov
or
cmp
les
idiv
cvtdq2ps
fst
lahf
push
mov
pop
mov
in
mov
cmp
dec
sbb
mov
and
jae
dec
dec
jb
jo
sub
je
fnstcw
pop
loope
das
adc
mov
movsx
popa
loop
jecxz
pop
jmp
jb
fidivr
outs
ror
sub
xchg
mov
and
loop
cmp
add
cmc
ror
mov
sub
jl
stc
shl
dec
cmp
xor
push
add
xchg
inc
jecxz
cs
fistp
shr
aam
add
and
loop
arpl
mov
mov
push
jno
sahf
xor
std
mov
sti
test
(bad)
das
add
push
jns
fild
jno
mov
and
dec
popf
out
fldenv
and
inc
aas
push
sub
inc
loope
iret
sub
pop
sar
ins
mov
call
fcmovbe
imul
pop
push
stc
repnz
pushf
adc
icebp
xchg
sbb
or
fwait
jmp
ret
fiadd
call
leave
jle
sub
xor
xor
push
mov
and
iret
fwait
mov
mov
fstp
call
enter
inc
cmps
pop
jne
repz
js
pop
mov
mov
outs
std
adc
nop
fsub
mov
lods
inc
icebp
pusha
ret
mov
jg
ficom
adc
rcl
pop
dec
xchg
in
stc
aad
or
stc
aas
adc
cld
xchg
add
fstp
push
cmc
repnz
push
sbb
je
cmp
and
sbb
clc
ins
aaa
icebp
add
dec
adc
rol
call
or
scas
jmp
add
adc
mov
sub
mov
inc
shr
and
adc
fild
test
inc
(bad)
add
es
ins
mov
push
lds
lods
jnp
(bad)
sub
mov
outs
inc
(bad)
pop
adc
pop
out
mov
push
adc
mov
jmp
inc
dec
push
jo
sub
mov
push
fdiv
stos
int
mov
test
jg
push
imul
jb
out
aad
arpl
add
das
add
jle
pop
in
and
or
and
or
loop
lods
sahf
or
cmps
pop
mov
and
and
test
stos
sbb
(bad)
retf
adc
cmp
lea
xchg
cmp
or
test
jg
dec
pop
add
inc
pop
dec
in
dec
mov
pop
loopne
sub
daa
xchg
ins
aaa
pop
cs
mov
scas
das
lahf
push
push
or
ds
aas
adc
cmp
adc
sub
daa
iret
cdq
mov
cmps
pop
pop
iret
mov
jecxz
int
imul
adc
ja
xchg
out
cmp
fmulp
mov
xchg
and
mov
and
ja
add
in
pop
test
jns
cmp
and
cmp
out
jno
inc
loope
leave
rol
bswap
jecxz
in
jg
mov
sbb
cmps
lods
sub
dec
sti
lods
add
inc
inc
inc
mov
sbb
xor
in
in
adc
repz
fnstcw
lahf
cli
nop
xchg
std
or
sar
jg
jnp
inc
mov
call
mov
in
pop
inc
xchg
adc
inc
cmp
enter
clc
loopne
and
jle
in
cwde
add
pop
jmp
jp
sub
out
mov
adc
mov
or
loopne
push
rcr
test
bound
nop
call
sar
jp
je
xchg
js
jo
rol
xlat
fcomp
call
mov
pop
daa
rol
push
imul
gs
push
xchg
retf
mov
pusha
pop
jl
out
xchg
(bad)
rcl
sbb
cmp
pop
call
xchg
and
lahf
or
clc
loop
adc
push
loopne
call
bound
sahf
es
cmp
jo
mov
inc
mov
aam
mov
loop
in
mov
and
cdq
inc
jns
cmp
push
stos
sbb
hlt
and
cmp
jne
sub
jmp
aas
clc
ret
xchg
lea
int
into
adc
dec
lea
aas
adc
push
je
clc
test
imul
and
dec
aaa
lock
cld
pushf
ret
dec
clc
xor
and
popf
dec
loopne
iret
pop
lahf
aad
shl
xchg
ror
pop
and
iret
retf
cmp
or
fild
pop
scas
in
aam
loop
sub
lods
bound
push
in
xchg
fwait
mov
sub
pop
mov
shr
sbb
push
cmp
out
cmp
scas
jg
mov
in
cmp
into
sub
out
loop
imul
pop
pop
jg
cmp
or
ret
sub
out
dec
cli
imul
fcomi
call
dec
cmp
pop
add
inc
leave
fs
ficomp
into
jp
push
sahf
xor
sub
sti
mov
xchg
mov
lea
push
mov
les
(bad)
shl
aam
add
test
hlt
repnz
pushf
jle
or
movs
adc
and
(bad)
ss
xchg
out
sahf
mov
push
xor
mov
mov
or
retf
fistp
push
test
mov
dec
rcr
jae
sub
xchg
dec
add
dec
daa
aad
push
xchg
jmp
sub
xchg
sbb
test
or
addr16
mov
add
les
adc
stos
inc
cmp
arpl
fst
aam
retf
adc
lods
jle
mov
jmp
push
call
sbb
xor
in
add
daa
fisubr
pop
ret
ror
mov
loop
push
mov
xlat
push
jb
jns
push
pop
sub
rcl
outs
mov
iret
scas
aad
fcomp
fwait
xchg
add
cmp
cwde
xor
in
add
bound
icebp
add
mov
cmps
gs
jmp
sbb
outs
pop
cmp
sbb
mov
jae
clc
rcr
add
or
xchg
out
je
add
and
jecxz
out
pop
sbb
mov
add
jne
ret
pop
dec
inc
das
dec
repnz
fsubr
push
fisub
xchg
push
js
add
addr16
addr16
lods
in
call
jno
add
pop
mov
cmc
ss
cmps
xchg
out
and
movs
sub
test
jg
push
sahf
or
popa
in
ret
aas
sti
sbb
or
jg
mov
cmc
adc
mov
imul
jge
aad
push
sti
add
outs
aas
fisubr
mov
adc
mov
jbe
pop
retf
add
call
and
add
(bad)
xchg
jae
shl
jl
test
mov
mov
mov
mov
sub
jno
adc
mov
xchg
xchg
push
pushf
retf
jno
inc
push
cmp
or
mov
mov
(bad)
fdivr
into
cld
pop
mov
cmps
imul
out
mov
fwait
jecxz
daa
push
std
dec
retf
inc
loope
jmp
pop
inc
sbb
sbb
jmp
bound
xor
push
sub
out
cmc
and
push
and
enter
ret
adc
sar
dec
mov
imul
xchg
mul
fimul
mov
inc
inc
ja
int
pop
inc
cmp
inc
add
pop
fs
loope
jae
cdq
ja
fs
cli
mov
sbb
mov
ins
inc
mov
fnstenv
push
scas
fidiv
sbb
not
mov
movs
out
mov
addr16
retf
fsubr
jmp
sub
push
jle
and
fldenv
dec
test
dec
jl
lods
outs
ds
loope
shr
add
ss
loopne
mov
xlat
cld
ret
pop
lock
test
and
arpl
cmc
dec
in
gs
and
pop
xor
rcl
push
xor
ror
sub
shl
frstpm(287
mov
push
add
push
and
inc
or
mov
adc
sbb
test
xchg
inc
xor
or
mov
test
adc
ins
sub
mov
rol
cmp
sub
and
cld
addr16
(bad)
or
nop
adc
mov
out
cmps
sbb
test
xchg
(bad)
and
and
jno
mov
ficom
stc
popf
cmp
sub
mov
dec
sub
js
dec
shl
mov
push
ds
push
push
call
sub
sub
call
xchg
std
xchg
es
jp
mov
ins
test
in
loopne
adc
jno
mov
sbb
ins
(bad)
lock
push
jle
adc
je
in
cmp
sub
and
inc
mov
xchg
stos
int3
je
in
imul
test
daa
call
xchg
lods
cs
cmp
js
or
popf
test
xchg
push
sbb
sbb
or
push
xor
cmps
adc
jmp
lea
cmps
xchg
mov
mov
leave
ins
les
clc
pop
mov
retf
jo
adc
sub
inc
lahf
xchg
xor
jg
loopne
(bad)
jo
adc
xor
int
popa
(bad)
das
and
pop
sub
mov
pop
fst
inc
cmp
dec
psubsb
je
xor
push
rcr
in
ret
push
cli
push
xchg
dec
inc
sub
pop
mov
xor
test
sub
cmp
test
lods
cld
and
out
repnz
jnp
adc
les
mov
xchg
loope
fwait
mov
adc
mov
jge
xchg
arpl
cld
add
sar
push
dec
dec
les
adc
fisubr
arpl
lods
mov
add
into
sbb
mov
lea
xor
stos
add
addr16
or
xchg
int
xor
ins
jg
and
(bad)
rcl
pop
mov
stos
movs
leave
add
add
or
dec
xchg
iret
mov
mov
mov
fld
(bad)
in
xchg
test
xor
or
xor
jbe
sbb
loop
not
jl
pop
adc
pushf
mov
jmp
or
mov
das
sbb
sub
mov
mov
mov
imul
out
js
mov
mov
int
into
out
push
repnz
movs
loop
neg
mov
aam
inc
dec
xchg
mov
pop
std
ret
inc
rcl
sub
sub
icebp
fadd
loopne
sbb
cli
loope
(bad)
mov
cmp
aas
(bad)
mov
pop
stos
inc
add
test
xchg
popf
ror
ins
cli
aam
lods
jnp
fsubr
adc
movs
sub
mov
fisubr
sub
sahf
or
lock
and
jno
lock
jmp
pushf
push
xchg
(bad)
mov
fiadd
lods
cmp
cdq
or
or
(bad)
mov
xchg
sbb
inc
aaa
jns
adc
int
nop
int3
cld
dec
sub
fdiv
cmp
sub
daa
pusha
out
xchg
or
mov
ds
in
outs
ret
in
nop
xchg
pop
sub
inc
setae
pop
sub
in
mov
cwde
loopne
leave
mov
inc
inc
cwde
sbb
nop
push
lods
sbb
cmp
xor
jge
mov
or
sbb
mov
xchg
pop
adc
mov
sbb
int
es
pop
push
sub
sbb
shr
call
call
(bad)
fxch
clc
mov
fwait
push
cs
dec
push
ret
sti
sub
lods
cmp
sar
inc
add
cdq
int3
jl
xor
dec
sbb
xlat
mov
fisubr
or
aam
call
cmps
push
jbe
sub
sub
xchg
in
iret
fdiv
mov
xchg
xor
inc
push
in
pop
push
xor
or
push
mov
mov
lea
mov
out
shl
call
cmp
ja
push
push
or
pop
or
pop
pop
and
push
pop
out
mov
add
jae
pop
ret
iret
repz
aas
adc
xchg
mov
xor
ins
dec
dec
add
mov
and
mov
mov
cmp
(bad)
(bad)
shl
xchg
shl
sub
clc
repnz
push
cmp
cs
cmps
jns
call
xor
scas
lods
movs
or
(bad)
and
inc
repz
jns
out
and
dec
xchg
jl
push
mov
and
or
mov
add
dec
mov
aaa
xchg
scas
xor
out
repz
dec
out
pop
cmp
cs
or
enter
or
setge
es
std
dec
push
das
sbb
jle
inc
xchg
stos
in
dec
push
sub
sub
repz
fld
int3
or
lahf
mov
adc
out
mov
dec
pop
ins
lods
add
lock
shr
xor
stc
cmp
ins
(bad)
mov
add
xor
jp
cs
cmp
fnstsw
fwait
movs
js
or
jae
xchg
pop
push
mov
arpl
sti
popa
cs
push
dec
push
aam
add
push
pusha
jo
das
jmp
mov
xchg
sbb
mov
retf
inc
jge
xor
sub
dec
mov
xor
repnz
(bad)
push
loope
push
into
sub
jbe
jb
mov
outs
daa
mov
adc
jge
movs
aam
or
out
add
mov
xor
icebp
push
cmp
daa
push
xchg
(bad)
js
nop
dec
cli
retf
sbb
sub
fwait
ror
out
std
jmp
sub
or
pop
rcr
nop
or
xchg
je
and
push
mov
test
push
pop
test
dec
xor
xchg
scas
cmps
aam
data16
sub
je
adc
sbb
mov
mov
sbb
push
push
imul
movs
rol
imul
jmp
xchg
mov
je
ds
test
jp
scas
es
mov
ins
pop
(bad)
dec
pop
loop
lahf
js
ja
test
ja
dec
cmp
adc
dec
(bad)
push
mov
add
movs
movs
fidivr
inc
test
jle
pop
adc
les
shl
stos
(bad)
fwait
jnp
adc
mov
mov
pushf
inc
iret
fstp
xlat
(bad)
les
in
fbld
mov
mov
and
jle
mov
mov
call
and
sub
inc
add
out
cwde
mov
in
jmp
repnz
bound
mov
int
jecxz
test
pop
and
cs
sti
add
test
retf
inc
(bad)
pop
dec
xchg
or
xor
dec
fst
pusha
sub
dec
movs
(bad)
daa
cmp
daa
out
jne
ss
es
cmp
mov
sahf
and
add
xor
or
sub
cmp
cmp
lods
adc
mov
inc
dec
xor
xor
test
int
adc
stos
std
dec
pushf
je
imul
ss
pop
cmp
cmp
cmps
inc
inc
mov
xchg
leave
dec
js
mov
rcl
pushf
and
loopne
jg
push
scas
and
xor
xchg
pusha
in
shr
sbb
fcmovnbe
or
sar
jbe
jmp
mov
adc
aaa
inc
movs
pop
lods
ins
xlat
(bad)
jg
and
inc
jmp
sub
jl
or
fcom
fsub
xchg
sti
repnz
cmp
call
and
outs
sar
inc
movs
mov
repnz
sbb
inc
adc
pop
es
mul
repz
dec
jge
das
inc
sub
popa
outs
test
bound
xor
add
cmps
fnstenv
cs
scas
cmp
int
mov
lds
jmp
adc
mov
int3
shr
fs
into
test
mov
ret
bound
cli
fstp
test
mov
jns
out
(bad)
and
dec
or
adc
mov
adc
jmp
rcl
push
adc
mov
movs
(bad)
fnsave
cmp
push
ror
xchg
cs
xor
int
inc
sub
push
mov
or
addr16
(bad)
fsubr
push
imul
jo
mov
mov
hlt
pop
or
mov
ss
popf
dec
jbe
neg
adc
leave
fld
pop
ss
mov
leave
cld
ins
test
jmp
jg
dec
mov
sahf
push
pusha
mov
jae
cmps
leave
add
sub
xchg
cdq
daa
and
xchg
jmp
test
leave
js
das
(bad)
add
out
xchg
push
xchg
pusha
dec
pop
add
dec
inc
xor
cld
xchg
shr
icebp
sbb
push
out
lods
pop
sbb
cmp
cmp
xchg
mov
mov
xchg
cmp
jmp
mov
ds
fnstcw
nop
daa
cmc
xchg
jns
mov
mov
sub
scas
inc
jecxz
js
scas
js
in
rcl
mov
or
mov
xor
out
jns
loope
or
sbb
push
cmps
xor
fs
mov
cmp
and
jne
pop
mov
add
xor
jns
call
mov
rcr
scas
mov
mov
inc
push
idiv
fmul
std
xor
ret
in
inc
es
xchg
pop
scas
es
pop
push
cli
test
fistp
fs
jo
adc
push
test
pop
mov
dec
add
adc
add
xor
rcr
fnstenv
push
popa
jge
les
add
movs
shl
dec
sub
cmp
mov
jns
dec
(bad)
shl
xor
cmp
cmp
test
push
add
into
push
call
mov
inc
stc
push
xor
scas
data16
pop
xor
mov
jbe
inc
mov
sar
call
leave
lds
in
ins
in
lock
lahf
movs
sar
and
fwait
adc
push
jo
push
adc
dec
xchg
sub
adc
addr16
jg
inc
sub
push
mov
sbb
mov
mov
les
push
enter
lock
push
cmps
loopne
add
mov
sbb
fcmovb
fwait
mov
mov
pushf
mov
je
mov
mov
fstp
mov
jl
pushf
clc
dec
or
cld
mov
push
les
mov
fsubr
cmps
(bad)
xor
scas
pop
jl
push
pushf
xchg
les
jecxz
jo
scas
call
inc
cmps
sub
add
push
sub
and
clc
ins
(bad)
sahf
loope
mov
xlat
test
mov
push
nop
cmp
inc
cmps
push
push
rcr
icebp
popf
dec
cwde
jo
mov
in
gs
push
scas
jle
adc
or
adc
std
push
neg
add
fistp
in
push
mov
int3
sbb
ds
push
dec
pushf
mov
ds
jmp
sub
ror
or
rep
pop
fadd
sbb
xchg
mov
mov
or
mov
lods
add
cmp
in
xor
jo
test
cmp
and
push
adc
mov
stos
xor
jno
fdiv
add
jmp
loope
mov
inc
scas
mov
mov
clc
inc
push
xor
jge
cmp
pop
call
jb
xlat
rol
push
inc
cli
xlat
mov
rcr
dec
lods
mov
pop
xchg
mov
sub
inc
cmp
cmp
sbb
or
sub
jne
ret
imul
jbe
lods
cmc
push
adc
daa
cmp
and
vcvtss2usi
mov
add
sar
fsub
fisttp
xchg
dec
jns
cmp
sub
xlat
std
add
leave
add
mov
cmp
cwde
and
bound
lock
shr
mov
cdq
es
fisubr
out
(bad)
mov
xchg
(bad)
sbb
pusha
mov
push
imul
and
stc
cmp
bound
push
push
push
pusha
xchg
lods
inc
ins
sub
fxch
cwde
outs
loope
xchg
push
inc
cld
imul
inc
cmp
in
pop
xchg
push
pop
outs
push
jns
loope
dec
or
sub
adc
push
dec
inc
outs
mov
jg
xlat
rcl
loop
test
movhps
in
cld
ror
sub
xchg
mov
stos
push
cdq
adc
ret
fcomp
mov
popa
sahf
xchg
jo
cmp
sub
into
in
jbe
daa
mov
push
jns
pop
push
inc
push
stc
lahf
xlat
jp
and
sub
and
mov
jnp
clc
cmp
push
push
movs
(bad)
ret
or
fistp
inc
ds
or
adc
icebp
adc
or
movs
sub
or
cmp
xchg
sub
cld
fcom
jo
mov
fs
imul
cmp
mov
jle
pop
sbb
(bad)
fild
dec
loop
dec
push
inc
mov
push
jmp
mul
fsub
push
pop
out
ficom
push
(bad)
retf
pop
pop
scas
push
and
aas
mov
sbb
xchg
into
cmp
dec
push
repz
mov
jle
enter
iret
sbb
sahf
lods
shl
lea
(bad)
in
push
ins
sar
outs
movs
addps
mov
in
mov
leave
ins
ins
and
(bad)
stc
xor
jl
js
ins
xchg
pop
sub
fbstp
push
mov
scas
int3
aaa
jae
and
push
and
arpl
and
test
enter
(bad)
in
or
pop
push
in
inc
(bad)
addr16
cmps
sub
pop
mov
cld
bnd
adc
pop
mov
mov
xchg
mov
cli
stos
add
out
inc
(bad)
sub
push
xchg
(bad)
pop
sbb
ret
addr16
pop
or
jnp
int
rcr
cmp
pop
xor
mov
fs
stos
std
add
jge
jb
movs
jge
dec
es
inc
push
inc
pusha
cwde
lea
sbb
mov
jns
rcr
fwait
in
fucom
push
dec
mov
inc
sub
bound
repz
jmp
add
sub
xor
mov
cmp
loop
bound
jmp
cmp
stos
addr16
inc
test
out
shl
and
sub
es
pop
mov
(bad)
rol
je
fisub
mov
push
jmp
or
fld
imul
ror
add
cmps
xchg
out
repz
lods
push
out
out
dec
inc
and
cdq
cmp
push
inc
aam
add
popa
icebp
movs
sbb
add
and
xor
jno
pop
adc
out
call
add
out
add
cmp
dec
or
aad
adc
and
mov
aas
xor
xor
dec
mov
mov
add
push
add
add
sub
test
(bad)
mov
stos
dec
push
jno
mov
add
ins
pop
repz
aad
cmp
xchg
rol
jle
(bad)
es
mov
cwde
mov
cld
dec
cmp
cdq
inc
into
sbb
inc
mov
push
cmp
fisubr
mov
mov
mov
test
push
cwde
jl
jb
inc
xchg
rcl
call
mov
cmp
xchg
test
cmp
into
xor
adc
cmp
aam
jno
add
sub
aas
jb
cmps
(bad)
push
mov
cmps
aad
sub
jmp
out
lahf
sahf
jmp
not
mov
ror
mov
out
push
add
int
pop
and
fistp
cmps
bound
jp
gs
ss
sbb
outs
sub
aad
xchg
inc
inc
push
dec
ficom
inc
dec
clc
inc
ins
je
add
fsub
push
add
adc
popf
sub
lahf
arpl
inc
cmp
outs
retf
mov
aam
pop
loope
jecxz
mov
add
mov
xor
loop
inc
movs
and
fimul
lods
into
or
or
stos
dec
sti
imul
sti
xchg
arpl
je
sub
pusha
rol
push
jbe
aam
mov
pop
mov
out
sbb
mov
push
(bad)
lods
lahf
lds
mov
dec
sbb
out
xchg
out
fiadd
or
mov
leave
or
mov
xor
imul
mov
adc
jl
push
mov
call
fbstp
push
and
push
loopne
std
lods
nop
ror
xor
pop
pop
nop
mov
mov
mov
or
cmps
ret
pop
stos
lds
jns
cld
inc
loop
fnsave
in
fcomi
lods
or
jmp
(bad)
in
xor
repnz
xchg
jle
mov
test
ja
imul
gs
xchg
gs
xchg
stos
mov
in
test
out
loop
arpl
xchg
add
xor
mov
data16
jmp
repz
push
inc
jbe
sub
push
pop
inc
or
outs
mov
inc
aaa
repz
jle
das
aas
pop
or
pop
daa
pop
and
cmp
ret
cmp
cmp
fld
popf
sbb
cmp
xchg
sub
mov
xor
push
cld
inc
add
jnp
std
shl
adc
mov
fnsave
and
mov
xlat
inc
into
jmp
or
xor
(bad)
call
add
ins
xor
dec
pop
xchg
and
test
aas
add
(bad)
repz
adc
or
push
addr16
mov
pop
xchg
movs
lds
add
scas
ss
xor
add
into
dec
sub
or
std
jns
idiv
rcl
xchg
out
mov
call
in
ja
pop
jo
(bad)
xor
jo
loopne
sub
jo
sub
sti
icebp
(bad)
mov
cmp
mov
and
add
(bad)
jecxz
and
add
fistp
mov
call
push
les
jmp
sbb
add
je
std
jns
out
dec
mov
js
cmps
das
mov
sti
(bad)
movs
scas
cdq
std
pop
cmp
pop
rcr
fsubr
push
lock
in
mov
inc
fadd
mov
dec
rcl
imul
in
adc
aam
jge
iret
mov
fidivr
unpcklps
or
sub
push
dec
adc
or
mov
push
pop
jl
sub
cmc
sbb
scas
fsub
push
inc
xor
or
add
das
lock
add
cmps
fstp
leave
and
jbe
jge
mov
jmp
pop
test
and
mov
lods
cdq
(bad)
imul
leave
cmps
out
xor
mov
ss
pop
movs
arpl
aaa
sbb
sbb
idiv
and
sub
and
sbb
loop
(bad)
xlat
(bad)
inc
pop
inc
and
hlt
out
pop
adc
jns
xor
xchg
into
jge
xchg
out
add
and
adc
sbb
sahf
rcr
pushf
xchg
mov
aam
retf
sub
lods
stc
dec
adc
mov
dec
lea
gs
dec
pop
loopne
leave
jp
push
sahf
mov
push
ds
pop
or
jg
movs
jp
pop
into
shl
test
shl
push
and
mov
fs
out
sbb
mov
push
cmp
movs
test
inc
cmp
shr
(bad)
in
pop
sti
dec
cwde
stos
movs
mov
or
fmul
neg
xchg
mov
push
fsubr
xor
mov
jne
or
inc
retf
test
mov
jbe
bound
fucom
ss
mov
rcr
mov
and
dec
pop
in
lods
enter
cmp
inc
lea
test
cmp
mov
in
dec
lahf
lahf
add
jg
js
stos
pop
aad
mov
mov
or
mov
(bad)
mov
fsub
cmps
or
das
ud1
test
jb
adc
hlt
retf
fstp
jle
sub
movs
adc
xor
repnz
pop
push
jo
in
das
les
and
shr
cdq
test
jp
add
xchg
jbe
add
imul
sub
dec
xchg
and
inc
xor
push
xchg
add
mov
movs
out
outs
je
lea
mov
xchg
int3
retf
pusha
les
mov
and
push
test
xor
outs
pop
fist
sub
adc
popa
test
pushf
sub
daa
adc
inc
sbb
gs
sahf
rdpmc
push
adc
adc
hlt
dec
mov
cmp
and
fidivr
(bad)
ins
aaa
jge
lahf
or
rcr
clc
(bad)
in
cmp
in
mov
xchg
or
jns
cmp
test
(bad)
mov
mov
lock
cmps
xbegin
xchg
imul
jmp
cmc
popf
sar
pop
aam
cmp
sbb
mov
push
hlt
stos
push
push
mov
into
outs
mov
jl
add
rol
push
ficom
das
mov
and
jno
das
mov
jno
fidivr
ins
push
cmps
stos
popa
cmp
xor
inc
sub
or
cmp
mov
jmp
xchg
push
outs
leave
cwde
in
pop
add
xor
adc
push
leave
xchg
push
pop
mov
cwd
mov
(bad)
sbb
add
inc
cld
repz
xchg
jns
fisubr
push
les
pusha
xlat
sub
sahf
aaa
loope
loopne
xchg
mov
sbb
out
lock
mov
pop
ds
xchg
in
jp
fidiv
(bad)
and
mov
repz
mov
add
jg
add
add
mov
mov
sub
push
into
stc
movs
out
hlt
scas
sub
clts
and
fistp
pop
fld
pop
call
es
pop
adc
das
cld
mov
or
fadd
xchg
mov
inc
or
test
fwait
leave
mov
push
in
sbb
inc
cmps
pusha
adc
xchg
pusha
mov
pop
inc
not
cmps
xor
pop
out
fwait
retf
or
mov
pop
rcr
ins
cmp
sub
cmps
je
ins
mov
(bad)
fadd
add
jge
fnstsw
mov
jmp
sub
bnd
rol
sub
(bad)
dec
ret
mov
ror
ret
jmp
cmc
ja
movs
ret
iret
sub
cs
call
sub
das
jnp
pop
shl
leave
xchg
mov
movs
jbe
mov
lods
pop
sub
rol
mov
mov
outs
dec
movs
int3
and
inc
xor
mov
cs
cmps
cmp
in
stos
aas
jno
pop
pop
dec
inc
dec
lods
push
call
clc
and
dec
jp
pop
inc
std
push
push
aaa
outs
cmp
jmp
cdq
sbb
adc
movs
adc
adc
adc
push
mov
push
add
or
scas
pop
fcmovnbe
push
sbb
add
xor
popf
inc
cmp
push
mov
(bad)
cld
ins
cmps
mov
cld
fst
shl
jl
std
ins
clc
push
xchg
pop
sbb
ja
and
jle
push
je
dec
ror
sar
jg
mov
js
push
jno
add
(bad)
dec
cmps
cmps
push
aas
neg
dec
daa
jp
xchg
adc
aas
pop
sub
and
outs
sbb
outs
push
push
mov
or
icebp
ret
pop
imul
ins
xchg
xor
lods
pop
cmps
(bad)
dec
pop
sbb
dec
inc
mov
cli
add
and
in
dec
outs
jge
sub
leave
fsubr
outs
movlhps
fwait
xchg
lds
adc
stos
scas
pop
in
jbe
out
add
fst
(bad)
out
sbb
xchg
xchg
mov
cmps
sbb
mov
es
fwait
fs
xchg
inc
mov
(bad)
jmp
int3
lods
retf
dec
loope
xlat
pop
fdivr
inc
iret
movs
push
push
test
add
jp
push
and
dec
cmc
in
or
mov
(bad)
jge
popa
(bad)
retf
add
arpl
clc
mov
dec
jne
loopne
test
pop
adc
inc
jno
jo
test
sti
in
mov
push
lods
repnz
xchg
xor
iret
(bad)
sti
test
cmp
and
jnp
or
jns
dec
lods
pop
hlt
lods
popf
leave
jmp
mov
gs
mov
test
in
movs
and
nop
dec
xchg
jmp
inc
lahf
xchg
mov
stos
repz
in
mov
mov
ja
lds
call
ins
popf
jne
add
xchg
mov
lahf
jl
shl
pop
mov
fsubrp
mov
sti
test
pusha
popa
bound
in
and
mov
sbb
movs
pusha
out
popa
push
mov
xchg
dec
cdq
mov
out
fsubr
pop
sub
and
pop
xchg
call
data16
xchg
mov
xor
push
les
sbb
fcomp
addr16
call
mov
jmp
inc
add
jmp
in
or
test
pop
and
mov
pushf
rcl
dec
add
mov
sti
es
fist
(bad)
dec
call
adc
mov
mov
pop
mov
jno
std
dec
or
pop
sbb
push
adc
test
adc
or
loop
popa
ret
push
or
add
bound
loopne
or
pushf
push
or
push
adc
mov
loop
arpl
lock
rol
rcl
mov
cs
cmp
loopne
rcr
or
scas
jp
sbb
fwait
loopne
repnz
add
popa
sub
sub
ficomp
inc
out
popf
out
push
das
adc
mov
lea
stos
cmp
(bad)
push
push
jle
jno
xchg
neg
adc
stc
loope
sbb
(bad)
call
retf
aas
shr
fistp
cmp
aas
cli
les
pop
cmps
pop
cmps
and
pop
sbb
jo
fild
mov
dec
std
and
(bad)
leave
mov
ret
out
mov
jnp
push
(bad)
test
pop
add
xor
fwait
xchg
xchg
jne
loopne
dec
cmps
lahf
push
push
xor
call
adc
adc
not
push
in
push
rcr
inc
add
mov
pushf
call
in
shl
aaa
push
call
sahf
or
data16
mov
arpl
icebp
xor
inc
xchg
cld
adc
jmp
pushf
mov
mov
ss
add
fdivr
test
inc
pop
cdq
mov
pop
mov
stos
mov
xor
gs
aas
movs
push
sbb
ficomp
xchg
(bad)
in
push
and
iret
xchg
repnz
aam
xchg
sbb
add
fdiv
out
cmp
test
std
inc
fdiv
dec
mov
mov
cli
adc
jp
pop
push
xchg
pop
pop
icebp
not
fistp
mov
xchg
adc
sub
and
fisub
sub
call
mov
bound
movs
imul
dec
int3
ss
out
xor
add
inc
cmp
jle
sbb
loop
cld
std
or
mov
push
xor
or
into
jle
xchg
push
es
out
sub
cmp
movsx
repnz
sub
mov
in
lock
or
fidiv
push
inc
inc
xor
xor
stos
xor
mov
repz
out
outs
les
iret
xchg
adc
shl
enter
sbb
dec
cmps
rcl
dec
jae
lods
loop
hlt
sub
or
dec
cwde
and
mov
les
pop
hlt
int
xor
rsqrtps
out
(bad)
pop
ret
add
pusha
cld
ds
lods
add
and
or
mov
hlt
cmp
test
lock
repnz
add
jbe
add
ins
xor
out
inc
dec
shl
mov
in
push
push
fs
(bad)
cmps
add
call
shr
ss
imul
push
mov
ss
aas
sub
push
mov
mov
xchg
xchg
data16
xchg
xchg
div
ins
xor
jb
sub
hlt
dec
dec
(bad)
or
cmp
xor
shl
push
pop
lods
sbb
fs
popa
cmp
sub
or
mov
leave
or
mov
sub
into
rcl
sbb
in
invd
sbb
sub
fst
sbb
or
sti
lahf
retf
mov
test
stos
in
rol
and
(bad)
xor
sub
lea
xor
sahf
jo
out
movs
add
stc
or
call
iret
sahf
xchg
mov
hlt
xor
pop
cmc
adc
xor
idiv
mov
call
mov
repnz
sub
mov
fsubr
mov
pop
call
push
xchg
movs
fcom
mov
gs
test
cmps
cmps
jmp
push
xor
arpl
aas
sbb
and
and
jle
dec
pop
sbb
std
jbe
mov
add
push
sbb
js
div
dec
scas
int3
fs
sbb
arpl
clc
and
jnp
icebp
inc
ins
popa
nop
push
cmc
mov
pop
addr16
sub
push
mov
push
jg
(bad)
jb
push
add
mov
xchg
js
aad
es
push
adc
inc
rol
ja
sbb
aas
or
(bad)
fiadd
dec
xor
mov
push
(bad)
repz
push
add
mov
xchg
movs
cmc
out
movs
in
les
pop
cs
cwde
aaa
jg
cmps
mov
repnz
lahf
in
mov
adc
mov
inc
sub
lods
and
pop
push
or
xor
call
inc
mov
sbb
sti
xor
fs
jle
xlat
call
jecxz
pop
leave
rol
fs
imul
sub
sar
push
push
xor
leave
xor
(bad)
(bad)
mov
inc
mov
cmps
mov
into
pop
das
in
lock
into
or
inc
sbb
add
push
mov
mov
nop
in
sub
int3
jmp
jmp
repnz
pop
sbb
inc
rcl
mov
add
mov
test
ins
bound
ds
xchg
test
je
in
jmp
stos
cld
sub
jg
stos
mov
arpl
add
mov
dec
pop
rcl
sbb
dec
je
cmp
retf
lds
in
retf
outs
scas
jno
pop
xor
cmps
retf
mov
jb
jbe
rcl
das
test
(bad)
loop
adc
mov
xor
in
lock
jle
stos
shr
nop
xchg
push
out
daa
jle
outs
and
loopne
jnp
jno
repz
mov
sub
jne
int
xchg
dec
jb
inc
lods
xor
pop
sbb
(bad)
push
cwde
push
cmp
cmp
inc
ret
jbe
test
dec
lock
jmp
push
inc
jo
sub
dec
push
popf
loop
mov
or
inc
sbb
mov
cld
push
outs
inc
pop
adc
mov
sbb
loope
push
mov
sub
ret
mov
xchg
xchg
int3
iret
out
cmps
inc
mov
jg
les
sub
jne
xor
inc
push
sti
arpl
loopne
retf
dec
mov
cmp
(bad)
mov
repz
cmp
inc
and
(bad)
sub
rol
mov
dec
jp
out
loope
xor
pop
sub
inc
dec
cld
gs
add
cmp
xlat
into
add
std
ins
cmp
pop
push
mov
jbe
mov
pop
and
add
sbb
mov
mov
add
ds
in
out
int3
stos
or
cmp
sbb
mov
test
xchg
sti
adc
sub
mov
dec
je
pop
cmp
mov
repz
mov
push
loop
in
enter
lods
cmps
sub
ja
cli
jl
jns
sbb
xchg
push
cmp
je
test
(bad)
jecxz
mov
fwait
stos
push
cld
ret
adc
in
mov
pop
and
mov
jmp
push
mov
pop
jbe
arpl
xor
xor
cli
fs
(bad)
push
jbe
cwde
repnz
jmp
aam
(bad)
clc
xchg
stos
(bad)
pop
sub
xchg
and
xor
repz
inc
jne
inc
mov
mov
mov
sahf
cmp
jae
sbb
jae
and
fwait
in
add
or
in
add
fldcw
rcr
sbb
addr16
mov
bound
adc
(bad)
pop
dec
(bad)
inc
ret
pop
retf
inc
cld
mov
mov
cmc
std
xor
movs
and
call
movs
daa
(bad)
cwde
loopne
cdq
addr16
(bad)
mov
dec
neg
jnp
lods
dec
popa
dec
sbb
clc
call
mov
loopne
shl
push
xlat
test
mov
out
push
out
sbb
iret
xor
lods
jge
call
push
push
mov
and
fisubr
ficomp
int
lahf
dec
loop
in
adc
push
adc
and
pop
adc
cwde
sub
xchg
jae
jge
adc
mov
add
fld
ja
xchg
mov
inc
aas
addr16
jecxz
aas
shr
pushf
xchg
adc
scas
retf
std
in
sbb
cmc
fld
cli
jne
test
inc
inc
aas
jno
sbb
push
xor
mov
loop
test
xchg
xchg
xchg
mov
loopne
mov
xchg
jg
jmp
cmps
ins
inc
mov
mov
or
pop
mov
inc
push
adc
dec
les
push
loopne
ror
jnp
cmp
sub
mov
(bad)
ja
and
adc
jnp
inc
loop
fidivr
or
lock
mov
sub
test
retf
repnz
sahf
mov
test
inc
xor
(bad)
aam
fnstsw
jne
sub
test
fwait
test
popa
adc
in
cdq
es
gs
mov
push
in
movs
test
leave
ins
cmp
(bad)
cmp
scas
sbb
fnstenv
js
push
daa
pop
ja
test
fcomp
outs
fcomp
jmp
mov
out
clc
or
leave
jo
mov
rol
xor
adc
push
cmp
mov
dec
and
shl
and
add
in
xlat
fs
jp
cld
rcr
jle
nop
(bad)
shl
xchg
mov
cmp
loope
xchg
(bad)
dec
cmp
leave
mov
lea
call
ss
and
clc
lahf
movs
cmps
stos
je
out
mov
fucomip
xchg
out
sbb
call
xchg
test
fwait
add
into
int3
or
int3
or
mov
push
fmul
xchg
pusha
shr
rcr
sbb
adc
test
outs
push
inc
add
mov
push
adc
fild
xchg
xor
adc
push
mov
and
mov
pop
out
clc
and
pop
jmp
add
or
mov
jmp
mov
retf
push
popa
out
sub
add
jmp
fwait
dec
pushf
bound
sar
dec
pand
pop
call
scas
pusha
fisub
test
pop
xor
lock
(bad)
ror
xchg
ins
push
xchg
aad
pop
inc
aam
int3
push
push
mov
jns
jbe
sbb
movs
sbb
xchg
out
pushf
pop
gs
loope
inc
jo
push
or
stos
test
jns
push
mov
popf
xchg
jo
out
jae
sbb
jle
jp
ins
sub
cmc
jle
jmp
jb
jbe
data16
test
pop
leave
and
jbe
jno
bound
test
jnp
(bad)
pop
cli
add
push
out
push
icebp
push
pushf
mov
repz
push
xchg
pop
adc
(bad)
xchg
mov
je
nop
xor
pop
jmp
(bad)
cmp
call
add
enter
aad
cmp
push
push
xor
fmul
cmps
or
jge
sbb
in
ret
push
sti
mov
arpl
int3
mul
mov
cwde
gs
cmp
inc
scas
fcmovnbe
dec
(bad)
jp
sti
jae
imul
cmps
push
push
jno
inc
dec
aam
jge
inc
int
jns
push
jle
hlt
fs
xor
or
xor
(bad)
mov
outs
push
pop
movs
sbb
adc
inc
xor
inc
inc
xor
aad
mov
dec
mov
sbb
pop
pop
pop
sbb
sub
mov
jmp
das
pop
add
mov
adc
out
retf
fld
movs
gs
not
sbb
aas
nop
mov
test
adc
push
imul
cwde
pop
jnp
retf
jmp
sub
movs
dec
jo
bound
pushf
jnp
pop
ja
mov
mov
and
mov
mov
ss
xchg
lds
pop
push
fist
cmp
xor
ret
push
add
sbb
add
lods
ret
or
push
enter
lahf
call
xor
mov
idiv
(bad)
fld
sub
sbb
aad
or
pop
pop
movs
mov
pop
dec
in
arpl
inc
call
mov
jg
ja
mov
(bad)
in
pop
jle
pusha
mov
add
cmp
sbb
in
sbb
jae
sbb
sbb
call
and
mov
cmps
sub
and
sub
mov
xor
imul
and
mov
pop
gs
pop
jo
and
(bad)
ins
pop
int
data16
jmp
jmp
in
jp
inc
movs
cwde
pop
leave
cmp
stc
rol
icebp
lea
inc
add
sahf
mov
scas
mul
in
dec
(bad)
mov
(bad)
adc
fs
rcr
mov
sub
scas
mov
stos
pushf
or
inc
dec
jmp
xchg
aas
aam
jbe
mov
or
xor
sar
fwait
or
aaa
div
mov
cmps
cs
jno
jmp
scas
(bad)
adc
mov
cmps
push
idiv
inc
aam
fs
pop
lods
push
fidivr
sub
mov
xchg
sbb
loopne
lea
scas
xor
pop
enter
jns
or
ins
(bad)
test
test
dec
repnz
icebp
int3
sub
movs
xchg
cmp
xchg
inc
dec
push
jns
mov
push
jmp
inc
mov
mul
jp
add
cwde
(bad)
lods
push
push
(bad)
shl
add
push
mov
ds
jmp
mov
jb
mov
jecxz
out
rcr
mov
(bad)
xchg
push
push
in
ja
inc
sahf
mov
xchg
loop
test
mov
sbb
jnp
fmul
jmp
pop
inc
add
mov
lds
lods
xchg
mov
cs
or
push
cmp
fcompp
(bad)
test
int3
sbb
arpl
aas
jmp
(bad)
mov
mov
(bad)
aam
xchg
arpl
fwait
and
mov
fs
outs
and
out
jae
cli
xchg
or
add
sahf
sub
mov
push
stc
mov
loop
loop
(bad)
loopne
fcomp
sar
sti
add
adc
das
pop
cmps
sti
in
data16
fiadd
call
jp
cmp
imul
push
inc
fiadd
cmp
mov
cli
mov
inc
pop
dec
xchg
or
ins
pop
mov
dec
aas
add
shr
imul
div
add
and
ins
sahf
retf
scas
hlt
fcomp
xchg
pop
loopne
mov
sti
sub
out
xor
cld
pop
or
test
push
or
mov
jns
ins
jecxz
les
nop
test
ffree
mov
jmp
pop
dec
inc
movs
repnz
jmp
add
mov
jnp
jle
inc
pop
and
iret
pop
mov
jge
sbb
and
mov
cmp
stc
lahf
pop
and
and
stos
or
mov
push
xor
mov
je
cmp
mov
mov
lods
mov
pop
xchg
mov
fst
dec
cmp
inc
mov
push
push
addr16
xor
mov
enter
inc
mov
lahf
xchg
rcl
faddp
sbb
and
or
popf
std
adc
pop
xor
sub
fcom
xchg
(bad)
pop
inc
dec
loop
imul
loopne
jnp
mov
loopne
dec
data16
lods
cwde
js
lods
push
xor
fst
sub
xchg
xor
scas
mov
push
jo
push
pusha
dec
pop
rol
mov
push
inc
jno
pusha
inc
sbb
hlt
push
mov
xchg
mov
ss
add
stos
add
stc
sub
add
jg
add
loope
in
cmp
xlat
nop
jmp
jp
push
sub
pop
sub
jmp
lds
call
mov
or
mov
lahf
ss
inc
lods
and
cmp
into
mul
jae
ins
pushf
daa
sub
addr16
in
std
and
cs
xchg
movs
xor
mov
mov
call
bound
pushf
dec
retf
imul
inc
mov
or
push
mov
shl
inc
not
mov
xchg
fidiv
inc
xacquire
push
add
repz
xchg
fcmovnu
and
add
xchg
mov
nop
std
pusha
mov
add
sbb
adc
inc
jb
out
dec
lds
cwde
push
test
mov
fcomp
pushf
into
push
pop
loope
or
xchg
pop
jmp
sar
xlat
xchg
mov
ins
mov
push
loop
cwde
dec
cmc
in
mov
jmp
and
pop
jns
xlat
mov
jecxz
add
pop
or
(bad)
call
jne
xchg
in
pop
jmp
jle
mov
out
cmc
adc
out
(bad)
push
loop
into
mov
jno
sbb
mov
jbe
popf
xor
jl
(bad)
loop
scas
fdivr
cs
cld
out
add
addr16
es
nop
jmp
xchg
sti
(bad)
jb
jno
retf
jecxz
xchg
add
clc
scas
mov
fdiv
mov
add
pop
addr16
ficomp
or
fldenv
fwait
cmp
clc
dec
fadd
rcr
pop
pop
sub
mov
test
fs
xor
in
lods
jb
pop
cmp
mov
pop
add
mov
cdq
sbb
dec
mov
cmp
icebp
mov
je
fisttp
call
mov
mov
in
(bad)
(bad)
mov
jmp
push
cmps
mov
sbb
sub
push
gs
fcmove
ss
xlat
leave
aaa
rol
out
movs
push
pop
loopne
adc
stc
out
ret
jmp
adc
and
mov
jns
movs
in
xor
retf
mov
pop
test
ins
mov
cmp
std
(bad)
cmp
es
ins
jge
fiadd
mov
dec
stc
cmp
mov
add
mov
and
sti
es
test
add
nop
adc
mov
pusha
add
ds
xor
shr
iret
ficom
jmp
pusha
pop
jae
or
aaa
mov
inc
(bad)
sti
test
lahf
shl
das
cld
pop
rol
sub
sbb
add
test
pop
fiadd
push
mov
mov
adc
icebp
push
pop
pop
lods
xor
jle
adc
jne
xor
scas
jbe
inc
xlat
inc
outs
icebp
sti
(bad)
in
lds
jecxz
or
jnp
test
jp
(bad)
js
mov
inc
xchg
sbb
sbb
sbb
arpl
cmovo
addr16
push
mov
shl
sbb
mov
cmps
clc
out
fiadd
mov
ret
imul
int
shl
lods
pushf
cmp
aad
inc
cwde
rcl
scas
rcl
cmc
mov
cmps
cmp
sub
mov
out
inc
sti
mov
mov
ds
or
loopne
call
jns
push
pop
in
xchg
pop
lds
test
mov
push
pop
jne
sbb
daa
push
movs
xor
jno
fild
test
shl
fsub
push
inc
les
inc
inc
sub
popa
dec
add
std
dec
mov
sbb
mov
push
and
(bad)
adc
mov
add
rcr
cmps
and
inc
stos
scas
int
mov
jg
int
cli
mul
shl
cmp
ret
fbstp
pushf
mov
mov
in
mov
sbb
or
lods
jecxz
mov
bound
pop
int3
add
xchg
gs
xchg
clc
push
add
cs
xchg
add
(bad)
(bad)
push
out
idiv
loop
lds
addr16
add
fidivr
mov
sub
add
ss
and
popf
add
scas
out
or
stos
aam
outs
sbb
repz
jge
or
dec
out
pop
xchg
xor
sbb
rcl
mov
jno
movs
mov
aam
or
(bad)
cmps
imul
inc
daa
movs
and
jb
out
pop
std
test
mov
ffree
retf
pop
push
push
mov
stos
aas
ins
ret
ret
repz
xchg
lock
movs
jg
int3
xor
out
jo
test
mov
jle
jbe
lea
and
retf
cmp
sbb
xchg
into
(bad)
ds
in
xchg
out
sub
or
aam
fcmove
popa
cmp
adc
xor
test
sub
sbb
std
cmp
jb
and
pop
rcr
mov
cdq
lock
and
jo
loop
movs
mov
cdq
mov
push
and
or
mov
mov
lods
sub
mov
in
iret
pop
fst
int
mov
(bad)
mov
jbe
xor
sub
sub
test
sbb
cmp
pop
ret
cmps
jmp
sub
inc
mov
outs
mul
mov
cdq
loopne
xchg
cdq
je
retf
fst
cmps
ja
sub
cmp
test
div
inc
push
pop
in
mov
(bad)
movs
int
sti
mov
in
mov
mov
stos
(bad)
xlat
in
pop
outs
xor
scas
fdiv
mov
mov
jmp
lock
cmp
ficom
pop
call
repz
jmp
sub
sbb
and
call
loope
jge
cmp
fild
sti
outs
outs
jp
sbb
xchg
push
mov
adc
jns
xlat
push
loop
aas
mov
out
aad
push
xor
inc
mov
dec
sahf
test
mov
and
cmp
cmps
push
mov
(bad)
call
daa
outs
mov
daa
xchg
in
mov
jo
mov
push
loope
mov
cli
data16
pop
(bad)
hlt
push
pop
lds
pop
(bad)
clc
inc
push
mov
retf
sub
add
dec
xchg
jg
or
push
add
sub
scas
jbe
xchg
cli
in
mov
xchg
mov
sti
cld
sbb
fs
sub
jg
sub
das
add
xor
repz
int3
and
fsubr
outs
xor
(bad)
xchg
jle
mov
xlat
push
mov
sbb
das
fcmovu
push
cdq
cmp
(bad)
into
repz
test
cmp
mov
cdq
mov
pop
adc
and
js
sahf
inc
inc
loopne
jp
and
(bad)
cmp
ds
sub
iret
js
lds
mov
ficom
xchg
push
loop
or
cmp
test
lods
aad
inc
xor
nop
std
mov
cmps
outs
mov
xor
or
call
sbb
int
dec
fdivp
repz
rcl
xchg
lds
push
dec
fdiv
cmp
cmp
dec
(bad)
je
xor
mov
cdq
or
jnp
xchg
cli
dec
outs
mov
mov
jbe
inc
mov
xchg
ror
das
bound
jns
mov
call
or
xchg
int
mov
je
in
jmp
loopne
daa
dec
adc
mov
nop
pushf
clc
and
lock
jmp
pop
movs
push
mov
xchg
inc
push
pop
mov
mov
jge
jnp
mov
clc
push
rcr
mov
mov
int
jle
xor
test
jg
mov
pop
xor
je
sti
cmc
outs
repnz
loope
pop
std
scas
mov
mov
jg
call
cmp
sub
(bad)
jl
xchg
and
push
inc
push
test
add
push
dec
shl
mov
pushf
bound
push
pop
ins
jbe
add
xchg
push
je
sti
shl
sub
pop
repnz
into
(bad)
jne
ja
inc
xchg
mov
xchg
and
or
rcl
mov
xchg
mov
sbb
lods
push
adc
sbb
(bad)
push
pop
es
popf
in
jp
nop
mov
mov
lds
or
or
rcr
scas
jno
mov
or
fistp
mov
mov
push
int3
xor
iret
push
inc
mov
inc
enter
into
inc
adc
mov
inc
mov
cmp
cmps
fstp
cdq
loope
mov
cmps
stc
lahf
cmp
int
pop
and
mov
push
leave
mov
sub
mov
mov
aam
mov
or
test
jne
cld
jno
icebp
mov
jb
(bad)
std
addr16
xchg
pop
xchg
mov
mov
sbb
inc
add
bound
xor
cmps
jne
jecxz
cmp
dec
xchg
jne
ins
out
mov
mov
mov
pop
xor
jmp
call
or
shl
xor
pusha
out
mov
adc
imul
ror
or
inc
je
jp
ret
sub
adc
loop
dec
ja
dec
mov
sbb
outs
xor
aad
pop
lock
push
int3
das
pop
sub
aad
mov
or
je
push
push
movs
imul
mov
aad
shr
jl
in
pop
add
jg
cmp
ja
es
retf
ins
jbe
push
bound
mov
push
dec
imul
or
xchg
int
xchg
push
jno
mov
cmps
pushf
xlat
rcl
push
mov
pop
lods
aaa
or
sti
movs
(bad)
sub
jmp
addr16
or
xchg
xor
add
push
pop
hlt
iret
and
rol
jb
repnz
inc
test
ins
push
pusha
pusha
add
or
mov
cmp
mov
loopne
jmp
mov
pop
stos
mov
addr16
sti
fisubr
and
js
es
fcomp
inc
iret
test
js
cmp
and
push
sbb
aas
add
pusha
popa
xchg
push
xlat
inc
loopne
inc
and
jmp
clc
mov
inc
js
loopne
add
inc
scas
sbb
xchg
sub
jo
xchg
stc
(bad)
in
rcl
cmps
pop
in
xchg
add
fsubr
js
cli
fs
lock
sbb
or
jmp
sti
outs
mov
push
jp
sbb
inc
sub
mov
xor
add
jle
in
lahf
enter
pop
sbb
out
cmps
mov
iret
fidiv
js
outs
dec
pusha
ins
xchg
inc
shl
and
mov
pop
cmps
sub
mov
push
xor
or
sbb
fiadd
pop
pop
pop
xor
pop
loope
or
in
aam
cmps
or
loop
push
ret
or
push
mov
std
pop
mov
cwde
or
(bad)
fdivr
mov
pop
mov
xor
(bad)
jl
push
jnp
(bad)
movs
fsubr
or
sub
and
cmc
adc
fmul
arpl
sar
cmps
ss
imul
pop
mov
sub
in
sar
pop
jbe
xor
xchg
retf
add
inc
lds
dec
jg
fsubr
mov
js
mov
lea
xor
nop
pop
jge
or
mov
and
in
leave
cmp
mov
mov
out
push
mov
push
xchg
push
cmc
mov
jp
mov
rcl
xchg
cmp
mov
(bad)
cmp
sub
outs
xchg
loope
pusha
xor
mov
loope
ins
not
and
cmp
pop
pop
hlt
mov
in
int3
dec
mov
imul
mov
add
fsub
ins
mov
xchg
add
loop
hlt
cmps
xor
push
loop
fdiv
push
mov
adc
mov
push
test
outs
fdivp
sbb
push
dec
or
adc
pop
daa
mov
mov
add
or
inc
push
xchg
dec
sar
xchg
es
int
ja
into
sbb
adc
lods
sbb
xchg
shr
inc
xchg
pop
cmps
ds
push
xor
or
es
adc
xlat
dec
adc
add
cmc
push
add
out
or
jbe
sahf
fldl2t
pop
dec
mov
ret
sti
cmps
iret
mov
mov
gs
in
nop
lea
add
loopne
dec
sti
cwde
pop
cmps
icebp
pop
jmp
push
aas
daa
sbb
dec
push
fdivr
aas
pop
inc
sti
or
pop
mov
jb
and
ins
or
jp
out
ja
retf
jmp
inc
xor
mov
pop
fisttp
(bad)
ror
repnz
mov
jecxz
jb
xchg
cli
in
push
mov
in
jle
jne
aam
cmp
mov
add
fstp
or
ss
cmp
cld
dec
popa
out
fild
jae
ja
or
cli
in
push
into
movs
in
pop
int3
rcr
ja
adc
sub
jp
add
push
inc
inc
les
jnp
xor
fist
imul
loop
pop
sbb
jp
cs
xor
out
shl
xor
cmp
fld
inc
int3
mov
push
(bad)
jmp
xchg
es
push
popa
cmps
push
popw
push
push
lock
push
cli
push
out
lods
nop
mov
out
push
pop
pop
pop
fwait
cmps
inc
add
stc
dec
mov
in
shl
fcom
addr16
(bad)
push
popf
mov
pop
push
dec
aaa
fldenv
js
sbb
jp
pop
cmp
js
push
stos
add
ret
popf
push
bound
xor
aas
cdq
or
xor
push
out
inc
leave
lods
sti
push
push
or
cdq
fadd
fdivr
fcomp
(bad)
ret
dec
sub
mov
or
addr16
fnsave
mov
push
scas
int
outs
iret
aad
(bad)
fcomp
shr
jb
test
shr
ins
cs
push
call
imul
or
lods
push
xlat
jg
push
or
jb
lea
mov
pusha
push
lods
push
cmc
call
les
imul
inc
mov
sub
mov
das
add
lods
dec
fisttp
xor
mov
adc
jo
sar
ss
fwait
add
hlt
cld
gs
mov
test
(bad)
fwait
cmp
je
rcl
scas
pop
jno
jmp
mov
and
cmp
sub
imul
sti
std
cmp
inc
iret
add
xchg
xchg
out
(bad)
(bad)
xor
psubusw
or
push
into
pushf
iret
mov
std
cmps
lods
cmp
mov
jg
sbb
dec
mov
arpl
in
push
mov
adc
mov
lds
cmp
test
xor
sbb
adc
cwde
(bad)
jmp
push
xchg
jp
fs
in
xchg
cdq
ins
lods
or
test
(bad)
push
and
movs
cmp
push
test
fnstsw
push
push
mov
dec
scas
pop
push
(bad)
and
jecxz
and
mov
add
pop
dec
mov
stos
dec
dec
dec
jo
cmp
test
mov
jge
push
sub
fwait
jg
cs
setle
sub
sbb
pusha
movs
outs
add
sub
neg
and
lahf
xchg
pop
in
into
sti
cs
les
push
rol
sbb
add
pop
push
sbb
or
sahf
stc
mov
mov
or
pop
mov
int3
and
int
dec
sbb
jle
xchg
and
ret
in
or
dec
outs
push
jb
pop
pop
sbb
add
stos
ror
jp
out
icebp
mov
cs
shl
mov
test
xor
sbb
ins
loopne
sti
movs
daa
sbb
pop
test
push
mov
sub
ins
push
sbb
jne
cmp
jl
call
sub
mov
(bad)
js
(bad)
cmc
mov
or
sub
sub
js
out
mov
daa
add
adc
jno
push
and
adc
xchg
je
call
pop
and
push
xlat
ja
clc
or
dec
mov
ror
sbb
xchg
out
sbb
or
xor
xchg
mov
inc
jmp
(bad)
pusha
mov
mov
push
aas
pop
test
xchg
ins
bound
mov
mov
lea
xor
popa
or
dec
bound
ja
retf
fmul
retf
(bad)
push
adc
and
ins
xor
mov
pop
aad
aad
and
loope
cmps
jle
adc
mul
movs
adc
outs
dec
addr16
retf
scas
xlat
lods
pop
sbb
xor
mov
pop
sub
cli
aas
frstor
push
mov
xchg
xor
out
jmp
mov
or
aaa
cmps
inc
addr16
xchg
sbb
xor
pop
xchg
push
pop
pop
out
pop
xchg
add
ret
push
xor
fwait
adc
jle
and
test
push
mov
add
sahf
dec
or
imul
ror
neg
les
call
pop
ret
add
jge
or
and
mov
mov
jmp
adc
mov
or
mov
cmp
test
lock
sti
hlt
jp
imul
loope
pop
adc
test
scas
adc
out
dec
jno
xor
cs
sar
sub
cwde
cmp
mov
cli
xchg
pop
out
movs
bound
(bad)
inc
inc
sbb
jmp
mov
xor
xchg
inc
push
mov
mov
mov
pop
outs
sub
aad
out
adc
cmp
jns
xchg
test
stc
fcomp
push
jb
and
ins
jge
inc
mov
mov
mov
add
sub
xor
in
sub
(bad)
pop
add
aaa
inc
mov
mov
jns
(bad)
les
scas
push
or
mov
mov
xchg
in
mov
scas
push
xchg
xor
sbb
cwde
mov
imul
out
cmp
jbe
mov
dec
ret
in
adc
pop
cmp
xor
ds
xor
pop
clc
mov
fwait
mov
xchg
stos
outs
mov
push
cmp
gs
scas
add
mov
xor
leave
lock
enter
mov
jge
xchg
fcom
dec
cld
pushf
jo
or
jmp
push
iret
outs
push
shl
imul
push
es
cs
push
lds
mov
je
leave
inc
popf
dec
rcl
and
fisub
or
adc
inc
mov
inc
(bad)
in
(bad)
push
(bad)
xor
jp
push
mov
std
fild
pusha
fcom
pop
push
push
imul
test
in
add
fwait
mov
sbb
mov
ret
jno
stos
retf
adc
adc
aad
xor
aaa
iret
inc
xchg
push
pop
inc
add
or
mov
add
in
inc
imul
sbb
sbb
popa
imul
fsubr
xchg
mov
sub
and
enter
(bad)
not
in
jnp
push
ins
inc
inc
stos
idiv
pop
jae
push
add
xchg
retf
xchg
dec
div
leave
dec
cmp
mov
stc
adc
jbe
jge
(bad)
repnz
ffreep
cli
jle
xor
dec
or
sar
dec
pop
lahf
or
out
mov
stos
push
sub
push
cmp
pop
pop
jle
out
dec
aam
imul
shl
iret
mov
daa
gs
test
mov
or
push
pop
xchg
push
(bad)
lds
cmps
sbb
das
cmp
mov
popf
add
adc
sub
test
sbb
cmp
dec
mov
(bad)
(bad)
push
imul
rcr
sbb
cmp
in
mov
aas
cmp
pop
in
(bad)
faddp
imul
daa
retf
push
ret
fdiv
add
cmp
ret
adc
inc
mov
scas
loope
xor
not
or
fst
jnp
xlat
cs
xlat
andnps
xor
sbb
scas
sub
test
lods
imul
sub
arpl
mov
push
cmps
xor
mov
aaa
arpl
push
cmp
data16
push
xchg
cmc
out
ins
or
jmp
sub
jbe
std
js
cmps
mov
jns
mov
add
aad
or
mov
jmp
push
mov
adc
mov
and
pop
scas
pop
sub
call
push
scas
dec
add
lahf
adc
push
jno
sub
clc
mov
enter
cmps
xchg
sub
adc
arpl
sbb
div
or
dec
ret
jmp
test
push
push
pop
add
int
and
sub
cmc
test
ins
mov
sub
bound
add
push
mov
push
mov
aaa
out
mov
pop
cld
loop
sahf
bound
jecxz
push
cmp
data16
push
xchg
jns
mov
cmc
mov
into
mov
add
push
adc
scas
lock
popf
popa
xor
aad
test
pop
repz
ret
arpl
mov
lock
xchg
or
out
gs
fcmovb
sti
pop
add
inc
cmc
cmps
push
dec
push
xor
jle
inc
jecxz
inc
imul
inc
enter
repz
push
call
mov
jae
add
jg
jns
cmp
mov
or
outs
(bad)
mov
movs
sub
test
adc
add
mov
push
inc
or
je
cwde
and
adc
popa
cmp
scas
xor
adc
mov
sbb
out
fs
cmp
or
sub
jg
hlt
jmp
mov
cmp
xchg
or
and
cmps
dec
push
push
jge
ja
adc
push
xor
fldcw
outs
lds
sub
outs
adc
push
adc
imul
int3
sub
mov
call
add
dec
xor
inc
outs
cld
add
mov
xor
sub
cmp
ins
add
xchg
push
ja
jle
inc
xor
ds
fidivr
imul
dec
stos
jmp
loopne
enter
jle
and
mov
inc
dec
lds
rol
pop
pop
data16
or
cmps
loope
pop
push
lfs
jnp
sub
popfw
mov
push
dec
push
cdq
push
inc
mov
inc
pop
(bad)
fadd
jecxz
ret
mov
ret
push
dec
ror
xor
mov
xchg
test
(bad)
push
pop
pusha
ds
add
ins
mov
mov
imul
out
mov
jns
gs
(bad)
ror
ror
mov
pop
aaa
je
adc
push
loop
sti
sub
mov
sbb
pop
nop
jns
dec
pop
adc
sub
into
jb
push
jp
mov
jo
mov
push
ins
(bad)
jnp
fstp
lahf
xor
dec
push
in
lods
daa
adc
xchg
xor
push
jecxz
aad
cmp
popa
rol
jae
(bad)
mov
in
inc
scas
add
fst
mov
mov
mov
lea
in
lahf
fadd
cmp
mov
jmp
sbb
push
das
push
or
bound
mov
pushf
rol
jle
mov
mov
sub
sbb
movs
fbstp
loopne
push
ja
imul
cli
mov
dec
stos
jb
mov
push
cmp
stc
int
aaa
dec
fadd
retf
mov
mov
jae
mov
or
cmp
sbb
loop
loop
or
mov
test
sub
and
gs
jle
sub
retf
and
sar
add
retf
jecxz
cwde
rcr
test
out
or
test
cmp
retf
outs
loope
daa
mov
inc
xchg
sti
lea
imul
in
pop
or
mov
psubsb
jge
js
addr16
out
nop
call
shr
inc
cmps
fmul
jnp
test
sub
sar
mov
push
stos
ret
scas
in
pop
lods
js
(bad)
sub
pop
(bad)
mov
loopne
int3
inc
sbb
es
retf
scas
mov
sbb
daa
jmp
(bad)
sub
cs
div
pop
xchg
xchg
adc
xchg
frstor
sub
int3
inc
int3
or
(bad)
imul
mov
or
mov
sub
sbb
adc
fdivr
in
and
in
jns
jae
push
pop
cmps
ret
ss
push
pop
scas
mov
stos
adc
pop
sub
cdq
mov
sbb
rcr
inc
mov
aas
add
or
inc
sub
push
test
iret
pop
jbe
nop
(bad)
sahf
int
test
pop
shr
sub
or
lea
push
ds
mov
mov
mov
push
sbb
inc
pushf
cmps
ja
xchg
cmp
adc
add
sub
pop
pop
mov
rcr
push
xchg
add
dec
push
mov
inc
pop
push
in
(bad)
jbe
pop
sbb
inc
mov
dec
adc
mov
rcr
pusha
das
fimul
sbb
xor
shl
jp
push
call
das
xchg
dec
mov
daa
es
loope
sti
mov
xchg
xchg
nop
add
push
loopne
mov
ja
pop
pusha
jecxz
(bad)
pushf
xchg
mov
cmp
mov
xor
mov
mov
sbb
das
in
cmp
not
cli
push
lods
xor
(bad)
es
je
mov
iret
inc
cmp
jnp
sbb
das
cmps
cdq
movs
fdiv
sbb
popf
inc
aaa
xchg
addr16
mov
mov
ret
add
or
cmp
arpl
dec
or
lods
loope
inc
pop
push
jmp
sahf
jmp
stos
push
hlt
adc
add
dec
fcomp
in
data16
inc
inc
cmp
mov
arpl
rcl
call
jp
ss
cmp
push
mov
mov
sbb
data16
imul
cmp
aad
daa
mov
xor
dec
out
mov
adc
fnstenv
test
and
dec
add
pop
arpl
dec
fcmovbe
ds
daa
inc
inc
or
jl
fst
inc
int
and
push
add
mov
mov
int3
xor
cmp
inc
cwde
cmps
xor
jae
test
aad
jge
stc
out
cmp
xchg
mov
sahf
add
push
nop
mov
dec
xchg
sub
push
aam
cwde
and
or
mov
test
xchg
aaa
les
jmp
mov
or
inc
cmps
call
lods
jno
movs
(bad)
gs
add
push
ins
adc
xor
outs
out
jns
mov
sub
psubw
mov
in
ret
call
dec
jmp
dec
adc
xchg
inc
movs
dec
test
xchg
mov
pop
scas
icebp
mov
pop
jle
(bad)
jno
sbb
aas
pop
movs
fmul
dec
push
mov
add
xor
mov
cmps
pop
out
inc
push
stos
mov
mov
je
pop
mov
nop
into
mov
xchg
inc
imul
mov
sbb
inc
xlat
(bad)
aad
push
xchg
xor
lods
js
rcr
bnd
jne
jge
sti
pop
pop
jae
jmp
out
sub
psubusw
sub
cmp
jbe
imul
leave
and
and
iret
in
fdivr
mov
sub
xchg
jmp
jnp
inc
adc
arpl
scas
lock
cmp
adc
push
mov
push
pop
test
mov
popf
mov
dec
fistp
jne
inc
adc
retf
inc
adc
test
adc
push
jl
xor
stc
lahf
inc
jg
sti
pop
adc
cmp
jo
jmp
adc
shr
hlt
add
or
cmp
mov
pop
push
add
imul
lods
jg
sbb
mov
scas
dec
in
fst
rcl
mov
mov
fs
push
jge
adc
rol
repz
gs
mov
xor
lock
rcl
sbb
jae
int3
mov
jp
pop
pusha
(bad)
mov
mov
es
aas
mov
cmps
mov
cmc
out
stos
mov
pop
push
inc
cmp
add
fidivr
rol
scas
and
jns
or
das
jg
iret
call
mov
(bad)
loopne
mov
pop
push
mov
je
inc
in
or
rcr
ins
jb
lahf
aaa
push
and
inc
pop
mov
xchg
and
sbb
jg
mov
mov
sbb
dec
xchg
add
out
cli
movs
pop
adc
push
and
push
cmp
xor
pop
fwait
in
push
sub
cmp
sbb
xor
int3
fisttp
or
inc
inc
mov
push
call
jle
xchg
jo
xor
or
cmc
sbb
xor
fwait
icebp
std
jecxz
xchg
and
test
cmc
(bad)
in
cmps
setns
jb
mov
repnz
and
mov
xor
lds
aam
mov
mov
xor
dec
int
std
xor
in
cld
pop
dec
jo
daa
popf
rol
pop
mov
repnz
mov
shl
sub
or
cmp
pop
mov
and
mov
mov
mov
mov
inc
xchg
push
jo
add
pop
mov
push
add
loop
jecxz
cmp
sub
xchg
inc
or
push
call
js
test
jb
mov
add
fs
popa
and
xchg
imul
mov
push
dec
mov
jns
(bad)
cmp
push
mov
in
lock
fist
sbb
data16
inc
(bad)
std
and
or
sti
int
pop
retf
push
imul
jp
movntps
in
repz
push
clc
xchg
fisttp
imul
imul
lahf
mov
or
adc
mov
push
loope
cmp
push
jne
sbb
fisubr
scas
mov
xor
cld
ins
mov
fldcw
cld
dec
sub
and
mov
cmc
sbb
mov
push
gs
and
lea
sbb
jb
pop
xor
cmps
xchg
test
cmc
xchg
bts
fsub
dec
push
jg
arpl
fnsave
add
dec
inc
mov
in
mov
push
inc
sbb
or
and
push
mov
add
xor
or
lock
test
sub
or
push
sub
jmp
pop
sahf
push
retf
retf
mov
xchg
cmps
stos
xchg
pushf
and
fs
es
cld
lods
es
mov
fs
iret
dec
and
sbb
pop
and
sub
sbb
in
lock
mov
imul
test
or
pop
lods
or
xor
cmp
push
and
mov
aad
mov
xlat
shl
adc
dec
shr
jp
inc
es
stos
jb
and
test
cmps
xor
cmp
imul
popf
aam
enter
mov
xor
int
adc
adc
lds
jae
pop
fcomp
mov
call
stc
cwde
cmp
dec
push
inc
pop
sub
and
mov
es
and
fstp
scas
(bad)
fld
mov
fisub
je
lods
push
(bad)
adc
cmps
mov
xor
xchg
adc
sbb
mov
call
dec
sbb
jle
push
push
and
pop
sahf
and
add
daa
pop
lods
mov
in
(bad)
cdq
mov
jp
ret
mov
popf
lock
fimul
xchg
les
add
dec
in
jno
(bad)
mov
and
pop
fsubrp
out
dec
push
push
cmp
adc
addr16
jle
or
fldcw
mov
jno
pmaxsw
cmp
sti
test
dec
cli
and
loopne
mov
sbb
lahf
mov
sub
stos
jb
fisubr
adc
inc
leave
dec
outs
mov
adc
mov
push
std
daa
aaa
inc
movs
fbstp
add
xor
(bad)
out
dec
jmp
jo
and
xchg
(bad)
gs
pop
mov
jge
ja
mov
add
sub
push
jns
jnp
call
dec
pop
aad
pop
ins
outs
xchg
mov
cs
or
shl
jmp
cmp
push
dec
mov
js
daa
pop
or
push
mov
mov
in
cmp
scas
push
ror
lea
fcmovne
mov
sub
or
xchg
sbb
and
xchg
not
addr16
adc
dec
jp
daa
in
mov
sub
mov
pop
cmp
je
ja
dec
stos
mul
add
inc
nop
addr16
out
inc
sub
test
adc
je
loope
pop
and
test
outs
movs
sub
mov
pop
and
repnz
and
xchg
adc
pop
pop
lea
jp
ficomp
dec
cmc
sub
lods
hlt
fld
inc
add
xchg
mov
and
push
adc
shl
fnstcw
and
sub
mov
xor
cli
les
fistp
out
sbb
inc
pushf
add
or
daa
sub
push
xor
cmp
pop
clc
sbb
add
movs
ins
test
adc
push
cmps
shl
in
or
(bad)
sti
jbe
cwde
or
push
and
sbb
mov
fisub
aad
aam
out
sbb
in
push
aas
inc
mov
push
lahf
dec
mov
adc
mov
ja
xchg
mov
mov
nop
jmp
jle
dec
iret
into
cmp
mov
fld
xchg
or
aad
pop
sar
jae
dec
jb
repnz
ror
dec
jae
dec
mov
push
(bad)
or
mov
cld
jnp
add
std
(bad)
sbb
mov
f2xm1
loope
mov
aad
sti
dec
in
inc
mov
mov
pop
dec
(bad)
retf
and
jno
cmp
jbe
xchg
dec
sbb
push
retf
sub
ins
add
mov
jb
or
jne
aas
scas
mov
mov
xor
in
xchg
push
shr
adc
addr16
xchg
scas
fs
cvtps2pi
and
into
aam
es
cs
iret
adc
mov
icebp
mov
and
inc
test
stc
push
jne
mov
scas
ret
dec
pop
clc
sbb
sbb
(bad)
mov
or
inc
mov
and
mov
daa
out
push
jmp
add
inc
outs
cmp
fild
add
ins
ror
shr
xchg
adc
cmps
loopne
dec
add
or
mov
mov
xchg
mov
sbb
stos
inc
adc
sbb
push
cmp
xchg
cli
jne
or
imul
popf
add
or
int3
lods
(bad)
pop
push
mov
rol
cld
cmc
add
jg
out
push
push
ror
sbb
jge
push
mov
push
cmp
lods
mov
outs
ss
jns
stos
push
push
jmp
pop
pop
aaa
das
mov
push
mov
cmc
repz
mov
icebp
jle
push
fs
cmp
dec
add
imul
imul
jnp
sbb
jmp
mov
fs
inc
jge
imul
adc
lock
dec
push
iret
ins
pushw
push
cmp
shl
push
sbb
mov
jg
dec
shl
dec
and
jns
stos
mov
push
fnstsw
ins
mov
fmul
shl
xchg
add
xchg
dec
call
out
and
jbe
push
lods
call
and
daa
cmp
daa
xchg
inc
addr16
sub
lods
call
sbb
xchg
fwait
dec
leave
pop
cmp
add
fwait
or
push
and
cwde
pusha
xchg
out
dec
xor
push
arpl
(bad)
mov
inc
lock
dec
ins
mov
xchg
xor
je
adc
test
hlt
popa
jmp
lock
fs
hlt
push
add
scas
adc
in
jle
stos
pop
adc
sub
sub
jnp
inc
jnp
jge
out
pop
call
push
adc
sbb
sbb
dec
icebp
(bad)
jb
or
mul
sub
xor
sub
int
pop
out
xchg
ss
call
sbb
movs
add
pusha
outs
retf
ins
iret
xchg
mov
ins
stos
xlat
bound
or
mov
mov
sub
cmp
out
fcmovb
xchg
sbb
pusha
ss
pop
cmc
adc
mov
rcr
jo
xchg
xchg
out
hlt
dec
cmp
xchg
mov
js
aad
xor
inc
shl
in
mov
test
and
fwait
dec
push
mov
mov
(bad)
pop
(bad)
mov
or
loopne
lahf
sub
xor
inc
data16
adc
cmps
(bad)
shr
outs
(bad)
ss
(bad)
in
mov
iret
ror
mov
retf
outs
mov
pop
mov
pop
test
xchg
lods
rcl
xchg
push
enter
scas
xor
sbb
ins
(bad)
jmp
mov
mov
addr16
retf
adc
ins
shl
or
ins
cmp
ret
sti
popf
cdq
mov
add
lods
mov
jmp
mov
sar
int
fcom
and
sbb
stc
repnz
ins
leave
pop
stc
xor
xor
test
cli
pushf
les
dec
and
iret
sbb
jl
std
sub
xor
pop
add
in
mov
or
je
(bad)
addr16
fs
sbb
loopne
fs
push
fwait
cmp
call
daa
outs
pop
test
(bad)
test
mov
in
cmp
adc
fmul
outs
sahf
push
push
cmp
push
sbb
lahf
sbb
mov
div
push
jo
push
xor
jmp
xchg
pop
cmp
sbb
lea
iret
mov
and
cmp
fs
and
adc
add
sahf
add
add
dec
(bad)
outs
in
sub
lock
push
sub
mov
jns
xor
dec
sub
xor
ins
push
jmp
(bad)
mov
jo
imul
sbb
mov
inc
(bad)
ja
mov
mov
push
(bad)
mul
ret
test
mov
mov
push
xor
lahf
je
inc
or
icebp
push
or
sahf
sub
inc
xchg
add
add
jp
lock
xchg
xor
inc
bound
inc
xor
jmp
adc
sbb
xchg
and
pop
push
lahf
scas
adc
stos
mov
inc
push
jo
fwait
cdq
mov
cld
jp
inc
mov
sbb
pusha
and
or
adc
shl
push
or
rol
int
pop
push
or
cmp
or
(bad)
jmp
or
test
dec
outs
repz
or
mov
mov
ror
aaa
pusha
pop
cmp
sar
jno
push
not
test
hlt
add
adc
call
mov
imul
nop
ret
inc
mov
call
sub
mov
jae
push
inc
test
movs
das
pusha
dec
mov
lods
xor
fsubr
arpl
arpl
(bad)
out
cld
xchg
scas
xor
adc
(bad)
xchg
pop
or
cmp
jne
pop
mov
test
lahf
retf
jecxz
fs
aaa
xor
xchg
outs
cmps
adc
movs
cmp
rcl
mov
inc
inc
mov
dec
push
mov
pminsw
rcr
shl
mov
jbe
sbb
mov
pop
out
jns
mov
and
repnz
(bad)
sbb
jle
add
je
jmp
cmc
call
or
(bad)
jecxz
retf
(bad)
ret
push
shl
mov
inc
sti
sbb
mov
jmp
or
mov
jp
mov
pop
pop
lock
push
xor
fdivr
call
mov
loop
mov
inc
es
imul
popa
cmc
(bad)
push
lahf
push
xchg
sbb
scas
push
jno
xor
not
inc
cdq
stos
sub
clc
out
int
mov
xor
push
retf
int
out
fdiv
dec
shr
mov
or
mov
sbb
inc
or
xor
push
scas
test
push
sbb
mov
sahf
mov
int
cdq
jne
jmp
xchg
and
jle
ins
inc
loopne
pop
xor
cmp
test
test
aaa
leave
movs
addr16
cmps
fistp
inc
popa
mov
imul
iret
push
cmp
or
mov
or
mov
stc
pop
mov
dec
cmp
adc
inc
sub
fisttp
sti
arpl
xor
or
dec
jecxz
and
jae
pop
jmp
in
in
(bad)
retf
mov
add
test
cli
jp
push
loop
sbb
cwde
and
imul
pop
xor
inc
push
stc
and
outs
or
out
pop
push
add
pop
sub
jge
xchg
stos
jb
stos
outs
ret
add
cmp
stc
retf
(bad)
mov
fsincos
jo
jnp
push
push
ins
adc
and
adc
out
fwait
xlat
arpl
mov
mov
sub
in
dec
cmp
push
xlat
adc
(bad)
mov
push
and
into
pusha
ss
aad
cmc
add
rcl
shl
or
xchg
sahf
push
inc
xor
mov
jo
sub
inc
je
out
(bad)
pushf
in
fdivr
dec
cmp
mov
or
jg
sbb
std
(bad)
fisub
shl
scas
fwait
aaa
loope
pop
dec
jbe
ja
xchg
pop
arpl
mov
and
add
aas
cmp
push
mov
jae
call
in
int
adc
jmp
and
mov
push
push
push
and
(bad)
retf
push
jge
adc
data16
aad
or
imul
dec
iret
ret
stos
add
fadd
cld
adc
loope
in
das
ror
sub
pop
lock
neg
sbb
cmc
inc
adc
mov
pop
mov
pop
fwait
into
sub
pop
jl
cmps
pop
mov
outs
aad
inc
aad
dec
jae
xchg
xor
int3
xchg
pop
pop
sub
sbb
invd
js
ficomp
or
enter
mov
cdq
add
rol
stc
pusha
push
je
mul
mov
mov
xor
mov
rcl
mov
test
enter
stos
pop
mov
jmp
add
pop
adc
lahf
pop
dec
mov
not
mov
pushf
pop
pop
cli
xlat
les
fadd
dec
adc
or
and
jno
jnp
push
mov
dec
(bad)
scas
retf
loop
jg
lea
mov
push
mov
daa
push
jne
cmp
stos
cmp
sub
mov
mov
sub
pop
test
adc
scas
outs
sbb
pop
cld
fnsave
call
cmc
test
add
mul
sub
mov
es
mov
repz
xchg
cmp
sbb
shr
(bad)
jge
mov
cmp
test
xchg
pop
sub
push
add
into
retf
sar
xchg
or
xchg
mov
clc
sub
xor
lahf
dec
int
mov
cdq
daa
pop
fnsave
and
push
popf
mov
loopne
loopne
scas
or
nop
sub
nop
xchg
and
jne
imul
jbe
mov
add
adc
sub
dec
pop
sbb
cmc
in
sahf
into
jp
stos
xchg
or
jbe
lahf
mov
adc
not
jbe
iret
cdq
xchg
mov
xchg
dec
mov
fnstcw
and
dec
sbb
scas
sti
jecxz
mov
add
mov
fs
inc
(bad)
jae
mov
jmp
push
jp
pop
jge
mov
mov
mov
movs
jb
jmp
pop
or
push
retf
mov
gs
xor
mov
gs
mov
dec
test
js
push
ds
idiv
ret
xor
(bad)
call
pusha
dec
or
xor
xchg
repz
sbb
pusha
jecxz
ret
lahf
and
shr
sbb
mul
je
neg
pop
xor
sahf
cmp
enter
sub
mov
(bad)
mov
lahf
inc
xlat
out
ret
fisttp
inc
dec
(bad)
clc
xchg
fwait
and
xchg
out
sbb
add
xchg
push
push
ins
into
hlt
xor
pop
stos
hlt
rol
test
inc
cmp
nop
jne
icebp
sbb
xor
push
sub
add
fsubp
(bad)
test
jae
lods
daa
and
mov
mov
int3
mov
push
inc
outs
jle
ror
cwde
sar
xor
sar
jmp
pop
ret
pop
and
outs
sub
lds
out
pop
sar
dec
pop
sub
nop
das
ins
sbb
pusha
je
iret
into
call
outs
cmp
std
adc
cwde
cmp
out
add
xchg
ret
xchg
adc
push
sub
fsub
imul
xchg
ror
fidivr
xor
ret
adc
dec
mov
adc
dec
sub
sub
test
mov
aas
cmps
xchg
fcom
imul
into
pop
iret
lds
pop
add
mov
(bad)
jge
xchg
icebp
mov
xchg
push
js
pushw
jg
fucomip
shr
pop
ja
xchg
ins
rol
xchg
push
dec
imul
test
add
inc
mov
inc
outs
push
inc
push
push
pop
pop
push
mov
sub
inc
add
push
cdq
fnstcw
push
(bad)
in
adc
imul
mov
and
jb
addr16
aas
shl
dec
int3
lock
jnp
div
or
mov
xlat
sbb
mov
hlt
dec
mov
cmp
push
push
sbb
add
or
mov
movs
add
mov
retf
cmp
hlt
xchg
xor
mov
rcl
int
and
add
dec
ffreep
lods
stos
pushf
xor
in
mov
xchg
call
jno
in
mov
cmp
ret
test
and
movs
pop
mov
(bad)
mov
xchg
mov
adc
test
inc
arpl
xor
js
ins
mov
les
clc
mov
stos
jnp
and
sub
(bad)
ins
fist
sar
pop
cmp
js
push
jg
aam
std
mov
push
mov
xchg
popf
int3
pop
xchg
add
pop
imul
inc
sti
cmp
push
movs
ret
xor
xor
cmps
fmul
xchg
in
push
mov
jecxz
or
rcl
bnd
outs
pusha
jge
adc
xor
dec
dec
push
out
je
ror
cwde
and
xor
int
mul
adc
dec
xor
and
cmp
stos
sub
push
cmp
mov
(bad)
sti
and
aad
cmp
ror
pop
cmp
sti
cmp
cmps
dec
popf
add
xchg
pop
enter
mov
stos
adc
ror
xchg
outs
mov
int
loope
and
scas
ja
sbb
call
adc
mov
fld
hlt
es
int
das
(bad)
sahf
fcom
jbe
ret
add
lahf
mov
adc
push
clc
jne
je
fisttp
int
xor
jle
add
jne
repz
lock
jmp
mov
fwait
jmp
dec
add
iret
mov
jle
mov
mov
mov
in
xchg
xchg
retf
xor
xchg
(bad)
inc
mov
cmps
call
ins
rcr
shl
fadd
xor
cmp
pusha
inc
fidivr
xor
push
fmul
cmps
mov
pop
jne
jno
sub
sbb
jne
sub
stc
xchg
fs
mov
and
ja
in
inc
ins
call
sbb
cvtps2pd
sbb
dec
shr
(bad)
adc
inc
mov
inc
push
sbb
idiv
sti
xchg
sub
test
aaa
add
inc
inc
dec
cli
mov
pusha
xor
pop
pushf
lea
jmp
out
retf
mov
(bad)
mul
push
mov
loop
adc
xchg
lods
test
xchg
jbe
jmp
inc
cmp
test
clc
xchg
std
mov
add
in
out
sub
addr16
popf
mov
fst
cmp
sub
jg
loopne
nop
mov
punpckhbw
pop
mov
cld
addr16
sub
ror
jb
sbb
inc
hlt
out
xor
aas
fstp
std
jb
cmp
or
mov
push
sub
inc
jb
shl
jge
sbb
rcl
mov
xchg
test
arpl
sti
out
and
and
ds
xor
pop
xchg
imul
xor
ret
jnp
cmp
mov
xor
(bad)
(bad)
cld
jns
mov
enter
mov
pop
loop
aad
push
xchg
inc
mov
loop
sahf
or
mov
in
pop
mov
pop
xchg
adc
mov
push
enter
jmp
xchg
mov
xchg
cmps
jmp
adc
out
push
addr16
dec
lahf
dec
outs
pop
cmp
mov
mov
add
dec
fs
push
or
sub
mov
and
test
jmp
jge
and
addr16
bound
sub
xchg
aaa
push
push
and
xor
repz
cmc
xor
mov
addr16
or
jnp
pop
fdivrp
adc
add
add
mov
fwait
push
cmp
push
rcl
mov
xchg
jmp
push
stc
jp
ret
pop
scas
adc
mov
clc
xchg
jle
jge
retfw
bound
pop
sub
sub
ret
cmp
inc
cli
or
aam
mov
and
je
and
inc
movs
pop
rcr
xchg
mov
cmp
jns
xchg
sbb
mov
add
mov
or
ret
js
jmp
adc
adc
fisubr
retf
push
jb
cli
cmps
mov
retf
adc
mov
mov
int3
adc
mov
sub
sahf
dec
inc
movs
adc
(bad)
inc
sbb
mov
(bad)
es
mov
mov
pmaxub
xor
iret
adc
push
cdq
pop
fisubr
xchg
push
hlt
cmp
or
xchg
or
cli
fucomi
sbb
int3
push
stos
popf
ja
or
pop
addr16
in
rep
sti
push
mov
into
dec
mov
mov
xchg
jg
inc
aam
test
lods
das
popf
fisubr
scas
shl
test
mov
popa
cmp
dec
inc
repnz
pop
dec
pop
push
lahf
xchg
aas
(bad)
pop
mov
push
and
hlt
adc
leave
jg
cmp
sub
dec
ficom
sete
push
(bad)
hlt
jmp
fimul
gs
pop
aaa
add
jb
cdq
fidiv
mov
iret
fnstenv
fwait
adc
adc
xchg
dec
push
jae
(bad)
mov
scas
leave
ret
and
push
scas
dec
call
out
jecxz
mov
adc
mov
xor
mov
cmp
mov
xchg
loope
fwait
sbb
jp
imul
pop
xor
retf
lahf
out
or
add
out
mov
in
ret
cmps
xchg
or
or
push
ins
xchg
bound
xor
imul
xchg
cmps
setae
repz
sti
es
fild
daa
movs
push
jecxz
mov
push
fisubr
dec
add
outs
pushf
jl
outs
mov
or
ja
leave
repnz
mov
xor
cmc
shr
adc
add
cmps
or
leave
push
push
adc
dec
pop
and
clc
repnz
loopne
or
xadd
push
ins
pushf
sbb
fld
stos
arpl
mov
shl
out
pop
cs
mov
cmp
in
leave
jge
cli
pop
js
or
cmp
dec
jmp
sub
int3
and
push
add
xchg
mov
xor
sub
bound
lock
fisttp
sahf
xchg
mov
sub
fadd
dec
cmps
dec
lock
int3
xor
jecxz
aam
loope
cmp
xchg
cmpxchg
test
jne
and
xchg
push
xor
push
dec
mov
stos
mov
inc
or
in
cmps
cmp
push
scas
sahf
(bad)
and
jnp
mov
retf
rol
pop
(bad)
jecxz
(bad)
pusha
push
push
mov
mov
ins
pop
jb
xchg
jg
or
dec
pop
adc
cli
push
pusha
xchg
pop
out
movs
and
fistp
cmps
scas
mov
pop
adc
enter
and
es
call
mov
(bad)
pop
out
or
inc
add
test
rcl
mov
mul
sbb
in
xchg
adc
add
in
cmc
and
jbe
add
xor
jmp
clc
fs
xchg
or
pop
repnz
jecxz
pop
add
jb
sbb
sbb
jg
addr16
xor
dec
repz
push
into
or
pop
pop
and
inc
mov
xchg
and
sti
les
pop
mov
xor
xor
sbb
js
sub
pop
jbe
add
cmp
adc
(bad)
mov
or
jnp
mov
pop
sbb
addr16
and
bound
jns
pop
out
movs
mov
pop
push
mov
mov
daa
jns
cmp
cmps
sahf
rol
cmp
rcl
sbb
bound
jp
mov
add
jle
cmps
les
sar
stos
fnstcw
push
dec
jge
addr16
adc
mov
(bad)
stos
je
stc
in
xlat
int
mov
xor
mov
(bad)
xor
dec
sbb
scas
pop
pusha
xor
xchg
test
fs
jo
sub
sub
imul
in
pop
jae
mov
push
cmp
xchg
fild
and
add
push
sahf
jge
adc
loope
loope
ins
bnd
or
xchg
out
jle
enter
scas
pop
sub
(bad)
cs
xchg
xchg
mov
pand
cli
inc
(bad)
adc
int3
jle
aaa
jbe
sti
addr16
jge
mov
fistp
js
jns
shl
in
cmp
xchg
jmp
mov
fdivr
lea
dec
sbb
cmp
mov
push
xor
imul
bnd
stos
ret
hlt
pop
pop
mov
sub
fdivr
mov
test
loop
in
or
push
cld
mov
xor
(bad)
push
stos
pop
xor
xchg
adc
repnz
xor
call
push
xor
pop
pop
(bad)
and
retf
popf
adc
dec
je
jo
das
pop
out
xacquire
pop
loopne
out
pop
bound
or
lock
scas
cmps
mov
(bad)
mov
push
test
mov
adc
jecxz
sub
xchg
and
les
jns
jp
mov
lock
add
pushf
xchg
mov
nop
mov
pushf
add
addr16
retf
adc
in
xor
movs
mov
push
push
mov
cdq
dec
test
or
icebp
aam
arpl
enter
repnz
jnp
cmps
(bad)
jnp
nop
ins
pop
or
movs
fist
ds
jns
jns
jns
movs
push
add
push
push
out
mov
push
in
movs
mov
dec
pushf
mov
lods
inc
jl
or
pop
aam
push
inc
sbb
stc
jp
gs
into
cs
cmp
cld
ret
mov
jg
leave
pop
imul
push
fld
cmc
lods
cmp
mov
scas
mov
retf
(bad)
loopne
addr16
nop
leave
jb
cmps
add
jecxz
lds
adc
movs
popa
mov
js
(bad)
push
ret
das
xor
outs
or
lock
(bad)
pop
in
adc
mov
fnstenv
adc
das
adc
inc
out
inc
cld
jne
test
dec
dec
xchg
shl
jnp
ins
cmp
mov
adc
imul
lods
cs
retf
xchg
iret
xor
mov
lahf
ror
jb
mov
in
(bad)
sbb
data16
xor
mov
movs
test
push
and
mov
xor
pop
or
repnz
and
ss
mov
adc
test
cmps
test
ins
test
xor
xchg
mov
inc
fisttp
sbb
movs
jnp
or
xor
inc
mov
sbb
and
sahf
sti
test
fist
cmp
pop
ror
lods
imul
pushf
sahf
cmps
pop
outs
push
nop
test
mov
xchg
lods
cmp
fist
mov
add
add
xchg
or
jle
mov
mov
mov
jnp
pop
mov
adc
xchg
idiv
pop
iret
out
fcmovu
hlt
inc
sbb
(bad)
cmps
outs
sub
or
jge
push
push
loopne
add
jb
cmp
push
test
xchg
and
pop
add
outs
jg
mov
mov
scas
dec
sbb
xchg
inc
div
jae
aam
out
push
xor
push
mov
push
scas
dec
sbb
loopne
sub
cmp
or
push
inc
fidivr
add
and
or
mov
add
xlat
sub
cmp
pusha
cmps
push
mov
mov
dec
sub
mov
std
push
adc
(bad)
outs
test
xchg
into
jle
sahf
sbb
ret
cmp
and
xlat
imul
jg
outs
das
call
icebp
(bad)
pop
mov
jmp
lods
mov
mov
daa
push
add
call
ficomp
das
loopne
xchg
aas
outs
inc
(bad)
adc
fstp
das
iret
mov
cmp
int3
mov
inc
sbb
out
popf
data16
push
(bad)
xor
pop
jle
cmp
ds
cmp
mov
xchg
mov
sub
jo
mov
and
pcmpgtb
int
div
mov
imul
push
push
push
push
retf
in
add
dec
jbe
je
imul
fld
out
pop
xor
pop
cld
fist
jno
nop
stos
adc
mov
xchg
or
pop
ficomp
sbb
stc
xor
dec
sub
popa
dec
sub
adc
pop
jnp
cs
mov
push
inc
push
push
neg
sub
fst
mov
jl
add
pop
es
addr16
pop
xchg
test
sub
jo
add
mov
pop
dec
cmp
lods
outs
mov
stos
mov
cli
jmp
addr16
outs
call
shr
fwait
push
in
ret
jbe
mov
mov
sub
clc
push
bt
adc
jmp
mov
push
sub
inc
in
mov
sar
test
xchg
leave
outs
rcr
jne
ret
gs
cmps
mov
jns
outs
push
or
sub
dec
sar
mov
not
and
scas
lahf
lds
pop
(bad)
fs
in
sub
aas
sbb
(bad)
(bad)
cli
popa
ret
sub
fcom
bound
mov
mov
mov
fld
outs
out
mov
ret
push
ret
pop
xor
cmp
frstor
add
loope
cld
dec
mov
cmp
scas
adc
popf
sub
(bad)
cmp
pop
scas
hlt
jns
add
add
out
push
adc
sub
push
jmp
sbb
push
sub
das
popa
sub
fdiv
jmp
lods
mov
sbb
inc
sbb
mov
stos
popa
xlat
out
pop
push
in
push
inc
movs
mov
inc
cwde
xor
xor
or
xchg
pusha
xchg
push
test
ss
add
fstp
add
mov
push
mov
arpl
jge
mov
jb
pop
mov
mov
sbb
ins
ins
imul
xor
sbb
add
es
shr
shl
and
test
mov
test
(bad)
sti
sub
add
fdivr
loop
jl
pusha
fmul
dec
aam
inc
imul
mov
fisub
leave
pop
imul
fiadd
cli
lods
in
push
loop
jmp
jge
mov
mov
in
cmp
mov
push
in
loopne
int3
cmp
or
js
xchg
xchg
push
(bad)
jno
adc
imul
fs
jp
das
pop
movups
mov
leave
mov
dec
sbb
aas
in
cmp
and
sub
je
sub
test
or
pop
dec
xor
mov
mov
xor
add
push
jle
shl
cmps
rcl
mov
push
jmp
and
mov
sbb
call
in
psrlq
sbb
xchg
(bad)
pop
push
in
dec
cld
imul
iret
mov
push
pop
sbb
ins
xor
adc
xcrypt-ofb
cmps
jmp
inc
imul
jae
(bad)
sbb
push
cdq
lds
cmp
inc
sub
(bad)
ror
fldcw
into
movs
mov
sti
sar
mov
jb
mov
test
mov
fidiv
jecxz
fstp
inc
mov
stc
mov
(bad)
out
fwait
lock
cld
mov
cmp
pusha
mov
or
je
dec
dec
adc
cmps
xchg
pop
iret
in
mov
xor
pop
scas
ins
and
add
(bad)
jnp
or
inc
daa
jge
js
lods
fwait
test
fsub
and
(bad)
fdiv
jo
daa
packsswb
xchg
mov
push
fiadd
add
inc
sub
and
rcr
jns
into
lds
lea
ins
loop
mov
push
test
adc
lahf
jecxz
inc
sbb
add
movs
mov
ret
ins
adc
dec
outs
mov
or
xor
or
jo
fstp
cld
adc
sbb
push
cdq
cmp
iret
dec
jmp
sbb
push
cmc
popa
sub
lds
das
fwait
mov
dec
lock
dec
sar
pop
imul
jmp
mov
adc
push
and
out
mov
mov
cdq
sub
pop
daa
cmp
(bad)
push
sbb
mov
cdq
test
outs
sub
imul
lea
or
mov
mov
xchg
fimul
pop
push
mov
fwait
and
inc
icebp
stc
int3
or
cmp
loope
(bad)
ins
add
adc
sbb
sub
rol
pop
retf
xchg
aaa
rcr
add
fsubp
push
and
pop
or
lahf
lds
adc
xchg
aad
cmps
movs
pop
in
in
mov
sub
bound
call
iret
retf
fst
pop
mov
xor
addr16
jbe
xor
jecxz
call
jbe
lock
(bad)
xor
push
or
or
adc
movs
pop
mov
sbb
retf
push
shl
not
push
imul
and
xchg
dec
jmp
dec
add
pop
inc
leave
sub
ret
cs
aas
into
lock
pop
mov
in
push
xor
and
fcomp
and
sbb
gs
xor
aas
xchg
pcmpeqw
nop
loop
dec
fwait
aam
dec
mov
or
ds
push
or
(bad)
pop
sub
dec
outs
enter
popa
aam
dec
call
scas
cmp
cmps
in
je
push
dec
sub
scas
xchg
cmp
inc
pop
push
mov
add
xchg
pop
loopne
sub
xchg
rcr
or
push
shr
xchg
xchg
push
xor
push
push
loope
mov
out
out
cli
push
repnz
pop
jle
fidivr
fwait
inc
loop
arpl
out
lods
and
in
sbb
and
sbb
pushf
(bad)
dec
or
add
mov
pop
call
pop
repnz
inc
in
outs
inc
cmps
std
push
mov
fcmovbe
mov
inc
mov
jmp
loop
fstp
pusha
mov
mov
cmp
jle
popa
jecxz
(bad)
xchg
pop
and
dec
lahf
daa
or
and
sub
mov
shr
dec
cmps
add
scas
pop
pop
pop
sub
int3
and
jle
popf
xchg
pop
cs
les
xchg
pop
xor
daa
jge
dec
adc
jge
dec
or
mov
dec
sahf
stc
push
and
stc
xchg
retf
mov
mov
addr16
shr
outs
retf
fnsave
dec
imul
clc
pop
adc
shl
call
lds
pop
in
push
cmc
data16
(bad)
arpl
fcomp
(bad)
pop
sbb
pushf
fbstp
mov
jp
cmc
cmps
stos
add
and
or
out
jne
es
jne
ds
icebp
lods
inc
icebp
pop
xor
(bad)
sar
movs
adc
ds
dec
stos
sahf
loope
dec
int3
push
sbb
jb
ins
jne
jns
mov
mov
cmc
cwde
jl
jne
xor
or
mov
out
xchg
hlt
int
pop
loope
pop
dec
jle
dec
pop
scas
(bad)
out
scas
push
jno
mov
jl
push
enter
test
mov
xor
mov
and
fsub
sub
inc
cmp
push
popa
les
push
sub
dec
push
shl
xchg
in
and
imul
sbb
dec
or
sar
xchg
fcom
mov
dec
int3
push
lea
push
test
jmp
mov
aam
out
jne
in
not
mov
sbb
add
lock
sbb
pop
add
stos
mov
xor
xchg
add
dec
dec
inc
push
js
and
xchg
mov
mov
fld
loope
sbb
mov
adc
xchg
push
ins
popf
xor
ja
dec
push
ja
popf
push
cmps
scas
pop
xchg
lds
xlat
mov
cmps
pop
jg
loope
inc
scas
push
mov
mov
scas
jecxz
(bad)
jmp
lahf
push
rol
jg
cmp
and
dec
dec
rcr
loope
push
retf
xchg
xchg
es
push
jno
shr
rcl
sbb
dec
jecxz
int
pop
cmp
inc
inc
xor
sahf
xlat
xor
add
adc
jb
cmc
pop
fwait
jb
test
mov
arpl
sahf
enter
cld
outs
cmp
test
call
push
pop
xor
sub
js
icebp
daa
dec
in
pop
adc
add
cld
push
pop
mov
xor
push
mov
add
das
xlat
sub
and
push
ins
push
pop
pushf
and
mov
sub
js
jmp
lahf
push
lahf
mov
fisttp
into
xchg
sbb
mov
lea
into
loope
inc
sub
mov
scas
aam
and
jp
mov
imul
xor
nop
pop
mov
xor
and
loope
sahf
gs
imul
js
inc
mov
adc
cmp
mov
movs
retf
out
call
(bad)
mov
inc
(bad)
aad
ins
pop
daa
mov
or
sub
pop
mov
arpl
loopne
mov
push
popa
popa
adc
push
aam
stos
xor
push
cmp
xor
dec
jae
mov
ds
dec
mov
sub
xor
and
scas
sti
sbb
enter
in
pop
inc
mov
jmp
inc
imul
push
imul
repz
mov
pop
mov
add
int3
xlat
pop
sbb
pusha
cmp
or
lahf
mov
push
test
or
inc
mov
icebp
dec
push
xor
popf
(bad)
adc
pop
xor
mov
jle
pop
pop
push
and
mov
int3
shl
xchg
jmp
and
sbb
lahf
imul
xor
js
mov
mov
sbb
dec
fldcw
outs
jecxz
ds
stc
push
fs
jmp
shr
(bad)
jno
into
cmp
shl
mov
mov
std
jns
pop
push
out
scas
cmp
push
or
mov
(bad)
xchg
xchg
pop
js
mov
jnp
sbb
arpl
cmp
jl
nop
sub
adc
fbstp
(bad)
fmul
repz
adc
mov
clc
mov
push
jecxz
sub
sbb
xor
pushf
mov
out
dec
test
xchg
mov
cs
ror
jno
fidivr
ret
jge
loop
add
xor
inc
mov
inc
or
mov
mov
pushf
mov
mov
add
test
(bad)
call
les
mov
inc
or
bnd
rcl
aaa
ret
clc
repnz
xchg
pushf
push
ja
jg
pop
(bad)
push
jp
popf
mov
clc
mov
inc
cmps
pop
repnz
lods
repnz
push
ins
push
xor
dec
rol
out
mov
xor
inc
out
test
pop
int3
retf
or
pop
xor
dec
mov
data16
rcl
add
outs
pusha
out
hlt
arpl
jp
test
sbb
cmps
xchg
imul
xchg
fdiv
mov
jp
sub
fistp
mov
(bad)
lock
mov
and
push
bound
cmps
pop
xlat
mov
xchg
cmp
stc
jmp
call
movs
rcl
and
sub
cmp
xchg
loope
adc
sbb
xchg
js
mov
inc
adc
adc
xor
imul
mov
sbb
sub
aaa
std
mov
lock
jbe
nop
jb
clc
xchg
(bad)
imul
mov
stos
call
cmc
or
jne
mov
push
sbb
jmp
and
or
mov
and
sbb
test
and
cmps
icebp
inc
adc
mov
jb
(bad)
push
stos
or
sbb
lock
xlat
fdiv
mov
jmp
scas
in
or
xor
sbb
xchg
jmp
in
adc
xor
shr
test
mov
cmp
leave
mov
mov
mov
fidiv
fstp
sbb
and
bnd
in
adc
mov
xchg
adc
mul
inc
ss
jp
in
(bad)
cmp
mov
test
xor
jb
or
jge
xlat
loope
icebp
lods
push
out
pop
movs
rcr
outs
fiadd
ss
ins
jae
repnz
mov
ss
xchg
cld
retf
icebp
(bad)
cld
test
repz
mov
adc
adc
and
(bad)
xor
pop
out
(bad)
pusha
push
mov
adc
or
push
mov
repnz
inc
ror
stos
inc
loop
pop
dec
aad
jmp
inc
jmp
inc
inc
inc
sti
and
mov
sahf
xlat
sbb
gs
sar
(bad)
push
loop
push
fiadd
shr
bound
jle
inc
test
and
data16
nop
jo
inc
inc
(bad)
xchg
std
daa
icebp
jmp
nop
loope
stc
fidiv
inc
mov
stos
stos
daa
adc
push
pop
push
pop
push
mov
mov
into
lods
sub
sub
cmp
lahf
dec
dec
add
push
repnz
pop
inc
mov
sbb
hlt
(bad)
add
ds
jl
retf
mov
scas
cli
sbb
jp
daa
push
test
movs
or
xor
push
test
popa
inc
cmps
shl
pop
cmps
or
mov
aas
out
push
in
and
sbb
pop
repnz
or
rcl
mov
pop
fbld
sub
dec
cwde
mov
cmp
adc
xor
stos
movs
loop
mov
aas
push
mov
add
es
xchg
out
jp
rcl
add
pop
sar
mov
jle
sar
adc
and
mov
xchg
pandn
add
and
scas
inc
ret
sub
retf
xor
add
psrad
dec
push
pusha
push
jmp
mov
mov
jmp
mov
lahf
adc
call
rcl
mov
sbb
xchg
dec
mov
rep
adc
cmp
and
sub
jb
aaa
mov
imul
sti
or
pop
push
inc
ins
mov
movs
lock
ds
mov
neg
and
dec
mov
push
stc
inc
xor
and
cdq
sti
jno
inc
xchg
sub
and
or
xlat
mov
bound
mov
ds
pop
mov
adc
fsubr
mov
aas
test
lds
push
jmp
xchg
enter
mov
and
cli
inc
dec
arpl
fst
push
push
(bad)
dec
imul
sub
xor
pop
sub
cmp
mov
sar
adc
in
mov
and
mov
xchg
out
mul
test
mov
outs
lahf
mov
pushf
inc
inc
pop
and
pop
or
sub
out
pop
setp
test
pushf
fnstsw
jns
cmp
nop
xor
nop
pushf
(bad)
ins
pop
jmp
imul
mov
and
xchg
add
adc
loope
lods
cmp
ja
lea
ds
inc
loopne
(bad)
sbb
push
mov
lock
add
into
sbb
fsub
hlt
inc
out
ror
mov
sbb
sbb
sbb
ret
jnp
mov
jae
in
add
and
adc
fsub
push
pop
hlt
std
pop
imul
loop
test
mov
pop
or
sti
addr16
popa
stos
adc
and
jle
scas
imul
sub
add
pop
pop
pop
loope
or
ja
out
cmp
repz
out
das
pop
gs
push
and
sub
rcr
xor
ins
xlat
mov
fistp
mov
inc
add
fstp
enter
cmps
int3
cmp
jmp
lods
mov
stos
repz
xchg
and
inc
jmp
fnstsw
sbb
sub
jp
sahf
sub
mov
add
pop
nop
cmp
js
or
dec
lods
fnstenv
mov
hlt
pop
sub
mov
adc
fcomp
lods
mov
jbe
fist
data16
int
fldcw
ss
mov
rcl
push
cmps
es
xor
fs
add
sbb
out
cmp
es
or
stos
dec
das
inc
pop
jge
out
jl
and
adc
mov
icebp
mov
fs
movs
jne
add
fsub
adc
cdq
imul
pop
jb
push
imul
ins
pop
test
shl
mov
pop
inc
add
idiv
cs
mov
jne
mov
pop
mov
xchg
not
pop
push
xchg
mov
xchg
mov
aas
mov
jmp
xchg
cmp
clc
mov
in
cmp
rcr
cmp
cmp
pop
push
jge
mov
cmp
fmul
sbb
sub
xor
ror
sub
jo
push
pop
fisttp
(bad)
clc
xchg
rol
mov
mov
sbb
rol
in
syscall
imul
imul
xchg
les
and
inc
ins
call
pop
popf
popfw
fmul
daa
mov
pop
add
adc
das
jb
push
push
ins
pusha
push
call
pop
add
or
sub
aam
push
push
pusha
adc
xor
adc
addr16
pusha
inc
test
mov
sbb
dec
mov
mov
push
mov
(bad)
jecxz
and
mov
test
aam
lods
mov
retf
push
popa
(bad)
fwait
mov
and
test
movs
fistp
popa
movs
jns
je
add
arpl
mov
aas
cmps
in
inc
cmps
test
inc
fimul
pop
out
xchg
jmp
rol
xchg
xlat
call
aam
fdiv
mov
mov
push
jl
jp
out
jl
ja
in
adc
mov
in
jmp
add
movs
sub
or
mov
cli
pusha
dec
xlat
sbb
loop
gs
adc
pop
push
and
test
in
(bad)
cmp
sti
mov
mov
mov
jle
pop
jbe
dec
pop
jl
xchg
mov
jns
and
imul
cmps
mov
jmp
fs
pop
adc
sbb
stos
jecxz
into
mov
jmp
and
js
xchg
cmp
push
jle
push
pop
sahf
mov
rol
gs
mov
ret
fstp
test
mov
xor
xchg
cmp
lods
bound
sar
repz
int3
shl
jp
sbb
jmp
inc
mov
fistp
xchg
xchg
test
inc
lods
push
xchg
pop
mov
mov
pop
mov
std
xchg
mov
(bad)
std
cdq
xchg
jo
pop
ret
sub
jne
sbb
loope
cmp
int
scas
sub
pop
retf
push
jl
push
mov
pop
out
cmp
rol
test
scas
jno
jo
out
sbb
cwde
lahf
ret
bound
pop
jp
not
out
xlat
int3
call
dec
pop
push
repz
add
pop
int
aas
push
push
out
repz
xchg
loop
xor
icebp
clc
aad
scas
(bad)
or
and
add
test
inc
neg
les
xor
jae
sti
mov
(bad)
lods
mov
push
cmp
xor
aas
inc
rol
or
movs
push
mov
jne
mov
aad
js
dec
fidivr
mov
cmp
jecxz
in
fnop
mov
push
or
pop
test
sbb
call
fbld
push
adc
jbe
out
hlt
and
jne
retf
div
or
ja
dec
pop
(bad)
fisttp
fdivr
bound
aas
add
or
loope
lods
aam
rcr
cmc
ds
ja
cmp
xlat
jns
shl
pop
dec
in
cmc
lock
cli
call
jnp
add
test
les
xor
mov
or
cmp
loop
mov
push
sbb
imul
cmc
inc
or
push
jb
ja
add
in
add
or
ret
daa
aas
pushf
fcomip
nop
inc
shl
rdpmc
lods
xlat
pop
cmp
jp
push
push
hlt
or
xchg
lea
sbb
adc
push
imul
dec
xchg
mov
sub
cmp
sub
inc
cmps
loope
inc
loope
movs
shl
xchg
sbb
mov
lock
ins
cmp
cmp
sbb
loop
jl
stos
fbld
ficomp
pop
xor
sub
test
add
hlt
in
mov
out
outs
pop
mov
aam
enter
adc
push
cmp
cmp
xor
jo
pop
ret
cli
pusha
daa
adc
int
mov
inc
jns
inc
mov
pop
add
sar
cmc
sub
dec
jp
sbb
mov
cmps
xchg
mov
or
adc
retf
arpl
call
mov
jp
stc
ds
outs
inc
mov
and
xchg
popa
add
icebp
sub
cwde
lock
jle
fdiv
or
cmp
dec
jmp
nop
test
mov
(bad)
sbb
or
mov
rol
mov
sub
or
cmp
in
mov
mov
je
mov
es
out
in
xchg
movs
push
xchg
lods
in
mov
dec
push
xchg
out
scas
mov
inc
adc
inc
ror
inc
adc
mov
jle
shld
cmp
xchg
sar
xor
xchg
push
cmp
xchg
mov
inc
mov
xchg
into
and
stc
jbe
mov
ret
sub
fst
dec
add
out
loopne
popa
add
or
jg
mov
mov
cmp
push
popa
stos
jge
or
enter
cmp
or
das
xchg
mov
push
outs
shl
xor
sub
jmp
xchg
outs
outs
imul
(bad)
push
call
test
rcl
jmp
mov
xor
jg
mov
je
lahf
pop
cmp
xlat
jecxz
mov
pusha
jl
fsubr
add
fistp
lea
shl
sub
aad
sub
push
std
jmp
inc
addr16
add
lds
dec
mov
push
push
inc
lahf
retf
and
(bad)
mov
(bad)
lods
cmc
cmp
fwait
xchg
inc
les
ret
jmp
mov
add
pop
pop
pop
retf
mov
bnd
in
cmc
mov
mov
and
ins
fdivr
popw
sub
fst
ret
ins
popf
adc
cmp
test
int
jg
mov
enter
pushf
scas
stos
lea
les
mov
mov
repz
std
push
mov
test
enter
inc
push
jp
xor
mov
sbb
push
call
test
icebp
sub
mov
loopne
cs
xchg
adc
fild
sbb
sbb
adc
sti
ins
sub
call
jp
imul
cmc
xor
sbb
data16
pop
imul
sub
lock
aas
add
popf
pop
test
fild
mov
popf
mov
pop
test
inc
sbb
sub
push
xor
fiadd
cmc
dec
sahf
mov
push
jmp
pushf
mov
add
or
or
inc
mov
sbb
mov
dec
(bad)
retf
rcr
jmp
aam
push
pop
xchg
div
jmp
loopne
adc
add
cmp
ins
and
js
pop
jg
inc
sub
in
adc
(bad)
xchg
or
fldenv
scas
imul
fild
and
clc
push
es
mov
or
dec
pop
adc
and
js
aaa
outs
and
inc
sub
jb
in
xchg
xor
adc
pop
jbe
cwde
les
adc
fcom
and
cmp
in
enter
cmp
mov
dec
push
mov
cmp
shl
clc
popa
adc
jb
pop
sub
bswap
jp
sub
lods
ds
pop
sbb
pusha
test
add
imul
mov
mov
mov
test
inc
or
xchg
xor
xor
in
jmp
mov
cmp
dec
in
daa
iret
or
sub
xchg
sub
cmps
dec
idiv
cmp
push
cmps
and
mov
cmps
dec
sbb
mov
sbb
pop
jmp
inc
fld
cmp
ror
popf
sti
int
dec
call
jo
aas
sti
pop
sbb
push
cdq
xor
js
frstor
std
push
mov
aas
mov
repz
or
into
and
arpl
xchg
stos
adc
xchg
sbb
cmps
lahf
or
add
and
or
call
fiadd
cmp
imul
sub
out
in
sub
push
push
mov
ficomp
push
icebp
sub
jge
fwait
mov
shl
sbb
jle
jecxz
fwait
cmp
jle
icebp
mov
sahf
cmp
jmp
jmp
lods
cmp
push
fcomp
push
add
jmp
push
or
mov
sub
or
xchg
aad
mov
sbb
cmp
xchg
jg
outs
add
ja
pushf
in
mov
stc
adc
mov
mov
pushf
(bad)
sar
jge
xchg
fld
and
adc
mov
mov
ja
enter
out
xor
mov
out
and
adc
lock
imul
mov
cld
adc
(bad)
repz
push
fld
xchg
dec
inc
pop
xor
shl
test
fadd
jo
retf
dec
sar
cmp
out
push
jmp
inc
fcom
mov
in
into
mov
inc
mov
jp
cld
cmp
int3
jg
sub
adc
jnp
dec
out
mov
(bad)
jle
loope
sti
daa
sub
sub
push
movs
jle
out
cmp
jp
mov
iret
out
mov
or
call
leave
outs
add
mov
sub
(bad)
ss
leave
cmp
fwait
lods
mov
pusha
mov
lods
sbb
add
xchg
push
fcomi
mov
jmp
int
lahf
and
mov
mov
fwait
push
cs
fdivr
pop
js
sub
mov
cli
dec
(bad)
sbb
sbb
xchg
rcr
push
cmp
aam
xchg
adc
or
pop
dec
cli
sub
das
icebp
fsub
mov
test
shl
and
mov
in
jae
xchg
(bad)
push
cmp
xor
(bad)
stc
pop
mov
js
jge
dec
cmp
sub
ss
mov
pop
or
fmul
shr
mov
fbld
mov
stos
add
inc
adc
fisttp
mov
out
test
adc
popf
mov
xor
or
leave
je
je
fcom
fadd
mov
or
out
or
test
pusha
and
mov
or
(bad)
pop
lea
push
jnp
push
xchg
leave
out
popa
push
inc
push
mov
iret
xchg
das
or
fs
xor
pop
mov
mov
push
fwait
push
push
sub
stos
push
push
mov
mov
dec
in
cs
and
or
nop
cmp
nop
inc
je
sub
(bad)
std
fistp
jmp
leave
cmp
stc
mov
nop
ror
pop
jno
lds
dec
pop
loopne
call
pop
jb
push
aaa
sbb
push
dec
retf
sbb
(bad)
xchg
fwait
mov
jns
pop
dec
adc
lods
push
and
fist
push
lods
icebp
bound
stos
aam
push
xchg
loopne
jge
in
mov
aaa
adc
dec
cmp
and
(bad)
aad
mov
xor
sbb
hlt
sbb
out
loop
cmp
mov
xchg
push
sbb
inc
jle
jns
dec
bound
and
inc
add
jbe
pop
loopne
hlt
(bad)
or
mov
das
jg
xor
or
inc
sbb
xor
das
test
cmps
fsubr
aam
and
call
pmaddwd
mov
clc
xchg
ds
xlat
pop
push
and
dec
in
scas
arpl
or
and
add
repnz
int3
add
cmps
pop
cdq
dec
pop
shl
loop
outs
add
jl
fwait
inc
jno
pop
data16
scas
push
dec
mov
mov
ret
fdiv
xor
add
sub
ds
(bad)
into
in
sahf
aam
add
ins
push
in
ins
fdivr
dec
repz
mov
repz
mov
xchg
xchg
mov
mov
cmp
ret
test
loopne
dec
lods
or
cmp
mov
mov
nop
movs
hlt
rcr
and
(bad)
pop
(bad)
popa
sub
xchg
scas
jecxz
pop
call
pop
cld
(bad)
bound
hlt
mov
out
(bad)
mov
mov
mov
xchg
dec
sbb
xor
mov
les
inc
pop
mov
adc
adc
bound
jmp
and
fbstp
pop
pop
out
leave
enter
addr16
ds
icebp
cmp
pusha
in
cmp
lahf
sub
ret
and
push
movs
ds
mul
push
sar
dec
das
sahf
jp
cmp
jg
push
les
dec
and
stos
and
xchg
push
and
cli
mov
movs
mov
fadd
fwait
test
jg
cdq
(bad)
sbb
in
test
stc
jo
pop
xchg
cmc
xchg
mov
wbinvd
stos
xchg
call
jp
ins
ret
jne
add
pop
test
repnz
pushf
pop
and
fldenv
repz
push
push
stos
adc
into
jae
mov
std
push
add
and
pusha
xor
jnp
sub
or
popa
out
cmp
sub
or
xchg
fstp
dec
or
clc
mov
daa
xchg
mov
or
popa
jl
aaa
psubq
cmps
les
add
into
pop
mov
pop
out
pop
inc
pop
outs
shl
xchg
add
lods
lock
fs
sbb
jo
adc
and
bts
test
mov
test
push
pop
and
aas
lahf
inc
add
mov
pop
ds
bnd
add
cdq
ins
or
mov
add
test
or
out
mov
mov
mov
push
out
add
imul
pop
test
and
(bad)
jb
inc
jl
inc
dec
lds
inc
jp
(bad)
dec
sub
into
xor
aam
dec
in
data16
xchg
mov
and
push
out
and
les
fld
sub
fld
mov
les
icebp
xchg
jge
outs
cmp
xchg
inc
rcl
push
sti
xchg
jno
mov
sbb
pop
adc
mov
aaa
iret
int
out
mov
mov
arpl
loop
and
xchg
push
cmp
fstp
mov
pusha
test
or
movs
call
inc
(bad)
cld
lods
jnp
data16
push
outs
xor
je
(bad)
outs
mov
cmp
scas
mov
imul
repz
cmps
pop
sahf
jge
cld
xchg
jb
std
jl
mov
mov
push
xor
out
push
and
or
lahf
xchg
cld
jmp
pop
icebp
sbb
ret
stos
in
sbb
jmp
mov
sahf
call
(bad)
(bad)
es
fs
push
fs
scas
dec
dec
inc
mov
adc
in
ins
adc
out
shr
sbb
das
jbe
(bad)
lock
adc
dec
test
and
push
iret
mov
rcl
jae
js
jmp
mov
outs
pusha
fmul
inc
int
pushf
sub
jg
clc
add
cmp
jge
loopne
jbe
mov
movs
movs
inc
addr16
test
ins
and
test
cmp
mov
jb
add
sub
sbb
nop
aad
pop
xor
xchg
push
jae
jns
rol
fnstenv
push
push
pusha
dec
movs
push
cmc
test
sbb
mov
sub
mov
sub
(bad)
push
retf
jmp
jns
rcl
push
(bad)
jns
dec
mov
cdq
push
pop
imul
cdq
push
in
xor
in
rcl
jbe
addr16
inc
iret
movs
into
bound
inc
lea
jl
push
outs
test
sub
cmps
imul
push
mov
adc
call
ins
sti
inc
out
mov
mov
mov
jmp
or
je
jmp
ss
xchg
cwde
scas
sbb
call
clc
cld
push
and
mov
lea
mov
imul
std
mov
push
or
or
ds
sbb
xor
out
dec
cmps
shld
ds
or
js
ret
ins
in
scas
in
adc
daa
or
jns
sub
icebp
and
add
mov
aad
mov
(bad)
push
sub
and
outs
ficom
push
outs
into
bound
leave
test
loop
sub
stos
call
icebp
repz
aad
adc
adc
daa
int3
fistp
js
xor
in
xchg
shr
dec
fsub
daa
or
xor
xor
xchg
inc
test
add
pop
mov
loope
sub
es
cmp
lods
cmp
sub
lahf
mov
xchg
call
ins
dec
xchg
dec
lock
dec
pop
and
jl
getsec
jo
ins
add
neg
sar
push
shl
call
lds
ficom
sub
inc
movs
leave
xor
fwait
stc
push
inc
xor
lea
(bad)
imul
fbld
mov
loope
enter
dec
cmps
inc
ret
mov
cmps
inc
mov
and
xchg
out
push
fwait
add
push
cmps
fcom
scas
cwde
adc
movs
sbb
outs
imul
in
mov
dec
out
add
inc
pop
mov
sahf
cwd
push
add
lods
scas
cs
int
stc
sub
stos
inc
dec
test
pop
mov
mov
mov
in
sbb
pop
or
xchg
ficomp
enter
loopne
jne
pop
shl
cli
stc
std
pop
gs
test
mov
jmp
dec
jmp
nop
das
fisubr
fst
inc
mov
js
ficomp
cld
cmps
jae
dec
mov
dec
pop
sub
fcom
push
push
dec
add
adc
cmc
sbb
dec
(bad)
jnp
dec
cmc
fld
in
loope
and
xor
in
sbb
stc
adc
outs
mov
and
mov
gs
push
sub
(bad)
cmp
pop
repz
xor
inc
add
cmc
mov
pop
pop
retf
cdq
fcmovnu
test
mov
jns
jb
cmp
dec
cmp
ins
inc
(bad)
aad
ins
add
outs
ror
test
or
bound
in
outs
in
jnp
out
fbstp
sbb
add
shr
retf
std
push
scas
movs
fistp
cmp
mov
xchg
fwait
inc
inc
shl
outs
cli
mov
fild
(bad)
not
addr16
retf
push
ins
shl
loop
dec
sub
lods
lock
inc
cmp
cmps
mul
xor
retf
add
mov
mov
cmps
in
xlat
inc
xchg
sbb
sti
rcl
mul
dec
and
int3
or
push
mov
ret
outs
pop
popa
and
das
enter
mov
xchg
ret
mov
pusha
fnsave
mov
call
dec
aad
dec
sub
push
(bad)
rcl
loope
ret
out
sbb
mov
pop
movs
pushf
repz
(bad)
fld
adc
and
popf
xchg
sbb
and
adc
ss
mov
push
cdq
add
fwait
push
mov
cmp
xchg
daa
push
(bad)
dec
sbb
push
cwde
or
jo
dec
cmp
movs
sub
or
push
lods
fisubr
adc
hlt
sbb
inc
xchg
mov
push
fwait
stos
sub
outs
cmc
add
sub
mov
sbb
hlt
pusha
test
xor
push
retf
or
es
mov
test
pop
gs
mov
push
dec
push
ja
inc
imul
je
(bad)
fwait
adc
and
add
test
sub
jle
loope
fidiv
mov
clc
movs
mov
lock
stos
mov
mov
mov
adc
push
cmp
xor
dec
int
aas
cli
cmp
mov
aad
mov
rol
call
sbb
mov
inc
xlat
adc
mov
cli
jnp
cmp
inc
add
push
test
sbb
xchg
mov
pop
out
rcr
xchg
aaa
push
lock
cmps
jle
push
sar
adc
popa
and
ror
mov
jo
push
add
ins
sbb
push
dec
arpl
push
loopne
dec
push
push
jmp
xor
jno
adc
push
sbb
add
(bad)
out
push
push
mov
loop
aas
outs
rcr
push
dec
bound
dec
or
inc
mov
(bad)
scas
jne
mov
pop
mov
scas
jns
jo
sub
or
ror
test
fs
(bad)
fwait
int
je
loope
fmulp
pop
das
enter
mov
jp
push
in
cdq
dec
ret
aam
in
sbb
add
aas
inc
mov
push
mov
mul
sti
push
jle
test
rcr
or
push
lahf
push
pop
jne
sub
jl
mov
enter
mov
sar
dec
nop
or
jb
loopne
mov
sub
inc
or
ret
ins
cli
scas
cmps
hlt
in
dec
sub
push
nop
inc
xchg
mov
adc
dec
jmp
retf
(bad)
cli
adc
pop
popa
mov
sub
and
ds
clc
jecxz
mov
and
pop
mov
cmp
xchg
cmc
aad
retf
xlat
pushf
mov
sahf
xchg
pop
push
stos
adc
push
sub
outs
sbb
pop
xchg
push
or
xor
dec
cmp
inc
pop
or
and
outs
jecxz
retf
sbb
(bad)
fsubr
enter
xor
xlat
repnz
dec
or
jp
fadd
cmp
pop
fucom
out
outs
xor
pop
fisttp
and
aad
fmul
sbb
fidivr
xor
fmul
shl
dec
dec
(bad)
rcr
pop
popf
pop
sbb
sub
in
mov
(bad)
loop
int
push
add
sahf
clc
stos
stos
fistp
into
pop
xor
push
jnp
je
mov
push
inc
cmc
hlt
mov
aaa
out
sbb
jns
arpl
push
lds
xchg
pop
dec
cmp
xor
jge
ret
shl
les
cmps
or
dec
ret
jbe
adc
xor
or
call
sub
in
sbb
mov
and
pop
pop
mov
xchg
push
nop
loop
dec
cdq
cmp
cmps
(bad)
ror
ss
pop
mov
sub
and
dec
fdiv
push
lock
or
xor
inc
cmp
(bad)
retf
jns
cmp
test
ins
sub
jns
les
cmps
add
mov
jae
pop
sbb
imul
scas
js
cmp
sbb
fldcw
and
and
loop
xchg
pop
test
ret
enter
aas
out
jmp
mov
and
push
ret
sti
cld
add
rcr
cmp
cmps
xor
and
stc
add
cmp
push
(bad)
retf
jp
jmp
out
pop
cli
les
pop
adc
adc
ss
adc
leave
mov
xchg
and
ret
lea
sbb
test
test
arpl
mov
pop
or
xchg
cmps
inc
pop
out
icebp
add
arpl
push
pusha
sti
arpl
mov
add
xor
cmp
fisubr
xchg
cmc
(bad)
pop
xchg
xchg
ss
pop
cmps
push
repz
les
pop
push
bound
xor
ins
outs
push
add
in
xchg
out
or
pusha
or
jae
fnstcw
push
movs
pushf
cmp
push
inc
test
and
std
push
push
cmps
dec
xor
int3
lods
pop
(bad)
fcomp
xchg
xor
push
sbb
jmp
das
push
mov
mov
pop
cwde
sbb
xlat
or
add
pushf
jne
inc
stc
fld
add
adc
adc
outs
adc
push
mov
dec
fsub
mov
push
push
aas
jne
stos
xchg
cmp
xor
mov
daa
cmp
mov
mov
dec
popa
xchg
push
xchg
push
dec
popf
pop
icebp
cli
xchg
shl
dec
mov
xchg
outs
je
xchg
imul
popa
jmp
xchg
inc
mov
or
xlat
test
or
clc
test
push
out
sub
mov
and
sbb
repz
mov
hlt
or
imul
imul
sub
fwait
clc
sar
xchg
and
dec
mov
int
leave
(bad)
jnp
sbb
cwde
dec
mov
retf
cmp
iret
cmps
leave
xchg
sub
lods
xor
mov
pop
xor
pop
sub
cli
inc
xchg
je
fs
jmp
add
jl
cmps
or
fucomp
stos
dec
mov
xchg
jg
fwait
cmp
rcl
xor
mov
jbe
mov
jp
imul
push
loopne
mov
cmp
adc
mov
sub
je
sbb
jns
push
add
xchg
stc
adc
push
mov
rcr
dec
adc
push
out
int3
not
ja
iret
stc
push
mov
xchg
sub
push
cwde
mov
das
mov
dec
adc
test
icebp
aad
pushf
outs
jl
lahf
mov
ins
(bad)
pop
es
add
retf
cmp
adc
(bad)
sub
shl
adc
jb
in
stc
mov
push
add
std
iret
xor
shl
mov
push
cmp
ror
or
inc
test
mov
fs
mov
inc
imul
pop
mov
movs
jg
outs
cdq
jle
sbb
dec
out
arpl
mov
dec
aas
gs
test
icebp
out
imul
sub
xor
bound
movs
out
push
mov
ds
pop
pushf
add
mov
or
mov
fistp
jnp
lahf
push
sub
fcom
mov
mov
sub
loop
fld
add
mov
rcl
popa
sbb
jmp
jnp
jp
sub
jno
pop
(bad)
cld
bound
xor
pop
pop
mov
cmc
cs
aaa
rep
cmp
jne
sbb
(bad)
sub
xor
daa
lock
dec
mov
mov
or
xor
lock
adc
(bad)
jp
in
ins
lods
aaa
mov
mov
dec
aas
popa
ret
lods
retf
and
xor
sub
cdq
mov
ret
push
jmp
cs
dec
loop
popa
mov
repnz
push
popf
push
sbb
add
sub
daa
ds
cmps
mov
iret
sar
add
aad
call
xchg
inc
fcmovb
lahf
nop
jp
adc
mov
(bad)
retf
bound
enter
aam
sub
pop
outs
push
push
push
pop
ss
jns
cs
fisubr
dec
inc
call
stos
xor
xchg
add
push
mov
push
imul
inc
pop
jb
shl
ins
lea
inc
or
mov
cwde
or
add
fxch
(bad)
jmp
bound
(bad)
sbb
push
sub
cld
dec
outs
cmp
scas
push
lds
imul
bound
(bad)
dec
dec
push
ins
(bad)
imul
sub
inc
xor
outs
icebp
call
jmp
ja
sub
(bad)
out
test
jbe
fwait
outs
mov
jg
mov
xchg
lahf
int3
xor
push
repnz
iret
test
jae
in
jbe
pop
pop
in
or
mov
loop
(bad)
fiadd
in
movs
dec
sub
cmp
(bad)
arpl
jnp
xchg
inc
pop
jnp
or
pushf
xchg
pop
pusha
add
loope
jmp
enter
inc
fadd
cmps
add
push
fisubr
push
div
and
enter
rol
pop
pop
movs
aad
std
push
pop
clc
sub
and
scas
inc
mov
push
sbb
cld
xor
bound
dec
add
jmp
jp
lds
sbb
retf
out
xchg
test
je
cmp
add
ret
mov
scas
fsubp
sub
mov
punpckhbw
and
sub
scas
in
stos
jne
jb
shl
cmp
pop
mov
xlat
cs
popf
out
cmp
dec
lds
push
fwait
jae
movs
lods
push
jmp
fsubr
loopne
cmp
jmp
mov
pop
mov
push
adc
out
cmp
cwde
stos
jmp
sub
pop
nop
dec
aaa
stos
out
cdq
jmp
push
cmp
(bad)
sub
mov
ds
add
imul
test
cmp
pop
mov
adc
sub
mov
dec
pop
xchg
sbb
dec
test
into
xor
faddp
aas
push
mov
adc
inc
cmp
push
stc
pop
mov
add
and
(bad)
lahf
jg
xor
test
jnp
cwde
outs
xchg
leave
fucomi
xchg
push
jmp
inc
pop
xor
mov
lea
in
ins
iret
jns
mov
mov
xchg
test
push
sti
cmp
in
cs
fstp
mov
push
rcl
scas
jg
mov
aam
les
xchg
fsubr
xchg
jmp
leave
add
data16
xchg
push
jmp
xor
clc
loopne
mov
cmp
jl
fistp
pushf
data16
inc
gs
jno
and
out
out
lock
les
data16
push
jmp
(bad)
rcr
xchg
(bad)
sbb
adc
lahf
retf
out
cmp
outs
ja
std
fadd
xor
and
scas
mov
pop
stos
(bad)
ins
and
repz
sbb
sahf
xor
jno
push
mov
cmp
aaa
(bad)
cmp
int
and
ds
movs
cmp
adc
sub
pop
and
xlat
cmp
sbb
ret
jle
dec
sahf
and
bound
sbb
repz
cmc
das
iret
mov
aad
xchg
fiadd
fist
cmp
xchg
xchg
pop
cmp
mov
mov
scas
cmp
adc
call
xor
sub
jae
aad
sar
popf
aas
out
push
push
inc
dec
cmp
lea
dec
add
jge
mov
sub
test
hlt
cli
xor
popf
mov
js
bound
mov
push
jmp
and
leave
xchg
mov
add
cld
xchg
sub
rol
xbegin
and
xor
data16
inc
dec
enter
mov
jmp
adc
(bad)
ins
xor
pop
mov
xchg
aas
mov
(bad)
call
arpl
int
shr
dec
push
sbb
mov
pusha
(bad)
iret
das
adc
push
div
push
and
mov
cmp
inc
mov
xor
cmps
push
or
xchg
push
aad
aaa
aam
es
popf
fdiv
xchg
xchg
pop
aas
xchg
sub
(bad)
(bad)
jno
jmp
sub
jg
xchg
stos
cwde
inc
xchg
das
push
mov
punpcklwd
test
lods
push
or
lods
jl
jbe
push
mov
sbb
aam
call
mov
test
inc
inc
lock
lods
lahf
xlat
jle
nop
dec
jge
imul
test
pop
sub
dec
ins
xor
in
lods
xchg
ffree
mov
dec
into
and
es
shl
xor
retf
clc
shl
les
mov
xchg
or
and
mov
jmp
push
aad
mov
and
jecxz
es
imul
pop
test
and
into
aas
pop
pop
imul
pop
sub
add
cmp
icebp
cmp
retf
xor
movs
mov
lea
cmc
iret
mov
clc
mov
movs
cmp
jne
aaa
jae
repnz
jmp
sub
(bad)
mov
int3
fiadd
jmp
cmp
cmp
test
lods
mov
jp
pusha
sub
fild
dec
outs
pop
jp
add
add
stos
sub
dec
les
pop
rcl
data16
or
outs
scas
mov
(bad)
adc
xchg
rcl
cld
sbb
out
adc
shl
pushf
mov
mov
inc
fldln2
dec
std
pop
jb
ficomp
std
gs
in
sub
jmp
clc
mov
jecxz
pop
sub
loopne
add
pop
popa
mov
mov
add
das
loope
xor
xchg
int
push
ds
push
ins
lods
jo
sbb
ret
lock
mov
cmp
dec
bound
mov
(bad)
add
or
ins
adc
push
mov
(bad)
mov
int3
mov
sbb
imul
or
xchg
daa
jecxz
mov
mov
sahf
cmp
stos
push
dec
in
in
xor
pop
mov
in
pop
sub
retf
fstp
popf
or
(bad)
mov
pop
pop
mov
xor
and
adc
cli
xchg
push
inc
and
mov
stos
xchg
clc
mov
sub
add
ins
xchg
ret
dec
int3
add
adc
inc
jp
inc
fidivr
jo
push
cmp
dec
movs
sub
out
mov
adc
shr
data16
fisttp
push
sar
je
ret
je
inc
or
xchg
inc
add
sbb
in
sbb
repnz
cmps
xchg
(bad)
call
clc
sbb
cdq
(bad)
jmp
sub
addr16
mov
jmp
xor
push
in
sahf
das
pop
push
iret
dec
mov
add
cwde
inc
push
jb
jbe
bnd
jmp
push
cs
jge
data16
sub
out
sbb
xchg
jecxz
mov
les
int3
and
sahf
fiadd
sbb
mov
hlt
inc
and
(bad)
aam
cmp
mov
and
and
jmp
inc
jns
cmc
sbb
lea
mov
mov
adc
in
imul
call
xchg
adc
pop
cmps
inc
jns
adc
fild
or
push
(bad)
rol
test
or
mov
mov
inc
scas
scas
pop
data16
push
test
push
jne
scas
and
push
(bad)
div
push
mov
mov
add
cmc
sbb
cld
push
mov
dec
dec
pop
push
adc
inc
jecxz
mov
lods
or
mov
jae
sub
inc
xor
pushf
and
pop
add
mov
outs
movd
xchg
mov
xchg
(bad)
inc
dec
mov
push
repnz
adc
call
adc
imul
test
call
xchg
stos
or
pop
psubusb
add
int
fsub
stos
in
fld
xchg
movs
lods
or
or
in
fcmove
xchg
jno
jmp
gs
lock
or
imul
jno
out
inc
out
test
push
cld
sbb
lds
pop
jmp
xchg
xchg
bound
pcmpgtd
jae
or
out
and
dec
pop
pop
mov
jge
adc
(bad)
push
cmp
movs
(bad)
sub
ins
cmps
add
scas
mov
and
push
in
mov
test
mov
ret
sbb
mov
aam
repz
ret
ins
dec
call
cmps
add
into
sbb
loopne
jg
xor
scas
ja
mov
scas
in
scas
xchg
inc
out
push
ja
push
pushf
test
cdq
ss
jne
add
push
push
outs
pop
aaa
lods
movzx
cld
sbb
mov
mov
add
mov
sbb
xor
cmc
xchg
jne
fcomp
pop
jmp
jle
push
sbb
xor
ret
xchg
test
test
outs
les
es
xor
adc
and
nop
repnz
inc
pusha
ds
hlt
sbb
leave
dec
es
arpl
jecxz
fnstsw
sub
lods
inc
cs
inc
out
mov
add
and
je
jge
dec
repz
(bad)
in
sbb
aaa
add
out
bnd
ins
(bad)
das
jp
iret
icebp
pop
out
push
pop
mov
xlat
jg
shr
mov
ret
ins
das
lods
adc
and
iret
icebp
push
cmp
test
push
cli
pushf
fistp
mov
or
gs
mov
pop
and
pop
dec
or
gs
mov
test
pop
rcr
cmp
fisub
mov
loopne
mov
dec
jmp
lock
test
retf
adc
sbb
or
jmp
and
sub
pop
enter
daa
inc
js
je
mov
in
xor
add
mov
push
dec
pop
data16
cwde
jle
inc
cmps
cmc
dec
(bad)
pop
xor
push
push
cmps
iret
(bad)
fwait
jmp
mov
xchg
pop
enter
jp
or
inc
inc
push
mov
or
out
mov
int
cmp
shr
pop
shr
js
cld
shl
pop
(bad)
rcr
out
and
out
pop
mov
test
or
stos
je
cmp
mov
xchg
gs
or
out
xor
test
pop
sbb
into
mov
pop
sub
or
mov
pop
xchg
and
or
and
mov
or
cmp
aad
xchg
xor
mov
ja
out
sub
scas
rcr
std
repnz
adc
dec
rcl
mov
push
out
(bad)
xlat
or
dec
cld
fcom
pop
and
or
pushf
cli
xchg
sbb
out
jno
inc
lock
xor
fdiv
leave
dec
call
pushf
mov
das
cs
mov
outs
cmp
icebp
outs
or
mov
mov
jg
mov
ja
xchg
int3
sub
push
jmp
arpl
xchg
ins
dec
xor
imul
mov
int
mov
mov
push
cmp
les
popa
(bad)
add
sub
int
(bad)
out
and
add
xchg
cmps
das
xor
movs
sar
in
pcmpeqb
and
in
add
jp
shl
push
inc
neg
ret
adc
nop
jle
sbb
jg
xor
fwait
pop
sti
mov
cmp
push
mov
in
ds
(bad)
jl
pop
mov
push
mov
and
lock
scas
cmp
ret
(bad)
sbb
dec
push
pushf
pop
pop
out
(bad)
and
jmp
inc
out
sub
xchg
lds
mov
dec
loop
pop
or
push
das
loop
pop
xchg
push
inc
mov
xor
mov
shl
push
jno
or
pop
daa
lock
mov
inc
push
(bad)
aaa
inc
sbb
jne
mov
dec
pop
or
(bad)
int
repz
sub
adc
pop
(bad)
repnz
mov
test
cld
inc
iret
into
mov
xor
fwait
je
jnp
jecxz
inc
or
dec
xchg
jbe
push
jbe
call
adc
inc
cmp
fbld
adc
pop
adc
pop
stc
xor
loope
fstp
push
xchg
adc
cld
mov
lock
(bad)
fisttp
repnz
sbb
out
jnp
mov
jmp
and
xchg
cmp
mov
ins
jns
loope
or
push
adc
and
mov
pop
pop
out
out
scas
(bad)
cli
cmc
fiadd
jno
dec
mov
outs
test
ret
retf
ror
hlt
jg
nop
xchg
fisttp
(bad)
std
imul
xchg
mov
or
(bad)
cmc
pop
ret
rcl
fisub
adc
add
xchg
cmp
dec
or
sub
sbb
js
or
stos
in
jbe
ja
lods
or
push
ret
sub
pushf
out
mov
cmc
push
or
jne
stos
mov
mov
shl
xor
inc
loope
sahf
xchg
ficomp
sti
dec
rcpps
mov
mov
stc
sbb
scas
int
jb
cwde
sahf
sbb
pop
jmp
fsubr
xor
aas
cmp
mov
pop
leave
ret
jle
pop
fsub
push
lods
dec
fstp
adc
ret
mov
int3
fsubp
call
cwde
cmps
and
cmp
fcom
(bad)
jns
or
dec
fisubr
push
mov
sbb
lock
inc
mov
loop
daa
add
pop
std
loope
enter
dec
cld
jp
cld
pop
mov
rcr
pop
scas
jnp
call
enter
xor
ret
xchg
jno
in
or
adc
mov
shl
jb
add
mov
ficom
cmp
imul
lds
jo
(bad)
mov
sbb
or
les
and
(bad)
fisubr
fwait
xchg
movs
cmps
ret
les
in
mov
hlt
cmp
mov
sti
repnz
sbb
jge
into
mov
repz
ficom
cli
leave
out
rcl
mov
ror
(bad)
mov
inc
ss
ss
inc
xor
clc
popa
in
mov
les
mov
xor
sbb
xor
xchg
or
es
outs
add
push
jnp
int3
mov
retf
sbb
mov
jmp
or
rcl
fwait
test
ds
cmp
push
dec
ret
dec
js
adc
and
movs
test
pop
fisttp
imul
arpl
add
popa
cwde
sub
push
lods
enter
aas
test
stos
jo
or
mov
stos
sahf
pop
jl
fnstenv
xchg
cmp
sti
fwait
in
and
mov
std
in
test
shr
cmp
or
pushf
fbld
sub
jns
popa
and
inc
pop
sbb
(bad)
dec
ffree
(bad)
out
and
xor
test
mov
push
jle
cmp
xor
sub
repz
jge
sub
daa
cmp
mov
mov
ds
adc
add
stos
push
or
jge
push
dec
dec
stos
call
out
clc
arpl
xchg
aad
retfw
jbe
inc
jns
(bad)
mov
jmp
or
adc
mov
shr
call
sub
jge
data16
jmp
rcr
xor
loopne
mov
(bad)
outs
addr16
outs
cmp
cmp
ds
sbb
xchg
ins
or
dec
push
addr16
or
and
hlt
cmp
jp
push
pop
push
shl
pusha
push
sbb
cmp
xchg
cmp
in
fcom
xor
mov
or
mov
nop
dec
jae
(bad)
push
lods
gs
pop
cmp
test
mov
retf
fld
outs
ins
or
or
sub
(bad)
cs
cmc
ja
into
nop
mov
out
retf
imul
mov
inc
add
stos
push
ret
xchg
hlt
loopne
fisubr
jnp
add
(bad)
dec
sub
jb
cmp
imul
jmp
sbb
jle
iret
scas
jbe
shr
cmp
xchg
xchg
cs
aam
mov
inc
fwait
mov
nop
cmc
dec
sbb
mov
es
lock
loop
pop
sbb
sub
hlt
ja
xchg
jno
mov
jb
not
scas
rcr
fldcw
inc
jnp
je
fsubr
and
test
and
nop
xchg
add
dec
push
outs
inc
ret
jno
inc
xor
mov
lea
out
fld
ds
push
jl
mov
out
popa
loopne
cmps
pop
shl
jns
test
cmp
dec
and
push
inc
mov
sub
leave
push
add
aaa
jecxz
addr16
dec
pop
sbb
mov
jno
inc
dec
lods
fdiv
lea
sbb
sti
imul
and
mov
cwde
and
mov
add
adc
cmp
(bad)
lock
nop
retf
mov
inc
icebp
stc
inc
std
mov
xor
jle
imul
pushf
push
add
or
mov
repnz
jnp
mov
mov
sub
mov
call
pop
out
int
int
sub
sub
and
pop
stos
push
aad
dec
data16
mov
adc
cld
repz
in
inc
std
mov
out
sub
sbb
aas
sub
jecxz
ret
ud1
ds
lods
lock
in
out
mov
mov
sub
cs
xchg
and
hlt
jae
or
sbb
push
dec
aad
sahf
movs
push
or
repnz
pop
add
test
push
sub
mov
mov
fwait
stc
jl
stos
cmps
pop
in
movs
nop
int
add
cmp
sub
out
mov
test
sbb
mov
lods
or
mov
or
jbe
dec
ds
into
mov
into
out
iret
(bad)
add
pop
pop
ror
pushf
adc
jmp
shl
fdivp
fld
mov
add
cli
pushf
(bad)
ror
xchg
cmp
(bad)
fstp
add
add
stos
sbb
dec
or
lock
mov
push
push
imul
mov
test
or
in
inc
pop
dec
and
adc
adc
or
ds
mov
add
imul
out
sub
in
js
icebp
ror
jmp
add
iret
int3
jge
adc
pop
xor
test
push
push
lods
xor
push
pop
add
xor
rcl
ror
jns
inc
pop
jne
adc
mov
mov
std
fsubr
mov
push
mov
retf
adc
out
inc
sbb
inc
lahf
jo
in
inc
pop
mov
sbb
mov
push
mov
leave
lea
inc
cmps
sub
ret
in
and
iret
das
out
int
adc
sbb
dec
imul
pop
mov
fidivr
out
xchg
lds
push
xor
(bad)
sbb
jge
or
inc
pop
add
mov
inc
leave
sub
xchg
inc
and
jb
out
add
and
(bad)
mov
or
jo
lods
sub
push
cli
dec
and
pop
cmps
mov
inc
fadd
cld
or
icebp
sahf
pushf
dec
dec
lods
xor
pop
jge
aam
aas
sti
sub
stc
jb
jl
fwait
cmc
int
call
(bad)
xchg
inc
mov
xchg
mov
call
adc
pop
sub
retf
es
jbe
rcr
enter
push
sbb
adc
test
call
cmp
xrelease
ror
call
or
cwde
cmps
rcr
cmp
in
cmps
aam
cmps
mov
jo
dec
jl
xor
inc
or
mov
in
cmps
push
jp
sub
sbb
sbb
call
jno
mov
test
pushf
ficomp
cmp
jp
iret
xor
mov
mov
gs
fiadd
jae
cmp
aas
xchg
pop
or
int3
nop
fisttp
xchg
add
ret
movs
call
cmc
mov
jnp
or
cmp
adc
add
in
fild
icebp
mov
push
push
arpl
out
sub
out
inc
(bad)
push
xor
dec
dec
cmp
add
push
fsub
outs
sub
idiv
lahf
add
test
aaa
aas
jl
add
cmps
dec
call
cmps
lahf
ds
mov
mov
into
add
mov
sahf
repz
in
mov
push
das
cmp
jno
leave
push
dec
data16
jb
add
add
xor
data16
pop
scas
push
push
pop
fxch
and
sbb
outs
push
pop
inc
in
sar
pushf
cmp
gs
push
fwait
les
loop
jecxz
repnz
add
(bad)
fsubr
ror
or
jmp
inc
adc
retf
(bad)
adc
das
fst
mov
fwait
mov
xchg
adc
mov
or
pop
fdivr
(bad)
sbb
rol
movs
ret
push
cmps
(bad)
lods
mov
stos
add
clc
mov
inc
clc
mov
mov
mov
dec
(bad)
stos
test
cdq
enter
leave
inc
xchg
loopne
out
inc
ins
xchg
in
shl
push
pop
sub
mov
loope
pop
outs
jbe
fucom
mov
and
fs
iret
cli
out
pop
push
movs
scas
xor
add
cmps
xchg
int3
xchg
sub
xor
test
pop
mov
ja
aaa
or
jg
outs
fisubr
dec
push
mov
mov
xchg
sub
sahf
loop
pop
faddp
popa
lods
xor
test
mov
push
xor
stos
mov
stos
retf
clc
sub
popf
pop
fnop
fucomp
and
mov
inc
mov
mov
and
scas
ret
adc
mov
rcr
(bad)
or
jmp
xchg
das
rcr
jmp
xchg
cmps
pop
stos
xchg
jb
fucomp
pop
and
imul
in
pop
push
jl
aaa
dec
cmp
jle
xlat
inc
add
push
scas
add
fmul
xchg
retf
push
adc
out
push
or
(bad)
mov
dec
ret
bound
imul
push
or
(bad)
aaa
(bad)
xor
jno
aam
and
jg
sbb
pop
push
adc
not
push
cmps
fnstcw
pop
ss
xor
jge
mov
mov
arpl
in
emms
test
dec
pushf
loop
mov
cli
je
ret
ror
xor
(bad)
or
xchg
jno
push
mov
ins
mov
out
pop
fcomp
sbb
das
jmp
repnz
idiv
fld
sub
xchg
clc
in
and
or
popf
push
xor
popf
push
jnp
ins
frstor
sub
and
mov
rol
stos
mov
pop
cmps
retf
leave
dec
test
and
xor
test
dec
push
sbb
mov
jl
add
xor
cdq
sub
jmp
out
mov
sub
pop
mov
ficom
mov
xor
pop
jmp
out
sub
imul
stos
pop
(bad)
fucomip
popa
pop
sub
push
jbe
and
cs
lock
add
(bad)
gs
xor
mov
sub
adc
inc
lods
imul
mov
pop
out
mov
xor
jno
(bad)
mov
movs
jb
mul
mov
mov
cdq
or
clc
test
gs
adc
fldl2e
mov
xchg
cmp
mov
xor
pop
xlat
pop
sbb
std
adc
mov
scas
inc
mov
inc
mov
mov
pushf
adc
(bad)
cmovbe
dec
push
mov
outs
adc
xchg
dec
call
pop
rcl
xor
mov
mov
jmp
push
rol
(bad)
dec
inc
push
pop
not
loop
fs
adc
test
fdivr
cdq
push
sub
inc
xor
fsub
xor
lock
pop
sbb
mov
adc
jno
cmc
sbb
add
jmp
xchg
adc
mov
out
cld
outs
neg
xchg
dec
jg
and
outs
jne
or
xor
repz
cmps
dec
retfw
imul
inc
cmp
cmp
inc
(bad)
out
neg
ret
cmp
(bad)
cmp
xchg
pop
mov
mov
out
test
out
add
cmp
xchg
int
imul
and
ins
int3
xor
cld
xchg
(bad)
ins
mov
jo
sub
fsubr
cld
inc
(bad)
(bad)
jns
test
stos
cli
stos
gs
mov
mov
call
mov
push
shl
in
xor
cs
(bad)
push
cmc
fcomp
jecxz
xor
push
jge
sbb
xor
mov
loop
int3
aas
mov
icebp
(bad)
or
aad
adc
push
sbb
fstp
mov
xchg
cmps
xchg
mov
mov
dec
rcl
shl
ret
and
outs
mov
sub
push
repnz
sbb
cmp
ja
out
fild
std
jge
pop
sub
xor
in
and
mov
retf
(bad)
out
jl
push
push
mov
call
in
inc
xchg
xor
(bad)
clc
pop
xchg
jnp
imul
lods
dec
adc
ret
pop
inc
mov
cmps
push
push
sbb
push
icebp
dec
xchg
mov
mov
dec
stos
or
jmp
jp
out
mov
lea
and
or
dec
sbb
enter
pop
retf
pop
pop
jo
pushf
retf
ret
sbb
and
out
ja
pop
mov
mov
xchg
es
mov
dec
mov
call
stc
jmp
hlt
jnp
xchg
popa
cwde
je
(bad)
ins
jbe
cmp
loop
or
sub
bound
lods
shl
xchg
xchg
(bad)
js
pushf
adc
das
sub
push
fstp
ret
in
and
sub
icebp
jbe
cli
icebp
sbb
cmp
out
cmp
pcmpgtb
inc
in
out
pop
fisubr
cmp
mov
adc
push
fdiv
out
inc
xchg
xchg
sub
cmp
into
retf
xchg
std
cmp
jle
or
mov
adc
mov
push
push
scas
jae
and
inc
mov
sbb
loop
sub
dec
sbb
dec
jge
sub
(bad)
fiadd
iret
cmp
ins
fwait
push
outs
sbb
test
stos
mov
dec
popf
add
es
push
fdivr
adc
neg
fistp
loopne
inc
mov
and
call
jae
ss
pop
cmp
cwde
jo
movs
fs
sahf
sbb
out
(bad)
in
cmp
and
push
fsub
sub
popa
pushf
push
stos
adc
sahf
in
aam
or
add
pop
jae
and
fst
xor
xchg
call
cmps
xchg
mov
cmp
out
sbb
in
mov
icebp
icebp
pop
sar
jae
pop
pushf
pop
pop
loopne
xor
in
xchg
clc
aam
jmp
cmps
pusha
pop
repnz
jle
and
and
or
adc
jns
cmp
test
adc
mov
scas
xor
lods
test
push
pop
lods
sbb
sbb
sbb
lds
bound
sahf
add
ret
jg
mov
fisubr
retf
in
mov
cld
push
movs
shl
push
push
and
in
sub
jae
jnp
imul
scas
ret
pop
add
adc
mov
pop
mov
add
mov
mov
je
sbb
aas
xchg
mov
jmp
sub
out
lahf
sbb
clc
jl
rcr
adc
adc
ja
fwait
pushf
jp
scas
push
mov
push
xchg
cmp
xor
xor
pop
ss
fwait
adc
xor
cmps
and
rcr
cmp
and
cmp
fsub
jns
in
cmp
mov
mov
inc
test
fisub
and
arpl
dec
ret
xor
sub
stos
mov
cmps
pop
cli
movs
mov
mov
iret
fucomp
add
pop
test
retf
stc
or
or
jno
push
cmp
mov
push
inc
ins
inc
in
xor
hlt
retf
mov
sub
aas
sahf
std
daa
jae
adc
xlat
sbb
and
daa
mov
aas
push
dec
cmp
cdq
cmp
ins
mov
xchg
aaa
lea
xchg
adc
mov
imul
jne
bound
lods
or
mov
int
(bad)
mov
in
fmul
mov
mov
call
mov
imul
loop
mov
push
lahf
pop
jbe
adc
in
test
call
pop
inc
mov
jae
xchg
push
aad
pop
mov
scas
jns
xor
bnd
aam
ja
(bad)
iret
mov
or
movs
and
mov
shr
mov
es
jp
jmp
sahf
inc
pop
(bad)
mov
adc
ss
and
jb
adc
int
int
mov
cmp
bound
popf
lahf
add
jns
imul
aad
addr16
jno
fmul
call
xor
(bad)
jo
loop
adc
retf
add
pop
sbb
retf
js
push
push
mov
es
out
and
in
rcl
xchg
cli
xchg
add
ret
mov
push
jl
cmp
mul
inc
xlat
out
(bad)
adc
mov
inc
enter
not
cs
mov
mov
jmp
jg
imul
jns
fld
out
ror
xor
fsub
mov
mov
movs
and
sti
pop
add
mov
aaa
in
add
inc
lock
icebp
push
xchg
test
mov
mov
jg
sub
pop
push
push
sti
lds
retf
cmc
push
fmul
xlat
lahf
mov
jmp
sub
xchg
or
push
fild
jnp
fistp
adc
xor
jecxz
or
cld
sbb
loopne
mov
gs
fnstsw
push
movs
xor
in
mov
mov
push
psraw
mov
sbb
cmps
jbe
out
mov
test
mov
test
cmps
sub
popf
mov
in
or
mov
add
repz
test
mov
jp
and
stos
fsub
mov
xchg
imul
adc
adc
sti
sub
or
leave
or
mov
mov
sbb
lock
push
daa
cmp
inc
fcomp
outs
xor
ds
popf
mov
dec
jmp
mov
or
lock
jmp
or
push
inc
into
push
loopne
inc
inc
cmp
mov
popa
adc
inc
arpl
iret
pop
repz
into
push
push
loope
bound
push
mov
nop
out
or
adc
int3
pop
sbb
and
xchg
fidiv
push
jne
mov
lods
mov
addr16
das
push
mov
cmp
fist
jnp
icebp
pop
repz
mov
cs
pop
add
dec
xor
mov
repz
cwde
jg
outs
sahf
mov
fistp
sbb
aad
push
cmp
out
xchg
push
lods
push
mov
mov
cmps
int3
pop
pusha
mov
pop
xor
test
cwde
int
stc
loopne
adc
sbb
xor
aam
ficom
lods
aas
cmps
cli
fistp
loop
pop
push
mov
or
push
lahf
sub
test
jmp
mov
cmp
cmp
cs
aad
push
retf
and
sub
jl
mov
pop
fnstenv
jmp
shr
pop
mov
clc
pop
mov
out
sbb
int3
jo
sub
stc
mov
sahf
sti
shl
and
rep
jae
imul
inc
cdq
(bad)
push
(bad)
push
fldcw
jbe
out
xchg
sbb
rol
cmp
dec
rcr
add
adc
cmps
push
pusha
ret
hlt
loopne
mov
arpl
mov
test
cmc
popf
shl
jecxz
push
aas
adc
push
push
cmps
dec
stc
mov
xchg
mov
or
sbb
or
add
and
dec
xchg
pop
ins
mov
ins
mov
or
int3
repnz
mov
jns
pop
in
adc
in
mov
ja
xor
mov
aam
jne
fsub
cmps
fdiv
aas
imul
mov
into
repz
movs
clc
xchg
add
nop
or
call
test
addr16
fisubr
icebp
cdq
shufps
inc
aaa
add
mov
or
leave
pop
xchg
movs
data16
inc
mov
pop
add
cmp
add
inc
fidivr
jge
test
and
and
xchg
push
mov
in
adc
mov
test
out
enter
mov
cmps
or
add
dec
or
pop
dec
test
out
xchg
addr16
and
fstcw
pop
mov
and
jnp
popf
popa
and
xor
loope
(bad)
jp
cmps
push
or
cld
cmps
enter
test
xchg
mov
out
jmp
dec
fs
and
mov
in
aaa
cs
cs
fisttp
dec
(bad)
aad
rol
or
setle
sub
je
sar
loop
inc
dec
outs
int
cmp
jnp
scas
xor
push
dec
pop
mov
inc
in
sbb
xchg
enter
jno
pop
pushf
and
out
mov
cmc
test
neg
adc
pop
pushf
stos
std
mov
sahf
call
xlat
ja
imul
jne
jne
xor
lods
sti
add
cmp
loope
stos
pop
jl
and
and
and
pop
sub
xchg
jl
test
sub
and
stc
mov
sub
push
cmp
imul
leave
je
sbb
inc
sti
fdiv
or
stc
pop
xchg
sbb
call
(bad)
test
xchg
and
add
pop
add
sbb
xchg
sub
in
movs
sub
mov
jle
inc
xchg
push
fwait
mov
in
(bad)
stos
jmp
dec
scas
inc
sbb
shl
jp
mov
inc
sbb
aas
hlt
inc
sub
or
jmp
arpl
or
pop
xchg
or
aad
mov
iret
xor
sar
iret
and
mov
xlat
loope
popa
sub
xchg
push
mov
pop
out
push
loope
out
loope
or
mov
scas
js
(bad)
out
mov
sub
ss
sti
std
(bad)
jne
and
mov
out
push
popf
in
pusha
sbb
push
fwait
inc
jne
fld
mov
shr
xchg
pop
mov
not
inc
mov
test
mov
pop
mov
(bad)
cmps
fldenv
loopne
jecxz
pop
enter
sub
and
mov
cmps
sbb
in
add
aas
adc
and
add
shr
xor
(bad)
cmp
jae
lds
ins
pop
inc
xor
pop
jp
pusha
cmp
in
test
leave
dec
(bad)
xchg
pop
jae
dec
icebp
pop
unpckhps
inc
jb
and
mov
xchg
xor
ds
ins
lock
out
and
push
and
pop
icebp
daa
push
jo
into
ins
(bad)
(bad)
xchg
out
xor
rcr
enter
sbb
sub
shl
inc
push
mov
jmp
push
mov
pop
retf
int3
jae
dec
lods
adc
push
fisttp
push
daa
mov
popf
sub
mov
push
test
jmp
jo
aad
iret
inc
mov
fstp
sbb
arpl
and
xchg
cld
cmps
xlat
or
cmps
ins
int
sub
jno
adc
jl
or
stos
pop
jle
mov
cs
sti
push
mov
and
adc
add
psraw
sub
push
mov
pop
push
arpl
sub
je
shl
sub
les
jg
mov
std
adc
dec
imul
inc
inc
aaa
push
imul
mov
gs
fldpi
pop
repnz
xchg
scas
inc
idiv
fsubr
sbb
es
fcom
sbb
jbe
dec
fbstp
jnp
inc
mov
aaa
das
fadd
xchg
mov
ror
lock
fcom
mov
xlat
mov
lock
mov
jae
sub
sbb
dec
mov
aam
fisttp
sub
sub
jl
imul
fdiv
push
repz
xlat
mov
pop
bound
push
mov
(bad)
xchg
mov
adc
aas
mov
adc
out
adc
add
jnp
jge
dec
in
jecxz
and
jbe
sub
rcr
mov
xor
mov
loope
lods
xor
(bad)
inc
push
dec
mov
pushf
xchg
cmp
pusha
arpl
bound
sbb
retf
sbb
test
retf
jl
dec
pop
inc
ins
mov
ins
pop
out
test
xchg
ficomp
cmp
sub
cld
aam
scas
movs
sbb
mov
(bad)
(bad)
fnsave
mov
iret
or
sub
(bad)
sahf
adc
ret
es
push
cdq
data16
fldenv
mov
ror
or
mov
fcom
jns
test
ror
aaa
push
neg
subps
and
mov
out
nop
mov
mov
mov
mov
xor
sbb
dec
ret
loopne
test
inc
loop
push
mov
stc
add
stos
jmp
stc
clc
je
cmps
(bad)
call
xlat
push
sbb
push
out
fnsetpm(287
cwde
movs
push
mov
inc
add
fidivr
mov
cli
fimul
scas
bound
or
das
scas
mov
cld
or
test
mov
mov
adc
xchg
add
jo
fidiv
fsub
mov
pop
inc
xchg
xchg
icebp
xor
sbb
lods
mov
pop
(bad)
lock
xchg
mov
pop
aam
add
int3
cmps
push
loope
test
push
add
rcr
popf
icebp
xchg
bound
push
cmp
and
out
addr16
ficomp
test
jno
xchg
fnstsw
dec
add
pop
sub
ret
movs
xor
in
jb
ins
or
retf
clc
mov
aas
dec
nop
ret
xchg
inc
fsubr
mov
(bad)
cmp
je
and
xchg
adc
mov
mov
jo
ins
imul
xlat
inc
call
fidivr
mov
adc
push
leave
sbb
ss
mov
(bad)
adc
adc
jg
cmp
(bad)
call
in
les
sbb
fnstcw
push
mov
in
(bad)
mov
(bad)
adc
retf
jo
out
daa
add
in
pop
ret
inc
cmc
sub
mov
icebp
inc
pop
push
shl
cmp
pop
xchg
(bad)
cmp
movs
call
lods
in
jp
enter
rcl
ficom
push
cli
repnz
cmps
push
add
push
jae
(bad)
push
dec
call
sub
scas
ret
in
push
inc
inc
imul
cmp
rcl
arpl
and
cmc
mov
pop
inc
push
ins
sbb
test
enter
outs
xor
pusha
jno
cmp
sar
ret
imul
jl
stc
test
daa
cli
inc
jge
dec
cmp
sub
jmp
add
je
movs
mov
mov
mul
ret
outs
fcom
test
test
cmps
jb
out
arpl
je
push
push
mov
int
cmp
loope
pop
pop
sub
pop
aas
dec
or
jg
jge
inc
fcom
iret
mov
jbe
arpl
push
mov
mov
setle
iret
lahf
add
inc
jnp
test
idiv
movs
fs
stos
inc
retf
test
or
mov
inc
adc
fist
jmp
lahf
stos
sub
lea
ins
sub
jmp
inc
adc
popa
mov
or
jo
sbb
retf
div
sbb
aad
in
mov
scas
rcr
adc
pop
jp
retf
pop
jo
loope
das
aas
sub
call
push
mov
mov
ins
xchg
adc
sub
arpl
xlat
scas
mov
mov
adc
daa
mov
jae
loope
xchg
out
das
js
loop
sub
add
sbb
out
shl
inc
movs
lods
dec
jbe
mov
clc
or
add
xor
mov
mov
sbb
cmps
outs
stos
lock
sbb
in
retf
es
mov
fimul
mov
adc
or
pop
sbb
pop
sub
ret
xor
push
ror
pushf
call
cmp
lods
ficom
pop
sub
ss
in
push
mov
shl
adc
xor
push
sbb
sbb
sub
add
(bad)
in
and
dec
cwde
retf
push
rol
aas
adc
push
sub
shr
adc
jge
xchg
xor
movs
pop
popf
jno
dec
iret
lea
retf
mov
je
fld
call
hlt
dec
retf
mov
sub
mul
rcl
or
fiadd
pop
adc
ret
push
outs
push
add
jg
test
nop
cs
jb
pop
addr16
(bad)
jo
clc
push
and
scas
rcr
shl
mov
or
cmps
push
in
pop
(bad)
imul
mul
inc
cmps
rcr
sub
push
add
test
call
aad
cdq
adc
push
or
dec
addr16
cmp
nop
sub
movs
pop
dec
ins
movs
push
pop
pushf
push
ret
push
mov
adc
mov
inc
mov
stos
mov
retf
jl
or
mov
mov
mov
cwde
add
xor
cmc
lods
and
cmps
hlt
fstp
pop
cmps
mov
mov
mov
iret
xor
lock
or
int3
es
xchg
push
xchg
pop
sahf
xchg
data16
lods
dec
cmp
cli
cmp
cwde
add
loop
lods
ret
xlat
jle
std
push
push
std
test
out
(bad)
int
test
fimul
shld
daa
outs
retf
mov
sub
mov
and
inc
imul
js
js
mov
dec
fnstenv
call
gs
jnp
mov
dec
xchg
fist
mov
jl
cmps
xor
jp
stos
inc
sbb
arpl
and
retf
test
arpl
sub
xchg
leave
push
ret
jmp
sbb
test
cmp
lods
cs
cmp
adc
aad
mov
pop
adc
pop
add
sti
fsubrp
push
cdq
das
nop
jp
jle
pop
sbb
xchg
inc
inc
stc
mov
adc
or
mov
movs
mov
stos
mov
fcom
popa
in
int
dec
stc
lds
pusha
mov
(bad)
mov
mov
sar
out
cmp
pop
shr
cdq
clc
add
cmp
pushf
hlt
pop
ja
pop
cmove
pop
not
push
gs
inc
adc
xchg
es
retf
retf
scas
in
dec
int3
push
inc
in
dec
jae
sldt
push
cmp
stos
arpl
or
jle
xchg
adc
adc
inc
pop
pushf
xchg
sbb
hlt
out
or
inc
pop
fs
shl
cld
bound
push
ret
jl
fdivr
shl
(bad)
sbb
mov
mov
mov
mov
out
mov
add
add
popa
pushw
addr16
nop
jmp
dec
shl
cwde
lock
adc
cmps
lods
es
inc
fdivr
in
gs
mov
cmp
(bad)
xchg
out
cmp
add
test
stos
fld
jns
in
adc
lods
bound
test
adc
mov
call
cwde
sub
pop
inc
int3
lea
sub
popa
push
xchg
stc
push
popf
add
jle
and
movs
mov
add
aad
dec
scas
pushf
vmovdqa
jmp
(bad)
xchg
xor
jle
jg
ins
cmps
pop
add
xlat
test
xor
repz
loopne
popf
and
shl
aas
out
inc
xor
xchg
inc
fldenv
loopne
lahf
fidivr
sbb
ins
cmp
lea
xchg
mov
stc
nop
je
add
jo
inc
int
test
dec
mov
sub
mov
xor
fwait
retf
push
iret
mov
xchg
mov
push
fdivr
xor
ds
and
mov
in
xchg
mov
call
sahf
mov
movs
nop
and
es
inc
push
push
xchg
mov
mov
sub
push
mov
or
sub
pop
(bad)
pop
jo
pop
jnp
add
(bad)
sub
int3
push
mov
lods
loopne
inc
scas
fld
jecxz
test
lods
jle
fwait
xor
jp
outs
jg
jecxz
lods
retf
iret
and
cmp
fcomip
cwde
or
out
(bad)
(bad)
dec
and
add
(bad)
fs
ret
xchg
aad
mov
fs
out
and
test
add
(bad)
fcmovb
cwde
add
mov
or
add
jle
call
ficom
leave
icebp
jbe
sub
mov
(bad)
call
lahf
cmp
fidivr
jnp
not
hlt
push
fstp
push
cld
pop
add
dec
dec
mov
popf
jne
cdq
fst
rol
retf
sub
cmc
add
in
or
dec
jmp
(bad)
(bad)
aad
inc
lods
sbb
out
xchg
sti
leave
stos
jecxz
in
dec
addr16
push
dec
lods
jp
jp
jl
sbb
(bad)
lock
jg
fwait
push
dec
fsubr
not
push
or
les
es
jecxz
jne
mov
pop
pop
cmp
ret
mov
or
stos
neg
and
fidiv
into
mov
mov
nop
(bad)
xchg
or
mov
push
and
jmp
les
push
test
out
xchg
mov
push
fnstsw
repnz
inc
pop
test
push
jle
inc
sar
xor
or
fbstp
dec
xchg
jno
imul
dec
mov
mov
inc
int3
loopne
ret
dec
int3
imul
(bad)
imul
(bad)
icebp
mov
dec
shl
fstp
shl
mov
or
das
jbe
shl
add
(bad)
mov
fs
dec
int3
inc
sar
dec
adc
int
test
(bad)
outs
outs
retf
fs
push
clc
data16
aad
sub
retf
test
lds
fisttp
lea
nop
cs
into
ds
js
sub
jmp
cli
mov
jg
xchg
sub
cmc
and
ss
dec
mov
repz
lahf
stos
sbb
iret
vmovhps
sbb
mov
and
xor
test
and
sti
xor
je
mov
arpl
sub
test
jne
mov
xor
pusha
mov
dec
cwde
test
repnz
cwde
lock
xlat
nop
xchg
test
mov
add
jmp
aas
std
push
je
xchg
rol
fstp
imul
jp
idiv
mov
lds
push
test
outs
adc
jbe
test
adc
jmp
sahf
lods
movs
ss
adc
loope
jae
sub
enter
(bad)
sbb
enter
push
imul
push
cmp
pop
data16
repnz
ja
out
cmp
add
push
movs
mov
std
clc
loope
rol
mov
push
dec
rcr
push
mov
not
push
dec
aas
dec
rcl
sbb
dec
sub
push
mov
(bad)
movs
fcmovnu
jl
rcl
es
adc
rcr
dec
jno
and
fild
data16
in
and
shl
dec
xchg
ds
mov
fsub
or
jbe
mov
(bad)
mov
push
loopne
and
out
std
lods
icebp
push
ds
imul
xchg
dec
ss
xchg
inc
cmp
pusha
mov
pop
mov
inc
loop
push
pop
loopne
cmp
sbb
push
fist
xchg
inc
push
sbb
jo
das
stc
and
jl
or
outs
nop
outs
xchg
xor
xchg
cwde
xchg
add
mov
xor
jne
and
cmp
scas
push
pinsrw
pop
cmp
gs
mov
fsub
sbb
mov
call
repz
jmp
outs
push
push
out
fdiv
add
jno
shl
ins
repnz
mov
fwait
(bad)
std
push
int
js
dec
jne
mov
inc
out
mov
scas
xor
inc
push
jmp
inc
xor
clc
lods
dec
dec
push
adc
mov
push
rol
arpl
mov
mov
movs
lods
rcl
push
stc
hlt
sbb
sbb
sbb
nop
ja
fidivr
push
mov
push
movs
imul
and
movs
ja
dec
dec
cmc
jle
es
mov
xor
or
je
ficomp
jne
fnsave
icebp
mov
mov
stos
cmc
add
jns
jb
scas
call
ja
inc
jnp
dec
lahf
mov
test
je
sub
push
lods
jns
popa
(bad)
mov
mov
mov
cmp
imul
je
and
test
inc
push
cmps
mov
xchg
sbb
jbe
mov
arpl
jmp
ret
(bad)
and
fistp
jbe
jle
xchg
es
xor
sahf
clc
sub
movs
push
not
cmp
rol
jmp
push
and
fs
mov
std
cmp
mov
retf
jae
jno
unpckhps
push
inc
add
adc
and
xor
cmp
dec
pop
lock
pusha
mov
mov
sti
jnp
dec
enter
mov
cld
sbb
ret
outs
adc
popa
cmps
in
cs
lds
jns
mov
cmps
dec
cld
arpl
push
pop
adc
sbb
push
dec
xor
dec
or
push
jb
xchg
ds
jne
stc
outs
pop
test
add
cmp
jo
mov
jmp
ins
adc
das
pushf
xor
xchg
ds
mov
test
sub
icebp
pop
shl
mov
into
or
mov
push
repz
lock
cli
fs
sti
push
fs
xchg
jo
test
sbb
sbb
test
icebp
loop
retf
and
sub
push
mov
or
pop
int
pop
dec
xchg
test
sti
call
add
pop
add
adc
mov
jl
arpl
out
jp
jb
or
or
scas
(bad)
jbe
jne
retf
leave
push
or
push
daa
add
mov
mov
mov
jne
sbb
dec
push
hlt
fld
int3
push
push
mov
push
out
mov
(bad)
sbb
adc
push
jg
dec
mov
outs
cmp
je
jl
sar
stos
out
movs
icebp
pop
jl
ficom
das
mov
(bad)
aam
mov
test
aaa
(bad)
mov
sub
sbb
repz
jne
adc
das
out
rcr
rcr
add
and
jne
and
ins
out
ret
sbb
sub
mov
iret
lock
adc
and
push
pop
addr16
and
add
sub
push
jmp
lea
jmp
or
and
addr16
or
push
aam
ror
cmp
rcl
addr16
or
jecxz
shr
sub
in
ds
fiadd
cmps
stos
mov
xor
mov
mov
push
sti
fisttp
cli
mov
pop
mov
lods
into
scas
mov
xchg
push
dec
cmc
add
mov
mov
pop
mov
popa
mov
mov
pop
stc
out
mov
aas
shr
shl
sub
outs
inc
cwde
jg
push
xchg
pushf
mov
sub
mov
cmps
xchg
jne
push
xchg
xchg
dec
sub
outs
mov
aad
inc
es
dec
pop
int
sbb
xchg
stos
push
std
loopne
das
call
mov
(bad)
cmp
mov
sti
inc
jmp
sbb
retf
push
adc
sub
or
sbb
lock
mov
fist
(bad)
and
mov
xor
gs
call
sub
push
repz
push
mov
jmp
addr16
mov
outs
xchg
xor
cmps
inc
sahf
mov
daa
lods
push
pop
jge
or
mov
pop
mov
jecxz
mov
arpl
xchg
and
cmp
jo
scas
add
push
(bad)
mov
xor
arpl
fisub
xchg
add
jno
sar
les
xchg
cdq
mov
mov
fcom
pop
sub
popa
stc
xchg
xchg
xor
jns
pop
scas
sub
xor
repnz
lahf
cmp
and
inc
mov
sbb
and
scas
neg
jnp
jne
(bad)
hlt
add
fldl2e
add
cmp
cmc
dec
pop
dec
xor
popa
or
xchg
sbb
loop
jmp
jbe
movs
inc
pop
xchg
sbb
pop
lock
xor
push
into
add
neg
fcomp
mov
mov
xchg
out
cmp
pop
push
or
jecxz
rcr
mov
dec
sbb
out
jge
adc
lahf
mov
je
imul
mov
sbb
jne
fcomp
sahf
aas
sbb
outs
sub
sbb
pop
sbb
xchg
iret
ss
outs
pop
lea
or
adc
popa
ret
test
cmp
out
not
pop
cmc
sahf
fidivr
mul
in
sub
cmp
mov
loope
arpl
fwait
sahf
xor
xchg
(bad)
call
popa
test
mov
imul
test
in
mov
cmp
hlt
pop
or
push
ret
mov
mov
aas
ficomp
ffreep
push
xchg
or
mov
lds
scas
dec
cmp
scas
jno
adc
test
sbb
popf
dec
mov
fs
push
xlat
rol
pop
(bad)
call
and
xor
sbb
fiadd
jmp
and
aas
pop
push
test
sbb
add
push
sbb
stos
jle
jno
loopne
lds
jl
mov
in
in
and
into
and
fstp
mov
dec
inc
pop
aam
inc
clc
into
mov
dec
retf
ja
daa
jno
xchg
arpl
jmp
push
add
arpl
mov
xchg
jle
(bad)
inc
push
cmp
jecxz
jg
dec
(bad)
mov
inc
clc
mov
xor
pop
mov
out
push
cmp
mov
xchg
fisubr
xchg
stc
adc
or
inc
icebp
(bad)
jge
into
xor
ja
mov
mov
cmp
pop
ins
xchg
jnp
outs
not
dec
add
fdiv
sub
arpl
add
mov
test
cmp
inc
mov
(bad)
aaa
mov
adc
push
inc
(bad)
popa
xor
xchg
pop
cmps
push
adc
add
xchg
push
xchg
mov
es
jecxz
pop
test
and
pop
pop
jns
mov
(bad)
push
fcomip
push
dec
xchg
sub
sbb
imul
pop
xor
jbe
mov
push
sub
adc
iret
sbb
inc
(bad)
(bad)
int
cmp
movs
ret
cmps
pusha
and
push
sbb
lahf
mov
pop
lea
nop
jge
or
bound
push
cmp
stc
hlt
js
push
call
icebp
mov
adc
(bad)
dec
cmps
mov
mov
scas
or
aad
push
inc
rol
inc
xor
and
nop
in
repz
dec
bound
xchg
lahf
nop
and
cld
xor
loope
lods
fld
jae
in
repnz
adc
cmp
ret
lsl
push
test
dec
shr
shr
jmp
(bad)
cdq
shr
dec
pop
sbb
add
mov
lods
mov
imul
dec
add
jp
cmps
pop
sub
sub
jl
and
or
pusha
in
sub
push
call
(bad)
xchg
loopne
aas
add
cs
fmul
cmp
jge
mov
jmp
sbb
or
jp
push
mov
mov
sar
xchg
xchg
pusha
rcr
pusha
mov
jg
cmp
jnp
jmp
add
jae
jl
cld
(bad)
and
mov
inc
stos
stos
push
(bad)
pop
add
add
xchg
add
dec
test
sahf
cwde
mov
dec
xlat
out
les
ds
jb
jne
addr16
fwait
mov
int3
stc
xchg
test
or
pop
adc
movs
mov
push
mov
jmp
mov
xor
xor
cmps
repnz
repz
xlat
jge
sub
enter
mov
pop
sub
aad
in
test
jae
inc
lods
inc
xchg
or
mov
and
pop
mov
pop
daa
retf
add
mov
movs
shl
lods
pop
lock
imul
pop
inc
mov
mov
sar
mov
(bad)
js
(bad)
mov
mov
out
rcl
inc
push
or
inc
js
jge
adc
fidiv
hlt
adc
shr
out
mov
jle
dec
cmc
ss
or
push
pop
rcr
std
sar
dec
adc
psubw
leave
xor
adc
jmp
in
icebp
and
bound
push
add
add
xchg
addr16
std
jmp
xchg
dec
mov
daa
xchg
push
push
jg
inc
push
ja
je
(bad)
out
mov
stc
xchg
sbb
add
xor
fidiv
mov
dec
mov
dec
and
mov
clc
jmp
imul
lods
mul
adc
(bad)
loop
ds
test
mov
int
sub
sub
adc
popf
gs
sub
leave
outs
cdq
adc
mov
fnstcw
stos
mov
jmp
xor
cmp
cmp
jnp
sub
movs
in
aad
sbb
fisubr
push
xchg
cmp
cmp
jbe
push
test
icebp
pop
loopne
sub
in
sbb
adc
xchg
xor
xlat
je
inc
mov
stos
cmp
out
xchg
fidivr
sbb
push
add
ss
adc
jecxz
push
pop
iret
cmp
ret
sbb
loope
inc
aas
ss
aad
adc
bound
fs
pop
mov
test
jecxz
das
jns
mov
mov
int3
mov
out
push
xor
leave
shr
mov
sbb
dec
pop
push
jmp
xchg
fistp
in
in
retf
call
nop
hlt
mov
js
adc
pop
dec
jg
(bad)
mov
cmp
xchg
push
cmp
push
loope
ror
dec
or
lahf
ror
cs
cmp
jmp
mov
test
lock
sub
or
add
call
cwde
jecxz
pop
dec
xor
mov
retf
cmps
mov
lods
aam
mov
push
dec
shl
(bad)
retf
mov
dec
jg
sub
arpl
add
in
mov
mov
lds
add
dec
out
je
mov
cwde
sbb
ins
cmp
fnstcw
add
rcl
cmp
(bad)
pop
mov
nop
stc
pop
(bad)
xor
mov
pop
paddd
aas
pop
leave
(bad)
inc
loop
lea
jb
push
push
stos
ret
inc
clc
mov
or
mov
bound
pop
repnz
mov
in
xor
lahf
jmp
adc
jecxz
mov
scas
fld
mov
cmp
sahf
and
outs
xor
pushf
mov
popf
test
xor
mov
pushf
jae
sbb
cs
cmovb
mov
inc
stc
pop
and
inc
xchg
sub
movs
ja
jg
sbb
cmp
push
imul
(bad)
retf
outs
pop
cmc
test
push
mov
mov
mov
movs
test
ror
test
xchg
fisubr
jbe
push
(bad)
push
repnz
push
addr16
cmp
inc
adc
push
fwait
popf
xchg
neg
sahf
ds
xchg
mov
mov
hlt
addr16
mov
mov
mov
adc
retf
sbb
in
test
mov
ror
jp
or
sbb
sub
aas
or
jmp
sbb
pop
ret
cmp
fiadd
outs
popa
retf
clc
inc
repnz
mov
(bad)
fild
or
inc
add
pop
mov
jmp
add
dec
jecxz
sti
push
inc
sub
fisubr
retf
adc
or
and
aas
cmp
cmp
mov
daa
push
dec
daa
sbb
and
in
jg
dec
cmp
cmps
pop
cmp
and
fiadd
lock
mov
sub
pop
add
dec
imul
mov
push
pop
add
rol
cwde
adc
jno
jne
mov
hlt
adc
mov
scas
jp
in
add
int
push
inc
or
int3
mov
ja
in
aas
lods
fsubr
mov
lea
add
sar
mov
xchg
push
push
(bad)
loope
fucomip
mov
test
jns
movs
ret
repnz
imul
pop
lock
pop
and
gs
inc
into
inc
add
jle
add
dec
in
iret
mov
out
test
xor
pop
cmp
push
inc
inc
pop
fistp
mov
inc
add
sbb
lods
or
lahf
out
jmp
test
pop
fdivr
cmp
push
out
mov
ins
xchg
div
fcomp
int3
xor
jnp
push
test
xor
inc
xlat
cli
cmp
xchg
mov
xchg
inc
or
inc
fist
cmp
ror
call
dec
scas
test
es
sub
rol
add
sbb
aaa
pop
enter
or
cld
loop
lock
test
test
mov
mov
aam
adc
mov
outs
inc
xchg
int
dec
push
mov
push
ror
addr16
out
fistp
push
mov
sbb
(bad)
jmp
xor
pop
cmc
pop
xchg
xchg
mov
jbe
(bad)
enter
shl
in
repnz
cli
repnz
inc
adc
mov
and
sbb
adc
xchg
xchg
fist
mov
push
sbb
iret
gs
jecxz
xchg
xchg
jge
jnp
push
add
add
push
inc
ret
je
hlt
fisttp
hlt
sub
fstp
repz
inc
mov
out
mov
(bad)
pop
cmp
popf
loopne
sti
push
jbe
es
ret
dec
jmp
mov
lock
aas
inc
push
imul
add
mov
cmps
add
jns
jmp
mov
sub
(bad)
push
aas
mov
mov
fs
pop
lods
xlat
mov
pushf
mov
push
jno
dec
call
sub
jecxz
aaa
addr16
in
jecxz
xor
int
or
scas
cdq
xlat
mov
lds
shr
mov
adc
inc
push
ret
into
lahf
ds
es
mov
daa
jns
mov
xchg
jbe
in
inc
clc
stos
xchg
mov
jle
sahf
ins
push
fcomp
out
push
inc
and
mov
xchg
(bad)
ret
icebp
adc
aam
rcr
cmp
xchg
cs
test
add
(bad)
pop
(bad)
pop
(bad)
mov
imul
pop
lahf
sbb
repz
inc
mov
lahf
movs
fcmovnbe
pop
jno
lahf
xor
jmp
loope
cmp
adc
mov
push
outs
add
ins
cld
lods
sbb
and
nop
cmps
(bad)
mov
adc
sbb
cmp
inc
or
nop
xor
sub
and
imul
push
jmp
mov
pop
lock
mov
jg
mov
(bad)
stc
cmp
or
sub
sub
mov
mov
and
add
mov
dec
dec
push
mov
xor
pop
inc
pop
aad
stos
or
aam
scas
in
mov
mov
jmp
jg
xor
cmp
lahf
sbb
pop
sbb
push
sbb
jle
jb
sub
mov
jb
pop
push
push
jns
call
(bad)
jp
test
aas
sub
adc
out
leave
div
jae
mul
cmp
jno
fld
mov
out
mov
jbe
jnp
mov
mov
test
out
call
jecxz
scas
mov
fdivr
add
ins
mov
mov
pop
push
add
sahf
je
push
dec
push
xor
jecxz
aad
mov
mov
and
mov
fwait
aas
sbb
xchg
cmp
js
xor
xor
ret
outs
add
sbb
neg
scas
ret
push
jbe
jge
pop
mov
adc
mov
in
adc
pop
in
pop
jl
out
jo
mov
dec
lods
(bad)
inc
or
js
add
or
push
and
lds
stos
sar
push
iret
pop
das
out
(bad)
fs
mov
jmp
push
pop
iret
xchg
mov
retf
xor
pop
adc
sbb
push
rcr
inc
jne
cmp
out
clc
bound
hlt
fcom
cld
icebp
sbb
repz
mov
push
xchg
dec
pushf
ret
fst
repnz
in
jge
int3
push
sbb
loop
test
sbb
(bad)
enter
mov
fadd
jnp
std
or
jle
cli
inc
inc
mov
ss
sti
fiadd
jmp
les
push
rcl
repnz
fcom
or
mov
mov
xor
test
push
test
and
aaa
data16
bound
out
xchg
loopne
push
add
dec
scas
mov
ret
test
je
pop
cmp
and
mov
mov
pop
adc
mov
sbb
test
mov
xor
stc
push
push
movs
std
pusha
mov
ret
push
test
cwde
push
mov
enter
out
mov
cmps
or
adc
pop
push
jecxz
sbb
pushf
mov
xor
xor
ins
cwde
ins
jle
(bad)
mov
push
mov
and
pop
jg
fcomip
fdiv
hlt
sub
cmp
pop
out
test
movs
xchg
mov
and
sbb
mov
cmp
push
sti
fadd
js
imul
mov
pop
jb
push
xor
mov
jno
sbb
sbb
xchg
and
retf
pop
xchg
adc
adc
cmp
xchg
xchg
cld
es
rsm
stos
pop
loop
mov
ja
cli
cdq
push
xor
push
je
hlt
pushf
jbe
les
cmp
xor
mov
jno
pop
push
jmp
cmps
sub
adc
test
jne
ins
sub
mov
fsubr
xor
sub
fisub
cli
dec
mov
inc
pop
int
lods
shl
cmp
inc
mov
and
in
leave
xlat
add
in
mov
xor
xrelease
and
pop
lods
mov
xchg
push
xor
in
adc
out
mov
ins
mov
cmps
test
ja
cwde
pushf
mov
lds
dec
dec
iret
sar
fwait
call
inc
nop
mov
pop
rcl
sbb
xchg
fstp
mov
shl
and
xor
push
test
retf
xchg
bound
xchg
imul
push
out
test
mov
inc
and
jne
sbb
and
das
mov
idiv
inc
lock
(bad)
outs
imul
scas
in
sbb
xchg
rcr
mov
push
push
dec
aam
mov
mov
xchg
js
or
clc
and
mov
sub
xlat
call
jno
stc
fidiv
mov
sti
aad
fidiv
xchg
daa
mov
fadd
mov
xor
adc
pusha
push
iret
mov
lea
inc
sbb
into
in
rol
cmp
retf
push
stos
leave
aam
push
movs
jle
xor
ds
push
cld
dec
push
and
mov
inc
sahf
sub
cli
mov
popa
aad
push
shl
pop
call
push
inc
add
scas
rcr
xacquire
xchg
es
stos
jbe
xor
jp
ja
lock
jmp
in
mov
jns
test
aad
iret
stc
test
(bad)
lds
es
push
pop
dec
and
and
and
dec
jecxz
push
pop
push
adc
out
mov
popa
cld
mov
mov
loopne
retf
jge
inc
fwait
jg
jbe
ja
dec
bound
cdq
mov
stos
xor
fwait
test
push
mov
retf
test
jge
and
push
leave
fnstcw
inc
int
lock
enter
ret
loope
or
ret
jg
or
call
push
inc
or
jb
cld
addr16
pushf
into
stc
call
push
in
mov
bound
inc
xor
neg
lods
dec
mov
cmp
ficom
sbb
sbb
lds
sub
mov
and
fstp
imul
pop
stos
inc
bound
gs
cmp
shl
aad
push
clc
cmps
sub
jmp
retf
inc
std
mov
adc
push
push
or
xchg
leave
add
cs
mov
stos
ins
dec
and
movs
sahf
inc
mov
adc
push
data16
std
sub
jo
xchg
minps
mov
aas
outs
lahf
sub
xchg
(bad)
js
mov
xor
out
cmps
es
pop
pop
and
push
mov
repz
jns
sub
ins
or
movzx
dec
adc
imul
hlt
mov
mov
(bad)
push
rcr
clc
push
cmp
cmc
cmp
and
scas
push
mov
mov
dec
adc
add
ins
pop
popf
mov
add
or
pop
lods
dec
cmp
push
add
pop
sti
cmp
cld
push
sahf
add
scas
xchg
nop
int
dec
lds
scas
sbb
and
lahf
add
hlt
inc
je
je
(bad)
aaa
mov
ret
jle
mov
push
xor
and
dec
loop
cmp
in
mov
mov
repz
shl
repnz
or
loope
int
sub
sbb
and
mov
jb
push
ins
movs
movs
xor
cli
cmp
dec
xor
lods
sub
call
jecxz
mov
(bad)
pop
ins
xor
cmc
push
ficom
dec
dec
mov
mov
sub
xchg
add
sbb
jbe
(bad)
loope
test
mov
xchg
jle
mov
addr16
inc
mov
sar
mov
std
(bad)
fild
(bad)
aas
push
outs
test
dec
daa
jp
xchg
inc
pinsrw
neg
outs
in
mov
jns
js
adc
es
xchg
loope
jmp
loop
mov
or
daa
sbb
out
jge
in
adc
sub
out
test
mov
xor
sbb
mov
fisubr
test
ret
addr16
outs
push
sbb
ja
mov
pushf
xchg
bound
les
loop
ror
pop
(bad)
sub
xchg
jno
push
mov
nop
xchg
lods
mov
and
fmul
xchg
out
aam
sbb
in
sbb
addr16
jne
xor
push
xchg
imul
fist
cmc
dec
dec
icebp
mov
jmp
arpl
xchg
aad
xor
mov
fld
repnz
xchg
sbb
jecxz
cmps
xor
dec
and
shl
fs
shl
(bad)
and
test
push
adc
dec
int3
lds
inc
ins
cs
nop
push
push
(bad)
jns
mov
nop
popa
and
in
push
inc
sysret
inc
jmp
shl
int
inc
fsub
jns
sbb
out
lahf
cmp
(bad)
push
retf
pop
lods
fild
bound
pushf
xchg
xor
jecxz
push
mov
mov
dec
push
or
jbe
dec
mov
mov
adc
push
in
mov
out
pop
rcr
movs
cmp
test
int
rcl
cmps
test
mov
loope
stos
adc
sti
aaa
popa
xor
test
leave
pop
ficom
sub
inc
fmul
or
mov
or
dec
pop
mov
push
mul
(bad)
xchg
js
or
push
cmp
(bad)
outs
dec
ret
fist
or
cmp
out
test
imul
les
mov
loope
(bad)
lock
aaa
inc
ja
cmp
jno
mov
cmps
jle
dec
adc
xor
xchg
mov
pushf
mov
test
fdivr
mov
aas
mov
xchg
movs
pop
inc
arpl
xchg
jnp
mov
jmp
pop
sahf
in
ror
mov
test
cli
clc
rcl
adc
jns
(bad)
movs
or
adc
pusha
cdq
jb
cmp
call
cmp
xor
adc
push
sbb
call
push
dec
dec
popa
sub
sub
ret
push
es
les
adc
pop
jle
ret
loopne
call
xor
xchg
mov
repz
call
test
imul
arpl
and
movs
mov
adc
add
jbe
gs
iret
fistp
fidivr
dec
std
xchg
movs
dec
fmul
stc
aaa
fld
into
gs
nop
sub
aad
xchg
adc
and
xchg
push
pop
les
pop
icebp
push
out
sub
or
mov
cmc
cmp
out
call
fstp
movs
pop
stos
lods
pusha
mov
test
cmp
lds
je
sub
push
push
cmps
je
sub
or
gs
out
imul
xor
outs
mov
jmp
out
aad
cs
(bad)
(bad)
sub
imul
imul
cmp
ins
test
jp
mov
dec
push
pop
mov
sahf
sub
jne
das
xchg
ds
gs
int
xor
mov
pop
ret
fst
out
sbb
test
and
jl
cld
popf
and
jg
mov
icebp
mov
sbb
add
movs
neg
jne
dec
or
pushf
mov
pushf
pushfw
retf
push
mov
aad
xchg
retf
bnd
faddp
sbb
addr16
xor
int3
push
mov
cmc
call
push
loopne
cmp
imul
mov
push
mov
mov
mov
mov
call
and
mov
pop
adc
sub
and
xchg
retf
jecxz
push
pmaddwd
push
outs
shl
aam
pop
int
xchg
leave
fs
or
cmp
sub
or
mov
es
leave
rcl
xchg
cli
lahf
cmp
fild
jnp
bound
pop
push
jecxz
(bad)
fidiv
xor
cli
cmp
call
aas
movs
xchg
jne
pop
xchg
push
retf
mov
(bad)
sub
add
sar
xchg
imul
and
test
cmp
push
inc
mov
inc
out
ins
sub
fisub
inc
cmp
xor
pop
out
rol
jo
aas
sub
loopne
or
icebp
mov
pop
repz
cli
rol
in
mov
into
mov
dec
into
adc
hlt
iret
pop
sbb
fild
push
cmp
outs
scas
ins
xlat
push
lds
out
outs
add
not
pop
fucomp
xchg
sbb
dec
enter
add
dec
push
cwde
jo
rol
push
in
aas
mov
xchg
mov
jns
sbb
inc
icebp
hlt
test
ret
cmp
(bad)
fcomi
mov
leave
mov
lock
xor
sti
sub
mov
retf
push
sbb
push
mov
push
icebp
jge
and
inc
or
push
gs
and
gs
test
pslld
ret
lods
leave
into
jb
jb
mov
adc
movs
enter
popa
dec
pop
dec
xchg
je
push
loopne
fst
sub
or
rcr
inc
(bad)
into
mov
xchg
inc
js
in
xchg
mov
or
pop
xlat
(bad)
aas
movs
out
fidiv
std
mov
jg
xchg
rol
dec
jne
pop
inc
sub
iret
cld
jb
push
jb
pop
push
enter
data16
rcl
and
out
cld
stos
jge
call
adc
icebp
adc
shr
test
push
or
(bad)
xchg
sbb
jmp
or
jle
loop
mov
int3
ds
sub
mov
cmc
cli
mov
and
in
fcmovnb
arpl
sub
mov
int
adc
ret
sub
scas
xchg
popa
mov
xor
xchg
xor
outs
mov
dec
sbb
shl
test
and
xchg
mov
nop
mov
xchg
mov
out
and
inc
test
mov
fdivr
pop
pushf
mov
mov
xor
addr16
cli
mov
mov
in
pop
pop
es
pushf
xchg
lods
scas
or
(bad)
xor
clc
or
shl
push
inc
mov
sar
jecxz
loopne
lods
pusha
nop
jno
ins
mov
scas
dec
aaa
sub
dec
jbe
jg
fs
mov
dec
dec
call
int
push
xchg
mov
cli
sub
jg
xchg
push
push
sub
fsubr
mov
and
scas
call
sub
fild
(bad)
push
dec
shl
ja
pop
push
repnz
dec
pop
repz
pushw
jo
xor
test
retf
inc
adc
les
rol
mov
push
mov
push
scas
retf
rcr
and
sub
jno
cwde
addr16
xlat
pop
rol
mov
inc
es
ss
es
dec
mov
adc
retf
cli
cmp
xor
nop
in
add
jbe
jb
lahf
pop
(bad)
pushf
sar
stos
inc
inc
loop
fbstp
jae
xchg
ror
and
lea
pop
or
cmp
pop
dec
in
mov
push
scas
ss
mov
push
push
jae
add
cmps
retf
bound
xchg
ret
or
idiv
aas
or
add
jecxz
sbb
push
imul
pop
ficom
xchg
data16
jge
aam
call
les
push
jmp
sub
mov
mov
call
bound
les
adc
jns
cmp
push
xlat
outs
mov
bnd
loope
popa
addr16
mov
mov
aad
or
in
sbb
cmps
push
repnz
jns
sti
or
push
pop
in
fiadd
sar
dec
call
mov
mov
popf
dec
mov
sub
out
push
ret
movs
(bad)
test
movs
sbb
jge
pop
jp
std
xchg
mov
push
stc
out
mov
loopne
push
addr16
xchg
pop
mov
dec
test
cli
or
aas
inc
fstp
mov
loopne
sbb
sbb
sahf
in
inc
adc
sets
lds
jmp
mov
les
xchg
cmp
leave
pop
add
es
mov
mov
mov
mov
ficomp
jbe
mov
mov
(bad)
pushf
mov
xchg
test
jp
jnp
cmps
enter
ds
stos
cmp
push
xchg
arpl
pop
jl
mov
daa
xor
fnstenv
jo
bound
(bad)
cmc
jl
push
push
fs
jmp
xchg
lock
loop
(bad)
jne
in
add
inc
test
in
dec
cmps
leave
add
mov
inc
xor
mov
sbb
ins
pop
pop
nop
shl
cmp
sbb
sbb
ret
aam
mov
adc
dec
inc
(bad)
test
xchg
movs
icebp
cli
mov
push
lods
pop
cmps
retf
sbb
inc
sar
or
(bad)
sti
out
sbb
cmc
mov
inc
std
dec
cli
cmps
lods
stos
mov
push
mov
dec
mov
sbb
cmc
sub
data16
dec
dec
mov
cmp
sub
bound
xchg
dec
daa
mov
or
sti
stos
pop
push
push
xor
xchg
stc
xor
es
add
int
clc
adc
stc
pop
xchg
dec
sub
pop
int3
test
daa
jb
outs
add
js
mov
cli
and
mov
pusha
push
(bad)
jnp
sbb
xchg
out
adc
lods
push
jmp
into
repnz
or
movs
scas
push
dec
or
adc
pushf
je
div
jmp
xor
adc
ins
scas
dec
or
fwait
ror
loopne
addr16
stc
push
addr16
jno
mov
jge
or
shl
out
inc
lods
lods
sbb
icebp
aas
jae
enter
xor
fwait
pop
(bad)
js
jbe
mov
(bad)
jbe
arpl
ins
fdiv
scas
adc
adc
jnp
in
sub
lock
imul
and
or
cs
sub
clc
lock
pop
xor
pop
adc
sub
dec
(bad)
aad
mov
inc
les
scas
out
shl
data16
call
mov
cdq
pop
mov
cwde
out
mov
cmp
sub
pop
ins
mov
xor
mov
mov
nop
mov
cmps
in
cmp
sbb
popa
mov
addr16
adc
rol
push
out
xchg
adc
in
aad
(bad)
mov
pop
and
loope
mov
out
jb
dec
aad
ss
cmc
mov
rcl
cmpps
mov
out
addr16
pop
mov
mov
mov
cmps
add
jno
mov
ret
out
ret
test
or
or
ss
cs
dec
pusha
sub
ins
cmp
xor
clc
fimul
cdq
or
jmp
inc
loop
add
jno
pop
mov
in
loopne
dec
pop
dec
sub
pop
mov
retf
inc
hlt
add
inc
push
or
mov
sub
pop
nop
imul
loope
adc
adc
adc
sbb
inc
mov
inc
jne
inc
cld
adc
jp
aam
xchg
dec
in
mov
mov
xlat
(bad)
jle
pop
cmps
push
mov
sub
btr
sbb
inc
or
nop
pop
cmp
cmp
dec
das
imul
jo
or
xchg
cmps
mov
push
fld
addr16
jl
jbe
pop
or
pop
dec
mov
(bad)
je
mov
xor
out
fs
mov
pop
mov
mov
in
mov
cmp
std
jmp
cld
mov
adc
mov
cmp
lds
jnp
or
push
mov
lods
xor
inc
lods
aaa
mov
fild
mov
sub
jle
jbe
shr
sub
mov
xor
loope
cmp
ffreep
addr16
push
hlt
in
cmp
shr
xlat
in
(bad)
fidiv
mov
jle
scas
test
outs
inc
cmps
xchg
sbb
dec
popa
lock
or
xor
push
xlat
ds
ins
mov
mov
inc
ret
data16
pop
retf
clc
adc
xchg
adc
jne
or
jmp
pop
pop
sbb
xor
iret
ror
or
movs
jp
out
fadd
mov
lds
icebp
(bad)
sti
pop
mov
dec
sub
mov
sub
mov
mov
bound
add
pop
cmp
cmp
leave
and
repz
mov
rol
dec
push
sbb
popa
xchg
sar
mov
pop
outs
shl
frstor
mov
pop
mov
test
je
jge
push
cs
stos
popf
pop
ficomp
loope
mov
call
pop
mov
leave
js
xchg
jg
fmul
sub
and
fiadd
mov
out
mov
cld
repnz
xchg
dec
sbb
std
cmp
pop
xor
mov
pop
mov
pop
inc
(bad)
icebp
xlat
fistp
ins
(bad)
sti
aam
jns
dec
push
sbb
push
sub
fimul
popa
sti
push
sbb
pop
and
retf
cmc
sar
push
pop
lds
push
ret
jb
fstp
push
call
pop
sub
inc
imul
rol
mov
stc
push
imul
mov
jmp
mov
rcl
inc
pop
int3
dec
push
adc
cmp
(bad)
retf
mov
mov
pop
fistp
mov
pop
mov
sbb
pop
js
cs
call
sub
pop
(bad)
adc
outs
mov
mov
xchg
and
cmp
xlat
fcom
nop
xor
adc
pop
ds
(bad)
sahf
fcmove
sbb
icebp
not
aas
int
xchg
(bad)
je
lahf
pop
dec
pop
pop
sbb
jmp
not
and
sbb
mov
push
out
add
test
xchg
out
jae
cmp
lods
(bad)
cmp
push
cs
rcl
xchg
in
xor
int3
sub
mov
jge
neg
adc
sbb
pop
mov
mov
or
clc
dec
mov
cmc
bound
sbb
ret
retf
movs
fs
out
retf
or
pop
mov
cmp
fcmovbe
(bad)
into
pop
sub
rcl
sar
sbb
imul
enter
and
push
pop
shl
fmul
mov
xchg
stc
jmp
fadd
shr
iret
push
(bad)
push
movs
mov
xchg
xchg
hlt
pushf
out
fbstp
test
addr16
jo
icebp
out
inc
mov
cmp
and
je
mov
scas
mov
(bad)
xlat
outs
(bad)
pop
je
ss
scas
and
mov
or
lods
hlt
mov
sbb
loope
push
mov
iret
retf
push
mov
out
imul
jecxz
push
xor
daa
mov
and
add
mov
retf
shr
enter
add
xlat
(bad)
mov
std
push
out
retf
cmp
sbb
std
mov
and
xor
test
ja
movs
inc
and
or
sahf
mov
sti
pop
in
add
das
sub
leave
cdq
adc
pop
stos
jns
inc
cmp
mov
add
scas
mov
popf
shr
mov
push
shr
ficom
stos
dec
or
or
push
lods
push
inc
inc
leave
sahf
xor
mov
shr
shr
lahf
addr16
(bad)
push
inc
shr
cmp
arpl
adc
scas
push
cld
add
add
mov
in
inc
jne
in
sbb
icebp
in
add
cs
pop
xlat
mov
xor
adc
cs
mov
nop
push
jne
push
call
mov
jge
int3
dec
mov
mov
mov
jae
div
cli
out
sub
test
sahf
cmp
pop
cli
shl
cmc
pop
adc
and
pop
xchg
sub
cli
cmc
mov
sub
inc
lds
shl
pop
das
and
inc
mov
nop
pop
jge
sar
jmp
and
sub
dec
lock
rcr
cdq
inc
repnz
enter
cs
int
dec
add
sbb
loop
daa
stc
popf
pop
sub
inc
(bad)
adc
movs
inc
mov
dec
jbe
cwde
mov
sar
xlat
mov
pop
iret
mul
fidivr
push
fs
push
xor
or
pop
xchg
jbe
fsub
xchg
mov
js
jne
xor
or
pusha
lods
cmp
fwait
mov
in
(bad)
mov
addr16
inc
or
(bad)
iret
movlhps
ins
cmp
sub
sbb
xchg
push
outs
fisttp
xchg
mov
mov
nop
loope
push
icebp
inc
leave
jmp
adc
sbb
mov
enter
lods
mov
jb
push
cmp
and
in
stc
ss
ds
jno
push
(bad)
retf
xor
pop
or
inc
ds
lods
or
inc
mov
xchg
daa
jnp
movs
cmp
cmps
xor
jb
loopne
cmp
mov
sbb
gs
leave
(bad)
push
pop
call
aam
push
jmp
fadd
adc
xor
add
out
jmp
adc
jmp
stc
das
outs
(bad)
out
dec
call
retf
add
or
xor
into
mov
and
loope
inc
in
or
cli
dec
pop
leave
dec
lock
pushf
jmp
sbb
repnz
push
xchg
sahf
mov
test
xchg
pop
dec
movs
test
mov
inc
cmps
movs
sbb
ret
jp
pop
push
mov
out
ret
sbb
out
popa
sti
inc
clc
sub
ins
neg
sahf
dec
mov
fistp
lods
out
sub
jge
stos
aam
aad
outs
gs
ds
pushf
mov
xchg
sbb
push
popa
lahf
adc
lahf
cmp
pop
mov
jp
sbb
clc
mov
mov
jge
or
ret
sahf
xchg
sbb
xchg
push
jae
add
stos
adc
daa
ficomp
fwait
add
sti
movs
cmp
out
lea
out
sbb
movaps
inc
in
jb
ror
inc
aam
dec
ins
xchg
mov
sbb
movhps
pop
inc
bsf
movs
outs
cwde
dec
push
or
sub
jmp
in
test
mov
loopne
adc
in
jp
pop
mov
jecxz
movs
clc
inc
mov
mov
inc
jb
out
inc
xchg
retf
mov
push
scas
jl
xchg
les
mov
or
imul
mov
out
fdiv
daa
cdq
cmp
out
sti
div
jle
ss
outs
hlt
mov
fild
cmp
lods
jmp
or
std
jecxz
pop
add
push
dec
and
adc
fincstp
push
mov
(bad)
dec
arpl
sti
pop
ror
ss
arpl
mov
(bad)
sahf
test
pop
aam
ror
out
call
pusha
out
loopne
jnp
ret
in
adc
sbb
sbb
adc
mov
lods
dec
or
pop
es
push
out
into
enter
data16
test
xchg
imul
mov
out
mov
and
jecxz
and
xor
in
sub
xchg
adc
cmp
neg
in
jmp
inc
sbb
dec
push
mov
push
mov
push
xor
add
lods
les
inc
out
sub
sub
push
ins
mov
sub
lods
stos
fsubr
xchg
mov
dec
les
fbstp
xor
push
jmp
xchg
push
popf
mov
xlat
xchg
xchg
mov
add
xchg
ret
dec
add
(bad)
jle
leave
retf
cmps
mov
or
mov
push
inc
retf
cld
sub
ret
mov
stos
es
loopne
test
nop
cmps
les
ja
popf
push
push
mov
inc
dec
fs
push
push
repz
cli
push
test
mov
lock
ss
clc
std
movs
out
fild
mov
sub
das
inc
je
adc
sar
sbb
dec
icebp
scas
or
jnp
xor
jg
and
push
arpl
cdq
pop
sub
outs
or
addr16
sub
(bad)
mov
sbb
jae
ja
(bad)
rol
fcmovu
repz
imul
jmp
sub
mov
iret
pop
sahf
push
test
popa
mov
nop
jne
jae
out
mov
lods
push
mov
cwde
aaa
jmp
push
xchg
or
or
xor
mov
pushf
dec
mov
ss
das
push
leave
inc
hlt
outs
movs
rcl
pop
sub
jmp
fdiv
dec
pop
aaa
push
pushf
(bad)
shl
add
daa
add
add
inc
ins
test
add
inc
into
or
iret
mov
jle
and
hlt
hlt
adc
push
xchg
inc
test
cld
or
out
sub
rcr
push
add
out
fld
or
add
cmp
mov
fnsave
(bad)
rcl
fcomp
jmp
sar
nop
sub
(bad)
cs
gs
enter
and
outs
aad
xchg
(bad)
daa
and
jnp
daa
push
sbb
cmp
pusha
call
jo
jno
imul
vphsubbw
dec
and
jmp
dec
dec
(bad)
jle
mov
sti
pop
inc
sub
sti
idiv
ins
dec
gs
loop
stos
mov
and
pop
js
hlt
inc
adc
out
xchg
rcl
push
or
jp
mov
cmp
push
imul
jg
stos
cmp
mov
jb
test
mov
mov
or
jl
push
and
sti
adc
scas
shl
push
sbb
ins
mov
dec
dec
inc
sub
sbb
jmp
dec
fs
in
pop
fcmovbe
push
or
dec
or
test
add
sbb
add
push
xchg
shl
inc
sbb
fs
push
mov
and
add
add
je
pop
pop
scas
push
mov
push
popf
or
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
or
add
push
je
imul
add
add
sub
add
and
add
add
add
add
inc
push
dec
inc
add
add
add
add
and
outs
bound
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
push
add
add
add
add
and
add
and
add
jl
add
add
jmp
add
add
add
add
sbb
add
add
add
add
sbb
add
add
push
sbb
add
add
add
add
push
sbb
add
add
add
add
add
add
add
add
add
or
add
add
adc
in
sbb
add
add
add
add
add
add
adc
daa
or
add
add
adc
leave
or
add
add
adc
pop
or
add
push
and
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
int3
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
and
xchg
add
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xchg
add
inc
add
add
and
xchg
push
pop
add
add
and
xchg
add
add
and
xchg
add
add
and
xchg
add
cld
and
xchg
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
or
add
add
xchg
add
add
or
add
add
xchg
add
add
adc
add
add
xchg
add
push
adc
adc
adc
add
add
xchg
add
push
adc
adc
sbb
add
add
xchg
push
pop
add
add
add
add
xchg
add
push
adc
adc
and
add
add
xchg
add
adc
adc
sub
add
add
xchg
add
adc
adc
sub
add
add
xchg
add
adc
adc
xor
add
add
xchg
add
adc
adc
xor
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
push
adc
adc
inc
add
add
xchg
add
push
adc
adc
dec
add
add
xchg
push
pop
add
add
add
add
xchg
add
push
adc
adc
push
add
add
xchg
add
pop
adc
adc
pop
add
add
xchg
add
adc
adc
pop
add
add
xchg
add
pop
adc
adc
pusha
add
add
xchg
add
pop
adc
adc
fs
add
xchg
add
adc
adc
push
add
add
add
add
add
add
add
add
add
xchg
add
adc
adc
je
add
add
xchg
add
adc
adc
js
add
add
xchg
push
pop
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
pop
adc
adc
nop
add
add
xchg
add
pop
adc
adc
xchg
add
add
xchg
add
pop
adc
adc
cwde
add
add
xchg
add
pop
adc
adc
pushf
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
adc
adc
mov
add
add
add
xchg
add
adc
adc
shl
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
push
pop
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
adc
adc
call
add
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
adc
adc
cld
add
add
xchg
add
adc
adc
add
add
add
xchg
add
adc
adc
add
add
add
xchg
add
adc
adc
or
add
add
xchg
push
pop
add
add
daa
add
add
xchg
add
adc
add
add
xchg
add
add
daa
add
add
xchg
add
add
add
add
xchg
add
add
daa
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
daa
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
daa
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
daa
add
add
xchg
push
pop
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
adc
adc
dec
daa
add
add
xchg
add
adc
adc
push
daa
add
add
xchg
add
adc
adc
push
daa
add
add
xchg
add
adc
adc
pop
daa
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
fs
add
add
xchg
add
add
add
add
xchg
push
pop
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
adc
adc
test
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
or
add
add
daa
add
add
xchg
add
or
add
add
daa
add
add
xchg
add
or
add
add
daa
add
add
xchg
push
pop
add
add
add
add
add
add
jne
add
add
out
add
add
repnz
add
add
add
add
add
add
add
add
add
add
jb
add
add
mov
add
add
add
add
add
add
add
add
add
repz
add
add
add
adc
add
add
sub
bound
outs
add
add
add
add
add
add
add
add
add
add
add
xor
push
pop
add
add
add
fwait
add
xor
test
popa
add
add
add
add
sbb
cmps
add
add
stos
add
add
in
fiadd
dec
add
add
add
add
add
add
add
add
add
cmp
or
push
pop
add
add
add
add
add
add
add
add
add
add
add
xor
popa
add
add
add
pop
add
add
mov
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
pop
add
add
add
add
add
ins
jne
ins
ja
imul
push
cs
and
cmp
cmp
xor
xor
xor
xor
aaa
cmp
xor
cmp
xor
xor
xor
cmp
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
dec
imul
je
push
imul
jae
arpl
in
test
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
scas
in
cmps
in
mov
mov
in
xchg
mov
in
mov
mov
in
xchg
in
xchg
mov
in
xchg
mov
in
mov
mov
jae
jne
arpl
add
push
xor
push
jne
bound
inc
xor
add
ja
arpl
push
push
xor
je
add
push
dec
dec
xor
gs
jns
imul
inc
xor
dec
aaa
cmp
outs
push
bound
arpl
jns
je
ins
add
addr16
dec
inc
jno
outs
push
ins
push
push
add
dec
pop
inc
push
dec
inc
imul
jns
add
cmp
inc
outs
dec
inc
push
xor
push
push
push
ins
dec
dec
pop
jp
cmp
push
inc
jae
inc
push
dec
jne
push
outs
popa
bound
bound
js
je
cmp
dec
push
push
jae
imul
add
outs
jo
jb
jns
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
je
jns
add
je
jb
jo
jb
jns
push
gs
popa
ins
jne
add
aaa
inc
xor
xor
ja
push
dec
imul
push
push
data16
xor
inc
bound
push
jae
js
dec
cmp
push
jb
aaa
jp
inc
xor
data16
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
outs
addr16
push
inc
jbe
fs
dec
inc
add
dec
dec
push
jae
push
popa
push
ins
ins
outs
xor
pop
js
add
push
xor
inc
je
cmp
jno
push
popa
jb
ins
inc
jb
popa
jns
je
jb
bound
add
arpl
add
push
ja
ss
dec
je
aaa
ja
pop
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
ins
bound
dec
gs
outs
fs
outs
outs
add
arpl
je
outs
outs
add
je
xor
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
outs
add
imul
dec
gs
popa
add
jae
popa
addr16
outs
js
push
push
imul
jae
ins
je
dec
dec
jbe
push
bound
xor
jne
push
js
inc
add
inc
jo
dec
bound
dec
gs
xor
push
bound
add
je
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
fs
jb
popa
jns
inc
push
dec
jb
bound
dec
outs
add
push
outs
push
xor
add
pop
imul
cmp
jae
push
add
inc
dec
dec
inc
fs
inc
jb
add
gs
je
inc
arpl
jo
outs
jb
cmp
xor
xor
inc
imul
pop
push
push
ja
inc
popa
gs
ins
dec
inc
popa
push
add
outs
jae
outs
jb
inc
imul
arpl
dec
jno
xor
popa
dec
js
push
push
xor
outs
imul
xor
outs
xor
xor
add
je
dec
jbe
dec
outs
je
push
dec
xor
cmp
jns
ins
inc
jns
imul
dec
inc
inc
dec
ss
xor
jno
dec
jns
xor
dec
dec
xor
outs
push
inc
push
push
add
je
gs
outs
fs
outs
jo
inc
jno
popa
ins
imul
gs
outs
add
gs
imul
dec
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
je
inc
gs
jns
push
pop
dec
dec
xor
xor
bound
push
add
push
dec
outs
push
imul
popa
jae
dec
push
popa
inc
jbe
add
push
xor
xor
js
jno
add
push
jo
inc
imul
jbe
jo
dec
arpl
push
outs
ins
js
push
ins
push
ss
jo
add
outs
pop
xor
jns
push
pop
inc
aaa
cmp
inc
gs
popa
ins
jne
add
jbe
jbe
xor
push
dec
jp
inc
dec
inc
inc
add
xor
push
xor
jo
push
dec
xor
jno
pop
je
add
dec
jns
push
inc
bound
js
ja
pop
imul
cmp
bound
pop
add
cmp
ins
dec
xor
inc
jo
jno
gs
jns
xor
ins
dec
bound
jns
jp
inc
push
push
jbe
jbe
push
dec
outs
push
aaa
data16
xor
pop
bound
pop
jno
push
dec
inc
jbe
dec
dec
add
xor
popa
dec
jo
ins
ins
jne
add
inc
popa
push
xor
inc
popa
push
outs
xor
push
jb
ja
dec
xor
xor
jno
xor
push
jbe
add
fs
aaa
xor
push
push
fs
pop
ins
add
arpl
xor
jbe
dec
jb
xor
xor
jno
jb
xor
fs
inc
inc
jns
ss
inc
xor
xor
ja
dec
xor
add
jb
jo
xor
ins
dec
xor
cmp
imul
dec
inc
dec
jne
arpl
add
cmp
ss
jo
jbe
ja
xor
dec
arpl
inc
dec
xor
pop
pop
je
push
inc
push
dec
outs
add
jns
jae
xor
gs
outs
fs
inc
add
inc
je
inc
xor
inc
js
push
xor
jns
outs
add
xor
outs
arpl
dec
gs
inc
jb
xor
inc
xor
dec
js
push
outs
ss
inc
cmp
xor
js
jno
dec
arpl
bound
inc
push
cmp
push
push
inc
push
push
push
xor
dec
imul
inc
addr16
add
pop
jo
push
xor
addr16
push
dec
xor
push
ins
xor
add
xor
push
jp
jns
ja
js
ins
add
inc
dec
inc
inc
cmp
jb
jns
dec
dec
xor
outs
push
inc
xor
xor
data16
jp
dec
jns
inc
addr16
inc
cmp
jp
jno
js
jo
push
dec
dec
dec
inc
add
push
pop
je
xor
inc
bound
ss
gs
pop
jbe
js
dec
xor
ins
dec
ins
xor
ins
inc
dec
dec
push
push
js
inc
add
push
outs
inc
xor
pop
jbe
bound
xor
push
inc
aaa
addr16
jbe
inc
dec
push
xor
jno
aaa
inc
push
xor
popa
dec
outs
add
push
jbe
bound
dec
push
jbe
popa
dec
je
cmp
inc
inc
cmp
pop
inc
ja
bound
add
xor
push
jae
fs
inc
dec
push
inc
push
add
jae
xor
ins
xor
inc
add
jae
inc
inc
jno
push
jbe
jbe
jb
add
xor
xor
ins
dec
arpl
inc
xor
outs
imul
inc
pop
push
dec
inc
add
imul
xor
jne
inc
push
pop
push
xor
cmp
push
xor
xor
jb
jbe
inc
dec
push
push
dec
addr16
push
xor
xor
jbe
addr16
cmp
add
jp
imul
cmp
ins
bound
inc
inc
xor
ja
addr16
inc
aaa
cmp
outs
jp
ss
pop
js
dec
push
jne
inc
push
push
dec
xor
cmp
xor
add
cmp
xor
push
xor
pop
add
dec
push
inc
dec
xor
jp
push
push
popa
addr16
xor
push
add
aaa
dec
dec
dec
aaa
inc
xor
add
je
gs
aaa
push
bound
aaa
js
js
push
add
jns
inc
xor
inc
inc
xor
ins
cmp
dec
jne
push
inc
push
dec
pop
imul
add
data16
inc
dec
js
jno
jae
aaa
js
jns
je
imul
push
imul
push
outs
cmp
jp
push
xor
push
addr16
jb
pop
imul
gs
pop
xor
add
push
cmp
pop
jp
ss
pop
xor
inc
push
push
dec
push
dec
dec
ins
xor
dec
jp
outs
jo
jne
xor
ins
dec
push
add
ss
inc
outs
cmp
push
xor
add
ins
jne
inc
bound
addr16
outs
add
push
ss
jp
dec
jns
outs
ja
ss
cmp
jae
pop
push
add
xor
inc
inc
cmp
imul
jno
dec
push
ins
push
jbe
dec
outs
push
jb
push
pop
inc
pop
fs
inc
dec
add
pop
dec
dec
xor
inc
pop
jb
fs
jp
cmp
jae
push
push
inc
inc
jb
imul
push
js
js
push
jne
xor
add
imul
je
jno
jo
bound
outs
inc
dec
push
inc
pop
cmp
cmp
inc
ja
bound
addr16
inc
push
add
jns
popa
jns
arpl
pop
jno
xor
bound
dec
push
dec
inc
push
dec
add
inc
push
imul
jbe
inc
ja
xor
add
xor
aaa
inc
imul
jbe
ins
jp
inc
imul
dec
ja
imul
jo
arpl
add
pop
push
inc
push
inc
pop
push
jne
dec
push
fs
popa
dec
push
pop
xor
dec
pop
add
ss
jb
imul
dec
jns
push
outs
jo
xor
ss
xor
push
push
inc
add
xor
dec
outs
push
inc
push
xor
dec
xor
cmp
je
xor
dec
push
arpl
dec
push
add
push
inc
xor
push
ja
imul
xor
dec
jno
inc
push
xor
xor
dec
push
bound
dec
dec
add
push
dec
outs
xor
ja
je
cmp
add
ss
xor
ja
xor
popa
add
dec
push
xor
dec
inc
bound
push
push
cmp
jne
push
push
imul
inc
dec
push
addr16
cmp
inc
xor
xor
jne
inc
inc
xor
dec
jb
pop
jbe
inc
inc
pop
imul
imul
pop
push
dec
ins
push
imul
inc
bound
bound
push
push
jns
imul
ja
pop
jo
dec
jo
dec
popa
addr16
bound
add
imul
pop
push
dec
dec
push
inc
ins
add
aaa
cmp
xor
cmp
jno
add
inc
ja
inc
ins
inc
inc
push
pop
add
dec
imul
jne
je
pop
push
outs
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
jns
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
dec
push
dec
inc
dec
js
and
dec
pusha
dec
add
dec
push
dec
dec
dec
xor
dec
outs
dec
dec
cmp
pop
dec
sbb
dec
inc
dec
and
dec
jb
imul
adc
dec
jae
add
dec
dec
dec
cmp
dec
arpl
adc
jae
jae
add
bound
ins
add
add
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
inc
add
je
dec
add
push
add
je
add
pop
dec
or
jle
inc
dec
jns
sub
dec
and
dec
das
dec
adc
dec
pop
dec
sbb
dec
je
sbb
dec
jge
and
inc
push
dec
jne
sbb
ds
cs
es
adc
dec
adc
dec
sub
dec
jae
inc
dec
cmp
dec
pop
dec
sbb
push
dec
or
push
dec
sbb
dec
ins
dec
jle
inc
dec
addr16
jg
ja
adc
dec
add
inc
jle
das
dec
sbb
dec
sbb
dec
jo
add
dec
sbb
dec
cmovle
dec
ja
inc
dec
adc
dec
push
dec
add
dec
inc
dec
sub
dec
add
dec
push
dec
jl
popa
dec
and
dec
push
dec
inc
dec
add
push
add
jae
je
add
add
je
jb
imul
pop
add
add
inc
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
pop
dec
add
jns
add
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
dec
add
popa
add
add
add
add
outs
add
add
add
add
jns
add
push
add
add
add
imul
add
jae
add
add
add
add
add
add
add
data16
add
add
add
dec
add
add
add
add
add
add
jbe
outs
add
add
add
add
add
add
add
add
dec
add
ins
add
add
outs
add
push
add
jb
popa
add
add
add
jae
add
add
add
mov
inc
push
inc
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
add
add
pop
add
add
sbb
add
or
add
or
adc
pop
and
add
sbb
add
sbb
add
adc
sbb
or
add
sbb
add
add
add
adc
sbb
adc
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
add
adc
add
push
adc
add
push
add
push
push
sbb
push
add
push
add
push
pop
pop
add
add
sbb
and
add
add
add
add
add
add
and
and
add
sbb
or
add
sbb
add
or
sub
or
add
sub
push
push
or
adc
push
sbb
sbb
push
sbb
sbb
and
sbb
sbb
sbb
push
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
dec
mov
add
push
add
and
add
push
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
