push
mov
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
call
test
je
call
call
mov
sub
mov
mov
mov
shl
mov
mov
shl
mov
mov
mov
shr
mov
mov
push
call
mov
imul
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
call
mov
cmp
je
int
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
push
mov
push
call
add
mov
mov
cmp
jb
jmp
mov
push
push
mov
push
push
push
call
add
mov
mov
mov
add
mov
lea
mov
mov
sub
mov
mov
add
mov
mov
sub
mov
cmp
jne
push
ret
mov
push
mov
push
call
add
xor
add
push
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
mov
jmp
xor
jmp
sub
lea
push
ret
mov
push
ret
xor
shl
jmp
xor
mov
mov
sub
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
add
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
lea
mov
mov
push
mov
push
call
add
mov
add
mov
mov
test
jne
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
jmp
xor
jmp
xor
jmp
sub
lea
shl
push
ret
xor
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
push
push
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
test
je
mov
lea
jmp
sub
jmp
mov
push
ret
add
jmp
xor
push
ret
add
shr
push
ret
int
shl
push
ret
push
jmp
pop
jmp
sub
jmp
add
jmp
sub
mov
cmp
jb
jmp
mov
mov
mov
add
mov
add
mov
mov
mov
add
mov
jmp
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
call
test
je
xor
jmp
push
call
mov
mov
mov
mov
mov
mov
test
je
lea
push
lea
push
lea
push
push
mov
push
mov
push
call
test
je
call
movzx
cmp
jne
movzx
cmp
je
movzx
cmp
jne
mov
lea
mov
sub
add
movzx
cmp
je
add
add
jmp
jmp
call
jmp
mov
mov
push
ret
push
ret
push
ret
mov
add
mov
cmp
sbb
neg
mov
mov
mov
add
mov
mov
cmp
sbb
neg
mov
cmp
je
cmp
je
mov
jmp
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
mov
mov
mov
mov
jmp
mov
push
ret
push
jmp
int
mov
push
ret
lea
push
ret
int
push
ret
sub
jmp
int
push
ret
sub
mov
cmp
jae
mov
jmp
jmp
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
mov
mov
push
push
push
mov
sub
push
push
pop
call
mov
mov
mov
pop
ret
int3
push
mov
sub
push
push
mov
mov
mov
mov
mov
lea
push
ret
xor
jmp
sub
shl
shl
jmp
xor
shl
jmp
push
mov
shr
lea
xchg
shr
shr
jmp
add
push
ret
add
jmp
mov
mov
imul
mov
mov
mov
mov
sub
mov
mov
add
mov
mov
add
mov
xor
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
push
mov
lea
push
ret
lea
shr
push
ret
sub
push
ret
lea
lea
jmp
mov
mov
jmp
sub
lea
push
ret
sub
mov
mov
mov
pop
mov
lea
push
mov
push
mov
xor
lea
dec
add
push
ret
pop
pop
mov
pop
ret
int3
int3
ins
popa
outs
fs
gs
and
fs
fs
gs
ins
arpl
outs
and
popa
je
jb
gs
jae
gs
outs
and
outs
addr16
jae
gs
jb
je
outs
and
ins
imul
and
ins
jo
jne
fs
push
ja
ins
popa
outs
and
outs
addr16
outs
jbe
outs
jne
ins
jns
ins
outs
jne
imul
outs
jne
outs
gs
gs
bound
gs
ja
ins
imul
je
jb
imul
jne
fs
jb
and
gs
jp
and
outs
ins
gs
ins
and
jb
imul
gs
ins
jne
je
outs
outs
jae
arpl
jne
imul
and
ins
and
popa
jo
imul
gs
je
ins
imul
jo
outs
outs
gs
bound
jo
jo
jb
imul
data16
outs
gs
and
jae
gs
and
popa
jo
imul
popa
je
jb
and
jo
imul
outs
push
and
outs
arpl
jb
gs
jae
ins
ins
imul
ins
outs
jb
push
and
outs
gs
imul
jbe
ins
outs
arpl
imul
jae
ja
imul
imul
gs
bound
arpl
je
ins
popa
fs
imul
bound
jae
fs
outs
imul
outs
outs
jae
ins
ins
popa
je
and
outs
je
popa
jae
outs
jne
gs
je
and
je
ins
gs
outs
arpl
and
popa
ins
gs
jb
push
jae
outs
js
outs
popa
je
outs
and
bound
je
outs
outs
jae
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
add
enter
ret
fcmovne
jb
in
fiadd
add
add
fbstp
rol
ret
jg
add
jg
push
imul
lods
add
jg
add
jg
outs
ins
sahf
fst
call
gs
add
push
les
push
ins
push
dec
ret
pop
fld
add
add
add
fs
es
jb
sub
lods
add
jg
inc
gs
outs
fs
gs
push
ret
fs
sbb
add
jg
gs
shl
dec
popa
ror
ins
gs
add
mov
retf
ror
inc
add
add
jg
add
fld
xchg
retf
cmps
mov
lea
push
jb
fldenv
shl
lods
add
jg
add
jg
ins
outs
dec
retf
popa
leave
ins
gs
add
jg
add
inc
retf
sbb
jo
push
fldcw
jg
add
jg
add
jb
and
add
jg
add
jg
ins
jae
(bad)
jmp
jg
add
jg
add
jg
gs
shl
inc
imul
retf
test
jne
call
ins
call
dec
retfw
jb
ins
(bad)
add
jg
add
jg
add
jg
add
jg
add
jg
push
add
cmc
nop
add
stos
mov
lods
add
cmps
stos
add
push
test
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
out
add
and
int
adc
dec
ror
and
les
aaa
(bad)
and
lds
fimul
jne
add
jbe
outs
and
in
and
ret
fs
add
(bad)
stos
add
dec
mov
pop
cs
mov
mov
pop
cs
rcr
mov
pop
cs
add
cmp
pop
cs
add
cs
rcr
rcr
ret
sbb
clc
rcr
mov
pop
cs
mov
pop
cs
shl
rcr
test
add
(bad)
test
add
imul
add
repnz
add
leave
jg
(bad)
test
add
xchg
or
xchg
sbb
cmps
pop
add
cmps
test
add
xchg
mov
popaw
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
(bad)
dec
mov
and
adc
mov
adc
push
mov
add
div
add
(bad)
mov
add
mov
add
rol
add
add
mov
add
mov
add
add
add
add
xchg
mov
add
mov
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
mov
add
pusha
add
fimul
jmp
mov
add
mov
add
add
mov
add
mov
add
scas
add
out
add
nop
mov
add
mov
add
out
add
(bad)
std
add
(bad)
dec
(bad)
jmp
scas
add
xchg
scas
add
mov
add
shl
add
push
add
xchg
pop
add
add
add
push
scas
add
push
scas
add
scas
cmps
mov
inc
xor
popa
je
mov
add
add
es
push
add
mov
add
add
scas
add
push
scas
add
(bad)
scas
add
cmp
add
into
push
add
in
add
out
push
add
scas
add
(bad)
scas
add
cmps
scas
add
out
add
mov
sub
add
cmps
inc
add
scas
add
data16
add
push
scas
add
xchg
mov
inc
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
cld
inc
mov
loop
add
xchg
xchg
add
call
mov
das
gs
xchg
xor
je
cmp
in
add
sbb
or
push
stos
add
cmp
push
test
lds
cmp
stos
add
cmps
imul
xchg
in
cld
call
imul
add
add
add
add
jno
add
enter
lds
lea
inc
dec
dec
push
rol
shl
div
push
test
movs
or
fisubr
shl
inc
mov
bound
sub
mov
ret
mov
xchg
add
call
leave
fnsave
cs
add
add
push
add
mov
call
call
mov
neg
sub
mov
leave
cwde
pop
adc
mov
xor
rcr
jae
(bad)
jge
pop
cmc
or
cwde
lds
mov
lahf
add
bound
inc
or
call
test
add
cmp
fwait
enter
stos
lea
ret
in
out
cmp
add
les
shl
mov
inc
add
es
or
outs
mov
push
add
add
ret
sbb
push
mov
mov
or
sub
(bad)
ret
inc
add
add
sar
mov
push
push
ret
outs
mov
les
push
pop
pop
sub
jbe
sbb
mov
ret
fisttp
adc
lods
call
mov
jmp
jae
mov
cwde
test
sbb
stc
or
add
mov
std
test
or
rcl
retf
push
mov
mov
adc
lea
push
ins
cmp
loop
push
call
dec
out
adc
adc
les
scas
add
ffree
(bad)
leave
push
lods
add
ficomp
add
xchg
rol
ret
push
add
in
dec
push
mov
sub
(bad)
adc
jbe
cmps
and
scas
cmp
mov
push
push
(bad)
xchg
add
push
push
push
xor
or
cwde
clc
jae
enter
test
(bad)
jmp
xor
leave
mov
push
xor
(bad)
shr
pop
fs
push
add
scas
call
mov
inc
mov
das
iret
pop
pop
push
(bad)
jmp
mov
shr
mov
dec
ror
int3
in
mov
inc
mov
adc
sub
xchg
enter
cmp
xchg
aad
add
scas
add
lea
daa
(bad)
cmc
or
add
push
test
inc
or
cmc
cld
add
add
out
inc
in
dec
push
adc
outs
mov
(bad)
jge
sbb
sahf
add
cs
scas
mov
jmp
xor
add
adc
add
jmp
les
test
(bad)
call
(bad)
dec
adc
mov
les
add
out
(bad)
std
call
bound
or
(bad)
jne
in
push
push
gs
mov
iret
cmp
push
add
inc
cs
or
add
push
in
lea
fsubr
add
outs
or
jle
mul
clc
add
xor
pushf
scas
add
push
ror
hlt
mul
add
xchg
lods
int3
push
or
push
jne
fucom
or
push
fdivr
jne
movs
sub
mov
sub
sub
jmp
movs
loopne
add
arpl
ins
dec
test
jmp
xchg
loopne
add
arpl
ins
jp
add
inc
dec
add
push
loopne
add
bound
add
add
add
add
stos
push
mov
rcl
adc
not
or
les
and
out
push
arpl
add
push
in
push
in
cmp
sbb
sbb
stos
add
int
add
ins
push
push
loope
or
es
mov
pusha
hlt
ret
fimul
add
add
add
add
mov
lea
sub
adc
mov
cmp
fmul
jb
daa
(bad)
adc
mov
pop
adc
mov
call
cmps
xor
loopne
ret
fisttp
call
call
scas
adc
add
dec
pop
and
fimul
add
add
add
add
icebp
cmp
repz
push
mov
cmp
mov
mov
cmp
jbe
lods
test
push
mov
call
lea
stc
div
inc
or
jb
pop
rcr
push
sub
popa
(bad)
jmp
sahf
inc
or
dec
push
sbb
add
(bad)
pop
repz
jmp
in
mov
push
push
dec
sar
push
add
add
mov
sub
dec
int3
adc
mov
cmp
fwait
test
push
call
mov
fild
call
lods
repnz
enter
out
test
add
retf
jg
mov
add
in
mov
repnz
movs
ret
inc
add
in
or
xchg
dec
push
push
push
pop
inc
add
fimul
add
jmp
push
mov
lea
loopne
icebp
test
aam
jl
mov
out
ret
sub
inc
add
dec
and
in
js
icebp
(bad)
sbb
push
pop
jecxz
pop
mov
inc
fisubr
out
xlat
scas
pop
mov
scas
push
mov
mov
add
imul
ret
jmp
xchg
inc
test
sub
xor
add
inc
pop
push
and
scas
pop
leave
and
pop
div
aad
add
fadd
lea
call
push
mov
pop
cmp
push
add
mov
push
jmp
(bad)
call
into
loope
(bad)
dec
lods
mov
push
and
mov
sbb
add
adc
ins
jb
push
in
int
jae
cld
push
pop
sub
ja
mov
or
jnp
push
fsubrp
outs
mov
mov
jmp
mov
or
int
mov
faddp
inc
and
pop
iret
in
in
pop
into
clc
adc
jge
mov
or
inc
push
add
jg
push
mov
jmp
inc
dec
lea
mov
push
dec
pop
add
out
les
mov
add
sub
sbb
iret
pop
repz
sub
add
ja
add
fs
dec
xlat
add
pop
lods
add
test
call
int3
mov
xchg
cmp
push
fnstsw
sub
iret
sbb
mov
inc
sbb
mov
sub
jne
jmp
lods
add
jmp
xor
or
inc
inc
fiadd
call
push
add
movs
cmp
push
dec
push
push
push
dec
ror
mov
cmp
push
mov
add
movs
jae
xchg
retf
jo
call
jmp
xor
enterw
pushf
jae
in
jp
cmp
mov
push
fld
call
jmp
mov
jne
jmp
add
push
jge
cmp
movs
rcr
pop
pop
in
call
push
push
jne
push
(bad)
or
retf
xor
lock
ja
add
mov
ret
push
pop
pusha
cmp
mov
mov
adc
aaa
mov
push
add
xchg
stos
pop
ret
push
mov
test
sub
push
dec
test
retf
jle
cmp
in
jecxz
jmp
push
inc
add
aad
sub
jae
mov
dec
sar
adc
cmp
add
jne
sub
call
stos
jno
sub
inc
jno
(bad)
jecxz
jmp
sbb
or
pop
jnp
push
stos
inc
(bad)
jne
daa
into
call
dec
arpl
repz
add
daa
in
mov
mov
mov
out
(bad)
xchg
push
mov
dec
(bad)
inc
add
jne
in
mov
icebp
push
arpl
popa
stos
add
ds
(bad)
jmp
dec
jne
int
call
mov
jmp
ret
push
mov
cmp
push
inc
mov
push
scas
add
inc
push
pop
pop
mov
inc
add
jne
es
dec
mov
dec
add
add
add
cwde
in
ret
je
in
imul
gs
xchg
mov
sbb
clc
std
jmp
pop
push
dec
jne
ds
sti
inc
(bad)
leave
adc
add
pop
and
(bad)
cwde
xor
add
call
mov
push
mov
inc
sbb
mov
add
adc
jmp
add
dec
push
or
mov
(bad)
xor
add
and
push
int3
dec
push
cdq
fucomi
lock
(bad)
(bad)
in
jae
add
jnp
in
push
inc
clc
add
cmp
lea
jne
inc
retf
add
and
adc
and
sub
sbb
or
cs
add
add
add
call
movs
into
sbb
xchg
mov
mov
or
movs
lea
out
jnp
add
sub
dec
mov
sub
call
pop
push
push
push
call
sbb
call
add
and
in
and
and
mov
adc
and
pop
xchg
add
in
ret
push
fstp
jle
fld
add
rcr
or
add
and
push
js
fmul
pop
icebp
jbe
leave
(bad)
dec
inc
push
pop
jmp
les
sub
add
scas
pop
pop
movs
je
in
push
rcr
or
adc
stos
daa
inc
add
scas
add
jns
dec
scas
jle
inc
mov
scas
pop
ret
push
mov
out
data16
aas
inc
mov
xchg
mov
push
jne
int
adc
jle
add
jae
or
imul
mov
add
lea
enter
jmp
imul
push
daa
dec
adc
push
(bad)
(bad)
adc
(bad)
lods
pop
ret
push
mov
pusha
stc
sbb
mov
push
out
test
sub
not
in
call
repz
es
push
adc
mov
sub
sbb
add
lods
add
xor
(bad)
stos
mov
(bad)
dec
addr16
ret
push
into
mov
cmp
lods
mov
lods
out
sbb
xchg
inc
sbb
adc
es
test
retf
jbe
inc
add
ss
sub
inc
jb
dec
sbb
call
add
add
add
add
fsub
mov
dec
mov
and
fdivr
add
jne
and
or
jnp
add
mov
hlt
hlt
and
test
fmul
(bad)
push
inc
mov
mov
fcom
ins
call
mov
and
add
lds
lea
add
adc
ja
push
(bad)
jmp
and
call
mov
mov
add
imul
jle
add
add
in
sub
arpl
mov
adc
mov
pop
stos
add
(bad)
mov
ds
add
test
stos
lods
mov
cmp
fidivr
inc
add
push
sub
push
inc
cmp
es
mov
mov
lods
out
push
movs
imul
lea
xchg
pop
stos
add
add
or
dec
jmp
mov
sub
(bad)
fld
pop
ds
mov
sub
pop
inc
sbb
add
mov
jne
or
fidivr
inc
popw
dec
sbb
jmp
add
fucomip
or
out
lea
add
addr16
push
rol
sub
mov
inc
add
daa
gs
out
mov
out
push
dec
repz
add
out
call
ret
in
test
add
lahf
call
call
test
add
(bad)
add
(bad)
and
cmp
add
(bad)
add
shl
mov
aas
inc
push
cmp
mov
mov
or
js
cmp
mov
sbb
add
fmul
add
add
add
add
cdq
mov
mov
(bad)
xor
push
sbb
lea
int
fs
add
or
cmp
mov
int3
sbb
cdq
xor
cmp
mov
int3
sbb
adc
add
or
lock
fucomp
or
add
lods
mov
out
jne
add
mov
xor
rol
call
mov
in
and
mov
int3
inc
mov
test
push
mov
retf
movs
add
and
jl
pop
cwde
lods
and
(bad)
scas
add
ds
jmp
stos
add
(bad)
mov
je
sbb
add
add
add
mov
retf
and
sub
lods
add
sbb
fisubr
pcmpeqw
fild
sbb
shl
inc
fld
sar
inc
ds
jmp
fld
sar
sub
sub
call
xor
inc
push
push
scas
add
cmp
mov
add
in
pop
lea
add
add
add
add
scas
push
push
xor
xlat
scas
mov
das
gs
out
ss
scas
push
outs
jb
add
mov
ret
push
mov
in
sbb
fcom
or
mov
xor
pop
add
inc
sbb
ins
lock
jge
in
dec
add
test
imul
dec
add
push
aaa
inc
adc
retf
add
call
adc
sub
mov
adc
mov
mov
dec
(bad)
pop
mov
cmp
in
clc
ror
mov
outs
jns
add
add
call
out
ffreep
push
sub
fisttp
test
add
and
sar
inc
inc
test
call
jmp
int
adc
jl
cwde
pop
or
cld
ja
add
popf
outs
or
in
loop
push
lods
pop
jmp
sbb
add
repnz
sbb
pop
cli
clc
imul
mov
jl
cmp
push
or
cld
and
inc
mov
mov
xchg
leave
sbb
test
out
retf
add
scas
add
in
cmc
jmp
jns
call
and
call
outs
ss
adc
mov
leave
mov
add
mov
xor
pop
in
jae
scas
and
add
cmps
shl
or
jb
jmp
sbb
xchg
sbb
mov
xor
sub
xchg
sbb
(bad)
clc
cmp
mov
add
cmps
xor
or
lods
pop
ret
push
mov
das
in
adc
add
cmps
dec
or
push
jmp
int
adc
pop
mov
jo
dec
lods
out
sub
mov
cmp
adc
mov
push
scas
daa
or
out
inc
adc
or
adc
stos
push
sub
hlt
mov
and
cdq
or
cmps
stos
pop
pop
in
imul
add
add
add
add
test
call
sbb
mov
add
ins
add
sahf
and
dec
push
push
add
inc
add
cmps
mov
mov
shr
pop
push
call
mov
xor
cmp
icebp
mov
in
xor
iret
sbb
sbb
add
fld
add
fld
fs
xlat
test
or
out
je
sbb
mov
pop
sbb
mov
lods
jmp
sbb
and
je
mov
lods
cmp
jge
mov
mov
cmp
jmp
je
dec
rcr
add
inc
add
jbe
imul
adc
in
int
or
add
add
add
(bad)
add
mov
sub
out
add
ins
pusha
sar
mov
jae
mov
mov
mov
jbe
or
sbb
or
push
lea
stc
dec
mov
adc
leave
push
(bad)
xor
mov
sbb
add
jmp
add
add
add
add
sub
(bad)
push
add
sub
lods
out
and
pop
ret
jnp
in
mov
xchg
mov
xchg
imul
out
dec
or
mov
out
pop
mov
pop
sub
add
mov
jge
out
or
daa
sbb
xchg
add
ins
fist
clc
in
ret
add
add
scas
sub
(bad)
or
ud1
inc
mov
stos
add
das
(bad)
mov
pop
mov
das
cli
or
mov
jecxz
inc
mov
pusha
jbe
in
je
psubusw
pop
inc
cwde
loopne
mul
mov
push
push
test
or
scas
add
add
fadd
ret
rcr
popa
add
sub
add
and
ins
and
add
mov
jge
sar
ins
scas
or
rcr
pop
out
pop
add
cmps
in
push
sub
fadd
dec
and
das
leave
dec
std
mov
das
cli
or
mov
add
jecxz
dec
mov
mov
pop
imul
dec
push
mov
out
cmp
adc
adc
pop
jb
cmps
push
jmp
cmps
(bad)
cmp
pop
(bad)
add
pop
jb
cmps
mov
pop
add
mov
in
in
imul
jge
cmps
ficom
sub
add
jnp
mov
adc
jo
adc
cmps
push
jmp
cmps
(bad)
lea
cmp
jg
mov
add
in
push
mov
cmps
push
or
cmp
dec
daa
jae
push
imul
mov
adc
mov
jb
cs
pop
leave
movs
and
add
pop
jb
add
movs
sub
fmul
add
movs
dec
adc
fs
and
sub
dec
mov
adc
push
call
add
test
mov
and
mov
xor
call
inc
cwde
loop
mul
push
cmp
jle
mov
add
shl
jmp
sub
or
mov
ins
jmp
clc
lods
lods
or
rcr
and
add
or
push
mov
rcl
inc
clc
dec
addr16
cmp
in
dec
and
sub
add
cmps
stos
mov
add
xchg
stos
mov
mov
stos
std
mov
shl
stos
sbb
cld
adc
add
push
mov
mov
or
outs
adc
call
stos
add
lods
in
jmp
sahf
inc
sbb
cmps
jge
xchg
jl
mov
sti
out
inc
repnz
adc
or
jmp
(bad)
inc
add
push
test
add
cmp
scas
add
sbb
(bad)
call
and
(bad)
call
(bad)
jae
in
ins
adc
cmp
cld
call
int
add
out
mov
dec
add
sahf
shl
cld
popf
imul
push
add
(bad)
div
sub
jmp
mov
push
imul
mov
jmp
(bad)
test
mov
mov
adc
frstpm(287
mov
mov
lea
mov
push
add
add
test
adc
bound
ror
mov
push
popf
shl
adc
jo
or
mov
sub
add
push
out
jmp
aam
call
pop
and
mov
sbb
rcr
leave
ret
call
(bad)
loopne
mov
pop
jno
add
cdq
add
add
add
add
cmps
cdq
or
xor
in
dec
mov
cwde
mov
or
in
and
push
je
lea
out
pop
mov
call
cmp
clc
add
and
xor
add
leave
mov
ret
lock
mov
in
adc
cdq
fdiv
xchg
ficom
add
sbb
mov
cmps
inc
sbb
or
or
scas
mov
xchg
imul
jmp
jmp
sbb
xchg
inc
hlt
or
xchg
jne
fild
dec
call
jae
in
aam
mov
mul
push
scas
test
push
fwait
or
es
mov
clc
mov
add
push
or
lea
dec
scas
lock
jmp
xchg
inc
sbb
or
shl
sub
out
test
mov
aam
(bad)
scas
push
xchg
inc
sbb
stc
jae
xor
jge
and
stc
add
xchg
scas
test
sub
jbe
inc
clc
add
(bad)
lea
idiv
inc
pop
das
ror
add
in
inc
cs
push
retf
mov
sbb
imul
mov
mov
sbb
sbb
add
xchg
iret
call
push
jae
pop
ins
adc
retf
cld
add
sbb
jmp
clc
mov
std
out
(bad)
out
dec
scas
lods
cli
jmp
xchg
dec
cld
fstp
or
pop
push
out
pop
lods
add
sbb
js
push
bnd
popf
(bad)
je
popf
loopne
push
hlt
mov
mov
fimul
or
lods
mov
add
(bad)
loopne
mov
xchg
inc
add
ins
add
xchg
rcr
scas
jmp
add
xchg
in
push
pop
ficomp
push
dec
add
sbb
and
adc
add
add
push
push
mov
xchg
pop
mov
ret
pop
das
out
add
jnp
in
cmp
push
push
add
int
sbb
ja
push
lea
adc
pop
call
call
add
stc
aaa
stos
add
cmp
call
neg
xchg
in
adc
push
or
mov
mov
push
test
lahf
xchg
shl
inc
cld
jge
lea
hlt
aas
or
mov
shl
add
add
add
add
cmps
call
mov
enter
push
stc
mov
sub
dec
inc
mov
pop
and
jne
(bad)
movs
or
lock
aam
mov
sub
fwait
jmp
push
and
mov
push
imul
scas
lock
mov
jae
add
pop
stos
jmp
pop
mov
cmp
fild
add
loope
pop
das
mov
add
pop
sub
jle
push
or
ror
push
stos
mov
cmp
or
data16
pop
lock
hlt
call
popf
(bad)
call
xor
add
add
add
add
mov
or
jmp
es
mov
push
mov
inc
push
sbb
test
mov
ds
(bad)
jmp
sub
ror
push
sbb
aas
and
sub
add
cmps
test
lock
mov
sub
push
mov
ret
add
mov
in
push
in
pop
jmp
mov
adc
jmp
sub
sbb
fmul
jne
nop
pop
ret
mov
sub
je
out
jne
(bad)
cli
(bad)
jmp
ficom
add
js
data16
and
and
ret
push
ins
pop
push
push
aad
mov
cmp
mov
fcom
call
movs
push
add
mov
inc
xchg
rol
and
test
leave
aam
add
inc
sub
jns
mov
inc
adc
call
sti
jmp
in
je
and
pop
jbe
(bad)
es
adc
and
je
pop
inc
adc
stos
call
mov
sub
push
push
add
add
fstp
je
ins
(bad)
out
in
scas
add
mov
add
add
mov
daa
jge
sbb
pop
mov
add
dec
cmp
aam
test
dec
push
mov
in
xor
jge
movs
movs
call
mov
and
shl
add
mov
jbe
in
ja
mov
jl
clc
lods
push
cmp
jae
(bad)
xchg
or
push
sub
ins
or
movs
fiadd
or
loope
sub
mov
mov
cmp
jb
outs
jb
add
daa
inc
adc
out
imul
jmp
call
test
add
fiadd
and
jg
cmp
daa
inc
sbb
push
adc
daa
push
add
scas
lea
push
jne
int
adc
jae
add
cmp
in
call
movs
jmp
scas
mov
mov
sub
je
in
pop
jg
mov
cmps
mov
iret
(bad)
adc
add
fild
or
lods
mov
push
(bad)
cmp
mov
or
add
inc
adc
jmp
xchg
adc
call
test
pop
mov
mov
jge
mov
cld
ds
out
and
shl
sbb
fild
add
mov
clc
add
push
fild
add
mov
ror
movs
dec
push
ins
push
(bad)
call
cld
sbb
out
xchg
jb
(bad)
in
jecxz
or
loope
sub
mov
call
test
rcl
dec
mov
sbb
add
and
rcr
push
adc
es
call
popf
loope
(bad)
(bad)
imul
mov
mov
jne
into
mov
lods
test
fisubr
jb
ins
push
jmp
push
inc
add
icebp
push
ror
mul
jmp
xor
call
add
sbb
jae
sub
mov
add
xchg
and
add
jp
mov
inc
shl
inc
push
add
and
mov
inc
fucom
adc
mov
mov
shl
ret
mov
ficom
test
fld
or
pop
adc
push
and
ins
ins
adc
dec
je
push
add
pop
inc
sub
jl
jne
pop
inc
sbb
pop
js
pop
ins
cld
(bad)
sbb
jmp
pop
inc
or
bound
add
adc
stos
add
sbb
mov
jge
mov
sub
xchg
mov
add
out
aad
mov
sbb
rcr
lock
add
inc
pop
hlt
add
shr
std
jne
pop
jne
jl
mov
and
xchg
add
stos
mov
pop
push
mov
and
cwde
or
dec
sbb
out
mov
pop
jne
dec
gs
jmp
test
or
sub
mov
add
rol
add
push
mov
pop
leave
and
add
push
sub
nop
mov
test
mov
push
sar
push
pop
lea
xor
clc
call
call
inc
cmp
test
jge
arpl
adc
movs
inc
inc
or
mov
add
or
outs
mov
cmps
(bad)
mov
inc
call
and
cmps
aaa
add
pshufw
fimul
inc
add
mov
inc
pop
(bad)
jo
cwde
mov
add
xor
iret
retf
cld
call
adc
cld
lea
push
push
push
iret
or
push
xor
mov
add
(bad)
call
(bad)
mov
mov
or
xchg
leavew
ret
push
dec
fidiv
xlat
scas
mov
pop
ret
call
jle
scas
mov
ss
in
sbb
push
mov
adc
mov
mov
call
fucomp
mov
xor
push
fild
mov
add
and
push
jmp
cmp
call
jne
add
mov
(bad)
jmp
ins
in
call
push
mov
mov
pop
(bad)
pop
out
push
int3
scas
call
int3
mov
ins
add
inc
or
add
cmp
mov
inc
add
add
je
call
and
ins
aam
adc
call
mov
xor
sub
scas
mov
aaa
dec
adc
push
xchg
or
scas
inc
aaa
fmul
sub
inc
sbb
push
push
and
add
pop
mov
cmps
cmp
add
sub
pop
fidiv
inc
sbb
lds
jne
cmp
dec
inc
lea
pop
mov
cmps
lods
mov
sub
mov
cmp
je
pop
(bad)
or
ja
stc
ds
add
inc
add
jb
add
retf
cmps
lods
mov
mov
ss
add
pop
xchg
or
lods
jmp
add
popf
fwait
cmp
jne
fsubr
call
mov
inc
sub
add
lea
or
ss
call
pop
retf
adc
mov
or
sub
xor
add
mov
add
mov
je
or
add
stos
mov
xor
mov
ds
and
data16
or
ins
add
mov
stos
add
hlt
bound
ret
mov
mov
add
in
xlat
add
int
jae
(bad)
fwait
mov
mov
out
push
mov
xor
sbb
les
sbb
inc
sahf
stos
jmp
add
dec
(bad)
or
loope
mov
push
xchg
adc
mov
je
xor
jmp
xor
or
mov
jg
dec
mov
jge
xchg
mov
inc
mov
(bad)
dec
mov
mov
mov
mov
(bad)
clc
out
inc
shl
or
les
push
mov
mov
call
add
add
add
add
mov
mov
scas
mov
pop
outs
add
adc
sub
add
out
jge
dec
les
mov
pop
mov
and
adc
add
jne
cmp
jge
mov
mov
mov
stos
pop
mov
stos
push
mov
in
sbb
mov
push
scas
push
lea
lea
mov
(bad)
lock
shl
sbb
sub
adc
fstp
inc
mov
jo
xchg
call
pop
outs
sbb
jle
arpl
mov
mov
mov
inc
scas
xchg
sub
add
pop
mov
lods
pop
mov
mov
jecxz
or
fwait
push
call
jmp
addr16
push
ds
or
push
test
sar
call
ins
or
lahf
mov
dec
sbb
pop
dec
jmp
add
mov
call
ins
pop
cmp
add
add
add
or
jmp
add
aam
mov
int3
cld
add
aam
xor
lods
call
(bad)
call
inc
lods
inc
and
jne
add
lea
jmp
jbe
mov
add
pop
jne
iret
js
mov
jbe
jmp
xor
add
push
mov
inc
sbb
pop
je
lahf
mov
or
fidivr
mov
jae
add
ins
mov
add
mov
adc
jne
adc
rol
cld
cmp
mov
call
mov
stos
mov
mov
xchg
fsubr
add
push
mov
add
lods
add
dec
ror
mov
mov
mov
popf
rol
jne
mov
mov
or
pop
push
mov
scas
mov
jmp
inc
add
imul
sbb
call
lea
stos
mov
push
rol
add
push
mov
xchg
pop
imul
sbb
je
add
bound
in
or
inc
ja
gs
imul
pop
call
pop
pxor
not
das
clc
sbb
and
mov
hlt
call
jle
mov
sub
std
sbb
add
scas
int3
push
xchg
cmp
test
mov
push
mov
pop
(bad)
or
add
inc
cmp
std
jmp
xchg
mov
jo
(bad)
sub
xchg
sub
sbb
aas
cmp
mov
fstp
sub
in
add
and
lea
push
stc
pmulhw
add
add
add
add
(bad)
shr
out
cmp
mov
add
(bad)
push
stc
jae
xchg
mov
and
push
mov
lea
sub
add
outs
je
stc
inc
mov
add
out
jne
pop
push
add
push
and
push
test
sub
lods
add
cmps
and
push
add
cmps
lods
mov
push
jae
or
fistp
add
jmp
add
dec
sahf
push
add
dec
or
ins
adc
pop
cmps
sbb
cmp
mov
push
leave
mov
shr
cmp
call
cmps
add
aas
test
sub
mov
clc
in
mov
xor
ins
or
add
hlt
stos
add
gs
test
and
inc
lods
std
inc
sbb
pop
pop
call
xor
mov
inc
push
jg
add
gs
test
lods
mov
(bad)
hlt
inc
push
push
and
push
push
stos
mov
sub
xor
rcpps
xchg
push
add
add
xchg
add
xchg
(bad)
pop
fdivr
mov
mov
push
test
dec
pop
or
cld
in
dec
adc
ins
rcl
call
sbb
das
cmp
xor
rol
call
mov
inc
add
jg
adc
dec
jmp
mov
test
add
dec
or
(bad)
sbb
push
jne
mov
shr
xlat
stos
add
int
mov
cwd
add
pop
mov
daa
rcr
hlt
call
and
mov
and
fist
mov
jle
adc
in
pop
fmul
add
add
ins
adc
add
scas
fdivp
adc
mov
jle
adc
cmps
jo
sti
sub
mov
jbe
sbb
dec
cmp
retf
dec
jge
lahf
in
inc
inc
imul
push
sbb
add
mov
adc
push
pop
or
cld
cmp
mov
cmp
(bad)
call
mov
outs
addr16
cwde
repnz
xor
sbb
or
mov
inc
fimul
push
inc
sbb
inc
sahf
ja
add
push
xor
or
mov
or
fidivr
mov
sbb
mov
cmp
stos
cli
xchg
jns
add
push
dec
add
add
inc
je
sbb
add
push
sub
popa
push
push
lea
dec
adc
test
push
jmp
ins
ins
adc
xchg
out
test
add
mov
ror
cmp
rol
sbb
fisttp
add
sbb
sub
lea
cld
push
sbb
add
mov
mov
sbb
add
mov
fcomp
push
ffree
sti
adc
lea
outs
mov
sbb
jne
push
ja
lea
mov
scas
push
ja
adc
sahf
add
sbb
add
add
ja
or
jb
sub
lock
add
sub
call
pop
sub
js
inc
stos
jne
sahf
btc
mov
cmc
out
data16
add
lea
sar
das
stc
add
pop
add
int
mov
adc
mov
jne
cld
xchg
sub
xor
add
out
add
fsubp
and
add
rcr
inc
cld
dec
test
cmps
cli
cmp
or
dec
dec
clc
xchg
jne
cld
clc
jbe
mov
push
xor
jbe
or
cmp
idiv
je
shl
xlat
push
ds
add
inc
or
add
in
jge
(bad)
mov
rol
pop
leave
in
(bad)
push
lods
adc
leave
ja
inc
mov
in
fild
(bad)
adc
add
lods
pop
leave
movs
cs
div
push
dec
add
cmp
call
push
push
mov
sbb
cmps
inc
push
mov
add
jne
call
pop
imul
xlat
pop
mov
mov
add
addr16
in
or
stos
popf
cmp
jo
fnsave
rol
add
in
loopne
jns
hlt
jo
popf
mov
jmp
sub
or
jns
cmp
or
mov
(bad)
out
shl
hlt
rcl
add
cmp
rep
add
add
mov
gs
or
or
sub
out
lea
sub
or
mov
lea
or
sub
or
mov
or
arpl
inc
pop
xchg
add
addr16
add
push
ins
pop
ret
push
into
mov
inc
inc
rcr
push
stos
mov
sub
add
es
sub
dec
inc
add
push
(bad)
jmp
fs
push
xchg
pop
movs
call
mov
sbb
ins
pop
xlat
stos
lea
sub
ds
add
daa
pop
sbb
jae
daa
pop
or
mov
sub
xchg
sahf
add
ins
inc
or
(bad)
mov
daa
sbb
add
fst
dec
out
lahf
add
out
xlat
inc
add
add
pop
sub
in
cmps
cmp
imul
pop
push
daa
adc
cmp
(bad)
jae
daa
into
jmp
daa
add
sahf
daa
add
test
or
out
js
mov
xchg
add
(bad)
test
je
sbb
outs
or
outs
daa
inc
or
xchg
sub
dec
mov
mov
pop
(bad)
cmp
pushf
add
es
sbb
xchg
movs
jne
fistp
push
or
add
add
movs
mov
pop
test
add
push
add
popf
pop
add
pop
pushf
add
pop
inc
add
fisub
dec
add
pop
sub
xchg
std
cmp
sbb
out
mov
sub
mov
mov
es
sub
shr
lgdtd
data16
out
lods
je
loope
cmp
xor
addr16
test
data16
mov
xlat
jne
and
add
out
sub
mov
les
scas
push
mov
out
sub
dec
outs
push
es
dec
xor
push
fwait
jnp
daa
xor
daa
fwait
or
jb
je
pop
outs
or
lds
add
push
add
push
test
sub
xor
add
and
dec
data16
out
lds
scas
mov
mov
into
add
pop
jo
add
push
add
std
(bad)
je
jmp
mov
sbb
dec
mov
add
push
or
inc
or
xchg
sub
imul
add
lock
scas
mov
mov
es
int
add
fwait
imul
mov
cs
out
adc
add
add
add
pop
cmps
mov
push
(bad)
daa
add
out
mov
mov
es
sub
imul
test
mov
aas
sub
inc
inc
add
jmp
sub
les
push
sbb
(bad)
inc
call
and
inc
data16
pop
jbe
adc
mov
daa
adc
add
add
add
add
add
push
cli
sbb
es
or
imul
mov
daa
push
or
sub
add
fisub
push
add
mov
mov
cmc
cmp
xchg
add
nop
jne
das
ins
or
xchg
and
mov
movs
mov
ins
ret
ret
or
fstp
add
add
not
add
fldcw
inc
inc
call
and
mov
outs
and
in
iret
nop
call
test
xchg
sub
lods
push
mov
and
jne
inc
or
es
sbb
addr16
sbb
xchg
out
sub
pop
hlt
(bad)
jmp
call
add
add
add
add
add
lods
push
jle
adc
xchg
loopne
dec
ds
mov
cmps
inc
ja
cmps
lods
mov
sub
inc
xchg
cwde
sub
adc
pop
shr
aas
xor
call
(bad)
cld
add
rcl
pop
test
and
inc
es
inc
test
inc
adc
lods
lea
inc
jmp
xchg
adc
add
add
cmps
mov
inc
sbb
sbb
or
addr16
push
movs
mov
int
je
push
xchg
inc
add
add
movs
and
sbb
repz
pop
call
or
icebp
jae
psrlq
add
xchg
or
retf
cmc
jle
fwait
test
jmp
add
test
js
test
mov
and
aas
mov
setnp
add
sub
es
add
push
adc
cmp
push
add
dec
or
pop
adc
jmp
mov
jge
jle
fld
add
add
sbb
pop
dec
or
imul
outs
rcl
retf
lods
mov
aas
push
mov
lods
mov
cmp
pop
dec
add
bound
pop
into
mov
mov
cli
mov
and
sbb
(bad)
jmp
inc
rol
test
jne
add
add
add
mov
movs
cmp
or
jns
(bad)
pushf
adc
inc
fisubr
inc
add
push
dec
or
xchg
inc
add
test
inc
add
mov
js
push
mov
cmp
jne
int
push
out
aas
inc
daa
out
inc
inc
sbb
add
add
mov
dec
cmp
xchg
mov
mov
mov
cmp
(bad)
lods
add
add
add
(bad)
xor
out
adc
or
mov
cwde
outs
inc
add
add
cmps
cmp
cmp
add
cmp
es
inc
add
ror
add
jmp
inc
stos
mov
inc
add
mov
mov
or
popa
imul
and
aaa
int
cmp
jne
popf
outs
or
mov
mov
call
mov
cmp
mov
stos
mov
mov
pop
test
sbb
add
sub
fwait
jne
call
cmc
cli
add
add
cmp
sbb
jne
out
ss
sbb
loopne
inc
mov
dec
adc
loope
dec
call
adc
mov
in
jo
mov
push
or
loope
jp
mov
add
ja
mov
cmp
popf
lahf
sbb
ins
lods
jne
scas
outs
add
and
push
add
mov
add
scas
jmp
add
(bad)
outs
or
and
add
or
in
mov
aaa
push
or
mov
cs
(bad)
mov
mov
cmp
sbb
out
dec
call
nop
jne
(bad)
or
cmp
mov
movs
ret
xchg
dec
call
push
sbb
cmp
add
add
dec
hlt
jae
lahf
loope
dec
cs
leave
je
cmp
(bad)
ins
add
adc
call
push
push
mov
(bad)
lods
and
mov
out
cmp
pop
vshufps
add
sbb
mov
inc
jne
cmp
call
add
add
add
add
lods
push
sbb
push
xchg
add
adc
(bad)
call
das
daa
add
aaa
je
(bad)
je
int
sbb
push
mov
add
inc
cs
or
mov
popf
outs
adc
sbb
fsubr
call
add
ins
sub
push
ins
adc
pop
mov
add
jo
mov
es
xchg
mov
mov
inc
call
mov
das
jnp
jle
loop
mov
lods
add
frstor
je
mov
call
imul
aas
xor
mov
xor
popf
cmps
adc
add
pop
mov
aam
mov
lods
add
popf
add
adc
rol
mov
mov
mov
ds
add
in
or
in
retf
mov
sub
(bad)
inc
cmp
lea
sbb
xchg
jbe
(bad)
dec
fadd
call
ffree
or
xor
inc
add
add
cs
ds
jmp
addr16
or
mov
push
lock
es
ret
adc
stos
push
xor
es
(bad)
mov
lock
fiadd
(bad)
mov
cmp
mov
jecxz
call
mov
(bad)
aam
cmp
(bad)
call
add
fdivrp
call
and
jle
adc
cmps
cmp
adc
(bad)
lock
(bad)
fnstsw
mov
das
gs
push
enter
inc
das
jmp
call
push
enter
and
dec
cmp
sbb
leave
data16
and
mov
add
inc
add
cs
inc
xlat
test
mov
and
mov
(bad)
inc
or
cmps
test
gs
sub
aam
(bad)
call
xchg
cld
add
mov
test
call
push
ret
add
sti
dec
inc
mov
ret
add
mov
push
js
fmul
inc
(bad)
push
pop
pop
test
mov
je
add
(bad)
jmp
xlat
inc
ds
icebp
jnp
sbb
cwde
lahf
pop
pop
xchg
pushf
mov
pop
cmps
xor
and
jmp
in
jne
cmp
add
cmps
sub
adc
add
ret
sub
pop
movs
mov
mov
jmp
aad
add
test
call
and
push
ror
inc
push
push
in
mov
cmp
xchg
cmp
or
push
stos
add
xchg
in
or
jmp
sbb
mov
popa
adc
sbb
add
jge
dec
(bad)
jmp
mov
inc
je
cmps
scas
pop
ret
push
mov
test
sbb
inc
clc
sub
jne
pop
rcl
or
dec
fmul
out
push
scas
add
out
pop
add
in
push
fnstsw
mov
clc
int3
jae
push
cmc
jb
push
push
jb
push
std
scas
add
push
add
push
shl
cmc
jae
das
enter
xor
jge
setne
scas
push
mov
mov
cwde
push
mov
out
lock
sbb
call
jmp
sbb
adc
mov
inc
add
mov
mov
ds
out
inc
inc
pop
add
xor
inc
cmp
shl
inc
adc
loop
cmp
mov
add
fwait
pop
jbe
lods
mov
push
scas
sti
push
popf
and
mov
push
mov
cmp
sub
add
adc
push
call
out
shl
retf
adc
jmp
les
stc
data16
call
add
sub
pushf
ret
movs
mov
call
fs
or
xor
test
(bad)
sbb
jb
inc
add
scas
lea
push
not
xor
sbb
out
xor
popa
movs
and
sub
cmp
sub
mov
pusha
or
int
jae
scas
repz
sub
jbe
data16
add
in
push
ins
out
mov
cmps
lds
mov
aad
clc
into
mov
jmp
and
std
jne
add
dec
push
sbb
xor
sbb
mov
or
xor
mov
xchg
pop
pop
adc
add
je
mov
test
add
loop
mov
add
sub
xor
sub
mov
inc
pop
add
lods
dec
sub
out
sub
or
inc
jge
or
mov
inc
in
jmp
adc
(bad)
in
push
mov
pop
push
add
mov
test
in
retf
mov
add
or
xor
pop
ret
push
(bad)
xor
packuswb
lock
and
test
mov
std
jne
inc
pop
int3
mov
stos
add
sbb
mov
push
inc
fimul
out
mov
pop
ins
or
mov
aaa
cmp
scas
das
mov
(bad)
push
call
add
add
add
xor
(bad)
call
or
and
pop
jne
(bad)
fild
mov
int3
call
stos
cmp
mov
cmp
stos
mov
inc
cmp
push
stos
ret
push
jno
mov
test
add
cmp
pop
icebp
mov
jmp
scas
xchg
in
lahf
ins
aam
add
xor
jne
scas
cmp
sub
push
mov
xor
nop
inc
cmp
out
add
nop
mov
daa
(bad)
sbb
push
mov
aas
or
inc
push
int3
xor
add
sbb
jne
cld
test
add
stos
lea
cmp
inc
daa
mov
dec
or
add
push
mov
add
in
adc
outs
adc
mov
jmp
mov
add
movs
fs
retf
jl
movs
mov
add
pushf
pop
rep
sti
jl
mov
jne
sti
jl
movs
ins
rcl
int
jo
pop
jno
pop
mov
pop
mov
enter
enter
xor
repnz
add
sub
inc
cmps
aaa
hlt
add
sahf
push
pop
icebp
call
sbb
mov
jo
ret
mov
(bad)
pop
sub
inc
es
add
mov
inc
cs
je
mov
(bad)
repz
mov
test
sbb
push
pop
icebp
call
add
cdq
scas
clc
xlat
sbb
ret
in
add
mov
add
(bad)
call
sub
push
jge
jmp
scas
and
add
mov
loopne
outs
add
sub
call
ret
push
fiadd
(bad)
or
add
add
add
daa
scas
mov
scas
mov
add
movs
mov
add
loop
push
mov
inc
add
jb
inc
(bad)
call
xchg
lods
add
xor
adc
(bad)
scas
test
je
clc
ss
repz
scas
pop
mov
pop
ret
push
mov
push
dec
or
fcomp
xlat
pop
mov
mov
add
xor
mov
nop
jmp
push
in
inc
push
mov
sbb
in
jmp
xor
(bad)
call
ficom
aas
add
pop
push
(bad)
pop
sub
add
fimul
inc
push
out
push
mov
push
push
icebp
call
cdq
fsubr
xlat
sub
ret
xchg
add
add
add
add
loop
mov
mov
xor
xlat
ds
xlat
jo
jne
sti
mov
add
out
pop
jge
and
jo
push
push
into
(bad)
cwde
leave
or
les
xor
mov
out
push
mov
(bad)
aaa
inc
jle
push
push
popf
mov
(bad)
dec
inc
shl
into
dec
jmp
add
test
out
jbe
ds
out
add
push
(bad)
xchg
add
and
jmp
shl
or
sbb
setbe
pop
jbe
call
sbb
call
or
adc
pop
push
inc
add
lods
add
add
adc
in
retf
cmp
ins
add
and
cmps
or
pusha
push
push
add
fwait
call
sbb
ret
push
mov
jl
enter
test
les
jb
push
jbe
cmp
pop
add
add
push
mov
adc
inc
sahf
fdivr
call
add
push
dec
or
daa
(bad)
pop
mov
or
frstor
test
aad
call
frstor
jb
int
add
and
icebp
adc
xlat
cwde
inc
add
cmps
call
mov
ret
mov
xor
cld
sub
call
mov
das
js
add
(bad)
loopne
mov
scas
jmp
xor
add
(bad)
add
inc
enter
inc
daa
mov
add
cwde
fisub
test
and
call
or
data16
aad
adc
daa
add
pop
jns
add
sub
mov
mov
add
aad
push
mov
(bad)
xchg
or
sub
xchg
(bad)
xchg
std
shr
cmps
jnp
call
mov
cs
(bad)
(bad)
std
push
inc
dec
loope
sub
and
cmps
(bad)
dec
sub
mov
mov
add
cld
mov
out
cmps
add
push
fisttp
add
mov
jne
cmc
sub
dec
in
cli
add
add
test
dec
or
fcmove
add
push
mov
(bad)
int
mov
dec
xchg
pop
mov
mov
daa
pop
mov
lods
lea
add
mov
daa
inc
sub
sub
add
add
add
jmp
imul
xchg
sub
or
(bad)
jmp
inc
mov
and
enter
cmps
mov
or
push
push
dec
dec
inc
add
pop
pop
in
add
pusha
call
(bad)
call
mov
pop
in
push
test
or
add
xor
add
test
retf
add
xor
ins
inc
cmp
shl
sti
repz
sub
cmps
and
ret
sti
and
xor
push
mov
mov
imul
add
retf
pop
(bad)
call
imul
movs
mov
dec
add
bound
push
mov
add
inc
inc
add
jmp
cmp
addr16
add
sub
popf
popa
sub
movs
push
add
and
lea
leave
inc
xchg
cmp
inc
add
pop
out
adc
cwde
xchg
dec
in
cmp
push
jae
sbb
stos
cmp
fadd
mov
inc
add
add
adc
mov
shrd
mov
sub
jp
ret
mov
push
clc
lea
lea
lea
clc
out
push
push
inc
cdq
cmps
cmp
jbe
lods
out
adc
imul
inc
sahf
daa
clc
mov
inc
(bad)
push
push
test
retf
jge
xchg
jge
and
add
push
or
es
aam
rol
sbb
mov
or
push
stos
push
lea
push
call
sbb
mov
cs
or
add
dec
xchg
push
shl
or
jo
(bad)
jmp
add
mov
(bad)
jmp
fs
es
or
imul
scas
add
mov
inc
add
out
sub
data16
sub
push
mov
cli
push
mov
push
cmp
fimul
mov
mov
xchg
inc
or
test
jno
lods
add
add
add
add
lods
mov
ror
mov
and
adc
fwait
mov
(bad)
jae
and
lods
push
mov
sub
sub
int
ja
scas
lods
jmp
push
and
adc
cwde
lods
iret
sub
out
cmp
stos
mov
dec
ins
call
mov
add
mov
pop
or
stos
mov
sub
or
mov
add
jbe
stc
or
add
and
push
lea
dec
sub
jle
push
popf
in
lea
xchg
lea
stc
mov
inc
inc
(bad)
mov
sub
or
rcl
or
add
lods
mov
aas
add
fisub
clc
or
mov
aas
add
(bad)
pop
push
or
ins
lea
stc
dec
mov
mov
mov
jle
(bad)
inc
dec
add
iret
mov
daa
clc
or
lods
mov
aas
add
pop
fadd
mov
jmp
shl
add
add
add
add
mov
(bad)
lea
dec
push
lods
in
push
lea
fimul
jmp
push
mov
les
push
dec
add
cmps
lea
es
or
add
rcr
push
cld
lods
imul
mov
clc
dec
mov
movs
add
adc
outs
push
sbb
test
or
movs
ja
in
or
cmp
dec
mov
inc
pop
cmp
in
or
cmp
in
mov
inc
pop
cmp
mov
mov
sub
dec
jbe
mov
lea
xor
(bad)
cmp
scas
mov
call
inc
sbb
or
ds
add
in
dec
add
add
or
cmp
ins
mov
push
stos
aaa
push
adc
fild
mov
mov
xor
idiv
(bad)
jmp
xchg
pop
mov
mov
leave
fadd
mov
icebp
add
int
add
push
xor
lahf
sti
push
mov
lea
loope
into
dec
jne
mov
add
lea
xor
(bad)
cmp
scas
or
call
inc
sbb
or
ds
add
in
push
add
dec
or
cmp
ins
mov
dec
stos
ss
adc
inc
add
adc
mov
lahf
jmp
sbb
add
gs
add
dec
or
add
inc
add
scas
lea
cmp
int
or
imul
push
xchg
inc
cld
push
clc
ret
call
ins
or
sahf
mov
add
in
push
add
dec
or
aaa
dec
add
scas
lea
cmp
pop
hlt
cli
add
cmp
movs
je
(bad)
div
dec
adc
add
ss
adc
imul
movs
ins
(bad)
dec
mov
stc
pop
mov
jmp
repz
add
pop
mov
jmp
shr
add
push
scas
xlat
mov
ss
dec
in
cli
sub
xchg
dec
cld
mov
fld
push
(bad)
cmc
repnz
mov
add
adc
add
ss
call
icebp
ss
pop
lahf
ins
or
or
in
push
dec
inc
cmp
fst
cld
lods
push
xor
push
call
and
mov
in
inc
loopne
ret
push
push
fld
add
inc
and
add
repnz
and
jle
ss
call
add
add
add
push
retf
add
add
add
es
ret
ja
pop
mov
xor
(bad)
das
inc
add
push
bound
lods
mov
xor
sbb
or
sub
inc
and
pop
ret
or
lock
dec
lahf
lods
add
call
lods
pop
pop
gs
cli
add
jle
inc
add
xchg
push
imul
mov
xor
(bad)
call
out
add
fstp
call
rcr
ss
mov
je
push
je
jmp
lods
call
(bad)
jmp
push
dec
leave
inc
inc
lea
dec
xchg
idiv
xchg
das
mov
out
add
add
movs
jb
call
cld
add
inc
jmp
mov
scas
cs
cmps
stos
add
in
push
add
aas
shl
jmp
add
pop
xor
push
xor
push
xor
data16
stos
add
in
(bad)
dec
jb
mov
sbb
push
push
fimul
add
add
mov
jmp
stos
add
mov
call
pop
int3
stos
push
lea
add
out
loopne
mov
cs
cmps
stos
add
je
(bad)
dec
push
lea
jne
add
cmp
inc
sub
test
stos
add
sbb
(bad)
mov
inc
add
push
bound
add
add
add
add
cmp
jne
ja
out
sbb
jmp
out
push
mov
push
dec
call
push
fisttp
shl
imul
aam
(bad)
jmp
test
add
ss
in
test
sbb
clc
imul
add
add
call
call
inc
add
dec
jge
mov
imul
in
(bad)
call
int3
cli
add
jmp
xchg
(bad)
(bad)
call
jmp
imul
push
(bad)
push
(bad)
imul
call
(bad)
outs
(bad)
sub
call
add
jae
mov
(bad)
mov
lea
add
out
inc
cld
fisubr
mov
ds
mov
xchg
mov
(bad)
fist
mov
sub
add
ins
add
data16
cld
pop
push
lea
jbe
mov
data16
(bad)
fwait
cmp
(bad)
jmp
add
mov
lea
add
push
jbe
cld
push
push
mov
mov
pop
xor
mov
outs
xor
mov
dec
xor
lea
test
xchg
scas
add
pop
add
cmps
inc
cmp
add
cld
cmp
xchg
scas
mov
push
enter
push
dec
push
inc
xchg
scas
add
push
inc
xchg
add
es
xchg
scas
add
daa
scas
ret
fldcw
sub
lea
addr16
mov
mov
dec
(bad)
pop
xchg
fimul
cmp
or
fsubp
add
xchg
push
call
fisubr
mov
xchg
jmp
jg
jmp
inc
inc
sbb
outs
je
dec
inc
inc
sbb
outs
jne
fcomip
push
cmp
inc
jle
cmp
push
cmp
push
std
xor
ret
es
mov
xchg
sti
ja
repz
sub
add
outs
push
mov
add
mov
data16
out
lods
pop
pop
movs
in
mov
dec
add
add
jecxz
call
dec
mov
cmp
sbb
xor
das
stos
mov
inc
jne
sbb
shr
cmc
cmc
stc
(bad)
or
push
ret
je
popa
inc
add
lods
cmp
call
add
add
add
add
lods
mov
inc
dec
add
dec
mul
loop
push
mov
inc
dec
or
ins
lea
daa
push
push
jne
aaa
push
jne
pop
add
call
push
jne
mov
popf
mov
pop
push
push
stos
add
into
lods
mov
sbb
lods
xor
add
lods
add
add
clc
inc
lock
mov
lods
add
outs
push
mov
inc
inc
adc
xor
test
test
xchg
in
stos
add
jp
inc
or
imul
movs
mov
out
test
call
mov
les
fld
xchg
ret
je
inc
cmp
aam
ror
add
add
add
inc
pop
cld
pop
mov
mov
pushf
sub
adc
stos
cdq
test
xchg
cmp
sub
add
gs
add
jecxz
out
js
(bad)
(bad)
in
repnz
inc
push
dec
push
js
lea
test
fwait
vpcmpeqw
(bad)
jne
add
aas
dec
in
stos
sbb
es
adc
ds
call
movs
sar
retf
ret
fisubr
push
call
jb
mov
dec
jmp
sub
mov
cmps
stos
add
scas
mov
add
sbb
int
call
addr16
fucomp
or
add
add
add
es
ud0
stos
add
cwde
(bad)
cmp
and
and
and
call
pop
aad
add
pop
or
repnz
jbe
bound
push
stos
mov
pop
lods
mov
ds
pop
xchg
daa
add
repnz
popa
push
jmp
mov
add
fisttp
sub
mov
and
icebp
cmc
stc
iret
in
push
jb
popa
xor
xchg
test
mov
pop
adc
add
push
sub
loop
push
fisttp
dec
push
cmp
jne
sbb
and
inc
adc
jo
and
out
(bad)
lods
imul
cdq
aas
ds
cmp
add
push
(bad)
fstp
arpl
mov
inc
(bad)
pop
sbb
mov
mov
jmp
pop
movs
add
ja
add
cmp
sbb
pop
inc
pop
xor
xchg
mov
call
xor
push
xor
push
pop
push
in
mov
ret
fucomp
push
sub
add
mov
jb
pop
mov
es
inc
xor
mov
les
inc
push
xor
push
pop
aas
add
scas
push
dec
push
jecxz
(bad)
out
repnz
mov
ret
pop
scas
test
jmp
out
outs
mov
mov
cmp
jmp
add
sar
add
add
enter
adc
jnp
mov
shl
and
push
scas
mov
(bad)
add
mov
add
mov
mov
lods
call
mov
ret
mov
shl
cld
call
fwait
jno
add
mov
add
mov
xchg
aam
call
sbb
add
scas
mov
movs
push
xor
out
push
add
out
outs
push
push
sbb
lods
call
cmp
mov
imul
aaa
jle
lods
sahf
dec
lea
mov
jecxz
push
jmp
sti
ja
repz
mov
add
mov
lock
pop
ins
outs
push
mov
das
in
adc
add
aaa
pop
or
sti
push
sub
push
cdq
aas
dec
stc
test
push
jmp
jae
imul
add
call
push
test
inc
je
outs
cmc
out
cmps
ss
adc
in
cli
push
sub
jg
inc
cld
xchg
leave
adc
mov
lods
add
(bad)
or
add
and
mov
aaa
fisttp
imul
xor
ss
cld
jge
push
add
sahf
test
sbb
mov
lods
pop
xor
pop
retf
jmp
call
inc
out
icebp
xchg
xacquire
in
jae
adc
jmp
shr
or
add
cmps
xor
(bad)
dec
xor
pop
cli
push
mov
popf
mov
inc
outs
mov
aaa
shl
adc
add
push
push
jbe
movs
loop
data16
push
lods
and
and
ret
push
popf
pusha
push
push
in
lea
push
push
push
jne
mov
sar
push
push
rcl
add
out
mov
aam
push
push
js
add
mov
leave
movs
sar
pop
pusha
sub
fcom
inc
mov
xor
adc
stos
add
test
mov
inc
mov
pop
call
mov
movs
cmp
(bad)
add
inc
inc
add
fucom
adc
fwait
dec
mov
cdq
add
jmp
dec
jne
popf
pop
push
dec
jne
push
fiadd
add
sub
mov
out
call
(bad)
int3
out
mov
pop
mov
pop
aam
test
sbb
add
imul
add
jno
sbb
cmp
mov
mov
lea
dec
ror
jae
inc
mov
add
xchg
stos
mov
jmp
jo
in
xchg
lods
push
mov
xlat
dec
add
into
stos
jbe
and
add
into
call
jg
add
stos
add
scas
jecxz
mov
xchg
sbb
pop
in
inc
or
push
adc
scas
add
inc
aam
call
pop
das
data16
data16
add
cs
outs
push
mov
push
push
aad
lea
or
jne
dec
jne
mov
cmps
push
inc
jmp
ret
addr16
sbb
add
out
mov
inc
sub
or
not
push
and
sub
cmp
cvtps2pi
jne
call
add
(bad)
sar
jmp
rol
fisubr
add
fcmovb
and
outs
dec
jne
mov
movs
push
call
push
fdiv
call
sub
sub
jne
dec
mov
xchg
mov
shr
js
leave
mov
mov
add
dec
cmps
mov
cmp
fmul
jae
dec
nop
in
mov
inc
push
daa
js
popa
sub
pop
pop
push
mov
ja
push
xor
and
in
dec
jne
mov
mov
jne
dec
mov
inc
or
outs
and
call
ret
push
mov
sub
jbe
add
hlt
mov
and
mov
out
rcr
mov
out
rol
mov
in
clc
mov
in
pushf
inc
cmp
test
or
xchg
push
push
shr
and
(bad)
or
es
xor
out
jb
add
test
cmp
scas
pop
pop
pop
inc
pop
ret
add
pop
jmp
test
mov
inc
ficom
dec
stos
xchg
enter
ror
(bad)
(bad)
imul
push
dec
sbb
stos
and
ret
push
or
inc
or
test
imul
jne
sub
into
add
mov
out
push
popf
in
mov
daa
dec
or
adc
mov
fwait
popa
jne
gs
or
cmps
les
and
mov
imul
mov
push
mov
mov
test
push
add
jae
adc
add
sbb
popa
cmp
add
and
lods
add
lea
add
jae
retf
dec
nop
add
data16
mov
(bad)
push
cdq
mov
cdq
(bad)
inc
das
movs
sub
push
inc
xchg
enter
lods
mov
(bad)
mov
scas
(bad)
push
ds
inc
dec
or
push
jne
test
push
add
add
(bad)
lods
call
mov
xchg
(bad)
inc
lds
call
mov
(bad)
call
adc
and
fucomp
push
sub
(bad)
push
cdq
sbb
leave
mov
shr
push
(bad)
call
fimul
call
pop
test
push
jmp
imul
add
push
fadd
sahf
and
(bad)
ror
mov
mov
add
mov
pop
xor
mov
push
(bad)
(bad)
in
bound
sti
out
adc
test
mov
mov
and
xor
push
dec
dec
test
sub
push
jmp
inc
lea
inc
inc
add
push
push
out
fld
push
repnz
push
(bad)
cmp
add
and
sub
push
stc
popf
and
jmp
movs
add
cmp
and
test
mov
push
mov
and
jbe
outs
into
adc
(bad)
ins
inc
cld
movs
pop
dec
adc
mov
push
mov
pop
das
pop
push
je
sub
inc
clc
out
popf
push
dec
jbe
jbe
repz
stos
mov
push
or
push
rcl
mov
in
out
jmp
popf
sub
mov
daa
rcl
adc
push
(bad)
jmp
push
aas
out
std
inc
test
add
inc
push
call
adc
add
push
cld
fld
push
push
push
rep
push
sbb
test
mov
and
cmp
sub
mov
pop
dec
inc
xor
push
sar
jns
data16
popf
sub
(bad)
jmp
mov
xor
push
add
popf
add
ret
sub
(bad)
(bad)
(bad)
push
(bad)
push
pop
add
inc
cmp
push
push
jmp
call
xchg
mov
push
pop
adc
enter
(bad)
imul
add
out
test
shr
and
hlt
scas
mov
jmp
add
pusha
out
and
add
mov
in
push
fisttp
jmp
das
(bad)
fs
mov
cmp
rol
out
add
mov
pop
push
ins
(bad)
out
std
add
lea
mov
inc
or
test
add
jmp
add
out
enter
fldpi
sar
inc
adc
add
std
stc
mov
inc
adc
out
xchg
mov
idiv
sbb
pop
add
pop
dec
add
addr16
je
add
ret
xlat
enter
add
cmp
(bad)
fidiv
cmp
mov
sbb
scas
xchg
popf
ins
push
sub
mov
add
(bad)
cli
idiv
jmp
std
call
movs
or
inc
push
mov
add
mov
test
add
fs
scas
add
not
jne
add
(bad)
jmp
sahf
mov
scas
stc
verr
test
add
mov
mov
add
adc
add
add
(bad)
(bad)
add
es
push
push
mov
dec
adc
inc
adc
aaa
icebp
inc
fwait
stc
je
mov
push
(bad)
inc
(bad)
ja
adc
push
mov
std
jmp
lods
add
mov
add
cmp
das
jnp
mov
mov
pushf
add
cmps
lods
add
mov
xor
test
(bad)
dec
hlt
add
add
ja
ja
and
xor
pop
cmp
std
loope
jg
popf
sub
dec
pop
xchg
mov
add
xchg
leave
fs
lods
add
xchg
mov
out
inc
add
jmp
std
inc
add
lods
push
push
call
lods
mov
aad
adc
ss
adc
add
cmp
cmp
add
xor
cmp
daa
cld
std
(bad)
mov
add
and
push
adc
call
sbb
add
imul
lea
add
add
leave
addr16
enter
push
call
(bad)
pop
cli
add
fwait
mov
xchg
pushf
mov
int
jne
push
pop
cmp
pushf
stos
add
add
adc
add
jne
das
mov
jmp
or
sti
mov
mov
add
add
push
mov
stos
add
mov
std
(bad)
mov
mov
test
adc
std
push
(bad)
jmp
inc
cld
sbb
push
push
mov
popf
(bad)
mov
movs
std
call
add
jmp
fwait
mov
daa
test
cli
std
call
dec
je
pop
mov
add
movs
std
inc
test
jmp
stos
add
pop
cmp
std
push
sti
jae
sar
call
call
and
(bad)
push
int
sub
xor
(bad)
imul
popa
out
fild
or
cmps
mov
push
stos
jno
mov
add
jl
jne
mov
(bad)
push
call
xchg
gs
or
icebp
jmp
es
call
adc
mov
rol
push
mov
scas
fwait
repz
pop
or
jp
test
jge
xor
add
movs
movs
sub
mov
add
clc
mov
int
push
mov
ret
cmp
pop
test
mov
repnz
jp
call
xchg
jns
cmp
add
cdq
loopne
sub
mov
clc
cmp
and
call
sbb
rol
int
pop
cdq
idiv
jne
add
sub
add
(bad)
mov
call
frstor
push
and
(bad)
fwait
or
call
mov
mov
jo
sar
(bad)
push
xchg
jns
(bad)
pop
or
call
mov
sar
mov
add
je
mov
or
(bad)
popa
std
std
jae
pop
retf
xlat
cmps
scas
push
mov
cmps
imul
xor
movs
test
mov
add
scas
cmp
ins
out
fwait
mov
enter
(bad)
jmp
mov
jg
popf
je
lea
imul
add
(bad)
loopne
add
push
call
mov
fadd
add
pop
push
call
ins
call
and
and
or
jmp
int
repz
push
push
mov
daa
dec
adc
push
push
call
fdiv
add
addr16
lea
add
mov
sbb
xor
movs
(bad)
rcl
add
mul
xacquire
test
push
mov
pop
or
pop
scas
add
sub
mov
push
out
cmc
inc
repz
jne
pop
jae
sbb
shl
inc
adc
out
and
lahf
std
std
(bad)
cld
lods
push
add
jg
(bad)
inc
outs
jmp
lods
add
or
jae
push
fucom
call
push
inc
jns
mov
push
add
es
adc
jns
pop
mov
test
lea
jmp
sbb
cmp
sbb
mov
add
mov
add
add
out
push
call
xchg
cdq
(bad)
imul
lods
call
push
push
pusha
(bad)
call
and
push
scas
call
inc
mov
pop
inc
mov
add
in
data16
int3
push
fld
sub
daa
enter
(bad)
imul
dec
call
mov
add
icebp
xor
sbb
cmp
push
pop
dec
hlt
push
xlat
scas
call
test
out
lods
lods
add
cmp
mov
mov
pop
mov
dec
inc
cmp
lods
push
lea
hlt
mov
and
xchg
mov
je
dec
pop
cmp
stos
xchg
dec
inc
cmp
stos
mov
add
outs
imul
dec
ss
(bad)
fucompp
je
not
inc
push
hlt
jo
iret
ins
cmp
add
push
stos
lahf
pop
and
mov
lahf
pop
inc
ins
inc
push
stos
xchg
(bad)
push
cmp
and
not
inc
push
and
mov
imul
aad
cmp
fisub
inc
cld
add
ds
add
(bad)
repz
push
ins
out
push
test
add
and
mov
mov
xchg
jb
or
test
add
out
leave
adc
(bad)
imul
call
mov
pop
jl
test
imul
or
(bad)
jmp
sbb
jnp
call
add
add
add
clc
ds
jmp
jnp
(bad)
frstpm(287
jmp
test
(bad)
call
call
ret
push
dec
inc
mov
out
adc
(bad)
test
jp
cmps
ins
sub
cmc
inc
add
gs
dec
aaa
(bad)
jmp
ins
rcl
push
stos
call
mov
and
lods
xchg
stos
jmp
add
add
push
mov
jne
stc
add
mov
(bad)
imul
pushf
mov
cli
pop
mov
jle
push
mov
add
jmp
or
pop
push
lea
mov
pop
bnd
xchg
inc
add
add
pop
jbe
test
add
pushf
mov
stc
or
sub
stc
add
loop
inc
add
add
inc
add
pushf
mov
jge
mov
or
fmul
add
inc
cmp
mov
pop
pop
xchg
test
mov
sbb
jmp
sbb
popf
aad
add
xor
es
cmc
mov
gs
jb
mov
cwde
jne
add
pop
add
sbb
inc
add
add
push
jbe
pop
cmps
mov
push
adc
stos
sbb
ret
cmp
fwait
jne
das
outs
add
mov
xchg
(bad)
jmp
mov
push
dec
inc
aad
inc
cmp
jle
mov
pop
push
repz
xrelease
jp
add
daa
movs
test
es
add
shl
add
cs
es
mov
pop
call
push
or
(bad)
je
fdivr
inc
xlat
pop
iret
(bad)
sbb
out
mov
add
push
sbb
(bad)
je
sbb
or
add
pop
inc
or
imul
inc
sahf
cs
cmps
jge
mov
add
div
data16
mov
adc
inc
out
jno
(bad)
test
add
sbb
add
xchg
add
idiv
(bad)
jno
je
fdivr
inc
pop
pop
iret
(bad)
push
mov
add
lods
jae
pop
jno
or
add
push
add
scas
xlat
aas
inc
out
dec
add
add
add
call
push
(bad)
cmp
call
(bad)
ror
sbb
inc
xchg
xlat
aas
inc
xchg
cmc
mov
push
fcom
mov
lods
mov
fstp
mov
call
(bad)
cdq
jno
lea
lods
add
das
rol
push
cs
rcr
inc
add
add
adc
inc
or
push
mov
pop
cmp
adc
mov
cdq
out
inc
mov
ret
push
outs
out
add
mov
je
pop
mov
retf
adc
(bad)
ficom
adc
ins
add
pop
inc
ret
mov
push
pop
or
gs
add
add
std
jae
imul
cli
call
popf
stos
mov
hlt
leave
add
lods
push
call
cmps
jb
add
fbstp
pop
pop
dec
out
add
pop
imul
not
push
or
jle
pop
lods
jae
pop
push
add
ficom
pop
mov
xchg
jne
pop
outs
add
mov
push
add
add
scas
jmp
mov
daa
add
fld
(bad)
je
sub
fld
mov
pop
imul
add
mov
dec
or
cmps
xchg
enter
sub
(bad)
jo
ret
lds
add
add
add
add
push
jb
pop
ds
(bad)
add
(bad)
mov
mov
sbb
movs
daa
leave
mov
rol
mov
scas
cmp
push
or
call
inc
pop
daa
(bad)
pop
adc
jle
fdivr
push
mov
call
not
push
or
icebp
add
add
stos
sub
aas
lea
je
daa
inc
or
out
xchg
mov
jmp
mov
add
push
call
jge
push
jne
mov
pop
movs
jne
in
pop
jae
rcl
stos
xchg
push
cli
dec
cmps
std
jne
jmp
cmps
lds
add
ret
jle
in
inc
adc
add
cmp
lahf
(bad)
test
and
sub
stos
mov
sub
and
lods
sbb
cdq
stos
add
int
push
jne
mov
pop
push
jl
in
jge
push
push
cmps
rol
mov
xchg
adc
mov
leave
fcom
add
(bad)
mov
les
jmp
adc
add
jmp
lea
shr
ds
add
mov
test
ret
push
sbb
call
mov
and
sub
push
das
call
test
dec
ss
add
mov
dec
adc
inc
or
shl
ret
ret
jmp
jmp
push
push
jne
inc
(bad)
imul
scas
call
ret
cld
cmps
mov
out
rol
sbb
rol
mov
cmp
push
push
mov
scas
add
xchg
mov
add
add
enterw
fucomp
or
movs
out
adc
(bad)
fs
scas
add
and
add
sub
add
(bad)
mov
push
scas
shr
sar
test
and
cs
out
xor
into
(bad)
iret
add
das
inc
or
ret
add
sbb
sar
sbb
cmp
push
icebp
push
inc
(bad)
out
les
add
call
mov
(bad)
scas
scas
and
mov
cmp
sbb
shl
dec
cmp
xchg
scas
mov
ja
mov
lds
dec
add
jle
inc
ror
cmp
add
(bad)
jb
xchg
ror
push
pop
(bad)
data16
popa
ror
jo
lds
adc
add
and
lea
cmps
lods
dec
call
adc
test
cmp
add
xchg
ss
and
push
mov
stos
add
xchg
mov
push
lods
add
test
shl
loope
add
push
lods
mov
ja
push
scas
mov
test
std
add
lods
dec
call
ins
sbb
(bad)
lods
xchg
pop
cs
xchg
stos
add
sbb
lods
xchg
adc
and
xchg
dec
(bad)
call
lods
add
add
add
add
in
add
push
jnp
mov
sar
mov
je
add
xchg
lods
add
es
pop
daa
lods
add
push
and
mov
jno
mov
pop
add
out
add
ret
sbb
and
and
pop
xchg
ja
in
add
idiv
push
sbb
daa
loopne
xchg
stos
mov
and
adc
jno
stc
movd
test
pop
or
push
stos
out
push
stos
add
xor
pop
neg
pop
leave
cmp
jne
popf
imul
add
jp
add
outs
jo
ja
ret
cmp
mov
add
add
cdq
pop
dec
shr
or
test
sbb
mov
jg
push
xor
lea
mov
aas
leave
push
mov
push
fcom
scas
add
xchg
jno
jmp
mov
mov
sub
jne
dec
int3
jmp
adc
jne
ds
push
jno
inc
inc
jg
or
jge
pop
or
xor
scas
arpl
mov
xchg
pop
je
ret
mov
mov
dec
or
pop
push
call
outs
imul
test
inc
add
outs
cmps
in
cmps
push
inc
or
ins
push
mov
fld
rcr
push
call
add
add
add
xor
loopne
add
cmp
push
mov
push
mov
mov
pminub
add
data16
(bad)
sub
or
push
mov
mov
mov
add
mov
(bad)
push
sub
add
fmul
add
mov
dec
adc
inc
adc
xchg
mov
cmp
je
ja
(bad)
jne
add
pop
outs
or
or
add
lds
jle
out
inc
outs
or
or
or
adc
pop
or
(bad)
mov
cmp
test
dec
cli
ja
cmp
outs
clc
add
mov
ja
mov
mov
pusha
out
add
adc
add
(bad)
jne
popf
stc
jmp
test
adc
fstp
std
jmp
mov
loope
mov
pop
pop
outs
push
sub
mov
leave
(bad)
mov
xchg
ss
adc
out
je
mov
jmp
les
sbb
mov
add
mov
add
mov
(bad)
out
int3
add
(bad)
fwait
mov
fs
es
(bad)
hlt
ret
retf
stos
add
in
add
pop
mov
scas
mov
cmp
cmp
cmp
add
(bad)
ds
in
(bad)
out
push
mov
in
sbb
js
mov
add
cmp
call
sbb
mov
std
mov
mov
(bad)
test
inc
ret
mov
xor
(bad)
call
aaa
inc
clc
fucomi
je
pop
ins
out
je
(bad)
mov
es
mov
mov
sub
adc
loop
add
imul
scas
sbb
inc
add
jbe
and
leave
xchg
pop
mov
push
rcr
clc
jp
clc
pop
arpl
(bad)
jmp
call
mov
mov
jne
(bad)
inc
mov
je
jle
(bad)
jmp
pop
out
call
fisttp
test
ds
add
ss
hlt
dec
dec
cli
je
ret
add
loope
push
call
outs
push
ss
call
lahf
pop
push
pop
and
sub
mov
out
int
add
mov
sub
inc
in
push
dec
add
out
pop
or
jnp
jne
aam
(bad)
xchg
ret
shr
jl
mov
add
cmps
lods
call
add
add
add
add
test
fstp
call
mov
lods
add
imul
push
mov
stc
mov
pop
cdq
pop
or
mov
(bad)
out
add
pop
pop
mov
sub
enter
lods
lods
mov
cs
inc
(bad)
push
jge
push
jne
bound
add
movs
gs
ret
or
mov
dec
sar
mov
jae
mov
lods
add
and
out
or
dec
or
push
mov
(bad)
fistp
add
cmc
stc
js
mov
mov
stos
add
cwde
pop
or
push
jmp
lea
add
mov
jp
mov
add
push
cwde
pop
or
test
mov
lock
mov
pusha
push
xor
mov
or
jmp
push
mov
add
scas
stos
push
dec
inc
mov
cmps
mov
mov
or
mov
cmp
ds
add
stos
lods
mov
ds
jmp
das
inc
or
cs
push
in
mov
or
inc
retf
xchg
repz
cmp
xchg
jl
push
(bad)
scas
fld
push
pop
inc
or
scas
in
out
push
push
imul
test
or
sbb
sub
jecxz
out
cmp
add
add
add
add
test
sbb
jmp
(bad)
call
adc
lods
jae
mov
adc
add
inc
or
cli
loope
jmp
jg
push
mov
call
call
in
test
and
pop
ret
retf
add
push
mov
stos
das
je
add
pop
mov
pop
add
mov
gs
call
cmp
or
adc
sub
add
mov
inc
mov
lods
xchg
lods
mov
mov
mov
fcom
cmp
push
js
push
mov
std
cli
scas
add
imul
enter
pop
add
fucomip
or
popf
inc
push
cmp
mov
jb
popf
xchg
sar
push
mov
push
mov
xchg
jl
retf
add
call
test
ror
popa
mov
cmp
ret
jmp
jo
and
dec
cmps
add
add
add
or
cwde
test
inc
add
cmp
jne
in
jle
cwde
test
cmp
cmp
cmp
push
pop
(bad)
mov
pop
stos
add
scas
lahf
enter
hlt
pop
(bad)
jmp
add
xchg
jmp
in
xchg
pop
inc
cli
xor
add
scas
add
dec
inc
jmp
not
sub
push
call
call
icebp
call
mov
cmps
cmp
or
adc
ds
loopne
data16
call
int
push
xor
jo
ret
mov
xor
scas
stos
xchg
pop
je
add
popf
push
push
stc
pop
jae
mov
sahf
xchg
xchg
ret
je
cmps
or
or
mov
push
dec
fs
mov
or
jne
push
dec
or
jmp
std
jne
shl
mov
jae
in
inc
loop
loope
in
adc
int
call
ret
mov
movs
cld
mov
shl
fild
test
mov
fbstp
out
leave
add
pop
push
push
mov
add
push
xor
(bad)
cs
add
sub
push
out
movs
sbb
adc
mov
add
push
pop
push
std
dec
lods
mov
movs
test
inc
ror
fsub
mov
out
jne
shl
and
fsubrp
in
(bad)
call
cdq
mov
sub
sub
jl
xchg
pop
mov
mov
fwait
ret
je
lds
call
inc
cmp
call
add
add
add
cmp
add
pop
add
sbb
push
pop
add
dec
inc
adc
mov
stos
ret
shl
mov
les
cmps
jb
add
stos
call
int3
dec
add
or
(bad)
mov
pop
mov
push
in
cmp
imul
xor
xchg
add
add
stos
add
sbb
inc
and
mov
lea
mov
test
fisubr
push
mov
pop
push
mov
sub
out
fimul
or
mov
add
push
and
cmp
and
inc
and
pop
ins
and
sub
jmp
dec
add
inc
or
jmp
std
(bad)
(bad)
je
adc
es
sbb
and
daa
gs
test
mov
mov
add
and
pop
mov
scas
ja
add
dec
mov
jle
add
xchg
out
xor
std
lea
pop
adc
inc
stos
push
jmp
pop
test
call
jmp
pop
fs
imul
test
mov
jns
gs
mov
ja
mov
jmp
sahf
les
push
call
adc
add
xchg
sub
add
lea
cdq
or
mov
inc
(bad)
clc
inc
lock
lea
mov
int3
mov
clc
inc
clc
pop
cmp
xor
js
jne
jb
inc
out
add
sahf
cdq
pushf
stos
xchg
mov
repnz
leave
push
jns
mov
cwde
mov
xchg
mov
push
sbb
je
fnsave
mov
mov
stos
jl
fwait
pop
mov
mov
add
icebp
push
xor
cwde
mov
es
inc
sbb
call
jmp
clc
dec
or
sub
mov
arpl
outs
ss
enter
int
push
jne
test
jo
cmp
outs
add
xchg
pop
jae
fisubr
jae
add
scas
push
add
lock
fild
xchg
out
inc
or
sub
(bad)
call
adc
add
pop
dec
mov
mov
cmc
jecxz
add
xchg
pop
les
scas
mov
sbb
pop
out
je
(bad)
xchg
icebp
xchg
pop
fs
mov
or
add
add
add
(bad)
push
inc
or
jle
pop
mov
xchg
stc
pop
adc
adc
gs
add
mov
ins
cli
add
cmc
jae
scas
add
or
cmp
(bad)
(bad)
in
cmp
xor
jecxz
or
imul
imul
sbb
scas
add
add
add
add
inc
stc
inc
adc
popf
fiadd
es
or
lea
std
call
mov
push
mov
das
in
mov
mov
dec
inc
or
cwde
xchg
or
or
cdq
pop
test
jae
mov
shr
pop
neg
shl
add
mov
js
(bad)
out
cmp
jmp
add
ss
adc
and
std
je
test
std
je
test
mov
push
stc
add
es
pop
popf
cwde
pop
ret
push
fidiv
movs
fsub
lods
lahf
pop
xor
mov
jns
jle
lods
xchg
dec
and
rcl
add
add
add
add
js
jbe
xchg
add
es
inc
add
retf
lahf
pop
bound
dec
inc
cmc
or
dec
rol
mov
xchg
repz
loopne
dec
test
jne
cmc
dec
lock
aaa
push
adc
out
out
sar
test
inc
pop
lea
push
call
add
(bad)
(bad)
std
jne
sub
cld
out
jae
dec
setns
mov
pop
les
stos
call
(bad)
sbb
add
sbb
dec
mov
rol
stos
mov
sbb
cmc
inc
in
scas
sbb
jmp
xchg
mov
inc
retf
jae
dec
xadd
push
cmp
pop
sbb
imul
call
shl
call
aam
add
popf
mov
push
push
mov
mov
(bad)
stos
add
xor
inc
call
sbb
inc
loopne
mov
inc
mov
pop
lea
lahf
inc
call
adc
sbb
ds
(bad)
push
out
inc
es
lock
mov
std
cwde
jmp
out
std
xor
ja
add
ret
mov
int
test
mov
add
xor
add
adc
pop
mov
lock
jmp
out
mov
mov
mov
(bad)
(bad)
hlt
xor
add
popa
push
cmp
in
add
xchg
je
sbb
jmp
or
mov
xchg
sbb
jmp
xchg
xchg
mov
and
push
push
into
aaa
cmp
push
cmp
call
add
add
and
or
data16
cmp
add
push
and
xchg
dec
push
push
enter
into
std
or
or
xchg
or
xor
shl
mov
mov
push
cmp
push
shl
xchg
mov
jmp
outs
cmp
fisub
lahf
sub
bound
mov
cmp
ins
ret
push
fcom
jge
scas
add
scas
ins
or
cmp
or
nop
mov
enter
int
ret
fidivr
jne
es
cld
inc
sbb
jmp
movs
call
mov
and
cmp
add
shr
inc
scas
add
or
out
mov
in
adc
mov
clc
fbld
movs
lods
jae
in
pushw
jmp
sahf
std
jne
(bad)
mov
inc
dec
ret
es
mov
sub
mov
mov
xchg
dec
out
lea
jg
inc
xchg
rol
mov
js
dec
add
cli
daa
inc
or
call
std
call
or
add
adc
and
inc
sbb
repnz
adc
mov
sahf
call
test
sub
mov
dec
or
out
or
dec
call
or
add
adc
mov
inc
(bad)
call
add
int
adc
push
daa
(bad)
call
call
mov
mov
sbb
cli
call
pop
outs
add
dec
add
call
es
cld
dec
imul
push
sbb
lods
out
adc
std
jmp
add
sar
xchg
test
retf
inc
inc
and
clc
in
push
mov
and
hlt
int
mov
and
clc
inc
and
cdq
call
test
sbb
mov
mov
ror
(bad)
call
shl
adc
ins
push
cmp
mov
add
or
mov
inc
add
and
std
call
xor
call
sub
and
mov
test
inc
call
ret
push
mov
sub
mov
and
push
push
ja
inc
and
cmp
(bad)
out
mov
xchg
jbe
(bad)
test
add
sub
addr16
add
xor
mov
cmp
dec
and
push
sub
cdq
test
push
pop
imul
adc
std
call
sbb
add
cmps
and
adc
data16
push
repnz
neg
sbb
jae
inc
sbb
mov
add
fnsave
or
fist
mov
pop
fimul
sub
call
test
inc
cld
jge
xor
cmps
dec
jno
sub
(bad)
fisub
mov
dec
retf
jge
or
ret
out
mov
xor
sbb
loope
adc
add
xchg
push
push
or
out
mov
mov
xor
push
and
fild
mov
out
mov
push
xor
and
jae
loope
or
fwait
jns
jne
xchg
jae
push
sub
add
pop
inc
or
jmp
add
xor
ret
push
mov
in
sbb
add
cmp
mov
sahf
xchg
push
add
je
push
or
mov
test
jne
rcl
xchg
test
push
add
imul
xchg
and
ins
cmp
xor
in
sar
mov
(bad)
std
test
sbb
push
cmp
call
add
stos
icebp
or
add
add
pop
shr
mov
lahf
inc
bound
mov
xchg
mov
aaa
inc
in
ds
mov
je
rcr
mov
inc
fidiv
ror
std
test
test
cmps
mov
mov
sub
mov
imul
add
add
icebp
std
(bad)
(bad)
je
in
sub
mov
xor
sub
call
int
add
(bad)
fwait
sar
in
shl
clc
popf
outs
push
or
(bad)
push
adc
imul
aas
arpl
inc
inc
adc
or
lods
cwde
test
ror
mov
add
ss
hlt
dec
sub
mov
(bad)
lahf
pop
ret
mov
mov
dec
xchg
inc
jmp
icebp
call
(bad)
jae
in
je
adc
mov
ds
jmp
shl
adc
jo
or
mov
cwde
mov
mov
cdq
call
add
add
add
add
scas
add
(bad)
pusha
mov
cmp
pop
lock
pop
sbb
adc
mov
ds
add
cmp
je
or
add
sub
std
call
lods
add
or
push
scas
add
cld
js
and
jg
mov
add
sub
dec
div
outs
add
dec
(bad)
dec
fs
push
xor
dec
pushf
(bad)
mov
es
lods
mov
push
out
mov
add
aas
mov
add
mov
cmp
xchg
ja
fmul
cmps
xor
sbb
inc
jmp
add
rol
lods
push
call
or
mov
mul
enter
ror
cwde
mov
add
scas
into
push
ds
add
pop
mov
cmp
rcl
(bad)
jne
lods
(bad)
sub
xor
add
and
rcr
repnz
pop
ret
icebp
stos
pop
jo
test
add
mov
std
xor
sbb
mov
cdq
and
sub
mov
dec
xchg
sar
call
mov
xor
or
jb
dec
call
outs
and
clc
(bad)
xor
in
lahf
js
sub
test
add
aaa
pop
push
push
lods
mov
inc
xchg
stos
sbb
(bad)
mov
scas
push
push
mov
xor
push
push
pop
inc
add
sahf
stos
jmp
(bad)
loope
xchg
xchg
xchg
rol
shl
jmp
xor
or
cmp
add
fwait
cmp
dec
mov
jge
out
mov
lds
mov
cmp
lea
xchg
call
mov
je
mov
push
push
call
out
scas
fdivr
call
call
xchg
pop
outs
add
adc
sub
add
out
jnp
dec
inc
push
mov
add
lea
ret
cmp
jae
jge
mov
jmp
mov
pop
mov
stos
push
mov
in
sbb
pop
mov
push
scas
push
lea
mov
jmp
sahf
inc
shl
sbb
sub
xchg
inc
adc
push
mov
push
mov
out
call
pop
outs
push
mov
scas
mov
bound
call
mov
out
sbb
call
mov
lods
ja
inc
xchg
jnp
jecxz
or
sub
mov
daa
dec
push
add
ds
push
add
jnp
sar
call
call
mov
mov
lahf
push
mov
push
pop
pop
dec
jmp
add
loope
push
pop
ins
push
mov
pop
push
push
ins
cmp
mov
mov
fdivr
jecxz
or
dec
mov
je
loope
or
jle
shl
or
add
add
add
loopne
out
mov
(bad)
cmp
mov
out
cld
fld
je
(bad)
xor
inc
pop
loope
sbb
inc
add
and
jmp
loop
or
outs
or
jmp
std
call
sahf
mov
std
test
jbe
xor
push
cmp
mov
mov
pop
and
pop
pop
mov
inc
out
out
or
add
add
fisubr
mov
(bad)
(bad)
or
cmps
scas
mov
daa
ds
cmp
mov
enter
mov
mov
sbb
les
push
mov
in
add
int
push
mov
shr
es
std
inc
add
and
fmul
sbb
inc
sbb
(bad)
push
adc
(bad)
jae
loope
mov
push
cmp
sub
sbb
out
sbb
ss
jne
loope
or
ror
sub
inc
xor
jp
test
push
jne
sbb
add
add
add
add
out
add
inc
add
outs
sub
(bad)
mov
scas
mov
out
add
ror
add
jle
xor
sub
fsubr
add
call
add
jge
jne
or
imul
inc
sti
std
call
add
push
add
sbb
stos
out
sub
out
add
add
dec
or
cmps
sub
add
data16
jb
or
(bad)
frstor
mov
lods
mov
out
mov
xchg
ds
iret
add
or
test
cmp
cmp
add
xor
imul
pop
jae
cmp
add
fs
cmp
xor
stos
mov
ins
ins
push
cmp
xor
pop
add
jp
dec
add
fs
dec
add
cmp
cmp
mov
test
pop
mov
pop
call
jge
xchg
in
pop
aad
jle
data16
mov
out
fwait
add
in
addr16
mov
in
or
aaa
jle
add
(bad)
(bad)
jmp
es
fucomi
push
in
adc
jmp
xor
xchg
mov
in
sub
cs
aas
mov
push
add
push
mov
jb
ret
ja
xchg
mov
push
out
fmul
push
inc
add
(bad)
in
sar
(bad)
cmp
add
pop
lds
add
fdiv
in
mov
add
and
xchg
stos
mov
or
gs
stc
inc
std
jl
and
std
jmp
fs
push
inc
add
adc
inc
cmp
add
sbb
pop
(bad)
mov
mov
push
dec
pop
mov
ds
or
out
inc
sub
inc
int
xor
add
test
jmp
je
mov
add
stos
add
fsub
call
pop
sub
or
cdq
pop
cdq
mov
clc
fldcw
jbe
or
mov
dec
gs
jmp
add
sub
imul
push
xchg
add
iret
adc
mov
shr
stos
cmp
add
sub
adc
push
mov
jmp
sbb
adc
mov
mov
fiadd
xor
add
jp
test
mov
(bad)
std
mov
(bad)
inc
mov
call
(bad)
jmp
test
mov
data16
(bad)
jge
push
push
add
push
idiv
fistp
or
or
add
xor
call
jl
pop
mov
in
xor
jbe
(bad)
sub
add
out
inc
cld
adc
sbb
push
pop
lock
cmp
pop
pop
mov
sub
hlt
pop
out
imul
jbe
add
push
pop
into
mov
pusha
jmp
adc
call
and
sub
lea
in
mov
add
inc
xor
xor
lock
cmps
cwde
std
jmp
add
adc
call
jecxz
test
ffree
inc
in
inc
cld
sbb
push
push
mov
into
push
lea
add
add
add
add
sub
inc
not
inc
cmp
daa
outs
repz
xchg
movs
daa
popf
and
jl
popa
movs
sub
sbb
scas
add
add
je
sbb
jg
lock
lock
adc
sub
pop
(bad)
jmp
fwait
xor
and
aad
add
std
call
add
adc
(bad)
push
popf
mov
in
push
cs
leave
imul
push
call
outs
cwde
rol
rol
out
dec
hlt
dec
push
jp
sub
out
(bad)
mov
int3
or
in
add
(bad)
push
sub
jno
push
pop
ins
test
stos
push
jns
inc
or
and
mov
test
std
mov
lods
mov
cmp
cs
push
sub
mov
cmps
and
test
fnstcw
lahf
cmp
add
mov
ins
out
mov
std
call
je
mov
(bad)
dec
clc
add
xor
push
outs
mov
add
(bad)
or
pop
outs
add
aad
add
mov
jae
jle
add
cmps
(bad)
jnp
or
push
out
or
std
test
ds
jmp
mov
mov
es
xchg
pop
(bad)
pop
int
pop
leave
in
add
mov
mov
test
mov
add
sub
inc
cld
lea
push
lea
popa
out
or
std
test
push
jmp
es
add
pop
mov
fisttp
outs
inc
mov
je
aad
mov
mov
ss
das
inc
add
xchg
lahf
pop
loop
(bad)
jg
ins
(bad)
jae
aad
add
push
mov
cmp
fisttp
add
dec
shl
pop
aad
mov
mov
mov
jle
addr16
loop
sbb
inc
push
aad
cld
adc
mov
mov
ror
lea
(bad)
imul
lods
call
mov
sbb
ret
add
lods
xor
sbb
nop
xor
add
add
sub
inc
mov
mov
adc
add
sbb
inc
adc
xchg
push
call
and
mov
mov
cmp
mov
jns
loop
add
pop
mov
and
or
adc
cmp
xor
lea
jmp
mov
int
or
sub
dec
push
lea
dec
add
sub
aad
mov
mov
xor
daa
test
out
xor
mov
mov
daa
ds
repnz
mov
inc
pop
(bad)
stos
jmp
add
add
add
add
aam
(bad)
push
icebp
inc
push
icebp
dec
sahf
stc
inc
mov
daa
outs
add
test
xor
mov
(bad)
inc
daa
inc
add
jmp
es
mov
daa
inc
add
loop
call
push
in
mov
sub
lahf
pop
loop
add
add
push
stos
mov
and
mov
push
retf
add
or
jne
fnstcw
sbb
call
popf
out
cmp
je
lods
jmp
cmp
aad
jmp
and
cmp
lock
lods
stos
mov
pop
lock
cs
outs
inc
jp
dec
add
test
or
add
add
push
lods
cmp
fucomp
mov
lods
cmp
fadd
dec
and
pop
gs
dec
mov
scas
(bad)
retf
and
out
sub
stos
sub
in
add
mov
std
cmp
lea
add
adc
lods
std
push
xchg
jmp
push
(bad)
movs
mov
add
and
scas
jae
jmp
add
(bad)
jnp
dec
mov
inc
out
das
jbe
out
add
mov
mov
mov
cmp
fstp
add
jae
das
aad
mov
cmps
mov
xchg
pop
add
cmps
xchg
inc
or
jo
add
add
shl
jne
add
das
jg
data16
adc
mov
iret
jmp
sub
mov
das
jbe
push
fcomi
mov
inc
or
mov
add
xchg
shr
add
stos
mov
cmp
daa
iret
jmp
daa
(bad)
mov
cmps
cmp
je
dec
out
jmp
and
sbb
out
or
daa
out
jmp
add
daa
outs
add
scas
xchg
and
inc
mov
or
outs
daa
dec
sbb
add
imul
add
mov
pop
jne
and
jmp
and
popf
out
mov
mov
das
mov
push
pushf
mov
adc
pop
test
or
add
add
add
add
test
add
(bad)
jmp
sub
cmp
lods
add
sbb
dec
or
shr
sub
inc
sub
es
(bad)
fadd
add
or
add
(bad)
add
pop
es
or
shr
push
mov
sub
adc
add
add
add
daa
push
jne
fsubr
sub
fsubr
sub
(bad)
shr
or
mov
addr16
sub
and
les
lods
call
jmp
push
aam
add
mov
inc
sub
and
add
fiadd
(bad)
call
lods
jae
or
popf
push
test
add
pop
push
sub
and
mov
and
add
fistp
mov
sub
sub
xlat
adc
push
push
sub
push
sub
inc
push
add
lods
mov
pop
jmp
xchg
addr16
sub
and
mov
inc
fsubr
add
mov
push
cld
stos
mov
inc
dec
test
(bad)
std
call
in
test
fiadd
psraw
jbe
inc
or
in
mov
inc
add
push
mov
imul
mov
clc
or
fiadd
mov
push
sbb
dec
add
cld
or
add
sbb
add
pop
clc
add
(bad)
add
aam
add
pop
call
add
adc
mov
stos
call
mov
xor
jns
(bad)
call
push
pop
mov
inc
mov
ins
inc
cld
xchg
sub
inc
or
stos
mov
and
in
in
adc
add
cdq
mov
dec
xor
es
inc
sub
dec
(bad)
(bad)
jmp
movs
add
or
cmc
repnz
push
ds
rol
gs
inc
(bad)
inc
dec
(bad)
out
push
shr
cld
(bad)
push
neg
aad
mov
inc
les
test
std
jne
add
mov
call
mov
pop
mov
adc
jne
dec
daa
stos
add
push
mov
mov
int3
mov
jmp
retf
mov
dec
cld
lods
dec
jne
js
ja
popf
hlt
cld
call
lea
mov
pop
out
add
call
add
add
add
mov
(bad)
jmp
sub
out
cmp
je
out
pop
(bad)
jae
add
mov
outs
dec
in
add
pop
outs
(bad)
jmp
aaa
pop
mov
mov
inc
call
push
fucomip
or
aam
inc
and
movs
push
call
sbb
inc
add
in
aas
add
add
scas
add
adc
push
xor
xor
in
inc
jne
mov
mov
jne
push
pop
add
scas
add
fisubr
retf
mov
(bad)
push
sar
sahf
out
test
or
pop
retf
mov
fdiv
cmp
or
jb
ss
add
scas
add
add
xor
movs
je
test
sbb
rcr
lods
or
add
fmul
mov
sub
pop
xor
mov
mov
(bad)
push
add
cmp
xchg
int3
cld
add
in
add
add
aaa
pop
adc
or
cli
scas
add
mov
mov
jmp
ss
add
jge
push
push
fimul
call
adc
xchg
or
add
push
inc
(bad)
data16
ror
lods
mov
cmp
mov
push
ds
mov
and
inc
sub
mov
mov
xchg
ss
mov
call
popf
dec
mov
cmp
add
xchg
int
add
jb
fdivr
(bad)
shr
sbb
fwait
scas
add
and
in
in
cmp
mov
das
sub
popf
mov
mov
sub
sbb
push
mov
push
or
push
add
mov
cmp
mov
mov
add
add
add
push
mov
mov
mov
ret
jl
mov
call
popf
mov
cs
push
xor
in
pop
loopne
je
ss
or
loop
inc
inc
or
sub
mov
push
or
or
cmp
cld
lods
cmp
xlat
in
push
push
dec
shl
mov
dec
lds
push
push
(bad)
fstp
add
imul
mov
jmp
mov
mov
lods
push
push
jns
inc
clc
mov
adc
xchg
or
sbb
dec
clc
lea
je
pop
out
clc
mov
pop
mov
ins
arpl
add
add
add
add
das
jne
pop
fcomip
mov
push
mov
push
sbb
or
dec
mov
mov
add
dec
dec
fwait
inc
dec
lea
stos
add
cmp
xor
jne
imul
jae
mov
adc
(bad)
inc
add
test
sbb
push
inc
out
cmps
ret
out
and
stos
add
fcmovnb
cmp
bound
stos
push
call
gs
in
and
in
jne
sub
push
add
cmc
in
mov
mov
mov
add
cmc
clc
jmp
sub
and
push
stos
mov
sub
hlt
(bad)
clc
nop
inc
cs
mov
test
sub
jmp
lods
cmp
push
push
pop
in
clc
jne
(bad)
dec
or
cmp
mov
jmp
dec
cmc
clc
mov
sub
cmps
mov
fist
dec
sahf
enter
scas
mov
sub
lock
mov
push
add
inc
mov
ret
xchg
push
cmp
mov
mov
ret
imul
add
inc
call
xchg
ret
stos
add
popf
inc
mov
bound
sub
push
sub
jne
push
xor
jge
sbb
push
pop
lea
mov
add
cmps
sbb
fidiv
add
mov
mov
jmp
sub
data16
call
adc
add
fs
ficom
and
out
add
dec
mov
mov
mov
rol
lock
mov
rol
mov
popa
or
dec
inc
(bad)
call
in
lea
cmp
das
push
cmp
call
pop
(bad)
popa
jnp
cmp
scas
call
pop
push
fisttp
push
sbb
in
inc
add
stos
rol
movs
cmp
test
sbb
sub
push
push
jne
ds
add
enterw
mov
call
sahf
cmp
test
lock
xchg
mov
mov
popa
ret
push
add
cmps
mov
pop
hlt
adc
push
inc
jae
add
mov
add
jle
add
lock
and
inc
xchg
popa
mov
sbb
add
xchg
xchg
or
in
(bad)
jmp
push
dec
jne
or
cmc
adc
sahf
lods
jbe
fucomp
or
imul
jmp
add
(bad)
or
adc
imul
push
cs
push
fbstp
(bad)
fst
jmp
pop
cmc
adc
cs
jae
ins
in
or
sub
mov
sbb
mov
lea
cmp
in
mov
push
add
ds
xor
mov
add
test
add
mov
or
add
add
add
mov
sub
and
(bad)
pop
cld
jmp
fimul
loop
lods
add
scas
pushf
mov
les
popf
ins
pop
pop
cmp
fmul
mov
ins
inc
xchg
lods
mov
gs
or
fist
push
frstor
outs
enter
push
xor
call
add
add
add
fimul
(bad)
call
lods
add
xchg
lods
push
pop
or
(bad)
jmp
mov
jge
push
mov
inc
clc
(bad)
cld
cmp
mov
jmp
push
popf
push
push
les
push
lods
mov
arpl
add
lods
mov
(bad)
(bad)
mov
xchg
iret
lock
fistp
push
xor
sub
adc
rol
aam
stos
add
fs
inc
stos
mov
lea
cmp
jne
ret
jle
mov
mov
rol
jmp
mov
nop
or
aad
(bad)
jmp
push
push
pusha
mov
int
adc
add
pop
inc
je
popf
test
lea
push
mov
rol
pop
add
ror
(bad)
cmp
mov
mov
sub
(bad)
fisttp
push
popa
dec
jmp
loopne
call
sbb
ss
sub
inc
mov
rol
mov
ror
paddsw
call
rcl
lock
bound
and
dec
adc
inc
or
stos
cmp
mov
mov
mov
sub
push
push
jne
lods
dec
jne
ja
movs
dec
ss
lea
out
adc
mov
mov
rol
imul
out
mov
add
push
pop
not
mov
mov
neg
push
push
xor
adc
mov
(bad)
jmp
or
call
iret
sbb
scas
mov
mov
aad
adc
mov
(bad)
leave
adc
test
push
mov
outs
inc
cld
daa
int3
pop
mov
ror
ss
inc
add
mov
int
mov
pop
add
jmp
je
push
aam
add
mov
repnz
dec
mov
mov
jl
and
hlt
mov
inc
mov
pop
mov
sbb
dec
scas
add
frstor
cmp
mov
inc
or
add
shr
les
jecxz
add
je
popf
jbe
mov
cmp
and
push
jmp
popf
jnp
mov
mov
pop
add
(bad)
aaa
(bad)
pop
xor
mov
push
xor
adc
(bad)
out
std
push
pop
jnp
mov
or
jl
and
or
sub
add
jnp
inc
xchg
inc
add
jnp
mov
adc
clc
(bad)
(bad)
repnz
add
repz
mov
xchg
lods
mov
bound
call
(bad)
adc
inc
es
cmp
xor
add
jnp
mov
mov
mov
mov
idiv
add
into
mov
or
mov
out
fld
lea
jmp
adc
adc
sbb
inc
pop
mov
fbstp
mov
repz
cmp
adc
mov
ja
or
bound
push
int
add
clc
sub
es
push
push
lods
lds
mov
mov
or
inc
jae
(bad)
fmul
jmp
cs
out
push
cmp
mov
cmp
je
add
cmp
mov
jmp
mov
les
add
test
xor
and
jae
sbb
scas
mov
sub
in
mov
add
inc
mov
out
rol
mov
or
jns
pop
pop
ins
add
ins
jns
scas
stos
in
add
fild
movs
cmp
mov
jmp
jns
inc
ror
jg
mov
mov
dec
lods
dec
mov
sub
loope
pusha
pop
mov
mov
add
add
add
test
sbb
fsubr
sti
cdq
lods
add
fwait
sbb
inc
cmps
mov
mov
pop
imul
push
nop
inc
add
test
jmp
xor
enterw
or
sbb
xchg
std
fwait
xchg
or
pop
mov
div
add
xor
push
jmp
or
adc
sub
jno
mov
(bad)
stos
mov
stc
cmp
add
in
add
(bad)
cmps
add
stos
push
xor
cmps
stos
jmp
jp
stos
jae
sub
adc
sbb
adc
in
test
inc
adc
sub
mov
add
mov
out
sub
mov
mov
sub
add
icebp
adc
popf
jecxz
mov
scas
call
lea
scas
mov
data16
icebp
cs
jmp
in
mov
scas
mov
mov
daa
or
mov
scas
xchg
mov
add
add
daa
jmp
int
mov
mov
sub
sub
sbb
clc
add
daa
xor
xchg
popf
xchg
fwait
xchg
inc
push
sub
fiadd
es
add
dec
stos
je
cmps
int
add
sub
(bad)
in
je
daa
dec
sbb
mov
sbb
outs
fucomp
mov
inc
out
pop
dec
inc
movs
mov
dec
jne
cld
mov
inc
mov
adc
cmps
xchg
arpl
xchg
dec
sub
add
add
outs
and
in
or
pop
fiadd
push
and
cld
jmp
jmp
popf
in
lock
add
jmp
fild
add
jmp
and
pop
test
mov
or
mov
pop
out
pop
dec
inc
cmp
lea
pop
lea
daa
inc
hlt
mov
call
and
mov
dec
pop
or
mov
add
ds
jmp
add
fcomip
or
int
or
lahf
test
cmp
movs
mov
daa
inc
clc
(bad)
test
add
dec
jne
xchg
jmp
push
ss
(bad)
fld
lea
inc
sub
or
mov
and
dec
xor
add
add
add
add
call
mov
jb
push
mov
loop
sbb
(bad)
push
pcmpeqd
jne
es
mov
pop
mov
movs
mov
dec
adc
pop
cwde
fnsave
sub
mov
mov
cmps
rcl
add
outs
pop
cmp
push
sub
loopne
jmp
sub
add
pop
ss
je
daa
jge
pop
xchg
cmp
fild
mov
daa
dec
or
adc
jmp
pop
pop
fld
sahf
and
das
jns
pop
outs
outs
add
cld
jmp
daa
adc
call
rcr
push
push
pop
jb
ror
test
repz
push
and
mov
add
jle
dec
cmps
inc
sbb
in
lea
dec
call
popf
jmp
mov
cmp
sub
dec
call
pop
jecxz
call
xor
cmp
test
push
mov
mov
inc
and
shl
push
mov
xor
mov
jge
xchg
add
out
or
es
or
pop
lea
inc
mov
push
lods
mov
in
jl
cmp
mov
jp
lods
je
pop
fmul
jne
jp
icebp
(bad)
stos
add
add
jmp
add
movs
mov
mov
es
add
inc
sub
dec
ins
cmp
retf
sbb
add
jmp
add
mov
push
adc
and
jmp
or
es
call
sbb
xor
mov
push
adc
and
add
dec
mov
add
inc
add
movs
cmp
or
call
movs
mov
mov
add
and
xchg
(bad)
lahf
mov
push
outs
push
add
pushf
fnstcw
lock
add
mov
jmp
ds
add
inc
sub
push
movs
cmp
(bad)
sbb
movs
and
mov
pop
mov
inc
adc
loopne
cmp
(bad)
or
call
inc
pop
and
pop
add
adc
xor
xor
add
jae
je
and
or
cmp
ds
jb
jne
inc
add
pop
jno
je
and
lea
jne
and
jmp
jb
pop
jecxz
cmp
mov
mov
add
cs
frstor
dec
add
mov
stos
mov
sub
xchg
fisubr
push
shl
aam
aas
iret
std
call
int
add
in
aam
mov
lods
call
outs
int
inc
es
adc
adc
call
rcl
add
lods
mov
aas
sbb
add
add
add
and
test
jmp
ins
in
adc
int
jne
push
rcl
add
add
movs
and
inc
or
inc
xchg
nop
pop
add
lods
xchg
or
rcr
mov
add
push
mov
sub
(bad)
xchg
add
and
add
stc
mov
add
(bad)
mov
add
sbb
cmp
mov
pop
cs
xchg
mov
and
(bad)
jae
cmp
jmp
cmp
pop
imul
add
out
xor
(bad)
jl
mov
jmp
mov
aaa
push
cmp
add
sbb
xchg
add
aaa
ja
pop
(bad)
mov
aaa
adc
add
add
add
dec
mov
or
cmp
outs
add
push
cmp
dec
daa
jne
fild
or
sub
dec
adc
lock
xlat
jnp
mov
push
repz
pop
xchg
pushf
jmp
mov
xor
pop
mov
clc
out
add
jo
add
push
test
shr
mov
add
int
jne
dec
jbe
sbb
(bad)
je
in
inc
adc
cmp
(bad)
fcomp
(bad)
out
mov
add
sbb
je
cmp
sbb
add
cmp
out
adc
stos
mov
adc
jle
mov
ds
imul
es
mov
xor
adc
pop
sbb
addr16
adc
scas
push
(bad)
call
sbb
iret
sbb
je
push
int3
(bad)
sbb
(bad)
out
mov
add
cmp
jae
dec
jo
or
add
aaa
add
lahf
push
cld
mov
sub
cmp
lods
or
(bad)
cmp
xchg
add
stos
pop
mov
push
inc
adc
push
dec
add
mov
pushf
call
les
mov
add
mov
jo
scas
add
fstp
add
adc
movs
sub
add
js
call
dec
cmp
ss
or
adc
(bad)
cmp
mov
sub
fimul
add
add
mov
mov
ss
mov
mov
adc
test
add
lods
xchg
xor
add
loope
mov
cmp
(bad)
dec
add
sub
mov
cmp
imul
inc
push
xor
mov
ror
sbb
push
push
sub
add
sbb
add
sbb
add
add
add
add
lods
cmp
ja
mov
jmp
pop
fadd
sbb
jae
dec
imul
aam
add
call
call
out
cmps
mov
or
mov
dec
xchg
xor
(bad)
mov
je
mov
push
adc
push
adc
push
xchg
dec
mov
add
add
add
cmp
inc
add
out
add
xor
adc
sbb
push
(bad)
rcr
(bad)
push
add
or
std
mov
pop
dec
lea
push
out
sti
add
push
xor
test
outs
bound
adc
sti
inc
push
(bad)
jae
xor
or
mov
sub
xchg
jg
mov
add
lea
test
cmp
and
mov
add
sub
add
mov
js
or
cmp
xchg
loopne
add
cs
jg
push
jg
mov
cmps
into
jmp
cmps
lds
out
test
add
sbb
mov
mov
add
jp
add
scas
mov
lea
mov
cmps
into
jmp
cmps
lds
mov
or
mov
pop
mov
jge
or
cmps
in
jmp
sub
push
cmps
ins
add
scas
xchg
test
mov
lods
out
mov
mov
cmps
dec
sbb
add
fadd
lods
lods
mov
mov
add
aad
inc
or
add
push
scas
mov
cs
push
dec
sbb
mov
mov
jnp
mov
test
std
call
lods
cmp
mov
mov
div
mov
adc
add
fwait
sbb
jne
test
cwde
and
add
popf
outs
or
fwait
xor
add
cpuid
inc
or
lea
adc
jnp
mov
std
je
test
adc
cwde
jo
add
add
(bad)
mov
adc
or
xchg
test
add
out
ret
inc
stos
scas
call
jmp
out
adc
retf
and
inc
adc
mov
(bad)
out
scas
add
int
cmp
jae
popf
outs
or
xor
add
sub
inc
adc
mov
mov
mov
add
pop
sar
add
inc
add
mov
das
jbe
out
adc
into
cmc
cmp
adc
pop
dec
add
jbe
jmp
sub
adc
mov
cmp
add
mov
push
call
in
je
pop
fucom
sbb
pop
jl
dec
iret
loope
mov
inc
or
ins
adc
add
mov
scas
add
in
or
mov
mov
(bad)
fmul
mov
das
js
out
add
fisub
or
fiadd
jmp
cmp
add
das
push
add
or
or
add
out
adc
retf
scas
xchg
cmps
push
add
fiadd
jnp
mov
mov
add
mov
inc
pop
pop
jnp
push
test
mov
add
mov
add
sub
out
mov
cmp
retf
adc
add
lods
jp
mov
arpl
dec
sbb
inc
add
retf
push
mov
fist
sub
and
div
bnd
or
out
dec
call
sbb
pop
in
out
jno
jno
pop
pop
and
add
xor
call
mov
cwde
xchg
add
cs
es
mov
or
add
sbb
ja
push
add
mov
ds
add
out
add
push
xchg
mov
and
push
mov
inc
jae
xchg
cmps
retf
pop
jg
cwde
add
cmps
lock
mov
add
stos
push
call
scas
cmps
ret
pop
mov
mov
mov
push
(bad)
inc
add
sti
mov
movs
jl
mov
mov
add
dec
adc
add
addr16
jb
std
dec
stos
add
jmp
inc
(bad)
add
mov
stos
mov
gs
jne
movs
inc
or
dec
sbb
sub
sbb
icebp
(bad)
jg
cmps
mov
add
add
add
add
stos
push
call
or
jge
push
repz
call
xchg
fwait
pop
dec
lea
repz
(bad)
jle
mov
cmps
inc
lods
xchg
lea
sbb
push
call
xchg
in
or
sbb
mov
stos
ror
add
jge
push
ds
add
rol
push
xor
mov
stos
call
mov
(bad)
retf
sub
add
stos
test
sub
push
lea
repnz
stos
push
dec
lea
repz
jmp
mov
movs
inc
mov
add
stos
add
push
stos
push
sub
in
xchg
repz
pop
lahf
lods
call
ret
enter
rcr
add
push
popa
(bad)
call
out
(bad)
dec
mov
jmp
xchg
shr
add
sbb
mov
add
mov
sbb
or
fld
mov
mov
fistp
das
fnsave
jne
fisub
adc
loopne
cmp
jae
addr16
inc
call
add
mov
push
call
sbb
mov
or
jb
pop
mov
adc
and
pop
arpl
dec
loopne
cmp
add
scas
jae
out
inc
inc
sbb
out
lock
rol
(bad)
adc
ret
lods
sub
std
aad
push
jo
push
sub
stos
mov
push
shl
xor
into
ins
or
add
cmp
scas
lds
and
dec
or
add
add
pusha
jnp
call
pop
add
sub
mov
test
add
or
test
je
xchg
sub
mov
test
aaa
jge
mov
paddq
fprem
ret
scas
ret
fimul
add
xchg
or
adc
(bad)
xor
cdq
inc
or
add
fst
mov
call
sbb
ret
fimul
push
jns
mov
push
scas
add
ss
push
sub
lahf
inc
retf
fadd
xor
or
out
add
dec
dec
mov
xchg
inc
or
outs
or
mov
or
add
sahf
cdq
dec
adc
sbb
leave
jl
cs
add
pop
or
je
in
test
mov
add
cmp
xor
scas
fisub
int
jno
popf
and
xor
or
mov
imul
mov
sub
je
loopne
leave
add
xchg
imul
cld
mov
lods
(bad)
call
enter
or
mov
adc
mov
sbb
sbb
call
or
xor
call
scas
xchg
inc
and
pop
inc
and
lods
add
data16
lds
imul
add
mov
push
(bad)
push
scas
push
cmc
pushf
movs
lods
or
adc
(bad)
data16
sub
add
mov
pop
icebp
jno
ins
jle
add
mov
add
mov
sub
cmp
jl
xchg
ret
mov
(bad)
jmp
(bad)
mov
inc
jmp
add
add
add
mov
(bad)
(bad)
in
sti
push
mov
pop
push
cmp
imul
lock
icebp
jno
xchg
ja
add
lods
add
imul
push
call
das
cmc
adc
sbb
add
stos
je
pop
sbb
call
mov
jmp
add
add
add
(bad)
jle
inc
xchg
sahf
jnp
mov
repz
cmps
stos
push
call
aas
dec
ret
lods
stos
rcl
sub
in
je
sar
das
in
(bad)
(bad)
fnsave
fwait
dec
out
push
stos
add
add
dec
cs
or
mov
push
mov
push
mov
mov
fidivr
mov
sub
mov
sub
mov
scas
mov
daa
js
xchg
dec
pop
ror
(bad)
call
mov
stc
mov
fadd
xchg
or
dec
test
or
inc
pop
icebp
je
daa
sbb
dec
das
mov
cmp
add
fimul
mov
adc
pusha
jbe
push
cdq
stos
mov
mov
ss
daa
inc
or
sub
or
or
gs
dec
pop
xor
call
push
fs
or
je
out
popf
jae
cmps
cmp
aam
outs
inc
cmp
aam
cmp
lods
test
add
mov
outs
add
adc
adc
mov
xlat
inc
add
ins
add
adc
test
inc
out
fst
or
or
add
inc
and
lods
std
xor
inc
out
call
lods
std
xor
cmp
(bad)
inc
loop
bound
add
pop
jmp
sub
in
dec
cmps
mov
add
enter
mov
mov
add
jb
inc
or
sbb
add
or
add
mov
dec
call
sub
ins
add
sub
lea
dec
lea
add
add
xchg
test
pop
stc
mov
imul
imul
inc
sub
sti
scas
add
xchg
sbb
cmp
call
fstp
repnz
loopne
add
outs
or
jp
bound
fucom
cwde
jmp
retf
add
push
(bad)
push
repz
call
add
add
add
stos
ret
std
jmp
fs
push
mov
push
jmp
push
dec
(bad)
fwait
in
(bad)
jmp
scas
call
push
xchg
and
call
jecxz
xchg
sbb
jo
pop
fild
push
jl
call
push
fs
jmp
push
add
(bad)
scas
call
push
add
xor
jmp
push
dec
xchg
scas
test
sub
data16
add
rcl
cmp
dec
(bad)
fisttp
jmp
jle
js
push
jmp
and
shl
jmp
mov
inc
add
out
or
or
mov
add
out
and
sbb
test
out
add
sub
add
lods
dec
cvtpi2ps
je
out
gs
push
xor
cmp
cmp
jmp
and
push
sbb
add
add
pop
push
(bad)
(bad)
mov
and
push
out
xor
add
add
add
add
push
mov
ror
std
call
lock
add
fcomp
push
pop
ret
mov
sbb
mov
hlt
les
xlat
push
fstp
inc
mov
aad
out
out
add
outs
rcl
inc
inc
and
push
lea
jns
test
jmp
jle
idiv
mov
add
mov
cmp
in
add
push
sub
ja
test
out
loope
lea
jl
test
(bad)
inc
lods
add
dec
cmc
jmp
stos
mov
aas
jp
inc
int3
call
pop
in
je
mov
push
dec
aam
add
imul
cmps
push
inc
aam
push
test
adc
mov
idiv
xchg
ret
fld
(bad)
jmp
pop
add
sbb
call
stos
mov
call
push
xchg
inc
or
stos
(bad)
call
arpl
add
test
add
add
add
es
add
ins
dec
dec
sub
data16
ins
add
rcl
lea
cmp
imul
jmp
cmps
add
(bad)
inc
mov
xchg
push
pushfw
push
ins
add
mov
test
add
or
cwde
jmp
in
in
and
add
rep
in
add
lock
or
jp
daa
dec
in
jmp
loope
in
fcomip
(bad)
fisubr
call
jmp
cmc
aad
cmps
fild
arpl
call
jae
lods
push
push
sub
dec
(bad)
sbb
add
test
jmp
es
add
inc
add
test
das
push
adc
call
in
cld
add
int3
enter
adc
call
outs
and
test
adc
jmp
lods
scas
mov
pop
add
out
shr
mov
std
call
dec
mov
ds
mov
or
add
xchg
push
pop
(bad)
jae
js
dec
pop
fisttp
sbb
dec
jmp
lea
std
in
or
inc
dec
xchg
dec
call
cs
inc
lods
mov
xor
dec
mov
out
repnz
fucom
or
inc
add
jmp
or
mov
add
mov
scas
add
mov
dec
push
xor
or
mov
jl
xor
add
fcomp
or
aas
lods
jae
ins
mov
inc
mov
es
xor
(bad)
fistp
mov
test
add
(bad)
mov
inc
mov
pop
dec
or
scas
call
mov
or
jmp
(bad)
mov
test
add
add
dec
push
movs
add
jne
fmul
or
(bad)
push
mov
xlat
std
call
ins
mov
jmp
cmp
mov
xor
call
rcr
jne
xlat
push
lea
xchg
xor
call
add
dec
inc
cld
cmps
scas
add
jle
stc
inc
aaa
iret
call
sbb
dec
dec
dec
dec
inc
cld
fs
add
in
add
adc
pop
scas
add
int
mov
aaa
xrelease
mov
push
push
jb
inc
add
movs
call
lea
out
add
test
inc
mov
add
add
push
dec
lea
sub
sub
dec
call
cwde
ins
cld
add
lock
jmp
push
pop
mov
pop
mov
ss
out
lods
add
sbb
xor
(bad)
in
mov
lods
add
xchg
les
sub
cld
add
add
pushf
add
push
xor
out
clc
hlt
call
aaa
(bad)
call
aam
add
test
push
call
mov
mov
mov
push
cmp
inc
inc
mov
dec
xchg
hlt
jmp
lods
ret
aam
add
lods
mov
call
sbb
mov
shr
cmp
add
sbb
ror
mov
push
das
inc
inc
fwait
mov
fstp
test
xor
rol
dec
call
call
jge
push
fprem1
xchg
inc
dec
push
fld
cld
add
lods
add
aad
(bad)
jmp
cld
call
in
test
add
mov
add
in
pop
(bad)
call
ds
(bad)
in
and
call
sub
xor
mov
loopne
repz
outs
loopne
pop
fucom
jmp
cmp
test
lds
call
repz
jl
(bad)
(bad)
jmp
add
in
sbb
jmp
mov
je
push
add
push
retf
or
push
cmc
inc
cld
and
je
jmp
daa
dec
(bad)
fcomi
dec
mov
add
add
xchg
jne
mov
je
call
dec
inc
lea
popa
add
xchg
and
inc
mov
jle
mov
ret
xchg
lock
lock
or
add
mov
std
(bad)
in
inc
mov
cs
je
mov
mov
and
add
and
mov
pop
mov
pop
call
push
xchg
jne
push
ds
pushf
add
sub
movs
cmp
stos
jmp
cmp
lea
pop
mov
add
std
ss
push
add
lods
xchg
xchg
mov
dec
mov
mov
mov
stc
mov
mov
ins
fsubr
and
std
(bad)
fucompp
jno
(bad)
movs
cmp
test
loopne
mov
(bad)
call
test
dec
repz
mov
jmp
mov
push
lea
add
push
mov
cmp
rcr
std
jne
sub
(bad)
xchg
ds
pop
movs
mov
push
push
rcr
adc
stos
mov
and
and
call
fucomip
push
mov
sub
mov
lods
test
test
or
pop
mov
sub
ss
jmp
add
add
add
add
lock
inc
(bad)
call
ja
push
popf
and
push
jecxz
or
ja
sbb
add
add
hlt
sbb
and
sub
inc
jp
clc
mov
rcr
or
ins
dec
je
(bad)
je
aam
pop
ret
arpl
fcomp
adc
fld
add
repz
mov
ret
lahf
fild
mov
fistp
and
pop
jmp
ret
aad
add
imul
(bad)
inc
shr
push
lods
test
dec
sbb
stc
call
dec
jg
jecxz
add
xchg
mov
sar
(bad)
inc
jne
in
cmp
mov
add
add
add
daa
pop
inc
je
(bad)
je
push
mov
rcr
fstp
fild
or
add
jb
fucom
mov
add
fld
push
inc
fcomp
and
mov
inc
push
test
lds
xor
jno
or
sbb
sbb
test
leave
jl
rol
add
out
mov
idiv
or
xor
(bad)
jo
push
lea
push
push
loope
inc
or
mov
dec
je
sti
mov
clc
out
inc
cld
(bad)
lods
add
scas
repnz
pop
imul
pop
jne
call
push
ficomp
ror
push
mov
dec
frstor
out
add
inc
push
call
xor
mov
jns
push
(bad)
jmp
add
dec
out
lods
add
out
addr16
cmp
push
lods
mov
cs
idiv
jmp
xor
stc
adc
add
jae
inc
into
xor
jno
add
cld
lods
push
push
push
retf
cmps
pop
mov
cmps
add
(bad)
out
(bad)
lods
add
aad
mov
test
clc
test
sub
(bad)
ds
add
add
or
stos
jne
lods
push
test
sub
jnp
(bad)
cmps
mov
rol
add
add
add
stos
mov
ror
(bad)
or
out
adc
rol
or
pop
add
(bad)
add
ret
inc
out
add
dec
sub
sub
mov
fnstsw
mov
and
arpl
push
cmp
iret
push
sub
push
jne
add
out
fsub
adc
pop
arpl
add
mov
add
add
(bad)
call
mov
(bad)
jmp
cs
jmp
idiv
cld
out
push
or
stos
mov
mov
jle
sbb
stc
mov
mov
pop
add
data16
fsub
jle
inc
add
shr
add
in
add
shr
add
dec
mov
add
or
shr
add
mov
add
popf
ins
sbb
scas
add
add
or
popa
add
dec
test
cwde
add
xor
xchg
daa
jmp
pop
push
mov
push
mov
adc
sub
dec
sbb
test
repz
stos
add
or
mov
add
jb
mov
inc
hlt
in
mov
jge
test
mov
std
(bad)
(bad)
jno
popf
int3
adc
imul
inc
inc
sbb
out
mov
add
jge
add
mov
jne
fwait
dec
and
jp
(bad)
ret
inc
lea
ja
lock
push
mov
jns
sbb
or
mov
sahf
out
add
add
call
or
mov
out
inc
mov
add
add
add
add
retf
cld
lea
sbb
push
sub
rcl
in
in
adc
test
retf
and
push
xor
push
pop
mov
sub
(bad)
inc
dec
adc
scas
out
mov
lods
mov
js
call
pop
lock
sbb
inc
mov
add
mov
jne
xor
scas
add
adc
lock
imul
push
mov
cs
or
mov
(bad)
(bad)
(bad)
jno
int
adc
addr16
jge
push
scas
std
jne
add
or
sbb
jne
pusha
mov
sbb
adc
add
or
outs
jo
mov
out
or
pop
sub
call
sbb
add
jae
xchg
jo
jmp
bound
scas
mov
pop
mov
adc
data16
lea
sub
call
mov
popf
lahf
cmp
je
lods
(bad)
or
pop
ja
or
cli
mov
lods
add
or
cmp
retf
ret
cmp
mov
mov
mov
jbe
sbb
gs
fstp
add
idiv
push
or
mov
lea
push
sbb
mov
das
add
lods
mov
add
lods
mov
jmp
fnstsw
mov
(bad)
leave
das
add
mov
aaa
pop
dec
add
adc
retf
jmp
jbe
or
cmp
xor
leave
repz
hlt
jmp
jae
cmp
inc
jmp
data16
add
add
add
aad
jbe
dec
jnp
mov
hlt
mov
jne
or
clc
je
pop
ins
add
nop
jne
add
movs
jae
fild
or
pop
jg
xor
in
sub
mov
push
out
int3
fwait
mov
pushf
mov
mov
sub
xor
add
jmp
add
cmps
shl
add
ja
add
lods
mov
lea
pop
ret
mov
push
jne
test
xor
pop
inc
les
stos
call
mov
repz
xlat
stos
or
add
stos
jae
sbb
loope
je
sub
out
xor
retf
hlt
mov
inc
xchg
or
xchg
loope
mov
cmps
loope
out
movs
add
int
or
push
and
fsub
add
jecxz
xor
inc
test
adc
add
cli
dec
jne
cwde
jo
add
ret
inc
out
call
mov
xchg
adc
(bad)
mov
and
mov
sbb
add
xor
sbb
daa
inc
or
movs
or
(bad)
cmp
xchg
xor
stos
hlt
mov
dec
jne
sbb
add
jno
add
or
mov
(bad)
jne
and
fsub
add
imul
add
in
xor
sbb
adc
inc
popa
test
inc
dec
push
call
pop
or
bound
dec
bound
mov
inc
or
pop
adc
(bad)
sub
mov
fwait
add
sbb
sbb
sub
call
frstor
add
mov
and
mov
jmp
dec
jne
add
popf
xchg
or
push
mov
mov
mov
and
lea
inc
mov
(bad)
ins
in
call
pop
jmp
clc
mov
add
jmp
dec
add
lods
mov
ins
add
sbb
daa
inc
in
adc
mov
inc
or
push
push
mov
pop
leave
add
and
add
inc
push
mov
movs
xchg
inc
sbb
inc
dec
push
loope
add
lods
mov
inc
add
ss
into
das
add
dec
mov
daa
inc
add
movs
xchg
(bad)
jmp
add
in
inc
pop
test
scas
mov
imul
add
mov
add
add
rol
sbb
add
(bad)
call
sbb
inc
xor
call
daa
fld
inc
or
das
jne
dec
add
mov
arpl
cmp
dec
add
or
and
imul
lahf
imul
add
rcl
cmp
(bad)
add
out
or
fcmovbe
push
xor
shr
xor
cmp
xchg
sbb
movs
daa
(bad)
mov
cmps
cmp
call
sbb
xchg
or
push
push
xor
inc
mov
(bad)
pop
xor
scas
add
add
and
call
mov
call
lods
int
mov
mov
(bad)
scas
jmp
mov
addr16
adc
add
jmp
add
scas
add
mov
in
push
inc
push
push
sbb
cmc
push
mov
test
inc
clc
add
cmps
inc
sbb
xchg
jge
scas
movs
jmp
jmp
jmp
fdivr
jae
sub
push
es
int
xchg
and
mov
or
xchg
and
in
lahf
push
std
call
cwde
or
retf
movs
push
ins
pusha
cld
lea
add
inc
dec
call
pop
mov
or
sahf
stos
jmp
call
sub
movs
mov
pop
push
adc
sub
or
xchg
clc
jmp
and
xchg
jmp
shl
or
mov
movs
inc
push
push
popf
xor
inc
add
push
and
clc
mov
pop
jne
(bad)
addr16
call
push
jno
pop
ins
sbb
push
(bad)
hlt
lea
clc
mov
inc
and
adc
sti
jle
sti
inc
movs
mov
and
sbb
aad
inc
xchg
jge
adc
out
add
inc
adc
jmp
mov
cli
jmp
and
or
add
std
jmp
ins
or
scas
icebp
mov
mov
pop
(bad)
adc
retf
pop
jmp
sub
out
(bad)
sub
(bad)
jmp
sti
dec
call
add
stc
inc
dec
jge
stos
cmp
push
mov
scas
pop
ret
call
lea
mov
sub
add
test
add
lahf
mov
shr
stos
mov
test
add
add
inc
and
gs
xchg
scas
add
cmp
add
push
dec
xchg
rep
adc
push
arpl
push
ds
nop
add
push
inc
sbb
test
push
push
jle
add
xchg
adc
xor
jne
and
or
and
call
je
out
out
inc
pop
or
jne
cmp
jmp
cmp
add
int
sbb
sahf
mov
or
(bad)
(bad)
call
cmp
mov
cmp
or
mov
xor
push
mov
jae
sub
stc
call
ins
outs
add
add
mov
in
mov
out
cmp
add
jns
push
jle
std
call
xor
cmps
mov
out
add
push
add
mov
outs
xor
fnsave
sub
jg
or
inc
out
data16
mov
scas
mov
cmp
add
outs
xor
lods
ins
add
outs
lods
push
call
mov
add
push
xor
push
mov
push
inc
dec
(bad)
cmp
or
add
xchg
ss
call
xchg
mov
push
sbb
cmp
mov
mov
das
add
mov
dec
call
mov
mov
or
retf
lods
xchg
sbb
xchg
xchg
cmp
cmp
mov
scas
push
mov
mov
lods
mov
(bad)
je
cmp
lea
mov
aaa
push
sbb
cmp
dec
mov
push
jmp
inc
into
pop
add
pop
jo
pop
lods
add
adc
jmp
out
push
or
mov
dec
mov
push
adc
add
inc
inc
push
push
sbb
data16
and
mov
pop
int
pop
ret
jl
mov
call
lods
dec
mov
ss
cmps
shr
lea
jne
loope
dec
xor
xor
std
jne
popf
call
mov
inc
in
push
(bad)
das
add
scas
xchg
das
gs
add
cmps
sahf
std
ss
aas
call
scas
std
jbe
ss
call
(bad)
or
jmp
add
outs
lods
std
jne
aaa
dec
call
and
nop
push
lods
int3
push
adc
xor
pop
push
shl
lea
cmp
or
or
dec
mov
imul
ds
xor
xor
add
not
call
push
enter
inc
pop
mov
adc
cld
xchg
addr16
inc
jne
sbb
loope
jne
inc
jne
ds
jmp
(bad)
call
adc
std
(bad)
fwait
adc
add
mov
add
add
in
add
lock
retf
push
adc
xchg
push
lods
mov
popf
cmps
or
(bad)
fcmovnu
mov
cs
pop
in
mov
adc
in
inc
and
add
into
adc
popa
inc
mov
xor
stos
das
add
lods
add
mov
push
mov
add
outs
cld
call
fnsave
test
les
cmp
jae
sahf
push
add
inc
xlat
repz
inc
out
mov
pop
leave
aad
or
dec
cmp
call
loope
add
call
movs
(bad)
or
dec
pop
xchg
add
fadd
mov
push
cmp
cs
cmps
(bad)
inc
mov
jne
sbb
and
dec
push
cmp
icebp
data16
add
push
ret
xor
xchg
mov
ds
jmp
addr16
call
pushf
daa
jle
inc
sub
sub
in
add
test
mov
jecxz
xor
shr
sti
inc
add
enter
in
in
aaa
cmp
push
call
popa
push
jge
bound
(bad)
mov
cmp
addr16
mov
loope
xor
or
xor
(bad)
in
fdivr
inc
dec
scas
and
add
retf
loopne
cwde
jg
and
push
add
push
mov
pusha
(bad)
(bad)
jl
pop
mov
inc
mov
cmps
adc
sbb
push
mov
jp
push
ds
cmps
dec
add
aaa
(bad)
jge
push
popa
add
(bad)
mov
shr
loope
xor
sbb
xor
add
sub
ds
jge
jge
cdq
xor
lock
fmul
add
push
mov
inc
or
or
mov
or
stc
mov
pop
in
add
push
jo
add
popa
jl
popf
inc
out
sub
jbe
(bad)
xchg
cld
call
add
push
lds
in
(bad)
call
jo
icebp
xchg
xchg
pop
fs
popf
push
sbb
cmp
std
call
cwde
inc
movs
addr16
nop
xchg
scas
add
scas
ret
cmps
mov
mov
std
jne
cs
frstor
out
test
inc
add
sub
add
scas
add
mov
cdq
mov
popf
es
push
scas
add
popf
ret
les
fs
add
nop
add
lock
add
inc
sub
add
xchg
dec
or
mov
push
mov
xchg
mov
pop
mov
mov
xchg
add
inc
loopne
push
xor
xchg
inc
xor
adc
push
or
push
add
xor
out
pop
lods
xchg
sub
ret
call
popf
and
mov
scas
add
inc
inc
pop
add
lods
cmp
sub
cmp
or
mov
add
ret
add
fdivr
ss
xor
mov
arpl
inc
bound
or
mov
add
mov
or
jge
gs
call
and
pop
cld
jbe
dec
loopne
(bad)
pop
push
(bad)
dec
add
push
push
inc
add
ja
add
fisubr
clc
int3
xor
push
jne
fs
stos
add
(bad)
pushf
jg
push
test
push
mov
in
dec
lea
aad
add
lods
add
or
shl
mov
sub
stos
cmp
add
call
add
mov
inc
ja
lods
cmp
add
rol
push
xchg
xor
pop
popf
jmp
add
out
mov
xor
mov
jmp
lods
mov
ds
jmp
enter
xor
nop
add
add
jmp
and
test
xchg
stos
mov
call
lea
rol
lea
loopne
dec
ins
and
out
ins
(bad)
jmp
data16
cs
jge
push
stos
jmp
sub
scas
(bad)
jmp
ins
and
(bad)
xchg
and
pop
xchg
and
pop
xchg
and
add
cwde
ins
and
xlat
popa
cdq
and
test
in
retf
mov
gs
and
cdq
push
call
xor
and
jle
loope
mov
into
std
(bad)
fst
sub
pusha
inc
adc
in
in
xor
int
jmp
int
and
dec
lods
(bad)
inc
add
daa
mov
xchg
lahf
xchg
lahf
xchg
mov
and
out
add
ins
xchg
mov
call
mov
(bad)
xchg
add
test
call
mov
push
(bad)
jmp
xchg
and
jg
std
jmp
test
jmp
test
sahf
cmp
adc
mov
fucomp
mov
add
cmp
es
add
inc
es
(bad)
sar
push
call
pop
out
in
cmc
mov
mov
mov
std
dec
pop
cdq
adc
(bad)
mov
dec
add
cli
stc
dec
pop
sbb
call
add
inc
fs
outs
push
adc
outs
ins
mov
pop
ret
call
in
fmul
inc
sbb
int
in
inc
mov
mov
pop
inc
and
stc
inc
pop
mov
inc
push
push
inc
adc
movs
and
(bad)
and
add
mov
mov
sbb
and
scas
add
fisubr
verr
mov
dec
and
pop
aad
mov
icebp
mov
mov
add
out
test
or
xor
les
mov
les
mov
les
add
mov
les
mov
lds
cmp
mov
mov
(bad)
loope
call
xor
or
sub
pop
sbb
add
scas
add
pushf
mov
pop
mov
out
out
add
dec
outs
add
jmp
add
mov
jo
cmp
pop
add
pop
fild
xchg
scas
cmp
jmp
je
mul
stos
fld
xor
add
push
aam
call
sub
es
lds
sbb
std
add
sbb
inc
jmp
jae
scas
sbb
add
add
mov
cmp
add
xor
cvtpi2ps
jmp
push
iret
std
call
and
loop
fcom
in
adc
cmp
sbb
(bad)
call
lods
add
sbb
push
add
mov
sub
(bad)
std
jns
and
jnp
push
add
inc
mov
inc
cwde
je
loop
jno
sar
push
test
push
dec
fs
in
cmp
cmps
shr
pop
mov
add
lods
call
mov
xor
imul
cmp
call
jmp
inc
adc
sub
sub
test
push
sub
fistp
cmp
lods
add
dec
icebp
mov
lods
add
mov
mov
pop
out
mov
add
xor
in
pop
mov
in
mov
add
lods
add
xor
std
jmp
sub
out
push
(bad)
aad
std
call
push
inc
fs
push
inc
or
pop
leave
xchg
xor
mov
add
es
je
sub
or
(bad)
jge
xchg
cmps
add
out
inc
fs
shl
cmc
mov
fucom
popa
mov
jp
add
imul
jne
iret
test
(bad)
or
mov
mov
or
add
sub
mov
pop
in
add
push
inc
not
add
daa
jo
cmp
in
shr
sti
sub
mov
sti
adc
sub
(bad)
stos
cmp
jmp
mov
sub
das
or
inc
pusha
sub
adc
mov
call
cmp
fimul
cmp
fiadd
inc
mov
jmp
mov
xchg
xor
add
sahf
std
test
fstp
push
push
xor
ror
cmp
aam
jmp
mov
ds
cmc
inc
add
sbb
(bad)
jb
es
add
(bad)
sbb
pop
add
ret
adc
mov
sub
lahf
test
or
add
add
add
add
sub
or
jns
cmc
cmp
inc
popf
fst
dec
mov
call
(bad)
std
push
fnstsw
cmp
adc
je
leave
lds
mov
add
xchg
jle
(bad)
call
test
jge
scas
adc
jmp
push
add
ins
call
int3
mov
add
add
in
repz
(bad)
call
add
dec
test
inc
xchg
dec
in
xchg
mov
fcomi
and
pop
in
jmp
call
mov
daa
pop
cld
dec
cs
and
test
dec
jmp
push
mov
add
sub
lea
dec
iret
fld
add
js
add
and
mov
cmps
mov
add
fs
add
push
rol
or
scas
jae
push
push
test
add
push
repz
sub
je
sbb
test
scas
add
and
mov
or
add
ds
aam
add
dec
jmp
das
jge
imul
lea
cld
shr
nop
mov
push
test
imul
inc
or
es
add
xchg
lods
les
adc
sbb
out
cmp
mov
add
ins
dec
mov
ds
(bad)
idiv
ret
inc
add
sub
test
test
cmps
scas
add
cs
(bad)
jmp
(bad)
(bad)
push
mov
dec
aam
in
add
inc
call
jmp
mov
jmp
push
in
xchg
push
dec
(bad)
jp
inc
cmp
in
lea
test
mov
add
add
imul
call
mov
inc
pusha
out
push
mov
cmp
(bad)
call
sbb
push
dec
sbb
add
retf
adc
(bad)
popa
sub
inc
mov
inc
cmp
and
shl
add
cmp
add
shl
jge
mov
add
data16
jmp
adc
inc
or
mov
mov
mov
sub
mov
es
call
pop
imul
(bad)
out
nop
jp
cmps
pop
lea
push
(bad)
call
or
mov
neg
dec
les
add
stos
call
(bad)
rol
(bad)
inc
xchg
push
lods
mov
mov
(bad)
call
int3
ins
in
lahf
lods
add
sbb
jo
lods
add
cmc
and
scas
ins
(bad)
mov
bound
int3
out
mov
cmp
mov
push
(bad)
push
push
inc
nop
add
neg
dec
mov
bound
add
push
inc
js
xchg
push
lea
(bad)
call
sub
mov
mov
dec
test
imul
inc
scas
call
(bad)
jecxz
(bad)
jmp
sar
push
and
call
(bad)
mov
gs
push
push
xchg
add
rol
and
push
mov
xchg
(bad)
ds
or
(bad)
pop
(bad)
push
push
inc
mov
xchg
push
or
mov
inc
pop
(bad)
mov
jle
or
cmps
pop
push
mov
mov
inc
pop
pop
call
pop
sti
mov
sub
pop
(bad)
shl
fucomp
add
inc
add
test
add
and
or
mov
test
in
pop
push
dec
cs
mov
pop
inc
inc
or
stos
mov
(bad)
and
jmp
popa
jno
pop
and
int
data16
je
mov
test
add
pop
push
adc
inc
pop
stc
add
adc
in
and
mov
je
out
jmp
ror
or
ss
or
(bad)
(bad)
fucomip
fimul
add
inc
inc
(bad)
push
xchg
hlt
int
ja
(bad)
push
or
push
pop
or
add
mov
call
add
add
add
xchg
jl
dec
and
inc
(bad)
xor
neg
and
push
mov
sbb
(bad)
push
xor
push
xor
loopne
outs
mov
add
cmps
pop
out
xchg
mov
add
mov
cmp
call
in
jno
fnstenv
push
into
ja
inc
push
pop
dec
xchg
mov
add
jl
mov
push
loopne
add
mov
loop
call
call
dec
push
inc
mov
pop
mov
inc
inc
xchg
dec
pop
add
jo
(bad)
ds
dec
cmps
(bad)
cmp
add
sub
cwde
inc
pop
pop
out
or
or
add
out
add
add
lock
out
ins
mov
ds
test
push
cmp
int
add
dec
ins
jno
call
stc
inc
fistp
(bad)
int3
jno
xchg
dec
inc
je
das
stc
sub
mov
stc
repz
je
in
jmp
mov
(bad)
mov
je
sbb
mov
add
aaa
ja
sub
sub
out
and
std
jae
or
ror
add
out
add
das
inc
mov
int3
mov
or
in
gs
mov
cmp
push
addr16
push
outs
mov
xchg
and
cmp
mov
cli
add
es
add
mov
ficom
sub
out
test
inc
add
(bad)
lods
out
out
add
push
inc
sub
cmp
in
mov
mov
fiadd
jecxz
outs
and
in
in
pusha
mov
jbe
(bad)
or
aam
jae
jge
fnsave
mov
xchg
gs
push
push
push
fst
jbe
add
push
je
(bad)
xor
imul
adc
jmp
mov
mov
push
mov
enter
das
jge
dec
push
loop
mov
ficomp
mov
inc
in
pop
inc
inc
or
dec
or
add
add
add
add
cli
add
jo
mov
out
or
fild
add
jnp
add
not
lods
mov
ss
call
mov
add
imul
iret
push
loope
jmp
xchg
ja
mov
(bad)
jmp
fst
push
aaa
das
inc
mov
add
inc
mov
stos
add
cmp
sub
add
scas
xchg
xor
pop
(bad)
mov
pop
mov
xor
imul
add
sub
inc
mov
in
or
(bad)
mov
arpl
or
jecxz
add
mov
out
add
cs
jmp
inc
out
fnsave
mov
inc
inc
or
dec
cmc
sub
pop
xchg
iret
jg
mov
adc
out
push
cmp
cmp
inc
test
dec
retf
call
sbb
add
in
movs
push
bound
ret
jg
(bad)
call
cmc
mov
add
add
add
add
sar
jle
jecxz
lea
sub
jmp
outs
or
fwait
adc
xor
jbe
pop
cmp
push
stos
add
fsub
mov
bound
jecxz
cmp
inc
add
lea
loope
dec
cli
loopne
call
outs
or
out
lea
add
and
inc
mov
jne
les
mov
ror
cmp
sbb
(bad)
call
cdq
jp
test
add
push
mov
xchg
cdq
inc
pushf
in
std
dec
shr
movs
push
call
and
inc
sub
or
inc
pop
xchg
jbe
retf
(bad)
pop
cmp
and
push
push
inc
dec
test
jno
rcr
(bad)
push
int3
scas
mov
ds
inc
jmp
ret
(bad)
call
in
xchg
and
xor
sbb
inc
push
dec
pop
mov
repz
inc
std
mov
(bad)
jne
jne
cld
pop
mov
add
sar
adc
dec
cld
add
and
test
dec
aam
loope
add
pop
sub
jmp
stos
add
sbb
mov
movs
mov
xor
fmul
adc
inc
inc
push
lea
pop
mov
push
test
or
add
shr
mov
jmp
call
push
inc
inc
rol
retf
stos
std
jmp
scas
cmp
inc
inc
fcomp
fadd
mov
mov
mov
(bad)
cmps
pop
push
(bad)
pop
iret
hlt
mov
call
addr16
push
push
scas
mov
xchg
in
mov
jbe
int3
aad
push
mov
inc
pop
cld
scas
xchg
sar
push
inc
ret
call
ins
add
mov
add
cmps
dec
pop
pop
add
mov
scas
mov
cmps
dec
pop
sbb
push
push
mov
inc
mov
cmps
data16
xchg
scas
mov
or
shr
pop
inc
test
xor
inc
or
xchg
lock
or
in
loope
add
dec
add
cmps
push
pop
setnp
lock
jmp
inc
or
add
mov
shr
je
cs
and
mov
stc
mov
adc
and
test
call
in
jmp
in
jmp
in
jmp
out
jmp
sub
outs
fcmove
sub
add
push
dec
scas
lds
push
sub
push
and
mov
popa
mov
lods
test
push
sub
dec
push
inc
push
nop
(bad)
cdq
jmp
mov
out
add
pop
push
popa
ficom
push
or
add
inc
dec
nop
ds
inc
jmp
call
add
jge
push
jge
std
jne
jle
inc
mov
call
jecxz
inc
mov
pop
or
mov
call
mov
dec
cs
adc
retf
int
add
add
aas
dec
enter
add
dec
push
(bad)
inc
add
add
(bad)
(bad)
cmp
inc
lods
pop
test
inc
mov
arpl
add
stos
mov
gs
jmp
cmps
stos
ret
in
mov
jle
jle
cmps
inc
clc
mov
push
push
mov
je
ds
call
mov
jmp
(bad)
ds
add
aam
std
jmp
xchg
std
(bad)
stos
or
add
inc
shr
mul
clc
push
and
add
jae
sbb
mov
inc
inc
fcomp
mov
(bad)
pop
xlat
stos
add
loopne
(bad)
jecxz
xchg
jle
inc
inc
inc
or
cli
add
add
mov
push
push
je
cdq
inc
inc
or
bound
push
stos
test
popa
ds
and
bswap
fld
add
add
push
add
scas
ret
lods
add
cdq
add
push
jnp
push
inc
dec
mov
inc
ja
inc
outs
aad
(bad)
call
add
mov
fxam
(bad)
test
mov
popa
jns
adc
inc
xchg
popa
cli
jle
test
push
sbb
jnp
inc
dec
fdivr
mov
xor
push
inc
xor
pop
inc
inc
fadd
mov
add
dec
out
cmp
call
add
lods
jb
push
aad
mov
popf
mov
adc
aaa
or
inc
lods
sub
cmp
or
push
ror
jp
xlat
sub
sti
fstp
mov
jmp
sub
jge
xlat
xor
add
je
dec
or
in
cmp
aaa
add
call
add
adc
std
addr16
leave
inc
add
add
dec
add
mov
cmp
jle
inc
ret
or
mov
push
fisttp
mov
cld
mov
out
lea
scas
mov
ss
mov
sbb
stc
pop
sti
mov
call
stc
add
add
push
(bad)
sub
std
loopne
dec
mov
inc
les
push
add
push
aad
imul
cmp
call
adc
std
push
popf
push
sub
loopne
mov
xor
in
xchg
push
inc
sti
sbb
add
add
add
add
xor
add
aaa
inc
hlt
jge
add
jne
jmp
xlat
scas
add
jge
pop
pop
outs
add
jmp
jmp
(bad)
sub
(bad)
jmp
outs
in
mov
in
or
inc
fs
pop
jne
jl
ret
fdiv
ret
bound
add
add
add
add
fist
push
jmp
inc
(bad)
ss
call
lods
mov
inc
sub
dec
lock
in
icebp
(bad)
fisttp
into
scas
sub
add
ss
inc
ds
retf
call
xchg
mov
push
call
add
cmp
mov
std
jmp
mov
sbb
add
inc
imul
add
scas
mov
inc
sbb
rcl
in
call
sub
mov
xchg
mov
ret
inc
add
data16
cmp
ss
adc
jno
pop
xchg
dec
(bad)
jbe
sub
dec
add
adc
pop
jle
add
add
(bad)
jne
scas
mov
dec
push
jge
cmp
scas
jmp
lock
movsx
clc
std
out
loope
jmp
js
test
(bad)
(bad)
and
sbb
adc
sub
enter
call
pop
in
cmp
sub
std
lods
xor
lahf
mov
dec
adc
add
mov
mov
(bad)
movs
out
in
pop
jmp
push
ror
mov
xor
or
add
cmps
icebp
enter
push
mov
push
mov
call
add
mov
jecxz
add
cwde
enter
push
mov
adc
inc
inc
push
leave
sub
inc
sar
jmp
dec
adc
sar
push
sub
cmp
pop
(bad)
call
dec
inc
sbb
in
pop
pop
movs
movs
add
sub
add
or
add
in
pop
add
call
lock
add
add
outs
add
movs
sbb
adc
mov
dec
mov
mov
es
push
mov
daa
ja
push
pop
cmp
push
mov
mov
fisttp
sub
add
fbld
je
daa
pop
jmp
daa
por
ror
add
add
add
mov
inc
(bad)
cmp
sub
mov
cmp
rcl
data16
test
pop
clc
das
aad
call
icebp
jmp
leave
gs
mov
dec
sub
mov
mov
stos
enter
add
sub
cmp
ss
call
jl
push
iret
sbb
add
add
add
pusha
mov
(bad)
out
(bad)
cmp
(bad)
jmp
xlat
cli
mov
popf
out
rol
jae
sub
in
(bad)
mov
pop
pop
fisttp
inc
(bad)
and
sbb
add
mov
test
std
inc
mov
movs
add
sbb
jmp
mov
add
in
add
sbb
mov
dec
retf
mov
jne
and
and
in
adc
mov
add
push
mov
ds
test
in
pop
mov
mov
mov
jge
dec
xchg
add
scas
mov
and
push
jmp
call
mov
add
inc
(bad)
jo
dec
sub
mov
inc
xchg
scas
push
or
mov
inc
adc
sbb
add
test
push
ss
inc
loop
push
scas
mov
adc
xor
(bad)
sub
and
pop
jo
sub
jb
es
dec
ror
cmp
mov
push
inc
rol
jbe
dec
cwde
scas
sub
mov
scas
mov
stc
in
sub
in
mov
pop
cmp
xchg
retf
and
sbb
rcl
pop
sbb
(bad)
in
inc
test
xchg
sbb
adc
loopne
lea
add
add
ja
sbb
data16
push
mov
nop
pop
in
cdq
out
pop
mov
add
push
stos
pop
add
icebp
mov
stos
ja
push
popf
addr16
movs
pop
mov
daa
pop
lock
pop
int
jmp
das
(bad)
jmp
jnp
icebp
gs
add
(bad)
std
mov
jb
cmps
fcom
push
push
in
jmp
add
adc
add
sbb
jecxz
lea
cld
in
pop
lods
add
push
test
test
mov
push
ins
repnz
fucom
or
push
out
and
hlt
mov
lods
pop
adc
out
call
in
add
add
(bad)
mov
gs
add
(bad)
daa
(bad)
je
adc
out
push
(bad)
lods
ret
sub
jno
sbb
fimul
mov
mov
enter
add
xchg
and
pop
add
imul
inc
jb
mov
mov
fcom
test
fadd
xchg
mov
arpl
add
es
adc
lds
mov
xchg
js
push
and
(bad)
jmp
pushf
std
mov
in
cmp
fadd
fistp
call
stc
add
out
push
push
fist
dec
test
test
xchg
stos
mov
mov
add
add
add
add
add
repnz
test
sub
jge
jbe
(bad)
in
mov
push
je
popf
push
in
pusha
test
mov
out
dec
sbb
inc
adc
lods
jg
mov
stos
add
and
jns
inc
xchg
clc
cmp
or
sub
dec
in
in
add
ficom
add
in
mov
leave
jbe
xchg
shl
sub
jbe
pop
jge
or
(bad)
(bad)
xor
lock
cwde
int3
test
icebp
cmp
push
gs
in
std
mov
push
dec
shr
add
lods
in
mov
add
mov
cmp
add
icebp
pop
mov
pop
mov
pop
popa
jae
in
repnz
ins
in
or
push
ds
add
lock
and
in
in
add
mov
add
or
jmp
mov
mov
inc
pop
(bad)
push
pop
mov
xor
call
and
pop
sbb
test
call
add
add
add
fwait
pop
(bad)
dec
fld
jae
jb
(bad)
lods
pop
add
cmp
out
sub
enter
test
add
enter
stos
in
(bad)
mov
mov
movs
mov
mov
sbb
mov
cmp
mov
jmp
inc
fsubr
icebp
jno
int
in
fwait
sbb
inc
add
jb
inc
in
xor
cmp
add
inc
jmp
jne
add
(bad)
mov
(bad)
jne
pusha
in
pop
mov
sub
cmp
jbe
push
lar
push
add
jmp
test
sahf
mov
or
loopne
jnp
inc
add
call
jne
cmp
add
xor
sbb
cmc
add
mov
(bad)
push
pop
jne
sub
call
dec
mov
fdivr
adc
add
(bad)
pop
mov
scas
push
mov
out
xchg
jae
push
cmp
add
add
add
dec
xchg
cmp
ja
(bad)
dec
jge
cmp
(bad)
inc
add
adc
sub
(bad)
jmp
imul
repz
jge
cmp
jno
xor
mov
das
xchg
add
add
sub
fild
je
and
mov
ds
add
push
jae
in
iret
mov
add
dec
ds
jmp
aaa
pop
or
add
(bad)
fsub
add
dec
sbb
add
pop
mov
mov
add
add
ins
in
in
aad
add
add
add
add
repz
jmp
cmp
ins
test
xchg
lods
add
lods
std
xor
mov
cmp
inc
add
fstp
add
mov
xchg
ss
sbb
add
xor
add
and
std
mov
mov
xchg
sub
add
mov
adc
call
push
ins
out
call
repz
lds
(bad)
call
xor
(bad)
mov
add
push
pusha
mov
inc
and
cdq
add
das
mov
lea
stos
call
mov
das
mov
lea
add
lods
add
fwait
xor
jne
add
jmp
add
xchg
mov
(bad)
jmp
xor
adc
inc
(bad)
sti
mov
das
mov
lea
xor
or
stos
add
add
(bad)
jmp
stos
std
jbe
add
mov
xor
jbe
push
adc
add
dec
enter
add
mov
adc
dec
and
add
add
sbb
mov
imul
stos
mov
hlt
inc
cld
and
stc
push
sbb
mov
pop
(bad)
jae
inc
inc
ins
jmp
add
and
jmp
xchg
mov
fistp
mov
xchg
mov
and
cli
dec
xor
add
cmp
mov
ds
add
push
add
add
stos
push
mov
add
and
inc
daa
jge
in
cmp
mov
arpl
(bad)
inc
add
sti
in
daa
stos
add
ds
(bad)
(bad)
aas
iret
(bad)
inc
fs
es
sbb
jno
xchg
sti
cmp
jg
call
dec
pop
mov
repz
(bad)
call
jle
call
or
call
test
loop
inc
(bad)
inc
add
and
dec
xor
dec
or
dec
mov
sub
call
jmp
shl
add
mov
dec
(bad)
ins
mov
push
test
stc
add
push
jge
add
jmp
sbb
jmp
and
lea
(bad)
jmp
inc
mov
std
inc
add
fimul
jle
(bad)
jmp
(bad)
std
jo
std
sub
inc
je
inc
jnp
push
dec
fs
jmp
rcr
imul
into
or
es
jo
std
sub
jne
std
je
jbe
xor
es
dec
add
rcl
push
add
ds
inc
inc
std
inc
std
mov
pop
xor
mov
xchg
jne
popa
mov
sbb
push
jmp
push
sub
test
inc
stos
mov
and
stc
call
frstor
inc
add
mov
ret
or
push
mov
es
movs
add
mov
sub
or
add
xor
repz
sub
sub
inc
sub
mov
push
lea
mov
outs
push
cmp
fwait
jbe
dec
dec
idiv
xchg
es
pop
bnd
dec
jae
mov
lahf
dec
adc
std
je
test
call
fbld
dec
adc
mov
mov
sahf
(bad)
jne
add
ds
call
inc
sbb
jo
pop
mov
scas
cmp
push
mov
test
imul
mov
inc
repz
sbb
movs
jbe
movs
mov
jne
das
arpl
out
push
push
pop
dec
clc
push
push
add
add
xchg
lods
add
cmps
in
add
mov
jmp
mov
add
data16
ds
outs
adc
add
data16
sub
add
es
adc
mov
mov
in
stos
xor
cmp
xchg
mov
add
inc
adc
add
and
cwde
cmp
daa
mov
pop
out
mov
pop
jmp
jmp
ror
mov
ins
stos
xor
dec
sbb
scas
lods
rcr
(bad)
sbb
jno
sbb
in
cmp
jle
call
addr16
add
push
pop
push
mov
add
ds
fcom
aad
jne
and
iret
addr16
call
popf
movs
mov
push
mov
and
mov
push
enter
jmp
scas
mov
cmps
or
lea
mov
push
push
mov
out
rcl
jmp
sbb
ret
add
or
mov
jmp
inc
sbb
leave
mov
and
fild
pop
and
in
(bad)
fistp
ins
repnz
(bad)
(bad)
jno
popf
stos
jmp
add
add
hlt
iret
jge
je
arpl
fucomi
mov
and
add
ds
add
(bad)
pop
mov
add
fdivr
(bad)
call
(bad)
fmul
in
loope
push
sbb
pop
dec
or
pop
inc
adc
ins
loope
iret
outs
add
pop
pop
xor
pop
mov
mov
pop
(bad)
lea
and
out
imul
add
adc
inc
clc
fwait
jmp
in
mov
lahf
ins
in
mov
mov
pop
jne
(bad)
ins
icebp
mov
in
jne
outs
sbb
(bad)
test
in
call
dec
shl
push
(bad)
test
inc
jmp
pop
(bad)
pop
loopne
enter
jmp
push
push
mov
xchg
test
add
sub
xor
fnsave
inc
hlt
out
fs
cmp
ins
add
inc
push
mov
mov
stc
or
es
inc
(bad)
cli
loope
pop
fadd
push
popf
cmc
mov
pop
push
mov
out
push
xor
or
stc
mov
inc
ficomp
sub
sbb
add
dec
repnz
pop
xchg
lods
add
add
add
icebp
je
mov
add
jge
mov
sbb
jmp
add
cmps
inc
add
pushf
in
outs
mov
mov
sbb
je
sbb
and
sar
popf
jbe
fwait
(bad)
jno
lods
scas
jmp
js
add
sbb
je
sbb
adc
test
inc
pop
ret
or
jmp
sbb
(bad)
fsubr
(bad)
jne
push
(bad)
jne
div
cmps
scas
add
push
inc
or
push
or
jmp
je
shrd
out
push
mov
jmp
inc
push
rol
fwait
in
add
repnz
dec
pop
push
inc
stc
iret
ins
(bad)
stos
icebp
jle
sub
fst
in
aad
ja
jge
scas
push
(bad)
jmp
jge
call
ror
sub
jl
mov
repnz
push
xor
dec
fistp
rcr
call
das
fisttp
add
jmp
inc
cmps
mov
and
push
(bad)
fist
je
repz
adc
(bad)
pop
outs
bnd
int
in
daa
repz
popf
fcomp
stos
pop
std
(bad)
out
out
push
mov
das
jmp
inc
push
mov
fadd
cs
pusha
push
fld
add
mov
std
mov
shl
div
push
gs
lods
mov
das
rcl
add
sub
sub
adc
(bad)
jmp
jae
sub
mov
ins
cmp
aam
mov
bound
call
pop
dec
cld
push
loopne
(bad)
out
sub
ret
push
out
xor
add
cmps
icebp
jne
ja
pop
xadd
jmp
adc
sbb
push
sbb
and
and
pop
cdq
push
and
mov
jbe
(bad)
call
adc
cmp
rcr
out
add
jbe
pop
dec
mov
add
stos
push
mov
pop
sbb
add
push
sbb
xchg
adc
xor
dec
dec
mov
fiadd
pop
lods
add
loope
and
add
imul
jbe
icebp
push
and
ja
adc
inc
mov
retf
xchg
adc
mov
int3
xchg
mov
not
add
call
add
jmp
add
les
or
dec
or
icebp
mov
cmp
inc
sub
ret
fisub
mov
add
lea
mov
(bad)
mov
sbb
add
es
xchg
fsub
or
popf
std
jmp
sub
cmp
add
mov
je
stos
add
sbb
lds
xchg
jnp
out
mov
(bad)
stos
push
mov
jb
dec
sti
jno
sub
push
push
cmp
mov
iret
pop
and
js
mulps
inc
jb
add
push
daa
dec
or
jp
mov
cmp
add
fist
jge
rcl
mov
mov
sbb
xchg
sar
push
sub
or
xor
xchg
jmp
lahf
mov
pop
add
push
mov
mov
mov
xchg
leave
add
inc
mov
pop
add
inc
retf
ret
add
cmc
jb
jle
es
call
or
mov
mov
fcomi
jno
test
jbe
adc
call
push
vfrczpd
pop
adc
mov
push
lods
add
mov
mov
(bad)
jns
mov
(bad)
test
outs
sbb
add
ds
add
sbb
add
fbld
add
sbb
add
xchg
xchg
inc
adc
mov
jnp
cmps
inc
cli
jmp
adc
gs
aaa
out
lea
jmp
call
jne
pand
add
push
sub
and
popf
gs
add
add
add
add
test
call
mov
and
fsubr
adc
fsubp
add
fsubrp
inc
adc
sbb
loope
add
into
in
add
in
inc
adc
adc
scas
scas
std
inc
retf
adc
jge
(bad)
call
inc
mov
dec
or
cmps
or
add
inc
imul
cdq
mov
dec
outs
jmp
inc
adc
sub
dec
dec
xor
or
mov
add
and
xor
std
scas
mov
lea
mov
mov
inc
adc
bound
call
mov
std
jmp
shr
mov
add
add
xchg
push
ror
add
sbb
xchg
cmp
dec
cs
inc
xchg
adc
stos
add
in
std
push
stos
out
dec
int
add
inc
cmp
inc
adc
arpl
mov
mov
or
xchg
imul
pop
mov
dec
and
add
add
add
add
lea
mov
mov
dec
sbb
popa
add
fisub
adc
retf
pop
sbb
mov
xchg
mov
add
les
and
std
jmp
jnp
in
(bad)
jnp
sahf
mov
pop
fnstsw
mov
std
inc
add
dec
es
sbb
push
mov
mov
and
adc
cmp
je
mov
mov
movs
mov
rol
pop
bound
mov
mov
push
or
adc
sbb
inc
sbb
je
je
and
jae
mov
add
pushf
mov
add
jmp
add
scas
sub
jmp
dec
xor
ret
add
rcl
add
test
data16
jnp
int
add
xchg
mov
clc
sbb
xor
imul
in
cmp
mov
mov
lods
scas
xor
push
int3
add
sahf
sub
add
int3
mov
mov
add
test
add
stos
mov
dec
sti
sub
movs
cld
mov
jle
stc
inc
push
(bad)
mulps
call
xchg
sbb
in
call
inc
xor
add
aad
add
cs
stos
mov
sub
push
movs
test
popa
mov
push
mov
cmp
add
pop
xor
popa
mov
jns
stos
je
pop
ins
stc
jbe
add
add
jmp
fwait
in
loope
add
and
ds
jmp
ins
stc
cmp
cmps
je
sbb
mov
or
sbb
mov
inc
mov
inc
and
push
cmp
add
imul
mov
pop
inc
adc
ins
stc
jbe
jg
cld
int
add
dec
stos
add
and
popf
imul
jno
cmp
pop
or
sub
cmp
stos
add
pop
imul
push
mov
cvtps2pd
inc
adc
ins
stc
mov
add
popf
cmp
pop
xor
shl
je
int
stc
jbe
add
add
dec
and
pop
lahf
cmp
ds
jmp
cmp
iret
dec
stc
cmp
jbe
mov
mov
mov
sbb
jo
dec
inc
cmp
sahf
movs
or
fnstcw
add
add
movs
cmp
outs
adc
sub
jae
jge
stc
mov
mov
(bad)
jbe
fadd
das
outs
sub
and
nop
mov
std
call
mov
cmps
data16
mov
mov
test
mov
add
ins
adc
dec
mov
add
imul
es
sbb
pop
lds
dec
dec
stc
mov
add
pusha
(bad)
jbe
fldcw
push
mov
pop
pop
outs
sub
jmp
adc
loop
sbb
push
cmp
and
std
sbb
out
dec
and
mov
inc
retf
jne
fld
xor
mov
add
pop
push
mov
pop
push
sub
mov
cld
jbe
jae
ds
add
pop
mov
mov
inc
sbb
add
cmp
mov
cmp
dec
adc
xchg
fsubr
dec
aam
dec
or
imul
add
add
aaa
dec
or
or
sbb
push
xor
mov
inc
retf
xor
scas
add
adc
mov
inc
ins
das
dec
sub
jg
jmp
fisttp
mov
pop
icebp
je
movs
inc
add
mov
inc
add
sbb
jle
es
ja
cdq
ss
jmp
cs
add
mov
adc
(bad)
(bad)
pop
or
in
shr
xchg
mov
add
ret
lea
ins
std
pop
out
cs
add
lods
cmp
pop
lods
call
or
add
cmp
add
add
add
push
mov
fbld
add
ins
mov
leave
and
mov
in
inc
inc
stos
pop
(bad)
jmp
icebp
jle
gs
cmp
add
push
dec
adc
ja
mov
mov
adc
rol
dec
adc
sahf
xor
or
add
mov
dec
or
popf
or
fnstcw
push
xor
mov
inc
push
inc
adc
jp
mov
rol
dec
adc
dec
xor
or
dec
adc
sub
dec
or
popf
mov
ss
or
mov
inc
cli
aam
sldt
or
mov
ror
clc
jnp
test
dec
adc
imul
inc
sbb
jmp
inc
retf
sar
jle
stos
or
jmp
repz
sbb
mov
enter
repz
cmp
call
inc
sbb
icebp
push
test
add
pop
add
xchg
mov
dec
movs
cmp
mov
mov
(bad)
call
or
jno
idiv
and
pop
inc
sbb
jno
test
or
inc
and
pop
sbb
push
shr
dec
inc
add
imul
mov
xor
je
pop
(bad)
jbe
mov
(bad)
jbe
mov
and
outs
cs
jno
scas
push
or
out
addr16
outs
pop
ret
mov
scas
ror
jg
outs
pop
inc
(bad)
ins
je
push
arpl
std
idiv
push
add
mov
xor
call
test
mov
fsubr
add
sub
add
jns
inc
xchg
add
or
pop
inc
fwait
test
mov
leave
sub
fwait
test
jns
lahf
aas
imul
dec
mov
mov
sub
add
add
add
add
inc
js
ja
pop
push
pop
mov
gs
mov
push
mov
or
ins
xor
push
pop
inc
imul
nop
mov
mov
xchg
bnd
popa
in
sub
jne
lods
lods
and
scas
add
fild
mov
mov
cmp
inc
dec
mov
push
mov
add
and
add
lds
scas
imul
pop
or
add
scas
adc
mov
push
test
add
add
sub
out
inc
mov
xchg
aas
add
push
mov
push
inc
in
add
mov
cmp
add
add
inc
int3
mov
xor
add
inc
pop
stos
jae
push
pop
add
stos
jae
movs
pop
add
stos
jae
xchg
pop
add
test
add
test
add
test
outs
mov
sbb
(bad)
lea
push
sbb
fstp
jno
pop
sar
add
or
inc
xchg
pop
add
sbb
mov
(bad)
je
dec
push
jo
fild
or
rcl
push
test
sar
call
cmp
mov
jae
pop
pop
out
push
mov
das
jmp
jle
add
cmp
pop
pop
cmp
jo
mov
addr16
add
rol
mov
xchg
shl
inc
cmp
or
(bad)
pop
in
sub
inc
mov
popa
jnp
(bad)
push
imul
xor
mov
dec
fldcw
xlat
int
sbb
mov
and
sub
out
push
mov
inc
inc
psubsw
jge
cmp
ins
(bad)
not
jne
dec
dec
mov
fwait
retf
fbstp
mov
jle
push
add
pusha
inc
add
push
inc
add
inc
cmc
add
mov
xchg
shl
dec
cld
xchg
push
stc
add
test
sar
inc
cld
mov
pop
in
mov
mov
inc
add
jle
ror
je
sub
mov
jmp
je
shl
(bad)
ja
mov
push
mov
mov
add
inc
push
pushf
mov
lods
add
in
cmc
add
inc
cmp
(bad)
cmp
xor
push
mov
add
inc
shl
adc
dec
add
add
cmc
jno
ins
push
inc
mov
je
inc
into
xor
push
fucom
mov
addr16
lds
mov
js
inc
out
dec
mov
mov
popw
test
mov
mov
dec
mov
dec
movs
ror
mov
std
adc
data16
add
(bad)
jb
fucomi
je
xlat
push
jno
daa
stos
add
add
jle
add
fwait
dec
sti
call
stos
add
and
cmps
jle
(bad)
ret
(bad)
jmp
out
aad
in
aad
sbb
std
dec
jle
jl
cmps
daa
ror
jge
mov
pop
mov
add
test
cmp
test
mov
in
ins
xor
add
push
jge
stos
add
cmp
ret
xchg
push
push
lods
jne
mov
mov
mov
iret
push
push
(bad)
ins
stc
cmp
(bad)
mov
ja
inc
add
jge
jbe
pop
mov
stos
mov
dec
test
sar
movs
add
call
sub
adc
add
cmps
add
add
lods
cmp
and
sub
fistp
jno
movs
adc
mov
mov
jmp
or
and
push
xor
sti
ret
push
std
call
push
push
gs
movs
(bad)
dec
or
mov
cli
push
ins
lea
sub
mov
shl
xor
mov
scas
mov
mov
jmp
cmp
sub
adc
xor
test
mov
mov
(bad)
call
add
jne
jae
xor
add
push
or
xchg
mov
cld
enter
inc
cmp
out
mov
pop
rcl
cli
ret
arpl
dec
push
in
push
(bad)
aad
enter
or
mov
and
push
add
(bad)
iret
jl
clc
dec
cmp
mov
ret
xor
sbb
mov
mov
mov
scas
push
jecxz
inc
ror
pminsw
(bad)
jmp
jg
inc
out
dec
(bad)
jmp
pop
mov
jne
pop
or
mov
adc
add
scas
cmp
adc
cmp
jmp
add
jb
gs
or
sar
cs
scas
add
cli
sub
out
cmp
adc
not
sbb
test
or
xchg
jg
and
push
dec
(bad)
inc
dec
cmp
add
mov
mov
test
outs
xor
push
mov
not
add
js
jb
js
xor
out
jno
popf
aaa
imul
sbb
cmp
rol
pusha
gs
pop
add
sub
add
lods
mov
mov
dec
outs
pop
mov
popa
add
dec
mov
mov
sbb
add
rol
(bad)
repnz
mov
dec
ss
push
add
add
in
(bad)
jmp
call
inc
push
lods
cmp
xor
xchg
dec
xor
push
xchg
pop
sar
push
mov
dec
xor
add
dec
sar
mov
adc
(bad)
jge
dec
jg
popf
push
add
out
mov
adc
je
sub
jne
adc
xor
inc
push
rol
sbb
cmp
cmp
inc
add
mov
outs
push
mov
pop
mov
mov
mov
inc
mov
test
not
add
js
adc
xor
jl
aad
mov
cmc
dec
cmp
pop
add
or
push
repz
dec
jne
push
mov
stos
xor
mov
push
mov
ins
imul
enter
xor
jl
andnpd
or
sub
mov
add
inc
popa
aad
(bad)
fisubr
xchg
add
call
sbb
cmp
adc
sar
adc
imul
sbb
mov
mov
mov
inc
sub
hlt
cmp
dec
in
lods
stos
add
add
out
cmp
lock
adc
jmp
ss
ret
(bad)
push
cmp
shl
or
daa
mov
data16
jae
int
pop
test
push
mov
add
std
scas
xor
dec
lock
xor
shl
stos
mov
daa
xor
sub
add
ds
inc
add
scas
pop
inc
adc
hlt
rol
shr
cs
add
push
mov
and
jl
es
cmp
call
xor
sbb
mov
mov
mov
scas
cmp
out
inc
iret
mov
jg
or
jmp
pop
mov
inc
add
cmp
in
jne
pop
or
mov
push
add
push
mov
(bad)
adc
push
inc
je
out
or
or
shr
add
mov
rcl
mov
out
xor
gs
add
and
dec
bound
cmc
inc
mov
mov
push
mov
jg
xor
inc
push
sbb
add
arpl
fnstsw
cmp
mov
and
popa
aad
inc
(bad)
mov
cmp
mov
inc
dec
outs
mov
sub
fwait
out
dec
lea
cmp
sbb
mov
add
mov
ja
ds
add
ds
idiv
mov
imul
and
scas
push
sub
add
or
arpl
add
into
cs
add
dec
add
aaa
inc
(bad)
mov
add
push
xchg
mov
aad
adc
push
push
jns
mov
add
daa
inc
js
scas
dec
adc
enter
push
mov
daa
xchg
cwde
enter
jmp
call
fdivr
aaa
jmp
mov
sub
jmp
scas
mov
pop
loope
mov
pop
or
sbb
jne
fwait
test
push
sldt
call
test
or
push
dec
inc
int
cdq
push
es
xor
pop
push
and
adc
xchg
out
dec
or
loopne
sub
dec
je
out
sti
mov
daa
push
ins
jge
jbe
ins
outs
inc
mov
mov
push
mov
jns
xor
inc
push
sbb
add
arpl
sbb
stos
jb
push
popa
mov
dec
mov
inc
mov
xchg
dec
js
rol
inc
ret
or
inc
ins
sbb
add
add
stos
lods
(bad)
inc
daa
push
pop
fwait
mov
xor
xor
xchg
mov
in
out
mov
add
xor
and
pop
dec
repnz
call
jge
xchg
(bad)
lods
add
sub
std
jmp
xor
movs
std
mov
and
add
test
mov
es
mov
in
hlt
adc
push
and
adc
sub
or
or
mov
adc
push
cmp
sbb
enter
inc
cmp
jmp
rcl
pop
dec
out
mov
and
inc
pop
outs
mov
inc
ins
sbb
sub
xor
xchg
(bad)
xor
pop
pop
inc
call
xor
add
add
pop
xchg
(bad)
call
push
add
push
dec
cmp
gs
push
es
mov
lods
jns
(bad)
js
cmp
pop
mov
mov
mov
arpl
add
test
inc
ins
mov
push
dec
add
add
add
mov
jl
fisub
mov
pop
push
pop
sbb
xor
xor
mov
inc
or
test
mov
lahf
xor
in
adc
cmp
mov
mov
(bad)
cmp
inc
daa
mov
add
pop
mov
sub
jl
add
pop
dec
cmp
loopne
ret
xor
pop
out
pop
js
add
out
xor
in
mov
adc
inc
mov
push
mov
test
add
jge
repz
sub
call
jb
xchg
icebp
cmp
jno
xchg
add
and
add
add
add
mov
(bad)
gs
xchg
add
cwde
inc
mov
xor
add
mov
cmp
or
cmp
iret
sub
cmp
iret
retf
sub
add
mov
cmp
cmc
je
es
cmp
cmc
je
push
mov
cmp
cmc
je
out
mov
mov
add
mov
cmp
cmc
je
out
mov
pop
div
mov
cmp
mov
cmp
je
jge
outs
mov
addr16
mov
mov
jae
cmp
xor
inc
pusha
mov
mov
jb
inc
data16
jl
mov
adc
out
xchg
mov
add
add
add
enter
ficomp
add
std
push
xor
sbb
add
cmps
or
or
in
add
xor
inc
(bad)
mov
sar
add
mov
dec
fnsave
mov
cmp
data16
jge
mov
add
cmp
mov
(bad)
inc
adc
mov
add
scas
jmp
aaa
sbb
cmp
mov
sar
cmp
inc
repnz
sti
inc
clc
jns
sub
xchg
push
ss
ins
ins
mov
mov
add
ds
add
inc
ins
in
jg
pop
out
outs
pop
call
(bad)
adc
(bad)
xor
and
popf
ja
cmp
cmp
jl
aaa
inc
cmp
push
rcl
ret
pop
out
in
jp
add
aaa
inc
ins
outs
outs
pop
mov
xchg
pop
jmp
cmp
add
mov
shl
mov
jge
push
push
in
cmp
cmp
mov
mov
mov
xchg
xchg
lods
add
mov
xchg
movs
dec
lods
add
sub
or
push
dec
mov
mov
mov
adc
push
xor
popf
push
lods
or
add
mov
std
(bad)
sbb
mov
adc
pop
rcl
add
aaa
nop
mov
imul
sub
xor
dec
std
call
and
mov
in
aas
sar
xor
out
jmp
shl
jno
ret
add
add
jl
popf
ins
xor
xor
xor
ins
dec
fwait
dec
xor
xchg
ins
and
lods
push
pop
lea
mov
mov
inc
add
scas
add
(bad)
rol
shr
sbb
neg
icebp
jno
sbb
cmp
pusha
mov
xor
add
pop
cmp
(bad)
sub
push
xor
jmp
std
(bad)
out
add
xchg
mov
jo
jmp
data16
inc
cmp
inc
ins
scas
sub
outs
ins
mov
stos
add
gs
pop
ret
sub
push
pop
movs
jle
cmp
cmp
add
sub
dec
sub
and
(bad)
in
mov
(bad)
je
out
sbb
ret
jno
sub
inc
adc
xchg
sbb
ja
mov
xor
scas
sbb
inc
jp
add
out
pop
aas
add
jmp
dec
sti
pop
sub
mov
and
popf
mov
fild
add
mov
pop
sbb
sbb
and
and
pop
cdq
jae
movs
jo
std
push
mov
inc
add
jmp
out
sub
repz
and
fcmovb
jmp
inc
mov
and
ja
mov
scas
sbb
cld
sbb
leave
and
daa
mov
es
int
cmp
cmp
mov
call
ds
or
sub
shl
pop
out
aaa
jle
cmp
mov
dec
xor
es
mov
inc
sub
and
add
add
add
add
push
dec
sub
(bad)
jbe
enter
mov
jle
loope
sub
add
mov
mov
in
jmp
mov
test
arpl
add
call
or
ins
pop
add
loope
or
scas
jle
add
lea
mov
mov
ror
and
jb
jae
test
mov
test
rol
pop
pop
xchg
sbb
xor
push
cmp
scas
add
xchg
sub
add
fs
ins
inc
or
lods
mov
test
test
or
add
push
or
scas
add
inc
call
loope
push
pop
mov
out
mov
mov
loop
clc
(bad)
je
mov
ret
mov
loopne
loopne
ins
aad
sub
add
add
pop
shr
cmp
or
jmp
test
mov
retf
shl
mov
je
in
or
or
or
inc
call
and
ret
inc
(bad)
push
ret
inc
movntq
out
cmp
scas
add
loopne
sbb
xchg
mov
jmp
add
scas
add
gs
jbe
inc
sti
pop
add
pop
leave
add
movs
out
and
or
add
es
add
sub
push
jmp
shr
scas
mov
pop
test
cmp
or
jmp
sbb
mov
in
aad
inc
dec
in
jmp
cs
add
xchg
in
add
ror
mov
jle
inc
push
mov
adc
rcl
inc
mov
ins
sub
xor
je
sbb
mov
cmp
retf
mov
mov
jns
cmps
lds
jle
jns
jmpw
data16
add
add
push
das
cmc
add
fwait
pcmpgtd
add
push
cmc
mov
pushf
fld
out
mov
cld
xchg
jmp
ss
push
cmp
(bad)
aam
cmp
mov
(bad)
stos
je
cdq
outs
adc
jmp
jno
dec
movs
shr
sub
add
add
test
add
xchg
aaa
sbb
mov
pusha
mov
loopne
jmp
data16
or
js
xor
jmp
add
add
and
adc
pop
mov
mov
mov
clc
lods
mov
inc
es
or
fiadd
add
imul
add
add
sbb
add
stos
je
pop
out
call
dec
out
pop
outs
aas
add
sbb
call
xor
pop
jge
je
cmps
stos
mov
adc
pop
push
xor
xchg
mov
add
dec
push
cmp
or
(bad)
(bad)
push
stos
std
dec
add
push
(bad)
rol
cmps
fdivr
pop
mov
(bad)
cs
sti
adc
mov
sub
retf
mov
call
loope
or
sbb
or
or
sbb
add
test
in
aam
jbe
xchg
mov
test
ret
xchg
test
pop
mov
push
xor
aad
mov
add
test
std
add
or
add
outs
sbb
add
std
(bad)
pop
pop
std
call
inc
adc
pop
std
call
test
push
fiadd
and
cmp
aas
add
stos
mov
test
push
sbb
mov
daa
popa
mov
add
jecxz
call
fld
mov
lods
mov
mov
cmp
mov
std
push
sbb
or
xchg
fld
(bad)
std
(bad)
xchg
test
add
and
stc
sub
cmp
inc
(bad)
xchg
fdivr
adc
ins
or
je
fcomp
add
ja
out
jmp
mov
sub
pop
pop
pop
outs
ins
adc
mov
shr
mov
lods
push
mov
xchg
(bad)
jne
mov
push
jle
push
add
pushf
or
jmp
scas
je
mov
movs
(bad)
ja
mov
and
outs
or
add
cdq
dec
mov
jns
clc
outs
stc
sub
mov
test
push
std
jmp
pop
add
push
scas
cmc
inc
ss
or
es
push
or
out
fs
(bad)
xlat
dec
hlt
ins
ins
stc
addps
mov
(bad)
inc
and
jno
sbb
mov
add
add
add
sub
dec
(bad)
addr16
and
(bad)
inc
aam
dec
add
push
pop
das
jl
data16
inc
sub
imul
scas
je
and
(bad)
ja
mov
and
or
pop
dec
mov
jns
clc
daa
ins
stc
and
std
push
fwait
aas
or
out
or
add
add
add
sbb
shr
and
and
lods
add
imul
add
sub
std
jmp
bound
or
std
mov
test
mov
xchg
mov
hlt
fistp
(bad)
stos
dec
mov
aam
aam
xchg
jno
frstor
cmp
bswap
or
mov
add
test
mov
inc
lods
or
jae
(bad)
inc
clc
iret
pop
icebp
jb
stos
inc
adc
scas
add
fimul
jne
(bad)
push
cld
inc
sub
call
add
sbb
icebp
sub
movs
add
cs
cmps
popa
test
lods
lods
add
lods
aad
and
icebp
jno
and
pop
add
add
add
add
add
lods
add
data16
je
jl
push
popa
and
push
mov
clc
int
shl
and
sub
in
and
inc
sbb
xor
outs
adc
call
xchg
xchg
imul
in
mov
dec
test
sbb
dec
mov
clc
or
add
add
(bad)
cwde
cmp
add
push
sub
add
stos
inc
jmp
cld
jno
add
xchg
pop
xchg
cmc
push
call
and
cld
sbb
jg
ss
mov
sbb
jmp
stos
pop
enter
out
mov
mov
add
mov
sbb
sub
pop
out
xor
popf
sahf
test
test
add
das
jnp
out
test
xchg
icebp
test
sub
pop
mov
jg
call
loope
jg
sub
mov
in
dec
stos
inc
fimul
or
add
data16
inc
cld
xor
call
dec
call
adc
cld
sbb
jg
adc
cs
test
xor
je
push
ficomp
dec
retf
jne
arpl
not
inc
add
test
adc
(bad)
test
dec
push
fscale
add
add
add
add
add
sar
fwait
test
verr
out
sbb
mov
mov
scas
dec
add
mov
push
stos
or
in
cld
addps
into
shl
push
jg
fisub
jno
gs
pop
jb
add
push
int
xchg
scas
(bad)
jmp
aad
(bad)
adc
mov
jmp
in
mov
test
add
cmps
mov
(bad)
cdq
mov
inc
inc
fucomip
hlt
test
mov
dec
sbb
dec
repnz
inc
hlt
push
sub
add
es
add
sub
xchg
lods
je
(bad)
in
add
and
outs
in
clc
add
push
and
in
ins
or
sbb
in
mov
add
pop
cmc
add
cld
mov
pop
xchg
test
xlat
mov
test
(bad)
mov
fmul
fwait
test
inc
add
inc
pusha
daa
inc
add
xchg
push
mov
imul
sub
jnp
and
pop
mov
pop
jae
movs
shl
mov
ret
pop
pop
scas
add
cmp
jp
inc
(bad)
inc
das
stc
mov
test
add
dec
in
sldt
sub
into
rol
push
jg
scas
das
inc
adc
xchg
mov
cmp
add
mov
sar
(bad)
lock
(bad)
jmp
daa
inc
push
(bad)
call
mov
jo
imul
jb
add
xchg
sub
add
ret
mov
loop
xchg
les
lea
ficom
icebp
stc
push
cdq
test
call
mov
pop
jg
(bad)
and
sbb
nop
or
out
clc
jl
test
sti
or
add
pop
mov
push
or
jmp
add
mov
lods
add
aad
clc
add
sub
or
lods
xchg
mov
clc
mov
jle
add
push
inc
cld
xchg
or
das
shl
loopne
adc
dec
and
ins
mov
rcr
cmp
ins
call
and
jae
and
or
add
pop
fs
icebp
jne
mov
mov
jo
test
inc
xor
movs
or
mov
cmp
add
inc
cld
and
add
xchg
push
xchg
add
lods
fdivr
imul
(bad)
aaa
lock
xchg
mov
iret
jmp
xlat
lock
add
stos
add
dec
call
fmul
and
scas
dec
dec
(bad)
cmp
add
mov
inc
fsubr
retf
adc
iret
cs
stos
xchg
mov
clc
mov
ja
add
push
inc
cld
int
fadd
and
push
dec
fadd
add
data16
sub
rol
ds
jmp
test
call
push
or
ins
arpl
loopne
jb
inc
mov
imul
xchg
stos
aaa
lock
xchg
jbe
push
push
mov
rcr
fadd
cmp
int
movs
pop
push
fs
push
add
add
add
add
(bad)
cmp
test
mov
sti
mov
jne
data16
fimul
add
push
sbb
inc
add
gs
mov
call
add
jmp
cmp
mov
fiadd
add
test
sbb
jecxz
add
add
xor
push
sub
add
repnz
mov
in
xchg
push
jae
adc
jo
jecxz
push
push
outs
std
or
add
iret
lods
add
in
adc
push
xchg
cmp
jmp
mov
jmp
lods
scas
test
xor
lock
add
mov
fnop
mov
push
lea
jmp
push
add
mov
mov
jg
(bad)
aaa
inc
fcomp
je
sbb
test
jge
mov
movs
stos
inc
sti
mov
mov
add
fldcw
jg
dec
scas
jb
out
in
add
add
cmp
(bad)
in
mov
dec
add
push
cmp
iret
clc
adc
popf
repz
mov
push
mov
push
fldenv
es
aas
or
mov
xchg
out
mov
mov
dec
cmp
dec
adc
in
mov
cmp
dec
repz
mov
dec
test
mov
fisttp
or
add
inc
sti
mov
add
sti
jg
fisub
rol
dec
and
cmc
xchg
push
xor
fisub
inc
cld
push
sbb
jmp
xchg
cmc
push
xchg
cs
or
jle
inc
cmc
push
xchg
neg
ret
lea
in
rcr
lds
mov
les
add
scas
add
(bad)
scas
add
jb
or
stos
mov
enter
shl
pop
loop
repz
test
jno
adc
sar
ror
(bad)
mov
push
add
adc
add
push
aaa
inc
cld
push
sbb
psubusb
in
call
dec
or
add
add
add
push
inc
call
xchg
in
cld
xor
scas
retf
dec
jg
push
aaa
retf
outs
iret
call
aad
xchg
aaa
add
pop
jbe
jmp
aad
aaa
into
jmp
inc
xchg
pop
out
cmps
xor
add
mov
lds
adc
add
xor
mov
add
add
add
add
jno
out
repnz
test
fld
(bad)
pop
movs
add
push
push
movs
repz
test
call
add
push
ret
inc
test
sbb
jns
push
push
aas
hlt
mov
cs
pop
mov
fnstenv
inc
dec
imul
int
outs
and
sar
ror
rol
cmps
lods
xchg
add
lock
mov
loopne
push
xchg
cmp
stc
jb
or
in
iret
loopne
cmp
and
push
std
mov
movs
add
fisttp
pop
add
add
lods
add
push
pop
loopne
xor
mov
sbb
xor
enter
add
stos
xchg
mov
add
clc
mov
in
(bad)
fisubr
rcl
loopne
loope
dec
and
add
sub
mov
leave
int
jae
ds
test
mov
add
neg
rol
or
or
fmul
cs
retf
out
iret
loop
in
hlt
mov
add
pop
shl
addr16
popf
repnz
mov
sbb
mov
pop
out
movs
mov
repz
stos
xchg
stos
mov
loope
push
icebp
inc
in
clc
mov
in
lock
inc
cld
aad
dec
push
pusha
loopne
cwde
dec
mov
fimul
mov
movs
scas
mov
add
(bad)
enter
or
add
iret
scas
retf
ret
lods
(bad)
in
in
mov
inc
std
mov
mov
add
add
leave
push
sub
sbb
daa
icebp
cmc
test
leave
jno
into
jmp
adc
add
fistp
sti
dec
jno
adc
or
cs
pop
(bad)
test
add
add
add
add
or
aaa
lock
jg
sahf
stos
or
cmc
cld
punpckhbw
into
rol
jno
inc
mov
pop
xchg
jp
inc
xor
mov
std
inc
stos
pop
out
mov
pop
add
add
push
mov
adc
(bad)
call
ret
dec
in
in
mov
add
aaa
enter
enter
cmp
movs
jbe
gs
mov
je
jne
sbb
(bad)
bnd
div
mov
or
jmp
test
sub
add
push
stos
ret
lock
xchg
retf
ror
(bad)
rol
jo
dec
cmps
enter
xor
add
xchg
dec
jbe
fld
xchg
cmps
dec
in
sub
ret
pushf
dec
cld
inc
cli
out
sti
dec
stos
enter
sub
lods
add
pushf
add
out
cmc
lock
cmp
or
and
sbb
sti
inc
jp
dec
in
dec
scas
ret
pop
mov
ja
inc
add
lods
test
les
jns
xchg
inc
xor
push
dec
clc
in
add
loopne
ja
inc
adc
(bad)
or
(bad)
lock
jb
int
loopne
imul
sub
loopne
(bad)
lds
push
or
jae
ins
pop
call
pop
add
cmp
cmps
dec
loopne
jmp
out
(bad)
dec
or
sbb
and
hlt
in
mov
dec
xchg
sub
add
xchg
imul
add
loopne
push
imul
sbb
dec
jns
push
popa
fcomi
add
adc
fist
test
imul
push
scas
add
jp
jnp
push
mov
jns
out
ins
mov
push
or
ins
add
loopne
jne
inc
mov
(bad)
pusha
mov
int
sbb
(bad)
push
sbb
inc
add
ret
inc
in
in
or
pop
dec
test
add
stos
xchg
lds
out
repnz
aas
clc
jmp
push
sbb
lods
add
imul
lods
out
fld1
fdivr
mov
(bad)
push
or
inc
mov
les
pop
call
inc
clc
outs
jmp
and
add
loop
adc
add
sbb
inc
(bad)
mov
clc
sbb
pushf
iret
and
fild
xchg
dec
or
sbb
jmp
inc
les
pusha
lods
add
int3
cmp
sti
mov
movs
dec
add
out
sub
stos
inc
adc
jmp
std
jae
daa
shl
adc
add
fdiv
fimul
sub
add
repnz
ins
or
lds
ds
adc
out
inc
sbb
test
add
in
jg
lds
jno
aad
out
fisubr
push
add
jo
shl
inc
inc
add
mov
call
add
push
sub
imul
jmp
test
push
sti
mov
mov
inc
repz
add
es
inc
push
xchg
add
test
inc
out
push
inc
out
add
nop
or
mov
or
ror
(bad)
jnp
inc
(bad)
sbb
inc
cmps
cwde
or
test
add
add
add
add
xor
inc
cmps
xor
inc
xchg
in
inc
xchg
or
arpl
inc
xchg
or
inc
push
inc
cmovno
adc
xchg
cmovno
cmovno
cmovno
lds
mov
lds
mov
lds
mov
pop
add
jbe
and
add
push
add
push
and
test
add
push
xchg
pop
add
frstor
inc
cmps
push
cmp
jmp
data16
ret
cmps
test
add
xchg
nop
data16
xor
test
aad
add
stos
dec
push
jecxz
mov
data16
xor
iret
test
aad
add
fwait
dec
push
add
sar
pop
xor
jo
dec
or
xlat
into
test
xchg
clc
test
outs
mov
test
pop
mov
pop
ret
or
or
xchg
mov
push
mov
mov
add
retf
xor
add
add
cmp
(bad)
in
sub
pop
ins
mov
psubusw
pop
push
sbb
mov
mov
std
(bad)
cmp
push
pop
cmp
xchg
mov
adc
mov
int3
jnp
in
adc
(bad)
mov
add
add
add
mov
cmps
xchg
mov
nop
loop
std
jmp
scas
test
mov
cmp
rol
fstp
or
push
scas
(bad)
mov
add
dec
pop
loopne
sbb
icebp
or
lahf
je
mov
jg
add
dec
or
dec
das
rol
enter
leave
mov
mov
push
mov
cmp
scas
add
push
mov
dec
cmp
add
mov
inc
mov
int
or
adc
sbb
sub
mov
in
pop
mov
lock
add
add
add
add
add
or
test
xchg
cmp
dec
(bad)
push
inc
cld
cmp
push
mov
add
xlat
sti
test
xchg
pop
add
cs
hlt
out
jno
ret
jne
mov
fcomp
mov
or
jge
inc
mov
sar
add
mov
fcom
add
pushf
or
push
cmp
std
mov
cmps
add
aad
lock
and
jmp
das
jns
push
inc
xor
test
add
mov
clc
outs
sar
scas
inc
dec
rcr
jg
push
leave
repz
add
mov
add
xor
dec
(bad)
mov
sar
add
outs
xchg
mov
cld
sbb
jae
pop
enter
dec
or
sbb
jae
jecxz
sbb
adc
push
scas
xchg
ffreep
fdivr
ror
or
pop
(bad)
cld
je
mov
cld
cmp
add
inc
lods
(bad)
js
jno
daa
push
test
lods
mov
scas
sti
dec
cmps
mov
fsub
lock
push
dec
inc
sub
jns
out
mov
ret
or
popf
inc
mov
mov
cld
add
(bad)
fidiv
ins
jge
inc
mov
ret
xchg
add
push
add
push
adc
out
in
fcom
xor
pop
jne
add
push
mov
adc
punpckhwd
scas
test
jg
daa
test
shl
(bad)
jp
mov
mov
sub
cmp
mov
cld
pop
aad
push
call
(bad)
outs
push
mov
in
adc
add
mov
clc
inc
fdiv
mov
cmps
jg
inc
xor
ror
xor
add
fld
mov
stos
add
mov
fisub
(bad)
fdivr
add
daa
mov
stos
add
push
stos
test
test
outs
xor
add
add
dec
les
cmp
push
jl
dec
fstp
ds
or
push
out
movs
imul
call
test
pop
add
jno
add
ret
test
arpl
data16
inc
and
shr
add
fdivr
adc
add
add
add
add
mov
add
sub
lods
daa
push
adc
mov
sub
and
ror
addr16
pop
sbb
pop
xchg
sub
ins
daa
push
adc
mov
mov
pop
add
and
dec
pop
daa
push
adc
mov
add
mov
idiv
add
mov
mov
mov
rol
add
xchg
out
mov
pop
ins
mov
jmp
jl
add
mov
add
es
or
daa
dec
lock
add
add
push
in
js
int
rcr
mov
sbb
adc
out
test
push
cmp
(bad)
jl
jno
add
loope
mov
ror
(bad)
xchg
sub
rcl
mov
inc
mov
test
add
push
(bad)
std
mov
and
ds
inc
mov
add
push
sti
push
sub
mov
and
add
lods
in
mov
inc
(bad)
sti
mov
sbb
cmp
scas
add
jp
sti
jmp
je
leave
xchg
je
in
push
cmp
sti
cmp
push
dec
pop
or
call
add
add
cmps
jae
jmp
jb
push
sbb
mov
scas
add
fucomp
or
add
add
add
push
test
mov
and
(bad)
dec
and
bnd
xchg
mov
jge
enter
ror
add
inc
sub
fist
or
push
test
mov
lods
add
retf
dec
adc
or
(bad)
inc
add
das
les
cmps
lods
das
test
pop
in
test
add
add
scas
out
int
jno
sub
pop
jmp
mov
mov
dec
add
mov
jno
sub
in
in
sbb
mov
push
lahf
fdivr
pop
in
push
pop
xchg
jno
sbb
add
push
jbe
rcl
and
add
lods
jg
fsubr
test
and
call
pop
movs
xchg
out
test
test
ror
cmp
test
call
popf
cmps
lods
add
dec
or
add
data16
adc
repnz
sar
jmp
(bad)
cmc
dec
xchg
retf
add
fidivr
std
call
adc
add
and
adc
xor
cwde
mov
add
mov
inc
in
adc
mov
dec
int3
pop
xchg
retf
pop
cmp
dec
cld
jmp
leave
xchg
leave
iret
jecxz
and
push
cmps
stos
or
adc
add
add
and
inc
mov
sti
jmp
jmp
or
jle
pminub
mov
mov
or
push
and
push
jo
(bad)
pop
jle
adc
nop
and
into
loop
loope
out
mov
xchg
and
add
add
add
add
cmp
inc
retf
adc
jns
mov
adc
add
mov
sti
inc
stos
sbb
sub
int3
iret
out
adc
cmp
fnstsw
data16
mov
jne
aas
sbb
mov
jl
stos
add
inc
xchg
mov
add
icebp
jecxz
mov
std
inc
add
adc
mov
cmp
(bad)
mov
pop
mov
pop
jle
rcr
mov
fsubr
loop
push
mov
push
add
mov
push
xchg
test
inc
adc
loop
mov
adc
add
xor
push
add
inc
adc
and
retf
add
mov
add
mov
cmp
std
pop
arpl
push
(bad)
iret
out
mov
add
xchg
out
clc
sbb
std
inc
in
xchg
test
xchg
mov
call
adc
dec
add
cmp
xchg
jno
mov
sbb
scas
cmp
mov
pop
std
jmp
fcmovb
xor
ret
push
pop
mov
mov
mov
and
in
push
mov
and
xchg
jl
pop
cmpxchg
add
mov
mov
cmp
xor
enter
cmps
mov
pop
push
iret
out
js
out
inc
mov
js
cmp
mov
(bad)
sti
inc
mov
test
push
xchg
scas
xchg
aaa
sbb
sbb
scas
sti
inc
mov
sub
mov
out
fnsave
xchg
mov
out
inc
mov
jne
pop
push
data16
or
sar
mov
add
add
add
add
sbb
call
cs
std
xchg
or
mov
add
mov
or
dec
push
add
aaa
js
ins
test
mov
add
pop
mov
push
mov
cwde
pop
sbb
call
and
push
add
and
retf
or
and
ficom
add
sbb
jmp
icebp
(bad)
call
push
cmp
sub
mov
push
push
cmp
mov
pop
jecxz
outs
mov
push
add
aaa
js
pushf
cmps
mov
sbb
add
pop
jbe
mov
push
add
ss
outs
and
cs
push
add
add
add
daa
push
daa
retf
clc
pop
out
mov
std
mov
mov
push
add
sbb
dec
push
add
mov
mov
ret
add
into
aad
icebp
cmp
test
mov
or
mov
popf
mov
sahf
dec
push
add
xor
adc
add
push
sbb
mov
repnz
cwde
add
std
inc
adc
(bad)
(bad)
(bad)
data16
jg
mov
std
dec
mov
adc
or
push
add
cmp
pmovmskb
cmp
or
adc
add
xchg
(bad)
jmp
addr16
add
jno
repnz
loope
add
cs
hlt
pop
add
and
pop
pop
pop
hlt
mov
mov
mov
add
lods
push
call
pop
xor
or
stos
mov
or
cli
xchg
add
add
adc
clc
popa
add
mov
cmp
data16
adc
stos
add
or
inc
sbb
addr16
xor
push
push
stos
pop
ret
mov
mov
stc
dec
loopne
pop
inc
in
jle
cmps
jno
cmps
repz
inc
sti
xchg
add
xchg
add
dec
xchg
mov
adc
add
cs
xchg
pop
loope
mov
and
jmp
adc
repz
rcl
mov
mov
push
add
sub
push
cld
cli
push
xor
add
mov
push
data16
xchg
aad
push
jle
cmps
jno
add
nop
cmps
(bad)
shl
cmps
dec
adc
(bad)
popw
call
fisub
std
dec
and
inc
jmp
push
(bad)
test
sbb
pop
call
retf
cld
push
sbb
retf
out
adc
bound
mov
mov
loop
add
pop
mov
jg
pop
test
mov
fidivr
cmc
or
out
jae
mov
dec
adc
aam
data16
mov
mov
popf
(bad)
mov
mov
mov
out
xchg
test
adc
mov
inc
stos
mov
daa
retf
clc
pop
out
and
inc
daa
std
(bad)
clc
cmps
mov
enter
mov
or
push
cmp
add
test
push
data16
(bad)
fist
mov
mov
add
test
push
data16
stc
push
lods
mov
mov
fmul
mov
mov
xchg
add
xchg
add
inc
add
xchg
cmps
sbb
inc
jo
mov
sbb
cwde
jmp
or
bound
std
jmp
adc
repz
scas
adc
ret
mov
mov
push
add
movs
nop
jle
scas
add
adc
(bad)
xor
add
mov
push
add
scas
inc
cmp
repnz
mov
inc
lea
pop
(bad)
mov
in
mov
gs
jmp
out
push
mov
clc
xchg
lock
push
jle
dec
pop
iret
loop
loope
mov
repnz
xor
add
xchg
mov
add
add
add
add
repz
adc
sahf
mov
xchg
scas
xchg
cmps
dec
or
(bad)
mov
mov
adc
mov
(bad)
retf
add
in
nop
mov
lahf
ds
adc
ss
add
das
mov
push
push
scas
xchg
mov
push
add
cmps
push
adc
add
or
stos
cmps
jo
dec
fimul
mov
and
jmp
sbb
or
not
push
and
jmp
sbb
or
add
cld
inc
dec
sub
jmp
cmps
sbb
mov
movs
sbb
and
inc
aad
cld
add
rcr
add
out
out
push
mov
fdivr
xchg
test
jle
call
mov
sub
or
and
sub
push
fsubr
jmp
cli
lea
pop
add
repnz
pop
fbld
cli
call
lods
xchg
adc
es
add
add
add
add
in
out
addr16
cmp
or
push
jmp
mov
movs
inc
or
aam
cmp
js
add
jo
lods
pop
xchg
popf
jmp
popa
lods
add
xchg
xor
cvtps2pd
add
(bad)
mov
cvtps2pd
add
movs
mov
pop
jnp
push
fld
add
fs
loopne
adc
or
xor
add
xchg
mov
sbb
repnz
adc
jecxz
mov
xor
add
inc
or
adc
push
add
inc
adc
sbb
retf
js
jmp
sbb
(bad)
js
xchg
mov
dec
cmps
inc
add
or
cwde
xor
add
sub
add
add
add
add
stos
xchg
imul
(bad)
push
mov
or
out
push
mov
repnz
mul
add
jmp
popf
cmps
stos
add
xchg
stos
add
data16
cmc
or
mov
rcl
xor
dec
adc
and
mov
add
xor
add
push
or
sbb
push
or
mov
lahf
xchg
mov
fmul
sar
daa
ret
pushf
mov
mov
push
add
(bad)
adc
jbe
add
jmp
es
add
test
add
add
add
add
pop
add
add
jmp
hlt
inc
out
test
add
shr
(bad)
call
ret
sbb
leave
mov
xor
call
test
mov
ds
popf
mov
or
shr
test
jnp
test
jp
outs
and
out
xor
mov
jle
mov
addr16
mulps
xchg
mov
call
sub
add
jo
mov
push
std
(bad)
in
loopne
mov
mov
and
mov
sbb
rol
mov
test
add
pextrw
add
mov
pushw
mov
into
aas
fld
add
adc
xchg
mov
pop
mov
cld
mov
mov
fcomp
std
(bad)
mov
out
mov
std
(bad)
mov
jae
mulps
add
scas
add
dec
sbb
imul
push
add
push
adc
add
mov
sbb
hlt
aas
adc
fst
xchg
xchg
sahf
add
push
add
hlt
aas
adc
and
retf
jmp
jae
mov
gs
sub
add
xchg
jns
cmp
js
xchg
inc
lods
add
out
iret
loop
sbb
mov
out
leave
pop
cdq
mov
add
add
add
add
xchg
lea
mov
add
or
push
test
mov
adc
jo
mov
pop
loop
sahf
sbb
mov
push
add
push
adc
xchg
sbb
repz
adc
(bad)
adc
xchg
xchg
sahf
adc
mov
repz
adc
add
push
daa
retf
out
mov
repnz
mov
push
add
test
js
add
jmp
or
push
xor
add
and
add
cmc
add
sbb
xchg
in
loopne
sar
mov
and
sub
add
xchg
mov
xchg
jno
sbb
mov
xchg
(bad)
rol
dec
or
lea
(bad)
or
call
push
call
or
or
push
out
mov
xchg
nop
mov
out
scas
adc
dec
clc
adc
or
or
mov
add
in
adc
xchg
adc
push
or
and
add
push
clc
push
push
xchg
xchg
mov
and
inc
push
xchg
push
cld
stos
pop
je
cmp
mov
adc
jno
mov
pop
loop
into
adc
nop
push
or
call
adc
pop
and
add
xchg
sbb
xchg
ins
adc
add
push
adc
nop
pop
or
dec
adc
repz
adc
xchg
nop
mov
(bad)
pop
scas
adc
dec
cld
adc
lock
mov
jmp
add
outs
xchg
mov
leave
fild
mov
dec
out
test
movs
movs
stc
inc
mov
add
lods
sub
add
add
add
es
push
ins
push
aam
dec
imul
sahf
add
stos
xchg
mov
xchg
les
add
adc
cs
push
add
and
popa
jno
mov
mov
cwde
mov
ret
nop
push
mov
add
or
lds
mov
mov
xchg
push
add
pcmpgtd
add
aas
add
stos
rol
nop
fidiv
pop
lahf
and
aad
push
xor
pop
das
div
stos
test
fiadd
data16
sbb
sbb
mov
inc
imul
iret
xchg
mov
das
clc
sbb
jne
ret
xor
add
add
int
and
movs
adc
cmps
test
adc
icebp
add
data16
xor
inc
push
push
push
pop
adc
mov
push
in
adc
and
int3
xor
dec
push
sub
add
mov
mov
popf
jns
mov
sbb
and
push
add
add
mov
sbb
aam
mov
test
mov
add
dec
mov
mov
(bad)
or
retf
mov
clc
daa
or
mov
mov
add
push
or
add
xchg
and
mov
sub
and
mov
xchg
add
and
sahf
movs
xor
mov
xchg
and
pushf
cmp
sbb
in
aas
adc
call
add
mov
scas
add
jnp
in
idiv
pop
into
jne
lock
mov
out
mov
out
xor
(bad)
out
dec
pop
sti
add
add
cmc
pmulhuw
cld
call
cmc
jmp
jmp
or
push
adc
aam
std
jmp
sub
mov
scas
add
xchg
loope
call
sub
add
cld
repnz
jmp
mov
add
ja
call
mov
or
in
or
add
add
add
pop
lods
(bad)
std
aad
or
movs
pop
or
xchg
pop
or
movs
pop
or
xchg
pop
or
gs
or
push
pop
or
gs
or
push
pop
or
and
mov
or
add
and
lahf
(bad)
std
adc
mov
(bad)
std
push
jmp
jae
xchg
push
xchg
aad
mov
imul
ret
mov
sbb
push
sti
dec
mov
popa
sti
jmp
dec
add
xchg
sub
adc
mov
ret
pop
inc
add
call
add
dec
add
push
push
fwait
dec
add
push
and
push
xor
push
and
push
adc
push
loope
dec
pop
in
push
icebp
call
loope
dec
or
push
push
rcr
push
mov
push
push
mov
dec
or
add
call
xchg
call
popa
call
aad
adc
and
xor
mov
lea
sbb
add
sub
pop
in
mov
psubsb
(bad)
std
pop
cmc
jo
add
ins
jmp
je
in
test
and
fist
popf
jmp
mov
rcr
test
rol
cli
jne
push
inc
or
jb
ret
stos
push
in
push
aad
or
mov
mov
mov
adc
test
xor
inc
pop
mov
add
add
add
add
sbb
mov
mov
dec
or
das
jg
push
or
sub
mov
shl
mov
mov
push
cld
in
push
pop
stc
mov
shr
ror
xchg
xor
push
adc
sub
pop
adc
jne
cs
sbb
inc
add
popw
adc
dec
pop
ret
mov
or
daa
pop
add
push
mov
add
sbb
std
mov
add
sbb
sub
das
push
adc
inc
adc
jmp
jmp
push
(bad)
xor
stos
xchg
xchg
aas
sbb
add
retf
por
xor
enter
fs
mov
mov
mov
fst
int3
add
push
or
add
pop
add
xchg
es
inc
add
push
popf
loope
jmp
adc
(bad)
mov
or
add
mov
sahf
inc
add
mov
popf
out
inc
add
cs
add
inc
out
adc
imul
pop
rcr
adc
out
out
mov
cs
add
lods
test
add
add
pop
cmp
sbb
adc
push
gs
fucomp
mov
or
add
inc
es
xor
xor
pop
mov
fsub
pop
sbb
sub
xor
fld
xor
call
out
out
jne
xchg
add
inc
out
fcmovb
ins
mov
call
out
out
in
call
add
add
mov
js
call
jp
aam
xchg
bnd
xor
jp
fucom
mov
mov
xor
imul
and
(bad)
adc
popf
jmp
adc
jne
cs
add
inc
out
repz
inc
xchg
add
sub
jle
fisubr
or
xchg
out
aad
xchg
xor
ins
add
je
jne
pop
rcr
out
push
mov
xchg
inc
adc
xchg
adc
push
pop
and
mov
add
outs
fs
in
xchg
ss
or
jbe
mov
dec
mov
ja
dec
add
pop
inc
test
aaa
retf
mov
mov
mov
dec
add
dec
les
cmp
inc
inc
sti
mov
fiadd
fcomp
sub
repz
xchg
cmp
dec
jo
mov
in
dec
into
cmp
sub
mov
dec
loop
into
mov
sub
dec
mov
dec
push
xor
add
dec
inc
add
stc
xchg
cs
pcmpgtw
aas
psubusb
or
mov
punpckhbw
cld
sbb
mov
lock
dec
mov
mov
mov
cmp
in
rcr
and
clc
rcr
or
add
add
add
sbb
xchg
push
mov
rcl
sbb
or
pushf
dec
and
outs
in
jb
test
xor
or
enter
and
dec
or
outs
clc
psubusb
test
xchg
jne
leave
mov
jmp
out
adc
add
stos
xor
ficom
dec
clc
and
popf
iret
loop
jbe
sbb
or
adc
loope
lds
shl
inc
std
push
stos
adc
or
(bad)
stos
outs
sbb
push
lods
mov
lds
dec
bound
mov
add
das
inc
or
mov
test
add
mov
or
es
mul
jno
test
mov
add
loopne
shl
stos
mov
xchg
(bad)
pop
push
mov
dec
xchg
mov
pop
lock
or
scas
fisubr
(bad)
ins
or
and
mov
inc
mov
loope
icebp
jmp
mov
push
xor
mov
push
add
inc
sldt
dec
sahf
iret
loop
ins
clc
add
xor
mov
lahf
iret
loop
ins
clc
add
jg
xor
xor
xchg
fsubp
mov
enter
fild
pop
gs
mov
ins
les
imul
add
inc
mov
lea
shr
mov
add
xor
add
add
test
test
xchg
pop
dec
jno
sbb
mov
lock
cmp
add
mov
inc
cmp
dec
dec
adc
dec
and
sub
dec
sub
dec
fsub
lock
daa
dec
out
adc
gs
and
lock
pop
lock
mov
add
repnz
inc
mov
xchg
adc
and
mov
pop
(bad)
lock
ins
mov
mov
sbb
iret
jge
in
mov
inc
out
lods
inc
std
dec
xchg
or
ret
hlt
jae
out
hlt
sub
mov
mov
sub
(bad)
or
inc
jg
fs
dec
lea
add
push
not
or
push
outs
mov
cdq
adc
inc
sahf
movs
mov
pop
ror
push
and
mov
loopne
xor
inc
lahf
inc
mov
outs
mov
sbb
pop
ins
lahf
inc
and
add
and
je
outs
mov
sbb
jns
cmps
xchg
jbe
add
xchg
cmp
fsubr
int
ror
and
stc
jmp
mov
jge
test
sbb
dec
cmp
push
pop
scas
add
in
lods
ret
inc
jle
jns
es
add
mov
mov
rol
and
inc
(bad)
fadd
dec
add
pop
inc
xchg
push
into
lea
ret
push
add
adc
dec
sar
test
adc
clc
push
xchg
jo
leave
aad
xchg
pop
and
imul
sbb
or
stos
xor
inc
mov
out
dec
sldt
test
xchg
rol
or
repnz
stos
aad
das
leave
lahf
sbb
xor
mov
sub
mov
lds
call
push
in
mov
mov
test
add
fcomi
jo
out
add
jmp
icebp
int
jbe
pop
jne
cmp
add
mov
mov
mov
xchg
xchg
test
sub
push
fild
jmp
popf
inc
test
push
mov
jl
fnsave
test
int
jb
pop
shr
push
xchg
sar
dec
mov
add
inc
add
gs
or
(bad)
xlat
cmp
add
je
out
jo
in
imul
out
retf
mov
add
fld
test
imul
mov
pop
adc
jg
js
adc
je
add
rol
cmp
xor
lea
mov
add
add
add
add
push
jp
and
xchg
in
je
ret
je
gs
mov
sub
out
push
inc
sti
jmp
dec
scas
add
cmps
nop
or
fld
mov
mov
in
inc
nop
xchg
test
add
add
add
fwait
sbb
add
xchg
jle
mov
les
retf
test
out
into
jecxz
ins
or
push
sti
call
mov
push
or
add
sub
cmp
jno
addr16
push
add
stos
jbe
dec
out
iret
xlat
stos
add
inc
jg
sub
add
bound
mov
dec
fdiv
push
push
aad
(bad)
pop
xchg
add
test
sbb
outs
jg
mov
mov
adc
pop
mov
test
xchg
lds
jae
das
shr
push
jl
mov
or
lds
add
add
add
add
neg
fisub
daa
jns
(bad)
jle
mov
aad
mov
addr16
jecxz
lds
outs
mov
or
inc
push
pop
rcl
sbb
mov
xchg
add
adc
add
clc
bound
add
imul
test
mov
add
mov
dec
stos
div
or
and
inc
sti
mov
sti
inc
dec
movs
outs
les
mov
sti
call
test
jmp
test
jp
mov
add
inc
test
loop
enter
rol
test
add
add
dec
pop
fxch
test
cmovno
mov
inc
xchg
int
mov
add
inc
cwde
xchg
push
das
shl
shl
scas
push
pushf
scas
sub
inc
xor
and
mov
outs
ror
add
idiv
bound
add
mov
xchg
pop
mov
jbe
mov
js
mov
arpl
push
sub
dec
add
ins
or
sbb
push
sti
dec
mov
mov
mov
(bad)
mov
mov
jbe
pushf
int
js
adc
loopne
mov
mov
test
in
xchg
jb
int
add
arpl
push
scas
(bad)
or
shr
scas
sti
and
inc
or
rcr
scas
sti
and
mov
scas
sti
and
xchg
or
aam
scas
sti
and
mov
scas
sti
and
mov
mov
and
inc
or
sti
and
add
adc
sti
and
loope
adc
and
add
sti
and
mov
lods
sti
and
mov
mov
add
into
lods
fadd
dec
fdivr
(bad)
(bad)
mov
je
fdiv
je
mov
fisttp
inc
add
lods
mov
pop
call
int3
sub
mov
call
mov
or
mov
popa
cld
data16
or
and
call
call
popaw
call
int3
popf
push
push
mov
lods
add
idiv
adc
test
test
pop
sub
push
sahf
(bad)
lods
add
sahf
aad
add
shr
pop
sub
add
cld
je
add
loopne
sub
push
and
sbb
jge
outs
aad
add
out
pop
and
and
add
jbe
mov
add
iret
or
mov
add
xchg
add
arpl
add
jne
or
bsr
pop
add
push
adc
add
stos
push
ret
cmp
mov
lahf
and
mov
or
retf
sub
stos
popf
and
mov
outs
(bad)
daa
sti
push
or
add
adc
adc
cmp
adc
add
daa
sti
push
int
sti
jne
dec
adc
add
es
push
lods
cmp
adc
add
es
push
enter
jge
add
mov
inc
add
xor
fisub
ds
add
or
push
cmps
stos
push
pop
sbb
inc
jg
call
jl
push
pop
aad
push
cmp
call
imul
idiv
adc
retf
int3
fisttp
mov
daa
inc
or
dec
adc
ins
ret
out
int3
repnz
int3
shl
retf
int3
popf
dec
push
mov
add
xor
fisubr
xchg
pop
ror
inc
inc
xchg
and
je
mov
adc
shr
int3
xchg
out
int3
sbb
das
in
adc
movs
push
(bad)
jmp
push
(bad)
pop
and
fcomp
test
sub
sbb
add
add
or
fmulp
int3
add
repnz
int3
adc
retf
int3
adc
retf
int3
popf
dec
push
mov
and
(bad)
sbb
aam
and
lahf
pop
add
(bad)
test
ret
or
sub
add
ins
rol
cmp
add
in
int3
xchg
(bad)
int3
sbb
mov
icebp
sub
loopne
inc
add
cmps
sub
je
and
mov
push
inc
and
jmp
jae
mov
adc
add
add
fwait
mov
call
sbb
xchg
xor
sub
jne
sbb
call
mov
sbb
add
cmp
jno
sub
sti
cmp
add
test
sbb
dec
sub
(bad)
rcl
dec
loopne
push
stc
mov
call
adc
inc
inc
cmp
add
iret
call
xchg
jno
ds
pop
add
les
mov
fidiv
scas
jg
push
sar
push
xor
call
add
mov
push
mov
sub
jmp
(bad)
push
pop
xor
movs
adc
scas
xchg
xor
add
jmp
aam
add
mov
cmp
jno
jle
xor
shr
sti
jne
inc
movs
add
xchg
out
aad
add
jbe
inc
add
xchg
adc
inc
push
test
sti
jmp
(bad)
out
call
pop
js
dec
hlt
inc
fdivr
add
jl
pop
test
call
int3
lea
push
mov
adc
mov
cs
or
jmp
pop
adc
jb
xchg
mov
mov
add
push
mov
mov
add
sub
shl
push
xchg
cmp
jg
bound
cmp
std
call
xchg
jno
push
pop
in
add
lods
in
xchg
jmp
ucomiss
add
push
and
add
out
pop
add
push
mov
xchg
mov
cmp
sbb
inc
or
xchg
mov
jae
push
inc
ret
lods
xchg
jmp
lods
add
and
add
in
jae
push
popf
add
mov
dec
cmp
jg
push
inc
add
jmp
and
add
shl
pop
mov
sub
cld
aaa
fisub
je
adc
(bad)
and
jmp
mov
mov
cmps
add
scas
push
push
mov
xchg
dec
cmp
call
xchg
add
cmp
xchg
lock
ret
and
push
pop
stos
pop
fcomp
stos
call
pop
add
gs
push
mov
adc
inc
pop
stos
je
mov
std
and
push
mov
mov
ret
xchg
mov
in
mov
mov
call
neg
mov
shr
ret
xchg
retf
pop
in
mov
(bad)
push
push
xchg
adc
(bad)
retf
jge
popf
pop
call
add
mov
mov
call
sub
(bad)
jge
ss
sahf
loopne
(bad)
add
mov
push
(bad)
(bad)
sti
jne
inc
(bad)
cmp
jg
push
xlat
mov
mov
mov
push
push
loope
and
push
stos
add
jmp
cmp
add
add
add
add
pop
clc
mov
push
call
mov
mov
add
adc
xchg
jae
ds
cmp
lea
xchg
dec
mov
int
outs
add
jmp
jle
and
xchg
mov
test
popf
push
lea
jno
inc
add
mov
pop
outs
ins
shl
add
pop
aaa
add
test
sub
add
sub
add
push
mov
mov
pop
lods
or
mov
shl
push
leave
xchg
cmp
push
mov
mov
lock
outs
popf
aaa
add
add
cmp
inc
fdiv
data16
cmps
mov
rol
or
jmp
cmps
inc
push
mov
add
add
mov
sti
pop
iret
stos
in
imul
add
or
mov
mov
call
ret
dec
cmp
dec
cmp
inc
add
mov
mov
inc
sti
neg
cmps
dec
pop
movs
cmp
push
pop
adc
inc
into
push
test
sbb
push
mov
scas
add
aad
test
das
mov
add
dec
(bad)
jmp
cld
inc
add
comiss
push
ss
fcmovnu
stc
jmp
xor
jecxz
sti
sub
test
scas
sub
std
mov
inc
sti
call
inc
test
pop
jl
std
inc
inc
test
mov
inc
sti
data16
std
mov
stc
clc
call
inc
sti
(bad)
clc
xor
data16
mov
add
ds
jmp
jne
(bad)
(bad)
stc
inc
add
push
cmp
mov
aaa
inc
cld
iret
xor
ret
test
inc
sti
dec
cld
mov
xchg
inc
std
jmp
scas
test
mov
scas
push
pop
es
adc
push
sub
push
inc
add
sub
jne
sub
jne
xchg
add
inc
outs
add
fist
cli
adc
test
les
push
inc
das
int
sbb
ret
in
inc
push
mov
inc
xor
cs
std
(bad)
mov
mov
call
pop
arpl
(bad)
mov
add
push
push
jbe
into
jmp
out
imul
adc
inc
(bad)
lods
xchg
div
cmp
daa
stos
add
jmp
push
outs
and
jg
xor
add
xor
sub
jae
call
mov
pop
aas
sub
push
inc
sti
(bad)
ds
add
jns
add
push
mov
call
lods
call
pop
adc
test
bound
inc
add
int3
pop
add
xor
rol
call
mov
mov
add
int3
scas
push
call
push
(bad)
in
dec
mov
cmp
mov
inc
cmps
mov
call
or
add
call
mov
cmp
(bad)
ds
inc
in
xchg
inc
add
imul
call
js
jno
movs
cmp
setns
add
mov
into
inc
xor
dec
data16
add
shl
pushf
ss
add
add
inc
jmp
stos
add
mov
cld
(bad)
out
cdq
popf
sbb
jne
sbb
je
sbb
jmp
movs
lds
push
jle
sti
jmp
jecxz
neg
mov
sbb
jg
movs
push
and
sti
xlat
fst
sbb
cmp
mov
add
add
add
pop
je
je
cmp
push
scas
das
add
cdq
add
push
dec
ja
mov
mov
mov
test
mov
call
out
inc
(bad)
and
test
add
aad
pop
pop
gs
sub
cmp
mov
push
das
ror
shr
sbb
out
sbb
push
idiv
adc
js
push
push
ds
and
les
icebp
xchg
repnz
bswap
jmp
das
ror
ss
sub
call
mov
jmp
in
ja
add
(bad)
fdivr
jmp
inc
lds
add
movs
mov
cld
jmp
push
add
ins
lock
push
ins
adc
dec
mov
mov
les
mov
xchg
dec
data16
les
inc
in
imul
adc
add
int
in
or
add
cmp
or
mov
mov
in
jl
sti
jne
add
cmp
cld
jmp
jmp
test
inc
bound
scas
xchg
inc
loopne
imul
cmp
neg
sbb
in
(bad)
scas
add
xchg
in
call
cwde
call
sbb
das
shr
mov
popf
push
idiv
mov
add
data16
mov
sub
push
(bad)
sub
test
cmp
les
(bad)
pop
push
add
xchg
jg
mov
xor
sbb
xor
mov
xchg
out
inc
add
mov
leave
push
jnp
mov
sar
add
mov
call
sbb
mov
inc
adc
add
sub
sub
add
data16
call
dec
push
test
sti
sbb
test
lock
in
xacquire
xor
or
sti
dec
sbb
mov
daa
popa
push
jmp
xchg
call
add
add
add
add
jne
or
or
pusha
pop
in
loop
pop
jmp
jecxz
leave
cs
inc
mov
inc
or
cmps
lods
xchg
inc
jae
xchg
lods
mov
call
lahf
out
xchg
mov
push
js
jno
imul
aaa
imul
in
xor
imul
call
sbb
pop
ret
lods
imul
adc
je
cmp
pop
out
push
mov
lods
push
call
test
lods
jg
(bad)
daa
sar
(bad)
(bad)
jge
xchg
cmc
ret
je
pushf
call
pop
pop
scas
sbb
and
push
pop
add
and
sub
dec
dec
add
dec
in
std
mov
call
or
xor
lods
ret
add
add
mov
push
sti
mov
sub
repnz
loop
je
pop
mov
mov
or
cmps
loopne
add
clc
inc
fisttp
out
push
mov
xor
add
lods
xor
(bad)
out
bound
pop
addr16
inc
stos
add
jge
xchg
cdq
call
pop
aad
sti
push
fld
inc
pop
popf
xchg
sbb
fucomi
jo
mov
add
inc
or
mov
dec
push
push
lock
inc
pusha
or
pop
mov
scas
sub
push
bound
mov
fbstp
add
sub
xchg
pop
or
push
mov
pop
add
popa
inc
add
imul
out
add
daa
dec
jo
in
inc
or
aas
or
push
lods
test
pop
(bad)
pop
mov
add
fnsave
push
mov
in
adc
mov
call
add
add
add
add
xor
mov
stos
add
daa
mov
lea
push
push
xor
push
mov
es
les
stos
add
lea
inc
add
jge
stos
je
ins
movs
clc
add
stc
leave
movs
pop
sti
push
dec
ss
xchg
test
mov
xchg
xchg
jp
inc
add
and
rol
sub
in
mov
xchg
mov
in
aad
adc
stos
aad
dec
push
cmp
(bad)
and
xchg
xor
add
mov
add
sub
in
jo
add
lea
enter
xchg
aad
add
cld
jl
(bad)
mov
jge
add
movs
clc
add
stc
leave
xchg
pop
sti
push
dec
xor
inc
add
fadd
add
xor
add
and
sti
inc
push
pop
adc
inc
jg
ss
lock
int
lock
add
es
jle
add
mov
lock
mov
sti
jne
cmp
es
les
cmp
mov
pop
dec
or
jl
dec
push
adc
and
add
dec
clc
gs
jo
(bad)
icebp
xchg
or
adc
sub
scas
jno
sub
pop
sbb
aam
add
xor
or
imul
jmp
sti
inc
add
xor
xor
in
adc
mov
call
mov
mov
add
mov
lea
push
push
xchg
mov
add
xchg
in
or
add
or
scas
add
ficom
add
fst
clc
push
nop
jo
(bad)
out
xchg
add
sti
push
in
add
sub
scas
jno
sub
pop
sbb
jecxz
add
int3
add
xchg
scas
pop
ret
mov
ss
inc
xor
sub
int3
fstp
shl
and
call
mov
or
in
add
push
stos
push
mov
ret
push
je
movs
ss
jae
sub
add
add
scas
add
das
call
mov
adc
add
out
add
or
or
call
push
das
call
or
push
mov
add
and
pop
sub
add
jge
ss
dec
cld
push
push
je
push
ss
add
pop
xor
or
std
mov
mov
xchg
pop
in
inc
std
add
sti
push
pop
xor
inc
add
cmps
add
push
xchg
add
xchg
test
call
out
xor
add
xor
cmp
in
imul
xor
cmp
add
test
lea
push
dec
mov
pop
fild
add
mov
ins
add
dec
cmp
xchg
mov
mov
jbe
add
mov
mov
pop
lods
add
push
sbb
data16
sbb
stos
push
jbe
std
lds
push
xor
inc
out
xchg
shr
jmp
push
jno
add
aad
aas
push
ds
(bad)
add
jle
sti
inc
stos
add
mov
inc
jmp
sar
dec
into
clc
call
(bad)
or
mov
push
imul
inc
push
cwde
mov
test
add
(bad)
jl
add
sar
cs
add
xchg
xchg
add
outs
dec
mov
stos
add
ds
ss
stc
dec
call
pop
cwde
(bad)
je
cli
in
enter
outs
test
(bad)
cs
les
movs
or
or
push
push
push
cmc
add
xor
add
in
cmp
inc
jno
mov
or
data16
call
add
add
add
add
add
fucom
call
mov
sub
stc
push
ret
popf
(bad)
pop
dec
test
cs
es
push
(bad)
pop
cmp
push
inc
adc
push
stos
ret
inc
push
sub
inc
inc
loopne
mov
xchg
arpl
mov
sub
add
inc
(bad)
cmp
add
sar
dec
data16
int3
and
test
pop
add
pop
pop
and
and
mov
xor
add
js
and
and
js
loopne
mov
clc
jg
lds
or
sub
popa
push
mov
add
lods
movd
sldt
jle
movd
jle
pop
unpckhpd
gs
int3
xor
stos
(bad)
or
fadd
or
(bad)
or
xchg
dec
and
(bad)
or
pop
(bad)
or
int3
(bad)
or
xchg
sti
add
jl
sbb
push
jbe
repnz
hlt
in
xor
lock
jbe
and
add
inc
and
imul
cmp
add
lods
je
cmp
add
out
aad
ret
loopne
(bad)
or
scas
pop
or
(bad)
or
out
or
aam
(bad)
lds
ret
fadd
cvtps2dq
xchg
sti
mov
mov
add
adc
leave
or
stos
test
aad
sbb
push
rol
push
and
sub
adc
push
cmp
push
and
xor
or
leave
cld
push
in
adc
jge
int3
push
jge
int3
arpl
sti
pop
movs
cmp
and
scas
add
push
lds
add
outs
mov
jp
dec
mov
push
and
cdq
outs
(bad)
jmp
cmps
jg
xchg
xchg
(bad)
je
and
ret
scas
add
cmps
fcom
outs
mov
fsubr
movs
mov
mov
daa
repz
das
in
call
pop
sti
xor
sahf
mov
test
and
add
daa
test
add
pop
test
add
out
jno
and
push
xor
xchg
mov
je
xchg
fbstp
in
jns
call
adc
mov
dec
je
jge
pop
pop
xor
sti
pop
aad
inc
inc
push
ret
jecxz
stc
pop
mov
sub
popf
outs
push
mov
inc
push
aaa
push
lods
jg
loop
sti
dec
ss
mov
and
or
daa
inc
in
lahf
call
xchg
(bad)
sub
cmp
(bad)
sub
add
out
inc
fsub
lods
xchg
push
cld
nop
push
sti
(bad)
jle
xor
add
xchg
outs
adc
or
push
out
xchg
add
adc
xlat
or
jbe
inc
or
xbegin
js
xor
fild
mov
loopne
lods
add
pop
sub
call
call
in
add
pop
push
jno
push
xlat
or
add
retf
lahf
sti
jne
inc
inc
jmp
ret
cmp
sbb
xor
out
mov
inc
xchg
xchg
inc
adc
mov
into
(bad)
jmp
push
jno
mov
imul
stos
add
sbb
clc
(bad)
and
call
div
add
adc
aad
fadd
add
fwait
mov
jno
add
or
sub
sti
ret
popf
push
push
mov
sar
fstp
jno
dec
and
daa
les
addr16
jmp
in
xor
push
outs
bound
add
pop
jno
mov
push
push
stc
sti
ret
add
pop
repnz
add
(bad)
sti
jmp
nop
jns
stos
jae
jmp
push
jnp
stos
inc
inc
add
test
and
iret
in
cmp
(bad)
mov
sti
jne
and
or
sbb
jg
push
repz
push
push
mov
xchg
and
adc
sar
sub
cld
out
push
sti
inc
add
adc
addr16
ret
dec
inc
xchg
sti
data16
sub
add
cmps
test
jns
or
out
cld
imul
add
adc
test
add
mov
xor
out
cld
out
popf
add
outs
call
cld
test
fadd
push
jmp
aad
mov
push
out
cld
jmp
test
xor
cmp
(bad)
out
mov
inc
adc
fld
mov
mov
cli
adc
scas
xchg
xor
jmp
mov
add
in
and
inc
push
adc
add
rcr
xchg
dec
push
mov
cmp
fadd
call
add
call
pop
in
sti
push
lea
sub
cld
cmp
push
add
push
mov
retf
jg
(bad)
fsubp
pop
test
add
cmps
scas
push
jmp
xor
and
add
inc
adc
std
pop
add
dec
in
mov
jg
jp
adc
addr16
add
in
in
or
scas
push
pop
adc
jno
push
adc
pop
ret
lods
inc
push
mov
ss
or
adc
mov
adc
scas
jae
ror
inc
inc
sti
sub
add
jno
push
ds
add
jmp
and
pushf
inc
shr
scas
pop
ret
sbb
ss
or
mov
adc
ror
jmp
inc
sti
adc
dec
call
scas
in
adc
push
dec
into
inc
in
int3
bnd
int3
adc
int3
adc
int3
jnp
in
push
add
push
outs
push
push
xchg
dec
push
xchg
xchg
xor
or
sub
cmps
add
push
in
mov
mov
leave
inc
xor
std
mov
mov
je
mov
push
add
in
xchg
and
outs
int3
int3
jb
int3
int3
push
jb
int3
sti
ss
push
aad
push
push
inc
loope
push
inc
loope
push
add
bound
inc
add
stos
or
stos
mov
ret
cmps
add
push
in
mov
mov
(bad)
daa
mov
add
mov
jg
ss
ret
popf
cmc
and
ins
(bad)
call
lods
je
mov
je
pop
mov
jne
enter
lods
mov
das
movs
and
add
lods
add
sbb
aas
jle
xchg
lock
outs
jg
stos
adc
add
jmp
test
fsubr
test
and
stos
sahf
movs
add
sti
je
push
leave
lea
enter
das
cmp
add
imul
cmp
daa
shl
cmp
add
add
mov
in
gs
and
int3
mov
mov
arpl
inc
clc
dec
pop
or
pop
stc
pop
sub
mov
hlt
xchg
jmp
add
pop
icebp
push
mov
push
sti
jne
cmp
push
xor
cld
enter
mov
xchg
xchg
xchg
xor
or
add
hlt
clc
fs
add
push
stos
xchg
mov
add
es
xchg
dec
pop
or
int3
clc
mov
mov
or
repz
xchg
(bad)
sti
loopne
cmp
mov
dec
push
or
pusha
mov
stos
add
out
jno
cdq
hlt
hlt
mov
repnz
imul
(bad)
hlt
dec
ret
in
xor
stos
das
loopne
sbb
mov
mov
add
inc
pop
cld
fist
add
push
fistp
pop
jo
add
in
xor
dec
push
mov
rcl
sti
jne
cmp
mov
(bad)
sti
jne
bound
push
push
stos
jg
jbe
inc
clc
xor
push
mov
push
xchg
and
inc
add
inc
in
push
xchg
inc
jno
pop
in
add
nop
bound
add
cmp
add
jno
mov
ret
ret
test
pop
pop
aad
sti
push
fisttp
in
mov
jge
outs
mov
call
push
mov
fld
mov
rol
(bad)
jmp
sub
es
fadd
add
cmc
adc
inc
dec
fcom
outs
test
inc
inc
sbb
lds
sbb
in
call
inc
xchg
sub
out
popa
clc
(bad)
sub
(bad)
inc
popa
hlt
pop
in
fs
test
inc
fcom
in
aam
inc
test
inc
enter
add
ins
xchg
add
inc
ror
and
and
mov
loopne
inc
dec
cmp
push
pop
movs
retf
les
xchg
sar
add
movs
mov
mov
add
inc
dec
cmp
add
scas
add
fild
fdivr
scas
xchg
icebp
vminsd
dec
cld
dec
jmp
mov
add
(bad)
das
dec
shl
out
cmp
inc
add
push
data16
inc
inc
or
call
add
es
in
hlt
or
cmps
mov
inc
bound
(bad)
or
lods
push
loope
or
imul
or
imul
xor
and
mov
jne
push
jno
add
mov
cmp
(bad)
mov
scas
push
int3
scas
mov
fldenv
scas
add
aaa
push
sti
call
sbb
jmp
xchg
inc
pop
sbb
out
push
rol
mov
in
inc
ficom
or
cdq
xchg
inc
inc
cld
in
jo
sub
imul
data16
xchg
add
add
add
inc
dec
adc
add
xchg
dec
or
mov
(bad)
xchg
lds
pop
push
inc
jno
xchg
mov
xchg
out
xor
adc
ficom
aaa
repz
add
movs
hlt
clc
pop
loopne
vcvtsd2si
mov
inc
or
inc
jno
add
pop
test
sub
add
inc
inc
add
mov
mov
push
lods
add
fst
mov
popa
pop
sub
xchg
std
ret
xchg
cmp
inc
inc
add
imul
push
lock
in
cmp
sub
lods
xchg
xchg
mov
(bad)
lods
add
add
lods
xchg
inc
mov
rep
call
mov
xor
add
test
icebp
or
xchg
adc
cmp
pop
aas
iret
push
add
dec
add
add
jmp
inc
sti
push
frstor
in
or
test
mov
jl
mov
inc
inc
or
add
movs
inc
(bad)
pop
dec
jmp
inc
inc
cld
retf
add
stos
test
aas
inc
call
out
sti
jne
(bad)
jne
arpl
(bad)
stos
xchg
sbb
lods
add
xchg
inc
mov
(bad)
fld
inc
and
sahf
fs
(bad)
push
push
fbld
adc
add
rcl
clc
(bad)
stos
push
sti
jmp
push
mov
int
add
add
jbe
sti
xor
mov
and
fist
ds
call
add
push
mov
cmp
jne
push
cld
inc
push
sti
call
lock
addr16
mov
stos
mov
daa
add
mov
inc
sub
call
inc
inc
lock
push
sti
call
mov
ficomp
ret
xchg
sti
xor
mov
and
fist
ds
call
add
ins
push
mov
test
push
jno
fldlg2
clc
jmp
dec
mov
add
add
add
out
add
movs
aas
dec
hlt
mov
test
pop
pop
pop
dec
pop
push
xchg
aas
dec
lock
test
mov
arpl
jmp
bound
into
mov
in
xchg
pop
sub
data16
inc
imul
xor
cmp
sub
std
push
mov
cmp
add
push
call
add
dec
pop
shr
push
imul
adc
inc
es
test
add
inc
test
outs
sub
std
mov
push
sti
call
sar
mov
push
sti
dec
inc
xchg
clc
add
xor
mov
jns
jmp
add
push
sti
(bad)
cmp
sti
data16
mov
(bad)
fild
call
cmp
mov
add
loope
xor
es
add
mov
loope
test
push
sti
call
inc
push
ss
sub
scas
mov
push
jl
mov
stc
inc
add
inc
sti
push
ins
sbb
cmps
scas
inc
mov
cld
jmp
push
sti
jmp
xor
sub
popf
rcr
xor
add
xchg
jnp
in
push
push
cmp
jns
mov
adc
je
lods
cmp
add
add
add
add
scas
aaa
ret
or
xor
xchg
mov
add
test
lock
push
mov
add
mov
add
jmp
(bad)
jmp
mov
jne
fsubp
iret
mov
call
add
cmps
push
mov
xchg
scas
push
pop
mov
scas
call
(bad)
call
add
lods
call
fnstsw
rol
scas
aaa
ret
push
xor
xchg
lods
add
push
push
add
push
fsubp
mov
push
sti
mov
adc
(bad)
ss
js
inc
push
xchg
lea
call
mov
lods
call
sub
mov
add
sub
idiv
jae
mov
jne
fucom
lahf
xor
cmp
inc
push
push
pop
repz
dec
(bad)
fwait
mov
jge
push
jb
inc
push
leave
or
je
test
jne
fucom
adc
push
sti
pop
aas
repnz
je
ss
add
ins
je
pop
test
cld
out
push
push
add
cdq
mov
ret
push
dec
pusha
jecxz
xchg
in
pop
in
out
mov
in
add
pop
inc
add
xor
(bad)
mov
add
add
fdivr
(bad)
or
lods
add
sub
add
adc
xchg
lods
add
fld
xchg
lea
add
ret
inc
push
mov
ja
(bad)
scas
inc
add
mov
add
push
(bad)
sbb
aas
add
ins
je
push
push
(bad)
adc
ror
(bad)
mov
add
stos
push
(bad)
js
pop
pop
jecxz
xchg
or
add
xchg
mov
add
sub
cld
add
(bad)
in
push
push
je
xchg
mov
add
jno
add
sbb
add
shl
(bad)
int
mov
es
add
or
add
stos
add
mov
arpl
sbb
hlt
shl
cld
jae
daa
inc
jae
jnp
mov
or
add
add
xchg
jae
ret
mov
dec
or
je
xchg
push
add
cmps
cli
sti
(bad)
inc
test
push
fidiv
test
fisubr
push
in
call
dec
inc
mov
test
fst
push
out
in
call
das
add
or
push
fiadd
push
(bad)
clc
stc
inc
add
outs
das
rcl
push
ds
and
and
test
sbb
out
inc
jo
(bad)
jg
repnz
and
cmps
es
sbb
or
call
pop
sbb
mov
ret
sub
call
pop
in
clc
add
out
mov
sbb
add
jmp
dec
test
inc
cld
loopne
sti
(bad)
(bad)
stos
add
es
mov
sub
mov
mov
dec
mov
test
mov
icebp
outs
test
xor
(bad)
mov
or
out
jg
mov
sub
je
add
adc
sbb
adc
add
mov
add
movs
push
call
aas
inc
cld
mov
icebp
cld
jmp
add
add
add
ret
inc
and
ss
outs
and
test
fisttp
cmp
jno
jecxz
sbb
fadd
push
(bad)
cli
clc
jmp
dec
sti
call
es
scas
mov
add
add
add
add
es
add
inc
push
call
xchg
and
cld
mov
add
and
or
call
pop
gs
push
or
and
je
xor
or
xchg
(bad)
push
scas
jno
xchg
in
push
push
pop
and
cmp
inc
adc
add
lahf
in
push
mov
xor
add
xchg
dec
push
gs
inc
push
cs
inc
out
cld
add
scas
dec
dec
stos
rol
shl
(bad)
shr
cld
jmp
cld
or
les
scas
add
xchg
scas
xor
mov
mov
xor
sub
sbb
push
xchg
xchg
jge
out
test
or
sub
test
test
mov
add
loop
add
lahf
in
hlt
cmp
jno
lea
inc
and
or
sbb
and
push
jno
mov
sar
mov
fwait
test
sti
jne
push
(bad)
mov
test
cmps
iret
aas
push
lahf
rcr
push
jg
xchg
(bad)
lea
test
in
dec
lods
add
inc
push
int3
adc
in
or
pop
dec
outs
je
fldcw
jg
push
and
hlt
std
scas
test
add
sub
add
lods
push
dec
pop
sti
jne
push
jno
int3
stos
sti
jne
push
(bad)
test
lods
add
cmps
std
dec
push
sbb
sti
jne
push
(bad)
mov
dec
clc
int
or
out
add
add
pop
sbb
sub
dec
xor
data16
add
imul
jne
push
jno
add
add
or
add
lods
aaa
retf
adc
data16
jge
mul
xchg
mov
cmp
fisubr
mov
hlt
int
je
cdq
stos
int3
int3
(bad)
stos
jg
into
inc
sbb
call
sub
and
inc
add
test
out
je
push
jno
mov
push
jno
inc
fld
dec
scas
into
inc
data16
cmp
mov
add
mul
push
adc
sbb
mov
dec
jmp
mov
adc
lahf
in
hlt
push
scas
adc
jmp
inc
stos
std
inc
push
xchg
lock
add
xlat
stos
add
xchg
nop
pop
or
mov
adc
(bad)
fld
cwde
pop
inc
add
in
sbb
sbb
add
in
call
pop
xchg
imul
cmp
stos
add
jne
mov
stc
sti
jne
cli
sti
jne
inc
shr
stos
jg
and
add
cmp
popf
or
push
dec
push
mov
fisttp
jmp
mov
hlt
cmp
inc
mov
(bad)
test
loopne
into
ror
test
adc
and
aaa
sti
sub
pop
push
data16
and
stc
in
mov
sti
pop
pop
push
xlat
fld
add
add
push
ret
or
or
out
loop
add
lds
jge
push
add
jmp
std
std
jne
push
jo
xchg
fild
jne
ret
jnp
jo
arpl
retf
test
push
inc
jl
jmp
adc
add
push
in
sbb
sub
add
add
add
add
or
push
add
pop
jmp
movs
std
jne
add
or
sub
adc
xor
cld
mov
push
hlt
stos
mov
lods
loope
add
cmp
push
xor
jge
push
(bad)
es
add
(bad)
mov
fcomp
push
dec
xchg
rol
(bad)
call
mov
add
retf
cmp
add
jne
xor
dec
shl
mov
jae
dec
int3
std
jne
add
sbb
jnp
call
pushf
std
jne
add
or
fdivr
jmp
cmp
or
pop
jo
stc
ror
ss
push
test
jo
in
je
mov
loopne
(bad)
dec
add
add
pop
pop
push
cmp
add
es
outs
pop
xchg
(bad)
in
aas
pop
mov
je
pop
push
cmp
and
sar
xor
push
cdq
scas
add
(bad)
jge
sar
and
in
icebp
movs
popa
int
xchg
icebp
jno
(bad)
sbb
scas
add
and
add
and
add
jo
pop
xchg
mov
pop
cmp
dec
pusha
cmp
pop
arpl
add
stos
mov
ss
add
mov
das
ret
add
mov
int3
movs
dec
(bad)
and
sbb
out
inc
add
stos
mov
lock
add
pop
imul
cwde
lods
add
in
repnz
xchg
retf
loope
cld
(bad)
mov
xchg
cs
add
and
mov
(bad)
and
sbb
inc
add
bound
add
bound
add
bound
add
bound
add
cmp
lods
ins
mov
add
scas
ins
(bad)
in
ins
mov
lahf
ins
(bad)
call
(bad)
ins
(bad)
in
pop
ins
mov
pop
ins
(bad)
lock
ins
mov
outs
ins
(bad)
hlt
pop
ins
mov
pop
ins
(bad)
clc
dec
ins
mov
dec
ins
(bad)
cld
and
add
cmps
lods
clc
(bad)
mov
lods
mov
cmp
add
popa
cmp
fisub
add
popa
cmp
frstor
pop
add
mov
stos
test
frstor
pop
xor
test
int3
push
xchg
mov
bound
aad
inc
add
sti
xchg
xchg
xor
add
repz
xor
test
stos
outs
and
adc
xor
into
jge
std
xchg
inc
std
inc
add
stos
mov
test
or
inc
cmps
cs
add
stos
add
in
add
cs
and
push
cmp
adc
xchg
(bad)
jo
(bad)
call
add
jae
and
sub
xchg
or
sar
sub
and
clc
repz
std
std
and
add
pop
inc
out
inc
add
and
jae
sar
mov
das
jmp
push
or
or
lahf
cld
adc
cld
(bad)
sbb
add
ja
inc
add
add
addr16
jecxz
fidiv
adc
out
push
das
hlt
or
push
jmp
sti
div
mov
add
mov
inc
add
mov
add
mov
add
mov
add
xchg
cmp
adc
cmp
mov
mov
outs
lea
outs
lea
pop
outs
mov
outs
lea
outs
lea
sbb
outs
lea
outs
lea
sbb
add
jne
add
mov
add
add
push
stos
clc
(bad)
jp
xor
test
cmp
sahf
nop
cmp
mov
nop
cmp
popf
ins
add
popa
call
add
push
pop
pop
leave
in
inc
add
xchg
sub
pop
ins
add
and
rcl
stos
xchg
add
sub
dec
ja
xchg
mov
inc
sahf
pop
pop
leave
gs
push
sub
push
(bad)
jne
or
clc
aas
sub
jne
mov
cld
jne
data16
adc
shl
jmp
add
push
and
or
outs
retf
pop
pop
arpl
mov
mov
in
push
add
jns
repnz
std
outs
or
jnp
call
pop
clc
add
jns
inc
jb
cld
jne
gs
adc
push
ss
add
or
icebp
cmp
ret
sbb
jmp
in
push
dec
shl
fld
mov
clc
add
lahf
push
jg
fwait
int
inc
xor
cmp
sub
push
jns
push
adc
xchg
cmp
test
std
mov
jmp
pop
repnz
mov
push
xor
test
dec
cmps
in
icebp
scas
add
sub
outs
sub
jne
je
add
push
std
adc
adc
jmp
add
enter
inc
daa
icebp
cmp
outs
mov
sub
dec
mov
(bad)
mov
push
cmp
pop
or
stc
aaa
jnp
push
push
push
ret
lea
cld
pop
add
movs
mov
inc
pushw
pop
mov
sbb
cmps
push
ret
outs
enter
xor
jne
xor
rol
xchg
cld
jmp
out
outs
push
dec
xchg
cmovbe
in
mov
mov
or
inc
dec
or
repnz
jmp
icebp
call
iret
mov
in
(bad)
push
popf
or
dec
mov
repnz
outs
or
add
mov
(bad)
out
fild
push
fadd
mov
or
in
push
pop
cld
lds
out
or
outs
jne
jmp
aas
or
push
inc
push
ret
and
push
push
or
add
jg
fisubr
push
pop
sub
add
and
je
in
or
add
adc
push
pop
stos
in
je
push
in
jmp
jae
cli
add
inc
ss
push
sbb
je
dec
test
rol
push
ret
pop
icebp
dec
mov
add
mov
mov
js
cmp
sub
call
add
add
test
cld
jmp
xor
jle
add
push
stos
dec
pop
mov
or
scas
sub
add
sahf
push
add
and
lods
push
add
and
jge
add
xor
mov
and
ds
nop
add
stos
std
add
clc
add
jge
je
daa
sti
jmp
scas
cmp
jmp
xor
call
pop
dec
or
jl
(bad)
(bad)
sti
call
stos
je
fbstp
push
test
dec
or
outs
sti
add
add
aas
pop
add
pusha
cld
push
call
jmp
jmp
pop
in
pusha
call
lods
jne
mov
mov
and
lods
sbb
inc
mov
add
out
cmp
ins
jmp
in
cld
call
add
inc
xchg
cld
call
jge
call
and
test
xchg
add
(bad)
cmps
test
mov
pop
mov
jae
adc
in
or
stos
ret
mov
xor
and
adc
ss
and
adc
dec
xor
and
and
push
ins
or
push
lahf
cld
call
xlat
cmp
push
sbb
fidivr
test
mov
in
add
mov
mov
cdq
jg
sbb
addr16
ror
je
sbb
sbb
je
adc
out
sbb
out
mov
in
jmp
icebp
xor
mov
retf
lock
mov
int3
fucom
dec
mov
sbb
int
push
mov
add
mov
inc
or
xchg
add
adc
sbb
push
pop
add
in
rcr
(bad)
jne
div
(bad)
scas
call
cmp
ret
mov
push
cmc
pop
mov
sbb
sub
and
sub
jp
sbb
lods
add
dec
or
add
sbb
pop
mov
hlt
xchg
pop
std
adc
add
dec
pop
add
repnz
repnz
(bad)
pop
jmp
add
mov
ret
ret
sub
mov
ret
out
hlt
std
(bad)
ds
mov
add
scas
call
cmp
add
add
push
pop
cld
jmp
push
inc
add
scas
mov
je
imul
clc
std
jmp
je
push
dec
dec
sbb
push
pop
aam
xchg
xchg
mov
sbb
aad
enter
clc
mov
std
jbe
adc
ss
mov
ins
aam
fimul
lea
mov
push
scas
add
mov
out
mov
outs
ins
int3
call
pop
mov
(bad)
lods
call
mov
popf
or
(bad)
clc
add
in
inc
mov
popf
add
outs
sbb
imul
ds
inc
lds
pop
loopne
mov
push
inc
in
add
ds
mov
stc
push
adc
lods
and
lods
jo
adc
lods
jge
adc
dec
or
adc
fadd
ins
pop
fdivr
sbb
adc
movs
push
push
add
(bad)
jp
fst
int
inc
or
dec
push
or
movs
cld
add
xchg
icebp
add
xchg
sub
jo
sub
inc
std
(bad)
fwait
mov
call
mov
mov
ret
loope
fsubr
leave
adc
add
pop
lds
fdivr
sbb
jmp
lods
add
pop
lods
add
ds
dec
rol
add
lea
out
jnp
lds
jmp
cmp
pop
adc
sub
adc
test
sub
outs
enter
cmp
push
adc
outs
enter
and
je
in
outs
adc
pop
std
and
push
pop
adc
and
(bad)
mov
push
mov
mov
sub
int
or
add
add
push
sti
jmp
daa
dec
or
outs
or
mov
add
sub
test
mov
add
mov
and
jne
shr
push
cld
in
inc
push
dec
test
add
or
add
and
pminsw
data16
call
lahf
js
shl
add
mov
sub
mov
or
js
push
movntq
add
daa
js
popf
gs
es
pop
sub
cmp
ror
or
add
jle
call
out
js
rcl
xchg
add
test
mov
pop
adc
mov
add
imul
mov
jg
xchg
test
je
in
or
dec
xor
pop
pop
xor
push
js
ror
arpl
push
js
test
push
push
dec
jbe
inc
cs
jo
dec
push
push
enter
add
push
mov
(bad)
call
pop
js
shr
push
push
ds
add
ja
test
mov
add
jmp
add
xchg
js
xchg
imul
imul
fldcw
(bad)
push
in
std
mov
lock
ret
in
dec
in
test
push
lock
add
add
add
add
add
ins
mov
cld
out
mov
or
push
mov
add
mov
add
retf
mov
and
jne
jmp
movs
mov
je
inc
mov
ror
outs
xor
scas
xchg
jg
ja
(bad)
mov
pop
imul
jb
add
cmc
(bad)
cmp
sbb
imul
pop
adc
rcl
std
call
mov
call
sbb
(bad)
and
std
call
in
mov
call
push
jecxz
(bad)
jnp
in
and
add
outs
sbb
js
jne
(bad)
push
inc
add
(bad)
shr
add
sbb
outs
and
(bad)
popa
shl
jne
js
scas
jg
std
mov
stos
push
dec
mov
jmp
mov
inc
mov
outs
or
or
push
add
sub
std
call
jmp
jbe
addr16
rcl
int
dec
mov
jns
push
popf
push
add
inc
scas
xchg
mov
add
out
adc
push
das
mov
add
xchg
in
imul
add
(bad)
lds
out
xor
or
inc
loopne
mov
jne
shr
adc
jne
shr
clc
lds
les
and
add
js
in
or
add
stos
test
repz
test
xchg
jp
inc
and
jmp
push
call
popf
ror
adc
push
cmp
and
ja
push
inc
mov
mov
loopne
in
mov
sub
je
sub
or
push
sub
push
pop
and
jmp
mov
shr
add
cld
lods
std
jne
shr
mov
movs
call
mov
int
les
addr16
sbb
cmp
pop
movs
pop
sub
mov
sub
or
outs
adc
movs
aaa
and
add
out
call
push
push
(bad)
arpl
and
sar
mov
sar
add
xchg
inc
add
and
or
jno
inc
xchg
cvtdq2ps
(bad)
call
sub
adc
adc
add
scas
stos
add
sub
pop
adc
or
adc
sbb
add
data16
data16
jg
push
stos
add
mov
add
in
mov
stos
add
ficomp
inc
add
push
(bad)
stos
mov
scas
pop
add
push
mov
lea
es
add
and
scas
lods
bound
out
push
test
addr16
(bad)
jg
outs
es
or
or
shl
add
ret
mov
xchg
lahf
pop
or
stos
ret
cmps
stos
call
add
add
add
add
push
add
data16
je
xlat
or
push
pop
mov
call
and
xor
and
call
outs
sub
fnstcw
inc
push
pop
mov
mov
fs
ins
cld
out
loop
jmp
outs
or
jge
js
dec
int
add
aas
sti
inc
add
mov
std
pop
mov
test
xor
lods
sbb
mov
fst
gs
ds
xor
xchg
add
inc
or
push
or
add
mov
mov
je
test
add
push
xchg
call
pop
mov
mov
test
and
add
xchg
dec
loopne
xchg
dec
in
push
push
pop
hlt
dec
nop
push
call
push
in
adc
mov
inc
lock
loopne
push
push
add
(bad)
cmp
iret
lods
or
add
cmp
pop
dec
lock
mov
inc
scas
or
jle
cmp
fnsave
lea
dec
call
add
add
add
add
inc
and
cwde
movs
mov
jbe
outs
hlt
iret
dec
fsubr
pop
(bad)
jmp
pop
sbb
jae
add
adc
std
dec
(bad)
xor
push
xor
push
inc
mov
and
arpl
jmp
nop
mov
std
jne
lds
mov
lahf
push
mov
mov
dec
xchg
(bad)
or
mov
in
adc
repz
std
call
movs
add
sti
push
ds
inc
push
add
add
fist
add
data16
and
arpl
jle
es
add
xor
mov
push
scas
push
call
outs
sub
add
push
xlat
ss
add
shr
add
outs
add
and
and
mov
lahf
or
cmp
jmp
call
sbb
js
jne
ret
outs
or
cmp
inc
lds
inc
pop
sbb
push
(bad)
(bad)
frstor
or
js
push
mov
sub
add
ret
std
dec
ret
outs
clc
test
outs
adc
cmp
push
call
xchg
retf
push
mov
add
xchg
add
lods
add
xor
lods
pop
pop
in
clc
ror
ret
outs
or
ret
std
(bad)
cwde
fild
ret
pop
repz
add
pop
push
push
add
scas
inc
or
cs
lods
add
in
dec
adc
xchg
mov
fdivr
fisttp
sbb
aaa
xchg
je
sub
es
lods
xor
and
xchg
jb
fild
pop
mov
xchg
push
lods
add
daa
mov
test
jns
(bad)
mov
adc
add
and
push
add
mov
mov
mov
ret
pop
mov
or
sub
jnp
mov
je
pop
add
and
push
pop
pop
iret
je
mov
jne
jp
jne
shr
ret
add
jmp
mov
push
sub
and
add
mov
outs
sbb
push
and
push
adc
retf
fwait
std
jne
pop
in
cmp
mov
shl
pop
pop
ret
in
mov
mov
pop
xchg
aam
stos
lds
(bad)
idiv
add
mov
push
pop
mov
aam
mov
add
ins
fistp
add
add
data16
push
inc
jno
(bad)
pop
pop
sbb
xchg
rol
hlt
(bad)
mov
add
out
sbb
cmps
rol
lock
retf
pop
in
call
mov
js
(bad)
psrlw
stos
je
cmp
(bad)
neg
pop
xchg
in
int3
int3
sbb
das
in
sbb
add
or
aad
inc
adc
cwde
hlt
aas
call
stos
add
rcl
cmp
je
in
ins
add
and
cmp
add
and
dec
or
je
add
jle
cmp
ror
inc
pop
inc
or
xor
mov
sub
clc
mov
or
add
push
xlat
cli
je
sub
pop
mov
xor
mov
mov
hlt
test
adc
xchg
test
jg
and
inc
or
das
stc
(bad)
fucomi
cmp
je
in
mov
clc
and
mov
test
fcmovnb
std
dec
outs
or
add
push
test
call
lods
ins
lock
jo
mov
sub
inc
stos
test
ret
mov
mov
lds
addr16
push
inc
add
cmp
push
outs
jmp
sub
je
sbb
pop
std
adc
and
test
stos
jp
add
add
bound
push
mov
ror
data16
inc
xor
dec
clc
iret
dec
or
call
xor
cwde
in
fnstcw
push
push
test
in
pop
mov
mov
add
call
cld
mov
push
or
sub
mov
add
jne
push
sbb
scas
add
mov
(bad)
int3
int3
sbb
inc
and
fbstp
jmp
add
fwait
jnp
push
stos
add
movs
add
cmp
call
mov
hlt
or
xor
icebp
and
pop
add
sub
sub
add
dec
call
mov
cmps
leave
adc
cmps
push
mov
std
xor
je
push
push
sbb
test
push
inc
and
out
int3
int3
push
in
int3
int3
imul
les
jge
or
scas
mov
dec
lea
das
fadd
gs
pop
jmp
cld
dec
ror
add
in
sub
mov
scas
lods
fsubr
out
mov
(bad)
popf
aam
fsubr
inc
add
enter
bound
inc
mov
clc
add
enter
and
bound
inc
mov
add
add
add
push
lea
inc
add
lock
cld
mov
mov
mov
addr16
mov
addr16
mov
leave
cld
jmp
jmp
das
xor
add
lods
add
mov
sub
push
jmp
sbb
sub
push
lods
add
out
inc
adc
sahf
mov
test
fsub
dec
rol
sub
jle
or
add
lods
push
dec
sub
cld
dec
sub
push
jae
or
sar
call
std
adc
fucomip
mov
imul
mov
add
mov
pop
in
(bad)
push
popf
mov
inc
add
jb
ror
std
jne
rcl
pop
pop
in
je
aad
inc
pop
movs
jge
pop
xchg
add
mov
pop
xor
call
test
stc
ja
mov
pushw
inc
add
push
inc
pop
push
push
cmps
leave
inc
add
lds
cmp
cmp
mov
add
in
add
mov
sti
sub
jmp
xchg
pop
and
or
pop
movs
pop
or
sub
dec
mov
(bad)
and
call
out
daa
pusha
cld
(bad)
jmp
dec
inc
add
add
add
add
pop
cmp
inc
add
xor
add
sub
je
iret
sub
inc
add
or
std
jmp
stc
(bad)
jmp
jno
pushw
lds
aam
jmp
mov
call
ret
popf
fucompp
lds
add
mov
int3
repnz
int3
push
mov
int3
add
push
mov
int3
pop
outs
and
call
outs
cmp
test
add
fs
jmp
or
call
push
dec
or
pop
cmps
outs
adc
lods
push
in
xlat
mov
xchg
icebp
rcl
icebp
sti
ret
sti
jmp
je
fdiv
push
mov
je
xor
or
(bad)
call
mov
movs
js
inc
or
ss
pop
dec
mov
and
int3
int3
xchg
mov
int3
sti
stc
in
push
call
inc
or
jecxz
mov
sbb
(bad)
jb
mov
mov
add
enter
add
xchg
call
je
pop
push
cmp
and
or
outs
mov
neg
mov
add
xadd
mov
loop
xor
or
icebp
movs
mov
outs
cld
(bad)
popf
in
mov
push
mov
sub
add
sahf
lds
mov
add
outs
cld
(bad)
mov
outs
cld
(bad)
into
cmp
cmp
out
cmp
xchg
lods
xchg
test
scas
scas
mov
cs
add
mov
jb
and
int
inc
data16
loopne
push
into
jp
inc
push
repnz
sahf
cmp
sbb
add
add
and
icebp
movs
xchg
lea
(bad)
jne
xchg
mov
(bad)
out
jecxz
gs
jb
movs
or
and
int
inc
out
inc
add
dec
cmp
dec
cmp
dec
dec
cmp
dec
cmp
dec
dec
cmp
inc
dec
cmp
cs
cmp
or
cmp
call
add
in
cmp
in
fnstsw
mov
fistp
(bad)
lock
mov
iret
cmp
clc
lahf
cmp
cld
scas
cmp
add
scas
add
cmps
scas
clc
(bad)
jp
in
daa
scas
mov
dec
dec
cmp
inc
dec
cmp
out
dec
cmp
mov
cmp
pop
ins
add
sar
pop
sbb
add
mov
test
sub
sti
xchg
mov
inc
sahf
outs
pop
leave
aad
inc
add
test
fdiv
sti
xchg
cmc
inc
add
cmp
jno
rcl
inc
xor
jmp
lods
outs
and
xchg
inc
cs
pop
std
xchg
fdivr
(bad)
cmp
cmp
in
and
add
je
out
inc
add
mov
(bad)
lods
add
rol
sub
dec
cmp
xchg
lea
(bad)
add
dec
cmp
xchg
add
add
(bad)
hlt
inc
add
scas
sub
movs
sti
div
sti
iret
std
and
sub
inc
inc
int3
cmp
and
add
hlt
inc
add
mov
sub
inc
mov
pop
pop
pop
cmp
and
cmp
mov
scas
xchg
jmp
jo
sub
mov
shl
repz
std
and
sub
inc
cmps
inc
retf
add
add
cmp
pop
sbb
add
sbb
add
sbb
add
mov
lea
lea
popf
mov
lea
lea
popf
mov
lea
lea
pop
mov
lea
movs
xchg
out
add
add
xchg
scas
clc
(bad)
mov
stos
mov
sbb
add
sbb
add
cmp
bound
cmp
sbb
jmp
pop
scas
mov
ins
pop
leave
and
add
and
frstor
pop
shr
nop
int3
add
and
inc
add
mov
add
ins
pop
leave
in
(bad)
push
(bad)
(bad)
push
jmp
cmovbe
es
mov
cld
dec
adc
sub
adc
adc
xchg
mov
mov
lea
cld
push
mov
mov
shr
push
call
scas
sub
je
dec
and
add
sub
shl
or
mov
inc
or
shr
test
mov
into
dec
mov
jl
add
mov
(bad)
pop
jmp
cmovbe
sub
call
jbe
dec
sbb
inc
(bad)
int
inc
and
jmp
add
mov
(bad)
mov
sub
jne
ss
fwait
mov
pop
jmp
je
mov
inc
std
adc
jmp
je
and
add
push
daa
inc
or
imul
jmp
aam
add
sbb
add
scas
mov
fwait
xchg
outs
sbb
or
add
sbb
std
pop
ins
mov
cmovbe
int3
pmuludq
outs
shl
cwde
std
je
aas
std
xor
jle
std
jmp
sahf
jo
pop
test
inc
add
xchg
std
je
aas
std
adc
in
je
cwde
test
add
ins
popf
push
add
add
add
add
cmps
add
shl
inc
push
cmp
adc
fwait
jmp
mov
push
scas
push
mov
retf
mov
jmp
pop
mov
add
xchg
inc
mov
jnp
ror
test
cld
dec
dec
lods
test
jmp
add
gs
(bad)
sbb
std
rcr
sub
add
add
jmp
enter
inc
sbb
dec
add
inc
(bad)
cwde
inc
xchg
pop
test
or
add
push
xor
jbe
xchg
pcmpeqb
imul
jmp
scas
add
mov
and
inc
ins
pop
out
outs
or
or
inc
ins
xchg
sbb
and
mov
xchg
std
(bad)
jle
cld
jmp
lods
shl
mov
inc
pop
call
aas
in
data16
dec
add
data16
mov
push
dec
iret
inc
push
xchg
das
jo
imul
push
ret
and
jg
fwait
pop
fs
lods
add
lds
xchg
mov
outs
xor
test
or
jmp
cmovbe
xchg
das
adc
nop
std
call
xchg
rol
out
in
mov
xchg
(bad)
gs
and
std
mov
mov
xor
stc
xchg
paddsb
cld
pop
or
xchg
push
call
fstp
adc
add
add
xor
or
test
les
jne
daa
repz
and
in
je
jbe
test
mov
jg
rcr
push
call
pop
and
je
test
ret
mov
push
jg
jmp
(bad)
out
and
inc
sbb
je
add
push
les
xchg
push
mov
addr16
sub
jmp
jmp
xor
and
aaa
adc
outs
cld
jae
cmp
pop
adc
movs
call
pop
xchg
dec
clc
add
sbb
clc
rcr
stos
jg
sub
add
stos
push
call
add
add
add
movs
out
call
in
aas
cld
nop
xchg
std
(bad)
ds
call
inc
or
sub
cld
cmps
stos
add
sub
push
and
sbb
jmp
jne
add
jge
call
jbe
add
movs
cmp
dec
adc
lds
xchg
std
jmp
ret
push
stos
push
call
add
outs
ror
push
stos
mov
or
lods
sbb
jo
sub
call
pop
movs
pop
(bad)
push
or
xchg
loope
stos
push
(bad)
mov
sub
jne
cmp
push
aam
add
xchg
jg
shr
pop
add
mov
fild
std
(bad)
cs
mov
add
add
add
add
sbb
loope
mov
mov
adc
cld
push
mov
sub
push
(bad)
rol
es
xor
mov
sub
es
xor
mov
or
sub
shl
cld
rcr
mov
or
outs
cld
mov
cdq
ins
add
add
sbb
xor
pop
sub
xchg
lds
clc
ja
cld
mov
adc
hlt
add
lds
or
outs
cld
dec
inc
sahf
jg
push
in
mov
dec
pop
mov
jmp
mov
adc
adc
std
xor
mov
xor
cwde
add
xchg
(bad)
add
add
mov
inc
push
cwde
icebp
cli
push
(bad)
jmp
inc
(bad)
xchg
loope
xchg
lds
xor
mov
loop
scas
add
dec
dec
cmp
cmp
cmp
mov
sub
sbb
add
adc
loopne
std
(bad)
in
rcl
mov
push
sub
(bad)
sub
inc
es
push
sti
add
push
inc
sub
cld
push
dec
stc
jmp
xchg
inc
push
xor
push
cmp
xor
(bad)
jmp
out
data16
xchg
into
add
scas
xor
sbb
xchg
cmovnp
cmp
sub
add
mov
std
(bad)
cmps
pop
cld
call
sbb
test
ret
std
sbb
or
arpl
inc
scas
outs
cmp
add
inc
clc
push
(bad)
idiv
jmp
sub
je
aaa
jb
movs
nop
add
lea
cli
call
call
cmp
lea
add
add
jle
add
scas
mov
dec
test
xchg
movs
lods
add
aad
mov
ss
or
in
stos
lods
add
aaa
(bad)
push
or
stos
add
mov
outs
cld
(bad)
stos
mov
inc
add
stos
call
push
add
imul
(bad)
push
add
lods
xchg
call
call
mov
std
xor
cmovbe
xchg
jmp
lods
add
xchg
lds
out
mov
sti
xor
inc
add
lods
jg
sbb
in
xchg
dec
sbb
rcr
std
jne
rcl
aad
(bad)
push
or
xchg
enter
inc
rcl
mov
inc
add
push
add
sti
addr16
(bad)
mov
in
add
es
mov
pop
mov
mov
icebp
jmp
xor
add
imul
add
cmp
cmps
and
pop
ror
sbb
jmp
out
jne
xor
test
sub
or
add
ror
sub
cld
call
arpl
sub
out
sbb
(bad)
aas
shl
or
ins
loope
mov
call
mov
inc
fs
mov
mov
outs
xor
jne
dec
inc
stos
push
mov
mov
std
mov
fnstenv
cld
out
add
jl
inc
sbb
xor
jne
out
sbb
(bad)
out
xor
cld
imul
jp
inc
cmps
jg
pop
push
inc
adc
(bad)
xor
jle
sti
jmp
scas
add
aas
cs
cld
data16
inc
(bad)
pop
inc
xor
stos
add
fistp
xor
add
inc
xor
stos
or
add
test
pop
mov
jge
mov
cmp
(bad)
je
mov
cld
out
mov
call
out
mov
xchg
cmp
outs
loopne
mov
jmp
cmp
in
in
mov
out
test
sar
xchg
mov
jle
hlt
jmp
mov
cld
out
mov
(bad)
in
mov
xor
ds
hlt
jmp
sub
or
xor
jne
js
loopne
scas
cmp
ja
scas
ins
fmul
popf
xor
jmp
inc
xchg
aad
mov
mov
cld
out
mov
pushf
aad
mov
pushf
mov
out
add
mov
aas
cld
mov
pop
cld
jmp
cmp
mov
inc
add
xor
idiv
mov
xor
retf
or
sti
call
shr
mov
add
les
ins
test
sar
mov
ror
add
add
add
test
add
repz
or
movs
inc
sti
imul
mov
or
mov
scas
call
sbb
in
mov
in
cmps
mov
push
jle
pop
add
mov
push
scas
cmp
sbb
hlt
mov
add
cmp
push
sbb
or
ds
daa
add
leave
adc
push
mov
pop
aad
int3
int3
jle
jno
es
xor
lea
adc
and
push
or
push
push
or
inc
adc
mov
adc
(bad)
jmp
mov
jmp
add
add
add
xor
(bad)
fstp
add
gs
lock
pop
add
adc
fst
and
imul
and
ret
pop
jne
push
arpl
add
push
std
adc
mov
sub
es
shl
outs
mov
pop
add
movs
out
push
sub
mov
push
jb
test
push
xchg
adc
loopne
push
cmp
pop
xchg
lods
push
pop
sub
je
fsubr
sti
and
lahf
xor
push
adc
in
out
sub
jmp
jmp
mov
inc
rol
mov
push
add
int
jg
call
or
push
popa
mov
add
ret
or
lods
jl
adc
adc
adc
or
add
sbb
ret
or
mov
out
adc
mov
sub
out
adc
out
inc
add
add
data16
rol
inc
xor
cdq
in
in
xchg
xor
mov
inc
push
lods
add
les
jmp
lods
add
repz
call
mov
fbstp
pop
dec
jo
(bad)
jmp
in
mov
mov
sti
sub
add
add
out
cld
call
jl
jmp
inc
or
out
stos
add
out
loop
cld
mov
int3
or
and
lods
add
shl
in
or
mov
add
stos
add
fbstp
pop
mov
and
imul
or
stos
add
add
nop
mov
ret
jl
in
mov
fdivrp
push
pop
lds
xor
sub
inc
(bad)
daa
cmp
sbb
call
mov
inc
or
scas
std
(bad)
out
mov
dec
push
rol
push
ret
sbb
fild
add
cld
mov
mov
mov
sub
add
test
pop
daa
rcl
push
ret
popf
mov
mov
and
push
mov
push
push
mov
in
cld
shl
add
out
xchg
loopne
lock
fs
mov
movs
repnz
jg
aam
add
inc
sub
add
sub
mov
push
call
je
jmp
fdiv
dec
add
sbb
xor
mov
jmp
div
push
pop
mov
xor
dec
jmp
sar
in
add
mov
les
out
cli
or
add
scas
mov
dec
push
add
adc
mov
pop
mov
fld
aad
lock
push
add
and
add
fxch
ror
add
pop
mov
and
push
fisttp
jne
fst
daa
test
outs
or
pop
cmp
push
add
out
test
inc
cld
cmp
sahf
cmp
or
mov
fldcw
pop
inc
add
(bad)
out
add
das
cmp
inc
adc
idiv
jo
sbb
sbb
jge
xchg
mov
mov
pop
mov
add
scas
mov
push
imul
or
pop
mov
fimul
in
adc
mov
fimul
fnstsw
jmp
fcom
aad
lock
fild
dec
cmps
aam
rcr
pop
sbb
imul
mov
addr16
or
jp
dec
loope
mov
add
pushf
push
jno
push
and
add
popa
mov
dec
mov
add
sahf
jmp
sbb
add
es
(bad)
shr
pop
adc
jg
js
cmp
lods
xchg
mov
sar
or
lea
adc
aam
mov
das
pop
mov
fld
mov
clc
mov
add
std
or
sub
fwait
mov
cmps
arpl
mov
dec
cmp
(bad)
das
in
sbb
addr16
ins
cld
call
popa
mov
push
pop
mov
mov
shl
add
push
dec
or
shr
inc
data16
inc
adc
pusha
adc
mov
movs
add
fsubrp
add
lods
fwait
mov
xchg
popa
dec
int3
mov
dec
inc
sub
add
(bad)
jl
add
cmp
out
jo
inc
xchg
(bad)
es
push
xchg
push
std
adc
dec
pusha
cld
inc
call
sbb
push
pop
mov
add
add
add
call
dec
mov
dec
lea
dec
push
scas
mov
aas
or
cwde
or
jae
cmp
call
pop
sub
add
cwde
mov
or
pop
cld
mov
mov
mov
inc
cmp
add
fwait
adc
sbb
push
lea
inc
sub
jne
add
sub
adc
jmp
push
xchg
add
lods
push
jmp
mov
loopne
sbb
cmp
add
push
mov
sbb
mov
cmc
movs
cmp
(bad)
repnz
xchg
add
cwde
mov
les
lods
das
dec
push
in
jmp
mov
inc
push
sub
pop
fs
jl
push
add
add
add
add
add
stos
adc
mov
add
sub
std
jbe
hlt
std
xor
inc
mov
rcr
stos
jmp
call
cmp
(bad)
call
in
mov
mov
(bad)
pop
loopne
mov
or
call
or
daa
imul
sahf
fldpi
xchg
scas
rol
jmp
ja
(bad)
rcr
add
cs
stos
add
sub
clc
mov
jmp
or
add
std
rol
push
stos
mov
or
mov
add
repz
adc
imul
gs
std
jmp
push
xor
outs
out
adc
div
daa
retf
add
jecxz
inc
and
and
setbe
or
lea
lods
in
jmp
mov
add
(bad)
inc
or
add
add
data16
jne
and
int
clc
add
sar
or
outs
movs
add
dec
or
loope
mov
and
add
add
add
add
mov
gs
jmp
and
ins
popa
inc
pop
imul
js
adc
call
xor
rol
add
mov
pop
pop
outs
push
(bad)
sti
and
adc
cmp
inc
test
sub
outs
jmp
add
add
shl
inc
push
mov
mov
mov
sub
lock
xchg
jmp
and
inc
adc
sti
sti
call
push
rol
sub
add
scas
add
jge
or
add
cld
ror
cmp
shl
or
pop
add
int3
or
adc
inc
add
fcom
shr
std
sti
add
sbb
cli
or
mov
jmp
xor
dec
push
cmp
shl
mov
rol
scas
cli
or
test
push
add
loop
mov
sub
(bad)
ror
mov
cmps
mov
xchg
add
push
cmp
add
add
add
stos
add
pop
sub
mov
mov
xchg
cmp
shl
pop
stos
cmp
adc
call
mov
and
in
icebp
add
lahf
mov
add
(bad)
pop
es
pop
pop
das
std
and
scas
outs
push
add
lods
arpl
sar
es
or
mov
inc
xchg
mov
lods
mov
adc
loopne
(bad)
lods
add
fisub
mov
(bad)
lods
add
cmps
lods
adc
mov
mov
and
xchg
and
cld
jmp
and
or
jmp
mov
xchg
push
jecxz
push
lods
add
push
inc
xor
lods
or
add
lock
imul
cld
ror
xor
lods
fcom
shl
or
(bad)
aas
sub
aas
cld
out
jg
out
add
(bad)
cmp
loope
mov
xchg
dec
or
out
mov
add
add
add
add
mov
sub
aad
add
jge
pop
ss
push
sub
adc
jb
dec
loopne
inc
xchg
cmc
shl
mov
data16
add
pop
xlat
add
pop
and
or
sbb
add
pop
movs
mov
lods
outs
cld
(bad)
xlat
adc
add
mov
xchg
jb
mov
pop
xchg
and
or
fisub
add
repz
sahf
(bad)
push
mov
test
cli
rcr
add
sub
xchg
fmul
mov
adc
jmp
shr
in
in
or
inc
nop
stos
push
into
jmp
sub
add
push
ficom
lea
stos
adc
push
inc
or
rol
es
xchg
adc
call
sub
jmp
add
xchg
jmp
ror
inc
adc
dec
in
imul
add
adc
pop
or
repz
add
loope
stc
jbe
push
jge
daa
into
push
push
jmp
sub
div
aas
adc
pop
or
jmp
mov
aas
or
inc
std
clc
and
lahf
aad
sub
rcl
or
out
xlat
call
mov
dec
cmp
or
jne
clc
and
add
rcl
or
aas
fsubr
cmp
fstp
mov
fadd
adc
pop
scas
mov
jb
(bad)
fdiv
push
pop
add
jmp
jmp
sub
data16
and
shl
mov
jne
pop
pushf
cli
and
fmul
in
test
pop
add
es
call
add
pop
cmp
lahf
mov
inc
xor
sub
adc
inc
add
adc
push
dec
std
je
cmp
add
nop
inc
mov
clc
and
int
mov
cmp
out
mov
and
inc
aas
cld
or
mov
rcr
mov
add
js
add
xchg
aaa
inc
hlt
int
nop
inc
push
inc
and
mov
cld
call
xchg
inc
clc
jl
pop
jmp
mov
inc
fwait
ja
stc
(bad)
repz
mov
inc
add
ins
aas
mov
(bad)
shl
inc
clc
and
cmc
cvtps2pd
dec
add
add
stc
or
xor
and
ret
and
push
inc
xchg
cmc
rcr
in
and
cmp
push
mov
mov
xchg
or
xor
dec
loopne
push
mov
xor
add
mov
cmp
pop
sbb
nop
mov
pop
xchg
mov
mov
nop
dec
add
add
das
ja
(bad)
aaa
dec
or
add
cmovnp
or
or
pop
xor
jmp
mov
mov
dec
or
jp
pop
loopne
mov
dec
adc
dec
add
test
push
pop
ss
or
cmp
push
and
dec
add
inc
add
mov
cmc
push
add
popf
jo
add
scas
adc
ss
cld
pop
ret
std
cwde
cmp
outs
or
out
add
fidiv
inc
cld
push
add
lock
mov
shl
xor
leave
or
or
lea
outs
lock
pusha
xchg
add
jg
mov
cmp
sti
mov
xchg
mov
xor
inc
cld
pop
mov
inc
cwde
mov
pop
movs
test
xor
add
xchg
jmp
pop
jo
ret
ret
popf
inc
dec
mov
loopne
push
cmp
xor
ja
jge
mul
fisttp
mov
push
cmp
cmps
lods
add
push
je
xchg
lods
push
cmp
test
stos
add
cld
lods
call
pop
sbb
in
rcl
cwde
mov
push
fisub
stc
cld
data16
add
(bad)
sti
call
mov
adc
lods
add
adc
inc
push
stc
call
add
jmp
push
enter
jbe
std
jmp
adc
stos
add
add
inc
(bad)
stc
data16
lods
add
retf
pop
retf
inc
(bad)
(bad)
mov
out
stos
push
push
mov
xchg
(bad)
mov
pcmpgtw
push
inc
loope
call
in
adc
(bad)
mov
add
add
add
add
repnz
or
jb
push
cmp
push
sbb
pushf
stc
cmc
add
out
loopne
call
movs
jne
test
or
test
push
push
cmp
call
sbb
fs
dec
cmc
add
bound
(bad)
shl
push
push
call
add
std
sbb
inc
xchg
cmp
lds
mov
call
sub
jg
retf
push
mov
push
call
in
adc
mov
jmp
in
push
jecxz
(bad)
jbe
add
mov
adc
popf
jb
fimul
mov
push
sub
xor
add
cli
mov
call
pop
idiv
ss
mov
stos
pop
pop
mov
popa
clc
push
cmps
test
je
or
call
pop
sbb
pop
adc
mov
je
jmp
call
push
ds
cli
jmp
stc
push
ret
int
dec
mov
sub
adc
add
xor
mov
inc
push
xor
aam
mov
pop
cmp
add
(bad)
cmp
or
cmp
gs
jne
shr
mov
out
(bad)
cmps
cmps
add
cmps
push
add
cmc
stos
add
dec
mov
add
add
popa
add
aad
cld
add
cmp
scas
mov
mov
jno
call
cld
aas
es
iret
push
sub
add
mov
mov
sub
push
and
or
add
inc
cld
jmp
sub
or
out
je
sub
sbb
jg
call
add
outs
lods
or
dec
sar
bndstx
cld
call
scas
add
and
mov
add
or
scas
jecxz
scas
add
and
stos
add
aad
cmp
(bad)
test
lock
add
enter
sbb
setnp
call
enter
dec
inc
add
and
add
scas
add
ja
rcl
jb
hlt
clc
add
scas
add
gs
push
je
das
in
jmp
or
cmps
sub
adc
push
test
inc
or
cmp
inc
outs
cmp
aad
call
push
std
(bad)
fwait
inc
sti
call
jmp
jne
add
cmc
hlt
add
add
inc
cmp
add
lods
add
sub
add
push
cld
(bad)
scas
jg
or
or
fsub
or
(bad)
shl
inc
xor
inc
and
out
push
nop
and
add
pop
in
cmps
fstp
lods
add
add
add
add
xchg
xor
(bad)
into
cli
jmp
stos
pop
jmp
out
data16
cmps
je
mov
sub
and
inc
enter
pmulhuw
addr16
dec
inc
add
lods
add
sub
push
cld
jmp
lods
jmp
call
scas
dec
push
add
sub
outs
or
add
or
lods
test
pop
push
in
out
lods
push
call
and
inc
jg
adc
pop
aas
jnp
cmps
lods
sti
(bad)
jge
inc
inc
cmp
and
push
cmp
push
std
push
and
push
dec
fiadd
add
push
jg
add
add
mov
std
add
popf
jg
mov
mov
ret
jae
(bad)
xchg
cmp
jae
pop
test
pop
and
ret
ret
int3
fwait
push
call
movs
je
dec
in
cmps
arpl
adc
imul
mov
cmp
jmp
inc
cmps
inc
xchg
xchg
stos
add
add
jecxz
mov
outs
iret
pop
mov
cmp
daa
outs
dec
jmp
cmp
inc
mov
push
call
pop
sub
setp
cld
jmp
or
inc
pop
test
call
pop
das
or
inc
sbb
cmp
push
mov
push
mov
sbb
mov
add
loope
out
loopne
call
fistp
add
push
jmp
add
xchg
sbb
mov
add
push
push
dec
ret
data16
push
test
or
inc
cwde
test
add
lods
and
jmp
xor
test
sbb
inc
(bad)
adc
add
add
add
ficom
add
lea
inc
out
aaa
push
pop
aad
mov
ss
sub
add
rcr
or
and
in
cld
inc
test
in
xchg
push
std
ret
or
popa
pop
out
push
inc
push
ret
mov
push
mov
lea
mov
add
push
outs
std
mov
(bad)
xor
(bad)
in
cmovbe
add
pop
lea
fs
pushf
add
es
inc
jp
mov
mov
adc
inc
mov
xor
mov
add
inc
jbe
push
jge
lea
add
popf
mov
or
retf
sub
add
add
cmp
sahf
out
mov
mov
or
call
pusha
(bad)
pop
mov
add
rcr
out
ret
fld
push
push
mov
mov
mov
mov
or
jmp
arpl
mov
mov
inc
add
add
jp
mov
add
mov
add
jo
mov
pushf
or
cmp
std
sub
ret
dec
push
dec
loopne
jmp
xor
xchg
push
std
rcr
mov
mov
mov
push
push
stc
push
push
scas
xor
and
pop
xor
add
add
adc
push
push
mov
xchg
inc
es
jnp
mov
pop
shl
ret
cmp
dec
jmp
fwait
adc
push
std
jmp
or
cmp
mov
mov
std
cmp
add
dec
in
push
push
stc
sti
sti
adc
adc
std
call
scas
fnstsw
test
inc
sub
scas
add
data16
add
push
mov
add
scas
or
iret
inc
sti
jmp
mov
pop
add
jmp
or
inc
enter
cmp
add
call
add
gs
pop
mov
cmp
(bad)
sar
cmps
lods
cmp
xchg
lods
add
fadd
jne
out
fbld
std
je
jmp
shl
pop
in
(bad)
je
out
(bad)
push
lods
add
push
cmp
bound
call
add
push
rol
add
pop
push
push
pushf
icebp
add
movs
test
sbb
or
add
lea
add
sbb
in
add
mov
or
cmp
push
add
adc
lods
mov
xchg
jg
cmovs
neg
rol
xor
psrld
into
push
pop
pop
mov
push
mov
push
mov
(bad)
(bad)
cld
lea
add
retf
inc
push
stc
ds
adc
(bad)
jl
data16
call
pop
outs
xchg
setp
cld
aas
fsubr
inc
add
sti
pop
(bad)
stos
jmp
add
std
(bad)
es
or
mov
xor
cmp
cmp
sub
inc
sbb
add
stos
jnp
xchg
mov
jb
enter
push
das
or
push
stos
mov
xchg
lds
jmp
lea
sub
in
mov
add
cwde
cli
jl
sub
(bad)
pop
push
sti
jmp
stos
jmp
and
js
test
dec
xchg
mov
inc
(bad)
sub
add
jmp
cmp
nop
(bad)
mov
ret
stos
or
lods
das
pop
or
arpl
mov
pop
cmp
das
mov
(bad)
jge
jb
and
loopne
push
pop
cmp
jmp
daa
aaa
lock
add
add
mov
mov
add
xchg
pop
std
je
repz
add
or
dec
paddq
fidivr
sub
(bad)
cmps
push
inc
fsubr
inc
add
sub
mov
or
or
inc
sbb
pop
sbb
test
stos
add
inc
call
fwait
dec
inc
sbb
js
push
repnz
pop
dec
push
add
mov
inc
and
or
jo
xchg
push
(bad)
je
xor
cmps
inc
jb
pop
movs
jnp
mov
jno
or
inc
imul
pop
dec
dec
test
inc
out
hlt
and
jo
or
aam
in
test
add
xor
ror
clc
movs
fild
xor
inc
jmp
sub
add
movs
or
push
lea
in
add
jg
mov
or
sub
inc
jmp
mov
dec
std
(bad)
fistp
inc
es
psubusb
add
push
inc
or
add
cmps
lock
dec
std
jmp
adc
jmp
and
mov
test
xor
inc
out
enter
push
or
(bad)
cmps
xor
push
movs
mov
cs
(bad)
cmp
jno
ret
in
push
dec
mov
jl
jne
jl
call
mov
add
fwait
add
add
test
add
scas
sti
je
xor
add
xor
inc
fisubr
call
push
daa
hlt
call
pop
jb
(bad)
sbb
push
call
mov
(bad)
aas
add
imul
fisubr
xor
clc
inc
dec
pop
cmps
scas
mov
add
xlat
push
dec
test
and
lahf
imul
scas
jg
call
(bad)
mov
stos
xor
jno
push
ret
jl
fs
cdq
in
call
popf
in
or
enter
sbb
ds
(bad)
inc
cld
or
lods
add
out
add
add
mov
xchg
(bad)
out
mov
inc
inc
adc
jmp
lods
add
jp
push
scas
mov
rcl
dec
test
sbb
or
dec
xor
fild
call
add
ja
lods
scas
repnz
add
(bad)
test
jae
push
outs
or
je
inc
dec
inc
or
call
lods
or
dec
std
jmp
lods
mov
inc
or
jmp
movs
call
pop
gs
push
sbb
mov
xor
jbe
dec
sbb
add
add
add
add
sub
sbb
call
push
mov
inc
or
jmp
imul
push
mov
outs
or
sub
add
hlt
jnp
adc
inc
test
ficom
mov
lea
jmp
adc
inc
cld
std
mov
fsub
sub
or
push
or
add
push
ror
inc
mov
lahf
and
pop
mov
add
push
rcr
mov
mov
call
test
fld
push
out
pushf
add
push
jb
das
js
js
add
test
(bad)
sub
jmp
add
add
call
push
ds
pusha
add
add
jno
fcomp
xor
repz
mov
inc
shl
popa
push
xor
pop
aam
mov
imul
mov
in
mov
xchg
repnz
dec
cmp
xchg
and
fwait
xor
jmp
lea
xor
stos
jae
add
jmp
out
jo
jmp
jo
xor
add
out
push
add
xor
test
inc
or
imul
call
das
daa
hlt
dec
xor
inc
cmp
adc
and
add
call
pop
push
push
std
jne
mov
cld
call
fdivr
xor
pop
outs
loopne
sahf
cmp
push
xor
add
add
add
dec
inc
bound
and
pop
std
dec
cld
jmp
ja
cmp
in
mov
inc
add
push
in
pop
shr
xor
add
push
ret
mov
std
pop
in
movs
add
mov
and
xor
or
aad
rol
lods
add
out
mov
fidiv
pop
lods
or
(bad)
icebp
mov
stos
mov
ret
sbb
add
mov
xor
loopne
jne
add
mov
fucomp
cmp
jle
out
xchg
aaa
and
shl
adc
dec
outs
add
xor
retf
scas
add
lods
sbb
xchg
dec
jne
xor
add
add
add
add
mov
mov
mov
mov
outs
dec
jne
in
ret
ins
add
call
mov
movs
push
inc
(bad)
sbb
inc
add
add
add
sbb
or
popf
mov
add
add
cmp
movs
std
mov
add
sub
sbb
push
jle
(bad)
ret
adc
call
mov
enter
cmp
jp
sub
jno
lea
add
les
mov
mov
outs
xchg
and
xchg
add
sub
std
jmp
ss
pusha
add
push
cld
mov
add
sub
xchg
mov
mov
add
push
push
adc
dec
push
push
js
push
sar
test
jbe
jecxz
clc
cld
and
push
push
mov
cld
loopne
std
push
jle
(bad)
jmp
add
test
or
dec
mov
aas
cld
pushf
add
not
je
data16
sbb
add
inc
add
test
jns
xor
pop
and
sti
bound
std
mov
sub
add
stos
add
add
mov
pusha
pop
push
lea
and
call
add
lahf
inc
add
xor
aad
in
add
mov
xor
add
xchg
cs
sbb
add
and
pop
xor
and
mov
cli
das
jp
adc
pop
and
or
in
cld
call
(bad)
int
xchg
ss
cld
icebp
mov
xchg
jmp
xchg
inc
mov
lods
call
call
sub
jmp
adc
sbb
add
add
add
add
xchg
and
fbld
call
push
std
jmp
or
(bad)
mov
xor
in
jmp
sbb
js
test
pop
clc
rcr
stos
jg
sub
inc
add
sub
and
cld
call
dec
mov
inc
mov
out
mov
add
pop
push
(bad)
mov
push
std
dec
adc
mov
or
scas
xchg
loope
mov
in
in
in
or
gs
push
lea
sti
cld
mov
das
inc
push
xor
(bad)
imul
add
daa
stos
add
add
cmp
test
mov
and
es
call
jne
repz
mov
(bad)
stos
add
retf
retfw
inc
out
fld
dec
je
mov
scas
lds
cmps
stos
add
(bad)
cmc
xor
jle
mov
repnz
mov
cmp
in
in
in
sbb
call
inc
and
mov
in
jne
add
call
mov
mov
cmp
mov
clc
jmp
mov
add
mov
add
push
sti
jmp
cli
ds
jmp
adc
jnp
ds
sti
call
sub
jnp
jg
sti
call
sub
or
adc
add
add
add
push
inc
add
jmp
adc
push
mov
jbe
test
scas
test
push
mov
push
mov
sbb
xchg
rcl
loope
xor
fs
or
jb
mov
scas
cmp
mov
and
cld
push
call
out
pop
scas
test
shr
add
mov
mov
add
dec
lahf
or
add
mov
lea
mov
inc
in
cmc
pop
imul
jne
movs
stos
fsubr
adc
sti
and
sub
or
adc
sub
inc
add
cmp
cdq
mov
jbe
mov
cmp
add
jnp
mov
or
inc
push
sub
or
jnp
jb
mov
lds
scas
add
(bad)
pop
gs
mov
imul
mov
xchg
xor
outs
inc
dec
sub
mov
mov
call
repz
xchg
sbb
inc
pop
jmp
add
inc
stos
or
call
outs
sbb
out
add
pop
adc
lods
adc
add
and
mov
call
xchg
dec
test
xor
icebp
xor
or
cmps
inc
cld
add
xor
mov
bnd
add
sbb
je
call
adc
stos
sar
mov
pop
in
mov
or
inc
outs
mov
add
sub
data16
push
call
outs
cmps
rol
pop
scas
add
popf
jnp
mov
test
sub
in
push
repz
pop
das
mov
or
mov
test
dec
xchg
adc
pop
out
outs
adc
sbb
sub
cld
(bad)
out
mov
ss
je
dec
cli
inc
jo
and
lods
add
pop
xor
or
add
div
cld
pop
aad
cld
add
lds
lods
outs
or
popf
outs
or
out
lds
gs
hlt
add
adc
outs
lods
aas
(bad)
jmp
rcr
cmp
jecxz
mov
test
(bad)
add
ds
lods
sti
inc
add
adc
add
push
inc
add
in
sbb
icebp
push
cld
hlt
add
adc
and
push
(bad)
xchg
cwde
inc
rol
add
aam
pop
std
std
jmp
lods
add
xchg
add
ins
push
std
call
in
call
jne
add
imul
pop
std
lock
pop
jle
mov
adc
call
loopne
jo
jmp
push
add
push
push
add
inc
repz
(bad)
pop
mov
inc
data16
add
mov
int
dec
mov
es
adc
in
call
add
lods
aam
lea
aaa
add
stos
add
mov
les
out
or
jne
aam
shl
add
sub
dec
mov
and
call
stos
add
inc
push
add
jge
mov
and
cs
clc
mov
icebp
lds
stos
push
jmp
mov
mov
lds
stos
cmp
add
inc
jp
jmp
fimul
fwait
icebp
dec
lea
add
es
add
inc
mov
hlt
sub
pop
jo
mov
jmp
and
or
jne
add
stos
mov
daa
pop
jo
iret
ret
ret
pop
repz
mov
stos
jnp
cmc
jbe
loopne
rol
add
add
add
mov
outs
and
push
cmp
sbb
adc
push
add
xchg
mov
cdq
ins
jmp
or
cld
jmp
push
ret
push
dec
rol
rol
call
mov
into
aad
out
lock
dec
pop
mov
add
adc
add
add
call
jg
or
gs
add
jb
jp
or
repnz
adc
sbb
xor
sbb
outs
or
cmc
jle
sub
sti
jmp
stc
add
outs
mov
rcl
cmp
push
mov
mov
add
cdq
inc
or
(bad)
pusha
mov
cmp
es
mov
inc
pop
inc
push
cdq
ss
outs
add
test
and
jle
xor
fisubr
inc
add
mov
sbb
mov
loop
sar
mov
xchg
sti
jmp
add
add
pop
lea
pop
xchg
mov
add
cwde
lea
push
scas
jmp
jmp
jge
(bad)
cwde
lea
push
mov
add
pop
lea
push
scas
jmp
jmp
jl
(bad)
fdivr
add
scas
jmp
jmp
jnp
add
scas
jmp
inc
add
jnp
add
scas
std
jbe
jne
push
cmp
add
not
cld
push
xchg
pop
mov
leave
add
(bad)
(bad)
cmp
push
inc
push
cwde
mov
rcr
out
outs
add
and
and
test
push
test
imul
jne
mov
nop
rol
popf
popa
cmp
std
inc
sbb
or
leave
retf
std
ror
ret
stc
mov
push
or
add
out
je
ficom
(bad)
mov
inc
movs
and
jne
(bad)
pop
enter
repz
mov
lds
arpl
push
cwde
fdiv
cs
(bad)
cmp
mov
add
ins
push
call
popf
jmp
aaa
pop
sub
mov
(bad)
scas
jg
sub
push
push
ss
adc
lods
add
sar
push
push
ds
push
out
dec
lods
outs
mov
add
lods
call
cmp
and
cmps
xlat
add
data16
add
push
ret
pop
pop
sub
xor
ds
xchg
jmp
sub
add
movs
push
std
jmp
xchg
cld
push
lods
add
in
push
mov
and
pop
pop
lods
add
pop
enter
xchg
inc
or
add
or
mov
outs
adc
or
lahf
xchg
ror
dec
jmp
and
ins
mov
out
hlt
adc
movs
xchg
cmc
je
jns
or
xchg
or
or
imul
aam
test
aad
in
sbb
pop
lds
test
(bad)
add
pop
les
cld
push
and
pop
mov
in
add
push
xchg
add
pop
sbb
sbb
cmp
inc
out
into
inc
fisub
ror
(bad)
je
je
daa
inc
or
or
and
pop
aad
inc
xor
bound
clc
das
xor
sub
test
aad
adc
cld
jae
cmp
xor
add
sub
xor
xchg
jmp
out
jge
sar
or
or
iretw
mov
jg
mov
les
sub
xor
aad
movs
pop
sbb
jg
cmp
push
fimul
test
jmp
mov
inc
inc
cmp
mov
clc
sub
inc
sbb
add
sub
cmp
sub
pop
pop
pop
out
mov
dec
sub
push
inc
adc
movs
sti
jmp
cld
xor
test
fst
mov
aaa
cwde
test
aas
add
sub
cmp
add
aad
add
sbb
stos
mov
add
mov
cld
push
lds
push
clc
gs
cli
inc
push
cld
pop
js
sti
mov
arpl
jmp
and
pop
movs
lock
int
jno
push
dec
cmc
mov
in
mov
out
sub
je
and
cld
inc
and
sahf
dec
and
clc
fucom
jecxz
inc
in
cld
mov
mov
inc
add
data16
xor
and
call
ret
ret
popf
in
push
dec
retf
and
xor
adc
jne
sbb
sub
add
dec
jo
data16
outs
repnz
out
push
es
push
cmc
inc
mov
mov
jne
adc
sub
add
jmp
or
inc
out
jnp
rol
std
push
push
sahf
add
cmps
sbb
(bad)
jae
sub
inc
das
lds
jae
mov
jl
mov
add
imul
or
je
push
int3
sbb
and
pop
pop
xchg
es
push
pop
pop
sub
sbb
and
arpl
inc
cmp
push
cmp
sbb
cmc
shl
cmovbe
gs
push
inc
mov
rcr
pop
outs
clc
adc
xor
and
xor
adc
pop
test
lock
mov
test
aas
lock
cmp
sub
mov
jne
es
mov
inc
adc
dec
adc
pop
pop
in
loopne
cmp
call
mov
aad
ror
jnp
push
add
add
(bad)
int3
add
add
add
std
xor
(bad)
jecxz
ja
add
xchg
test
mov
xor
push
les
stos
cmp
jmp
lock
jbe
add
mov
or
loop
in
and
mov
add
jno
fld
add
movs
push
push
jae
xlat
inc
sahf
jnp
sbb
(bad)
sbb
mov
in
jmp
ret
or
xlat
pop
xor
frstor
out
pop
and
or
out
push
or
call
sbb
jmp
push
loop
call
in
inc
out
adc
jb
add
pop
mov
jp
sbb
push
inc
sub
stos
add
sbb
push
out
mov
out
or
mov
or
xor
or
test
aad
cmp
add
jns
call
aas
jb
inc
pop
je
pop
mov
push
call
shl
or
add
outs
adc
ins
clc
mov
test
and
sti
scas
ins
cld
mov
test
and
dec
lods
or
fsubr
loopne
sub
std
pop
dec
lods
mov
mov
lahf
mov
out
add
mov
add
sub
jmp
and
add
add
add
sbb
dec
nop
sti
jmp
or
add
inc
dec
fimul
or
add
inc
push
pop
je
movs
inc
add
fdivrp
call
jmp
fcom
ins
fadd
add
sbb
loopne
mov
xlat
pop
ds
add
rol
add
sub
cli
jmp
inc
(bad)
mov
push
lds
mov
add
jg
sti
jmp
inc
inc
add
cmc
push
loopne
hlt
add
pop
icebp
(bad)
call
in
frstor
pop
push
push
mov
inc
out
mov
add
fcom
sub
inc
repnz
inc
es
fld
add
xlat
add
gs
add
mov
dec
mov
pop
inc
add
ret
std
inc
ds
push
inc
add
or
ds
push
inc
add
std
jmp
ds
push
inc
add
sub
sub
je
and
xor
add
mov
inc
add
and
inc
push
pop
call
mov
xchg
sbb
fadd
add
pop
jecxz
jmp
in
fcomp
inc
add
enter
in
fsub
add
(bad)
cmp
jmp
scas
add
test
scas
add
sbb
pop
jmp
nop
inc
std
and
sub
add
add
xchg
lods
inc
xchg
in
ds
push
inc
add
les
or
inc
xchg
push
pushf
(bad)
pop
in
jmp
sbb
adc
outs
add
ror
fsub
inc
add
scas
jecxz
push
pop
jae
adc
inc
loop
in
push
pop
jmp
inc
repnz
in
es
or
fnclex
out
call
add
add
add
fisubr
fdiv
ds
add
(bad)
inc
clc
cmp
fucom
in
call
add
dec
(bad)
jmp
cli
jmp
sub
data16
inc
lds
(bad)
scas
add
ret
ins
lock
out
add
xchg
mov
scas
xchg
mov
scas
cmps
mov
scas
cmps
mov
scas
add
xchg
mov
lods
xchg
mov
scas
addr16
lods
addr16
lods
push
mov
scas
push
mov
scas
addr16
scas
addr16
or
test
push
outs
rcl
in
xchg
inc
std
mov
(bad)
jg
sub
std
sar
out
mov
dec
aas
cld
nop
inc
std
(bad)
jle
mov
shl
repnz
inc
add
mov
mov
push
inc
push
mov
push
and
and
xor
ds
jg
push
and
or
rcl
gs
dec
aas
cld
nop
inc
std
(bad)
inc
std
jmp
ins
add
xlat
repz
jmp
mov
aaa
sbb
mov
add
idiv
jne
jp
jnp
inc
std
mov
mov
inc
mov
mov
std
(bad)
xchg
mov
add
sub
sti
call
push
push
mov
inc
lds
je
add
dec
dec
push
xor
xchg
cli
jae
xor
scas
pushf
or
add
inc
or
retf
add
pop
mov
loopne
sub
or
inc
or
add
stos
outs
sub
mov
inc
mov
or
mov
jmp
cmp
popa
xlat
or
xchg
bound
add
xchg
pop
fld
or
cmps
stos
add
das
jl
xchg
stos
mov
mov
push
add
in
imul
ds
cmp
fild
jle
fs
jmp
call
sub
add
inc
sub
add
(bad)
(bad)
std
fmul
jmp
mov
adc
pop
loopne
cli
fcomi
fild
aad
pop
es
jmp
xchg
push
pop
sbb
jo
cld
mov
push
add
mul
push
pop
xchg
stos
and
adc
cmp
sbb
or
test
pop
std
jne
and
dec
push
stos
add
dec
mov
dec
or
das
(bad)
(bad)
std
add
add
stos
pop
pop
or
xchg
gs
movs
es
div
pop
or
and
add
cli
jg
push
repz
adc
fisubr
std
jmp
jae
(bad)
test
or
sbb
mov
pop
call
cmc
pop
push
push
inc
hlt
sti
adc
push
std
jmp
cmc
jae
(bad)
ds
call
pop
jne
iret
aam
inc
add
xchg
aas
outs
sbb
ins
in
inc
push
mov
jmp
popf
xor
xor
dec
or
pushf
cmp
(bad)
cmp
ret
dec
cmp
add
sbb
pop
push
call
mov
(bad)
fistp
pop
jp
push
ds
lods
xchg
rcr
pop
pop
add
cmp
pop
mov
mov
fdivr
mov
shr
jne
lds
sub
xchg
loope
rcl
mov
adc
je
pop
push
or
add
and
std
(bad)
push
cmps
add
push
and
(bad)
outs
adc
or
into
(bad)
daa
sar
add
mov
adc
jge
xchg
sbb
lods
inc
scas
add
pop
push
push
jle
xchg
mov
inc
std
pop
lods
pop
ror
stos
xor
mov
movs
dec
outs
or
sub
push
push
pop
lahf
stos
jg
mov
mov
in
sti
add
add
scas
add
enter
mov
push
std
sub
cli
scas
inc
push
add
jnp
add
js
mov
dec
mov
addps
jle
mov
xor
pop
sbb
in
inc
out
cld
dec
call
add
and
jecxz
add
push
push
ret
fst
mov
das
ja
and
imul
add
in
test
call
mov
cs
jmp
add
pop
jne
std
pop
pop
out
outs
loope
out
pop
pop
xchg
xchg
push
pop
and
mov
push
inc
(bad)
(bad)
mov
dec
stos
xchg
or
add
push
push
sub
mov
jmp
dec
std
mov
aad
call
xchg
std
(bad)
fist
sti
jmp
scas
xor
push
std
mov
test
cmp
mov
cld
dec
jmp
push
xchg
call
push
jecxz
add
shr
not
add
sbb
push
call
mov
lods
cmp
mov
push
sub
test
ror
or
xchg
ins
inc
add
imul
pop
cmp
ds
jo
fld
inc
jmp
add
pop
jg
aas
add
push
out
cmc
inc
cmp
and
or
push
push
lods
add
scas
imul
jmp
mov
add
jmp
push
mov
cwde
daa
popa
(bad)
xchg
push
cld
mov
cli
inc
push
std
test
sub
add
add
mov
and
xchg
inc
push
push
test
mov
cli
call
pop
push
(bad)
retf
mov
jg
loope
push
push
(bad)
sahf
cli
inc
jno
inc
xor
push
push
popa
mov
xchg
jo
ror
jecxz
adc
pop
packssdw
push
add
adc
icebp
jle
or
pop
jl
(bad)
mov
add
sub
inc
push
std
(bad)
sub
cli
jmp
push
std
call
push
std
add
sub
cld
(bad)
cli
call
stos
ret
push
std
call
jle
loopne
std
add
push
inc
punpckhbw
call
pop
add
fwait
jmp
mov
push
std
(bad)
mov
mov
mov
cli
call
test
lea
sub
cmps
es
sub
mov
sub
shl
dec
jne
push
jg
push
inc
std
jmp
in
mov
jg
add
add
jecxz
(bad)
jg
or
and
loope
mov
lahf
mov
inc
inc
xor
movs
cmp
retf
or
pop
mov
cmp
mov
int
push
dec
arpl
rep
sub
cmp
int
or
cli
test
inc
std
(bad)
jge
cmp
jge
je
add
adc
inc
jg
mov
test
or
stc
inc
jg
inc
inc
std
(bad)
fcmovnb
cli
jmp
sbb
(bad)
jecxz
cli
jmp
inc
xchg
inc
std
and
or
call
inc
cld
mov
cli
jmp
mov
jmp
cld
std
inc
mov
add
add
add
add
pop
(bad)
mov
cmp
aas
(bad)
mov
inc
std
call
test
pop
ret
or
jo
mov
retf
sbb
cli
jmp
les
fild
inc
cmp
ds
je
in
jns
sub
and
lea
sbb
add
add
jmp
js
mov
mov
cmp
mov
push
std
jmp
std
cvtps2pd
or
(bad)
ja
inc
mov
mov
xchg
std
test
xchg
cli
inc
idiv
jmp
push
cmp
fwait
scas
add
sbb
data16
hlt
arpl
or
scas
fs
push
ret
adc
mov
scas
add
movs
inc
arpl
hlt
outs
xor
cmp
ja
je
push
std
setp
xchg
out
adc
test
xchg
push
daa
cvtdq2ps
push
add
aaa
jg
add
pusha
push
std
add
push
add
(bad)
cli
jmp
sub
mov
ins
jmp
(bad)
push
push
sub
push
xchg
std
mov
int
call
push
jg
and
call
iret
js
(bad)
adc
mov
push
enter
xchg
cli
call
leave
cli
inc
add
xchg
cli
call
xchg
std
test
leave
cli
call
push
std
call
cli
jmp
dec
and
inc
(bad)
mov
nop
dec
(bad)
mov
dec
std
jmp
sub
or
lock
(bad)
in
daa
pusha
(bad)
adc
test
add
out
stc
jmp
jb
js
push
std
bswap
in
dec
call
pop
js
jne
jne
or
nop
sti
call
jne
mov
jae
popa
inc
push
std
cmp
cli
jmp
stos
add
mov
push
std
test
adc
stos
add
mov
add
inc
std
dec
dec
add
and
inc
test
dec
std
push
mov
js
and
inc
test
push
adc
(bad)
retf
add
iret
stc
mov
es
add
pushf
mov
push
dec
std
(bad)
cmp
dec
std
inc
push
add
add
add
add
lds
dec
(bad)
popa
dec
std
test
dec
std
call
popf
add
mov
dec
std
push
outs
push
(bad)
jecxz
cli
jmp
dec
std
call
aad
pop
test
fwait
test
stos
into
cli
jmp
dec
jg
loopne
std
call
lahf
and
add
mov
mov
std
pop
fwait
jmp
mov
imul
out
mov
inc
dec
std
sub
std
call
fwait
jg
xlat
test
cli
call
dec
std
test
test
sub
inc
cmp
jg
mov
sub
inc
add
dec
inc
test
push
and
(bad)
fild
jecxz
and
les
mov
add
and
call
inc
inc
stc
mov
dec
std
call
and
inc
dec
std
(bad)
fisubr
std
call
dec
std
inc
push
call
add
and
sahf
test
scas
sub
sub
std
mov
mov
dec
jg
retf
mov
std
dec
mov
and
jo
and
fistp
dec
std
mov
popf
mov
jle
std
dec
dec
std
jmp
dec
jg
add
sub
mov
pop
and
dec
std
test
dec
std
call
add
mov
dec
std
push
push
cli
inc
adc
call
and
mov
add
inc
adc
inc
adc
call
fbld
(bad)
and
or
add
add
add
add
mov
std
pop
stos
jmp
pop
inc
adc
lea
adc
call
adc
push
sahf
adc
and
cli
call
push
pop
shr
int3
pop
(bad)
scas
cmp
mov
add
popa
adc
nop
adc
lea
cli
inc
gs
call
add
adc
dec
std
xor
mov
rcl
jmp
fndisi(8087
outs
adc
and
lds
daa
scas
add
xchg
lea
mov
call
std
add
adc
(bad)
fimul
std
jmp
adc
mov
cli
inc
add
adc
push
lea
popa
adc
jae
es
adc
push
ret
mov
fild
add
paddw
push
adc
call
adc
pminub
mov
and
std
arpl
cmp
push
movs
jl
xchg
adc
sldt
nop
inc
add
es
and
fild
call
lods
add
add
inc
xor
ins
loope
loope
outs
shl
pop
loope
stc
aad
mov
retf
sub
add
push
imul
sub
cmps
sub
bound
sub
data16
mov
add
jno
mov
add
jg
mov
cld
test
std
dec
cmp
xlat
sbb
std
mov
pop
jg
mov
daa
add
mov
paddw
popa
test
cmps
add
stos
xchg
push
pop
jg
nop
adc
push
les
(bad)
leave
mov
and
add
stos
inc
inc
(bad)
cli
add
xchg
sub
jo
daa
jg
cmps
stos
sub
mov
mov
add
loop
std
jmp
inc
add
mov
pop
cs
loope
or
add
and
jl
mov
std
jmp
movs
jg
sbb
cli
jmp
add
std
jmp
push
push
jo
mov
in
jle
mov
sub
or
call
adc
fsubr
mov
std
sbb
cmp
pushf
add
cmp
jmp
(bad)
and
jmp
jne
sub
push
add
pop
mov
aaa
push
and
mov
ror
ja
add
(bad)
out
mov
adc
push
daa
fild
pop
jmp
add
inc
add
sbb
call
movaps
mov
dec
jmp
cli
sar
jecxz
scas
(bad)
fld
mov
pushf
sbb
or
add
sub
dec
pop
inc
(bad)
push
inc
mov
dec
pop
idiv
and
mov
adc
sub
inc
std
jmp
jg
call
xchg
jp
std
jmp
inc
in
mov
mov
fwait
xor
jl
inc
or
add
pop
(bad)
xchg
inc
std
test
add
inc
std
jmp
out
jmp
jg
nop
inc
std
cmp
mov
push
and
call
inc
std
call
rol
jmp
push
push
xchg
cli
jmp
mov
jle
and
outs
push
mov
jmp
adc
inc
inc
std
lea
inc
std
inc
add
jnp
(bad)
mov
mov
mov
cli
inc
jg
inc
inc
std
call
add
inc
cld
mov
cli
jmp
push
add
inc
inc
std
call
in
jle
mov
scas
add
fidiv
inc
mov
outs
cli
inc
retf
add
inc
std
test
xor
and
je
inc
std
push
jbe
push
add
pop
aas
jle
(bad)
mov
scas
add
cmps
test
mov
fild
add
inc
jg
inc
inc
std
add
cli
jmp
scas
add
data16
mov
aaa
xchg
std
xor
add
add
aaa
jg
nop
inc
std
(bad)
cmps
scas
jecxz
xchg
scas
add
sbb
cmp
fisttp
jmp
(bad)
and
jne
inc
xchg
std
jne
sub
cli
jmp
std
call
push
mov
test
aas
std
inc
add
and
inc
inc
cld
push
pop
je
jmp
imul
call
cs
pusha
inc
std
js
lea
jmp
mov
je
xchg
aas
dec
call
aas
push
nop
sti
jmp
mov
inc
inc
std
outs
stos
retf
cmp
mov
mov
lods
add
loope
mov
add
adc
btc
sar
jmp
or
inc
std
mov
aas
std
jmp
xor
xor
(bad)
mov
push
(bad)
out
addr16
xor
inc
std
mov
(bad)
inc
inc
std
(bad)
add
mov
std
pop
packuswb
add
mov
aas
std
inc
push
inc
add
xor
aas
std
call
scas
xor
inc
std
mov
add
inc
mov
cli
jmp
enter
inc
jg
mov
cmp
jae
inc
inc
jecxz
inc
inc
std
jmp
cli
call
inc
std
inc
add
(bad)
cli
jmp
scas
repnz
inc
push
pop
es
inc
ins
cli
call
stos
add
mov
cmp
imul
das
retf
add
sbb
(bad)
fild
(bad)
and
jecxz
push
stos
add
adc
(bad)
fwait
lock
call
xor
js
clc
cmp
add
add
add
mov
je
push
cmp
xor
mov
jmp
das
mov
mov
lods
cmp
jns
jmp
jmp
stos
mov
push
cmp
push
inc
fld
mov
cli
inc
in
dec
in
jmp
add
xor
cmp
add
std
lea
cmp
je
data16
std
call
inc
mov
inc
cmp
dec
std
call
cmp
call
cli
jmp
scas
js
cmp
call
fistp
idiv
std
jmp
das
mov
mov
mov
movs
scas
aas
std
jmp
mov
inc
aas
std
add
add
data16
mov
push
mov
std
call
arpl
add
(bad)
jmp
sub
(bad)
mov
sub
(bad)
mov
inc
or
add
cli
inc
add
je
outs
(bad)
call
mov
cli
jmp
ds
inc
pop
je
inc
retf
outs
or
jbe
jg
retf
outs
add
aas
std
dec
cmp
mov
cdq
push
std
mov
test
jmp
icebp
shl
mov
xchg
inc
es
test
add
mov
cli
jmp
aas
std
push
xchg
(bad)
jae
(bad)
mov
je
(bad)
retf
call
jae
mov
das
cmp
test
ds
call
sti
ins
sbb
mov
sbb
test
mov
add
mov
jns
(bad)
mov
xor
jmp
add
push
jmp
cdq
push
jmp
pushf
push
call
js
call
sbb
cmp
(bad)
or
retf
movs
cli
inc
inc
or
mov
mov
jmp
xor
(bad)
mov
out
test
xor
jmp
mov
enter
adc
xor
add
(bad)
mov
add
push
mov
jge
jnp
stos
xor
call
fscale
call
addr16
mov
ins
cld
pop
xchg
in
pop
call
das
out
imul
inc
call
popf
in
push
inc
cdq
rcl
push
mov
push
popa
pusha
jbe
cmp
test
mov
add
add
add
add
das
inc
fsubr
outs
inc
pop
scas
repnz
bnd
push
inc
lods
adc
jo
mov
fidiv
inc
cli
cmp
inc
mov
lods
fwait
xor
addr16
push
call
pop
pop
push
cmp
fs
push
cdq
inc
sahf
(bad)
fwait
cmp
in
add
lods
add
mov
lods
call
pop
aad
cld
push
lods
or
pop
aaa
pop
test
(bad)
int3
push
in
(bad)
int3
cmp
xor
or
xchg
lods
add
ds
xor
dec
mov
in
mov
xor
pop
loopne
(bad)
pop
sub
add
stos
add
sub
add
sub
add
push
pop
das
out
pop
add
xor
inc
gs
dec
daa
aaa
cwde
test
add
arpl
mov
mov
mov
mov
enter
sub
mov
mov
jecxz
shl
lds
add
(bad)
in
or
jmp
aam
mov
xor
imul
(bad)
fucomip
imul
cmps
inc
ss
movzx
mov
adc
or
movs
je
in
out
add
mov
je
add
jne
inc
xlat
mov
xor
add
add
add
add
mov
jecxz
daa
stos
add
test
pop
dec
xchg
jmp
loope
push
cmp
inc
or
push
sbb
inc
je
inc
outs
sahf
xor
add
aad
dec
push
neg
std
call
je
aaa
add
cwde
test
add
dec
je
aaa
test
fwait
sub
ins
add
dec
je
aaa
cwde
test
add
pop
or
push
call
lahf
ins
loopne
aad
cmp
or
add
mov
cld
(bad)
jg
in
jmp
xor
pop
movs
jmp
stc
or
add
loopne
sti
popf
lods
inc
sub
or
stc
or
imul
mov
add
in
in
sbb
add
mov
outs
add
es
cmp
movs
fsubr
aad
push
jb
aas
adc
es
fsubr
add
es
mov
in
ds
inc
es
dec
sti
call
xor
or
(bad)
cld
ja
mov
jmp
mov
or
or
call
pop
mov
cmp
popf
fldcw
in
add
pop
ds
ins
pusha
cmp
ror
add
out
pop
mov
(bad)
jnp
out
popf
stos
or
pop
mov
call
fsub
xchg
and
jecxz
pop
and
jecxz
iret
and
jmp
loopne
outs
mov
int3
jecxz
(bad)
std
(bad)
call
and
push
jns
and
dec
jns
xor
jbe
aaa
inc
jns
add
cmp
mov
cmp
inc
xor
jbe
aaa
sub
and
std
jbe
aaa
and
and
std
jbe
cmp
loope
std
jbe
aaa
adc
add
std
jbe
aaa
or
mov
xor
(bad)
lods
jae
mov
and
call
jbe
ds
inc
jbe
dec
xor
inc
add
or
jmp
add
call
sbb
inc
adc
call
in
jae
mov
gs
push
xor
ds
inc
jbe
dec
jne
call
xor
ds
jae
and
jbe
out
inc
jae
adc
jbe
(bad)
pop
jae
add
jbe
add
push
push
jae
xchg
das
rol
jnp
push
scas
call
call
pop
sti
jmp
xor
std
mov
scas
add
ds
mov
(bad)
lods
add
add
mov
cmps
lods
call
jmp
sti
jmp
das
std
mov
mov
add
xor
call
add
add
add
movs
std
jmp
push
call
jmp
xor
std
mov
mov
add
fnsave
mov
nop
ror
push
outs
or
xlat
cmp
sub
dec
call
out
push
inc
add
xlat
arpl
sbb
fdiv
xor
add
or
cmp
sub
push
call
out
xchg
push
ret
or
mov
je
push
inc
or
fsubr
cwde
mov
pop
jbe
movs
ja
xor
cwde
loope
add
call
call
inc
adc
xlat
jae
push
cmp
mov
ret
cmp
add
add
add
rcr
inc
add
fmul
and
std
call
push
inc
sbb
(bad)
jnp
sbb
ja
xor
call
fld
sub
dec
call
out
push
jne
int
adc
mov
pop
dec
dec
aaa
ja
sub
mov
es
xor
repz
cmp
mov
imul
xor
(bad)
push
push
test
jbe
sub
jmp
outs
adc
outs
add
mov
xor
sub
cmp
sbb
push
pop
cmps
ds
fsub
add
(bad)
lock
inc
ins
call
add
xchg
inc
scas
xor
pop
pop
add
inc
outs
mov
dec
es
or
mov
adc
outs
adc
pop
jne
lahf
rcr
push
ret
pop
pop
outs
pop
popf
lods
or
or
cmp
dec
push
push
jne
jecxz
sub
std
sbb
(bad)
cmp
aam
xchg
inc
leave
mov
mov
mov
add
cmp
sub
or
mov
outs
push
icebp
aam
jmp
daa
or
pop
fiadd
dec
sub
in
cmp
mov
sti
stos
and
paddusw
pop
push
and
and
loop
loope
std
mov
dec
mov
add
push
pop
sub
cmps
inc
or
add
xchg
cld
mov
ja
fwait
inc
or
sti
xor
aas
cld
pop
outs
xor
xor
push
cmp
repz
aad
inc
push
out
in
rol
cld
adc
sbb
or
pushf
cmp
fdiv
lods
rcr
mov
clc
push
fmul
push
clc
mov
jmp
cmp
add
add
add
push
mov
add
and
mov
sbb
or
add
mov
or
daa
aas
sbb
scas
xor
pop
hlt
sbb
sub
mov
add
scas
add
out
cld
jne
sub
mov
add
jmp
pusha
cld
inc
add
aad
(bad)
fisubr
cmps
stos
add
or
cld
mov
xchg
shl
retf
adc
jecxz
test
cld
pop
dec
jo
or
stos
xlat
fst
add
in
aad
lea
xchg
push
push
add
sar
push
push
mov
mov
adc
mov
add
push
outs
adc
add
jne
push
push
lods
ja
sti
mov
push
push
call
dec
in
pop
jge
xor
iret
int
jne
daa
add
inc
mov
push
sbb
cmps
mov
or
mov
jne
inc
sahf
add
push
cmp
outs
add
outs
call
je
call
xchg
mov
push
inc
add
scas
add
cmp
aad
dec
mov
outs
or
aad
(bad)
(bad)
aas
add
cmp
sub
cld
(bad)
out
lds
mov
jl
mov
push
daa
std
push
sub
push
outs
or
std
jmp
xchg
(bad)
cld
inc
add
pop
cld
jne
push
outs
sbb
fst
jmp
push
outs
or
mov
rcr
test
push
das
pop
jo
ror
pop
pop
mov
gs
add
push
inc
fadd
(bad)
sbb
(bad)
mov
daa
mov
add
add
add
add
sub
xchg
stc
jecxz
jmp
xor
sub
xchg
push
ret
push
dec
mov
call
mov
inc
inc
and
ror
fwait
jns
add
out
push
push
push
or
ja
scas
iret
iret
cmp
or
add
add
stos
xchg
sti
dec
(bad)
mov
call
pop
and
cli
je
push
aas
call
mov
in
jge
stos
outs
inc
sbb
ja
call
fld
dec
je
xor
cmps
icebp
inc
cmp
pop
add
push
lea
add
sti
dec
push
cld
mov
pop
je
ins
sti
retf
adc
push
jmp
ja
jne
mov
std
ror
push
sti
jmp
cli
jecxz
and
push
or
stos
add
ins
cmps
cmp
ja
or
add
cli
push
inc
add
outs
jecxz
dec
push
cld
sbb
jmp
dec
cld
jne
push
outs
fdivr
rol
and
call
push
mov
in
push
outs
or
mov
jg
sub
sbb
pop
mov
into
retf
xchg
ja
sub
push
(bad)
fld
dec
movs
std
rol
add
cmp
sub
iret
xchg
mov
in
fstp
cdq
mov
dec
push
sbb
pop
inc
push
outs
loopne
in
jno
mov
aas
or
pop
cmp
out
mov
jne
pop
loopne
adc
mov
out
pop
int
div
jecxz
js
add
add
ret
mov
call
jge
cmp
popf
fadd
mov
mov
loop
cmp
mov
add
mov
dec
mov
or
call
out
rol
add
mov
mov
push
mov
or
add
cmp
aad
push
cmp
or
add
rol
gs
cmp
lds
mov
ja
iret
or
mov
mov
add
add
inc
jne
cmp
lods
ret
test
inc
aaa
ja
(bad)
fcomi
mov
inc
mov
cmp
cdq
pop
js
inc
out
add
lods
xor
pmullw
retf
hlt
xor
jns
xor
mov
pop
outs
dec
sub
xor
jg
repz
xchg
ficom
sub
stos
std
call
ror
jle
stos
fimul
or
pusha
sub
iret
fsub
add
xchg
ror
mov
ja
lods
hlt
jecxz
mov
fidivr
iret
or
fld
add
push
jne
aaa
ja
pop
hlt
fcomip
cli
ss
or
cmc
fisttp
cmp
aas
adc
loop
dec
xchg
inc
cld
sbb
inc
scas
push
sbb
sahf
aaa
inc
adc
aas
sahf
mov
das
fild
push
sub
cld
in
mov
mov
jae
imul
add
add
add
push
xchg
mov
inc
mov
jg
cmp
fsubr
shr
cmps
rol
call
(bad)
push
mov
add
cli
push
push
sub
jecxz
es
cld
sbb
sti
jmp
mov
dec
shl
jmp
jmp
cmp
sbb
(bad)
jbe
bound
add
add
add
shl
outs
dec
adc
inc
xor
aas
or
mov
aaa
int3
lods
call
pop
ffreep
idiv
imul
pop
lahf
or
(bad)
pop
inc
std
inc
inc
jecxz
push
lods
add
or
call
gs
pop
cmp
mov
xor
add
add
add
adc
add
lods
mov
frstor
dec
fistp
xor
lods
je
call
inc
push
test
jg
xchg
inc
cld
mov
pushf
cmp
xchg
dec
dec
jmp
lods
add
aas
pop
std
inc
std
mov
jb
jmp
jecxz
cmp
push
mov
mov
add
add
inc
cld
ret
jl
push
out
(bad)
cld
dec
xlat
or
push
es
cld
pop
dec
jo
jmp
xor
or
pop
outs
or
push
pop
outs
popa
inc
push
jmp
and
stos
add
sbb
std
mov
push
test
push
xor
add
inc
cmp
ret
cmp
std
jmp
ds
je
test
mov
add
or
mov
dec
push
sbb
call
(bad)
adc
enter
mov
dec
cmp
retf
inc
inc
or
(bad)
and
mov
neg
cld
jne
imul
inc
add
hlt
fist
bound
les
add
test
dec
outs
or
je
or
jne
in
jmp
sub
push
cmp
sbb
in
sti
mov
xchg
mov
add
(bad)
xchg
scas
mov
jbe
cld
jne
popa
push
lea
dec
jecxz
push
cmp
sbb
inc
add
mov
bound
jge
stos
outs
xor
outs
add
das
(bad)
pcmpgtw
jmp
push
push
in
test
inc
add
test
mov
inc
push
or
lods
call
pop
aad
jbe
jmp
or
add
mov
sub
popa
cwde
mov
add
push
scas
jg
loopne
cld
call
dec
aam
jne
inc
jmp
dec
and
jecxz
mov
cld
pop
(bad)
mov
pop
fwait
ds
gs
mov
inc
cwde
ja
sub
les
loop
add
cmp
scas
inc
push
add
add
inc
cmps
cmp
sti
mov
std
jne
xchg
(bad)
mov
add
add
add
retf
jae
out
xor
cmp
outs
pop
in
(bad)
out
and
cmp
pop
ds
sti
or
add
push
push
shr
pop
std
dec
aam
jmp
push
mov
mov
scas
push
call
pop
mov
mov
fisttp
add
add
add
add
or
jo
retf
call
pop
push
not
mov
in
inc
cmp
push
push
imul
cld
sbb
xor
cmp
cdq
push
push
in
cmp
pop
outs
mov
jecxz
rcl
pop
int
push
jmp
jecxz
adc
mov
icebp
push
test
(bad)
(bad)
add
add
imul
jmp
mov
jo
dec
dec
out
xchg
jmp
outs
add
outs
push
ret
xchg
ins
(bad)
int3
xchg
ins
(bad)
int3
clc
inc
aas
and
(bad)
mov
and
inc
aas
and
jg
not
xchg
or
cmps
inc
jmp
and
inc
ret
mov
add
cmp
inc
scas
retf
jmp
inc
ret
mov
xchg
or
call
sar
pop
ror
out
(bad)
out
mul
xchg
adc
fiadd
and
cmp
add
or
ja
mov
or
jmp
inc
mov
xor
lods
jmp
pop
or
je
fadd
add
inc
ror
push
inc
cld
push
or
xlat
cld
jne
inc
inc
lock
imul
inc
outs
or
push
push
ds
inc
add
hlt
gs
lods
inc
push
cmps
push
call
fwait
imul
xchg
dec
lods
push
or
mov
inc
cmp
add
add
out
add
out
inc
or
push
pop
ins
mov
sbb
ret
jne
out
xor
lds
jmp
and
ret
push
dec
mov
call
or
add
call
or
inc
outs
lock
mov
adc
sahf
ss
inc
mov
ret
jne
add
inc
add
sub
les
jnp
pop
cmp
outs
pop
inc
add
add
cmp
stc
mov
cld
jmp
inc
add
mov
sbb
(bad)
cmp
les
jmp
jnp
bound
clc
and
ins
mov
or
fld
mov
loopne
add
jbe
inc
mov
xor
mov
ds
xchg
ja
push
outs
adc
mov
ds
xchg
dec
es
mov
aas
ds
ror
std
cwde
xchg
fninit
stos
shr
mov
inc
add
ins
push
dec
mov
(bad)
(bad)
sbb
mov
outs
or
std
jmp
rcl
addr16
call
mov
jp
xchg
jmp
retf
call
aas
cld
push
fst
add
add
mov
lock
ret
fst
mov
(bad)
(bad)
imul
lds
push
cld
pop
outs
hlt
ror
push
or
add
cld
jne
inc
inc
lock
xor
xor
fidiv
popa
or
push
add
push
push
clc
fild
jmp
aad
add
stos
mov
daa
pop
jo
aas
(bad)
jmp
iret
mov
outs
or
mov
add
xor
outs
pop
leave
lea
add
inc
imul
cs
push
int
rdpmc
push
mov
and
mov
sub
(bad)
mov
mov
pop
daa
jmp
xor
push
test
daa
(bad)
aad
cmp
out
cli
mov
cmp
lock
xor
add
mov
aad
xor
add
sti
pop
add
retf
inc
ins
add
fsub
jmp
sahf
jmp
xor
or
imul
test
push
call
movs
jl
lea
int3
add
sbb
mov
out
jnp
(bad)
retf
sub
jns
cmp
inc
add
dec
fdiv
pop
ficomp
test
jb
or
or
inc
sti
add
cmps
cmp
sti
add
lods
cmp
retf
movs
inc
cmp
inc
loop
push
add
sub
je
in
in
repz
pop
pop
pop
outs
mov
mov
out
repnz
fwait
inc
add
cmp
sti
xor
cmp
cld
lods
in
add
jmp
push
xor
imul
call
xor
inc
outs
sbb
cs
mov
loopne
xor
call
jnp
outs
sub
retf
fimul
mov
push
call
add
add
add
add
cmp
or
xor
xchg
xadd
shl
iret
push
mov
sti
push
xchg
and
bts
dec
aas
or
xlat
scas
lds
out
loopne
fistp
add
sub
std
jne
xor
aam
fdivrp
jne
les
mov
cld
jmp
adc
add
add
add
adc
pop
movs
je
call
pop
outs
mov
or
out
xchg
push
outs
sbb
sahf
std
jne
push
outs
or
das
rcr
outs
mov
mov
out
xor
pop
lea
les
push
add
push
jle
(bad)
imul
lods
call
cmp
test
jnp
add
add
add
or
cmp
sub
cld
push
repnz
push
sub
push
mov
push
mov
les
enter
pop
and
mov
jg
add
cmps
xor
pop
mov
sub
sti
cmp
pushf
jne
scas
in
jmp
xor
add
inc
add
je
jmp
add
add
add
cmp
std
pop
data16
push
and
jle
lods
add
push
lods
add
xchg
(bad)
dec
out
add
mov
scas
push
push
sub
inc
push
add
ss
call
shl
xchg
add
stos
mov
sub
mov
xchg
stos
cmp
add
sahf
inc
(bad)
cwde
jnp
and
sti
imul
push
loopne
rol
rcr
mov
add
ja
push
pushf
xchg
rcl
jnp
push
xor
inc
adc
stos
add
gs
ret
jecxz
pop
out
fs
add
add
add
add
(bad)
dec
jno
enter
ja
mov
hlt
fstp
and
xor
add
shl
or
sbb
dec
add
mov
or
test
mov
in
dec
popf
lds
dec
add
inc
inc
pop
mov
add
dec
adc
movs
mov
add
std
call
push
stos
add
push
daa
dec
add
mov
or
pop
(bad)
ja
xchg
mov
call
sub
test
call
adc
push
add
hlt
repz
(bad)
aas
hlt
pop
push
cld
jmp
test
sub
jmp
add
jb
gs
dec
sub
pop
sub
mov
cmps
mov
dec
dec
mov
clc
add
and
jnp
and
inc
cld
repz
sahf
mov
hlt
addr16
cld
call
mov
xor
push
push
add
and
pop
mov
(bad)
jg
add
test
cmp
fmul
mov
movs
add
sub
(bad)
dec
mov
(bad)
cmps
dec
cmp
jp
inc
fisttp
push
mul
pop
scas
dec
cld
sbb
add
and
or
cwde
add
and
add
xchg
shl
add
movs
mov
add
out
ror
add
lods
mov
pop
out
and
(bad)
in
out
pop
mov
js
int3
(bad)
cmp
add
gs
adc
fnstcw
test
inc
cwde
lahf
jl
dec
dec
add
cmps
int3
(bad)
cmp
ficom
push
inc
dec
repnz
call
mov
cwde
and
in
push
outs
or
add
jg
push
mov
fist
lds
jbe
jne
push
scas
add
scas
stos
adc
mov
popf
jle
imul
test
shl
mov
add
out
(bad)
sti
imul
in
(bad)
jmp
inc
dec
push
xor
cmps
cs
xchg
fiadd
fisttp
pusha
add
push
dec
xor
in
repz
leave
aad
std
push
or
call
inc
aad
mov
daa
jno
in
push
xchg
loopne
mov
test
aad
call
jl
pop
mov
rcl
dec
push
push
sti
pop
call
int
add
stos
mov
das
pop
jo
daa
(bad)
jmp
push
int
add
add
pop
jnp
mov
je
int
pop
jne
sahf
rol
scas
ret
push
cli
call
fld
ja
and
add
push
inc
test
rol
mov
inc
push
stc
inc
push
lds
data16
add
cmp
jp
int
jecxz
pop
push
cld
mov
mov
add
lods
test
mov
jmp
(bad)
mov
fist
test
pop
loop
add
repnz
cld
(bad)
stc
(bad)
sub
cmp
or
shl
add
stos
mov
cs
jo
sahf
rcr
ret
push
dec
mov
call
mov
inc
add
pop
std
push
push
in
iret
pop
push
repnz
lea
jne
jmp
std
xor
ret
es
fld
sub
push
jne
push
push
lahf
pushf
call
sbb
(bad)
cmp
xchg
shl
hlt
jmp
test
sar
iret
sub
xchg
and
and
iret
push
sbb
sti
dec
xor
ja
ret
mov
dec
call
adc
fdivrp
xchg
push
jmp
not
fwait
mov
std
jmp
daa
rcl
in
pop
jo
(bad)
pop
(bad)
rcl
add
mov
inc
sub
gs
add
mov
std
mov
sti
imul
cmp
xchg
clc
cld
jo
push
sub
xor
sti
jmp
(bad)
icebp
jne
inc
ins
xchg
clc
push
mov
inc
xchg
bound
pop
(bad)
stos
add
fucom
or
sbb
jge
mov
aad
sub
add
bound
dec
fistp
add
fisub
rol
cli
jecxz
imul
ret
sub
mov
loop
inc
inc
mov
idiv
aas
adc
xor
or
mov
(bad)
xchg
fst
(bad)
fstp
add
push
outs
adc
idiv
add
mov
mov
jne
es
sar
mov
inc
jge
jmp
pop
std
sbb
mov
addr16
xor
imul
jb
std
leave
in
cld
push
lods
adc
repz
clc
pop
jge
sbb
sbb
fld
outs
or
jl
call
add
gs
minps
cmps
cmp
jge
call
sar
jne
add
or
sub
(bad)
mov
jnp
jmp
movs
cld
jne
add
pop
jmp
add
outs
and
jnp
jmp
cld
jne
add
add
xor
std
call
add
cmp
push
popf
adc
add
test
jne
add
pop
dec
mov
pop
inc
add
push
ret
pop
add
xchg
popa
mov
std
sbb
mov
sbb
gs
push
(bad)
scas
add
xchg
xchg
sti
call
sbb
les
add
mov
push
js
jecxz
add
pop
ret
int
dec
mov
das
out
jecxz
clc
jmp
(bad)
out
cld
ins
sti
fadd
in
lock
je
fadd
push
xlat
pop
dec
call
fucom
test
(bad)
jns
mov
xor
(bad)
out
arpl
push
retf
add
xchg
sti
jmp
retf
inc
cmps
sub
sti
inc
out
loop
push
add
int3
adc
(bad)
int3
xor
(bad)
int3
adc
(bad)
int3
fld
dec
mov
aaa
inc
or
jne
add
xor
call
inc
inc
scas
mov
add
jge
xor
dec
or
push
scas
bound
into
movs
or
add
movs
aaa
rcr
(bad)
int3
mov
(bad)
int3
xchg
repnz
int3
pop
add
xchg
aaa
or
aaa
add
pop
push
cmovns
xchg
jle
sbb
inc
or
push
jb
or
(bad)
stc
jb
outs
add
(bad)
shl
mov
push
ret
repnz
(bad)
int3
adc
(bad)
int3
add
adc
(bad)
int3
popf
add
mov
std
push
mov
imul
call
adc
call
add
ds
lods
and
ds
(bad)
lods
add
out
lods
add
adc
inc
daa
mov
or
lods
add
pop
arpl
add
xchg
ins
sti
out
add
jmp
call
cmp
inc
stc
retf
add
inc
and
std
jmp
xor
push
add
lods
add
pop
pop
mov
pop
ror
stos
xor
jecxz
sti
call
xchg
ret
ror
add
inc
ror
stos
out
pop
pop
mov
push
mov
and
add
or
adc
jmp
cs
and
stos
add
push
xchg
or
imul
sbb
jl
xor
stos
jge
cmps
xchg
or
cdq
popa
punpcklwd
and
sar
jnp
push
stos
inc
jne
daa
ja
add
popf
adc
ret
imul
xor
aas
or
hlt
xor
cmp
xor
(bad)
idiv
sbb
retf
xor
push
(bad)
je
mov
inc
daa
aas
or
test
add
sub
pcmpeqw
xor
daa
ja
(bad)
repz
aas
or
add
cmc
(bad)
repz
int
add
popf
jne
mov
scas
enter
imul
mov
daa
aas
or
pop
ror
out
int3
mov
(bad)
int3
xchg
out
int3
imul
and
(bad)
enter
int3
and
stc
cld
dec
loope
or
add
stos
add
add
or
mov
ins
add
mov
and
mov
ja
pop
adc
sub
add
mov
pop
cld
push
(bad)
outs
or
jl
(bad)
cmp
inc
sub
in
into
mov
and
mov
daa
aas
loopne
add
mov
cmovp
mov
movs
and
addr16
pop
(bad)
mov
jne
add
mov
sub
xchg
cmc
ds
mov
ins
fucomip
mov
and
push
or
pop
push
push
ds
xchg
inc
pop
cld
push
sub
test
sti
(bad)
fstp
or
shl
icebp
inc
add
es
push
or
imul
(bad)
sub
setp
sti
jmp
and
test
imul
xchg
cli
aas
add
cld
aad
cmps
lods
test
scas
add
or
and
cli
aas
add
dec
jg
sbb
rcl
mov
mov
(bad)
js
jecxz
sub
cld
(bad)
call
add
add
add
add
push
mov
inc
fmul
nop
call
test
arpl
in
sti
push
loope
dec
call
outs
dec
mov
pop
test
sti
cmp
test
sbb
push
scas
add
xchg
mov
mov
repnz
pop
pop
icebp
jle
or
jg
add
jmp
sbb
ins
repz
cld
mov
imul
test
je
sub
xchg
scas
and
cmp
imul
adc
adc
ror
test
dec
out
outs
adc
repz
test
jns
inc
add
repnz
ror
xor
push
inc
repz
test
sahf
cld
jne
repnz
or
pop
add
xchg
push
pop
pop
pop
out
mov
jmp
call
xor
repnz
mov
pop
jmp
mov
imul
jae
daa
inc
push
push
sbb
add
sub
jmp
push
push
mov
sti
adc
or
jmp
repnz
pop
aad
std
push
popf
or
xor
test
or
pop
push
fisttp
mov
add
(bad)
and
sbb
inc
add
cli
jmp
and
loopne
add
xchg
lods
push
test
push
push
cmc
pop
push
push
scas
lea
mov
pop
or
fnsetpm(287
outs
adc
jmp
aas
imul
call
and
sub
int3
lods
add
(bad)
xor
call
sub
inc
pop
test
xor
icebp
cld
mov
or
inc
adc
add
add
add
add
and
ficom
gs
add
dec
push
repz
stc
mov
rcl
lds
stos
add
out
add
mov
outs
aaa
jge
outs
sub
call
cmp
pop
mov
clc
push
bsf
jmp
add
stos
add
dec
in
ds
add
std
movs
les
test
add
add
mov
cli
mov
xor
push
out
and
jmp
mov
add
mov
xor
out
sub
jmp
pop
shr
jg
xchg
stos
add
mov
repz
test
add
add
stos
jmp
add
add
xor
je
arpl
pop
cmp
mov
cld
(bad)
pop
add
mov
jmp
hlt
cmps
stos
add
fwait
jmp
push
lea
cmc
rol
jb
(bad)
sbb
cli
jmp
test
jp
push
fisubr
inc
clc
cmps
test
jmp
dec
stos
adc
xchg
ins
add
adc
mov
dec
stos
test
add
cmc
(bad)
jmp
jmp
pop
xlat
fs
add
adc
xchg
mov
cmp
jmp
mov
jge
out
add
mov
add
pop
cld
inc
add
sbb
or
mov
dec
in
les
xlat
mov
add
in
dec
add
jne
out
or
fiadd
dec
test
call
fsubr
mov
add
mov
cld
call
(bad)
cld
jne
and
int3
inc
imul
and
call
add
in
mov
push
mov
mov
fwait
mov
mov
inc
push
xor
pop
out
push
lea
add
jbe
cld
adc
ss
xor
in
call
ins
mov
jne
scas
add
or
cld
adc
(bad)
outs
inc
sbb
call
cld
aas
fsubr
mov
in
xor
push
sar
dec
sbb
push
ds
ja
inc
dec
cld
jne
repz
loopne
ins
sti
cmp
gs
call
mov
add
scas
jmp
jne
das
inc
call
add
cmps
push
cld
or
stc
test
scas
mov
pop
loope
loopne
icebp
stc
add
add
add
add
ins
popf
mov
es
sti
pop
cmps
adc
pop
dec
push
cld
or
mov
sbb
icebp
stc
add
out
sti
rol
and
push
inc
std
out
test
cld
pand
sti
call
mov
add
repnz
inc
lods
je
ins
scas
or
(bad)
sar
add
add
das
mov
cmp
jl
call
xchg
cmps
add
push
test
inc
adc
lock
dec
mov
inc
jb
cld
ss
inc
xlat
call
push
fiadd
test
sbb
xlat
sbb
mov
push
xchg
test
sbb
ficom
push
push
test
ret
add
cmps
mov
sbb
cmp
stos
cmp
inc
adc
or
push
scas
add
loope
inc
pop
push
and
aas
lods
jg
ss
and
sub
add
pop
mov
lds
push
jge
cmp
retf
add
lods
add
add
in
je
jecxz
inc
add
push
add
add
sbb
sti
je
fidivr
(bad)
xchg
cmc
adc
jecxz
mov
movs
lods
add
into
movs
enter
ds
fs
add
inc
lods
add
push
mov
add
fwait
repnz
scas
stos
add
popf
push
repz
xor
lods
inc
rsm
sub
jmp
scas
add
push
sub
ja
add
or
push
add
pop
push
out
xchg
mov
add
gs
jne
sub
add
cmps
stos
or
(bad)
out
mov
add
push
push
add
jmp
add
stos
add
aas
mov
add
jmp
in
or
add
adc
les
jle
ss
mov
add
nop
rol
mov
cld
push
ds
test
in
or
test
in
cld
call
add
repz
stos
jnp
outs
fidivr
(bad)
fucomi
cli
call
sub
mov
cmps
stos
add
xor
cld
jmp
sar
push
fnstcw
inc
add
jmp
in
or
adc
test
jmp
(bad)
cmp
add
das
mov
clc
xchg
mov
add
sbb
cld
dec
jmp
inc
push
adc
call
add
push
cld
(bad)
in
mov
mov
mov
add
jmp
or
std
ss
cmp
or
frndint
bndldx
call
ds
fs
test
xor
add
in
jmp
out
call
sbb
add
mov
mov
sub
xchg
cmp
add
add
add
push
jp
ss
adc
or
sar
setp
call
clc
cmp
les
cmps
mov
xchg
fdivr
mov
and
aas
sbb
fild
push
gs
and
cs
sub
jg
test
push
sub
and
lea
rcr
mov
xchg
mov
and
rol
dec
rol
pop
xor
jg
loop
or
div
(bad)
adc
sbb
push
int
stc
sbb
pop
lea
jo
add
iret
add
or
mov
sbb
jmp
out
mov
test
cmp
sub
(bad)
scas
je
xchg
pop
(bad)
stos
iret
rol
cld
jne
and
int3
cld
test
inc
add
loopne
out
in
cld
jg
in
outs
or
mov
cmp
mov
rol
jecxz
into
sar
mov
ret
xor
mov
lea
inc
add
retf
call
ss
cmp
add
jb
xchg
std
sar
mov
daa
int
(bad)
movs
mov
test
in
add
cmps
retf
add
ret
and
leave
xchg
inc
punpckhbw
add
cli
xchg
jmp
retf
sbb
mov
outs
sbb
inc
adc
push
dec
jnp
call
in
jnp
jno
xor
jg
add
mov
sti
xor
push
or
add
fwait
mov
jg
sar
imul
mov
inc
sub
xor
outs
adc
push
or
or
ds
es
call
gs
mov
(bad)
push
add
lods
mov
xchg
lds
or
jle
xchg
inc
ins
adc
sub
outs
sub
push
(bad)
add
add
into
in
repnz
inc
test
or
test
aas
add
sbb
adc
add
daa
cld
push
int
imul
mov
outs
adc
sar
jmp
es
push
(bad)
fld
xor
mov
cvtps2pd
sti
jmp
and
int
outs
and
je
popa
ja
push
clc
jp
add
ss
jmp
sar
jmp
ret
lahf
add
xchg
std
je
shr
rcr
call
in
addr16
xchg
mov
aas
xor
add
aam
jb
dec
cmp
pop
add
cmps
mov
repz
add
adc
bound
xchg
in
sbb
push
or
pop
fisubr
mov
lds
movaps
sti
jmp
fisttp
imul
or
push
or
data16
outs
add
sub
mov
add
push
sbb
sub
sub
data16
add
xchg
rol
pop
ins
loopne
mov
jge
in
mov
mov
jg
jmp
push
stos
add
retf
mov
lea
aam
push
or
push
test
stos
call
sbb
jl
push
and
add
mov
sbb
jb
dec
cmp
pop
add
push
mov
repz
movs
mov
je
in
sbb
addr16
call
or
in
add
aad
mov
adc
mov
push
mov
cmps
std
jne
ret
push
rol
add
add
add
add
jb
pop
xchg
pop
cld
push
ins
mov
aad
push
ret
dec
jge
mov
mov
adc
dec
test
or
cmps
outs
push
out
inc
inc
jge
or
xchg
movs
mov
ins
jmp
test
dec
push
pop
sti
addr16
cmp
adc
call
ret
pop
pop
int
push
ret
add
popf
jne
add
jno
add
pop
mov
add
or
mov
jne
(bad)
cmp
arpl
pop
popa
and
popa
pop
push
dec
popf
add
out
mov
and
cmp
(bad)
aaa
add
bound
sub
popa
imul
cmps
sub
xor
add
test
ror
mov
mov
inc
mov
imul
ja
inc
lds
dec
pop
pop
sub
xchg
xchg
cmp
mov
je
or
js
and
add
sub
add
das
mov
add
mov
ds
jmp
fdiv
add
add
add
adc
dec
mov
add
fs
pop
push
cmp
jns
outs
out
xchg
cmp
mov
mov
mov
retf
lods
mov
ret
test
shl
dec
sti
jmp
inc
add
jne
or
jbe
mov
sub
dec
push
pop
push
(bad)
inc
add
pop
mov
xchg
aad
mov
lahf
push
mov
mov
(bad)
push
cmp
in
outs
pop
fistp
xchg
cmp
call
push
xchg
sti
out
pop
cld
jmp
add
cmps
scas
or
xchg
scas
push
xor
lock
xchg
lock
dec
sti
jno
fldenv
push
ret
sbb
jae
inc
push
push
test
add
add
add
ds
dec
jmp
das
mov
jmp
popf
enter
jnp
cmp
scas
inc
inc
es
add
clc
mov
ret
mov
shl
psubsb
cmps
call
(bad)
out
add
out
imul
repz
add
xchg
lods
repnz
xchg
mov
jmp
mov
aaa
or
pop
add
loopne
mov
jp
add
cmp
mov
sbb
mov
loop
xor
pop
mov
loop
lods
add
pop
pop
sbb
pop
ds
call
ret
push
mov
push
push
xor
add
ret
call
call
xchg
cmp
mov
popf
std
jne
aam
jno
ret
fcmovnu
cmp
sub
cld
(bad)
cmps
mov
add
rol
pop
lods
add
in
cld
jmp
int3
lods
push
push
adc
call
int
add
inc
sbb
lahf
js
sub
mov
into
test
inc
pop
mov
sub
or
push
xor
pop
fs
xor
inc
inc
outs
or
sbb
inc
loopne
or
add
outs
dec
dec
mov
dec
shl
stc
pushf
push
inc
cmp
fwait
je
cs
(bad)
rol
aas
std
add
jmp
xchg
stos
add
pop
stos
pop
or
add
xchg
mov
fsubr
es
fmul
je
call
(bad)
lds
scas
add
es
aas
push
cmp
dec
jmp
fwait
push
mov
mov
sub
fisubr
js
out
mov
xchg
enter
add
(bad)
xchg
inc
adc
xor
stos
mov
xlat
ins
jmp
add
sbb
or
js
add
push
cmp
add
stos
cmp
or
xor
sub
add
aas
lock
out
sbb
aas
lock
repnz
push
stos
add
int
or
call
je
add
inc
or
call
sti
inc
add
pop
aas
lock
xchg
ret
jae
sub
add
or
jo
mov
call
sbb
or
sub
call
fstp
das
push
mov
test
cld
adc
sbb
outs
inc
in
jecxz
retf
pop
sub
add
inc
jo
add
iret
test
dec
loope
dec
push
sub
outs
push
xchg
push
cld
or
adc
jl
imul
mov
cmc
or
(bad)
add
jg
or
fs
jmp
add
fcmovb
sti
aas
sbb
mov
jmp
add
add
add
call
lock
sub
add
sub
add
dec
mov
ret
imul
xor
jo
mov
mov
jge
dec
jae
jb
inc
or
sub
popf
inc
add
cmp
mov
inc
test
ds
call
add
scas
jmp
jne
test
jmp
add
add
cmp
inc
and
stos
jl
sub
mov
push
pop
or
add
or
pusha
mov
cmps
adc
push
xor
test
jne
cmps
and
scas
add
sub
pop
cld
jne
pusha
cld
jne
add
mov
or
pop
test
mov
lods
mov
sti
dec
ds
inc
or
mov
xchg
ds
lods
push
call
mov
sar
bndstx
sti
call
cs
jmp
call
xlat
scas
ror
add
call
push
in
ins
out
in
or
add
pop
push
hlt
popf
jne
add
add
scas
jne
cmp
add
pop
cdq
or
stc
jl
jg
out
add
rol
je
inc
or
outs
cmp
jne
jmp
dec
ins
jmp
xchg
sar
rol
adc
inc
cmp
inc
push
adc
inc
mov
or
xor
or
sbb
or
mov
pop
imul
(bad)
push
sub
sti
test
cmp
(bad)
cmp
rol
mov
call
sub
outs
sub
cs
add
or
mov
jecxz
gs
add
or
pop
pop
inc
repnz
stos
pop
mov
jmp
int
out
jne
dec
cmp
outs
test
data16
cld
sar
jne
movs
mov
les
xchg
mov
lods
inc
inc
in
addr16
stos
cdq
or
inc
add
mov
psrlq
or
jne
sub
add
dec
add
outs
sub
add
scas
sbb
jmp
push
cmp
sub
cld
(bad)
out
sti
jmp
mov
xor
and
call
es
inc
mov
xor
add
add
leave
aad
or
add
add
pop
(bad)
inc
ds
sar
jne
mov
and
mov
les
dec
stos
add
movs
sar
shr
(bad)
and
inc
add
jecxz
xor
cld
mov
xchg
outs
push
rol
add
stos
add
or
push
or
xchg
rol
mov
mov
add
ins
sti
mov
retf
lods
cmp
cmps
dec
mov
jg
inc
or
pop
imul
inc
add
scas
and
jmp
stos
adc
data16
jmp
add
push
mov
xor
dec
adc
add
add
add
add
call
(bad)
push
bnd
ins
fucomip
clc
mov
les
out
test
push
xchg
add
repz
cld
(bad)
sbb
std
jmp
jecxz
cmps
test
jecxz
xor
cld
ret
mov
cmps
add
out
out
dec
call
inc
sbb
pcmpgtd
rol
cld
pop
in
inc
add
mov
inc
jle
adc
es
push
popf
add
cmp
and
add
popf
jo
xor
sti
mov
je
mov
mov
pop
cmp
push
or
mov
out
shr
jb
stc
ret
rcr
sbb
rol
cld
aas
add
fdiv
add
jne
xor
shl
cli
push
or
cmps
sub
retf
jne
popa
imul
sbb
cld
adc
int
sbb
mov
sub
push
ja
jmp
cwde
cs
mov
xor
inc
gs
ret
add
pop
lds
mov
inc
or
pop
push
jl
mov
lock
sti
jb
stc
mov
icebp
and
mov
into
add
add
dec
sbb
xor
mov
je
pop
enter
outs
or
mov
out
jmp
pusha
imul
add
add
add
loope
mov
pop
movs
jne
jmp
out
call
call
scas
add
icebp
adc
or
and
mov
or
out
sbb
clc
nop
cmp
call
push
xchg
sti
out
and
jmp
add
cmps
scas
or
in
cmp
adc
add
add
into
sbb
dec
lods
mov
scas
inc
inc
push
icebp
fild
push
icebp
cmc
inc
push
outs
and
pop
jmp
stc
sub
pop
and
(bad)
js
push
push
push
scas
add
pop
cmp
jmp
shr
add
adc
push
sbb
or
mov
add
cmp
xor
(bad)
ins
inc
add
fild
cmps
lods
add
pop
mov
sub
xchg
mov
test
sub
add
jae
cld
call
scas
sbb
inc
or
cmp
(bad)
loope
cld
call
dec
jo
je
test
(bad)
js
out
add
in
in
popf
lods
jg
(bad)
cmp
mov
test
push
push
test
rcr
lods
mov
cdq
and
mov
div
mov
sar
pop
xchg
idiv
push
sbb
cmc
ret
xor
stc
fwait
cmc
pop
lea
rol
push
mov
mov
ret
mov
aaa
sti
out
add
cmc
cld
jmp
aas
(bad)
push
rol
call
outs
clc
mov
dec
dec
cli
call
push
or
lahf
add
jmp
jbe
(bad)
dec
rol
xchg
lods
add
pop
mov
test
stos
add
arpl
pop
cmps
stos
cmp
shr
add
add
stos
outs
pop
and
sub
jo
jmp
sub
in
add
stos
lods
push
lea
retf
mov
movs
sbb
add
pop
test
call
adc
sti
je
push
pop
or
retf
push
inc
inc
gs
cmc
sub
in
aas
cld
adc
push
jecxz
jmp
es
pop
adc
push
ret
popa
retf
and
(bad)
call
mov
addr16
add
add
dec
das
jbe
inc
adc
cld
jmp
dec
cmp
leave
punpckhwd
retf
push
pop
iret
fild
add
and
add
movs
lock
pop
mov
mov
xor
add
stos
add
push
pop
adc
(bad)
lods
add
(bad)
add
cmp
sub
dec
jecxz
clc
(bad)
int3
add
inc
outs
add
xor
(bad)
mov
icebp
outs
add
add
ins
idiv
inc
iret
cld
call
in
ins
fucomip
(bad)
sub
jmp
and
(bad)
mov
and
mov
push
or
jmp
test
test
dec
into
cld
mov
push
fdivrp
inc
sub
cmp
sub
add
fdiv
and
sub
call
pop
jecxz
bswap
cld
push
or
push
push
imul
cld
sbb
or
(bad)
mov
push
in
adc
mov
out
repz
cmps
addr16
mov
in
pop
lds
and
mov
sti
scas
(bad)
in
int
popf
dec
retf
cld
inc
add
xor
add
pusha
mov
xchg
retf
scas
outs
es
scas
arpl
mov
mov
push
or
push
(bad)
(bad)
jne
jmp
int
(bad)
retf
push
xchg
scas
repnz
stos
(bad)
outs
adc
test
std
jne
(bad)
xor
scas
add
dec
call
jle
add
popa
sub
push
call
mov
add
push
cld
jmp
push
inc
adc
and
in
xchg
or
push
cmp
mov
fdivrp
inc
xchg
push
cwde
xchg
test
scas
add
lahf
push
xchg
jnp
cld
je
sub
cvtpi2ps
add
cmps
xchg
push
pushf
xchg
mov
add
fdivrp
xchg
and
jnp
cld
xor
and
mov
jns
xchg
aas
in
xchg
mov
(bad)
or
jns
add
int3
cmps
mov
push
out
jnp
sub
xchg
shr
mov
and
test
das
mov
call
add
(bad)
inc
add
sbb
lds
(bad)
lods
push
test
pop
fdivrp
add
ret
movaps
add
mov
test
jmp
in
cmp
or
out
add
movs
xchg
jle
cmp
cli
push
shr
cmp
adc
push
mov
call
xchg
or
mov
in
dec
push
sub
xchg
cmp
add
cmp
inc
xchg
dec
push
inc
fcom
in
xchg
inc
jmp
fdivrp
mov
gs
mov
cmc
cvtpi2ps
jmp
(bad)
fdivrp
mov
cwde
dec
mov
sbb
(bad)
push
std
adc
add
add
add
push
mov
or
(bad)
movs
add
in
daa
aas
in
xchg
mov
push
jmp
mov
(bad)
cld
call
xchg
or
dec
test
add
xchg
sti
push
call
mov
cmp
add
out
push
ins
daa
and
mov
addr16
or
retf
or
inc
add
(bad)
es
add
xchg
cld
add
stos
std
test
(bad)
cld
jmp
xchg
loop
stos
add
pop
(bad)
cmp
psubsw
leave
enter
xor
mov
inc
sti
xchg
cld
add
xchg
or
test
outs
push
mov
add
test
jle
cmp
add
(bad)
daa
jle
dec
xchg
cld
add
sbb
mov
inc
push
pop
mul
jle
jnp
cld
call
fisttp
out
cld
push
stos
std
test
cld
call
sub
inc
xchg
mov
push
jle
cmp
idiv
add
and
and
push
stos
mov
int3
ja
test
cld
call
movs
add
push
and
push
add
add
mov
add
inc
and
test
jg
out
add
popa
push
inc
adc
test
and
mov
add
int3
cld
jmp
xchg
sti
sub
pop
fdivrp
push
xor
cld
cmp
fdiv
in
(bad)
cld
test
cld
dec
arpl
sbb
adc
in
sub
add
lds
xor
test
cld
call
ins
fdivrp
mov
(bad)
cld
push
mov
jb
cmp
lea
fdivrp
add
mov
xor
cmp
cld
push
add
(bad)
cld
push
sbb
lds
mov
push
mov
inc
movs
mov
mov
push
fdivrp
mov
(bad)
and
mov
mov
test
jmp
pop
jle
dec
(bad)
fwait
popa
or
xchg
(bad)
cld
(bad)
out
dec
add
es
jle
sti
(bad)
cld
add
std
mov
test
mov
add
jb
sets
add
cdq
add
call
xchg
cld
cmp
fdivrp
mov
retf
xor
inc
in
lds
dec
mov
cmp
inc
(bad)
xchg
cld
adc
or
adc
jmp
dec
sbb
add
mov
call
cmp
ret
cld
add
xor
(bad)
xor
ror
mov
ss
sti
ret
lds
cld
push
pop
imul
fld
push
mov
xchg
mov
(bad)
out
add
mov
ret
add
gs
pop
cmps
scas
add
mov
ret
fistp
and
jmp
mov
push
call
mov
in
aaa
in
ret
sti
sub
jp
jmp
adc
lea
and
dec
inc
aas
aaa
mov
sub
call
std
aas
in
ret
add
add
cmp
stc
or
scas
or
sbb
cmps
cli
mov
mov
jmp
cld
aaa
in
ret
gs
scas
ret
sbb
xchg
(bad)
add
xor
mov
add
xor
dec
lea
jns
jmp
jmp
clc
mov
mov
std
push
lods
std
adc
(bad)
push
jmp
data16
ret
dec
mov
push
lds
sub
cld
push
popf
call
mov
mov
int3
rol
mov
sub
ret
jo
enter
push
lods
test
mov
fdivrp
xchg
xchg
jg
xor
cld
sub
jge
call
add
cld
cmp
or
mov
cld
(bad)
cmp
das
daa
in
ror
popa
cld
mov
(bad)
cld
jmp
jl
adc
fucomi
outs
adc
add
and
xor
or
cld
jmp
ror
inc
sub
mov
sub
cld
add
adc
inc
add
aaa
es
and
mov
(bad)
cld
(bad)
jmp
jecxz
add
cld
(bad)
cmps
mov
add
mov
cld
mov
(bad)
cld
jmp
sbb
xor
add
in
mov
add
xchg
inc
or
jmp
fdivrp
and
xor
imul
mov
mov
sti
call
ret
mov
add
mov
xor
(bad)
std
lods
mov
ins
xor
in
mov
div
mov
jecxz
jg
cld
leave
movs
inc
or
call
jp
popa
out
or
ret
cmp
les
lahf
stos
add
adc
stos
add
xchg
mov
cmp
add
add
add
es
add
cld
mov
cmp
add
add
jns
push
push
imul
add
mov
add
(bad)
jae
mov
xchg
add
dec
out
and
ds
mov
out
neg
jp
add
fs
jne
add
inc
add
mov
cld
jmp
(bad)
call
jmp
mov
call
out
jno
dec
cmp
cld
jmp
ret
push
mov
inc
cli
rcl
mov
jecxz
test
cld
pop
aad
or
jecxz
add
(bad)
jnp
mov
mov
jne
add
enter
mov
add
push
mov
add
aad
cmp
and
add
adc
jecxz
pop
mov
sti
call
sbb
xchg
jecxz
cld
sbb
call
stc
imul
lea
inc
add
rol
(bad)
add
imul
xchg
sbb
adc
mov
test
add
call
push
cld
pop
(bad)
mov
sti
test
add
inc
(bad)
out
in
test
push
in
push
jecxz
idiv
or
pop
inc
scas
add
jmp
std
jmp
add
xchg
jecxz
out
cld
ret
inc
inc
add
xchg
cld
call
out
adc
cld
jne
cs
lock
popf
cmp
adc
inc
push
call
ret
add
scas
or
add
mov
jae
call
imul
out
mov
or
out
(bad)
mov
or
lock
inc
add
out
push
dec
lea
push
aad
cmp
sub
fdiv
(bad)
popa
pusha
mov
loopne
push
dec
sbb
das
aaa
inc
mov
pop
popf
sbb
mov
stos
xor
js
add
or
leave
psubusw
cmp
or
(bad)
sub
add
cmp
inc
shl
lods
call
push
adc
mov
mov
mov
out
or
out
inc
or
jmp
sub
cwde
repz
repz
imul
lds
mov
scas
bound
mov
lods
add
xchg
les
mov
test
shl
add
add
add
add
add
outs
add
shl
push
mov
and
lds
mov
inc
out
in
jbe
call
out
xor
ds
pop
push
push
pushf
push
out
xor
test
pop
jge
outs
pop
pop
shl
rcl
add
push
call
add
repz
add
inc
in
cld
pop
push
test
pusha
les
inc
mov
shr
add
es
cld
jmp
int
aas
cwde
test
cld
push
popf
ror
add
mov
repz
in
cld
push
(bad)
ror
xor
add
jae
ins
add
popf
jecxz
or
add
xor
not
add
out
cmps
lds
loopne
call
mov
inc
sahf
sub
add
call
add
sbb
add
fwait
pop
mov
push
jmp
shr
mov
arpl
inc
inc
in
inc
add
mov
mov
sub
inc
in
adc
cmp
mov
loopne
or
push
mov
inc
or
or
arpl
add
arpl
or
mov
cdq
loop
ja
inc
or
bound
sar
shl
add
add
add
add
mov
sub
fisttp
jmp
scas
popa
and
push
and
call
(bad)
outs
pop
int
add
sbb
add
jae
or
mov
dec
push
daa
inc
or
add
sbb
inc
or
pop
add
dec
outs
push
ins
ins
add
push
push
mov
dec
stos
or
out
mov
add
add
add
add
test
or
cmps
sub
and
movs
mov
mov
adc
cmps
or
mov
fiadd
xor
or
dec
ret
pop
xor
cld
(bad)
add
pop
sbb
mov
shr
mov
xor
jecxz
dec
mov
add
fiadd
xor
or
gs
call
or
add
fild
cld
add
jg
mov
pop
add
addr16
sub
push
outs
es
sbb
fst
or
mov
fidivr
or
adc
pop
lods
mov
add
push
push
cmp
xor
jecxz
xchg
add
cs
sti
mov
(bad)
pop
inc
fnstcw
or
or
pop
pop
mov
xor
jecxz
xchg
add
pop
sbb
fstp
and
arpl
scas
add
mov
movs
push
push
test
mov
push
cmc
inc
sahf
pop
outs
add
add
push
add
and
add
mov
es
sub
cmp
pop
outs
sub
cmp
add
xchg
add
in
jbe
mov
push
inc
je
pop
outs
or
and
push
mov
cld
sti
mov
scas
add
call
mov
add
add
scas
add
xor
mov
icebp
jecxz
gs
add
xchg
cmp
inc
jne
push
adc
and
add
pop
and
mov
add
xchg
fld
pop
das
jno
fldenv
(bad)
fcom
adc
and
ret
and
cld
jne
mov
adc
add
cmp
jecxz
mov
push
push
ret
popf
mov
mov
ins
add
jg
mov
in
adc
push
outs
adc
add
jecxz
fld
hlt
jmp
ds
outs
push
test
or
pop
imul
or
add
add
cdq
add
repnz
inc
push
or
(bad)
mov
add
add
push
popa
sti
inc
outs
push
inc
lods
add
push
sub
sbb
ror
shr
lea
pop
fdivr
fcmovnu
jmp
sbb
stos
mov
dec
lahf
mov
adc
inc
cmps
mov
add
add
add
add
ds
inc
add
shr
sbb
xchg
fcomi
pop
pop
jns
jae
shl
fsubr
dec
xchg
nop
adc
inc
stos
mov
add
dec
push
(bad)
add
out
mov
sbb
mov
add
mov
lods
add
test
or
adc
rol
lods
xor
mov
add
aam
or
push
fsub
dec
cwde
aas
(bad)
(bad)
call
mov
test
inc
clc
jae
out
lods
idiv
sub
jbe
adc
mov
out
jmp
js
fsub
inc
jne
sub
jmp
mov
fwait
pop
jnp
push
xor
adc
inc
repnz
scas
cld
inc
xchg
enter
rol
jne
popf
pop
shr
and
or
sub
(bad)
loopne
test
or
sub
loopne
int3
in
fstp
inc
fstp
ins
scas
xor
and
adc
xchg
scas
add
fild
gs
add
xchg
daa
jne
mov
or
sub
out
inc
xchg
call
pop
aad
out
push
and
rcr
cmp
es
and
je
sub
add
and
stos
les
inc
stos
add
sub
cmp
cld
(bad)
push
xchg
add
out
mov
in
ins
in
test
add
add
jmp
push
(bad)
add
ret
cs
je
cld
scas
jecxz
ds
add
push
mov
cli
add
mov
in
adc
and
jge
or
mov
aad
xor
sub
fld
pop
int
adc
sub
inc
in
add
lods
in
sbb
xor
xor
inc
hlt
(bad)
in
and
mov
idiv
out
div
sub
outs
in
cld
call
xor
loopne
outs
js
call
sub
or
imul
sub
add
jp
add
mov
(bad)
fild
fs
jmp
lods
cld
(bad)
addr16
in
aad
or
push
lods
jb
jecxz
or
repnz
pop
dec
rcr
add
and
ret
jmp
fld
mov
jne
rol
icebp
lods
cld
call
and
xchg
dec
(bad)
pop
xchg
lods
imul
jmp
mov
add
add
cli
jmp
neg
sub
call
jp
jnp
call
and
sub
xor
or
test
cld
call
stc
div
inc
mov
adc
les
shl
shl
cmp
jbe
imul
and
add
and
das
push
call
push
gs
and
push
test
(bad)
aad
test
pop
call
das
in
sbb
inc
fstp
fld
dec
sbb
mov
fdiv
inc
les
push
idiv
sub
add
add
gs
movs
push
scas
add
gs
pop
popf
std
cld
xor
inc
jmp
mov
fistp
not
inc
push
push
mov
dec
pop
clc
pop
in
mov
mov
idiv
xchg
shr
inc
stos
and
inc
in
leave
xchg
daa
not
inc
push
push
sbb
movs
or
pop
clc
stos
dec
sti
inc
add
dec
pop
adc
inc
(bad)
and
clc
leave
adc
pop
sub
out
or
pop
ja
dec
xchg
push
or
sub
lock
mov
jne
aas
clc
or
(bad)
cli
push
sub
adc
sbb
enter
fcmovb
sti
jmp
pop
cmp
add
mov
jne
fcomip
or
add
nop
sahf
rcr
not
pop
fldz
jb
or
xchg
inc
sbb
sub
scas
add
and
xchg
fs
ret
add
stos
(bad)
out
inc
bound
pcmpgtd
add
pop
add
or
loope
out
les
add
add
add
add
add
jmp
sbb
imul
test
add
push
sub
add
fisttp
mov
or
out
adc
dec
dec
mov
mov
xchg
shl
and
fld
cli
push
push
xor
jmp
cli
fstp
ret
in
or
je
and
jle
inc
add
loop
xlat
inc
test
xor
loop
push
stos
add
jae
cmp
push
in
push
popf
je
cld
adc
jmp
in
push
ret
aam
(bad)
mov
in
pop
xor
jge
push
inc
or
in
and
cmps
out
shl
mov
or
add
xor
leave
ret
sub
clc
push
mov
mov
add
jae
and
outs
pop
or
pop
ror
mov
sub
fld
dec
out
rol
fild
and
jne
clc
popf
pop
rol
fldz
out
inc
(bad)
icebp
add
not
je
mov
add
leave
ret
mov
in
add
mov
idiv
aad
cmp
jmp
dec
iret
lods
or
fsubr
cld
wrmsr
std
or
rcr
in
sbb
dec
sti
call
fadd
cmp
retf
rcl
gs
cwde
mov
cmp
sldt
mov
or
imul
add
or
pop
push
or
icebp
jne
mov
cmp
push
lea
push
pop
mov
pop
fmul
mov
dec
add
dec
mov
inc
call
adc
adc
sbb
idiv
pop
mov
add
pop
jecxz
xchg
fist
add
sub
dec
aaa
inc
clc
lea
adc
lods
rcr
mov
idiv
mov
outs
clc
add
out
add
sbb
inc
xor
xor
std
popf
mov
mov
inc
push
pop
dec
jno
adc
aaa
add
pop
je
inc
jnp
mov
fneni(8087
mov
add
mov
sbb
int
idiv
and
cld
idiv
pop
mov
add
pop
jmp
xor
xchg
jb
pop
loope
inc
inc
mov
dec
or
or
or
add
cli
dec
push
out
push
call
das
les
dec
add
inc
add
push
imul
mov
add
das
loope
retf
test
mov
jle
jle
xchg
inc
mov
add
cld
dec
push
or
xor
das
ret
outs
jecxz
push
push
inc
call
and
add
ficomp
fistp
jne
inc
mov
cmovo
jmp
or
mov
push
adc
pop
cli
idiv
jmp
scas
call
mov
das
dec
fcom
or
mov
mov
add
ss
fcomp
loopne
movsx
call
ss
mov
in
or
jle
dec
inc
add
lods
add
in
push
aad
xor
and
ds
movs
call
push
mov
dec
push
sbb
call
sbb
sub
in
mov
pop
ror
or
inc
inc
push
ins
loopne
and
inc
add
cs
inc
loopne
mov
gs
xor
add
mov
cmovp
movs
not
push
jnp
(bad)
fisttp
jmp
sub
stc
xor
jne
mov
mov
cmp
cli
mov
lods
add
or
fdivr
sbb
inc
idiv
cmps
call
push
loop
push
test
dec
mov
push
pop
das
add
adc
les
xor
jne
xchg
out
lock
popf
xchg
cmp
mov
add
enter
cmovno
add
jmp
xor
sbb
dec
push
or
popa
inc
jnp
mov
inc
mov
add
das
add
add
pop
or
add
sar
mov
leave
ret
lea
je
jge
outs
sub
jae
call
call
dec
push
test
xor
out
mov
jmp
cmp
idiv
lods
hlt
clc
add
idiv
mov
mov
add
stos
add
and
test
idiv
pop
hlt
clc
add
std
jmp
add
add
add
jg
idiv
push
in
or
cmc
jecxz
push
sub
mov
cmp
xchg
movs
add
fisubr
cmp
stos
test
cmp
mov
cld
mov
dec
sbb
adc
in
jb
fucomi
idiv
loope
jmp
stos
shl
inc
xchg
repz
idiv
mov
xchg
popa
inc
add
jmp
jmp
bound
inc
lds
sub
jne
ds
idiv
mov
outs
out
inc
shr
je
and
mov
dec
call
(bad)
cmps
stos
scas
sar
mov
dec
sbb
jmp
mov
test
add
fisttp
mov
arpl
mov
ds
or
cld
idiv
add
jmp
mov
jge
mov
out
hlt
mov
in
test
or
(bad)
lock
js
xor
or
sub
(bad)
jmp
or
aam
jmp
jnp
xchg
mov
idiv
adc
add
push
jnp
mov
pop
ret
fnstsw
in
js
mov
mov
push
imul
push
out
jne
jns
push
popf
rcl
mov
idiv
scas
sti
lahf
std
xchg
cmp
idiv
(bad)
sub
push
push
idiv
pop
sub
std
add
inc
cmp
idiv
pop
sub
std
mov
push
idiv
dec
sub
std
xchg
cmp
test
imul
push
push
inc
popa
(bad)
sub
push
jnp
push
mov
add
cmp
jmp
leave
jo
aad
imul
loope
sti
call
in
or
add
mov
dec
call
pop
pop
pop
pop
push
lds
sbb
jnp
icebp
(bad)
lock
loope
scas
or
(bad)
out
add
call
jnp
popa
lds
or
jnp
mov
dec
inc
stos
sub
jecxz
or
sub
test
add
push
idiv
xchg
imul
jmp
push
adc
xor
mov
iret
xor
mov
scas
and
test
and
push
or
scas
cmp
push
xchg
test
mov
push
inc
xchg
in
lods
add
push
pop
ja
inc
mov
lock
fs
cmp
or
sub
adc
push
test
mov
inc
jg
inc
push
imul
hlt
xor
push
sub
and
fstp
adc
std
call
push
mov
scas
sub
test
push
idiv
lahf
sub
std
add
mov
push
idiv
pop
sub
std
inc
push
jmp
punpcklbw
call
ds
je
lods
push
and
test
popa
sti
push
sbb
or
xchg
inc
mov
mov
inc
sti
jmp
push
add
popa
inc
sti
jmp
mov
add
gs
sti
call
mov
add
add
jmp
adc
std
call
scas
jmp
cmp
jne
xchg
imul
mov
bswap
std
mov
mov
jnp
cmps
dec
idiv
fidivr
popf
int3
xchg
push
imul
cmp
dec
daa
int3
std
popa
push
arpl
pushf
inc
mov
shr
daa
int3
std
mov
add
fs
jmp
stos
add
in
add
add
jmp
mov
call
call
mov
(bad)
(bad)
push
idiv
add
or
stos
add
imul
inc
push
pop
mov
aas
iret
or
out
repnz
sub
cmp
add
into
inc
or
cvtdq2ps
or
(bad)
sub
add
inc
sti
call
mov
out
lea
call
push
push
jmp
xor
std
jmp
call
mov
std
jmp
mov
and
add
and
jae
add
jmp
lock
push
test
add
cld
jmp
test
cmp
jne
adc
push
idiv
mov
xor
jmp
cmp
inc
jg
cdq
test
jg
test
inc
jg
cdq
test
jg
imul
add
add
into
ss
pop
mov
cmp
ss
imul
jnp
push
push
idiv
les
push
xor
mov
call
mov
pop
je
mov
test
mov
mov
test
add
adc
inc
inc
imul
or
idiv
jg
(bad)
jmp
dec
movups
add
jg
fs
cmp
pop
(bad)
and
mov
jnp
xchg
mov
pop
dec
pop
mov
test
aam
mov
jmp
mov
add
add
push
idiv
xor
add
hlt
std
xchg
inc
mov
mov
pop
std
jmp
test
jnp
call
push
test
inc
mov
add
push
xor
scas
pop
test
mov
add
mov
std
and
or
jmp
test
add
add
add
inc
std
jmp
or
adc
mov
add
mov
test
and
mov
std
inc
push
adc
(bad)
scas
mov
pop
sar
mov
std
jmp
scas
add
pop
movs
add
sub
std
mov
inc
idiv
add
pop
sub
std
mov
scas
jmp
cmp
pop
test
lods
add
scas
jns
jns
jo
test
idiv
mov
test
cmp
jmp
ds
inc
sahf
or
push
mov
div
scas
inc
mov
scas
add
inc
fimul
inc
push
jecxz
add
xchg
push
jnp
mov
shl
test
push
test
mov
aas
cld
cs
mov
jmp
mov
mov
aas
jge
add
inc
repnz
idiv
(bad)
cmp
jns
test
mov
std
inc
mov
add
inc
mov
add
scas
shl
xchg
push
je
scas
xchg
mov
enter
add
lods
add
mov
add
push
sbb
std
mov
scas
add
pop
outs
sbb
in
push
not
imul
inc
lods
add
fwait
stos
add
mov
loope
xchg
lods
jnp
cmp
mov
lods
add
add
fs
idiv
aad
imul
jnp
jno
test
stos
cmp
inc
sub
mov
dec
idiv
sub
or
lods
out
aaa
xchg
stc
add
inc
push
jno
inc
push
test
shl
out
test
(bad)
or
dec
mov
std
xchg
push
pop
mov
add
fs
jmp
adc
jmp
dec
movs
add
stos
jnp
push
dec
idiv
cmps
bound
or
add
and
add
mov
pminub
add
es
mov
adc
retf
add
stos
jne
cmps
push
pop
jne
bound
add
stos
add
add
sub
test
inc
dec
idiv
sub
adc
add
(bad)
int3
inc
mov
dec
std
call
stos
add
pop
dec
jmp
dec
neg
and
std
mov
push
adc
and
mov
in
repnz
sub
fwait
add
push
add
add
es
clc
lahf
and
add
test
sbb
jmp
dec
idiv
adc
call
inc
std
inc
mov
push
mov
dec
lea
add
lods
add
pusha
inc
or
jnp
mov
fild
add
ja
mov
add
xor
xchg
xor
xor
and
sar
push
idiv
mov
sbb
add
sbb
mov
jo
inc
es
out
pop
mov
js
or
lock
inc
dec
add
(bad)
mov
mov
inc
std
inc
add
dec
test
or
mov
sub
cld
xchg
dec
dec
dec
mov
cmp
dec
jnp
xchg
popf
test
fisttp
add
test
adc
sbb
loopne
and
add
pop
test
idiv
pushf
sub
fsubr
aam
add
xchg
dec
xor
mov
dec
test
sbb
jmp
scas
pop
test
dec
idiv
gs
xchg
nop
je
dec
adc
std
xchg
dec
out
shl
dec
inc
in
jmp
pushf
scas
inc
xchg
mov
adc
call
cli
xor
mov
not
jmp
add
add
add
(bad)
jbe
xchg
movs
test
xchg
cmp
fcom
(bad)
push
cmp
(bad)
lock
add
scas
add
fwait
pop
std
jmp
sub
mov
cs
add
mov
idiv
xlat
scas
add
dec
aaa
jp
xchg
dec
idiv
mov
add
(bad)
scas
cmp
adc
idiv
add
sub
test
test
idiv
xor
jmp
sbb
jmp
push
test
jae
test
adc
cdq
je
dec
push
out
outs
scas
jmp
shl
push
cmp
add
clc
mov
iret
inc
mov
es
dec
lods
or
mov
std
add
inc
push
add
(bad)
lods
mov
pop
adc
je
pop
outs
je
dec
pusha
cmp
(bad)
push
dec
std
inc
dec
test
loope
pop
sbb
push
push
jmp
and
pop
push
jecxz
fist
or
sbb
and
in
push
test
add
add
add
adc
dec
cmps
xchg
add
test
sub
test
push
idiv
lahf
sub
std
mov
push
idiv
out
test
add
mov
add
add
lods
je
cwde
sub
std
popa
push
sub
je
push
aam
push
imul
lea
rol
push
rol
add
lods
add
inc
test
sub
pop
test
and
or
cmp
mov
dec
idiv
shl
fdivr
add
push
inc
push
cmc
xchg
push
jnp
xor
shl
or
call
test
inc
push
test
xchg
push
out
test
add
jb
sbb
lock
xchg
push
add
mov
dec
push
push
test
mov
push
idiv
and
pusha
std
jmp
push
idiv
retf
rol
xor
sub
std
and
mov
push
lea
stos
lea
jp
test
push
idiv
pop
jns
call
add
movs
ins
adc
fwait
mov
and
or
test
mov
pop
call
and
jmp
pop
jne
ds
push
icebp
cld
inc
and
std
xchg
push
push
lea
icebp
cld
jmp
push
pop
adc
cld
inc
jl
sub
add
add
xor
dec
push
and
fsub
push
imul
jae
idiv
movs
out
or
add
lods
std
xchg
push
call
cmp
std
jmp
out
cld
inc
sti
xchg
std
jmp
push
mov
mov
push
sub
iret
sbb
std
adc
std
add
mov
inc
fiadd
push
dec
push
dec
jnp
add
sbb
hlt
inc
pop
cmp
jge
mov
dec
std
jmp
xor
and
test
jecxz
test
sub
cmp
sbb
add
and
add
sbb
add
add
sbb
add
push
mov
(bad)
cmp
jns
sbb
add
inc
add
xor
dec
push
or
movhps
daa
paddd
push
inc
add
mov
add
cli
in
inc
mov
div
clc
(bad)
push
or
adc
rol
(bad)
shl
mov
lea
jo
add
mov
ret
and
sub
div
push
fisttp
sub
mov
add
and
xchg
xor
adc
clc
imul
or
sbb
repz
ret
add
add
stos
sar
cli
je
shl
and
clc
(bad)
mov
add
ds
mov
adc
out
sub
push
sbb
or
(bad)
outs
divps
outs
or
fiadd
push
pop
pusha
in
mov
cmp
or
jmp
add
jnp
daa
cmp
or
out
and
push
scas
add
inc
not
adc
dec
mov
mov
fcmovne
push
iret
in
je
(bad)
push
jne
add
aaa
inc
or
out
jae
aad
pop
mov
stc
mov
dec
xchg
push
jnp
mov
leave
pop
adc
and
je
mov
mov
mov
je
aaa
inc
clc
aad
jo
and
xor
lock
scas
push
xchg
pusha
jecxz
add
stos
out
jae
popf
ins
lock
add
das
stc
add
int3
cmp
and
or
pushf
mov
push
call
sub
adc
sub
add
adc
xor
cmp
jns
mov
push
add
xchg
lds
popa
test
or
popa
jo
adc
call
add
add
add
add
xlat
add
push
lds
call
jo
das
enter
idiv
xchg
mov
pop
xchg
push
loope
jne
ss
lock
add
inc
sbb
rcr
lods
test
loope
xor
mov
add
jb
add
sbb
jne
mov
jmp
add
in
retf
int3
jb
retf
int3
shl
retf
int3
shl
retf
int3
fucomp
and
fnsave
adc
or
or
call
mov
loope
add
cmp
cli
xlat
lods
call
sti
shr
ltr
xchg
add
add
ds
or
or
in
retf
int3
add
xchg
lock
int3
sti
xor
push
pop
jg
xor
push
jnp
cmps
clc
fadd
mov
jmp
cmp
adc
push
leave
aad
not
or
dec
jmp
or
and
sti
sbb
add
push
stos
xor
gs
dec
(bad)
cs
add
add
loop
add
fiadd
scas
les
mov
add
inc
add
push
adc
test
in
(bad)
jmp
stos
scas
add
or
jge
mov
pop
sbb
jp
mov
pushf
add
cs
add
ror
add
pop
sub
inc
or
(bad)
jmp
call
pop
mov
test
or
inc
add
test
push
adc
(bad)
fldcw
sub
mov
cld
(bad)
sub
inc
jne
push
cli
outs
add
in
push
fist
repz
push
push
mov
add
add
js
idiv
and
stos
test
sti
test
icebp
jae
xchg
inc
dec
stc
xlat
adc
or
sub
data16
mov
hlt
push
pop
pop
jmp
jmp
in
and
inc
push
mov
adc
ds
pop
xchg
adc
pop
ret
jl
div
or
pop
add
ret
jmp
in
xor
add
fwait
test
cld
cmc
out
jne
in
jne
mov
fsubr
das
retf
idiv
push
ins
fcom
push
dec
push
add
pop
push
(bad)
fild
push
call
packssdw
lea
js
add
les
sub
add
jnp
cmp
add
add
imul
xchg
push
fsub
das
xchg
clc
stc
je
mov
add
pusha
jo
add
push
inc
in
out
loop
sbb
je
mov
add
pusha
jo
mov
push
pop
movs
bound
push
and
cmp
mov
mov
xor
add
inc
cld
inc
fild
jne
test
or
ins
fsubr
daa
leave
idiv
shl
push
pop
dec
push
jne
dec
lea
stc
dec
call
lahf
je
lea
dec
push
push
adc
es
sub
enter
xchg
cmp
pop
je
pop
je
xor
jecxz
add
gs
stc
je
mov
call
jp
pusha
jo
xchg
jle
inc
in
xchg
test
neg
add
je
mov
call
mov
mov
push
pop
xchg
in
push
call
das
out
cmp
cmps
in
mov
dec
push
int
or
cmp
mov
jne
push
es
add
popa
push
add
and
push
(bad)
loop
jmp
call
add
and
jno
ins
in
cmp
cmps
mov
inc
fbstp
rol
popa
and
mov
les
test
std
das
and
jle
mov
dec
loopne
aas
jmp
xchg
pop
fisub
cmp
add
ja
in
loopne
cmp
mov
aaa
xor
sbb
cmp
(bad)
jg
mov
add
cmp
out
sub
(bad)
or
call
pop
xchg
cmps
not
or
push
mov
stos
dec
mov
mov
add
add
test
add
mov
mov
movs
cmp
xor
add
and
mov
std
test
stos
push
xor
stos
and
add
test
sar
in
or
cmc
jbe
mov
popa
mov
mov
mov
rol
test
push
mov
add
ret
pop
shl
and
or
lock
(bad)
pop
in
mov
es
jne
movs
or
movs
pop
shr
and
add
mov
mov
cmps
mov
sbb
loope
out
or
rcl
(bad)
or
out
dec
mov
add
sbb
int
adc
popf
aam
push
lahf
ins
rcl
ins
or
ins
lock
(bad)
adc
jmp
dec
push
push
adc
jne
sahf
cld
movs
sti
mov
call
ror
sbb
add
xor
pop
data16
fist
jmp
adc
pmulhuw
jmp
jge
xor
add
ficom
inc
fld1
pop
outs
repz
ror
ret
push
gs
call
movntq
out
int3
adc
int3
jns
push
xor
mov
mov
adc
(bad)
je
inc
imul
idiv
and
pop
into
and
pop
fisub
in
jmp
push
and
cli
xlat
test
add
add
add
add
and
dec
into
and
popf
jmp
and
sub
push
out
icebp
sbb
sbb
icebp
or
mov
fstp
(bad)
dec
mov
push
pusha
jecxz
in
dec
or
push
jp
add
jmp
dec
shr
test
icebp
lods
add
cmp
popf
ins
and
mov
sti
shl
xor
outs
or
adc
jno
xor
dec
and
rcl
sbb
adc
pop
scas
out
ficomp
cdq
ret
call
sbb
jnp
xchg
rcl
aam
sti
retf
out
aas
jae
xor
and
add
popa
loop
(bad)
sub
out
pop
shr
lock
and
clc
jbe
add
pop
ret
lods
in
mov
cwde
inc
adc
in
push
dec
not
cld
lock
ins
xor
jae
xor
fisttp
xchg
rol
add
(bad)
mov
outs
jmp
push
pop
clc
fisttp
call
add
pop
adc
imul
or
jge
test
iret
add
fistp
loop
dec
pop
sbb
push
retf
es
ret
(bad)
push
mov
cs
sbb
ja
push
jne
je
scas
(bad)
lock
repz
in
jns
push
jge
push
add
fisttp
sub
jecxz
cmp
test
and
mov
and
sbb
add
cmps
jmp
sub
add
xchg
scas
dec
push
repz
xor
add
sbb
mov
sub
cmp
repz
add
stos
cmp
add
adc
leave
ret
mov
je
(bad)
xchg
add
es
pop
mov
in
jmp
adc
add
(bad)
imul
repnz
cmc
inc
shl
cs
(bad)
jmp
js
jb
test
(bad)
div
out
je
jle
add
xchg
(bad)
pop
inc
add
in
add
psrld
ror
inc
push
mov
add
ds
xor
and
cmp
dec
repnz
and
call
cs
jmp
cmps
repz
jno
cmp
push
div
hlt
out
inc
repnz
push
in
jae
sbb
idiv
add
mov
pop
idiv
out
fdiv
adc
test
inc
dec
cdq
pop
fdiv
and
hlt
adc
stc
dec
cmp
mov
add
xor
and
retf
xchg
dec
jmp
inc
icebp
dec
jmp
add
jne
icebp
je
(bad)
xchg
in
add
mov
sbb
clc
mov
icebp
div
cmps
repz
inc
icebp
cmp
xchg
in
push
pop
or
jg
jmp
addr16
call
add
dec
imul
or
in
adc
(bad)
add
retf
test
inc
add
sub
add
jmp
jae
jbe
in
and
pop
or
loop
popf
jecxz
clc
sbb
add
push
imul
xchg
inc
pop
ror
lea
and
es
mov
sub
sub
or
jne
ins
jecxz
clc
jmp
adc
out
add
jnp
shl
push
and
std
mov
add
call
add
push
add
stos
je
out
add
xlat
push
add
push
stos
je
out
add
fs
je
xlat
push
add
pop
stos
jne
cmps
imul
out
test
xchg
push
add
sbb
or
xor
rol
add
dec
inc
and
jecxz
imul
lea
jnp
push
and
jne
dec
stos
add
mov
and
fwait
test
mov
in
(bad)
xchg
push
xor
stos
mov
leave
jg
not
ja
push
sbb
call
sub
bound
add
outs
inc
add
push
sub
xor
(bad)
pop
ret
popf
out
push
mov
mov
enter
data16
or
pop
xor
add
jns
jne
and
test
jmp
adc
adc
jne
and
xor
adc
ja
sub
and
ja
add
add
cmp
mov
repz
int3
mov
jne
dec
sbb
data16
les
ror
imul
dec
and
popf
daa
int3
add
mov
punpckhbw
add
arpl
push
jg
add
jp
inc
mov
call
sbb
inc
or
lods
pop
mov
push
cmp
add
pop
jnp
push
push
push
leave
push
and
push
sub
mov
scas
sub
pcmpgtd
push
gs
cmp
retf
cmp
and
add
inc
(bad)
sbb
xor
jmp
mov
jmp
jnp
dec
cmps
js
add
push
adc
test
add
pop
and
inc
out
jne
inc
mov
rcr
scas
jnp
mov
out
and
js
push
cmp
add
xor
inc
cmps
daa
or
sbb
push
lock
lea
jle
dec
rol
shl
inc
add
pop
daa
dec
cld
and
mov
mov
add
scas
add
or
es
mov
xchg
inc
adc
pop
or
cs
out
gs
mov
mov
mov
cmps
or
es
or
inc
or
call
mov
add
inc
call
mov
div
push
jo
jecxz
cld
push
mov
jge
inc
xor
add
ficomp
add
les
jmp
cld
adc
inc
hlt
xchg
leave
jo
adc
dec
or
in
enter
push
mov
jp
jne
pop
dec
in
dec
cdq
sbb
add
mov
fmul
mov
and
cmp
sub
sbb
idiv
jmp
jmp
cmp
adc
cdq
and
jo
xchg
jmp
add
mov
iret
adc
mov
or
int
in
push
pushf
mov
jge
pop
jbe
add
xchg
xchg
lods
add
lods
add
pop
inc
in
jbe
scas
ret
sub
push
call
pop
pop
in
sbb
enter
pop
mov
mov
loopne
pop
in
jae
dec
mov
jmp
sub
sub
sahf
lods
jecxz
push
push
and
and
adc
(bad)
mov
add
add
movs
test
add
push
and
rcl
add
data16
repz
mov
add
inc
xor
sbb
jae
xor
push
je
in
inc
adc
stos
add
std
or
add
inc
add
dec
xor
and
cmp
fld
pop
mov
mov
loope
call
xchg
idiv
add
xchg
push
sub
mov
adc
push
fs
shr
jp
ds
xlat
cmps
add
mov
sbb
push
sbb
loopne
outs
add
inc
and
dec
xlat
sbb
imul
mov
jp
push
push
jp
ss
jne
popf
ins
sbb
mov
xchg
aad
add
cmps
cmp
gs
(bad)
ds
mov
push
pop
scas
repz
sti
fcomp
cld
mov
push
idiv
adc
add
es
sub
add
fisttp
test
mov
outs
es
inc
inc
sbb
jmp
push
mov
je
xor
and
test
fwait
test
pop
xchg
out
mov
inc
inc
mov
je
cmp
imul
cli
jae
ds
cld
xchg
(bad)
clc
add
scas
add
pusha
jo
cmp
dec
test
shl
and
add
inc
hlt
push
shl
aad
push
pop
loopne
mov
in
in
dec
call
mov
mov
jne
pop
or
sub
mov
pop
mov
pop
add
cdq
std
jmp
xor
adc
repnz
int3
repnz
int3
adc
retf
int3
adc
retf
int3
jnp
in
push
push
mov
jne
popf
ret
or
adc
xor
add
je
fsubr
jae
push
out
add
add
adc
xor
or
imul
movs
in
xor
or
shl
outs
or
je
xchg
jmp
jmp
push
leave
and
push
jnp
xchg
ss
or
dec
or
fld
push
cmp
int
dec
and
scas
add
add
scas
sub
out
adc
je
mov
push
cmp
retf
jmp
frstpm(287
out
cmp
jne
es
add
pop
sub
outs
mov
(bad)
(bad)
mov
stos
cld
lods
mov
add
js
jne
xor
aam
lea
inc
data16
dec
addr16
rcr
add
add
add
dec
pop
add
test
iret
lock
cs
xor
test
rcl
xor
push
fisttp
adc
add
ret
dec
out
rcr
test
dec
lods
jnp
imul
fisubr
clc
aad
jmp
lock
and
add
mov
out
lods
add
jo
cmp
add
sar
int3
inc
xor
push
xor
aas
mov
xor
fwait
mov
or
jge
leave
je
cs
xor
aaa
adc
cs
in
jb
test
or
add
jne
push
add
fidiv
adc
outs
jo
mov
inc
jnp
xchg
(bad)
and
xor
clc
add
scas
bound
out
das
jl
xchg
ret
xor
mov
je
ins
mov
mov
adc
add
das
mov
jge
or
scas
add
dec
in
(bad)
xor
lock
add
or
mov
ficomp
adc
jmp
add
es
jns
jbe
retf
jnp
pop
lods
jnp
fisubr
ret
dec
inc
cld
xchg
cld
test
std
or
cmps
das
ret
xor
hlt
mov
xor
lock
lds
inc
mov
jge
mov
ret
lock
scas
shl
cs
call
idiv
je
mul
add
add
add
fistp
add
and
inc
lea
add
ficomp
adc
xchg
add
hlt
mov
push
cmp
add
jns
retf
cmp
je
pop
test
sahf
pop
test
add
adc
inc
retf
xor
jl
mov
jne
cmps
cs
add
ds
in
hlt
cwde
push
jns
shl
sar
xor
pop
push
stos
cmp
jnp
push
je
gs
stos
sub
dec
in
cmp
hlt
sub
test
add
xchg
(bad)
loop
xor
and
xor
and
mov
add
mov
mov
add
pop
pop
dec
je
arpl
test
pop
mov
cmc
cmp
adc
aas
mov
xchg
dec
(bad)
fild
push
and
or
pop
sti
jl
mov
test
lea
rol
and
or
cmps
add
aad
pop
add
rol
push
lods
and
jg
inc
sub
cmp
jnp
sti
adc
retf
mov
jmp
out
cld
test
sbb
sub
adc
retf
or
je
pop
cli
xor
add
add
add
or
sahf
test
retf
mov
stos
lea
jb
into
(bad)
fnstcw
in
inc
add
retw
pop
sub
jge
mov
jmp
cmp
add
cmp
jbe
lss
add
stc
mov
stos
std
cs
loopne
add
scas
add
xor
sti
rcr
clc
fld
ficomp
(bad)
scas
cmp
jnp
xchg
mov
jnp
mov
cmc
inc
cld
(bad)
scas
add
outs
data16
test
pop
popf
loopne
inc
dec
es
rol
dec
cld
pop
(bad)
hlt
mov
dec
test
add
add
add
xor
and
fiadd
out
cs
call
inc
mov
je
inc
es
add
jmp
out
cli
sbb
out
or
(bad)
ret
shl
xchg
add
push
idiv
xchg
sar
xlat
sbb
mov
rol
or
sub
pop
data16
cmp
jnp
ss
jnp
sbb
jnp
and
inc
cld
inc
scas
add
aas
gs
test
ror
into
lahf
ins
lock
mov
add
jl
inc
xchg
ins
ins
cld
sar
push
inc
or
or
pop
mov
xchg
fld
and
pop
mov
push
xor
mov
jnp
sub
dec
adc
rcr
xor
jo
pop
scas
out
cmp
addr16
xor
cmc
adc
out
add
push
sub
cmp
push
das
stc
inc
sub
or
push
in
je
mov
add
add
(bad)
ror
jno
leave
movs
xchg
push
ins
dec
jnp
jb
inc
or
jns
or
test
xor
dec
in
sbb
dec
or
scas
add
dec
idiv
lods
sub
xlat
dec
adc
mov
cmp
stos
or
(bad)
cmp
jmp
jne
cmps
cs
add
xchg
es
mov
stos
mov
add
es
lea
jg
aam
xchg
inc
out
lea
test
cdq
push
dec
pop
add
and
test
lock
aaa
jns
fsubr
loopne
jle
test
add
pop
xor
and
out
fisttp
xchg
jg
add
add
ret
dec
out
rcr
pop
test
cmp
dec
add
imul
(bad)
jmp
cmp
jl
pop
and
cmps
mov
out
stos
add
push
dec
cmp
add
mov
inc
lea
pop
dec
xor
cmp
cmp
add
fistp
jmp
sub
je
daa
gs
cmps
test
jle
lea
mov
paddsw
daa
test
stos
mov
add
adc
adc
out
lds
mov
xlat
fbld
pop
jg
hlt
xchg
es
add
add
jl
neg
ret
mov
jae
addr16
imul
dec
fisttp
push
test
cmp
test
or
cmps
add
int
push
(bad)
shl
lock
out
or
aad
movs
pop
daa
ficomp
xchg
out
mov
test
fwait
mov
inc
je
gs
mov
outs
mov
iret
and
ror
inc
cld
xchg
cld
test
gs
loopne
add
dec
cmps
jp
rol
jnp
cld
sbb
jp
lock
dec
test
ja
hlt
ret
lock
mov
out
or
fxch
cmp
add
sbb
add
xor
add
jecxz
out
or
and
mov
lea
add
xor
pop
gs
jns
xor
inc
sbb
push
push
cmp
add
pop
test
ja
lock
mov
add
movs
cmp
rol
retf
jmp
xor
mov
or
xor
add
inc
jecxz
ins
out
cwde
push
sbb
in
sar
ficomp
(bad)
scas
cmp
jnp
xchg
gs
scas
sub
int
cmp
test
xor
and
xor
aad
mov
add
cmp
jmp
je
add
mov
test
int
lea
add
cmp
add
add
push
aas
mov
ja
dec
psllw
inc
and
lea
gs
sti
jl
xchg
sti
pop
jae
test
lea
sub
xchg
push
or
js
cdq
push
dec
pop
add
ror
add
add
pop
push
cmp
cmp
cli
adc
or
sbb
call
push
cld
sub
sbb
pop
popf
inc
ja
mov
shufps
pop
or
jae
scas
inc
jmp
jns
push
scas
mov
ror
mov
lods
lea
fs
jge
jnp
add
ins
add
add
(bad)
mov
jmp
mov
pop
xchg
lods
add
ret
mov
inc
cmps
jbe
push
les
add
xchg
cld
mov
stos
std
sub
loopne
lods
add
inc
mov
rcr
sar
sub
pop
push
lods
cmp
jnp
push
ins
jnp
add
stos
mov
gs
jnp
xchg
jbe
sar
cmp
jbe
add
outs
push
pop
or
popf
loopne
inc
dec
xchg
jbe
rcl
(bad)
hlt
mov
pop
test
jae
hlt
and
xor
scas
shl
jg
call
(bad)
ror
mov
add
add
add
jl
pop
mov
inc
push
jne
pop
xor
add
data16
add
lods
mov
or
jmp
xor
clc
fld
ficomp
(bad)
stos
cmp
jnp
inc
outs
jnp
mov
into
popa
jne
rol
add
stos
add
iret
data16
test
inc
sbb
divps
mov
aas
out
mov
sub
daa
jge
in
pop
cld
ror
inc
or
int3
or
iret
int3
hlt
jl
daa
lock
repnz
rcr
dec
fnsave
shl
mov
xchg
loopne
movs
jnp
mov
dec
add
xchg
dec
add
mov
fbstp
cmps
imul
or
je
add
inc
es
in
mov
adc
push
push
add
(bad)
sub
fstp
stos
add
cs
inc
sub
push
in
mov
add
fstp
mov
push
leave
adc
inc
jnp
xchg
nop
inc
adc
add
iret
gs
mov
mov
neg
popf
ds
mov
inc
mov
jge
lahf
ins
mov
jmp
mov
mov
mov
ins
xchg
cmp
or
sub
mov
mov
add
jle
(bad)
inc
jmp
add
add
add
add
jmp
xchg
es
cmp
or
pop
popf
or
popf
add
jae
sti
inc
dec
inc
stos
xor
stos
cmp
xor
mov
imul
fisubr
jmp
ja
ret
sti
pop
pop
inc
fisttp
lea
mov
or
pop
jmp
sahf
mov
push
inc
and
mov
dec
je
sub
add
sub
into
jge
bound
out
in
mov
mov
and
cdq
mov
xor
xor
fwait
test
dec
test
test
outs
and
mov
push
add
mov
and
sub
mov
cmpxchg
(bad)
inc
add
aam
jle
aam
cmpxchg
(bad)
call
aam
setno
add
out
(bad)
jmp
idiv
mov
fistp
ficomp
mov
or
or
scas
or
scas
pop
test
dec
idiv
int3
call
idiv
or
test
add
xchg
test
ins
shl
jg
add
mov
mov
and
fisubr
inc
mov
scas
cmp
in
fimul
lods
and
int3
test
idiv
bound
outs
mov
outs
test
leave
idiv
inc
cs
(bad)
and
outs
xchg
movs
jne
inc
(bad)
(bad)
repz
add
aad
je
inc
sbb
xchg
aad
add
add
jae
adc
int3
out
xchg
jmp
scas
cmp
aad
in
fld
mov
test
push
sub
inc
adc
dec
jo
call
sbb
lods
mov
cs
ja
les
jmp
xor
or
outs
and
je
movs
inc
sti
push
fwait
xlat
cmc
jmp
add
jmp
cwde
dec
stos
pop
jmp
mov
adc
mov
(bad)
jecxz
dec
lods
cmp
gs
ds
sub
jg
xlat
sub
xor
lods
push
jnp
jbe
je
popa
push
rol
and
inc
dec
call
add
push
inc
mov
add
mov
inc
push
adc
and
adc
(bad)
and
punpckhbw
sti
jmp
inc
pop
push
mov
cmp
pop
test
idiv
cmp
faddp
jmp
or
leave
or
push
lock
repnz
cmp
or
add
and
add
and
cmp
and
and
add
sar
jmp
adc
dec
stos
adc
popa
sub
add
mov
inc
loopne
inc
or
inc
add
int3
sbb
push
outs
(bad)
cli
imul
mov
inc
sbb
mov
jne
add
add
sbb
mov
xchg
movs
stos
add
mov
add
imul
inc
repnz
mov
jmp
or
and
es
jne
fdivr
cmp
cmps
add
std
lods
or
int3
mov
sar
ret
shr
pop
(bad)
test
push
mov
add
movs
sti
shr
add
add
cmps
push
pop
push
lea
mov
(bad)
repz
pop
mov
mov
mov
fstp
mov
and
sbb
push
idiv
stos
sub
test
sbb
out
add
add
mov
test
scas
sar
mov
jmp
int3
xor
push
daa
sbb
push
stos
mov
popa
stos
add
cmp
xchg
add
loopne
aaa
add
int3
xor
fldenv
mov
cs
xor
repz
sbb
idiv
popa
xchg
jne
iret
pushf
enter
jae
add
sub
inc
into
jg
add
cmps
retf
xor
sub
cmp
call
jne
pop
add
inc
or
jne
cmp
fistp
lds
add
out
out
inc
test
mov
add
pop
sti
mov
ffreep
dec
(bad)
(bad)
mov
inc
fidiv
inc
mov
add
add
add
pop
lods
mov
mov
mov
add
mov
mov
ror
or
jb
or
jae
in
inc
mov
mov
add
mov
test
adc
jae
add
add
ins
aas
call
xor
lds
add
test
add
nop
inc
js
cmp
lods
stos
aam
mov
mov
mov
mov
mov
test
outs
stos
fsub
and
mov
das
mov
sub
jge
sbb
jl
add
mov
add
jge
add
or
and
out
ds
inc
aam
adc
sar
mov
dec
ffreep
fmul
pop
mov
jnp
jmp
mov
retf
cmp
mov
and
xchg
dec
add
gs
into
jmp
fdivr
mov
jne
gs
add
add
test
jo
jmp
ins
(bad)
inc
lea
jecxz
xchg
ins
shr
movs
inc
inc
(bad)
fiadd
add
into
sub
xchg
clc
pop
cmp
mov
rcr
les
adc
add
add
lahf
jne
jmp
enter
mov
nop
js
inc
les
add
add
inc
retf
push
into
cmp
sub
cmovp
jp
scas
scas
dec
and
fld
gs
(bad)
cmp
and
sub
std
add
dec
push
jne
sbb
loopne
das
fldcw
add
pusha
(bad)
lock
cld
mov
add
add
inc
(bad)
fwait
pop
cli
call
jecxz
sbb
add
(bad)
mov
mov
xor
mov
js
aas
or
scas
mov
xor
sub
sbb
inc
leave
ret
outs
cmp
pop
cmp
(bad)
inc
(bad)
int3
xor
cmps
(bad)
xor
pop
xor
jnp
inc
add
xchg
mov
inc
cmps
cmp
inc
cmps
mov
xor
out
inc
xor
fst
jnp
stos
dec
inc
adc
fbld
sbb
mov
jne
sar
movs
mov
or
lods
add
int
add
pop
mov
pop
cmps
ror
test
retf
cmps
retf
int3
add
cwde
cmps
aam
cwde
cmps
aad
test
into
int3
cwde
cmps
iret
int3
cwde
cmps
fmul
cwde
cmps
fxch
push
cmps
sar
pop
cmps
mov
xchg
stos
add
pop
mov
sub
add
mov
jne
fild
sub
cmp
push
and
push
stos
xchg
shl
and
sub
pusha
mov
add
outs
sti
add
outs
add
sahf
sahf
add
push
push
stos
add
enter
pop
pop
add
(bad)
(bad)
mov
mov
stos
add
pop
cmp
repz
jmp
out
jmp
sub
cmp
add
cmp
cs
inc
add
inc
or
test
sub
jmp
push
call
sbb
sub
stos
jmp
mov
std
mov
hlt
cmp
sbb
push
xchg
outs
add
clc
cdq
call
sbb
jae
clc
mov
(bad)
cld
mov
add
repz
test
mov
add
leave
leave
adc
test
add
call
or
mov
psubsw
sub
popa
jle
data16
add
adc
xchg
mov
push
fimul
mov
ror
call
add
add
add
add
mov
mov
pop
adc
(bad)
addr16
pushf
pop
adc
test
add
gs
pushf
push
pop
and
(bad)
repnz
pop
test
stos
add
std
daa
or
repz
add
movs
mov
add
test
lea
cmc
movs
movs
jecxz
les
fwait
jge
mov
jecxz
leave
fbld
jae
mov
dec
clc
int
loop
adc
out
cmp
addr16
pusha
cmp
enter
xor
adc
add
enter
gs
call
xchg
xor
shr
fwait
add
scas
mov
popa
mov
data16
add
push
jge
add
loopne
imul
mov
sbb
jne
inc
retf
add
clc
enter
out
inc
ds
inc
les
adc
loopne
pop
add
jmp
mov
shl
ins
out
inc
cs
jmp
(bad)
or
push
stos
jne
iret
(bad)
outs
mov
les
inc
cmps
mov
add
addr16
test
movs
rol
add
pop
jbe
xor
loopne
jmp
mov
inc
xchg
sar
mov
push
pop
mov
addr16
cld
mov
dec
add
and
xor
aad
mov
add
jge
push
popa
ds
call
xchg
push
das
ins
cwde
push
xor
movs
mov
add
ret
call
test
mov
sbb
test
shl
in
inc
dec
scas
add
push
lds
dec
xchg
sbb
pop
push
sti
mov
xchg
popa
inc
hlt
sbb
sar
mov
mov
jne
sbb
ja
cmp
idiv
cs
data16
(bad)
jge
in
jmp
push
cmp
addr16
or
jne
popf
cwde
hlt
shl
xor
out
cmps
dec
lock
pop
sar
out
dec
(bad)
mov
jne
(bad)
fisttp
mov
mov
mov
and
add
daa
xor
and
jmp
lods
jnp
mov
jne
adc
xor
add
cmp
mov
gs
addr16
dec
loop
jmp
addr16
jmp
xor
fidiv
ja
mov
clc
push
mov
shl
pop
cmp
mov
loopne
ror
xchg
or
add
sub
jg
lahf
call
packssdw
dec
call
popa
icebp
cli
dec
ja
cmps
mov
retf
fwait
add
std
int3
mov
jnp
push
cmps
popa
push
hlt
setle
mov
pop
shl
pop
mov
add
test
xor
add
iret
xchg
movs
pop
cmp
loope
jns
and
add
sbb
adc
add
mov
lea
lock
mov
lea
outs
dec
in
mov
pusha
inc
loopne
lock
jmp
mov
mov
sbb
or
out
popa
jge
jg
idiv
add
mov
mov
jne
jecxz
rcr
add
mov
xor
xor
mov
enter
neg
mov
adc
in
xor
inc
loopne
loope
mov
jmp
pop
sbb
fdivr
inc
fcom
idiv
jecxz
inc
mov
pop
test
add
xor
call
test
and
mov
add
movs
rol
popa
dec
lods
sbb
jbe
and
lea
or
lods
adc
or
adc
push
and
or
push
dec
or
sbb
add
popa
and
inc
add
add
add
jae
cli
aas
es
lods
movs
mov
add
icebp
ds
mov
icebp
jp
cmps
mov
cdq
push
out
stc
mov
cwde
cmps
das
mov
sub
inc
push
dec
lock
lock
rol
mov
das
pushf
hlt
sar
loope
mov
add
pop
out
jg
mov
add
add
add
add
movs
add
enter
movs
pop
mov
rcl
inc
push
scas
je
add
cmp
push
hlt
test
iret
out
or
out
fstp
mov
add
push
push
jge
outs
mov
inc
mov
(bad)
repz
add
dec
sbb
jecxz
outs
adc
add
and
stc
add
scas
add
xor
mov
aas
add
bound
not
idiv
push
scas
pop
cmp
pop
inc
cli
cwde
ss
data16
bnd
xor
idiv
scas
test
scas
pop
cmp
inc
pop
ins
movs
mov
cmp
xchg
add
cmps
pop
inc
loopne
xor
add
scas
add
pop
dec
call
sbb
mov
push
inc
hlt
pop
ins
fimul
js
mov
ss
xor
test
xchg
dec
rol
mov
add
lods
add
ss
mov
sub
addr16
push
mov
add
arpl
pusha
mov
sub
xor
cli
mov
add
js
inc
nop
pop
ins
sti
add
pop
sar
cli
or
pop
cmp
cwde
ins
add
cwde
ins
add
jmp
scas
bound
addr16
adc
xchg
(bad)
mov
(bad)
jmp
or
cmps
lods
add
mov
pop
in
mov
shr
scas
ror
push
push
inc
call
xlat
mov
pop
cli
push
inc
call
xchg
sti
in
fisub
lods
jbe
lods
cwde
call
dec
cli
sbb
call
lods
(bad)
ror
loope
call
pop
cmp
imul
fadd
add
call
xchg
push
inc
mov
icebp
push
mov
add
sub
cmp
les
js
sar
adc
loopne
ss
lea
add
in
xchg
mov
jmp
pop
gs
add
fucomp
mov
jmp
pop
shl
or
jnp
shr
aad
mov
add
xchg
lock
cmp
add
mov
sub
pop
pop
push
gs
jae
cld
int3
inc
ins
cmp
shr
stos
inc
mov
adc
adc
push
push
mov
fstp
imul
lods
dec
int3
addr16
add
les
xchg
mov
scas
mov
xor
pop
pop
mov
xchg
sub
add
aad
mov
(bad)
faddp
fwait
inc
add
shl
cmc
jmp
out
add
xor
ror
pop
(bad)
and
jno
repnz
in
cmp
push
add
(bad)
inc
scas
and
push
inc
sti
push
pusha
data16
fs
add
stos
add
dec
cld
add
sub
in
inc
xor
sub
ret
add
push
xchg
xor
out
fst
xchg
fnstenv
lahf
retf
mov
add
hlt
mov
xchg
scas
add
retf
jo
retf
or
push
push
add
sbb
add
(bad)
cmp
inc
lahf
shl
mov
mov
enter
add
scas
jnp
push
push
mov
enter
add
add
add
add
push
mov
enter
add
mov
enter
mov
aad
add
pop
hlt
mov
je
xor
add
xchg
(bad)
je
xchg
ret
cmps
add
test
or
inc
add
add
bound
dec
mov
add
add
add
std
stos
add
pusha
push
mov
je
movs
add
es
xor
push
mov
adc
add
div
not
out
ret
add
push
mov
out
ret
add
popa
test
mov
je
mov
int3
out
inc
data16
into
retf
iret
stos
mov
retf
stos
mov
or
jmp
mov
jecxz
and
add
push
test
push
or
add
adc
add
mov
add
add
mov
mov
in
add
push
inc
adc
or
xchg
fst
pop
sbb
retf
scas
je
or
push
mul
je
and
mov
add
and
addr16
cmc
adc
addr16
and
add
dec
scas
pop
mov
daa
sar
imul
add
scas
je
add
jecxz
or
push
fild
cmp
or
mov
test
inc
out
(bad)
je
sub
add
scas
add
sub
add
sub
add
test
add
xchg
daa
jge
or
pop
shl
and
(bad)
or
and
jge
pop
test
add
scas
add
fnsave
or
push
test
adc
cld
lods
jno
cld
lods
int
xor
mov
adc
add
scas
jnp
push
pop
mov
retf
mov
retf
mov
retf
mov
retf
or
mov
(bad)
mov
add
add
lods
or
cmps
fld
cmp
fst
or
inc
push
sbb
inc
data16
add
add
stc
add
jne
sub
add
lods
add
sbb
add
scas
add
in
adc
fld
or
or
imul
(bad)
cwde
in
aas
add
sbb
add
addr16
pop
add
lods
mov
mov
inc
lock
add
mov
add
sub
add
lods
je
adc
movs
add
fisubr
add
push
lods
je
aad
add
mov
or
int
mov
xchg
fst
and
jmp
push
or
xlat
adc
out
push
adc
lods
add
out
inc
and
sbb
push
inc
inc
je
jle
jg
stos
je
and
sub
add
sub
add
sub
add
add
in
add
add
into
or
(bad)
into
jne
and
add
mov
xchg
inc
xchg
rol
pop
(bad)
hlt
out
mov
sub
stos
pusha
jns
jl
push
not
cli
call
mov
out
shl
cli
jmp
test
retf
rol
stos
add
ret
push
(bad)
stos
je
and
test
je
pop
pop
add
sahf
stos
add
addr16
arpl
adc
retf
ret
stos
mov
retf
add
cmp
test
add
cmps
add
xor
fstp
cmp
mov
jae
cmps
pusha
add
es
xchg
pusha
add
push
cmps
jecxz
addr16
add
out
add
bound
dec
rcr
pop
add
test
add
push
repz
pop
pop
addr16
push
in
adc
dec
lock
out
(bad)
mov
imul
ss
pusha
or
adc
inc
jnp
adc
and
sbb
imul
jne
inc
jne
add
cmp
je
popf
hlt
repnz
rcl
stc
dec
mov
mov
push
mov
mov
fs
cli
ret
sbb
(bad)
fiadd
add
xor
(bad)
sub
js
pusha
and
mov
clc
mov
inc
je
mov
into
pop
and
push
jnp
inc
inc
jne
jecxz
jmp
ret
push
jmp
sub
std
mov
jne
add
or
sub
add
lods
or
popa
jo
ja
mov
sub
add
sbb
mov
cmp
add
ins
inc
call
pop
or
mov
out
(bad)
jmp
lods
xor
(bad)
jmp
pop
pop
lea
mov
xor
push
pop
add
mov
mov
xor
int3
out
popf
addr16
add
mov
shl
add
popf
in
add
xor
push
pop
dec
or
inc
imul
in
out
out
add
ins
cmp
cmp
push
je
push
mov
add
in
cmp
sbb
aas
mov
mov
dec
call
xor
fnstenv
add
shl
jg
inc
out
out
test
(bad)
(bad)
cmps
mov
dec
or
int
add
jo
pop
mov
adc
cld
ss
or
xor
add
inc
cmp
mov
leave
xchg
mov
adc
adc
adc
xor
adc
mov
add
cs
add
cmps
cmp
je
xor
add
pop
xor
and
jnp
cmps
mov
xchg
dec
retf
in
xchg
inc
dec
or
or
add
add
(bad)
call
jg
jmp
ss
add
pop
shr
xor
or
dec
adc
adc
adc
lods
mov
xor
cmp
add
mov
aad
mov
add
inc
pop
or
jge
xor
inc
out
or
pop
shr
xor
(bad)
fiadd
add
xchg
jae
retf
dec
sub
mov
pop
mov
loope
xor
in
adc
leave
and
pop
inc
add
add
cmps
pop
aam
mov
and
add
mul
xchg
cmps
fs
mov
and
retf
xor
push
mov
xlat
add
retf
scas
aam
out
mov
cmp
(bad)
(bad)
add
ins
pop
add
jmp
xor
xchg
fsubp
fstp
add
xchg
add
leave
pop
ret
sub
jecxz
inc
push
fsubp
mov
fisttp
cmp
push
mov
imul
ret
in
hlt
add
xor
xor
push
fsubp
popf
pop
mov
push
popf
dec
cmp
mov
sub
pop
ret
lods
hlt
add
repz
inc
(bad)
fucom
jge
add
mov
mov
pop
cli
inc
push
jecxz
add
stos
sti
inc
jmp
pop
push
dec
ds
xchg
hlt
dec
add
jmp
aas
loope
rol
(bad)
fsubr
inc
add
hlt
ds
sub
out
ds
out
push
call
fdivr
mov
mov
add
add
add
add
stos
mov
je
adc
test
inc
or
adc
pop
movs
ret
pop
push
push
add
cwde
ds
out
push
cmp
dec
mov
test
inc
add
retf
push
adc
test
neg
add
imul
cmp
xor
out
inc
inc
adc
retf
push
lds
jp
mov
ds
mov
rol
clc
push
out
(bad)
mov
push
not
popf
in
neg
jmp
jbe
out
inc
clc
or
push
ja
fnsave
add
mov
cmp
mov
adc
and
fist
xchg
sub
(bad)
ja
pop
mov
cli
jmp
xchg
add
mov
push
shr
not
jmp
xor
idiv
rcr
sub
pop
test
mov
inc
add
out
cmc
std
inc
cmp
mov
mov
lods
mov
jo
addr16
std
popa
cmp
push
ret
jmp
in
push
aaa
dec
xor
inc
inc
or
jo
adc
xchg
sub
cld
inc
ins
inc
cld
test
add
add
inc
push
or
pop
jne
fucomip
or
and
repz
inc
add
push
cmp
push
shl
out
pop
test
mov
inc
push
addr16
mov
in
add
push
push
push
inc
movs
mov
sbb
push
mov
imul
cmps
sub
inc
or
lds
mov
cld
(bad)
xchg
ret
mov
sahf
cmp
sbb
add
das
loope
inc
fprem1
adc
mov
inc
in
push
gs
sbb
mov
div
push
jne
jne
dec
dec
fisttp
sub
cmc
adc
std
call
add
lds
(bad)
(bad)
jne
add
gs
std
xchg
push
pop
push
add
mov
cmp
dec
call
out
fisttp
fnstcw
(bad)
(bad)
cmc
jne
push
adc
pop
inc
ins
push
mov
mov
int3
xchg
sbb
je
fimul
fwait
movs
div
push
jne
test
cmc
jne
push
adc
jmp
push
push
test
adc
add
cmp
cmc
jne
gs
cld
push
push
pop
push
xor
push
pop
push
add
push
pop
push
mov
xor
inc
(bad)
cmc
pop
ret
cld
stos
not
push
gs
mov
lods
not
inc
popa
jne
mov
inc
in
xor
dec
mov
xor
add
xor
cmp
inc
in
push
imul
add
pop
test
lea
fcomi
adc
mov
ficom
xchg
clc
rcr
stos
dec
push
cmp
inc
in
push
into
cmp
fadd
jmp
jge
pop
add
mov
add
add
add
add
add
mov
push
push
not
or
cdq
pusha
rcr
bound
sub
lea
arpl
adc
add
gs
mov
add
mov
test
add
es
bound
out
idiv
stos
imul
add
(bad)
xor
push
xor
add
add
add
sbb
or
xchg
sub
je
inc
inc
or
arpl
push
dec
call
fwait
div
push
jne
sbb
cmp
xchg
add
stos
dec
(bad)
fistp
jne
inc
pop
jmp
lea
popf
call
test
into
lea
add
dec
mov
push
test
mov
test
idiv
fidivr
not
pop
push
je
pop
imul
mov
pop
inc
add
lea
(bad)
jp
push
test
cs
idiv
sbb
test
sub
not
xchg
jno
adc
int
call
bound
out
pop
xor
jnp
in
cmp
lea
loope
xor
mov
dec
call
lea
push
mov
loop
fcom
add
popf
pop
xor
add
mov
lea
loopne
inc
mov
les
mov
mov
in
adc
mov
push
test
mov
push
mov
dec
idiv
int
or
fwait
test
inc
adc
out
ds
outs
inc
jne
add
popf
dec
call
pop
mov
pop
ins
cli
inc
inc
pop
jmp
lods
mov
push
inc
cli
xchg
inc
mov
mov
pop
dec
add
(bad)
jmp
mov
cmp
adc
outs
and
or
ret
add
push
push
mov
push
mov
cmp
inc
popf
add
call
mov
add
xchg
dec
in
fucomip
adc
ret
test
inc
hlt
popf
popa
and
xchg
shr
mov
dec
inc
cwde
push
adc
loope
dec
sahf
xchg
dec
sbb
aas
add
dec
adc
in
jmp
jmp
mov
scas
push
push
push
outs
adc
sahf
dec
push
add
mov
mov
jbe
push
jne
mov
mov
jle
cmp
test
mov
sbb
fwait
mov
sti
adc
and
and
(bad)
cld
jbe
adc
mov
dec
call
jl
dec
mov
push
icebp
stc
mov
out
ret
push
mov
add
in
(bad)
xor
lods
add
mov
pop
fcomp
in
jmp
cmp
sub
sar
push
cmp
mov
mov
inc
ds
inc
or
clc
out
fwait
jne
mov
bound
xor
clc
and
or
xchg
add
test
je
jle
data16
jne
jle
add
inc
adc
jns
adc
mov
repnz
add
add
jae
or
(bad)
(bad)
mov
aam
add
cld
(bad)
xchg
ss
push
retf
call
(bad)
xchg
jge
pop
int
je
(bad)
jecxz
gs
push
add
fucomip
imul
xchg
idiv
push
add
mov
inc
adc
cmps
lods
add
lods
or
repz
ss
mov
add
enter
pushf
not
(bad)
mov
add
mov
(bad)
sbb
xor
sbb
jne
push
jmp
pusha
push
test
in
jecxz
das
stc
push
mov
movs
jnp
stos
push
mov
xor
paddsb
mov
dec
mov
adc
xor
stos
mov
rol
cli
dec
int3
inc
push
sti
add
jmp
push
retf
inc
push
xor
cmp
pop
int3
int3
add
push
pop
int3
int3
push
pop
push
mov
icebp
add
xlat
aad
adc
cmp
adc
xor
adc
cmp
stos
dec
xor
hlt
push
push
hlt
fs
stos
add
leavew
push
je
mov
adc
add
enter
hlt
mov
add
add
add
push
mov
not
popf
in
pop
fild
mov
push
add
add
mov
or
pop
ret
fld
inc
add
adc
sbb
ds
aam
adc
cmp
scas
push
dec
xor
shl
cli
mov
sbb
or
ss
add
pushf
rcr
sub
cwde
test
or
add
imul
out
mov
(bad)
mov
inc
es
je
push
add
add
mov
ds
enter
add
mov
(bad)
mov
or
mov
aad
dec
test
je
data16
ret
aam
pop
ret
inc
xor
xchg
imul
test
not
sub
rcl
jne
and
not
sbb
shl
push
add
lods
inc
add
cmp
sub
data16
mov
in
(bad)
cmc
xor
jl
add
jne
adc
or
and
clc
and
cmp
int3
jb
or
cmc
adc
cld
scas
div
dec
jne
sub
div
push
jne
push
aad
inc
add
das
clc
jmp
popa
neg
outs
push
mov
stc
dec
mov
test
test
es
add
cs
adc
dec
mov
scas
test
adc
mov
out
dec
mov
sbb
dec
push
push
jne
pop
in
idiv
mov
cmc
jne
add
in
xor
jnp
xchg
scas
dec
call
push
call
pop
or
(bad)
cmc
jne
sti
add
repnz
and
jne
adc
dec
call
in
in
aaa
adc
push
mov
call
pop
xchg
fwait
fwait
lock
cli
dec
mov
add
mov
shl
jne
inc
mov
rcr
scas
dec
call
mov
scas
call
pop
pop
lods
lock
lods
pop
xor
add
add
out
push
leave
gs
add
add
mov
add
adc
jmp
imul
add
pop
xchg
xor
push
push
and
add
test
(bad)
mov
add
imul
push
(bad)
xor
lods
mov
inc
(bad)
inc
push
sbb
movs
and
in
add
outs
jbe
call
lods
add
push
not
sbb
and
lods
add
cmps
stc
dec
inc
add
daa
shl
push
mov
not
inc
mov
rcr
jb
jmp
push
fisub
push
add
push
pop
jo
mov
test
cmp
dec
cmp
lods
mov
cld
pop
lods
add
std
(bad)
sbb
xor
sahf
xchg
add
jbe
push
popf
add
xor
sub
or
ds
hlt
push
(bad)
stos
dec
cmp
cmps
stos
cmp
(bad)
(bad)
xor
and
cli
dec
mov
sub
xchg
or
stos
mov
xchg
out
loope
mov
icebp
stos
add
push
in
sub
push
in
xor
cli
push
add
mov
dec
hlt
aas
out
out
push
mov
inc
fild
add
stos
mov
out
add
push
mov
add
pop
inc
hlt
loope
dec
xor
pop
inc
clc
rcr
rdtsc
push
mov
or
(bad)
out
stc
sub
sbb
push
pop
repz
mov
inc
cld
out
and
add
in
arpl
stc
in
bound
add
mov
out
sti
push
bound
bswap
jmp
lods
arpl
stc
movs
in
repnz
ins
add
dec
mov
cmps
inc
push
xor
sti
in
test
sub
call
pop
dec
clc
shr
pop
in
pusha
mov
add
add
add
add
test
add
cmp
inc
dec
mov
ret
data16
add
mov
mov
icebp
call
(bad)
jmp
mov
adc
in
or
call
jp
out
addr16
pop
aad
ror
imul
adc
cmp
mov
xchg
add
push
mov
add
add
aas
loope
inc
out
fadd
jmp
in
mov
pop
icebp
je
sbb
mov
add
mov
ds
add
push
mov
mov
ror
cmc
jne
cmp
jmp
cmp
pusha
not
fs
add
add
call
sub
pop
sub
ret
fstp
mov
jne
cwde
stos
push
scas
mov
add
add
in
ins
cli
test
call
ja
cli
mov
aaa
adc
jne
inc
add
xchg
das
pop
ret
mov
cdq
cli
dec
mov
inc
lock
mov
(bad)
add
dec
push
sbb
(bad)
(bad)
sub
rol
shl
push
mov
jmp
sub
inc
push
push
fnstcw
mov
rcr
mov
popa
not
mov
fcom
jge
add
add
add
shr
add
add
out
inc
(bad)
stc
mov
in
scas
mov
add
adc
mov
add
test
cmp
mov
add
jmp
add
inc
popf
loop
call
mov
(bad)
idiv
and
mov
loopne
test
sahf
add
(bad)
inc
push
pop
add
push
ret
add
popf
jne
xor
adc
enter
in
push
mov
add
mov
out
xor
add
add
pop
inc
add
add
jne
cli
dec
mov
lock
sar
mov
into
add
inc
inc
out
add
dec
xor
push
mov
mov
add
ds
mov
icebp
add
mov
dec
push
xchg
adc
add
dec
retf
sub
je
mov
dec
jmp
add
adc
pop
add
ds
call
add
or
xchg
cwde
push
rcr
lods
cmc
jne
sub
jne
add
je
cli
push
jle
aam
add
and
data16
jmp
mov
in
sbb
ss
lea
add
add
cli
dec
adc
add
lods
sub
in
pop
jnp
cs
add
adc
addr16
push
js
out
push
mov
stos
add
loopne
inc
pop
pop
mov
add
xor
mov
das
inc
in
pop
div
jmp
add
cdq
addr16
scas
rol
fcomp
push
stc
fcomp
in
push
mov
jns
or
add
mov
push
add
add
push
gs
xchg
stc
and
cmp
add
adc
je
shl
mov
adc
jbe
push
stos
icebp
jae
mov
stos
sub
rcr
mov
cmc
xlat
push
jbe
or
add
scas
dec
push
mov
imul
cli
cmc
mov
sti
cmc
je
sub
cwde
mul
ret
add
shl
call
mov
test
inc
sub
xor
test
push
popf
push
jp
push
fs
jl
or
scas
add
sub
push
call
pop
jne
test
pop
ins
push
push
add
nop
sti
jns
scas
mov
ds
mov
mov
push
jle
aam
xor
inc
cld
imul
hlt
inc
mov
pop
mov
call
fucomi
je
aad
div
xchg
add
jno
(bad)
xor
mov
add
(bad)
and
inc
and
push
push
jg
(bad)
xchg
mov
hlt
pop
push
pop
inc
call
cmc
call
mov
cmc
push
ins
or
sub
aad
xchg
mov
bound
in
mov
loop
inc
(bad)
cmc
mov
mov
pushf
dec
hlt
cmc
cmovns
jnp
pop
jns
xchg
sbb
xlat
inc
pop
test
push
jb
add
and
and
push
and
jno
jbe
and
pusha
mov
mov
dec
not
or
(bad)
fidiv
ins
frstor
and
xor
pushf
jo
dec
jmp
sub
xchg
std
add
sar
sub
or
add
cmps
pop
mov
and
jbe
sbb
lahf
mov
or
ror
cs
mov
cdq
lods
add
push
packssdw
jnp
jge
pop
popf
jmp
ret
movs
jno
or
add
mov
jmp
mov
mov
gs
or
add
add
mov
jmp
das
stc
(bad)
jmp
shl
sub
push
cs
scas
jl
mov
stos
loope
and
movs
push
rcr
jns
push
jp
test
test
xor
outs
mov
mov
push
or
lock
daa
inc
add
scas
jns
add
sbb
add
push
scas
sub
jne
div
repz
push
test
add
cmps
push
push
leave
movs
mov
adc
mov
ins
add
in
mov
inc
sahf
pop
dec
push
xchg
test
jmp
xor
je
bnd
xchg
cdq
es
lods
add
out
add
add
jnp
outs
movs
ins
add
push
rol
not
add
push
jne
div
repnz
push
jbe
test
test
ret
mov
jns
inc
push
cs
ficomp
dec
add
jle
mov
test
(bad)
push
xchg
js
push
pop
dec
(bad)
jmp
cmc
adc
add
add
add
mov
jmp
idiv
retf
rcl
xchg
es
jmp
sub
lea
jle
mov
sti
mov
test
push
lods
push
dec
retf
inc
sub
pop
jle
mov
xchg
imul
inc
add
push
mov
pop
dec
push
lods
cld
add
stos
mov
push
scas
push
div
add
aaa
add
rol
jns
fisub
push
pop
adc
xor
test
inc
cmps
lods
push
push
jmp
icebp
jns
xchg
mov
(bad)
fadd
outs
cli
push
inc
hlt
adc
cli
mov
pop
or
sahf
push
dec
retf
inc
push
cmp
jmp
jg
push
add
and
mov
pop
push
mov
cmc
adc
mov
adc
add
cli
adc
cli
push
stos
jmp
mov
in
out
pop
xor
jnp
push
repz
ins
cli
adc
or
retf
mov
sahf
jecxz
and
repz
sbb
add
add
add
add
lock
and
add
div
and
popf
mov
call
jne
and
jmp
ror
cmp
add
mov
jne
push
div
add
aaa
sbb
call
push
mov
stos
dec
push
jg
(bad)
jmp
add
fiadd
bnd
mov
stos
mov
pop
div
add
xor
inc
mov
inc
sahf
mov
jg
xchg
hlt
add
xlat
dec
rol
mov
icebp
call
mov
icebp
fisttp
(bad)
ins
loopne
jmp
mov
div
out
lock
push
sar
add
add
sub
call
jmp
inc
shl
stc
cmp
push
out
jne
stc
inc
rol
cmc
jne
stc
rcl
out
pusha
xchg
(bad)
jmp
xor
and
jb
adc
hlt
cmc
(bad)
or
icebp
push
mov
add
clc
push
fiadd
add
lods
bound
outs
repnz
mov
clc
inc
fsubp
in
rcr
inc
add
repz
test
push
aas
in
ss
scas
add
push
sbb
jne
jns
push
xchg
js
je
mov
(bad)
ds
fdivr
mov
js
je
mov
mov
jle
(bad)
sbb
dec
je
scas
add
mov
jns
je
mov
(bad)
ds
(bad)
inc
sub
pop
je
mov
(bad)
ds
std
and
idiv
loope
data16
mov
(bad)
(bad)
cmp
std
add
idiv
xchg
jns
je
mov
(bad)
scas
push
fdivr
add
mov
pop
idiv
inc
jns
je
scas
add
xchg
sub
cvtps2pd
je
scas
add
sub
jmp
scas
add
mov
xchg
idiv
push
jbe
je
mov
(bad)
dec
popa
(bad)
and
idiv
and
je
add
movs
(bad)
adc
idiv
add
je
mov
(bad)
(bad)
mov
ror
loope
jmp
scas
add
inc
sub
idiv
xchg
jbe
je
scas
add
popa
jmp
sbb
loope
and
pop
in
xor
inc
mov
add
inc
cld
test
es
mov
mov
jmp
repz
ins
cli
mov
int
mov
inc
dec
pop
cli
xor
jae
(bad)
jmp
xor
push
repnz
mov
rcr
lods
call
push
arpl
call
dec
sbb
not
add
add
add
fild
jo
adc
fimul
and
push
push
pusha
(bad)
push
sub
cmp
cmc
pop
inc
fadd
add
dec
inc
add
sub
and
int
int3
lods
mov
hlt
outs
scas
and
loope
mov
in
xor
dec
inc
adc
scas
push
test
add
add
add
lods
dec
mov
(bad)
adc
lea
pop
fs
ss
adc
pop
cli
test
jmp
lea
push
hlt
inc
mov
icebp
or
push
loop
xchg
cmc
leave
gs
sub
sub
cld
xchg
jne
mov
jmp
clc
inc
push
add
add
mov
mov
or
pop
popf
jecxz
leave
in
push
add
stos
mov
out
(bad)
idiv
popf
loopne
dec
jmp
inc
jmp
or
test
xchg
jmp
pop
add
jmp
add
cmps
sub
add
add
add
sub
xor
jmp
call
sbb
add
add
movs
sbb
scas
dec
push
int3
scas
dec
push
inc
cli
jmp
dec
dec
rol
icebp
adc
add
add
in
cmc
push
mov
scas
neg
jmp
add
cmc
je
jmp
mov
idiv
out
jb
mov
sti
jmp
jmp
push
clc
shr
sub
push
mov
jmp
mov
in
cmc
jmp
jmp
fwait
dec
out
cmc
mov
xchg
xlat
je
jbe
test
aad
push
loop
cmp
cmc
test
push
or
add
fcmovnb
sti
call
jp
mov
aam
dec
dec
mov
mov
leave
sti
jmp
out
aaa
mov
fisub
inc
pop
out
out
xor
sbb
retf
xchg
mov
je
in
mov
sub
call
fbld
test
xchg
in
cmc
call
add
aad
sub
movs
and
enterw
in
lahf
inc
dec
data16
xor
daa
inc
cld
(bad)
cmp
aad
and
dec
push
popf
fiadd
jmp
add
stos
bound
jl
push
dec
push
stc
test
sub
scas
adc
(bad)
and
xchg
pop
push
push
add
mov
mov
mov
in
adc
cli
test
outs
push
xor
std
fbld
sbb
(bad)
jge
cmc
mov
repz
jmp
daa
dec
cld
mov
je
xchg
adc
cmc
leave
and
frstor
and
inc
push
scas
dec
push
fwait
test
xchg
fs
mov
iret
call
mov
add
rol
bound
sub
call
(bad)
jmp
cmp
out
jns
fisub
inc
cld
adc
add
sbb
push
call
cmps
bound
cld
test
fincstp
pop
mov
(bad)
gs
sahf
pop
dec
lods
scas
or
jns
push
inc
add
add
clc
push
mov
sahf
lock
ret
push
push
aaa
push
add
dec
push
js
not
enter
push
dec
cmp
cmp
inc
mov
dec
jns
inc
(bad)
jge
adc
cdq
movs
in
cmp
scas
(bad)
call
lods
push
ret
sti
es
push
cmc
ja
test
or
(bad)
sbb
mov
jnp
jbe
pop
mov
rcr
jle
je
in
out
call
in
add
push
es
dec
cmps
cmp
push
push
jmp
and
sti
(bad)
cmp
cmp
sub
cmps
std
add
inc
inc
jnp
repz
adc
xchg
sar
into
cmps
je
dec
out
call
and
jne
popa
xor
add
xor
mov
xor
or
loop
sti
iret
cmc
jmp
test
inc
test
push
add
mov
es
push
int
jns
pop
or
add
push
test
push
mov
pop
mov
mov
inc
cli
imul
add
scas
adc
call
xor
mov
add
movs
and
ja
jne
sub
cmp
adc
dec
xor
add
int3
(bad)
mov
lds
add
jbe
inc
adc
fild
mov
mov
leave
data16
shl
add
add
sbb
jns
push
dec
mov
outs
pusha
test
sub
jns
and
loop
push
aam
mov
(bad)
push
mov
int
ds
inc
mov
cmp
cmp
push
mov
add
leave
push
and
out
loop
cmp
neg
enter
ret
(bad)
xchg
daa
jbe
sahf
pop
(bad)
fwait
pop
inc
add
cmps
mov
cmps
rcl
loop
daa
aam
mov
xchg
mov
jnp
mov
dec
call
test
cli
int3
mov
in
push
pop
add
(bad)
push
mov
stos
dec
push
cmp
dec
out
xor
lods
aam
adc
or
repnz
dec
push
(bad)
jmp
sub
cmps
jbe
dec
test
loop
inc
aad
push
jle
int
mov
jb
leave
and
gs
(bad)
and
ds
jmp
xor
pop
into
outs
fwait
mov
inc
cli
fnstcw
shr
mov
push
mov
push
pop
add
cmc
(bad)
cmc
mov
(bad)
out
(bad)
mov
add
into
call
imul
pop
popa
mov
add
aam
ret
add
dec
into
call
sbb
jae
add
popa
mov
add
fidivr
adc
call
jmp
jae
add
movs
push
jecxz
into
call
fcomi
jae
mov
(bad)
mov
into
call
stos
lock
jmp
and
push
xor
cmps
into
std
inc
or
je
add
xchg
outs
sbb
or
mov
and
icebp
dec
cli
mov
sti
call
test
cdq
push
and
call
sbb
je
gs
out
push
ret
cmc
push
pop
or
call
or
add
imul
pop
repnz
fcom
ret
jns
add
add
add
add
scas
add
mov
mov
push
jmp
aaa
pop
in
ins
inc
jmp
ret
out
call
ins
sbb
jae
aad
cmp
mov
aaa
inc
in
jle
fscale
mov
into
add
add
add
add
add
imul
ss
in
cmp
mov
inc
push
aaa
inc
lock
ins
fidivr
mov
jmp
pop
sub
mov
add
(bad)
push
jb
ret
lahf
inc
sub
xor
inc
cld
lds
xor
add
cli
add
xchg
sbb
add
jle
push
add
add
add
or
inc
add
dec
cmp
xchg
lods
xchg
or
xor
mov
fld
cmp
je
xor
jns
sub
adc
pop
or
inc
bound
jp
sti
inc
ret
mov
add
int
scas
push
(bad)
(bad)
push
hlt
mov
or
lods
add
push
cmp
inc
outs
adc
mov
ror
jle
imul
stos
xor
mov
mov
cmp
(bad)
push
cmp
pop
mov
add
pop
lods
add
out
jg
cmp
jp
inc
add
add
mov
(bad)
and
push
and
cmp
cmp
lea
pop
dec
push
jl
dec
jmp
or
push
pop
shl
test
adc
cmc
push
xor
ror
or
call
neg
retf
xchg
gs
pop
cmc
leave
gs
in
dec
mov
add
mov
mov
xor
arpl
mov
jae
add
rol
stos
addr16
loop
inc
add
mov
add
mov
cmp
es
xchg
js
jne
push
mov
cmp
test
sub
cld
add
or
stc
mov
cli
test
mov
dec
call
add
mov
add
or
scas
mov
(bad)
mov
cmps
mov
call
imul
inc
data16
mov
jle
neg
cmp
mov
icebp
lahf
std
clc
mov
add
add
add
add
lods
cmp
out
add
fisubr
inc
add
test
sahf
cmp
dec
jge
add
aad
(bad)
mov
jae
cmp
inc
sub
mov
cmc
call
jmp
mul
je
daa
and
xchg
daa
and
popf
cmp
stos
test
retf
test
inc
aam
push
ds
xchg
std
and
dec
cld
add
push
call
out
jmp
es
cdq
adc
add
xchg
pop
push
push
xchg
mov
inc
add
add
mov
mov
mov
les
inc
(bad)
scas
sub
add
dec
les
add
ret
jbe
push
xchg
mov
mov
in
cmp
push
fwait
mov
ja
out
in
idiv
scas
adc
cmp
stos
mov
push
dec
push
not
stos
lock
shr
std
mov
push
frstor
rol
shl
mov
rcl
add
pop
pop
sub
sub
mov
in
mov
shl
mov
mov
lds
not
fs
mov
dec
push
mov
or
arpl
add
push
(bad)
pop
cmps
cmp
lods
add
push
add
push
imul
inc
add
push
cmps
pushf
retf
loopne
push
mov
dec
jle
cmp
xchg
xor
mov
imul
cmp
fisubr
mov
push
pusha
loop
icebp
mov
cwde
std
mov
pop
mov
call
pop
out
push
mov
scas
call
mov
add
add
add
fisub
xchg
pop
push
push
xchg
shr
add
push
pop
lock
(bad)
mov
adc
xor
cmp
test
les
add
inc
push
add
es
fwait
hlt
jecxz
cli
out
(bad)
idiv
aas
pop
icebp
cmp
fimul
lea
add
neg
push
pop
not
pop
out
jae
and
push
push
mov
cmps
std
mov
mov
push
mov
jb
int
mov
mov
outs
ins
cli
dec
ins
call
or
sub
iret
push
sub
sbb
dec
add
popa
shl
jne
cs
loopne
cli
add
push
(bad)
jmp
cmp
test
cmp
loopne
cli
gs
movs
pusha
retf
push
mov
iret
(bad)
push
fsubr
mov
stc
or
xchg
cmp
pop
test
lea
mov
loop
add
adc
cmc
push
dec
rcr
add
push
call
fucomip
push
mov
lods
call
mov
aad
xchg
pop
push
push
gs
add
out
lock
aam
jmp
aas
cmp
stos
sub
out
or
inc
(bad)
call
cli
push
add
cmps
stos
add
xchg
dec
fwait
xor
imul
(bad)
aas
adc
ds
test
inc
add
xchg
inc
pop
not
fucomi
jae
shr
push
dec
std
add
pop
ret
mov
push
mov
jae
int
mov
mov
add
add
add
mov
ds
out
retf
ins
ins
add
and
xchg
add
add
jg
add
add
fisubr
int
fcmovnb
add
cwde
xor
test
cmc
mov
lahf
push
xor
and
pop
sbb
add
or
pop
loop
add
adc
cmc
adc
(bad)
jb
call
jmp
ret
xchg
fist
or
and
mov
daa
fs
out
faddp
inc
rol
inc
jp
loop
sub
pop
add
xor
cmc
mov
fld1
out
popa
aam
ret
push
out
add
test
rcl
mov
or
xchg
call
gs
adc
inc
mov
imul
mov
ds
mov
dec
lea
in
call
(bad)
pop
(bad)
and
xchg
stc
jnp
aad
mov
pop
lea
pusha
lea
pusha
lea
add
pusha
lea
pusha
lea
pusha
dec
push
sbb
add
lds
mov
jbe
jmp
stc
rol
inc
test
pop
dec
push
lds
inc
fidiv
(bad)
push
cld
in
data16
jne
sbb
dec
rol
fmul
push
cld
int3
add
mov
inc
into
pusha
dec
push
add
jl
cmc
jne
(bad)
pop
jne
mov
mov
push
add
push
cwde
sbb
mov
test
adc
(bad)
cmc
call
test
jmp
sti
and
mov
aam
inc
cli
call
dec
push
inc
cmp
dec
sti
rol
inc
mov
int
outs
rcr
push
add
ror
mov
xchg
je
cmc
add
jbe
cmp
sub
rol
inc
lods
pop
mov
dec
push
mov
ror
test
jecxz
jne
cdq
cs
mov
rcl
shl
or
not
add
add
add
(bad)
fiadd
fs
push
xchg
popf
rcl
scas
aaa
jge
dec
add
mov
push
retf
mov
stos
js
jne
rcl
xor
cli
push
mov
xchg
pushf
call
jae
(bad)
and
movs
push
push
fdivr
xchg
out
bound
fs
push
xchg
and
mov
add
jmp
rol
mov
sbb
iret
inc
out
fadd
ds
add
cmp
cld
call
jle
inc
cmps
hlt
jae
jle
pushf
std
mov
lds
add
push
jmp
iret
mov
rol
jns
jle
ins
add
add
and
shl
add
bound
mov
call
mov
cdq
clc
cdq
push
shl
mov
call
jae
cmc
ret
mov
cmp
out
in
call
jle
mov
or
(bad)
jmp
std
jmp
sbb
add
add
add
add
push
adc
sar
dec
push
ds
mov
cmp
aaa
cli
mov
sub
inc
es
dec
push
pop
not
lods
aaa
stos
test
inc
adc
mov
cli
out
or
jmp
bound
aas
in
add
jl
push
gs
loop
sbb
imul
ret
imul
add
add
repnz
lods
sbb
scas
add
mov
adc
not
mov
adc
call
sbb
cli
mov
int
push
cmp
inc
loop
scas
int3
cmc
call
retf
cmc
pop
aas
outs
loop
sbb
imul
loope
add
mov
into
(bad)
fcmovnbe
call
lea
ror
cld
xlat
ret
mov
data16
lds
xchg
cli
out
out
dec
in
fld
cmp
(bad)
push
jecxz
cld
cmps
ret
mov
shl
jbe
stos
mov
fwait
push
int
jmp
sbb
clc
xchg
add
adc
bound
imul
std
loope
cli
push
mov
repnz
jmp
mov
jmp
inc
and
scas
pop
sar
mov
gs
sbb
loop
add
aas
or
jne
pop
imul
jae
sbb
int
mov
add
jge
pop
movs
mov
inc
mov
aas
or
lods
xchg
pop
test
pop
inc
lock
xor
iret
jns
adc
jmp
xchg
sti
call
popf
bound
cmp
stc
in
add
div
and
push
scas
cs
std
mov
cmp
xlat
cwde
xchg
cmc
add
call
add
mov
mov
lds
outs
inc
mov
popa
inc
cli
imul
in
std
mov
gs
push
not
lahf
imul
jne
and
adc
lock
in
arpl
mov
fsubrp
cwde
push
xchg
cmc
mov
enter
int3
mov
add
add
movs
arpl
test
mov
daa
test
int
mov
mov
xchg
pop
and
inc
int
rcr
add
sbb
aas
adc
out
je
push
sbb
mov
pop
mov
into
xor
sbb
xchg
add
add
push
dec
jnp
jno
xor
xchg
inc
add
and
call
xchg
dec
push
ds
std
and
lds
pop
into
push
push
mov
call
push
jl
mov
mov
pushf
sti
sti
(bad)
cmp
cmp
fld
call
mov
idiv
mov
add
cmp
mov
int3
cmc
sbb
inc
ds
cld
movs
(bad)
cmps
out
xchg
test
sub
cmc
jmp
gs
ds
fs
adc
sti
push
add
dec
lods
add
shl
push
mov
jmp
push
scas
add
push
or
(bad)
jl
xchg
add
add
add
and
leave
mov
fiadd
dec
mul
inc
cwde
in
xchg
dec
mov
call
sar
and
idiv
xchg
adc
xchg
push
sub
int
push
xor
push
scas
sti
sahf
std
mov
lods
cmc
mov
xchg
cmc
dec
xchg
cmc
call
add
imul
rol
fwait
int
call
jne
add
pop
int
call
popf
lock
mov
adc
mov
push
xchg
cmc
call
push
and
xchg
sbb
imul
inc
cld
fadd
add
arpl
lea
cmp
fistp
test
ins
xchg
std
add
xchg
cmp
pop
jmp
(bad)
cmc
push
mov
xchg
cmc
call
test
add
fwait
test
loop
sbb
idiv
add
mov
mov
test
jmp
xchg
xor
arpl
push
push
daa
and
inc
xchg
push
mov
sbb
sti
(bad)
call
nop
cmc
inc
jmp
adc
lea
push
idiv
xchg
cmp
inc
mov
xchg
cmc
sbb
dec
lea
in
inc
cld
ins
ret
movs
xchg
and
mov
and
sti
inc
xor
inc
ret
add
add
mov
xchg
xchg
cmc
call
lds
(bad)
jmp
cmc
call
inc
cld
fcmovb
lock
inc
xchg
mov
ror
xchg
xchg
test
or
test
xchg
cmc
call
jl
xchg
xchg
nop
add
xchg
cmc
jmp
xchg
mov
cmp
mov
xchg
cmc
jmp
daa
lds
add
and
or
std
adc
dec
lea
xchg
cmc
push
mov
mov
add
dec
lea
mov
cmc
mov
ret
mov
adc
call
inc
mov
inc
xchg
loope
int3
inc
mov
retf
sub
idiv
dec
ins
add
cmp
add
lods
sub
das
gs
loope
pop
data16
in
cdq
test
loop
(bad)
rcl
and
push
cmp
repnz
jmp
(bad)
cmc
dec
mov
lea
hlt
sti
jmp
adc
xchg
cmp
(bad)
imul
out
aam
inc
sbb
lea
add
cmp
div
cmc
push
mov
cmp
cwde
mov
xchg
cmp
jns
lea
mov
cmc
mov
(bad)
cmc
jne
and
jne
cdq
jbe
mov
popf
push
jmp
cmc
mov
xchg
and
cmc
sbb
bound
int3
mov
cmps
mov
cmc
push
sbb
lea
add
call
mov
call
ret
mov
cli
out
sahf
idiv
popf
sub
mov
iret
inc
push
adc
adc
(bad)
mov
mov
push
popa
xchg
sti
add
sbb
inc
call
inc
mov
je
inc
inc
xchg
xchg
xor
mov
adc
leave
add
cld
mov
div
add
mov
and
stos
stc
xchg
and
jne
les
jne
not
aad
or
int
ret
ja
dec
call
idiv
pop
cld
(bad)
cmp
int3
aas
ss
aam
xchg
inc
xchg
inc
ret
xlat
xor
mov
add
xchg
ss
int3
ds
(bad)
mov
fwait
arpl
lock
ret
scas
aaa
je
in
xchg
cs
sahf
aaa
xrelease
std
xchg
cmp
mov
out
add
mov
dec
push
jne
push
jmp
jp
inc
push
sub
jbe
push
xor
add
mov
add
add
add
add
add
movs
inc
adc
mov
(bad)
jno
aaa
(bad)
jmp
dec
push
push
jne
push
add
ret
adc
jbe
cli
test
std
cmc
adc
sbb
mov
xchg
std
mov
stos
add
cld
push
xor
xor
(bad)
data16
mov
add
cs
add
mov
test
mov
jnp
jle
push
int
lea
and
push
mov
jae
mov
mov
ror
div
xor
imul
call
call
mov
in
mov
pop
aaa
shl
mov
cmp
movs
(bad)
std
xchg
xchg
xchg
add
cmps
lods
cmc
jne
ret
xchg
mov
clc
push
out
jecxz
jmp
test
pand
inc
test
repz
ins
mov
in
(bad)
dec
call
movs
inc
adc
outs
xor
lods
and
cmp
jbe
dec
push
mov
jl
inc
push
out
jne
add
test
add
outs
pop
loop
outs
daa
rol
sub
cli
mov
shl
cmp
loop
loop
cld
addr16
inc
add
into
push
xor
adc
mov
xchg
out
or
ror
stc
mov
ret
cmc
push
mov
repz
cld
push
ret
sub
fwait
movs
push
call
add
pop
push
loop
(bad)
inc
int3
dec
lock
outs
sub
mov
xchg
mov
mov
push
cs
pop
sbb
call
dec
rol
add
das
clc
add
push
stc
in
or
mov
sub
cld
mov
test
mov
nop
mov
pop
mov
add
push
or
and
mov
div
mov
cli
test
stos
or
mov
cli
(bad)
imul
inc
mov
fsincos
jmp
hlt
inc
cld
sub
add
mov
ins
mov
gs
mov
jmp
mov
mov
ret
xchg
mov
out
je
dec
sbb
sti
(bad)
jge
lea
sbb
movs
ss
jmp
pop
mov
test
inc
xchg
call
mov
xor
add
cmp
call
(bad)
jecxz
idiv
adc
pop
ds
cmc
retf
sub
loop
mov
add
leave
call
cmp
add
mov
call
jmp
mov
add
jmp
idiv
add
xchg
imul
loop
dec
mov
cmp
mov
xor
ins
(bad)
cld
jmp
loope
call
adc
add
sbb
(bad)
and
fs
int
xchg
sub
mov
cli
je
addr16
addr16
inc
inc
add
cmp
out
cld
scas
jg
lds
mov
out
std
mov
call
cmp
mov
jmp
jne
out
add
cdq
in
test
inc
cmps
loopne
call
xchg
cli
add
mov
out
or
mov
jmp
scas
mov
out
lahf
idiv
popf
je
xor
mov
cli
add
mov
lods
fsubr
pextrw
add
sbb
inc
add
scas
add
pop
pop
sahf
sbb
inc
add
mov
xchg
adc
sbb
mov
add
scas
push
mov
fidivr
add
fisttp
imul
inc
cld
addr16
mov
(bad)
push
add
lock
inc
add
mov
fdiv
push
add
call
inc
mov
fsubr
test
lea
push
int3
test
mov
mov
(bad)
ds
add
cmps
call
stc
inc
add
xor
cmc
mov
mov
cli
out
loop
inc
add
mov
ret
mov
and
call
in
idiv
into
bound
push
out
bound
cmc
pop
inc
lds
frstpm(287
mov
test
or
add
push
(bad)
(bad)
add
jecxz
(bad)
shr
gs
add
les
mov
mov
iret
ja
fsubr
call
fild
inc
ror
push
sbb
fcmovnu
aaa
imul
js
sti
dec
push
lea
(bad)
mov
dec
psadbw
xchg
call
push
mov
mov
push
mov
test
add
add
add
mov
sbb
retf
xchg
scas
cmc
mov
mov
push
icebp
frstor
lods
call
xor
pop
lock
lods
push
or
shr
in
push
(bad)
stos
ret
ss
cmps
test
add
imul
add
ret
mov
inc
mov
mov
add
dec
push
in
cwde
test
add
sbb
jmp
push
xchg
cmc
inc
add
push
cmp
lea
push
push
scas
inc
fcos
mov
cmp
dec
mov
sti
jmp
jmp
mov
lods
add
inc
repnz
stos
loope
xor
call
add
add
add
faddp
cmc
(bad)
cld
mov
pop
mov
jge
std
mov
pop
fs
cmp
sti
dec
and
jecxz
cmc
mov
ret
loope
test
fwait
pop
bound
cli
push
push
xchg
jns
aam
mov
(bad)
retf
out
mov
or
test
and
inc
add
in
xchg
pop
sub
or
fwait
clc
and
aaa
inc
cmps
test
mov
push
aaa
inc
cmps
test
sar
mov
or
cli
push
data16
mov
aaa
inc
push
setnp
pusha
outs
cli
out
jmp
cwde
mov
sbb
and
mov
add
es
add
pop
mov
cmp
es
add
in
clc
loope
cmc
push
mov
mov
push
pop
pop
icebp
jae
xchg
in
clc
mov
stos
aam
jmp
clc
mov
popfw
inc
add
in
push
and
fwait
and
adc
sbb
jae
add
jecxz
cld
mov
dec
mov
std
and
fisubr
mov
call
int
call
test
sub
push
mov
dec
call
popf
and
pop
(bad)
out
push
xor
loop
adc
cmp
sbb
push
enter
ror
dec
adc
add
add
add
add
mov
daa
xchg
and
or
movs
cmc
jne
(bad)
pop
cld
(bad)
jnp
scas
iret
xchg
jmp
pop
dec
mov
mov
bound
mov
adc
mov
xchg
call
mov
or
scas
add
je
and
arpl
call
push
add
add
add
fidiv
test
fidivr
ds
std
inc
lds
mov
fcomi
cwde
inc
cld
in
popa
movs
mov
cmp
call
cmc
or
cld
mov
jnp
pop
add
jmp
jg
mov
add
cmp
jl
shr
fwait
test
add
add
add
add
mov
fsubr
mov
inc
push
mov
lea
push
(bad)
pop
movs
stc
call
scas
call
sbb
call
test
movs
std
inc
pop
dec
lea
loop
imul
stc
aam
test
add
sti
call
and
adc
shl
mov
xchg
xchg
lods
add
jl
add
movs
bound
cmps
lods
add
shr
push
cmp
pop
cmp
sub
stos
xchg
mov
mov
enter
jmp
cmp
fwait
mov
lea
push
(bad)
pop
movs
add
push
lods
call
sub
fs
fcomp
test
sub
push
scas
sub
dec
(bad)
retf
loopne
out
outs
mov
push
add
or
jae
pop
adc
call
xlat
das
loop
add
aaa
pop
xor
jl
sub
popa
mov
pushf
add
sub
cmp
sar
cmp
ds
(bad)
fistp
jae
dec
push
fdivrp
and
push
mov
lea
movs
std
call
call
sbb
inc
add
push
test
daa
ficom
pop
fwait
std
mov
loopne
jnp
scas
cmc
push
cmp
jae
pop
psadbw
rcl
sti
jmp
fimul
jo
push
xchg
mov
mov
bound
ficomp
xchg
mov
int3
mov
jl
cmp
pop
mov
sub
add
sub
jge
add
sbb
test
int3
in
(bad)
fwait
sbb
mov
inc
push
fs
mov
leave
inc
add
in
xor
in
(bad)
pop
ins
ss
mov
or
xor
dec
push
call
out
and
jae
and
cmp
(bad)
mov
jp
pop
add
xchg
dec
ins
mov
stos
jns
(bad)
cmp
cli
jmp
in
add
push
push
jbe
in
int
movs
nop
dec
push
and
adc
fwait
mov
add
fwait
jge
ror
in
mov
jne
and
mov
or
sahf
add
(bad)
jne
add
daa
repnz
(bad)
add
inc
sti
call
call
add
push
repz
push
outs
iret
retf
repnz
sub
jle
fcos
cmp
add
xor
fs
bound
xchg
test
enter
adc
test
pcmpgtw
sub
and
aam
neg
cmp
add
add
retf
popa
sub
push
and
aam
imul
xor
push
test
push
scas
dec
les
ror
jno
inc
mov
and
aam
scas
jae
outs
(bad)
scas
std
xchg
sub
push
or
call
mov
and
add
pop
scas
cmc
ret
sub
mov
call
fucomp
or
sbb
gs
cs
jne
fld
mov
jo
cmps
mov
or
add
add
push
imul
adc
ror
and
std
inc
out
enter
std
jmp
jmp
add
add
add
add
scas
add
lods
adc
in
add
sbb
int3
inc
xchg
(bad)
mov
fisubr
xchg
xchg
scas
add
sub
(bad)
enter
xor
test
dec
lea
popa
or
addr16
add
cli
cmc
jne
push
adc
test
aad
mov
add
xor
sbb
inc
jae
and
div
push
adc
push
push
cld
aam
sbb
add
scas
call
mov
push
jnp
aad
xor
cmp
sar
mov
xchg
adc
or
aas
add
cmp
xchg
mov
inc
sub
fstp
adc
add
mov
scas
and
add
cmp
dec
jmp
push
push
push
rcl
test
cmp
std
(bad)
fsub
cld
add
aam
data16
std
push
dec
inc
inc
mov
dec
call
pop
daa
dec
rcl
aam
add
push
std
aam
mov
std
call
add
les
lds
leave
(bad)
(bad)
mov
and
(bad)
fcom
call
mov
and
shr
mov
xchg
and
call
jmp
add
jmp
std
add
mov
lods
add
int
pop
test
add
ins
test
add
add
add
push
jp
and
mov
ins
loop
bound
mov
and
int3
rcr
mov
inc
mov
je
es
das
mov
mov
xchg
lods
add
push
test
fsubrp
sbb
xchg
jmp
(bad)
div
sbb
dec
add
shl
aam
inc
in
add
jns
sbb
jnp
and
ror
sbb
jp
cli
rcr
mov
jle
enter
mov
jne
loope
cmps
dec
(bad)
xor
ret
es
cs
jmp
adc
frstpm(287
inc
inc
mov
add
mov
jo
jge
stos
add
(bad)
fld
test
test
(bad)
jl
rol
pusha
push
lea
sti
call
sbb
sub
xchg
aad
shl
sbb
aam
scas
movs
jecxz
mov
and
jnp
pop
inc
shr
mov
jp
call
add
jp
cli
ror
mov
jns
enter
mov
test
rcl
inc
(bad)
xor
dec
in
mov
test
ror
ds
out
in
mov
(bad)
push
test
dec
add
dec
or
mov
add
sbb
mov
test
add
and
inc
mov
inc
push
xor
xor
test
add
mov
test
jns
sub
xchg
xchg
test
je
jecxz
(bad)
call
mov
jae
ds
inc
rol
add
add
add
pop
ss
data16
inc
and
cmc
adc
add
cmc
adc
call
mov
jmp
add
fisubr
add
dec
rcr
mov
xor
mov
mov
sbb
jge
cmc
jne
inc
jne
add
push
fcomip
adc
jge
lahf
push
(bad)
fdivr
inc
sub
pop
(bad)
out
add
dec
test
inc
push
xor
add
dec
and
cwde
mov
jae
fsubrp
ud0
add
xor
xchg
inc
loop
fs
mov
adc
mov
sub
add
cmp
fimul
call
inc
out
cmc
adc
aaa
int3
xor
add
sub
mov
retf
xor
cmp
mov
ror
xor
leave
scas
and
in
inc
mov
ror
cmp
scas
jae
and
or
popf
mov
cmp
mov
add
adc
pop
mov
jne
cmp
push
(bad)
popf
lock
mov
mov
push
push
pushf
inc
rcr
scas
bound
int3
mov
xor
xchg
pushf
sbb
sbb
push
mov
jns
xchg
mov
js
sahf
or
dec
jecxz
and
inc
jne
scas
xchg
in
add
mov
or
leave
and
xlat
inc
add
vmovss
inc
or
inc
sub
aad
sbb
shl
add
imul
sub
jge
scas
cmc
les
aaa
or
es
dec
push
leave
fisttp
cs
std
add
inc
retf
mov
jbe
(bad)
sub
mov
sub
imul
add
mov
inc
test
(bad)
inc
retf
mov
jbe
jne
loopne
push
cs
std
add
retf
dec
jns
jne
inc
jne
dec
adc
std
adc
int3
ffreep
cld
call
mov
pop
dec
call
mov
dec
xchg
inc
add
neg
lds
or
setnp
imul
lods
add
int3
stos
sub
stc
stc
mov
loope
jge
inc
adc
test
push
push
sub
inc
imul
or
adc
dec
sub
(bad)
aas
ss
xor
inc
mov
rcr
sahf
dec
call
add
add
add
xor
clc
jmp
cmc
jne
inc
adc
jmp
aad
push
rcl
aam
xor
std
jmp
inc
loop
mov
inc
jne
mov
lods
add
jle
std
dec
(bad)
dec
mov
inc
mov
mov
(bad)
inc
add
or
inc
add
mov
add
dec
jmp
mov
(bad)
lock
test
push
lea
stos
add
(bad)
or
in
xabort
add
xlat
jmp
cs
push
retf
loope
test
movs
jno
cmps
mov
add
bound
cs
add
data16
jb
cmp
add
call
jmp
div
loop
std
sbb
mov
xchg
(bad)
mov
add
stos
add
cmps
call
test
cmp
push
rcr
add
stos
cmc
mov
pop
idiv
inc
movs
loopne
call
fbld
cmp
test
stc
jg
stos
cmc
mov
pop
idiv
add
add
add
stos
dec
call
xlat
jmp
out
add
pop
(bad)
aas
adc
outs
outs
das
gs
xor
scas
dec
push
call
cmp
dec
in
rol
mov
les
idiv
retf
jmp
mov
mov
xchg
paddd
add
add
add
add
sbb
hlt
or
lahf
fimul
push
mov
xchg
mov
icebp
ds
sub
mov
mov
push
sub
add
test
call
mov
clc
sub
sar
mov
jno
test
mov
add
aaa
inc
int
jbe
jge
cmp
push
pop
idiv
int
pop
test
mov
add
or
cmp
sbb
cld
(bad)
jmp
ret
lods
add
xor
or
push
jp
cmp
ret
mov
adc
mov
mov
cmp
test
add
mov
cmp
add
outs
and
ret
test
scas
and
out
test
inc
cmp
rcr
cmp
add
jo
and
not
inc
push
mov
rcl
jnp
rol
mov
and
dec
int3
inc
xchg
pop
or
add
or
(bad)
mov
push
imul
cmp
add
bnd
mov
push
test
push
repnz
pop
sub
ins
loop
stc
push
test
jno
idiv
stos
dec
int3
inc
(bad)
xchg
pop
or
stos
dec
call
out
in
pop
add
push
not
add
xor
fbld
push
mov
rcl
sbb
xlat
inc
adc
(bad)
jmp
xlat
call
xor
adc
push
loope
mov
adc
movsx
jmp
jmp
mov
adc
pop
fild
pop
test
push
idiv
add
or
not
add
loop
pop
cmp
xlat
inc
push
loop
pop
push
not
test
into
jle
test
mov
dec
fs
addr16
gs
rol
add
lock
jle
push
imul
lock
not
fwait
imul
add
add
add
mov
ret
sub
(bad)
jmp
cli
call
rol
dec
push
inc
mov
rol
mov
jne
push
adc
jmp
cs
mov
aas
adc
test
jbe
gs
sbb
push
clc
push
jne
mov
test
div
push
adc
add
add
add
add
call
adc
rol
inc
loopne
jecxz
(bad)
imul
jne
push
adc
dec
pop
not
jns
jne
mov
stos
aaa
jne
inc
test
push
not
out
push
jae
(bad)
call
pop
pop
or
iret
cld
call
or
dec
add
add
add
pusha
and
mov
(bad)
mov
jns
inc
cmps
arpl
mov
mov
sub
movs
mov
jle
xchg
xchg
add
xchg
add
adc
aas
cwde
test
push
test
push
bound
in
add
lods
and
jmp
leave
mov
push
jnp
mov
add
stos
add
pop
xchg
and
sbb
div
je
out
mov
dec
dec
loop
and
ret
cmp
dec
xchg
mov
inc
shl
add
push
mov
inc
data16
(bad)
mov
movs
in
add
cmp
inc
data16
push
add
outs
push
inc
push
mov
cmc
adc
add
push
lea
bound
(bad)
fld
inc
aad
add
aad
call
push
dec
push
mov
push
idiv
outs
cmc
jl
popa
fstp
add
in
lods
xlat
adc
add
add
dec
push
adc
push
mov
lea
mov
inc
(bad)
loop
adc
in
in
or
jl
mov
mov
enter
inc
fsubr
or
not
adc
shl
ficomp
cmps
mov
mov
push
inc
not
add
fisttp
neg
add
(bad)
mov
pop
jae
mov
push
sub
push
fdivr
mov
inc
mov
xor
xor
jmp
loopne
adc
mov
dec
lea
mov
add
add
loop
popa
inc
test
fidiv
inc
out
pop
mov
outs
repz
mov
pop
div
push
adc
mov
mov
pop
cld
aad
aas
mov
aas
dec
(bad)
fstp
dec
xor
jl
jle
cmp
mov
in
adc
inc
scas
inc
jbe
inc
lock
in
sub
add
mov
int3
ds
std
and
inc
cld
push
scas
add
xchg
mov
add
add
in
cld
add
cmp
xchg
mov
in
popf
je
lea
mov
(bad)
fstp
dec
mov
push
mov
repnz
or
mov
loop
pop
inc
test
add
pop
inc
imul
jmp
retf
cld
inc
test
sub
mov
call
fucomp
or
mov
mov
ins
add
push
das
mov
inc
es
add
push
neg
mov
jne
jle
in
inc
push
mov
call
add
pop
sti
call
lea
push
mov
push
pop
cmp
or
outs
mov
mov
scas
mov
add
mov
mov
call
retf
stos
std
mov
inc
push
push
push
and
rol
out
lods
add
add
and
add
aaa
jne
pop
push
jmp
fadd
dec
add
imul
in
leave
(bad)
fidivr
mov
sub
jp
fadd
add
cs
jmp
mov
cwde
cwde
mov
jl
mov
mov
mov
hlt
mov
rcl
mov
cld
xor
mov
sub
jmp
push
inc
lods
cdq
jns
enter
inc
cli
add
xchg
sbb
lods
cmc
jne
jmp
push
stos
add
les
mov
setnp
cmc
call
adc
cwde
lea
jmp
push
clc
add
mov
add
sbb
out
(bad)
sti
inc
(bad)
cmc
inc
push
inc
jns
dec
div
push
mov
mov
dec
jnp
mov
js
lea
fsincos
dec
mov
add
aam
call
ins
mov
add
(bad)
call
popf
in
call
aad
sub
add
add
add
movs
inc
repnz
leave
inc
outs
fisubr
add
ss
push
xor
ss
add
outs
dec
lea
(bad)
pusha
fs
daa
inc
adc
mov
push
sub
das
mov
adc
ret
xchg
stos
dec
push
mov
sahf
rol
mov
or
add
(bad)
adc
add
dec
push
test
push
shr
and
jbe
ds
jp
push
test
and
sub
push
push
and
dec
adc
test
or
fimul
rol
mov
xor
push
fmul
inc
jno
fxch
popa
push
call
out
dec
outs
and
add
sub
and
sbb
and
jns
xor
dec
test
jp
mov
jp
push
out
in
xor
in
xor
outs
and
jbe
je
test
adc
fwait
imul
add
in
inc
mov
adc
and
jbe
je
add
mov
out
daa
std
push
and
and
inc
in
mov
and
fisubr
push
and
dec
retf
dec
aas
cmp
mov
xor
outs
and
dec
xor
sub
rol
ds
jns
jne
dec
out
fcom
dec
lea
call
jmp
sub
add
and
clc
jmp
inc
or
sub
pop
sub
mov
call
das
dec
outs
and
dec
adc
call
test
adc
jnp
in
push
dec
repnz
enter
scas
mov
push
das
out
cmps
scas
add
gs
add
add
add
(bad)
jmp
dec
push
pop
out
inc
push
mov
push
sbb
add
add
push
sub
iret
in
sub
test
mov
sub
mov
outs
and
sub
mov
mov
ret
(bad)
sti
(bad)
into
inc
out
ds
jle
add
jg
shr
add
add
add
add
ret
dec
data16
inc
cmps
xchg
mov
jl
dec
test
scas
cmps
xchg
push
or
das
mov
and
inc
dec
jne
push
mov
daa
cli
cmp
inc
cld
xor
es
and
daa
adc
test
push
jne
push
push
add
mov
mov
add
scas
cmc
(bad)
ror
jo
inc
push
xor
and
add
or
push
push
or
test
std
xchg
inc
fiadd
cmps
lods
dec
push
or
bound
add
fisub
mov
test
add
push
or
bound
add
call
call
int
and
mov
sahf
out
lea
lods
ds
lahf
adc
add
sub
idiv
(bad)
pop
jle
jbe
add
mov
jl
test
(bad)
jmp
scas
call
sbb
add
and
add
and
xchg
lods
add
jle
movs
std
mov
ja
mov
sbb
scas
jne
push
dec
push
pop
scas
and
lods
add
ds
jne
and
add
fsub
sbb
push
sub
lods
add
(bad)
mov
outs
and
pop
jle
mov
and
lods
add
mov
push
push
jnp
rol
cmc
lea
add
clc
add
stos
dec
xor
jle
jle
add
into
inc
into
je
push
dec
push
push
scas
and
lods
add
pop
sub
sub
out
std
mov
xchg
pop
adc
in
push
(bad)
jmp
mov
dec
jb
std
adc
mov
lea
stos
mov
inc
add
mov
not
test
mov
dec
cli
jmp
ins
jle
outs
test
add
inc
bnd
push
jnp
jp
(bad)
call
mov
cli
jmp
xlat
std
mov
clc
add
stos
push
(bad)
loop
sub
adc
sti
call
out
add
sub
add
cmp
sti
(bad)
fsubr
stos
add
frstor
or
sub
(bad)
adc
int
and
popf
call
mov
push
push
mov
pop
loop
and
mov
(bad)
push
and
out
std
out
xlat
sti
(bad)
jge
jge
pop
outs
and
pop
mov
add
add
add
mov
push
push
or
push
sar
mov
test
push
mov
cmp
mov
cs
and
add
xchg
(bad)
call
ds
cmp
mov
xor
shl
xor
fwait
jmp
pop
outs
and
add
and
adc
cmp
push
fidivr
pop
pop
or
shl
adc
(bad)
mov
jl
ins
add
(bad)
mov
ret
sbb
int
add
int3
and
test
add
push
or
xor
xor
pop
dec
push
repz
inc
mov
push
push
adc
adc
add
and
mov
pop
in
and
movs
or
jae
xor
or
daa
jnp
sub
xchg
inc
add
pop
and
jp
mov
ss
dec
retf
inc
lea
fadd
(bad)
scas
push
call
cmp
jmp
mov
pop
das
jecxz
add
xchg
mov
add
add
rcl
sbb
sub
xchg
scas
push
call
mov
dec
scas
mov
jmp
call
lea
sbb
shr
mov
fisttp
iret
cmps
add
push
jl
mov
imul
rcl
jmp
add
xlat
cmp
pop
mov
test
add
call
mov
aaa
pop
retf
test
add
dec
mov
push
sub
or
jmp
ja
mov
push
jmp
sbb
or
call
jp
push
add
push
mov
and
sbb
call
mov
adc
add
mov
add
out
xchg
mov
xor
add
push
scas
call
popa
lock
lods
add
scas
in
(bad)
mov
call
fwait
mov
inc
cs
inc
adc
call
cmc
jmp
mov
shr
fiadd
call
add
pop
in
loope
bound
test
xchg
cmp
mov
push
mov
add
mov
add
mov
add
mov
pop
sub
in
sub
lea
add
cmc
inc
outs
ja
mov
(bad)
mov
adc
into
mov
push
cld
fmul
gs
sub
dec
push
mov
jmp
add
ins
imul
enter
sti
dec
add
(bad)
(bad)
fsubr
mov
in
inc
add
adc
inc
add
jne
das
inc
aam
das
inc
mov
mov
imul
repz
loope
xchg
add
push
fst
rcl
inc
xchg
mov
std
or
not
mov
retf
scas
daa
outs
std
push
jecxz
add
ins
mov
call
adc
dec
lea
add
dec
std
call
repz
cld
sub
cli
dec
lea
dec
dec
rol
call
sub
ret
cmp
or
loop
or
not
mov
dec
mov
movs
jbe
cli
add
addr16
cli
mov
jo
stos
call
add
add
add
add
div
mov
jae
add
jge
jne
cs
add
popa
mov
outs
add
pop
loop
inc
push
mov
add
cmp
push
je
lds
push
popf
mov
ins
xor
adc
add
mov
arpl
call
into
frstor
(bad)
sub
aam
add
cld
call
push
jne
push
push
jne
push
and
push
pop
jne
add
das
mov
dec
inc
hlt
inc
cld
xchg
add
(bad)
mov
mov
cli
out
mov
(bad)
jns
dec
lea
hlt
not
movs
dec
cmp
jne
add
dec
lea
loop
add
sub
test
movs
dec
mov
mov
shl
inc
inc
(bad)
xchg
jmp
(bad)
or
gs
test
add
sub
test
mov
adc
aam
fwait
test
jmp
imul
add
inc
jnp
(bad)
fwait
std
add
ins
hlt
idiv
in
add
mov
hlt
imul
cmp
jae
loop
sub
test
(bad)
test
mov
arpl
mov
mov
push
push
add
add
scas
lahf
inc
stos
jne
xor
scas
add
cmc
in
mov
add
add
add
ficomp
inc
add
jmp
lea
int3
push
add
scas
add
or
mov
adc
pop
mov
jge
or
add
fistp
add
sub
add
push
scas
aaa
pop
dec
xchg
push
popf
cli
loope
sub
not
stos
mov
add
add
add
push
jmp
adc
cmc
lea
aad
add
scas
dec
xor
repnz
push
xor
add
inc
jp
dec
xor
pop
or
lea
push
lea
repz
or
add
rcr
add
push
scas
call
add
add
add
add
repz
retf
es
inc
push
scas
add
add
call
xor
add
mov
call
stos
push
(bad)
sbb
sbb
(bad)
lods
add
pusha
dec
std
jmp
out
je
pop
push
sbb
cmps
push
and
mov
push
pop
add
xchg
lods
add
pop
aad
add
sbb
jp
std
push
xchg
and
repz
outs
push
ins
repnz
frstor
ins
mov
shl
arpl
mov
lods
add
push
rol
call
push
int3
stos
mov
jmp
stos
call
add
add
add
add
lock
mov
test
jo
add
add
clc
add
xchg
mov
fldcw
xchg
jmp
int3
inc
push
daa
mov
jmp
xchg
call
pop
iret
push
adc
call
movs
jne
cmp
cmc
adc
add
add
add
sbb
add
imul
data16
push
je
mov
xchg
js
xor
test
adc
stos
cmc
je
(bad)
dec
dec
add
inc
cmps
es
add
sahf
ins
and
add
jne
repz
movs
sbb
(bad)
jmp
call
add
int3
scas
push
lea
cs
fs
stos
add
adc
mov
mov
mov
push
stos
call
push
jl
mov
mov
jmp
and
repz
test
mov
inc
call
dec
ins
and
dec
aad
push
pop
ins
and
sbb
add
jge
pusha
das
ins
and
jle
mov
mov
mov
cmp
and
add
add
mov
call
push
mov
push
fcom
add
in
jle
(bad)
call
stos
add
lods
sahf
sbb
test
and
es
add
scas
in
std
push
mov
add
and
mov
mov
inc
mov
repz
sbb
jae
dec
sahf
sbb
dec
push
xchg
sbb
call
sbb
test
and
xchg
test
jge
push
add
xchg
ror
data16
fisttp
int
add
add
add
add
add
(bad)
int
add
xchg
sbb
call
stos
icebp
ins
add
mov
add
test
(bad)
jmp
pop
cli
jmp
(bad)
cmp
adc
lea
push
mov
add
outs
dec
arpl
xchg
sub
add
mov
add
push
mov
or
add
stc
fidivr
in
jl
test
call
test
adc
test
mov
jmp
jl
std
jmp
call
ins
and
enter
out
sti
mov
mov
pop
test
mov
jmp
cwde
xchg
and
mov
add
add
in
test
fisttp
call
repz
call
mov
test
xchg
scas
push
(bad)
sbb
add
add
mov
test
mov
add
rol
fcmove
pusha
add
or
mov
hlt
dec
push
xchg
lods
and
mov
add
lods
popa
std
add
mov
cmp
add
pop
ja
jmp
jne
mov
loopne
(bad)
scas
call
lea
mov
std
jmp
and
jle
mov
or
call
mov
mov
das
xchg
mov
mov
mov
or
add
xchg
and
mov
add
fs
add
adc
sti
xor
cs
or
jge
out
add
xchg
sbb
call
xchg
xor
neg
add
ficom
dec
xchg
icebp
cmp
mov
mov
call
aas
aad
jmp
mov
add
addr16
or
call
add
bound
or
sbb
les
xchg
lods
push
jae
mov
add
test
ins
and
retf
clc
cwde
mov
and
cmc
mov
mov
dec
dec
int
add
lods
call
(bad)
call
jmp
mov
idiv
gs
xlat
lods
add
ins
sub
add
sbb
call
xchg
cmp
jbe
add
fdiv
xlat
sub
or
test
fsubr
or
lock
loope
add
xchg
push
add
mov
sbb
enter
(bad)
and
jp
cmp
add
adc
inc
add
cmp
test
lock
call
ret
imul
lods
add
push
into
test
mov
call
pop
cmc
xchg
dec
clc
lock
and
sahf
jge
stos
stos
add
outs
out
xchg
std
xchg
pop
jle
out
stos
add
mov
ins
and
repz
nop
jmp
je
retf
push
lea
add
push
call
add
add
add
call
(bad)
dec
stos
call
push
mov
push
cli
call
adc
jmp
push
ds
and
mov
add
test
ds
sub
add
sub
pop
and
xor
(bad)
stos
sub
ds
(bad)
mov
(bad)
cmp
add
jbe
inc
add
mov
neg
mov
pop
xchg
aad
xor
sub
cs
inc
data16
push
push
stos
add
les
call
mov
mov
sbb
sub
push
(bad)
sub
xor
jne
add
rol
out
xchg
jmp
loopne
outs
add
sbb
jne
inc
inc
jo
jmp
mov
dec
mov
jbe
idiv
ffreep
cmc
push
in
mov
mov
sub
mov
dec
xor
out
jp
inc
out
dec
push
and
aam
or
adc
je
add
ds
mov
and
jne
jbe
mov
mov
inc
xchg
stos
add
mov
push
movs
int3
cld
add
jmp
pop
jnp
in
pop
dec
test
call
xchg
aad
push
imul
je
ds
int
mov
shr
xchg
jns
add
dec
push
addr16
mov
add
add
add
out
push
sbb
xchg
int3
std
mov
push
idiv
retf
mov
int3
std
and
mov
std
and
je
xchg
fwait
adc
sub
call
jmp
ror
daa
int
xchg
sub
std
mov
and
push
cmp
(bad)
dec
cmps
cmc
adc
add
ins
adc
sub
bound
or
into
push
in
scas
bound
clc
mov
fsubr
dec
mov
sbb
cmp
add
shl
xchg
es
adc
imul
dec
jnp
inc
push
je
(bad)
jo
add
lea
rcr
out
push
mov
add
mov
jmp
scas
push
push
dec
mov
mov
mov
push
inc
in
add
fs
fs
and
dec
push
sub
push
xchg
mov
mov
das
dec
jp
mov
sub
jmp
push
dec
push
and
ds
cmp
add
test
ds
jne
jns
push
retf
and
mov
scas
add
js
test
xchg
(bad)
mov
cmp
not
xchg
jns
mov
sub
cmp
je
adc
dec
mov
dec
dec
int3
inc
add
cmps
jp
add
test
lods
add
mov
push
test
jmp
mov
inc
inc
inc
outs
inc
push
xor
popa
sub
mov
nop
idiv
int
shr
dec
push
add
mov
int
je
mov
push
dec
push
add
add
add
push
mov
mov
jge
push
test
lods
add
arpl
inc
mov
pop
imul
push
pop
test
push
not
xchg
jne
xchg
push
not
sbb
ins
sbb
push
or
daa
fidivr
dec
xchg
idiv
cmp
add
nop
idiv
iret
das
fidivr
inc
lods
add
mov
(bad)
idiv
(bad)
push
test
mov
sahf
stc
jmp
push
test
add
push
jae
sbb
inc
xchg
scas
call
mov
nop
idiv
push
loope
inc
pop
add
add
mov
push
imul
and
not
out
mov
mov
adc
push
mov
add
jnp
not
and
in
ret
call
mov
mov
xchg
idiv
(bad)
test
std
mov
xchg
jno
push
push
sub
cmp
xchg
idiv
push
push
adc
add
add
add
add
add
mov
xchg
idiv
test
adc
sub
lods
in
mov
jmp
idiv
mov
fucomi
mov
and
std
call
jmp
push
adc
jmp
and
mov
add
push
not
mov
mov
ss
not
out
std
mov
push
test
and
mov
xchg
mov
and
push
mov
pop
push
test
out
idiv
ds
mov
add
inc
lea
call
inc
adc
jmp
cmp
(bad)
cmp
inc
es
pop
ret
inc
not
pop
in
enter
(bad)
xor
mov
jecxz
imul
mov
pushf
push
mov
jb
neg
(bad)
mov
mov
mov
inc
add
je
fs
mov
add
add
imul
call
popa
les
lds
fistp
or
mov
add
mov
aaa
popf
jo
inc
test
mov
mov
je
das
add
pop
mov
adc
cmp
call
xchg
imul
add
ds
inc
addr16
sub
idiv
pop
mov
mov
dec
ret
cld
call
pop
mov
add
test
inc
idiv
pop
jo
mov
shl
jmp
shl
inc
cmp
out
and
jmp
inc
lea
jbe
inc
cld
push
scas
out
dec
mov
nop
jbe
inc
cld
adc
inc
rol
jns
push
add
add
xlat
add
scas
add
add
aam
mov
sti
jmp
dec
lea
idiv
mov
push
sahf
jno
inc
dec
push
push
loopne
std
sbb
mov
pop
cmps
push
inc
add
add
test
mov
inc
add
int3
sar
test
inc
and
loop
les
mov
jge
jmp
inc
loop
jl
imul
rol
mov
jmp
adc
push
inc
dec
lea
pop
mov
jne
aaa
ror
cmp
add
ins
nop
(bad)
sbb
call
push
mov
sti
jmp
xor
(bad)
out
pop
dec
lea
mov
cmp
not
xor
(bad)
fwait
inc
(bad)
out
retf
sti
(bad)
(bad)
mov
sbb
fs
stc
and
mov
lods
sub
fxch
in
pop
push
lods
add
add
add
add
jae
pusha
mov
popa
or
ins
add
fcom
call
push
xor
push
ds
mov
inc
dec
(bad)
jmp
mov
pop
or
lods
mov
push
in
pusha
std
mov
xor
ds
std
inc
add
stos
jo
inc
add
push
pop
call
mov
push
sub
rol
aam
in
adc
es
addr16
inc
add
mov
std
mov
in
or
push
add
(bad)
pop
call
xor
or
mov
aam
jle
mov
sub
push
das
test
cmp
push
jle
(bad)
std
mov
sub
aam
cs
dec
push
cmp
call
sbb
bound
jecxz
aam
fwait
cmp
sti
dec
je
sub
fs
js
stc
pop
jb
clc
adc
out
(bad)
xchg
cmp
push
and
add
mov
cmp
add
add
add
add
test
inc
cmp
(bad)
sbb
call
cmc
arpl
fcomi
cmp
inc
add
ins
inc
test
fdiv
or
push
pop
dec
(bad)
fwait
cmp
sti
dec
imul
and
imul
fsub
dec
lea
add
hlt
inc
cld
xor
dec
outs
mov
je
add
xor
mov
test
push
push
daa
jne
lea
cmc
call
and
mov
pop
mov
div
inc
cld
(bad)
cmp
sub
and
call
xchg
mov
lea
add
rol
call
lea
push
idiv
fwait
icebp
loope
fidivr
neg
mov
(bad)
pushf
pusha
std
add
lea
cdq
mov
pop
xchg
pop
mov
inc
add
test
mov
push
pop
sub
cdq
ins
in
pop
out
add
add
sbb
popa
or
jne
(bad)
jmp
and
inc
sbb
push
and
jmp
das
std
call
pop
mov
test
das
jns
cmp
mov
and
or
cld
pop
sti
jmp
mov
sti
dec
sub
xchg
add
mov
mov
pusha
daa
imul
mov
nop
dec
lods
data16
mov
mov
pop
xor
test
jge
push
(bad)
fcmovnu
dec
call
stc
xor
ins
std
mov
test
test
dec
cmovg
add
add
add
fwait
sbb
lds
movs
inc
add
jl
std
adc
push
add
es
aam
and
inc
dec
pop
mov
ss
rol
inc
push
test
sub
mov
outs
xor
std
popa
jmp
add
test
pop
je
add
add
xchg
jne
push
xor
lahf
das
mov
cmp
add
push
div
and
jne
and
add
sub
mov
lods
scas
xchg
lahf
sub
mov
add
mov
es
clc
add
or
pop
std
xchg
test
sbb
jne
push
dec
call
cmc
inc
call
push
call
cld
adc
scas
hlt
outs
std
push
pop
bound
sar
inc
loop
adc
mov
out
cld
pop
and
lea
and
add
add
mov
xchg
mov
sti
call
shr
ret
fiadd
mov
push
lea
and
jne
push
div
and
mov
stc
idiv
xchg
and
mov
push
idiv
mov
cmp
jae
test
push
idiv
inc
sbb
add
mov
call
lods
mov
call
int
or
and
je
scas
les
loop
mov
xor
ins
sub
(bad)
outs
enter
(bad)
jmp
stos
xchg
retf
sahf
sbb
sub
and
push
imul
xor
idiv
add
push
push
jne
and
push
pop
addr16
add
jg
or
mov
sti
dec
adc
push
scas
mov
std
push
daa
mov
add
mov
sti
(bad)
jns
mov
and
pop
and
push
sar
jmp
mov
scas
je
call
mov
test
add
scas
mov
jmp
jmp
and
push
add
xchg
and
les
push
jne
push
xchg
jle
cmp
es
dec
jp
sub
pop
ins
cld
pop
scas
std
push
std
mov
jge
inc
loop
mov
test
jne
and
add
add
add
add
push
dec
push
test
ins
cld
add
sbb
std
add
stos
jmp
mov
jmp
mov
sti
call
shr
test
repnz
mov
mov
push
daa
out
inc
mov
mov
push
or
inc
add
mov
pop
mov
popf
cdq
add
add
jp
add
and
and
jp
or
aas
add
add
ins
and
int
xor
or
aaa
inc
push
xor
add
(bad)
call
push
ds
mov
inc
xor
add
add
add
test
and
and
pop
cld
call
out
sar
jmp
mov
xor
test
call
fld
inc
jp
push
push
sbb
push
mov
add
sub
std
and
(bad)
out
mov
loope
add
int3
and
(bad)
push
push
std
add
add
xchg
mov
add
int3
and
scas
rcl
mov
mov
je
popf
call
lea
fsubr
push
test
scas
add
(bad)
scas
add
jns
idiv
out
js
(bad)
fcmovu
or
out
jge
inc
mov
add
push
dec
mov
sbb
mov
je
and
add
push
jnp
jp
stc
jmp
add
ins
and
sbb
pop
jecxz
(bad)
call
mov
sti
call
sub
add
xor
idiv
pop
inc
lea
push
push
cwde
sub
add
fstp
mov
sbb
xchg
add
add
mov
push
std
sub
add
xchg
xchg
add
mov
push
std
mov
mov
je
popf
call
lea
fiadd
call
call
mov
jne
and
pop
dec
(bad)
call
call
jbe
mov
inc
add
dec
(bad)
fcmovu
xor
aam
sti
call
sbb
(bad)
mov
ficom
call
out
cmc
imul
adc
lea
mov
jmp
adc
xor
ins
and
mov
mov
call
loope
enter
fnsave
loop
add
je
imul
push
je
add
test
es
je
movs
call
push
arpl
pusha
std
inc
add
cmp
pop
mov
add
lods
add
outs
xchg
mov
popa
jbe
(bad)
jmp
and
mov
add
push
dec
mov
add
les
push
add
ins
and
sbb
mov
stc
call
add
ins
and
adc
pop
and
xor
mov
push
call
mov
and
fnstenv
mov
lods
add
xor
lea
push
push
cwde
js
nop
(bad)
stos
add
dec
fs
add
xchg
pop
add
mov
enter
addr16
std
sub
add
enter
imul
enter
mov
je
cmc
loope
(bad)
dec
test
stos
add
stos
add
and
idiv
mov
add
jge
(bad)
mov
add
add
out
fs
dec
dec
mov
dec
add
mov
sbb
out
pop
inc
dec
jnp
jp
cli
call
dec
fs
sbb
ficomp
dec
bound
add
dec
sar
push
pop
and
pop
and
add
cmps
stos
add
xchg
push
idiv
or
add
sbb
push
nop
add
push
stos
add
dec
jb
std
adc
pop
std
and
add
sahf
and
(bad)
je
std
add
xchg
stos
add
mov
sahf
and
(bad)
xor
mov
test
loope
(bad)
dec
test
out
add
out
add
fucomip
idiv
mov
or
cmc
jecxz
and
stos
add
retf
fs
dec
dec
mov
inc
pusha
mov
outs
and
inc
cs
inc
dec
jnp
jp
cli
call
add
outs
and
dec
sbb
dec
bound
add
sti
push
and
add
sti
push
idiv
lea
lea
mov
dec
push
cwde
and
add
dec
xor
xchg
mov
push
std
mov
xchg
and
jle
dec
std
sub
add
mov
xchg
and
jle
dec
std
mov
test
loope
mov
add
add
mov
add
call
mov
add
and
and
ror
or
add
mov
call
jbe
shr
ins
sti
jmp
dec
lea
or
call
gs
mov
scas
add
int3
scas
dec
lea
or
call
out
jecxz
inc
(bad)
and
mov
dec
mov
call
and
(bad)
inc
mov
add
add
add
add
gs
mov
mov
call
loope
mov
not
jmp
sub
push
mov
loope
jns
test
push
mov
loope
imul
xchg
xchg
and
ds
push
std
inc
sbb
and
mov
cli
jmp
idiv
inc
add
inc
imul
mov
sbb
and
mov
mov
xchg
scas
sbb
aas
iret
sti
push
daa
shr
mov
jmp
dec
lea
add
sti
jmp
and
mov
add
int3
test
adc
add
sti
jmp
push
push
sbb
jbe
add
lea
dec
(bad)
call
add
add
add
add
scas
sbb
es
call
pop
lea
lea
dec
push
cwde
sub
nop
(bad)
lods
add
dec
mov
std
xchg
mov
push
std
mov
call
sub
add
mov
call
mov
and
mov
inc
mov
adc
inc
add
stc
jmp
mov
cwde
test
lahf
js
imul
push
inc
lea
push
push
mov
and
xchg
test
mov
cld
xor
jl
gs
test
mov
push
push
outs
frstor
popa
outs
and
mov
imul
add
or
push
gs
or
lods
add
add
data16
push
pop
mov
shr
mov
in
adc
adc
cmps
push
add
push
mov
add
xor
idiv
(bad)
push
les
cmp
add
add
add
add
cdq
add
stos
add
pop
daa
loop
mov
push
idiv
and
inc
cmps
rcr
mov
ret
add
xchg
stos
mov
idiv
add
jmp
out
inc
adc
jmp
mov
and
pop
adc
add
and
lods
loope
test
add
add
add
or
neg
adc
pop
adc
sti
push
dec
inc
not
jnp
push
adc
out
mov
add
imul
dec
mov
loope
mov
mov
or
xchg
fbstp
in
xor
and
adc
ret
sub
mov
add
add
add
add
scas
add
xor
idiv
(bad)
mov
(bad)
not
xchg
shr
adc
call
xchg
sbb
mov
lods
loope
movs
jmp
mov
add
cmps
mov
test
retf
dec
mov
inc
push
mov
mov
add
add
add
add
stos
fnop
inc
(bad)
mov
dec
jmp
xchg
and
add
jmp
dec
push
sbb
test
jge
push
and
push
scas
jae
in
lods
les
fwait
icebp
outs
inc
jecxz
clc
or
mov
(bad)
cld
outs
fcmovb
push
add
jne
push
inc
jns
xchg
test
lock
imul
push
push
mov
not
ins
lods
les
sbb
ins
and
mov
hlt
not
sbb
ds
cmp
call
mov
loop
cmp
icebp
mov
sbb
jl
inc
pop
jmp
add
add
mov
sbb
pop
adc
rcr
stos
cld
add
or
std
mov
pushf
adc
jl
or
mov
inc
test
lods
add
and
dec
inc
imul
and
rcl
aam
adc
idiv
add
fistp
call
or
inc
idiv
mov
xchg
call
or
cli
cmp
lea
inc
test
(bad)
pop
mov
ins
add
rol
inc
mov
inc
cs
add
(bad)
cmp
shr
add
scas
sbb
xor
test
jecxz
mov
sbb
inc
cs
pushf
(bad)
lods
mov
test
fisubr
call
in
ins
mov
stos
pop
push
test
scas
add
sar
cld
call
add
adc
add
inc
cld
and
inc
ror
or
inc
call
mov
outs
sbb
push
mov
add
les
lods
call
sbb
aaa
jge
das
ins
mov
xchg
dec
add
ins
enter
push
jmp
mov
aad
add
inc
test
in
mov
call
push
ins
lods
mov
(bad)
fmul
add
enter
add
sub
cmp
inc
pop
test
inc
idiv
pop
shr
sub
fstp
inc
lea
add
outs
and
mov
add
(bad)
fbstp
idiv
gs
inc
mov
scas
pop
mov
push
enter
lods
add
data16
add
(bad)
cmps
mov
push
pop
imul
int
or
(bad)
mov
call
xor
sub
xor
add
scas
(bad)
push
std
mov
xor
int3
in
dec
push
inc
xlat
and
sbb
inc
push
call
and
add
cli
add
adc
pop
add
mov
adc
int3
cmp
mov
ss
mov
and
or
jmp
data16
adc
mov
fdiv
cs
fcomp
call
call
sbb
bound
sub
mov
dec
repnz
push
cmp
mov
jne
dec
out
mov
lahf
cmc
jmp
stos
mov
call
sbb
cmp
mov
add
add
add
add
pop
idiv
aad
ja
mov
add
ffreep
lods
jmp
sub
lods
mov
ret
data16
push
dec
retf
inc
push
das
ja
push
rol
inc
cld
mov
cdq
cmc
adc
stos
jmp
add
div
mov
out
ins
je
test
cmc
jne
add
adc
test
pop
idiv
push
inc
daa
test
lods
cs
scas
mov
cld
mov
dec
push
cmc
mov
mov
add
mov
(bad)
mov
call
mov
add
push
ret
push
mov
dec
retf
inc
sub
push
mov
call
and
add
cmp
in
inc
push
fs
push
ds
lods
cmps
sti
dec
ror
(bad)
arpl
xchg
cld
call
push
sub
jmp
dec
mov
mov
pop
ins
cld
add
popa
jmp
jmp
stos
call
add
sbb
popa
js
ins
add
sub
(bad)
adc
sti
out
mov
add
aam
test
cmp
bound
mov
std
(bad)
mov
xor
push
mov
cmp
inc
std
mov
jnp
jmp
xor
push
in
scas
mov
add
dec
dec
dec
cmp
je
xor
(bad)
jmp
add
in
sti
call
outs
fdiv
cs
fsub
mov
or
je
jb
push
push
jmp
xor
inc
push
ss
ret
call
mov
repnz
inc
out
mov
fs
xor
add
add
add
add
(bad)
sub
mov
inc
out
mov
inc
sbb
sub
jne
lea
ja
push
jle
jnp
sub
lea
cdq
sub
and
(bad)
add
push
jne
add
add
lods
xor
repz
loop
push
neg
sub
mov
add
add
add
xchg
push
call
les
add
mov
dec
cli
cwde
sub
fdiv
scas
inc
dec
std
mov
(bad)
dec
inc
dec
mov
sub
call
sbb
add
mov
jne
call
sbb
je
adc
ins
fdiv
add
mov
or
data16
imul
retf
sub
fisttp
inc
dec
mov
add
add
stc
mov
add
jne
push
(bad)
dec
das
test
inc
cwde
sub
add
clc
gs
push
dec
xor
push
dec
nop
or
xor
mov
(bad)
cwde
(bad)
jmp
cmp
sbb
and
or
mov
jg
in
add
gs
ds
test
sbb
call
ret
(bad)
jmp
inc
sub
add
add
add
add
inc
mov
arpl
loope
mov
in
jnp
loope
add
in
mov
call
(bad)
out
add
out
dec
call
dec
adc
les
xor
cli
call
and
and
mov
adc
add
lods
bound
add
repz
clc
push
xchg
retf
inc
cs
pusha
aas
adc
outs
clc
je
cwde
cmc
adc
cvtdq2ps
call
sub
push
mov
loope
xchg
push
push
mov
stos
add
push
cdq
call
sub
repnz
jmp
push
jle
ins
inc
add
ins
add
xor
sub
jmp
(bad)
lock
dec
(bad)
(bad)
not
fucomi
ins
sbb
fwait
cmp
aad
cld
add
inc
adc
clc
inc
call
retf
or
inc
push
xchg
cmc
jne
xor
inc
add
sub
push
pop
sbb
adc
xchg
pop
xor
je
add
mov
jne
xchg
sbb
inc
sahf
inc
ja
xor
mov
call
or
not
mov
cmp
fmul
push
std
and
lock
outs
dec
lea
add
mov
fmul
bound
mov
jnp
xchg
(bad)
jge
es
mov
or
inc
in
cmp
mov
inc
fmul
pop
std
xchg
pop
inc
loopne
sub
cvtps2pd
call
pop
inc
in
mov
inc
lea
cmp
call
mov
mov
cmp
fild
add
aas
mov
stos
mov
scas
lods
xor
mov
pop
pop
fcomp
bound
mov
mov
mov
add
push
cmp
out
xchg
and
rol
xor
mov
std
inc
mov
loope
sub
bound
add
cld
call
dec
fwait
loopne
jecxz
lea
pushf
mov
mov
push
std
xchg
push
inc
in
and
jno
jmp
inc
lea
cmp
push
inc
xor
ins
cld
add
scas
add
out
jns
std
loope
add
mov
sti
jmp
arpl
inc
add
mov
mov
call
arpl
mov
jb
out
mov
pop
jno
jmp
das
mov
call
sahf
cmc
adc
aad
sub
add
dec
loope
fsub
idiv
sbb
ins
and
ins
xchg
push
ds
inc
mov
inc
add
lahf
bound
jecxz
xchg
call
test
adc
lea
loop
mov
and
adc
mov
add
stc
jb
mov
rol
mov
sti
call
push
call
sbb
xlat
xor
pop
push
push
dec
aam
(bad)
rol
add
(bad)
cld
out
cdq
sti
push
mov
mov
idiv
mov
das
dec
push
pusha
je
ficom
sti
jmp
aas
(bad)
cmp
jmp
jmp
mov
neg
cwde
mov
fwait
popa
idiv
mov
scas
call
pop
(bad)
cwde
mov
xchg
pusha
sar
xor
inc
add
inc
lods
call
pop
ins
inc
lea
mov
idiv
out
add
inc
(bad)
pushf
mov
add
xor
sbb
fdiv
xchg
add
pop
xor
(bad)
pop
and
sti
jmp
sbb
push
mov
test
xchg
cld
pop
ds
jno
and
ins
inc
push
pushf
mov
add
add
add
call
cld
cs
js
xor
and
jne
fcom
test
mov
cmp
sub
gs
(bad)
fwait
mov
neg
inc
cld
int3
xor
ja
xor
mov
xchg
cld
or
pop
test
sub
push
jle
jno
mov
in
or
add
mov
mov
add
int
sub
sbb
dec
push
jecxz
push
jmp
sub
pop
(bad)
sub
push
mov
call
test
mov
(bad)
movs
inc
std
mov
aad
jmp
sub
push
adc
inc
loop
cs
cmp
imul
add
inc
jmp
mov
jle
inc
std
cmp
idiv
xchg
inc
mov
push
adc
loop
sahf
sub
push
test
sub
call
mov
and
dec
push
out
cli
test
adc
mov
or
arpl
add
daa
stos
add
xchg
cmp
dec
sub
ja
sub
mov
idiv
mov
sub
dec
xor
popa
sub
or
mov
add
add
adc
mov
adc
mov
jno
add
out
ror
sti
xchg
cmc
inc
dec
push
into
test
add
add
dec
jmp
cmp
inc
push
cs
loope
test
imul
jmp
shl
jmp
sub
(bad)
mov
dec
dec
std
inc
cs
(bad)
xchg
mov
xchg
mov
lods
mov
mov
pusha
je
and
mov
xor
push
lds
add
mov
add
cdq
mov
add
fwait
mov
pop
test
add
lahf
je
inc
idiv
xor
fwait
jmp
out
neg
pop
mov
es
(bad)
out
inc
ret
ret
add
jo
inc
mov
push
not
scas
mov
dec
ins
inc
inc
sub
inc
sub
jne
ds
ds
mov
xor
inc
(bad)
inc
mov
(bad)
jle
cmp
imul
scas
es
cmp
daa
icebp
xor
push
test
push
imul
xor
mov
iret
lods
cld
inc
xchg
mov
adc
call
add
add
add
sti
and
push
adc
or
inc
cli
int
outs
and
mov
push
jle
or
inc
and
(bad)
pop
int
call
in
dec
jmp
push
idiv
push
push
add
mov
push
mul
sti
das
repnz
pop
add
add
add
add
outs
ins
sbb
out
mov
cli
mov
cli
idiv
adc
lea
push
test
repnz
loope
loope
movs
add
stc
cmp
mov
jmp
cmp
test
add
sti
call
cmp
inc
mov
inc
cld
call
jp
into
adc
push
add
sbb
and
mov
cdq
add
inc
and
dec
jns
mov
add
mov
dec
cld
inc
xor
std
adc
cmc
and
stc
dec
push
sti
jmp
push
push
pop
pop
test
xor
shl
cmp
add
add
add
add
lods
dec
mov
aaa
in
push
jns
fisubr
add
add
dec
cld
push
pop
(bad)
les
jo
jmp
loopne
push
pop
call
mov
fcomi
mov
xor
jmp
inc
or
cmp
xlat
rcpps
lods
mov
inc
mov
mov
add
dec
add
push
stc
or
(bad)
in
add
mov
into
push
popa
(bad)
xchg
sub
or
xlat
cmp
hlt
inc
add
dec
not
pop
adc
inc
push
loope
or
arpl
mov
sub
pusha
popa
push
test
inc
ins
ret
pop
(bad)
fisttp
call
add
push
idiv
call
add
push
idiv
push
push
loope
xchg
push
test
push
(bad)
call
jns
(bad)
push
idiv
pop
sti
mov
inc
gs
jecxz
mov
add
cwde
cmc
inc
test
pop
jmp
sub
test
push
idiv
ds
cmp
pusha
inc
push
test
sub
idiv
(bad)
test
dec
idiv
popa
inc
rol
mov
test
push
idiv
xchg
mov
idiv
mov
and
loope
pushf
push
test
adc
mov
mov
sub
dec
call
movs
mov
lea
add
ins
inc
cld
and
shl
or
ret
sbb
xor
inc
cmp
push
dec
push
push
sbb
loope
sbb
push
or
cmp
lea
adc
dec
ficom
or
add
push
idiv
or
push
loope
int3
inc
imul
add
stc
mov
inc
div
in
fstp
ds
std
and
adc
adc
sbb
rcl
or
push
(bad)
push
push
std
mov
fisttp
outs
dec
std
inc
loop
lea
and
not
xor
call
add
add
pop
int
add
xor
mov
ins
repnz
push
cmp
jmp
fiadd
(bad)
pop
inc
stc
mov
inc
test
pop
push
in
adc
test
idiv
shl
cmp
loope
loope
lds
test
mov
push
add
jmp
idiv
xchg
pop
jmp
test
inc
idiv
add
aas
pop
push
xchg
mov
in
mov
dec
mov
mov
xlat
mov
inc
jge
ror
add
aam
inc
rol
int3
loop
and
mov
or
bound
mov
sti
loope
in
inc
test
mov
push
test
add
mov
add
dec
dec
push
ss
inc
cmp
xchg
pushf
sub
pop
mov
rcl
add
scas
jns
dec
mov
test
ret
and
add
retf
popa
adc
add
fbld
cmps
scas
inc
push
jle
cmp
repnz
jge
cs
add
mov
sub
xchg
scas
dec
lea
dec
push
(bad)
and
mov
pop
cmp
test
add
aad
in
add
test
add
add
ret
popa
(bad)
xchg
jmp
(bad)
pavgb
test
pusha
and
scas
add
pop
mov
inc
jge
jne
pusha
scas
sub
add
out
loope
mov
inc
mov
add
inc
xor
mov
jle
xchg
lods
xchg
fcomp
mov
push
adc
(bad)
cmp
or
nop/reserved
loope
dec
mov
inc
add
in
fisub
inc
in
fs
fimul
add
fisttp
add
mov
cmp
pop
popf
or
cmp
pop
je
lds
inc
clc
ss
dec
dec
cmp
pop
ds
adc
test
stc
test
cli
arpl
mov
pop
inc
push
inc
xor
inc
je
mov
inc
iret
jmp
stc
loope
sub
neg
xlat
loope
adc
(bad)
fst
call
(bad)
adc
(bad)
call
add
jmp
sti
add
cmp
xor
jp
jmp
stc
not
aam
push
pop
cmp
stos
add
push
loopne
inc
out
dec
test
xor
shl
jmp
ss
out
jae
push
scas
fdivr
sbb
inc
add
cmps
mov
ror
push
xchg
stos
add
jno
std
(bad)
(bad)
adc
mov
mov
movs
add
add
sar
cwde
mov
test
mov
add
cmp
lahf
data16
movs
fst
or
add
push
mov
add
mov
or
add
stos
add
xchg
loope
jbe
add
test
sub
test
test
add
je
add
inc
mov
add
cmp
mov
mov
dec
lea
push
push
pmaddwd
push
cmp
mov
mov
popa
hlt
stc
(bad)
fwait
dec
loope
xchg
cmp
push
shl
add
add
(bad)
arpl
not
fwait
push
(bad)
mov
loop
jmp
je
mov
test
add
out
add
xor
dec
idiv
pop
(bad)
cmp
pop
ss
(bad)
les
sbb
jb
test
stc
mov
jne
call
and
mov
inc
add
call
and
push
fisub
push
mov
push
dec
and
sbb
jns
and
dec
jb
test
stc
mov
loop
xchg
xchg
aam
push
jle
add
sbb
lea
gs
(bad)
jmp
ss
(bad)
loopne
(bad)
mov
add
sub
aas
sbb
pop
push
sbb
jmp
pop
cmp
jo
in
stc
addr16
inc
inc
add
jmp
jmp
aad
idiv
into
push
rol
imul
xchg
adc
test
cmp
add
add
mov
loope
xchg
jo
dec
xchg
mov
cld
call
dec
inc
dec
(bad)
sbb
stos
addr16
out
jne
cld
fisubr
jb
into
mov
loope
and
mov
cld
jmp
jmp
push
xor
popf
mov
push
cld
fwait
addr16
push
push
pop
xor
fiadd
add
add
add
add
and
adc
push
mov
dec
jmp
push
loope
and
not
sub
sar
xor
lea
loop
push
test
push
test
inc
in
aaa
loopne
mov
scas
call
test
scas
add
(bad)
(bad)
mov
jb
push
sub
add
scas
push
dec
ret
cmps
das
cmp
pop
pmaddwd
mov
aad
mov
mov
int3
inc
push
out
add
push
push
inc
(bad)
call
aad
adc
mov
inc
(bad)
jmp
and
mov
and
jmp
imul
add
push
leave
inc
(bad)
xor
je
inc
mov
call
ins
and
adc
in
xor
sbb
inc
xchg
jle
mov
mov
mov
scas
sub
inc
hlt
enter
in
xor
inc
or
ror
xchg
lods
add
loope
jge
add
call
call
cs
cs
ja
adc
add
(bad)
push
adc
inc
cmc
stc
adc
or
ins
stos
loope
ins
push
and
add
cwde
pushf
rcr
lods
or
xchg
cs
sahf
aas
cmp
call
stc
adc
or
inc
ss
fmul
add
mov
inc
data16
mov
call
fisubr
in
adc
fucom
cmc
jb
inc
stc
(bad)
imul
cmp
int3
inc
arpl
add
jle
les
popf
jmp
(bad)
push
adc
inc
call
add
or
shl
jmp
mov
scas
ret
imul
add
add
add
std
jmp
icebp
push
adc
in
xchg
gs
rol
ret
cs
and
rcl
mov
mov
cld
jmp
in
stc
mov
(bad)
mov
fld
dec
add
mov
inc
add
iret
jae
call
mov
fnstcw
or
lds
mov
stc
dec
push
sub
jmp
dec
(bad)
jmp
cli
out
loopne
call
inc
inc
pushf
imul
call
les
push
add
or
jmp
dec
inc
mov
add
fsubrp
jmp
fimul
(bad)
sbb
std
add
dec
lea
sub
mov
push
not
inc
mov
mov
xchg
inc
fimul
inc
push
dec
push
jae
mov
int3
test
call
call
xchg
fld
(bad)
cmps
inc
aam
cmps
ds
or
stos
cmps
aad
add
test
stc
xchg
imul
mov
mov
add
cld
adc
data16
inc
push
cmp
mov
aad
mov
inc
xor
dec
or
mov
add
add
mov
cmp
mov
mov
or
cmp
mov
add
cmp
mov
or
or
add
dec
mov
test
add
add
push
cmp
mov
adc
mov
mov
add
(bad)
or
push
cmc
shl
mov
mov
xor
stc
test
int3
add
imul
adc
add
adc
sub
fs
add
and
inc
push
cmp
add
int
add
stos
mov
inc
(bad)
xlat
in
sub
loope
pop
inc
test
cs
push
fld
inc
in
xor
inc
add
arpl
in
lods
addr16
xchg
scas
add
add
jl
lock
rol
push
add
inc
lock
mov
gs
cmp
jno
sbb
scas
adc
daa
mov
and
shr
mov
cli
call
scas
bound
scas
xor
out
je
or
mov
add
add
add
add
scas
xor
mov
pusha
fld
stc
mov
dec
call
push
mov
mov
ror
mov
inc
push
(bad)
in
stos
mov
inc
cmp
jmp
push
mov
ret
sub
inc
cmp
jno
lea
scas
push
push
js
inc
xchg
add
jp
data16
cli
push
xor
or
lods
add
xchg
mov
icebp
add
push
test
sti
inc
stos
sub
jl
jg
cmp
stc
call
lods
add
fyl2xp1
call
cmc
adc
out
clc
fnstcw
and
add
mov
in
int
stc
mov
call
mov
scas
(bad)
jmp
popf
out
add
adc
pop
clc
in
mov
jle
je
xor
or
push
test
push
add
and
enter
cmp
inc
xchg
(bad)
add
add
add
add
add
clc
jmp
inc
xchg
aaa
mov
jmp
dec
lock
and
mov
jp
mov
in
add
iret
fdivr
lds
test
mov
sbb
jp
cs
test
or
xor
mov
packssdw
idiv
inc
xor
add
add
add
add
cwde
xchg
inc
in
pop
neg
test
enter
or
jmp
xor
push
dec
sub
stos
xchg
xor
jp
call
das
push
adc
or
dec
cmps
jg
adc
ins
adc
push
cli
je
es
fsub
scas
into
add
add
inc
or
cmp
loope
cmp
imul
or
stos
add
out
add
pop
icebp
add
fld
mov
inc
cmps
ret
fld
pop
std
mov
lea
cmps
ret
pop
mov
inc
mov
dec
cmp
add
or
pop
sub
(bad)
loop
fwait
gs
lea
pop
dec
lea
dec
lea
dec
lea
dec
call
movs
outs
adc
sar
push
stos
cmc
jne
push
adc
inc
aad
mov
inc
and
xchg
jbe
sbb
mov
test
dec
jmp
or
dec
xchg
sub
in
add
or
call
add
mov
out
lds
les
pop
mov
(bad)
sub
(bad)
pop
vrsqrtps
sub
add
cmp
retf
mov
adc
dec
push
mov
scas
xor
dec
adc
test
stc
dec
xchg
mov
cdq
sbb
hlt
mov
in
mov
test
retf
dec
xor
and
dec
retf
cdq
rol
stc
mov
add
mov
xor
ret
push
mov
test
xlat
idiv
popf
pusha
add
loope
mov
mov
dec
pushf
add
scas
push
ja
and
mov
pop
stc
jmp
nop
mov
hlt
fsub
stc
mov
mov
xor
aaa
xchg
cmp
xchg
int
mov
add
inc
lock
and
push
movs
movs
cmp
nop
add
inc
scas
cmc
xor
out
ss
adc
mov
inc
aam
stc
push
lods
cmp
ds
(bad)
in
push
(bad)
aam
lea
pop
dec
push
inc
mov
rcr
scas
bound
mov
add
scas
bound
mov
scas
call
pop
not
hlt
iret
call
idiv
(bad)
div
cld
scas
bound
mov
es
inc
sbb
mov
not
in
(bad)
xor
lahf
rcr
push
(bad)
and
adc
stos
cmp
test
mov
inc
add
les
xchg
mov
rcr
push
dec
mov
inc
push
rsm
cmp
scas
xor
shr
adc
jo
push
add
lods
inc
push
jmp
and
movs
pusha
pop
mov
mov
pop
mov
lahf
pop
mov
mov
mov
(bad)
mov
sub
push
add
retf
gs
mov
add
jns
retf
mov
retf
mov
and
push
sbb
sti
call
push
and
mov
add
add
js
jns
popf
dec
pop
mov
lods
ret
test
pop
mov
popf
rol
pushf
(bad)
mov
aad
pop
mov
lods
ret
mov
popa
fsubr
mov
mov
out
mov
add
push
rcl
mov
and
cli
leave
jecxz
cli
fbstp
pop
mov
ret
mov
leave
mov
cmps
add
repz
repz
scas
repz
push
stos
add
es
mov
daa
lods
add
repz
add
xchg
scas
ret
xchg
stc
leave
in
pop
mov
lods
ret
icebp
pop
mov
hlt
call
stc
popa
and
jmp
retf
inc
xchg
or
add
sub
xchg
pop
test
imul
jge
stc
push
dec
jle
std
adc
stc
imul
cmc
xor
add
mov
sbb
(bad)
test
xchg
and
(bad)
adc
inc
push
add
pop
jmp
imul
push
pop
into
mov
inc
out
adc
je
stc
pop
xchg
cli
popa
and
in
stc
(bad)
mov
or
add
cld
mov
inc
add
push
dec
inc
sti
mov
(bad)
jmp
push
div
inc
sar
push
ret
data16
cmc
xor
mov
sbb
in
cli
test
add
push
sbb
or
inc
es
pushf
int
stc
imul
xor
aam
push
pop
mov
push
adc
test
stc
pop
movs
std
sub
add
inc
mov
movs
ins
mov
cld
xor
inc
mov
sbb
add
cmp
push
xor
pop
jmp
push
data16
test
outs
stc
dec
int3
mov
stc
jmp
jne
ds
je
and
mov
push
js
adc
mov
sub
in
push
call
add
add
add
and
fcomip
or
retf
cmp
xor
stc
xor
cmp
ins
mov
clc
add
stc
addr16
mov
bound
cld
shl
cmp
and
dec
dec
push
mov
mov
dec
push
ror
es
mov
add
stc
out
xor
(bad)
(bad)
je
ins
int
pop
test
sahf
bound
mov
cmc
adc
movs
or
jne
in
add
outs
outs
stc
or
jnp
idiv
inc
mov
cmc
adc
aad
mov
push
popa
int3
xor
pop
not
inc
push
xor
add
ins
stc
imul
mov
cs
mov
xlat
jbe
add
arpl
retf
jbe
add
ret
outs
fidivr
inc
fadd
pushf
dec
imul
idiv
outs
xor
adc
dec
jmp
outs
retf
inc
push
push
stc
cmp
scas
and
add
xchg
add
clc
aam
mov
cmp
scas
call
mov
xchg
add
fs
inc
cmp
cmps
xlat
add
mov
or
cmp
or
xchg
push
in
cmp
xchg
sbb
jno
add
sub
xor
mov
add
retf
mov
pop
push
push
js
call
dec
push
mov
mov
add
f2xm1
icebp
add
ins
fidiv
pusha
push
ret
sub
in
sbb
loope
pop
add
cmp
mov
adc
inc
cmps
lods
je
cld
mov
fmul
addr16
out
sub
(bad)
out
mul
sub
mov
add
add
add
add
stc
out
js
(bad)
fld
lea
add
or
cli
mov
(bad)
mov
add
sbb
outs
pop
popf
out
loope
dec
add
add
push
mov
(bad)
leave
inc
push
pop
not
xchg
adc
pop
jmp
std
jmp
shr
xor
push
in
stos
dec
dec
mov
xor
jne
stc
push
sub
ja
(bad)
js
stc
imul
xor
idiv
and
pop
cmp
(bad)
adc
add
push
dec
jmp
div
add
add
loope
xchg
in
jne
mov
add
jmp
dec
(bad)
fninit
mov
adc
add
push
int3
stos
mov
adc
xor
adc
mov
xor
fs
(bad)
cmp
inc
xchg
xchg
push
and
pop
mov
xor
pusha
mov
pop
mov
inc
movs
(bad)
rcr
add
mov
pusha
cmp
inc
xor
and
enter
mov
jbe
adc
add
cmp
cmp
stos
jns
cs
ds
jle
test
(bad)
adc
gs
jmp
mov
iret
sbb
adc
adc
add
ror
adc
mov
xlat
cmp
jge
(bad)
add
shl
dec
push
mov
or
in
mov
cmp
mov
shl
inc
add
lods
enter
(bad)
ror
js
push
pop
cld
xor
cli
or
cmp
stc
jmp
iret
sub
xor
sbb
add
sub
scas
fisub
stos
sub
retf
shl
stc
(bad)
int
test
(bad)
fistp
(bad)
mov
sub
add
jmp
jl
and
fmul
lock
mov
shl
addr16
mov
add
shl
sub
(bad)
jp
ss
mov
xor
inc
add
pop
mov
loope
and
test
sub
jmp
dec
xlat
and
mov
(bad)
mov
mov
and
or
cmp
inc
xchg
mov
cmp
add
fwait
mov
shr
test
pop
dec
call
in
stos
sub
and
and
mov
xor
add
movs
mov
mov
call
mov
retf
adc
pop
mov
cmp
mov
sbb
pop
fs
add
scas
add
add
pop
push
mov
pop
sub
or
push
xchg
addr16
add
in
xchg
scas
add
pop
mov
xor
pop
mov
mov
mov
movs
jge
and
outs
push
test
mov
add
loop
jmp
jnp
dec
xor
scas
add
add
scas
cmc
jne
hlt
adc
mov
stc
mov
lahf
xor
scas
(bad)
call
daa
retf
fld
test
scas
add
movs
fadd
jmp
ja
test
xchg
test
fldcw
neg
adc
adc
jle
jmp
sti
push
add
xor
call
stc
call
movs
jne
add
call
jmp
not
popf
mov
bound
mov
dec
mov
retf
dec
daa
sbb
addr16
test
ds
repnz
stos
add
clc
and
and
repnz
stos
add
or
ds
repnz
or
ds
sub
scas
pop
div
not
adc
xor
ins
and
repnz
lea
xchg
xor
mov
sbb
and
repnz
lea
and
xchg
inc
cmp
adc
call
pop
div
not
arpl
inc
ss
and
icebp
iret
lea
add
leave
dec
push
xchg
test
add
lods
add
jmp
not
xchg
test
rcr
lods
push
mov
enter
add
or
xor
repnz
and
repnz
push
mov
lods
add
stos
aad
(bad)
stc
xor
fwait
test
add
push
icebp
ins
and
icebp
into
push
xchg
add
jo
add
mov
fld
adc
push
pop
dec
add
pop
div
push
jmp
enter
push
retf
cmp
(bad)
stos
cmc
jne
lock
enter
pop
not
sub
pusha
sbb
jmp
int
push
or
gs
add
add
add
add
sbb
je
pop
arpl
jne
adc
cmc
ins
stc
addr16
pop
inc
add
jge
pop
(bad)
hlt
sub
and
stos
add
push
add
test
loope
push
test
stos
push
lea
mov
mov
(bad)
stos
mov
jmp
test
imul
cli
cmp
add
add
add
add
and
add
push
in
jge
jp
add
movs
add
repz
mov
jno
mov
mov
jmp
add
add
retf
add
call
push
add
retf
add
stos
call
push
add
or
sti
inc
add
bound
arpl
pop
ds
std
inc
add
sub
not
sub
mov
test
add
sbb
pop
sbb
jmp
pop
dec
push
mov
test
add
add
imul
push
and
add
sbb
add
add
mov
dec
push
adc
push
xor
ja
call
push
sbb
sub
inc
inc
and
mov
mov
clc
push
pop
dec
jmp
xchg
ins
add
stos
or
inc
xchg
sbb
mov
imul
add
add
add
js
add
mov
mov
into
mov
int
push
mov
xor
(bad)
call
pusha
div
cmc
(bad)
popf
stos
js
pop
mov
inc
cmp
mov
push
push
mov
rcl
fimul
inc
fisub
xlat
scas
add
fld
add
add
add
add
test
aam
add
fs
and
rol
pop
pop
dec
dec
dec
retf
rol
xor
mov
dec
push
pop
lods
push
in
adc
stc
push
in
cmc
jp
push
das
in
pop
outs
adc
push
rol
call
or
out
outs
add
xor
add
out
je
push
ds
pop
dec
dec
sbb
inc
push
hlt
outs
cmp
imul
jp
loope
mov
test
cdq
dec
push
mov
scas
or
sub
mov
in
mov
jp
sahf
das
in
neg
inc
mov
call
add
add
add
add
stc
xchg
repz
sub
je
adc
dec
(bad)
cmp
retf
inc
es
inc
cmp
push
std
(bad)
sub
push
call
pop
div
repnz
and
div
(bad)
not
and
pop
dec
dec
and
inc
(bad)
push
inc
and
push
push
xor
shr
pop
idiv
dec
or
bound
add
bound
imul
popa
mov
repz
repnz
mov
cmp
call
and
ds
std
and
push
ja
jmp
add
inc
es
cmc
ins
stc
scas
sahf
stc
jmp
mov
sar
ins
(bad)
mov
cs
add
xor
dec
dec
call
ins
jmp
cli
aas
cmp
sub
or
stc
mov
cld
dec
(bad)
(bad)
or
xchg
lods
xchg
fld
lods
add
mov
mov
inc
jbe
bound
scas
mov
inc
add
imul
or
xchg
add
call
leave
in
stc
push
lods
add
jne
hlt
ins
xchg
icebp
pop
test
data16
aas
lods
xchg
or
pusha
add
lock
inc
div
xchg
xchg
sbb
add
adc
loope
xor
neg
in
je
(bad)
hlt
adc
fisubr
xchg
jmp
push
jns
shl
in
xchg
test
xor
dec
gs
mov
dec
cmp
ret
psubw
stos
test
mov
(bad)
call
sub
pop
clc
add
cwde
iret
mov
(bad)
mov
cmp
stos
jne
ret
(bad)
and
add
mov
add
cmps
mov
add
xchg
mov
imul
mov
inc
xchg
daa
or
pop
arpl
mov
mov
imul
push
das
fincstp
jbe
jmp
aam
mov
push
outs
scas
add
es
call
dec
pop
retf
dec
sti
out
add
pop
idiv
push
jmp
jmp
xchg
mov
push
int3
(bad)
retf
mov
inc
out
or
iret
arpl
mov
cmps
xor
jmp
call
jmp
ror
dec
jmp
aam
test
add
test
aas
add
je
call
inc
add
adc
inc
xor
cld
inc
ins
stc
addr16
stos
add
jl
push
jmp
add
mov
pop
test
mov
jb
mov
pop
sub
and
aam
pop
leave
call
outs
pop
cmc
cmp
leave
je
xor
cs
(bad)
in
in
mov
sub
pop
ins
cmc
add
add
jns
add
pop
lods
mov
aad
mov
inc
shl
lods
push
add
call
arpl
push
sub
add
mov
std
and
add
pop
lods
mov
loope
cmp
test
adc
neg
out
mov
jg
fistp
cmc
add
ret
pop
std
add
inc
jns
add
lods
mov
aam
addr16
imul
xchg
add
and
cs
xchg
ja
push
cld
scas
mov
enter
rol
(bad)
mov
scas
add
ds
inc
jl
in
push
mov
ins
idiv
adc
icebp
add
outs
in
div
push
push
mov
add
ret
bound
mov
int
pop
fld
add
scas
call
cmp
stc
imul
mov
idiv
inc
rcr
(bad)
gs
lds
rol
call
dec
icebp
out
(bad)
scas
adc
cld
test
cmc
add
sub
je
cmp
not
add
shl
pop
mov
cmp
and
shl
(bad)
stos
in
sti
out
cmp
int
mov
call
ins
cdq
inc
inc
div
test
dec
lea
mov
cmp
push
sub
mov
outs
and
add
sbb
xor
add
in
test
lea
shl
jmp
cmc
add
and
add
scas
add
(bad)
stc
call
sub
mov
(bad)
stc
(bad)
(bad)
mov
sbb
add
inc
jne
call
(bad)
(bad)
shr
mov
cmp
mov
sub
inc
add
lds
add
lods
(bad)
call
pusha
int
sbb
(bad)
out
test
(bad)
clc
inc
add
mov
ror
cmps
pop
mov
adc
call
adc
jp
xchg
sar
cmp
jmp
idiv
push
shr
rcl
lea
les
add
add
add
add
rcr
fist
and
mov
mov
add
pushf
jl
shl
mov
and
mov
loope
cmp
test
shl
push
outs
fs
call
pop
lods
push
imul
rol
dec
clc
into
test
add
add
add
idiv
xchg
stos
jae
cld
lods
push
push
inc
add
jge
test
shr
test
mov
(bad)
mov
ins
stc
arpl
jnp
in
cs
add
mov
adc
push
cwde
mov
add
stos
dec
push
leave
or
adc
ss
jle
mov
stos
add
xchg
aas
add
mov
cmc
adc
sbb
stos
xchg
and
aad
jp
cli
pop
push
mov
cmp
popa
push
inc
add
cmc
xor
ror
push
or
add
dec
dec
cmp
jp
inc
std
shl
sub
xchg
add
add
add
call
pop
test
aas
add
push
rol
push
stos
aad
ss
aas
add
stos
(bad)
stc
sahf
movs
hlt
jle
stos
call
(bad)
dec
cmp
repnz
fild
mov
ins
adc
(bad)
repnz
add
out
inc
add
pop
dec
sbb
cmp
test
mov
xor
and
mov
add
sub
adc
jge
es
add
outs
jp
mov
add
sub
add
inc
mov
mov
cmp
sbb
(bad)
pop
lea
out
dec
idiv
cwde
sub
add
add
dec
stc
dec
push
ins
sbb
push
mov
pop
dec
(bad)
fisubr
fmul
cmp
mov
add
inc
xor
inc
push
pusha
mov
pusha
mov
add
call
sbb
push
dec
xchg
or
lock
push
fmul
push
cmp
add
mov
pop
scas
arpl
push
xor
adc
mov
popa
fcomp
dec
stc
dec
imul
jge
out
scas
add
into
xlat
repz
arpl
or
int3
add
jmp
les
stc
xor
add
pop
dec
lea
mov
scas
call
push
mov
and
add
ret
dec
push
sar
sbb
adc
(bad)
retf
add
scas
call
push
jns
lods
and
mov
add
pop
dec
(bad)
fisubr
call
add
(bad)
jmp
ss
and
mov
add
sbb
popa
ss
cmp
scas
loope
in
jmp
push
lea
add
push
call
aas
ss
add
pop
dec
xor
xor
dec
dec
stc
dec
ds
jmp
das
mov
and
pop
in
pop
pop
mov
(bad)
call
call
movs
retf
mov
inc
add
xor
and
scas
add
ss
mov
add
add
aad
push
xchg
ret
jp
mov
dec
lea
mov
(bad)
lods
push
(bad)
sub
add
pusha
cld
call
pusha
inc
add
xor
and
popa
mov
add
call
sbb
(bad)
inc
lods
add
sbb
sbb
push
out
or
dec
lea
add
(bad)
cld
inc
add
stc
and
std
sbb
call
add
dec
loope
xchg
not
das
ins
and
aad
and
dec
push
and
sbb
mov
lea
add
mov
sbb
add
inc
stc
inc
add
retf
shr
aam
ins
adc
pop
jmp
jge
inc
aad
adc
add
lods
xor
xchg
aad
mov
cmp
(bad)
push
cmp
lea
push
cdq
les
mov
call
or
stos
out
pusha
push
pop
sbb
stos
add
push
aam
dec
nop
mov
popa
xchg
xchg
stos
add
ds
pop
inc
sar
arpl
xor
lods
test
(bad)
ins
inc
add
inc
int
push
push
jmp
mov
arpl
mov
jl
fdiv
scas
retf
mov
add
mov
repz
and
cs
add
jg
xchg
mov
inc
sub
stos
push
lea
adc
jmp
cli
out
push
call
or
(bad)
repnz
inc
cmps
pop
push
(bad)
pop
mov
cld
(bad)
(bad)
jns
jb
dec
arpl
mov
dec
lea
add
mov
je
(bad)
and
std
add
lea
ss
ss
mov
mov
mov
inc
bound
inc
mov
test
(bad)
sti
jmp
adc
sbb
call
xor
mov
push
push
dec
jecxz
xchg
sub
adc
pop
cmp
stc
jmp
mov
add
jge
mov
repnz
stos
mov
push
test
test
push
push
mov
mov
dec
or
mov
div
dec
sub
call
sbb
mov
or
push
push
sub
inc
add
rcr
add
dec
sub
mov
rcr
inc
xor
cmp
push
data16
add
call
mov
pusha
mov
jbe
inc
cld
gs
dec
and
not
cmp
(bad)
pop
mov
cld
inc
add
jo
jmp
mov
mov
push
mov
sti
out
pushf
sti
jmp
lock
popa
aas
add
sub
mov
imul
jle
inc
std
sub
dec
lea
fdivr
into
into
shl
push
inc
cs
mov
mov
sti
inc
add
jl
sub
pusha
aas
add
imul
(bad)
adc
loope
cmp
mov
imul
dec
pop
mov
div
mov
dec
lea
xchg
pop
pop
idiv
xchg
pop
loope
repz
push
lea
idiv
xchg
jmp
cld
add
cdq
cmps
xlat
loopne
scas
dec
push
adc
(bad)
xchg
sar
mov
and
cmp
inc
shl
xchg
js
test
shl
push
mov
and
test
mov
stc
jmp
mov
push
ja
std
xchg
pop
dec
lea
idiv
mov
cmps
jno
add
push
ror
jae
jns
mov
scas
add
push
call
popa
sar
mov
or
idiv
xchg
pop
dec
lea
idiv
mov
iret
jns
and
idiv
data16
lods
add
and
test
ins
lock
call
add
inc
add
rcl
fsubp
inc
cld
pop
movs
push
fwait
add
pop
mov
shl
push
mov
add
fcmovnbe
add
(bad)
mov
into
mov
mov
push
jmp
test
push
cmp
adc
add
jmp
inc
add
add
add
mov
addr16
or
inc
sub
inc
cld
push
movs
sub
push
jne
lea
imul
jb
cld
(bad)
jns
mov
push
jno
std
mov
mov
dec
and
dec
std
push
shl
inc
test
not
dec
into
mov
inc
add
pop
mov
outs
jae
std
xchg
pop
dec
lea
fsub
dec
mov
sub
call
stos
bound
inc
push
jne
scas
xchg
sbb
push
mov
mov
test
shl
xor
add
mov
add
dec
inc
jno
shl
aad
call
add
add
add
xlat
hlt
stc
call
jmp
cld
adc
jbe
out
jns
loop
lds
pop
inc
add
in
inc
cld
in
push
dec
mov
mov
jp
(bad)
pop
arpl
xor
(bad)
stc
and
(bad)
repz
xchg
je
not
test
dec
repnz
dec
push
add
dec
loope
std
adc
mov
test
shl
xor
and
push
pop
test
pop
cld
(bad)
and
std
mov
test
inc
cld
out
push
and
rol
call
pop
mov
add
cmc
add
ins
jmp
jno
sahf
jo
jb
(bad)
cmp
add
pop
or
sub
cmps
push
not
inc
pop
add
(bad)
aam
push
int3
mov
jne
call
addr16
mov
jl
sti
jmp
jns
hlt
scas
sbb
push
push
imul
(bad)
mov
(bad)
not
mov
add
cmp
(bad)
mov
xor
fsubr
cmp
cli
icebp
or
stc
dec
add
mov
cmp
pusha
mov
sbb
(bad)
add
scas
cmp
(bad)
mov
pusha
mov
pusha
mov
inc
pushf
aam
sbb
or
sbb
push
xchg
inc
add
adc
test
(bad)
jl
mov
call
dec
(bad)
outs
or
inc
shr
pop
stc
idiv
pop
stc
icebp
or
stc
dec
add
outs
jo
jmp
dec
(bad)
jmp
bound
jmp
cmp
add
das
mov
inc
xchg
pop
mov
add
popa
mov
rcr
mov
add
pusha
mov
add
loope
adc
test
aad
add
pop
inc
test
call
xor
clc
pushf
pushf
mov
(bad)
xor
push
dec
jo
jmp
jle
add
push
pop
jmp
add
add
(bad)
scas
mov
idiv
stc
add
adc
lea
xor
jmp
mov
mov
loope
jmp
and
jmp
sub
add
test
arpl
sar
jns
adc
sbb
sar
push
pop
aas
add
and
mov
scas
jg
std
push
mov
mov
sbb
idiv
out
add
lods
dec
std
mov
shl
add
out
ins
push
push
and
mov
enter
iret
test
or
add
call
mov
call
ror
add
data16
out
jmp
imul
out
adc
dec
jns
xchg
ror
push
sti
idiv
xchg
in
add
fld
adc
std
inc
pop
arpl
push
or
xchg
shl
jecxz
iret
not
stos
mov
push
jo
call
sub
add
iret
idiv
jle
rol
cmps
adc
push
pop
mov
mov
shl
(bad)
ds
and
inc
cmc
mov
(bad)
and
mov
mov
stos
add
and
push
into
outs
cmc
call
jle
out
inc
push
push
or
push
dec
sub
jmp
cmp
stc
inc
add
push
push
push
neg
xchg
ror
xor
idiv
mov
xchg
jl
cmps
stos
dec
push
push
call
adc
not
dec
xchg
loope
outs
into
not
jne
rcr
mov
add
adc
pop
and
div
push
dec
fdivr
mov
add
sub
lods
ror
push
fadd
cmp
fist
retf
(bad)
gs
inc
and
ins
dec
std
mov
in
cld
in
gs
mov
push
mov
retf
cmp
mov
leave
xchg
push
xchg
retf
jp
mov
adc
cld
inc
add
sbb
loope
movs
retf
jbe
inc
test
cmp
add
ret
add
jp
xor
pusha
pop
mov
lea
dec
(bad)
pop
int
out
(bad)
cld
call
sub
movs
and
cmp
sbb
cld
jmp
add
inc
add
sbb
sbb
mov
xor
loope
scas
int3
not
sbb
dec
mov
jns
call
iret
test
mov
mov
inc
push
push
push
mov
cmp
xor
sbb
add
dec
inc
cmp
into
xor
aas
addr16
dec
inc
jmp
add
sbb
popf
sub
idiv
jecxz
cmp
adc
jg
push
sbb
iret
data16
jne
loopne
jmp
pop
mov
inc
cmps
enter
into
mov
cmp
pop
cmp
adc
jg
push
sbb
pop
addr16
jne
fild
jmp
pop
enter
push
jmp
push
sbb
dec
data16
jae
add
in
int
mov
inc
inc
sub
call
mov
mov
daa
pop
xchg
int
aas
mov
neg
out
push
(bad)
les
dec
inc
imul
and
call
scas
push
add
ds
dec
sub
shl
xor
inc
retf
gs
xor
mov
add
add
add
mov
add
test
add
inc
pop
jmp
stc
jmp
loope
add
jmp
mov
rcr
add
xor
cmp
and
dec
test
add
and
add
pop
test
add
add
add
(bad)
scas
jmp
in
stc
(bad)
mov
push
mov
add
int
push
or
mov
sbb
xchg
popa
add
(bad)
dec
dec
inc
xchg
test
stos
cmps
push
push
ds
pop
std
and
stc
(bad)
cmp
inc
es
sbb
add
cmp
call
pop
test
xor
call
dec
lea
mov
push
jae
sbb
(bad)
push
icebp
add
lods
cli
out
sahf
stc
inc
mov
inc
mov
mov
mov
add
xchg
test
lods
xchg
add
add
je
xlat
or
add
lods
add
cmp
inc
nop
test
lea
push
lea
push
lods
mov
add
scas
call
push
sub
mov
loope
in
(bad)
not
stos
mov
sbb
xchg
mov
mov
add
add
add
and
jmp
lods
sub
pop
and
add
and
jle
push
adc
jne
mov
les
pop
jp
jge
call
push
mov
ins
and
and
add
cli
adc
add
dec
mov
add
leave
nop
adc
add
inc
push
test
out
call
cmp
push
mov
cmp
lods
xchg
cld
stos
mov
dec
lea
mov
xor
mov
add
lea
stos
add
add
mov
ins
and
rol
add
xchg
push
xor
add
stos
(bad)
out
jne
jmp
lea
mov
sbb
js
sub
add
ds
inc
xor
mov
stos
sub
cwde
sub
add
outs
cmp
add
sbb
std
mov
sbb
jle
or
add
push
sbb
clc
stos
add
and
jno
adc
retf
inc
push
aaa
arpl
rcr
sbb
std
add
add
push
stos
leave
add
push
mov
add
stos
mov
stos
add
out
push
pop
sub
test
loope
add
rcl
mov
in
push
mov
add
sbb
(bad)
fimul
add
test
mov
pop
imul
sub
cld
(bad)
fnstsw
ins
and
cmp
xor
cmp
push
and
or
jno
mov
or
test
cmp
push
dec
adc
inc
mov
imul
jo
cmp
push
std
inc
cmp
lea
lea
(bad)
mov
sar
(bad)
lds
into
lds
jne
stc
cmp
or
inc
sbb
jmp
push
mov
loope
cmp
dec
sub
jle
idiv
add
lahf
xor
and
cwde
cmp
lds
(bad)
sar
adc
cwde
push
pop
add
div
loope
loop
neg
(bad)
adc
hlt
sub
jg
mov
add
jb
aam
(bad)
cmps
cmp
jp
push
push
sbb
stc
dec
xchg
cmp
les
test
or
jle
fdivr
add
stc
(bad)
mov
and
xor
daa
and
out
or
mov
ins
stc
addr16
pop
inc
add
push
mov
(bad)
mov
ins
stc
arpl
pop
sub
mov
add
pop
aas
add
stos
dec
lea
scas
mov
add
mov
ins
sbb
call
gs
add
dec
xchg
retf
cmp
pop
push
pop
ins
sbb
inc
cs
jmp
xchg
mov
js
mov
std
jmp
sbb
adc
mov
cli
sbb
add
add
add
add
add
mov
xchg
cmp
aaa
inc
and
cmp
daa
es
xchg
mov
mov
mov
mov
pushf
or
mov
mov
mov
mov
sbb
stc
test
adc
xchg
lods
mov
loop
lods
xchg
mov
add
add
add
add
fwait
or
mov
dec
xor
outs
stc
test
mov
mov
lods
add
xchg
add
pop
cmp
mov
imul
cld
call
shl
daa
stc
mov
mov
call
gs
add
(bad)
push
test
add
aad
(bad)
lods
call
mov
mov
add
mov
inc
neg
sub
xor
sbb
call
mov
test
lods
add
sbb
sbb
add
dec
fwait
jmp
and
je
pusha
mov
add
scas
push
lea
lods
push
call
add
movs
test
push
sbb
add
lods
call
push
and
cmp
call
xchg
popa
adc
lods
and
lods
add
outs
and
std
xchg
push
stc
push
push
clc
sbb
call
and
stos
add
sub
dec
(bad)
jmp
xor
test
add
mov
mov
stos
sbb
mov
ret
ret
sbb
mov
div
sub
imul
pop
out
add
stos
add
push
pop
cld
jmp
sub
add
test
add
cmps
mov
cmp
mov
fisttp
push
pop
xor
add
jle
or
mov
mov
mov
add
retw
inc
mov
lods
and
stos
add
ror
std
and
arpl
sar
sbb
call
push
push
sar
mov
jae
(bad)
sbb
and
addr16
call
mov
stc
mov
add
mov
fstp
mov
dec
or
(bad)
mov
dec
inc
add
test
push
pop
fucom
in
gs
and
scas
ror
inc
cli
(bad)
jnp
retf
inc
dec
leave
cmc
xchg
test
cmp
push
outs
test
xchg
test
add
mov
out
dec
retf
inc
push
(bad)
stc
daa
es
mov
loope
imul
mov
shl
cmp
add
(bad)
shl
sbb
mov
mov
push
std
popa
sub
inc
imul
dec
sub
mov
mov
mov
and
div
mov
arpl
adc
(bad)
add
pop
cld
(bad)
mov
div
mov
cmp
cmp
adc
out
sub
call
movs
push
mov
loope
or
xchg
cmps
std
xchg
sub
je
loope
or
and
call
data16
push
retf
bound
or
cmps
std
xchg
sar
sbb
pop
add
xchg
sbb
or
and
call
sbb
ins
push
sub
addr16
push
mov
sbb
(bad)
je
out
or
ins
add
xchg
add
dec
add
out
mov
sbb
ins
mov
test
or
mov
enter
std
add
mov
call
add
cmc
add
call
loope
stc
mov
inc
adc
sbb
add
dec
or
(bad)
and
or
dec
or
out
call
sbb
ins
adc
jne
mov
mov
sub
and
fnsave
pop
sub
mov
sbb
or
fild
sub
or
retf
cmps
std
mov
add
call
jne
mov
data16
adc
xor
aad
sub
rcl
ret
in
jno
lods
and
out
sbb
jmp
add
popa
jp
xchg
scas
call
xor
outs
add
dec
or
and
or
xor
xor
cmp
and
loope
retf
mov
cmp
mov
push
mov
mov
pop
lahf
adc
(bad)
fstp
add
or
call
add
add
add
and
push
and
add
push
jp
data16
add
cwde
or
xor
dec
mov
mov
and
(bad)
mov
sub
popa
pop
icebp
push
add
data16
in
push
stos
add
mov
adc
push
jge
mov
add
lods
dec
push
mov
cmp
les
jge
push
scas
add
cmp
stc
call
lods
add
stos
push
mov
dec
adc
dec
stc
push
sub
push
outs
pop
retf
sub
and
lods
add
xchg
fidivr
dec
mov
(bad)
sbb
add
dec
sbb
add
push
inc
sub
ret
and
mov
jg
stc
push
and
push
sti
jmp
test
not
test
je
jg
pop
and
mov
sbb
mov
sub
mov
mov
arpl
sbb
mov
add
ret
cmps
stos
dec
lea
dec
test
les
add
cld
pop
dec
(bad)
sbb
add
test
add
push
test
inc
push
loope
and
test
(bad)
test
add
ficomp
mov
js
jge
mov
add
(bad)
ss
inc
add
push
loope
and
stos
add
pop
cmp
out
jge
pop
stos
add
inc
mov
icebp
jg
(bad)
test
fwait
add
ins
stc
mov
jle
add
ins
stc
addr16
aas
add
sub
add
push
mov
push
and
add
and
call
jmp
mov
add
stos
adc
mov
mov
add
jo
jmp
push
add
fstp
test
jge
call
pop
out
dec
lea
jge
push
push
std
sbb
(bad)
sbb
add
mov
inc
add
cmp
(bad)
bnd
call
inc
cmp
(bad)
fimul
mov
jl
add
call
(bad)
jmp
push
out
ds
loope
popa
cmp
add
pop
or
mov
cmp
rol
mov
not
ins
arpl
cmp
add
mov
dec
loop
ret
mov
dec
mov
nop
out
push
cld
mov
int
xchg
and
xor
xchg
dec
popf
rcr
scas
add
sub
add
scas
add
in
jno
cmp
push
idiv
cmp
mov
sbb
outs
stc
mov
mov
dec
or
add
adc
xchg
mov
add
dec
push
and
adc
xor
scas
add
jmp
cmp
mov
je
ins
stc
imul
mov
push
outs
mov
xchg
cmp
scas
add
xchg
cmp
(bad)
mov
jmp
pop
movs
rcr
dec
push
mov
ins
add
(bad)
sbb
mov
and
cmp
mov
mov
fcom
jle
jge
ret
add
loope
sti
mov
pop
pop
cmp
adc
lds
stc
(bad)
sti
stc
retf
inc
out
mov
add
mov
and
cs
scas
dec
jne
aaa
cmp
ss
adc
add
jp
add
mov
(bad)
out
or
(bad)
imul
inc
xchg
aam
or
push
push
dec
pop
popa
add
add
pop
stc
jmp
imul
adc
adc
cmp
cmc
xor
mov
(bad)
in
mov
sub
add
add
lods
call
mov
xor
inc
(bad)
mov
dec
xchg
mov
xor
outs
adc
popa
add
xchg
jle
test
dec
movs
add
mov
cmp
dec
je
push
adc
cmp
sbb
add
sub
std
and
add
inc
popa
jge
pop
lods
add
es
push
test
lods
add
ds
sub
push
lods
add
mov
stos
or
xchg
sub
push
pop
mov
mov
jecxz
xor
xor
xor
hlt
pop
cmp
inc
xchg
mov
adc
arpl
add
add
inc
jmp
jecxz
jne
add
jae
stos
neg
sub
inc
push
add
or
stos
mul
test
dec
loope
mov
push
dec
div
not
jbe
adc
inc
in
mov
push
loope
(bad)
jmp
retf
inc
(bad)
enter
scas
xor
add
stos
adc
je
add
frstor
mov
add
and
stos
or
jmp
stos
dec
mov
inc
sub
stos
pop
test
mov
add
push
scas
pop
test
jl
pop
or
test
and
add
add
add
loope
std
xchg
ret
pop
mov
je
in
mov
jmp
cmps
call
mov
test
and
jmp
add
test
idiv
and
clc
push
sub
rol
push
push
mov
test
inc
add
add
int
daa
pop
push
not
and
and
inc
sbb
jecxz
mov
loope
and
add
add
add
inc
pop
std
mov
mov
je
mov
jmp
movs
call
(bad)
pop
test
add
mov
lea
lea
shr
and
and
add
dec
pop
pusha
sub
add
sti
adc
bound
inc
shl
fs
cmp
ins
jb
pop
sub
dec
pop
aad
lods
test
push
sub
add
push
lea
mov
inc
inc
and
data16
stos
add
adc
sldt
push
lods
mov
call
mov
push
push
xor
and
push
cld
and
outs
cmp
xchg
sub
sahf
not
fwait
and
lea
adc
(bad)
pop
inc
xchg
inc
xchg
add
cmp
ds
test
push
es
scas
push
lea
cmp
add
push
movs
cmc
(bad)
jle
inc
inc
es
imul
mov
mov
jecxz
cmp
sub
sbb
neg
imul
add
cmp
ror
push
push
lea
mov
(bad)
sbb
or
cmp
cmc
inc
add
sub
xchg
scas
add
aas
jo
add
test
test
add
data16
sub
movs
push
call
icebp
test
push
and
jnp
ss
add
inc
ss
push
jge
adc
add
out
push
lea
mov
add
cmc
(bad)
mov
add
cmp
and
test
retf
add
push
mov
call
dec
imul
stc
cmp
cmp
lea
std
push
ret
fwait
test
mov
jmp
call
(bad)
fiadd
(bad)
call
into
popf
and
inc
js
mov
add
mov
add
cld
cmp
cmp
jo
std
inc
rol
mov
jmp
movs
call
(bad)
pop
test
add
mov
loopne
add
push
and
pop
push
and
inc
neg
push
jnp
jle
push
pop
aam
add
sti
adc
bound
add
xchg
call
xor
and
dec
push
mov
cmp
cld
add
dec
lea
mov
test
cmc
push
clc
mov
inc
je
inc
push
cdq
in
out
push
dec
sub
call
push
sub
dec
xlat
retf
inc
cmps
xchg
adc
sldt
sbb
call
xlat
test
inc
je
xchg
stos
test
dec
mov
ins
test
test
imul
and
and
ins
test
test
aaa
(bad)
es
adc
in
pop
fsubr
add
(bad)
and
add
sub
sbb
and
mov
ins
test
test
add
push
jnp
rol
in
push
jnp
(bad)
test
jo
cmc
inc
scas
call
push
dec
and
and
inc
or
push
dec
push
sar
add
and
add
inc
std
mov
add
and
call
push
pop
mov
jmp
ror
sahf
std
call
pop
(bad)
call
pop
mov
jge
pop
test
jno
inc
out
je
loop
inc
or
push
push
lea
scas
and
sbb
sbb
shl
pop
xchg
test
adc
and
jecxz
and
sbb
and
push
mov
sbb
pop
call
xor
pop
call
inc
add
mov
shr
adc
adc
push
inc
sub
(bad)
cmp
retf
inc
es
(bad)
test
call
push
sub
and
pop
in
add
mov
and
add
aam
add
cmp
cmc
inc
xor
loope
out
inc
not
fsub
and
and
jle
push
jmp
je
mov
(bad)
fisubr
push
aas
cli
stc
jmp
in
cwde
mov
call
jl
jnp
and
hlt
mov
xor
sbb
cmp
inc
add
loope
mov
shr
mov
sbb
test
out
out
(bad)
pop
lods
adc
(bad)
scas
adc
mov
idiv
out
cmp
test
scas
test
mov
mov
push
add
push
inc
cmp
pop
test
add
in
jb
in
add
inc
test
push
scas
add
loopne
add
mov
add
mov
mov
je
(bad)
mov
call
mov
test
adc
js
pop
lea
add
scas
adc
jmp
jmp
add
add
xchg
das
rol
push
push
mov
mov
adc
xchg
inc
dec
inc
mov
and
pop
test
adc
push
mov
and
out
and
cld
loope
dec
lea
stos
sbb
push
scas
call
mov
jne
cwde
inc
mov
stos
sbb
icebp
in
inc
add
sbb
fcmovu
mov
call
lahf
push
push
jle
sub
sub
fcos
mov
scas
add
jg
cli
call
mov
call
mov
ss
mov
loope
add
sbb
call
js
cwde
mov
inc
and
dec
push
add
add
add
push
mov
add
out
add
xchg
mov
(bad)
xor
pop
push
lods
not
pop
mov
cmp
lods
xor
sub
mov
mov
mov
push
outs
imul
popa
or
cmp
lods
dec
call
aaa
sbb
call
mov
dec
pop
cdq
inc
mov
add
lea
jmp
retf
fdiv
adc
pop
xor
inc
inc
jo
and
(bad)
call
xchg
add
pop
mov
adc
xchg
jg
sub
or
call
add
test
loopne
inc
inc
push
test
stos
add
mov
mov
ret
add
rol
aam
cmps
stos
push
lea
test
call
inc
inc
inc
cmps
cs
jbe
test
mov
add
sbb
inc
cmp
call
test
test
mov
call
call
or
std
mov
jecxz
movs
jno
push
fld
add
cmp
dec
xor
cmp
push
or
je
mov
cmp
xor
and
outs
pop
add
popa
fimul
sbb
sbb
xchg
stos
call
mov
cmc
(bad)
fadd
cmp
sub
pop
call
aad
sbb
pop
fisubr
add
xor
push
sbb
and
push
stos
add
(bad)
ins
daa
std
add
les
fwait
loopne
mov
imul
in
repz
and
call
jnp
loop
hlt
mov
fdivr
std
mov
cmp
mov
out
cmps
test
add
mov
idiv
das
out
and
add
int
pop
test
add
cs
inc
xchg
(bad)
je
xchg
popa
sbb
inc
aas
push
lea
xchg
adc
data16
call
int
push
push
shr
and
mov
and
fdiv
add
(bad)
jmp
js
push
clc
push
jb
rol
stos
jnp
(bad)
adc
add
nop
pop
inc
out
sub
dec
adc
inc
(bad)
(bad)
sbb
cld
inc
mov
(bad)
xchg
push
not
ret
je
push
rcr
sti
idiv
inc
pmulhuw
cwde
test
idiv
jns
je
cs
dec
and
push
jnp
cs
jp
xor
add
mov
push
inc
push
fistp
jmp
mov
scas
jo
test
retf
sbb
idiv
xchg
(bad)
in
sub
dec
mov
or
lea
lods
add
mov
xor
mov
lods
add
cmp
add
pop
add
mov
xchg
lock
sub
ds
(bad)
and
fstp
mov
push
into
movs
mov
sub
add
inc
xor
add
cmp
call
push
adc
das
cdq
std
inc
sub
pop
mov
popa
mov
shr
cmc
inc
add
push
jnp
scas
fiadd
(bad)
jle
mov
mov
sub
imul
sbb
idiv
fstp
lea
cmc
cld
add
loopne
jmp
in
push
mov
out
mov
(bad)
jle
pop
inc
push
sub
not
xor
push
call
add
xchg
push
mov
push
test
jo
idiv
imul
push
push
xor
push
(bad)
jmp
std
out
ja
call
jecxz
mov
push
add
dec
bound
sub
test
sub
cld
or
scas
add
inc
sar
push
not
int
std
and
jl
add
call
call
push
clc
add
pop
call
cmc
jmp
gs
add
sar
push
not
sub
push
push
lea
cmc
jmp
inc
loope
jno
test
adc
cld
mov
add
mov
imul
sbb
push
sbb
jmp
fs
adc
push
mov
test
mov
das
or
add
test
stc
(bad)
jns
lods
xchg
mov
cmps
cmc
jmp
jl
inc
out
test
inc
push
test
imul
add
add
add
add
push
lea
cmc
jmp
dec
idiv
idiv
not
out
push
mov
call
push
test
inc
imul
inc
push
dec
push
(bad)
lods
mov
push
imul
mov
jne
stc
mov
pop
cmc
jmp
popa
loop
adc
push
(bad)
lods
xchg
add
mov
pop
push
add
sub
jmp
lods
xchg
mov
lods
cmc
(bad)
mov
lds
(bad)
sbb
call
pop
imul
pop
cmc
jmp
test
test
mov
push
not
in
cld
adc
out
mov
push
test
mov
cmp
cld
add
inc
push
dec
push
lds
call
test
stc
mov
pop
cmc
call
bound
add
push
lds
(bad)
imul
movs
inc
cld
dec
les
call
mov
les
(bad)
sub
call
dec
ins
push
lea
cmc
call
add
push
idiv
push
lds
mov
in
cld
adc
inc
in
mov
push
test
mov
cmp
sti
and
push
les
call
test
stc
mov
pop
fiadd
add
push
les
(bad)
pop
inc
add
mov
ret
lods
xchg
add
push
inc
imul
lods
mov
dec
xchg
pop
inc
(bad)
ret
test
xchg
inc
test
scas
mov
dec
push
lea
popa
cmc
inc
push
idiv
push
les
xchg
inc
not
jl
pop
scas
in
jmp
inc
test
xchg
cld
pop
pop
and
adc
push
ret
lods
mov
inc
imul
add
cld
dec
cld
push
stc
mov
pusha
cmc
inc
pop
push
add
ret
lods
xchg
mov
push
add
sbb
cld
(bad)
cmp
lods
xchg
inc
inc
imul
or
cld
sbb
ret
mov
mov
call
pusha
cmc
inc
push
idiv
test
mov
push
not
add
in
cld
sbb
das
les
mov
push
idiv
xchg
cmp
sub
push
dec
inc
test
call
jl
dec
lea
pop
rol
xchg
push
bound
jne
lods
xchg
mov
push
add
pop
inc
cld
jmp
js
inc
push
add
test
add
idiv
lea
idiv
popa
cli
jl
xchg
push
idiv
cmps
scas
add
repnz
idiv
das
sub
std
xchg
push
jnp
mov
scas
add
jecxz
inc
push
(bad)
jmp
cmc
jmp
push
pop
add
push
(bad)
push
push
dec
xor
push
or
add
push
clc
cmp
das
push
mov
add
xchg
push
add
mov
(bad)
mov
inc
imul
scas
scas
add
push
add
add
push
std
jmp
jle
lea
idiv
popa
push
and
aas
loope
mul
test
adc
push
lea
cmc
jmp
dec
(bad)
jmp
shl
dec
xor
add
mov
push
sti
cmp
dec
push
sbb
loop
jecxz
mov
push
push
xor
sar
push
imul
adc
jl
test
(bad)
jge
lea
idiv
inc
mov
lock
push
imul
into
ss
pop
dec
jnp
mov
sar
push
test
add
sbb
jmp
rcr
cli
cmp
adc
push
dec
push
cli
cmp
outs
push
lods
stc
and
(bad)
jecxz
fs
and
xchg
push
dec
idiv
popf
mov
inc
push
jnp
sbb
inc
lea
(bad)
jmp
push
push
(bad)
jmp
cmc
jmp
push
sub
add
cwde
ja
and
push
test
in
out
call
stos
add
sub
cmc
call
ins
je
fs
in
test
fisttp
cmp
cmc
inc
bound
int3
mov
mov
dec
idiv
ds
icebp
cld
and
cld
dec
stos
sbb
stc
jae
xor
(bad)
jl
bound
mov
sar
mov
dec
test
cs
sbb
(bad)
xchg
dec
call
lea
cmc
jmp
test
jle
outs
inc
sbb
std
xchg
dec
mov
jmp
(bad)
sbb
test
imul
add
dec
test
ja
rol
fwait
dec
sbb
push
stc
mov
push
cmc
inc
inc
mov
mov
sbb
imul
(bad)
dec
cld
inc
(bad)
stc
mov
cmc
inc
cmp
(bad)
mov
mov
dec
add
add
in
lea
cli
hlt
inc
inc
(bad)
jmp
sbb
shl
cs
mov
adc
mov
int
dec
test
and
(bad)
fwait
dec
sub
mov
dec
dec
push
and
mov
dec
imul
sub
inc
add
stc
mov
inc
ret
dec
dec
push
and
(bad)
sbb
call
mov
in
idiv
popa
jns
lea
idiv
jle
repz
and
jmp
mov
call
and
(bad)
push
dec
dec
(bad)
fwait
dec
and
js
cld
inc
add
sbb
jmp
cmp
dec
pushf
mul
dec
push
(bad)
rol
cmc
inc
dec
iret
(bad)
mov
add
jmp
push
idiv
(bad)
gs
call
bnd
lea
cmc
call
dec
test
mov
cld
push
js
push
cmp
push
add
add
add
add
jmp
mov
push
imul
sbb
push
push
not
and
std
and
(bad)
stos
dec
and
dec
inc
idiv
aad
or
mov
mov
ins
cmp
cld
xchg
push
dec
lea
cmc
jmp
push
push
lea
hlt
inc
add
cmp
(bad)
xchg
push
dec
lea
cmc
jmp
inc
and
sbb
hlt
inc
dec
idiv
imul
cld
rol
out
push
jnp
xchg
jle
test
idiv
mov
jno
inc
push
or
in
sub
and
add
sbb
mov
add
add
lea
sbb
imul
xor
and
test
notrack
cmp
push
test
mov
lods
add
cmp
call
lock
xchg
dec
jl
cmps
lods
call
adc
xor
add
fld
test
inc
push
not
and
(bad)
fistp
jmp
xchg
add
push
inc
mov
adc
test
push
idiv
cmp
sbb
(bad)
xchg
push
jecxz
push
sub
std
mov
push
cmc
inc
mov
call
pushf
(bad)
xchg
push
dec
xor
cmp
cmc
add
bound
push
push
cld
lahf
inc
shl
adc
cmps
dec
idiv
and
lock
mov
pop
cmc
jmp
push
imul
data16
add
push
stos
cmc
call
push
div
movs
shr
pop
inc
(bad)
(bad)
xchg
idiv
mov
daa
hlt
std
add
lea
cmc
call
push
(bad)
inc
add
push
dec
xor
inc
call
push
imul
lds
(bad)
cmc
call
push
jnp
scas
jnp
lea
idiv
jle
cmp
lahf
ror
stos
add
data16
mov
test
cld
and
cld
cld
add
and
jl
call
call
ins
cmp
cld
add
lock
add
mov
inc
aas
cld
mov
es
inc
push
not
sub
std
mov
mov
jmp
xchg
call
sub
call
xchg
push
in
mov
aas
add
call
mov
push
idiv
scas
adc
cld
push
ja
add
and
call
push
mov
push
idiv
sbb
cld
xor
mov
cld
adc
jnp
push
stos
dec
lea
hlt
call
push
push
lea
ins
cmp
sti
inc
push
add
add
and
not
sub
push
lea
cmc
call
popf
call
sbb
jmp
in
push
pop
in
cld
ss
sbb
bound
jecxz
and
inc
pop
call
push
int3
mov
(bad)
fiadd
(bad)
ds
cld
and
bound
sar
std
adc
mov
sldt
stos
add
push
test
xor
shl
or
(bad)
mov
xor
(bad)
sbb
cld
call
dec
lea
cmc
jmp
test
div
jge
add
push
pop
in
cld
cmp
(bad)
mov
push
test
fistp
sub
add
div
inc
fnstsw
push
sar
and
adc
not
xor
mov
add
call
imul
idiv
fsubr
cld
xor
stos
jmp
mov
add
or
inc
sbb
pop
aam
jmp
cmps
push
mul
add
idiv
add
xchg
cmp
cdq
loope
idiv
sbb
cmc
call
fwait
push
push
dec
sbb
test
idiv
cmp
lods
call
mov
sub
jmp
fcom
fwait
popf
push
(bad)
fild
test
push
mov
std
mov
fwait
sub
mov
add
mov
fild
sub
xchg
cmp
call
push
lahf
pop
add
lea
cmc
jmp
fcomip
jmp
sub
cmp
jp
cmp
add
jmp
sbb
add
out
stc
out
sub
or
mov
add
push
scas
add
loopne
jge
adc
div
xor
not
mov
call
lahf
jmp
jmp
ror
push
push
push
mov
add
hlt
std
xchg
add
mov
add
inc
xor
not
imul
into
add
xor
test
push
(bad)
jmp
add
add
push
ss
call
inc
hlt
std
mov
add
push
mov
add
dec
out
cld
adc
bound
mov
js
and
call
and
(bad)
sar
inc
sbb
mov
add
(bad)
(bad)
cmp
dec
mov
in
inc
int3
push
inc
add
add
xchg
add
or
test
inc
ins
add
pop
mov
adc
mov
pop
test
jge
stos
lods
add
or
loope
imul
xor
test
add
lods
xor
mul
xor
add
psubusw
stc
call
not
lods
jnp
sbb
test
push
lods
add
add
add
outs
pop
test
mov
xor
add
lods
add
(bad)
stos
ins
adc
jg
add
cmp
lods
call
jmp
cs
mov
sar
xchg
test
mov
sti
dec
push
test
call
add
dec
stos
call
(bad)
imul
data16
stc
call
sub
pop
jne
(bad)
cmp
jb
push
stos
cdq
and
jae
(bad)
and
clc
adc
mov
push
push
sub
add
cli
loop
arpl
ins
imul
pushf
scas
je
xor
ins
cld
add
jle
lock
sbb
enter
out
dec
cli
test
inc
sub
daa
stc
jmp
mov
fcomp
dec
cld
call
dec
push
sti
sub
dec
je
dec
retf
inc
push
or
add
stos
call
(bad)
jmp
xor
test
add
sub
fiadd
push
stos
jnp
add
lock
test
in
add
sub
inc
punpckhdq
add
imul
mov
in
call
jae
mov
ins
call
mov
mov
mov
call
clc
stc
test
mov
mov
dec
aaa
xor
and
cmp
and
cwde
sbb
add
add
pop
sbb
mov
jb
push
xor
test
ds
std
mov
jbe
aas
and
mov
dec
mov
test
std
mul
jge
sub
sbb
xor
adc
mov
int3
jbe
push
sbb
sub
add
push
icebp
test
lods
jle
fs
mov
test
dec
xor
std
jg
inc
mov
adc
cld
popa
add
shl
jle
inc
add
sar
int
add
xchg
push
neg
out
loopne
out
add
or
or
test
dec
mov
add
add
mov
sbb
out
stc
sub
ins
aaa
inc
dec
xor
fsubr
mul
repnz
fsubr
jmp
das
(bad)
jnp
retf
inc
dec
mov
add
mov
icebp
cmp
ds
loope
cmp
push
cdq
xor
add
sbb
cmp
push
shl
add
mov
mov
bound
call
pop
test
sub
inc
dec
xor
scas
and
sbb
test
dec
(bad)
in
call
push
call
mov
mov
test
stc
test
and
scas
add
add
dec
scas
sub
adc
mov
sbb
push
xor
clc
adc
clc
jb
add
add
scas
xor
jns
inc
push
mov
and
cmp
scas
and
aad
mov
jbe
das
fdivr
sbb
test
add
ret
aaa
push
xor
(bad)
std
jecxz
add
lock
cmp
mov
add
cld
cmp
repnz
test
js
mov
out
jp
std
loope
add
shl
add
cmp
test
add
test
loope
xor
(bad)
adc
add
pop
dec
xor
(bad)
jge
add
xchg
push
test
lods
dec
call
es
add
sbb
call
cld
lods
div
mov
test
add
imul
cdq
lahf
cli
lock
jge
push
jns
or
hlt
addr16
dec
movs
adc
call
add
add
add
push
ss
push
in
out
out
test
lods
dec
mov
icebp
ins
or
adc
lods
add
sub
xchg
dec
icebp
neg
sbb
push
ins
add
ds
push
mov
stos
push
xor
inc
adc
das
sub
xchg
stos
add
fcomp
xor
fadd
add
add
add
add
add
data16
add
add
shr
push
jecxz
and
jbe
jl
add
and
movs
and
test
dec
dec
adc
mov
sbb
dec
jp
or
cmp
sbb
cmp
xchg
push
test
add
add
add
jne
mov
mov
add
or
div
xchg
call
push
gs
test
call
push
sbb
add
ds
pop
std
and
jge
ins
test
xchg
push
adc
push
stos
call
cmp
or
add
fwait
scas
stc
call
repz
jle
je
xchg
add
sti
inc
repz
dec
mov
repz
push
cmp
push
outs
and
cwde
sahf
and
cmps
test
jmp
mov
test
cmps
test
idiv
inc
jg
mov
cli
std
icebp
inc
out
push
movs
dec
and
cdq
pushf
and
add
mov
add
add
cld
and
outs
sub
jge
and
rol
add
stc
add
xchg
out
mov
adc
pop
pushf
ror
(bad)
(bad)
jmp
jp
push
mov
add
dec
sub
cld
xchg
call
scas
cdq
test
mov
cli
mov
mov
adc
call
rol
sub
ins
and
cwde
ins
call
mov
mov
movs
mov
pop
bound
mov
pop
jle
rol
jp
call
lods
lods
push
push
scas
fwait
daa
jmp
or
cli
inc
add
div
mov
repz
ja
add
scas
call
mov
scas
push
call
aad
jecxz
aad
cmp
pop
mov
call
jge
sub
sar
cld
inc
repz
xchg
stc
cdq
adc
repz
mov
mov
add
add
pop
jno
push
mov
add
int
add
scas
sub
push
or
xchg
xchg
fstp
lods
add
mov
mov
mov
add
(bad)
div
add
mul
in
ja
push
or
add
fld
xchg
push
inc
adc
pop
sub
add
retf
add
jnp
add
sbb
test
jp
add
add
outs
mov
inc
push
xchg
mov
push
mov
add
shl
push
sub
and
mov
add
xchg
test
mov
add
loopne
out
test
fld
push
jmp
inc
add
mov
stc
out
sti
sti
inc
mov
call
adc
pusha
add
lods
not
lods
test
cmc
daa
jmp
add
push
lods
call
mov
dec
mov
loope
test
icebp
clc
jmp
mov
mov
add
lods
cli
jmp
lods
call
pop
pop
retf
mov
add
lods
call
push
in
stos
test
hlt
shr
xor
mov
icebp
dec
push
lahf
mov
jp
add
scas
das
loope
mov
mov
mov
adc
call
xchg
icebp
and
test
add
mov
add
stc
jmp
hlt
mov
mov
fiadd
jmp
fild
mov
test
sbb
(bad)
jmp
std
push
inc
icebp
push
pop
or
and
pop
stc
(bad)
call
icebp
dec
push
sahf
mov
(bad)
lods
add
jle
loope
sbb
and
xchg
stos
add
add
call
mov
add
inc
(bad)
stc
mov
push
fld
stos
call
(bad)
jmp
ds
cmp
pop
sbb
jmp
addr16
in
test
aaa
add
push
movs
add
es
sbb
push
and
cld
jmp
sbb
pop
add
or
add
add
add
stos
sub
jmp
jmp
cmps
jmp
mov
xchg
inc
mov
xchg
stos
add
test
test
xchg
adc
add
sbb
sub
add
fisttp
jmp
sbb
add
inc
sti
call
call
jmp
add
lods
cli
js
mov
es
daa
stos
add
lea
jmp
push
lea
movs
add
test
gs
test
idiv
gs
or
mov
mov
test
and
add
mov
dec
call
jle
or
mov
test
mov
clc
jmp
or
add
sbb
add
sbb
mov
add
dec
and
daa
mov
lea
adc
add
and
add
(bad)
cmp
std
mov
lods
test
or
loope
lea
fisub
inc
add
jge
xor
gs
fucom
jae
add
int
and
or
mov
or
cmp
or
bndldx
call
inc
jne
push
in
cmp
fsub
dec
test
and
movs
add
xor
pop
and
and
and
and
and
inc
mov
add
sbb
mov
sub
add
dec
js
mov
and
push
and
pop
ins
and
outs
fs
pop
lock
int
and
or
test
or
sbb
je
ret
sub
push
test
js
fsubr
daa
dec
and
jmp
add
inc
sub
dec
sub
add
push
scas
pop
test
test
and
daa
scas
add
push
scas
test
call
mov
or
add
inc
jp
add
je
add
test
or
mov
or
jmp
adc
and
jle
and
add
mov
dec
stc
call
push
test
cmp
add
sub
and
pop
scas
add
out
cmp
loope
mov
or
es
or
cs
bound
mov
scas
add
cs
add
test
fld
mov
cld
inc
add
cmp
and
test
out
cld
popa
les
push
cmp
and
test
and
call
cld
mov
inc
arpl
mov
lods
test
loope
sub
test
test
cmp
add
mov
test
add
add
add
test
gs
(bad)
ds
mov
jmp
and
test
add
inc
arpl
jp
call
pop
xor
and
outs
fisub
std
popa
es
and
sbb
idiv
xor
and
popa
xor
sub
ins
add
sub
sbb
call
add
add
add
ja
idiv
in
movs
add
dec
and
and
adc
inc
and
fdivr
out
mov
and
cmp
sub
add
lods
test
loope
ins
push
test
inc
push
mov
add
mov
test
test
call
mov
add
pop
imul
sbb
pusha
and
(bad)
and
pcmpgtw
jmp
jae
lea
pop
stos
lods
call
mov
or
stc
call
je
xor
sub
push
test
jp
fdivr
xchg
and
mov
jmp
and
psubw
add
cli
pop
test
cmps
add
jge
sbb
(bad)
stos
pop
test
xor
add
cmps
stos
test
call
mov
out
dec
mov
or
add
test
and
inc
mov
test
and
pop
test
add
stos
add
lahf
into
and
push
add
push
and
inc
sub
out
fadd
push
stos
call
lea
jl
out
test
jmp
and
or
gs
mov
mov
stos
test
or
add
mov
cmps
cmps
add
sbb
mov
add
add
add
add
add
xchg
sahf
call
test
or
test
pop
div
and
add
mov
sub
and
add
dec
pop
or
xchg
inc
test
loope
movs
inc
test
adc
call
push
test
inc
idiv
arpl
in
add
pop
or
or
fs
call
and
mov
inc
and
push
cmp
inc
test
mov
add
call
jmp
mov
jmp
je
dec
pop
xor
and
dec
cmp
(bad)
pop
cmc
inc
cmp
mov
add
mov
(bad)
cld
mov
outs
add
mov
int3
and
ins
je
dec
pop
int3
and
pop
je
and
lods
xor
je
jle
or
cmp
cmp
push
cmps
scas
add
mov
xor
add
jmp
je
test
push
scas
jnp
es
xor
xor
sbb
mov
add
pop
(bad)
cld
inc
ss
and
cmp
pop
ins
and
pop
ins
and
push
mov
and
jle
std
cld
xor
push
cmp
aaa
inc
and
cmp
pop
mov
xchg
scas
test
loope
mov
rcr
add
cmp
cld
jmp
cmp
fs
add
push
scas
mov
add
cmps
call
mov
inc
test
lods
add
das
push
repnz
mov
mov
mov
inc
add
xor
(bad)
pop
jmp
enter
pop
out
adc
and
aad
add
cmps
lods
call
push
sar
mov
fadd
cmps
lods
mov
add
inc
test
rol
and
jecxz
and
ds
jmp
pand
add
adc
mov
add
sub
add
(bad)
cmp
std
mov
pop
loope
mov
movs
loope
inc
inc
test
mov
clc
jmp
jmp
add
in
ins
and
lahf
and
call
mov
add
xor
cmps
lods
popa
sar
add
nop
add
add
lods
push
test
enter
pop
adc
mov
lods
cmp
jmp
test
clc
jmp
std
out
sar
xor
sub
xor
adc
loope
xor
mov
lods
add
add
pop
xor
xlat
stos
add
mov
jmp
add
add
cmp
lods
das
and
cmps
stos
add
(bad)
stc
push
push
inc
cli
push
mov
stos
dec
call
aas
sub
sub
js
stc
in
daa
imul
call
pop
dec
aaa
and
push
stos
add
mov
loop
add
(bad)
xor
inc
jns
mov
jmp
jmp
mov
add
add
add
div
and
pop
stos
add
out
call
pop
push
test
out
add
pop
adc
add
cwde
pop
cld
call
stos
add
fimul
idiv
in
push
mov
push
adc
xchg
stos
test
popa
or
neg
sub
and
mov
add
add
pop
mov
add
call
sbb
dec
(bad)
call
call
outs
(bad)
not
bound
jmp
and
out
cmp
jae
and
xlat
test
popa
add
test
cld
(bad)
fistp
mov
and
aad
inc
xchg
sub
and
add
mov
add
loope
mov
adc
sbb
rcl
mov
push
shl
add
cmp
and
jecxz
jnp
and
pop
add
mov
add
mov
inc
dec
popf
cli
jmp
mov
inc
jp
std
mov
mov
push
mov
test
add
add
add
adc
push
inc
out
call
sbb
and
cmps
mov
push
pop
xor
add
xchg
mov
call
and
pop
cmp
and
stos
add
mov
and
add
inc
sub
push
adc
int3
(bad)
fimul
add
mov
mov
add
and
mov
sub
mov
jbe
dec
(bad)
jmp
jae
push
not
xor
retf
xlat
cld
mov
or
add
scas
call
neg
or
fs
xor
std
xlat
cld
mov
add
mov
add
add
sub
adc
mov
or
mov
mov
sbb
adc
inc
cmp
cld
call
scas
jecxz
mov
jb
and
push
xor
sub
popa
loopne
mov
call
pop
cs
and
aam
out
dec
and
cmp
add
add
add
xlat
scas
add
gs
or
adc
and
call
scas
add
xchg
scas
add
mov
retf
inc
sub
inc
scas
add
repz
push
scas
add
nop
cmc
(bad)
push
scas
add
inc
mov
add
or
ficomp
neg
test
call
ss
add
je
dec
and
pop
call
pop
push
sub
add
mov
pop
mov
add
push
loope
mov
add
loope
add
sub
cmps
lods
add
sub
call
std
push
das
les
pop
test
pop
mov
add
add
loope
dec
push
test
shl
add
xor
add
(bad)
xor
or
jmp
jns
jl
inc
push
push
push
or
add
ds
cld
mov
adc
call
push
or
jle
(bad)
mov
or
mov
not
or
aad
cld
adc
lea
lods
call
push
jns
mov
sbb
and
sbb
cld
mov
adc
mov
xchg
test
call
add
add
add
add
push
test
(bad)
stos
sub
jge
std
cmps
cmps
stos
add
sub
xchg
stos
add
pop
cmp
or
push
jnp
xchg
add
and
add
(bad)
aad
and
pop
pop
test
pop
test
and
ret
adc
add
stos
add
stos
or
and
push
stos
call
mov
mov
test
and
aad
add
push
pop
add
stos
and
sub
(bad)
call
and
cmps
stos
add
inc
mov
add
push
neg
fld
xchg
in
and
jae
rcr
shl
enter
(bad)
fcmovu
pop
add
stos
es
jbe
test
test
add
pop
mov
add
jecxz
scas
or
mul
and
push
push
jle
mov
test
and
jmp
std
mov
jle
add
stos
test
and
push
test
mul
sub
mov
jmp
and
lods
add
xchg
inc
je
jle
test
popa
call
sbb
pusha
cmp
mov
and
daa
mov
push
fsubr
add
push
pop
std
xchg
xor
or
mov
and
add
sbb
test
mov
add
sbb
or
cwde
test
mov
lea
add
(bad)
mov
(bad)
sub
sub
call
out
and
add
push
pop
push
push
ds
add
inc
xor
or
add
les
jne
test
add
pushf
fnclex
inc
dec
push
mov
mov
call
test
mov
int3
stc
jmp
sbb
push
xchg
mov
in
add
aam
sti
inc
dec
stc
jmp
pop
(bad)
mov
xlat
scas
add
clc
call
test
pop
dec
fist
add
mov
xchg
scas
add
pop
call
test
pop
mul
and
push
jecxz
and
scas
add
out
cld
inc
psubd
es
adc
add
push
xchg
jge
pop
daa
scas
add
and
sti
inc
imul
out
mov
inc
jp
or
fs
add
jge
xchg
(bad)
scas
add
cmp
sti
jmp
and
call
neg
fimul
sbb
dec
push
xor
sar
mov
lods
add
sar
jl
scas
add
aam
(bad)
(bad)
fnstsw
mov
add
clc
je
adc
add
xchg
rcr
push
call
add
add
add
mov
cmp
cli
mov
inc
and
pop
mov
add
add
test
fisubr
and
or
call
and
test
call
je
and
adc
dec
push
adc
xchg
lods
add
xchg
jecxz
inc
add
jge
test
lods
add
and
mov
cmp
sub
add
ror
add
lea
pop
push
jbe
test
stc
clc
call
adc
pop
mov
add
add
neg
imul
push
or
pop
sub
add
mov
xlat
cld
xchg
add
jne
cdq
jl
pop
mov
mov
mov
jmp
cwde
loope
push
add
add
data16
test
jmp
sub
push
sar
enter
push
jbe
stos
or
jae
and
cmp
add
add
add
(bad)
idiv
inc
shl
push
test
pop
test
adc
rcl
and
xchg
stos
add
sbb
pop
add
stos
add
mov
mov
movs
add
or
and
mov
add
mov
test
add
sbb
add
es
cmp
dec
lea
stos
push
call
xchg
in
push
ss
test
mov
add
in
and
scas
add
daa
inc
jp
mov
dec
je
push
in
and
scas
add
in
test
mov
test
add
add
add
inc
add
outs
and
mov
and
add
xchg
dec
inc
pop
and
in
ss
int3
(bad)
fimul
jns
push
stos
inc
mov
inc
push
jbe
call
sbb
call
sub
dec
push
mov
and
scas
int
cld
mov
push
lea
out
call
push
or
ds
cld
mov
push
push
add
push
not
sbb
add
jle
fdivr
mov
add
add
dec
not
and
and
mov
add
aad
adc
inc
and
adc
aad
and
add
lds
es
pmaxub
(bad)
call
add
add
add
add
mov
add
mov
inc
jp
or
fs
cmp
and
xlat
mov
call
pop
xchg
and
iret
outs
push
call
mov
inc
retf
dec
jmp
and
mov
add
pop
and
jle
loope
mov
sub
jmp
enter
cmp
dec
je
add
mov
ror
data16
pop
not
imul
in
and
movs
add
pop
dec
je
dec
and
xchg
pop
and
daa
mov
call
pop
sub
pusha
sbb
and
out
add
bound
mov
mov
pop
push
sub
test
scas
add
add
xchg
scas
or
retf
jmp
add
jecxz
popa
pop
or
mov
pusha
aas
data16
cmps
je
movs
outs
inc
jne
(bad)
test
jge
push
scas
add
(bad)
mov
push
scas
add
jo
cld
mov
cs
adc
rol
out
jnp
add
inc
mov
add
cdq
mov
add
and
add
aaa
test
inc
and
adc
pusha
stos
scas
add
and
jmp
and
add
data16
inc
and
push
rcl
and
scas
add
stos
or
add
call
add
add
add
add
adc
(bad)
call
mov
sbb
add
aad
test
call
add
rol
(bad)
lods
or
out
imul
and
xlat
lods
add
call
mov
inc
adc
mov
lods
bound
xor
into
cld
add
mov
and
dec
add
cld
and
add
and
out
lock
cld
loope
add
and
push
mov
add
and
pop
and
add
ds
cld
inc
es
(bad)
div
popf
push
lea
jns
out
call
add
add
add
add
add
sub
stc
jmp
add
xchg
and
or
jmp
neg
xchg
add
les
push
lods
call
pop
out
ret
add
dec
(bad)
fimul
mov
cmp
add
stos
add
or
push
and
jp
add
iret
inc
inc
sbb
jge
add
pop
pusha
and
ins
imul
pop
mov
out
stc
pop
mov
cmp
in
push
xchg
add
xchg
cwde
and
sbb
ja
std
mov
xchg
sbb
adc
test
ds
and
mov
stos
or
push
stos
imul
and
stos
add
daa
cmp
mov
inc
add
loope
jnp
sub
and
and
and
inc
push
pop
xchg
adc
into
mov
xchg
mov
add
jp
clc
jmp
mov
stc
call
in
and
clc
(bad)
fadd
push
adc
pop
add
add
or
ins
sub
test
inc
jle
inc
adc
repz
and
push
stos
add
jmp
call
out
test
add
xlat
shr
test
stc
call
inc
jge
xchg
adc
je
(bad)
xor
ret
or
pop
push
pop
loop
mov
add
add
add
pop
adc
pop
int3
adc
pop
sbb
add
gs
push
mov
dec
mov
rol
pop
call
push
inc
xor
xchg
jp
clc
jmp
dec
and
sbb
push
mov
jmp
dec
(bad)
jmp
call
mov
call
add
add
add
add
inc
not
xor
and
mov
add
push
sar
mov
int
add
mov
test
ja
out
test
xor
int
inc
mov
cmp
pushf
xchg
pop
imul
inc
mov
inc
idiv
mov
add
mov
mov
loop
add
xor
xchg
bound
mov
mov
add
test
pop
xchg
push
daa
mov
je
xor
call
(bad)
jle
call
mov
sub
scas
call
cmp
add
(bad)
mov
inc
add
and
out
add
sbb
cld
inc
add
mov
add
fstp
jmp
cs
push
xor
xchg
scas
add
fwait
cmp
add
jnp
jb
lock
fcmove
pop
add
scas
push
add
jns
cmp
js
push
scas
test
test
lods
add
push
mov
sub
pop
mov
lea
add
scas
push
(bad)
push
fs
scas
dec
add
scas
call
sub
add
(bad)
pushf
div
dec
lea
int
add
mov
call
xor
add
inc
sub
mov
cwde
add
jnp
jb
sbb
mov
(bad)
jmp
add
add
add
add
push
(bad)
fimul
gs
scas
push
call
movs
sub
xor
add
mov
add
push
popf
call
sub
adc
(bad)
lods
mov
add
xchg
call
push
or
pop
rcl
jp
xchg
xchg
lods
add
in
sbb
inc
add
call
xchg
adc
dec
push
jecxz
and
lods
add
nop
sbb
inc
sar
jmp
and
and
push
sar
call
xor
cld
jmp
mov
or
mov
das
mov
bound
cld
inc
sub
add
adc
and
es
or
mov
lock
jmp
inc
push
lea
hlt
add
inc
test
jp
add
push
sub
jns
lss
or
mov
push
lea
lods
mov
add
add
add
add
nop
add
push
movs
call
push
jl
test
call
push
mov
pop
add
(bad)
adc
xlat
mov
adc
inc
test
adc
(bad)
cmps
stos
dec
push
mov
stos
add
pop
push
add
jle
iret
cld
mov
add
inc
(bad)
pop
mov
add
add
add
add
ins
daa
into
mov
mov
data16
add
jmp
inc
and
cmc
and
add
outs
xor
stos
stc
call
dec
sub
movs
test
ret
fcom
stos
push
call
push
cmc
or
push
pop
add
stos
push
add
stos
jns
mov
add
aad
add
aad
add
mov
mov
sub
add
sub
and
pop
stos
add
stos
add
addr16
add
fnstsw
mov
add
div
test
ret
pop
mov
call
movs
out
or
call
inc
add
into
sbb
cs
out
add
mov
les
icebp
push
inc
out
test
cdq
mov
add
test
mov
pushf
push
lea
aad
add
push
call
aad
or
sahf
cmp
and
cdq
mov
add
add
add
add
rol
xchg
call
xor
and
sbb
and
push
aas
cld
call
dec
idiv
gs
pop
push
or
into
dec
call
push
xor
add
cmp
sti
push
movs
test
dec
int3
iret
mov
test
add
cmps
mov
call
inc
cmps
test
dec
mov
inc
cmp
and
data16
call
test
stc
jmp
dec
pop
aad
cmp
clc
add
mov
push
cmps
mov
mov
movs
test
inc
je
inc
cmp
clc
add
scas
je
add
arpl
out
add
dec
pop
iret
bound
sti
jmp
scas
sub
sub
scas
add
clc
call
cwde
or
(bad)
cmp
(bad)
in
adc
ret
bound
ficom
adc
xor
add
cmps
add
scas
mov
add
pop
je
push
(bad)
lock
mov
cwde
or
repnz
push
sub
fcmovb
dec
push
ins
and
xor
ins
mov
cmc
mov
call
shl
cmp
inc
hlt
dec
xor
mov
sar
not
test
mov
dec
push
xor
addr16
dec
mov
cld
and
xor
cmp
xchg
adc
pop
(bad)
mov
add
call
push
jmp
shl
iret
(bad)
jmp
sbb
inc
push
pop
and
mov
jae
jl
mov
cmp
(bad)
repz
dec
(bad)
sbb
cli
call
lods
call
pop
add
add
sti
out
sbb
push
ret
stc
mov
push
call
adc
push
mov
xor
dec
retf
cld
and
pop
stos
test
push
outs
and
test
push
dec
mov
inc
push
ins
add
or
dec
data16
mov
fwait
or
push
std
mov
xchg
inc
add
adc
out
push
mov
xor
xchg
inc
sbb
xor
std
xor
gs
xchg
gs
or
jb
pop
stos
test
in
inc
xor
and
and
or
mul
add
loope
shl
iret
(bad)
sbb
gs
popf
lahf
sbb
daa
jb
pop
fld
lods
ins
push
xor
mov
stos
ins
mov
das
gs
mov
cdq
or
push
ins
std
xchg
gs
sub
jno
pop
jmp
dec
mov
je
add
mov
int3
dec
mov
inc
jb
inc
xor
std
and
shl
iret
mov
pop
lock
popf
movs
adc
pop
test
cmp
xchg
xor
push
inc
cmp
or
loope
std
inc
sub
or
add
xchg
pop
lock
add
add
add
lds
mov
je
pop
jmp
dec
mov
xor
popa
inc
add
or
sbb
mov
pushf
or
cmp
inc
pop
lock
frstor
ins
or
push
inc
push
pop
mov
call
ins
lock
stos
add
add
xchg
cmc
mov
xor
clc
jmp
out
mov
and
xor
push
test
mov
mov
clc
push
sub
inc
ret
fld
idiv
mov
in
cmp
xchg
test
bound
xchg
lock
add
lahf
pop
cmp
add
adc
leave
add
pop
ds
fisubr
rcl
test
pop
inc
and
sub
lods
in
call
cmp
movs
cld
jmp
sub
pop
or
jmp
scas
sbb
add
add
add
xor
xchg
xor
movs
aad
jecxz
mov
push
cmp
hlt
mov
pop
div
outs
add
xor
cld
and
adc
ins
add
int
or
mov
mov
add
pop
add
cs
add
jp
add
mov
add
div
test
add
scas
add
scas
push
mov
stos
dec
cmps
push
dec
or
jno
mov
iret
dec
jmp
pop
cmp
push
hlt
mov
add
movs
out
inc
pop
jmp
xlat
loop
jmp
dec
push
xor
adc
lods
rcr
mov
dec
push
add
std
clc
or
mov
dec
inc
xor
push
jbe
mov
scas
call
xor
enter
sahf
push
dec
mov
inc
out
not
ins
add
sahf
mov
jecxz
adc
iret
bound
xchg
cld
adc
sub
add
or
push
jmp
mov
out
inc
xor
(bad)
adc
addr16
scas
add
out
jl
(bad)
adc
ror
mov
jge
call
ss
pop
mov
or
call
push
cld
ds
push
std
inc
mov
push
in
add
pop
inc
aam
add
int3
xor
pop
cmp
add
push
cmp
jmp
mov
lea
idiv
fistp
cld
dec
loop
inc
and
inc
add
jge
and
not
cmp
mov
push
sahf
bound
mov
pop
jmp
pop
cmp
add
add
add
add
xor
cmp
cmp
call
out
mov
call
mov
cwde
cld
add
sub
div
sahf
push
call
jge
sub
fcom
dec
inc
pop
test
xor
mov
dec
sub
cld
add
adc
idiv
sbb
push
std
adc
inc
fchs
out
dec
xor
sbb
dec
lea
pushf
call
mov
xor
push
pop
test
xor
(bad)
sbb
sti
out
and
dec
into
popf
sub
stos
ins
sbb
add
mov
push
pushf
(bad)
mov
test
mov
xor
xchg
adc
jae
fs
add
xchg
push
mov
int
inc
dec
dec
shl
mov
add
jge
mov
in
or
fs
add
add
mov
mov
in
(bad)
sbb
call
stos
out
inc
es
push
cmc
enter
int
inc
sub
cmps
shl
push
adc
jmp
and
inc
pushf
rol
test
sbb
hlt
or
scas
pop
jmp
daa
(bad)
push
shr
jg
loope
mov
test
add
sub
fcomp
mov
lea
cli
loopne
test
cmps
push
dec
jae
sub
mov
push
or
sbb
call
or
ds
cmp
in
sub
push
pop
in
or
xchg
das
les
in
push
adc
scas
xor
push
sti
mov
movs
or
in
cwde
mov
xchg
sub
clc
call
leave
clc
jbe
cmp
inc
cmp
ret
push
add
add
daa
mov
push
enter
mov
clc
out
mov
stc
mov
idiv
xchg
or
cmp
mov
fistp
add
scas
test
jle
mov
add
sbb
(bad)
xchg
sub
not
mov
mov
cs
sbb
add
sbb
jmp
sub
not
mov
mov
cs
sbb
hlt
add
cmp
out
(bad)
push
gs
(bad)
push
cmp
add
sub
call
mov
mov
(bad)
or
(bad)
scas
call
mov
out
or
inc
(bad)
rol
mov
cmp
xchg
cmc
add
xchg
mov
jne
rcr
fwait
test
idiv
dec
mov
shr
hlt
add
add
popa
fwait
in
jmp
idiv
popf
xchg
in
pop
test
add
mov
push
scas
ins
add
mov
mov
add
(bad)
(bad)
fwait
call
mov
les
imul
mov
in
adc
outs
je
add
rcl
add
cmps
(bad)
loopne
mov
test
stos
sub
or
sti
(bad)
(bad)
and
dec
push
les
push
mov
loopne
dec
push
imul
stos
add
lds
xor
inc
gs
mov
test
add
and
out
mov
call
mov
sbb
add
lods
add
sbb
mov
add
push
das
adc
lahf
scas
dec
out
ins
call
rol
shr
mov
mov
ins
loopne
gs
add
push
sti
loopne
add
pop
push
add
xchg
add
adc
(bad)
xchg
les
lock
(bad)
fisttp
inc
fld
push
jae
cmp
push
call
mov
test
mov
push
or
(bad)
or
add
cmps
adc
sti
mov
test
test
jmp
inc
scas
enter
push
push
add
push
sbb
test
and
call
test
stc
mov
push
cld
adc
push
push
push
xchg
pop
cmp
push
call
mov
push
test
pop
push
add
gs
adc
cmps
adc
sti
mov
add
cmps
cdq
test
jmp
bound
xchg
arpl
cmps
stos
add
mov
xor
inc
in
adc
clc
bound
shl
inc
call
push
mov
push
idiv
sbb
hlt
add
ds
pop
cmp
setp
add
push
movs
scas
dec
xchg
mov
ret
fscale
mov
add
sub
call
ins
int3
inc
push
adc
and
jmp
mov
push
add
add
fistp
inc
add
cmps
jnp
call
mov
add
cli
pop
mov
push
pop
mov
push
dec
mov
xor
cmps
jmp
mov
or
mov
add
idiv
out
mov
bound
shl
mov
pop
fcom
sbb
sbb
stos
jns
push
(bad)
cmp
out
mov
push
test
mov
adc
out
mov
xchg
push
or
call
push
add
(bad)
and
stc
(bad)
imul
inc
inc
or
imul
inc
neg
or
(bad)
fwait
inc
adc
adc
frstor
add
inc
jecxz
aad
mov
enter
inc
push
pop
call
mov
add
mov
cwde
add
out
add
fiadd
xlat
mov
pop
out
sbb
inc
cmps
pop
or
add
imul
mov
add
in
std
mov
outs
cmp
je
loope
jne
fcom
daa
mov
(bad)
cmp
or
add
js
test
clc
out
int3
idiv
lods
fwait
test
add
pop
mov
push
jle
add
push
fimul
push
xlat
clc
jmp
cmps
push
out
lods
idiv
test
(bad)
test
add
scas
call
pop
pop
or
cmp
or
fldenv
add
push
push
or
jno
inc
push
scas
or
xor
inc
add
push
push
into
add
inc
xor
fld
add
push
push
aad
push
jle
pop
inc
push
push
inc
pop
mov
or
imul
add
scas
lahf
in
std
push
call
cmp
je
fcomip
jne
fnstenv
scas
push
call
ins
scas
sub
push
add
or
out
scas
idiv
sbb
scas
dec
push
(bad)
push
mov
sti
pusha
jl
or
out
enter
jmp
neg
in
test
fwait
inc
sbb
in
or
mov
cmp
or
ins
mov
enter
inc
add
out
push
add
xor
(bad)
xchg
out
push
push
aad
add
lods
dec
push
jle
(bad)
inc
push
cmc
(bad)
out
cmp
sbb
je
inc
inc
ins
test
lds
data16
dec
outs
inc
imul
push
jle
(bad)
stos
inc
sti
mov
jl
lds
add
mov
xor
fisub
mov
add
push
xlat
push
push
imul
call
push
push
add
mov
std
mov
ret
sbb
pushf
mov
cmp
cli
xor
cmp
mov
jle
cli
(bad)
mov
add
stc
je
test
je
add
add
jecxz
gs
xor
fstp
ins
scas
push
or
xchg
and
mov
(bad)
sub
push
pop
xchg
jmp
mov
ret
retf
jmp
adc
jl
pop
stc
dec
ds
inc
add
mov
mov
jle
stc
inc
or
push
cld
and
xchg
stos
add
sub
imul
hlt
loop
and
add
cwde
mov
jne
jmp
push
call
lods
inc
jecxz
in
or
add
hlt
hlt
add
es
(bad)
mov
repz
or
mov
test
idiv
jmp
clc
pop
pop
adc
inc
out
std
mov
test
add
call
add
push
stos
add
(bad)
push
stos
cmp
push
(bad)
jmp
pop
add
ret
retf
jmp
add
push
(bad)
and
jmp
jg
mov
je
cld
and
cmp
xchg
out
push
call
add
imul
call
push
bound
mov
cli
mov
ret
sbb
push
dec
outs
mov
lock
jle
mov
add
cmp
add
stos
add
sub
bound
sub
dec
push
ds
push
call
outs
dec
cmp
pop
pop
push
adc
mov
loopne
sbb
test
and
adc
movs
push
not
mov
mov
jmp
call
cmp
pusha
sub
lods
test
fisubr
call
fild
mov
ret
sbb
add
xor
call
fs
dec
inc
pop
movs
into
std
daa
inc
push
push
div
inc
iret
mov
mov
add
add
mov
adc
xchg
add
fwait
mov
fisubr
clc
addr16
pop
cmp
mov
addr16
mov
cmc
clc
movs
ja
add
scas
cli
call
addr16
add
cmc
clc
addr16
add
adc
add
push
cdq
in
jmp
add
div
add
idiv
arpl
sub
les
imul
add
sub
jmp
push
call
push
sar
pop
inc
push
mov
pop
jne
not
xor
jmp
push
sbb
sbb
idiv
inc
popa
xchg
rcr
test
mul
push
add
mov
hlt
hlt
and
dec
std
cmp
lea
hlt
hlt
add
(bad)
cld
mov
push
test
data16
dec
dec
std
adc
test
sbb
hlt
and
arpl
adc
pusha
pop
pop
test
idiv
fdiv
hlt
and
pop
mov
add
add
add
add
or
cmp
lods
div
sub
not
xor
push
call
gs
push
or
mul
pop
cmc
hlt
and
mov
cld
mov
lods
test
scas
inc
mov
mov
sbb
hlt
es
ror
and
test
add
add
add
inc
push
idiv
jbe
jge
and
push
sbb
hlt
daa
(bad)
shl
or
inc
jge
mov
jg
std
mov
push
push
call
xor
dec
idiv
cwde
call
mov
pop
sbb
idiv
outs
xchg
mov
mov
pop
call
mov
test
inc
inc
jge
mov
out
sub
mov
inc
les
inc
jge
adc
push
ds
std
and
cld
cs
(bad)
call
jne
test
fsub
hlt
and
fdivr
dec
mov
clc
cmc
call
cmp
pop
add
inc
push
test
arpl
mov
mov
dec
test
adc
dec
lods
jl
push
imul
fxch
cmc
call
inc
pop
inc
call
push
jecxz
enter
hlt
sub
mov
cld
loope
je
push
test
add
fnstcw
call
ins
cmp
add
sbb
int
push
add
cmp
call
adc
test
in
mov
in
nop
push
push
in
xchg
push
and
pushf
push
push
in
mov
in
lods
push
adc
enter
pop
jmp
push
test
add
add
add
(bad)
cwde
cmp
xchg
add
cwde
test
add
inc
push
scas
shl
cwde
mov
dec
(bad)
cld
add
cmp
jmp
xchg
cmp
clc
imul
stos
dec
dec
repnz
inc
out
test
test
data16
jmp
jnp
mov
push
test
add
pop
div
call
movs
cmc
jmp
outs
test
xchg
sub
(bad)
xchg
push
test
adc
sub
mov
mov
les
(bad)
and
sub
inc
imul
(bad)
cmc
call
cmp
jmp
inc
test
(bad)
fs
add
add
mov
mov
inc
idiv
(bad)
cmp
add
inc
test
imul
cmp
cmc
dec
xor
inc
(bad)
inc
cmp
cld
jge
cs
mov
in
clc
mov
or
(bad)
fistp
add
mov
jmp
hlt
mov
pop
sbb
call
mov
xor
and
mov
cmp
add
add
add
add
cmp
cwde
xchg
jbe
cmp
xchg
xchg
xchg
jbe
test
imul
enter
xchg
jl
mov
jne
mov
cmps
je
ss
(bad)
sub
pop
xor
mov
cmps
push
sub
add
dec
mov
add
add
les
cld
scas
push
push
mov
mov
lea
in
hlt
and
jecxz
std
adc
imul
add
cmc
call
sub
call
push
or
push
adc
add
test
ret
nop
push
test
jne
ss
push
push
test
cwde
in
hlt
add
add
dec
std
xchg
mov
push
pop
clc
stc
call
(bad)
sub
jmp
test
mov
test
pop
in
hlt
sub
rol
fiadd
push
push
lods
pop
and
call
in
or
shr
push
call
popf
cmp
add
add
add
add
not
mov
lea
in
hlt
add
xor
test
xchg
push
test
push
sbb
call
jmp
xor
jnp
mov
inc
test
mov
push
push
add
add
add
add
popa
push
(bad)
fwait
inc
es
mov
inc
cmp
movs
pop
lods
add
fprem
xchg
push
push
lods
add
mov
cmp
adc
ss
adc
test
sub
push
lea
xor
sbb
push
lea
add
sub
fisttp
push
(bad)
fistp
adc
idiv
xchg
push
pushf
jmp
test
test
dec
add
dec
pop
std
and
jge
adc
lea
push
js
jecxz
test
and
cmp
add
popf
mov
cmp
sbb
sub
bound
add
jecxz
test
push
idiv
cwde
div
das
jge
je
cmc
push
ins
test
iret
push
inc
(bad)
fneni(8087
jbe
push
test
xchg
xor
mov
or
icebp
(bad)
push
not
popa
add
xchg
(bad)
bound
cs
jmp
or
mov
sub
clc
out
dec
idiv
jecxz
dec
jmp
dec
test
add
add
add
add
out
pop
push
std
adc
test
xchg
dec
test
xchg
sbb
jmp
dec
test
sbb
add
stos
test
outs
ret
pop
std
popa
ror
sbb
imul
push
fdiv
inc
dec
test
add
add
add
fist
call
sbb
sbb
inc
dec
test
sub
cld
push
mov
and
(bad)
fwait
dec
sub
in
in
push
jge
add
push
mov
mov
mov
dec
sub
cld
add
call
and
push
call
ins
pop
mov
lods
add
and
push
mov
dec
idiv
cwde
in
xor
mov
adc
add
cmps
rcl
add
xchg
into
dec
imul
stc
add
in
test
fwait
cmp
sbb
clc
mov
xor
add
mov
add
dec
pop
enter
inc
add
into
sub
push
in
test
in
mov
in
nop
push
push
in
xchg
push
jae
pushf
push
push
in
mov
in
lods
push
xor
enter
mov
popa
dec
call
sbb
push
daa
cmp
push
test
(bad)
mov
movs
idiv
push
add
pusha
bound
mov
fwait
dec
xor
inc
or
inc
data16
ret
test
jmp
sub
mov
inc
cmp
jae
add
dec
nop
movs
jmp
setg
or
mov
outs
call
test
idiv
outs
cmp
jmp
test
sbb
jmp
bound
dec
outs
call
lea
add
movs
idiv
add
idiv
jle
mov
and
jmp
push
mov
test
idiv
xchg
test
cwde
test
not
mov
rcr
push
idiv
(bad)
cmp
cld
add
or
push
imul
xchg
jb
jmp
test
push
test
(bad)
(bad)
inc
add
mov
inc
push
mov
xor
dec
test
mov
push
idiv
sbb
dec
test
test
shl
sbb
scas
cld
inc
sbb
test
jae
test
add
add
add
loope
(bad)
dec
adc
xor
stc
call
push
cmp
(bad)
dec
test
pop
aad
mov
jle
inc
mov
or
in
in
sbb
mov
jbe
lea
xchg
call
inc
cdq
dec
adc
mov
push
cli
(bad)
stos
jmp
xchg
inc
push
mov
inc
push
clc
inc
push
push
mov
aad
call
and
mov
and
pushf
add
test
jbe
mov
loope
push
test
xchg
popf
idiv
mov
jmp
jmp
test
push
idiv
idiv
mov
add
add
add
add
push
test
push
xor
inc
paddb
(bad)
lods
add
cmps
pop
jge
mov
addr16
cmps
inc
push
jnp
jb
je
call
(bad)
(bad)
movs
call
outs
cmc
push
inc
es
test
push
test
or
cld
inc
add
cld
idiv
mov
pop
jge
push
push
not
out
hlt
call
push
push
inc
aam
pushf
rol
sbb
call
cmc
(bad)
dec
dec
idiv
add
cmps
push
test
push
imul
xchg
cld
inc
stc
mov
adc
inc
xor
add
test
dec
(bad)
jecxz
idiv
and
mov
shl
call
push
call
push
mov
(bad)
imul
jmp
inc
push
test
imul
adc
inc
mov
jbe
add
and
not
fmul
jmp
add
test
test
fcom
mov
lea
push
fstp
jp
push
not
mov
std
adc
bound
adc
std
and
add
(bad)
mov
sbb
ds
push
dec
repnz
mov
ins
cmp
in
jmp
out
add
idiv
push
aad
or
pop
inc
fcom
pop
cmp
sub
clc
addr16
test
push
mov
sbb
inc
xor
and
ja
push
push
mov
add
sti
(bad)
mov
outs
clc
out
xchg
stc
inc
push
das
inc
data16
cld
and
mov
push
or
mov
mov
push
fwait
dec
call
(bad)
or
jo
aad
push
call
test
push
call
out
adc
xor
ret
jl
inc
xchg
sbb
mov
arpl
jmp
add
add
stc
inc
stc
jne
out
inc
cld
bound
add
les
mov
jbe
pop
dec
add
cld
or
cmc
aas
std
xchg
popa
pop
add
add
call
lea
stc
inc
xchg
sub
pop
sti
push
sub
add
add
add
add
add
(bad)
jle
push
std
adc
mov
jle
dec
std
mov
mov
jg
sti
(bad)
mov
ss
mov
arpl
outs
ret
and
imul
push
(bad)
imul
inc
push
add
push
cmp
movs
mov
add
add
add
add
push
lahf
loopne
push
add
add
dec
cwde
inc
xor
cwde
push
ss
mov
div
inc
mov
ss
pushf
div
inc
aam
ss
mov
nop
add
call
adc
inc
sti
call
inc
cld
fs
repz
inc
add
pop
popf
add
lea
add
scas
stc
jmp
xor
cli
call
stos
out
or
shl
inc
push
pop
mov
(bad)
icebp
scas
cld
mov
add
jmp
in
inc
std
inc
pop
mov
test
nop
cwde
ins
cld
movd
xchg
jmp
mov
sub
cwde
aas
std
add
mov
add
call
inc
xchg
test
adc
cmp
popa
sub
(bad)
jecxz
sti
jmp
sbb
adc
inc
(bad)
ret
sub
inc
call
push
inc
xchg
add
outs
push
stc
jmp
adc
mov
add
inc
fwait
xchg
in
addr16
(bad)
push
imul
sub
cli
push
jle
xchg
inc
xchg
test
lods
ret
fwait
loopne
jmp
fs
add
das
ins
inc
jmp
push
jecxz
push
jmp
add
inc
and
cli
push
mov
add
add
fwait
aam
jmp
cwde
loopne
mov
push
lea
pop
loopne
push
(bad)
stc
mov
adc
push
mov
cli
(bad)
sbb
or
mov
mov
cli
call
cmc
cs
(bad)
pop
std
adc
or
add
sti
stc
push
repz
jmp
sti
push
(bad)
stos
std
adc
fcom
call
cmc
add
shl
(bad)
adc
push
call
fdiv
lods
jmp
jl
mov
pop
je
adc
repnz
inc
sub
add
stc
lea
sti
call
add
mov
add
cld
stc
jmp
and
inc
(bad)
stc
lea
mov
call
sti
stc
call
scas
stc
add
sub
inc
sti
stc
call
aad
or
sub
call
push
mov
je
pop
push
xadd
mov
mov
inc
jmp
add
add
add
add
push
inc
mov
test
test
and
pop
repnz
inc
sub
inc
mov
push
jne
push
and
push
push
jne
push
xor
push
adc
push
and
push
xor
push
adc
push
adc
push
jecxz
push
inc
call
sbb
jge
fbstp
add
add
iret
mov
cmp
sahf
clc
jmp
sub
push
mov
cmps
mov
add
adc
inc
lods
push
lods
add
sub
clc
imul
mov
dec
pop
lds
mov
(bad)
stc
(bad)
sbb
pop
call
and
sbb
stc
lea
test
xchg
and
call
sar
sub
(bad)
push
std
mov
repz
inc
std
scas
call
(bad)
fld
loope
xchg
mov
or
push
std
mov
(bad)
push
or
mov
mov
mov
std
stc
(bad)
ds
std
inc
sub
or
add
and
jmp
sti
(bad)
out
adc
(bad)
and
cmc
inc
cld
scas
pop
mov
jl
push
mov
fist
fist
aas
add
mov
pop
mov
pop
movs
(bad)
fwait
dec
add
push
lahf
loopne
sar
stc
mov
cs
cwde
loope
inc
cwde
jbe
inc
mov
add
xchg
mov
sub
mov
sub
pushf
jbe
inc
lods
(bad)
sub
inc
mov
inc
repnz
call
push
cmc
sbb
mov
jl
into
pop
popf
je
and
(bad)
(bad)
jmp
scas
mov
sub
mov
shr
mov
repnz
cld
call
lods
pop
add
add
add
movs
push
shr
repnz
call
jne
adc
sar
add
stc
call
xchg
xor
jge
(bad)
pop
or
mov
mov
stc
lea
sti
inc
inc
cld
mov
lea
stc
call
adc
add
add
add
add
lods
mov
mov
mov
xchg
pop
mov
fsubr
sbb
pop
mov
xchg
jae
sbb
sbb
neg
or
and
dec
cmp
add
retf
std
psubsb
xor
mov
stc
jmp
add
push
mov
xor
cmc
(bad)
mov
pop
mov
mov
adc
cmps
lods
rol
clc
call
test
movs
jns
lods
add
pop
dec
clc
call
lock
push
repz
push
jmp
icebp
ret
xchg
loopne
retf
lock
push
add
add
add
stos
push
inc
add
aaa
add
inc
add
stc
push
mov
icebp
ret
(bad)
loopne
jmp
stc
mov
stos
push
lea
stc
jmp
icebp
stc
(bad)
sbb
sbb
add
push
call
or
inc
repnz
call
add
hlt
stc
sbb
pop
jmp
fs
xchg
into
ret
retf
repnz
stc
mov
repnz
lea
and
cwde
stos
cld
add
lea
sti
call
repnz
push
xchg
cmp
jmp
idiv
push
sub
mov
inc
repnz
call
add
cmc
pop
mov
outs
aam
cld
popa
push
push
lea
sti
inc
add
lods
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
out
jl
jmp
es
pop
popf
bound
in
ins
add
add
pop
xchg
clc
jmp
inc
(bad)
data16
add
stos
stc
jo
repz
push
inc
add
ins
jmp
out
push
xor
ret
leave
call
push
push
sub
push
jmp
sbb
inc
xchg
enter
repz
sbb
dec
lea
sar
push
(bad)
loopne
movs
hlt
stc
mov
add
lock
cld
ja
push
adc
inc
push
and
je
out
(bad)
fwait
in
out
inc
cmc
(bad)
jle
icebp
inc
push
and
mov
xchg
out
pop
jb
clc
mov
jge
jmp
mov
add
mov
(bad)
sbb
add
mov
inc
cli
push
inc
lods
xlat
mov
movd
cld
add
and
(bad)
fcomi
adc
call
cld
cli
jmp
stc
mov
push
and
ret
stos
in
call
int
xchg
adc
jge
lahf
pop
cwde
call
test
mov
stc
jmp
in
push
and
add
add
add
push
in
(bad)
sbb
mul
sar
cmc
call
nop
push
arpl
push
xor
push
push
pop
test
push
pop
mov
and
push
push
pop
lods
push
xor
push
adc
push
and
sub
mov
repz
sbb
sub
dec
and
or
scas
add
imul
add
and
dec
cmp
inc
es
pop
pop
mov
lea
hlt
stc
dec
pop
cmps
cld
xchg
pop
mov
pop
ins
cld
es
push
cmp
push
popa
mov
push
hlt
jae
cwde
ins
cld
daa
ds
mov
sub
stc
push
jle
cmp
adc
and
(bad)
jno
push
je
mov
jge
inc
add
idiv
push
repz
mov
daa
cmc
(bad)
mov
adc
stc
(bad)
fwait
add
rol
clc
call
fild
imul
movs
jns
scas
add
fild
add
sahf
loopne
adc
stc
push
jae
push
jmp
mov
dec
add
push
repnz
push
push
cmp
ret
mov
stc
push
and
ret
mov
and
in
mov
jp
add
push
(bad)
repz
stc
jmp
and
fwait
in
call
shl
push
call
repz
(bad)
ror
mov
add
popf
fld
inc
mov
repnz
sbb
jmp
aam
xchg
mov
inc
shr
(bad)
stc
mov
or
cs
lea
or
inc
mov
sbb
call
icebp
inc
push
adc
ins
jmp
out
stc
push
test
icebp
stc
call
add
add
add
or
cmc
push
mov
out
push
mov
(bad)
(bad)
inc
fiadd
adc
test
scas
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
outs
cmps
into
jmp
mov
push
sbb
add
add
xchg
xchg
clc
jmp
scas
std
call
data16
mov
push
stc
inc
ins
mov
jmp
(bad)
jecxz
stc
call
in
cld
push
ret
addr16
fist
call
cmp
mov
inc
cld
push
ret
popf
cdq
mov
jnp
test
in
stc
inc
ret
mov
fs
add
ds
cmp
inc
jle
add
ins
call
scas
call
push
and
jle
scas
cld
or
mov
jmp
call
pushf
push
xchg
stos
add
pop
adc
rol
idiv
push
jecxz
movs
mov
lods
add
adc
fcomp
cmc
jmp
aas
inc
add
es
stc
(bad)
pop
in
xor
and
cmc
call
stos
add
cmp
mov
cwde
gs
xor
add
mov
cmp
int
sbb
es
sbb
xor
xor
adc
jg
inc
ret
mov
add
out
stc
call
mov
mov
mov
inc
cld
fs
and
(bad)
jns
inc
(bad)
jns
inc
mov
jns
inc
push
mov
jns
inc
push
jns
inc
dec
jns
inc
fidivr
lea
stc
(bad)
ds
mov
push
pop
popa
cmp
lahf
push
add
add
xlat
mov
add
out
(bad)
jmp
imul
adc
call
in
pop
add
adc
mov
cdq
loopne
adc
push
repz
and
push
call
pushf
loopne
(bad)
in
stc
sbb
push
lea
and
inc
sar
mov
in
cld
aad
mov
add
add
add
add
scas
mov
test
cld
add
imul
lea
sbb
dec
adc
dec
push
and
push
pop
imul
sbb
inc
push
sub
add
test
lods
add
sbb
(bad)
in
fs
mov
add
jns
inc
mov
mov
jns
inc
(bad)
jns
inc
retf
inc
mov
jns
inc
cli
jns
inc
dec
jns
lea
stc
jmp
cs
inc
(bad)
and
test
inc
or
scas
mov
jle
stos
cld
add
inc
add
(bad)
adc
mov
pop
stc
jmp
call
dec
xchg
inc
shl
push
jle
test
stc
push
pop
cmp
sbb
xor
add
pop
cmp
stc
(bad)
imul
out
sbb
inc
mov
push
rcl
or
add
inc
das
inc
(bad)
jmp
pop
lea
(bad)
lods
rol
clc
jmp
add
add
inc
lods
add
push
icebp
inc
xchg
and
ror
jmp
call
push
cwde
push
mov
movs
push
shr
push
shr
push
mov
add
push
aam
xchg
push
sub
mov
sar
sbb
sbb
push
stc
inc
jmp
xor
out
stc
push
pop
mov
(bad)
sbb
xor
leave
xchg
sti
push
pop
test
stc
push
mov
sar
call
adc
daa
sub
add
push
rcl
int
sti
(bad)
in
loope
inc
and
stc
push
inc
test
les
add
push
lea
push
call
jl
mov
jnp
pop
jmp
add
stos
add
sbb
inc
or
jmp
call
clc
sldt
outs
sti
pushf
cld
xchg
and
nop
jmp
addr16
(bad)
(bad)
push
(bad)
jmp
push
(bad)
fild
push
lea
push
lea
push
lea
add
push
lea
cmp
aad
shl
cmp
pop
imul
dec
jb
cld
mov
aam
push
jae
add
pop
ins
cld
cmp
es
add
test
stc
jmp
cmp
cld
add
lahf
cld
popa
xchg
pop
stos
mov
stos
pop
pop
mov
retf
std
mov
jmp
cld
int3
(bad)
mov
xchg
jne
jl
call
fild
jmp
and
ins
cld
add
gs
add
jb
cli
jmp
dec
inc
push
and
stc
call
mov
add
inc
xchg
(bad)
loopne
mov
stc
mov
mov
test
cld
cmp
dec
cmp
inc
jno
inc
mov
mov
add
aad
rol
pop
paddb
add
test
test
call
inc
ins
push
(bad)
jmp
cli
call
sub
inc
mov
and
call
push
imul
(bad)
fwait
(bad)
cmp
hlt
jmp
jae
push
dec
aad
mov
hlt
sti
jmp
inc
mov
dec
cld
ds
repnz
adc
(bad)
jae
mov
pusha
loopne
add
dec
(bad)
stc
mov
sbb
mov
sbb
test
(bad)
stc
push
xor
scas
cmp
jnp
add
sbb
mov
test
fwait
std
ret
stc
mov
pop
or
push
mov
(bad)
jecxz
stc
jmp
xor
fwait
lds
sti
enter
xor
inc
add
push
pusha
mov
jbe
inc
cld
fstp
shl
out
inc
cld
and
jns
fiadd
mov
mov
add
cld
mov
sbb
push
pop
cmp
rcr
push
not
test
add
push
xor
(bad)
mov
(bad)
stc
push
jmp
ret
stc
call
mov
mov
add
add
add
retf
dec
xchg
cld
and
(bad)
(bad)
inc
cld
push
xlat
adc
loop
pop
pop
(bad)
xchg
int3
std
add
inc
push
inc
cld
push
xchg
jne
pop
jl
fld
cli
(bad)
cmp
ins
cld
add
xchg
in
jl
clc
out
into
cli
inc
pop
das
inc
(bad)
mov
ins
fisttp
mov
jmp
add
cmps
sahf
jae
das
fs
mov
cld
add
mov
ret
jmp
inc
ret
dec
loopne
or
stc
mov
push
push
and
push
(bad)
shl
xchg
push
adc
stc
(bad)
pop
lds
repz
cli
dec
pop
mov
mov
cld
add
fcom
adc
push
ret
jne
jmp
sbb
cmp
mov
mov
add
jbe
mov
sbb
jb
inc
add
push
ds
push
or
cs
add
popa
loopne
mov
stc
push
jmp
mov
cmc
push
ret
dec
xchg
xchg
cld
and
(bad)
fstp
and
add
add
add
and
inc
push
rcr
add
inc
add
push
fst
retf
xchg
ret
pop
std
ret
jns
ret
sub
imul
call
mov
scas
jg
dec
mov
outs
xlat
(bad)
xchg
pop
inc
pop
fld
dec
push
test
add
lods
mov
fadd
dec
ds
mov
push
xchg
mov
sar
stos
pop
stc
jmp
retf
mov
sar
adc
push
dec
mov
(bad)
mov
lds
call
mov
or
xor
add
lods
jne
fidiv
mov
add
push
pop
push
push
or
push
idiv
(bad)
fwait
push
call
cmc
js
mov
ret
mov
cld
xchg
ja
lea
stc
jmp
mov
ins
inc
call
push
mov
or
mov
mul
adc
jmp
xor
mov
mov
pop
mov
aad
adc
xchg
inc
xchg
push
(bad)
mov
jg
sbb
ret
scas
jge
push
xchg
nop
mov
clc
mov
inc
stc
jmp
shr
mov
cld
dec
mov
retf
push
xor
fdivr
mov
imul
mov
cld
push
add
aad
adc
movs
mov
inc
push
cmc
and
jge
stos
pop
mov
push
jl
pop
push
jle
idiv
push
and
call
call
jne
test
mov
mov
inc
mov
cmc
push
daa
test
mov
push
add
add
add
add
je
mov
xchg
jmp
mov
stc
jmp
repz
cld
mov
(bad)
nop
inc
mov
jne
push
and
mov
lods
stc
jmp
scas
xchg
inc
lods
test
adc
jl
pop
mov
push
mov
dec
mov
ret
inc
mov
popf
inc
inc
add
sbb
jl
ins
clc
dec
dec
and
mov
stos
jg
dec
test
dec
out
call
push
jmp
pop
push
push
push
mov
add
mov
(bad)
mov
stc
push
pop
pusha
mov
ja
out
test
jne
push
jo
add
mov
(bad)
pop
add
inc
push
push
push
pop
cmp
dec
jbe
mov
xor
push
xchg
mov
lahf
xchg
mov
sbb
scas
dec
ret
std
push
ja
dec
push
mov
mov
out
imul
mov
es
imul
scas
or
or
test
iret
or
pop
pop
add
add
add
and
push
(bad)
je
mov
inc
stc
jmp
mov
jge
mov
(bad)
and
ret
pop
loopne
xchg
test
adc
or
or
or
call
lds
mov
mov
inc
push
sub
stc
(bad)
sub
mul
add
dec
adc
mov
mov
and
test
stc
mov
cli
push
imul
je
addr16
jo
add
sub
call
push
sar
push
call
rol
inc
and
lock
stc
push
shl
push
dec
gs
xchg
sar
add
jmp
jmp
mov
inc
cld
sub
inc
push
sub
je
sar
(bad)
sbb
mul
cmps
or
dec
sub
sahf
scas
adc
xor
push
in
cmp
lods
xchg
lock
addr16
addr16
add
push
push
fldcw
adc
add
fwait
adc
rol
repnz
outs
scas
and
jge
retf
mov
mov
push
movs
push
xchg
push
das
inc
es
mov
pop
mov
pop
mov
pop
mov
dec
in
retf
cs
mov
lods
add
js
cmp
lods
stc
xor
add
or
stc
xor
cmc
rcl
jl
jne
dec
mov
test
clc
out
push
clc
(bad)
jge
ins
and
inc
into
inc
or
and
push
imul
retf
cli
jmp
push
adc
mov
add
mov
iret
stc
push
add
push
jmp
rol
inc
mov
sar
mov
sar
inc
shl
and
(bad)
adc
push
call
and
and
fsubr
pop
ds
cld
inc
ja
push
int3
test
mov
aam
(bad)
lea
add
add
jmp
shr
jmp
add
add
add
(bad)
aad
push
jl
mov
fsubr
(bad)
lods
fwait
cld
mov
stos
mov
ds
pushf
cld
inc
and
lea
aam
jmp
movs
cld
mov
sub
call
sbb
push
in
inc
cld
in
mov
jne
xchg
stc
push
add
add
add
mov
ins
cld
pop
ds
pushf
cld
inc
push
inc
push
sar
fdivr
adc
call
push
mov
je
sar
call
jne
mov
fsubr
(bad)
sub
cld
mov
test
stc
(bad)
ds
(bad)
sar
inc
shl
test
cld
pop
ds
inc
add
pop
mov
inc
call
xchg
mov
push
mov
xor
jmp
mov
inc
lock
cld
sbb
(bad)
fld
sti
jmp
(bad)
stc
jne
out
inc
cld
jo
je
add
jne
xor
test
stc
push
retf
xor
add
cmp
pop
scas
xchg
std
push
bound
push
add
inc
ret
mov
mov
pop
mov
jmp
(bad)
stc
call
push
cld
cmp
add
stc
(bad)
jle
cmp
mov
mov
mov
(bad)
stc
(bad)
xchg
xor
or
vpsubsb
add
add
mov
fwait
lds
or
(bad)
jle
push
inc
push
add
imul
call
lds
mov
(bad)
sub
push
call
push
add
arpl
cwde
(bad)
mov
aam
call
and
sti
mov
call
add
add
add
lds
ret
dec
loopne
addr16
stc
push
sub
mov
sbb
pusha
dec
shl
pop
stos
mov
inc
into
popa
loopne
lods
vpunpckhdq
jg
mov
inc
mov
inc
icebp
inc
push
test
clc
pop
mov
movs
(bad)
pop
aad
call
scas
call
mov
sub
cwde
add
inc
hlt
inc
cwde
push
test
cmc
inc
movs
div
inc
mov
test
test
cmc
inc
lods
div
inc
aam
test
test
sub
stc
call
mov
lock
or
push
scas
add
xchg
adc
cmp
mov
into
cli
jmp
pop
loopne
and
stc
(bad)
fwait
lds
push
add
iret
stc
jmp
mov
add
sar
cli
clc
cmp
sar
jne
mov
hlt
mov
clc
je
adc
mov
ror
inc
cmc
mov
fldenv
cli
(bad)
out
nop
fsubr
mov
fsub
and
inc
xchg
xchg
(bad)
fld
add
push
jmp
mov
loopne
sar
call
and
loope
and
call
pop
mov
rol
inc
add
push
out
stc
lea
mov
cld
adc
xor
sar
(bad)
fdiv
std
inc
add
arpl
jmp
sar
add
neg
(bad)
xchg
shr
out
aaa
clc
mov
cmp
add
lea
stc
jmp
cdq
jmp
fisttp
inc
stc
jne
mov
xor
les
mov
jbe
pop
xor
sar
fdiv
cld
fs
shr
xchg
pop
pop
add
add
scas
call
cmp
stc
inc
test
xlat
stos
add
ud1
mov
into
stc
push
and
ins
inc
sbb
xchg
ss
push
and
push
jmp
inc
loopne
jae
stc
push
jecxz
ins
inc
push
(bad)
fisttp
ret
dec
loopne
add
(bad)
stc
sbb
push
(bad)
fcmovnu
cli
call
inc
loopne
icebp
int
mov
jecxz
cld
jns
dec
das
xchg
retf
daa
push
mov
stc
(bad)
fist
cmc
(bad)
mov
sbb
stc
call
mov
sbb
stc
(bad)
jmp
pop
call
sub
adc
xchg
cmp
inc
test
mov
gs
push
aas
jle
inc
das
mov
mov
in
jecxz
cld
ins
leave
or
loop
and
mov
into
cli
inc
ret
mov
sbb
stc
call
leave
inc
test
shl
mov
arpl
push
mov
stos
push
mov
sar
inc
retf
dec
push
mov
test
stc
(bad)
fsubr
add
ret
inc
iret
push
dec
mov
sub
iret
stc
(bad)
fwait
int
out
jg
push
test
add
add
add
mov
jne
sar
mov
xchg
stc
ret
retf
and
or
(bad)
mov
dec
xchg
add
mov
push
addr16
xchg
inc
retf
data16
xor
test
push
mov
in
push
lea
test
add
mov
add
jg
mov
inc
add
jp
test
sbb
addr16
sbb
arpl
push
fwait
test
idiv
es
int
test
inc
idiv
es
jg
cmp
adc
int
mov
int3
dec
push
int3
scas
mov
(bad)
xor
fsub
push
popa
jnp
rol
add
scas
xchg
ror
gs
sub
(bad)
pop
add
sub
je
das
cmp
outs
imul
sub
daa
addr16
add
call
inc
hlt
gs
jg
test
add
test
sbb
push
rcl
sbb
push
scas
add
movs
repz
(bad)
jle
aas
inc
es
lods
and
test
pop
and
add
out
add
mov
hlt
call
sbb
push
pop
jmp
lea
mov
test
add
push
stc
jmp
push
(bad)
sub
cmc
out
jge
call
xchg
cmp
mov
jge
(bad)
scas
add
xchg
jl
sub
lds
add
xchg
jne
push
cmp
stos
mov
scas
push
(bad)
call
call
movs
jmp
jp
add
out
ins
xchg
inc
xchg
inc
push
sbb
and
(bad)
push
push
sbb
and
lds
xchg
inc
push
sbb
and
test
add
cmp
and
sbb
add
cmps
lods
add
sbb
std
out
div
(bad)
mov
and
add
mov
ret
push
shl
add
cmc
sbb
daa
lods
add
fsub
add
(bad)
idiv
mov
lods
ret
xor
out
dec
int
push
push
mov
call
mov
lods
ret
xor
jmp
call
in
mov
mov
jl
cld
mov
addr16
(bad)
pop
add
adc
das
mov
call
rcl
and
xchg
cmp
out
retf
lea
lods
ret
adc
call
mov
jge
add
xor
call
jmp
test
jl
sub
cmp
mov
dec
lods
add
mov
add
push
test
stos
add
jle
jnp
cmps
push
jge
xor
test
test
add
inc
or
add
inc
xor
jmp
jl
xchg
xor
inc
(bad)
ror
call
lea
stos
push
(bad)
call
call
test
sbb
adc
aad
push
pop
sub
add
and
add
mul
dec
test
pushf
cld
mov
test
jge
fisubr
sbb
gs
add
ret
add
cs
stos
add
ds
inc
std
and
shl
and
stos
add
sbb
or
in
fld
aad
mov
inc
push
and
test
test
add
loop
hlt
dec
xor
loop
(bad)
test
clc
mov
dec
mov
cmps
test
stc
push
adc
and
push
test
sub
mov
or
add
mov
and
test
pop
loopne
fcmovb
stc
add
sbb
nop
add
mov
call
lods
test
dec
push
cmc
jmp
pop
loopne
ins
(bad)
stc
push
sub
mov
out
jl
mov
scas
cdq
xchg
(bad)
cmp
mov
popa
aad
add
inc
and
jle
and
sbb
mov
ret
mov
inc
add
(bad)
stc
push
jecxz
sbb
(bad)
fimul
call
jbe
cmp
test
in
add
and
test
push
cmc
call
push
sub
mov
lea
cmp
outs
push
std
mov
mov
add
scas
psubsb
sti
inc
mov
add
out
ret
push
cmc
call
addr16
das
(bad)
stc
mov
mov
mov
loop
cmp
or
ins
sub
cmp
dec
xchg
(bad)
stc
cmp
mov
dec
call
xchg
jl
fwait
lods
mov
pusha
add
ins
clc
mov
jl
add
ja
hlt
push
mov
fidiv
sbb
sbb
outs
and
inc
and
lea
pushf
add
scas
push
(bad)
pop
dec
sub
(bad)
scas
adc
sbb
cli
jmp
ins
and
push
xchg
xchg
xchg
ret
jge
pop
sub
add
scas
ret
sub
push
pop
pop
add
xor
mov
fimul
sbb
mov
hlt
call
and
push
push
lea
cmp
fdivr
call
xor
and
and
sahf
(bad)
(bad)
stc
sbb
add
sbb
call
push
xchg
pop
mov
push
pop
jp
pusha
adc
ins
clc
mov
mov
jmp
mov
add
ds
add
pop
jmp
jle
and
mov
inc
dec
(bad)
jmp
(bad)
fimul
add
sbb
sub
jmp
in
add
shr
inc
xchg
jge
fsubr
add
xchg
jle
push
pop
sbb
add
stos
jl
jle
out
xchg
mov
inc
ret
jp
je
clc
das
inc
and
xchg
or
mov
push
push
(bad)
jmp
std
xor
orps
ins
and
not
call
jmp
adc
pop
push
inc
push
test
aaa
add
outs
gs
inc
push
das
inc
and
add
rcl
sub
xchg
add
inc
xchg
adc
mov
sbb
test
dec
loopne
repz
add
or
stc
push
or
test
lods
add
push
stos
add
mov
cld
mov
stos
cmp
jae
loopne
push
inc
add
xchg
inc
and
mov
dec
jp
loopne
fidivr
cmp
test
cmc
call
loopne
push
mov
push
(bad)
call
call
outs
push
push
lea
fs
lds
mov
hlt
jl
mov
scas
xchg
xchg
mov
clc
aaa
add
ret
jne
cld
sbb
stos
push
mov
dec
jl
retf
shl
(bad)
clc
sbb
(bad)
sbb
add
icebp
hlt
jmp
out
add
sbb
sbb
and
or
push
shl
and
out
inc
xchg
cld
adc
push
(bad)
ror
add
stos
call
lea
cmp
add
call
call
arpl
sbb
call
push
out
xchg
out
add
pop
dec
sbb
(bad)
test
sti
push
inc
test
mov
xor
mov
cmp
je
xchg
and
jecxz
sbb
call
test
mov
add
push
je
data16
pop
(bad)
mov
inc
add
xor
call
add
scas
fstp
daa
mov
data16
sub
add
call
add
mov
test
idiv
(bad)
jns
mov
push
inc
add
mov
mov
xor
(bad)
mov
add
push
and
xchg
mov
mov
add
dec
sub
push
cld
sti
(bad)
out
es
jp
jg
jp
stc
adc
out
and
push
lods
jl
push
mov
mov
jge
xchg
cmp
push
icebp
stc
push
mov
add
ss
add
mov
nop
int
clc
dec
dec
adc
movs
out
and
rcl
pop
outs
adc
add
pop
pusha
jne
fcmovbe
scas
fs
add
(bad)
sub
jbe
mov
in
sbb
sbb
(bad)
call
mov
scas
add
mov
test
stc
inc
jp
jge
dec
xchg
(bad)
cld
and
enter
sbb
add
lock
add
icebp
stc
dec
imul
add
clc
sub
shr
cdq
outs
mov
adc
fimul
pcmpgtb
inc
jne
les
clc
je
inc
inc
push
sbb
icebp
shl
jne
mov
loopne
inc
mov
add
pop
sti
jne
push
sbb
mov
adc
dec
call
add
add
add
(bad)
repnz
jmp
xor
push
inc
adc
and
add
in
jecxz
hlt
call
out
adc
out
je
cld
adc
sar
pop
test
inc
add
shl
stc
lahf
xor
fwait
out
or
push
cmp
pop
mov
stc
not
idiv
out
ins
pop
data16
(bad)
inc
xor
add
jmp
rol
test
add
add
je
pop
jge
scas
and
cld
push
mov
add
sbb
jp
clc
jae
inc
fs
fwait
test
jge
out
test
cld
adc
shl
cmp
jp
loopne
bound
pop
jmp
lods
and
add
add
pop
xor
add
ds
pop
add
and
test
sbb
outs
nop
mov
popa
(bad)
jnp
aaa
call
test
cmp
retf
rep
pushf
jg
jp
loopne
(bad)
mov
mov
push
sub
mov
stc
je
push
jg
outs
lods
ds
and
jae
ins
clc
push
jns
adc
clc
(bad)
sub
mov
adc
(bad)
pushf
hlt
call
cmp
(bad)
in
add
stos
call
mov
dec
and
out
inc
and
mov
and
loop
nop
aaa
pushf
sub
int3
int
clc
mov
pop
mov
jmp
unpcklps
cli
jmp
test
cmp
in
sub
add
sub
or
in
xor
stos
add
push
(bad)
jmp
stos
add
in
cmp
stos
add
ja
stc
jmp
mov
pusha
mov
ins
clc
dec
test
sbb
sub
(bad)
cld
add
mov
in
jl
jp
add
scas
ret
popa
mov
push
cld
test
loopne
inc
mov
push
or
mov
in
jl
outs
cmps
add
js
jle
push
mov
sbb
mov
lea
fs
add
fucomi
jb
jne
sar
test
icebp
movs
stc
jmp
idiv
es
cmp
sbb
inc
add
les
sub
out
inc
jge
data16
fldcw
and
fsubrp
(bad)
sbb
add
leave
cld
xchg
fisttp
mov
pop
mov
jg
mov
push
loopne
jno
stc
mov
and
and
add
fistp
and
stos
pop
loopne
int3
mov
mov
dec
adc
ins
and
mov
jge
mov
sbb
push
mov
call
cmps
in
hlt
push
mov
add
fs
mov
sbb
(bad)
xor
lea
fadd
out
call
jmp
dec
fadd
(bad)
mov
dec
add
pop
mov
pop
push
cmp
enter
inc
and
mov
fadd
xchg
mov
inc
jp
clc
out
mov
sbb
push
mov
call
outs
shl
add
ins
dec
(bad)
pop
sbb
or
mov
in
xlat
xchg
hlt
jmp
push
or
add
mov
or
adc
ds
leave
cld
inc
fxch
mov
dec
sbb
add
out
add
scas
icebp
stc
pop
lock
(bad)
cmp
xchg
movs
ins
and
fsub
push
jle
retf
xlat
lock
call
and
dec
lea
xchg
scas
cld
and
mov
add
add
add
fimul
add
scas
push
call
mov
and
call
scas
add
scas
movs
jle
mov
xlat
in
ds
inc
(bad)
lock
stc
call
idiv
(bad)
mov
cmp
ins
clc
(bad)
jmp
jp
movs
stc
mov
aaa
adc
jno
add
lods
(bad)
mov
test
pop
or
dec
test
call
jne
cmp
add
aad
and
push
mov
into
adc
adc
push
popa
jne
sbb
scas
fs
scas
add
(bad)
sub
idiv
push
ss
sub
jge
or
jge
add
gs
cld
out
xchg
hlt
call
jo
push
sbb
div
jne
mov
stc
push
aam
and
mov
add
sbb
xchg
lods
add
scas
in
xchg
cld
push
xor
imul
jl
mov
sbb
and
jge
mov
jge
movs
xchg
cld
out
mov
mov
lods
stc
adc
mov
aad
call
pop
cdq
jge
retf
adc
cld
cwde
dec
or
out
cmp
jns
andps
test
mov
lahf
hlt
call
jne
adc
cmp
jmp
out
test
popa
sbb
add
add
mov
push
(bad)
pop
or
stc
je
push
jge
jns
ror
aas
lahf
hlt
jmp
mov
int3
mov
pop
jne
jp
and
xor
and
movs
or
push
stos
add
ds
retf
cld
mov
pop
loopne
xchg
mov
push
(bad)
cmp
inc
add
cmps
xor
adc
clc
(bad)
sbb
mov
(bad)
call
mov
ret
inc
cld
inc
stos
ins
and
sub
hlt
jge
fild
sbb
push
stos
call
mov
das
ret
popf
(bad)
cld
add
push
and
sub
daa
stos
add
fimul
adc
add
pop
pop
jg
ja
(bad)
int3
inc
stos
jge
ins
lock
daa
mov
scas
xlat
stos
add
lahf
cwde
cmp
mov
jbe
sub
xchg
cmp
stos
pop
and
clc
icebp
stc
pop
xchg
clc
unpcklps
sbb
cwde
mov
adc
in
cs
stos
add
shl
and
add
push
stos
add
popf
inc
cld
call
cs
pop
stos
add
es
daa
stos
add
rep
stc
(bad)
aas
cli
mov
push
push
cwde
cs
aad
add
jb
cld
xchg
das
les
arpl
mov
in
xchg
stos
dec
push
(bad)
test
test
and
add
xchg
test
sub
data16
call
gs
das
mov
mov
data16
xor
jns
jmp
cli
push
(bad)
rol
call
pop
popf
jns
mov
mov
call
test
jp
add
add
out
jge
jae
and
(bad)
mov
(bad)
push
sbb
add
out
sub
sti
in
add
sbb
bound
and
test
fs
add
sti
jmp
push
jle
mov
mov
loope
call
les
test
or
mov
push
mov
and
push
mov
call
jns
mov
dec
pop
lea
add
mov
es
add
xchg
inc
add
cmp
sbb
add
fistp
sub
cdq
out
push
out
cmp
scas
add
sbb
mov
je
mov
repz
aam
sbb
daa
ror
xor
add
add
icebp
stc
jmp
or
out
jno
(bad)
loope
(bad)
cwde
outs
pop
out
dec
test
jmp
mov
mov
test
out
addr16
dec
inc
or
inc
push
jge
jp
jne
jp
sub
push
je
ret
(bad)
jmp
jmp
push
jge
add
adc
pusha
cld
push
(bad)
gs
push
push
mov
test
jge
inc
ficomp
out
jmp
adc
call
mov
push
or
bound
and
pop
scas
add
xlat
arpl
call
inc
xchg
leave
mov
cmp
add
add
add
loop
add
ins
loop
xor
jmp
dec
pop
jg
inc
inc
cmc
leave
xchg
push
jge
sbb
mov
scas
cmps
lods
add
(bad)
xchg
cmp
mov
stc
mov
jge
lods
cmp
hlt
icebp
stc
adc
sbb
dec
jmp
enter
pusha
and
add
jmp
in
mov
push
push
je
into
push
je
retf
xor
in
jmp
mov
call
das
cli
pop
add
and
xlat
lods
add
dec
sub
(bad)
jmp
test
add
lods
call
xor
mov
lods
add
cli
and
add
repz
mov
mov
add
add
mov
std
inc
and
add
inc
jne
push
(bad)
stc
push
jp
clc
call
push
add
or
test
and
and
cli
xchg
inc
or
add
pop
cld
mov
(bad)
xchg
add
stos
add
mov
push
adc
add
sub
dec
and
cmps
stos
add
stos
cmp
inc
xchg
ret
shl
aam
stc
adc
(bad)
xlat
aas
inc
xchg
and
and
test
mov
inc
and
add
xchg
mov
add
add
mov
cmps
add
adc
and
lea
stos
call
mov
add
and
inc
push
ret
or
fsubr
cs
out
shr
sti
stc
adc
pop
pushf
jl
sbb
stc
(bad)
or
inc
push
inc
lods
cs
cmps
push
rcl
clc
push
mov
xchg
jl
add
add
test
call
test
stc
sbb
call
push
add
jecxz
and
stos
add
mov
inc
push
and
lahf
push
and
pop
stos
add
es
jg
cmp
call
inc
mov
pop
mov
lea
scas
or
(bad)
test
stc
mov
sbb
call
stc
jg
mov
inc
test
mov
add
scas
hlt
add
inc
jge
mov
stc
mov
push
push
sbb
and
push
mov
add
push
lods
cld
and
les
outs
test
mov
add
pop
cwde
add
inc
dec
push
test
and
pop
into
mov
cmc
sbb
scas
jbe
cld
mov
mov
add
push
inc
stc
adc
add
mov
push
cmc
xor
outs
push
je
fidiv
idiv
xchg
pop
test
xchg
inc
jge
div
test
mov
add
test
mov
add
add
dec
out
add
dec
and
loopne
enter
cld
push
mov
push
out
imul
adc
les
add
inc
and
xlat
or
push
(bad)
stos
lods
hlt
add
mov
call
xchg
or
push
test
and
in
add
dec
inc
stc
(bad)
mov
hlt
sbb
cmp
adc
(bad)
jmp
sbb
call
inc
jne
mov
inc
push
push
adc
and
add
fs
add
xchg
cs
dec
(bad)
push
ss
cmp
jge
and
ret
sub
add
sub
add
push
scas
add
adc
clc
push
aaa
rol
(bad)
hlt
add
scas
(bad)
out
mov
call
or
push
in
sbb
mov
faddp
test
add
mov
inc
dec
inc
stc
sbb
(bad)
sbb
add
hlt
inc
cli
(bad)
out
sti
inc
lea
cmp
adc
cld
(bad)
mov
shr
out
inc
stc
push
test
and
scas
add
adc
and
mov
scas
add
adc
inc
(bad)
retf
add
scas
call
push
mov
and
add
adc
add
xor
cld
call
dec
lea
mov
(bad)
lods
push
(bad)
pop
stos
clc
add
lods
or
out
call
lea
stos
jo
sbb
inc
cmc
call
inc
stc
sub
(bad)
fisubr
inc
add
test
scas
add
push
push
cdq
mov
push
ffree
test
add
call
pop
mov
mov
call
push
test
dec
and
push
into
xchg
std
and
sub
jmp
and
in
add
or
mov
push
in
mov
in
add
cmps
lods
call
mov
mov
add
inc
cmc
call
push
dec
mov
lods
mov
inc
mov
or
xor
jmp
les
mov
push
push
fadd
and
adc
inc
mov
xchg
sub
test
lods
add
or
push
inc
dec
push
xor
pop
cmp
add
add
add
mov
lock
ds
cld
mov
test
add
inc
stc
xor
lock
cs
scas
lods
add
scas
jge
cld
mov
mov
mov
movs
idiv
push
arpl
and
jge
jbe
test
mov
add
scas
add
cmp
jp
add
push
cs
and
loop
enter
cld
and
mov
(bad)
mov
jecxz
dec
sbb
ret
pop
cmc
jmp
mov
cld
call
or
cwde
xor
add
jle
sti
inc
in
sbb
jle
cmp
jecxz
lea
jo
adc
(bad)
mov
add
clc
call
lods
and
jne
mov
jmp
push
push
sar
and
push
stos
add
mov
mov
mov
dec
mov
add
int3
mov
mov
cs
push
stos
add
cs
in
add
(bad)
test
add
arpl
mov
add
test
inc
cmp
or
xor
sbb
push
adc
inc
cmps
fld
test
mov
stc
sub
push
(bad)
ficom
adc
call
out
lea
cmp
out
cld
dec
shr
fwait
cmp
mov
push
add
(bad)
lods
cmp
sub
add
mov
xchg
sbb
out
call
push
arpl
add
cwde
ss
dec
dec
lea
xchg
mov
cmps
mov
(bad)
sbb
sbb
cmps
mov
fsubr
test
jo
or
cmp
call
sbb
dec
lea
xchg
add
xchg
and
test
add
push
jne
xor
ret
cmp
jmp
nop
call
pop
leave
fmul
dec
imul
ret
dec
and
push
push
push
arpl
and
mov
and
movs
scas
add
jmp
mov
call
push
pusha
jl
add
xchg
or
xchg
scas
call
mov
fimul
call
rol
add
push
addr16
push
scas
mov
inc
mov
imul
addr16
cld
nop
push
jne
xor
mov
push
push
test
and
in
add
dec
fnsave
or
add
push
add
mov
push
dec
push
cmc
sub
xchg
test
in
sbb
jle
test
mov
mov
sar
lock
stc
push
test
and
lods
add
or
and
je
call
jmp
data16
add
mov
xchg
and
scas
add
jbe
test
scas
add
jnp
add
ds
add
sub
and
fnstcw
cwde
sub
in
add
ds
(bad)
mov
sub
loopne
fld
hlt
add
add
or
fdiv
hlt
xchg
lods
add
ds
out
inc
push
push
add
repz
sbb
dec
push
jne
adc
inc
lea
jo
out
cld
dec
stc
idiv
es
push
jne
cmp
push
push
mov
and
adc
add
pushf
shl
(bad)
mov
mov
add
dec
pop
cmp
mov
xor
add
xor
add
add
cmps
lods
add
fidivr
sbb
test
hlt
add
push
cli
jmp
push
sbb
into
popa
aas
inc
push
fadd
test
movs
call
sbb
dec
(bad)
stos
mov
add
lods
and
sbb
cli
call
inc
lea
cmp
push
cld
dec
fmul
dec
add
gs
stc
push
xor
lods
add
dec
jecxz
cld
xchg
sub
add
mov
mov
add
push
stc
push
adc
and
stos
add
mov
imul
lea
(bad)
fimul
sub
push
stos
call
lea
jo
int
ret
add
inc
cmc
jmp
movs
call
sbb
dec
lea
sub
call
and
cmps
add
jno
popa
mov
push
jne
rcr
ret
cmp
call
pop
jmp
xchg
call
push
cmc
lds
push
arpl
push
adc
and
aad
inc
add
stos
add
mov
mov
call
lods
jl
push
pusha
or
or
push
stos
call
mov
(bad)
call
fcmovb
test
push
cmc
jmp
jns
add
bound
dec
jp
inc
mov
cmps
add
in
mov
mov
(bad)
add
add
add
add
push
push
cwde
mov
add
jle
movs
cld
and
test
cmps
add
retf
clc
mov
mov
and
pop
add
repz
jo
dec
ja
adc
inc
(bad)
retf
add
call
and
stc
push
test
mov
push
mov
add
add
cmp
cld
mov
inc
dec
lea
mov
(bad)
cmp
jne
push
push
in
add
mov
add
mov
es
inc
stc
pop
test
and
fmul
sbb
xor
xlat
add
call
mov
add
ds
clc
inc
push
push
add
rol
cld
and
inc
lea
xor
jmp
mov
dec
or
jmp
pop
test
inc
stc
adc
xchg
les
adc
scas
add
bound
add
jbe
xchg
ins
test
mov
add
scas
add
ins
stos
push
call
add
pop
mov
add
cmps
scas
add
xchg
scas
push
call
in
and
gs
add
lahf
jmp
scas
call
push
sar
and
scas
add
or
cld
dec
mov
and
lods
add
fldcw
add
push
scas
add
mov
cld
inc
add
pop
adc
add
mov
push
in
add
pop
(bad)
clc
add
scas
sub
call
and
xchg
scas
add
stc
rol
call
sbb
dec
(bad)
jmp
les
and
gs
add
and
les
sti
and
sbb
sbb
add
push
test
add
fiadd
lea
lods
call
push
add
push
pusha
jp
push
push
push
xor
and
aam
add
mov
ret
movs
lods
add
or
mov
push
inc
jp
dec
pusha
jl
in
add
add
add
add
jmp
sbb
inc
stc
push
sar
and
lods
add
fimul
cmp
push
lods
call
push
lods
test
jmp
in
push
lea
lods
mov
push
and
mov
clc
call
fstp
test
and
in
add
add
icebp
(bad)
popa
les
mov
ror
lods
push
(bad)
sbb
ss
adc
mov
add
(bad)
repnz
push
push
rol
jns
and
inc
(bad)
rcr
call
push
jne
mov
push
lods
add
push
mov
cld
xchg
jmp
dec
cwde
sbb
push
lods
call
and
add
stos
stc
push
add
scas
add
xlat
outs
cld
mov
lods
mov
push
cmp
adc
in
jbe
lea
or
cmps
stos
rol
add
xchg
inc
sbb
mov
jnp
mov
idiv
add
pushw
xchg
and
mov
add
es
push
stos
add
jne
inc
sbb
add
xchg
rol
test
add
stos
inc
call
xchg
gs
arpl
sbb
mov
jp
test
cmc
jmp
jecxz
push
push
dec
stc
sbb
in
add
push
cli
(bad)
fbstp
lea
add
mov
retf
hlt
(bad)
jmp
cmp
jle
push
dec
push
push
rcr
and
push
stos
add
or
hlt
(bad)
jns
mov
inc
pushf
js
dec
jne
dec
pop
cmc
jmp
dec
push
push
mov
and
adc
add
test
hlt
(bad)
jle
icebp
inc
push
sbb
add
ds
cmp
ret
add
sbb
idiv
out
test
scas
add
rsm
add
outs
icebp
cmp
daa
ret
stos
add
push
sbb
add
and
add
sbb
ds
rcr
add
popa
ret
dec
cmc
jmp
call
sbb
push
lea
push
push
add
add
add
push
in
add
stos
add
bound
scas
mov
add
jmp
jecxz
jg
dec
stc
pop
or
dec
jp
call
push
cmc
and
outs
add
xchg
jbe
lea
rol
xchg
mov
retf
sub
cmc
and
scas
adc
mov
add
add
inc
jne
(bad)
jmp
cmps
cdq
dec
stc
push
rcr
push
push
mov
call
fldcw
and
adc
mov
push
mov
and
adc
add
xor
hlt
call
pop
cmp
and
push
mov
add
pop
mov
add
scas
dec
call
add
add
add
call
and
in
cmps
scas
add
push
cmc
jmp
dec
stc
sbb
push
lea
push
push
mov
test
scas
add
xchg
scas
adc
les
jg
test
pop
cmc
call
call
pop
imul
frstor
push
stc
push
jne
mov
test
scas
bound
jp
lea
xchg
add
scas
call
push
add
lods
add
ds
jb
mov
scas
add
xchg
jp
lea
dec
add
push
stc
push
xor
add
hlt
shl
(bad)
mov
sbb
add
sbb
and
gs
add
add
add
fcom
hlt
dec
push
add
and
adc
add
es
ret
push
cmc
call
jp
mov
bound
inc
mov
scas
add
sti
inc
test
(bad)
sar
inc
mov
in
push
pop
sub
xchg
lods
add
push
stos
cld
add
xchg
sub
or
test
stos
stos
add
dec
inc
(bad)
repnz
push
dec
push
mov
dec
and
inc
cli
jnp
push
push
push
jecxz
and
lods
add
out
hlt
dec
std
idiv
es
or
push
push
push
xchg
adc
add
and
hlt
call
lods
add
cmp
mov
fdecstp
call
inc
in
jne
add
in
lea
xor
(bad)
lods
call
push
push
adc
add
sbb
pop
add
dec
stc
mov
(bad)
sar
data16
push
(bad)
ror
mov
push
and
lods
add
mov
push
mov
jnp
enter
add
add
add
add
daa
and
adc
sti
in
mov
push
inc
and
ret
inc
dec
sub
add
stos
dec
call
gs
and
aad
add
out
xchg
jae
push
push
loopne
push
mov
ins
cld
mov
mov
add
push
stc
push
inc
es
ss
ds
jae
inc
jnp
(bad)
jmp
and
(bad)
lock
stc
push
jne
mov
dec
test
jae
mov
test
idiv
push
inc
in
mov
out
add
(bad)
stos
rol
add
out
sar
(bad)
out
sub
add
cmps
jp
mov
and
add
push
stos
add
push
int3
(bad)
mov
stos
add
mov
rol
mov
add
pop
call
in
or
outs
sbb
outs
jno
inc
es
test
push
cmc
call
retf
int
stc
sub
push
(bad)
call
call
add
add
add
sbb
jmp
jnp
lea
mov
shl
dec
ja
mov
inc
es
push
push
push
push
push
and
cmps
test
hlt
dec
ja
mov
xor
jmp
push
jne
jp
cmc
call
cmp
add
nop
jge
dec
test
inc
data16
and
mov
add
add
sub
cld
loope
pop
dec
imul
call
out
and
add
test
ins
cld
mov
popa
clc
push
xor
and
mov
add
and
(bad)
mov
(bad)
push
clc
add
mov
call
push
xor
add
sub
add
fist
xchg
push
stc
add
pop
mov
lea
push
push
mov
and
add
mov
add
ret
std
hlt
call
call
pop
jns
mov
call
push
test
and
mov
add
loopne
cld
mov
retf
rol
out
call
push
add
scas
mov
mov
mov
add
inc
lea
in
add
add
push
and
test
scas
add
js
hlt
jmp
sub
mov
push
mov
add
cs
push
scas
add
scas
add
pop
mov
dec
imul
scas
add
xor
add
add
push
scas
ret
pop
cmc
jmp
xchg
call
lea
scas
inc
mov
scas
add
iret
push
and
les
fisubr
or
sub
add
lds
or
push
add
sub
add
mov
dec
and
sbb
add
inc
add
shl
and
data16
add
mov
mov
push
xchg
jb
add
mov
and
pop
scas
add
test
hlt
jmp
scas
add
leave
fimul
jmp
adc
pusha
jl
jmp
out
call
push
and
and
add
cmps
lods
add
sbb
in
add
lods
call
mov
cwde
pop
add
int
add
mov
imul
sbb
and
mov
fdivr
fsubr
add
fsubrp
(bad)
xchg
les
xor
xchg
mov
mov
push
hlt
add
lods
imul
push
in
or
sub
add
xchg
jmp
jne
push
jle
jno
sbb
in
cmps
lods
call
push
inc
xor
ds
addr16
inc
fld
jmp
cmps
xchg
add
lock
stc
push
add
test
mov
mov
call
pop
mov
mov
js
jmp
adc
jns
add
int
add
out
rol
add
out
dec
jns
add
test
jge
jno
stos
add
mov
cs
and
lods
add
jle
mov
add
add
add
add
mov
add
aad
add
gs
in
or
jne
push
outs
icebp
cmp
push
fcmovnb
test
hlt
jmp
jg
jle
std
clc
sbb
push
(bad)
stos
aad
add
stos
jae
mov
(bad)
aas
in
lea
iret
dec
call
or
mov
add
add
add
add
add
inc
and
(bad)
stos
add
js
hlt
(bad)
jmp
cmps
cmc
call
sti
je
mov
sti
push
push
adc
and
stos
add
adc
hlt
dec
jge
inc
push
sub
add
ds
movs
dec
fwait
mov
mov
jle
jmp
repz
add
sub
dec
push
(bad)
sub
and
mov
add
and
(bad)
test
clc
add
test
cli
call
and
(bad)
test
ret
cmc
hlt
call
cld
clc
sub
(bad)
fcmove
push
push
inc
repz
add
iret
add
les
add
ret
add
call
pop
mov
mov
call
push
test
add
data16
mov
aad
add
mov
test
movs
mov
mov
or
xchg
sub
mov
aad
add
hlt
clc
push
add
add
add
add
inc
add
inc
and
cmps
mov
call
cs
ds
xchg
mov
add
sbb
hlt
push
mov
jnp
mov
call
(bad)
pop
inc
test
shl
lea
mov
test
clc
hlt
jmp
je
ret
clc
lea
mov
mov
add
add
ret
pop
mov
mov
fisttp
fmul
sub
cld
movs
scas
add
lock
or
test
and
int3
jmp
repz
push
inc
cs
and
add
jne
repz
push
repz
add
push
xchg
jmp
mov
pop
adc
add
repz
push
rol
inc
pop
scas
add
sub
hlt
jmp
scas
add
leave
fisttp
jmp
push
hlt
outs
inc
repnz
jl
jne
lea
mov
out
call
push
push
inc
and
cmps
scas
add
sbb
in
add
scas
call
mov
rol
add
retf
data16
mov
call
add
out
aad
and
mov
fnstcw
call
scas
add
mov
sub
and
sbb
(bad)
call
call
push
jmp
in
add
add
loop
push
jle
ins
cld
sbb
in
xchg
lods
call
push
cmc
sub
and
test
add
fild
or
push
add
call
and
lock
stc
push
test
add
(bad)
sbb
add
mov
call
push
add
add
add
call
mov
lods
add
push
in
add
lods
add
lods
call
mov
lods
push
lea
leave
jo
dec
aad
add
hlt
hlt
call
out
clc
lea
aad
add
jmp
jmp
icebp
je
jb
ret
add
data16
pop
hlt
popf
push
dec
push
out
and
or
out
and
lods
add
scas
add
jmp
dec
and
add
mov
mov
add
push
jge
dec
fisttp
jmp
add
mov
cmp
cmps
stos
add
hlt
jle
call
add
fmul
aas
xor
clc
push
jecxz
sbb
adc
inc
sub
test
test
hlt
call
idiv
push
add
je
repz
jle
push
add
fisttp
xchg
dec
pop
clc
jmp
in
and
add
lea
xor
push
repnz
add
fnstcw
cwde
sub
add
les
cmps
inc
and
cmp
fld
hlt
add
ds
jmp
sahf
and
xchg
stos
add
inc
rcl
repz
sbb
dec
outs
data16
adc
inc
lea
stos
call
push
jne
mov
add
imul
imul
fild
sbb
hlt
call
stos
add
cmp
mov
call
lea
mov
out
call
lea
fadd
(bad)
test
and
add
xor
fdivrp
xchg
rcl
fidivr
inc
add
and
push
mov
add
stc
cwde
mov
push
loope
test
mov
clc
pop
mov
mov
call
push
test
add
pop
addr16
mov
mov
add
into
nop
add
mov
out
int
clc
lea
test
out
call
(bad)
pop
int
add
add
mov
add
sub
add
xchg
mov
mov
rol
cmps
mov
mov
mov
mov
loopne
test
hlt
call
fistp
out
mov
mov
dec
lea
mov
mov
mov
call
clc
ja
mov
mov
jmp
mov
adc
mov
push
cdq
and
add
ins
movs
and
xlat
scas
add
repnz
mov
iret
test
and
scas
add
or
loopne
pop
repz
mov
mov
cld
add
mov
add
jge
and
call
iret
lea
into
in
add
call
lea
add
scas
mov
pop
test
scas
add
retf
into
mov
xor
inc
es
and
add
(bad)
xchg
and
add
ss
test
scas
add
dec
stc
sbb
sbb
and
movs
scas
add
sub
out
inc
add
cmps
fimul
call
in
jmp
fist
repnz
sbb
pop
jmp
push
(bad)
fidivr
ret
out
call
fbld
stos
repnz
xor
retf
mov
and
push
scas
add
test
hlt
jmp
mov
call
push
xor
scas
add
dec
jne
cld
add
mov
mov
call
push
add
scas
add
pop
call
mov
pop
cld
xchg
mov
lods
mov
jp
(bad)
push
repz
dec
into
sbb
push
lods
call
mov
int
add
dec
cmp
xchg
and
jle
inc
add
mov
add
(bad)
aad
(bad)
mov
int
add
lods
push
push
cwde
sub
add
mov
pop
test
scas
add
sub
push
out
repnz
xor
xchg
and
sub
mov
ret
jmp
popfw
fild
jp
inc
add
sub
lods
add
fdivr
jmp
inc
inc
es
mov
(bad)
lods
add
fcom
add
mov
stos
mov
ret
std
hlt
jmp
(bad)
fist
lock
push
arpl
xor
cwde
and
aad
add
add
xchg
lahf
and
add
push
lahf
and
add
neg
ret
in
hlt
call
in
clc
sbb
inc
push
dec
sbb
push
lea
enter
jb
mov
lahf
idiv
es
adc
add
inc
push
mov
and
add
stos
add
test
mov
add
mov
mov
add
addr16
mov
stos
mov
in
and
scas
add
xor
jo
jmp
sub
ins
(bad)
sub
mov
jmp
mov
je
mov
and
add
test
test
idiv
add
push
jp
test
call
cmp
push
(bad)
call
call
movs
out
or
inc
jl
mov
ficomp
ds
cld
inc
jg
lea
mov
out
call
push
or
add
push
test
push
dec
jmp
mov
add
add
add
inc
and
mov
ins
add
push
mov
test
cmc
jmp
fisttp
xchg
in
clc
push
rcl
sbb
call
mov
movs
push
pop
imul
imul
test
cmc
call
mov
ffreep
push
stc
lea
push
lea
test
add
out
push
lea
or
and
aad
add
sub
call
push
stc
and
dec
mov
push
adc
call
test
mov
shl
jmp
and
add
lds
addr16
pop
shl
(bad)
retf
add
mov
jae
add
clc
push
mov
and
call
call
into
xchg
dec
inc
(bad)
and
in
and
test
inc
outs
(bad)
in
pop
sbb
push
lea
or
(bad)
sbb
add
fdiv
push
sub
test
and
scas
add
gs
add
xchg
and
add
cld
inc
pop
jmp
push
jne
push
adc
retf
jne
mov
call
push
mov
and
test
popa
cld
mov
add
ret
push
cmc
call
aas
loopne
mov
or
jmp
icebp
xor
(bad)
mov
add
inc
or
adc
push
mov
jmp
and
pop
inc
add
dec
push
inc
daa
ret
sub
push
scas
add
and
push
sbb
and
push
scas
add
add
inc
add
scas
call
pop
lahf
push
and
sub
adc
out
jae
add
mov
lds
call
pop
push
sbb
stos
jg
mov
add
sbb
hlt
add
(bad)
(bad)
inc
dec
and
jmp
and
stos
add
add
ins
inc
push
mov
push
lea
and
add
es
add
push
lods
add
add
les
add
and
add
icebp
inc
jne
push
lods
inc
push
arpl
add
xchg
(bad)
hlt
inc
adc
mov
push
stc
push
or
dec
and
inc
sahf
imul
fadd
xchg
lods
rol
add
cmps
inc
dec
ins
add
mov
inc
clc
jmp
ret
push
cmc
call
fbstp
jecxz
sbb
ja
rol
or
add
mov
pop
dec
cli
jmp
enter
add
lods
ret
pop
cmc
jmp
call
inc
pop
mov
scas
add
cwde
sub
aad
add
out
push
lea
add
or
sub
stc
push
dec
and
inc
push
imul
cmc
jmp
cwde
and
xchg
stos
add
pop
into
hlt
jmp
sub
add
mov
pop
call
std
push
inc
data16
fistp
cs
push
stos
add
ja
add
stos
add
add
stos
or
lods
call
pop
mov
sub
stos
jae
mov
in
call
ret
sub
stc
call
or
jp
test
push
cmc
jmp
push
stc
push
or
mov
in
and
add
fld
fs
push
jne
add
ins
(bad)
add
push
jnp
fninit
jle
shl
add
mov
mov
lock
xchg
dec
inc
push
jmp
and
test
and
jp
test
out
out
(bad)
test
repnz
mov
fs
push
inc
push
and
and
stos
add
jle
pop
cld
add
adc
imul
pop
add
and
and
cmps
add
scas
push
imul
cmp
(bad)
fimul
mov
(bad)
mov
sub
add
cs
les
inc
push
xor
out
and
add
out
jl
mov
xor
and
mov
add
pop
push
cld
add
inc
bound
jae
and
aam
add
push
lock
mov
call
out
loopne
inc
cmps
xor
or
imul
mov
pop
push
lea
push
cld
gs
ror
cld
and
les
in
dec
inc
pushaw
mov
pusha
ret
add
cmc
jmp
repnz
fidiv
cmc
jmp
pop
push
lea
mov
(bad)
push
sti
add
scas
mov
add
cld
call
or
push
out
out
mov
mov
scas
inc
push
xor
mov
cld
xchg
(bad)
clc
push
fstp
jp
idiv
add
xchg
push
xor
inc
inc
push
sar
push
cld
and
(bad)
fimul
ret
inc
cmc
call
fist
test
call
mov
icebp
inc
push
ss
ficom
push
inc
jge
(bad)
xor
add
test
and
in
add
ins
mov
sub
out
inc
push
xor
cwde
sub
add
jle
push
cld
sbb
pushf
mov
mov
sbb
xchg
scas
call
xor
ret
mov
call
jl
fild
loopne
fwait
mov
call
movs
dec
or
mov
stc
dec
xor
ins
push
add
xor
and
stos
add
test
and
in
add
ins
jb
and
push
and
push
inc
test
scas
add
lea
bound
int
call
lods
add
cmps
lods
mov
push
popa
and
push
push
repz
add
add
cs
lods
add
out
test
or
stc
mov
ret
cmp
(bad)
add
xor
pop
sub
add
ds
pop
add
(bad)
stc
mov
stc
std
int3
(bad)
pop
or
leave
call
cmc
(bad)
test
add
inc
stc
xor
jne
push
scas
xor
mov
call
call
push
mov
mov
stos
add
sbb
add
out
aam
cld
adc
repz
lods
call
push
mov
or
push
pop
ret
inc
cmc
jmp
fcmovnu
loop
inc
stc
add
call
push
arpl
add
mov
cld
aad
add
jle
mov
sub
and
movs
stos
add
sbb
sti
add
aam
push
and
call
cli
data16
inc
push
jecxz
sbb
ds
(bad)
cld
and
(bad)
rcl
ret
add
push
cmc
call
dec
loopne
js
stc
lea
dec
push
(bad)
mov
push
lea
stos
push
push
cwde
xor
add
ds
cld
mov
cmp
sub
ret
push
cmc
call
push
stc
push
cld
mov
mov
and
push
add
dec
and
repz
add
sub
cmp
call
mov
scas
add
(bad)
imul
cmp
cmc
call
hlt
and
add
jmp
(bad)
hlt
mov
jne
jmp
pop
ret
inc
cmc
call
jecxz
rol
cmp
(bad)
push
call
and
add
add
test
ins
add
cs
xchg
test
sbb
jle
pusha
cld
mov
scas
add
mov
inc
and
pop
mov
test
adc
aas
jle
call
repnz
add
ins
sbb
add
rol
(bad)
jnp
stc
test
add
popf
jge
pop
aad
inc
mov
sub
addr16
push
xchg
ds
and
add
mov
je
sub
sbb
inc
jg
mov
ins
add
and
je
movs
call
push
jecxz
sbb
sbb
hlt
push
mov
(bad)
(bad)
cld
adc
mov
sbb
xchg
add
and
add
xchg
and
add
in
daa
and
cmp
stc
push
xchg
repnz
(bad)
add
xchg
gs
nop
(bad)
scas
add
mov
pop
mov
loopne
sti
push
stc
push
add
add
test
leave
and
mov
loopne
add
sahf
jne
bound
cmp
pop
inc
add
cli
clc
jmp
mov
mov
fistp
cmp
sub
xor
add
xor
add
scas
fs
call
dec
push
xor
mov
add
sbb
inc
add
scas
add
outs
data16
xchg
mov
mov
es
xchg
push
pusha
fdiv
jne
(bad)
jmp
test
fstp
xchg
mov
pop
inc
add
mov
and
push
scas
add
out
sub
adc
mov
cmp
rol
(bad)
jnp
stc
mov
mov
dec
lea
xor
out
push
lea
or
cwde
sub
jmp
jmp
scas
add
imul
and
scas
add
pop
sub
add
sbb
add
loopne
iret
push
stc
sub
pop
inc
add
dec
(bad)
ficom
(bad)
call
and
xor
(bad)
pushf
pop
cld
add
lea
or
jae
push
mov
loopne
xor
xor
and
pop
inc
push
inc
push
push
test
mov
lods
add
inc
jo
inc
jo
inc
add
scas
add
mov
int3
pop
mov
add
cmp
xchg
lods
call
push
jecxz
and
lods
add
sub
push
lods
add
sub
lods
add
out
mov
les
ins
idiv
push
add
call
lods
add
scas
rcl
add
lods
mov
and
lea
je
out
push
lea
xor
(bad)
stos
push
(bad)
sub
cld
add
sar
adc
jle
and
stos
add
or
push
cmc
jmp
fild
and
or
inc
jg
add
add
push
in
inc
es
int3
lea
retf
hlt
(bad)
fsubr
add
movs
lds
adc
(bad)
lea
stos
call
(bad)
pop
or
loop
out
jne
jp
cld
addr16
pop
inc
add
mov
xchg
idiv
inc
pop
ins
sbb
xchg
sub
pop
and
cmp
and
add
sahf
sbb
popf
push
push
lea
fiadd
scas
mov
fsubp
add
rol
data16
repnz
cmp
fs
push
inc
push
ror
sbb
push
test
mov
into
and
mov
and
inc
out
add
lea
add
test
hlt
inc
add
push
inc
and
pop
inc
(bad)
stos
jb
in
stos
push
xor
jae
or
add
push
ret
cmp
jmp
mov
mov
jne
and
mov
add
or
and
mov
add
mov
add
mov
sbb
sbb
mov
mov
add
inc
cmp
(bad)
mov
adc
pop
or
jne
jp
jmp
and
mov
add
dec
cld
mov
mov
add
add
push
int3
std
push
stc
xor
sbb
pop
add
mov
inc
pusha
sub
outs
add
imul
and
add
add
mov
inc
pusha
hlt
jle
add
cmp
mov
add
pop
or
add
push
out
and
add
stc
pop
test
inc
and
cmp
scas
sub
add
scas
jne
aad
jb
jecxz
pop
inc
out
xchg
clc
jle
add
xchg
sub
mov
and
movs
cdq
add
mov
add
sbb
mov
stos
xor
jmp
jb
dec
jp
inc
push
fbld
sub
gs
inc
popf
js
call
pop
jp
jg
cmp
jl
cmp
sub
xchg
mov
push
dec
jae
and
lods
jge
cmp
jle
jle
inc
add
xchg
das
inc
push
sbb
mov
sub
add
add
add
add
or
ins
(bad)
mov
or
ret
xchg
das
inc
out
adc
fist
mov
(bad)
jns
ins
iret
mov
idiv
inc
fld
xchg
push
cmc
jmp
push
test
sub
jmp
call
(bad)
(bad)
or
fwait
jo
(bad)
fcmovu
daa
add
push
call
add
add
add
stos
inc
cld
call
jbe
call
push
cmp
mov
je
and
lods
add
pop
jp
clc
adc
jb
cld
inc
pop
push
lea
xchg
(bad)
lods
call
lea
inc
add
lods
call
lea
fisubr
add
cmp
fisttp
jmp
add
scas
add
scas
repz
cld
push
pop
push
lea
push
push
add
call
push
jns
mov
scas
add
out
and
loope
push
(bad)
fimul
ret
inc
cmc
call
mov
pop
ins
inc
stc
mov
xchg
mov
dec
scas
(bad)
test
idiv
(bad)
xchg
xor
lods
push
(bad)
push
cld
add
add
lods
fucomp
adc
call
or
sub
add
mov
mov
jne
nop
cmps
lods
add
push
jno
inc
mov
ret
dec
cmc
call
fistp
inc
stc
push
jne
push
push
test
push
add
add
lods
mov
inc
(bad)
pop
or
lods
add
pop
or
add
or
adc
fadd
lea
pop
add
stos
jge
outs
(bad)
jmp
aas
clc
jmp
div
push
add
cmp
mov
inc
and
push
mov
mov
add
sldt
add
and
add
adc
cmp
mov
lea
pop
cmp
das
les
ror
es
cmc
call
sbb
fistp
popf
ret
and
call
and
sbb
sbb
call
mov
add
call
xor
add
xchg
sbb
mov
dec
cld
xchg
mov
in
add
dec
stc
push
mov
stos
add
sbb
and
push
stos
add
test
and
je
call
jg
dec
stc
lea
stos
mov
in
and
scas
add
movs
inc
jmp
into
aaa
mov
jp
cmc
call
jecxz
and
scas
add
xchg
daa
dec
and
shr
cmps
test
mov
stos
add
jle
pop
cld
cmp
bnd
scas
push
add
stos
add
retf
or
jp
mov
call
adc
ret
movs
cld
call
jge
add
lahf
lds
jbe
dec
push
pop
test
stc
lea
mov
mov
idiv
push
dec
xchg
aaa
out
mov
rol
jp
cmc
jmp
sbb
dec
ficom
stc
(bad)
pop
add
out
adc
add
add
gs
and
add
fs
add
scas
lods
pop
cld
push
and
xchg
and
ror
data16
and
test
push
or
dec
jle
or
push
frstpm(287
dec
and
lea
xor
in
and
add
lahf
dec
ds
push
dec
test
retf
in
loop
hlt
mov
mov
icebp
inc
add
scas
add
test
bnd
das
int3
sbb
push
nop
inc
inc
cmps
inc
inc
mul
data16
pop
sbb
sub
inc
mov
inc
(bad)
fiadd
push
(bad)
fiadd
in
call
movs
in
push
push
and
call
add
loop
cld
mov
test
fadd
(bad)
scas
inc
lea
or
xlat
mov
push
gs
push
jmp
add
xchg
inc
pop
rol
push
dec
and
call
add
pop
pop
mov
add
or
shl
add
push
add
add
add
add
add
fdiv
cmp
and
call
add
mov
adc
jle
idiv
push
mov
mov
out
and
scas
add
mov
adc
scas
movs
dec
pop
in
jge
fiadd
and
adc
vsqrtps
lods
stc
xor
add
add
add
jb
inc
add
lods
push
push
and
fst
inc
mov
sbb
dec
add
pop
add
es
push
lods
add
(bad)
clc
push
cld
add
or
adc
mov
test
inc
add
lods
stc
adc
push
sbb
xlat
lods
add
push
jb
jmp
and
in
add
xor
sti
dec
mov
idiv
cmps
inc
xchg
pop
adc
push
adc
add
sbb
jmp
adc
inc
inc
popw
dec
and
inc
icebp
pop
and
push
lea
sub
push
lods
add
sub
and
add
enter
sub
mov
jg
cmp
test
cmc
call
aas
loopne
sub
pop
adc
jl
fisubr
sbb
sbb
aam
and
cmps
stos
push
call
fbld
call
cld
stos
pop
add
pop
and
pop
mov
xchg
adc
jp
hlt
jnp
inc
jmp
or
call
call
pop
popf
adc
dec
mov
shl
push
mov
es
call
xor
fprem1
jmp
jmp
and
test
add
dec
daa
dec
cld
xchg
push
and
sbb
hlt
add
add
stos
add
cmps
stos
stc
adc
aaa
mov
xchg
inc
pushf
int
add
jno
neg
sub
idiv
dec
xchg
cwde
test
jl
fist
cwde
cld
and
ror
daa
mov
scas
push
arpl
push
stos
icebp
stc
fwait
jmp
mov
add
or
and
stc
mov
ret
and
lea
into
dec
and
cli
call
test
and
add
add
outs
and
jle
jne
mov
adc
lea
into
xor
data16
test
cmc
call
call
push
add
mov
popa
idiv
push
sbb
pop
adc
push
xor
and
out
and
add
es
pop
mov
in
inc
jp
jge
ds
nop
cld
inc
cmp
mov
fstp
(bad)
xor
add
mov
stc
fild
call
outs
add
fwait
fs
xchg
call
add
add
add
out
cmp
sbb
pop
int
unpcklps
and
cwde
mov
dec
mov
and
mov
add
jae
mov
and
mov
add
push
xchg
cld
add
test
mov
add
mov
add
inc
inc
push
mov
stc
sub
hlt
add
scas
cmc
out
add
pushf
pop
add
xor
nop
(bad)
scas
add
mov
hlt
(bad)
stc
cdq
test
inc
cmc
jmp
pop
push
pop
mov
stos
mov
cmp
pop
inc
add
(bad)
idiv
pushw
stc
fcomi
or
xor
and
lods
add
fldcw
adc
add
push
scas
add
mov
hlt
(bad)
fldcw
add
scas
add
jge
les
sbb
add
pop
icebp
or
add
scas
call
mov
inc
and
das
mov
not
or
mov
cmp
rol
inc
inc
add
data16
mov
sahf
call
sbb
pop
dec
lods
add
call
scas
add
push
mov
pop
add
scas
add
(bad)
movs
hlt
dec
xchg
test
lods
cld
out
movs
hlt
inc
push
sub
int3
frstor
das
cmp
inc
int
or
sub
lods
add
pop
mov
and
xchg
lods
add
lahf
pop
sti
call
sub
add
sub
add
fwait
inc
add
inc
jne
and
cmc
call
jmp
jns
test
add
inc
stc
push
mov
std
cmc
call
sub
inc
mov
add
jle
cld
mov
lods
push
(bad)
mov
adc
sub
lods
jge
mov
je
and
or
mov
inc
test
(bad)
inc
add
push
inc
add
inc
stc
mov
add
add
add
cli
add
call
jmp
xchg
sbb
pop
fwait
inc
add
inc
xor
iret
test
les
lock
(bad)
inc
add
stos
add
dec
xor
call
test
les
call
imul
cmp
stos
push
push
stc
inc
adc
je
add
xchg
jmp
clc
jmp
adc
sahf
inc
add
ins
sbb
mov
and
rol
idiv
push
inc
nop
int
cmp
in
mov
sbb
pop
xor
add
out
add
call
sbb
inc
jg
add
mov
xor
jne
call
outs
(bad)
xor
xchg
les
cld
cmp
mov
(bad)
idiv
xchg
cmp
movs
je
add
dec
aad
add
and
add
call
and
hlt
or
fisttp
dec
clc
inc
add
adc
add
jmp
das
inc
add
push
cmp
cmp
ins
add
in
rcr
test
idiv
out
adc
mov
add
add
mov
add
gs
mov
sahf
mov
cdq
call
cmp
add
repz
int
add
adc
add
loopne
stc
jmp
hlt
lahf
sub
add
cmps
push
(bad)
cmp
lds
push
push
mov
adc
add
push
mov
push
mov
push
jns
test
push
rcr
mov
mov
mov
adc
div
inc
(bad)
add
mov
jbe
push
pop
dec
neg
mov
shl
cmps
mov
lea
aad
add
test
jmp
dec
push
push
mov
cmp
jmp
idiv
push
dec
scas
cmp
icebp
inc
add
jg
cmp
add
ss
add
mov
je
aam
repz
mov
xor
inc
xlat
fistp
push
sub
add
add
add
add
arpl
out
icebp
stc
pop
lock
xchg
mov
stc
je
iret
fild
inc
xor
mov
les
(bad)
fcmove
dec
and
call
fdiv
hlt
xchg
scas
add
sub
add
xor
add
jmp
les
xor
add
stos
aad
add
scas
ret
aaa
cmc
call
call
stc
push
jl
mov
inc
retf
xor
out
dec
and
jmp
add
out
inc
scas
push
xchg
xor
je
(bad)
inc
mov
xor
mov
inc
(bad)
das
mov
pop
jo
add
push
sub
add
xor
sub
sub
push
les
lahf
cmp
jmp
aad
paddq
clc
jmp
and
add
dec
jmp
or
xor
cld
mov
scas
add
(bad)
sub
and
scas
add
mov
popf
call
sub
pop
retf
(bad)
lods
add
js
cli
(bad)
out
call
xchg
lods
add
ret
(bad)
stc
ret
test
xor
jmp
clc
jmp
not
xor
push
adc
aaa
rcr
add
push
mov
inc
add
daa
mov
stc
call
add
aad
rol
add
push
fs
add
stos
add
into
lods
adc
out
and
add
shr
gs
xchg
sub
movs
mov
arpl
add
mov
push
add
lods
push
dec
dec
scas
cmp
cmc
inc
add
add
aad
pop
sbb
add
sub
add
lods
jne
cmp
idiv
lods
mov
jl
fsub
pop
pop
inc
adc
popf
ins
cld
mov
(bad)
inc
push
lods
jg
mov
jle
jp
(bad)
inc
xor
mov
fs
add
mov
sbb
pop
and
lahf
sbb
sbb
stc
mov
add
(bad)
pop
cmp
(bad)
pop
je
pop
jae
mov
xor
adc
mov
add
jb
sti
call
jne
movs
push
stos
add
call
call
sbb
push
cmps
sub
es
call
jmp
mov
es
call
pop
xchg
mov
xchg
push
pop
dec
and
add
xchg
(bad)
stos
ret
(bad)
out
dec
sti
jmp
stos
add
loop
sti
(bad)
out
dec
scas
cmp
stos
sbb
add
dec
call
jmp
mov
pop
sti
call
mov
jo
data16
or
out
mov
mov
add
add
add
add
sbb
ss
mov
lahf
jno
add
stos
icebp
stc
stos
jmp
cs
je
xchg
push
mov
cwde
(bad)
and
and
xchg
(bad)
test
hlt
jmp
rol
push
lahf
add
xor
call
add
xor
test
sub
jmp
fbld
jb
stc
jmp
sbb
mov
xor
add
cli
mov
mov
mov
jmp
cmc
lds
inc
and
sahf
jge
ds
mov
inc
pop
mov
inc
(bad)
xor
add
mov
stc
add
fistp
call
mov
call
sub
stc
adc
mov
out
adc
adc
push
pop
mov
push
mov
rcl
add
push
jmp
pop
mov
pushf
call
mov
xor
add
js
cld
mov
and
mov
add
(bad)
aaa
push
jp
and
stc
push
bound
add
scas
add
ds
fs
mov
bound
add
and
xchg
scas
add
xchg
xor
pop
in
scas
cmp
sub
call
jmp
leave
idiv
push
xor
cmp
add
ins
add
call
(bad)
shl
ss
jb
adc
(bad)
mov
cdq
sub
inc
cmp
or
scas
xor
jmp
sub
clc
call
mov
or
mov
stc
pop
sub
add
jmp
iret
pop
popf
sbb
mov
mov
lods
call
mov
and
data16
sub
mov
jmp
mov
outs
mov
add
mov
out
sbb
fbstp
jle
and
mov
push
xor
push
hlt
cdq
add
or
sbb
jp
fbld
pusha
xor
mov
ret
add
mov
mov
push
dec
and
mov
dec
push
sbb
(bad)
lods
call
mov
mov
cld
mov
push
ja
cmps
lods
add
xchg
lods
stc
inc
mov
clc
inc
jp
push
mov
push
mov
adc
mov
cs
jmp
lods
icebp
stc
add
dec
cdq
sbb
xor
or
mov
sbb
inc
push
mov
cdq
aas
sub
inc
lea
or
ins
sub
add
xor
mov
xchg
fwait
hlt
jmp
ins
sbb
neg
and
stos
add
mov
sar
adc
int
add
cwde
add
add
pop
and
lods
add
dec
shl
and
test
lods
add
inc
xor
(bad)
loopne
dec
push
mov
mov
clc
xchg
push
lods
call
push
mov
mov
push
(bad)
call
call
xchg
xor
push
mov
lods
stc
xor
mov
add
lods
stc
mov
(bad)
idiv
cmps
xor
loopne
cwde
add
jmp
cs
cmps
xor
mov
or
inc
xchg
inc
test
xor
lahf
sub
pushf
jg
idiv
pop
or
inc
data16
mov
loope
nop
cmp
jge
push
sti
clc
(bad)
aas
pop
and
adc
add
stos
cmp
jmp
mov
xchg
and
add
mov
scas
add
dec
cdq
ret
clc
jl
arpl
and
and
add
outs
movs
(bad)
jmp
test
mov
mov
add
fsubr
and
push
add
into
and
jae
fwait
mov
call
add
in
or
es
aad
pop
push
jne
mov
mov
add
push
cmp
inc
lea
dec
call
leave
dec
jmp
arpl
add
inc
cmp
sub
jl
popf
ins
adc
mov
test
cmp
stos
popf
mov
and
mov
add
add
push
movs
(bad)
in
pop
sub
stc
mov
mov
(bad)
test
push
mov
xor
and
jmp
push
and
push
mov
push
cs
call
sub
test
add
mov
dec
rcl
call
(bad)
pop
test
add
mov
call
add
add
add
sub
(bad)
out
cmc
pop
add
cmp
add
pop
test
add
in
inc
mov
loope
push
clc
cmp
mov
bndstx
out
mov
cli
mov
and
add
inc
mov
add
cmovno
and
mov
scas
add
call
mov
mov
add
jns
cld
mov
mov
add
mov
push
rcl
push
lds
mov
xchg
stos
add
fild
inc
cmc
inc
lea
mov
arpl
push
clc
lea
mov
daa
push
clc
dec
test
xchg
scas
call
xor
jl
mov
retf
jle
xchg
scas
add
scas
repnz
pop
add
fnstsw
add
adc
outs
adc
in
outs
pop
jo
scas
add
dec
jge
add
and
scas
jne
mov
push
clc
push
inc
xchg
push
inc
dec
icebp
mov
loope
add
ds
rol
imul
xchg
push
je
mov
imul
cmp
clc
mov
jmp
hlt
out
jmp
push
in
call
sub
arpl
and
jmp
pop
stc
jmp
test
stc
jmp
inc
inc
adc
stc
sbb
pop
call
std
(bad)
push
push
ja
inc
add
stc
push
mov
clc
(bad)
(bad)
sub
mov
add
push
rol
call
lea
jle
xchg
cmp
test
inc
dec
cmp
shr
scas
add
or
pop
add
lods
add
es
fistp
mov
push
clc
jne
push
adc
and
loopne
push
clc
pop
add
int
mov
call
jmp
mov
jle
inc
inc
es
rol
call
sub
test
lods
stc
jmp
(bad)
jmp
sbb
clc
push
inc
inc
test
(bad)
clc
adc
add
pop
call
jb
inc
push
adc
xor
test
inc
lods
dec
inc
push
(bad)
jmp
stos
test
clc
(bad)
in
gs
push
out
and
adc
call
outs
mov
jl
call
add
cld
clc
adc
pop
ins
jb
inc
mov
rcr
lods
inc
inc
add
push
clc
xor
out
and
add
pusha
inc
push
clc
adc
clc
je
cld
clc
adc
fldcw
push
push
fwait
test
test
push
hlt
jl
mov
mov
mov
push
push
cmps
pop
std
add
mov
sub
xlat
and
test
add
stos
mov
test
push
and
add
icebp
sub
pop
(bad)
push
movaps
mov
sbb
jmp
cmp
push
fistp
stos
add
cmp
mov
shl
retf
jns
scas
add
call
mov
push
mov
data16
dec
cld
and
mov
adc
sbb
clc
push
push
inc
jmp
cld
pop
stos
add
pop
into
and
arpl
inc
call
push
mov
mov
inc
ins
repz
shl
pop
xchg
stc
inc
add
push
je
mov
and
sbb
push
clc
call
sub
call
pop
inc
mov
push
lea
inc
clc
push
int
rol
add
es
scas
jbe
inc
add
int3
ffreep
in
clc
push
mov
nop
call
fwait
jno
or
add
out
mov
adc
int3
or
test
clc
push
loopne
xchg
cmp
xchg
xor
ins
xchg
inc
clc
stos
cmp
xor
push
mov
sbb
mov
mov
inc
xor
nop
mov
stc
lea
add
inc
rol
mov
add
mov
call
(bad)
(bad)
fsub
inc
xor
push
popf
js
inc
mov
inc
clc
push
xchg
or
outs
inc
cld
repz
int3
jp
inc
je
mov
push
lea
mov
jmp
inc
inc
push
and
sbb
add
dec
aad
clc
adc
pop
mov
pop
jg
add
adc
hlt
mov
jge
push
pusha
inc
add
inc
jb
xchg
nop
adc
fwait
xor
push
inc
push
inc
jb
lahf
in
(bad)
call
out
imul
inc
ror
mov
pop
jle
or
push
jnp
test
inc
clc
call
inc
test
add
outs
inc
clc
call
scas
add
outs
xor
add
inc
clc
push
mov
jo
sahf
jmp
add
xchg
das
mov
call
inc
(bad)
shl
inc
inc
push
test
inc
push
mov
fdivrp
adc
test
mov
(bad)
and
cld
add
nop
lods
movs
loopne
add
push
stc
shl
inc
clc
shl
inc
clc
sar
sar
mov
push
or
rcl
jmp
pushf
stos
cmp
aaa
cmp
or
sbb
cmc
pop
sub
clc
xlat
sub
jle
mov
call
jle
outs
inc
clc
call
dec
add
add
and
add
jg
out
aas
clc
(bad)
out
pop
sbb
push
xor
push
inc
jmp
add
jo
cs
add
and
xor
inc
inc
xor
mov
inc
inc
clc
push
or
push
push
cli
push
push
test
test
not
stos
mov
jle
ss
add
add
mov
inc
clc
jmp
inc
clc
jmp
imul
inc
xor
ret
in
sub
add
mov
out
idiv
push
xchg
in
push
ins
rol
push
xor
adc
lods
add
in
js
daa
lods
add
(bad)
fld
xor
add
add
stos
call
push
fmul
add
retf
ss
mov
sbb
add
aas
clc
push
fmul
add
aaa
cld
mov
add
add
cmp
mov
imul
add
jno
ds
aaa
cld
and
not
ret
add
cmp
sti
(bad)
jl
inc
lea
mov
or
clc
push
loopne
idiv
mov
cld
mov
inc
jmp
gs
add
mov
add
stos
jge
push
arpl
inc
xchg
cmp
mov
sti
push
not
sbb
jmp
pushf
inc
cld
mov
outs
push
mov
stos
push
add
add
add
add
mov
inc
inc
call
in
je
leave
adc
cs
data16
shl
push
out
push
rcr
push
mov
loope
mov
stos
add
popf
inc
inc
call
lea
movs
call
inc
add
jne
mov
inc
out
or
cli
add
outs
or
das
arpl
cmps
cs
mov
inc
add
cmc
xlat
add
cmp
sbb
dec
lock
xlat
jo
inc
sub
inc
mov
jl
cmp
inc
jp
out
out
jo
loope
inc
call
push
sub
je
xchg
inc
fsubr
lods
call
mov
add
sub
ret
lea
imul
sar
test
and
mov
popa
into
jbe
fdivr
jecxz
sti
call
sbb
jle
jne
mov
inc
out
sub
cli
shl
inc
sub
push
sub
outs
inc
inc
add
add
jmp
add
add
int
jge
cmp
lea
or
ins
mov
enter
jmp
mov
hlt
mov
aas
mov
push
jl
dec
sub
cld
sub
sub
call
dec
shr
cmp
je
js
ds
je
sub
jne
add
push
je
scas
(bad)
gs
xchg
sub
add
add
movs
mov
pop
mov
clc
psubusw
inc
arpl
(bad)
fist
mov
jae
fwait
cmp
(bad)
push
imul
cs
push
mov
fld
arpl
add
add
cs
inc
in
and
call
sbb
cmc
call
dec
hlt
jecxz
pop
sub
sbb
mov
out
ins
jle
mov
cmp
scas
inc
jp
ds
cld
inc
inc
jp
sbb
xlat
add
add
sub
or
xchg
dec
jl
add
(bad)
movs
jae
add
pop
push
cmp
stos
xor
or
cmp
stos
xor
sub
cmp
aam
xor
enter
sub
cmp
xchg
xor
sbb
int
mov
push
clc
addps
jecxz
pop
imul
dec
fld
jb
jle
ins
cld
mov
sub
add
stos
test
jb
dec
scas
stc
jne
inc
jp
push
jbe
call
and
jmp
fwait
popa
jl
add
inc
push
jl
cmps
popa
test
popf
dec
add
push
lods
add
call
sti
jmp
outs
add
or
add
test
ds
cld
mov
add
in
add
call
sti
jmp
cmp
ins
loope
inc
fld
mov
out
stos
call
(bad)
cmps
cmp
jae
xchg
and
jecxz
xchg
sub
push
out
sti
mov
aas
dec
mov
or
pop
cmp
addr16
cld
pop
test
push
pop
add
jne
add
arpl
mov
push
pop
add
imul
sub
pop
jl
call
inc
call
(bad)
jecxz
inc
xchg
inc
mov
jo
sti
jmp
ins
jb
pop
jmp
add
fs
inc
stos
test
push
jne
ins
inc
cmp
cmp
in
test
sub
daa
mov
or
inc
call
cmp
aam
test
inc
cld
aam
add
ins
add
push
pop
imul
push
mov
dec
dec
bound
inc
push
fld
push
push
jb
adc
add
add
add
add
jmp
(bad)
cld
push
mov
fldenv
fsubr
sti
add
movs
xor
inc
xlat
pop
add
in
sti
add
cmp
adc
jg
fwait
test
add
xchg
dec
adc
pop
cmp
push
mov
bound
push
outs
rol
fucomip
lea
push
mov
test
imul
loop
clc
mov
stc
pop
jmp
sbb
adc
and
clc
jmp
lods
call
push
fcomip
(bad)
cmc
out
xchg
hlt
jmp
mov
loop
rcl
enter
cmp
push
mov
movs
mov
add
and
sbb
js
inc
pop
jbe
popa
dec
add
add
lea
inc
call
(bad)
mov
arpl
push
cmp
out
bound
sbb
xor
jb
cwde
cld
sti
push
outs
push
inc
cld
popa
(bad)
(bad)
jecxz
inc
(bad)
fist
fmul
test
push
add
fs
dec
inc
inc
shl
add
pop
pop
inc
inc
inc
pop
call
add
push
push
imul
pop
pop
push
clc
push
ins
mov
inc
adc
clc
push
inc
inc
lods
xchg
rol
add
push
pop
in
dec
mov
xor
dec
mov
lea
call
loopne
int3
push
clc
push
push
in
jae
outs
adc
xchg
pop
dec
push
push
sti
mov
xor
xchg
call
push
pop
sti
sti
or
(bad)
imul
jns
cld
pop
push
daa
cmp
jl
out
clc
lea
mov
sti
call
add
in
sti
or
cmps
xor
imul
push
pop
add
jne
jnp
cld
add
adc
out
cmp
pop
add
stos
push
in
mov
jp
lods
int3
scas
add
ds
mov
push
mov
xchg
xchg
scas
push
(bad)
fistp
aas
int3
push
clc
xor
jle
into
scas
add
sub
pop
add
mov
hlt
dec
jns
and
lea
and
pop
add
call
jmp
loope
inc
add
clc
push
aam
out
test
(bad)
fsubr
sti
or
in
push
xor
mov
dec
fwait
cmp
mov
xor
(bad)
mov
cmp
call
jge
jge
xor
data16
xor
add
add
test
ss
mul
aas
(bad)
cli
(bad)
fst
dec
and
fninit
retf
add
xchg
inc
clc
lea
call
lea
inc
clc
lea
leave
(bad)
addr16
clc
lea
clc
call
push
mov
mov
ds
cld
inc
inc
mov
(bad)
lods
add
add
dec
in
sti
push
or
add
lods
call
lea
idiv
cmps
push
mov
inc
xchg
jp
cld
lahf
xor
mov
jg
retf
add
shl
inc
jmp
add
xchg
dec
adc
push
ds
ds
and
mov
(bad)
in
pop
inc
clc
push
sar
repz
lods
push
call
add
add
add
div
sti
(bad)
js
sub
lods
add
cmp
add
lods
cmc
jmp
stos
rol
stos
add
outs
xor
out
jg
xchg
add
stos
mov
jle
aas
cld
xor
add
cmps
xor
mov
dec
mov
push
dec
mov
leavew
jae
add
test
inc
add
ins
std
adc
iret
xor
sub
pop
loopne
jne
sub
jle
lock
es
out
inc
add
(bad)
push
stos
add
adc
jle
dec
dec
dec
(bad)
xchg
mov
add
inc
dec
in
inc
inc
dec
je
mov
sbb
das
cld
mov
fdiv
test
stc
inc
add
or
fld
inc
(bad)
jmp
idiv
cmps
stos
call
push
mov
inc
mov
push
inc
cmp
les
sbb
inc
call
ins
mov
add
popa
fisttp
push
enter
fild
rcl
push
enter
add
sub
jae
dec
clc
mov
pop
je
mov
dec
clc
mov
movs
jge
retf
or
repz
(bad)
in
inc
call
int
inc
push
sub
inc
stc
inc
mov
push
(bad)
(bad)
mov
sbb
push
mov
and
(bad)
fscale
idiv
push
sub
add
dec
fild
mov
fld
movs
imul
add
cli
inc
dec
idiv
push
dec
jb
mov
mov
inc
ficom
adc
in
call
push
and
pushf
out
clc
inc
inc
cmps
add
add
or
(bad)
das
rcr
mov
push
pop
in
sti
add
add
stc
pop
add
fistp
inc
or
clc
xor
cdq
(bad)
call
adc
test
lods
(bad)
add
adc
jmp
or
dec
(bad)
lock
in
mov
push
inc
(bad)
dec
fwait
int3
inc
out
mov
add
add
add
add
dec
adc
jecxz
call
mul
inc
mov
xchg
inc
inc
xchg
test
add
push
je
xchg
rcr
scas
add
in
add
cmp
and
pop
add
aam
call
test
test
clc
dec
jnp
add
sar
inc
add
scas
call
pop
xchg
(bad)
push
lds
add
add
inc
push
adc
push
test
push
jb
jle
push
sbb
push
imul
add
into
nop
hlt
call
(bad)
test
clc
mov
add
add
add
push
mov
add
aad
call
mov
sub
mov
inc
jne
mov
popf
mov
dec
jne
les
(bad)
(bad)
inc
add
fisttp
loop
(bad)
add
clc
sbb
add
cmps
lods
call
add
repz
clc
push
or
mov
inc
inc
mov
inc
movs
pop
mov
lods
add
scas
xchg
mov
jbe
push
inc
cmc
dec
test
fst
push
xlat
push
add
push
call
call
inc
daa
or
aad
push
jbe
adc
fadd
push
add
cmp
test
iret
push
arpl
jecxz
mov
push
jb
dec
lock
jp
inc
fcomp
mov
aam
lods
add
cmp
bnd
add
dec
pushf
fiadd
inc
add
pop
inc
fwait
test
add
data16
call
sbb
rol
adc
jecxz
cdq
jl
call
xchg
pop
sbb
retf
pop
fs
dec
mul
lock
jne
pop
dec
pushf
adc
(bad)
les
sub
call
stos
call
sub
inc
and
add
inc
inc
cmp
cmps
push
jae
scas
xchg
xor
add
mov
fcomp
(bad)
in
(bad)
mov
stos
add
imul
jmp
inc
or
xor
add
stos
or
mov
stc
(bad)
push
stos
add
loope
sbb
out
test
adc
sbb
inc
(bad)
repz
add
mov
mov
inc
add
imul
adc
in
fistp
add
adc
inc
and
fs
push
clc
call
xchg
or
inc
inc
data16
rol
add
push
inc
mov
les
sub
fsub
stos
add
in
sti
or
xchg
neg
add
mov
ja
and
call
fisub
inc
fisttp
mov
mov
clc
mov
idiv
(bad)
mov
sbb
push
(bad)
pop
out
sub
idiv
xchg
push
or
fiadd
push
inc
push
adc
mov
mov
add
and
inc
add
push
adc
test
push
lds
mov
sbb
mov
inc
pop
sbb
test
mov
call
push
in
pop
sbb
mov
stc
push
in
scas
mov
sbb
xor
bound
add
mov
and
xchg
add
push
std
mov
add
inc
add
in
iret
add
push
call
cmp
ins
test
gs
jae
add
jge
popf
loope
loopne
add
sub
call
mov
mov
ins
pop
push
lea
dec
jle
push
aaa
jb
cdq
imul
(bad)
scas
add
gs
hlt
jmp
imul
sbb
sbb
(bad)
jmp
idiv
or
or
or
sbb
cmp
sub
mov
inc
jmp
push
mov
mov
xor
add
add
ins
ror
pop
imul
ss
mov
cmp
(bad)
ja
das
mov
push
popa
mov
add
pop
gs
push
jb
mov
js
mov
mov
out
popa
and
popa
cmp
or
popa
(bad)
and
jbe
xor
lahf
cmp
(bad)
ja
add
mov
inc
scas
add
pop
xor
jbe
bound
idiv
add
in
lods
add
adc
cmc
xlat
xor
mov
fstp
lea
inc
fild
sub
xor
push
lock
lea
jbe
push
mov
or
test
add
sbb
clc
jne
mov
scas
call
fadd
jae
mov
jmp
mov
dec
fist
add
pop
test
test
stc
push
mov
sbb
aaa
and
jge
cmps
sbb
push
mov
adc
jge
push
ss
xor
add
lods
mov
xor
cwde
pop
push
loopne
jg
stc
mov
popa
jl
dec
pusha
sti
call
aad
inc
inc
jmp
add
pop
cmps
lods
add
pop
jmp
das
pop
and
add
ret
mov
add
add
mov
mov
ret
test
adc
cmp
or
xor
ja
dec
mov
push
lods
add
pop
imul
gs
je
imul
das
inc
mov
mov
ja
(bad)
jmp
fild
int3
(bad)
clc
adc
jne
push
sub
xor
push
scas
push
sub
lea
xchg
inc
out
jmp
cmp
inc
mov
sti
add
xchg
mov
add
rol
pop
call
xlat
fistp
idiv
push
sub
mov
ds
cld
inc
mov
mov
add
inc
cld
in
in
mov
test
add
xchg
push
mov
mov
stos
jge
cs
je
sti
clc
call
mov
popa
and
sbb
pop
dec
shl
cld
adc
(bad)
retf
jle
jmp
hlt
inc
cld
push
add
lea
dec
xor
add
sub
aam
je
aas
es
add
es
call
sub
cs
inc
sub
inc
aam
jne
das
out
add
xor
call
clc
je
sub
add
cli
mov
pop
mov
mov
clc
(bad)
repz
mov
add
push
add
sbb
add
xor
and
jb
jecxz
shr
sar
(bad)
mov
in
pop
push
cmc
clc
push
imul
cld
mov
push
fs
mov
pop
scas
xor
out
jns
(bad)
mov
and
ins
fcomp
iret
fxtract
clc
mov
mov
jle
add
xchg
add
push
test
or
das
xchg
std
mov
and
pushf
scas
loop
(bad)
mov
ins
test
gs
and
or
and
push
push
and
(bad)
sbb
cld
add
mov
push
jns
call
pop
jl
movs
or
push
mov
scas
pop
mov
add
add
add
push
mov
add
sub
inc
pop
ins
adc
mov
cmp
fs
inc
stos
jne
xor
pop
arpl
inc
inc
inc
xchg
and
and
call
sbb
aad
xor
pop
and
(bad)
repnz
pop
add
sub
adc
xor
add
add
add
or
test
and
cwde
sub
add
ror
xchg
jle
es
add
aas
push
pop
pop
lea
cmp
(bad)
clc
mov
pop
mov
sub
and
xchg
jae
call
jl
ins
out
push
mov
jecxz
cld
repz
pop
xor
arpl
test
jbe
mov
add
adc
mov
cld
add
inc
push
pop
push
inc
push
mov
and
scas
add
add
push
daa
inc
or
push
adc
aad
mov
jle
cmp
mov
pusha
jb
inc
push
pop
and
(bad)
and
and
add
push
push
dec
xor
cld
add
xchg
pop
mov
pop
fbstp
add
push
add
adc
add
fiadd
pop
push
or
out
jb
mov
test
push
call
lahf
pop
mov
pop
lods
stos
push
and
push
lods
add
(bad)
push
sti
jmp
aad
(bad)
call
add
add
add
add
lods
mul
ss
test
hlt
jmp
and
out
add
add
leave
dec
call
pop
ins
and
out
and
inc
(bad)
add
xor
fwait
lods
add
xchg
xchg
(bad)
jecxz
inc
push
pop
clc
(bad)
sub
mov
pop
pop
add
inc
ficomp
add
repz
cmps
stc
je
xchg
clc
(bad)
mov
pop
pop
pop
loope
and
adc
pop
add
adc
mov
clc
(bad)
jl
mov
inc
push
lock
jle
inc
and
stos
add
out
shr
push
cs
lods
add
adc
jge
push
add
cs
jge
mov
dec
fadd
add
push
popa
pop
lea
sbb
call
cmps
jge
call
push
sub
inc
push
popa
cmp
enter
push
xchg
jae
mov
adc
ins
test
dec
aaa
lds
mov
(bad)
cdq
repz
pop
xchg
and
adc
(bad)
call
inc
add
stos
call
sbb
ret
int
jmp
cmps
call
push
in
test
(bad)
repnz
xor
and
xchg
stos
stc
push
cld
test
fistp
sub
add
jnp
int3
inc
add
(bad)
sar
rol
idiv
add
push
add
xor
repz
cmp
and
push
stos
cld
jmp
stos
das
lahf
push
test
mov
push
stos
mov
(bad)
jns
jb
push
cmp
xor
add
imul
and
mov
or
mov
add
push
lea
fs
scas
popa
mov
pop
or
and
mov
add
loope
ret
or
jle
and
sub
add
push
mov
pop
add
hlt
sbb
mov
jge
jo
sub
add
clc
sbb
xchg
out
and
add
ins
idiv
mov
jae
mov
mov
inc
add
idiv
add
mov
add
or
popa
mov
clc
add
mov
in
and
and
jbe
and
add
sbb
and
add
pop
inc
(bad)
fidivr
and
out
add
ds
dec
cld
inc
xor
or
stos
inc
inc
out
mov
inc
(bad)
pop
mov
jmp
call
push
in
and
and
neg
dec
and
popa
clc
je
sar
and
scas
add
dec
jmp
inc
add
pop
mov
add
or
pop
add
jge
push
lahf
ins
and
pop
and
push
xchg
sbb
mov
jge
jo
mov
cld
mov
cmp
add
push
mov
inc
int
add
scas
ret
mov
(bad)
lods
repnz
jmp
pop
dec
and
je
inc
add
mov
hlt
add
mov
jae
data16
jns
push
repz
jp
jle
jp
jl
dec
xchg
in
call
pop
mov
mov
mov
sbb
mov
add
cmps
mov
cwde
sbb
call
pop
adc
retf
test
add
add
add
out
add
sub
add
lods
das
dec
mov
or
rcl
add
test
call
cmc
xchg
test
test
jae
xchg
and
xchg
and
add
pop
cmc
mov
and
je
dec
dec
inc
(bad)
fcmove
test
add
lods
push
(bad)
call
call
movs
in
or
push
inc
add
pop
test
mov
add
fild
add
hlt
jge
mov
pop
clc
je
ror
call
pop
jl
retf
dec
mov
and
add
mov
icebp
inc
push
pop
mov
add
out
lods
add
fistp
dec
fisttp
push
dec
aas
push
cld
and
add
sub
mov
add
add
test
call
push
mov
jmp
fiadd
add
hlt
outs
sub
jl
jp
sub
shl
inc
sbb
stc
inc
add
mov
lods
add
adc
add
retf
xor
inc
xchg
hlt
pop
mov
mov
add
mov
mov
pop
adc
jnp
call
jmp
imul
stos
test
cmp
in
jmp
es
and
call
pop
test
cmp
pcmpeqw
inc
jnp
add
pop
mov
je
mov
push
pop
in
clc
adc
sbb
retf
je
int
adc
xchg
push
and
pop
xchg
cmp
sbb
and
repz
mov
fdivp
call
(bad)
clc
push
cld
mov
mov
idiv
xchg
ret
push
jmp
inc
jp
jge
jp
idiv
push
dec
jle
add
data16
add
outs
mov
mov
add
and
std
add
loop
aam
add
adc
push
call
mov
mov
inc
or
idiv
xlat
mov
ret
retf
add
jle
xchg
sub
outs
nop
pop
cld
popa
sub
sbb
test
xchg
and
jmp
jmp
adc
(bad)
fcmovnb
inc
call
int3
out
inc
(bad)
fwait
in
idiv
data16
dec
adc
fldcw
mov
dec
jmp
cld
add
add
adc
mov
push
cmp
lahf
sub
add
mov
jg
out
push
call
add
pop
ins
jmp
out
inc
cli
call
add
dec
sbb
xchg
enter
in
jl
sahf
daa
inc
int3
sbb
stc
jl
xchg
out
push
and
fild
mov
in
pop
or
clc
lea
add
jmp
dec
jnp
fwait
test
rol
add
add
add
scas
add
push
gs
add
fcomp
xchg
sub
or
popa
inc
inc
push
and
sub
(bad)
push
in
xor
pop
jae
call
push
in
or
sbb
ret
stos
push
lea
stc
jmp
fist
icebp
sar
sbb
inc
fldcw
dec
adc
push
call
shl
out
jp
call
add
mov
gs
add
iret
pop
cld
adc
ret
or
xchg
inc
inc
push
jg
test
aam
push
inc
cld
sbb
stos
push
add
je
adc
inc
shl
xchg
clc
jmp
(bad)
js
push
rol
sbb
pusha
mov
test
pop
ds
cld
mov
fs
or
add
cs
inc
cmps
jle
test
aam
inc
(bad)
pop
push
mov
shl
pop
fs
or
add
sar
push
xor
inc
das
ret
or
push
(bad)
mov
call
push
(bad)
and
push
push
rcl
fist
test
jo
sar
call
imul
add
add
add
add
lds
mov
adc
fild
in
clc
push
add
sar
call
or
dec
push
(bad)
sbb
push
push
cmp
fistp
cmc
cmp
sbb
iret
clc
call
dec
jl
lea
clc
(bad)
ds
and
inc
jnp
(bad)
rcr
icebp
sub
add
rcl
shl
call
popf
push
cli
call
mov
fdiv
test
clc
cmp
mul
rol
arpl
(bad)
pop
test
call
mov
(bad)
les
fisubr
inc
aam
shl
sbb
sar
push
inc
test
mov
movs
call
ret
pop
and
lods
gs
les
shl
lods
push
mov
rol
push
add
retf
sub
add
sti
add
push
or
mov
stos
mov
les
inc
sar
ret
lock
add
add
add
mov
or
cmp
lods
mov
dec
rol
rol
cmps
shl
adc
inc
xchg
loop
push
sbb
stos
fisttp
mov
cli
clc
call
dec
sbb
jge
fucomi
jb
and
mov
push
mov
sub
lea
mov
clc
adc
add
add
add
push
inc
add
cs
clc
jae
ret
retf
pop
jmp
mov
inc
push
loope
add
mov
add
jmp
cmp
out
rol
jmp
les
pop
ins
mov
(bad)
fcmovnbe
cmc
in
in
pop
inc
(bad)
stos
xor
xchg
pop
inc
mov
out
mov
idiv
dec
push
mov
test
ins
lahf
mov
ins
mov
jp
adc
jns
adc
mov
pop
pop
xchg
addr16
or
mov
mov
ins
out
mov
shl
inc
mov
inc
lock
(bad)
iret
cmp
stos
add
cmps
push
fs
mov
inc
xor
jne
add
dec
test
fisttp
sar
fsubr
dec
test
pop
out
jp
xchg
fmul
jge
push
cmp
fistp
add
jmp
int
lahf
mov
jle
daa
mov
inc
mov
out
mov
data16
cmp
mov
xchg
add
imul
sub
or
je
cmp
mov
mov
sbb
xlat
mov
mov
std
lock
xchg
mov
inc
add
pop
mov
movs
dec
lahf
mov
jl
neg
jb
inc
pop
jmp
stos
inc
cli
call
int3
or
cli
cwde
inc
hlt
add
int
lods
rcr
cmp
and
mov
aas
add
lds
mov
dec
mul
cmp
aam
mov
ins
pop
mov
cmp
or
lahf
jne
aam
xor
inc
adc
cmp
xor
add
(bad)
hlt
inc
add
call
or
aad
call
mov
jmp
sar
ret
adc
add
aad
add
out
add
jno
mov
xor
xor
jle
adc
add
mov
mov
cmp
sub
push
dec
cmp
jle
test
add
add
add
sti
mov
or
push
jnp
xor
jle
(bad)
std
cmp
mov
bnd
jbe
pop
adc
mov
mul
addr16
sti
(bad)
(bad)
fimul
fwait
sbb
pop
mov
ret
sbb
sti
adc
ret
add
lods
jge
or
add
inc
aas
std
mov
imul
sub
add
retf
dec
jp
inc
cwde
cdq
ins
jmp
(bad)
lods
add
gs
sti
call
gs
mov
fimul
jne
cmp
jle
add
clc
mov
scas
ins
inc
in
cli
je
cs
cld
add
stos
test
dec
mov
js
ret
clc
call
ins
ret
ffree
inc
add
clc
push
mov
call
push
call
mov
push
jae
shr
retf
call
jbe
dec
cmps
pop
fnstsw
scas
je
add
in
jae
push
ret
xchg
ja
pop
out
jp
jne
rcl
fs
and
inc
aam
fldcw
inc
rol
dec
aam
pop
and
and
(bad)
std
loope
push
mov
sub
pop
int3
xchg
ins
mul
lods
add
es
je
jle
inc
adc
(bad)
add
xor
mov
add
mov
add
jl
mov
mov
addr16
loopne
jae
push
xor
inc
xchg
rol
jg
idiv
xchg
sub
and
or
or
or
test
add
mov
iret
cmp
mov
push
add
out
stos
inc
std
adc
jns
ss
inc
cmp
add
and
jne
sbb
jae
push
xchg
ins
and
jne
and
jne
jo
stos
add
dec
das
and
xchg
or
dec
inc
and
jne
sbb
inc
and
pop
cmp
out
cld
mov
mov
and
add
mov
(bad)
mov
clc
cmp
cmps
or
mov
and
(bad)
and
and
(bad)
mov
and
push
clc
cld
add
dec
and
sub
fisttp
(bad)
clc
push
sub
mov
fisttp
mov
jnp
outs
lods
add
out
dec
pop
add
add
dec
mov
jmp
sub
mov
mov
std
xchg
pop
into
xor
in
jle
(bad)
add
(bad)
cmp
jne
sub
jbe
mov
xchg
data16
lea
scas
add
es
jle
add
xor
dec
add
mov
pop
sti
jmp
jl
scas
push
push
cld
push
scas
mov
xchg
mov
mov
js
mov
loope
ss
stos
jge
xchg
add
sbb
aam
punpckhbw
inc
add
imul
add
enter
lea
in
mov
mov
jl
push
xchg
inc
les
add
add
ds
sti
jmp
and
push
rol
call
popf
imul
push
dec
cli
call
and
mov
(bad)
xor
mov
pop
jae
pop
push
cmps
cmp
fwait
jae
into
add
inc
(bad)
cmps
movs
es
mov
idiv
(bad)
add
outs
adc
call
add
add
pop
imul
xchg
scas
add
jno
sti
call
lock
inc
mov
inc
mov
sub
aam
adc
and
jg
fiadd
fisttp
and
clc
pop
mov
rcr
adc
clc
mov
push
test
jl
dec
sub
mov
mov
clc
idiv
add
cmps
xor
mov
inc
add
cmps
dec
dec
push
(bad)
clc
inc
pop
nop
jb
add
jl
push
sub
aam
cmps
test
xchg
rcr
cmc
sub
and
mov
ins
scas
call
in
jne
call
and
cs
push
push
idiv
push
cs
add
es
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
jle
mov
ret
mov
ret
and
xor
in
add
fisubr
(bad)
(bad)
jnp
in
add
jp
pop
adc
jae
dec
lods
inc
add
adc
mov
out
idiv
(bad)
sub
or
adc
aas
out
mov
out
idiv
add
(bad)
sub
add
push
jl
sbb
popf
add
push
jo
add
pop
mov
add
add
push
popf
jae
mov
jl
bound
inc
or
stos
pop
ret
push
in
mov
data16
aas
push
sub
or
push
jl
popf
dec
push
mov
and
call
add
or
jle
lea
shl
jp
ins
ins
sub
loop
inc
sbb
push
mov
add
inc
dec
mov
mov
jecxz
verr
jmp
add
push
jl
call
pop
imul
shl
push
popf
rcl
call
lea
add
inc
add
push
mov
or
jns
inc
sbb
jbe
pop
arpl
add
in
mov
es
aas
sub
in
lea
es
dec
rol
div
xchg
je
or
pop
jl
pop
ins
(bad)
(bad)
push
ja
inc
shl
add
pop
jl
sbb
jbe
inc
mov
mov
add
xchg
pop
jl
clc
push
jmp
jbe
inc
xchg
ja
repz
jl
inc
add
jmp
dec
mov
and
mov
inc
push
sub
inc
add
test
leave
lods
pop
pop
mov
dec
pop
add
push
lahf
add
xor
shr
(bad)
jl
inc
(bad)
mov
and
pop
cmp
dec
and
push
push
push
jmp
stos
mov
call
ins
fist
lods
or
fisubr
jge
mov
inc
in
mov
add
jns
add
jl
xchg
pop
push
push
pop
inc
push
loope
sub
add
sbb
inc
add
stos
hlt
(bad)
js
test
clc
call
movs
movs
add
xchg
je
xchg
bound
sub
neg
jl
inc
ficomp
pop
sbb
sbb
addr16
fiadd
push
icebp
rol
adc
cmp
retf
add
inc
shr
add
addr16
sti
(bad)
mov
add
xchg
jl
fnstsw
push
xchg
inc
or
mov
xor
stos
movs
aam
mov
add
shl
push
stc
dec
mov
imul
pusha
clc
push
xchg
data16
lods
push
jmp
shl
add
sbb
cmc
jmp
test
add
retf
inc
add
mov
add
pop
pop
inc
xchg
xchg
fcomp
sar
neg
push
fild
mov
shl
(bad)
fild
sub
mov
pop
rol
retf
inc
add
outs
add
test
pop
mov
jnp
add
aam
rol
not
ds
mov
stos
call
mov
rol
aaa
shl
(bad)
mov
jmp
or
mov
fistp
pushf
sar
call
jmp
jne
mov
and
shl
(bad)
jmp
test
add
add
add
add
xchg
neg
inc
add
cmc
mov
push
scas
add
lods
movs
hlt
push
test
jnp
mov
hlt
jo
ds
or
add
push
call
cmc
adc
mov
xchg
sub
cld
mov
ja
xchg
inc
sbb
div
call
add
add
add
call
addr16
or
jns
gs
mov
ror
clc
mov
lods
push
mov
pop
je
and
add
popf
mov
hlt
jmp
adc
mov
(bad)
std
pop
std
mov
sbb
add
(bad)
xchg
clc
lea
mov
rol
ja
clc
lea
test
test
sar
(bad)
jmp
sar
lea
cmp
clc
lea
idiv
xchg
xchg
call
mov
add
push
clc
push
xchg
out
inc
pop
mov
and
and
pop
jmp
cmp
push
mov
and
dec
mov
mov
popa
mov
cdq
call
add
add
pop
jl
cmp
push
(bad)
in
cld
mov
adc
jle
sahf
lods
add
pop
stc
retf
add
stos
call
push
mov
cdq
push
sbb
(bad)
jb
jle
push
cld
xor
cli
call
cmp
dec
scas
push
pop
mov
gs
push
add
shl
push
cmp
loope
int3
clc
mov
and
mov
mov
push
jge
push
push
inc
add
pusha
mov
loop
sti
mov
out
cmps
enter
cmp
mov
cdq
pop
and
inc
jle
or
mov
idiv
out
add
push
pop
jae
xchg
inc
inc
lea
add
mov
call
sub
stos
jne
mov
sub
xchg
daa
add
bound
add
push
daa
dec
and
add
retf
cmc
ins
imul
xor
inc
fidiv
jle
faddp
sbb
jle
add
inc
ret
push
retf
jle
stos
ret
inc
retf
jle
sahf
sub
test
in
ds
jmp
test
push
es
add
scas
jne
call
or
hlt
mov
mov
cmp
push
out
cmp
sbb
cmp
into
adc
add
push
sbb
mov
lea
in
(bad)
mov
into
clc
(bad)
jle
ds
push
inc
jle
mov
into
je
imul
shr
ins
sti
add
mov
pop
add
jnp
popa
into
(bad)
mov
scas
mov
mov
adc
xchg
sub
add
jge
clc
jne
and
loopne
ins
idiv
xor
mov
(bad)
jmp
imul
fsubr
idiv
push
xor
clc
mov
dec
call
aad
lahf
add
mov
out
ins
mul
shl
dec
mov
add
and
test
scas
add
int3
int3
inc
inc
add
int3
xor
retf
iret
lds
inc
jo
and
mov
in
(bad)
xchg
xor
(bad)
mov
fisttp
xchg
clc
push
mov
xchg
clc
call
gs
add
adc
adc
clc
call
sbb
add
sbb
inc
sbb
push
int
cld
xchg
es
inc
clc
jmp
xchg
jl
mov
sbb
jmp
and
pop
jmp
jg
fcmovnb
retf
inc
xchg
xchg
jl
cs
inc
mov
sbb
jne
ror
xor
aad
sti
call
pop
(bad)
lea
stos
call
add
add
add
add
sbb
jl
mov
inc
and
clc
lea
int
mov
fsubr
xchg
inc
jg
es
stc
adc
xchg
aad
call
rol
call
jmp
clc
call
xchg
dec
jmp
push
aad
call
add
xchg
clc
jmp
clc
call
(bad)
ja
mov
dec
nop
ds
inc
imul
and
dec
test
cld
adc
imul
fs
mov
jecxz
cli
call
add
mov
xchg
inc
push
dec
xchg
add
lods
add
lea
in
xchg
xchg
inc
or
xor
add
cmp
jae
repz
test
daa
jne
lods
push
lea
mov
xor
jle
mov
lock
mov
ins
xchg
clc
mov
and
fldenv
mov
push
xchg
add
data16
jg
out
clc
(bad)
mov
xchg
clc
(bad)
(bad)
idiv
add
push
jmp
clc
aas
lods
add
pop
sbb
xchg
clc
push
popf
in
jl
(bad)
nop
and
mov
nop
clc
add
iret
clc
call
xchg
add
out
bound
mov
push
mov
push
xchg
clc
or
fild
xchg
and
push
add
gs
inc
mov
xchg
clc
push
mov
test
sub
clc
jmp
jle
push
imul
pop
call
and
mov
in
jmp
cld
sbb
adc
inc
push
es
pusha
xchg
clc
(bad)
fist
sti
(bad)
mov
aam
inc
pop
mov
push
sar
and
add
add
add
mov
aam
call
clc
jne
pop
or
xchg
clc
mov
push
mov
cmp
xchg
clc
cmp
idiv
xchg
mov
add
shl
sti
push
and
clc
push
jecxz
xlat
mov
adc
and
jge
mov
pop
mov
add
adc
jne
(bad)
sar
jmp
inc
mov
stos
call
xor
xchg
clc
add
jae
dec
cmc
inc
mov
out
clc
jmp
mov
push
and
and
clc
call
fldcw
add
(bad)
inc
ins
adc
add
add
add
aad
cmp
mov
add
(bad)
out
push
call
mov
mov
dec
mov
scas
mov
add
clc
mov
pop
test
push
cmp
sub
adc
mov
adc
(bad)
add
inc
gs
add
ds
lea
lds
adc
scas
mov
or
popa
sbb
adc
stc
call
(bad)
(bad)
rcl
call
cwde
xchg
outs
add
pop
or
dec
cld
das
xor
mov
pop
sub
out
outs
sti
jmp
rol
add
jmp
pusha
(bad)
imul
mov
or
mov
cld
scas
mov
mov
cld
mov
scas
add
mov
aaa
mov
mov
mov
sti
mov
test
pop
adc
ret
das
popf
cdq
add
jmp
rol
add
scas
add
rcr
scas
mov
outs
add
(bad)
(bad)
pop
sar
mov
ret
fwait
jns
call
inc
rol
pop
jl
outs
test
pop
ins
sti
dec
shl
push
ret
sbb
mov
cld
xchg
xchg
mov
popf
fld
stc
call
add
add
push
ret
clc
(bad)
fild
and
xchg
inc
(bad)
and
dec
mov
xor
clc
(bad)
pop
vmovntdq
stc
call
lods
jge
sbb
inc
lea
and
inc
push
clc
adc
cdq
cmps
or
push
add
xor
and
ret
clc
mov
sub
adc
xor
loopne
ret
clc
(bad)
fcmovnb
cmc
out
pop
sti
call
inc
mov
lss
add
call
inc
(bad)
fistp
call
and
jl
xchg
mov
rol
clc
(bad)
pop
(bad)
mov
stc
call
dec
jo
cmps
inc
cld
add
xor
inc
push
xor
call
add
popf
mov
cld
in
xlat
adc
sbb
imul
jae
(bad)
sbb
xor
mov
push
ret
and
call
xor
(bad)
stos
lds
call
test
test
vmovntdq
add
pop
sti
push
push
stc
(bad)
(bad)
or
jle
aas
inc
push
das
sbb
push
cld
mov
lods
push
jmp
mov
push
xchg
mov
mov
pop
dec
mov
jbe
ret
push
xor
mov
fstp
sti
push
adc
mov
cld
fs
xor
inc
mov
test
mov
test
ret
out
sbb
mov
clc
push
rcl
idiv
mov
mov
outs
cli
add
sbb
add
imul
clc
push
cwde
je
adc
cmp
xchg
cs
adc
sbb
inc
cmc
inc
cld
mov
mov
dec
jo
repz
cld
jnp
mov
push
sub
clc
call
jne
test
(bad)
adc
mov
daa
sub
clc
call
jne
test
jnp
mov
sub
loopne
mov
cmc
out
pop
sti
jmp
addr16
xor
fist
clc
push
push
add
fbstp
sahf
mov
mov
mov
inc
out
dec
loopne
clc
mov
stos
mov
clc
inc
test
icebp
adc
push
in
loopne
mov
cmc
out
popa
sti
push
mov
clc
(bad)
(bad)
js
jmp
inc
test
mov
dec
enter
jno
inc
pusha
mov
idiv
add
(bad)
jecxz
add
clc
lea
and
iret
mov
in
mov
mov
shl
push
mov
mov
add
hlt
call
jl
and
clc
inc
sti
scas
mov
inc
(bad)
clc
(bad)
fsubr
add
out
cld
xchg
sub
inc
add
sub
add
xchg
(bad)
clc
(bad)
aas
sahf
out
inc
mov
sbb
clc
(bad)
ds
cld
mov
and
call
idiv
mov
mov
clc
push
inc
cs
cmp
jne
(bad)
ret
add
push
cdq
sbb
(bad)
ds
and
push
(bad)
ror
fst
mov
push
rol
mov
adc
mov
popa
mov
call
xchg
cld
aas
mov
xchg
mov
mov
out
hlt
mov
scas
add
adc
mov
xor
xchg
mov
jae
xor
push
xor
add
das
das
aas
sub
mov
lea
fcomp
jmp
sbb
inc
adc
lods
sub
mov
call
fmul
cld
add
mov
mov
das
out
add
xor
das
pop
mov
mov
sbb
add
add
add
mov
mov
push
push
add
rol
fistp
test
clc
lea
dec
mov
(bad)
imul
add
clc
(bad)
pop
mov
stc
jmp
sbb
inc
inc
push
fbstp
mov
repz
(bad)
out
push
or
loope
pop
add
mov
sldt
xor
mov
fsubr
add
inc
outs
cli
sub
add
push
loopne
add
clc
push
ds
mov
and
push
loopne
aam
mov
push
pop
push
cmp
mov
inc
test
inc
cld
add
or
add
sub
clc
inc
mov
test
popa
sbb
scas
inc
add
fist
mov
sub
inc
add
mov
lea
sbb
inc
mov
mov
inc
lea
cmp
test
clc
jmp
cmp
(bad)
mov
fidiv
add
add
add
add
clc
mov
imul
push
fimul
(bad)
pop
mov
call
mov
inc
mov
repz
adc
xor
adc
add
mov
add
in
mov
sub
inc
add
mov
lea
sbb
inc
add
mov
mov
sbb
clc
inc
out
jo
ins
sti
and
retf
mov
in
mov
sbb
inc
mov
push
in
and
clc
(bad)
pop
mov
call
mov
inc
mov
int3
mov
inc
cmps
sbb
(bad)
stos
add
add
and
mov
loopne
fimul
test
add
aas
adc
or
jnp
pop
test
clc
jmp
inc
mov
stos
mov
cwde
ins
sti
and
and
and
mov
push
dec
in
inc
lea
stos
mov
cld
mov
mov
and
push
push
add
pop
ins
sti
and
imul
mov
in
idiv
jb
clc
push
int3
mov
mov
out
(bad)
ds
or
and
pop
add
in
xlat
mov
add
push
mov
mov
lea
and
xchg
mov
mov
and
pop
popf
mov
add
add
add
add
jl
ret
fdiv
push
jecxz
add
clc
(bad)
(bad)
jmp
ds
xor
sar
into
cmps
clc
pop
jmp
cmp
mov
add
jecxz
mov
add
fcomi
mov
push
push
call
add
inc
push
mov
movs
inc
(bad)
(bad)
sti
jmp
or
scas
mov
cwde
sbb
sub
cmp
sti
mov
mov
lea
rol
and
clc
push
adc
mov
cld
ins
mov
dec
push
mov
repz
inc
add
sub
mov
adc
cmc
ss
cmp
sbb
push
or
fcmovnbe
sub
mov
sub
clc
push
jl
mov
pop
ins
sti
add
aam
and
mov
cmp
idiv
(bad)
sub
push
ds
cld
mov
mov
lea
push
mov
add
add
add
add
mov
(bad)
(bad)
stc
(bad)
out
or
inc
mov
aad
inc
data16
adc
mov
push
inc
(bad)
retf
dec
mov
add
mov
(bad)
fwait
movs
sub
and
stc
jmp
rol
pop
inc
mov
push
xchg
mov
push
aad
add
mov
call
add
xor
dec
mov
adc
aam
mov
rcl
cwde
sub
not
mov
mov
repz
dec
loope
dec
pusha
mov
call
or
inc
mov
dec
mov
(bad)
fcmovnb
mov
test
clc
(bad)
mov
sbb
pop
mov
sub
jbe
mov
xchg
inc
cld
out
add
push
loopne
add
mov
call
pop
rol
inc
mov
fwait
pop
(bad)
leave
call
push
jb
out
in
fistp
add
clc
and
idiv
cmps
push
gs
xchg
fild
push
sub
clc
adc
add
or
mov
test
popa
xchg
shr
pop
inc
push
mov
dec
adc
inc
enter
mov
pop
or
cdq
clc
adc
xchg
test
mov
clc
mov
stos
jge
push
pushf
inc
add
(bad)
push
add
jmp
daa
mov
(bad)
iret
cs
je
jge
(bad)
fstp
jg
jle
jle
outs
sar
mov
pushf
in
jmp
adc
push
lods
enterw
ror
lock
sub
call
fwait
jno
adc
pop
jne
call
add
add
add
jb
in
jmp
imul
push
add
ins
xchg
lods
clc
mov
outs
pop
lea
jg
call
stc
enter
jg
(bad)
push
out
mov
outs
call
ret
jmp
fcom
(bad)
in
add
inc
mov
stos
test
shl
stc
pop
mov
add
inc
cwde
adc
test
add
sub
fld
cmp
sub
call
je
ret
pop
mov
add
es
pop
adc
imul
mov
mov
call
mov
mov
add
out
(bad)
stos
call
mov
mov
add
add
pop
hlt
mov
sub
jle
xor
mov
stc
push
mov
mov
inc
movs
sub
aad
push
sar
xor
std
and
out
jne
inc
adc
jecxz
pop
lea
push
push
lahf
in
shr
mov
in
jmp
jne
inc
xchg
mov
test
mov
xchg
repz
add
and
dec
aad
mov
mov
add
test
out
push
(bad)
jmp
call
mov
jge
sub
out
(bad)
(bad)
in
in
inc
cmps
add
push
add
push
cdq
lods
clc
sbb
push
test
add
and
cld
and
push
shl
nop
call
add
jne
add
add
or
daa
and
call
(bad)
in
cmp
(bad)
out
jne
dec
(bad)
das
inc
lods
test
idiv
ret
sbb
neg
mov
inc
rcl
push
cld
scas
jge
push
and
lea
xor
lods
scas
inc
(bad)
sti
add
mov
jns
inc
inc
cmps
call
push
int3
test
into
ds
cld
sti
and
push
sar
(bad)
call
popf
in
call
aad
pop
mov
(bad)
adc
mov
in
xor
pop
out
(bad)
ss
(bad)
mov
loopne
jge
push
(bad)
push
add
push
cld
mov
jmp
in
add
adc
jge
add
in
push
jle
and
jmp
mov
call
sbb
inc
push
cmp
idiv
adc
push
mov
mov
dec
or
out
mov
call
ret
jl
mov
add
add
add
add
loopne
dec
scas
xor
mov
push
(bad)
push
push
std
mov
test
out
(bad)
out
and
cld
popa
js
(bad)
jecxz
call
(bad)
fist
(bad)
call
(bad)
fstp
call
mov
lods
add
(bad)
call
aad
sbb
add
and
and
push
and
(bad)
mov
push
mov
mov
sub
in
call
in
call
push
mov
add
inc
sahf
out
neg
shr
(bad)
stos
mov
fsubr
xor
xor
out
pop
ret
imul
pop
xchg
lods
add
add
add
add
jecxz
cs
cmps
retf
loopne
add
pusha
fwait
in
(bad)
aas
xchg
sub
pand
add
xor
enter
mov
mov
div
mov
or
ja
jbe
add
fsubr
mov
push
jne
inc
push
and
scas
jne
std
push
daa
shl
in
add
movs
mov
mov
dec
or
(bad)
stos
add
adc
mov
shl
push
test
xor
fbld
pop
iret
in
(bad)
call
lea
xchg
in
call
ins
cld
imul
in
add
fwait
push
add
scas
mov
dec
jns
adc
add
push
out
xor
push
mov
hlt
add
push
out
inc
cmps
push
xor
cmp
das
ins
cmps
pop
hlt
fcom
(bad)
sbb
sub
or
stc
cs
(bad)
inc
mov
jne
ret
fsubr
out
mov
aas
dec
mov
inc
and
shr
add
cmp
xor
mov
stos
push
push
dec
cmp
and
inc
dec
in
add
sbb
je
out
add
jne
inc
mov
in
push
lea
stos
push
mov
(bad)
fisttp
lea
mov
xor
test
mov
out
adc
add
pop
push
adc
aad
inc
cmps
inc
cmp
push
mov
(bad)
cmps
xchg
ror
(bad)
enter
idiv
data16
pushf
jp
add
push
iret
mov
cmp
js
mov
mov
add
int
add
mov
or
in
add
mov
jnp
add
push
mov
test
je
add
loopne
mov
sub
add
pop
les
mov
push
and
out
mov
mov
cvtpi2ps
lods
and
mov
add
xor
cmps
aaa
xor
mov
je
(bad)
mov
add
scas
jge
jp
add
push
loopne
adc
in
add
add
(bad)
push
xor
push
cmp
mov
add
in
and
sub
add
xor
add
push
push
ss
add
test
scas
add
sbb
(bad)
jmp
call
lods
mov
(bad)
fisubr
push
scas
add
scas
addr16
mov
lea
fimul
add
pop
jge
jmp
jge
cmp
push
(bad)
fimul
hlt
out
sub
xchg
ins
sbb
mov
pop
add
or
xchg
add
sbb
sbb
inc
push
push
xor
fadd
add
mov
xor
add
outs
fs
popa
fisubr
and
add
sbb
adc
jle
add
mov
sbb
xchg
scas
add
data16
call
mov
and
data16
add
(bad)
out
jmp
push
push
push
jl
jge
cmp
push
mov
mov
add
sub
cld
mov
scas
add
pop
outs
fs
push
scas
add
dec
int3
or
mov
xor
and
scas
add
push
push
pushf
add
push
push
xor
and
scas
add
mov
add
mov
ss
outs
mov
add
ss
call
fistp
add
ror
xor
dec
and
std
adc
aad
and
push
cmp
jnp
add
icebp
dec
push
ror
call
sub
jge
dec
loope
jne
inc
add
test
mov
jl
in
add
test
adc
mov
jne
pop
and
add
add
add
add
jecxz
pop
outs
outs
push
mov
jle
xor
mov
mov
fist
mov
push
out
pop
sar
adc
popf
push
inc
out
(bad)
out
fsub
loope
mov
mov
inc
push
mov
js
jmp
xchg
push
inc
add
mov
add
push
dec
or
mov
inc
movs
fsub
mov
ss
out
dec
(bad)
(bad)
popa
inc
call
mov
pop
fdivr
mov
inc
out
(bad)
jle
pop
(bad)
mov
cmp
(bad)
mov
(bad)
pop
push
out
push
jbe
jne
add
and
out
push
sbb
in
add
(bad)
push
cld
add
push
lea
loope
inc
xchg
mov
out
push
out
sbb
call
in
add
inc
cmp
mov
in
mov
cmp
(bad)
ds
add
mov
(bad)
xchg
imul
push
xor
(bad)
mov
push
out
push
add
jmp
cmp
call
mov
dec
cld
test
cmp
call
adc
jge
mov
out
(bad)
out
jecxz
(bad)
adc
jge
mov
out
dec
fidiv
add
bound
les
call
test
fist
push
add
stc
sub
nop
mov
test
jge
inc
cmp
call
fucomp
call
mov
cmp
push
cmp
jmp
loopne
test
aas
out
(bad)
mov
loope
inc
and
jmp
push
das
and
add
jecxz
(bad)
fwait
cmp
out
inc
fucomi
call
mov
movs
nop
nop
ds
call
vhsubpd
pop
hlt
in
call
icebp
add
jge
nop
ds
call
dec
cmp
jmp
fnstcw
sub
out
dec
loopne
test
ds
jmp
or
mov
push
inc
(bad)
jo
out
push
add
add
add
fiadd
add
cmp
in
or
nop
push
cld
loope
xor
lea
loopne
outs
xor
jmp
push
(bad)
sti
iret
(bad)
mov
mov
push
ds
dec
out
sti
xchg
fld
dec
and
jmp
cmp
push
inc
add
push
out
push
or
movs
je
push
out
call
inc
fdivr
bound
(bad)
(bad)
in
call
jno
xor
xchg
call
xchg
push
jbe
xor
add
xchg
push
cld
xchg
cs
jl
mov
mov
push
out
inc
add
push
push
push
jae
nop
(bad)
mov
push
out
push
jmp
push
out
mov
push
call
cmovs
ficom
sub
(bad)
mov
push
out
push
xor
(bad)
mov
jmp
data16
add
and
adc
push
movs
shl
push
out
push
add
out
mov
cld
adc
inc
(bad)
retf
push
out
inc
data16
std
push
push
push
mov
push
call
mov
adc
push
ret
push
(bad)
jmp
inc
out
add
mov
jle
mov
push
mov
jg
(bad)
(bad)
call
enter
out
and
add
dec
mov
sub
add
jp
in
call
lods
inc
push
fucomip
sar
dec
cmp
inc
push
sub
rsm
idiv
jmp
in
add
lods
out
jne
fucomi
adc
fwait
imul
add
fnstcw
mov
fsubrp
jne
push
add
call
add
add
out
push
out
jmp
pop
(bad)
popa
hlt
mov
stc
mov
in
add
in
imul
lods
push
lea
(bad)
mov
scas
call
push
mov
xor
cld
push
fs
adc
les
out
lea
push
cld
sub
or
mov
in
sti
add
xchg
(bad)
mov
arpl
mov
push
out
push
mov
fs
cmp
mov
out
mov
push
call
push
outs
add
sar
adc
in
scas
les
add
out
mov
add
je
in
push
pop
call
mov
add
push
out
ret
imul
mov
stos
call
mov
pop
leave
aad
mov
es
mov
call
lea
inc
push
ja
push
ins
add
lods
ds
(bad)
(bad)
mov
nop
ins
int3
jmp
push
mov
add
lds
jle
in
sti
mov
test
add
in
mov
call
jp
cmc
inc
push
out
psubsw
inc
add
(bad)
fwait
gs
push
stos
mov
retf
mov
imul
lds
add
aad
mov
jb
popf
stos
mov
xchg
test
add
sbb
out
shr
xchg
cmp
cmp
dec
mov
repz
jg
add
cmps
jbe
push
out
out
xchg
sbb
imul
mov
std
mov
ret
fnstsw
aam
mov
repz
out
xor
jbe
hlt
push
and
jne
mov
add
add
add
add
pop
mov
inc
mov
cmp
out
push
pop
test
call
mov
popf
in
jmp
iret
cmp
mov
pushf
push
push
les
inc
call
push
push
jl
push
imul
cld
movs
pop
out
sub
(bad)
push
and
(bad)
(bad)
fist
dec
lods
in
inc
add
add
dec
dec
out
push
int3
mov
mov
inc
out
jmp
jnp
add
psubq
and
les
pop
cli
sti
add
push
mov
(bad)
call
jns
add
popf
dec
out
mov
or
push
xchg
push
out
ret
mov
jnp
call
xchg
retf
cld
xor
gs
add
lock
sbb
mov
add
repz
call
sbb
push
push
inc
inc
pop
sub
popf
push
jne
(bad)
ins
neg
push
out
mov
push
adc
inc
fsubp
out
xlat
mov
fisttp
cli
std
push
push
test
sti
add
mov
mov
inc
mov
aam
mov
jnp
div
sub
add
js
xor
jge
mov
fisub
(bad)
jmp
pop
jp
call
push
ror
adc
out
xor
push
scas
add
add
loopne
in
(bad)
(bad)
dec
lea
call
ins
cmp
inc
call
mov
push
xchg
retf
ds
cld
inc
(bad)
or
sbb
mov
mov
call
push
and
adc
pop
mov
add
add
mov
xor
push
fidivr
jp
push
lea
push
push
frstor
dec
jp
mov
jp
add
push
cmp
(bad)
in
out
sbb
push
push
push
or
sbb
shl
adc
std
push
push
push
shl
sub
add
scas
inc
stc
sti
push
mov
and
xchg
xor
add
(bad)
or
pop
dec
stc
test
xor
add
xchg
lods
in
(bad)
jge
push
lea
cdq
adc
es
jmp
test
sti
mov
push
test
mov
xor
out
pop
repz
daa
adc
adc
and
pop
push
and
push
mov
jecxz
mov
fmul
add
pop
mov
out
ret
push
(bad)
addr16
push
push
retf
push
and
mov
sub
mov
rcl
mov
push
out
dec
je
adc
in
call
mov
out
push
jmp
push
xor
xchg
leave
add
add
in
add
mov
repz
(bad)
(bad)
and
jge
sbb
pushf
loopne
out
lea
push
out
mov
mov
lahf
and
(bad)
mov
sbb
mov
dec
out
mov
out
inc
aam
inc
dec
mov
pop
in
mov
out
jmp
add
lods
(bad)
xchg
dec
jge
push
dec
sub
or
xchg
cs
jecxz
out
push
adc
shr
mov
call
aad
push
dec
mov
out
lea
push
out
data16
data16
sbb
add
add
cmp
aam
xor
bound
add
add
push
xor
arpl
mov
inc
movs
call
lea
cli
dec
mov
push
in
push
push
fs
daa
or
mov
add
xchg
sub
pusha
inc
cwde
dec
mov
mov
inc
add
clc
dec
dec
push
int3
mov
mov
push
out
jmp
in
in
push
add
ds
clc
sti
and
ins
scas
push
sahf
je
and
add
push
xor
mov
clc
(bad)
mov
push
out
lea
dec
lea
jp
(bad)
sub
call
push
gs
mov
and
nop
cwde
in
in
or
push
(bad)
popa
js
push
and
mov
cdq
fcmovnb
fist
aam
sti
inc
add
ret
or
call
push
sub
jge
sub
(bad)
ds
out
inc
jns
add
sbb
(bad)
adc
inc
and
out
push
mov
dec
sti
push
sub
xchg
dec
push
(bad)
fist
adc
add
or
cld
inc
sub
add
(bad)
scas
add
pop
pop
call
pop
pop
jo
ins
inc
in
inc
cmps
and
call
and
rcl
sub
mov
in
(bad)
stos
dec
std
jmp
or
push
call
in
cld
mov
js
inc
and
mov
jg
iret
shl
add
add
add
add
push
call
pop
outs
push
cld
xor
mov
cs
inc
out
cwde
sub
mov
xchg
ret
je
push
xor
cmp
iret
push
in
test
out
(bad)
jle
in
sbb
or
fist
test
out
jmp
pop
xor
add
add
add
add
adc
int3
test
mov
push
out
(bad)
ds
sti
and
mov
ficom
or
jge
mov
dec
and
sti
xchg
imul
test
mov
sub
push
push
sbb
nop
dec
mov
dec
scas
sbb
mov
inc
push
out
call
push
xor
out
inc
mov
add
push
out
push
mov
std
mov
lods
jge
ss
sub
popf
dec
jge
(bad)
js
test
push
sti
inc
push
jge
inc
and
fist
dec
out
sbb
inc
mov
inc
jo
loopne
pop
push
jl
jge
jle
out
jmp
pop
sti
push
add
mov
add
add
and
add
mov
gs
ds
in
sti
mov
and
pusha
push
out
push
imul
cld
mov
mov
and
out
jmp
inc
les
push
pop
pop
xchg
jne
and
push
jbe
xor
add
add
add
add
retf
and
push
add
(bad)
out
push
rcl
movs
(bad)
pop
dec
add
dec
mov
push
inc
imul
out
call
xor
push
out
dec
in
mov
push
pusha
cmc
popf
push
push
push
push
xlat
nop
call
pop
out
add
add
in
add
mov
test
add
inc
inc
int
inc
push
mov
ret
stos
test
xor
cld
sbb
jns
test
push
out
dec
jnp
inc
xchg
cmp
xor
push
out
sbb
mov
arpl
inc
push
(bad)
sbb
call
add
gs
cld
mov
or
mov
(bad)
out
xchg
fist
test
out
jmp
in
lahf
call
cmc
rol
jmp
out
jmp
push
push
push
and
in
push
dec
add
sti
adc
fiadd
push
stos
push
lea
dec
out
lea
dec
lea
add
ret
pop
test
sbb
out
xchg
jmp
sti
addr16
push
xor
push
and
out
push
test
in
sbb
push
and
mov
fs
push
sbb
push
out
call
in
sbb
jno
push
and
xor
repz
pop
push
inc
mov
movs
push
add
add
add
inc
pop
out
call
mov
sbb
or
sbb
xor
les
pop
out
call
mov
mov
mov
or
mov
xor
push
out
call
push
in
rcl
lods
cmp
mov
ins
add
sbb
inc
push
add
jle
and
xor
in
inc
cmps
loopne
test
add
in
push
xchg
mov
and
shr
call
ins
cld
(bad)
stos
add
or
fisttp
inc
out
shl
xchg
add
mov
lea
mov
out
(bad)
fistp
lea
add
clc
sti
sbb
add
(bad)
cs
add
pop
jg
mov
xchg
mov
lea
sbb
inc
scas
add
daa
jae
add
addr16
mov
repz
(bad)
fwait
add
or
fisttp
jmp
add
cmp
add
out
pop
outs
push
cld
inc
scas
add
xchg
je
add
add
or
dec
mov
shl
scas
out
fcomi
sbb
add
(bad)
scas
fs
xchg
add
push
in
mov
mov
add
(bad)
jle
repnz
cmp
add
sub
out
mov
add
cmp
call
neg
scas
fs
or
mov
mov
add
(bad)
out
test
sti
adc
xor
lods
add
sub
gs
call
jge
call
test
lods
add
push
mov
add
inc
mov
mov
add
inc
es
add
jge
rol
out
(bad)
jle
repnz
mov
lods
add
test
mov
ficomp
and
push
push
xor
call
out
lahf
add
mov
cli
(bad)
out
dec
adc
jne
mov
add
out
(bad)
jle
in
inc
push
xor
scas
or
sti
push
xor
xor
out
push
imul
cld
jp
jmp
mov
xchg
mov
lea
jne
inc
(bad)
call
sbb
mov
adc
inc
mov
xchg
add
inc
ss
add
or
cli
(bad)
mov
aaa
xor
and
call
push
xchg
add
add
fisttp
in
mov
les
lods
add
add
xchg
ja
call
push
out
push
jae
add
mov
call
in
outs
xor
cld
popa
sub
in
inc
cmps
fstp
add
push
add
inc
push
cld
leave
adc
pop
mov
cmps
mov
(bad)
sti
shr
inc
hlt
xor
mov
cmp
and
pop
pop
jbe
jne
and
out
push
xchg
xor
aas
add
add
add
mov
xor
repz
cmp
mov
mov
outs
push
lea
outs
out
inc
add
lock
inc
xor
xchg
cli
out
xchg
imul
push
add
cli
out
call
jmp
sti
out
dec
jecxz
lea
call
pop
std
sub
data16
mov
ret
sbb
dec
cld
stos
mov
in
fnsave
(bad)
fild
out
jmp
or
add
add
add
add
sti
mov
sub
pop
mov
jne
hlt
xor
inc
add
sti
jl
inc
fidivr
data16
out
(bad)
mov
fnstenv
call
pop
lods
mov
xor
dec
(bad)
jmp
sbb
call
test
mov
(bad)
aas
rcr
add
sub
jge
mov
ins
lahf
call
test
out
jmp
add
lock
movs
gs
call
and
sti
add
repz
mov
call
sub
out
lea
popa
push
lea
out
inc
clc
sti
sbb
push
call
add
push
cmc
sti
addr16
xor
mul
out
push
pop
ins
in
xor
sub
or
(bad)
out
jmp
imul
ds
dec
inc
pop
push
mov
xor
push
or
out
sbb
mov
out
call
test
out
call
add
mov
out
call
xor
mov
call
mov
add
std
out
call
push
imul
xor
mov
mov
push
(bad)
fcomi
xor
xchg
scas
push
call
in
sti
addr16
xor
xchg
add
add
add
add
repz
(bad)
fwait
std
and
push
scas
or
fucomip
mov
repz
sbb
mov
mov
sub
add
cmps
mov
jmp
sub
cvtps2pd
jge
inc
add
test
jge
out
repz
(bad)
out
idiv
inc
cmps
jmp
cld
enter
pop
ins
mov
add
xchg
test
or
or
dec
in
inc
xchg
fidivr
xchg
repnz
call
jne
aaa
push
scas
add
fs
push
call
aad
sti
mov
fnstenv
add
sub
inc
loop
jmp
repz
pop
pop
jne
cmp
lods
add
add
out
lods
push
call
cwde
jne
add
arpl
jne
add
push
out
push
scas
add
xchg
jns
cmp
out
push
push
sub
dec
mov
add
call
mov
test
dec
sub
mov
repz
push
add
and
or
sbb
test
es
cmp
push
push
mov
out
call
test
stos
add
push
mov
repnz
inc
popf
call
neg
cmp
fs
add
out
push
or
jge
retf
(bad)
jle
fdivr
mov
ins
add
sub
and
push
icebp
scas
inc
push
repz
mov
and
out
inc
cmc
out
(bad)
fwait
std
sbb
push
lods
out
cmps
lods
and
es
cmp
push
push
lahf
movs
clc
nop
icebp
out
call
xchg
outs
lahf
add
push
mov
push
repnz
dec
out
xor
into
dec
lock
icebp
out
jmp
out
fwait
in
inc
add
(bad)
sahf
gs
jle
in
sbb
out
push
imul
xor
pop
add
mov
sbb
in
jmp
fidiv
shr
inc
mov
add
repz
push
add
jmp
push
sti
(bad)
jl
push
add
xchg
cmp
jmp
out
out
push
add
sub
call
test
jnp
(bad)
stos
add
cmc
xor
and
dec
std
cli
push
ins
rcl
sub
call
fiadd
push
fsubr
cmp
add
cld
push
daa
mov
mov
fidivr
into
repnz
push
xor
add
arpl
sbb
repz
lahf
mov
lea
in
xor
loopne
test
nop
repz
pop
jbe
jne
mov
in
add
in
xor
add
add
jg
xor
in
xor
push
add
add
stc
push
lea
out
inc
repz
push
add
and
out
mov
out
push
inc
xchg
movs
push
xchg
cmc
cli
dec
out
(bad)
ds
push
lea
call
mov
in
je
add
out
push
mov
fwait
xor
(bad)
mov
out
lea
sub
out
mov
add
xchg
ret
repz
fs
(bad)
mov
jne
xchg
out
push
jle
sbb
xor
mov
xchg
jb
jne
loop
dec
fwait
hlt
out
push
sub
jge
mov
aas
jmp
inc
loope
add
imul
jnp
lea
mov
loop
call
lea
add
call
out
call
sbb
aas
mov
pop
hlt
dec
in
mov
out
dec
add
mov
in
call
mov
mov
jmp
mov
and
js
ja
scas
push
mov
imul
fdiv
dec
int3
mov
xor
add
loop
test
(bad)
call
mov
lea
loop
pop
cmp
call
push
mov
adc
scas
test
es
add
cld
(bad)
cli
dec
mov
mov
call
add
int
add
scas
call
push
add
and
sbb
repnz
adc
adc
cmps
scas
add
scas
sub
push
ficom
add
adc
cli
dec
gs
xchg
movs
and
lods
add
out
sub
sti
loope
pusha
sti
push
jge
cmp
add
push
scas
call
push
xchg
sub
add
push
scas
add
push
mov
out
cld
cli
dec
and
inc
out
fs
push
je
xchg
scas
add
fcomi
aas
repnz
repz
mov
fnstsw
mov
mov
adc
xchg
lods
add
jmp
out
jl
call
in
sti
mov
fucomp
jne
xchg
clc
mov
fcmove
rol
push
lods
mul
mov
les
cmp
fcomip
pop
icebp
out
call
mov
in
(bad)
aas
mov
jge
mov
call
push
or
add
ds
call
(bad)
jmp
push
leave
jge
mov
hlt
mov
je
mov
cmps
lock
jmp
int
call
fst
or
mov
add
idiv
data16
pop
pop
add
in
out
inc
mov
sub
clc
jl
addr16
mov
fs
add
push
fadd
add
inc
mov
gs
dec
lea
rol
stos
push
mov
push
fcom
add
aad
push
mov
mov
in
(bad)
out
xor
inc
cmps
sahf
fs
xchg
mov
lods
add
mov
mov
xor
adc
fsub
int3
xchg
stos
add
ds
out
inc
jg
add
dec
adc
push
stos
add
mov
(bad)
mov
ds
dec
add
or
cmp
and
in
and
add
mov
add
mov
push
and
ds
call
neg
stos
jge
jp
add
out
mov
xor
push
arpl
sub
add
push
arpl
inc
cmps
cmp
add
fsubr
adc
xchg
stos
add
dec
lock
inc
ret
add
call
test
movs
call
(bad)
fimul
xchg
add
stos
push
lea
sub
outs
adc
xchg
and
stos
add
mov
adc
pop
cs
push
stos
add
ds
mov
ins
cld
push
jmp
mov
adc
out
add
outs
(bad)
ds
popa
jns
lea
push
or
add
shr
adc
sub
std
xchg
jno
push
bound
sub
sti
push
cmp
sbb
cmp
aad
jo
adc
sti
and
lea
mov
adc
push
out
lea
or
cli
call
(bad)
adc
mov
and
add
daa
std
call
mov
pop
add
ret
push
pop
pop
and
ret
out
push
or
push
adc
gs
push
adc
rcl
add
and
sbb
push
out
je
dec
ds
cld
and
test
call
add
add
add
add
mov
(bad)
jmp
dec
js
std
in
mov
xchg
and
in
and
scas
add
pop
dec
xor
popf
in
push
push
daa
mov
mov
add
xlat
sti
mov
mov
je
mov
inc
jno
out
mov
sbb
call
push
out
push
cld
scas
mov
add
push
push
lea
push
fwait
add
call
push
mov
adc
sbb
adc
push
scas
add
(bad)
in
(bad)
add
dec
stc
pop
test
add
es
add
sbb
out
popf
push
push
(bad)
retf
(bad)
pop
add
cmc
out
inc
sti
inc
add
and
add
gs
idiv
jge
mov
cmp
jae
push
add
cwde
inc
pop
outs
mov
daa
mov
mov
call
add
imul
pop
rcr
adc
out
and
sti
adc
and
inc
test
push
pop
xor
add
sub
sti
mov
or
jae
push
out
push
or
push
push
xor
add
mov
ficom
jle
out
sti
adc
push
xchg
dec
mov
jo
mov
(bad)
call
lods
add
scas
jb
pop
in
dec
dec
ret
add
mov
fadd
mov
leave
mov
push
cmps
pop
or
lods
mov
xor
and
and
lods
add
jne
inc
mov
gs
lea
smsw
lods
push
mov
ins
push
pop
lea
or
xor
mov
test
push
out
push
add
xor
add
cmps
lods
call
mov
jl
inc
mov
test
add
push
stos
call
xor
jge
push
fidiv
adc
push
lods
add
cld
inc
sti
(bad)
jle
cli
inc
es
movs
and
stos
add
push
fcmovnu
sti
xchg
and
adc
pop
sub
pop
lods
add
ds
add
inc
jge
mov
pop
add
stos
call
push
push
cwde
adc
(bad)
stos
add
jmp
(bad)
fiadd
pop
mov
jmp
(bad)
pop
or
add
stos
or
add
call
call
mov
movs
and
stos
call
stos
add
push
pop
fdivr
mov
test
add
push
in
jae
jp
add
jmp
test
add
(bad)
jp
inc
mov
lea
mov
mov
in
jae
repnz
imul
add
ja
call
inc
jp
mov
add
(bad)
jmp
movs
in
push
mov
jp
add
push
mov
adc
data16
add
add
sti
dec
jbe
xor
(bad)
adc
sar
or
mov
pop
dec
and
and
sbb
and
and
and
and
xchg
or
mov
mov
mov
mov
mov
test
or
test
and
add
jle
jecxz
mov
or
mov
mov
add
mov
add
and
mov
add
in
and
adc
es
push
(bad)
pusha
(bad)
add
clc
jmp
mov
jb
add
imul
repz
mov
test
jge
jp
add
(bad)
out
jae
jle
add
fistp
jecxz
inc
jge
mov
dec
out
lea
in
adc
mov
icebp
inc
int3
adc
inc
pop
and
push
inc
out
jp
add
push
mov
add
addr16
add
mov
int3
add
push
psubsb
out
jmp
inc
fs
cmp
pop
jo
lea
push
xor
scas
(bad)
jecxz
push
pop
push
push
pushf
adc
(bad)
scas
add
int3
push
sti
(bad)
cmp
mov
add
adc
sti
jmp
fcom
jle
cli
sti
add
add
add
add
add
inc
pop
lea
in
xor
ins
dec
sti
jmp
xchg
or
inc
aaa
xor
dec
push
mov
add
stos
mov
mov
xor
add
adc
or
inc
mov
sub
mov
das
aam
jl
push
div
sub
add
imul
inc
(bad)
(bad)
mov
add
scas
push
push
or
xor
div
add
cli
pop
add
aaa
inc
or
inc
jge
jp
add
xchg
cmp
xchg
ins
and
push
lods
cmp
jp
push
mov
jmp
cdq
inc
out
push
mov
add
mov
pop
scas
add
push
shr
xchg
aaa
mov
mov
adc
pop
mov
pop
scas
add
ds
push
cwde
mov
xlat
lods
add
ds
sti
mov
scas
jge
mov
inc
out
mov
jge
mov
adc
add
inc
out
push
sub
mov
jp
data16
call
push
push
xor
cmp
mov
sbb
push
xor
ins
and
xor
and
xor
dec
je
lods
add
sbb
dec
and
xor
dec
xor
imul
mov
pop
jp
mov
mov
call
mov
add
jmp
cmp
std
fld
jle
mov
jne
mov
lods
mov
sub
push
out
(bad)
out
fbld
sbb
in
inc
jge
adc
fstp
adc
pop
inc
add
out
cmc
out
mov
call
fcom
xchg
add
call
add
mov
(bad)
cmp
aam
inc
mov
cwde
mov
xlat
stos
add
pop
enter
ins
adc
in
lahf
cdq
pop
imul
rcl
inc
add
enter
call
sti
jmp
fsqrt
inc
xchg
cmp
cs
repz
data16
add
retf
cmp
add
ficom
push
call
movs
cmc
sti
mov
hlt
jae
dec
mov
add
cmp
and
cs
sub
lea
stos
inc
push
ds
sti
inc
cs
ins
pop
mov
mov
jp
(bad)
call
or
inc
retf
clc
movs
pop
out
fwait
and
push
mov
add
cli
jnp
mov
jp
or
test
stos
add
ds
inc
pop
mov
sub
add
sbb
adc
push
stos
add
out
xchg
cmp
adc
lea
stos
call
or
push
xor
jle
xchg
out
add
aam
sti
inc
add
add
out
push
loopne
cmp
push
jle
int3
(bad)
test
sti
push
bound
mov
and
lea
push
push
xor
adc
xchg
test
(bad)
sti
inc
adc
dec
scas
jne
push
mov
mov
adc
pop
neg
aas
xor
sbb
and
scas
cmp
add
add
add
aas
out
lea
or
pop
add
mov
out
inc
sti
jmp
mov
xor
shl
cmp
ja
sbb
js
stc
mov
ins
adc
fild
mov
ds
inc
mov
ins
adc
addr16
add
fimul
unpcklps
jmp
mov
call
cmp
cmp
push
or
cmp
sbb
bound
xor
push
or
jmp
fs
and
cmp
call
pop
xor
or
add
scas
call
mov
or
mov
pop
add
scas
push
mov
add
jbe
pop
fld
add
aad
call
mov
adc
xor
ds
sti
inc
sub
add
or
std
ficom
pop
jae
xor
(bad)
fiadd
mov
pop
adc
lahf
pop
adc
(bad)
pop
adc
add
scas
mov
jge
jp
call
jmp
or
repnz
in
(bad)
out
pop
inc
jmp
or
push
(bad)
jb
inc
xchg
retf
xchg
scas
add
dec
sub
cmps
scas
mov
xor
xor
pop
inc
mov
gs
data16
push
mov
add
add
add
push
scas
add
int
cld
mov
mov
push
cmps
pusha
stc
pop
test
pop
mov
dec
sti
inc
xchg
call
pop
push
xor
out
cvtps2pd
clc
push
lods
cmp
shl
jl
cmps
lods
inc
push
aad
jl
mov
and
and
add
add
add
test
call
fbstp
and
jmp
adc
into
mov
cld
in
push
push
push
and
cwde
into
sti
add
cmp
push
lods
mov
sub
jbe
fs
or
test
out
add
jb
sti
dec
scas
push
xor
add
adc
add
mov
cmp
inc
lods
add
and
test
add
xchg
and
out
push
push
or
add
aad
adc
data16
add
push
in
mov
cmp
add
es
cmp
push
jmp
add
add
add
push
lods
add
and
out
fs
jge
jp
add
push
pop
xor
arpl
enter
call
int3
push
jge
mov
add
pop
mov
mov
lods
call
push
cld
stos
mov
mov
lods
call
mov
or
push
test
test
add
jge
add
add
add
cmp
sub
adc
stos
add
push
out
je
xlat
inc
(bad)
retf
add
stos
call
lea
stos
push
jmp
fistp
(bad)
fcmovu
ss
test
adc
out
add
mov
sub
add
dec
jne
dec
push
aad
cmp
mov
jle
(bad)
sti
cmp
and
xor
jbe
fs
xor
and
inc
jp
xchg
mov
jnp
jp
jnp
cmp
fcomip
std
dec
out
test
add
pop
stos
add
pop
or
push
movs
and
stos
add
scas
inc
(bad)
add
push
jg
push
push
jle
test
test
adc
imul
jae
repnz
add
and
bound
mov
std
(bad)
jmp
fidiv
xchg
test
dec
add
add
jmp
jne
xor
add
aam
in
call
in
or
adc
ficom
bound
cmp
mov
cmp
fist
repnz
out
push
jne
fs
out
jae
outs
mov
add
sbb
fisttp
stos
add
pop
push
lea
push
mov
test
add
(bad)
scas
call
lea
fst
call
push
lds
jle
jmp
bndstx
out
jmp
fmul
push
add
scas
pop
jecxz
mov
fdivr
scas
sbb
or
sti
jmp
int3
adc
out
mov
inc
push
mov
mov
call
mov
mov
mov
add
sbb
push
xchg
mov
out
add
aam
cli
dec
popa
jge
jp
add
out
push
fild
add
adc
jmp
fiadd
int3
adc
(bad)
shl
inc
xchg
pop
and
jge
jge
retf
das
xchg
inc
out
jmp
or
in
call
gs
int3
push
out
je
aad
lea
dec
sti
jmp
mov
jge
dec
add
cmp
mov
add
pop
dec
sub
add
mov
fisubr
out
out
fs
pop
call
xor
mov
(bad)
mov
jge
nop
cmps
scas
add
je
cli
dec
sbb
jl
mov
sti
dec
or
add
mov
lahf
jb
pop
add
in
adc
scas
add
repnz
mov
sub
mov
das
aam
jl
push
fs
add
es
sub
idiv
mov
add
lods
push
push
or
xor
div
(bad)
mov
add
mov
add
lods
mov
jbe
or
mov
xor
push
mov
ficom
mov
xor
outs
lds
add
push
push
scas
(bad)
ror
ror
mov
fwait
mov
je
and
lods
add
scas
jne
mov
fbstp
dec
mov
add
je
and
mov
add
add
lods
add
int3
push
cmp
mov
inc
lea
adc
(bad)
lods
call
push
cmp
add
pop
(bad)
fld
sbb
add
int3
jecxz
inc
add
sbb
scas
add
add
adc
cli
inc
adc
ror
add
gs
and
sahf
add
add
lods
push
(bad)
call
call
jne
add
call
call
cmp
pop
add
(bad)
pop
xor
ins
cmp
fild
out
mov
fsubr
leave
call
pop
add
push
add
xchg
mov
sahf
add
lea
add
add
mov
add
and
movs
pop
jl
jp
add
dec
and
leave
mov
pusha
stc
call
inc
addr16
jmp
test
es
aaa
inc
int
jb
xchg
(bad)
lea
stos
push
call
outs
gs
push
dec
out
punpckhdq
clc
inc
add
lea
mov
stos
inc
lea
add
push
xor
movs
and
mov
add
daa
mov
push
cmps
add
hlt
out
aad
(bad)
out
outs
adc
dec
out
fs
fstp
out
push
inc
and
dec
push
push
sbb
add
push
sub
sti
xchg
mov
mov
adc
push
stos
add
sbb
sti
push
test
add
(bad)
mov
add
out
test
dec
jmp
xor
jae
pop
stos
add
test
jbe
aam
test
adc
data16
(bad)
fiadd
cmc
mov
add
mov
add
push
and
add
mov
add
loop
sti
add
add
sbb
aad
mov
fsub
add
scas
xchg
call
mov
or
add
sub
add
imul
sbb
iret
out
lea
out
add
mov
lods
xchg
out
and
nop
add
add
xchg
sub
cmps
fnstenv
add
mov
mov
or
add
mov
jp
add
movs
jne
mov
(bad)
fimul
add
push
xor
and
push
gs
mov
or
add
mov
(bad)
call
call
xor
add
scas
add
scas
mul
enter
pop
pushf
adc
in
dec
jge
mov
and
mul
movs
and
scas
add
mov
jae
push
scas
add
(bad)
es
and
(bad)
out
(bad)
jmp
push
repz
adc
push
scas
add
inc
dec
sti
push
scas
add
xchg
adc
mov
add
jae
ret
add
sti
pop
nop
adc
and
test
add
push
ins
and
sbb
and
inc
loopne
cmp
lods
mov
mov
mov
jl
retf
inc
mov
push
out
mov
or
mov
or
mov
or
lea
add
adc
add
add
add
stos
add
sti
(bad)
(bad)
inc
jecxz
adc
ds
mov
add
es
aam
or
sbb
and
test
add
xor
outs
mov
add
push
mov
out
lea
pop
add
lods
push
push
push
sub
out
add
sub
xlat
lods
add
add
add
add
outs
or
fs
sbb
and
test
pop
(bad)
xchg
sub
push
mov
add
and
popa
inc
xor
cmp
and
out
and
lods
add
push
inc
or
sbb
cli
test
sub
je
mov
and
stos
(bad)
pop
xor
sub
out
lea
pop
add
lods
push
push
push
and
add
and
add
outs
push
hlt
sti
xchg
and
lods
add
pop
es
out
mov
mov
mov
mov
out
sub
imul
push
lods
add
xor
add
add
data16
ficom
or
push
mov
jp
sti
add
adc
lods
add
movs
aaa
sti
dec
lds
lea
or
fdiv
sti
jmp
pop
adc
xlat
stos
add
push
scas
add
stos
or
shl
call
adc
jle
aam
sbb
xchg
in
adc
add
adc
add
inc
mov
or
xor
ds
retf
sti
inc
and
add
or
rcr
xchg
and
out
pop
and
pop
adc
daa
stos
add
xor
sti
dec
idiv
jmp
inc
add
popf
adc
xchg
pop
adc
out
add
push
cmp
jge
add
jp
add
out
aam
lea
inc
push
push
pop
adc
(bad)
stos
add
js
sti
(bad)
jmp
mov
enter
inc
push
xor
lods
xchg
stos
add
fdivr
sti
(bad)
mov
stos
add
and
add
movs
mov
call
mov
and
outs
adc
add
push
stos
add
mov
adc
daa
stos
add
scas
jne
(bad)
mov
and
add
pop
xlat
fld
pop
into
scas
add
test
sti
jmp
and
inc
aam
adc
xor
adc
cmps
test
(bad)
sti
mov
test
add
je
je
add
pop
jl
outs
add
inc
and
jge
jp
add
push
sbb
sbb
jge
enter
call
test
add
sbb
aam
inc
push
push
xchg
jge
lods
out
add
push
and
inc
mov
xor
mov
add
int3
sti
popa
pop
add
add
add
add
mov
movs
and
mov
add
cmp
push
xor
and
mov
add
cmp
sti
inc
mov
mov
or
add
push
jno
movs
and
mov
add
psrlq
adc
je
loop
add
xchg
and
scas
add
jbe
xor
or
out
add
pop
mov
cmps
mov
imul
mov
jge
mov
ficomp
dec
out
mov
or
cmp
or
nop
in
inc
mov
add
pop
test
lea
adc
sub
push
push
ds
add
movs
and
mov
add
rcl
sti
add
and
movs
and
mov
add
loopne
sti
add
xor
push
cmp
mov
add
std
call
scas
add
mov
xchg
out
xor
dec
popf
sti
cld
mov
pushf
mov
gs
clc
jnp
scas
push
mov
div
fsubr
xchg
scas
add
aad
mov
add
add
add
lahf
inc
push
imul
mov
cmp
add
add
data16
dec
or
mov
adc
ins
mov
pusha
rsm
add
mov
adc
push
aas
(bad)
xchg
lahf
mov
(bad)
(bad)
sti
mov
cs
jmp
imul
clc
inc
mov
(bad)
lods
add
add
test
lods
add
(bad)
(bad)
cmps
lods
call
and
or
add
mov
(bad)
mov
push
jne
xor
and
xchg
ins
neg
inc
out
push
int3
lods
jge
mov
and
sbb
(bad)
xchg
and
int
sub
mov
cmp
jnp
daa
xor
scas
jp
sti
mov
inc
xor
xchg
icebp
mov
cwde
sub
add
ds
sti
mov
or
and
sbb
sbb
mov
call
inc
out
adc
bndstx
add
sub
loop
push
std
mov
fimul
xchg
add
idiv
data16
push
mov
or
test
add
es
jne
sub
lea
lods
push
xor
movs
and
lods
add
scas
std
fsincos
push
xchg
out
lea
add
stos
push
(bad)
pop
or
add
stos
add
ins
sbb
inc
or
add
add
sbb
jmp
inc
jge
retf
add
movs
and
mov
add
or
sti
inc
hlt
jae
xchg
mov
add
dec
and
leave
out
dec
test
push
stos
add
not
sti
call
xor
add
lds
mov
repz
shl
jmp
add
push
cmp
and
mov
add
addr16
and
cs
and
sub
shl
popf
cmp
pop
mov
add
je
cli
xchg
fbstp
pop
aad
mov
aad
(bad)
ret
lea
aad
call
(bad)
inc
add
add
add
lds
adc
(bad)
mov
jge
cmp
(bad)
jmp
inc
(bad)
iret
lea
mov
(bad)
sub
and
stos
add
ss
mov
jp
add
(bad)
mov
dec
xchg
aaa
out
lea
into
cli
add
test
adc
cmps
test
adc
xchg
test
in
sti
xchg
cmp
sub
and
add
add
scas
gs
push
sub
mov
lea
aad
call
mov
mov
dec
test
call
and
sbb
sbb
inc
push
mov
adc
push
mov
(bad)
call
out
out
cli
push
adc
dec
ror
sti
xchg
fs
and
add
cmp
popf
ds
shr
call
mov
lea
aad
add
aad
add
aad
push
scas
push
out
sti
push
arpl
scas
add
xchg
push
(bad)
jmp
call
int
adc
mov
mov
push
lods
movs
adc
xchg
jae
add
xchg
mov
les
push
(bad)
fcmove
dec
call
or
call
push
cmc
bound
outs
xchg
mov
and
inc
sub
jge
out
je
neg
mov
jmp
(bad)
call
xor
rol
add
add
mov
sti
(bad)
jns
jge
jp
add
push
inc
or
sbb
test
es
add
xor
dec
xor
xor
outs
mov
pop
jl
jne
call
push
lds
dec
adc
sti
mov
inc
pop
mul
push
mov
push
sub
sub
fiadd
fdivr
mov
mov
inc
lea
retf
xchg
scas
push
(bad)
jmp
call
lahf
nop
xor
jns
add
add
sti
dec
retf
es
call
push
setae
jmp
test
out
mov
jl
pop
test
add
pusha
std
inc
add
lods
add
nop
pop
mov
push
add
lods
xor
ds
mov
movs
mov
and
(bad)
jp
fisubr
add
imul
fsubr
dec
cwde
mov
xor
call
push
mov
lea
cdq
mov
fmulp
and
out
lea
add
pop
push
lahf
pop
adc
push
lods
add
imul
test
jae
pop
test
int3
aad
xor
and
jmp
in
test
popf
xor
inc
aad
add
and
dec
mov
inc
cmps
pop
fs
inc
test
popf
xor
add
lahf
push
jbe
data16
mov
jp
(bad)
call
call
push
sar
pushf
push
lods
add
stos
enter
lods
hlt
out
pop
sti
call
pusha
xor
jle
jge
jp
add
push
pushf
mov
arpl
adc
(bad)
stos
add
xchg
sub
jge
add
mov
jmp
jmp
xor
ds
xchg
mov
dec
jle
in
mov
jge
mov
xchg
and
inc
sub
adc
or
mov
adc
es
add
(bad)
fdivr
and
clc
in
sub
push
push
add
pop
neg
pushf
jge
mov
ficom
xor
and
bound
(bad)
xchg
nop
mov
inc
(bad)
pop
int
add
stos
mul
push
adc
push
pop
xor
retf
aam
xor
cmps
gs
in
jae
into
stos
add
xchg
inc
mov
inc
jp
sub
push
stc
add
test
sar
call
jg
cs
mov
cdq
out
jne
gs
and
in
jae
fisubr
out
mov
mov
sti
call
adc
dec
xchg
aam
mov
inc
(bad)
mov
inc
dec
in
xor
je
int
leave
mov
out
mov
loope
mov
add
(bad)
scas
add
test
dec
pop
cmp
mov
mov
call
fstp
cld
outs
ins
clc
inc
push
movs
nop
adc
out
mov
pop
lea
es
call
aad
jge
ss
(bad)
fldenv
in
call
add
pop
mov
add
dec
sbb
dec
push
jmp
pop
pusha
call
ins
call
pop
sub
es
call
in
add
sbb
(bad)
mov
nop
out
inc
mov
inc
fcmovnu
and
movs
and
and
sti
inc
out
xor
add
and
and
test
xor
push
and
lea
xor
pop
fwait
mov
out
add
fwait
mov
mov
lods
jge
out
out
call
and
mov
call
sub
ins
(bad)
xchg
xor
call
into
repz
add
jge
inc
xor
mov
xor
push
lods
pop
and
out
call
outs
mov
gs
ins
in
or
cmp
mov
mov
sbb
push
mov
push
lock
in
inc
xor
fmul
cmp
add
mov
ds
xor
cmps
mov
lea
push
retf
ins
es
(bad)
jmp
or
cmps
scas
mov
adc
(bad)
push
xor
push
and
fdivrp
and
lock
out
mov
retf
and
pusha
loopne
out
mov
push
movs
clc
add
out
mov
ss
lea
mov
add
add
add
sahf
and
jo
push
xor
jmp
fs
mov
das
out
push
jge
(bad)
mov
daa
out
test
jp
call
inc
push
gs
pop
leave
sti
mov
cld
mov
pop
pop
idiv
lods
push
mov
outs
add
adc
xor
add
add
add
add
xor
jge
stos
mov
out
(bad)
jle
clc
inc
push
popf
mov
mov
es
sbb
mov
(bad)
push
jge
mov
dec
pushf
std
inc
xor
or
xor
pop
out
mov
lea
movs
out
jmp
cwde
in
adc
leave
sti
cmp
jge
xor
out
inc
add
leave
sti
mov
cwde
out
jmp
xor
shl
inc
call
(bad)
stos
and
cmp
cmps
add
mov
jl
xor
call
test
add
fwait
sbb
jmp
and
xor
push
push
ins
inc
call
add
add
add
add
aaa
xor
cdq
xchg
call
dec
xchg
les
sub
push
addr16
xor
fisubr
ja
out
(bad)
(bad)
lea
ins
out
jmp
mov
(bad)
fwait
sub
sti
call
gs
addr16
pop
xor
jbe
jne
and
out
push
sbb
repnz
push
out
add
mov
add
lods
jnp
mov
add
sub
call
repnz
clc
push
push
cmp
rol
gs
enter
push
xor
jmp
push
out
push
stc
cmp
out
call
add
sub
(bad)
jle
enter
inc
(bad)
jmp
out
call
movs
enter
add
add
add
add
mov
inc
mov
add
dec
in
mov
(bad)
call
out
push
out
call
das
ins
in
loopne
xor
cmp
iret
sti
xchg
les
mov
dec
aas
(bad)
fstp
dec
mov
out
gs
and
es
push
arpl
(bad)
xor
inc
lea
xchg
out
jmp
adc
add
lea
push
push
std
(bad)
push
in
mov
mov
push
out
push
cld
mov
inc
mov
push
out
xor
jnp
ss
dec
sbb
je
stos
and
mov
and
shr
sub
jecxz
out
psubusw
cmp
aad
punpckhwd
lea
inc
shl
cs
push
xchg
sub
inc
add
in
dec
cwde
in
repnz
mov
pop
jge
dec
stc
jnp
xchg
push
addr16
ror
cs
add
dec
sti
push
cmc
jnp
bound
out
jmp
stc
inc
lea
in
in
inc
xor
(bad)
or
(bad)
jnp
add
call
(bad)
adc
mov
shl
sub
add
call
push
and
(bad)
fist
call
xor
das
out
dec
mov
xchg
stc
inc
lea
in
jmp
inc
pop
(bad)
lea
out
jmp
nop
jge
xchg
jne
xchg
push
out
call
add
add
add
bound
call
push
sub
jge
out
stc
jnp
or
(bad)
cmp
cmp
sar
test
push
rcl
jmp
push
call
(bad)
pop
sub
jmp
push
(bad)
mov
out
jmp
push
mov
push
mov
add
push
imul
ret
xor
add
(bad)
call
or
dec
inc
(bad)
(bad)
lea
jmp
(bad)
imul
cmp
out
call
fxam
repnz
cmp
and
cmp
out
call
mov
aad
call
call
jg
add
cmps
push
out
(bad)
(bad)
cli
ret
imul
fimul
inc
out
xor
sbb
not
aad
(bad)
sbb
call
xor
call
jmp
cld
lods
push
xor
call
(bad)
fist
add
in
ret
or
inc
push
mov
add
inc
stos
call
(bad)
(bad)
xchg
and
test
out
jmp
mov
jge
test
add
jle
out
and
pop
call
mov
clc
sbb
out
call
pusha
mov
mov
es
pop
lods
add
and
add
add
add
add
push
adc
mov
push
push
gs
inc
mov
push
out
xor
push
(bad)
and
cmps
sub
push
mov
push
out
(bad)
out
xor
add
xlat
stos
call
(bad)
repnz
lods
add
fwait
pop
add
push
les
add
sub
cld
jns
inc
int
push
push
mov
out
jmp
inc
inc
int
push
jge
dec
cld
mov
push
adc
add
push
out
call
repnz
icebp
push
push
and
fcmovnb
fwait
push
sub
hlt
ins
sti
call
inc
push
movs
cmp
push
out
call
add
add
add
jl
sti
(bad)
jns
dec
inc
cld
(bad)
std
push
inc
push
es
test
sti
mov
stos
add
gs
add
dec
fiadd
(bad)
stos
mov
pop
sub
(bad)
mov
push
out
dec
pusha
(bad)
xchg
push
jge
cs
jnp
outs
push
out
inc
es
xchg
push
out
push
jle
sar
add
mov
push
out
mov
js
dec
push
je
jno
jge
push
stos
push
jecxz
ins
(bad)
and
xor
and
ins
(bad)
adc
add
stos
call
cmp
inc
jbe
xor
(bad)
jmp
out
call
push
into
dec
push
push
jae
mov
in
repnz
jne
sti
add
mov
in
repnz
outs
icebp
mov
push
mov
out
jmp
push
mov
mov
adc
dec
pop
test
dec
pop
out
leave
cmp
scas
add
or
call
lea
loop
(bad)
icebp
dec
out
push
xor
cwde
add
ja
fucomi
or
sti
dec
inc
jge
outs
loope
inc
movs
dec
out
mov
in
jmp
inc
out
xor
in
jmp
inc
out
call
inc
out
push
sbb
(bad)
mov
inc
out
call
xor
(bad)
mov
inc
out
(bad)
ds
sar
inc
sbb
mov
add
add
add
push
mov
(bad)
fcmovne
in
jmp
pop
lds
and
clc
mov
call
xchg
ins
or
xchg
sbb
xchg
inc
mov
mov
dec
out
mov
jnp
xchg
inc
out
(bad)
mov
fbstp
xchg
dec
out
sbb
repz
dec
sbb
inc
push
call
add
add
test
call
inc
push
push
xor
inc
mov
inc
mul
xchg
outs
sti
inc
cdq
out
call
pop
adc
or
inc
out
(bad)
out
and
sti
adc
out
call
paddb
call
mov
sti
call
inc
push
mov
sbb
call
add
shr
jmp
inc
mov
jle
idiv
sub
inc
xchg
push
jnp
xchg
inc
and
push
mov
pop
call
cmp
in
jne
push
aam
adc
pop
mov
and
sti
loope
xor
add
add
add
add
(bad)
idiv
add
and
and
push
push
cmp
xchg
scas
push
mov
jp
pop
pushf
inc
out
cmp
in
jne
push
xchg
pop
nop
inc
pop
pop
mov
in
sti
popa
aaa
xor
cld
sub
inc
xchg
push
sti
add
aas
and
push
mov
add
pop
call
cmp
in
jne
push
push
pop
adc
pop
mov
mov
xor
cld
add
jl
xchg
mov
pop
add
push
ss
or
or
les
mov
shr
inc
call
ror
add
mov
jmp
out
dec
xchg
mov
inc
cmp
fcomp
jmp
fxch
sti
mov
jne
(bad)
fwait
inc
add
js
sti
inc
imul
sbb
repz
fistp
lea
inc
out
mov
push
fcom
mov
sar
mov
add
call
mov
aas
jmp
gs
add
repnz
inc
aas
inc
(bad)
ins
push
arpl
ret
push
pop
mov
xlat
xchg
inc
out
and
mov
(bad)
pop
ret
push
push
das
js
add
pop
sbb
mov
sbb
cmp
add
push
xor
add
xor
add
add
add
jecxz
call
push
call
movs
jne
push
jl
jge
retf
ror
mov
add
cmp
mul
push
jne
inc
gs
inc
out
mov
jmp
movs
push
jge
es
(bad)
fist
push
push
add
add
stos
out
jne
xor
jne
cmp
jmp
test
fidivr
push
jbe
ficom
stos
add
add
add
movs
mov
mov
jecxz
inc
sub
cmp
fldln2
adc
pop
cmc
stos
mov
cli
imul
add
add
add
add
(bad)
idiv
jge
mov
mov
xor
cmps
data16
add
add
call
gs
jle
mov
mov
push
add
push
imul
int3
mov
dec
add
aas
mov
inc
ins
or
push
lea
(bad)
retf
aas
pop
mov
add
inc
cmp
call
jne
dec
stos
call
lea
pop
call
mov
call
jmp
mov
push
push
push
inc
gs
pusha
scas
sti
add
jmp
cmp
scas
ja
std
mov
add
sar
xor
inc
dec
ror
jno
adc
mov
mov
retf
mov
cmp
out
push
jl
jge
retf
cld
adc
jl
std
cmp
inc
cli
addr16
mov
jo
pop
cs
inc
out
cmc
addr16
push
xor
dec
(bad)
add
retf
cld
cli
dec
call
add
add
add
add
push
out
ret
(bad)
sub
add
scas
call
mov
ret
mov
loope
mov
xor
inc
inc
ins
mov
imul
inc
jmp
iret
or
cs
jmp
push
out
ins
sti
jmp
scas
add
jle
lea
in
inc
add
push
push
lea
pop
mov
popa
mov
mov
hlt
repnz
fcomp
(bad)
mov
les
(bad)
jmp
(bad)
mov
data16
lea
pop
jmp
(bad)
(bad)
ins
push
push
out
mov
fisttp
add
add
add
add
ds
(bad)
and
inc
push
cbw
mov
daa
sub
scas
sti
mov
mov
std
mov
das
aam
sub
push
arpl
scas
add
(bad)
fld
push
pop
jmp
push
jmp
cmps
lods
push
jle
aad
add
adc
add
push
mov
cmp
sub
aad
push
cmc
cmp
retf
xor
xor
out
cmps
mov
mov
jmp
movs
pop
sti
dec
dec
or
loope
cmc
push
jge
cmp
fdivp
fist
mov
(bad)
pop
adc
add
scas
jo
sti
push
jecxz
imul
call
add
sti
(bad)
mov
aas
fs
popa
rol
push
mov
test
fimul
add
cmp
sti
(bad)
cld
lods
push
fldcw
pop
mov
fidiv
scas
cmp
sar
mov
and
push
int
mov
cmp
cli
jmp
lods
call
push
add
out
(bad)
push
stos
aas
inc
es
dec
and
popa
cmp
call
sbb
sub
sti
jmp
push
mov
cmps
add
out
xor
popf
push
push
in
stos
mov
push
lock
jmp
cmc
jmp
daa
fisttp
mov
fmul
pop
add
pop
stos
add
dec
cdq
mov
and
imul
ins
add
ret
call
jle
in
es
fs
arpl
(bad)
std
push
mov
jbe
mov
pop
push
stos
add
inc
imul
mov
test
mov
fsubp
push
dec
out
push
push
mov
mov
add
xchg
ds
sbb
out
call
dec
out
push
loopne
(bad)
xchg
push
inc
inc
xchg
inc
dec
and
popa
movs
mov
sub
test
sti
(bad)
(bad)
adc
and
shl
bound
or
test
add
xchg
xor
lahf
out
pusha
(bad)
sub
add
fisubr
call
mov
(bad)
sbb
add
ds
mov
mov
push
mov
loop
pusha
call
push
jb
inc
cmps
inc
fs
popa
sub
popf
push
mov
inc
inc
mov
or
add
inc
outs
sti
dec
mov
add
mov
push
call
add
add
add
add
rcr
sbb
dec
xor
sar
ret
sti
mov
jbe
inc
cmp
add
push
mov
fistp
out
push
(bad)
(bad)
out
push
inc
(bad)
aaa
dec
and
pop
call
clc
mov
test
sti
jmp
sbb
mov
add
pop
pushf
lds
add
scas
mov
je
cmp
pmuludq
pusha
or
cmc
call
(bad)
and
loopne
iret
sbb
sbb
add
inc
mov
add
imul
ins
add
test
or
jmp
mov
inc
push
inc
fs
push
dec
ret
dec
inc
mov
push
cmp
sldt
out
add
sbb
(bad)
in
scas
push
cdq
mov
dec
jmp
dec
cmp
cmp
sbb
jle
ret
sti
mov
test
add
call
push
aad
(bad)
add
and
pop
or
sbb
out
test
sti
inc
add
jp
and
mov
loopne
popf
push
push
mov
ret
outs
in
pusha
dec
pop
mov
neg
scas
jge
mov
inc
out
mov
mov
pop
in
sbb
add
mov
sti
xchg
aam
imul
lea
sbb
(bad)
mov
add
fs
push
nop
ret
mov
jbe
mov
adc
add
mov
(bad)
jl
push
fldcw
mov
fiadd
xchg
dec
xor
xchg
retf
ds
sti
inc
aaa
mov
ins
xor
out
call
push
sar
(bad)
(bad)
and
inc
cmps
cmp
add
push
push
mov
test
test
sti
dec
ja
and
test
add
add
cmp
lods
mov
jmp
pusha
out
mov
sti
loope
xchg
imul
jge
cmp
out
mov
loope
iret
jmp
lods
add
scas
dec
ret
sti
mov
add
jns
sub
in
test
add
(bad)
mov
aas
fs
pop
mov
popf
push
mov
div
dec
pop
xchg
lods
add
xor
(bad)
cld
lods
push
pop
mov
sub
mov
fidiv
sbb
add
enter
sbb
sti
adc
mov
cmp
push
add
add
call
push
(bad)
inc
push
push
pop
inc
push
xor
pop
je
lea
fsubr
cwde
sbb
xor
call
push
mov
mov
dec
ret
lea
add
stos
mov
xlat
cdq
xor
pop
lock
(bad)
neg
stos
jge
retf
sub
out
mov
add
add
pop
ins
stos
add
ds
sti
inc
enter
add
out
test
sbb
jmp
out
es
fs
inc
clc
sar
mov
xchg
mov
sbb
stos
add
mov
sti
jmp
push
test
stos
mov
fsubrp
(bad)
push
out
push
add
xor
sbb
outs
fs
es
sbb
not
add
push
out
push
enter
jmp
dec
and
dec
mov
sub
out
test
sti
(bad)
frstor
icebp
bound
ret
add
ins
ret
push
jl
mov
add
neg
pusha
add
(bad)
and
sti
mov
test
ficomp
push
out
mov
out
sbb
add
ds
add
in
test
(bad)
jmp
hlt
adc
dec
out
inc
xchg
sbb
and
inc
sbb
lea
mov
(bad)
pop
test
mov
call
int3
test
sbb
mov
ficomp
ficom
push
mov
pop
scas
sti
add
mov
lods
pop
mov
dec
cmc
push
add
mov
jecxz
push
out
push
ret
inc
out
or
dec
and
dec
fdiv
cdq
in
mov
lea
call
dec
addr16
mov
xor
loop
xchg
dec
mov
jge
push
cld
scas
mov
cmp
sbb
pop
cmps
sti
push
enter
test
call
mov
add
pop
xor
add
out
sar
imul
in
mul
lods
adc
mov
pop
mov
mov
add
test
add
movs
fs
int3
xchg
fs
aas
sbb
mov
push
inc
or
mov
mov
ret
adc
scas
add
fadd
mov
cmp
loopne
enter
retf
mov
fsub
aad
lock
jno
and
je
and
je
and
sub
add
sub
ss
test
or
xor
icebp
add
scas
add
das
rol
pop
cmc
sbb
jo
and
popf
adc
cmps
push
out
jmp
xor
add
sbb
daa
inc
and
pop
ret
push
outs
jne
jo
and
jno
and
pusha
ret
int3
add
shl
int3
mov
xor
fucomp
sbb
ins
outs
ins
adc
es
and
pop
fdiv
in
fadd
iret
jmp
popf
jmp
lods
cli
sbb
jbe
fisub
test
mov
mov
push
aad
mov
mov
sbb
icebp
mov
mov
not
jecxz
dec
add
ins
dec
adc
cli
sbb
sbb
inc
rcr
xchg
popf
jbe
hlt
mov
enter
sbb
pop
push
and
scas
shl
xchg
inc
and
(bad)
jno
xchg
xor
(bad)
(bad)
sub
test
sub
test
dec
(bad)
test
repnz
ret
mov
add
add
add
add
pop
mov
int3
push
pop
mov
xor
xor
retf
jge
jmp
in
mov
fcom
and
retf
and
and
sar
mov
in
cdq
jbe
fsub
and
and
cmps
shl
cmp
outs
and
shl
daa
and
stos
test
not
and
fmul
jp
add
pop
test
ror
jnp
or
(bad)
jmp
mov
dec
and
(bad)
add
mov
out
(bad)
cmp
mov
jbe
loope
ror
aas
jne
pop
(bad)
outs
sub
dec
ret
mov
add
add
add
add
mov
inc
mov
mov
dec
jp
mov
xor
dec
pop
mov
in
in
sbb
pop
mov
cmp
cmc
sbb
in
sbb
inc
rcr
idiv
rcr
sub
push
mov
cdq
int
sbb
mov
jb
(bad)
std
sbb
leave
mov
jge
sbb
stos
xor
pop
in
push
into
jmp
sbb
out
mov
push
xor
mov
rol
push
out
mov
or
xor
in
(bad)
dec
out
repz
jne
inc
adc
loop
pop
ret
popf
(bad)
sbb
add
shr
add
push
pop
int3
cld
xchg
adc
movs
push
out
mov
pop
jmp
mov
mov
lea
mov
xchg
enter
in
dec
jl
(bad)
inc
cmps
repz
push
retf
inc
rcr
dec
in
popa
call
mov
jg
repz
mov
mov
ins
add
call
lea
inc
cli
jmp
xor
or
jnp
xor
sbb
add
mov
call
mov
stos
repnz
jae
mov
xor
ds
cld
in
call
mov
outs
mov
popa
cmp
push
out
add
add
adc
add
jmp
mov
add
or
xor
out
jmp
call
mov
sar
loope
add
adc
out
lea
fsub
aad
add
mov
or
add
inc
ror
mov
in
call
repnz
add
imul
cmps
add
call
rol
shr
sar
sbb
cmp
inc
and
xor
sbb
sbb
pop
loopne
imul
sar
in
push
jl
jmp
fstp
or
add
cmc
xor
out
xor
cld
adc
dec
cld
push
imul
jbe
add
xor
jmp
cld
mov
push
cld
mov
xor
retf
sbb
mov
ins
imul
loop
in
call
ss
and
mov
jl
call
add
sbb
movs
repnz
mov
out
mov
sbb
cmp
das
mov
aas
pop
sbb
and
fs
jo
push
test
out
fdiv
add
push
sbb
sbb
xor
jmp
pop
pop
sbb
push
ins
add
add
dec
(bad)
cld
xchg
inc
lds
addr16
mov
push
and
jns
cmp
out
mov
or
xchg
lahf
add
ret
sbb
ins
add
scas
push
(bad)
push
dec
push
(bad)
fwait
mov
mov
push
out
mov
mov
or
lods
add
xchg
or
out
ret
popf
pop
sbb
add
mov
add
(bad)
xchg
fdivr
mov
lods
out
cmps
add
and
mov
or
lods
add
and
out
dec
push
out
ret
dec
pop
sbb
push
imul
(bad)
xor
jle
(bad)
or
and
sbb
or
out
lea
cmp
out
lea
add
loope
stc
pop
add
lea
add
lea
add
call
lea
add
lea
sbb
shr
add
lea
sbb
leave
jle
out
lea
sbb
shr
in
(bad)
retf
sbb
mov
sub
mov
(bad)
in
mov
(bad)
or
repnz
inc
add
repz
mov
add
enter
cld
xchg
inc
popa
nop
fld
in
mov
test
in
mov
test
sbb
sti
mov
xor
cld
and
fs
repz
jmp
popf
test
sbb
jmp
mov
mov
add
scas
jb
cld
add
mov
repz
add
stos
out
fdivp
in
mov
mov
add
aas
(bad)
sbb
mov
repz
cmps
stos
out
scas
imul
mov
mov
add
jg
sbb
mov
sub
out
push
add
fld
mov
call
jecxz
retf
ds
inc
add
ins
mov
jmp
sti
out
gs
lea
call
lea
call
mov
int
lea
mov
in
call
mov
xor
ds
cld
mov
stos
out
xor
call
lea
xor
xchg
mov
add
fsubp
mov
aad
lea
enter
in
(bad)
(bad)
pop
xchg
inc
data16
and
jnp
add
push
pop
loop
jnp
into
or
add
jnp
or
inc
pop
mov
test
dec
cwde
gs
bound
and
aas
(bad)
(bad)
inc
and
mov
mov
xchg
and
sar
ret
mov
and
sbb
add
fadd
ins
imul
(bad)
or
mov
add
sbb
inc
sti
push
inc
std
jnp
xchg
fsubrp
(bad)
aas
or
movs
js
std
in
jmp
mov
std
out
dec
hlt
in
lea
add
iret
call
std
mov
jge
jb
in
call
sub
inc
std
xor
dec
fadd
cld
mov
(bad)
out
xor
std
mov
call
sbb
std
and
cmps
scas
add
mov
repnz
(bad)
aas
jae
cld
inc
out
jnp
add
(bad)
repz
dec
add
adc
in
jmp
rol
adc
out
sub
in
lea
in
jmp
bnd
loop
in
jmp
sub
lods
push
repnz
jmp
jae
xchg
(bad)
mov
repnz
lea
out
jmp
bnd
ss
inc
add
add
sub
jmp
xor
mov
repnz
lea
push
in
inc
sti
adc
repnz
in
(bad)
aas
add
and
in
jmp
mov
repz
dec
repnz
lea
out
call
repz
repnz
in
jmp
add
movs
nop
inc
repz
jmp
ins
pop
sbb
arpl
pop
mov
jmp
fsubr
call
push
cmps
(bad)
xor
inc
inc
jne
call
xor
bnd
cmp
push
repz
imul
lea
icebp
in
(bad)
fild
imul
add
xrelease
jge
xor
mov
in
xor
add
mov
mov
in
dec
ret
out
dec
in
inc
bnd
mov
adc
jp
jge
shl
call
mov
lock
mov
(bad)
cld
mov
lods
out
xchg
lock
mov
add
and
mov
add
stos
push
call
ret
jecxz
scas
jmp
shl
jmp
popf
pop
sbb
shr
mov
enter
in
call
add
aad
icebp
mov
call
jae
mov
push
bnd
into
jmp
add
add
add
push
cwde
bnd
xchg
jmp
sbb
outs
add
mov
cld
xchg
xor
cdq
mov
in
lea
fucom
cmp
call
lea
out
mov
or
into
mov
call
popf
pop
repnz
add
mov
add
add
out
mov
std
and
add
gs
(bad)
ins
jl
jmp
movs
and
int3
aas
mov
inc
and
and
mov
aad
repnz
call
xor
mov
pop
call
out
jne
in
lea
add
in
lea
out
lea
call
(bad)
fist
inc
add
adc
repz
loop
in
(bad)
jmp
adc
mov
repz
jmp
arpl
out
vpaddsw
xchg
add
mov
repnz
jmp
adc
xchg
and
in
jmp
add
add
add
push
xchg
repnz
push
in
jmp
fsubr
(bad)
fstp
xor
cli
test
inc
out
ror
imul
out
in
push
mov
call
ins
jle
pop
mov
call
pop
sbb
xchg
jae
mov
sbb
enter
cld
add
inc
sbb
in
call
mov
aas
stos
jmp
aam
rcl
cld
xchg
sbb
sahf
and
sub
stc
sbb
dec
mov
fucomp
(bad)
faddp
add
(bad)
jmp
out
and
jnp
cli
neg
adc
in
jne
not
adc
in
jne
add
in
jne
test
jne
idiv
push
jp
jge
adc
dec
test
hlt
in
mov
xor
dec
loopne
cld
xchg
sub
sbb
in
mov
add
loopne
xchg
jp
cmps
scas
add
sub
out
mov
in
ret
sbb
outs
add
add
add
add
dec
or
sar
inc
sub
test
mov
in
out
mov
adc
adc
setp
push
call
jmp
cld
mov
cdq
jge
adc
dec
in
fld1
pop
mov
in
mov
dec
outs
call
nop
aas
mov
cld
add
mov
into
adc
xchg
adc
je
repnz
jmp
sub
outs
add
mov
fsubrp
(bad)
fst
push
test
enter
data16
in
push
mov
scas
jmp
popf
dec
sbb
mov
add
inc
sar
add
mov
lods
out
scas
repnz
(bad)
fcmovne
out
div
in
mov
mov
mov
mov
in
call
xchg
clc
mov
xchg
xrelease
das
loope
mov
std
call
lock
stc
mov
mov
adc
in
(bad)
retf
cmp
jns
icebp
in
lea
add
icebp
in
lea
icebp
in
lea
call
lea
icebp
in
lea
xor
in
lea
and
dec
pop
icebp
in
mov
mov
mov
mov
in
(bad)
(bad)
rol
jmp
cmp
push
adc
jnp
jp
push
adc
xchg
jge
add
xchg
adc
call
mov
enter
cld
push
and
xchg
fwait
mov
or
in
lea
lock
mov
or
push
mov
in
dec
sub
inc
push
repz
call
cmps
repz
jne
repz
mov
repz
adc
mov
jp
jge
loop
in
call
cmp
mov
fmul
cld
popa
and
xchg
jmp
out
jle
in
lea
out
jmp
jmp
mov
icebp
in
jmp
daa
inc
and
ds
or
daa
dec
inc
xor
dec
inc
sar
adc
icebp
xchg
fwait
mov
jns
in
in
lea
out
xlat
in
lea
add
xlat
in
lea
aaa
call
mov
dec
in
in
call
in
in
mov
dec
outs
fdivrp
xchg
cmp
mov
mov
mov
cld
xchg
cmp
pushf
jg
adc
cmp
cld
xchg
cmp
adc
mov
scas
adc
add
push
cmp
std
sti
inc
cmp
std
sti
adc
std
sti
and
std
sti
adc
in
jmp
xchg
push
jbe
idiv
xchg
jmp
xchg
push
mov
cmps
mov
sbb
jae
add
xchg
lahf
mov
call
cwde
inc
add
(bad)
enter
jmp
jne
leave
call
leave
xchg
setb
jnp
adc
in
jmp
and
(bad)
sti
inc
and
outs
and
or
and
adc
xor
ds
cld
and
dec
cld
and
in
in
mov
cmova
cld
mov
jle
sti
mov
add
and
or
arpl
xor
out
mov
call
pop
ins
out
enter
dec
ins
inc
mov
and
scas
and
sub
shr
mov
imul
mov
in
jmp
arpl
jmp
repz
jmp
arpl
add
add
add
add
jl
or
push
mov
enter
cld
add
dec
cld
in
call
mov
scas
cmc
(bad)
cld
mov
mov
xor
push
sar
push
pop
movs
add
out
push
mov
and
outs
mov
mov
jnp
shl
dec
lods
in
call
mov
add
shl
enter
cld
mov
test
in
lea
push
out
inc
stos
gs
mov
jnp
xor
mov
push
ret
adc
mov
lahf
mov
(bad)
mov
ret
mov
shl
mov
dec
shl
call
add
add
add
add
shl
enter
cld
mov
scas
out
mov
in
lea
sti
out
dec
(bad)
in
mov
mov
mov
mov
mov
dec
(bad)
sbb
inc
sar
call
jecxz
(bad)
shl
pop
scas
xlat
in
mov
mov
in
inc
add
in
repnz
in
mov
enter
cld
mov
lods
out
dec
shr
lea
jmp
or
mov
lahf
mov
dec
repnz
mov
mov
gs
cmp
in
inc
das
inc
cmps
cs
cmc
pushf
das
inc
xchg
in
mov
das
loope
add
push
sub
call
and
(bad)
or
test
mov
mov
(bad)
mov
les
xchg
sar
out
les
push
jp
jnp
loop
dec
aam
loope
push
mov
in
mov
aas
xchg
aad
mov
xor
aam
add
test
and
pop
inc
or
arpl
into
mov
popf
mov
dec
push
or
inc
sar
ret
or
sar
into
ret
jmp
ret
loop
adc
jnp
mov
sar
sub
in
(bad)
jmp
cld
sti
mov
shr
jmp
add
add
add
pop
mov
inc
out
repnz
in
lea
out
call
ror
inc
shl
jo
shr
xor
movs
int
ror
call
dec
sbb
inc
xchg
rol
push
shr
sar
or
data16
ror
inc
xor
dec
cwde
add
and
(bad)
in
mov
enter
cld
add
fstp
or
in
lea
jmp
dec
adc
in
mov
outs
dec
xchg
mov
call
cld
mov
xor
ds
mov
pushf
sbb
in
lea
out
inc
sar
jmp
add
add
add
add
cld
sti
mov
shr
jmp
rcr
out
ins
(bad)
in
lea
into
in
lea
shl
adc
jnp
ds
dec
sti
or
mov
shr
jmp
xchg
sbb
out
fst
in
lea
dec
out
inc
cmps
or
add
in
(bad)
aas
dec
cld
mov
pop
or
xchg
and
or
and
in
push
sbb
out
(bad)
aad
mov
aad
inc
mov
and
in
xor
fimul
ror
clc
and
(bad)
xchg
and
jecxz
add
mov
sar
push
call
call
aas
add
dec
call
push
mov
dec
shl
in
mov
jg
jecxz
xor
sti
xchg
xor
vpsubsw
psubd
or
jb
mov
pop
out
inc
add
mov
(bad)
fnstsw
xor
fdiv
retf
and
mov
call
shl
jmp
lods
jl
or
cmp
enter
cld
mov
jp
xor
lds
call
xor
jmp
dec
jl
or
jb
mov
add
add
enter
cld
mov
imul
stos
pop
(bad)
in
mov
scas
pop
jecxz
push
xor
xchg
sti
inc
xor
xchg
sti
adc
inc
and
ss
or
ja
xor
fisubr
adc
mov
jg
call
mov
fimul
mov
fdiv
or
add
fldcw
or
mov
jnp
shl
dec
mov
imul
dec
popf
(bad)
jb
xor
outs
jle
cld
xchg
xor
ins
add
in
jmp
outs
add
mov
imul
(bad)
fnsave
push
(bad)
add
sbb
ins
imul
data16
in
(bad)
(bad)
xor
std
add
push
scas
add
movs
dec
fdivrp
popf
ins
(bad)
call
aad
fs
push
pop
cld
mov
retf
pop
cld
mov
xor
or
je
xor
ret
mov
call
push
jne
jmp
and
in
push
std
js
mov
shr
jmp
add
add
add
add
mov
shr
xchg
stc
call
mov
retf
cld
adc
xchg
sahf
fwait
mov
jns
(bad)
fwait
add
in
lea
shr
mov
mov
jle
call
fsubrp
mov
sar
loope
ret
(bad)
shr
dec
shl
inc
add
mov
mov
call
mov
(bad)
mov
call
popa
inc
shr
sbb
out
lahf
shr
sub
out
pop
in
(bad)
(bad)
out
pop
shr
add
sahf
mov
pop
shr
out
or
sti
loope
je
adc
in
jmp
mov
stos
jmp
add
mov
shl
push
shr
retf
mov
inc
mov
inc
shr
scas
aam
leave
xchg
rol
movs
repz
mov
jg
loope
sub
in
jmp
xor
and
mov
xlat
in
(bad)
jecxz
in
inc
jmp
lea
add
in
(bad)
aas
shl
aam
stc
mov
mov
add
mov
test
icebp
mov
mov
mov
sub
add
inc
mov
leave
cld
xchg
push
dec
cld
aad
call
mov
jg
(bad)
cld
sub
add
add
add
add
sub
mov
sub
fs
aas
mov
inc
and
sub
jns
adc
leave
cld
and
xor
icebp
aad
lea
xlat
in
lea
out
(bad)
mov
dec
jle
call
add
push
dec
xchg
inc
(bad)
test
fbld
mov
cmc
sti
mov
psadbw
xchg
pop
je
cmp
add
add
and
mov
in
jmp
mov
in
inc
popw
and
in
(bad)
aas
and
sti
and
in
jmp
add
add
add
xchg
(bad)
add
in
lea
out
jmp
mov
in
jmp
hlt
push
pop
fwait
add
(bad)
sub
arpl
xor
mov
aam
ret
push
cld
sub
xchg
mov
in
lea
out
jmp
mov
or
mov
add
cmps
add
push
mov
jge
jmp
(bad)
adc
mov
or
inc
out
xor
cmps
stc
mov
imul
cli
fucomp
jmp
mov
call
mov
call
sbb
push
push
mov
xor
dec
loopne
cld
xchg
sbb
mov
add
add
add
inc
aam
(bad)
jmp
out
test
in
lea
cld
out
cwde
shr
lea
cld
out
test
in
lea
cld
out
cwde
shr
mov
dec
jle
call
in
inc
repnz
mov
mov
call
mov
or
push
shl
ret
in
lea
add
mov
jnp
repnz
(bad)
aas
or
jl
mov
or
push
ins
sub
or
call
leave
(bad)
xchg
shl
mov
in
lea
out
jmp
sar
mov
jnp
es
(bad)
aas
shl
sti
inc
sub
in
jmp
add
fstp
or
out
jmp
jle
call
popf
inc
repnz
movs
icebp
(bad)
mov
jne
call
xchg
ins
retf
or
call
sbb
push
ins
add
dec
fidiv
mov
inc
shr
lea
(bad)
adc
in
mov
mov
mov
or
add
add
mov
dec
mov
frstor
movs
mov
jne
movs
add
jnp
cli
movs
pop
add
fisub
jne
movs
dec
add
mov
in
dec
push
stos
sti
xchg
push
inc
and
add
mov
mov
inc
add
adc
fst
iret
in
jmp
cmc
sti
popa
add
shr
jmp
sub
lods
std
and
cmps
dec
cmps
in
jmp
aad
sti
inc
jmp
dec
mov
mov
jmp
shl
clc
(bad)
adc
out
add
sbb
in
lea
out
jmp
sar
mov
retf
ror
add
daa
std
jmp
stos
and
mov
ror
cmp
stos
add
dec
and
inc
rol
mov
sti
and
xchg
stos
add
add
sbb
out
inc
jp
inc
rol
mov
test
stos
add
stos
popf
in
call
mov
ror
test
es
add
jmp
out
jmp
rol
(bad)
retf
sbb
cmp
(bad)
in
lea
sbb
xor
(bad)
in
lea
out
jmp
add
jnp
mov
scas
hlt
sti
add
jmp
xor
jmp
adc
add
push
shl
std
gs
in
lea
(bad)
in
(bad)
fstp
jmp
shr
(bad)
push
add
add
in
jmp
popf
ins
cmps
add
inc
add
add
add
adc
cmps
mov
inc
shl
mov
ins
ins
cmps
and
mov
adc
(bad)
test
out
call
shr
jmp
push
push
mov
test
jp
xchg
test
in
(bad)
push
(bad)
jnp
xchg
(bad)
in
dec
add
and
mov
pop
test
add
std
adc
add
sbb
call
(bad)
in
lea
aad
ret
lods
cmp
and
xor
adc
push
mov
gs
stc
call
movs
les
in
jmp
xchg
cli
xor
out
jp
(bad)
mov
cmp
(bad)
jnp
stos
(bad)
(bad)
sahf
add
mov
add
test
mov
add
inc
in
lea
sbb
inc
out
and
ror
aam
lea
xchg
loop
adc
jnp
mov
fiadd
add
jnp
dec
(bad)
push
push
pop
mov
jmp
xor
inc
(bad)
aam
in
lea
add
out
call
lds
inc
xchg
xchg
add
jnp
(bad)
(bad)
in
(bad)
jg
add
add
add
xchg
add
push
scas
in
call
(bad)
xor
push
shl
jge
shr
(bad)
jmp
out
jmp
cdq
jb
adc
mov
mov
pop
push
scas
std
add
cmps
dec
cmps
jmp
shr
lea
add
out
jmp
rol
mov
adc
(bad)
scas
add
call
mov
adc
push
mov
mov
shr
ret
pop
ins
cmps
and
sar
adc
cmps
scas
jg
push
shr
xor
in
jmp
div
mov
mov
add
scas
add
add
add
add
mov
sar
(bad)
cdq
repnz
rol
mov
lods
add
ficomp
mov
shr
push
shl
shl
shr
ret
popf
ins
cmps
and
adc
adc
out
jg
push
shr
sti
inc
cmc
mov
jmp
movs
div
mov
lods
add
(bad)
cmp
add
std
in
jmp
shr
(bad)
jg
add
mov
xchg
jbe
mov
shr
(bad)
aas
inc
add
inc
add
aas
add
adc
movs
adc
shr
jmp
ror
imul
daa
shr
lea
out
jmp
sar
jb
in
jmp
add
shr
jmp
ins
pop
sbb
push
imul
pop
inc
in
jmp
out
in
dec
out
xor
cmp
adc
pusha
cmp
imul
mov
clc
push
jmp
(bad)
jmp
out
call
out
add
jnp
scas
shr
dec
add
adc
arpl
aas
xchg
add
add
and
arpl
jmp
jmp
add
add
arpl
xchg
push
mov
(bad)
dec
cs
mov
shr
jmp
mov
into
cmps
shr
mov
outs
or
cld
popa
push
xchg
shr
jmp
xor
dec
jmp
iret
in
lea
add
out
jmp
retf
jnp
cmp
outs
add
jnp
loop
data16
retf
jnp
into
enter
retf
jnp
(bad)
enter
retf
pop
retf
(bad)
std
xchg
sti
add
inc
and
push
add
mov
mov
dec
mov
inc
retf
mov
add
xor
dec
mov
stos
in
jmp
aam
inc
xchg
in
lea
mov
in
lea
mul
or
(bad)
add
in
(bad)
retf
xor
stc
inc
xchg
in
(bad)
(bad)
call
leave
sub
push
cmp
in
call
retf
xor
push
sahf
sar
add
mov
fucomp
xchg
in
lea
leave
adc
or
mov
jne
leave
mov
(bad)
retf
jnp
(bad)
retf
outs
add
sti
popa
sbb
out
sti
sbb
stc
jmp
and
out
sti
xchg
in
lea
aad
adc
out
add
inc
xchg
in
mov
mov
mov
and
in
xor
ret
adc
add
in
call
mov
push
(bad)
cld
mov
push
sti
push
and
sub
into
in
jmp
push
fcom
call
xchg
in
lea
jns
jmp
and
(bad)
into
jnp
add
mov
in
dec
and
(bad)
mov
call
sub
jmp
xchg
in
lea
ins
out
inc
out
cmp
(bad)
fdivrp
or
(bad)
(bad)
(bad)
sbb
into
in
(bad)
push
inc
and
and
mov
mov
inc
add
cld
mov
xor
dec
mov
and
sub
in
(bad)
jmp
out
pusha
xchg
in
lea
out
inc
int
mov
int3
in
(bad)
jg
out
sti
mov
xchg
in
jmp
jecxz
stos
jmp
repz
jmp
jecxz
in
and
in
lea
add
ror
xchg
jnp
xor
sti
xchg
sbb
or
xchg
in
jmp
lea
mov
mov
out
dec
push
int
and
mov
dec
test
cmps
shr
adc
(bad)
jg
out
sti
mov
add
nop
stc
jmp
aad
inc
out
inc
xchg
in
(bad)
jmp
out
call
rcr
or
rcl
sbb
xchg
in
(bad)
push
movs
inc
mov
int3
stc
push
xchg
out
mov
(bad)
mov
imul
mov
xchg
jnp
add
jbe
stos
std
popf
xchg
jnp
pop
nop
in
(bad)
jg
mov
mov
sti
jmp
mov
(bad)
in
jmp
adc
mov
adc
out
inc
data16
cmp
(bad)
in
(bad)
aas
inc
in
sti
and
movs
pushf
loopne
in
jmp
rcr
mov
push
mov
add
dec
mov
xchg
in
xor
xchg
add
in
call
mov
outs
pop
(bad)
and
jb
sti
and
in
jmp
and
xor
mov
xchg
in
(bad)
jmp
out
call
out
cld
dec
xchg
jnp
jmp
add
add
add
add
ret
or
xchg
in
(bad)
out
push
mov
jl
xchg
in
jmp
xchg
xlat
cld
(bad)
xchg
xchg
out
mov
sub
mov
xchg
jnp
rcl
in
sti
mov
xchg
in
jmp
dec
cmp
or
mov
mov
in
inc
add
jecxz
mov
nop
in
and
dec
mov
call
fisubr
inc
retw
inc
xchg
jnp
xchg
mov
mov
and
repnz
adc
in
jmp
xchg
sbb
jmp
mov
retf
xchg
stc
call
pop
cli
inc
add
push
xor
pop
inc
out
jmp
xchg
mov
jnp
loop
in
call
xchg
xor
mov
cld
xchg
rcl
stos
out
retf
(bad)
jmp
jmp
push
shr
dec
xchg
jnp
mov
in
dec
stc
sti
adc
stc
sti
and
in
jmp
add
add
add
push
(bad)
stc
call
sub
push
call
in
fs
(bad)
fdivrp
sti
mov
xchg
in
jmp
push
sbb
stc
call
retf
pop
cli
push
sbb
stc
call
ins
call
(bad)
in
lea
in
jmp
xchg
jnp
ficom
cli
sti
add
mov
(bad)
in
jmp
repz
jmp
jecxz
and
and
out
sbb
test
call
cdq
dec
sti
or
(bad)
in
dec
and
sti
xchg
xor
inc
mov
leave
stc
call
(bad)
out
dec
retf
imul
mov
(bad)
jnp
loop
in
inc
add
sti
sti
popa
xor
inc
xchg
(bad)
in
jmp
xor
sub
mov
leave
in
lea
cld
out
popf
leave
in
(bad)
jmp
in
call
out
cli
dec
lds
add
dec
cli
sti
adc
fs
cdq
cli
sti
and
movs
and
(bad)
in
jmp
sar
sub
add
out
cld
enter
test
inc
add
lds
jmp
dec
pop
(bad)
idiv
(bad)
xor
pop
sti
pop
(bad)
mov
leave
in
ret
push
sti
sub
xchg
(bad)
mov
in
lea
out
jmp
ret
jnp
loop
in
jmp
aaa
inc
and
ss
or
aaa
jge
inc
ret
xor
dec
loop
cld
add
adc
dec
clc
push
imul
xchg
(bad)
shl
add
adc
cld
add
in
jmp
mov
ret
dec
(bad)
in
(bad)
jmp
lods
call
cs
dec
ret
push
add
clc
sti
xchg
xor
or
in
jmp
dec
sbb
add
cmp
add
add
add
add
pop
in
call
cdq
adc
test
ins
imul
jbe
in
call
sub
out
aas
(bad)
in
(bad)
jmp
out
jmp
push
ficomp
shr
out
mov
lea
out
mov
in
lea
call
sub
in
lea
cmp
inc
mov
add
add
add
add
cwde
mov
(bad)
ret
jnp
outs
cdq
stc
lahf
popf
ret
jnp
mov
jnp
or
in
dec
xor
xor
stc
call
cli
jmp
(bad)
in
lea
ds
inc
data16
cmp
xchg
pop
stc
or
ret
out
push
stc
sti
adc
xor
add
call
(bad)
sti
add
fs
pop
stc
sti
xchg
xor
into
ret
stc
dec
ret
out
je
(bad)
lods
add
xchg
mov
sub
popf
ret
jmp
out
pop
in
lea
out
inc
ret
retf
inc
mov
mov
shr
into
xchg
or
add
add
add
add
mov
jge
call
(bad)
out
pushf
inc
xchg
out
shl
ror
push
call
and
xchg
xabort
rol
sbb
in
(bad)
jmp
out
jmp
sar
xchg
mov
jne
xchg
mov
(bad)
sar
xchg
stos
clc
popf
sar
add
mov
mov
shr
(bad)
fprem
sti
mov
cs
or
ss
jmp
shl
cld
xchg
test
in
mov
aas
cmp
cld
and
cwde
aas
cwde
mov
loopne
into
cwde
aas
push
xor
in
lea
iret
out
mov
call
add
add
add
add
iret
out
dec
mov
(bad)
retf
cs
lea
iret
out
mov
call
(bad)
jmp
out
mov
call
lea
into
out
mov
call
lea
aad
add
in
(bad)
retf
xor
in
lea
mov
lea
add
mov
lea
out
sbb
call
lea
into
out
cdq
mov
lea
cs
lea
into
out
pop
mov
(bad)
retf
sub
in
lea
into
out
cdq
mov
lea
cs
(bad)
jmp
out
cdq
mov
lea
cs
lea
into
out
add
cdq
mov
lea
cs
lea
aad
sbb
call
lea
mov
lea
mov
mov
xor
mov
call
mov
enter
cld
mov
mov
push
mov
mov
test
add
add
add
(bad)
in
(bad)
aas
and
mov
jecxz
or
jecxz
mov
mov
dec
clc
aad
call
mov
scas
pop
mov
aam
inc
nop
sti
inc
jecxz
pop
and
stc
push
mov
in
lea
(bad)
dec
xchg
add
std
mov
in
(bad)
jmp
sti
mov
mov
out
jmp
dec
inc
out
test
in
lea
in
call
mov
jge
shl
mov
nop
mov
movs
mov
mov
mov
dec
lahf
inc
xchg
rol
shr
add
jnp
faddp
data16
mov
(bad)
aas
inc
in
and
in
jmp
rol
inc
mov
push
test
in
lea
out
jmp
mov
mov
mov
(bad)
aas
jb
sti
inc
sub
inc
inc
mov
jmp
arpl
sar
xor
and
add
lods
in
inc
mov
mov
mov
(bad)
jg
in
mov
mov
jmp
rol
out
sub
out
jmp
shr
sbb
data16
repnz
in
call
mov
enter
cld
xchg
das
ror
loope
add
mov
jne
call
jae
retf
(bad)
arpl
out
imul
mov
or
call
lea
mul
xchg
fwait
mov
mov
dec
dec
mov
call
mov
xor
dec
das
mov
or
inc
in
add
and
stos
and
in
jmp
sar
retf
mov
dec
(bad)
xchg
mov
dec
mov
in
jmp
mov
mov
mov
dec
in
mov
mov
jmp
push
clc
dec
(bad)
popa
mov
and
imul
cmc
jge
jnp
sahf
mov
inc
add
in
mov
mov
jmp
rcr
sar
inc
mov
data16
mov
(bad)
jecxz
jmp
and
pop
nop
sbb
scas
in
(bad)
call
xchg
add
jnp
add
stc
call
outs
add
mov
imul
call
repnz
mov
and
add
imul
bound
(bad)
call
and
xchg
jmp
xor
scas
jmp
and
retf
mov
sbb
adc
mov
mov
mov
test
in
lea
scas
in
lea
out
sbb
out
stos
scas
in
mov
add
mov
jbe
call
fmulp
scas
inc
out
ds
inc
mov
jne
shl
cmp
rcr
lea
push
hlt
popf
mov
jne
ror
lea
jge
xchg
fisttp
aad
call
mov
scas
push
ret
in
fdivr
scas
icebp
sti
add
inc
in
mov
adc
arpl
and
arpl
fild
in
or
and
out
rcr
xchg
mov
sub
call
xchg
cmc
xchg
(bad)
push
mov
icebp
sbb
in
lea
out
jmp
mov
test
in
call
dec
pop
pop
idiv
cmps
es
pushf
add
xor
(bad)
mov
scas
in
ret
xor
push
(bad)
mov
scas
in
lea
xor
inc
jp
cmp
cmps
in
(bad)
aas
aaa
repz
and
mov
jmp
mov
cmps
out
mov
in
mov
push
mov
gs
call
mov
add
stos
cld
inc
jmp
out
popf
movs
in
lea
(bad)
out
gs
in
mov
jge
mov
mov
cmp
ds
push
retf
mov
mov
repnz
movs
mov
jge
push
(bad)
gs
call
mov
aas
test
arpl
add
out
nop
repnz
adc
inc
and
jecxz
or
sbb
xor
mov
mov
movs
mov
call
xchg
and
jmp
push
and
(bad)
xlat
stc
jmp
sbb
arpl
mov
xor
outs
pushf
mov
popa
(bad)
aad
call
mov
(bad)
ror
cld
xchg
loope
js
mov
jmp
add
add
add
stc
out
stc
dec
mov
adc
add
or
(bad)
in
cmp
jmp
and
sbb
sti
loope
mov
jmp
lods
sbb
add
mov
add
dec
mov
mov
call
arpl
jmp
add
add
add
sar
or
add
jle
mov
adc
call
mov
scas
dec
enter
mov
jmp
repz
stc
jmp
std
sub
and
in
lea
mov
jnp
sbb
out
sti
add
xchg
aad
aam
xchg
out
sti
mov
out
out
sti
push
aad
call
inc
stc
call
and
xchg
mov
lods
xchg
cmps
in
mov
jp
mov
mov
aad
call
mov
mov
enter
cld
mov
mov
xchg
iret
movs
in
mov
bound
push
lods
add
add
add
add
mov
mov
in
ret
shr
scas
jmp
mov
mov
scas
jmp
mov
mov
sbb
xchg
imul
sbb
xor
or
mov
lods
out
lahf
movs
in
lea
mov
sub
in
(bad)
jmp
out
xchg
cmps
in
lea
out
inc
add
mov
mov
mov
(bad)
jg
icebp
sti
mov
mov
jmp
shl
enter
out
movs
in
(bad)
fstp
jmp
mov
(bad)
call
mov
jmp
mov
mov
leave
cmps
movs
in
(bad)
jmp
in
call
scas
lock
dec
mov
mov
scas
in
dec
lock
xchg
fbld
jmp
dec
or
or
outs
add
cmp
call
mov
mov
stos
mov
jmp
rcl
mov
call
aam
jmp
(bad)
adc
shr
cld
mov
(bad)
sub
dec
mov
mov
gs
lods
in
mov
cs
add
das
adc
push
stos
and
inc
stos
in
jmp
movs
cmp
aam
or
jge
pusha
stos
in
jmp
push
aam
jmp
sub
stos
and
xchg
stos
add
add
add
add
sti
retf
push
lods
jnp
outs
stos
in
dec
mov
and
test
stos
in
jmp
dec
cli
push
fcmovb
add
push
das
xchg
pusha
adc
(bad)
inc
stos
out
icebp
push
out
ret
popf
and
and
push
stos
add
inc
push
jge
inc
lods
in
dec
(bad)
xchg
outs
jge
dec
test
add
popf
stos
jnp
cli
stos
in
(bad)
jg
(bad)
cmp
jge
xchg
stos
in
jmp
or
out
cld
mov
ins
in
inc
enter
repnz
in
jecxz
xor
inc
mov
stos
in
add
push
bnd
pop
sti
push
and
jmp
add
push
out
(bad)
jmp
in
call
sub
dec
scas
jnp
pop
dec
and
cmp
dec
sbb
lea
jnp
shl
mov
scas
in
xor
daa
mov
scas
mov
jmp
xor
(bad)
mov
scas
in
lea
mov
inc
clc
out
cmp
scas
in
inc
add
pop
fdivr
and
movs
inc
and
sti
call
lods
and
push
mov
or
out
jmp
scas
in
jmp
imul
dec
adc
movs
sub
pop
sti
call
cmp
popa
lods
out
adc
dec
shr
inc
add
mov
jnp
ret
dec
push
xor
ds
lahf
cld
inc
das
mov
in
out
xor
inc
jg
adc
mov
in
jmp
rcl
sub
inc
sti
call
aam
jmp
xchg
adc
call
push
out
(bad)
jmp
in
jmp
push
jge
bound
out
add
cmp
push
out
(bad)
aas
sbb
mov
mov
sti
popa
es
and
cmp
out
mov
in
jmp
add
dec
movs
inc
xchg
inc
add
mov
inc
pop
mov
mov
jnp
push
daa
dec
enter
or
push
out
mov
out
pop
mov
adc
add
jmp
xchg
aad
jmp
mov
jmp
push
out
lea
xor
lahf
add
mov
mov
lea
mov
aad
faddp
xor
mov
xor
jle
pushf
cld
adc
out
pop
push
out
lea
(bad)
jmp
lea
xor
out
lea
add
shr
inc
js
cmp
mov
mov
out
xor
inc
sub
lahf
enter
icebp
(bad)
mov
inc
pusha
lds
inc
dec
in
popf
push
jge
dec
inc
inc
in
dec
push
mov
jnp
repnz
fimul
scas
in
mov
xor
outs
in
cld
add
popa
adc
mov
pop
lods
in
lea
sbb
adc
sbb
or
dec
test
lea
dec
add
repnz
in
out
xor
inc
jmp
into
out
jmp
rcl
push
adc
fnsave
cmp
aad
push
out
lea
adc
int
push
out
lea
add
js
lds
mov
lea
mov
in
fmulp
add
mov
xor
outs
push
mov
jmp
out
pop
push
out
jmp
sbb
shl
out
pop
gs
jae
lea
jne
inc
je
popf
push
jge
push
inc
ins
in
dec
push
jge
inc
in
cmp
inc
pop
in
add
or
inc
push
in
sbb
inc
dec
in
or
inc
inc
in
std
push
jge
dec
inc
cmp
lea
jne
inc
xor
popf
push
jge
push
inc
sub
dec
push
jge
inc
in
cmp
inc
sbb
lea
jne
inc
adc
popf
push
jge
dec
inc
or
lea
jne
inc
add
jge
jge
add
dec
inc
cld
jmp
push
jge
fiadd
jmp
push
jge
push
inc
in
jmp
push
jge
inc
jmp
push
jge
into
inc
fsubr
or
inc
aam
sbb
inc
int3
jmp
push
jge
mov
push
jge
dec
inc
mov
jne
inc
mov
popf
push
jge
push
inc
lods
jmp
push
jge
inc
jmp
add
inc
pushf
jmp
push
jge
pop
inc
xchg
jmp
push
jge
dec
inc
mov
lea
jne
inc
test
jge
jge
dec
inc
jl
lea
jne
inc
je
popf
push
mov
jnp
or
dec
mov
jns
xchg
repnz
out
mov
aas
retf
sar
xor
je
adc
jmp
add
add
add
add
xor
out
jmp
mov
mov
into
pop
sti
dec
repz
mov
inc
enter
repnz
mov
ret
mov
xor
add
mov
cmps
inc
jge
ds
add
inc
and
mov
or
mov
or
in
lea
add
pop
jmp
ret
in
cld
adc
jecxz
cld
mov
mov
mov
in
out
(bad)
ret
sub
jmp
inc
jge
cmp
jmp
xor
jmp
jae
sbb
mov
dec
out
lea
out
jmp
inc
jge
add
retf
(bad)
jg
call
and
inc
out
jmp
xor
(bad)
std
mov
inc
out
lea
mov
inc
js
cmp
inc
out
(bad)
aas
shr
sti
and
out
jmp
mov
inc
jmp
lea
out
call
inc
jge
push
inc
out
inc
add
xor
and
inc
out
jmp
push
cld
std
std
xchg
inc
jmp
lea
(bad)
out
jmp
and
lea
mov
inc
out
dec
xor
out
jmp
adc
std
std
mov
inc
out
lea
loop
inc
in
cmp
inc
out
(bad)
aas
loop
sti
add
and
out
jmp
sar
xor
aad
inc
out
lea
out
jmp
inc
jge
push
inc
out
(bad)
aas
add
sti
inc
xor
out
jmp
arpl
jmp
lea
stos
out
call
inc
jge
scas
aas
out
dec
xor
add
add
add
add
push
sti
call
sbb
(bad)
push
inc
jmp
(bad)
jmp
out
jmp
push
jo
or
aas
out
(bad)
out
jmp
adc
jmp
mov
(bad)
std
mov
inc
out
lea
out
jmp
inc
mov
jnp
inc
inc
out
jmp
out
std
mov
add
cmc
stos
cld
mov
repz
xor
inc
scas
int3
dec
mov
jmp
adc
push
xchg
inc
jmp
lea
sbb
jmp
inc
jge
into
inc
out
dec
je
and
jge
adc
jmp
shr
(bad)
std
loope
jmp
(bad)
shl
in
inc
push
aaa
test
add
inc
jge
call
sti
mov
inc
out
jmp
push
das
mov
inc
inc
jmp
lea
in
jmp
inc
jge
dec
aas
out
(bad)
jg
fdivrp
sub
out
jmp
and
stos
std
mov
push
out
(bad)
jmp
in
call
ins
call
add
push
cmp
cmp
sub
out
jmp
rol
std
adc
jmp
lea
push
jge
dec
cmp
jmp
sub
xchg
push
cmp
jmp
jae
(bad)
std
mov
push
out
lea
in
jmp
cmp
cmp
inc
add
call
shl
cs
push
add
std
mov
push
out
lea
(bad)
in
inc
clc
out
cmp
jmp
sti
and
out
jmp
popf
xor
and
stos
je
push
stos
add
mov
cmp
xlat
sti
add
push
outs
mov
push
dec
add
pop
mov
xchg
in
mov
add
jmp
ret
push
sub
jmp
lea
pop
in
jmp
cmp
jmp
sti
inc
lds
stos
push
sti
jmp
(bad)
(bad)
aas
jmp
lea
add
imul
push
out
dec
fcmovnbe
sti
xchg
les
ds
jmp
xchg
(bad)
vsqrtpd
jmp
lea
jmp
mov
ds
jbe
out
jmp
cmp
les
ds
jmp
xor
test
adc
add
mov
cmp
out
(bad)
aas
inc
add
xchg
dec
xchg
lods
sti
adc
movs
mov
cmp
sti
call
ret
vmovupd
out
lea
jmp
mov
cmp
out
jmp
ret
jl
push
cmp
sti
push
adc
mov
push
out
lea
add
in
jmp
cmp
out
(bad)
jg
cmp
ret
movs
and
push
sti
call
out
cld
mov
bnd
enter
repnz
in
xchg
xor
bound
adc
call
sahf
adc
call
(bad)
fsubr
xchg
call
les
lods
in
or
add
add
xchg
cld
mov
scas
out
add
out
lea
sub
xchg
push
jge
inc
adc
jmp
(bad)
sti
popa
sub
mov
mov
add
mov
mov
lea
scas
jmp
push
mov
in
add
ficomp
add
add
add
add
xchg
inc
rcl
(bad)
mov
(bad)
mov
sti
push
out
ret
popf
xor
and
inc
jp
push
scas
add
mov
adc
jmp
outs
mov
push
dec
cli
push
pop
pushf
add
out
xchg
inc
pusha
push
out
sti
push
add
jmp
ret
sbb
add
inc
jp
cmps
lods
add
mov
adc
(bad)
aas
rcl
sti
inc
outs
jge
jbe
out
dec
sar
adc
movs
loopne
push
out
jmp
sar
leave
mov
sti
push
out
lea
scas
jmp
push
jge
inc
adc
jmp
shl
add
clc
aad
mov
push
out
lea
scas
jmp
push
jge
cmps
adc
(bad)
jg
sar
add
out
jmp
xor
adc
add
sbb
inc
arpl
in
push
jge
push
adc
(bad)
aas
popa
(bad)
and
out
jmp
add
mov
push
jmp
lea
scas
call
push
jge
jbe
out
jmp
mov
out
jmp
push
div
mov
cmp
lea
lods
scas
jmp
mov
mov
adc
dec
sar
out
jmp
adc
mov
add
mov
dec
out
(bad)
ror
xlat
jg
push
jge
rcl
(bad)
aas
(bad)
sti
and
movs
loopne
push
out
jmp
sar
adc
push
cli
dec
out
lea
scas
jmp
push
jge
push
adc
aam
inc
les
jmp
mov
add
jp
out
lea
pop
scas
call
push
jge
mov
out
dec
lds
push
out
jmp
adc
cmc
mov
ror
repz
jg
push
jge
data16
(bad)
out
icebp
ins
sti
loope
movs
add
push
out
jmp
lods
out
adc
xchg
call
lods
inc
add
push
repnz
(bad)
(bad)
in
add
call
jmp
push
mov
sti
jmp
std
cmp
cdq
jne
out
lea
sub
xchg
test
lea
in
jmp
push
jge
repnz
ins
jecxz
inc
mov
jge
push
mov
adc
xor
pop
ja
and
and
jge
jmp
sar
iret
mov
cwde
jmp
mov
movs
jmp
xchg
test
call
adc
jae
pop
jmp
inc
out
call
clc
fld
inc
out
adc
enter
repnz
ds
inc
add
xchg
push
and
push
push
out
jmp
ret
movs
xchg
push
inc
out
jmp
repz
and
icebp
inc
dec
out
(bad)
retf
sub
jmp
push
aam
sbb
push
out
(bad)
jmp
sti
add
movs
inc
mov
push
sti
push
inc
jmp
mov
clc
cli
inc
mov
add
add
add
add
dec
out
(bad)
aas
adc
lods
sbb
shr
jmp
or
cdq
je
out
lea
lock
xchg
push
iret
mov
inc
out
jmp
mov
pop
inc
push
out
jmp
shr
sti
adc
inc
iret
inc
out
(bad)
jecxz
in
jmp
pop
cli
mov
add
mov
por
sti
mov
push
out
jmp
xchg
sub
sti
mov
inc
out
lea
add
inc
into
mov
push
inc
out
(bad)
aas
xchg
loop
mov
push
out
jmp
push
add
std
adc
lea
jmp
mov
push
jge
or
inc
add
push
loope
inc
mov
js
push
out
jmp
jecxz
mov
and
pop
mov
(bad)
cli
call
das
(bad)
add
lldt
scas
and
mov
push
sti
call
je
dec
push
out
add
add
add
push
or
in
lea
jmp
mov
add
out
jmp
sbb
mov
inc
out
(bad)
jg
loopne
mov
dec
out
jmp
jecxz
mov
inc
push
jmp
(bad)
ror
iret
jl
push
jge
ret
(bad)
out
pop
jb
adc
jl
add
jmp
xchg
shr
push
jmp
lea
add
push
mov
dec
push
jge
fimul
dec
jb
mov
push
out
add
add
add
push
sbb
lea
sti
inc
push
ret
mov
add
jmp
mov
and
inc
push
out
jmp
and
add
push
out
jmp
rol
loop
adc
fld
inc
out
lea
bnd
push
jge
and
jmp
mov
out
jmp
jae
push
cld
mov
inc
out
lea
jmp
mov
push
jge
out
out
(bad)
jg
(bad)
sti
cmp
ss
sti
push
pop
mov
mov
push
out
lea
stos
jmp
inc
dec
js
cmp
dec
out
(bad)
aas
mov
movs
cwde
and
jmp
mov
dec
jmp
lea
in
call
dec
jge
mov
out
loopne
push
sbb
sub
out
jmp
add
push
sbb
sti
xchg
dec
jmp
mov
sti
jmp
(bad)
adc
stos
and
xchg
dec
out
jmp
aad
jne
popf
dec
out
add
xor
aad
cmps
sti
and
(bad)
fcmovne
in
jmp
dec
call
(bad)
sar
icebp
call
dec
aas
jnp
dec
jge
add
or
ud0
sti
xchg
sbb
out
jmp
xchg
adc
jmp
lea
in
jmp
dec
jge
jle
out
jmp
iret
sti
popa
sbb
out
jmp
xor
jmp
lea
jmp
mov
dec
jge
cli
push
out
inc
add
ror
sti
inc
and
out
jmp
mov
ss
and
(bad)
pushf
push
out
(bad)
fcmovnbe
jmp
add
(bad)
dec
jge
adc
imul
popf
dec
out
jmp
arpl
sti
inc
dec
jmp
lea
in
call
dec
mov
push
dec
sldt
sub
idiv
cmps
sub
mov
xchg
dec
jmp
ret
or
dec
adc
pminub
idiv
push
das
xchg
mov
dec
out
jg
dec
out
(bad)
retf
add
jmp
inc
aam
sbb
aam
inc
inc
fcomp
std
dec
jge
push
out
(bad)
call
mov
dec
out
jmp
add
add
add
pop
outs
sti
jmp
cmp
inc
dec
jmp
lea
in
call
dec
jge
mov
or
sti
xchg
and
jmp
adc
push
cld
xchg
push
jmp
mov
sbb
jmp
scas
std
sub
add
add
sti
and
(bad)
adc
mov
dec
out
inc
add
retf
loope
mov
cmp
je
push
scas
add
mov
sbb
pusha
mov
icebp
cli
jmp
push
out
jmp
arpl
cld
mov
push
out
lea
adc
or
lea
mov
dec
out
dec
sbb
mov
lock
call
adc
jmp
(bad)
jmp
sti
jmp
inc
lock
mov
out
dec
and
sti
adc
enter
cld
add
mov
lods
in
xor
inc
jmp
mov
in
jmp
arpl
movs
jmp
jae
shr
push
sti
inc
add
jb
mov
push
out
(bad)
jmp
call
dec
inc
faddp
and
pop
push
push
gs
jle
mov
mov
test
lea
mov
push
out
call
dec
out
mov
aas
shl
pushf
and
jmp
mov
push
jmp
lea
add
std
call
lea
sbb
dec
ret
push
out
lea
inc
lahf
js
push
out
jne
inc
pusha
sahf
mov
and
jmp
push
out
lea
in
call
push
mov
cs
add
lods
and
push
out
jmp
ins
jge
mov
add
sar
and
movs
adc
push
out
jmp
rcl
jbe
loope
jmp
(bad)
retf
sbb
inc
inc
(bad)
fdivr
push
jge
inc
push
out
(bad)
jmp
mov
push
out
jmp
inc
xlat
mov
cmp
out
jne
inc
fcomp
push
pop
jbe
popa
push
jmp
lea
add
in
inc
push
jge
es
out
(bad)
jg
addr16
mov
add
dec
sbb
movs
jecxz
out
pop
adc
scas
mov
and
jmp
ficom
in
gs
sub
jmp
sbb
jge
push
out
pop
in
gs
(bad)
mov
mov
add
sbb
imul
gs
jb
cld
xchg
jo
dec
sbb
push
add
pop
xchg
push
gs
fimul
jmp
sbb
inc
inc
push
out
pop
gs
gs
call
adc
pop
ja
push
jge
mov
inc
or
adc
out
jmp
add
shl
jmp
lea
inc
inc
ja
push
jge
xchg
push
out
jmp
and
out
jmp
jae
loop
mov
dec
out
lea
jbe
jmp
push
jge
repnz
out
(bad)
jg
pop
cld
and
in
push
and
mov
push
out
(bad)
jecxz
in
inc
or
jge
add
(bad)
aas
fwait
or
and
movs
pop
and
out
call
outs
bnd
retf
dec
jecxz
cld
mov
push
out
jmp
xchg
xor
(bad)
mov
or
lea
in
inc
xor
mov
add
aas
mov
sti
mov
xor
sbb
push
xor
mov
dec
cld
aad
(bad)
inc
add
xor
cld
push
xor
aas
or
sti
inc
xor
dec
add
sti
adc
jge
and
in
call
xor
adc
out
lea
pop
inc
jbe
add
push
out
jmp
xor
jmp
jae
inc
jmp
or
lea
in
jmp
add
out
(bad)
jg
data16
add
ror
sbb
jne
add
mov
out
(bad)
aas
jnp
cld
inc
xor
and
out
jmp
mov
push
and
jmp
lea
sbb
add
mov
jbe
cld
mov
add
jmp
arpl
inc
jmp
lea
in
call
add
push
add
jmp
or
xchg
xor
je
add
jmp
add
add
add
das
jl
call
xor
call
add
lea
fsubrp
jmp
add
mov
out
dec
std
sti
and
out
jmp
shl
jmp
(bad)
retf
inc
in
inc
sbb
fscale
add
jbe
out
(bad)
push
fdivr
mov
add
jmp
add
push
cmp
jmp
lea
jmp
mov
add
jp
out
(bad)
jg
fdivr
xor
stc
jmp
xor
call
(bad)
jmp
in
call
ins
(bad)
jge
jb
out
dec
xlat
sti
adc
movs
in
add
jmp
shl
push
add
adc
jmp
lea
adc
or
(bad)
out
jmp
xor
jmp
jae
add
mov
push
out
lea
in
jmp
add
cs
out
(bad)
jg
fsincos
xor
out
jmp
xor
push
mov
add
push
out
(bad)
jecxz
in
inc
in
inc
add
push
add
(bad)
aas
adc
sti
and
movs
je
add
jmp
mov
add
(bad)
add
lea
adc
je
add
mov
jmp
das
jge
inc
add
jmp
push
das
inc
call
(bad)
out
lea
add
in
jmp
adc
jge
test
dec
xor
xchg
sti
out
jmp
mov
cdq
icebp
jmp
cli
out
dec
fdivr
and
out
jmp
rol
loope
call
dec
std
out
pop
aad
movs
or
cli
out
jmp
add
add
add
jb
sti
call
cli
call
lea
loop
inc
and
cmp
sti
out
(bad)
aas
(bad)
fdivr
mov
push
cld
xchg
fadd
lea
in
inc
cli
jl
sbb
out
(bad)
jg
into
sti
mov
sti
out
jmp
rol
inc
call
inc
add
imul
pop
adc
cli
out
jmp
rol
inc
sti
call
lea
in
jmp
sti
jl
mov
cmp
sti
inc
sti
fs
jle
lea
in
jmp
sti
jl
push
sti
out
(bad)
jg
(bad)
sti
sub
dec
arpl
jmp
sub
call
jmp
inc
fisubr
and
(bad)
out
jmp
jecxz
imul
fs
(bad)
rcr
in
call
or
add
jl
xor
out
dec
fcmovnb
sti
xchg
movs
jl
mov
jnp
call
(bad)
call
lea
add
in
jmp
(bad)
jl
or
out
jmp
outs
sti
popa
movs
movs
in
(bad)
out
jmp
xor
adc
lea
xchg
jmp
mov
std
jl
mov
out
(bad)
aas
add
jl
and
out
jmp
mov
lods
(bad)
and
call
lea
add
pop
dec
jb
cld
jl
xchg
out
(bad)
jmp
sti
mov
std
out
jmp
arpl
call
lea
in
call
std
jl
pop
(bad)
out
jmp
hlt
sti
xchg
mov
out
jmp
adc
call
(bad)
jmp
in
jmp
add
jl
retf
dec
jno
and
out
jmp
int
adc
shr
mov
enter
icebp
jmp
add
mov
je
jmp
arpl
inc
call
lea
in
call
bnd
mov
out
inc
add
(bad)
sti
xchg
sub
cmp
pop
sti
call
inc
push
std
xchg
repz
(bad)
jmp
jmp
mov
repz
sahf
repz
dec
(bad)
sti
and
out
jmp
rol
(bad)
loope
call
mov
push
in
inc
add
aad
repnz
jmp
sti
add
mov
repz
jmp
push
sub
call
lea
jmp
mov
repz
push
repz
(bad)
jg
mov
or
repz
xor
xor
std
mov
cdq
in
call
fbstp
repz
cdq
in
jmp
add
jl
add
cs
(bad)
out
mov
sti
loope
jl
adc
out
jmp
mov
dec
std
mov
imul
lea
add
add
bnd
cmp
out
(bad)
aas
dec
data16
inc
mov
out
jmp
xor
call
lea
cdq
in
inc
bnd
or
out
inc
add
data16
mov
icebp
out
jmp
jecxz
dec
std
inc
icebp
call
(bad)
shl
jo
icebp
jl
mov
out
(bad)
out
xlat
jo
adc
out
jmp
xchg
aaa
jmp
hlt
out
(bad)
jmp
in
jmp
icebp
jl
mov
out
dec
retf
add
icebp
out
jmp
push
lahf
sub
adc
cmc
out
lea
jmp
add
jl
into
out
out
(bad)
jg
leave
sti
mov
repz
jmp
shl
out
out
out
(bad)
jecxz
in
jmp
add
outs
sbb
cmc
out
(bad)
call
sti
add
add
out
jmp
popf
fst
mov
loop
mov
cmc
out
call
cmc
out
adc
enter
icebp
dec
mov
bnd
mov
out
(bad)
jg
pop
sti
and
push
cmp
cld
mov
out
out
(bad)
jecxz
in
inc
add
imul
jl
(bad)
out
(bad)
aas
mov
and
out
jmp
mov
repz
lea
add
outs
(bad)
repz
(bad)
cmc
out
jmp
movs
movs
sbb
repz
jmp
push
cmp
call
lea
in
jmp
adc
add
in
dec
xchg
movs
sbb
repz
jmp
adc
scas
cld
mov
jmp
(bad)
sar
inc
(bad)
outs
cmp
cmc
out
(bad)
aas
inc
pop
sti
and
out
jmp
shr
cld
add
call
lea
clc
mov
lea
add
out
(bad)
aas
inc
pop
sti
inc
movs
movs
sbb
out
jmp
arpl
cld
mov
jmp
xchg
clc
jle
(bad)
out
(bad)
ret
dec
mov
out
jmp
adc
scas
cld
push
in
std
xor
out
(bad)
rep
in
jmp
mul
or
hlt
out
inc
add
(bad)
pop
sti
loope
movs
sbb
in
jmp
mov
scas
cld
mov
call
in
jmp
in
lea
les
inc
mov
out
jmp
xor
scas
cld
mov
jmp
in
inc
in
(bad)
loop
out
(bad)
jg
pop
sti
add
mov
repz
jmp
jecxz
scas
cld
inc
repz
(bad)
sar
call
stc
into
ins
or
repz
(bad)
out
pop
pop
sti
adc
out
jmp
xchg
cmp
cld
xchg
bnd
lea
clc
mov
dec
bnd
and
dec
pop
sti
mov
add
pop
sti
call
scas
cld
popa
bnd
lea
in
inc
bnd
shl
out
(bad)
jg
pop
sti
mov
repz
jmp
sar
call
(bad)
jecxz
in
jmp
stc
pop
ins
sbb
repnz
(bad)
(bad)
fstp
add
out
jmp
add
add
add
or
jmp
repz
lea
stc
push
ins
dec
repz
loop
out
dec
pop
sti
xchg
xchg
jl
mov
je
call
dec
(bad)
xchg
repz
lea
in
jmp
out
jl
out
icebp
out
jmp
mov
out
jmp
add
repz
call
(bad)
retf
leave
out
jmp
cmc
push
rcr
repz
(bad)
inc
iret
sti
add
out
jmp
mov
in
mov
out
lea
in
inc
stos
ins
cmp
repz
(bad)
aas
ret
mov
repnz
jmp
and
retf
add
out
lea
add
call
icebp
jl
ds
jmp
lahf
movs
pop
inc
icebp
out
jmp
shl
adc
adc
call
lea
repnz
or
lock
dec
aam
sti
mov
icebp
out
jmp
xchg
daa
dec
(bad)
mov
add
adc
inc
mov
mov
lock
(bad)
aas
xor
jl
(bad)
jg
call
dec
cld
xor
out
lea
out
jmp
jmp
mov
in
out
(bad)
aas
imul
inc
cmp
out
jmp
jecxz
out
and
call
lea
add
jns
call
dec
mov
mov
in
out
dec
jg
sti
xchg
cmp
sbb
jmp
xchg
xchg
leave
cld
push
jmp
jae
bnd
jmp
outs
cmp
popa
cmp
fcom
cli
cli
push
xchg
adc
mov
push
out
lea
icebp
inc
add
jmp
lea
out
(bad)
aas
(bad)
imul
and
out
jmp
mov
in
std
and
call
(bad)
fcomi
in
inc
dec
fmul
std
jmp
(bad)
cli
mov
lock
(bad)
stc
jmp
dec
cld
inc
jmp
sub
push
out
lea
in
call
add
in
out
jmp
mov
aam
jmp
jmp
adc
call
lea
jns
jmp
out
jl
imul
out
dec
mov
mov
out
out
jmp
rcr
popa
loope
out
(bad)
rcr
inc
dec
mov
std
out
jl
add
outs
in
out
(bad)
jmp
movs
jl
out
out
jmp
push
pushf
test
inc
out
call
lea
icebp
jmp
out
jl
in
out
(bad)
jg
push
pop
sub
jmp
and
or
push
out
(bad)
jmp
jmp
push
inc
in
into
dec
in
jl
or
add
dec
pop
mov
lock
out
jmp
shl
dec
cld
adc
call
lea
jmp
mov
in
jl
pop
push
out
jmp
and
jmp
jae
out
mov
push
out
lea
js
jmp
in
jl
dec
push
out
(bad)
jg
mov
add
add
add
add
push
out
jmp
xor
jmp
(bad)
jecxz
repnz
jmp
cmp
in
out
(bad)
aas
dec
imul
and
jmp
mov
push
jmp
lea
icebp
call
push
jge
cmps
in
out
jmp
cmp
pop
add
inc
push
out
jmp
push
xchg
xor
xchg
push
jmp
lea
aad
jmp
and
lea
mov
in
out
dec
cmp
out
jmp
adc
jmp
lea
cmp
inc
in
cmp
push
out
(bad)
aas
jb
sti
and
out
jmp
add
add
add
ja
stc
call
and
jmp
lea
jmp
mov
push
jge
push
push
out
(bad)
aas
mov
aam
push
out
jmp
arpl
jmp
lea
jbe
call
push
jge
dec
push
out
dec
and
mov
sar
add
adc
mov
push
push
jmp
(bad)
jmp
jmp
and
int
push
jge
into
in
out
(bad)
out
retf
loope
movs
je
push
out
jmp
mov
xor
mov
push
out
lea
jmp
mov
push
jge
push
out
out
(bad)
aas
push
mov
je
push
out
jmp
xor
mov
push
out
lea
jmp
add
ds
out
(bad)
jg
mov
je
push
out
jmp
jecxz
xor
inc
push
jmp
(bad)
jmp
in
call
inc
fmul
or
push
out
(bad)
out
dec
ret
pop
movs
je
push
out
jmp
xchg
xchg
xor
xchg
push
jmp
add
add
add
add
push
out
(bad)
jmp
in
jmp
push
out
mov
in
out
dec
jge
mov
fsubr
jmp
push
jge
mov
mov
jge
adc
fwait
ret
stc
jmp
xchg
sub
mov
dec
out
lea
dec
in
call
fbld
push
jge
es
out
dec
mov
add
add
add
add
and
out
jmp
shl
cld
adc
into
jns
out
lea
in
jmp
push
jge
jmp
sti
mov
push
out
jmp
ins
sub
cld
mov
mov
add
popa
push
jge
jp
out
(bad)
jg
mov
mov
add
mov
movs
aam
push
out
jmp
jecxz
lods
cld
inc
push
jmp
(bad)
jmp
in
call
inc
fmul
or
push
out
(bad)
out
inc
retf
sti
adc
out
jmp
xchg
popf
xor
xchg
push
jmp
lea
inc
xor
push
jge
push
out
inc
add
retf
and
out
jmp
push
popf
dec
(bad)
popa
push
jmp
lea
icebp
inc
push
jge
xchg
push
out
(bad)
jg
push
sti
mov
push
out
jmp
rcr
jne
dec
out
(bad)
jecxz
in
jmp
pop
(bad)
inc
jge
mov
loope
sti
add
add
out
jmp
mov
inc
jmp
lea
pop
lahf
dec
inc
jge
sub
dec
push
sti
xchg
xor
cmp
dec
sti
call
inc
call
dec
out
lea
add
and
jge
or
scas
lods
leave
sti
mov
add
out
jmp
repz
mov
and
icebp
sbb
out
lea
push
inc
sbb
mov
inc
out
(bad)
(bad)
call
movs
mov
idiv
cli
push
inc
jmp
lea
repnz
sub
inc
jge
push
inc
out
(bad)
aas
xchg
(bad)
sti
mov
inc
out
jmp
add
add
add
cmp
cli
jmp
xor
std
add
lea
(bad)
jmp
xchg
push
out
lea
test
out
call
lahf
add
data16
std
sar
adc
ins
sbb
out
ret
int
sbb
loope
and
mov
adc
scas
add
mov
inc
out
(bad)
push
sti
add
mov
inc
out
jmp
dec
pop
lahf
add
(bad)
das
xchg
and
inc
out
mul
dec
cld
mov
inc
out
ret
dec
sub
cld
xchg
inc
and
mov
adc
or
jge
sub
jmp
out
jl
cli
inc
out
(bad)
aas
inc
leave
sti
inc
xor
out
jmp
add
mov
dec
cld
and
push
jnp
out
lea
pop
dec
gs
inc
jge
dec
inc
out
(bad)
push
in
sti
mov
inc
out
jmp
arpl
cld
inc
inc
jmp
lea
in
call
inc
jge
dec
inc
out
jmp
enter
movs
cmp
inc
out
jmp
adc
xchg
aas
jmp
lea
movs
out
jmp
inc
jge
scas
inc
out
dec
(bad)
sti
and
jge
adc
jmp
ror
jmp
(bad)
rol
mov
std
inc
jge
rol
(bad)
inc
jge
mov
into
stc
call
imul
add
scas
inc
out
lea
bnd
inc
jge
jmp
sti
xor
out
jmp
and
dec
cld
mov
inc
out
lea
cmp
call
pop
fs
inc
jge
retf
dec
push
sti
adc
jge
and
jmp
shr
dec
cld
adc
dec
jp
out
lea
add
push
inc
lea
lea
add
sti
mov
inc
out
jmp
jae
cs
mov
inc
out
lea
fs
jmp
inc
jge
cmp
(bad)
jg
push
sti
sub
out
jmp
xor
jmp
lea
repnz
add
js
cmp
cmp
enter
jge
and
out
jmp
mov
cmp
retf
out
lea
sub
lea
push
out
jmp
sub
xchg
inc
cmp
jmp
push
sub
(bad)
xchg
cmp
sahf
lds
mov
paddd
add
cmp
xor
xor
mov
inc
fisub
orps
mov
aas
stos
mov
mov
sub
cli
jmp
(bad)
adc
cli
call
test
loope
push
out
(bad)
retf
mov
inc
sub
(bad)
std
cmp
(bad)
cmp
(bad)
inc
sti
mov
add
into
stc
call
adc
inc
cmp
mov
push
out
lea
out
jmp
cmp
(bad)
sub
mov
cmp
dec
test
cmp
jmp
adc
movs
jmp
frstor
or
imul
in
sub
jmp
sti
mov
(bad)
ffree
clc
xor
add
and
nop
cli
ins
add
xor
repnz
pop
sti
call
imul
int3
inc
xor
scas
leave
mov
push
xchg
mov
sbb
out
mov
or
mov
jmp
dec
data16
mov
dec
retf
daa
adc
mov
or
add
mov
inc
call
push
push
out
mov
aas
add
lock
mov
dec
and
cmp
int
fdiv
push
sub
xchg
cmp
add
push
push
repnz
xchg
call
push
mov
aas
xor
ds
jbe
inc
cwde
rcl
mov
lds
out
inc
add
and
jne
sub
mov
or
sbb
sub
sub
imul
inc
push
repnz
jmp
(bad)
ffree
or
sbb
mov
lods
mov
(bad)
mov
(bad)
fmulp
mov
pop
sahf
add
push
cmp
jge
add
adc
fisubr
cmp
xor
scas
pop
mov
push
xchg
push
mov
inc
xchg
out
sub
lock
push
scas
in
je
jmp
add
fidiv
out
out
mov
jge
xchg
xchg
gs
ficomp
jmp
fidiv
add
dec
stos
mov
and
in
adc
call
(bad)
mov
adc
mov
(bad)
mov
(bad)
mov
and
popf
mov
add
adc
(bad)
pop
push
out
mov
dec
out
mov
xchg
push
lock
cmp
(bad)
mov
or
mov
add
add
call
dec
out
inc
cmps
and
push
jp
jge
bound
ficom
(bad)
icebp
xor
aas
ror
and
cmp
int
call
xchg
push
scas
fcomp
push
bnd
cmp
out
pop
aas
out
mov
mov
jge
rol
ficom
cmp
xor
aas
push
(bad)
cld
mov
jg
or
ret
call
xchg
push
repnz
rol
pop
leave
stc
dec
outs
cld
mov
jbe
and
std
ret
lea
call
add
add
add
add
push
out
mov
dec
cld
mov
call
and
test
addr16
mov
repnz
adc
jae
cld
mov
xor
ds
jne
mov
lods
out
inc
push
out
lea
fsubr
popf
pop
push
out
mov
or
mov
dec
call
add
fidivr
nop
pushf
push
push
mov
daa
(bad)
add
add
push
stos
and
and
pop
sbb
or
mov
idiv
(bad)
mov
and
push
mov
jge
adc
ficomp
push
out
mov
dec
mov
xchg
jle
and
add
test
or
mov
das
test
ins
add
into
bnd
(bad)
shr
jb
call
push
xor
cmps
jae
inc
xchg
jne
fwait
test
out
lea
dec
out
mov
add
mov
jmp
and
test
add
ins
add
mov
lds
call
enter
stc
call
pushf
jmp
pop
outs
adc
push
push
xor
jle
jns
adc
out
(bad)
jecxz
call
mov
dec
add
(bad)
(bad)
adc
inc
add
push
sbb
dec
mov
fistp
inc
jge
mov
rcr
inc
jge
ficomp
retf
pop
std
inc
mov
jl
and
adc
inc
out
xor
arpl
mov
repnz
sub
addr16
jmp
mov
inc
addr16
call
mov
jmp
(bad)
(bad)
jmp
add
sub
jae
mov
mov
(bad)
ficomp
inc
popw
cld
call
push
pop
cmp
stc
jl
xor
test
cmp
add
push
out
mov
call
cwde
cld
add
dec
sti
xchg
jns
and
cmp
lea
iret
adc
or
add
sub
call
movs
jmp
xor
sti
dec
adc
and
mov
in
inc
xor
call
sbb
test
ins
add
mul
bnd
mov
jmp
in
pop
adc
jecxz
cld
mov
cmp
mov
fld
add
out
lods
inc
out
mov
call
mov
dec
(bad)
mov
dec
push
int3
inc
out
dec
call
xor
lea
push
jp
jl
shl
lock
fidivr
and
lock
(bad)
ficom
sar
sar
ja
and
jne
mov
add
add
add
or
push
sbb
and
jmp
jecxz
nop
jmp
rol
jmp
mov
dec
push
out
call
xor
out
mov
inc
xor
scas
dec
cmp
xchg
leave
pop
push
out
mov
imul
mov
jmp
add
add
add
add
mov
(bad)
mov
dec
iret
inc
xchg
sbb
sahf
sbb
dec
mov
sub
sbb
sub
sti
push
ja
or
aaa
cs
in
enter
pop
out
daa
inc
out
mov
add
adc
ror
mov
push
lods
add
mov
cli
call
add
pop
cmc
call
adc
rcr
rol
lods
add
pcmpgtd
jmp
or
out
sub
popf
push
mov
sub
mov
mov
add
jg
fwait
sti
mov
jg
or
mov
xor
adc
add
sbb
mov
jmp
add
ffree
or
adc
cli
dec
(bad)
or
out
out
mov
adc
sar
mov
sub
mov
mov
cmp
cmps
in
cli
call
or
(bad)
adc
jne
sub
cmp
cli
call
cmp
call
add
mov
sub
push
icebp
cli
dec
dec
idiv
dec
js
cmp
dec
jb
or
test
dec
in
and
dec
out
mov
movnti
int3
push
pop
sti
mov
push
inc
or
addr16
dec
pop
add
ss
sbb
jmp
shr
shr
cli
call
movs
jmp
sbb
outs
cld
mov
mov
enter
cld
xchg
daa
dec
clc
aad
frstor
pop
push
out
mov
aas
fwait
cwde
cld
inc
sbb
scas
sti
and
scas
sti
and
pop
sti
loope
dec
and
sbb
popf
push
repz
add
add
jmp
daa
dec
and
sbb
or
push
rol
inc
gs
bound
jmp
pop
sti
popa
daa
dec
and
sbb
or
push
mov
mov
gs
inc
jae
call
sahf
lods
jmp
add
fnsave
cld
mov
jne
adc
loop
test
out
lea
adc
lea
adc
mov
popf
mov
gs
bound
sbb
enter
cld
inc
push
std
loop
mov
inc
cmp
(bad)
rep
out
es
mov
add
or
mov
fidivr
(bad)
ds
inc
cmps
inc
or
mov
mov
dec
in
xchg
loope
sbb
adc
mov
dec
test
dec
and
and
int
shl
push
dec
out
jg
dec
scas
in
add
jbe
jmp
(bad)
cli
call
add
xor
enter
cld
inc
pop
inc
in
mov
lds
out
mov
test
mov
adc
(bad)
jmp
jmp
mov
or
mov
mov
mov
dec
fiadd
inc
cwde
xchg
mov
adc
ds
cld
inc
mov
ret
in
mov
or
outs
cld
mov
and
and
in
test
out
mov
dec
fistp
dec
rol
inc
inc
xchg
mov
inc
cmps
jmp
jnp
shl
dec
lock
fisttp
adc
mov
outs
fiadd
in
adc
mov
add
or
mov
mov
mov
dec
jb
inc
inc
or
jp
jnp
bound
dec
in
out
push
mov
inc
xor
cld
add
cmp
sti
mov
sbb
fdiv
dec
inc
jecxz
mov
gs
xchg
jne
push
lods
jmp
add
add
add
jnp
stc
call
adc
xor
or
xor
outs
out
imul
push
jne
fld
out
jmp
inc
fidivr
adc
scas
push
outs
cld
mov
add
mov
fistp
dec
push
rol
inc
js
and
out
jne
inc
jl
adc
pop
ret
popf
pusha
or
add
mov
mov
or
sbb
enter
cld
mov
lods
out
imul
sub
out
mov
or
mov
mov
fidivr
dec
xlat
inc
cmps
inc
sub
jb
gs
mov
mov
cld
mov
ds
imul
push
jns
fwait
test
out
lea
push
out
lea
call
lea
adc
dec
fnstsw
(bad)
fsubrp
(bad)
inc
out
mov
push
jp
jnp
shl
in
jecxz
retf
out
mov
outs
pop
mov
add
xchg
pop
lods
add
cli
call
dec
or
das
sub
dec
push
out
call
adc
xor
ds
cld
and
call
retf
mov
out
ret
mov
movs
mov
(bad)
mov
(bad)
fdivp
call
add
add
add
add
inc
push
xchg
push
adc
call
jp
jnp
loop
dec
in
aad
fld
pop
out
mov
jg
mov
adc
outs
cld
mov
into
std
mov
cmps
mov
xlat
mov
dec
xchg
out
inc
or
adc
ds
fdivrp
and
int
adc
shr
mov
enter
cld
add
jmp
mov
out
mov
dec
xlat
mov
dec
out
out
(bad)
inc
mov
mov
inc
xorps
inc
mov
push
retf
inc
rcr
dec
mov
loope
mov
push
out
mov
adc
jle
jno
mov
test
out
lea
dec
out
lea
dec
out
lea
sbb
push
sbb
sbb
dec
into
sbb
std
inc
mov
jnp
xor
mov
inc
out
xor
dec
jl
inc
mov
add
(bad)
(bad)
cmp
inc
add
out
sub
mov
sbb
jmp
jg
lea
dec
sbb
jge
jge
push
sbb
lea
dec
loop
add
popf
inc
jge
adc
clc
jmp
jp
jnp
push
cmp
push
clc
fisttp
mov
sbb
cld
adc
cmp
sti
add
dec
and
add
xor
popf
jp
xor
pop
xlat
jnp
inc
scas
adc
(bad)
fsubr
(bad)
lahf
stc
call
lods
jmp
pop
pushf
adc
push
jb
mov
xor
jle
jp
or
out
(bad)
jecxz
call
lea
call
lea
inc
out
lea
add
inc
sti
jmp
ss
or
aaa
(bad)
jmp
inc
xor
inc
jns
add
out
les
mov
std
mov
dec
mov
enter
push
jmp
out
dec
xchg
inc
inc
jge
call
inc
push
sbb
xchg
popf
inc
mov
jnp
mov
add
neg
ss
inc
out
mov
jg
(bad)
cld
mov
scas
out
mov
mov
cmp
sti
and
dec
and
xor
mov
push
push
add
inc
scas
enter
jmp
mov
(bad)
jmp
mov
adc
nop
jmp
add
arpl
jmp
lea
in
call
inc
jge
inc
sbb
push
popf
inc
jge
loop
out
(bad)
jg
inc
sti
xor
inc
or
xor
jmp
dec
ja
mov
stc
fstp
mov
xor
cld
adc
cmp
sti
and
cmp
add
add
add
add
mov
cmp
sti
add
cmp
sti
xchg
xor
sti
mov
xor
mov
inc
mov
dec
fild
adc
xchg
mov
adc
push
lea
push
mov
xor
(bad)
or
out
mov
add
scas
fst
xchg
dec
inc
mov
jnp
jb
dec
lock
fisttp
mov
mov
out
cmp
ror
mov
inc
xor
fucomp
cmovo
mov
scas
sbb
xchg
push
inc
mov
or
inc
xchg
ffree
sbb
pop
add
movs
xchg
nop
cmp
lods
call
push
jle
ins
cld
and
movs
sti
mov
mov
mov
and
mov
fsubr
ss
push
ds
ins
cld
and
xor
out
rep
sti
adc
cmp
pop
mov
pop
leave
lock
add
call
push
scas
mov
shr
xor
dec
push
movs
sti
mov
stos
call
pop
xchg
leave
and
stos
call
push
mov
mov
lock
jle
imul
cdq
shr
cmp
ds
shr
int3
mov
adc
add
out
pop
mov
add
cmp
mov
aad
sub
inc
loop
add
cs
inc
push
inc
out
jl
cmp
mov
jae
call
mov
inc
(bad)
jl
cmp
out
dec
ret
inc
retf
cmp
add
push
jnp
inc
xchg
inc
mov
ret
(bad)
sbb
inc
xchg
inc
mov
mov
adc
inc
dec
cmps
jl
aas
pop
ret
into
cmp
inc
dec
call
stos
mov
push
dec
mov
pop
ret
jle
mov
jl
ds
ret
jl
mov
aas
ja
call
cs
mov
jl
add
pop
ret
into
cld
mov
jl
ds
ret
mov
jne
call
cld
lods
call
pop
sbb
imul
call
lock
cmp
mul
xor
cli
inc
div
cmp
test
push
cmp
test
sub
add
es
cmp
test
cmp
(bad)
stos
ins
cld
mov
xor
ret
mov
mov
pop
cmp
mov
push
inc
cmp
icebp
shl
addr16
jmp
clc
mov
fsubr
cmp
xor
data16
ja
jne
mov
pusha
cld
jg
add
add
inc
cmps
jnp
xor
into
popf
mov
inc
call
test
add
fistp
(bad)
jl
call
pop
fwait
jmp
mov
test
mov
or
mul
(bad)
push
sti
push
dec
xor
call
xchg
cmp
scas
xchg
add
dec
xchg
cmp
scas
xchg
inc
dec
xor
popa
xor
cmp
scas
add
hlt
cmp
jle
jns
mov
xor
ret
pop
push
inc
dec
popf
cmp
test
cmp
ds
cld
and
xor
out
push
imul
pop
test
out
pop
aad
lea
push
add
xor
push
scas
xor
push
xchg
shr
cmp
dec
or
shr
xchg
stc
(bad)
call
outs
inc
sbb
out
pop
gs
scas
nop
mov
pop
cli
push
out
inc
mov
scas
sub
push
adc
cmp
inc
stos
xchg
cmp
div
add
add
push
arpl
and
int
cwde
test
out
pop
in
scas
lock
pop
cli
push
inc
mov
scas
add
rcl
xor
inc
pop
xchg
cmp
mov
sub
lods
call
pop
xchg
xchg
push
cld
stos
scas
fdivr
mov
add
inc
push
(bad)
(bad)
mov
scas
outs
cmp
mov
(bad)
(bad)
mov
dec
mov
sti
and
inc
push
(bad)
(bad)
mov
out
dec
cmp
loope
rcl
push
shl
std
xor
ret
add
jb
sub
stos
call
pop
movs
call
add
(bad)
addr16
int3
sahf
stc
push
in
inc
push
(bad)
add
xor
outs
xchg
cmp
xchg
xchg
rcl
push
inc
je
inc
xchg
inc
ds
lea
dec
ret
call
jne
sub
call
pop
and
jb
sub
cs
ret
push
jne
sub
cs
pop
add
in
adc
cs
(bad)
fcmovnb
sub
es
fs
xor
enter
out
sbb
out
xor
out
pop
xchg
fwait
push
mov
ins
add
inc
movs
stc
inc
call
(bad)
mov
mov
sti
mov
stos
push
pusha
sbb
xchg
inc
mov
popf
xor
add
je
ds
test
out
pop
and
test
adc
add
cld
xchg
stc
push
inc
push
sar
cmps
cmc
xor
push
popa
inc
sti
xchg
xchg
rcl
push
loopne
sub
dec
dec
xor
rol
xlat
jae
cmp
and
out
pop
movs
pushf
push
in
test
mov
add
xchg
stc
jmp
out
push
mov
xor
jle
cmp
mov
test
sub
cmp
dec
dec
daa
dec
ret
mov
gs
jb
out
pop
adc
mov
push
push
outs
add
xor
stc
jmp
inc
push
mov
xor
(bad)
mov
sti
add
mov
mov
add
inc
cs
out
out
cmp
mov
gs
out
pop
xchg
mov
add
mov
or
and
mov
aad
push
call
lahf
repnz
mov
mov
add
mov
xchg
retf
mov
jmp
mov
aaa
mov
cwde
cmp
mov
sub
ss
jno
and
xor
mov
and
ss
mov
scas
add
dec
mov
inc
idiv
cs
jmp
mov
inc
add
mov
push
mov
jmp
idiv
jo
idiv
ins
lods
idiv
pop
lods
idiv
sub
idiv
cli
mov
call
mov
jmp
idiv
pushf
mov
dec
idiv
test
idiv
inc
mov
dec
idiv
test
idiv
out
add
jo
idiv
(bad)
scas
mov
add
push
fcomi
call
repz
repz
cld
fdiv
(bad)
clc
fdiv
jmp
xor
push
cmc
push
jmp
xor
jmp
xor
inc
xor
push
das
cmc
jmp
xor
push
xor
jmp
xor
inc
add
cmc
inc
jmp
scas
add
jl
idiv
push
scas
add
xor
cmc
dec
and
cmc
call
push
and
cmc
jmp
cmc
jmp
call
sub
jmp
sub
call
sub
dec
sub
inc
sub
dec
cmc
call
es
push
and
cmc
inc
add
and
cmc
dec
dec
and
cmc
(bad)
cmp
cmc
call
cmc
jmp
cmc
jmp
cmc
dec
cmc
call
cmc
jmp
and
call
cmc
jmp
cmc
(bad)
ds
inc
and
cmc
inc
and
inc
cmc
inc
add
(bad)
repz
(bad)
repz
aam
push
repz
(bad)
repz
in
shl
(bad)
in
shl
call
aam
jmp
aam
dec
(bad)
jle
repz
repz
jmp
(bad)
(bad)
repz
aam
jmp
inc
aam
push
repz
add
repz
aam
call
aam
call
repz
shl
(bad)
jle
repz
repz
shl
call
fpatan
dec
and
jmp
and
push
hlt
jmp
hlt
dec
push
hlt
dec
push
hlt
(bad)
ficom
(bad)
fcom
call
add
hlt
call
hlt
jmp
push
hlt
inc
hlt
(bad)
out
mov
idiv
es
hlt
(bad)
cli
mov
idiv
push
idiv
mov
movs
idiv
loop
idiv
mov
idiv
push
hlt
inc
push
hlt
dec
hlt
call
hlt
jmp
push
hlt
inc
push
hlt
inc
add
push
hlt
dec
jmp
hlt
(bad)
jle
hlt
push
jmp
(bad)
cmp
hlt
push
push
hlt
call
hlt
jmp
hlt
call
hlt
(bad)
jp
hlt
(bad)
jp
hlt
dec
push
hlt
push
dec
push
hlt
dec
push
pop
hlt
call
add
pop
hlt
jmp
pop
hlt
dec
cmps
idiv
push
pop
hlt
jmp
test
add
movs
test
add
shl
add
mov
add
lods
add
push
idiv
hlt
stos
idiv
loopne
add
es
add
test
xchg
test
add
xor
inc
sub
cmc
call
hlt
dec
push
hlt
call
push
hlt
call
cmc
call
hlt
dec
(bad)
cmp
cmc
(bad)
ds
cmc
push
call
hlt
push
push
hlt
inc
hlt
(bad)
jmp
inc
add
hlt
(bad)
cmp
hlt
jmp
hlt
jmp
push
hlt
(bad)
cmp
jmp
push
hlt
call
push
hlt
dec
push
hlt
jmp
hlt
jmp
push
hlt
dec
push
hlt
(bad)
cmp
hlt
jmp
push
hlt
call
push
hlt
(bad)
mov
push
hlt
inc
push
hlt
push
push
hlt
call
hlt
inc
add
sub
cmc
dec
sub
cmc
dec
scas
add
jbe
idiv
js
idiv
sub
add
pushf
movs
idiv
and
jmp
stos
idiv
mov
idiv
jo
idiv
ss
idiv
sub
idiv
pushf
movs
idiv
mov
add
out
movs
idiv
add
cli
test
dec
idiv
movs
movs
idiv
pop
movs
idiv
out
add
fisubr
idiv
mov
idiv
mov
(bad)
jp
hlt
call
push
hlt
dec
(bad)
cmp
call
hlt
jmp
push
hlt
jmp
push
hlt
call
add
jbe
idiv
dec
scas
idiv
sbb
idiv
movs
scas
idiv
add
shr
inc
scas
idiv
mov
idiv
es
add
push
scas
add
jmp
ins
cmp
inc
ins
cmp
or
adc
add
ins
cmp
mov
cmp
test
ins
cmp
add
ins
cmp
adc
add
outs
cmp
add
fsubr
add
push
cmp
cmp
add
cmp
outs
ins
cmp
cmp
xchg
xor
pop
ins
cmp
push
cmp
jbe
cmp
mov
sub
repnz
cmp
std
ins
cmp
jb
cmp
pop
imul
push
ins
cmp
out
add
(bad)
lods
add
mov
aas
add
fild
add
lods
or
aad
inc
add
scas
inc
add
xchg
aas
add
pop
inc
add
lods
add
push
fistp
add
inc
add
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
adc
sar
rcl
mov
idiv
cmps
or
fadd
fcomip
test
add
lods
nop
and
cld
rcl
lock
mov
data16
fadd
fdivr
test
das
jo
xchg
xor
mov
test
sub
adc
add
mov
test
cmps
shl
fnstsw
test
inc
jmp
add
cli
cmc
inc
add
add
fwait
or
adc
sbb
call
adc
sbb
mov
mov
cmc
mov
jmp
dec
pop
aad
movs
sub
sbb
dec
jbe
aad
rcl
xor
mov
imul
sbb
paddusb
pop
mov
or
mov
jbe
xchg
and
clc
rcl
adc
mov
fisubr
es
iret
adc
mov
ja
xchg
and
clc
rcl
ror
mov
aaa
push
test
mov
adc
fistp
and
int3
dec
add
je
lds
adc
cmc
mov
jle
stos
dec
test
mov
sub
rcl
imul
in
fldcw
std
stc
cmp
adc
popa
cmc
mov
adc
jmp
adc
adc
mov
sub
adc
pop
cmc
bsf
adc
add
and
rcl
shr
idiv
mov
adc
stc
jl
cmps
aad
call
jnp
adc
movs
add
sbb
dec
pop
int3
cmp
adc
stos
add
mov
sbb
rcl
push
js
mov
ss
cmp
loope
push
inc
pop
in
cmp
add
add
xor
inc
cdq
push
retf
retf
loope
dec
xchg
lahf
lods
(bad)
xor
add
data16
add
mov
add
add
dec
inc
mov
rcl
iret
fprem1
mov
retf
add
mov
aas
add
xor
add
xor
add
xor
add
add
or
add
fsubr
xor
adc
ins
icebp
aad
add
aad
popa
adc
pop
and
in
adc
je
rcr
mov
out
jmp
mov
add
les
cli
xchg
add
xchg
add
push
xor
pop
and
bound
fld
xor
add
add
add
add
les
or
add
push
inc
out
inc
(bad)
inc
out
jmp
retf
out
add
movs
retf
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
lds
add
push
scas
add
push
scas
gs
add
xchg
add
add
daa
lods
add
enter
mov
or
mov
getsec
pushf
adc
mov
sbb
mov
and
stos
adc
sub
xchg
sbb
xor
xchg
and
cmp
jg
inc
out
inc
inc
fild
aaa
dec
out
repz
dec
add
shr
ds
neg
push
push
jmp
inc
pop
aas
out
pop
inc
jecxz
pusha
(bad)
retf
bound
push
push
mov
pop
jo
mov
data16
ret
jp
arpl
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
ss
and
ss
and
inc
stos
and
inc
stos
and
jbe
sub
outs
mov
add
sub
xchg
and
jbe
and
xchg
and
mov
and
add
mov
and
(bad)
stos
and
(bad)
stos
and
out
stos
adc
(bad)
stos
adc
mov
adc
mov
adc
xchg
adc
jbe
adc
jbe
adc
fisubr
je
jmp
add
stos
je
inc
stos
adc
ss
adc
ss
adc
inc
stos
jg
xchg
stos
jg
cmps
stos
jg
cmps
stos
(bad)
inc
add
stos
(bad)
call
stos
(bad)
jmp
test
(bad)
call
test
(bad)
jmp
test
(bad)
call
test
adc
mov
adc
mov
adc
(bad)
test
add
stos
add
stos
add
xchg
test
add
fs
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
push
scas
and
ss
and
inc
scas
and
inc
scas
and
jbe
and
cs
sub
jle
sub
jle
and
jbe
and
jbe
and
xchg
and
mov
and
mov
and
(bad)
scas
and
(bad)
scas
and
mov
dec
add
scas
adc
mov
adc
mov
adc
xchg
adc
jbe
adc
add
jbe
adc
inc
scas
je
fisubr
je
fisubr
je
fisubr
adc
ss
adc
inc
scas
adc
xchg
test
jg
cmps
test
inc
pop
test
inc
out
inc
xlat
test
add
test
add
test
add
test
add
test
add
test
add
add
lods
adc
(bad)
lods
adc
adc
add
test
add
scas
add
xchg
scas
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
adc
lods
adc
lods
and
lods
and
inc
lods
and
inc
lods
and
jbe
and
add
jbe
and
xchg
and
jbe
and
jbe
and
xchg
and
mov
and
mov
and
(bad)
lods
and
(bad)
lods
and
mov
dec
add
lods
adc
mov
adc
mov
adc
xchg
add
adc
jbe
adc
inc
lods
adc
inc
lods
add
cmp
add
add
adc
dec
lods
adc
lods
adc
lods
adc
inc
lods
inc
pop
stos
inc
daa
stos
inc
daa
stos
inc
pop
stos
inc
pop
stos
inc
out
inc
out
inc
xlat
stos
inc
xlat
stos
inc
out
inc
out
inc
(bad)
stos
inc
xlat
stos
inc
cmps
stos
inc
cmps
stos
inc
xchg
stos
add
xchg
stos
add
movs
stos
add
add
movs
stos
add
xchg
test
add
add
fs
add
push
stos
add
push
stos
add
fs
add
fs
add
inc
stos
add
push
stos
add
and
add
and
add
adc
inc
push
stos
add
cmps
sub
xchg
inc
jnp
jbe
nop
xchg
push
test
inc
xor
lahf
add
push
or
cmps
and
scas
push
clc
scas
mov
cld
mov
mov
pushw
pop
ins
mov
into
add
iret
ss
iret
shr
pop
ret
xlat
push
jno
fild
jne
fild
(bad)
cmp
out
pusha
out
repnz
push
cmp
repz
idiv
add
mov
test
test
rol
adc
sti
push
neg
push
pop
fidiv
push
pop
xchg
push
daa
scas
mov
push
das
(bad)
js
xor
jl
aaa
mov
xchg
cs
out
pop
arpl
int3
push
addr16
imul
pop
outs
(bad)
shr
int3
arpl
add
hlt
dec
pop
(bad)
rcr
mov
fsub
jb
pop
outs
xchg
shr
int3
arpl
enter
aam
jg
xor
xchg
inc
jnp
jbe
nop
xchg
push
test
inc
xor
lahf
push
adc
cmps
sbb
scas
push
add
add
add
add
add
movs
mov
or
mov
pop
jl
(bad)
into
ja
retf
rol
iret
shr
imul
push
xlat
fild
jae
fild
(bad)
cmp
out
push
out
repnz
fucomi
push
aas
out
repz
idiv
inc
idiv
mov
das
add
aaa
xchg
add
jbe
nop
xchg
push
test
inc
xor
cli
sbb
xor
pushf
scas
push
jmp
mov
pop
mov
mov
pop
jnp
(bad)
into
jns
retf
shl
iret
ss
iret
shr
pop
ret
xlat
push
imul
fild
(bad)
cmp
out
pop
out
add
repnz
fucomi
push
inc
out
repz
idiv
mov
mov
add
scas
test
mov
sti
push
mul
push
pop
fisubr
push
pop
xchg
push
daa
scas
cdq
sub
mov
push
das
(bad)
xor
aaa
mov
test
aas
out
aas
inc
(bad)
xor
add
inc
dec
push
hlt
cmp
loopne
push
stos
fadd
sahf
call
dec
pop
(bad)
lock
inc
call
dec
xchg
hlt
cmp
loopne
push
push
inc
push
pop
call
imul
add
cmp
(bad)
jbe
nop
xchg
push
test
inc
and
mov
add
add
add
add
or
cmps
sbb
scas
push
add
mov
or
mov
pop
ins
mov
into
jne
retf
rol
iret
shr
imul
fild
jno
fild
(bad)
cmp
out
push
out
repnz
fucomi
push
cmp
jecxz
inc
mov
add
inc
add
xor
sub
inc
add
aas
add
retf
pop
and
leave
push
add
mov
inc
add
sbb
ds
ss
lahf
ss
loop
outs
cli
xlat
inc
outs
pavgw
adc
add
(bad)
add
cmp
xchg
mov
add
xor
mov
cmp
add
push
lods
add
stos
fsub
mov
fild
fs
add
jb
xchg
fcom
aad
push
jnp
inc
popa
or
add
jb
cmp
inc
popa
xor
push
add
loopne
inc
xor
pop
arpl
stos
add
adc
shr
adc
bound
mov
jno
add
lods
push
add
add
stos
push
add
stos
pop
add
lods
add
adc
pop
je
mov
outs
outs
aam
add
stos
fnstsw
push
test
outs
or
jne
cmp
(bad)
outs
jb
(bad)
or
stos
add
pop
fidivr
outs
fist
jb
test
add
les
inc
ror
add
add
add
add
(bad)
push
outs
mov
push
popa
mov
mov
jmp
outs
mov
popa
cli
mov
mov
adc
pop
je
mov
pop
jb
fistp
mov
fist
mov
popa
gs
ficom
mov
imul
add
xchg
gs
jg
pusha
je
mov
jno
push
ficomp
or
adc
ins
rcr
and
mov
pop
cs
add
out
add
add
xor
movs
pushf
or
sti
mov
pop
and
fist
dec
(bad)
into
pop
cmp
xor
adc
and
fidiv
ror
popa
jns
lds
mov
imul
lds
mov
popa
imul
push
jle
jb
jg
pop
imul
fist
mov
fld
mov
gs
mov
mov
mov
imul
add
imul
adc
adc
jb
fisub
nop
pop
data16
pusha
ins
xor
pop
addr16
pop
and
retf
cmps
enter
mov
das
lds
outs
jne
push
jb
ret
adc
je
xlat
push
and
add
fisub
mov
adc
and
les
mov
pop
shl
xor
aam
or
mov
pop
outs
sbb
pop
and
(bad)
push
outs
and
pop
outs
add
(bad)
pop
xor
pop
popa
sub
pop
outs
arpl
add
test
or
add
add
add
xchg
imul
pop
and
push
imul
adc
and
(bad)
pusha
outs
jbe
pop
arpl
or
and
leave
imul
aad
and
aad
and
fisub
dec
pusha
je
ret
pop
cs
add
xor
(bad)
popf
or
jbe
pop
je
rcr
shl
xlat
push
fs
add
test
or
je
push
and
adc
imul
frndint
or
scas
add
je
xor
imul
outs
retf
retf
add
and
lea
adc
pop
outs
or
pop
and
mov
popa
imul
cld
or
cwde
xor
fcomp
je
retf
sub
pop
and
fldenv
mov
mov
mov
mov
popa
imul
je
xor
jmp
or
mov
fs
xor
imul
shl
lods
add
add
xor
ficomp
pop
je
(bad)
pop
outs
jmp
pop
and
mov
and
dec
outs
lock
ins
imul
aam
je
aad
bound
enter
add
add
mov
xor
jg
or
les
adc
and
pop
jae
mov
arpl
enter
lods
add
je
xor
into
sahf
or
push
fcom
(bad)
pop
and
enter
(bad)
or
stos
add
hlt
cdq
xor
test
add
fcom
(bad)
pop
and
xlat
popa
je
fcomp
or
pop
and
shl
into
outs
jb
xlat
cld
or
add
mov
xor
push
ret
pop
je
int3
pop
outs
mov
pop
and
pusha
arpl
push
outs
xchg
mov
int3
pusha
fs
pusha
je
movs
or
and
adc
add
add
add
add
(bad)
xor
les
jb
fldenv
fist
fstp
xchg
outs
jmp
and
into
outs
ins
inc
pusha
je
mov
mov
pop
and
lds
jne
lds
or
int3
adc
popa
mov
adc
popa
add
xchg
fldenv
jne
imul
xlat
fs
ret
ficom
mov
adc
pop
outs
adc
adc
jb
leave
imul
test
xor
jg
or
xchg
pop
outs
jmp
pop
and
fldenv
or
push
outs
sub
outs
outs
lock
add
movs
or
hlt
fwait
xor
pop
cmps
or
xchg
and
rcl
xchg
rcr
mov
jge
or
je
xor
push
mov
sub
ja
push
outs
jg
imul
xor
imul
mov
add
mov
add
cwde
bound
sbb
rol
in
pusha
ins
(bad)
jno
sub
bound
xchg
pop
gs
push
jns
mov
add
push
add
and
xchg
pusha
ins
mov
xchg
pop
ja
mov
je
xchg
push
and
outs
outs
xchg
ror
or
add
(bad)
pop
cmp
add
test
add
retf
scas
inc
add
mov
add
mov
add
mov
add
scas
es
scas
xor
(bad)
scas
add
or
inc
add
mov
add
scas
add
xchg
scas
add
stos
scas
add
popf
scas
add
xchg
scas
add
sub
add
add
add
enter
pop
scas
add
scas
add
mov
add
dec
scas
add
push
scas
add
mov
scas
add
push
scas
add
xchg
mov
rcr
add
es
add
xchg
add
out
add
ja
add
out
scas
add
(bad)
scas
add
xor
add
fisubr
add
inc
mov
rol
sahf
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
lock
scas
add
cmps
scas
lock
scas
loopne
data16
add
data16
and
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
cmp
scas
sar
sar
scas
add
push
scas
add
fdivr
dec
icebp
ss
lahf
or
add
add
add
ss
lahf
lea
(bad)
in
ret
xchg
add
(bad)
in
ret
xchg
sbb
xchg
jb
in
pop
add
xchg
pop
data16
lods
add
clc
xchg
pop
outs
and
add
cmc
mov
cmps
lods
add
pop
jp
outs
xchg
lods
add
cmp
add
(bad)
mov
push
lods
add
mov
push
add
add
push
xor
lods
add
mov
data16
pop
add
lods
pop
add
lods
add
outs
(bad)
fs
xor
add
call
stos
add
(bad)
lods
add
(bad)
stos
dec
jmp
add
mov
add
lods
add
cmps
aam
cmp
test
mov
idiv
cmps
int3
and
add
cmps
lods
add
mov
add
gs
mov
pop
mov
add
or
pop
lods
add
data16
pop
dec
lods
add
mov
ins
add
jae
lods
add
jp
pop
fs
cmp
jo
fs
and
cmp
outs
push
fs
jns
stos
add
push
outs
cmc
call
outs
cmc
inc
add
xchg
adc
add
adc
push
jb
stos
add
icebp
mov
hlt
xchg
cmc
xchg
sti
mov
and
add
push
xchg
aad
cmc
call
add
lods
test
stos
add
cmps
sub
xchg
nop
outs
arpl
add
pop
xchg
pop
jb
xchg
outs
jns
add
stos
add
pop
nop
pop
jne
jg
add
xchg
bound
ror
imul
pop
xchg
sub
popa
add
pop
add
xchg
js
pop
jnp
add
xchg
outs
add
xchg
pop
add
xchg
pop
add
mov
cmps
stos
add
fadd
cmc
dec
fs
xchg
pusha
jns
stos
mov
popa
(bad)
mov
add
push
jae
nop
js
xchg
mov
xchg
push
pop
fs
cmc
inc
jg
add
fs
xchg
pop
add
test
mov
xor
(bad)
xor
out
add
out
add
and
add
fistp
jb
add
(bad)
push
jae
mov
sti
nop
imul
jle
outs
sub
dec
dec
stos
ins
xor
data16
add
pop
ins
cmps
lea
leave
cmp
je
gs
arpl
pop
jb
mov
add
popa
popa
and
mov
adc
pop
jns
ins
push
jae
jnp
jo
mov
add
out
add
xchg
jae
rol
mov
jb
daa
jnp
popa
(bad)
add
mov
pusha
jae
rol
pop
jp
and
mov
and
gs
jp
popa
sbb
sub
(bad)
pop
js
cmp
xor
and
test
jns
add
mov
pop
arpl
nop
imul
mov
add
ss
fs
xchg
xchg
push
add
xchg
push
fs
lea
test
pop
outs
and
jnp
jb
mov
and
imul
test
lea
call
iret
popa
outs
push
ja
arpl
mov
and
bound
adc
popa
or
xchg
scas
add
ss
arpl
sub
and
mov
movs
test
lds
imul
retf
xchg
push
gs
imul
adc
bound
adc
daa
out
add
(bad)
mov
mov
push
imul
add
mov
mov
add
push
xchg
pop
and
xchg
bound
adc
gs
(bad)
pop
jo
into
popa
outs
xor
jb
mov
aam
addr16
jg
je
jg
add
xchg
bound
adc
and
pop
jae
jg
arpl
test
test
add
dec
scas
add
xchg
fs
push
arpl
sub
xchg
jb
and
bound
adc
popa
or
add
test
(bad)
ja
arpl
sub
sbb
jl
arpl
sub
test
test
mov
popa
popa
mov
pop
add
mov
adc
je
push
dec
and
pop
jae
jnp
daa
lods
add
xchg
popa
jne
pop
gs
adc
je
leave
popa
ins
xor
jb
retf
mov
popa
rol
add
xchg
push
pop
ret
lods
add
mov
push
ja
dec
cmc
inc
sbb
add
add
add
test
adc
je
js
je
jnp
arpl
xor
mov
add
lea
bound
pop
dec
push
(bad)
xchg
add
jle
je
jle
imul
int3
popa
outs
xor
jb
mov
add
aam
popa
ins
sar
mov
xchg
or
adc
gs
mov
adc
ja
jb
sub
mov
adc
add
mov
sub
adc
jb
xchg
movs
leave
addr16
ja
je
ja
add
pop
and
bound
xor
je
jle
je
ja
imul
test
push
stos
add
ss
jb
jge
ins
xchg
pusha
arpl
retf
pop
popa
push
int3
add
idiv
jmp
jae
retf
adc
jb
xchg
adc
addr16
js
je
ja
add
add
jnp
arpl
sub
mov
movs
jl
je
ja
imul
stos
add
jbe
push
arpl
sbb
js
arpl
sub
jge
jb
jge
jb
test
bound
mov
mov
sbb
sbb
arpl
sub
add
test
push
popw
jge
je
xchg
and
ins
pop
jb
xchg
adc
test
push
arpl
jbe
and
js
addr16
push
jae
and
outs
daa
push
mov
add
pop
popa
xchg
jl
fs
imul
into
add
xchg
jg
push
daa
push
mov
add
test
mov
jne
sbb
mov
add
ins
js
sti
jne
daa
(bad)
mov
add
jg
popa
xor
je
xchg
popa
gs
mov
add
jg
je
xchg
popa
gs
add
mov
add
ret
add
add
bound
add
add
add
add
sub
jnp
add
xor
add
cmp
mov
add
into
add
jo
add
and
add
pusha
mov
add
mov
add
mov
add
movs
sub
lods
scas
add
mov
add
mov
movs
add
adc
imul
jb
scas
add
(bad)
mov
add
add
ja
add
xchg
movs
add
xor
ins
mov
adc
add
rcl
ja
push
add
outs
gs
jge
push
gs
test
bound
pusha
ins
ret
add
push
push
popa
add
and
xor
icebp
push
imul
xor
add
or
add
loope
gs
and
scas
add
add
cmp
pop
popa
aad
pop
sub
add
loop
cmp
retf
add
(bad)
cmp
mov
add
add
cmp
outs
add
add
add
cmp
pop
add
add
(bad)
cmp
mov
idiv
add
idiv
add
idiv
add
idiv
add
cmp
out
cmp
mov
cmp
es
cmp
jp
cmp
mov
cmp
ret
add
std
cmp
mov
std
cmp
stos
std
cmp
mov
std
cmp
and
add
add
cmp
dec
add
add
xor
sub
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
xor
fiadd
cmp
cli
add
add
add
add
out
cmp
push
add
add
add
add
add
add
cmp
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
push
add
add
add
add
add
add
cmp
mov
cmp
add
add
cmp
and
cmp
repnz
add
add
add
add
add
(bad)
cmp
dec
add
add
add
add
(bad)
cmp
(bad)
cmp
add
push
(bad)
cmp
fdivrp
cmp
(bad)
(bad)
cmp
pop
(bad)
cmp
ret
add
(bad)
cmp
(bad)
(bad)
cmp
sbb
cmp
mov
add
add
cmp
jb
cmp
push
add
add
(bad)
cmp
out
cmp
ret
add
(bad)
cmp
inc
cmp
shr
cmp
cdq
inc
imul
pop
inc
imul
add
add
add
push
pusha
je
pop
pop
add
imul
inc
push
arpl
push
sbb
dec
pop
outs
xlat
stos
add
fld
dec
(bad)
pop
imul
jp
jo
pop
cmc
jmp
inc
imul
jae
outs
cli
pop
data16
inc
jb
pop
inc
push
inc
adc
add
xor
add
mov
cmc
inc
push
js
push
push
je
pop
cmc
jmp
mov
add
pop
xor
sbb
js
mov
add
stos
add
popa
dec
js
jno
cmc
push
pusha
bound
dec
push
js
stos
add
enter
out
add
and
add
test
pusha
outs
aam
add
jmp
add
test
pop
push
test
jne
xor
xchg
mov
jg
jp
repz
fwait
ins
je
fld
push
out
cmc
pop
mov
cmp
mov
xor
inc
mov
mov
and
add
jge
xchg
test
push
push
sbb
jo
popa
gs
mov
or
test
pop
out
mov
add
pop
dec
jne
jne
or
inc
in
push
popa
sbb
pop
inc
sti
dec
cmp
and
gs
dec
js
or
jne
jo
addr16
dec
gs
lds
outs
add
enter
push
mov
add
push
dec
cmps
jg
call
dec
dec
cwde
test
dec
dec
push
add
push
mov
push
jg
call
cmp
jne
add
push
inc
and
pusha
je
mov
and
dec
push
call
pop
inc
gs
sbb
push
sbb
pop
movd
pop
imul
add
add
add
in
dec
push
out
xor
mov
pusha
imul
pop
push
jb
addr16
je
pop
push
popa
xor
inc
pop
inc
aam
data16
pop
sub
mov
inc
cmc
push
xor
rcl
inc
add
inc
add
fiadd
push
fiadd
ds
add
fild
rcr
inc
add
inc
add
add
sub
or
inc
add
inc
add
fiadd
neg
inc
add
fild
(bad)
fiadd
mov
fiadd
imul
add
inc
add
fild
or
inc
add
fiadd
cmp
inc
add
mov
inc
add
mov
inc
add
fild
add
push
fild
pop
fild
adc
inc
add
fadd
adc
inc
add
fild
lock
call
fadd
pop
fadd
cmps
fadd
paddusb
fadd
lds
add
cmps
scas
add
(bad)
lods
add
test
add
scas
add
xchg
lods
add
lods
add
cmps
lods
data16
add
xchg
lods
add
mov
lds
fmul
fild
test
add
test
add
popa
test
add
ja
pop
add
lods
add
lods
add
lods
arpl
and
lods
pop
add
lods
addr16
lods
jo
mov
lods
jb
add
retf
lods
add
mov
lods
push
add
lods
pop
add
lods
pop
add
lods
jb
icebp
lods
add
lods
jno
xchg
lods
add
sub
push
add
test
add
add
add
fs
add
add
ja
add
pop
test
push
add
lods
add
cmp
add
stos
add
iret
stos
jno
sbb
add
stos
add
out
stos
jno
sbb
add
stos
jno
add
push
add
stos
add
lods
add
ja
xchg
stos
add
cmp
push
add
add
test
add
mov
test
add
pop
add
test
push
add
pop
add
ja
es
add
cs
pop
add
push
add
stos
addr16
stos
imul
es
jb
shr
add
stos
pop
add
stos
add
jmp
out
push
add
stos
addr16
stos
add
jmp
and
xor
add
test
cmp
data16
add
shr
arpl
enter
lds
jb
jnp
jb
es
add
test
push
add
add
test
add
stos
imul
add
add
add
sub
data16
test
add
stos
push
add
stos
jno
in
pop
add
test
jo
repnz
add
or
add
addr16
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
jb
das
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
add
jge
jno
xchg
mov
add
jno
imul
add
add
jo
and
pop
add
arpl
test
add
xlat
scas
pop
add
mov
add
scas
addr16
scas
arpl
and
mov
add
scas
arpl
add
lds
add
pop
mov
add
mov
add
scas
jo
jmp
jb
or
pop
add
mov
add
scas
add
cwde
mov
add
pop
add
mov
add
jb
jno
push
add
popa
add
mov
add
scas
jo
push
scas
jne
pop
add
add
scas
pop
add
push
add
scas
inc
add
scas
add
add
scas
jno
repnz
push
add
scas
pop
add
scas
add
scas
push
add
scas
arpl
fild
push
add
pop
add
scas
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
pop
add
push
add
mov
add
scas
push
add
pop
add
scas
fs
lods
add
xor
push
add
lods
pop
add
scas
pop
add
scas
push
add
scas
dec
add
lods
pop
add
lods
pop
add
scas
pop
add
lods
mov
add
and
pop
add
scas
push
add
mov
add
mov
add
add
add
mov
add
mov
add
pop
add
mov
add
inc
add
inc
add
cmp
sub
add
xor
out
add
mov
add
xlat
lods
add
out
add
add
lods
inc
add
lods
aas
add
lods
xor
loop
inc
add
lods
gs
lods
and
aad
xor
push
mov
add
mov
add
mov
add
pop
add
mov
add
mov
add
pop
add
add
mov
add
lods
jb
and
push
add
mov
add
jno
das
lods
pop
add
stos
dec
add
lods
pop
add
stos
pop
add
stos
pop
add
lods
add
add
lods
inc
add
stos
aas
add
stos
xor
loop
cmp
shrd
lods
pop
add
mov
add
add
inc
add
mov
add
mov
add
mov
add
add
mov
add
pop
add
mov
add
pop
add
stos
pop
add
stos
add
sub
jo
shr
ds
stos
pop
add
add
stos
add
rep
pop
add
stos
push
add
stos
add
sub
add
stos
pop
add
stos
bound
xor
add
fdiv
pop
add
add
xchg
mov
add
pop
add
pop
add
mov
add
stos
add
sbb
adc
add
sub
fs
test
add
or
xor
aam
dec
add
test
fs
test
ja
and
stos
pop
add
push
gs
add
(bad)
test
push
add
test
jns
add
add
dec
add
push
add
add
jb
jp
add
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
aas
add
add
test
pop
add
test
add
mov
add
push
add
mov
add
imul
jnp
add
mov
add
scas
add
mov
add
scas
or
jno
mov
mov
add
mov
add
scas
aas
add
scas
xor
loop
cmp
cmpxchg
adc
pop
add
test
add
test
pop
add
test
imul
jnp
add
add
add
push
add
aas
outs
outs
adc
push
sub
push
gs
push
add
scas
pop
add
scas
pop
add
scas
add
call
and
add
and
and
mul
popa
gs
scas
add
cmc
scas
push
add
test
mov
ss
test
add
sub
add
test
push
add
pop
add
arpl
jae
bound
mov
add
retf
add
scas
and
ret
add
test
dec
add
lods
dec
add
lods
dec
add
lods
push
add
add
scas
push
add
lods
inc
add
lods
aas
add
lods
xor
add
inc
add
lods
xor
mov
lods
add
dec
test
xor
xchg
test
push
add
test
push
add
add
add
dec
gs
and
(bad)
adc
ins
add
xor
push
add
dec
bound
xor
imul
dec
cmc
(bad)
mov
and
and
dec
gs
in
imul
dec
outs
popa
sub
outs
add
fnstenv
or
add
sub
imul
push
rol
test
ds
dec
inc
pop
cmp
cli
sub
jge
stos
xchg
push
jns
loop
les
ins
push
pop
or
pop
leave
add
pop
(bad)
popf
(bad)
loop
cmc
popa
not
retf
cmp
mov
pop
popf
rcr
in
dec
push
push
leave
rcl
es
fnstcw
fld
hlt
int3
push
or
int
add
dec
xor
fdivrp
fldcw
push
out
test
xor
and
add
repnz
push
test
popa
cmp
cdq
rol
pop
aaa
push
push
pusha
jmp
es
popf
imul
push
(bad)
mov
leave
arpl
fcmovnbe
xchg
fidiv
pop
xor
ror
xchg
push
mov
add
add
add
add
inc
sub
jnp
bound
out
adc
push
fisubr
fdivr
imul
das
inc
jecxz
scas
or
jmp
dec
jle
sbb
or
jle
inc
mov
ror
push
dec
aad
add
add
data16
add
jnp
cmp
adc
add
cs
jle
or
add
loopne
cmp
out
push
dec
(bad)
jp
fisttp
push
lock
or
repnz
cli
mov
aaa
(bad)
adc
push
cmp
xor
stos
mov
push
das
pop
je
pop
ins
dec
xchg
push
mov
xor
sbb
mov
jae
data16
push
(bad)
in
jae
jge
add
pop
dec
lahf
push
aad
jge
inc
inc
cdq
jns
xchg
jl
ins
arpl
test
ror
lods
outs
icebp
mov
fwait
or
call
pop
stos
adc
mov
add
mov
add
cmc
inc
adc
(bad)
std
add
imul
into
and
xchg
xchg
(bad)
in
ret
fmul
sbb
or
add
add
add
adc
(bad)
int
or
mov
stc
aas
out
ins
and
cwde
or
fwait
aad
mov
add
mov
jl
aas
fdiv
cmp
int3
xchg
pop
jmp
xor
cdq
enter
mov
push
mov
add
jg
add
(bad)
adc
add
bound
test
fistp
pop
out
mov
and
xchg
int3
(bad)
les
scas
mov
cmp
dec
sti
jge
sub
les
imul
jbe
int3
xor
jo
jecxz
gs
cld
lea
ins
or
jno
xchg
jno
adc
xchg
loope
and
xchg
stos
(bad)
jne
add
cmp
push
pop
lods
out
and
aam
es
add
jnp
cmp
(bad)
cmp
int
inc
xchg
rcr
rcr
pushf
retf
loop
sbb
xor
outs
push
push
lds
push
mov
call
(bad)
jge
aad
imul
fld
and
dec
out
mov
rol
or
pop
in
adc
add
add
add
add
cmp
movs
les
pop
stos
mov
lods
jne
fisttp
popa
lea
mov
sbb
sbb
into
cmps
adc
(bad)
fdivr
das
dec
dec
lods
pop
push
scas
add
mov
retf
(bad)
std
add
loop
shl
xor
and
in
mov
rcl
adc
fadd
es
and
sub
add
mov
mov
pop
mov
mov
or
mov
icebp
dec
jo
les
loop
sub
sbb
cmp
pop
retf
sub
mov
mov
retf
and
adc
std
inc
sar
add
popa
dec
out
sar
xor
clc
test
add
leave
pop
inc
pop
fs
scas
push
pop
cwde
ds
test
cwde
mov
or
fs
ret
push
jmp
and
push
cmp
ins
jecxz
mov
push
call
out
push
cmp
ins
pop
jg
pop
fnstsw
add
vpsllq
es
dec
lock
data16
mov
rcl
mov
add
sub
cmp
mov
add
adc
cmp
pop
dec
(bad)
pop
pop
push
xchg
push
jbe
movs
test
xchg
jno
xlat
repz
out
sub
and
outs
mov
and
neg
cmp
add
add
loope
mov
add
add
add
dec
xor
fs
cmps
aaa
ret
add
jnp
jmp
add
inc
out
lahf
pop
lds
fiadd
stc
adc
inc
pop
pop
sbb
setb
daa
out
in
pop
les
shl
aas
add
sbb
jne
cld
arpl
cmps
jl
add
stos
push
xchg
bnd
mov
ins
mov
cli
push
mov
retf
fisubr
nop
mov
stos
add
repz
es
std
inc
(bad)
mov
mov
add
adc
cmp
mov
ins
movs
into
xchg
mov
push
popa
xor
push
jle
sub
mov
add
add
movs
adc
pop
test
int
mov
mov
not
int3
fisubr
stos
or
aas
mov
pop
add
sbb
adc
add
shl
test
imul
xchg
inc
xchg
xchg
cwde
ret
dec
pushf
sti
mov
imul
scas
sbb
scas
or
add
pop
loope
add
mov
ficomp
add
dec
mov
mov
add
enter
std
add
das
pop
mov
xchg
and
push
sub
fidiv
mov
dec
and
xor
mov
pop
imul
cwde
jecxz
and
or
inc
enter
add
dec
rol
jecxz
mov
and
ror
add
call
fwait
inc
dec
and
adc
push
sahf
sbb
add
stos
jnp
neg
and
push
shl
pushw
and
in
mov
out
mov
clc
add
es
jmp
xor
add
push
add
mov
add
sbb
adc
std
inc
xor
add
setl
addr16
push
or
in
mov
pop
jbe
mov
xor
out
adc
sar
pop
push
xor
dec
jmp
or
int3
arpl
pop
pause
xlat
mov
add
add
add
add
jecxz
dec
mov
add
mov
nop
addr16
jle
imul
push
ror
push
or
and
xchg
retf
and
in
xor
mov
sbb
adc
lea
adc
popa
arpl
scas
add
or
inc
or
std
add
add
jmp
jb
idiv
xchg
dec
xchg
fst
jae
movs
cmp
mov
jb
mov
shr
lods
in
xchg
ret
rol
aad
mov
push
inc
ja
mov
xchg
in
mov
and
call
scas
add
mov
inc
or
pop
std
inc
(bad)
adc
mov
pop
ins
push
xlat
and
add
sti
paddw
adc
inc
push
or
push
inc
hlt
jl
jmp
inc
push
sub
sbb
xchg
pop
inc
pop
sub
fst
xchg
lods
add
retf
pop
inc
push
mov
add
mov
mov
cmp
mov
mul
mov
sub
add
add
add
add
dec
mov
pop
xor
xor
cmp
das
popa
repz
sub
cli
fst
cmps
fdivr
mov
cmp
lods
pop
(bad)
jne
icebp
ins
pop
sub
add
ror
bound
adc
(bad)
aam
push
xchg
scas
add
jnp
pop
jg
add
stos
cmp
enter
or
mov
enter
jmp
or
cmp
inc
adc
cmp
psrlq
pop
mov
lods
add
sub
ror
icebp
jge
mov
gs
sub
cmp
lds
add
add
add
add
clc
sbb
dec
xor
or
nop
fidiv
or
jns
and
stos
cmp
xchg
les
in
ret
jns
icebp
loop
cmp
sub
jge
stos
jae
cmc
push
ror
fs
out
retf
mov
push
imul
mov
add
es
jne
pusha
call
cwde
and
add
cwde
(bad)
ins
lock
push
mov
scas
mov
(bad)
stc
cmp
(bad)
stos
add
jne
sti
or
add
ret
imul
cmp
in
sub
ins
or
add
stos
ins
pushf
outs
icebp
(bad)
fisub
jmp
test
jge
or
add
shl
in
xor
jb
loope
test
jo
cmp
(bad)
jns
pop
adc
enter
dec
movs
pop
sbb
xor
push
stos
add
ret
mov
push
pop
add
arpl
and
mul
jle
mov
es
(bad)
pop
int
dec
and
push
xor
call
add
add
add
cdq
sbb
pop
pop
inc
clc
push
xor
loope
cmp
repnz
ffree
push
popf
sar
mov
or
js
cmp
mov
test
mov
xchg
nop
xchg
inc
pop
test
cwde
pop
push
pop
xor
add
jge
or
jp
cmps
add
aad
in
add
xor
std
mov
loope
lods
sbb
movs
mov
test
test
call
inc
mov
aad
test
mov
stos
pop
pop
gs
in
add
repz
xchg
cli
pop
jne
jle
mov
sbb
jae
add
imul
rcl
jno
stc
inc
mov
jecxz
push
sub
mov
imul
mov
mov
into
sbb
add
movs
mov
aaa
ja
daa
dec
scas
(bad)
fidiv
enter
cmp
fs
cmp
and
inc
mov
mov
ss
hlt
jmp
add
mov
jne
dec
pop
sbb
pop
jg
add
and
shl
call
xlat
lods
jno
sti
cdq
fs
and
adc
mov
xchg
mov
repz
dec
jge
push
lahf
and
movs
mov
lock
add
sub
inc
dec
add
popf
mov
dec
or
in
repz
aas
add
dec
rcr
repz
or
jbe
pop
dec
xchg
sar
test
push
jbe
push
add
xchg
xchg
and
sub
popf
jo
int
cmp
push
xchg
lods
scas
retf
jbe
or
aaa
imul
add
inc
jmp
cli
fistp
div
in
popa
fwait
mov
ins
mov
add
lods
sbb
xor
pop
nop
sbb
xchg
mov
mov
dec
and
(bad)
ins
pop
out
mov
sub
mov
ret
(bad)
ret
inc
iret
scas
mov
inc
jmp
pop
jg
ret
and
add
or
(bad)
jbe
lahf
lea
cmp
add
push
or
add
outs
sub
cmc
retf
mov
pop
sbb
jl
add
inc
lods
pop
stc
mov
in
pop
cmp
and
leave
jge
dec
push
in
push
(bad)
shl
mov
xchg
lods
add
and
push
sub
push
push
add
push
push
pop
and
xor
dec
rol
or
in
pop
rcl
hlt
sbb
out
ins
xchg
adc
mov
arpl
adc
jo
mov
push
and
jl
call
xchg
dec
jp
mov
retf
add
jo
mov
push
jmp
add
sahf
movs
push
int3
sub
mov
pop
out
xchg
xchg
lea
pop
sub
jmp
lods
hlt
dec
sub
add
jnp
adc
inc
adc
add
push
ds
clc
sar
movs
lods
cs
mov
cmc
nop
add
test
push
pop
xor
sub
add
bound
mov
mov
rol
mov
stos
aaa
cmps
cmps
daa
and
add
push
iret
xor
test
int3
mov
test
or
xchg
test
imul
push
xchg
mov
add
add
add
aas
leave
push
aaa
in
xor
mov
jmp
sbb
call
sub
add
push
stos
add
xchg
mov
out
lods
cmp
mov
mov
int
sti
adc
ret
fwait
mov
repnz
cmp
and
add
pop
ficom
pop
cdq
test
clc
mov
jle
(bad)
imul
in
dec
add
jge
and
cmp
push
jle
fyl2xp1
mov
push
enter
jmp
mov
xor
mov
rcr
ins
ror
rol
hlt
add
push
aaa
leave
jmp
(bad)
cmp
mov
call
sbb
jnp
dec
dec
adc
cs
aad
jmp
inc
push
jp
mov
inc
mov
jmp
mov
stos
mov
jne
mov
test
cli
cli
(bad)
loop
xor
jne
pop
add
ins
jae
sbb
(bad)
leave
cdq
xlat
dec
mov
stos
jmp
pop
sub
mov
push
cmp
add
int3
jbe
movs
pop
int3
ss
pop
jns
lock
sbb
push
dec
jmp
in
push
pop
lods
sar
cmps
and
jmp
pop
fcomp
mov
adc
add
ror
sahf
rol
outs
xor
dec
mov
sub
jns
push
movs
sub
and
stos
push
movs
out
xchg
inc
daa
test
rol
and
dec
cmps
ret
mov
call
pop
pop
add
movs
fcomp
mov
jns
call
xor
les
add
add
add
cmp
xchg
inc
pop
xchg
in
pop
jp
jbe
push
lods
aaa
jns
pop
fmul
ins
ins
ret
cmp
push
nop
ret
pop
jno
ret
sbb
ds
sub
(bad)
adc
scas
test
loopne
mov
test
sub
inc
out
inc
sbb
mov
add
lods
in
push
sub
add
add
add
mov
fucomp
popf
cld
mov
jnp
out
ror
mov
mov
sub
cwde
mov
dec
lahf
repnz
sahf
mov
ins
call
retf
loopne
lds
lea
xchg
pop
dec
or
xor
mov
inc
jnp
rol
and
or
add
add
adc
push
enter
mov
in
mov
mov
imul
das
dec
jne
and
inc
jmp
ror
js
in
dec
mov
pop
jo
test
or
in
popf
aad
lock
repz
fs
push
shr
add
fild
xor
clc
pop
jbe
jmp
out
rcl
pop
jle
test
movs
cmp
test
fnstenv
jl
sub
leave
xor
adc
mov
jmp
gs
mov
les
lods
add
jbe
pop
data16
imul
add
add
add
jae
inc
sar
js
iret
or
xchg
retf
jle
xor
cmp
popa
gs
cmc
call
stos
idiv
test
stos
or
lea
(bad)
jne
add
add
sub
gs
cmp
movs
test
jno
aad
mov
add
add
add
add
stos
add
es
add
inc
stos
adc
inc
stos
adc
ss
adc
ss
adc
pop
stos
sldt
stos
(bad)
hlt
stos
adc
hlt
stos
adc
lds
adc
mov
stos
add
retf
stos
add
retf
stos
add
mov
dec
add
stos
add
xchg
stos
add
xchg
stos
hlt
jmp
stos
sti
inc
add
test
pop
add
stos
mov
add
inc
addr16
add
bound
or
pop
add
push
dec
add
daa
push
pusha
es
add
inc
stos
adc
inc
stos
adc
aaa
stos
(bad)
xor
adc
add
stos
add
sti
test
push
add
test
sbb
scas
test
lods
test
sbb
ret
add
test
xor
sub
add
mov
add
xor
xor
push
xor
mov
xor
jle
xor
inc
daa
xor
shl
add
adc
in
fsub
or
sar
(bad)
jmp
add
aam
fimul
mov
mov
iret
xchg
jge
mov
jle
sub
retf
sbb
push
inc
mov
test
(bad)
xlat
sbb
int3
ins
pop
in
leave
hlt
pop
(bad)
cmp
popa
adc
push
sbb
pop
std
mov
push
mov
inc
repz
add
arpl
mov
push
pop
cmp
outs
push
aad
inc
push
mov
pop
popf
stc
dec
add
cld
ror
clc
movs
xor
dec
xchg
mov
lods
inc
inc
int
retf
adc
inc
mov
ret
fcomp
jae
stos
add
into
push
push
pop
(bad)
enter
mov
lds
pop
retf
mov
xchg
cli
lods
mov
sahf
xlat
hlt
pop
in
add
jp
or
ja
pop
pop
or
jbe
mov
jo
jbe
inc
fiadd
loop
iret
cwde
sub
(bad)
out
lahf
sub
jno
(bad)
mov
lahf
in
lods
call
retf
push
nop
stc
or
or
add
gs
or
pop
xchg
xlat
adc
call
sbb
adc
fdiv
imul
std
or
mov
adc
mov
bound
xor
mov
adc
cmp
lods
mov
add
addr16
into
dec
jmp
in
shl
mov
pop
xor
aad
lods
inc
out
fcmovbe
je
inc
cmp
xor
and
stos
scas
xor
(bad)
inc
hlt
dec
cld
jo
es
pop
or
retf
cld
pop
push
push
sub
push
mov
mov
cdq
fsubr
je
lds
add
add
add
jmp
pop
out
test
mov
xor
lods
in
enter
push
(bad)
mov
je
sbb
jmp
fiadd
push
(bad)
call
or
frstor
or
addr16
idiv
(bad)
out
je
std
xchg
add
mov
repz
pop
cmp
push
sbb
push
sbb
inc
and
adc
push
int3
rcl
shr
or
movs
pusha
ds
(bad)
mov
out
int
test
mov
cmps
jecxz
movs
aas
ins
scas
dec
in
je
xlat
add
jb
pop
scas
test
add
ss
inc
movs
rcl
xchg
push
test
loop
xor
std
pusha
retf
lods
sub
mov
test
pop
push
cmp
add
movs
sbb
mov
mov
hlt
push
push
gs
mov
mul
or
shl
inc
sbb
(bad)
outs
push
fwait
js
pop
in
add
push
dec
inc
popa
add
xchg
(bad)
jmp
add
sub
mov
jnp
mov
or
cmp
xchg
shr
imul
or
iret
xchg
(bad)
icebp
sahf
push
shr
das
ficomp
arpl
lods
div
mov
add
sub
mov
mov
enter
xchg
mul
cmps
cmc
adc
pop
(bad)
mov
stos
push
fwait
jp
push
mov
mov
mov
hlt
dec
adc
(bad)
cmp
mov
shl
pop
dec
fst
pop
ds
mov
fnstcw
cmps
retf
inc
cmps
xchg
fdiv
xor
or
fiadd
add
jp
inc
dec
stos
movs
xor
jo
retf
scas
push
cmp
movs
and
xchg
sar
iret
repnz
push
popa
ret
int
rcl
mov
call
push
sub
inc
cld
ret
stc
pop
rcr
sub
cmps
mov
xor
ins
pop
add
pop
push
arpl
push
pop
push
fnstenv
xor
enter
ror
in
loop
test
mov
test
xchg
lea
dec
mov
int
test
in
inc
lock
jne
cs
inc
test
sbb
and
pop
sub
and
add
mov
arpl
(bad)
les
in
xor
int
mov
mov
mov
ja
popf
mov
stc
jg
call
jnp
mov
pop
std
or
inc
outs
jge
outs
das
push
jo
add
and
and
xchg
or
xchg
xchg
fist
(bad)
out
jo
add
cmps
retf
cdq
pop
sub
sub
or
jmp
pop
dec
and
jae
and
push
shr
jae
loop
push
mov
inc
bound
ins
lock
ret
inc
(bad)
and
dec
jo
mov
jb
mov
add
xchg
or
adc
scas
mov
inc
ins
iret
cli
outs
lods
(bad)
aad
cli
int
mov
mov
xchg
mov
mov
in
inc
data16
cmc
bnd
jb
dec
ins
imul
inc
inc
add
cmp
mov
or
sbb
cmp
(bad)
icebp
add
cmp
(bad)
jl
mov
ror
add
sbb
bound
sub
dec
adc
nop
jle
mov
adc
std
mov
cmp
dec
ror
ficomp
cwde
shr
das
dec
out
ss
add
adc
push
cmp
pop
jns
inc
outs
pusha
add
nop
pop
(bad)
out
ins
icebp
(bad)
and
rcl
arpl
(bad)
int3
dec
cwde
mov
mov
enter
xor
pop
add
and
push
test
adc
fistp
shl
repz
int
xchg
lahf
ret
mov
xor
rcl
es
fmul
mov
add
pop
mov
in
adc
arpl
je
pop
mov
and
and
add
mov
cwde
mov
push
into
sahf
mov
std
test
(bad)
or
out
or
int
aas
adc
lods
(bad)
push
or
ins
outs
and
test
shl
jb
jo
add
xchg
mov
clc
xor
into
data16
test
call
dec
dec
pop
mov
cli
ins
popf
sbb
or
in
xor
std
fcomp
(bad)
sbb
lds
cdq
shl
stos
push
mov
xchg
mov
sub
and
dec
jo
add
dec
jp
push
push
pop
push
arpl
dec
aad
adc
ret
loopne
mov
scas
sbb
fldenv
test
pop
add
(bad)
cmp
pop
xchg
or
fwait
mov
cmp
add
dec
ins
push
push
pop
bound
cmp
add
(bad)
mov
cmp
stos
add
lods
stos
inc
in
cdq
cmp
pop
(bad)
(bad)
xlat
pop
imul
mov
aam
push
or
mov
sub
mov
push
inc
push
outs
pop
shr
inc
jo
dec
ins
xor
dec
jne
fwait
adc
mov
std
adc
dec
int
adc
rcl
(bad)
cmp
jns
mov
pop
and
icebp
shl
fst
lods
adc
jp
or
loopne
test
dec
scas
shl
mov
(bad)
inc
cld
(bad)
pop
pop
mov
outs
lds
dec
out
sub
std
mov
daa
adc
movs
inc
adc
data16
add
ret
add
je
mov
sbb
push
std
jae
push
lds
add
mov
lds
dec
int3
or
inc
sbb
xor
xchg
mov
jecxz
dec
or
adc
sbb
js
sbb
scas
mov
sbb
sub
cmps
sbb
inc
sub
add
mov
mov
adc
sub
test
mov
pop
inc
out
inc
cmp
xchg
jnp
shl
mov
cmp
xor
sbb
mov
cmp
loope
cmp
adc
mov
push
pop
sbb
add
mov
dec
fxch
xor
add
imul
xor
and
(bad)
loop
bound
or
es
and
inc
adc
mov
gs
sub
mov
sub
gs
fdivr
cs
es
pop
jno
call
int3
jb
mov
jbe
inc
add
pop
es
jne
arpl
jno
inc
jg
mov
jge
iret
mov
jns
mov
hlt
jns
ja
jnp
xchg
lods
ins
pop
in
outs
ins
inc
inc
cmp
and
outs
add
test
push
fsub
imul
push
daa
popa
inc
jo
pusha
cmp
gs
add
cld
scas
and
fchs
xchg
dec
sub
or
mov
test
iret
into
dec
fnstsw
pop
dec
mov
and
inc
push
test
inc
inc
push
stos
add
inc
aad
sti
aas
mov
inc
ret
xor
push
mov
add
iret
ja
push
and
push
add
dec
adc
push
je
ins
push
mov
scas
push
jle
loop
sbb
push
pop
out
xchg
pop
call
pop
pushf
mov
mov
mov
loope
mov
movs
loop
sub
jb
sub
jge
out
out
jmp
jp
into
not
out
xor
mov
in
add
dec
dec
sbb
mov
loope
ins
xchg
cmps
jmp
in
jmp
(bad)
(bad)
cmp
inc
dec
inc
pushf
sbb
lods
(bad)
fdivr
aam
mov
sub
dec
clc
ficom
repz
je
xchg
ss
cli
jmp
repz
aaa
xor
(bad)
loopne
fldcw
mov
fiadd
add
cs
push
ficomp
mov
(bad)
hlt
and
out
scas
xlat
xchg
jmp
xchg
(bad)
and
jmp
ror
mov
adc
mov
dec
lds
mov
and
sbb
(bad)
cli
inc
ret
mov
xor
iret
ror
sar
inc
retf
inc
pop
jnp
add
fcom
mov
leave
fidiv
jbe
pop
pusha
ror
sbb
into
cmps
and
nop
xor
daa
xchg
jg
fst
mov
and
loopne
mov
lahf
icebp
or
sahf
mov
cli
popf
mov
test
cdq
sub
and
call
(bad)
inc
mov
push
add
sbb
ins
inc
inc
mov
hlt
mov
mov
push
aad
and
cmp
int3
cmp
mov
leave
xchg
pop
loop
test
scas
push
stos
pop
int3
xchg
stos
xchg
(bad)
scas
pop
lahf
sbb
lods
cmp
add
cs
cmps
shl
cmps
sub
imul
out
cmp
inc
and
mov
mov
inc
mov
ins
xor
add
mov
stos
cmp
mov
pop
mov
cwde
inc
dec
mov
sbb
into
mov
sbb
pop
mov
add
add
add
xor
add
mov
add
test
jns
bound
loop
addr16
add
or
push
mov
pop
ss
(bad)
push
inc
dec
mov
(bad)
or
or
call
out
pushf
inc
pop
imul
add
aad
outs
jne
int
int
mov
add
aas
add
xchg
outs
mov
das
cmc
jp
push
or
jle
stos
aad
or
mov
mov
xchg
push
das
push
fstp
xchg
hlt
aas
dec
test
xor
gs
push
cmp
cmp
jnp
popa
mov
aam
add
inc
lds
repz
inc
into
cld
inc
clc
pop
pop
daa
lock
pop
adc
mov
cwde
int
jg
dec
jmp
outs
in
ins
loopne
mov
(bad)
sub
outs
in
icebp
mov
(bad)
sub
test
test
test
adc
add
add
adc
daa
retf
stos
imul
mov
or
aas
pop
popf
hlt
bound
dec
imul
inc
sub
lock
arpl
add
add
cdq
loope
jae
imul
adc
mov
inc
ss
iret
cld
add
push
out
popf
jnp
push
jecxz
lods
push
mov
arpl
add
add
add
add
(bad)
cld
sbb
add
(bad)
shr
sub
push
cmp
xchg
sbb
jp
xor
push
stos
clc
or
and
in
add
(bad)
lahf
push
push
inc
cmp
adc
or
mov
in
fisttp
dec
cmp
push
sub
imul
add
in
shl
xchg
jnp
in
(bad)
pop
(bad)
push
inc
dec
mov
mov
sahf
call
cs
cmps
ror
adc
mov
dec
xor
dec
in
sbb
iret
push
inc
or
aaa
bound
jmp
(bad)
fs
xchg
mov
loope
add
push
push
inc
nop
inc
fcmovnbe
sbb
gs
jl
cmp
das
pop
out
imul
or
mov
dec
inc
mov
mov
cmp
scas
xchg
mov
xor
pushf
mov
ret
jae
and
add
js
and
(bad)
stos
icebp
sar
retf
jb
xchg
iret
xchg
sub
sbb
in
add
addr16
(bad)
iret
ret
cmc
rcr
out
stc
int
je
std
ror
jp
jmp
lods
sar
jp
mov
push
(bad)
and
xor
adc
mov
scas
imul
call
inc
std
adc
xor
mov
ja
jmp
xchg
adc
add
mov
cdq
sbb
mov
mov
jp
mov
add
test
xchg
push
cdq
sbb
out
setno
inc
push
shl
ror
clc
fs
sbb
dec
mov
inc
fdivr
adc
jmp
imul
mov
cmp
xor
in
sbb
cmp
adc
xchg
cmp
jnp
test
add
xor
cs
adc
jae
sahf
les
aad
pusha
mov
mov
fisttp
mov
jg
sbb
loopne
mov
dec
pop
mov
xchg
dec
icebp
xchg
cs
add
(bad)
adc
and
jmp
mov
jl
fs
pop
adc
add
xchg
loope
mov
repz
shr
adc
stos
inc
or
mov
push
popf
pushf
cmp
or
fmul
or
ds
pop
sub
adc
xchg
xchg
sub
or
dec
mov
mov
ficom
pop
sti
aad
xlat
jmp
add
jno
mov
int3
idiv
jae
shr
frstor
add
mov
push
sub
cmp
sub
mov
xchg
fnsetpm(287
(bad)
psrlq
mov
pcmpeqw
push
mov
mov
(bad)
cmp
sar
mov
inc
push
adc
mov
or
add
pop
pop
xor
jge
jae
jmp
ins
test
(bad)
mov
cwde
push
cli
fldcw
jp
fstp
dec
lds
xor
cmp
cmc
dec
(bad)
and
jb
adc
shl
jb
mov
rcr
les
inc
jp
mov
or
ins
add
mov
adc
inc
xchg
imul
pop
add
or
push
add
mov
and
push
push
(bad)
or
mov
add
adc
sahf
add
jge
fdiv
mov
aaa
fisub
loop
xchg
rcl
stos
call
gs
add
add
add
add
gs
(bad)
pop
and
add
sbb
test
movs
push
or
xor
cmp
mov
mov
popf
mov
aam
mov
inc
int
xchg
cmp
dec
add
loop
bound
xor
fs
add
cmp
jnp
cmp
shr
or
int3
(bad)
mov
fst
adc
jl
fs
imul
pop
ins
repz
call
std
inc
into
mov
add
xor
pop
jb
inc
inc
mov
mov
push
(bad)
(bad)
cld
repz
shr
cmp
jae
scas
adc
or
inc
pop
add
xor
cmp
scas
xor
adc
aad
and
aas
fadd
or
aam
lock
in
push
mov
pusha
cwde
and
addr16
scas
(bad)
xor
jo
add
push
add
lods
inc
or
lods
adc
or
cld
rcr
mov
add
pushw
adc
add
int
test
loopne
ds
pop
test
aas
mov
popf
in
lods
sahf
daa
and
mov
pop
cmp
push
cdq
retf
inc
pop
fcom
lahf
loopne
jno
aad
out
push
daa
loopne
data16
cmp
int3
dec
add
outs
add
rcl
(bad)
dec
or
aad
imul
les
add
icebp
mov
pop
neg
outs
sti
and
ficom
sbb
dec
not
aaa
ja
mov
fcmovnb
(bad)
fmul
push
out
jle
sbb
scas
jns
retf
scas
mov
jg
mov
aam
add
bound
xchg
dec
xor
push
mov
imul
mov
ins
adc
push
and
jmp
clc
lea
lods
(bad)
adc
repnz
pushf
push
mov
imul
and
push
test
stos
inc
adc
sbb
sbb
add
adc
jge
cmp
lods
or
in
test
aam
cmc
loope
out
ins
scas
clc
sar
outs
daa
or
int
sbb
pop
adc
arpl
sahf
adc
ja
test
push
cmp
pop
pop
loope
mov
dec
rcr
ror
mov
js
pushf
shr
add
nop
movs
jg
pop
scas
scas
ret
push
popa
test
imul
xor
mov
push
out
repz
(bad)
push
imul
call
mov
sbb
mov
jmp
pushf
sbb
mov
sbb
and
xchg
or
mov
push
mov
add
pop
ror
inc
leave
pop
add
xchg
sbb
jle
pushf
lods
retf
sbb
fisttp
das
xor
inc
and
bound
mov
in
mov
xchg
xchg
fdivrp
mov
imul
dec
pushf
ds
retf
add
outs
dec
pusha
sub
mov
or
add
sbb
adc
neg
adc
pop
jo
idiv
ret
sbb
adc
mov
je
and
lea
test
cli
fucomi
xchg
(bad)
call
pop
sbb
out
sub
adc
popf
mov
sub
and
dec
aad
(bad)
pop
shl
aad
jg
add
fsubr
gs
sahf
stos
pop
out
jmp
sar
mov
pop
out
in
movs
std
sub
xor
repz
jae
mov
loopne
jno
rcr
sub
inc
lahf
ret
xor
jne
movs
mov
sti
mov
cmp
aad
ins
(bad)
mov
add
repz
sar
add
adc
and
mov
mov
call
ret
mov
dec
or
xchg
pop
arpl
or
cld
and
rcl
sub
retf
push
push
add
sbb
(bad)
inc
mov
xchg
push
add
pop
pop
popf
adc
push
(bad)
xchg
adc
ret
pop
std
rcl
sbb
aas
loop
lahf
js
adc
xor
jo
arpl
cmps
mov
data16
and
stc
aaa
fs
mov
mov
in
mov
pusha
ret
mov
scas
dec
xchg
shr
add
sub
add
lahf
out
stos
mov
or
cmp
lds
adc
pop
je
cmp
xor
hlt
in
mov
(bad)
into
jo
iret
(bad)
mov
(bad)
mov
clc
test
mov
cli
in
mov
inc
js
or
dec
cs
dec
test
cli
leave
add
inc
add
mov
push
dec
pop
push
pop
push
xchg
hlt
sub
sub
mov
in
pop
add
jo
mov
xchg
ret
inc
push
adc
sti
test
jns
pop
in
mov
mov
(bad)
cwde
mov
jg
push
rcr
and
mov
adc
and
add
add
add
add
pop
dec
shl
pop
mov
push
push
outs
xchg
xchg
sub
test
add
sub
xchg
sub
les
cmc
fisttp
(bad)
outs
pop
outs
imul
sub
mov
and
lahf
retf
arpl
pop
pop
and
sbb
ret
daa
test
mov
es
addr16
mov
add
add
add
mov
pop
mov
jnp
add
das
push
pop
std
fs
cmp
ret
mov
test
icebp
cmp
cdq
cwde
arpl
(bad)
mov
mov
jg
mov
mov
sbb
dec
(bad)
nop
int3
idiv
jae
sar
or
push
xor
add
add
add
add
xchg
pop
pop
addr16
les
inc
jle
add
sar
rcl
mov
and
cmp
fmul
loop
pop
mov
bound
fisttp
pop
not
push
sbb
gs
and
mov
call
add
add
add
add
int
jo
out
in
cdq
int3
ret
loope
outs
imul
dec
cmp
call
mov
xchg
pop
sub
push
dec
movs
cli
mov
sub
push
pop
lods
loopne
cli
and
dec
(bad)
mov
or
cld
mov
mov
adc
add
aam
ss
push
arpl
int
mov
aam
hlt
mov
std
ss
mov
mov
in
(bad)
mov
jb
mov
add
imul
push
outs
scas
pop
sub
shr
xor
mov
jbe
test
and
xor
(bad)
adc
fndisi(8087
fild
out
add
fisubr
push
in
cmps
and
in
in
cmp
ret
or
inc
adc
sub
adc
sahf
pop
retf
ret
test
enter
inc
cmp
push
xor
dec
dec
jle
dec
mov
dec
dec
jae
loopne
xor
xchg
mov
mov
add
add
add
push
in
fidivr
cs
inc
lock
mov
gs
add
mov
mov
add
pushf
leave
mov
pusha
addr16
fst
mov
rcl
lds
adc
or
out
adc
mov
add
outs
ret
or
or
inc
retw
nop
cld
(bad)
call
add
and
fs
cdq
cdq
sahf
sbb
loopne
sub
sbb
jb
pop
xchg
inc
adc
int3
js
js
dec
and
popa
and
cs
into
ins
push
xchg
mov
push
push
mov
xor
add
add
add
icebp
(bad)
cli
fdivp
add
jmp
cld
jnp
pop
push
ret
(bad)
cmp
add
(bad)
cmps
data16
aam
lea
mov
sahf
pop
(bad)
and
fimul
dec
mov
pop
cld
nop
and
mov
movs
push
add
in
fld
neg
sub
daa
cmc
xor
pop
jae
jns
sub
add
jmp
add
jge
or
(bad)
or
add
stos
mov
pop
inc
outs
aad
or
fistp
mov
xchg
dec
jae
mov
test
aam
add
push
sbb
add
pop
add
mov
cmp
out
cmc
jle
(bad)
(bad)
scas
pop
stc
dec
imul
push
xor
add
add
dec
cmp
dec
mov
xchg
in
ds
in
adc
mov
mov
mov
call
mov
add
sbb
mov
add
jle
sahf
jne
lods
fisttp
out
jle
cmps
test
cmps
jmp
dec
cmc
mov
sub
int
adc
inc
and
add
cmp
jp
mov
jecxz
adc
add
cld
xlat
call
adc
mov
iret
mov
mov
xchg
add
dec
mov
add
add
add
add
enter
loop
adc
data16
and
dec
fld
gs
sub
push
pop
and
outs
fwait
test
xor
(bad)
iret
daa
push
icebp
and
jae
xor
inc
xor
into
sbb
mov
sub
mov
in
ja
mov
or
sbb
add
iret
jmp
cmp
mov
xchg
xor
mov
outs
cmp
pop
shl
arpl
dec
pop
push
lods
aad
push
jmp
sbb
mov
sub
push
mov
xchg
push
mov
(bad)
mov
pop
push
fcmovbe
add
jmp
arpl
and
or
dec
mov
int
dec
pop
stc
rol
jl
leave
adc
mov
leave
add
mov
test
sti
inc
sub
repnz
pop
mov
icebp
stos
hlt
cmp
ror
or
mov
add
add
add
sub
ror
stos
movs
cmp
sti
popa
cmps
pop
push
dec
arpl
push
(bad)
out
fistp
mov
aam
(bad)
xchg
and
data16
add
cmp
mov
out
mov
pop
lock
or
data16
and
cmp
add
xor
fs
mov
add
stos
mov
ss
arpl
push
mov
push
not
inc
lahf
ds
xor
pushf
sbb
jno
ror
cmc
xchg
lods
sub
inc
push
out
pop
cmp
rcr
or
sti
sbb
lds
add
jnp
out
pop
lods
outs
jb
leave
push
mov
cs
push
mov
xor
cmp
add
or
xlat
lock
or
rol
mov
mov
sub
sub
cmp
adc
push
add
or
xchg
sar
push
movs
mov
mov
sahf
inc
dec
adc
pop
neg
pop
xchg
mov
jge
repz
add
add
add
add
pushf
ror
leave
mov
lds
imul
push
jl
sti
jp
push
loop
imul
inc
sub
push
test
cmp
push
addr16
shl
sbb
pop
test
jo
clc
sbb
mov
cmp
out
rol
mov
add
lods
sti
mov
imul
mov
cmc
sbb
nop
mov
or
sbb
mov
sub
ds
and
mov
(bad)
lea
xchg
lds
jecxz
in
nop
mov
das
lahf
pop
in
fisubr
push
push
div
xor
add
ins
test
mov
pushf
retf
in
pop
ret
mov
addr16
jo
xlat
std
inc
mov
popf
icebp
jg
mov
rcl
mov
pushf
jne
mov
xchg
mov
sti
jno
frstor
retf
loop
push
scas
lock
inc
test
cwde
and
test
fist
call
popf
xchg
and
add
fdivr
in
or
scas
shl
cmp
lds
fldcw
loope
or
ins
in
sub
or
mov
jle
add
mov
adc
and
and
pop
out
sub
ins
push
imul
ror
sbb
dec
add
aam
data16
add
js
cdq
int
push
clc
mov
cs
out
hlt
mov
pop
call
mov
int
repnz
pop
outs
pusha
stc
(bad)
lds
in
jnp
mov
fnsave
mov
adc
jmp
in
popa
add
cld
test
mov
adc
pop
ss
and
push
mov
ds
jbe
shr
aam
xor
into
int
aas
scas
test
adc
inc
push
inc
and
push
jne
jbe
(bad)
fs
dec
ja
fwait
mov
adc
test
cwde
in
push
lock
jl
add
inc
outs
push
lea
xor
movnti
addr16
push
xor
retf
movs
fimul
lock
sbb
stc
std
popa
mul
pop
pop
xchg
mov
pop
retf
dec
xchg
lea
mov
lods
cdq
inc
add
cld
push
aam
adc
mov
cmp
inc
cmp
or
add
add
add
add
(bad)
out
dec
add
cmps
(bad)
cwde
ret
and
mov
inc
sbb
popf
iret
clc
jb
cmp
jnp
mov
pusha
(bad)
outs
adc
outs
pop
dec
movs
or
inc
ins
xor
out
pop
pop
je
cmp
out
cmp
in
dec
or
inc
outs
add
push
dec
gs
into
sub
push
lods
dec
lahf
sbb
(bad)
xchg
xor
cmp
push
in
cs
lea
ret
inc
mov
pop
retf
jp
sub
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jbe
sldt
add
std
add
bound
sti
call
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
adc
mov
add
scas
add
fisubr
add
fld
add
fsubr
add
fldcw
sahf
scas
add
scas
scas
add
scas
scas
add
pushf
scas
add
pushf
scas
add
lea
add
bound
add
jae
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
out
add
out
add
(bad)
scas
add
(bad)
scas
add
in
add
in
add
fldcw
jmp
mov
add
scas
or
push
mov
add
scas
or
push
mov
add
mov
add
scas
or
loop
or
mov
scas
or
push
scas
or
loop
or
mov
add
lods
or
and
or
movs
scas
or
push
mov
add
lods
or
inc
scas
or
les
or
mov
or
hlt
lods
or
je
or
add
or
test
or
push
scas
or
in
or
fs
or
pushf
lods
or
sbb
or
in
lods
or
ins
scas
or
mov
scas
or
add
sub
or
lods
mov
add
add
mov
add
or
dec
lods
or
int3
mov
add
or
sub
or
pop
mov
add
mov
add
or
mov
lods
or
mov
lods
or
push
lods
or
mov
or
add
dec
mov
add
lods
or
push
lods
or
push
mov
add
lods
or
push
mov
add
lods
or
push
mov
add
mov
add
lods
or
loopne
or
mov
lods
or
push
lods
or
loopne
or
mov
stos
or
daa
lods
or
cmps
lods
or
push
mov
add
stos
or
add
inc
lods
or
(bad)
lods
or
aaa
lods
or
mov
or
imul
or
pop
lods
or
xchg
add
or
out
or
lods
or
lahf
stos
or
pop
lods
or
out
stos
or
outs
lods
or
mov
lods
or
das
mov
add
stos
or
out
mov
add
add
mov
add
or
iret
mov
add
mov
add
stos
or
fwait
mov
add
or
(bad)
or
mov
stos
or
mov
stos
or
imul
add
stos
or
dec
mov
add
stos
or
imul
add
or
add
rep
or
push
mov
add
stos
or
push
mov
add
mov
add
stos
or
jecxz
or
mov
stos
or
push
stos
or
jecxz
or
mov
test
std
push
stos
std
inc
mov
push
std
push
std
inc
std
inc
std
call
add
stos
std
jmp
std
call
mov
jmp
std
jmp
std
call
mov
jmp
mov
(bad)
(bad)
std
dec
mov
dec
test
std
(bad)
jge
std
dec
mov
(bad)
mov
mov
(bad)
in
test
std
inc
add
mov
call
mov
jmp
std
jmp
std
(bad)
mov
mov
dec
mov
(bad)
std
test
std
dec
mov
call
mov
jmp
scas
std
call
test
std
(bad)
jmp
scas
std
(bad)
fnstenv
fldcw
std
(bad)
jns
std
(bad)
stc
scas
std
(bad)
stc
scas
std
dec
test
std
(bad)
stc
scas
std
(bad)
stc
scas
std
(bad)
cmp
std
dec
mov
dec
scas
std
(bad)
jns
std
jmp
std
dec
std
dec
std
call
mov
jmp
std
jmp
std
call
mov
dec
scas
std
inc
add
std
jmp
std
jmp
scas
std
push
mov
call
scas
std
jmp
scas
std
push
scas
std
call
test
call
test
std
push
std
call
stos
std
push
test
inc
test
std
push
test
std
push
scas
std
jmp
stos
std
jmp
test
push
std
inc
add
test
std
call
test
inc
stos
std
jmp
std
call
scas
std
jmp
stos
std
jmp
test
jmp
scas
repz
scas
repz
scas
repz
repz
test
repz
test
repz
add
scas
repz
repz
repz
scas
repz
repz
cmp
repz
cmp
repz
repz
scas
repz
lods
or
gs
or
adc
scas
or
test
or
cmc
lods
or
jne
or
cmps
lods
stc
push
lods
stc
inc
add
lods
stc
jmp
lods
stc
inc
lods
stc
push
jmp
call
jmp
stc
jmp
lods
stc
call
stc
inc
stc
jmp
lods
stc
push
lods
stc
jmp
lods
stc
call
lods
stc
jmp
lods
stc
jmp
lods
stc
call
lods
stc
inc
lods
stc
jmp
lods
stc
push
lods
stc
inc
add
lods
stc
(bad)
(bad)
jmp
stos
add
fisubr
test
movs
or
scas
movs
or
lahf
mov
std
or
or
pop
cmps
or
pop
cmps
or
ins
movs
pop
or
pop
or
pop
or
pop
or
cld
or
cld
or
mov
push
mov
cld
or
mov
cld
or
mov
add
jecxz
add
repz
add
jecxz
add
shl
dec
shl
dec
mov
mov
dec
add
pusha
movs
dec
jo
dec
pusha
movs
dec
push
movs
sti
push
push
movs
sti
push
and
push
xor
push
and
push
adc
push
loope
sti
push
shl
sti
push
shl
sti
push
mov
sti
push
(bad)
stos
adc
add
les
add
stos
mov
push
push
enter
mov
mov
sbb
jle
sbb
outs
mov
sbb
sbb
pop
mov
sbb
or
sbb
mov
sbb
sbb
sbb
sbb
sub
sbb
sbb
sbb
sbb
sbb
sub
sbb
sub
sbb
add
jge
pop
sbb
pop
sbb
scas
pop
sbb
scas
pop
sbb
scas
pop
sbb
scas
pop
sbb
scas
pop
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
movs
or
bound
or
inc
movs
or
xor
inc
movs
or
and
xor
sbb
inc
movs
adc
inc
movs
adc
add
sbb
jecxz
adc
mov
adc
(bad)
scas
add
fimul
repz
sahf
mov
pop
or
mov
or
add
add
add
mov
mov
push
xchg
adc
ja
add
adc
adc
adc
mov
add
dec
mov
add
sub
adc
cmp
or
or
push
push
call
pushf
add
add
leave
pushf
add
mov
pushf
add
jle
sbb
jle
sbb
scas
cmps
sbb
scas
cmps
sbb
sahf
cmps
sbb
sahf
cmps
sbb
scas
cmps
sbb
scas
cmps
sbb
jg
or
sbb
or
sbb
or
sbb
stos
or
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sub
sbb
sub
sbb
jge
pop
sbb
pop
sbb
cmps
pop
sbb
cmps
pop
sbb
cmps
pop
sbb
cmps
pop
sbb
cmps
pop
sbb
scas
add
xlat
scas
add
movs
scas
add
movs
scas
add
call
add
scas
add
mov
add
bound
push
scas
add
inc
scas
add
dec
scas
add
cs
add
inc
scas
add
ss
add
cs
add
push
scas
add
dec
scas
add
push
mov
add
mov
add
scas
add
xchg
scas
add
imul
add
inc
scas
add
(bad)
lods
add
movzx
add
lods
add
out
add
aam
add
aad
stos
lods
add
cwde
lods
add
scas
lods
add
xchg
lods
add
mov
add
scas
lods
add
jbe
add
data16
add
mov
add
mov
add
mov
add
add
out
add
push
scas
add
push
scas
add
es
jmp
or
call
mov
add
mov
add
popf
add
movs
add
push
or
push
std
hlt
jmp
ins
add
out
add
mov
cmc
call
mov
add
mov
add
or
(bad)
mov
add
mov
add
or
add
mov
add
mov
add
mov
add
loopne
inc
or
call
pop
add
sbb
data16
add
add
cmp
push
mov
add
mov
add
mov
add
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
call
mov
add
mov
add
or
add
mov
add
mov
add
or
add
mov
add
add
add
call
add
add
fld
inc
mov
add
push
add
adc
data16
add
jno
add
add
or
add
add
add
add
add
or
add
add
add
or
add
mov
call
add
add
out
verw
mov
add
add
cmps
add
add
mov
add
add
add
add
call
add
add
fld
inc
mov
call
push
add
pop
add
mov
dec
mov
add
ja
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
mov
call
add
out
add
es
inc
mov
add
add
cmps
add
add
mov
call
add
add
add
call
or
add
loope
add
inc
mov
call
dec
add
or
data16
add
imul
or
add
or
add
add
or
or
add
or
call
or
out
cmp
out
icebp
add
or
out
push
add
mov
add
or
cmps
or
add
add
mov
add
or
add
or
call
or
add
fild
inc
mov
call
dec
add
push
add
pop
inc
mov
add
outs
add
or
add
pop
iret
add
add
add
or
add
pop
scas
add
or
call
or
add
out
ds
push
out
add
mov
call
pop
dec
add
pop
or
mov
inc
lds
add
push
mov
xchg
pop
pop
add
push
cmps
add
pop
jp
popw
cmp
data16
add
or
push
pop
push
add
adc
data16
add
add
jb
es
xor
es
add
add
pop
bound
es
and
add
add
pop
add
push
inc
add
add
add
stos
(bad)
call
push
push
add
push
adc
stos
push
rol
stos
pop
add
push
jo
cmps
push
xor
cmps
add
add
push
and
cmps
add
add
add
add
add
push
add
push
inc
add
rol
inc
stos
repz
pop
add
sbb
add
add
js
es
cmp
es
add
add
push
push
add
add
add
push
mov
out
dec
add
add
add
stos
stc
call
add
add
add
es
cmc
inc
stos
das
add
add
and
cmps
add
call
add
fwait
add
add
xor
data16
add
std
call
dec
add
or
data16
add
pop
add
ins
add
add
retf
add
add
add
es
stos
add
add
jl
out
cmp
out
jmp
mov
add
(bad)
add
add
add
add
test
add
add
add
add
add
add
call
add
add
(bad)
add
idiv
add
push
add
add
or
add
aaa
add
ins
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
test
call
add
out
or
stos
add
add
test
add
add
cmps
add
add
add
test
add
add
add
add
call
add
add
fiadd
inc
lods
or
push
add
add
add
mov
dec
lods
dec
add
jno
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
(bad)
call
add
out
verw
stos
pop
add
add
cmps
add
add
stos
pop
add
add
add
add
call
add
add
fiadd
inc
stos
repz
push
add
pop
add
mov
dec
stos
aas
add
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
stc
call
add
out
add
es
inc
stos
das
add
add
cmps
add
add
stos
sti
call
add
add
add
inc
add
stc
xor
data16
loope
inc
scas
std
call
dec
add
or
data16
xchg
add
pop
add
push
es
sub
es
rol
inc
scas
pop
add
stc
pop
add
stc
sbb
es
mov
push
stc
cli
call
stc
jp
out
cmp
out
icebp
add
clc
inc
add
clc
add
add
add
lods
or
(bad)
clc
add
idiv
add
clc
adc
add
clc
jne
data16
xor
add
idiv
push
clc
dec
add
or
add
aaa
add
ins
add
clc
sub
add
add
add
clc
sbb
add
add
add
add
imul
call
clc
jge
out
cmp
add
lods
hlt
call
test
mov
inc
lds
add
test
(bad)
lods
add
xchg
neg
cmps
neg
add
idiv
call
idiv
add
out
inc
cld
cld
call
push
add
add
adc
data16
xchg
add
dec
add
jno
div
add
cli
xlat
add
add
mul
mul
add
cli
mov
push
test
add
test
stc
test
(bad)
test
test
stos
idiv
add
imul
cmps
imul
add
sti
pop
add
add
neg
add
idiv
call
idiv
add
rol
inc
sti
repz
push
add
pop
add
add
sti
aas
add
ja
div
add
stc
ret
add
add
mul
mul
add
stc
mov
add
test
out
jecxz
add
(bad)
cli
stc
call
cmc
inc
add
cmc
add
es
inc
cli
das
add
cmc
arpl
cmps
cmc
and
cmps
clc
mov
call
cmc
adc
cmps
clc
fwait
add
cmc
jae
data16
xor
data16
fild
inc
cli
std
call
dec
add
or
data16
mov
dec
cli
pop
add
imul
cmc
sub
add
es
retf
add
add
cmc
pop
add
cmc
sbb
es
stos
add
cmc
sti
call
cmc
jnp
out
cmp
out
jmp
(bad)
div
dec
div
add
div
rdrand
stc
(bad)
jg
cmc
add
div
aas
(bad)
idiv
call
not
pop
test
std
(bad)
jl
cmc
pop
add
js
jne
cmps
clc
hlt
inc
(bad)
dec
jne
xor
div
pop
inc
div
(bad)
jg
cmc
add
and
cmc
pop
inc
idiv
call
div
add
mul
das
add
add
jl
cmc
or
div
inc
stos
add
add
stos
repz
fild
stc
inc
add
stos
hlt
jmp
stos
add
mov
cmc
call
xchg
pop
data16
fs
sbb
jo
adc
shl
je
loopne
cmp
xor
adc
mov
mov
push
imul
shl
ss
ins
mov
push
stos
add
push
stos
add
test
stos
hlt
(bad)
out
stos
hlt
jmp
adc
add
stos
stc
push
adc
add
stos
idiv
(bad)
stos
and
ret
adc
add
stos
adc
rcr
inc
add
mov
add
inc
add
adc
out
add
sbb
outs
stos
and
out
add
add
arpl
inc
add
stos
add
mov
add
sbb
inc
stos
add
adc
add
jecxz
inc
add
sti
cs
test
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
lock
(bad)
test
add
or
add
test
cmps
test
add
xchg
test
add
mov
add
out
cmp
(bad)
cli
add
xchg
test
cmp
inc
cli
add
shr
add
add
ins
test
cmp
out
or
jns
add
inc
lods
cmp
pusha
scas
add
int
add
mov
cmp
adc
or
sub
push
movs
cmp
in
or
psllq
cmp
in
or
adc
mov
add
cmp
es
adc
stos
cmp
or
add
add
cmp
out
add
add
stos
cmp
in
or
adc
add
out
cmp
enter
je
add
cs
cmp
(bad)
or
add
add
add
add
cmp
mov
mov
add
cmp
jmp
scas
add
cmps
mov
add
mov
add
mov
add
add
jmp
add
add
xor
xor
pop
repnz
inc
mov
add
xor
mov
test
xor
add
and
add
dec
xor
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
mov
add
into
scas
add
scas
jo
adc
scas
fs
scas
add
clc
scas
pop
add
add
scas
pop
add
scas
add
fisubr
pop
add
scas
pop
add
test
jb
xchg
push
add
add
fwait
test
pop
add
pop
add
add
push
add
scas
pop
add
add
push
add
pop
add
scas
pop
add
scas
and
add
jne
add
sub
pop
add
and
mov
pop
add
lods
pop
add
lods
pop
add
lods
push
add
lods
pop
add
lods
jb
and
pop
add
and
add
test
pop
add
test
push
add
test
and
test
dec
lods
push
add
pop
add
lods
and
je
ins
add
lods
pop
add
lods
add
fld
add
lods
and
lds
add
lods
pop
add
lods
push
add
lods
gs
lods
pop
add
lods
pop
add
lods
jb
adc
pop
add
add
and
and
test
pop
add
test
imul
mov
add
mov
jb
inc
lods
push
add
add
add
sub
jg
pop
add
lods
pop
add
pop
add
stos
pop
add
lods
add
lods
outs
add
add
stos
jb
xchg
pop
add
stos
fs
stos
sub
add
lods
pop
add
stos
pop
add
stos
pop
add
lods
pop
add
test
add
stos
test
pop
add
pop
add
test
and
mov
push
add
outs
add
stos
push
add
add
stos
imul
inc
stos
add
fld
pop
add
stos
and
push
stos
inc
add
stos
push
add
outs
add
stos
push
add
stos
imul
(bad)
stos
add
jmp
jb
adc
pop
add
and
and
pop
add
stos
data16
test
and
retf
add
test
jbe
pop
add
add
stos
test
pop
add
add
jb
jg
add
pop
add
and
js
pop
add
stos
pop
add
stos
add
retf
test
jb
xchg
pop
add
add
stos
jb
icebp
test
outs
add
add
stos
push
add
stos
pop
add
stos
add
test
add
sahf
mov
add
mov
add
mov
add
add
xor
add
push
mov
add
mov
add
xor
pop
outs
sbb
cmp
rcr
mov
adc
add
add
add
add
ret
mov
rcr
mov
xor
retf
popa
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
ins
add
mov
add
imul
iret
mov
add
mov
add
mov
add
add
add
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
mov
add
adc
scas
add
scas
and
adc
push
add
mov
add
scas
pop
add
mov
add
scas
pop
add
add
mov
add
ins
add
mov
add
add
stos
mov
add
scas
add
push
add
xor
(bad)
and
pop
or
inc
gs
cmp
scas
add
push
mov
add
add
scas
and
fisubr
jo
shr
add
scas
pop
add
scas
pop
add
add
scas
pop
add
scas
push
add
scas
pop
add
scas
adc
mov
scas
pop
add
scas
pop
add
mov
add
mov
add
mov
add
mov
add
add
mov
mov
add
scas
pop
add
scas
pop
add
pop
add
add
scas
jb
xor
and
enter
xor
jo
mov
add
scas
jb
icebp
lods
pop
add
lods
and
or
pop
add
scas
pop
add
lods
add
mov
add
mov
add
lods
xchg
mov
pop
add
mov
add
push
add
pop
add
jb
cmp
and
lods
add
adc
pop
add
mov
add
lods
jb
shr
add
lods
add
adc
(bad)
push
add
mov
imul
add
xchg
imul
lods
add
cmp
ins
xor
gs
cmc
inc
enter
les
add
jb
jp
outs
imul
add
mov
js
pop
je
mov
add
test
jb
push
dec
xchg
outs
imul
aad
hlt
(bad)
mov
mov
out
add
or
outs
jo
mov
cmps
stos
add
cmps
stos
add
out
stos
inc
add
stos
dec
add
stos
cmp
icebp
stos
aas
add
cmp
inc
mov
add
mov
add
mov
add
mov
add
mov
add
add
cmp
jne
aas
add
inc
add
cmp
jo
dec
add
stos
ins
add
stos
popa
add
stos
dec
add
stos
pop
add
stos
inc
add
stos
inc
add
stos
jb
adc
stos
pop
add
leave
pop
jae
stos
add
dec
hlt
inc
add
xchg
popa
imul
xchg
add
mov
popa
imul
mov
add
pop
add
das
add
add
mov
push
stos
add
sbb
dec
jae
mov
cmp
sub
dec
je
mov
add
sub
pop
add
test
jmp
cmp
stc
test
push
add
stos
add
ror
mov
add
lds
jo
movs
test
pop
add
add
mov
outs
xor
mov
add
mov
add
mov
pop
add
add
mov
add
mov
outs
xor
mov
mov
add
mov
add
mov
add
mov
add
mov
outs
shl
pop
add
mov
add
mov
add
mov
jb
cmp
hlt
(bad)
fidivr
pop
jb
test
pop
add
add
test
push
add
mov
add
(bad)
pop
cmp
sub
pop
cmp
sub
pop
gs
dec
mov
pop
data16
push
gs
hlt
dec
mov
pop
data16
ret
push
gs
xor
or
pop
add
idiv
add
adc
add
es
hlt
call
test
add
cmp
xor
stos
inc
add
stos
es
stos
inc
add
stos
add
pop
test
pop
add
test
add
ja
cmp
mov
add
mov
add
add
stos
add
pop
scas
in
add
scas
popa
add
scas
add
leave
stos
xor
stos
xor
stos
inc
add
stos
es
stos
xor
stos
cmp
scas
add
pop
test
pop
add
test
push
add
test
add
cmp
inc
add
mov
add
stos
xor
scas
es
add
ins
test
push
add
scas
pop
add
data16
scas
ins
add
lods
and
les
push
add
scas
push
add
scas
and
add
popa
add
scas
addr16
lods
add
leave
test
inc
add
test
cmp
test
cs
add
mov
add
mov
add
mov
add
test
sub
test
xor
test
add
test
pop
add
pop
add
jo
cmp
add
lods
and
mov
lods
pop
add
lods
add
mov
cs
add
test
xor
test
add
test
add
test
add
test
add
mov
add
mov
add
mov
add
mov
add
test
sub
add
add
push
lods
add
popa
test
pop
add
lods
add
ins
add
stos
and
add
add
add
add
lods
push
add
push
add
data16
stos
ins
add
lods
push
add
lods
and
add
lods
pop
add
lods
and
add
stos
and
add
imul
xor
push
add
test
add
add
test
nop
test
add
push
stos
add
cmp
and
add
lods
das
add
fisubr
add
stos
ss
lods
sub
add
lods
sub
add
inc
add
lods
cmp
int3
fisubr
xchg
cmp
add
fisubr
(bad)
stos
and
rcr
add
fbstp
add
loope
dec
add
fisubr
add
test
das
add
lods
and
mov
xor
imul
add
ficom
add
test
add
pop
add
test
pop
add
pop
add
stos
pop
add
stos
and
mov
test
imul
add
add
add
jbe
add
imul
mov
pop
add
test
outs
add
stos
imul
sti
test
add
cmps
test
cs
lods
inc
add
lods
xor
lods
sub
add
mov
add
lods
cs
lods
and
call
add
mov
add
fnsave
add
add
cmp
fcom
fcmovnu
xor
add
mov
add
fcom
call
add
fnstsw
add
fdivr
add
fcom
retf
fsubr
add
fcom
(bad)
xor
add
fdiv
add
fdiv
add
fcom
add
(bad)
sub
call
cmp
add
add
data16
and
jmp
and
ss
mov
add
mov
add
mov
add
mov
add
scas
add
dec
mov
add
mov
add
mov
add
scas
push
add
mov
add
mov
add
mov
add
scas
pop
add
scas
and
add
cmps
scas
add
fld
push
add
mov
xor
pusha
jae
mov
addr16
lds
push
imul
imul
add
add
outs
nop
outs
push
mov
add
push
add
adc
sbb
push
add
outs
add
add
scas
and
leave
scas
pop
add
scas
and
int3
scas
outs
add
scas
add
mov
scas
and
in
pop
add
scas
fs
scas
pop
add
scas
pop
add
scas
and
adc
pop
add
scas
add
retf
mov
popa
add
mov
add
add
pop
add
pop
add
scas
imul
push
scas
add
adc
scas
add
inc
scas
add
cmp
pop
add
lods
pop
add
lods
add
rcl
add
rol
clc
nop
or
cmps
lods
add
adc
pop
add
scas
add
add
lods
add
cmp
pop
add
add
mov
pop
arpl
mov
imul
lods
push
add
pop
add
lods
add
jne
push
add
adc
sbb
pop
add
lods
and
cmp
popa
add
lods
add
add
lods
push
add
lods
adc
jmp
add
and
lods
pop
add
lods
push
and
mov
add
mov
add
mov
add
jb
mov
pop
add
mov
add
lods
pop
add
add
pop
add
pop
add
add
lods
add
test
add
lods
and
add
stos
add
loopne
cmp
jle
and
add
stos
and
jecxz
sub
stos
aas
add
xlat
and
int
sub
xlat
inc
add
stos
and
xlat
das
add
xlat
aas
add
movs
cmp
movs
cmp
xchg
sub
add
add
add
add
add
movs
les
retf
gs
hlt
push
stos
add
data16
fwait
into
push
add
push
fs
push
add
movs
sub
movs
xor
mov
add
scas
das
add
scas
aas
add
scas
cmp
scas
and
sbb
aaa
add
scas
cmps
stos
add
les
and
fld
inc
add
movs
cmp
movs
sub
movs
cs
mov
add
scas
inc
add
scas
inc
add
scas
and
popa
scas
inc
add
scas
inc
add
scas
xor
movs
cmp
ss
and
lods
das
add
movs
aas
add
lods
cmp
movs
and
add
and
scas
xor
movs
cs
lods
cmp
scas
cmp
xchg
sub
lods
aaa
add
lods
cmp
lods
sub
lods
inc
add
lods
and
loope
inc
add
movs
and
push
movs
cmp
movs
inc
add
test
pop
jae
(bad)
sub
pop
add
add
test
push
add
mov
add
fisubr
add
fistp
sub
push
add
mov
add
fistp
mov
call
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jo
and
pop
add
test
add
mov
add
test
pop
add
dec
add
pop
add
pop
add
mov
add
frstor
adc
pop
outs
sub
pop
add
fldcw
aam
pop
jo
fstp
mov
fcom
add
adc
outs
and
(bad)
pusha
gs
add
or
outs
outs
adc
push
gs
pop
outs
stc
(bad)
pop
gs
push
and
ret
outs
je
frstor
aam
bound
enter
retf
pop
ins
mov
fild
xchg
mov
ja
pop
outs
jns
pop
outs
xchg
aad
ins
xor
outs
and
popa
and
adc
add
jg
pop
add
push
fs
adc
jbe
ins
je
fist
aam
popa
and
shr
ret
adc
bound
retf
mov
pop
ins
sti
scas
add
int3
scas
pop
add
scas
pop
add
scas
push
add
scas
push
add
scas
pop
add
scas
pop
add
test
jb
data16
add
(bad)
test
pop
add
add
scas
add
xchg
test
jb
push
add
xchg
enter
fidiv
add
add
js
pusha
ins
jg
outs
je
scas
add
jne
inc
add
lods
push
add
scas
cmp
add
add
adc
mov
hlt
call
fistp
push
leave
pop
cmps
lods
add
faddp
popa
add
es
push
gs
lods
add
clc
retf
popa
add
lods
add
test
cmp
push
cmp
mov
ret
xchg
int3
push
arpl
push
cmp
inc
lods
and
push
lods
pop
add
outs
add
lods
pop
add
lods
add
jbe
and
sub
add
add
add
add
lods
push
add
lods
push
add
lods
and
mov
pop
add
lods
data16
add
sti
aam
pop
sbb
pop
push
cmp
pop
push
mov
test
pop
add
test
push
add
add
test
pop
add
stos
jo
adc
pop
add
imul
and
stos
add
out
add
ja
inc
add
cmps
xor
cmps
xor
test
add
cmps
inc
add
cmps
and
mov
cmps
inc
add
cmps
xor
cmps
xor
cmps
xor
stos
and
pusha
lods
sub
add
and
xchg
lods
inc
add
lods
and
xchg
lods
cmp
lods
cs
iret
sbb
add
iret
and
xchg
lods
dec
add
iret
xor
dec
iret
xor
iret
inc
add
into
adc
ds
and
int
cmp
test
inc
add
iret
xor
test
aaa
add
iret
and
into
cs
add
into
aaa
add
into
sub
add
into
and
ror
sub
into
xor
dec
lods
add
test
xor
add
lods
aaa
add
lods
add
jl
push
add
add
add
shr
ret
es
add
inc
into
inc
add
stos
and
fcmovne
sub
add
add
add
add
inc
add
lods
cmp
int
add
lods
cmp
sub
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
test
das
add
int
add
int
add
lods
sub
xchg
test
xor
add
push
add
add
js
data16
add
js
jne
pop
add
mov
add
mov
add
mov
add
js
xor
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
int3
and
add
add
and
iret
int3
aaa
add
mov
add
lods
and
xchg
lods
xor
lods
and
imul
add
mov
add
mov
add
pop
add
dec
add
mov
add
sub
sub
fs
scas
add
js
add
xor
pop
add
scas
push
add
add
add
add
mov
add
ret
mov
(bad)
pop
outs
mov
add
add
pop
add
scas
add
mov
add
jb
cmp
add
(bad)
jmp
cmp
jmp
(bad)
mov
add
mov
add
add
xchg
mov
add
add
mov
add
mov
add
retf
push
scas
add
(bad)
ins
(bad)
rcr
into
scas
add
mov
hlt
dec
rcr
mov
scas
add
add
scas
inc
add
scas
aas
add
(bad)
fs
add
hlt
call
shr
aaa
aad
call
add
add
mov
add
add
mov
pop
outs
data16
add
inc
retf
pop
retf
lea
add
jp
arpl
rcl
push
scas
add
adc
scas
add
ja
cs
leave
xor
xchg
lods
xor
lods
inc
add
retf
mov
pop
arpl
shl
inc
leave
ds
leave
sub
add
lods
add
clc
fsub
adc
popa
gs
lods
add
or
pusha
gs
lods
add
cmp
pusha
gs
lods
add
rcl
outs
je
mov
add
leave
xor
lods
add
ss
and
sub
xor
leave
xor
lods
add
push
leave
xor
add
lods
xor
enter
add
lods
add
xor
outs
push
out
add
add
lods
pop
add
lods
push
add
lods
add
out
int
outs
(bad)
lods
add
fild
add
retf
pop
outs
or
hlt
push
pop
outs
cmp
pop
imul
add
dec
push
add
mov
add
jnp
push
je
aad
gs
add
ja
hlt
inc
add
je
add
jbe
and
out
add
xor
add
stos
jo
adc
pop
add
stos
jb
sti
stos
outs
add
stos
add
mov
(bad)
xor
add
ffree
ds
(bad)
adc
popa
mov
add
mov
add
mov
add
add
dec
scas
xor
mov
add
mov
add
mov
add
scas
cmp
scas
aaa
add
scas
das
add
scas
xor
scas
sub
stos
cs
scas
xor
scas
and
popa
mov
add
scas
aaa
add
mov
add
scas
sub
add
scas
dec
add
scas
xor
scas
cmp
stos
and
scas
das
add
scas
aas
add
scas
cmp
scas
add
leave
scas
xor
scas
and
mov
add
mov
add
add
inc
scas
inc
add
scas
sub
pop
scas
xor
scas
xor
mov
add
scas
xor
scas
cmp
scas
aaa
scas
cmp
lods
inc
add
lods
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
test
xor
add
lods
cs
scas
cmp
(bad)
test
sub
lods
sub
lods
cmp
test
xor
mov
add
mov
add
add
mov
add
aad
add
iret
push
add
test
add
js
hlt
call
inc
add
xor
(bad)
inc
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
cmps
mov
add
lods
cs
lods
inc
add
lods
xor
lods
xor
lods
and
fs
add
lods
dec
add
mov
add
mov
add
test
sub
test
xor
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
lock
dec
add
mov
add
mov
add
test
cmp
test
cmp
lods
xor
stos
sub
stos
cmp
stos
and
fisubr
aaa
add
stos
cmp
xchg
scas
add
xchg
scas
add
jo
dec
add
mov
add
mov
add
test
sub
test
sub
cs
mov
add
scas
cs
mov
add
mov
add
mov
add
scas
sub
mov
add
mov
add
scas
add
out
add
xchg
test
pop
add
scas
dec
add
scas
pop
add
scas
sub
sbb
pop
add
scas
push
add
scas
arpl
add
adc
push
add
test
pop
add
test
add
push
scas
add
sub
dec
add
jb
xchg
test
sub
sub
pop
add
lods
pop
add
scas
pop
add
scas
daa
add
scas
jo
retf
lods
pop
add
scas
push
add
lods
pop
add
add
push
add
lods
pop
add
lods
xor
cmps
lods
add
icebp
lods
push
add
scas
pop
add
lods
dec
add
scas
jb
adc
pop
add
sub
sub
pop
add
test
add
xor
and
add
lods
and
push
test
aas
add
test
add
add
mov
add
lods
xor
add
test
add
mov
add
test
xor
out
sub
add
lods
add
mov
push
add
lods
pop
add
lods
dec
add
lods
jb
and
pop
add
sub
sbb
add
popa
add
test
daa
add
add
test
pop
add
test
pop
add
test
add
xor
add
dec
add
lods
jb
and
pop
add
stos
sub
retf
add
lods
pop
add
stos
popa
add
stos
data16
stos
push
add
stos
pop
add
lods
dec
add
add
stos
jb
and
pop
add
sub
sbb
add
pop
add
test
dec
add
test
pop
add
test
pop
add
test
pop
add
test
pop
add
stos
xor
es
add
jno
push
add
stos
pop
add
add
stos
dec
add
stos
pop
add
sub
sbb
pop
add
stos
pop
add
stos
pop
add
stos
dec
add
stos
pop
add
stos
add
shr
add
test
jb
aam
pop
add
test
ins
add
stos
pop
add
test
js
pop
add
test
push
add
outs
add
test
and
jae
and
out
add
jnp
sbb
add
sub
out
add
xchg
adc
(bad)
test
dec
add
test
dec
add
test
xor
add
add
test
inc
add
mov
add
xlat
outs
je
aad
cmp
cmp
outs
add
xor
es
add
add
imul
xor
push
add
mov
add
mov
add
mov
add
add
add
mov
add
sti
ret
adc
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
push
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
retf
mov
scas
add
jno
pop
add
scas
imul
out
scas
dec
add
scas
pop
add
mov
add
mov
add
scas
push
add
mov
add
scas
add
js
pop
add
mov
add
mov
add
scas
js
pop
add
mov
add
add
xor
pop
add
outs
add
mov
add
mov
add
scas
sub
xor
pop
add
int
popa
mov
int
add
scas
push
add
scas
pop
add
scas
ins
add
scas
fs
scas
popa
add
add
scas
xor
xchg
scas
add
or
push
add
add
pop
outs
leave
xchg
push
inc
xchg
pop
ins
mov
mov
push
inc
xchg
push
jmp
push
ins
ja
adc
pop
xchg
push
outs
adc
push
je
scas
add
cmp
ins
ret
popa
add
retf
addr16
pop
jb
mov
pop
ins
adc
outs
in
pop
jb
shr
xor
adc
dec
pop
jne
rcr
or
hlt
(bad)
cmp
push
ins
ret
popa
retf
addr16
ins
gs
push
and
(bad)
hlt
jmp
outs
add
or
pusha
outs
jne
push
(bad)
sti
sub
push
add
sbb
adc
xchg
es
sub
jge
pop
rcr
lock
add
loopne
daa
push
jo
sbb
jmp
adc
movs
out
add
and
add
add
add
mov
out
xor
mov
cli
sbb
jnp
add
cmp
fdivr
jbe
into
xchg
dec
cmps
xor
movs
mov
cld
movs
mov
fcomp
adc
(bad)
aam
ins
rol
mov
xchg
fld
sbb
lods
jne
dec
adc
add
imul
div
aaa
ja
add
and
out
cli
cmp
inc
or
adc
lahf
xchg
sbb
and
and
call
add
and
loop
and
mov
sbb
push
je
mov
fmulp
adc
cmc
outs
cmp
aam
add
and
cli
mov
add
add
add
add
pop
outs
inc
add
sub
cdq
dec
bound
shl
stos
or
enter
mov
dec
mov
loope
(bad)
mov
or
loop
outs
dec
jecxz
fs
pushf
xor
stc
add
pop
(bad)
repnz
fisubr
(bad)
(bad)
fisttp
pop
xor
add
inc
inc
mov
int3
ror
loope
push
loopne
dec
imul
ficom
xrelease
push
pushf
(bad)
movs
cmp
mov
jge
push
push
xor
inc
sti
scas
and
mov
sub
sub
mov
jnp
nop
xchg
xor
jbe
mov
add
jb
pop
xor
imul
xor
or
sar
jo
add
mov
push
pop
mov
pushf
sbb
mov
ins
or
push
pusha
adc
cmp
dec
fist
pop
jmp
push
inc
fidivr
aam
out
aaa
ret
mov
xchg
add
stos
jbe
sub
pop
cmp
jne
outs
push
iret
or
jo
in
lods
sub
retf
lods
ss
push
(bad)
and
xor
inc
inc
repz
push
pop
unpckhps
mul
inc
js
retf
mov
adc
(bad)
jns
xchg
mov
and
and
daa
xchg
add
in
inc
cmp
add
mov
cmp
cmp
mov
retf
adc
mov
out
das
cmps
inc
dec
pop
add
lea
cmc
mov
aas
ins
mov
nop
stos
mov
cmp
inc
inc
pop
repnz
pop
mov
shl
test
dec
xchg
sub
cmp
adc
add
cmc
mov
loop
pop
pushf
mov
fcom
stc
jno
xor
in
jge
pusha
dec
ror
xchg
mov
xor
and
jmp
pop
xor
nop
push
clc
stc
int3
out
rol
loop
lods
fstp
icebp
pop
aaa
jmp
imul
sbb
push
and
gs
rcr
mov
std
mov
xor
lds
imul
daa
pop
and
(bad)
icebp
movs
(bad)
xchg
mov
loop
push
clc
lods
mov
mov
cwde
out
and
mov
add
sahf
push
test
mov
xchg
add
mov
inc
mov
or
icebp
into
pop
(bad)
in
sbb
clc
xor
(bad)
ds
mov
shl
add
fcomp
pop
jae
js
std
cmp
jo
jge
sub
adc
movs
mov
sub
jle
mov
add
pop
xchg
jns
dec
int3
mov
scas
fimul
shl
xor
xchg
rol
xchg
loop
add
call
into
pop
rol
test
rol
rcr
dec
outs
aam
iret
xor
sbb
movs
xor
mov
clc
add
movs
jns
add
popa
ficom
popa
sub
inc
rol
push
mov
jle
dec
mov
stc
and
(bad)
and
mov
ret
ja
rcr
push
push
stos
mov
and
mov
jmp
pop
jno
or
or
sbb
loop
xlat
hlt
mov
movs
test
xchg
inc
mov
les
mov
rcr
jbe
add
push
out
jecxz
or
mov
push
test
sub
pushf
push
test
dec
inc
mov
enter
mov
mov
push
movd
sbb
jmp
mov
fistp
pop
fiadd
retf
in
ficomp
pop
add
pop
pop
or
jne
aas
mov
mov
xor
(bad)
adc
hlt
mov
dec
inc
xchg
push
mov
(bad)
push
shr
pop
dec
(bad)
push
dec
and
pop
or
cmp
xor
and
push
xchg
loopne
cmp
add
mov
jno
add
inc
add
std
or
adc
mov
cwde
ins
fnstcw
xor
inc
push
sbb
lods
movs
bound
pushf
fcomp
sub
pop
and
sub
mov
aad
add
pop
cmp
shl
sub
sub
cmc
in
xchg
(bad)
loop
or
pop
sbb
push
in
shr
push
clc
jns
(bad)
lahf
jns
cmp
add
daa
sub
out
cwde
mov
mov
mov
sub
rcr
add
xchg
ins
frstor
shr
mov
push
pop
jmp
or
hlt
ja
inc
lods
push
je
fcmovne
sbb
pusha
inc
pop
shl
jns
mov
xor
cmp
shr
cmovge
rol
add
enter
adc
rcr
mov
gs
dec
adc
in
jbe
xchg
xor
sbb
loope
push
xor
mov
dec
lods
pushf
jmp
fcomp
adc
fstp
and
sbb
les
repz
xor
add
add
add
add
in
repnz
lock
add
gs
xchg
xchg
mov
ins
ret
jmp
sub
mov
in
jnp
neg
dec
out
test
cmp
sub
inc
mov
dec
jmp
mov
shl
xchg
mov
xchg
(bad)
loopne
out
rcl
out
mov
add
les
mov
mov
nop
out
inc
retf
dec
cmp
inc
cmps
mov
inc
ret
mov
icebp
and
call
pop
and
xor
push
std
out
imul
cmps
mov
jmp
or
add
outs
push
ja
mov
add
sbb
push
jb
pop
ret
stos
jno
neg
dec
pusha
or
pop
clc
ins
sub
arpl
(bad)
cmp
jnp
adc
and
mov
movs
push
xchg
in
xor
dec
or
test
jge
(bad)
cmp
jmp
test
shl
jne
dec
push
mov
inc
sub
sub
icebp
sub
sub
cmc
add
mov
cwde
fisttp
(bad)
lods
inc
aaa
(bad)
jg
xchg
jns
sub
inc
les
jno
mov
pop
(bad)
in
ja
scas
push
push
cli
setbe
mov
add
sbb
aas
mov
jge
cs
inc
sbb
nop
rcl
mov
push
popa
das
call
sub
call
clc
lahf
pop
dec
test
dec
sahf
aaa
push
and
mov
xor
fst
fwait
adc
jge
xchg
mov
test
cmc
scas
add
neg
movs
pusha
inc
data16
adc
lods
adc
retf
mul
sub
push
jp
neg
sub
mov
xor
(bad)
dec
fidiv
imul
push
(bad)
fdiv
fcomi
das
daa
jnp
popf
jb
push
outs
(bad)
or
xchg
or
mov
leave
mov
add
cld
jg
stc
mov
sbb
xchg
jmp
fsubr
pop
and
nop
pusha
outs
add
xchg
hlt
push
stos
add
(bad)
stos
push
add
scas
add
jbe
or
ja
add
xchg
add
jbe
push
add
scas
add
xchg
ss
pop
add
scas
add
inc
stos
and
ss
add
ss
xor
add
sub
pop
mov
add
mov
add
mov
add
mov
add
stos
push
add
pop
add
stos
add
stos
pop
add
jg
outs
sub
and
adc
popa
gs
add
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
mov
add
test
sub
outs
sbb
jb
nop
push
add
stos
xor
xor
pop
add
test
out
add
ret
add
test
and
imul
pop
add
test
inc
add
stos
jno
sub
mov
add
add
data16
add
test
pop
add
test
cmp
sub
add
mov
add
add
js
push
mov
add
mov
add
mov
add
mov
add
mov
add
test
add
mov
add
mov
add
mov
add
mov
add
push
add
mov
add
mov
add
mov
add
mov
add
add
xchg
mov
add
test
xor
add
test
aas
add
test
pop
add
test
pop
add
pop
add
mov
add
mov
add
push
add
scas
add
mov
add
jno
iret
scas
pop
add
scas
add
add
push
add
mov
add
add
scas
pop
add
scas
push
add
mov
add
test
js
mov
scas
add
je
and
js
and
mov
test
add
scas
push
add
test
push
add
scas
add
inc
scas
adc
inc
scas
push
add
scas
outs
add
sbb
add
add
js
jbe
pop
add
test
and
mov
and
cmps
scas
sbb
(bad)
scas
push
add
scas
and
es
pop
add
scas
push
add
scas
and
aam
and
add
xor
sub
add
test
and
sub
add
scas
adc
ss
push
add
add
scas
sbb
add
scas
push
add
push
add
scas
add
je
and
jno
popa
add
lods
jno
int
imul
ret
add
lods
push
add
lods
pop
add
scas
and
cmps
lods
add
out
and
in
xor
fisubr
and
add
add
add
test
dec
add
test
cmp
xchg
test
dec
add
inc
add
inc
add
test
pop
add
lods
push
add
lods
push
add
lods
pop
add
lods
outs
add
add
lods
bound
jmp
lods
jbe
cmps
lods
add
out
cs
mov
aaa
into
mov
inc
in
aaa
inc
pop
popa
cmp
ins
aas
dec
mov
gs
push
mov
pop
mov
popa
fs
xchg
mov
jg
jo
jnp
je
ja
js
jae
jmp
mov
and
into
mov
bound
add
lods
add
test
xchg
test
daa
add
stos
and
add
stos
pop
add
stos
push
add
stos
push
add
stos
add
(bad)
jg
js
arpl
mov
ja
dec
hlt
xchg
xlat
imul
xor
add
xchg
bound
gs
push
xchg
mov
pop
jns
jb
cmp
mov
pop
ss
xchg
es
add
mov
sub
mov
and
cmp
pop
xor
xchg
xchg
out
cmp
jg
pop
aaa
retf
mov
gs
add
mov
xor
add
cmp
add
stos
and
add
xchg
stos
add
cmc
stos
aaa
add
stos
aaa
add
inc
add
add
xchg
aaa
add
add
jns
inc
add
add
push
outs
add
push
add
stos
add
js
push
add
test
add
jle
imul
shr
add
test
mov
stos
outs
add
test
add
out
test
imul
test
outs
add
push
add
test
add
stos
push
add
add
cs
imul
mov
add
mov
add
mov
add
mov
add
pop
add
push
add
mov
add
add
imul
xor
jno
push
mov
add
mov
add
mov
add
mov
add
mov
add
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
into
mov
add
mov
add
mov
add
add
jp
pop
add
mov
add
push
add
mov
add
popa
add
mov
add
scas
popa
add
mov
add
scas
pop
add
scas
push
add
add
scas
imul
push
mov
add
mov
add
scas
pop
add
scas
popa
add
scas
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
add
mov
add
scas
push
add
scas
add
push
scas
outs
add
scas
push
add
add
push
add
scas
push
add
scas
jno
(bad)
scas
add
es
outs
add
scas
push
add
push
add
scas
push
add
scas
pop
add
scas
jno
push
scas
cmp
call
scas
outs
add
scas
push
add
push
add
mov
add
mov
add
mov
add
mov
add
add
test
mov
add
add
mov
add
imul
mov
add
pop
add
scas
add
and
scas
add
pop
add
scas
cmp
push
lods
pop
add
lods
add
sub
jo
out
add
adc
fs
lods
add
scas
lods
add
or
jo
adc
cmp
add
pop
scas
pop
add
lods
add
es
add
mov
add
mov
add
mov
add
mov
add
add
je
cmp
add
mov
add
mov
add
inc
add
lods
push
add
add
retf
lods
add
mov
lods
sub
pop
add
lods
add
icebp
lods
pop
add
lods
popa
add
lods
jno
add
lods
pop
add
lods
pop
add
lods
push
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
xchg
test
inc
add
push
add
popa
add
lods
outs
add
lods
fs
stos
inc
add
lods
push
add
add
shr
add
lods
push
add
stos
push
add
stos
add
lods
push
add
jno
push
lods
pop
add
lods
push
add
pop
add
mov
add
mov
add
mov
add
add
add
nop
mov
add
mov
add
stos
add
jne
pop
je
pop
push
and
fs
mov
add
mov
cmp
outs
cmp
adc
xor
ja
dec
push
dec
pusha
jb
adc
gs
pop
pop
outs
stc
mov
add
add
push
stos
jo
sti
stos
pop
add
stos
pop
add
stos
push
add
mov
add
mov
add
stos
add
push
add
mov
add
add
test
je
pop
outs
fs
pop
arpl
push
popa
and
inc
push
je
mov
add
stos
add
add
dec
add
add
sub
scas
daa
add
scas
xor
scas
and
fldcw
inc
add
scas
and
add
test
inc
add
lods
ds
lods
das
add
lods
cs
lods
xor
mov
add
movs
das
add
movs
cs
movs
daa
add
movs
cmp
movs
add
cdq
test
jo
add
outs
test
pop
add
test
push
add
add
and
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
gs
add
pop
dec
pusha
gs
pop
gs
jno
retf
inc
pop
jb
dec
push
dec
jp
jbe
pop
push
xor
pop
push
mov
test
outs
nop
test
push
add
mov
add
imul
pop
bound
adc
push
pop
jp
push
or
pop
add
out
jno
(bad)
lds
data16
inc
pop
push
inc
pop
outs
add
jb
pop
addr16
pop
imul
xor
ficomp
sub
xchg
scas
add
xor
add
aam
add
add
stos
test
add
mov
scas
add
push
outs
add
scas
add
jge
imul
add
mov
add
jge
push
add
scas
add
xor
push
add
scas
add
xor
add
mov
fs
scas
add
(bad)
scas
jbe
(bad)
scas
add
jmp
jbe
cmps
scas
add
std
scas
imul
scas
add
repz
pop
add
scas
push
add
test
add
retf
add
add
add
stos
test
add
mov
scas
add
jp
arpl
lods
inc
ds
pop
pop
outs
ss
pop
outs
jns
add
jns
pop
add
scas
push
add
scas
gs
lods
pop
add
lods
jno
aad
add
adc
mov
leave
inc
jno
mov
aas
pop
outs
jmp
pop
jno
add
jmp
pop
adc
repnz
push
popa
or
arpl
hlt
call
pop
daa
fimul
push
outs
mov
dec
pop
daa
mov
adc
outs
aas
pop
outs
cdq
mov
test
jnp
imul
pop
je
dec
jb
aaa
pop
push
fs
lods
and
mov
and
mov
ror
xchg
arpl
push
jno
mov
pop
outs
or
and
inc
push
popa
sub
add
dec
pop
daa
or
push
les
popa
retf
pop
push
and
pop
adc
rcl
xchg
dec
push
je
inc
hlt
inc
add
mov
mov
adc
jnp
push
jne
inc
adc
jg
pop
outs
sub
jb
dec
push
add
mov
sbb
(bad)
sti
dec
push
jne
inc
adc
inc
outs
or
jb
dec
push
add
dec
pusha
jae
add
test
gs
add
stos
add
iret
inc
adc
movs
inc
pop
cmp
ins
mov
jp
fs
outs
inc
push
je
jbe
jb
inc
push
push
ja
addr16
cmp
push
dec
adc
xor
popa
popa
fimul
jae
pop
pop
outs
mov
pop
push
and
pop
push
data16
mov
inc
adc
in
pop
cmp
jl
ins
or
cmp
inc
pop
add
sbb
int3
mov
xor
sub
ins
fist
and
pop
push
jb
mov
stos
inc
adc
data16
add
push
fs
jno
jo
push
jbe
push
push
and
inc
adc
add
sbb
outs
jns
add
ror
cmp
dec
sar
outs
mov
mov
ror
repnz
jb
sti
push
push
and
pop
push
dec
adc
adc
test
add
inc
bound
cs
sub
outs
enter
retf
popa
ror
add
add
xchg
pop
jae
push
pop
je
push
pop
outs
push
push
pusha
gs
pop
pop
and
push
add
jb
jnp
push
outs
sub
outs
enter
xor
jb
push
push
gs
mov
add
push
jb
mov
push
push
and
dec
adc
fist
and
add
pop
addr16
mov
add
push
bound
sub
sub
inc
dec
sar
gs
mov
add
xchg
pop
jae
push
pop
je
push
pop
outs
push
push
pusha
gs
pop
pop
and
mov
add
jb
jnp
push
and
pop
push
dec
add
xor
jbe
push
outs
mov
push
bound
sub
jmp
adc
clc
(bad)
cmp
jle
and
pop
addr16
scas
add
or
jne
nop
pop
jae
push
pop
je
push
pop
outs
sub
je
dec
pusha
xchg
push
(bad)
js
pusha
jne
xchg
pop
jae
push
pop
je
push
pop
outs
add
cwde
dec
jb
jg
pusha
gs
pop
and
ins
inc
scas
add
jg
adc
and
jnp
ins
fisttp
cmp
aas
push
jb
pop
pop
jb
data16
adc
push
jns
push
pop
gs
call
(bad)
cmp
jae
push
jb
test
add
push
adc
adc
jnp
ins
add
sub
rol
(bad)
cmp
sbb
mov
adc
ror
jg
adc
jo
push
js
dec
push
outs
adc
test
jnp
push
je
pop
push
add
adc
adc
jnp
ins
sub
cmp
dec
jno
xor
push
mov
dec
popa
gs
cmp
adc
arpl
add
cmp
mov
bound
dec
push
gs
lods
add
xchg
lods
add
dec
dec
adc
jnp
ins
sub
cmp
rol
(bad)
cmp
sbb
into
dec
jb
lds
jae
xchg
sbb
dec
jno
pop
lea
xchg
pop
pop
jb
ds
je
push
arpl
jnp
ins
sbb
hlt
inc
add
push
inc
add
xor
daa
lea
xor
sub
cmp
arpl
push
push
outs
or
adc
sti
mov
sbb
jb
dec
pop
and
ds
dec
and
dec
push
xor
push
xor
mov
add
dec
adc
add
xchg
cmp
dec
mov
jb
push
sub
push
bound
dec
push
popa
and
push
jns
daa
ins
jo
dec
push
jmp
push
add
push
jno
out
add
retf
dec
pusha
add
push
jno
iret
push
push
and
sub
in
pop
(bad)
in
es
je
dec
push
ins
add
jb
adc
add
xchg
stos
add
jecxz
jno
call
and
adc
daa
rcl
pop
(bad)
int3
push
popa
je
push
push
arpl
push
jb
mov
pop
outs
push
stos
add
xchg
sub
jg
push
and
ds
outs
je
push
arpl
mov
adc
jb
dec
push
ins
cmp
jno
mov
add
adc
daa
repz
adc
adc
imul
push
popa
ins
pop
inc
push
je
dec
pop
add
dec
pop
je
push
adc
or
gs
hlt
(bad)
jns
add
mov
push
adc
rcl
push
and
xchg
pusha
gs
push
add
fs
add
push
fs
push
jno
push
pop
arpl
pop
outs
jbe
push
add
pop
and
push
adc
mov
dec
push
and
aas
pop
outs
stc
test
pop
imul
and
adc
(bad)
push
jb
add
xchg
push
js
dec
popa
je
add
push
adc
mov
fs
movs
cmp
stos
dec
pop
arpl
push
push
and
push
push
je
mov
cmp
add
mov
add
fs
pop
outs
mov
pop
gs
push
jne
inc
pop
imul
adc
xor
pop
and
sub
adc
dec
adc
mul
and
add
push
adc
(bad)
cmp
add
cmp
and
push
popa
sbb
jo
sub
push
push
pop
and
dec
pop
arpl
push
push
and
dec
adc
mov
dec
push
and
cmp
jns
adc
cmp
imul
cmp
sbb
cs
add
add
dec
pop
and
dec
pop
arpl
dec
push
and
dec
adc
mov
dec
push
and
cmp
stc
xchg
adc
or
fs
dec
pop
ins
mul
adc
andnps
(bad)
dec
ins
jo
dec
push
(bad)
jnp
and
leave
test
hlt
dec
and
movs
aas
push
arpl
add
push
push
jb
push
pop
gs
hlt
call
cmp
and
pop
jo
push
jno
jg
pop
and
push
push
jmp
and
ret
and
and
sar
adc
iret
push
push
add
and
adc
and
push
push
fs
cmp
data16
jae
aas
push
je
scas
add
push
push
push
add
or
adc
das
ds
popa
sub
add
and
mov
pop
arpl
mov
xchg
push
hlt
(bad)
mov
and
gs
pop
jb
push
adc
xor
popa
imul
push
outs
jns
pop
jae
scas
add
or
pop
and
dec
pop
jns
dec
push
outs
leave
cmp
cmp
fs
ds
add
add
add
add
push
pop
bound
and
out
pop
popaw
repnz
add
and
stc
cmp
ds
je
lods
add
call
popaw
xor
pop
and
push
addr16
jb
cmp
stos
test
popaw
xchg
and
and
pop
gs
pop
and
pop
push
and
add
pop
sub
and
imul
add
das
and
xor
and
and
aam
pusha
das
rol
sub
jno
adc
and
repnz
cli
and
pop
and
adc
lods
add
mov
popa
add
and
and
and
pusha
das
xor
fisub
adc
add
mov
push
add
pop
popaw
mov
pop
and
and
je
pop
popa
gs
pop
fs
add
jg
popaw
xor
pop
and
jno
ja
popa
gs
cmp
inc
dec
push
jb
dec
push
arpl
and
aam
push
arpl
mov
sub
arpl
stos
add
out
and
in
push
arpl
add
mov
xor
push
cmc
and
(bad)
jmp
popa
outs
adc
je
inc
pusha
gs
push
jb
and
stos
add
mov
push
mov
gs
aaa
pop
jb
stos
add
outs
and
js
pop
arpl
pop
je
es
ins
xchg
aaa
imul
dec
push
jb
cmp
jmp
add
es
aam
pop
jb
stos
add
mov
dec
jb
sar
call
and
hlt
inc
dec
push
fs
push
pop
arpl
and
idiv
imul
stos
loopne
mov
stos
sar
ror
inc
data16
add
data16
add
push
stos
add
push
stos
pop
inc
data16
add
data16
loopne
add
adc
fdivr
lods
xor
in
xor
in
sar
es
add
es
inc
push
stos
add
push
stos
lock
enter
mov
test
lock
out
enter
add
add
add
cmps
test
add
push
mov
add
test
cmps
test
add
out
xor
mov
add
add
push
mov
add
add
pop
inc
aaa
add
aaa
add
add
cmps
mov
add
es
add
(bad)
in
call
mov
add
add
cmp
add
mov
add
mov
add
mov
add
xor
rol
add
mov
add
add
mov
add
mov
add
inc
aaa
add
aaa
add
aaa
add
stos
xor
xchg
mov
add
(bad)
xchg
mov
add
add
ret
add
add
push
mov
add
add
fimul
aaa
add
add
push
mov
add
add
fiadd
xor
add
add
inc
aaa
add
mov
add
mov
add
mov
add
in
jmp
scas
add
push
mov
add
scas
add
out
add
xlat
scas
add
(bad)
das
cmp
jp
aaa
add
mov
add
scas
add
mov
scas
add
push
mov
add
push
aaa
add
outs
scas
add
push
scas
add
(bad)
mov
add
xor
add
add
pop
scas
add
es
add
(bad)
mov
add
cmp
push
scas
add
es
add
es
add
out
add
das
cmp
out
add
fld
add
es
cmp
cli
sub
add
xor
add
xor
add
xor
add
add
xor
add
cmp
cmps
scas
add
push
lea
add
scas
add
push
shr
jmp
add
xchg
mov
add
cmp
mov
add
add
loope
in
jmp
scas
add
data16
add
sub
add
es
add
and
add
ret
add
add
lods
add
jp
ss
lods
add
out
add
mov
lods
add
push
scas
add
bound
cmp
push
lea
add
lods
add
xchg
iret
in
jmp
mov
add
cmp
xchg
pop
add
add
pop
lods
add
and
in
jmp
add
cmps
mov
add
sub
add
add
lods
add
sbb
in
call
lods
add
data16
add
cmp
push
lods
add
push
lods
add
in
add
mov
sub
add
sub
add
lods
add
loop
ss
lods
add
cmps
lods
add
adc
add
(bad)
lods
add
cmp
add
add
lods
add
or
cmp
into
sub
add
cmp
push
lods
add
outs
pop
add
add
add
loope
in
jmp
lods
add
data16
add
cmp
jle
add
lods
add
lods
add
mov
lods
add
and
add
sub
add
ss
stos
add
out
mov
stos
add
push
lods
add
stos
sub
add
xchg
stos
add
xchg
stos
add
mov
sub
add
cmp
xchg
stos
add
into
test
add
add
push
stos
add
and
in
jmp
add
cmps
mov
add
cmp
push
stos
add
es
add
daa
stos
add
jb
cmp
xor
add
add
stos
add
push
test
add
stos
add
push
stos
add
push
retf
out
add
push
stos
add
mov
cmp
out
add
out
add
(bad)
stos
add
cmps
xor
sub
cmp
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmp
cmp
cmp
cmp
push
cmp
retf
add
add
xchg
xor
push
stos
push
stos
add
adc
in
jmp
add
xchg
mov
add
xor
add
stos
add
es
add
push
stos
add
cmps
test
add
das
cmp
es
add
push
stos
add
adc
xor
add
cmp
push
das
cmp
mov
add
test
ss
test
add
xchg
retf
in
jmp
add
test
cmp
cmps
test
add
xchg
test
add
mov
add
add
push
mov
add
cmp
cmps
sub
add
dec
aaa
add
add
test
add
mov
add
mov
add
add
jp
cmp
push
mov
add
mov
add
add
mov
add
xor
sub
add
mov
add
mov
add
mov
add
cmp
and
cmp
push
aaa
add
xor
cmps
mov
add
int
call
test
cmp
push
mov
add
add
data16
add
add
and
in
call
add
sbb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
xchg
add
scas
add
call
add
scas
add
push
xor
cmps
scas
add
or
add
mov
add
out
xor
mov
add
xchg
in
jmp
add
inc
xchg
in
call
add
cli
mov
add
add
and
add
cli
xchg
in
jmp
scas
add
add
add
pop
push
xor
es
add
mov
scas
add
mov
scas
add
inc
xchg
in
call
scas
add
aam
xor
out
mov
scas
add
jp
in
jmp
xchg
in
call
push
add
mov
scas
add
push
xchg
in
jmp
add
inc
xchg
in
call
add
xor
add
add
and
add
cli
xchg
in
jmp
scas
add
add
add
xor
xor
add
es
add
mov
scas
add
pop
xchg
in
jmp
lods
add
inc
xchg
in
dec
add
xor
mov
xor
call
jmp
xchg
in
call
(bad)
in
push
xor
sbb
xor
xchg
lods
add
push
xchg
in
jmp
add
or
adc
add
or
add
add
adc
add
push
xchg
in
call
lods
add
nop
xchg
in
jmp
lods
add
bound
add
lods
add
push
xchg
in
jmp
lods
add
mov
add
nop
xchg
in
jmp
lods
add
sbb
add
lods
add
nop
xchg
in
jmp
xchg
in
inc
add
xchg
in
jmp
xor
add
lods
add
pop
xor
inc
xchg
in
call
add
not
add
and
add
cmovs
add
lods
add
mov
inc
xor
nop
xchg
in
jmp
lods
add
mov
lods
add
push
xchg
in
inc
xor
add
or
lods
add
out
add
out
add
dec
dec
xor
popa
xchg
in
jmp
xchg
in
call
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
mov
cmp
test
add
cmp
push
stos
add
bound
add
push
stos
add
push
stos
add
daa
stos
es
add
add
add
pop
xchg
in
jmp
stos
add
mov
stos
add
cmps
dec
xor
out
add
out
xor
jl
xor
nop
xchg
in
jmp
stos
add
mov
add
nop
xchg
in
(bad)
ds
xor
push
inc
xor
xchg
stos
add
nop
xchg
in
jmp
xchg
in
call
add
in
jmp
aas
xor
push
stos
add
jno
xor
data16
add
loop
cmp
push
stos
add
fisubr
cmp
dec
pop
cmp
push
stos
add
cmp
add
stos
add
mov
stos
add
adc
xor
out
add
inc
xchg
in
call
test
in
jmp
test
in
inc
add
test
xor
cmps
test
in
call
xchg
in
jmp
xchg
in
call
dec
xor
inc
(bad)
in
call
add
pop
dec
xor
adc
in
jmp
add
ds
in
call
add
adc
in
jmp
mov
add
inc
xor
mov
mov
add
inc
xor
add
mov
mov
add
mov
add
in
call
mov
add
inc
xor
out
add
mov
mov
add
in
jmp
(bad)
in
call
xor
cmps
mov
add
mov
add
(bad)
data16
add
in
call
add
jp
xor
add
data16
add
(bad)
push
mov
add
(bad)
in
jmp
mov
add
(bad)
push
mov
add
(bad)
add
mov
add
mov
add
in
jmp
scas
add
inc
(bad)
and
xor
out
add
mov
scas
add
jbe
in
jmp
(bad)
xchg
scas
sub
xor
cmps
scas
add
mov
scas
add
and
in
jmp
add
inc
ret
in
call
add
movs
in
add
add
push
scas
add
push
out
add
ret
in
jmp
scas
add
or
in
call
scas
add
nop
ret
es
add
add
scas
add
push
ret
out
add
mov
in
inc
add
scas
add
nop
ret
out
add
ja
xor
(bad)
scas
add
nop
ret
cmps
scas
add
pop
ret
xchg
scas
add
nop
ret
in
dec
shl
add
ret
in
jmp
add
push
ret
in
call
add
adc
in
call
shl
add
add
adc
in
jmp
scas
push
ret
in
call
scas
add
nop
ret
in
jmp
scas
add
(bad)
out
xor
push
scas
add
push
ret
in
jmp
lods
add
xchg
ret
in
call
lods
add
nop
ret
in
jmp
lods
add
and
xor
(bad)
lods
add
nop
ret
in
jmp
ret
in
call
mov
add
out
out
xor
xchg
lods
add
push
ret
in
inc
add
add
push
ret
in
call
add
adc
in
jmp
add
push
pushf
xor
push
lods
add
adc
in
jmp
lods
add
faddp
in
call
lods
add
nop
ret
frstor
xor
push
lods
add
push
ret
out
add
xchg
in
call
lods
add
nop
ret
in
mov
add
mov
add
lods
nop
ret
cmps
lods
add
jb
in
call
shr
cmps
lods
add
cwde
xchg
xor
xchg
lods
add
push
shr
data16
add
push
shr
push
lods
add
adc
in
jmp
add
push
mov
add
add
adc
in
jmp
lods
add
or
in
call
lods
add
nop
shr
lods
add
xor
push
lods
add
push
shr
out
add
scas
shr
(bad)
stos
add
nop
shr
out
add
stos
ret
(bad)
stos
add
cmps
stos
add
pop
les
add
stos
add
jbe
in
jmp
mov
add
movs
mov
add
add
inc
mov
add
idiv
and
add
dec
mov
add
stos
add
add
add
cli
mov
add
mov
mov
add
stos
add
inc
mov
add
outs
mov
add
mov
lods
ds
lods
add
mov
add
bound
cmps
stos
add
mov
stos
add
inc
lods
add
add
cs
add
add
adc
add
xor
add
stos
add
sub
push
stos
add
mov
stos
add
daa
stos
add
and
add
push
ss
test
in
call
test
out
add
out
add
(bad)
test
add
mov
add
xchg
test
add
call
add
out
add
in
add
aaa
add
add
dec
pop
xor
data16
add
loop
add
add
(bad)
push
add
mov
add
mov
adc
xor
es
add
push
add
mov
add
in
jmp
mov
add
mov
add
add
jmp
add
mov
add
add
loope
add
push
add
mov
add
jle
add
data16
add
add
add
inc
push
add
add
and
add
pop
mov
add
mov
add
mov
add
push
add
mov
add
mov
add
mov
add
mov
add
scas
add
(bad)
loopne
add
scas
add
out
add
out
add
jbe
aaa
add
scas
add
xchg
push
add
add
mov
add
mov
test
xchg
scas
add
mov
out
add
scas
add
sub
add
add
cs
add
add
es
add
scas
add
add
add
dec
scas
add
lods
je
add
sub
aaa
add
add
scas
add
jno
xor
(bad)
scas
add
cli
loop
add
scas
add
adc
add
xchg
mov
jmp
scas
add
dec
into
inc
add
aaa
add
aaa
add
into
inc
add
add
(bad)
loop
add
mov
(bad)
fcom
cmp
test
add
add
scas
add
es
add
push
scas
add
push
scas
add
es
add
daa
scas
add
mov
adc
add
add
sahf
loop
add
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
xor
in
jmp
lods
xchg
lods
add
xchg
lods
add
lods
add
cmps
test
add
push
lods
add
cmp
add
lods
add
push
lods
add
retf
push
xor
and
add
adc
add
adc
lods
add
cmp
aaa
add
lods
add
push
lods
add
in
add
out
add
jmp
sbb
lods
fcmovu
aaa
add
lods
add
sbb
aaa
add
lods
add
xchg
lods
add
xchg
lods
add
xchg
mov
jmp
lods
add
jne
cmp
lods
add
jge
cmp
je
xchg
sbb
add
mov
aaa
add
add
push
lods
add
push
lods
add
lods
add
lods
add
pop
lods
add
mov
add
cmp
inc
cmps
xchg
sbb
lods
add
push
fbstp
add
stos
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
mov
push
cmp
les
add
jle
aaa
add
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
inc
mov
call
adc
je
xchg
sbb
add
jp
aaa
add
add
push
stos
add
es
add
es
add
push
stos
add
pop
stos
add
xchg
mov
dec
lods
xchg
sbb
stos
add
ss
add
stos
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
xlat
stos
add
popa
mov
(bad)
mov
lods
xchg
sbb
add
in
add
stos
add
xchg
stos
add
xchg
stos
add
data16
add
stos
add
inc
mov
dec
lods
xchg
sbb
add
scas
in
add
add
es
add
es
add
push
stos
add
push
stos
add
daa
stos
add
inc
lods
xchg
sbb
add
sahf
in
add
test
out
add
(bad)
test
add
out
add
out
add
mov
adc
add
adc
add
adc
add
cmp
xchg
test
cmp
push
add
add
mov
add
pop
cmp
push
pop
cmp
pop
mov
add
or
add
add
mov
add
pop
cmp
add
cmp
inc
pop
xchg
sbb
mov
add
aad
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xchg
sbb
(bad)
aaa
add
mov
add
mov
add
add
movs
in
jmp
pop
xchg
sbb
add
push
aad
add
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
fbstp
add
in
push
cmp
(bad)
scas
add
pop
add
in
inc
add
scas
add
sub
scas
add
push
add
add
cmp
scas
add
gs
add
int
cmp
push
adc
add
add
sbb
scas
add
inc
adc
add
add
adc
add
add
es
add
adc
add
push
scas
add
data16
add
add
scas
add
push
scas
add
sbb
sbb
scas
add
ss
add
scas
add
mov
scas
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
les
add
dec
loope
add
scas
add
xchg
scas
add
xchg
scas
add
data16
add
scas
add
inc
mov
call
cmp
add
data16
add
test
cmp
push
scas
add
xor
cmp
and
add
dec
push
cmp
adc
adc
add
scas
add
jno
cmp
sbb
cmp
call
or
add
mov
lods
add
pop
push
cmp
mov
push
cmp
cmps
lods
add
dec
push
cmp
xchg
lods
push
push
cmp
movs
lods
add
pop
push
cmp
xchg
lods
add
lds
cmp
test
sbb
add
ds
add
add
lods
add
lods
add
push
lods
add
push
lods
add
daa
lods
add
add
cmp
push
lods
add
sbb
lods
add
add
pop
xchg
sbb
lods
add
sbb
aaa
add
add
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
xlat
lods
add
xchg
mov
dec
or
add
or
add
or
add
sbb
(bad)
add
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
loope
in
(bad)
jg
cmp
add
lods
add
daa
or
add
xchg
sbb
add
(bad)
(bad)
add
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
xlat
stos
add
xchg
mov
jmp
or
add
stos
add
inc
or
add
or
add
cmp
movs
stos
add
or
add
shl
add
test
add
inc
aaa
add
add
stos
add
stos
add
push
stos
add
push
stos
add
daa
stos
add
inc
cmps
xchg
sbb
add
mov
aaa
add
stos
add
es
add
push
stos
add
push
stos
add
out
add
out
add
inc
stos
in
(bad)
fcmovbe
xor
out
add
js
xor
xlat
stos
cmps
shl
movs
stos
add
ret
add
shl
stos
stos
add
hlt
shl
xchg
stos
add
inc
iret
xor
push
iret
xor
push
stos
add
movs
iret
xor
pop
stos
add
mov
stos
add
iret
shl
sbb
add
stos
shl
sub
shl
and
xor
add
adc
xor
out
add
cmps
shl
icebp
test
xor
out
add
push
test
xor
xchg
stos
in
jmp
test
xor
cmps
test
xor
xchg
test
xor
gs
add
xchg
sbb
add
data16
add
add
add
push
mov
add
add
es
add
mov
add
mov
add
retf
inc
lods
xchg
sbb
mov
add
cmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
retf
cmps
mov
add
xor
xchg
mov
add
retf
add
les
add
push
cmp
add
mov
add
add
push
mov
add
add
addr16
add
lods
in
(bad)
out
enter
mov
add
leave
xor
daa
mov
add
enter
stos
xchg
sbb
cmp
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
xlat
scas
add
xchg
lods
in
jmp
scas
add
mov
xor
cmps
scas
add
mov
stos
xchg
sbb
aas
aaa
add
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
and
jmp
xor
scas
add
lds
add
xchg
sbb
add
repnz
add
add
scas
add
push
scas
add
es
add
es
add
push
scas
add
pop
scas
add
push
push
in
jmp
xor
(bad)
scas
add
inc
lds
out
add
stc
lds
aam
add
xor
xor
movs
scas
add
dec
lds
call
add
lds
cwde
scas
add
retf
retf
push
inc
retf
outs
scas
add
dec
retf
pop
scas
add
or
xor
dec
scas
add
push
lds
inc
movs
xchg
sbb
add
jbe
aaa
add
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
inc
push
in
(bad)
jmp
add
les
out
add
sbb
xor
(bad)
lods
loop
xor
les
add
aaa
add
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
inc
push
in
(bad)
mov
test
sbb
add
cmp
add
add
lods
add
lods
add
push
lods
add
push
lods
add
daa
lods
add
mov
enter
add
lods
add
add
xor
out
add
push
lods
add
push
enter
lods
add
cwde
enter
lods
add
pusha
enter
cmps
xchg
sbb
cmp
add
lods
add
xchg
lods
add
xchg
lods
add
data16
add
lods
add
inc
push
in
(bad)
cmp
test
sbb
scas
aaa
aaa
add
add
lods
add
lods
add
push
lods
add
push
lods
add
daa
lods
add
mov
(bad)
xor
push
lods
add
add
xchg
sbb
stos
add
mov
aaa
add
stos
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
adc
add
add
retf
xchg
stos
add
pop
retf
xor
fs
add
out
xor
inc
push
in
call
add
stos
add
push
lea
add
push
in
(bad)
cmp
inc
add
stos
add
and
stos
add
pop
stos
add
(bad)
cmp
add
sbb
stos
add
push
cmp
add
es
add
(bad)
stos
out
add
out
add
mov
retf
xor
xchg
push
in
inc
xor
mov
xchg
sbb
aaa
add
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
and
push
retf
xor
test
add
stos
add
es
add
push
stos
push
stos
add
es
add
daa
stos
add
mov
retf
xor
out
add
in
retf
xlat
test
xor
out
add
jge
xor
aad
add
movs
retf
cmps
test
xor
fwait
test
xor
cmps
test
xor
cdq
test
xor
test
pop
mov
add
add
and
add
add
data16
add
add
push
mov
add
add
daa
mov
add
inc
in
jmp
into
xor
mov
into
xor
inc
dec
xchg
sbb
add
ficomp
add
out
add
(bad)
mov
add
mov
add
mov
add
mov
add
into
xor
les
sbb
add
sbb
add
cmps
mov
add
mov
add
mov
add
in
push
int
add
add
clc
int3
xor
addr16
add
xor
xor
xchg
sbb
sbb
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
add
in
(bad)
(bad)
xor
(bad)
scas
add
(bad)
xlat
xor
test
in
add
jbe
aaa
add
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
mov
fnstenv
mov
fnstenv
scas
add
lods
fnstenv
je
xchg
sbb
add
sub
aaa
add
push
scas
add
es
add
es
add
push
scas
add
pop
scas
add
xchg
inc
in
call
xlat
xor
push
scas
add
pop
xlat
xor
push
inc
in
jmp
xor
aam
add
outs
fnstenv
xchg
inc
in
push
fnstenv
mov
fnstenv
xchg
inc
in
inc
xor
cwde
scas
add
dec
fnstenv
xchg
inc
in
call
xor
add
mov
xor
push
inc
in
jmp
(bad)
xor
ins
scas
add
add
xor
adc
jmp
(bad)
xor
push
scas
add
adc
xor
inc
lods
xchg
sbb
add
xchg
aaa
add
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
inc
inc
in
call
fdiv
(bad)
lods
add
(bad)
xor
add
out
add
(bad)
fdiv
aam
add
mov
xor
les
add
aaa
add
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
inc
inc
in
call
dec
xchg
sbb
add
cs
add
add
lods
add
lods
add
push
lods
add
push
lods
daa
lods
add
mov
aam
add
shl
test
sbb
lods
add
or
add
lods
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
add
add
aam
add
shl
test
sbb
add
out
and
add
add
add
data16
add
data16
add
push
lods
add
push
lods
add
daa
lods
add
add
(bad)
sti
shl
push
lods
add
repz
inc
inc
xchg
sbb
add
pop
and
add
stos
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
mov
aad
add
inc
xchg
sbb
add
aaa
add
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
inc
cmp
dec
mov
sbb
add
jp
aaa
add
add
push
stos
add
es
add
es
add
push
stos
add
pop
stos
add
xchg
cmp
jmp
mov
sbb
stos
add
cmp
add
add
stos
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
xlat
stos
add
popa
cmp
call
xor
les
add
and
aaa
add
stos
add
xchg
stos
add
xchg
stos
add
data16
add
stos
add
inc
cmp
push
mov
sbb
add
scas
cmp
add
es
add
es
add
push
stos
add
push
stos
add
daa
stos
add
mov
out
add
stos
add
mul
xor
test
add
test
add
(bad)
test
add
cmps
test
add
cmp
xor
les
add
add
mov
add
add
push
mov
add
add
addr16
add
aas
in
jmp
xor
push
mov
add
lods
xchg
sbb
add
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
in
dec
xor
out
add
push
loop
add
add
loop
add
xor
xchg
mov
add
add
loop
add
loope
add
add
inc
loope
add
add
dec
loope
add
add
outs
xor
add
add
es
add
mov
add
mov
add
mov
add
mov
add
add
int
add
mov
add
cmp
xor
je
xchg
sbb
scas
add
push
aaa
add
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
xchg
push
in
push
jecxz
add
scas
add
push
push
in
jmp
add
je
xchg
sbb
xor
add
add
push
scas
add
push
scas
add
es
add
es
add
pop
scas
add
xor
xchg
sbb
scas
add
push
xor
add
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
xlat
scas
add
xchg
push
in
jmp
xor
(bad)
scas
add
push
int
add
int
add
cmp
xor
xchg
push
in
call
xor
call
add
add
and
xor
pop
scas
add
adc
xor
imul
add
cmc
loope
add
scas
add
mov
xor
sbb
xor
sbb
int
add
scas
add
bswap
xor
jecxz
add
jmp
add
add
add
add
in
call
int
add
lods
add
mov
mov
sbb
lods
add
jle
aaa
add
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
mov
loopne
add
add
(bad)
loopne
add
sbb
add
aaa
add
add
push
lods
add
lods
lods
add
push
lods
add
pop
lods
add
xchg
push
in
(bad)
(bad)
xor
je
xchg
sbb
lods
add
xor
add
lods
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
xlat
lods
add
popa
push
in
call
cmps
xchg
sbb
das
aaa
add
lods
add
xchg
lods
add
xchg
lods
data16
add
lods
add
inc
push
in
push
xor
data16
add
jg
xor
xor
xchg
sbb
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
pop
lods
add
mov
loop
add
in
jmp
loop
add
sbb
stos
add
sub
add
stos
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
xchg
push
in
jmp
loop
add
sbb
xor
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
loope
in
(bad)
(bad)
xor
es
add
or
xor
push
stos
add
jecxz
xor
inc
scas
xchg
sbb
add
xor
add
stos
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
mov
jecxz
add
jecxz
add
jecxz
add
lods
xchg
sbb
xor
add
stos
add
data16
add
push
stos
add
push
stos
add
stos
and
call
xor
push
stos
add
gs
add
sbb
add
push
aaa
add
stos
add
es
add
push
stos
add
push
stos
add
out
add
out
add
inc
push
in
(bad)
mov
push
in
call
jecxz
add
test
xor
movs
test
xor
xchg
test
xor
add
movs
test
xor
xchg
test
xor
push
inc
in
call
(bad)
xor
pop
mov
add
(bad)
xor
imul
add
mov
mov
add
(bad)
xor
sbb
xor
and
xor
adc
xor
test
sbb
mov
add
aaa
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmp
add
aaa
add
mov
add
mov
add
add
addr16
add
in
jmp
xor
data16
add
shl
mov
add
xor
and
add
cmp
xor
add
adc
mov
add
retf
mov
add
imul
add
scas
add
mov
xor
inc
inc
in
(bad)
jmp
xor
fisubr
xor
iret
scas
add
sbb
xor
sahf
scas
add
adc
xor
lods
scas
add
or
xor
xchg
push
in
call
shl
scas
add
adc
xor
scas
jmp
xor
push
scas
add
ret
shl
lods
xchg
sbb
add
inc
getsec
add
add
es
add
es
add
push
scas
add
push
scas
add
daa
scas
add
mov
shl
scas
add
popf
shl
lods
xchg
sbb
scas
add
or
aaa
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
cmps
scas
add
cmps
scas
add
adc
add
mov
add
xchg
shl
scas
add
test
xor
push
scas
add
jo
xor
push
add
dec
shl
scas
add
call
add
xor
pop
scas
add
pop
shl
scas
add
jno
xor
fxsave
add
add
xor
fild
xor
in
lods
add
pop
shl
lods
add
xor
xor
shr
xor
les
add
push
aaa
add
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
inc
push
in
inc
mov
add
out
mov
xchg
sbb
add
add
or
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
daa
lods
add
mov
mov
add
in
xor
(bad)
lods
add
in
mov
add
mov
xor
mov
xchg
sbb
lods
add
out
or
add
lods
add
xchg
lods
add
cmps
lods
cmps
lods
add
xchg
lods
add
je
xchg
sbb
add
or
add
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
adc
jmp
xor
push
lods
add
outs
mov
add
jne
xor
adc
add
sar
add
stos
add
sub
jmp
add
and
add
pop
mov
add
xor
xor
scas
stos
add
sbb
xor
lahf
stos
add
cmp
in
(bad)
mov
movs
xchg
sbb
add
pop
adc
add
add
stos
add
stos
add
push
stos
add
push
stos
add
daa
stos
add
add
(bad)
std
fbstp
add
xor
xchg
sbb
stos
add
pop
getsec
add
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
xlat
stos
add
xchg
dec
in
inc
fbstp
(bad)
stos
add
mov
stos
add
lock
xchg
stos
add
call
stos
add
loopne
xor
call
add
add
cwde
fidiv
add
push
stos
add
cwde
fidiv
data16
add
cwde
fidiv
xor
xchg
sbb
add
xchg
getsec
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
pop
stos
add
jb
add
es
add
daa
stos
add
xlat
test
aaa
add
mov
add
stos
add
xlat
test
aaa
add
add
test
add
cmps
test
aaa
add
loopne
add
add
aam
xor
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
sbb
xor
add
fidiv
xor
out
mov
add
add
ins
fidiv
int
add
fidiv
mov
fdiv
mov
add
int
xor
mov
fdiv
cwde
mov
add
mov
add
mov
add
mov
add
mov
add
add
fdiv
sub
add
dec
mov
add
mov
add
mov
add
mov
add
scas
add
stc
(bad)
fild
xor
lods
scas
add
dec
fdiv
jge
add
fdiv
mov
fdiv
mov
fdiv
mov
add
mov
xor
add
sub
add
xchg
aam
add
add
mov
xor
test
xor
dec
scas
add
mov
xor
dec
scas
add
leave
aam
add
add
aam
xor
dec
scas
add
(bad)
xor
jns
add
dec
aam
add
add
inc
aam
add
aam
add
add
scas
add
lods
scas
add
(bad)
scas
add
ret
add
scas
add
mov
scas
add
lahf
fdiv
jno
add
xchg
xor
xchg
test
xor
scas
add
jns
xor
sub
add
(bad)
pop
scas
add
mov
xor
jmp
add
retf
fdiv
add
fsubr
xor
imul
add
dec
fdiv
xchg
test
xor
int3
lods
add
rcr
add
fidiv
shr
xor
ret
lods
add
loop
xor
shr
xor
popa
test
xor
jge
add
lods
add
pop
lods
sbb
add
lods
add
push
lods
add
or
add
push
lods
add
aam
xor
test
lods
add
push
lods
add
ins
lods
xor
test
add
fimul
add
jb
aaa
add
lods
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
les
scas
lods
add
dec
or
add
lods
add
xchg
lods
add
xchg
lods
add
data16
add
lods
add
inc
push
in
inc
fnstenv
data16
add
lods
fnstenv
push
lods
add
mov
lods
add
xlat
fnstenv
adc
fnstenv
sub
add
lods
add
dec
fnstenv
call
add
push
in
jmp
stos
add
(bad)
xor
(bad)
stos
add
(bad)
add
shl
xchg
stos
add
mov
stos
add
rcl
xor
fwait
stos
add
push
stos
add
adc
add
sbb
add
ds
add
push
stos
add
push
stos
es
add
es
add
pop
stos
add
xor
xchg
sbb
stos
add
push
or
add
push
stos
add
out
add
out
add
(bad)
stos
add
xlat
stos
add
xchg
push
in
(bad)
mov
stos
add
jmp
xor
cmps
stos
add
shl
xchg
stos
add
sub
stos
add
xor
stos
std
shl
imul
add
add
or
push
in
(bad)
jmp
stos
add
hlt
shl
es
add
cld
shl
push
stos
add
movs
shl
and
shl
sbb
xor
jmp
add
not
xor
fisubr
xor
in
add
mov
xor
add
(bad)
test
xor
lahf
test
xor
lods
test
xor
les
add
or
add
mov
add
add
push
mov
add
add
addr16
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
out
add
mov
xor
out
add
or
add
push
mov
cmps
mov
add
xor
fwait
mov
add
mov
test
add
inc
mov
cdq
mov
add
xchg
pop
mov
add
xchg
outs
mov
add
xchg
add
adc
xor
push
mov
add
xchg
daa
mov
add
xor
adc
add
dec
mov
and
add
inc
mov
sbb
xor
jmp
add
xchg
mov
fsubr
xor
jmp
mov
xlat
scas
add
pop
mov
les
xchg
sbb
aaa
add
add
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
test
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
daa
scas
add
add
in
jmp
add
stos
xchg
pop
scas
add
test
add
xchg
add
xlat
scas
add
push
scas
add
pusha
xchg
fld
xor
test
add
push
xor
cdq
scas
add
add
xor
(bad)
scas
add
movs
test
pop
scas
add
dec
test
ins
scas
add
pop
xchg
bound
xor
push
scas
add
jle
xor
and
inc
xchg
xor
xor
sub
xor
pop
scas
add
fiadd
in
inc
xchg
(bad)
lods
add
pop
xchg
out
add
xchg
aam
add
std
xchg
movs
lods
add
cmp
add
xor
add
dec
xchg
cwde
lods
add
xlat
xor
add
add
adc
add
or
add
inc
xchg
push
lods
add
xrelease
inc
sub
add
pop
aaa
add
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
test
xchg
sbb
lods
add
outs
push
aaa
add
lods
add
out
add
(bad)
lods
(bad)
lods
add
cmps
lods
add
cmps
lods
add
add
xor
cmps
lods
add
xlat
xor
lods
add
pop
test
lods
add
cmps
test
push
lods
add
xchg
test
push
add
push
xor
pop
lods
add
add
add
xor
pop
lods
add
jno
xor
xchg
add
(bad)
in
jle
add
add
lods
add
std
jg
add
stos
add
clc
jg
add
stos
add
clc
jg
add
stos
add
push
xor
stos
add
pop
xor
stos
add
pop
xor
stos
add
xchg
add
outs
xor
stos
add
xchg
stos
add
pop
stos
add
cmp
add
add
jle
add
stos
add
dec
stos
add
jmp
add
stos
add
xor
xor
and
add
push
stos
add
sbb
add
stos
add
hlt
jge
add
stos
add
ret
jge
add
stos
add
out
add
shr
xor
mov
stos
add
enter
out
xor
add
mov
jge
add
add
pop
jl
add
add
mov
xor
dec
stos
add
push
stos
add
cmp
xor
dec
stos
add
jns
xor
xor
xor
dec
stos
add
and
add
stos
add
sahf
jge
add
stos
add
push
stos
add
jmp
test
inc
jge
add
jge
add
jge
add
test
add
xchg
test
add
push
jge
add
add
fbstp
add
add
sbb
add
add
push
mov
add
add
icebp
je
add
add
loop
xor
sub
xor
add
push
mov
add
add
mov
add
int3
xor
fdivrp
in
call
loop
add
mov
add
std
in
jmp
xor
out
add
sahf
int3
xor
mov
in
call
jecxz
add
int3
xor
cmps
(bad)
in
call
xor
cmps
mov
add
xor
push
(bad)
in
call
mov
add
add
retf
xor
loop
in
inc
xor
pop
mov
add
add
push
mov
add
add
jbe
aaa
add
mov
add
add
dec
mov
add
mov
add
mov
add
add
scas
add
out
add
es
aaa
add
scas
add
xchg
add
xlat
scas
add
push
inc
aaa
add
add
scas
add
mov
scas
add
xchg
scas
add
ss
aaa
add
test
add
scas
add
push
inc
aaa
add
sbb
add
test
pop
scas
add
cmps
inc
aaa
add
add
es
add
es
add
pop
scas
add
mov
jae
add
scas
add
(bad)
jo
add
add
scas
add
out
add
in
add
sbb
scas
add
enter
fisubr
xor
xlat
scas
add
cmps
scas
add
cmps
scas
add
outs
aam
add
inc
inc
add
add
cwde
scas
add
scas
add
fiadd
add
sbb
add
mov
scas
retf
add
add
es
add
es
add
pop
scas
add
xor
xchg
sbb
scas
add
xchg
inc
aaa
add
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
xlat
lods
add
xchg
repz
inc
jae
add
lods
add
cmp
add
jo
add
xor
movs
lods
pop
jo
add
jb
add
add
sub
add
add
add
add
add
cmp
xor
dec
lods
add
in
xor
sub
xor
sub
add
adc
xor
sub
xor
sbb
xor
jmp
add
lods
add
jo
xor
add
loope
add
enter
(bad)
lods
add
pop
jb
add
jno
add
lods
add
pop
jb
add
jno
add
jno
add
in
dec
jno
add
add
adc
add
add
jmp
lods
add
hlt
jo
add
jo
add
lods
movs
jno
add
lods
add
mov
add
lods
add
adc
cmp
test
add
idiv
aaa
add
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
les
add
into
inc
aaa
add
stos
add
xchg
stos
add
xchg
stos
add
stos
add
stos
inc
repz
jmp
cmp
adc
in
jmp
stos
add
lea
cmp
adc
in
push
cmp
adc
sub
add
sub
add
stos
add
sub
repnz
call
sub
add
stos
add
mov
repnz
jmp
cmp
iret
stos
add
dec
sub
add
add
stos
add
sbb
repz
inc
cmp
xchg
stos
add
in
sub
add
in
call
stos
add
std
sub
add
repz
jmp
stos
add
or
repz
push
sub
add
add
(bad)
cmp
xchg
repz
inc
stos
add
lods
sub
add
add
in
call
cmp
leave
test
cmp
xchg
repz
jmp
sub
add
add
int
cmp
xchg
repz
push
test
cmp
xchg
repz
inc
sub
add
sub
add
in
call
out
push
mov
add
sbb
sbb
add
add
ss
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
mov
add
aaa
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
add
xor
add
xor
add
add
cmp
gs
add
cmp
push
mov
add
das
cmp
imul
add
add
in
cmp
adc
in
jmp
xor
add
mov
add
xor
add
mov
add
xor
add
add
pop
xor
add
scas
add
sbb
cmp
fisubr
cmp
jmp
in
xor
add
scas
add
sti
xor
add
xor
add
xor
add
xor
add
cmp
pop
scas
add
out
das
cmp
jb
add
cli
das
cmp
arpl
cmp
xor
xchg
sbb
add
out
aaa
add
scas
add
push
scas
add
push
scas
es
add
es
add
pop
scas
add
mov
das
cmp
out
add
cmps
das
cmp
xlat
scas
add
lea
cmp
in
add
aad
cmp
aad
add
popf
das
cmp
les
add
add
aaa
add
scas
add
xchg
scas
add
xchg
scas
add
data16
add
scas
add
inc
repz
inc
add
cmp
data16
add
dec
das
cmp
push
scas
add
call
add
scas
add
mov
cmp
and
add
test
cmp
adc
add
xor
cmp
in
add
into
cmp
aam
add
push
das
cmp
in
add
xor
cmp
iret
lods
add
jmp
cmp
pushf
lods
add
cmp
cmp
add
lods
lods
add
xor
cmp
mov
das
cmp
xchg
lods
add
fld
cmp
test
xchg
sbb
add
push
inc
aaa
add
add
lods
add
lods
add
push
lods
add
push
lods
add
daa
lods
add
add
in
(bad)
(bad)
cmp
push
lods
add
es
aaa
add
lods
add
push
cdq
aaa
add
aaa
add
add
add
sbb
add
lods
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xor
aaa
add
cwde
aaa
add
sub
xchg
sbb
add
out
cmp
add
add
data16
add
data16
add
push
lods
add
push
lods
daa
lods
add
add
in
(bad)
js
cmp
push
lods
add
sub
add
cwde
aaa
add
add
rcl
xchg
sbb
stos
add
call
add
stos
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xor
aaa
add
cwde
aaa
add
add
and
add
add
cmp
je
xchg
sbb
add
pop
mov
add
push
stos
add
push
stos
add
es
add
es
add
pop
stos
add
xor
xchg
sbb
stos
add
push
mov
add
push
stos
add
out
add
out
add
(bad)
stos
add
xlat
stos
add
xchg
jmp
add
(bad)
stos
add
jns
cmp
cmps
stos
add
xchg
and
add
retf
add
and
add
ins
and
add
add
mov
add
add
xchg
and
add
jmp
call
movs
xchg
sbb
add
(bad)
mov
add
push
stos
add
push
stos
add
es
es
add
pop
stos
add
mov
and
xchg
sbb
test
ss
test
add
(bad)
test
add
cmps
test
add
sub
cmp
les
add
test
add
data16
add
add
push
mov
add
add
add
and
in
inc
cmp
push
mov
add
sub
xchg
sbb
add
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
in
inc
cmp
out
add
mov
cmp
xlat
mov
add
mov
add
cmp
mov
xchg
sbb
add
cdq
add
mov
add
mov
add
add
push
mov
add
in
in
call
lods
xchg
sbb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmp
out
add
(bad)
and
xlat
scas
add
data16
in
add
dec
cmp
aad
add
cwde
cmp
stos
scas
add
ja
cmp
xchg
scas
add
xchg
cmp
movs
scas
add
ja
cmp
xchg
scas
add
(bad)
sub
add
add
aaa
sub
add
in
inc
sub
add
add
sub
add
add
imul
cmp
and
mov
cmp
xor
xchg
sbb
scas
add
out
sahf
add
scas
add
push
scas
add
push
scas
add
out
add
out
add
xlat
scas
add
mov
sub
add
scas
add
fisubr
cmp
(bad)
scas
add
out
cmp
movs
scas
add
out
sub
add
sub
add
movs
xchg
sbb
xchg
add
add
add
data16
add
push
scas
add
push
scas
add
data16
add
scas
add
and
jmp
cmp
es
add
lea
cmp
pop
scas
add
xchg
sub
add
scas
add
mov
cmp
adc
sub
add
lods
add
cli
sub
add
lods
add
icebp
sub
add
lods
add
dec
sub
add
lods
fwait
sub
add
sub
add
sub
add
cmp
lea
cmp
test
add
(bad)
xchg
add
add
lods
add
lods
add
push
lods
add
push
lods
add
daa
lods
add
add
(bad)
cmp
add
inc
and
xchg
sbb
add
ss
lods
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
mov
and
add
pop
and
add
jmp
add
cmp
xchg
lods
add
sbb
add
add
shl
add
add
lock
add
mul
cmp
pop
lods
add
in
cmp
sub
add
lods
add
movs
and
add
lods
add
xchg
and
add
and
add
stos
add
(bad)
cmp
rep
add
shl
cmp
test
add
push
xchg
ss
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
cmps
stos
add
mov
and
add
and
add
add
xchg
cmp
and
jmp
cmp
gs
add
js
cmp
pop
stos
add
and
add
sbb
stos
add
dec
popf
add
stos
add
es
add
push
stos
add
push
stos
add
out
add
out
add
inc
push
in
inc
add
cmp
out
add
inc
and
add
stos
add
sub
cmp
cmps
stos
add
dec
and
add
and
add
and
add
and
add
add
dec
and
add
add
push
and
add
add
outs
fwait
add
add
es
add
es
push
stos
add
push
stos
add
daa
stos
add
mov
pop
cmp
push
stos
add
sub
cmp
out
add
xor
cmp
aam
add
stc
pop
cmp
mov
pop
cmp
fisubr
cmp
fwait
test
cmp
mov
xchg
sbb
pushf
add
test
data16
add
add
push
mov
add
inc
in
inc
cmp
add
xchg
sbb
add
push
jle
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmp
add
mov
add
inc
in
jmp
mov
add
mov
add
add
cmp
les
xchg
sbb
jle
add
mov
add
mov
add
add
addr16
add
in
call
cmp
data16
add
cmp
add
add
push
mov
add
mov
add
mov
add
mov
add
cmp
es
add
mov
add
add
scas
add
in
add
aad
add
xlat
scas
add
jbe
add
add
cs
add
jge
add
scas
add
cmps
scas
add
cmps
scas
add
mov
cmp
add
add
lods
cmp
inc
inc
in
call
xchg
sbb
jle
add
add
es
add
es
add
push
scas
add
push
scas
add
daa
scas
add
mov
cmp
push
scas
add
popa
cmp
inc
inc
in
push
cmp
je
xchg
sbb
scas
add
jmp
add
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
xchg
inc
in
inc
add
cmp
xchg
scas
add
fnstenv
cmp
scas
add
adc
cmp
push
scas
add
adc
cmp
adc
push
cmp
pop
scas
add
or
cmp
inc
lods
xchg
sbb
scas
add
mov
add
scas
add
es
add
push
scas
add
push
scas
add
out
add
test
add
mov
add
add
lods
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
add
add
xor
add
xor
add
in
jmp
cmp
inc
inc
in
(bad)
js
cmp
adc
call
cmp
and
jmp
xor
add
inc
in
inc
cmp
add
inc
add
cmp
xchg
inc
in
push
cmp
mov
xor
add
in
jmp
xor
add
in
(bad)
mov
inc
in
call
xor
add
xor
add
xor
add
xor
in
push
xor
in
dec
xor
add
in
jmp
xor
add
add
in
(bad)
clc
das
cmp
adc
call
xor
add
inc
in
jmp
inc
in
inc
xor
add
inc
in
(bad)
fsubr
cmp
xchg
inc
in
push
das
cmp
mov
xor
add
in
jmp
inc
in
(bad)
cmp
cmp
xchg
inc
in
call
inc
in
jmp
cmp
xchg
inc
in
inc
add
inc
in
call
cmp
push
cmp
dec
cmp
jmp
add
inc
cmp
call
add
adc
in
dec
cmp
push
stos
add
xchg
sub
add
sub
add
stos
add
mov
add
add
es
add
push
stos
add
repnz
add
add
stos
add
out
add
xlat
stos
add
xlat
stos
add
neg
xchg
sbb
stos
add
mov
add
cdq
add
stos
add
cmps
stos
add
cmps
stos
add
mov
sub
add
add
cmc
sub
xchg
sbb
add
stos
add
push
stos
push
stos
add
es
add
es
add
pop
stos
add
xor
xchg
sbb
add
xchg
cwde
add
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
xchg
cmp
call
test
cmp
cmps
test
cmp
xchg
test
cmp
cmps
test
cmp
add
call
add
add
leave
das
cmp
pop
mov
add
das
cmp
data16
add
mov
add
das
cmp
es
add
mov
add
mov
add
das
cmp
adc
cmp
out
add
loope
cmp
lock
add
retf
cmp
(bad)
mov
add
das
cmp
cmps
mov
add
cmp
les
cmp
cmps
mov
add
cmp
mov
cmp
jnp
add
ucomiss
add
add
sbb
cmp
data16
add
sub
add
cmp
cmp
es
add
sub
add
cmps
cmp
add
es
add
test
cmp
out
add
imul
add
scas
add
ret
add
cmp
(bad)
scas
add
movs
sub
add
sub
add
cmp
cmps
scas
add
cmc
sub
add
test
add
add
jmp
scas
hlt
xor
scas
add
add
aaa
add
add
mov
aaa
add
scas
add
into
xor
sbb
aaa
add
scas
add
in
aaa
add
xor
fisubr
aaa
add
scas
add
lahf
xor
fsubr
aaa
add
scas
add
jno
aaa
add
xor
add
mov
add
fwait
push
cmp
mov
push
cmp
(bad)
scas
add
jge
cmp
jbe
add
js
cmp
inc
scas
add
addr16
cmp
pop
scas
add
bound
cmp
inc
scas
add
cdq
sbb
add
scas
add
je
cmp
das
scas
add
sbb
add
scas
add
jle
cmp
or
cmp
fild
rcr
add
cmp
lods
lods
add
sub
cmp
iret
lods
add
inc
push
cmp
lahf
lods
add
cmp
cmp
scas
lods
add
imul
add
sbb
add
push
cmp
pop
lods
add
sbb
add
add
xor
cmp
pop
lods
add
pop
sbb
add
sbb
add
add
add
sub
cmp
das
lods
add
cmp
add
add
(bad)
sbb
add
add
pop
sbb
add
lods
add
sbb
add
lods
add
pop
sbb
add
lods
add
add
add
lods
add
stc
sbb
add
lods
add
adc
cmp
shr
add
lods
add
inc
sbb
add
out
sbb
add
sbb
add
add
loop
cmp
push
lods
add
sbb
cmp
lods
add
add
cmp
pop
lods
add
jecxz
cmp
jmp
add
push
sbb
add
stos
add
xchg
sbb
add
add
mov
test
cmp
je
xchg
sbb
add
stos
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
mov
sbb
in
call
cmp
je
xchg
sbb
add
add
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
adc
(bad)
jns
cmp
push
stos
add
and
cmp
daa
stos
and
cmp
adc
add
mov
cmp
in
add
jne
cmp
aam
add
inc
pop
cmp
jmp
add
cmps
pop
cmp
aam
add
je
cmp
test
pop
cmp
xchg
stos
add
mov
stos
add
xlat
pop
cmp
xchg
stos
add
bound
cmp
pop
stos
add
cdq
push
cmp
push
stos
add
test
cmp
add
fs
add
retf
pop
cmp
push
stos
add
push
pop
cmp
and
add
arpl
cmp
adc
add
mov
cmp
aaa
stos
add
adc
stos
add
and
cmp
cmc
test
cmp
retf
add
cmp
in
add
inc
pop
cmp
aam
add
lea
cmp
movs
test
cmp
sahf
test
ja
cmp
scas
test
cmp
xchg
test
cmp
ins
mov
add
add
add
add
mov
add
sub
add
jle
cmp
xor
cmp
ss
add
sub
add
iret
sub
add
add
sub
add
sub
aam
add
sbb
cmp
mov
cmp
aam
add
sti
sub
add
cmp
into
mov
add
sub
add
cmp
ins
mov
add
sub
add
add
sub
add
sub
add
add
sub
add
mov
add
mov
mov
add
cmp
inc
sti
nop
sbb
scas
add
(bad)
test
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
mov
sub
add
scas
add
mov
add
sub
add
cmp
movs
scas
add
test
add
add
cmp
test
add
xchg
add
add
scas
add
push
scas
add
push
scas
add
es
add
daa
scas
add
add
call
cmp
es
add
jb
cmp
push
scas
add
retf
add
scas
add
and
cmp
je
xchg
sbb
scas
add
push
out
ss
scas
add
(bad)
scas
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
mov
xchg
sbb
add
push
icebp
add
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
adc
push
add
ret
sbb
in
(bad)
mov
scas
add
gs
in
jmp
cmp
add
sbb
cmp
jmp
add
stos
sbb
in
inc
lods
add
cmp
cmp
mov
sbb
add
cmps
daa
cmp
lods
lods
add
lods
daa
cmp
lahf
lods
add
popf
daa
cmp
xchg
lods
add
mov
cmp
bound
cmp
jo
add
jb
cmp
popa
lods
dec
sub
add
add
xchg
daa
cmp
aaa
lods
add
xchg
daa
cmp
xor
cmp
xor
daa
cmp
or
cmp
sti
lods
add
iret
sub
add
lods
add
pop
daa
cmp
mov
daa
cmp
jle
add
cld
daa
cmp
lahf
lods
add
cmp
cmp
pushf
lods
add
data16
cmp
add
lahf
lods
add
dec
daa
cmp
xor
add
add
inc
sub
add
add
ins
sub
add
lods
add
sub
cmp
dec
lods
add
sub
add
add
cmp
lods
add
call
lods
add
sub
add
add
shr
cmp
mov
cmp
js
mov
cmp
fild
cmp
scas
stos
add
push
sub
add
sub
add
stos
add
bound
cmp
mov
sub
add
add
les
add
jae
add
jae
add
jae
add
stos
add
loopne
aaa
add
add
pop
jae
add
add
stos
add
dec
jae
add
stos
add
inc
jae
add
add
ins
jns
add
jns
add
stos
add
push
jae
add
stos
add
sbb
stos
add
or
add
jae
add
aaa
add
jb
add
add
push
add
add
mov
add
jb
add
add
div
add
jb
add
add
stc
jno
add
add
add
mov
stos
add
push
jns
add
stos
add
cmc
js
add
stos
add
sar
sub
aaa
add
test
aaa
add
add
test
aaa
add
test
aaa
add
test
aaa
add
add
ss
add
js
add
js
add
js
add
js
add
add
fdivr
add
aaa
add
add
push
jns
add
mov
add
add
mov
add
aaa
add
mov
add
jb
add
mov
add
mov
add
jb
add
mov
add
jb
add
mov
add
jb
add
mov
add
jb
add
add
sbb
test
aaa
add
jb
add
add
ret
add
add
add
mov
dec
in
inc
jb
add
mov
add
jb
add
jb
add
add
popf
jb
add
in
jmp
jo
add
in
call
jo
add
add
xchg
jmp
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
les
add
pop
in
add
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
and
in
jmp
js
add
scas
add
data16
add
scas
add
ins
jbe
add
add
jne
aaa
add
js
add
scas
add
mov
scas
add
es
add
add
scas
add
or
scas
add
pop
jbe
add
jbe
add
jbe
add
aaa
add
ja
add
add
adc
add
add
pop
ja
add
add
cmp
add
add
lock
add
ja
add
add
scas
add
xor
add
sub
add
test
add
jae
cmp
in
add
leave
jno
add
lods
add
pop
jb
add
jno
add
jb
add
jb
add
sub
add
aad
cmp
add
push
lods
add
mov
lods
add
fldcw
add
(bad)
sub
add
lods
sub
add
mov
lods
add
push
sub
add
loop
cmp
mov
cmp
jp
add
test
add
sub
add
cmp
mov
add
lods
add
mov
lods
add
lahf
outs
aaa
add
outs
aaa
add
outs
aaa
add
add
mov
add
add
dec
outs
aaa
add
add
xchg
jo
add
add
xchg
jo
add
stos
add
pop
jo
add
stos
add
test
add
add
xor
add
add
in
inc
outs
aaa
add
stos
add
movq
add
stos
add
push
outs
aaa
add
stos
add
and
add
outs
aaa
add
outs
aaa
add
outs
aaa
add
jne
add
add
push
jne
add
add
jne
add
add
aaa
add
add
add
aaa
add
jne
add
add
dec
jne
add
add
retf
add
stos
add
popa
jae
add
stos
add
sbb
aaa
add
stos
add
or
add
je
add
stos
add
in
je
add
jne
add
stos
add
pop
jae
add
jae
add
add
je
add
add
add
aaa
add
add
jae
add
stos
add
into
je
add
add
stos
add
adc
and
aaa
add
stos
add
cli
jae
add
je
add
test
aaa
add
test
aaa
add
add
test
aaa
add
test
aaa
add
jb
add
aaa
add
add
pop
je
add
add
add
and
jg
add
mov
mov
add
aaa
add
data16
add
add
scas
data16
add
add
add
stos
data16
add
add
and
add
data16
add
mov
add
aaa
add
mov
add
mov
add
mov
add
aaa
add
aaa
add
mov
add
mov
add
mov
add
add
add
add
aaa
add
add
push
aaa
add
add
aaa
add
add
repz
aaa
add
add
ds
aaa
add
add
gs
aaa
add
add
ror
add
push
aaa
add
mov
add
mov
add
push
aaa
add
scas
add
pop
push
aaa
add
aaa
add
add
scas
add
adc
add
scas
add
das
push
aaa
add
add
cli
push
aaa
add
add
push
aaa
add
add
push
aaa
add
push
aaa
add
aaa
add
add
in
push
aaa
add
add
sti
push
aaa
add
add
xchg
push
aaa
add
scas
add
pushf
push
aaa
add
scas
fist
add
scas
add
(bad)
push
aaa
add
scas
add
lods
push
aaa
add
scas
add
mov
scas
add
(bad)
push
aaa
add
scas
add
mov
scas
add
fcom
add
add
inc
push
aaa
add
push
aaa
add
add
mov
add
add
arpl
add
add
add
sahf
push
aaa
add
add
lds
add
add
rcl
adc
add
out
push
aaa
add
scas
add
or
add
push
aaa
add
lods
add
pushf
push
aaa
add
lods
add
mov
add
aaa
add
lods
add
lea
add
aaa
add
mov
add
add
mov
add
aaa
add
dec
aaa
add
dec
aaa
add
add
dec
aaa
add
sbb
lods
add
imul
aaa
add
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
test
nop
sbb
lods
add
outs
hlt
ss
lods
add
out
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
add
add
dec
aaa
add
dec
aaa
add
add
dec
aaa
add
add
ror
add
add
test
lods
add
mov
aaa
add
lods
add
les
add
dec
aaa
add
les
add
lods
add
hlt
dec
aaa
add
in
inc
aaa
add
stos
add
repz
aaa
add
stos
add
dec
dec
aaa
add
stos
add
pop
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
add
push
aaa
add
add
cmp
aaa
add
add
stos
add
pop
push
aaa
add
add
cmp
add
stos
add
push
push
aaa
add
add
jecxz
aaa
add
stos
add
pop
dec
aaa
add
add
lds
add
stos
add
and
add
stos
add
iret
dec
aaa
add
push
aaa
add
dec
aaa
add
dec
aaa
add
add
aaa
add
dec
aaa
add
add
in
dec
aaa
add
add
or
add
add
pop
dec
aaa
add
cmp
push
dec
aaa
add
stos
add
or
add
add
add
aaa
add
stos
add
repz
aaa
add
stos
add
mov
add
add
adc
mov
add
dec
aaa
add
add
add
fisttp
add
push
aaa
add
dec
aaa
add
test
aaa
add
test
aaa
add
dec
aaa
add
push
aaa
add
add
jmp
add
push
aaa
add
add
cld
push
aaa
add
aas
in
jmp
mov
add
add
push
aaa
add
mov
add
push
aaa
add
mov
add
push
aaa
add
push
aaa
add
mov
add
mov
add
mov
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
add
add
call
add
mov
add
add
cmp
aaa
add
mov
add
mov
add
aaa
add
mov
add
cmp
aaa
add
scas
add
bound
add
scas
add
stc
dec
aaa
add
dec
aaa
add
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
dec
aaa
add
push
aaa
add
push
aaa
add
add
push
aaa
add
dec
aaa
add
xor
dec
aaa
add
add
inc
dec
aaa
add
scas
add
dec
dec
aaa
add
add
enter
add
mov
dec
aaa
add
add
adc
add
aaa
add
add
les
add
dec
aaa
add
scas
add
push
dec
aaa
add
scas
add
adc
scas
add
xor
add
dec
aaa
add
inc
aaa
add
add
inc
aaa
add
int3
dec
aaa
add
xor
call
dec
aaa
add
add
test
call
inc
aaa
add
inc
aaa
add
dec
aaa
add
in
inc
aaa
add
add
dec
aaa
add
lods
add
mov
aaa
add
lods
add
ret
dec
aaa
add
lods
add
mov
xor
jmp
dec
aaa
add
add
lods
add
loopne
aaa
add
add
dec
dec
aaa
add
dec
aaa
add
aaa
add
xor
(bad)
mov
test
aaa
add
add
cmps
dec
aaa
add
add
lods
dec
aaa
add
add
test
aaa
add
dec
aaa
add
lods
add
jb
aaa
add
imul
add
add
xchg
dec
aaa
add
dec
aaa
add
lods
add
jne
aaa
add
lods
add
nop
dec
aaa
add
add
lahf
dec
aaa
add
test
add
in
call
aaa
add
add
sub
aaa
add
test
add
add
push
test
add
add
test
add
xor
add
xor
das
lods
add
and
add
stos
add
adc
aaa
add
xor
rep
add
push
test
add
stos
add
inc
test
add
stos
add
inc
test
add
test
aaa
add
in
inc
add
xor
mov
add
loope
aaa
add
test
aaa
add
add
or
add
push
xor
add
in
dec
test
aaa
add
stos
add
pop
xor
mov
xor
add
xor
inc
add
mov
aaa
add
add
stos
add
into
xor
add
xor
add
xor
(bad)
aas
xor
xlat
test
aaa
add
aaa
add
xor
push
add
fild
in
push
stos
add
popf
xor
add
stos
out
aaa
add
test
aaa
add
in
call
stos
add
je
aaa
add
stos
add
add
add
aaa
add
stos
add
movs
xor
jmp
test
aaa
add
mov
add
aaa
add
mov
add
aaa
add
mov
add
add
add
daa
in
jmp
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
in
push
jnp
add
add
jnp
add
add
fs
add
add
push
jnp
add
mov
add
jnp
add
jnp
add
mov
add
add
aaa
add
mov
add
jp
add
in
call
jp
add
mov
add
jp
add
jns
add
mov
add
jns
add
jp
add
mov
add
jns
add
jns
add
jns
add
add
loop
aaa
add
add
jns
aaa
add
add
js
add
mov
add
mov
add
js
add
add
add
mov
add
jns
add
mov
add
js
add
mov
add
jbe
add
mov
add
mov
add
jbe
add
jbe
add
mov
add
jbe
add
mov
add
add
jbe
add
mov
add
aaa
add
mov
add
aaa
add
mov
add
mov
add
mov
add
add
add
jno
aaa
add
add
mov
add
add
fwait
xor
inc
mov
add
scas
add
xchg
add
jbe
aaa
add
add
scas
add
inc
xor
aad
add
sub
scas
add
cmp
add
push
xor
push
xor
add
aaa
add
lods
add
fld
add
sbb
add
sbb
add
hlt
xor
add
xor
dec
scas
inc
add
sub
aaa
add
add
sub
add
div
daa
mov
add
jne
add
add
call
mov
add
jbe
add
mov
add
jbe
add
mov
add
jne
add
jbe
add
mov
add
aaa
add
add
mov
aaa
add
add
jne
add
jne
add
jg
add
jg
add
add
scas
jg
add
add
mov
mov
add
jg
add
lods
add
pop
xor
aaa
lods
add
fwait
xor
sub
xor
cmc
stos
add
ins
xor
or
add
aaa
add
stos
add
xchg
xor
or
add
stos
add
cdq
jg
add
add
test
add
jg
add
aaa
add
add
push
jg
add
jg
add
add
pop
jg
add
add
mov
add
add
cmp
add
add
add
add
sbb
add
dec
sbb
add
push
sbb
add
pop
sbb
add
dec
sbb
add
dec
sbb
add
pop
sbb
add
mov
add
sbb
add
sbb
add
sbb
add
add
push
cmp
cmp
add
cmp
sub
cmp
xor
add
sbb
add
sbb
add
sbb
add
add
sbb
add
add
push
sbb
add
sbb
add
test
cmp
add
cmp
test
add
xor
cmp
add
cwde
stos
add
rcr
cmp
sahf
stos
add
pop
sbb
add
add
and
stos
add
adc
cmp
(bad)
out
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
in
push
cmp
push
mov
add
add
push
cmp
inc
stos
add
xlat
push
cmp
pop
mov
add
mov
add
push
cmp
sbb
cmp
add
cmp
mov
add
scas
push
cmp
fild
cmp
in
scas
add
mov
scas
add
fbld
cmp
jae
add
retf
add
and
add
add
and
add
and
add
sbb
add
add
popf
sbb
add
add
scas
add
(bad)
sbb
add
add
jb
cmp
inc
stos
xchg
sbb
scas
add
inc
popa
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
out
add
fldcw
add
out
add
data16
add
scas
add
cmps
scas
add
cmp
cmp
xchg
scas
add
data16
add
and
add
sbb
add
add
and
scas
add
adc
cmp
push
sbb
add
push
in
call
adc
(bad)
cli
sbb
add
scas
add
icebp
sbb
add
sbb
add
sbb
add
scas
add
rcr
cmp
repz
add
ficomp
cmp
loop
add
scas
sbb
add
scas
add
jle
cmp
out
add
cmps
scas
add
xchg
scas
add
imul
les
add
sahf
jg
add
add
jg
add
add
push
scas
add
push
scas
add
scas
add
and
dec
movs
xchg
sbb
scas
add
retf
add
scas
add
push
scas
add
es
add
es
add
push
scas
add
pop
scas
add
push
push
in
(bad)
mov
movs
xchg
sbb
lods
add
inc
jp
add
lods
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
mov
lods
add
mov
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
xchg
test
add
lods
add
(bad)
mov
add
lods
add
lods
add
loop
inc
add
and
lods
add
jb
ss
lods
add
out
add
aad
add
xlat
lods
add
shl
add
add
shl
add
add
lods
add
cmps
lods
add
cmps
lods
add
mov
sbb
add
add
fidiv
add
data16
add
data16
add
push
lods
add
push
lods
add
daa
lods
add
add
push
sbb
add
xchg
sbb
lods
add
fidiv
add
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
xlat
stos
add
xchg
push
in
jmp
stos
add
(bad)
stos
add
jno
cmp
xchg
push
in
jmp
stos
xchg
stos
add
cmps
stos
add
jne
xor
xchg
stos
add
xchg
stos
add
fs
add
stos
add
outs
jge
add
sbb
add
push
jge
add
add
jle
add
stos
add
es
add
push
stos
add
pop
stos
add
xchg
push
in
jmp
sbb
add
stos
add
jbe
cmp
test
add
add
jge
add
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
adc
add
stos
add
out
add
xchg
stos
add
xchg
stos
add
sub
stos
add
push
stos
add
push
stos
add
stos
add
stos
jl
add
add
stos
jl
add
add
stos
add
mov
stos
add
es
add
es
add
pop
stos
add
mov
pop
cmp
test
add
test
add
(bad)
test
add
cmps
test
add
adc
add
sbb
add
test
cmps
mov
add
add
push
mov
add
add
add
addr16
add
add
add
inc
pop
add
sbb
pop
add
mov
add
pop
add
mov
add
mov
add
mov
add
mov
add
in
call
mov
add
mov
add
cmp
mov
add
mov
add
mov
add
mov
add
mov
cmps
mov
add
mov
add
pop
add
add
into
pop
add
add
mov
add
add
push
mov
add
mov
add
mov
add
inc
in
call
mov
add
mov
add
add
scas
add
push
mov
add
scas
add
sub
scas
add
(bad)
scas
add
out
add
out
add
ds
add
add
pop
pop
add
pop
add
scas
add
xchg
scas
add
xchg
scas
add
push
inc
in
call
cmp
je
xchg
sbb
add
xchg
add
add
add
push
scas
add
push
scas
add
es
add
es
add
pop
scas
add
mov
scas
add
mov
scas
add
(bad)
scas
add
out
add
out
add
loopne
xor
(bad)
scas
add
out
add
out
add
xlat
scas
add
add
add
lods
xchg
sbb
add
add
add
add
scas
add
scas
add
inc
inc
in
call
add
and
jmp
add
cmps
mov
add
add
push
scas
add
xchg
xor
es
add
push
scas
add
pop
scas
add
daa
scas
add
dec
data16
sbb
add
or
add
lods
add
call
add
add
add
add
lods
add
out
add
out
add
xlat
lods
add
popa
inc
in
push
(bad)
aaa
add
lods
xchg
sbb
data16
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
inc
inc
in
call
add
adc
jmp
add
xchg
mov
add
add
lods
add
add
add
lods
add
push
lods
add
daa
lods
add
daa
lods
add
pop
fs
sbb
lods
add
jle
ss
lods
add
cs
lods
add
out
add
(bad)
lods
add
xlat
lods
add
xchg
inc
in
jmp
(bad)
aaa
add
add
es
lods
add
xchg
lods
add
data16
data16
add
push
lods
add
push
lods
add
adc
dec
std
aaa
add
add
push
lods
add
lods
add
lods
add
push
mov
add
lods
add
lods
add
mov
lods
add
pop
lods
add
in
add
out
add
scas
arpl
add
sbb
stos
add
push
arpl
add
stos
add
arpl
add
add
stos
add
xchg
stos
add
xchg
stos
add
xchg
cmp
jmp
cmp
call
mov
add
add
push
stos
add
fcomi
xor
stos
add
stos
add
push
stos
add
push
stos
add
inc
jns
add
sbb
add
inc
jns
add
stos
add
(bad)
js
add
stos
push
stos
add
out
add
out
add
inc
cmp
jmp
mov
sbb
stos
add
out
js
add
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
mov
add
xchg
sbb
add
fidivr
add
add
data16
add
data16
push
stos
add
push
stos
add
daa
stos
add
es
add
add
in
call
stos
add
xchg
cmp
jmp
stos
add
(bad)
test
add
out
add
aam
xor
(bad)
test
add
out
add
out
add
ds
add
add
pop
js
add
js
add
add
test
add
push
aas
in
jmp
add
inc
aas
in
call
add
cmps
test
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
jno
add
sbb
add
jbe
ss
mov
add
jb
add
mov
add
mov
add
add
mov
add
mov
add
add
xchg
sbb
jno
add
mov
add
mov
add
mov
add
add
inc
cmp
aaa
add
add
scas
jno
add
add
es
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
cld
aaa
add
in
jmp
cmp
aaa
add
add
ds
add
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
mov
add
add
pop
jae
add
add
scas
add
scas
add
push
scas
add
push
scas
add
daa
scas
add
es
add
add
call
add
add
in
jmp
add
add
cs
add
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
cmps
scas
add
adc
add
add
in
jmp
add
add
in
(bad)
mov
mov
sbb
add
fidiv
add
add
push
scas
add
push
scas
add
es
add
es
add
pop
scas
add
push
scas
add
xchg
push
in
(bad)
mov
mov
sbb
scas
mov
ss
lods
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
xlat
lods
add
(bad)
lods
add
xchg
push
in
call
cmp
mov
xchg
sbb
pop
add
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
adc
jmp
add
and
inc
add
add
adc
push
lods
add
push
lods
add
and
add
lods
add
mov
clc
aaa
add
lods
add
out
add
(bad)
lods
add
lods
xor
add
out
add
(bad)
lods
add
xor
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
push
jo
add
add
lods
add
lods
add
(bad)
jo
add
sbb
add
push
outs
add
add
outs
add
add
lods
add
lods
add
pop
lods
add
push
lods
add
xchg
push
in
(bad)
cmp
aaa
add
sbb
lods
add
mov
ss
stos
add
(bad)
stos
add
(bad)
stos
add
out
out
add
xlat
stos
add
(bad)
stos
add
xchg
push
in
(bad)
fyl2xp1
aaa
add
stos
add
cmps
stos
add
cmps
stos
add
push
test
add
stos
add
cs
add
push
stos
add
fs
add
stos
add
jle
add
xchg
sbb
jne
add
stos
add
dec
jne
add
add
stos
add
es
add
push
stos
add
pop
stos
add
push
push
in
(bad)
mov
lods
xchg
sbb
stos
add
(bad)
je
add
stos
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
xchg
push
in
push
sti
aaa
add
sbb
je
add
add
push
stos
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
adc
jmp
stos
add
add
call
stos
add
xchg
push
in
call
aaa
add
add
push
stos
add
in
add
out
add
inc
push
in
(bad)
(bad)
sti
aaa
add
stos
add
out
add
(bad)
test
xor
out
add
cmps
test
xchg
test
xor
cmps
test
add
xchg
test
add
push
push
add
push
mov
add
add
addr16
add
add
nop
sbb
add
out
add
add
inc
data16
mov
add
mov
add
mov
add
mov
add
mov
add
in
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
loop
add
mov
add
add
push
data16
sbb
add
(bad)
data16
add
out
gs
add
data16
add
add
push
mov
add
add
inc
in
call
aaa
add
mov
add
aaa
add
mov
add
aaa
add
add
jb
aaa
add
scas
add
mov
aaa
add
scas
add
adc
aaa
add
scas
add
idiv
aaa
add
scas
add
add
aaa
add
std
aaa
add
cld
aaa
add
std
aaa
add
sbb
add
jae
add
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
adc
call
or
add
scas
add
mov
scas
add
in
cmp
adc
add
push
or
add
scas
add
scas
or
add
scas
add
cmp
cmp
jmp
add
xchg
or
add
add
scas
add
(bad)
push
cmp
test
push
cmp
scas
scas
add
ret
add
push
cmp
je
xchg
sbb
push
add
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
adc
call
lods
xchg
sbb
scas
add
out
add
add
scas
add
push
scas
add
push
scas
add
out
add
out
add
xlat
lods
add
(bad)
lods
add
xchg
push
in
jmp
lods
add
mov
lods
add
xchg
push
in
call
push
cmp
xchg
lods
add
xchg
lods
add
movs
lods
add
cmps
lods
add
mov
or
add
lods
add
push
lods
add
sub
add
add
lods
add
push
lods
add
mov
lods
add
lods
add
pop
lods
add
pop
lods
add
inc
dec
add
lods
add
sbb
add
xchg
dec
add
sbb
lods
add
xchg
push
ss
lods
add
push
dec
ss
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
xchg
lods
add
xchg
push
in
(bad)
cmp
cmp
xchg
lods
add
repz
add
add
or
add
sbb
add
mov
add
add
push
lods
add
push
lods
add
lods
add
lods
add
pop
lods
add
push
lods
add
xchg
push
in
(bad)
out
add
add
sbb
lods
add
mov
ss
stos
(bad)
stos
add
(bad)
stos
add
out
add
out
add
xlat
stos
add
(bad)
stos
add
xchg
push
in
dec
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
push
mov
add
stos
add
and
inc
add
add
push
stos
add
fs
add
stos
add
jle
add
xchg
sbb
add
push
add
stos
add
dec
push
add
stos
add
es
add
push
stos
add
pop
stos
add
push
dec
in
(bad)
out
sbb
add
sbb
stos
add
(bad)
push
ss
stos
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
xchg
dec
in
jmp
stos
add
pop
sbb
add
add
in
jmp
add
inc
dec
in
call
add
gs
add
movs
sbb
add
dec
in
call
add
data16
add
stos
add
push
stos
add
xor
add
add
es
add
push
stos
add
lods
push
xor
out
add
out
add
aam
add
xlat
test
ss
test
fld
add
jbe
add
add
ss
add
add
mov
add
add
push
mov
add
add
adc
call
lods
xchg
sbb
add
push
dec
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
in
jmp
mov
add
in
call
mov
add
mov
add
mov
add
mov
add
xor
cmps
mov
add
mov
add
dec
ss
stos
xchg
sbb
add
add
out
add
add
push
mov
add
addr16
add
dec
in
call
add
adc
jmp
mov
add
add
push
mov
add
mov
add
fdiv
add
mov
add
mov
add
scas
add
out
add
scas
dec
add
sbb
scas
add
dec
dec
ss
scas
add
ds
add
scas
add
xchg
scas
add
xchg
scas
xchg
push
in
push
cmp
xchg
scas
add
xchg
scas
add
scas
add
scas
add
xchg
test
add
scas
add
movs
fidiv
add
add
push
scas
add
and
add
daa
scas
add
dec
dec
add
xchg
sbb
dec
add
scas
add
pop
inc
ss
scas
add
out
add
(bad)
scas
xlat
scas
add
xchg
push
in
call
scas
add
imul
xchg
sbb
add
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
data16
add
inc
push
in
call
add
add
scas
dec
add
add
es
add
es
push
scas
add
push
scas
add
daa
scas
add
es
add
mov
scas
add
push
push
in
jmp
lods
add
push
scas
add
(bad)
lods
add
out
add
leave
ret
xor
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
mov
add
add
outs
dec
add
inc
add
lods
add
push
lods
add
push
lods
add
adc
inc
test
sbb
add
push
dec
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
pop
lods
add
push
lods
add
push
push
in
jmp
lods
add
(bad)
lods
add
push
adc
add
lods
add
push
lods
add
(bad)
lods
cmps
lods
add
jno
xor
xchg
lods
add
xchg
lods
add
movs
lods
add
cmps
lods
add
push
dec
add
sbb
add
(bad)
dec
add
add
out
inc
add
add
data16
add
push
lods
add
push
lods
add
adc
jmp
lods
add
add
call
lods
add
test
lods
add
push
lods
ins
adc
out
add
out
add
xlat
stos
add
xlat
stos
add
jbe
add
add
xchg
inc
add
inc
add
stos
add
cmps
stos
add
cmps
stos
add
mov
push
cmp
stos
add
stos
add
push
stos
add
push
stos
add
cmps
test
push
stos
add
neg
add
daa
stos
add
adc
add
pop
stos
add
(bad)
dec
add
sbb
dec
ss
stos
add
es
ss
stos
add
(bad)
stos
add
out
add
out
add
mov
pshufb
lods
xchg
sbb
dec
add
stos
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
data16
add
inc
push
in
jmp
cmp
adc
jmp
pshufb
add
mov
stos
add
push
stos
add
push
stos
add
es
add
es
add
pop
stos
add
push
stos
add
push
push
in
dec
add
sbb
cmp
add
test
add
ss
test
add
cmps
test
add
xchg
test
add
cmps
test
in
(bad)
cmp
cmp
test
add
aaa
add
add
data16
add
add
push
mov
add
add
daa
mov
add
mov
add
pop
in
inc
add
mov
add
mov
add
in
call
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
aaa
add
stos
nop
sbb
or
add
push
or
add
xchg
mov
add
add
addr16
add
add
in
jmp
dec
aaa
add
add
int
aaa
add
add
adc
stos
nop
sbb
or
add
es
add
mov
add
mov
add
mov
add
scas
add
out
add
inc
add
add
xchg
add
add
push
mov
add
scas
add
cmps
scas
pop
xchg
xor
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
sahf
or
add
sbb
add
or
add
add
outs
pop
aaa
add
add
scas
add
push
scas
add
push
scas
add
adc
in
jmp
scas
add
add
in
call
scas
add
xchg
add
jmp
inc
aaa
add
add
push
scas
in
add
out
add
inc
add
call
inc
aaa
add
scas
add
out
add
(bad)
scas
add
lds
add
scas
add
cmps
scas
add
xchg
scas
add
sahf
mov
add
scas
add
xchg
scas
add
xchg
scas
add
(bad)
sbb
add
add
push
scas
add
pop
scas
add
scas
add
out
aaa
add
pop
scas
add
sbb
add
add
(bad)
push
aaa
add
scas
add
es
add
es
add
pop
scas
add
push
scas
add
push
add
inc
lods
add
(bad)
lods
add
out
add
out
add
push
scas
add
(bad)
lods
add
cmps
lods
add
add
lods
add
xchg
lods
add
movs
lods
add
cmps
lods
sahf
sbb
add
sbb
add
inc
sbb
add
add
outs
adc
add
add
lods
add
push
lods
add
push
lods
add
adc
in
inc
nop
sbb
lods
add
data16
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
xlat
lods
add
(bad)
lods
add
xchg
add
inc
add
aaa
add
add
push
adc
add
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
push
add
(bad)
cld
aas
aaa
add
sbb
add
push
adc
add
add
push
lods
add
push
lods
add
lods
add
lods
add
pop
lods
add
push
lods
xchg
add
jmp
lods
add
mov
lods
add
lods
add
out
add
(bad)
stos
add
ins
xchg
xor
out
add
out
add
xlat
stos
add
xlat
stos
add
xchg
aaa
add
cmps
nop
sbb
aaa
add
adc
add
xchg
stos
add
stos
add
stos
add
inc
sti
in
inc
add
ds
add
add
or
aaa
add
xchg
sbb
add
or
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
pop
stos
add
push
stos
add
push
cli
in
inc
cli
in
dec
stos
add
aad
aaa
add
stos
add
mov
cli
in
(bad)
fdivr
mov
xchg
sbb
or
add
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
adc
in
jmp
stos
add
fdivr
add
sar
in
jmp
cmp
in
jmp
sti
in
inc
mov
sbb
add
test
aaa
add
test
add
out
add
(bad)
test
add
cmps
test
add
cmp
aaa
add
mov
sbb
or
add
mov
add
add
push
mov
add
add
addr16
add
add
and
in
(bad)
cli
xor
add
add
(bad)
in
push
lods
xchg
sbb
add
into
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
ds
add
ds
add
ds
add
aaa
add
stos
xchg
sbb
add
add
add
mov
add
add
push
mov
add
add
addr16
add
add
and
in
call
add
adc
in
jmp
mov
add
add
push
mov
add
mov
add
jg
add
mov
add
mov
add
scas
add
out
add
scas
add
add
sbb
scas
add
dec
add
add
add
scas
add
add
add
scas
add
xchg
scas
add
xchg
scas
add
xchg
repz
jmp
repz
call
repz
(bad)
mov
scas
add
push
scas
add
fs
add
scas
add
and
in
jmp
add
add
es
add
push
scas
add
xor
xor
test
add
es
add
push
scas
add
lods
(bad)
xor
out
add
out
add
xlat
scas
add
xlat
scas
add
add
add
scas
add
aad
add
fisubr
add
test
add
add
mov
aaa
add
aaa
add
scas
add
data16
add
push
scas
add
push
scas
adc
in
jmp
repz
inc
xor
add
repz
(bad)
mov
mov
sbb
add
add
scas
add
push
scas
add
push
scas
add
out
add
out
add
xlat
lods
add
(bad)
lods
add
xchg
repz
call
lods
add
xchg
aaa
add
xor
add
jbe
aaa
add
xor
add
xor
add
add
cmp
test
sbb
add
push
push
aaa
add
add
push
lods
add
push
lods
add
lods
add
lods
add
pop
lods
add
push
lods
add
xchg
repnz
call
xor
add
xor
add
in
jmp
xor
add
add
in
jmp
xor
add
xor
add
add
idiv
add
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
push
icebp
in
dec
xor
add
sbb
add
push
push
add
add
push
lods
add
push
lods
add
lods
lods
add
pop
lods
add
push
lods
add
xchg
icebp
in
inc
xor
add
sbb
lods
add
mov
ss
stos
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
xlat
stos
add
(bad)
stos
add
xchg
icebp
in
inc
aaa
add
add
cmps
add
add
stos
add
xchg
stos
stos
add
stos
add
push
stos
add
(bad)
idiv
stos
add
stos
add
sub
idiv
add
idiv
adc
idiv
es
add
push
stos
add
pop
repz
jp
idiv
loop
idiv
push
stos
add
push
stos
add
xor
idiv
push
idiv
jbe
idiv
(bad)
stos
add
out
add
les
idiv
add
jb
idiv
cmps
stos
add
cmps
stos
add
xor
repnz
fcmovbe
idiv
mov
stos
add
xchg
stos
add
fsubr
idiv
push
idiv
push
stos
add
push
stos
add
ds
bnd
add
call
add
es
add
fisub
idiv
push
clc
idiv
es
add
es
or
idiv
cmp
idiv
out
add
(bad)
test
repnz
into
idiv
push
clc
idiv
(bad)
test
add
and
call
idiv
xchg
test
add
fs
cmc
jmp
idiv
(bad)
div
jmp
add
data16
add
repnz
idiv
push
add
inc
add
add
push
mov
add
cmc
inc
idiv
fiadd
idiv
push
mov
add
mov
add
loop
jmp
add
call
mov
add
mov
add
fwait
cmc
dec
in
idiv
out
add
out
add
mov
int
push
mov
add
lods
repnz
add
loopne
jmp
mov
add
mov
add
add
(bad)
mov
push
mov
(bad)
fidiv
repnz
mov
mov
call
repnz
mov
call
repnz
mov
call
scas
repnz
repnz
bnd
bnd
repnz
inc
add
repnz
scas
repnz
fsubr
repnz
bnd
mov
jmp
mov
call
call
inc
pushf
cmc
jmp
cmc
call
fwait
cmc
dec
cmc
call
add
pop
hlt
idiv
inc
hlt
idiv
inc
hlt
idiv
add
jo
idiv
sbb
idiv
xchg
repz
add
idiv
inc
repz
push
repz
add
idiv
(bad)
repz
sub
idiv
enter
mov
idiv
(bad)
scas
add
in
lods
bnd
out
(bad)
cld
out
jmp
idiv
sub
idiv
push
jmp
idiv
retf
(bad)
cmp
idiv
add
jmpw
jo
idiv
mov
idiv
cmps
call
idiv
jb
idiv
pushf
call
idiv
(bad)
jmp
idiv
shr
idiv
in
call
idiv
sahf
jmp
idiv
mov
idiv
mov
idiv
sbb
idiv
push
in
(bad)
mov
in
dec
jmp
idiv
add
push
in
call
in
dec
idiv
mov
idiv
jp
idiv
ss
idiv
xchg
jmp
cmc
inc
idiv
xchg
cmc
call
xchg
cmc
push
xchg
cmc
call
xchg
cmc
dec
xchg
cmc
(bad)
mov
xchg
cmc
jmp
cmc
push
cmc
push
cmc
call
inc
add
cmc
jmp
xchg
cmc
dec
cmc
call
cmc
call
cmc
call
push
cdq
cmc
inc
jmp
cdq
cmc
(bad)
cld
xchg
cmc
jmp
xchg
cmc
call
xchg
cmc
jmp
xchg
cmc
call
xchg
cmc
jmp
cmc
(bad)
jl
cmc
jmp
cmc
jmp
cmc
jmp
cdq
cmc
(bad)
cmp
cmc
push
in
inc
add
idiv
lock
idiv
jmp
jmp
idiv
mov
jmp
idiv
es
idiv
adc
idiv
call
call
idiv
sahf
cdq
cmc
jmp
cdq
cmc
call
call
cmc
jmp
cdq
cmc
call
cdq
cmc
dec
cdq
cmc
(bad)
cli
cwde
cmc
inc
add
cwde
cmc
(bad)
js
bnd
aam
jmp
aam
call
aam
(bad)
call
shl
jmp
shl
inc
shl
dec
idiv
dec
aad
inc
call
idiv
ret
dec
dec
idiv
pusha
aam
jmp
inc
add
idiv
mov
(bad)
idiv
(bad)
idiv
(bad)
aad
call
aad
push
idiv
jb
idiv
pop
aad
push
fdivp
(bad)
(bad)
fdivp
(bad)
js
bnd
fdivp
call
add
outs
stos
add
pop
stos
add
push
stos
add
loopne
bnd
stos
add
pop
movs
repnz
add
stos
add
mov
stos
add
inc
mov
call
stos
add
(bad)
test
repnz
test
bnd
test
idiv
mov
idiv
repnz
(bad)
mov
aad
push
aad
(bad)
cld
aad
jmp
in
idiv
push
in
idiv
dec
shl
push
shl
inc
add
shl
dec
idiv
into
in
idiv
sbb
idiv
add
idiv
mov
idiv
(bad)
shl
push
idiv
imul
idiv
add
idiv
mov
idiv
sbb
idiv
or
idiv
mov
idiv
adc
jmp
shl
push
idiv
lock
call
shl
(bad)
(bad)
in
idiv
jb
idiv
add
(bad)
idiv
mov
idiv
add
idiv
add
idiv
or
idiv
adc
idiv
not
idiv
add
idiv
and
idiv
or
idiv
xor
idiv
data16
idiv
pushf
out
idiv
pop
out
idiv
cmp
idiv
cmp
idiv
es
add
repnz
cmp
bnd
mov
add
stos
repnz
stos
repnz
add
stos
repnz
lods
repnz
stos
repnz
stos
repnz
call
add
ds
repnz
movs
repnz
mov
stos
bnd
bnd
test
repnz
repnz
cmp
idiv
dec
shl
push
shl
inc
add
shl
(bad)
jle
idiv
jo
repnz
shl
jmp
scas
add
inc
mov
call
repnz
call
bnd
repnz
bnd
mov
(bad)
mov
scas
repnz
mov
call
scas
add
push
scas
cmp
inc
jno
adc
gs
push
arpl
repz
add
xor
jae
inc
pop
inc
mov
inc
jno
mov
addr16
xchg
pop
ins
jnp
push
je
arpl
mov
dec
js
ins
sub
dec
or
adc
imul
lods
xor
jb
inc
pop
outs
sbb
add
push
mov
lods
inc
add
push
outs
cli
inc
push
add
stos
xor
jae
inc
pop
push
call
and
jne
ins
retf
test
pop
bound
inc
jno
jne
push
je
pop
ss
lods
fadd
cdq
dec
addr16
or
jb
push
push
push
sub
outs
add
mov
add
xor
imul
inc
inc
add
lods
xor
jae
push
gs
jge
popa
lds
js
lods
cmp
sbb
push
divps
xor
adc
addr16
sbb
adc
jb
dec
push
jae
test
pusha
popa
mov
jno
mov
add
dec
pop
inc
xchg
pop
pop
arpl
dec
add
inc
jno
fwait
dec
pop
push
mov
jns
lods
push
add
inc
jno
sbb
push
adc
addr16
lods
xor
push
arpl
inc
jno
mov
pop
addr16
dec
pop
gs
rol
sbb
dec
pop
pop
addr16
adc
pop
jb
add
inc
push
gs
lods
push
add
dec
pop
je
inc
jno
das
inc
push
ins
retf
bound
mov
lods
inc
jb
pop
push
inc
mov
cmps
push
gs
pop
ins
jnp
addr16
inc
popa
jne
dec
jo
push
stos
test
push
push
push
popa
sbb
jb
dec
push
jae
jl
(bad)
cmp
pop
arpl
add
repz
jno
adc
outs
cli
dec
repz
mov
sbb
push
sti
cs
dec
arpl
pop
inc
inc
gs
movs
add
pop
je
dec
pop
imul
pop
pop
arpl
pop
pop
outs
nop
test
push
popa
push
ss
add
stos
fild
pop
inc
ins
test
sbb
gs
pop
gs
test
pop
fs
inc
push
dec
mov
push
ins
mov
test
pop
ins
sti
jbe
jp
ins
imul
stos
inc
jb
dec
or
imul
dec
gs
cs
je
add
push
addr16
jno
stos
pop
pusha
popa
mov
push
arpl
mov
add
jb
imul
pop
pop
outs
push
mov
add
addr16
or
add
sub
fild
xor
push
das
sub
inc
popa
mov
add
jae
ins
jmp
push
push
addr16
mov
add
dec
pop
je
inc
pop
arpl
inc
jo
pop
mov
sub
fs
push
pop
fs
repz
mov
gs
xor
(bad)
jmp
ins
jnp
pop
jp
mov
add
addr16
xchg
push
pop
popa
jo
aas
imul
add
add
add
dec
addr16
push
arpl
scas
pop
push
sub
pop
push
pop
outs
mov
and
sub
addr16
adc
pusha
gs
cmp
aas
repz
mov
gs
inc
inc
jb
dec
addr16
scas
jecxz
loop
push
fs
popa
jb
aas
push
xchg
scas
and
test
push
pusha
inc
mov
repz
add
scas
dec
gs
push
gs
jno
push
imul
xchg
cmp
push
outs
jp
push
jb
scas
test
retf
gs
sub
call
scas
pop
jae
cmp
sar
(bad)
aas
scas
cmp
lds
inc
adc
arpl
scas
pop
add
dec
addr16
or
push
pop
pop
pop
push
xchg
scas
in
add
rcl
fs
popa
jb
cmp
cmp
inc
cmp
jb
ins
pop
jae
dec
imul
dec
data16
xchg
popa
push
je
jae
ins
jnp
repz
xor
outs
jns
push
je
jae
ins
mov
dec
jne
sub
inc
mov
push
push
push
add
(bad)
lods
cmps
add
dec
addr16
sbb
adc
jb
dec
push
jae
js
add
dec
xor
js
scas
or
jmp
arpl
sub
outs
sub
outs
xor
outs
ficomp
jb
dec
push
jae
mov
add
push
push
movs
pop
push
jb
push
ds
cmp
push
add
aas
jne
add
pop
pop
inc
jg
push
push
jno
pop
mov
popa
adc
mov
inc
das
push
push
inc
ficomp
imul
jp
jmp
scas
xor
jb
push
pop
outs
(bad)
lods
mov
adc
sub
xor
push
xchg
lods
jns
hlt
daa
pop
gs
ds
push
cmp
jo
push
jno
add
data16
rol
cdq
sub
iret
push
push
dec
mov
pop
jb
dec
imul
fs
repz
inc
xor
add
stos
xor
sub
gs
push
pop
gs
stos
leave
add
cmp
popa
retf
imul
lods
ins
add
daa
xor
add
push
add
jmp
imul
stos
pushf
add
cmp
inc
outs
adc
xor
xor
push
jo
sub
stos
xor
xchg
pop
arpl
jne
jb
inc
inc
add
dec
inc
jb
dec
push
jae
mov
add
addr16
and
pusha
gs
push
jo
add
fsubr
push
jae
jg
dec
mov
stos
icebp
add
dec
push
and
popa
jb
inc
push
push
repz
mov
jb
push
aas
imul
jmp
add
dec
pusha
gs
inc
push
outs
sub
popa
aam
pop
gs
jae
stos
mov
cdq
push
addr16
mov
addr16
add
xchg
push
push
push
outs
aas
push
popa
jp
ja
imul
ins
xchg
dec
pusha
add
mov
ins
or
imul
test
fldenv
inc
outs
xor
imul
jl
sbb
pop
(bad)
(bad)
and
repz
je
jbe
aas
pop
outs
xor
je
push
jno
test
add
add
add
add
test
arpl
push
je
dec
push
outs
retf
add
xor
arpl
push
pop
push
data16
inc
test
dec
and
dec
repz
pop
push
arpl
mov
add
addr16
gs
pop
gs
cmp
and
dec
addr16
mov
add
sub
out
mov
adc
cmp
mov
gs
push
js
mov
add
dec
jo
and
push
das
dec
push
outs
fldcw
pop
ins
mov
pop
movs
test
addr16
(bad)
cmp
push
push
add
dec
push
dec
mov
add
jnp
jo
jns
inc
add
scas
aaa
outs
jp
pop
popa
xor
add
scas
xor
addr16
cmp
ins
(bad)
scas
mov
sbb
push
mov
pop
push
arpl
scas
inc
add
dec
inc
outs
in
pop
adc
(bad)
cmp
pop
outs
cli
dec
fs
xor
push
push
ds
aad
push
addr16
scas
push
gs
add
pop
pop
outs
mov
fs
jnp
addr16
push
scas
mov
ds
imul
and
fisubr
inc
imul
scas
jo
add
cmp
mov
arpl
ins
pop
jne
add
and
mov
cmp
gs
pop
repz
scas
xor
cmp
outs
retf
push
aam
pusha
push
push
scas
cli
call
push
imul
cmp
arpl
scas
mov
ja
pop
je
scas
pop
add
addr16
pop
aas
inc
outs
add
xor
jno
iret
stos
push
gs
arpl
aas
repz
dec
cmp
dec
push
push
(bad)
lods
mov
add
dec
push
jb
lods
ret
add
pop
push
(bad)
add
ja
lods
imul
xor
jae
and
test
dec
addr16
mov
push
addr16
and
mov
add
fs
test
pop
push
jg
push
outs
sub
addr16
test
inc
push
iret
and
sub
push
jb
and
pop
repz
cmp
je
and
or
add
push
imul
imul
push
popa
add
or
imul
push
inc
add
inc
push
jae
dec
push
mov
jo
mov
jae
dec
push
push
lods
int
imul
gs
jo
jnp
inc
ins
xchg
jo
lods
add
xlat
inc
imul
inc
pop
ja
inc
pusha
je
push
repz
jmp
sub
push
ins
adc
gs
push
addr16
pop
repz
jnp
inc
jb
and
div
push
dec
sti
cmp
popa
or
jmp
xor
outs
cmp
dec
shl
push
stos
xchg
add
and
cdq
inc
pop
outs
mov
test
inc
jne
cmp
push
addr16
add
add
inc
imul
stos
inc
push
fistp
xor
stos
cmps
add
dec
addr16
mov
addr16
jo
stos
sbb
adc
dec
inc
outs
add
push
je
dec
pop
fisub
dec
stos
inc
jb
dec
addr16
ins
aaa
cmp
inc
push
gs
je
inc
imul
add
add
add
test
addr16
pop
imul
repz
test
addr16
imul
test
popa
push
inc
addr16
push
stos
in
sub
push
retf
imul
imul
test
sbb
pop
je
and
imul
add
add
jmp
dec
addr16
or
stos
jg
cmc
dec
addr16
cmp
inc
xor
push
add
repz
fdiv
arpl
je
mov
add
jae
je
pop
pop
inc
jnp
pop
arpl
cdq
add
jno
or
inc
iret
jb
je
mov
inc
add
pop
xor
mov
mov
fs
inc
pop
jne
bound
adc
data16
mov
add
sbb
jo
dec
adc
pop
add
xor
outs
pop
sbb
push
inc
and
pop
push
fiadd
popa
mov
sbb
cdq
dec
pop
jo
sbb
dec
ret
push
push
imul
push
add
add
sbb
dec
xor
outs
sbb
mov
repz
xor
jb
dec
fadd
ins
push
cmp
add
fs
aas
inc
jb
dec
addr16
adc
imul
sbb
jo
push
pop
ins
hlt
sbb
not
repz
xor
jb
add
dec
cmp
sbb
push
retf
dec
addr16
scas
xchg
cdq
dec
pop
jo
dec
pop
gs
add
mov
outs
inc
aaa
or
aas
push
jo
sbb
push
scas
cwde
add
pop
jo
sbb
xor
dec
xor
gs
push
fs
popa
push
ins
mov
or
daa
inc
jo
add
lds
gs
push
je
sbb
stc
scas
inc
add
push
addr16
sub
jb
push
inc
jb
imul
jne
push
je
outs
arpl
mov
dec
xchg
push
push
scas
arpl
mov
jbe
lahf
and
movs
and
jno
inc
outs
jo
jno
cmp
js
scas
inc
dec
jae
inc
dec
in
sbb
add
add
add
add
scas
xor
jbe
cmp
retf
aas
push
ins
mov
inc
ds
adc
xor
or
out
jecxz
adc
push
outs
push
cmp
arpl
aas
jo
xor
push
outs
xchg
lods
inc
add
dec
addr16
add
push
outs
fistp
push
outs
and
push
je
and
mov
inc
push
jb
pop
pop
add
mov
push
je
adc
addr16
push
push
push
lods
lahf
add
ins
pusha
jno
adc
gs
and
jnp
addr16
lods
popf
add
push
sub
gs
dec
push
dec
(bad)
cmp
inc
jb
cmp
push
mov
sbb
adc
js
lods
mov
adc
xor
push
je
add
lods
scas
add
ds
sbb
push
jae
ds
jns
dec
jo
xchg
lods
rol
cmp
retf
je
dec
jo
xchg
ret
mov
add
cmp
test
and
dec
gs
arpl
ss
jns
dec
inc
add
dec
cmp
gs
inc
popa
ret
inc
add
into
push
dec
gs
pop
dec
shrd
add
push
inc
in
push
je
xor
inc
add
lods
dec
gs
pop
push
je
dec
pop
jne
imul
pop
add
push
fild
lahf
cmp
lods
inc
push
push
stos
cmp
je
push
inc
nop
adc
dec
jnp
ss
mov
add
add
addr16
jnp
push
je
ds
fs
stos
outs
add
arpl
dec
push
add
dec
data16
and
mov
xor
ins
sub
add
adc
push
imul
inc
jo
dec
scas
push
sub
or
gs
sbb
outs
add
cmp
inc
add
pop
push
ins
mov
adc
imul
mov
jno
push
pop
push
jg
repz
inc
inc
xchg
xor
dec
pop
ins
es
fadd
jne
cmp
cmp
jb
cmp
push
mov
imul
cmps
stos
push
dec
sbb
inc
add
icebp
inc
push
gs
push
je
xor
jmp
inc
pop
inc
inc
sbb
add
popa
ss
push
pusha
xor
cmp
cmp
je
ds
je
dec
pop
gs
push
dec
add
stos
cmp
xchg
cmp
arpl
dec
pop
add
es
add
cmp
pop
popa
ret
sbb
repz
mov
outs
adc
dec
cmp
sbb
repz
in
mov
outs
sti
ds
outs
call
popa
adc
gs
mov
add
cmp
ds
cmp
push
gs
outs
mov
aas
push
add
add
add
add
sbb
push
push
je
dec
push
ins
popa
aas
cmp
cmp
test
pop
dec
addr16
imul
push
je
dec
push
ins
out
pop
ins
mov
inc
pop
add
fs
sti
cmp
xor
dec
pop
ins
(bad)
scas
mov
(bad)
addr16
push
je
and
or
out
cmp
push
je
dec
addr16
es
repz
test
jno
mov
inc
push
arpl
test
jno
jnp
inc
ins
sbb
push
ins
jnp
inc
add
addr16
sbb
je
bound
and
push
scas
dec
add
sbb
xor
add
bound
pop
addr16
out
pop
pop
inc
addr16
push
je
push
push
jb
arpl
pop
push
xchg
scas
pop
add
sbb
not
pop
xor
(bad)
aas
test
inc
jne
pop
push
ror
push
push
scas
mov
lahf
inc
addr16
inc
push
je
inc
push
fs
inc
pop
gs
inc
dec
add
nop
pusha
cmp
ins
jb
add
gs
pop
ins
jo
inc
outs
sub
dec
xor
jb
dec
imul
arpl
cmp
inc
add
out
hlt
call
inc
addr16
out
inc
push
push
or
imul
inc
push
imul
lods
xor
ins
cmp
push
jb
inc
pop
outs
add
lahf
aas
push
outs
test
dec
jno
stos
dec
jno
js
pop
jne
cmp
dec
bound
add
lods
xor
outs
jne
jo
pop
inc
push
addr16
pop
ins
cmp
ins
cmp
repz
xor
xor
xor
addr16
retf
je
push
jo
lock
pop
add
add
cmp
inc
dec
lock
(bad)
call
push
push
sbb
push
out
pop
imul
inc
jno
movs
inc
pop
je
adc
pop
lods
inc
jb
sbb
cmps
xor
pop
inc
ja
pusha
dec
ja
pop
inc
xchg
inc
pop
inc
jg
push
dec
ja
push
ins
jnp
idiv
sbb
or
push
add
xlat
inc
pop
imul
ins
push
je
aas
pop
sbb
cs
jo
out
add
and
ins
xor
addr16
add
dec
xor
inc
and
pop
inc
icebp
inc
addr16
sbb
call
sbb
push
cmp
pop
push
mov
dec
inc
popa
stos
dec
pop
outs
leave
pop
outs
add
mov
push
stos
or
xchg
pop
push
call
imul
inc
pop
je
adc
leave
popa
cmp
push
or
out
lods
add
cmp
adc
cmp
mov
stos
mov
adc
data16
(bad)
push
neg
push
ins
xchg
stos
daa
add
add
dec
jno
fadd
fs
dec
jno
das
dec
pop
arpl
sbb
outs
movs
dec
repz
xor
mov
ins
jnp
addr16
inc
push
push
es
sub
je
pop
push
gs
dec
jno
jg
pop
arpl
inc
addr16
push
repz
test
inc
ins
rcl
push
push
add
sub
gs
pushf
add
fs
adc
stos
inc
push
out
cmp
in
push
ins
repnz
addr16
pop
arpl
dec
jno
ret
dec
pop
je
mov
add
adc
push
inc
mov
pop
popa
jo
push
add
dec
addr16
pop
je
add
dec
pusha
je
push
pop
add
ins
inc
gs
pop
outs
aaa
cmp
pusha
gs
repz
minps
push
inc
push
adc
jmp
je
inc
repz
cmp
dec
popa
jne
or
push
jae
push
addr16
mov
gs
inc
xor
inc
add
addr16
movs
cmp
push
outs
imul
imul
imul
mov
je
sbb
ja
pop
push
add
mov
inc
ror
arpl
inc
pop
outs
leave
outs
repz
cmp
xor
arpl
inc
pop
outs
leave
sbb
(bad)
in
scas
xor
dec
lock
fisubr
ins
adc
maxps
scas
cs
adc
adc
arpl
adc
inc
popa
mov
push
add
inc
ins
movs
sub
retf
mov
add
addr16
ja
addr16
fs
pop
jb
scas
xchg
add
push
jo
sbb
push
scas
inc
add
sbb
or
pop
inc
and
push
add
add
scas
dec
gs
ds
gs
adc
mov
in
sbb
addr16
ror
mov
jo
ins
sti
jno
(bad)
jle
push
or
outs
cli
adc
icebp
cmp
lds
(bad)
push
push
pop
inc
push
add
push
addr16
movs
cmp
push
outs
cmps
mov
add
add
lods
xor
dec
gs
(bad)
(bad)
pop
imul
scas
dec
add
cmp
sub
gs
packuswb
cmp
outs
leave
ds
add
ins
pop
jbe
cmp
or
jno
adc
push
xchg
lods
inc
add
cmp
jb
add
push
push
jb
adc
aaa
adc
movs
adc
retf
add
xor
arpl
adc
pop
inc
push
lods
das
add
cmp
jns
push
jnp
repz
xor
jb
andps
push
push
push
lods
loop
sub
dec
xor
ins
mov
adc
add
out
cmps
add
adc
out
or
sbb
inc
jb
cmp
pop
adc
cmc
cmp
lock
cmp
outs
in
data16
sub
addr16
fimul
pop
gs
lods
add
ror
outs
xchg
dec
inc
push
push
lods
xchg
cdq
dec
addr16
or
outs
jp
repz
add
xor
pop
inc
jg
push
inc
sub
gs
repz
es
xor
imul
aaa
push
inc
icebp
adc
repnz
xor
das
stos
xor
outs
and
ss
cmp
cmps
stos
jl
dec
aas
pop
je
jo
outs
aad
pop
gs
add
adc
imul
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
out
add
(bad)
scas
add
(bad)
scas
add
xchg
inc
add
inc
add
inc
add
scas
add
mov
inc
add
add
inc
push
push
jg
and
pop
jge
xor
jg
and
sbb
jne
adc
sub
add
pop
arpl
jo
cmp
jns
jne
outs
mov
cmp
sub
ins
addr16
xor
push
dec
sbb
inc
push
mov
ss
sbb
repz
xchg
aaa
add
jae
push
add
pop
ins
inc
adc
jb
aas
xor
scas
add
inc
inc
add
add
add
inc
add
aaa
add
add
xor
push
push
arpl
inc
pop
xor
add
scas
add
push
scas
add
and
add
es
add
push
scas
add
push
scas
add
imul
add
test
add
lods
add
out
add
(bad)
pop
repz
lods
add
cmps
lods
add
cmps
lods
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
data16
add
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
popa
xor
add
xor
add
xor
add
jne
add
xor
add
xor
add
add
add
add
and
ins
jg
popa
xor
add
mov
add
mov
add
add
sub
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
shr
out
scas
add
shr
add
mov
add
int3
scas
add
fldcw
add
sahf
scas
add
mov
add
enter
mov
scas
add
xchg
scas
add
xchg
scas
add
jbe
add
push
scas
add
inc
scas
add
inc
scas
add
xor
add
fs
add
aaa
scas
add
push
scas
add
pop
scas
and
add
push
mov
add
scas
add
gs
add
add
(bad)
scas
add
pop
scas
add
xor
add
shr
add
shr
add
test
add
mov
scas
add
add
add
adc
add
push
scas
add
ret
add
add
(bad)
scas
push
scas
add
(bad)
scas
add
ins
scas
add
out
add
pop
scas
add
aam
add
dec
scas
add
movs
scas
add
sub
add
adc
add
aas
scas
add
add
add
pop
scas
add
in
add
cli
lods
add
in
lods
add
or
add
sub
(bad)
lods
add
pusha
scas
add
movs
lods
add
mov
add
scas
pop
repz
lods
add
mov
add
lods
add
jo
xor
or
pop
mov
cmp
jo
mov
add
inc
lods
inc
sub
repz
lods
push
lods
add
push
lods
add
push
xor
add
lods
add
(bad)
lods
add
(bad)
lods
add
xchg
mov
jmp
sub
add
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
lods
add
push
lods
add
push
lods
add
data16
lods
add
push
lods
add
push
lods
add
lods
add
daa
lods
add
push
lods
add
push
lods
add
lods
add
daa
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
xlat
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
fs
add
cmps
inc
xor
outs
stos
add
dec
inc
xor
pop
stos
add
ds
xor
dec
stos
add
xchg
add
stos
add
cmp
add
inc
stos
add
stos
inc
xor
xor
add
test
stos
add
cli
inc
xor
out
test
xor
fild
xor
lods
test
xor
jge
add
mov
add
dec
xor
mov
dec
xor
mov
add
mov
mov
add
test
dec
dec
xor
je
add
sahf
dec
xor
mov
xor
lahf
test
xor
mov
xor
add
xor
add
dec
xor
mov
mov
add
out
add
(bad)
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
adc
(bad)
mov
adc
mov
adc
mov
adc
(bad)
mov
adc
cmps
scas
add
cmps
scas
and
jbe
and
jbe
and
xchg
and
jbe
and
jbe
and
scas
add
scas
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
out
add
out
popa
(bad)
cmc
leave
push
data16
lds
std
rcr
fidiv
and
(bad)
jns
cmps
lods
add
cmps
lods
inc
inc
push
in
inc
pop
loope
dec
popf
std
cmp
push
test
inc
push
mov
pop
pop
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
adc
(bad)
mov
adc
add
mov
adc
(bad)
mov
adc
mov
adc
cmps
stos
add
xchg
stos
and
jbe
and
xchg
and
jbe
and
jbe
and
xchg
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
enter
int3
push
addr16
rcr
les
push
fldenv
or
data16
add
shr
xchg
test
xor
mov
inc
scas
clc
cmp
hlt
ds
jbe
inc
push
push
inc
push
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
pop
mov
xor
add
inc
mov
add
mov
add
add
push
mov
add
sub
add
scas
add
push
and
add
mov
cs
add
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
pop
inc
add
xchg
scas
add
cmps
inc
add
scas
add
jmp
pop
bswap
mov
scas
add
push
scas
add
push
scas
add
es
add
es
add
xchg
inc
add
push
scas
add
addr16
add
es
add
call
paddq
cmovnp
(bad)
scas
add
(bad)
scas
add
out
add
out
add
push
inc
add
(bad)
scas
add
out
mov
add
add
scas
add
pop
gs
fcmovb
scas
dec
(bad)
and
xchg
scas
add
xchg
scas
add
data16
add
data16
add
xlat
pop
fcomp
ss
add
push
rol
and
call
add
gs
add
scas
add
pop
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
add
add
push
lods
add
push
lods
add
cmps
add
add
push
lods
add
push
lods
out
add
lods
add
push
lods
add
push
lods
add
out
add
lods
add
push
lods
add
push
lods
add
cmps
movs
ss
lods
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cli
popf
add
lods
add
fisub
add
xor
inc
push
xor
add
(bad)
lahf
add
mov
add
mov
add
add
pop
lods
add
sahf
mov
add
add
add
outs
push
xor
outs
push
xor
push
lods
add
or
add
push
xor
ret
add
push
xor
mov
xor
mov
xor
call
add
xor
add
cs
xor
inc
push
xor
cmp
add
push
xor
sbb
add
push
xor
adc
add
push
xor
sub
add
addr16
ret
add
addr16
mov
xor
jb
xor
outs
addr16
xchg
add
imul
sub
add
imul
add
inc
imul
push
imul
push
push
xor
dec
push
xor
sahf
push
xor
iret
scas
add
cmps
stos
add
cmps
stos
add
xchg
add
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
adc
xor
add
xor
add
rcl
xor
loope
xor
mov
xchg
xor
rcl
add
stos
add
inc
mov
sbb
stos
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
and
repnz
add
repnz
repnz
repnz
test
add
push
mov
add
scas
add
es
jecxz
add
sbb
add
xor
jge
add
fisub
add
cmp
lds
xor
(bad)
scas
add
mov
xor
nop
scas
add
jb
xor
add
arpl
xor
jno
add
dec
bound
ss
add
push
inc
xor
pop
scas
add
out
aas
xor
xor
xor
inc
scas
add
stos
popa
xor
inc
scas
add
xchg
popa
xor
adc
xor
(bad)
xor
retf
scas
add
ss
xor
mov
add
mov
test
ds
xor
mov
add
jbe
xor
sahf
scas
add
outs
aas
xor
mov
aas
xor
mov
xor
test
xor
jne
add
out
xor
mov
xor
cmp
xor
dec
scas
add
scas
cmp
add
scas
add
push
scas
lock
scas
add
es
clc
inc
add
push
fistp
lods
add
out
adc
(bad)
lods
add
(bad)
lods
add
out
add
xlat
lods
add
cmps
lods
add
xchg
lods
add
dec
mov
add
mov
add
cmps
cmp
add
mov
inc
add
add
push
lods
add
push
lods
add
lods
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
ss
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
xchg
add
out
call
add
data16
add
and
call
add
push
lods
add
and
add
add
jmp
lods
add
cmp
test
add
mov
add
lods
add
(bad)
stos
out
add
and
add
mov
stos
add
int3
stos
add
out
stos
add
sub
add
add
jne
add
movs
test
add
test
add
test
add
add
data16
repz
out
jmp
stos
add
dec
stos
add
test
add
xchg
test
out
jmp
stos
add
push
stos
add
jbe
add
and
out
inc
out
call
stos
add
(bad)
stos
add
out
repnz
out
add
(bad)
stos
add
(bad)
add
aas
cmps
stos
add
cmps
stos
add
xchg
push
or
stos
add
cmps
stos
add
out
cld
aas
xchg
stos
add
xchg
stos
add
mov
(bad)
aas
add
data16
add
push
stos
add
jp
add
stos
add
data16
add
push
stos
add
es
add
ret
inc
push
stos
add
push
ds
leave
sub
stos
add
push
push
ds
xchg
mov
fwait
xor
in
and
scas
pop
jae
out
(bad)
xchg
adc
add
adc
(bad)
pop
sub
cmps
jno
dec
pop
push
addr16
inc
xor
mov
xor
inc
or
test
add
jge
xchg
push
ins
inc
loop
jle
pop
xor
push
inc
(bad)
dec
data16
inc
sub
call
stos
mov
adc
fld
inc
lods
push
(bad)
repz
test
sub
xchg
lock
sahf
mov
jecxz
pop
or
xor
call
repnz
xor
add
push
repz
dec
cmp
repz
lock
daa
popa
aaa
push
jnp
(bad)
pop
out
inc
retf
addr16
clc
xrelease
xchg
enter
outs
add
xchg
clc
mov
xchg
jne
mov
add
add
int3
loop
jmp
pop
xchg
cli
(bad)
cmc
mov
clc
aas
sub
sub
adc
xchg
xor
aas
xchg
popa
sbb
scas
push
pop
pop
dec
pop
icebp
aas
xchg
aaa
lods
imul
imul
sub
lods
inc
add
or
lds
inc
in
into
(bad)
sub
aam
xchg
jne
loope
ins
scas
xchg
mov
ins
inc
cmp
mov
aas
lock
push
add
nop
mov
push
pop
sub
xchg
pop
shl
inc
jl
pop
dec
aas
test
adc
aas
add
mov
pop
jmp
mov
inc
jbe
inc
ds
(bad)
test
jmp
aaa
inc
sub
sbb
adc
cmp
mov
xchg
add
call
cmp
mov
cdq
jne
addr16
cmp
or
xor
add
dec
cmp
mov
xchg
cmp
movs
xor
pop
adc
js
sub
add
pop
and
xchg
jo
jge
push
mov
xor
pop
jmp
das
adc
shl
bound
sub
mov
pop
enter
fmul
scas
imul
add
add
add
push
lods
add
jo
inc
push
lahf
fisub
int3
push
gs
icebp
add
mov
lods
add
lock
inc
push
outs
sbb
pop
fs
add
ds
push
lods
add
adc
gs
jecxz
ins
mov
push
push
mov
lods
add
mov
lods
add
rcl
add
add
add
add
out
imul
outs
(bad)
in
add
out
fs
cmps
lods
add
jo
inc
push
dec
sbb
imul
fadd
push
lods
add
outs
imul
xor
pop
ja
fsub
data16
add
xor
push
lods
add
inc
xchg
inc
push
loope
push
popa
and
enter
add
fadd
sub
bound
mov
inc
inc
es
inc
aas
mov
int
je
mov
inc
inc
and
stos
add
out
arpl
xchg
stos
add
jo
inc
push
xchg
test
retf
outs
mov
icebp
xor
push
(bad)
popa
ins
xchg
mov
bound
add
icebp
inc
inc
xchg
aad
inc
push
mov
add
xor
es
add
ror
fs
mov
arpl
loopne
fs
jmp
add
repz
out
add
ror
pop
outs
jmp
bound
loopne
pop
and
lds
sbb
inc
inc
cmps
stos
ds
xor
xchg
stos
add
or
cmps
aad
outs
mov
arpl
inc
add
xor
push
stos
add
xor
push
pop
xchg
arpl
inc
add
xor
es
add
jo
inc
push
xor
push
jb
mov
push
inc
push
stos
add
out
icebp
xor
add
out
add
mov
inc
push
repnz
sbb
dec
gs
pop
jb
fisub
jmp
xor
cmps
test
inc
inc
xchg
test
xor
data16
add
mov
add
xor
data16
add
mov
jno
fs
add
push
gs
fisub
jmp
cmps
cdq
xor
add
mov
add
mov
add
mov
add
fwait
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
(bad)
xor
add
shl
jo
jle
outs
mov
add
fsub
(bad)
enter
(bad)
gs
test
lds
lock
jns
fs
mov
pop
outs
rcr
fs
fwait
push
fs
int3
sub
ss
mov
push
js
in
jo
and
pop
gs
imul
dec
imul
scas
add
cmps
scas
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
addr16
add
ins
scas
add
mul
xor
add
es
add
es
add
push
scas
add
push
scas
add
es
add
sbb
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
jmp
lods
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
cdq
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
xchg
lods
add
lods
add
lods
add
jno
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
sbb
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
jmp
lods
add
(bad)
lods
add
(bad)
lods
add
out
add
out
(bad)
lods
add
fldcw
add
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
cdq
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
pop
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
sub
add
add
add
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
fldcw
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
mov
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
pop
stos
add
push
stos
add
push
stos
stos
add
stos
add
push
stos
add
push
stos
add
sub
xor
add
xor
es
add
rcl
pop
je
(bad)
push
pop
retf
fsub
aam
arpl
inc
add
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
(bad)
scas
add
cmps
scas
add
cmps
scas
add
call
jmp
scas
add
inc
mov
sub
add
scas
add
push
scas
add
push
add
scas
repz
add
(bad)
mov
and
add
scas
add
data16
and
add
es
sbb
add
retf
scas
add
sahf
mov
adc
add
(bad)
scas
add
jmp
add
scas
add
jbe
add
cmps
scas
add
call
add
scas
add
xchg
scas
add
xchg
scas
add
push
add
data16
add
pop
sub
jmp
add
data16
data16
add
pop
scas
add
push
scas
add
das
sub
jmp
mov
add
scas
add
push
scas
add
sub
add
jg
add
outs
mov
add
lods
add
out
add
fisubr
add
fild
repz
mov
add
xchg
idiv
cs
add
lods
add
cmps
test
dec
repz
add
lods
add
(bad)
xchg
idiv
lods
add
dec
scas
add
lods
add
push
mov
add
dec
scas
add
lods
add
mov
add
or
add
dec
lods
add
out
add
xchg
and
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
sbb
mov
pop
pusha
icebp
sbb
pop
fisubr
pusha
faddp
adc
gs
sbb
retf
shl
mov
sbb
lods
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
xchg
stos
add
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
mov
(bad)
xor
ins
sbb
clc
xor
call
jmp
pop
in
sbb
dec
fs
inc
xor
leave
out
add
out
add
(bad)
stos
add
(bad)
stos
add
stos
add
add
stos
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
es
add
es
add
push
stos
add
push
stos
add
out
add
ret
pop
loop
shl
and
mov
arpl
jmp
pop
icebp
(bad)
(bad)
cmp
jmp
xchg
test
sub
outs
call
in
int
sub
sbb
pop
gs
call
push
lock
gs
(bad)
fcomp
call
sub
aam
fwait
mov
add
add
add
push
mov
cmp
add
data16
sbb
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
pop
fistp
pop
fild
shl
ret
pop
in
mov
push
out
mov
sub
dec
pop
fdivr
iret
cmp
call
ss
jmp
pop
(bad)
jle
out
push
inc
out
pop
arpl
push
pop
(bad)
sub
call
aam
add
pop
pop
xlat
call
(bad)
rcl
scas
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
es
add
es
add
mov
fimul
pop
fbld
cdq
pop
loop
fwait
dec
in
call
jmp
clc
call
call
clc
jmp
clc
jmp
adc
(bad)
call
mov
test
cld
inc
mov
(bad)
cld
push
out
rcpps
call
push
icebp
push
(bad)
add
add
call
push
jmp
pop
sar
repnz
(bad)
call
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
inc
pop
fidivr
dec
dec
icebp
movs
aaa
dec
icebp
loop
dec
loop
xor
adc
call
out
pop
cli
clc
dec
cli
clc
call
or
stc
(bad)
fimul
stc
call
push
clc
call
push
clc
jmp
or
jmp
or
push
in
mov
call
pop
loope
jge
out
or
out
add
pop
pusha
icebp
inc
fdivr
std
push
mov
push
sub
ins
pop
(bad)
push
xlat
call
lods
add
out
add
(bad)
lods
add
(bad)
lods
add
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
data16
add
test
lock
push
in
std
or
push
stc
jmp
call
cli
jmp
dec
idiv
jmp
clc
call
clc
call
clc
call
stc
jmp
clc
jmp
jmp
ds
inc
cmp
dec
mov
cmp
jmp
dec
lock
add
or
call
or
call
icebp
(bad)
cmp
cli
sar
cmp
jmp
push
cli
(bad)
call
add
stos
add
stos
add
push
stos
add
stos
add
es
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
(bad)
stos
add
(bad)
stos
add
out
add
inc
mul
(bad)
inc
inc
push
dec
jmp
dec
jmp
inc
jmp
inc
stc
dec
stc
(bad)
fiadd
(bad)
fld
(bad)
fmul
(bad)
fisttp
(bad)
jmp
call
call
mov
add
jbe
and
aam
and
call
dec
out
adc
sti
(bad)
dec
call
in
jmp
in
jo
out
(bad)
test
add
test
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
data16
add
add
push
mov
add
add
data16
add
or
jmp
ror
in
push
jmp
inc
jmp
inc
jmp
inc
jmp
dec
stc
jmp
stc
call
stc
jmp
stc
call
clc
call
popf
mov
add
add
add
add
dec
call
xchg
aas
sbb
and
call
dec
clc
call
stc
(bad)
dec
call
out
(bad)
out
dec
in
lock
call
add
data16
cs
sub
add
push
mov
es
and
mov
pop
push
mov
sbb
mov
(bad)
mov
pop
es
add
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
inc
repz
add
push
push
in
(bad)
cmp
push
inc
jmp
inc
inc
jmp
dec
jmp
dec
jmp
dec
stc
(bad)
out
dec
stc
(bad)
out
inc
stc
(bad)
jmp
add
dec
clc
call
aas
cmp
dec
xchg
call
lock
dec
clc
dec
loope
inc
fdivr
dec
call
out
jmp
in
jno
call
sub
scas
add
out
add
(bad)
scas
add
cmps
scas
add
scas
add
xchg
scas
add
xchg
scas
add
add
cmps
scas
add
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
pop
or
jmp
shl
jmp
mov
inc
jmp
retf
inc
inc
jmp
mov
jmp
inc
jmp
dec
jmp
dec
jmp
add
add
add
call
stc
call
clc
inc
mov
fwait
out
mov
dec
fisub
sub
sar
pop
dec
clc
jmp
dec
clc
dec
loopne
inc
fdivr
std
dec
in
push
push
out
(bad)
out
inc
in
icebp
(bad)
fcos
push
lods
add
lods
add
push
lods
add
lods
add
lods
add
lods
add
add
push
lods
add
push
lods
add
lods
add
push
lods
add
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
add
inc
in
call
jmp
cmp
jmp
inc
jmp
dec
inc
jmp
dec
inc
jmp
xor
inc
jmp
pop
inc
jmp
inc
jmp
add
add
add
dec
jmp
dec
jmp
dec
clc
jmp
mov
dec
xor
inc
dec
clc
jmp
lock
(bad)
fdivr
or
push
push
out
jmp
in
inc
clc
fcos
(bad)
stos
add
out
add
stos
add
(bad)
stos
add
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
stos
add
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
cli
repz
mov
in
call
bnd
scas
ds
jmp
ds
enter
mov
aas
jmp
test
inc
add
inc
jmp
inc
jmp
dec
jmp
test
jmp
lea
(bad)
(bad)
clc
fdivr
sbb
jmp
jecxz
push
cs
push
push
out
jmp
dec
in
(bad)
std
(bad)
push
stos
add
data16
add
data16
add
add
push
stos
add
push
stos
add
es
add
push
stos
add
push
stos
add
stos
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
clc
repnz
xor
in
call
jmp
sub
in
jmp
jmp
dec
inc
jmp
cmp
jmp
add
sub
jmp
or
jmp
add
pop
jmp
pop
jmp
dec
jmp
mov
jmp
daa
cmp
sub
call
dec
stc
dec
mul
(bad)
cmp
(bad)
mov
push
push
in
inc
(bad)
call
mov
adc
add
mov
adc
mov
or
(bad)
mov
or
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
data16
add
in
push
in
jmp
push
in
call
lahf
push
in
jmp
pop
jmp
mov
dec
pop
jmp
je
jmp
inc
push
jmp
pop
jmp
xchg
sar
lea
and
out
call
jmp
stc
jmp
sub
dec
loope
es
loope
fist
(bad)
jmp
add
cli
(bad)
push
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
call
(bad)
cmp
call
jmp
xor
add
and
jmp
push
in
call
push
in
jmp
push
jmp
or
dec
push
jmp
sti
push
jmp
jmp
inc
pop
jmp
push
jmp
jl
inc
(bad)
(bad)
inc
loopne
scas
dec
stc
call
fsubp
call
sub
inc
add
in
outs
loopne
push
aad
(bad)
lods
add
out
add
out
add
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
std
dec
out
mov
add
loop
push
dec
in
jmp
dec
in
jmp
push
in
(bad)
call
(bad)
(bad)
push
jmp
jns
jmp
push
push
jmp
inc
push
jmp
xor
jmp
aaa
push
jmp
repz
inc
mov
push
xchg
jmp
stc
push
stc
jmp
add
loope
call
out
(bad)
clc
(bad)
(bad)
(bad)
loopne
push
lods
add
push
lods
add
lods
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
push
dec
out
cmp
inc
in
inc
in
jmp
push
in
inc
in
push
push
in
inc
in
(bad)
cld
dec
in
(bad)
dec
out
dec
jmp
jmp
es
retf
daa
jmp
mov
daa
jmp
add
dec
mov
jmp
mov
and
call
add
push
stc
dec
loopne
(bad)
jp
fdivrp
mov
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
push
stos
add
data16
add
rcl
jmp
dec
in
inc
dec
in
inc
cmp
push
dec
in
push
dec
in
inc
dec
in
(bad)
std
dec
in
jmp
jmp
jmp
dec
daa
jmp
dec
daa
jmp
cmp
jmp
xor
icebp
fdivr
inc
inc
(bad)
call
test
daa
mov
add
and
push
jmp
push
jmp
(bad)
(bad)
cli
fstp
jmp
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
out
sub
in
inc
inc
in
inc
in
push
in
push
dec
in
inc
in
inc
in
inc
dec
in
inc
dec
in
(bad)
in
and
(bad)
in
and
(bad)
fbld
(bad)
fisub
(bad)
mov
sub
dec
jmp
add
mov
xchg
mov
sub
jecxz
xchg
sub
jmp
sub
(bad)
cli
and
jmp
(bad)
(bad)
jp
out
jmp
scas
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
xlat
dec
out
lods
aas
in
inc
dec
in
dec
cmp
(bad)
mov
cmp
push
in
inc
and
inc
and
inc
and
jmp
in
call
in
call
jmp
dec
jmp
pop
dec
in
inc
add
mov
call
mov
jg
inc
dec
jmp
and
jmp
and
jmp
(bad)
(bad)
sti
lock
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
push
dec
out
xor
out
inc
dec
in
(bad)
cmp
in
(bad)
cmp
in
push
ds
inc
in
push
pop
in
inc
and
push
and
jmp
pop
in
jmp
pop
in
(bad)
frstor
in
inc
add
jle
call
iret
js
popa
mov
jae
cmovge
inc
push
out
mov
jmp
inc
in
call
repnz
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
aad
out
mov
out
inc
dec
in
dec
cmp
(bad)
mov
ds
(bad)
mov
cmp
inc
cmp
push
cmp
push
cmp
inc
and
jmp
in
inc
add
in
call
in
jmp
fcos
cli
sub
unpckhps
push
test
xchg
mov
call
dec
in
xor
and
in
call
loope
clc
dec
jecxz
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
dec
dec
out
xor
in
(bad)
ds
out
(bad)
ds
(bad)
cmp
in
(bad)
cmp
in
dec
in
(bad)
cmp
in
push
cmp
push
cmp
inc
add
cmp
inc
and
jmp
and
(bad)
fst
in
(bad)
jmp
loopne
fcmovb
pop
(bad)
jge
and
bound
dec
mov
jmp
dec
inc
dec
out
mov
and
in
call
dec
jecxz
out
add
(bad)
test
add
out
add
out
add
(bad)
test
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
enter
mov
out
dec
push
in
(bad)
mov
inc
out
dec
inc
out
(bad)
mov
inc
in
(bad)
mov
add
inc
in
(bad)
cli
inc
in
inc
inc
in
push
push
in
inc
in
(bad)
cmp
(bad)
movs
pop
xchg
push
retf
call
mov
push
and
mov
dec
out
cmp
jmp
inc
and
inc
ds
call
in
loop
stc
push
in
data16
add
add
push
mov
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
dec
sbb
jmp
dec
out
dec
in
(bad)
aas
inc
out
(bad)
cmp
out
dec
dec
out
inc
add
inc
out
(bad)
cmp
(bad)
clc
ds
(bad)
sti
inc
in
dec
inc
in
inc
inc
in
push
inc
in
(bad)
mov
mov
call
mov
fadd
cs
sbb
(bad)
mov
and
(bad)
mov
fucom
jmp
in
out
add
(bad)
scas
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
into
dec
out
cmps
dec
out
dec
dec
in
(bad)
mov
dec
out
inc
add
dec
out
dec
aas
out
(bad)
mov
aas
out
(bad)
stc
cmp
(bad)
clc
cmp
dec
cmp
(bad)
sti
inc
in
(bad)
cli
inc
in
push
cmp
jmp
sahf
or
bound
xchg
dec
stc
jmp
and
call
in
(bad)
mov
jmp
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
dec
pop
out
and
out
dec
in
inc
add
out
call
out
dec
out
(bad)
cmp
out
(bad)
aas
ds
(bad)
out
cmp
out
dec
ds
(bad)
clc
cmp
in
(bad)
cli
cmp
(bad)
mov
mov
dec
(bad)
xor
xor
lahf
push
jmp
cmp
dec
in
inc
add
out
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
int3
inc
out
add
movs
adc
dec
dec
in
(bad)
mov
adc
call
adc
push
adc
out
(bad)
in
push
out
(bad)
out
push
out
(bad)
(bad)
push
out
(bad)
stc
pop
in
(bad)
clc
pop
in
(bad)
sti
and
push
out
jmp
mov
dec
loop
(bad)
jl
mov
(bad)
jo
call
in
inc
add
in
dec
adc
dec
inc
out
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
out
add
dec
inc
out
and
push
in
inc
out
push
out
call
out
push
adc
out
call
out
(bad)
in
adc
(bad)
in
adc
(bad)
call
out
(bad)
(bad)
sbb
dec
sbb
(bad)
stc
sbb
push
out
push
out
ret
(bad)
cli
xor
(bad)
(bad)
in
mov
call
cmp
add
ret
push
adc
out
call
inc
clc
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
data16
add
add
add
push
mov
add
add
loop
out
stos
push
out
dec
dec
in
inc
sbb
call
push
out
call
push
out
push
sbb
call
out
push
sbb
(bad)
in
sbb
(bad)
cld
sbb
(bad)
cld
sbb
dec
sbb
dec
sbb
dec
sbb
call
enter
mov
call
add
inc
inc
in
push
cmp
in
jmp
cmp
(bad)
in
inc
clc
jmp
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
arpl
jmp
sbb
dec
in
inc
out
call
out
jmp
out
push
sbb
inc
out
call
out
push
adc
out
inc
sbb
(bad)
std
sbb
dec
out
dec
pop
out
(bad)
(bad)
push
out
inc
xor
movs
inc
add
push
lock
adc
inc
sbb
call
push
inc
inc
in
inc
inc
in
push
sbb
jmp
ss
ins
inc
stc
jmp
lods
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
loopne
out
stos
pop
out
dec
dec
in
call
pop
out
call
pop
out
jmp
out
jmp
out
inc
pop
out
call
out
push
sbb
push
sbb
inc
sbb
push
out
dec
push
out
(bad)
cld
push
out
inc
add
inc
in
cmp
call
push
icebp
inc
into
pop
push
aas
in
inc
push
out
jmp
xor
push
inc
jmp
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
pusha
dec
out
sub
out
dec
in
call
out
call
jmp
out
jmp
out
call
out
call
out
push
sbb
push
sbb
out
push
sbb
call
push
out
inc
add
sbb
in
inc
(bad)
push
pop
push
cmp
(bad)
jg
cmps
push
sbb
(bad)
jmp
out
(bad)
mov
xor
push
jmp
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
loopne
out
stos
sbb
dec
inc
in
call
sbb
call
sbb
jmp
jmp
call
out
call
out
jmp
sbb
push
sbb
inc
sbb
jo
out
call
sbb
out
inc
push
out
(bad)
std
sbb
mov
inc
jle
jmp
xchg
(bad)
jmp
mov
adc
inc
jmp
dec
sbb
jmp
out
(bad)
mov
xor
push
adc
jmp
add
push
mov
add
add
data16
add
add
push
mov
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
out
sub
out
dec
in
call
out
call
jmp
jmp
call
call
out
jmp
ds
inc
add
ds
call
ds
push
ds
call
cmp
push
cmp
inc
cmp
(bad)
stc
adc
call
pop
mov
push
mov
mov
pop
jnp
popa
adc
inc
inc
out
jmp
dec
out
dec
push
jmp
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
loopne
out
stos
cmp
dec
push
in
call
cmp
call
cmp
jmp
jmp
call
inc
add
jmp
cmp
jmp
cmp
call
cmp
call
cmp
call
cmp
push
cmp
inc
cmp
in
jmp
int3
inc
mov
nop
inc
(bad)
call
push
out
push
out
jmp
cmp
(bad)
jmp
push
adc
jmp
add
push
scas
add
push
scas
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
pusha
dec
out
sub
out
dec
in
call
out
call
jmp
inc
add
call
call
jmp
aaa
out
jmp
aaa
out
call
cmp
call
cmp
jmp
aaa
out
push
aaa
out
dec
cmp
jmp
cmp
(bad)
fnstsw
(bad)
call
push
movs
inc
or
dec
inc
stc
inc
or
inc
and
inc
adc
xchg
out
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
loopne
out
stos
cmp
dec
or
out
inc
add
cmp
jmp
jmp
call
out
call
out
(bad)
jmp
call
out
call
cmp
jmp
out
jmp
in
call
in
call
jmp
xor
stc
push
push
sahf
push
mov
(bad)
inc
test
fiadd
stc
mov
add
inc
add
sldt
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
pusha
adc
jmp
inc
out
inc
add
or
call
call
jmp
jmp
call
dec
in
(bad)
jmp
in
(bad)
call
inc
jmp
pmulhw
out
out
add
clc
in
std
inc
stc
into
scas
dec
stc
movs
mov
cmp
sub
push
stos
add
push
stos
add
es
add
es
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
inc
clc
std
movs
inc
out
jmp
inc
in
dec
pminsw
mov
dec
clc
call
out
dec
dec
clc
mul
dec
stc
loopne
inc
jmp
inc
jmp
popa
inc
out
(bad)
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
(bad)
scas
add
out
add
dec
inc
stc
shl
std
pop
inc
clc
repnz
inc
stc
(bad)
push
inc
jmp
inc
jmp
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
data16
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
xchg
xor
jmp
xor
jmp
add
xchg
xor
inc
xor
jmp
xor
jmp
xor
pop
mov
xor
cmovno
add
inc
xor
add
xor
add
or
add
xor
add
add
lods
add
loope
add
push
lods
add
add
add
xchg
lods
add
mov
lods
add
mov
lods
add
mov
lods
add
inc
xor
add
add
mov
lods
add
mov
lods
add
popa
xor
add
lods
add
xor
add
mov
lods
add
add
mov
test
add
out
add
inc
xor
add
test
add
out
add
and
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
test
inc
xor
add
add
mov
add
add
mov
test
add
es
add
push
test
add
es
add
push
stos
add
mov
stos
add
inc
xor
add
stos
add
and
add
out
add
and
add
(bad)
stos
add
loope
add
cmps
stos
add
add
add
xchg
stos
add
add
mov
stos
ud0
stos
out
jmp
xor
inc
add
inc
xor
jmp
test
add
push
stos
add
xlat
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
int
mov
cmp
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
cdq
sbb
xor
pusha
xchg
in
cmp
dec
push
aad
into
inc
popf
xchg
sub
lods
add
add
out
add
lods
add
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
int3
adc
xlat
jge
and
(bad)
xchg
pop
fcomi
jl
(bad)
add
mov
dec
mov
sbb
add
(bad)
adc
call
jmp
(bad)
inc
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
in
pop
aad
fsub
xlat
sbb
fcmovne
fistp
not
push
lock
or
(bad)
jge
in
jl
in
pop
in
mov
test
js
jmp
adc
call
push
icebp
jmp
iret
inc
jae
call
fdivr
ret
dec
movs
pushf
out
add
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
add
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
jecxz
ficomp
jg
int
jle
clc
shl
fdiv
(bad)
fdivr
(bad)
fimul
call
push
out
cmps
dec
clc
jmp
push
clc
jmp
dec
out
retf
push
sar
dec
out
xlat
jge
inc
add
jge
push
xchg
call
fdivr
adc
lods
movs
out
add
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
(bad)
jns
mov
dec
in
cmc
dec
out
lock
clc
call
dec
clc
(bad)
fild
(bad)
fiadd
(bad)
fmul
(bad)
fisttp
inc
add
push
clc
call
dec
out
dec
outs
leave
jmp
or
call
jl
inc
jge
jmp
jb
call
sbb
add
(bad)
test
add
test
add
xchg
test
add
cmps
test
add
inc
jmp
test
lock
jmp
inc
jmp
dec
stc
(bad)
fld
jmp
dec
stc
call
out
lods
pop
push
sbb
call
jle
(bad)
mov
sub
(bad)
sbb
mov
out
add
add
add
add
(bad)
mov
sub
mov
and
mov
pop
cmps
mov
sbb
mov
pop
cmps
mov
add
mov
add
jae
dec
inc
in
(bad)
fcom
inc
inc
jmp
inc
jmp
inc
stc
dec
dec
stc
call
dec
stc
call
dec
clc
call
sar
add
test
xchg
cmp
fwait
jmp
push
clc
call
jge
(bad)
mov
push
out
jmp
dec
adc
add
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
cmps
scas
add
scas
add
xchg
scas
add
hlt
jb
dec
pop
in
(bad)
fisttp
inc
inc
jmp
les
inc
add
inc
jmp
dec
jmp
inc
stc
call
dec
clc
(bad)
mov
cmp
call
pusha
icebp
call
jnp
jmp
jbe
call
out
iret
xchg
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
sti
jo
dec
pop
in
call
dec
in
dec
inc
jmp
retf
push
jmp
dec
jmp
dec
stc
jmp
dec
stc
jmp
js
jmp
cmp
(bad)
fldenv
dec
jo
inc
add
in
call
fdivrp
adc
xchg
out
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
stc
outs
in
(bad)
aas
in
call
dec
in
(bad)
ficomp
dec
inc
jmp
mov
inc
jmp
les
mov
mov
add
dec
jmp
inc
stc
push
cmp
call
jl
push
jp
jmp
je
call
fdivrp
addr16
jl
lods
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
out
dec
in
add
cld
inc
in
call
dec
in
(bad)
fdivr
in
(bad)
fild
(bad)
mov
inc
jmp
retf
inc
inc
jmp
mov
jmp
dec
jmp
ja
jmp
cmp
call
ja
inc
js
inc
lock
rcr
out
add
(bad)
stos
add
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
in
dec
out
add
push
inc
in
jmp
inc
in
(bad)
fld
scas
inc
in
jmp
ds
retf
aas
jmp
mov
jmp
mov
jmp
inc
jmp
and
add
add
add
add
aas
jmp
ja
push
(bad)
adc
imul
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
lock
out
add
push
inc
in
jmp
inc
in
inc
inc
in
push
add
jmp
leave
aas
jmp
mov
inc
jmp
les
inc
inc
jmp
xor
inc
dec
stc
inc
js
jmp
(bad)
(bad)
test
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
cmps
test
add
xchg
test
out
add
push
push
in
push
push
in
inc
push
in
push
push
in
(bad)
std
push
in
(bad)
call
jmp
pop
jmp
retf
pop
jmp
les
inc
add
cmp
xchg
pop
jmp
pop
loop
pop
pop
(bad)
add
(bad)
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
out
pop
inc
in
push
ins
in
push
aas
in
push
aas
in
inc
push
in
inc
push
in
inc
push
in
inc
push
in
jmp
jmp
add
leave
pop
jmp
scas
add
dec
jge
sub
xchg
call
push
jmp
data16
fdivr
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
jmp
inc
add
dec
in
(bad)
sti
inc
in
(bad)
cli
inc
in
inc
in
inc
push
in
inc
push
in
inc
push
in
push
push
in
call
hlt
aas
dec
adc
jmp
inc
in
jmp
call
fdivr
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
jmp
out
adc
dec
in
(bad)
stc
cmp
(bad)
clc
cmp
dec
inc
in
inc
ds
push
push
in
jmp
push
in
inc
aad
push
push
mov
das
aam
inc
add
addr16
sahf
pop
in
call
loop
pop
fs
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
jmp
aas
out
(bad)
call
aas
out
(bad)
stc
cmp
dec
cmp
(bad)
sti
cmp
inc
add
inc
in
inc
push
in
jmp
dec
in
(bad)
sti
mov
dec
(bad)
push
aam
jmp
pusha
stc
(bad)
mov
pop
jecxz
pop
gs
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
cmps
lods
add
xchg
lods
add
fbld
call
pop
out
(bad)
jmp
pop
out
dec
cmp
out
(bad)
stc
cmp
in
(bad)
mov
cmp
inc
cmp
push
pop
mov
(bad)
fcom
jmp
dec
jmp
dec
inc
out
call
jecxz
pop
pop
fdivrp
(bad)
stos
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
fcom
call
inc
out
(bad)
out
push
in
call
inc
out
dec
ds
(bad)
(bad)
ds
(bad)
mov
aas
in
dec
inc
in
(bad)
mov
inc
in
inc
add
push
sar
xchg
inc
sar
add
lods
jmp
push
in
inc
out
call
jecxz
pop
pop
(bad)
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
loop
out
push
ds
(bad)
out
push
in
inc
add
inc
out
push
inc
out
inc
ds
(bad)
cld
cmp
out
jmp
inc
in
(bad)
mov
inc
in
(bad)
fcomp
call
dec
(bad)
jmp
xor
xchg
dec
out
call
out
call
jecxz
pop
pop
lock
test
add
out
add
(bad)
test
add
cmps
test
cmps
test
add
xchg
test
add
cmps
test
add
jecxz
out
cmovbe
(bad)
out
push
in
call
dec
out
push
cmp
inc
cmp
out
jmp
cmp
(bad)
mov
cmp
(bad)
mov
pop
jmp
dec
test
call
add
push
jecxz
pop
dec
lock
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
out
or
out
(bad)
in
push
in
jmp
inc
out
push
inc
out
inc
cmp
call
cmp
push
add
cmp
(bad)
mov
cmp
(bad)
mov
es
pop
leave
push
jmp
mov
out
call
out
push
call
icebp
call
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
xchg
scas
add
loopne
out
or
out
(bad)
in
dec
in
jmp
cmp
jmp
cmp
call
cmp
call
cmp
push
inc
out
inc
inc
out
(bad)
mov
ds
dec
jbe
jmp
(bad)
xchg
jmp
aaa
inc
sub
mov
call
out
jmp
in
pop
dec
icebp
call
scas
add
out
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
loopne
out
or
out
(bad)
in
dec
in
jmp
cmp
jmp
cmp
call
cmp
call
cmp
push
inc
out
inc
inc
out
push
out
call
cmp
(bad)
cld
ds
inc
add
xor
mov
pop
int
push
push
out
jmp
in
pop
dec
loop
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
loopne
out
or
out
(bad)
in
inc
in
jmp
cmp
inc
add
cmp
call
cmp
call
cmp
jmp
push
out
push
push
out
(bad)
call
push
out
inc
ds
call
sub
test
sahf
call
dec
out
imul
pop
dec
loop
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
loopne
out
getsec
out
(bad)
std
cmp
out
jmp
cmp
call
cmp
call
cmp
jmp
cmp
(bad)
fsub
dec
data16
jmp
push
push
fscale
sahf
or
mov
mov
add
pop
dec
loop
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
jecxz
out
adc
aaa
in
(bad)
jmp
fs
dec
out
stos
dec
out
mov
out
add
leave
dec
in
mov
inc
in
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
loopne
out
adc
in
or
(bad)
jmp
out
jmp
out
ror
xor
dec
out
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
mov
push
out
call
out
inc
idiv
inc
push
repz
and
add
out
add
(bad)
mov
call
mov
jmp
mov
call
mov
(bad)
cmps
mov
inc
add
mov
(bad)
xchg
mov
(bad)
data16
(bad)
data16
(bad)
push
mov
(bad)
push
mov
(bad)
data16
(bad)
data16
(bad)
push
mov
(bad)
push
mov
(bad)
es
(bad)
es
(bad)
push
mov
(bad)
push
mov
jmp
cmps
out
call
out
jmp
add
xchg
add
addr16
add
add
push
mov
add
add
add
data16
add
add
push
mov
add
mov
add
mov
call
mov
jmp
mov
call
adc
jmp
adc
call
adc
(bad)
mov
xor
add
or
out
add
sbb
es
jecxz
and
call
data16
push
and
(bad)
(bad)
mov
mov
sbb
outs
jnp
(bad)
jns
mov
push
scas
add
es
add
pop
sbb
call
push
jecxz
psraw
sub
(bad)
clc
fs
(bad)
jmp
inc
add
push
mov
push
dec
(bad)
clc
xor
cmps
scas
add
adc
sar
inc
pop
out
sbb
adc
cmovle
jmp
jae
push
and
(bad)
(bad)
mov
test
icebp
call
pop
fdivr
add
dec
(bad)
js
mov
push
scas
add
es
jne
ret
inc
push
clc
jmp
in
and
pop
dec
jecxz
fstp
(bad)
(bad)
sti
mov
(bad)
mov
and
(bad)
mov
(bad)
fdivr
clc
or
add
inc
dec
stc
call
push
clc
jmp
push
out
daa
dec
in
and
repnz
add
add
add
add
cmp
fisttp
mov
ret
push
loop
lahf
inc
call
push
fdivr
jnp
mov
push
lods
add
lods
add
popa
or
jmp
pusha
clc
jmp
pop
out
xchg
push
in
jecxz
in
dec
cld
movs
jmp
popa
call
in
add
fcos
adc
call
pop
mov
add
(bad)
lods
add
cmps
lods
add
sti
push
int3
push
cmp
call
(bad)
stc
push
pusha
stc
push
push
clc
dec
push
out
repnz
jmp
push
in
mov
dec
jecxz
fmul
(bad)
jp
enter
add
lods
add
jge
iret
(bad)
mov
ds
mov
pop
stc
inc
add
sbb
call
pop
jmp
in
mov
loopne
push
call
(bad)
cli
adc
xchg
(bad)
stos
add
cmps
stos
add
push
outs
sar
dec
dec
in
push
dec
in
jmp
cmp
inc
stc
dec
sbb
(bad)
out
fldenv
repz
out
mov
jo
inc
add
std
mov
add
add
es
add
mov
int
in
(bad)
mov
push
in
jmp
jmp
pop
stos
jmp
popa
inc
clc
dec
out
sbb
jmp
stos
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
or
push
out
dec
out
inc
add
in
inc
in
inc
pusha
jmp
mov
ins
fdivr
out
shl
leave
cmp
(bad)
fistp
dec
stos
add
push
stos
add
push
stos
add
es
add
cmps
addr16
push
pop
out
(bad)
mov
push
in
push
pop
xchg
inc
icebp
inc
jmp
popa
jmp
jmp
add
add
add
pusha
jmp
test
add
(bad)
test
add
sbb
ds
out
jmp
out
call
out
call
out
push
pop
in
push
cmp
popa
(bad)
clc
push
in
inc
je
(bad)
jmp
add
add
push
mov
add
mov
add
add
jns
jmp
jns
call
jnp
(bad)
fiadd
sar
push
into
call
(bad)
pop
jns
push
adc
jne
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
movs
add
push
movs
add
push
movs
add
movs
add
movs
add
push
popf
add
popa
dec
cmps
scas
add
movs
scas
xor
xchg
scas
add
mov
test
cmps
scas
add
(bad)
pop
add
mov
adc
scas
add
jbe
push
call
popa
jae
mov
js
jb
popa
cmp
dec
loopne
push
xor
popa
outs
js
sbb
mov
and
(bad)
and
shl
fbld
mov
shr
xlat
xor
loopne
push
gs
pusha
fs
push
jns
xchg
push
gs
sti
shl
fist
add
ja
(bad)
enter
mov
push
gs
addr16
mov
les
and
mov
outs
add
ja
push
cmp
xchg
ret
js
and
ret
push
outs
sub
and
mov
xor
fisub
fist
fadd
fs
ret
je
push
xor
push
xor
arpl
les
and
push
gs
fist
pminub
sbb
fs
jecxz
sbb
jbe
arpl
(bad)
push
dec
retf
aam
outs
mov
xchg
and
xor
cdq
and
(bad)
fs
cs
int3
popa
jae
rcl
push
gs
aad
je
(bad)
sub
mov
bound
leave
push
outs
sub
popa
jae
rcl
sub
mov
enter
shl
cmp
add
fbld
or
pusha
data16
mov
bnd
(bad)
xlat
outs
int3
fst
sti
mov
arpl
shl
fcomp
arpl
shr
shl
xchg
mov
cmp
enter
les
pusha
nop
bound
fcom
mov
push
push
les
jb
push
gs
(bad)
sub
jnp
arpl
fcom
add
pop
rcl
sbb
outs
adc
push
jbe
rcl
cmp
push
ins
xchg
mov
mov
jmp
popa
iret
mov
adc
or
aas
arpl
(bad)
popa
jae
lea
add
push
and
(bad)
pop
jb
fisub
and
rcl
or
outs
xor
push
jbe
lds
cmp
xlat
push
jno
int3
popa
je
add
(bad)
retf
retf
pusha
xchg
pop
jae
(bad)
arpl
fnsave
push
test
(bad)
dec
nop
retf
pop
ds
pop
ins
push
retf
test
pop
imul
(bad)
pusha
jae
xchg
xor
pop
popa
and
fcomp
adc
sub
pop
cmp
ret
pop
jo
fbld
add
inc
addr16
test
mov
sub
push
ficomp
add
ret
xor
xlat
gs
and
int3
and
push
cdq
and
dec
test
xor
and
pushf
push
gs
xor
jp
push
gs
and
aam
ds
arpl
ficomp
sub
push
dec
add
xor
fldenv
and
push
fs
adc
xchg
adc
pushf
xor
faddp
aaa
popa
mov
push
cmp
test
add
sbb
sti
xchg
push
sub
(bad)
xchg
and
and
arpl
xchg
fs
lea
push
add
jne
sbb
jne
inc
fs
imul
add
add
add
push
xor
and
push
mov
push
popa
iret
xchg
sbb
xor
mov
cmp
(bad)
sub
aad
bound
and
jne
rol
fs
mov
push
mov
push
cmp
enter
jmp
mov
sub
rol
and
add
cmp
cmp
push
ss
popa
mov
imul
lds
outs
xchg
jge
fs
xor
and
jbe
and
sub
xor
pop
xor
rcl
test
sbb
mov
sub
cmp
popa
out
pop
cmp
aam
jne
add
sbb
mov
add
and
nop
popa
je
xchg
pusha
ds
push
outs
add
imul
pop
jae
mov
mov
xor
jo
inc
scas
jae
pop
outs
popa
inc
inc
call
inc
(bad)
jae
pop
outs
popa
inc
inc
pop
js
inc
xchg
inc
outs
jae
pop
add
outs
popa
inc
inc
pop
js
inc
(bad)
jno
inc
iret
jo
pop
cs
inc
inc
sbb
inc
push
jb
inc
das
jno
pop
out
pop
inc
inc
sbb
inc
push
jb
inc
(bad)
aaa
pop
out
pop
inc
inc
fidivr
inc
push
jb
inc
out
jo
pop
out
pop
inc
inc
fidivr
inc
inc
jo
inc
dec
jae
pop
scas
popa
inc
inc
call
inc
add
scas
jae
pop
outs
popa
inc
inc
call
inc
(bad)
jae
pop
outs
popa
inc
inc
pop
js
inc
xchg
inc
outs
jae
pop
outs
popa
inc
inc
pop
js
inc
(bad)
jo
inc
iret
outs
aaa
pop
cs
inc
inc
sbb
inc
push
jno
inc
das
jo
pop
out
pop
inc
inc
sbb
inc
push
jno
inc
pshufw
out
pop
inc
inc
fidivr
inc
add
push
jno
inc
out
outs
aaa
pop
out
pop
inc
inc
fidivr
inc
inc
outs
ss
dec
jae
pop
scas
popa
inc
inc
call
inc
scas
outs
aaa
pop
outs
popa
inc
inc
call
inc
(bad)
outs
aaa
pop
outs
popa
inc
inc
pop
je
inc
xchg
outs
outs
aaa
pop
outs
popa
inc
inc
pop
je
inc
(bad)
imul
iret
jb
pop
cs
inc
inc
add
sbb
push
ins
ss
das
jae
pop
out
pop
inc
inc
sbb
push
ins
ss
(bad)
aaa
pop
out
pop
inc
inc
fidiv
inc
push
ins
ss
out
jb
pop
out
pop
inc
inc
fidiv
inc
inc
ins
ss
dec
outs
aaa
pop
scas
popa
inc
inc
call
inc
scas
outs
aaa
pop
outs
popa
inc
inc
call
inc
(bad)
outs
aaa
pop
add
outs
popa
inc
inc
pop
je
inc
xchg
outs
outs
aaa
pop
outs
popa
inc
inc
pop
je
inc
(bad)
push
inc
iret
jno
pop
cs
inc
inc
sbb
inc
push
imul
das
jb
pop
out
pop
inc
inc
sbb
inc
push
imul
(bad)
aaa
pop
cmps
fwait
bnd
lods
add
xchg
mov
jb
dec
mov
jnp
jmp
add
(bad)
xchg
ret
cmp
daa
(bad)
mov
cmp
mov
push
cmp
mov
mov
fidivr
jmp
cmp
push
retf
add
into
stos
add
popf
rcr
push
les
(bad)
mov
jo
mov
mov
mov
add
add
add
add
fistp
push
mov
add
(bad)
stos
add
add
xor
ror
test
das
cmp
pop
cmp
mov
cmp
mov
cmp
mov
fwait
cmp
mov
jnp
mov
stos
cmp
sahf
aas
or
push
(bad)
ds
add
push
sar
sahf
xor
add
mov
and
adc
fidiv
jns
sub
add
mov
push
(bad)
fidiv
jb
add
add
pop
repnz
test
call
xor
mov
mov
cmp
mov
cmp
mov
cmp
scas
test
sbb
mov
js
add
mov
mov
add
mov
xor
lds
pop
lds
pushf
lds
xor
mov
call
(bad)
push
aaa
mov
mov
cmp
mov
cmp
mov
repnz
add
aaa
mov
stc
xor
mov
into
mov
sub
fstp
inc
xor
es
mov
dec
aaa
mov
les
cmp
sub
call
cmp
mov
scas
cmp
add
leave
mov
cmp
fnstsw
xchg
add
(bad)
mov
or
jl
sub
pop
mov
sar
mov
add
jmp
xor
mov
jno
(bad)
mov
dec
mov
shl
inc
mov
sub
push
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
or
loop
pop
mov
aas
(bad)
mov
add
pop
add
xchg
outs
xor
out
xor
mov
dec
xor
mov
loope
lea
jno
push
mov
pop
xor
(bad)
mov
and
ss
mov
idiv
add
mov
dec
aaa
sar
test
push
mov
mov
jno
ins
cmp
mov
cmp
mov
cmp
mov
cmp
mov
lea
xchg
mov
ds
push
aas
push
mov
aas
push
mov
add
dec
add
outs
scas
add
jl
push
xor
mov
shl
mov
add
mov
sahf
xor
call
mov
jmp
lods
mov
cmp
aas
cmp
mov
cmp
mov
cmp
cli
cmp
dec
cmp
mov
cmp
sti
cmp
mov
cmp
mov
aam
(bad)
cmp
mov
cmp
mov
cmp
mov
sbb
add
and
sub
xor
cmp
(bad)
cmp
add
lods
add
add
mov
mov
ins
mov
jl
pop
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
aas
sbb
add
mov
mov
add
mov
mov
fidiv
and
adc
cmp
and
fdivr
xor
jmp
mov
push
mov
jae
xchg
pop
cmp
mov
cmp
dec
scas
xor
in
jno
(bad)
fild
add
stos
add
sar
xor
xor
add
xor
mov
pushf
xor
in
mov
aas
cmp
scas
sar
push
scas
sti
cmp
or
add
stos
add
cmp
fnstenv
cmp
cmp
sti
add
jbe
add
mov
push
xor
mov
das
mov
xchg
cmp
jmp
stos
add
jb
fnstenv
push
mov
mov
xor
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
call
add
adc
or
imul
xor
add
mov
addr16
scas
outs
xor
scas
ja
and
xchg
scas
(bad)
xor
scas
xchg
xor
scas
lahf
xor
scas
cmps
xor
scas
scas
xor
scas
mov
and
cmc
xor
mov
(bad)
push
test
lods
xor
jns
(bad)
mov
mov
add
sbb
mov
movs
mov
movs
stos
cmp
cmps
ret
movs
loop
loopne
cmc
cmp
mov
cmp
xchg
cmp
ret
mov
cmp
dec
mov
cmp
frstor
cmp
push
cmps
pop
ds
add
out
(bad)
dec
ret
add
rol
xchg
xor
loop
cwde
lods
adc
mov
jo
or
mov
adc
mov
ss
mov
ss
shl
call
mov
or
dec
mov
push
aaa
daa
mov
xor
fnstsw
aaa
add
or
std
aaa
test
inc
cmp
test
cmp
mov
push
test
cmp
test
cmp
xchg
cmp
dec
cmp
test
cmps
cmp
mov
cmp
test
cmp
cmps
int
mov
xor
in
movs
lahf
cmp
lock
or
add
add
add
add
sbb
aas
in
enter
fnstsw
push
outs
add
retf
add
mov
gs
shr
dec
shl
mov
cli
mov
cmp
xor
mov
jl
xlat
test
xor
cli
stos
xchg
and
lods
aaa
pusha
stos
(bad)
aaa
add
xchg
jge
test
idiv
movs
das
cmp
cmps
loop
xor
or
cmp
and
mov
movs
int
shld
cmp
ins
mov
ds
fdivr
push
pop
add
jp
add
loope
gs
ror
shl
add
add
add
js
adc
test
adc
mov
cmps
stc
ss
xor
stos
or
add
cmps
out
cmp
inc
cmp
cmps
jl
and
dec
cmp
mov
jbe
fsub
sbb
movs
mov
ds
scas
cwde
mov
scas
mov
add
push
retf
ds
mov
aas
data16
aas
pop
mov
aas
es
aas
push
mov
aas
pop
mov
aas
div
add
or
wrmsr
mov
and
into
mov
pop
xor
ror
(bad)
shl
push
fdiv
ret
xor
xor
mov
push
mov
in
mov
movs
mov
test
mov
mov
icebp
mov
inc
xor
fs
cmps
push
xor
test
dec
mov
cmp
scas
pop
aas
dec
mov
add
jnp
add
stos
add
(bad)
mov
adc
stos
mov
adc
scas
mov
and
add
add
add
add
mov
cmp
pop
mov
xor
mov
xchg
xor
mov
int3
xor
mov
out
or
mov
rdpmc
cmp
xor
aas
xor
push
xor
jns
adc
cdq
xor
lahf
movs
xor
sahf
mov
add
add
add
add
xchg
mov
xchg
mov
xor
out
div
out
push
adc
jp
xor
shl
mov
loop
dec
xchg
popa
aaa
and
jle
not
std
aaa
dec
xchg
or
xor
sbb
xor
pushf
cdq
jb
stos
xchg
jp
rcl
loopne
cld
xchg
(bad)
cmp
cdq
sbb
xlat
cwde
dec
cmp
imul
ja
xchg
cmp
mov
xchg
icebp
cmp
xchg
or
mov
push
cmp
inc
cmp
xchg
cmp
cwde
jnp
xor
sub
rcl
inc
cwde
imul
cwde
mov
cmp
lods
cwde
cmp
lods
fidivr
scas
cld
cmp
xchg
sbb
xor
cmp
imul
sub
cmp
mov
cmp
scas
xchg
(bad)
cmp
fisubr
and
add
add
add
add
scas
push
ds
fwait
ds
out
lds
fs
cld
lods
jno
sub
pushf
aas
cmps
xor
add
add
lea
xor
cwde
cdq
cmp
mov
inc
xor
jle
or
mov
xor
lahf
dec
xor
pop
xor
mov
cmp
aaa
xor
add
cdq
retf
xor
call
sub
popa
xor
lea
push
cdq
(bad)
xor
pushf
mov
xchg
fnsave
xchg
xchg
std
ss
and
int3
xchg
daa
aaa
aam
inc
aaa
or
jo
adc
fwait
lahf
aaa
or
scas
aaa
sbb
shl
add
and
stc
aaa
adc
sbb
xor
pop
cmp
xchg
aas
cmp
xchg
into
cmp
je
imul
sub
aam
pop
aas
hlt
xchg
lods
aas
stos
xchg
jmp
aas
(bad)
add
dec
test
xor
sbb
mov
xor
cdq
add
add
mov
lahf
mov
xor
call
or
retf
call
push
fwait
mov
aaa
inc
xchg
imul
int
sar
add
outs
cmp
xchg
(bad)
cmp
xchg
outs
cmp
xchg
jmp
ins
xchg
gs
xchg
xchg
cmp
add
lods
in
in
(bad)
jo
popa
xchg
leave
aas
push
xchg
out
(bad)
or
add
cmps
popf
and
xor
popf
pop
xor
sahf
xchg
xor
add
jne
xor
popf
jmp
pushf
div
dec
sahf
sub
call
xor
sahf
xchg
xor
sahf
lods
xor
add
sahf
jecxz
and
cmp
in
cwde
out
mov
fidiv
outs
call
popa
call
in
sub
rcl
cmps
cmp
xchg
adc
cmp
xchg
push
cmp
cmp
cmp
add
add
xchg
inc
cmp
xchg
dec
cmp
lods
pop
cmp
nop
cli
cmp
nop
inc
cmp
mov
mov
cmp
push
xchg
add
ds
cmp
imul
ds
xchg
cwde
ds
xchg
mov
ds
mov
xchg
xchg
mov
ds
fnstcw
jnp
and
add
mov
sbb
add
pushf
push
xor
pushf
mov
push
popf
xchg
cmp
test
shl
cwde
add
push
cwde
add
ja
inc
xor
xchg
lods
xor
xchg
mov
jmp
xor
popf
xchg
xor
popf
mov
xor
popf
and
mov
sahf
call
mov
in
jmp
cmp
nop
test
xor
pop
cmp
inc
cmp
(bad)
lea
js
sar
fs
sar
xchg
adc
mov
xchg
jo
jne
bnd
test
xor
call
clc
xor
out
ja
mov
int3
xor
cdq
cmp
jmp
xchg
cmp
pop
xchg
cmp
aas
xchg
(bad)
call
test
and
sbb
xor
mov
jne
retf
cdq
call
xor
daa
xor
xchg
cmp
add
or
mov
sbb
xor
pushf
push
xor
dec
popf
cld
xor
mov
jg
xchg
mov
cmp
cmp
mov
xchg
mov
cmp
dec
xchg
ds
xchg
call
sar
sub
add
out
jg
xor
add
and
daa
or
ret
xor
popf
or
xor
xchg
pushf
repz
dec
jg
xchg
ss
jge
aaa
stc
jge
aaa
dec
jge
cmp
mov
aad
push
cmp
mov
mov
stc
cmp
adc
test
add
mov
bnd
mov
jmp
add
or
inc
xor
jg
xor
sub
jge
aaa
(bad)
jl
aaa
lods
xchg
cmp
mov
lods
mov
xor
cmp
xor
in
lea
xchg
push
aas
dec
test
add
leave
xor
data16
bnd
and
xor
xor
call
out
inc
cmp
jb
push
cmp
xor
mov
aas
out
hlt
push
scas
add
jg
push
xor
jl
xor
fwait
cwde
ss
sub
add
pop
call
fiadd
add
mov
sbb
fild
cmp
xchg
adc
cmp
mov
lds
hlt
jmp
add
nop
and
xor
jl
xor
loope
or
xor
jmp
stos
aaa
dec
fwait
pop
cmp
cmp
test
sub
cmp
push
adc
xor
hlt
inc
lods
add
sbb
xor
retf
or
test
cmp
aad
jns
out
test
jmp
aas
add
repnz
ds
push
xor
es
hlt
push
jge
xor
sub
pop
or
inc
or
xor
jnp
xor
jnp
xor
jl
xor
jl
xor
jl
ss
xor
jl
xor
jl
xor
jle
xor
jg
xor
add
jle
xor
mov
xor
das
xor
jle
xor
jge
xor
jge
xor
jge
xor
cwde
xchg
xchg
fidiv
cwde
adc
rcl
ss
call
sub
sub
fstp
pop
aaa
into
cwde
(bad)
aaa
cmp
hlt
aaa
out
cmp
add
sbb
cmp
test
dec
test
cmp
mov
cmp
aad
mov
cmp
and
pop
call
mov
dec
cmp
cwde
push
cmp
cwde
xchg
cmp
cdq
sar
add
aas
cmp
add
xchg
movs
cmp
xchg
ret
cmp
cwde
fdivr
test
hlt
cmp
cwde
pop
cmp
xchg
xor
pop
xchg
test
or
sar
mov
aaa
cmp
jge
cmp
ss
cmp
jo
enter
sar
mov
cmp
jo
and
add
pushf
jnp
mov
jnp
ds
pushf
sbb
stc
jnp
ds
dec
aas
jb
fs
cmp
aas
or
jmp
dec
hlt
call
mov
add
jp
xor
jns
xor
or
sub
(bad)
xor
jle
xor
jg
xor
jg
xor
jg
xor
jge
xor
add
jge
xor
jle
xor
jle
xor
jle
xor
test
adc
xor
cmp
xor
pop
xchg
pusha
xchg
xchg
xchg
add
or
cmp
sub
loope
dec
aaa
popa
xchg
push
xchg
aaa
add
push
xchg
aaa
push
xchg
cmp
xchg
gs
cwde
fnstcw
test
out
cmp
xchg
xor
(bad)
xchg
push
cmp
xchg
sar
jg
loop
test
mov
rcl
int3
xchg
push
cmp
repnz
mov
das
xchg
fdivr
js
ins
idiv
ds
jle
and
add
push
jge
aas
inc
jge
aas
pop
jge
aas
cmps
jge
aas
pushf
jge
aas
int3
jge
aas
dec
jge
aas
jmp
bnd
inc
hlt
call
jg
xor
jns
xor
sbb
jg
xor
lods
xor
sbb
add
xor
jle
xor
jle
xor
jg
xor
add
jg
xor
jns
xor
jge
xor
pop
xor
xor
cwde
jg
xor
jg
xor
adc
or
xor
test
xor
pop
xor
sub
jle
xor
shl
cmps
jle
xor
or
jp
xor
test
xor
jp
xor
add
test
pop
test
adc
ss
mov
cmp
mov
jp
aaa
jecxz
ret
aaa
mov
nop
cmp
xchg
mov
mov
movs
cmp
xchg
mov
cmp
rcl
idiv
jo
jnp
add
lds
repz
test
fwait
xor
xor
addr16
xor
mov
lods
jns
xor
jnp
xor
jnp
xor
xor
jl
xor
mov
cmp
lds
xor
jle
xor
jle
xor
jl
xor
jl
xor
jle
xor
xor
add
adc
test
pusha
jns
xor
test
test
xor
sbb
js
xor
xchg
xor
pop
js
xor
mov
aaa
fist
cmp
xchg
cmp
xchg
loope
imul
add
add
add
add
xchg
xchg
cmp
(bad)
cmp
xchg
int
xlat
(bad)
sub
out
cmp
cmp
nop
bound
repnz
cmp
sbb
in
cmp
cmp
xor
ins
(bad)
dec
ds
pop
ds
call
xchg
imul
xchg
cwde
aas
add
or
sbb
(bad)
(bad)
stos
add
fidivr
xor
jl
xor
jnp
xor
jp
xor
jge
xor
jge
xor
jle
xor
mov
jno
into
xor
xor
dec
js
xor
jbe
xor
ja
xor
sbb
(bad)
and
xor
jge
xor
add
jge
xor
jge
xor
jge
xor
jle
xor
and
xor
jmp
ss
jnp
aaa
or
(bad)
cmp
xor
pop
xchg
fstp
aam
push
cmp
nop
arpl
add
push
cmp
(bad)
pop
cmp
xchg
pop
cmp
add
pusha
xchg
push
aas
xchg
or
push
stos
add
sar
xor
jns
xor
jp
xor
jp
xor
jp
xor
jns
xor
jae
mov
jns
xor
ja
xor
jnp
cmp
xchg
xchg
cmp
xchg
mov
cmp
xchg
loopne
in
(bad)
cmp
add
(bad)
(bad)
cmp
icebp
(bad)
fistp
adc
cmp
xchg
cmp
xchg
inc
cmp
int3
test
cmp
lods
xchg
xchg
aas
and
jmp
mov
add
adc
xor
and
add
xchg
xor
sub
sbb
pop
cmp
rol
push
xor
jge
xor
pop
mov
repnz
and
ss
jg
ss
aaa
lods
mov
pop
mov
cmp
stc
cmp
mov
cmp
mov
cmp
or
xchg
outs
cmp
add
add
add
ficom
sbb
jno
(bad)
inc
call
cmp
xor
pop
xor
xchg
xor
dec
xor
sub
and
ss
mov
xor
mov
data16
xchg
cmps
jl
aaa
sbb
jge
cmp
add
xchg
ja
jl
xchg
ror
in
cmp
xchg
inc
ds
xchg
sahf
mov
xchg
cwde
aas
sbb
icebp
aas
or
bnd
fcomip
inc
jg
das
cmp
xor
and
xor
add
add
sub
sub
xchg
sub
and
adc
xor
xor
jg
xor
mov
xor
or
cmp
jg
xor
jge
xor
jge
xor
jge
xor
jge
xor
mov
mov
or
xor
add
add
add
add
xor
push
mov
mov
mov
test
aaa
push
mov
cmp
cmp
(bad)
cmp
hlt
cmp
mov
sbb
mov
cmp
mov
cmp
or
mov
add
cmp
xor
add
pop
xchg
and
xor
or
hlt
sbb
add
cmp
xchg
push
cmp
xchg
xor
test
xchg
test
jge
cmp
test
cmp
test
cmp
test
cmp
pop
cmp
add
jo
sub
stos
cmp
add
add
add
xchg
nop
mov
cmp
(bad)
nop
repnz
ret
rcl
dec
ds
pusha
ds
xchg
ja
sti
xchg
mov
stc
xchg
popf
ds
xchg
sar
xchg
in
imul
jae
scas
xchg
mov
push
stos
add
sbb
dec
jl
xor
jnp
xor
add
inc
xor
push
xor
jl
xor
(bad)
xor
jnp
xor
xor
jmp
fistp
xor
jp
xor
jp
xor
jp
xor
jnp
xor
les
xchg
xor
pop
dec
xor
pop
xchg
xor
pop
movs
xor
pusha
mov
xor
js
add
push
pop
movs
xor
pop
and
pop
inc
xor
push
fwait
xor
push
and
lods
push
lahf
xor
fist
or
lea
push
push
jmp
ss
push
xor
adc
cld
push
fidiv
movs
push
and
iret
push
dec
cmp
push
pop
cmp
push
outs
cmp
mov
pop
pop
mov
pop
pop
fnstsw
movs
push
add
add
ret
cmp
pop
daa
cmp
pop
cmp
dec
pop
out
sbb
cwde
push
(bad)
cmp
daa
cmp
lea
lea
push
js
(bad)
push
movs
cmp
push
ret
push
aam
cld
push
in
or
lea
cmp
jmp
mov
mov
test
aas
add
cmp
repnz
add
ret
xor
pop
xchg
xor
xor
popa
xchg
xor
pop
and
fstp
xor
pop
imul
push
pop
xor
push
mov
xor
mov
pop
ret
xor
pushf
push
dec
ss
mov
scas
push
mov
aaa
add
fist
aaa
cmp
cmp
push
aad
retf
push
xor
cmp
pop
pop
cmp
push
ja
ja
mov
adc
cmp
pop
idiv
es
push
cmp
push
(bad)
cmp
push
stos
cmp
mov
je
(bad)
cmp
call
cmp
push
pusha
cmp
(bad)
clc
cmp
push
or
add
cmp
fistp
ins
mov
ds
sbb
pop
mov
ds
mov
ds
lea
aas
dec
lea
aas
dec
lea
aas
mov
icebp
push
add
icebp
pop
lds
shl
ja
sbb
and
pop
pop
imul
stc
pop
mov
xor
pop
pop
xor
pop
xor
inc
pop
test
xor
pop
div
pop
dec
xor
pop
pop
mov
xor
je
push
lea
mov
pop
je
loop
mov
add
pop
(bad)
ss
pop
add
das
pop
adc
call
pop
cmp
outs
pop
push
aaa
jg
data16
add
add
aaa
push
pop
int3
aaa
inc
pop
fbstp
dec
pop
cmc
aaa
(bad)
push
or
(bad)
push
es
push
inc
cmp
push
dec
cmp
push
pop
cmp
push
push
sub
cmp
push
mov
test
cmp
push
push
cmp
push
dec
cmp
popf
cmp
push
mov
cmp
push
gs
push
pushf
cmp
push
mov
cmp
add
push
adc
fwait
push
dec
cmp
mov
cmp
push
out
add
cmp
cmps
cmp
push
icebp
cmp
push
xor
cmp
sbb
icebp
cmp
dec
push
mov
push
push
ret
push
or
cmps
push
sub
or
push
pusha
aas
adc
push
xchg
cmp
aas
add
push
push
lods
aas
fs
mov
aas
xchg
jge
dec
test
adc
mov
xor
pop
(bad)
xor
pop
repz
pop
xor
arpl
(bad)
pop
cwde
xor
pop
out
add
xor
mov
fcomp
xor
pop
popa
xor
push
imul
add
cmp
push
dec
cmp
add
push
cmp
lea
or
push
jecxz
pushf
push
bnd
test
xor
mov
pop
push
xor
pop
imul
pop
mov
xor
pop
lds
inc
pop
repz
or
jp
daa
xor
cmp
jbe
push
xor
push
xor
pop
mov
add
out
pop
mov
xor
pop
and
js
push
xor
xor
pop
pop
inc
xor
jae
inc
pop
mov
(bad)
pop
stos
xor
pop
fdiv
jb
in
xor
pop
sbb
jmp
xor
pop
push
xor
pop
ins
xor
pop
mov
not
xor
add
xor
pop
mov
xor
fs
outs
rcr
fistp
aaa
mov
xchg
cmp
jge
fst
fst
es
repz
add
adc
xor
pop
es
pop
mov
cs
lea
cmps
push
div
loope
aam
mov
leave
xor
pop
daa
xor
mov
aaa
add
sub
mov
cmp
pop
cmp
push
fidivr
in
push
mov
jmp
repz
add
(bad)
pop
push
xor
pop
icebp
xor
push
shl
push
pop
xor
push
enter
cmp
pop
mov
xor
pop
in
xor
int3
pop
dec
cmp
add
sub
clc
pop
and
sub
pop
call
push
das
cmp
sar
push
out
cmp
push
mov
cmp
out
jg
cli
cmp
dec
daa
cmp
dec
pop
cmp
dec
jge
fisttp
cmp
mov
cmp
test
cmp
xchg
cmp
test
cmp
add
add
add
add
outs
test
add
in
test
cmp
cmp
aas
ds
ja
je
xchg
ds
xchg
ds
xchg
ds
sub
daa
xchg
or
mov
aas
cmps
and
call
add
xchg
cmp
ret
xor
in
adc
add
xor
sbb
xor
test
xor
jle
xor
jg
xor
cli
xor
push
xor
and
in
int3
xor
add
xor
jnp
xor
jl
xor
jnp
xor
lock
sar
jmp
(bad)
aaa
stos
jge
cmp
add
mov
cmp
popf
cmp
pop
cmp
mov
cmp
mov
adc
pop
cmp
test
cmp
xchg
cmp
call
cmp
mov
and
aas
jge
test
mov
inc
add
add
xor
cmp
or
jg
xor
jg
xor
adc
jno
(bad)
xor
jle
xor
xor
jnp
sar
cmp
xchg
mov
jl
out
cmp
test
mov
jmp
cmp
mov
add
add
add
add
test
mov
mov
adc
je
mov
mov
push
repz
add
jp
arpl
and
or
xor
adc
and
cmp
fdivr
xor
jle
xor
jg
xor
jg
xor
add
jg
xor
jg
xor
jge
xor
jl
xor
js
xor
or
jp
ss
jp
aaa
in
out
aaa
jnp
cmp
mov
cmp
pop
cmp
push
cmp
test
push
test
adc
sbb
add
xchg
adc
test
cmp
xor
mov
aas
sub
bnd
add
sar
mov
jl
xor
jnp
xor
test
sar
xor
cmp
xor
jle
xor
mov
xor
js
xor
js
xor
add
ja
xor
ja
xor
js
xor
or
jp
cmp
test
push
add
mov
sbb
fadd
adc
mov
test
pop
test
cmp
jg
cmp
jg
cmp
sbb
add
cmp
mov
cmp
(bad)
jnp
idiv
aas
mov
aas
push
fcomi
call
jnp
xor
cmp
xor
dec
xor
xor
jg
xor
test
xor
test
xor
jle
dec
ss
add
jle
js
add
mov
lds
js
cmp
ret
js
cmp
ja
cmp
ja
cmp
inc
cmp
ja
cmp
jl
cmp
jae
imul
jl
ds
jp
aas
sbb
retf
mov
test
xor
adc
pop
jle
xor
add
push
xor
jle
xor
test
xchg
test
add
fidiv
and
cmp
lea
loopne
(bad)
into
js
cmp
ret
jns
cmp
js
cmp
js
cmp
adc
out
push
cmp
jbe
cmp
jbe
cmp
call
jle
aas
sub
aas
push
add
inc
add
stos
add
lds
xor
add
ss
xor
xor
jnp
xor
jnp
xor
jl
xor
test
dec
test
xor
test
xor
test
gs
xor
mov
push
xchg
add
gs
or
stos
aaa
jae
shl
enter
pop
js
cmp
jb
cmp
jb
cmp
add
nop
jb
cmp
cmp
jno
cmp
je
cmp
je
cmp
jae
cmp
iret
jae
cmp
ds
ds
jo
idiv
ds
jl
aas
add
cli
jl
aas
(bad)
jl
aas
xchg
jge
aas
outs
jge
aas
xchg
jge
aas
(bad)
out
icebp
(bad)
jp
add
test
sti
das
mov
sbb
sar
xor
or
gs
sar
xor
jp
xor
js
xor
js
xor
adc
sar
add
or
sub
push
jle
xor
jle
xor
test
xor
test
mov
jl
aaa
cmp
aaa
stos
jp
aaa
jmp
jbe
cmp
jbe
cmp
cmc
cmp
jno
cmp
je
cmp
cmp
ja
cmp
jbe
cmp
add
ja
cmp
jbe
cmp
fdivr
daa
ja
cmp
or
jge
cmp
jb
cmp
jb
cmp
jle
lods
cmp
aas
jo
ds
ds
idiv
push
jae
aas
fbstp
aas
push
sahf
icebp
call
lods
add
cmp
xor
cld
xor
jle
xor
out
fstp
xor
add
test
xor
inc
jnp
cmp
jne
cmp
sbb
lock
cmp
jno
cmp
ja
cmp
cmp
jbe
cmp
loopne
out
mov
jge
cmp
mov
cmp
in
jo
aas
pop
jb
aas
push
(bad)
icebp
dec
ss
xor
jl
xor
jecxz
fstp
xor
xchg
xor
jge
xor
jge
xor
pop
xor
js
xor
test
xor
cs
xor
cli
jns
cmp
je
cmp
jno
cmp
jae
cmp
jae
cmp
and
cmp
add
jne
cmp
je
cmp
jo
cmp
jge
cmp
jge
cmp
jo
cmp
jo
cmp
jo
cmp
outs
fnstcw
jo
cmp
outs
adc
sub
cmp
push
outs
lods
cmp
add
ds
jb
ds
jo
aas
js
(bad)
aas
cmps
mov
scas
jnp
xor
jnp
xor
jge
xor
jge
xor
jle
xor
out
jl
xor
and
fbstp
jg
cmp
push
cmp
je
dec
ss
aaa
in
jp
cmp
jno
cmp
jno
cmp
jo
cmp
outs
xor
cmp
add
jne
cmp
inc
jae
aas
ins
jb
aas
(bad)
stos
hlt
dec
add
leave
jp
xor
jp
xor
push
xor
mov
xor
outs
aam
push
jl
xor
jecxz
and
aaa
cs
aaa
out
jp
aaa
outs
jno
cmp
jb
cmp
jb
cmp
add
jno
cmp
jo
cmp
outs
dec
cmp
cmp
outs
jae
xchg
outs
cmp
outs
lahf
cmp
or
xchg
jne
cmp
gs
push
cmps
cmp
jmp
cmp
in
jb
aas
ss
aas
mov
call
stos
add
(bad)
jns
xor
js
xor
jns
xor
add
test
xor
add
jge
xor
jle
xor
ins
dec
xor
sub
ss
imul
jg
ss
jg
sbb
aaa
nop
jle
cmp
push
or
and
cmp
add
jnp
imul
test
or
je
cmp
add
gs
cmp
jae
cmp
mov
gs
aas
and
aas
mov
bnd
idiv
push
mov
add
sub
cmc
jg
xor
cmp
test
out
and
cdq
xor
cmp
xor
ins
xor
sti
imul
(bad)
push
xor
retf
push
xor
and
ss
jle
ss
jle
aaa
ds
aaa
stos
addr16
cmp
push
outs
cmp
test
jo
(bad)
imul
cmp
dec
cmp
push
repz
add
gs
cmp
add
add
add
or
outs
jae
mov
jg
call
add
sub
adc
stos
jg
xor
jle
xor
imul
lahf
imul
jl
mov
cmp
adc
sbb
jle
inc
jae
les
aas
cmps
outs
idiv
or
shl
add
jg
xor
jg
xor
push
xor
jns
xor
cmp
dec
cmp
addr16
cmp
or
xchg
cmp
fistp
sub
sub
leave
jo
or
aas
cmp
aas
push
call
push
idiv
dec
scas
add
ret
jge
xor
xchg
xor
add
adc
sub
clc
xor
jl
xor
jle
xor
call
imul
xor
jge
xor
jl
xor
jle
xor
jle
xor
push
arpl
sbb
imul
mov
ss
add
addr16
addr16
ss
imul
aaa
mov
aaa
dec
push
aaa
push
push
aaa
icebp
fs
cmp
xchg
cmp
imul
cmp
arpl
cmp
pop
fs
mov
test
les
jo
cmp
loopne
fstp
shr
add
test
aas
in
jno
call
idiv
jmp
xor
sbb
xor
jle
xor
jl
xor
jge
xor
bound
ret
addr16
js
and
pop
addr16
ss
imul
aaa
hlt
push
and
mov
arpl
dec
arpl
cmp
cmp
add
xchg
cmp
cmp
sbb
out
fs
cmp
add
cmp
out
cmp
in
cmp
into
jmp
ds
in
and
sub
add
hlt
dec
add
push
fwait
ins
xor
mov
loop
dec
mov
add
(bad)
sahf
jne
call
cmp
add
cwde
or
in
sub
ins
jmp
aas
(bad)
sub
dec
stos
add
and
xor
mov
sub
sbb
pop
xor
jne
or
stc
xchg
test
mov
cmp
xchg
cmp
xchg
idiv
scas
xchg
outs
cmp
xchg
out
cmp
outs
cmp
add
add
add
loopne
jno
push
cmp
jmp
stos
add
push
mov
sub
inc
xchg
cwde
cmp
adc
arpl
sbb
inc
stos
add
bound
jae
push
mov
std
xor
lahf
pop
xor
mov
sbb
fstp
sahf
xor
out
add
scas
popf
cmp
xchg
jno
clc
xchg
shl
daa
xor
push
popf
shl
(bad)
xchg
je
stc
xchg
shl
pop
xchg
xchg
aaa
call
cmp
xchg
pop
cmp
cwde
(bad)
cmp
xchg
sub
retf
xchg
js
not
repnz
xchg
call
add
xchg
push
cmp
xchg
lahf
cmp
in
sar
xchg
pop
cmp
cwde
out
ss
jl
popa
out
sub
pop
in
test
dec
out
les
lods
in
out
xchg
jo
call
add
data16
adc
jb
cmp
movs
cdq
xor
push
xor
push
fisub
mov
retf
mov
mov
add
add
add
add
mov
pop
xor
lahf
pop
xor
aaa
xor
lahf
inc
xor
lahf
xor
lahf
jle
dec
lahf
xchg
xor
lahf
cmps
xor
mov
xchg
lahf
loopne
js
jmp
xor
cdq
add
popf
cdq
pop
xor
cdq
dec
xor
cdq
bound
sbb
jg
or
nop
xor
mov
mov
add
add
add
add
mov
xor
cmc
xor
mov
sub
cdq
sahf
inc
xor
sahf
test
mov
sahf
(bad)
xor
lahf
clc
xor
fwait
or
xchg
sub
call
imul
xor
xchg
fidiv
xchg
push
xor
not
xor
add
add
add
xchg
popf
xor
test
xor
xchg
jle
call
scas
add
xor
call
xor
call
pop
xchg
or
dec
xchg
sbb
cmp
xor
rcl
xor
retf
xor
add
add
add
xor
jo
sub
xor
xchg
shl
mov
loopne
mov
lock
stos
xchg
clc
aaa
mov
xchg
cmp
loop
inc
cmp
xchg
add
xchg
dec
idiv
jb
add
mov
inc
xor
pushf
xor
pushf
add
push
pop
idiv
add
cmp
xor
cdq
movs
xor
cdq
mov
ficomp
les
mov
cdq
aam
ds
fdiv
push
cdq
in
ds
in
xor
fwait
hlt
xor
fwait
cld
xor
pushf
or
mov
adc
mov
fwait
and
mov
fwait
xor
ficomp
inc
xor
add
pushf
dec
xor
pushf
push
xor
pushf
xor
fwait
je
ficomp
test
(bad)
call
mov
fwait
movs
xor
call
neg
int3
xor
fdiv
push
fwait
in
ds
in
xor
popf
hlt
xor
popf
cld
xor
add
fwait
or
mov
adc
ficom
inc
xor
xchg
dec
xor
xchg
push
xor
xchg
pop
xor
cwde
pusha
xor
popf
push
xor
popf
js
ret
xor
popf
mov
popf
nop
xor
popf
cwde
xor
popf
mov
xor
popf
mov
ficomp
shl
enter
shl
add
popf
fdiv
sahf
loopne
mov
stos
repz
stos
add
ficom
add
ficom
adc
jle
sbb
(bad)
jmp
push
cdq
pop
xor
cdq
je
inc
xchg
mov
dec
xchg
movs
xor
mov
xor
dec
xor
pusha
xor
xchg
js
ficom
test
add
jmp
xor
xchg
lock
xchg
or
jle
xor
jle
add
(bad)
inc
add
mov
or
xor
xor
push
sub
cmp
js
ret
aas
outs
xchg
mov
aas
call
aas
jb
in
aas
cmps
sub
inc
cmps
xchg
cdq
or
mov
xor
ficomp
pop
xor
pop
xor
cdq
fs
sub
cmp
or
xor
sub
xor
and
dec
sub
adc
pop
xor
cmp
and
out
enter
aam
add
add
mov
xor
or
add
ins
xor
nop
xor
sbb
inc
cmp
sub
xchg
and
xchg
or
call
xor
sbb
xor
cmp
sub
xor
add
pushf
add
push
pushf
push
xor
pushf
nop
xor
pushf
shl
pushf
lock
pushf
in
xor
fwait
sbb
into
call
scas
fwait
mov
xor
jle
xor
idiv
ss
ss
jle
ss
ss
ss
jle
xchg
aaa
(bad)
jl
aaa
dec
pushf
inc
aaa
add
es
nop
aaa
push
fwait
shl
xor
xor
bound
test
scas
mov
push
mov
cmp
inc
cmp
cmp
cwde
cmp
mov
cmp
inc
cmp
pusha
cmp
test
cmp
mov
mov
xchg
cmp
sbb
add
stos
xchg
push
mov
add
cmp
xchg
cmp
aam
jle
clc
cmp
and
mov
sub
xchg
pusha
cmp
test
mov
cwde
cmp
sub
loop
call
cmp
sbb
stos
test
inc
test
cmp
jle
and
or
jl
add
in
fiadd
or
retf
aas
retf
aas
fiadd
js
sub
int3
aas
mov
jg
aas
sbb
(bad)
stos
add
pop
jge
das
dec
jge
xor
add
jge
xor
sub
ret
xor
xor
add
hlt
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
dec
jl
xor
jl
xor
jle
xor
jg
xor
jle
xor
add
jnp
xor
jnp
xor
jnp
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
cld
xor
jge
xor
xor
xchg
xor
je
mov
jge
xor
jl
xor
cwde
adc
xchg
cmp
xchg
push
xor
cwde
fs
xchg
je
push
cwde
test
add
xchg
xor
xchg
movs
xor
cwde
enter
lock
cwde
add
into
xchg
pop
xor
es
js
push
xchg
jl
inc
xchg
mov
xor
add
ss
dec
ss
adc
add
ss
hlt
and
add
add
add
add
test
aaa
outs
adc
sub
test
push
cmp
mov
clc
aaa
out
xchg
and
jle
and
or
pop
cmp
xchg
ins
cmp
jl
dec
cdq
mov
cmp
lods
cmp
call
cmp
cdq
cmp
out
cdq
pusha
cmp
cwde
jl
or
(bad)
cwde
enter
int3
cmp
or
mov
pusha
cmp
cwde
jl
mov
mov
cmp
cwde
cld
cmp
xchg
cmp
push
xchg
cmp
jb
cmp
xchg
je
mov
test
add
mov
cmp
xchg
in
retf
cmp
xchg
fs
xchg
je
xor
xchg
cmp
add
xchg
movs
cmp
xchg
mov
xchg
xchg
les
xchg
aam
jb
in
cmps
jl
cmp
dec
xchg
pusha
cmp
add
loopne
dec
xchg
in
dec
jg
cmps
jg
ds
dec
mov
jg
ds
jg
adc
in
sbb
cmp
aas
cmp
aas
add
push
sub
fidivr
aas
cmp
aas
mov
jg
aas
bound
aas
mov
jle
aas
jb
in
bound
add
test
cld
das
retf
xor
sbb
sbb
jns
xor
add
and
add
bnd
xor
add
and
and
xor
push
jg
xor
pop
xor
jg
xor
jle
xor
jg
xor
jg
xor
jns
xor
jns
xor
jp
xor
jp
xor
jl
sub
xor
jp
xor
jp
xor
js
xor
js
xor
add
js
xor
jns
xor
and
je
loop
test
loop
xchg
xor
jg
xor
jle
xor
jle
xor
jg
xor
jg
xor
add
xor
xor
jp
xor
jnp
xor
test
test
jnp
xor
test
add
mov
mov
les
add
test
xor
test
xor
test
rol
push
xor
push
test
ret
xor
push
test
xor
bound
ss
ss
ss
ss
js
fidiv
add
or
ss
ja
ss
ss
sub
ret
aaa
ret
aaa
ret
aaa
jb
test
inc
jnp
aaa
add
aaa
bound
aaa
xchg
jnp
aaa
cmp
cmp
cmp
rcl
dec
cmp
xchg
pop
cmp
xchg
ins
cmp
xchg
jl
or
pushf
cmp
add
xchg
lods
cmp
xchg
mov
cmp
fdivr
or
cld
cmp
or
dec
xchg
sbb
dec
xchg
sub
outs
xchg
pop
cmp
xchg
xchg
cmp
movs
cmp
xchg
mov
push
xchg
les
mov
aam
mov
in
inc
xchg
hlt
cmp
xchg
add
mov
cmp
ret
cmp
xchg
ins
cmp
add
xchg
test
and
lods
cmp
mov
cmp
xchg
or
jp
and
xchg
xchg
xor
xchg
xchg
inc
cmp
xchg
cmp
xchg
test
add
sar
xchg
call
cmp
nop
xor
nop
push
cmp
jge
cmp
nop
js
mov
cli
(bad)
mov
push
nop
les
nop
in
cmp
mov
cmp
mov
retf
cmp
or
pop
cmp
sbb
mov
dec
(bad)
lods
cmp
retf
cmp
jb
and
adc
ds
push
ds
xchg
fs
mov
xchg
test
mov
xchg
ds
movs
ds
rcl
aam
xchg
xchg
in
mov
xchg
add
repnz
adc
repnz
and
push
xchg
push
aas
pop
xchg
jl
cmp
pushf
aas
sub
mov
aas
jp
fdivr
stos
xchg
in
aas
xchg
cli
hlt
call
add
jp
xor
sbb
call
xor
jp
xor
jp
xor
jp
xor
jp
xor
jp
xor
jp
xor
jp
xor
jns
xor
sub
pop
js
xor
pusha
xor
jns
xor
js
xor
jns
xor
ja
xor
add
ja
xor
ja
xor
jl
cmp
xor
js
xor
shl
js
xor
jbe
xor
pop
xor
js
xor
adc
and
in
adc
add
cmp
xor
xor
jbe
jo
jle
xor
scas
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
mov
xor
mov
test
xor
inc
mov
inc
mov
or
scas
jle
outs
jg
ss
jg
mov
jg
add
fidivr
ss
or
ss
jle
idiv
ss
clc
ss
aaa
sub
aaa
push
jle
aaa
mov
aaa
push
jge
aaa
mov
pushf
aaa
jmp
aaa
push
jge
aaa
fiadd
sbb
jle
pop
cmp
xchg
or
xchg
cmp
mov
add
mov
cld
cmp
xchg
mov
xchg
fiadd
dec
cmp
mov
mov
mov
mov
fimul
mov
cmp
mov
cmp
mov
cmp
test
cmp
or
jmp
cmp
test
xchg
add
add
add
push
mov
cmp
in
cmp
xchg
cmp
xchg
mov
sub
sbb
dec
cmp
mov
mov
xchg
xchg
dec
xchg
retf
cmp
fdivr
dec
xchg
cmp
cld
cmp
or
mov
sub
call
add
add
add
add
test
test
xchg
jl
retf
cmp
xchg
pushf
cmp
xchg
lods
cmp
xchg
mov
cmp
xchg
fdivr
xchg
in
cmp
test
cmp
test
retf
cmp
or
pop
cmp
sbb
mov
dec
test
add
add
add
ficom
int3
cmp
jbe
sbb
jp
xor
xchg
pop
(bad)
push
ds
(bad)
fs
pop
jb
movs
ds
ror
aam
xchg
(bad)
in
mov
xchg
add
repnz
adc
repnz
and
adc
aas
repnz
push
aas
add
adc
je
push
xchg
test
xor
movs
aas
inc
xchg
mov
push
xchg
fdivr
mov
cmc
(bad)
mov
jl
xor
sbb
xchg
inc
xor
add
or
or
or
sbb
xor
or
add
dec
jnp
xor
jp
xor
jp
xor
jp
xor
jp
xor
jp
xor
jl
dec
jnp
xor
jnp
xor
lods
xor
jnp
xor
jnp
xor
jge
xor
jge
xor
jge
xor
cmp
dec
lahf
dec
xor
lahf
pop
xor
lahf
ins
xor
lahf
jl
add
retf
xor
mov
lods
xor
mov
int3
xor
mov
in
xor
mov
or
dec
mov
sub
ficomp
dec
xor
lahf
pop
xor
lahf
ins
xor
jl
dec
sahf
mov
or
lods
xor
sahf
int3
xor
sahf
or
add
ret
xor
sahf
inc
xor
sahf
push
xor
sahf
fs
xchg
je
adc
xchg
xor
sahf
movs
xor
sahf
mov
adc
aam
adc
hlt
xor
xchg
add
xor
and
inc
xchg
xor
push
xchg
inc
xor
adc
je
xchg
xchg
test
add
jb
movs
xor
xchg
xchg
les
xchg
xchg
in
mov
xchg
add
mov
adc
repnz
and
ret
rcl
push
adc
adc
xchg
ss
movs
add
les
repnz
aam
adc
hlt
ss
xchg
add
add
xor
and
inc
xchg
xor
push
xchg
inc
aaa
jb
push
aaa
adc
je
xchg
xchg
test
jb
xchg
aaa
jb
movs
aaa
add
les
jb
aam
xchg
xchg
in
mov
cwde
add
mov
adc
repnz
and
ret
cmp
cwde
inc
cmp
cwde
push
cmp
cwde
cmp
xchg
je
add
adc
xchg
cmp
cwde
movs
cmp
cwde
mov
adc
aam
adc
hlt
cmp
add
xor
and
inc
xchg
dec
cmp
jl
mov
xchg
pushf
cmp
xchg
lods
cmp
mov
cmp
xchg
fdivr
stos
xchg
in
cmp
xchg
cld
cmp
xchg
sbb
add
stos
xchg
sub
sbb
dec
cmp
xchg
pop
cmp
xchg
ins
cmp
xchg
jl
cmp
pushf
cmp
xchg
lods
cmp
xchg
mov
cmp
cwde
fdivr
sub
cld
cmp
cwde
or
jp
sbb
sub
cmp
jp
dec
cmp
pop
cmp
cwde
ins
cmp
xchg
mov
add
mov
xchg
lods
cmp
mov
cmp
xchg
fdivr
stos
xchg
in
cmp
xchg
cld
cmp
lea
stos
xchg
sub
sbb
dec
cmp
xchg
pop
cmp
xchg
ins
cmp
lea
lea
jmp
cmp
xchg
int3
cmp
xchg
fdivr
xchg
in
cmp
(bad)
cld
cmp
add
lea
sub
cmp
jp
dec
cmp
sub
jl
mov
lea
pop
lea
cmp
in
cmp
mov
xchg
sbb
stos
(bad)
sub
sbb
dec
ds
(bad)
pop
sub
sbb
mov
cmp
lods
ficom
int3
cmp
in
ds
xchg
cld
cmp
sbb
sub
cmp
jp
dec
aas
jp
pop
aas
sub
jl
mov
xchg
pushf
aas
jmp
aas
mov
xchg
fdivr
add
stos
xchg
in
aas
(bad)
cld
hlt
jmp
scas
add
ficomp
xor
pushf
sub
ficomp
xor
pushf
pop
xor
pushf
ins
xor
cdq
jl
or
xor
pushf
lods
xor
pushf
mov
xor
pushf
fdiv
sbb
xor
or
cmp
sub
add
pop
pushf
cmp
mov
xor
fwait
ins
xor
fwait
mov
cli
call
call
xor
fdiv
call
xor
popf
or
mov
popf
sub
ficomp
dec
xor
popf
pop
xor
sahf
ins
xor
sahf
jl
or
pushf
xor
add
cwde
lods
xor
cwde
mov
xor
cwde
fdiv
sbb
cld
xor
or
cmp
sub
pop
xchg
cmp
mov
pop
xor
cwde
ins
xor
xchg
mov
cli
xchg
pushf
xor
xchg
lods
xor
sahf
cld
xor
sahf
or
mov
xor
adc
add
fs
lahf
jl
push
popf
mov
xor
popf
lock
popf
dec
xor
and
xor
inc
popf
add
mov
inc
sbb
ss
pushf
enter
fdiv
sub
cmp
mov
mov
aaa
add
mov
xchg
cld
aaa
mov
ins
cmp
nop
cmp
xchg
call
cmp
xchg
pop
cmp
nop
pop
cmp
xchg
nop
cmp
les
mov
sbb
out
cmp
jmp
cmp
mov
cmp
hlt
cmp
sub
xchg
dec
cmp
retf
add
into
retf
cli
retf
push
retf
or
lds
push
dec
cmp
lds
lds
jmp
cmp
ret
cmp
les
cmp
into
(bad)
xor
adc
push
ds
test
inc
mov
ds
and
jmp
add
add
add
add
lds
(bad)
cwde
aas
cli
lds
cmp
int3
aas
cmp
fdivr
sub
in
aas
push
adc
push
sar
dec
shl
call
xor
pop
xor
shr
jl
mov
mov
or
jb
sub
ss
js
dec
mov
cli
mov
loopne
fcmovb
adc
faddp
xor
adc
push
xor
ret
dec
ret
(bad)
lock
shl
shr
mov
cli
mov
in
inc
mov
dec
xor
mov
ins
xor
mov
in
dec
mov
and
mov
add
call
xor
mov
mov
dec
ss
ss
mov
shl
mov
or
jle
inc
aaa
repnz
test
inc
mov
enter
sbb
mov
(bad)
pop
cmp
(bad)
jl
test
cmp
(bad)
enter
hlt
cmp
add
adc
xchg
enter
enter
leave
xchg
cmp
leave
fdivr
push
(bad)
cld
cmp
sbb
pop
les
jp
pop
cmp
les
les
cmp
ret
mov
cmp
(bad)
sub
sbb
push
cmp
(bad)
ins
cmp
jl
cs
cmp
sar
add
shl
ret
push
ret
(bad)
ret
mov
ret
add
cmp
mov
shl
xchg
cmp
inc
shl
inc
ret
add
push
sbb
add
es
adc
dec
mov
je
sahf
rcl
add
shl
rcl
pop
xor
mov
ins
xor
je
pop
mov
test
xor
pusha
xor
push
mov
bound
les
xor
mov
mov
adc
xchg
mov
xor
mov
lds
cmp
add
add
add
es
pusha
cmp
stos
mov
mov
cmp
idiv
int3
cmp
ds
in
ds
hlt
cmp
mov
add
jle
or
mov
adc
mov
shl
shr
shl
sar
add
rol
dec
ds
pop
ds
mov
mov
idiv
pushf
ds
mov
lods
ds
mov
fdivr
or
idiv
xchg
mov
add
mov
or
jp
sbb
push
sub
sub
dec
xor
mov
push
jl
sub
mov
cmp
pushf
xor
shr
rcl
lds
xor
xor
cwde
ss
aaa
xchg
xor
xchg
inc
aaa
mov
ret
mov
test
inc
mov
cmps
mov
cmp
mov
cmp
stos
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
data16
add
add
push
mov
add
add
data16
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
add
out
add
out
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
data16
add
add
push
mov
add
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
stos
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
test
(bad)
test
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
es
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
data16
add
data16
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
stos
add
stos
push
stos
add
push
stos
add
stos
add
stos
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
cmps
stos
cmps
stos
add
xchg
stos
add
xchg
stos
add
cmps
stos
add
cmps
stos
add
xchg
stos
add
xchg
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
data16
add
data16
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
add
es
add
es
add
push
stos
add
push
stos
out
add
out
add
(bad)
test
add
out
add
out
add
(bad)
test
add
cmps
test
add
xchg
test
add
cmps
test
add
xchg
test
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
add
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
data16
add
add
push
mov
add
add
data16
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
out
add
(bad)
scas
add
(bad)
scas
add
out
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
scas
add
scas
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
out
add
out
add
(bad)
scas
add
(bad)
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
cmps
scas
add
cmps
scas
add
xchg
scas
add
xchg
scas
add
data16
add
data16
add
push
scas
push
scas
add
data16
add
data16
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
es
add
es
add
push
scas
add
push
scas
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
out
add
(bad)
lods
add
(bad)
lods
add
out
add
out
add
(bad)
lods
add
(bad)
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
cmps
lods
add
cmps
lods
add
xchg
lods
add
xchg
lods
add
data16
add
data16
add
push
lods
add
push
lods
add
data16
add
data16
add
push
lods
add
push
lods
lods
add
lods
add
push
lods
add
push
lods
add
lods
add
lods
add
push
lods
add
push
lods
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
out
add
out
add
(bad)
stos
add
(bad)
stos
add
retf
loopne
int3
ret
loopne
int3
mov
lods
add
jg
and
data16
mov
add
and
sub
inc
push
addr16
inc
inc
jp
inc
xor
mov
inc
sub
inc
and
mov
inc
push
mov
inc
sbb
mov
inc
and
inc
sbb
cmp
add
ror
mov
imul
dec
add
ja
inc
clc
hlt
pop
clc
mov
and
call
dec
int
push
xchg
lock
clc
mov
xchg
std
dec
ja
inc
cld
inc
push
add
jbe
dec
hlt
cld
jmp
push
and
sbb
add
rcl
dec
mov
pusha
or
xor
(bad)
jg
mov
add
add
add
add
in
imul
push
in
mov
pop
xchg
and
addr16
mov
inc
add
inc
std
jge
and
aam
rol
ret
ret
loopne
int3
mov
and
sub
mov
inc
movs
mov
inc
push
jp
inc
dec
push
mov
inc
add
cmp
inc
pop
dec
mov
inc
pop
addr16
inc
sbb
inc
and
inc
sbb
mov
inc
adc
pop
mov
inc
loop
mov
inc
rcr
mov
inc
int
mov
inc
mov
data16
xor
add
add
add
add
jb
sbb
add
push
jmp
scas
mov
add
icebp
cld
mov
std
call
mov
add
adc
cmp
aad
inc
jge
cmp
or
das
cmp
lods
add
test
jle
push
xchg
jg
sub
or
cs
add
lods
data16
add
adc
test
cmp
jmp
jno
add
add
xchg
dec
cld
cld
out
dec
fwait
mov
hlt
imul
test
jge
push
xchg
jg
sub
cld
add
or
jg
in
aad
call
add
cmp
je
jg
add
aad
add
lods
jge
xor
hlt
jo
push
out
hlt
push
cs
mov
movs
cld
(bad)
jg
fcomp
stc
(bad)
int3
mov
ss
stos
leave
mov
inc
xchg
push
mov
inc
movs
popa
mov
inc
call
inc
add
push
pop
mov
inc
ins
pop
mov
inc
dec
lods
data16
(bad)
(bad)
jg
mov
xor
jmp
add
cld
mov
jge
cmp
ret
mov
inc
repz
inc
call
dec
jmp
aas
push
add
jg
test
add
data16
xchg
int3
dec
ss
stos
les
inc
call
inc
push
arpl
inc
ins
pop
mov
inc
dec
pop
mov
inc
dec
push
mov
add
(bad)
std
(bad)
jg
mov
sbb
jmp
add
outs
lods
add
cld
icebp
cld
mov
test
jge
mov
call
xchg
cmp
xor
call
div
push
and
jge
push
cmps
xor
pop
mov
stc
(bad)
int3
mov
xor
push
add
add
addr16
repnz
mov
sbb
add
imul
scas
xor
or
aad
add
jge
jnp
inc
or
aad
call
call
cmp
hlt
rcl
stos
xor
fs
lds
add
test
xor
or
in
(bad)
int3
ret
clc
(bad)
int3
mov
xor
sub
cmp
shl
jg
add
add
xchg
cld
cld
in
dec
and
inc
ja
cmp
cmc
js
mov
fimul
inc
cli
(bad)
int3
cmp
(bad)
int3
stos
xor
sub
test
xor
cld
hlt
js
mov
scas
add
jg
pop
mov
xor
clc
add
clc
cmp
mov
hlt
add
add
in
push
shr
mov
aam
xchg
and
(bad)
int3
retf
stc
(bad)
int3
ret
stc
(bad)
int3
mov
xor
push
shl
jg
add
jbe
cmp
cld
in
dec
jae
inc
adc
mov
mov
dec
dec
mov
adc
add
jg
cld
jmp
add
add
dec
call
dec
stc
(bad)
int3
inc
stc
(bad)
int3
cmp
(bad)
int3
stos
xor
sub
test
sub
jg
jl
jg
add
jnp
out
scas
rol
or
in
or
stos
lods
add
jg
pop
mov
jge
jle
inc
cld
hlt
jg
cmp
loope
inc
add
hlt
mov
add
fld
mov
outs
mov
add
lahf
test
cmp
sbb
inc
dec
icebp
movq
cmp
hlt
jb
add
dec
clc
add
lsl
cmp
mov
std
or
push
xchg
cmp
jl
cld
mov
out
shl
icebp
mov
cmp
add
stos
mov
in
jb
mov
std
push
pop
ss
call
imul
inc
lock
popa
lock
lods
test
mov
lock
jp
mov
lods
add
lods
data16
loopne
shl
test
cmp
jmp
ss
add
hlt
jns
mov
std
inc
(bad)
ss
hlt
jno
and
in
mov
add
jg
ins
and
jno
mov
jecxz
push
hlt
imul
mov
movs
cld
(bad)
jg
into
mov
out
hlt
imul
or
push
add
ss
cld
into
ss
or
cmp
lods
icebp
rol
add
push
test
xor
jge
xor
adc
xchg
das
rcl
loopne
mov
icebp
push
enter
icebp
(bad)
int3
ret
icebp
(bad)
int3
mov
ss
jmp
pop
mov
mov
inc
xor
jno
mov
fld
clc
hlt
js
mov
loope
add
add
add
jg
add
js
shr
lods
add
hlt
outs
clc
adc
add
sahf
shr
lods
add
hlt
ja
mov
xor
call
mov
jmp
adc
test
mov
inc
mov
stc
bound
test
mov
push
jae
test
add
add
add
mov
add
stc
(bad)
cmp
(bad)
(bad)
jg
test
xor
hlt
outs
in
call
pop
add
mov
cs
dec
or
test
gs
dec
push
mov
push
jge
test
mov
dec
jge
clc
gs
test
mov
inc
jge
stc
inc
add
stos
scas
jge
xrstor
jae
mov
jp
mov
cmp
add
clc
cmp
loope
add
in
in
out
icebp
call
xor
pop
mov
xor
mov
xor
mov
in
xchg
lods
test
cmp
mov
xor
sub
inc
xor
loopne
add
jno
mov
mov
push
fwait
ss
call
adc
mov
lds
cld
into
push
inc
mov
aad
inc
scas
jge
dec
xchg
sbb
xor
add
lods
icebp
sar
in
ins
adc
jns
mov
mov
dec
ja
inc
and
cmp
add
add
add
or
add
add
add
cmp
mov
xchg
aas
test
test
xor
sbb
xor
or
sub
shl
lods
add
push
add
ja
test
xor
jmp
push
inc
push
add
call
mov
jnp
inc
xchg
mov
lods
add
xor
add
ins
sbb
cmp
imul
ins
push
mov
test
jnp
add
push
cld
(bad)
jg
iret
mov
xchg
xor
add
push
push
and
xor
and
aad
sti
js
jge
xor
call
hlt
addr16
add
or
jmp
icebp
inc
add
call
test
xor
jae
mov
out
clc
jg
add
adc
test
sub
add
jo
mov
add
out
jge
jg
add
jae
add
js
xor
cmp
jg
add
add
lock
jg
add
jg
add
mov
aas
and
lods
add
jmp
(bad)
mov
lods
test
sub
dec
add
jg
ins
or
aam
inc
outs
xchg
sub
jle
mov
lds
or
sub
(bad)
jmp
call
dec
sub
hlt
push
add
dec
mov
add
movs
test
sub
outs
add
cmps
and
push
xor
mov
(bad)
cmp
nop
fadd
and
sub
(bad)
jo
jge
ja
cmp
hlt
imul
push
fwait
es
in
jno
add
add
jg
ins
sub
pop
fadd
mov
test
sub
add
add
xchg
sub
scas
sub
jle
push
add
in
push
xlat
retf
idiv
loopne
mov
mov
test
daa
cmp
jl
xor
inc
lds
push
xchg
sub
repnz
lock
cmp
add
jg
in
hlt
cmp
push
ja
cmp
js
dec
push
add
cmps
push
add
jg
dec
lock
push
or
jo
test
jg
test
das
jns
jg
jl
jg
add
ret
add
test
daa
push
and
iret
add
jg
ins
adc
aaa
xchg
jg
jg
add
mov
add
jg
dec
lock
outs
sbb
jg
add
add
(bad)
cs
fmul
cmp
push
mov
fld
call
mov
lds
mov
cdq
push
mov
movs
test
es
lock
add
add
or
jg
iret
mov
and
lock
call
add
sbb
add
inc
int
push
fbld
xor
inc
lds
or
outs
sbb
mov
add
jg
(bad)
int3
ins
(bad)
jns
arpl
mov
ret
mov
es
inc
jae
add
add
jbe
cmp
cld
in
cld
mov
fld
or
xchg
cld
add
add
std
inc
xor
hlt
mov
dec
cld
(bad)
jmp
add
test
lods
cmp
dec
mov
inc
cld
push
mov
push
ret
dec
and
push
add
or
hlt
push
cmp
dec
cld
sbb
test
and
cld
fs
mov
jmp
sub
inc
xchg
cmp
hlt
imul
push
fwait
es
in
jb
mov
es
clc
add
clc
mov
es
hlt
imul
push
xchg
dec
lock
jno
mov
es
cld
mov
lods
add
jbe
dec
hlt
cld
jmp
add
(bad)
and
sbb
and
or
lds
test
jge
jnp
test
jge
dec
(bad)
and
add
movs
dec
call
cld
icebp
add
aas
popa
adc
dec
push
cmps
test
in
add
in
mov
stos
cmp
and
test
sub
jmp
call
add
inc
jmp
stos
and
sub
test
and
in
push
std
push
fwait
and
call
imul
inc
lock
pop
lock
lods
test
stos
dec
lock
and
js
lods
add
lods
data16
loopne
shr
test
add
lods
add
cs
cld
hlt
jg
cmp
mov
loopne
mov
and
hlt
add
in
adc
data16
outs
in
mov
inc
adc
jl
push
sar
inc
push
mov
inc
jmp
test
and
jmp
movs
xchg
and
jo
mov
inc
sbb
add
outs
fmul
xchg
adc
addr16
hlt
jg
push
in
test
jle
dec
ja
nop
dec
jnp
add
sub
fnstcw
and
hlt
push
inc
xchg
xor
adc
arpl
jmp
hlt
retf
dec
loop
int3
inc
loop
int3
cmp
(bad)
int3
stos
sub
sub
mov
add
add
cmp
adc
add
shr
mov
push
je
push
push
shr
mov
push
arpl
push
jae
push
jae
push
inc
mov
push
dec
cmp
inc
inc
push
ja
push
popa
inc
push
jb
push
gs
push
add
imul
dec
add
pop
pop
or
shl
push
call
cld
call
xor
and
and
xlat
push
repz
das
mov
call
das
lds
les
mov
cmp
mov
movs
icebp
rol
push
mov
test
and
or
add
dec
loop
int3
inc
loop
int3
cmp
(bad)
int3
retf
sub
inc
dec
add
add
cmp
adc
add
add
hlt
mov
movs
xor
mov
sar
addr16
adc
inc
stos
jge
jle
test
shr
es
or
(bad)
loopne
jge
mov
dec
cld
cld
out
sub
ret
add
shr
add
mov
in
push
mov
imul
std
xchg
es
hlt
enter
lods
(bad)
int3
dec
loope
int3
inc
loope
int3
cmp
(bad)
int3
retf
sub
inc
dec
add
add
cmp
adc
add
cld
dec
or
stos
mov
jns
jg
add
push
pop
and
clc
add
adc
test
shr
clc
cld
xchg
and
push
ret
(bad)
int3
retf
loopne
int3
ret
loopne
int3
mov
es
stos
mov
rol
jg
cmp
shl
add
add
hlt
mov
xor
mov
rol
dec
jae
nop
inc
sub
mov
fyl2x
jne
add
aad
inc
inc
and
add
inc
loop
int3
cmp
(bad)
int3
retf
sub
mov
add
cmp
shr
add
add
hlt
mov
xor
mov
jge
cmps
jnp
cmc
aam
icebp
add
add
mov
jg
popa
scas
add
dec
and
or
lds
add
add
add
add
and
cld
cld
in
sub
in
(bad)
js
mov
adc
imul
jne
shr
push
std
xchg
and
clc
hlt
leave
push
ret
(bad)
int3
inc
loope
int3
cmp
(bad)
int3
retf
sub
call
add
xchg
sub
add
call
add
iret
icebp
add
test
es
hlt
imul
(bad)
mov
iret
icebp
(bad)
cli
pop
cmc
jmp
iret
icebp
cmp
icebp
mov
jo
(bad)
js
jnp
je
icebp
add
add
lods
add
add
pop
sti
push
iret
dec
lea
push
repz
call
cmp
jge
add
cmps
shl
(bad)
jg
add
into
dec
rol
mov
or
in
hlt
and
clc
into
xchg
hlt
cmp
push
iret
and
into
icebp
mov
(bad)
inc
and
add
lock
inc
cmc
jmp
lods
add
and
cmp
xchg
add
xchg
cld
push
and
call
icebp
push
and
into
icebp
invd
jl
mov
push
cmc
push
and
into
icebp
mov
and
call
stos
dec
sub
and
or
test
add
push
mov
and
(bad)
call
int
pop
outs
ins
add
enter
(bad)
int
mov
add
int
call
jp
cmovo
jl
xchg
int
mov
jne
inc
int
cmp
xchg
hlt
cmp
pop
int
mov
dec
cmc
dec
test
iret
aad
repnz
jge
jnp
test
int
push
add
gs
adc
dec
call
add
cld
icebp
or
lock
or
aad
neg
int3
jnp
dec
mov
rcl
or
jg
jnp
mov
icebp
inc
mov
int3
pop
(bad)
cli
jg
call
enter
repz
test
icebp
outs
inc
xor
jo
pop
mov
cmc
jmp
mov
jmp
repz
add
inc
int3
icebp
cmp
cmp
cmp
cmp
cli
xchg
jmp
push
mov
jmp
int3
icebp
gs
xor
add
inc
mov
cmc
push
dec
mov
call
jnp
aam
icebp
gs
retf
aas
(bad)
cli
outs
cmc
(bad)
mov
(bad)
icebp
inc
jnp
movs
retf
icebp
shl
cli
add
nop
retf
ins
mov
idiv
cmp
ja
icebp
jmp
repz
gs
icebp
cmp
idiv
pop
retf
imul
(bad)
idiv
dec
pop
mov
jmp
retf
icebp
inc
inc
xor
cli
and
mov
idiv
adc
test
icebp
call
retf
mov
retf
cli
scas
cmc
inc
add
pop
mov
jmp
jnp
(bad)
retf
shl
cli
mov
add
add
mov
dec
retf
mov
retf
cli
pushf
cmc
jmp
mov
jmp
repz
push
retf
inc
xor
sti
inc
retf
add
mov
inc
add
retf
cmp
or
or
add
cli
movs
cmc
(bad)
clc
jno
test
repz
in
icebp
je
das
push
sti
ror
inc
mov
cmc
inc
pop
mov
call
repz
movs
leave
icebp
jne
das
adc
cwde
leave
fs
cli
mov
dec
(bad)
icebp
inc
out
jnp
je
icebp
popa
add
inc
xor
sti
pusha
leave
(bad)
mov
cmc
call
mov
call
out
jnp
xor
icebp
cmp
sbb
sub
aas
(bad)
cli
xchg
cmc
call
scas
mov
inc
out
jnp
add
icebp
shl
sti
lock
jno
jmp
jp
test
icebp
jmp
jnp
(bad)
enter
xor
mov
add
je
jmp
(bad)
icebp
jmp
out
jnp
xchg
enter
xor
or
mov
cmc
push
mov
(bad)
fucomi
jnp
push
enter
xor
dec
enter
pop
cmc
(bad)
cmp
test
(bad)
icebp
(bad)
jg
add
call
cmp
xchg
cld
or
add
clc
mov
call
xchg
in
test
mul
or
rol
add
sub
cli
mov
ret
jg
jl
jge
add
js
call
add
inc
pop
cmp
add
icebp
cli
dec
(bad)
dec
inc
add
cmp
(bad)
icebp
push
hlt
cmp
cli
and
dec
push
cmp
hlt
xor
cli
clc
(bad)
push
dec
mov
cmp
add
icebp
cli
rol
dec
push
adc
jl
mov
icebp
push
add
icebp
cli
test
dec
dec
mov
push
add
adc
add
add
add
ret
sub
(bad)
icebp
push
addr16
jmp
mov
sti
pop
mov
sti
retf
add
jg
ror
lods
std
mov
ret
into
xor
xor
(bad)
icebp
push
add
(bad)
sti
adc
dec
mov
cwde
cmc
inc
pop
call
cmp
add
cli
push
test
add
pop
test
sub
(bad)
add
and
call
cld
lock
iret
fdivr
add
sti
add
mov
aad
mov
mov
test
lods
cmp
(bad)
push
movs
jmp
adc
popf
rol
mov
pop
and
icebp
push
hlt
pop
rcl
add
icebp
cli
adc
push
mov
sbb
inc
pop
test
dec
aad
imul
les
mov
std
test
enter
cmp
cmp
add
(bad)
sti
test
push
mov
xchg
cmc
call
(bad)
icebp
add
mov
mov
add
adc
push
test
pop
test
add
add
add
outs
(bad)
icebp
jmp
(bad)
icebp
push
hlt
sub
call
cld
call
cmp
jl
push
sti
sbb
dec
mov
mov
test
dec
cmp
xlat
push
jmp
std
rol
mov
pop
(bad)
add
call
cli
add
test
dec
mov
mov
call
enter
aad
test
popa
sar
(bad)
icebp
dec
ss
scas
ss
push
ret
icebp
push
hlt
sbb
sti
inc
ret
dec
mov
xchg
cmc
push
pop
call
cmp
mov
das
ins
add
add
dec
pop
test
pusha
test
add
dec
test
in
icebp
push
hlt
sbb
call
cld
jmp
cmp
jl
push
sti
mov
push
mov
jmp
idiv
cwde
pop
test
das
test
ret
addr16
jmp
jo
mov
mov
inc
test
icebp
(bad)
cld
push
cli
inc
ret
add
add
(bad)
(bad)
jg
mov
and
jbe
call
cs
lea
jge
inc
pop
test
dec
ret
mul
lea
mov
test
das
ret
mul
lea
mov
push
(bad)
icebp
dec
dec
test
push
cmc
dec
add
ror
imul
adc
jmp
test
scas
ror
push
push
or
jno
xor
dec
mov
xchg
cmc
jmp
pop
call
cmp
jge
xchg
icebp
(bad)
jg
jl
jg
add
jl
push
sti
loopne
push
mov
push
mov
mov
enter
jmp
icebp
dec
test
shl
xchg
lock
jmp
sbb
mov
icebp
push
hlt
push
push
add
icebp
cli
jo
dec
mov
sbb
jmp
test
scas
aad
hlt
dec
sar
push
mov
shr
dec
xor
call
adc
add
(bad)
sti
or
dec
mov
nop
cmc
(bad)
clc
pop
call
add
mov
add
popa
cmc
call
pop
test
pop
test
dec
xor
xchg
mov
icebp
push
hlt
xor
call
cld
call
cmp
jl
push
sti
js
dec
mov
mov
test
add
add
add
repz
lods
xor
mov
in
(bad)
cmp
mov
inc
jg
sbb
push
add
test
add
icebp
cli
or
cmc
(bad)
clc
pop
test
dec
aad
repz
jge
jae
xchg
iret
cmp
icebp
jmp
xor
xor
hlt
sub
sti
add
mov
xchg
cmc
call
mov
mov
dec
add
or
jmp
test
pop
test
scas
xor
hlt
daa
and
call
cld
call
cmp
jl
push
sti
adc
dec
mov
mov
test
add
dec
xor
out
in
call
sub
inc
jg
jnp
mov
icebp
push
add
rcl
icebp
cli
mov
mov
call
ret
cs
repz
jge
mov
adc
shr
jmp
sub
hlt
and
sti
cmp
cli
mov
jmp
pop
call
add
add
add
add
xchg
adc
mov
call
cld
icebp
add
adc
cmc
dec
lods
ins
pmuludq
(bad)
sti
mov
mov
adc
cwde
sub
daa
push
dec
ret
hlt
rcl
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
dec
add
dec
add
and
sbb
dec
add
and
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
and
add
dec
add
dec
add
and
cmp
dec
add
and
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
and
dec
add
and
sub
dec
add
and
inc
and
cmp
dec
add
dec
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
mov
and
ins
and
jo
dec
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lods
and
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
pop
and
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
mov
and
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
and
shl
dec
add
dec
add
add
dec
add
add
add
call
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
add
add
and
enter
add
add
in
dec
add
and
shl
add
and
push
and
les
dec
add
dec
add
and
in
and
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
pusha
and
xchg
and
cwde
and
movs
and
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
and
mov
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
dec
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fs
jp
ins
imul
jae
jbe
jae
imul
imul
jb
push
and
je
popa
jbe
outs
ins
gs
and
imul
gs
and
jo
ins
imul
popa
jb
outs
ja
data16
outs
je
popa
jb
and
bound
jb
jae
ins
outs
je
and
ins
imul
jbe
jb
outs
fs
gs
jae
jae
popa
bound
push
outs
ins
jo
ins
jae
popa
ins
ins
outs
outs
and
imul
and
jb
je
bound
ja
ins
imul
jne
popa
je
and
imul
arpl
imul
data16
gs
outs
outs
gs
jae
bound
arpl
gs
fs
jae
outs
addr16
outs
jae
ins
imul
jp
jae
ins
popa
je
arpl
ins
outs
arpl
and
gs
popa
jns
and
outs
.byte
ins
gs
